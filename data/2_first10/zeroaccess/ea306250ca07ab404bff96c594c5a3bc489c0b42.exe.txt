push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
add
jl
jle
jl
xlat
cmp
ffree
pop
push
add
cmpps
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
and
jge
adc
mov
push
or
pushl
jne
in
push
sub
mov
insl
mov
mov
icebp
fstpl
pop
mov
stos
adc
fildll
loop
or
and
dec
ljmp
or
insl
jg
orl
dec
cli
insb
xlat
shl
fcomps
fmuls
lcall
fimull
or
inc
arpl
in
inc
inc
xor
icebp
movsl
outsl
int3
pop
mov
xor
fwait
outsb
outsb
mov
xchg
or
in
push
jne
icebp
sahf
ljmp
imul
outsb
pop
xchg
pop
mov
dec
cld
scas
jmp
xchg
mov
sahf
pop
mull
cmp
int
jmp
mov
push
dec
hlt
xor
rorb
dec
stc
movl
mov
add
in
push
mov
hlt
jmp
adc
add
outsl
adc
xchg
push
jl
and
in
jge
fcompl
out
mov
push
bound
cmp
add
mov
mov
xchg
je
jle
pop
add
mov
clc
sbb
or
push
adc
and
loope
inc
jbe
les
inc
xchg
out
xchg
call
out
imul
sub
test
in
std
dec
test
aas
xor
sub
push
andl
sub
fistps
add
dec
loope
dec
in
movsb
push
test
pop
mov
pop
loop
test
loope
cmp
in
adc
lea
mov
dec
sahf
sbb
movsl
or
add
cmp
jns
push
mov
out
mov
inc
jb
cmpsl
and
mov
iret
and
aam
repz
pop
or
pop
sbb
mov
sub
ss
cld
jecxz
fmulp
pop
adc
pop
aaa
pop
repz
andl
or
xor
xchg
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
lea
addr16
jl
jle
jl
xchg
lcall
lea
jmp
out
xor
xchg
and
sbb
add
fdivrl
push
adc
adc
inc
inc
cmp
popa
lock
pushf
inc
dec
push
outsl
mov
out
ss
push
or
std
add
xor
imul
sbb
or
sbb
mov
xchg
mov
fcompl
aam
cld
stos
ljmp
cmp
jecxz
or
pop
stos
or
jns
in
lret
imul
in
mov
mov
sub
stos
loop
out
cld
fwait
or
ja
mov
mov
cltd
icebp
jl
sti
shll
fidivs
and
icebp
into
dec
aam
shlb
sbb
mov
outsl
push
pop
sti
test
shr
jne
mov
mov
dec
adc
xchg
icebp
iret
sbb
inc
cmpsl
dec
sar
js
add
mov
mov
or
mov
jno
cmpb
add
sbb
stc
push
lret
push
lret
mov
cwtl
mov
out
push
inc
mov
sbb
pop
push
xchg
sub
cmc
js
sbb
mov
mov
dec
jae
adc
sarl
int3
imul
or
adc
mov
test
adc
mov
inc
jae
fldenv
ja
xor
cmp
jmp
fsubl
adc
and
fbstp
pop
xlat
sub
mov
rcrl
imul
fnstcw
dec
xchg
iret
aaa
push
cmpsb
xor
ret
loope
ffreep
push
pushl
push
fcomps
out
mov
hlt
and
cmc
push
pop
jae
aad
lahf
inc
pop
mulb
shlb
add
inc
fs
mov
push
add
jge
mov
or
dec
ja
mov
xchg
je
popf
or
ljmp
mov
push
lock
jg
adc
fs
outsb
test
sub
add
shlb
in
xlat
cmp
pop
sbb
lds
jns
xor
sub
movsb
mov
mov
xor
fcos
jne
add
sbbb
cmpsb
adc
mov
mov
jge
jmp
lds
dec
push
push
adc
jmp
fldt
lods
xchg
jg
add
imul
mov
sub
cmp
mov
in
lea
xchg
aaa
jge
xchg
pop
xor
jne,pn
sub
sbb
jno
push
fiaddl
insl
dec
dec
jbe
push
mov
pop
sbb
ss
jecxz
lock
mov
aaa
inc
add
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
fldt
push
dec
jnp
jl
jle
jl
xor
jns
add
add
in
int3
imul
outsb
outsl
out
adc
cwtl
out
dec
mov
sbb
bound
jnp
sbb
call
dec
repnz
fidivs
lea
outsl
fildll
cltd
inc
push
out
scas
aam
or
outsl
sbb
in
and
xor
daa
aad
in
rorb
dec
rol
popa
cwtl
or
pop
xor
mov
push
movsl
roll
push
lea
popl
imul
push
inc
cs
in
fdivrl
ret
mov
adc
out
lcall
jne
or
push
cmp
fistl
xor
cwtl
ss
mov
orl
test
idivb
decb
fprem1
fs
push
fcmovnbe
sarb
xchg
ret
stos
inc
dec
inc
fdiv
push
fwait
stc
jg
aad
xchg
add
call
movsw
fidivs
mov
lret
adc
xor
pop
rorb
and
or
push
loopne
roll
add
out
xchg
mov
add
and
fs
in
or
cmpsl
out
mov
and
sbb
into
inc
out
jnp
les
xor
or
sub
out
adc
cltd
jb
popa
fwait
ret
sbb
dec
aam
gs
or
mov
lcall
mov
push
sbb
imul
push
adc
cmp
mov
mov
dec
or
adc
pop
lds
adc
cmp
adc
and
lock
ds
fadds
xchg
popf
or
mov
pop
xchg
call
adc
cmpsl
cmpsb
push
sbb
xchg
push
adc
sub
lds
in
inc
xor
int
sub
shl
push
add
xchg
add
jne
rclb
test
sbb
repnz
push
pop
mov
and
scas
sub
inc
jmp
jo
xor
push
jns
sbb
pop
ljmp
mov
ljmp
repz
sarl
lret
sub
movsb
or
inc
xchg
fstl
shrb
cmp
insl
test
adc
inc
nop
dec
test
daa
pushl
mov
cmp
pop
cmp
flds
cwtl
flds
int3
sub
test
int
out
push
leave
mov
and
mov
or
cmp
push
lea
add
mov
fwait
sbb
fmull
lock
ja
jl
int
xchg
inc
pop
xchg
mov
bound
outsl
fadd
cmp
lods
cltd
push
or
mov
xor
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
mov
mov
popa
jne
or
ja
gs
mov
add
xchg
iret
jnp
xchg
sub
fwait
push
jbe
ljmp
mov
mov
negb
jle
adc
mov
loope
scas
repnz
cltd
push
adc
pop
xchg
cmpsl
shl
adc
pop
sbb
or
je
jp
fs
fbld
push
loop
mov
stos
repz
push
dec
push
pop
stos
cmpsl
orl
and
dec
iret
cmp
add
add
js
mov
out
jo
dec
shl
nop
mov
push
fwait
jns
or
xchg
pop
or
in
xor
pop
pop
std
sub
mov
test
sbb
fs
fs
mov
aam
int
push
cld
movsb
xchg
divl
clc
mov
jb
jecxz
cmpl
addr16
and
sub
cli
out
rcrl
aad
stos
call
dec
or
sub
vfnmadd132pd
scas
mov
mov
inc
or
xchg
mov
dec
mov
xchg
test
repnz
push
frndint
shll
inc
fisubrl
es
mov
gs
ljmp
pop
int
jp
mov
xor
orb
sti
in
mov
sub
xor
shll
out
push
push
xlat
mov
mov
and
inc
mov
sub
stos
pop
test
daa
push
arpl
mov
jns
clc
sbb
pop
jns
cli
cli
and
jg
adc
mov
xchg
dec
mov
add
mov
jae
add
daa
xor
push
or
jbe
or
adc
mov
jge
outsl
in
in
stc
je
jge
enter
mov
bound
sbb
loopne
sbb
inc
push
bound
outsl
xor
adc
pop
cmp
in
xor
adc
repz
lcall
imul
add
mov
mov
js
dec
or
adc
roll
lds
cmpsb
pop
aad
xor
fs
in
aas
sub
sar
lcall
addr16
gs
mov
cmpsb
add
sbb
repnz
repnz
fisubs
gs
insb
test
cltd
and
leave
test
sbb
push
push
mov
jae
pop
enter
pop
jb
add
not
fcoms
dec
jp
pop
mov
clc
ss
fs
pop
loopne
sub
inc
adc
push
adc
out
add
or
hlt
aam
mov
mov
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
mov
jle
jl
dec
inc
in
sahf
sub
enter
stc
xor
sbb
sarb
pop
mov
mov
mov
dec
xor
sub
ja
das
repz
int3
out
pop
mov
xchg
arpl
inc
inc
lea
xor
and
add
sbb
stc
adc
dec
mov
clc
je
dec
sub
xor
movsb
and
mov
in
push
mov
dec
or
fiadds
test
sar
pop
sti
icebp
and
out
pop
packssdw
jo
lea
iret
out
and
mov
or
js
fcomps
shrl
mov
cmp
lea
cmp
clc
aas
xchg
xor
cmp
xchg
jl
mov
or
mov
cli
lods
and
and
cmp
push
aas
mov
loopne
clc
scas
inc
js
or
inc
jmp
and
test
add
pop
fcomps
fdivr
jle
jmp
in
add
jl
jmp
dec
inc
inc
adc
std
mov
mov
push
jle
mov
cmp
mov
sub
ret
scas
les
ret
adc
in
lds
cld
jb
and
jnp
pop
sti
cmp
repz
mov
xchg
fs
add
jg
or
rcrb
jmp
adc
xchg
pop
and
mov
xor
pop
incb
and
out
jnp
lods
inc
jle
scas
popf
sbb
pusha
inc
shrl
dec
mov
arpl
adc
jmp
sarb
fidivrl
mov
cltd
dec
data16
aaa
mov
or
mov
xchg
std
loopne
jg
mov
cmpb
xchg
lods
test
faddl
jb
add
aad
ljmp
icebp
rcll
pusha
push
cltd
mov
adc
cltd
fneni(8087
out
ja
outsb
outsl
fs
sti
jno
imul
push
aad
pop
loopne
mov
mov
movsb
mov
and
mov
pop
fwait
rcrb
testb
insl
jmp
test
int3
mov
pushf
jnp
mov
push
arpl
ja
pusha
dec
push
into
add
sub
sti
mov
and
imul
add
stos
jbe
es
iret
scas
cmp
scas
lods
scas
stos
push
jl
and
pushl
fimull
pop
call
incb
dec
roll
in
or
push
hlt
mov
outsl
mov
cmp
fnsave
adc
jge
jecxz
popa
call
insl
je
sbb
push
fiadds
mov
xorb
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
cli
popf
lock
mov
scas
sbb
les
cmpsb
jno
out
or
or
mov
lret
stos
rclb
movsb
iret
mov
and
lods
jae
pop
stos
insl
test
ret
out
sbb
rolb
rclb
je
push
jo
out
lcall
sub
fiaddl
jo
inc
loope
pop
or
push
pop
out
clc
shrb
xchg
mov
inc
mov
repz
inc
pop
xlat
movsw
xlat
cmp
aas
add
je
mov
and
jo
cmp
mov
adc
sbb
push
lahf
mov
rorl
decl
push
cld
cmp
adc
and
xchg
fildl
inc
xor
xor
adc
scas
sbb
mov
rorb
cs
rcll
call
or
push
movsl
push
iret
dec
lock
outsb
and
mov
mov
sub
lcall
pop
cmpsl
cmp
mov
scas
mov
rcl
push
sub
add
stos
xor
das
aam
int3
dec
pop
hlt
push
popf
pop
scas
sbbl
sub
sbb
xchg
xchg
sub
ja
jne
xor
ja
cmpb
add
inc
push
or
data16
pop
stc
sub
cmp
shrl
das
andl
mov
add
cmp
int
push
mov
mov
loop
scas
adc
push
jecxz
cld
push
int3
test
xor
push
je
and
scas
mov
adc
pop
mov
and
mov
dec
inc
sub
fimull
mov
and
push
sub
mov
ljmp
push
cmp
aad
gs
jns
lea
mov
imul
sahf
ret
shl
adc
adc
xor
dec
repz
fmulp
mov
xchg
add
repnz
mov
or
into
int
repnz
or
aad
jecxz
adc
lahf
lret
jp
mov
in
divl
stos
mov
jl
inc
fmull
adc
in
cmpsl
cmp
push
jne
and
sub
pop
dec
pop
xor
out
mov
inc
je
mov
xchg
neg
lock
pop
dec
mov
rcrl
ss
sub
out
inc
sbb
cld
jnp
lret
push
jl
push
sbb
jae
push
lea
xchg
mov
pop
push
cmc
cmp
and
jmp
sbb
test
sbb
shlb
cmp
popa
pop
mov
out
inc
and
lea
mov
mov
cmp
jmp
mov
jne
adcb
xor
xor
ljmp
jl
lret
insb
or
mov
aad
jns
leave
dec
or
out
mov
scas
ss
ffreep
rorl
and
jecxz
inc
daa
sbb
xchg
inc
add
cmp
js
mov
mov
inc
or
push
jle
or
xchg
xchg
dec
in
mov
sbb
mov
mov
fistpl
push
test
mov
pop
inc
lcall
mov
pop
inc
ljmp
aad
testl
aam
sbb
repz
lret
scas
mov
pop
loop
test
das
shl
movsl
jg
jl
adc
mov
shl
daa
fbld
loop
xchg
rol
shll
push
sbb
mov
sti
pop
outsb
in
stos
cld
sub
movsl
iret
in
sub
xor
cmpsb
sbb
and
inc
ds
sbb
cmpsb
mov
xor
mov
pushf
sub
xchg
lret
int
pop
sbb
mov
xor
sarb
add
aaa
cmp
mov
sbb
rcrb
mov
les
cld
xor
cmpsb
sbb
adc
pop
jg
popa
xor
jge
xchg
xchg
jnp
cmp
sbb
xlat
sub
jb
cmp
jg
jp
popf
cli
xchg
add
pop
outsb
mov
test
mov
pushf
add
push
daa
xor
sub
sahf
adc
adc
repnz
xor
or
sbb
xor
adc
mov
shl
rolb
xchg
fnsave
leave
repnz
mov
dec
out
sub
and
lret
cmp
or
lret
lock
aad
pop
push
adc
cmp
loopne
das
adc
stos
lods
shll
jmp
mov
shlb
push
dec
xor
jl
cs
gs
outsl
mov
adc
xchg
jbe
dec
stos
lcall
test
leave
rcr
faddp
out
lea
mov
ljmp
outsl
mov
or
dec
dec
sti
hlt
mov
subl
sub
mov
push
push
sbb
or
or
imul
inc
jb
test
in
pushf
mov
ja
mov
insb
test
pop
cmp
pushf
xor
das
in
cmpsb
pop
mov
popa
insb
stc
mov
js
cltd
mov
jg
and
inc
push
cmp
dec
dec
clc
lret
push
dec
pop
adc
lret
add
testb
sub
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
mov
rcrb
or
jle
jl
push
sbb
dec
add
ss
pop
aad
gs
mov
adc
scas
inc
mov
sbb
cmp
xchg
and
shlb
pop
xchg
aam
mul
mov
stos
sub
dec
mov
cli
inc
sbb
mov
mov
mov
mov
sub
add
push
stos
ljmp
hlt
outsl
or
dec
xchg
pushf
push
icebp
bound
sbb
xchg
push
ret
xor
in
sarb
jmp
or
lds
add
stos
clc
aam
movsl
movsl
cmpsl
insb
xlat
loope
loope
leave
pop
sub
sbb
dec
scas
cltd
mov
fs
inc
lods
xor
mov
jg
testb
push
pusha
insl
xchg
jae
adc
loop
xor
clc
jo
stc
fdivrs
int3
ljmp
test
sbbb
or
hlt
out
lcall
ds
loope
inc
jae
insl
lcall
inc
pop
mov
dec
arpl
jb
mov
mov
xchg
test
stos
adc
sbb
clc
jb
pop
push
mov
lcall
jl
cwtl
es
std
repnz
mov
lds
adc
stos
or
in
xor
sbb
push
push
xor
movsl
iret
outsl
stos
mov
fs
xor
cltd
sbb
pushf
sbb
push
dec
inc
cmp
push
pop
pop
lods
mov
xchg
xchg
roll
ret
and
in
testl
cli
jmp
push
negb
aas
popf
bound
pop
rep
jg
incb
insb
mov
cmp
out
pop
mov
dec
cmp
loopne
pop
pop
stc
scas
daa
jg
es
xchg
test
lcall
fists
insl
inc
adc
leave
sub
or
aas
hlt
adc
out
adc
idivl
pop
aaa
and
data16
fwait
jns
push
or
pop
repz
divl
jo
pop
add
jae
xlat
jns
jnp
or
loope
daa
push
or
push
enter
fxch
lcall
adc
mov
les
popa
mov
and
mov
xor
cwtl
pop
push
cmp
push
mov
mov
lds
inc
test
repz
cs
std
imul
leave
inc
daa
or
adc
mov
rorl
cmpsb
jge
mov
mulb
mov
mov
sbb
mov
leave
clc
stc
loope
pop
cltd
insb
sbb
int
cmpsl
and
or
and
ds
mov
into
push
loope
push
imul
adc
inc
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
cmp
adc
jl
push
in
mov
jecxz
pop
jmp
loopne
pop
mov
jbe
mov
cmp
xchg
xchg
mov
pop
mov
ljmp
icebp
lcall
mov
fisttpl
imul
mov
cld
and
push
sbb
inc
dec
and
lret
lods
test
or
xchg
pop
daa
aas
cs
sbb
ficoms
jp
loop
adc
xor
pop
push
cmc
imul
cmp
orb
je
ss
sub
fwait
adc
mov
int3
pop
in
xchg
or
test
inc
movsl
adc
in
aas
ret
jne
jb
fwait
sub
mov
pop
mov
mov
test
test
out
mov
inc
mov
sub
push
dec
or
inc
movsb
jno
pusha
in
les
xor
sbb
cmp
push
cmc
test
int
dec
dec
in
push
sbb
loope
adc
in
sbb
push
push
loopne
cld
mov
and
or
add
push
cmpsb
in
test
cmp
int
cmp
enter
pop
cld
mov
out
push
dec
mov
xchg
lock
dec
or
mov
mov
mov
mov
mov
dec
lods
outsl
jne
xor
cltd
push
aam
std
ds
jbe
push
mov
outsb
jo
mov
cld
pop
push
out
insl
das
data16
pop
pop
xchg
mov
sahf
fwait
in
ret
jmp
adcl
xor
cmpsl
testl
aas
stos
jecxz
sahf
addr16
aam
xor
fidivrl
sbb
iret
jg
pop
lock
fisttpl
xor
and
cmc
enter
aaa
sbbb
fbstp
xchg
lock
adc
or
outsl
jp
jle
dec
test
inc
inc
jno
add
cmp
gs
rcr
inc
push
mov
popa
and
bound
ds
inc
jb
mov
inc
test
imull
pop
cmpsb
je
adc
dec
inc
xchg
stos
or
pop
or
daa
movsb
in
outsb
sbb
mov
flds
or
sub
dec
xor
fstps
loop
cmp
hlt
andl
or
inc
push
lret
in
push
fucomp
xor
adc
or
sbb
mov
fisubrs
sub
lret
pop
movsb
jbe
jle
sub
frstor
scas
test
call
mov
in
js
cmp
setae
inc
push
jnp
sbb
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
shlb
addr16
jl
fildl
outsl
lcall
hlt
add
mov
fidivrl
aaa
shlb
movsb
xchg
sub
cwtl
loopne
xor
outsb
mov
pop
aas
les
stc
sub
adc
mov
xchg
nop
scas
add
mov
and
enter
and
xchg
jmp
out
dec
js
clc
adc
and
cmp
mov
rolb
mov
ret
jb
mov
loope
xchg
and
out
xor
sbb
dec
js
out
orb
mov
rolb
mov
inc
popf
push
sbb
mov
add
and
jns
mov
addb
leave
test
sbb
shl
scas
out
fisttpll
cli
add
repz
mov
sbb
icebp
repz
jecxz
cmpsb
iret
rcr
inc
and
lcall
fdivrp
pop
cmpl
pop
mov
daa
movsb
fisubrl
sbb
adc
push
stos
mov
pop
fistpl
mov
xchg
add
mov
leave
sahf
pop
call
test
rcll
repnz
inc
aad
or
sub
cmp
outsb
ljmp
push
push
xor
imul
cmp
push
sub
fwait
adc
mov
in
mov
rcrl
add
and
daa
ja
insl
es
icebp
adc
lahf
sbb
cmc
mov
decb
pusha
push
shll
jge
sahf
push
mov
and
pop
mov
sub
add
test
jnp
fdivl
int
dec
xchg
clc
push
xchg
jne
lcall
mov
mov
cltd
lahf
cmp
icebp
cmpsl
ss
out
push
test
fcmovnbe
popa
lock
xor
sbb
push
gs
sbb
inc
cmp
mov
inc
mov
sub
mov
clc
adc
out
sbb
fdivr
daa
aam
pop
mov
push
addr16
ret
outsb
test
mov
dec
push
sbb
mov
lcall
arpl
fstl
mov
inc
xlat
rcrb
iret
cld
sbb
sti
inc
sbb
add
sbb
fldcw
jmp
xchg
test
ljmp
lahf
mov
divl
lcall
lea
rorb
pop
enter
cld
lock
push
outsb
xor
in
jno
add
mov
adc
repz
dec
stc
xchg
or
push
jnp
fsubs
jns
test
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
ja
lcall
jg
jl
stc
push
adc
jge
jg
je
fnstenv
jmp
nop
sub
mov
in
pop
scas
push
mov
lahf
xchg
mov
cwtl
mov
cmp
jb
sbb
or
cmp
cltd
rcrl
popl
push
insb
bound
xor
idivl
jb
out
icebp
fidivrs
jg
mov
pop
sbb
mov
mov
dec
std
mov
ja
cmp
fadd
fdivrs
in
dec
outsb
mov
or
fdivrs
cmpsb
lcall
sub
fwait
ds
jb
daa
xchg
xor
push
jne
adc
movsl
movsl
dec
cmp
mov
or
add
jns
xchg
sub
mov
mov
pop
add
or
jnp
adc
daa
add
cld
out
movsl
sbb
xor
int3
sub
dec
fwait
es
sbb
movsl
rclb
jmp
data16
mov
xchg
cmp
cmc
cld
std
cmp
iret
and
mov
cmpsl
xor
out
imul
or
das
in
pop
int
and
xchg
pop
push
push
inc
scas
sahf
ret
mov
mov
movsb
sub
jle
cwtl
jge
rclb
bound
add
mov
jmp
jmp
push
daa
aas
pop
mov
sbb
cltd
out
pop
outsb
mov
jo
lock
cld
push
mov
in
inc
mov
outsb
push
fidivrs
push
and
loopne
ja
pop
mov
push
das
sbb
mov
and
xorl
lret
add
xor
push
xchg
scas
imul
orb
out
aaa
imul
jmp
out
mov
ja
jno
int
js
lret
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
push
pop
sbb
jl
stos
and
les
cmp
mov
cli
nop
call
je
sbb
mov
mov
cmpsb
aad
fdivrl
fildll
outsl
xor
outsb
or
dec
test
arpl
dec
in
mov
jmp
sub
push
stos
sub
dec
jae
or
adc
hlt
or
mov
dec
ret
in
dec
push
xchg
lcall
enter
and
inc
xchg
out
test
lret
pop
inc
push
scas
mov
aaa
mov
test
and
sarb
je
push
clc
mov
push
imulb
popa
data16
mov
push
aaa
daa
loopne
add
jge
jno
jle
popa
les
sub
pop
fwait
pop
add
enter
sub
rorl
scas
pop
lcall
jg
mov
mov
inc
inc
repz
pop
or
test
movsb
and
or
cmp
xchg
sahf
aas
cmp
adc
mov
inc
push
xchg
adc
stc
mov
cwtl
pop
call
hlt
jb
std
push
or
dec
jne
xchg
sbb
mov
ficompl
or
jne
jle
out
in
stc
pop
pop
mov
out
xchg
fcomps
and
xchg
fldenv
mov
mov
fs
lahf
mov
cwtl
push
mov
or
rcrl
push
pop
das
in
subl
jno
inc
nop
icebp
arpl
jg
mov
push
pop
outsb
fsubrs
test
pop
stos
adc
mov
cmp
test
insl
fadd
adc
popf
jmp
imul
push
xchg
ss
loope
jno
xchg
scas
push
jle
cmp
mov
aas
push
inc
ss
std
gs
das
adcl
cmp
imul
cmp
gs
inc
clc
jmp
sarb
sarl
lahf
xchg
pop
leave
je
jl
insl
jg
jl
adc
call
jne
or
hlt
pop
sysret
arpl
push
lods
dec
insb
fildl
sbb
push
xchg
adc
pusha
pop
jno
xor
cmp
inc
in
jl
fcmovnu
xor
lret
iret
push
arpl
mov
jnp
mov
ja
out
adc
out
test
cmc
ficoml
or
xor
addr16
inc
gs
lahf
call
mov
icebp
cs
fdivs
xchg
mov
pop
dec
fwait
lret
jp
pop
cmpsl
cmp
push
jae
stc
icebp
jae
sahf
imul
ja
in
push
or
xor
and
push
adc
jp
mov
jbe
iret
push
sub
mov
in
sti
loopne
scas
push
mov
push
repnz
rorb
movsl
mov
fdivs
scas
insl
stc
mov
ret
dec
lds
xor
sbb
inc
mov
ljmp
in
or
femms
cmc
mov
gs
mov
cs
mov
mov
sbb
imul
scas
cmp
stos
mul
sahf
test
cmc
cmp
cmp
xchg
out
mov
shll
jecxz
adc
lret
lods
scas
imul
shll
std
or
mov
dec
inc
dec
test
test
jmp
sbb
adc
cltd
jle
pop
dec
inc
push
pop
inc
adc
sti
mov
mov
lahf
test
inc
jne
cmp
add
gs
mov
sub
mov
rcrb
scas
imul
push
stos
sysenter
and
fdivl
mov
sbb
loop
adc
jnp
adc
outsl
cmp
int
xor
mov
jmp
addr16
or
arpl
aas
cwtl
pop
pop
popf
inc
cmp
jl
insl
jg
jl
fisttpll
aas
cmp
jecxz
adc
iret
test
mov
repz
cltd
or
cmp
test
xor
decb
mov
pop
lret
mov
adc
nop
jne
pushf
ljmp
mov
int
xor
je
jo
cmc
scas
lret
adc
movsb
lret
inc
sti
cld
sub
sub
leave
addr16
lea
xor
dec
sbb
lea
ja
dec
movsl
mov
fwait
xor
push
dec
repnz
mov
loopne
mov
daa
test
mov
mov
ja
push
xor
jbe
iret
jmp
std
push
mov
pushf
pop
mov
pop
dec
dec
in
jnp
dec
loope
aas
dec
and
lahf
fmull
sti
sarb
sahf
xor
cmp
mov
icebp
xlat
iret
and
sub
rolb
pop
sti
movl
inc
lea
lods
cltd
jb
flds
push
jmp
or
inc
xor
jo
push
mov
sahf
out
jle
xor
adc
mov
leave
and
adc
incb
xor
jmp
mov
sub
inc
in
mov
negl
xchg
loop
xchg
insb
cmpsb
cmpsb
rcrb
and
test
fcoml
hlt
xchg
movsb
pop
imul
mov
rcl
adc
int
incb
cli
or
mov
cmp
and
mov
subl
fildll
call
enter
into
inc
repz
fadd
add
xchg
cs
cmpsl
or
stos
cs
pop
imul
and
out
jno
pop
test
xor
dec
mov
push
push
pusha
add
lods
jge
dec
pop
sub
add
fisubrl
call
push
mov
test
push
sub
pusha
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
or
jl
insl
jg
jl
adcb
test
push
sub
xchg
leave
add
out
test
cs
les
jb
test
bound
fadd
jb
mov
popf
xlat
or
stc
cld
mov
in
and
imul
es
mov
sub
adc
lods
or
sbb
dec
dec
fnsave
lods
icebp
jecxz
js
loope
jae
shll
mov
andb
xor
mull
int
jp
adc
loop
ljmp
aad
lahf
packssdw
std
ficoml
xor
vmovhps
adc
daa
dec
cltd
or
test
jno
rclb
lahf
jp
push
test
push
mov
scas
inc
fdivrp
or
pop
push
cmp
pop
push
pop
or
adc
sbb
stos
mov
cmpsl
inc
add
les
lock
or
mov
inc
in
dec
ljmp
jle
popa
dec
outsl
mov
fcomps
clc
lret
dec
lahf
lea
sub
ljmp
ret
cs
xor
xor
mov
out
insb
mov
dec
ljmp
rclb
int
sbbl
dec
mov
push
repnz
adc
scas
in
jae
dec
pop
mov
lcall
xchg
pop
cmpsl
xor
and
jns
aad
lahf
dec
movsl
cmp
test
test
in
jl
sti
push
xor
mov
clc
ror
fwait
cmp
into
and
push
sbb
sarb
in
imul
or
sub
repz
jbe
dec
xor
pop
pop
mov
ficoms
clc
mov
loop
xchg
pop
push
imulb
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
fsubs
jno
dec
add
jne
add
fidivrl
push
jmp
mov
enter
stos
mov
xchg
and
jae
repz
cmpsb
mov
dec
fucomi
add
decb
mov
adc
int3
mov
xchg
inc
pop
or
arpl
xchg
push
or
loopne
into
xorb
push
xchg
mov
and
mov
mov
xlat
imulb
aaa
adc
daa
dec
push
shll
sub
pushf
add
xor
js
xchg
mov
push
xor
or
fisubl
test
xor
bound
leave
xchg
std
mov
ret
icebp
imul
in
and
in
mov
ja
inc
dec
push
xchg
jg
imull
mov
pusha
inc
repz
out
push
fldenv
jmp
xchg
testl
in
clc
scas
ret
sbb
cmc
mov
jae
cld
test
mov
fs
xchg
bound
and
push
cmp
add
mul
or
jo
mov
xchg
test
cmpsl
xchg
pop
and
cmp
push
push
mov
sub
dec
jp
sbb
adcb
sbb
fimuls
aad
cmp
sarb
cmpsl
push
mov
insl
mov
fldlg2
xchg
fistpl
mov
fimuls
fcmovnb
addr16
cmp
repnz
filds
ret
xchg
bnd
xor
movsb
mov
push
lea
xchg
inc
cmp
inc
sti
int
je
mov
jae
jg
jo
fcmovu
push
and
jne
shrb
lods
stos
jge
scas
int3
adcl
inc
lods
xchg
adc
popa
or
xor
sbb
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
cli
xor
test
jl
stos
jg
jl
jbe
mov
fadds
dec
xor
jge
icebp
sub
mov
jnp
add
xor
xlat
xchg
push
sbb
hlt
cmp
arpl
mov
push
je
and
or
jmp
daa
mov
ja
cs
xchg
push
fs
xchg
leave
fwait
bound
adc
inc
sbb
jnp
lods
hlt
sub
xor
fstpt
mull
decl
xchg
iret
mov
xchg
repz
cwtl
fwait
lret
outsl
push
add
pop
add
fisttpl
clc
xchg
pop
test
repnz
jnp
xacquire
pop
push
lods
mov
xchg
arpl
lahf
mov
xchg
cwtl
add
mov
or
addl
mov
test
inc
mov
cltd
push
cs
push
inc
test
enter
xor
mov
leave
test
aas
add
xor
repnz
xor
adc
or
sub
push
mov
sub
scas
xchg
inc
leave
mov
sub
enter
mov
xlat
add
in
dec
push
jge
jne
add
fimuls
jne
fwait
xchg
sbb
cmp
sub
ror
mov
stos
cwtl
mov
jle
fstp
int3
xchg
fdivs
pop
outsl
in
daa
sarb
sub
jns
stos
rol
cld
lret
arpl
mull
or
jb
push
or
lods
mov
add
std
out
out
jge
jp
lods
dec
loope
lock
mov
ljmp
dec
and
fadd
push
orl
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
xchg
jne
out
jl
stos
jg
jl
aas
test
lcall
or
lods
stc
jo
loopne
cmc
sti
pop
outsb
into
dec
imul
or
sbb
movsl
inc
and
sbb
add
cmp
lods
fnsave
and
dec
xlat
lret
mov
std
pop
and
paddb
sub
test
or
loope
imul
enter
push
and
lret
push
ljmp
enter
hlt
push
xor
sbb
repnz
xchg
fwait
movsb
sub
fdivr
pop
jno
mov
ss
out
mov
cmp
dec
mov
jg
jb
inc
dec
or
mov
mov
ffree
cli
adc
mov
or
mov
lds
xchg
sti
adc
cwtl
ljmp
addb
rcrl
xor
fisubl
shrb
sbb
out
out
push
add
icebp
dec
mov
cmp
out
fsubrp
scas
cs
std
pop
imul
push
pop
repz
sub
mov
sub
movsl
mov
stc
and
inc
movsb
fwait
adc
sbb
inc
dec
cld
negb
sub
sub
adc
pop
ja
xor
mov
sbb
fnstsw
add
jmp
and
mov
aas
mov
mov
jmp
pushf
xchg
and
pop
sti
xchg
std
ljmp
and
pop
jbe
sub
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
mov
jg
jl
ret
cmp
sbb
and
jns
insl
rclb
je
or
std
and
cmc
imull
add
leave
sbb
out
fldl
sub
and
jge
mov
mov
into
cmc
mov
icebp
mov
fmulp
scas
lds
dec
and
je
add
sti
lods
pop
jo
popf
fisttps
jo
lock
arpl
pop
data16
push
repnz
sbb
inc
push
les
pop
fs
jbe
add
dec
test
lds
cld
je
loopne
mov
sub
fisttpll
lock
mov
cmp
pop
arpl
xor
stc
stos
iret
outsb
inc
cmp
repnz
movsb
movzbl
outsb
jnp
sub
cld
rolb
pop
leave
addr16
movsb
rorb
or
add
and
mov
adcl
xor
dec
test
add
loope
jecxz
imul
int
lret
sbb
push
fisubrs
push
inc
icebp
pop
pop
inc
addr16
and
lea
xchg
leave
pop
clc
sbb
cmpsb
cli
cmpsl
rcll
push
mov
lea
and
jns
je
xlat
lods
pop
sbb
or
ret
lock
aam
dec
jb
push
shlb
ror
aad
or
imul
ja
shll
loope
std
pop
std
xor
ret
mov
outsl
pop
pushf
sub
nop
gs
jmp
movsb
jp
or
es
outsl
scas
push
daa
les
insb
ljmp
lea
cmp
mov
inc
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
and
jl
jg
jl
mov
test
xchg
sbb
les
ss
movsl
sbb
in
cmp
cmpsb
getsec
xor
inc
in
insl
jo
and
ret
jb
dec
mov
xor
inc
xchg
loope
out
jno
add
lret
inc
cmp
in
in
xor
jmp
pushf
cmp
mov
adc
in
mov
sbb
or
push
rorl
and
arpl
mov
aas
filds
pushf
push
jne
jne
enter
and
rolb
xchg
clc
ja
mov
xor
std
and
mov
jp
aad
pop
subb
push
jl
xor
aad
andl
jne
jmp
into
xchg
ret
idivb
dec
push
cmp
shrl
sub
lods
and
xchg
int3
enter
out
xchg
lret
in
test
sti
jnp
inc
mov
or
in
and
pop
inc
fsubrl
fs
fildll
fucomip
cmp
xor
or
shl
jne
xchg
add
outsb
pop
lret
push
mov
iret
ret
inc
dec
mov
pop
cmp
sbb
daa
jae
push
ret
es
movsb
fs
sub
mov
push
add
or
xchg
imul
and
mov
cs
jno
clc
add
jle
mov
bound
in
mov
fists
pop
push
pop
icebp
aam
stc
dec
add
xchg
push
push
xchg
out
push
mov
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
cmpsb
push
ret
jl
stos
jg
jl
cmc
mov
push
outsb
sub
pop
jbe
cmp
into
outsl
sbb
leave
or
fistpl
je
jns
std
aad
cs
addr16
push
mov
pop
mov
into
push
mov
inc
mov
jo
inc
mov
add
inc
test
fwait
mov
in
jbe
outsb
mov
mov
scas
push
sbb
nop
into
add
jge
push
and
fidivrs
pop
fcoms
pop
xchg
mov
dec
mov
aaa
insl
imulb
es
shlb
mov
dec
mov
fstpl
mov
shll
and
and
mov
ret
pop
xchg
js
neg
push
mov
dec
mov
sbb
adcl
sub
movsb
stos
repz
insb
mov
idiv
mov
test
arpl
mov
out
aas
bound
xchg
cwtl
and
jge
add
out
or
adc
scas
hlt
scas
loop
sub
or
cld
sti
mov
sti
inc
nop
cld
add
push
add
xor
movsl
movsb
xor
or
rorl
sarb
add
lods
lcall
jle
ret
mov
lcall
fldenv
mov
xchg
mov
xchg
mov
pop
inc
popf
orl
hlt
push
cli
mov
xor
loop
bound
jmp
mov
adc
ret
mov
and
add
and
orb
jge
test
loope
pop
lea
repz
add
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
jmp
das
jl
stos
jg
jl
jl
ret
push
sub
out
pop
sarb
pop
xor
out
and
sbb
lahf
testl
add
hlt
or
push
sub
movsl
mov
je
stc
scas
clc
xchg
test
mov
cli
sbb
xchg
pop
jmp
iret
inc
xchg
push
int
shll
or
into
in
xchg
out
sbb
stc
jae
mov
fisubl
add
daa
imul
or
inc
jb
jns
mov
cmp
scas
iret
fisttps
aaa
inc
pop
add
test
cli
and
stos
scas
rcll
adc
cmpsb
mov
in
push
loop
push
sub
inc
imul
dec
push
xchg
mov
stos
dec
mov
iret
inc
sbb
cmp
xchg
push
sub
mov
leave
xchg
add
cmp
lahf
movsb
jb
mov
xor
sbb
out
sbb
inc
daa
jp
iret
mov
inc
xor
pop
pop
mov
lcall
cmc
push
pop
mov
xchg
stos
cmc
adc
inc
aas
cld
jnp
xchg
outsl
xchg
jns
pop
push
xchg
and
mov
fildll
dec
ret
push
or
xor
jnp
push
out
testb
notl
scas
cs
ret
sti
mov
pop
pop
sahf
inc
inc
jns
xchg
outsl
nop
in
or
jbe
leave
pop
clc
stc
cmp
ret
sub
cwtl
inc
repnz
mov
iret
xor
arpl
mov
les
push
arpl
and
push
or
add
test
add
add
or
mov
int
add
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
lods
jp
cmpl
repnz
adc
push
sub
mov
inc
test
cmp
or
lret
test
frstor
or
sub
cmc
outsl
lock
jnp
test
dec
pop
mov
mov
dec
cltd
sbb
mov
jo
dec
mov
insl
and
cmpsb
inc
xor
call
fistl
mov
jle
pop
push
lret
mov
xor
xchg
inc
pop
pop
or
cmp
cld
out
sub
mov
mov
add
dec
rol
mov
push
inc
sub
shlb
mov
mov
jl
xor
loop
mov
dec
xor
test
dec
test
mov
lods
mov
ret
je
insl
adc
repz
jmp
mov
pushf
inc
adc
into
and
inc
and
xlat
in
ja
push
out
into
mov
insb
push
wbinvd
shl
add
addb
rol
cmpsl
imul
loop
add
rolb
inc
addr16
inc
sbb
jmp
ds
jae
sub
hlt
cmp
lds
ret
mov
test
dec
xor
and
dec
mov
pushf
pop
aas
push
sbbb
and
pop
xor
or
out
mov
xchg
adc
imull
daa
fistps
adc
das
sbb
testb
add
push
out
jecxz
lds
je
test
mov
dec
loop
pop
pushf
dec
jbe
mov
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
dec
pop
movsb
les
jg
jl
jb
imul
mov
lods
jmp
add
cmpsb
inc
sbb
or
xchg
ficomps
rcl
sub
mov
faddl
xchg
xchg
inc
push
loope
xchg
mov
mov
lds
add
xchg
mov
inc
xchg
pop
add
pop
xchg
ffree
xor
clc
roll
push
pop
sub
aaa
dec
inc
out
sbbl
jp
dec
sbbl
out
mov
aad
add
clc
xchg
cli
mov
out
das
bound
jle
ja
imul
movhps
scas
cltd
push
popf
lods
leave
hlt
ret
mov
or
mov
test
mov
fwait
aad
test
inc
daa
sbb
rcrl
cld
std
leave
push
arpl
out
lods
cwtl
xlat
push
sub
mov
mov
jl
mov
ds
loope
jg
inc
addr16
lea
imul
jae
lcall
add
sbb
js
mov
notb
cmpsl
xchg
adc
sub
lods
or
movsb
xchg
arpl
or
loopne
xor
pop
lea
cmp
mov
imul
push
fucomip
in
out
push
aam
ss
stos
cmp
mov
mov
clc
cmpb
dec
sub
mov
jge
mov
sbb
and
xchg
je
int3
repz
dec
and
aad
dec
xor
pop
xchg
jbe
test
lcall
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
mov
sub
jl
jns
jl
orb
pop
popl
dec
stos
xor
adc
push
daa
xchg
push
fwait
test
jae
add
test
mov
inc
outsb
mov
sti
cmpsl
xor
std
push
push
jno
andl
bound
js
cmp
pushf
jbe
push
fs
xor
in
loope
push
dec
in
mov
int3
lods
ja
pop
or
inc
fs
fnstsw
and
adc
push
test
xchg
pop
dec
filds
or
xchg
push
xchg
jecxz
std
daa
mov
jno
mov
sbb
push
shlb
lods
push
adc
gs
test
clc
jns
incl
icebp
jno
xor
xor
sar
or
imul
push
dec
lret
sarb
call
xor
sub
out
imul
push
adc
lea
test
mov
dec
int3
test
ret
popf
pusha
mov
cmp
jns
insl
and
dec
pop
lret
outsl
jl
sbb
jbe
nop
fadds
test
out
push
xchg
aam
xor
cli
aad
aas
xor
sub
dec
add
or
pusha
inc
jle
add
in
orb
jns
xchg
adc
jbe
jmp
in
xlat
sub
insl
andl
add
or
pushw
pop
cmp
dec
stos
fistpll
cmpsb
jmp
in
or
lcall
xor
iret
mov
hlt
aad
dec
cmpsb
add
xchg
movsl
dec
out
lea
addr16
addr16
testl
inc
push
mov
scas
inc
sbb
movlps
and
pop
jp
cmp
inc
movl
idivb
loop
aam
fwait
out
mov
xchg
movsb
pop
addr16
add
jnp
mov
jne
jg
pop
push
loop
pusha
out
pop
mov
into
and
and
nop
in
sti
dec
pop
andb
mov
add
pop
scas
inc
jmp
inc
mov
and
and
movb
pop
mov
fwait
jecxz
popf
test
mov
jle
mov
das
fdivrl
xorl
xchg
fisttpll
mov
push
idivl
push
lods
sub
jp
cs
andb
jnp
pop
aad
ja
sbb
enter
sbb
in
sbb
vmovdqu
pop
sub
test
jo
repz
adc
add
pop
mov
test
mov
mov
inc
std
lods
das
xor
call
jns
mov
mov
xor
mov
es
mov
xor
xor
lea
outsl
xchg
pop
repnz
inc
imul
xor
mov
stos
lcall
enter
and
ficompl
adc
jle
xchg
scas
or
clc
fadd
je
push
rol
mov
xchg
scas
lock
test
jns
pop
ljmp
adc
fwait
sbb
js
pop
xlat
lock
cwtl
mov
dec
and
movsb
lahf
mov
lahf
jp
sub
cmc
cltd
adc
or
daa
pop
jmp
divb
icebp
sbb
inc
push
xor
cmpsb
out
xor
sub
mov
filds
test
cld
push
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
mov
jl
mov
jl
jne
popa
xor
movsl
inc
dec
sahf
lret
repz
cmp
push
inc
out
stc
ds
jnp
jl
dec
mov
add
fbstp
inc
test
rol
fsub
mov
pop
sbb
jle
dec
dec
std
pop
jo
push
rcrl
add
shrb
cmc
and
out
push
xor
stos
lahf
xor
jns
adc
mov
clc
xchg
cmp
jb
or
dec
icebp
push
dec
mov
lret
stos
ss
inc
subb
add
mov
jle
cli
add
test
cwtl
inc
bound
dec
scas
xor
lahf
lea
pusha
addr16
cli
aam
shl
std
jp
fs
sub
jnp
xchg
clc
jle
bound
inc
add
imul
out
adc
in
clc
inc
sti
mov
loopne
repz
scas
arpl
jnp
xor
test
les
out
push
and
stos
mov
inc
jbe
fs
xor
pop
mov
push
outsl
mov
and
rcll
add
mov
mov
push
xor
mov
scas
mov
xchg
movsl
xchg
dec
push
push
and
bound
pop
pushf
pop
imul
imulb
or
pop
mov
daa
loop
add
adc
nop
sbb
out
push
mov
and
rep
push
push
xchg
and
loopne
insb
rorl
loop
add
jle
pop
mov
mov
lods
push
push
xchg
push
jl
sarb
cmp
xchg
pushf
push
adc
xchg
and
mov
cmp
push
sbb
inc
js
and
lret
ret
push
leave
movsl
clc
inc
xorl
sti
lret
add
or
push
ret
lock
in
mov
rcrb
in
mov
shll
jecxz
xchg
outsb
mov
movsb
inc
xor
or
xlat
mov
and
roll
in
inc
xchg
test
popa
daa
sbb
in
loopne
and
or
sub
pop
inc
xor
xchg
add
out
movsb
sbb
addb
pop
inc
scas
push
loope,pt
shlb
insb
push
fnsave
cmp
adc
in
ret
xchg
add
loop
std
dec
cbtw
mov
cmp
lret
xchg
push
movb
mov
lods
js
push
or
add
and
inc
lds
popa
aad
mov
cmp
scas
enter
mov
sar
lea
push
scas
aas
adcl
lahf
pop
sti
dec
into
pop
push
ja
imul
adcb
jnp
out
inc
and
sub
jmp
add
mov
mov
push
mov
xor
sub
jl
cmp
xchg
sub
jp
and
cs
jmp
mov
sbbb
push
xor
mov
cmp
outsl
xchg
out
sbb
xor
lea
jno
mov
xlat
sub
jo
bound
mov
mov
push
ret
or
lds
ret
dec
lds
cmp
and
lret
mov
ss
dec
in
pop
daa
cltd
pop
mov
lds
gs
pop
into
sbb
pop
cwtl
in
and
adc
cmp
repnz
mov
mov
inc
cld
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
add
outsb
xor
leave
xchg
or
loope
mov
aad
mov
jp
jnp
pop
jae
cmp
data16
xlat
jge
pop
add
jae
daa
in
pop
jo
pop
mov
pop
push
shrl
jge
dec
add
mov
mov
in
fldl
push
movsb
arpl
adc
dec
push
mov
add
out
inc
hlt
inc
loopne
stos
cltd
or
stc
repz
data16
std
lcall
mov
ds
or
push
jno
fwait
dec
xchg
pop
frstor
jp
push
test
imul
dec
sbb
push
decb
jecxz
lods
dec
cwtl
add
jp
adc
shll
push
enter
js
xchg
mov
mov
or
sbb
mov
test
test
push
jle
dec
lock
and
pop
data16
xor
push
cmp
cli
xor
fwait
rorb
dec
fdivs
pop
mov
xor
add
cmc
out
lock
mov
sarl
xchg
push
notl
fisttpll
mov
fwait
xchg
rorl
cmpsl
hlt
pop
js
mov
cli
mov
jmp
movsb
push
dec
push
push
jo
and
mov
hlt
ljmp
inc
dec
pop
xlat
lds
jb
pop
xchg
shr
adc
outsb
sti
sub
push
jle
jl
aas
add
sub
pop
add
clc
cld
jbe
add
shrb
iret
adc
xor
jne
dec
jnp
aad
sbb
inc
dec
pop
es
cmp
pop
xchg
test
cmp
mov
pop
int3
out
lcall
xchg
mov
lods
je
xchg
mov
leave
daa
mov
and
or
daa
cmp
stc
xor
stos
repz
pop
stos
insl
jle
negb
cltd
mov
fs
sbb
inc
jg
cwtl
dec
leave
lahf
dec
lcall
bound
xlat
sarb
pop
lcall
jno
ret
cmpl
int
cld
cwtl
adc
mov
and
ficompl
adc
sbb
aam
lods
imul
and
and
iret
stc
push
push
jl
ljmp
adc
pop
inc
fidivrs
clc
xor
push
mov
pop
sar
push
fadd
rcrl
push
and
ljmp
pop
arpl
jo
push
xorl
and
push
rcrl
sbb
mov
filds
xor
or
test
js
cmp
stos
cmpsl
xor
leave
jne
mov
push
ja
in
fists
jne
test
clc
pop
mov
test
mov
aaa
out
lods
and
lock
pop
push
leave
les
push
ljmp
bound
sbb
and
sbb
add
popf
cmp
push
sub
mov
inc
and
out
fwait
dec
cmp
fs
stos
lds
push
jne
in
movsb
lods
andl
loopne
cmp
jp
jp
push
lods
mov
xor
out
lahf
pop
cmpsl
and
push
addb
xor
inc
fcomip
adc
push
add
aam
sarb
cmpsb
bound
dec
ds
and
and
jmp
push
imul
dec
test
xchg
sbb
in
and
xorl
sub
mov
dec
repz
xchg
pop
js
in
popa
jns
rorl
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
rcrb
les
xorl
adc
imul
cs
push
push
add
jae
add
call
or
xor
jns
aad
loope
pushf
enter
fcoml
push
mov
icebp
push
push
jo
in
fldl
sbb
push
lahf
daa
in
xor
call
adc
lods
sub
inc
dec
xor
jle
into
lock
push
and
movsl
add
sbb
jmp
pusha
mov
push
sub
push
in
cmp
ds
jns
cld
outsb
bound
inc
adc
lret
enter
push
sahf
mov
lea
dec
sbb
int3
dec
rcll
inc
xlat
cld
lret
sbb
sub
pop
imul
jae
mov
mov
jb
xchg
mov
or
enter
xchg
cmc
sbb
in
cmp
adc
dec
jns
cmp
xor
add
push
je
lds
adc
fs
subl
sub
add
jns
cli
not
mov
pop
cmp
pop
lret
popf
sbb
out
jns
jmp
ret
movsb
mov
dec
jp
adc
mov
mov
push
aaa
imul
xchg
or
fwait
jmp
and
sub
clc
push
out
aam
inc
enter
std
outsl
ljmp
xchg
ret
es
arpl
cmpsl
sbb
loope
push
fisttps
dec
mov
xor
je
jmp
fidivrs
adc
xchg
cltd
push
adc
jmp
cmp
push
and
outsb
mov
outsl
xor
mov
bound
mov
and
push
pop
mov
scas
mov
int3
jge
fiaddl
insb
ja
arpl
aad
in
pop
or
adc
stc
inc
or
sub
stc
mov
pop
mov
jg
dec
stc
sbb
out
scas
imul
ja
pop
pop
sti
push
cmpb
xchg
pop
sbb
sbb
push
jp
push
ret
lea
pop
icebp
mov
jno
jb
in
leave
xor
xchg
push
or
inc
adc
or
ja
mov
int3
sahf
fwait
movsl
jl
ds
or
dec
lods
mov
xor
in
lahf
xchg
push
and
jbe
mov
or
jmp
hlt
add
lock
shl
mov
inc
push
cld
xor
enter
inc
jae
sub
add
out
adc
sbb
mov
push
popa
sbb
fisubrs
sbb
mov
push
inc
gs
jo
xchg
inc
mov
or
rorb
sbb
mov
movsl
add
movsl
add
and
xor
ret
mov
scas
inc
xor
xchg
in
lea
pop
adc
adc
mov
inc
sub
and
ret
dec
xor
cmp
xchg
pop
xchg
aas
repnz
lods
pop
mov
mov
ljmp
hlt
cmp
pop
inc
jno
push
xchg
push
lods
push
and
out
push
inc
xorb
iret
cmc
cli
and
or
cltd
dec
int
adc
stc
pop
fstpl
or
cmp
sub
xchg
mov
inc
fs
movsb
jmp
jnp
push
rol
das
test
dec
xchg
dec
xorpd
xchg
push
mov
rorb
xor
xor
dec
cmpsb
outsl
leave
or
test
or
dec
mov
lcall
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
add
pop
xor
jl
xor
jl
arpl
je
adc
mov
fsubs
xchg
jp
sahf
jmp
sub
add
add
pop
repz
jbe
clc
and
mov
outsl
xchg
ficompl
test
mov
xlat
cmp
in
lea
data16
les
movsb
mov
xor
sbb
setg
cli
dec
and
lock
lea
cltd
data16
hlt
dec
movsl
cmc
aaa
sub
or
jecxz
pop
outsb
into
hlt
int
xchg
dec
jp
sub
int3
out
test
push
into
loope
jg
mov
lods
int
out
popf
push
jg
add
pop
add
fwait
dec
cmp
xchg
sub
sarl
ror
lret
lret
ds
decb
pop
outsl
push
xchg
or
lea
cmp
ss
xlat
sub
dec
loop
sbb
dec
orl
and
sub
lods
add
cmp
jmp
push
outsb
shlb
movsl
imul
adc
movsb
loopne
jns
inc
cs
mov
and
sbb
push
xchg
aad
in
pop
cmpsb
and
jb
xor
iret
pop
test
jecxz
dec
dec
push
pop
outsb
mov
in
push
xor
ret
out
pop
mov
sarl
cli
aas
insb
ret
js
xchg
addr16
and
scas
scas
adc
rol
pop
shlb
fisttpl
jmp
lds
dec
out
xchg
iret
and
loop
adc
dec
pop
xchg
add
sub
inc
add
in
sbb
or
in
sub
and
jge
std
or
je
sbb
out
cmp
sbb
aad
dec
rcl
and
aaa
pushf
roll
je
sub
rcll
push
and
push
or
push
ret
xchg
aas
xchg
jo
dec
mov
js
cs
pop
fisttps
rorb
jg
xor
dec
dec
adc
cmp
icebp
dec
mov
mov
out
call
orl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
cmpsl
fmull
jl
xor
jl
sub
jl
fimuls
sahf
sub
xchg
je
cmp
fidivrl
xor
push
sti
ffreep
arpl
lcall
add
xchg
xlat
cmp
xchg
fimull
jl
adc
ds
fdivrs
test
adc
stc
lods
mov
sbb
dec
int
fisttpl
sub
out
popf
inc
pop
and
pop
mov
cmp
pop
or
repnz
mov
pop
lods
pop
loope
jno
mov
divb
or
outsl
sti
int3
mov
je
mov
push
add
lret
xchg
daa
dec
sbb
test
pop
sbb
push
imul
jnp
cmp
cmc
cli
aaa
mov
push
dec
push
push
notb
stos
adc
imul
mov
jno
cld
mov
and
pop
pop
das
mov
cld
pop
lds
pop
xchg
and
push
lcall
lds
add
or
jg
adc
jmp
fs
pop
or
add
je
dec
es
adc
cmovo
scas
daa
mov
xor
pop
or
mov
cli
push
aam
call
scas
mov
jg
testb
enter
pop
push
and
test
test
inc
pop
aad
ja
js
sbb
jecxz
add
insb
data16
lahf
movsb
or
loope
in
movsb
dec
add
test
push
jae
add
mov
int
je
xchg
aad
insb
lods
mov
call
insl
sbb
mov
cmp
js
shll
pop
xchg
or
aas
pop
xchg
mov
sub
add
sbbl
cmp
fidivl
leave
pop
and
lret
je
mov
cmp
or
add
insb
in
cmpl
add
cwtl
or
nop
push
dec
repnz
mov
aam
mov
add
je
sahf
mov
enter
push
add
fs
adc
xlat
pop
mov
jmp
or
mov
jo
xchg
jmp
push
test
test
jl
in
outsb
scas
xchg
repz
jo
inc
movsb
mov
int3
or
aaa
jmp
js
lds
insb
push
in
nop
cmp
popf
fstl
rcl
fwait
xchg
cs
push
or
int3
mov
loop
mov
or
insl
je
jo
push
push
out
or
mov
fidivrl
jbe
test
rorb
mov
orb
sbb
cwtl
pop
scas
inc
shlb
ds
pop
and
jg
gs
adc
cs
mov
jp
sti
mov
jo
jecxz
sahf
repz
cmp
in
loop
xchg
mov
data16
push
inc
adc
xchg
fidivrl
aam
pushf
lods
or
xor
repz
adc
addr16
lahf
or
xor
push
and
cmp
lds
test
insb
pop
nop
insl
mov
adc
mov
stos
mov
lea
bound
mov
lret
pop
adc
mov
jle
cwtl
xor
push
add
mov
js
add
lea
jge
dec
lds
test
fistl
xor
lods
fdiv
and
lret
stos
xor
test
pop
outsb
mov
jo
ret
scas
pushf
xchg
int
xchg
movsb
xor
sarb
das
mov
cmc
pop
imul
xchg
fnstcw
loop
shl
xor
cmp
xor
jno
in
pop
clc
loope
push
out
dec
push
mov
sti
repz
pop
pop
subl
lret
in
mov
ss
popf
cld
fnstcw
enter
fwait
cld
xchg
mov
pop
cltd
imul
push
sbbl
es
stos
scas
std
aaa
or
jmp
pop
data16
or
iret
mov
in
js
outsb
cmpsb
push
mov
leave
adc
mov
jecxz
push
movsb
out
movsb
xchg
ds
lds
in
push
imul
loopne
sub
lret
add
out
adc
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
mov
sarl
jl
rclb
push
and
fwait
sarl
push
aad
xchg
or
cwtl
int
cmc
roll
out
stos
mov
cmp
cld
cmp
and
test
cmp
push
shl
add
inc
fstpt
add
inc
shr
leave
js
jl
sarb
and
xor
out
insb
adc
mov
ret
aas
int3
mov
mov
rclb
icebp
mov
insl
cmpsl
jo
mov
inc
mov
mov
inc
and
push
cmc
mov
jns
cmp
outsb
adc
scas
jns
out
dec
stos
ljmp
add
jnp
in
sti
icebp
mulb
mov
adc
divb
xor
pop
mov
pop
test
jecxz
in
loopne
pop
call
fnstenv
xor
mov
push
jno
push
ret
sub
push
cld
mov
fwait
push
xor
pop
or
cmpsb
push
mov
push
arpl
inc
inc
push
xchg
or
fdivs
adc
adc
xchg
pop
movl
dec
inc
enter
jne
push
xchg
in
xor
clc
out
ljmp
adc
lret
or
ds
pop
ds
sub
sub
out
or
pop
cli
mov
popa
push
xor
jns
or
stos
push
test
jecxz
mov
cmpsb
dec
jp
and
cltd
or
icebp
inc
mov
insb
pusha
fldl
push
stos
dec
mov
cmp
nop
lock
test
cmpb
mov
ljmp
mov
repz
dec
out
xor
xlat
cmp
push
shlb
stos
cltd
je
mov
add
pop
xor
in
or
aad
clc
pushf
lock
add
inc
shr
cmp
pop
repz
and
push
mov
push
cwtl
dec
in
inc
mov
in
inc
iret
sahf
jmp
jbe
out
adc
out
mov
jle
fdivr
mov
inc
ss
sbb
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
ret
xlat
jns
jl
mov
sub
mov
cmpsb
fnstcw
jp
imul
loop
cs
jl
cltd
push
lcall
stos
cs
out
stc
xor
movsb
mov
mov
mov
cmovae
cld
mov
xor
dec
ucomiss
xor
frstor
shrb
or
mov
dec
jmp
gs
iret
jl
sub
sbb
mov
enter
inc
pop
rolb
add
roll
outsb
jnp
mov
cld
lock
or
lret
or
ds
mov
sub
jb
es
adc
sbb
dec
xchg
mov
bound
inc
xor
cmp
push
push
adc
mov
pop
or
vandnps
inc
mov
test
call
cld
jle
rol
invd
cmpsb
bound
xchg
dec
out
xor
and
stos
arpl
push
cmpsb
js
cli
iret
push
sarb
rcrb
sbb
sub
adc
or
mov
mov
fcmovnbe
xchg
mov
cld
jns
js
popf
cmpl
mov
sub
imulb
into
pop
mov
in
pusha
adc
daa
js
ret
mov
sub
shr
jg
adc
mov
mov
sub
adc
jmp
pop
push
sub
gs
imul
pop
pop
sbb
sarl
mov
test
and
fstpt
ror
mov
adc
jmp
jno
mov
arpl
mov
cmp
dec
fsts
push
ljmp
loope
inc
push
outsb
cmp
pushf
dec
addr16
jne
lahf
adc
mov
ficoms
mov
xchg
mov
insb
shl
push
adcl
and
dec
lds
popa
das
mov
mov
loop
shl
mov
pop
cmpsl
test
or
pop
loop
in
and
push
imul
inc
fmuls
add
sarl
lods
push
imul
ret
dec
inc
mov
aam
test
jl
sahf
mov
mov
add
loop
out
adc
gs
gs
mov
add
cmp
cmp
fisttps
imul
imul
mov
ja
mov
enter
icebp
pop
pop
xchg
lods
xchg
xchg
repz
push
jge
stos
sub
mov
dec
xor
enter
addr16
adc
inc
fnstenv
addr16
sub
and
lret
cmc
mov
int3
mov
das
push
in
push
dec
es
cs
loop
out
sbb
sbb
rolb
ret
popl
aas
sub
test
adc
gs
test
rorl
push
sbb
lret
imul
mov
popf
add
jle
mov
push
outsb
jno
out
jp
fistpl
into
hlt
jp
or
lahf
sbb
pop
lcall
jp
pushf
xor
xchg
and
dec
daa
add
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
out
outsl
mov
xlat
jns
jl
out
sub
cmc
and
in
mov
test
loop
mov
xchg
shlb
fisttps
inc
mov
iret
jne
lds
arpl
test
sub
sti
adcb
jp
in
mov
xchg
jmp
pop
cmp
testl
int3
xchg
jno
mov
repz
pop
psubusw
sbb
scas
inc
push
cwtl
push
lcall
fs
sbb
xor
sbb
or
mov
push
cmp
outsl
mov
fnstsw
push
shlb
dec
or
and
daa
inc
mov
pop
ja
push
ret
cs
and
or
test
sar
xor
xchg
clc
pushf
iret
dec
and
xchg
and
pop
lret
xchg
xchg
or
movsl
mov
test
and
lret
mov
sub
adc
aaa
push
xchg
aaa
jg
push
insb
ret
push
bound
xlat
jg
inc
outsl
mov
lret
sbb
and
sahf
xchg
cmc
and
out
jle
aaa
push
repnz
or
nop
loope
push
aas
cltd
sub
outsb
lods
adc
cmp
stos
lahf
mov
pop
bound
mov
inc
push
push
mov
and
insl
and
data16
xchg
adc
sbb
add
sub
loopne
or
rcrl
sbb
or
fiadds
mov
mov
cmp
or
leave
mov
leave
lods
cmp
dec
iret
mov
xor
jbe
dec
outsl
pop
inc
jns
stc
mov
add
loope
insl
pop
sbb
andl
jmp
xchg
and
mov
hlt
arpl
loop
lds
cmpsb
adc
xor
in
pusha
out
fcomip
int
adc
push
mov
jge
inc
adc
pop
stc
test
or
mov
lahf
adc
sbbb
std
and
cmp
push
incl
jnp
pop
orb
js
repnz
mov
mov
xorb
repz
push
jo
mov
setne
inc
pop
test
rolb
jmp
xchg
into
pop
add
shr
insl
and
xchg
inc
into
fwait
jb
jge
xchg
xor
mov
das
imul
popf
orb
psubw
mov
data16
xchg
or
iret
fmull
test
mov
mov
adc
nop
pop
jecxz
insb
push
dec
fldt
pushf
aam
cld
cld
ss
mov
mov
nop
arpl
sub
add
imul
cli
insb
mov
mov
pop
aad
addb
cmp
hlt
gs
mov
add
mov
bnd
jae
mov
scas
pop
popa
out
notl
push
imul
sub
inc
mov
cmp
xor
push
jns
dec
mov
sub
fldenv
sbb
icebp
in
jp
sti
inc
xchg
aaa
out
adc
int3
loopne
dec
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
sub
xor
xlat
jns
jl
mov
jne
out
or
dec
pop
and
sub
dec
xchg
xchg
into
aas
icebp
push
ret
fimuls
jg
test
outsl
shrb
or
inc
mov
mov
dec
jne
ss
pushf
popa
imul
inc
movsb
add
jmp
repz
or
jo
data16
adc
or
jge
cmpsb
adc
std
mov
cli
rol
cmp
push
in
mov
cmp
imul
xchg
push
push
xor
sti
test
xlat
sub
xchg
inc
movsb
fst
das
mov
fsubr
hlt
dec
push
pop
sub
fldenv
ret
jae
jg
mov
cwtl
loop
test
out
and
mov
xor
sub
test
test
in
pop
or
ds
inc
inc
mov
push
outsl
push
cmp
jne
dec
jb
or
int
lret
lea
loopne
movb
jns
pop
shll
movsl
mov
sub
or
je
mov
xchg
repnz
cmp
lret
into
jecxz
xchg
les
push
sti
xor
pop
push
xchg
ja
xchg
sbb
pusha
mov
jmp
int
adc
out
out
insl
jno
sbb
rcrb
test
out
icebp
push
sbb
repnz
icebp
movsl
push
dec
mov
dec
es
sub
int
cli
in
mov
jno
mov
push
xchg
pop
dec
popa
adc
movsl
xlat
call
adc
mov
jb
sbb
jmp
nop
rcrb
lods
jb
ja
mov
pop
or
xor
bound
sbb
dec
adc
pop
add
sti
push
int3
jmp
xor
adc
stos
pop
ds
lods
pop
xchg
xor
std
jmp
or
in
and
jae
jle
and
jb
shll
inc
aas
and
dec
fsubrl
mov
in
sub
popf
push
and
ret
sub
jnp
movsb
cld
lret
or
mov
jge
dec
cmp
outsl
jo
cmpsb
push
out
int
sub
repnz
out
out
fdivs
or
int3
adcl
or
adc
loopne
pop
das
call
xchg
and
out
jns
sub
adc
push
lret
xor
fsubs
enter
aas
movsl
sub
lods
inc
add
xchg
push
mov
aas
outsl
xor
arpl
pushf
clc
dec
and
xchg
push
fcoml
and
psubq
fists
sahf
adc
loop
mov
hlt
aaa
call
aas
iret
push
mov
sub
mov
inc
mov
add
arpl
bound
mov
lahf
dec
insl
daa
pop
sarb
add
daa
lret
fs
fcompl
sub
gs
loop
and
dec
push
sbb
sbb
add
mov
call
ja
or
or
bound
inc
arpl
mov
and
xchg
jp
mov
outsl
outsb
jp
lret
mov
int3
andl
cltd
call
aaa
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
and
mov
aam
jl
jns
jl
movsb
inc
and
lcall
les
daa
lods
jnp
adc
loope
dec
cmp
in
stc
adc
mov
ds
mov
mov
int3
sarb
mov
and
out
xor
mov
jge
or
int
repnz
and
ja
mov
lcall
jle
sub
ss
scas
out
jg
sub
push
in
pop
fs
ja
sbb
addr16
neg
loope
pop
or
cmpsl
push
xor
jge
jmp
mov
gs
adc
in
ret
dec
ret
pop
mov
imul
mov
push
pushf
jns
jo
inc
scas
adc
fs
cld
mov
ret
iret
xchg
mov
xchg
shl
mov
fsubrl
jmp
pop
aas
pop
arpl
shrb
pop
mov
cmp
shlw
out
loop
sub
xchg
lahf
inc
ss
pop
mov
mov
xorl
sti
cmp
or
outsl
push
cs
mov
je
lds
cmc
roll
xor
insl
data16
xchg
cmp
aaa
pop
mov
mov
add
cmpsl
stc
nop
and
das
push
xchg
mov
js
cmp
push
gs
jecxz
dec
xor
jecxz
cmp
pushf
mov
adcb
pop
in
add
mov
in
inc
in
jbe
sbb
aaa
xchg
mov
lds
mov
cmp
lods
in
movsb
mov
divl
cmc
adc
mov
xor
fcomip
shrl
iret
movsl
cmc
add
sarl
push
call
stos
mov
fstl
dec
jbe
add
jne
push
lock
insb
les
aas
imulb
mov
imull
adc
addr16
out
pushf
lods
ljmp
jge
jl
adc
adc
pop
fnstcw
push
or
and
iret
out
outsb
shr
nop
or
and
jle
push
movsl
sbb
jp
dec
jg
sarl
adc
cmp
cld
push
outsb
loopne
sub
lea
dec
mov
clc
mov
pop
aad
sbb
stos
test
scas
subl
add
test
mov
int
jo
nop
mov
mov
adc
into
repz
sahf
cwtl
popa
test
jb
ja
lock
test
ds
mov
sub
jp
dec
movsl
mov
shlb
sbb
inc
dec
test
lods
pop
insl
inc
xchg
shll
mov
das
dec
xlat
and
pop
push
mov
rorb
lods
xor
sbb
and
repz
or
jmp
sbb
in
pushf
cmc
lods
or
jbe
dec
fs
stos
dec
push
loope
jle
add
shrl
lcall
jmp
inc
outsl
jmp
xor
push
imul
push
lahf
decb
add
popf
push
mov
call
adc
xor
pop
jmp
cwtl
mov
mov
or
cmpsl
fiaddl
jns
jl
and
push
sbb
movl
das
out
cmp
inc
sub
and
cmc
loop
cli
mov
or
rcll
aam
stos
aaa
xchg
popa
mov
ret
ss
jnp
adcl
das
out
pop
and
loopne
test
scas
in
outsb
cmpsb
lret
and
scas
incb
pop
int
mov
xchg
outsb
pop
lret
imul
jge
xchg
lock
jp
xor
popf
pop
call
lods
jmp
xor
xchg
cmpsb
jl
call
mov
test
mov
dec
jp
rorb
push
jmp
add
adc
imul
ds
pop
sbb
jle
lods
mov
pop
inc
sti
jns
inc
inc
xlat
mov
ds
cmpsb
cmp
sbb
sbb
lock
xchg
and
imul
into
xchg
inc
decl
test
movl
mov
inc
shll
int
push
pop
mul
mov
jl
aaa
pusha
inc
pop
aas
or
subb
push
or
nop
push
push
arpl
sbb
or
in
ss
movsl
leave
fidivrl
mov
sub
mov
fmulp
lock
inc
push
jp
jbe
or
cmpsb
inc
lea
dec
inc
arpl
pop
adc
lds
xor
fsubrl
mov
xor
xor
cmp
dec
dec
push
lds
dec
cld
inc
repz
popf
mov
jbe
add
push
ficoml
insl
cmp
pop
inc
shll
les
lods
and
aad
dec
test
push
xor
sub
and
lods
mov
test
xrelease
xor
add
sub
mov
dec
sahf
imul
cmp
ja
test
jp
xor
stos
xor
sbb
jl
and
xchg
lock
dec
iret
push
inc
dec
mov
adc
pop
add
or
roll
pop
test
daa
idivl
mov
and
dec
fld
icebp
xor
cld
test
or
data16
mov
mov
test
push
cmpsl
jge
outsb
scas
xchg
adc
xchg
outsb
lcall
pop
sti
push
js
adc
add
xchg
mov
ja
dec
mov
ds
ljmp
stos
xchg
sbb
inc
jp
push
mov
jbe
js
cmpsb
lds
push
adc
inc
les
test
mov
cmpsb
subb
or
cmp
push
lahf
inc
sahf
jle
sbb
in
push
stos
mov
ss
dec
in
mov
dec
dec
mov
outsl
enter
xchg
dec
jl
movnti
in
push
jno
aaa
cli
push
out
in
stos
mov
lds
arpl
adc
hlt
pop
inc
pop
jne
push
imul
sqrtps
dec
adc
stos
mov
xchg
jecxz
popf
pop
cmp
cmp
fwait
mov
xorb
ret
mov
add
out
jmp
lods
nop
addr16
je
mov
orl
jmp
pop
jns
fs
add
push
sbb
mov
mov
jl
xlat
jns
jl
push
pop
add
cmp
jno
popf
movsl
gs
daa
push
sahf
ficompl
push
sbb
scas
lock
jle
jns
add
xor
inc
mov
popa
sbb
and
jo
aas
dec
sbb
adc
mov
push
mov
cmp
inc
shlb
pushf
xor
mov
jmp
xchg
sub
jnp
loopne
mov
push
fsts
sub
mov
xchg
adc
sbb
lcall
das
dec
clc
add
push
xchg
rcrb
enter
in
jmp
sarl
sub
lret
scas
ljmp
mov
cmp
test
cli
fwait
addr16
push
cwtl
outsb
xor
stos
xchg
cmp
loope
jbe
add
pusha
mov
add
lahf
call
test
fcomps
ja
rol
inc
jnp
nop
inc
js
or
lahf
js
pusha
pop
rcr
push
adc
dec
add
push
cld
cmp
mov
mov
or
sub
xor
hlt
add
mov
jmp
pop
ds
pop
pusha
leave
pushf
daa
sbb
push
fs
insb
lods
in
imul
inc
idivl
outsb
pop
push
orl
mov
mov
jge
int
aas
sahf
std
xchg
in
lods
mov
jle
lds
dec
cmp
lret
stos
xor
push
ss
es
sbb
aam
aam
shll
inc
adc
mov
and
pop
pop
sbb
adc
test
pop
jge
shr
pop
jmp
jge
jecxz
movsb
add
mov
inc
or
negb
addb
jb
dec
jae
xorl
and
outsl
adc
leave
xlat
mov
pop
int
and
push
jp
mov
jge
xlat
mov
movsl
add
sbb
jae
cld
out
out
or
fwait
gs
sub
pop
mov
popa
cmpsb
and
inc
cmc
jl
xlat
shlb
mov
test
cwtl
add
repnz
pop
inc
fadds
mov
loopne
mov
xchg
pop
mov
push
lds
pop
ljmp
xor
push
inc
enter
enter
lret
and
sbb
fsubrl
lcall
imul
int
iret
fisubrs
sub
cwtl
adc
jae
or
cmpsl
xor
ret
aam
dec
in
in
push
daa
std
test
iret
add
jnp
imul
push
sub
popf
imul
cmp
mov
in
dec
aam
and
pop
mov
fistpll
fwait
pop
and
mov
cmc
rcrb
jb
sbb
sti
fsubr
xchg
cmp
xlat
sub
cs
ret
mov
mov
sbb
loop
mov
lret
test
jne,pn
xor
sub
cld
cmp
cmp
cmp
mov
cmp
clc
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
gs
cmpsb
xor
jl
xlat
jns
jl
dec
popf
repz
mov
mov
je
sub
out
fistl
or
dec
inc
push
sbb
fs
xor
sub
cmp
jo
adc
dec
pop
arpl
inc
loopne
icebp
mov
orl
mov
xor
push
in
inc
ljmp
mov
fcoml
jne
add
xlat
cmp
mov
push
hlt
bound
or
outsb
push
add
repz
sbbl
adc
dec
test
cltd
mov
xchg
fiadds
adc
pushf
push
jno
jg
dec
mov
sbb
adcb
mov
sarl
add
mov
cmp
pop
xchg
pop
xchg
in
cmp
mov
sbb
mov
stos
push
das
rcll
lds
and
cmp
nop
scas
xchg
inc
ss
fdivs
lods
pop
pop
mov
imul
pop
sub
jl
xchg
std
pop
loope
mov
aad
xchg
dec
mov
outsb
test
jae
data16
fwait
loop
dec
push
repz
mov
sbbl
icebp
xchg
dec
and
movsl
and
aad
repz
mov
fiadds
movsb
and
ss
adc
icebp
bound
cwtl
imul
je
test
pop
jne
and
pop
addr16
pop
dec
push
jns
cmp
inc
imul
out
movsl
int3
ja
pop
or
mov
pop
fnstcw
outsb
xchg
rcrl
lcall
mov
movsb
and
or
lcall
sbb
mov
aad
mov
cltd
fbld
scas
lock
jns
es
xchg
sub
std
test
mov
gs
mov
repz
cwtl
cs
mov
add
inc
fldcw
xor
sahf
fistpl
std
xchg
push
and
sub
sarb
stc
mov
dec
outsb
add
xchg
sti
stos
dec
ret
repz
lds
adc
dec
lret
test
out
sub
loopne
cmp
xchg
sub
rcrb
mov
mov
rcr
test
push
ficoml
sub
inc
cmp
mov
xchg
push
xchg
jne
mov
and
and
and
cmp
mov
sbb
pop
mov
push
dec
insb
inc
xchg
inc
fmul
stos
shlb
jae
xor
and
sub
movl
mov
xor
clc
aaa
fists
ret
dec
out
and
shufps
out
or
push
or
add
std
jmp
and
cmc
and
in
sub
xlat
jo
repz
rcr
xchg
add
add
int
cmp
mov
sub
fsubl
mov
ljmp
add
and
adc
bound
mov
sub
fs
or
in
shlb
pop
cmp
dec
rcrb
fsubs
sub
ja
cs
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
psrlw
jns
jl
cmpsb
inc
sub
call
pop
mov
sub
cmp
and
ret
dec
icebp
outsb
les
dec
sbb
mov
xor
cmp
mov
sub
dec
mov
call
aas
xchg
test
jb
adc
add
sub
loop
aam
lea
xlat
push
adc
ss
int3
cltd
popa
lcall
imul
loope
or
das
in
adc
jmp
dec
add
ds
mov
movb
xchg
std
out
inc
pop
sub
mov
int3
jns
je
imulb
xchg
movsl
add
icebp
xor
or
sub
f2xm1
ljmp
outsb
mov
hlt
pop
and
pop
cmp
daa
fldl
mov
jno
mov
xchg
out
push
das
cmp
push
xor
mov
sub
pop
xor
fwait
sti
jb
inc
ljmp
inc
inc
leave
js
lret
xchg
sub
pop
sub
push
jne
cld
movl
jmp
mov
adc
pusha
ficoml
sbbl
fcomp
add
and
fsubs
imul
adc
lock
inc
mov
dec
or
xchg
loop
mov
jle
clc
inc
or
mov
test
xor
jnp
scas
pushf
aam
fdiv
test
loop
mov
js
movsb
cmp
faddl
addr16
fwait
jbe
mov
and
mov
addr16
jge
loopne
aas
push
cmpsl
xor
imul
cmp
cmp
stc
jno
cmp
add
test
xchg
jecxz
cwtl
js,pt
es
insl
loope
fldcw
int
shlb
cmc
mov
pop
ret
mov
popa
xor
pop
xchg
test
xor
out
imul
xchg
in
repz
fadd
push
outsl
cli
jl
inc
xor
adc
jns
dec
adc
mov
mov
mov
dec
xchg
fnstsw
dec
adc
push
dec
in
sub
mov
and
addr16
shl
xchg
loop
xor
add
pop
int3
cmp
fdivrp
loop
aaa
jns
pushf
fdivr
cmp
test
mov
sub
leave
imul
and
xchg
pop
scas
repz
les
mov
mov
xchg
pop
inc
adc
push
pop
adc
cmp
call
ljmpw
xor
xchg
or
out
lret
cmc
xor
cltd
xlat
xchg
lds
mov
mov
sub
aas
xchg
lock
dec
cmp
int
add
imul
pop
push
sbb
pop
cld
xor
xchg
ja
cmp
shll
jo
mov
jmp
jp
jo
testl
int
outsl
lods
sub
imul
mov
leave
pop
subl
xchg
inc
sbb
inc
xchg
cld
into
sahf
cwtl
sub
stc
cmp
insb
fiadds
fildl
jo
mov
mov
mov
inc
cld
jl
xchg
pushf
mov
jnp
xchg
xchg
and
mov
mov
mov
xor
jmp
inc
pusha
sub
sub
jbe
in
push
xlat
jns
jl
int
push
jo
xchg
popf
rcrb
jb
mov
pop
jg
les
imul
adc
or
popa
aaa
dec
lret
sbb
jne
mov
and
adc
rclb
xchg
mov
push
mov
xor
jmp
shrl
jne
mov
mov
xchg
imul
inc
push
inc
and
test
mov
push
stos
sbb
jl
mov
int3
out
je
insb
lcall
sbb
and
inc
jbe
outsl
mov
cmp
sub
pop
addl
jnp
mov
cmc
jno
adc
arpl
pop
jb
inc
popf
stc
pop
and
cltd
pop
aad
sbb
pop
out
sti
mov
punpckhbw
cmp
push
xchg
pop
or
leave
pushf
mov
sti
xor
fnstsw
cwtl
jl
dec
in
jno
push
movl
cmp
cmp
dec
xor
mov
or
sbbb
xchg
mov
ret
xor
cmp
xchg
push
jp
and
cli
mov
movb
dec
outsb
loope
insb
idivb
and
repz
stc
pusha
lret
jecxz
aaa
rclb
daa
test
in
test
push
dec
xchg
mov
mov
xlat
pushf
push
dec
xchg
insl
lods
or
stos
mov
cli
or
gs
pop
inc
inc
lods
ljmp
mov
xlat
push
inc
test
cmpsb
push
or
mov
pop
in
push
nop
stc
andl
add
ret
fcompl
test
in
inc
sub
mov
outsl
test
mov
hlt
push
fistpl
jl
aam
mov
outsl
outsb
sbb
popf
add
push
pusha
and
int
jle
in
pusha
rcrl
sub
ljmp
add
xchg
sub
and
pop
push
mov
mov
lret
xor
mov
test
lea
mov
push
cmpsl
pushl
rclb
jmp
jnp
lea
push
popa
mov
pop
les
mov
inc
ret
push
ljmp
xchg
cmpsb
cmp
bound
adc
jne
inc
push
dec
mov
or
push
movsb
adc
push
insl
icebp
mov
jmp
loopne
cmp
and
lea
and
adc
xchg
adc
mov
or
stos
or
test
fdivl
ret
dec
dec
jge
jae
jbe
test
sbb
imul
xor
aad
fucomp
inc
ss
inc
cmp
push
jge
movsl
push
repz
stos
stc
sahf
stos
scas
pop
incb
mov
jns
lock
pop
loope
loopne
sbb
cwtl
es
or
stos
push
js
stc
jbe
mov
pop
xor
clc
xor
xor
mull
into
push
bound
cmp
add
mov
inc
test
sub
mov
mov
mov
jg
adc
push
hlt
aaa
jg
les
loopne
dec
popl
imul
sub
jmp
or
jb
mov
push
sbb
sbb
jl
jns
jl
loop
mov
movsb
and
movsb
bound
pushf
lds
lahf
push
es
xchg
outsl
or
add
sbb
lcall
mov
cltd
icebp
xchg
arpl
bswap
or
dec
ficomps
push
cmp
xor
out
push
ret
jae,pn
jle
mov
jnp
inc
js
xlat
pop
and
mov
adc
hlt
sbb
adc
fwait
push
insl
pop
push
jb
pop
rcr
mov
jnp
pop
aad
outsb
out
inc
dec
cs
and
popf
jp
in
not
aas
mov
mov
dec
push
xlat
addr16
xchg
push
filds
movsb
inc
mov
jmp
int3
cmpsl
jne
mov
dec
aaa
int
mov
fldl
int
arpl
les
and
ret
inc
aad
shrb
push
into
int3
inc
leave
call
cmp
ret
push
dec
hlt
xchg
and
add
lods
xor
mov
aas
add
into
mov
xchg
add
pop
aam
cmp
aad
flds
fbstp
ret
inc
in
mov
imul
aad
popa
cmp
adc
lock
addb
adc
xchg
loopne
ja
ds
cmp
cld
add
mov
jno
jbe
and
loopne
inc
enter
into
sub
mov
jle
imul
popa
pop
mov
out
jle
loopne
cmp
or
mov
in
xor
cld
fisttpl
jge
xor
fsts
pause
or
lods
add
popf
lret
mov
jae
jp
test
pop
stos
mov
dec
push
mov
cmp
push
or
daa
cmp
xlat
cs
sub
mov
jns
leave
mov
cltd
loop
in
out
stos
ror
cmp
or
out
lods
dec
xor
xlat
fwait
mov
mov
addl
mov
aam
push
bound
add
inc
or
mov
in
cmp
inc
ret
inc
fs
xor
xchg
xchg
jbe
sbb
loopew
gs
jmp
jmp
ror
imul
aad
pushf
and
dec
pop
mov
jb
dec
shrb
lock
ficoml
cwtl
std
sub
and
push
in
pop
xchg
jno
jbe
imul
sbb
out
pop
inc
push
pushf
adc
pusha
or
cmc
add
pop
cmc
fsubp
repz
lret
inc
pop
out
mov
jp
xchg
fbld
icebp
xchg
sbb
sarw
xor
pushf
and
jbe
jmp
xlat
ss
jle
sbb
jbe
jns
mov
ljmp
inc
mull
fs
adc
clc
sbb
lea
movsb
xchg
or
scas
push
lods
orl
cmp
mov
hlt
or
sbb
aam
aaa
cmp
test
repz
in
rorb
out
stos
cmc
push
xor
popa
push
imul
push
mov
jmp
dec
adc
jl
arpl
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
repnz
mov
adc
push
adc
enter
ret
cmp
sub
gs
jle
sub
push
imul
inc
push
mov
or
pop
outsb
popa
enter
inc
mov
pop
adc
inc
push
adc
addb
popf
je
pop
aas
push
fwait
rcr
cmp
loope
xor
addb
add
clc
and
fcmovu
mov
lea
lcall
mov
inc
gs
imul
loope
orb
or
mov
mov
push
lods
pushf
das
insl
daa
adc
ret
aaa
adc
popf
sbbb
and
inc
loope
aam
dec
cmp
cmp
mov
into
pop
mov
mov
jecxz
sub
clc
test
sub
mov
push
movsb
cmp
nop
adc
jecxz
mov
cmp
stc
sahf
mov
mov
test
cmp
adc
enter
mov
add
or
cmp
add
adc
inc
popa
add
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
in
pop
xchg
mov
jl
adc
dec
sbb
movsl
dec
stos
fbld
xor
rcr
push
loope
daa
int3
mov
cli
das
test
jle
adc
test
into
jns
inc
jbe
jnp
gs
mov
sarb
aaa
mov
mov
sbb
mov
dec
push
loope
xchg
mov
stos
mov
popa
jns
mov
lcall
xor
mov
pop
stos
xor
fsubrs
pop
add
loopne
mov
xchg
adc
push
mov
rcr
mov
fucomp
ret
jecxz
scas
xchg
mov
cltd
push
cmp
sbb
das
sub
imul
inc
sbb
in
popf
lret
sbb
inc
xor
jg
jp
push
mov
and
jge
adc
push
arpl
gs
cwtl
xchg
out
mov
lock
insl
lock
lcall
outsb
aas
mov
inc
je
xchg
cmp
pop
fwait
xchg
mov
cmp
movl
jne
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
mov
sub
adc
cmp
xchg
push
add
push
xchg
sarb
inc
jbe
out
in
jecxz
repnz
xchg
push
ficoml
aam
or
xor
gs
mov
sbb
fstpl
xchg
or
enter
outsl
data16
xchg
les
loope
add
sub
aaa
leave
addb
cmpsl
out
push
mov
sub
aam
fmull
adc
cli
xor
ljmp
scas
addb
fildll
push
sub
int3
mov
xchg
or
push
xchg
xchg
lahf
pmullw
jecxz
mov
push
jl
push
fcmove
push
sub
mov
andb
push
sub
adc
imul
xor
and
cmp
and
pop
inc
cltd
sbb
nop
std
and
lahf
push
repnz
and
sbb
call
stos
jb
mov
inc
push
jmp
jns
jnp
mov
adc
movb
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
jns
jl
fisttps
pop
jp
xchg
jne
test
lret
sbb
pop
rol
data16
stos
insb
fadds
leave
and
mov
fnstcw
push
ffreep
mov
inc
sbb
mov
jle
mov
add
sub
or
std
and
or
popf
pop
cmp
xchg
dec
fchs
cmp
cmp
xor
mov
test
inc
cmp
fscale
and
xor
das
ret
sbb
dec
cwtl
or
js
pop
stos
aas
add
mov
mov
std
mov
mov
imul
ss
xchg
adc
jmp
jne
ja
add
and
lds
push
negl
mov
xchg
dec
jge
jmp
sub
mov
into
aad
mov
push
imul
jg
in
cmp
push
jnp
push
into
mov
mov
jns
aaa
cmp
lods
ljmp
aam
jmp
sub
push
fimull
push
stos
iret
lcall
sbb
cmc
int3
mov
mov
subb
xchg
movsl
push
mov
and
xor
out
pop
cmpsl
sbb
loop
imul
js
sbb
sbb
inc
and
sub
rolb
into
jle
mov
xor
adc
mov
stc
mov
ss
ljmp
cmp
xor
out
add
xor
out
cltd
and
pop
in
ljmp
ja
mov
mov
mov
sbb
sub
das
mov
lcall
sub
pop
lods
and
shrd
add
hlt
out
xchg
inc
adc
adc
sub
mov
mov
call
popf
rorl
xchg
fnstcw
dec
pop
sub
pusha
mov
push
pop
negb
sub
addb
xchg
pop
insl
and
test
jbe
jne
pop
adc
push
mov
arpl
mov
mov
aam
repnz
lret
lret
lret
add
push
jnp
cld
jne
pop
into
or
dec
push
pop
lock
jecxz
imul
dec
fnstcw
dec
lods
clc
out
xchg
inc
mov
lea
into
mov
shlb
incl
cli
pop
paddsw
or
inc
push
mov
fldenv
pushf
pop
dec
sub
test
sbb
das
mov
cmp
jecxz
repnz
pushf
lock
push
imul
rcrl
test
sbb
sub
mov
sub
sahf
arpl
mov
xchg
xor
das
daa
cmp
lock
es
imul
jo
pop
repz
sbb
pop
stc
sbb
xchg
cmc
push
outsl
fsubr
xor
xor
aam
mov
popa
sbbb
fsubl
lods
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
fsubl
xor
jl
lret
jl
mov
movsl
sub
int3
mov
in
iret
pop
jle
jbe
adc
mov
rcrb
sbb
mov
sbb
xchg
aaa
mov
mov
adc
mov
popf
mov
mov
pop
jle
mov
pop
ret
add
sbb
xor
aad
mov
cli
scas
mov
pop
imul
sbb
and
mov
xor
cmpsb
ljmp
lret
xchg
and
xchg
aad
xor
loop
mov
mov
inc
cmp
loope
fldenv
push
clc
aas
push
sbb
es
xchg
cwtl
cltd
pop
adc
bnd
mov
jne
mov
sbb
arpl
add
lods
data16
rcll
jecxz
dec
int3
sub
xchg
sti
aas
jge
xchg
or
cmp
hlt
dec
lds
test
xchg
lahf
bound
cmp
sub
jecxz
push
sbb
adc
pop
lahf
xchg
imul
fmulp
add
xor
xor
xlat
and
inc
pop
leave
inc
icebp
push
pop
data16
nop
imul
xor
stos
cmpb
lods
leave
sbb
jp
hlt
mov
mov
insb
push
xchg
add
inc
push
leave
clc
negb
sub
sbb
ficoml
sbb
xchg
sub
add
ror
jmp
shl
lock
jns
sahf
js
push
leave
leave
fcomi
in
or
cmp
pop
cld
and
mov
stos
rorb
daa
sub
not
sub
sub
inc
leave
orb
ret
xlat
cmp
andb
inc
in
in
popf
or
push
les
insb
jno
jecxz
add
ret
xor
incl
xchg
hlt
loopne
or
test
and
dec
mov
cli
pop
loop
xchg
notb
das
into
xchg
cmpsl
adcl
xchg
stos
jg,pt
clc
movsl
cmpb
aaa
lahf
xor
inc
dec
mov
or
adc
sbb
mov
sub
push
lea
sbb
int3
stos
adc
jae
in
lds
fs
fistpll
mov
adc
or
je
push
icebp
orl
iret
loope
adc
sbbb
aam
popa
shl
lahf
mov
aad
xor
mov
outsb
and
aaa
cltd
mov
or
mov
movsl
and
rcll
into
or
sub
fs
into
push
jne
roll
shl
fimuls
xor
jo
pushf
jb
cmp
loope
call
dec
xor
into
xor
lods
add
das
fdivs
add
jae
cmc
clc
pusha
push
dec
dec
mov
dec
or
push
outsl
fists
arpl
ret
insl
mov
divb
add
sahf
ror
iret
or
or
and
icebp
inc
fs
mov
cltd
stc
fisttpl
repz
pop
inc
aad
inc
incl
or
dec
repz
fldl
test
jmp
xor
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
pusha
cmp
mov
jl
lret
jl
cmp
cmpsb
inc
testl
dec
pop
mull
shlb
aam
popf
loop
and
jge
adc
pop
cli
je
scas
je
push
cs
pmulhuw
sub
push
xchg
inc
orb
clc
add
adc
add
ja
sub
filds
sti
inc
ss
inc
lea
push
adc
and
clc
and
mov
pushfw
push
mov
fmuls
cmpsl
into
fcomps
add
adc
push
jmp
mov
add
adc
shll
and
and
sub
into
mov
add
mov
inc
cmc
push
lret
xor
cli
cs
push
mov
jmp
jge
std
notb
fidivl
jb
add
inc
lahf
adc
lds
lahf
outsb
pop
pushf
lcall
cmp
push
mov
jle
mov
jb
test
pop
mulb
aam
mov
loopw
xchg
enter
pop
xor
cli
cmc
jp
das
push
xorb
dec
push
stos
scas
out
push
jno
sahf
xor
add
sbb
out
shll
sti
push
fstl
in
jecxz
ljmp
pop
mov
and
call
nop
inc
enter
dec
or
xchg
push
push
cli
xchg
sub
adcl
in
movsl
mov
insb
fistl
leave
cmc
test
subb
aas
je
outsb
push
pusha
xlat
dec
into
add
adc
fsub
jae
xor
sti
iret
push
idiv
sahf
ljmp
sbb
mov
dec
jmp
adc
mov
mov
mov
adc
lock
fildl
mov
xor
popl
aas
jge
int3
or
push
cmp
pop
loopne
or
ss
addl
sub
mov
push
shrl
aaa
dec
ds
lock
mov
sub
sbb
jns
add
jo
or
mov
inc
ret
and
jecxz
mov
mov
cs
outsl
push
mov
mov
fildl
xchg
std
rclb
lcall
fs
les
and
ror
push
jae
cmp
pop
add
cltd
shrb
cs
xchg
filds
sub
rep
js
pop
mov
lret
ds
rolb
mov
lret
loope
mov
sub
scas
test
add
push
gs
mov
add
jnp
or
ficoml
cmpsl
mov
push
and
fmuls
cmp
ja
inc
shll
sub
mov
in
mov
adc
inc
pop
sti
inc
pop
adc
cmp
loop
mov
dec
scas
xor
pop
faddp
ds
inc
jmp
mov
sbb
mov
js
add
push
fmul
and
adc
scas
mov
push
lock
mov
addr16
ja
mov
sbb
ja
inc
int3
sub
and
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
jle
lods
addr16
lret
jl
outsl
scas
sub
mov
test
inc
iret
jmp
cmp
dec
pop
cmp
loope
mov
sbb
inc
ss
add
rcl
jecxz
ja
push
add
mov
or
scas
fwait
mov
ja
cmp
xchg
jns
inc
aas
sar
ds
lods
cmp
in
lock
aas
jmp
stos
add
repz
hlt
lcall
imul
mov
cmp
pusha
nop
jbe
mov
into
das
rcll
or
imulb
enter
or
mov
jno
sbb
xchg
shlb
jl
jnp
mov
jecxz
mov
and
rcl
jb
dec
bound
decb
sub
test
sbb
data16
or
inc
cwtl
dec
dec
in
lods
lret
sub
sbb
cwtl
js
push
and
out
sub
loope
incb
sahf
outsl
outsb
test
cmp
push
fiadds
jne
pop
adc
xor
lahf
mov
ret
sub
lcall
dec
mov
loope
xlat
push
and
xor
mov
xor
in
scas
mov
pop
inc
insl
out
cmp
mov
mov
dec
sub
add
mov
dec
lock
pop
scas
jb
mov
and
and
lret
data16
inc
pop
xchg
rorb
pop
sar
add
mov
pop
and
sbb
je
aas
gs
aad
xor
in
jnp
dec
stc
mov
lods
inc
stos
xlat
roll
xchg
andb
cmpsb
cld
lock
stos
pushf
sbbb
sub
mov
enter
mov
js
icebp
stos
aam
sbbl
mov
cmp
dec
fisttps
push
jl
aad
cld
leave
test
sbb
xchg
adc
call
pop
fidivrs
test
fiadds
mov
fidivs
cmp
mov
and
sub
mov
push
scas
add
loope
add
fs
fcoms
sub
dec
inc
ficompl
outsb
xchg
or
dec
stc
iret
ror
cmpsl
mov
sub
test
int
add
cmp
or
icebp
sbb
fnstcw
ds
mov
push
push
pop
ret
or
ds
inc
es
jle
sbb
xchg
mov
and
adc
test
cmp
addl
or
or
pop
adc
test
cmp
repz
test
cmp
or
icebp
add
xchg
mov
mov
lcall
sub
mov
sub
xor
cmp
daa
lea
cltd
enter
es
add
out
icebp
cld
and
stos
bound
rol
movsl
sahf
clc
or
sub
ja
push
mov
cmpl
pop
ljmp
ss
adc
imul
jnp
shrl
mov
add
add
imul
mov
jmp
icebp
cs
ja
jno
mov
and
xchg
cmp
jns
jl
roll
mov
dec
or
int3
mov
dec
push
sub
inc
aam
mov
mov
add
xchg
fistps
sub
out
mov
xchg
sub
subb
add
mov
mov
rorl
inc
outsl
jg
or
push
repnz
push
mov
stos
insl
ret
enter
loop
insb
xchg
pop
sub
xchg
jmp
lahf
addr16
dec
xor
mov
sbb
add
js
clc
xor
sub
nop
add
jmp
inc
sub
insb
pop
push
loope
cmpb
add
jae
sub
pop
je
mov
outsl
xor
stc
fwait
jg
lods
test
push
lret
movb
pushf
add
xor
out
sbb
fwait
scas
jmp
in
mov
jbe
sbb
bnd
xor
push
jl
sbb
in
mov
jae
repnz
aas
cli
int
and
pop
inc
add
sub
mov
push
aam
ljmp
pop
loop
in
xor
jmp
addr16
ljmp
divl
lods
pusha
ljmp
pushf
mov
test
pop
add
ret
fs
leave
sbb
idivl
mov
scas
mov
cs
jle
pop
ds
out
dec
mov
push
ret
dec
mov
pushf
sub
push
jp
xlat
jmp
adc
sbb
sarl
mov
fisubl
mov
test
je
test
jbe
add
js,pt
cmpb
xor
mov
das
push
loopne
negb
and
data16
aaa
std
cmp
xor
adc
outsb
jbe
sbbb
jae
mov
xchg
pop
arpl
push
insl
int3
sbb
cmpsl
lock
jmp
mov
fldl
add
mov
sbb
fnsave
add
ja
and
sbb
mov
dec
push
dec
notl
insb
loop
jbe
xchg
cmp
fstps
sbb
pop
cmp
dec
out
les
mov
jmp
scas
out
stos
in
cwtl
dec
lods
inc
add
add
mov
nop
rcr
pop
lock
and
adc
shlb
stc
sub
aad
push
stc
mov
insl
mov
sub
xor
mov
call
pushf
cmpsb
ljmp
mov
dec
in
xor
sbb
stos
jae
xchg
and
mov
jo
sub
mov
popf
fs
sahf
das
insb
mov
dec
cmpl
push
stos
push
in
or
clc
mov
pusha
ret
movsb
stos
xor
sub
push
xchg
and
xchg
adc
popf
cmp
repz
ja
jno
test
shll
aaa
and
push
nop
pop
jle
pop
add
sahf
mov
xchg
imul
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fsubs
mov
jl
jns
jl
push
sbb
xchg
xor
aas
cmp
xor
adc
jge
inc
push
xchg
fsts
and
cmp
int3
idivl
push
mov
lea
sbb
fidivrs
inc
xor
icebp
sarb
lahf
int3
imul
out
out
mov
pushl
push
mov
dec
sti
mov
sbb
std
sbb
imul
cmp
aam
inc
nop
push
mov
cs
std
jecxz
mov
mov
pop
icebp
jg
xchg
rol
dec
mov
mov
mov
dec
scas
add
mov
jne
push
inc
rcll
cmp
mov
add
mov
pop
jbe
xchg
jne
jnp
aas
ds
xlat
or
add
mov
std
jne
sub
cmp
sub
mov
test
fistpl
repz
push
and
xor
jg
data16
pop
sbb
xor
mov
lcall
popa
inc
cmp
jns
ret
xlat
call
cmp
enter
adc
mov
js
insl
sbb
push
pop
lods
push
inc
mov
adc
aam
jo
addr16
repz
mov
insb
popa
loopne
pop
das
rolb
xlat
push
xchg
and
sbb
je
mov
cmpsl
div
lret
mov
mov
add
int3
xor
mov
pop
adc
mov
int
sbb
dec
jmp
adc
lahf
mov
jne
pop
test
sub
or
lods
std
sti
dec
and
out
mov
imul
and
xor
mov
test
pushf
add
enter
test
add
or
sti
cltd
or
aas
mov
daa
into
add
sbb
sbb
adc
ss
dec
dec
xchg
cli
ja
mov
cmp
loop
mov
xchg
shrb
lds
cld
ss
pop
jg
outsl
cmp
data16
fdivr
nop
and
aam
adc
sti
sbb
cmp
in
pop
jne
xor
jo
pop
imul
xor
subb
lods
jo
or
int3
clc
jp
pop
jle
fidivl
dec
aam
cmp
loopne
jle
push
jmp
movsl
aas
mov
and
repnz
fwait
leave
cmp
push
sbb
mov
popa
xorb
cmp
mov
pop
dec
mov
lcall
repnz
xor
mov
inc
iret
push
mov
add
adc
outsb
and
cmp
inc
sub
mov
outsb
cli
popf
lock
sbb
outsl
lahf
loope
cmp
and
mov
mov
mov
dec
lret
and
daa
sub
mov
shll
cltd
stos
loop
ja
data16
xor
jae
add
pop
into
jle
movb
xchg
mov
xchg
fbld
dec
jns
sbb
pop
shl
mov
ficompl
fimull
xchg
add
add
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
and
mov
popa
cli
jl
lret
jl
push
push
nop
sbb
fwait
pop
jae
and
xchg
cmc
enter
or
in
xor
cwtl
lahf
inc
js
jmp
dec
gs
or
inc
jl
xor
insl
xchg
mov
inc
push
jge
xor
push
movsl
mov
push
xchg
jg
and
mov
inc
push
adc
dec
sbb
daa
pop
lods
fstpt
pop
mov
fs
cmp
sub
sub
mov
jno
outsl
xor
push
and
scas
enter
and
imul
dec
jle
shll
jp
xchg
rcrl
jo
fadds
push
sub
lret
idivb
and
ret
rcrl
out
cmpsl
push
scas
ja
inc
jecxz
test
arpl
clc
add
add
pop
rorl
cmpsl
push
pop
push
test
or
sbb
inc
or
jb
das
test
lcall
fwait
sub
pop
mov
pop
mov
fstpl
cs
xor
stc
xchg
adc
mov
out
inc
notl
ret
subl
push
adc
out
mov
cmp
clc
gs
pop
jle
scas
sbb
std
inc
hlt
ljmp
test
in
pop
test
jae
sti
repnz
mov
mov
ffree
repz
repz
imul
pusha
out
hlt
mov
xor
adc
loope
loop
out
cmp
ds
xchg
or
out
dec
xchg
fcoml
imull
adc
xchg
push
rcr
filds
iret
xor
lcall
cwtl
xcrypt-ofb
cmpsl
test
add
lahf
lods
sub
jb
call
or
jns
cmp
dec
movsb
jmp
cmp
and
push
push
push
lds
in
mov
out
aad
inc
sub
fstpt
movsl
mov
dec
mov
into
jle
sbb
in
clc
sbb
movsb
in
inc
dec
mov
out
sbb
mov
imul
out
mov
lcall
gs
mov
cli
mov
cld
cmp
sahf
jnp
dec
add
mov
xchg
adc
lods
push
pop
xchg
xor
mov
sbb
nop
jb
test
xor
push
push
jb
dec
jne
shr
dec
cld
dec
pop
mov
sbb
decl
or
sub
pop
push
jp
test
leave
pop
inc
int
pop
enter
xchg
mov
divb
imul
fistpll
rclb
fiadds
pusha
hlt
mov
mov
and
fcmove
inc
loopne
subl
fstpl
dec
inc
leave
test
inc
push
out
outsl
ja
and
jg
push
mov
xor
xor
xor
fimull
fwait
xor
daa
add
mov
es
popf
mov
xchg
stc
hlt
cmpsb
shrb
inc
mov
cmp
xchg
mov
lcall
add
xor
fmuls
and
dec
push
sub
or
leave
sub
pop
xchg
push
aaa
jb
sti
push
pop
dec
xchg
insl
test
popa
sbb
cmp
scas
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
jg
mov
xchg
jns
jl
mov
xor
push
roll
push
loope
int
loop
lock
pop
notl
test
incb
shrl
lret
pop
mov
mov
cmp
enter
inc
cmp
xchg
dec
bound
and
in
inc
push
lcall
sub
fs
imul
sub
outsb
sub
int3
fstps
add
stos
add
sahf
movsb
adc
mov
aam
pop
inc
out
adc
inc
pop
lods
je
aaa
lods
aam
inc
aaa
test
adc
mov
pop
out
or
mov
add
lea
in
dec
cmp
jge
xlat
ljmp
fildl
sbb
push
lock
fistl
lods
and
cmp
add
lods
popf
stos
sub
lahf
add
cmp
mov
jne
in
add
mov
std
imul
out
inc
ficoms
lea
cmpsl
adc
sbb
mov
pushf
push
popa
std
clc
cmp
jns
inc
mov
mov
jo
sbb
test
cmpsl
mov
call
push
cmp
mov
push
xchg
ret
loop
jecxz
dec
stos
out
mov
add
movsl
dec
loopne
call
jo
lret
jo
mov
or
les
pop
and
aad
and
mov
mov
aaa
add
dec
push
decl
lods
into
mov
aas
js
call
jo
fcomp
xchg
outsb
repz
adc
mov
push
pop
jmp
mov
xchg
mov
xor
or
iret
lods
fildll
pop
cmpsb
push
enter
jmp
xchg
not
lods
out
jl
fistl
xor
jp
or
pop
xchg
dec
int3
or
jl
div
add
push
out
mov
jo
inc
xlat
adc
imulb
hlt
sarl
rcll
jb
xchg
ljmp
lret
adcl
data16
fs
nop
out
hlt
pop
mov
js
adc
out
imul
aas
xchg
fsub
lods
ljmp
test
add
movsb
jne
pushf
jmp
mov
mov
leave
mov
pushf
das
test
xor
adcb
inc
push
mov
notb
jnp
fcomi
sbb
clc
xchg
jle
pop
xchg
or
jp
mov
mov
mov
or
data16
and
out
adc
mov
test
neg
push
call
cltd
push
push
push
mov
fisubrl
dec
or
and
testb
stos
stos
faddl
stos
push
fcoml
sbb
aam
mov
sub
mov
repnz
xchg
outsl
dec
out
loopne
out
or
mov
insl
xchg
xchg
jmp
push
imul
outsb
loopne
adc
loop
mov
je
mov
or
cltd
mov
fwait
addr16
loop
inc
push
repz
and
jge
or
icebp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
loopw
fsts
jns
jl
inc
dec
lds
outsb
jmp
rolb
cmpsl
xlat
adc
sbb
pop
or
jo
or
fisubrl
in
push
ja
mov
aaa
sub
dec
in
push
mov
addr16
sti
push
loope
das
ret
insb
lds
lret
out
cwtl
jle
loop
adc
out
ret
jp
push
sub
or
pop
lret
lahf
xchg
adc
scas
jae
insb
nop
loop
enter
rolb
jge
sarb
xchg
insl
xor
pop
arpl
in
lods
sub
dec
xor
inc
sti
adc
jle
xor
mov
dec
mov
sub
pop
fidivl
push
cli
cld
pop
aad
add
jne
xchg
outsb
insb
test
lret
imulb
mov
negl
push
out
sub
stc
mov
jnp
adc
or
rorb
mov
arpl
mov
dec
inc
sub
fists
addr16
mov
pop
mov
inc
test
call
lcall
popa
daa
stos
sbb
vpand
dec
cmp
rcl
jecxz
cmpsb
xor
add
add
rcrl
mov
daa
les
dec
pop
jle
scas
nop
dec
and
fnsave
cmpb
mov
scas
movsb
jnp
xorl
ja
inc
mov
imul
inc
or
insl
mulb
and
add
adc
testb
daa
ljmp
arpl
in
and
icebp
pop
dec
aam
adc
cmc
jmp
mov
or
push
cmp
repz
in
jecxz
les
inc
and
jg
cltd
push
int3
lods
jno
loopne
or
fdiv
sbb
rorb
int3
shufps
and
add
push
daa
fwait
cld
icebp
lods
sbb
fnstenv
popa
or
mov
cwtl
call
pop
adc
outsl
into
int
jg
and
sub
mov
pop
mov
scas
mov
adc
push
lds
adc
jno
call
xchg
cmp
fildl
mov
mov
or
mov
sahf
fwait
shlb
popa
das
js
jns
rcrl
inc
imul
mov
pop
pusha
ret
jne
ret
sub
add
aad
or
and
pop
loop
loop
inc
push
icebp
fucomp
dec
jecxz
movl
js
sub
aad
jg
push
mov
fnstsw
shrl
jns
sub
mov
sbb
in
jp
cmp
lods
adc
cli
cmp
cmp
lock
movl
inc
rclb
cmp
xchg
mov
stc
leave
mov
xchg
mov
adcb
and
out
mov
cld
sub
lock
cmpsb
pop
jbe
mov
sub
and
mov
shl
cmp
add
aad
mov
mov
jb
mov
mov
insl
fadds
mov
add
movl
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
sahf
aad
arpl
jl
je
cmp
xchg
xchg
inc
pushf
adc
xchg
incl
sub
das
leave
dec
mov
xchg
adc
jl
or
lret
repz
leave
jge
xchg
gs
les
push
es
lea
jmp
loope
ljmp
jg
xchg
mov
ljmp
push
or
mov
inc
xor
mov
push
jmp
nop
lcall
mov
inc
xor
aas
mov
inc
stos
mov
add
push
xchg
or
jp
call
jge
xchg
pop
lcall
sbb
out
lret
jno
repnz
cs
stos
lahf
fstl
push
push
sub
sbb
xchg
or
loop
pop
xor
xlat
adc
xor
in
fdivrl
pop
or
out
mov
cmc
inc
cmp
lret
xor
movsl
arpl
mov
je
iret
cmc
pushf
or
aad
mov
dec
xchg
pop
loop
mov
dec
inc
xor
ja
add
and
cs
mov
stc
lahf
movsl
xor
je
jge
push
jge
cmp
arpl
xchg
push
sub
pop
loope
or
cmp
test
xor
xor
loopne
xor
ror
cmpsl
push
jecxz
pop
jl
outsb
jne
xor
adc
pop
call
loopne
adc
xchg
adc
es
jno
sub
gs
lods
or
mov
mov
pop
cli
stos
push
jg
fstpl
lcall
test
fstpt
sbb
mov
in
push
cwtl
cmp
aad
dec
mov
popa
mov
vcmpps
push
shl
xor
pop
cld
push
insl
xchg
xchg
add
fistl
cs
adc
jns
dec
and
shll
fst
pop
and
pop
cmp
xchg
test
jbe
adc
sub
xor
popl
pop
sub
jecxz
lock
cmp
popf
add
and
icebp
ljmp
loope
cmpsl
pop
fsubr
mov
sub
jmp
movsb
call
mov
xor
cs
dec
and
fwait
add
jbe
out
add
sbb
jecxz
cmp
arpl
pop
cli
pop
jge
cli
or
mov
push
cli
mov
mov
mov
repz
stos
or
mov
xchg
test
out
adc
loope
loope
sarl
lret
inc
pop
cltd
xchg
cmpsl
or
add
enter
mov
pop
mov
pop
fdivrp
scas
cmpsl
mov
jmp
inc
or
imul
sbb
fwait
je
enter
sahf
hlt
add
in
repnz
mov
jb
fcompl
cld
outsl
add
shr
stc
mov
or
cs
sbb
mov
xor
outsl
sbb
or
mov
mov
stc
cwtl
in
xor
push
cmp
or
shr
rorl
add
outsb
add
add
daa
inc
imul
xchg
popf
jmp
jl
lret
jl
std
rolb
lods
jb
push
mov
imul
cli
in
ds
add
cwtl
pop
daa
les
jbe
andl
enter
cltd
loope
fwait
mov
inc
adc
stos
mov
dec
iret
adc
sbb
add
sub
jae
sbb
adc
push
push
je
inc
push
adc
arpl
xchg
or
sub
inc
fnstenv
cmp
adc
pop
sbb
or
pop
in
jne
xchg
out
inc
push
cld
cmp
jl,pt
out
pop
or
mov
xor
rol
subb
aaa
dec
xor
adc
cltd
mov
sbb
mov
aas
dec
adc
sbb
insl
sbb
adc
inc
pop
stos
mov
arpl
jge
mov
es
imul
jnp
stc
cwtl
sti
pusha
fcoms
or
push
push
test
test
call
rcll
imul
stos
stc
sub
push
mov
cli
test
out
icebp
es
jg
aam
fistpl
je
mov
xor
mov
in
lea
es
aam
jmp
push
sub
pop
xor
icebp
and
arpl
ljmp
int
sub
arpl
sbb
scas
imul
stc
fnsave
stos
sub
shlb
repnz
mov
mov
push
jo
jae
sub
adc
push
pop
aam
test
imul
iret
mov
xchg
inc
or
cld
inc
push
cmpsb
add
cltd
test
pop
add
xchg
jne
jl
cmp
gs
mov
fwait
jnp
sti
jge
add
adc
cmpsb
add
cmpsl
mov
add
ficoml
aas
jecxz
jnp
push
pusha
cli
enter
test
sahf
add
outsl
lods
mov
lahf
addl
mov
dec
fcom
lock
mov
sub
xchg
icebp
out
pop
out
push
sti
pop
int3
imul
rcr
inc
repnz
fdivrl
mov
xor
fchs
mov
sbb
sub
xchg
xchg
push
jne
pop
pop
mov
imul
pusha
repnz
jge
adcb
fs
dec
inc
sbb
and
dec
inc
jge
pop
out
icebp
sub
xchg
mov
enter
pop
xchg
jg
out
mov
cmp
push
inc
aas
inc
sub
cmp
enter
pop
pusha
imul
mov
test
int
sub
in
mov
scas
pop
jns
or
pop
pop
pushf
or
call
in
mov
push
mov
call
fimuls
pop
mov
adc
add
iret
roll
pop
insl
jne
push
xor
sar
mov
add
or
mov
dec
mov
adc
or
push
mov
and
xchg
mov
out
pop
sub
add
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
sahf
outsl
or
jns
jl
bound
xchg
cmp
xor
mov
shlb
xor
or
mov
fisttpll
xor
mov
bswap
cmp
into
sti
call
lcall
xor
sub
jp
aad
lret
es
inc
in
xor
sbb
aam
rcrl
sbb
popa
dec
mov
in
test
insl
adc
loopne
and
jge
jp
leave
outsl
jge
loopne
push
lods
adc
js
lahf
pop
out
into
in
mov
sub
daa
fnstsw
lea
jg
mov
mov
ljmp
and
mov
cli
push
stos
test
cmp
lods
xor
hlt
int3
ja
daa
cwtl
cmpsl
pop
fisttpl
les
and
popa
jae
shlb
fstpl
adc
dec
mov
push
jbe
stos
mov
push
lods
push
inc
stos
add
mov
sbb
inc
insl
and
lods
add
ficoms
mov
arpl
rolb
ds
call
and
pop
and
pop
stc
add
dec
jae
insb
dec
gs
mov
into
mov
mov
jb
aad
sti
sbb
xchg
dec
js
add
movsb
jns
push
mov
inc
test
cld
pushf
jb
je
mov
sub
and
decl
std
sub
fwait
test
scas
cmp
pop
imul
scas
idivb
add
fwait
out
call
js
pop
xchg
insb
dec
sbb
push
repz
inc
loopne
xchg
jle
jecxz
pop
mov
loope
mov
inc
sub
mov
mov
add
sahf
fsubrl
sub
sub
jne
add
movsb
push
fcomp
push
mov
push
dec
pop
dec
xchg
ret
cmpsl
lahf
jno
mov
outsb
fildll
cmp
mov
add
add
sti
movsb
mov
insl
cmp
xor
das
mov
pop
loop
mov
dec
repz
jmp
pop
clc
dec
into
lahf
dec
cmp
add
or
ljmp
xchg
addr16
sbb
pusha
out
inc
nop
inc
xchg
out
dec
xor
xor
pcmpeqw
xor
cmp
imul
scas
add
ljmp
xlat
xorb
into
pop
pop
sbb
cwtl
imul
push
nop
inc
out
mov
push
pusha
shll
test
in
xchg
test
pop
pop
or
or
lods
fstpl
test
test
push
cmc
cmpsl
dec
sbb
mov
in
rorl
cmp
fisttps
lcall
xor
cmp
decb
xor
xor
in
inc
pusha
loop
ss
mov
in
inc
aam
fnstenv
mov
inc
xor
mov
pop
lea
mov
push
mov
jb
mov
aad
inc
fs
mov
cmp
cs
cmpsb
xchg
pop
jne
add
add
inc
loopne
inc
shlb
cltd
pop
cltd
mov
pop
pop
jo
jmp
insl
xor
cltd
sahf
fmull
xor
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
xchg
fistl
insl
xchg
jl
lret
jl
and
popf
and
mov
push
inc
xlat
pop
aas
jbe
sbb
sub
ss
dec
daa
std
sub
or
or
fwait
mov
push
loop
pop
rclb
jle
loop
mov
adc
cmp
jp
jmp
in
popf
mov
out
dec
jo
les
rep
fildll
dec
sbb
push
adc
jp
fstl
std
cmp
push
and
sub
push
movsb
mov
mov
mov
adc
mov
sub
test
mov
xchg
mov
xchg
push
or
sbb
sub
mov
dec
add
mov
nop
push
xchg
psrlw
fcmovnbe
inc
data16
dec
movsl
pushf
push
pop
rorb
daa
lea
jp
insb
cmpsb
jbe
cli
int
les
push
pop
mov
sbb
loopne
mov
jmp
pop
in
dec
pushf
pop
arpl
mov
push
sub
adc
sbb
stos
fcoms
roll
scas
xlat
or
or
and
jmp
jnp
cmp
sbb
popf
cltd
mov
push
jbe
hlt
xchg
stos
nop
add
sub
pop
sbb
ds
or
add
sbb
xor
in
and
adc
inc
inc
mov
dec
inc
mov
mov
mov
gs
push
into
stc
push
jae
jns
mov
add
dec
orl
mov
test
frstor
push
out
out
lret
push
push
inc
add
cmp
ret
mov
or
dec
push
fs
icebp
shrl
inc
cmpb
fbstp
add
aaa
cmp
xor
inc
fists
xchg
mov
xor
pop
sbb
rcll
adc
imul
cmp
jbe
pop
in
inc
dec
mov
call
out
push
xchg
inc
jae
push
jp
pop
sbb
ss
sti
sub
mov
fwait
negl
imul
rolb
fwait
out
pop
fdiv
and
pushf
arpl
jae
mov
hlt
mov
xorb
outsb
call
movsl
hlt
jmp
xor
call
scas
lock
inc
int
ja
pop
clc
mov
into
xchg
xor
xchg
jp
pop
int3
dec
outsl
mov
push
hlt
pop
out
cld
inc
jl
push
jecxz
in
and
xchg
jle
movsl
cmpsb
nop
xor
pop
stos
sub
out
jb
cmp
seta
adc
add
sahf
jbe
sar
inc
inc
pop
addr16
adc
cltd
jno
lods
jl
aad
xchg
jecxz
xlat
sub
aad
jmp
daa
arpl
div
jbe
dec
icebp
mov
mov
xchg
ret
push
jns
rolb
mov
mov
rclb
mov
push
mov
shll
in
or
push
cmp
shlb
in
xor
fildll
pop
rorb
int3
push
mov
lds
add
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
imul
jl
lret
jl
daa
push
out
je
mov
lahf
decb
jnp
pop
sbb
sub
sahf
mov
sub
pop
and
push
aaa
in
pop
ss
jns
cmp
ja
mov
lcall
test
jecxz
adc
mov
popa
fldz
pop
test
out
out
outsb
repnz
and
jecxz
rcll
ljmp
push
int
sbb
mov
dec
call
jle
jns
lcall
mov
in
roll
push
inc
mov
jle
mov
mov
sbbb
dec
pop
sbb
add
lret
roll
ds
pop
pop
pop
pop
insb
mov
xlat
pop
adcb
mov
push
shr
adc
movsl
lods
movl
imul
push
xor
call
ds
mov
jecxz
pop
subl
pop
sbbl
push
mov
pop
jge
jnp
lock
push
inc
negb
fyl2x
sbb
inc
mov
and
out
loope
add
and
or
pop
mov
inc
jbe
fdivrs
into
fistps
mov
push
add
cmp
sub
nop
pop
fucom
lds
in
das
mov
mov
repnz
pop
movsl
cmp
push
or
stc
call
jl
mov
mov
in
jle
push
jno
xor
fcmovnbe
lcall
adc
ds
and
xchg
xor
cmpl
cmpsb
mov
dec
fnstsw
inc
iret
push
gs
fimuls
jge
scas
lahf
pop
ret
movsb
popa
cld
and
sbb
test
mov
pop
mov
xor
fnstcw
aaa
shl
sbb
das
mov
movl
cmp
and
int
adc
movsl
mov
xor
mov
ja
mov
scas
mov
nop
xor
out
xchg
xchg
mov
push
mov
xchg
and
xchg
add
mov
test
fisttpll
icebp
jo
mov
ret
or
negl
push
sub
dec
fidivrs
out
insb
add
cmp
dec
arpl
add
subl
xchg
loopne
sub
dec
jmp
or
mov
notb
inc
add
insl
dec
sub
push
test
push
xchg
stc
add
lahf
fsubr
inc
inc
in
dec
dec
iret
sbb
mov
in
dec
test
addr16
test
movsl
push
and
stos
nop
repz
xchg
sahf
jg
iret
mov
jg
inc
pop
call
xchg
or
mov
add
mov
insl
push
jp
dec
xchg
cmp
pop
scas
push
push
insl
mov
movsl
int
mov
mov
sahf
bound
dec
arpl
sbb
je
lret
testl
rcl
mov
test
ret
mov
fistpl
adc
outsl
or
xlat
call
dec
out
leave
jmp
insl
fs
xor
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
int3
jecxz
pushf
xchg
lahf
jl
lret
jl
subb
sarl
daa
xor
aaa
jo
pop
push
jbe
dec
dec
pop
popa
in
inc
ret
arpl
pop
xchg
mov
xor
push
mov
subb
or
jecxz
stos
sub
dec
std
mov
jne
sub
push
inc
dec
pop
sbb
push
lret
icebp
out
outsl
jmp
mov
nop
mov
cmp
jg
push
sbb
lds
or
mov
cli
shl
adc
dec
out
sti
jne
and
add
aas
mov
adc
and
popa
sbb
movl
sbb
stc
dec
and
xor
int3
adc
out
push
pop
mov
enter
testb
sub
cmp
jne
mov
xchg
out
push
sub
lock
incl
jl
or
inc
inc
fldenv
adc
xchg
xchg
mov
xchg
jl
iret
adc
pop
push
adc
and
loope
cwtl
lret
mov
pop
and
xor
mov
shlb
popf
xlat
sarb
mov
rcll
mov
inc
mov
clc
or
mov
jbe
xchg
repnz
iret
adc
mov
mov
insb
mov
jno
sub
mov
pop
arpl
dec
shrb
adc
std
test
aam
aas
push
adc
fmull
sub
movsb
je
jg
cmpsb
nop
and
and
dec
and
in
cmp
je
sub
lods
lcall
cmp
pop
xchg
jae
mov
pop
pusha
mov
shr
hlt
cmp
push
lea
rsqrtps
push
mov
dec
cmp
mov
push
pop
fimull
iret
xchg
je
and
mov
add
jbe
pushw
cmc
movsb
cmp
mov
aam
lahf
dec
lcall
imul
call
pop
sub
xchg
cmp
adc
scas
push
dec
xchg
inc
adc
mov
sbb
rolb
and
in
std
lahf
and
mov
or
out
pop
xchg
testl
dec
out
call
sbb
ficoms
pop
jmp
lret
add
loop
pop
and
pop
adc
xor
jg
ficompl
pushf
fstpl
std
scas
pop
push
lds
jle
xchg
jno
xchg
xchg
testl
xchg
add
sbb
fwait
cmp
dec
idiv
cmpsl
or
incl
sbbl
push
sub
fsub
adc
mov
das
adc
xchg
test
cli
insb
pop
cwtl
jno
xchg
into
outsl
dec
fsubrs
sbb
mov
cmp
insl
inc
xchg
mov
mov
mov
push
xchg
in
loop
push
push
jg
and
loop
pop
jmp
sub
mov
fadds
xor
sbb
sbb
dec
cmp
test
or
sub
bound
add
outsl
fsub
cld
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
out
lret
xchg
outsl
cwtl
jl
lret
jl
das
fistl
test
das
hlt
sub
loopne
sub
cmc
push
xor
pushf
adc
and
dec
xor
stc
jb
gs
iret
outsl
fstl
movl
push
std
inc
push
leave
daa
test
aaa
sub
dec
popf
shrb
lea
shrl
cmpsl
shrl
add
jmp
cmp
or
xchg
aam
rcrl
rclb
inc
xchg
arpl
sbb
mov
push
adc
lahf
cld
pop
sub
mov
mov
lds
jg
js
ss
and
push
cmp
dec
mov
mov
shl
xor
push
roll
pop
push
sarl
push
or
jne
arpl
js
stos
inc
ljmp
rol
mov
cmp
and
fcmovbe
aam
add
push
cmp
in
dec
aam
in
adc
pop
mov
mov
aam
popf
ds
fldt
out
movb
data16
sbb
scas
subl
mov
cmp
aaa
int3
dec
cmp
test
cld
push
test
sti
into
cmp
xlat
cmp
xor
out
out
add
jns
inc
xchg
pushf
adc
aam
insb
fidivrl
mov
sub
mov
push
push
jnp
mov
inc
repnz
xchg
sarb
cmp
jo
inc
loopne
and
dec
sbb
sub
cmpl
orb
mov
out
loope
outsl
cmpsb
test
shr
call
lahf
sbb
js
dec
cmp
sub
dec
adc
cwtl
xor
mov
pop
or
fsubl
inc
xor
jge
scas
push
and
dec
mov
mov
pop
or
sub
lea
add
iret
shrb
xor
add
and
sub
xlat
pushl
add
out
xchg
fldt
push
push
push
mov
xor
daa
mov
ret
or
out
leave
push
or
lock
sbb
add
cwtl
scas
inc
lods
and
mov
in
mov
subl
pusha
mov
les
push
lods
adc
jg
jne
arpl
out
cmp
insb
jno
jp
pop
call
in
repz
sub
inc
jbe
mov
xor
jge
into
xchg
call
rorb
jo
icebp
ficoml
cmovg
add
mov
cld
inc
int3
xchg
call
dec
sub
scas
sahf
lea
int
dec
xchg
push
stc
sbb
sbb
adc
xor
xchg
mov
xor
dec
xor
xor
dec
and
jp
dec
cmpsb
mov
idiv
movsl
roll
int
cmpsl
addr16
cld
sub
aam
xor
mov
repz
xor
insl
imul
push
jge
xlat
xor
movsl
les
xchg
pop
or
cmp
and
xor
sarb
mov
cmp
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
lock
movsb
jl
cmpsl
jns
jl
in
xchg
push
cwtl
movsl
imul
cltd
sub
popa
adc
xchg
jne
clc
cmp
mov
sar
cmp
mov
xor
stc
aam
ret
in
lods
stc
inc
out
ror
mov
les
push
loop
fiadds
mov
rcll
adc
pushf
pusha
xor
mov
jnp
lret
lret
xor
add
xor
mov
fwait
cld
inc
mov
dec
mulb
xchg
mov
or
aaa
sbbb
dec
cmp
stos
inc
dec
fisttps
mov
cld
adcb
pop
lea
int3
sbb
push
add
dec
fadds
sbb
adc
test
daa
sbb
push
jg
int3
xor
dec
lret
mov
jg
inc
adc
loope
outsb
and
inc
mov
out
xchg
xchg
sahf
jno
mov
iret
aad
push
xor
cmp
jae
push
mov
pop
add
xor
repz
pop
mov
loope
in
arpl
cmp
hlt
imul
lods
std
sarb
cmpl
jae
jmp
add
cmpsl
mov
xlat
out
daa
and
ljmp
sets
cmp
enter
enter
cltd
enter
das
cmp
rorb
sub
mov
inc
push
jle
fwait
int
fisubl
xchg
adc
sub
mov
lret
aad
in
dec
aaa
int
cmp
add
xchg
cwtl
jmp
add
xchg
popa
sti
push
dec
cs
jno
test
aam
pop
repnz
movsb
xor
cmpsl
mov
and
push
test
mov
lret
mov
insb
jmp
sbb
jae
sarb
icebp
cmpsl
inc
ss
lahf
iret
adc
cld
jnp
sbb
xchg
ja
repnz
bound
jns
data16
rclb
out
pop
out
sub
sbb
jnp
lods
adc
test
xchg
xor
jmp
add
push
std
fnstcw
call
xchg
push
dec
iret
xchg
inc
push
sbb
pushf
or
pop
or
adc
ja
fwait
add
mov
inc
movaps
movsl
ret
mov
lret
xlat
mov
jmp
loope
test
loopne
adcb
push
jno
ret
data16
rclb
mov
inc
jno
fiadds
fwait
mov
test
cmp
jb
adc
inc
or
xor
push
mov
add
sbb
scas
stos
pop
rcr
movsl
mov
fldenv
cmp
add
fxch
add
or
cmc
mov
les
jno
xchg
movsl
ret
and
xor
dec
pop
add
fdivrl
subl
mov
dec
mov
inc
fildl
fs
mov
jmp
inc
inc
cmc
jae
add
pop
int3
sbb
loop
jl
pop
or
inc
gs
cmp
and
fsubrl
pop
push
fucomi
xor
or
xchg
or
push
adc
cmp
cld
adc
add
insb
jno
mov
jl
push
mov
mov
lea
clc
dec
imull
ret
repz
inc
or
push
add
jns
call
mov
jns
scas
insb
pop
jbe,pt
and
out
cmp
add
roll
add
push
aam
jns
in
into
or
jl
jns
jl
fcomi
jg
xor
repnz
jne
mov
push
jl
mov
sbb
xchg
sbb
jmp
mov
mov
push
inc
es
cwtl
rcll
lahf
mov
cmp
loope
iret
cmp
xor
sbb
js
nop
inc
inc
mov
scas
das
lahf
sbb
xchg
adc
lret
mov
mov
push
mov
push
clc
and
movsl
cld
lods
gs
repz
and
dec
adc
mov
outsb
cmp
scas
in
mov
jg
mov
xor
jb
xor
imul
stos
jp
jno
or
mov
mov
les
xor
xchg
stos
in
out
pop
mov
xchg
insb
rcr
pop
sti
mov
add
data16
cltd
add
xchg
xchg
sti
mov
lods
cld
or
and
into
insl
mulb
mov
mov
sub
jno
mov
xor
cmpsl
cmp
insl
xchg
adc
in
xor
enter
into
fidivs
lds
aam
xchg
push
xor
mov
pop
cmp
dec
mov
jnp
mov
xchg
daa
xlat
pushf
push
dec
cmc
inc
stc
mov
inc
xchg
insl
jp
pusha
cld
add
mov
or
test
stos
sub
push
mov
les
inc
scas
xchg
cmp
push
sub
sub
jg
fcmovbe
add
repnz
sbb
cli
cwtl
lcall
jg
adc
mov
aad
dec
shlb
xchg
shll
imul
and
xchg
jo
mov
jno
xlat
lret
xchg
fisubrl
mov
mov
and
std
sub
aas
push
inc
cmp
es
outsl
fdivs
push
imul
adc
sub
sub
mov
or
or
add
mov
je
jo
mov
pop
add
faddl
sub
xchg
gs
push
adc
xchg
xchg
out
jae
jmp
pop
test
adc
enter
jmp
xchg
jbe
lock
xor
and
rcll
into
es
dec
lods
dec
fnstenv
inc
lcall
inc
mov
shrl
jo
lea
test
mov
fisttpl
sbb
adc
out
fsubrs
jl
popf
cmpsl
das
movsb
mov
inc
incl
out
cmp
push
fsubl
fistpl
nop
divps
or
popa
ja
mulb
imul
push
inc
xchg
pop
shrl
push
lds
jp
pop
movb
out
pusha
dec
das
pop
lret
mov
test
movsl
mov
mov
mov
out
pop
daa
movsbl
push
sti
sub
pop
inc
stos
pop
faddp
xor
int
xor
mov
es
lret
lea
sub
aad
mov
outsl
inc
and
xchg
insb
push
arpl
out
lds
add
hlt
stc
cmp
cltd
aad
loopne
mov
mov
stos
filds
sbb
dec
fs
xor
inc
push
fisubrl
in
sbb
das
decb
mov
pop
add
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
cmp
jl
jns
jl
shll
call
lret
clc
add
xchg
rdmsr
sub
inc
aam
or
pop
pop
pop
sub
popf
test
or
lods
jno
stc
in
pop
out
mov
adc
icebp
stos
aad
and
mov
xor
subb
inc
repz
cmp
flds
outsl
loope
dec
fdivrl
fldt
lret
test
adcb
popa
mov
cmpsb
gs
aad
js
loopne
ret
add
xor
shrl
cmc
inc
or
bound
mov
nop
pop
xor
push
testl
mov
sbb
lds
test
and
push
adc
mov
mov
or
sbb
sti
xor
push
shl
or
out
inc
pop
lret
add
imul
je
test
das
inc
pop
cltd
lahf
test
fisttpll
push
es
sbb
or
jg
pop
out
movsl
data16
mov
mov
push
bnd
mov
ss
leave
dec
shlb
lods
push
add
call
cmp
stos
fiaddl
cwtl
xchg
test
push
fdivr
push
xor
dec
pop
les
and
add
and
cwtl
pop
dec
shll
adc
das
jge
mov
pop
push
push
scas
lea
push
mov
sub
adc
or
push
push
shlb
pop
mov
sub
mov
pop
dec
repz
xchg
sbb
movsl
rol
push
rclb
jns
jmp
test
lods
call
das
add
insl
push
cwtl
push
movl
test
js
scas
inc
jg
ljmp
mov
rorl
push
xchg
cmp
add
rclb
movsw
cmpsb
sbb
xor
mov
pop
cmpb
out
push
lock
and
daa
fstps
mov
push
in
add
inc
scas
adc
mov
insb
mov
push
add
dec
dec
lods
inc
push
ss
mov
mov
add
sbb
xchg
stos
pushf
jb
sbb
cmpsb
insl
je
outsl
daa
sbb
push
imul
cmp
and
mov
adc
cld
dec
xchg
inc
sub
ror
inc
test
in
xchg
dec
sbb
push
lcall
pop
inc
jg
bnd
cmp
push
mov
into
xor
das
push
test
xchg
outsb
jle
jp
pop
inc
jg
shrl
add
and
rorl
das
sbb
push
mov
pop
les
push
xchg
loop
push
sbb
fisttpl
ret
je
into
pop
repz
cmp
ret
lods
xchg
and
dec
sbbl
jle
pop
jns
pop
mov
lods
repz
rorl
pop
mov
in
mov
pop
inc
fwait
inc
outsl
les
add
addb
pop
dec
jbe
add
in
and
pop
ljmp
or
xchg
adc
mov
and
dec
subl
sbb
idivl
mov
imul
je
icebp
pop
ja
add
lahf
xor
adc
test
outsb
mov
in
test
mov
call
jmp
repnz
mov
xor
add
mov
jmp
push
mov
test
cmpsl
inc
xor
ds
jl
cli
xchg
sbb
adc
nop
xor
ds
add
mov
push
popa
push
adc
sub
mov
and
ror
cmp
data16
mov
jge
outsl
push
jnp
imul
push
mov
aaa
lret
cs
cmp
sbb
testl
and
mov
les
xlat
adc
outsl
cmp
daa
repz
lods
xor
xchg
pop
daa
fadd
loope
test
inc
mov
or
stc
dec
iret
movsl
pop
cmp
pop
aad
imul
pop
mov
push
pop
add
adc
stos
jl
fwait
and
test
iret
cmp
out
movsb
test
pop
mov
add
inc
xchg
jp
adc
mov
cmp
stos
imul
gs
pop
or
push
test
adc
fwait
pop
movsl
ljmp
add
fwait
add
dec
inc
shr
cmpsl
movsl
stc
mov
mov
daa
xor
and
cltd
ja
xor
ds
cli
clc
ret
mov
mov
mov
pushf
rcrl
int3
fwait
fiaddl
ja
aad
sbb
pop
push
push
jae
xor
and
push
mov
mov
outsb
loopne
popa
imull
mov
sub
popa
rolb
std
in
jg
xchg
adc
int3
repz
xchg
sbb
jg
stos
loope
adc
inc
mov
divb
inc
lahf
pop
lds
cmp
and
xchg
aas
add
dec
popa
iret
pop
pop
dec
out
adc
or
outsl
stos
aad
mov
clc
outsb
sub
mov
sub
or
cmp
out
rorl
shl
fmulp
inc
mov
jne
pushf
inc
scas
jns
int3
movsb
mov
push
sub
dec
adc
push
jo
mov
ret
pusha
out
ja
lock
insl
orl
imul
sbb
stos
mov
repnz
lds
inc
das
fistl
xchg
call
sbb
outsb
stos
dec
or
daa
cwtl
test
fucomip
mov
mov
idivl
je
pop
xchg
push
testl
dec
nop
push
clc
xor
jae
mov
sbb
iret
mov
std
test
adc
cli
adc
fidivs
cmp
push
mov
inc
adc
xchg
sbb
mov
xor
and
scas
or
xchg
or
cmp
add
cmp
repnz
stos
shrl
inc
fs
inc
stos
loope
xor
icebp
jb
andb
mov
dec
inc
sbb
scas
pop
js
cltd
aam
and
in
mov
jne
add
popa
mov
mov
js
pop
or
sbb
add
xor
push
arpl
xchg
add
jbe
dec
or
inc
or
adc
pushf
xchg
xchg
outsb
dec
xchg
aaa
adc
je
fmul
xlat
das
pop
sub
mov
in
lea
in
test
add
jne
and
nop
mov
into
test
xor
jae
daa
lea
mov
dec
push
dec
popa
jae
test
dec
sbb
stos
faddl
in
int
ljmp
fdivrs
xchg
pop
sbb
add
mov
xchg
nop
pushl
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
ret
popa
stos
jl
cmpsl
jns
jl
subl
lock
outsl
imul
rorb
fdivs
xchg
das
pop
pop
out
out
movl
test
lcall
dec
inc
mov
leave
mov
adc
adc
adc
insb
lahf
aas
dec
xor
ja
popa
movb
incb
mov
dec
insl
int3
pusha
movsb
or
mov
cmp
cmp
insb
pop
and
add
sub
push
call
and
sbb
or
fidivrs
mov
sahf
pop
pop
out
in
sbb
add
adc
jle
jg
sub
das
pop
push
or
ds
dec
nop/reserved
mov
sub
inc
es
imul
and
hlt
lahf
arpl
rol
stos
scas
stos
aas
sub
sbb
scas
idivl
pop
popf
jmp
inc
iret
push
xor
sub
jl
ja
mov
xor
cmc
mov
stos
rcll
mov
incl
aad
mov
ror
add
sbb
mov
jae
mov
or
fstpt
jmp
js
pop
das
adc
popf
sbb
in
ljmp
adc
push
add
push
mov
jp
pop
scas
pushf
aas
push
es
cltd
xlat
in
ret
mov
sti
jl
jle
stos
scas
xchg
dec
add
or
adcl
adc
ret
or
or
ds
mov
pop
sub
idivb
leave
fildl
pop
and
ds
sub
push
test
outsb
cmp
adc
adc
loop
out
jge
call
pop
cmp
push
loope
xlat
push
mov
shl
inc
mov
insl
dec
out
nop
lods
stos
push
notb
push
or
adc
lret
je
mov
fsubr
dec
dec
jo
pop
loop
js
pop
sub
xchg
fnstcw
out
and
mov
int3
xchg
push
aam
xchg
inc
jge
iret
fdiv
push
xchg
mov
rclb
stos
cli
and
pop
or
cltd
jge
fldl
sub
test
addr16
cli
adc
xchg
lock
sbb
scas
or
mov
pop
test
je
adc
dec
jle
jno
mov
stc
dec
sahf
cs
outsb
daa
mov
mov
jae
mov
fidivrl
push
jp
ljmp
pop
roll
inc
addr16
shll
mov
jbe
and
fnsave
push
ficomps
or
test
gs
mov
sbb
out
lcall
xor
sub
pushf
mov
xor
inc
mov
jae
xlat
leave
jns
mov
inc
xor
inc
fs
fimuls
sbb
jmp
xchg
mov
push
and
adc
sub
es
adc
loopne
adc
test
xchg
mov
mov
daa
jnp
mov
or
flds
xchg
cmc
repnz
insb
gs
pop
xor
cmp
ja
adc
dec
ss
aaa
fisttpll
adc
mov
arpl
cmp
or
mov
jmp
push
pop
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
or
jb
xor
sahf
pop
push
mov
sbb
jae
arpl
add
or
adc
xor
jns
push
dec
stc
cmp
inc
sti
or
lods
adc
test
lods
xchg
popf
jno
scas
adc
faddl
push
das
cmp
jne
mov
loop
push
shrb
lock
imul
sbb
and
mov
xchg
rol
cmp
sub
andb
in
pop
mov
mov
mov
call
outsb
cli
lret
push
fsubrl
mov
cwtl
mov
mov
stos
jge
push
in
dec
mov
xor
sub
pop
stos
clc
cltd
mov
loope
mov
jmp
pop
inc
mov
ret
pushf
lret
push
xchg
popf
inc
mov
sar
jmp
lock
push
call
test
pop
stos
sub
testl
mul
xor
rorl
into
stos
cmc
je
mov
leave
mov
outsb
push
addr16
ds
lret
popa
ret
scas
leave
outsb
pop
outsl
in
inc
inc
mov
sub
mov
shlb
in
cmp
cmp
mov
mov
imul
fmul
ror
scas
mull
pop
mov
inc
inc
jb
xchg
inc
out
mov
mov
into
or
jp
mov
or
jp
or
sbb
jnp
push
jl
push
js
fisttps
mov
push
jb
rorl
add
shll
and
jecxz
or
fidivs
imul
out
jmp
mov
cs
loop,pn
pop
and
test
xchg
repz
cwtl
fdiv
ja
xor
dec
mov
and
push
mov
push
fsubs
fisttpl
mov
sti
lods
inc
sbb
in
stc
sub
stos
mov
xchg
mov
xor
fwait
stos
add
lods
mov
push
push
daa
pop
movsl
xchg
stc
xor
mov
cld
mov
sbb
scas
imul
mov
std
sub
mov
lret
xor
and
js
push
pop
xor
notb
stos
movsb
xor
stos
cmc
cs
loopne
loope
nop
cltd
adc
lock
fisttpl
lea
jae
xlat
mov
jns
mov
cmp
mov
stos
push
cli
and
rorb
out
push
xlat
movsl
lahf
fstps
and
cmpsl
ss
add
addl
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
xor
lahf
scas
cmp
jle
jl
jne
jmp
leave
push
fsubrl
pop
aad
in
roll
js
sbb
nop
movsl
sub
daa
jp
push
cmc
pop
loop
shll
rorl
xor
sbb
jo
popf
imul
out
add
inc
dec
adc
and
mov
dec
lcall
xchg
and
pop
lds
mov
or
out
insb
test
out
sahf
subb
add
xchg
addb
test
pop
cs
mov
mov
jp
in
aam
mov
arpl
dec
and
jp
jns
fstl
jg
pusha
mov
jl
sbb
or
cmp
xchg
mov
outsl
sbb
fldcw
repz
adc
sbb
imul
out
inc
or
test
iret
inc
repnz
mov
arpl
mov
lock
rol
int3
push
test
test
push
mov
adc
dec
or
std
mov
pop
shl
addb
mov
inc
mov
xchg
inc
fldpi
xchg
in
leave
mov
mov
je
mov
ss
cltd
jae
mov
pusha
lcall
fs
in
cs
cld
enter
cmpsl
and
cmpb
push
push
mov
push
out
and
jecxz
out
add
inc
xor
push
nop
mov
mov
dec
scas
loopne
repz
xchg
cmp
fnstenv
enter
jg
cs
inc
leave
je
pusha
dec
pushf
mov
cli
dec
pop
scas
ffreep
fcmovnu
in
popl
cmp
add
push
add
out
push
mov
inc
dec
pop
adc
insb
gs
cmp
sbb
ja
push
and
orb
adc
insl
mov
out
test
jmp
mov
mov
or
cli
sarb
icebp
into
cwtl
jp
jecxz
mov
xchg
loope
mov
cli
mov
jno
push
outsl
and
fisubl
mov
imul
fcmovnbe
lea
inc
loop
inc
in
pop
enter
push
xchg
jo
lret
adc
movsb
fstp
mov
fsubl
leave
in
xor
js
jmp
sub
adc
ret
jne
les
iret
hlt
fdivrp
rep
jl
ss
out
jmp
xchg
mov
xor
mov
mov
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
movsb
lret
pop
fisubrl
jl
scas
jle
jl
cwtl
out
xchg
lea
pop
rcrl
filds
mov
pop
pop
adc
push
int
adc
shll
aas
xchg
jmp
pop
bswap
and
dec
and
scas
shl
mov
or
jnp
rolb
push
xchg
fwait
dec
xchg
call
inc
push
je
into
pop
push
xchg
pop
adc
orb
cmp
lahf
dec
and
push
pop
and
ret
mov
aam
xor
mov
inc
scas
pop
xor
pop
or
pop
cmp
mov
iret
sti
or
and
in
pop
or
dec
rcl
lea
and
mov
mov
inc
jle
sub
inc
outsb
cmp
outsl
repnz
inc
fsts
sub
sahf
loop
dec
int
out
push
add
in
cmpsb
cmp
in
test
pop
shll
cwtl
mov
ss
enter
mov
sahf
gs
push
jo
or
in
mov
out
inc
sbb
in
and
pop
mov
loopne
jbe
jle
loopne
sub
mov
or
cld
mov
push
dec
cmpsb
mov
sub
xchg
lods
mov
jle
sti
xlat
or
sbb
cwtl
pop
or
and
jo
testb
jg
adc
shlb
push
out
xchg
test
dec
push
push
push
hlt
cmp
cmc
cltd
shl
and
mov
sub
cmpsb
mov
jp
sub
movsl
and
pop
fildll
test
lahf
or
adc
fidivs
and
repnz
push
or
out
push
inc
jns
out
sbb
rclb
loop
xchg
xor
jne
ds
jbe
test
pushf
xchg
lods
lahf
pop
adc
push
adc
outsb
jge
adc
inc
jle
add
xchg
or
inc
gs
stc
xchg
int3
imul
jo
push
imul
adc
or
out
xchg
shl
adcb
icebp
std
cltd
push
and
out
sbb
out
icebp
mov
mov
adc
sahf
adc
ljmp
scas
push
push
ret
adc
stos
push
pop
ljmp
sahf
jle
ss
mov
pop
jmp
xchg
insb
jns
xor
sub
ret
adc
in
test
test
mov
and
mov
dec
push
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
mov
mov
jl
jl
pmaddwd
xchg
cmp
and
dec
add
fstpt
mov
mov
cmc
aas
jle
add
push
jmp
std
pop
jle
xor
push
sub
push
jb
jae
adc
shll
iret
cltd
sbb
mov
mov
and
daa
dec
in
in
cwtl
lea
outsl
out
mov
and
repz
cmpsl
mov
lcall
sbb
movsl
int
pop
enter
iret
xchg
mov
xor
insl
or
mov
adc
mov
pop
dec
push
pop
jbe
stc
jb
adc
pop
pop
jp
xchg
push
and
mov
or
in
les
movsb
pop
comiss
jns
mov
pop
arpl
mov
test
add
arpl
inc
cli
jg
inc
cs
sub
es
shrl
mov
jge
push
inc
push
cmp
stos
and
inc
cmp
inc
xchg
and
jae
iret
pop
or
ret
or
out
adc
ret
inc
cld
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
repz
xor
jg
jl
inc
loope
push
repnz
loope
add
rcr
inc
sbb
cmpsb
dec
adc
cmp
out
inc
shlb
xor
dec
outsb
xor
jbe
dec
int3
mulb
ja
mov
sub
inc
insb
frstor
arpl
xor
mov
cmpsl
mov
mov
in
cld
cmp
enter
push
dec
out
add
cs
mov
inc
push
sbb
clc
mov
bound
outsb
sub
adc
or
dec
inc
jecxz
push
mov
mov
lods
test
test
sarl
mov
mov
add
sbb
sbb
dec
mov
shrb
mov
jl
dec
inc
cli
inc
xchg
ds
pusha
xchg
loope
adc
ljmp
loop
xchg
push
test
stos
fs
sub
lea
lock
fsubp
ret
sarb
ret
add
loopne
insb
push
mov
cld
je
arpl
loop
adc
lcall
loop,pn
pop
mov
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
stos
rcrl
jl
adc
jl
shr
mov
iret
adc
fmul
loopne
jns
mov
push
sahf
lahf
push
sbb
les
dec
push
fwait
cmp
push
popa
enter
adc
out
test
mov
mov
inc
sub
addb
ret
imull
inc
mov
sahf
jb
popa
sbb
mov
test
sub
lock
and
mov
out
outsl
in
pusha
sar
push
dec
jo
xor
fldenv
jno
or
mov
test
sbb
sub
mov
jne
mov
movsl
push
jbe
shrl
pop
mov
mov
mov
mov
inc
andl
lds
and
movsl
scas
push
out
pop
in
and
movb
sarl
xor
jbe
adc
xor
cwtl
lds
inc
inc
jl
dec
loope
icebp
adc
inc
stos
fsubrl
shl
bound
movsl
and
call
lea
daa
lcall
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
ja
jae
jl
adc
jl
hlt
adc
js
je
fadd
insl
roll
outsl
not
pop
lods
mov
cmp
lret
adc
leave
or
add
fsubrs
fs
mov
outsb
push
data16
lcall
inc
push
adc
sbbb
cmp
xor
mov
not
and
pop
xor
mov
and
lds
mov
aad
cwtl
add
ds
jbe
mov
sti
mov
push
jmp
jns
ret
xlat
nop
sbb
sbb
xchg
fwait
pop
adc
xchg
and
ds
cs
jns
xor
inc
mov
lcall
jae
and
sbb
dec
pop
mov
and
mov
dec
test
inc
lret
sub
fbstp
push
icebp
lret
sub
mov
subl
sbb
dec
mov
es
jmp
xchg
or
lods
add
aas
stos
stos
mov
rcrl
jmp
mov
out
or
mov
mov
test
je
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fcompl
xchg
ficoms
inc
jl
adc
jl
push
sbb
aam
push
sbb
and
mov
mov
das
pop
movsl
aaa
xchg
jge
fwait
insb
dec
loop
in
cltd
push
in
dec
pop
push
cmc
mov
dec
pop
nop
xchg
stos
mov
pop
pusha
into
inc
push
xchg
into
lea
and
cmpsb
jnp
mov
push
pop
cwtl
push
mov
cmc
fbld
jne
jns
add
sub
pusha
mov
jmp
int3
aam
sbb
push
fucomp
fldenv
lret
dec
xchg
in
mov
xor
cmp
aaa
int
fadds
cli
cli
xchg
inc
adc
push
adc
mov
mov
xlat
push
outsl
mov
fs
mov
pminub
or
xlat
neg
inc
cmpsl
popf
mov
sub
mov
inc
out
sbb
mov
call
cli
scas
inc
gs
mov
jl
andb
fidivrl
rolb
aas
ret
cmpsb
in
adc
mov
and
and
gs
cli
subl
js
dec
push
mov
icebp
aaa
pop
shrb
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
movsb
lahf
aad
aaa
inc
jl
adc
jl
inc
lahf
sbb
lds
jmp
adcl
cmp
int3
xor
push
cmc
fimull
hlt
cwtl
push
dec
dec
sbb
push
pop
adc
inc
lret
test
xor
pop
sub
sbbb
movsb
stos
lret
fstp
in
push
out
stos
test
in
and
mov
xchg
xchg
xchg
jno
shl
dec
sbb
push
inc
aam
or
mov
in
adcb
lahf
shlb
lods
add
pop
scas
lock
repz
and
test
fdivl
insb
jmp
rclb
cmp
inc
jae
sbb
inc
loop
ret
mov
iret
mov
sub
arpl
test
aaa
mov
scas
mov
ret
ret
or
pop
popf
add
fwait
sbb
xlat
jnp
pop
mov
ja
stc
inc
cld
sub
or
cmp
sbb
and
sbb
negb
add
xchg
or
ret
jno
leave
and
xchg
fstpt
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
mov
adc
jl
add
icebp
lock
pop
scas
push
std
inc
jb
inc
rcl
adc
ds
aam
cwtl
xor
ss
fisubrl
jmp
xor
sub
cmc
push
sub
jo
sub
scas
adc
insl
testb
es
leave
push
outsb
mov
je
pop
in
dec
push
repnz
mov
cmc
push
iret
fdivrs
jae
aam
jb
insl
andl
js
loop
icebp
and
fidivs
jns
adc
mov
into
jne
pushf
cmp
lahf
pop
fdiv
test
lret
das
test
imul
cmpl
mov
cmp
addl
dec
xchg
iret
fiaddl
sete
lret
mov
std
dec
stos
imulb
xchg
test
stc
lea
mov
jle
lods
mov
outsb
jb
mov
mov
pusha
out
loopne
mov
es
pop
adc
jg
push
mov
mov
fdivr
insb
cmp
add
imul
mov
xor
mov
jmp
pop
shlb
mov
cmp
movsl
jge
push
jmp
jl
adc
jl
les
jns
test
adc
test
dec
cwtl
js
cmp
repz
cs
ljmp
ljmp
ret
adc
or
push
enter
push
push
shll
scas
std
cmc
int3
jp,pn
outsb
jge
callw
ja
jmp
add
ljmp
test
hlt
rclb
pop
mov
mov
sbb
and
test
pop
fisubrs
lea
outsb
lds
sbb
mov
cli
dec
mov
in
xor
pop
into
pop
jae
push
daa
repnz
lods
enter
fcmovnbe
dec
mov
dec
std
cmpsb
xchg
addr16
out
mov
xor
iret
cmp
pop
in
int
pop
sub
inc
jns
and
or
mov
dec
xor
pop
add
inc
jno
and
out
xor
pop
gs
rolb
pop
rclb
push
or
scas
mov
fwait
pop
movsb
adc
push
ljmp
push
sbb
adc
pop
sahf
push
sbb
arpl
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
or
pusha
xchg
jg
jl
jae
loop
data16
mov
subb
pop
mov
sbb
xchg
fnstsw
push
imul
mov
mov
jno
jo
int3
mov
pop
loope
popa
dec
comiss
dec
jne
fucomip
push
rcl
gs
xor
xchg
cmp
add
aaa
push
outsl
jl
incb
xchg
shlb
adc
ja
in
jno
and
inc
imul
mov
cmovb
adc
in
cmp
push
or
fstpl
aas
jmp
fisttps
mov
xor
insb
pop
pushf
cld
shrb
inc
pop
jp
pop
jne
add
ds
popf
and
in
sub
jp
icebp
daa
int3
jne
xor
test
insl
xchg
lret
fs
push
cmp
inc
jae
fldl
imulb
xor
sbb
shll
pop
cmp
cmp
cmpsb
or
testl
cmp
mov
push
scas
mov
int3
clc
fdivrp
ljmp
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
push
scas
inc
jl
adc
jl
das
push
inc
arpl
cltd
lret
lret
pushf
dec
or
pop
push
lods
aaa
aaa
xor
test
jno
out
popa
mov
mov
cmp
out
xchg
pop
pop
adc
xchg
mov
or
adc
jecxz
jecxz
stos
loopne
sbb
addr16
mov
sub
xchg
filds
test
lds
pop
rcrl
bound
jns
pop
xor
and
xchg
sbb
inc
inc
aad
rcl
and
and
mov
push
adc
push
inc
dec
xor
adc
jmp
mov
lock
insl
roll
and
cmp
incb
sti
outsb
jg
test
fcompl
pop
fidivs
icebp
iret
ret
addr16
jo
xor
cmp
jae
cmpsb
add
jl
xor
aas
cmpb
push
in
and
lods
fistpl
rcrb
jno
and
xchg
pop
inc
lock
or
or
daa
fwait
sub
popa
dec
push
sbb
jns
cmp
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
adc
inc
jl
adc
jl
dec
mov
cmp
stos
adc
or
lcall
pop
inc
loope
xor
add
sbb
adc
lods
call
das
arpl
test
test
xor
xlat
leave
mov
mov
aas
movsb
inc
jle
cmp
mov
ljmp
mov
push
data16
and
inc
fwait
push
push
inc
cmp
pop
mov
in
mov
push
mov
ds
scas
mov
add
add
adc
adc
pop
scas
add
into
cmp
icebp
pop
sarb
mov
enter
adc
pop
and
and
pop
jae
inc
sti
mov
mov
mov
adc
jp
xchg
loope
pop
xor
mov
stc
jmp
ja
mov
push
xor
xor
mov
pop
test
popa
and
daa
imul
in
cmc
data16
fadd
aas
jmp
push
xor
jno
mov
dec
pop
jg
iret
leave
mov
rclb
int
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
jp
in
into
add
pop
add
add
jne
outsb
dec
jno
or
mov
dec
das
test
cs
mov
sahf
or
mov
sbb
adc
out
nop
push
dec
mov
fiaddl
out
stc
out
sub
ret
js
pop
sub
cld
push
scas
push
nop
dec
lret
ja
mov
sub
mov
or
clc
insb
cs
fsubrs
lret
es
xchg
push
ss
lahf
xor
outsl
ds
pop
jns
ljmp
ror
cmp
outsb
call
dec
cli
dec
ret
cmc
shl
and
ret
in
loopne
movsl
mov
push
test
xchg
jo
mov
iret
outsb
subb
ss
mov
sub
or
inc
bound
rcrb
sub
push
aaa
aad
mov
push
pop
adc
mov
rcll
dec
test
pop
ret
xor
popl
xchg
push
movsb
mov
mov
mov
xchg
call
enter
xchg
ljmp
pop
ficoml
in
jle
mov
cmp
jo
iret
add
pop
add
add
push
mov
rolb
xorl
inc
imul
sub
fstpl
cmp
inc
lea
and
adc
jns
rcrb
lods
rcl
pushf
mov
out
enter
lret
rcrb
cld
push
inc
ljmp
out
pop
lods
xchg
sbb
sub
and
iret
mov
dec
mov
cli
aaa
scas
fstps
and
fists
jecxz
pop
jnp
cmp
shlb
mov
test
mov
arpl
adc
xor
shll
divl
sbb
pop
ja
lea
pop
rcrb
push
cltd
mov
mov
arpl
mov
inc
inc
jle
mov
mov
movhps
cli
ja
out
adc
xor
add
ret
mov
mov
mov
icebp
dec
mov
jno
jb
out
push
mov
add
add
adc
mov
push
add
inc
sti
rolb
add
add
add
sub
daa
inc
jne
push
cmpsb
test
std
rdmsr
push
imul
repz
mov
repnz
sub
mov
adc
pop
cltd
dec
lods
out
jbe
add
cmpsb
shrl
sub
jnp,pn
std
or
xchg
xor
scas
xchg
xor
jle
xchg
mov
lods
jo
mov
cmp
imul
xor
rcl
and
inc
jle
iret
or
mov
xor
or
stos
cmpsl
jne
xchg
outsl
stos
dec
arpl
jnp
dec
in
pop
ja
ljmp
inc
sub
push
fsts
cli
icebp
and
jns
insb
jmp
into
sub
lock
fdivrs
fcompl
fistpl
xchg
addl
aad
nop
mov
mov
dec
stos
push
mov
pop
jle
sbb
add
rclb
dec
mov
popl
add
mov
idivb
mov
add
add
pop
add
add
add
leave
cmpsl
mov
inc
xor
xorl
popa
push
and
cmpsb
cltd
cmc
sub
mov
xor
mov
fsubp
sti
hlt
cmp
push
subl
cmp
sub
and
cmp
cmp
fmull
aaa
jl
pop
ret
sahf
cmp
sub
je
add
pusha
cmp
mov
fcoms
cmpsl
mov
test
adc
jns
sbb
add
test
out
xchg
xor
inc
mov
ret
ja
insb
jg
mov
pop
jae
xorl
pop
mov
cmp
pop
dec
mov
mov
cmc
scas
sbb
aaa
rcll
imul
aam
cltd
cld
mov
sbb
movsb
jl
repz
sbb
nop
xchg
add
sahf
scas
push
shrl
mov
add
sub
mov
jne
xchg
adc
imul
mov
std
pop
cltd
and
cmpl
outsb
sub
pop
jae
or
ss
pop
xchg
inc
xor
or
add
pop
add
add
push
jb
jge
add
out
gs
cmp
sub
or
ret
mov
and
test
mov
inc
push
push
dec
jo
lods
pop
xlat
stos
icebp
xchg
ds
xor
vandps
adc
sub
lea
sbb
xor
loopne
stos
cmpsl
xchg
push
pop
pop
xor
mov
imul
fisttpll
pusha
and
out
xchg
repz
nop
pop
cmpsl
sbb
mov
out
mov
jae
xchg
lock
xchg
fnstcw
in
or
dec
push
push
mov
sbb
sbb
test
push
adc
jmp
idivb
xor
cs
adc
cs
mov
loopne
mov
movsl
jne
mov
mov
orb
xchg
lock
aaa
jl
mov
add
aaa
insl
or
fisubrs
nopw
enter
aaa
jmp
lcall
jg
cmc
insl
cmc
out
lcall
mov
pop
xor
aam
add
add
add
push
inc
xor
push
cs
sbb
int3
arpl
push
mov
clc
cs
add
adc
cmc
movl
scas
hlt
xchg
adc
sbbl
xor
dec
ret
hlt
inc
push
gs
in
out
in
lds
jmp
add
pop
aad
pop
dec
dec
push
lret
fwait
mov
icebp
cmp
xchg
ficompl
adc
sbb
inc
add
xchg
or
cli
in
mov
jno
call
push
mov
iret
mov
lahf
xchg
xchg
fwait
dec
call
mov
push
ret
nop
ficoml
jmp
or
jle
ds
mov
dec
mov
xchg
ds
mov
addr16
mov
mov
adc
xchg
imul
mov
gs
andl
mov
and
pop
push
jbe
pop
aas
pop
pop
mov
fwait
sub
jle
add
outsl
jle
aam
aam
or
aad
add
add
add
in
cs
dec
cmp
push
cmp
add
xlat
stos
fidivl
enter
pop
cmp
call
lahf
inc
insl
pushaw
xchg
mov
sbbb
dec
hlt
mov
cmp
cmp
xchg
push
movl
shr
mov
lret
sbb
push
jmp
xor
mov
test
out
or
or
dec
pop
inc
push
inc
adc
jno
mov
push
and
push
mulb
daa
aas
mov
inc
mul
insl
notb
outsl
subl
xchg
cmp
cmpsb
lcall
mov
jmp
and
pop
daa
push
sub
cli
cmc
mov
jnp
adc
pusha
mov
cwtl
mov
outsl
fwait
cltd
ror
pop
and
xlat
lret
out
scas
clc
andb
push
mov
mov
ss
call
outsb
dec
inc
pop
add
jle
and
scas
sti
jle
sbb
push
mov
pop
add
add
mov
int
add
xchg
xchg
icebp
lcall
jns
out
and
aas
or
aad
inc
popf
test
shlb
and
mov
xchg
aad
fsub
test
mov
jle
cmpsb
and
sub
les
iret
lods
das
xchg
cmp
lods
and
daa
gs
xchg
pop
cld
in
or
cmp
mov
pusha
or
nop
pop
jne
lock
adc
sbb
push
add
or
xor
gs
push
push
inc
daa
add
mov
inc
fnstsw
mov
shrb
lret
mov
outsl
imul
arpl
rorl
movsb
add
data16
mov
inc
fisubs
jno
into
jecxz
movsb
mov
or
xchg
sub
jl
iret
and
jmp
add
push
cld
inc
lea
push
push
insb
sub
and
lahf
fnstcw
ss
lahf
stc
and
mov
pop
fsubl
dec
and
add
add
enter
dec
pop
pop
mov
jl
push
loop
mov
and
jb
push
cmc
das
or
inc
pop
imul
mov
and
lahf
dec
sub
cmc
icebp
jns
call
movb
repnz
lea
sbb
or
cmp
pusha
adc
inc
dec
into
lcall
jbe
imul
in
and
outsl
mov
jmp
sub
loop
movswl
bound
dec
lahf
add
sbb
push
pop
lret
ja
sahf
mov
mov
lret
ja
xchg
movsl
dec
and
rorb
je
sub
pop
mov
pop
aam
mov
push
jnp
enter
std
sarl
xchg
lcall
mov
push
fiadds
mov
or
and
sub
push
pop
out
xchg
aad
pop
jns
ror
cmp
imull
or
out
xchg
push
fidivl
add
push
jl
jle
insb
inc
xor
push
and
add
pop
add
add
xor
test
dec
or
lea
sub
lahf
std
lods
lret
xchg
clts
sti
je
ret
inc
cmpsl
mov
ds
sub
inc
icebp
cmp
and
pop
test
xlat
in
push
cli
mov
jmp
loop
and
jle
push
lock
push
shll
push
rcrb
lds
inc
lret
dec
mov
fisubs
iret
xchg
jnp
ja
push
xlat
leave
cmp
fs
mov
add
fldt
inc
xchg
std
jo
int
mov
jmp
inc
pop
sbb
push
push
test
jae
pop
out
xchg
fistpl
daa
push
adc
jmp
adc
sub
cmp
xor
mov
lcall
decl
and
shlb
cli
push
imul
cwtl
or
cli
sub
xchg
cmpsb
add
mov
not
jbe
jb
add
fwait
mov
sbb
popa
adc
pop
add
add
pop
divb
sti
mov
into
call
xorl
mov
shrl
mov
sub
pushl
xorl
mov
pushf
mov
dec
mov
int3
rcll
loope
popa
gs
pushf
adc
xchg
mov
in
cmp
push
mov
je
leave
insl
shll
ret
push
cld
pop
dec
add
mov
sub
pop
btr
aaa
mov
mov
mov
imul
sbb
xchg
movsb
adc
xchg
ficomps
jg
mov
fisubs
inc
and
lods
push
pop
and
push
push
lods
xchg
sbb
ss
jne
out
ljmp
dec
fbstp
lds
aas
sub
int3
aad
in
int3
or
mov
sub
xchg
nop
out
clc
ds
aas
ficoms
leave
xchg
loopne
jno
sub
fstl
mul
incb
aaa
data16
jne
mov
xchg
daa
iret
loopne
cmp
add
pop
add
add
sub
add
fs
test
aad
jnp
fnstcw
fcompl
mov
xchg
and
sub
ss
addr16
out
in
dec
orb
adc
pop
pop
jecxz
les
add
jg
imul
jp
shlb
or
ret
inc
stos
mov
pusha
rclb
std
pop
cmp
insl
daa
bound
addr16
stos
mov
mov
pop
cmp
shr
cmp
pop
outsb
inc
outsb
pop
mov
je
aad
dec
je
stos
and
xor
sub
sbb
cld
fistpll
inc
add
lods
cltd
jmp
data16
in
ss
sub
pushf
mov
xchg
shlb
xor
mov
fdiv
fwait
nop
cmp
lods
or
mov
dec
enter
sub
and
jle
sbb
pop
notl
nop
or
movsl
jp
xlat
lahf
jne
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
cwtl
and
test
scas
sbb
and
ljmp
lret
mov
insl
mov
adc
insl
jb
and
push
fs
lret
push
xchg
inc
xchg
inc
in
add
out
pop
popf
cmovo
inc
jno
mov
add
fbstp
sahf
syscall
dec
xchg
pop
inc
stos
jne
mov
pusha
mov
sub
add
xor
loope
inc
fisttpl
pop
push
add
leave
or
sbb
inc
mov
nop
in
pop
das
pop
data16
adc
lds
jp
sub
shll
cmpsl
or
xor
and
scas
jecxz
shl
add
mov
sub
dec
or
inc
mov
pop
push
cmpl
bound
repz
sub
push
mov
into
inc
pop
jp
xchg
dec
repnz
adc
sub
dec
add
loope
xchg
jg
xchg
mov
push
sub
pop
sarl
lods
std
mov
adc
add
pop
add
add
mov
cmpsl
aad
ret
cs
daa
call
push
lods
sbb
mov
inc
fisubs
and
pop
imul
lret
hlt
test
mov
cmc
repz
adcb
pop
xchg
or
push
cmp
mov
mov
cld
mov
test
push
inc
or
jno
pop
js
js
sbb
mov
sub
fsubl
test
popa
xor
test
xchg
lods
pop
or
mov
add
adc
pop
loope
dec
xorb
or
push
mov
pop
jle
xor
add
add
mov
xor
or
or
jp
es
push
inc
adc
sbb
push
jns
sbb
pushf
pop
cs
xchg
xchg
insb
ja
inc
dec
loop
xchg
cmpsl
fldcw
sbb
adc
test
push
mov
insl
lock
std
repz
cli
push
push
dec
fldl
add
add
add
fdiv
jle
add
faddp
sub
test
dec
dec
add
pop
inc
lds
enter
fisttpl
cmp
fmuls
and
and
ljmp
xchg
mov
and
inc
hlt
std
fdivrl
cmp
clc
pushf
inc
and
lock
iret
push
enter
das
add
adc
lret
mov
or
inc
cwtl
pop
mov
ljmp
subb
sbb
mov
xchg
ds
xor
out
inc
aad
sbb
jle
mov
pop
das
xor
repz
pop
divb
js
testb
pop
mov
mov
stos
out
jge
pop
pop
mov
lret
and
ja
mov
insb
push
push
bound
push
popa
cltd
add
add
arpl
xor
ljmp
inc
xchg
push
add
in
sub
cmp
cmp
pop
fldcw
push
fiadds
add
add
add
arpl
jbe
pop
cs
xor
rcrl
imul
je
bnd
cs
pop
mov
pop
push
mov
pop
je
dec
into
mov
add
sub
add
mov
sub
add
dec
xchg
cmpsb
adc
sub
xchg
dec
pop
xchg
lds
cmpb
jae
cmpsb
push
xor
enter
jle
iret
cmp
pop
cmpsb
div
sub
test
popa
add
cmpsb
inc
stos
sahf
je
mul
sbb
mov
jle
add
jle
xchg
sbb
push
and
popf
movsl
mov
shll
sub
imul
sub
hlt
sarl
add
testb
insl
repnz
fwait
xor
fstpt
jnp
test
jo
mov
scas
jp
sti
ds
xor
lods
sbb
lahf
and
add
insl
lcall
lret
inc
std
scas
test
jg
pop
filds
add
add
add
jle
inc
inc
iret
iret
shll
and
lret
or
dec
maskmovq
negl
leave
xlat
pop
dec
dec
jns
sub
outsl
jge
inc
cmp
shll
push
add
hlt
jns
inc
mov
rolb
mov
aad
pushf
push
sub
sar
mov
inc
fldenv
xchg
jg
test
mov
and
std
std
repz
mov
sbb
les
pop
dec
imul
lcall
xor
jne
ret
mov
or
pop
arpl
adc
sbb
push
pop
es
cld
test
stos
push
pop
push
bound
lret
pop
sahf
das
jle
aas
aad
lods
lds
shrb
pop
adc
adc
rcrl
hlt
sub
inc
dec
and
fldcw
adc
iret
pushf
mov
or
outsl
pop
dec
mov
cs
inc
repnz
rorb
roll
add
lret
xchg
in
mov
incl
jmp
aas
fs
add
add
add
lret
lock
ljmp
lock
mov
and
test
xor
and
pop
sbb
nop
cmpsb
xlat
jnp
das
sub
out
movsb
int
mov
mov
adc
xchg
mov
fs
jnp
ja
inc
adc
cmp
and
ret
cmp
loop
repnz
dec
pop
inc
push
pop
mov
jg
and
mov
pop
movsl
sahf
stc
lds
test
mov
aas
jbe
rcrb
mov
das
xor
xchg
rcrl
xchg
push
adc
lahf
adc
cmp
mov
lods
and
jl
pop
inc
dec
shl
push
insl
pop
push
icebp
mov
call
ds
pop
pop
sbb
fidivl
cmp
out
xor
jmp
or
js
push
test
pop
loop
cld
jmp
std
mov
call
inc
mov
in
negl
es
int
loope
add
add
add
mov
lods
push
xchg
adc
jae
aad
sbb
mov
fmuls
loope
pop
add
ja
mov
rcll
cmc
adc
mov
test
sub
adc
shrb
sub
sti
in
pusha
xchg
jo
push
push
pop
enter
and
aad
lods
adc
inc
loope
das
push
mov
lahf
nop
gs
call
pop
inc
sbb
int
int3
add
push
repnz
daa
les
flds
cmp
xchg
adc
adc
mov
shlb
outsb
in
jmp
fisubrs
adc
arpl
mov
js
pusha
push
pop
fwait
sub
popa
punpcklwd
repnz
mov
aam
inc
mov
xchg
cltd
sbbb
and
in
mov
push
xchg
ficoms
push
nop
jg
xchg
pop
sbb
shll
mov
jns
push
xor
jne
mov
pop
dec
add
mov
jge
nop
mov
jb
add
pop
add
add
jge
mov
popa
test
into
inc
xchg
ffree
ss
rcl
mov
pop
add
sti
daa
stc
sub
lds
fidivrs
jb
sbb
pop
and
movsb
jno
inc
fwait
jmp
lock
pop
mov
add
mov
test
or
dec
fs
mov
cmp
push
sub
shl
mov
adc
cmp
ss
sti
rolb
inc
movsl
lods
leave
jg
push
sbb
popa
adc
decb
and
jbe
mov
in
mov
mov
aam
pushl
inc
test
lods
lods
sti
mov
mov
add
dec
mov
out
push
lods
fst
add
xlat
aaa
cmpb
dec
cmpl
sbb
adc
movsl
dec
or
das
fbstp
int3
push
sub
add
adc
push
jno
mov
pop
jns
add
pop
add
add
mov
int3
sub
in
ja
mov
insl
mov
push
fstp
mov
cwtl
cs
aam
mov
call
push
cmpl
sub
mov
mov
cli
sbb
xchg
out
cmpl
inc
xor
in
cmc
cvtdq2ps
fcoms
jo,pn
idivl
int3
rcl
mov
icebp
adc
insb
scas
jo
adc
mov
jbe
scas
pop
jl
dec
pop
mov
pop
out
inc
movsb
les
fidivrl
stos
adc
adc
push
xchg
fisubs
dec
leave
fidivl
or
xor
adc
xchg
scas
lahf
movsl
jp
mov
jb
int
pop
or
mov
jae
cmpsb
cmpb
sbb
sub
cmp
fwait
cmp
or
dec
cmp
addr16
mov
and
pop
in
out
repnz
add
pop
call
mov
bound
in
add
add
add
lret
dec
insl
mov
inc
in
in
jle
cmp
inc
sub
add
or
pop
and
inc
adc
sbbl
hlt
xlat
clc
pop
je
fidivs
push
or
add
cld
js
arpl
sbb
jbe
adc
sub
lea
les
cmp
rcrl
js
jge
stc
insb
lret
xor
js
pop
flds
lea
push
pop
and
xor
mov
sahf
xchg
cltd
or
mov
repz
xchg
push
fcmovnbe
mov
js
fldt
and
insb
and
test
push
and
lahf
inc
movsb
inc
aaa
mov
mov
pushf
ds
out
pushf
mov
scas
pop
int3
cmp
lods
roll
sbb
sbb
clc
mov
dec
sbb
cmc
mov
aam
sti
outsb
dec
ja
pop
jns
cld
aad
or
lods
sbb
fidivl
and
pop
scas
leave
inc
cmpsl
sbb
add
mov
push
decl
rorb
xchg
ja
add
add
orb
shlb
out
outsb
enter
test
xchg
xchg
push
jne
add
lahf
fcomps
addr16
inc
cmp
fnstcw
inc
push
add
push
movsb
fiaddl
push
xor
test
mov
ljmp
jge
jmp
fdivrl
imul
cmpsb
dec
xchg
mov
les
mov
add
ja
rclb
inc
adc
or
mov
aad
mov
mov
inc
and
es
adc
pop
push
mov
clc
inc
outsb
and
movsb
push
pop
ds
int
pop
fistpl
cltd
fmuls
cli
cmp
push
ret
jecxz
scas
cmp
out
adc
inc
pushf
push
hlt
pop
sub
ljmp
fistpl
test
xchg
cmp
jae
lret
lods
mov
notl
pop
pop
jne
shrb
xor
xor
addr16
scas
adc
hlt
mov
adc
and
cmp
sti
fsubp
jmp
fwait
xchg
and
add
pop
add
add
and
ja
inc
testb
jecxz
aas
lods
lock
scas
xchg
adc
xor
daa
ljmp
mov
mov
fcmovbe
sub
fimull
cli
les
xchg
cwtl
add
gs
scas
sbb
push
stc
pushl
xchg
sbb
add
aas
xor
lods
lods
mov
lock
or
fbstp
mov
sbb
lds
jno
subl
iret
popf
adc
stos
stos
mov
pop
test
add
subb
daa
add
lcall
les
aaa
cmc
lahf
cmc
js
mov
subb
lret
ret
lcall
shl
adc
fwait
jnp
loope
adc
std
cltd
mov
out
inc
mov
adc
lcall
hlt
adc
sub
xor
add
lods
mov
scas
sub
push
call
call
add
outsb
xor
test
xchg
mov
out
add
add
add
push
dec
stos
adc
incb
sub
js
sub
sbb
mov
stos
rclb
ljmp
rorb
push
shrl
mov
mov
sti
push
xor
dec
sbb
or
push
push
inc
pop
lods
addr16
sub
jp
mov
cs
dec
cmp
roll
pusha
cmp
sbb
push
jne
mov
divl
and
dec
push
insb
mov
das
sub
pop
cmp
push
nop
std
xor
jecxz
sbb
lcall
test
and
xlat
mov
inc
sti
ja
nop
cmp
add
sub
push
pop
outsb
jmp
jnp
arpl
test
out
mov
psubsw
cltd
icebp
jle
inc
xor
push
mov
mov
sub
lret
shll
pop
into
mov
js
cmp
add
add
inc
ror
lock
jnp
xchg
cmp
pushf
call
add
dec
lahf
cltd
mov
int
mov
scas
xor
scas
xchg
jle
outsl
mov
inc
inc
pop
in
lret
bound
jbe
mov
bound
popf
adc
sbb
adc
dec
out
pop
data16
push
popl
mov
enter
lahf
adc
mov
or
das
dec
jle
das
out
mov
xchg
mov
ja
push
cmpsb
call
dec
dec
mov
sti
xor
or
push
les
mov
jae
mov
jl
mov
enter
ds
mov
loope
and
adc
jecxz
mov
adc
fstl
jno
xchg
fildl
jmp
jne
inc
js
xchg
loope
out
subb
out
jmp
shr
movsb
pop
jnp
push
jno
fwait
and
testl
aam
jmp
es
inc
push
cmp
stc
btc
add
repz
fisubrs
jno
aad
push
mov
add
add
in
rclw
fcomps
fst
xor
lcall
add
out
pop
jns
icebp
mov
jo
out
cmp
dec
add
fsubl
std
cwtl
adc
testb
outsl
mov
inc
push
mov
mov
pop
pop
sub
jb
les
sbb
push
fucomp
testl
out
dec
dec
fimull
repz
call
jg
sbb
pop
add
jb
addr16
sub
int3
subl
jbe
lods
xor
pop
mov
pop
scas
arpl
dec
js
sahf
je
pop
adc
popa
jns
add
lahf
add
adc
xchg
and
mov
orb
lret
cmc
xchg
mov
cwtl
and
mov
sbb
cmp
and
add
inc
cmpsb
mov
push
cmpsl
rorl
repnz
and
lods
stos
imull
mov
add
out
mov
mov
movsl
aad
cwtl
stos
ljmp
ljmp
push
mov
add
sahf
jns
xor
push
inc
cli
je
loopne
out
clc
sarl
int
lret
sub
cltd
les
pop
cmp
test
mov
pop
mov
fs
cmp
jae
cmpsb
daa
mov
jge
jb
loop
dec
addr16
push
pop
fwait
into
pop
sahf
pop
aaa
dec
sbb
ds
iret
scas
roll
jmp
xchg
call
and
ffreep
xor
int
and
xchg
out
and
dec
popf
outsl
add
jl
jge
push
add
arpl
das
push
out
les
push
and
shll
push
inc
xchg
fidivl
or
dec
cmc
jnp
push
inc
mov
pushf
and
lds
ficoml
xchg
scas
leave
mov
sub
iret
mov
cmp
outsb
test
insl
pop
adc
push
adc
or
or
movsb
sbb
shrl
cmc
scas
cwtl
sub
repnz
add
add
pop
add
add
popa
arpl
adc
leave
shrb
add
sub
sbb
pop
mov
int
inc
pop
sbb
sub
jno
dec
adc
cmp
add
mov
inc
cmc
aad
rolb
out
sub
je,pt
adc
xor
mov
add
mov
mov
lds
xor
stos
es
pusha
mov
cs
xchg
gs
popf
setnp
add
ficoml
cmc
pop
xor
decb
sub
or
das
mov
sub
mov
test
sbb
into
dec
xor
mov
sub
add
sqrtps
and
cmpsb
mov
shl
in
mov
mov
sbb
shrl
int3
xchg
push
inc
cmp
cli
mov
test
inc
cltd
push
xchg
jbe
mov
xchg
xchg
loope
enter
lock
dec
sub
lret
pusha
rorb
enter
or
fldln2
mov
add
add
ficoms
lea
dec
fisttpll
cmc
ss
pop
xor
rolb
mov
imul
imul
sub
lock
jne
xlat
push
and
fnstenv
popf
into
cwtl
xor
int3
pop
idivl
push
imul
popl
scas
arpl
ret
xchg
xchg
call
out
outsb
subb
daa
sbb
ljmp
lcall
popf
sbb
fcmove
jne
scas
sub
ret
cmpsb
xor
int3
addb
sub
pop
je
aaa
mov
pop
lods
pop
fbld
pop
out
fmull
sbb
addr16
leave
adc
pusha
add
jmp
dec
frstor
push
stc
mov
xor
cmp
pushf
enter
insl
icebp
int
sub
shlb
jmp
hlt
cvtpi2ps
mov
jecxz
push
testl
inc
sbb
mov
add
add
pushf
into
sahf
call
fstpl
or
fdivl
mov
outsl
cwtl
jno
lock
push
aas
cmp
and
lds
xchg
inc
je
sbb
je
xchg
bnd
mov
sub
cmpsb
test
outsb
xor
cmc
jbe
push
movsl
ljmp
push
adc
push
test
fs
movsl
and
xor
loopne
pop
push
sbb
push
push
sbb
pop
fwait
jnp
hlt
xor
xchg
jle
prefetch
shlb
xor
je
and
adc
int3
mov
mov
and
sbb
scas
dec
mov
cmp
inc
loop
inc
enter
sti
push
cmpsl
out
and
imul
mov
popf
cltd
idivl
arpl
sbb
sub
push
push
xlat
bound
aas
pop
add
cmpsb
cwtl
in
out
xchg
lret
sbb
push
add
pop
push
cs
orb
out
and
daa
lahf
or
sbb
out
add
pop
add
add
fiaddl
adc
and
jecxz
iret
cld
jb
es
sbb
roll
sbb
sub
push
lcall
mov
xor
push
ret
sub
shrl
dec
sub
mov
sbb
push
cli
cmp
mov
xor
pop
jns
mov
or
nop
adc
xor
aaa
xor
fcom
xor
jecxz
int
sti
inc
lretw
fsubrs
push
push
pop
push
jmp
rorb
repz
jno
sarb
sub
lcall
cwtl
adc
add
sarl
xchg
pop
xchg
mov
insb
sbb
movsb
aam
xor
or
test
pushf
add
mov
add
and
push
sbb
rolb
dec
dec
imul
pop
cli
add
fstpl
int
add
pop
add
add
daa
shlb
jp
pop
push
push
test
dec
es
inc
cmpsl
ss
fbld
sbb
lods
imul
xor
jns
aad
push
and
cmpb
cmp
mov
fildll
sub
imul
mov
xor
jle
cltd
mull
mov
jbe
js
fdivl
or
in
mov
sub
into
iret
xchg
rcrl
ja
inc
aaa
inc
out
das
dec
inc
or
cld
mov
lds
add
jge
popf
hlt
mov
aas
mov
inc
or
pusha
add
iret
ss
mov
adc
loop
mov
adc
mov
aas
int
jecxz
or
fbld
ss
je
daa
les
bt
or
push
jmp
lcall
push
jae
xchg
stc
xor
mov
fwait
pop
popf
jl
clc
add
pop
add
push
inc
pop
jns
aas
lods
fmull
stc
add
ja
lock
pop
add
add
adc
jge
xor
mov
add
mov
idivl
sbb
popa
lret
sbb
in
popf
lret
orb
push
aas
push
cli
sbb
pop
test
fs
stos
ss
cld
pop
imul
imul
hlt
mov
leave
xchg
insb
jecxz
mov
in
mov
fsts
fdivs
mov
ret
ds
dec
dec
push
ljmp
mov
jns
movsb
pop
lret
idiv
pushf
or
aas
cmp
incb
cmpsl
mov
mov
push
rclb
in
adc
shll
shll
pop
inc
mov
inc
gs
clc
testb
dec
sub
push
subl
mov
or
cmp
xor
call
jae
cmp
push
std
mov
mov
mov
in
pop
inc
repz
sub
xor
minps
fldl
cmpsb
sbb
jnp
mov
cli
int3
mov
icebp
add
pop
add
add
daa
movq
cmpsb
shll
xchg
call
lock
dec
add
icebp
adc
pop
insb
xchg
dec
mov
dec
push
ss
movsb
push
pop
sub
push
subb
jp
fdivs
dec
inc
sub
sahf
pop
mov
dec
ret
sub
adc
mov
test
cmpsb
insb
jl
xor
cmc
lods
loop
cmp
push
fstl
push
mov
insl
or
imull
jbe
inc
nop
mov
xor
or
clc
add
cmp
cli
call
ss
stos
and
mov
loope
dec
push
mov
dec
or
lcall
push
push
xchg
out
jbe
nop
mov
sub
adc
outsb
pop
rcl
lea
push
push
mov
mov
jo
or
jecxz
bound
sub
ljmp
pop
cmp
add
xlat
pop
xlat
jg
mov
and
repnz
pop
add
add
aam
mov
push
ds
or
mov
jmp
dec
xchg
mov
imulb
bound
xchg
hlt
mov
rcrl
bound
inc
in
mov
loopne
mov
lock
pop
movsl
xchg
push
mov
pop
sbb
es
mov
das
popf
xchg
jbe
les
pop
mov
aam
push
pushl
pop
js
js
test
out
inc
fiadds
add
sub
pop
ljmp
gs
dec
aad
lods
ror
call
ret
pushf
sub
push
pusha
mov
inc
lret
mov
jnp
dec
add
cmp
sbb
inc
cmp
mov
push
int
add
mov
pop
test
push
xchg
inc
imulb
cmp
movsl
pop
inc
cli
sbb
cmp
jbe
rep
loop
jo
pop
fwait
mov
xorb
cs
mov
cmp
inc
xchg
cmpsb
jae
add
fdiv
mov
int
xor
add
add
add
cmp
es
clc
inc
imul
out
pop
pop
sbb
and
frstor
inc
adc
ds
outsb
dec
mulw
fwait
imul
dec
mov
xchg
repz
in
push
sub
fnsave
add
add
inc
stc
sub
cwtl
pop
data16
and
lcall
jne
hlt
sub
hlt
sub
sti
mov
mov
ret
test
add
dec
pop
and
imul
or
adc
fwait
rorb
popf
and
inc
lods
cld
adc
shll
mov
mov
imull
cmpsb
in
shl
push
cmp
xchg
mov
lahf
add
aad
xor
xchg
push
mov
or
aam
mov
loope
push
gs
insl
inc
insb
cld
sbb
inc
iret
add
jno
sub
ret
imul
xchg
int
or
add
mov
fdivrs
hlt
add
pop
add
add
add
jb
jne
lret
ret
or
xor
cmpsb
in
sarb
rorb
cmpsl
sub
faddl
pusha
add
loopne,pn
jno
sbb
adc
gs
daa
push
cmp
jmp
jbe
stos
pop
in
pop
sahf
pop
add
movsb
je
jo
aam
adc
enter
sub
push
imul
mov
xchg
imul
loopne
pop
jne
shlb
add
sub
pushf
sar
push
cmpsb
sbb
mov
adc
jl
push
jno
inc
lret
push
mov
pop
out
aad
ja
jb
mov
xor
ja
pop
and
sub
mov
mov
loopne
xchg
lret
pushf
popf
jno
ficoml
es
js
aas
sbb
mov
adc
push
xchg
rclb
xchg
gs
sbb
mov
or
xchg
pop
test
ljmp
add
add
push
pop
push
jmp
sbb
mov
div
add
pop
add
add
xchg
mov
mov
jns
outsl
mov
push
sbb
sub
mov
jecxz
xor
stos
sub
clc
pop
xor
fadds
notl
imul
pop
cmpl
jp
outsb
cld
arpl
scas
inc
mov
outsb
fldt
pop
shrl
mov
adc
repz
pop
test
mov
imulb
mov
pop
fbstp
mov
mov
arpl
cwtl
ljmp
push
faddp
fiaddl
gs
cmc
mov
and
daa
popa
scas
ja
fnstsw
mov
lcall
xchg
repz
pop
pop
ds
outsl
jmp
scas
popa
nop
xchg
sbb
pop
jp
jecxz
push
sahf
fdivrs
xchg
stos
loope
popf
sub
cld
gs
adc
movsb
dec
jge
notb
loope
fmull
dec
add
pop
lods
pop
cli
cmc
mov
adc
push
testb
pop
add
add
adc
aam
and
icebp
fldt
lahf
mov
lods
test
mov
push
push
loope
mov
notb
ficompl
push
mov
add
xor
inc
sbb
jle
pop
jle
lcall
aaa
jnp,pt
sub
ret
jp
in
jo
in
add
inc
push
ds
pop
in
or
cmp
mov
ret
orb
cld
cmp
cmp
xchg
outsl
xchg
dec
xchg
sub
dec
int
out
loope
and
ds
in
mov
lods
push
icebp
push
arpl
jl
addl
xor
mov
out
mov
jp
loope
mov
xor
std
test
dec
push
out
inc
inc
lods
sbb
insb
test
sub
mov
cwtl
dec
in
aam
aaa
test
cmp
fwait
and
outsl
mov
cmpb
add
stos
cltd
inc
popf
jae
out
pop
dec
add
jns
xchg
add
add
add
pop
push
pop
or
bound
dec
mov
test
in
sbb
cmp
sbb
push
es
or
pop
inc
in
dec
lret
and
xchg
xor
pop
mov
cmp
movsl
mov
push
mov
sarb
mov
insl
scas
dec
inc
cmp
shr
sub
in
xchg
dec
pop
fisttps
movsb
jmp
int
cs
sti
xor
cwtl
sarl
pop
inc
xorb
mov
cltd
addb
in
test
dec
js
sub
inc
cmpsl
xorl
push
sbb
repnz
adc
push
adc
mov
mov
outsl
fldcw
testb
js
movsl
jge
pushf
insb
add
inc
jo
jo
xor
pop
jecxz
adc
test
mov
cmp
push
icebp
in
and
and
mov
add
int3
mov
add
mov
nop
test
aam
int
mov
mov
push
in
stc
add
pop
add
add
add
jns
in
xchg
arpl
xor
cmp
je
rcl
frstor
test
dec
inc
lahf
add
nop
pop
jmp
dec
mov
lea
enter
addr16
cmp
icebp
push
and
and
sbb
add
sahf
test
mov
push
iret
or
sub
dec
xor
dec
cmp
add
and
fwait
inc
and
arpl
cmp
and
xchg
mov
push
ja
cli
out
popa
fiaddl
adc
mov
cmp
pop
div
jge
adc
imul
and
sbb
mov
icebp
aas
push
or
pop
push
xchg
or
cltd
jns
test
jl
adc
mov
aad
or
mov
pop
pop
xchg
pop
dec
sbb
and
add
arpl
addr16
add
mov
imul
add
pop
add
add
pop
mov
mov
xlat
cmp
push
or
aam
push
dec
cmp
arpl
into
outsl
dec
sbb
loopne
in
cmpsb
jle
pop
scas
shrl
mov
jg
ja
mov
dec
cmp
cli
add
or
outsl
jb
sbb
inc
push
mov
add
push
add
lcall
hlt
push
mov
stos
xchg
sbb
jae
movsl
aaa
cmp
mov
sbb
sub
and
cmpsb
adc
mov
push
push
mov
pop
jmp
sbb
mov
mov
jl
insb
test
ss
push
repz
rorb
sarb
and
mov
mov
mov
mov
xrelease
dec
xchg
cltd
les
cmpsl
sub
mov
mov
test
mov
insl
pop
sub
aad
jecxz
movsl
dec
and
hlt
icebp
inc
in
xor
xor
adc
in
enter
sub
mov
out
cmp
cmp
pushl
ja
and
add
pop
add
add
jmp
and
mov
andl
das
jge
push
frstor
xor
pop
jae
lods
mov
mov
pop
xor
lcall
in
pop
or
adc
rcll
or
lahf
inc
xchg
std
and
fisttpll
adc
or
pop
shlb
pop
lahf
ret
fimuls
jno
xchg
pop
fisttps
es
xchg
lahf
je
cmpl
daa
ss
or
imul
dec
cmp
ret
lods
addl
or
push
insb
je
adc
adc
in
lret
pusha
pop
dec
jmp
dec
loope
loope
push
test
xor
xor
pop
cmc
cmpsl
or
addr16
sti
mov
in
add
lock
imul
mov
pusha
push
cmp
push
sar
or
mov
jo
push
or
mov
inc
jae
jge
jp
test
push
scas
decb
jl
sbb
cld
add
pop
add
add
mov
test
shll
es
int3
mov
ds
sahf
fistpll
pop
mov
cld
or
inc
inc
pop
adc
inc
pop
jnp
dec
and
mov
mov
mov
insb
frstor
add
jg
lods
push
pop
outsl
hlt
xor
frstor
cs
nop
ror
jne
mov
jae
fwait
movsb
clc
and
jle
dec
push
inc
stos
mov
push
add
fdivrs
std
jne
jecxz
ljmp
push
je
sub
xchg
sub
shl
add
loopne
aas
out
mov
jo
sahf
in
mov
js
adc
test
sarb
popa
cmp
test
ss
sbb
push
adc
nop
scas
sbb
cmpsl
test
dec
sbb
xor
daa
ret
adc
je
mov
pop
cli
es
ja
mulb
pop
dec
xor
stos
mov
cwtl
mov
lock
add
add
xchg
and
movsl
mov
mov
mov
into
mov
mov
std
add
pop
add
add
loopne
or
imul
gs
push
loop
inc
mov
jo
push
in
addl
adc
sbb
add
mov
cwtl
cmp
sbb
dec
and
add
je
mov
push
xchg
in
sub
and
pop
cmpsb
loopne
add
daa
xchg
nop
push
jge
mov
jbe
push
out
jg
je
inc
push
jne
je
sbbb
lods
imul
dec
clc
jae
xchg
mov
mov
and
pop
out
in
out
xor
sbb
xchg
fs
push
sub
mov
sub
mov
fs
and
jno
push
jl
inc
inc
xchg
lock
sbb
lock
ja
imul
inc
pop
cmpsl
int
pop
shlb
imul
push
leave
loop
jbe
or
xor
push
cltd
pushf
push
sbb
jbe
in
or
out
shlb
mov
push
addr16
fdivl
mov
scas
enter
incb
add
add
add
insl
repnz
aas
lret
pop
or
in
add
or
dec
add
and
lret
add
cmpsl
push
push
add
xor
mov
cmp
rorl
cmc
mov
pusha
pusha
es
mov
nop
or
dec
push
jo
sub
inc
mov
mov
mov
in
fisubrs
js
inc
data16
or
in
sbb
orl
push
xchg
inc
adc
sub
xchg
push
imul
ds
insl
es
rorb
addr16
sub
loope
mov
fcomi
jl
test
jg
adc
data16
lret
jne
jne
and
fldenv
xchg
jo
pushf
mov
fsubrl
sub
mov
and
fidivrl
add
xor
arpl
sub
cmp
ja
lock
inc
stc
mov
mov
xchg
mov
incl
add
add
add
ljmp
mov
out
imul
adc
fsub
sbb
pushf
ljmp
mov
js
dec
rorl
hlt
mov
and
in
dec
in
jg
pop
pop
mov
not
push
mov
insl
lods
dec
pushf
imul
les
stc
fs
orb
testb
mov
adc
rolb
aas
add
leave
sbb
popa
fadds
jae
ret
fucomp
add
xor
out
inc
jge
dec
fldt
addr16
push
test
push
fs
push
cltd
loope
mov
xchg
leave
cmp
inc
push
mov
and
lds
test
pop
push
movsl
aad
rcrl
inc
aam
lods
cmc
test
add
sbbl
outsl
sub
and
sub
mov
mov
into
jmp
mov
mov
add
mov
xor
cmp
add
add
lods
push
repnz
push
adc
push
adc
and
and
cld
iret
cmove
loopne
bound
xchg
push
cmp
and
push
loope
mov
xchg
fstps
pop
addb
or
ret
sbb
imul
addl
fdivs
hlt
push
dec
js
pop
stc
push
shrl
pop
sar
pop
lret
in
jmp
mov
je
aam
mov
and
or
aas
pop
push
xlat
cmp
push
cmpsb
mov
xor
lret
add
subb
inc
and
cwtl
out
fs
popf
sub
mov
cmpsb
pop
push
jb
sub
cmp
test
mov
cmp
das
jmp
or
add
lods
sbb
stos
sbb
cltd
push
mov
pop
stc
and
inc
pusha
rol
add
cmp
sbb
inc
push
add
into
or
add
add
hlt
fisttps
test
in
pushf
inc
add
add
add
add
add
push
sub
loope
jae
scas
adc
inc
xor
sbb
lods
stos
mov
enter
ret
and
add
sbb
fbstp
cltd
xor
insl
cmp
pop
cmp
sti
fidivl
dec
dec
pop
pop
arpl
les
jmp
mov
xor
ficoml
out
add
or
out
int
adc
jbe
sub
stos
add
mov
lret
or
xchg
cld
dec
and
push
mov
and
mov
and
push
sub
xchg
sbb
xlat
xchg
in
ljmp
mov
sub
jecxz
mov
out
xchg
pop
inc
outsb
sub
aaa
push
sub
jle
mov
sarl
ljmp
mov
adc
xchg
stos
cmc
cmp
mov
xchg
bound
enter
cmp
inc
mov
loop
sub
mov
into
fwait
cmc
pop
sub
dec
add
add
add
add
mov
mov
push
mov
sbb
add
push
shlb
push
mov
imul
xchg
dec
jno
cmp
jg
cs
pusha
xlat
xchg
mov
sahf
neg
inc
jmp
cld
jo
daa
xchg
pop
sub
je
adc
in
sarb
xchg
sbb
mov
add
mov
inc
addr16
pop
imul
popa
es
sti
loope
mov
fidivl
jnp
inc
jbe
pop
mov
mov
cli
pushf
lahf
mov
imul
mov
xlat
adc
mov
jns
mov
out
movsb
js
xchg
stos
sub
das
ret
mov
jo
push
arpl
ss
jecxz
jno
push
adc
jge
push
pop
jbe
push
push
fwait
adc
add
shr
mov
xchg
jge
cld
bound
imul
test
jmp
cmpsb
fidivl
mov
je
jl
test
out
mov
pop
mov
add
push
add
add
add
add
das
sbb
insl
dec
stos
cmp
or
pop
adc
inc
dec
mov
test
jno
leave
clc
out
lea
and
xor
jle
ficoms
xor
mov
cmp
iret
pop
int3
jmp
jnp
shlb
inc
sti
dec
jmp
inc
dec
adc
cmp
sub
or
pop
and
addl
imul
aad
add
add
or
jl
ret
and
lahf
es
xchg
fstl
xor
xor
stc
cwtl
iret
fistpll
xchg
in
fs
pop
xchg
mov
xchg
cli
add
mov
cltd
test
ja
mov
push
mov
imul
xchg
xchg
inc
lea
fs
enter
int3
bound
xchg
mov
insl
iret
out
mov
inc
lret
add
lret
inc
xlat
dec
lods
aad
cmpsl
or
cmp
mov
in
stos
lahf
rep
add
push
rcl
rcr
add
inc
out
aas
mov
scas
adc
lcall
add
jo
inc
sti
mov
clc
shr
or
mov
repz
dec
jns
clc
and
ja
push
pop
sub
xor
cmp
dec
sub
fisubrs
push
iret
imul
adc
sbb
jle
int
push
mov
fldenv
mov
add
gs
sti
mov
pop
sbb
jecxz
pop
ja
gs
jmp
scas
movsb
mov
inc
icebp
lcall
lcall
in
push
imul
cmp
int
inc
movb
sahf
jnp
and
cmp
lods
add
mov
out
push
clc
sbb
jecxz
insb
test
sub
pop
pop
adc
popf
mov
or
pop
test
ret
sti
jmp
or
cmp
aaa
jo
in
mov
test
push
lcall
mov
mov
lret
and
add
bnd
jl
movsb
mov
pusha
add
add
mov
cld
sbb
xchg
lcall
cld
ret
pop
cltd
pop
lds
pop
fmull
cmp
jbe
mov
or
cmp
data16
inc
js
sarl
test
mul
sub
sub
cmp
or
cmp
cmpsl
aaa
sarl
push
roll
andb
jp
mov
jmp
xchg
mov
loopne
jle
xor
dec
mov
or
mov
sarb
out
nop
or
aam
mov
rdpmc
rcr
mov
pop
pop
push
lods
dec
fdivrs
push
repz
cltd
mov
adc
fucomp
rcrl
xchg
icebp
xchg
subb
jg
jge
push
sub
test
data16
jle
icebp
scas
adc
into
loope
or
adc
xor
inc
stc
addr16
jle
mov
out
and
dec
scas
lock
ror
fldenv
rcll
xchg
cld
sbbl
add
sbb
in
out
ja
fists
outsb
dec
stos
addr16
add
pop
add
add
ja
dec
lods
fnsave
lods
xchg
lcall
ss
xorb
insl
and
or
test
cmpsb
mov
test
push
and
xchg
pop
sub
insl
test
sarb
inc
divl
cli
ret
std
xor
push
cmp
and
mov
inc
icebp
jo
mov
sahf
dec
fimuls
mov
xor
out
mov
fadds
and
jno
lds
std
std
outsb
sbb
mov
mov
push
cli
add
incb
rcrb
psrld
xor
pop
ds
push
mov
lret
adc
aam
mov
mov
ss
inc
or
or
pop
push
push
cwtl
imul
cs
daa
xor
into
fistl
xor
test
sbb
mov
xchg
lds
cltd
mov
sub
loopne
lock
scas
test
in
daa
jle
add
sbb
mov
pop
add
add
inc
push
mov
dec
rolb
xchg
mov
mov
repz
xchg
inc
cmp
filds
dec
xor
fnstenv
sub
inc
in
scas
add
xor
popa
xchg
fst
lods
sbb
or
lea
js
sbb
sbb
lcall
dec
jmp
mov
pop
xor
mov
cmp
call
and
or
push
mov
lds
lods
arpl
and
int
or
xchg
rol
mov
fwait
jecxz
cmpl
iret
sbb
ja
mov
sbb
or
pop
stos
xor
imul
test
loop
in
mov
adc
test
stos
ljmp
imul
bnd
xchg
movsb
adc
sbb
pop
or
inc
shll
out
or
or
imul
add
add
jg
idivl
mov
dec
jne
add
pop
add
add
iret
jns
push
stos
daa
out
pop
mov
ljmp
pushf
pop
fiaddl
xchg
mov
test
push
int3
adc
jbe
inc
or
lods
xchg
pop
or
scas
and
pop
jmp
cltd
leave
test
out
pop
mov
inc
bound
rcll
icebp
cmp
or
in
mov
mov
add
movsl
xor
mov
aad
in
dec
push
out
outsl
adc
xor
sahf
gs
pavgb
push
cld
jge
scas
aaa
mov
cmc
push
das
cld
push
lret
sub
sub
sub
mov
ja
pop
push
movsb
lods
add
decl
mov
pcmpeqd
fnstcw
sbb
adc
push
and
mov
pop
aad
jae
sbb
jmp
mov
in
not
jno
jae
fbld
push
push
je
or
or
mov
jnp,pn
cmp
sti
jg
les
mov
or
add
add
add
sbb
jae
mov
outsl
rorb
in
leave
or
arpl
mov
sbb
hlt
cmp
ss
jno
clc
in
add
jecxz
fsubr
pop
sub
movsb
inc
dec
add
shlb
shrb
cwtl
add
push
call
push
and
fmuls
xchg
dec
sbb
ficoml
aas
or
mov
aas
or
add
lret
pushf
mov
add
sub
fisubl
repz
dec
xchg
aaa
popf
adc
push
aaa
add
sub
add
cltd
add
and
mov
sbbb
popf
mov
mov
sub
addr16
mov
dec
jns
cmp
mov
pop
mov
push
ret
push
stos
and
xlat
pop
pop
jnp
or
cmpsb
lret
mov
adc
lret
jmp
adc
enter
nop
jbe
dec
std
add
jnp
fnsave
xchg
testb
add
pop
add
add
aaa
mov
por
cmp
pop
sbb
push
mov
or
xchg
cmp
aas
fstps
xor
add
xor
jmp
inc
int
sub
pop
sub
mov
pusha
nop
jno
lock
lods
or
adc
pop
pop
repnz
pusha
mov
pop
mov
popf
pushf
sub
and
cltd
xchg
sub
cltd
es
adc
inc
xor
cltd
inc
andl
adc
or
cltd
add
cmpsb
or
sbb
jns
mov
jmp
hlt
inc
insb
out
sbb
jg
inc
sbb
pushw
jae
push
roll
push
shrl
mov
cli
cli
or
xchg
xor
fs
in
mov
inc
in
jmp
push
inc
cwtl
jbe
add
xchg
push
pop
push
jb
addb
in
pop
hlt
lea
pop
mov
add
add
outsl
mov
inc
loop
dec
cltd
std
xor
mov
add
pop
add
add
xor
imul
dec
mov
lods
std
pop
test
pop
lret
jge
fdivrp
movsl
add
inc
roll
in
ds
and
in
adc
sbb
mov
dec
lret
add
outsb
dec
mov
xlat
adc
clc
fdivs
daa
js
mov
repnz
shlb
les
fisttpl
add
leave
adc
xchg
ja
les
enter
idivl
mov
repz
dec
cmp
push
fnstsw
pop
mov
push
add
out
hlt
and
mov
or
jg
out
addr16
cmp
mov
shll
inc
jle
mov
adc
sbb
lods
in
in
xchg
rcrb
push
ret
xchg
and
push
hlt
in
push
jle
outsb
sub
loopne
xchg
inc
insl
test
imul
data16
js
mov
add
jmp
fiaddl
or
add
add
add
repz
mov
mov
icebp
int
cmp
ret
sub
xor
pop
out
pop
adc
mov
pop
or
jg
fwait
mov
inc
mov
inc
cmpsl
lds
xchg
adc
movl
xchg
arpl
pop
or
mov
pop
es
pusha
sub
jecxz
popf
xor
outsl
stos
into
adc
push
mov
mov
mov
cld
sbb
test
jg
mov
sbb
push
sarb
mov
jecxz
xlat
inc
es
xor
insb
aaa
ds
idivb
xchg
add
stos
sub
sbb
and
sub
testb
xchg
mov
mov
mov
xor
mov
mov
xchg
fnstenv
sbbb
mov
mov
pop
sbb
daa
cmp
cmp
jno
fsubp
bound
insb
sub
sub
xor
xchg
lds
push
mov
dec
cwtl
or
add
mov
mov
jnp
pop
push
je
xor
add
test
fisttps
push
sbb
lea
xchg
adc
sub
or
and
dec
mov
cmp
jno
jecxz
push
repz
test
fwait
adc
mov
pop
push
add
sahf
inc
imul
sahf
pop
cmpsl
jmp
jl
fisttps
add
adc
insl
inc
incl
call
into
or
mov
and
mov
lret
outsl
andl
dec
mov
dec
sbb
test
pop
out
pusha
mov
cmpxchg
sbb
outsb
sub
test
pop
clc
pusha
jne
or
ret
out
cld
ret
fdivs
cwtl
imull
das
testl
mov
out
cmp
or
pop
cmpsl
rcr
mov
push
adc
cmp
dec
fadds
add
cli
inc
jg
int
cs
fidivs
add
pop
add
add
pop
fildll
ss
jb
dec
shll
aam
cmpsl
incb
jbe
test
rorb
mov
data16
ret
outsb
ficoms
inc
mov
imul
std
add
push
jmp
mov
push
and
mov
mov
rorl
or
jbe
pop
sub
insl
cmp
shrl
scas
cmp
or
and
push
out
aaa
ljmp
cmp
call
fstl
fidivrl
xorb
xchg
mov
jmp
pop
inc
inc
movsb
mov
mov
je
inc
ret
pop
xchg
sbb
lds
sbb
xor
fcompp
mov
call
js
movsb
pop
sahf
jecxz
sbbl
xchg
sub
add
fiaddl
shrb
cmpsl
or
out
test
mov
popa
lahf
sub
hlt
add
xchg
std
cmp
jle
fistps
push
pop
aam
sgdtl
pop
add
add
jge
adc
in
adc
dec
and
inc
xchg
sub
pop
movsb
ret
push
jle
sbb
addr16
inc
sbb
cmp
cmp
pushf
inc
push
out
and
inc
jg
pop
fbstp
bound
mov
pusha
std
or
mov
lods
test
loop
push
lods
sbb
xchg
jae
jg
sbb
ja
mov
or
in
int
in
lret
decb
lock
mov
push
data16
mov
loop
daa
jmp
lahf
aas
cmp
in
popa
sbb
js
or
cmpsl
sub
jmp
xlat
mov
icebp
lea
adcb
test
mov
ret
in
inc
stc
mov
xor
jmp
push
push
mov
push
or
jge
mov
cmp
xchg
out
pop
dec
aas
fs
scas
push
mov
cmp
in
sub
into
sbb
push
mov
or
add
add
iret
xlat
fimull
xor
add
pop
add
add
xchg
cltd
sub
stos
es
dec
inc
fmul
inc
and
push
pop
testb
xchg
mov
mov
mov
jne
je
mov
or
stc
cmp
mov
in
jns
inc
push
shll
shll
add
mov
mov
cmpsb
push
and
push
jle
mov
je
or
bound
ds
into
imul
mov
sub
divl
add
xchg
sbb
pop
adc
adc
std
movb
sub
jne
inc
xchg
lds
dec
adc
enter
outsl
sub
inc
ja
inc
lock
dec
mov
mov
pusha
mov
jne
fs
or
decl
fcmovbe
sbb
cmp
mov
mov
mov
push
cmp
mov
inc
inc
pop
arpl
loopne
push
add
sub
jb
imulb
repz
add
add
sub
iret
outsb
jmp
in
pop
outsl
lock
jne
adc
add
add
add
lods
scas
mov
or
mov
stos
jle
jmp
jo
notb
icebp
les
and
enter
mov
das
test
adc
divl
gs
push
push
mov
mov
rorl
cmp
mov
sub
mov
dec
xor
sub
cmpb
jo
inc
fldenv
orb
ret
pop
insb
in
mov
adc
inc
inc
xor
and
jo,pt
and
mov
push
jae
pop
xor
cmp
add
mov
pop
sbb
sub
pop
out
aas
xor
adc
or
sbb
mov
xor
repz
mov
in
inc
stc
nop
shl
adc
inc
cmpl
adc
add
cmp
popl
sbb
std
sbb
stc
cld
or
push
sahf
pop
loop
adc
add
add
add
fbstp
test
mov
lret
push
inc
fdivrl
pop
push
cwtl
push
xchg
adc
xchg
test
pop
inc
test
xchg
cmp
lock
mov
and
fists
movsl
dec
ljmp
rcrl
psubq
adc
xor
push
add
pusha
repz
insb
nop
push
fadds
lock
je
loope
jns
add
jne
or
sbbl
sub
pop
iret
mov
fsts
fadd
mov
repnz
xchg
fs
in
mov
inc
stc
into
lds
or
and
ss
lock
mov
gs
leave
xor
pusha
pushf
bound
push
jle
lea
movsl
lods
push
orl
inc
cmpsl
insl
popf
xchg
push
fsubrp
and
fs
pop
sbb
fldl
negl
adc
fadd
mov
fucom
fadd
adc
add
add
add
inc
jp
hlt
ds
loope
fidivrl
inc
lret
cmp
hlt
je
jo
jb
mov
push
push
nop
popf
and
push
mov
add
lea
and
and
pop
ret
lods
cld
enter
sti
or
dec
pop
mov
sub
sub
cmp
dec
sti
lret
push
jo
xchg
nop
sub
cmp
sbb
jl
sub
push
xchg
insl
jmp
js
clc
dec
rcr
sub
xchg
adc
inc
out
sbb
dec
cmp
xchg
out
les
jmp
mov
inc
mov
jb
add
xor
pop
cltd
js
adc
test
les
pusha
and
or
pusha
dec
hlt
lret
ljmp
repz
jmp
xorl
pusha
test
popl
lock
popa
daa
pop
xchg
lods
jmp
add
dec
pushl
push
repnz
add
add
add
inc
aaa
pop
rorl
cltd
mov
test
jge
push
mov
push
mov
lahf
sbb
test
pop
dec
mov
mov
adc
es
mov
lcall
cmpsb
pusha
or
mov
xor
je
shlb
jo
cld
inc
push
test
cli
into
or
mov
inc
adc
lods
outsl
mov
inc
push
sbb
mov
mov
cmp
loop
pop
jae
push
dec
add
cmp
pushw
mov
pop
mov
add
movb
or
out
sub
add
lret
stos
pop
jbe
int
push
lea
outsb
icebp
inc
out
xchg
pop
adc
push
roll
cld
out
imul
adc
fnstsw
out
ljmp
and
gs
jp
mov
cmpsb
fimuls
scas
insb
cmp
subl
add
inc
ja
pop
aas
pop
jmp
mov
rclb
add
stc
pop
ljmp
icebp
jnp
mov
pop
lcall
rorl
cwtl
push
dec
fnstenv
stos
in
mov
ljmp
loopne
test
lods
and
test
mov
loope
and
mov
rol
jne
insb
cmpsl
test
or
xchg
sub
adc
cld
enter
aam
lret
sub
dec
cltd
stos
call
mov
sbb
mov
loopne
sbb
add
test
nop
fnstcw
shlb
cmp
mov
ljmp
test
xchg
outsb
popf
cmpsl
out
stc
dec
outsl
pop
imul
mov
mov
leave
push
add
push
xchg
dec
mov
sub
les
jecxz
stos
xchg
rcl
hlt
add
jno
into
xor
or
addl
mov
mov
cmpsb
addr16
cmpsb
dec
mov
repz
jae
ja
div
fisttpll
loope
xlat
push
add
pop
add
add
sbb
movsb
and
push
call
cs
imul
mov
popf
cmp
cmpl
iret
je
addw
mov
movsb
xor
repz
mov
sbbl
sbb
xchg
or
push
lea
cmp
sbb
nop
lret
cltd
xchg
bound
mov
stos
jge
xchg
call
lock
je
mov
push
fsubrl
scas
xchg
sub
jbe
xor
sahf
push
and
dec
inc
cs
enter
popf
mov
add
pop
lret
lcall
mov
addr16
push
add
push
pop
sbb
push
cmp
sub
cli
adc
arpl
inc
cld
test
cmp
fs
sub
in
sbb
fwait
outsl
lret
clc
pop
push
mov
ret
and
cmc
mov
jmp
lods
loop
and
xlat
pop
push
xchg
jp
rorb
mov
xchg
fsubrs
jnp
fists
test
pop
test
xor
cli
std
jg
mov
test
ficoms
add
pop
add
add
in
into
sbb
push
fbstp
scas
jle
add
out
shll
push
jg
mov
or
jmp
cltd
jmp
out
adc
jp
and
in
dec
adc
push
dec
mov
xor
insb
das
aaa
fldl
loope
cmpsl
mov
mov
xor
sub
mov
imul
outsb
fiaddl
jnp
sub
pushl
jbe,pn
cmc
cwtl
mov
lcall
adc
fstp
mov
sub
imul
imulb
lods
std
and
cmp
shl
pushf
xchg
xchg
outsb
outsb
sarb
sahf
or
repnz
sbb
dec
add
mov
xchg
jg
rol
test
sti
hlt
rcr
or
mov
mov
imul
arpl
pop
sub
sub
test
nop
in
mov
ret
and
addb
add
add
mov
std
incl
mov
daa
in
add
pop
add
add
sbbb
out
mov
and
cmp
paddusw
pop
xor
out
loope
jmp
or
ljmp
int
stos
cli
ljmp
cmc
test
xchg
jo
lret
cmp
inc
dec
std
or
xchg
cltd
xchg
push
jae
lds
mov
cmpl
sahf
jo
test
lret
jmp
mov
pusha
mov
sub
pop
jmp
push
cld
mov
inc
and
xlat
adc
cmpsl
movsl
repnz
out
subb
sub
ret
push
adc
rcl
cltd
lock
in
int
int3
fmuls
add
mov
xor
imul
dec
jno
jecxz
mov
and
insb
dec
mov
popa
cltd
sub
arpl
ret
mov
sub
mov
mov
in
imul
out
push
add
push
es
jg
pop
pop
mov
cmpxchg
sbb
add
add
add
jge
and
cmp
or
insb
dec
pop
notl
out
adcb
mov
sub
and
pop
jno
std
dec
repz
xor
xchg
arpl
es
daa
cs
xlat
sub
hlt
xor
lods
arpl
pop
dec
sbb
xor
pop
les
mov
mov
push
outsb
les
push
cltd
jns
ds
loopne
adc
and
jmp
bound
jae
stos
dec
or
and
mov
cmp
mov
pop
cmc
inc
inc
mov
lods
or
rcrl
jge
in
in
outsl
sti
bnd
movsl
dec
mov
mov
cmp
mov
inc
aam
mov
sahf
popf
out
mov
push
mov
js
les
push
cmpsb
fmuls
getsec
jg
aaa
imull
xchg
mov
aas
sarb
sub
jle
and
add
add
or
mov
add
cmpsb
xor
add
pop
add
add
xchg
data16
mov
shlb
or
mov
repnz
mov
cltd
ds
add
sub
ret
xchg
jnp
lcall
sbb
dec
xchg
sbb
imul
xor
in
in
pop
jl
mov
mov
cmp
mov
mov
cmp
push
in
loop
gs
int3
add
jo
es
jmp
jne
bound
and
ds
bound
stos
sub
mov
or
push
loopne
pop
inc
mov
clc
fidivrl
or
and
inc
xor
xor
icebp
mov
sbb
xchg
jae
pop
adc
jp
and
sub
std
mov
push
inc
sbb
insl
adc
lcall
stos
pop
ds
jmp
fs
jmp
xor
repnz
cmp
mov
fwait
pop
rcr
pop
add
stc
lods
xor
xor
loop
mov
jl
sbb
add
add
add
sbb
lret
out
mov
or
out
orl
insb
js
add
fnstenv
js
mov
testb
mov
inc
push
pusha
push
int
dec
inc
test
xor
call
shll
sub
fst
and
gs
fcoms
xor
mov
call
mov
jmp
mov
leave
jns
pop
inc
mov
enter
rorl
movsl
or
stos
push
leave
dec
lahf
and
add
loop
in
aas
arpl
pop
les
mov
sbb
mov
add
jne
cwtl
mov
lods
inc
jbe
xor
test
les
push
mov
push
mov
loope
sbb
mov
scas
imul
stos
or
sub
std
jae
inc
shl
addr16
imul
and
push
int
jne
daa
add
ficoms
stos
sbb
jmp
ljmp
jge
sbb
add
adc
enter
ficompl
push
push
lds
jne
sbb
sub
jmp
mov
mov
xchg
in
xchg
fldenv
lahf
dec
mov
cmpsl
mov
jae
sti
ret
jge
cmc
jbe
jmp
or
aad
mov
lcall
add
pop
gs
incl
bound
mov
fs
das
mov
out
mov
imul
inc
push
aam
out
sahf
je
xchg
lock
fs
cwtd
xchg
stc
les
cltd
into
cli
jnp
mov
mov
dec
dec
push
jb
or
cltd
mov
add
shll
iret
iret
or
xchg
cmp
cmp
mov
pop
pop
std
sti
mov
and
dec
in
stc
mov
add
inc
jmp
and
jl
stos
and
int3
dec
jge
enter
pop
and
ja
mov
out
arpl
aas
scas
cli
pop
adc
pop
add
add
and
into
and
cmc
or
sub
jno
dec
push
inc
push
mov
mov
outsb
cmp
cmp
pop
mov
cmpsb
sbb
mov
jmp
push
out
cs
lret
push
stc
ret
xchg
push
loope
ds
and
jno
adc
mov
push
jno
dec
jne
mov
push
out
lods
and
lods
adc
sbbl
pop
stos
xor
sub
fistl
test
mov
in
testb
mov
and
leave
xchg
addr16
int
imul
shrb
adc
lret
aad
pop
push
pop
fstps
mov
mov
jp
popf
adc
push
je
lahf
pop
aas
mov
into
push
int
cmp
femms
call
adc
inc
arpl
cmovae
jecxz
dec
add
test
jp
insl
or
xor
mov
arpl
or
cmp
repz
inc
dec
ss
inc
add
dec
or
out
cld
mov
inc
out
into
aam
pop
add
pop
add
add
push
out
push
xor
int3
movsb
or
pop
mov
test
push
push
incl
fdivp
loope
int3
test
sub
std
dec
jns
mov
push
fistps
xchg
dec
pop
inc
inc
mov
iret
clc
aaa
leave
mov
mov
movsl
out
fiaddl
cmp
in
out
out
sub
out
inc
xchg
lea
mov
inc
imul
pop
jbe
add
call
cmp
mov
shrl
movsb
movsb
cmp
and
pop
cmp
sbb
mov
add
rolb
xor
cmp
popa
notl
subb
xchg
scas
rorb
sbb
in
or
dec
sub
mov
or
cld
or
test
push
insl
mov
mov
jp
sti
roll
sub
jns
dec
jle
aad
jge
adc
or
ljmp
aam
add
cmp
out
lock
divb
and
and
add
add
add
mov
adc
inc
lods
gs
ljmp
mov
xor
mov
mov
cmp
loop
cmpb
add
mov
aad
jnp
mov
push
pop
pop
rcrl
mov
push
pop
xchg
mov
jo
cmpsl
sub
inc
ret
mov
and
pusha
mov
xchg
test
and
push
inc
sbb
cmp
sbb
ds
movsl
outsb
shll
add
xor
mov
pop
insl
js
sub
ljmp
std
dec
in
lret
or
sbb
clc
out
sbb
dec
mov
jns
lods
pop
sub
inc
sub
cmp
fdivrl
inc
rclb
pop
scas
xchg
jge
sti
aad
arpl
pop
aas
pop
sbb
and
jno
jl
lahf
fmul
mov
in
xchg
test
pop
hlt
mov
pushf
imul
push
js
test
sbb
cmp
rolb
adcb
add
add
pop
insb
fdivrl
add
jp
rcr
mov
setp
mov
add
jg
xchg
or
in
add
xchg
mov
pusha
mov
movsl
rorl
repz
lahf
pop
sbb
sub
movsl
movsb
test
adc
call
or
cmpsl
cmp
pop
jo
inc
repz
add
test
push
lahf
mov
add
stc
push
fwait
stc
add
gs
je
cmp
push
das
lcall
loop
out
xchg
out
dec
cmp
mov
and
and
loopne
cmc
xor
notl
std
int3
stos
lods
lahf
dec
push
fiadds
sub
call
xor
sbb
adc
inc
jge
out
cs
test
ljmp
loopne
xchg
aam
repz
xchg
pop
mov
movsl
aas
mov
inc
mov
xor
mov
ds
fildl
scas
in
cmp
dec
jg
adc
repz
add
jg
cld
fcmovbe
out
ljmp
and
add
pop
add
add
pop
iret
mov
and
sbb
ds
dec
mov
cmpb
js
std
lds
xchg
sbb
jb
mov
push
dec
and
inc
dec
push
mov
mov
iret
adc
mov
fcomi
nop
repnz
dec
mov
enter
adc
or
jle
shrl
pop
inc
push
or
sbb
mov
mov
aas
or
out
mov
dec
clc
ret
daa
or
xchg
mov
stos
nop
pusha
mov
adc
aam
aaa
cmp
std
push
push
lcall
and
stos
movb
cwtl
mov
shll
outsb
mov
push
inc
iret
orb
xchg
fnstcw
cmp
jns
shr
mov
jg
or
xchg
mov
stos
cmp
add
ret
mov
iret
mov
mov
lea
and
add
add
add
push
insb
xchg
mov
cmp
jge
cmpsl
mov
int
int3
push
cmc
aad
mov
rolb
cwtl
inc
ss
in
testl
xor
sub
int
jp
shrl
inc
iret
mov
popa
xchg
xor
xchg
ds
pop
sahf
mov
cld
ljmp
rorb
and
mov
stc
into
push
mov
xchg
mov
or
mov
cld
fsubr
add
xchg
sbb
xchg
mov
sahf
dec
cmpsb
clc
cmp
ret
out
repz
popa
mov
push
mov
jg
mov
jge
outsb
aad
and
pop
iret
shlb
add
jp
xchg
sub
inc
rolb
lods
add
insb
subl
leave
xchg
sti
fsubs
test
in
jl
outsb
mov
sti
jmp
push
popa
scas
mov
test
loopne
xor
mov
adc
leave
addb
popf
js
add
mov
lahf
and
ret
dec
mov
add
add
add
add
add
mov
jl
jge
push
adc
lods
aad
in
xchg
xor
pop
addl
out
cmp
mov
xor
sbb
ret
pop
aam
dec
scas
bound
jcxz
mov
idivb
jmp
nop
jl
gs
sub
mov
jp
jge
dec
out
mov
lods
and
nop
movsb
aam
pop
cmp
xchg
iret
test
mov
push
cwtl
ja
jbe
inc
gs
mov
jns
add
inc
test
les
xchg
push
inc
or
daa
push
ror
nop
daa
jle
fnstsw
mov
add
pop
and
lods
pop
push
mov
mov
cmp
clc
push
aad
push
cmp
outsb
or
loop
fsubs
sub
inc
data16
cmp
fimull
sub
cli
pop
aaa
ficoml
je
cmpsb
add
imul
shlb
cli
clc
cli
clc
sarb
js
rcrl
cmp
add
outsl
lock
xor
daa
idivb
imul
cltd
add
pop
sti
cmpsl
stc
push
sbb
lret
mov
std
add
push
rorl
mov
ja
sub
adc
jne
aam
js
mov
scas
jge
scas
js
add
sbb
push
je
cli
dec
test
sbb
and
and
jns
in
dec
test
popf
in
fxch
pop
mov
dec
mov
ret
xor
cmp
xchg
xor
and
rol
xchg
ds
lods
test
scas
enter
mov
sbb
rclb
xchg
and
das
lods
fwait
movsl
inc
jge
dec
ret
imul
arpl
inc
jl
jo
pop
aam
jecxz
or
leave
test
and
pushf
iret
pop
sub
mov
jne
or
dec
jb
adc
mov
jmp
addr16
xchg
shl
enter
js
cmpsb
out
lea
test
imul
add
push
test
out
sub
add
pop
add
add
mov
cmp
repnz
popa
sbb
inc
push
fildll
in
stos
movsl
iret
xchg
ljmp
aad
pop
sarb
in
sbb
pop
xchg
mov
es
cmp
or
jae
scas
cmp
add
adc
ret
push
sbb
sti
std
das
popa
jmp
scas
xor
mov
or
mov
sbb
sub
dec
jb
jbe
int
lea
je
mov
sbb
push
popf
andl
stos
sub
sbb
inc
repz
and
into
ljmp
jne
sarb
pop
insl
adc
pop
adc
in
jmp
je
mov
adc
faddp
lds
xchg
mov
das
pop
lcall
popf
jecxz
dec
ljmp
fildll
mov
lret
or
insl
mov
cmpsl
scas
fisubrs
jmp
sarb
int
aas
outsb
jb
ret
push
mov
or
inc
or
mov
push
add
es
data16
pop
sub
daa
loopne
jmp
pop
add
add
add
push
mov
aam
lret
sbb
sub
push
push
xchg
mov
and
in
push
add
xchg
dec
jg
data16
lods
bound
push
push
push
dec
push
lret
mov
pop
add
jp
loopne
repnz
xchg
insb
lret
daa
mov
movsl
inc
add
mov
ret
push
jge
lock
cmp
mov
lret
int3
pop
sub
cmc
adc
jbe
aas
out
cmp
inc
daa
or
ret
adc
sahf
lahf
nop
js
mov
mov
ds
cmp
sbb
sbb
lds
clc
mov
sub
mov
mov
divl
rol
jo
nop
and
push
aad
pop
xchg
cmp
leave
or
aas
mov
mov
push
add
imul
ss
outsl
mov
fbstp
out
cmc
fnstenv
pusha
mov
mov
mov
icebp
fdivs
clc
mov
fldcw
xlat
mov
inc
dec
sub
add
add
add
int3
aaa
ficompl
pop
call
daa
mov
std
jnp
into
movsb
mov
adc
movsl
sub
test
adc
push
lods
sbb
sub
or
repz
jge
sbb
sub
mov
add
and
dec
fs
mov
sbb
mov
dec
enter
aaa
mov
loope,pt
test
pop
cmp
jge
fldcw
jg
out
xor
aas
rcrl
pop
push
inc
push
rolb
arpl
cmp
mov
data16
add
stc
xor
bound
out
out
xchg
push
cld
fstpt
loop
clc
jbe
and
scas
mov
sbb
scas
out
out
scas
jnp
cltd
xchg
hlt
loopne
ss
mov
mov
dec
call
test
cli
cli
fisubl
dec
inc
jo
pop
jecxz
or
xchg
cmpsl
pop
ficoml
mov
xor
add
and
push
sti
cmpsl
push
mov
or
mov
add
add
add
lret
xchg
and
fwait
test
xor
mov
mov
es
push
xor
jecxz
int3
cmp
sub
dec
sarl
xchg
lds
sub
pop
xor
into
dec
movsl
scas
ret
lods
adc
out
insl
add
ja
mov
shll
cltd
cmp
add
or
and
test
sbb
jmp
stos
ja
rorb
sbb
xor
fadd
aaa
sbb
ds
push
add
and
dec
test
push
movsb
aas
mov
arpl
pushf
push
jecxz
pop
je
clc
ja
mov
xlat
pop
test
pop
and
scas
and
js
dec
aam
aaa
sub
and
out
push
aas
in
pop
cmc
movsb
je
mov
lods
dec
scas
in
fsts
mov
add
mov
lcall
inc
jno
add
hlt
ret
jge
test
rorb
clc
cmpb
leave
mov
js
add
mov
std
mov
ljmp
repnz
add
gs
add
mov
pop
pop
out
jno
mov
iret
je
jbe
inc
fidivrs
jne
mov
pop
bswap
adc
in
xor
mov
mov
hlt
fs
mov
sub
inc
idivb
and
pop
jg
jnp
call
lea
mov
mov
ljmp
adc
and
fisubl
and
xor
and
sub
xchg
pop
add
add
out
xchg
les
iret
or
fidivrs
and
outsb
jne
inc
xor
mov
cmp
or
aas
mov
push
fcoms
mov
adc
cs
cmp
jp
loope
mov
gs
outsb
jae
fmul
adc
adc
mov
pop
les
sub
insb
dec
cmp
mov
jge
xor
icebp
fistpl
loope
fdivrl
mov
xchg
xchg
add
and
jecxz
push
stc
sbbl
add
add
add
in
into
sbb
dec
cmp
gs
xchg
out
lcall
rclb
shlb
nop
adc
aas
popa
sbb
pushf
mov
addr16
sub
lret
push
movsl
imul
inc
add
cld
inc
outsl
cltd
sbb
cmpsl
or
mov
inc
icebp
push
and
fidivl
xor
mov
push
es
jo
imul
outsl
add
clc
icebp
or
mov
fs
cmp
fucomi
out
cmp
stos
cmp
pop
sub
nop
aam
push
call
shlb
addr16
and
pop
stos
mov
mov
out
rcl
push
inc
aaa
push
sub
out
jge
fsubrs
mov
inc
sub
js
rorb
cs
or
outsb
insb
sahf
rclb
daa
ljmp
pause
aaa
cmp
js
loop
add
add
xchg
ficomps
cmp
lahf
outsb
loope
push
add
pop
add
add
jae
push
mov
jo
add
adcb
inc
insb
mov
adc
push
mov
push
mov
sub
cmc
shlb
es
and
dec
pop
or
lea
pop
in
fildl
iret
jle
inc
or
jle
cmp
or
shl
pop
ja
rcl
cmp
inc
cwtl
pop
xor
jne
test
daa
in
push
andb
add
lahf
xor
jne
mov
aaa
push
fcompl
pop
fnstenv
and
fs
sub
loope
stos
jb
mov
adcb
ficoml
and
pop
xor
mov
movsl
stos
pop
sbb
stc
mov
sahf
lahf
xor
shll
insl
orl
lods
repz
mov
push
xlat
jl
xchg
stos
mov
dec
mov
bound
push
and
dec
test
call
dec
dec
clc
les
fwait
jbe
insb
sbbb
cmp
arpl
ja
js,pn
lock
pop
add
add
inc
push
inc
int
pusha
inc
mov
in
js
lods
icebp
push
or
sub
dec
orb
xchg
sbb
aas
pop
test
mov
test
xchg
adc
test
xchg
sti
hlt
in
or
xlat
cmc
push
push
cmpb
sbb
cltd
sbb
lock
mov
cmpsl
ss
or
cwtl
movsl
fsubr
lods
dec
pop
and
dec
push
xchg
bound
xchg
loopne
pop
in
or
dec
mov
sti
push
and
in
lahf
push
std
cmp
mov
scas
adc
push
jge
xor
dec
cli
mov
aaa
sbb
loopne
lods
cmp
adc
or
xchg
lods
dec
dec
xor
push
pop
dec
sti
cmpsl
test
ds
je
fnsave
dec
shll
cmpsl
divl
adc
push
stos
mov
lcall
jmp
outsb
outsb
pcmpeqw
mov
push
pop
sub
push
jns
jo
lock
mov
sub
test
js
add
pop
add
add
sbb
push
mov
int3
sub
in
or
and
push
push
mov
add
mov
and
aas
lea
es
into
sbb
mov
or
mov
stos
in
inc
sub
push
dec
jbe
mov
sarb
sbb
mov
jmp
cmp
inc
xchg
sbb
popa
jge
aad
addl
mov
pop
popa
xor
fiadds
imul
lods
and
mov
lods
mov
lret
test
pop
add
xor
mov
imull
aas
cmp
and
adc
clc
cmp
jecxz
loope
dec
xchg
mov
aad
or
mov
sbb
into
jnp
jg
cmp
mov
adc
lahf
sti
addr16
mov
push
adc
js
sub
lahf
jne
mov
mov
cmp
insb
ja
sub
sti
pop
jge
divb
mov
dec
jg
add
pop
add
add
faddl
outsl
cmpb
push
subb
adcl
push
scas
jge
add
sub
stos
jg
lret
mov
dec
das
jl
js
sbbl
arpl
dec
pop
inc
dec
pop
or
cmpsb
mov
call
sbb
imul
push
sbb
in
or
jno
jg
movsb
popf
lods
cmp
pop
stc
or
rcll
pop
and
mov
cmp
xchg
push
mov
mov
out
and
mov
imul
cmc
std
imul
aaa
add
in
aad
ss
mov
or
in
mov
lret
sbb
xlat
and
rorl
add
lahf
clc
xchg
jne
sbb
rcr
fs
and
loopne
pop
mov
push
ret
es
iret
xlat
scas
mov
std
mov
fisttps
pusha
cltd
fsub
std
in
popf
dec
int
hlt
fs
add
add
add
cld
stc
in
stos
js
inc
ficoml
jnp
jae
mov
add
call
stos
add
in
xor
stc
pop
sbb
into
push
ret
adc
push
in
call
cmp
sub
fsubr
jg
rorb
jnp
pop
outsl
pop
pop
in
fiadds
test
ja
jb
ret
mov
stc
fnsave
insb
mov
jge
mov
andl
mov
adc
cld
and
dec
adc
movsb
push
cmp
repz
jbe
jae
clc
and
pop
test
outsb
push
and
lods
cwtl
mov
mov
xchg
pop
loopne
jns
lret
inc
emms
mov
and
mov
mov
push
testb
xlat
add
sti
pop
cmp
and
loope
xor
imul
cmp
push
test
imul
std
cs
sbb
imul
xlat
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
jno
push
dec
bound
int3
pop
mov
jae
das
lahf
sub
pop
or
mov
iret
pop
int3
xchg
jp
cmpsb
mulb
cld
hlt
inc
jnp
jo
inc
push
xchg
shll
xchg
in
shr
push
movsb
repnz
xor
sbb
xor
sub
push
push
stc
in
sbb
dec
inc
pop
xor
in
adc
hlt
add
mov
push
in
adc
out
sbbb
call
inc
adc
mov
sbb
mov
cmp
adc
xlat
movsb
add
or
jmp
addr16
pop
dec
enter
dec
lret
jae
mov
cmp
mov
xlat
cmp
addb
mulps
xchg
icebp
inc
xchg
add
and
cmpsb
add
sbb
inc
mov
and
xchg
popf
sahf
xlat
or
xor
xlat
inc
decl
ds
jl
add
push
sti
das
ret
lods
daa
adc
push
xchg
xor
add
add
add
call
dec
into
dec
movsb
loopne
mov
xchg
adc
mov
fwait
loopne
mov
xlat
dec
out
lock
repnz
shlb
outsb
test
push
xchg
pop
cmp
sbb
out
lcall
or
mov
pop
mov
mov
or
aas
notl
into
adc
test
lret
adc
aam
sbb
movsl
insb
imul
aas
xchg
fstpt
xor
je
lret
pop
xchg
icebp
xlat
test
pop
fsubr
mov
push
adc
ljmp
mov
pop
les
testl
xor
add
loop
ljmp
jne
popf
int
in
inc
xor
arpl
jo
mov
cltd
aad
adc
and
adc
mov
mov
fimuls
mov
mov
and
cmp
movsl
adc
push
cmp
push
ret
cmp
sti
aad
loopne
dec
xor
add
add
add
nop
out
xor
movq
arpl
and
outsl
jne
stos
xor
push
sub
cmp
insl
mov
repnz
pop
js
dec
add
rorb
insl
insl
jg
xor
dec
jle
inc
lods
nop
or
and
mov
mull
jl
ret
cmp
sbb
fnsave
push
xchg
int
pop
ja
adc
xor
pop
out
rcll
bnd
sub
mov
enter
and
inc
jae
subb
ret
aam
sub
adcl
push
and
mov
xor
jb
push
push
xchg
leave
mov
push
dec
pop
mov
das
mov
idivl
test
adc
test
scas
inc
repz
mov
sbb
mov
dec
addr16
ss
rorl
pop
cmp
dec
scas
cmpsl
and
jno
mov
adc
lods
test
rclb
mov
pop
jmp
mov
add
cmp
jge
stos
sbb
data16
xor
add
add
add
popa
xlat
xlat
notl
lea
ja
and
mov
dec
mov
push
mov
push
cli
mov
jecxz
or
ficoml
xchg
out
jecxz
sbb
daa
xchg
test
jo
cwtl
mov
jns
inc
in
adc
mov
sub
cmp
adc
jp
lods
lahf
call
aad
mov
adc
movsl
hlt
and
sub
mov
or
dec
sbb
divb
sub
cld
inc
scas
ret
cmp
cmp
rcr
repz
sub
jns
shlb
inc
les
shl
enter
cmp
xor
daa
jmp
and
jne
cwtl
lahf
xorb
cmpb
sub
sbb
push
or
sub
xchg
hlt
xor
mov
stc
cmp
test
bt
aas
jno
mov
call
sbb
sti
mov
pop
inc
cld
add
rclb
fwait
aad
ss
pushf
mov
pop
add
add
lcall
leave
into
push
pushf
xlat
movsb
in
fwait
popa
stos
lret
mov
sub
jo
test
inc
fld
andl
int
or
mov
inc
out
add
jg
outsb
sbbb
rcll
int3
mov
mov
scas
rcrb
sub
and
xchg
es
movl
mov
mov
rorb
mov
leave
lret
dec
aas
lods
incb
insb
dec
test
insl
jae
add
or
jo
adc
lcall
add
gs
rolb
mov
pop
or
mov
test
int
adc
into
add
xchg
shlb
dec
arpl
in
les
push
jge
add
fstp
pusha
adc
lret
movsb
adc
add
adc
insb
jp
mov
ret
push
push
pop
scas
mov
mov
mov
jbe
cs
add
jbe
idivl
mov
out
mov
add
pop
add
add
mov
std
icebp
andl
lock
or
rdmsr
shll
adc
xchg
jns
sbbb
jae
mov
or
pop
pushf
shl
mov
out
add
sub
cmpsb
jl
adc
lock
rolb
ret
lea
test
and
shlb
dec
jecxz
xor
movb
loopne
jmp
jecxz
mov
dec
add
and
jmp
clc
fdivl
roll
sti
adc
sub
pop
inc
nop
es
xacquire
inc
int3
outsb
mov
jb
jl
jo
cmp
sub
loopne
out
xchg
out
jge
lea
rorb
stc
mov
and
mov
pop
les
data16
stos
xchg
in
ss
dec
sbb
xlat
cmp
pop
cld
add
out
xor
lods
pop
in
shll
xor
add
outsb
sub
stos
fs
push
pop
or
cltd
jb
inc
mov
add
pop
add
add
jmp
loop
pop
push
jmp
inc
outsb
es
jl
sbb
in
push
pop
mov
cld
mov
jle
xor
jge
xchg
pop
out
mov
sbb
addb
jbe
std
test
or
add
fidivrl
in
mov
pop
pop
daa
insb
adc
or
enter
push
push
dec
test
dec
gs
iret
cmp
push
or
pop
movsl
fists
aas
and
icebp
mov
icebp
lock
and
mov
das
rcrl
mov
dec
jns
and
lea
adc
pop
jmp
ljmp
inc
lret
xchg
popa
sub
jg
dec
das
or
testb
nop
dec
jbe
mov
pop
inc
jp
lock
push
out
jae
out
into
stc
repnz
cmpsb
clc
fimull
pop
shlw
lcall
push
outsl
push
jmp
icebp
add
insb
pop
pushf
scas
fistpll
inc
ljmp
add
pop
add
add
push
sbbl
stos
fsubrl
mov
pop
not
fldt
add
je
and
jecxz
mov
jns
lcall
mov
flds
push
out
out
fildl
cmp
sbb
push
add
mov
and
popl
jecxz
or
mov
out
cmp
fadd
mov
pop
bnd
sbb
popf
jle
or
sub
mov
shll
sbb
or
out
xchg
inc
std
and
mov
and
aas
or
add
lret
sarb
cli
cmp
xor
incb
pop
cs
enter
xchg
mov
push
xchg
mov
add
repnz
sbb
stos
pop
hlt
gs
inc
pop
out
iret
adc
push
insb
gs
inc
push
push
inc
adc
sub
ljmp
scas
aaa
jnp
mov
add
cmp
out
lahf
push
pop
cmp
mov
pop
add
add
lea
imul
and
jnp
add
in
test
cmp
cld
inc
mov
iret
xchg
hlt
lds
fiadds
lds
mov
mov
sbb
cld
mov
loopne
int
hlt
scas
imul
lock
add
call
ljmp
ss
or
lret
cs
jecxz
xor
mov
insl
xlat
cltd
sbb
shlb
inc
jp
mov
sarb
push
push
adc
ss
mov
scas
push
out
jo
mov
filds
into
and
mov
or
inc
daa
sar
mov
jo
pushf
dec
or
mov
mov
test
mov
loop
movsl
mov
xor
gs
int
mov
std
cmp
mov
xor
jo
stos
or
lcall
call
and
out
push
dec
push
fucomp
add
adc
dec
ja
aas
push
sub
inc
int3
cmp
add
add
add
xchg
xlat
cli
popa
mov
push
xchg
hlt
aaa
mov
pop
dec
out
and
xor
jg
shrl
inc
pop
stos
flds
push
push
orl
xchg
jle
mov
pop
pop
adc
mov
pop
cmp
fs
xchg
pop
jecxz
sbb
sub
pop
add
aad
cmp
mov
xchg
xchg
fdivr
loope
mov
xor
sti
cltd
add
mov
fiaddl
testb
jl
lods
ficoms
cld
sub
xor
out
mov
jmp
fsts
imull
andl
inc
fdiv
shll
sub
ret
popf
xchg
cli
or
xchg
gs
mov
negb
cmpsb
in
sub
outsb
fnstsw
lret
lret
lods
js
hlt
mov
jmp
sahf
ret
pop
repz
inc
out
adc
popa
ljmp
faddp
sub
mov
jae
in
sbb
add
repz
cmp
lods
repz
dec
lahf
inc
sarl
add
pop
add
add
adcl
rorb
xor
pusha
out
and
and
pop
out
mov
shlb
mov
xor
rcl
jp
gs
pop
loop
mov
shrb
out
arpl
pusha
xchg
cmpsl
inc
loopne
xchg
pop
mull
loop
mov
mov
cmc
adc
add
mov
sub
xor
and
mov
mov
add
outsl
cli
cmpsb
in
outsl
in
add
mov
fcoml
sub
or
shld
add
int
mov
sbb
inc
out
jecxz
aad
popa
jle
dec
and
cmpb
sub
adc
aaa
dec
in
or
aad
add
mov
inc
mov
notb
mov
ljmp
and
pop
repnz
lock
cmc
sub
jg
fsubs
add
sbb
stc
cmc
aam
rcl
cmp
mov
pop
cmp
jae
hlt
push
mov
add
aas
daa
push
cld
push
std
jmp
pop
adc
rolb
pop
add
add
inc
or
sub
rcll
push
jp
sbb
ljmp
inc
jb
ret
cmp
pusha
sub
mov
dec
mov
call
jmp
jg
ret
daa
testl
and
sbb
into
jno
push
loope
das
lahf
push
das
fs
gs
mov
sbb
xor
loopne
mov
aam
and
sbb
jb
int
in
in
cmp
pusha
mov
sub
shll
ds
xchg
mov
rcl
sar
sahf
int3
or
xchg
xor
push
dec
pop
sbb
sub
cltd
add
and
mov
lret
cmp
jo
add
mov
mov
sbb
lret
popf
xlat
jmp
loope
sbb
fimuls
add
add
add
sbb
dec
push
out
jge
enter
loope
add
pop
add
add
jo
mov
outsb
je
in
xchg
mov
lods
gs
xor
rdtsc
and
cs
pushl
icebp
xchg
mov
push
out
lock
jmp
push
dec
mov
xor
notl
addl
dec
mov
jecxz
push
sub
aaa
fnstsw
sub
xchg
mov
lret
sub
push
cld
mov
popf
out
sub
data16
jo
push
xor
mov
mov
div
scas
xor
stc
aam
in
mov
jne
das
test
cmc
lds
fmul
mov
out
cmp
leave
sub
cmp
out
inc
in
fcomi
nop
out
push
es
cmpl
out
xor
popa
call
shr
std
loope
repnz
leave
dec
mov
mov
into
cwtl
pushf
adc
fsubrp
daa
or
inc
inc
adc
pop
cs
test
add
stos
add
push
mov
mov
jae
add
pop
add
add
cmp
movsb
xchg
ret
mov
inc
ljmp
ds
enter
jo
jne
ficompl
push
leave
je
fs
pop
xchg
jns
dec
xor
push
jae
out
outsb
jnp
push
sbb
push
push
dec
jg
add
xchg
jl
inc
push
imul
push
mov
ljmp
in
mov
je
dec
loopne
jno
xor
sub
mov
sbb
xchg
outsb
pop
movsl
and
pop
mov
std
scas
mov
add
nop
sub
add
insb
ds
cld
mov
int
hlt
testl
mov
sub
cmp
fs
fmul
push
enter
cld
inc
mov
insb
icebp
push
bt
lahf
sbb
cmp
addr16
loope
xor
std
aas
sub
sti
push
xchg
and
aam
scas
xchg
scas
test
mov
ja
jg
xchg
cmp
or
add
add
add
mov
mov
dec
subl
cmp
sub
inc
fcompl
shrb
scas
daa
adc
pop
sbbb
dec
lods
int3
insl
push
js
cmpsl
jne
test
int3
jb
dec
xor
in
xor
inc
mov
arpl
mov
pop
and
add
inc
jl
sub
js
int
test
in
scas
pop
push
test
dec
xchg
sub
mov
lcall
pop
popf
xor
or
sbb
add
repz
sbb
adc
xchg
cltd
rcrb
imul
insb
repnz
add
gs
push
test
inc
cmp
inc
inc
xchg
popf
add
xor
shrb
inc
sbb
insl
cmp
xchg
sub
sbb
jge
bnd
pop
test
mov
dec
pusha
sub
jp
mov
and
outsb
movsb
in
mov
mov
add
and
dec
lret
jmp
imul
push
xchg
stos
out
inc
add
pop
add
add
pop
mov
icebp
fstpl
mov
xor
cmpsb
sub
iret
sarl
js
into
jae
jo
pop
fxch
sbb
fnsave
adc
rcll
fucomp
xchg
das
ret
incl
fs
mov
and
loopne
arpl
inc
mov
xchg
xlat
mov
xor
test
dec
push
loope
in
push
mov
fildl
jp
sub
mov
xchg
lds
popf
mov
mov
loopne
pop
mov
mov
sarb
jmp
xor
div
jnp
in
add
mov
addr16
lcall
js
or
mov
or
jb
adc
push
loopne
cmp
movsl
or
cmpsl
and
lcall
xor
leave
scas
or
lret
aaa
or
jne
std
adc
das
add
cwtl
loope
std
jge
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
in
pop
test
push
sbb
ficoms
xor
sbbl
jae
sti
aas
into
rcl
xchg
cwtl
sarb
dec
out
cld
test
add
pop
movsl
arpl
loope
pusha
xor
mov
out
aad
in
mov
pop
jmp
push
cmpsl
fistl
mov
jecxz
adc
out
sbb
das
mov
inc
in
sub
xchg
mov
stos
jge
inc
icebp
mov
je
dec
push
in
shll
fistps
ss
mov
dec
xchg
aaa
mov
dec
mov
sbb
or
dec
push
mov
xchg
inc
les
add
addr16
pop
les
ja
push
or
xchg
jp
cmp
lret
mov
mov
sti
popf
rcrl
in
dec
add
xchg
sbb
pop
ret
cmp
test
int3
add
stc
stos
fnstsw
sub
cmp
adc
mov
dec
push
pop
add
es
movsl
dec
pop
insl
mov
xor
dec
cmp
sub
jns
imul
mov
sub
add
pop
add
add
xchg
scas
pop
sub
jge
jo
shll
sbb
fadds
lret
pop
out
inc
xchg
mov
lods
xchg
mov
push
adc
dec
inc
inc
push
nop
aaa
push
cmp
xchg
clc
mov
add
dec
push
push
out
jle
add
sub
jp
bound
dec
nop
les
jae
and
pop
sti
shrb
jo
outsb
jno
xchg
into
fldenv
and
pop
lock
dec
in
shl
jnp
or
cmp
sub
sub
xor
jp
or
mov
lds
xlat
jbe
dec
inc
push
adc
cmp
fs
xor
push
dec
jmp
mov
mov
jmp
in
mov
out
mov
xor
lock
mov
jge
sub
adc
xchg
sahf
jp
fmuls
clc
aas
ffree
das
push
out
jmp
pop
push
clc
add
cmc
cli
sub
cmp
repnz
mov
js
ret
jg
jmp
repnz
inc
sub
mov
pop
add
add
adc
cs
pop
andl
shl
sbbb
mov
xlat
mov
les
nop
xchg
and
aas
fidivrl
test
xor
fistl
loopne
or
mov
enter
lods
dec
sbb
outsl
push
jmp
fistl
pop
repnz
sbb
test
mov
sbb
mov
mov
lret
cwtl
lcall
hlt
sub
pop
and
jno
xchg
push
add
xlat
jmp
jo
repz
mov
fwait
mov
repnz
repnz
dec
push
inc
movsl
repz
aam
flds
lahf
and
jb
cld
inc
and
cs
xlat
add
loopne
push
xor
sub
notb
addr16
cmp
push
fidivrl
sbb
out
sbb
ret
jbe
sbb
or
fadds
inc
ja
cmp
movsb
xor
dec
xor
mov
repz
dec
fs
fnstenv
or
jnp
mov
lcall
int3
jl
mov
adc
mov
and
fldenv
xchg
mov
add
add
add
xor
or
add
jmp
pop
jae
mov
push
or
pushl
cmpsl
arpl
and
aaa
push
incb
out
push
inc
add
ljmp
fcoms
aas
inc
push
pop
je
fsts
cmp
ret
push
xor
loopne
push
fldcw
test
sub
xchg
sub
push
add
js
mov
sub
les
aam
dec
mov
push
ds
nop
inc
into
adc
pop
and
fisubrl
or
sub
int
fwait
inc
arpl
pushf
add
xchg
cltd
in
mov
ret
into
xor
jns
jmp
xchg
int
ficoml
jae
ds
add
leave
sub
push
lcall
dec
push
aad
out
nop
inc
shlb
outsl
mov
mov
cld
mov
cmp
fs
or
sarl
add
hlt
gs
adc
ficoms
pop
xor
out
sbb
add
add
add
mov
push
dec
into
ds
xchg
cmc
push
mov
inc
movsl
fs
jno
dec
adc
insb
xor
mov
lcall
pop
pop
pop
hlt
sahf
lcall
sub
jbe
push
loope
out
in
adc
xchg
inc
push
into
adc
push
jl
call
lret
pop
shl
lods
push
xchg
scas
jb
addr16
test
out
into
inc
pop
add
enter
xchg
mov
push
shl
out
aad
xchg
cmpsl
or
imul
add
rcll
dec
ja
dec
movsb
mov
mov
ficomps
or
xchg
pop
sub
push
add
out
jl
sbbl
imul
lahf
cmpsl
fwait
dec
push
notl
in
adc
sub
dec
cmp
out
sub
cld
in
leave
xor
imul
shll
sbb
or
jae
mov
add
add
aas
gs
mov
pop
cmpsl
inc
and
add
add
add
jmp
fs
push
je
push
rcr
repz
rolb
adc
sbb
sbbb
outsl
inc
sub
or
stc
ja
cs
adc
fcomi
iret
pushf
mov
xor
jg
dec
adc
mov
adc
sbb
inc
ss
lds
add
sbb
push
inc
lret
inc
mov
in
fadd
cmp
adc
jecxz
scas
popa
stc
outsb
or
dec
lahf
les
cmp
sub
cmc
icebp
movsb
sub
bnd
idiv
ret
negb
arpl
jo
scas
int3
sub
cld
jge
fwait
jl
dec
cmp
or
iret
jo
shl
test
inc
adc
push
jo
jl
bound
cmp
mov
push
mov
fs
sbb
add
adc
leave
fwait
sbbb
cmp
mov
out
fnstsw
sub
add
pop
add
add
xor
dec
mov
xchg
push
pushf
aas
mov
loopne
inc
test
in
repz
hlt
pop
xor
fildl
or
pop
mov
pop
mov
jl
sarl
orl
xchg
mov
stos
jae
jno
mov
jae
ret
js
pop
dec
push
pop
cmp
pop
dec
hlt
es
jmp
shlb
loope
mov
scas
test
sub
shll
fcomp
xchg
decl
mov
jo
aas
sbb
sub
ljmp
dec
push
imul
outsl
dec
stos
sbb
mov
mov
or
push
adc
in
insb
pop
nop
nop
jl
std
xchg
mov
aaa
data16
fsubrl
daa
and
xor
popf
mov
sub
push
out
mov
jbe
in
cmpsl
or
pusha
push
add
adc
adc
out
jl
cmc
std
add
lahf
insl
adc
ljmp
add
add
mov
sub
cs
add
pop
add
add
sub
popa
inc
xchg
imull
lret
add
sahf
xor
mov
fwait
add
sub
or
cltd
out
mov
sub
push
and
push
adc
mov
movsb
cmp
out
ret
jne
aaa
xor
sarl
mov
ja
shll
push
or
cmp
nop
inc
std
adc
add
dec
sub
push
cmp
mov
sub
enter
imul
cld
int
mov
cs
lock
iret
xor
push
cmp
mov
or
ds
loopne
mov
cmp
fwait
add
xor
pop
repnz
lods
sub
sub
and
cmp
arpl
aas
test
and
xchg
lods
das
mov
je
push
mov
jo
in
xchg
aas
xchg
xor
xorb
add
jmp
out
aas
push
xor
dec
jmp
add
add
add
ret
jmp
mov
pop
pop
push
sbb
xchg
jle
mov
push
fyl2xp1
cmp
aaa
xchg
fcomi
adc
mov
xchg
outsl
pop
and
xchg
shr
mov
cmc
mov
loope
mov
and
mov
xor
sbb
pop
push
inc
or
mov
sahf
xchg
sub
xorl
mov
inc
jne
push
mov
push
lock
mov
pop
ja
xchg
mov
out
adc
xchg
rolb
pop
mov
cwtl
imul
sub
xchg
stos
sub
pop
je
add
dec
std
leave
aad
fnstenv
imul
inc
ds
mov
arpl
in
clc
jecxz
fistps
jae
or
pop
mov
js
dec
lahf
test
pop
inc
jb
xor
ja
pop
adc
mov
ret
clc
mov
insl
repz
popa
mov
movsl
jecxz
add
imul
out
mov
xchg
mov
dec
add
pop
add
add
jl
repnz
loope
push
adc
xor
scas
scas
aad
sub
pop
xchg
arpl
lahf
sbb
out
cltd
pop
flds
sti
push
fwait
jg
jbe
inc
push
adc
xchg
out
out
js
and
mov
mov
das
mov
cwtl
adc
ja
ljmp
scas
aad
mov
adc
es
or
pop
add
mov
popf
sbb
hlt
in
jecxz
les
cmpsl
xorb
test
adc
ret
jl
sub
or
push
stos
mov
xlat
hlt
repz
xlat
jae
jae
xchg
pop
out
dec
adc
xchg
hlt
clc
cmp
movsb
push
cmpsb
add
cmp
pusha
movl
inc
mov
xor
ret
sbb
jecxz
push
push
daa
mov
imull
stos
fisttpll
mov
push
loope
cmp
pop
lret
add
lret
ljmp
stc
add
add
dec
stc
mov
pop
sub
jg
adc
inc
dec
add
pop
add
add
aas
jmp
mov
test
fisttpl
aam
or
jl
push
sbb
cli
push
flds
mov
adc
mov
test
dec
repz
rcr
mov
cmp
scas
in
ljmp
or
sbb
inc
xchg
cmp
jbe
pop
push
inc
push
fstl
cmp
dec
cmp
cmpsb
xor
pop
lea
mov
int3
mov
jp
add
xor
aad
jmp
jns
xchg
movl
mov
lods
in
loop
add
enter
lret
mov
jno
dec
clc
je
inc
es
out
je
dec
dec
jbe
mov
int3
xchg
outsb
fdivs
js
adc
pop
jo
xor
movsb
xchg
sahf
and
je
xchg
xor
dec
repz
sub
adc
cmp
pop
mov
dec
int3
xchg
or
lcall
scas
push
xchg
mov
push
pop
mov
pop
sbb
xchg
cmp
jle
jg
cld
dec
loope
sbb
or
dec
add
pop
add
add
pop
daa
pop
outsl
xchg
movsl
mov
xchg
shlb
mov
adc
mov
scas
or
loope
pop
in
cmp
xchg
jmp
push
movl
mov
mov
sahf
test
pop
add
sti
test
and
adc
adc
xor
adc
sbb
fidivl
dec
dec
or
lcall
rorb
out
adc
cmove
inc
test
mov
sbb
sti
jb
or
pop
lret
and
out
pop
imul
test
in
mov
dec
arpl
push
lret
decb
test
jge
scas
imul
mov
dec
movsl
stc
mov
sbb
clc
pop
imul
adc
or
lock
and
mov
add
xchg
mov
mov
rorb
pop
add
add
addr16
sbb
jb
push
mov
adcl
or
push
iret
jo
pop
lods
std
and
and
fiaddl
loopne
gs
imul
mov
sbb
cmp
sti
lret
addr16
cmpl
mov
lret
sub
push
addr16
sahf
shr
pop
ret
inc
inc
sbb
push
cmpsl
jns
mov
dec
shll
pushl
rclb
call
in
aaa
mov
sbb
pop
cltd
push
jns
xchg
cwtl
and
mov
add
push
xor
cli
mov
xor
pop
push
or
mov
push
cs
add
pop
mov
out
bound
inc
push
jle
loopne
cmp
jns
aaa
int
and
mov
into
into
mov
pop
sub
xchg
arpl
mov
pushf
or
mov
pop
nop
fidivrl
or
mov
fwait
mov
adc
dec
add
pop
add
add
dec
xor
fs
out
dec
icebp
stos
out
loope
test
clc
or
xchg
popa
mov
xlat
jne
ss
mov
cmp
pop
popf
sub
stos
movsl
lock
aam
in
imul
or
cmp
roll
cs
lcall
jbe
adc
jp
jae
and
prefetch
jmp
xor
add
inc
cwtl
cs
loopne
pop
lcall
nop
or
xchg
ljmp
sbb
mov
sub
hlt
jb
xchg
mov
or
inc
out
cmp
test
lods
int3
xchg
dec
jmp
sbb
xor
call
aaa
nop
sti
dec
outsl
out
iret
inc
inc
and
popf
push
shrb
out
mov
pop
cmp
jl
cmp
push
sahf
cs
push
inc
test
mov
bound
stos
nop
icebp
xchg
fsubrl
mov
out
cmp
cmc
push
adc
add
in
pop
push
add
pop
add
add
mov
sub
dec
jg
cmp
fimull
leave
fimull
sbb
inc
bsf
movsl
add
les
pop
dec
negb
push
xchg
or
mov
add
inc
adcl
jp
out
sub
and
imul
cmpsb
pop
inc
mov
cmp
cltd
inc
in
push
mov
xchg
das
sbb
pushf
pop
adc
jle
push
jns
mov
jb
push
sbb
movsl
sbb
outsb
sti
or
xchg
fistpl
fcompl
sbb
dec
push
sbb
dec
inc
mov
inc
dec
and
xor
ljmp
repz
aad
sbb
sbb
rcl
push
xchg
idivb
cmp
inc
test
sbb
out
sub
lret
dec
bound
add
dec
cld
mov
push
es
fidivl
in
sarl
jae
sbb
dec
hlt
inc
stc
pop
pop
fucomip
sbb
add
add
push
shll
out
je
pop
inc
fsubl
mov
add
add
add
mov
cli
inc
cvtps2pi
xor
lea
insb
lods
loop
cwtl
sbb
rep
rcl
rcrb
leave
cld
mov
adc
mov
or
jl
stos
push
jo
pop
in
out
les
xor
mov
jnp
dec
mov
inc
cmp
pop
xlat
xchg
push
mov
mov
loop
pop
ret
push
or
inc
mov
es
dec
fidivl
push
lds
sahf
cs
adc
inc
insb
inc
into
cmpsb
aas
sub
lcall
les
clc
adc
mov
js
hlt
xchg
sub
test
mov
sub
ss
repnz
mov
xchg
gs
or
xchg
js
adc
aas
mov
popf
jecxz
sub
gs
fmull
mov
and
jne
mov
add
out
lcall
lock
mov
insl
push
add
pop
add
add
ficoml
mov
jge
iret
sub
xor
cmpsb
fsub
negb
rorl
scas
adc
inc
xor
jecxz
lahf
xchg
in
sbb
int
loopne
dec
into
test
mov
xor
ja
jmp
dec
cmp
lods
icebp
popf
mov
cmpsl
xor
mov
lahf
add
ss
jecxz
shll
out
ljmp
inc
jnp
call
insl
jns
push
outsb
stos
loopne
push
jle
xchg
inc
adc
sub
and
les
mov
or
inc
xchg
xor
in
pushf
icebp
jle
jo
into
dec
inc
cwtl
xchg
not
jnp
sbb
movsl
sub
or
je
rorl
sub
inc
mov
shrl
arpl
jp
xchg
or
imul
bound
ficoms
pop
and
repnz
bound
imul
adc
je
add
pop
add
add
mov
rol
shrl
ret
test
sub
pop
xchg
or
sbb
xchg
jmp
xor
mov
xchg
mov
push
or
or
cmpb
daa
adc
push
pop
sub
mov
imul
test
mov
iret
and
in
cmp
pop
mov
push
push
xor
pop
data16
dec
outsb
sbb
inc
stos
lock
push
jle
call
adcl
push
test
or
jmp
lea
inc
mov
xor
sub
rol
sbb
mov
mov
pop
test
mov
test
cmp
cld
aaa
sub
repz
ret
xchg
sti
es
sti
or
inc
dec
mov
stos
iret
daa
jle
xor
push
adc
dec
dec
xchg
sbb
rcr
push
scas
in
add
fwait
cmp
xchg
xchg
dec
ja
mov
jnp
add
pop
add
add
outsb
rcrl
in
mov
ficoms
fwait
or
pop
mov
cld
jae
pop
jecxz
jecxz
pop
std
add
fcmove
mov
cmp
test
enter
sub
and
inc
cmp
jg
mov
pop
scas
mov
fwait
sub
xchg
mov
xchg
pinsrw
gs
mov
and
mov
lea
xchg
hlt
bound
push
push
arpl
int3
push
xchg
or
leave
lahf
add
adc
fiaddl
jb
jno
mov
ss
inc
jo
pop
inc
push
cmp
jl
iret
sub
scas
imul
out
out
pop
cwtl
push
push
aas
mov
mov
xlat
ficompl
sbb
stc
loop
or
enter
lcall
ds
push
sbb
push
out
idivb
call
add
clc
mov
mov
pop
filds
push
add
pop
add
add
push
mov
rcr
adc
sub
inc
leave
jecxz
sahf
mov
loopne
in
mov
lahf
cmp
gs
fcompl
js
pop
into
and
xor
gs
notl
sub
push
adc
je
into
sar
adc
nop
test
jmp
scas
bound
leave
out
ret
insl
jnp
add
inc
arpl
jno
aad
push
xchg
lahf
cmp
xchg
add
jg
xchg
hlt
inc
cli
jl
arpl
lock
inc
outsb
add
fcoms
in
cmpsl
and
out
cs
enter
xor
fistl
fsts
sub
push
sbb
sub
aas
push
insl
out
push
ror
pop
add
out
in
jl
lods
pop
or
ret
mov
rcl
mov
sti
xchg
inc
daa
push
out
pop
xor
mov
sub
push
xchg
cld
xchg
jp
fcomip
add
shr
mov
jge
cmp
add
add
add
cli
cld
test
out
inc
loop
mov
inc
add
sub
test
pop
aaa
lods
loop
jg
cwtl
inc
mov
or
xchg
inc
xor
jge
lea
lcall
mov
ret
loop
test
push
loopne
rolb
push
sub
cmp
pop
pop
fnstenv
mov
pop
scas
mov
push
loopne
movsb
andl
mov
dec
in
je
xor
xor
movsb
andb
xor
insb
loope
mov
pop
xchg
sbb
gs
lahf
sub
cmp
icebp
imul
mov
jle
mov
jp
adc
dec
loope
loopne
pop
lock
push
cmc
mov
add
adc
push
aas
repz
idiv
mov
nop
mov
mov
push
push
lcall
movsl
jb
mov
jmp
ret
into
mov
add
mov
btc
mov
nop
push
add
pop
add
add
js
aas
dec
inc
lret
repz
imul
out
push
inc
add
sub
int
mov
sub
sbb
cld
push
mov
inc
xor
or
outsb
dec
cmp
push
and
test
popf
hlt
data16
jg
sbb
fbstp
dec
aaa
pusha
out
and
dec
stc
inc
push
xchg
inc
xchg
stc
cmp
les
adc
sub
in
mov
mov
adc
mov
stos
icebp
sarb
cmp
and
mov
jae
enter
popa
mov
push
ja
cmpsl
adc
push
into
sub
dec
and
or
lret
je
inc
pop
les
xor
ret
adc
lahf
stos
add
pop
add
or
pushf
imul
jmp
adc
loop
push
mov
jnp
cld
je
sub
scas
inc
out
xor
mov
sbb
jb
dec
dec
sahf
int3
fbld
add
mov
sub
pop
lcall
add
aam
sub
fnsetpm(287
inc
nop
jne
and
xchg
aad
rorl
out
insl
stos
jae
cmpl
lgs
les
jbe
pop
hlt
push
into
and
xor
or
pusha
sub
dec
fcomps
cmp
mov
adc
fstpt
ss
gs
out
cltd
mov
notl
jmp
jg
or
xor
insb
in
cmp
push
and
stc
out
pop
daa
sub
cmp
imul
subl
sub
and
push
test
hlt
inc
and
fwait
clc
or
xchg
test
icebp
test
pop
jbe
es
mov
jno
mov
xchg
gs
push
pop
jbe
dec
call
pop
mov
jge
lods
mov
jp
cmp
aam
sbb
stos
loope
add
movsb
jae
jnp
mov
jne
ret
scas
xor
pop
add
add
je
jae
loop
jle
imul
adc
xor
and
cmpb
sbb
sbb
lods
scas
dec
xchg
dec
jge
into
or
mov
xlat
movsb
shr
sbb
idivb
sub
loop
jp
and
mov
pop
jp
int3
inc
std
fs
jge
mov
sub
add
jnp
insb
push
xor
fimuls
test
rcll
push
into
mull
movsb
jp
loope
cs
das
jo
jmp
push
xchg
cmpsb
mov
inc
xchg
mov
dec
jecxz
mov
pop
call
mov
lds
dec
jg
ljmp
mov
pop
test
jg
sbb
add
push
orl
icebp
ljmp
loop,pt
imul
push
fdiv
sarb
push
loope
test
js
pop
cltd
sub
popa
ds
aas
aam
lcall
pusha
mov
ret
loope
cmp
mov
xor
and
add
push
push
xchg
dec
add
and
fidivs
add
xor
std
test
xchg
mov
add
add
add
pop
or
mov
add
cld
mov
jg
ret
ss
pop
ljmp
and
shl
xlat
insl
xchg
mov
or
ja
push
js
push
fucomi
push
cmova
insl
ret
pop
sti
or
or
push
jl
cmpsl
mov
lock
dec
lods
cmpsb
in
mov
movb
lods
stc
int3
mov
jge
insl
sahf
into
ret
xchg
stc
or
data16
rcrb
adc
loope
fsubr
roll
adc
sti
mov
push
das
out
pop
loope
sti
push
int
incb
adc
dec
mov
mov
repnz
in
fiadds
pop
pop
pop
nop
xchg
sbb
rep
repnz
cmp
adc
dec
xor
dec
dec
jecxz
jle
decl
cmpsb
std
cmp
push
stos
lcall
add
add
mov
pop
stc
mov
dec
lods
pop
add
pop
add
add
cmc
sub
out
call
xchg
fst
push
adc
push
xor
cmp
mov
pop
icebp
mov
adc
cwtl
dec
sub
dec
insl
popa
daa
mov
lea
clc
jp
xchg
test
fldt
repz
shrl
std
in
xchg
adc
popf
cmp
xorb
jge
or
or
das
jne
les
jne
arpl
aas
lods
xchg
cld
test
in
pop
outsb
sti
jle
xchg
fmull
scas
stc
cmpl
jno
xor
rorb
jle
stos
adc
inc
test
push
mov
pusha
cmpsl
les
lea
rcl
cltd
cwtl
xchg
and
test
jle
prefetchwt1
pop
aaa
inc
mov
ret
sbb
and
or
ss
cld
xlat
aam
and
pushf
adc
add
out
into
push
mov
cmc
lret
dec
mov
add
pop
add
add
mov
scas
out
mov
arpl
mov
insb
jmp
jle
inc
ss
arpl
jnp
cmc
aam
pop
push
test
mov
not
ret
add
addl
daa
into
xor
data16
lods
add
mov
mov
xchg
push
add
out
and
adc
call
mov
xchg
and
cwtl
scas
aas
dec
pop
mov
or
fs
mov
scas
mov
enter
pop
add
xor
pop
xchg
mov
lahf
sub
ljmp
xor
call
mov
lods
xor
aas
inc
xchg
push
sbb
mov
out
xor
shr
ror
in
dec
adc
cmp
adc
xor
jle
loopne
mov
sub
in
enter
in
mov
pop
or
aad
or
loope
and
mov
sub
faddl
pop
mov
add
add
jns
sub
jge
in
jg
jnp
push
cwtl
or
or
cmp
cs
les
shll
push
sub
pop
lds
rclb
mov
push
bound
xor
mov
nop
dec
lahf
push
adcb
loope
adc
ss
fwait
mov
minps
in
sub
bnd
push
xchg
dec
jl
push
clc
and
ja
push
into
mov
and
movsl
xchg
nop
sbb
pop
and
pop
add
xor
mov
sub
pop
add
sbb
jmp
test
lcall
in
push
ljmp
sti
ret
insl
xchg
dec
in
imul
pushl
das
fxch
mov
dec
cli
jo
inc
flds
mov
mov
push
lods
cmp
inc
adc
inc
mov
cmpsb
stos
pop
sbb
push
adc
pusha
enter
xor
jg
sub
add
lahf
pop
lret
inc
and
add
pop
add
pop
add
add
xor
add
mov
jmp
mov
mov
dec
lahf
mov
jge
dec
push
stc
jno
aad
mov
outsl
adc
addb
adc
mov
jb
aad
pop
dec
jmp
into
and
sub
pop
stos
adc
xor
sub
push
push
sub
stos
pusha
or
repz
lds
inc
fisttpl
jb
mov
xchg
push
pusha
mov
js
and
push
pop
sub
fcmovnu
sahf
fcmovne
out
in
scas
cmpsl
cltd
sbb
or
adc
icebp
jnp
adc
add
sbb
and
adc
int
mov
leave
mov
hlt
imul
cwtl
push
cli
out
mov
insl
pop
cmpsb
xchg
pop
dec
rorb
outsl
mov
rclb
jp
leave
add
push
dec
push
test
popa
fstl
jl
fnstsw
int
push
mov
jns
adc
add
idiv
jg
pop
and
sub
add
add
add
push
push
mov
pop
push
mov
push
sbb
push
mov
sbb
sub
outsb
push
pop
inc
not
or
sub
sahf
push
lods
popa
rcll
call
jecxz
mov
leave
ret
lock
movsb
push
jmp
scas
into
lods
push
addl
mov
imul
out
mov
cli
shll
jl
roll
out
lods
push
inc
loop
sbbl
sarb
shl
adc
pop
fpatan
or
faddl
xchg
xchg
push
rclb
rcrb
stos
sbb
inc
mov
adc
ja
ss
shll
les
mov
xchg
or
and
ss
mov
or
jge
das
cmp
mov
xchg
xor
mov
mov
inc
aaa
lods
cmp
adcb
xchg
mov
into
fmuls
add
add
pop
mov
mov
mov
add
add
add
sub
scas
outsb
push
insl
cmpsl
adc
ret
lds
pop
dec
lahf
cltd
jo
test
xor
dec
stos
les
out
cld
push
push
lods
xchg
jg
test
mov
aam
adc
mov
sbb
pop
jle
inc
mov
fadds
dec
cmpb
jge
sbb
or
gs
mov
mov
rcr
aaa
mov
adc
dec
mov
mov
frstor
jle
mov
adc
aad
jmp
into
aam
je
ja
add
cli
stc
mov
jl
mov
rorb
pop
lods
hlt
mov
shl
or
out
cmpsl
shl
adcb
lcall
repnz
sbbl
or
push
mov
jmp
aas
sti
pop
xchg
xchg
or
arpl
inc
stos
xchg
mov
repnz
movsb
jle
stc
test
popa
aaa
jbe
jae
popa
add
pop
add
add
rcll
fists
daa
lock
testl
inc
loopne
in
dec
fsts
dec
pop
outsb
imul
xor
mov
or
push
pop
add
pop
and
sti
inc
jns
loop
xchg
mov
adcb
imul
gs
adc
mov
loopne
cltd
cmp
ds
call
imul
and
addr16
mov
aam
sbb
jg
scas
int
mov
xchg
mov
mov
insb
push
out
adc
bound
lock
adc
mov
or
push
pop
xor
js
push
sbb
jg
stc
insb
dec
lods
in
shl
test
std
and
and
xchg
fwait
std
pop
cmpsl
mov
scas
mov
jge
lods
fwait
sub
dec
or
jmp
and
jecxz
push
and
pusha
pop
es
lret
mov
push
ret
lcall
mov
cmp
loopne
jl
fcmovb
jecxz
stos
sub
stos
out
jmp
sub
xchg
cld
aaa
mov
bound
add
add
add
mov
stos
push
and
lea
repz
cmp
pop
sub
pushf
scas
pop
stos
roll
and
inc
push
in
pop
imul
das
mov
xor
bound
roll
push
out
movsl
add
lock
rcrb
or
scas
fildll
fwait
sbb
xchg
sub
fwait
sbb
push
push
xchg
cmc
xchg
addr16
enter
sbb
mov
repz
lock
shl
repnz
orb
xchg
dec
push
outsb
mov
and
test
add
in
mov
loopne
loopne
or
outsl
insl
mov
int
cmp
jns
daa
cmpsb
imul
mov
das
sahf
jmp
mov
and
movq
idivb
lock
in
mov
rcrl
lret
repnz
dec
test
movsb
daa
int
clc
fisubrl
mov
test
cmpb
aaa
js
jge
mov
mov
jno
or
mov
shll
fnstenv
add
sub
arpl
add
add
add
fnstenv
mov
in
cmc
adc
std
mov
cmpsl
push
inc
test
adcb
mov
and
inc
push
adcb
dec
idiv
push
xor
inc
out
xchg
adc
jge
push
adc
inc
cmp
and
stos
or
adc
je
mov
xor
push
ss
xchg
lret
call
fcmovnb
shlb
xlat
pop
sub
mulb
in
sub
lret
in
cmp
ljmp
movsb
xor
mov
lods
pop
or
dec
mov
int3
push
loopne
mov
xchg
or
jmp
inc
jno
adc
in
imul
add
repz
aas
imul
cltd
add
cli
sbb
cmp
xlat
add
xchg
pop
fisubrs
mov
fwait
shlb
jae
pop
loop
adc
call
nop
js
stos
shl
mov
push
in
cld
je
jbe
decl
rcll
add
pop
add
add
add
or
loop
mov
rcrl
jp
sbb
sbb
scas
mov
cs
dec
xchg
adc
hlt
mov
push
cmp
leave
int3
mov
stos
mov
sub
loopne
test
mov
out
ljmp
dec
inc
ljmp
cmp
xchg
push
fs
loopne
mov
ljmp
xchg
push
std
jne
sbbb
pop
lcall
inc
cmc
lods
pop
add
dec
lock
ljmp
pop
lock
inc
sub
outsb
out
shl
push
sbb
out
mov
push
pop
rcrl
fiadds
loope
hlt
xchg
mov
sbb
cs
dec
or
not
fdivrs
pop
daa
loop
push
fldt
dec
lods
adc
xor
popa
enter
ret
jae
out
repz
subb
cmp
add
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
fidivs
test
rorb
mov
jb
jge
fiadds
enter
lcall
lret
inc
xchg
les
jb
fwait
pop
loope
jae
pop
jnp
daa
in
int3
sbb
shl
mov
mov
fcomps
push
in
int3
fdivp
or
inc
jo
repnz
pop
jg
loopne
or
lods
pop
xor
xor
or
xchg
xchg
mov
arpl
and
pop
sti
mov
add
data16
test
inc
add
in
js
inc
into
sbb
in
jae
arpl
insb
push
sub
stos
mulb
in
div
jne
repz
dec
popa
xor
aaa
jae
in
mov
add
in
inc
loope
aas
dec
inc
loop
sahf
lods
push
pop
jle
and
inc
dec
xchg
pop
out
add
add
mov
outsb
sub
fwait
xor
out
jae
jns
nop
sub
leave
adc
fwait
sub
mov
mov
push
jg
shll
stc
add
pop
add
add
clc
out
movb
lret
loopne
jae
cli
out
jle
xchg
sbb
mov
movsl
pminub
xchg
data16
mov
arpl
inc
or
bound
pop
andb
adc
dec
fildl
mov
jns
and
scas
cs
fdiv
or
cs
jl
dec
loopne
xchg
push
scas
inc
fisubs
aad
xchg
cmp
or
push
or
xor
fimull
mov
out
or
add
or
mov
ret
and
xchg
adc
sbb
add
cmpsb
int3
xchg
std
stc
fwait
cltd
enter
xor
out
mov
add
aad
xchg
push
jecxz
popa
mov
pop
roll
movsb
aaa
xchg
pop
cwtl
sub
nop
popa
jge
data16
inc
cmc
cmp
mov
es
pop
pop
in
repz
pop
and
add
add
mov
fucomip
lock
cmp
add
pop
add
add
sub
pop
ljmp
xor
dec
add
jns
add
push
test
int
test
mov
fstl
out
ret
aaa
push
push
test
mov
ja
mov
int
mov
jae
call
testl
lcall
into
cltd
adc
jnp
adc
in
pop
mov
loop
mov
pop
jo
cltd
mov
inc
sar
fucomip
xchg
int3
xchg
mov
in
push
sub
cli
shl
mov
push
jg
gs
pop
decb
dec
lea
push
push
daa
xchg
js
out
pushf
and
leave
mov
sbb
lret
in
std
mov
sbb
add
repnz
xlat
dec
ljmp
in
int
pusha
outsb
cmp
dec
mov
or
cs
scas
out
xchg
mov
fstps
mov
mov
or
or
aam
cmp
mov
xor
add
dec
out
iret
jmp
das
mov
in
pop
imul
add
inc
andl
pusha
hlt
jno
push
jmp
test
push
loopne
fstpl
mov
or
xlat
xchg
mov
push
iret
or
xchg
and
out
insl
cld
cwtl
or
jmp
imul
dec
ficompl
jne
lret
jecxz
cmp
les
cmp
lcall
mov
repz
add
push
xor
call
mul
mov
cmp
jbe
enter
stos
inc
nop
nop
clc
sub
int
icebp
sbb
mov
xor
in
fisttps
pop
push
sbb
cld
xor
mov
mov
push
int3
mov
fnstsw
inc
les
adcb
dec
xchg
jg
mov
mov
lcall
call
repnz
mov
ja
sbb
dec
inc
mov
les
sub
cld
imul
push
loop
adc
jg
inc
sub
add
std
cmpsb
pop
or
lret
mov
pop
push
push
add
add
add
jg
fcmovu
pop
jae
xlat
mov
pop
outsl
loope
je
and
or
jle
jbe
xor
pop
into
in
jae
sub
push
pop
cmpsb
lret
andl
push
sub
pop
ds
mov
mov
xor
out
push
sbb
test
fisttps
pop
add
lret
loop
lods
mov
push
xor
dec
repnz
sub
push
dec
cwtl
in
pop
aas
jno
rorl
adc
mov
ja
enter
push
xlat
pop
clc
xlat
cmp
adc
lock
jnp
pop
mov
lods
iret
fcomps
mov
push
lcall
je
push
sbb
pop
mov
mov
dec
sub
popf
mov
popa
sbb
add
fs
int3
mov
cmp
gs
pop
cltd
lea
mov
pop
mov
or
add
add
add
neg
std
fsubrs
adc
and
add
add
add
jno
or
xor
ds
sarb
rclb
scas
sbb
popf
hlt
subl
jbe
loope
adc
or
iret
rorb
sbb
lcall
mov
sub
jg
pusha
inc
adc
xchg
and
inc
mov
fwait
icebp
push
mov
mov
stos
lea
dec
mov
cli
out
push
dec
or
lret
sub
jp
mov
jmp
in
outsl
test
ds
push
push
shll
das
loope
jle
lock
movl
jg
stos
test
mov
inc
and
jg
out
fbld
xor
add
mov
pop
cmpsb
fists
inc
and
mov
mov
pop
inc
data16
outsl
fdivr
test
into
adc
int
add
push
lret
cli
cmpsl
pop
dec
dec
pop
lahf
jnp
data16
sbb
lcall
sbb
rclb
or
add
cs
adc
lods
mov
pop
add
add
or
mov
dec
push
sub
js
dec
mov
mul
mov
mov
adc
popl
lahf
push
dec
mov
adc
push
push
movsl
add
into
je
sbb
repnz
stos
mov
mov
movsb
cmp
pop
mov
negb
lock
jo
loope
or
sarb
ja
and
pop
jp
sahf
ss
adc
int3
xchg
xchg
push
sub
fs
decb
inc
xchg
mov
sub
fs
add
adc
addb
addl
dec
pushf
cmp
insb
push
into
ljmp
fsub
fistps
fsubs
in
in
repz
dec
cs
mov
movsl
push
jl
loopne
cmp
sbb
or
stos
fsubl
xchg
jmp
xchg
pop
inc
cltd
ret
adc
mov
xor
je
jp
xchg
mov
add
ja
out
and
outsl
fadd
jge
xchg
and
add
add
add
inc
mov
mov
xchg
cmc
xchg
bound
sbb
add
call
xchg
stc
or
inc
sbb
xchg
pop
lret
data16
mov
test
cld
cli
aam
xor
out
xchg
add
jnp
movsl
mov
test
sub
loope
sub
mov
fisttpl
xor
push
or
mov
adc
lahf
fsubs
jle
cmpsl
xlat
aam
outsb
cmp
dec
ret
mov
xor
push
shrb
dec
gs
ror
push
imul
movsl
inc
cs
and
ficoml
ja
out
lds
ficompl
lods
mov
loopne
lods
pushf
dec
lods
roll
incb
je
sbb
scas
xchg
inc
push
lock
sub
ljmp
not
mov
adc
jb
shrb
cmpsb
xor
xor
mov
pop
mov
mov
mov
and
add
pop
inc
sti
sbb
and
roll
daa
sub
ja
aad
add
stos
in
mov
outsb
add
pop
add
add
cmc
sahf
pop
xor
add
push
add
mov
stc
addr16
ss
hlt
arpl
xor
cld
shlb
or
dec
xchg
jecxz
out
aam
pop
ljmp
add
jbe
test
lret
leave
or
mov
pop
pop
popa
xchg
jmp
push
outsl
das
xor
push
push
fwait
sbb
sub
xor
stos
jmp
mov
cs
add
pop
in
js
outsb
mov
lds
jae
xor
dec
push
jae
jbe
lahf
rorl
lret
dec
and
sbb
mov
cmp
xchg
xchg
push
mov
and
add
jle
sbb
jo
aad
xor
sbb
imul
adc
mov
mov
xchg
dec
or
movsb
loopne
add
adc
pop
rcrb
test
add
int
mov
jnp
inc
cmp
jns
loop
outsl
add
pop
add
add
adc
cld
std
xchg
into
adc
sbb
dec
sub
jae
jns
sub
loope
ljmp
adc
ret
into
lods
nop
mov
pushf
ret
jmp
mov
mov
std
push
out
mov
aaa
inc
lahf
shrl
jno
xchg
iret
mov
xchg
js
push
add
mov
sahf
scas
push
inc
push
dec
movsb
inc
fwait
cmpsb
aad
sub
add
mov
arpl
fwait
push
mov
jbe
dec
add
or
push
movsb
std
add
push
jb
inc
mov
inc
xchg
cmpsl
stos
insl
js
cmpb
pop
in
js
and
lea
mov
shlb
jae
cmp
xchg
shll
jnp
shl
and
dec
mov
push
fstl
addr16
movsb
fnstcw
pop
or
inc
adc
repnz
xor
add
cli
xchg
jle
rol
call
cmp
add
add
add
pop
jae
and
or
or
push
or
mov
mov
arpl
rolb
das
mov
jnp
xchg
jne
out
fldcw
jne
scas
out
xchg
mov
push
mov
test
jbe
cmc
orl
jnp
push
jnp
lock
insl
divb
adc
jno
cs
test
cmp
roll
gs
and
daa
and
sahf
jle
xchg
sbb
daa
outsb
hlt
test
sub
mov
jmp
scas
jae
or
cmp
repz
aas
dec
mov
scas
sbb
fldcw
and
xchg
out
and
lret
out
xchg
add
shll
repnz
test
sbb
lods
jp
dec
nop
mov
or
pop
clc
lock
mov
dec
and
pushf
insb
loopne
stc
sbb
in
call
jb
jbe
mov
adc
lahf
jbe
pop
lods
cmc
push
jl
add
fwait
jnp
aad
push
adc
lock
jno
add
add
add
cmpb
icebp
xor
ds
lea
mov
inc
mov
fldt
les
xor
xchg
hlt
push
shl
pusha
ret
adc
js
mov
sarl
mov
mov
or
outsb
jmp
jbe
mov
push
pop
jns
lcall
and
fstps
psrld
dec
loop
hlt
cmp
mov
imul
out
ret
push
lods
lock
or
ret
inc
aaa
rorb
sbb
push
int3
popf
fs
in
clc
dec
mov
adc
push
ds
std
in
pop
test
mov
jge
mov
xchg
and
mov
mov
or
sub
popa
sahf
rclb
lods
aas
jns
out
hlt
pop
push
xor
sbb
testw
cli
add
imul
or
aas
sahf
in
test
or
and
mov
std
mov
ffreep
dec
fmul
inc
jb
add
add
add
stos
out
push
push
scas
mov
xor
jne
std
dec
sti
cwtl
add
jmp
dec
add
call
inc
push
popf
test
out
clc
jbe
mov
and
pop
xchg
scas
scas
sbb
dec
mov
loope
xor
lods
ds
push
push
pop
xchg
mov
popf
sbb
das
sbb
or
aam
xchg
rorb
mov
dec
mov
push
fbld
add
add
dec
mov
cli
insl
ja
lods
jno
lahf
divb
dec
stos
sub
pop
stc
jmp
mov
mov
inc
mov
ljmp
rcll
inc
leave
push
mov
daa
test
cli
sub
repnz
cmpsl
lcall
lcall
sub
push
test
jo
dec
dec
jmp
mov
sti
fldt
mov
fidivl
or
push
add
fstl
mov
dec
jae
add
add
add
mov
dec
jp
jecxz
pop
daa
outsl
stos
out
imull
insw
jne
cmp
inc
pop
imul
adc
ss
hlt
cmpl
fnsave
pop
nop
mov
jnp
inc
sub
dec
test
cld
mov
xchg
adc
mov
fdivp
xchg
sbb
arpl
push
or
ja
adc
cmpsl
aam
add
incb
fistl
loopne
mov
xchg
out
scas
dec
mov
cmp
cmp
jae
pop
adc
test
xor
xchg
or
mov
ds
cli
add
mov
inc
jne
dec
or
adc
add
mov
icebp
frstor
addr16
inc
inc
jnp
mov
aam
or
dec
mov
mov
push
sub
mov
imul
rolb
adc
int3
mov
inc
in
mov
mov
out
lahf
aaa
inc
or
je
add
add
add
ljmp
sbb
imul
loope
cld
mov
hlt
xchg
pop
ret
xor
mov
xlat
repnz
outsl
jl
imul
popf
icebp
jg
movsb
jmp
mov
pop
repz
lret
and
xor
int
and
fs
jl
or
fidivrs
sub
dec
mov
faddl
fcomi
insl
fs
cmp
mov
xor
es
and
cmp
adc
add
sub
sbb
arpl
call
iret
lock
mulb
out
inc
dec
xchg
push
xorb
pop
imul
ja
test
subl
rclb
adc
test
jge
int3
xor
ljmp
in
pop
or
js
mov
lods
mov
pop
out
jecxz
dec
int3
in
xchg
in
adc
jle
dec
push
xor
ljmp
add
add
divl
dec
jno
cmpb
pop
xchg
pop
jne
add
add
add
imul
jecxz
sbb
push
xor
lret
dec
in
leave
push
sub
cmp
dec
aas
das
orb
or
and
dec
xor
scas
adcl
xchg
mov
push
andl
xchg
sbb
add
mov
nop
test
jp
ror
dec
and
lods
xchg
inc
push
add
inc
pusha
test
and
stos
dec
stos
inc
xor
mov
or
cmp
sbb
adc
in
xor
xor
ss
lods
test
movsl
push
rcll
fcmovbe
jmp
lret
jno
test
sub
dec
jo
outsl
cmc
push
inc
pop
clc
pop
lahf
lea
ss
push
icebp
leave
xchg
cmc
rcr
loop
shr
fs
pop
addr16
dec
ja
cmp
inc
add
sbb
mov
push
iret
and
loope
sbb
dec
scas
pop
lcall
xchg
jl
lds
add
add
fisubs
mov
xchg
inc
lock
mov
jbe
add
add
add
inc
push
push
pop
test
inc
inc
shl
in
stos
es
and
je
aam
add
repnz
pop
lock
pop
sub
dec
mov
sbb
out
sub
fcmovne
ss
jnp
add
rorb
cmpsl
xlat
sbbb
mov
push
push
mov
lods
shll
sub
jno
call
mov
pop
mov
push
dec
frstor
rcrl
mov
mov
and
lret
or
pop
mov
or
into
mov
mov
and
jecxz
inc
xchg
paddusb
ds
out
sbb
clc
jle
loopne
into
dec
aas
es
lret
repnz
out
fwait
xchg
jle
mov
xchg
testb
push
sbb
cmpsl
cwtl
push
repnz
das
mull
jb
outsl
pop
ffree
jnp
das
or
jb
mov
add
shlb
mov
cmpsb
rolb
add
add
add
clc
cmpsb
cmpl
xchg
xor
pop
xor
cmp
aas
stc
test
pop
lock
push
cld
cmpsl
mov
mov
pushf
pop
in
inc
push
inc
pop
jl
dec
add
pop
mov
mov
or
je
or
jo
xchg
xchg
scas
adc
xchg
sbb
push
mov
mov
lcall
mov
mov
sub
scas
in
loope
fsubrs
in
xchg
add
dec
jb
mov
enter
push
dec
in
xor
add
inc
inc
and
inc
dec
or
or
cmp
inc
outsl
out
imul
decl
movsb
repz
push
lea
jno
das
mov
mov
rcr
mov
fistl
xor
adc
ret
test
rclb
lahf
add
add
testl
push
jo
add
pop
add
add
sbb
jmp
mov
aam
ficoms
inc
and
imul
cmp
popf
xchg
pusha
lret
xor
jae
in
jnp
int3
test
mov
cs
adc
nop
xchg
mov
mov
mov
sub
mov
pop
xchg
sbb
scas
pop
adc
push
mov
sar
and
pop
mov
pop
jno
sub
test
andl
cmpsb
sbb
pop
dec
or
pusha
fnstenv
es
adcb
pop
int
jne
jge
add
inc
outsb
xor
test
shll
setb
lret
mov
jecxz
mov
add
loop
cld
mov
in
add
sub
les
sbb
bound
push
pop
lods
imul
insb
pusha
mov
mov
aam
int3
fwait
jg
mov
aam
in
adc
or
jb
xor
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
lcall
xchg
fisubs
xchg
xchg
popa
imul
mov
dec
add
out
inc
fsubrs
test
int3
jle
cs
and
sti
inc
je
mov
lock
push
cmp
cmp
mov
pusha
sub
fdivs
fistpl
inc
and
ret
inc
cmpb
push
rcrb
sbb
dec
insl
loop
popa
pop
out
cmp
in
cmc
fstpt
imul
daa
test
pop
ljmp
int
cmpsb
stc
jae
popl
popf
dec
inc
fldt
xor
jp
dec
paddb
cld
les
push
xchg
aam
inc
dec
test
jns
pop
movsl
int3
roll
call
mov
push
and
push
and
mov
xchg
cmp
dec
cmpsl
pop
sbb
inc
adc
std
fiadds
cmpsb
pusha
jne
outsb
repz
lcall
mov
cmpsb
lods
rcrb
cmp
add
add
pop
add
add
hlt
cwtl
scas
inc
repnz
add
inc
xchg
lahf
jg
cld
scas
les
int
sbb
xorl
sahf
cmpsb
xlat
jecxz
shr
lahf
cs
repz
imul
cmp
sub
shrl
push
cmp
dec
test
fs
js
push
lret
das
cs
fstpt
sbb
push
sbb
push
sub
js
je
sub
adc
inc
mov
add
movsb
fdivrl
rcrb
sub
outsl
dec
mov
jnp
add
insl
add
or
fsubr
popf
xor
lret
enter
adc
add
xor
imul
packsswb
cwtl
jecxz,pt
jns
insl
sub
fldenv
add
jl
pop
cmpsb
icebp
cli
adc
cmpsl
cmp
mov
inc
adc
in
test
add
lret
jp
cmp
add
add
cmp
cli
mov
movsb
pusha
bswap
test
add
add
add
stos
pop
xchg
xchg
jae
dec
mov
jmp
jmp
cmp
jg
dec
and
aas
push
test
push
es
xor
shl
mov
xchg
sbb
mulb
std
stos
test
cmpsb
shrb
jb
repz
out
cmp
mov
mov
dec
xchg
hlt
inc
out
hlt
es
push
lds
push
push
mov
movsb
es
outsl
jo
shrb
xchg
loop
int3
jle
sbb
xor
les
cli
adc
jl
jb
jne
sub
push
arpl
mov
xchg
std
leave
popa
daa
fwait
xchg
cmp
jbe
sub
xor
rorl
inc
and
mov
xor
sbbl
enter
imul
data16
jp
mov
test
inc
cmpsl
fstpt
dec
stos
mov
out
inc
mov
add
std
test
inc
jbe
stc
lea
jmp
mov
pop
add
add
mov
rcll
into
aad
push
inc
dec
insb
enter
push
mov
test
jg
int3
ljmp
dec
test
loopne
xchg
pop
frstor
mov
and
mov
mov
popa
mov
add
subl
or
jmp
mov
cmc
xchg
fsubrl
inc
rcl
dec
xchg
bound
stos
repnz
cltd
popa
xor
jns
fcom
push
jge
mulb
cmp
add
sub
mov
push
fwait
daa
repnz
stc
outsl
js
nop
lcall
add
add
add
dec
or
notl
cltd
adc
lahf
out
je
mov
push
cmp
push
add
imull
dec
arpl
jecxz
mov
lods
aam
mov
mov
mov
out
out
stc
xchg
adc
cmp
push
push
js
loopne
testb
iret
out
movsb
pop
lods
cmpsl
xchg
xchg
jge
add
add
add
insl
cmp
arpl
dec
les
adc
cmpsl
sbb
pop
popf
mov
jne
jns
cmp
pop
idivl
in
dec
addb
xchg
popa
pop
sbb
cmp
cmp
adc
pushf
test
and
push
in
jns
ja
imul
pop
adc
add
ds
adc
add
mov
add
or
inc
icebp
adc
mov
adc
xchg
int3
cmpl
leave
clc
es
push
stos
shrl
imul
test
ret
and
push
jp
iret
pusha
pop
into
cmpsl
jle
lock
lcall
pop
out
inc
push
mov
xchg
sahf
stc
stos
inc
data16
mov
arpl
mov
sub
lea
aaa
shlb
cmp
xor
add
jecxz
std
xor
inc
repnz
jp
xor
dec
jp
xchg
icebp
add
lcall
pusha
jmp
lcall
add
ljmp
clc
mov
inc
out
dec
inc
fs
jne
sub
das
mov
enter
ljmp
in
sbb
repz
in
cmpsb
ja
loopne
fstl
les
mov
into
push
lock
jo
cmp
insl
mov
stos
xor
call
sbbl
push
mov
ja
test
and
mov
dec
dec
adc
das
mov
mov
decb
pop
xchg
sub
pop
scas
pop
xlat
cmpsl
mov
clc
stos
cmp
int3
pop
dec
loope
lahf
fstps
icebp
mov
imul
mov
dec
inc
xor
addr16
sbb
push
jl
rcll
stos
pop
push
or
dec
out
stos
xor
jmp
fcoms
stos
cmc
sbb
mov
aas
dec
pusha
test
ss
add
sti
push
std
add
mov
idiv
fnsave
fstpl
add
add
add
fimull
or
cmpsl
mov
xor
xchg
inc
fsubrs
cmc
cmp
mov
outsb
push
shr
cmc
daa
sbb
in
loop
lahf
xchg
add
cltd
jle
add
inc
sbb
dec
mov
ja
mov
cwtl
xor
shrl
outsb
cmc
jne
ljmp
mov
nop
jne
pop
ret
pop
in
call
jl
and
and
pop
stos
frstpm(287
cmp
inc
dec
xor
fcmovbe
mov
repnz
lcall
dec
jge
add
int
inc
loop
addr16
xor
pop
add
leave
inc
in
jle
scas
inc
arpl
imul
adc
fs
pmaxsw
lds
stc
fdivs
inc
mov
sbb
adc
xchg
pop
mov
ret
ficomps
andl
adc
int
pop
dec
pushf
mov
add
xchg
call
sub
fisubrl
add
add
aaa
in
in
fwait
fwait
clc
xchg
outsl
packuswb
dec
inc
shrb
adc
mov
xor
cltd
rcll
mov
cmp
xchg
ret
fcomi
in
les
scas
mov
and
cmp
fildll
int3
push
push
shlb
xor
pusha
sbb
scas
inc
add
fsub
mov
adc
inc
pushw
inc
mul
lcall
mov
das
sbb
sbb
push
repnz
cltd
mov
jge
ja
mov
ret
cmp
sbb
lcall
out
ror
fmuls
popa
mov
jns
add
pop
pop
cmp
pop
mov
lahf
in
les
push
mov
shrl
jle
xchg
pop
pop
push
insl
popa
mov
les
push
lods
mov
dec
jno
divl
mov
pusha
or
xchg
push
test
ljmp
add
sti
iret
test
sub
add
add
pop
add
add
lds
adc
mov
sbb
cmpsl
test
jne
adc
pop
pop
mov
rorb
push
stc
mov
or
rolb
icebp
popa
bound
mov
add
sbb
jno
jp
cld
lods
jecxz
adc
adc
mov
pusha
sbb
pop
js
adc
popf
sub
jg
push
in
out
cmc
cmpsb
mov
xchg
insb
and
scas
icebp
int3
cmp
int
pop
arpl
out
adc
mov
call
outsl
push
pushl
orl
sub
fimuls
push
jnp
ss
sbb
mov
and
shll
filds
stos
inc
jge
ds
jge
cmpsl
inc
outsl
sahf
jmp
push
sbb
jle
out
dec
mov
cli
and
jbe
mov
pop
xchg
jnp
aas
les
scas
mov
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
fwait
jo
addb
pop
add
add
fcoms
or
mov
outsl
jo
and
mov
outsl
clc
mov
mov
xor
wrmsr
gs
jge
adc
mov
aam
movsb
pop
push
xor
cmp
push
push
xchg
cwtl
or
scas
xchg
test
jl
mov
shlb
xchg
pop
sahf
out
outsl
mov
cmpsb
nop
pushf
roll
imulb
imul
stc
xchg
mov
int
fisubrs
decl
shl
cmpsl
imul
adc
and
aaa
loopne
dec
xor
pusha
inc
push
fsubp
fcoml
sahf
lret
jl
jmp
mov
and
icebp
rclb
lret
stos
add
scas
fsub
and
inc
mov
dec
lret
xchg
dec
push
xchg
movsb
scas
sub
jp
in
mov
push
mov
fmulp
dec
sub
jne
insl
outsl
jmp
jnp
xchg
jmp
aad
pop
cmp
sbb
out
jnp
fsubrl
mov
mov
cmp
mov
pop
add
add
inc
mov
push
punpckldq
andl
cli
lods
in
mov
jl
insl
sti
pop
pop
or
scas
fimull
scas
sub
in
pop
sbb
adc
cmp
adc
mov
xor
adc
sbb
sub
cmpsl
pop
cld
mov
pop
add
loop
add
dec
and
js
inc
add
stos
fsubrs
adc
mov
vmread
xchg
xchg
call
push
jns
jo
ja
jle
push
in
add
jp
adc
ficompl
xchg
cmp
xor
testb
adcb
pop
aad
and
inc
test
stos
in
mov
clc
sub
and
lods
xchg
inc
mov
mov
mov
lahf
data16
xchg
mov
loop
iret
enter
cmp
insl
xchg
pop
imul
add
pop
test
ljmp
roll
mov
pop
add
add
push
cs
xchg
jae
popa
test
sub
mov
mov
stc
dec
aas
mov
adc
insl
push
pop
dec
daa
jo
ja
adc
gs
leave
leave
add
cmovl
sbb
jnp
insl
fcoms
lea
jne
sbb
and
addr16
ror
sbb
mov
movsb
pop
movsl
adc
push
pop
and
test
into
cmp
xchg
jne
cld
mov
lds
mov
lret
sub
loopne
in
adc
idiv
xor
lahf
jg
mov
cmpsb
xor
dec
mov
out
test
push
xchg
cli
push
scas
call
adc
pop
mov
hlt
inc
pop
jg
in
mov
xchg
icebp
push
xlat
adc
xor
int3
sub
adc
jle
mov
or
and
arpl
adc
jae
add
arpl
jnp
sbb
adc
and
add
pop
add
add
jl
ret
cmpsb
out
sbb
push
in
mov
push
dec
shll
inc
pop
popa
jl
dec
sub
pop
xor
cwtl
iret
ljmp
lds
pop
inc
pop
dec
loope
rol
push
push
ja
icebp
jns
popf
rcrb
dec
daa
push
jmp
cli
in
imul
add
mov
scas
push
cmp
mov
jbe
sbb
fsubl
test
cli
mov
add
or
inc
push
add
aam
sub
inc
add
cmp
out
adcb
cmp
and
inc
call
mov
cmp
cmp
inc
mov
orb
arpl
andb
mov
mov
data16
js
mov
test
fnclex
gs
lods
lcall
fdivr
sbb
xchg
stc
adc
sub
mov
rol
dec
cmp
scas
test
outsl
add
aas
or
mov
lds
add
pop
add
add
call
loop
test
mov
xchg
das
jnp
orb
add
es
aas
add
jle
push
dec
xchg
pop
and
and
add
mov
jmp
adc
inc
in
cli
pop
shr
inc
inc
das
add
push
pop
gs
rorb
jo
mov
lods
sub
daa
fwait
movsl
pushf
xchg
mov
nop
rcl
mov
jmp
cmp
cmpb
cmc
mov
inc
lea
pop
or
xchg
lahf
jns
xor
fmul
add
lcall
mov
add
cmc
dec
mov
pop
gs
in
cld
loopne
push
loop
das
cmc
and
mov
fimuls
pop
shll
cmp
fisubrl
adc
sbb
push
adc
mov
sbb
mov
lods
sahf
xchg
std
mov
cli
mov
cmp
lret
cmp
mov
push
push
out
pop
icebp
fiaddl
insb
fidivl
sub
jp
adc
xchg
add
add
add
mov
scas
push
xchg
adc
cmpsb
andl
pop
pop
cmp
arpl
lods
int3
lret
outsl
shr
sbbb
jl
add
jg
push
out
outsl
roll
xchg
sbb
int
push
and
jmp
nop
sub
sarl
mov
push
scas
jns
and
sub
sarb
push
leave
push
jno
cld
xor
xor
and
enter
test
dec
stos
pusha
test
pusha
adc
nop
aad
call
mov
jge
bound
mov
jmp
add
ficompl
and
out
insl
fstps
jmp
sbb
mov
xlat
mov
popf
add
push
push
jnp
adc
inc
push
sub
imul
lods
adc
repnz
or
inc
and
mov
push
negl
shlb
add
mov
xchg
in
add
mov
add
add
add
inc
fmull
inc
dec
inc
xor
movsl
in
mov
pushf
push
popa
movsl
xchg
add
fnstcw
xor
xchg
gs
sbb
push
lahf
pop
cli
sbb
sti
pop
movsl
cli
mov
faddl
add
daa
aas
xor
mov
or
push
dec
lahf
jmp
push
mov
aad
jecxz
ss
dec
mov
decb
subb
dec
lcall
dec
or
push
mov
notl
fcmovbe
xor
xor
lds
cmp
dec
js
cli
out
pop
mov
sbb
cmp
cmp
fxch
cltd
bound
int3
add
lahf
mov
push
dec
mov
jns
into
push
adc
mov
sub
push
push
pop
jg
jae
dec
cmpsl
pop
cwtl
outsl
add
dec
pop
ja
cwtl
out
ljmp
or
inc
mov
mov
push
int
add
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
or
and
imul
ret
or
pop
shrl
adc
add
xchg
dec
call
ljmp
jle
and
sub
or
insb
enter
nop
les
and
mov
jae
cmc
add
into
lock
pop
test
xchg
sarl
sub
xchg
into
mov
sbb
and
out
cmp
sti
add
rorl
add
movq
xlat
mov
aad
inc
mov
and
mov
cmpsb
mov
lret
sbb
mov
sbb
mov
or
test
fs
test
pop
mov
inc
out
in
sbb
nop
or
jg
repz
or
lret
shl
add
icebp
dec
repz
xchg
enter
insb
and
add
adc
std
and
xchg
rorb
mov
out
mov
add
add
add
outsb
and
in
add
push
pop
cmp
loop
and
jge
cmp
movsb
mov
les
pushf
mov
jb
adc
arpl
pop
mov
fcoml
aad
mov
mov
lea
or
test
jl
cld
jnp
cmpsl
outsl
jne
cmp
aad
xchg
pop
fmuls
cmp
mov
in
stos
bound
inc
dec
push
pop
cmp
lcall
mov
mov
lock
mov
and
xor
lock
inc
sub
in
push
outsb
push
cmp
ja
jns
or
push
add
daa
das
aad
pop
fdivl
cld
jmp
mov
fs
loopne
lahf
mov
hlt
or
repz
test
mov
or
into
jl
pop
insb
pop
xor
push
iret
jns
cmp
stos
lock
push
jbe,pn
inc
add
lods
ret
ret
add
mov
add
cmc
mov
add
add
add
mov
add
shl
pop
push
inc
pop
adc
and
jg
jne
dec
das
outsb
pusha
jnp
icebp
dec
pushf
xchg
cld
xor
notb
push
jns
lods
cmpsb
sbb
jp
push
jmp
imul
fnstsw
int3
xlat
aas
mov
jo
cmp
imul
test
dec
xor
adcb
fistpll
jecxz
imul
xchg
shl
icebp
dec
fs
cli
lea
into
jmp
imul
push
hlt
shrl
pop
movsl
pop
insl
call
popa
jg
xchg
roll
andl
stos
xor
aam
xor
mov
xor
jne
aaa
cmc
sub
mov
xor
hlt
add
cmc
mov
stc
xchg
push
insl
sub
divb
lods
inc
xchg
pop
pop
add
hlt
jecxz
in
cmp
movsl
or
adc
in
adc
jg
dec
imul
xchg
jae
add
les
out
xchg
cmp
add
add
add
jb
dec
push
pop
jl
jge
push
cmpsl
fnstsw
in
lcall
lea
shr
sub
sub
push
xorb
dec
pop
push
sti
sahf
lret
fdivrs
cmp
je
jbe
cs
bound
sti
adc
stos
call
in
fmul
jb
push
pusha
push
lret
mov
xchg
shrl
jg
xor
hlt
pop
popa
cmp
adc
loop
fimull
push
and
pop
push
adc
out
outsl
ret
xor
lods
in
add
sbb
jle
in
in
jbe
add
je
mov
lcall
sarl
or
aam
adc
bound
mov
jle
lods
jnp
sub
lock
cmp
push
data16
mov
xchg
adc
lods
and
aam
pop
mov
sub
cmp
adc
mov
mov
idivb
inc
addr16
ljmp
dec
push
ret
inc
jp
add
add
jmp
in
adc
pop
mov
imul
ret
lea
in
adc
cmp
insl
jne
outsb
or
jl
icebp
fimull
xor
clc
sti
test
jnp
cmp
pop
push
add
mov
adc
movsl
jo
test
mov
inc
ret
xor
mov
mul
adc
xor
sbb
sub
jno
cli
stos
mov
adc
int
test
es
mov
in
sahf
ffreep
daa
xor
dec
mov
push
mov
mov
and
scas
stos
shll
bound
sbb
or
sahf
movsl
sahf
jnp
dec
pop
in
dec
movsb
rorb
lea
mov
inc
call
pop
sbb
adc
inc
xchg
shr
dec
dec
add
addr16
shlb
fs
aaa
adc
fucomip
lret
adc
jb
test
push
les
aaa
shlb
cmc
div
mov
shrl
or
add
cwtl
mov
add
insl
fs
mov
xchg
mov
mov
and
mov
rclb
cmpl
jb
and
out
add
cmp
jo
push
mov
cli
stos
or
int
loope
mov
cmp
aas
cltd
jb
fldl
mov
pop
inc
cmp
movsb
shlb
xchg
lret
lret
and
push
movb
add
arpl
test
int
mov
push
push
sub
ret
test
les
jmp
cmp
mov
test
je
loopne
test
ja
les
adc
mov
fistpll
and
repnz
ficoms
or
sti
not
loop
xchg
test
lock
adc
pusha
cmp
enter
adc
cmp
cmp
sbb
out
sbb
mov
cmp
jg
cltd
mov
sbb
sti
aas
std
in
cmp
test
add
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
jne
mov
cmpsl
mov
fistps
mov
std
imul
ret
data16
leave
xor
fisubrs
test
rclb
icebp
hlt
mov
pop
test
lods
cld
lds
fisttpl
int3
sub
neg
pop
subl
inc
mov
repnz
subl
repz
xor
pusha
inc
sbb
aas
sub
xor
sahf
pop
cmp
sbb
lds
or
xchg
jp
and
xor
arpl
push
add
xchg
sbb
das
lods
lret
mov
add
mov
cmp
bound
pop
xchg
out
pushl
xchg
and
rorl
in
xor
mov
mov
ja
xchg
in
add
out
fstpl
bound
scas
lret
push
loop
gs
cmp
in
insb
test
pop
aam
fadds
shll
cmpsb
jcxz
mov
insl
add
xchg
add
pop
add
add
stos
pop
imul
adc
iret
adc
mov
int
pop
jnp
cmp
dec
leave
fbstp
loop
mov
out
loopne
push
lahf
loop
mov
xor
sbb
mov
sbb
movsb
repnz
imul
push
es
cmp
mov
sbb
or
lahf
and
pop
push
sbb
dec
lahf
lea
fldt
repz
xchg
lock
jae
cmp
out
call
fs
xchg
loope
cmpsb
pop
jnp
mov
xchg
test
push
pop
aas
jo
arpl
and
aad
insl
jae
push
lods
xchg
in
pop
repz
ljmp
mov
jo
mov
mov
adc
insb
sbb
jge
adc
push
add
std
mov
repnz
ret
sub
and
aam
dec
in
xchg
jno
pop
push
xchg
mov
ror
imul
and
idivb
add
clc
jnp
jg
in
cli
push
out
pop
xchg
add
pop
add
add
dec
adc
lahf
cld
pop
cwtl
mov
cli
neg
jbe
negl
loopne
pop
xor
push
adcb
outsb
mov
inc
add
sub
adc
inc
add
sbb
loope
adc
inc
push
leave
sbb
mov
pop
pusha
ror
das
xchg
std
sub
push
pop
xor
scas
lods
fwait
mov
lahf
cltd
adc
shlb
loopne
test
das
arpl
inc
stc
xchg
lahf
inc
scas
flds
mov
sbb
dec
gs
xor
sub
cld
scas
lahf
insl
mov
inc
ljmp
lret
mov
sahf
sbb
insl
lds
gs
out
mov
out
fcompl
jl
js
stc
mov
pop
movsl
ror
inc
inc
fistps
fsub
or
dec
cmovnp
imul
lock
dec
or
andb
cmp
loop
movsl
add
jl
xor
outsl
fnstcw
mov
dec
push
add
add
lods
faddl
fbstp
cld
fidivl
in
mov
add
pop
add
add
jg
in
into
fcoms
and
repnz
add
lret
cwtl
jb
aam
inc
cltd
sbb
mov
insb
mov
dec
subl
add
xor
repnz
imul
pop
mov
mov
mov
test
cmpsl
js
and
ret
cs
adcl
fwait
or
in
negl
enter
lahf
fwait
roll
inc
lock
femms
and
gs
aad
push
mov
loope
jmp
jge
lods
push
cmp
shrl
xor
and
out
adc
inc
xor
sub
xchg
push
dec
dec
arpl
or
inc
and
sbb
ret
ret
sar
or
insl
and
pop
xor
movsl
ret
lcall
in
mov
sub
ljmp
shll
movsl
inc
mov
movsb
jno
mov
xor
add
jl
sar
std
jle
testb
mov
add
pop
add
add
mov
vpsubusb
or
mov
fstl
in
mov
lods
shrb
sub
imul
icebp
xor
orl
mov
jl
xchg
pop
pop
lea
xchg
hlt
push
fwait
mov
mov
mov
jo
xor
fdivrp
sub
lret
xchg
hlt
dec
ret
push
mov
push
in
int
mov
pop
test
aam
sti
dec
inc
sbb
ljmp
jmp
sbb
dec
adc
outsl
fwait
inc
inc
adc
push
inc
lret
xchg
adc
xchg
mov
adc
js
scas
into
es
shll
mov
int
lret
mov
xor
mov
rorl
dec
xchg
sub
xchg
or
cld
mov
push
jge
lret
enter
cmp
jmp
cmc
inc
loopne
xor
xor
cltd
add
js
ds
push
sub
cmp
mov
add
cmp
cmp
mov
xor
add
pop
add
add
gs
xor
lods
xor
in
mov
dec
adc
sbb
shl
pop
insl
mov
rcrl
sub
gs
push
jg
call
cmp
test
pop
lock
ss
inc
aam
jp
imul
enter
cs
std
jge
ja
call
mov
inc
fcomps
jb
fmull
sub
fs
sbb
mov
mov
scas
in
push
stos
sbb
sbb
std
jl
stos
mov
push
cltd
lret
stc
les
xor
cmp
jno
cltd
jp
jns
sti
xlat
mov
jno
sbb
fstps
sub
or
push
xor
cmc
jg
cmp
insb
mov
xchg
or
or
push
stos
cmp
jns
or
jmp
fimull
jns
dec
icebp
sbb
scas
add
test
movsl
or
jp
cmp
fwait
and
popa
mov
sub
loopne
xchg
add
pop
add
add
js
xlat
push
les
fildll
int
jl
repnz
movsl
cwtl
pop
mov
sahf
fildl
jns
add
jecxz
xchg
jnp
ss
adc
or
cwtl
xchg
leave
xor
lds
repnz
push
aaa
sub
mov
shld
push
stos
leave
stc
test
adc
mov
je
pop
jecxz
jb
sarw
xchg
test
lret
lds
adcl
lds
mov
insl
jg
or
mov
mov
outsb
mov
out
inc
cli
into
fbld
sub
or
dec
movsl
loop
data16
dec
dec
or
hlt
xchg
lea
fucomp
push
mov
or
mov
mov
rep
or
push
sahf
lds
xchg
adc
jp
jae
inc
sti
test
cmpsb
das
mov
dec
push
xchg
mov
mov
inc
fcmovne
rclb
into
mov
scas
lea
addl
push
and
xlat
aas
insb
lods
ret
test
xchg
inc
xchg
add
pop
add
add
dec
scas
lds
mov
loope
int3
jae
sbb
divl
incb
loope
rcr
sub
add
xor
das
jmp
lods
cltd
faddl
jo
ret
daa
cmp
mov
nop
or
in
pusha
lods
rorl
dec
push
repnz
out
add
addr16
adc
repnz
movsb
push
push
stc
add
xor
jp
loopne
adc
out
jne
dec
add
add
jmp
pop
dec
or
push
add
pop
je
inc
fwait
inc
pop
lds
es
test
dec
in
push
dec
aam
pop
sbb
sub
gs
cli
xchg
fs
sar
sarb
dec
pop
xor
lock
pop
sub
aas
push
outsl
stc
rcrb
sarb
movsl
sub
std
xchg
jl
push
add
push
enter
and
mov
jl
bound
pop
pop
rolb
es
je
add
mov
mov
jmp
dec
pop
not
pop
dec
cwtl
add
pop
add
add
fsubr
push
jb
xor
bound
test
iret
xchg
test
stc
stos
mov
addr16
not
sbb
pop
aad
push
xchg
data16
sbb
jg
enter
ret
cmp
mov
or
xchg
loop
sbb
fcmovbe
xor
lcall
push
ljmp
ss
cmp
xchg
pusha
pusha
push
mov
imul
movsb
ret
jge
push
add
pusha
sbb
daa
pop
mov
add
pop
jbe
cmp
addr16
stc
inc
nop
lcall
mov
das
ljmp
mov
adc
pop
ss
dec
movsb
mov
div
ds
cld
aad
jecxz
sub
cmp
shrl
mov
rorb
and
push
stos
mov
in
xor
pop
cmp
xchg
push
mov
pop
jmp
cmp
jecxz
test
bound
test
inc
leave
and
adc
sbbl
xorl
adc
clc
adcl
add
add
add
or
xchg
insb
xchg
test
sarb
fldt
loop
shr
cmpsl
xor
or
jno
ss
push
aas
pop
mov
sbb
cmpb
lcall
dec
push
add
and
cmp
xor
sti
mov
sbb
xor
inc
shlb
pop
mov
xchg
pop
push
fwait
dec
jno
sub
xchg
lcall
xor
in
insb
je
sarb
fsubrl
cmpsl
cmp
mov
and
and
push
daa
arpl
icebp
lret
outsl
loopne
aad
cmp
insl
push
aaa
loope
adc
xchg
sbb
sbb
xchg
test
and
mov
sarl
dec
xchg
jns
fisubs
call
cmp
iret
or
ja
cmp
icebp
inc
jns
les
sbb
xor
dec
mov
add
inc
push
mov
mov
mov
imul
sbb
leave
dec
jns
adc
pop
add
add
mov
push
mov
mov
push
stc
mov
push
mov
dec
sub
insb
pop
push
out
nop
cmp
cmc
aam
repnz
gs
jns
dec
das
add
imul
xlat
adc
sbb
lret
xor
insl
loope
pop
mov
ss
adc
out
test
outsl
shlb
push
sbb
icebp
sti
lods
dec
inc
lods
mov
xchg
shll
daa
xchg
scas
xchg
dec
test
cmp
cmp
and
outsb
push
fwait
test
enter
mov
cli
lds
test
pusha
jle
fidivl
adc
fdivrl
pop
jmp
outsl
add
int
in
sub
xor
and
fwait
cmp
push
pop
mov
push
icebp
cmp
push
repnz
jns
das
pushl
lock
ss
or
gs
xor
mov
insb
in
aaa
xor
mov
jge
jg
ljmp
out
stos
sbb
add
pop
add
add
cli
leave
pop
cld
push
int
shlb
jns
pop
sub
fldenv
pop
jle
inc
jl
mov
repz
jl
push
and
inc
add
ds
fistl
adc
xor
lods
movsl
lea
adc
cli
into
sub
inc
hlt
scas
mov
mov
outsb
push
js
pop
fnstcw
push
jns
mov
test
mov
stc
adc
mov
inc
mov
test
jo
inc
jmp
shrl
stc
xchg
int3
sub
xchg
and
and
sbb
test
pavgw
loop
ud0
xchg
pop
insl
mov
shl
scas
dec
xor
mov
or
inc
xchg
insb
cmpsb
fisubl
sub
aas
adcb
adc
mov
call
sub
mov
sbb
fadd
cmpsb
sbb
adc
cmp
ljmp
pop
jne
add
sti
adc
mov
repnz
add
ja
out
xor
cld
push
jl
lock
add
pop
add
add
dec
jo
cmp
mov
loop
dec
js
jg
scas
ret
xor
or
mov
adc
clc
sbb
cmc
lock
pop
dec
aaa
in
mov
out
jmp
shl
stos
js
gs
popa
test
lcall
push
loop
mov
jbe
or
sub
push
imul
jns
mov
jecxz
mov
sbbb
int3
in
scas
loope
pushf
sti
push
mov
adc
sahf
push
adc
out
jns
incb
mov
fwait
adc
jo
out
inc
movsl
ja
clc
loope
iret
mov
adc
ret
repz
cwtl
fsts
mov
aas
les
sub
fsubl
insb
adc
int
xchg
jmp
lcall
or
popa
sbb
outsb
xchg
fcmovu
push
pop
ret
call
sbb
push
mov
jecxz
mov
lea
imul
adc
add
pusha
test
je
push
insb
sahf
ret
subb
pop
add
add
bound
mov
adc
addr16
mov
int
add
in
or
enter
aad
frstor
add
and
sub
sti
add
sbbb
or
xchg
out
aaa
add
jle
mov
add
jno
fwait
push
rcrl
shlb
enter
xchg
mov
push
jno
add
mov
std
loop
pop
stc
nop
cmpsb
and
mov
inc
push
xor
push
cs
outsb
mov
inc
xchg
imull
lods
xchg
xor
inc
adc
das
imul
movsb
dec
in
int
xchg
push
inc
jns
xchg
adc
push
mov
adc
fsubr
xor
loope
cld
mov
ja
les
and
mov
stc
jns
push
push
imul
pop
ss
test
cmpsl
stos
mov
jecxz
adc
adc
hlt
movb
push
or
adc
ds
idivb
in
jae
out
repz
add
add
mov
repz
repz
rcr
push
jae
add
pop
add
add
xchg
movsb
mov
mov
xor
xchg
in
mov
mov
pop
mov
pop
rcrb
inc
sbb
push
jp
jl
sbb
push
gs
mov
xchg
adc
and
scas
in
mov
jecxz
mov
inc
sbb
notb
es
jg
add
lret
dec
dec
sbb
jle
in
arpl
and
mov
jl
fadds
lea
cltd
aas
jp
lock
adc
repnz
cmp
stos
sub
pop
xor
inc
pusha
inc
pandn
add
push
push
or
lcall
movsb
inc
push
iret
ret
rorb
movsb
scas
fstl
inc
and
cwtl
movsl
sbb
xor
jg
scas
mov
mov
shlb
pop
jne
or
fwait
shlb
mov
pop
movsb
sub
test
add
xor
pop
stos
into
movsl
or
in
sti
clc
push
imul
ljmp
add
mov
pop
or
dec
jp
add
pop
add
add
rcll
mov
mov
inc
enter
jge
mov
andl
mov
push
in
gs
jge
sbb
aaa
push
lods
insb
add
lret
xchg
xlat
and
ja
test
mov
fwait
cltd
sahf
jmp
add
xor
adc
pop
ja
or
mov
mov
fdivrs
fs
adc
mov
sub
jno
xor
mov
jmp
mov
loope
mov
fildll
hlt
add
ljmp
inc
push
out
xchg
leave
imull
pop
cld
add
mov
xlat
cmp
xlat
inc
xor
sbb
fs
out
or
jle
mov
ljmp
and
jge
dec
aaa
pushf
gs
mov
cltd
sbb
cmp
sub
stc
aad
adc
lods
xchg
cltd
add
fcomps
test
pop
jl
push
cli
movsb
push
xlat
push
xchg
test
cltd
xor
stos
stos
clc
insb
add
std
stos
sbb
push
andl
dec
xchg
pop
out
lods
outsb
scas
jnp
pop
out
test
dec
pop
sbbb
loope
addl
call
cmp
pop
jb
ljmp
add
lds
push
into
test
dec
rolb
cmp
mov
jne
js
xor
cld
jl
dec
push
fisubrs
mov
in
mov
lods
sub
das
aaa
pop
dec
cwtl
fildl
jg
in
test
sub
inc
mov
sub
mov
lods
mov
mov
xchg
mov
push
je
pop
mov
mov
daa
leave
jmp
pop
pop
jl
and
cmp
mov
dec
pop
or
inc
push
gs
cwtl
movsb
or
mov
add
lods
xchg
mov
add
les
dec
lret
out
negb
aad
cs
lods
cltd
mov
test
jecxz
mov
adc
rcrl
xchg
cmpsl
push
int
test
imul
push
inc
fdivl
push
mov
mov
add
push
sti
pushf
pop
pushf
das
adc
movsl
into
dec
fdivrs
scas
mov
add
in
and
loope
push
popa
jne
lds
sbb
hlt
mov
imul
cmp
pop
fcomps
fisubl
fdivr
in
jnp
fsubr
push
sub
jns
mov
lods
lock
sbb
dec
sub
and
mov
pop
ret
push
cmp
mov
js
jge
xchg
or
add
dec
sub
repnz
cmpsb
jbe
sub
pop
sub
icebp
inc
loop
into
adc
rol
xchg
out
test
loopne
clc
dec
xor
dec
das
rcll
xor
lods
pop
callw
cld
stos
leave
jecxz
dec
fiaddl
mov
hlt
out
lret
rcll
sub
inc
popa
and
js
xor
and
sbbl
rorl
outsl
add
pusha
pushf
pop
cmc
int3
add
or
add
mov
adc
mov
push
jmp
push
loop
mov
add
push
add
mov
bnd
push
fildll
push
mov
test
cmp
call
mov
push
mov
cmp
jne
insw
mov
enter
shll
fs
clc
imul
test
sbb
mov
ja
inc
and
aam
outsl
xchg
fs
outsb
js
mov
adc
fcompl
pop
xchg
pop
xor
pop
cmp
fbld
mov
aaa
les
mov
or
sub
outsb
fdivp
dec
fmull
jbe
ja
shl
adc
gs
push
or
pop
cmp
in
xchg
imul
xor
ja
or
fmul
mov
ja
in
jae
sub
sahf
mov
xchg
sub
fsubr
mov
repz
mov
pop
push
imul
test
repnz
scas
push
cmpb
push
jne
fisttps
add
stos
hlt
jmp
jmp
add
xchg
mov
add
stos
addr16
jmp
xchg
mov
pop
mov
insl
mov
and
xchg
inc
mov
insl
xchg
inc
popa
dec
pop
out
mov
rorl
daa
cmp
sbb
pop
in
jecxz
dec
cmp
subb
lds
cltd
pushf
fildll
imul
testb
outsb
testb
push
test
push
aas
xor
add
sbb
sbb
aad
cmc
xchg
sahf
add
push
dec
cmp
mov
adc
and
push
shlb
test
jns
jbe
sub
outsl
xor
shll
in
adc
rorb
outsb
push
clc
lods
mov
or
cmp
pop
sbb
in
loope
inc
sarl
cmpsb
mov
sub
inc
adc
jl
mov
mov
insb
das
sub
stc
in
inc
dec
cmc
sbb
add
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
add
mov
dec
sti
pop
push
sbb
jmp
les
xor
adc
dec
and
dec
mov
inc
repnz
mov
lods
ds
mov
cld
and
inc
or
aad
pushf
mov
ja
push
leave
mov
lret
mov
mov
in
fwait
mov
bound
sbb
in
dec
loop
lods
cmp
inc
cmp
pop
decl
or
aaa
aas
imull
pop
pusha
mov
sub
popa
ja
adc
movsl
popf
test
fchs
mov
scas
stc
mov
pop
lea
cmpsl
cli
out
lods
sub
cmp
mov
out
test
pop
fsubl
and
lods
roll
out
ret
int
mov
test
repz
xchg
push
ret
push
js
outsb
mov
mov
add
jp
scas
fcoml
bound
add
add
mov
inc
fwait
lds
push
sarl
ret
sti
jp
movsb
movsl
add
pop
add
add
aam
push
jne
add
out
or
orb
out
mov
outsl
mov
repz
dec
mov
clc
lret
es
jge
mov
out
lods
loop
xchg
pop
jmp
inc
jns
sub
aas
inc
cmp
sti
mov
mov
add
lea
hlt
scas
sbb
dec
or
mov
mov
and
mov
pop
cltd
mov
lock
add
mov
and
xchg
dec
xor
fldlg2
and
adc
out
sub
xor
imul
loop
pop
sbb
pop
sub
push
mov
mov
jne
mov
sbb
push
out
shrl
mov
xor
cmpb
xor
jo
pop
popa
jno
fs
lods
inc
pop
lahf
inc
push
mov
cmp
fwait
xor
lahf
ret
xchg
mov
mov
in
fucomi
or
movsb
enter
lcall
std
in
mov
mov
add
add
sbbb
jl
inc
adc
and
lret
mov
mov
bound
lods
or
inc
lods
xchg
mov
sbb
cmp
sti
inc
imul
loopne,pt
pop
repz
lock
bound
jecxz
mov
jg
or
dec
cmp
arpl
sbb
sbb
mov
enter
sahf
inc
fsubl
faddl
cwtl
cmpsb
jae
data16
mov
lret
das
mov
adc
jecxz
xchg
jae
mov
mov
add
inc
xchg
or
test
sub
jmp
rorl
mov
jmp
addr16
in
cmp
and
jne
dec
sbb
sbb
jae
stc
pop
adc
rol
mov
xlat
lcall
mov
mov
fs
leave
fistpll
dec
shl
cmpsb
stos
cmc
lret
push
sbbl
mov
popf
cmpsl
rcrl
fistl
xchg
clc
add
mov
push
sti
jmp
pop
dec
pop
movsb
scas
push
add
cmpsl
add
pop
add
add
jns
ret
sahf
int3
dec
into
sbb
jne
rorl
jnp
xor
testb
add
cmp
xchg
lret
sahf
loopne
cli
imul
xor
jns
frstor
push
push
xchg
lcall
pop
mov
inc
loopne
mov
mov
and
sbb
mov
mov
call
nop
into
and
jge
jmp
jle
push
inc
mov
popf
mov
out
fidivrs
pop
jp
push
sahf
and
pop
aaa
mov
jnp
stc
das
xchg
mov
xchg
jecxz
pop
mov
xchg
outsl
add
mov
mov
lcall
nop
cmp
xchg
popa
frstor
jmp
fists
jmp
fiaddl
pop
faddl
fldcw
stos
sbb
outsb
pop
push
inc
lahf
sbb
out
mov
inc
dec
fsubs
mov
push
and
xor
inc
in
inc
mov
cmpsl
shll
test
mov
jecxz
lock
fmuls
cwtl
mov
add
add
insb
pop
add
adc
pop
dec
or
xor
int3
cmp
mov
dec
pop
pusha
dec
nop
jns
pop
push
fidivs
sub
push
push
xor
push
push
leave
stos
ret
jb
dec
repz
sub
repz
fld1
push
stos
out
inc
stos
add
add
outsl
iret
jae
std
sub
lret
mov
in
pop
mov
out
add
shl
sti
adc
sbbl
jno
cmc
pop
jge
inc
and
sbb
adc
jg
mov
lret
sbb
insb
cli
daa
adc
mov
mov
addr16
repz
orl
lea
or
pusha
mov
rcrl
dec
outsl
pop
xchg
adc
jnp
mulb
mov
sub
cmp
add
mov
cld
mov
add
mov
shrb
add
rclb
fs
orb
pusha
mov
outsl
and
or
xlat
dec
xor
jno
jns
adc
mov
push
hlt
sub
lock
add
sbb
ror
fidivrl
call
cwtl
mov
leave
mov
mov
movsb
adc
lock
inc
dec
adcl
and
test
out
sbb
xchg
mov
jl
push
fbstp
mov
adc
pop
xchg
sub
push
sarb
sbb
mov
addr16
pop
movsl
popl
and
ljmp
fsubrp
jno
dec
roll
cmp
movsb
sbb
imul
mov
sbb
dec
xor
sti
movlps
test
sar
aaa
daa
lcall
daa
mov
jb
or
xchg
outsb
inc
pop
mov
xchg
in
les
pop
popa
insl
std
sahf
insb
imul
add
add
out
cmc
mov
sarl
add
pop
add
add
cmp
jmp
es
shll
cmp
sbbl
xor
mov
and
cwtl
jo
cmpsb
dec
push
and
repnz
cmovge
sbb
shl
cmp
mov
inc
jae
jp
push
dec
cmp
loop
out
xchg
pop
pop
lods
mov
and
adc
sbb
daa
div
call
pop
das
insl
sahf
mov
cmp
rcr
cld
and
xor
add
xor
pop
inc
push
shll
outsl
scas
pushf
mov
mov
fisubl
iret
lret
cmp
adc
mov
mov
aad
mov
push
xor
clc
xor
mov
sub
cmp
push
mov
pusha
imul
loop
je
ret
fbld
movl
addb
add
add
out
std
dec
std
pop
cmp
cmp
dec
mov
add
pop
add
add
xor
shlb
insb
nop
loop
sub
dec
js
pop
fidivrl
xorl
rclb
mov
es
repz
mov
lahf
cmpsl
add
imul
push
iret
or
shrl
adc
scas
jne
inc
outsb
mov
dec
addb
sbb
cmp
hlt
ljmp
pusha
mov
dec
ret
pop
pusha
leave
jecxz
inc
pop
dec
pop
daa
and
push
inc
hlt
push
cmpsb
xchg
xchg
out
mov
arpl
movsl
mov
mov
mov
xor
and
imul
int
cmp
sbb
mov
sub
hlt
imull
push
scas
adcl
pop
add
pop
out
test
pusha
push
add
in
test
ljmp
mov
repnz
sbbl
iret
xchg
loope
fidivs
loop
ljmp
adc
inc
pop
aad
add
pop
add
add
sbb
xchg
dec
out
adc
stos
adc
cwtl
push
pop
or
pop
repz
mov
mov
in
orb
mov
out
leave
adc
movsb
mov
inc
mov
push
gs
ds
les
push
dec
push
frstor
cld
out
mov
mov
and
jnp
dec
ja
cli
pop
mov
rol
repnz
cmpl
adc
aam
dec
mov
enter
lret
xchg
dec
dec
mov
cmc
lret
inc
lods
ret
sub
fdivrl
pop
cmpsl
and
jnp
push
lret
push
mov
or
orb
fwait
push
xor
mov
test
sub
loopne
add
xchg
jb
jge
cmp
loop
mov
add
mov
push
push
jl
sub
inc
mov
inc
aas
pop
fimuls
mov
push
xchg
jl
aad
push
xchg
jg
jmp
std
push
int
incb
sbb
add
pop
add
add
dec
and
ror
pop
xchg
mov
sbb
xchg
dec
pop
xor
movsl
test
cmpsb
mov
or
popf
jno
imul
cmp
fimuls
or
mov
jb
sarl
dec
add
jl
mov
inc
int
out
xchg
adc
mov
jbe
mov
outsl
daa
in
dec
mov
aad
cmpl
xchg
mov
mov
pop
lret
sub
and
fidivrl
xchg
xchg
stos
mov
xchg
pop
rclb
pushf
fsubl
arpl
inc
and
sub
ffreep
jle
mov
out
jecxz
xor
pushf
ljmp
cmp
leave
ffreep
out
fimull
and
sub
out
jp
push
scas
add
cmp
lds
enter
leave
mov
popf
dec
push
cmp
add
xor
dec
sarb
push
adc
add
add
add
pushf
bswap
les
add
dec
scas
xchg
sbb
insb
scas
jae
pop
clc
fcompl
test
dec
aam
add
sti
xchg
lds
test
testb
dec
pop
lock
out
or
dec
xchg
push
rorb
cltd
jecxz
fldcw
out
inc
cmp
ret
mov
and
in
fistpll
lcall
scas
add
xor
sbb
pmulhw
cli
jp
rcl
es
adc
sar
insb
fimull
fdivrl
push
fnsave
mov
inc
mov
fisttps
jnp
mov
std
cltd
in
mov
adc
inc
pop
fildl
mov
mov
or
pop
rcll
xchg
mov
adc
jge
mov
lahf
out
xchg
fcmovu
incl
das
push
movsl
jle
cli
jge
pavgw
daa
test
mov
push
inc
out
dec
rclb
add
add
xor
cmp
or
ljmp
add
outsb
mov
dec
dec
aas
dec
push
sbb
pop
ud0
fdivrs
xor
fimuls
mov
push
stos
pushl
subb
imul
sub
imul
scas
adc
cld
cmpsb
cmp
cltd
adc
pop
inc
cmp
jns
icebp
add
xor
filds
in
test
or
pusha
iret
shlb
sub
ret
inc
jle
or
mov
repnz
and
dec
dec
dec
addb
sub
xchg
mov
aam
movb
adcl
or
test
je
pop
push
fwait
rcrb
dec
jmp
and
cmp
xor
cs
dec
lea
or
ljmp
xchg
mov
xchg
or
insb
in
out
out
push
inc
shlb
jmp
jne
xchg
sbb
add
adc
pusha
mov
jne
das
mov
repz
int3
pop
fidivs
sub
dec
data16
sub
add
jp
les
mov
ret
ja
test
cld
or
mov
add
add
add
cmp
xchg
mov
outsb
pop
cmp
lea
iret
pop
scas
push
jae
jb
jbe
or
ficomps
mov
loope
sbb
add
add
in
sub
adc
stos
lahf
sbb
testl
xchg
add
das
mov
jno
jno
push
dec
jl
ja
mov
scas
jno
cmp
or
call
insl
sbb
inc
pop
clc
and
out
pop
push
mov
dec
lock
adc
out
mov
or
fimull
in
xor
clc
jns
aam
pop
jb
je
xchg
push
ficomps
pop
xchg
mov
jecxz
xchg
leave
call
rcll
and
int3
imul
and
lret
lea
test
fnsave
cli
lret
setnp
pop
lods
scas
js
fmuls
hlt
jecxz
dec
sti
adc
dec
or
pop
stc
out
push
push
xchg
data16
and
add
pop
add
add
sub
lock
cld
inc
sub
or
cs
or
in
cmp
das
mov
out
mov
nop
mov
adc
js
xchg
and
mov
sbb
and
bound
loopne
scas
notb
dec
popa
dec
sbb
mov
sub
leave
inc
jno
clc
pop
mov
inc
adc
aas
mov
jae
push
je
out
pop
push
inc
pop
enter
or
jg
or
mov
jno
call
and
stc
outsl
inc
push
in
pop
imul
cli
testb
cmp
les
int
ds
fsub
outsl
xor
lret
aas
mov
mov
fwait
out
add
loop
cltd
ss
hlt
mov
fsubl
adc
push
imul
and
loope
and
divb
add
push
mov
lcall
test
pushl
add
fnstsw
cld
push
jl
loope
xor
daa
or
ds
aam
pop
jecxz
push
enter
dec
add
xor
adc
mov
testb
lcall
dec
daa
sub
fisubrl
pop
pop
jne
outsb
popf
jecxz
xchg
mov
pop
xlat
mov
in
mov
dec
adc
gs
and
test
fdivp
add
cmpsl
mov
and
mov
jae
insb
nop
fwait
mov
les
ljmp
addb
dec
dec
jmp
sti
lods
xchg
pop
cmp
xchg
adc
cmp
insb
cmp
jmp
pop
sub
lcall
lds
pushf
insl
push
pushf
call
xor
pop
out
mov
es
nop
lahf
ljmp
push
pop
hlt
fs
mov
inc
pop
dec
jmp
ficomps
movsl
sbb
es
fstl
jo
sub
cmpsb
push
add
jne
mov
xchg
movsl
jns
scas
inc
inc
push
mov
add
add
add
adc
icebp
cmp
cs
mov
cwtl
outsl
sti
fnsave
fimull
and
js
sub
lods
lods
sbb
xchg
jmp
lahf
and
mov
enter
mov
cmp
mov
add
sub
add
pop
int3
pop
mov
and
push
out
push
pop
icebp
dec
pop
sub
addl
inc
nop
adc
outsb
sbb
daa
mov
popa
outsl
cltd
inc
cmpsb
ret
pop
test
aad
and
data16
insl
cmpsl
xchg
sbb
test
add
mov
dec
mov
mov
movsb
mov
xor
paddw
dec
sbb
fsubr
sbb
xchg
mov
mov
fimull
xchg
imul
or
add
lahf
inc
mov
push
aad
stc
ret
inc
fwait
roll
inc
in
aad
dec
or
xor
cmc
movsl
insl
xor
dec
pop
pop
sbbl
cli
test
cmp
orl
add
fistpll
fsubrl
xor
fwait
jb
mov
adc
jo
pop
mov
cld
cmp
nop
xor
xor
inc
outsl
out
dec
loop
sub
sub
pop
cmp
mov
mov
popa
negb
inc
je
jle
xor
or
inc
pop
push
shrl
dec
out
sbb
mov
js
std
iret
int
addl
icebp
out
xchg
ret
mov
mov
add
inc
xor
push
xor
cmp
sub
push
imulb
push
bound
push
inc
lahf
pop
je
lret
bound
push
mov
repnz
loop
add
and
dec
cmp
pop
in
xor
decl
dec
jnp
mov
daa
mov
add
xchg
addr16
pop
andps
jmp
push
mov
cmp
call
push
add
je
fisubl
loope
mov
jecxz
out
arpl
sbb
add
pop
add
add
out
movsl
mov
lock
orb
aad
jb
mov
cli
mov
xor
imul
and
push
xchg
pushf
scas
pop
dec
mov
cwtl
test
clc
jmp
jmp
add
popl
mov
rcrl
xor
scas
jl
les
push
lret
test
lods
xchg
scas
fwait
dec
jecxz
jne
aas
pop
sbb
les
xchg
or
or
rorl
jo
addr16
inc
fwait
mov
popa
jp
or
mov
inc
out
loop
push
repnz
addb
sub
fxch
gs
cmp
push
jle
jp
lret
mov
insl
push
ljmp
popf
sub
xchg
mov
xor
stc
sbb
xchg
pop
xchg
jnp
sub
test
sahf
outsb
cmpsl
je
fbstp
enter
int
adc
dec
dec
test
jo
jmp
hlt
lock
repz
aam
popl
push
xchg
test
jg
xor
stos
xor
lcall
add
or
and
test
sub
jne
pop
inc
sub
dec
lret
out
push
push
push
inc
inc
xor
out
xor
rdpmc
testb
cld
rolb
int
inc
lods
dec
and
add
fistl
dec
in
cmp
fs
das
shll
dec
inc
mov
adc
ja
mov
sbb
sub
mov
cmp
push
mov
push
icebp
ja
fidivs
movsb
cmp
add
insb
inc
je
mov
fldt
mov
push
out
std
cmp
mov
into
int
push
push
add
vphaddubw
movd
xchg
insl
fisubrs
xchg
repnz
in
sub
stos
push
loope
aas
aad
pop
ret
cs
add
fsub
shll
incl
inc
bound
mov
xor
test
cmc
jb
jmp
pop
aam
or
movsl
inc
mov
sub
nop
dec
adc
lock
in
lcall
xor
fs
int
sbb
pop
add
add
outsl
divl
jnp
hlt
jp
mov
sub
cmp
fldenv
and
or
and
and
aam
xor
dec
jbe
cmpsl
mov
push
sti
cmpsb
test
ds
arpl
mov
addb
inc
sub
outsb
and
xchg
jge
stc
mov
or
jne
adc
xchg
shl
cmp
lock
xor
or
sbb
adc
icebp
aad
adc
scas
out
lods
jae
mov
sub
sub
addb
mov
dec
xchg
sti
das
push
test
arpl
cltd
mov
mov
cmp
aad
filds
cli
sub
mov
inc
rcll
push
popa
into
insl
mov
insb
lods
xchg
icebp
or
pop
jnp
dec
xor
bound
dec
out
cmp
mulb
loop
out
scas
cmp
loope
push
inc
aaa
sbb
ljmp
mov
ja
add
sub
jg,pt
adc
outsl
xlat
adc
mov
add
sub
movb
and
out
call
cmc
dec
bswap
inc
cmc
and
popa
sub
imul
inc
pop
repnz
subl
jg
mov
ja
pushf
rcll
ucomiss
std
pop
push
shrl
fcompl
pushf
mov
adc
iret
ljmp
outsl
fs
pop
sbb
jl
fcmovb
lock
lahf
addr16
cli
sbb
jae
add
pop
sub
sub
mov
push
bound
xchg
lcall
into
jne
mov
out
mov
xor
adc
push
sbb
mov
adc
add
insl
int
scas
lret
aas
in
pushf
repz
insb
cmp
icebp
sbb
in
xlat
cmp
sbb
or
sub
pop
push
inc
pop
cli
sbb
cmp
and
pop
xor
push
sub
cmpsb
movsl
sub
add
insl
sbb
outsl
mov
rcrl
xchg
xor
add
dec
sbb
mov
sub
push
ljmp
jnp
push
repnz
jp
add
into
ret
sub
mov
add
hlt
cmc
js
mov
fmul
out
rolb
pop
adc
mov
scas
mov
sbb
pop
inc
je
loope
andb
mov
imul
mull
fdivr
dec
xor
push
and
dec
fistps
mov
mov
iret
insb
sti
xchg
or
or
inc
insl
jbe
bound
xchg
mov
out
add
testl
out
jp
mov
das
add
sbb
orb
out
xor
ss
ret
jo
das
mov
pushw
jecxz
std
ljmp
rorb
jmp
and
dec
les
mov
je
scas
sub
xor
fsubrp
cmp
sbb
lcall
xlat
or
xchg
jne
ja
popf
adc
dec
jl
add
inc
fbld
mov
js
aaa
mov
add
sbb
sub
jl
fistpl
push
aas
add
push
lahf
out
xchg
pop
stc
mov
xor
cltd
mov
stos
inc
cwtl
push
xchg
scas
imulb
lds
mov
push
and
push
imul
sub
in
icebp
int3
and
mov
mov
aam
les
cli
rol
cmp
jle
jne
test
call
das
lds
aam
aad
dec
xor
add
jg
aaa
movsb
and
clc
jecxz
lods
mov
push
lret
lahf
jb
mov
pop
decl
adc
jle
bnd
adc
push
sbb
mov
test
icebp
sarl
aaa
add
adc
jno
ljmp
std
lret
popf
les
or
add
or
jg
cmp
enter
and
push
in
icebp
add
inc
repnz
add
push
push
call
inc
orl
pop
add
add
push
add
sbb
pop
add
add
fnsave
sbb
pop
rcrl
or
aam
cmp
adc
push
ljmp
mov
rclb
inc
sbb
je
mov
cli
mov
fdivl
mov
test
popa
enter
lds
into
dec
or
push
sub
lods
dec
pop
pop
and
push
cli
xchg
xor
inc
push
jg
and
out
std
push
dec
and
dec
aaa
lds
gs
mov
push
xchg
mov
bswap
int3
clc
push
test
out
pop
sahf
je
sti
mov
dec
adcb
lods
mov
aad
lods
and
pop
inc
jbe
inc
aaa
rcrl
test
je
add
scas
fsubs
stc
inc
xchg
lcall
add
xlat
mov
cmp
mov
lods
scas
push
xor
addb
add
into
std
sti
leave
sti
iret
jmp
dec
mov
mov
mov
add
push
adc
dec
mov
icebp
cmpb
lods
sub
cli
adc
cld
mov
and
pop
xor
push
xor
push
movsl
mov
ds
ljmp
fdivr
testl
pop
or
sbb
mov
sti
out
hlt
push
in
mov
add
and
imul
adc
mov
dec
or
out
and
pop
mov
pop
mov
dec
push
and
mov
xor
lods
inc
cmc
cld
fcmovnbe
pop
fsts
loopne
pop
jne
adc
jp
sub
jns
jecxz
ss
sbb
sbb
inc
aaa
lods
sub
xchg
hlt
int3
mov
loop
cmp
movsl
fidivrl
xor
fmulp
repz
rolb
out
iret
lods
rclb
fsubr
jecxz
call
jg
aam
fdivrl
inc
or
lods
fcomps
movsb
fbstp
out
xchg
scas
and
sarl
add
mov
mov
xchg
pop
mov
dec
outsb
dec
mov
add
and
bound
jge
mov
xchg
or
xchg
rolb
xor
lret
test
pop
lahf
pop
test
and
and
js
add
jns
sahf
sbb
or
ljmp
cmp
mov
aam
out
jae
mov
jl
data16
dec
mov
dec
mov
lcall
cltd
out
mov
jae
int
jecxz
jle
pop
punpcklbw
or
adc
out
dec
orps
xor
int
jge
jmp
fsubrl
sub
enter
jge
int
pop
ds
mov
and
xchg
cld
ljmp
adc
aaa
loope
loopne
xlat
insb
jno
adc
not
sarb
fnclex
pop
or
popa
add
mov
pop
jne
cs
enter
int
adc
xchg
fcmovnb
loop
push
cmp
hlt
ljmp
add
add
jg
mov
xor
sub
push
mov
add
or
push
test
add
push
xor
and
std
scas
fisttpll
ret
dec
push
mov
sbb
js
ret
ja
xor
push
jl
daa
xchg
icebp
xor
stos
adc
add
scas
xor
scas
xorl
and
mov
add
add
mov
sahf
dec
das
dec
mov
popa
rcll
add
movsl
ja
mov
dec
inc
cmp
jl
adc
jne
ficoml
lret
add
inc
fcomps
lret
jg
sbb
xor
arpl
or
lods
paddsb
sbb
shll
and
lds
pop
cmp
mov
xchg
jg
push
gs
rcrl
or
cmp
cmpsl
xchg
inc
enter
jp
int
jmp
sbb
xchg
xchg
mov
jae
cmp
pop
mov
jl
test
add
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
mov
jbe
lret
lea
lds
bound
scas
mov
pop
sub
lahf
ret
testl
xchg
fwait
ret
mov
mov
data16
test
out
lret
or
dec
lea
mov
add
xor
cmp
and
jle
push
xchg
hlt
out
cmpsl
lahf
mov
mov
in
pushf
inc
aas
add
bound
push
inc
pop
inc
sahf
vaddsd
pop
add
add
xor
stos
pop
sbb
ret
inc
jo
fcompl
ja
xor
xchg
out
pop
popa
or
lock
sbb
stos
pop
xor
jg
in
ret
lcall
fwait
jmp
imul
jbe
xor
adc
jb
cli
sahf
dec
jp
divb
das
mov
loop
dec
cmpsl
jo
xlat
pushf
shrb
xchg
mov
loop
roll
pop
add
add
int3
mov
shll
out
add
nop
aad
out
das
xlat
nop
in
dec
rcl
dec
inc
sbb
push
push
fdivp
push
push
imul
cwtl
lds
pop
loopne
push
cld
rorb
popf
test
ret
adc
mov
xchg
and
and
mov
xchg
sbbl
jle,pn
xchg
inc
cmp
enter
cmp
xchg
dec
push
pop
jo
cmc
add
add
imul
xor
popl
stos
adc
into
ret
or
cmp
in
mov
leave
mov
or
jnp
or
mov
mov
lahf
jno
fadd
daa
dec
or
pcmpeqd
pop
mov
roll
loop
pop
jl
mov
add
hlt
fstp
popf
pop
cld
bswap
mov
mov
mov
jmp
mov
popf
std
lea
aad
mov
push
lcall
add
add
test
mov
fucomip
imul
ret
pop
add
add
inc
inc
and
cmc
jno
pop
sub
in
lea
dec
in
pop
test
sub
xor
cs
rcrl
dec
lcall
testb
sub
jno
arpl
jge
sub
xor
movsl
sbb
fcoms
dec
ljmp
mov
sahf
mov
xor
mov
ds
adc
or
je
ret
fwait
movb
xchg
insl
mov
inc
es
sahf
dec
outsb
inc
hlt
mov
fistpl
icebp
lret
cwtl
push
xchg
xchg
divl
clc
orl
lea
das
lret
lret
scas
in
mov
bound
push
rcrl
cmp
and
mov
jg
jp
mov
cmp
xor
jecxz
je
mov
inc
outsl
lea
cs
pop
pop
and
inc
out
fwait
addr16
add
add
add
jne
jne
jg
loop,pt
lret
pusha
add
add
pop
add
add
lods
adc
scas
dec
mov
into
and
ja
sbb
in
jle
in
mov
jno
in
sarl
mov
cmpsb
add
imul
loop,pn
mov
aaa
inc
xchg
xlat
jle
xlat
and
xor
jmp
pop
mov
cld
xor
sub
ret
out
push
dec
mov
pop
cltd
in
mov
std
or
push
mov
lea
mov
inc
push
lods
xchg
movsl
dec
cld
in
mov
add
inc
in
ffreep
mov
pop
jns
hlt
out
dec
jecxz
mov
pop
inc
sub
mov
dec
jo
xchg
bound
and
mov
cld
xor
repnz
cmpsb
push
jp
or
push
mov
xor
insl
jecxz
sbb
xchg
cs
pop
cld
lea
iret
arpl
cmp
dec
fstpt
shlb
daa
mov
sbb
cmp
push
lock
add
add
dec
pop
mov
mov
dec
add
stc
ja
les
add
add
add
daa
mov
mov
lods
jbe
cltd
ds
out
adc
in
orl
pop
out
out
sub
js
daa
push
sub
xchg
dec
xor
bound
lahf
cwtl
pop
fsts
into
jecxz
adc
cmpsl
mov
add
arpl
lcall
pop
dec
cwtl
jg
outsl
cli
mov
mov
fisubrl
pop
imul
repz
frstor
mull
lds
lea
and
stos
mov
add
mov
and
inc
loope
or
mov
mov
jae
add
ss
mov
test
jno
repnz
jnp
ret
orb
push
fstpl
push
dec
inc
int
inc
daa
jno
dec
hlt
fisubrs
ja
cwtl
adc
push
adc
popf
lret
bound
mov
je
icebp
dec
xor
cmp
or
adc
jnp
jp
mov
add
outsb
jle
lods
testl
lret
jge
add
pop
add
add
adc
or
dec
add
push
lock
or
pop
mov
arpl
aas
mov
cmpsb
popa
push
sbb
test
mov
lret
cmp
sbb
sahf
push
cltd
arpl
and
jp
mov
pusha
cmp
icebp
add
out
mov
xchg
pop
sti
movsb
jae
mov
push
pop
push
stos
sti
cmpl
in
xor
cwtl
push
lahf
xlat
push
pop
nop
loope
add
inc
mov
pop
and
xorl
int
cmpsl
pushf
pusha
push
popf
or
lahf
lds
out
icebp
and
dec
xchg
cmp
dec
adc
xchg
es
jge
cmp
push
loopne
dec
out
cmp
popf
dec
adc
rolb
pushl
cltd
push
adc
roll
xor
fucom
jle
scas
hlt
ret
clc
push
push
xchg
cli
jbe
mov
ror
push
and
xor
or
mov
mov
jp
arpl
cmp
add
pop
add
add
push
xchg
pop
push
fwait
cmpsl
test
inc
jecxz
push
cmp
mov
xor
loop
inc
inc
fmull
adc
jmp
shlb
aad
mov
dec
mov
mov
sbb
lds
mov
cs
cmp
sbb
sarl
out
and
adc
out
scas
repnz
std
mov
decl
xchg
popa
int3
push
push
out
icebp
jge
cmpb
jbe
inc
int3
lcall
xchg
insl
mov
xor
pushf
pop
mov
mov
sub
jl
xchg
dec
mov
add
pop
xchg
or
inc
pop
outsb
pop
test
lds
fdivr
jbe
popf
pusha
dec
jno
sbb
xchg
das
leave
xor
add
pop
int
inc
lock
add
mov
leave
xor
ret
pop
sti
movsl
loop
adc
int
or
sub
cmpl
mov
adc
add
out
sti
xlat
push
aam
or
inc
out
movl
add
adc
adc
iret
int3
jae
jg
movsl
xchg
inc
js
jmp
movsl
fstpt
mov
in
lods
fcmove
jecxz
das
sti
pop
fldcw
lods
lret
pusha
xor
bound
xlat
leave
leave
addr16
aas
in
je
pushf
sbb
lret
pop
pop
mov
int3
inc
cmp
jmp
ffreep
pop
and
stos
add
xchg
mov
add
out
jge
popf
sahf
and
mov
test
clc
pusha
inc
or
ja
mov
movsl
mov
push
sub
dec
push
pop
xor
mov
and
dec
scas
neg
cmpsl
out
movsb
pop
mov
add
sarb
imul
outsl
jge
popf
popl
outsl
lcall
popl
jbe
pop
aad
or
mov
sub
mov
mov
sbb
inc
xchg
idiv
leave
fwait
iret
xor
cmpsl
ss
hlt
scas
jns
mov
rolb
add
add
push
sub
cmp
jg
dec
das
pop
mov
enter
add
add
cmpsl
ror
dec
cmp
movsl
pop
aad
jb
xchg
push
sub
jno
pop
adc
jne
test
add
sarb
or
scas
add
cmpsl
xor
fcmovb
pop
xor
sub
rcl
xchg
movsb
mov
add
ja
mov
sbb
lock
add
mov
pop
fdivl
push
mov
push
pop
xchg
cmp
pop
push
test
mov
jns
subl
pop
aas
outsb
sbb
sub
test
dec
movsl
in
pop
fidivs
test
shlb
inc
cmp
xor
xchg
push
je
sbb
sub
push
mov
jno
out
adc
sbbl
das
mov
mov
les
fbld
int3
dec
jo
or
dec
mov
cltd
lret
mov
in
mov
inc
ljmp
test
inc
ror
add
xor
fistpll
out
repz
sarb
leave
add
pop
add
add
repnz
das
in
outsb
mov
mov
cli
jle
loopne
xchg
test
or
data16
pop
hlt
in
push
dec
insb
xor
popa
pushf
or
sub
dec
jb
pop
fnstcw
mov
pop
es
div
mov
enter
sub
sub
push
adc
xchg
cs
shll
dec
aas
cmpsl
push
pop
add
push
xor
outsb
sbb
pop
jns
jae
push
std
fnstenv
ret
lret
ja
in
and
fisttpll
pop
in
out
xchg
mov
popa
and
test
sub
popa
ss
sbb
push
push
iret
xor
popa
or
adc
decl
push
add
mov
and
jmp
das
dec
fldl
xchg
aaa
mov
adc
hlt
xor
insb
cmpb
fwait
inc
scas
daa
add
pop
add
jbe
lahf
add
mov
and
lret
pop
add
add
sbb
push
insb
jne
cli
scas
lds
aaa
xor
push
out
daa
jmp
popf
insl
dec
mov
rcl
inc
ja
or
rol
arpl
cmpsl
fsubrs
xor
pop
call
lods
xchg
add
sub
jne
cmpsl
pop
das
bound
cs
out
imul
mov
jl
add
adc
xchg
xor
jle
jnp
pusha
cmp
lds
push
mov
push
mov
mov
jp
or
leave
iret
jge
bound
jecxz
jbe
jg
adc
jbe
cmpsb
jo
inc
or
mov
push
sbb
mov
add
pop
cmpsb
dec
bound
jo
gs
movb
mov
fnstcw
jecxz
bnd
sub
push
pop
leave
leave
insl
incb
xlat
mov
mov
arpl
push
les
addb
xchg
mov
xchg
cltd
sbb
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
lods
das
data16
pop
mov
sub
dec
sbb
out
in
jle
and
or
fisubrs
ror
mov
mov
inc
or
mov
das
sbb
enter
adc
enter
in
sbb
or
jnp
shll
js
mov
add
sbb
imul
ja
lcall
and
dec
in
xchg
mov
fcompl
enter
add
xor
xchg
mov
cld
mov
cmc
inc
les
xor
xor
inc
push
inc
mov
pusha
lret
sbb
ds
stc
sahf
push
dec
and
dec
xor
lds
push
xchg
insl
sbb
call
ds
popf
shll
push
lods
popa
add
loopne
pop
lds
loope
jno
pushf
cld
movsb
and
divl
ffreep
mov
jne
imul
cmc
decl
cmp
add
add
add
dec
test
jp
dec
aaa
xchg
adc
mov
inc
xchg
mov
dec
xchg
je
fsubs
mov
or
popa
mov
mov
inc
adc
outsb
dec
fdivrl
repnz
add
mov
orb
mov
adc
mov
stos
lcall
divl
aam
jmp
jns
ficomps
push
stos
rolb
jecxz
mov
mov
sbb
insb
stc
sbb
aas
scas
dec
loop
mov
inc
lcall
mov
inc
fistl
cmp
ss
jbe
or
mov
inc
out
pop
test
xchg
hlt
fwait
inc
mov
pop
addr16
adc
scas
hlt
ret
imul
pop
call
test
lds
sbb
sbb
or
mov
pop
mov
ja
dec
dec
xor
call
aaa
mov
mov
dec
push
add
ja
iret
arpl
or
add
mov
add
pop
add
add
pop
addr16
pop
ja
adc
push
or
ret
xor
mov
push
mov
ljmp
cmp
or
mov
fstps
cmp
push
mov
shrb
stos
sbb
cmpsb
pop
popa
xchg
sbb
pop
push
cmp
xor
sub
add
imul
xchg
adc
sub
popa
jg
je
or
push
pushf
lahf
add
jle
lock
fstpt
outsb
jns
bnd
jo
sub
cltd
or
sti
sbb
out
out
aad
push
mov
lods
mov
divl
sbb
adc
imul
xor
cmpsb
xchg
jl
mov
xor
dec
ror
sti
sbb
out
test
mov
loop
inc
int3
xor
pop
sbb
and
sbb
xchg
sbb
xchg
jle
arpl
adcl
add
out
into
shlb
js
dec
mov
add
add
inc
dec
mov
aad
stos
adc
pushf
xchg
in
pusha
dec
xchg
pop
lock
fwait
subl
cltd
sub
cmp
or
loopne
mov
mov
pop
mov
imul
mov
xchg
movsb
push
js
push
insb
hlt
sub
insl
add
sub
push
lds
adc
sbb
push
pop
lcall
and
out
fldt
test
out
ror
movsw
pop
test
add
ljmp
cmpsl
xchg
jle
xchg
pop
sbb
mov
movsb
dec
mov
mov
mov
out
add
push
mov
es
pop
jecxz
dec
add
stc
xchg
std
mov
aam
sub
mov
cmp
imul
and
jae
repnz
xchg
sbb
rcll
push
xchg
in
xor
mov
fdivrp
mov
xchg
add
jle
sbb
pushf
or
mov
push
push
jne
cwtl
ja
pusha
iret
fs
sub
pushf
les
stos
int
stc
add
xchg
and
je
out
mov
mov
ja
ret
iret
add
pop
add
add
adc
dec
popl
jbe
mov
fidivl
mov
testl
jno
jge
les
xor
jae
push
or
shrl
xor
dec
xchg
call
jbe
or
mov
add
add
fstl
jl
ficompl
out
pusha
aam
lret
clc
cmc
add
lea
loope
mov
inc
sub
movsb
inc
repz
xchg
mov
mov
xchg
icebp
dec
mov
xor
cmpsb
gs
mov
mov
pop
cli
inc
popw
xchg
enter
bnd
in
sub
ficompl
xor
dec
lock
imul
mov
xor
inc
or
fildl
ror
mov
lahf
das
js
push
test
ret
jno
adc
add
dec
daa
dec
das
outsb
imul
sub
into
inc
or
pop
add
add
loope
mov
mov
js
cltd
pop
push
cmp
or
or
cmc
sub
push
cmp
push
movsl
shrb
mov
out
lock
dec
push
daa
jb
pop
cmp
mov
adc
cmp
xchg
jp
mov
lea
sahf
movsb
scas
jno
outsl
jge
pop
sbb
pop
inc
je
mov
ss
mov
repz
stos
popa
test
mov
leave
cltd
cmp
or
sub
das
rcrl
xchg
int
ret
movsb
out
int
fstpt
mov
das
mov
xlat
adcb
into
and
loop
sbb
subb
stc
or
sahf
lcall
pop
xlat
call
cwtl
clc
movsl
jecxz
pop
cwtl
push
mov
mov
ja
stos
sbb
test
dec
lds
out
sbb
xchg
loope
inc
cmp
push
incb
test
jp
arpl
xchg
push
les
int
adc
add
push
lret
add
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
das
nop
iret
fistl
imul
fwait
jecxz
mov
and
pop
mov
or
xor
in
stos
sub
outsb
fsubrs
push
pop
sub
mov
xor
gs
outsl
pop
sbbb
jg
mov
cmc
pop
inc
adc
je
enter
push
cmp
mov
xor
jl
gs
dec
cmovnp
mov
inc
out
lods
fcomps
mov
inc
push
pop
pop
dec
aam
lods
aas
xor
test
pusha
mov
lea
insl
or
jmp
cld
push
jne
movsb
mov
ret
pop
jle
sub
repz
mov
sub
std
cmp
aam
orb
sub
cmpsb
fldt
lods
inc
push
sbb
mov
add
mov
sbb
repnz
int
pop
and
sub
xchg
or
fsubr
push
or
push
mov
dec
cmp
add
neg
outsl
xor
fnstcw
rolb
add
add
add
sub
dec
push
xchg
and
call
sub
outsl
nop
dec
ffree
cmp
push
mov
jmp
push
cmp
push
hlt
scas
mov
loop
repnz
gs
pop
popf
daa
dec
xlat
ja
stos
addb
scas
add
mov
push
lahf
sbb
pop
dec
mov
inc
icebp
call
push
sbb
inc
ret
cmpxchg
cmp
dec
iret
and
sbb
sbb
jecxz
loope
movsl
push
mov
mov
shlb
inc
mov
mov
jg
jmp
inc
adc
cmp
cmovno
xor
mov
xchg
lods
adc
sbb
inc
sub
push
cltd
jno
stc
popa
lahf
dec
mov
aas
dec
stos
or
cmp
repz
mov
iret
inc
push
jne
cmp
cmp
add
xor
add
sbb
in
and
adc
add
pop
add
add
rol
xor
mov
dec
mov
mov
sarl
dec
add
dec
shll
nop
test
jecxz
or
xchg
imul
mov
movsl
sti
adc
inc
jo
es
and
add
pop
adc
iret
out
ffree
cmp
xor
cmpb
inc
mov
fisubs
pop
xlat
pushf
add
iret
fwait
repz
xchg
cltd
mov
repnz
dec
adc
rcrl
xor
sbb
aas
iret
icebp
adc
add
adc
pop
sub
pop
and
movsb
mov
pop
dec
ds
icebp
stos
loopne
lahf
hlt
lret
sbb
cltd
lds
push
dec
ds
rcrl
jo
out
mov
gs
nop
lods
mov
bound
pusha
jo
jle
xor
or
or
in
push
cltd
out
lahf
data16
data16
add
xchg
add
and
addr16
call
stos
shlb
rorl
sub
mov
pushf
adc
ds
stc
jl
daa
loope
aam
add
add
add
clc
addr16
es
in
jge
inc
popf
mov
xor
mov
dec
mov
gs
push
push
xor
inc
ja
mov
push
and
lods
pop
push
sbb
icebp
in
lcall
icebp
sub
in
inc
push
adc
dec
subb
pop
sbb
xor
sbb
mov
shll
push
sarb
pop
and
sub
ret
lahf
imul
lea
cmc
adcb
dec
mov
loope
sub
cmp
rcrl
lock
xor
mov
pop
xchg
mov
push
and
lret
mov
pop
add
and
or
bound
rclb
push
inc
mov
adc
enter
jecxz
sub
sti
ret
jne
pop
xchg
loope
jle
xchg
push
jnp
mov
xchg
and
and
dec
mov
mov
jmp
jg
lods
rcrl
xchg
mov
jnp
int3
mov
ljmp
add
add
lcall
fldl
negl
pop
add
add
and
push
dec
pop
stc
sbb
imul
ficompl
push
sti
bound
xor
sbb
aaa
dec
out
cltd
scas
adc
aam
es
imul
dec
jg
js
add
sub
fsqrt
sbb
xor
incb
pusha
mov
jl
lds
push
lahf
jp
and
sbb
push
iret
sti
mov
xchg
iret
jns
ficompl
stos
scas
mov
lds
jle
cmp
mov
imul
pop
xor
sbb
push
xor
imul
aam
push
jge
mov
enter
lcall
clc
or
cmp
pusha
cmp
jne
cmp
in
pop
call
in
pop
add
outsl
dec
out
jge
and
xor
stos
cmp
leave
test
inc
int
mov
sub
inc
outsl
sbb
dec
test
inc
loopne
ljmp
cltd
lods
scas
pop
insl
add
xchg
ja
push
jg
xchg
mov
xlat
aaa
hlt
add
pop
add
add
mov
repz
gs
xchg
xor
ffree
pushf
cs
xor
lahf
loope
in
in
cmc
mov
pop
sbb
add
adc
push
mov
in
pop
sbb
mov
das
mov
add
movsb
std
cwtl
sarl
dec
add
jne
add
add
adcb
mov
and
cmpl
clc
lret
rolb
les
mov
into
clc
xchg
push
xchg
xchg
pop
mov
mov
adc
xchg
cltd
out
in
stc
and
mov
lcall
lret
push
jp
push
mov
mov
cld
or
loope
add
data16
or
es
inc
sbb
dec
jmp
outsb
jmp
mov
jae
call
aad
lods
mov
lahf
aas
inc
and
mov
test
dec
ljmp
or
add
add
lods
xor
add
imul
cld
push
xor
aaa
jnp
xlat
add
pop
add
add
xor
pop
mov
fwait
movsb
cld
aas
and
adcl
add
clc
push
movsb
out
jnp
ds
push
les
adc
mull
jecxz
push
psraw
mov
divb
repnz
mov
ss
ss
add
pop
pop
and
inc
stc
scas
enter
pop
push
mov
js
mov
mov
and
jnp
ljmp
jmp
lock
repnz
popa
ja
in
rclb
jns
ret
xchg
fwait
cmpsl
rolb
jmp
or
sub
aaa
cli
xchg
sbb
xor
adc
cmpsb
sub
popa
lcall
sub
insb
out
cs
fldt
pop
dec
push
mov
test
rcr
mov
nop
sub
out
push
jp
jb
dec
sbb
stc
xchg
xchg
and
cmp
fwait
sub
flds
adc
and
pop
lcall
inc
add
out
fldcw
push
adc
xchg
sbb
ret
xor
flds
add
add
add
cltd
sub
jo
sub
xchg
jg
push
push
jge
cmp
fsubs
cmp
mov
mov
push
pop
push
cli
iret
jmp
enter
bnd
in
and
fcmovnb
sbb
iret
xor
lret
data16
adc
fidivrs
or
xor
out
dec
mov
out
enter
xor
into
push
jb
mov
in
inc
repnz
xchg
mov
push
ret
add
xor
out
jmp
addr16
inc
test
jne
addb
stos
sahf
pop
dec
push
pop
mov
ljmp
es
xchg
mov
push
dec
add
out
adc
in
popl
mov
shll
sbb
std
mov
cmp
lcall
xor
lahf
inc
in
or
jl
sub
mov
add
sbb
sahf
cmc
fsubrp
jnp
push
xor
jecxz
add
add
add
arpl
pop
dec
ds
mov
pop
jg
repnz
lret
mov
imul
jne
mov
loopne
iret
adc
jno
add
xor
or
xor
xchg
aam
mov
mov
pop
or
inc
in
lahf
pop
das
and
mov
mov
sbbl
stc
ljmp
cmp
xor
lods
pop
add
push
in
pushl
xchg
fadds
shlb
imul
aad
cltd
out
leave
cmp
cmpsb
into
outsb
pop
xor
adc
aaa
push
jmp
pop
movsl
mov
cmc
adc
outsb
movsl
mov
pusha
fst
dec
loope
sub
jle
shl
jne
cmp
js
or
clc
popa
imul
adc
adc
int
cmpsl
sbb
stos
mov
mov
ds
insl
add
das
and
cmp
mov
dec
jmp
push
or
pop
add
jle
jg
std
fisttpl
inc
push
and
lret
jno
fildl
add
add
add
xchg
jae
gs
repz
jmp
popf
xchg
push
mov
sbb
negb
sub
in
fildl
popa
nop
nop
mov
pop
mov
jb
lret
push
cmpsb
and
sub
bound
cwtl
fcmovne
hlt
jne
adc
pop
cmp
fidivrl
mov
mov
inc
and
or
fwait
rcrb
inc
scas
jp
stos
and
pop
xchg
add
jecxz
out
dec
jo
xorb
xchg
imul
inc
shlb
js
or
push
hlt
pop
rol
shrl
mov
fucom
test
xchg
add
enter
mov
xlat
lds
mov
sub
in
xchg
add
or
mov
out
lods
fdivrl
mov
popa
inc
inc
stc
in
cmpsl
scas
lea
test
in
rclb
dec
repz
cmp
ljmp
jg
lds
add
add
int
cmp
cmp
repnz
dec
movzwl
inc
flds
orb
add
dec
mov
sub
scas
into
mov
data16
push
call
jne
daa
loope
sub
push
ss
dec
test
outsl
sbb
fcmovbe
dec
sbb
stc
mov
xor
mov
les
or
dec
push
aas
shlb
mov
mov
int
imul
mov
ja
in
iret
gs
dec
inc
mov
inc
jnp
lea
jecxz
add
movsb
add
iret
adc
rcr
lea
push
addr16
mov
inc
outsb
cmp
cmp
sub
sbb
sub
scas
cld
mov
push
xor
jl
clc
jp
ret
push
xchg
loope
mov
cmp
mov
sub
repz
dec
or
popf
push
loopne
pop
mov
fcmovb
xor
mov
daa
mov
push
adc
adc
leave
jmp
addr16
mov
fldl
add
add
add
jnp
rorb
push
adc
int
divl
xchg
stc
pop
shrb
adc
push
xor
stos
and
sti
and
aad
cmp
aad
cmp
je
rorb
cli
sbb
cld
dec
mov
aaa
shrl
cmp
popa
pop
push
push
fstps
sub
fcomi
movl
aas
outsb
stc
stos
cmp
lock
push
fsts
out
jp
sub
mov
xor
sbb
adc
lcall
mov
cwtl
sub
dec
scas
sub
cvtps2pi
mov
pop
cltd
jo
call
iret
jo
sub
mov
inc
sub
aam
inc
testl
dec
mov
or
mov
ret
daa
adc
jne
dec
fs
cmp
xchg
pop
lds
add
in
sbb
and
mov
push
add
sub
test
movsb
add
push
out
jb
shrl
and
add
add
cwtl
mov
test
flds
lcall
jg
or
in
sub
sub
je
mov
rcll
hlt
mov
fldln2
test
mov
mov
pop
stc
mull
xor
sub
subb
pop
jbe
mov
je
ret
sbb
adc
lcall
out
sbb
outsl
outsl
int3
test
shr
fmull
jmp
insl
jnp
mov
jnp
aam
movl
cmp
mov
jae
stc
or
pop
loopne
mov
sbb
mov
adc
cmc
in
repz
sarb
mov
push
pop
inc
xor
pop
int3
add
pop
xor
adc
dec
or
push
jbe
stos
mov
xchg
fsts
arpl
mov
jb
cmc
pop
out
loopne
add
xor
mov
jg
mov
lcall
iret
mov
stc
sub
jo
sub
add
pop
add
add
jno
push
or
mov
test
cwtl
imul
mov
sub
sub
and
jmp
push
mov
ret
mov
xchg
int3
fwait
data16
daa
lret
sbb
aad
push
xchg
pop
push
sbb
xor
mov
je
loop
mov
xor
fs
push
jle
pusha
and
push
inc
in
lds
or
call
fsubrs
dec
jno
lods
outsb
or
data16
mov
dec
sti
or
mov
lods
sub
sbb
lods
xchg
jp
inc
ficoms
mov
jmp
cli
push
loopne
popf
mov
jb
mov
fbld
inc
sti
add
pop
shrb
cs
repz
or
and
add
call
outsl
bound
and
sbb
out
and
fsubrs
stc
lods
pop
pop
mov
adc
cwtl
out
decb
and
mov
cld
test
add
add
mov
jns
in
or
loopne
add
add
add
nop
in
les
dec
outsb
jmp
aam
xchg
add
ror
xor
push
dec
and
push
pop
int3
push
push
roll
repnz
and
leave
bound
loope
movsb
inc
out
iret
or
mov
je
xchg
loope
iret
and
popl
repnz
pop
jns
mulb
mov
and
jo
js
xchg
lea
out
adc
addr16
dec
mov
mov
fisubl
or
inc
jg
sti
daa
pop
sbbb
mov
popf
lahf
push
push
mov
sarl
jl
sub
sbb
inc
mov
mov
sbb
scas
dec
test
inc
shlb
cld
hlt
fsts
adc
aaa
jmp
leave
mov
push
pop
xor
mov
jmp
aad
mov
inc
or
nop
or
sbb
stos
jnp
jbe
fsub
stos
lods
sbb
push
sub
inc
adc
add
fadd
fsubp
jnp
mov
xchg
or
loope
add
add
add
sub
les
mov
xlat
push
cmp
in
pop
sbb
push
stos
sub
outsb
add
xlat
jns
add
outsb
add
jno
adc
sbb
sub
mov
cmpsl
add
add
cli
xor
jb
mov
push
out
add
push
jnp
cwtl
jl
cld
sbb
add
dec
repnz
sub
mov
fstl
lret
out
stos
xor
call
js
and
push
cmpsl
scas
pop
inc
test
push
adc
xchg
nop
adc
mov
dec
mov
add
xor
xlat
loopne
mov
data16
ds
cmp
fcoml
std
pop
inc
jge
jo
jb
jns
and
xlat
dec
lods
sbb
stos
fldenv
test
pop
jo
cs
jne
je,pn
lret
and
sub
lret
xchg
add
sub
cld
cli
jle
fmuls
mov
loop
add
add
add
and
jp
in
mov
sbb
cmpl
das
sbb
pop
ds
sbb
inc
and
fists
mov
flds
sbb
dec
mov
test
or
lcall
adc
hlt
adc
lret
andl
push
pop
xchg
inc
adc
ret
je
into
xchg
imul
in
mov
das
loopne
push
lcall
dec
fwait
pushf
inc
push
push
lret
fs
mov
or
pop
or
daa
test
mulb
sub
cmp
lret
out
push
pavgw
out
xchg
adc
mov
stos
xor
jns
add
add
xor
js
mov
pushf
dec
push
arpl
test
movsl
sub
and
daa
pop
fbld
and
pop
and
aas
pusha
ret
push
pusha
pop
rclb
dec
cld
xchg
push
out
icebp
sub
pushf
cmp
add
add
ja
sti
ret
or
pop
cld
repz
add
dec
mov
outsl
shl
aaa
mov
sarl
cmpb
scas
mov
outsb
cmp
adc
push
popa
gs
cmpsb
jb
dec
mov
jmp
out
sub
pop
sub
push
and
je
inc
dec
mov
ret
inc
cmpsb
insb
mov
ja
popf
cmp
pop
notb
int
mov
cmp
enter
ficompl
cs
jl
sbb
stc
std
cmp
pop
js
mov
adc
jnp
out
outsl
pop
inc
jp
add
xchg
fstl
ss
or
enter
dec
ss
pop
das
xchg
push
mov
jo
add
mov
repz
aam
mov
pop
test
dec
nop
xchg
xor
test
shlb
mov
cld
cld
or
xchg
cmpsb
sub
loope
daa
pop
out
in
mov
cld
push
in
daa
ja
mov
lock
push
xchg
mov
inc
mov
pusha
and
data16
scas
cmc
test
ror
cltd
outsl
mov
int3
pop
test
xor
add
pop
add
add
sub
popf
movsb
adc
gs
sbb
and
rolb
insb
in
jg
jge
inc
dec
push
sub
mov
mov
nop
push
sub
or
inc
or
push
mov
push
cmp
fimuls
fldt
mov
mov
jp
ljmp
push
ret
sub
sub
mov
mov
sub
cli
in
dec
popa
neg
out
sbb
mul
pop
ljmp
enter
mov
push
icebp
xor
add
jg
pushf
and
cmp
out
xor
pusha
shlb
mov
adc
imul
int
mov
mov
ds
xchg
jbe
sbb
lret
aam
cwtl
mov
xor
imul
cli
inc
push
mov
daa
and
cmpsb
dec
rclb
pushf
sbb
movsb
xchg
fsubr
fsubl
cltd
cmc
adcb
fcos
add
nop
repz
fs
push
in
add
add
add
clc
arpl
lods
add
push
notl
jbe
dec
das
pop
mov
paddusw
popa
push
push
inc
adc
jge
jle
sub
or
and
mov
icebp
jp
ds
jg
loopne
lahf
or
ret
shll
jno
cwtl
dec
imul
pop
int3
or
popf
imul
arpl
mov
sbb
inc
lods
scas
stc
inc
dec
insb
inc
lods
aad
inc
sahf
push
in
add
pushf
cmpsb
dec
shrl
mov
test
pop
ss
cmc
add
lea
xor
aaa
les
sbb
test
add
mov
jb
int
mov
sub
pop
orb
out
jecxz
sbb
ret
or
loopne
push
in
or
dec
int3
sbb
or
pop
loopne
clc
inc
mov
and
je
repz
lock
jg
mov
or
pop
out
add
add
add
mov
add
vmwrite
push
icebp
mov
xchg
push
and
repz
jne
jnp
popw
in
dec
cmp
mov
cmpsb
in
into
push
test
pop
sub
or
movsb
out
cmc
repnz
roll
mov
popa
lods
xchg
sahf
mov
pop
ja
and
inc
popa
sarl
xchg
add
or
popf
out
push
std
rclb
rolb
sti
mov
xchg
mov
or
push
sub
adc
stos
jnp
mov
xchg
nop
popa
xlat
push
jb
mov
push
dec
cli
inc
pop
mov
inc
pop
xchg
push
xor
mov
jo
lods
push
jmp
xor
or
inc
pop
cwtl
or
dec
mov
bound
and
cmp
cmc
daa
inc
in
popa
sbb
bound
ss
ret
shrl
addb
xchg
add
pop
xlat
fldt
push
mov
pop
add
add
inc
lcall
or
fwait
pushl
xlat
xchg
mov
bound
into
orb
fldenv
pop
jecxz
and
imul
mov
cmp
sbb
push
jp
jle
mov
xchg
into
scas
push
jmp
and
ret
push
sbb
int3
shl
sub
inc
les
xor
push
push
cmc
imul
stc
xlat
js
pushf
mov
movsl
iret
pop
push
fistps
inc
cs
mov
fbld
pop
mov
stc
push
push
mov
mov
pop
ljmp
imul
movsb
mov
ret
iret
sbb
adc
xchg
mov
push
clc
cmp
lock
inc
sub
add
loope
mov
movb
and
mov
add
test
lcall
add
mov
dec
js
stc
mov
mov
mov
add
pop
add
add
pushf
sub
insl
mov
ficomps
clc
dec
fsubrp
addr16
mov
insb
cltd
test
movsl
inc
push
mov
imul
ja
hlt
aas
fwait
mov
xor
out
lret
jbe
sbb
or
adc
inc
jp
ja
or
adc
sub
in
or
mov
scas
and
pop
xchg
mov
xor
mov
pop
push
call
jbe
dec
mov
in
dec
inc
icebp
jmp
outsl
pop
cmp
adc
fists
mov
push
icebp
in
movsl
fwait
jnp
push
lock
jb
pop
arpl
cmpsb
add
add
cmp
dec
hlt
mov
repz
add
rorl
pop
outsl
push
movsl
push
inc
addr16
bound
out
sbb
fiaddl
sub
cmpsl
pop
ret
cs
cld
mov
add
jae
add
jmp
add
insl
repz
jae
jg
pop
loop
jb
add
pop
add
add
ret
jnp
push
pusha
xchg
or
xor
jae
jp
cmp
fwait
pop
dec
nop
aad
shll
out
imul
xchg
cmc
sbb
sbb
cwtl
or
push
adc
test
push
cli
nop
lods
pop
iret
push
repnz
lret
xchg
je
fldenv
jo
or
fwait
push
fnstenv
leave
push
xchg
mov
adc
inc
pop
sub
in
pop
dec
sub
sbb
jae
gs
sbb
add
xchg
cmpl
lds
hlt
out
dec
int3
mov
adc
pusha
mov
mov
mov
mov
mov
dec
dec
push
popf
pop
aad
pop
pop
mov
and
add
jp
scas
push
fildl
push
jae
fisubl
out
xchg
jp
xor
push
mull
pop
hlt
insb
or
lahf
dec
jp
xchg
ret
sbb
sub
sub
push
push
xchg
filds
nop
xor
stc
xor
add
cmp
jnp
es
and
add
pop
add
add
leave
or
add
jbe
test
in
aaa
daa
and
add
or
push
nop
mov
test
pop
lcall
cmp
stos
add
cltd
pop
test
push
addb
mov
mov
push
cmp
int3
pop
arpl
fldt
mov
xchg
adc
mov
mov
dec
cli
inc
or
jge
test
mov
loop
cmp
pop
enter
mov
dec
cld
rclb
jmp
mov
xor
mov
popf
inc
jle
daa
jnp
or
xor
mov
stos
les
loope
iret
push
sbb
and
cltd
adc
fisubs
add
mov
shlb
jns
add
aaa
out
cli
xchg
mov
sub
nop
cmp
cmp
popf
in
icebp
les
mov
insl
cmp
add
subb
jns
mov
data16
add
add
add
inc
pop
call
push
mov
mov
inc
adc
push
dec
call
jbe
jp
xlat
xchg
mov
jecxz
sub
stos
in
clc
xor
enter
je
jp
mov
pop
enter
and
pop
andl
sbb
lods
repz
mov
dec
ficomps
dec
sub
aas
sub
push
jae
xchg
in
cmp
rcll
filds
push
dec
push
dec
int
mov
pop
das
or
adc
xchg
push
adc
inc
pop
xlat
stc
sub
ss
or
outsl
adc
jnp
add
cli
sub
push
push
xor
aas
or
stos
or
rol
int
inc
fucomip
mov
mov
pop
addb
dec
xchg
jl
enter
push
jmp
lahf
aad
jmp
xor
mov
dec
lea
jecxz
xor
shll
dec
inc
mov
add
jb
scas
incb
out
dec
out
pop
mov
add
add
add
inc
cmp
push
pop
lcall
inc
arpl
add
shll
push
bnd
and
xchg
cld
pop
lods
push
mov
inc
loop
add
sub
jns
inc
imul
mov
or
aam
ljmp
shlb
mov
sub
dec
loope
mov
imul
cwtl
and
pop
lods
leave
push
jle
mov
in
xor
test
sahf
xor
ss
pop
xor
add
pop
in
and
xchg
fdiv
fwait
shl
and
sti
loop
mov
movsb
fdivrl
enter
dec
dec
adc
divb
scas
out
cs
mov
stos
and
pop
lcall
ret
mov
add
pop
shlb
mulb
xchg
into
mov
mov
xor
sbb
ss
inc
mov
mov
mov
daa
jl,pn
xor
mov
xlat
mov
loopne
sti
push
mov
add
pop
add
add
cli
pop
ret
es
ret
sbb
adc
jp
int3
cmc
push
out
roll
cmp
or
mov
in
push
add
icebp
lahf
repz
movl
ret
out
add
popa
scas
add
pop
xchg
inc
imul
ja
dec
std
leave
xor
outsl
test
pop
notl
fisubrs
ret
jae
jbe
xchg
inc
aam
pop
dec
sar
mov
xor
jp
pop
bound
add
lahf
xchg
mov
jb
sub
xor
mov
lock
inc
insl
sub
push
movsb
ficompl
in
out
int
jl
jp
cwtl
jae
and
sbb
xchg
lods
sbb
iret
inc
inc
fwait
cmp
gs
push
cmpsb
mov
addr16
int
repz
sub
popf
popa
in
ss
cld
sub
xor
fadds
dec
push
push
hlt
aam
les
mov
into
fxam
outsb
fsubr
fucomp
ficomps
jo
push
add
mov
aas
mov
mov
push
xchg
out
add
pop
add
add
test
ret
fs
cli
mov
lds
sub
mov
cmp
cld
ljmp
cmp
inc
lret
jb
addr16
sub
aad
xlat
jg
push
lods
mov
es
iret
fistl
xchg
jns
xchg
int
inc
add
lds
ret
out
pop
into
and
cmpsb
xchg
adc
push
inc
jge
mov
add
imul
xlat
sub
cmp
xchg
inc
inc
xchg
jg
add
mov
scas
mov
cmpsb
mov
push
leave
add
clc
jbe
or
mov
leave
in
adc
stc
add
add
mov
push
xlat
cmp
divb
aas
fwait
sbb
cmp
mov
lods
dec
aaa
and
ror
adc
lods
mov
pop
cmp
cmp
inc
test
or
and
pusha
add
mov
sti
mov
pop
movsb
jne
pushf
out
add
pop
add
add
mov
lock
nop
mov
jge
int3
cmpsb
je
lcall
cmpsl
jnp
lret
cld
mov
dec
repz
into
sbb
ss
xor
add
iret
push
cmp
cmp
fisubrs
and
dec
push
mov
fcoml
rcrb
pop
imull
xchg
adcb
and
scas
xor
mov
push
gs
jp
mov
push
mov
jns
lds
pushf
aam
cmc
hlt
push
adc
ror
adc
ret
out
sub
mov
add
daa
int3
popl
xlat
add
imul
leave
pop
mov
je
cmp
pop
outsb
jg
mov
jbe
ja
mov
xchg
iret
xchg
sbb
inc
xchg
clc
outsb
or
push
lret
dec
jge
sbb
lods
clc
dec
fistps
outsl
cmpsb
shl
in
fiadds
push
inc
dec
xor
push
cmp
adc
neg
jge
mov
stc
cld
cmpsl
test
add
pop
add
add
push
pushf
mov
xor
andb
jbe
or
adc
lcall
hlt
dec
pop
jge
sahf
mov
inc
xchg
in
shlb
cmp
cs
sbb
nop
dec
mov
sub
mov
pop
and
fistps
js
sbb
out
cmp
sub
mov
mov
outsb
int
popf
mov
mov
les
xor
test
adc
loope
jo
mov
in
fdivp
xor
xchg
cld
lret
adc
rcll
sbbl
xor
mov
lahf
lds
lahf
leave
dec
xor
xor
mov
clc
adcb
in
mov
push
mov
mov
ret
je
mov
sub
stos
sbb
imul
movsl
adc
sbb
mov
hlt
les
mov
jg
ja
mov
xor
in
or
sbb
add
pop
cmp
outsl
jg
jg
xor
xchg
mov
out
stos
icebp
add
pop
add
add
xor
or
scas
aad
lahf
loop
jmp
jb
scas
mov
fstpl
xchg
add
mov
add
dec
lea
jb
cli
jne
mov
mov
mov
addr16
add
add
shlb
clc
and
push
call
in
lds
fiadds
dec
jne
adc
mov
rclb
cltd
xor
jg
movsl
shlb
test
loopne
aas
sahf
mov
iret
sub
dec
sti
adcl
mov
dec
dec
sbb
stc
shl
push
mov
aas
cmpsl
outsb
lahf
clc
jge
adc
mov
mov
test
out
add
into
ss
push
inc
loope
ret
sbb
out
sti
xchg
push
hlt
test
xor
jge
adc
push
aaa
inc
je
xchg
fldl
xchg
std
lret
scas
lcall
fimuls
xchg
fsubrl
divl
sbb
add
ret
ja
and
aaa
divl
sahf
outsl
stc
mov
add
pop
add
add
add
bound
or
push
cmp
ficoml
loop
and
add
xor
add
add
inc
aam
fistpll
int
xor
jno
cli
gs
mov
nop
inc
repnz
jle
mov
arpl
int
sub
outsl
mov
dec
cmp
shll
sbb
mov
and
xor
cmp
shlb
outsl
lcall
xor
lahf
sub
movsl
or
stos
loopne
shl
jb
pop
rcll
fstpt
into
out
mov
xor
lahf
jmp
sbbl
mov
sbb
int3
bound
inc
test
pop
pop
or
das
mov
jecxz
outsb
scas
mov
mov
addl
lret
and
or
dec
fwait
sbb
imul
dec
adc
inc
inc
and
inc
add
mov
cmc
mov
out
mov
add
pop
add
add
shlb
incb
and
or
mov
stos
jp
pop
es
test
add
fucomp
jg
fisttpll
pop
out
sbb
rorl
loopne
ficoms
ror
lea
ror
enter
pushf
push
push
popa
into
in
lcall
add
sti
mov
rcr
push
rcr
cmp
cmp
mov
sahf
or
outsl
jp
ds
push
push
addr16
lods
orl
das
gs
push
addr16
push
xchg
cmp
lods
in
lcall
and
outsl
repnz
dec
inc
xor
jnp
cltd
sub
sbbl
fwait
jns
enter
in
fildll
mov
les
xchg
inc
add
jno
cmc
lret
out
push
fcomps
sbb
or
push
push
enter
or
add
jle
jne
add
insb
popa
mov
add
add
mov
ss
addb
outsl
add
icebp
push
outsb
sbb
inc
into
pop
mov
xor
das
sbb
sub
mov
ds
into
sti
lcall
addr16
insl
les
mov
cwtl
xchg
mov
frstor
xchg
xchg
xchg
test
inc
xchg
sub
out
push
mov
dec
je
cli
aaa
shlb
or
sub
icebp
ds
insl
push
movsb
int
and
sbb
scas
adc
cmp
ds
outsb
testl
sbb
xor
daa
pop
enter
pop
inc
sbb
aad
mov
jge
sub
cwtl
out
mov
push
stos
aam
and
pop
mov
mov
lret
lds
and
shl
es
enter
in
mov
fdivs
in
ret
xor
inc
cmp
add
inc
push
jbe
mov
and
pop
add
imulb
idivb
jle
je
cmc
add
pop
add
add
push
push
adc
push
sbb
std
xchg
ja
cld
in
inc
or
or
lods
stos
adc
mov
mov
sbb
outsb
popa
mov
jbe
sarl
in
push
or
push
dec
stos
nop
dec
pop
cltd
jge
dec
inc
and
fldenv
sahf
mov
and
jbe
xor
xor
das
enter
fidivl
xor
mov
mov
les
clc
add
xor
in
xchg
js
popa
mov
inc
dec
test
loope
push
cmp
negl
add
jo
inc
jno
ds
jmp
out
insb
inc
cmpl
mov
mov
or
push
test
fbld
dec
cmp
pop
aad
push
fmull
into
adc
push
insl
ss
inc
js
mov
or
out
xchg
shrl
loope
and
add
cmpsl
addr16
add
add
xor
sub
faddl
testb
pop
add
add
ja
imul
pop
fcoml
push
leave
outsl
mov
jnp
stos
lds
xchg
cmpsl
inc
inc
je
mov
jae
add
push
jle
mov
cmp
inc
and
sub
aam
shl
pop
mov
mov
mov
mov
jnp
mov
xchg
das
and
jecxz
jl
adc
sub
jmp
cmp
or
sbbl
push
cmp
and
inc
lods
int3
rcr
ret
addl
lods
cmp
ds
in
inc
fidivrl
mov
ret
repz
aaa
add
push
rol
aaa
jae
stc
mov
jo
filds
cmpsl
les
cs
dec
jge
aaa
ss
icebp
dec
adc
and
fwait
sub
inc
shlb
movl
add
cli
and
mov
rcrl
lret
mov
test
data16
add
ds
in
idivl
call
sbb
jo
aam
add
pop
add
add
push
pop
mul
xchg
fidivrl
push
add
mov
pop
out
xor
pop
sub
or
push
in
adc
incl
movsl
sbb
das
iret
fmul
testb
jmp
repnz
mov
pop
in
ss
call
xchg
jns
xor
and
xor
hlt
orb
jge
pusha
cmp
xor
movsb
fisubrl
dec
inc
xchg
dec
lcall
push
sahf
dec
lods
test
sub
pop
fsubl
fmuls
xlat
mov
cmpsl
jecxz
sub
inc
push
push
cli
mov
fisttps
test
push
mov
or
lret
lret
pop
mov
mov
arpl
fldt
sti
int
pusha
movsl
xorl
sti
mov
xor
notl
pop
fldl
jmp
ret
movl
into
imul
rcrl
jno
adc
rcrb
jae
push
popf
dec
data16
ret
addb
cmp
pop
es
inc
cli
aas
clc
fdiv
jne
mov
add
pop
add
add
out
mov
int3
fdivrl
cmp
cmp
mov
push
cld
cmpsl
sub
or
jns
pop
push
ret
iret
jae
dec
ljmp
pushf
cmp
pop
xor
jb
in
arpl
xchg
sub
jb
outsl
data16
or
and
dec
in
outsl
mov
repnz
das
inc
lds
aas
cli
int
mov
lahf
jl
iret
mov
add
sbb
nop
enter
sub
and
mov
add
jbe
xor
std
jno
pop
mov
mov
mov
sub
lods
push
inc
std
add
loopne
aad
and
mov
adc
adc
and
pop
and
data16
aaa
mov
and
adc
xor
jnp
or
jns
leave
mov
xor
mov
into
call
xchg
test
imul
pop
rorl
cmp
test
add
lcall
cmp
stc
add
pop
add
add
fstl
jg
imul
or
inc
das
out
sbb
dec
cmpsl
in
fisttpll
and
pop
xlat
jne
into
sub
inc
bound
cmp
sbb
mov
adc
pop
ret
pop
xor
jge
add
pop
push
pushf
cmp
pop
cmp
xor
sbb
and
stc
fnstcw
insl
lods
jae
mov
insl
push
sub
inc
in
pusha
dec
insb
lods
cld
repnz
push
adc
mov
out
jmp
insl
pop
pop
test
adc
sub
scas
hlt
popa
mov
inc
sub
daa
dec
and
cmp
pop
add
movsb
fdivrl
inc
add
bound
aas
pop
dec
repnz
pop
xor
repz
lret
data16
dec
xor
xor
hlt
jge
or
sub
pop
ss
ficompl
dec
cmp
lcall
inc
pushf
arpl
dec
push
pop
adc
mov
xchg
mov
mov
out
sbb
add
aaa
jae
cltd
dec
mov
jge
les
hlt
jmp
add
add
js,pn
mov
jmp
ds
sbb
popf
adc
in
mov
es
ljmp
adc
sub
or
mov
loop
or
or
aam
cltd
imul
sti
stos
into
push
push
xor
jge
sub
xchg
or
hlt
mov
pop
stc
fldt
mov
mov
jmp
dec
cltd
fsubr
push
fucomip
scas
cmpsl
lret
mov
adc
pop
jae
addr16
push
mov
cltd
imul
movsb
and
sbb
repnz
neg
test
sub
imul
lahf
mov
inc
or
cmc
stc
lcall
xchg
jo
cs
stos
int3
lahf
lock
movsl
push
stc
ret
add
xor
sbb
leave
inc
jne
call
in
mov
add
mov
mov
cmp
out
add
and
scas
dec
mov
add
push
into
nop
out
cwtl
jle
pop
or
pop
mov
lock
add
pop
add
add
dec
hlt
fbstp
outsb
inc
add
in
call
aaa
jae
mov
cmp
sub
xlat
push
les
daa
push
scas
adcb
in
push
rcr
push
jne
add
ret
inc
sbb
shrb
jbe
jecxz
xor
not
sbb
cwtl
rclb
stos
mov
inc
test
dec
and
dec
jne
dec
mov
roll
popf
cs
imul
lret
popa
cmpsl
xchg
mov
cmp
sub
mov
daa
inc
jg
out
testl
movsl
xor
scas
nop
pop
cmc
pop
negl
pop
call
stos
movsl
sub
sbb
insl
xchg
cmpsl
inc
aad
mov
mov
fidivs
lods
push
inc
out
and
lods
pop
loopne
cmp
fwait
testb
leave
fndisi(8087
in
cld
pop
push
xor
add
sub
movsl
add
test
jg
in
jmp
les
maskmovq
add
pop
add
add
or
lds
adc
stos
gs
test
adc
sub
jb
mov
inc
inc
push
sub
insl
outsb
pop
mov
iret
dec
inc
and
cld
adc
lea
xchg
jle
and
js
xor
lret
les
cmp
jle
imul
push
fistpll
leave
push
fstpl
jns
ret
movb
dec
loop
out
dec
push
inc
inc
mov
mov
jmp
mov
ja
push
dec
jmp
xchg
cmp
fdivrs
mov
xchg
mov
pop
fwait
clc
sub
inc
mov
cmp
imul
mov
or
lods
or
lahf
iret
subl
div
jecxz
les
insl
xor
ds
fistpll
pushf
jbe
lret
xchg
cmp
cmp
ds
adc
aaa
and
call
pop
cs
add
add
movsb
push
in
cmc
jne
rorl
cmp
add
add
loope
stos
dec
es
ds
mov
sub
pop
xchg
jg
repz
pop
push
lahf
sbb
xchg
dec
mov
sub
add
jp
pop
jb
cmp
pop
into
dec
pop
pushf
lea
nop
xchg
xchg
xor
adc
in
test
cmc
pop
xor
sbb
sbb
mov
into
bound
cmpb
daa
cli
sub
addr16
pushf
mov
std
jnp
lret
shll
testb
mov
iret
add
mov
adc
add
stos
lea
jne
jmp
cmp
cmc
cmp
pop
shlb
xor
jl
sbb
ja
fiaddl
sbb
xor
rclb
adcb
filds
ja
mov
fwait
loope
sub
push
jnp
and
int
cmp
push
xchg
dec
adc
inc
aaa
cli
cmp
add
add
out
shlb
aas
out
sbb
sub
mov
add
add
add
xor
adc
js
sub
mov
xorb
add
sti
or
pop
xor
mov
testl
repz
nop
dec
xchg
sub
sub
mov
clc
fistpl
dec
mov
imulb
outsb
mov
mov
jnp
stos
cld
loopne
mov
out
icebp
lret
or
test
ret
pushf
repz
and
add
stos
dec
ss
or
add
cli
mov
negb
sbb
pop
sahf
insl
add
in
jp
xlat
sbbl
outsl
cmp
lock
xlat
int3
mov
ds
mov
popf
mov
out
lock
pushf
sbb
mov
enter
fnstenv
insb
mov
js
pop
mov
aam
inc
aas
jg
jle
out
hlt
sbb
dec
mov
jno
adc
mov
scas
adc
add
mov
lcall
rcr
add
add
add
add
int3
sbb
fstp
lock
xor
lds
ficomps
mov
lcall
xor
loopne
std
idivl
and
mov
xorb
sahf
push
dec
pop
aad
cmpb
lea
dec
dec
scas
loop
and
test
lods
cmp
int
inc
daa
loopne
ljmp
loope
das
pop
add
ret
sahf
adc
movsb
imulb
call
and
jl
gs
sbbl
int3
or
push
stc
fistl
xor
cmp
aas
fmul
mov
pop
mov
or
inc
jbe
stc
mov
jl
cmpsb
outsl
in
stos
mov
inc
rcll
fwait
pop
or
sub
test
jge
and
out
dec
mov
cmp
pusha
fbld
add
ret
bnd
int3
jae
adc
scas
pop
adc
add
pop
add
add
bound
or
mov
js
fdivrs
jle
outsb
loop
arpl
pop
lds
dec
push
fs
into
cmp
fnstcw
in
mov
outsl
loopne
pushf
leave
int
je
sbb
push
pusha
clc
add
aam
push
jnp
mov
and
stos
mov
pop
stos
xlat
pushf
xor
inc
frstor
ss
lods
pusha
loop
push
das
inc
mov
daa
test
and
sahf
mov
int3
shlb
xchg
repnz
aad
cmpsl
xor
loopne
scas
imul
jns
popa
les
roll
fisttpll
test
mov
push
divb
push
ja
mov
add
push
add
and
dec
aam
jns
xchg
adc
mov
flds
sub
je
sbb
clc
mov
pop
cmp
cmp
ret
xchg
scas
mov
mov
or
add
std
aaa
mov
mov
mov
add
add
add
add
push
add
popf
popf
in
jbe
push
pop
push
sbb
jle
pop
and
jno
aad
inc
jbe
and
sti
cmp
dec
into
dec
mov
sbb
xchg
cmpsb
lret
push
mov
xor
jp
push
jle
test
outsb
clc
sub
inc
pusha
scas
movsl
xchg
dec
push
and
dec
push
mov
mov
sub
aas
or
arpl
addr16
aaa
mov
add
xor
rclb
mov
adc
mov
lret
call
and
add
xor
test
jg
sub
ja
hlt
outsl
add
xor
leave
sarl
shl
aaa
sbb
ret
cmp
push
or
leave
push
outsl
jnp
xchg
les
int3
add
sub
cmc
adc
jg
sub
jne
adc
lods
stos
sbb
sbb
aam
insb
push
mov
push
dec
js
scas
jno
add
insl
aam
mov
mov
dec
sbb
add
daa
add
add
insb
ss
bound
movsb
and
cmp
sub
sbb
push
jg
repz
fstl
icebp
mov
mov
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
ss
add
ss
add
ss
add
ss
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
cmp
mov
xchg
pop
dec
mov
add
add
pop
jno
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
