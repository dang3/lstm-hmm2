push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
jl
jl
jle
jl
xlat
cmp
ffree
pop
push
add
cmpps
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
mov
xchg
outsl
adc
sub
xchg
mov
mov
cltd
shll
jbe
das
inc
js
or
fwait
xchg
or
insl
daa
and
and
xchg
jo
sbb
xchg
loope
repnz
xor
mov
sbb
and
inc
or
pop
and
jge
lret
dec
cmp
dec
ds
pushf
ret
dec
inc
push
mov
shrb
or
xchg
adc
inc
out
test
out
jmp
addps
test
inc
mov
or
jb
push
sbb
jne
aad
movsb
fs
insb
mov
fnclex
adc
and
mul
pop
sub
je
jae
daa
jecxz
jl
test
pop
cmpsl
rol
cltd
xchg
inc
mov
insb
mov
repnz
ret
lret
jg
rorb
cmp
call
mov
jae
and
mov
pop
sbb
out
ds
adc
pusha
test
pop
pop
lods
ret
add
xchg
loopne
adc
xchg
dec
mov
mov
aas
dec
scas
xchg
outsl
mov
sub
data16
nop
jmp
out
int
mov
cmovno
and
fsubrl
loopne
inc
lock
cmp
and
jmp
xchg
cmpsb
cltd
and
lahf
gs
pop
pusha
dec
in
or
and
arpl
dec
push
jle
pop
lea
test
cmp
test
icebp
dec
clc
jne
je
sub
cmc
rclb
push
dec
test
pop
mov
sbb
dec
inc
sbb
andb
jge
mov
pop
fdivl
jae
jmp
in
insb
in
loope
push
xchg
pop
fcomps
sti
arpl
push
adc
pop
lcall
adc
sahf
pop
push
cmc
xchg
mov
and
orl
int3
mov
cmp
test
outsl
iret
mov
sub
xor
enter
pushf
or
lret
and
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
idivb
fwait
repz
jl
jle
jl
dec
lods
mov
pop
sbb
mov
sbb
inc
mov
pop
daa
fcoms
std
lods
icebp
es
lods
push
add
push
add
xchg
adcl
fwait
xor
sahf
nop
mov
mov
das
xor
ljmp
lock
cmc
or
cltd
inc
push
and
aaa
repz
or
in
add
shll
dec
scas
pusha
pop
xchg
leavew
push
xchg
notb
dec
fistpll
sbb
jb
inc
mov
push
adc
mov
mov
andl
push
ljmp
jno
cmp
outsl
loopne
push
sbb
fstps
cmp
mov
jo
fisubs
and
ja
xchg
xor
mov
cmp
cmpsl
sub
add
into
mov
sbb
lahf
aad
mov
jno
dec
pop
fnstenv
orb
testb
ret
mov
cwtl
push
shlb
setns
cs
and
xlat
mov
sbb
xor
mov
addr16
add
sarb
inc
xchg
push
xchg
clc
pop
cmp
in
sbb
cltd
out
cmp
or
adc
push
lret
push
scas
adc
xchg
fstpt
incb
out
mov
mov
hlt
bound
repz
pop
orl
mov
loope
jne
xchg
adc
add
xchg
outsl
xor
dec
xchg
dec
push
pop
fisttpl
xchg
arpl
pop
jl
push
xchg
mov
popf
jns
lock
fdivp
sub
xchg
push
iret
scas
stos
or
outsl
mov
push
push
sub
lret
inc
das
xchg
cmp
testb
shrl
insl
iret
icebp
pop
daa
lret
lds
fcomi
stos
mov
jne
lock
xlat
and
jl
xchg
shlb
mov
push
mov
jnp
or
ss
in
and
jnp
xchg
xchg
mov
xor
push
sub
das
mov
fsubrl
and
daa
test
sub
xor
xchg
insl
nop
addb
enter
into
inc
std
test
xor
jecxz
dec
enter
mov
add
sub
aam
mov
push
dec
lret
dec
mov
imul
cmp
fs
icebp
jns
pop
push
test
push
repnz
pop
ret
add
int3
push
xchg
jp
xchg
stc
lret
push
push
mov
sarl
cs
scas
push
test
or
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
dec
mov
jl
addr16
jl
pusha
hlt
add
icebp
ss
add
lcall
sbb
lods
mov
insl
pop
inc
mov
or
in
mov
or
lds
ljmp
dec
cwtl
iret
inc
xor
lahf
cwtl
loop
jns
jns
push
sti
xchg
or
mov
sbb
shrl
push
and
sar
push
push
inc
loopne
loop
sahf
fs
outsb
xchg
jmp
dec
push
bound
cmp
jecxz
fsubrl
fsubrs
sub
mov
lock
sbb
push
xchg
mov
cmp
sbb
cmp
ret
lahf
push
je
jl
or
mov
shll
sti
ljmp
imul
xlat
jnp
lods
inc
or
pxor
or
dec
cmp
and
les
mov
mov
dec
pop
sarb
xchg
cmp
inc
xor
and
and
xchg
mov
cmp
data16
lcall
jb
add
sbb
xchg
ret
push
stos
es
icebp
xchg
fsubrl
aas
add
sub
adc
and
iret
inc
jno
push
lcall
fs
mov
cs
push
cmp
cmpsb
outsb
jg
inc
or
shlb
int3
ret
add
sub
ret
mov
mov
sahf
mov
push
fld
jns
lods
xchg
mov
imul
mov
test
aaa
insb
inc
cwtl
out
insl
mov
dec
fstpl
xor
pop
xchg
lds
incb
add
lods
fidivl
lcall
into
ret
sbb
push
push
scas
int
mov
shl
xor
test
mov
popa
and
nop
xor
jne
cmpsb
icebp
mov
int
pop
or
fsubl
pop
imul
iret
mov
aam
pop
aad
pop
cmpsb
xor
pop
cmp
iret
xchg
jg
fstpt
push
mov
icebp
mov
sti
lods
popf
pop
repnz
adc
adc
inc
mov
addr16
adc
xchg
jecxz
negl
inc
add
mov
stc
mov
inc
inc
cwtl
rcll
jmp
push
loop
pusha
filds
and
cli
ja
ds
jo
aam
push
push
jge
mov
mov
neg
loope
pusha
es
rcr
sbb
test
jle
repz
or
rcr
sbb
xor
pusha
push
test
mov
pop
in
mov
mov
dec
pusha
mov
insl
fmul
pop
popa
inc
xchg
adc
xchg
adc
cwtl
insb
push
cmpsl
leave
xor
pop
xor
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
xchg
mov
jmp
out
cmp
inc
push
mov
leave
jl
out
adc
lret
cmpsb
xchg
or
rcll
inc
mov
sbb
ds
cmp
in
xor
sub
mov
adc
shll
lock
cwtl
lret
mov
mov
in
lret
mov
pusha
sbb
xor
mov
pop
dec
cmp
movsb
mov
dec
or
lock
cs
lret
or
pop
call
cmpsb
xchg
push
jge
pop
gs
jecxz
movsl
andl
stos
or
aam
dec
enter
jmp
or
mov
xchg
mov
mov
adc
cli
and
push
insb
pushf
pop
lods
sti
xorb
cmc
dec
pop
jl
adc
cmp
cltd
pop
inc
inc
aam
adc
or
jg
mov
dec
test
js
jnp,pt
inc
int
mov
loopne
in
cmp
mov
ss
out
pusha
xor
sahf
fs
inc
por
pop
cmp
aaa
mov
jmp
lahf
mov
inc
adc
aas
rcll
and
iret
gs
pop
adc
or
scas
cmpsl
sti
mov
lret
push
iret
lds
out
adc
sub
jp
push
movsl
adc
test
inc
sub
adc
xchg
sub
push
cmpsl
mov
mov
pop
sub
sbb
add
jbe
mov
int3
pop
inc
popa
in
stos
xor
ret
add
dec
jo
rcll
cmp
push
stc
incl
out
mov
rorl
mov
mov
decb
mov
xchg
jae
pop
rolb
jnp
jle
sub
cmp
cmp
or
lds
aad
jae
inc
shlb
adc
lcall
xchg
jmp
mov
mov
jbe
cmp
or
push
or
das
cmova
lahf
push
cltd
out
repz
inc
pusha
nop
aas
fs
scas
and
stos
sub
ret
pop
sbb
add
std
xor
rcrl
pop
int3
sub
mov
lea
aam
stos
mov
ljmp
cmp
mov
pop
addr16
xor
jl
fidivrl
arpl
test
jne
dec
dec
pop
cmpsl
adc
inc
out
xchg
dec
ss
lock
into
mov
scas
jne
js
push
xchg
movsl
decl
sti
jo
lcall
rcll
or
call
cmpps
aam
stos
or
rorb
popf
cmp
out
sub
lret
inc
add
dec
adc
fidivrs
clc
stos
xor
cs
mov
jno
mov
test
dec
pushl
mov
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
negl
jle
jl
ret
cmp
dec
pushf
adc
xchg
pusha
dec
jb
into
je
sub
insb
int3
call
loopne
adc
ret
jp
iret
movsb
or
test
cmp
arpl
jecxz
movsl
gs
aam
jns
aaa
or
mov
dec
loope
inc
jne
cmp
jmp
es
mov
pop
ja
andb
sbb
stc
repnz
rolb
mov
lcall
rep
lods
pop
rcr
dec
xor
inc
adc
pop
cli
in
jge
sbb
sbb
movsb
dec
mov
test
xchg
enter
add
sbb
rcl
push
xchg
pop
xor
outsl
and
loop
out
into
in
mov
jne
movsl
orl
cld
add
push
scas
jns
repz
call
stos
rorb
mov
inc
hlt
lahf
pushf
and
les
lea
daa
sub
bound
mov
pop
popf
fsubrl
jge
aam
in
dec
sub
sbb
adc
test
aam
push
dec
sarb
jl
imul
mov
stos
aam
sbb
mov
jl
jmp
xchg
int3
das
out
jle
xchg
mov
cs
daa
gs
add
rorl
stc
js
jecxz
mov
add
imul
in
aad
add
cmc
mov
ret
mov
or
jg
mov
mov
cmpsl
imul
mov
daa
sub
gs
fildll
and
and
mov
cmc
cmp
add
clc
cmp
xchg
pop
xchg
push
jns
test
push
dec
call
mov
icebp
sbb
addb
push
out
sbb
scas
jne
lods
inc
in
adc
and
jle
mov
outsb
adc
into
stos
out
jo
test
insl
inc
lcall
mov
stos
xor
aaa
test
enter
cmp
mov
push
mov
popf
jg
js
cmp
addr16
inc
cmpsl
clc
adc
and
and
pop
xchg
sbb
je
jg
pop
sub
inc
ffree
and
inc
sub
or
out
mov
lods
pop
inc
bound
and
cld
jl
data16
and
push
sbb
cmp
shlb
jbe
int
xor
or
jo
cli
test
mov
rcl
cmpsb
xchg
loope
sbb
add
mov
xchg
jecxz
mov
inc
mov
lock
mov
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
sub
add
or
xlat
in
dec
stc
sbb
in
push
in
pusha
fwait
push
jge
mov
fimuls
in
out
dec
int
sbb
push
int
insl
loop
xchg
subl
mov
jmp
mov
jg
dec
xor
mov
add
popf
fdivs
shrb
mov
iret
loop
stos
or
imul
add
fimull
dec
push
xchg
add
sbb
clc
and
pop
out
pop
lods
or
movsl
inc
aam
in
cmp
lock
sub
pop
pop
cmp
xor
jbe
scas
inc
pop
xchg
in
loope
jl
addr16
inc
daa
sbb
push
sbb
test
fdivrl
scas
out
cwtl
iret
dec
mov
xchg
int3
ret
sub
fdivl
pusha
sub
dec
dec
adc
inc
lret
orl
aas
mov
insb
sub
or
inc
mov
cmp
pop
loopne
adc
ja
xchg
push
fnstcw
aas
in
lods
lret
cmp
enter
dec
cli
xor
mov
and
test
hlt
mov
cwtl
xlat
xlat
test
mov
dec
pushf
outsb
jmp
int
dec
lods
in
sub
movsb
dec
das
mov
cld
pop
movsl
ja
add
jno
lret
cmp
and
mov
xchg
mov
lret
jg
aas
out
inc
adc
test
adc
inc
in
mov
mov
imul
add
ret
arpl
push
mov
xlat
pop
xor
fsubl
or
pusha
or
dec
mov
jle,pt
jns
bound
nop
aaa
fnstsw
cli
icebp
xchg
inc
outsb
mov
test
fwait
xchg
mov
cs
pop
xor
mov
inc
pop
cmp
sbb
sbb
sub
fs
xchg
fisubl
and
pop
and
add
add
sub
push
xchg
push
bound
jnp
xor
out
jno
xor
enter
adc
or
daa
mov
add
push
mov
aaa
inc
sti
or
add
mov
mov
insl
mov
mov
lret
std
mov
cmc
push
add
or
push
sub
lret
mov
sbb
subl
push
pop
lret
scas
cmp
rcll
es
es
cmpsl
cmpsb
int3
insb
je
cmpsb
aas
test
mov
xor
inc
pop
jg
es
nop
xchg
add
aas
jmp
fmull
dec
stos
dec
outsl
mov
push
sbb
pop
add
xor
insl
or
adc
lods
inc
orl
push
movb
les
pop
sub
lea
mov
mov
cmp
jmp
mov
jne
adcb
dec
add
cmp
addr16
jl
mov
adc
lret
or
mov
jmp
jmp
imul
outsb
push
aam
mov
lret
clc
lahf
sarb
test
mov
out
arpl
mov
xor
and
jb
jl
inc
popl
imul
mov
stc
adc
xlat
insl
loop
or
adc
and
xor
and
inc
mov
mov
and
pop
add
sub
arpl
sbb
xchg
dec
stos
mov
xor
xchg
or
insl
xor
mov
xlat
hlt
ret
lcall
xlat
xchg
mov
pop
jns
add
sbb
xlat
jp
bound
dec
pop
dec
pop
filds
repnz
xchg
repnz
and
mov
mov
data16
cmpsb
in
jnp
faddp
lahf
sbb
mov
addr16
std
ja
scas
push
test
in
adc
outsb
pop
js
rorb
scas
inc
push
or
push
mov
popf
ret
mov
ljmp
js
adc
stos
dec
add
fstp
and
ret
sub
cwtl
cmp
jmp
push
lret
add
inc
push
fs
pop
je
loopne
fildl
mov
jg
in
push
mov
xchg
dec
mov
jg
in
pop
fstpl
mov
aaa
and
int
xlat
or
push
inc
sub
stos
sbb
xor
aam
gs
inc
cmpsl
gs
and
sarl
mov
pop
or
jbe
lret
int
dec
loope
add
aad
or
std
inc
mov
push
dec
mov
hlt
dec
cmp
jmp
dec
xor
mov
lea
add
fidivl
xchg
scas
aam
repnz
jg
sub
ja
fidivrs
in
dec
mov
adcb
lahf
push
adc
cli
xor
ja
incl
stos
xor
push
push
jbe
scas
pop
cmp
stos
sub
and
or
icebp
imul
loope
push
inc
add
sub
jns
jl,pt
sbb
scas
popf
adc
or
and
jae
ret
mov
jns
gs
fisttps
popa
leave
imull
inc
mov
mov
les
rcrb
js
cmp
fadds
scas
mov
das
or
jb
or
mov
imul
fnstenv
pushf
mov
inc
ret
dec
outsl
push
inc
inc
dec
stc
dec
fidivrl
xchg
or
mov
and
pop
mov
es
pop
xor
aam
iret
xor
add
add
lea
xor
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
dec
adc
jl
jle
jl
dec
addb
lret
push
lret
fsts
push
pop
movsb
addl
and
xchg
adc
ret
out
outsb
adc
sahf
std
inc
jp
dec
jno
cmc
popf
mov
insb
mov
in
mov
inc
xor
sbbl
fucom
xchg
jb
dec
nop
and
xchg
mov
sbb
fcomps
mov
leave
or
mov
leave
sub
xor
cli
cmpsl
add
fstps
shl
jbe
sbb
pusha
push
das
add
push
shrb
sub
push
inc
icebp
xchg
shrl
lahf
mov
mov
int3
pushf
sbb
adc
aaa
mov
xor
mov
filds
cmpsb
fsubs
mov
add
sbb
faddl
mov
fsts
loope
out
jbe
outsl
into
fbld
nop
ret
add
adc
jne
cmp
pop
fcoms
jle
push
and
cmc
adc
test
icebp
out
out
mov
jle
and
xor
and
addr16
pop
mov
inc
mov
inc
sbb
std
rorl
dec
std
xchg
mov
mov
mov
pop
adc
push
repz
dec
jmp
push
shlb
add
iret
xor
clc
dec
cs
add
xchg
sub
std
mov
sub
lods
outsl
sub
std
ret
mov
fs
and
cmp
sub
cltd
sub
jae
jae
pop
sub
push
adc
xchg
pop
jge
cmpsb
mov
dec
pop
pop
pop
mov
pop
in
mov
or
mov
ror
lret
dec
add
mov
sbb
push
dec
sbb
cltd
mov
sub
xchg
pop
cmp
inc
divl
fsubrl
lock
adc
and
mov
cmc
mov
push
cmc
inc
inc
lret
xchg
push
dec
cwtl
adc
jb
fucomi
pop
fisttps
sbb
fnsave
cmp
int3
xchg
cmp
arpl
pop
in
aam
and
lret
lahf
push
xor
int
lahf
lea
xchg
or
dec
xor
and
test
leave
das
dec
or
inc
ret
jns
pop
push
jb
and
pop
xchg
je
mov
dec
mov
andb
pusha
int3
pop
xchg
je
icebp
rcrb
test
mov
jbe
mov
jmp
js
mov
or
cmpb
lods
jno
ljmp
lods
hlt
xlat
daa
out
pop
add
aam
adc
add
repz
jge
fdivrs
pop
es
insl
lea
or
or
dec
pop
xchg
xchg
in
mov
lods
cwtl
testl
dec
les
icebp
pop
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
jg
cmpsl
into
les
jl
popa
jb
movsb
xlat
xor
cs
divb
lcall
mov
in
frstor
nop
ret
std
cmp
fdivrl
xchg
insl
bound
dec
andb
pop
cli
mov
cmp
ss
movhlps
notb
or
repz
lret
cmp
push
mov
ficoms
ja
fsts
push
push
mov
mov
sti
and
outsb
cltd
fsubrs
in
cld
jb
sahf
sub
pop
mov
pop
lock
mov
jae
call
push
pop
loope
pop
and
jne
aam
sbbl
push
xor
sbb
xor
xchg
inc
inc
add
clc
jmp
sub
cmp
sbb
lcall
incl
dec
mov
aam
mov
pop
mov
mov
or
loope
inc
sti
movsl
outsb
jecxz
ds
dec
pop
dec
pushf
xchg
inc
icebp
test
insb
jae
subb
lock
test
sbb
fistpl
push
xor
in
gs
aaa
jb
and
jbe
rclb
jns
ret
mov
bound
inc
lretw
dec
cmpsb
movsb
rcrl
lret
sub
and
sub
arpl
and
push
push
jge
and
push
push
pusha
jno
xor
inc
or
mov
jl
mov
push
xabort
test
sbb
xchg
mov
sarl
dec
fmul
negb
test
pop
and
sete
les
and
add
out
dec
inc
sub
pop
mov
inc
aam
xchg
int3
jbe
daa
in
test
loope
mov
or
mov
jo
test
mov
imul
push
shlb
shl
push
inc
notb
xchg
xchg
cli
in
sahf
movsb
lret
adc
adc
mov
lods
decb
add
mov
and
outsb
cmp
mov
cmp
fistpl
mov
mov
jne
push
sbbl
addr16
jmp
xchg
adc
test
out
stc
inc
jp
mov
dec
xlat
xchg
pop
add
jo
sub
and
fimuls
aas
push
rorl
mov
fisttpl
cmp
lcall
aas
adc
mov
dec
and
imulb
lret
xchg
inc
inc
pop
rclb
mov
inc
loopne
loop
imul
lret
sbb
ret
and
lods
je
jmp
shlb
cwtl
shll
jmp
jge
dec
out
pop
mov
jne
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
add
push
jl
addr16
jl
cmp
subb
jg
adc
inc
jp
xor
adc
or
test
fs
and
sbb
or
call
das
rcrl
and
lret
inc
inc
xor
int3
jmp
shl
push
sbb
test
mov
mov
cmp
ss
dec
lds
push
scas
mov
insl
in
dec
faddl
mov
adc
test
xor
outsl
adc
pop
cmp
fistps
add
stc
mov
cmp
testl
test
fistpll
aad
fstp
xchg
sub
lods
jo
cmc
btsl
mov
sub
out
test
iret
lods
pusha
cmpl
cmpl
push
mov
mov
jns
mov
mov
jae
mov
jg
int3
cmc
and
dec
push
movsl
into
shll
pop
jbe
sbb
xor
test
add
dec
pop
mov
push
mov
mov
shrb
div
ds
pop
pop
pusha
dec
mov
pandn
imul
add
aaa
sti
xchg
cmp
sbb
lcall
and
fnstcw
fs
bnd
xor
add
sub
scas
cmp
sar
inc
mov
cmp
adc
idivb
dec
sbb
int3
xchg
mulb
add
in
dec
out
ffree
and
dec
cmc
push
mov
or
rcrb
inc
add
sarl
int3
push
push
add
loop
xchg
mov
sbb
and
scas
scas
mov
sub
inc
clc
das
mov
cli
movsl
lret
xor
add
mov
gs
jmp
aad
ljmp
jg
pop
test
inc
iret
repnz
fisubl
jno
arpl
loope
flds
faddl
add
cld
push
fs
inc
fmuls
lods
inc
sbb
into
mov
add
js
add
aaa
ja
jl
test
push
jb
imul
out
stc
scas
lret
shr
xchg
cmc
int
pop
repz
jp
insl
rcll
mov
add
repz
mov
adc
insb
in
mov
out
sub
lcall
lods
inc
shrb
popa
loope
arpl
jbe
and
int3
cmpsl
loopne
div
cld
add
pushf
inc
mov
out
adc
in
push
mov
mov
mov
inc
xor
test
in
and
imul
xlat
and
mov
int3
cmp
push
mov
sbb
xor
and
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
in
adc
aaa
push
adc
jg
jl
inc
cmpsl
fmuls
sub
inc
fbstp
xchg
divl
and
pop
ret
xchg
dec
push
stc
or
mov
mov
ljmp
clc
cmp
lock
pop
jo
push
addr16
out
loopne
mov
mov
movsl
insb
les
lea
mov
jno
sbb
js
jbe
pushf
test
push
push
testb
shrb
ds
mov
adc
dec
lods
inc
mov
adc
adc
xchg
aam
in
inc
xlat
push
jge
hlt
imul
ret
notb
pop
jnp
popa
les
pop
decb
or
sbb
mov
push
jo,pn
mov
pop
sub
pop
pop
ds
xor
pusha
cmp
fs
mov
and
scas
divl
stos
ljmp
sbb
xchg
lock
not
sbb
pop
faddl
data16
rclb
xchg
es
in
push
jne
push
inc
out
rorb
lods
mov
leave
jp
cmp
push
xor
cmpsb
sbb
loopne
repz
xchg
and
mov
pop
out
mov
addr16
sbb
cmp
inc
mov
clc
mov
dec
dec
fwait
mov
fiaddl
ficoms
mov
sub
jmpw
and
in
dec
lret
stos
out
int
xor
lods
negb
sub
cmp
rorl
or
lods
mov
sbb
aaa
xchg
xchg
push
aas
pop
mov
out
movsb
cmpl
xchg
outsb
mov
push
jnp
loop
cli
pop
and
jo
cmpsb
xchg
fdiv
sub
mov
dec
call
push
movsb
add
ja
fs
shr
push
clc
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
in
pop
sbb
jl
sti
outsl
dec
lods
divl
inc
inc
dec
lods
jnp
loopne
xchg
adc
aam
in
mov
jo
bound
jo
jmp
adc
pop
hlt
sub
pop
shrl
cmc
pop
ljmp
sub
add
lahf
inc
rcr
lds
push
lea
pop
inc
lock
bnd
xchg
and
pop
and
shr
mov
xlat
xchg
xchg
cmp
xlat
addr16
fnstenv
fmuls
or
fbstp
outsb
enter
shlb
xchg
es
add
dec
add
mov
lcall
fidivrl
push
push
cmc
movsl
xchg
dec
in
shll
pop
in
imul
test
pop
xorb
idivb
outsb
popa
jae
fsubl
jl
ljmp
andb
sbb
ss
adc
mov
lds
xchg
daa
xor
mov
and
cmpsb
pop
ficoml
mov
sbb
bound
jge
stos
or
xor
mov
mov
aad
jns
test
cli
hlt
ja
dec
cmp
xor
add
into
das
aaa
cmp
and
jecxz
pop
popf
mov
loop
jg
cs
mov
jecxz
imul
testb
xchg
pop
xor
into
and
insb
mov
xchg
fs
sbb
pop
inc
jmp
jbe
lods
pusha
int3
out
unpckhps
mov
test
mov
icebp
iret
cli
stos
pop
cld
cmpsl
cmpsl
les
xchg
call
pop
inc
fnstsw
sub
pop
hlt
add
adc
add
lods
cmp
mov
jo
mov
jmp
sarb
sarl
or
or
je
jl
insl
jg
jl
in
sbbl
aam
repz
call
sub
cmpsb
inc
aam
aas
xchg
add
dec
cmovne
xchg
xor
dec
push
aad
nop
mov
jae
mov
call
jmp
aas
pop
imul
and
fcompl
movsb
in
syscall
jp
fnstcw
ja
push
fcmovnu
add
rcl
insb
stos
or
inc
add
mov
pop
cltd
fwait
and
mov
dec
cmpsl
sti
mov
or
or
or
ljmp
stos
xor
xchg
dec
clc
inc
sbb
movsb
std
ja
mov
jecxz
aas
and
adc
mov
mov
mov
sbb
mov
mov
mov
jne
mov
nop
mull
pop
lcall
inc
or
mov
fnstenv
fiaddl
sbb
repz
dec
cmpsb
push
fs
push
and
lcall
jns
idivl
cltd
rcrb
xchg
das
cmp
stos
or
jno
pop
notl
cwtl
ja
xor
sbb
ja
mov
mov
arpl
dec
ret
jnp
jmp
loop
mov
jl
sub
sub
ss
mov
xor
leave
sbb
test
push
in
outsl
pop
dec
sar
pushf
rcrb
jmp
mov
xchg
or
jmp
jns
push
arpl
pop
cmp
mov
and
push
lods
push
inc
cmp
dec
mov
lds
or
jnp
into
inc
sub
fistpll
adc
jae
jns
or
inc
jle
leave
cmp
in
test
mov
jmp
addr16
or
arpl
aas
cwtl
pop
imul
jl
add
sub
fsubrp
jmp
adcl
xchg
jge
mov
dec
mov
or
movsb
dec
scas
stc
xchg
push
lds
pop
push
jns
and
repnz
lods
inc
mov
cmpsb
push
and
mov
xchg
mov
insl
push
mov
imul
inc
jns
xchg
mov
fcompl
mov
jge
pop
jmp
ret
pop
xchg
jl
imul
push
fstps
cbtw
cld
ljmp
and
pushf
or
outsl
adc
lods
and
sub
mov
add
js
es
pusha
dec
test
jbe
lret
stos
cmp
or
int3
incb
mov
xor
shl
inc
stos
fcomip
jnp
or
or
stos
ret
push
sbb
jp
adc
mov
mov
pop
or
testb
fstl
std
sub
adc
mov
xchg
mov
adc
mov
sbb
je
ja
push
fwait
mov
adc
imul
aas
iret
xor
loop
xchg
dec
jecxz
int
lock
testl
icebp
and
push
icebp
pop
sbb
loopne
call
and
shrb
xchg
addr16
sub
jmp
add
call
pop
or
jp
mov
mov
lfs
xor
shll
push
or
adc
cmp
scas
mov
fcom
mov
xchg
mov
test
pushf
cmp
pop
fsub
test
aad
popl
or
lret
das
inc
xchg
and
jmp
fbstp
fyl2x
loopne
dec
or
mov
ljmp
andl
shl
mov
cmp
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
sub
jl
insl
jg
jl
and
test
xor
mov
cld
adc
adc
mov
adc
aam
dec
or
addr16
xor
lret
mov
add
mov
xchg
shr
mov
hlt
scas
sub
jg
lahf
or
push
iret
sbb
cmp
imul
lds
push
nop
cbtw
sarb
lahf
pop
xor
pushf
es
or
jo
jmp
roll
out
push
xchg
adcl
mov
pop
mov
pop
pop
sbb
ret
lret
push
mov
or
clc
pop
insl
mov
sbb
cli
pop
adc
sub
mov
cmp
mov
add
inc
loope
ljmp
xor
rclb
cmp
mov
mov
les
andl
pop
inc
cli
test
mov
or
pop
and
jb
aas
mov
mov
ficompl
jmp
enter
test
cmpsl
nop
mov
inc
lods
shrl
mov
scas
inc
outsl
mov
lret
andb
mov
mov
jae
int
fimuls
cmp
nop
add
inc
repnz
pop
lea
rclb
push
icebp
mov
hlt
jo
mov
sbb
sub
addr16
leave
in
xor
push
stos
outsl
mov
lcall
jne
jno
cmp
int
in
clc
xchg
out
repnz
mov
cmpsl
or
mov
pop
push
test
sub
mov
icebp
repz
adc
sub
aaa
flds
pop
les
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
pop
sbb
shl
jge
shlb
ss
imul
mov
fists
fcom
or
fsubrs
jle
sbb
push
jmp
cwtl
bnd
pop
xchg
adc
adc
inc
data16
leave
into
enter
popf
xor
subb
add
and
scas
or
sbb
sub
xor
jge
int3
and
addr16
sbb
std
sbb
imulb
fwait
jb
stc
subb
arpl
ss
call
test
test
fs
in
xchg
and
inc
dec
and
js
sahf
sbbl
sbb
sti
xor
and
pop
sub
xchg
fwait
dec
insb
ret
mov
push
mov
mov
fldcw
aaa
push
sbb
scas
cli
mov
pushf
mov
ljmp
mov
mov
pop
dec
scas
sbb
imul
stc
je
in
mov
mov
aam
cmpsb
jb
dec
rolb
mov
sbb
inc
adc
mov
out
adc
pushf
pop
and
rorl
push
cmc
xor
adc
mov
xchg
cs
jmp
or
mov
push
add
xor
rorl
aad
clc
jle
repnz
stos
sub
aas
sbb
adc
jnp
jb
lods
fwait
in
dec
fnstsw
cmpl
mov
rorl
rclb
jno
xor
insb
xchg
lahf
mov
nop
xchg
mov
adc
mov
stos
jne
push
inc
mov
stc
mov
cs
xor
xchg
mov
add
xchg
loopne
mov
cmc
das
fninit
adc
adc
add
jmp
mov
sbb
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
ljmp
jl
jg
jl
scas
cs
mov
ret
sbb
jmp
push
push
mov
in
xchg
mov
mov
mov
imul
ss
xchg
mov
cmc
dec
out
sti
in
cli
fsubl
lods
mov
fsubs
sarl
jmp
cli
in
outsb
cmpsb
jg
mov
or
cmpsl
push
cmpsb
int3
jmp
fdivl
mov
gs
stos
out
inc
push
xchg
mov
popa
mov
push
dec
xchg
xchg
mov
push
jne
push
and
cmp
mov
sub
push
xchg
icebp
outsl
std
cmpsl
sbb
mov
out
mov
cwtl
or
sbb
ss
rol
mov
jg
dec
iret
mov
bound
repnz
cli
xor
test
fidivl
and
pop
sahf
cmp
outsb
and
jb
jnp
add
jae
adc
jb
test
stc
cmp
mov
mov
pop
aam
jl
mov
sahf
lret
mov
pop
push
fildl
inc
push
daa
ds
arpl
adc
cmpsb
mov
stc
das
push
sbb
xchg
popf
rcrl
imul
sub
lods
push
das
push
push
call
test
xorb
andl
xor
mov
mov
or
lds
in
call
iret
fcompl
loope
scas
das
push
sahf
pop
pop
xchg
in
dec
xchg
cmpsb
cmpsl
jbe
inc
pop
pop
or
fdiv
add
leave
push
fwait
mov
push
jne
sahf
daa
sub
inc
push
push
orl
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
fcoml
jl
jg
jl
jae
outsb
daa
adc
pop
xor
add
arpl
cs
mov
sub
xchg
dec
mov
cmp
push
inc
mov
sub
jbe
daa
cwtl
or
jecxz
movsl
test
in
or
jl
pop
sti
jmp
jp
jb
icebp
inc
ret
cmp
sbb
jp
and
cmp
cli
mov
outsb
pushf
dec
mov
ret
jge
cmc
and
pop
rolb
out
data16
pushf
mov
rol
inc
cmp
sub
mov
jp
inc
mov
ds
iret
xor
mov
adc
idivl
add
fwait
aaa
out
lahf
add
ljmp
std
xor
xlat
and
inc
std
mov
xchg
in
adc
lods
xchg
cmp
js
rorb
out
xor
sti
jnp
stos
push
insl
push
neg
add
xchg
pushw
inc
rorl
arpl
add
sahf
sub
add
dec
mov
mov
jo
jae
loopne
push
pushf
jp
fildll
out
mov
cs
jnp
lods
test
push
fdivrl
stos
dec
adc
insl
mov
lock
dec
mov
test
movl
pop
daa
mov
dec
jno
jne
adc
add
push
popf
rorl
stc
cmp
movsl
leave
or
adc
enter
dec
aad
pop
jecxz
xchg
mov
negb
mov
or
clc
daa
push
aam
mov
pop
dec
xor
adc
fnstcw
add
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
or
cmpsl
adc
jl
stos
jg
jl
test
pop
mov
and
lods
dec
push
in
dec
lahf
aad
or
lcall
test
rclb
aas
xor
mov
dec
loope
jecxz
xchg
xchg
adc
das
rolb
lcall
mov
ret
sti
fcoms
jecxz
inc
mov
movsb
fsts
or
lods
test
sar
pop
fsubr
jns
lret
lods
mov
pop
xchg
mov
stos
aas
mov
sbb
ds
pushf
idivb
popl
inc
in
mov
pop
jp
sbb
xor
lret
mulb
mov
and
adc
mov
int3
cltd
mov
outsb
mov
iret
in
cli
inc
cmpsl
cmp
inc
push
pushf
jecxz
pop
icebp
dec
addl
sbb
xchg
mov
into
sub
jmp
or
mov
sub
inc
sbb
sub
pop
ss
les
add
mov
mov
sub
pop
mov
xor
xorl
cs
sarl
sub
popf
inc
icebp
mov
shlb
cmp
mov
dec
mov
add
jl
or
xorl
std
sarb
push
clc
sahf
sub
aam
cmp
sub
pop
adc
aam
adcl
jo
mov
fst
xor
xor
or
mov
and
xchg
cmp
ret
pop
or
jbe
dec
jae
mov
dec
scas
push
push
icebp
lods
push
dec
inc
jp
ljmp
cltd
add
les
cmp
in
pop
rolb
mov
and
jb
sbb
mov
shl
mov
inc
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
fisubl
mov
stos
jg
jl
sti
pop
fucom
insl
jbe
cmp
and
data16
mov
orb
adcb
mov
loope
add
lods
daa
push
inc
mov
jb
or
dec
in
xchg
pop
push
inc
stc
push
add
jg
fadd
outsb
and
dec
ret
and
ret
mov
pop
sub
out
fcomi
fdivrp
cmp
lds
addr16
js
mov
ja
hlt
notl
test
imull
pusha
cmp
sub
fists
cmc
mov
push
loopne
stc
xchg
das
pushl
cmp
cmpsb
addr16
lods
xor
stc
push
sub
ret
insb
lods
inc
test
cld
and
insb
or
daa
lods
cmp
push
out
es
int
inc
insb
xlat
bound
xchg
not
adc
pop
lahf
jmp
sub
xlat
sbb
into
jo
add
outsb
fistpll
sahf
cmpsb
aas
mov
enter
js
mov
xor
pusha
jbe
mov
test
dec
cmc
add
sahf
add
fwait
test
cld
fcmovnbe
xchg
cmp
stc
inc
xchg
jnp
out
outsl
adc
jnp
les
fsubrs
cmc
mov
mov
mov
ret
inc
popa
dec
jg
cld
mov
xchg
ficoms
cli
notb
mov
cwtl
mov
test
pop
ret
and
mov
cmp
and
lret
repnz
adc
push
cmp
ret
sti
sbb
fs
push
mov
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
add
icebp
test
jl
push
mov
mov
pop
sub
sarb
lock
push
jp
xchg
in
sti
dec
mov
loopne
rclb
pop
xor
das
xor
cmp
nop
push
adc
inc
je
xchg
dec
test
subl
lret
push
rorb
mov
lcall
xchg
nop
inc
int3
adc
mov
pop
push
pop
ds
xor
cli
sti
dec
mov
stos
test
push
xchg
data16
into
mov
je
pop
or
or
add
test
pop
clc
cltd
cmc
xchg
outsl
movsb
jo
paddsb
subb
dec
enter
mov
xor
pusha
mov
jo
or
and
in
cmpsl
cmp
cmp
sub
cmpsl
add
dec
iret
or
pop
and
icebp
push
les
xchg
adcl
push
andb
pop
xor
dec
jae
mov
jns
adc
mov
cmp
pop
pusha
add
fstps
and
cmp
sbb
sbb
lods
and
mov
sub
repnz
inc
stos
xrelease
imul
lcall
pushw
push
jbe
andb
dec
aas
add
movsb
out
xor
mov
pop
sub
push
addr16
lods
pushf
out
cwtl
push
pop
ss
jp
adc
xchg
and
adc
jnp
xor
out
mov
inc
inc
decb
xchg
mov
fildl
add
xchg
and
movsl
inc
jbe
les
sub
xor
sbb
pop
loop
imul
inc
bound
fucomp
aad
ret
sbbb
push
mov
test
sub
roll
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
insl
lock
push
xor
jl
stos
jg
jl
jns
pusha
in
out
scas
mov
xchg
aaa
xchg
sub
in
insl
mov
xchg
orb
mov
or
add
xchg
xchg
lret
je
mov
repnz
jl
fsub
aad
iret
int3
test
hlt
pop
inc
jg
ret
mov
lcall
in
fnstsw
lods
loopne
dec
fildll
icebp
adc
loope
paddsw
and
out
ss
xlat
push
mov
pusha
ret
lahf
mov
jbe
dec
jp
push
push
add
fdivrl
pop
adc
mov
into
xor
inc
mov
push
mov
test
or
mov
adc
into
jp
out
mov
out
daa
int
push
iret
imul
push
fwait
mov
mov
sahf
cmp
push
cmp
je
jns
outsl
inc
mov
or
dec
fwait
adc
add
ror
pusha
push
sub
jl
mov
out
sbbb
pop
pop
add
add
jg
jge
sub
imull
xchg
adc
iret
data16
adc
ljmp
sub
std
xor
adc
fldt
mov
scas
cli
sub
sub
out
mov
lahf
ret
inc
data16
push
mov
jmp
xchg
xor
insb
push
lret
les
mov
pop
in
aas
outsb
fcmovnbe
std
adc
fcomps
jb
ret
mov
mov
push
insb
out
sti
iret
hlt
sbb
fsubrl
popf
mov
mov
push
ljmp
gs
push
or
pop
enter
cmp
inc
add
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
movsl
nop
iret
push
outsl
sbb
pop
pop
lock
lds
add
out
push
ja
ret
mov
dec
pop
fistps
bndldx
imul
push
scas
pop
out
and
sbb
cmp
in
xchg
movsl
scas
or
sbbl
out
dec
push
xchg
inc
xchg
roll
mov
mov
cmp
pop
arpl
jg
pop
jp
inc
xor
xor
and
dec
inc
lcall
int
mov
mov
jbe
xor
fsub
les
mov
xchg
jecxz
xlat
leave
and
pop
sbb
mov
pop
mov
and
ror
lcall
pop
outsl
sub
call
xchg
or
add
aam
add
dec
mov
gs
test
xchg
int
add
into
das
daa
cli
xor
insl
xor
hlt
test
push
jge
push
cld
xor
pop
cli
xchg
pop
xor
out
add
sub
rcl
fstpl
cmp
xchg
mov
ds
ret
stos
in
aam
cmp
jbe
lods
and
pusha
sub
insb
sbb
fstpl
arpl
mov
or
or
repz
mov
lods
fistpll
xchg
inc
out
lds
push
xor
jp
adc
lcall
jle
cmp
fnsave
mov
cmc
and
aas
xchg
das
sbb
lds
mov
repnz
push
push
xchg
ss
jg
negb
push
adc
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
lods
inc
jae
movsl
sub
jg
jl
push
pop
jge
call
xchg
clc
movsb
lds
aam
mov
push
mov
int3
inc
sti
out
popa
mov
call
pop
rorb
mov
jns
pop
inc
adc
movsl
shll
outsl
std
shll
jmp
stos
cmpsb
mov
mov
in
mov
mov
and
movsl
dec
inc
je
or
lods
cmp
cmc
jns
aas
sub
imul
jo,pn
movsb
and
imul
add
push
mov
in
lcall
in
in
aad
scas
dec
shlb
mov
push
jp
es
mov
jnp
out
inc
pop
inc
jp
dec
inc
jl
pop
pop
push
cmc
aam
dec
mov
mov
cmc
pop
not
aaa
jae
shr
or
push
or
fidivrl
outsl
ja
jp
and
jecxz
scas
push
jae
sbb
scas
and
movsl
out
and
mov
cmc
dec
mov
dec
jg
jns
je
inc
ja
sub
outsb
mov
je
xchg
mov
xlat
rclb
arpl
push
or
jp
inc
or
push
add
mov
addr16
lahf
filds
scas
jno
pop
mov
in
sub
mov
pop
or
inc
out
test
pusha
into
mov
lods
xchg
dec
and
sahf
xor
cld
andb
sbb
sub
add
movsl
addr16
adc
jb
cmp
sbbl
ret
scas
mov
sub
pop
fbld
jb
add
or
and
decl
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
jnp
sub
shrb
jl
mov
jl
xchg
loope
add
add
xchg
cs
jge
jne
in
cmp
notb
roll
fcmovu
outsb
dec
ror
lods
jns
pusha
push
pusha
push
addr16
in
cmp
cs
out
push
push
jns
test
pusha
xor
je
es
mov
dec
popa
sahf
js
ret
mov
push
out
xchg
sub
inc
vpsubusw
xchg
mov
xchg
add
lods
jg
arpl
or
mov
mov
iret
out
mov
call
dec
mov
and
push
loope
iret
xor
fadds
xchg
push
pop
sub
das
popa
popf
les
out
test
push
xchg
adc
cs
and
aad
cwtl
cmp
jne
and
stos
inc
push
sbb
negl
fwait
daa
gs
dec
test
push
xor
test
out
jo
icebp
or
push
add
inc
pop
sahf
xor
fildl
fistpl
inc
inc
xor
push
pop
lret
push
repz
pop
movsb
and
cld
jg
cld
pop
lock
lods
aaa
or
rorb
sahf
push
fmuls
mov
jbe
test
test
add
xchg
prefetchwt1
or
sar
popf
push
icebp
es
in
fistpl
sbb
add
fsubrs
aad
or
call
cmc
sbb
jno
dec
inc
sahf
lahf
push
sub
ss
adc
call
sub
ret
mov
inc
mov
jns
je
lret
sub
movb
dec
cmp
sbb
mov
hlt
ss
xor
data16
adc
cmp
fwait
sbb
sbb
cwtl
leave
add
roll
xchg
das
fst
lcall
addr16
repnz
bound
je
js
fdivs
shrl
int3
push
push
jnp
xchg
insb
pop
and
into
inc
push
in
mov
clc
adc
in
mov
inc
decl
dec
in
push
xor
push
repnz
fcoml
insb
adc
aaa
dec
ja
rol
out
jge
pop
mov
jmp
push
sbb
rcrl
inc
xor
enter
nopl
loopne
mov
cmp
xchg
daa
jge
fs
int3
xchg
jno
push
inc
cmc
daa
push
mov
ret
and
inc
outsb
sub
add
adc
cld
fstcw
ror
aas
lcall
hlt
pop
xchg
nop
mov
iret
mov
adc
push
sub
call
and
mov
jb
dec
shrb
fs
adc
lret
jo
or
ret
rcl
frstor
sub
and
sbb
mov
xchg
xor
cwtl
sahf
lods
shrb
in
std
sbb
addr16
sbb
and
out
xor
leave
ljmp
jnp
push
dec
pop
lret
xor
push
sbb
sbb
loopne
mov
subl
xchg
and
xchg
mov
inc
pop
jbe
pop
sub
adc
sub
aad
aas
imul
mov
cmp
pop
jo
fimuls
mov
jmp
cmpsw
es
gs
mov
xlat
iret
inc
movsb
pop
sbb
dec
mov
xchg
movsl
mov
daa
pop
cld
and
pop
subl
filds
decb
pusha
arpl
neg
jnp
and
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
lods
sbbl
mov
jl
dec
test
cmp
fucomi
mov
jb
pushf
cli
ficompl
adc
xchg
js
pusha
loope
sbb
je
jns
pop
and
xchg
xor
sbb
out
and
int
mov
mov
ret
popa
add
sbb
mov
pop
sahf
adc
fsubs
jae
push
out
mov
and
jmp
test
push
jns
add
adc
pusha
test
adc
mov
push
sbb
xchg
js
popf
ja
sbbl
mov
jbe
pop
cltd
xor
stc
test
sbb
out
icebp
mov
aad
dec
sub
repz
or
jae
ss
fcompl
dec
inc
bound
imul
and
or
movsl
xchg
movsb
jp
sub
add
cmp
mov
mov
mov
mov
adc
arpl
push
xor
je
add
pop
mov
arpl
inc
repnz
out
mov
mov
inc
das
aaa
iret
push
pusha
icebp
in
sub
jno
ds
jo
data16
je
cmp
jo
aaa
cmp
mov
inc
das
mov
fistpll
push
mov
pop
mov
sbb
test
daa
inc
in
std
cmp
popf
add
xchg
ret
fucomp
jmp
int3
xor
mov
mov
mov
mov
out
push
add
push
iret
cmp
push
and
lods
pushf
shll
inc
pop
scas
sbb
mov
sub
das
dec
leave
mov
stos
outsb
mov
xchg
movsl
xchg
loopne
mov
mov
push
mov
in
or
fiadds
pop
pop
les
add
mov
outsb
pop
popa
jno
dec
inc
sub
push
sub
cld
mov
data16
rolb
bound
push
montmul
cmpsb
inc
jae
sbb
add
ret
icebp
loopne
enter
pop
jp
mov
movsl
imul
pop
loop
jne
push
std
adc
or
icebp
jae
cmp
inc
fcoms
jns
xorl
xor
rorb
or
mov
out
shrb
sahf
outsb
out
stc
or
loope
popf
rorl
pop
rorb
insb
pop
fisubrs
mov
pop
rcrb
fisubl
ljmp
pop
repnz
call
add
cli
gs
into
sbb
inc
mov
sub
rorl
jbe
pop
cld
nop
xor
iret
dec
shrl
and
xor
adc
sbb
mov
mov
push
dec
movsl
loopne
out
cmpsb
call
shlb
inc
and
es
movsb
jb
jg
outsl
or
ret
enter
sbb
aam
pop
add
jb
or
ss
popf
dec
test
jnp
cld
push
jecxz
insb
mov
idivb
xchg
cmp
xor
pusha
dec
sbb
xchg
xchg
inc
pop
call
mov
cmp
sbb
or
xchg
pop
popa
adc
aam
rorl
mov
cmc
push
mov
stc
shlb
test
mov
bound
pop
int3
mov
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
push
negl
fimull
xor
ret
push
xlat
adc
jae
and
jge
xchg
fnsave
call
sti
inc
movb
add
insl
stos
test
sbb
popa
push
push
cmpsb
push
scas
pop
inc
movsb
rolb
pop
imul
jge
movsb
rcrb
in
and
cmp
xchg
aaa
xchg
push
add
shrb
push
sub
jg
dec
xchg
daa
inc
push
insl
in
subb
dec
mov
adc
xchg
add
lods
ret
xor
shrl
pop
pop
out
test
es
inc
inc
jp
pop
and
into
or
addr16
sbb
push
fidivrl
jnp
pushf
jge
add
xchg
int3
mov
mov
iret
mov
je
inc
sub
rorb
arpl
sbb
pop
add
pop
test
pop
in
flds
or
dec
sbb
popa
xchg
pop
arpl
xor
in
cld
pusha
das
cmp
inc
mov
outsl
div
ret
xchg
lcall
or
cmp
jmp
push
outsl
mov
jp
into
jecxz
adc
mov
out
movq
sarl
cmp
mov
loopne
xchg
test
int3
aam
jb
ret
xchg
ja
outsb
movb
pop
int
test
int
xor
lods
popf
dec
stos
dec
sbb
inc
aad
jbe
ret
aaa
xlat
jbe
sahf
sahf
lods
lret
fmul
testb
xor
inc
cmc
fldcw
jecxz
sbbl
jb
and
in
enter
mov
fwait
dec
rcrb
mov
fsts
gs
dec
mov
scas
sbb
mov
aaa
andb
clc
stos
xor
sub
sub
dec
sbb
sub
int3
jne
mov
dec
mov
cmp
pop
sub
and
adc
test
adc
repnz
out
xchg
jmp
psubsb
add
insl
fcmovb
shl
ja
mov
or
and
arpl
lds
imulb
mov
xchg
xor
out
outsb
adc
or
aam
dec
in
les
pop
mov
sahf
shrl
adc
clc
bswap
sub
dec
cmp
aas
adc
fdivr
scas
inc
shl
int3
scas
adcb
push
stc
in
pop
cmp
pop
mov
shll
loop
add
mov
ss
xor
add
insl
in
dec
das
push
pop
pop
jo
das
xchg
ror
inc
jo
pop
imul
fcoms
xlat
addb
fadds
insl
push
leave
movsb
xor
pop
outsb
jbe
add
loope
xchg
xor
mov
sti
pusha
inc
xor
js
xchg
pop
mov
call
fisubrs
pop
int
insl
test
fdiv
inc
mov
dec
mov
sti
xlat
movsl
cli
xchg
loop
sbb
sarb
and
call
jmp
outsb
adc
stos
stos
outsb
sahf
xchg
hlt
sbb
xor
ficompl
inc
add
mov
sub
cwtl
mov
sbb
fnsave
adc
cmp
sub
cmp
pop
dec
mov
inc
mov
jmp
dec
xchg
ljmp
and
mov
outsb
jb
dec
mov
cld
leave
stos
movsl
ficomps
addr16
xchg
mov
nop
jne
mov
cmp
jbe
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
push
lret
jnp
in
lcall
lds
lds
mov
push
hlt
jns
cmpsl
es
mov
sbb
leave
orb
sub
outsb
out
incl
inc
sbb
xlat
data16
sub
lret
fcomps
fwait
test
jns
and
sub
jge
lods
test
mov
add
xchg
push
in
loope
jp
cmp
mov
out
cli
xor
in
sub
mov
push
xchg
pop
fsubrs
xchg
out
stc
mov
mov
movsl
sti
xchg
or
dec
mov
mov
stos
daa
sbb
cld
mov
enter
mov
sub
loopne
inc
cld
sbb
cmp
pop
cwtl
adc
scas
inc
std
xchg
stos
mov
jne
mov
ja
cmp
adc
or
hlt
lock
cli
lock
mov
cmp
lahf
test
xor
pop
pop
test
mov
cmp
jle
jns
mul
mov
in
fwait
xor
hlt
xchg
leave
aas
imul
adc
sbb
test
inc
arpl
push
sub
daa
sub
fldl
mov
sbb
adc
ss
mov
fstpt
mov
mov
pop
adc
mov
cmp
mov
int3
mov
mov
sahf
test
fcmovu
insl
loopne
cmp
push
dec
lret
adc
rolb
pop
cld
pop
push
mov
les
jmp
mov
cltd
test
fsub
xlat
and
jae
mov
dec
cs
sbb
cmp
in
inc
pushf
inc
sub
mov
sahf
add
outsw
cld
idivl
test
jp
add
mov
fsubrp
sti
in
push
or
xor
insb
call
jl
inc
pop
aam
fsubrl
sub
dec
mov
cmp
insb
lcall
repnz
add
js
lahf
scas
cs
mov
loop
dec
mov
test
inc
add
pop
xchg
ret
or
jne
fistps
push
xchg
push
lret
cltd
imul
outsl
inc
or
push
cltd
and
xchg
xchg
dec
into
xor
popf
dec
push
or
pusha
jecxz
inc
xor
pop
aam
sub
push
rcll
lahf
popf
mov
inc
or
mov
movsl
daa
xor
rclb
rolb
fstpl
mov
andb
in
imul
dec
jb
cs
sub
sbb
data16
adc
add
mov
push
push
ftst
clc
cmp
add
fbld
das
add
sub
divl
sub
aaa
out
dec
inc
jmp
inc
mov
popa
add
fnsave
je
into
aas
pop
orb
fisttpll
cwtl
mov
or
xchg
outsl
leave
das
dec
imul
mov
stos
sub
mov
mov
xchg
fwait
pop
lret
stos
subl
add
xchg
loope
js
jae
loope
repnz
lock
mov
sub
insb
dec
stc
cmp
in
fs
inc
cld
or
or
in
fbstp
inc
notb
into
sbb
push
aad
push
aad
pop
decb
jne
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
pop
jp
mov
xor
jl
mov
add
adc
sub
ljmp
and
test
ret
push
push
cmp
cwtl
push
and
jo
xor
add
movsb
in
jo
xchg
or
mov
fistl
es
sub
mov
or
dec
into
jmp
fstl
xchg
adc
aas
dec
sbb
jg
js
add
xchg
cltd
cld
add
and
int3
les
outsb
pop
mov
xchg
outsl
sti
or
xchg
mov
fsubrs
lock
clc
stos
inc
push
pushf
out
test
int3
lcall
popf
mov
icebp
add
mov
fnstcw
negb
cmp
pop
xor
arpl
mov
mov
inc
xchg
sub
fmull
sbb
cmpsl
rclb
sbb
cli
mov
inc
adc
test
jle
outsb
repnz
fldt
mov
es
adc
shl
or
mov
pusha
or
mov
pop
jae
jp
aaa
mov
push
or
and
xchg
jg
insb
rcll
dec
fmul
or
jbe
getsec
cmp
pop
loop
dec
jnp
fisubrs
movsb
pusha
jg
add
xor
cmp
cmp
pop
aas
xor
insl
shrl
add
or
lcall
mov
sub
js
ljmp
aas
and
cwtl
xchg
lahf
sub
fiadds
jecxz
inc
je
repnz
inc
loope
jg
mov
stos
mov
lea
inc
or
adc
cld
pop
lods
mov
cmp
push
adc
adc
iret
icebp
xor
push
jae
mov
addb
mov
fdivs
stos
push
inc
arpl
add
int
jae
mov
stos
xor
cmp
jg
mov
cmp
and
inc
inc
insl
pop
out
les
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
rolb
xor
jl
dec
in
and
add
mov
ret
xchg
push
cmpsl
xchg
pusha
sbb
lock
mov
gs
mov
mov
add
fs
jmp
sti
in
or
jecxz
push
fwait
push
mov
repz
xor
sub
jge
lods
sbb
or
test
adc
orb
push
insl
not
hlt
mov
adc
repnz
lret
mov
or
in
or
jg
xchg
fidivrs
mov
xchg
hlt
stc
sbb
pop
jge
call
or
test
mov
stos
fs
hlt
add
stc
test
js
jnp
ds
popf
int
push
cmp
and
clc
std
lods
stos
sub
ret
mov
push
push
out
pop
jo
pop
and
cs
adc
fidivrs
push
mov
sub
fstps
sub
push
or
push
pushf
test
push
fstpt
add
shrb
movsb
mov
hlt
fisttpll
dec
xor
iret
bound
cmp
mov
ret
inc
cwtl
into
mov
outsb
stc
into
out
xchg
xchg
js
push
popa
icebp
aad
or
into
std
xor
clc
pop
xchg
repnz
push
mov
mov
or
in
fwait
std
adc
mov
pusha
aaa
loop
stos
mov
int3
in
sub
add
dec
and
iret
xor
data16
sub
xor
jmp
lret
js
xchg
mov
sti
sub
icebp
cld
arpl
test
test
jnp
push
pop
ret
movsl
imul
loope
mov
mov
test
iret
stos
lock
sbb
das
mov
out
dec
ja
and
lahf
sbbb
shl
repnz
add
dec
push
jae
int
and
ljmp
inc
fldt
cld
pop
into
fisttpll
push
push
mov
adc
cmp
add
add
int3
mov
jo
xchg
jmp
push
test
mov
xor
jl
xchg
jg
jnp
mov
mov
mov
lcall
and
or
push
mov
lods
sarl
dec
mov
jge
mov
mov
sti
mov
jnp
or
lea
inc
add
flds
push
jmp
sub
popf
inc
es
insb
lods
jmp
ja
cmovl
test
adc
outsl
test
jbe
inc
fiadds
test
xchg
or
fstpt
cmc
int
aad
out
push
mov
xchg
jb
lret
arpl
shlb
dec
dec
popa
js
sbb
test
test
fsubp
jns
cmpsb
xchg
mov
arpl
xchg
adc
repz
xchg
sbb
and
dec
cs
sahf
repnz
fidivl
out
mov
inc
lods
mov
xor
dec
mov
in
and
and
and
and
aas
std
mov
or
subb
push
push
adcb
test
stc
sbb
mov
sub
mov
xchg
fildl
popf
mov
ja
cmp
mull
jae
movsl
insb
and
inc
ljmp
je
lods
dec
lret
ret
jns
push
out
mov
or
push
adc
jp
mov
into
pusha
mov
je
sub
adc
xchg
mov
xor
clc
rorb
lds
jo
adc
push
cmc
sbb
lret
out
popf
push
test
mov
jns
or
push
in
loopne
mov
add
pop
stc
dec
adc
call
push
mov
das
cmp
in
sar
jg
push
test
cmpsb
notl
sub
int3
and
sub
add
inc
sub
fsts
add
push
adc
xchg
jge
in
cmp
fwait
push
test
push
cbtw
add
das
test
imul
cli
stc
inc
push
mov
xchg
and
imul
pop
xor
popa
das
jp
dec
push
mov
and
add
xor
fisubrs
pop
shlb
sarl
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
es
sarl
jl
leave
dec
outsl
mov
scas
fistl
inc
insb
dec
adc
dec
pushf
inc
addr16
fsubl
cli
movsb
lea
mov
pop
and
cmp
ds
and
pop
push
sbb
rol
and
mulb
notb
cmp
or
xlat
push
iret
stos
icebp
rol
pop
in
and
jno
stos
adc
or
adc
repnz
sub
ret
pop
ficoml
ss
push
mov
out
gs
pop
inc
inc
test
insl
call
sahf
lds
xchg
addr16
xor
sahf
ds
jmp
insl
loope
cs
mov
leave
repz
pop
fisttpl
imul
adc
xor
xor
dec
repnz
mov
stos
sbb
popf
movsb
mov
or
nop
mov
mov
scas
stc
lahf
pushw
fisttpll
add
mov
ficoms
pop
adc
lods
push
lcall
int3
xchg
in
mov
mov
mov
or
clc
xor
inc
rol
sahf
push
pusha
mov
inc
orl
jmp
ret
cmp
mov
mov
outsl
xchg
hlt
mov
ffreep
dec
mov
xor
inc
popa
pop
sbb
dec
dec
cmp
xchg
xor
add
loope
and
push
shll
jae
shlw
mov
rolb
cmpsl
add
je
jbe
in
repnz
test
sub
rcll
or
inc
mov
jnp
cli
int3
shrb
inc
ja
mov
test
jb
inc
push
ja
pop
rcrb
adc
ja
pop
and
repz
cmpb
sub
or
movsl
nop
inc
inc
inc
or
lret
movsl
lods
and
jge
adc
sbb
cmpsl
mov
into
ljmp
adc
and
inc
push
popa
aaa
pop
cmc
cmp
scas
dec
lret
jno
sbb
xor
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
push
mov
jl
jns
jl
jno
mov
cmpsb
sbb
flds
mov
out
xor
mov
lods
loop
cmpsl
insb
stos
pop
jno
dec
jae
iret
inc
incb
jp
xor
or
sahf
shll
add
pop
dec
mov
sbbl
lret
cmpsl
cld
in
in
loope
sbb
sbb
or
jno
push
aad
stos
cld
cmp
cmp
sarb
iret
and
pop
cmp
jg
imul
sub
out
push
lea
jle
jnp
lds
sahf
fildll
inc
insw
imul
dec
xchg
inc
jl
addl
jge
xor
push
popf
mov
test
sbb
lret
mov
xchg
mov
mov
mov
dec
lret
loopne
or
pop
push
dec
in
inc
sbb
imul
bound
inc
lea
andb
nop
dec
insb
cmp
pushf
xchg
cmp
sbb
jmp
test
mov
xchg
add
cltd
inc
xor
test
cmp
pop
adc
sbb
ja
lock
ja
rorb
xor
jb,pn
xor
pop
or
add
ret
out
inc
sub
iret
sub
cltd
mov
inc
inc
pop
hlt
sbb
mov
add
outsb
repz
inc
lods
test
pop
inc
or
pop
dec
ss
cmpsb
pop
out
std
iret
mov
inc
dec
lcall
imul
and
lock
mov
int3
outsb
cmpl
mov
or
inc
add
lret
push
inc
push
bound
cmp
mov
xor
push
sub
dec
icebp
jp
push
inc
jne
addr16
mov
out
add
jecxz
int3
pop
scas
outsb
mov
fstpt
or
pop
orl
loope
inc
mov
pop
cmp
and
push
outsb
sbbl
sub
mov
mov
sub
mov
shrb
sbb
xchg
mov
mov
push
clc
das
sti
out
mov
push
xor
push
es
mov
imul
ja
jmp
dec
ficomps
stc
cld
fwait
or
adc
mov
mov
cs
mov
push
ret
pusha
ds
ret
mov
fs
mov
mov
pop
aas
sar
nop
cld
mov
movsb
fwait
inc
jmp
jo
dec
lea
add
test
dec
int3
lds
fldenv
or
aaa
pop
adc
jl
scas
cs
add
push
shll
add
or
jl
sbb
movsb
in
lods
fcoml
inc
cwtl
add
sbb
xchg
ret
icebp
sub
jno
cmp
arpl
cmp
jnp
inc
stc
mov
xchg
mov
xor
rorl
sbb
std
fwait
pop
push
mov
inc
lods
jo
in
sub
fdivrl
inc
fadds
add
add
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
decl
and
dec
jl
xlat
jns
jl
fs
test
dec
notb
dec
orl
dec
and
hlt
inc
sub
and
je
and
pop
repnz
pushf
xchg
lcall
insl
nop
in
fnstenv
jmp
or
adc
pop
mov
cli
pop
daa
pop
pop
iret
loopne
std
fstpt
push
jl
outsl
mov
fs
jnp
push
pushf
mov
test
cld
mov
bound
xchg
pop
push
jb
mov
les
push
adc
fldl
and
inc
dec
jb
stos
pop
or
push
mov
or
mov
int
jmp
aaa
aad
aad
jo
inc
jne
ljmp
jmp
dec
jno
cs
mov
sarb
nop
aaa
out
cmpsl
fwait
lret
cwtl
icebp
sbb
add
arpl
add
repz
sarb
sbb
cli
dec
shrd
in
add
call
mov
adcb
ffree
xchg
push
lahf
xchg
pushf
in
frstor
imul
push
add
xor
pusha
sbb
call
pop
cmpsb
ja
sahf
xchg
enter
jnp
push
test
fsts
push
push
xor
or
imul
adc
clc
inc
add
cmp
lret
outsl
xchg
sub
scas
mov
adc
pop
stos
popl
mov
arpl
movnti
adc
inc
icebp
cmpl
push
inc
dec
pushf
push
loope
jl
or
mov
pop
fs
insb
out
or
and
add
imul
pushf
adc
dec
outsb
inc
and
xor
dec
aam
sbb
push
repnz
outsb
sbb
mov
movsl
cmc
repz
sahf
mov
sti
addr16
sahf
sbb
cltd
out
sbb
mov
push
icebp
pop
fadds
sbb
aam
fdivp
push
add
inc
xchg
dec
fsub
push
xor
pop
imul
mov
jge
hlt
mov
pop
or
add
data16
lahf
cwtl
xchg
stos
mov
arpl
popf
test
es
sub
pop
repnz
pusha
and
dec
ja
movsb
out
xor
cmp
pop
inc
xor
nop
sub
mov
dec
iret
lahf
add
xchg
in
adcl
movsb
cltd
push
xchg
push
dec
nop
scas
dec
dec
mov
xchg
or
scas
or
and
test
arpl
push
xor
push
nop
in
mov
pop
xchg
jecxz
std
cmpsb
dec
mov
adc
push
mov
sub
ljmp
into
lahf
mov
scas
push
cmp
mov
repz
xchg
in
stc
mov
adcb
sub
ljmp
or
xchg
fsubl
xchg
push
pop
fnstsw
jge
push
add
mov
cwtl
or
inc
mov
fildl
cltd
lret
loop
shrl
je
push
push
stos
cmp
add
add
scas
sub
push
cwtl
jb
insl
enter
lods
push
push
repz
lahf
cmp
outsl
jmp
bound
cli
lcall
ss
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
jp
ss
enter
jns
jl
mov
push
xchg
push
xor
mov
aas
les
lock
cmp
add
movsl
jmp
pop
inc
int
and
insl
stos
into
lods
inc
rclb
sbb
fwait
mov
push
xor
jae
push
or
sahf
scas
jmp
adc
inc
les
xchg
or
inc
dec
add
xor
dec
jmp
push
pop
rcll
jp
or
repnz
or
stos
cmp
pop
loopne
lock
sbb
shrb
lahf
or
push
and
xor
negb
loop
stos
xchg
xor
mov
lret
insb
in
jbe
loop
jge
out
pop
dec
xor
enter
decl
lret
xlat
mov
jg
or
outsl
pop
das
xchg
and
jo
andb
xchg
xor
adc
lods
mov
lock
and
bound
xchg
stos
filds
decl
add
sbb
mov
movsb
jo
sbb
adc
mov
lds
pop
jne
sub
pop
push
js
fldl
mov
arpl
js
jb
push
lret
or
mov
cwtl
push
lds
js
shrb
addl
mov
pop
push
insl
repz
fdivs
add
jns
cmp
adc
xor
pavgb
lods
movsb
pop
dec
xor
pop
rorb
andl
sub
add
and
gs
and
dec
and
sbb
ret
loope
leave
addr16
mov
lahf
loope
push
shll
inc
movsb
mov
mov
pop
or
xchg
cmp
cmpsl
cmpsl
dec
scas
aaa
mov
mov
icebp
andb
outsb
int
cmp
dec
cmp
shl
dec
lret
fdiv
fwait
sbb
push
roll
adc
xchg
jp
or
out
enter
loop
inc
adc
jl
stos
mov
fidivs
orl
mov
lds
inc
sbb
cmp
pop
in
push
push
sbb
outsb
andl
mov
pushf
cmpsb
es
es
mov
jle
mov
mov
pop
stc
sbb
fcomps
ljmp
ds
sbb
push
shlb
cmpl
jbe
outsb
incb
out
hlt
inc
xchg
push
popf
and
mov
xchg
pop
loope
fnsave
shlb
fisubs
cmp
pop
fdivl
cmc
push
cmp
cmpsl
popf
lret
jne
xchg
mov
sbb
inc
mov
mov
pusha
lret
mov
sub
and
aad
je
cmp
lcall
dec
cli
aad
sbb
jmp
insb
jle
pop
inc
sub
or
imul
inc
sbbb
aam
std
imulb
out
fstl
push
pop
jnp
andb
push
inc
sbb
hlt
fstpl
call
dec
out
out
movsb
divb
xchg
fisubl
push
and
sub
ljmp
roll
ds
fiaddl
jo
xor
pop
aaa
inc
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
pop
and
sub
jl
xlat
jns
jl
out
ficoms
mov
mov
das
cmpsl
cmp
in
add
andb
pusha
jo
add
inc
lahf
fildl
loopne
nop
out
cs
adc
adc
fimuls
fistl
leave
testb
mov
jecxz
mov
or
jge
adc
jmp
push
mov
int
test
inc
pop
cmp
xor
hlt
out
scas
test
pushf
pop
das
or
mov
mov
loop,pn
jno
and
mov
sbb
mov
add
and
pop
mov
icebp
and
push
jmp
jnp
shrb
fsubl
outsl
or
outsl
repz
xchg
dec
aaa
insb
pop
or
lods
mov
jmp
loopne
and
cmpsb
mov
cmp
or
sbb
fldcw
sbb
jno
rclb
insb
lea
jae
int3
mulb
outsl
lods
pop
inc
outsb
shl
xor
xor
cmp
push
pop
dec
sbb
inc
mov
pop
inc
or
popa
adc
sbb
mov
fsubrl
shlb
push
pusha
pop
and
in
addr16
jae
addb
test
cs
cmp
xchg
pop
outsb
or
dec
push
insl
fldenv
dec
mov
jmp
mov
popa
jno
insl
rcll
add
cld
xor
push
push
xchg
xor
jl
lods
add
cmp
xorl
in
xchg
setge
fs
scas
lea
push
mov
arpl
sbb
pusha
sti
pop
xchg
sbb
out
aas
jmp
cmp
daa
inc
jns
push
test
cld
int3
enter
sub
test
test
lds
sahf
leave
jno
cmp
lods
idivl
add
xchg
testl
sti
jnp
leave
rorb
insb
xor
sahf
xlat
es
or
pushf
cmp
mov
sub
test
jae
adc
mov
sbb
inc
mov
cmpsl
mov
sbb
push
mov
ljmp
fcoml
dec
leave
sti
clc
movsl
add
cmc
push
sbbb
loopne
daa
aam
xchg
ret
inc
movsb
xchg
inc
leave
fwait
cmp
push
xor
popf
inc
lea
push
pop
or
xor
lods
data16
jle
pop
mov
idivb
and
clc
movsl
or
mov
rcrb
ficoml
sbb
jns
lahf
xor
dec
adcl
shll
outsb
fnsetpm(287
lods
jo
add
rcll
hlt
inc
fwait
mov
pop
mov
jl
sub
and
dec
mov
sub
push
inc
mov
sbb
lcall
ja
cmpsl
jno
inc
jmp
rcrb
xchg
push
jl
cmpsl
lahf
inc
add
popf
mov
in
sub
xchg
inc
xchg
pop
pusha
or
and
sub
pushf
push
dec
jb
jno
shll
dec
test
stos
rcll
pop
or
cltd
push
lahf
sub
xor
rorl
sahf
clc
mov
mov
cmp
jmp
cwtl
mov
mov
or
sarl
jns
jl
lea
popa
xchg
cmc
mov
pop
sbb
into
out
pop
and
xchg
fwait
imul
test
pop
aad
xchg
nop
jmp
into
in
in
jle
xor
hlt
pop
int3
je
cmc
lret
or
xor
xor
hlt
dec
shll
je
dec
out
mov
mov
insl
test
cwtl
or
mov
cmp
outsb
jno
in
mov
cmp
push
sbb
pop
jecxz
subb
ja
lret
add
out
test
dec
pop
fidivl
add
aas
es
or
subb
jecxz
daa
cmpsl
jmp
sbb
jns
mov
adc
xchg
sub
push
repz
pop
mov
dec
test
ljmp
loopne
inc
push
sub
cmp
rolb
inc
xchg
sub
jp
aas
sbb
or
xchg
ja
enter
rol
inc
outsl
in
scas
and
pushf
sti
add
cmp
popf
fsub
movsb
cmpsb
add
cwtl
push
lea
pop
push
pop
and
or
test
outsb
insb
pop
cmovle
arpl
or
test
sub
shrl
out
sahf
clc
cmp
push
pop
and
add
or
movsl
or
mov
push
and
mov
cmp
cmp
mov
xchg
adc
out
mov
lret
testb
aad
inc
xchg
gs
rol
es
in
lahf
adc
or
adc
push
mov
or
sahf
ss
or
sti
cmp
adc
add
adc
lods
or
sbbb
cmpsl
mov
imul
sub
pop
test
mov
cmp
scas
xor
pop
sbb
cmp
pop
into
inc
and
in
xor
mov
lcall
pop
mov
cmp
rcll
insl
cs
cmp
sbb
in
popf
popa
lock
dec
adc
int
out
adc
cmp
mov
push
mov
out
cmp
mov
cmpsl
stos
jp
mov
add
dec
xchg
out
dec
ficompl
jb
dec
in
setle
ljmp
pop
add
roll
push
ljmp
mov
test
mov
mov
jge
or
mov
jecxz
sub
mov
fidivs
in
sbb
les
cwtl
push
pusha
push
outsl
inc
pop
xchg
jns
cmp
cmpl
jl
imull
sbb
sub
pushf
ret
int
pop
dec
ret
enter
mov
and
jae
jb
push
iret
notb
insl
es
push
lcall
in
ret
xor
sbb
or
xchg
mov
and
lods
incl
repnz
rcr
pusha
mov
enter
jmp
addr16
sbb
inc
mov
mov
sbb
in
jmp
mov
std
rcl
fnstcw
aad
pusha
fwait
dec
fwait
cmp
scas
pop
jbe
push
xchg
test
sub
fmuls
test
inc
in
or
jno
add
pop
jns
fs
add
push
sbb
fisubrl
jl
jns
jl
xor
push
jge
push
mov
and
and
in
and
orl
scas
mov
mov
mov
jbe
cltd
jmp
xchg
push
cmpl
inc
lahf
pop
cmp
mov
pop
jae
ss
xchg
or
adc
inc
test
sub
out
js
xorb
mov
test
test
mov
aad
cmp
xchg
mov
insl
push
fs
pop
xor
loope
mov
mov
cmpb
ret
or
test
fdivp
pop
shrb
sbbb
push
shll
call
mov
cmp
idivl
mov
loopne
rorb
cmc
xor
jge
or
jmp
mov
xchg
imul
in
adc
mov
icebp
iret
dec
ficompl
adcb
xchg
idivl
enter
sarl
in
mov
in
push
repz
cmp
or
cmpsl
pop
xchg
ljmp
out
lods
cmpsb
sahf
pop
addr16
in
jp
shrb
xchg
ja
add
ja
ljmp
pop
ffreep
rorl
addb
ret
jnp
in
or
data16
jle
das
cmpsb
xchg
mov
or
rorl
push
push
pop
cmp
out
or
and
out
fldenv
aam
std
inc
mov
jp
add
push
cmpsl
pop
les
and
mov
sub
add
push
push
push
loopne
xlat
mov
mov
in
hlt
pop
call
lahf
or
push
inc
test
test
add
shrl
hlt
mov
mov
mov
mov
inc
leave
scas
push
aas
sub
out
fmul
pusha
mov
mov
xchg
xor
dec
mov
pop
shlb
fldenv
sbb
or
inc
pop
insl
xor
push
push
insl
out
mov
dec
pop
mov
pop
pop
pop
movsb
loopne
pop
mov
inc
lock
xor
mov
sbb
icebp
enter
xchg
push
push
dec
je
inc
mov
ret
xor
popa
ja
ss
or
imul
aam
jns
decl
and
sbb
jg
mov
mov
into
fsub
ss
dec
sbb
pop
cwtl
cmp
lret
into
xchg
mov
mov
push
test
sub
sub
jl
jge
mov
movsb
pop
dec
sbb
fimull
mov
leave
scas
mov
fsubl
adc
adc
adc
pushf
cmpsb
xchg
stc
or
pop
mov
add
mov
or
cmp
push
add
fsqrt
js
and
mov
inc
mov
fstl
cs
cmpsl
dec
hlt
sub
in
mov
mov
mov
and
ret
jae
js
mov
push
sub
pushf
and
filds
int3
not
jl
push
and
pop
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
push
imul
xor
jl
xlat
jns
jl
icebp
daa
or
sub
stc
sti
imul
int3
aas
mov
mov
repnz
pop
cmpsl
mov
fimuls
in
leave
cmpl
sub
dec
push
pusha
das
leave
mov
adc
adc
pop
test
jbe
push
inc
xchg
scas
xchg
mov
test
shr
lret
into
mov
test
push
in
add
add
in
rcll
push
add
xchg
xor
xchg
cmp
add
loopne
nop
filds
jge
insb
xor
std
xchg
jge
jbe
adcl
cmpsl
ljmp
push
aaa
iret
mov
pop
sti
inc
rclb
adc
mov
dec
jbe
mov
add
xchg
outsl
mov
sarb
mov
daa
insl
or
pop
adc
cmc
daa
adc
cmp
cmpsl
sbb
sbb
ja
inc
push
and
fistps
into
xor
jecxz
mov
icebp
sbb
pop
add
lea
pop
xchg
push
ljmp
divb
pop
mov
fdivl
imul
pop
icebp
lahf
xor
or
mov
loop
insb
cs
inc
cmc
push
lcall
xchg
pushf
mov
insb
mov
xor
xchg
loopne
pop
stos
shlb
mov
bound
sub
inc
out
inc
jecxz
inc
mov
sbb
scas
adc
cmc
push
jge
dec
push
mov
mov
mov
xchg
and
mov
ret
xchg
mov
add
jnp
jae
jnp
push
or
lods
mov
mov
js
stos
lods
inc
jle
and
test
loopne
dec
lea
jl
std
push
fwait
mov
sub
movsl
mov
jae
mov
pusha
out
mov
bnd
mov
nop
xchg
xchg
mov
mov
loop
in
mov
inc
pop
fwait
hlt
push
xor
ret
jnp
out
punpckhwd
in
imul
loopne
insl
nop
scas
and
std
pop
mov
xor
push
adc
push
bound
mov
lods
fsubrl
xor
adc
js
lds
das
ret
pop
ljmp
mov
decl
sti
in
outsl
xchg
pop
int3
outsb
lods
popf
mov
fiadds
push
shlb
test
dec
and
in
pop
icebp
jns
dec
lods
pop
xor
leave
mov
stos
int
cmp
int
xor
mov
repz
jb
xchg
xor
es
mov
lds
jbe
jge
xor
push
lods
adc
movsb
and
jb
iret
mov
xchg
fsincos
lret
daa
daa
mov
inc
dec
negb
mov
and
in
jmp
dec
or
add
adc
add
adc
cs
mov
adc
sub
mov
into
xchg
jmp
fucomip
xor
in
pop
dec
aas
aaa
gs
pop
jg
jg
adc
push
push
xor
push
sub
sbb
adc
gs
push
insb
stos
rcr
cmp
add
adc
cs
arpl
test
icebp
cmp
std
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
inc
cmpsb
std
xchg
fstpt
jns
jl
inc
xchg
push
push
lcall
adc
loop
cmp
push
mov
add
loope
push
lds
sub
jmp
pop
pushf
jo
ret
in
inc
dec
mov
mov
stos
jmp
je
inc
js
mov
aaa
daa
jae
cmp
and
xlat
imul
mov
das
dec
in
jo
je
sbb
dec
movsl
add
pop
cmpsl
mov
fdivs
daa
sar
and
pop
push
jno
inc
mov
aas
jbe
les
stc
push
mov
sbb
fnstcw
icebp
enter
clc
test
arpl
orl
push
mov
sub
hlt
xor
repnz
mov
add
pop
repz
push
mov
stos
lret
rorb
mov
pop
pop
fidivl
lds
mov
lahf
xor
js
sub
add
jbe
arpl
in
rclb
repz
test
pop
add
or
xchg
inc
jbe
lock
and
clc
notb
loop
xor
bswap
rcrl
adc
cmpsl
dec
mov
sub
rcrb
iret
mov
jp
or
aad
xchg
mov
inc
fcomi
push
cltd
dec
gs
mov
inc
mov
shrl
xchg
mov
cmp
loopne
test
mov
into
icebp
jg
ds
std
or
xchg
push
inc
mov
mov
pop
test
or
or
push
test
mov
out
jb
lods
pop
xlat
sarl
neg
xor
std
imul
ret
xor
std
push
fdivrl
push
fildl
iret
and
fsubs
je
pop
ja
inc
pop
cmp
rep
lock
ret
lods
stos
repz
dec
pop
sbb
push
testl
imull
xchg
mov
adc
sub
repnz
push
cmpb
inc
scas
movd
ljmp
mov
mov
unpcklps
mov
dec
and
jecxz
cmp
cmp
ljmp
aam
ljmp
push
add
pop
adc
add
xor
imul
mul
jmp
rclb
cmp
jne
ficoms
xorl
pop
cwtl
xorb
clc
in
push
pop
jecxz
dec
repnz
test
xor
leave
ljmp
adc
jle
cmpsb
popf
sbb
clc
fucomi
scas
pop
test
pop
aas
scas
pop
outsl
xchg
jae
popa
gs
ds
xor
push
push
pop
cmp
ret
inc
dec
cmp
clc
and
sbb
push
outsl
repz
sub
in
testl
or
out
data16
daa
pushl
jns
jo
xchg
dec
ret
mov
shrl
cld
subb
icebp
in
or
mov
repz
out
mov
fcmovne
mov
adc
push
mov
rorl
mov
aam
adc
clc
test
push
and
ja
mov
mov
mov
xor
jmp
inc
pusha
sub
sub
xlat
xchg
mov
in
jl
jns
jl
movsl
nop
inc
cmpsb
add
push
xchg
xchg
sahf
adc
push
jno
lcall
mov
xchg
pop
lret
in
jmp
sahf
jge
push
inc
mov
daa
add
mov
test
arpl
imul
xor
sbbl
and
imul
cs
test
mov
fs
sub
out
mov
mov
xchg
jne
push
jecxz
mov
lods
mov
jno
outsl
rcll
push
aaa
push
aaa
inc
dec
pop
mov
test
mov
xchg
addb
sti
or
dec
xor
sbb
adc
fidivrs
dec
push
nop
add
aaa
out
xchg
or
lret
lahf
imul
jmp
sahf
test
pop
sbb
icebp
sbb
arpl
add
xchg
sbb
insb
lret
std
ja
xchg
or
mov
cmp
xchg
mov
mov
mov
mov
push
mov
push
fsubrl
mov
cmp
add
and
xchg
out
dec
cs
jo
clc
inc
pop
repz
inc
out
dec
mov
push
sahf
mov
sbb
or
fldenv
cmp
mov
jle
jge
ficompl
insl
loop
jp
sbb
adc
mov
push
dec
push
inc
movsb
ret
shl
repz
jnp
insl
sti
mov
sub
pop
pop
movsb
mov
enter
out
int
pop
mov
sbb
xchg
sti
aad
dec
xlat
add
leave
addr16
in
jns
push
sbb
dec
repnz
or
insb
divl
fistpll
out
int
fldcw
das
fisubl
subl
insl
push
arpl
int3
adc
cmp
hlt
dec
inc
sahf
jle
mov
imul
sbbb
push
insb
outsb
add
push
pop
xlat
out
adc
and
lock
jl
stos
cmc
out
fistpl
repnz
push
add
cld
pop
add
movsb
mov
repz
inc
add
pop
ret
mov
push
mov
lods
sbb
insb
cmp
lret
add
ss
lods
sub
jle
addb
sbb
add
pop
jp
jg
xchg
xchg
mov
rcrl
sbb
or
xchg
jb
test
push
jecxz
dec
fstl
repz
add
jp
xchg
push
dec
jnp
add
int3
inc
rcrb
fnstenv
dec
push
fbstp
pusha
data16
ljmp
inc
pop
out
fisttpll
and
popa
dec
movsl
jl
cmp
cmp
adc
pop
lock
adc
cmp
mov
cmp
lods
jo
sbb
or
lock
stos
xlat
jae
mov
jle
jns
stc
lret
dec
mov
orl
loopne
mov
dec
js
xor
jp
mov
mov
mov
ret
xchg
add
movsb
pop
jo
jb
mov
iret
mov
imull
fmull
add
lahf
imul
mov
fistpl
push
cmp
dec
leave
adc
push
xor
jle
jp
imul
adc
add
imul
sub
jmp
or
jb
mov
push
sbb
lods
lods
loopne
jl
jns
jl
and
in
int
adc
out
cli
or
and
sub
outsb
fstpt
sbb
add
addr16
das
dec
push
or
sbb
nop
mov
cmpsl
sub
stc
lcall
xchg
adc
xlat
pop
gs
aaa
xor
mov
insl
pop
lods
dec
ss
jp
ret
and
xchg
adc
push
inc
stc
sbb
xorb
and
in
enter
push
dec
mov
cmp
fnstsw
insb
pop
lahf
xchg
mov
imul
icebp
inc
mov
lcall
add
cmc
and
xchg
arpl
movsb
xchg
inc
std
rclb
data16
push
repnz
fwait
clc
and
push
pop
lcall
in
adc
push
test
movsl
jb
mov
retw
mov
xor
jo
out
sub
je
sub
iret
arpl
dec
dec
push
fdivl
divl
and
cmp
inc
in
sbb
pop
jnp
insb
xchg
sbb
rclb
mov
inc
lcall
sub
pop
aaa
add
gs
mov
xchg
and
icebp
push
jp
dec
inc
cmp
xchg
imul
fidivs
mov
cmpsb
ret
fdivl
test
dec
mov
inc
xchg
cmp
jle
mov
insb
jmp
mov
in
xlat
insl
out
mov
and
stc
mov
cs
dec
mov
mov
out
mov
sbb
cmpsl
enter
sub
xchg
out
mov
xchg
imul
mov
jns
pop
test
mov
lds
int3
mov
mov
adc
int3
cmp
fstpl
add
xchg
sub
xor
cmp
loope
xor
jo
stc
or
leave
lds
xor
jmp
ret
repnz
dec
xor
cld
sbb
out
push
imul
dec
xchg
in
test
cmp
cmp
pop
pop
sub
shl
inc
mov
sarl
fdivrs
cwtl
aam
mov
mov
aaa
mov
push
adc
add
out
int3
push
les
mov
stos
lods
jp
mov
cmp
test
cmc
and
add
mov
lret
stc
jo
lock
or
push
adc
jbe
inc
mov
imul
repz
mov
cmc
scas
sahf
repz
adc
jb
and
xorl
test
sub
xor
lcall
mov
push
mov
imul
fisttpll
cmpsl
sahf
mov
fwait
cmpsb
mov
shrl
push
inc
mov
adc
add
outsl
sbb
out
mov
xchg
and
fildll
and
iret
pop
pop
sbb
shll
sbb
cmp
aas
in
or
dec
pop
jns
in
mov
adc
call
mov
ss
xchg
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
or
pop
sahf
in
jl
adc
ds
out
out
mov
es
shll
es
push
out
adc
sti
sub
dec
outsb
or
out
cmp
into
pop
jge
cmp
cmp
sahf
pop
cs
and
ja
cwtl
sarb
outsl
mov
imul
fistps
icebp
inc
inc
lret
sarl
jnp
shlb
stos
nop
xor
jl
and
icebp
das
cmp
mov
jns
icebp
mov
fxch
push
push
xchg
popf
xor
xchg
pop
into
pusha
push
mov
hlt
je
dec
in
mov
push
inc
pop
cltd
shr
xor
clc
push
dec
ljmp
and
aaa
cli
adc
dec
aam
jmp
inc
or
stos
adc
xchg
or
fimull
mov
sbb
cli
pop
ss
dec
stos
xor
xchg
mov
mov
dec
ljmp
addr16
je
pop
mov
imul
pop
stos
dec
insl
adc
mov
aaa
lret
sbb
pop
inc
and
orl
push
adcl
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
inc
mov
jl
jg
jl
movsb
mov
leave
dec
dec
test
cmp
mov
mov
pop
jb
xchg
lcall
mov
adc
inc
adcb
xchg
push
fimuls
or
std
movsb
arpl
bound
dec
and
aam
push
inc
pop
mov
imul
pop
lret
gs
shll
fwait
es
iret
lods
sarl
xor
or
inc
movl
mov
rcll
cmp
dec
xchg
jg
aaa
pop
push
mov
lock
ss
dec
cmp
into
stos
sub
test
jecxz
ss
pop
adc
cmp
rcr
ss
push
adc
movsl
bound
mov
dec
xor
out
sub
sbb
adc
lea
mov
fadds
pop
mov
jnp
scas
adc
push
xchg
mov
mull
in
mov
testb
testl
mov
push
mov
pop
jae
xchg
pop
jns
cmp
add
xchg
add
add
test
add
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
jmp
jo
dec
out
jl
adc
mov
cmp
adc
lea
push
out
mov
adcl
pop
call
fwait
ret
outsb
ljmp
rcrb
loope
dec
int
roll
jne
pop
dec
ror
outsb
pushf
cmp
sahf
mov
push
mov
testl
sub
roll
cld
mov
adc
sahf
lods
jns
cmpsb
mov
lods
sbb
cmp
pop
push
adc
lods
or
mov
movsl
jnp
in
insb
mov
sti
add
push
fmuls
or
xor
cmp
jmp
fucomi
cmp
sbb
cld
cmp
in
sbb
xor
dec
fmul
imull
cltd
jne
mov
int3
mov
mov
cmp
xchg
mov
ret
aam
adcb
push
or
cmp
stos
out
dec
mov
adc
int3
sub
sbb
shrl
jp
stos
jno
test
lea
pushw
xor
xor
sub
movb
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
out
jl
lret
jl
outsb
insl
popf
popf
cwtl
mov
hlt
outsl
testb
lods
xor
mov
sub
mov
adc
mov
fcoms
test
jae
pop
xchg
outsl
add
pop
inc
dec
dec
adc
incb
sbb
mov
lods
xchg
and
cmp
shlb
roll
popf
xor
mov
mov
mov
jp
enter
add
fildl
cwtl
pop
or
or
cmpb
add
dec
std
push
mov
adc
jno
lret
das
hlt
add
mov
into
xchg
ret
enter
dec
inc
cmp
scas
fsubs
sti
dec
mov
out
or
movsb
jns
sbbl
sbb
inc
push
xchg
push
push
sub
mov
lret
outsl
and
jae
adc
mov
pop
enter
mov
lods
into
jecxz
push
ret
add
dec
inc
call
aaa
push
push
xor
testl
cmpsb
and
arpl
mov
mov
and
pop
jmp
jl
or
xor
icebp
lret
test
add
mov
jle
pop
outsb
cltd
das
int3
imul
mov
stos
subl
dec
aam
mov
or
cmp
mov
out
mov
daa
dec
shlb
pop
dec
mov
pop
cs
mov
leave
cmc
inc
and
push
jle
int
and
mov
rolb
jecxz
lahf
mov
add
push
stos
lcall
xor
in
icebp
fsubs
xchg
mov
push
pop
out
xchg
push
leave
jo
clc
or
pusha
cmpb
mov
bound
jae
dec
rclb
mov
shlb
mov
aad
cltd
popa
js
cmp
pusha
rcrl
lret
out
xor
icebp
jnp
cs
xchg
es
nop
fucom
cmp
lods
pop
mov
ljmp
bound
stos
loopne
dec
lods
xorb
sbb
xor
pop
loope
je
cmp
jbe
test
add
adc
test
dec
test
mov
aaa
mov
and
mov
addl
sub
push
dec
in
stc
xchg
push
pop
add
insl
dec
cltd
mov
fisttpll
push
sub
or
jbe
dec
repz
and
or
inc
push
jl
fcomp
lock
pop
aad
leave
push
push
out
lea
popf
jbe
leave
mov
fwait
mov
mov
add
imul
mov
xchg
and
xor
adc
xchg
mov
mov
mov
mov
dec
cs
dec
bound
xchg
jbe
jg
pop
sbb
mov
lahf
push
mov
pop
std
xchg
pusha
daa
jbe
das
mov
push
ss
mov
outsb
mov
or
outsl
mov
cmc
push
imul
xchg
push
xchg
subb
jg
sub
test
adc
pop
adc
mov
cli
movb
inc
inc
loopne
push
fcoms
sub
inc
int3
cmp
and
inc
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
cmpsb
sti
add
ljmp
dec
mov
push
xor
push
xor
jnp
ljmp
das
push
dec
add
sbb
orb
int
repz
ss
test
int3
adc
pop
fstl
sbb
sbb
neg
sub
jmp
loop
lods
and
mov
or
xchg
cli
arpl
out
pop
xchg
and
cmp
cmp
insl
xchg
mov
mov
mov
js
js
clc
jmp
adc
ret
aad
bound
cltd
into
notb
add
or
jne
and
fists
pop
mov
fsubp
sub
cmp
out
push
into
sbb
outsb
pop
rep
shll
cmp
decb
neg
out
ja
pop
clc
xchg
dec
jb
xor
add
push
or
mov
jns
imul
pop
hlt
aam
dec
pop
mov
lds
imul
daa
inc
inc
xchg
mov
shll
pop
mov
push
nop
pop
jnp
or
xor
aas
je
stos
rclb
or
das
jne
dec
push
adcb
jecxz
test
inc
lcall
mov
xor
inc
cmp
jo
outsb
xor
push
mov
mov
shlb
ss
push
outsb
sub
insb
mov
jp
xchg
fldenv
test
shr
call
js
adc
mov
inc
stos
inc
cmp
mov
adc
mov
push
sub
fidivl
push
jbe
insl
fdivp
pop
lock
xlat
sbb
mov
add
js
add
mov
cld
cmpsl
arpl
mov
jbe
cmp
cmp
xor
in
cwtl
or
jmp
or
mov
xchg
jge
clc
inc
and
xor
nopl
sub
xor
hlt
ljmp
out
movb
inc
push
xchg
fcmovne
aam
cwtl
xchg
sub
loop
lret
movsl
das
mov
dec
pop
call
xor
fdivs
jne
sub
in
inc
mov
xor
jbe
push
inc
sbb
div
aaa
push
sahf
mov
cmp
and
fwait
push
push
loope
xor
test
sub
adc
lds
sub
sti
repz
push
dec
testb
out
rcrl
test
push
lret
fisubs
imulb
fisubrs
and
fisubs
in
push
lods
lahf
cmpsl
and
cmpsb
sti
xchg
mov
and
out
and
mov
lods
jb
jb
mov
push
push
jbe
dec
test
sub
or
mov
jae
call
xor
mov
sbb
cwtl
fiadds
inc
imul
mov
dec
sbb
push
out
jbe
inc
xchg
adc
inc
jno
pop
sub
aam
bound
jle
lock
pop
fisubl
xor
insb
mov
test
sbb
xchg
dec
sbb
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
sarl
idivl
jns
jl
ss
mov
hlt
mov
add
jb
adc
repnz
xchg
pop
andnps
add
insl
push
mov
repz
mov
movsl
loop
flds
jbe
hlt
sti
xchg
fildll
push
pushf
std
mov
sbb
pop
cli
mov
aam
add
inc
mov
inc
push
xor
fwait
mov
xchg
add
push
rolb
mov
and
ljmp
lahf
in
jns
cmp
enter
rorl
pop
xchg
jp
mov
repz
xchg
faddl
mov
dec
xchg
pop
push
test
mov
pop
test
in
int
jmp
xor
pushl
dec
lea
leave
xchg
add
mov
push
and
push
sbb
add
loope
adc
push
out
pop
pop
inc
mov
call
repnz
sbbl
imul
sbb
int3
mov
pushf
dec
loope
add
jno
add
test
test
leave
mov
cltd
jecxz
loope
enter
pop
cwtl
mov
sti
repnz
dec
mov
cs
aad
xchg
cli
push
adc
sbb
mov
orl
addl
jg
adc
pop
or
dec
in
sub
cmp
mov
add
mov
inc
lret
pop
roll
adc
inc
cmc
mov
pop
sub
jne,pn
rcrl
neg
shrb
fidivrs
xchg
out
test
add
cmp
push
mov
jmp
sbb
fldcw
stc
aaa
pusha
mov
jnp
cmp
sbb
mov
cmp
xor
cwtl
jb
mov
pop
jbe
inc
int3
push
xchg
nop
popf
ret
sti
push
sub
cmp
adc
mov
cwtl
iret
cmc
fsubrl
arpl
pop
pop
in
cmp
adc
sbb
scas
push
mov
fistl
aam
cmpb
sub
out
scas
and
push
ret
mov
pop
or
mov
daa
rep
pusha
sbb
cmp
xor
and
test
and
orb
sub
lcall
data16
mov
push
cmp
and
lock
cmp
inc
scas
pop
push
repz
std
xor
dec
pop
fimull
pusha
jmp
gs
stos
mov
mov
push
lods
pop
push
paddusb
mov
ss
mov
adcl
fmull
mov
dec
ja
std
int
and
xor
enter
xchg
ds
and
ret
add
xchg
fcompl
pushf
repz
mov
aam
and
loope
insb
incb
sub
push
jg
stc
jmp
lcall
fidivl
pop
sbb
cmp
pop
sbb
mov
mov
sbbb
cld
ljmp
add
mov
and
test
sub
mov
scas
test
cltd
out
in
inc
xlat
lods
aad
push
imul
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
xchg
xchg
xor
addr16
lret
jl
xchg
dec
inc
add
mov
lahf
test
popf
adc
lods
jecxz
movsb
popf
ja
int3
push
sahf
or
cmpb
mov
sbb
pop
sbb
push
fldl
and
xor
adc
cmp
push
shrl
data16
roll
sbb
jmp
cwtl
idivb
xor
ja
mov
pop
jns
adc
loope
hlt
lret
das
lods
pop
pop
xor
icebp
xchg
loopne
cli
mov
jg
call
and
and
cld
mov
push
sbb
sub
mov
push
out
movsb
test
and
sti
sub
out
call
xor
rcl
xchg
dec
in
in
aad
adc
and
sub
push
xor
aaa
mov
in
les
cld
loop
cltd
jmp
test
sub
out
je
lods
jb
jmp
sbb
pop
sub
orb
loope
pop
mov
jo
rol
dec
xor
jecxz
adc
push
mov
pop
inc
pop
ds
mov
repnz
mov
sub
sub
mov
cmp
xor
shlb
outsl
movsl
inc
or
loope
out
clc
lods
out
out
inc
lret
mov
pop
jns
mov
push
clc
sbb
inc
imull
mov
mov
inc
mov
jmp
mov
pushf
pop
mov
in
mov
sub
aaa
in
mov
adc
sub
cmp
push
push
adc
cmp
and
fsubs
clc
jge
stos
leave
hlt
inc
cmp
mov
stos
mov
inc
mov
ds
mov
mov
cltd
in
mov
xor
push
addr16
aas
dec
lea
test
push
fistps
outsl
out
cmpsl
mov
lds
imul
stos
cs
loopne
test
mov
test
cwtl
jmp
in
pusha
jbe
arpl
push
enter
movsl
andl
xchg
cmp
fwait
in
add
in
int
and
hlt
popa
cmp
and
push
mov
clc
xchg
ss
or
xor
loop
jo
lret
xor
pop
adc
cmc
js
std
icebp
dec
divps
cld
orl
mov
dec
push
push
shlb
or
push
fistl
cmp
cmp
bnd
or
mov
adc
sysexit
push
out
mov
add
lds
dec
outsb
and
cld
jnp
test
push
cmp
inc
shlb
adc
out
roll
mov
gs
jb
xchg
push
sub
add
bound
ljmp
out
outsl
adc
sbb
sti
repz
pop
out
stos
ds
or
lret
add
lods
jae
push
dec
lds
inc
stos
cmpsb
mov
fsubs
jae
xor
push
adc
xchg
cmp
pcmpeqw
mov
sbb
mov
iret
jbe
aas
xor
mov
mov
or
sahf
mov
es
mov
insb
sbb
or
inc
and
adc
add
add
imul
mov
jmp
icebp
cs
ja
jno
mov
mov
mov
jns
jl
xchg
fs
xlat
add
enter
stc
xlat
jge
cmp
scas
out
leave
in
out
cmpsl
repz
into
insl
adc
inc
jmp
sub
into
bound
icebp
mov
scas
mov
loop
sahf
or
pop
sbb
pop
cmp
cli
stos
pop
inc
dec
or
pop
lret
xor
and
cld
mov
mull
daa
adc
stos
fisttps
lock
push
push
movsl
lods
sbb
sbb
ret
mov
push
xor
rcrb
sbb
jmp
xchg
pop
xor
test
jg
and
inc
out
or
or
fmull
and
movsb
in
mov
cmp
xchg
mov
add
xor
testb
aad
push
stc
inc
je
inc
insl
scas
dec
inc
shl
clc
sar
inc
out
cltd
cmp
push
inc
jle
sbb
mov
sub
cltd
sub
js
negl
fcoms
push
dec
push
into
movsl
outsb
and
imul
ds
call
sbb
lods
incb
iret
push
aad
adc
jne
xchg
inc
dec
repz
insb
je
add
out
xor
lret
mov
jge
inc
sbb
shlb
cmp
mov
outsl
jp
pop
clc
push
mov
fadds
cs
dec
mov
cmpsl
pop
add
mov
out
leave
fdivp
jo
aam
prefetch
adc
fistl
inc
shrl
movsl
mov
enter
mov
adc
cmpsb
or
xorl
mov
mov
mov
cmp
pop
clc
xlat
jmp
aas
push
or
mov
jne
movsl
mov
addb
cmp
insb
jg
es
int3
js
es
fdivrs
jnp
loop
enter
xchg
add
mov
ljmp
sub
mov
or
sub
inc
dec
ret
fldenv
enter
ljmp
bound
fs
stos
mov
jo
pop
or
mov
popf
cmp
cmc
push
fldlg2
cs
mov
imul
stos
ljmp
testl
sbb
jo
mov
mov
negl
adc
sub
mov
popa
and
sbb
and
fwait
push
add
lods
repnz
push
mov
push
outsb
loop
dec
call
lret
xchg
and
int3
and
add
sub
js
mov
xchg
xchg
sub
ljmp
lods
cmpsl
cwtl
test
add
mov
mov
add
out
aas
jl
and
sub
pop
dec
aas
inc
leave
adc
mov
push
lock
pop
xchg
stc
lods
fnstsw
mov
arpl
in
adc
mov
loopne
adc
sub
data16
jmp
stc
and
push
mov
mov
or
jmp
adc
fs
mov
cltd
pop
in
push
outsl
insb
add
sbb
leave
xor
adc
inc
ja
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fdivs
stc
jl
lret
jl
mov
xor
pushf
outsl
fnstcw
adcb
xchg
clc
ss
jmp
cli
movl
aam
xor
cmpsb
loop
dec
mov
and
xchg
pop
push
jle
data16
shrb
pop
jle
add
and
xor
mov
push
inc
fcoms
xchg
sti
ds
jle
or
jl
ja
xchg
mov
mov
insl
sbb
hlt
fcmovbe
adc
js
stc
mull
xchg
test
inc
fldl
push
xchg
loopne
in
sbb
je
add
js
pusha
iret
jle
outsb
xchg
mov
es
mov
mov
leave
andb
dec
xchg
cltd
sahf
loope
add
loope
dec
add
and
or
cld
sahf
xchg
mov
mov
out
mov
jmp
pop
mov
mov
sbb
aad
adc
jns
cmp
push
outsb
in
test
ret
in
cmp
addr16
pop
adcl
push
dec
sub
mov
mov
mov
icebp
sbb
mov
inc
std
xor
xchg
mov
roll
mov
sbb
pop
aas
shrl
inc
sub
xchg
xlat
cmpsl
push
iret
dec
ret
hlt
cmp
or
movsb
jg
rclb
test
and
mov
dec
jl
push
jno
mov
cmpsb
inc
inc
imul
jbe
leave
outsb
sbb
cmpsl
scas
je
mov
adc
popa
or
icebp
in
lret
rcrb
pop
mov
adc
adc
hlt
push
mov
xchg
xor
ret
sahf
stos
jle
pop
fsubrl
add
mov
out
lcall
pop
dec
ss
ja
mov
sub
push
rorb
sti
cmp
scas
push
push
ss
xlat
flds
jle
ds
xchg
notb
repz
std
rclb
jae
lahf
stc
inc
adc
mov
repz
jge
dec
xchg
cli
dec
mov
js
cmp
lds
popa
out
mov
mov
fdiv
xchg
iret
outsl
sbb
or
adc
cmp
and
repnz
mov
fs
xchg
cmpsb
push
fldt
mov
pop
add
ds
pushf
mov
psubsw
xor
lods
cltd
add
push
int3
xor
lcall
loope
push
repnz
dec
pushl
fmul
pop
or
rorl
jb
pop
ret
out
pop
jp
mov
lock
dec
push
add
and
cmpb
sbb
outsl
cs
or
jne
adc
and
lds
xchg
xchg
sbb
jb
mov
in
or
sbb
icebp
xor
jge
js
cltd
jle
enter
sbb
xlat
ficompl
push
pop
fdiv
sbb
shll
mov
sbb
jo
adc
or
mov
add
stos
pavgb
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
add
cli
jl
lret
jl
dec
ret
pop
ja
jl
xchg
nop
pusha
das
pop
inc
or
xor
in
repz
or
mov
leave
and
les
sbb
in
and
aad
mov
and
das
lahf
push
or
bound
mov
add
stos
xor
mov
inc
pop
pop
jns
mov
lcall
hlt
popf
pop
ficoml
mov
cmp
addl
test
or
mov
lock
sbb
ficomps
pop
cltd
pop
ret
sarb
std
cs
ret
ret
mov
insl
mov
fbld
or
out
cmovl
add
mov
out
xorl
dec
ljmp
out
jmp
jmp
mov
push
testb
push
pop
fsts
lcall
cmpsl
imul
icebp
and
iret
stos
cmpsb
and
jne
and
add
in
lods
std
or
pop
scas
inc
sub
jae
dec
cmc
adc
xchg
ds
mov
push
mov
mov
cltd
in
cmp
push
push
xchg
sahf
add
cmpsb
push
sbb
jb
mov
add
jmp
xor
push
shlb
sub
xor
mov
xchg
iret
in
int
pop
inc
push
bound
aas
es
es
and
push
mov
pop
lcall
inc
push
repz
aaa
inc
out
and
jbe
into
mov
jns
iret
aas
add
sti
rorb
inc
adc
js
lods
jns
xchg
xlat
jle
in
xchg
mulb
mov
data16
movsl
xchg
jmp
push
or
cmp
movsl
push
pop
lea
sahf
imul
in
push
add
paddq
lret
mov
out
lret
in
jg
shrl
aad
xor
mov
fs
out
repz
or
hlt
cltd
push
popf
mov
inc
xchg
jne
jo
shlb
movsb
jl
or
mov
ficoml
jp
jle
icebp
inc
ret
int3
mov
gs
andb
fildl
notb
adc
insl
adc
imul
scas
dec
shlb
push
popf
es
test
negb
aam
mov
pop
out
jp
inc
sbb
push
mov
pop
ja
test
movsl
cmp
out
adc
jmp
mov
dec
pop
push
push
repz
adc
and
push
shll
test
nop
add
movsb
mov
mov
push
sub
outsl
mov
fldenv
cld
outsb
push
mov
mov
outsl
adc
cmc
and
mov
fwait
sbb
mov
sarl
mov
sub
scas
loop
pop
loopne
and
adc
or
push
cmp
add
stc
loope
adc
pop
jb
xor
and
pop
mov
push
or
ljmp
push
pop
cmp
cmpsb
pop
and
iret
test
sub
shlb
clc
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
and
aas
xchg
jns
jl
dec
mov
ds
push
movsb
ds
gs
popf
test
mov
movq
icebp
mov
inc
jle
jmp
rorl
cwtl
cmp
cmc
dec
xor
mov
in
pop
pop
arpl
lret
repnz
test
hlt
sbb
jbe
lahf
mov
es
mov
add
ss
mov
popa
push
push
lds
pop
xchg
mov
gs
pop
inc
xor
xor
aas
push
or
in
xor
jmp
sub
sub
sub
shrl
xchg
xor
std
cmp
int
dec
dec
cmpsb
cmp
mov
sarb
cli
push
scas
stc
jo
ret
rclb
xchg
pop
dec
test
mov
pop
repz
adc
mov
sub
test
ds
cmp
mov
pushf
sbb
stc
movsl
mov
cmp
setne
lret
in
add
icebp
les
aam
pusha
les
aas
daa
mov
and
jno
aas
lods
mov
cmp
cmp
pop
push
lock
inc
and
loope
sbb
out
test
jnp
xor
test
mov
out
add
cmp
fisttpll
cmp
sbb
imul
cld
fpatan
shl
push
lods
mov
cmpsb
int
jnp
adc
aas
fs
lods
inc
pop
je
std
sub
jae
push
sbb
sub
shll
inc
jnp
sub
and
xchg
jns
loopne
out
ljmp
sti
push
cmp
dec
sub
in
or
pop
ja
xchg
cmc
std
mov
push
aas
or
pop
sti
sbb
jnp
icebp
jnp
lock
ss
inc
leave
ret
loopne
test
out
int
or
daa
cmp
movsl
movsl
stos
dec
push
lods
mov
sub
mov
sbb
jp
jge
pop
test
mov
mov
fsubrs
fisubrs
sarl
jo
adcb
out
adc
mov
sbb
push
xor
dec
test
cmpsb
or
sbb
xorb
inc
lock
and
dec
dec
das
pushf
add
mov
add
bound
cwtl
rclb
popl
stos
mov
out
icebp
aam
cmovne
nop
movsb
mov
or
mov
xchg
cmpsb
std
lcall
out
jge
js
xchg
mov
outsl
mov
push
int3
cmpsb
push
bound
test
adc
mov
pusha
dec
out
in
lahf
aaa
aas
adc
imul
xchg
into
push
ja
stos
mov
xchg
or
mov
stc
outsl
sub
test
in
pop
mov
sub
stos
pop
dec
jg
adc
mov
rolb
pop
sub
fwait
out
std
jle
daa
mov
stos
leave
pop
dec
lods
xor
jbe
pop
sub
pop
jbe
or
push
les
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
lcall
sub
jns
jl
iret
xchg
sbb
adc
dec
ja
jae
pop
ljmp
xor
fildl
hlt
sub
xchg
mov
lea
sbb
lods
jae
insl
cmp
lea
out
ret
test
pop
cmp
mov
js
mov
std
pop
xor
mov
sub
addr16
enter
cmp
outsb
call
dec
mov
js
dec
sarb
dec
pop
xchg
sbb
outsl
pushl
insl
and
mov
dec
fwait
xchg
adc
cs
leave
mov
jo
lret
ja
mov
aas
push
pop
push
jo
call
cwtl
jae
js
pusha
pop
push
push
aad
pop
inc
xchg
cmpsl
xchg
push
loop
xchg
pop
pop
enter
hlt
jg
repz
jns
sub
or
sbb
or
lret
xor
leave
push
addr16
and
cltd
out
jmp
aaa
insl
mov
das
cmc
pop
pop
mov
fdivp
xor
out
dec
inc
aad
mov
inc
pop
les
push
test
adc
insb
adc
jg
and
repnz
stos
ret
fdivl
xchg
shlb
test
in
mov
sti
pop
test
jne
jp
inc
jae
mov
fsubl
negl
shrl
cmp
jmp
inc
in
addr16
push
cwtl
ret
inc
add
imul
mov
pop
sti
mov
call
das
jp
mov
mov
xor
mov
mov
xor
scas
pop
sbb
inc
rorb
inc
mov
pop
mov
scas
inc
leave
add
mov
arpl
push
xor
inc
mov
inc
sub
adc
fwait
popa
pop
push
insl
add
nop
xor
sbb
ds
int3
cmpsb
mov
into
imulb
jmp
pusha
into
int
faddl
into
push
lahf
mov
jno
loop
lahf
mov
scas
adc
xor
aas
mov
mov
dec
xlat
ljmp
xchg
faddl
sub
pop
fmulp
leave
and
scas
in
push
stos
sub
aad
cmp
and
xlat
addb
inc
data16
js
test
mov
add
mov
push
jo
fsubs
mov
pop
fcmovnbe
out
jae
rcrb
adc
mov
cs
mov
adc
cwtd
jns
xor
or
or
dec
je
adc
leave
cmpsl
sub
pop
xor
mov
faddl
insl
or
in
mov
dec
int3
out
insb
es
jo
add
pop
and
int3
outsl
pop
push
mov
pop
addl
cwtl
mov
mov
push
or
shrl
jno
cmc
enter
shl
push
mov
repnz
inc
push
jns
ret
int3
movsb
sub
jno
mov
jo
sub
inc
adcb
gs
js
lcall
mov
pop
fistpl
and
push
out
inc
sub
shrl
xor
leave
mov
mov
add
movl
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
cmp
jl
lret
jl
dec
cmpsl
call
cmpsb
out
arpl
mov
jge
insl
or
dec
xor
rcll
adc
movsl
xchg
adc
mov
push
xchg
scas
rcl
pop
insl
pop
xor
mov
dec
je
cmpsb
cltd
pop
or
hlt
inc
nop
dec
lret
sub
and
jl
add
push
shl
inc
in
or
shrl
xchg
or
out
dec
add
lret
mov
cld
jnp
cs
insl
pop
fsubrl
sbb
or
pop
ret
cmovs
stc
sbbb
aam
push
sub
pop
andl
or
and
mov
call
push
andl
push
sahf
jmp
or
cmp
test
pop
iret
add
pop
out
adc
pop
push
inc
arpl
push
mov
in
mov
xchg
sbb
wbinvd
pop
inc
inc
cmp
test
xor
push
pop
subl
xchg
loop
mov
lcall
xorl
mov
icebp
xorb
lock
fstps
add
mov
hlt
mov
pop
or
ljmp
out
adc
xchg
into
jmp
sub
cmp
xchg
lcall
mov
dec
cmp
lret
imull
filds
pop
mov
mov
jnp
fcomip
inc
sti
fstps
mov
cmpb
and
adc
and
jecxz
data16
and
dec
adc
xchg
sub
jns
push
xchg
xor
lret
insl
push
cmp
shrl
add
push
pop
or
dec
inc
stos
imul
test
repz
sti
ffree
sti
loop
pop
lret
sub
jg
mov
xchg
std
push
inc
or
out
xor
in
mov
add
mov
dec
aam
das
dec
test
sar
dec
scas
sahf
jo
insb
cli
mov
aaa
movsb
shll
test
pop
push
ret
dec
div
pop
dec
mov
pop
mov
sahf
xchg
mov
iret
add
xchg
adc
testb
int3
into
xchg
test
dec
or
and
in
dec
add
mov
sub
inc
mov
push
dec
xor
clc
lock
icebp
ja
add
xor
sub
sarb
lcall
push
ror
lret
jecxz
mov
xor
push
push
aas
xchg
ret
cmp
int3
mov
push
aas
popf
mov
add
enter
bound
loopne
sub
mov
sub
mov
xchg
xor
adc
jae
popa
in
ds
jmp
or
test
subl
add
inc
cld
add
xor
shlb
jge
leave
aaa
dec
das
and
mov
push
push
push
xor
test
push
or
jmp
repz
jno
test
sahf
addl
inc
jno
xchg
cmp
cmp
and
int
je
cmc
xchg
fstpl
shr
rorl
add
outsb
add
add
daa
inc
imul
xchg
popf
mov
mov
jns
jl
imul
jae
aaa
jmp
dec
push
aas
inc
addr16
mov
js
mov
sbb
dec
mov
ud0
test
in
jbe
sarb
lock
outsb
pop
dec
mov
xor
adc
cmc
mov
jle
or
clc
and
inc
adc
adc
or
icebp
iret
push
pop
jo
out
jg
fistps
lcall
ja
out
ficomps
jg
int3
mov
push
jne
sbb
popl
push
bound
out
push
shrl
xor
imul
stos
in
rcrl
mov
cmp
std
cmc
jmp
out
fs
in
sti
adc
push
data16
imul
cmp
sarl
mov
test
mov
mov
nop
movsb
lds
xor
inc
outsb
jmp
inc
and
leave
test
jge
sub
adc
mov
inc
das
fldcw
push
outsb
fadd
xchg
or
out
dec
ret
jnp
mov
xchg
dec
cmp
lahf
jp,pn
xchg
xchg
ret
push
sbb
sub
xor
or
gs
leave
ror
xchg
fnstcw
iret
insb
xchg
pop
cmp
idivl
repz
jbe
xchg
and
aad
aam
int3
cmpb
or
jb
lret
sbb
jg
mov
mov
sub
pop
xor
insl
sbb
in
cli
imul
cmp
loopne
cmc
xchg
ret
pop
mov
lea
and
ficoms
cmp
gs
imul
push
push
xchg
add
sbb
aam
sbb
push
cmp
or
push
je
mov
fdivrl
dec
leave
cltd
xchg
cltd
sub
dec
jbe
cli
js
push
rcll
push
nop
sub
push
mov
in
imul
xor
xchg
aaa
dec
das
inc
and
xchg
test
sbb
imul
cmp
orl
xor
ret
push
in
mov
mov
inc
stos
sub
add
mov
imul
xor
scas
jmp
jne
std
push
clc
in
ja
push
push
sahf
dec
adc
jbe
push
aam
fisttps
movsb
ljmp
sub
or
addr16
sti
and
push
dec
fstps
loope
jmp
je
imul
pop
cmp
inc
mov
ds
leave
and
or
mov
rcl
aam
cli
sub
xor
add
mov
int
jmp
out
mov
sub
negl
lds
xor
loopne
xlat
out
out
js
shrl
xchg
sahf
or
addb
fwait
jne
fucomp
jne
ficoml
cmpb
mov
inc
movsb
test
movsl
je
xor
movsb
jg
add
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
xchg
xchg
jl
lret
jl
subb
mov
inc
dec
sbb
imul
pop
test
xchg
pop
and
add
adc
mov
cmc
iret
ficoml
imul
into
xlat
stos
iret
xchg
xor
cld
xchg
push
push
mov
je
in
subb
lea
outsb
pop
ret
cmpsb
stos
imul
popa
inc
jnp
repz
dec
inc
jp
mov
pop
pop
xchg
cmp
mov
cmp
lds
adc
add
in
adc
mov
pushf
stos
ja
sub
adc
mov
push
jp
daa
mov
jg
xlat
push
adc
xor
push
and
push
jmp
mov
mov
iret
inc
aaa
in
subl
jmp
je
rolb
imul
push
sub
out
and
jp
mov
mov
out
fdivs
xor
and
out
xor
stos
push
sub
cmpl
iret
out
test
push
mov
sub
mov
push
jle
aad
lret
out
jp
idivl
jmp
in
movsl
pop
aas
dec
xchg
inc
ret
jl
icebp
or
mov
jns
daa
shl
sbb
or
xchg
sbb
cwtl
pop
jo
fs
stc
lret
mov
loop
int
push
test
out
fmulp
adcb
sub
mov
sub
sbb
push
rorb
mov
std
sbb
icebp
sbb
jno
mov
jl
cs
stos
inc
push
xchg
inc
js
dec
out
cmc
xor
or
push
mov
pop
cltd
jae
jg
sbb
inc
jo
xor
inc
add
fsubrl
aam
add
adc
int
jl
mov
xchg
push
cmpsl
mov
mov
test
in
lret
in
cmp
sbb
cmpsl
mov
cmpsl
test
jge
js
shll
and
jne
lahf
sti
or
jno
push
clc
jg
jg
in
xchg
ljmp
jnp
xor
mov
cmc
xchg
mov
mov
clc
jns
lods
in
inc
nop
fld
leave
jmp
xchg
aad
fwait
mov
add
push
mov
dec
fsubrl
sbb
mov
mov
mov
and
xchg
lock
cwtl
lahf
lods
in
lds
jae
mov
mov
mov
hlt
pop
aad
sub
fdivrp
mov
clc
in
rcll
inc
push
push
xor
cltd
outsb
cltd
xor
inc
je
pop
imul
xchg
popf
lods
jp
mov
mov
mov
jnp
sub
mov
popf
inc
mov
inc
and
das
add
mov
insb
push
adc
mov
inc
adcb
out
jecxz
xor
fnstcw
test
lods
repnz
or
inc
or
stos
aaa
xor
in
cmp
ret
jecxz
pop
int3
icebp
sarl
addr16
adc
xor
out
popf
adc
aaa
and
xchg
add
fcoms
andl
xchg
cmp
push
jnp
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
push
or
insl
xchg
jl
lret
jl
jo
arpl
push
cld
mov
popl
push
lock
push
leave
and
mov
mov
fcmovu
insb
mov
xchg
xchg
lods
push
out
and
push
cmp
jb
xchg
mov
mov
push
ret
jle
out
and
xor
enter
push
jae
arpl
arpl
push
sbb
xor
xchg
push
and
inc
loope
mov
jl
subl
and
pop
push
fwait
jl
aaa
enter
sbb
sbb
hlt
das
jmp
add
movsb
insb
sbb
pop
mov
mov
test
cmp
rorl
jecxz
mov
arpl
daa
mov
roll
pushf
dec
enter
push
dec
pop
mov
or
sbb
mov
pop
or
cmp
scas
mov
rcll
jge
sub
pusha
js
loopne
pop
int
mov
mov
addr16
outsb
cs
and
sti
push
cmp
rcrb
loop
cs
mov
gs
hlt
aas
jae
fidivl
adc
xchg
mov
outsl
or
out
or
ret
negb
arpl
dec
mov
lahf
or
movsb
xor
pop
into
cltd
or
lahf
mov
mov
mov
ret
jle
sahf
mov
xor
cmp
int3
int
push
pop
add
test
push
into
int3
arpl
iret
lahf
push
xlat
adcl
fsubs
frstor
ud2
xchg
xor
or
fnstenv
jns
mov
or
inc
mov
sbb
das
sub
pop
jg
test
stos
push
or
xor
cmp
stc
xchg
sub
loopne
add
xchg
mov
xchg
push
adc
outsb
fidivrl
mov
push
das
pusha
ljmp
lcall
stos
xor
mov
mov
adc
mov
aam
fs
mov
dec
fmuls
cmp
jge
jmp
ja
adc
push
sbb
adc
inc
int3
pop
imul
ret
mov
movsl
sbb
cli
data16
stos
aas
imul
inc
flds
push
shll
sbb
jne
cmp
repz
int3
mov
mov
mov
mov
cmp
xchg
mov
mov
leave
xchg
jg
addr16
or
dec
dec
mov
insl
arpl
mov
mov
mov
aas
cmpb
cmpsb
aad
pop
and
scas
out
and
mov
pushf
rorb
sub
sbb
shll
test
push
decl
cmp
call
push
lds
out
cmp
dec
ret
sub
inc
into
mov
or
xchg
sahf
ret
ret
xchg
pushf
jb
loopne
mov
sarb
jne
inc
les
roll
stc
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
xchg
push
icebp
inc
cmp
jl
xchg
jno
int3
or
pop
test
cmp
sbb
arpl
fldenv
bound
mov
std
icebp
and
out
std
bound
int3
ret
xor
jno
ret
cltd
mov
sahf
push
mov
addr16
nop
jmp
mov
cmp
push
aam
aaa
dec
dec
adc
daa
loopne
push
xor
pop
sub
aam
inc
xchg
dec
mov
jl,pn
pop
test
adc
loopne
pop
gs
or
cmp
lea
rcr
jno
pop
xor
mov
sub
aad
sub
test
push
loopne
enter
dec
ret
cmp
adc
les
or
push
out
addr16
jecxz
inc
lods
rcrl
mov
fmul
shll
rclb
xchg
cmc
cmp
adc
and
push
dec
fwait
inc
daa
out
fisubrl
inc
and
jae
mov
add
sbb
ret
jl
int
or
and
inc
fmull
sbb
pop
push
mov
repz
ds
mov
scas
xchg
fnstcw
out
pop
ret
in
cmp
dec
out
js
xor
popa
pop
mov
adc
xlat
mov
mov
jmp
jae
ss
inc
mov
pop
pop
and
xchg
or
bound
cmp
mov
outsb
rolb
xor
adc
mov
add
shl
cmpsb
xchg
jg
xchg
pushf
stc
push
addr16
fcomp
pop
repz
push
filds
xchg
cwtl
jmp
fwait
sbb
fwait
ja
add
lret
inc
jb
mov
ret
mov
push
inc
dec
or
pop
push
and
push
pop
mov
imul
jns
mov
in
fwait
sbb
mov
xchg
enter
and
push
sbb
movsl
add
gs
test
or
loopne
adc
jp
inc
mov
out
push
bound
aam
xchg
les
mov
jbe
out
in
cs
popf
inc
sub
mov
pop
jno
pop
fidivs
pop
jecxz
and
mov
cmpsb
dec
leave
push
aaa
into
sub
sub
jno
inc
push
popf
xchg
adc
cltd
stos
ljmp
add
cmpb
fnstenv
xchg
rclb
out
add
and
cmp
sarb
inc
mov
adc
jmp
rorl
aaa
sbb
sub
xchg
jb
arpl
xor
adc
fadds
and
push
xor
fisttpl
lahf
pushl
addr16
in
ficomps
mov
mov
xor
iret
inc
sbb
in
shrl
scas
loopne
mov
les
sub
cmp
adc
stc
js
ret
lods
add
test
mov
gs
or
jge
popf
mov
pushf
fmuls
shrl
lods
cmp
and
ror
pop
pop
adc
sti
dec
nop
imul
xchg
mov
jle
daa
outsl
or
inc
ljmp
rorl
scas
xlat
jmp
lret
jo
or
jmp
sahf
xor
insb
nop
add
jno
lahf
jl
lret
jl
push
fnstsw
mov
pop
push
repz
mov
loop
xchg
inc
mov
sbbl
clc
or
or
scas
or
sub
std
sbbl
ret
cmp
mov
push
xor
mov
push
inc
roll
scas
je
rcpps
dec
test
xor
inc
dec
jge
and
dec
or
add
adc
mov
roll
sbb
test
into
mov
xor
jno
cmc
inc
scas
mov
dec
call
pop
push
mov
add
arpl
sbb
jle
sub
stos
fstpt
movsb
out
lock
fs
clc
add
jmp
push
bound
rep
sti
rcll
sbb
lds
cld
je
lcall
lea
popf
push
dec
sub
pop
lret
pop
xlat
mov
cs
cmp
and
inc
push
sti
hlt
frstor
mov
pop
lcall
test
adc
je
ss
lock
and
testl
inc
stos
push
mov
inc
mov
mov
fs
jnp
dec
popf
push
out
jno
inc
dec
cmp
xor
dec
or
ficoml
cmp
cmp
xchg
adc
xor
cld
and
popa
sbb
repz
pop
xchg
mov
in
or
shl
cmp
mov
xlat
scas
sbb
mov
inc
rolb
sbb
mov
lcall
add
cmpsl
mov
cmp
xchg
test
popf
xchg
lret
jle
in
sbbl
loopne
mov
popa
jno
mov
xchg
stos
pop
jle
lcall
stos
sti
mov
sub
test
and
xchg
fwait
movsl
nop
xor
xor
in
ret
pushf
xchg
xor
addr16
or
ret
cmp
pop
and
pop
add
sbb
xor
push
aam
jmp
lock
ljmp
in
mov
inc
addr16
in
inc
sub
push
test
unpcklps
lds
jbe
push
inc
adc
addr16
sarl
inc
imul
jnp
mov
lods
int
jo
cwtl
pop
sbb
gs
jl
inc
and
jecxz
xor
lret
inc
push
stos
add
stos
mov
sub
mov
sub
mov
pop
adc
sub
stc
pop
and
push
inc
xchg
inc
add
loopne
push
sub
test
or
mov
dec
jo
pusha
xor
std
sbb
mul
push
daa
pop
addr16
fcomip
into
loope
push
out
stos
lret
lock
das
and
icebp
shll
sbb
xor
xor
push
dec
mov
subb
ss
int3
xchg
sub
ret
lcall
rcl
pop
mov
cmpsb
sbb
adc
cltd
sbb
xchg
call
ret
and
xor
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
or
rcrl
jns
jl
inc
pushf
or
cli
out
fcoml
rorb
fists
cmp
push
test
iret
enter
cmc
add
inc
pop
pop
pop
cs
mov
mov
adc
and
pop
repz
outsl
lods
arpl
cltd
sub
ret
push
cmp
out
xchg
push
mov
fisubs
test
fidivrs
pop
test
subl
loope
mov
pop
scas
cs
adc
adc
arpl
sub
push
rolb
pop
lea
pop
dec
and
add
or
pop
sub
jge
xor
inc
cmp
lea
cmpsb
lret
and
xchg
xchg
lcall
add
push
mov
sub
ffreep
dec
hlt
push
mov
xor
mov
jle
push
push
test
ja
call
lret
outsl
mov
sub
test
lods
push
sahf
sub
lds
inc
addr16
data16
xor
loopne
out
lret
mov
ret
movsl
jle
or
fisttpl
cmp
lods
xchg
ljmp
cmp
or
or
leave
and
ret
jbe
push
pop
out
mov
mov
data16
mull
dec
vpackssdw
in
jbe
and
xor
jp
xchg
pop
mov
stos
loop
out
sub
ret
stc
mov
data16
pop
or
loope
xor
ja
out
adc
fwait
mov
stos
jns
lea
mov
cmpl
dec
mov
push
cli
sub
and
scas
imul
inc
dec
or
or
jge
or
sti
fldenv
es
adc
mov
out
jle
jg
sbb
pop
int
aam
out
rclb
cmp
push
xlat
pop
movsb
adc
sbb
mov
stos
mov
sbb
sub
ret
push
sbb
inc
xchg
xor
xchg
mov
repnz
test
xchg
push
out
imul
cli
sbb
scas
aas
fwait
lret
sbb
sub
addr16
push
repz
lods
push
inc
push
fmuls
bound
call
std
aam
fidivrs
nop
loope,pt
sbb
jl
push
xor
push
jno
mov
sbb
lret
xlat
xor
out
cmpsl
add
ret
jecxz
or
fcmovu
pop
xor
test
push
pop
jp
sbb
je
xchg
dec
nop
js
pushf
xchg
out
daa
aam
fnstcw
pusha
push
sbb
mov
cmpsb
pop
cmp
popa
stc
xchg
push
xchg
lahf
in
stc
adc
in
aas
pop
mov
jne
mov
or
pop
cmp
sub
out
xor
jns
push
mov
pop
fwait
sbb
push
pushf
rcr
imul
fiaddl
cmp
inc
sub
push
mov
mov
sub
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
xor
stos
lds
jl
add
mov
lahf
into
out
jns
sub
pop
dec
xchg
imul
push
pusha
or
adc
xchg
fstpl
out
or
dec
push
mov
sub
cmpsb
xchg
push
add
loope
popa
push
bound
imul
lret
sub
xchg
cmc
movsb
fisttpl
mov
pushf
dec
add
rclb
dec
mov
addl
leave
dec
popf
push
into
or
shlb
cltd
stc
inc
xlat
xchg
adc
hlt
leave
dec
or
or
js
push
pushf
je
inc
mov
mov
mov
loope
scas
and
loop
push
fidivs
mov
fwait
int
loop
movsl
int
sbb
or
ror
cmpsl
out
mov
pop
mov
and
test
and
xchg
jns
jne
ljmp
lods
fs
and
pusha
add
pop
int
add
call
and
xchg
push
cmpsb
sbb
lahf
mov
mov
lcall
shl
mov
inc
mov
add
sbb
sub
stos
rcrb
test
out
dec
xlat
mov
sbb
pop
mov
fdivl
add
add
lods
outsl
enter
in
fwait
or
sub
mov
ljmp
imul
insl
movsb
cmp
daa
xchg
jnp
inc
add
icebp
ds
addr16
sub
mov
mov
aam
push
mov
out
mov
sub
out
cmpsl
pushf
insl
jb
sbb
push
fstp
testb
add
jmp
or
enter
pop
lcall
pop
jae
inc
test
and
cmp
test
out
jne
repnz
gs
inc
xor
or
cmp
xchg
sbb
mov
mov
push
xchg
jg
ja
adc
in
mov
xchg
push
out
xor
sub
sbb
adc
stc
push
pop
dec
mov
iret
mov
and
and
test
sub
pop
movl
lret
push
ja
scas
lret
and
jge
js
mov
aas
seta
jo
pusha
hlt
test
pop
shlb
push
test
ja
gs
mov
sysenter
cmp
enter
jbe
dec
mov
mov
sbb
cltd
dec
adc
call
das
xchg
or
scas
mov
jl
jp
cmp
xchg
push
xchg
mov
jbe
pop
inc
pop
cmc
rol
enter
insb
decb
sub
es
push
sbb
das
data16
sti
icebp
inc
idivl
hlt
add
cli
or
mov
out
dec
sahf
ret
test
cmp
shrb
push
jb
sub
lea
or
pushf
clc
inc
leave
sub
lods
adc
repz
jno
insb
or
ss
sub
pop
aas
enter
push
sub
sahf
sbb
popa
cmp
jecxz
stos
imul
stos
daa
mov
shlb
lds
aaa
mov
rorb
notb
sarl
insl
imul
movsbl
repnz
inc
cmp
into
aas
and
push
cmp
rcr
jp
test
roll
sub
std
xor
xchg
daa
mov
aaa
xor
add
roll
add
push
aam
jns
mov
jl
jns
jl
iret
shrl
or
cmp
movsl
std
mov
dec
sub
lods
arpl
mov
scas
push
push
insb
jb
adc
repnz
lea
std
add
into
ficoml
stos
or
pop
fmul
inc
lcall
int
xor
or
lahf
pushf
pop
lds
inc
stos
xchg
lea
mov
and
cmpsb
std
nop
out
lods
outsb
push
mov
mov
addr16
shl
jno,pn
mov
mov
add
cld
xor
pop
inc
ret
test
or
jmp
mov
icebp
jmp
hlt
leave
push
loop
adc
sub
sbb
les
xor
je
mov
jmp
mov
inc
test
push
xchg
mov
push
and
adc
sbb
push
add
add
repnz
ret
out
xchg
cmp
test
mov
adc
lea
cmp
jmp
adc
leave
popf
loop
push
loopne
jb
sbb
xor
cmp
xchg
enter
insb
fsubr
cmp
adc
cltd
jle
dec
cmp
js
mov
dec
push
sti
push
gs
mov
fwait
pop
std
sbb
jo
std
fmuls
pop
cmp
jle
xor
rep
push
outsl
lcall
adc
sbb
sbbb
lea
gs
jp
or
or
icebp
rcll
ds
sub
stos
int3
jns
insb
cmp
pop
ljmp
imul
xor
push
nop
in
pop
xchg
aam
les
test
lret
jnp
xor
cmc
into
pop
cmp
jne
push
ret
mov
repz
mov
add
push
or
cld
mov
cwtl
mov
push
cmc
leave
jmp
mov
outsl
dec
stc
xchg
cmpsb
jns
out
inc
sti
rorl
mov
mov
sbb
hlt
jae
push
cmpb
jne
jae
sub
mov
es
lock
cmp
cwtl
leave
xchg
dec
into
call
cmp
mov
xor
mov
out
pop
or
in
pop
push
mov
and
insl
jmp
movsb
sub
cmpsl
call
add
cs
dec
and
aaa
cld
rcl
lods
ljmp
int3
dec
fs
mov
cltd
pop
and
in
test
jbe
in
lahf
dec
push
insl
sub
push
or
mov
mov
xchg
dec
stc
repz
mov
add
mov
push
cmp
sbb
int3
sub
movsb
jmp
outsl
inc
int3
hlt
sbb
jo
ret
aaa
inc
push
movsb
ret
leave
xchg
jl
jo
xchg
sti
inc
xchg
xchg
cmp
bound
jmp
xchg
imul
imulb
lock
lahf
jp
sbb
mov
cmc
fneni(8087
mov
push
dec
ljmp
pop
outsb
and
pushf
fs
ja
dec
xor
jnp
std
mov
push
test
out
inc
and
mov
insb
movb
pop
push
fs
pop
pusha
jmp
nop
push
lahf
movsb
stos
inc
pop
in
push
lahf
ds
test
cmpsb
insl
pop
loope
jb
clc
cltd
mov
adc
loope
fmul
sbb
jl
add
push
fs
ljmp
arpl
push
lods
mov
popa
sbb
pop
inc
pop
or
push
icebp
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
push
or
cmpsl
jns
jl
xchg
sbb
push
jo
mov
lcall
call
out
pop
adc
push
ret
int
std
cmp
pop
ret
pop
and
imul
jecxz
imul
sbb
in
jae
push
xor
ffree
mov
rolb
cli
xlat
cvttps2pi
in
out
lea
jb
push
loopne
dec
in
jne
mov
adc
and
sbb
les
xor
xchg
cmpsb
ljmp
dec
out
aad
and
mov
sbb
xor
cmp
add
add
mov
pop
sbb
mov
sbbb
jae
or
adc
orb
pop
pop
pop
test
fnsave
das
mov
sub
outsb
popa
in
pop
repz
dec
adc
icebp
test
jae
jb
and
xor
push
push
fwait
xchg
imul
or
pusha
and
clc
test
lock
cli
insb
out
sub
icebp
lods
int
mov
in
sbb
iret
sbb
arpl
or
dec
push
stc
sbb
loopne
sub
rcr
pop
adc
and
outsl
cli
movsb
pop
mov
aam
jle
cmc
push
loope
js
or
adc
leave
lock
sbb
mov
lret
mov
or
xor
sub
repnz
out
pop
add
add
adc
cli
sub
jae
inc
shl
in
ds
imul
xlat
pop
outsb
cmp
lods
lods
int3
push
pop
inc
cmc
add
push
insb
pushf
mov
push
add
sarb
pop
xchg
js
es
insb
pushf
cltd
das
add
mov
cmp
push
test
mov
fldcw
xor
rclw
push
in
fstps
xor
dec
mov
lods
dec
bound
pop
jae
cli
test
xchg
adc
in
out
cmpsl
push
call
or
dec
and
sub
or
cmpsl
aaa
xchg
aas
movl
daa
loop
push
pop
sub
mov
mov
sub
pop
pop
cltd
and
cmp
bound
loop
hlt
mov
lds
sub
pusha
or
xlat
push
arpl
lods
mov
jbe
fdivrs
insl
std
inc
mov
inc
outsb
imul
js
push
push
mov
repnz
arpl
sbb
mov
daa
lret
cli
int3
mov
out
outsl
xlat
jae
xchg
int3
mov
popf
or
xor
aad
push
jg
push
cmc
xchg
scas
ret
out
mov
scas
mov
addb
push
mov
gs
jnp
decl
cs
sbb
xchg
sahf
pop
jbe
dec
mov
xor
mov
mov
inc
mov
std
loop
pop
dec
out
arpl
je
or
outsl
xlat
and
pop
jmp
das
inc
xor
lods
mov
test
in
sub
addps
ss
jp
sub
mov
outsl
jge
aad
push
push
mov
mov
icebp
add
imul
pop
or
test
sbb
repz
sbb
jp
arpl
mov
repnz
leave
jle
cmp
nop
push
jl
cltd
imul
rorb
nop
or
fsubl
loopne
add
jg
xchg
rcll
xchg
jle
js
das
ljmp
popa
jo
aas
aaa
jns
pop
out
and
cs
out
mov
mov
xor
add
mov
jmp
push
mov
test
mov
push
pusha
ds
jl
or
ljmp
mov
mov
es
jle
and
pop
push
test
std
pop
cmp
push
and
mov
pusha
mov
loopne
lods
data16
insb
popa
add
adc
push
push
xchg
and
xchg
inc
lret
fidivrl
and
jl
lock
push
mov
lods
test
fisttpll
adc
lret
dec
lds
sbbl
mov
or
cmp
out
aas
dec
mov
pushf
or
xchg
jmp
fsubl
pop
or
dec
cmp
mov
lds
cmc
xor
iret
das
push
fwait
pop
icebp
mov
test
cmp
test
sti
das
fsubl
gs
in
shll
and
pop
pop
test
jmp
or
fidivrs
enter
out
outsb
data16
into
lock
mov
xlat
aas
jne
and
or
pop
lret
adc
fs
repz
sbb
stos
push
mov
or
mov
pop
dec
outsb
test
fstpt
js
adc
sub
sub
test
xchg
divl
and
jmp
inc
sbb
iret
shll
jle
mov
cmp
mov
adc
pop
ss
ss
arpl
push
push
push
enter
push
cmp
cmp
call
mov
mov
dec
ljmp
push
roll
testl
test
push
sub
sub
xor
push
mov
fnstenv
xchg
inc
inc
push
mov
out
pop
loope
and
inc
sbb
and
add
or
in
mov
lods
ss
sbb
cli
popa
outsl
push
xchg
push
or
call
fs
cld
pop
jmp
xor
out
ret
lret
pop
inc
jl
pop
scas
adc
push
push
imul
xor
pusha
mov
mov
jmp
mov
icebp
sbb
shl
imul
mov
add
xchg
mov
mov
nop
mov
mov
mov
jno
adc
loopne
in
rcrl
cmp
in
pop
sbb
add
xor
sub
sub
mov
in
cs
xchg
add
popf
lds
testl
jecxz
shrb
push
xlat
push
inc
out
clc
push
push
pop
call
adc
out
pop
fsubl
fists
jmp
aas
mov
rcrl
push
xor
lods
push
sbb
dec
ffree
test
xchg
sub
xchg
icebp
in
pop
lds
adc
scas
insb
test
mov
sbb
inc
lods
mov
jl
aam
add
sbb
fstl
inc
pop
ror
pop
aad
push
js
or
push
cmpl
inc
or
dec
loope
fs
and
or
daa
fadds
xlat
in
mov
cmp
test
test
lret
pop
shr
mov
lret
or
xchg
fstps
push
fnstsw
push
sub
mov
jmp
ja
xor
add
mov
data16
fsub
inc
rcl
fisubs
add
jne
dec
leave
push
xor
mov
clc
mov
mov
adc
push
cmp
pusha
inc
ret
jns
fwait
cmc
movsl
flds
or
mov
adc
mov
icebp
cmp
clc
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
lea
jl
cmpsl
jns
jl
adc
lds
mov
mov
cmp
pop
aad
mov
cld
xor
adc
xchg
or
xchg
rorl
or
push
xor
push
pop
outsb
hlt
stos
dec
pop
into
scas
jnp
roll
sbb
add
mov
mov
pusha
pop
rol
aam
jno
ja
inc
aam
data16
sub
roll
mov
xchg
sbb
movsb
mov
inc
mov
cwtl
stos
test
les
jb
pop
dec
idivb
jl
dec
mov
mov
aad
push
jns
pop
sub
xchg
and
lahf
fcmovnbe
xchg
sub
cmp
popl
stos
push
cmovns
sbb
cmp
inc
outsb
pop
ret
jl
nop
cld
fcmovbe
nop
stos
mov
call
sahf
add
lret
xor
push
cmp
or
mov
das
dec
cs
into
inc
mov
test
push
cmp
jecxz
testl
mov
inc
mov
cld
pop
aas
xorps
or
mov
cmpsl
push
or
xor
fistpll
push
push
pop
jnp
jle
movb
icebp
push
ja
les
scas
jecxz
xor
in
loope
push
cmp
push
mov
repnz
test
sahf
out
push
mov
cmp
mov
popa
sbb
outsb
push
dec
pop
xor
push
stos
push
shll
ljmp
sti
sub
fidivrs
dec
ret
les
xlat
js
dec
mov
xchg
ficompl
push
mov
inc
cmpsb
mov
gs
push
dec
sub
add
and
add
sub
jno
mov
lds
mov
rcrb
mov
or
out
in
cmp
lock
and
xchg
add
cmpsl
inc
sbb
push
adc
xchg
mov
hlt
jns
in
jmp
xchg
mov
cli
ja
bound
or
out
std
sarb
inc
bswap
sbb
fmuls
pop
out
push
out
and
mov
sbb
push
int
xchg
jecxz
and
xchg
adc
add
andl
pop
arpl
or
scas
jbe
int3
mov
fistl
shll
cmp
nop
push
fwait
xchg
xchg
lret
imulb
mov
mov
add
leave
aaa
pop
loop
cmpsb
out
push
mov
ja
push
jg
pop
cmpsl
addr16
xchg
jo
sbb
adc
jno
or
out
in
adc
lods
or
dec
sti
aad
pushf
jno
in
cmp
fisubl
mov
mov
add
pop
inc
dec
repz
inc
popf
cltd
inc
and
fcoms
insl
cmp
lcall
cmp
aam
pop
ret
push
bound
pop
hlt
imul
adc
test
je
xor
xor
popa
add
iret
popf
or
inc
shll
sti
adc
es
pusha
pop
sbb
imul
andb
fdivl
inc
and
sub
js
or
and
or
lcall
fistpl
xchg
push
aas
roll
jl
push
jl
xchg
pop
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
lret
test
dec
std
or
jae
loop
sti
jl
cld
add
or
jo
fstl
ret
js
mov
fs
mov
and
add
arpl
mov
pop
inc
jge
int3
mov
insl
out
adc
mov
ret
pop
loop
and
enter
jle
add
rorb
sub
mov
jae
dec
fidivrs
adc
out
rcl
xlat
mov
pusha
adc
popf
fs
icebp
xor
pop
scas
or
stos
das
adc
mov
aam
or
int
xchg
and
daa
xchg
lods
rep
shrb
mov
outsl
pushf
and
jp
xchg
test
mov
addb
inc
pop
popa
das
push
rorb
adc
scas
shl
into
movsl
aad
sbb
aam
push
push
xor
mov
dec
in
cmc
or
in
lods
push
pop
push
push
lds
xor
xor
sub
fcoml
les
xchg
adc
and
lea
hlt
add
cli
sbb
ljmp
ljmp
mov
xor
and
scas
mov
sub
xchg
and
add
sahf
lret
iret
pop
xor
loop
adcb
fs
outsb
or
loop
rcrb
push
rcr
mov
movsb
jo
rclb
data16
scas
mov
inc
shl
jne
int
dec
stos
nop
adc
cwtl
scas
shlb
pop
sbb
pop
sbb
insl
push
push
in
es
adc
lock
js
inc
lret
sub
push
and
in
mov
sub
int3
push
adcl
cmp
hlt
in
mov
mov
popa
xchg
mov
pop
leave
es
mov
mov
and
mov
popa
xchg
mov
xor
insl
stos
xor
push
cmp
pop
xchg
dec
pusha
cmove
push
or
inc
or
pop
mov
lcall
mov
adcb
or
das
scas
pop
stos
mov
stos
and
aas
mov
inc
in
lret
call
cli
repnz
addr16
add
and
jno
lret
mov
sbb
jb
fdivl
jae
and
and
and
cmpsl
ss
add
addl
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
fdivr
shll
jle
jl
cmpsb
ss
test
div
aas
sub
cmp
push
lods
jo
aad
popl
push
scas
outsb
adc
imul
dec
push
sub
lahf
push
dec
outsb
icebp
pop
sub
sbb
dec
push
adc
gs
xor
repz
ds
dec
fisubl
push
sub
dec
call
pop
movsl
repnz
or
cmp
aam
inc
or
mov
jp
inc
or
sbb
lcall
jne
mov
aaa
fildl
jl
int3
sub
xchg
push
outsl
xchg
addr16
cltd
cmpsb
mov
ffreep
xor
sub
push
xchg
sbb
pop
xchg
jne
mov
mov
pop
inc
or
or
xchg
call
imul
repnz
mov
cmp
lcall
mov
and
sahf
bound
inc
mov
scas
xchg
out
xor
xchg
lods
hlt
mov
sub
sbb
incb
lds
jecxz
fwait
mov
pop
out
inc
stos
std
data16
mov
out
xchg
addl
movsb
jnp
jmp
in
movsb
jne
and
bound
sub
push
push
jae
aas
push
mov
sub
push
pop
and
bound
cmp
orb
in
fs
lret
cmp
push
inc
xchg
inc
jl
mov
mov
imul
mov
loopne
xor
pop
sbb
out
mov
filds
out
cmp
imul
sbb
adc
movsl
mov
shrl
sub
push
mov
adc
repz
stos
inc
mov
xchg
dec
mov
dec
daa
pusha
cltd
insb
or
enter
mov
mov
lods
pop
ds
into
fnsave
in
pop
cli
dec
in
daa
xor
mov
imul
jae
roll
xor
sbb
dec
jmp
jne
ds
mov
and
js
dec
nop
mov
push
xor
sti
pop
inc
push
adc
pop
xor
ficomps
int
fadd
gs
cld
sbb
jb
jae
orl
mov
pop
sahf
repnz
add
movb
loopne
lods
cmp
dec
push
inc
daa
dec
les
popf
mov
mov
loopne
cmp
push
std
dec
add
rorb
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
int3
fwait
sub
jl
jle
jl
and
cmc
jp
mov
lret
std
add
pushl
push
jecxz
xor
scas
xchg
popa
sub
lea
xor
jae
std
push
mov
sub
shl
cld
pushf
test
jg
lcall
cs
mov
push
adc
negl
xor
pusha
push
imul
inc
adc
pop
adc
xchg
xor
ljmp
inc
clc
push
add
add
popf
in
push
roll
mov
pop
sub
leave
fmuls
inc
cmpsl
and
cld
push
cmp
cmp
dec
pop
iret
jns
pop
push
pavgb
inc
lret
aam
push
mov
cmc
push
jns
sarb
push
paddw
mov
outsb
rorb
ret
js
data16
movsl
jbe
in
sbb
aam
sbb
jno
cmp
dec
testl
mov
fstps
in
stos
clc
or
cltd
nop
or
iret
movsb
mov
sbb
mov
mov
shl
dec
xchg
inc
xor
jp
sbb
push
sub
push
mov
repz
add
and
lea
jnp
push
arpl
jo
inc
adc
pop
repnz
or
in
popf
imul
outsb
sub
aam
mov
clc
inc
into
enter
jecxz
in
lds
jnp
fnstsw
cmc
add
outsl
pop
inc
pusha
rclb
popf
inc
inc
sub
jle
stos
pushf
add
repnz
rol
add
xchg
pop
fldcw
daa
sti
jns
or
pop
enter
jne
idivl
fucomi
sahf
xlat
cmp
out
mov
dec
rclb
inc
cmpb
call
add
sbbb
mov
jno
lret
aad
ret
inc
add
jnp
mov
mov
js
lea
call
test
xchg
bound
sbb
cmpxchg
sub
lods
sti
lods
mov
jl
push
jge
les
jg
cmp
push
pop
stos
cwtl
inc
mov
loope
outsb
dec
jne
loop
push
jle
cmp
xchg
movsl
push
xchg
lret
cs
in
mov
ja
rclb
mov
cld
fisttps
adc
jg
pop
stc
mov
mov
imul
fdiv
sub
cmpsb
inc
cltd
fsts
aaa
mov
sub
adc
js
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
enter
cltd
mov
jl
ffreep
fwait
xchg
xchg
xor
imul
or
pop
xor
pushf
bound
xor
cmp
icebp
pop
xchg
ret
and
xor
or
rorb
in
shrl
das
sub
mov
std
stc
jge
lcall
mov
test
mov
push
mov
push
mov
inc
in
inc
repz
and
data16
arpl
xchg
shll
adc
add
push
inc
shl
rcrb
insl
inc
cli
add
pop
xlat
adc
push
push
mov
aaa
into
push
out
popa
and
shll
inc
dec
fsubs
lods
pop
fwait
pusha
adc
push
jmp
pop
cwtl
dec
fidivl
out
orb
ss
cmc
call
push
imul
mov
mov
out
dec
push
sbb
insb
lahf
roll
incl
cmp
sub
ja
loop
inc
inc
cs
push
nop
pop
mov
cld
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
addr16
mov
jg
jl
out
arpl
sti
xchg
cmc
sbb
cmpsb
es
pop
testb
sub
push
inc
icebp
xor
ljmp
inc
pusha
xor
das
dec
cs
insb
xlat
int3
mov
push
push
xor
nop
stos
cmpsl
pop
pusha
mov
fwait
repz
pusha
push
movsb
sbb
sbb
pop
addr16
ret
sbbb
roll
mov
push
sarl
adc
je
xor
outsb
or
pop
pop
inc
pop
mov
jl
mov
fisttpl
xchg
xchg
imulb
jo
imul
pushf
jns
mov
test
rcrl
fs
lods
iret
push
push
shlb
mov
inc
mov
and
xchg
xor
push
mov
stos
push
cli
jae
adc
cmpsb
and
mov
sbb
mov
adc
cltd
nop
xchg
scas
and
mov
xor
scas
jle,pt
or
xor
mov
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
xchg
jl
adc
jl
adc
mov
add
inc
ficoms
pop
sub
jecxz
fwait
mov
into
loop
int
jae
shl
icebp
adc
add
insl
inc
xchg
add
out
mov
push
insl
xchg
dec
movb
lods
push
pop
mov
pop
outsb
call
dec
dec
mov
bound
cli
and
lock
cmp
int
jmp
and
mull
into
pop
cmp
notl
int
repz
add
cwtl
cmpsl
or
mov
mov
lods
dec
pop
jno
aad
popa
xor
in
fwait
sbb
das
aas
push
mov
lret
fisttps
and
sbbl
aas
in
cmp
les
xor
push
data16
mov
or
adc
and
int3
jno
mov
xchg
xor
or
xchg
mov
jg
jae
shll
push
loope
push
testl
mov
pushf
jae
dec
or
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
mov
jl
clc
cmp
fdivrp
dec
mov
push
ficompl
ficompl
jle
pop
jl
jp
sub
adc
test
push
aaa
or
outsb
dec
jmp
mov
scas
adc
pop
sbb
shlb
mov
hlt
or
ds
bound
jbe
mov
pop
jns
fistpll
pop
sbb
sbb
lds
ret
dec
dec
cmp
lahf
ficompl
inc
cld
jno
or
mov
dec
scas
sar
notb
imulb
test
ret
xchg
or
mov
mull
inc
adc
and
insl
leave
jmp
pop
ret
push
out
test
rorb
stc
jecxz
ljmp
cmp
mov
push
mov
adc
push
int3
and
mov
dec
mov
xchg
sarl
hlt
mov
jmp
push
outsb
xchg
cmp
jl
and
mov
sub
fbstp
mov
imull
add
les
pop
and
or
in
rorb
mov
add
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fmull
inc
jl
adc
jl
dec
in
outsl
cmp
jl
or
test
lds
mov
dec
inc
inc
cmp
mov
mov
pop
mov
roll
dec
lea
add
or
leave
jmp
aas
xchg
arpl
sbb
out
mov
inc
clc
jb
mov
mov
jl
mov
decl
dec
daa
mov
adcl
ljmp
fwait
das
cmp
sub
mov
nop
jmp
mov
dec
push
sarb
pop
jae
cmp
inc
rolb
xchg
xchg
rcrl
mov
int3
enter
cld
mov
fisttpl
insl
sub
add
add
and
ror
xchg
and
mov
push
xchg
cmp
xchg
loope
leave
push
outsb
fwait
repz
test
les
pusha
jmp
pop
nop
cs
adc
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
inc
stc
ret
or
inc
jl
adc
jl
clc
out
shl
or
and
rclb
cmp
setne
cld
add
stos
out
adc
sbb
js
dec
sbb
insl
add
mov
lods
and
test
ficompl
inc
jns
fdivl
jo
imul
jge
add
aam
adc
dec
and
data16
je
sub
cmp
mov
dec
jbe
dec
ret
push
jp
sub
cmp
mov
das
stos
sti
je
cmpsb
cmp
mov
mov
cmp
gs
insl
out
pop
add
popa
lds
push
imul
inc
and
mov
push
shrb
cmc
test
cli
es
fwait
adc
and
std
pop
lea
sub
push
mov
arpl
repnz
lea
pop
push
lea
xor
mov
out
cmp
out
hlt
enter
shl
pop
addr16
cmp
dec
in
dec
mov
ret
mov
xchg
cmp
addr16
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
rcl
jl
adc
jl
pop
mov
pop
dec
cltd
ss
outsb
and
adc
mov
adc
cli
adc
inc
notl
aas
dec
dec
mov
leave
mov
bound
pop
jge
fdivrl
test
push
sbb
mov
xchg
lret
adc
push
mov
enter
mov
or
es
or
call
adc
sub
mov
clc
mov
lods
cmp
ret
das
sarb
sbb
mov
push
xor
xchg
jg
jnp
outsb
or
nop
into
pop
cmc
dec
mov
dec
sub
aas
loop
dec
addl
add
ret
lods
mov
mov
inc
xor
and
icebp
outsb
pop
mov
or
pop
adc
xorl
sbb
add
in
lahf
imul
mov
test
or
mov
scas
in
inc
testb
xor
loope
mov
fmul
aaa
mov
outsl
ljmp
jl
dec
cmp
scas
add
mov
jmp
pop
shlb
mov
cmp
dec
in
mov
adc
jl
cmpsl
scas
loop
push
test
aad
xor
sbb
xor
pop
mov
pusha
scas
sbb
lcall
adc
in
outsl
mov
sbb
xor
aad
adc
push
mov
inc
lock
clc
mov
and
mov
nop
jl
repnz
dec
jo
mov
adcb
lcall
mov
ud2
add
pop
ss
ss
fnstenv
fcoml
orl
cmp
fildl
inc
sbb
sahf
lds
imulb
or
movsb
out
ja
add
iret
rorl
sbb
aas
mov
adc
call
ds
or
cmpsb
in
je
jge
lahf
andps
popf
sbb
rorl
sbb
shrb
mov
xor
and
int
in
gs
add
pushl
sub
pushf
fstps
cmp
add
mov
lcall
sbb
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
iret
mov
jl
adc
jl
cmp
ja
jp
dec
repz
jmp
add
shlb
pop
sti
cmp
and
cpuid
popf
sub
addr16
imul
mov
sbb
jbe
inc
mov
xchg
push
xadd
mov
jo
rorl
gs
pop
pop
jg
push
outsb
jns
mov
sahf
mov
ljmp
mov
inc
loopne
mov
or
in
cltd
push
cld
adc
adc
xor
fistl
lods
clc
mov
loop
inc
lahf
aaa
cmp
and
mov
shl
addr16
cmp
mov
clc
mulb
mov
jmp
and
adc
repz
mov
or
scas
inc
mov
xchg
mov
outsb
and
dec
push
mov
pusha
push
inc
add
sbb
divl
addr16
cmc
jo
es
xchg
mov
stos
lods
mov
or
fcmovnb
mov
sbb
ljmp
sbbl
adc
pop
add
call
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
sbb
jg
jl
repnz
and
movsb
mov
int3
jb
js
inc
loopne
neg
daa
out
mov
outsb
cmp
sbb
mov
loop
adc
scas
push
movsl
lock
or
jne
ret
mov
pop
mov
jecxz
cltd
fdivrs
mov
repz
push
xchg
mov
test
ja
out
jle
bound
jo
icebp
inc
add
mov
add
cwtl
adc
xor
popa
fdivl
xchg
dec
pop
jmp
scas
loopne
mov
inc
imul
and
xor
daa
stos
gs
jecxz
sbb
adc
xchg
scas
rclb
repnz
push
data16
mov
dec
iret
mov
mov
add
lret
lds
imul
jecxz
pusha
cmpsl
bound
jne
orl
shrb
or
pop
add
dec
jp
jne
or
jo
lea
mov
popa
inc
mov
xor
nop
mov
xor
imul
test
rorl
fistps
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
pushf
adc
jl
adc
jl
pusha
repz
es
xchg
mov
jne
inc
lds
sub
xchg
xor
test
mov
fs
add
js
xchg
pop
sub
xlat
dec
sub
xchg
inc
ja
cld
lcall
dec
mov
dec
int
inc
or
out
cli
mov
fldenv
push
out
lock
mov
movlps
push
sbb
sub
stos
ret
xor
adc
out
and
jp
cld
pop
imul
mov
into
fsubrl
mov
add
in
add
les
mov
mov
fistps
dec
stos
stos
sti
push
dec
mov
insl
lods
inc
mov
ret
aad
jmp
xor
icebp
nop
arpl
adc
aam
movd
jbe
dec
mov
fidivrl
xchg
and
pop
mov
cmp
sbb
rcl
add
mov
int
hlt
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
aam
in
into
add
pop
add
add
int
pop
lret
or
lret
movsb
rorl
lods
in
outsl
popa
out
fcmovu
jb
sbb
sub
shrl
aam
hlt
or
lcall
movsl
cltd
insl
jb
jg
or
mov
lret
test
xor
or
lock
xor
xchg
fsts
mov
ret
mov
cmp
or
or
mov
into
test
mov
arpl
jle
ljmp
cmpsb
sbb
cmpsb
popf
mov
movsl
xor
pop
aad
es
aas
int3
je
xor
mov
mov
and
sbb
loopne
jle
outsl
imul
out
das
ficoms
cmp
into
add
stos
xlat
movl
cmp
cwtl
repnz
sub
scas
xchg
jle
pushf
les
es
inc
cmp
adc
mov
aad
out
pop
ficoml
in
jle
mov
cmp
xlat
hlt
iret
add
pop
add
add
popa
cmc
sub
hlt
imul
pushf
cmp
rorb
ds
and
lds
cli
add
mov
scas
sbb
std
add
xor
outsl
flds
aam
pop
negb
mov
xchg
mov
jno
cld
cmp
push
sti
ds
inc
jl
scas
dec
sbb
mov
mov
lock
in
mov
sti
das
adc
adc
cmc
mov
out
push
outsl
dec
fisubs
outsb
mov
xchg
adcb
jle
cmp
xor
mov
jbe
lret
push
movsl
scas
test
rol
in
pop
sub
adc
push
sti
mov
mov
add
xlat
jecxz
pop
pop
sbb
cmp
push
xor
jb
aaa
cmp
jl
pop
xchg
dec
mov
in
cltd
fsubrs
xor
test
ffree
mov
add
add
adc
mov
push
add
lcall
add
data16
xchg
into
mov
iret
sbb
inc
or
sahf
adc
pushf
jmp
jae
loop
je
inc
xlat
push
inc
push
or
aas
push
or
push
mov
sub
push
mov
and
lahf
jo
ljmp
mov
push
push
pusha
or
sarl
or
or
or
sub
mov
jg
jns
sbb
inc
push
popa
jle
or
fcomp
and
push
cmp
repnz
adc
rol
movsl
lahf
inc
dec
or
rorb
mov
mov
in
test
jg
xchg
xor
mov
test
rcll
loop
adc
jne
cmp
sub
lret
rclb
dec
add
pop
test
xchg
or
test
xchg
jno
psrlq
jb
lret
pop
add
je
cltd
insb
arpl
loop
mov
movsb
xchg
lds
sub
add
subl
idivb
mov
add
add
pop
add
add
stc
shrl
pop
rclb
lods
into
xchg
mov
sahf
leave
pusha
rol
pop
int3
xlat
pushf
and
rcl
dec
cmp
sbb
dec
jno
fmulp
or
mov
repnz
push
cltd
fwait
mov
lock
jns
push
cmpsb
inc
out
lods
enter
and
xchg
in
orb
dec
sbb
mov
insl
iret
mov
xchg
cmpb
add
cld
mov
addb
test
dec
daa
pop
loopne
dec
mov
aas
icebp
cmp
rolb
rcll
sbb
lret
popa
movsb
push
sbb
pop
das
movsl
cltd
xchg
js
shrl
mov
pop
in
push
cwtl
rcr
mov
adc
push
dec
popa
dec
inc
ficompl
and
daa
leave
adc
shl
sub
ffreep
lods
xchg
lahf
xor
xchg
sbb
das
push
cmp
repz
or
and
and
adc
jae
sub
mov
adc
scas
add
inc
or
ss
pop
xchg
cmpsb
enter
roll
add
add
add
hlt
xchg
cmp
pop
lock
or
jmp
cmp
pop
roll
and
cli
repnz
clc
bound
or
lock
mov
imul
int3
inc
and
arpl
mov
or
fistpll
inc
loop
je
xrelease
xchg
adc
pop
test
pusha
movsb
psubusw
inc
push
sub
add
pop
pop
push
das
push
fldcw
ret
xor
adc
pop
in
mov
call
mov
xchg
and
sbb
jne
sub
add
sbb
sub
or
sbb
sub
imul
push
push
movsl
add
push
ds
cmp
ds
jmp
adc
adc
imulb
inc
mov
mov
sub
pop
inc
in
rol
inc
xor
mov
aas
and
push
push
ret
sub
outsl
rolb
aad
inc
mov
inc
lock
out
ja
pushf
jmp
jg
cmc
insl
cmc
out
lcall
mov
pop
lret
add
pop
add
add
cmp
xchg
icebp
lret
testb
test
test
push
addr16
xchg
hlt
mov
rcll
mov
sbb
jmp
xor
xor
inc
dec
or
cmp
loopne
ja
push
dec
stc
addb
dec
add
pop
xor
imul
fdivrs
movsl
cmc
pop
testb
insb
and
mov
dec
mov
fimull
es
movsb
adc
jge
xor
jno
arpl
pop
mov
test
adc
lret
jl
cmp
pop
loope
add
out
xor
push
sub
inc
cmpsb
jecxz
jge
out
and
cmp
ja
cmp
xlat
mov
sub
and
clc
mov
cmp
mov
jae
rcl
sahf
jl
sbb
xor
jb
stos
sbb
sti
inc
push
ljmp
cltd
inc
sbb
les
add
jle
add
outsl
jle
aam
aam
mov
and
add
pop
add
add
outsl
fidivs
lret
dec
cmovbe
and
push
aaa
mov
xchg
stos
notb
push
jecxz
dec
movsl
xlat
pop
add
imul
jmp
into
sub
fcmove
lea
mov
lcall
push
gs
bswap
cmpsb
sbb
test
xor
stc
mov
inc
cmp
in
inc
dec
lea
fistpll
cmp
ds
les
rclb
dec
push
inc
mov
ja
cmp
add
aas
fldcw
add
std
jge
xchg
fisttps
inc
dec
inc
push
fcoml
xor
jne
sahf
cmp
clc
cmp
inc
shrb
icebp
jle
mov
dec
aad
je
sub
or
jg
push
rorb
xor
dec
icebp
mov
mov
add
inc
in
lods
and
das
mov
loopne
cmpsl
dec
cld
or
jle
or
add
jle
and
scas
sti
jle
sbb
add
pop
add
add
loope
jbe
outsl
jmp
jno
je
fdivs
add
jp
imul
es
loopne
add
loop
rcll
mov
dec
imul
into
mov
mov
and
das
xor
inc
xchg
negl
add
add
mov
jmp
aas
ss
adc
adc
mov
lret
adc
repz
add
pop
adc
sbb
add
mov
jl
xchg
ret
popa
cmc
push
shrb
fnstenv
fisubrl
in
gs
out
xor
std
loopne
pop
mov
imul
ret
cltd
nop
cld
call
mov
xchg
and
lods
cld
sbb
pop
and
cmp
inc
cmp
out
sub
fildl
jno
xchg
cmpsl
xor
add
cmpsl
sub
inc
xchg
and
popa
add
aad
inc
push
lea
xor
js
sub
gs
cli
aam
pop
add
negl
sbb
xlat
add
pop
add
add
dec
nop
in
adc
gs
xor
notb
test
int
lcall
repz
scas
shll
adc
in
xchg
clc
xchg
mov
negl
ja
adc
std
ds
sbb
and
or
bound
mov
xchg
pop
out
pushf
sbb
out
mov
fwait
cmp
lea
imul
enter
jbe
dec
dec
lret
shl
cmp
xorb
pop
mov
and
mul
movsl
dec
mov
loopne
out
stos
cmpsb
and
fcmovnb
adc
andl
jmp
jno
scas
inc
push
pop
and
or
mov
xchg
add
lock
ret
imul
jecxz
inc
mov
sbb
and
cmp
mov
pop
xor
cmpsl
aaa
inc
mov
pop
jne
adc
sbb
mov
mov
mov
cmpl
xor
push
jl
jle
insb
inc
xor
push
ljmp
add
add
add
mov
aam
push
les
pop
dec
jecxz
call
shll
loope
xchg
jge
pop
dec
xor
notb
ja
cltd
mov
fnstenv
push
xorl
outsl
notb
out
push
mov
in
mov
sbb
in
cltd
cmpsl
enter
jp
add
xor
lret
cmp
aam
jae
orb
in
push
out
mov
fs
addl
mov
xchg
shll
xchg
fdivp
dec
pause
pushf
ss
mov
out
cmc
in
cmpsb
cmpsb
xchg
sbb
aam
mov
mov
mov
lods
mov
out
jmp
lds
outsb
test
pop
cltd
sub
mov
push
mov
test
sbb
jge
dec
aam
out
cmp
mov
lea
cmp
cmp
cltd
dec
cmp
pop
hlt
cmpsb
push
mov
fdivrl
xor
inc
push
jle
jo
jae
sbb
jno
mov
adc
sbb
out
xor
add
pop
add
add
push
outsl
mov
push
lret
cwtl
fcoms
mov
mov
into
mov
inc
test
mov
cmpsb
test
stc
addb
repnz
inc
loop
out
daa
dec
and
test
imull
jae
shlb
lea
les
es
pop
cmp
mov
in
inc
jge
call
ss
mov
popa
push
push
sbb
jno
mov
xlat
aas
dec
pop
mov
sbb
loop
imul
hlt
lahf
sbb
outsb
pop
xor
frstor
test
into
mov
lea
jl
pop
adc
lahf
call
testl
mov
daa
mov
ret
jmp
mov
add
movsl
lret
mov
nop
rolb
sub
and
fcmovnu
xor
rorb
cmpl
pop
icebp
loopne
xor
xchg
mov
imul
add
aaa
data16
jne
mov
xchg
pop
leave
cltd
adc
fiaddl
add
add
add
lahf
inc
and
leave
mov
xchg
addr16
and
fiaddl
pusha
outsb
stc
lods
pop
aam
ds
imul
pop
push
or
xchg
das
jbe
in
enter
pusha
mov
sbb
ret
cmp
cmp
push
int
xchg
pop
mov
shlb
sahf
inc
ja
les
ss
arpl
hlt
test
arpl
and
lret
ljmp
out
out
and
mov
cld
cmpsl
aaa
dec
stos
inc
cli
inc
push
pop
scas
dec
popa
pop
mov
inc
cmpsb
mov
fsubrs
in
filds
xchg
jecxz
scas
xchg
fwait
push
icebp
inc
pusha
or
mov
jmp
std
dec
outsb
dec
test
je
loope
mov
daa
clc
mov
lret
daa
int3
pop
test
mov
pop
rcrl
sub
xlat
push
aad
mov
mov
dec
cmc
cmp
adc
aaa
mov
sti
cs
lret
fldcw
loope
or
mov
xchg
add
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
add
jbe
jg
outsb
out
jmp
movhps
and
daa
sub
xchg
push
dec
aam
sbb
mov
or
mov
ficoms
mov
fisubs
psubb
sbb
loop
sbb
push
sahf
adc
push
cmp
add
xor
pop
test
xchg
iret
xchg
ja
pop
imul
adc
stos
scas
mov
pop
inc
cmp
movsl
mov
xchg
mov
inc
lahf
dec
cltd
mov
dec
or
dec
mov
je
or
mov
jmp
aad
jmp
dec
rcl
push
stos
fdivrs
mov
push
dec
leave
cld
mov
jecxz
sbb
xor
push
dec
mov
jo
pop
push
adc
lds
adc
xchg
xor
add
in
js
leave
xchg
xor
cmove
notb
loope
xlat
dec
call
mov
add
sub
pop
sarl
lods
std
mov
and
ret
add
pop
add
add
dec
xchg
jmp
pop
jbe
pop
adc
sub
aaa
test
or
pop
sbb
imul
lods
dec
push
mov
shlb
jns
push
hlt
sbb
sub
mov
out
adc
push
loope
movsl
mov
popf
cmovno
and
cmpsl
mov
mov
or
ret
dec
not
sbb
shrb
jne
push
mov
or
inc
pop
smsw
xchg
xchg
js
sub
rorl
and
aam
lea
pop
inc
sbb
mov
dec
sbb
into
int3
mov
lock
ja
movb
xchg
fadd
pop
sarb
pop
sbb
hlt
cmp
fadds
rcrb
sti
imul
mov
fwait
xchg
test
ljmp
sbb
mov
les
clc
sub
das
mov
push
out
cmpsb
leave
jbe
jl
sub
cmpsl
xchg
pop
popa
daa
pop
xchg
insl
lock
std
repz
xchg
pop
add
add
inc
mov
cmp
xor
je
aas
pop
inc
jno
popl
mov
cmp
inc
dec
out
dec
shl
mov
and
movsl
iret
fldt
xor
data16
cmp
in
lds
bnd
push
inc
inc
cmc
xchg
mov
push
xchg
pushf
cmc
sub
andl
fcmovne
stos
lret
ljmp
rcll
add
les
push
xor
pop
mov
pop
and
and
sbb
mov
cmp
addr16
dec
push
lcall
ret
rcrl
loope
es
subl
mov
cmpsb
shr
xor
ljmp
mov
je
jle
add
mov
fisubs
lea
adc
outsl
dec
push
jge
in
jbe
push
ror
push
pop
cli
ja
cmc
xlat
sub
outsb
sarb
inc
mov
sub
mov
jge
and
cwtl
data16
je
mov
lahf
aam
outsb
jg
mov
add
add
lock
cmp
cmp
pop
ret
adc
xchg
push
fiadds
add
add
add
mov
dec
leave
aaa
jne
cmc
flds
dec
repnz
xchg
sub
pop
push
std
cld
sti
js
and
inc
out
sbb
mov
push
push
movsb
and
inc
xor
out
jns
mov
mov
fists
inc
mov
mov
push
sti
popl
mov
mov
fdivrl
adc
inc
je
sub
cmc
daa
aas
mov
mulb
shl
out
mov
jp
leave
adc
and
dec
sarb
cmc
leave
cmpsb
push
adc
loopne
loopne
jno
cld
or
insl
sbb
shlb
xchg
aad
pop
mov
into
adc
mull
out
mov
jb
jmp
je
push
frstor
adcb
dec
or
lods
insl
outsb
xor
andb
xchg
sar
ret
push
jbe
dec
adc
aam
or
bound
lret
add
aaa
and
dec
das
imull
or
repnz
add
mov
mov
jg
insb
sub
add
pop
add
add
in
jmp
jg
and
pop
cmpsb
mov
idivl
andb
test
push
sub
sbb
push
out
push
mov
les
lret
int
insl
adc
mov
push
adc
add
add
xchg
lahf
gs
push
mov
push
shl
sbb
inc
dec
mov
push
or
sarb
sahf
das
subl
aaa
lea
mov
xchg
sarb
push
xchg
and
mov
loope
xor
ja
das
inc
sub
inc
pop
or
ja
push
outsb
xor
jne
lock
fcoml
lret
cli
mov
dec
sub
rcl
aas
cs
test
xchg
addr16
mov
out
jl
mov
rorl
popf
daa
jbe
xor
lret
fildll
sbb
push
es
aam
out
fmuls
inc
mov
cltd
scas
jbe
lcall
add
xchg
in
mov
incl
push
rcr
fs
add
add
add
loopne
pop
jge
push
sbb
iret
cmc
ret
inc
inc
push
mov
repnz
out
inc
nop
popf
ret
mov
lea
adc
cmc
sbb
ljmp
jecxz
dec
mov
sub
add
daa
mov
sahf
sub
lods
call
loopne
insb
mov
dec
xchg
dec
in
xor
leave
adc
inc
push
push
loopne
sbb
and
push
test
testl
test
out
in
add
lahf
pop
cmc
mov
aaa
lds
bound
icebp
loopne
lea
add
mov
sub
loop
jnp
cmpsb
xchg
pop
out
jmp
xor
rclb
xchg
in
mov
ret
push
inc
add
pop
lds
shl
pop
dec
and
pop
jns
mov
add
inc
mov
test
in
ret
push
sbb
pushw
inc
add
dec
push
xchg
xchg
or
adc
frstor
add
inc
mov
in
negl
es
int
imul
imul
add
add
add
out
aas
in
mov
push
mov
add
shl
mov
xor
clc
and
repz
decb
cmp
and
imul
pop
pop
and
mov
and
enter
enter
cltd
xor
push
jmp
xchg
or
mov
and
popf
call
in
mov
fimuls
pop
idivl
ss
bound
rol
mov
mov
pop
push
mov
adc
fcoms
orl
in
mov
popa
mov
jno
das
pop
pop
nop
les
hlt
aam
fisttpl
inc
pop
sub
stos
dec
loop
xchg
out
pop
cmpsb
sbb
pop
jnp
sti
dec
add
or
idivb
outsb
push
xor
fs
popf
adc
pusha
arpl
cmc
fstpt
sbb
and
pop
jb
fidivrs
aad
push
orb
adc
mov
xchg
cli
aaa
in
leave
sub
add
mov
jge
nop
mov
jb
add
pop
add
add
xor
sbb
js
loope
movsb
loope
inc
test
and
cwtl
les
sub
pop
and
test
lcall
movsl
and
adc
out
jle
or
mov
mov
jns
push
mov
pop
mov
test
inc
stos
add
lock
cmp
mov
add
ljmp
clc
push
sub
ljmp
and
pop
mov
push
pop
leave
popf
mov
lds
aaa
lret
sub
adc
divb
lretw
lahf
sub
cmp
jnp
mov
jp
mov
js
sub
or
dec
shrl
cmc
mov
or
fcoms
orl
aam
inc
xchg
push
scas
loop
loopne
cmp
sbb
mov
jbe
jp
jmp
cmp
mov
push
jno
mov
xor
add
pop
add
add
int
loope
inc
push
and
popf
fs
xorl
jbe
sub
and
jmp
out
fs
xchg
xor
test
add
lret
mov
push
pop
subb
pop
push
mov
imul
lcall
lret
imul
inc
sbb
vpmaddwd
add
cmp
inc
daa
out
jmp
ljmp
sub
cwtl
sbb
sahf
push
mov
mov
push
daa
and
sbb
jmp
stos
jmp
aas
jge
or
add
out
les
cld
shrl
lea
jl
mov
and
cmp
xchg
inc
testl
mov
int3
xchg
sbb
cmp
call
or
pop
add
mov
mov
mov
pushf
pop
push
lods
and
adc
daa
rclb
add
repnz
add
pop
call
mov
inc
sub
pop
add
add
sbbb
andl
pop
lock
pop
mov
icebp
jge
enter
xchg
int
mov
sbbb
stc
mov
or
fldt
xchg
lea
out
mov
xchg
push
mov
xor
in
scas
cmp
in
push
into
pop
mov
loope
std
xchg
in
ret
aas
jae
enter
hlt
inc
jle
lret
rcl
call
mov
pop
dec
inc
jp
jno
inc
test
adc
flds
xor
mov
push
in
adc
sbb
fsts
dec
andb
rolb
xchg
mov
lret
add
add
mov
push
xchg
sub
mov
pop
and
test
hlt
inc
jns
mov
push
or
jne
sub
xchg
lcall
add
shll
sub
add
mov
push
decl
loopne
jecxz
xchg
add
pop
add
add
rcr
jp
mov
add
mov
in
aaa
xchg
cmpsb
mov
jl
mov
cmp
dec
bound
fidivs
out
sub
xchg
flds
packssdw
inc
and
sbb
lret
es
sti
imull
cmp
jb
push
addl
mov
jmp
in
mov
lods
push
test
adc
outsl
sub
jnp
mov
pushf
adc
pop
out
xor
pop
lods
enter
rcl
mov
imul
sub
fxch
bound
jecxz
push
addr16
mov
pop
mov
insl
dec
add
aaa
hlt
or
xlat
xchg
xchg
popf
or
jecxz
or
lss
xchg
jnp
ljmp
and
inc
iret
insb
inc
scas
cmp
imul
cmp
shlb
stc
in
add
mov
add
add
jmp
in
and
adc
mov
add
pop
add
add
mov
or
decl
sub
adc
xor
cmp
in
jle
rolb
out
fisttpl
cmp
mov
outsl
mov
sub
mov
icebp
push
in
xor
jecxz
int
mov
les
imull
ljmp
push
idivl
dec
test
inc
sahf
push
subb
push
loopne
xchg
rcll
jg
mov
fnsetpm(287
cltd
mov
jns
and
call
adc
adc
movsl
mov
push
or
popf
and
rcll
fidivs
es
xor
jae
jno
out
sub
jno
call
loopne
call
stos
xor
sbb
stos
xor
mov
xor
mov
cli
jge
adc
cmc
nop
sets
mov
mull
insb
cli
leave
nop
xor
fistpl
mov
adc
test
fs
add
outsb
xor
test
lcall
add
add
jnp
test
jge
xorl
loop
xor
aas
push
pop
sub
shrl
imul
imul
sbb
mov
bound
cmpps
push
hlt
and
out
out
rcrl
sbb
pop
xchg
lds
cmp
testb
fcmovnu
sbb
cmp
aam
or
cmp
nop
dec
pop
inc
xchg
cmc
dec
and
in
lcall
dec
lods
in
mov
sbb
loop,pt
ja
scas
daa
sub
bound
xor
cmp
pop
lcall
cwtl
movsl
inc
push
push
inc
jo
scas
in
mov
mov
xor
xchg
add
and
cs
inc
or
pop
das
push
xor
xchg
arpl
cmp
out
in
dec
imul
xchg
mov
cmp
stos
int3
and
add
test
fcomps
lods
and
mov
repz
ror
lock
jnp
xchg
cmp
pushf
call
add
dec
mov
mov
sub
push
jecxz
adc
fsts
out
pop
mov
cld
lret
bound
mov
cwtl
sub
mov
fs
xchg
push
adc
inc
jge
lds
mov
mov
dec
sbb
dec
sub
ja
sti
sbb
test
sbb
add
sahf
addb
scas
loope
mov
test
bound
shl
mov
aaa
inc
pop
cltd
push
js
sti
pop
jo
scas
xor
repz
or
inc
outsl
movsl
jnp
movsl
xchg
ss
push
push
es
dec
pop
test
pop
inc
or
push
daa
jmp
call
mov
push
cmp
scas
jmp
stc
add
push
lods
xchg
cli
repnz
addr16
fisttps
lahf
pusha
jae
lods
xchg
push
pop
movsl
push
adc
aaa
pop
pusha
mov
jae
fstp
es
aas
scas
je
add
repz
fisubrs
jno
inc
sub
add
add
add
mov
sbb
cmpsb
mov
ja
popa
cmp
es
dec
clc
scas
aaa
and
inc
in
or
jecxz
popa
out
in
mov
and
jl
ficoms
add
dec
pop
sbb
test
lods
sbb
jbe
mov
loop
test
out
push
addr16
and
arpl
leave
xlat
dec
call
cmp
and
jp
push
stc
cwtl
jne
sub
pop
xor
adc
cmp
inc
xor
and
cmpsl
sub
mov
mov
jbe
jmp
mov
stc
rcrb
ja
mov
imul
out
aad
jb
lret
pop
out
jp
pop
cwtl
push
clc
sub
imul
jp
dec
lret
aam
iret
mov
mov
fisubl
and
jae
xlat
lahf
jno
xchg
push
push
in
adc
test
pop
or
out
mov
mov
mov
aad
ljmp
pop
and
sbb
shrb
jge
lock
add
cld
aaa
sbb
inc
mov
repz
cli
test
xchg
fucomi
lahf
out
xor
repz
add
test
adc
pushf
movsl
mov
icebp
in
lock
xor
dec
int3
mov
out
lods
xor
mov
scas
dec
jle
std
sbb
scas
dec
cmp
popf
imul
test
cltd
movsb
lahf
mov
pop
addb
loop
jmp
inc
out
pop
sbb
enter
shlb
xchg
cltd
mov
add
andb
jbe
dec
test
or
sbb
jo
pushl
push
mov
scas
xor
cmpsb
int
rcrb
jb
cwtl
mov
sbb
add
mov
lcall
into
jmp
and
dec
out
pop
push
mov
jb
shrl
cmc
scas
cwtl
sub
repnz
jmp
add
add
add
insl
and
clc
sbb
pop
dec
adc
nop
inc
cmp
and
icebp
int
loopne
ja
out
repnz
cld
sbb
movsb
scas
dec
adc
je
lret
mov
jae
out
inc
mov
insl
ss
enter
fsubrs
push
and
out
bound
mov
test
and
mov
cld
inc
mov
mov
scas
std
adc
mov
push
push
xor
mov
push
inc
ja
in
mov
mov
jmp
ret
mov
sahf
call
ja
cwtl
mov
and
and
or
sub
adc
repz
pop
dec
ss
pusha
jge
jp
mov
out
leave
rol
push
lahf
dec
xchg
arpl
into
xchg
fisubs
in
jno
dec
adc
arpl
or
loope
test
inc
fucom
push
dec
inc
popf
pop
dec
int
pop
add
subl
lret
pusha
rorb
enter
jae
mov
mov
add
add
sbb
shrb
xchg
push
adc
adc
inc
fistl
jb
daa
sub
faddl
mov
imul
cmp
jl
shl
int3
mov
fcoms
or
cmp
mov
xchg
and
cmp
mov
inc
fnstsw
mov
mov
sahf
out
inc
push
fwait
xor
stc
jne,pt
mov
mov
cli
and
in
add
jo
jb
add
mov
pop
sub
call
rorb
mov
sbb
es
bnd
movsl
push
jle
andb
and
jne
iret
adc
imul
xchg
pop
fwait
mov
xchg
daa
popa
rcl
push
aaa
mov
fcoms
jae
jmp
xchg
lods
pop
add
xchg
mov
mov
pop
xor
lret
loope
rolb
jecxz
push
testl
sahf
cmpsl
pop
mov
add
add
insl
mov
mov
daa
xchg
vmovaps
loope
test
mov
cmpsb
and
ljmp
aad
ret
int
xor
pop
std
or
lock
repz
imul
mov
fisubrs
xor
into
xchg
sahf
negl
ljmp
or
dec
inc
ss
xchg
mov
int3
adc
pop
in
mov
dec
test
jle
pop
and
push
xchg
movsb
test
dec
je
je
fyl2xp1
jg
loop
xchg
sti
jne
xchg
sub
mov
push
sbb
dec
cmp
out
sahf
fs
ret
mov
outsb
and
xor
loopne
stc
jae
iret
into
mov
mov
outsb
scas
fcoms
push
xchg
movsl
cmpsl
mov
mov
clc
test
sub
cmp
outsb
sti
xchg
xchg
adcl
adc
add
and
daa
lahf
or
push
xchg
out
add
pop
add
add
ja
andb
loop
das
push
add
mov
adc
sub
pushf
pop
out
pop
pop
and
mov
out
call
jns
push
das
lock
call
rcrl
loopne
jge
mov
and
mov
imul
mov
and
push
out
sbb
cltd
pusha
std
enter
pop
xor
repz
test
into
adc
cmc
in
pop
sbb
aam
ss
sbb
sub
add
push
sti
sbb
pusha
mov
out
scas
lahf
push
xchg
loopne
xchg
movsb
sub
jno
dec
adc
movsl
sub
cmpsb
or
fucomi
addr16
test
mov
sub
mov
mov
pop
jbe
movsl
xlat
cmp
cmpsl
imul
mov
int
mov
imul
adc
mov
cmp
mov
fstpl
int
add
pop
add
add
fisttps
test
lods
aam
cwtl
mov
fists
stos
dec
cmc
jo
cwtl
lea
mov
ja
rcrb
xchg
xor
inc
ret
or
cmpsb
and
shrl
loope
repz
jno
sub
jnp
insb
dec
shll
fldt
aad
and
ror
add
mov
pop
ret
pushf
mov
add
gs
in
loope
loop
roll
add
sbb
pop
lods
sub
pop
aaa
push
imul
xchg
enter
jg
xchg
jecxz
jmp
pushf
push
fst
adc
inc
cmpsl
repz
xchg
xor
pop
pop
add
test
pop
loop
dec
mov
cmc
cmp
sbb
stos
or
pop
cs
cmp
test
or
shr
les
sbb
not
ljmp
mov
inc
lahf
mov
sub
push
icebp
or
jmp
into
test
jbe
push
inc
pop
jns
aas
lods
fmull
in
sbb
inc
aam
add
pop
add
add
mov
sahf
push
xchg
jb
xor
fwait
dec
les
es
stos
lea
ss
inc
mov
pop
popa
inc
mov
cmpsl
cmp
scas
mov
das
aaa
cmp
fimull
movsb
mov
push
dec
xchg
pop
ds
ror
inc
out
xor
call
mov
rolb
push
mov
adc
and
loopne
imul
jbe
outsl
mov
cmc
dec
jne
mov
bound
sbb
jge
xlat
pop
xchg
or
ficompl
loope
out
bound
pushf
lods
and
mov
scas
fdivl
inc
pusha
nop
out
jae
xor
jle
mov
sar
lods
xchg
xchg
xchg
cmpsl
mov
fiadds
xor
lods
dec
pop
movsb
mov
lock
xchg
jg
es
mov
sahf
pop
in
in
sahf
aaa
mov
int3
nop
insl
sub
pushf
sbb
fistpll
add
add
jnp
mov
cmc
mov
add
pop
add
add
imul
loop
es
test
adc
xor
and
lds
or
movsl
xorb
jnp
mov
jmp
movsb
sbb
mov
mov
jae
xchg
inc
mov
sbb
lcall
add
lret
pop
aad
sub
outsl
fisubrl
fcoms
mov
std
and
aas
ror
repz
lcall
mov
xchg
pop
dec
mov
and
popf
cmc
push
mov
xor
dec
js
inc
mov
popa
pop
call
fdivrl
push
push
out
mov
push
lock
loopne
ljmp
in
je
cld
pop
xchg
sub
jg
or
mov
pop
jno
mov
push
mov
scas
nop
outsl
sub
dec
push
xor
jo
adc
ret
mov
loope
insb
pop
xor
jecxz
mov
add
xlat
pop
xlat
jg
mov
pop
fnsave
loop
add
pop
add
add
dec
imul
mov
mov
fwait
stos
cwtl
xor
ret
dec
push
cmp
inc
and
enter
pop
fs
popf
iret
rorb
lods
pop
jns
loop
xor
xchg
mov
pop
in
xchg
mov
in
test
imul
and
mov
fsts
cwtl
mov
mov
pusha
push
jae
imul
sub
inc
sub
in
cmc
inc
outsl
mov
stos
test
idivl
sbb
jg
mov
ljmp
aad
dec
push
mov
les
imul
ret
cmc
sbb
and
jg
js
xchg
push
lret
push
xor
cmp
lcall
push
inc
sbb
out
mov
adc
xchg
std
adc
leave
pop
jle
xchg
lcall
ficoms
jecxz
mov
add
xchg
mov
idivl
inc
dec
leave
test
repz
pop
add
add
mov
hlt
pop
fbld
stc
lods
jo
or
dec
mov
add
adc
andb
pop
xchg
cld
pop
in
das
shll
xor
leave
lahf
mov
movsb
inc
sbb
roll
daa
loopne
push
and
shrb
rclb
sbb
cltd
out
jmp
ret
subb
in
pop
cmpb
sbb
mov
lret
sbbb
or
ljmp
push
jge
mov
out
or
fidivl
fcmovnu
mov
ds
xorb
jbe
shll
push
adcl
xchg
jb
addr16
out
lock
out
xchg
mov
pop
and
xchg
xor
mov
xchg
push
shlb
dec
push
loopne
sub
fimuls
stc
rep
or
lret
mov
sbb
mov
insl
mov
aaa
sub
add
add
mov
fsubr
xlat
enter
add
pop
add
add
or
mov
cmp
stos
or
scas
cmp
xchg
adc
lret
mov
mov
jle
inc
push
xor
mul
shrb
js,pt
inc
xor
dec
mov
outsb
jo
xchg
les
xor
pop
adc
in
test
jg
sub
loopne
fwait
and
push
mov
rol
cmp
dec
or
add
jae
hlt
enter
mov
popf
or
mov
add
push
fcomps
shll
pop
fcoms
sbb
xchg
in
lret
fildll
icebp
outsb
gs
jo
jb
or
addr16
xchg
push
mov
jnp
mov
mov
stc
xchg
div
dec
pusha
cli
sbb
pop
cmp
mov
movsl
je
add
mov
xchg
adc
add
dec
sbb
inc
mov
jo
xchg
mov
adc
arpl
out
sbb
jmp
imul
mov
jmp
scas
sbb
pop
add
add
jae
mov
pop
mov
sub
mov
popa
out
inc
test
js
and
inc
cwtl
sub
lds
mov
je
es
mul
pop
rcl
int
iret
mov
mov
pushf
ds
mov
xchg
pop
inc
test
pop
int3
lea
mov
adc
dec
insl
and
cmc
inc
jne
roll
inc
xchg
cmp
into
pusha
std
lods
ljmp
jnp
mov
in
aaa
fdivr
xor
jmp
mov
sarl
addb
out
sub
and
jle
push
cmp
inc
xor
pop
in
mov
loopne
and
sub
int
mov
shr
mov
xchg
mov
fisubl
jns
jl
mov
inc
mov
cmp
fidivs
daa
push
mov
or
xchg
xor
cmp
pop
inc
pop
lods
pop
cli
cmc
mov
imul
testb
pop
add
add
add
push
dec
jmp
call
mov
and
pushw
sub
int3
fnstsw
out
push
test
stos
push
pusha
mov
mov
addl
std
mov
sub
aam
emms
inc
push
mov
mov
mov
out
mov
or
lods
inc
pop
adc
lock
pushf
xchg
pop
stc
shlb
cmpsb
inc
loop
leave
pushf
inc
rcrb
add
mov
xchg
xor
cmp
inc
mov
dec
test
and
adc
ds
adc
cmp
sub
adc
dec
out
push
cmp
xchg
lock
mulb
jno
jnp
mov
in
ret
enter
mov
imul
in
mov
leave
dec
pusha
movsb
jne
and
jle
or
cmp
mov
xchg
out
jnp
add
adc
add
das
stos
cltd
inc
popf
jae
out
pop
dec
add
rcl
lea
add
add
enter
out
inc
shll
sarl
popf
jbe
aad
scas
lcall
cld
pusha
pop
mov
enter
cltd
cli
data16
xor
push
cmp
daa
int3
stos
mov
test
es
lds
add
push
testl
jae
and
lods
lds
dec
cmp
mov
xor
loop
das
mov
fldl
lret
cmp
rcrl
outsb
pop
jg
or
mov
mov
subl
lods
push
xchg
jbe
mov
loopne
xchg
mov
andl
mov
insb
sub
incb
adc
lret
ret
sub
std
or
push
xor
dec
cltd
adc
mov
jns
jbe
lods
push
adc
fstpt
int
jp
test
push
mov
pop
fs
sub
inc
cld
sbbb
add
aam
int
mov
mov
push
imull
pop
add
add
pop
lea
jno
fcomi
outsb
jmp
xor
xor
out
mov
out
test
stos
in
pop
iret
in
push
cs
adc
aam
fidivs
pop
mov
push
jecxz
pop
push
rcll
dec
pop
ss
je
mov
outsl
insb
daa
in
pop
out
mov
out
mov
cpuid
fistl
and
out
sub
pushf
mov
cmp
dec
jo
cmp
ds
divb
mov
adc
sub
cli
js,pt
cld
inc
into
mov
in
pop
addr16
mov
test
loopne
enter
inc
fisttpl
add
pop
cs
in
imull
push
shll
sub
imul
lret
sub
dec
aas
rcrb
sbb
mov
aas
add
shl
or
cmpsb
xchg
enter
fsubs
daa
daa
xchg
aam
fwait
pop
xchg
xchg
jo
addl
add
arpl
addr16
add
mov
paddusb
adc
add
pop
add
add
aad
cld
or
stos
and
imul
icebp
js
jg
dec
push
push
movsb
cmpsb
cmp
or
adc
jbe
sti
xchg
out
mov
add
fwait
shrb
cmpb
cmp
test
rorb
xor
and
ja
push
repz
es
mov
dec
jecxz
out
mov
iret
xor
dec
mov
sbb
dec
fiaddl
push
arpl
ret
and
dec
fs
mov
jle
movsl
mov
adc
cld
jl
inc
push
out
fmull
mov
mov
mov
xor
xor
out
into
and
stos
sbb
dec
call
jo
push
and
and
into
loope
xor
cwtl
icebp
jp
cmpl
xchg
out
aas
lahf
sbb
push
cltd
xor
in
insb
ja
sub
jns
push
mov
shll
add
out
cmp
cmp
pushl
ja
out
test
add
pop
add
add
cmp
add
movsb
mov
cmp
into
sub
addr16
stos
int
movsl
xor
cs
cmp
cli
cltd
cmp
dec
inc
loop
push
or
aad
xor
frstor
fstl
leave
mov
insl
imul
dec
outsl
add
and
jge
pop
sub
mov
pop
icebp
test
mov
cmpsl
repz
pop
test
in
push
dec
lods
xor
pop
loope
mov
adc
cmp
jno
inc
fdivs
sub
inc
mov
pop
loopne
inc
add
daa
pop
mov
and
dec
dec
sti
outsl
jns
inc
aaa
cmc
xor
sti
cwtl
mov
pop
aam
or
repz
and
mov
icebp
in
adc
fisubs
test
lea
push
sbb
loope
and
frstor
push
xor
sbb
jne
test
fucomi
jecxz
sbb
xor
test
push
scas
decb
jo
ja
cld
add
pop
add
add
push
and
lcall
jmp
jns
push
loop
roll
jp
mov
jg
mov
shll
push
sub
jmp
jae
push
pinsrw
mov
mov
and
je
xchg
xchg
xor
inc
imul
sbb
sbb
jecxz
add
push
scas
mov
mov
cmp
sub
daa
xchg
jle
mov
test
idivl
fisubs
lea
mov
pop
insl
jg
hlt
in
scas
call
pop
push
jbe
cmp
or
lahf
cld
sahf
outsl
nop
push
sar
add
and
into
jae
daa
add
cmp
lret
inc
jmp
sbb
loop
mov
xchg
jne
jg
inc
jecxz
int3
bound
sub
inc
les
inc
inc
pop
lcall
push
push
jmp
sbb
add
xchg
and
movsl
mov
mov
mov
cwtl
or
sbb
std
add
pop
add
add
lock
pop
insb
mov
fiaddl
or
add
subb
or
cs
pop
jno
mov
and
sub
pop
xchg
mov
sub
xchg
rorb
dec
mov
cltd
adc
push
out
or
fdivrp
arpl
mov
sbbl
xor
pop
pusha
mov
or
out
aad
loop
mov
ffree
ja
das
sub
ret
mov
mov
mov
outsl
xor
cmp
scas
movsb
test
xchg
cmp
or
cmpsb
rcr
es
aam
and
push
test
jg
dec
fnstenv
adc
jle
in
mov
scas
or
jmp
mov
inc
gs
int3
out
fiaddl
cmp
dec
fwait
mov
dec
ret
xorl
mov
cmp
pop
pop
add
jnp
pop
or
lahf
mov
jne
insb
test
jp
mov
test
aas
rcr
push
in
fdivl
mov
lock
add
pop
add
add
lahf
add
lea
call
test
iret
adc
insl
jp
arpl
xor
add
xchg
repnz
into
iret
ret
pop
dec
std
pop
add
rclb
nop
jo
fstpl
pop
push
or
jb
sub
fsub
mov
cmp
ss
push
adc
xor
cli
pop
xchg
flds
cmp
stos
xor
gs
mov
fs
in
rolb
dec
lea
iret
cmp
mov
or
inc
js
ja
outsl
fsts
dec
mov
ret
sbb
mov
mov
jle
hlt
sbb
mov
jecxz
icebp
xchg
scas
or
js
xchg
out
xchg
dec
pop
add
mov
data16
outsl
cwtl
popf
adc
les
xor
inc
repz
insl
jl
or
ror
xor
mov
inc
mov
add
add
mov
mov
xchg
mov
incl
add
add
add
jp
or
sbb
sbb
sub
cmp
sub
out
sub
movsb
mov
cli
addr16
jb
adc
mov
cmpsl
jbe
mov
loop
or
call
mov
gs
dec
aas
mov
stc
pushf
lahf
sub
js
test
fwait
xor
rorl
js
push
pop
popf
sub
imul
xchg
jg
int3
sarb
je
daa
push
xchg
push
mov
pop
inc
fsubl
lcall
push
and
iret
mov
insl
inc
ret
pop
aad
sbb
pop
sbb
sub
dec
mov
cld
inc
mov
ja
sub
insb
bound
jmp
dec
mov
xchg
int
test
mov
ret
icebp
or
dec
mov
adc
les
mov
cmpsb
iret
add
repnz
orb
imul
aaa
mov
add
mov
xor
cmp
add
add
popa
add
rcrl
fisubrs
mov
outsb
je
out
and
or
adc
std
je
scas
dec
push
jnp
mov
cmp
shll
inc
sbb
jecxz
bound
pop
cmp
stc
addr16
inc
movsl
sarl
mov
xchg
jp
sub
leave
dec
pop
sbb
or
mov
inc
scas
ret
or
xchg
or
loop
inc
pop
push
rclb
xchg
lret
or
rorl
sbb
in
cld
jbe
cli
or
mov
or
or
inc
pop
jmp
rcr
cmc
dec
cmp
dec
cmp
mov
sbb
loop
aad
xchg
in
mov
lods
stos
sub
sahf
pop
fucom
gs
jle
insl
mov
leave
dec
mov
mov
mov
fsts
mov
jp
inc
and
jbe
jp
mov
cmp
aad
mov
imul
xchg
enter
push
fisttps
test
ret
add
add
add
add
lret
dec
push
cmp
ret
inc
call
call
mov
test
inc
xlat
xor
sbb
out
js
xor
push
les
pop
aaa
jmp
xchg
pop
stos
pop
sahf
xchg
cld
or
mov
fcoms
mov
cmpsl
aad
aas
sub
pop
push
push
add
push
cwtl
in
repz
inc
in
xor
and
mov
les
xchg
push
arpl
pop
fwait
je
lods
ljmp
adc
std
loopne
insl
test
stc
sbb
xchg
frstor
ret
push
push
in
fsubs
subl
ret
xchg
aad
sbb
pop
mov
cmp
sub
fistps
or
ret
sbb
push
push
ja
scas
incl
loope
movsb
js
mov
cmp
pop
xor
xor
xlat
mov
dec
outsb
outsb
arpl
push
inc
in
jno
mov
jne
cwtl
jg
mov
into
fwait
cmc
pop
sub
dec
add
add
add
add
hlt
rorl
outsb
in
js
test
call
cmp
lahf
jp
dec
push
ret
loopne
bound
or
cmp
call
inc
add
insb
cwtl
cmp
cmp
imul
cmp
inc
jecxz
iret
xlat
add
lods
cltd
gs
lahf
into
or
pop
pop
ret
mov
iret
pop
sbb
mov
out
pop
mov
cmpsb
sbbl
dec
mov
fadds
in
out
in
jo
dec
les
cmc
add
mov
sbb
ror
fidivrs
cmpsl
adc
mov
sbb
cltd
mov
push
lock
inc
jmp
xorl
xor
xor
jae
subl
inc
dec
push
jle
or
js
fldenv
add
add
cmp
in
push
shll
mov
sub
inc
add
xor
mov
pop
mov
in
or
add
pop
add
add
shrb
dec
adc
gs
lcall
fbstp
scas
cmp
cmp
pushf
shrb
mov
sbb
test
pop
cmp
push
sti
dec
sub
test
loope
int3
push
xor
insb
lcall
push
fwait
mov
hlt
addr16
imul
xchg
adc
xor
stc
push
jne
inc
jge
lahf
push
fmuls
fisttps
lds
out
xchg
shll
add
add
popa
adc
adc
dec
pop
jg
or
pop
iret
inc
xchg
inc
mov
adcb
pop
invd
xchg
lock
mov
ss
cmp
ja
iret
cwtl
fisubrl
adc
cmp
pop
dec
lods
add
and
loope
outsb
fisubl
out
and
add
cltd
cld
popa
xor
cmp
loope
xchg
add
inc
out
aas
mov
scas
adc
sti
pop
add
add
add
add
clc
sbb
stos
mov
jge
fldt
out
inc
in
popf
movsl
mov
test
aad
mov
mov
dec
jle
frstor
clc
inc
fisttps
mov
sbb
imull
ds
push
jmp
into
mov
add
sbb
cmp
xchg
outsb
call
dec
pop
ret
xchg
sbb
jge
mov
int
sbb
repz
inc
cwtl
fdivl
jae
cmp
or
xor
push
inc
andl
stc
and
mov
or
add
inc
mov
mov
jl
scas
cmc
out
xchg
mov
dec
add
pop
dec
push
imul
push
add
pop
dec
cmpsl
mov
adc
sub
cmp
movsb
mov
dec
test
add
mov
lret
ja
xchg
mov
dec
dec
xchg
add
aad
push
bnd
jl
movsb
mov
pusha
add
add
mov
xlat
mov
rsm
shrl
cwtl
jg
mov
cli
xchg
xor
cmpsb
sub
movsl
push
inc
ret
stos
or
ret
xchg
sbb
aam
dec
dec
adc
repz
jle
sbb
popf
push
lahf
push
sarb
cmc
xchg
xor
xchg
dec
inc
or
dec
and
xor
or
and
sbb
leave
fistpll
fimuls
in
cli
pop
xor
popf
lock
cli
adc
jecxz
dec
mov
mov
stos
fs
lods
jno
or
roll
pusha
pop
outsb
loop
pop
addr16
cmp
xor
mov
repnz
cmpsb
icebp
push
mov
push
loope
dec
data16
jg
rcr
aad
push
mov
ja
pusha
lahf
ljmp
js
popf
scas
aad
cmc
stc
xchg
ret
xor
push
sbb
fwait
adc
inc
loop
stos
fnstenv
jae
xchg
icebp
add
sbb
movaps
cmp
add
in
out
ja
fists
out
mov
push
add
pop
add
add
sahf
sub
pop
or
lock
mov
lods
xor
push
sub
sbb
call
jnp
sub
lahf
loop
or
add
or
insb
xchg
push
data16
jb
loopne
lods
ret
jb
and
cwtl
dec
and
mov
push
xor
movsl
in
push
xor
jl
scas
imul
cltd
fsubrl
repnz
jecxz
mov
fwait
xchg
lcall
pop
aaa
push
nop
int3
adc
stos
push
or
das
pop
rcll
cmpsl
sub
neg
cmp
mov
clc
mov
add
and
imul
xor
xchg
int
jmp
lret
mov
out
pop
in
cli
xchg
shrl
lcall
push
shll
lret
vmaskmovdqu
loope
inc
pop
push
aad
nop
call
cmp
mov
out
jge
test
add
pop
in
daa
jle
add
mov
add
add
add
or
int3
push
cmp
add
popa
jo
or
std
loop
push
in
sbb
sbb
pop
in
push
sbb
dec
push
out
loop
add
test
jmp
stc
sbb
mov
fisubs
sub
dec
mov
sti
push
int
jb
cwtl
pop
cltd
mov
add
cmpsl
sub
js
sbb
js
popf
enter
jecxz
push
dec
fistpl
xchg
ret
or
push
xlat
sbb
or
cmp
pop
loopne
cwtl
mov
adc
movsl
pop
jmp
fldt
adc
aas
xchg
adc
out
fsubr
rorl
sbb
adc
in
dec
call
js
mov
dec
popa
fsubrl
out
adc
sub
shl
ljmp
push
sub
pop
or
jle
sahf
inc
lods
or
out
jb
mov
or
test
pop
ja
push
in
pop
adc
dec
add
jg
idivl
mov
cld
jne
add
pop
add
add
jp
out
add
pop
cmpsl
ljmp
sarb
mov
adc
ss
adc
pop
fcmovbe
mov
or
xchg
adc
adc
nop
mov
data16
ficomps
negb
shlb
push
shll
lret
cmpsl
ret
decb
cmp
mov
jns
xor
mov
push
mov
mov
rep
repz
dec
fbld
pusha
fcmovnu
cmp
and
or
aam
and
ret
int3
loope
xor
pop
jmp
push
or
iret
or
sub
mov
xlat
int
add
es
stos
fsubp
xor
xchg
push
xor
jg
jne
aas
popa
stos
mov
cmpsb
xor
push
scas
xchg
test
sbb
sub
push
movsb
jbe
lea
mov
lahf
adc
and
sub
ss
cltd
add
sti
jg
les
xchg
jl
add
pop
add
add
aad
out
xor
xchg
dec
cmp
push
and
cmpsl
lahf
cmpb
inc
add
dec
mov
pop
xchg
imul
mov
jno
cmp
lods
jecxz
lods
movsl
shll
out
pop
andnps
stos
sub
fimull
movsl
and
rcrb
xchg
mov
in
jmp
fnstcw
push
sbb
or
xchg
xchg
xor
sbb
rcll
in
sbb
ficomps
jl
addr16
cmp
mov
cmpsb
leave
mov
jp
popf
pushf
dec
jbe
mov
mov
repnz
mov
pop
jle
insl
mov
dec
mov
shlb
mov
pop
sub
and
movsb
xlat
xor
xor
xchg
or
int3
push
or
stc
mov
sbb
inc
jl
mov
lahf
jge
insb
cmp
add
lock
std
pusha
push
xchg
and
sbb
scas
aam
jnp
fnsave
xchg
idiv
adc
or
add
add
add
mov
incb
cs
int
rcr
icebp
imul
cwtl
add
or
insl
lret
dec
jmp
push
aas
mov
cmp
pop
or
fstpt
es
dec
mov
cmpsb
sarl
lcall
sbb
test
in
xchg
dec
jl
push
clc
sub
sbb
enter
adc
cmp
loope
sub
jg
jl
push
cmc
jae
xchg
pop
and
adc
dec
mov
push
xor
adc
out
push
loope
push
add
addr16
loopne
jns
aas
movsl
lds
lock
jo
sti
int
sbb
xor
pop
aam
out
push
flds
insl
pop
das
or
int3
je
mov
int
insl
aas
pop
pop
sub
loop
inc
adc
rcl
lret
das
fisubrs
pop
fdivrl
mov
insb
fidivs
orb
pop
jns
dec
and
in
adc
mov
das
and
cmp
fwait
shrb
xchg
add
mov
jno
std
outsl
mov
inc
loop
dec
push
outsb
rolb
add
add
xor
cmpsb
aam
movsb
sbb
add
loop
popf
aad
scas
push
icebp
xor
pop
jmp
xchg
add
mov
xchg
pop
sbb
repz
fnstenv
in
sbb
add
xchg
mov
in
ret
jnp
outsl
cmp
stc
push
andb
pop
fdivr
mov
push
cmc
pop
cmp
lret
adc
iret
cmp
fistl
lods
add
aad
xor
bound
push
sti
fstps
inc
jae
mov
sbb
sub
movsl
cmp
add
mov
test
push
test
mov
ds
movsl
xchg
jb
xor
and
cmpb
outsl
cmp
sub
mov
mov
fsubs
jae
sub
and
sbb
js
movsb
or
xchg
mov
pop
outsb
mov
cli
inc
mov
sub
push
arpl
sub
inc
add
jmp
fcmovb
sbb
add
pop
add
add
stos
pop
stc
fdiv
add
out
dec
out
adc
push
aam
xchg
push
push
mov
pop
push
push
in
jo
cmp
xchg
adc
add
adc
jecxz
bswap
mov
jno
and
sarl
inc
sub
scas
jp
push
aaa
inc
cmpb
shl
xchg
gs
mov
push
cwtl
pop
mov
fdivrs
sbb
lahf
sub
rorl
cli
sub
or
ret
cmpl
stos
add
aas
add
pop
frstor
inc
clc
adc
cmp
iret
and
xor
int
xor
sbbb
push
push
pop
into
dec
push
fadds
jl
pop
push
je
pop
xor
fs
push
bnd
mov
stos
jnp
xchg
loopne
sbbl
mov
mov
jne
subb
rolb
cmpsl
dec
icebp
in
popa
mov
out
push
in
push
imul
daa
arpl
and
add
xor
xchg
lds
push
mov
lcall
add
and
mov
jo
push
xor
mov
int3
fadds
or
rep
idivl
add
js
lahf
pop
addb
sbb
cmp
testb
fnsave
xchg
inc
lods
leave
cs
sahf
test
inc
mov
arpl
into
dec
push
dec
mov
mov
dec
jns
jg
sbb
fdiv
lret
sbb
shrl
inc
pop
mov
imul
cmp
xlat
dec
clc
call
and
mov
rorb
jp
xor
or
xor
mov
cmpsb
popa
test
mov
push
jne
fistl
xor
test
test
inc
popa
adc
test
push
mov
cmp
out
cmpsl
dec
mov
leave
repnz
xchg
sbb
sub
push
pop
mov
mov
add
add
dec
cli
inc
jg
int
cs
and
cwtl
lahf
push
add
pop
add
add
fnsave
xor
imul
test
stc
sbb
fidivl
xor
xchg
push
test
jge
sub
arpl
testl
xchg
pop
inc
popf
movsl
movsb
inc
inc
icebp
mov
jno
movsb
sbb
daa
dec
and
jne
fldl
mov
out
xchg
clc
push
xchg
mov
pop
mov
dec
jmp
std
movsb
iret
and
pop
inc
xchg
or
js
sbb
flds
sub
xorl
adc
mov
loope
gs
sbb
xor
sub
jbe
cmpsb
mov
adc
mov
dec
sub
lcall
push
inc
inc
push
outsb
push
rcrb
sti
adc
mov
sbbl
lods
bound
add
popf
cli
call
call
jmp
xchg
push
cwtl
in
lock
pop
leave
insb
call
lock
std
cmp
jle
fistps
push
or
cmpsb
sgdtl
pop
add
add
jmp
es
dec
inc
gs
imul
test
int3
test
xchg
inc
cld
add
std
icebp
jno
xchg
push
aad
fimuls
test
out
loop
in
mov
sbb
fisttpl
push
test
repz
std
mov
jle
lods
sbb
repz
pop
test
adc
adc
pop
cmp
push
mov
aam
js
stos
fildl
fdivrl
daa
jl
sbb
stos
loopne
jae
scas
repnz
sub
pop
dec
xor
sub
fstl
mov
ja
dec
adc
inc
pop
sub
ror
loop
seto
cmp
scas
imul
sbb
mov
aad
notl
mov
and
cmpsb
test
idivl
mov
cld
mov
fimull
loop
and
aas
out
rcl
mov
push
movsl
dec
popf
dec
pop
in
mov
jl
xchg
add
add
iret
xlat
fimull
out
outsb
das
lods
adc
add
add
add
xchg
or
xchg
push
inc
aaa
dec
xchg
repnz
sbb
cltd
xchg
mov
or
mov
sbb
mov
dec
orl
mov
fadds
repz
aas
inc
stc
and
add
pop
sub
add
out
outsl
cmpl
inc
adc
nop
jb
inc
dec
mov
outsb
xchg
aas
aaa
bound
arpl
rcrl
movsb
dec
sbb
arpl
movsb
gs
mov
push
insb
loopne
in
push
dec
inc
mov
adc
or
frstor
adc
sub
call
clc
mov
jl
and
test
dec
mov
jg
incl
sub
adc
dec
xchg
push
xchg
notl
imul
xchg
ds
leave
or
mov
mov
insl
xchg
neg
test
sti
pop
xor
or
test
jo
xor
dec
jmp
dec
scas
iret
outsb
jmp
in
pop
outsl
dec
pusha
mov
mov
add
pop
add
add
test
idivb
loopne
imul
movsl
sub
push
imul
loop
test
mov
dec
jmp
adc
xor
mov
insl
test
jae
mov
cmpsl
xor
sbb
and
jbe
rorl
jle
sbb
sbb
jp
push
cld
mov
or
addl
push
pop
leave
movsb
scas
mov
pop
aad
repnz
cs
les
hlt
popa
pop
adc
dec
aas
dec
negl
cmc
mov
repz
dec
rcl
fldt
push
iret
fidivs
cmp
sbbb
push
adcl
mov
cmp
sub
mov
push
ja
xchg
xchg
ds
pop
pusha
aam
rorl
mov
xchg
out
lcall
les
insl
cmovb
push
add
std
sbb
stc
cld
or
jo
pop
mov
add
add
or
jns
enter
sub
push
outsl
mov
xor
pop
daa
out
jo
jnp
mov
jae
mov
aad
ss
test
inc
mov
adc
dec
mov
mov
inc
lock
pop
dec
bound
mov
and
xor
fwait
iret
cmovl
fcmovbe
mov
inc
lea
imul
sahf
testb
xor
mov
sarl
jge
iret
sbb
push
in
loopne
or
cmp
nop
jnp
or
push
enter
sahf
add
cmc
iret
movl
inc
xchg
pop
add
cltd
inc
xchg
mov
mov
mov
pop
out
and
aam
adc
xchg
and
inc
jle
xor
inc
rol
mov
jns
mov
je
fstpl
sub
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
shll
push
je
inc
daa
sub
jne
hlt
sub
adc
in
pop
push
iret
jne
or
orb
imul
xchg
in
xor
xchg
pop
jne
add
xor
pop
decl
aad
jnp
std
out
fneni(8087
daa
mov
mov
fwait
or
inc
xchg
jno
scas
mov
cmp
pop
mov
push
xorb
hlt
leave
cmp
sbb
push
addb
popa
push
lcall
ret
dec
sbb
push
mov
sbb
rorl
cmp
push
shll
aaa
mov
jno
scas
jnp
sbb
lods
push
push
or
imul
inc
and
and
and
mov
xchg
test
push
mov
nop
inc
mov
sbb
inc
imul
sbb
jp
xor
xchg
xor
into
dec
dec
mov
push
inc
daa
cmp
jle
in
dec
ret
mov
rcrl
xor
aad
push
lods
cs
mov
dec
pushl
dec
jns
inc
leave
adc
add
add
add
add
fdivrl
out
adc
mov
sub
push
push
dec
cltd
imul
dec
scas
push
fistpll
push
inc
ficoms
punpcklwd
sub
xor
mov
push
nop
xchg
mov
and
cs
mov
xor
test
and
hlt
jmp
dec
xor
je
lods
xor
xchg
cld
dec
lret
mov
and
pop
xor
fbld
push
je
or
aad
test
mov
mov
fisubrl
jo
pusha
jo
xchg
jno
mov
rorb
arpl
scas
fcmovnb
lcall
add
push
int
repnz
mov
inc
lahf
enter
push
or
lea
cltd
in
mov
push
inc
jbe
iret
and
rcrb
cmp
das
add
mov
jmp
in
jecxz
loop
pop
sub
inc
ja
pop
aas
pop
jmp
mov
rclb
add
int
fs
push
jnp
fld
sub
cmp
bnd
mov
xlat
je
decl
sbb
inc
inc
push
or
adc
mov
dec
pushf
loop
push
xor
and
or
icebp
push
das
and
das
jo
inc
insl
xchg
sbb
jp
xchg
fbstp
cmc
cmp
jo
xlat
popa
in
mov
daa
loope
add
jnp
push
cmp
testb
pop
ret
cs
jle
pop
jecxz
rorl
pop
sbb
in
and
inc
xor
sbb
sub
or
cmp
in
test
nop
jle
pop
fcoms
stos
sbb
fwait
test
into
ficompl
inc
adc
push
ljmp
cmc
or
mov
fnstsw
std
push
sub
cmp
push
mov
dec
arpl
insb
in
test
stos
stc
cmpsl
xchg
push
ficompl
cli
push
mov
sbb
repz
jae
ja
div
fisttpll
jg
xlat
push
add
pop
add
add
cmp
aam
dec
or
mov
sahf
sti
pop
scas
or
adc
push
aaa
xchg
mov
sti
sbb
loopne
lods
lahf
je
pop
ljmp
dec
out
leave
jnp
push
sahf
xor
mov
iret
out
sbbb
or
xchg
jbe
fs
sti
dec
cld
mov
call
push
movsl
jp
flds
pop
ret
es
jno
cmp
cmpsl
daa
stos
repnz
pop
mov
and
mov
sbb
cmc
adc
mov
call
mov
popa
inc
leave
cwtl
into
dec
out
push
sub
jbe
inc
popf
jbe
xchg
das
pop
xor
mov
movsb
ret
adc
jo
and
sti
dec
pop
shl
or
popf
jne
cwtl
hlt
adc
or
je
es
roll
sub
stc
push
jmp
pop
cli
xor
mov
sub
cmpsb
jp
add
add
cli
std
jg
mov
repz
pop
add
pop
add
add
dec
add
test
int3
dec
lock
or
test
rorl
sbb
popa
cmp
ret
xchg
cmp
xchg
push
xor
sbb
mov
movsl
enter
sub
arpl
pop
adc
lret
adc
xor
iret
test
dec
pop
xor
in
xorb
or
pop
daa
inc
sbb
xchg
cli
cmp
mov
lahf
jge
aas
push
outsl
push
adc
fnsave
repz
call
adc
xchg
test
jnp
sbb
filds
jo
out
adcl
push
xor
ss
jbe
cmp
test
lret
inc
outsl
std
sub
rol
imul
pop
fstp
les
add
loopne
flds
movsl
dec
push
daa
sbb
mov
jge
pushf
cpuid
out
ficomps
cli
sbb
sbb
jecxz
push
sbb
call
lods
loop
add
add
mov
std
incl
mov
pop
sub
sbb
add
add
add
ja
jmp
popf
std
das
mov
fistps
fwait
stos
jl
dec
xchg
addr16
pop
push
mov
das
das
sbb
xchg
inc
push
out
dec
lahf
cmp
or
leave
lret
ljmp
adc
loope
xchg
cmp
add
sti
inc
xor
jle
cmp
push
adc
jp
xchg
push
adc
pop
jae
cmp
test
mov
arpl
adc
mov
cmp
add
test
push
fwait
add
push
sbb
outsb
ss
pop
dec
pop
xlat
aaa
pop
punpckhdq
mov
dec
std
pop
ret
xor
cmpsb
push
dec
rorb
pop
in
lods
test
movsl
mov
inc
adc
xor
loopne
pop
push
gs
fdivrl
and
pop
or
xchg
sub
std
push
inc
aaa
adc
int
add
push
es
jg
pop
pop
mov
adc
pop
add
add
mov
movsb
cwtl
mov
mov
stos
jl
cmp
mov
test
icebp
rsqrtps
sbb
jnp
mov
in
pop
sub
into
mov
mov
sahf
das
data16
mov
cmp
push
push
mov
es
imul
adc
sahf
inc
scas
cmp
ret
mov
mov
push
mov
and
pushf
adc
jp
adcb
subl
adc
out
insb
cli
ja
mov
dec
cs
xor
xchg
cmp
jge
or
xchg
push
pop
add
ret
push
mov
mov
sub
mov
cmp
je
inc
lret
dec
lret
cmc
daa
addb
add
subl
and
push
arpl
inc
dec
cmpsl
xchg
sub
in
push
insb
clc
inc
ret
adc
int
add
pop
daa
sbb
push
clc
or
mov
add
sub
repz
add
add
add
cmp
inc
mov
mov
shrl
lods
je
pop
push
dec
mov
sti
push
add
divb
dec
nop
sbb
out
adc
xchg
sub
lret
addb
sub
xchg
pop
mov
pushf
cmp
pop
mov
dec
xchg
stc
pop
xor
jnp
rcr
jo
test
in
iret
pop
dec
mov
push
xchg
mov
call
pusha
cmp
mov
dec
pop
nop
or
jae
adc
sbb
xchg
push
arpl
mov
fs
jo
insb
lss
test
mov
lds
shrb
push
icebp
push
sbb
fwait
add
popf
or
ror
hlt
push
adc
lods
cli
lahf
mov
rcrb
outsl
and
add
add
insl
insl
jb
jle
cmp
sbb
jg
jo
sbb
push
mov
xlat
add
stc
lods
xor
xor
loop
test
add
add
add
std
addr16
mov
shrb
xchg
cmp
aam
add
jae
sub
decl
sbb
pop
jnp
repnz
add
adcl
testl
int3
mov
test
mov
pop
mov
push
push
push
cmp
nop
test
in
dec
mov
popl
jge
sahf
dec
inc
inc
insb
pop
cmp
gs
inc
mov
xchg
ss
sub
loopne
in
rorb
push
test
jae
rclb
std
cmp
inc
sub
push
jmp
xchg
sub
lods
jle
sti
stos
into
pop
in
lret
cmp
mov
insb
fdiv
sbb
mov
pop
mov
xor
cmpsb
fs
inc
aam
xchg
insl
frndint
jo
cs
mov
or
ja
mov
mov
test
cmpb
pop
inc
loop
sbb
mov
add
add
das
mov
pop
jne
movsb
add
ficoms
stos
sbb
jmp
ljmp
ja
sbb
add
pop
mov
push
xor
in
push
push
xchg
mov
inc
test
adc
push
inc
jg
loop
pop
repz
add
cmpsl
movsb
addr16
dec
lret
sbb
sahf
jmp
push
nop
or
fisttpll
out
rcll
fsubs
jns
mov
in
daa
mov
add
loopne
pop
mov
out
sbb
imul
rorb
mov
outsb
hlt
cmpsl
mov
in
leave
mov
rorl
xchg
jae
enter
les
dec
out
sub
push
add
xor
add
loop
jl
mov
inc
loope
sti
sub
frstor
sub
push
and
ror
push
mov
xchg
loop
lret
outsl
imul
je
sti
movsl
data16
jecxz
rclb
inc
pop
in
fucomp
je
test
mov
fwait
sub
ret
ja
cld
jecxz
mov
cmp
sub
cmpsl
inc
es
cmp
add
add
in
out
arpl
aas
jno
xchg
into
or
add
pop
add
add
mov
mov
clc
adc
push
mov
mov
repnz
sahf
sub
mov
sub
xchg
sbb
scas
pop
pop
adc
pusha
jle
das
inc
inc
cmp
mov
lods
ficoml
adc
rorb
sub
loop
jle
mov
sahf
sarb
mov
inc
jp
loop
test
mov
or
or
jp
inc
dec
adc
xchg
add
movsb
mov
pop
fisubrl
jp
mov
mov
popa
mov
das
dec
mov
push
mov
call
mov
jge
mov
jp
lea
scas
or
clc
data16
stos
shll
in
test
mov
outsb
jns
pop
data16
mov
pcmpeqw
mov
scas
icebp
mov
les
ja
add
scas
jbe
fisubrs
fdivs
xchg
jl
add
sbb
out
cld
mov
add
lret
add
pop
add
add
es
loopne
cmp
aad
xor
xorb
sbb
or
shll
in
iret
mov
sbb
fstpl
cmc
in
push
sbb
and
shll
iret
jmp
fimull
popl
fimull
jl
bound
push
loop
in
xor
sbb
inc
cmp
xchg
imul
adc
and
out
lcall
cmc
or
or
mov
mov
cmpsb
mov
std
gs
inc
fwait
or
or
mov
lods
and
pop
push
pop
sahf
gs
int3
sarb
test
shlb
xlat
out
lock
jae
mov
mov
andb
lcall
lret
or
int
push
mov
int3
mov
sub
and
fdivp
add
in
add
cmp
out
lock
push
mov
add
pop
add
add
mov
aam
mov
xchg
cli
add
neg
pusha
sbb
sub
dec
push
cmpb
push
jne
push
cmpb
mov
das
and
mov
lret
popa
jb
outsb
mov
mov
es
sub
add
inc
push
xchg
fcoml
sub
mov
sub
nop
pop
mov
sbb
stos
jp
sbb
adc
fistpl
add
bound
mov
mov
movsb
mov
dec
or
mov
mov
test
test
aaa
cmpsb
repnz
dec
test
and
cli
xor
mov
jno
scas
or
stos
scas
sbb
lret
test
or
dec
vpshufd
jl
mov
jp
lods
pop
ljmp
popf
fisttpll
test
add
add
lods
jg
sub
add
and
add
add
add
pop
imul
clc
lcall
jmp
xchg
xchg
push
aam
mov
push
outsb
int3
popa
nop
mov
call
jmp
fcoml
sbb
popf
int3
dec
cs
or
lret
mov
mov
inc
fs
cmp
bound
pushf
or
xchg
xchg
sahf
pop
add
rolb
bound
aad
adc
adc
xchg
pop
cmp
jge
fdivrp
mov
and
popf
and
ret
mov
imul
mov
mov
xchg
mov
outsb
sub
push
sub
sbb
int
cmp
push
sbb
cmp
js
cld
add
test
xchg
inc
jno
fildl
jle
dec
iret
mov
push
add
stc
jl
sub
and
xchg
pop
fsubrs
and
add
cmp
ficoml
mov
dec
idivl
cld
fcmovbe
out
shr
aam
and
add
add
add
bound
out
inc
test
ja
push
cmp
mov
cld
jle
mov
popf
icebp
in
mov
inc
in
jno
and
pop
and
mov
orl
lret
jne
mov
test
lret
sub
add
lds
mov
test
adc
mov
icebp
jmp
icebp
xor
pop
jb
lret
add
bound
popf
inc
in
movb
xor
adc
xor
fldl
das
add
pop
lcall
es
in
lods
in
rcr
or
add
sub
lcall
mov
test
pop
jo
or
and
sub
jl
mov
lret
pop
xchg
nop
into
xor
pop
sub
loopne
push
aam
mov
xchg
pop
sub
rclb
popl
pop
jae
lahf
mov
or
pop
mov
jle
cwtl
ret
jmp
add
add
mov
iret
mov
adc
mov
add
add
add
xor
lcall
hlt
add
mov
das
jmp
std
fcoms
mov
dec
iret
xor
mov
pop
outsb
out
imul
jnp
sarb
aaa
push
mov
xor
in
mov
or
hlt
inc
loopne
lahf
call
jle
pop
inc
and
lods
push
adc
add
adc
xchg
ret
add
ret
dec
in
pminsw
mov
xlat
lock
mov
stc
inc
int3
inc
jp
lcall
movsl
imul
insb
mov
xor
mov
test
mov
les
push
rcrl
cmp
jo
je
inc
mov
scas
stos
cmp
or
and
stos
jge
imul
mov
push
push
cltd
mov
dec
mov
stos
mov
test
mov
mov
stos
lock
nop
mov
pushf
and
add
std
pop
mov
out
ucomiss
or
add
mov
lahf
and
addb
pop
add
add
pop
mov
pop
mov
test
lret
pushl
test
mov
pop
aaa
push
jecxz
jnp
jle
nop
lods
dec
inc
push
add
dec
ja
mov
or
loopne
das
shr
jo
loop
and
int
lods
divl
push
leave
rorl
or
fnstenv
and
in
out
adcb
aas
pop
adc
push
loopne
mov
aam
nop
enter
repnz
out
int3
jo
jb
mov
fists
mov
push
mov
stos
pop
adc
sarb
sub
cmp
push
rolb
or
cmpsl
ja
sahf
pop
xlat
mov
orb
xor
incl
xorb
add
aaa
and
cmp
incl
nop
sub
fbld
leave
scas
scas
les
fwait
sub
xlat
cmp
pop
imul
jl
mov
ljmp
add
adc
add
xor
clc
cli
clc
sarb
js
mov
add
add
add
daa
pop
pusha
jecxz
out
inc
xchg
jge
das
popa
pop
aas
shll
lods
push
xlat
and
ficompl
adc
sbb
pop
push
sbb
jg
scas
scas
sub
or
fimuls
or
loopne
aas
fistl
call
mov
push
scas
in
mov
sub
or
push
sub
xor
imul
or
rcrb
jl
push
ljmp
int
cmp
sub
mov
dec
mov
cmp
leave
or
jg
dec
fldt
and
sbbl
mov
lock
imul
pop
arpl
out
mov
pop
mov
and
in
jb
jle
add
lods
out
in
xchg
in
aam
add
dec
xchg
pop
and
imul
mov
push
pop
data16
rcrb
aam
scas
ds
xor
test
imul
add
push
cmpsl
ret
dec
adc
add
pop
add
add
push
ret
es
push
cmp
sub
lahf
sub
jo
stc
clc
cltd
add
inc
outsl
add
jbe
mov
test
push
cmp
cwtl
cmp
lcall
xor
icebp
and
jne
fwait
test
in
ret
inc
pop
into
mov
test
cmp
pop
mov
jmp
lret
inc
loopne
popa
jmp
sti
add
jnp
jge
or
mov
nop
push
mov
lret
mov
pop
fs
in
repnz
call
jno
pop
xchg
jbe
test
pmaxub
xchg
jmp
fistps
or
pop
jo
stc
dec
aas
lahf
fnstsw
mov
or
repz
mov
orb
iret
imul
popa
xchg
loopne
lock
xchg
push
jmp
adc
push
push
mov
adc
mov
fs
es
data16
pop
sub
daa
lds
cmp
inc
daa
add
pop
add
add
add
mov
loop
lock
cs
loop
pop
inc
shlb
popa
outsl
add
mov
jno
cmp
sahf
pop
outsl
outsl
jmp
xchg
push
mov
test
movsb
push
cmp
jne
pop
nop
inc
push
and
sub
sbb
cmpsl
rcl
push
jmp
jnp
mov
or
sbb
push
adc
push
mov
mov
push
cmp
jle
adc
push
and
inc
sbb
add
mov
or
cltd
sti
sub
cmp
test
dec
loope
insl
cmp
lock
inc
imul
add
pop
inc
lret
cmp
int3
inc
xor
mov
adc
xlat
cmpsb
xchg
and
and
jnp
sbb
lods
sbb
aam
mov
out
and
xchg
adc
sbb
pop
sbb
cld
sbb
test
fidivrs
std
mov
mov
imul
jbe
sbb
clc
mov
fldcw
xlat
mov
dec
dec
sub
add
add
add
sbb
push
push
pop
inc
xchg
orb
mov
cli
sti
xchg
les
mov
and
fwait
aas
lret
cmp
iret
scas
cmovl
test
jmp
xchg
mov
xor
jecxz
xchg
cli
xchg
test
dec
shrb
and
xchg
mov
dec
es
adc
dec
lea
sar
cmp
sbb
lods
icebp
adc
leave
xor
cmpsl
mov
lea
mov
mov
gs
mov
aad
adc
mulb
mov
lock
cmp
lock
aad
mov
push
jno
adc
pop
iret
dec
xchg
sub
pop
cmc
cmp
mov
mov
dec
inc
sub
ss
addr16
sub
arpl
jbe
sub
fdivs
xor
cs
cmpsl
ja
std
mov
inc
ret
cmc
or
add
repz
push
sti
cmpsl
push
mov
fdivp
in
and
add
pop
add
add
mov
jo
sub
jecxz
push
push
cmp
cmpsl
add
sbb
lods
fucom
jp
ljmp
aad
pop
nop
xchg
inc
call
push
jge
jne
jnp
or
jp
mov
imull
add
les
jne
ret
sbb
xor
xor
sub
loope
push
mov
in
call
ja
and
lock
push
add
pop
cmpsl
loopne
xchg
and
dec
lret
sub
jle
gs
sub
mov
xchg
push
mov
pop
inc
js
call
cmp
push
xchg
sbbl
sbb
subb
cmpsl
test
aam
or
out
std
lret
mov
cmova
sub
adc
jnp
jae
dec
test
mov
sti
jl
mov
les
xchg
int3
mov
idivb
stos
out
insl
mov
inc
ja
pop
repz
add
add
mov
std
mov
ljmp
fnstsw
pop
add
add
stos
gs
call
and
lods
mov
adc
and
and
or
mov
in
dec
scas
lea
adc
stos
sub
stc
jecxz
repnz
lock
cmp
and
es
clc
cltd
lahf
ret
fmuls
cmpsl
jle
cmp
pslld
mov
scas
dec
fwait
ljmp
mov
push
int3
ret
mov
jge
push
or
out
negl
mov
dec
scas
out
repz
jmp
mov
iret
xor
push
adc
jecxz
push
sub
pop
fisubrs
js
mov
bound
sbb
jno
lret
aam
mov
xchg
test
faddl
hlt
dec
push
xchg
xor
bound
cmpsl
pop
sub
data16
pop
inc
adc
int
xchg
mov
ret
imul
inc
cs
gs
mov
adc
lds
xchg
and
sbb
stc
xchg
add
add
add
push
aam
fdivrp
inc
and
ss
repnz
out
popf
xchg
inc
cmp
clc
nop
test
lcall
sbb
sarb
xchg
xor
cmc
push
mov
arpl
je
test
jmp
cmc
xor
jmp
and
xor
fdivs
lcall
pop
shll
and
jmp
xchg
cld
imul
sub
lea
lret
lcall
dec
cmp
hlt
rol
in
fimuls
aad
call
lea
loope,pt
push
fcos
out
cld
push
out
outsb
ja
mov
call
sbbl
jmp
cmp
lock
xchg
ficompl
inc
fiaddl
adc
cmc
jmp
shlb
pop
cli
into
mov
mov
pop
and
mov
and
movsb
ss
movsb
pop
pushf
ja
inc
jp
movsl
stc
or
fiaddl
ret
ficomps
cmp
and
add
pop
add
add
cs
mov
xchg
daa
cmpsl
xchg
imul
jge
xor
int3
push
outsl
dec
movsb
jns
fs
inc
xor
mov
jl
es
mov
stc
jae
adc
pusha
fcmovbe
lea
dec
enter
aad
js
test
mov
insb
cmp
mov
repnz
jmp
push
int3
mov
jo
addb
xchg
mov
push
pop
mov
ret
pop
nop
mov
mov
aam
ss
insb
arpl
loop
fistpll
push
sub
test
aam
mov
jae
lcall
dec
aas
sub
mov
push
subl
dec
fcoml
or
sbb
or
xchg
rcrl
mov
int
inc
popa
pop
sbbl
gs
enter
mov
bound
inc
pusha
repz
mov
mov
ret
lock
cmp
imul
adc
add
lods
xor
mov
js
orl
jno
add
pop
add
add
out
sub
and
dec
fdivrl
inc
mov
arpl
cmp
xor
push
gs
push
mov
cmp
std
shll
cmc
fstpl
addr16
add
das
xor
push
loop
and
es
ds
es
mov
jecxz
ja
sbb
sarl
xor
frstor
xchg
or
aas
hlt
pusha
pusha
out
les
mov
xchg
je
jmp
aas
inc
push
hlt
xlat
in
shll
into
popa
mov
jmp
insl
jne
lcall
mov
or
dec
out
dec
lahf
mov
cmpsb
jle
add
out
mov
inc
xchg
push
imulb
mov
lods
test
stos
fsubrl
daa
scas
fiaddl
pop
popa
push
dec
test
add
sub
mov
jl
cmp
inc
push
test
or
gs
rclb
xchg
and
lods
add
lret
mov
sub
test
js
add
pop
add
add
pop
lcall
rclb
jmp
pop
push
dec
adc
mov
sbb
mov
fistpll
lea
repnz
test
mov
push
cmp
jae
wbinvd
daa
mov
sub
mov
jmp
jbe
xlat
mov
sbb
jle
jae
icebp
push
and
xorb
in
dec
imul
mov
cld
rorb
je
jge
cmpl
imul
xlat
loopne
and
push
test
ss
out
mov
or
jb
cmp
xor
pop
mov
ljmp
lahf
cwtl
xlat
arpl
jp
jecxz
pop
sub
add
cltd
push
pop
lahf
cmp
test
mov
jmp
xor
push
fimull
xchg
pop
and
jb
stos
and
jmp
leave
into
pop
int3
push
mov
pushf
xor
and
imul
add
sti
pop
jge
divb
jbe
insl
jg
add
pop
add
add
ret
mov
sbb
jg
sub
mov
dec
test
jmp
push
in
sbb
sub
mov
cs
cmp
push
movsl
and
dec
cmp
cld
dec
int3
loop
dec
or
lea
outsl
jnp
dec
xchg
leave
sbb
cmp
adc
mov
outsb
mov
lcall
inc
pop
xor
sub
sub
icebp
mov
sbb
and
insl
scas
adc
out
mov
movsb
add
sbb
lcall
xchg
int
sbb
xchg
mov
sbb
jns
aas
xchg
jecxz
les
mov
sti
mov
sahf
ljmp
outsb
and
jmp
scas
or
arpl
mov
test
pop
sahf
and
and
xor
outsl
int
out
ljmp
push
add
hlt
xchg
nop
dec
add
popa
mov
and
iret
mov
jge
and
add
add
fsub
std
in
popf
dec
int
hlt
push
mov
xchg
add
pop
add
add
push
gs
or
mov
or
jmp
stos
in
xlat
push
or
out
sbb
push
hlt
repz
add
pop
stos
je
or
or
xor
dec
cmp
mov
pop
lods
imul
adc
lcall
or
and
or
jns
pop
jne
jno
mov
sti
lods
sbb
add
fildl
mov
rorb
out
fcmovne
lock
test
push
push
pop
ljmp
mov
movsb
fcoml
or
enter
popf
lea
pushf
test
mov
sbb
arpl
fsubrl
xchg
fidivs
or
fs
lret
mov
dec
sbb
aam
cmp
insb
ss
add
js
js
xor
stc
rol
add
inc
sbb
add
jae
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
sarb
mov
sbb
adc
pushf
inc
sbb
sub
es
repnz
cmpsb
push
sub
mov
and
push
push
mov
mov
jmp
dec
or
sbb
or
push
and
jno
mov
cmc
adc
dec
ss
inc
mov
cwtl
popf
sbbl
lods
mov
outsl
and
mov
fimuls
enter
and
xchg
clc
push
mov
pop
negb
movsb
es
aas
push
adc
aad
xchg
je
inc
jle
jb
xchg
sahf
out
popa
mov
data16
shll
insl
ja
and
pop
add
imul
dec
push
push
ficoms
lock
movsb
cmp
nop
out
lea
nop
shlb
aas
leave
mov
hlt
mov
shl
sti
test
hlt
sbb
fcomps
add
push
sti
das
ret
lods
daa
adc
mov
add
es
xchg
arpl
push
add
jae
les
inc
out
bound
lea
adc
mov
jne
test
xor
jmp
adc
lcall
cmp
adc
loope
mov
lock
shrb
inc
sbbb
out
pop
gs
adc
mov
fists
les
add
test
out
push
cmp
out
int3
xor
adc
mov
inc
jae
addl
test
outsb
in
sbbl
rcrb
adc
push
in
pop
lods
xor
and
inc
cld
dec
in
es
lret
test
inc
or
insb
stc
scas
ret
scas
fcmovnu
nop
sarl
mov
lods
mov
lds
push
sahf
repnz
mov
lods
fisubl
gs
fnstsw
ljmp
lods
shl
xchg
xchg
add
xor
push
subb
cmc
sti
inc
xlat
in
jge
scas
rclb
popf
aas
push
and
ret
add
pop
sub
add
cmp
sti
aad
loopne
das
fdivrp
fwait
xor
add
add
add
mov
into
rcl
addr16
das
add
push
push
stc
pop
push
lcall
test
xchg
push
push
insb
ds
out
push
out
push
and
mov
or
mov
std
mov
es
xor
add
cmpsl
pop
xlat
mov
in
push
sbb
push
pop
movsl
stos
and
lret
daa
adc
cmpsl
fs
mov
cmp
inc
push
pop
pop
popf
mov
dec
fs
lret
clc
insl
jne
nop
cltd
adc
shrl
or
xlat
adc
mov
pop
dec
sub
icebp
xor
mov
and
cmpb
std
fimuls
mov
lods
mov
mov
sbb
punpckhwd
mov
adc
lods
inc
daa
push
jg
pop
loopne
xchg
adc
mov
pop
mov
mov
fs
pusha
sahf
xchg
imul
lods
push
add
sbb
xchg
aaa
xor
push
add
cmp
jge
stos
sbb
jns
mov
add
add
jno
adc
in
adc
jp
fs
lods
std
cli
enter
in
jno
xchg
aad
cwtl
test
insl
fists
into
fldt
xchg
xor
mov
inc
adcl
mov
popa
xor
int3
pop
rcrb
xchg
iret
mov
sbb
mov
xchg
jae
lock
mov
mov
inc
shrl
mov
inc
js
jecxz
dec
inc
loopne
iret
xor
test
dec
sahf
mov
ss
sbb
cs
cmp
and
pop
lret
sub
xor
movsl
pop
into
add
shlb
sbb
sub
movsl
outsb
aaa
xchg
adc
add
cmp
insl
stos
xchg
sub
rorb
sbb
sbb
fsubl
and
xchg
mov
pop
inc
cmp
mov
pop
inc
dec
and
int
dec
mov
gs
mov
repz
insl
pop
pop
jno
adc
popf
add
rclb
fwait
aad
mov
stos
hlt
test
add
add
lods
enter
shlb
in
fwait
push
sub
js
cwtl
sub
jns
push
int
outsb
pop
or
push
movsl
inc
imul
lea
ret
dec
mov
sar
jp
push
xchg
fnsave
mov
xor
mov
or
arpl
jo
lods
cmp
jns
ret
pop
jno
fmul
sbb
jmp
sbb
pop
in
xchg
cmpsl
mov
icebp
mov
popl
imul
xchg
ss
test
push
push
dec
lret
adc
sbb
add
pop
enter
mov
pop
jbe
or
mov
gs
daa
dec
test
bound
mov
aam
bnd
push
lea
pushf
pop
add
sbbl
push
dec
fnstcw
adc
shll
jo
cmpsb
sarb
or
test
xor
cmpsl
lock
jl
dec
jbe
idivl
mov
ja
mov
add
pop
add
add
pop
scas
xchg
testb
lcallw
dec
js
jle
xchg
jmp
lret
lods
push
pop
dec
sbb
popf
adc
jmp
or
data16
push
sarb
test
or
sbbl
sahf
popa
shll
sbb
pushf
push
popf
lock
xor
and
stc
push
and
pusha
pushf
stc
rorb
dec
imul
add
push
or
jbe
enter
sbb
inc
divb
mov
stos
test
push
int
push
flds
sbb
push
sub
inc
adc
arpl
jmp
jle
xchg
mov
enter
lahf
dec
push
loop
sbb
gs
fwait
jns
pop
nop
mov
and
into
xchg
dec
fcomi
pop
stos
xchg
call
loope
push
jno
in
popf
pop
insb
insl
ficoml
or
dec
xchg
dec
ss
or
xor
cmp
mov
add
and
outsb
sub
stos
fs
push
pop
or
xchg
rorb
aaa
add
pop
add
add
rorb
aas
xor
daa
test
jns
out
jle
fmul
sub
popf
mov
cs
mov
cld
dec
in
push
cmp
jno
jmp
mov
addr16
sar
lea
movsb
js
inc
ljmp
jae
push
adc
pop
mov
lahf
push
adc
in
or
add
ret
inc
repnz
mov
mov
sarl
xor
adc
adc
scas
fldl
mulb
dec
pop
adc
addr16
xor
add
bound
mov
ds
or
pusha
add
mov
les
adcb
xor
fsub
push
cmpsb
stos
outsb
out
add
arpl
sbb
dec
aam
push
fdivrl
sbb
add
cmp
xchg
es
mov
jecxz
sub
sbb
leave
push
sub
outsl
sub
imul
les
scas
fistpll
inc
ljmp
add
pop
add
add
fsubrs
lods
mov
inc
xchg
je
shrb
rolb
or
inc
and
adc
inc
addb
mov
and
cmp
arpl
insl
add
xchg
int
or
addl
ja
es
repnz
jecxz
xor
sub
mov
and
ret
lods
cs
mov
jne
adc
adc
push
nop
and
lret
jb
iret
push
test
sbb
push
and
push
mov
movsl
xlat
pop
dec
dec
sub
cmpsb
add
flds
add
popa
pop
pop
scas
shlb
push
or
pusha
lret
jg
xor
shll
cltd
push
push
pop
sbb
mulb
add
sbb
inc
adc
cmp
adc
test
or
cltd
cld
pop
loope
cmp
mov
and
sbb
stos
pop
and
aaa
cmp
adc
aam
dec
add
adc
add
sbb
jnp
jnp
cmp
out
lahf
push
pop
mov
cmp
add
add
add
push
add
js
in
stos
shrb
add
int
sbb
push
int
inc
jp
sbb
sub
pop
jl
jge
cmp
add
lret
inc
test
mov
push
ljmp
int
xor
pusha
out
and
mov
pop
das
clc
add
mov
inc
test
out
xor
pop
pop
xchg
xchg
mov
jge
sub
pushl
push
xor
cmp
sub
and
and
push
mov
into
shrl
pop
add
jae
imul
xchg
in
test
inc
jo
mov
sub
jae
push
inc
xlat
sbb
xor
lret
fwait
push
jp
andb
lahf
xor
jnp
je
push
mov
hlt
arpl
xchg
dec
xchg
or
pop
jle
mov
push
xor
in
dec
aas
cwtl
fsubrl
fidivrs
add
cld
aam
mov
push
inc
add
adc
dec
ja
aas
movsl
sti
xchg
push
cmp
add
add
add
mov
mov
test
jp
cld
push
movsl
dec
add
lahf
xchg
mov
pop
sbb
or
jnp
ret
int3
fidivs
cmp
stos
mov
and
xchg
mov
inc
lock
cmpsb
fs
negb
pop
aam
int3
adc
addr16
xchg
test
dec
in
mov
inc
xor
repz
lcall
arpl
pop
xchg
pop
inc
sbb
notl
pop
jae
mov
mov
lcall
lahf
adc
cwtl
and
adc
or
jp
fildl
dec
cwtl
pop
add
out
adc
inc
loop
das
lret
adc
mov
inc
daa
adc
test
test
shlb
jl
cmpsb
and
daa
cmp
fsub
pop
xchg
adc
fptan
inc
mov
mov
xchg
jnp
xor
lret
add
repz
cmp
lods
repz
adc
add
add
add
aad
mov
sub
fadds
inc
pushl
jmp
out
pop
xchg
scas
mov
mov
xor
aad
pop
adc
jnp
pop
push
sbb
push
xchg
js
mov
cwtl
cs
pop
sub
popf
lahf
repz
push
add
dec
pop
out
mov
adc
jg
mov
aaa
mov
push
subl
dec
jnp
cmp
or
outsb
scas
adc
outsb
sub
mov
jae
push
mov
push
sbb
jae
mov
jae
add
addr16
mov
jns
jge
adc
or
cmp
mov
outsb
push
loop
cltd
sub
adc
cltd
addl
mov
inc
mov
rol
and
test
mov
icebp
rcll
cmp
std
push
xchg
mov
xchg
and
mov
stc
add
daa
push
cld
push
std
jmp
pop
adc
inc
pusha
fidivrl
add
add
add
pop
push
cmpsb
enter
push
mov
in
mov
xor
je
adc
cmpsl
mov
jg
sbb
pop
xchg
shl
mov
jnp
cmpsb
sbb
popf
cmp
push
inc
popf
mov
repnz
cmpsl
sbb
jnp
and
call
sub
nop
cmc
pop
mov
mov
mov
mov
adc
stc
shrb
fdivrs
push
fs
ljmp
pop
lods
movsb
add
mov
dec
cld
sbb
lret
or
and
repz
lods
jp
sbb
into
dec
data16
cmp
cld
int
jnp
cli
mov
rorb
dec
into
adc
cmpsb
out
enter
les
cltd
xor
mov
adc
mov
push
jns
mov
mov
dec
scas
ficompl
sbb
cmpsl
jb
lea
hlt
addl
leave
and
lcall
add
add
sbb
dec
push
out
jge
or
add
add
loope
mov
adc
scas
in
pop
out
sbb
sar
es
cmp
xchg
inc
fisubs
pop
push
jne
xor
mov
fisubl
arpl
test
pop
hlt
lods
fsubl
cmp
lcall
cvttps2pi
xchg
xor
xchg
dec
mov
sub
dec
pop
push
xor
call
adc
mov
and
or
cs
mov
shrb
sub
or
out
sti
iret
ret
cmpsl
jne
inc
cltd
cmp
imul
rolb
push
bnd
mov
jne
jmp
mov
push
jbe
mov
mov
lcall
adc
pop
insl
push
scas
es
sub
repz
scas
dec
mov
mov
popa
test
loop
cmp
pop
in
and
insb
or
jbe
add
add
add
idivl
mov
add
pop
add
add
pushf
test
pop
or
cs
out
dec
dec
jbe
sets
jle
daa
and
mov
and
inc
inc
pop
into
cld
call
ret
cmpsl
xchg
add
mov
repnz
mov
cmpsl
add
cmc
nop
cld
ja
xorl
imul
int3
jno
sbb
push
nop
cmp
cmpsb
cmp
dec
aaa
xchg
pop
lock
xchg
dec
cmp
push
cld
rorl
ret
xlat
lret
out
adc
jg
and
fwait
xor
push
mov
fdivl
mov
out
adc
iret
pop
add
sti
ss
jmp
fxch
mov
xchg
sbb
adc
imul
mov
sub
jno
sbb
cmp
enterw
xchg
push
clc
fmul
mov
xor
insb
adc
ljmp
xchg
xchg
out
scas
sarl
pop
mov
push
fdivrs
mov
ja
jg
xchg
cmp
dec
test
out
aas
add
pop
add
add
add
lea
add
cmp
arpl
add
and
je
rcrl
sbb
imul
ret
das
inc
mov
add
sub
pop
sub
jg
push
cmp
lods
inc
adc
xchg
in
movsl
pop
or
and
pusha
dec
cmp
fnstsw
outsb
ret
push
xchg
add
ret
stos
add
dec
enter
dec
xlat
outsl
pop
repnz
lcall
dec
fcoml
inc
inc
xchg
mov
mov
sub
xchg
cmp
insb
dec
and
inc
test
mov
sub
js
nop
insb
addb
cmp
jae
movl
in
icebp
in
jo
mov
jge
ret
clc
sbb
xchg
movl
das
sbb
repnz
pushf
insb
fidivs
jns
out
push
cs
lahf
icebp
push
aaa
xor
and
ret
mov
popl
and
dec
lret
jmp
imul
push
roll
push
testb
pop
add
add
mov
mov
leave
sub
rolb
aad
fistps
test
int3
pop
ret
insb
push
daa
daa
cmp
inc
and
arpl
push
inc
sbb
jnp
fs
pop
imul
mov
or
cmp
pop
aam
or
imul
xor
add
push
push
ds
xor
dec
jmp
mov
jae
popa
mov
adc
mov
stos
pushf
test
imul
aam
cs
shr
imul
test
mov
fs
cmp
mov
push
pop
sbb
test
stc
mov
in
fcomp
cs
test
sub
sub
pop
out
jae
es
add
xor
xchg
bound
cvtps2pi
jge
sbb
pop
sbb
cmovg
push
cwtl
inc
add
cwtl
loope
std
jge
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
mov
outsl
aad
add
sbb
jle
out
dec
mov
inc
jp
nop
mov
xor
stc
dec
lcall
hlt
mov
pop
pop
repz
xchg
or
rcrb
push
scas
rorb
stc
dec
add
cmc
test
add
pop
popf
push
mov
cli
inc
mov
inc
jbe
in
cmp
jnp
and
call
std
hlt
and
dec
test
xor
inc
and
ss
inc
xor
cmpsl
loopne
lods
mov
jecxz
add
xchg
and
mov
push
xchg
or
cmc
adc
aaa
add
clc
xor
iret
in
aas
mov
adc
fwait
mov
es
sbb
stc
jmp
pop
cltd
sub
fsub
int
addb
ss
arpl
dec
xchg
cs
or
mov
arpl
jg
lcall
movsb
imul
ljmp
add
add
jns
imul
mov
add
pop
add
add
mov
loopne
movsb
imul
das
mov
xchg
lds
test
mov
inc
shrl
xor
mov
je
fwait
cmpl
adcl
cmp
loopne
loop
imul
push
sub
addr16
xchg
sub
add
dec
push
adc
xlat
dec
adc
pop
pop
cmp
pop
jecxz
shrl
bound
or
not
sbb
inc
int
push
push
and
inc
add
mov
add
scas
jp
and
and
test
stos
jo
in
or
ret
shll
shrb
sbb
xor
sbb
push
adc
lods
into
adc
pop
inc
pop
push
popl
cmc
data16
push
roll
test
mov
mov
pop
out
jne
scas
call
xchg
mov
ret
fdivrs
pop
outsb
lods
sarb
data16
push
stc
add
sbb
js
ret
jg
jmp
repnz
sti
xchg
jp
inc
add
pop
add
add
mov
loopne
xor
hlt
iret
jbe
dec
sbb
jbe
je
inc
into
sbb
les
add
mov
outsb
lcall
mov
and
imul
arpl
jge
aad
push
sbb
int3
cld
fldt
mov
arpl
xor
movsb
and
lcall
cmp
ret
aam
loope
xchg
pop
loope
rdtsc
test
lret
in
les
nop
sub
xchg
cmp
shll
xchg
pop
fwait
movsb
xor
push
mov
push
cmc
xchg
dec
cmc
jns
lea
jae
in
or
add
mov
int
and
in
enter
xlat
aad
jne
push
gs
test
int3
xchg
cmp
lock
sbb
mov
cmpsl
fadds
sbb
sti
shll
xchg
mov
in
mov
pop
mull
std
inc
incb
add
adc
mov
and
fnstcw
inc
add
pop
add
add
mov
mov
and
int3
adc
js
jbe
add
xor
adc
push
lods
pop
push
inc
dec
out
mov
add
mov
fwait
push
in
or
shll
in
scas
push
rol
lret
stc
mov
out
inc
inc
cmp
shrl
mov
mov
or
sub
fwait
ret
mov
addb
daa
xchg
push
icebp
jg
lods
sahf
mov
sbb
cwtl
pop
xchg
pop
xor
das
adc
jmp
and
jge
dec
hlt
dec
or
stos
push
adc
mov
pop
inc
icebp
add
lea
in
mov
scas
mov
cld
sbb
push
mov
jns
out
ret
into
adc
pop
adc
push
pop
loopne
sub
cltd
push
cmp
into
sub
fs
mov
iret
push
das
push
inc
inc
stos
lods
lods
jbe
pop
add
hlt
gs
adc
ficoms
je
push
pop
sbb
add
add
add
cmp
out
in
sbb
mov
testl
adc
aad
gs
pop
push
and
xor
js
cltd
mov
mov
dec
ds
aam
xlat
daa
shr
test
pushf
popf
xchg
movsb
jno
inc
ficoml
adc
inc
mov
out
ljmp
ljmp
sti
lret
iret
adc
aad
loop
mov
aaa
pop
jns
jmp
mov
and
and
push
xchg
cmp
xor
push
sub
mov
adc
xchg
or
imul
and
in
std
pusha
xor
dec
inc
and
dec
pop
iret
mov
jge
repnz
mov
icebp
cld
adc
int3
or
mov
pop
out
mov
mov
jbe
dec
inc
in
lods
icebp
lahf
sti
jns
xor
fwait
and
sarb
sbb
iret
js
mov
mov
add
aas
gs
mov
inc
imul
inc
add
pop
add
add
mov
xchg
int
cmp
pop
adc
and
xchg
push
movsl
icebp
mov
sbb
xchg
shrb
cmp
iret
inc
leave
pop
or
xor
xchg
pusha
and
in
mov
loopne
test
insb
jmp
mov
stos
mov
popf
arpl
sub
sbb
test
pop
shll
sbb
leave
mov
cmp
ficoml
es
cmp
add
sub
xchg
das
push
cmp
or
mov
call
outsl
pop
push
adc
fwait
mov
jnp
out
bnd
out
dec
xchg
rcrb
test
sbb
decb
cmp
fs
sbb
adc
jp
lds
rcl
adc
out
sbb
ret
push
and
popf
ss
xor
or
fs
dec
aaa
jle
pop
ret
decl
and
inc
test
cmp
cmp
or
outsb
mov
cmpsb
iret
jb
add
out
fnstsw
data16
daa
dec
add
pop
add
add
dec
cmc
fsts
in
dec
and
sbb
adc
fsub
enter
sti
xor
in
scas
xchg
mov
push
mov
es
inc
dec
movsl
sbbb
aam
les
popf
xchg
mov
fcomp
fisttpll
xchg
jno
xchg
sub
repz
cmc
insl
ror
or
push
sub
xchg
leave
mov
repz
movsb
iret
and
sub
outsb
in
scas
aad
ljmp
sti
lods
pop
leave
lock
dec
mov
loopne
daa
ret
mov
jnp
shll
push
inc
xor
int3
cmpsl
push
fisttps
add
mov
mov
call
jne
test
xlat
sahf
arpl
int3
sbb
or
pushf
rorl
jmp
adc
xchg
and
mov
xchg
mov
jb
mov
andb
je
sti
pop
fmuls
adc
ljmp
and
mov
je
loope
pop
add
mov
sub
cs
add
pop
add
add
out
mulb
insb
push
call
popa
test
repnz
aaa
and
mov
or
cmp
in
sub
dec
cltd
rclb
ljmp
mov
push
sbb
cmp
inc
and
mov
inc
pop
iret
je
outsl
push
inc
stos
cmpsl
icebp
sbb
repz
dec
ret
test
xchg
mov
clc
loope
mov
punpckldq
scas
movsb
adc
je
mov
adc
test
inc
ljmp
mov
cmpsl
cmpsb
scas
push
jne
mov
mov
lds
push
test
pop
adc
repz
subl
sbb
dec
mov
cmpsl
stos
mov
dec
dec
mov
sub
add
jecxz
mov
je
xor
sahf
pop
inc
frstor
and
adc
scas
inc
rorb
and
andb
rcll
inc
loope
mov
push
sbb
jmpw
fnstcw
push
xor
cmp
dec
add
pop
add
add
lock
cli
pop
push
push
cmp
inc
sub
jle
jae
test
iret
mov
mov
pop
idivb
jnp
inc
sub
mov
jbe
inc
mov
int3
mov
pop
mov
ficoml
and
sbb
cmp
aad
mov
mov
ds
stc
dec
call
inc
sbb
pop
or
jge
xchg
push
push
jle
jae
addr16
insl
mov
cld
sub
push
pop
push
adc
push
lret
sbb
js
in
xor
or
adc
jb
push
imul
mov
test
movsl
icebp
popf
arpl
jnp
add
lcall
sub
lret
insb
ret
scas
sbb
stos
lret
push
mov
mov
aam
push
jmp
ret
jecxz
xor
pop
pop
mov
adc
add
sub
add
imul
out
mov
xchg
sbb
ret
dec
add
pop
add
add
mov
es
xchg
adc
es
lcall
xor
pop
mov
add
xchg
xor
sahf
and
ds
mov
aad
mov
sarl
in
icebp
call
sysexit
adc
inc
movsl
nop
push
insl
xchg
mov
lcall
pop
es
jne
xlat
xor
shrl
push
popa
arpl
jmp
test
push
loop
je
lods
dec
mov
sbb
jp
out
add
aam
les
inc
nop
push
clc
ret
incl
add
jo
loopne
cmp
sbb
stos
into
lahf
in
mov
xchg
xchg
jne
aad
jo
mov
jmp
cmpsl
adc
add
fimull
lcall
insl
enter
xor
mov
xor
mov
hlt
xchg
stos
es
popa
out
ret
es
decl
fimuls
ficoml
fcompl
mov
add
js
add
dec
stc
mov
pop
sub
fdivs
int
dec
add
pop
add
add
fnstsw
jge
add
movsl
or
mov
out
imul
insb
adc
push
mov
dec
push
dec
pop
pop
inc
mov
ljmp
popa
and
orb
mov
xchg
adc
out
jns
les
rcr
fisubrs
mov
or
xchg
fdivs
fidivs
adc
xchg
out
fisttpll
test
push
pop
and
pop
or
mov
mov
loopne
in
es
xchg
xchg
int
pop
mov
loopne
sub
rorl
or
shr
xchg
fistps
mov
add
sub
ds
mov
push
pop
pop
cmp
inc
int
cmp
add
outsb
clc
gs
aaa
xor
cld
push
insb
in
mov
ja
mov
mov
enter
and
cs
leave
mov
arpl
jnp
testb
add
add
jg
cld
dec
loope
sbb
xor
dec
dec
add
pop
add
add
or
pop
das
inc
lcall
mov
jns
imul
mov
es
ret
das
push
push
ss
xchg
jge
push
aas
xchg
loopne
and
iret
mov
sbb
out
pop
sub
sbb
clc
and
rclb
sbb
pop
jbe
pop
sub
les
pop
js
xabort
ret
lods
imul
lret
cmpsb
das
cli
jae
jae
xchg
ficoms
jns
or
mov
push
xor
dec
fs
movsl
xor
scas
int
mov
add
inc
jbe
push
mov
fwait
aad
fdivrl
dec
mov
mov
xchg
out
sub
xchg
cmp
lahf
jno
mov
dec
sbb
xchg
rolb
cli
lds
repnz
das
pop
sti
jp
mov
mov
cmpsb
fistl
jp
xchg
and
roll
pop
sbb
jge
cmp
mov
xchg
mov
mov
dec
add
pop
add
add
rcl
in
jo
dec
sbb
mov
inc
int
int3
sbb
outsb
outsl
js
or
sbb
inc
mov
add
jle
in
cmc
pusha
sarb
add
fs
shll
jle
push
sbb
fcmove
mulb
jp
faddl
dec
je
mov
call
fistpl
es
adc
mov
fidivs
sbb
int
dec
leave
das
mov
lods
add
dec
xor
mov
cmp
aad
xorb
andl
jae,pt
inc
adc
adc
hlt
sti
pop
movsl
cmp
xchg
adc
fs
xchg
int3
inc
cmp
pushl
jg
jecxz
fs
dec
sub
cmp
mov
lods
into
aad
cli
add
or
pop
mov
arpl
aaa
jb
or
es
repnz
nop
sbb
xchg
inc
xor
cmpsl
pushf
pop
sub
add
inc
mov
push
push
jmp
mov
in
adc
pop
add
add
and
sub
mov
loope
stos
xchg
sti
jl
stc
pop
adc
cmp
fstps
imul
sti
inc
xchg
xchg
sbb
jmp
and
pop
mov
dec
imul
jne
xor
cmpsl
aam
in
xchg
pop
push
push
into
pop
je
pop
ja
out
add
inc
push
rcrb
cmc
das
cmpsb
sti
movsl
fidivl
xlat
pushf
stos
cli
cmp
adc
add
jbe
dec
inc
into
mov
and
jecxz
push
mov
mov
ret
inc
ljmp
inc
movsl
sbb
jnp
sub
inc
idiv
mov
jb
retw
mov
scas
pop
xchg
gs
sahf
mov
imul
cmp
ja
inc
stc
cwtl
adcl
xchg
nop
xchg
sbb
ljmp
adc
xchg
mov
or
xchg
insb
jo
jb
das
shrb
mov
jae
mov
dec
ja
xorl
add
fsubrl
mov
out
cmp
cmc
push
adc
adc
add
add
add
in
cmp
fidivrs
cs
push
and
imul
pop
sub
dec
pop
nop
out
je
xor
pushf
orl
subb
cmpsb
call
test
adc
clc
inc
ja
cmc
loopne
cmc
sbb
jmp
popa
jb
lock
inc
or
jnp
ss
movsb
cmp
in
inc
inc
sub
ror
aad
jg
jl
je
inc
fdivrl
or
mov
jne
iret
in
fldcw
inc
inc
out
xchg
or
shll
add
popa
imul
and
out
mov
push
and
sbb
xchg
data16
fwait
pop
xchg
sbbb
xchg
repz
lahf
and
xor
inc
stc
sub
enter
or
push
test
iret
or
sahf
dec
fistps
mov
testl
outsl
xchg
xchg
sub
or
gs
ret
fwait
jmp
popf
xchg
sbbb
mov
pushl
adc
add
or
push
shll
out
je
pop
inc
xchg
stc
sbb
add
add
add
add
lcall
lcall
push
mov
aad
ljmp
sbb
outsl
enter
ss
cmp
push
sti
xchg
or
pop
popf
add
pusha
mov
out
out
lea
adc
pop
testl
pop
clc
leave
jnp
xor
jmp
mov
filds
aas
fiadds
mov
and
out
xchg
iret
cltd
pushf
inc
or
pushf
and
sbb
jns
cld
jmp
cli
movsl
movsl
adc
outsl
pop
jae
std
push
hlt
or
test
je
lret
std
push
xchg
cmp
add
mov
sbb
fs
cmp
gs
jmp
xchg
jo
and
mov
push
xchg
data16
scas
push
xor
inc
jae
sarl
and
pushf
add
cmp
jae
cli
mov
and
in
lock
lods
and
stos
push
lcall
lock
call
add
add
add
pop
adc
push
jne
hlt
aad
jmp
mov
repnz
loopne
xchg
adc
pop
loop
or
xor
enter
jg
movsb
sbb
xchg
in
ss
jle
stos
fadds
les
stc
stc
cli
imul
ret
ret
cs
test
test
adc
pop
mov
mov
loope
roll
fmuls
push
ss
aad
or
mov
mov
or
pop
iret
jmp
push
push
sub
sbb
adc
jg
cmpsl
int3
repz
test
lods
xchg
ss
lock
xchg
cmc
inc
dec
rcll
mov
jo
pop
insb
sbb
xor
mov
adc
rolb
inc
xchg
sbbb
dec
orb
ds
jmp
and
icebp
scas
mov
add
bound
imul
or
jge
push
add
pop
add
add
mov
mov
das
mov
movsl
pop
fldcw
push
sub
repnz
test
xchg
mov
jno
and
inc
mov
xchg
inc
dec
in
stos
lds
jne
cmpsb
jb
daa
mov
sahf
test
cmpsl
in
repz
ret
mov
and
jle
mov
shll
add
lcall
push
stos
in
jae
pop
decb
cmp
add
jo
xor
mov
stos
pop
aas
xor
lcall
std
xchg
pop
call
loopne
cmpsl
in
inc
leave
subl
fs
adc
xor
or
pop
push
vmovntdq
jp
outsl
pop
adc
in
sbb
rcrl
adc
fidivl
jno
nop
jo
dec
dec
pop
stc
lret
pop
sub
sub
push
jp
insb
push
mov
push
push
pop
stc
adc
xlat
push
mov
imul
push
add
fwait
cmp
xchg
xchg
dec
icebp
xor
jnp
add
pop
add
add
lret
loop
ss
fists
lcall
dec
aaa
in
cli
daa
jb
push
jmp
lods
rcr
mov
sbb
inc
out
sbb
pop
jmp
int
cmpsb
adc
or
and
adc
aaa
jo
cmp
xchg
sbb
leave
aas
xorl
daa
mov
dec
cld
xchg
mov
xchg
xor
call
add
dec
mov
dec
addb
addr16
stos
stos
shll
mov
fdivr
push
xor
loopne
sti
mov
mov
jge
pusha
xchg
add
push
rcrb
add
fwait
ret
addr16
iret
aam
add
sub
cmp
xor
xchg
stos
in
iret
cmp
cld
push
outsl
pop
jae
and
add
adc
xchg
xor
mov
add
enter
jne
leave
ljmp
inc
push
clc
mov
mov
pop
fbld
dec
rolb
add
lds
testl
jge
sbb
dec
jne
adc
cmp
xchg
clc
dec
xor
hlt
cmpsb
insb
inc
jnp
fcoml
repz
in
loop
inc
mov
xor
leave
sbb
dec
cmp
sbb
jmp
mov
push
cmpsl
int3
sub
sti
cmpsb
jl
bound
dec
enter
lahf
adc
dec
icebp
js
cmc
mov
fstpl
adc
jle
out
jno
sbb
int
mov
push
sbb
xchg
out
cmp
arpl
aad
xchg
inc
int3
add
std
subb
je
lahf
lea
js
and
test
inc
mov
dec
int3
imul
test
xor
sbb
icebp
pop
jne
mov
addl
addr16
jne
xor
xor
push
cmp
push
mov
push
inc
mov
ret
out
push
lret
int
inc
es
push
xchg
inc
or
scas
xchg
push
adc
out
mov
adc
sbbb
push
add
pop
add
add
fsubs
mov
leave
cmp
aaa
jo
xchg
and
dec
aad
push
data16
push
imul
out
push
and
leave
in
rclb
fwait
sbb
and
js
push
or
sbb
aas
push
jb
mulb
jle
insl
mov
jg
pop
sub
mov
push
test
xchg
ja
mov
into
fidivl
and
sub
fs
push
mov
inc
inc
ret
ss
xchg
lods
je
dec
adc
xchg
lods
fdivrl
into
std
jno
mov
aas
xchg
in
hlt
add
xchg
adcl
push
ja
push
mov
ret
xor
ret
sahf
loop
sbb
mov
push
mov
cmp
push
dec
mov
in
dec
mov
adc
jmp
or
aas
sbb
xor
add
mov
btc
mov
nop
push
add
pop
add
add
add
and
push
es
pop
in
loope
dec
add
dec
out
aas
shlb
adc
xchg
les
inc
fsubrs
gs
in
int3
mov
inc
ja
mov
loop
loope
lods
hlt
test
cmp
sub
mov
out
sarl
scas
mov
sti
dec
fsubl
call
cli
push
xchg
push
arpl
push
and
push
inc
push
add
fistps
xor
lcall
or
bound
sub
mov
adc
pop
icebp
ss
sti
pushf
jg
outsl
add
int3
mov
stos
mov
dec
shlb
hlt
imul
sub
inc
ljmp
mov
pop
orb
js
mov
movsl
and
icebp
push
daa
out
test
scas
or
mov
sbb
sub
and
ret
dec
add
mov
sub
notl
xchg
pop
add
pop
add
add
inc
sbb
lret
jno
fbld
sub
in
cwtl
mov
in
mov
call
pop
sti
or
xchg
hlt
or
pop
rcll
xchg
pop
ljmp
cmp
je
orl
ds
adc
stos
push
nop
sub
les
and
psubsw
add
je
mov
pop
jbe
fdivrl
sbb
xchg
enter
jb
shrl
pop
mov
sbb
cmc
in
push
adc
xor
cmpsl
push
push
and
mov
pushf
mov
xor
in
cli
jb
jp
pop
mov
addr16
dec
out
adc
inc
adc
push
adcl
sahf
mov
test
sti
and
sar
test
add
sub
jge
or
inc
sub
shr
cmc
fisubl
mov
mov
scas
xchg
mov
ret
es
mov
push
test
add
add
fsubl
mov
jne
ret
hlt
and
add
add
xchg
into
pop
addb
sarl
cmp
xor
mov
inc
cmp
and
mov
mov
mov
cmp
inc
sub
hlt
and
rclb
mov
out
aaa
push
push
dec
ffree
dec
out
popa
add
nop
xchg
mov
loope
aas
sub
lret
xlat
shrb
sub
sbb
pop
bound
test
test
sbb
jbe
dec
dec
stc
les
cld
cmpsb
ljmp
and
js
mov
mov
inc
mov
xor
xchg
and
in
ret
lds
mov
out
mov
fcoml
push
mov
aam
lret
decl
pop
imul
jb
inc
mov
jno
push
sbb
ljmp
std
xor
cmp
jae
sbb
notb
cmp
push
stc
int
dec
add
xor
std
test
pop
add
pop
add
add
scas
pop
and
jne
imul
pop
iret
push
int3
sub
dec
jg
fsubp
add
enter
daa
add
cltd
cmp
fwait
outsl
arpl
enter
aaa
xor
lcall
mov
stos
jl
push
insl
xchg
cmp
xor
pop
sub
sub
out
stos
cmpsb
xchg
jle
lods
mov
mov
data16
mov
cmp
loope
mov
pop
stos
cwtl
dec
mov
sbb
push
lds
das
inc
and
daa
out
push
add
arpl
ret
in
sahf
fcoms
sub
frstor
pusha
mov
and
mov
cmp
adc
nop
and
hlt
lcall
adc
push
cwtl
movsl
fcmovnbe
adc
push
jp
shlb
mov
fstpt
add
in
push
inc
mov
mov
loopne
mov
mov
stc
imul
add
out
or
call
out
ljmp
jbe
push
sbb
or
xchg
mov
add
ficoms
sub
mov
shlb
insl
xchg
fwait
lcall
fwait
lea
repnz
or
xchg
int3
jnp
add
inc
mov
aas
dec
rcll
sbb
dec
jmp
mov
movsb
stos
mov
stos
je
xor
xchg
cld
test
rcrl
push
mov
leave
sbb
cmc
fcmovbe
xchg
in
movsb
jmp
bound
movsl
pop
mov
xchg
pop
lret
jge
mov
ret
out
push
aas
popa
xor
lret
cmpsl
xchg
cmp
loopne
mov
outsb
mov
push
xor
psubusb
sti
jbe
jnp
adc
pop
lcall
push
aad
lds
test
cmp
mov
mov
add
push
into
push
mov
out
jne
mov
add
pop
add
add
and
adc
stos
out
push
test
xor
sbb
icebp
push
and
mov
imul
jle
or
icebp
test
roll
pop
sarb
popa
sbb
adc
xchg
movsl
and
cmc
jmp
mov
push
jmp
xchg
cmp
adc
testb
cmpsb
mov
cmp
loop
loopne
mov
in
jae
pop
pop
push
out
pop
ds
aam
fwait
out
dec
test
inc
hlt
add
ficoms
sti
xor
mov
mov
inc
daa
cli
sbb
or
and
fwait
push
lods
adc
arpl
or
das
jno
jle
mov
and
aad
mov
std
pushf
rolb
test
adc
scas
cmp
lcall
xor
jns
or
push
mov
jmp
adc
rolb
jno
mov
pop
lahf
out
inc
push
sub
inc
pop
push
push
out
movsb
lea
and
mov
sub
ds
mov
add
add
xor
and
pop
leave
fmul
loopne
xor
ja
cmp
adc
lahf
cmp
cmp
sub
jbe
out
aaa
or
nop
sub
cmp
popf
adc
je
sbb
mov
test
cmp
mov
movsl
cmc
lods
iret
stc
add
lds
xor
mov
fdivrl
lds
into
out
lret
mov
pop
dec
push
mov
xor
mov
add
lock
mov
ret
inc
inc
jecxz
push
jge
les
push
sahf
in
inc
ljmp
dec
subb
aas
in
outsl
insl
cmpsb
xor
mov
fs
inc
jo
inc
pusha
daa
paddusb
cwtl
push
int
mov
mov
jecxz
sbb
lods
xor
dec
pop
push
sahf
stos
idivb
daa
sarl
outsl
jae
push
hlt
push
add
shll
aad
xor
lods
test
cmp
sub
lea
lahf
pop
fcmovb
fcmovnb
lahf
pop
lret
inc
and
sub
pop
add
pop
add
add
loope
sbb
mov
in
inc
mov
push
or
mov
jmp
loopne
cmpsl
fimull
into
lahf
pop
push
fbld
cli
repnz
jg
mov
bound
ret
sub
jno
cwtl
in
loopne
mov
jl
cmc
stc
and
xchg
adc
inc
cltd
and
daa
fistps
pop
sbb
mov
cmp
push
and
adcb
clc
or
push
sbb
sbb
push
repnz
mov
popa
andb
mov
xlat
push
pusha
ja
jp
loop
stc
adc
in
aam
out
push
push
rcll
sarb
push
adc
enter
nop
stos
jmp
inc
sbb
sarl
mov
pop
notl
or
jne
pop
inc
int3
cmpsb
and
jb
mov
call
shll
or
sahf
pop
testl
cltd
mov
enter
pop
add
add
add
jno
mov
out
in
or
add
add
pop
dec
adc
dec
cmpsb
in
in
and
sbb
hlt
scas
jbe
and
in
xlat
adc
xor
push
lock
pop
out
sub
and
mov
xor
xchg
or
movsb
xchg
push
ds
sub
daa
and
lea
add
call
fldenv
sub
mov
or
xchg
stos
ja
sbb
jae
movsb
test
or
adc
fsts
cmp
adc
lds
jo
repz
pop
jg
inc
xchg
ret
sti
xchg
or
addl
out
cs
push
xchg
sub
push
and
and
test
cmpb
insl
sbb
add
cmp
mov
outsb
or
cltd
dec
movsl
jns
bndldx
cwtl
add
pop
mov
mov
or
mov
pop
add
add
std
mov
cmp
mov
adc
mov
jmp
outsb
mov
and
sub
jmp
rol
or
pop
int3
ja
or
popa
fldenv
jno
push
jg
std
add
add
gs
hlt
arpl
xchg
es
imul
test
sub
add
aaa
lea
stos
das
faddp
inc
repz
pop
icebp
pop
fwait
mov
lret
sbb
test
push
sbb
mov
gs
sub
fldenv
out
gs
ret
cwtl
test
addr16
outsb
mov
fwait
in
and
stos
js
enter
imul
push
test
sub
cld
jg
lret
sar
lret
scas
das
xor
imul
icebp
sub
jno
and
push
pushf
xchg
xchg
mov
mov
sbb
out
mov
push
sub
add
repnz
movsb
jle
stc
test
popa
test
hlt
arpl
popa
add
pop
add
add
nop
pop
into
fcoms
pop
sbb
cmp
add
and
push
js
mov
sub
insl
sbb
xor
pushf
mov
jle
xchg
lahf
jg
mov
cmpsb
inc
stc
out
movsw
sub
xchg
cmp
pop
les
test
or
push
mov
add
je
add
adc
cld
aaa
or
lea
mov
sbb
popa
ljmp
and
shrb
inc
jnp
dec
pusha
fiaddl
mov
push
incl
mov
inc
imul
sub
or
dec
and
mov
fwait
push
pop
cmpsb
pop
jp
inc
jge
dec
mov
pop
xor
daa
inc
xchg
shlb
std
cs
inc
subl
jno
inc
cld
addl
repnz
jo
jae
jmp
add
jp
adc
jno
dec
movsl
mov
mov
cmpsb
mov
add
jmp
sub
movsb
in
stos
daa
frstor
add
add
add
add
pop
mov
jnp
push
dec
mov
fmuls
dec
mov
fwait
lods
call
data16
pop
mov
repz
inc
dec
repz
loop
adc
adc
push
loope
loopne
pop
push
lods
lds
xchg
sbb
inc
cld
subl
sub
sub
jno
in
jecxz
test
cld
scas
test
aad
mov
add
pop
mov
xor
lret
out
lods
xchg
pop
in
loop
add
loope
filds
mov
fistpl
adc
das
das
xchg
pop
push
arpl
xor
pop
inc
bound
cltd
out
mov
cmc
test
mov
test
push
mov
mov
inc
adc
and
sbb
fdiv
cmc
add
lock
loopne
xchg
into
clc
sub
sub
enter
imul
int
faddl
shll
fnstenv
gs
cmp
arpl
add
add
add
lahf
pop
shlb
and
xor
insb
into
xchg
repz
stos
out
divl
sbb
mov
mov
clc
addr16
pushf
mov
fdivrs
testl
sti
xlat
mov
jle
mov
mov
push
loopne
sub
jmp
test
and
jo
push
or
xchg
icebp
push
popf
addr16
aad
dec
adc
fists
enter
jnp
sub
push
ja
mov
xchg
rorb
in
sbb
cmovs
mov
push
mov
push
add
xchg
vpavgb
jae
lahf
push
jecxz
cmp
neg
in
mulb
mov
sbb
aam
dec
jo
jecxz
bound
fidivrs
popa
push
xchg
or
loopne
pop
hlt
mov
mov
lds
mov
xor
sbb
out
xchg
sbb
jmp
sahf
arpl
leave
or
dec
jno
sub
xchg
mov
add
cld
je
jbe
decl
rcll
add
pop
add
add
inc
xlat
sbb
push
inc
rcll
movsl
int
push
dec
in
adc
testb
int3
popa
cltd
std
imul
nop
aad
fimuls
enter
xor
cmp
mov
scas
adc
scas
in
dec
mov
jo
imul
xor
jge
push
popf
pop
xchg
test
lock
out
sbb
add
popa
sub
add
push
lahf
push
jmp
cs
mov
stc
and
out
sub
cld
jle
mov
xchg
imul
test
lcall
adc
inc
arpl
ret
xchg
add
dec
mov
ret
mov
lea
shl
pop
cwtl
push
rorl
clc
inc
sbb
cmp
xchg
xchg
cmp
cmpsl
fstl
lods
or
in
sahf
int
js
adc
mov
mov
fidivs
outsb
xchg
sub
mov
push
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
cs
shld
or
and
xchg
sbb
adc
xchg
sbbl
mov
imul
mov
pop
fs
mov
std
pop
stos
or
rcr
cmp
inc
inc
or
sbb
ja
stos
sbb
add
aam
out
dec
jle
aas
ds
or
add
xor
jl
jbe
jne
jnp
ds
jl
mov
cwtl
loope
inc
ret
push
shll
dec
push
jbe
mov
mov
jo
fsubrl
inc
push
fidivs
pop
jb
jg
jns
inc
dec
outsl
cmp
pop
dec
pusha
pop
das
or
push
and
cmp
test
mov
push
rolb
xor
adc
int
int
cmovno
xchg
cmpsb
adc
in
cli
andb
pop
or
ret
pop
xlat
fs
sbb
mov
call
pop
add
add
push
jg
shll
stc
add
pop
add
add
fisubl
pop
imul
pop
mov
inc
lds
aas
push
dec
mov
inc
pop
idivb
fldcw
jne
inc
shll
add
inc
cwtl
dec
add
push
xor
jp
push
popa
xor
clc
or
sbb
cmc
xchg
sarb
cmpsb
add
movsl
cmp
adc
and
scas
lds
add
push
xor
push
add
inc
and
scas
and
dec
ds
outsl
pop
insl
push
fisubrl
cs
neg
cltd
enter
cmp
mov
jnp
mov
add
mov
cltd
in
sti
gs
negb
fists
cmp
adc
sarl
add
xor
repz
push
pop
mov
sub
inc
imul
jl
cltd
sbb
paddsb
fcmove
mov
movsl
and
pop
mov
incb
ljmp
lds
inc
outsl
sbb
mov
iret
mov
fucomip
lock
cmp
and
add
add
add
add
aam
pop
cltd
ret
popa
or
sbb
cmpb
das
xor
test
mov
andb
dec
in
jne
or
sbbb
push
sbb
or
or
outsb
xor
push
lea
or
cmp
adc
mulb
inc
sbb
in
jmp
loopne
in
mov
jmp
stos
xor
mov
inc
lods
cmpsl
movsl
popa
inc
imul
aam
mov
fsubrl
or
xor
test
pushf
and
loop
lods
es
mov
mov
dec
daa
dec
xchg
jecxz
ret
dec
enter
xchg
pop
xchg
sti
idivb
lds
mov
push
andb
add
and
into
jno
and
and
pop
out
add
and
movsb
mov
xor
sbb
cmp
arpl
jmp
aas
jmp
imul
dec
out
iret
jmp
das
mov
jl
pop
imul
add
lret
xor
xor
rorb
sbb
add
add
out
ret
mov
cmpl
fistpl
jmp
cmpl
ja
scas
decl
and
or
xor
addr16
push
push
lea
fs
dec
adc
and
xchg
xor
add
scas
push
cmpsb
mov
cli
jmp
xorb
in
subb
mov
test
pop
testl
test
fmul
jp
push
lret
pop
stc
and
mov
popf
dec
mov
scas
inc
hlt
js
iret
insb
imul
lock
icebp
popa
add
je
adc
dec
rcrb
js
js
lcall
sbb
movsb
xchg
aad
mov
xor
testb
popa
out
jl
sbb
add
std
cmpsb
pop
or
lret
jg
rorb
push
add
add
add
leave
inc
mov
adc
and
cs
push
fsts
push
cmp
mov
mov
aas
divl
nop
xchg
push
lock
fdivrl
daa
mov
into
test
mov
ficoml
cmpsl
add
inc
sbb
lds
arpl
sub
jae
mov
and
ror
dec
das
inc
shrb
and
add
pop
xor
lods
scas
push
cmp
dec
int3
nop
outsb
clc
cmp
pushf
mov
aad
out
in
ret
lcall
xor
jns
fnsave
xchg
sbb
aaa
jge
fldenv
dec
and
in
and
sub
and
inc
loope
fldl2e
or
sbb
xchg
pop
sbb
aad
imulb
cltd
xchg
clc
adc
cmp
insl
jmp
mov
shrl
std
lret
shlb
rclb
add
neg
std
fsubrs
adc
pop
pop
loop
imul
pop
add
add
loop
stc
in
ljmp
repz
mov
add
xor
cmpl
add
ja
mov
scas
int
test
mov
std
cwtl
insb
sbb
fdivr
push
rcrl
mov
push
iret
xchg
pop
movsb
push
jecxz
inc
push
into
push
sbb
aaa
mov
jmp
mov
pop
out
loop
fdivrl
cmc
call
pusha
sub
jno
in
adc
clc
leave
sub
ret
inc
hlt
mov
hlt
movsl
sbb
scas
out
add
ds
dec
mov
xchg
sbb
inc
mov
pop
test
push
arpl
mov
jb
movsl
add
dec
outsl
xlat
sbb
cmp
mov
pushf
js
push
add
or
cmc
mov
test
int3
sbb
or
sahf
fnstsw
popf
dec
push
jno
sbb
cmp
push
add
cs
adc
aaa
xor
add
pop
add
add
mov
mov
rorb
in
push
or
mov
pop
cmpsb
jg
xorl
scas
outsl
jne
int3
sub
add
cmpl
lahf
add
add
mov
std
bound
pop
dec
jge
and
sbb
sahf
fsts
repz
shr
fsubrl
inc
xor
int
dec
arpl
push
adc
adcl
mov
repnz
jl
push
loope
lcall
in
stc
aam
popf
jbe
outsb
leave
mov
and
les
int
inc
daa
and
pushf
cmp
les
sub
pop
subl
adc
jnp
or
call
mov
insl
adc
mov
mov
icebp
test
add
lock
inc
mov
dec
dec
cmp
leave
mov
push
jo
cld
imul
dec
jns
jb
loop
cmp
repnz
aad
xchg
ljmp
insl
mov
lcall
out
and
outsl
fcomps
add
pop
add
add
and
test
adc
mov
push
lea
mov
xchg
sbbl
and
mov
pop
lret
cmp
sub
aaa
push
cs
sub
push
data16
stos
pop
lea
into
pop
adc
int3
mov
dec
scas
or
cmpl
fxch
arpl
cmp
enter
dec
fwait
xor
mov
fiadds
inc
pop
cmp
pop
mov
or
or
jg
jno
bnd
fs
jmp
rcrb
ja
push
mov
leave
mov
ljmp
insb
push
push
sub
hlt
pushf
add
dec
scas
push
xchg
into
mov
pop
negb
outsb
and
jno
xchg
add
sti
dec
mov
dec
xchg
fnstsw
dec
adc
push
shr
mov
je
mov
or
std
insb
cmp
pushf
addb
imull
add
sub
ja
aad
add
mov
stc
data16
add
add
add
sub
repz
in
aad
loopne
mov
xor
imul
adc
movsl
ljmp
push
sub
adc
sub
cmpsl
mov
mov
cld
pop
jno
ja
div
fwait
xchg
pop
and
cs
jecxz
mov
inc
enter
or
neg
jmp
mov
sarb
xchg
lods
and
sbb
testb
pop
add
outsb
in
rcrl
sub
mov
xchg
cld
dec
test
pushf
mov
and
inc
push
sbb
fs
inc
xchg
rolb
pop
mov
movl
cwtl
lahf
xchg
sub
subb
add
ror
pop
stos
das
je
bswap
in
leave
pop
cmp
cmp
mov
shr
pop
test
cmpsb
cli
push
cmp
sub
fiadds
mov
mov
int
mov
jnp
inc
cmp
jne
cmp
outsl
add
pop
add
add
mov
mov
mov
sbb
test
out
push
mov
dec
movsb
cmc
test
lods
jo
lret
cmp
cmp
divl
sbb
fcoml
adc
push
icebp
out
cltd
data16
and
add
arpl
inc
sub
call
outsl
add
in
cmpsb
lahf
testb
pop
push
or
cltd
mov
loop
lods
lock
sbb
int3
fucomi
cld
dec
adc
sti
pop
bound
nop
and
enter
rolb
aad
push
popa
push
sbb
loope
push
jnp
mov
fcoms
pop
lret
out
aad
es
mov
mov
mov
dec
adc
addr16
negl
data16
xchg
bnd
mov
pop
jnp
std
stc
push
add
adc
xchg
jl,pn
repnz
xchg
ss
scas
ljmp
and
mov
xchg
push
mov
cli
xchg
jle
rol
call
cmp
add
add
add
xorl
dec
insb
scas
push
iret
adc
xchg
movsb
insl
out
xchg
lds
nop
ljmp
inc
movsl
mov
fwait
sub
rolb
clc
jo
scas
vpaddd
mov
jno
xchg
mov
sbb
pop
push
outsl
in
div
jmp
ja
inc
xchg
mov
scas
xchg
mov
xor
popf
popa
xchg
mov
out
sbb
xchg
das
xlat
add
rcr
arpl
mov
inc
or
xorb
lods
scas
adc
icebp
sub
testb
out
pusha
lcall
add
gs
lahf
add
sti
push
outsl
push
pop
lock
out
add
imul
add
dec
add
rcll
stos
aam
sub
arpl
sbb
cmp
mov
stos
and
sub
in
loopne
mov
cmpsl
lock
pushf
imul
pop
negb
add
fwait
jnp
aad
push
adc
les
jno
add
add
add
repnz
sub
jae
outsb
ficoml
sbbb
xor
scas
insl
inc
repnz
xchg
repnz
call
jo
call
push
sbb
mov
adc
fiaddl
cmc
out
out
jp
das
pop
nop
xchg
ret
push
or
lret
xchg
dec
int3
sbb
movsl
cltd
adc
mov
xor
enter
dec
inc
push
aam
out
mov
dec
test
xchg
shrl
popf
loope
loope
outsl
jmp
insl
and
loop
int3
ret
mov
or
mov
stc
iret
push
lahf
aad
aam
in
lahf
lods
cs
xchg
push
insl
ret
test
inc
xor
pop
sbb
orl
mov
test
mov
incl
outsl
int
dec
leave
ss
test
xor
movsl
mulb
jb
mov
mov
orl
repz
outsb
pop
fistps
icebp
cmpsl
ret
push
fistpll
movsl
push
sub
add
mov
std
mov
fistps
push
and
add
pop
add
add
mov
push
popf
xor
adc
mov
lods
idivl
or
cmpl
cwtl
fmuls
dec
popa
jbe
inc
add
out
xlat
sbbl
push
add
les
push
nop
pop
loope
movsl
in
add
pop
push
mov
ss
pop
sub
jg
dec
fdivrl
sbb
push
setp
sbb
imul
call
pop
fstpl
mov
movsb
mov
fiaddl
mov
pop
push
pushf
push
lea
popf
repz
dec
xchg
inc
add
or
push
mov
push
push
ss
je
mov
rorb
push
or
jmp
inc
push
add
int
jnp
jne
cmp
add
push
and
cmp
mov
loop
mov
call
mov
into
adc
mov
mov
pop
adcb
add
add
fstl
mov
dec
jae
add
add
add
xchg
push
insb
scas
pop
aas
adc
pusha
mov
negl
nop
jne
mov
push
sub
lret
inc
mov
dec
jbe
outsl
lahf
mov
sbb
outsl
or
cli
call
or
arpl
ret
xchg
cmp
jmp
aas
jb
cmp
inc
fdivrl
clc
adc
add
jbe
iret
cmp
xlat
testb
jbe
lret
and
xchg
rolb
jns
push
ja
cmc
iret
cmc
pushf
mov
fstp
cmpl
fisttpll
rcll
mov
add
mov
lahf
data16
mov
fsubs
cld
js
jnp
test
hlt
and
jge
jmp
and
dec
push
pop
lret
sahf
mov
dec
insb
inc
jl
imul
clc
jb
push
shll
sub
in
dec
movsb
ret
fnstsw
inc
jbe
aas
sub
jne
cmpsl
inc
or
mov
adc
sbb
dec
jne
mov
cmc
adc
ljmp
dec
push
gs
add
add
inc
in
mov
mov
out
lahf
aaa
inc
or
je
add
add
add
xor
lret
jmp
cmp
in
and
jle
aas
xor
imul
es
mov
mov
pop
adc
ss
mov
insb
mov
shrl
xchg
jmp
jbe
test
iret
outsl
jne
xchg
sbb
mov
cmp
test
sub
fwait
inc
mov
mov
outsb
int3
jae
loopne
mov
insl
or
xchg
sti
push
iret
mov
or
inc
mov
stos
cmp
inc
aad
xor
push
pop
mov
repz
lcall
out
jg
pop
sbb
cltd
push
pop
push
movsl
inc
sbb
shlb
xor
pop
mov
add
sub
ss
xor
fs
fadd
mov
jns
je
xchg
add
xlat
mov
shrb
sub
in
int
std
ret
sub
sbb
outsb
xor
add
divl
dec
jno
orb
xor
jne
add
add
add
sti
rcll
lahf
in
inc
vpshufb
sub
inc
add
aas
gs
loopne
sbb
mov
addr16
call
and
push
cltd
jb
inc
lret
inc
push
mov
insb
adc
dec
jno
ja
push
test
add
ret
test
mov
adc
js
xchg
sbb
jecxz
cltd
imul
aam
das
pop
lds
sub
ja
sbb
cmpb
inc
pushf
mov
outsb
popf
push
popl
lods
imul
xchg
xchg
loop
xor
pop
mov
loope
push
outsb
or
mov
pop
jle
aad
insl
jp
adc
cmc
cld
les
cmp
loope
push
in
inc
imul
add
push
subb
or
jb
pop
pop
out
cs
jae
push
dec
shlb
add
cmp
pushf
xor
clc
fisubs
mov
xchg
inc
lock
adc
jbe
add
add
add
movb
add
test
xchg
shlb
or
test
cmp
je
mov
push
sbb
mov
faddl
pop
push
jae
and
sbb
fldt
mov
xor
push
incl
sbb
add
sahf
pop
jb
sub
ss
adc
pop
xchg
add
inc
and
mov
divl
jbe
xchg
gs
in
fsubrs
jmp
ror
xchg
clc
adc
xchg
mov
data16
push
xor
mov
cli
cwtl
std
adc
xor
sub
add
mov
and
jno
jo
adcl
out
cwtl
test
pop
xchg
mov
lods
jle
mov
pop
lret
rorl
mov
adc
mov
push
cld
xchg
enter
mov
or
repz
mov
add
pop
ret
stos
sbb
pop
add
mov
outsl
jne
ljmp
mov
add
pop
add
add
jecxz
mov
loope
lret
dec
loop
dec
xor
mov
sti
ja
cmp
cmp
push
mov
js
sahf
cmp
cmp
jbe
imul
adc
jns
shl
repz
mov
es
adc
or
adc
int
testb
jae
mov
or
jmp
jns
das
stc
test
insb
outsl
or
test
cld
cmp
in
pop
in
sbb
cmc
in
pop
in
loopne
jns
and
xchg
pop
iret
mov
xchg
insl
iret
in
xchg
add
mov
xor
stc
jns
xor
or
jmp
dec
mov
divb
pop
in
movsb
xchg
adc
push
and
dec
mov
outsb
iret
push
fimull
lret
lahf
sbb
push
outsb
sub
lahf
fldcw
xor
or
xchg
push
xor
mov
dec
mov
mov
call
inc
mov
repnz
test
orb
decl
push
call
js
add
add
add
add
sbb
xchg
mov
icebp
outsl
mov
or
call
pop
and
iret
or
mov
mulps
xchg
fstp
inc
gs
mov
and
sbb
push
mov
push
cltd
imul
lret
add
call
adc
mov
mov
pop
sahf
mov
ret
push
fnstenv
adc
mov
les
mov
xchg
mov
xor
stos
jae
jo
push
mov
pop
pop
loopne
out
mov
mov
pop
idivb
pop
in
jl
aaa
pop
mov
inc
and
adc
dec
and
test
mov
push
mov
enter
dec
out
test
iret
das
push
xchg
out
push
je
jg
hlt
lock
je
and
fsubl
mov
xchg
and
test
add
add
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
lods
jo
adc
shl
pop
xchg
adc
and
mov
clc
cli
mov
pop
push
gs
mov
sbb
popa
add
jbe
shl
sbb
enter
mov
sub
jae
fsub
in
xor
and
pop
push
xchg
dec
out
mov
jne
mov
je
sub
sub
sbb
rcl
adcb
addr16
cmp
in
loop
jnp
dec
mov
jp
fnsave
gs
pushl
sbb
and
xchg
sarb
jp
jb
int
ljmp
lret
xor
dec
in
arpl
out
dec
cmpsb
push
sub
xchg
xor
loopne
xchg
pop
xchg
push
in
into
insb
iret
ret
imul
aam
idivb
or
les
or
inc
aad
pop
inc
add
push
shl
inc
pop
mov
mov
cmpsb
lods
rcrb
cmp
push
sbb
jp
add
add
add
jbe
cmc
mov
or
ret
int3
push
clc
jnp
dec
je
push
fs
adc
mov
cwtl
and
mov
fmull
sbb
mov
mov
aas
or
into
jnp
xchg
jno
mov
sub
inc
cli
push
push
arpl
or
int3
cmp
dec
push
lret
mov
push
and
dec
in
inc
add
adc
xorl
ret
mov
cmc
mov
ja
fidivrl
loopne
out
imul
repz
push
add
in
push
shlb
sahf
ss
pop
fildll
jl
scas
xlat
mov
adc
cmp
and
pop
dec
aas
mov
iret
and
mov
jne
cmpsl
imul
adc
jbe
lea
pop
push
sar
mov
jmp
jmp
ds
ss
dec
fnstenv
push
push
notb
mov
imul
insb
iret
out
mov
mov
add
cmp
cli
mov
stc
je
inc
test
add
add
add
sub
jecxz
sbb
insb
mov
fsubrl
sbb
subl
jno
fcompl
xchg
cld
ror
adc
inc
iret
bound
jl
xor
ret
lds
aad
lahf
pop
repz
fistpll
xor
test
pop
jl
fwait
cs
loope
sbb
out
and
mov
movsl
or
insl
add
mov
int
mov
fsubl
sbbl
xor
outsl
push
mov
push
push
adc
movsl
fwait
or
push
test
fs
xor
cmp
iret
adc
cmpsb
mov
lods
jecxz,pt
ret
mov
dec
push
hlt
xchg
xor
lret
jo
fnstcw
xor
xor
test
mov
jb
push
push
outsl
push
and
dec
shlb
pusha
cmc
ret
pushf
js
mov
push
std
inc
jecxz
mov
clc
xchg
fsubrp
add
test
inc
jbe
stc
iret
mov
imul
sbb
js
bound
xchg
sub
or
inc
fldt
jb
ja
iret
sbb
xlat
fnstenv
jl
push
imul
mov
or
jmp
mov
lods
pmullw
and
jp
xor
jmp
pop
ja
outsb
push
repz
xor
jne
fnsave
lahf
es
adc
gs
sbb
repnz
leave
shrl
jne
inc
inc
test
mov
ds
mov
lods
out
stc
incb
scas
ljmp
cmc
out
jb
jmp
cltd
fildll
lds
or
ljmp
or
stos
add
fcmovnu
and
int
or
mov
dec
mov
mov
stos
sahf
mov
mov
data16
lods
xchg
cmp
in
aaa
mov
fdivrs
cmp
xchg
mov
daa
sbbl
add
add
xchg
xchg
jns
dec
out
movsb
pop
bound
add
add
add
jb
dec
jo
cli
xor
jne
inc
mov
add
icebp
sahf
dec
push
push
into
cmpb
testl
cmpsb
mov
data16
js
sbb
scas
roll
mov
jne
mov
pop
mov
outsb
or
add
xor
cmp
pop
arpl
lock
aas
and
fidivl
push
xlat
or
and
cltd
das
jne
cwtl
mov
xor
lods
mov
sub
inc
call
daa
das
cmp
xchg
ret
add
mov
pusha
data16
in
and
pop
lea
add
cmp
cmc
in
insb
fmuls
std
jl
xlat
rcll
movsb
js
pop
negl
or
jmp
sbb
mov
mov
aad
mov
int
icebp
imul
sbb
push
push
cltd
hlt
insb
lods
inc
imul
test
add
xorb
jp
test
add
add
lcall
loopne
sbb
pop
add
add
mov
or
jbe
dec
rcl
rclb
inc
movsl
xchg
lahf
lahf
in
jo
and
ljmp
sub
lcall
xlat
testl
mov
xchg
js
iret
add
adc
xchg
push
xchg
cmp
xor
dec
jmp
mov
push
repz
mov
insl
push
cmp
cmp
pop
xchg
iret
or
cmc
or
xlat
pusha
mov
pushf
addl
lcall
sub
jmp
stos
lahf
fcoml
in
and
cmp
leave
movsb
push
dec
push
es
outsl
mov
pcmpgtb
leave
test
dec
stos
enter
inc
push
add
imul
xchg
arpl
sub
insb
push
in
dec
cli
lahf
lahf
push
jno
mov
jns
orl
cmp
xchg
pop
mov
mov
aad
call
inc
push
ss
lret
add
mov
idiv
fnsave
pop
adc
add
add
add
dec
sub
dec
cmp
into
push
pop
push
test
jbe
iret
adc
out
xlat
fs
ljmp
nop
popa
rolb
je
mov
cli
call
pop
mov
cmpsb
imul
test
in
popf
cmp
mov
out
fsubs
test
mov
mov
les
shl
mov
mov
push
repnz
jae
mov
fcomps
pop
push
aaa
enter
xor
imul
hlt
addb
adc
les
aas
fisubrl
and
mov
mov
or
jl
xor
cld
loopne
push
aam
push
mov
int
lret
sbb
jecxz
insl
test
and
mov
ret
xchg
rcrb
fdivrp
or
sbbl
push
xchg
out
mov
out
repz
addb
add
add
call
inc
ss
test
add
pop
add
add
sub
mov
loop
out
test
andl
frstor
or
out
loopne
ljmp
xorl
jle
pushf
jge
inc
sbb
test
mov
add
shll
ret
test
push
and
add
mov
test
rol
ljmp
dec
sub
mov
scas
stc
adc
and
decl
sbb
or
mov
inc
dec
imul
gs
push
test
pop
jbe
pop
mov
sub
pop
aaa
test
cmp
push
or
and
mov
pop
mov
in
jns
mov
iret
xchg
xor
xor
push
xlat
mov
xchg
mov
pop
mov
imul
dec
sahf
adc
insl
cmp
inc
sti
stos
aad
add
pop
or
cmp
imul
add
mov
jge
std
sti
iret
test
sub
out
and
pop
add
add
xchg
icebp
fwait
repz
mov
xchg
push
das
push
faddl
scas
xor
fwait
xchg
xor
inc
push
sbb
ljmp
push
mov
dec
fs
mov
push
add
pop
push
mov
orb
jl
add
pop
sub
mov
insb
xchg
dec
lds
jno
sbb
push
loop
mov
or
shll
lods
mov
fstpt
rolb
xorl
inc
popl
pop
fnsave
mov
push
into
adc
cltd
js
mov
or
addr16
enter
cmp
xchg
andl
xchg
lock
dec
negb
and
add
and
jb
adc
addr16
rolb
push
data16
and
mov
leave
sbb
orb
repnz
push
push
int3
push
sub
or
and
popa
daa
or
rcrl
test
scas
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
xchg
fs
mov
add
pop
add
add
cmc
xchg
jmp
pop
sbb
mov
xor
dec
mov
lret
loop
in
clc
int
jnp
jb
popf
in
pushfw
scas
loopne
add
mov
jns
mov
cwtl
adc
shrl
pop
punpcklbw
xlat
pushf
push
mov
jg
and
fimuls
dec
inc
imul
xchg
and
rclb
lods
mov
arpl
sbb
pop
popf
aam
xchg
pmaxub
pop
mov
cmp
push
lea
ret
add
loopne
out
mov
jecxz
dec
movsb
mov
outsb
jbe
ljmp
xlat
in
lock
in
adc
int
add
stos
jne
mov
xchg
fucom
in
xchg
fbld
and
ss
in
leave
insb
lock
push
cmc
xor
aam
mov
push
enter
adc
std
push
lea
test
xor
mov
pop
push
inc
in
add
mov
cmp
les
addl
pop
add
add
sbb
cmc
lret
les
adc
cli
xor
fistpll
add
imul
mov
lods
lret
enter
sub
sbb
pusha
loope
push
push
pop
sub
dec
jle
jns
repz
rorb
cmpsb
mov
sub
or
ror
fidivrs
adc
lds
or
rcrl
sub
sbb
xor
push
jmp
mov
popf
sbb
add
out
add
repz
or
ja
or
fdivl
sub
repz
enter
cld
dec
jmp
cmp
xor
cmpb
mov
test
movsb
out
gs
ret
cmp
cltd
adc
and
sbb
adc
insb
push
jge
xchg
pop
sub
je
add
subb
jb
ds
fsubrs
rolb
and
out
ljmp
roll
leave
les
add
sub
jg
test
xchg
xchg
push
movsb
xchg
pushf
xchg
add
inc
pop
push
push
fidivrl
adc
arpl
cmp
add
dec
test
sbb
es
lahf
mov
push
xchg
mov
bound
in
sub
int3
xchg
cmp
cltd
fbld
or
aaa
insb
mov
imul
jge
xor
xchg
lock
rolb
stos
sbb
adc
xchg
pop
xchg
lahf
sbb
out
dec
sbb
push
inc
ljmp
test
into
jae
roll
int3
mov
push
dec
imul
xchg
in
das
arpl
cmp
mov
push
jnp
dec
loopne
pop
jae
inc
add
cmpsb
add
xchg
in
out
or
hlt
jns
test
frstor
mov
xor
inc
mov
or
pop
add
pop
movsl
js
pushf
or
sbb
mov
inc
in
je
dec
and
inc
jmp
dec
add
arpl
jnp
sbb
adc
xchg
ror
test
add
add
add
push
or
adc
mov
mov
cld
or
cmp
push
outsb
cwtl
xchg
adc
pop
lds
in
fnstenv
hlt
pop
test
xchg
andb
stos
aaa
xor
and
pushw
xchg
ret
dec
adc
daa
dec
sub
dec
test
adc
lods
and
mov
sub
loop
leave
jecxz
lret
and
push
inc
and
cmp
cmp
jo
mov
das
pop
lahf
mov
aas
pop
lods
cmc
mov
rcl
cmp
xchg
les
jg
push
jae
sbb
or
and
cld
sarb
pop
push
int3
bound
push
scas
mov
sbb
jge
sub
or
and
xor
bound
mov
sarb
inc
and
out
mov
add
dec
fisttps
cs
push
mov
lock
jmp
aad
push
push
andb
push
aas
or
mov
lock
adc
xchg
add
add
add
cwtl
iret
adc
pop
xor
add
lods
fsubrl
std
xchg
mov
aas
call
xlat
aas
mov
lahf
ds
popa
addr16
jno
jnp
sbb
bound
add
lret
dec
sub
mov
or
in
insl
lock
pop
inc
out
cld
xor
dec
js
stos
mov
out
or
fs
or
data16
adc
inc
mov
fbld
sbbb
cmp
sub
clc
popa
jg
dec
js
out
mov
enter
lods
not
movsl
inc
out
xchg
or
popf
rcll
cmp
jae
jecxz
testb
pop
fcoms
cmp
in
lock
xchg
cmpsl
addb
fsubl
mov
xor
pop
sbb
fimull
in
adc
cmpsb
shr
mov
mov
out
leave
std
add
push
outsb
fisubrs
jno
icebp
flds
add
xchg
arpl
mov
fimuls
jno
xchg
dec
xchg
or
xor
addr16
sbb
in
inc
into
dec
adc
pop
fsub
mov
es
aad
outsb
ret
cltd
popf
mov
movsb
xchg
push
cmpps
jbe
push
bound
cli
xorl
xor
xchg
sbbb
outsb
test
pop
lcall
outsl
sbb
sub
out
adc
xchg
cmp
loopne
sub
aas
insl
fisttpl
dec
sub
outsl
aaa
lcall
fisubrl
mov
push
pushf
and
xchg
out
cs
cwtl
mov
pushf
add
pop
cmp
jb
xchg
add
and
mov
jle
pop
ss
jmp
and
mov
cli
sub
cmp
test
inc
mov
out
in
adc
movl
jge
leave
loopne
sub
repnz
insb
in
cmp
cmc
dec
mov
add
flds
sbb
jg
cmp
add
mov
xchg
mov
mov
mov
add
add
add
sub
jne
sahf
addl
sub
mov
out
setg
stos
insb
in
jno
mov
mov
andl
scas
ret
add
cmp
shrl
push
pop
pop
dec
or
sub
xchg
sub
fstpl
cmp
hlt
push
mov
xor
lret
push
cmp
cmp
rorb
xorb
sar
pop
jg
push
rcl
add
jae
fcmovnbe
sub
in
lea
insb
mov
dec
mov
cmp
cmpsl
jecxz
push
jno
adc
mov
std
scas
xor
cmp
sbb
loopne
and
fisubrs
nop
mov
xchg
aaa
mov
dec
ljmp
adc
xor
data16
jae
scas
int3
ret
repnz
inc
ret
leave
xor
cmp
add
add
add
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
fldcw
inc
mov
pop
cmc
push
sbb
add
gs
mov
or
scas
movsl
push
sub
dec
xchg
repz
cmp
mov
push
insl
sbb
bound
mov
add
inc
stos
push
push
enter
stc
repnz
xor
mov
adc
push
adc
test
or
xchg
or
xor
roll
fs
mov
sub
shll
out
scas
jmp
sbb
and
in
test
repnz
shll
xchg
or
lea
and
cld
add
addr16
rcrl
cmp
mov
fnsave
mov
test
xchg
dec
loope
in
fucom
push
xchg
lods
aad
jno
mov
mul
xchg
sub
adcb
int
cwtl
cmpsl
xchg
jge
mov
orl
mov
xor
mov
add
ficoms
lahf
and
scas
std
and
xchg
rclb
mov
add
add
add
sub
xorl
jmp
mov
push
and
mov
jle
xchg
sbb
and
mov
out
adc
stc
in
out
cmc
push
mov
call
pop
xchg
inc
decl
mov
add
or
mull
pop
loop
sahf
inc
push
std
insl
jge
fisttps
jle
pusha
and
cmc
jecxz
mov
in
and
xchg
pop
mov
imul
cld
test
push
mov
aaa
push
iret
mov
movsb
aad
lods
mov
and
daa
int3
fadds
push
mov
adc
push
xchg
mov
push
std
or
fdivr
bound
sbb
inc
add
incl
or
add
adc
aas
adc
xchg
cmpsb
rorl
mov
addb
adc
movsl
mov
int
bound
stc
fs
cmp
loope
mov
loop
imul
mov
cmp
lods
les
jnp
mov
add
cmc
mov
add
add
add
stos
cmp
in
sahf
sbb
stc
icebp
repnz
out
mov
inc
fstps
and
pop
jae
pop
mov
ljmp
ret
push
xchg
xor
jno
lret
rcl
dec
mov
mov
cmp
mov
repz
push
mov
pop
xchg
cmp
lcall
sub
dec
scas
gs
or
jl
out
sahf
dec
push
adc
shr
dec
test
out
and
sbb
pusha
loop
mov
stos
push
cmp
pushf
lods
and
sbb
mov
fdiv
jle
pop
faddl
mov
mov
faddl
sub
jno
push
je
fdivp
out
or
mov
cmp
decb
jp
cmp
cli
dec
pop
scas
outsb
xor
out
sarl
sub
adc
bound
mov
sbb
mov
or
inc
add
les
out
xchg
loopne
xor
add
add
add
lods
loop
add
scas
pop
and
and
rcr
inc
or
and
and
cmp
pusha
cs
std
ljmp
inc
stos
ds
aaa
fidivrl
addb
out
mov
inc
mov
ja
ret
fcmovnb
add
push
mov
lret
jge
and
fists
ret
mov
sbb
mov
ret
rorb
xor
aam
test
lahf
cmp
jp
aaa
add
mov
insb
mov
jo
and
inc
das
cs
add
cmc
cmp
add
ss
cmpb
dec
mov
scas
out
adc
pop
popf
inc
sub
movsb
or
je
mov
or
insb
mov
cmp
or
cs
aam
add
fbld
sti
xor
lods
cmp
sbb
inc
xorl
add
add
ljmp
dec
push
ret
outsb
imul
add
add
xchg
jo
frstor
mov
lods
outsl
or
mov
jg
ud2
pop
mov
arpl
jg
add
pop
cmpsb
mov
inc
test
mov
pop
fs
pop
add
mov
lock
xchg
adc
shlb
hlt
mov
lahf
and
xchg
imul
inc
dec
push
dec
outsl
cmpsl
push
xor
jmp
cmpsb
pop
pop
adc
icebp
out
dec
lahf
dec
fstpt
cltd
repz
adc
dec
loopne
push
ljmp
lcall
in
mov
lock
in
pop
cmp
fwait
movsl
loop
adc
icebp
icebp
mov
cld
dec
inc
ret
mov
pushf
mov
inc
imul
arpl
mov
mov
scas
mov
sbb
cs
frstor
dec
fsubr
cs
mov
sti
sbb
leave
iret
scas
mov
mov
add
push
add
aaa
shlb
cmc
div
mov
shrl
or
add
and
in
xchg
repnz
rcrl
pop
adcb
add
movsl
sbb
or
imul
push
aas
cmp
pop
aam
push
into
mov
rcll
stos
movsl
cli
cmpb
in
rcl
mov
lret
js
mov
jmp
mov
dec
or
into
imul
push
cmp
add
arpl
mov
xchg
sub
cmpsl
inc
push
aad
mov
sub
es
jecxz
scas
sarb
sbb
xlat
aam
and
sti
add
adc
inc
je
test
jecxz
stos
sbb
push
sbb
cmp
mov
push
xchg
mov
bound
jb
std
and
fsubl
mov
ret
dec
mov
popa
sub
insb
pop
add
jge
test
or
repz
out
xchg
sbb
nop
cmp
pop
pop
rclb
pop
adc
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
adc
and
cmp
or
mov
mov
pop
lahf
xor
ret
sbb
jb
lods
push
mov
ficompl
jl
loop
cmp
add
lcall
inc
add
fcmove
push
jne
and
sbb
fldl
bound
addr16
cmc
aas
icebp
gs
push
dec
inc
daa
lret
inc
rcrl
fldt
jns
shlb
pop
popf
and
repz
cmp
dec
cltd
mov
test
or
outsb
clc
adc
sub
aas
iret
int3
push
jno
pop
into
je
das
cmp
hlt
push
rcll
mov
iret
filds
addb
je
fadds
mov
inc
sub
inc
fcoms
add
mov
push
aad
and
sti
sbb
xor
sbb
mov
pop
xor
push
jp
daa
mov
mov
mull
xchg
divl
mov
sbb
inc
arpl
sbb
shll
cmpsb
jcxz
mov
xor
add
add
add
fwait
mov
arpl
mov
cwtl
and
repz
js
fcmovne
fisubl
lods
scas
xlat
cmc
mov
orl
daa
sub
sub
test
or
push
inc
xchg
das
xchg
pop
sub
lahf
pop
rcrb
mov
jo
testl
int3
lods
sbb
pop
mov
sub
movsb
inc
out
add
inc
fists
cld
xor
jp
test
ss
clc
mov
mov
fbld
lcall
dec
imul
pop
leave
xor
arpl
cmp
es
paddusb
sub
and
mov
mov
push
imul
in
pusha
mov
cmp
dec
lret
and
sbbl
ret
arpl
fstps
push
mov
xor
mov
mov
pop
and
mov
and
xchg
stos
add
clc
jnp
jg
in
cli
push
shr
pop
xchg
add
pop
add
add
push
inc
xchg
adc
pop
loope
dec
sub
xor
ljmp
pop
sub
movsl
inc
loopne
inc
fidivrl
push
adc
fisttps
mov
mov
pop
add
xlat
addl
xchg
mov
repz
dec
mov
jae
outsl
xlat
push
leave
dec
leave
cwtl
dec
mov
inc
push
iret
sahf
jbe
fdivs
sub
fstps
fcomps
insl
shll
dec
mov
pop
sub
adcb
mov
xchg
inc
mov
sbb
push
cmpsl
sbb
inc
ja
cmp
rclb
dec
call
mov
sbb
movsb
scas
sbb
lahf
jbe
dec
bound
repz
mov
push
sbb
movsb
mov
rcrl
add
fisubrl
lahf
ret
mov
dec
test
js
stc
in
je
cmp
mov
mov
dec
push
data16
stc
push
stos
ds
add
lods
faddl
fbstp
cld
fidivl
in
sbb
pop
es
add
pop
add
add
out
inc
ds
xchg
loop
imul
push
cli
lcall
insb
pop
mov
adc
jb
jp
es
cltd
and
mov
push
iret
shr
dec
mov
mov
adc
in
sbb
or
aam
cmpb
roll
mov
pusha
insl
arpl
mov
adc
nop
xchg
mov
pop
fnsave
arpl
xor
sub
mov
mov
and
and
lcall
ret
mov
xchg
testb
mov
mov
aad
xchg
mov
jb
or
push
aam
mov
adc
mov
unpcklps
mov
nop
lods
pusha
mov
fcoml
xor
xor
jo
xor
out
fldcw
inc
mov
push
and
jnp
cmpsl
cmp
inc
jle
neg
sub
test
fs
daa
mov
jl
sar
std
jle
testb
or
arpl
add
add
push
insb
mov
xchg
in
mulps
stos
sbb
test
pop
sbb
mov
fistpll
adc
and
dec
xchg
add
xchg
testb
cmc
xlat
mov
in
sub
mov
jmp
mov
jle
aam
mov
rcll
push
inc
mov
sarl
adc
jmp
mov
cltd
ja
aam
lds
dec
xlat
push
push
fwait
test
jb
test
mov
xchg
lds
jge
add
aad
sarl
or
push
orb
das
push
jg
sti
jb
cli
cmp
inc
in
addr16
out
mov
incl
fidivrl
inc
mov
stos
jbe
enter
push
cmp
cltd
nop
pushf
xchg
inc
sbb
adc
inc
aas
mov
call
and
fbstp
dec
sub
mov
adc
xchg
in
clc
add
ret
mov
or
add
cwtl
or
stos
xchg
cmp
mov
xor
add
pop
add
add
xchg
sub
dec
mov
adc
push
insl
dec
scas
jle
stos
fwait
mov
mov
mov
cld
scas
insl
add
lret
inc
fsubrs
sub
enter
pop
dec
popf
add
pop
jp
lea
mov
mov
scas
dec
and
rol
loope
enter
xchg
inc
ss
orb
or
stos
loop
jp
fisubs
mov
mov
jo
xor
pushf
int
aad
fimull
bound
pushw
js
icebp
sbb
in
cmovno
sub
ret
iret
mov
dec
outsl
xchg
adc
repz
and
lea
movsb
mov
arpl
xlat
jne
pop
scas
sbb
sahf
aad
sub
mov
mov
arpl
push
ss
mov
daa
jle
orb
mov
push
dec
repnz
clc
gs
pop
mov
mov
lods
add
add
dec
flds
fwait
and
popa
mov
sub
in
cmp
add
aad
sub
sub
je
mov
push
push
in
out
sar
insb
mov
mov
ret
movb
nop
popl
outsl
jnp
data16
xchg
popf
clc
mov
aas
out
or
packuswb
add
inc
out
outsl
fdivl
daa
icebp
xchg
hlt
repnz
cmpsl
jnp
int
and
push
mov
cld
clc
jo
dec
hlt
and
pusha
loope
fwait
dec
data16
adc
push
sar
sub
cs
push
ds
loopne
xor
in
dec
and
sbb
jg
mov
xor
les
mov
outsb
jne
pushf
shll
popf
jnp
notl
push
lock
or
sub
sub
std
vcvtpd2psy
lods
int3
out
inc
lods
cmp
xor
rorl
pusha
adc
sbb
cmp
test
adc
xchg
sbb
push
sahf
mov
lea
fisttps
cmp
jbe
lea
add
dec
std
out
xlat
aas
insb
lods
ret
jns
hlt
inc
xchg
add
pop
add
add
sahf
lods
lret
movsl
sub
dec
sbb
cmp
mov
xchg
dec
ret
loope
dec
icebp
jno
mov
out
sub
add
dec
ljmp
out
adc
aam
and
push
push
test
xchg
push
rcr
fistpl
jb
shr
lock
lock
xchg
lods
ficoml
cs
subl
pop
ffreep
xor
movsb
xchg
pop
and
insl
mov
or
out
lods
shlb
sti
scas
leave
jns
dec
rcr
mov
sub
test
jb
rcrb
scas
xchg
shl
xlat
aas
adc
les
mov
aad
mov
push
pusha
push
bound
xor
sub
sbb
in
add
cmpsb
or
rcrl
push
dec
sbb
jne
loope
popf
lods
stc
cltd
mov
dec
xchg
in
inc
mov
or
push
sbb
inc
hlt
scas
mov
lret
xor
xchg
add
add
mov
mov
jmp
dec
add
dec
cwtl
add
pop
add
add
and
ret
aas
sub
mov
mov
push
imul
clc
adc
pop
add
add
das
and
jbe
pop
inc
push
mov
cmp
pop
fsubl
cmp
fcmovb
adc
xor
arpl
mov
out
cld
movsl
les
cwtl
mov
dec
xchg
mov
pop
mov
sbb
stos
fcmovnbe
add
mov
stos
sahf
mov
xor
cmp
bound
cmpsl
add
and
std
xchg
out
xor
pop
imul
fs
inc
nop
mov
pop
or
cld
dec
adc
mov
cltd
lcall
mov
add
xchg
xor
xor
imul
aad
je
xor
lret
movsb
movsb
popa
and
dec
das
ret
fcoml
stc
mov
and
outsb
pop
lcall
jmp
iret
mov
push
add
add
lret
sbbl
xorl
iret
cmp
add
pop
add
add
repnz
cmpsl
mov
push
gs
loop
push
testb
pop
fimull
movb
mov
rcrb
mov
jg
popf
pop
xlat
jle
ja
movsb
popa
sub
mov
lds
repz
in
repnz
xchg
popf
or
add
es
ja
out
pop
sarl
xlat
popa
dec
add
jg
push
jmp
sbb
mov
movsl
negl
sbb
repnz
ljmp
in
inc
enter
icebp
pop
outsl
jnp
test
ljmp
fs
push
pop
xor
pop
inc
stos
xor
cltd
hlt
cmp
addr16
les
jae
leave
or
ds
mov
stc
mov
push
lcall
shl
aas
rcrl
push
insb
ret
test
and
les
pop
mov
icebp
icebp
mov
xchg
cli
push
repz
repnz
int3
mov
cmc
mov
repnz
insb
ja
or
xlat
les
mov
imul
sbb
leave
dec
fwait
or
push
lcall
xchg
pushf
pop
shrl
jno
daa
subl
iret
adc
rol
add
pop
lret
pusha
clc
outsl
push
inc
mov
pop
dec
cltd
fwait
testl
out
into
fstl
ja
xchg
or
xchg
or
inc
pop
je
cmp
xor
subl
mov
inc
sbb
dec
mov
sbb
push
jnp
mov
and
and
imul
pop
sub
or
movsb
xchg
xchg
ljmp
and
je
arpl
jge
cmp
imul
and
xor
aad
or
push
add
in
push
sbb
ret
or
jbe
je
scas
sub
dec
rol
xchg
or
adc
mov
add
sbb
aaa
and
div
test
enter
sti
lret
ljmp
dec
or
or
data16
push
xchg
imul
add
mov
jge
jg
ljmp
out
stos
push
imul
pop
add
add
dec
pop
or
cmpl
loope,pt
in
xchg
pop
scas
xor
mov
jp
xor
inc
jmp
inc
jp
stos
push
rclb
dec
jns
jae
dec
mov
stos
jp
jp
sbb
stos
bound
negb
push
int3
fbld
fwait
add
add
push
or
sbb
and
addr16
cli
ja
loope
roll
push
sub
xor
mov
jno
mov
ret
jle
jmp
ja
cmp
xchg
xchg
sbb
ds
lock
mov
rorb
jne
test
xor
scas
mov
lcall
decb
mov
addr16
mov
pop
cwtl
aad
or
movsl
adc
mov
and
jle
pop
cmp
jle
adc
pop
stc
and
pop
test
and
data16
xchg
mulb
fstpl
xchg
ficompl
add
cltd
sub
out
xor
cld
insl
mov
test
add
pop
add
add
sar
push
loop
bound
xor
and
or
mov
mov
inc
loope
jno
cwtl
sbb
jo
fnstenv
jecxz
mov
inc
aad
pop
xor
rcrl
jne
and
xor
push
pushf
mov
and
mov
imul
test
jp
xor
jns
lock
and
ret
loope
xor
insl
jno
pusha
mov
idivb
test
mov
sbbb
es
push
gs
push
fiadds
and
cmc
mov
mov
pop
dec
cwtl
and
xor
sbb
shrb
mov
das
aam
loop
dec
add
sbb
std
repz
xor
xchg
fcomps
jecxz
fsub
cld
lods
mov
xor
test
loop
inc
dec
lret
xor
xchg
dec
es
jo
sahf
inc
into
lds
adc
inc
cs
adc
jnp
lds
loop
test
je
push
roll
adc
popf
add
pop
add
add
int3
pusha
xchg
jmp
jne
pop
imul
rol
cmp
jno
adc
cmp
pop
adc
aas
jns
fisubl
mov
rclb
out
add
xchg
test
fs
inc
lret
sub
in
inc
push
cmp
jae
xchg
push
jo
inc
push
adc
xlat
pushf
sbb
pop
outsb
inc
sub
sub
and
xor
adc
subl
jne
clc
xor
mov
or
jle
jg
mov
test
pop
xchg
enter
sahf
lock
mov
into
sub
sahf
sbb
cmp
jge
push
adc
mov
je
clc
inc
sub
pop
xchg
push
std
test
test
jno
mov
sbb
rolb
cld
out
flds
pop
pop
cmp
jo
push
mov
and
xor
pop
push
and
add
add
add
mov
repz
repz
dec
mov
add
add
add
std
mov
fstpt
test
ss
mov
daa
mov
add
add
push
cltd
inc
loope
pop
sbb
fnstcw
scas
push
testl
shrl
xchg
mov
or
xor
xchg
aam
icebp
in
sub
subl
cmp
dec
aam
adc
inc
adcl
ret
loope
pop
cmp
adc
jl
mulb
adc
mov
xor
sbb
loope
jl
pop
hlt
jae
push
push
rcrl
adc
or
sub
in
push
test
sub
pop
fimuls
push
iret
add
sub
jmp
pop
xchg
das
popf
lahf
push
pop
pop
xor
bound
mov
jno
add
lahf
inc
dec
imulb
jg
fimull
orl
int3
jns
and
movsb
mov
mov
pop
or
loop
lahf
add
pop
add
add
popa
xorl
push
jno
das
in
add
xchg
pop
not
mov
fs
pop
lods
sbb
stc
arpl
mov
call
jle
mov
cmp
cwtl
mov
sbb
sbb
jl
xor
std
cmpsl
pop
push
xchg
mov
les
mov
push
mov
push
xor
idivb
lea
shl
inc
push
jmp
cmp
mov
xchg
xor
sub
dec
aad
nop
ja
cmp
sub
stos
and
xor
inc
cmc
gs
daa
mov
sbb
mov
mov
xchg
mov
bnd
cltd
cmp
lods
lea
add
inc
loope
ret
dec
out
in
jae
push
nop
mov
popa
mov
ret
jmp
sub
mov
sbb
xchg
push
lods
jecxz
push
repz
mov
pop
cli
add
std
stos
sbb
add
add
add
mov
out
push
fistl
mov
sub
dec
iret
xchg
jmp
jno
les
testb
fdivs
or
lods
xchg
mov
stos
xchg
fbld
jnp
xchg
jae
dec
orb
insl
sti
cltd
pushl
sbb
dec
add
dec
xor
jae
gs
xchg
jae
cmpsl
mov
jge
sbb
roll
subl
cmpsb
mov
lret
adc
xlat
bound
push
pop
sahf
xchg
mov
imul
cs
cs
rolb
ja
pop
fucomi
adc
xlat
arpl
cmpsb
inc
cmp
outsb
sbb
jle
shll
lret
pop
pop
ss
imul
js
stc
stos
scas
stc
jp
test
scas
xor
sbb
lea
push
mov
sub
adc
fbld
mov
imul
es
sbb
mov
pop
mov
add
inc
fdivl
push
push
add
add
add
loope
adc
es
sub
jns
and
cld
shll
test
mov
aam
mov
xchg
pop
je
movsl
bound
or
mov
aas
fs
stc
push
pusha
jle
shrb
cli
out
push
fwait
dec
addr16
cmc
cmp
pop
mov
movsb
cmc
sbb
push
incb
xor
push
fwait
jno
negb
loopne
dec
scas
out
jbe
add
popa
js
std
jne
fwait
cwtl
jge
ja
ljmp
ror
test
sbb
push
roll
pop
mov
pop
negb
ljmp
sbb
inc
dec
test
or
ret
push
repnz
enter
pusha
mov
push
push
bound
dec
xor
jnp
fwait
push
call
dec
push
and
icebp
mov
or
cmpsl
lock
dec
push
rcrb
shrb
xor
mov
mov
mov
enter
mov
lea
pop
and
aas
add
sbb
mov
push
push
jbe
jg
mov
add
inc
test
xchg
xor
adc
and
xor
rcrl
pop
ljmp
cmp
inc
outsl
xchg
or
clc
inc
jmp
fwait
cmp
jmp
sbb
cli
push
ss
pop
test
stc
mov
mov
dec
mov
add
and
cli
pop
int3
mov
push
loope
inc
or
orl
fisttpl
mov
pop
add
add
addb
jae
sub
stos
xor
mov
and
pop
dec
ret
and
movsb
dec
add
jle
dec
sub
jp
shll
push
mov
out
sbb
aam
negl
xchg
push
rol
sub
out
scas
popa
out
xchg
outsl
hlt
in
ds
ror
daa
mov
lds
jle
and
mov
mov
enter
loope
fistpll
int
or
or
adc
add
add
stos
hlt
jmp
jmp
and
add
add
add
in
add
imul
jae
inc
mov
dec
in
inc
mov
dec
mov
push
mov
out
xor
and
xchg
dec
shrl
es
popa
mov
sbb
jo
mov
int
outsb
lea
fadds
jecxz
repz
nop
pushf
or
push
xchg
sub
sub
sub
movsb
cmc
jmp
sub
adc
or
cs
inc
jnp
add
test
sub
pop
mov
xor
jbe
aam
scas
xchg
int3
dec
ret
gs
aam
lock
sbb
sbb
inc
jb
rorl
or
popa
std
sti
push
mov
mov
mov
lods
sbb
mov
lret
rolb
test
testl
jnp
in
xor
ss
add
stc
andl
dec
and
ss
inc
pop
les
inc
inc
add
push
nop
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
dec
xchg
cmc
cld
ljmp
test
add
repnz
ljmp
sub
pop
push
test
xchg
adc
xchg
push
icebp
in
or
or
jne
or
jle
inc
sub
and
jmp
dec
cmc
scas
dec
fadds
imul
and
fldt
nop
insl
mov
sub
mov
test
adc
jge
js
test
popa
loopne
loope
addr16
dec
mov
pop
push
push
adc
mov
inc
and
fldl
jns
cs
cmc
mov
inc
pop
push
shrb
es
cmp
mov
adc
xor
dec
pop
jp
mov
gs
mov
xor
cmp
cld
mov
test
leave
dec
std
pop
pop
jne
ret
ds
dec
lret
mul
scas
jns
test
cld
stc
add
mov
inc
fwait
lds
push
sarl
dec
push
aad
movsb
movsl
add
pop
add
add
repz
adc
and
pop
dec
cmp
das
test
ret
jge
adc
shr
fimuls
and
pop
ss
dec
xchg
icebp
jmp
xchg
sbb
nop
jne
dec
icebp
lcall
aaa
mov
mov
stos
enter
mov
mov
pusha
sti
and
mov
out
rcrb
cli
xor
inc
or
mov
push
sbbl
nopl
js
dec
movsl
xchg
mov
add
mov
out
xor
pop
push
pop
ds
jbe
sahf
adc
fs
cwtl
loopne
jno
lock
cmp
jno
ja
xchg
mov
cltd
push
jne
sbb
insb
pop
add
push
adc
inc
or
xchg
nop
shlb
mov
xor
add
dec
cmp
out
xchg
imul
dec
push
adc
dec
add
mov
pop
xor
inc
fnstcw
cmc
pop
jp
mov
cli
in
add
add
add
mov
mov
add
add
test
mov
jns
loop
and
pop
pop
stos
mov
hlt
popa
cmp
lret
cmp
testb
cltd
adc
push
movsb
pop
inc
dec
jge
push
and
adc
push
jle
test
adc
mov
insl
pop
daa
lock
outsb
ret
pop
inc
sahf
int
add
inc
inc
mov
pop
inc
movl
jae
adc
mov
lret
fstl
mov
dec
pop
xchg
push
popa
xor
fildl
push
sbb
mov
cltd
mov
ret
lahf
jecxz
stos
push
sub
mov
ficoms
ljmp
out
xchg
pop
push
mov
mov
insl
lahf
adc
mov
pop
adc
jecxz
fcomps
xor
mov
jo
je
cmpb
into
sub
cmp
dec
mov
lahf
insl
int3
sbb
adc
add
mov
push
sti
jmp
pop
dec
pop
movsb
cli
leave
xlat
das
mov
add
pop
add
add
out
push
xchg
ret
pop
in
jmp
flds
xchg
movsl
in
xor
fs
push
sbb
pop
push
add
push
repnz
mov
call
aam
dec
in
roll
cmpsb
inc
or
shrl
pop
sbb
mov
sbb
rorb
shlb
sahf
dec
push
in
stos
mov
cmp
or
mov
ljmp
repnz
adc
lods
rcl
aas
aas
in
xor
test
adcb
iret
enter
out
movsl
or
nop
inc
xchg
ret
mov
mov
and
mov
push
mov
and
cli
cltd
push
inc
jp
shll
arpl
in
mov
loope
nop
jae
in
mov
sub
pop
stos
xchg
adc
popa
lahf
sbb
cmp
sbbl
inc
pusha
addb
jae
cmp
pop
and
fdivl
jp
mov
add
mov
jecxz
lock
fmuls
lret
add
pop
add
add
orl
jp
mov
jle
sbb
push
xor
test
cmpsl
outsl
xchg
fstpl
scas
fiadds
clc
cmp
and
cmp
sbb
push
pop
pop
mov
xchg
mov
add
rolb
mov
jb
pop
mov
pop
mov
mov
sub
or
inc
jmpw
mov
cmp
push
jo
lret
jmp
inc
or
adc
les
dec
call
jmp
out
scas
outsl
dec
aas
mov
movsl
loop
cmp
mov
lds
xchg
cmp
aaa
mov
sbb
and
insb
adc
xchg
cmp
mov
adc
pop
ret
push
ss
sbb
pop
mov
jmp
push
dec
sarl
push
scas
cwtl
push
aad
jp
or
addb
mov
cld
mov
add
test
add
mov
push
sub
fmuls
sti
pop
dec
push
mov
mov
mov
mov
incl
adc
movsb
sub
imul
test
data16
cmpsb
xchg
movb
pop
mov
jl
sahf
ja
shll
xor
icebp
lods
iret
enter
lret
dec
dec
fmull
xchg
xchg
movsl
pushf
lea
into
jns
mov
push
pusha
clc
fnstenv
cmp
xchg
icebp
das
mov
imul
push
bound
fsubr
nop
iret
xchg
je
or
sub
test
xchg
cmp
xchg
mov
insb
mov
hlt
sbb
rorl
addr16
lds
cmpl
mov
xchg
dec
sub
scas
fcomps
inc
orl
in
dec
adc
push
mov
pop
stos
inc
or
xchg
test
mov
adc
inc
xchg
cmpsl
pop
or
add
mov
dec
das
pop
out
cmc
mov
inc
clc
movsb
arpl
stos
add
pop
add
add
in
shll
imul
icebp
ds
cmp
mov
fcom
mov
and
jae
orb
mov
sub
mov
shlb
pop
or
decb
mov
add
das
push
fistps
aad
loop
mov
inc
adc
fs
bound
mov
icebp
push
or
dec
push
push
dec
lret
in
mov
pop
and
pop
ret
inc
xchg
fildl
ficomps
repz
sub
cmp
and
xchg
lock
jmp
sub
cmc
jne
insb
rolb
in
cmp
push
ret
arpl
pushf
lret
ffree
cmp
std
push
dec
test
push
int
stc
mov
fstps
jae
sub
movsb
push
imul
call
jns
subb
aam
fstpl
mov
sahf
fsubrs
mov
mov
cld
repnz
jo
addr16
lret
inc
test
fucomip
std
dec
std
pop
cmp
cmp
sbb
xor
into
stos
add
pop
add
add
aad
stos
or
faddp
and
cmp
add
cmpl
mov
lods
push
pop
shrb
cli
fwait
pop
push
aam
iret
cmpb
repz
adcb
jl
mov
dec
rcll
or
js
sub
rcrl
stos
mov
cli
enter
cs
cmc
out
test
ret
push
insb
mov
pusha
ret
add
test
cld
dec
hlt
mov
pop
sbb
jl
adc
stos
inc
stc
or
sub
shll
sub
dec
mov
ss
test
jbe
mov
mov
and
dec
sbb
jne
and
mov
xchg
dec
daa
mov
mov
pusha
pop
jo
das
sub
add
mov
add
addr16
test
sbb
hlt
sub
mov
mov
je
test
add
fidivs
loop
ljmp
out
cmp
aad
add
pop
add
add
sub
jg
sti
loop
hlt
stos
lret
cmp
push
adc
std
cmpsl
mov
ss
pop
push
nop
mov
faddl
negl
fimull
and
test
push
inc
lahf
pushl
jge
mov
iret
mov
out
dec
jp
pop
and
adc
xchg
cmp
mov
lret
sub
roll
push
pop
out
xor
pop
lods
pop
cld
shll
cmpsl
sbb
leave
popf
xchg
jno
ja
shll
adc
sbb
ja
adc
jae
test
inc
lahf
fwait
or
xchg
sub
movzbl
daa
adc
dec
addr16
pop
call
and
sbb
or
sub
lahf
cmc
and
mov
jmp
xchg
call
lock
mov
shlb
push
sub
jge
test
frstor
in
ficomps
lahf
loope
shrb
push
xchg
jg
jmp
std
push
int
sbb
lods
add
pop
add
add
in
xchg
hlt
push
add
aam
int
jp
ftst
jge
cs
push
mov
out
das
mov
adc
popf
shrb
in
ja
cs
dec
daa
outsl
cwtl
pop
imul
ret
pop
or
push
mov
lock
pop
dec
xor
jecxz
add
bound
xchg
loop
mov
mov
sbb
mov
flds
mov
out
cmp
add
or
dec
roll
repz
insl
pop
ja
mov
movsl
scas
int
and
cmpsl
sub
cmp
cmc
orl
cld
add
ljmp
psrlq
mov
pop
adc
jbe
mov
jae
aam
addb
push
jns
imul
push
and
rorl
ja
jnp
sub
xchg
push
mov
dec
push
popf
js
aas
fadds
push
divb
dec
sarb
push
dec
int3
or
scas
add
pop
add
add
fldt
sbb
ss
cli
sahf
mov
fstl
push
aaa
enter
std
sbb
push
pop
ja
xor
inc
and
int3
test
fldcw
dec
insb
mov
insb
or
mov
push
cmp
movsl
or
std
lahf
scas
pusha
dec
mov
cmp
add
xor
pop
imul
repnz
int3
mov
add
jns
and
pop
cli
data16
les
shrl
out
lds
inc
inc
in
or
or
imul
xor
xor
shrb
lahf
mov
lea
fmuls
mov
loope
xchg
fnstenv
lods
enter
xchg
add
clc
lods
sbb
pushf
jle
sub
add
fcoml
inc
or
into
bnd
jge
mov
shlb
push
call
das
cmp
cwtl
repnz
aaa
outsb
or
imul
movsl
cwtl
add
push
lds
add
xor
cmp
or
ljmp
add
pop
mov
sbb
push
cmp
jae
je
cmp
repz
mov
sbb
jbe
adc
cs
and
xor
dec
leave
into
idivb
sub
lahf
mov
sbb
rcrl
jcxz
ljmp
addr16
cmp
push
mov
mov
std
mov
ss
outsb
jne
and
jmp
pushf
mov
and
cmp
adcb
in
add
xor
sbb
repnz
push
call
cld
push
ja
cs
negl
loop
or
icebp
xchg
test
adc
sbb
shrl
cmc
roll
adc
sbb
adc
and
adc
xor
iret
dec
push
fcmovbe
xchg
les
loopne
outsl
test
mov
inc
mov
scas
xor
add
nop
mov
es
les
mov
ret
ja
test
mov
add
add
add
lock
sub
hlt
pop
test
push
inc
fcoms
sbb
sbb
loopne
mov
out
out
xlat
sub
into
dec
out
es
push
dec
xchg
js
scas
je
mov
mov
loopne
dec
sbb
or
mov
nop
pop
test
movsl
cmp
push
xchg
nop
inc
les
test
ljmp
xor
call
movsb
push
int3
out
xor
movsl
lsl
inc
sbb
inc
lea
inc
shr
mov
mov
outsb
outsb
xchg
and
and
std
cmp
andl
pop
out
outsb
lds
or
stos
andl
pop
mov
push
loop
adc
mov
mov
roll
out
imul
cmp
pop
inc
pop
in
cmpsl
sbb
std
xchg
mov
adc
and
pusha
lods
rcrl
sub
jge
aam
dec
or
pop
stc
out
push
push
xchg
data16
stos
stos
jnp
clc
mov
add
add
add
cltd
insb
stc
insl
push
inc
in
pop
out
add
jne
add
mov
test
orl
into
push
and
xor
in
pop
xchg
xor
mov
jg
rcll
jle
lock
jl
sub
sub
inc
adc
inc
rol
or
ret
addl
lahf
enter
jo
cmp
inc
mov
add
lds
es
sbb
pop
jo
bound
std
sub
add
sub
ror
and
mov
leave
out
jmp
mov
int
pop
pop
cmp
and
inc
mov
adc
cmp
jge
cmc
xor
xor
into
insl
lcall
mov
pop
mov
cmp
ret
test
repz
push
cltd
xor
cli
scas
and
xor
lock
sub
mov
add
add
push
mov
lcall
test
pushl
add
fmul
faddl
push
faddl
adc
mov
rolb
push
cwtl
sbb
hlt
or
jnp
add
notb
scas
and
or
jmp
stos
enter
pop
mov
sahf
in
stos
jno
fadds
add
idivl
pushl
pop
notb
xchg
das
cmp
gs
scas
mov
dec
and
mov
pop
rcrb
or
sub
and
xor
loope
sbb
es
lods
hlt
inc
dec
leave
mov
jbe
fldl
loopne
or
add
xor
sbb
mov
mov
mov
lock
lock
jmp
pop
cmpsl
mov
notl
mov
movsl
dec
sub
add
aad
push
fisttpl
xlat
sbb
sbb
test
cmp
lods
lods
scas
add
inc
imulb
es
shl
jmp
push
cli
cli
and
and
add
jne
mov
xchg
movsl
jns
jno
loop
mov
add
add
add
push
sub
pop
and
xchg
or
jl
dec
adc
stos
push
cmp
mov
push
sysexit
or
push
inc
lds
mov
mov
jl
pushf
outsl
or
pop
rcll
insb
mov
lods
out
enter
and
sub
sarb
addb
push
jle
dec
je
or
enter
pop
fcoml
xchg
sub
add
subl
shrb
rorb
test
out
ss
aas
hlt
int
dec
push
mov
mov
mov
fwait
shrb
jbe
mov
lret
inc
popa
push
ss
aaa
jnp
pushf
pop
loope
bound
push
call
movsl
in
movsl
mov
leave
ret
cltd
sbb
loop
scas
mov
pop
out
or
inc
in
jp
scas
mov
ja
pop
and
push
and
dec
mov
arpl
or
lds
add
pop
sbbl
cli
test
adc
mov
mov
add
add
add
jae
cmp
fsub
inc
and
pop
mov
and
nop
sub
imul
inc
shll
das
fcoms
inc
fistl
ss
icebp
sti
nop
cwtl
sbb
mov
aam
mov
fdivr
int
push
cmp
jmp
shl
cmpsb
lret
pusha
xor
loopne
xchg
cs
mov
push
sub
aas
pop
add
mov
lock
shll
ret
push
sbb
cs
xchg
xchg
adc
dec
lret
enter
lret
repnz
cmpsl
jle
fucomi
loopne
inc
jo
mov
adc
test
mov
gs
in
or
mov
and
pushl
pop
aas
cld
out
mov
mov
add
insb
mov
popf
push
shr
add
jl
sub
test
in
and
jnp
cmp
sub
std
push
cmp
pop
xchg
incb
loope
mov
jecxz
out
arpl
sbb
xchg
unpcklps
add
and
sbb
pop
test
clc
stos
jb
mov
ret
cmp
xorb
cmpb
jecxz
dec
cwtl
adc
inc
xor
pop
int
outsl
pushf
xchg
sbb
mov
fdivl
mov
push
mov
sub
pop
ds
pushf
add
insl
push
lret
jmp
imul
jle
dec
test
adc
push
cmp
ret
inc
push
push
inc
stos
sub
xchg
xor
mov
fbld
pusha
fwait
xor
sub
mov
cmpsb
sbb
jbe
mov
or
or
sbb
test
pop
xchg
in
xchg
cmp
inc
xchg
inc
mov
lret
jecxz
mov
pop
mov
inc
pop
cmp
mov
cli
push
mov
or
jb
incb
stos
add
push
jb
mov
in
test
je
push
fsubs
add
add
std
test
jg
xor
stos
dec
or
sbb
add
out
and
or
imul
dec
add
cli
sub
pop
pushl
cld
sbb
pop
mov
inc
mov
add
out
bound
pop
je
ss
ds
ss
push
arpl
mov
aas
das
ffreep
sub
xlat
mov
cmp
inc
test
mov
adc
push
out
adc
mov
xchg
in
adc
mov
pop
lret
cmp
pop
jo
fsubrl
xchg
sbb
inc
jbe
mov
dec
stc
xor
fldenv
adc
jecxz
and
xchg
pop
jle
cmp
mov
cmc
iret
lret
movsb
mov
add
inc
insl
lret
es
mov
rorl
rorb
adc
fbld
and
or
test
pop
jle
mov
adc
push
dec
add
add
add
adc
in
lcall
xor
fs
mov
lcall
add
push
popf
lods
insl
std
outsb
jge
add
out
push
and
aam
scas
lret
rcrl
shr
cmp
jl
xchg
stc
shll
xchg
or
mov
pop
mov
ljmp
pop
and
adc
sub
popa
pop
fldl
jge
or
and
xchg
out
int
or
adc
out
inc
test
pushf
lahf
gs
lahf
push
pop
sbb
sarb
sbbb
push
push
cmp
inc
jo
movsl
and
dec
adcl
or
decb
lcall
mov
xchg
gs
push
push
push
jge
mov
sbb
jmp
je
lahf
or
mov
ret
dec
es
and
pop
pushf
or
mov
movsb
xor
mov
add
push
shll
divl
and
mov
in
cmp
lret
ret
dec
or
jg
adc
outsl
xlat
dec
mov
shrb
mov
add
fwait
cld
mov
or
xor
mov
ja
or
sub
mov
repz
movsl
aad
dec
xchg
dec
mov
out
ret
and
test
test
icebp
mov
jo
adc
dec
aaa
jle
sar
cmp
outsl
push
test
mov
movsb
lret
popa
jae
mov
filds
mov
mov
imul
je
aas
cmp
test
scas
cmpsl
jno
jge
push
repz
jae
decl
out
xchg
or
ds
inc
int
inc
dec
pop
or
jb
sbbl
ficoms
paddsb
push
add
push
fldt
fnstcw
sbb
adc
adc
movsb
js
xchg
jmp
jne
xchg
fs
addl
jns
mov
lahf
push
mov
in
sbb
xchg
mov
insl
sbb
outsl
mov
movsb
ret
xor
add
jae
pop
into
lods
cli
int
out
push
pop
ja
pop
mov
popf
out
and
push
add
lret
or
xchg
int3
xchg
mov
mov
mov
lds
inc
inc
stos
mov
mov
mov
and
sub
js
jo
fstl
or
in
and
adc
cmp
inc
add
mov
fidivl
pop
imul
test
xor
fldenv
xor
push
iret
pop
je
xchg
lods
mov
ret
mov
add
pop
and
ljmp
and
xlat
rorl
jo
jp
cld
cli
mov
cltd
loopne
cmpsb
out
iret
mov
loop
stc
pop
fnstcw
ret
sbb
int
rcl
mov
pop
lods
addl
nop
cli
mov
mov
sbb
push
data16
xchg
xor
lret
arpl
and
das
mov
xor
clc
dec
ret
mov
add
xor
mov
xsaveopt
add
pop
add
add
mov
aad
push
mov
mov
outsb
ret
cmp
out
xchg
mov
test
jmp
sbb
pop
aad
adc
in
aam
jle
adc
xsaves
mov
jle
jmp
push
or
mov
pop
movsl
and
mov
aam
cmp
push
sub
addr16
in
and
adc
ds
mov
mov
sub
xchg
fbld
lret
rclb
jnp
sbb
jnp
add
xchg
push
sbb
jbe
or
arpl
rolb
mov
push
call
pop
inc
subb
mov
sahf
jl
adc
dec
imul
in
xchg
cmp
mov
cmpxchg8b
iret
sahf
cltd
dec
lret
xor
and
sub
das
insl
sbb
xchg
loopne
aam
mov
fmuls
mov
loopne
stc
add
fistpll
call
push
mov
add
pop
add
add
sahf
push
fstpl
dec
es
imul
xchg
xor
cmp
and
scas
in
cmpsl
cmp
dec
mov
out
loopne
and
dec
jg
aas
icebp
push
test
aaa
pop
jb
cmp
loope
mov
cmc
and
push
mov
sbb
addl
insb
cmpsl
push
fstl
adc
jge
pop
addr16
dec
push
push
lea
aaa
mov
loopne
jg
lods
mov
sbb
rolb
jae
lods
fstl
mov
out
fs
pop
sarb
lea
addr16
lods
and
mov
push
ret
stos
jge
imul
repnz
inc
in
das
push
add
adc
cli
mov
push
add
mov
xor
jb
lods
adc
stc
repz
out
or
lods
xchg
andl
mov
clc
pusha
mov
mov
add
std
sti
leave
sti
iret
jmp
dec
mov
cmp
add
pop
add
add
popa
daa
and
into
add
dec
jb
push
mov
dec
add
push
cmp
cmp
push
mov
lds
inc
loopne
rclb
jo
mov
leave
enter
mov
fldcw
int
loop
cld
xchg
xchg
and
cmc
popa
daa
leave
adc
gs
jmp
lods
fsubr
leave
bound
pop
movb
into
lret
dec
icebp
outsl
scas
jo
jge
mov
dec
sub
mov
pop
add
mov
cmovb
mov
cmpsb
stos
orb
push
scas
es
jb
pusha
scas
xor
mov
or
cmp
jno
mov
orb
por
sahf
pop
shlb
pop
adc
cmp
lods
mov
xchg
mov
and
xor
pop
cli
int3
je
andl
sar
xchg
cmp
xor
push
adc
roll
add
mov
xchg
pop
loopne
xor
dec
mov
add
mov
pop
cs
add
shlb
mov
xor
sub
hlt
inc
hlt
jns
add
test
iret
sub
mov
inc
int3
sbb
pusha
comiss
ljmp
test
adc
jno
cs
cmpsl
jp,pn
jg
pop
out
daa
mov
mov
xor
shl
fxch
inc
xchg
mov
hlt
lods
loope
mov
sub
outsl
movsb
das
push
add
jbe
mov
inc
adc
cld
inc
push
iret
outsb
lods
push
jnp
mov
jl
xor
lock
mov
jnp
xchg
insl
mov
bound
mov
push
popf
xchg
xorl
aaa
aad
adc
push
outsl
int
incl
pop
mov
inc
inc
dec
fmuls
or
pop
imul
fisubs
in
mov
lret
add
or
xchg
mov
xchg
repnz
xchg
int3
popa
leave
add
sbb
clc
je
add
jg
mov
xor
sub
push
mov
add
xor
add
adc
xchg
xor
mov
rcrl
lahf
in
add
idivl
pop
das
mov
push
movsl
mov
lret
push
outsl
int
negb
stos
push
xor
jle
stos
fs
xor
jae
cmp
sti
std
jecxz
add
jmp
popa
addb
cmp
pop
stc
iret
xchg
in
xchg
es
outsb
pushf
mov
cld
adc
imul
pop
add
mov
and
mov
and
jg
cmp
sub
mov
int3
scas
rol
jg
adc
ss
and
lgs
pop
notb
hlt
sub
shll
cmp
jbe
xor
fnstenv
pop
fldl
or
sahf
ret
loop
getsec
roll
cwtl
add
shll
stos
push
out
psrad
sbb
sub
inc
mov
add
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
push
dec
push
xchg
sub
ljmp
std
fdiv
sti
out
push
call
mov
mov
pushf
fcom
or
insb
add
ret
and
cmc
cmp
pusha
nop
adc
dec
inc
mov
xchg
insl
jns
and
popf
sbb
out
pop
arpl
sbb
iret
cmp
aas
dec
xor
sbb
pop
jge
xchg
xlat
stos
adc
xor
pop
movsl
mov
cmp
pop
imul
scas
dec
pop
out
movsb
addr16
call
xor
mov
icebp
push
ljmp
inc
mov
and
adc
push
mov
jo
mov
sub
jns
xor
out
xor
movd
push
shufps
imul
mov
aam
xchg
lods
sub
test
test
mov
push
aad
mov
push
jp
xor
cwtl
pop
mov
aaa
xor
iret
mov
or
ss
arpl
xlat
pushf
shrb
xchg
mov
inc
popa
roll
pop
add
add
dec
mov
aam
outsl
mov
adc
push
xor
and
xlat
decb
repz
cmp
sahf
sti
in
out
outsb
mov
jl
outsl
mov
cltd
leave
out
lds
idivb
jge
pop
imul
in
std
je
aad
sub
xchg
fldl
sbb
adc
adcl
repz
xor
dec
call
xchg
and
mov
adc
pop
xchg
mov
xor
adcb
cwtl
mov
dec
or
jae
aaa
fucom
lahf
lahf
lock
or
clc
popf
pcmpgtb
out
scas
inc
xchg
out
push
and
imul
push
xor
scas
int3
mov
add
push
xchg
inc
inc
mov
dec
and
ss
push
inc
sbb
hlt
rcrb
sub
outsb
fstpt
push
mov
adc
loope
aad
or
les
xor
and
add
test
mov
fucomip
imul
add
add
retw
test
cli
dec
add
dec
int
xor
jg
data16
loopne
imul
mov
mov
das
fildll
mov
mov
jb
mov
fisttpll
push
jmp
loop
push
call
sub
outsb
ljmp
addb
sub
movsl
xor
pop
push
call
test
cmp
int
xor
faddl
push
pop
decl
stos
into
sub
cmpsl
fsubr
mov
add
cmpsl
or
dec
mov
lods
lea
rcrl
sarl
push
fsubl
call
int3
repnz
addr16
mov
xchg
fcomps
in
int3
lret
jg
sti
lods
add
inc
jl
pusha
mov
xchg
shlb
fstps
sub
sub
adc
jmp
and
pop
shll
subl
nop
addl
jg
jne
jne
jg
loop,pt
lret
lock
outsl
ret
add
pop
add
add
xor
or
sar
iret
inc
sbb
ficoml
and
xchg
shlb
or
lods
add
adc
hlt
xor
pop
mov
insl
cmp
or
popf
inc
sbb
cmp
mov
sahf
shr
inc
repz
popf
ss
mov
push
and
pop
dec
ret
dec
rorb
mov
mov
or
cmc
sbb
jno
lret
pop
aam
or
push
adc
sbb
jb
add
push
and
repnz
sub
fdivrs
pop
mov
out
jno
add
sbb
outsl
mov
insb
aas
jns
or
das
cltd
prefetch
inc
filds
xchg
cmp
xchg
jb
sub
xor
test
push
mov
lret
inc
and
sahf
jp
add
xchg
pop
pop
std
sbb
rcrb
shrl
mov
mov
cmp
sbb
stos
and
add
out
inc
sbb
iret
cmp
add
sbb
ret
sbb
mov
mov
dec
add
into
xchg
jg
les
add
add
add
mov
push
fiaddl
mov
fs
mov
jnp
aas
sbb
mov
lock
lods
mov
mov
das
cltd
xor
mov
ja
inc
or
jnp
cmp
mov
or
sbb
scas
daa
jge
out
mov
cli
xor
mov
add
jg
pop
cld
push
insl
pop
lods
fcmovu
lret
jne
mov
and
movsb
adc
sbbl
cmp
shrl
cmp
push
mov
rclb
ret
xchg
mov
lock
xchg
push
xlat
mov
mov
sub
call
or
jno
sub
cmp
mul
mov
fmulp
xchg
fisttpll
inc
shlb
imul
fisubrl
push
nop
cmp
or
cmp
mov
mov
repnz
mov
xor
xor
sti
jne
scas
in
es
jbe
test
ret
add
add
outsb
jle
lods
testl
inc
outsl
mov
pop
add
add
lret
inc
in
mov
pushf
mov
movsb
pop
cmp
and
sub
mov
cmp
loope
add
adc
imull
xor
mov
mov
cmp
stc
fldt
adc
bsr
mov
sti
push
or
xor
loope
dec
or
popa
pop
push
loop
mov
push
loopne
jmp
dec
xchg
jns
cmpsb
adc
dec
jecxz
cld
imul
jp
dec
test
rcll
popa
mov
loopne
test
je
inc
int3
jo
push
inc
xor
inc
and
xchg
into
insl
push
nop
mov
outsb
out
addb
in
fistpl
pushf
mov
sub
fldcw
ret
xor
mov
loope
pop
psubusw
mov
push
daa
aad
xor
pop
sahf
jle
orl
cmpsl
lret
sub
jl
fcompl
mov
add
enter
jp
out
aam
inc
sbbb
mov
mov
jp
arpl
fldz
push
jae
movb
pop
add
add
rcrl
sbb
and
cmp
sarb
aas
mov
cli
int3
or
dec
setne
lds
inc
push
mov
pop
mov
mov
lahf
bound
movsb
insb
mov
and
jne
fincstp
dec
mov
pop
lea
xor
sub
xchg
shl
pop
mov
xchg
test
xchg
inc
push
pop
outsw
jmp
imul
push
lods
rcll
lock
call
test
push
mov
into
enter
add
dec
mov
mov
adc
push
cmp
mov
cwtl
insb
pop
mov
gs
jecxz
cmp
sub
jp
stos
cmp
mov
cmc
push
nop
jne
mov
sub
sbb
lea
xor
inc
inc
sar
pop
je
test
sbb
xlat
push
aam
or
movl
add
adc
dec
je
testl
dec
cmp
in
test
mov
lcall
jp
pop
jae
sbb
adc
mov
stos
pop
addr16
addr16
movsb
xchg
sub
ret
das
js
mov
sbb
mov
fadd
push
into
loop
dec
outsb
sti
aam
dec
out
jno
add
push
popa
addl
stc
pop
inc
pushf
cli
dec
inc
mov
jae
into
jbe
jp
cs
outsb
stc
cwtl
movsb
je
push
shrb
daa
mov
jmp
push
xor
sub
xorb
mov
ret
fnsave
pop
push
xchg
inc
pop
mov
orl
out
inc
jmp
and
popa
stc
aas
aam
sub
xor
call
push
sbb
xchg
in
test
test
add
inc
adc
ds
sub
cmp
jg
dec
das
pop
mov
push
mov
pop
add
add
mov
lcall
js
jne
dec
pop
xor
lret
outsb
mov
push
lea
mov
daa
fwait
and
pop
into
je
les
push
idivl
into
shll
xchg
push
xor
ffree
dec
or
ss
shrb
dec
cwtl
pop
scas
fidivrs
pop
or
add
mov
stos
std
mov
mov
and
repz
lods
int
out
cmp
mov
jp
adc
popa
out
aam
inc
out
inc
stc
cmc
push
repz
mov
fs
add
repnz
and
in
cmpsb
imul
outsb
inc
cltd
cmpsl
lods
notb
adc
xor
dec
cmp
rcrb
inc
inc
pop
push
xchg
jne
xchg
mov
cmp
mov
in
out
int3
cli
mov
test
cmpsl
dec
and
subl
mov
dec
inc
pop
fstpl
dec
adc
push
jb
xor
popf
add
xor
fistpll
out
repz
mov
add
add
add
int
add
sahf
jmp
and
xor
mov
outsl
push
adc
adc
inc
std
jae
shrb
sbb
repnz
mov
mov
popf
into
mov
inc
leave
ret
cmp
loopne
push
mov
push
sbb
clc
repnz
in
jp
hlt
mov
ss
lret
push
jbe
int3
and
mov
fsts
add
and
mov
es
jo
lret
sahf
cmp
fbld
jae
shrl
jne
cmp
and
dec
repnz
pusha
rolb
bound
call
sbb
gs
and
xor
aas
je
inc
lcall
mov
or
mov
jmp
nop
jge
sub
sub
js
sbb
and
sbb
arpl
push
pusha
pop
xrelease
mov
inc
push
rorb
jae
fwait
leave
fs
add
add
mov
and
lret
pop
add
add
inc
mov
or
in
push
adcb
subb
mov
mov
icebp
int3
or
dec
call
lahf
mov
jle
push
sbbl
lcall
or
lods
sarb
cmp
sub
imul
fiaddl
jns
inc
cld
mov
ret
int3
aam
insb
fucomp
les
test
mov
mov
cmpsl
test
jle
ret
cmpsb
gs
mov
xor
rorl
cmpsb
and
je
popl
dec
mov
aaa
and
es
dec
jne
push
dec
pop
xchg
mov
iret
push
xor
cmp
xor
divl
stos
enter
mov
scas
pop
data16
lcall
inc
iret
push
mov
rcrl
cmp
push
sbb
pop
xchg
fwait
sub
in
imul
aam
jnp
pop
stc
mov
rorl
mov
stc
enter
in
adcl
cmpsl
lret
add
pop
add
add
add
xchg
arpl
out
jmp
in
and
lods
mov
pop
scas
xchg
push
scas
push
jecxz
add
mov
jb
movsl
xor
lea
mov
pop
push
push
pop
dec
push
cs
xlat
pop
clc
push
inc
lret
inc
mov
or
mov
push
ret
les
and
dec
es
dec
bound
pop
or
and
mov
adc
mov
roll
mov
dec
ja
fisubs
xor
test
sub
push
mov
lds
addr16
xor
mov
lods
icebp
aad
sub
mov
xor
xchg
loopne
pop
aas
pop
cmpsl
repz
sub
inc
into
ljmp
call
gs
mov
push
sub
sbb
in
sbb
stc
dec
and
or
adc
jb
sarb
jne
cmp
jge
mov
pop
cmc
jb
and
inc
jns
add
imul
cmc
decl
push
test
add
add
incl
mov
inc
fwait
jnp
lahf
out
sbb
mov
inc
mov
test
sub
cmp
or
ror
pop
out
mov
mov
jne
inc
adc
sti
test
adc
inc
xchg
das
xor
idivb
outsl
lahf
test
dec
cmp
adc
sbb
ds
cmpsl
ret
aaa
jl
or
stos
aam
jnp
outsb
mov
inc
in
fs
xor
ss
movsl
mov
repz
jbe
stc
mov
inc
push
jmp
cmp
or
test
lcall
cmp
shrl
rep
xchg
add
push
std
hlt
arpl
in
sbb
pop
mov
inc
push
aam
mov
fmulp
inc
ss
loope
jp
je
sbb
repnz
pop
mov
leave
or
inc
pop
scas
add
inc
hlt
es
sahf
adc
xor
jnp
std
add
mov
insl
scas
rcll
mov
jecxz
in
movsl
mov
iret
arpl
or
aaa
push
sub
add
add
xor
add
and
push
gs
pop
in
push
jl
lock
cmpsl
scas
stos
cmp
xor
out
jle
sahf
cli
ret
pop
push
jmp
push
cltd
lds
mull
push
sub
pop
fstps
iret
jge
xchg
stos
or
cmp
in
pop
lds
rolb
scas
cmp
dec
sub
fwait
xorl
scas
leave
inc
cmp
ja
add
fsts
mov
je
push
xorl
adc
call
fsts
jns
inc
cmp
lcall
xchg
cmp
out
adc
add
push
cltd
ficoms
pop
mov
mov
lods
jne
fidivrl
sub
out
pop
and
xchg
lret
dec
out
cmpsl
jl
adcl
lock
dec
aad
xlat
pop
lods
push
xor
jns
dec
pop
sub
add
add
out
into
shlb
or
add
pop
add
add
test
out
adc
mov
vminsd
enter
stc
in
cltd
movb
ret
inc
leave
pop
mov
dec
mov
negl
jb
push
push
int3
cmpsl
inc
daa
adc
jo
sbb
pop
mov
fldt
lods
mov
fsts
fmul
fcoml
movsl
popa
prefetchnta
xchg
pop
test
je
out
cmpsl
inc
loope
pop
fwait
loop
aas
lock
adc
jmp
push
hlt
add
jo
jge
insb
insb
push
jae
aad
xor
test
les
addr16
fwait
fmuls
inc
lret
clc
test
aad
out
inc
mov
ljmp
adc
mov
xchg
js
mov
mov
pop
push
fs
pusha
dec
mov
popf
mov
jb
inc
int3
out
cmp
in
push
aam
mov
dec
sbb
sub
lods
sti
cwtl
inc
mov
imul
shlb
jns
mov
inc
mov
movsb
pop
cmc
mov
sub
loopne
and
je
out
mov
pop
ret
sub
ret
iret
add
pop
add
add
mov
lcall
outsl
adc
enter
mov
mov
clc
rorl
jb
xor
jbe
add
pop
ss
mov
fmul
lea
lret
xchg
loope
xchg
arpl
and
lds
push
cmpsb
mov
xor
scas
fistpll
dec
std
lahf
frstor
cmpsb
pop
rolb
push
pop
push
xchg
loop
push
dec
xchg
les
push
mov
jne
push
test
shl
mov
out
jmp
inc
hlt
pop
or
ret
iret
or
sbb
add
mov
stos
loopne
lock
call
mov
popa
mov
pop
push
cli
mov
pop
je
movsb
pusha
mov
xchg
mov
pop
adc
in
add
insl
int3
sbb
adc
push
mov
pop
mov
jp
pextrw
mov
or
mov
sub
fwait
mov
push
cwtl
xchg
icebp
outsl
add
dec
daa
dec
das
outsb
imul
sub
pusha
mull
rolb
add
add
add
cmp
decb
mov
imul
xchg
insb
pop
mov
jne
int3
int
dec
sti
adc
sbbb
lds
dec
ja
jno
mov
sub
stos
pop
aad
push
or
xchg
lds
sub
std
repnz
push
lahf
add
cmc
pop
xchg
xchg
lds
pushf
imul
outsl
pop
mov
dec
inc
mov
mov
and
xorl
xchg
inc
sti
insl
pop
aas
nop
push
add
xlat
scas
aad
sahf
mov
test
jmp
push
add
jg
push
mov
insl
int
or
mov
lods
insl
cmc
fdivrl
bound
xor
scas
sub
stos
xchg
adc
fs
mov
and
ret
mov
es
pop
addl
call
pop
pop
dec
cmp
stos
mov
aad
push
adc
xor
dec
imul
insb
add
insl
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
xchg
imul
cli
adc
lret
xor
out
pop
aam
xchg
lcall
lock
div
and
test
imul
incl
push
dec
jle
das
cli
outsb
cmc
fimull
inc
inc
ss
mov
shlb
mov
bound
xor
sahf
pop
and
xor
sub
loop
push
jnp
mov
or
aad
mov
adc
lods
dec
jne
cli
or
lock
ret
sarl
dec
xchg
test
aad
inc
mov
xchg
pushf
xchg
lcall
lock
xchg
lea
or
xchg
jne
bound
push
add
mov
sub
or
idiv
lods
dec
sbb
and
shrb
xor
sub
hlt
cmpsl
xchg
mov
nop
outsl
sub
dec
xchg
mov
loope
pop
add
neg
outsl
xor
fldl2e
mov
add
add
add
add
rcll
mov
ljmp
mov
mov
ret
mov
cmp
lds
sub
aad
mov
pusha
mov
mov
fmull
push
sbb
jbe
ds
sarb
jmp
sbb
xchg
movsl
push
repz
insb
in
das
xchg
fsubr
mov
sub
aaa
in
dec
insl
icebp
push
insl
movsb
out
or
sub
movsb
xor
out
imul
int
js
arpl
lods
pop
add
lahf
mov
cld
shr
aas
pop
push
and
fmull
xchg
sahf
sti
xor
mov
sarl
stc
sub
add
cmp
sbb
stos
sbb
xchg
lahf
jp
push
sahf
push
mov
sbb
inc
push
js
repz
loop
add
jns
test
push
loop
push
loope
xchg
test
test
testl
xor
add
sbb
in
and
and
add
pop
add
add
mov
cwtl
push
adc
outsl
and
inc
in
pop
jmp
leave
dec
stos
fwait
xor
loopne
imul
xor
out
mov
jb
scas
xchg
sub
insl
insl
add
xchg
fistpl
fisttpll
scas
mov
bound
jg
cmp
xor
addr16
dec
ja
sbbl
loop
jmp
jmp
or
inc
scas
xchg
pushf
pop
cmp
inc
or
out
cmp
sahf
add
dec
fcoms
leave
xchg
lods
insb
lods
xchg
mov
adc
cmp
movsb
pop
out
adc
pop
leave
stos
iret
loope
mov
and
stos
das
jecxz
xchg
mov
add
lock
repz
push
mov
ret
testl
outsb
cmp
enter
pop
jb
or
xchg
jp
and
repnz
sbb
imul
sbb
mov
push
dec
cmp
in
pop
dec
add
ds
stc
call
aam
add
add
add
imul
push
popf
sti
mov
pop
cmp
push
es
movsb
adc
mov
inc
data16
cld
sti
popa
mov
push
fdivp
or
fwait
dec
pop
fistps
xor
test
xrelease
mov
movsb
into
jge
mov
repz
or
mov
addr16
nop
xchg
jge
push
addr16
xchg
push
add
pop
jmp
mov
ret
out
pop
pusha
lock
or
push
lret
fisubrl
call
outsl
sti
loopne
pusha
pop
stos
and
cmpsb
leave
bt
stos
loop
pop
orb
sbb
jp
xor
sub
pusha
push
insl
and
dec
push
and
mov
xor
dec
icebp
into
ss
loopne
and
into
ret
xlat
aad
lock
sub
aas
out
mov
xor
test
pop
sub
leave
mov
xchg
and
xor
xchg
and
idiv
lahf
insl
jae
fcmovnu
pop
xchg
cmovno
aad
add
add
add
pop
out
and
nop
adc
ret
dec
adc
push
inc
mov
sub
add
mov
jnp
mov
mov
scas
imul
fldt
dec
xor
and
fmul
loopne
cmp
mov
and
nop
sarl
pusha
repnz
data16
pop
sbb
xchg
insl
mov
lret
repnz
mov
jo
cmpsb
inc
mov
aas
jns
filds
push
fxch
fwait
les
xor
sub
adc
or
xor
das
pushf
and
inc
scas
rcl
outsl
sbb
push
and
push
pop
inc
xor
jge
jne
fbstp
sti
push
setle
dec
add
push
push
jo
add
mov
jl,pt
stos
hlt
shlb
or
pop
jbe
push
inc
cmp
jnp
cmpl
dec
lds
shl
fbstp
mov
call
fistl
add
cmp
jg
xchg
mov
add
hlt
add
pop
add
add
shrb
hlt
inc
cmp
sub
cwtl
add
sbbl
leave
push
loop
test
lea
mov
jae
xchg
sub
cwtl
mov
repnz
in
ret
jbe
lods
and
fidivl
arpl
cmp
fiaddl
push
std
into
add
jmp
fs
push
mov
mov
mov
push
and
pop
cmp
addr16
sub
add
push
loopne
cli
icebp
sub
adc
bound
bound
sbbl
mov
movsl
xchg
push
mov
rorb
ror
cmc
xor
xchg
repnz
jno
mov
iret
dec
xchg
fmuls
push
repnz
adc
lea
and
les
ficomps
mov
xchg
xor
mov
insb
and
dec
pop
push
and
xchg
fistpll
enter
fidivl
mov
movsb
cmp
adc
mov
xchg
rcrb
or
insb
fs
jne
ja
adc
imul
cld
push
inc
mov
add
pop
add
add
xchg
cmp
pop
dec
mov
cmp
shll
incb
addb
loopne
jb
inc
xchg
push
int
jnp
cmc
add
in
xchg
leave
int
pusha
daa
mov
imul
in
std
push
out
xor
divl
or
mov
aad
xor
mov
jbe
in
imul
out
shll
push
mov
inc
icebp
outsb
and
or
and
loope
dec
in
and
jbe
stos
or
cmp
stos
icebp
and
imul
mov
or
in
lret
xchg
hlt
mov
fwait
cmp
loope
sub
scas
adc
loope
and
dec
mov
lahf
es
add
gs
out
shlb
paddusb
mov
loop
stc
push
lds
cli
cs
cmpsl
into
les
jb
pop
and
add
psubusw
push
adc
xchg
sbb
stos
push
jg
flds
add
add
add
sbb
inc
es
push
xchg
mov
in
andps
pop
ret
out
movb
stos
push
push
lret
loop
xchg
pop
dec
fdivrl
int
sarl
pop
div
pop
cmp
xchg
paddd
das
addr16
cmpsl
icebp
outsl
in
lahf
jle
fmuls
mov
sub
mov
roll
ss
and
mov
fbld
dec
ret
fs
mov
push
stos
pop
scas
out
push
inc
fadd
xor
sbb
cmp
insb
dec
out
rcrb
ffree
inc
or
pop
xchg
mov
fsubl
mov
jae
sbb
sbb
fisttpl
cmp
lret
lods
inc
xchg
push
sub
xchg
lea
cmc
mov
pusha
in
jle
mov
rcrb
js
hlt
push
in
mov
xor
mov
cli
cs
push
or
mov
inc
push
js
cltd
jg
insb
add
sbb
sahf
cmc
fsubrp
jnp
push
xor
out
addr16
or
add
pop
add
add
pop
mov
in
sbb
mov
xchg
stc
push
mov
loopne
add
push
add
cmp
mov
mov
pop
or
loopne
sub
aaa
ret
pop
leave
test
adcl
mov
xchg
cmpl
js
adc
jge
xor
pop
xor
out
adc
jno
add
mov
pop
nop
aad
cmpsb
mov
mov
sub
popa
out
pop
or
outsl
cmpsl
lds
xchg
loop
arpl
fwait
inc
dec
out
add
int
mov
lea
lret
xchg
adc
add
and
mov
nop
mov
mov
mov
push
lock
add
pop
jp
push
repz
xchg
sbb
xor
mov
push
and
sub
dec
jns
rcl
mov
dec
js
dec
pop
cld
ret
pop
clc
pop
xchg
cmpsb
mov
js
pop
mov
fcomi
add
jle
jg
std
fisttpl
inc
push
jo
sahf
int3
adc
add
pop
add
add
or
mov
icebp
xchg
xchg
out
fldt
filds
out
add
int
lods
add
cmpsl
and
mov
xchg
pop
adc
or
dec
lds
fucom
dec
stos
icebp
std
movsb
ficompl
pop
ss
leave
push
daa
js
xchg
jmp
jge
loopne
push
lea
pop
mov
addl
test
daa
scas
and
int3
ds
inc
xor
pop
jle
fisttpll
out
jb
gs
das
jb
aam
stos
int
es
sub
push
pop
mov
xchg
sub
cmp
push
inc
cmp
repnz
pop
pop
addl
pushf
and
subb
mov
mov
or
cltd
mov
or
dec
and
int
in
fs
mov
ja
inc
sub
dec
ja
sbb
into
push
je
push
sub
cmpl
push
repnz
bound
add
add
mov
sti
idiv
lods
push
mov
inc
or
faddl
add
add
add
xchg
outsl
dec
movsl
aad
fnstcw
push
sbb
in
xchg
xor
xor
cmp
jp
push
mov
dec
in
jle
stos
in
fwait
pop
xchg
inc
add
adc
fimuls
outsb
cmc
xchg
mov
lds
xchg
cmp
out
imul
shl
adc
ror
push
pop
or
inc
pop
iret
lret
fisttpll
adc
addb
insl
dec
xor
test
sbb
and
loopne
jle
xchg
int
test
mov
or
sbb
mov
jp
ss
cmp
or
xchg
mov
test
dec
push
mov
pop
mov
sahf
push
fiadds
cmp
jle
push
mov
je
cmp
rol
sub
or
scas
das
pop
std
xchg
ja
addr16
in
mov
push
lods
push
jnp
pop
nop
mov
loopne
jb
push
mov
mov
adc
xor
outsb
cwtl
js
adc
leave
jmp
addr16
sub
mov
pop
add
add
and
mov
or
jo
lds
ss
sbb
jo
imul
cli
mov
and
in
js
jns
and
cld
xchg
or
stc
shr
mov
xchg
ljmp
stos
add
mov
jb
sub
lret
test
icebp
push
xor
out
pop
push
pop
cs
xor
sahf
int3
fsub
push
pop
mov
xchg
int3
dec
stc
in
inc
sti
push
xchg
jnp
lock
jge
or
cs
pop
sbb
mov
bsf
fisubrs
xchg
shrb
sbb
ss
add
sar
aam
cli
pop
nop
idivb
jle
mov
imul
rorb
lea
rcrl
or
int
xchg
add
mov
int3
pop
mov
cmp
fs
or
cld
push
mov
xchg
or
inc
add
cmpsl
fimull
jb
shrl
and
add
add
inc
test
cli
into
in
xor
xchg
jp
push
jae
jbe
lods
js
adc
fs
inc
mov
mov
std
dec
sbb
mov
ss
sub
xor
and
scas
loopne
ss
xlat
call
xor
ret
lds
xchg
vpsubusb
pushf
ds
ret
push
jge
adc
arpl
xchg
jmp
pop
test
test
push
xchg
sub
and
inc
pop
or
inc
jbe
mov
insb
scas
or
int3
adc
lret
stc
pop
shrl
arpl
rorb
or
test
xchg
loopne
xchg
dec
rol
aaa
addl
adc
lret
dec
jo
test
add
lds
js
rorb
cmp
in
ret
inc
sarb
push
cltd
insb
shlb
add
pusha
ficomps
jns
loopne
div
orb
jg
mov
lcall
iret
mov
stc
jmp
lcall
add
add
and
mov
sbb
psubb
stos
mov
fwait
jg
sbb
test
pop
push
fsubs
mov
jae
loope
aad
stc
das
push
pop
xchg
lods
movsl
xchg
ljmp
popa
cmpl
sbb
jb
jnp
aad
popf
jo
in
arpl
negl
xchg
cmc
mov
xor
pop
pop
not
insb
inc
jl
in
add
flds
sbb
adc
xchg
adc
fstpt
sbb
repz
push
or
hlt
jo
sub
ror
pop
xor
sbb
mov
xor
ffreep
in
and
add
sub
les
aam
icebp
cmpsb
xor
and
mov
ds
mov
das
mov
inc
pop
imul
test
xor
mov
hlt
jl
stc
clc
sub
cs
adc
shll
fcoml
add
sbb
jns
in
out
inc
mov
pop
add
add
pop
jnp
ljmp
fistps
div
adc
dec
insl
stc
sub
fsubl
std
jne
jno
mov
insl
xor
jo
sbb
jp
or
movsb
shlb
cmp
out
jle
sahf
pop
jnp
sub
cmpsl
inc
mov
jnp
test
mov
or
push
cmp
add
push
or
popf
jecxz
es
js
and
mov
jns
inc
add
popf
add
cmc
scas
into
mov
mov
mov
inc
pop
enter
inc
mov
pop
jle
mov
sub
jnp
push
test
sub
enter
and
mov
out
imul
out
sub
or
pop
ja
or
xchg
cs
jo
nop
cmp
daa
mov
or
sub
cmpsb
data16
shll
add
fadd
fsubp
jnp
mov
push
and
loope
add
add
add
mov
and
ds
jno
cmc
cwtl
leave
or
test
mov
sbb
ds
mov
out
test
cmpsl
jb
out
lods
mov
movsl
orps
lods
ffreep
lcall
ret
jno
pop
enter
jecxz
adc
mov
push
mov
aas
sub
enter
out
in
push
mov
js
outsb
daa
push
xchg
pop
movsb
repnz
inc
adc
sar
ret
and
xchg
pop
mov
push
xor
sbb
stc
sub
sbb
lea
xor
adc
push
cmp
repz
imul
fistl
xchg
add
cmp
in
imul
mov
jge
lock
cli
adcl
pop
daa
cmp
adc
push
std
fstps
call
sbb
inc
inc
lock
push
mov
iret
and
dec
ret
lock
push
cmp
sub
cld
cli
jle
fmuls
dec
cmpsl
add
inc
loop
add
add
add
push
mov
ret
push
inc
dec
xchg
xor
pop
pop
xchg
sbb
jno
and
mov
adc
test
pop
andb
and
jnp
out
xor
mov
in
lods
lret
sub
arpl
push
int
leave
dec
or
lods
addr16
mov
push
aad
sahf
test
jecxz
test
mov
loopne,pt
icebp
cmp
clc
jno
cmp
mov
icebp
jg
or
pop
jecxz
divb
or
popf
fadds
shr
in
cmp
jns
cmp
cli
lds
inc
fldl
sbb
sbb
inc
or
stos
dec
and
into
icebp
insl
push
sbbl
fwait
add
gs
dec
inc
push
int
arpl
mov
add
dec
popf
push
adc
pop
or
jge
lds
dec
ret
lods
cmpsb
jns
sub
xchg
xchg
xchg
movsb
pcmpgtb
add
add
ja
sti
ret
or
pop
and
inc
dec
jecxz
add
add
add
xchg
adc
mov
xor
lret
mov
outsl
fdivs
out
jns
xchg
sub
dec
jbe
scas
lcall
mov
cmp
out
pushf
imul
sub
cmpb
cmp
aam
add
clc
scas
pop
jne
bswap
repz
add
imull
jp
mov
ret
jae
xor
popf
les
arpl
bound
insb
movsl
push
or
sti
out
sbb
lahf
mov
es
pop
sub
cmpsl
xor
inc
out
aad
out
std
push
jmp
fildl
xchg
adc
scas
xchg
repnz
cmp
sti
popf
int
popa
daa
xor
imul
push
lods
jp
cli
insl
or
int
aam
xorb
andb
call
push
mov
shr
cmp
and
push
add
pop
xchg
jp
clc
fisttpl
xchg
push
loop
cld
cld
scas
jmp
cmp
mov
add
cmp
add
into
arpl
cmp
and
pop
add
add
sub
daa
popa
mov
inc
shlb
fistps
mov
loope
fwait
lea
inc
ljmp
addb
cli
inc
xchg
push
jg
sub
out
cmp
push
inc
in
add
idiv
scas
imul
stc
sbbl
mov
jg,pn
outsb
pop
sbb
sbb
fcmovne
sti
jb
mov
out
mov
lock
lret
ficoms
add
outsl
cld
es
subb
out
mov
and
cmpsl
pop
adc
into
or
leave
sarl
and
jns
cmp
dec
add
adc
out
lods
out
lret
inc
cmpsb
add
cmpsl
xor
imul
mov
dec
cmpsb
xchg
mov
sub
out
push
or
mov
or
iret
mov
dec
cmpsb
scas
roll
inc
cmp
fsubr
outsb
add
ja
incl
add
or
pop
add
add
in
push
push
pop
andl
pushf
sahf
loopne
xchg
stos
add
push
sarl
iret
mov
in
je
clc
jmp
sbb
adc
mov
or
cmp
fsubrs
add
sbb
ror
out
add
add
fsubrs
xchg
leave
xchg
jo
mov
xchg
orl
in
push
inc
mov
add
inc
pop
lods
add
xor
jne
insb
push
inc
mov
in
dec
mov
repz
leave
mov
inc
filds
push
fs
sbb
leave
out
imul
push
stos
les
fs
popa
aaa
dec
fisubrl
nop
mov
out
outsl
lret
insl
lods
adc
nop
int3
xchg
mov
mov
adcl
xor
leave
adc
out
mov
pop
jae
or
dec
out
sbb
sbb
add
add
lock
jg
mov
aaa
pushf
pop
out
add
add
add
dec
lock
and
or
pusha
adc
pop
inc
pop
inc
fnstcw
arpl
cli
testb
lods
icebp
sub
inc
push
fchs
jp
in
push
pop
adc
fidivl
cmp
movsb
lock
addr16
add
mov
les
lods
imul
xor
mov
data16
pop
cmp
popa
dec
ljmp
ficoms
iret
add
aad
repnz
fsubl
cld
iret
and
out
pop
push
lahf
call
dec
cmp
jbe
cmp
idivb
adc
arpl
and
push
shll
fisubl
push
leave
mov
idivl
mov
push
pop
sbb
xchg
pop
pop
lods
push
xchg
pop
imul
dec
push
pop
pop
sbb
sbb
outsb
dec
les
push
lods
sub
cmp
bound
mov
test
subl
cld
or
mov
mov
add
add
pop
xlat
fldt
push
mov
add
add
add
rcll
aas
pop
daa
mov
xor
mov
imulb
mov
cmp
ss
jns
mov
stos
push
cmp
into
test
mov
mov
push
aas
mov
cld
or
push
mov
xchg
mov
imul
out
lret
in
mov
lret
adc
lock
ja
mov
mov
xor
pop
dec
int
in
rorl
adc
jb
fsubrs
fldl
xchg
lods
lret
ja
and
fsubs
pop
out
fistpl
ja
dec
push
add
pop
xchg
jl
cmp
add
in
mov
je
loope
fbld
mov
push
pop
loope
push
dec
rep
je
xlat
mov
adc
push
jmp
dec
sub
jno
mov
mov
pusha
push
adc
mov
xchg
mov
imul
adc
or
or
cmp
mov
add
add
mov
dec
js
stc
mov
mov
add
call
add
gs
aas
movsl
push
test
fsubrs
pushf
add
jbe
sbb
push
adc
ljmp
mov
test
insl
iret
xchg
push
or
or
test
or
rolb
loope
add
test
daa
push
decl
imul
test
iret
fdiv
fstp
cmp
mov
into
scas
xchg
scas
scas
jl
sub
cmp
out
lcall
jmp
xor
xor
test
lds
mov
pop
mov
sahf
dec
dec
rcrl
inc
add
js
xor
mov
or
jnp
lahf
lret
cmpsl
jle
bsr
shlb
aaa
out
pop
push
pop
xor
pusha
dec
push
cmp
std
xchg
rolb
mov
imul
push
cld
or
loope
aaa
cmpb
xchg
mov
add
insl
repz
jae
jg
xor
add
add
add
mov
push
push
scas
push
out
mov
and
testb
in
not
sbb
out
dec
movsl
cmc
popa
das
mov
in
test
mov
and
stos
cmp
adc
or
inc
fdecstp
mov
aaa
dec
cld
leave
aam
pop
lahf
or
lret
aas
aaa
dec
pop
mov
push
cwtl
mov
push
hlt
and
scas
nop
xchg
clc
sub
cmp
add
std
adc
xor
pop
cmpsl
lds
push
add
dec
sub
movsb
sarl
and
sahf
sahf
pop
sbbb
sub
add
mov
xchg
scas
push
cmp
cli
pop
rcll
hlt
scas
fdivs
sahf
pop
lds
sbb
cmp
push
loope
in
stos
jecxz
fwait
push
ja
cld
mov
iret
dec
rclb
daa
push
mov
or
xor
int
add
popa
ljmp
cmp
ret
mov
add
mov
pxor
jnp
es
ds
jns
add
pop
add
add
push
xadd
xlat
pop
and
pop
push
fwait
push
push
rorl
push
lret
jg
cmp
inc
sub
mov
cmp
lret
fwait
call
pushf
inc
xchg
and
lods
inc
adc
add
xchg
mov
adc
xchg
rorb
data16
subb
aad
lods
mov
repnz
cmp
jl
sbb
mov
or
cli
cmp
jle
leave
ds
and
nop
push
mov
pop
inc
mov
lret
sbb
mov
push
sub
add
cmpsb
rcrb
movsl
push
adc
mov
sub
loope
sub
xchg
sub
sub
jl
lret
scas
cmpsb
iret
or
movsl
je
mov
stc
add
add
loop
rolb
pop
gs
lret
test
cmc
cmp
fmulp
rcll
jbe
cmp
andl
dec
icebp
cmp
out
lods
xor
aas
xlat
jns
mov
or
add
add
mov
popa
push
xchg
and
pop
ficoml
mov
loop
or
and
cwtl
clc
and
jb
push
addr16
imul
push
out
lods
jmp
cmc
shlb
jb
push
cmpsl
mov
sub
mov
sub
mov
je
movsb
jae
mov
sarb
and
aaa
lds
mov
ss
imul
mov
nop
mull
outsb
xor
mov
stc
inc
dec
cmp
inc
sti
mov
imul
hlt
push
aad
or
int
jge
and
sub
ljmp
mov
icebp
iret
lea
xlat
push
faddp
data16
imul
mov
cs
ficoml
test
jno
hlt
insl
inc
out
xchg
jne
dec
jnp
mov
jg
bound
daa
fdivrl
fsubl
hlt
add
adc
out
adc
fwait
mov
imul
add
jb
scas
incb
out
dec
out
clc
test
cmp
add
add
dec
push
out
inc
xchg
adc
pop
mov
sbb
and
aaa
xor
jge
push
sub
xor
xchg
adc
lahf
xor
in
or
cmpsb
out
add
sub
and
test
addl
ret
mov
ja
cli
mov
hlt
mov
inc
mov
mov
popa
test
nop
int3
leave
rcl
clc
xor
jg
out
dec
cmc
mov
mov
loope
mov
push
sbb
jecxz
stc
mov
les
add
lret
cmp
xchg
stos
lret
addr16
adc
ljmp
shlb
ret
mov
outsl
push
aam
in
pop
cmpsl
sub
into
dec
in
xchg
and
inc
cld
pop
std
xchg
das
adc
mov
push
adcl
xor
lret
xchg
imulb
dec
stos
fwait
int
inc
mov
outsb
test
jmp
adc
out
cwtl
xchg
adc
into
sub
in
xor
cmp
addb
add
add
xlat
mov
mov
and
mov
add
pop
add
add
repnz
mov
pushf
scas
lahf
adc
and
fistpll
bound
outsb
aas
out
fldl
cmp
rorl
add
sahf
inc
adc
dec
xlat
jno
enter
lcall
movsl
jbe
inc
sbb
push
das
inc
iret
mov
sub
jno
or
pushf
fs
outsl
lret
hlt
and
ret
stc
push
cmpsb
adc
xor
jp
jle
popa
divb
push
in
jmp
mov
ss
repnz
mov
mov
movsb
push
or
in
xchg
push
test
sbb
cmovg
rorb
cmp
imul
repnz
and
mov
jnp
and
dec
fidivs
push
gs
mov
add
inc
out
add
or
cmp
roll
jbe
out
or
pop
mov
sub
lret
mov
jo
cmp
push
sbb
cmp
xchg
negl
add
mov
aas
mov
mov
add
add
add
jne
fidivs
add
adc
inc
enter
cmp
xchg
push
movb
jnp
mov
mov
les
data16
xor
mov
inc
push
fwait
push
xchg
cmp
nop
frstor
sbb
movsb
pop
xor
jge
dec
scas
roll
mov
mull
jg
imul
xchg
sub
adc
dec
mov
out
or
stos
mov
xor
add
ja
xor
push
nop
fwait
daa
fmul
cmp
mov
std
add
add
mov
inc
repz
js
jg
mov
pop
vpsrlw
sub
push
mov
outsb
xchg
dec
rcpps
sbb
push
sub
rcl
sar
popf
aas
aaa
jmp
mov
mov
andl
sbb
fwait
mov
dec
xchg
fstps
dec
daa
lret
inc
test
push
sub
bound
loop
fadd
sti
mov
cmovl
add
add
add
pop
xchg
lock
lret
push
ss
andw
idiv
and
ja
aaa
cmpsb
fcmovb
push
mov
xor
cmp
pusha
inc
xor
push
je
rolb
push
and
mov
xor
mov
lret
insl
mov
and
mov
pop
jb
frstor
leave
xchg
mov
hlt
sbb
out
rol
hlt
xchg
add
xor
jge
shlb
pop
cld
jb
fisttpll
pop
add
into
cmpb
out
aam
es
and
mov
sti
shll
sbb
test
lods
push
movsl
das
xor
mov
test
outsl
mov
scas
adc
mov
rcrl
mov
and
fdivp
fsub
adcb
popa
leave
mov
xor
jl
inc
cmpsb
jae
movsb
jecxz
jg
mov
cmp
xchg
sub
pop
dec
jbe
push
addr16
shrl
inc
daa
jno
push
jno
mov
xchg
pop
movsl
add
into
adc
neg
jge
mov
stc
lock
mov
add
add
pop
ret
loop
mov
dec
or
movsb
addb
inc
shl
mov
push
jge
push
fdiv
lret
and
lds
or
push
into
mov
mov
xchg
jns
sub
cld
clc
cld
pop
dec
jb
inc
mov
jne
daa
sahf
push
insl
popf
sub
ljmp
jle
lret
cltd
imul
outsb
cmpsl
and
gs
stc
pop
bnd
leave
push
push
push
sub
popf
add
push
arpl
add
sbb
mov
in
sub
mov
mov
out
cmp
mov
test
gs
inc
jbe
jo
xchg
sub
rcll
jg
xor
je
pop
rolb
mov
lods
shl
loopne
test
movntq
mov
jl
fisubs
pop
aaa
lahf
sbb
cmp
cmp
sbb
lahf
cwtl
add
add
add
dec
sub
scas
xor
push
adc
add
pop
add
add
dec
cmpsl
add
in
xchg
jns
imul
fldcw
and
and
add
loop
or
jle
in
ficoms
lds
sub
inc
dec
push
xchg
jl
dec
out
or
xchg
cltd
loop
dec
jp
mov
or
mov
aam
mov
xchg
dec
imul
mov
mov
jne
add
sub
dec
ja
push
pusha
in
sbb
push
outsb
mov
cmp
jbe
insl
xchg
clc
lock
adc
movsb
hlt
imul
mov
cmp
popf
sub
in
sbb
js
adc
mov
test
addr16
or
outsl
outsl
push
dec
arpl
jge
inc
sbb
add
lea
out
cmp
pop
inc
arpl
pop
or
sub
lret
imul
add
xchg
adc
mov
xchg
jg
mov
ret
ja
and
aaa
divl
rcrb
add
add
add
xchg
or
gs
sub
mov
rcrl
cmp
daa
dec
daa
jl
aam
aam
jnp
mov
adc
jl
push
and
jno
xchg
rorl
pop
pop
divl
pop
sub
push
leave
dec
dec
stos
cs
outsb
sbb
pop
imul
mov
xor
std
hlt
insb
fnsetpm(287
dec
dec
movsl
cs
iret
push
inc
iret
pusha
fs
lea
xor
lcall
in
sti
lcall
mov
xorb
sub
sbb
and
lods
lahf
push
pop
fdivrl
cmc
mov
sbb
lock
cmp
test
push
xchg
call
fbld
cwtl
adc
test
idiv
leave
fsubl
mov
dec
jmp
jb
or
pop
fcmovu
das
movsb
test
sub
push
fists
mov
out
scas
or
adc
mov
add
mov
cmc
mov
icebp
ret
sbb
repz
pop
add
add
fnstcw
scas
lock
push
xchg
lcall
je
enter
mov
mov
dec
fldcw
lock
xchg
enter
and
lss
adc
or
cwtl
pop
adc
insl
inc
cli
stos
test
mov
icebp
dec
aas
push
frstor
inc
stc
rolb
jp
mov
xchg
jle,pt
push
arpl
mov
cmpl
jge
cmp
and
lods
jecxz
pop
cmc
daa
shlb
test
pop
sbb
stos
loope
cmp
lods
inc
jo
ret
cmpb
mov
popf
xor
cwtl
push
rcrb
push
mov
add
dec
cmpsb
push
and
cli
push
mov
xor
push
adc
pop
stos
sbb
xchg
sbb
add
mull
and
or
cmpsb
cmpsb
repnz
fadd
xor
adc
jmp
and
pop
adc
ljmp
cmp
xchg
repz
add
add
jne
add
aad
mov
add
add
cld
int3
mov
jmp
pop
cmp
push
dec
hlt
mov
cmp
mov
dec
into
jns
pusha
hlt
cmpsb
inc
cwtl
adc
gs
out
stos
mov
pop
rcll
pop
mov
mov
pop
loopne
mov
sub
fcoml
in
xor
jns
pop
sub
cmp
outsb
add
nop
repz
push
xchg
adc
pop
inc
jae
popf
popf
je
loopne
inc
jge
xchg
mov
loop
jecxz
push
into
push
lret
inc
xchg
push
inc
jge
ljmp
orl
xchg
mov
xchg
leave
mov
pop
ret
xor
sbb
xchg
dec
mov
test
mov
sbb
jecxz
xchg
jae
add
out
std
push
xchg
jmp
movl
dec
dec
lea
push
and
and
jo
push
js
inc
mov
mov
cmp
or
es
data16
leave
adc
add
add
imulb
idivb
sbb
add
add
add
outsl
rcr
adc
lcall
push
cwtl
jno
out
scas
add
cmc
push
sub
jmp
mov
data16
inc
das
and
jns
cld
enter
mull
lret
arpl
mov
jnp
iret
movl
fists
ljmp
orl
push
pop
mov
pop
push
ja
inc
pop
mov
jmp
rolb
in
addl
pop
aaa
adc
mov
sub
arpl
mov
ljmp
mov
xchg
adc
sbb
int
xchg
lea
push
in
and
push
adc
les
inc
push
fisttps
outsl
repz
inc
sbb
in
jns
push
or
cwtl
jp
ja
inc
pop
nop
add
mov
xchg
test
sti
xchg
mov
mov
sarb
add
and
and
xchg
jae
pop
xchg
sbb
add
add
xor
sub
movb
testb
pop
add
add
cmpsb
icebp
movb
mov
rcrb
cmp
jno
mov
mov
xor
aam
lock
pop
icebp
mov
push
icebp
das
and
xor
ja
movsl
push
jp
xchg
aaa
inc
sub
jmp
adc
call
jo
cltd
out
fadd
fs
lea
jmp
inc
sahf
movsb
lea
aas
movsl
push
dec
popf
adc
jge
mov
dec
mov
cli
sbb
shrl
jne
icebp
pop
rcll
xchg
sub
pop
inc
adcl
cmpsb
sbb
dec
sub
or
pop
lods
not
pop
imul
jge
xchg
pop
imul
sbb
and
sub
or
pop
adc
or
cmp
cmp
jne
jmp
outsl
movb
lods
push
mov
cmp
dec
lods
push
sub
add
adc
int
in
idivl
call
sbb
adcl
add
add
ja
push
out
mov
cmp
dec
es
ds
mov
adc
inc
fs
insb
lret
xchg
add
arpl
repz
out
inc
jnp
imul
test
imulb
test
mov
push
inc
dec
movb
mov
or
imul
dec
test
imul
and
xchg
pop
push
sbb
ret
nop
mov
pop
divb
in
adc
pop
xchg
and
gs
cmp
aad
sub
adc
dec
arpl
repnz
mov
sub
hlt
arpl
push
push
or
lods
jbe
jbe
dec
enter
pop
jno
xor
insb
test
iret
jb
into
jne
sbb
jge
movsb
mov
hlt
ficompl
lcall
xor
jg,pt
test
lods
and
ljmp
inc
inc
das
adc
lret
or
adc
je
xchg
insb
lock
add
jecxz
inc
cli
aas
clc
fdiv
jne
jne
stc
add
pop
add
add
mov
cli
dec
push
das
ltr
out
cmpsl
cltd
inc
sar
push
lahf
pop
xchg
mov
mov
push
in
lcall
add
out
shlb
push
cmpsl
fnstcw
push
dec
push
cltd
adc
jnp
mov
jno
jo
xor
cmp
enter
test
dec
xlat
push
mov
call
push
loope
je
sbb
cmp
adc
dec
adc
cmp
test
subb
push
push
push
lret
ds
popf
bound
xor
ret
aas
jp
sub
xor
pop
in
sbb
subl
dec
and
icebp
push
into
test
mov
mov
push
insl
sar
arpl
fldt
or
in
mov
in
mov
cmp
jno
xchg
dec
jo
dec
xchg
sub
mov
lcall
and
stc
add
pop
add
add
xchg
xorl
dec
stos
aaa
xor
xchg
and
insb
and
xor
scas
jne
cmp
cli
jp
outsl
dec
push
mov
cmpsb
mov
mov
xor
aad
mov
in
or
xchg
fidivl
push
cmp
jmp
dec
sar
jns
daa
sub
sub
cltd
sti
dec
push
mov
rorl
pop
in
cmp
int3
cmp
mov
adc
xchg
sub
xchg
test
insl
out
xor
cmp
sbb
push
out
bound
lock
dec
call
jo
dec
jns
je
add
jno
dec
testb
xchg
notl
test
adc
inc
inc
jbe
dec
pop
xor
adc
add
movsl
xor
stc
mov
in
xchg
lock
add
ret
mov
pop
repz
adc
mov
aad
mov
pop
incl
aaa
jae
cltd
dec
mov
jge
lret
add
and
cli
add
pop
add
add
sbb
mov
mov
xor
scas
int
test
out
int
adc
push
jno
shr
push
jbe
shlb
inc
pop
int
insb
stos
lret
push
and
dec
fcomip
in
insb
or
pushf
out
mov
dec
int
and
or
adc
mov
jg
dec
pushf
add
push
jle
test
xchg
daa
fdivs
adc
dec
pop
imul
add
clc
jae
fwait
cwtl
cmpsb
pop
mov
ja
sbb
into
movaps
pop
inc
mov
ret
jmp
mov
push
sbb
mov
enter
xchg
pop
js
push
int3
loop
xchg
shll
sbb
and
ss
dec
lcall
xchg
dec
pop
ljmp
call
or
outsl
cmc
push
insb
push
push
dec
jecxz
inc
pop
imul
push
mov
inc
out
dec
cmp
xor
loope
scas
movsl
lods
jg
add
push
add
add
push
into
nop
out
cwtl
jle
pop
or
hlt
lock
add
pop
add
add
jp
mov
outsl
or
cmpsl
sub
mov
jbe
scas
testb
dec
inc
pushf
or
cmpxchg
add
mov
and
scas
xor
mov
outsb
mov
lods
pop
mov
pusha
in
bound
imul
mov
lahf
adc
cmpsl
sbb
stos
jbe
or
movsb
lea
sub
repz
or
fsubl
xlat
xor
mov
fwait
out
adc
sub
out
idivb
pop
stos
into
push
xor
adc
mov
adc
fldt
ljmp
push
int3
fsts
xchg
sbb
dec
pop
jno
bound
das
movsb
sbb
test
and
bnd
aam
inc
cmp
mov
cmp
mov
sar
sub
jb
push
sbb
popf
enter
addr16
and
or
jno
test
jg
in
jmp
testb
add
add
add
sub
sbbl
pop
inc
lds
shrb
pop
in
mov
xorl
inc
jae
sbb
out
imul
mov
inc
jo
inc
and
orb
rclb
fldcw
pop
and
stos
jo
xor
sub
jle
arpl
lea
adcl
xor
dec
mov
ss
jae
add
sub
mov
jae
push
imul
fs
sub
cmp
sbb
xchg
lods
mov
ljmp
mov
jmp
sbb
js
ljmp
mov
fcomp
ret
popf
lret
aas
or
or
rorb
jecxz
add
and
stc
add
pop
ret
cmc
aaa
fdivrl
dec
mov
gs
cmc
jp
push
mov
scas
cmc
mov
push
push
lret
insb
inc
push
xchg
mov
adc
add
movsb
push
in
cmc
jne
rorl
and
std
add
pop
add
add
pop
out
fisttpll
sub
ret
push
cmpsl
lds
leave
decl
outsl
outsb
mov
lahf
push
pusha
jmp
aas
mov
cmpsb
mov
ljmp
scas
dec
gs
imul
nop
movsl
rcll
and
fs
mov
push
sbb
jnp
jnp
leave
test
rcrb
sub
dec
xchg
gs
shl
inc
sub
xchg
icebp
nop
enter
inc
in
push
cltd
xlat
mov
mov
hlt
pop
jp
mov
repnz
stc
and
lock
sub
pop
cwtl
scas
inc
in
add
into
aas
in
and
jno
nop
or
lds
push
inc
sbb
jbe
mov
xchg
pop
mov
inc
mov
cs
ficomps
ds
pop
pop
sbb
or
sahf
adc
mov
mov
or
pop
scas
test
xchg
jo
mov
and
jbe
push
out
lret
pop
or
mov
add
out
shlb
aas
out
sbb
ja
sahf
and
add
add
add
lods
add
xchg
xor
xchg
or
jmp
add
cmp
xchg
cmp
nop
cli
out
fyl2xp1
mov
fildll
outsb
lahf
hlt
psllw
out
dec
out
pop
clc
jmp
cld
or
xor
mov
sbb
sub
scas
cmp
jne
xchg
lds
xchg
rolb
add
jns
xorb
mov
imul
add
jp
lds
cmp
rcll
insb
xor
inc
mov
sub
xor
jle
or
xchg
stos
xchg
sub
and
xchg
hlt
adc
cmp
mull
lea
sbb
inc
push
or
pop
movsb
and
mov
jb
sub
bound
sub
test
jb
out
mov
dec
dec
jae
pop
fucomp
cmc
shll
add
mov
lcall
ss
or
add
pop
add
add
cmp
inc
add
or
lock
and
pop
and
mov
cmc
repz
adc
das
cmp
push
adc
mov
fnsave
dec
cwtl
addr16
decl
sub
push
sub
lcall
jle
jbe
dec
sti
insb
inc
ds
ja
or
rcrb
jo
fnstsw
mov
add
filds
inc
push
mov
int
xchg
sub
xlat
cli
mov
dec
mov
mov
dec
add
mov
cmp
mov
push
or
ljmp
and
int3
movsb
sub
mov
jl
sbb
cmpsl
fcmovnu
add
jle
jnp
jp
sub
mov
jecxz
out
mov
push
popa
push
rorl
xor
cmp
fs
or
inc
xor
add
xchg
hlt
cmpsb
sbb
cltd
adc
dec
rol
lret
clc
int3
jae
adc
out
xchg
scas
adc
add
pop
add
add
and
les
pusha
pushf
push
sbb
inc
adc
push
int3
out
push
leave
mov
inc
ja
jmp
hlt
in
out
sub
xor
sub
negl
in
cmp
cmp
std
out
aas
jg
xor
popa
cmpsb
jg
popa
pop
imul
lea
mov
mov
or
or
ss
sbb
jmp
shl
mov
push
sbb
clc
xchg
shlb
xor
push
mov
xor
mov
loop
xor
and
xor
lcall
aas
push
mov
in
adc
test
sub
aad
js
mov
mov
ja
xchg
cli
mov
cmp
or
imul
sub
es
jne
cltd
cmp
push
fadds
jae
add
std
aaa
mov
mov
in
insl
dec
lahf
sbb
add
pop
add
add
mov
icebp
mov
scas
xor
orb
je
push
lea
sub
jmp
movsb
repz
pop
jge
int
mov
inc
jno
add
or
or
ret
or
enter
dec
sti
cmpl
mov
sub
jmp
xchg
cli
mov
loope
pop
pop
mov
cltd
mov
adc
je
icebp
xor
mov
mov
mov
rcll
pop
mov
pushf
xchg
dec
dec
jnp
mov
pop
punpcklwd
xchg
pop
mov
out
cmp
and
pop
stos
clc
jbe
cmp
push
dec
bound
add
insb
fistl
mov
clc
dec
lahf
dec
cmp
sub
das
fsts
mov
and
pop
and
ljmp
pop
je
pop
push
mov
pop
pop
js
add
insl
aam
mov
mov
mov
dec
mov
add
add
add
add
popa
lods
movsl
cld
dec
xchg
icebp
imul
and
dec
ret
pop
dec
pushf
sub
inc
aas
imul
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
ss
add
ss
add
ss
add
ss
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
push
lret
fs
dec
dec
cwtl
xchg
dec
xor
mov
notl
add
add
pop
jno
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
