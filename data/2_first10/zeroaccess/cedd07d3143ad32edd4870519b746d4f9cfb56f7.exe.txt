push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
xor
data16
push
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
mov
add
int3
jmp
lods
out
mov
aas
add
ss
mov
cmpsl
mov
jb
or
loop
icebp
scas
push
movsl
jb
mov
xchg
or
adc
xchg
int3
leave
outsl
dec
popl
push
nop
das
leave
dec
jge
push
scas
pushf
jg
or
inc
pop
aas
repnz
fildll
mov
ret
scas
mov
stos
fdiv
jb
xchg
outsl
dec
lret
sti
mov
pushf
push
xchg
xor
pop
fcmovbe
mov
stc
sub
inc
cmc
mov
jne
xlat
xor
push
mov
push
jge
xchg
das
iret
or
es
jmp
enter
imul
out
cli
xlat
push
mov
les
fidivs
sbb
std
adc
jo
mov
ljmp
mov
int
inc
imul
cmc
lock
jbe
mov
js
loop
ret
sarl
bnd
lods
lcall
cmpb
bswap
xchg
cwtl
sub
xlat
sarl
aaa
loope
inc
push
movb
jne
neg
or
pop
ds
cmp
cltd
jne
fs
mov
rcrl
dec
dec
mov
enter
jle
andl
push
or
fistl
movsb
xchg
scas
subb
shl
imul
outsl
cmp
insb
mov
jmp
lods
test
push
in
loopne
adc
adc
add
lods
inc
pop
push
pop
adc
adc
xor
xchg
js
inc
cmp
sbb
sub
repnz
adc
and
adc
jne
mov
push
out
movsl
push
imul
pop
sub
sbb
aad
scas
push
dec
arpl
pop
mov
jecxz
sub
xchg
leave
pop
xchg
jp
jge
push
repz
adc
mov
pop
sbb
sub
cmpsl
jl
mov
or
lahf
jle
cmp
ds
pop
or
mov
cmc
stos
mov
inc
fiadds
add
xchg
cmp
sub
enter
adc
xor
push
roll
test
addr16
fldcw
arpl
sbb
mov
fildll
aad
pushf
leave
mov
mov
movsl
push
stc
cs
jmp
bound
add
test
leave
popa
ds
mov
bound
shll
xchg
pop
rcrb
mov
fcom
lods
jge
cmp
stc
lcall
or
cltd
mov
mov
test
sbb
fdivs
sub
leave
insl
test
jno
es
mov
sub
pop
in
stos
ret
mov
test
mov
mov
xor
pop
or
pop
pop
mov
outsb
xchg
sar
add
cmp
ss
dec
sub
int3
mov
jp
test
pop
and
mov
dec
aad
inc
jbe
pop
jle
out
hlt
out
adc
inc
les
fs
out
mov
xchg
stos
popa
mov
jne
jb
loope
ret
mov
sbb
mov
xchg
inc
mov
orl
ljmp
or
cmp
and
sub
rcrb
pushf
pushf
jge
cmp
add
int3
in
mov
out
les
mov
test
mov
ret
iret
aam
fistpll
mov
sbb
xchg
bound
xor
scas
xor
aam
scas
push
mov
add
pop
adc
movzbl
lock
mov
xlat
dec
pop
cld
xchg
lret
fdivs
outsb
mov
andl
stos
movsl
out
and
popf
outsb
fnstenv
add
lods
xor
sahf
lahf
adc
adc
mov
out
out
push
dec
faddp
jnp
addl
mov
shl
stc
imul
fisttpl
pop
xor
sub
adc
imulb
inc
dec
add
cmp
mov
leave
cld
dec
std
jmp
je
push
int
and
arpl
jecxz
ss
pop
das
jns
adc
jnp
mul
cmp
and
inc
imulb
push
leave
adc
pop
xchg
scas
mov
pushf
popf
cmp
ret
add
and
in
in
inc
sub
iret
mov
push
add
shrl
loopne
rol
xor
inc
mov
mov
xchg
mov
lcall
inc
fdivrl
xchg
pop
pop
cld
inc
xorb
dec
dec
sbb
jbe
fstps
and
and
ds
orl
insl
pop
mov
insl
mov
mov
jl
dec
push
mov
aad
movsb
inc
add
mov
xchg
add
sarb
stc
cld
pop
in
rcr
pop
cmp
xchg
sbb
addl
dec
leave
pop
dec
mov
mov
aam
imul
into
or
jl
fmuls
dec
mov
filds
push
add
stos
aam
pop
adc
shrb
mov
fisubl
mov
inc
scas
movsl
pusha
aas
mov
mov
sub
sbb
mov
andb
aaa
mov
je
stos
es
into
imul
push
jae
jne
dec
ljmp
inc
push
mov
push
fstps
out
or
push
fldcw
lea
addr16
jecxz
xor
loop
push
jno
insl
add
int
in
sti
fwait
jbe
inc
mov
dec
ficoml
call
add
push
cltd
sti
shrl
rol
lods
and
jo
loopne
das
mov
add
or
cmp
shrl
dec
fisttpl
repnz
scas
ss
cmpsb
and
add
cli
xor
pop
ror
mov
fwait
popf
call
movsb
push
mov
or
insb
jl
setbe
fldcw
jo
xchg
jne
into
cmp
clc
sbb
test
rcl
nop
ds
sbb
stos
add
ror
adc
xchg
pop
ljmp
leave
sbb
and
movsb
data16
push
or
cmp
dec
jle
sbb
mov
sub
jecxz
xchg
mov
fmull
xchg
out
fistpl
lock
arpl
or
les
int3
sub
into
pop
mov
pushf
sbb
xor
cmp
addb
out
push
popa
lret
pop
fcmove
jmp
mov
mov
xor
fucomp
xchg
add
pop
fmulp
xor
loop
int3
lock
ljmp
or
cmc
sbb
cwtl
imul
or
mov
cmpsl
push
add
ss
stc
xchg
sti
adc
jo
inc
gs
pop
icebp
inc
mov
mov
je
add
out
adc
movsl
push
mov
out
int
addl
test
out
mov
jae
xor
sbbb
rcrb
xchg
dec
inc
pop
ds
in
addr16
lods
pushw
out
xor
cmp
pop
adc
mov
mov
ret
imul
and
insl
xor
sbb
faddp
or
jecxz
cwtl
mov
inc
push
adc
mov
hlt
adc
dec
mov
sub
loop
xor
inc
push
mov
dec
lahf
insb
xchg
xchg
jge,pt
or
sub
ffree
xor
xor
addr16
sbb
lods
jmp
icebp
pop
pop
aas
jnp
out
dec
sti
movb
jb
and
inc
push
popf
popa
out
repnz
inc
mov
add
cwtl
es
cld
add
pop
test
mov
xor
inc
out
push
mov
in
cld
repz
inc
scas
sub
dec
lret
aas
int
push
nop
lcall
dec
cmp
les
aad
add
sar
lods
dec
inc
xchg
inc
push
bound
and
jp
out
push
out
ficompl
jmp
xchg
enter
or
sahf
data16
xchg
dec
loope
rol
cld
jns
or
inc
sbb
into
pop
call
cmc
lcall
mov
add
popa
pand
das
fwait
call
fimuls
pop
mov
orb
or
dec
sarb
mov
cmp
inc
pop
push
lea
mov
cmp
adc
into
pop
xor
fcompl
cmp
jns
addr16
call
pop
inc
mov
add
sub
daa
mov
inc
ret
ljmp
push
sbbb
addr16
add
ljmp
xchg
mov
call
int3
inc
jg
push
add
les
cmc
fldl
mov
cmp
call
loopne
mov
dec
xor
mov
sub
cmp
jns
xlat
sbb
sbb
xchg
jle
gs
or
jno
mov
pop
dec
jo
xchg
add
add
repz
sahf
mov
inc
sbb
test
cmp
push
push
aas
lcall
mov
mov
push
ds
push
insb
pushf
mov
mov
dec
neg
mov
aad
int
stos
xor
addr16
mov
sbb
or
sub
xor
leave
jecxz
jmp
push
enter
leave
jo
mov
pop
cmpsl
dec
fstp
xor
aaa
scas
mov
mov
cwtl
xorl
add
cmp
adc
imul
in
push
sbb
push
mov
cmp
sbbb
push
inc
pop
inc
in
rclb
and
fs
jae
cmpsb
or
dec
jl
orl
push
add
or
sti
notb
cmp
shll
pop
push
cli
cmpsl
xchg
stos
andl
pusha
xchg
push
cmp
decl
inc
aaa
push
lea
jg
clc
in
dec
mov
enter
call
pushf
xchg
movsb
inc
xor
inc
jecxz
mov
gs
lock
xchg
insb
xor
adc
sub
pop
aad
or
xchg
xor
call
inc
push
pop
pusha
cli
clc
mov
or
fldt
push
mov
in
cld
cs
nop
mov
enter
pop
add
sarl
sub
xchg
push
movsl
pop
lcall
inc
insl
dec
mov
sbb
adc
jns
shl
out
dec
test
arpl
popl
rorl
mov
loopne
loope
cltd
sub
cmp
in
cld
mov
jecxz
lret
push
pusha
popa
mov
into
add
cmp
adc
sbb
xlat
enter
add
pop
sub
js
dec
or
ljmp
xor
xor
push
fsubrl
es
iret
out
into
mov
sub
pop
lods
mov
arpl
mov
or
cmpsl
pop
outsl
xor
sub
and
mov
push
cmp
xchg
adc
add
scas
and
add
sub
filds
ffreep
test
and
ds
push
in
or
aaa
aad
lock
fwait
cmpsl
cmpsw
sub
dec
adc
inc
je
data16
jge
xchg
mov
mov
xchg
outsb
sahf
or
fldenv
push
shl
test
out
sbb
daa
mov
push
lret
pop
pop
cmp
pop
xchg
je
xor
rcrl
push
mov
adc
xchg
incb
mov
rcr
dec
xchg
mov
rorl
mov
mov
xor
mov
jecxz
aam
lods
test
ljmp
int3
adc
cmpsl
jmp
inc
or
push
mov
pop
loopne
inc
jecxz
jg
test
xor
mov
cmp
mov
stos
and
fiadds
std
jbe
js
scas
cs
negl
out
movsb
push
leave
rorl
push
iret
pop
xor
sbb
mov
mov
hlt
cmpsl
movsb
jecxz
lods
divb
xchg
gs
leave
or
pusha
jne
test
inc
call
mov
dec
outsb
pushf
inc
hlt
sbb
rorb
mov
movsb
adc
or
inc
add
mov
fidivrs
mov
mov
ds
dec
or
cmpb
push
dec
cmp
test
push
sti
jne
inc
xlat
mov
jne
mov
aas
cld
stos
push
jae
jmp
and
loope
inc
ror
lahf
xor
xor
out
popf
push
into
sbbl
mov
jnp
xchg
imulb
data16
pop
scas
fidivrl
clc
cs
in
cmp
mov
in
shl
sbb
inc
push
shlb
rolb
push
mov
arpl
cs
xlat
das
fprem
shrl
idivb
or
jne
shr
popl
sub
shlb
out
cld
pop
mov
inc
lahf
add
aam
push
movsl
outsb
das
test
add
scas
aaa
cs
xchg
aam
cmpsb
fs
test
ror
push
negb
popf
push
jo
or
push
mov
mov
add
mov
push
sbb
daa
in
add
lds
imul
cmpsb
jle
jg
ss
adc
push
dec
push
lahf
mov
lea
in
inc
adc
jo,pn
cli
stos
movsb
sub
cld
mov
jmp
inc
and
cmp
mov
clc
mov
fstpl
sbbb
cmpsb
lds
fs
add
xor
fcomps
mov
pop
dec
jmp
aam
ret
jmp
into
adc
incl
adc
xchg
mov
jp
nop
jb
add
notb
test
addr16
push
imul
enter
arpl
lret
addr16
mov
inc
pop
aam
sbb
addr16
in
scas
pop
jl
mov
icebp
mov
fiadds
cltd
dec
mov
xor
sbb
popa
movsb
jge
shll
inc
inc
xlat
jg
fdivl
rclb
hlt
pop
lods
aaa
mov
dec
mov
into
cs
mov
sbb
cli
cld
xchg
aaa
dec
pop
jecxz
movntps
add
mov
cmpsb
cli
jnp
jmp
xchg
mov
sbb
and
mov
gs
es
push
jae
fsts
push
cmp
sbb
in
xor
xor
push
pushf
dec
shl
loopne
imul
dec
add
xchg
push
dec
fucomi
pop
lods
int3
arpl
adc
sub
xor
xlat
mov
and
push
xor
sub
xchg
jne
push
sub
mov
outsb
add
jle
out
mov
mov
mov
out
mov
imul
outsl
mov
and
mov
aaa
mull
inc
xor
push
sahf
adc
mov
sub
imul
xor
aas
mov
addl
add
addr16
or
push
inc
and
jge
inc
cmp
cmp
xor
into
xchg
sbb
filds
cltd
pop
lret
cltd
in
add
divl
out
pop
add
enter
inc
cmp
cmp
popa
jecxz
stos
lret
mov
aas
pop
lock
sub
xchg
mov
adc
incb
hlt
loopne
xor
or
mov
repz
pop
lret
inc
enter
push
frstor
push
lahf
fnsave
add
enter
jmp
or
cs
jp
cld
pop
mov
loopne
add
mov
sbb
xchg
add
sahf
pop
in
jle
das
lods
adc
test
test
pop
outsb
and
sub
push
test
repnz
addr16
gs
inc
jle
inc
lds
pop
stc
clc
jno
clc
sti
xchg
cmpsb
adc
adc
lret
test
arpl
mov
in
jp
cmp
jge
es
shrb
pop
mov
sub
shrb
insb
sbb
pop
mov
out
push
in
push
cmp
adc
out
or
sub
mov
push
ret
push
lods
icebp
fcoml
ljmp
in
cmp
inc
inc
xlat
push
aas
sub
mov
ss
and
lret
lret
adc
mov
mov
movsl
mov
rcrl
stos
sub
sub
pop
movsb
es
repnz
mov
xor
loope
pop
iret
ret
leave
cmp
mov
pop
mov
mov
test
dec
pause
les
in
fcos
or
or
mov
push
movsl
test
jne
lcall
push
add
xor
inc
lcall
js
or
hlt
test
pop
mov
xor
add
rclb
or
ljmp
sub
mov
jp
js
mov
shlb
dec
scas
movsl
mov
popa
jg
jnp
jge
jnp
icebp
data16
aas
sbb
inc
lcall
dec
jbe
pushl
xchg
jnp
adc
std
inc
scas
leave
daa
mov
cmc
out
and
pop
ljmp
repnz
sti
xlat
push
adc
in
xor
ja
repz
je
loope
in
aas
outsb
loope
cli
mov
push
cmp
push
cmpsb
mov
gs
mov
pop
outsl
lock
int3
sti
int3
sub
and
pop
mov
mov
dec
call
divb
clc
loopne
imul
or
mov
imull
jmp
mov
pop
jo
jae
in
cmp
lea
jnp
imul
add
lea
test
mov
pushf
xor
dec
aas
icebp
movsl
add
sbbl
sub
addr16
incb
xchg
movsl
xor
dec
jg
clc
into
jmp
clc
dec
and
adc
pop
xor
jae
bswap
xchg
cmp
neg
mov
rcl
mov
cmp
and
pop
push
pop
notl
mov
jnp
mov
sbb
xor
fdivs
push
push
cmc
sub
adc
pop
mov
mov
xchg
inc
int3
add
xor
xor
aam
sub
stos
imul
or
push
out
test
inc
je
mov
sbb
les
mov
aad
mov
std
pop
mov
pop
jns
enter
sub
sti
dec
iret
add
or
cltd
in
mov
mov
mov
mov
or
sbb
ja
mov
dec
test
cmp
jp
stc
pusha
dec
adc
cld
mov
xchg
fbstp
pushf
ljmp
or
ret
sub
sbb
adc
adc
cltd
dec
sub
subl
rorb
cmc
push
adc
adc
ret
mov
or
mov
int
addr16
mov
mov
and
in
fisubs
in
push
movsl
mov
xor
jecxz
cmp
aaa
ret
mov
inc
xor
mov
cli
ret
out
ljmp
mov
push
lods
fs
out
mov
aaa
dec
add
inc
shrb
in
cltd
sbb
popa
cmpxchg
sub
cmp
jne
shll
cmpl
es
push
add
jmp
and
loop
insl
movsb
sub
mov
jns
adc
xor
test
clc
xor
mov
gs
push
mov
stos
pop
xor
cltd
mov
sub
test
or
push
xchg
movsb
jb
imul
stos
cmp
lcall
lret
idiv
lock
outsl
or
xlat
lret
mov
push
imul
dec
mull
aaa
mov
mov
jecxz
dec
out
outsb
pop
jle
mov
scas
push
push
sub
adc
or
push
jmp
lahf
jge
shrl
clc
shlb
int
les
and
insl
fdivr
cmp
mov
pop
ja
pushl
cld
jnp
jb
ljmp
inc
xor
mov
pop
pushf
lahf
mov
int3
insl
pop
stc
fdivrl
adc
popf
and
int3
jl
and
or
leave
lahf
push
inc
fs
jo
loop
adc
dec
and
daa
nop
dec
xchg
dec
lock
out
adc
pop
cmp
repnz
test
fistpl
xchg
xor
enter
call
jle
add
pop
inc
push
and
xchg
lcall
mov
test
fsubl
ja
fs
jge
add
dec
dec
fmuls
gs
loope
jbe
insl
pusha
pop
push
mov
xchg
rcl
fmulp
test
cld
jl
cltd
sub
out
dec
lret
out
in
xor
aam
in
mov
adcl
or
stos
inc
test
in
subl
dec
push
iret
dec
rorb
mov
pop
or
pop
push
mov
faddp
fldt
mov
icebp
push
pop
stos
int
xlat
ret
rcl
incl
mov
je
sbb
or
pop
pusha
stc
mov
out
inc
mov
sub
mov
lret
jnp
lcall
sub
fnsave
addr16
ss
inc
mov
xor
sahf
mov
sbb
aad
lods
xchg
inc
inc
mov
cmp
arpl
ljmp
test
jne
insl
movsb
add
jmp
xchg
dec
and
inc
sar
pop
iret
add
call
inc
mov
jo
xor
pop
outsl
sbb
sub
jp
mov
fisttpll
jnp
int
inc
ss
outsb
xchg
mov
idiv
outsl
inc
test
call
mov
out
out
inc
sbb
insl
insb
fs
jnp
or
cmp
cmp
gs
xor
inc
adc
jo
adc
loopne
mov
in
mov
cmp
cwtl
leave
xchg
add
xor
mov
leave
jb
outsl
mov
mov
fs
xor
xor
push
jg
adc
xchg
push
lds
out
xchg
repnz
cwtl
fstp
in
mov
mov
pop
xor
and
imul
aas
enter
pop
outsb
mov
mov
inc
daa
mov
ret
int3
rcrl
sar
scas
cltd
cmp
adc
xor
push
pop
mov
sub
xchg
pop
scas
popa
int
lock
icebp
movsb
pop
das
xchg
inc
clc
pop
pop
cmc
int3
push
lea
fs
mov
roll
mov
jne
loopne
aaa
je
sub
dec
add
cld
popa
cmp
or
aas
pop
incl
clc
imulb
mov
sbb
adc
sarb
cli
jb
inc
or
int
ret
rcrb
pop
or
or
dec
loop
inc
enter
loop
fbstp
nop
push
push
mov
je
mov
mov
test
leave
inc
cmc
test
gs
bound
xchg
call
or
xchg
test
lods
bnd
push
mov
lods
push
repz
dec
cld
cld
sysexit
push
dec
scas
fwait
outsl
mov
xchg
mov
int3
adc
xor
mov
gs
add
test
insl
loope
dec
pop
push
cltd
add
pop
lret
sub
shlb
fisubrs
or
jne
pusha
jno
mov
or
test
aas
jne
xorb
jge
lret
push
cwtl
mov
inc
sbb
mov
mov
out
adc
inc
in
popa
add
dec
sbb
mov
pop
mov
frstor
xchg
mov
lcall
xchg
out
fdivl
adc
test
shlb
mov
jge
or
jb
hlt
cs
aas
in
push
mov
mov
xchg
test
push
jae
data16
mov
xlat
rorb
mov
dec
aaa
rcrl
out
mov
mov
pop
xchg
notl
ja
cltd
and
or
into
sti
jbe
push
cli
gs
push
movsl
cmp
add
insl
pop
fstps
in
and
out
jp
sub
or
mov
lods
and
adc
jae
push
cmp
or
dec
xlat
lea
into
out
aam
push
push
push
or
mov
mov
cltd
pop
jns
xchg
xchg
xor
push
mov
xor
daa
unpcklps
in
std
fdivl
dec
xlat
in
inc
sub
stc
mov
movl
stos
pop
loop
mov
sbb
insb
call
rorl
imul
imul
xor
js
jp
mov
add
sarl
shlb
insb
mov
inc
test
mov
movsb
adc
push
push
icebp
push
shlb
loopne
adc
leave
cmpb
test
nop
mov
xor
mov
pop
and
arpl
jl
inc
aaa
push
pop
pop
xchg
stos
addl
sti
push
pusha
push
incl
mov
add
gs
aam
mov
xlat
lcall
mov
ljmp
mov
xor
jmp
aaa
cwtl
pop
stc
sub
mov
or
adc
and
lret
cli
add
pop
or
xor
cltd
jns
fists
xorb
ss
fistpl
into
jo
into
push
adc
repnz
and
inc
imul
popf
xorl
xlat
push
mov
das
inc
cmpsb
mov
push
fnsave
push
jno
pop
mov
in
cli
dec
pop
add
mov
aad
jns
push
rorl
mov
sub
cmp
or
or
movsl
fistl
fiadds
dec
movsl
mov
or
mov
push
xchg
pop
lods
lahf
jecxz
lds
lods
movsl
push
hlt
mov
iret
pop
imul
and
out
xor
mov
and
stos
or
pop
lcall
push
jle
movsl
jne
xor
rclb
xchg
push
test
mov
mov
fistl
pop
cmpsb
cmp
xchg
add
mov
or
pushf
xor
imul
or
mov
ret
ss
push
mov
imul
popf
mov
loopne
add
gs
xchg
sti
decb
addl
sbb
mov
sbb
fs
ret
add
pop
adc
in
lret
ja
inc
lahf
dec
test
adc
jle
xchg
stc
lcall
pop
lea
popa
icebp
cmp
in
movsl
loope
mov
lret
mov
ss
loop
add
popa
inc
jecxz
and
mov
daa
adc
int3
int
pop
pop
add
loop
sbb
add
cmp
cmp
hlt
nop
dec
dec
in
iret
mov
pusha
jbe
popa
pop
out
push
scas
ret
movsb
mov
mov
mov
lods
sbb
mov
insl
mov
sbb
xchg
cmp
inc
int
enter
mov
pop
call
jle
push
lods
jp
insb
mov
pop
scas
rcll
stc
outsl
shrl
lea
jae
cmpsb
mov
cmpsb
mov
cmc
stos
push
lock
or
or
cmc
push
cmp
into
inc
std
pop
push
aaa
jae
sub
aaa
sbb
push
lahf
mov
jns
repz
fidivs
jle
in
jbe
sbb
icebp
sbb
fs
cmp
mov
aaa
mov
mov
bound
addr16
les
push
sub
dec
and
jmp
inc
sub
or
mov
inc
andb
xor
or
es
cmc
lea
repnz
pusha
jmp
xor
lods
cwtl
xchg
insl
pusha
shll
rol
inc
jnp
or
push
insb
adc
cmpsb
xchg
and
mov
mov
pop
nop
pusha
xor
sub
or
fdivl
pusha
sub
pop
pop
mov
mov
fimuls
xor
lret
fldcw
mov
mov
aas
jmp
dec
cmc
int3
xchg
or
cmpsb
not
or
mov
in
mov
pusha
push
push
sbb
xchg
dec
in
lea
jge
pop
sbb
out
xor
out
in
enter
fwait
cmp
hlt
pop
and
adc
push
mov
xchg
xor
daa
mov
jp
lret
mov
mov
mov
lahf
aaa
mov
in
mov
pusha
ret
aas
es
into
add
lea
dec
jmp
pop
pop
jae
mov
stc
add
sbb
lods
push
movsb
mov
add
and
and
fstpl
test
and
adc
cmp
mov
cmp
cmc
sbb
cmp
and
in
or
pusha
mov
imul
pop
sbb
adc
mov
cmp
arpl
jno
dec
or
aad
sbb
cmpsb
adc
call
aad
xor
inc
ficoml
adc
pushf
xchg
xchg
dec
cli
or
pop
mov
jb
push
mov
fs
fnstcw
in
sub
sub
push
xchg
lock
out
dec
adc
arpl
shlb
sub
sub
jp
call
stc
arpl
loop
xchg
pusha
inc
test
cld
stos
or
cwtl
fistps
sar
dec
movsb
cld
orb
sub
and
pop
fmull
inc
cmp
xor
test
fcomps
cld
xchg
int
mov
mov
and
repz
inc
fcoms
lds
dec
pushf
sbb
int
aad
sub
jg
mov
pop
push
repz
js
xchg
add
cltd
flds
sub
nop
cpuid
add
fildl
sbb
and
sbb
fdivrl
fnstsw
aaa
push
inc
pop
clc
mov
iret
adc
xchg
jp
sarl
jnp
cmc
hlt
dec
push
aam
xchg
xorb
imul
and
sbb
jbe
outsb
repnz
nop
mov
in
jb
xor
cmpsl
daa
cmc
inc
ror
sbb
cmpsl
pop
mov
inc
ljmp
push
push
mov
pushf
jle
int
stos
loop
sub
sbb
pop
mov
sbbl
mov
add
daa
lods
push
jl
cmpsb
popf
dec
hlt
negb
repnz
sbb
stos
call
rorl
or
fstps
smsw
sub
xchg
test
push
js
lock
add
ror
mov
notl
add
pop
dec
cmpb
gs
sub
or
dec
and
subl
in
lcall
push
lret
adc
jmp
in
add
enter
push
sbb
dec
mov
outsb
add
loope
sbb
dec
cmpsl
cmp
push
orb
cld
jmp
jne
mov
and
scas
sbb
aad
rol
mov
shrb
rorl
hlt
cwtl
ljmp
jecxz
jmp
test
aam
inc
idivb
enter
add
add
add
rolb
jne
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
nop
fisttpll
popa
xor
jp
pop
jp
add
outsl
aam
loopne
xchg
ret
mov
aaa
inc
sbb
sbb
xor
cmc
cmpw
inc
push
leave
or
ljmp
xchg
movsb
scas
int
aaa
insb
call
fimuls
shll
push
or
ds
xchg
jne
mov
bound
imull
decl
pushf
addb
sbbb
scas
push
bound
aaa
es
pop
mov
push
fisubl
mov
mov
or
jle
aam
push
scas
popf
pop
jp
ret
pop
adc
movsl
repnz
xor
popa
mov
insb
inc
xor
frstor
ds
aas
insb
enter
dec
pop
push
xor
or
stos
inc
and
add
jo
fistps
dec
pop
cmp
pxor
lds
daa
sub
out
xorl
aas
fcomps
push
mov
jbe
vphadddq
adc
stos
rcr
test
sbb
xchg
ret
push
sbb
push
popf
sbb
inc
repnz
sbb
flds
xor
cld
cltd
iret
enter
lcall
mov
dec
push
push
pop
stos
lcall
std
inc
mov
xor
jp
and
sub
mov
xor
or
mov
ds
mov
out
push
add
mov
or
out
mov
jb
fidivrl
push
mov
popl
push
adc
out
mov
in
nop
in
pusha
rcr
inc
jl
mov
das
aaa
mov
or
sub
cmpb
xchg
rorb
lock
adc
shr
mov
iret
jns
sbb
mov
sub
inc
iret
mov
fisttps
jp
push
add
repz
insl
push
and
repnz
iret
idiv
mov
or
imul
push
or
pop
sub
sbb
int3
or
mulb
mov
mov
jbe
cltd
and
dec
dec
stos
jo
jb
imul
cltd
outsb
jge
out
in
jns
shrl
inc
xor
jbe
jle
les
jno
adc
lods
or
mov
out
cmpsb
or
outsl
adc
clc
cmpsl
int3
icebp
fs
movsl
decb
aas
cmp
loopne
fnstenv
cmpsb
pop
fcmovnu
jmp
push
mov
pop
lret
mov
push
xor
les
lea
mov
test
dec
mov
lea
lds
lock
push
js
xchg
xchg
inc
cmp
inc
and
into
imul
sub
nop
and
mov
and
jecxz
pop
xorl
jno
push
stos
mov
stos
in
mov
sbb
dec
lock
cmp
cmp
mov
cltd
test
jp
mov
std
test
cmp
enter
mov
cmc
mov
adc
push
mov
shlb
iret
add
jecxz
inc
pop
dec
mov
dec
movsl
aaa
pop
cmpl
imul
dec
xor
jnp
wbinvd
daa
pop
jecxz
mov
call
pushf
ret
fistpl
jb
inc
shlb
lods
andl
outsb
repnz
adc
push
sub
or
lcall
xor
mov
pop
out
pushf
test
xor
loopne
pushf
pop
loop
insb
in
movsb
pop
jae
je
mulb
es
imul
cmp
js
addl
ljmp
aas
pop
mov
lret
or
aad
ret
ret
lahf
add
cmpsl
pop
or
je
popf
and
shrb
mov
rolb
mov
jg
clc
and
jae
jb
into
notb
add
mov
arpl
jp
mov
ficoml
rclb
lods
popf
jbe
call
jmp
int
in
test
cltd
adc
or
xchg
arpl
or
lcall
arpl
bound
adc
fwait
xchg
push
add
sarb
shrb
aam
xor
inc
or
adc
or
adc
int3
xchg
xchg
push
arpl
into
jae
ljmp
outsb
xor
rol
outsl
loopne
jo
fdivs
pushf
ss
out
fisubl
xor
lahf
and
pop
mov
icebp
dec
mov
xchg
xchg
jo
lret
cmp
add
push
or
xchg
ljmp
add
faddl
fstpt
mov
pop
inc
ret
rcrl
and
das
mov
and
lods
mov
hlt
int3
je
pop
faddp
add
push
add
fstpt
xchg
mov
sub
jle
mov
repnz
and
sub
lock
mov
pushf
inc
fwait
mov
mov
jno
addb
popf
leave
lret
fcoms
jl
push
cmp
lods
mov
in
mov
mov
test
pop
jae
fadd
aas
dec
lret
mov
je
xor
aam
sbb
xor
ljmp
jge
divb
push
mov
mov
cmpsb
cmpsb
aad
mov
xor
push
ficompl
insl
loopne
js
fdivrs
insl
in
inc
mov
in
bound
add
xor
adc
out
subb
add
mov
mov
idiv
aad
add
js
fdivr
add
dec
popa
inc
jl
mov
nop
lahf
push
mov
mov
lret
dec
aam
mov
dec
enter
test
xlat
pop
nop
dec
inc
jecxz
shl
pop
ficoms
dec
icebp
out
cmc
xlat
mov
dec
sbb
cwtl
cld
in
dec
outsl
cmc
std
int
aam
outsb
sbb
addb
scas
cmc
imul
inc
mov
push
loop
ds
jo
push
dec
cmpsb
js
sub
hlt
ret
and
jne
pop
dec
xchg
sub
stc
inc
inc
jle
out
mov
mov
lock
imul
mov
inc
pop
popa
cmpsb
in
cmp
out
sub
xchg
ficomps
mov
aam
dec
mov
dec
xchg
in
loope
je
fisttps
cltd
lea
xor
fistpl
ret
sahf
cmovb
mov
xchg
mov
add
dec
jl
adc
ss
loop
popa
sub
jo
repnz
pop
mov
or
cmp
xchg
jge
xchg
mov
and
scas
jnp
dec
mov
inc
xchg
shll
and
pop
push
testl
fucomp
jnp
int
push
shll
or
jno
mov
adc
sbb
adc
shl
aas
sahf
in
insb
sbb
and
inc
push
add
push
icebp
adc
or
mov
ss
push
xor
add
mov
and
in
icebp
cmp
outsl
push
xlat
fsubl
cmc
push
xor
lds
mov
loopne
mov
in
add
add
cmp
mov
imul
dec
push
inc
add
je
push
add
stos
scas
loop
lcall
jp
pop
xchg
cli
xchg
enter
mov
add
sbb
fistpll
loop
pop
dec
out
jae
inc
arpl
int3
push
mov
out
daa
fdiv
leave
ds
mov
mov
int3
cmp
adc
pop
xchg
sahf
add
xchg
adc
cli
aam
push
fsub
mov
push
shrb
pop
cmp
lcall
push
cltd
loopne
xor
sub
xor
imul
adc
ljmp
xchg
jmp
in
mov
jp
jo
inc
jmp
mov
out
jmp
mov
lds
cmpsb
mov
mov
mov
jle
mov
out
in
icebp
cmpsl
in
mov
lret
inc
cmpsl
aam
je
rcrl
pop
sub
lret
xor
ja
movsb
jecxz
and
xor
les
mov
test
and
adcb
and
filds
ljmp
out
cmp
inc
cs
ret
cwtl
fwait
sbb
mov
ljmp
ljmp
faddl
jae
outsl
ret
aaa
add
push
xchg
mov
lds
and
adc
mov
pop
xchg
jle
inc
dec
sbb
pop
pop
xlat
and
cltd
adc
push
movsb
pop
sub
xchg
jbe
or
sbb
sub
cmp
int
mov
mulb
or
dec
xlat
movlps
mov
addr16
inc
into
push
psubsw
pop
adc
xor
jl
and
loope
dec
stos
sbb
dec
or
push
push
push
jo
add
sbb
mov
cli
out
sbb
popf
pop
xor
cmpl
divl
add
int
xlat
fisubs
data16
out
test
jge
jno
iret
dec
fld
dec
xchg
sub
pop
jne
mov
xor
mov
or
bound
lea
cmp
lds
cld
daa
clc
js
jge
jae
js
mov
dec
xor
dec
test
pop
cmp
mov
out
fwait
mov
leave
shll
mov
adc
pop
mov
js
cmpl
lcall
iret
xor
out
testb
out
popa
sub
and
dec
dec
mov
jne
xor
pop
icebp
imul
add
into
popa
mov
aad
popa
mov
enter
mov
xor
or
jle
and
enter
stc
push
fbld
fidivs
into
bound
pop
ret
xor
mov
add
cltd
aaa
mov
cmp
jmp
dec
or
adcl
push
cwtl
aas
mov
movsb
fsubrl
xor
xchg
popa
popa
xchg
or
pop
add
pop
mov
in
ljmp
jbe
stc
sub
xor
js
inc
fisttpll
mov
and
sti
inc
pop
cmc
pop
pop
testb
out
dec
rolb
shll
nop
and
add
fistpl
mov
mov
stos
jo
leave
jg
mov
mov
mov
imul
sub
or
jl
rcrl
stos
bnd
adc
xchg
imul
mov
lea
mov
fists
dec
and
insl
pop
cmp
add
mull
fistpll
fistpl
das
insl
sub
aam
ss
mov
pop
das
mov
stos
repnz
push
add
mov
out
xor
jb
lcall
jl
pop
ljmp
in
mov
into
add
mov
mov
and
pop
adc
or
xor
test
sbb
ret
mov
pushf
mov
inc
xor
sbb
cmpsb
add
xor
dec
cmp
rol
daa
pop
sub
out
push
shlb
pop
adc
jl
loop
mov
dec
mov
mov
pop
repnz
or
aam
fcmovnb
cmp
gs
xchg
cmp
andb
pop
mov
adc
scas
cmpl
and
dec
xor
fdivrl
xchg
cmp
sub
out
mov
loopne
rcrb
or
xchg
pop
cmpsb
mov
pop
lret
adc
push
pop
in
mov
lods
inc
xchg
sbb
subb
xchg
pop
mov
xchg
in
jp
mov
dec
inc
dec
add
mov
sub
fwait
sub
sahf
fadds
xor
add
in
dec
cs
std
test
in
push
lcall
xor
call
fldt
lret
shl
pop
mov
lods
ds
xor
ret
stos
add
cmp
cmpsl
inc
nop
in
dec
sbb
divl
jb
xor
leave
push
lcall
or
adc
cmpsl
or
mulb
sbb
jns
pop
repz
call
ss
int
stc
mov
ja
testl
mov
adc
push
andb
xchg
mov
loop
sub
and
test
mov
inc
sbb
mov
lret
or
xchg
xlat
mov
les
out
in
sbb
mov
jo
push
fsubrl
xor
xor
aad
push
xor
enter
call
cmpsb
leave
pop
mov
arpl
fiadds
loop
ret
push
shl
in
mov
cmp
jmp
jno
jno
jle
or
in
xor
call
outsl
stc
and
je
xchg
scas
sub
sbb
ret
mov
pop
cs
mov
add
pop
adc
lods
and
dec
xchg
fldt
inc
aam
dec
sbb
inc
dec
insl
jl
test
jmp
and
xor
push
repz
sub
sarb
sub
adc
test
adc
dec
popa
or
and
push
push
aam
je
cli
inc
push
mov
bswap
addr16
mov
or
pop
std
lahf
stc
xchg
jbe
adc
xor
dec
dec
xchg
and
and
movsb
push
movsb
int3
dec
mov
jle
and
test
pop
inc
mov
std
test
dec
sbb
inc
push
lock
into
and
aad
nop
fsubl
icebp
pop
and
das
cltd
or
filds
into
dec
das
mov
ljmp
push
inc
pop
roll
push
push
dec
cli
scas
sub
pop
xor
iret
rclb
jae
mov
nop
or
push
jecxz
add
mov
mov
gs
inc
mov
jle
mov
xor
clc
sti
mov
xlat
xchg
out
sbb
fwait
in
add
inc
mov
xor
push
ret
add
ljmp
xchg
mov
push
dec
mov
pop
mov
cs
push
lret
orl
push
dec
pop
loope
repz
loopne
cld
mov
sbb
and
pop
loop
and
lock
and
loop
mov
rcll
cmp
mov
inc
test
add
icebp
inc
sarl
loop,pt
cmc
and
clc
mov
ljmp
cmpsl
sbb
pop
cli
mov
imul
mov
mov
push
fstpt
es
pushf
push
xchg
test
fwait
jne
in
lret
and
push
lods
sahf
shrb
std
push
mov
add
pop
pop
test
je
or
test
jno
mov
fwait
ljmp
stos
cmp
test
dec
and
out
sbb
push
sub
aam
mov
push
inc
out
mov
xor
in
push
call
pusha
adc
push
lahf
mov
mov
cli
xchg
movsl
push
push
xor
inc
and
aas
xor
insb
or
sub
inc
push
add
sub
cs
pop
ret
repz
xor
cmp
inc
mov
sbb
or
or
fs
rdpmc
imul
ja
inc
mov
jns
dec
and
push
cmc
mov
lods
add
out
jno
mov
or
enter
mov
cwtl
xchg
push
mov
sbb
xor
cmp
ja
pop
and
fistps
fisttps
insb
aaa
cwtl
add
loop
or
loope
adc
lea
repz
push
mov
outsb
fiaddl
inc
sub
outsl
and
xchg
xlat
inc
mov
loopne
sub
std
into
into
out
movsl
outsb
mov
push
add
xor
out
sarb
adc
mov
push
fmul
sub
shl
dec
sub
or
fisubs
flds
test
xor
push
fildl
les
int3
std
fildll
mov
aad
jo
dec
lock
cmp
test
frstor
jnp
mov
jno
addr16
sub
cld
push
daa
xor
mov
les
push
sbb
loope
scas
bound
cmpsb
ret
mov
pop
int3
jmp
xchg
cmp
int
aad
mov
sub
pop
loop
int3
xchg
cmpsl
push
push
mov
std
int3
sub
shlb
fbld
enter
sbb
mov
in
adc
cld
loop
lcall
stos
test
push
adc
mov
pusha
aad
sbb
lret
stos
jne
mov
mov
or
int
cmp
out
shr
imul
out
mov
imul
and
pop
dec
mov
jle
inc
jp
cmp
out
sbb
jo
jle
cmp
or
jbe
or
ja
push
dec
push
push
pushf
es
xorl
jl
out
xor
inc
add
mov
dec
push
mov
mov
xor
or
scas
test
popl
aam
outsb
cmpsb
in
ja
aam
jbe
rorl
pop
push
jg
movsl
cld
fistps
sub
scas
push
test
adc
setg
ret
lret
rcr
ret
jg
inc
xchg
adc
addr16
sbb
pop
btr
mov
push
stos
call
call
xlat
mov
aam
fwait
adc
push
mov
pop
add
in
imulb
mov
gs
sbb
adc
inc
pop
jp
mov
fcoml
stc
cmp
mov
leave
and
xchg
icebp
popf
sub
jmp
dec
sbb
pusha
gs
add
mov
xchg
aad
push
cmpsl
jecxz
aas
lods
mov
or
iret
cmc
xchg
bound
ret
mov
lods
negl
add
mov
inc
int3
and
fidivs
fcmovb
movsb
pop
cmp
push
inc
stos
arpl
mov
jne
andl
mov
cs
aam
test
orb
xchg
and
pop
inc
or
adc
inc
fs
and
rcll
xchg
mov
sub
add
lret
jae
nop
xorl
lcall
in
add
jecxz
sub
or
cmp
imul
imul
call
fs
and
dec
mov
enter
pop
jl
pop
lock
movsl
test
int3
jecxz
icebp
xchg
mov
roll
push
add
mov
mov
xchg
cmp
aam
push
add
repz
push
aaa
jne
xor
xorb
sub
mov
test
sub
inc
jg
fcomp
cmp
or
fistps
aas
gs
and
adc
lds
jl
icebp
lock
nop
cmpl
mov
sbbl
or
cmp
sub
aas
xchg
inc
mov
imul
xchg
cld
dec
iret
lcall
in
add
icebp
xchg
dec
adc
inc
andb
testb
pop
cmp
in
mov
out
stc
sbb
mov
adc
and
fsubl
or
cmpl
xchg
jecxz
rcrb
cld
mov
mul
cmp
lock
dec
push
test
aas
pop
in
push
add
mov
dec
or
dec
mov
andl
push
mov
lock
and
and
ror
daa
inc
imul
lret
jmp
bnd
xchg
xchg
jl
push
loop
arpl
adc
jmp
inc
popl
int
shll
dec
sar
lds
lea
pop
cltd
insl
mov
iret
clc
push
mov
lret
outsl
pop
jl
scas
test
and
cmp
jg
negb
inc
nop
jp
sub
sbb
and
fdivl
jle
insl
push
enter
clc
add
das
jg
lret
adc
ret
fwait
inc
or
push
adc
dec
push
leave
jle
mov
sub
shlb
inc
sbb
mov
pop
in
pop
test
inc
clc
scas
daa
cltd
xchg
and
in
dec
in
cmpsb
jbe
push
fs
rol
mov
cltd
xchg
aas
mov
nop
imull
hlt
ljmp
cld
jge
pop
icebp
mov
lret
fnstsw
cli
inc
add
push
sbb
cmc
das
or
dec
mov
jo
addl
and
jo
stc
xchg
loope
or
sbbl
ljmp
jb
stos
scas
iret
popf
mov
gs
popa
push
das
dec
adc
filds
out
push
imull
sbb
aaa
int3
in
hlt
jb
mov
mov
loope
outsb
iret
in
cli
lds
mov
loopne
jbe
adc
mov
stos
or
movsl
sahf
cmp
adc
xor
xchg
or
xchg
or
ljmp
dec
lea
mov
and
sub
stc
shll
inc
enter
push
pop
xor
jmp
or
add
call
mov
movb
nop
sbb
add
inc
jbe
sub
stos
call
xchg
mov
and
pop
movsb
sbb
imul
xchg
jo
push
insb
jmp
in
fadds
jge
mov
insb
push
pop
dec
sbb
sub
sahf
fadds
into
fsts
inc
dec
loopne
fs
sub
out
jl
mov
aad
pop
mov
dec
or
addr16
outsb
or
imul
sarb
sbbl
inc
mov
jp
dec
adc
or
add
outsb
sbbl
jecxz
rorb
add
sahf
fcoms
insb
into
pop
aam
pop
xchg
div
jg
negb
add
jp
xchg
aas
ds
push
sbb
adc
scas
push
cmp
jnp
xchg
xor
movsl
jmp
cmpsb
sarb
sub
xchg
cli
mov
pop
push
mov
push
or
daa
sbb
rclb
es
movsl
xorl
fadds
cld
mov
popa
loopne
dec
jl
jnp
add
mov
sub
dec
and
push
dec
inc
ficoms
ss
add
cmpsb
pop
inc
cmpsl
sarb
out
add
out
pushf
stc
testb
mov
adc
cwtl
push
xchg
popa
loopne
adc
and
xchg
push
cltd
xchg
outsl
sahf
push
pushf
xorl
sub
out
or
psraw
cwtl
mov
mov
inc
jle
out
lahf
in
fnstenv
pop
push
rcrb
popf
outsl
arpl
sub
mov
xchg
pushf
dec
jnp
sti
inc
or
push
and
std
mov
imul
or
iret
lock
out
lock
or
pop
test
fwait
and
faddl
sbb
imul
inc
dec
push
fimuls
mov
aad
jle
sbb
mov
mov
jne
imul
lock
es
test
daa
push
push
negl
push
inc
jae
dec
lret
hlt
mov
rcl
mov
xchg
xchg
clc
jmp
pop
aad
adc
mov
xchg
mov
pop
cmp
mov
fwait
les
jne
push
fiaddl
shll
ret
or
jne
and
inc
and
xchg
xor
xchg
cmp
test
repz
bound
pop
jle
icebp
mov
mov
dec
aam
jmp
cmpl
dec
or
lret
dec
pop
into
call
dec
loopne
lcall
push
mov
roll
sub
mov
jb
or
add
ljmp
and
hlt
mov
cmpsl
ds
dec
in
inc
xor
fdivs
int
dec
jo
fst
rol
xchg
adc
fldcw
mov
mov
sub
inc
sbbb
inc
jae
int3
sbb
leave
rclb
fs
sarl
pop
fmuls
xor
mov
push
push
mov
lods
adc
test
movsb
movsb
cmp
adc
cmc
lods
jl
xorb
jnp
cmpsl
leave
dec
les
in
pop
test
mov
inc
nop
test
add
sub
mov
imul
xchg
rorl
push
fdiv
sbb
sbb
test
xor
scas
jg
mov
xor
loope
into
outsb
sub
dec
pop
mov
mov
xchg
fistpl
in
mov
cli
xlat
xor
cwtl
push
dec
xchg
or
pop
outsb
xchg
xchg
into
add
adc
sub
mov
call
test
in
adc
xchg
pop
popa
sbb
cmc
push
mul
mov
test
mov
imul
cmpsb
jl
andl
inc
notl
cmp
sarb
mulb
fistpll
cwtl
mov
fwait
in
mov
je
ss
xorl
push
in
jae
dec
loopne
sti
movsb
cmp
in
cmp
into
push
cli
xor
test
sub
outsl
pop
stos
lods
out
mov
inc
orl
xchg
popl
push
push
aaa
int3
add
sub
pushl
mov
das
xchg
adc
and
shll
insl
imul
jmp
cli
dec
movsl
adc
mov
sti
gs
inc
sarb
outsl
ret
flds
mov
adc
ficoms
and
scas
cmpsb
call
insl
xlat
pop
jae
xor
popf
add
fst
sbb
adc
ret
pop
repz
shrb
test
xlat
movsb
fdivrl
lea
adc
and
pusha
out
and
rcrb
insb
lods
mov
imul
mov
cmp
or
inc
test
xlat
add
shlb
push
adc
imul
clc
fdivp
push
xchg
loopne
movsb
imul
daa
or
cmp
push
in
jo
sbb
fildl
loop
pop
add
inc
outsl
outsb
sub
addb
jl
int3
cmp
lahf
je
shrl
nop
cmpsl
mov
nop
cwtl
stc
xchg
pop
mov
std
xor
xchg
out
jnp
insb
pop
cmp
mov
mov
adc
pop
fsubp
stc
jno
movb
sub
pop
lahf
xor
fsubr
sahf
stc
or
add
gs
int
push
jae
test
jno
and
lock
or
mov
mov
leave
popa
lods
xor
jecxz
push
xchg
mov
jb
or
fcomps
in
pusha
mov
xor
sbb
andb
std
add
int
scas
stos
push
jo
hlt
jl
mov
mov
cmp
push
or
and
in
leave
test
xor
or
xchg
xchg
les
std
xchg
and
or
mov
xchg
hlt
das
push
sbb
cmc
sub
inc
cltd
stc
addr16
xlat
sub
je
pop
add
arpl
push
xor
xchg
xchg
add
xchg
cmpsl
neg
jg
jmp
pop
inc
adc
scas
loope
popf
movsb
mov
test
sbb
xchg
repnz
stc
xchg
scas
mov
test
popa
ds
in
scas
scas
mov
mov
inc
dec
test
mov
or
sbb
cmp
adc
aam
in
add
adc
mov
inc
mov
out
cmp
xlat
cld
pop
jo
xor
out
out
pop
les
xchg
push
in
push
insl
bound
popa
dec
cmpsb
and
xlat
cmpl
mov
jnp
enter
out
dec
daa
jg
or
cmc
mov
mov
rcl
test
cld
lock
int
mov
add
stos
inc
and
lock
mov
push
jp
fwait
cmp
fdivs
fcompl
dec
and
bound
inc
push
jp
dec
test
hlt
sbb
or
dec
mov
je
and
cli
adc
add
mov
and
test
cwtl
push
jno
ret
sbb
iret
stc
push
xor
pop
jecxz
sub
mov
dec
sbb
sbb
xor
and
push
pop
in
ret
inc
lahf
sti
ret
jo
mov
inc
fnstenv
mov
jmp
sub
pop
in
lods
sbb
loop
call
mov
pop
lea
test
push
cs
lret
aad
sarl
dec
sti
push
sti
dec
lret
sahf
jp
mov
xchg
les
subl
adc
fwait
pushf
adc
call
in
lea
icebp
dec
movsb
add
mov
aam
loop
or
sbb
mov
movsb
sub
test
jno
sub
sub
cwtl
push
push
popf
mov
cmp
fwait
mov
mov
jbe
mov
adc
incl
fcmovnb
mov
and
sbb
adc
pop
cmp
push
cmp
pop
lahf
scas
dec
movsl
lock
in
xchg
dec
jmp
outsl
stos
loopne
notl
pop
mov
pop
sbb
mov
call
mov
rorl
out
jnp
inc
getsec
imul
inc
push
rcrb
jl
lea
dec
cmp
mov
xor
mov
cld
je
test
jb
mov
dec
jb
or
call
out
test
mov
scas
test
fscale
insb
mov
sahf
mov
fs
xor
dec
pop
mov
push
aaa
call
add
mov
movsl
xchg
lahf
lahf
jmp
inc
orb
jo
cmp
xor
push
js
js
loop
add
push
or
cmp
inc
daa
mov
mov
adc
subb
mov
lret
stos
lods
jno
xlat
sarb
aam
mov
fistps
mov
adc
jmp
les
mov
fcomps
out
add
cwtl
push
jo
sub
hlt
and
lahf
scas
inc
and
add
out
call
pop
push
jns
fldcw
sub
cmc
cmc
rclb
outsb
cmp
or
xchg
or
xchg
adc
es
lods
sti
call
sub
or
cmp
loopne
xchg
mov
stc
mov
sub
add
xchg
enter
xlat
jecxz
mov
testl
xlat
test
pop
mov
data16
outsb
rcrl
mov
mov
xlat
xor
rorl
stc
jmp
outsb
aad
jns
mov
loopne
and
add
dec
lret
call
add
ret
mov
pop
cmc
xor
sahf
xchg
jbe
xor
or
xchg
xchg
mov
push
ss
mov
push
or
out
push
cltd
dec
mov
aaa
sbb
and
cmp
mov
xchg
mov
mov
imul
or
xor
shl
fwait
rorb
mov
sub
push
cmp
xchg
pop
out
xor
and
jns
cmp
add
mov
mov
push
jmp
mov
jg
and
nop
roll
test
fnsave
popa
and
push
inc
mov
jecxz
gs
sbb
mov
aam
test
adc
lods
push
xor
mov
cli
sbb
clc
xchg
mov
push
mov
cmp
mov
gs
push
jns
sahf
mov
xor
mov
scas
jl
lret
inc
arpl
or
outsl
in
push
testl
inc
jae
movsb
das
xchg
jmp
inc
test
call
pop
xchg
xor
in
loop
sub
cli
imull
packssdw
xchg
inc
sarl
mov
mov
sub
inc
jno
fwait
push
orl
cmp
xlat
aaa
loop
call
xchg
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
mov
jp
in
jp
pop
xchg
std
push
daa
cmpsl
ret
pop
popf
dec
in
dec
out
xchg
or
sub
pushl
lcall
push
aad
subb
push
adc
clc
xlat
sub
xor
add
imul
cmpsl
fsubr
lahf
cmp
and
mov
pop
out
and
cmp
xchg
cmp
mov
pop
adc
dec
push
mov
jp,pn
icebp
cmp
std
ret
or
dec
fsub
lahf
and
pop
into
jmp
and
pop
adc
adc
sub
adc
insb
imul
inc
testl
ds
aad
jne
or
fstps
mov
cmp
clc
jo
scas
mov
xor
popa
cmp
jo
cld
das
fnstenv
or
cmp
sti
push
sti
dec
xorb
cmpsl
hlt
in
push
or
add
in
sbbb
mov
inc
js
cld
movsb
dec
push
mov
sub
lcall
scas
jmp
sbb
mov
movsb
pushf
stos
mov
in
nop
or
loope
cmp
arpl
xchg
outsb
pop
popf
jge
jnp
imul
iret
icebp
int3
out
into
dec
jns
aad
push
sbb
in
push
insb
push
mov
pop
add
mov
sbb
add
test
rorl
loopne
add
mov
ss
adc
sbb
and
out
pop
pusha
lcall
pop
mov
cld
mov
mov
push
fwait
pop
and
daa
fucom
stos
jo
jo
cli
mov
lea
push
xchg
es
xchg
subb
loopne
pop
xchg
test
data16
inc
cmpsb
jle
push
push
sub
ljmp
stos
lods
aad
shr
mov
push
pushf
and
inc
mov
jp
stos
xor
lods
ds
in
outsl
and
push
pop
outsl
mov
insl
cmp
inc
fisubrs
cmp
jbe
push
and
sbb
lods
sub
std
mov
dec
lock
adc
dec
in
call
push
pop
xor
data16
lods
test
dec
fldenv
jle
pusha
push
nop
stc
inc
fisubs
or
inc
in
mov
in
fdivrs
jne
mov
testb
or
pop
add
add
stos
mov
jns
pop
cltd
iret
out
pop
rorl
pop
sbb
jle
jmp
mov
movsb
loopne
repnz
xchg
das
iret
outsl
clc
or
enter
lds
inc
dec
out
daa
adc
dec
xor
aad
bound
adc
jg
std
dec
sbb
test
xor
jp
xchg
push
dec
fistpll
mov
cmp
pop
push
adc
push
mov
inc
dec
mov
xchg
daa
fpatan
adc
gs
fldt
jecxz
inc
xchg
mov
call
mov
in
mov
divl
push
stc
cmp
xchg
xchg
shrl
sti
ljmp
adc
fwait
mov
ljmp
sub
call
and
daa
sub
jp
mov
or
testb
mov
fsts
shlb
lock
pusha
xchg
pusha
mov
adcl
imul
pop
sbb
adc
div
ret
sbb
sbb
jp
das
hlt
insb
arpl
and
mov
pushf
sub
in
lods
popf
stos
imul
loope
push
insb
shrl
adc
mov
push
push
cli
sti
rcll
push
sti
fwait
ljmp
fidivl
xchg
je
pop
mov
call
loope
stos
pop
lock
jmp
push
add
lods
push
sti
push
or
jb
xchg
testb
dec
sub
fbld
mov
push
leave
mov
xor
sahf
jecxz
in
jne
fs
in
pop
in
dec
push
xor
test
test
ret
ficomps
and
outsb
mov
adc
std
popf
pop
mov
lahf
cld
movsl
jns
ret
add
sarb
pop
imull
stc
mov
lahf
addr16
in
mov
ret
mov
xor
roll
fwait
pop
or
xlat
mov
pop
pop
mov
imul
lds
btrl
xchg
or
mov
push
movsb
in
cmpsb
pop
test
in
icebp
pop
mov
inc
mov
cwtl
daa
test
orl
testb
sub
into
adc
negb
cwtl
sub
jne
pop
test
into
push
inc
xchg
lret
sub
push
insb
add
fstpl
xchg
nop
out
pop
daa
iret
mov
pushf
in
rcrl
sub
aam
dec
adc
mov
inc
inc
data16
std
cmpsl
pop
int3
xchg
subl
mov
mov
nop
orl
mov
hlt
ds
lods
dec
or
fs
aaa
push
mov
inc
dec
iret
mov
repz
sub
push
enter
and
lcall
adc
rcrb
mov
stc
push
das
or
mov
adc
sub
pop
stc
or
je
jp
ja
divb
jp
sti
sbb
popa
movb
jo
test
sbbl
rorb
jge
sub
xchg
das
pop
mov
mov
arpl
and
jp
rcl
mov
xor
mov
pop
mov
cmc
inc
inc
popa
push
lahf
popa
lahf
ljmp
das
imul
fnstenv
xchg
adc
mov
mov
daa
ss
pop
xor
push
lock
jge
aaa
pop
or
add
out
hlt
lcall
jno
dec
dec
cmpsl
mov
mov
clc
xor
xor
call
jg
add
push
call
mov
fwait
sbb
mov
dec
mov
cmpsb
jp
cmp
fdivrl
inc
imul
adc
add
push
push
add
dec
mov
jmp
pop
cmp
sbb
sub
push
orl
jmp
mov
dec
dec
lock
mov
rorl
xchg
les
add
in
sahf
push
sbb
das
sub
pushf
lret
jnp
push
mov
je
popf
popa
enter
sub
adc
in
add
movsb
jle
cmp
xchg
xorb
fists
cld
jg
sbb
test
cmc
rcr
jmp
push
add
push
fisubrl
fdiv
push
lock
scas
popf
mov
lods
sub
call
mov
aam
scas
loope
mov
nop
mov
aad
int3
mov
sub
cmpb
test
subb
push
sbb
sub
push
enter
cwtl
add
jp
fistpll
pop
ret
xor
addr16
call
jmp
arpl
mov
or
dec
xchg
add
js
sbb
jl
jmp
je
cld
daa
add
bound
add
stos
sub
ds
fs
scas
and
add
ret
and
jp
xchg
sbb
mov
fcoml
and
mov
adc
add
fildll
push
inc
movsb
adc
call
sbb
outsl
les
pop
inc
jmp
pop
or
fldenv
scas
mov
push
arpl
icebp
stos
lahf
or
fadds
cmp
call
jnp
mov
push
mov
push
mov
fs
pop
nop
mov
notl
loop
sub
xor
inc
and
mov
cmpsl
bnd
in
orl
push
repnz
xor
sub
subl
adc
inc
aas
sti
xor
jb
mov
mov
insb
sbb
mov
ljmp
loope
pop
mov
add
test
add
mov
fwait
out
mov
and
cmp
stos
or
out
ds
and
jns
mov
cmpsl
mov
in
sti
adc
ret
sub
xor
jnp
sbb
push
scas
gs
jecxz
dec
xchg
jno
outsb
scas
out
xor
mov
popl
pop
stos
int
add
inc
and
jns
push
mov
cwtl
lcall
mov
add
inc
test
and
xchg
daa
pop
mov
rorb
stos
stc
sub
push
jl
dec
add
lds
into
add
gs
aad
push
mov
aad
mov
cwtl
xchg
push
push
xchg
mov
push
lock
popa
push
dec
repnz
addr16
loopne
sbb
xor
cmpsb
gs
sti
addr16
xlat
out
les
or
outsb
adc
scas
ret
xchg
or
sub
mov
pop
xlat
mov
mov
xchg
shrb
cmp
scas
leave
pop
mov
inc
xor
out
fsts
push
inc
mov
imul
js
int
stos
js
add
lds
xchg
ds
ja
int
out
sbb
mov
mov
push
aaa
mov
inc
aaa
icebp
test
out
push
daa
push
cmp
sbb
xor
sbb
jle
lcall
loopne
sbb
rcrb
sbb
loope
outsb
scas
shrb
push
rorb
pop
adc
adc
push
xor
ljmp
dec
mov
int
popf
dec
adc
adc
insl
or
xor
out
mov
cmp
xchg
xchg
pop
lahf
cmpb
or
cli
daa
imul
jo
outsl
jl
xor
fwait
jle
mov
imul
add
nop
inc
repz
jl
and
mov
sub
jbe
aas
push
lahf
shrl
addl
push
outsl
lcall
xchg
adc
push
jmp
mov
es
mov
pop
xor
sub
aas
ds
jnp
mov
enter
filds
cmp
or
rcrl
dec
cmpsb
cmc
sti
sbb
hlt
xchg
lcall
xor
jp
in
cltd
shll
jp
cmp
into
sbbl
out
push
hlt
outsb
imul
pusha
jmp
push
pop
gs
lods
shrl
test
mov
mov
mov
sub
ds
into
cmp
inc
pop
cltd
adc
or
stos
rolb
sub
dec
pop
push
cmc
leave
mov
into
insb
dec
xchg
mov
or
pop
sub
lock
mov
hlt
add
push
xchg
shll
xchg
jmp
fildl
cmp
addl
sbb
pmuludq
push
jne
cmp
aas
pop
adc
push
jecxz
dec
ds
loopne
fcomp
lock
dec
and
and
ljmp
lea
dec
jecxz
test
or
lahf
insl
xor
mov
ja
jle
xor
scas
xorb
adc
xchg
fsts
adc
into
aaa
es
mov
sbb
clc
pop
cmpl
pop
jp
inc
mov
xchg
hlt
jecxz
push
jnp
xlat
sub
sbb
enter
lcall
lock
xchg
fs
sbb
inc
inc
fabs
sbb
daa
sbb
ds
clc
mov
loope
xchg
inc
or
aam
lods
xor
adc
xchg
xor
xor
xor
xor
es
mov
xor
push
xor
iret
cmpsb
stc
inc
pusha
out
add
andl
test
cmc
xchg
lcall
add
fimuls
adc
das
cli
mov
and
je
inc
mov
push
xor
push
pop
mov
inc
and
lea
daa
and
fcmovu
push
in
pop
mov
ljmp
and
pop
outsb
push
sub
mov
cmp
sub
js
or
sbb
dec
and
call
xchg
jmp
daa
inc
inc
ret
cmp
mov
lds
xor
faddl
fisubrl
add
and
push
jno
ljmp
xchg
popf
ffreep
adc
imull
dec
fmulp
shl
mov
cwtl
push
je
out
cs
adc
push
jl
pop
xchg
lcall
jecxz
mov
inc
daa
mov
mov
xor
xor
fisubl
std
push
test
mov
shlb
mov
xor
dec
fadd
mov
mov
pop
in
dec
mov
icebp
push
push
adc
sub
in
jmp
lock
mov
fmull
loope
stc
lahf
push
lock
test
or
and
pop
loopne
mov
sub
push
mov
cmp
adc
xchg
dec
aaa
xchg
mov
out
test
cld
fldt
pop
scas
xchg
sbb
adcl
ret
mov
fisubrl
inc
push
outsl
les
mov
pop
push
push
push
mov
mov
sti
xchg
nop/reserved
loope
aad
sti
mov
fs
dec
xchg
pushf
iret
mov
xchg
mov
xchg
lea
test
jge
pop
sub
xchg
add
test
std
xchg
push
xor
loope
xchg
xor
jo,pt
xchg
mov
cmp
mov
cmp
popf
movsb
pop
aad
lret
leave
gs
cmp
lret
mov
or
push
iret
jle
shlb
inc
mov
push
inc
pusha
fisubl
clc
cmp
add
xlat
sub
xor
add
imul
adc
mov
push
jns
or
inc
and
push
insl
pop
xchg
cmp
lods
or
and
pop
mov
subb
cwtl
aas
test
adc
pop
cmp
faddl
sub
mov
cs
jmp
cmp
and
outsb
pop
xchg
push
loopne
cmp
lret
scas
cmpsl
mov
stos
pop
sub
fldt
push
leave
in
xchg
push
add
mov
lods
jge
push
push
addr16
xchg
inc
adc
rcrb
pop
insl
js
jo
adc
dec
inc
daa
mov
fbstp
jecxz
mov
inc
mov
popa
scas
xchg
clc
mov
roll
sbb
inc
lret
cmc
sub
aad
or
loope
data16
push
dec
outsb
jp
sub
xor
popf
sub
jle
sbb
sub
pop
pop
jg
cmp
push
mov
cmp
inc
cmp
or
std
iret
mov
roll
xor
test
scas
ss
fcomps
adc
xlat
mov
and
xchg
adc
add
fadds
inc
aas
loopne
jae
mov
stos
xchg
mov
mov
cwtl
mov
aas
mov
je
cwtl
lock
ljmp
cmc
or
jnp
jae
and
cltd
and
and
js
stos
imul
fnsave
jp
pop
cltd
pop
dec
sub
jmp
jns
cmp
das
xor
and
dec
mov
lea
pop
aad
lret
enter
jg
cld
pop
inc
xchg
cmpsl
mov
add
xor
jno
xchg
shlb
mov
lret
mov
fdivrl
cmpsb
cmp
or
int3
mov
ljmp
daa
xor
pop
and
mov
xchg
hlt
push
jno
cld
xchg
jle
cmpxchg
mov
fdivr
mov
mov
and
sbb
dec
dec
sbbb
int3
loopne
outsb
push
in
aad
cmpb
lea
mov
sbb
or
inc
cmpsb
dec
out
into
dec
iret
pop
sti
pop
lea
sub
dec
fists
jg
int3
sub
pop
sbb
mov
dec
sbb
and
sub
lea
pop
cmpsl
jb
cmc
out
aad
cmpsb
add
and
stos
jns
dec
fistpll
pop
sbb
popa
test
out
mov
shll
lcall
sahf
fdiv
pop
fcmovne
std
out
xchg
negl
add
push
xchg
test
cmp
iret
mov
and
vpminub
dec
cltd
mov
cmpb
cmp
dec
pop
adc
dec
popa
xor
push
mov
cmp
fcoms
lahf
mov
jne
inc
inc
in
push
enter
loope
sahf
out
jecxz
arpl
jnp
mov
icebp
fidivrl
sub
cmp
xchg
jg
sbb
mov
dec
ret
push
xor
mov
es
mov
sti
in
push
lods
jle
sti
test
and
lret
push
call
outsb
sbb
popa
movsl
sbb
pop
add
out
lahf
mov
aam
in
mov
jb
lock
inc
sbb
and
sub
push
adc
adc
out
mov
push
sti
xchg
mov
lret
jecxz
shll
mov
dec
sbbl
loope
adc
mov
test
mov
test
adc
jns
jno
out
testb
clc
rcrb
popf
es
das
and
cltd
enter
lods
jb
rorb
imul
jbe
adc
insb
sbb
scas
and
ss
cmp
push
mov
pushf
cmp
add
xorb
int
rcr
push
les
adc
nop
fcmovne
clc
xchg
sbb
or
into
push
out
xor
mov
push
ss
mov
sbb
mov
gs
pop
int
inc
bound
pushf
xor
rcll
arpl
les
mov
mov
xchg
add
test
jno
mov
mov
enter
bound
cmc
mov
mov
pop
aam
jae
sti
push
repnz
lcall
fistpl
insb
roll
loop
dec
and
pusha
js
inc
or
lock
xor
inc
adc
and
and
push
icebp
dec
mov
and
pop
jmp
xchg
add
and
jae
test
outsb
sbb
insb
push
mov
ss
pop
mov
xchg
dec
fisttps
jmp
cmp
mov
outsb
add
loope
cli
rolb
stos
push
lea
nop
jmp
cmp
ret
jno
test
iret
mov
and
mov
stc
push
ds
aaa
jmp
les
pop
rcl
push
loope
loope
rorl
fucomp
xor
insb
enter
mull
aad
outsl
pop
shlb
out
jne
ds
or
jmp
aad
xchg
mov
repz
sahf
adc
mov
and
jg
loop
jl
insl
pop
ret
lcall
insl
mov
aam
fnstenv
pop
pop
ja
cld
mov
dec
pusha
mov
and
or
mov
enter
rol
ds
adc
xor
mov
or
adc
out
das
fwait
cmp
inc
inc
cmpsl
popf
push
dec
pop
fiadds
mov
xchg
and
and
push
sbb
hlt
jno
push
fstl
xor
in
pop
mov
and
ret
cmp
out
out
dec
in
jno
mov
cmp
add
fwait
mov
dec
sahf
sub
dec
sbb
imul
and
cmp
push
sbb
pusha
sbb
es
jg
cmc
pop
test
and
loop
push
mov
js
mov
push
sub
mov
xor
xchg
loopne
fisubrs
or
lret
xlat
stc
sbb
sub
stos
pop
ss
lods
or
jl
int
cmp
sbb
jno
push
rcr
mov
icebp
hlt
xor
adc
sti
pop
leave
pop
dec
or
sub
xor
out
push
push
adc
and
jmp
js
mov
je
push
cli
add
mov
clc
shll
loop
push
sbbl
mov
inc
cwtl
repnz
jge
test
shlb
and
jge
movsl
imul
ss
outsb
mov
jo
xchg
shrl
ret
cmp
pop
mov
add
test
add
push
icebp
mov
jmp
dec
mov
popf
xchg
jge
dec
add
jge
loopne
pushf
cmp
lret
add
mov
xor
xor
int
push
leave
push
popf
insl
pop
js
imul
xor
mov
sti
cld
xchg
test
hlt
stc
xchg
scas
push
fcoml
xchg
mov
mov
pop
mov
cmp
pop
inc
mov
cs
sbb
inc
lcall
mov
xor
pop
ret
out
fisubrs
mov
outsb
mov
xor
mov
ja
or
in
mov
cmp
sbb
cli
enter
mov
push
xchg
dec
int3
and
push
push
lret
sbb
ret
ja
jo
sbb
stc
mov
pusha
pop
add
out
mov
enter
push
js
jl
jnp
jns
jp
rcll
sbb
jno
push
idivl
stos
test
mov
rorl
dec
inc
xlat
ljmp
outsb
lret
out
in
mov
fidivl
imull
ret
cld
aad
and
adcl
jmp
xchg
sti
sub
mov
sub
pushf
push
insb
movsbl
xchg
lods
jns
inc
std
iret
push
pop
lret
xchg
popa
adc
aad
mov
cmp
out
sub
stos
je
out
add
cmp
sub
insl
xor
cmp
dec
aam
test
call
mov
cmpsb
adc
fsts
sbb
shlb
cmp
push
stos
dec
repnz
loopne
or
movb
mov
dec
cwtl
sub
and
rclb
dec
popa
pop
adc
ja
push
jae
jbe
loop
pusha
cmp
jmp
sbb
sbb
and
push
fidivl
pop
mov
fstpl
cmp
cmp
push
and
mov
xchg
inc
and
fcmovb
movsl
xchg
push
into
xchg
push
mov
mov
add
adcl
mov
jnp
cmp
hlt
and
adc
pop
mov
push
lock
gs
popf
mov
aas
jle
sub
sbb
adc
insb
fildl
cmpb
insb
aad
mov
mov
inc
mov
pop
dec
lret
es
pop
pop
push
xor
or
sub
push
das
out
test
clc
outsb
fldl
das
jmp
mov
shlb
lds
or
scas
mov
loopnew
das
cmp
or
ret
jecxz
inc
cmp
rol
push
scas
cmp
in
outsl
mov
sub
scas
fldt
loopne
rclb
stos
xchg
mov
mov
pop
inc
mov
mov
insb
lds
dec
adc
xchg
jge
jne
jmp
xchg
and
lock
xchg
lods
xchg
ja
cmp
xlat
pop
or
fwait
cs
sbb
mov
xlat
dec
add
sbb
xchg
imul
jg
cld
lea
or
cwtl
and
sub
inc
repnz
bound
cmp
inc
push
mov
test
aad
aam
mov
fistps
jg
jmp
iret
frndint
lea
dec
cs
dec
insb
xchg
cwtl
inc
cmp
pop
shl
push
sbb
and
ss
cltd
jecxz
cmpsb
jecxz
or
jae
jg
cmp
pop
hlt
add
cld
lret
push
popa
bound
sbb
pop
push
mov
cmp
ss
cli
daa
jo
xchg
insl
mov
sbbb
push
iret
push
icebp
pop
xor
in
sub
aad
sub
xor
cltd
filds
ds
lods
or
movsb
call
push
repnz
push
xchg
cmp
cld
repz
icebp
fadds
dec
cmp
inc
stos
mov
pop
dec
sub
xrelease
push
mov
imul
test
dec
adc
int3
sbb
mov
adc
jmp
in
sub
in
cli
dec
mov
std
jmp
dec
shrl
scas
ljmp
sbb
inc
mov
mov
out
mov
jge
in
push
ja
inc
mov
jno
loope
imulb
mov
lret
inc
pop
add
xor
iret
mov
xor
int
adc
push
mov
loopne
mov
mov
scas
inc
or
mov
roll
cmp
lahf
mov
mov
out
fdivs
dec
mov
imul
xor
sub
fbld
cmpl
mov
mov
sbb
push
test
insl
shlb
add
pop
ss
push
jno
lock
lds
std
fisttpl
shl
jne
pop
cmp
gs
cmc
sar
lea
adc
xchg
rolb
popa
xchg
rorb
add
add
mov
rep
xchg
into
push
movq
and
cmpsb
hlt
push
mov
xor
xchg
mov
std
or
pop
je
int
aas
cmc
movsl
movl
sbb
mov
lahf
xchg
scas
or
jmp
adc
js
and
or
sbb
adc
inc
mov
daa
stos
movsl
cmp
mov
stos
or
shll
sbb
dec
rorl
data16
push
hlt
movsb
jo
jge
or
in
out
aaa
in
mov
mov
sbb
mov
mov
pop
xchg
cwtl
icebp
inc
xchg
mov
sbb
stos
add
fwait
xchg
mov
adc
adc
nop
sub
push
mov
dec
jne
inc
or
out
mov
js
adc
pop
mov
dec
repnz
lds
mov
add
leave
cmc
jl
stos
mov
scas
cs
or
daa
insb
fisubrl
repnz
mov
out
cmc
push
popf
addr16
bound
test
jo
push
adc
lods
ss
es
rolb
cmpsb
cld
aam
inc
sbb
je
xchg
xor
shll
cmpsb
repnz
in
inc
in
or
mov
sti
int3
push
idiv
insl
adcb
dec
xor
out
lret
std
insl
fldcw
js
leave
push
or
add
cmp
xchg
outsl
aas
mov
pusha
fs
icebp
push
push
mov
xor
xor
mov
lods
mov
mov
data16
stos
push
and
fwait
xchg
pop
ret
and
push
xchg
iret
repnz
xlat
inc
add
in
sub
pop
outsl
or
xor
aad
xchg
enter
int
pusha
jne
dec
dec
inc
jne
mov
pop
pop
add
mov
mov
int3
inc
mov
cmp
cmc
xchg
fidivrs
cmp
jno
test
loop
add
mov
stos
out
adc
ret
xor
sbb
sub
add
mov
mov
sti
xorl
cs
xchg
fs
mov
mov
add
xacquire
push
mov
decl
cmpsb
or
data16
push
and
scas
cwtl
out
xchg
and
insb
xchg
mov
cmpsb
fsubrl
pop
jmp
clc
cmp
inc
add
decb
int3
test
popf
adc
mov
dec
pop
cmp
lret
jb
mov
mov
mov
invd
adc
xor
push
mov
js
mov
sub
je
jb
ret
in
cmp
inc
fldl
not
sbb
pop
sub
aad
aam
daa
repz
in
jp
xor
dec
flds
push
or
xor
mov
mov
pusha
popf
or
movsl
rcrl
loopne
sub
in
mov
adcb
mov
shrl
jns
scas
aad
fistpll
les
jge
or
call
cmp
std
pop
icebp
ds
inc
push
adc
cltd
ljmp
push
aas
add
lret
or
stc
xor
stos
mov
cmp
cld
mov
and
hlt
mov
or
lcall
inc
sbb
inc
sub
or
int3
add
pop
nop
jns
inc
rcrl
hlt
cmpl
testl
inc
iret
mov
repz
sbb
push
out
sbb
aaa
in
in
lods
mov
cmp
mul
sarb
pop
ret
sahf
jl
in
or
lahf
add
mov
pop
mov
out
stos
cmp
mov
jecxz
mov
hlt
inc
jbe
fisubl
add
in
fildl
push
pop
jmp
rcrb
in
dec
inc
cmp
add
ror
pop
pop
add
jmp
iret
insl
mov
daa
fwait
inc
sbb
push
sar
scas
xlat
adc
cmp
mov
bnd
fcmovnb
and
idiv
adc
sub
and
lcall
pushf
xor
sub
xchg
cmpsb
div
fistl
movb
xorl
inc
xchg
ret
pusha
push
daa
pop
mov
scas
aad
inc
hlt
adc
xchg
ljmp
xchg
mov
lcall
ret
insb
out
sub
hlt
pop
imul
leave
push
adc
ficompl
lea
mov
lods
sub
imul
pop
mov
pop
and
loopne
jecxz
sub
xor
out
dec
incl
sbb
inc
xchg
xchg
push
stos
addl
pusha
movsl
pop
sub
jg
in
arpl
sub
push
inc
loope
jp
lcall
dec
gs
mov
mov
lcall
dec
jbe
sub
loope
testl
inc
cmpsb
fidivs
flds
negl
dec
sub
mov
sahf
sub
lcall
dec
mov
push
in
jg
inc
sub
mov
push
and
jnp
xchg
push
jbe
out
fisttpll
and
mov
xchg
cmpl
shlb
jg
lahf
pusha
stos
out
jge
jo
and
hlt
mov
push
shlb
addr16
addb
pop
jmp
shr
cmpsb
and
adc
push
pop
push
rorb
movsb
fs
cs
mov
and
jle
or
inc
test
fnstcw
pop
inc
out
gs
push
add
push
mov
loopne
sbb
negb
sti
rorb
fs
xchg
arpl
push
inc
sub
in
movsb
testl
push
jmp
les
or
lods
push
aaa
sarb
xchg
movsb
lahf
nop
pushf
movsl
ljmp
add
mov
dec
sub
aad
jnp
xlat
mov
les
lret
in
sub
test
and
push
cld
xor
stc
sbb
out
adc
xor
lock
andb
add
push
and
leave
movsl
rolb
imul
or
dec
popf
stos
out
div
push
addps
cmp
lahf
outsb
pop
fisubrl
sbb
or
mov
je
fcmovne
into
in
in
mov
jmp
mov
and
mov
mov
pop
mov
sete
jl
rcrb
mov
mov
lahf
sbb
js
and
pop
xor
pop
test
adc
scas
imul
popa
pop
test
jbe
and
ss
mov
inc
xchg
cs
sar
adc
sbb
cwtl
jne
rorl
mov
inc
hlt
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
and
es
inc
pop
jp
outsb
les
cli
lea
dec
mov
xor
adc
loop
fistpl
sub
and
mov
or
mov
ja
int
jno
push
cmpsl
jns
loopne
or
stos
repz
out
sti
or
xor
clc
cmc
pop
or
icebp
push
jne
gs
ds
dec
jl
insb
add
lds
hlt
fsubl
jmp
mov
mov
mov
mov
into
hlt
xchg
xor
into
aam
cwtl
repz
cmc
mov
xor
and
data16
or
popf
cwtl
and
je
sub
mov
xchg
sub
xchg
push
inc
test
pushf
pop
or
dec
xchg
jl
stos
aad
fwait
and
cmp
notl
imul
and
mov
or
xchg
fstps
mov
imul
dec
fldl
cmpsb
sbb
lret
xchg
cli
cmp
outsl
aas
cmp
cltd
je
push
stos
jnp
xor
ljmp
cwtl
push
push
out
idivb
stos
pop
cmpsb
les
ljmp
xor
icebp
jo,pt
orb
xchg
dec
fcmovnb
das
jle
ds
mov
fs
es
mov
push
lock
mov
repz
adc
mov
psrad
cmp
pop
mov
xchg
xchg
dec
in
inc
es
lods
inc
es
into
mov
inc
mov
xchg
adc
mov
jge
sbb
cmp
inc
lahf
add
mov
lret
test
jns
jecxz
jge
mov
cmp
mov
add
mov
adc
imul
outsl
std
fisubs
dec
cwtl
rcll
das
cld
fs
data16
push
mov
cmp
xchg
das
mov
out
xchg
movntq
add
insl
mov
inc
push
lea
sti
mov
rcrl
iret
inc
add
popa
data16
cmp
ret
cmp
sub
and
daa
repz
dec
aam
shlb
lret
push
add
mov
aad
and
cmc
mov
mov
ficoms
aaa
pushf
in
in
sub
push
dec
jmp
sbbl
jecxz
inc
test
xlat
std
faddp
or
mov
jmp
jo
imul
sbb
ds
and
or
ja
pop
shlw
mov
sbb
mov
or
push
xor
shrb
push
sti
cli
test
js
repnz
xchg
in
sahf
cmp
pop
xchg
mov
adc
add
xchg
mov
sub
int
xchg
loopne
mov
test
test
lcall
pop
jp
push
orl
xor
aad
iret
pop
xor
in
adc
les
jnp
test
mov
pop
mov
push
pop
mov
andb
cmpsb
pushl
or
jbe
data16
movsl
stos
jb
mov
fstl
scas
aam
imul
push
adc
mov
cmpl
jo
or
and
jae
xlat
inc
repnz
mov
stos
push
shrl
cwtl
inc
mov
sbb
dec
inc
out
and
int3
sub
sbbw
add
pop
test
imul
stos
adc
popf
adc
cli
sbb
push
aaa
or
addr16
dec
into
and
ljmp
lods
sbbb
mov
mov
and
sbb
pusha
pop
es
loopne
adc
jo
mov
gs
test
icebp
sti
insb
mov
leave
loopne
pop
push
xchg
ja
repnz
mov
ficoml
lods
pop
xlat
sbb
vphaddubd
adc
push
movsl
movsb
or
sub
rorb
pop
push
jg
jb,pn
inc
out
or
dec
push
xor
xchg
movsb
add
cwtl
mov
int3
add
xlat
inc
add
dec
mov
fs
push
inc
and
int3
test
dec
inc
ja
loop
popf
xor
ffree
loope
rcrl
je,pn
mov
test
adc
loope
push
call
out
sti
jae
rorb
rcrb
sahf
loopne
imul
repnz
rol
adc
pop
orb
inc
cwtl
jbe
jecxz
repz
pop
sbb
je
adc
mov
push
lods
insb
outsl
sub
xchg
sub
std
frstor
imul
and
cmp
rorl
pop
mov
mov
repnz
mov
jl
adc
xchg
std
fisttpl
adc
mov
xchg
enter
and
hlt
or
push
push
and
xor
mov
sub
shlb
cli
mov
pop
hlt
cmp
add
or
pop
inc
shl
lcall
cmp
jns
pop
div
ficomps
xor
mulb
das
subb
or
popl
les
mov
mov
fwait
sub
imul
leave
adcl
rorb
mov
mov
sub
add
shrl
nop
push
pop
and
inc
call
enter
push
mov
jmp
inc
jnp
push
jno
stos
enter
push
mov
jno
imul
xchg
outsl
xchg
mov
scas
adc
sbb
in
adc
or
lret
and
push
mov
xor
dec
mov
and
or
sbb
mov
sub
cmpsb
jmp
dec
push
adc
cs
xchg
jl
xchg
roll
sub
sub
dec
adcb
dec
mov
jbe
dec
pop
dec
cmc
inc
test
add
fldt
shll
adc
and
jl
inc
pop
dec
or
divb
scas
mov
add
and
inc
addr16
lcall
test
sub
repz
push
rorl
lret
movsb
xchg
push
hlt
jmp
in
adc
iret
enter
repnz
stc
push
ror
or
out
sarl
dec
add
mov
bound
mov
or
out
and
mov
pop
sub
repnz
fists
ret
nop
aad
push
or
inc
aam
jecxz
pop
daa
shll
jmp
dec
xor
push
rcrl
push
insl
out
fsubrl
int3
dec
push
js
mov
xchg
andl
lods
int3
xchg
pop
cmp
push
out
iret
frndint
xchg
lret
popa
dec
cwtl
pop
lret
adc
or
push
jge
shrb
repz
imul
ret
adc
jne
leave
dec
rcr
rorb
xchg
lods
ds
out
pop
push
mov
mov
add
adc
shlb
int
xchg
adc
mov
es
xor
lods
movsb
jae
inc
sbb
push
cld
gs
in
and
jbe
xor
ja
jno
mov
sbb
pop
ret
cmp
sbb
mov
lret
inc
mov
jo
mov
fldenv
or
mov
loope
jnp
call
jle
rcrb
lds
mov
sbb
xor
jl
adc
lods
mov
test
dec
cmpsb
and
das
or
lds
cmp
mov
inc
push
mov
std
cmpsb
jo
fistl
gs
cmp
add
adc
cmpb
fdivr
pop
arpl
dec
data16
push
cld
inc
clc
aas
pusha
scas
push
push
push
bound
hlt
mov
popa
cmc
sub
out
in
push
sbb
push
arpl
lods
sti
inc
pop
lea
sbb
les
int
add
jg
sbb
pop
sti
adc
jmp
jp
or
call
mov
popf
mov
aam
and
sub
add
jle
roll
mov
aas
loop
mov
cmp
sub
push
sbb
sbb
mov
mov
push
sub
jmp
mov
mov
lds
int3
mov
pop
imul
mov
incb
mov
aas
sub
test
mov
fdivrl
adc
notl
mov
mov
or
and
lcall
neg
cmp
xchg
push
arpl
push
inc
pusha
pusha
mov
mov
in
lock
mov
rorb
adc
stos
cld
mov
mov
fsts
adc
stc
xchg
ret
orb
rclb
pushf
clc
push
ret
loopne
mov
jl
dec
insb
lret
jno
jne
xor
orb
pop
cwtl
jo
jns
push
adc
insb
mov
or
xor
mov
dec
adc
test
sbb
sbb
xchg
fiadds
dec
or
adc
mov
roll
ret
aad
sub
pushf
ja
data16
and
cmpsl
dec
xchg
shlb
aaa
xchg
mov
ljmp
xchg
shl
dec
dec
fldl
push
xor
or
inc
push
cmp
jecxz
fldl
and
cmp
dec
stos
lret
in
mov
mov
out
rolb
mov
pop
mov
push
fimull
xor
and
fadds
sub
aam
das
mov
enter
outsl
sub
mov
mov
fldl
or
or
sub
negl
jg
or
jl
cli
dec
mull
movsl
punpckhwd
add
hlt
shlb
jbe
imul
mov
xchg
flds
dec
xchg
repz
cli
in
loop
jo
add
xor
loop
push
adc
mov
mov
pop
or
int3
jge
sti
enter
fists
fldt
or
and
mov
jbe
sbb
mov
in
outsb
leave
test
or
push
sub
les
or
inc
fisubrs
andl
adc
cmp
fisubrl
les
lea
out
push
outsb
mov
test
sbb
sbb
int
or
fadds
pop
and
jl
cmp
sub
jge
xor
inc
cltd
fisttpll
dec
imul
enter
nop
xchg
xchg
test
and
cmpsb
mov
sbb
dec
and
push
movl
and
rorl
pop
add
sahf
and
gs
sbb
push
jnp
clc
inc
aas
add
shlb
adc
clc
mov
inc
pop
adc
scas
adc
sub
dec
pop
adc
sbb
add
jno
scas
mov
fldl
xchg
mov
push
push
stos
mov
sub
dec
xor
mov
shl
jo
imul
jbe
out
cs
call
jl
lds
push
repnz
add
xchg
ret
mov
pop
or
or
sub
inc
sub
push
fistl
les
test
fsub
adcb
out
cmpsb
rcrb
pop
xor
and
lea
imul
frstor
in
leave
mov
in
testl
popf
cmp
pop
jmp
mov
cli
je
lcall
rcrl
cmp
fincstp
into
sbb
jae
sbb
lock
sub
sahf
and
rcrb
pusha
sbb
and
sbb
pop
sub
xchg
popf
sub
loopne
dec
cmpsb
cmc
adc
loopne
out
sbb
sti
pop
pop
shlb
inc
rorl
lahf
call
mov
fs
shll
sub
sar
xchg
add
adc
dec
popf
and
jp
mov
jmp
or
dec
in
call
insl
jl
add
sbb
sbb
in
and
pop
sbb
add
fsubr
repz
subl
xor
popf
push
dec
lods
push
in
iret
mov
iret
ficompl
adc
mov
fsubs
sbb
idivb
push
cmp
xchg
jp
outsb
movsb
test
xchg
push
dec
add
out
ss
aam
arpl
pop
cs
rorl
mov
push
dec
test
test
inc
jnp
pop
xchg
lret
in
ds
sub
shll
pop
mov
xor
or
or
sub
insl
cmpsb
jne
cs
xorb
imul
pop
jb
test
cmp
dec
xor
loop
movsl
in
xchg
push
jg
xor
xchg
jge
es
fsubp
dec
sar
pop
cmp
xlat
push
push
out
mov
sbb
adc
or
xchg
mov
xor
les
lods
push
cmp
addl
push
inc
aaa
pop
scas
push
inc
icebp
sar
adc
xchg
enter
rep
int3
lret
movsb
addl
mov
outsl
mov
inc
inc
es
std
push
out
mov
mov
mov
out
jno
adc
and
fldenv
add
adc
inc
jbe
mov
movsl
sahf
aas
push
rcrb
adc
mov
test
lea
pop
xchg
aas
adc
in
mov
fnstenv
xor
fs
pop
xchg
xchg
jle
jp
dec
sub
adc
divb
and
ds
mov
jmp
jb
mov
mov
push
pop
inc
aad
cmp
dec
cmc
movsb
pop
addr16
jb
fs
adc
shr
mov
mov
xchg
outsl
xor
icebp
inc
hlt
icebp
add
sub
popa
xchg
sahf
pop
outsb
mov
cmc
adc
out
cmp
mov
pop
es
push
inc
aad
arpl
mov
mov
mov
loop
push
bound
in
xor
loope
mov
inc
sbb
push
iret
daa
xchg
xchg
arpl
mov
movsb
push
dec
pop
les
or
xor
int3
push
call
cs
ss
inc
pop
add
sbb
outsb
daa
add
pop
pop
mov
sbb
iret
movb
mov
pop
lods
mov
mov
and
scas
lods
mov
lock
iret
add
pop
xchg
test
push
ja
sub
les
das
rclb
push
aam
daa
adc
xor
sbb
das
test
push
aam
decb
inc
cmp
add
adc
and
imul
pusha
xchg
int
pushf
inc
jnp
fldcw
pop
cltd
lea
jp
fstpt
jg
push
dec
iret
lahf
cld
mov
push
sahf
jns
jno
inc
jp
or
jecxz
jne
xchg
mov
add
cmp
out
mov
mov
xor
ja
popf
mov
into
mov
xlat
xchg
in
pop
ja
pop
vunpcklps
mov
sbb
lret
sbb
stos
inc
cmp
sub
std
lock
add
mov
in
mov
scas
pop
ficoms
test
arpl
adc
xchg
in
inc
jmp
add
mov
lods
or
and
test
dec
and
push
mov
sbb
mov
pop
mov
sbb
lock
push
xchg
mov
sub
sbb
ds
push
js
cmp
popf
bound
mov
push
das
rol
out
pop
cmp
ljmp
pop
or
inc
add
icebp
lahf
test
add
dec
adc
out
mov
push
aad
push
mov
clc
enter
call
jge
adc
mov
xchg
aad
mov
bound
jle
mov
insb
repnz
ror
decb
xchg
pop
unpckhps
jg
pop
sub
ljmp
push
or
scas
pop
inc
push
shrb
stc
mov
movsb
mov
jl
stc
jnp
scas
mov
ljmp
sbb
imul
push
call
shlb
xchg
xchg
cmp
arpl
in
jl
xor
fildll
scas
aaa
push
jnp
cmc
lret
inc
add
sub
and
lea
pusha
xor
mov
ficoms
lock
push
into
jnp
fidivs
dec
hlt
leave
insb
add
pop
jmp
add
sbbl
lret
lret
int3
fs
lds
ret
jno
sti
gs
ss
ljmp
adc
add
mov
xor
incb
push
mov
dec
adc
in
dec
repz
aas
test
and
sbb
jge
loope
adcl
loope
arpl
clc
xor
clc
rcrl
pushf
les
jns
xorb
outsl
push
adc
fdivs
out
and
lock
fildl
jg
gs
cmp
jp
outsb
inc
sarb
test
inc
jg
xorl
popa
push
sbb
add
cmpsl
out
mov
jns
mov
rorl
push
cltd
dec
adc
mov
std
or
jp
inc
lods
ds
hlt
aaa
ljmp
or
mov
mov
push
rclb
cmpsl
imul
test
imul
bound
in
push
cmp
pop
mov
push
adc
push
sub
loope
dec
clc
pop
or
mov
sub
mov
ljmp
jb
test
cmpsb
mov
or
xchg
and
dec
pop
sbb
pop
stc
mov
inc
fs
jg
stc
test
popa
idivb
fnsave
xor
push
pusha
or
in
loope
lods
int
lock
test
inc
cli
mov
jnp
lods
sbb
push
nop
lds
adc
sub
gs
cli
fnstsw
lcall
push
sti
jae
movsl
mov
fstl
dec
sbb
test
and
popa
push
nopl
fadd
push
in
nop
pushf
fistl
and
fadds
cld
and
add
xor
inc
popa
movsb
and
mov
jg
pop
xor
out
xchg
fmul
adc
lahf
mov
push
jne
or
hlt
jns
adc
movsl
mov
and
leave
sbb
in
xchg
adc
and
dec
gs
jmp
jae
sarb
popa
mov
jmp
mov
add
rolb
mov
js
rorl
cmpsb
lds
outsl
lret
and
test
xor
mov
das
out
hlt
ss
out
mov
data16
jecxz
cltd
dec
cmp
mov
lods
push
mov
cmp
aad
jns
pop
or
loope
in
pop
pop
ret
cmp
pop
xchg
add
rcll
lahf
or
lea
sub
das
inc
popl
mov
fcom
sub
xor
and
movsl
repz
jl
aad
sub
shl
shrb
pop
xor
mov
pinsrw
in
cld
jg
cmpb
mov
mov
sub
xchg
popa
mov
xchg
mov
out
insb
in
and
loop
fildl
xchg
mov
lahf
jbe
dec
nop
mov
data16
xchg
and
ljmp
cmc
xchg
xor
aas
ret
inc
lea
mov
out
mov
cmp
loopne
jae
out
or
push
jno
sub
adc
ret
push
pushf
fnstsw
cmp
sbb
adc
lret
bound
cmp
adc
addr16
rclb
inc
xor
inc
and
hlt
cmp
pop
femms
ficompl
test
cmpsl
dec
dec
sub
pop
ret
leave
xchg
int3
xchg
lods
adc
xor
popf
icebp
sub
in
mov
insb
xor
call
scas
fs
or
inc
hlt
dec
rclb
repz
jl
ret
scas
shll
aam
push
jge
sahf
dec
push
sub
inc
push
xchg
push
mov
shlb
orb
dec
add
sahf
sub
lods
rcrl
ret
push
ljmp
cmc
pop
dec
je
cmp
jae
cmp
sbb
sub
xor
and
stos
outsb
movsb
mov
fildll
or
mov
aaa
pop
or
push
push
xor
push
cwtl
ret
loopne
mov
push
or
dec
pop
jle
scas
jb
mov
cltd
jne
popf
sub
add
pop
movsl
stc
loop
sti
fmulp
cli
out
lcall
rcrl
cmp
bound
cmpsb
leave
sub
fmuls
mov
je
popf
imulb
lcall
lret
pop
sub
dec
jecxz
push
xor
int3
fs
cs
adc
mov
lret
push
cmp
mov
jp
xor
leave
pop
js
push
push
shll
out
aad
sub
outsl
loop
mov
cmpsl
sahf
jno
cltd
cmp
decl
lods
sub
and
mov
add
jmp
xchg
into
adc
xchg
add
or
add
xchg
adc
jecxz
vmovlpd
stos
je
mov
cli
mov
out
pop
add
and
jne
inc
mov
dec
xor
jp
ret
ficomps
dec
sti
sub
push
mov
add
adc
arpl
je
xchg
loopne
mov
jb
push
loopne
loope
push
cmp
popf
pop
and
cs
or
or
mov
std
push
fstl
jp
out
aaa
pop
xor
popf
test
inc
xchg
mov
sub
loopne
sub
out
cld
aas
imul
cwtl
push
xchg
int
icebp
xor
sub
lahf
stos
push
daa
mov
sub
aam
js
fdivrs
icebp
neg
fisubl
sub
sub
dec
test
mov
icebp
and
push
sub
inc
mov
xor
dec
push
imul
push
fsts
xor
call
in
jg
outsb
sbbl
push
pop
imul
aas
mov
mov
sub
xor
leave
cmp
fldenv
repz
push
rorw
and
inc
mov
push
dec
dec
out
popf
and
inc
jle
stos
stos
sarl
idivl
mov
outsb
aas
test
xor
outsb
in
mov
inc
mov
add
out
aad
or
js
mov
gs
popa
dec
dec
enter
xor
fsts
stos
decb
cmp
sub
dec
lcall
mov
and
cmc
xor
leave
rcll
mov
aam
xor
stos
adc
mov
into
ljmp
out
lret
fwait
cmp
xor
mov
out
mov
mov
mov
jno
out
sub
cmp
addb
cmp
cmp
clc
pusha
inc
sbb
dec
fbstp
mov
dec
xchg
jne
fwait
cltd
xchg
inc
clc
scas
inc
mov
jmp
sbb
jge
int
jne
mov
mov
cmpsl
cmpsl
imul
int
hlt
sbb
in
push
pop
jge
jnp
aas
pop
cmpsb
mov
jmp
in
cmp
je
pop
movsb
and
or
xor
das
push
mov
push
cmpsb
out
jo
imulb
pop
aad
das
xor
lea
push
mov
inc
leave
pop
push
cmp
out
inc
lret
jns
pop
and
add
sbb
cmp
ljmp
mov
int
push
inc
sti
xchg
jp
push
mov
fisttpl
inc
xchg
aad
std
in
test
mov
in
cmp
inc
sbb
xchg
push
cs
cmpsb
lret
les
mov
jae
and
es
jb
xchg
mov
mov
xchg
adc
xor
jmp
repnz
lahf
or
test
xchg
fnsave
stos
insl
sbbb
cmpsb
add
inc
sub
jno
sub
out
cmp
pop
or
shrl
subb
outsl
fiaddl
cmpsb
jge
mov
movsl
mov
ss
push
aas
sbb
mov
cwtl
lock
xchg
cmp
add
clc
lock
sbb
js
mov
cwtl
xorb
or
adc
pop
pop
out
mov
sbb
inc
sub
jno
dec
cmp
and
fcomps
shl
nop
mov
repnz
test
arpl
cmp
xor
mov
and
loope
mov
fcmovnb
and
mov
int3
lcall
sarb
movsb
add
in
popa
pop
fisttps
lret
cs
push
das
clc
std
dec
mov
pushf
mov
movsl
subl
jo
and
outsb
jo
lea
sbb
aad
push
mov
and
bound
rorb
inc
data16
repnz
jnp
and
add
jns
stos
sub
pushf
rol
sbb
or
call
fcmovne
pop
lahf
xchg
jns
pop
stos
add
push
scas
dec
test
xchg
adc
dec
jns
jbe
lds
cmpsl
mov
std
xorb
sbb
add
das
add
sarb
inc
packssdw
fimull
xchg
sub
jmp
mov
jns
fisttps
and
sbb
jns
pop
addr16
into
mov
out
jle
sbb
les
arpl
dec
adc
rolb
fwait
xor
pop
call
addl
stos
movsb
mov
pop
dec
and
aad
xor
cwtl
lea
cmp
pop
dec
decl
lds
fs
jecxz
sti
or
ror
inc
pop
jno
pop
aad
test
push
xchg
into
or
cltd
in
cmp
popl
ret
cmp
push
in
adc
cmp
add
dec
push
mov
sahf
mov
mov
dec
fwait
mov
nop
ja
pop
cmp
and
shrb
adcb
pop
arpl
bound
adc
cli
inc
push
in
ds
arpl
popa
cmpsl
aam
out
jns
imulb
std
xchg
xor
movsl
pop
outsb
xchg
add
xor
and
insb
xchg
aad
inc
lods
out
lret
cmpsl
or
push
pop
jae
into
addl
das
or
shll
ss
loopne
leave
inc
cmp
adc
jne
loope
cli
fldlg2
dec
imul
rcr
test
popf
fdivl
ret
mov
out
sbb
add
andl
mov
and
int3
cmc
int3
dec
sarb
mov
lods
call
in
xchg
rclb
and
xchg
std
jnp
push
sub
or
mov
adc
inc
mov
inc
stos
test
std
cmp
jmp
insl
add
jp
mov
dec
gs
lock
mov
or
mov
inc
lock
adc
cwtl
int
mov
dec
test
and
or
cmp
sbb
inc
scas
mov
adcb
gs
out
hlt
sti
push
scas
enter
gs
push
mov
fidivrl
lods
adc
inc
fwait
addb
cltd
fidivrl
xchg
dec
leave
and
mov
test
jae
mov
ljmp
jl,pn
pop
mov
dec
lcall
outsl
ljmp
jno,pn
pop
pop
push
push
imul
ja
out
jl
out
adc
cmpsl
ret
andb
ficoml
adc
mov
lahf
sti
aam
jp
adc
loop
lahf
data16
clc
mov
jecxz
cmc
pop
or
bound
aaa
add
inc
xlat
out
push
pushf
mov
sub
dec
mov
mov
inc
insl
stc
xchg
das
push
test
inc
lock
imul
mulb
mov
or
xor
xchg
clc
xchg
iret
push
cmp
leavew
mov
out
xor
shlb
or
mov
adc
rorl
push
je
aas
loopne
cld
dec
test
mov
inc
repz
aaa
cmp
jo
pmovmskb
sbb
sub
iret
xchg
sbb
leave
or
movb
popa
mov
sbb
or
mov
pop
dec
adc
js
mov
xor
push
lcall
cltd
sbb
or
inc
rorb
sub
pop
loopne
mov
fdivs
mov
push
mov
mov
es
and
subb
jg
in
lret
mov
pop
mov
call
push
cs
test
pop
movsl
dec
pop
mov
push
andl
sub
cmp
xchg
xchg
xlat
std
push
mov
aad
inc
sti
sub
push
popa
inc
mov
pop
in
dec
lea
cld
jl
loop
xchg
out
loope
xor
mov
jne
sub
or
push
jl
js
or
int3
loop
in
stos
in
mov
xor
mov
outsb
fldcw
adc
and
lea
scas
shl
cmpsb
dec
dec
adc
add
xor
fwait
pop
or
or
out
cltd
sub
pop
push
das
jecxz
pushf
dec
adc
pop
es
outsl
mov
xlat
jge
lcall
in
rcr
xor
dec
rorl
call
cmpsl
xor
add
fwait
sub
sahf
fimull
pop
das
push
repnz
inc
clc
mov
loop
sub
push
xor
lods
mov
add
mov
fnstcw
in
pop
cli
pusha
mov
add
shlb
jl
fbstp
out
push
xchg
jl
inc
lock
punpckhwd
mov
push
pop
push
inc
pusha
sbb
stos
dec
cld
sub
ss
add
pop
lret
ret
lods
pop
pop
imul
sub
outsl
adc
ds
add
aam
aam
popf
and
lcall
divb
add
lahf
aam
xchg
stos
jnp
lea
ljmp
daa
jne
dec
xchg
cli
ret
dec
aas
add
ja
pop
shl
loope
and
pop
mov
std
sub
es
leave
lea
jo
cmp
jb
sarb
ss
xchg
mov
in
in
daa
icebp
pop
out
mov
or
pop
sbb
pop
adc
out
dec
pop
fs
inc
ret
imul
sahf
or
fucomip
leave
jo
push
adc
imul
xchg
movsl
iret
out
jnp
aad
mov
int
enter
xchg
imul
sahf
adc
jecxz
jnp
jle
xlat
insl
mov
sbb
mov
cmp
fnsave
sahf
mov
dec
lret
call
gs
mov
cmp
test
rcll
adc
add
mov
and
adc
jg
test
cmc
scas
fcomip
addl
pop
sub
lret
out
in
lcall
rcl
loope
xlat
out
clc
mov
out
cmc
jne
or
call
sbb
sub
push
insl
push
popa
xchg
and
in
sub
push
cli
xchg
mov
cmp
and
aad
push
int3
sbb
xchg
int3
push
mov
push
push
fildl
popa
cwtl
pusha
mov
mov
xorl
jnp
push
pop
mov
iret
hlt
lock
xchg
mov
jecxz
ljmp
rclb
xchg
mov
scas
rorb
movswl
adc
xor
pop
sub
aaa
in
mov
cmpsb
jmp
outsb
mov
push
out
lea
sbb
sbb
call
mov
inc
ljmp
ljmp
mov
stc
fstpl
add
mov
mov
test
ret
sbb
mov
xchg
xor
sbb
cmp
das
mov
mov
adc
fs
lret
shlb
dec
jns
rorb
push
mov
mov
clc
xchg
cmp
ss
cmp
dec
ret
dec
cmpsl
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
cltd
mov
jp
add
jp
xor
lock
lea
aaa
rcrl
lahf
push
iret
cli
cmp
dec
mov
shl
jnp
les
mov
rol
adc
xchg
fsubp
into
ss
outsl
adc
cmp
cmpsl
xchg
prefetchw
pop
and
push
jns
pop
inc
arpl
sub
add
cmpsl
les
test
and
jb
mov
test
xchg
mov
dec
jl
nop
cltd
sbb
int3
in
dec
push
jle
pop
jae
pushf
mov
jle
daa
push
cmpl
mov
jno,pt
xchg
mov
pusha
add
cmpsl
jle
incb
jno
movsb
lret
mov
dec
loope
push
test
jp
ds
rep
pop
inc
xlat
cld
dec
arpl
push
cmpsl
dec
addr16
ss
and
and
or
fisubs
jbe
stos
stc
into
xchg
sbbl
and
inc
dec
shl
sub
cs
inc
mov
fldl
pop
and
cmp
stc
mov
addr16
in
jle
aas
adc
push
dec
imul
mov
cmp
sahf
popa
jno
es
leave
shrl
xchg
pop
icebp
adc
pusha
lret
iretw
cmp
mov
cmp
ret
xlat
cli
in
ljmp
movsb
lret
pop
daa
jge
and
mov
sbb
dec
mov
xchg
dec
cmp
cmp
mov
and
push
dec
daa
add
insb
ret
mov
lcall
dec
xor
mov
stos
dec
jecxz
xor
arpl
or
mov
push
shlb
shlb
cmp
nop
or
pop
test
movsb
xlat
cli
and
shlb
gs
cmpsl
testl
push
out
mov
cmp
inc
test
sub
add
clc
cltd
and
mov
arpl
push
aas
add
push
add
pop
inc
mov
ljmp
js
dec
mov
sbb
ret
scas
cmpsb
popa
je
in
push
and
sub
imul
sub
insb
test
fcmovbe
mov
lret
adc
xchg
xchg
pop
dec
movsl
xchg
dec
ret
ret
mov
fnstenv
arpl
adc
filds
adc
ret
xchg
dec
xchg
in
adc
mov
or
sub
cmp
pop
jmp
mov
repz
jl
mov
js
lcall
pop
jnp
int3
sub
loope
jmp
sbb
push
lods
test
mov
dec
xchg
add
daa
adc
inc
dec
nop
add
adc
lahf
fsubrs
punpcklwd
mov
ds
pusha
jge
sub
lret
iret
pop
xchg
jno
ficoml
icebp
jmp
push
fwait
adc
xor
mov
adc
adc
jge
push
sbb
mov
and
loopne
call
loopne
imul
or
stos
cmp
cmp
mov
mulb
jae
or
or
mov
mov
jge
xchg
sub
xchg
mov
xor
and
fadds
jne
push
add
rep
dec
xor
fnsave
out
rolb
lock
dec
rorl
and
in
sbb
fstpl
xchg
xlat
jns
cmp
add
repz
adc
int3
mov
mov
scas
add
jg
or
push
inc
enter
aaa
cmp
lret
setge
sbb
test
shll
add
repnz
dec
adc
dec
cmp
jl
mov
mov
xchg
xchg
jne
xchg
rolb
mov
out
xor
sbbb
sti
push
mov
jp
xor
inc
stos
pop
adc
or
outsb
cmp
popf
pop
pusha
or
or
jle
shll
int3
repnz
or
in
sub
stos
pop
xorb
jl
mov
cmp
or
ljmp
fs
fwait
popf
pop
enter
aam
pop
push
xchg
inc
int
js
aaa
incb
insl
daa
mov
cwtl
and
call
adc
or
inc
fsubl
sbb
fadds
cmp
loop
es
ljmp
or
or
add
or
sti
inc
adc
push
push
adc
scas
into
pop
push
fidivrs
lock
cmp
sub
jb
add
push
xchg
stos
mov
jecxz
cmp
sub
push
cmp
ss
push
shr
mov
into
insb
dec
jg
mov
sti
push
jp
in
and
sbb
inc
into
rolb
int
fcmovb
jle
or
mov
add
fldcw
lret
fwait
out
pop
out
push
pop
inc
xor
sbb
push
mov
xchg
imul
push
adc
test
pop
xlat
jnp
adc
push
sbb
mov
add
xchg
and
mov
xor
ja
mov
push
or
mov
inc
add
or
loop
lret
xchg
xchg
mov
xlat
fisttpll
mov
clc
lds
jg
pop
shl
pop
loopne
adc
push
jmp
fsubrl
sbb
add
mov
mov
int3
scas
jo
cs
jb
inc
jns
xor
mov
mov
in
dec
inc
test
xorb
and
sbb
or
mov
jbe
enter
xchg
addr16
mov
test
test
aas
fisubl
mov
repz
movsl
ror
loopne
xchg
dec
mov
dec
cmp
cs
ret
mov
mov
push
sbb
dec
cmpsl
popf
repz
scas
mov
jge
adc
ja
mov
popf
dec
dec
lea
sbb
fisubrs
jb
scas
mov
daa
xor
sub
sub
and
pop
cmpsb
xchg
mov
outsb
inc
adc
lret
sbb
cli
push
pushf
orb
popa
mov
or
xchg
std
andl
movsl
mov
arpl
ret
out
stc
mov
xor
test
inc
frstor
mov
mov
lea
fsubrl
dec
dec
push
insl
out
jnp
sarb
push
mov
mov
fwait
addr16
xchg
fmull
icebp
pusha
movsb
subl
aaa
incl
iret
sub
fcmovne
cs
inc
pop
pop
out
aas
mov
mov
nop
pop
cmp
je
or
in
insl
adc
add
out
xchg
and
pop
fs
xor
mov
mov
push
unpcklps
gs
jb
pop
stc
dec
cli
js
icebp
sbb
icebp
mov
ja
push
and
popf
pop
nop
sbb
mov
out
testw
leave
test
sbb
fwait
push
mov
rclb
rcrl
and
jne
aaa
mov
lcall
mov
or
in
pushf
ja
sub
adc
pushf
orb
jnp
adcl
and
mov
cli
add
jecxz
fwait
jmp
sbbl
push
sub
loop
mov
fcomps
mov
aam
pop
arpl
xchg
sbb
pop
loope
std
inc
and
fdivp
xchg
xchg
out
adc
jbe
jnp
test
fs
pop
inc
subb
sub
adc
mov
xor
and
bound
fildll
lock
pop
jge
mov
mov
nop
and
jbe
lods
xor
daa
or
cmp
and
cld
dec
in
loopne
or
adc
popf
push
rclb
mov
out
fldenv
bound
fisttpl
pop
movsl
sub
mov
cli
mov
add
clc
sbb
adc
cmpsb
sbb
pop
dec
fisttpl
lret
out
movsl
es
mov
fmuls
sub
cmpsl
xchg
dec
jmp
mov
testb
sbb
and
jp
enter
shrb
adc
mov
push
in
sbb
in
mov
insb
shr
pushf
outsb
clc
pop
call
mov
and
xchg
inc
rorl
in
mov
jge
fcmove
push
in
adc
cmpsb
rorb
dec
mov
test
mov
sub
ss
das
jl
adc
in
and
xor
xlat
and
cmp
rcrl
imul
mov
fisubs
pop
jne
rcll
out
xchg
das
or
cmp
loope
roll
xchg
mov
ret
xor
frstor
aaa
movl
stc
dec
inc
loope
xorl
sbb
test
fsubs
and
mov
je
scas
adc
mov
sub
stos
push
jbe
cmc
and
scas
inc
movsl
mov
clc
xchg
ss
imul
pop
out
adc
inc
ljmp
divb
int
sub
fistpll
push
dec
out
xchg
enter
rorb
mov
jmp
jns
fldcw
dec
aam
cmp
push
sub
les
inc
or
clc
test
rep
leave
movsl
subb
dec
cli
pop
cmpb
mov
filds
gs
outsl
pop
lods
stc
outsl
jmp
loope
adc
mov
mov
dec
adc
mov
test
mov
outsl
add
xor
cmpsl
sub
sbb
movsb
push
gs
pop
dec
mov
sbb
inc
out
fs
jne
sbbl
mov
mov
cltd
pop
jg
sub
or
mov
mov
sbbl
out
cld
out
int
lret
jp
pop
js
insl
ss
jo
test
pop
xchg
shl
fs
mov
sub
and
repz
jecxz
and
xor
sbb
push
mov
xor
xchg
je
jae
lock
xor
outsl
lock
cmp
inc
add
xor
mov
inc
mov
jb
mov
rclb
shrl
sarl
dec
sub
je
mov
lahf
iret
and
pop
sti
lret
sbb
lahf
lods
addr16
fs
inc
push
xor
xor
or
jecxz
inc
dec
xor
xlat
push
jbe
mov
xlat
sub
je
pop
xchg
jle
push
cmp
enter
out
mov
je
add
push
outsb
jge
cmp
sahf
mov
lret
in
sbb
jg
inc
inc
cmp
cs
jnp
push
and
xchg
in
stos
cmp
insb
sahf
xor
jmp
mul
dec
arpl
push
testb
or
gs
cli
add
jae
pushl
adc
jbe
jnp
xchg
pop
mov
pushf
mov
inc
aad
mov
fdivrp
mov
ljmp
insb
add
adc
or
sbbl
mov
xchg
ret
push
xchg
or
out
lahf
mov
test
jae
fwait
lock
loope
nop
cmp
mov
or
adc
mov
mov
mov
lcall
fisttps
lods
push
sub
sbb
pusha
fldl
mov
or
xor
shrb
mov
or
or
push
push
loopne
xorl
and
nop
dec
incb
xor
and
fnstcw
test
inc
lods
icebp
outsb
and
movb
pop
pop
test
ret
jbe
dec
sub
jp
inc
push
mov
bnd
jp
dec
mov
popf
sub
mov
in
sbb
and
out
mov
xor
sbb
stos
fcmovu
cmpsb
lret
andb
xchg
sbb
xchg
add
inc
adc
out
das
and
pop
es
xor
and
loope
cmp
inc
mov
fsubl
mov
insb
xchg
iret
in
mov
mov
scas
rcrl
outsl
jp
in
addr16
aaa
insl
fisttpl
or
xor
push
dec
mov
adc
fisubl
add
popa
addr16
fwait
mov
mov
leave
mov
sbb
or
in
push
jl
clc
mov
pop
jp
inc
andb
xchg
lock
inc
mov
dec
pop
insb
call
inc
cwtl
xor
sti
or
test
pusha
xlat
jo
inc
adc
mov
cld
enter
out
std
dec
mov
lea
lods
lock
ljmp
mov
mov
sub
int3
lahf
je
xor
jmp
sbb
repz
ds
ret
jns
mov
jmp
and
adc
and
iret
xchg
les
testb
int
or
sub
adcb
pop
sti
cltd
mov
and
pop
aas
sub
sbb
imul
fwait
inc
sbb
scas
lret
int
jge
aaa
and
or
sbb
sbb
call
jl
pusha
and
es
out
lret
imul
or
xor
mov
popa
lock
and
sar
sub
dec
js
sarb
aam
mov
inc
roll
sbb
negb
test
mov
aas
sub
or
or
sahf
negl
mov
in
out
popa
lret
test
jb
lds
out
mov
xor
fwait
inc
sbb
sarl
cmp
jnp
sub
test
xchg
outsl
add
sti
push
cmp
push
mov
pop
push
pop
aas
divb
jbe
outsl
cmpsb
sub
xor
std
mov
ds
shrl
mov
cwtl
test
mov
and
sub
das
pop
jl
adc
xor
lods
jecxz
cltd
inc
sbb
jbe
pop
xchg
sub
insb
mov
loopne
xchg
pop
test
into
popa
lcall
call
dec
jg
adc
xor
sarl
xor
hlt
add
mov
lret
repz
xor
and
jmp
adc
das
cld
out
mov
ss
inc
aaa
mov
pop
test
mov
daa
pop
sbb
inc
cmpsb
inc
in
cmp
je
inc
cmpsb
in
or
js
adc
loop
or
sarl
fstpl
loopne
mov
imul
sub
push
jns
pop
mov
lds
mov
ljmp
jmp
in
mov
lea
xlat
fcmovnbe
adc
imul
pop
test
sub
pushf
ss
sbb
ss
xchg
into
fidivl
shll
test
or
pushf
sub
insb
addr16
and
popa
cmc
xchg
cltd
dec
xchg
inc
jmp
fsubr
insb
aad
dec
popa
aad
pop
add
popf
push
lea
adc
cmp
xor
add
xchg
shll
adc
and
dec
inc
pop
test
lcall
std
cmpsl
add
mov
mov
jb
es
loope
mov
mov
in
js
xchg
cmp
xorb
lret
pushl
int
stc
pop
arpl
dec
xor
in
popa
xchg
mov
pop
and
sbb
rcrb
or
pop
inc
fisttpll
inc
cmc
xchg
sub
push
sbb
fsubl
xchg
mov
fstpl
push
psubb
js
nop
fnstcw
loopne
pushf
mov
bound
push
dec
sarl
subb
xor
mov
jbe
pop
test
jge
add
cmp
or
sub
push
xchg
mov
pop
push
stos
shlb
xor
or
mov
loope
add
inc
sar
mov
mov
mov
jmp
inc
into
rorl
mov
fdivr
xchg
lea
int3
push
shl
imul
inc
pop
sbb
ret
fimull
inc
cmpl
jle
test
in
hlt
mov
cs
js
mov
mov
pop
lret
stos
sbb
xor
dec
mov
cmp
cltd
das
mov
push
cwtl
push
or
cmp
icebp
sub
mov
dec
loopne
adc
cmp
dec
mov
add
ljmp
pop
inc
inc
enter
dec
add
lods
add
cmp
xlat
pop
shl
or
mov
lock
adc
push
test
shlb
add
in
and
outsl
out
dec
test
movsb
pop
into
ror
and
scas
add
lret
fdecstp
add
scas
jae
mov
xor
or
gs
les
cli
bound
mov
inc
das
jmp
je
inc
sub
mov
jae
loopne
rorl
xchg
pop
into
pop
jl
lahf
adc
xor
arpl
jb
das
cmp
addr16
xchg
in
les
ficoml
and
jge
dec
pusha
xchg
mov
lret
sti
scas
loopne
xchg
test
leave
fdivrp
xor
cltd
jae
xchg
ss
out
xor
sbb
push
inc
sbb
sub
jb
push
xchg
pushf
cltd
sub
mov
cmp
lahf
lahf
int
movsl
mov
fcmovnu
adc
stos
sub
inc
pop
xor
retw
sub
lret
sbb
sub
and
mov
pop
fmull
test
push
cmp
xchg
jmp
mov
out
pop
xor
sub
push
mov
mov
mov
pop
mov
mov
xchg
mov
outsb
xor
mov
mov
movsl
dec
mov
mov
in
mov
mov
decb
inc
xchg
imul
cmp
repnz
shl
sub
or
or
cmp
sub
dec
test
pop
nop
call
mov
inc
mov
inc
mov
jl
jno
sahf
xor
cli
mov
cmp
in
ljmp
nop
jle
sbb
add
pop
xor
adc
adc
rcrb
ljmp
aad
xor
imull
add
sarl
add
jge
lret
imul
mov
xchg
cli
xor
push
or
out
pusha
or
insl
jl
out
dec
or
lret
jae
dec
mov
mov
xor
jbe
jle
sahf
and
xor
outsl
imul
aas
sub
addr16
pop
mov
filds
test
or
stc
jnp
or
mov
cwtl
push
in
inc
lcall
sub
leave
mov
xor
add
sbb
pop
adc
mov
pusha
lock
push
fsts
adc
test
jp
fisubl
daa
pop
bnd
fs
cltd
and
add
shll
cltd
icebp
fimull
je
fidivrl
call
add
xchg
add
movsb
sub
in
leave
sbbl
xor
leave
fldenv
das
adc
mov
test
shr
in
inc
cwtl
lahf
cltd
mov
push
and
ljmpw
or
xor
fiadds
mov
roll
jp
inc
push
cmp
and
iret
shll
xor
push
push
and
pop
xor
or
mov
push
mov
or
mov
pusha
stc
lock
or
pop
jno
cmp
bound
les
jp
xchg
movsb
and
not
lret
lret
out
sub
xchg
and
lret
jmp
popf
iret
mov
lret
jns
popa
pop
mov
test
push
adc
cwtl
sbb
mov
les
lock
mov
inc
add
cltd
jle
add
test
pushf
mov
repz
xchg
fisttpll
push
sub
jbe,pt
xchg
lret
es
xchg
mov
cmp
or
lock
sbb
sti
nop
mov
sahf
adc
adcl
scas
out
xchg
lahf
and
test
inc
cmp
in
adc
mov
cmp
rorb
bound
leave
hlt
or
test
inc
push
xor
add
adc
out
xor
jl
jae
in
fcoms
push
adc
push
addr16
cmp
push
inc
or
or
leave
xor
push
es
aam
mov
lock
and
cld
xlat
or
sub
mov
mov
daa
gs
das
cmpsl
daa
xlat
xchg
fsubr
and
push
cmpsl
and
add
repz
flds
outsb
mov
lret
push
cmovle
jb
daa
and
xor
fs
cmp
jo
outsb
stc
or
mov
in
pop
push
inc
inc
lahf
notb
scas
pop
mov
in
cmpsl
imul
mov
xor
rcr
adcb
mov
ret
outsb
stc
add
push
mov
push
outsl
sbb
inc
adc
mov
jecxz
inc
inc
pop
add
pop
fcmovne
in
rcl
cld
cmpsl
popf
outsl
mov
adc
dec
stos
popf
rcl
push
mov
mov
inc
cmp
icebp
and
sub
aaa
jb
push
sub
dec
adcb
or
or
push
inc
test
test
jecxz
jo
xchg
cltd
aam
sbb
add
movl
jp
int
iret
push
jl
das
push
js
jg
call
sub
mov
adc
xor
ljmp
mov
cwtl
adc
xacquire
shl
cmpsb
sbb
lcall
inc
fld
inc
fisttps
lock
cmp
push
xchg
nop
adc
mov
add
stc
xchg
push
mov
sbb
mov
ds
sarb
stos
cmpsl
or
pop
lret
lds
loopne
xor
orl
inc
leave
out
cmp
out
xchg
or
or
or
testl
dec
mov
pop
sbb
push
pop
pop
int3
hlt
loop
or
pop
mov
xorl
add
out
repz
jae
mov
push
jl
inc
data16
notb
dec
mov
push
push
popf
pop
call
mov
test
push
call
int3
int3
ret
or
mov
adc
adc
jo
cmpsb
pop
idivb
jno
stc
jmp
sbb
add
out
in
adc
les
or
inc
push
mov
dec
insl
adc
pop
das
jnp
sbb
stc
outsb
sub
or
addr16
sbb
cmp
and
sub
dec
lock
inc
dec
add
sbb
sbb
es
lods
fsts
pop
cmpsl
test
push
test
cmp
xchg
inc
fnstcw
pop
dec
sbb
sub
les
pushl
xorb
mov
mov
xchg
dec
jge
repz
jmp
lea
sarb
lret
loope
gs
popa
adc
in
jne
insb
mov
mov
add
cld
jae
cmp
sub
sbb
flds
inc
adc
mov
call
mov
xor
jno
mov
cmp
sbb
ret
in
jle
or
sub
dec
xchg
lock
sbb
rorb
ljmp
outsl
xor
icebp
mov
call
fstpl
dec
push
inc
push
addr16
fwait
test
mov
enter
js
popaw
dec
mov
ja
mov
insl
xchg
mulb
mov
cmp
xor
pop
push
jg
ljmp
lds
jo
pop
sbb
and
insl
xchg
ljmp
push
push
fmuls
aam
rcll
mov
aam
mov
jmp
loope
fstpl
add
mov
jg
sub
adc
push
push
or
sbb
sahf
jp
movsb
cli
push
addr16
mov
int3
je
lods
jp
cli
negl
enter
arpl
iret
fcompl
adc
or
dec
or
ret
bound
sbb
pop
xor
and
loope
xlat
js
dec
cmc
sbb
test
cmp
inc
sbb
adc
movsb
and
mov
mov
or
jb
movsb
imul
loop
jmp
mull
pop
jge
push
out
es
je
jmp
loop
popf
stos
iret
loope
xchg
popf
aam
into
xchg
ret
jnp
pop
test
jge
xchg
add
ljmp
movsl
and
push
adc
jbe
pop
mov
adc
out
roll
mov
movsb
es
mov
rcrb
xchg
pushf
in
and
fiaddl
in
pop
cmpsb
nop
hlt
stc
xor
inc
cmp
xchg
push
dec
int3
jb
shrb
dec
subl
push
sarl
insl
add
cmp
cmp
out
xchg
mov
and
push
adc
adcb
sbb
fucomip
cmp
inc
sbb
scas
jge
push
xlat
loop
loope
dec
loop
ljmp
pop
lahf
mov
jnp
mov
pop
push
add
imul
jbe
in
push
test
testl
enter
dec
fwait
scas
loope
sub
push
xor
pusha
mov
sbb
mov
or
inc
lods
and
enter
test
xor
xchg
les
fs
lea
pop
movsb
dec
aaa
push
sarb
sub
pop
push
test
ja
dec
imul
incb
cmpsb
in
arpl
hlt
mov
xchg
into
pop
std
fimuls
es
sahf
fadds
nopl
jmp
xchg
stos
mov
or
outsb
ret
cld
add
das
mov
cmc
mov
jg
fsubs
push
dec
cmp
and
popa
cmp
or
test
sub
jmp
cwtl
sbb
mov
fs
pop
push
pop
adcl
ja
mov
scas
jae
dec
data16
push
mov
add
fcmovnb
adc
loop
out
cmp
cmc
icebp
push
dec
sbb
and
sbb
add
int
lods
mov
push
lcall
add
pop
push
pop
and
jmp
adc
or
loop
fimull
arpl
xchg
cli
das
mov
cltd
or
leave
mov
ja
pushf
pop
adc
jp
cmp
inc
mov
fs
cmp
rolb
es
sti
mov
lea
push
test
das
and
mov
jmp
push
adc
rcrb
push
sbb
fmull
push
and
xchg
lcall
rcll
in
xchg
push
mov
inc
sub
push
stos
into
or
or
lcall
jge
sbb
push
clc
loop
sbbb
push
ljmp
adc
data16
out
push
aad
mov
jb
insl
pop
inc
ret
out
mov
jl
loop
lahf
dec
jno
inc
sbb
sbb
int
std
dec
push
insl
sub
ja
adc
xor
rcr
shll
sub
nop
mov
mov
ljmp
or
sub
pop
jecxz
inc
cmp
outsl
lret
cli
test
xor
sub
sub
inc
mov
ja
fs
bound
xor
jbe
xchg
mov
mov
mov
rclb
cmp
cli
aaa
repnz
xchg
xor
xor
or
pushl
lret
dec
dec
cmp
mov
pop
xchg
sub
sahf
aad
cwtl
insb
div
nop
cmp
lahf
sti
pop
lods
jbe
add
movsl
adc
lret
fwait
subb
xor
es
dec
dec
dec
sbb
adcl
xchg
andb
inc
stos
out
cmp
push
xor
push
xor
fldcw
ja
stc
sbb
faddl
sub
roll
and
add
dec
dec
hlt
out
dec
and
adc
fwait
movsb
jg
cmc
push
push
pop
mov
sbb
or
inc
cmp
add
adc
xchg
xchg
pusha
jecxz
ret
push
test
ficoms
hlt
hlt
pop
push
dec
xchg
in
fnstenv
xchg
js
mov
cld
mov
jns
sub
mov
mov
mov
ja
jnp
imul
jb
jle
push
adc
nop
leave
hlt
stc
jae
jb
insb
cwtl
mov
or
cmpxchg
jnp
sub
push
into
mov
mov
jmp
mov
sbb
pop
mov
mov
add
sub
fidivl
cmpsb
add
or
daa
cmp
in
outsb
adc
xchg
mov
out
sbb
mov
leave
pop
sub
and
neg
repz
stos
movsb
dec
sahf
in
xor
inc
pop
mov
xor
pop
mov
sbb
sbb
mov
jg
ljmp
xor
lock
sub
xchg
sbb
bnd
and
insb
dec
cs
mov
iret
ds
rorb
daa
sub
loop
pop
je
sarl
or
cld
leave
xor
arpl
push
faddl
popf
fisttpl
mov
sub
sub
dec
movsb
lock
neg
ret
xor
mov
fcomps
and
outsl
and
push
sahf
outsb
test
inc
inc
sub
testl
mov
pop
in
cmpsl
add
rclb
idivb
jmp
stc
call
jno
jle
jo
fisttps
xor
pop
rcl
cltd
push
sub
cli
mov
lret
pop
bound
inc
mov
cmpsb
fdivr
jo
ljmp
cmpsl
or
xchg
xlat
mov
adc
hlt
pop
add
jle
mov
scas
fcmovbe
cli
out
sub
jno
jmp
dec
addb
dec
adc
jp
adc
and
sahf
or
ja
mov
jno
sti
cs
cmp
dec
pop
dec
mov
and
and
add
dec
jmp
mov
or
xchg
aaa
dec
dec
lods
xchg
int3
jbe
shrb
cmp
xor
sub
data16
hlt
inc
stos
mov
in
outsl
call
popa
insb
mov
mov
loop
lock
and
scas
mov
pusha
ret
std
jo
mov
adc
dec
iret
insl
imul
loope
inc
data16
ljmp
xlat
mov
and
fmuls
test
push
js
insb
lcall
je
divl
loop
xchg
test
xor
pop
mov
jg
orl
sbb
mov
push
rolb
and
cltd
or
jg
popf
imul
jne
mov
push
sub
push
sbb
mov
loope
mov
or
scas
cs
mov
xadd
enter
xchg
fcomi
fstpt
mov
lock
rcr
xchg
jl
daa
movsl
stc
repnz
jns
cmp
pushw
mov
inc
and
out
inc
adc
inc
ss
cli
mov
outsb
das
xlat
push
mov
add
push
mov
repnz
add
in
push
insb
cmp
mov
call
or
out
imul
sbb
dec
lahf
push
dec
cmp
lds
jb
fdivrp
jl
push
pop
sbb
inc
sub
ret
push
and
add
sub
dec
xchg
adc
inc
sbb
xorl
test
or
push
pop
iret
jp
fcmovne
or
pop
add
mov
xor
test
adc
in
mov
dec
jae
flds
dec
push
cwtl
cmp
sbb
cmp
cli
scas
out
and
inc
imul
out
pusha
add
cmp
and
push
int
sub
dec
cmpsb
adc
mov
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
jl
jg
lret
add
jp
mov
aad
shrl
pop
xor
jp
cld
cmp
int3
cmp
cmp
outsl
xchg
das
cltd
push
jne
xchg
mov
pop
lahf
cmpsl
cmp
ja
jne
jmp
gs
mov
loope
aam
dec
or
pop
into
ds
out
xor
icebp
shll
dec
aad
and
dec
lock
test
in
ss
adc
jmp
rclb
addl
mov
mov
mov
mov
sti
sub
lcall
add
pop
jmp
jg
xor
das
icebp
out
pop
xchg
cli
inc
mov
test
movsl
roll
mov
outsl
mov
pop
aam
pop
popf
add
add
inc
sub
loopne
ja
ret
mov
jns
mov
pop
mov
lods
and
sbb
xor
in
lock
sbb
mov
nop
ja
cmpsl
inc
scas
mov
jae
out
es
sub
or
jmp
push
and
ljmp
loop
jl
fstpt
aaa
mov
fisttps
and
sahf
push
inc
jle
push
hlt
sbb
lret
in
push
push
repnz
jge
ret
mov
stos
sub
cmp
or
orl
cmpsb
mov
cmpb
cli
in
gs
iret
in
stc
out
cmp
aam
outsl
data16
in
mov
mov
cmc
adc
ja
pop
stos
jae
imul
or
std
bound
cwtl
xor
bound
push
rcr
add
movsb
jb
mov
add
xchg
jmp
nop
xor
iret
push
outsl
or
pop
push
ja
cld
or
andl
jbe
mov
stos
sbb
movsb
inc
out
mov
cmp
pop
mov
outsl
mov
pop
or
sahf
ljmp
popa
not
data16
or
mov
jge
and
test
fcomp
push
xchg
lods
or
pusha
cmp
cmovno
js
cmpsl
xlat
pushf
push
inc
or
aas
sub
rcll
sub
gs
movsl
add
andl
mov
hlt
icebp
and
test
out
popa
push
mov
mov
in
mov
call
out
outsl
imul
shl
xlat
in
cmp
mov
enter
insb
fwait
jns
in
iret
test
sbbb
push
xlat
dec
xor
out
scas
imul
lret
add
shrb
inc
filds
push
sbb
jmp
je
push
xchg
dec
cmp
inc
popa
dec
aam
sti
outsb
movsl
sbb
inc
lods
or
xor
out
jno
lcall
js
sbb
push
gs
enter
dec
enter
notb
outsl
clc
daa
pop
mov
pop
stos
mov
and
addl
xchg
lret
jg
outsl
insl
pop
lods
lcall
adcb
pop
psubd
leave
jge
push
pop
lret
xlat
adc
pop
inc
fucomip
xorl
xchg
cli
mov
stc
enter
or
mov
arpl
inc
and
or
add
das
cmp
in
in
iret
and
outsb
pushf
xchg
sub
mov
add
in
insl
subb
jle
fsubp
jmp
test
int
leave
sbbb
sbb
outsb
cli
enter
push
scas
inc
test
aam
sbb
xor
cmp
cld
pop
sub
and
xor
es
ja
outsb
aad
out
scas
outsl
outsl
mull
push
push
stos
lea
add
stos
imul
imul
cmpsb
or
cltd
inc
inc
inc
repz
jnp
das
lea
mov
in
add
fsts
loope
jne
push
mov
jne
cmpb
hlt
stos
xor
icebp
dec
stos
das
leave
addr16
in
mov
sete
jle
fists
jecxz
xor
mov
adc
hlt
xchg
int3
jbe
ss
daa
and
cwtl
adc
fs
in
fsubrl
jbe
cmp
testl
push
inc
push
sub
js
std
je
jnp
ret
vprotw
arpl
push
stos
dec
lcall
sbb
xchg
out
mov
in
mov
cli
test
xorl
sahf
cmp
adc
jle
push
sub
dec
sbb
lcall
scas
cmc
add
sti
push
xchg
ds
adc
or
pushf
pop
pop
push
fwait
scas
popf
dec
sub
cltd
sbb
test
mov
outsb
mov
push
dec
ljmp
nop
test
pop
aam
mov
ret
lods
mov
fs
cltd
lret
sbb
sub
cwtl
push
cltd
adc
les
loop
sub
pop
js
sub
les
lods
pop
int
jecxz
or
mov
test
stos
mov
repnz
cli
dec
popa
out
pop
sti
lock
jne
mov
in
push
mov
mov
xchg
cmp
pop
sbb
lcall
hlt
or
inc
out
push
repz
daa
adc
test
stos
in
mov
loop
jne
mov
xchg
lahf
mov
mov
sbb
shlb
or
cmp
daa
mov
cmp
cmp
loope
jno
add
xchg
mov
daa
sub
cli
aas
push
adc
inc
fwait
int3
sub
movsb
cwtl
or
mov
ss
fcoms
inc
xchg
shl
push
xor
leave
and
or
fmull
js
mov
mov
or
push
mov
arpl
push
out
movsb
daa
sbb
mov
loop
xchg
add
jb
dec
and
fldenv
sub
mov
push
cli
jne
fisttpll
into
xchg
lret
pop
lea
int
lret
cmc
jns
shll
jmp
jae
mov
pop
lcall
jnp
je
sub
cmpb
addb
pop
adc
lods
dec
mov
xchg
js
rolb
pushf
lock
inc
sub
jl
adc
push
mov
addr16
rolb
inc
inc
cmpsb
inc
push
dec
pop
mov
daa
xor
sub
je
lds
dec
subb
popf
pop
xchg
cmp
push
pop
sbb
pop
scas
loop
jmp
fwait
mov
pop
loope
mov
and
jae
icebp
outsb
add
jo
pop
lret
sub
out
add
sbb
mov
or
and
js
sbb
cmpxchg
fmull
sbb
mov
add
mov
fnstenv
lahf
test
std
jle
adc
stos
dec
pop
xchg
and
psraw
sub
arpl
pusha
ret
stc
mov
push
jp
in
rcr
ljmp
out
aas
push
mov
nop
lret
mov
dec
mov
fnstcw
out
add
aad
pop
movsb
in
and
in
inc
or
adc
popa
jo
pusha
inc
or
gs
pop
in
shr
dec
or
sub
adc
xchg
lds
push
pop
dec
jae
andl
lret
out
jp
sub
test
fwait
jmp
lret
dec
neg
push
and
cmp
mov
insl
cmp
jno
or
in
or
cmp
xchg
jg
insl
loope
adc
jp
or
add
mov
std
pusha
sub
cli
adc
outsl
xchg
or
sub
mov
lahf
adc
data16
dec
jecxz
dec
sti
push
daa
cmp
jle
xor
mov
leave
ret
in
mov
add
mov
pop
or
push
rcl
and
int
mov
mov
outsl
add
aas
adc
dec
add
push
dec
pop
dec
out
icebp
pop
xchg
jmp
lret
shlb
aad
or
sti
adc
les
push
nop
push
jne
mov
mov
cmpsl
or
or
js
adc
cld
or
std
cs
cmp
int3
mov
inc
cmp
adcb
fstl
xor
gs
mov
mov
push
cmc
stc
mov
mov
gs
daa
dec
xchg
out
int
or
dec
loopne
lahf
sub
mov
push
add
pushf
sarl
je
test
mov
cwtl
cmp
cmpsl
or
or
outsb
xchg
pop
clc
sub
sub
fidivs
inc
cmp
xchg
sti
sub
iret
std
out
mov
jo
mov
out
or
outsl
push
push
sbb
push
xchg
pop
mov
out
cmp
mov
jns
lds
inc
ds
push
sub
stc
adc
or
outsb
mov
cbtw
pushf
xchg
mov
and
insb
dec
andl
add
sbb
mov
jno
cltd
int3
lods
jb
sbb
and
scas
cld
or
test
lahf
sahf
fstps
push
dec
xor
xchg
push
popa
pop
xor
push
jb
xchg
lock
imul
push
loope
push
lahf
sub
push
xchg
mov
ret
mov
push
int3
mov
imul
lock
test
in
cmpsb
mov
sub
xor
repz
icebp
inc
push
in
and
cmp
sbb
add
inc
xor
imul
aam
enter
repz
push
xchg
pushf
pop
jne
imul
stos
push
ja
push
push
push
push
jne
repz
push
push
jg
dec
out
shrb
pop
out
and
mov
pop
xorl
add
in
adc
call
aad
sti
pop
ficomps
pop
mov
mov
test
out
lods
popa
test
sbbb
mov
sub
adc
dec
jae
cmp
or
mov
xchg
cmp
rcrl
sbbl
and
sysenter
xor
push
xchg
jb
ret
loop
scas
inc
jmp
loope
inc
out
push
popa
add
or
add
jb
mov
sub
mov
int
or
dec
dec
fsts
sub
orb
cmp
pop
rorl
cmp
stos
cmp
and
adc
mov
or
popf
ret
jns
mov
orl
pop
ret
aad
dec
mov
xchg
sub
adc
add
and
jmp
mov
mov
cwtl
loope
lods
pop
inc
dec
lds
lret
enter
je
xor
add
sahf
hlt
es
ja
scas
scas
cs
mov
adc
dec
pusha
push
and
int3
loopne
pop
mov
data16
dec
dec
push
xor
repnz
fcoms
push
mov
int
sahf
jnp
ss
inc
aam
cmc
inc
enter
sbb
or
inc
sub
roll
test
loope
mov
mov
outsb
pop
mov
mov
sbb
popa
mov
xchg
xor
testl
mov
and
or
int
adc
inc
les
scas
lods
fldenv
pop
movsb
mov
out
scas
bound
outsb
sbb
test
mov
ret
cmp
test
cli
jns
cmp
repnz
nop
jmp
out
sbb
mov
imul
mov
sub
icebp
push
dec
les
sub
mov
cmp
add
cmp
fdivs
cmp
andl
push
movsl
nop
clc
pop
mov
add
ja
push
stc
pop
ret
inc
or
outsb
xlat
test
out
mov
imul
out
and
call
call
cmpsl
movsl
pop
insb
xchg
fsubs
xor
dec
jno
loope
xor
cmpsb
mov
lds
pop
jp
ds
add
in
aad
push
sub
dec
push
outsl
lock
fbld
scas
in
call
stos
add
inc
fwait
imul
cmp
mov
xchg
xor
std
inc
xchg
aaa
xchg
sbb
pop
inc
sbb
or
iret
push
lcall
pop
stos
aas
popa
sub
mov
repnz
mov
or
add
sub
adc
fcmovnu
mov
imul
mov
addr16
lds
jo
adc
ja
loopne
aas
arpl
mov
cmpsb
adc
lret
push
das
ss
lahf
push
sarb
popf
sub
pop
mov
xor
sarb
loop
add
fisubrl
xchg
dec
cmp
je
inc
jnp
je
pop
add
out
inc
sahf
xchg
fisttpl
add
pushf
and
clc
xor
test
loopne
shll
pushf
es
cmp
jmp
mov
cwtl
mov
repz
and
pop
mov
cmp
jg
fidivs
add
and
cmpl
je
sti
ret
push
mov
pop
movl
dec
out
movsb
add
mov
sub
xor
add
adc
sarb
pop
ljmp
cld
movsl
clc
frstor
adc
loope
ror
pop
daa
cmpsl
inc
mov
mov
cmp
int3
adc
fdivrs
or
jmp
or
adc
inc
ljmp
enter
in
ljmp
add
sub
pop
xchg
stc
out
pop
pop
outsb
xchg
lea
shrb
xor
movsb
xchg
jg
loop
and
gs
mov
mov
insb
fldt
jb
lcall
cld
jnp
add
lods
in
shl
or
dec
jno
outsb
push
sub
xchg
jl
scas
push
jnp
insl
xlat
mov
jno
insb
arpl
in
add
inc
sbb
data16
jecxz
sub
mov
mov
sbb
ret
push
out
andl
push
xor
roll
push
xchg
xor
jmp
loopne
sub
add
fsubl
les
mov
sbb
add
repz
addb
fwait
movsb
push
push
scas
je
jge
fstps
lods
clc
pop
adc
push
not
int3
add
movsb
in
push
add
mov
fdivl
pop
push
rcrl
popf
cmp
insb
lds
pushf
push
mov
inc
jg
test
scas
les
in
enter
sub
cmpsb
lock
mov
popf
jge
aas
push
cmp
mov
test
and
outsl
bound
jo
jbe
dec
xor
xchg
popa
clc
stc
outsb
xchg
mov
dec
scas
fwait
inc
dec
dec
test
test
fistpl
stos
repz
aam
outsl
insb
xchg
out
adc
push
aas
aam
repz
insl
stos
jge
stos
or
mov
push
and
sub
inc
in
push
lods
mov
sbb
outsl
pop
sub
pop
gs
dec
out
fisubrs
jge
jo
lods
in
nop
jno
mov
add
sub
push
xor
dec
data16
pop
pop
cwtl
ret
out
add
xchg
sarl
test
push
out
rcrl
xchg
add
pop
mov
mov
inc
js
mov
popa
hlt
cld
cs
mov
mov
dec
addr16
fs
aam
neg
out
pop
cltd
insb
xchg
jno
mov
mov
sub
fidivrl
fstpt
inc
pop
push
std
mov
je
insb
jo
out
cmpl
data16
jecxz
or
push
add
scas
mov
ljmp
xchg
daa
fsubl
repz
ss
iret
clc
pop
test
mov
inc
mov
sar
pushf
out
or
shlb
push
mov
stos
mov
test
out
dec
xor
fstps
bound
mov
cmp
stos
pop
cs
aas
lahf
sbb
and
fmul
push
cmp
mov
mov
mov
dec
mov
leave
das
sub
adc
jns
cmp
mov
add
in
mov
or
ficoml
jb
mov
out
inc
mov
loop
aad
mov
outsb
jl
jbe
mov
mov
jg
and
adc
out
leave
in
adc
cmc
xchg
cmp
sti
pop
cltd
add
out
jns
push
mov
aas
cmp
clc
clc
hlt
test
test
adc
xor
pusha
jle
rcr
jge
push
imul
in
push
jbe
xchg
jbe
mov
dec
adc
and
data16
daa
sbb
sbb
sub
push
pop
test
and
sub
sbb
and
filds
dec
inc
and
jmp
into
loop
stos
sbb
movsl
iret
and
add
add
push
lcall
xor
int3
mov
lods
repz
fcompl
mov
jae
add
inc
jl
scas
stc
mov
mov
push
movsl
loop
pop
adc
repnz
dec
out
cmpsb
cmpl
aad
insb
or
lods
imul
jb
sub
or
jae
rcll
int
fmul
decl
inc
pop
inc
mov
sbb
ffreep
loope
dec
mov
movsl
pop
imul
cmp
repz
mov
bts
mov
xor
xor
mov
out
cmp
ret
cmp
movsl
mov
or
mov
push
sub
mov
icebp
xchg
fdivl
ret
orb
mov
xchg
mov
add
iret
sbb
xchg
push
arpl
sbb
gs
pop
mov
flds
and
xor
repz
mov
outsb
inc
ds
jle
push
repz
sub
daa
push
fldz
stos
data16
mov
xchg
cli
cli
cmc
icebp
leave
daa
push
cs
pop
xchg
fdivs
and
cmpsl
int
xor
fadds
or
jae
add
sbb
inc
mov
pushf
add
xor
mov
xor
cltd
push
mov
mov
and
pop
cmp
ret
arpl
or
test
clc
sbbl
mov
sbb
pusha
sbb
inc
jmp
repnz
mov
lock
fxch
push
or
stos
mov
sbb
in
mov
dec
sbb
sub
loope
shr
push
call
call
cmp
ljmp
inc
xchg
lahf
aaa
sub
pop
loopne
outsb
mov
push
inc
out
pop
pop
into
cmp
mov
or
mov
scas
rcll
mov
adc
ja
sbb
push
ret
stos
ret
mov
jb
pusha
shll
mov
xor
and
xor
push
add
clc
mov
faddl
mov
push
neg
cmpsb
xchg
push
add
dec
and
jo
fidivs
lock
inc
dec
jmp
rolb
jmp
jb
and
daa
sub
clc
or
push
xor
dec
xor
dec
sbb
adc
dec
lret
fstl
fistl
xchg
cs
jmp
or
push
sbb
dec
sub
mov
xchg
and
ret
lea
jae
sahf
ds
sbb
mul
pushf
pop
or
cmp
mov
aas
addr16
xor
sbb
sbb
push
test
sbb
xorl
movsl
aad
dec
push
fidivl
call
cmp
mov
bound
fistpll
xlat
xor
imul
rol
scas
cmp
mov
and
js
mov
hlt
loop
ret
hlt
mov
jb
or
push
jp
cltd
cmpsl
sbb
loope
sahf
test
push
jb
mov
cmc
sbb
xchg
clc
cmp
roll
jle
es
rcrl
sbb
mov
shll
call
xchg
movsl
mov
in
arpl
test
paddw
je
test
or
push
mov
fcmovnu
and
outsb
cmp
mov
jmp
and
inc
loope
sub
int
inc
adc
shrb
jns
dec
jno,pn
arpl
fstl
mov
stc
push
sbb
sbb
mov
add
dec
add
push
popf
lods
icebp
dec
cmp
aad
idivb
xchg
pop
mov
sbb
cmp
nop
jns
lahf
mov
iret
leave
lcall
push
sahf
sub
and
cmp
fisubs
jl
push
push
push
xchg
pop
sti
xor
divb
push
push
or
dec
xchg
das
jmp
mov
jp
aad
pop
or
das
daa
shrb
mov
stos
dec
sbb
xor
cmp
cmp
icebp
add
push
jmp
jecxz
rorl
mov
mov
mov
scas
sub
jne
outsb
fsubrs
jmp
sub
mov
fistpll
lock
pop
adc
addr16
pop
dec
pop
sub
into
mov
stc
xor
xchg
cwtl
and
fwait
adc
fidivs
ret
cmp
add
test
and
lret
push
mov
xchg
cmpsb
insb
clc
jns
test
mov
outsb
jge
int
movl
and
mul
int3
xchg
loope
test
or
mov
mov
cvtdq2ps
sarl
xchg
add
xor
test
andl
pop
mov
add
out
pop
dec
mov
cmpsb
repnz
lock
sbb
add
cltd
fsub
int
stos
add
dec
call
nop
push
mov
loop
adc
loopne
out
fwait
mov
inc
mov
je
aas
stos
scas
das
jae
xchg
pop
inc
ret
push
out
cmc
and
pusha
lcall
or
mov
pusha
pushf
test
pop
into
xor
fcoml
xor
push
sti
lods
push
push
nop
mov
push
or
ljmp
rolb
into
lcall
push
js
push
push
xabort
mov
xor
mov
pop
push
stc
rcr
aaa
pop
mov
sti
fucomp
pop
sbb
sahf
adc
out
mov
imul
sbb
xchg
stos
sub
push
dec
movsl
dec
sbb
or
push
movsb
push
shl
and
ja
push
add
lcall
and
mov
fidivs
out
mov
jae
and
stc
ficoms
dec
jbe
sahf
push
stc
call
shll
in
jae
ljmp
cmpsb
imul
dec
in
js
clc
nop
test
push
or
test
movsb
in
aam
imul
inc
imull
mov
pop
xorl
insl
inc
fadds
xor
jne
lret
ljmp
out
jmp
pushf
and
aad
es
cli
imul
jnp
cmp
push
cli
add
adc
les
mov
xchg
add
clc
stc
mov
adc
sub
mov
push
addr16
jge
or
stos
sub
aas
jo
sbb
fnstenv
pop
insb
mov
call
adc
loop
fwait
push
sbb
pop
adc
gs
arpl
test
cwtl
cmp
hlt
mov
push
iret
pop
push
movsl
mov
test
mov
cltd
dec
in
and
dec
inc
outsb
push
push
scas
jns
pop
rcl
sbb
sbb
mov
scas
ficompl
scas
dec
mov
mov
mov
mov
jbe
dec
pop
es
outsb
scas
addb
push
mov
sub
mov
rcr
xchg
inc
jl
sub
leave
mov
mov
in
push
push
pop
shrl
bound
mov
shll
jae
out
lcall
jns
fidivrl
ffree
fnstenv
jns
sub
bound
rorl
mov
push
xlat
insb
mov
xor
std
dec
add
movd
pop
jmp
sbb
out
xchg
mov
insl
jge
push
int3
mov
fs
fdivrl
leave
xchg
inc
insb
icebp
lret
neg
ljmp
inc
jl
xlat
mov
les
or
mov
cmp
pop
or
pop
mov
xchg
pop
mov
aas
lahf
fbld
inc
outsb
pop
outsb
lods
pop
repnz
fstl
in
cwtl
sbb
pusha
adc
ja
test
stos
xor
sbb
in
out
mov
repnz
lock
adc
ret
mov
out
mov
mov
inc
mov
jb
mov
jge
repz
in
sub
mov
rcrl
inc
pop
xchg
xchg
adc
cld
dec
in
ret
and
scas
roll
popf
pushf
or
xor
subps
jne
jg
xchg
dec
sbb
cld
call
sbb
lcall
hlt
jg
cmpsb
repnz
pop
les
dec
ja
jbe
jno
inc
or
aad
aas
dec
enter
push
mov
adc
ds
vmovdqa
push
leave
jg
xchg
jge
fcompl
cmp
pushf
adc
xchg
nop
jecxz
sbb
push
sub
cld
cmpl
pop
add
mov
xor
minps
lods
mov
lock
pop
shlb
ds
cmpsb
push
sar
or
fimull
insb
add
aam
ljmp
push
cld
repz
mov
imul
pusha
repnz
outsb
or
out
jnp
mov
cmp
clc
lcall
push
or
in
sub
std
not
lret
push
xchg
mov
je
or
out
mov
mov
movl
push
cmpsb
add
mov
stos
nop
mov
sub
adc
js
loop
lock
dec
sbb
into
pop
pop
xor
and
rorb
je
mov
fisubrl
mov
call
lods
fcmovbe
dec
lret
or
insb
xchg
sbb
testb
jne
stc
dec
fimull
inc
shrl
iret
aaa
scas
ss
cmp
test
test
and
pop
and
pop
sub
sti
jge
adc
aam
aad
push
int
cltd
bound
push
adc
jae
icebp
jns
sub
fucom
cmp
das
pop
loope
jns
test
movsb
mov
popw
std
pop
mov
aas
pop
jb
ds
cmp
mov
icebp
pop
mov
dec
adc
insb
arpl
out
xchg
jo,pn
outsb
xor
jnp
mulps
push
pop
pop
insl
xchg
adc
mov
and
push
xchg
add
adc
in
movb
gs
je
push
mov
lods
jnp
fsubrs
dec
mov
clc
pop
mov
sbb
cld
add
andb
std
aas
andl
icebp
pop
xchg
popf
xchg
rorl
inc
into
stos
cmp
push
dec
repz
xchg
sbb
xor
ja
or
pusha
inc
out
pop
sub
mov
mov
push
ficoml
shl
lds
push
xor
inc
sub
pop
cmpl
dec
inc
jo
pop
jge
movsb
call
pop
das
arpl
into
cmp
add
es
ret
or
mov
inc
xchg
mov
xchg
stos
mov
push
shl
mov
pop
repnz
outsb
daa
stc
inc
mov
jno
stc
fldt
inc
popfw
sbb
arpl
lock
cli
jg
fwait
icebp
mov
mov
sub
jle
mov
sub
aaa
stos
shll
jmp
dec
out
inc
pop
push
shll
test
mov
adc
enter
daa
cmp
lret
cmpsl
or
outsb
out
or
add
mov
push
out
inc
jecxz
pop
add
in
mov
fadds
das
lcall
in
ret
jne
frstor
mov
imul
out
adc
sbb
mov
xor
popa
inc
sahf
fldl
loopne
out
enter
pop
dec
cmp
inc
cmpsb
sub
test
cmp
imul
push
iret
jnp
mov
xor
adc
mov
test
int
pop
test
jg
outsb
xchg
int3
movsl
mov
std
daa
cld
stos
jno
adc
mov
jbe
cmpsl
jmp
je
sbb
iret
ja
mov
mov
pop
mov
outsl
push
xchg
movsl
push
cmp
insb
sahf
ret
pop
ja
xchg
test
addr16
xchg
andl
test
lods
int
in
cmpl
sub
lea
mov
in
sahf
call
jno
pop
or
sub
stc
mov
jmp
sbb
dec
add
fldenv
jo
loop
sbb
jnp
mov
sub
test
mov
into
xor
lret
stos
sbb
xor
pop
iret
jecxz
sbb
lret
push
out
cwtl
lea
lods
cltd
arpl
jne
cmpsl
push
rcr
add
aaa
mov
xor
mov
push
cmp
jo
cmp
fwait
mulb
mov
in
enter
decb
gs
idivb
mov
xor
adc
fcomi
push
or
std
push
ss
or
push
adc
jbe
mov
out
popa
flds
mov
push
stos
fdivs
inc
jne
cmp
inc
out
mov
adc
xchg
daa
xchg
and
bound
mov
ljmp
or
xor
scas
add
mov
subl
add
adc
xor
test
sbb
arpl
mov
lret
rorb
pop
sbb
out
sub
pop
mov
sbb
mov
or
mov
mov
mov
lods
je
sbb
mov
loopne
pop
lods
int
mov
dec
mov
xor
pop
bound
ret
movsl
aaa
jne
ss
cmp
fbld
mov
xchg
iret
hlt
cmpsl
mov
mov
pop
mov
test
or
inc
enter
shr
dec
pop
dec
push
mov
imull
cmp
ja
mov
xchg
cmp
pop
jnp
lock
mov
and
push
mov
or
dec
shlb
add
out
imul
rcrl
inc
insl
in
sub
inc
dec
mov
lret
mov
aad
dec
lret
int
add
push
inc
ds
lods
inc
nop
mov
inc
or
dec
lret
pop
rcr
mov
pop
rol
out
sbb
sarl
adc
dec
out
out
aaa
shlb
mov
hlt
mov
out
into
jns
pop
icebp
pmuludq
xchg
jb
pop
ret
icebp
pop
outsb
sub
insl
imul
cmp
lcall
mov
aad
sti
dec
add
cmp
jl
mov
outsb
dec
xchg
or
push
pusha
lock
cmp
xor
sahf
dec
lods
xor
mov
addl
fcoms
mov
mov
mov
in
and
adc
aad
insl
cmpsb
fwait
inc
popf
xchg
xchg
adc
bound
jle
adc
je
aam
dec
cmp
test
pop
push
and
xchg
addb
cmpl
rcrb
jle
orb
jle
into
lcall
popa
dec
mov
or
outsl
dec
jae
mov
mov
lea
imul
std
and
sbb
mov
loop
xor
fcmovbe
jecxz
pop
in
adc
xchg
clc
test
xlat
repnz
sahf
jmp
sub
adc
movsl
imul
and
adc
inc
rorb
inc
jg
addr16
mov
flds
dec
cwtl
inc
subl
pop
test
ret
push
add
scas
rorl
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
movsb
cs
jp
add
jp
outsl
repz
nop
cs
mov
cld
nop
pop
clc
sbb
stos
gs
sub
mov
mov
popf
or
dec
inc
jnp
addr16
pop
push
movsl
xlat
sar
push
in
cli
in
mov
out
cmp
ficompl
pop
pop
lods
rclb
or
movsl
imul
sub
mov
and
xchg
ret
loop
lods
pop
mov
xchg
adcl
mov
insl
and
dec
jg
or
out
and
pop
add
sub
jmp
adc
je
cwtl
ds
push
popa
mov
loopne
mov
es
push
fs
add
fs
int
jp
mov
ss
fmulp
fsubrl
and
push
xor
negl
sbb
dec
rcll
popf
pop
jmp
in
out
fsubrs
fimuls
pop
push
push
push
popf
incl
call
dec
xchg
and
adc
sbb
dec
lock
popa
xor
popa
xor
mov
scas
sbb
sarl
mov
adc
xor
lret
rclb
arpl
mov
push
pop
repnz
movsl
aam
cmpsl
ds
stos
lock
sub
push
jnp
inc
mov
lods
popf
mov
es
mov
push
mov
push
cmp
test
cmp
cmp
imul
int3
gs
and
cmp
xchg
test
test
lods
insb
and
imul
test
pop
test
lods
ffreep
dec
stos
or
sbb
repz
xchg
movsl
pop
into
cmp
add
dec
ret
lea
xchg
lret
add
pop
xchg
xlat
add
jbe
dec
push
loope
adc
xor
popf
clc
push
ret
movsl
jg
mov
xchg
sub
push
inc
pop
stc
outsl
cmc
aas
mov
xchg
shlb
scas
imul
ss
xchg
mull
mov
push
pop
mov
inc
cli
xor
dec
mov
nop
mov
aas
call
addl
dec
jle
mov
pop
sbb
push
arpl
enter
pushf
scas
int
mul
push
cs
or
sbb
or
mov
or
lret
sub
dec
mov
or
add
cmc
aam
sbb
mov
jno
arpl
push
addr16
subl
in
xor
pop
push
mov
xchg
mov
ret
or
bound
dec
movsb
adc
int3
dec
das
push
mov
xchg
shll
sub
xchg
ljmp
sbb
ja
jb
into
push
gs
icebp
into
mov
sub
sbb
push
push
jo
sub
pop
inc
xchg
jbe
das
movsl
xchg
or
test
mov
push
gs
int
jmp
daa
push
mov
jnp
shll
mov
pop
lret
shlb
push
push
jb
lahf
and
ss
shll
repnz
hlt
imul
xor
cwtl
cmp
push
push
dec
out
aam
icebp
stos
subl
sahf
add
cwtl
mov
jmp
enter
xchg
lods
out
push
js
mov
pop
add
inc
add
daa
add
xchg
add
adc
out
enter
jmp
inc
ds
sbbl
arpl
bound
int
shrb
aam
lret
ret
iret
lea
repz
cld
push
push
repz
add
iret
mulb
cmp
dec
push
cmp
bound
jb
in
mov
lods
sub
add
pxor
lods
xchg
mov
in
ja
sbb
shr
gs
mov
fsubrs
outsb
cwtl
scas
push
enter
push
mov
pop
push
mov
push
jp
sti
sbb
test
jbe
insl
adc
mov
dec
pop
or
out
lea
rcll
mov
mov
outsl
xchg
sub
ret
and
jbe
sub
mov
je
lods
inc
ret
fsub
lcall
xor
pop
pop
mov
lahf
cmpsb
fdivrl
test
fistl
push
xor
daa
xchg
sahf
rorl
jg
movb
fs
test
lods
push
mov
mov
bound
int3
inc
add
clc
adc
pop
fsts
pop
out
xor
cli
or
insl
sarb
pusha
imul
stos
clc
andb
call
jmp
jno
pop
mov
sub
idivl
jmp
xchg
icebp
push
xchg
data16
jmp
or
jne
cmp
xor
ror
mov
loopne
mov
shlb
or
cs
arpl
mov
insl
mov
mov
dec
bound
rorb
lcall
fnstcw
lock
push
mov
inc
ret
xchg
outsb
or
dec
fcoml
pusha
mov
outsl
enter
in
ret
jge
sbb
adc
mov
adc
push
int
out
adc
loope
xchg
or
faddp
lds
pop
inc
cli
jb
fists
les
fmull
mov
mov
lcall
push
pushf
nop
imull
enter
adc
outsl
mov
pop
inc
mov
movsl
out
cwtl
jmp
pop
movsl
shl
clc
cmc
in
lds
sub
pop
lods
sub
test
pop
enter
cltd
xchg
shlb
enter
leave
pop
cmp
hlt
cmp
sahf
sub
incb
fistpl
shll
ror
add
sub
fwait
dec
sbb
mov
cmpsl
pop
mov
lahf
pushf
test
or
inc
daa
sbb
sbb
mov
mov
and
call
sbb
shl
out
inc
insb
inc
out
sbb
aad
fbstp
pushf
repnz
ss
pop
push
rclb
cmp
test
push
jmp
cwtl
mov
and
pop
xchg
bound
mov
mov
ja
movsb
addr16
nop
push
test
or
xor
add
icebp
xchg
inc
out
repnz
and
test
scas
inc
test
dec
into
arpl
xchg
add
arpl
xlat
sub
mov
in
xor
jmp
icebp
lods
sbb
call
dec
adc
jge
insb
and
jbe
push
cli
cmpsl
dec
or
adc
cwtl
mov
pop
fildll
lods
or
shrl
push
xchg
jmp
dec
pop
sub
dec
cmp
mov
cmp
add
repz
pop
div
dec
js
outsl
jmp
int
push
sub
pop
sbb
cwtl
out
js
addr16
mov
xchg
mov
mov
sbb
push
pop
jle
fdivrp
scas
imul
dec
sahf
jge
xor
dec
pop
jne
or
aaa
pop
icebp
sub
filds
aas
bound
dec
mov
pop
in
std
arpl
ret
push
in
mov
test
lret
mov
mov
movsl
outsl
jmp
test
push
into
cwtl
sbb
bound
movb
jp
adc
and
les
sbb
dec
push
jp
or
sbb
xchg
inc
sahf
loop
rol
es
sub
push
mov
jmp
movsl
orb
xor
adc
sahf
lods
out
cltd
in
loope
xor
mov
stc
jno
cltd
mov
insl
jmp
inc
repz
les
sbb
inc
adc
push
mov
ret
aam
ds
adc
jmp
out
mov
imul
test
ja
cltd
dec
test
cli
sbb
loop
movsb
xlat
sub
push
xchg
ror
push
inc
fmull
bound
pop
mov
xor
xor
scas
gs
jge
mov
inc
test
jae
pop
jo
xor
push
fs
adc
mov
js
imulb
push
sbb
cld
push
adc
stos
mov
push
dec
rcll
xor
and
fildll
mov
insl
pusha
dec
fwait
xor
inc
sbbl
pop
mov
fs
stos
ficoml
xor
mov
cld
fcomps
pop
inc
push
add
cwtl
outsl
sub
jo
lds
or
xor
sbb
sti
loop
lcall
pop
xor
fsubs
fwait
mov
fiadds
pushf
std
add
pusha
jmp
icebp
push
jbe
popf
int3
pop
lcall
flds
rorb
pop
jae
movsl
cmp
xchg
ds
pop
popa
push
stos
pop
inc
rolb
xchg
jge
daa
cmp
shr
xchg
out
pop
or
jns
lea
mov
jp
xlat
cmc
xor
aam
xchg
xchg
das
push
adc
push
adc
cs
int
push
dec
cmp
data16
stc
out
mov
xchg
or
addr16
jno
in
sbbl
gs
adc
push
sarl
push
adc
cmc
jp
js
test
hlt
lods
test
or
mov
push
pop
pop
push
jnp
xchg
dec
mov
inc
cmp
js
cmp
add
insb
mov
movsl
rorb
push
cmp
sub
jmp
scas
xchg
fcomp
into
mov
fs
repz
notl
dec
jle
push
lock
cmpsl
insl
mov
sub
jmp
out
ret
mov
fiaddl
and
shrb
and
pop
push
mov
lock
dec
mov
fsts
or
enter
in
lret
pop
push
mov
mov
pop
push
mov
ret
in
out
or
shrb
shrb
mov
roll
ja
xor
mov
mov
sbb
adc
sti
fidivs
sub
sbb
jp
mov
fsubrp
sbb
lods
leave
add
dec
in
or
dec
jmp
insl
pop
sbb
lods
int3
shrl
test
or
sbb
cmpsl
sarb
out
insb
jae
dec
jg
fwait
jo
ss
mov
sbb
arpl
shl
pop
gs
or
jg
mov
xor
mov
mov
mov
out
cltd
add
hlt
sbb
jmp
cwtl
cltd
mov
mov
cmpsb
fmulp
add
outsb
int3
and
xchg
das
mov
and
sub
pop
pushf
lock
pushf
jmp
cli
mov
filds
and
call
jae
xor
insb
xchg
add
or
sub
push
add
imulb
frstor
loopne
push
mov
push
insb
movsl
out
out
mov
mov
lock
lods
cwtl
in
mov
pushf
mov
dec
shrl
jmp
out
rolb
icebp
imul
movl
jecxz
aas
pushw
int3
mov
xchg
mov
sti
lock
pop
mov
out
xchg
or
mov
bound
loop
cld
cmpsb
mov
inc
outsb
pop
out
shlb
adc
mov
add
xor
jno
les
cli
out
sbb
mov
jg
cli
dec
fsubs
inc
cld
gs
sar
icebp
sub
test
stos
cmp
js
jg
jl
sbb
int
daa
pop
cmp
xor
das
jno
rcrl
or
jp
test
sbb
lods
mov
jecxz
insb
add
popa
push
addr16
xor
sahf
mov
int
testl
stc
sub
mov
ljmp
shl
and
arpl
dec
inc
pop
push
int3
stc
std
fisubl
sbb
or
bsf
movsb
mov
mov
push
in
mov
add
jae
adcb
dec
push
in
cmp
pop
jo
jge
push
mov
jo
es
nop
into
stc
add
test
jns
ret
ret
pusha
jp
and
inc
xchg
push
add
loop
stc
push
or
fucomp
pushf
fstpl
mov
or
mov
lods
sub
pusha
movsb
loopne
fwait
jge
clc
les
mov
adc
insb
addl
sbb
daa
into
in
gs
sub
repnz
dec
mov
push
bound
dec
xchg
inc
fdivrs
cmp
out
push
mov
dec
xchg
ret
dec
jae
cmp
push
mov
dec
fbstp
adc
aam
pop
movsb
repnz
jne
adc
test
inc
push
ljmp
dec
lret
pop
push
leave
js
sbb
bts
cld
lods
pushf
movsl
ja
sub
jns
xchg
jp
mov
rorb
jno
mov
scas
sti
mov
js
sbb
lcall
xorb
cld
and
pop
xor
pushf
jno
imul
xchg
jb
mov
jnp
in
out
jp
data16
or
stos
inc
cmp
mov
xchg
mov
hlt
imul
out
insl
xor
mov
xchg
in
jno
adcb
mov
adc
add
push
fcoml
enter
iret
pop
jo
out
mov
data16
pop
gs
inc
pushl
repz
jmp
pop
imull
mov
in
lahf
mov
sbb
jmp
jno
aad
sub
lcall
jge
aas
push
test
cmp
pop
hlt
and
inc
test
sub
dec
xor
and
jae
popa
push
jecxz
mov
push
jns
mov
and
pop
mov
ret
fmuls
and
xchg
mov
mov
loopne
adc
aad
divl
daa
jg
and
xor
negb
push
test
xor
lock
fs
inc
popf
push
inc
add
cmpsb
and
cmp
movsb
adc
cld
pop
xchg
or
repz
pop
dec
gs
mov
in
fisttpl
push
sbb
pop
pop
xor
out
add
pop
popf
xchg
jb
xorb
xchg
inc
xchg
cmpsl
push
jp
arpl
aaa
jb
sbb
fsubrl
lods
loope
cmp
xor
and
push
or
popa
cld
cld
in
push
or
xchg
mov
enter
jo
lcall
inc
bound
loope
and
or
int
cmp
jnp
cwtl
adc
scas
ds
popf
cs
push
rcr
lea
idivl
sbb
push
repz
int
lock
or
sub
clc
or
in
or
test
imulb
mov
pop
sbb
push
cltd
out
fcoml
sbb
mov
dec
push
or
imul
stc
push
xchg
test
add
mull
push
push
fnstsw
mov
mov
pop
jmp
ja
and
sub
ret
cmc
ljmp
stos
fldt
mov
sub
push
or
fwait
in
imul
movsb
iret
and
mov
and
push
aad
xor
mov
cmp
mov
arpl
add
jp
sub
bound
sub
cmp
inc
dec
jp
fcmove
test
in
mov
fwait
call
aad
inc
cmp
or
jns
adc
mov
sbb
aas
in
add
push
scas
movsb
stc
cmp
dec
dec
sti
fnstsw
push
jle
inc
jno
subl
leave
lret
mov
push
ret
loopne
sub
xchg
jnp
inc
xor
mov
mov
out
cmpsb
sub
or
lret
push
push
bound
push
es
jl
mov
ljmp
add
test
loope
xchg
mov
adc
sbb
push
adc
jae
adc
popf
cmpsl
into
or
mov
nop
or
mov
scas
or
xor
out
and
xor
cmpsb
inc
or
pop
loopne
jo
popf
hlt
les
aam
jge
out
lahf
dec
popa
es
int3
out
xor
out
inc
jbe
pop
xchg
inc
and
clc
fwait
mov
cmp
xchg
jle
pop
testb
sbb
cmp
outsb
xchg
mov
or
xchg
xlat
pop
in
or
push
jnp
dec
popf
sar
pop
xchg
inc
xchg
repnz
pop
fcomps
fs
call
cmp
mov
lea
lcall
add
jns
jb
pop
test
inc
out
mov
lahf
flds
mov
jnp
xchg
insl
loope
popf
repz
xchg
adc
loope
and
fs
pop
mov
in
out
mov
inc
stos
repz
test
fadds
or
enter
divb
and
adc
mov
push
mov
fcmove
call
mov
adc
mov
mov
mov
mov
in
not
and
push
sub
punpckhwd
std
push
enter
inc
dec
lahf
push
fstpt
cmp
sahf
dec
mov
iret
or
imul
les
dec
stos
aad
iret
mov
xlat
fnsave
pop
out
add
mov
scas
mov
add
fwait
loope
shlb
dec
ds
loopne
xor
pop
lret
inc
mov
jp
push
cmp
popa
xchg
insb
out
jl
ror
xor
insb
jno
insb
out
ja
mov
mov
jne
insl
pop
daa
mov
mov
mov
xor
out
mov
aad
js
ret
cmp
shll
and
outsl
fisubl
pop
xor
mov
dec
mov
insl
jle
mov
push
test
testl
fsubrl
push
and
ja
xor
nop
jae
xchg
jle
fnstcw
dec
cmp
inc
sahf
ljmp
mov
aaa
fs
adc
fwait
mov
aas
cs
xor
xchg
cmc
add
test
cmp
mov
cmp
sub
adc
hlt
sarb
mov
sub
adc
jbe
jo
arpl
cmp
xchg
aas
repnz
fcomps
es
test
mov
lea
cmp
sub
in
pop
js
shrb
adc
ljmp
dec
jae
pop
mov
sbb
in
leave
sbb
xor
cmp
cmp
push
adc
dec
lods
sti
shll
pop
lods
xchg
in
out
arpl
sbb
ret
jge
jns
movsb
push
adc
push
mov
testl
jp
push
sbb
fidivrs
xor
out
push
mov
jecxz
aaa
or
les
sub
xchg
aad
dec
mov
daa
jae
cmp
das
repz
push
mov
ficomps
pop
pushf
push
test
xchg
movsb
push
adc
xor
pop
mov
stos
decl
pop
sub
es
in
xchg
outsl
cwtl
mov
lea
or
cmp
xlat
hlt
jbe
adc
jge
andl
les
xor
stos
jno
imul
imul
lret
out
add
fdivrp
clc
inc
xchg
sbb
mov
pop
ds
lods
sbb
mov
add
sbb
popa
stc
imul
sti
or
sub
pop
mov
loop
nop
add
sub
pop
pop
ret
add
mov
popa
lcall
jo
xor
xchg
cmpl
scas
stc
adc
or
std
sub
cmp
sub
std
or
call
mov
jo
push
push
dec
sbb
inc
mov
hlt
loop
and
aaa
int
in
jne
xchg
insl
mov
stos
cs
cmp
in
ja
mov
inc
sbb
jle
loop
ret
inc
ret
jge
jg
mov
cmp
pusha
popa
int3
xor
push
ljmp
inc
fisubrl
lods
fisttps
sub
dec
pop
mov
or
inc
out
subl
pop
cmp
cmp
stos
mov
ficomps
add
insb
xchg
push
mov
pop
mov
mov
xor
mov
cmp
es
stos
xor
popf
sti
shl
in
xor
sbb
inc
stc
mov
fwait
lds
outsl
adc
loop
push
cmp
movsb
xchg
jo
mov
jnp
add
addr16
inc
add
ret
pop
sub
xchg
ss
arpl
shlb
negb
and
jb
imul
call
std
movsl
jl
adc
jmp
loopne
adc
rcr
nop
scas
xchg
cltd
imul
adc
ret
or
add
int3
fdivs
pop
pushf
loope
push
outsl
adc
test
sti
aas
ss
test
aas
and
jb
loop
mov
cmp
adc
nop
lcall
test
inc
fs
mov
shr
fldcw
sbb
sbb
xchg
stos
mov
mov
jmp
aaa
stos
adc
and
dec
mov
outsb
sarb
inc
iret
incb
fimuls
filds
out
push
ret
mov
nop
xor
fistpll
jecxz
sbb
jnp
adc
lret
xor
inc
cmp
lds
stc
mov
sub
sarb
addb
or
insb
lods
jge
hlt
lock
sbb
sbb
testb
jbe
lods
push
jb
or
fwait
cltd
js
mov
push
fcmovnb
cld
ja
int3
cs
cmp
jmp
xor
mov
scas
enter
pop
xlat
cmpsl
or
and
push
fsub
sbb
mov
mov
or
adc
cmp
adc
xchg
fwait
mov
iret
add
popf
out
cld
dec
push
mov
push
rol
gs
sti
xor
fists
ret
mov
lock
frstpm(287
mov
xor
push
in
or
mov
cmp
inc
dec
mov
int3
hlt
loope
cmp
pop
mov
imul
and
in
fimull
das
xchg
dec
popa
xorb
sarb
xchg
xchg
push
jbe
sub
fucomip
scas
pop
and
cld
fsubrl
aaa
jg
mov
inc
popf
push
pop
jae
inc
cwtl
and
iret
nop
out
dec
add
xor
jns
mov
add
faddp
stc
cmpl
lea
cwtl
push
out
jge
sub
clc
mov
jns
jg
inc
xchg
inc
xchg
into
lds
subl
ffreep
mov
cmc
sahf
loopne
jns
test
insl
dec
fldl
or
dec
outsl
xor
imul
adc
push
jle
push
stc
shll
stos
in
jg
xchg
inc
cwtl
or
rclb
xchg
faddl
ret
xchg
jp
mov
call
mov
inc
ds
xchg
sub
adc
or
or
fsubr
lods
adc
insl
lods
adc
push
dec
cmp
jecxz
in
mov
mov
mov
lods
inc
aas
jno
mov
hlt
sub
cmp
aas
pushl
out
movsl
mov
pop
mov
mov
mov
loopne
mov
inc
add
sbb
les
cld
push
lods
cmp
add
push
loope
push
cmp
sub
lods
mov
push
fucomi
ret
jmp
out
roll
popa
xor
pop
adc
xchg
or
dec
lods
out
pop
mov
lahf
scas
loope
cmpsl
loope
lea
mov
xchg
inc
icebp
mov
push
movsl
jg
mov
jmp
cwtl
movb
frstor
inc
pop
mov
cltd
hlt
int3
mull
aaa
or
xor
pop
or
ja
sub
push
sahf
dec
or
inc
jmp
and
insl
push
add
sbb
cmp
and
mov
mov
cmp
push
fcom
rcrb
or
imul
xor
jge
dec
out
scas
jl
loopne
mov
dec
insb
arpl
push
adc
dec
clc
gs
xor
and
jge
jns
add
inc
or
mov
cmp
shlb
and
xchg
fnsave
jno
and
icebp
filds
pop
mov
repnz
popf
dec
pop
sbb
sarb
xor
xchg
loope
xchg
stos
lcall
sub
xor
pushf
cmp
xor
in
sub
loopne
mov
and
push
dec
pushf
mov
inc
and
clc
repz
jb
pop
mov
or
movsl
inc
sub
gs
mov
dec
sbbl
or
sub
fistpll
sub
or
xchg
inc
jg
xlat
lcall
rorl
sub
inc
test
add
in
fistl
imul
loop
cmc
sti
push
pop
cmp
push
ret
adc
int
ret
in
lret
pop
scas
pop
add
aad
test
xor
or
imul
sbb
out
push
push
lahf
test
or
clc
loope
outsb
ja
push
push
ds
lret
cmpsl
into
mov
pop
fstps
imul
stc
dec
and
sbb
lea
aad
dec
addl
jno
pop
clc
fisubrs
into
pop
inc
into
jbe
std
fdivrs
clc
cli
inc
cmp
ffreep
leave
fldl
rol
inc
adcl
in
mov
icebp
inc
sub
add
int
js
stos
inc
lret
push
rolb
jne
repz
faddl
fdivrs
shll
jo
mov
xchg
enter
insl
jg
mov
dec
int3
add
insl
xchg
pushf
dec
test
add
popl
xchg
inc
lea
aam
and
in
push
xchg
data16
rorl
mov
popa
mov
sarl
scas
mov
mov
sbb
and
dec
dec
lock
ret
jge
lahf
in
cmp
aad
inc
mov
cmp
lret
xor
xchg
adc
out
push
rclb
inc
imul
aaa
testb
pushf
xlat
dec
sub
pop
mov
iret
xor
sti
cmp
lock
xchg
movsl
sbb
outsl
push
fwait
or
add
sti
pop
adc
out
or
cmpsb
pop
cmpsl
pop
pushf
pop
pop
pop
bound
arpl
sub
cmp
cmpsl
jmp
push
jne,pt
sti
fldl
in
pop
ret
out
sub
incl
jne
inc
mov
ss
mov
dec
bound
das
push
adc
jle
mov
add
loop
outsb
ss
adc
int
cmp
dec
xor
ja
cmp
insl
scas
xor
in
jnp
push
push
adcl
scas
movsb
test
fistl
ret
inc
mov
in
jno
lcall
fwait
dec
sbb
and
inc
and
call
pop
dec
ficomps
adc
adc
xor
clc
inc
insb
std
sub
rcrl
scas
push
int
aad
xchg
andl
cli
sbb
sub
popa
lock
mov
in
sub
cmp
daa
jg
add
scas
and
arpl
ss
jmp
add
jne
into
std
push
stc
adc
in
cwtl
xchg
xchg
xchg
sub
repnz
popa
and
jmp
andl
lock
sub
push
dec
mov
pop
ret
orl
fs
popa
xor
bound
mov
xchg
or
loop
fwait
mov
adc
fists
add
xor
mov
mov
lods
adc
int3
push
jae
insb
fsubrs
pop
mov
jno
mov
outsb
mov
or
pop
ss
fildl
push
inc
pop
cmp
daa
inc
push
pop
cli
sbb
stc
push
std
or
subl
cmpsl
dec
lret
sbbb
xchg
dec
and
cmp
and
je
pusha
mov
push
pop
sub
pop
mov
lcall
stos
jecxz
jns
fadd
xor
inc
fstl
dec
rcrl
add
mov
cmp
dec
inc
inc
add
insl
in
insl
jmp
ljmp
out
stos
jnp
lret
or
jmp
arpl
sbb
pop
jnp
ja
or
pop
fwait
shlb
xchg
push
push
push
cmc
mov
icebp
mov
sbb
ror
xchg
dec
pusha
mov
mov
jmp
int
jecxz
rorb
or
fcomi
ret
cmpsl
shll
xchg
jae
inc
fstpt
out
pop
out
xchg
popf
add
adc
cltd
push
sbb
scas
dec
je
adc
mov
inc
and
repz
fwait
ljmp
jae
sbb
jmp
nop
test
mov
xor
dec
test
pop
jo
push
repz
cmp
dec
jge
mov
push
clc
xor
sub
popf
jae
jmp
neg
push
out
cmp
mov
mov
sub
fcoms
in
out
and
mov
rorb
jne
mov
mov
outsl
mov
js
xor
push
or
ljmp
push
push
ss
and
lcall
cmp
stos
push
mov
cmp
insb
and
pop
imul
pusha
sbb
jle
shlb
cmp
add
jbe
pop
push
test
test
xchg
add
jg
lock
das
ljmp
lret
mov
push
dec
aas
sub
jb
mov
and
pop
inc
test
insb
mulb
and
jge
pop
pop
cwtl
mov
add
lods
jb
dec
icebp
push
mov
xlat
je
ret
and
dec
test
xlat
lock
sbb
lret
notb
insb
shl
mov
pop
sub
jle
sbb
gs
repz
jmp
repnz
sub
fsubr
or
popa
shr
ds
xor
pop
subl
das
mov
xor
and
adc
std
jecxz
sarl
cli
stc
push
add
xchg
inc
sarb
stc
gs
addr16
xor
in
dec
shlb
and
scas
pop
lret
into
fildl
lret
jp
int
or
xchg
cld
cltd
jnp
lcall
ret
jecxz
repnz
cli
jmp
inc
loopne
and
call
cmpb
inc
out
rcrl
scas
insl
xor
pop
add
mov
add
mov
lret
sub
jno
lea
int
fcmovnb
bound
sti
inc
imull
dec
jae
aas
adc
pop
sbb
in
bound
popf
sahf
lods
mov
ljmp
ret
jge
pop
inc
dec
dec
push
scas
inc
add
test
scas
pop
adc
and
inc
fcomp
mov
call
mov
push
shl
imul
or
loopne
shrb
xchg
ja
mov
xchg
xchg
in
mov
test
rcrl
jg
lea
xchg
fnstcw
jl
mov
lods
cmp
cli
adc
lcall
push
ja
lcall
sbb
in
loopne
mov
ss
arpl
jg
jo
ja
xchg
inc
xchg
jmp
mov
jae
fmuls
sbb
jge
ret
and
jae
cmp
xchg
adc
adc
xchg
dec
xlat
xchg
imul
xchg
or
cmpsl
and
push
movsb
jecxz
inc
fwait
cmp
mov
hlt
cwtl
lds
mov
jecxz
mov
addr16
mov
jb
add
sub
add
sti
or
int3
push
xor
ror
call
enter
icebp
xor
ficomps
bound
stos
movsb
xor
fldt
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
sbb
mov
jp
add
jp
ret
mov
jnp
mov
test
mov
in
jecxz
and
idiv
xchg
test
pop
sbb
je
fbld
aam
dec
dec
subb
mov
inc
stos
test
dec
in
and
sti
mov
mov
bound
mov
sbb
inc
lahf
shl
cmp
mov
mov
cmp
xor
or
repnz
jmp
test
test
repz
in
stos
loope
mov
mov
out
mov
adc
xor
jecxz
jne
test
out
xchg
mov
repnz
xchg
inc
pop
fisubrs
in
cmpsl
repz
push
aad
in
dec
add
shll
mov
cmp
cmp
xlat
cld
dec
sbb
decb
and
cmp
mov
stos
in
and
into
inc
mov
lock
push
push
fstps
je
pop
mov
xchg
cwtl
pusha
mov
add
push
std
dec
leave
cld
test
jecxz
imulb
div
adc
or
xchg
fdivrs
pop
stos
dec
adc
push
out
pop
xchg
xchg
xchg
xchg
pop
fcmovne
nop
cltd
out
jne
push
and
xlat
jbe
add
xor
std
cvtps2pi
adc
sahf
sar
jmp
leave
xor
dec
xchg
movsb
fsub
dec
and
iret
rolb
enter
shrl
cmp
push
lcall
fiaddl
mov
cmp
pop
cmp
repnz
jae
sbb
sub
hlt
imul
rol
test
clc
gs
jmp
sbb
add
pop
je
das
fistpll
je
fwait
push
lcall
xor
outsb
push
les
sbb
mov
insb
sub
mov
mov
das
insl
or
rcll
lods
out
popa
shll
mov
stos
inc
xchg
push
dec
add
sub
sbb
pop
pop
sub
rep
fwait
shrl
decb
lret
push
scas
mov
xchg
cmpsb
test
mov
sahf
sub
pop
or
mov
fstl
std
sbb
lods
push
out
jns
mov
imul
adc
ret
xchg
dec
sub
mov
fisubs
std
lret
or
iret
movsl
mov
sub
push
fstpt
mov
bound
arpl
js
call
inc
xchg
inc
std
andl
lods
cwtl
mov
or
xor
out
jge
lret
lods
mov
js
ret
xchg
jnp
pop
mov
ss
int
push
testl
dec
push
movsb
andl
sbb
addr16
mov
pop
ret
mov
scas
imul
pushf
sbb
imul
mov
sbb
cmp
fwait
stos
popa
mov
insl
cld
fidivl
fidivl
jp
popa
mov
imul
xchg
sub
mov
rorb
jp
ds
inc
vmovss
adc
jge
jno
xchg
lea
dec
out
mov
shll
jle
xchg
and
add
pop
pop
mov
shlb
push
stc
clc
xor
pop
out
jecxz
inc
ss
jmp
cmpsl
mov
xchg
sbb
fiadds
jbe
pop
shl
jge
scas
pop
flds
mov
movsl
test
imul
stos
xchg
adc
repnz
inc
or
enter
in
add
mov
ds
repnz
nop
or
push
mov
outsl
ljmp
gs
stos
inc
pop
in
jle
lret
aad
sub
dec
jo
rcrl
fimuls
es
mov
fs
rcll
int
adc
cwtl
mov
lock
movsb
push
and
out
lret
mov
pushf
bnd
dec
outsb
lcall
int3
mull
shl
sahf
adc
mov
cmp
popf
jmp
mov
sahf
sti
mov
xor
imul
sub
xchg
push
insb
xchg
cmp
daa
imul
pop
xchg
jno
jbe
enter
and
sub
mov
sub
sbb
in
sub
out
pop
es
testb
push
xchg
mov
mov
lahf
fs
mov
adc
in
fwait
dec
mov
inc
xor
jns
xchg
aam
pop
stos
jg
jg
add
and
mov
jl
add
scas
fdivl
mov
jmp
or
je
sbb
cli
inc
out
mov
pop
out
pop
into
movsl
enter
sub
and
negl
mov
jl
xchg
in
jo
inc
fwait
js
push
scas
roll
or
aaa
jns
add
cmc
out
sbb
cmp
xor
mov
and
mov
scas
lea
cltd
bound
and
adc
xor
mov
popa
adc
jne
xor
cwtl
pop
lahf
sbb
xor
cli
cs
loope
cmpsl
repnz
and
sub
mov
push
stos
mov
mov
imul
call
mov
jmp
xchg
jp
lods
orb
incl
push
out
jecxz
push
push
pop
adc
sub
int
cmp
adc
pushf
pop
orb
bound
test
pop
fucomip
lret
mov
sbb
lahf
pusha
fisttps
sbb
jno
test
in
and
ret
fisubs
adc
ret
mov
mov
mov
aas
ljmp
std
push
jge
jns
insl
mov
rorb
lea
out
xchg
lcall
lds
ja
test
jbe
mov
clc
outsb
add
ss
or
lahf
shll
lcall
mov
adc
mov
test
fisttps
push
pop
jnp
xlat
push
push
imul
ret
fstpl
xchg
push
lret
dec
adc
push
sti
addb
test
out
xor
movsl
jg
fsubp
sub
rorl
andl
jmp
xchg
call
add
sahf
test
stos
xchg
test
adc
xlat
mov
out
in
in
cld
add
xchg
inc
push
dec
ljmp
adc
mov
pop
adc
push
andb
pop
push
add
daa
les
cmpsl
push
pop
loop
outsb
jmp
and
sbb
xor
mov
dec
lods
add
xchg
adc
subb
jmp
cs
ret
roll
push
into
cmpps
xchg
mov
jne
shlb
lds
repnz
insb
pop
stos
rcrb
in
movsl
cmpsb
movsl
js
test
push
sbbl
imul
sahf
lea
mov
jne
aaa
jbe
leave
jno
ja
jl
jns
xchg
mov
push
xor
sarl
out
imul
jno
dec
and
dec
mov
out
xchg
ljmp
push
jmp
dec
test
scas
jmp
mov
in
push
sbb
or
fidivs
cmp
sub
mov
fidivl
fstpt
icebp
mov
les
sbb
mov
xor
jmp
pop
fisubl
repz
ds
mov
cltd
ret
mov
shlb
outsb
dec
inc
xchg
and
sub
aad
xchg
xor
jo
and
cld
sarl
mov
jb
out
in
jo
inc
loopne
xchg
xchg
mov
das
pusha
mov
aam
jnp
je
testl
pop
xlat
movb
cmp
sbb
jo
in
subl
dec
sarb
lock
add
mov
orb
pop
mov
mov
cmpsl
fwait
add
mov
jp
sub
out
sarl
roll
cmp
popf
scas
adc
mov
lahf
icebp
cmp
out
dec
lcall
fcompl
ljmp
or
jge
cmp
push
xchg
pop
cli
xor
jo
movsb
ss
pop
ficompl
jmp
sti
pop
fists
dec
mov
mov
push
repnz
xor
and
mov
push
bound
mov
fwait
mov
inc
enter
aaa
sbb
cmp
negb
adc
mov
adc
outsb
mov
das
sbb
inc
sub
mov
pop
es
fists
mov
notb
dec
push
jmp
in
test
mov
jmp
filds
mov
xchg
fmuls
cmpb
pop
dec
jb
into
jp
mov
mov
out
adcl
andl
scas
pop
xor
pusha
push
test
into
popa
xchg
dec
lret
ret
mov
mov
or
xchg
jb
ret
add
mov
loope
testl
xchg
mov
mov
and
inc
stos
addb
sahf
repz
add
or
ss
out
bound
push
dec
mov
fnstsw
jle
jne
imul
lods
sar
lock
loope
sub
xchg
out
pop
sahf
xchg
aam
jno
xchg
sbb
push
xchg
pop
mov
mov
daa
and
jbe
pcmpgtw
mov
pushf
xorb
loopne
js
jmp
nop
add
into
mov
insl
jnp
rcr
ljmp
jecxz
and
cwtl
loop
cmp
leave
call
pushf
mov
loope
iret
xor
imul
jle
mov
fadds
fsubrp
imul
lods
cmpl
sub
imul
rcr
or
dec
in
add
pop
repnz
mov
add
cmpsl
push
sub
pusha
repnz
jne
out
dec
test
out
es
mov
pop
sub
lock
dec
push
sahf
nop
add
push
mov
pop
lahf
xchg
ror
movsl
lds
fcoms
enter
sarb
mov
xor
xor
jae
imul
jae
jle
loop
imul
pop
xchg
jle
push
dec
adcl
in
loop
sbb
add
xorl
ret
fistl
push
inc
pop
in
clc
out
push
push
jecxz
and
std
cmp
insb
mov
push
push
stos
mov
movsl
mov
dec
pop
dec
xchg
push
mov
cmp
lret
and
sub
enter
mov
pop
pop
push
push
sub
jnp
adcl
cmpsb
jo
jmp
mov
sti
add
jnp
or
or
or
ds
pushf
js
adc
fucomi
bound
aaa
inc
cmp
mov
cmp
push
jle
aad
aam
xchg
ficomps
fcmovu
adc
call
enter
call
or
ss
imul
insl
bound
dec
dec
in
jno
dec
fildll
or
and
les
jo
negb
mov
mov
xchg
insl
lret
sti
gs
xchg
ljmp
in
sbb
jb
aaa
jl
inc
sbbb
or
cmp
nop
arpl
mov
mov
leave
das
or
adc
inc
out
sbb
jb
cld
fsubrl
mov
ja
add
ja
mov
jp
mov
fmul
aas
mov
add
and
sti
fsts
hlt
cmpsl
les
jge
shll
jo
mov
addr16
xchg
cmpl
xlat
adc
clc
push
jmp
xchg
adcl
adc
cmp
fldenv
adc
jg
out
movsl
ja
xchg
stos
mov
aad
out
inc
nop
or
mov
mov
vandps
and
lahf
pop
lret
pop
push
sub
cld
mov
enter
and
mov
add
aad
jmp
jns
out
cmp
lock
sbbl
dec
pushf
cltd
push
xchg
sahf
nop
iret
sub
or
jb
xchg
aas
movsb
imul
bsr
fildl
ret
inc
sub
inc
cmp
test
sub
sbb
clc
and
xchg
push
adc
cmp
mov
pusha
js
or
cmp
out
stos
mov
sbb
sbb
rorb
dec
pop
xchg
repnz
push
push
add
aam
sbb
std
push
insb
inc
out
dec
sbb
inc
mov
ret
je
mov
pop
sbb
cmp
int3
lock
sbb
inc
sar
or
sbb
std
push
jae
sahf
pushf
addb
adc
cmp
xor
outsl
xor
xorl
unpcklps
inc
int3
xorb
xor
mov
loope
lahf
shrb
insb
xchg
inc
je,pn
fcompl
pusha
pop
dec
subb
and
mov
nop
enter
or
outsl
add
jnp
jns
jmp
nop
fistpl
outsl
popa
std
hlt
adc
les
cli
test
iret
inc
in
and
push
rorl
cmc
jmp
push
out
jle
and
or
push
sbb
xchg
jae
jnp
subl
and
mov
or
fmuls
pop
sti
xchg
push
pusha
push
mov
and
push
jne
add
mov
and
inc
jmp
aad
jno
xor
inc
imul
xchg
jle
xchg
sbb
jbe
and
xor
pop
test
or
xor
or
mov
fwait
or
xor
lods
in
xchg
xor
mov
cmpsl
out
jge
inc
push
or
inc
fcmovbe
xchg
cli
ret
addr16
lret
stc
dec
hlt
clc
js
xchg
inc
iret
sbb
scas
cld
sub
movsl
jecxz
adc
insl
mov
incl
push
push
xchg
das
sahf
std
and
outsb
mov
sub
or
sti
fs
cld
xor
sbb
out
cmp
cli
andl
inc
fnstsw
adc
gs
inc
inc
xor
push
ds
or
push
dec
rorl
test
fsubr
in
addr16
jo
addr16
sub
jb
lret
out
lcall
imulb
pop
adc
out
push
dec
out
imul
sub
fcom
loope
add
fdivl
pop
jle
out
lods
pop
pop
outsb
mov
aad
imul
add
xlat
inc
mov
push
inc
ds
aaa
lahf
pop
cmp
sarl
vpaddb
inc
ss
aam
or
mov
or
cmp
fdivrl
fistps
sub
sub
insb
adc
lahf
inc
pop
dec
jmp
add
sub
sbb
loop
rcrl
mov
add
gs
lcall
movsb
add
sbb
and
adc
push
xchg
mov
inc
iret
lahf
or
pop
mov
adc
sbb
lea
jge
aaa
iret
inc
jge
pop
js
dec
pop
pop
push
adc
arpl
popa
add
dec
sahf
cs
sarl
and
lods
mov
jo
mov
lcall
push
sub
adc
push
sbb
and
negb
popf
dec
inc
mov
cmp
and
fimuls
ljmp
xchg
xor
jl
mov
lods
das
xlat
sbb
ljmp
mov
hlt
xor
call
push
dec
sti
or
in
ret
in
pop
add
xor
sarb
test
leave
js
fisttps
aas
push
xor
outsb
fisubrl
mov
into
cltd
add
outsb
leave
mov
rorb
bound
xor
test
retw
mov
pop
shll
pop
repz
or
sti
mov
repz
rcrb
sub
jl
mov
xor
rorl
jbe
mov
repnz
aam
jne
xchg
xor
scas
mov
pusha
xchg
push
or
sbb
dec
xchg
jl
xchg
test
xchg
call
cmp
mov
outsl
mov
lret
jmp
lcall
cli
shrb
cmpsl
mov
std
out
push
push
gs
cmp
pop
je
inc
dec
imul
pop
arpl
pop
sbb
test
in
xor
or
xor
fcmovbe
push
pop
pushf
mov
gs
and
cmp
test
and
imul
mov
mov
xchg
aam
inc
test
out
push
cmc
inc
mov
out
imul
fstps
xchg
repz
pop
mov
or
xor
cmp
dec
cs
cmp
addr16
lock
jecxz
jae
frstor
jge
jae
cmp
js
setp
leave
push
pushf
lea
or
mov
adc
mov
in
push
movsb
hlt
aad
add
sub
mov
pop
add
jle
sbb
out
cltd
icebp
testl
loop
gs
pop
lea
dec
imul
inc
es
push
push
mov
lods
pop
pop
xor
and
push
jns
inc
in
mov
mov
pop
outsb
scas
popa
sahf
dec
mov
testl
mov
addr16
or
cltd
aaa
push
mov
xor
cmp
repnz
pop
roll
fadds
pop
mov
cmpsl
data16
push
xchg
hlt
and
clc
roll
push
int3
mov
dec
jns
sti
xchg
mov
aaa
inc
mov
push
sbb
jle
sbbb
sub
jnp
pop
jns
fst
and
jg
or
clc
js
add
dec
out
pushf
mov
orb
fistl
mov
sbb
daa
inc
cwtl
adc
sbb
dec
adcb
push
and
xor
pop
std
test
daa
sub
and
test
icebp
ud2
subl
fidivl
ljmp
movsb
adc
ss
cmpsb
mov
mov
cs
jne
inc
sbb
push
movsb
imul
das
mov
cmp
sti
pop
enter
aas
mov
pop
mov
adc
inc
and
mov
add
dec
imul
push
cli
and
lock
push
fiaddl
pop
mov
lock
popf
in
inc
mov
fadd
fistps
popa
mov
insl
push
lret
iret
je
in
mov
lahf
sbb
sbb
dec
gs
outsb
ret
mov
test
test
adc
bound
pop
fwait
lret
nop
pop
sahf
loop
mov
push
pop
push
lds
std
cmp
mov
rorl
dec
dec
fs
loopne
or
loop
xchg
orb
xor
add
iret
pusha
enter
shlb
jmp
lods
or
mov
push
jle
pop
mov
lods
icebp
or
movsl
mov
sti
or
repz
sub
push
daa
dec
sahf
fisubl
pop
adc
xor
lret
push
and
fwait
mov
push
daa
inc
cmpsb
cmp
int3
cwtl
icebp
inc
or
jne
clc
fdiv
pop
jae
hlt
dec
shlb
inc
cld
mov
shrb
or
cli
xchg
imul
inc
pop
mov
test
test
inc
sbb
mov
jge
cmp
in
or
enter
mov
scas
in
ss
orb
adc
jle
rorl
popa
enter
sub
leave
dec
sbb
shlb
fcomps
call
int
mov
ja
and
xor
dec
iret
fwait
add
sbb
mulb
jno
jp
cmp
adc
jecxz
sbb
pop
fmul
adc
cmp
adc
xor
fidivs
dec
inc
dec
bound
xchg
out
imul
xor
or
ret
stos
shll
mov
and
fildl
push
jae
int
xor
addl
mov
stc
dec
push
push
loope
mov
aam
scas
pop
dec
dec
lock
inc
cmp
sub
push
fstp
mov
pop
int3
imul
repnz
push
jge
mov
or
lods
movsb
clc
cmp
inc
push
jnp
mov
roll
sbb
push
push
mov
repz
mov
nop
mov
jmp
inc
inc
dec
imul
or
mulb
push
fwait
test
pop
inc
fstp
movsl
movsb
icebp
lea
cltd
inc
mov
sub
adc
icebp
pushf
push
cmp
lds
loope
cmp
rsqrtss
movsb
mov
addr16
test
inc
iret
lods
or
in
and
ret
push
xor
and
jge
test
fsubp
dec
jns
into
add
inc
mov
lret
or
movb
int
aas
icebp
jge
sub
hlt
sub
std
ror
lds
lcall
insb
das
scas
out
lret
xor
fmuls
repz
inc
orb
test
test
sbb
sub
std
sbb
mov
mov
in
pop
add
cmp
std
insb
imul
fstl
das
sub
jne
pop
lahf
and
into
cmp
inc
ljmp
cmp
jge
cmp
aad
in
enter
cltd
lahf
xchg
xchg
mov
imul
add
inc
and
add
pop
xchg
repz
scas
push
xor
cmpsb
mov
sub
fdivp
adc
cmpsb
ds
xor
add
push
icebp
jl
es
cmc
ret
sub
icebp
imul
jb
sti
insl
jecxz
push
mov
pop
or
imul
adc
lds
xchg
hlt
inc
jmp
es
std
stc
sub
rep
lcall
or
ds
cmp
lods
push
orl
mov
pop
popf
cltd
xorl
orl
lock
push
rolb
lock
into
and
pushf
xchg
mov
xchg
mov
or
jl
pop
dec
jl
test
xchg
int3
addr16
xchg
inc
test
inc
fcom
dec
push
stos
leave
dec
sti
aaa
dec
lret
push
cltd
inc
call
inc
or
je
shll
add
dec
nop
rcrb
xchg
add
mov
bound
cli
push
sahf
cltd
out
hlt
mov
sbb
cld
push
pop
out
sub
push
sbb
mov
mov
push
leave
add
sahf
xlat
cld
out
push
lcall
add
aas
leave
dec
mov
and
or
dec
js
dec
in
or
xchg
adc
lods
pushf
jb
int3
adc
mov
test
popf
mov
inc
cwtl
xor
idivb
roll
cmpsb
pop
inc
aam
jmp
dec
cmpsl
xor
lods
mov
sub
subl
push
mov
arpl
xlat
mov
popa
xor
aam
popf
jp
out
jnp
jle
pusha
repz
std
into
and
stos
sub
mov
jmp
pop
pop
jne
cltd
or
add
add
and
mov
mov
and
cli
cmp
and
cwtl
into
xor
lret
adc
iretw
imul
lahf
cmp
jl
xor
inc
cld
jae
lret
mov
mov
add
sub
dec
inc
pop
mov
repz
add
lret
aas
fsts
mov
ret
mov
pop
into
xor
and
mov
lret
mov
add
sbb
push
inc
xchg
mov
shll
ljmp
adc
data16
negl
scas
mov
js
cmc
dec
push
or
test
mov
add
push
push
andl
sbb
lods
sub
mov
test
push
push
fisubrl
fldenv
inc
lret
repz
in
out
test
mov
jmp
pop
in
inc
out
jg
fists
in
in
shrl
out
cmp
dec
cmp
and
mov
popf
ja
or
ss
mov
insl
out
dec
les
cld
movsb
nop
shl
mov
fwait
mov
subl
or
xchg
shrl
and
iret
sbb
jg
pop
mov
push
arpl
jbe
movsb
adc
sub
cmp
dec
cmpl
mov
xchg
xchg
frstor
jg
das
stc
test
push
fdiv
outsb
dec
xor
cltd
pop
xor
pusha
xchg
inc
lcall
sub
inc
test
dec
mov
aad
adc
test
in
pusha
cli
aad
add
rcrl
int
les
das
sub
mov
inc
divb
sub
test
fsincos
enter
fldz
dec
push
dec
xchg
cmp
mov
and
sbb
mov
xorb
mov
andb
mov
pop
add
movsb
cmc
add
test
out
pop
jg
loop
or
rcrl
inc
inc
add
ja
xchg
cli
mov
or
jge
mov
aam
inc
cmp
add
xor
divb
xor
or
mov
push
push
pusha
push
mov
mov
mov
push
filds
mov
add
sub
ja
adc
mov
xlat
insb
adc
mov
mov
mov
sbb
xchg
aam
aas
daa
ret
mov
mov
mov
leave
jbe
mov
addl
call
call
jmp
or
outsb
into
rcrb
stc
andl
cld
call
shl
arpl
pop
cli
rcll
rolb
loop
mov
imul
repz
push
pop
adc
or
rolb
mov
in
dec
adc
clc
jp
fisubs
pusha
aam
and
pushf
fiaddl
ja
jae
sub
cmc
into
nop
sbb
fcompl
fimull
lds
pop
sbb
xchg
inc
sub
int3
loop
mov
adc
inc
xor
mov
xlat
push
pop
push
popf
cs
cmp
sahf
jmp
loop
push
push
add
jbe
data16
fsubl
pop
add
cs
sub
jb
decb
mov
orb
sahf
adc
dec
lret
es
inc
cmp
int3
push
adc
add
enter
cld
bound
sarl
inc
je
int3
pop
aas
arpl
pop
jne
dec
mov
rol
push
mov
pusha
xor
jp
popa
push
dec
movsl
ljmp
pop
xchg
dec
inc
pop
push
nop
jns
push
cwtl
loope
fcomi
mov
push
loop
xor
dec
aam
jae
fmuls
and
imul
xchg
pusha
clc
cmp
jno
push
andb
pop
jo
cli
loop
and
test
mov
sub
stc
ficoms
out
cmp
imul
sbb
idivb
or
push
push
out
fwait
jns
jae
into
pop
xor
adc
xchg
ljmp
jl
xchg
lret
pusha
xchg
cmp
push
gs
arpl
inc
roll
add
pop
fstl
pop
lcall
adc
xor
or
cmp
add
movsb
in
adc
loopne
sbb
sbb
xchg
push
jmp
xchg
inc
mov
insl
xor
xchg
shll
inc
rorb
pop
andb
nop
jo
inc
and
mov
pop
add
inc
xchg
add
jp
aam
mov
sbb
loop,pn
xor
jecxz
phaddsw
and
arpl
or
mov
mov
stc
mov
xchg
jbe
aam
jb
movsl
andb
cmp
repz
insl
mov
nop
out
je
gs
xchg
out
inc
in
xchg
jae
shl
test
and
lret
add
shrb
dec
scas
mov
imul
out
inc
pushf
outsb
pop
aam
out
jmp
pavgw
pop
push
cmc
pop
add
inc
and
icebp
push
in
jmp
icebp
or
and
jno
add
scas
dec
inc
ja
insb
xor
pop
pop
cmp
cmp
int
sbb
aad
sbb
clc
xchg
popf
cmpsl
push
in
push
push
cwtl
loopne
jecxz
adc
fstl
cwtl
addb
jb
andb
and
lds
add
dec
and
sti
fstps
std
shl
in
aas
dec
call
fcoml
std
test
into
push
xchg
loope
inc
test
cltd
aad
or
adc
in
sub
loop
mov
or
jbe
outsb
mov
inc
enter
cmp
dec
fs
cmp
inc
mov
mov
ja
stc
adc
push
pop
das
int3
xor
jecxz
sub
jmp
shlb
scas
push
cmp
or
test
es
fiaddl
or
out
and
into
movsl
insb
fisubrs
cmp
repz
fs
cs
cmpsl
push
sub
add
and
and
mov
adc
arpl
and
xor
imul
cs
mov
fwait
mov
jno
aas
fisttpll
ljmp
sub
jg
mov
inc
push
loopne
xor
and
add
and
push
out
mov
movsl
inc
jne
mov
movl
ficompl
fcomps
lret
push
cld
test
sti
sbb
fistpll
pushf
fistl
popf
cmc
in
inc
jp
loopne
mov
data16
insb
jbe
bound
bnd
addb
mov
add
popa
mov
and
cmp
cs
addl
jl
lods
mov
fs
test
jne
mov
sbb
dec
dec
jno
ret
je
gs
pop
jne
or
mov
out
mov
test
dec
movsb
sbbl
call
aas
sahf
mov
in
jb
inc
add
test
push
cmp
test
js
pop
test
cmp
out
in
inc
arpl
inc
xor
shll
jns
notl
pop
enter
cmp
shrl
out
mov
cld
lret
jns
xor
mov
adc
xor
jo
dec
push
push
jae
lock
jle
xchg
xchg
or
mov
inc
popf
shll
popl
sub
bound
adc
sub
pop
popa
push
and
pop
aaa
mov
sbbb
xlat
cltd
jl
je
enter
push
and
loope
cmp
dec
add
sub
movsb
in
inc
mov
ljmp
dec
mov
outsl
gs
and
mov
subb
jae
int3
daa
mov
push
pop
clc
mov
lret
inc
iret
sub
jmp
mov
test
aam
leave
cmpsb
or
pop
fldl
pop
cmc
mov
mov
jmp
cmp
pop
outsb
jb
mov
jl
sahf
daa
int3
clc
fs
js
adc
jecxz
dec
dec
jb
xchg
xchg
xchg
fbld
xor
add
call
sub
cpuid
mov
cmpsl
jmp
sbb
sub
popa
ds
sbb
stos
mov
lods
clc
or
mov
lcall
or
lret
leave
mov
xor
fadd
cmp
sbb
scas
dec
sbb
sbb
gs
dec
mov
jle
mov
push
push
in
cs
or
in
flds
movsbl
decl
inc
sub
dec
and
inc
and
xor
clc
add
loope
cmp
jmp
rep
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
shrb
push
jns
add
jp
mov
subb
es
pop
mov
jne
fs
sub
gs
push
sarb
mov
cmp
ja
iret
sbb
adc
push
pop
push
add
negb
pop
stos
cli
xchg
push
push
test
mov
iret
shlb
loope
xchg
mov
dec
dec
pop
adc
iret
es
stos
xchg
and
les
push
and
dec
fidivrs
int3
xor
mov
and
push
add
pop
cs
fadds
nop
loope
dec
push
add
mov
jle
pusha
or
loopne
add
and
cmc
popf
cli
call
pop
stos
fiaddl
in
xchg
test
mov
add
jb
dec
xor
pop
jecxz
sti
stos
add
in
inc
lods
xor
push
xchg
cmp
popf
xor
xchg
int3
fnstenv
sbb
xor
stc
sub
gs
je
add
insl
dec
pop
sub
dec
mov
push
push
mov
cmpsl
pop
or
push
xchg
push
popa
out
pop
xchg
add
sub
data16
add
lret
push
stos
pop
clc
xchg
call
pop
xchg
sti
push
sub
mov
and
mov
in
xchg
bound
sbb
or
arpl
mov
add
push
jb
xchg
das
pop
clc
js
cmp
ret
dec
cli
xchg
bsf
test
jl
xchg
das
mov
fcomp
push
fldt
or
int
push
xor
sub
mov
and
fisubrl
xchg
jle
fs
push
nopl
jp
add
test
adc
loop
xchg
add
adc
in
jae
dec
fldcw
cli
cltd
pushf
out
pop
icebp
arpl
pop
mov
loop
shrb
js
sub
push
jle
out
call
and
shlb
lea
hlt
jns
inc
loope
in
fs
fst
lods
jp
hlt
jg
push
sub
xor
std
push
adc
or
xor
dec
jp
mov
shrl
sbb
xchg
in
shll
icebp
cmp
jo
add
cwtl
mov
hlt
loop
cmp
dec
push
pusha
stc
xchg
lcall
add
inc
scas
lea
jecxz
mov
cmp
dec
xchg
cmp
dec
lods
sub
inc
leave
jne
sub
js
push
dec
lret
xor
push
test
outsl
mov
adc
inc
adc
out
imul
popa
mov
test
inc
xchg
pushf
mov
icebp
sarb
in
shll
add
jle
rorb
fisubl
les
pop
test
roll
cmp
sub
js
cli
push
or
pop
mov
jmp
xchg
mov
loope
pop
mov
out
iret
mov
mov
inc
sub
push
xor
repz
xor
nop
and
cli
dec
inc
icebp
test
std
stos
nop
hlt
mov
add
push
pop
mov
mov
fisubrl
sub
push
cld
dec
sbb
push
rcr
clc
aaa
pop
jae
pop
jno
test
ss
mov
inc
in
aaa
and
push
aas
jns
lea
dec
out
cmp
loopne
pop
mov
out
cli
push
push
mov
rolb
push
jmp
or
lods
push
jp
mov
sub
mov
jg
jge
cmp
sbb
or
inc
nop
add
lret
lahf
gs
cmpsb
jp
cmp
lock
or
add
pop
out
lds
xchg
in
cltd
je
fnsave
fs
leave
in
sub
es
inc
sbb
shll
outsl
add
shlb
cli
pop
xchg
and
jp
fwait
stos
xchg
std
jmp
pop
leave
mov
sub
in
pop
pusha
or
sbb
jae
out
dec
push
ret
mov
shlb
mov
push
dec
mov
add
cmp
mov
fsubs
cltd
or
cltd
iret
adc
mov
add
loope
and
sbb
mov
je
int
cwtl
insb
arpl
pop
notl
es
lret
jno
hlt
cwtl
sbb
test
pop
insb
pop
cmp
add
and
je
outsb
mov
andps
push
jmp
dec
push
pop
adc
lock
mov
inc
sub
jb
je
das
hlt
sarl
jnp
in
xchg
fucom
out
pop
iret
clc
aas
cwtl
pop
frndint
jne
int
pusha
push
lret
mov
popa
or
aam
cmp
xorl
and
xchg
test
ret
outsl
mov
push
push
cmp
les
add
mov
mov
mov
mov
or
add
divb
sbb
or
xlat
mov
iret
mov
pushl
movsl
mov
pop
sub
es
lea
sbb
add
xchg
subl
inc
adc
sbb
movsb
imul
sub
insl
sub
icebp
pop
jno
inc
testb
xor
adc
mov
xchg
push
and
outsb
mov
mov
mov
ret
shl
gs
xor
int
push
hlt
cld
add
dec
inc
leave
sub
or
sti
sbb
dec
xor
js
or
mov
shrl
lods
jmp
adc
insl
insl
insb
mov
ds
push
fstl
jno
inc
gs
nop
cmp
sub
movsl
adc
fnstenv
mov
pushl
cmp
or
dec
pop
and
jae
jb
cmp
imul
dec
rorl
inc
mov
outsb
lock
stc
into
stos
xor
ljmp
subb
push
enter
xchg
std
mov
movsl
xchg
inc
out
adc
or
sbb
push
mov
jmp
jecxz
pop
push
dec
inc
dec
push
sub
push
sti
sbb
push
xor
roll
push
out
cs
pop
cmp
mov
jge
pop
repz
jle
cld
hlt
add
push
fcoms
jno
sub
mov
sub
xchg
cmp
imul
mov
aad
lcall
fs
jp
mov
stc
lret
push
sbb
sbb
fsubs
mov
pop
bnd
sbb
aaa
mov
jno
adc
xchg
mov
add
lret
xor
mov
shld
jmp
mov
fidivrl
ror
mov
sub
int3
aas
shll
loopne
sub
cmp
loope
inc
xlat
sbb
push
add
jae
mov
fwait
rcrl
push
shlb
dec
out
outsl
int
fnstcw
imul
test
and
hlt
or
sbb
sbb
lret
addr16
lea
xchg
mov
loop
std
popa
mov
and
dec
xchg
pop
pushf
xlat
mov
push
icebp
cmp
int
dec
dec
in
stos
test
mov
out
bound
add
and
fbstp
dec
pop
pop
test
std
jno
push
in
pop
cs
mov
daa
lret
mov
ret
inc
pop
cmp
in
pop
dec
test
dec
adc
out
insl
into
inc
pop
jle
fcmovnbe
jmp
arpl
sbb
das
jae
fisttps
jge
out
ja
sti
lods
loop
and
sti
add
or
cmc
mov
mov
daa
sub
inc
cwtl
xchg
xchg
or
fiaddl
add
es
jle
std
jb
mov
mov
add
daa
and
mov
xchg
enter
push
cmpsl
lret
sub
adc
imul
jg
adc
movb
fistps
iret
aaa
es
jl
or
sub
adc
std
push
xor
aam
mov
adc
pop
out
dec
sbbb
sub
or
mov
add
stc
pushf
dec
and
xchg
pop
out
mov
insb
sbb
add
cltd
cmpsb
jp
mov
jge
pop
idivl
movaps
test
sub
add
mov
leave
scas
mov
dec
bound
sbb
add
sti
sbb
fsubl
jp
fucomp
and
nop
pop
pop
subl
rcll
mov
add
data16
push
and
cld
popf
xor
or
movsb
inc
cmp
pushf
dec
sub
lock
fsub
inc
das
sti
repz
les
jmp
or
ret
add
jl
in
cmpsl
lock
ljmp
loopne
dec
push
clc
shlw
xchg
pop
test
shlb
inc
outsl
xchg
mov
nop
cmp
dec
lds
aad
lods
mov
shlb
pop
mov
pop
xchg
js
pop
dec
fs
js
cmpl
sbb
inc
cld
mov
jns
or
and
testl
adc
mov
flds
les
sti
add
xor
shll
inc
or
lods
xlat
xchg
ljmp
test
aas
das
inc
fcmovu
divl
aam
add
pop
push
pop
and
push
add
lcall
jnp
mov
std
mov
add
push
xor
sbb
push
into
jns
mov
jle
sbb
cmpl
xchg
insb
clc
shlb
les
scas
fs
es
aad
or
xlat
imul
je
mov
mov
xchg
add
iret
or
ljmp
ret
repz
jno
into
nop
dec
lds
sub
or
inc
jl
push
jmp
mov
cmp
mov
pop
fwait
jb
and
fcomps
loopne
out
aad
mov
das
mov
mov
stos
pushf
pop
call
ljmp
into
aam
mov
scas
sub
lret
imul
sti
sub
cwtl
icebp
stc
data16
xor
xchg
gs
mov
cmp
in
jbe
cmp
cli
jne
mov
pop
stos
adc
sbb
lea
imul
jecxz
arpl
add
or
cwtl
negl
sub
cmovno
fdivs
push
mov
adc
or
movsb
add
pop
mov
mov
cmpsb
aad
cmp
data16
mov
iret
into
or
pop
sbb
jns
int3
arpl
pop
dec
leave
sub
scas
sub
loope
xor
or
ret
lcall
cmp
cwtl
mov
pop
push
or
lods
adc
mov
iret
ljmp
dec
push
stos
rcrb
add
mov
inc
es
xchg
push
test
xchg
xchg
setno
mov
lds
outsl
mov
pop
sar
sub
imul
rol
xchg
pop
ja
out
pop
shrl
popf
sub
sbb
mov
and
test
dec
xor
jnp
pusha
jg
sbb
repnz
loope
pop
in
adcl
inc
pop
sbb
mov
rcl
push
outsl
mov
test
jp
adc
pop
outsb
imul
mov
inc
aaa
sbbl
xchg
lret
sbb
test
ret
aad
daa
adc
test
outsl
dec
add
outsl
cld
mov
push
icebp
cmp
jno
aad
dec
dec
rolb
inc
dec
xchg
jle
cmp
enter
push
xchg
or
xchg
dec
daa
mov
std
mov
outsb
adc
mov
out
dec
inc
cmp
dec
push
imul
popa
scas
inc
xchg
outsl
dec
jbe
pop
les
call
jne
hlt
push
lcall
in
jmp
out
addb
mov
sub
dec
scas
jp
or
jo
sbb
xchg
adc
out
sbb
or
push
mov
dec
cmp
pop
inc
mov
popf
or
mov
rorl
push
and
push
aas
pop
cmpsl
daa
movsb
add
jg
icebp
enter
outsl
push
jmp
push
popa
mov
shlb
into
xchg
push
jle
jno
adc
cmp
xchg
push
dec
or
movsl
push
mov
nop
pushf
push
push
dec
js
inc
sti
jecxz
and
ret
ljmp
jb
lcall
mov
jge
decb
pop
sub
xchg
mov
data16
ret
push
jne
ret
dec
lret
pop
add
and
gs
jo
in
fimull
mov
fcomps
mov
mov
shrl
jns
lcall
jl
in
aaa
sub
or
in
cltd
xchg
xor
xor
out
jg
into
mov
xchg
xor
push
shlb
inc
arpl
xor
or
sub
sub
xlat
fucomi
pop
pop
pushf
sti
setb
jns
imul
jp
cld
inc
roll
cmpl
aas
repnz
jmp
test
repz
xor
pop
call
mov
and
or
rcl
sbb
add
aam
mov
js
inc
out
lock
pushf
clc
inc
aad
ror
cwtl
mov
stc
daa
loopne
loopne
pop
mov
pushf
enter
mov
add
rolb
push
aam
mull
cmpsl
jb
push
into
and
test
cmp
les
repnz
xor
xchg
dec
mulb
or
test
mulb
sub
shlb
add
daa
fisubrs
mov
cmp
cmpsl
stc
jge
xor
enter
movsl
orl
lret
out
sti
adc
xor
out
sbb
pop
xlat
movsl
ret
xchg
and
jne
push
loop
or
sbb
fs
jmp
jp
cmp
dec
jl
dec
int
mov
adcb
loop
sbb
pop
nop
add
and
pushf
movsb
inc
icebp
mov
fsubs
lods
or
shrl
add
dec
cmpsb
dec
int
adc
fcomps
and
movsb
push
inc
xchg
stc
stos
loope
sar
in
pop
lea
inc
push
daa
mov
xchg
cmc
adc
push
mov
int
orl
pop
jne
xor
cmc
jno
pop
sarb
aad
das
push
xchg
xor
add
or
sub
mov
iret
mov
inc
cld
mov
lods
ja
fcomps
lahf
pop
imul
loope
or
mov
shrb
pop
test
push
dec
movsb
int
add
inc
int
sbb
xor
push
addr16
push
insl
mov
mov
cmpsb
outsb
repz
cltd
pop
out
pushf
cmp
cli
lds
fs
inc
ret
ret
cmp
pop
mul
fprem
jae
les
dec
xchg
mov
sub
push
add
jae
adc
insb
movsb
rorl
sbbl
or
sub
mov
jp
pop
lret
sarb
mov
lock
mov
imulb
jp
incb
sub
sarl
nop
xor
pusha
stos
movb
neg
xor
das
pushf
clc
cli
dec
test
lods
in
lods
int3
sub
push
nop
js
cmp
jl
shll
cmova
dec
es
jmp
dec
sbb
push
pop
fcomi
leave
mov
mov
lods
ja
imul
push
cmp
fisttps
shlb
insl
subl
jb
leave
pop
dec
stc
loope
sub
aad
mov
das
dec
or
xchg
insl
dec
dec
pop
mov
ljmp
or
jge
mov
inc
lds
test
and
push
daa
ss
add
imul
and
or
add
mov
push
aaa
push
or
push
lcall
out
push
popa
mov
add
mov
pop
jb
sub
xor
dec
mov
mov
pop
stos
in
inc
lret
andl
out
ficompl
or
pop
xchg
mov
xchg
and
dec
mov
gs
sub
pop
pop
push
shrl
mov
ficoms
clc
in
xchg
xchg
adc
cmpsb
jle
lea
inc
idivb
mov
push
jecxz
push
repnz
and
out
stc
stc
je
bound
add
mov
pusha
ret
inc
pop
insb
stos
iret
ror
test
jmp
das
notb
out
cld
test
es
cltd
clc
pushf
mov
sahf
test
pop
xchg
dec
cmpl
lds
mov
xchg
sbbl
addr16
stc
xchg
or
mov
mov
cld
inc
or
xchg
daa
repnz
icebp
mov
mov
push
ficoms
pop
in
dec
mov
sbb
jge
negb
pop
std
mov
pusha
es
xorl
clc
and
test
pop
mov
or
xchg
pop
stos
outsb
dec
test
dec
insb
ret
and
xchg
jmp
and
andb
pop
fs
scas
mov
je
cwtl
and
mov
enter
in
repnz
jp
jge
adc
pop
js
fs
iret
addr16
loopne
xchg
and
sub
dec
push
cltd
push
jae
lret
push
stc
scas
mov
lret
out
jo
or
jbe
imul
pop
loopne
mov
adc
mov
push
push
addr16
arpl
mov
inc
push
out
inc
jge
mov
or
fwait
adc
mov
sbb
xor
adc
jne,pt
fnsave
jp
lret
mov
adc
cmp
cmp
fmuls
adc
xchg
inc
mov
dec
sub
pop
adc
cmp
sub
hlt
pop
out
add
jmp
dec
cmp
sbbl
out
stos
sbb
lret
insb
std
push
xchg
xchg
fsubrs
inc
fwait
pop
dec
out
in
jbe
mov
push
cmp
inc
add
fs
clc
inc
jecxz
jno
cmpsl
jne
clc
add
repz
lret
pop
sub
inc
mov
cli
mov
pop
push
ss
mov
test
cli
leave
je
fists
mov
mov
jbe
aas
dec
icebp
arpl
mov
aaa
stos
ret
jge
or
mov
pop
pop
insl
mov
pop
je
arpl
pop
xor
sbbb
cmpsb
jne
in
adc
clc
movl
xor
aaa
cs
jecxz
pop
lret
pop
pop
sbb
inc
mov
pushf
or
jmp
enter
test
inc
sahf
dec
xor
and
xor
andl
mov
fdivl
adc
cld
push
and
pop
adc
cmp
push
dec
ja
insl
rolb
jnp
cmpsl
or
adc
cmp
and
fs
lds
jo
subl
repnz
pop
sahf
cs
sti
mov
push
insb
aas
sub
xor
sbb
in
sub
cwtl
inc
iret
mov
in
rorl
shrl
incb
loope
mov
cld
js
sbb
push
jb
mov
jmp
out
jmp
out
aad
sub
add
mov
cmp
incl
ja
push
mov
jp
jno
scas
mov
subl
add
mov
lods
dec
add
xor
imul
pop
inc
loope
mov
cmp
sub
hlt
sub
insl
lret
sub
test
adc
adc
xor
in
mov
in
mov
jl
or
add
outsb
popa
mov
push
mov
rcr
inc
je
inc
inc
cmpsb
and
popf
pop
mov
mov
xchg
icebp
popf
jb
cmc
inc
add
push
and
call
daa
or
jge
rcrb
icebp
cmp
out
lcall
mov
lea
inc
push
jge
cmp
and
test
inc
lcall
mov
cmpsl
adc
and
fiaddl
addr16
xlat
dec
push
mov
push
inc
cmpxchg
xor
adc
xchg
mov
fistl
sub
ret
or
sbb
sbb
ficoms
sbb
pop
sub
push
out
push
cmpsl
ret
mov
pop
mov
or
add
out
jg
lret
mov
push
pop
in
add
cmp
jecxz
xchg
mov
mov
inc
mov
out
jno
mov
sbb
mov
dec
popf
mov
xchg
adc
stc
add
sbb
mov
xchg
in
js
ret
xchg
mov
sbb
loopne
jo
and
imul
jg
mov
addr16
xchg
xor
mov
pop
mov
test
testb
mov
insl
dec
and
imul
js
mov
push
xor
cld
sub
inc
push
popf
push
ret
xor
divl
sub
mov
pushl
call
xor
cmp
push
xor
iret
jae
push
imul
sbb
hlt
dec
pop
arpl
and
mov
or
xchg
loope
arpl
adc
sub
gs
iret
les
jns
mov
test
sub
jmp
pop
jae
das
mov
push
inc
or
fmull
mov
mov
adc
xlat
movsb
add
lods
cmp
push
cmp
aaa
mov
sbb
mov
dec
xor
fildl
inc
cld
push
scas
shll
mov
pop
jae
pop
cmp
sub
add
in
les
outsb
loop
xchg
push
in
gs
push
xchg
mov
lcall
test
ret
add
pusha
jnp
sarl
jg
daa
int3
jae
fs
scas
stos
sub
addr16
test
ja
das
adc
aaa
leave
xor
adc
fnsave
ljmp
das
dec
mov
test
sub
cmp
mov
das
cmp
rolb
mov
pop
insl
ja
lods
pop
shll
inc
xchg
scas
pop
pusha
adc
insb
popf
xorl
and
or
loop
jmp
inc
or
jae
pop
cmp
cli
in
clc
je
xor
fnstenv
out
xor
add
sub
sub
aaa
add
cmp
loopne
jae
jecxz
cmp
jno
pop
ret
les
aaa
sub
and
dec
push
lahf
pop
xchg
sti
mov
clc
jnp
push
xchg
dec
sahf
push
mov
pop
jl
mov
aaa
out
and
add
in
push
fwait
es
imul
out
sbb
xor
aam
push
sbb
lds
outsl
cld
mov
call
decl
xlat
les
rcr
loopne
xor
inc
in
inc
dec
rclb
push
xchg
sbb
pop
stc
mov
xlat
push
loop
stos
imul
cli
pushf
in
lcall
int
or
pop
xor
aam
adc
mov
scas
lods
inc
arpl
mov
rep
scas
pop
leave
rclb
jno
in
mov
xchg
xchg
dec
xchg
jbe
jle
lahf
shrb
jge
xor
mov
dec
subb
add
data16
cmpsb
inc
fnstcw
or
cwtl
fdivrl
out
and
out
inc
and
loopne
or
call
dec
push
cltd
rorb
jl
scas
adc
mov
adc
jg
sbb
lret
in
jle
cli
adc
movsb
inc
hlt
mov
pop
xchg
dec
cmp
imul
adc
testl
sub
sbb
pop
cli
push
lods
dec
insl
xchg
faddl
mov
test
sub
pop
push
in
test
roll
pcmpeqd
in
push
adc
fs
shll
enter
dec
jle
shrl
outsb
notb
jne
in
in
scas
dec
clc
cmp
add
cmpsl
xor
mov
stos
pop
xchg
inc
and
mov
sbb
push
aas
shl
cmp
sbb
aam
xchg
xlat
inc
clc
pop
stos
mov
push
cwtl
je
or
mov
adc
sbb
and
cmpsl
lods
jno
int3
insl
cmp
out
mov
lods
out
ret
enter
jl
cmpsl
in
clc
fnsave
and
sub
mov
clc
pusha
xchg
pop
mov
cmp
jnp
fs
hlt
mov
mov
aad
repz
dec
lock
xchg
mov
xorb
sbbb
dec
nop
fildll
mov
dec
push
testl
mov
cmp
in
iret
fs
cmp
ja
dec
into
pop
add
mov
scas
jecxz
mov
stos
emms
inc
add
stos
pusha
push
ljmp
cli
sbb
fnstcw
sub
push
xor
jle
sub
sbb
scas
or
xchg
xor
pop
jns
into
fdivl
xor
test
shlb
lret
xor
add
pop
jmp
addr16
inc
push
arpl
cmp
adc
int3
add
xchg
dec
test
or
mov
adc
cmpsl
divb
mov
in
aam
or
dec
js
repnz
fisubs
div
fs
mov
push
cmp
popa
sub
ljmp
ror
in
adc
les
shll
test
pop
mov
lds
lea
sbb
jmp
dec
push
es
xchg
mov
les
arpl
popf
cmp
sbb
loopne
out
sub
movsb
sub
aad
cmp
neg
lcall
sbbb
sbb
mov
call
or
pop
xor
imul
or
cmp
repz
mov
fcoml
xor
mov
adc
test
arpl
xchg
cli
divl
ret
dec
cmpsb
add
in
jb
xor
sbb
je
push
inc
outsl
push
popa
repz
push
fwait
xchg
cs
cmp
insb
fwait
adc
loop
adc
stos
push
sub
movsb
repnz
mov
mov
pusha
loopne
jns
stos
dec
cs
sbbb
mov
push
mov
xor
inc
add
xor
and
aas
push
xor
pop
push
mov
lahf
adc
dec
or
cmc
lret
test
aaa
fistpl
and
sbb
subb
inc
mov
sti
lea
sub
hlt
mov
fs
ljmp
pop
mov
cmp
push
fldt
clc
jg
ret
mov
lods
jp
add
insl
loope
sbb
jbe
pop
nop
mov
aaa
mov
mov
mov
les
loopne
sbb
out
xor
shlb
lret
xadd
inc
or
scas
and
sbb
sarl
adc
loop
outsl
imul
cmp
cmp
jle
or
addr16
mov
sbb
ret
xchg
kmovw
shrl
cmpsl
sbb
xchg
and
sbbl
adc
popf
arpl
addr16
cmp
push
jmp
dec
loop
popf
cmp
cmp
call
fwait
mov
push
int
js
sbb
xchg
push
cmp
call
setp
jecxz
aaa
es
inc
push
shl
push
adc
in
mov
sub
mov
pop
xchg
popf
adc
test
sub
sub
clc
fwait
aaa
dec
icebp
pop
jae
dec
mov
add
fcoml
pop
inc
call
xchg
cltd
iret
fstp
jae
lret
cld
fs
fldl
push
les
xchg
fcomps
and
int3
in
and
inc
shll
sbb
cmp
loopne
hlt
mov
gs
cwtl
dec
repz
xchg
push
push
sub
jecxz
sbb
aas
pop
int3
cltd
push
pusha
outsl
ret
sti
xor
in
mov
xorl
fcmovnbe
add
shr
mov
frstor
inc
mov
nop
cmc
sbb
dec
xchg
clc
xor
lds
test
jle
inc
int3
push
mov
jbe
ret
gs
xor
ret
jno
and
mov
jge
jns
jbe
or
sub
fwait
xchg
inc
sub
jnp
cmp
adc
lods
push
mov
mov
jle
cmp
test
sar
or
stos
rolb
cmp
movsl
mov
mov
dec
dec
daa
mov
pop
xchg
cs
mov
inc
xor
decl
add
lods
lahf
lods
dec
test
xor
fiadds
mov
push
test
push
xchg
cmp
add
mov
insl
subl
pop
cwtl
scas
dec
lods
xchg
pop
cld
mov
icebp
mov
push
inc
roll
call
fiaddl
aaa
sub
imul
and
xchg
orl
fbstp
xor
fcoms
jg
mov
clc
jecxz
scas
sahf
mov
add
lret
lds
mov
dec
dec
loope
insl
rolb
cmp
mov
hlt
inc
in
or
jl
je
dec
arpl
test
lods
outsl
inc
std
pop
mov
hlt
cmp
addr16
lea
std
mov
mov
fisubrl
sarl
mov
outsb
add
mov
in
sbb
pop
mov
adc
xchg
inc
adc
xchg
clc
sbb
pop
adc
icebp
stos
mov
mov
ljmp
sbb
out
je
lahf
pop
ret
inc
movsl
xchg
push
out
pop
outsb
sub
sbbl
mov
movb
cmc
jle
xor
mov
xchg
clc
pop
mov
ret
mov
fmul
sbb
pop
or
sub
insb
jb
ja,pn
outsl
arpl
clc
cmc
mov
imul
sahf
and
sub
icebp
dec
sbb
adc
sti
hlt
les
mov
dec
cli
push
adc
adc
jne
xor
cli
dec
cmp
mov
das
sub
mov
cwtl
xchg
push
call
mov
js
iret
fmuls
fidivl
loopne
sbb
xor
daa
dec
mov
adc
ret
and
push
pop
dec
cvtdq2ps
xlat
mov
fdivrs
adc
aas
inc
ret
jbe
aam
pop
sbb
xor
mov
test
test
shr
xor
cltd
inc
mov
push
sub
add
popa
jo
repnz
clc
mov
add
or
mov
imul
cli
or
pop
mov
shr
subb
mov
inc
sub
add
or
cmpl
or
loope
mov
lods
lock
scas
mov
xchg
mov
jae
push
insb
das
andl
xchg
in
jmp
cmp
and
ss
mov
sbb
cltd
fadds
xor
in
cmp
mov
sub
out
add
pop
imul
shll
pop
add
xor
push
lret
xor
mov
ss
roll
stos
lods
cmc
push
into
mov
insl
addr16
fimull
or
test
fadds
push
mov
pusha
dec
pop
in
xchg
sbb
push
sti
push
sbb
in
pop
cmp
vcvtsd2si
cmpxchg
inc
push
dec
or
in
shr
add
inc
sub
pop
cs
pop
jnp
xchg
jae
lds
fwait
push
sub
mov
mov
inc
adc
fldt
sub
mov
xor
cmp
mov
cmpb
sbb
and
bound
adc
bound
jecxz
fwait
mov
fcomp
repz
xchg
and
stos
imul
pop
lcall
sub
xchg
mov
push
mov
notl
jo
adc
pop
push
cmp
lock
add
mov
rcll
pinsrw
jo
mov
adc
mov
jmp
mov
adc
sbb
fcompl
lahf
fs
orb
psrad
lods
and
pushf
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
xor
imul
jp
pop
jp
loop
test
xchg
mov
movb
mov
jp
xor
xlat
push
shll
call
dec
rcrb
adc
sti
and
xchg
mov
pop
jno
int
stc
repnz
ja
inc
js
movsl
insl
stos
adc
inc
enter
xchg
mov
sub
shll
das
pop
push
mov
aas
in
cmp
in
pop
xchg
inc
xchg
inc
movsl
rcr
nop
pop
cwtl
ljmp
cmpsl
loopne
mov
dec
lret
pusha
xchg
mov
jp
loope
lret
mov
sbb
jmp
jae
cmp
into
inc
loope
pop
hlt
jp
push
cltd
push
xor
rol
popf
and
je
mov
jl
loopne
jecxz
stos
cmc
xchg
sub
mov
jno
and
js
pushf
shl
mov
test
jmp
testb
mov
cmp
cmp
pop
xchg
shl
fst
dec
ret
scas
and
dec
push
inc
icebp
popf
fiaddl
mov
pop
cmp
pop
jns
sub
daa
jne
xor
adc
into
insl
push
lret
addb
push
xchg
into
adc
fldenv
in
or
mov
dec
xchg
out
ret
sbb
xchg
inc
mov
clc
imul
es
arpl
aad
xchg
dec
pop
mov
mov
jge
dec
shrl
fisubrs
loope
and
and
mov
call
pop
ljmp
gs
pop
mov
mov
pop
stos
push
outsb
pop
cmp
mov
lgs
cmp
imul
xchg
je
push
sbb
push
or
dec
cld
idivb
ficoms
scas
repnz
fistl
push
outsl
mov
mov
xor
push
fdivs
add
fwait
dec
lahf
mov
jbe
add
add
hlt
cmp
scas
pop
add
xor
hlt
push
sub
push
push
nop
test
cmp
shrb
andb
pop
push
sub
ds
and
jmp
push
push
xor
dec
pop
cmpsl
test
out
loope
adc
lahf
pop
and
popf
jnp
push
push
mov
inc
int
mov
mov
lahf
lds
cmp
and
jae
sahf
hlt
in
push
fwait
add
mov
or
inc
xor
hlt
dec
push
jmp
sub
cwtl
jns
cld
mov
push
mov
rcrb
fstpt
add
int3
sub
inc
mov
xchg
and
add
jae
addr16
in
xor
loope
xchg
mov
or
pop
pop
arpl
rorb
pop
pusha
ror
test
xchg
fcoms
test
xchg
inc
dec
pop
sub
push
jo
mov
das
lock
xor
sub
xor
lods
daa
aad
and
es
cli
addr16
std
dec
add
fidivs
fs
dec
xor
rcr
cmp
sbb
sub
push
shlb
jle
sahf
mov
cli
ljmp
jns
scas
jnp
jo
nop
mov
daa
loop
xor
xor
nop
dec
mov
pusha
push
mov
stc
fidivs
pop
pop
jno
jl
in
push
mov
lcall
movsl
lds
add
inc
pop
lds
add
and
movsl
mov
xor
inc
fistpll
jae
jo
or
inc
dec
insl
out
jae
mov
mov
adc
sbb
xchg
or
std
mov
lods
cli
add
jno
sbb
mov
jb
sbb
fucom
data16
int3
repnz
or
xchg
movsb
and
mov
rorb
sbb
arpl
xor
mov
sahf
jge
dec
test
push
xor
push
sub
xchg
int
add
and
in
ja
lret
leave
data16
jmp
mov
ljmp
rcl
pop
rcl
fs
je
xor
insl
or
jecxz
mov
test
pop
sbbl
shlb
mov
pop
push
ret
ret
pusha
or
xor
inc
mov
cmp
xchg
addb
or
js
sarb
jbe
mov
pop
dec
inc
jnp
imul
mov
cmp
cmp
xor
and
std
fildll
cmp
in
or
lods
sbb
sbb
mov
insb
cmp
daa
loopne
and
mov
orb
sbb
jbe
mov
pop
enter
sahf
repz
dec
jle
lods
test
stos
ds
into
xchg
push
shll
nop
out
fistpl
or
daa
test
inc
cs
dec
int
stc
cmpl
inc
lock
mov
shl
out
inc
dec
lret
sub
xchg
out
std
mov
and
popa
dec
push
loop
xor
out
or
pop
jne
aad
movsb
pop
sub
lods
popf
adc
inc
rcr
fidivs
jo
into
fldl
add
jge
mov
cld
pop
pop
sahf
rcll
sarb
movb
xorb
pop
inc
mov
add
repz
sbb
add
cmp
jecxz
mov
call
adc
clc
ss
mov
lock
inc
fsts
sbb
out
test
aaa
cmp
xchg
jge
dec
and
add
jle
mov
pushf
sbb
pop
cli
arpl
clc
pop
jns
scas
aad
sub
dec
fisttpl
xor
or
pop
xor
in
and
push
bound
mov
rclb
lock
lds
pop
push
xchg
inc
lret
leave
repz
in
rorb
dec
sti
and
xchg
xchg
pop
cmp
ret
mov
xchg
mov
pop
add
mov
test
lret
std
filds
mov
xchg
addr16
pop
mov
iret
jl
jmp
mov
add
inc
sbb
mov
je
cwtl
ja
inc
mov
inc
imul
add
inc
sahf
add
xchg
inc
lods
subl
das
leave
mov
aad
mov
fdivrl
bound
xchg
lock
and
inc
pop
push
xlat
push
add
fwait
rcl
mov
ret
fldcw
sar
scas
add
and
cmp
int3
pop
mov
adc
pop
pop
insl
cmp
jle
loope
hlt
mov
ret
push
int3
mov
dec
xchg
dec
movsb
imull
into
push
in
js
outsb
sbb
push
in
cmc
adc
cmpsl
pop
add
icebp
outsb
mov
and
int3
stc
out
aad
shrl
pop
xor
mov
nop
stc
pop
es
int
popf
jl
scas
adc
add
hlt
jl
shrd
ljmp
test
push
nop
add
test
pushf
in
insl
aaa
sbb
sub
test
jecxz
or
dec
jbe
inc
dec
fistl
pusha
jp
inc
push
dec
cli
sti
sar
mov
jecxz
addl
scas
dec
addb
fs
imul
in
lds
push
push
mov
out
add
jl
iret
sbb
popf
lock
xor
pop
cmp
out
roll
loop
mov
pop
inc
loop
inc
movsb
arpl
jg
pop
fs
loopne
xchg
test
cmp
ljmp
jns
hlt
insl
push
sub
xor
mov
movsb
lods
lcall
jp
cmp
xchg
cmp
jae
cmp
xchg
test
mov
aad
sahf
cmc
sti
cwtl
lcall
loop
ss
inc
mov
ss
lret
cltd
mov
push
xchg
xchg
loope
jle
push
int
or
sbb
shl
mov
mov
xchg
xlat
bnd
jmp
and
jp
adc
call
lods
jae
gs
jg
cmp
mov
mov
cmc
jle
dec
fldcw
shl
test
mov
loopne
hlt
arpl
xchg
aad
cmp
das
mov
pusha
jle
fisttpll
or
push
push
cltd
lret
inc
ss
rorl
add
sub
mov
inc
push
mov
adc
dec
sub
or
shll
aad
xor
lock
outsl
lahf
roll
and
xchg
sbb
aad
lret
xchg
in
out
mov
aam
pusha
sbb
mov
mov
push
adc
fisttps
fcmovb
mov
cmp
and
inc
loopne
stc
adc
iret
cwtl
insb
in
pusha
mov
fists
xorb
mov
shrl
leave
and
xor
mov
add
paddusb
in
dec
test
pop
sub
adc
dec
cmp
jae
add
jnp
scas
push
cli
mov
in
ror
test
imul
pushf
and
sub
xchg
pop
jmp
pushf
or
pop
or
out
mov
icebp
push
adc
ret
and
stos
jmp
xor
scas
dec
out
iret
dec
xchg
sub
or
jne
enter
and
imul
repnz
adc
and
arpl
pop
sahf
push
inc
leave
out
jno
ljmp
in
and
fs
mov
push
pop
sub
sub
ret
jmp
stos
gs
dec
pusha
pushf
sub
or
sub
inc
icebp
mov
lods
jmp
sbb
sub
mov
sbb
insb
jb
popa
gs
push
outsl
mov
cwtl
pop
bnd
cmp
mov
fistl
pop
jno
cmpsb
inc
push
roll
rorl
jbe
lds
and
jle
cmpsl
bound
lret
xor
leave
mov
outsb
les
loope
repz
lret
mov
fildll
and
or
mov
loope
cli
sbb
jbe
lret
sahf
popa
imul
fidivs
mov
adc
dec
adc
loop
mov
push
addr16
test
fildl
cli
in
loope
loop
cli
hlt
or
scas
push
les
and
and
jmp
sub
mov
dec
mov
push
fldcw
mov
loopne
jo
xor
jmp
push
xor
mov
lahf
xchg
fsubl
pop
scas
imul
cmc
cwtl
dec
lds
cld
pop
iret
fwait
outsb
push
mov
nop
push
xchg
push
testl
std
lahf
outsl
sbb
lahf
push
fucomp
and
in
sbbl
mov
in
adc
cld
mov
fiaddl
shlb
jno
enter
jae
jp
xchg
pop
sbb
sbb
outsl
nop
and
adc
jmp
jno
aas
sbb
or
je
or
ja
in
add
or
rcrl
cmp
fdivrs
gs
fstpl
outsb
andb
iret
sbb
add
dec
push
cli
subb
xchg
push
lock
ljmp
add
pushf
or
xor
sub
ljmp
dec
mov
imul
in
testb
jp
or
loopne
sbb
loope
aaa
stos
xchg
dec
mov
popa
mov
mov
mov
popa
shlb
cmp
loop,pt
jns
mov
fmuls
mov
inc
or
fsin
push
in
loop
pop
mov
inc
stos
sub
sahf
cmp
ret
dec
pop
fildl
xlat
aad
scas
jecxz
mov
add
adc
jp
cmc
cmp
jae
push
dec
jno
jmp
adc
pop
or
movsl
call
lods
add
jl
repnz
rcr
dec
adc
dec
cmp
sahf
lods
sbb
aas
xchg
popa
dec
scas
sbb
out
and
jns
push
inc
mov
pop
aad
iret
sbb
fmuls
push
aad
xchg
loope
das
inc
cmp
in
mov
sbb
test
stc
outsl
jecxz
mov
and
jle
sub
ds
jle
cs
loopne
rorl
add
pop
mov
mov
mov
lods
pop
int3
xchg
sahf
je
dec
jo
aam
enter
dec
cwtl
sbb
push
das
mov
jge
call
int3
pop
mov
sbb
inc
addr16
imul
mov
xchg
idiv
loope
leave
push
ficoms
sub
jecxz
inc
ficoms
fsubr
fidivl
out
mov
jl
enter
and
cs
cmp
jecxz
test
adc
or
fsubr
mov
iret
fimull
lret
jae
enter
xchg
mov
xchg
adc
sub
push
add
cmpsl
mov
jmp
bound
cmpb
inc
pushf
int
pop
xchg
jb
mov
sub
sti
adc
add
inc
jbe
cmp
dec
sub
jge
sub
mov
popa
mov
jo
cmc
ds
fs
pop
dec
xor
or
cld
push
mov
xor
push
movsb
leave
lods
add
pop
mull
clc
mov
dec
mov
dec
cmpsl
cs
dec
fld
xchg
ja
fdivrs
ds
mov
lods
inc
divl
push
cli
or
push
mov
dec
inc
stc
xchg
ljmp
sub
adc
push
clc
pop
cli
xor
imul
push
lods
jno
mov
mov
fiadds
out
stos
sub
sbb
cmp
fmuls
loopne
enter
sbb
inc
push
out
jnp
pop
push
jle
imul
inc
pop
js
mov
add
out
mov
sbbl
sahf
mov
mov
jge
std
ja
push
push
ret
dec
sub
mov
mov
add
rclb
out
cmp
xor
and
xchg
sbb
xchg
mov
mov
mov
mov
adc
fdivr
pop
adc
insl
std
mov
test
jb
mov
adc
in
push
jae
jbe
lock
xor
insl
mov
sbb
hlt
call
pop
lock
jb
cmp
cmp
repz
mov
cmp
mov
mov
movsb
dec
mov
or
test
aaa
lret
insb
jmp
push
fisubl
pusha
pop
pop
xchg
pop
cld
or
mov
mov
inc
lahf
push
aad
imul
mov
lds
xchg
mov
test
mov
movsl
sub
mov
pop
xor
mov
loope
mov
in
sbb
imul
jge
aam
pop
mov
stos
fwait
dec
stos
das
dec
std
and
aas
cmc
into
fcoms
lahf
adc
into
push
notb
jne
add
xchg
jecxz
loope
mov
sahf
jmp
cwtl
mov
stc
mov
mov
pop
mov
lcall
sub
mov
cs
jecxz
lds
movsb
loopne
loope
xor
push
cmpsl
jno
addr16
faddl
lods
mov
cmp
ljmp
dec
inc
fstps
aam
mov
xor
repz
or
cmp
adc
inc
add
mov
pop
add
xchg
inc
in
sahf
rcrl
movl
sahf
xor
ds
xacquire
inc
out
mov
xor
mov
jnp
inc
push
jle
cmp
ljmp
repnz
stos
sahf
sbb
pusha
mov
daa
sub
dec
in
xor
nop
daa
xchg
xor
mov
arpl
cmp
or
xor
cli
pop
adc
jno
mov
fstp
rcrb
sbb
inc
push
adc
lock
movsb
inc
sbb
into
inc
mov
push
adc
mov
push
fisttps
mov
pop
pop
adc
fdivl
inc
jns
push
inc
imul
xor
add
xor
dec
out
cs
jo
loopne
in
popa
lds
rorl
mov
clc
mov
ret
xchg
js
int
pop
or
out
enter
dec
mov
das
xor
sbb
dec
stc
out
xchg
or
lret
outsb
rcrb
xor
xor
push
cmpsb
xchg
nop
push
inc
gs
popl
inc
mov
outsw
lret
jnp
push
add
js
lea
pop
mov
cmp
or
scas
mov
push
lock
in
fstpt
aad
sbb
ss
jge
js
ficomps
outsl
xor
fstpl
mov
cmp
std
shll
shl
loop
inc
push
cld
movsb
mov
cmp
xchg
sub
push
push
mov
iret
jmp
mov
lcall
out
inc
fwait
lods
mov
sarb
sub
jb
lds
jge
out
xchg
push
pop
fisubrs
jno
inc
lock
shll
sahf
inc
mov
inc
xor
mov
add
inc
test
inc
fdivr
setle
outsb
mov
and
jp
push
ret
mov
leave
add
popf
sbb
hlt
mov
push
sbb
bnd
loopnew
mov
pop
push
movsb
mov
ret
imul
xchg
sarl
loope
pop
pop
ret
pop
mov
push
out
movsb
sti
mov
sti
sub
push
in
in
xor
lock
lret
sub
mov
movsb
jge
popl
inc
mov
scas
pop
sarl
out
in
popf
xchg
in
mov
out
or
inc
int3
jno
dec
lods
mov
out
xor
aam
inc
cwtl
cmp
lea
iret
lds
lcall
fnsave
pop
jmp
das
dec
ret
ret
inc
les
in
insl
les
scas
inc
push
out
jno
jle
pop
dec
jecxz
sti
imul
imul
add
mov
xlat
in
sarl
gs
pop
mov
jmp
mov
popa
mov
sub
cld
jl
xchg
repz
fdivrs
jnp
inc
rol
lods
mov
jne
into
mov
push
int3
pop
ja
sahf
dec
inc
mov
cmc
inc
xor
pop
int3
xlat
in
mov
xor
mov
jge
mov
inc
outsl
outsl
stc
ret
xchg
push
ljmp
lds
xor
inc
ds
pop
and
lret
mov
push
movq
push
inc
arpl
cmp
test
dec
jge
mov
sbb
addr16
xchg
dec
mov
xor
pusha
out
cwtl
add
mov
popa
or
mov
sahf
fsub
mov
loopne
pop
enter
call
popf
in
fldenv
or
in
aas
lret
movsb
fsubs
xchg
lods
mov
jb
or
loope
in
insl
sub
add
test
cmp
and
mov
xchg
dec
std
mov
insl
jne
xor
xchg
xlat
push
lret
push
std
popf
in
mov
movsb
jb
mov
mov
jge
mov
jbe
xor
orl
mov
xchg
push
aam
mov
adc
fsubl
mov
xlat
and
sbbl
xchg
ret
nop
scas
loopne
out
xor
sub
scas
pop
inc
cmpsb
mov
loope
popf
mov
loop
and
adc
sbb
lods
in
or
pop
jns
es
pushf
popf
xor
dec
mov
jp
insb
pop
lock
in
in
sub
push
popl
jo
lret
add
daa
test
mov
shl
js
xchg
adc
jle
inc
int3
ret
ds
sbb
mov
sub
ret
loopne
jg
mov
sahf
xor
cmp
xchg
clc
add
data16
dec
jns
loopne
cmp
xchg
pop
mov
adc
add
mov
cmp
lret
and
adcl
lcall
movsb
jecxz
pop
fwait
into
jmp
iret
add
in
cs
int3
add
and
incl
fwait
pushf
xchg
sub
add
sbb
les
dec
xor
shlb
push
push
xchg
clc
fadd
mov
loop
notb
or
daa
js
mov
fnstcw
popf
bound
clc
push
lahf
add
loop
stos
std
inc
out
cmp
or
sbb
mov
enter
test
and
decb
pop
adc
adc
dec
pop
or
lret
in
icebp
mov
sub
enter
add
add
add
std
lods
lods
fucom
aam
scas
xlat
int3
cmp
mov
mov
lock
lret
inc
sub
inc
pop
mov
stc
push
in
int
inc
ja
in
ret
push
enter
jo
jno
push
push
add
pop
pushf
ss
mov
and
sbb
xlat
mov
push
fcmovu
cmc
jno
mov
into
sub
js
or
push
jle
or
mov
dec
dec
loopne
push
jns
mov
mov
outsl
aam
out
mov
and
aaa
adc
div
out
andb
cmp
jge
xor
pop
ljmp
jmp
and
adc
add
repnz
add
mulb
xchg
gs
lods
or
push
jle
js
movsb
mov
xchg
push
sbb
jle
push
push
lcall
push
xchg
mov
test
in
adc
mov
pop
add
movb
push
pop
lods
xchg
mov
mov
xorb
inc
addr16
xor
and
pusha
inc
cmp
cwtl
xchg
add
imul
call
xor
dec
pop
xor
ljmp
jl
daa
ljmp
mov
les
test
sub
sub
dec
jo
add
pushf
mov
jb
xchg
cmp
mov
nop
out
add
je
movsl
scas
jmp
orb
pop
xchg
scas
adc
xor
inc
mov
jae
push
int3
shlb
jb
scas
cmc
fnstcw
sbb
aaa
mov
dec
pop
mov
mov
cmp
add
stos
fnstenv
inc
push
jl
cmp
js
dec
mov
imull
cmp
enter
xor
mov
jbe
lds
addr16
jmp
pop
bound
insl
cli
pusha
cmp
xor
or
mov
scas
dec
jp
sti
sbb
ret
fdivrl
pop
or
mov
mov
mov
inc
loopne
adc
inc
pop
dec
les
mov
inc
sbb
into
movsb
pop
or
xor
sub
cli
xor
lahf
outsl
imul
int
xchg
sbb
ljmp
adc
xlat
das
dec
mov
je
cmp
or
std
test
and
cmc
rorb
bnd
sbb
fadds
test
or
mov
es
out
pushf
popf
jae
rol
push
jne
jp
or
lods
mov
or
mov
sahf
insb
cmc
fildll
and
cmp
arpl
scas
xchg
addb
or
mov
int3
rcr
adc
mov
dec
mov
popa
xchg
aad
in
shll
push
inc
fsubl
cwtl
lods
in
enter
or
and
dec
inc
push
xor
popa
mov
mov
dec
out
lcall
jmp
push
push
lods
xor
outsl
roll
repz
shl
jne
in
or
nop
mov
xchg
mov
test
fsubrs
into
rep
loope
bound
add
sub
sbb
lahf
outsl
test
repz
out
je
pop
cmpsl
ljmp
inc
mov
and
push
pop
jmp
sub
gs
fnstcw
ljmp
mov
xchg
call
pop
add
add
inc
pop
push
inc
pop
inc
test
into
cmp
or
daa
mov
negb
mov
cwtl
adc
jle
fcomps
mov
les
movsb
dec
dec
test
xchg
cli
or
int
adc
sub
mov
cli
inc
lret
push
ljmp
ja
in
lods
clc
cwtl
xlat
filds
jbe
fidivs
xor
adcl
stos
mov
dec
cld
fildll
and
pop
cmpsl
sahf
jb
push
es
mov
xchg
pop
inc
adc
loop
mov
push
ficoms
test
rclb
xor
inc
popa
testb
nop
jne
jns
inc
mov
adcl
pop
xchg
popa
fs
jecxz
add
jmp
in
lds
aam
push
jnp
inc
in
mov
mov
fdivp
or
sub
cli
mov
arpl
ret
jo
cli
sbb
in
cwtl
jns
arpl
mov
leave
repnz
push
mov
sbb
rcrl
pushf
rcrb
mov
pop
imul
das
push
rcll
movsb
imul
mov
outsl
xchg
addb
mov
iret
test
clc
adc
dec
repnz
xor
inc
iret
mov
in
fnstsw
or
sbb
call
call
insl
outsl
test
lods
jmp
jb
scas
or
jp
mov
js
sbb
xchg
jns
mov
xchg
lret
sub
fsubrs
cmc
movsl
rol
jbe
xchg
dec
sbb
pop
repz
lea
push
in
je
in
scas
lds
inc
inc
mov
adc
mov
push
push
xor
cld
mov
add
filds
mov
cmp
or
sarb
cmp
loope
sbb
xchg
xlat
add
add
mov
pop
push
xchg
and
mov
mov
xor
jp
mov
xchg
mov
rcrb
inc
cmp
xorl
adc
std
push
dec
js
stos
jmp
mov
cmpsl
andb
js
pop
adc
push
jmp
outsl
inc
mov
hlt
loop
fisttps
cmp
aad
jno
jecxz
imul
icebp
fcompl
js
adc
fsubr
rorb
lahf
stos
xor
xchg
jns
sahf
sbb
xchg
js,pt
insb
pop
rclb
xchg
inc
dec
movsl
cmp
and
xchg
rol
fiadds
popa
outsb
pop
sahf
hlt
lods
sbb
std
insb
bound
daa
jle
sub
aam
enter
aam
cmp
out
jl
cmp
sub
outsl
xchg
cmp
jg
pop
ja
sub
rorl
repz
outsb
mov
loope
je
mov
cmc
jns
dec
int
test
mov
and
ret
xor
adc
hlt
je
push
pop
aaa
shll
xchg
xchg
cltd
ljmp
hlt
js
pop
fisttps
inc
dec
in
push
ss
mov
mov
xchg
xchg
xor
int
shrl
sbb
pop
jmp
adc
mov
cli
stos
in
pop
xchg
ror
lret
adc
jmp
int3
jmp
dec
pop
mov
leave
pop
es
aaa
test
dec
inc
xchg
lahf
push
pusha
outsb
inc
dec
mov
out
roll
mov
jl
out
repnz
andb
mov
and
jp
mov
cmp
icebp
cmp
sbb
jbe
pop
mov
imul
dec
cs
addr16
pop
lret
shrl
push
adc
mov
cmpsb
xchg
rclb
fstps
mov
pop
sbb
dec
insb
cmp
xchg
mov
mov
sub
out
fidivs
xchg
cmp
sarl
add
ret
push
cli
jmp
stos
fs
mov
pop
xchg
stc
sti
leave
jb
shll
test
mov
sub
loopw
rorb
and
shll
cmpsl
jbe
push
mov
lds
cmc
sti
sbb
lock
lds
mov
mov
dec
jb
lock
addb
shlb
jp
das
jp
pop
xchg
repnz
daa
cld
daa
inc
sub
icebp
mov
push
xchg
cmp
cmp
xchg
ficoms
ja
push
or
and
sbb
lret
movsl
jp
insl
add
enter
popf
xchg
into
lea
fstpt
pop
mov
xchg
push
ljmp
jne
sbb
xchg
cltd
push
mov
lcall
shl
fidivl
cld
mov
divl
cmp
gs
mov
jle
inc
or
ljmp
outsl
rolb
cs
test
xor
bound
adc
out
mov
pop
cmpsl
jbe
shlb
int3
fisubrs
arpl
mov
fiaddl
movsb
mov
sub
jg
push
cld
dec
je
cmp
adc
repz
jo
mov
out
jb
inc
ret
data16
mov
push
stc
int3
cmp
pop
pop
dec
xchg
mov
pop
adc
je
add
jbe
pop
mov
mov
pusha
icebp
xchg
mov
push
ror
push
push
pushf
fs
shl
adc
das
dec
pop
push
into
adc
push
mov
mul
mov
scas
pop
movsb
xorl
adc
mov
inc
cmp
xchg
out
in
xor
je
mov
scas
hlt
jbe
lods
daa
sbb
lahf
popf
adc
inc
idiv
mov
jge
mov
adc
inc
mov
jns
pusha
cmp
push
call
pop
pushf
fwait
push
mov
repz
cwtl
mov
test
cmp
jnp
mov
push
mov
sahf
add
and
mov
pop
xchg
js
jmp
daa
adc
inc
jns
cmp
call
add
loop
call
into
nop
sti
fs
fisttpl
sub
push
lods
or
js
mov
add
stc
addl
pushl
sbb
push
xchg
das
lcall
clc
les
dec
lret
data16
xor
push
std
push
fisubrl
and
xchg
pusha
lea
lahf
mov
pop
jnp
sbb
lods
daa
push
loopne
lret
mov
push
dec
sub
mov
nop
js
jmp
ret
cmp
or
adc
shll
jmp
mov
icebp
mov
fwait
cmp
daa
xor
mov
enter
mov
ret
adc
push
add
xchg
addr16
cli
xor
push
push
hlt
cmc
push
jp
ja
mov
in
and
add
std
cli
mov
cmp
jl
inc
dec
xor
or
lahf
test
adc
pop
imul
decb
cmp
adc
outsl
out
dec
inc
out
push
insb
lock
mov
add
mov
int
mov
mov
jae
and
sahf
jmp
push
mov
lret
dec
shrl
adc
xchg
mov
sub
mov
sbb
xlat
lret
lods
int3
sub
test
aad
stc
rol
sbb
adc
lret
jmp
nop
adc
pop
mov
adc
dec
sbb
push
mov
aad
sarl
test
xchg
inc
decl
test
sarb
cmp
sbbb
jbe
xlat
popa
inc
pop
cmpsb
into
insb
xlat
push
xor
push
jmp
mov
mov
repnz
lods
pop
sar
out
nop
pushf
xor
adc
bound
sbb
jb
xor
in
gs
es
cmpsb
loope
cmp
in
mov
out
cmc
xchg
stos
sbb
and
cmp
push
call
lods
gs
adc
sbb
mov
in
enter
filds
lahf
mov
mov
mov
mov
push
add
scas
lret
test
dec
or
add
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
and
ja
lcall
or
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
sar
add
test
add
add
or
or
and
shlb
adc
jp
jne
dec
sarb
es
imul
aas
jb
jns
cmp
add
cltd
decl
std
pop
inc
stos
jno
in
mov
mov
and
add
cmp
or
insl
cmpsl
pushf
mov
ljmp
es
inc
inc
adc
enter
lods
push
hlt
jle
fwait
aaa
stos
or
dec
mov
fstpl
mov
jp
cmp
pop
lea
xchg
fistps
dec
dec
sub
cmpsl
xor
mov
mov
fldenv
dec
das
dec
or
jmp
data16
push
test
and
jg
test
fimull
inc
add
mov
into
adc
test
fwait
dec
repz
mov
lret
inc
arpl
js
gs
jae
sub
in
xor
daa
jp
out
xor
and
sbb
movsb
add
mov
arpl
lret
rcrb
dec
sahf
sbb
dec
dec
ja
push
lahf
leave
dec
cmc
push
adc
and
add
movsl
add
inc
push
out
xor
int3
dec
ja
push
or
sar
xchg
arpl
icebp
xchg
push
xchg
cmp
adc
mov
rcr
xchg
jle
roll
cs
aam
jmp
inc
xchg
xor
inc
cmp
scas
sub
mov
push
and
mov
sti
adc
dec
movsb
jge
fidivrl
inc
xchg
jae
mov
js
jge
sbb
aam
sbbb
sub
mov
mov
int3
shll
lods
dec
lock
mov
jmp
adc
or
addb
aam
jl
jnp
jmp
mov
verr
xor
fsubrs
shrb
sub
roll
dec
pusha
pop
ldmxcsr
cmp
xor
pop
pop
rcll
imul
repnz
pop
popl
test
rcr
and
out
ja
sub
adc
ljmp
jp
cmp
aad
enter
cmp
xor
dec
and
bound
push
inc
mov
add
nop
cwtl
adc
jecxz
in
ret
cmp
cmp
adc
lret
push
adc
mov
adc
sub
jg
or
dec
add
dec
add
add
add
idiv
jg
mov
mov
fdiv
jge
add
test
add
aam
test
jb
cmp
clc
stos
sbb
iret
inc
sub
subb
jp
or
movsl
stos
dec
sbb
cwtl
mov
sti
test
or
das
imul
push
jecxz
xchg
ljmp
fcos
ds
xor
scas
adc
lock
mov
xor
popf
icebp
dec
stc
add
cmp
cmp
sub
pusha
add
add
or
adc
imulb
dec
fdivrp
fisttpl
bound
fcmovb
popf
aad
dec
jge
cli
popa
mov
ljmpw
jmp
cmp
mov
clc
pop
clc
loope
adc
fimull
jge
inc
test
push
xor
outsl
stc
add
cmp
das
arpl
inc
sub
push
or
jl
adc
pop
cmp
lcall
popf
sub
and
stos
dec
jnp
xor
inc
pop
push
cmp
enter
cmp
loope
mov
jmp
jb
mov
lret
int
and
sarl
clc
repz
clc
push
ja
adc
push
mov
bound
out
sub
xchg
add
adc
ljmp
pop
in
mov
loop
cld
pop
pop
mov
aaa
fdivp
sub
or
or
test
lds
mov
xor
xchg
and
loope
lret
and
fisttpll
mov
je
cmp
mov
ret
jbe
out
mov
pop
test
fidivs
add
add
fwait
jecxz
pop
mov
call
adc
sbb
fdivrs
sbb
lods
pop
movsb
fstps
mov
jle
and
or
enter
leave
aas
lcall
push
in
adc
aaa
in
xor
jge
test
movsl
mov
and
ret
pop
cmp
xchg
icebp
outsl
cmp
fwait
mov
dec
clc
daa
les
inc
in
lret
push
mov
mov
addr16
sub
popa
inc
flds
test
sub
scas
xchg
jno
jo
sub
cmpsl
in
mov
push
test
stos
mov
rclb
sqrtps
rolb
add
pop
sbb
pop
xchg
mov
addl
add
add
scas
out
pushf
rcll
sti
xchg
inc
call
movsb
fistl
outsl
jno
daa
sbb
and
in
or
xchg
mov
add
jne
pusha
sub
rcr
or
or
nop/reserved
hlt
mov
loopne
mov
ljmp
mov
push
das
rcl
mov
mov
adc
pop
fs
fcomps
out
xor
pop
mov
jmp
stos
sahf
roll
or
out
insl
dec
lahf
insl
test
mov
leave
imull
sub
lret
or
pop
outsl
inc
scas
dec
cwtl
sbb
rcrb
push
sbb
mov
in
sub
insb
jae
shrl
push
push
and
jp
dec
lret
adc
popa
xor
idivl
and
imul
imul
mov
in
ret
test
mov
fnstsw
lret
das
pusha
les
test
add
mov
sbb
and
aas
jns
scas
pop
cmp
sub
lcall
xor
out
mov
out
dec
and
mov
cmc
fwait
mov
xchg
aaa
test
clc
mov
int
enter
movsl
pop
or
pusha
push
hlt
orb
jmp
push
int
jp
adc
mov
outsl
dec
dec
dec
jo
imul
mov
sub
stos
lea
inc
popa
lcall
mov
cli
div
mov
arpl
arpl
fistpll
and
mov
and
stc
cld
mull
mov
cmp
push
mov
dec
ljmp
mov
in
shrb
pop
fldenv
ss
mov
xchg
lods
shll
popf
push
test
shld
movsl
lods
cmp
pop
jnp
es
pushf
repnz
add
xor
in
pop
adc
jne
xchg
cmc
cmp
mov
add
imul
outsb
insb
out
ja
imul
dec
movsl
sbb
leave
add
shrl
jle
mov
add
add
mov
mov
pusha
mov
cmc
mov
pop
sbb
inc
or
loopne
popa
mov
flds
add
push
add
mov
jp
push
stos
cs
test
add
push
ret
xchg
or
dec
jmp
hlt
mov
notl
sub
xor
jne
icebp
hlt
sarl
pop
sahf
sahf
inc
lea
in
pop
jg
jecxz
push
movsl
rcll
cmp
sub
dec
sbb
pop
outsb
in
iret
add
or
push
cltd
int
mov
jmp
inc
dec
fsubl
sarb
pop
push
fistl
sub
xorb
out
sub
andl
xchg
cmovp
and
cmpsb
cmpsl
sub
fmul
mov
cmp
in
mov
pop
aad
sbb
sbb
add
sub
leave
lods
mov
push
sub
sub
and
add
push
add
into
ret
mov
lods
fsts
mov
jnp
fisttpll
or
xchg
inc
push
icebp
sbb
mov
test
sub
fadd
repz
int3
and
dec
iret
jae
icebp
arpl
stc
pusha
mov
int3
dec
fiadds
dec
xchg
xor
mov
into
adc
dec
mov
jno
mov
pop
test
inc
push
adc
lret
stos
xchg
lret
mov
dec
push
push
xchg
jbe
mov
dec
mov
xor
loop
and
popa
push
stc
int3
add
lods
negb
and
mov
lds
mov
jae
fisubs
scas
rcll
lret
lds
ljmp
add
fwait
lods
pop
popa
sahf
negl
arpl
in
add
scas
je
out
xorb
lret
xchg
call
jnp
fdivr
jl
insb
test
pop
mov
push
jge
sti
idivb
cwtl
or
ds
lods
cmovo
mov
xor
fisubrs
insl
xchg
bound
or
fistpll
sahf
shll
fstpt
inc
mov
cmpsb
push
pop
fcompl
ja
int3
cmpsl
fadd
mov
jle
push
jbe
xor
aas
jb
movsb
dec
push
out
ret
out
sbb
sarl
adc
imul
mov
inc
add
movsb
jle
pop
popf
dec
pusha
or
scas
add
add
mov
add
add
hlt
mov
std
jl
dec
pop
cmp
jns
daa
or
add
test
add
and
out
gs
icebp
mov
push
mov
mov
adc
incb
in
push
and
jle
xchg
pop
jb
int3
loope
xchg
loopne
push
mov
icebp
xchg
mov
pop
dec
mov
fildll
push
inc
inc
mov
push
bnd
decl
mov
imul
inc
and
dec
mov
mov
fmulp
test
mov
out
jb
mov
xchg
lahf
inc
test
gs
clc
jo
sbb
cmpsl
test
jne
jmp
adc
ds
pop
adc
fld
ss
out
and
cmp
or
xor
cld
mov
fwait
sub
sub
add
iret
orl
enter
cld
lock
sti
dec
adc
test
mov
ficoms
lds
fcompl
andl
pop
add
data16
mov
shl
roll
mov
insl
pop
inc
pop
rcrb
das
mov
jp
mov
call
inc
pushf
sub
pop
push
push
aad
lcall
lea
cmc
dec
cwtl
sarl
jno
fldz
sbb
mulb
pop
mov
mov
mov
cli
cli
iret
call
xor
and
add
icebp
xor
cli
cmpb
mov
sub
mov
mov
push
cli
and
imul
xchg
lods
push
rcll
sti
je
inc
insb
adc
repnz
in
jp
fwait
popf
popf
cmp
int3
adc
out
scas
mov
pop
xchg
lea
xlat
shlb
out
sub
mul
jmp
in
popa
out
cltd
cmp
pusha
inc
popf
jns
sbb
and
jno
iret
sub
out
adc
xchg
cmp
hlt
lahf
lods
jg
fs
mov
std
mov
add
push
jnp
decb
gs
loop
fstpt
pop
int
shr
inc
daa
imul
aam
dec
lods
test
aam
bound
cmp
imul
sbb
lods
or
idivl
mov
push
fcmovnu
xchg
push
mov
sarl
xchg
neg
shrb
fdivr
pop
or
mov
push
and
shlb
mov
shl
in
jmp
je
mov
add
pop
mov
mov
pop
cld
mov
add
push
mov
test
popa
repnz
mov
jmp
or
rol
call
add
mov
xlat
jbe
sahf
in
mov
lret
xor
mov
test
or
addb
jns
jmp
in
push
fsubl
mov
add
push
rcr
sahf
mov
jno
mov
lahf
dec
push
xchg
mov
loop
mulb
jns
jae
lret
or
cs
or
pop
dec
dec
pop
fldl2t
or
fidivs
cmpsb
jne
pop
out
dec
rcrl
mov
mov
cltd
xchg
jecxz
push
test
sbb
cmpsl
lods
jo
xchg
jecxz
add
jae
sbb
jo
pop
pop
fisubl
dec
pop
sbb
or
and
in
xchg
and
loop
add
jl
sahf
in
xor
sub
clc
ss
loop
add
mov
mov
addr16
dec
aas
mov
cs
leave
outsb
mov
pop
in
xchg
sub
push
ret
inc
fisubrl
das
mov
repz
pop
and
push
repz
push
add
daa
or
sub
inc
cwtl
sar
fwait
mov
arpl
fmulp
and
cli
or
orb
adc
ds
jmp
jbe
jge
fstp
sbb
jnp
push
pop
rcrb
dec
jle
xor
adc
jp
hlt
inc
mov
cwtl
jo
mov
loope
js
fimull
cmp
jno
enter
cmp
stos
js
cmpsl
jae
iret
iret
push
sub
ret
insb
movsb
cmp
jle
sti
in
repnz
xlat
in
or
inc
dec
test
aad
push
adcl
aas
xor
mov
mov
sbb
xor
lods
dec
movsl
enter
frstor
cmp
movsl
push
int
mov
sub
arpl
inc
adc
push
mov
ljmp
mov
xlat
mov
mov
mov
test
xchg
mov
hlt
push
call
stos
aas
ja
aaa
clc
mov
clc
subb
arpl
push
je
jnp
nop
sbb
mov
pushl
js
lret
or
or
addr16
jb
lret
inc
mov
shrl
xor
jmp
cwtl
sbb
and
pop
nop
add
add
jg
pop
aad
mov
loop
push
jno
add
jnp
mov
push
pshufw
stc
ret
jecxz
stc
add
movsb
xchg
xor
sti
ret
sbb
lock
gs
jae
lock
sahf
mov
daa
stc
sahf
cmp
xchg
rol
mov
enter
inc
inc
jecxz
mov
pop
popf
push
ljmp
loope
mov
sub
jp
outsb
lahf
je
je
lret
js
cs
aas
shlb
adc
loopne
add
idiv
call
mov
jmp
or
add
pop
jle
push
inc
mov
mov
sbb
das
icebp
add
jns
mov
fdivs
ror
jns
pop
sub
icebp
mov
push
std
rcr
cmp
fnsave
jno
fsts
push
xlat
mov
jle
arpl
mov
pop
xlat
xor
icebp
leave
outsb
mov
push
fmul
add
sti
mov
xor
test
dec
xchg
mov
scas
fnstsw
push
incl
in
add
orl
xchg
pop
mov
jno
xor
cmc
inc
pop
push
xchg
hlt
dec
cs
cmp
popa
mov
or
pop
rorl
cli
daa
mov
push
lahf
mov
mov
jnp
mov
mov
ret
jg
cmp
mov
add
mov
fcoms
pop
cmp
sub
dec
movsb
xchg
dec
roll
mov
popa
pop
xor
and
mov
push
mov
lcall
jp
fnstcw
jo,pt
and
jns
call
icebp
cmpl
loope
adc
inc
mov
fimull
xlat
inc
sub
or
adc
pop
sbbb
mov
nop
outsl
pusha
xchg
clc
fwait
mov
cmc
push
mov
xor
xor
mov
mov
iret
in
or
outsb
sub
es
jge
xchg
cmp
xchg
adc
call
outsl
or
jmp
test
xchg
int3
in
in
outsb
jne
jae
jecxz
xor
xchg
mov
jns
sbb
and
sub
adc
add
aad
mov
push
call
lret
jp
cmp
cltd
jle
inc
push
aad
add
xor
xchg
repnz
les
leave
jne
inc
lods
pop
stos
add
add
cmc
fistpll
stc
cmpsl
mov
fisubrl
ds
jae
add
dec
pop
mov
or
lods
cmp
subl
fldenv
and
xchg
mov
fisttpll
shlb
std
cwtl
into
mov
inc
xchg
and
xor
mov
leave
adc
add
test
stos
mov
mov
mov
aaa
xchg
shll
stc
mov
xor
sbb
loopne
push
add
or
rol
mov
insb
jns
jecxz
mov
add
fidivrs
addr16
lds
das
aad
push
or
and
pop
push
push
mov
lea
call
popf
pop
std
push
xor
iret
pushf
pusha
outsl
mov
xlat
and
xchg
mov
jle
scas
pop
lret
inc
fiadds
lea
pop
sbb
insb
mov
popa
push
and
mov
mov
cmp
loop
push
pop
icebp
adcb
mov
js
mov
fmul
xchg
pop
mov
mov
mov
push
or
lods
add
xchg
ficompl
hlt
ret
arpl
or
push
mov
mov
sbb
test
fisubrl
fildll
jmp
and
es
pusha
mov
cs
sub
push
sbb
iret
cmp
push
push
sub
clc
xor
notb
and
fisubl
loopne
outsl
lret
xchg
sarl
je
push
cld
jle
iret
stc
arpl
out
jo
xchg
shll
pop
loopne
test
movsb
push
fmul
push
test
cmpsb
daa
dec
test
je
xchg
std
xor
mov
push
hlt
das
push
push
push
push
fdivp
dec
dec
pop
fldcw
fnstenv
gs
mov
jne
and
sub
or
cmp
adc
movsb
cmp
sub
imul
ror
ret
xchg
fucomp
jge
mov
push
leave
pop
loopne
jnp
add
dec
lds
mov
rcl
xchg
add
les
aas
inc
inc
sbb
int
adc
xlat
xor
pop
bswap
mov
pop
out
xchg
xor
cmp
in
pop
in
stos
insb
dec
mov
xchg
imul
and
add
and
movsb
lea
lods
and
push
in
test
jbe
add
push
jle
cmp
add
pop
stos
ljmp
stos
cs
or
mov
and
maxps
pop
loopne
les
adc
inc
push
scas
pushf
loope
inc
in
adc
cld
sbb
mov
jae
fdivrl
add
push
xchg
push
les
jle
dec
je
and
test
or
dec
in
fildll
sbb
fdivl
rcl
faddl
mov
insb
mov
pop
fidivs
mov
dec
in
xor
repnz
mov
dec
outsb
sbbl
mov
xchg
mov
cmp
mov
insl
mov
sub
fsubl
adc
xorl
pop
adc
mov
cmc
rcrl
aad
lret
rclb
jle
jg
xchg
dec
aaa
dec
stos
mov
xor
mov
jae
dec
xchg
mov
cld
pop
ret
cmp
mov
scas
pop
add
lds
ret
in
pusha
js
mov
sahf
xor
and
inc
mov
loop
into
aaa
leave
push
bound
scas
dec
mov
aas
aas
adc
mov
pop
or
in
mov
hlt
mov
mov
imul
rcrb
popa
sbb
jns
xor
stos
mov
out
or
mov
cli
enter
pop
cmp
andl
jmp
addr16
notb
xchg
mov
xor
enter
mov
jg
scas
cmp
sti
test
sub
xrelease
or
clc
lcall
dec
adc
push
xor
dec
repnz
mov
push
pusha
and
stos
nop
mov
cmp
cmp
inc
push
push
mov
test
gs
mov
leave
cld
pop
orb
scas
fistpl
sbb
push
in
sbb
in
dec
mov
mov
jns
mov
add
mull
jle
or
ljmp
shlb
rcl
pop
cmpsl
int
repz
js
nop
xor
sub
or
and
cld
sti
sub
adc
imul
loopne
xlat
mov
add
add
test
mov
lods
movsl
js
add
and
mov
jmp
ds
inc
sub
cltd
ror
pop
jg
cmp
pop
and
mov
pop
push
fisttpll
push
aaa
and
mov
fstp
daa
js
ds
int
icebp
or
iret
arpl
stos
stc
adc
std
lds
jae
inc
jge
xchg
push
xchg
add
mov
or
xchg
mov
ffreep
ss
or
aaa
xchg
ds
repz
fiaddl
test
jl
mov
sub
ret
xchg
fwait
cmp
jmp
negb
mov
aas
icebp
pop
js
movsl
xchg
cli
dec
or
xor
ja
pop
sub
cld
mov
mov
xor
sub
es
push
rcr
pop
dec
addr16
mov
inc
dec
fnsave
fdivrl
dec
fnstenv
das
pop
mov
dec
mov
testl
mov
or
or
dec
mov
jne
je
mov
pop
push
mov
cwtl
dec
cmpsb
out
dec
pop
inc
xchg
jg
add
mov
sub
pop
ds
test
adc
frstor
mov
mov
dec
jge
popf
dec
mov
jecxz
cld
imul
clc
pop
in
insl
cwtl
cmp
cli
sbb
or
lret
insb
cs
push
cmp
mov
inc
les
mov
flds
xor
inc
cmp
add
xchg
xchg
push
jne
movsl
test
cmpsl
mov
lock
and
shlb
std
dec
push
lods
jne,pn
fwait
cmpsl
mov
movsl
mov
add
cmpl
shl
dec
mov
or
pop
jg
pop
call
aas
scas
ja
add
xchg
jns
fwait
pop
adc
xor
lret
and
jnp
in
jge
jmp
lock
xorl
arpl
es
and
cmpl
movsb
or
rorb
pop
mov
jbe
es
dec
test
mov
orb
test
add
rcr
hlt
sbb
fwait
inc
rorb
xchg
cmp
ljmp
pushf
outsb
cmpsl
mov
mov
adc
lret
data16
inc
cmp
ljmp
xlat
lea
mov
imul
enter
adc
add
scas
jb
leave
xchg
js
push
lods
xor
xchg
push
push
test
negl
sub
mov
mov
add
add
xchg
std
jg
in
pop
fsubrl
sbb
jnp
add
fiadds
cmp
push
jnp
fxam
std
xlat
xchg
xchg
loop
mov
sub
cwtl
jle
iret
fucomip
ret
jmp
xorb
je
cmp
mov
xchg
xchg
pop
iret
adc
dec
fistps
and
ficompl
pop
sbb
iretw
int3
push
faddl
pop
push
pop
imul
cs
cmc
and
in
sub
sbb
sbb
adc
fcoms
jl
jns
push
mov
cwtl
xor
jl
test
pop
inc
mov
lds
cltd
insb
sub
scas
pop
lea
jp
push
inc
xchg
ja
popa
push
enter
cmc
mov
dec
fsub
fstpl
aas
mov
in
push
mov
arpl
insb
repnz
xchg
loop
ret
or
aas
lahf
add
scas
out
stos
sub
xchg
jp
pop
ljmp
fildl
hlt
lods
inc
lahf
stc
ret
mov
shlb
xor
mov
cli
mov
pushf
inc
or
pop
sbb
jmp
sub
mov
outsl
sbb
lock
je
cmp
rcrb
repz
mov
lahf
aam
inc
scas
andb
dec
in
xor
xlat
inc
dec
lahf
push
mov
add
enter
push
mov
rolb
les
adc
inc
pop
xchg
bnd
mov
pop
aaa
mov
mov
hlt
add
pop
cli
ret
scas
cmc
sahf
enter
stc
cmp
xchg
movsb
out
mov
fsubrl
lods
sbb
mov
and
push
cwtl
adc
clc
stos
inc
mov
mov
pusha
xor
jns
fsubs
push
push
insb
jns
jecxz
push
or
std
enter
push
sub
xchg
jle
sbb
popa
sub
mov
dec
dec
aas
das
mov
mov
pop
mov
xorl
xor
mov
lcall
loope
jns
lret
jmp
dec
xchg
adc
out
jne
sarb
outsb
mov
cmp
insb
js
sbb
pop
add
xchg
dec
pop
clc
jmp
mov
ret
adc
pop
jmp
fs
dec
roll
sti
xorl
clc
sub
sub
xor
cmc
add
add
idiv
iret
std
mov
fildll
add
add
dec
pusha
pop
inc
xchg
cmp
mov
push
aam
xchg
xor
call
fucom
fs
mov
inc
sub
ficomps
lods
xchg
outsb
pop
push
aam
push
lret
and
push
stc
fmuls
mov
int3
shrb
or
adc
inc
js
mov
cmp
add
or
and
es
adcl
aas
add
cltd
and
cwtl
into
inc
cmc
in
popa
cs
adc
inc
loope
dec
push
jg
jbe
fildll
sub
jmp
ja
fs
loope
lret
cmp
inc
stos
data16
mov
stc
repnz
stos
inc
push
push
outsl
sub
pushf
xchg
aam
jne
xchg
call
data16
sub
mov
shl
lcall
inc
or
sub
push
aad
dec
cmp
jne
push
cs
adc
jl
in
add
fldl
dec
cltd
lock
adc
mov
cmp
cmp
rclb
les
daa
pop
add
xchg
push
fistl
cld
in
or
pop
je
roll
dec
pop
mov
xchg
jbe
add
push
xor
mov
mov
lock
mov
cmpsb
sahf
and
loopne
movsl
xor
scas
xor
xor
lcall
imul
or
cwtl
dec
jp
iret
add
add
rcl
cwtl
mov
cmc
adc
pop
in
push
xchg
pop
fbstp
iret
cwtl
mov
outsb
imul
fldl
mov
push
mov
dec
push
aaa
mov
push
dec
pushf
xchg
adcl
loop
out
je
or
mov
xchg
stc
xor
das
in
dec
push
jb
mov
jge
sub
sbb
leave
and
repnz
repnz
fiadds
mov
push
in
adc
and
inc
sub
popa
dec
arpl
push
cmpsl
fisubrs
mov
sub
add
aas
xchg
mov
out
in
std
je
xchg
cmpsb
jle
jo
ss
jecxz
xchg
scas
inc
dec
ja
jge
push
mov
sub
mov
mov
mov
push
mov
adc
xor
cs
mov
in
in
adc
cli
les
inc
jecxz
aas
sbb
dec
mov
or
inc
xor
jmp
mov
mov
jae
adc
addr16
out
mov
arpl
ret
mov
out
mov
fs
add
test
add
cmp
inc
lock
jae
pop
ds
lret
dec
mov
or
add
fcompl
lock
fsubrs
repz
mov
cli
xorb
lea
and
stos
fbld
xor
xchg
pop
js
in
in
push
stc
sub
sub
sbbb
mov
bound
xchg
imull
outsl
pop
repz
jecxz
movsl
repz
mov
mov
scas
movsl
dec
fidivl
pop
inc
pop
mov
stc
push
out
xchg
xchg
lret
sub
es
xchg
insl
push
mov
push
int3
mov
std
ss
cmp
loope
inc
fs
lods
lods
sub
mov
cmc
cmp
sub
pop
and
mov
xchg
into
mov
dec
push
addb
jp
and
mov
push
adc
cmpb
push
iret
stos
in
rorb
aam
cmpsl
pop
stc
rcrl
idivl
push
stos
shrl
lret
sub
adc
outsl
or
xchg
dec
mov
hlt
or
jo
jns
mov
pop
or
bound
inc
jne
ret
into
mov
xor
pop
mov
cmp
mov
iret
jbe
mov
xor
and
mov
inc
loopne
add
sahf
loop
sbb
sahf
sub
jmp
jle
and
shr
mov
add
repz
and
pushf
jne
or
jb
xor
and
lahf
or
in
xchg
decl
inc
mov
dec
icebp
movsl
aad
call
add
mov
xchg
out
gs
push
ss
shrb
sbb
imul
arpl
mov
aam
push
cmpsl
jae
mov
cmp
repnz
push
enter
movsl
push
dec
dec
sub
daa
jg
pop
fsubp
dec
mov
jge
mov
daa
push
out
clc
or
or
xor
mov
fldcw
inc
pop
add
pop
sbb
mov
adc
insl
sub
outsb
ret
sub
or
cwtl
add
sti
ja
enter
xchg
jl
mov
push
or
mov
jns
push
pop
pop
inc
imul
push
push
jle
xlat
outsl
mov
lcall
add
test
add
test
shll
sbb
test
fisubs
lret
mov
out
inc
or
jb
sbb
ja
and
dec
dec
adc
sub
push
add
xor
nop
fs
cmp
and
add
mov
mov
stos
lret
fimuls
popa
jbe
cli
mov
mov
sti
jecxz
xchg
int3
out
xchg
out
adc
daa
jecxz
mov
xor
cld
fmul
pop
out
fstps
and
push
fsub
iret
sub
dec
adc
inc
in
data16
xchg
adc
cld
packsswb
push
mov
addr16
push
xchg
cwtl
ja
mov
push
or
ds
cwtl
rorl
mov
add
addl
mov
pop
push
jo
shrb
out
adc
mov
in
lcall
sahf
mov
and
hlt
shll
aad
pop
clc
cmc
adc
frstor
lret
xchg
cltd
or
fisubrs
pushf
inc
fwait
xorb
or
lds
andl
inc
outsl
and
fisubrl
js
pop
jae
cmpsb
adc
ss
push
cmp
pop
aam
push
mov
rorl
xchg
test
pop
sub
js
orb
sbb
test
push
xchg
mov
pushl
inc
adc
popa
pusha
int3
push
iret
js
cmpsb
mov
cmpsl
jno
insl
in
hlt
mov
xchg
movsb
cmp
jnp
rcrb
add
repnz
sub
add
test
jno
mov
pop
and
jno
dec
in
cmp
jnp
lret
movsb
shlb
lret
push
pop
mov
xchg
push
sub
pushl
cld
inc
jb
fwait
ja
loop
andb
sbb
cwtl
cmc
in
daa
cmpb
or
or
shll
and
dec
or
addr16
enter
sbb
icebp
test
cs
stc
cmp
test
scas
push
dec
in
icebp
add
and
stos
popa
adc
lods
add
and
add
sbb
mov
out
inc
pop
sub
add
cmp
mov
aam
cmp
outsl
cli
and
fldcw
arpl
add
push
jno
mov
fbld
xchg
test
inc
aad
sti
shll
cmp
mov
xor
jle
mov
dec
arpl
mov
add
add
push
or
pop
out
repz
insb
add
test
add
push
and
pop
dec
adc
lods
loop
xchg
pop
aaa
mov
lock
push
out
test
mov
inc
sbb
or
int
movsb
cmpl
push
mov
sbb
pop
lock
enter
adc
mov
orl
jb
adcb
negb
fmull
push
pop
adc
popf
inc
std
clc
mov
cmp
fldenv
dec
aas
adc
sbb
lds
loop
testl
scas
push
mov
popl
pop
push
loope
test
dec
pushl
arpl
mov
jmp
cmpsb
fwait
xor
or
call
loop
sub
push
outsb
fimuls
gs
iret
insl
jo
in
das
lods
shrl
fistl
mov
imul
mov
push
push
out
movsb
cmp
das
aam
sbb
xor
int3
arpl
jae
adc
adc
push
fildll
imul
xor
dec
push
rorb
inc
lods
into
sbb
xchg
clc
xchg
mov
adc
out
loop
jge
dec
sarb
arpl
sub
adc
inc
adc
imul
jle
add
sbb
dec
into
idivl
repnz
or
mov
pop
cmpsb
lods
int
div
add
sub
adc
mov
and
and
cmp
push
popl
out
push
sysret
add
cwtl
fldt
ficompl
movsb
jmp
and
in
inc
je
push
dec
or
jl
mov
xor
xchg
mov
sub
gs
pop
add
add
aaa
bound
sub
jp
int
cmc
xor
das
mov
add
hlt
ljmp
jg
xlat
insl
dec
loopne
dec
out
enter
sbb
jns
adc
loopne
movsl
mov
fnstcw
test
sbb
les
push
lcall
or
mov
test
out
movsl
movsl
fwait
sub
jne
enter
loop
scas
pop
rcl
jmp
jmp
and
in
or
testb
mov
out
pop
rorb
adc
mov
push
add
add
xchg
insl
mov
aam
inc
fmuls
xchg
add
xor
fwait
sbb
sub
cmp
pop
cmp
cmp
inc
popa
inc
movsl
faddp
jo
cmp
lea
sub
or
cmp
jns
call
or
test
xchg
sub
sub
sbb
and
jmp
jbe
loopne
fcmovnu
icebp
rorl
cmpsb
imul
jge
fisubl
in
fdiv
andb
sub
mov
mov
scas
lcall
mov
call
test
and
dec
push
mov
negb
jnp
xchg
cltd
push
cwtl
add
fisttpl
pop
add
js
into
test
sbb
std
and
jno
aaa
sub
imul
mov
cmp
dec
fsubrl
repnz
fistl
adc
inc
push
dec
repz
inc
or
lods
pop
negl
and
shlb
aad
jae
inc
dec
or
and
aad
mov
mov
call
adc
in
out
imul
push
or
nop
mov
lock
push
lods
dec
insb
rcrl
and
lock
scas
inc
jne
dec
ret
mov
pop
faddl
xlat
repz
mov
imul
jecxz
fwait
aas
pop
cmovo
and
xchg
sbb
imul
rcr
aaa
cmp
mov
and
sbb
adc
add
arpl
mov
xchg
jecxz
adc
fxch
mov
push
sub
sbb
stos
cmc
jp
or
jecxz
add
les
pop
mov
inc
addr16
and
ds
dec
ss
sbb
shrb
int3
test
iret
pop
inc
mov
stos
adc
jle
orl
dec
aad
inc
jge
sbb
pop
repnz
roll
mov
or
in
repz
add
test
stc
or
mov
mov
repz
rcrl
pop
dec
outsb
clc
pop
pushf
enter
test
shrb
mov
sub
stc
mov
bnd
cmp
sub
sub
mov
std
and
xchg
inc
test
jmp
lods
rolb
add
dec
out
ja
idiv
pop
out
dec
mulb
test
inc
cmovs
add
inc
push
mov
and
mov
das
je
cli
jg
popf
xor
movsl
or
xor
mov
addr16
pop
push
jb
ds
mov
sub
shl
test
add
in
adc
cltd
cmp
mov
xor
pop
mov
push
cmpsl
or
test
cmp
imul
sub
inc
jmp
inc
pop
std
and
inc
adc
xor
adc
dec
imul
cltd
stc
je
lock
or
rolb
mov
push
jle
jno
sbbb
dec
inc
cvtps2pi
push
mov
mov
push
dec
repz
xchg
out
push
and
inc
cld
imul
loop
add
mov
lods
popa
pop
jbe
stos
adc
or
fcoml
std
pop
in
xchg
dec
sub
pop
js
sbb
xchg
cmp
mov
sbb
mov
fwait
push
popf
push
xor
adc
xor
js
gs
jne
in
aad
jmp
cmp
pop
cmp
test
outsb
ss
xchg
mov
sbb
mov
mov
mov
test
es
add
push
loope
lock
pop
cmpb
and
fs
inc
jge
xor
mov
mov
insb
hlt
fwait
popa
fstpl
sub
icebp
cmp
add
push
ret
push
and
push
aas
into
lods
je
aas
fs
sbb
stc
sub
xor
sub
repz
in
push
sbb
mov
or
jmp
add
repz
and
and
push
lods
jb
popf
mov
cmp
sbb
stos
daa
mov
lea
pop
stos
ret
mov
xchg
addr16
xchg
cmp
sbb
in
iret
inc
push
mov
aaa
push
out
sub
push
cmp
dec
xor
jno
rcll
into
sbbl
into
mov
mov
add
push
mov
push
testl
cwtl
add
mov
mov
mov
or
lock
jo
inc
ficompl
mov
stos
xchg
or
sub
dec
into
addr16
xchg
inc
clc
mov
addr16
loop
xchg
fldl
mov
mov
mov
pop
jecxz
sti
mov
test
push
add
test
add
push
addr16
into
jle
mov
rcrb
sbbb
jnp
mov
lcall
pusha
outsb
int3
cli
mov
mov
push
push
in
test
ret
sub
push
push
clc
in
mov
pop
clc
mov
lods
nop
dec
push
mov
push
scas
cwtl
notl
mov
popf
or
fistpl
add
lock
pushf
add
and
and
xor
cli
mov
testl
aaa
lds
in
lock
fstps
mov
divb
loop
xchg
lret
push
mov
cmp
mov
ss
push
add
pop
mov
mov
mov
mov
aam
push
add
or
jge
das
sbb
mov
daa
or
push
jb
fsub
cmpb
loopne
scas
test
ds
repz
iret
rcrb
repnz
jl
subl
push
mov
jp
jne
loopne
or
cmpsb
lock
scas
mov
mov
imul
cmp
imull
adc
dec
mov
mov
out
inc
sbb
fbstp
fstps
inc
arpl
adc
jae
add
outsb
pop
jp
mov
movsl
dec
divb
lods
dec
out
cli
movsb
xor
loopne
and
aad
push
ss
out
dec
jmp
fs
jo
add
test
or
xor
dec
jmp
adc
fcmovnb
lea
out
push
jno
stos
mov
js
inc
aad
push
add
insb
sub
cmc
dec
push
push
pop
out
xchg
inc
out
cmpl
cmpb
xchg
xchg
or
ds
mov
mov
cld
xchg
add
xchg
scas
pop
sub
push
pop
mov
fldcw
cltd
in
sbb
mov
xchg
inc
jbe
pop
scas
cmp
or
inc
cwtl
outsb
ret
imul
dec
dec
in
jle
movsl
add
push
lea
fstps
sahf
iret
sbb
jo
in
jecxz
cmp
adc
adc
loopne
add
jmp
stc
mov
jle
pusha
inc
cld
add
add
sahf
xor
mov
push
popl
add
js
cmp
add
jecxz
pop
dec
inc
repz
cmp
jno
push
fistl
ss
pop
cmp
iret
xlat
ss
mov
and
mov
xchg
xchg
fsubrl
dec
push
loop
add
sub
adc
stc
and
in
mov
cmc
mov
jp
out
lea
lods
out
nop
out
idiv
outsb
jecxz
and
dec
out
sub
enter
sub
push
stos
nop
push
xor
out
push
ja
das
xor
nop
dec
dec
push
push
push
nop
scas
call
or
lock
call
cmpb
sub
popa
sbb
xlat
xor
adc
or
mov
mov
lretw
repnz
mov
mov
int3
ja
movsl
test
shll
stc
ds
mov
xchg
mov
and
or
vpmacssdql
adc
or
or
xchg
aad
mov
movsb
lds
popa
stos
and
mov
in
mov
xorl
in
inc
pop
pop
push
mov
mov
hlt
dec
movsb
in
lret
aam
cmp
mov
push
jge
inc
out
push
scas
outsl
pop
loop
push
mov
jmp
in
fxch
add
or
dec
cmp
flds
sbb
lock
pop
xor
cmpl
repz
cs
pop
test
pop
mov
shll
xchg
repz
jae
out
xlat
xchg
dec
xchg
mov
in
stc
cmp
or
fs
enter
mov
iret
adc
andl
jle
cmc
mov
mov
xor
leave
cmpsb
repz
je
scas
loope
fiadds
xchg
call
and
sbb
inc
jae
mov
cmpsb
jo
mov
sbb
or
test
push
ss
cmp
cltd
inc
jge
shll
jns
dec
xchg
and
mul
adc
or
nop
jmp
and
dec
loopne
pop
ljmp
pushf
sub
and
jo
test
aad
dec
mov
xor
and
xchg
cmp
cmp
pushf
fsubrs
and
xlat
push
leave
dec
loope
aaa
repnz
add
std
in
mov
mov
std
pop
xor
cli
ret
jne
xlat
xchg
add
test
add
test
cmp
mov
cli
jg
scas
push
rcl
cmp
in
add
fisubrs
ret
cld
push
cs
mov
test
jle
out
dec
xchg
xor
iret
push
jno
jb
popa
xchg
je
clc
adc
dec
push
jo
cli
cld
fdiv
icebp
xlat
in
mov
cmp
jle
jmp
sbb
and
imul
mov
enter
dec
push
addb
mov
fs
inc
mov
jecxz
ret
add
loope
jo
xchg
loope
loop
outsl
ss
xchg
xor
push
aas
mov
mov
pop
scas
or
sub
hlt
es
cmp
sub
add
dec
scas
repnz
repz
roll
or
fcmove
ret
mov
sbb
dec
mov
lods
sbb
inc
les
jo
or
cwtl
mov
push
push
ret
or
and
cmp
dec
mov
shrb
mov
fsubr
push
stc
inc
mov
add
test
jl
push
and
pop
in
mov
sti
arpl
xlat
xchg
sbb
adc
lahf
cli
dec
dec
mov
in
jl
dec
dec
rdmsr
inc
stc
dec
loop
scas
rcr
inc
mov
jl
inc
xorl
xor
lret
fimull
loope
fwait
sbbl
cmp
fsubp
mov
sub
movsb
jb
mov
dec
add
push
pop
cld
loope
dec
inc
aad
jle
stos
mov
adcb
and
imul
out
shl
xorb
fs
ja
fcomp
dec
stos
dec
jmp
in
cmp
mov
insb
inc
sti
adcb
lods
test
aaa
hlt
cli
nop
jne
enter
dec
fcmovb
push
xchg
ficoms
les
and
mov
clc
ret
lods
fisttpl
jle
outsb
mov
and
cli
pusha
dec
les
pop
jle
cmp
icebp
jge
dec
push
mov
jnp
sar
or
out
in
rclb
add
fcmovb
lods
dec
mov
xchg
xchg
loopne
cmp
jb
mov
pop
xchg
nop
adc
cs
jl
mov
mov
cmpsl
ja
daa
aas
movb
push
das
add
sub
push
fisttps
fmulp
add
add
rolb
out
sub
bswap
iret
and
xchg
add
test
add
movsb
or
pop
jmp
push
test
loop
adc
mov
roll
aam
inc
cmpl
jecxz
movsl
test
jne
push
mov
ds
sub
shrl
out
outsl
stos
mov
adc
in
les
rorl
mov
ljmp
xor
and
mov
test
sbb
mov
pop
mov
pop
shlb
jbe
fdivrs
push
lods
mov
sbb
jecxz
shrl
and
and
fmuls
xacquire
lods
dec
mov
pop
add
in
ret
push
gs
inc
fcompl
adc
idivl
sub
mov
mov
jno
pop
cli
aaa
sti
enter
ja
data16
xchg
icebp
mov
mov
xchg
cli
lret
push
xor
int3
movsb
jecxz
out
pop
add
scas
sub
inc
sub
ss
in
mov
test
xchg
jnp
inc
mov
mov
mov
cmp
jo
mov
adc
mov
cmp
mov
or
push
cmp
push
xchg
roll
pop
pushf
mov
loop
adc
int
mov
pop
mov
aam
insl
cmp
jp
out
xchg
mov
fiadds
cmp
in
xlat
jecxz
sub
dec
loope
scas
pusha
roll
adc
inc
xor
arpl
mov
pop
xchg
jmp
call
push
sti
imulb
xor
cmp
jns
jmp
jge
xlat
dec
pusha
sub
lods
ljmp
fisubrl
adc
getsec
mov
icebp
push
and
mov
xor
ja
shlb
add
push
mov
lock
inc
and
fsubp
clc
mov
sub
inc
sbb
sub
jbe
imull
iret
out
xchg
dec
add
sar
add
add
data16
aaa
mov
leave
xchg
dec
or
int3
cmp
push
mov
popa
mov
mov
xchg
imul
inc
stos
gs
loopne
loopne
repnz
lods
or
cmp
inc
push
sub
lods
inc
sub
dec
add
pushf
cmc
mov
push
lods
roll
add
inc
inc
popa
data16
rcrl
xor
cli
jge
loope
add
test
add
push
popa
add
push
adc
lahf
sbb
add
mov
aaa
fwait
dec
sbb
mov
icebp
jg
mov
sbb
xor
jmp
jnp
pcmpgtw
jbe
loope
sbb
mov
pop
mov
repnz
fnstenv
sub
jo
stos
mov
mov
push
jge
sub
or
xchg
cltd
xchg
gs
lods
nop
or
aad
data16
mov
adc
mov
pop
mov
mov
sub
jb
fidivs
xchg
adc
in
out
cwtl
stos
adc
rorb
mov
cmp
and
popa
jno
in
shll
lret
scas
lret
add
xor
aaa
jo
adc
leave
xchg
push
and
ljmp
mov
dec
jne
insl
hlt
es
sub
or
in
xor
push
aad
mov
xor
faddl
push
lods
mov
ret
push
dec
or
push
ret
push
dec
xor
test
jle
or
mov
cmp
and
shrl
or
inc
mov
rolb
mov
push
jmp
inc
lret
pop
iret
lret
add
scas
shrb
fwait
lea
pop
fwait
xchg
iret
je
test
dec
out
pop
inc
pop
idivl
into
mov
sub
inc
and
in
lsl
mov
or
mov
mov
lcall
sub
xor
insl
pushf
dec
adc
push
xchg
and
inc
xchg
xchg
daa
lods
rcll
lahf
jnp
shll
sbb
dec
ja
mov
iret
jnp
xor
sahf
jnp
mov
pusha
cmp
std
or
xorl
movb
push
xor
jge
push
jmp
mov
mov
loopne
xlat
pop
bound
jb
in
es
rorl
mov
pop
lods
cld
mov
lret
adcl
leave
fstl
mov
test
insb
push
and
add
in
test
adc
pusha
popf
daa
or
mov
gs
sbb
sub
push
push
mov
mov
das
jle
jge
xor
and
cld
sub
dec
stos
pop
push
push
cmpb
jg
shlb
and
mov
add
mov
rcrl
repz
cli
in
jg
loopne
movsl
aas
insb
cwtd
add
test
add
ja
ja
or
lea
jnp
inc
sub
cmp
enter
sub
or
cs
inc
lret
movsb
mov
pop
pop
ljmp
insb
add
cmp
stos
loope
lods
stos
add
xor
inc
roll
mov
or
cmp
js
je
loopne
add
lods
leave
pop
dec
mov
and
fisubrs
push
jnp
xor
adc
das
movsb
sbb
push
push
add
fisttps
xchg
jge
xchg
pop
ffreep
bound
xchg
lahf
inc
jno
sub
out
pop
movsb
movsb
lods
dec
sub
cmp
lret
imul
adc
das
jno
add
pop
shr
lods
add
sub
sbb
mov
jge
xor
mov
push
cmc
mov
int
xchg
push
dec
imul
jp
sbb
inc
aam
or
sub
mov
cmp
jle
cmp
les
mov
or
pop
pop
lods
lea
pop
push
cli
mov
jle
je
cli
jb
dec
fbstp
push
jle
test
sub
or
pop
sahf
test
lret
repz
cmp
out
scas
mov
mov
cmp
xor
icebp
dec
xlat
or
jmp
fucomip
imul
orl
pop
jno
add
sarb
stos
jo
push
imul
push
mov
scas
xor
lods
gs
pop
repnz
test
flds
popa
fs
dec
rcll
adc
jno
lcall
imul
imul
sbb
in
rcll
cwtl
lcall
aad
into
mov
jb
add
adc
sbb
jp
ss
cmp
pop
outsl
popf
in
icebp
xchg
jp
mov
jnp
rcll
push
push
inc
push
sbbl
xor
mov
mov
cmp
or
mov
pop
enter
push
movsl
jg
mov
xchg
lret
out
mov
mov
mov
popa
shll
add
jno
cmpsb
push
dec
push
into
mov
data16
mov
movsl
fldt
pop
mov
xchg
fistl
push
jge
mov
cmp
insl
test
add
shlb
xchg
lcall
cmpsb
and
push
imul
add
add
add
jl
add
scas
xor
imul
punpcklwd
out
xor
mov
cmp
movsb
cmp
lret
vpmovmskb
rcr
or
sbb
jne
cmpsb
dec
inc
packuswb
inc
mov
ja
movsl
bound
jg
or
or
inc
dec
push
je
sub
roll
in
and
std
icebp
and
dec
addb
xchg
insl
jbe
ss
inc
in
push
inc
rorb
sbb
fnstenv
xor
or
pusha
push
jb
cli
out
xchg
push
sti
clc
jp
dec
push
es
cmpsl
cmp
mov
scas
js
je
sbb
ret
jecxz
and
cwtl
and
jns
jge
stc
out
ret
jo
adc
or
jl
addr16
loope
faddl
lock
test
ja
popf
shlb
dec
mov
movsb
and
push
clc
xlat
addb
sbb
jecxz
adc
ss
shll
or
push
mov
sbb
loope
cmp
adc
test
in
jbe,pn
jae
stos
fisttps
mov
sbb
sub
sbb
lods
je
ret
dec
jmp
xchg
ret
mov
dec
decb
repnz
add
add
scas
xor
xchg
scas
and
sbb
pop
jne
dec
outsl
ds
ss
fnsave
jns
ds
scas
lock
inc
inc
loope
movsb
mov
hlt
sub
or
popa
pop
jmp
inc
and
xchg
sub
fdivrl
out
sub
xor
mov
sub
lods
pusha
pop
fdivrl
jnp
out
ds
jecxz
dec
gs
sub
outsl
ret
into
dec
mov
pop
add
jle
lahf
pusha
in
push
adc
sbb
lret
add
jo
mov
mov
in
clc
jle
mov
pop
cli
mov
pop
lret
xlat
and
push
xchg
inc
inc
and
cmp
ret
pcmpgtw
inc
cmc
sti
sbb
fsubrl
scas
int
daa
int3
pop
or
decb
shll
sti
mov
test
ret
mov
clc
and
into
sahf
jae
cmp
mov
push
mov
out
popa
push
lcall
jmp
aam
sti
stos
sti
in
sahf
jno
ret
cmp
icebp
lock
push
sub
pop
ret
and
jnp
xor
add
add
cmp
mov
add
adc
add
add
cwtl
js
mov
inc
pop
cwtl
fcoms
insl
test
loop
loope
int3
inc
daa
sub
pop
pop
pop
mov
adc
mov
in
dec
push
cmc
push
gs
xchg
out
int
fdivs
int
mov
mov
into
or
repz
leave
in
lcall
dec
push
push
lea
cmovl
scas
loope
bound
clc
stc
sub
jecxz
pop
cs
mov
shrb
ss
or
cltd
rorl
jmp
jge
jmp
stos
jp
sub
dec
and
inc
jle
push
lods
arpl
lea
adc
inc
insl
adc
fs
push
xor
mov
arpl
lcall
in
mov
jg
cli
jo
movsl
addr16
mov
xor
jmp
and
outsl
sahf
test
movsb
out
arpl
inc
add
mov
ljmp
and
xchg
jge
inc
sub
push
adc
push
int
or
and
iret
int3
inc
sub
fsubl
sti
ja
lock
ss
mov
and
adc
test
mov
or
aaa
xlat
jno
and
hlt
ret
xor
mov
push
or
leave
mov
jmp
sub
jae
sub
insl
or
cmp
jmp
leave
dec
adc
mov
mov
ljmp
fsts
xchg
push
es
sbb
sbb
and
mov
mov
inc
addl
and
pusha
lea
or
inc
add
int3
je
gs
cld
int
std
ljmp
stos
bound
cltd
jno
imul
sub
sub
fwait
add
in
push
test
movsl
cwtl
mov
pushf
orb
xor
mov
roll
push
stos
adc
dec
xor
dec
cs
mov
test
test
sbb
mov
jb
pop
fisttpll
and
test
popf
rorl
push
or
je
dec
dec
in
sbb
pop
or
jbe
xorl
enter
xor
popf
insb
aad
or
mov
xor
fidivrs
xor
add
add
inc
mov
and
cmc
mov
add
dec
pop
mov
fistl
pop
mov
adc
jg
or
scas
shll
pop
push
dec
jnp
ret
shrb
js
cmp
leave
push
mov
cmpsb
xchg
dec
dec
das
div
add
out
pop
popa
lret
movsl
mov
sbb
cmc
fisubs
insl
leave
in
xsha256
cmpsb
push
ljmp
or
pop
push
cwtl
jnp
pop
xchg
into
ljmp
fwait
lret
jne
shlb
clc
or
inc
repz
jmp
mov
test
or
out
and
cmp
pop
mov
fldcw
mov
or
clc
js
subl
jl
loope
add
jecxz
fsubr
adc
insb
jmp
movl
xor
mov
dec
rorl
jb
inc
rcrl
mov
cmp
xor
scas
rcll
notl
push
orb
out
lahf
adc
dec
hlt
ja
xchg
mov
sbb
jbe
sbb
jno
mov
aad
mov
movsb
loop
es
fldcw
icebp
pop
push
cs
iret
imul
dec
lcall
movsl
outsb
cwtl
sub
sbb
sub
xchg
loope
pop
cwtl
jnp
sub
mov
jbe
pop
mov
out
or
lret
xchg
mov
inc
les
loope
adcl
push
pushf
adc
aad
movsl
aaa
cmpsl
pop
xchg
or
sub
imul
sahf
mov
xor
sub
mov
insb
sbb
xor
push
jl
jne
in
inc
inc
data16
pop
adc
mov
cmpsl
mov
cwtl
in
jo
test
push
push
in
xlat
xchg
mov
std
push
add
in
jmp
push
fs
sub
jno
sub
mov
scas
pop
in
xchg
je
movsb
pop
hlt
inc
and
jl
dec
imul
cld
rorb
movl
jnp
xchg
xor
aas
add
scas
fidivrl
subb
int3
lds
jecxz
push
adc
cwtl
sbb
inc
ljmp
mov
push
in
out
in
and
pop
push
jp
pop
stos
icebp
mov
sub
mov
dec
jno
imul
test
add
add
mov
cmp
jle
xor
mov
add
test
add
pushf
cmc
and
lahf
pop
or
fldt
call
test
testb
leave
push
sahf
sub
scas
mov
pushf
mov
push
lock
or
clc
pusha
and
mov
in
pop
shrb
dec
dec
jnp
pop
mov
mov
sub
jbe
je
cmp
push
xor
xlat
movsl
lahf
mov
sbb
push
mov
sbb
popl
sti
rclb
in
sbb
mov
cmc
sub
xchg
insl
inc
sbb
cmpsl
daa
outsb
in
push
mov
std
jnp
sbb
sub
add
add
out
pop
into
adc
out
je
jno
mov
mov
loopne
jl
mov
pop
in
fisttpll
es
jb
cmp
hlt
xor
fsubrs
cmp
xchg
push
rorl
inc
sub
xor
out
insl
test
sub
and
bound
daa
movsb
inc
jo
adc
or
sub
into
ds
movsl
lds
push
out
jns
push
test
clc
push
jae
pop
std
cs
pushf
lret
mov
lds
xchg
shl
ret
xor
mov
xor
fldt
ja
dec
dec
sbb
test
adcl
jbe
push
or
jo
push
add
scas
enter
mov
stos
lret
adc
das
in
cmp
fs
cld
lret
in
ret
lea
jne
fdivs
xor
sub
jmp
mov
pusha
push
aas
adc
sbb
push
jg
cmp
repz
pop
jmp
loope
je
pop
xchg
jle
xchg
mov
ss
ret
mov
hlt
mov
daa
push
adc
push
xchg
mov
sub
add
inc
fs
sbb
out
into
dec
outsl
mov
pop
xor
dec
out
jns
mov
in
stos
dec
push
idivl
loopne
lea
fwait
popf
loop
xor
adc
scas
pop
adc
repnz
jo
mov
gs
push
cmp
bound
xchg
testl
mov
pop
lea
fildl
loop
jge
das
insb
dec
int3
mov
jmp
add
int3
and
aas
pop
push
lds
add
add
cmp
out
idivl
mov
adcl
add
test
add
lock
bnd
call
mov
sub
sub
insl
mov
negl
xorb
xchg
ret
dec
packuswb
dec
je
mov
fisttpll
lods
imul
push
xchg
outsb
push
jnp
out
adc
cli
mov
inc
xchg
pop
testl
adc
xor
out
ret
lea
jl
movsl
or
xchg
es
push
mov
mov
adcb
mov
and
lods
leave
or
dec
and
out
sub
data16
mov
jno
xlat
je
arpl
inc
or
mov
add
sub
outsl
fsubp
mov
jp
and
adc
cmp
push
sbbb
adc
ffree
mov
jo
incl
or
mov
scas
pop
mov
data16
pop
dec
and
cli
loop
xchg
pusha
cmpsl
adc
mov
rcrl
test
jns
sub
stos
add
loope
cmp
cmp
xchg
and
jno
pusha
pusha
fcompl
loope,pt
pop
add
sub
xchg
mov
subl
test
pop
mov
xor
fwait
adc
push
ficomps
pop
in
jbe
xchg
push
cmp
xchg
nop
and
leave
mov
je
out
mov
incb
mov
mov
mov
push
inc
dec
sbb
xor
push
fisubl
lods
mov
lea
add
inc
mov
mulb
adc
bound
jge
push
insb
fnsave
add
in
add
inc
jbe
loope
adc
sub
jo
mov
mov
popf
cwtl
fidivrs
mov
lock
test
iret
jb
daa
pop
lods
clc
imul
sbb
or
pop
push
sbb
cli
cmp
or
out
mov
inc
imul
ljmp
addr16
pop
or
adc
stos
fistpll
mov
mov
adc
lcall
jbe
lods
call
subb
test
je
ja
imul
lret
adc
std
sahf
ds
inc
shr
xchg
repz
xchg
mov
and
maxps
sbb
mov
jg
push
add
add
sbb
fsin
out
gs
idivb
mov
add
sahf
sbb
pop
fwait
mov
push
xor
dec
arpl
add
inc
dec
inc
mov
test
arpl
ret
push
sub
inc
int3
or
sub
adcl
cmpl
cmp
dec
es
rcr
mov
adc
lock
lret
xchg
sub
gs
cmc
mov
mov
int
adc
ds
push
cmp
clc
sti
int3
icebp
push
xchg
or
sbb
loopne
aam
pop
aaa
lock
xchg
add
iret
ja
daa
mov
shrb
push
outsb
mov
dec
xchg
lret
and
roll
sbb
shl
test
pop
pop
or
mov
and
popa
inc
sbb
mov
ret
jg,pn
pop
xchg
out
test
inc
and
and
sub
fs
iret
adc
test
fs
mov
xlat
ror
pop
dec
jg
in
dec
in
adc
mov
movsb
and
lret
mov
insl
mov
fs
loope
add
fstpt
jbe
add
push
push
popa
inc
or
push
ret
into
cmpsl
imul
inc
mov
mov
inc
dec
inc
sbb
dec
jns
call
or
jecxz
data16
inc
inc
mov
test
sahf
mov
or
clc
shl
fldenv
sub
in
xchg
sti
cld
jnp
xor
or
ret
sarl
add
repnz
cmp
jnp
xchg
and
inc
cmp
loopne
mov
jle
lahf
xchg
movsl
sub
mov
rcl
cltd
xchg
fnstsw
xchg
cmp
mov
jp
mov
push
rcrl
mov
cwtl
pop
aas
mov
fdivrs
and
loopne
sbbb
add
mov
xchg
or
pop
inc
xlat
sbb
pop
lcall
jecxz
outsl
out
ret
push
adc
nop
fcomip
dec
pushf
jmp
mov
mov
aas
mov
xor
xor
sub
ficomps
sub
lock
ljmp
jb
add
lahf
sub
jle
push
mov
bound
fsubs
jmp
adc
sub
and
or
add
insl
push
push
sbb
mov
dec
mov
xchg
cmpsl
xchg
cwtl
les
pop
in
es
jp
jne
dec
in
hlt
int
popf
jmp
add
outsb
enter
xchg
dec
test
and
rcrl
sub
leave
mov
lods
je
in
data16
jnp
popa
fcmovnbe
sbb
xlat
jne
jae
dec
xchg
jmp
inc
popf
movb
lret
insl
mov
jnp
push
jno
xor
jecxz
sbb
mov
in
mov
sbb
test
xor
cld
decb
push
jnp
and
adc
aas
xchg
jae
stos
jg
jge
push
fnstcw
popf
and
sub
outsl
ljmp
pushf
mov
xor
push
sbb
xchg
mov
js
dec
xchg
fwait
mov
push
mov
std
lea
outsl
dec
sub
or
test
shld
sbb
dec
and
jmp
push
pop
stos
inc
mov
pop
enter
shll
sti
adc
xor
jne
and
sub
lcall
sbbb
jecxz
jg
sub
pop
lods
sbb
in
mov
pop
lds
cli
mov
pop
insl
fsub
addr16
jno
js
mov
mov
fsub
decb
jbe
sub
ljmp
mov
pop
add
mov
xchg
inc
cmp
sahf
sub
cld
xor
call
mov
dec
mov
fidivs
inc
or
repnz
lods
and
jp
out
or
dec
and
pushf
jae
shlb
es
stos
lods
aas
lret
fcoms
ds
adc
test
adc
mov
xchg
test
jecxz
mov
pop
test
mov
jecxz
adc
mov
rol
pop
xor
mov
mov
repz
cltd
orl
push
cmpsb
rcll
fmul
repz
repz
and
sbb
cs
dec
std
xchg
mov
adc
out
push
pop
subl
mov
shlb
mov
scas
ljmp
mov
pop
add
add
and
xor
pop
and
add
leave
mov
or
mov
mov
cmp
aam
and
mov
or
add
stos
jl
lret
sbb
movsb
sub
inc
std
daa
cmpsl
push
and
xchg
loop
adc
xor
dec
jle
push
imull
push
add
stos
sahf
jmp
lret
jb
aas
cmp
aam
cmp
adc
testl
xlat
imul
std
les
dec
or
imul
pop
cmp
js
dec
fldcw
in
xor
push
xor
add
xchg
les
add
outsl
imul
sbb
lods
xchg
or
mov
call
cld
xor
mov
xchg
inc
dec
sbb
movsb
push
divb
ds
inc
bound
and
sti
jae
aad
pushl
ds
push
sbb
xor
cmp
jecxz
jl
mov
inc
adc
jp
inc
lahf
and
push
lock
pop
or
push
mov
push
mov
mov
mov
dec
call
xor
mov
ret
jmp
lret
aad
inc
mov
jno
mov
xchg
add
fstpl
fiaddl
add
jge
rorb
arpl
cmpsl
daa
jmp
arpl
lahf
int3
sbb
repnz
xchg
pop
aam
xor
mov
sub
daa
sbb
sub
mov
adc
mov
mov
test
pop
testb
xor
outsl
enter
arpl
cltd
ljmp
dec
imul
push
pop
sub
fidivl
lret
icebp
ss
lahf
ja
sbb
jb
inc
loopne
sbb
xchg
jbe
mov
xor
clc
and
bound
sbb
flds
jge
add
dec
aam
mov
test
cmpsb
and
cli
cmp
lea
mov
push
rcrb
mov
mov
push
add
dec
dec
js
scas
in
xchg
lcall
adc
daa
mov
mov
cmp
enter
test
push
rcl
push
mov
cwtl
mov
jmp
cmpsl
gs
pop
cmp
insl
leave
test
clc
lret
and
add
dec
mov
push
xchg
je
dec
das
popf
ret
mov
mov
add
pop
mov
jg
popa
hlt
mov
int
mov
add
cli
lcall
arpl
adc
js
dec
enter
out
test
jge
je
sub
xchg
mov
adc
inc
mov
cli
addr16
or
jbe
mov
pop
mov
out
sub
movsb
cs
jl
dec
cs
mov
xchg
insb
mov
int3
sbb
movsb
xorb
fwait
pushf
mov
das
idiv
mov
fldenv
jne
icebp
sub
fisubl
mov
and
into
lds
movsl
sarb
arpl
lret
ror
int3
cwtl
out
repnz
pop
pushl
std
jge
fisubrs
loope
lret
xor
pop
popfw
lcall
fwait
and
addr16
sbb
push
jle
sbb
sbb
xchg
cs
cmpsb
xor
mov
fldenv
inc
xchg
lret
dec
cmp
lods
mov
int
mov
in
xor
outsl
push
cmpb
or
jbe
outsb
mov
sahf
cmp
dec
pop
mov
call
sub
out
or
pop
andl
or
push
mov
fistpll
inc
fwait
int3
jne
xor
inc
pop
mov
or
fisttpll
push
xchg
xchg
mov
add
bound
cmpsl
stc
ljmp
popf
mov
imul
insl
inc
stos
add
movsl
pop
add
popf
and
fisttps
bnd
dec
sahf
subb
push
lods
push
cld
or
cmpb
mov
mov
in
jno
sarb
jp
xchg
cmp
xchg
mov
add
pushf
stos
imul
in
cmp
pop
les
mov
pop
ds
aaa
pop
lahf
ljmp
popf
mov
xor
add
xor
pop
mov
add
leave
xlat
inc
adc
stc
lcall
xchg
adc
and
lods
int
repz
jno
sbb
dec
cs
ret
pop
imul
add
mov
or
mov
clc
jnp
aam
out
cmp
bswap
mov
in
test
pop
mov
mov
dec
mov
fildl
inc
cmp
divb
push
jp
push
add
int
add
inc
push
pusha
jbe
out
fnstsw
jno
scas
cwtl
mov
add
and
inc
clc
gs
imul
pop
push
inc
fs
cmp
xchg
cmpsb
cmpsl
xor
repz
es
rcl
push
pushf
inc
jp
mov
mov
ret
adc
pop
das
cli
push
mov
fists
jp,pt
mov
scas
scas
inc
mov
push
push
push
inc
sub
xor
icebp
scas
fisubrs
push
das
mov
daa
cmc
sub
rorl
fsubs
add
or
pop
cltd
push
je
aaa
andl
clc
and
jecxz
pop
jle
pop
out
bound
pop
or
popa
shrl
dec
daa
mov
pop
shll
pusha
into
push
xor
xchg
insb
jl
inc
fistps
mov
outsb
in
cmpsb
pop
push
lcall
fcmovu
mov
jp
or
mov
lods
test
xchg
mov
mov
jge
dec
inc
orb
jp
gs
repz
cmp
out
fwait
push
ljmp
mov
shlb
dec
add
inc
and
arpl
out
cmp
pop
inc
nop
daa
ljmp
pop
stc
ffree
dec
xchg
push
pop
xchg
test
daa
imul
pushf
dec
mov
dec
mov
fsubrs
int3
inc
jp
les
mov
xchg
push
xor
loope
aam
pusha
mov
stos
cmp
imul
push
andl
lea
adc
lods
insb
imul
pushf
aam
fldcw
in
push
mov
lahf
mov
xchg
lds
adc
pusha
out
gs
push
and
hlt
cmp
imul
xchg
fstl
ja
aas
xchg
sbbb
fcomp
nop
arpl
cld
outsb
mov
call
lahf
mov
dec
lcall
xchg
adc
xchg
push
pop
int3
cli
jp
shlb
pshufw
in
inc
pop
in
xchg
xor
je
mov
dec
or
test
pop
repnz
sub
inc
xchg
lock
test
test
ja
inc
jecxz
jbe
dec
mov
sahf
dec
pop
push
cmp
jb
adc
jo
call
fstpl
cmp
imul
sbb
ret
add
add
pop
lcall
inc
adc
loop
mov
mov
add
aam
or
gs
mov
xchg
lds
xor
mov
mov
pusha
lds
pop
jp
xchg
xchg
sbb
movsb
insb
mov
mov
fidivrl
mov
sbb
call
sbb
into
jb
pop
pop
push
fs
mov
repz
sub
mov
mov
mov
lock
adc
gs
xorb
mov
das
pop
push
mov
push
out
xor
fbld
and
ficoml
sbb
jp
les
mov
shrb
push
sbb
fidivrl
arpl
pop
movb
push
mov
fildl
outsb
and
sub
fisubl
daa
xor
xor
sub
cmp
les
fwait
push
push
adc
mov
stos
push
mov
adc
jno
inc
lods
adc
sbb
add
notb
xchg
stos
mov
repnz
and
cmp
out
dec
xor
icebp
xchg
xor
mov
gs
xor
inc
gs
adc
sub
jo
movsb
pop
push
cmp
test
xor
std
out
mov
pop
pop
push
sub
bound
push
scas
loope
sub
jmp
add
aam
jnp
aas
insl
fwait
adc
ret
adc
std
mov
push
in
outsb
adc
xchg
lahf
aam
aaa
xchg
lcall
or
sbb
loop
leave
pop
pop
add
mov
jle
fldt
mul
lock
xor
sub
in
sbbb
data16
lock
lods
popf
mov
mov
add
jecxz
push
dec
pushf
pusha
mov
addr16
adc
inc
scas
adc
push
loope
outsw
fdivp
in
divl
pushf
insl
pop
mov
or
add
call
inc
push
shl
and
aam
push
mov
inc
ret
fisubrl
daa
adc
orb
cld
inc
jae
and
out
ljmp
adc
jbe
lret
ficoms
test
xor
jecxz
pop
shrb
push
add
mov
mov
clc
repz
pop
call
pop
lods
iret
dec
dec
test
add
insb
sub
outsl
daa
insl
push
push
stos
adc
or
add
leave
dec
pop
sub
je
sbb
or
pop
jns
jb
push
mov
out
push
scas
inc
jbe
scas
fsts
sarb
pop
aas
push
jg
dec
dec
xchg
inc
or
mov
test
mov
test
addr16
jae
divb
push
shrb
and
jae
push
mov
push
cmp
aad
div
jmp
ss
xor
stc
push
inc
xor
jnp
jle
es
test
mov
dec
aad
inc
cmc
jb
dec
sti
sahf
cmc
out
push
push
sahf
push
pushf
cmp
and
inc
popa
pop
je
pushf
jo
adc
pop
jae
cmc
lods
ret
movsb
shlb
fwait
jnp
inc
mov
cmpsl
imul
aas
aaa
aad
xchg
inc
and
mov
adc
into
std
sti
pop
adc
loope
mov
inc
pop
and
rorb
out
imulb
mov
fiaddl
jb
mov
movsl
adcb
cmpsb
inc
cltd
xor
jne
sub
and
in
cmp
cmp
nop
je
xor
mov
mov
cmpsl
sub
jmp
xor
jmp
inc
stc
xlat
lret
fcmovu
pop
xchg
mov
adc
pop
xor
loopne
sbb
lcall
push
xchg
ret
insl
sar
xor
fildl
and
jg
clc
or
in
imul
sarb
shl
push
test
push
adc
adc
outsb
test
cwtl
mov
push
sub
sbb
and
clc
sub
and
in
cmp
sahf
mov
or
arpl
data16
jbe
je
out
inc
iret
sbb
adc
movsb
mov
xchg
into
dec
outsl
mov
and
in
es
fisubs
nop
jb
jo
push
in
test
pop
jmp
stos
add
xchg
cmp
xchg
aaa
mov
fs
daa
cld
shll
shll
push
jg
and
rolb
in
lods
outsl
shlb
sahf
sub
out
pop
mov
or
pop
sahf
push
jnp
fdivs
ljmp
je
mov
aam
aaa
ret
add
enter
scas
sbb
inc
push
jp
lods
push
xor
xor
lock
loopne
jne
mov
add
add
pop
and
mov
out
add
and
mov
add
hlt
push
ds
xor
cmpb
adcb
test
push
jb
or
jne
mov
sbb
mov
and
xchg
out
jo
ja
iret
sbb
pop
int3
scas
xor
cmc
int3
imul
xor
enter
lahf
push
push
dec
leave
into
mov
ret
aas
mov
stos
pop
and
stos
lahf
pusha
lcall
push
cmp
fsub
mov
sub
add
rcr
mov
popf
push
push
cli
movsb
and
nop
cmp
lods
inc
jl
mov
popf
push
sti
ds
mov
inc
js
push
sarl
cmp
cmp
iret
add
add
xchg
push
sub
mov
push
add
fimull
mov
cltd
mov
test
xlat
mov
add
or
stos
lock
movsb
cmpl
mov
aaa
mov
test
cmpb
aad
cmc
ret
push
xchg
inc
int3
icebp
loopne
repz
pop
out
imul
imul
shrb
jne
jg
or
stos
cltd
ds
in
pop
addr16
dec
addl
in
js
inc
out
outsl
std
insl
lcall
lcall
xor
mov
out
rclb
jg
insw
divb
in
jnp
ja
int
pop
pop
and
fbstp
sbb
sbb
jnp
jbe
mov
addb
ja
fldcw
fwait
in
sbb
jg
cmp
jnp
pop
pop
sub
aam
inc
push
mov
mov
add
scas
inc
xchg
jecxz
push
mov
sbb
into
xchg
adc
mov
aas
adc
and
xchg
mov
popa
sbb
adc
dec
and
inc
pop
call
outsl
flds
loopne
aad
addr16
test
adc
push
fldl
mov
or
outsb
outsl
and
jmp
or
add
loopne
dec
xor
or
call
or
cmp
pop
mov
push
and
mov
adc
cmp
fdivrs
movsl
xor
add
hlt
cmp
mov
test
add
test
add
js
mov
jae
pushf
xchg
arpl
push
das
dec
ljmp
dec
lea
sub
das
nop
adc
out
cli
mov
iret
adc
sbb
jmp
mov
mov
add
popa
cs
pop
out
jne
lock
jle
arpl
scas
push
mov
xchg
dec
scas
arpl
pop
lds
stos
sbb
sub
mov
sub
xchg
cmp
pop
rcr
mov
ret
in
pop
mov
repz
in
fcoml
pop
or
sbb
and
sbb
mov
lods
leave
pusha
ficoml
pop
dec
pop
adc
fldenv
cmp
std
cs
pusha
imul
push
data16
sub
mov
xchg
push
ja
jae
out
dec
inc
sahf
jmp
leave
out
pop
mov
jno
sbb
mov
push
xchg
icebp
jmp
je
or
mov
pop
sub
xchg
mov
in
outsl
push
lods
add
dec
popa
xor
sbb
sub
adc
cli
loopne
dec
mov
and
dec
cmp
and
shll
aas
repnz
jge
in
sahf
lea
roll
sub
scas
push
mov
pop
mov
sub
mov
add
daa
and
cmpsb
pop
xchg
mov
add
lcall
into
andl
jb
or
push
cmp
cmpl
ror
rcll
mov
dec
push
cmc
push
outsl
aaa
cmp
xlat
adc
adc
pop
out
insl
popf
and
jne
dec
idivl
lcall
aaa
insb
and
cli
movsl
popa
std
lock
addb
outsb
jl
leave
jge
inc
push
sbb
push
mov
test
mov
jne
imul
jo
jo
add
aam
popa
sub
xchg
adc
pop
jecxz
mov
push
add
in
cld
int3
sti
adc
jo
lret
movb
aad
xor
xor
in
mov
cmp
and
bound
cmp
dec
pop
lret
push
mov
aaa
out
xchg
fbld
push
call
and
mov
pop
loope
mov
xchg
rcl
not
and
jbe,pt
aaa
adc
inc
jle
mov
add
push
ds
outsb
sbb
mov
inc
xor
add
jo
or
fcmovu
jmp
sub
xor
mov
jnp
sahf
daa
bound
or
xor
sbb
pop
mov
mov
push
cmp
fstpl
dec
es
shlb
cltd
adc
int
aad
sbb
stos
sub
inc
sarb
sub
xchg
sub
mov
jge
popf
push
sbbl
push
dec
mov
mov
cmpsb
xor
lds
outsb
scas
imul
dec
das
xchg
pop
sbb
sbb
lods
pop
mov
or
movsb
push
pop
cmp
mov
out
pop
scas
ds
insb
mov
jo
dec
or
xlat
repnz
adc
sbb
xor
cld
or
mov
sub
xlat
jnp
sbb
not
dec
in
sarb
inc
pushf
dec
movsl
out
test
in
jge
lods
sbb
icebp
repnz
ds
xchg
stc
imulb
stos
imul
pop
ljmp
jl
pop
adc
ljmp
fisubrs
mov
icebp
sahf
push
clc
pop
ljmp
mov
mov
mov
cltd
lret
das
cmp
mov
push
rcll
les
outsb
scas
pushf
sbb
mov
push
inc
aas
stos
xchg
dec
movsl
test
jbe
test
pop
cmp
cltd
in
push
inc
or
nop
les
ffree
daa
sub
mov
sahf
pop
jmp
jg
sub
int
xorl
in
mov
icebp
frstor
movsb
data16
movl
cmpl
push
mov
xor
cli
sahf
mov
fidivs
lcall
or
movsb
jle
test
outsl
faddp
jb
jnp
pop
jp
push
add
in
mov
movsb
fldl
sub
lret
add
out
lea
push
call
lods
jmp
dec
push
out
adc
mov
add
test
and
lahf
mov
mov
cs
mov
inc
cmp
xchg
movsb
inc
mov
fdivr
mov
lahf
loopne
lock
imul
fwait
inc
jno
and
arpl
push
adc
add
add
mov
mov
xor
roll
test
add
pop
sub
push
fbstp
std
or
lods
fdivs
jo
mov
mov
orb
inc
cmp
add
sahf
mov
repz
mov
mov
aaa
aas
or
testl
mov
jle
mov
cmc
xchg
add
xchg
inc
imul
cmc
mov
sub
xchg
jmp
shll
dec
jae
dec
adc
dec
nop
andb
sub
xor
inc
pop
aam
addl
push
xchg
iret
xchg
ret
bound
push
add
test
cmp
jo
mov
inc
sti
mov
sub
add
mov
outsl
push
inc
test
xchg
mov
mov
je
loope
add
or
xor
shll
fwait
mov
hlt
sbb
aas
in
xor
cs
adcb
mov
iret
jmp
in
cmp
or
gs
mov
xor
out
sub
xchg
jge
adc
adc
push
jmp
or
sbb
cmp
jae
sub
pop
loopne
pop
arpl
sti
ror
das
in
fiadds
sub
mov
mov
mov
pop
mov
mov
adcb
ret
push
or
fmull
test
negb
cmc
pop
and
ja
and
dec
test
inc
decl
sub
push
xor
cld
sub
filds
add
cmc
adc
xchg
leave
loopne
xchg
dec
sub
lock
jnp
dec
sbb
add
cld
mov
jp
or
mov
push
movsl
pop
scas
enter
inc
add
movsb
imul
je
inc
bound
push
xchg
jge
pop
lea
mov
sbb
outsl
xchg
sub
and
stos
mov
adc
jns
push
mov
inc
jecxz
aad
call
inc
jns,pn
pusha
std
mov
mov
lahf
mov
into
lea
push
cli
sub
jmp
sub
dec
xchg
pop
int3
mov
pop
sub
loopne
mov
fistpl
or
jle
xor
pop
mov
dec
inc
mov
in
stos
clc
adc
ret
mov
add
pop
aad
int3
jae
push
mov
jecxz
sahf
and
test
jnp
jns
dec
popf
jecxz
nop
pop
lret
out
add
mov
cmp
mov
nop
mov
pushf
push
jo
out
bound
popf
pop
dec
mov
pop
adc
dec
ret
dec
push
adc
shlb
loop
mov
aam
frstor
ret
cmp
sbb
sbb
mov
push
push
in
int
sub
fcmove
cmp
push
push
xchg
cmp
ret
xchg
jbe
les
lds
loopne
mov
test
cld
fwait
jnp
cmp
pop
cmp
push
jmp
inc
in
fwait
inc
gs
mov
pop
shll
cltd
mov
divb
shl
lret
dec
sub
xor
dec
jno
push
sub
leave
cmpsl
iret
xor
je
sbb
jge
and
fnstenv
sub
sbb
pop
lock
xchg
or
lret
lods
mov
xchg
pushf
jb
fwait
repnz
repz
aaa
movsb
sbb
fisttpll
push
lahf
mov
sar
shrl
ret
dec
scas
cmpsl
xchg
mov
push
push
fcoms
adc
jns
sti
jmp
xchg
out
dec
xlat
call
jno
or
imul
stos
scas
xchg
mov
lds
inc
adc
cmp
pop
jo
cmp
push
lea
or
ja
mov
xor
adc
daa
imul
sahf
arpl
out
mov
repz
inc
add
leave
int
lods
pop
cmp
out
mov
mov
les
xor
push
sbb
arpl
fcom
pushf
rcrl
in
dec
sbb
test
add
int
mov
mov
sub
push
mov
inc
mov
lods
lret
repz
fxch
mov
and
mov
add
jg
pop
outsb
scas
rorl
es
push
mov
xchg
sbb
movsl
or
out
inc
cld
sub
lods
aam
repz
adc
xchg
call
fwait
es
cld
push
mov
test
mov
or
mov
movsl
cmp
push
and
sbb
jecxz
push
insl
or
lret
mov
jg
jae,pn
and
dec
sti
les
add
stos
jo
dec
cli
fldcw
loopne
mov
movb
test
add
mov
sbb
sub
inc
push
pop
xchg
rol
leave
inc
xorb
bound
test
pop
jmp
inc
les
or
fidivrs
ss
add
int3
inc
addl
inc
push
add
stc
out
lods
mov
add
pushf
pop
test
pop
mov
cmc
shr
sbb
hlt
inc
sti
fmull
lock
shll
cmp
les
sub
mov
dec
mov
cmpsb
lret
mov
xchg
in
xchg
push
or
mov
in
jge
sbb
out
mov
sub
xchg
dec
inc
mov
mov
jle
pop
add
cmc
dec
fimull
leave
out
lret
xchg
ljmp
jl
sbb
icebp
xor
sub
push
xchg
push
mov
and
and
shl
lds
movsb
ja
aad
test
xchg
pushf
xchg
test
cs
sbb
sbb
sbb
movsb
and
inc
sbb
inc
add
js
dec
add
mov
push
push
pop
stc
mov
fwait
into
push
sub
imul
insb
popf
lds
push
test
push
into
and
lcall
negb
mov
mov
adc
inc
test
movsl
movsl
xchg
xchg
add
lock
sbb
lods
punpckhwd
inc
mov
dec
scas
dec
loop
mov
xchg
push
daa
fildl
sub
outsl
push
hlt
ja
push
cmp
and
add
fldcw
fstps
add
jo
adc
iret
fldl
iretw
sub
push
jle
inc
imul
inc
jo
icebp
cmp
or
adc
xor
or
stos
test
pop
push
xchg
and
std
outsl
mov
int3
call
aaa
cs
sbb
in
aad
lcall
dec
push
sti
insb
fdivl
sub
jne
sub
or
sub
or
fcmovb
mov
lahf
or
das
mov
sub
insb
ret
scas
sbbb
fimull
lds
adc
lret
mov
idivb
jnp
or
cmp
push
pop
adc
fisubrl
and
sub
flds
add
dec
xchg
pop
xchg
js
mov
inc
leave
add
test
add
mov
cmpb
or
jo
imul
mov
xor
pushf
icebp
jno
js
pusha
push
cmp
stc
shr
rclb
xlat
in
jl
inc
mov
clc
flds
out
sub
inc
pop
lods
jo
mov
dec
mov
rorl
idivl
xchg
std
sbb
mov
int3
rorb
lcall
arpl
test
jmp
in
pop
out
jge
mov
dec
pop
dec
pop
adc
xchg
cmp
pop
adc
sbb
xor
mov
jb
dec
add
sbb
xchg
leave
add
mov
mov
add
xchg
icebp
push
ja
cld
into
pop
jg
cmp
or
dec
leave
sub
mov
addl
mov
mov
cmp
pop
int3
ss
sbb
mov
add
popf
daa
sbb
ret
inc
jno
add
sti
push
and
ja
pop
andl
loop
pushf
mov
sbbb
or
movsl
ja
xchg
and
sub
fmull
sub
fwait
add
jl
ja
or
dec
daa
inc
pop
popf
push
sub
push
cld
shll
in
jp
sbb
cwtl
push
mov
setae
mov
push
sub
cmp
call
cmp
clc
mov
out
pusha
sbb
iret
test
pop
fs
jno
mov
sahf
lahf
int3
sub
leave
or
std
and
jmp
pop
sub
repz
push
pop
mov
ret
pop
xchg
xchg
cmp
mov
or
mov
leave
push
or
pushf
sbb
push
pop
xchg
inc
mov
mov
loop
into
add
mov
pop
movsb
je
sbb
aad
mov
lock
je
aam
sub
and
and
xorb
adc
test
mov
std
lea
dec
mov
mov
mov
pushl
mov
xchg
add
or
es
jns
aad
in
xchg
ret
and
in
in
cmpl
ret
inc
repnz
jnp
loopne
xchg
pop
loope
cs
push
push
pop
cld
popf
ss
shr
ja
fld
mov
and
stos
xor
dec
mov
insb
bound
mov
pop
sbb
mov
add
or
dec
mov
jo
lea
lret
add
test
add
orl
imul
cli
cmpsl
cli
sub
adc
push
iret
ficoms
xchg
or
aam
mov
movsl
or
loop
push
outsl
pop
in
add
mov
push
lahf
int3
ret
repnz
sbb
or
xor
mov
or
or
mov
into
in
xchg
jbe
gs
aam
add
add
xchg
imul
ret
fcomps
sub
xchg
movb
mov
repnz
loope
mov
aaa
sub
das
fimull
sbb
jo
fimuls
nop
incl
mov
pop
inc
out
dec
mov
aam
fsubs
sti
push
es
sbb
pop
mov
and
jae
inc
movsl
inc
cmp
jne
test
rcl
push
and
stc
fdecstp
ja
lods
and
cmp
clc
addr16
adc
mov
int
and
or
js
fdivrl
test
pop
loop
cmc
std
mov
inc
insb
push
push
jae
inc
and
push
sti
mov
adcl
fisubrl
in
lcall
pop
lock
cmp
cmc
mov
mov
xor
xchg
ss
mov
stos
imul
mov
push
push
add
dec
dec
or
mov
mov
push
js
test
fimull
xorl
jg
movl
dec
repnz
pusha
or
rcll
jno
inc
mov
rcrl
or
sbb
mov
imul
mov
mov
bound
sub
cmpl
mov
jge
inc
add
subb
jbe
adc
std
xchg
ss
xchg
in
pop
inc
lea
decb
xchg
dec
add
and
loope
push
xlat
xor
call
mov
mov
insb
mov
dec
push
mov
fucomi
lock
lods
jle,pn
jle
fimuls
movsl
add
gs
add
or
in
scas
push
std
jae
inc
jmp
notb
inc
mov
jmp
andl
sbb
js
popf
sub
sbb
shrl
push
xchg
das
sbb
jbe
add
fisttps
adc
adc
repnz
cmp
push
sahf
lods
add
scas
scas
add
add
and
dec
repz
fldt
dec
aam
push
into
add
test
add
push
outsl
cli
pusha
and
das
js
rcrl
or
mov
pop
jno
jo
sbb
pop
cmp
mov
in
xchg
jno
sbb
jg
daa
mov
pop
cmpsb
movsl
test
inc
aas
aad
pop
fbstp
mov
imul
cmpsl
mov
mov
pop
iret
inc
add
out
jns
pop
push
icebp
xchg
cmpsl
dec
test
aaa
add
jnp
sti
sahf
shrl
push
insb
mov
cmp
add
lret
js
adc
call
cli
sub
jb
ret
fdiv
xchg
leave
cmp
sbb
inc
xor
push
jbe
fwait
xor
mov
jmp
js
test
mov
icebp
outsl
insl
push
stc
adc
push
and
ds
sub
lds
jno
jae
xchg
orb
jno
iret
int
test
sub
loope
and
mov
inc
xchg
mov
or
lcall
mov
lret
jle
out
stos
xchg
flds
icebp
orl
xchg
add
into
adc
jecxz
adc
dec
je
xchg
int
and
iret
push
inc
cmp
dec
pusha
and
insb
insb
mov
and
sarb
pop
mov
inc
outsb
sub
sbb
xor
lret
imul
movsb
sub
popa
cld
inc
gs
mov
call
cmpsb
pusha
cli
fisttpll
dec
subl
or
jb
jno
out
mov
mov
mov
lret
inc
fisttpl
fwait
cmp
xor
jae
stc
lock
jae
jne
fstl
cmpsb
push
pusha
pop
jle
sub
xchg
clc
fcoml
cmpsl
sbb
jle
aad
dec
hlt
addr16
sub
popa
cs
sbb
add
jb
es
mov
xor
adc
stc
loop
inc
je
xchg
push
sub
jns
sbb
xor
push
shrb
and
or
outsb
adc
outsl
fdivr
pop
inc
mov
insl
mov
int3
mov
loopne
je,pn
push
sub
vpcmpeqd
and
popf
inc
jns
out
sar
iret
inc
push
lock
xor
cmp
cmp
das
cmpsl
push
stos
cmp
sbb
fucomip
cmp
mov
push
mov
mov
in
cmp
inc
ja
inc
add
add
lcall
mov
out
ljmp
add
add
push
cmp
std
xchg
loopne
sub
js
adc
iret
scas
mov
int3
sub
xor
repnz
pop
xchg
inc
test
scas
sahf
cwtl
sub
xchg
mov
mov
add
push
sub
out
lret
xor
cmp
insl
stos
dec
xor
sub
mov
movsb
sbb
rcrb
push
jl
bound
cmpsb
addr16
mov
jae
pop
pop
je
lea
xchg
push
lods
and
and
mov
adcb
dec
and
jle
sub
cmpsl
movsb
in
imul
lret
adc
in
adc
fwait
adc
push
mov
les
adc
loop
sbb
jg
orb
mov
insb
xchg
and
inc
into
pop
stos
pop
mov
xor
fs
xchg
mov
push
mov
dec
or
outsl
mov
cwtl
inc
js
adc
mov
pop
andb
mov
xor
jae
push
sbb
adc
and
mov
je
xor
fnop
popa
and
mov
mov
push
mov
outsl
and
out
lahf
jle
or
pop
loope
mov
aad
sub
in
outsb
or
out
bound
sbb
cld
les
dec
sbb
pop
das
mov
push
mov
ja
xor
dec
inc
pop
aaa
psubusw
mov
lret
incl
pusha
and
adc
fiadds
fstpt
mov
shlb
dec
test
test
sbb
pop
mov
or
xor
in
sbb
loope
ja
insl
mov
push
das
dec
imul
dec
mov
fsub
cltd
ret
mov
xor
data16
sti
movsb
je
or
repz
sbb
sub
inc
leave
aas
sbb
pop
mov
mov
movsb
sbbb
mov
adc
fcmovb
repnz
xchg
divb
cmpsb
test
mov
shld
cmpsl
outsb
mov
sub
rcrl
call
sarl
in
pop
dec
inc
aam
dec
subb
mov
xchg
cld
add
push
fnstcw
inc
add
xchg
test
cs
adc
rolb
dec
idivl
fnsave
dec
dec
pop
roll
add
icebp
sbb
scas
jo
sub
aas
dec
movsb
pop
cmpsb
pusha
and
idiv
scas
jmp
out
or
mov
in
loopne
arpl
xor
pop
push
cmp
mov
out
outsb
add
mov
aad
insb
inc
jecxz
jl
dec
int
out
pushl
pop
push
sbb
adc
mov
add
jbe
xlat
stos
out
ja
push
or
xchg
scas
in
push
cld
lret
iret
aaa
lret
ror
cmp
out
int3
fdivrl
push
in
inc
jp
dec
xchg
or
das
test
xor
out
mov
gs
push
in
in
pop
xor
lds
mov
shlb
lds
cwtl
mov
fdivs
movsl
stos
inc
fnstsw
xchg
jns
xor
fistps
jmp
out
clc
sbb
gs
push
mov
xor
cmp
push
mov
mov
stc
sti
repnz
mov
jge
test
aad
stos
xchg
repnz
mov
loop
jp
xchg
lea
addr16
mov
mov
mov
xchg
js
mov
add
mov
push
fistl
xchg
shll
inc
sti
testb
popa
jecxz
fwait
scas
cmpb
jno
lret
push
int
mov
gs
in
ja
xchg
mov
loope
sti
arpl
xlat
add
inc
les
out
stos
pop
push
fxtract
jo
push
xor
sub
mov
and
push
insl
inc
add
popa
pop
push
pop
mov
bound
xchg
push
cli
jl
rcll
lret
into
sbb
mov
push
cltd
xor
add
xor
xor
or
sub
ljmp
jmp
jmp
enter
mov
js
sbb
push
pop
int3
fwait
dec
loope
mov
mov
xchg
data16
leave
ret
mov
mov
ficoml
add
outsb
mov
and
inc
out
enter
push
dec
sub
dec
leave
mov
jo
cs
rcr
stos
fimull
negb
inc
jns
mov
adc
mov
adc
and
and
pop
imul
fcomps
inc
adc
push
fcoms
imul
add
mov
add
jecxz
mov
dec
test
pop
add
test
add
cmp
cmp
mov
mov
out
imull
in
jg
ret
cmp
xor
xor
insl
jl
mov
dec
mov
out
pop
fisttpll
mov
test
pop
loope
ds
iret
lret
xchg
jmp
inc
jo
jl
xchg
cli
outsl
xchg
sub
test
je
fcoms
pop
dec
lret
pextrw
arpl
and
pop
push
rcrl
shrb
test
sub
xor
inc
inc
cld
notb
cmp
les
clc
out
pushf
adcl
mov
and
out
and
mov
rep
insl
dec
fsubrl
sbb
push
out
orb
dec
sbb
push
xchg
repz
sub
das
sub
lock
mov
fisubl
int
movsl
mov
out
addl
mov
add
clc
jae
xchg
mov
cmc
stc
sub
mov
xchg
pop
cs
repz
sbb
rclb
lock
pop
inc
cmpl
jg
xor
cmp
repnz
dec
add
dec
in
pop
pop
icebp
pop
lcall
cld
pop
gs
inc
or
jnp
outsl
jb
xchg
in
pop
pop
out
mov
adc
andl
mov
loopne
jmp
or
cltd
sub
jb
mov
fimull
mov
xchg
sbb
divl
jl
or
sub
xor
out
repz
sbb
jbe
aad
in
pushf
jecxz
movsl
jb
xchg
iret
pop
inc
xchg
push
xchg
xchg
add
scas
mov
jmp
inc
adc
cld
sbbl
les
and
pop
xchg
lods
inc
gs
cmp
mov
xchg
sub
sarb
mov
xlat
popa
popa
es
or
dec
loop
xchg
sbb
inc
cwtl
ss
mov
rorl
negl
cmp
movsb
sbb
stos
inc
shll
loop
sub
nop
xchg
les
mov
pusha
neg
leave
add
daa
out
rcrb
mov
adc
loop
subb
inc
cmp
jbe
or
inc
in
jg
icebp
jmp
add
fiadds
pop
ficoml
add
add
ficompl
mov
adc
add
jno
shll
sbb
adc
dec
pop
adc
cmp
sar
pusha
xor
in
imul
xchg
outsb
pop
push
aam
pusha
inc
add
mov
data16
loop
xor
push
cs
and
ljmp
sub
mov
inc
sub
dec
jmp
pop
cwtl
xor
out
iret
add
movsb
jl
push
popa
bound
sbb
inc
push
lret
dec
jno
jmp
lret
mov
xchg
add
in
pop
fptan
aad
xor
mov
pop
mov
mov
add
scas
pop
jmp
sbb
es
xor
xor
mov
shl
or
mov
dec
js
cmpsb
test
scas
add
jne
rorb
mov
mov
mov
imul
push
jecxz
pop
inc
xlat
fsts
jbe
stc
xchg
pop
sub
stos
adcb
jp
cld
lahf
ss
cmpsl
mov
mov
lahf
and
cwtl
imul
jge
add
lcall
and
xchg
xlat
ljmp
iret
enter
jle
push
gs
cmp
jbe
mov
sbb
out
in
sahf
imul
sbb
je
xchg
test
mov
lods
sbb
push
xorb
pop
aad
ss
jmp
pop
lahf
xchg
xchg
push
std
in
enter
inc
lahf
cld
ret
or
adc
dec
sub
nop
lcall
pop
out
cmpsl
xor
cmp
imull
in
outsb
lock
aad
adc
stos
insl
loop
adc
jbe
mov
testb
in
and
pop
shlb
cld
cs
lods
les
dec
add
fsubrs
jmp
jecxz
adc
push
std
loopne
and
insb
jae
dec
lods
sbb
and
test
mov
faddl
lds
test
sub
cmp
adc
pop
iret
pop
addr16
js
jmp
lcall
or
inc
sub
dec
sub
sbb
pop
inc
fwait
push
fildll
int3
mov
xchg
das
call
jne
loop
sar
xor
adc
dec
add
add
pop
sbb
cli
inc
cli
outsb
ljmp
call
add
add
stc
imul
push
out
sub
xchg
je
dec
test
imul
dec
popa
roll
dec
int
aas
stos
or
imul
mov
stc
outsl
dec
in
jle
sbb
je
xor
outsb
rcll
fstl
out
test
mov
pop
cld
jg
mov
xor
xchg
mov
fdivrs
xchg
insb
test
adc
subb
movsl
pop
add
insb
in
mov
adc
fmull
mov
xchg
cltd
cmp
and
push
cld
push
push
pushf
leave
pop
aas
push
ss
cltd
push
sub
cmpl
test
pop
push
mov
nop
sub
pop
cmpb
out
adc
std
mov
iret
jecxz
jbe
outsl
mov
addr16
xor
fisttpl
and
mov
mov
cmpsl
lahf
test
call
mov
push
push
in
cld
push
jnp
imul
int
mov
lods
xorl
daa
stos
cld
icebp
jmp
loop
pop
or
push
call
adc
mov
sbb
aaa
xchg
imul
in
inc
add
mov
data16
or
out
nop
cmpl
add
xor
outsl
pop
and
enter
leave
mov
pop
xchg
cwtl
or
xchg
pop
into
xchg
jecxz
test
lahf
fcompl
inc
jbe
pop
cmp
outsl
push
shrl
ficoms
in
xchg
push
jns
out
aam
sub
xor
add
cmpsb
xor
sbb
and
loope
rclb
mov
shrb
add
sbb
jge
movsb
test
shll
lcall
daa
mov
push
pop
mov
push
mov
jge
push
push
add
mov
pop
lret
in
dec
and
cmp
sub
stc
test
push
xchg
sbb
inc
test
jo
jmp
popa
ret
and
lahf
sub
cld
mov
mov
aam
imul
xor
stc
imul
xchg
pop
and
pop
adc
shr
cwtl
jb
iret
pop
psrld
outsl
jg
xor
xlat
popa
jmp
out
aad
push
aam
inc
into
add
mov
xor
and
add
mov
xlat
push
xlat
ja
out
ss
mov
insl
fldl
add
dec
jns
dec
out
cmpsb
fldcw
jle
aaa
lock
add
fcmovne
dec
mov
inc
push
fistpll
cs
movsb
mov
adc
push
fdivp
pop
je
sahf
inc
dec
push
lds
cld
hlt
dec
pushf
and
sub
daa
testl
jp
xchg
dec
aad
ret
add
icebp
jmp
xor
aaa
rolb
or
es
and
jne
icebp
push
and
pop
jo
xchg
and
mov
mov
pop
frstor
gs
insb
adc
cwtl
test
testb
mov
cmpsb
sti
insl
inc
mov
mov
lret
add
cmp
repnz
data16
lcall
scas
push
out
pusha
adcl
mov
sahf
in
inc
test
stos
das
mov
lods
dec
shlb
fsubrs
or
pop
inc
or
xor
lret
pop
dec
pop
mov
jae
cmp
fildl
add
andb
lahf
inc
sbb
sub
mov
lret
push
test
cld
mov
dec
cmp
in
adc
rcll
repz
cmpl
decb
sbb
lods
movsb
bound
rcr
and
cli
sbb
push
movsl
cmpsl
dec
and
xor
outsl
in
push
sti
or
mov
jp
adc
pop
ja
dec
sbb
and
mov
icebp
cmp
cwtl
dec
stos
mov
aas
inc
shl
rcrl
decb
loope
movsb
and
jg
dec
or
scas
outsb
adc
ja
dec
sbbw
jmp
ret
mov
insb
xchg
mov
mov
jb
pop
mov
inc
xchg
xor
sbb
mov
jle
cmp
shlb
cmp
shl
loop
push
out
xor
loope
in
popf
stos
sub
popa
push
aad
adc
sub
imul
sub
jno
push
jbe
imul
in
xchg
cmpl
clc
push
xchg
jmp
enter
movsl
xchg
cmpsb
mov
in
pop
cmp
inc
cwtl
cmp
aad
jp
xchg
fadds
test
mov
idivb
jg
in
push
int
cmp
or
add
cli
rcll
pushl
in
and
filds
add
enter
loop
push
push
sbb
not
xchg
ja
cwtl
addr16
sbb
xchg
sub
cmpsb
mov
imul
fidivl
test
out
lret
test
bound
mov
mov
push
mov
push
and
or
dec
lcall
js
cmp
ror
sub
or
loop
nop
das
iret
je
mov
arpl
pop
or
push
or
adc
gs
mov
testl
popa
test
js,pt
add
xchg
add
lret
mov
test
fwait
cld
rcll
sahf
mov
inc
inc
pop
mov
js
jb
jp
in
inc
inc
mov
cmp
adc
sbb
scas
mov
hlt
xchg
push
jbe
cmp
mov
fwait
andl
lret
fnstenv
js
mov
fistl
mov
push
push
fidivs
jp
mov
jp
jo
xchg
push
cld
mov
inc
negb
fdivrs
xor
outsl
mov
addr16
test
ret
add
movsb
insb
adc
xchg
jb
mov
push
jge
push
insb
stos
ja
and
aad
sub
shl
dec
daa
adcb
adc
dec
sahf
mov
stc
and
sbb
aam
test
psrlw
jnp
xchg
out
cmc
mov
sub
lahf
rcrb
jnp
pop
test
je
cld
scas
aad
test
mov
push
out
pop
aad
jge
sbb
iret
insl
ja
xlat
dec
pop
stos
fistps
push
scas
mov
into
rep
push
jno
xor
scas
sbb
jmp
push
mov
add
insb
sub
mov
add
movsl
insl
fwait
cs
ds
rcrl
add
lret
lret
insl
pop
pop
shlb
cmp
outsl
js
jg
pop
imul
pop
push
andb
cltd
cmp
into
pop
and
inc
shl
jge
push
stc
mov
sub
fsubs
rolb
cmp
mov
mov
aam
mov
test
mov
data16
mov
push
xor
add
inc
adc
jmp
orl
icebp
xchg
and
rcrb
lock
data16
add
iret
negb
out
lods
push
pop
and
nop
ja
add
test
add
push
inc
idivb
xor
nop
cltd
jo
ror
add
loop
push
and
fwait
ljmp
add
lcall
sub
cwtl
movsb
inc
insl
hlt
in
cltd
fwait
xorl
xlat
arpl
int
repnz
lods
out
rclb
jp
jp
fsubrs
pop
repz
mov
pop
movsl
es
pusha
cld
jno
push
sub
movsl
pop
nop
xor
mov
faddp
or
imul
push
adc
popa
mov
push
ss
loope
lcall
push
pop
sub
xchg
sahf
inc
push
dec
sbb
popf
mov
mov
int3
insb
ret
jecxz
push
push
int3
xorl
bound
out
int
sub
mov
or
sbb
dec
cmpsl
add
xor
enter
sub
cmc
mov
sub
nop
nop
mov
lahf
dec
mov
std
jl
pop
and
sbb
pop
mov
popf
ja
ret
iret
xchg
fcmovne
test
xor
jl
pop
add
push
pop
xchg
sti
cmc
shl
xchg
outsb
pop
jecxz
jl
data16
add
lock
sub
sbb
imul
push
dec
xchg
loope
xchg
outsl
repz
outsl
xor
hlt
mov
fnstenv
and
pushf
fldlg2
in
dec
data16
adc
add
push
xor
pop
mov
sub
iret
sbbl
idivl
xor
dec
loope
movntq
mov
jp
inc
pop
loope
push
push
pop
adc
lahf
mov
jg
in
push
jmp
sub
pop
push
std
and
inc
inc
xlat
adc
iret
test
and
xor
pop
sub
subb
and
data16
lock
fbld
pop
inc
inc
icebp
lods
push
ficoms
test
jg
jb
mov
pop
xor
out
test
push
push
sbb
clc
gs
rcrb
andb
cmp
mov
jno
test
push
frstor
test
jmp
push
aad
add
popl
ds
push
xchg
inc
cmpsl
call
cmpsb
mov
jns
push
ret
mov
inc
ret
rorb
mov
inc
je
xrelease
push
jne
jge
fwait
add
add
sub
ja
movsl
ss
daa
test
cld
in
add
std
mov
das
movl
or
in
lock
mov
pop
test
adc
sub
add
xchg
clc
enter
push
scas
faddl
inc
aaa
stos
in
mov
fcmove
sub
mov
pop
adc
lcall
inc
stc
xor
lcall
ffreep
mov
testl
or
scas
adc
jbe
push
jb
mov
out
fidivs
jae
imull
in
outsl
ret
add
sub
add
jl
std
lahf
fcompl
iret
ret
push
gs
movsb
jl
cmpsb
sbbb
fidivrl
mov
shl
mov
and
pop
aaa
out
cmp
outsb
pop
or
jb
movsb
cmpsl
mov
outsl
mov
add
xchg
fstl
pop
ret
pop
int
leave
dec
out
adc
adc
add
ret
inc
jp
mov
pop
into
je
push
sbb
push
dec
push
jno
aaa
inc
leave
sub
mov
and
dec
into
jb
test
fists
sub
bound
shll
mov
stos
and
cmp
sahf
xchg
je
pop
lea
adc
in
jnp
notb
aam
lods
gs
mov
cmp
dec
jle
into
jge
jmp
insb
roll
stc
xor
cmp
sub
inc
mov
shll
push
push
dec
add
dec
bound
int3
aas
roll
dec
es
ljmp
mov
cmc
pusha
adc
sub
jo
aad
pop
push
into
mov
xor
cmp
jnp
mov
sbb
push
cld
ret
sub
mov
push
mov
xor
mov
loopne
sub
mov
addb
inc
imul
lods
add
stc
cs
cwtl
out
movsl
push
inc
adc
add
cld
cs
or
mov
mov
cmp
sub
lret
dec
std
cmpsb
imul
adc
fidivrs
cmpsb
arpl
sbb
push
or
icebp
push
out
xchg
addr16
sub
add
xor
xlat
in
das
mov
push
push
jno
into
xorb
pusha
mov
movsb
aad
xor
add
mov
push
outsb
push
cs
je
out
add
adc
inc
xor
pop
fwait
in
xchg
mov
cwtl
div
jge
push
nop
enter
cmc
mov
shl
sahf
xor
ret
pcmpgtw
cld
repnz
sbb
lret
sub
xor
imul
pop
in
add
add
sub
mov
pop
inc
sbb
jp
es
test
pop
xchg
mov
jno
ds
mov
js
sub
dec
push
les
icebp
or
movsl
inc
mov
xor
loop
mov
pop
push
sbb
iret
and
imul
adc
shlb
xchg
lcall
mov
daa
cvtpi2ps
xchg
sarl
mov
xchg
xchg
sbb
repz
mov
shrb
xchg
inc
out
jno
and
xchg
loope
sbb
mov
std
mov
and
dec
enter
add
jno
enter
dec
cld
inc
push
enter
inc
jge
out
sbb
dec
cmpsl
loop
or
mov
ficoml
cltd
jle
push
add
adc
and
adc
mov
mov
aam
jecxz
mov
insl
shr
add
cld
jne
adc
jns
fimull
xor
push
aad
inc
fs
ljmp
fwait
stc
adc
jns,pn
std
pop
aaa
pop
inc
std
or
stos
xchg
dec
cli
jge
pop
mov
jae
sbb
sbb
jne
pop
int3
inc
lds
add
hlt
icebp
adc
add
xor
xlat
xchg
mov
ficomps
loopne
flds
je
ret
popf
loope
aaa
adc
mov
mov
ret
inc
and
sti
outsb
aam
dec
or
mov
add
or
mov
mov
fbld
daa
lock
mov
fcoms
sbb
add
mov
mov
pop
or
ljmp
test
cmp
xchg
mov
fstp
inc
sub
pusha
clc
inc
repnz
sub
lret
fwait
pop
jnp
adc
mov
mov
nop
jge
insl
and
stc
out
push
dec
jl
imul
jb
and
pop
lea
leave
sbb
adc
lods
clc
inc
js
lahf
cltd
or
add
jns
sbb
jge
int3
outsb
xchg
adc
ljmp
mov
cmp
cs
ja
mov
add
test
push
inc
ja
int
test
stc
add
aaa
mov
lcall
xor
pop
rsm
and
fwait
dec
nop
mov
pop
mov
push
pop
sub
icebp
mov
cmp
jle
enter
js
mov
into
out
sarl
xlat
nop
or
cmp
scas
or
push
sbb
fistps
xor
outsl
shll
out
and
add
mov
lcall
out
jbe
ja
and
xor
les
ja
inc
lcall
dec
call
xchg
test
pop
ljmp
cmpsb
out
clc
inc
outsl
cld
ss
xor
out
mov
push
mov
pop
in
mov
xor
out
lock
xchg
xor
fcmovnu
sub
ds
inc
cmp
pop
and
cmc
test
cmpsl
test
adc
and
popa
jecxz
xchg
mov
pushf
jmp
jg
mov
ss
xor
fimuls
mov
stos
dec
sbb
sbb
cmc
mov
lret
mov
movsb
xchg
jl
pusha
adc
arpl
aas
hlt
daa
ja
pop
cmp
out
push
aam
dec
cmp
test
inc
adc
addr16
repnz
sub
ja
sbb
test
push
xchg
mov
in
lcall
pop
jle
ja
cmpsb
aad
inc
jmp
push
sarb
daa
fs
mov
int
lods
sbb
xchg
out
pop
popa
lcall
or
cs
xor
ds
shlb
adc
dec
mov
dec
push
rolb
out
jp
adc
cmp
add
jl
pusha
and
xor
xchg
mov
stos
jae
add
mov
ror
call
lock
das
imul
jg
mov
sub
jb
sbb
mov
adc
sub
dec
lods
jae
in
xchg
cmp
repnz
mov
xlat
insb
stc
jl
test
sbb
sub
mov
jl
cmc
es
mov
push
sbb
sub
jne
rclb
mov
out
in
test
test
sbb
cmc
push
add
add
roll
pop
sub
mov
add
inc
mov
sbb
jns
sub
mov
inc
dec
fists
popw
imul
mov
outsb
inc
xchg
dec
jmp
mov
leave
scas
jl
loopne
ret
mov
hlt
shlb
repz
adc
loop
sbb
cmp
sub
mov
lcall
test
lea
js
inc
loop
mov
dec
mov
lahf
ljmp
call
jmp
dec
push
testl
pop
xchg
pusha
daa
es
shr
jge
jle
lods
sbb
pop
nop
push
adc
rcl
cs
dec
adc
pop
mov
inc
adc
sbbb
xor
add
push
or
cmova
xor
mov
call
adc
push
loop
jge
mov
push
inc
mov
scas
lcall
loopne
jne
in
out
jle
sahf
orl
xchg
mov
aad
mov
in
dec
mov
pop
cwtl
leave
sub
add
inc
aaa
pop
int
push
aam
xor
dec
fcom
fldt
imul
sub
test
fbld
and
jo
pop
out
nop
loopne
daa
jns
lret
cmp
mov
cmp
clc
pop
popa
ret
dec
roll
push
xlat
mov
mov
cmp
pusha
sub
dec
mov
lods
lcall
int3
movsl
aas
inc
sub
stos
enter
test
lea
lahf
call
clc
dec
gs
jmp
ret
shlb
mov
cmp
out
push
xchg
adc
pop
pop
xchg
popf
mov
sub
test
cli
push
lret
cmp
pop
test
cmpsl
or
mov
dec
push
int3
mov
and
scas
not
pop
les
mov
or
cmp
or
sub
das
ret
fidivrl
add
popa
inc
push
inc
xchg
and
test
stos
cwtl
lea
pop
cli
add
mov
cmpsb
jno
jle
sub
push
sarl
pop
inc
mov
arpl
iret
insb
xor
test
outsb
jmp
mov
cmp
jmp
pop
dec
sub
mov
test
notl
jmp
in
push
pop
rcll
int
add
sbb
pushf
cli
mov
scas
aad
iret
in
mov
out
add
test
add
sbb
push
sbb
loopne
popa
adc
lock
push
jge
int
dec
mov
xor
lods
and
lahf
arpl
aad
mov
cmc
xchg
mov
adc
xlat
add
cwtd
nop
or
dec
lret
mov
inc
xor
hlt
sahf
jl
cmp
cwtl
xor
and
xchg
popa
inc
fwait
push
mov
adc
stos
pop
arpl
jae
xchg
push
bound
sbb
pop
xchg
js
inc
jecxz
jecxz
pusha
cmp
outsw
mov
scas
inc
stc
cmp
movsb
sub
addr16
sub
push
fstps
insb
mov
psubb
lea
pop
cmp
pop
xor
mov
cs
leave
arpl
jle
fistpl
sub
sahf
and
hlt
mov
mov
add
aas
cmpl
dec
pop
pop
cwtl
mov
mov
arpl
cmp
fs
mov
push
inc
push
sbb
jne
xchg
icebp
fldt
shr
mov
lret
repnz
movsl
push
rcrb
xchg
pop
int3
pop
loop
outsl
mov
pop
dec
insl
in
mov
add
repnz
xlat
push
in
mov
sbb
adc
sbb
jae
push
push
lds
mov
and
mov
xor
cmc
cli
aad
add
fimull
fstpt
xchg
jno
and
popa
push
mov
add
mov
push
mulb
mov
stos
mov
jnp
push
ss
stos
push
sub
mov
mov
lcall
push
dec
sahf
push
mov
rolb
les
lds
cld
bound
lods
cmp
leave
lcall
dec
sahf
arpl
push
movsl
outsb
jnp
aad
imul
sarl
push
jl
mov
inc
mov
and
out
pusha
loope
cmp
or
sti
imul
cmp
adc
sbb
xchg
mov
cmpsb
xchg
ret
test
test
lret
stos
ret
mov
insl
aam
andl
pop
dec
icebp
scas
jmp
ss
rcr
das
xor
rcrl
jns
ds
ss
xor
test
mov
stos
lods
sub
jb,pn
add
add
lcall
bound
dec
enter
add
cmpsb
and
mov
cli
sub
sbb
in
mov
pop
add
cwtl
shlb
testb
jns
push
xor
arpl
sub
mov
jle
aas
adc
adc
jb
xorl
add
xchg
push
inc
flds
std
add
pop
sbb
test
add
mov
cmp
cmpsl
inc
mov
mov
dec
push
data16
popa
and
movsl
jne
jg
mov
sbb
rorb
pop
adc
cmp
sbb
pop
xchg
fwait
sub
inc
lods
in
xor
mov
fnstsw
fimull
pop
jb
push
rorb
cmp
ret
popa
arpl
mov
ret
mov
jb
and
sub
jbe
pop
mov
out
aaa
inc
aad
movb
jb
fwait
mov
or
arpl
in
in
xor
adc
mov
stc
test
cli
push
inc
xchg
daa
mov
js
lret
sub
sub
adc
pop
insl
outsl
shll
std
pushf
sub
add
dec
mov
adc
jbe
out
push
jecxz
and
pop
or
arpl
lds
push
nop
jl
pop
dec
jecxz
rolb
inc
rcrb
mov
inc
or
xchg
sbb
das
dec
push
add
xchg
leave
pushf
mov
scas
jp
inc
jo
xor
and
clc
test
pop
lret
add
jae
fldl2e
mov
insb
fisttpl
mov
sbb
cmp
ja
mov
divb
sarb
adc
je
mov
mov
leave
notl
adc
cmp
mov
addr16
sahf
lock
sbb
ja
mov
jb
mov
inc
inc
rcr
test
lea
pop
sahf
and
fistpll
or
pop
xchg
jle
aad
fstl
sub
lret
add
hlt
push
mov
jmp
mov
lods
outsl
setnp
cmp
addr16
xchg
pop
dec
add
in
jo
jl
into
dec
das
std
add
lret
inc
repz
addr16
repz
sbb
sbb
xor
sahf
pop
push
xchg
andb
cmpsl
insl
ficoml
jle
pop
lcall
add
iret
cmc
sti
pushf
loop,pt
lret
pop
cmp
test
add
int3
mov
xor
inc
fiaddl
and
jl
imul
outsl
or
fcoms
fcmovnb
xor
push
dec
cmp
fnstenv
ja
xchg
cmc
xchg
cmp
arpl
xchg
stos
pop
adc
sub
dec
jmp
das
les
mov
jnp
sub
mov
push
cmp
es
dec
inc
std
xchg
pop
test
imul
test
jb
hlt
imul
mov
or
sub
push
sbb
test
mov
xchg
mov
loop
stos
stos
mov
fcomip
aaa
lret
inc
xchg
xchg
inc
cli
out
insl
dec
xor
imul
fmul
daa
test
add
cmc
mov
cmp
push
lds
cmp
stos
lret
js,pt
sti
andb
inc
repz
pop
adc
fdivl
iret
mov
mov
in
mov
or
dec
addr16
ror
outsb
out
dec
movsl
jmp
into
je
xchg
mov
add
mov
xchg
aam
jo
jnp
pop
cmp
dec
inc
adc
test
push
popf
xchg
sti
adc
outsb
inc
stc
adc
xcrypt-cfb
cmpsl
es
mov
sahf
ljmp
cmpb
xchg
cmp
mov
sub
lods
inc
mov
rorl
jno
dec
pop
mov
cmp
loopne
adc
add
in
ja
sbb
push
mov
ss
subl
leave
jle
pusha
dec
xor
xchg
jp
push
loop
js
jbe
stos
push
inc
cmp
stc
pop
clc
mov
cmp
and
in
mov
pop
cmpsl
in
xor
shl
sub
lds
xor
push
cmovno
movsb
or
jbe
add
addr16
fmull
mov
mov
and
cmpsb
iret
dec
adc
xor
fptan
xor
popa
cmp
imul
pop
cwtl
jge
pop
mov
sbb
std
loop
es
push
mov
pusha
sbb
sub
sbb
iret
jae
test
fmulp
mov
dec
cmpsb
int3
push
mov
gs
add
std
cmp
stc
int
xor
add
rcr
testb
test
add
jl
ljmp
pop
mov
stos
into
sbb
add
mov
pop
mov
das
fmuls
or
test
push
test
mov
das
negb
ret
pop
sbb
out
jbe
rorb
lods
cmp
jle
xchg
jnp
imul
push
mov
mov
and
fcompl
push
or
dec
inc
test
pop
push
mov
iret
mov
aad
icebp
cmp
mov
mov
xchg
sbb
cld
sub
or
mov
sbb
repz
movsb
pop
jnp
js
mov
mov
cli
call
cwtl
sbb
jb
je
in
lret
jmp
jecxz
lods
inc
fists
call
xlat
add
jne
push
push
sub
xor
mov
sub
add
inc
lcall
xor
insb
mov
imul
bound
cmp
sbb
lea
dec
icebp
jno
add
sub
dec
ret
cmp
fisubrs
adc
sahf
add
ja
sub
in
jne
pop
mov
imul
xchg
xchg
fdivr
or
jnp
pushf
mov
mov
push
in
xlat
push
rclb
ret
lock
ret
pushf
jnp
loop
adc
cmpsl
bound
fisubs
insl
iret
rcll
jmp
or
das
out
stos
add
or
add
cmp
cs
pop
cmp
mov
jg
mov
pop
loop
jle,pt
das
xchg
loope
mov
lret
and
inc
mov
repz
neg
mov
fsubl
mov
clc
orl
mov
punpckldq
cmp
fistl
fwait
xor
adc
pop
and
nop
mov
addb
or
mov
cmc
xchg
out
pop
rorl
out
pop
xchg
pop
sarl
cmp
loop
pop
xor
adc
scas
outsl
negb
adc
mov
in
jbe
mov
mov
xchg
repz
add
movsb
shrl
lret
add
mov
out
or
dec
xor
in
out
sti
enter
lods
or
fcmovb
or
cmp
sub
sbb
fwait
pop
out
and
inc
cld
rcrl
push
aas
les
add
test
cmp
mov
mov
sbb
push
cmp
imul
xorl
scas
and
