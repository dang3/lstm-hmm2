push
mov
sub
mov
mov
jmp
adcb
shrl
push
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
push
xchg
and
fs
sub
test
mov
dec
mov
stc
fisubrs
cmp
mov
arpl
mov
jns
mov
push
mov
into
cmpb
dec
insb
sub
sub
jg
xchg
and
loop
sub
sub
fisubrl
arpl
jge
cmpsl
sub
inc
cmc
imul
xchg
adc
test
gs
int3
cwtl
insb
in
shlb
call
pop
xchg
jecxz
sub
mov
push
sub
loope
out
fcompl
xchg
movsb
jae
adc
and
sub
stos
rolb
add
inc
rcrb
xchg
outsb
add
add
gs
test
inc
mov
xchg
lods
lcall
je
daa
inc
dec
fsubrl
outsb
xlat
adc
inc
movsl
sbb
xor
jmp
ret
add
in
in
rolb
mov
jb
adc
in
sbb
dec
pop
testl
clc
xlat
xor
pop
in
daa
int
add
movsl
and
push
push
repnz
test
xchg
movsb
mov
mov
jne
arpl
mov
pop
dec
es
pop
je
jp
mov
and
loope
lds
ret
push
movsb
push
ds
xlat
fsubl
jns
or
jnp
or
lret
inc
add
add
pop
cltd
hlt
cltd
out
loop
cmc
pop
loop
jnp
cmp
in
mov
imul
add
sbb
lock
add
incb
push
fs
aas
xchg
adc
fwait
mov
fwait
and
aaa
sub
pop
icebp
mov
outsb
call
add
test
lret
dec
lret
cmp
inc
popf
push
xchg
iret
pop
push
lods
stos
and
add
xchg
mov
jnp
inc
and
cmp
cmp
xor
cmp
xor
loope
cmp
dec
sbb
mov
ror
mov
scas
cli
cltd
repz
xor
cmp
adc
mov
ror
cmp
je
cmpsl
sti
sub
scas
jbe
pop
lds
mov
mov
ss
sub
shl
lods
fucomp
or
mov
stos
bound
cmpsl
adc
lcall
aaa
rcr
js
daa
sub
ljmp
std
repz
jmp
push
mov
dec
and
lret
orl
mov
push
xchg
arpl
adcl
aaa
lret
sbb
jg
sub
dec
and
iret
andl
push
xchg
setle
mov
jecxz
mov
cld
lods
bound
leave
jmp
push
test
inc
daa
mov
jnp
sbb
jno
xchg
jnp
rclb
dec
sub
incl
add
lock
pusha
add
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
xor
outsl
jge
jle
jge
jle
shrb
imul
dec
xchg
orl
fidivs
cmp
jb
jmp
shl
mov
adc
mov
dec
hlt
scas
pop
adc
aad
push
jmp
mov
lods
cmp
ds
out
or
mov
subl
cmc
jmp
pusha
and
arpl
pop
push
mov
jbe
test
mov
sub
out
xchg
push
sbb
cmp
mov
out
push
dec
inc
cmp
nopl
cmp
mov
rcrb
fnsave
adc
mov
scas
sub
dec
push
test
in
sub
inc
imul
popa
mov
popa
mov
xchg
call
outsb
ret
xor
aam
rol
add
sti
aas
ss
repnz
outsl
int3
jns
ljmp
rcrb
pop
insl
add
adc
dec
mov
and
sti
imul
imul
daa
push
mov
and
nop
stc
adc
roll
ds
push
nop
ret
int3
out
int
jo
sub
jae
mov
in
adc
stos
push
adc
dec
cs
jle
sbb
and
pusha
out
jmp
in
int
in
xchg
mov
arpl
add
pop
xchg
popf
dec
std
rol
insb
push
aam
pop
test
xchg
loop
mov
jl
pop
cld
push
cmpsl
jno
xor
mov
inc
dec
adc
data16
mov
adc
cmp
in
push
and
jg
mov
ficoml
int
xor
mov
xor
add
stc
jle
push
adc
pop
repnz
adc
in
stos
fists
fdivl
loopne
adc
pop
xchg
dec
cli
aad
iret
cmp
in
or
mov
jmp
out
mov
pop
jns
adc
scas
lds
sub
sti
je
mov
popa
cli
lcall
js
pop
add
dec
in
or
lret
mov
cwtl
add
mov
pop
adc
cmp
jg
xlat
cmp
xchg
jmp
imul
dec
pop
test
test
lcall
scas
mov
lret
xchg
or
aam
sub
xchg
lock
push
dec
ja
adc
xor
daa
add
adc
mov
stos
sbb
aas
je
mov
popf
mov
and
fwait
jo
ljmp
pusha
test
xchg
sub
adc
data16
fstps
bound
movl
pop
int3
icebp
insb
fadd
lahf
lds
sub
add
dec
xchg
sub
dec
loope
or
adc
adc
xorb
dec
stc
ja
mov
movsl
fcoml
test
out
pop
mov
in
sub
int3
jb
addl
aas
mov
lret
xchg
fldcw
cmpsl
sub
mov
mov
mov
mov
cmp
out
out
and
leave
add
add
addr16
test
dec
push
cli
mov
pop
test
lock
std
out
lds
clc
sub
enter
test
mov
mov
lods
in
in
cmpsl
aaa
mov
dec
loopne
lea
push
mov
sub
js
mov
adc
das
mov
push
dec
icebp
pop
or
mov
jp
in
and
mov
mov
mov
sbb
or
aaa
cmp
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
test
jle
outsl
jge
jle
xchg
mov
dec
pop
leave
loop
lods
mov
cltd
in
adc
scas
or
mov
cmp
lret
jb
daa
xchg
cmp
push
mov
mov
aas
pop
xchg
cli
lret
sub
mov
leave
inc
add
aaa
mov
cmp
add
cmp
mov
inc
inc
xor
das
sbb
out
or
lcall
xor
inc
dec
mov
bound
dec
std
lock
mov
mov
or
pop
sti
cli
pop
lret
data16
jne
call
sub
add
lods
decl
arpl
mov
daa
mov
sbb
lea
pop
sti
imul
aas
add
mov
hlt
fnstsw
cmpsb
jne
inc
fnstcw
dec
sbb
adc
sub
lods
or
icebp
jg
push
adc
cmovl
stos
das
adc
dec
jecxz
pop
sahf
filds
mov
inc
rol
daa
hlt
insb
cmp
scas
stc
push
pop
orl
fcmovbe
jp
iret
aam
mov
pushl
lcall
shlb
push
jns
arpl
sub
mov
xchg
pusha
jecxz
dec
outsb
push
icebp
loope
out
stos
jle
mov
in
inc
test
add
mov
or
push
shr
cwtl
adc
pop
test
mov
xchg
add
lret
std
pop
add
inc
in
lock
xor
xchg
mov
int
pop
lods
ljmp
ja
int3
imul
lahf
lods
bound
mov
mov
mov
sti
stos
push
out
in
fiaddl
ret
add
push
or
loop
scas
jnp
sbb
mov
cli
sub
ds
jmp
mov
out
push
inc
fs
aad
cld
mov
inc
lods
not
push
xor
popf
dec
xor
test
mov
or
repnz
adc
mov
out
dec
mov
pop
outsl
fcomi
fsubl
lcall
pop
not
mov
rcrl
dec
fwait
inc
xor
dec
jno
outsb
inc
add
xchg
dec
inc
insb
xchg
inc
adc
clc
loopne
cmp
aas
aas
sbbb
enter
iret
jno
cltd
mov
lahf
adc
repnz
or
insb
cli
mov
sti
lds
jg
sbb
push
sahf
loopne
pop
fldcw
jmp
push
jmp
fld
xor
inc
and
sub
sbb
scas
jp
mov
jno
mov
fucomip
add
movsl
jg
cltd
pop
sub
ss
sub
cli
adc
and
fildl
cld
mov
push
cmp
pop
adc
rorl
bound
hlt
cmpb
pop
pop
push
pop
mov
cltd
ficoml
aaa
dec
push
cmp
jb
arpl
xchg
xchg
dec
pop
adc
sbb
fsub
into
add
ja
lret
js
loop,pt
jg
or
outsl
repz
sub
mov
mov
pop
push
jo
pop
jl
mov
into
stos
outsl
xchg
xchg
dec
cltd
sbb
fdivrs
mov
adc
rcr
dec
and
mov
pushf
in
lds
shll
outsb
sub
cwtl
push
push
and
nop
popf
adc
ret
pop
xor
scas
lods
jne
inc
jbe
insb
or
pop
daa
mov
sbbl
push
stos
movsl
daa
popa
es
pmaxub
fistpll
xchg
pop
popf
mov
adc
gs
add
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
out
xchg
dec
add
jle
push
lock
fstps
ret
aad
push
mov
mov
mov
or
dec
sbbb
or
jge
leave
mov
or
adc
imul
movsb
dec
ss
lock
gs
inc
dec
mov
jo
xchg
fnsave
cmp
pop
xchg
jbe
aam
inc
mov
and
cli
xchg
sbb
xor
lahf
mov
mov
inc
outsb
xchg
stc
out
fucomip
push
sub
test
lcall
lods
and
jne
ljmp
mov
in
divl
sub
scas
cmp
arpl
mov
mov
insl
mov
ror
mov
fimuls
lods
add
adc
stos
add
sub
dec
mov
popa
hlt
or
and
es
push
scas
or
sbb
insl
xchg
scas
arpl
and
jo
push
mov
les
imul
cwtl
popf
push
mov
leave
data16
test
push
cmpl
inc
sub
sbb
fsubp
mov
jp
push
mov
inc
cmp
or
test
xchg
cmp
jg
mov
je
arpl
ds
ja
loop
leave
in
test
cmp
testb
pop
add
sbb
jnp
pop
nop
push
lds
subb
mov
sbb
loop
pop
inc
fcomi
cwtl
add
jb
out
push
pusha
lret
mov
mov
lret
jbe
fdivrl
inc
sbb
mov
movsb
pushf
out
shlb
mov
repz
pusha
mov
xchg
movsl
cwtl
fisttpl
xchg
subl
lds
mov
ret
stos
lret
xchg
jmp
out
push
and
addr16
add
xchg
addl
scas
outsb
mov
rcrl
dec
icebp
add
std
dec
push
leave
push
pop
or
shr
jle
mov
mov
dec
pop
inc
cmp
insb
jo
and
add
sub
push
adc
cmp
out
or
in
mov
shlb
lea
xchg
cmp
out
jno
xor
aad
push
fstpt
stos
incb
xchg
bound
pushl
push
pop
outsb
xlat
jmp
data16
sti
mov
jnp
mov
or
jne
mov
adc
mov
and
addl
jl
mov
fnstenv
and
incb
shrl
shlb
and
out
mov
test
xlat
sahf
adc
inc
les
cmp
loope
pop
call
inc
xor
sbb
mov
ja
iret
movb
sbb
in
cwtl
sbb
and
rcr
inc
mov
lea
lds
mov
lcall
jp
mov
inc
sub
scas
sub
or
cmp
mov
jmp
mov
loop
dec
pop
popa
push
mov
inc
push
sub
in
sub
xchg
jge
push
cs
add
xchg
stos
dec
popa
mov
das
mov
lahf
faddl
shlb
jecxz
repz
cmc
in
cmpsl
shll
inc
faddp
test
sbb
inc
enter
pop
add
sbb
daa
jns
xor
and
or
xchg
xchg
cs
add
push
or
lret
xchg
and
mov
pop
call
jnp
adc
push
push
dec
pop
pop
stc
or
addb
rorw
push
int
sub
dec
aaa
or
push
mov
ret
fildll
test
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
arpl
mov
jge
jle
lds
out
outsb
cmp
jae
xor
inc
int3
lds
jl
sbb
mov
fsubrl
and
xor
and
clc
das
ds
push
push
out
adc
sbb
add
sub
aad
mov
xor
ficoms
adc
pop
loopne
jp
pop
clc
or
jno
enter
mov
pushf
sub
shl
addr16
inc
mov
push
ficomps
das
mov
push
mov
or
das
ja
mov
jo
mov
loop
mov
inc
jae
test
jge
movsb
test
jge
adc
push
jl
movsb
inc
jle
push
das
mov
jl
bound
xor
aaa
add
imul
xor
iret
cld
cmp
push
loopne
pop
jp
loopne
add
mov
jae
push
rolb
xchg
mov
push
and
pop
xchg
imul
dec
jmp
pop
xorl
sub
lcall
test
repnz
jo
je
sub
jnp
inc
imul
xchg
shl
mov
pop
sbb
les
mov
out
sbb
and
pop
shll
pop
sbb
cli
and
pop
aas
scas
in
mov
xchg
push
dec
cmp
sbb
cmpl
test
jns
aaa
sti
or
hlt
adc
jns
xor
mov
or
lret
mov
add
in
scas
jp
ret
fwait
in
test
add
cmpsl
pop
nop
roll
xchg
dec
call
ficompl
sub
cld
inc
pop
jb
fwait
sub
fimull
iret
cmpsb
jb
lds
or
cmc
xor
pop
push
in
mov
dec
mov
addr16
negb
fs
mov
test
in
subb
aas
testl
pop
inc
rolb
lret
xchg
adc
pop
xor
pop
pop
pushf
lcall
and
bnd
out
in
adc
jae
lcall
loopne
movsl
jb
pop
int
lret
ret
sti
faddl
xchg
mov
xor
scas
pop
ds
in
rcrl
jae
xchg
sbb
mov
push
icebp
or
fldcw
imul
add
les
pop
inc
xor
out
sti
and
test
fcoms
popf
test
sub
fscale
inc
in
lret
add
into
leave
cmp
ss
add
ret
cld
dec
jns
xchg
inc
je
loop
push
pusha
scas
jmp
aam
adc
inc
and
testl
inc
ss
in
push
fsubrl
mov
xor
out
cs
add
adc
fcmovb
insl
test
in
popf
roll
test
popa
cmp
inc
mov
inc
pop
mov
fisttps
clc
xchg
fdivl
push
push
pop
pop
hlt
cltd
add
jo
iret
sub
leave
mov
jb
sahf
loop
inc
cmp
out
push
mov
mov
shlb
jge
xchg
aam
push
outsb
stc
or
shrb
mov
adc
pusha
jne
mov
inc
ror
ds
push
imul
sbb
fcmovbe
add
xchg
gs
or
push
xor
int3
cmp
push
pop
xchg
ret
nop
scas
xchg
subb
repz
dec
lock
add
lret
shl
pop
or
int3
into
mov
cmp
mov
aaa
das
gs
addr16
add
dec
test
sbb
shlb
cwtl
jmp
jp
add
into
mov
adc
mov
test
sbb
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
repnz
incb
cltd
sahf
mov
and
cltd
mov
mov
movsb
cli
cmp
mov
adc
jns
imul
insl
sbb
lea
ljmp
fwait
mov
jnp
aad
pop
arpl
add
fwait
add
mov
test
jno
shlb
add
sub
xchg
cmp
xchg
rcl
and
or
push
les
lahf
fisubl
jne
mov
jg
and
out
mov
push
sarb
lcall
repz
pop
mov
jo
repnz
jle
jmp
sub
into
repnz
fildl
sbb
nopl
jno
jge
fcom
mov
pop
shrl
sub
lret
test
aaa
push
fcmovbe
mov
adc
loope
test
mov
sbb
pop
aad
cmp
loope
pop
insl
test
stc
mov
mov
push
mov
mov
les
mov
nop
gs
fimuls
ret
lcall
int
sub
sbb
xchg
adc
cwtl
mov
dec
dec
push
into
test
xor
xchg
fsubs
cs
lret
cmp
sub
cltd
fbstp
cld
enter
jno
cmp
outsb
test
mov
lea
test
into
int3
or
hlt
push
cmp
les
add
fwait
lock
push
mov
xchg
jns
push
push
mov
mov
testb
add
jb
mov
daa
insl
fsubs
push
sbb
das
push
or
pop
adc
mov
out
outsl
mov
mov
jmp
jg
out
pop
xlat
outsb
dec
sbb
mov
out
mov
dec
inc
and
adcl
sub
and
jecxz
dec
add
sub
pop
or
xchg
clc
iret
dec
sbb
icebp
and
aad
mov
pop
inc
add
mov
insl
mov
pop
pusha
inc
xchg
shrb
lea
shr
xor
xchg
cltd
out
bound
popa
test
push
adc
mov
pop
mov
fs
xchg
push
push
xor
outsb
std
add
aaa
popf
sar
and
pop
out
imul
jo
pop
xor
arpl
push
insb
xchg
sbb
sub
adc
adc
in
inc
push
add
and
cli
je
mov
xchg
imul
out
mov
adc
cmpsl
ror
pop
movsb
push
adc
cld
push
dec
jle
xor
fldl
imul
xor
pop
mov
leave
pop
popf
lahf
jmp
mov
test
push
push
subl
testb
sti
push
aaa
pop
mov
inc
out
dec
mov
mov
pop
and
in
pop
or
shl
enter
add
outsl
sub
sub
cmp
and
dec
pushf
icebp
jo
clc
loopne
add
inc
inc
mov
and
jae
mov
sti
sbb
sbb
mov
dec
fiadds
or
and
cwtl
push
mov
ficompl
shr
movsl
mov
xor
mov
jl
stc
sbb
pop
dec
je
inc
fs
sahf
or
pop
mov
test
scas
rcl
mov
push
inc
push
or
aam
lods
pop
lahf
mov
fucomip
scas
cmovo
push
imull
ds
cwtl
mov
loope
les
cmp
int
sbb
stos
add
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
aam
mov
or
outsl
jge
jle
shl
or
sub
lret
mov
mov
adc
into
fdivrs
int3
xor
fs
push
pop
ret
sbb
mov
fldt
cwtl
push
xor
std
jle
and
sahf
lods
int3
xchg
dec
push
pop
and
lds
push
push
and
pop
mov
sub
dec
lcall
mov
negl
xor
iret
dec
add
cs
mov
in
ss
das
mov
frstor
stc
add
lds
loop
adc
out
and
das
in
ljmp
sbb
imul
dec
mov
cmp
mov
cmp
push
pop
rcl
push
add
mov
mov
stos
dec
adc
mov
ret
out
inc
cmp
adc
jbe
jg
lods
addr16
subb
jmp
mov
jmp
pop
jge
sub
sbb
call
jns
cmpsb
in
add
cmp
sti
mov
fcomps
mov
notl
add
pusha
cltd
out
pop
jl
mov
cld
sbb
sub
or
mov
or
or
popf
xor
lcall
xor
lret
stos
iret
jae
xor
jmp
push
mov
aam
imul
xor
mov
cli
jb
ja
pop
sub
mov
jbe
bnd
mov
test
call
pop
movsl
adc
cmp
dec
fmulp
or
mov
push
iret
jnp
or
clc
add
nop
mov
dec
out
cmc
xchg
xlat
ss
fs
js
fs
lahf
xor
pop
test
adc
mov
cmpsl
add
mov
out
mov
push
xor
lahf
jae
int
push
mov
pop
icebp
outsl
sub
testb
jl
rorl
out
mov
inc
jae
popf
inc
mov
sbb
jae
cmp
jo
test
xor
jmp
inc
leave
add
pop
cmp
sub
fwait
jp
loop
lahf
addr16
sub
popa
push
mov
pop
clc
loopne
out
pop
cmpsl
jo
lret
xor
aas
sub
mov
sbb
cmp
in
push
add
out
in
in
mov
mov
xorl
mov
psrlw
cltd
xlat
call
mov
xor
lret
int3
mov
add
dec
subb
insb
clc
cmp
or
insb
fildl
add
mov
pusha
xlat
pop
addr16
push
shll
add
shl
int3
insl
lret
xchg
cwtl
xchg
push
dec
jb
or
pop
jmp
mov
dec
fwait
jg
lahf
pop
in
cmp
mov
add
daa
jp
sbb
aad
fmul
mov
cli
in
nop
mov
dec
fwait
ret
call
and
mov
pop
shlb
jae
sbb
adc
lock
jecxz
jg
adc
ficompl
int3
mov
xchg
cmp
add
xchg
mov
in
shll
adc
fistl
into
jmp
je
adc
mov
cmp
daa
push
in
out
add
jnp
jl
or
loope
push
sub
push
mov
push
mov
mov
loope
js
les
lahf
int
push
xor
or
jg
pop
sbb
hlt
es
lret
mov
stos
mov
out
xchg
stc
jle
xor
stos
mov
int
xchg
jns
fbld
xorb
add
clc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
or
jle
outsl
jge
jle
rcrb
jmp
pusha
and
and
mov
push
mov
lods
jae
rcl
push
cltd
das
lcall
add
out
movsb
lds
lds
cvtps2pd
aas
push
cmc
push
lock
add
repz
nop
push
sbb
push
jmp
mov
js
mov
mov
mov
mov
test
inc
xchg
or
in
ljmp
or
inc
add
push
push
js
imul
aaa
sbb
sbbb
jmp
add
mov
xchg
and
rcll
pop
mov
outsl
into
push
inc
out
sub
mulb
cmp
inc
and
pop
ret
aas
sbb
sbb
stos
loop
xchg
fisubl
add
adc
inc
xor
aaa
push
leave
lahf
or
outsb
push
ret
iret
xlat
aaa
fsubs
das
sub
stos
or
xchg
loopne
cmp
mov
xor
pop
mov
in
push
mov
mov
and
clc
out
push
dec
push
mov
inc
push
jae
push
test
into
scas
sub
sub
cld
xchg
mov
lods
xchg
push
sub
xor
xor
adc
arpl
push
rcll
enter
negl
hlt
adcl
mov
lea
mov
push
xchg
inc
pop
push
inc
cltd
aas
aaa
sub
xorb
jp
sbb
cmp
js
jnp
ja
stos
xor
aad
in
pushf
fsts
and
rcrl
xor
jo
cmp
lahf
jg
add
or
icebp
xchg
xor
imulb
push
jns
dec
cmpsl
cli
jo
fcompl
out
pop
aam
in
inc
test
es
cmpsl
mov
xchg
and
pop
loope
fucomp
call
adc
sub
in
movsl
adc
fisttps
push
push
in
cmp
test
pop
ret
cmp
clc
aam
mov
fidivs
dec
insl
addr16
push
js
mov
mov
movsl
xchg
int3
btc
shrb
xchg
cmp
cmp
sbb
cmp
je
and
mul
inc
fstpt
aaa
mov
xor
jp
fs
stos
mov
mov
gs
mov
mov
adc
adc
dec
push
mov
cmp
lret
stos
cmpsb
adc
aam
add
incl
xchg
push
in
lcall
pop
pop
mov
orl
jge
mov
stc
repnz
inc
sub
add
jns
loope
jbe
xor
stos
test
lret
push
xchg
or
scas
push
sbb
push
ljmp
adcb
inc
adc
inc
rcrb
in
xchg
orb
inc
sub
inc
fs
lds
mov
movsb
sbb
aaa
test
into
mov
fsts
sbb
rolb
leave
mov
inc
into
jo
std
lods
pop
push
sub
xor
add
or
pop
in
fdivs
orl
mov
add
sub
test
xchg
mov
lock
mov
shrb
ret
icebp
mov
adc
popf
mov
pop
ret
scas
add
adc
pop
lret
fadds
add
lret
or
jnp
mov
jp
test
jg
idivl
xorl
fdivrl
sub
in
cld
add
movsb
mov
mov
pop
mov
mov
das
rolb
push
hlt
rclb
es
cmp
push
rcll
dec
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
pop
cmp
xor
jge
jle
adc
add
cmpsb
leave
mov
sbb
ret
pop
popf
stos
dec
fcomi
fsts
lods
movsl
lea
lock
adc
mov
inc
sbb
mov
inc
decb
mov
mov
adc
adc
inc
sbb
dec
pop
cmpsb
jmp
push
or
ret
cltd
mov
sub
mov
mov
js
push
je
fwait
sub
mov
xor
push
ja
sbb
xchg
mov
je
loope
pop
aas
sub
popa
cmp
scas
int3
xchg
push
xor
and
mov
pop
imul
add
sbb
enter
cld
js
or
outsb
push
shll
mov
imul
push
rcrb
stos
addb
fs
cltd
push
mov
dec
mov
scas
movsb
push
loope
shll
imul
cmp
mov
lds
mov
push
jecxz
sbb
in
aaa
pop
ret
or
insb
push
jle
ret
idivb
xchg
jae
ret
add
fs
adc
mov
inc
icebp
xchg
aas
int3
adc
jno
cld
mov
int
out
inc
push
sub
jno
cwtl
loop
mov
fwait
adc
dec
xor
sub
push
out
mov
mov
leave
sbb
sbb
fdivs
fwait
in
lods
pop
ds
jnp
adcl
in
xchg
out
fdivl
sub
adc
push
jg
or
xor
push
sti
mov
jecxz
pushf
mov
add
addb
sbb
push
shlb
in
pop
in
inc
popf
or
cs
push
cli
add
out
in
xlat
add
insb
sub
sbb
dec
mov
add
lret
mov
movsb
cs
lcall
inc
sub
cmp
rorb
icebp
sbb
xchg
pop
lret
sbb
test
leave
ss
sub
sbb
cmp
jbe
js
stos
push
adcl
cli
test
das
cmpsb
mov
call
push
adc
movsb
dec
mov
and
sub
into
mov
movsb
dec
push
push
cli
ds
inc
iret
xchg
pusha
or
test
and
or
inc
or
aam
pop
or
inc
jp,pt
daa
shlb
jle
test
add
and
loope
imul
add
mov
mov
imul
adc
ja
mov
loope
and
jb
gs
and
lock
and
push
lret
lret
sub
popf
push
mov
mov
cmp
jl
lods
aad
inc
and
fs
xchg
sahf
sub
insl
pop
jge
add
cwtl
pop
sub
std
xchg
push
inc
xor
jb
iret
push
icebp
pop
les
out
mov
mov
in
enter
outsl
jp
sub
mov
insl
cmp
and
cltd
insl
dec
into
sarl
fldpi
out
push
sub
nop
fsubrl
outsb
xchg
fldpi
sub
rcl
repnz
rcrl
cli
cmp
mov
nop
sti
pop
lcall
lret
cs
cmpsl
inc
xor
mov
lock
aas
or
orl
mov
sub
insb
popf
xchg
xor
and
out
mov
mov
push
rcrb
cmp
int
imul
pop
sbbb
scas
inc
repz
xchg
rcrb
test
jbe
or
xor
es
sbb
sahf
test
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
sbb
jle
outsl
jge
jle
call
out
or
cmp
loop
insl
sbb
inc
jne
test
sbbl
stos
and
fidivs
das
inc
xlat
movsl
insb
xchg
fmul
or
mov
dec
dec
and
push
push
popa
mov
and
daa
pop
push
inc
xlat
xchg
mov
inc
stos
or
jp
lds
imul
roll
sbb
pop
sub
lret
test
test
mov
dec
lea
mov
dec
loop
sbb
test
imul
xchg
pop
arpl
out
cmp
push
push
cmp
and
mov
adc
xlat
and
xchg
cli
mov
xor
pop
cmpsl
ret
lods
or
pushf
push
cwtl
pop
fidivrl
jmp
test
jle
sbb
loopne
xor
test
cmp
push
adc
sub
dec
test
jbe
sbb
fbld
std
mov
notl
ficoms
sub
scas
insb
mov
fsubrs
mov
aas
movsl
pop
ja
jnp
out
sbb
cld
and
and
push
imul
push
addl
out
adc
xorl
sub
lahf
xchg
repz
popf
pop
loop
sub
es
xchg
push
fiadds
push
je
in
mov
imul
xchg
mov
xor
lcall
mov
push
mov
addr16
cmp
pop
loope
sbb
fistpl
lahf
les
lcall
xorb
dec
jecxz
cmp
jge
push
pop
mov
adc
xlat
add
inc
daa
push
mov
pop
adc
sbb
and
push
cmp
xor
cmpsb
xchg
push
xchg
jle
pop
ljmp
mov
cmp
rorb
repz
push
push
push
push
pop
cmp
push
fists
or
mov
add
outsb
and
je
rorl
mov
xchg
or
and
popa
js
or
or
fldt
jne
fwait
lods
jg,pn
jge
aaa
and
jns
inc
bound
aas
jno
lcall
add
and
nop
ret
fwait
insb
stc
adc
xor
mov
shrb
and
mov
jb
mov
sub
push
dec
jns
pop
pop
into
aas
aas
int
in
lods
mov
pop
pop
out
xchg
shl
dec
fnstsw
xchg
pop
cs
add
adc
fsubs
jg
add
mov
inc
jae
dec
and
mov
test
clc
clc
loop
add
jae
xchg
push
lods
push
in
mov
mov
ja
and
add
popa
jb
lock
xor
addr16
push
outsb
data16
mov
aad
mov
jle
xor
aam
into
test
xor
jno
and
cltd
int
aaa
pop
repz
int3
mull
fidivl
jge
jne
popa
sub
pusha
mov
mov
imul
push
rolb
lock
mov
cmp
xchg
or
loopne
xlat
js
sub
dec
sub
and
cmpsb
pushf
inc
xchg
push
lods
popa
scas
jbe
adc
mov
rep
aam
leave
push
and
test
sub
xchg
ja
arpl
cmp
jl
in
je
popl
or
mov
cmpsb
js
mov
cltd
int
stc
push
insb
add
sbb
iret
divb
sbbl
push
xor
mov
push
aas
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
jbe
in
jle
outsl
jge
jle
push
sahf
mov
xor
xchg
sbb
fs
dec
shrl
xor
arpl
iret
add
aas
es
lds
shl
pop
out
data16
sub
jo
sarb
sub
inc
enter
pop
xchg
inc
dec
pop
sub
in
and
mov
inc
xchg
xchg
fcoms
mov
pop
mov
xor
sub
dec
leave
push
dec
push
xchg
xchg
call
mov
hlt
rcll
push
sti
jns
cld
dec
mov
popa
pop
pop
dec
and
push
es
push
jp
adc
lret
insb
insb
sbb
pop
xchg
sub
arpl
mov
std
and
shll
aam
popf
subl
sbb
and
dec
fildll
fstpt
adc
xlat
mov
jne
push
lea
mov
add
push
jl
imul
int3
mov
lods
mov
add
in
imul
push
xchg
hlt
outsl
dec
pushf
popf
inc
rorl
mov
mov
lret
fsubl
inc
cmpl
adc
pushf
mov
adc
push
ret
adc
inc
arpl
or
push
xchg
aam
push
cmp
cli
jns
les
aad
mov
sbb
push
mov
es
lret
sti
cmp
fwait
mov
sub
insb
stos
icebp
rsm
cwtl
leave
pop
push
jnp
or
ds
pop
iret
jne
ret
cltd
inc
add
aad
sub
int
mov
outsl
push
and
mov
mov
mov
test
xor
xor
lcall
xor
sahf
clc
dec
cmp
sbb
fcoml
fcmovbe
pop
imul
xchg
out
repnz
or
loopne
xor
sbb
and
out
loop
cmp
and
mov
lods
in
js
sub
mov
xor
xor
jmp
adc
cmp
test
lcall
adc
das
fs
and
xor
out
or
mov
xchg
push
rorl
pop
lea
or
adc
dec
pop
testb
xchg
adcl
xor
loope
adcb
xor
int
mov
arpl
sub
and
cmpsb
mov
cmp
pop
jne
xor
mov
test
mov
mov
cmc
out
arpl
push
jne
aad
scas
mov
mov
mov
add
hlt
push
xorl
jg
inc
push
xchg
js
and
pop
xchg
jp
lcall
fdivrl
insl
leave
insb
jg
stos
mov
mov
in
jne
sub
inc
cmp
cmpsl
sub
push
mov
pusha
add
test
js
cmp
mov
mov
cmp
mov
add
dec
repz
popa
lahf
into
cmp
pop
push
in
xchg
dec
push
shll
movsl
cmpsl
pop
push
mov
das
xor
adc
adc
es
loope
int3
lds
shll
mov
inc
jnp
mov
push
mov
mov
pop
xchg
cmc
lock
dec
jp
jecxz
nop
je
adc
data16
dec
mov
pop
jmp
stos
and
repnz
lock
dec
push
imul
fs
and
sub
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
push
jle
jge
jle
shrl
cmp
rcll
scas
push
int
sub
xlat
nop
jnp
push
mov
adc
mov
mov
xor
push
mov
sbb
or
push
pop
jg
mov
ret
subb
call
aad
adc
pop
xor
pop
inc
dec
push
femms
out
pop
mov
sbb
lock
imul
mov
sbb
lods
pop
cld
push
test
sub
pop
adc
mov
dec
jge
xchg
nop
cld
lret
repz
fcmovnbe
cmp
inc
ret
mov
inc
and
cmovp
xchg
daa
add
imul
mov
mov
inc
adc
xchg
add
pusha
ljmp
push
daa
pop
or
pop
ret
insl
repz
jmp
cwtl
push
and
xor
ss
hlt
adc
mov
jmp
or
mov
mov
and
pop
stos
push
jbe
scas
mov
dec
cmp
aas
add
fsubrs
rorl
pop
lock
in
jb
cld
test
addr16
mov
lea
cmp
aad
sahf
push
je
rcr
in
rcrb
dec
imul
lahf
imul
xlat
hlt
in
cmp
cmp
xchg
fwait
xchg
ret
xchg
std
das
pop
imul
dec
inc
sub
fidivs
push
les
pop
rcrb
sbb
loop
mov
jp
xchg
or
cmpsb
xchg
add
jb
push
popf
jecxz
movsl
mov
and
mov
or
mov
insl
out
inc
mov
cmp
mov
out
adc
xlat
out
sahf
movsb
inc
xchg
jp
mov
je
icebp
xchg
cmc
add
adc
xchg
adc
out
mov
icebp
fnstenv
sbb
fidivrl
push
les
xchg
lahf
mov
in
cmp
in
test
out
scas
or
int
shll
adc
jge
mov
mov
add
push
mov
jb
lahf
add
into
imul
sbb
testl
push
push
imul
inc
test
dec
push
cmpsl
in
sbb
cmpsl
and
cwtl
mov
mov
pop
lods
mov
xor
and
ds
in
inc
fidivl
add
sub
outsb
jo
xlat
push
mov
sbb
jle
pop
and
jp
stos
test
dec
push
stos
sub
ss
les
ret
shll
fwait
in
rcll
mov
cmpsl
jge
in
aam
in
pop
jg
in
cmpsl
pop
cmp
inc
jb
gs
in
sbb
sbb
and
scas
movsb
adc
fwait
sub
add
mov
test
repz
imul
mov
inc
loop
xchg
in
cli
in
aad
adc
sahf
inc
jbe
mov
in
cmc
stc
daa
push
and
cmp
cmc
int3
stos
adc
daa
xor
inc
out
movsb
popf
inc
jo
push
sbb
pop
pop
mov
dec
lret
mov
testb
data16
or
mov
call
out
cmp
inc
xchg
sub
pop
das
jb
sub
jg
imul
flds
repnz
jle
mov
push
call
movsl
neg
adc
cld
cli
mov
arpl
out
cmp
fs
push
aad
add
jnp
xchg
adc
mov
or
pop
add
ret
inc
push
pop
cs
int3
dec
lock
jmp
loopne
and
add
fstpl
pop
outsl
and
inc
ret
mov
inc
cwtl
sub
mov
xor
add
xor
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
dec
ret
jle
jge
jle
dec
jne
push
pop
ds
pop
sbb
push
ja
popf
xchg
fwait
mov
fdivs
cli
fimull
lahf
add
subl
out
lock
or
cli
xor
mov
pop
cwtl
jo
sbb
mov
insb
fld1
insb
stc
mul
sti
pop
fwait
sbb
outsl
loope
mov
sbb
adc
shrl
add
cmc
stos
mov
popa
mov
pop
scas
fmuls
jb
dec
repnz
mov
or
gs
cmp
imul
jp
in
in
icebp
sbb
in
ror
adc
mov
in
lcall
call
arpl
outsl
notl
inc
ss
orb
push
rcrb
jl
inc
sarl
cltd
sbb
cmp
jl
test
xchg
mov
jg
test
sub
jne
mov
lret
fnstenv
cmp
pop
mov
bound
pop
and
shlb
sub
add
hlt
roll
dec
mov
jmp
repz
cwtl
xchg
pop
push
or
xchg
adc
int3
inc
jns
xor
pushf
arpl
in
add
sbb
ja
cmp
movsb
pop
fistpll
lret
mov
testb
lods
addb
test
pop
frstor
sbb
rcll
mov
test
out
ja
cmp
push
mov
mov
cwtl
insb
cwtl
xor
inc
data16
add
jno
stos
mov
jecxz
pop
test
aaa
jp
pop
es
scas
insl
mov
inc
outsl
ja
push
or
icebp
cltd
adc
lock
mov
jmp
xchg
xor
les
cld
sub
iret
mov
xor
jns
outsl
roll
pop
push
int3
add
jae
rcrl
add
jl
sub
les
push
push
xor
cmpb
jmp
pop
push
or
push
sbb
shlb
and
mov
sbb
loopne
dec
push
lcall
mov
jbe
pop
push
mov
mov
dec
mov
xchg
mov
aad
mov
test
insb
out
jnp
es
sub
jg
es
addr16
movsl
inc
insb
mov
in
jnp,pt
stc
repz
jg
rorl
jecxz
popf
stos
lahf
fidivrl
push
cld
repnz
fsubs
fcmovne
sbb
ficomps
mov
out
call
mov
xchg
adc
xor
decl
pop
sub
loop
leave
test
ja
movsb
pop
insb
xor
aaa
lcall
fstpl
sbb
inc
jg
ficompl
xchg
jo
mov
sub
addr16
xchg
daa
push
das
jp
and
test
scas
shlb
stc
pushf
mov
mov
scas
ret
ds
fists
pusha
push
lahf
pop
cmpsl
mov
bound
imul
fsubr
stos
mov
imul
xchg
mov
in
push
mov
pop
cwtl
mov
mov
mov
push
and
fwait
inc
push
jge
lods
xchg
enter
movsb
adc
mov
addr16
xchg
adc
add
arpl
lea
lock
or
mov
jge
mov
jmp
adc
push
and
dec
add
mov
leave
bound
mov
or
inc
or
and
pop
sbb
fnstcw
sub
pop
ds
mov
out
lahf
mov
stos
sbb
lods
divb
jns
pop
xchg
lds
push
push
sbb
stc
dec
cmp
nop
cwtl
sbb
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
adc
xor
iret
dec
xor
mov
pop
jbe
pop
lods
mov
xor
aas
pop
dec
and
lahf
push
or
std
arpl
pop
jge
sar
fcmovnb
inc
sbbl
mov
pop
test
test
dec
addl
jl
mov
rolb
dec
arpl
mov
rolb
adc
fwait
push
cmp
sbb
ja
jp
push
adc
pop
aad
adc
mov
push
arpl
jo
ss
fistps
dec
cmp
and
jo
in
and
push
into
pusha
mov
call
orl
fdivl
mov
add
cmp
mov
lea
sbb
sbb
push
test
mov
jae
adc
mov
ja
push
rclb
bound
jge
add
add
mov
shlb
xchg
das
cmp
std
cli
xor
mov
pop
loopne
out
dec
ja
dec
aaa
in
adc
or
pop
inc
divb
or
lcall
fistpll
arpl
out
js
int
mov
sbb
mov
and
cwtl
fwait
xor
dec
mov
sub
mov
ja
inc
rcrb
mov
ja
ficoms
xor
sbb
jae
aad
scas
push
jle
mov
sbb
and
repnz
pop
or
out
icebp
pop
pusha
dec
add
shll
mov
cmp
cltd
aaa
inc
cmc
je
ljmp
aaa
pop
rorl
scas
push
lret
aad
push
jp
test
cmp
jmp
cltd
loopne
and
cltd
js
or
dec
cwtl
push
jne
sub
out
dec
hlt
mov
shl
outsb
enter
dec
jl
ret
dec
icebp
push
rclb
popl
fsubl
dec
adc
stos
sahf
mov
or
cwtl
sub
cmp
pop
push
add
dec
pop
dec
mov
push
sahf
lds
icebp
cltd
shlb
ja
stos
repz
out
fs
xchg
mov
ss
mov
mov
std
aam
or
mov
jl
pop
in
std
bswap
iret
subb
or
iret
test
xchg
fstl
out
sbb
pop
pop
lock
lods
xchg
mov
add
pop
jne
pop
ljmp
adc
loop
ljmp
fimuls
leave
mov
sub
loope
cmp
lods
xor
xor
dec
scas
aaa
notl
cwtl
sub
stos
jnp
add
mov
sub
cmp
xchg
mov
xor
roll
mov
stos
loope
add
ficomps
push
pop
adc
xor
int3
pop
cmpsb
aaa
jno
idivb
jae
mull
shrb
cmp
icebp
pop
repz
pop
jae
add
or
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
and
lock
sub
xor
jle
push
mov
mov
and
or
cmp
dec
ret
dec
mov
xor
lock
and
jae
mov
leave
sti
rcll
icebp
fisttpl
cli
cmp
adc
js
cmp
pop
and
sub
cmpb
cwtl
test
data16
or
mov
fldenv
push
adc
test
sbb
iret
cli
iret
loopne
cmpsl
or
mov
push
rcrb
lret
lret
cmp
cmp
xchg
mov
and
cmp
fsubr
pop
inc
ljmp
xchg
mov
lret
test
jle
xchg
ss
cs
xchg
nop
or
add
sub
inc
prefetch
push
lods
cmp
cmp
ret
shlb
jecxz
dec
mov
in
fisubs
xchg
xchg
sbb
cmc
shrl
stc
mov
into
jge
xor
fwait
out
dec
mov
and
ja
push
rcrl
daa
lahf
xchg
repz
data16
adc
pop
loopne
pop
push
fnstcw
or
and
gs
int3
sti
repz
lret
arpl
inc
daa
sub
scas
and
test
in
jecxz
pop
repnz
mov
lea
frstor
sub
hlt
or
xor
fstpl
mov
cmpb
ficompl
andl
nop
fs
lock
jo
mov
push
iret
lahf
adc
scas
fisubrl
jp
ret
sub
aas
xchg
movsb
mov
adc
xchg
and
dec
xchg
in
dec
mov
sub
pusha
data16
sbb
outsb
push
or
sbb
jbe
popf
cmp
jns
je
mov
mov
testb
outsl
fldenv
and
into
and
inc
jnp
pop
xchg
das
add
inc
jae
imul
adc
jo
lret
cld
lret
negb
jl
cmpsb
mov
fsubr
icebp
jno
add
dec
jno
into
nop
out
pop
rcr
mov
pop
mov
and
xor
push
sbb
jae
lahf
mov
int3
scas
sub
inc
xor
inc
testl
fidivrs
sahf
andb
call
cmp
outsl
movsl
xchg
xor
rcrl
sbbb
xchg
pop
aaa
fsts
popf
cmp
int3
sub
cmpsl
xor
leave
push
mov
inc
repz
out
inc
or
jbe
add
mov
xchg
pushf
fs
adc
pusha
not
xorl
inc
lret
es
jo
mov
ret
mov
cmp
ret
leave
jo
xor
hlt
push
aam
and
push
push
jno
pop
or
lahf
aam
int
insb
jbe
dec
push
xchg
dec
js
pop
popf
out
les
ret
mov
jmp
out
in
fisubrs
add
into
fs
and
and
lcall
mov
mov
inc
out
dec
or
ja
dec
add
jmp
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
adc
dec
pop
out
and
hlt
mov
pop
dec
fbstp
rcll
test
pop
pop
inc
mov
push
daa
or
cli
pusha
or
inc
pushf
sbbl
mov
sbb
lods
mov
ss
ret
subb
or
les
adc
iret
ficoml
fsubrp
repz
pushw
push
mov
cmp
lret
cltd
jnp
mov
scas
or
adc
scas
sbb
pop
sbb
insl
inc
cwtl
daa
or
pop
adc
jae
cmp
inc
xor
dec
jbe
inc
ss
into
sbb
xor
cmp
sahf
cmp
push
icebp
ret
pop
aad
push
les
and
bswap
sbb
sarb
adc
pop
xor
pop
adc
incb
mov
ds
xor
outsl
xchg
push
test
lahf
test
jecxz
jbe
sbb
cmp
xchg
mov
jnp
js
gs
pushf
stc
mov
jbe
in
and
call
sub
cld
lds
sub
jne
pop
test
dec
or
mov
call
mov
leave
xor
lds
pusha
cmp
mov
out
std
push
imul
enter
enter
loope
dec
ljmp
cli
loop
xchg
fnstenv
and
or
mov
mov
pop
inc
dec
scas
push
daa
push
mov
fucomip
rcrb
inc
sub
mov
mov
testl
sub
popa
nop
int3
mov
adc
shlb
test
pushf
fldl
nop
pop
loop
cmp
fcomip
filds
xor
adc
cmc
clc
dec
mov
push
cmc
stos
push
out
sub
int
xchg
mov
scas
mov
or
pop
mov
nop
sarb
loopne
jge
add
xor
loopne
cmc
fdiv
test
adc
mov
out
loop
out
ljmp
out
xor
gs
hlt
je
sbb
push
xchg
dec
imul
pop
push
push
xor
jb
sbb
mov
shlb
and
daa
add
push
fistpl
bound
popa
dec
mov
sbb
xor
das
jae
push
mov
mov
aam
sbb
aad
fimuls
mov
mov
jg
push
data16
aaa
les
test
mov
dec
mov
mov
push
cli
stos
mov
mov
push
dec
fisubl
je
lahf
sub
lcall
add
xorb
lret
sub
pushf
jg
sub
xor
popf
call
fildll
mov
jge
sbb
inc
lret
push
shr
cs
movsb
push
jmp
pop
add
sti
dec
leave
pop
sub
scas
out
pop
push
jl
int
add
adc
jb
lahf
sub
xchg
adc
or
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
pop
rorl
push
jle
xor
jle
sbb
cmpsb
cmova
movsl
push
cmpsb
movsb
ss
cwtl
daa
cmp
bound
jnp
ljmp
aad
enter
add
subl
outsl
rorb
xchg
cmp
je
and
std
xchg
push
out
mov
test
fstpt
insl
std
and
sbb
inc
inc
add
pop
fdivs
inc
jl
in
rolb
orl
loopne
cmp
cmpsb
cmpsb
sbb
fcmovb
in
mov
jbe
lcall
leave
or
push
push
sub
xor
mov
out
stos
data16
out
push
loop
ret
daa
loope
jp
icebp
lds
ss
sub
fs
cs
sbb
sbbb
mov
test
adc
adcb
cmpsb
mov
push
xchg
repnz
push
jb
ret
orb
sub
cli
sub
in
adc
or
jae
xchg
mov
xchg
bound
cmpsb
sti
pushf
mov
xor
das
outsl
loopne
mov
and
adc
out
xchg
imul
leave
xchg
xor
jo
pop
jne
adc
enter
cwtl
push
ds
aam
cmp
fists
push
xor
loope
fs
mov
xchg
int
jae
or
sub
out
add
mov
or
jnp
push
nop
leave
scas
and
mov
xchg
inc
push
sahf
mov
pop
sbb
sub
mov
xor
lods
adc
imul
sbb
ljmp
aaa
sub
out
mov
xor
xor
mov
jmp
outsb
xchg
xchg
cmpsl
mov
sub
fnsave
sbb
iret
loopw
leave
push
sbb
sub
rcll
push
cmpl
cmp
sub
fcomps
mov
ret
mov
mov
clc
push
test
xor
clc
ret
mov
js
jb
jns
add
out
jg
repz
movsl
mov
and
aaa
adc
xchg
dec
pop
pop
lahf
ja
add
push
les
xchg
mov
push
inc
cmc
scas
cmpsl
xor
cmpsl
xor
mull
imul
in
jb
pop
sti
ss
ret
mull
bound
rcrl
mov
add
stos
jne
or
inc
movsl
dec
lcall
testl
sub
mov
aad
mov
hlt
cli
icebp
aaa
dec
add
push
mov
ficompl
push
jg
xor
pop
call
dec
and
xor
inc
add
sbb
lret
mov
leave
sbb
xor
inc
cmp
subl
jmp
push
daa
dec
dec
pusha
push
scas
and
aaa
fwait
rcrl
mov
mov
sbb
dec
shrb
sarb
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
or
jle
jge
jle
pop
push
inc
sarb
sub
push
xchg
mov
iret
lock
pop
daa
cmp
pop
push
mov
lods
sbb
insl
aaa
push
enter
aas
push
mov
mov
repz
stos
cmpsb
inc
lret
es
dec
dec
int3
sbb
enter
test
mov
fcoms
mov
les
test
pop
push
and
pop
and
aaa
lahf
and
mov
add
add
les
test
pop
add
stos
xchg
aam
sarl
stos
pop
fsubs
outsb
imul
inc
mov
xchg
repnz
sti
cs
xor
xchg
sub
push
roll
jno
aad
ss
ds
pop
add
cmp
jmp
mov
inc
enter
test
xchg
push
mov
xlat
sub
mov
cmp
stos
mov
jle
pop
push
bound
add
aaa
mov
enter
mov
lods
or
ja
xchg
xchg
mov
cmpsl
hlt
inc
push
xlat
jno
test
jge
adcl
das
cwtl
stos
push
loopne
movsb
dec
sub
and
xchg
nop
js,pn
popa
adc
pusha
in
lods
movsb
jae
gs
adcb
mov
or
lods
jl
popf
or
fidivs
out
lret
sub
jl
ficompl
enter
sub
test
sbb
stc
and
jns
cmpsb
pop
and
xchg
lret
arpl
int3
mov
jge
cmp
sbbl
icebp
in
mov
mov
pop
mov
sti
dec
movsl
xchg
xor
repz
adc
lcall
push
repnz
mul
daa
mov
mov
roll
cmp
enter
enter
push
out
ret
sbb
imul
and
lret
xor
sub
repnz
cli
movsl
ret
adc
pmaddwd
jo
jb
std
mov
adc
cmc
inc
add
mov
outsb
mov
enter
add
fiaddl
mov
jp
in
test
cmpsb
sahf
imul
pushf
push
sub
shrl
adc
push
je
or
xchg
pop
mov
mov
cltd
inc
jl
bnd
jo
jle
cmp
icebp
xor
rcr
mov
inc
inc
pop
cld
repnz
mov
fimull
xchg
int
jo
jno
cmpsl
or
sbb
bound
imul
out
repz
inc
js
xchg
dec
xor
push
lods
fisubl
scas
cs
and
push
insb
jg
into
inc
cmp
cwtl
arpl
add
push
push
mov
pop
xor
fucomip
adc
scas
add
das
aaa
xchg
gs
test
dec
xchg
xchg
xchg
or
dec
xor
dec
push
imul
lcall
pop
add
inc
dec
push
call
push
enter
add
test
jno
ja
shrb
lahf
add
cmp
jle
add
dec
dec
test
pusha
fildll
inc
sub
incb
jo
or
lret
jo
insl
pop
mov
cmp
pop
xor
jle
jnp
dec
in
mov
outsl
dec
sbb
stos
loop
mov
in
aad
sub
leave
xchg
outsl
lds
pop
mov
cwtl
and
movsl
xchg
cli
ret
push
xchg
fdivrl
cltd
aaa
movsb
int
addr16
inc
push
mov
and
dec
out
mov
push
and
inc
push
bound
aam
jp
jle
sti
ss
adc
sarb
dec
out
xchg
xor
in
fcmovnbe
jge
pop
test
jae
xchg
jl
cmp
add
mov
dec
lcall
mov
add
xor
jmp
in
push
arpl
push
or
shrb
sub
pop
arpl
dec
out
fs
pop
pop
ljmp
inc
in
mov
mov
test
inc
ds
lcall
push
cmc
ds
in
xor
push
leave
adc
xor
ficoml
dec
repz
push
sub
sub
push
jb
int
fistps
add
dec
out
rcrb
out
bound
imul
iret
mov
inc
adc
sarl
and
imul
testb
sti
shll
and
cmp
mov
pop
and
mov
adc
movsb
mov
in
xorl
mov
xor
popf
lcall
jg
bound
in
ret
loope
pop
and
mov
dec
aas
add
movsl
and
fdivr
or
cmp
pop
push
inc
add
fisttpl
sub
sbb
mov
mov
inc
lcall
adc
push
dec
mov
sub
xor
out
cmp
mov
aad
dec
dec
sub
pop
and
pop
pop
ret
cmp
subb
loopne
imull
pop
mov
std
fisttpl
bound
mov
mov
push
fildl
rol
inc
pop
outsl
pop
mov
daa
jnp
dec
call
push
mov
xchg
mov
cmp
mov
xchg
sub
leave
sbb
mov
nop
in
cmpsb
into
outsb
fldt
mov
cmpsb
clc
mov
sub
cld
pop
sbbb
push
xor
inc
mov
dec
sbb
outsl
xlat
mov
jecxz
std
scas
cltd
sbb
jg
pop
push
mulb
iret
dec
popf
sub
push
insl
cmpsb
movsb
adc
mov
xchg
jmp
mov
xchg
insl
mov
roll
jmp
out
adc
stos
pushf
sarl
xchg
repz
icebp
sbb
aad
mov
into
mov
xor
mov
inc
mov
enter
pop
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
fucomip
scas
push
xor
jle
sahf
inc
push
push
xchg
fildll
sub
xchg
repnz
xchg
sbb
mov
inc
loope
xchg
popa
fcomip
in
or
inc
cmpsb
xor
nop
jno
je
xor
add
les
testb
out
out
mov
movsl
pop
inc
fstpl
inc
xchg
sbb
out
nop
stos
sub
dec
mov
in
fwait
or
in
jle
and
sbb
in
jl
loope
push
xor
cld
pop
xor
subb
fidivl
cmp
test
sbb
pop
das
add
xchg
test
sub
cmp
cmpsl
int3
cmpsb
jecxz
pop
scas
dec
mov
pop
xor
roll
lcall
sub
and
dec
pop
jmp
call
xchg
mov
js
add
dec
rcrb
hlt
push
pop
fisubl
in
push
aad
jecxz
loop
mov
out
movsl
adc
cmpsb
mov
ret
sbb
inc
xchg
jbe
cmp
adc
jnp
xchg
cwtl
fisubl
cld
add
push
adc
das
sti
mov
out
adc
inc
enter
addr16
out
in
ja
push
xorb
subb
and
cmp
and
xor
divl
or
movsb
scas
lods
or
bound
enter
cs
jns
mov
sahf
xchg
adc
xchg
mov
cmc
mov
sahf
mov
cmp
dec
aas
dec
xchg
pusha
pop
adc
aas
out
movsl
cmpsl
ret
out
in
jecxz
iret
inc
sub
pop
ss
arpl
xchg
xchg
inc
lret
xchg
fcoms
pop
out
pop
mov
mov
push
sub
mov
xchg
and
and
and
sbbw
add
shr
lods
adc
popf
test
xchg
push
pop
or
in
push
fistpll
addr16
leave
andb
and
int3
nop
add
push
xchg
popl
subl
insl
nop
dec
call
clc
filds
stc
shlb
daa
mov
sbb
movsl
push
ss
fs
ficoml
adc
popl
imul
pop
adc
mov
pushf
mov
xor
jecxz
fcoml
lcall
rcll
mov
or
and
dec
push
mov
xchg
das
mov
stos
movsb
popf
test
dec
mov
sub
out
fidivrs
pop
dec
rcr
loop
mov
mov
cli
pop
stc
in
test
lods
repz
jecxz
xchg
daa
cmp
fsubrl
and
push
lods
xor
and
std
inc
mov
add
push
fimull
sub
out
cmp
or
sbb
aam
mov
and
jmp
jae
fdivl
mov
and
clc
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
cmp
data16
jle
fistpll
xchg
iret
add
fsubr
cmp
sub
or
fdivrl
jge
or
aaa
js
and
xchg
fidivrs
nop
mov
lds
mov
inc
push
fisttpll
xor
mov
pop
inc
mov
xor
sarl
dec
push
xchg
stc
loope
in
les
aad
jne
pop
add
out
pop
push
pop
add
pusha
aam
mov
adc
hlt
lret
push
mov
cmp
ficoms
test
adc
es
jo
or
mov
fsts
pop
dec
cmp
daa
add
cmpsl
push
push
mov
inc
jne
jmp
es
sahf
loop
push
or
lcall
jl
mov
in
cmc
xchg
cwtl
cld
js
loope
dec
stc
sub
in
inc
pop
inc
xor
add
lea
cmp
sahf
dec
pop
insl
sub
add
xchg
loope
cmpsl
lcall
xlat
sbb
es
aas
push
add
pop
in
mov
or
cli
popf
push
popf
sub
xor
mov
clc
mov
xor
jne
jno
or
rcr
sbb
jmp
push
mov
sbb
movsb
pop
incl
pop
mov
test
loope
add
cli
mov
hlt
cmc
push
inc
inc
push
push
mov
cmpsb
push
mov
mov
adc
leave
loop
dec
sub
or
and
into
out
daa
sbb
xchg
push
daa
fcomi
push
cmp
sbb
add
jle
out
pop
pop
push
test
fnstcw
shll
shl
sahf
lahf
daa
jo
jne
call
lock
inc
andb
lret
add
inc
mov
sub
lds
jle
push
xchg
jae
hlt
mov
sahf
cmpl
test
mov
push
mov
repnz
inc
icebp
mov
out
xchg
aas
cmpsb
jae
addr16
pop
xorl
lcall
enter
push
cltd
push
into
sub
push
adc
pop
mov
push
mov
mov
jecxz
sarl
sub
add
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
es
fistpll
mov
pop
loope
add
cmp
imul
test
lods
addr16
sub
pop
cmp
xchg
out
lea
inc
es
es
cmpsb
adc
and
xchg
push
cmpsl
inc
pusha
pop
dec
cli
cmp
adc
xor
cwtl
data16
jns
jne
in
mov
ficompl
imul
mov
pusha
cmp
stos
loope
jl
inc
bound
stc
imul
je
inc
mov
jno
clc
pusha
aas
jne
adc
or
lcall
xor
outsb
dec
ss
mov
popa
jg
out
out
jbe
jbe
inc
je
rcrb
push
xlat
mov
cmpsl
mov
test
sbb
adc
sub
xchg
pop
aam
data16
push
enter
rorl
imull
shrb
dec
sub
mov
dec
push
test
sub
jecxz
setle
jmp
xchg
pop
movsb
jmp
pop
cli
leave
fadds
push
mov
popf
cli
dec
mov
cmp
sub
mov
dec
jg
mov
sub
in
lret
rclb
dec
add
aam
dec
sarl
xchg
in
fnstcw
orl
inc
push
popf
xor
test
xchg
inc
scas
dec
adc
mov
jl,pn
push
sub
ja
add
pop
sub
push
test
stc
mov
mov
hlt
cmp
daa
or
cli
mov
daa
repnz
xchg
lret
jge
lea
xchg
sub
stos
add
jecxz
arpl
sub
lret
cmpsl
lret
cmpsb
divl
clc
or
mov
bound
jbe
adc
pop
into
fstl
pusha
and
add
jl
div
dec
test
les
mov
cli
mov
xchg
push
cmp
mov
fmulp
xchg
out
xor
sahf
xchg
test
jg
movsl
push
and
xchg
arpl
lret
jecxz
sub
movsl
mov
das
fwait
test
mov
jg
fwait
dec
jmp
sbb
cli
xchg
arpl
xor
cmp
mov
or
js
xor
std
ret
fcompl
jl
ret
nop
mov
leave
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
mov
push
movsb
sarb
jge
jle
jge
xchg
in
dec
adc
aaa
imul
push
jno
mov
cmp
xor
xorb
dec
mov
xchg
cli
xlat
imul
popf
in
jmp
or
inc
mov
iret
addl
adc
lods
mov
mov
jnp
xorl
lret
mov
sbb
stos
int
ds
test
push
clc
mov
testb
imul
mov
loope
gs
adc
lahf
push
clc
arpl
xchg
mov
inc
dec
addl
pop
inc
push
inc
sub
dec
cli
int3
rcrb
ret
mov
xchg
aad
push
sbb
dec
aas
iret
mov
out
les
jle
cmp
sbb
pop
repnz
icebp
pop
ss
dec
das
cmpsl
lds
mov
mov
inc
and
mov
add
clc
sbb
mov
test
dec
cwtl
push
mov
loop
imulb
stos
cwtl
cmp
mov
mov
cmp
inc
dec
leave
dec
add
push
fidivs
cmp
out
xchg
jo
sahf
xlat
inc
xchg
mov
in
scas
dec
jae
xorl
scas
out
call
xchg
jmp
dec
xchg
cmp
iret
incb
mov
pop
call
out
adc
movsl
lcall
pop
dec
xchg
jno
cmp
mov
and
popa
popf
fistps
jmp
test
je
sbb
clc
mov
push
popf
loope
adc
pop
dec
imul
jecxz
add
dec
push
dec
cwtl
dec
inc
pusha
jle
lret
shl
or
and
or
js
scas
aaa
inc
jno
loope
push
pusha
push
or
mov
pop
jl
add
adc
and
mov
movsb
or
int3
adcl
sub
jg
fwait
add
sub
dec
in
jno
inc
dec
xlat
xor
inc
imul
adc
rorl
xor
arpl
pop
xchg
push
dec
jns
decl
ljmp
jo
in
nop
imul
lahf
subb
cmpsb
sub
or
fldt
xlat
xor
in
in
in
push
add
dec
jne
add
cltd
es
inc
les
mov
fcompl
out
cmp
and
sub
push
xor
sti
fisttpl
in
mov
adc
xchg
jg
xchg
cltd
daa
jp
or
cmp
sub
ss
adc
fucomi
iret
dec
fnstcw
aaa
cli
loop
xor
xlat
add
movsl
push
xchg
push
mov
icebp
pop
push
jmp
mov
jo
mov
sbb
mov
xchg
sbb
inc
repz
dec
and
imul
int3
jmp
mov
in
in
outsl
adc
xor
inc
xorl
cs
xchg
aaa
sub
cmpsl
aaa
inc
add
add
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
dec
mov
jle
jge
jle
jmp
and
stos
mov
push
pushf
es
xchg
or
int
push
adc
ljmp
jmp
mov
jp
jne
dec
gs
insb
pop
pop
or
mov
outsb
in
cmp
in
or
shl
push
or
stos
push
ret
jmp
cmp
les
das
rcll
repnz
jle
mov
xlat
pop
push
sub
in
xchg
cmp
jg
sub
test
or
xchg
pusha
inc
or
cmp
mov
in
xor
fwait
ret
cmc
fs
jg
cld
push
sbb
insl
in
push
and
cmp
mov
dec
out
push
leave
adc
pop
lods
pop
sti
jbe
cmpsl
das
loop
mov
dec
repnz
push
aad
scas
insl
cmpsb
mov
ret
pusha
sub
mov
xchg
inc
movsb
jns
dec
cmpsl
jmp
rolb
fimull
jns
dec
daa
inc
xchg
rol
sub
ds
stos
je
pop
xchg
pop
cmp
hlt
fnstcw
xor
lods
aas
fists
insl
ss
pop
in
ss
mov
mov
sub
iret
or
out
ljmp
dec
je
daa
movsb
lds
inc
fldl
xlat
les
movsl
call
mov
ss
adc
leave
in
cmp
push
xor
xchg
inc
inc
sbb
push
cmp
movsl
arpl
sahf
arpl
xor
gs
cmp
out
lds
cltd
pop
pop
sub
xchg
loopne
mov
add
push
dec
ljmp
and
inc
negb
xchg
scas
orl
sbb
lcall
repz
scas
mov
mov
mov
notb
cmpsl
loopne
mov
lods
test
lret
and
push
add
mov
pop
nop
addr16
sub
adc
add
in
jp,pt
test
jge
cmp
lret
shlb
adc
fbstp
iret
xor
fcmove
clc
int
pusha
icebp
aaa
movsb
popf
inc
mov
lea
jp
cld
insl
dec
push
nop
pop
sbb
sti
mov
aaa
jmp
dec
dec
pop
push
sbb
movsl
sbb
fwait
jae
leave
sbbl
imul
ds
sub
add
mov
jecxz
cmpsb
cwtd
pushf
mov
dec
cmp
in
sub
mov
aas
push
ja
pop
pusha
inc
adc
xor
or
cld
fidivs
jno
inc
fdivrs
data16
lods
dec
std
in
clc
mov
inc
dec
jbe
jl
mov
mov
lret
inc
das
lods
sbb
std
dec
cmovo
scas
xchg
cmp
jg
sub
mov
jg
loop
xchg
aas
loopne
push
sbbb
mov
sub
push
xchg
push
push
adc
add
jae
mov
fisubl
dec
inc
mov
fdivl
push
inc
js
enter
add
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
frstor
mov
and
jle
push
test
pop
adc
lock
andb
xchg
popl
ja
add
push
pushf
fidivs
repnz
jbe
cmpsl
jbe
fs
fmul
mov
adc
add
and
mov
aaa
std
ficoml
fstpt
dec
mov
push
out
push
pop
out
mov
dec
aam
lret
ret
jne
lret
arpl
call
fiadds
fsubrs
test
imull
fs
adc
cmp
jge
scas
add
xorl
push
rep
sbb
mov
fidivs
rorb
aad
std
push
mov
subb
dec
cli
sbb
dec
inc
aad
cwtl
je
lods
lea
xchg
dec
cld
leave
pop
mov
ja
aam
shlb
inc
rclb
push
inc
push
movsl
mov
mov
scas
sub
push
dec
xchg
dec
adc
rorl
les
mov
clc
cltd
testb
mov
notb
ljmp
faddl
jno
cld
xchg
jge
cli
xlat
and
enter
dec
in
cs
insb
mov
pop
cmp
andl
mov
sarb
mov
sub
test
pop
push
mov
out
lret
pusha
hlt
or
jl
int3
div
test
sub
fadd
push
in
repnz
aaa
jbe
popa
xor
xor
cmp
adc
shll
in
arpl
icebp
rcll
mov
cld
imul
je
sbb
ljmp
testb
dec
mov
shrl
das
daa
jp
sub
sub
mov
outsl
out
jno
inc
xchg
pop
push
xchg
clc
pushf
mov
jbe
pop
shrl
mov
mov
push
dec
add
push
pop
incl
jbe
pop
es
test
xchg
sahf
ljmp
inc
ret
mov
push
pop
inc
push
inc
out
clc
cmp
jecxz
sub
sbb
out
cmp
rcll
jne
push
jbe
sub
dec
mov
pop
jnp
lods
shrb
je
add
or
inc
adc
aam
jge
xor
adc
adc
jb
or
add
pushf
adc
pop
sbb
and
rclb
or
pop
imul
loope
iret
mulb
in
out
sahf
call
or
repnz
mov
sti
adc
out
test
enter
out
mov
insb
pushf
pop
fisttps
pop
imul
std
arpl
push
lret
sub
lcall
pop
mov
xchg
enter
pop
jbe
call
dec
add
push
mov
dec
and
xchg
jle
int3
add
fistpl
adcb
sbb
mov
scas
inc
dec
dec
mov
cld
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
push
mov
scas
sub
jle
in
jle
fwait
jmp
dec
mov
aas
ss
mov
xchg
pusha
push
fisttpll
out
push
enter
add
add
sbb
cmc
or
and
test
pushf
sbbl
xor
add
pushf
outsl
imul
xor
imul
xor
jae
push
mov
leave
sahf
std
lahf
mov
daa
cli
cmp
pop
push
pop
pusha
dec
mov
int3
imull
aas
fildl
mov
lahf
fsubrs
xchg
mov
xchg
jns
push
ljmp
stos
xor
lods
and
lock
cmc
cmpb
repnz
sub
cmp
movsl
mov
dec
jl
xchg
adc
rclb
jb
sar
iret
addr16
lret
sahf
inc
mov
xor
pushf
jmp
loopne
xchg
fs
cmp
inc
sub
and
mov
mov
clc
rorb
pop
movsl
xlat
sbb
push
push
mov
jl
cli
ret
dec
das
mov
imul
imul
pop
push
sbb
test
jg
in
push
adc
mov
inc
adc
pop
jbe
mov
inc
jge
lock
cmp
dec
pop
push
or
pop
call
rorl
mov
push
js
dec
pop
sbb
mov
imul
pushf
clc
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
call
jg
jle
aam
inc
icebp
cmp
shr
mov
jo
or
sub
ret
dec
rclb
jp
gs
mov
or
test
xor
cmp
test
xor
mov
jno
xor
fstl
dec
lea
insb
jno
push
test
or
insl
inc
dec
inc
pop
inc
insb
int3
mov
insb
movsb
sub
sbb
inc
pop
hlt
mov
out
andl
int
lds
in
sbb
pop
mov
loope
push
popa
adc
pop
jae
push
cmp
movsl
cli
pop
and
imul
mov
or
cmp
sbb
test
test
sub
imul
sub
mov
or
sub
xor
add
xchg
iret
ja
mov
xchg
cmp
jl
xor
addb
mov
mov
outsb
int3
aas
mov
lods
or
mov
push
xor
xchg
jecxz
jae
mov
inc
clc
aam
pop
mov
test
jp
push
and
mov
fsts
jns
repz
icebp
adc
push
pop
shrl
lods
stos
cmpsb
cmp
outsb
mov
gs
lcall
mov
pop
mov
imul
jg
inc
add
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
ret
push
jne
sbb
dec
clc
mov
cmc
dec
insb
shrl
pop
not
ja
out
lds
sub
mov
or
test
inc
xchg
xor
cmpsb
mov
cwtl
jns
and
int3
jmp
push
jno
xor
xchg
imul
outsb
repz
jno
jl
and
inc
pop
xor
nop
repz
mov
bound
mov
add
cmp
es
sti
xor
sub
cmp
xor
stc
xchg
add
and
mov
mov
xor
mov
or
xorb
scas
ret
add
push
clc
inc
push
xor
popf
xchg
lock
into
lcall
mov
mov
icebp
fstps
int
dec
and
rcrb
dec
gs
jo
arpl
xor
hlt
cld
out
sbb
push
push
divl
push
mov
jl
jle
in
mov
xchg
jae
add
xor
xchg
and
les
xchg
and
xchg
int
xchg
jmp
mov
xlat
daa
and
pusha
sub
fisubs
stos
push
push
lret
ss
push
or
pop
pop
jb
nop
mov
dec
or
add
fcmovb
inc
hlt
std
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
adc
test
sarb
in
jle
push
js
pop
sub
call
add
lahf
sub
add
scas
rcr
int3
adc
and
push
add
dec
nop
jp
or
clc
mov
outsb
sahf
dec
or
or
xchg
cmp
es
cmp
mov
push
les
hlt
sub
addr16
mov
jle
cmc
mov
loopne
ja
xor
mov
movsl
mov
insl
jmp
je
jmp
jbe
pushf
aas
andb
mov
jmp
add
popl
cmp
fs
das
sbb
jae
adc
bound
out
jp
jnp
pop
cli
movsb
ficoml
push
loopne
xorb
addb
push
inc
dec
dec
test
push
mov
mov
es
ret
mov
stc
add
loope
test
call
in
je
xorl
push
sti
stos
in
shlb
repnz
rol
es
aas
pop
ja
sti
add
dec
pop
dec
and
ja
stc
pop
ret
shrb
pop
bound
lods
sbb
jecxz
lcall
sbb
dec
pushw
ret
pop
inc
subb
and
add
pushf
add
xchg
int
rorl
mov
and
mov
xor
add
jmp
adc
test
or
andnps
push
sarl
in
jle
movsb
out
es
inc
cli
imul
sbb
cmp
out
sub
sub
cmp
lea
mov
in
adc
mov
or
ficomps
ljmp
jp
out
jae
sub
xor
dec
sbb
xor
popa
pop
pushf
and
adc
testb
mov
jg
push
mov
sbb
in
shrb
push
enter
aad
pop
push
int3
xchg
mov
jmp
fs
cld
xchg
pop
add
or
addr16
lret
xor
into
popf
mov
and
add
dec
hlt
test
jecxz
pop
add
and
sub
and
add
mov
sbb
dec
and
popf
inc
pop
pop
cmp
insb
cltd
and
lret
fnstcw
cltd
in
loope
jae
pop
int3
jnp
pop
loop
loope
jle
fnstenv
jg
rcll
push
adc
sub
mov
or
out
dec
aaa
das
bound
mov
xchg
loope
mov
cs
cld
lods
int
stc
insb
xchg
in
sub
cmp
test
jno
pushf
and
inc
or
outsb
jb
cmp
mov
add
sub
add
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
inc
test
sarl
in
jle
mov
inc
stc
hlt
inc
jl
mov
xor
adc
sbb
lahf
add
adc
adc
xchg
push
sub
xchg
inc
cltd
pusha
out
mov
sarb
in
ljmp
mov
jo
cmp
imul
test
js
sbb
or
pop
pop
push
out
das
fsubrl
cmp
mov
mov
xor
sbb
add
push
lret
cli
inc
mov
jnp
outsl
fldenv
jo
or
sub
cmp
les
int
movsb
stos
dec
dec
mov
add
fs
test
pop
xchg
xchg
test
mov
xchg
pop
loopne
test
iret
and
ret
pop
int3
sbb
shl
push
jno
jle
jns
jp
push
xor
shlb
xchg
xor
or
loop
sub
xchg
jp
pop
mov
iret
push
insb
addb
jp
nop
inc
lock
sbb
addr16
cltd
inc
inc
jg
imul
xlat
xchg
sub
xor
or
push
inc
nopl
inc
gs
ljmp
add
sbb
scas
lock
mov
repz
in
mov
out
xchg
movsl
inc
aas
fimuls
leave
or
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
add
jle
in
jle
mov
outsl
mov
lret
sub
and
in
cmp
orl
fsubrs
fdivl
aam
xor
shlb
sti
push
orl
cmpsl
cltd
std
aaa
xchg
sbb
addr16
mov
jmp
scas
rclb
jae
imul
inc
int3
push
ja
pop
addr16
popf
jns
or
lret
and
adc
fstl
int3
cs
cltd
sub
push
cmp
adc
cltd
in
push
push
xor
ljmp
repz
add
fisubrl
dec
les
lds
call
repz
adc
dec
shlb
insb
inc
cmp
out
add
dec
adc
movsb
aam
jnp
pop
mov
fdivrl
outsl
dec
adc
add
mov
loope
cwtl
movsb
push
mov
pop
dec
orb
push
ret
add
cmc
jmp
es
addr16
enter
jp
dec
push
aaa
push
dec
jecxz
jp
xor
aad
push
fildll
les
ret
mov
sar
inc
int3
mov
mov
pop
loope
pop
cli
pop
mov
xor
pop
stos
adc
fst
jl
push
mov
pop
push
add
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
inc
test
or
jle
in
jle
mov
jns
jg
or
mov
and
imul
data16
icebp
lcall
pop
inc
mov
sti
lcall
mov
gs
test
inc
test
imul
dec
pop
popa
hlt
and
idivb
fstl
jp
fld
ret
mov
and
jnp
int3
stos
and
lahf
pop
jge
popf
jno
shlb
cmp
pop
fistpll
cld
cmp
sbb
inc
cltd
mov
add
jb
bound
push
xchg
aas
test
xchg
test
prefetch
or
das
popa
pop
cmp
jbe
std
out
roll
movsl
int3
aaa
jno
inc
add
jp
repz
scas
out
jmp
test
push
les
and
dec
jg
in
mov
dec
dec
test
mov
sbb
outsb
add
in
xchg
lock
into
fidivs
insb
push
add
cmp
mov
mov
sar
addr16
xchg
inc
pusha
testb
ds
leave
int3
add
jmp
push
mov
imul
pushf
and
popf
and
scas
clc
stos
and
sti
inc
outsb
push
jno
xorb
xchg
mov
fidivl
shll
jno,pn
mov
mov
out
dec
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
cmp
cmp
nop
xor
sub
mov
lock
dec
push
sbbl
popa
and
jns
aas
sub
in
mov
sub
sbb
andl
add
or
xor
scas
dec
cmp
pop
mov
xchg
jns
pop
test
adc
mov
add
out
inc
in
pop
pop
fists
and
lods
mov
outsb
ss
bswap
xor
mov
mov
fyl2xp1
shlb
outsb
xor
adc
sbb
lds
pop
call
lea
popa
sbb
insl
pusha
mov
repnz
in
dec
mov
pop
push
in
dec
and
mov
push
push
loopne
outsb
add
test
and
pop
mov
xorl
aad
roll
mov
aaa
jae
ljmp
xor
nop
mov
fldenv
ljmp
mov
aas
loopne
stos
shlb
aas
out
inc
mov
push
xchg
xor
pusha
ss
mov
clc
mov
lret
mov
xchg
xchg
loope
mov
inc
inc
mov
sbb
lret
insb
jmp
push
pop
arpl
out
lret
add
lods
xor
xor
sbbb
fwait
inc
cmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
lea
in
pusha
fidivrl
jp
jle
sti
int
mov
and
adc
adc
fcoml
add
jmp
xor
mov
sub
xchg
pop
cs
sub
fbld
pusha
je
fsubrs
fdivs
jne
mov
lcall
fs
or
notl
sahf
or
inc
xor
push
sbb
mov
xlat
cmp
add
push
inc
adc
add
adc
sub
in
mov
outsb
cwtl
mov
movsl
sbb
xor
adc
cli
mov
lock
xchg
cs
jbe
cld
xlat
xlat
sbb
xchg
xor
aad
jns
cmp
pop
into
jg
loopne
adc
mov
adc
ja
mov
popa
in
and
push
cmp
fwait
sub
xchg
mov
push
gs
pop
js
or
xor
mov
and
idivb
ds
loop
push
mov
mov
fiadds
je
or
imul
push
push
mov
lods
stos
push
push
push
imul
mov
cli
cmp
sbb
test
mov
pop
shlb
sub
ret
inc
movsl
xor
shrl
cmp
testl
mov
jae
je
xlat
sbb
xchg
fcmovnbe
sub
sbb
sti
addr16
int
sbb
sbb
jnp
add
scas
leave
mov
mov
sbb
dec
fwait
mov
int3
ljmp
rclb
outsb
int
inc
pop
mov
inc
pop
addl
push
ror
mov
icebp
mov
lret
inc
push
pop
xlat
mov
lock
sbb
xor
mov
cs
rclb
imul
aaa
pop
sti
icebp
or
adc
inc
in
sbb
dec
mov
sub
inc
mov
mov
adc
mov
je
or
adc
add
ret
ret
mov
mov
xor
fadds
mov
xchg
add
test
dec
or
adc
sub
jmp
dec
scas
pop
movsl
xor
pop
gs
cmp
ficomps
xchg
pop
push
arpl
test
imul
mov
xchg
repnz
fucom
test
in
xor
addr16
or
stos
jb
arpl
or
cmp
mov
mov
inc
les
loopne
mov
add
gs
xchg
aaa
xchg
cltd
pop
push
push
xor
in
cmc
and
mull
push
in
mov
popf
mov
lret
inc
cld
outsl
sub
xchg
push
push
aas
or
shlb
scas
lcall
inc
mov
test
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
jns
fnstcw
jp
jle
pop
xor
mov
fcomp
mov
mov
out
dec
addr16
mov
dec
cmp
rorl
sub
cmpsl
adc
sub
mov
lea
xor
sbb
sub
xchg
or
lods
or
movsb
jp
jbe
mov
rcll
adc
movsl
nop
sbb
mov
inc
outsl
and
inc
jecxz
or
out
xor
add
or
cwtl
pop
or
iret
loope
sub
xchg
fdiv
jbe
add
dec
fcomps
sahf
sbb
inc
sarl
jecxz
jne
js
mov
lret
mov
iret
dec
or
xchg
sbb
pop
sbb
xchg
push
mov
cmp
sti
jge
lret
loopne
mov
rolb
push
mov
loope
ret
nop
scas
orb
pusha
adc
scas
mov
insb
jae
lods
jecxz
mov
xchg
ret
add
into
stc
inc
push
add
sub
aaa
xchg
pop
testl
aad
lret
pop
push
faddl
lret
push
loopne
mov
jp
insb
add
push
adc
xchg
sub
sub
call
ret
or
xchg
inc
or
fcmovbe
cmp
mov
jnp
jne
movsb
adc
sub
int3
lds
arpl
movsb
data16
pop
mov
data16
aaa
adc
adc
mov
pop
mov
ja
xchg
or
mov
adcl
add
cltd
push
test
inc
pop
das
into
outsb
cmp
push
mov
fcomps
sub
or
fs
xor
pop
movsb
inc
cmp
int
cwtl
imul
jecxz
adc
insb
cmp
out
fnstcw
xchg
les
mov
leave
inc
imul
ss
ficomps
popa
repnz
sbb
icebp
mov
sti
xchg
lods
or
sbb
fists
arpl
loopne
ret
mov
inc
stc
and
shll
push
xor
decl
outsb
adc
fiadds
fisubrl
lods
adc
mov
jns
test
mov
int3
cmp
cmp
ds
mov
fcmovnbe
movsl
ds
and
cmp
sbb
and
bound
push
mov
and
cmpsl
cli
insb
mov
adc
pop
sub
lret
add
in
push
cmpsl
andl
fidivrs
fisubl
pop
xchg
mov
ret
leave
jmp
imul
adc
scas
imul
pop
in
jle
mov
ljmp
add
dec
pop
adc
cmpl
out
clc
je
enter
enter
je
das
lea
addr16
jae
sub
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fnstsw
in
jle
jge
jle
cli
test
subb
int3
orb
lret
inc
xor
andb
ficoms
cmp
inc
ficoms
sbb
popf
sub
push
pusha
sti
into
popf
or
jnp
dec
cltd
call
es
sbb
shl
fstpl
out
sbbb
lods
cmp
addb
dec
adc
pushf
sub
cs
subb
xor
scas
lods
mov
fistpl
es
xchg
into
outsl
xchg
and
jge
mov
jp
aaa
fbld
nop
push
aad
xchg
xrelease
xrelease
pop
clc
out
stos
xchg
aad
stos
daa
out
adc
sar
jo
xchg
pop
negl
jecxz
data16
mov
icebp
dec
cmc
mov
and
nop
xor
mov
add
push
jne
fdivl
adc
jmp
sti
daa
mov
jae
jge
test
push
cmp
pop
xchg
push
mov
call
push
cld
les
sub
and
or
fndisi(8087
sub
fldl2e
push
inc
scas
imul
xor
andl
mov
push
pop
loope
mov
jmp
push
push
mov
rcl
gs
movsb
pop
cli
enter
and
mov
popa
mov
mov
ss
xor
mov
dec
mov
ret
movsb
mov
mov
in
scas
jl
int
adc
inc
pop
in
iret
and
es
loop
mov
mov
inc
xor
movsl
icebp
push
in
sbb
xor
addb
stos
shlb
ficomps
std
hlt
jg
insl
mov
jo
push
fs
push
loope
inc
dec
pop
test
push
mov
mov
sub
push
fistps
addl
mov
stc
in
push
sbb
inc
inc
movsb
data16
out
ds
inc
dec
movsb
cli
dec
and
int3
inc
les
and
cmc
enter
subb
nop
cmp
test
scas
ljmp
pop
dec
rcrl
pop
flds
lods
jecxz
push
icebp
fcmovnu
inc
rcll
in
call
mov
pop
pop
mov
outsb
push
jmp
les
xlat
ret
xor
lock
jb
jns
cmpl
mov
movsb
ljmp
xor
pop
divb
adc
ja
inc
xchg
lds
dec
inc
dec
stos
call
inc
sti
fbld
je
push
das
adc
mov
shlb
bound
jb
adc
cltd
cs
int
mov
ret
js
xor
adc
and
cmc
ret
pop
ss
sahf
test
cmp
push
sbb
sbb
addb
jb
scas
xor
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
cmp
jecxz
jle
jge
jle
cmpsl
mov
sti
les
sub
pop
mov
fwait
cmp
shrl
lds
xchg
push
roll
in
repz
mov
ljmp
pop
mov
cltd
xchg
cmp
add
mov
ret
push
mov
jns
adc
xchg
orb
push
int3
pop
hlt
cmp
xor
cmp
xchg
jns
jns
add
bound
cwtl
fldl
neg
xor
pushl
jb
pop
rcrb
and
lret
jne
pusha
out
push
inc
mov
call
xchg
jbe
js
mov
movsb
arpl
push
in
sub
imul
inc
mov
into
pop
inc
in
movsb
mov
lods
xor
andl
and
lret
int3
popa
mov
mov
push
outsl
or
int3
push
fnstenv
and
push
test
cwtl
or
pop
mov
shlb
pop
fnstsw
icebp
push
arpl
cmpsl
xchg
daa
mov
in
jno
xlat
scas
inc
ret
lock
adc
mov
lret
or
xchg
adc
movsl
cltd
js
pop
insb
sbb
xor
xor
stos
xchg
push
int
repnz
fidivrs
xor
add
popa
mov
xchg
jge
outsb
shr
es
into
inc
stos
jecxz
mov
repz
pop
mov
bound
fmul
dec
jge
dec
pop
inc
xchg
into
leave
pusha
sbbb
inc
je
call
push
iret
inc
cmp
sub
jmp
arpl
test
adc
enter
popa
xrelease
mov
js
cli
lods
ror
mov
lcall
int3
int
dec
jmp
adc
jnp
repz
push
test
add
dec
xchg
mov
cmp
int3
shlb
mov
jb
dec
sbb
jno
jl
add
scas
arpl
mov
jns
inc
push
jb
xchg
stos
sbb
jne
push
cltd
push
cld
push
push
lret
mov
fdivl
or
icebp
popa
ds
and
lock
jno
mov
push
mov
mov
lret
push
push
and
jg
ret
lock
out
mov
iret
lret
mov
xchg
sub
fcoml
mov
inc
push
inc
xchg
fsubrs
or
cmpsl
insb
test
outsl
stos
mov
sub
mov
lds
inc
xor
pop
pop
daa
and
lods
mov
adc
rclb
adc
push
sbb
cmc
jbe
mov
fmul
dec
add
dec
sbb
andb
dec
xlat
aas
mov
jno
sarl
mov
push
sbb
scas
and
movq
add
mov
mov
mov
jmp
enter
enter
sbb
mull
push
and
jo
jle
jp
jle
bound
mov
cmp
jp
and
or
cmp
jmp
inc
aas
inc
cld
jmp
fst
in
push
jg
shll
mov
imul
movsb
into
pop
cmp
adc
int3
inc
pop
stc
pop
push
dec
push
and
and
mov
or
jecxz
clc
mov
add
push
fnsave
sbb
aaa
pop
mov
mov
sub
mov
daa
xor
scas
mov
xor
xchg
mov
or
push
stc
lods
insl
mov
cmpsl
fst
mov
dec
enter
or
add
add
mov
ret
ljmp
dec
mov
push
mov
dec
or
jg
movsb
aam
daa
lahf
cmpsb
xchg
cld
adc
cld
cld
mov
test
mov
pop
pop
pushf
mov
aas
dec
mov
int3
inc
movsl
daa
pop
and
jp
mov
andl
aas
pop
popa
dec
sbb
stos
cmc
xor
add
enter
fadd
out
dec
cmp
enter
test
cmp
lahf
xor
pop
aam
sbb
scas
scas
aas
sbb
mov
cmpsl
daa
sbb
test
sbb
aas
sbbb
cltd
aaa
xchg
movsl
adc
push
jg
sbb
or
jae
incb
out
xchg
sub
orb
dec
sbb
das
xchg
jno
daa
repz
inc
std
inc
jb
mov
xchg
lock
loope
les
test
pop
adc
adc
adc
fisttpll
ss
mov
vmread
pop
mov
repz
adc
nop
xchg
and
js
ror
push
jbe
push
mov
into
xor
mov
pusha
js
sub
dec
std
aaa
adc
pop
xor
loope
xchg
nop
adc
movsl
cmp
aaa
fbstp
sub
psrad
lods
inc
je
jge
jle
fsubrl
xlat
xlat
aas
jp
add
add
add
movsl
icebp
jnp
pusha
push
es
sub
adc
inc
test
loopne
call
and
mov
pushf
push
add
jo
stc
scas
out
push
or
push
or
xor
shlb
movsl
in
push
sbb
das
stc
in
clflush
mov
cmpsl
data16
cmp
fsubrs
aad
popw
enter
shl
fs
out
hlt
cmpsb
lods
ljmp
scas
push
rorl
or
pop
sub
nop
add
ret
cmp
lods
addl
ret
and
inc
inc
fisttps
inc
movsb
lods
mov
inc
lds
push
or
sub
cmc
inc
dec
rcrl
xchg
gs
xchg
movsb
aad
push
dec
outsb
adc
push
add
xor
aaa
or
sub
sti
jnp
sbb
xchg
xchg
mov
imul
jle
movsb
pop
jnp
insl
fs
jae
jb
mov
mov
int
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
loopne
loopne
jl
jle
jp
jle
sub
sbbb
ss
ljmp
lea
sbb
mov
inc
cmpsb
cmpsb
dec
stc
in
push
scas
ja
ja
jne
mov
add
or
clc
stos
cmp
push
jae
push
push
aaa
lret
sub
or
outsl
movsb
js
movsb
fcomp
mov
outsl
fwait
jmp
outsb
mov
sub
pop
mov
mov
or
mov
or
in
pop
in
addb
mov
decl
xchg
addr16
cmpsl
adc
inc
adc
inc
mov
orl
shrb
cmp
push
lahf
cltd
call
adcl
mov
or
movb
shll
pop
test
icebp
jae
sahf
addl
add
into
or
jno
leave
insl
jne
and
dec
into
sbb
aad
dec
int3
das
gs
inc
push
cmp
cltd
xchg
pop
shl
add
daa
call
cli
ret
jne
repz
les
add
jns
pop
out
xlat
inc
js
dec
add
and
popl
sbb
mov
adc
fidivrs
lock
adc
cmp
jo
mov
jl
and
js
outsl
scas
stos
sub
bound
pop
fmuls
stos
jg
aam
push
mov
xor
test
and
adc
jmp
xlat
stc
repnz
jnp
xchg
dec
leave
jmp
sbb
popa
pop
sahf
shl
jbe
jle
or
dec
add
stos
pop
xor
sbb
xchg
movsb
stos
add
inc
jge
dec
cmc
int3
sbb
or
lds
enter
add
cltd
pushf
add
or
scas
cmp
cwtl
xchg
in
add
rclb
mov
add
push
cld
and
fs
mov
idivb
adc
sbb
loopne
add
aad
pop
pop
adc
sbb
sbb
js
jno
imul
push
pop
inc
lahf
std
insb
pop
cmp
arpl
int3
insb
call
pop
xor
xchg
daa
mov
shl
and
stos
pop
pushl
shll
test
or
dec
mov
push
adc
test
aam
push
lret
into
pop
mov
xchg
pop
xchg
pop
jbe
shlb
insl
popa
lock
aaa
je
and
inc
std
dec
subl
scas
aam
leave
lock
addr16
mov
mov
sti
sub
xorb
inc
push
inc
mov
mov
and
test
push
mov
push
daa
movsb
mov
xchg
mov
push
pop
inc
pop
push
mov
ds
mov
mov
mov
lock
enter
or
imul
jmp
in
notb
sub
inc
testl
jge
jle
or
iret
pusha
incl
lods
scas
lea
popa
mov
enter
daa
push
sbb
jbe
push
pop
outsl
pop
ficoms
call
sub
sarb
pop
lahf
aam
clc
mov
and
jge
syscall
mov
cltd
xchg
jg
or
insl
inc
ficoms
mov
clc
pusha
xchg
sbb
shl
cmp
arpl
pop
jmp
and
lcall
inc
mov
iret
xor
cmp
cmovb
mov
add
push
stos
cmp
insl
ds
jae
mov
mov
adc
adc
repz
arpl
and
pushf
sbb
add
push
cld
aaa
push
mov
and
mov
je
loop
inc
std
cmpsb
cmp
lea
sbb
or
in
mov
mov
in
jl
imull
negb
jbe
movsl
lahf
out
lods
mov
adc
popa
fmul
jnp
jb
enter
jge
mov
dec
xchg
rclb
outsl
jle
gs
and
push
rcrl
cmpsl
mov
mov
xor
push
scas
mov
jae
mov
xor
sbb
and
pop
inc
nop
test
enter
sbb
fsubrl
xor
paddusw
push
or
or
adcb
adc
test
rep
xlat
in
int
mov
pop
rorb
jns
and
push
pop
xchg
push
mov
out
push
clc
cli
jbe
fmuls
cmp
repz
lods
je
out
push
loop
negb
call
sbb
add
xorb
int
lds
stos
and
cld
sbb
pop
pop
roll
mov
sti
add
add
jmp
pop
mov
inc
mov
sbb
add
test
lahf
in
in
lahf
into
push
pop
pop
mov
push
sub
lret
cli
movsb
loope
dec
cmpsb
xchg
shll
in
dec
or
into
inc
test
mov
lock
fmulp
xor
jno
rcll
or
push
mov
bound
stos
dec
clc
lock
mov
jecxz
push
mov
jl
int
ret
xchg
call
enter
dec
cmp
jge
je
xor
xchg
ljmp
and
aad
leave
cmp
add
imul
cmp
out
int3
js
test
imul
cwtl
fistl
fisttps
xorb
jne
push
sahf
mov
xor
cmp
fdivl
jmp
mov
outsb
mov
jp
push
and
jecxz
mov
out
mov
movsl
adc
mov
test
lcall
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
cli
repnz
jle
jp
jle
repz
test
dec
in
inc
dec
add
ss
movsb
jl
xchg
loope
xor
sbb
mov
es
lds
adc
ja
sbb
js
fists
add
dec
sahf
test
push
jae
adc
ljmp
pop
adc
jle
popa
pushf
ja
and
xor
cld
divb
mov
das
add
fnstcw
into
add
mov
jg
outsl
sbb
inc
in
aaa
cs
pop
ljmp
leave
sub
push
movsl
xchg
int3
loop
movsl
outsl
lahf
and
mov
dec
pushf
cli
and
adc
dec
mov
push
sub
push
push
pop
dec
outsb
popa
jno
orl
lods
mov
inc
xchg
mov
jg
jg
lods
sub
pop
pop
xchg
lods
jmp
les
xor
jne,pn
push
nop
or
jb
fnsave
test
inc
pop
xor
dec
pop
add
hlt
sub
addr16
mov
inc
mov
mov
out
dec
mov
push
loop
insb
sti
and
mov
mov
mov
xor
or
mov
cmp
or
lahf
jae
notl
int3
movsb
mov
push
jmp
or
ja
ds
xchg
inc
mov
shl
std
icebp
les
mov
fcoms
pop
lods
aas
enter
dec
mov
dec
or
shlb
inc
pop
cli
lcall
cmp
notb
mov
imul
dec
jne
shlb
sub
jp
jmp
int
dec
es
jno
push
jno
andl
mov
jae
or
xlat
lock
ja
das
pop
cltd
cmpsb
jge
in
push
outsb
inc
jmp
inc
mov
push
sub
test
sti
push
inc
push
mov
jg
push
cwtl
in
mov
sti
dec
or
xchg
sbb
nop
ljmp
cmp
jae
cmpl
xor
jne
jno
les
fnstenv
cmp
int3
popa
mov
mov
cmp
pop
sub
jno
cmp
inc
dec
jmp
mov
and
push
les
insl
cmp
leave
vpsrad
sub
scas
cmp
clc
pop
mov
int
aad
jo
aas
fsubr
ret
push
clc
xor
out
subl
int
rcll
out
adc
inc
push
in
daa
std
out
cmp
cltd
dec
jl
stc
push
dec
xchg
adc
fisubrl
or
mov
pop
lock
adc
popa
movsl
push
lret
pop
and
xchg
jge
cmp
dec
jae
loope
push
pusha
mull
in
mov
outsb
lret
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
incl
repz
jp
jle
rcll
fcomps
negb
fdivs
in
ret
mov
sub
aam
jns
sbb
mov
scas
jo
push
out
mov
jecxz
repnz
and
mov
cmp
push
inc
mov
ds
cmp
mov
mov
cmp
aad
out
pop
dec
and
lock
push
shll
int
pop
addr16
jmp
sub
repnz
push
cld
rcll
insb
or
je
outsb
push
aas
dec
div
lahf
push
lahf
xor
sub
mov
xchg
fistpll
mov
outsl
leave
stos
leave
cmp
cwtl
push
in
sbb
fisubrs
jl
sub
aas
pop
mov
mov
jbe
cli
sub
sbb
or
popf
test
sbb
jns
inc
pop
popf
mov
adc
repz
and
leave
and
icebp
pushf
popf
pop
dec
pop
pushf
bound
dec
popa
inc
and
xchg
sbbl
and
jmp
sbb
xchg
jle
mov
mov
stos
push
sahf
mov
insb
sbb
sbb
mov
mov
push
in
outsb
iret
data16
jb
and
call
outsl
xchg
stc
mov
adc
mov
cmp
mov
daa
sti
sbb
pop
loop
test
outsl
jle
mov
inc
arpl
xor
jmp
sub
cmp
lods
xchg
mov
lds
dec
sbb
push
notl
mov
pushf
fidivrs
les
out
in
rorb
xchg
loopne
lcall
inc
cltd
sbb
aad
lock
dec
fsubl
and
outsb
push
js
mov
xchg
jo
cltd
mov
mov
add
xor
mov
lret
pop
fdivrl
push
mov
popa
sbb
popa
jg
or
sti
adc
loop
in
dec
out
jno
fwait
mov
pop
leave
push
nop
cwtl
ss
adc
or
negb
lret
pusha
test
leave
ret
imul
nop
cli
ficoml
mov
jg
add
les
int
outsl
fldenv
or
enter
dec
cmp
out
dec
pop
mov
cmpsl
lcall
pop
sub
cltd
pop
pop
arpl
out
idivl
lock
popa
bound
push
jnp
imul
ja
pop
push
jle
sti
stc
adc
inc
and
cmpsb
shr
jno
in
pop
pushf
loope
and
testl
shll
cmp
movsl
gs
sub
shrb
or
xor
dec
adc
xchg
lock
test
push
adc
scas
cmc
pop
test
cmpsb
out
push
shr
std
sub
sbb
dec
mov
cld
cmp
cmp
loope
loope
out
subb
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
or
jle
jp
jle
fcompl
cmp
xchg
rorl
mov
xchg
fsubrp
jae
pop
inc
in
mov
xchg
pop
jo
shlb
xchg
clc
leave
pop
pop
sbb
mov
fbstp
insb
into
sub
ss
jb
fldcw
push
outsl
iret
mov
and
jae
fcompl
adc
mov
outsl
scas
daa
and
and
cmp
test
imul
push
jle
mov
out
add
dec
cmp
in
add
cmpsl
jp
enter
scas
add
push
insb
lret
sub
xor
andl
lods
repz
xchg
pop
jmp
jecxz
test
loop
push
out
popf
movsl
lcall
push
dec
fwait
ja
mov
imul
orl
out
ja
pop
xchg
sub
cs
subl
rcl
cmp
imulb
ret
sub
out
stos
iret
das
jno
lret
or
mov
dec
mov
sar
pusha
push
test
imul
int3
pop
lea
mov
mov
and
jl
sub
lods
jbe
and
xchg
andb
push
xchg
fisttpll
dec
push
push
repz
xchg
movsl
lods
iret
sbbb
jp
mov
fcmovnbe
push
mov
xor
orl
jb
sbb
mov
or
inc
pop
imul
js
and
mov
xchg
into
jb
xchg
loope
add
push
adc
mov
dec
or
cmp
or
xor
pop
sbb
add
sbb
test
mov
jle
icebp
int3
shlb
sub
scas
jle
test
inc
call
cld
inc
mov
jle
sub
sub
ret
ret
mov
aaa
rolb
push
lds
shll
adc
arpl
mov
mov
sbbb
repnz
xchg
mov
push
cmpsb
lahf
iret
imul
hlt
mov
sbb
aad
or
loop
imul
sub
bound
pop
cmpsb
push
adc
xor
mov
push
arpl
aas
mov
rcrl
xchg
dec
jne
xchg
pop
es
divl
push
xor
lods
adc
add
flds
mov
nop
pushw
out
fwait
jge
fcomip
dec
loop
rolb
mov
into
cmpsl
xchg
adc
out
xor
sti
lahf
inc
loopne
push
mov
clc
push
cwtl
jb
cmp
test
ret
cmp
addr16
mov
jp
push
or
enter
cmpsb
imul
movsb
lds
pop
ret
test
enter
pop
jnp
stc
in
push
stc
pop
aad
push
fsubrl
repz
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
sub
push
add
push
icebp
fs
test
xchg
iret
xor
mov
scas
aad
xchg
fcom
dec
inc
pushf
add
iret
test
mov
xor
add
push
test
mov
cmp
loopne
dec
inc
addr16
jb
out
mov
mov
cmpsb
xlat
push
jp
insl
xor
sub
cld
adc
out
push
xlat
adc
in
rclb
cmp
out
add
scas
mov
or
inc
dec
push
leave
mov
in
cltd
adc
and
xchg
repz
mov
bound
or
sub
ljmp
cmp
aas
inc
shrl
mov
pop
or
icebp
lock
pop
cli
xorl
or
das
mov
mov
stos
pushw
dec
addr16
lea
pushf
dec
xor
xor
fldl
jns
push
outsb
push
add
out
and
stos
pop
cld
scas
push
xchg
add
insb
outsb
fildl
xchg
outsl
shlb
les
shl
pop
xchg
sub
fstpt
xchg
dec
lds
jg
fwait
js
push
aas
roll
repnz
or
xorb
outsl
push
movsl
shrb
ja
sub
sbb
add
inc
inc
jl
push
loopne
in
lods
int3
or
out
xor
xor
idivb
sbbb
or
lea
adc
aad
or
pop
ljmp
popa
and
lea
mov
xchg
dec
leave
mov
and
iret
mov
aas
mov
aaa
xchg
or
popf
cmp
cmp
cmp
daa
test
jnp
or
adc
inc
popa
repz
xchg
lods
mov
loop
jb
xchg
add
xorb
add
popf
int3
pusha
popf
inc
and
xor
sub
jnp
jns
shlb
pop
loop
xor
ljmp
adc
inc
xorl
jg
push
rorb
xchg
xor
les
mov
cltd
in
rcll
sub
les
cmc
lahf
and
push
imul
cmp
xchg
popf
pop
sub
xchg
fldenv
xchg
popl
inc
jb
arpl
cmc
mov
jns
add
pushf
popa
jmp
xor
mov
call
sti
enter
xchg
pusha
xchg
in
sub
in
cli
or
aaa
cmp
popa
cmpsl
int
icebp
push
cld
test
jno
cmp
push
pushf
in
jl
add
xor
out
sahf
cwtl
lret
pop
sti
repz
in
stos
mov
cmc
jg
jne
pop
icebp
dec
mov
aad
sub
jns
aam
out
fwait
insl
fcoms
and
arpl
sahf
xchg
leave
push
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
add
jle
jp
jle
jae
lret
aas
dec
repz
and
rol
mov
mov
iret
push
pushf
xorl
or
fnstsw
add
mov
mov
icebp
add
repz
sub
nop
into
pop
outsl
lea
subb
les
rcrb
sub
dec
out
mov
fs
xor
adcb
mov
or
inc
arpl
ficomps
cld
dec
mov
sar
mov
mov
loope
jb
int3
rorl
loop
cwtl
mov
adc
imul
xchg
ficomps
inc
fwait
aad
movl
cmp
jg
xchg
jb
pop
aaa
nop
or
movsb
sbbl
gs
shll
sub
add
sub
push
sti
movsb
outsl
xchg
movsl
iret
imulb
test
jae
imul
fdivrl
pusha
xchg
push
into
icebp
mov
adcl
mov
outsb
mov
fwait
xor
shlb
pop
and
cld
jbe
mov
int
add
movsb
xlat
in
fldt
xor
hlt
leave
pop
stac
dec
js
ja
pop
movsb
sbb
ja
inc
dec
fwait
push
in
jnp
pop
es
add
gs
mov
inc
push
sbb
imul
psllw
pusha
pushf
adc
in
mov
mov
in
subl
xchg
add
jnp
inc
cmp
cmc
call
icebp
mov
test
or
add
mov
or
mov
insb
and
sbb
cli
insb
cmp
loope
xchg
leave
xor
adc
mov
adc
xchg
mov
mov
in
xor
data16
roll
mov
fisubrl
sbb
loope
pusha
and
xchg
int
xchg
icebp
push
dec
or
dec
rcrl
jns
inc
and
xchg
ss
pop
outsb
cltd
fwait
xor
repnz
mov
jbe
inc
ficoms
pushf
lahf
testl
sbb
std
rcrl
hlt
pop
push
aas
cmp
pop
cs
mov
xchg
sub
pop
pop
pop
or
jg
rcl
mov
popf
stos
lods
addr16
xor
mov
shrl
pop
orb
xor
fs
lcall
fs
lret
pusha
push
stc
idivl
out
push
push
jnp
in
inc
jle
outsl
nop
adc
out
xchg
inc
pop
xor
mov
cs
jns
sbb
imul
lods
icebp
push
xor
ret
cmp
repnz
sub
fmuls
xor
or
pop
sub
push
sti
daa
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
adc
adc
jle
loope
sbb
or
test
jne
int3
imul
out
subl
xchg
js
push
cmp
in
lods
cli
pop
push
dec
pop
push
gs
jno
dec
aad
mov
xor
mov
rcrb
out
sbbl
lea
outsl
loope
or
es
add
fmul
lods
loope
leave
xchg
adc
movsl
dec
sub
xchg
adc
or
xlat
nop
lods
xor
nop
repnz
and
or
out
xchg
push
aad
add
xchg
popa
sbb
push
sub
daa
adc
push
pop
daa
or
aad
xchg
incl
mov
pop
mov
popf
cmp
cmpsb
mov
xchg
push
adc
test
jb
jae
jle
je
jbe
sub
mov
mov
add
and
jne
test
mov
out
hlt
mov
or
data16
iret
add
mov
filds
cmp
push
shlb
cmp
pop
std
push
pop
cmpsl
and
or
cmp
sub
pusha
dec
aam
and
cwtl
cmp
xor
lock
cs
dec
push
stos
mov
enter
cmp
hlt
push
gs
js
jo
test
push
lods
inc
add
sbb
add
addb
pop
lock
xor
mov
outsb
adc
adc
adc
leave
inc
adc
lock
mov
xchg
adc
push
lds
lds
das
call
insl
popf
scas
sbb
leave
mov
adc
push
mov
test
inc
mov
dec
sbb
xchg
std
xor
jno
jo
test
clc
jmp
jbe
lcall
sbb
mov
cs
dec
enter
or
insb
pop
mov
jmp
rcrl
sub
mov
sbb
callw
fsub
pop
inc
or
push
cmp
aam
cltd
adc
shlb
add
jl
push
cmp
jle
scas
daa
inc
mov
stos
into
mov
lock
lret
adc
cmp
mov
adc
aas
cmp
xchg
add
ljmp
mov
das
fwait
cmpsb
aas
dec
adc
inc
adc
cli
mov
movsl
repnz
pop
les
dec
jp
add
pop
addl
cmp
cld
adc
icebp
fldl
adc
or
aas
xchg
scas
ljmp
add
sub
pop
add
pop
mov
sbb
or
popl
sbb
ljmp
and
cmp
jp
sub
rcrb
pop
ret
sbb
or
add
out
xor
mov
loop
into
xor
xchg
jnp
es
cmpb
jge
jle
repnz
jnp
fiadds
cmpsl
iret
pop
dec
je
jo
imul
outsb
out
cmpb
pop
enter
push
lret
enter
jo
aaa
daa
and
loop
adcl
pop
mov
or
add
mov
into
sub
pop
dec
mov
adc
lret
movsl
fimull
repz
out
shl
jae
mov
jno
mov
loopne
sub
mov
out
cmp
cli
sbb
cmp
scas
xor
clc
adc
mov
mov
push
call
mov
outsb
fisubs
das
xor
nop
mov
fisubrs
in
addr16
fmuls
out
push
xchg
lcall
in
das
ds
add
bound
or
fcoml
out
dec
div
mov
or
lds
mov
push
fisubrs
leave
mov
inc
bound
popa
fiaddl
mov
mov
and
push
and
inc
adc
xor
mov
outsb
cmpsl
mov
int3
rcr
fdivr
fistpll
sub
loop
repz
and
xchg
dec
cmpsb
movsb
cli
fnstcw
mov
jno
mov
inc
jp
jbe
ret
push
mov
mov
mov
dec
lock
fdiv
daa
lea
fadds
mov
aad
stos
push
repz
xchg
leave
cmp
repz
cwtl
cmp
adc
mov
xor
dec
pop
or
jge
outsl
pop
scas
fnsave
loope
clc
cwtl
xor
jns
test
popf
fs
fists
mov
sbb
and
push
dec
push
xchg
mov
inc
imul
sbb
lret
sub
leave
sbb
sub
jg
dec
rcl
sub
pop
fisubrl
ds
lods
pushl
in
popf
aad
sub
loopne
inc
cmp
xor
sarb
mov
ss
mov
js
shl
add
pop
mov
pop
mov
mov
push
fldenv
je
dec
arpl
decb
fcmovnu
sbb
lret
sub
jmp
pop
jmp
jle
xchg
arpl
ljmp
insl
inc
push
ja
sahf
dec
aad
movaps
out
mov
aaa
stos
mov
add
cs
mov
pushf
mull
xchg
or
addr16
xchg
xchg
test
push
not
add
jle
sbb
inc
sti
push
xor
lea
stos
out
pop
mov
or
sbb
mov
pop
ja
out
push
in
pop
fbstp
adc
sub
jmp
jno
out
inc
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
lahf
daa
sbb
jle
mulps
xchg
mov
mov
scas
aaa
mov
sbb
sbb
inc
lock
enter
mov
mov
dec
popa
arpl
cli
sub
cmp
adc
sub
sub
out
fsubr
popf
jmp
int
cmp
scas
mov
push
ret
lods
mov
add
insb
es
inc
jmp
fmuls
mov
cmp
or
imul
mov
pop
bound
jae
sub
pop
push
xchg
mov
sahf
test
or
fildll
mov
mov
mov
jp
push
hlt
fildll
sbb
sbb
and
push
adc
adc
xchg
or
rcl
loopne
push
dec
or
js
les
adc
popfw
out
pop
push
std
ljmp
lods
inc
add
gs
pop
leave
cmp
movsb
rol
hlt
inc
push
cmp
sub
fistpll
pop
stc
daa
mov
dec
fcompl
mov
mov
add
rcll
cmpb
add
push
stos
lret
and
mov
jp
or
push
xor
movsl
xchg
movsb
pop
add
adc
adc
jl
mov
pop
jg
push
call
aas
gs
push
icebp
pop
adc
jmp
dec
shll
aaa
dec
jg
mov
cs
fdivs
xor
and
movsb
pop
mov
sbb
and
arpl
inc
dec
pop
cmp
mov
push
jle
fildll
xor
adc
repz
cmc
cmp
popa
stc
sub
outsb
ss
xorl
push
repnz
push
xchg
rclb
test
mov
test
sub
jge
and
daa
adc
adc
pop
sarb
lahf
or
lret
out
mov
push
stos
mov
xchg
mov
stos
insb
scas
outsl
pop
lret
scas
lret
cmp
stos
mov
sbb
lods
push
out
xchg
or
sbbl
pop
aad
xchg
es
xchg
pop
sbb
inc
bound
pushl
aad
out
inc
mov
lods
mov
scas
jne
mov
mov
cwtl
js
sbb
daa
mov
sub
xchg
mov
cld
xor
shl
xor
jle
imul
fcoml
aam
outsl
add
test
jg
popf
push
dec
jmp
and
in
xchg
aad
ret
pop
insl
jns
stos
mov
mov
stos
mov
sub
xchg
lods
dec
adc
les
fs
cwtl
fildl
jl
lahf
stos
das
cmp
cli
iret
add
pushf
xchg
jmp
das
adc
mov
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
mov
mov
jge
jle
mov
shl
cmc
sbb
adc
aaa
das
in
cmp
js
int3
call
sbb
pop
fwait
popf
iret
xor
stos
lods
adc
push
mov
shl
mov
lret
and
push
into
loop
ret
les
xor
jb
jno
rcl
cmpsl
xor
push
sub
sbb
idiv
cmp
xchg
cltd
and
loop
cwtl
mov
and
cld
sbb
mov
pushl
hlt
shlb
test
mov
jno
push
mov
xchg
dec
adc
es
scas
mov
xor
rcll
mov
pop
sbb
xor
xchg
cmp
inc
stos
jb
mov
cltd
push
mov
sub
pusha
icebp
or
push
call
mov
add
into
stos
es
aam
jp
fisubrl
dec
jne
sbb
stos
jae
flds
cmp
or
mul
dec
inc
push
push
gs
add
or
push
sbb
arpl
xor
psrlw
sbb
pop
jmp
mov
mov
cmp
or
gs
cmpsb
mov
mov
inc
shr
and
push
push
inc
sarb
icebp
xchg
movsb
and
jb
sbb
adc
pop
mov
mov
pop
sbb
push
mov
dec
or
mov
scas
fdivrs
in
repnz
aam
sbb
or
and
fnstsw
cmp
call
pop
lock
and
int3
inc
inc
sub
imul
mov
ret
mov
jno
or
sbbb
pop
pop
mov
sub
jl
movsb
mov
pusha
mov
xchg
mov
into
into
cmpsb
push
outsb
sub
dec
mov
sub
mov
push
jnp
dec
xor
ret
inc
cmpsl
lds
adc
mov
lahf
es
cwtl
cmp
push
or
jmp
test
pop
cmovae
ss
js
sbb
dec
scas
jae
daa
nop
rcrb
movb
nop
mov
and
bound
call
and
push
mov
shrb
mov
aaa
pop
push
adc
mov
adcl
int
sbb
sbb
notl
aaa
addr16
inc
icebp
in
lahf
outsb
mov
pop
pop
xor
pop
icebp
pop
xor
or
fiadds
lcall
in
inc
fildll
inc
out
sub
push
cmp
popa
or
inc
inc
pushf
cltd
jecxz
mov
clc
inc
or
test
nop
loopne
jbe
cld
dec
stc
fildl
push
pop
xchg
loope
bound
insl
ficoms
cmp
mov
movsb
popf
dec
dec
jns
repnz
sbb
imul
sar
jne
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
xchg
leave
aam
test
inc
ret
push
sti
fbstp
sub
and
mov
shl
lret
pop
loop
mov
movsb
adc
cmp
add
in
pushf
icebp
lods
cltd
sub
rcll
xor
or
adc
and
cs
xchg
mov
sbb
ret
pop
ja
dec
add
mov
in
test
or
sub
or
fldcw
add
sub
mov
sarb
les
test
jl
and
add
sub
dec
sahf
dec
mov
ja
shlb
mov
out
and
sub
das
dec
sahf
add
ss
repnz
insb
mov
in
into
push
enter
xchg
sbb
test
sbb
adc
out
xchg
sbb
and
das
aad
in
imul
ds
push
scas
adc
inc
mov
or
mov
shlb
inc
mov
mov
jae
sbb
loope
inc
stos
adc
sbb
jl
cmp
mov
bnd
ret
jle
push
scas
sarl
pop
out
xor
mov
push
add
aas
or
cmp
dec
jns
mov
sbb
enter
test
xor
cmp
cmpsl
mov
add
int
test
jge
and
mov
and
repnz
cmpsb
cmp
push
jle
out
mov
jge
add
mov
or
les
repz
dec
out
jecxz
mov
adc
and
jl
or
lret
mov
lret
fisubl
jb
mov
pop
xchg
bnd
jbe
movsb
pop
outsb
in
inc
pop
dec
test
test
jns
sub
je
les
enter
pop
push
filds
jbe
jbe
ret
rcr
adcb
xchg
stos
pop
int3
sbb
test
es
inc
enter
pop
adc
xchg
xor
clc
enter
shlb
js
loop
insl
das
test
imul
enter
imul
add
adc
notb
cmc
in
push
push
adc
xlat
add
lret
in
inc
add
add
dec
push
pop
inc
push
dec
mov
test
mov
inc
or
sub
arpl
add
popf
lods
push
andl
shl
movsw
jbe
popf
inc
lods
loope
adc
clc
rol
cmp
bound
jae
xchg
push
out
paddusw
and
jae
adc
jns
mov
mov
and
add
lods
inc
xchg
loope
pop
shr
icebp
arpl
pusha
jne
mov
inc
or
inc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
sub
jbe
xchg
jle
jge
jle
xchg
xor
cmc
sub
mov
in
cmp
mov
mov
filds
outsb
mov
cltd
outsl
mov
cs
cmp
mov
xchg
movsl
mov
mov
out
lret
jp
cmp
outsb
mov
in
arpl
mov
mov
scas
jmp
sbb
les
shlb
das
rorb
xor
inc
iret
jnp
pop
mov
add
mov
push
aad
roll
push
push
pop
cmpsb
cmp
mov
pop
push
sub
cmp
lds
adc
sub
test
in
adc
inc
icebp
nop
inc
hlt
dec
dec
test
stos
cmpsb
push
push
xor
test
loop
lcall
add
and
int
std
mov
scas
cld
or
cs
jmp
out
pop
cmp
cmp
decl
sub
fidivrl
lcall
stc
cmpsb
dec
sub
jns
sbb
dec
mov
jbe
int
xchg
outsl
mov
and
jb
push
js
notb
cld
rclb
aas
mov
outsb
popa
pop
mov
push
add
push
test
and
adc
sbb
lret
dec
mov
das
out
cwtl
incb
imul
mov
mov
iret
add
dec
and
repnz
xor
jno
push
and
add
std
mov
movsl
lods
cmp
les
xorl
jne
int3
cli
repnz
sbb
cmpsl
adc
inc
mov
push
addl
outsl
cwtl
inc
cmp
sbb
cld
popa
nop
div
adc
mov
mov
add
imul
lcall
lock
sub
dec
fimuls
dec
lds
xor
repnz
test
stos
mov
xchg
mov
iret
sub
or
adcl
jmp
sbb
cltd
inc
lock
popa
out
mov
dec
insl
fdivrl
stos
orb
inc
sub
inc
sbb
iret
mov
mov
ret
jl
sbb
pop
push
fisubrs
je
cmp
scas
leave
mov
pop
cmp
gs
das
inc
mov
dec
and
popf
jne
inc
test
push
pop
mov
mov
inc
loop
repz
imul
jb
jnp
add
adc
mov
rorb
push
scas
jo
ret
bound
jne
test
popa
xorb
cld
les
gs
dec
cmp
movsl
jae
push
das
sbb
out
les
incb
or
sbb
arpl
mov
adc
arpl
leave
inc
test
fs
aad
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
gs
pcmpgtb
jle
pop
sar
mov
push
sahf
int
adc
and
xchg
fdivp
adc
xchg
out
in
ret
imul
xor
shrl
adc
scas
jb
movsl
arpl
mov
pop
mov
xor
sarl
inc
insb
rorb
sub
push
fisubrs
cmpsl
cld
shl
xchg
sbb
cltd
mov
xor
cmc
dec
add
test
and
mov
mov
call
mov
aam
enter
mov
test
test
xor
xchg
push
mov
dec
or
mov
jb
pop
lods
lods
or
mov
push
mov
or
mulb
or
lock
std
movsb
sub
loop
pcmpgtb
in
inc
test
stc
or
stos
inc
dec
ds
repz
cmc
jle
mov
stc
std
lods
stc
divl
stos
push
add
cmp
inc
inc
push
cmp
jmp
adc
mov
std
jo
fsubrl
jno
xor
mov
stos
and
inc
jns
cmpsl
jne
pop
pusha
or
cwtl
clc
aaa
lcall
push
call
mov
jmp
cmp
stos
rorl
or
shlb
pop
cmp
jge
fisubrs
call
incl
ret
and
add
int3
nop
ds
outsl
rcrb
mov
push
dec
xor
imul
std
stos
cwtl
adc
adc
in
fisubrl
dec
jle
jae
push
dec
imul
out
mov
dec
sub
scas
out
leave
iret
mov
mov
test
push
cmpsl
cld
adc
addr16
lock
jae
insb
adc
and
xor
in
test
jbe
mov
add
sbb
push
movsl
xchg
js
cmp
lock
lds
addl
in
movsb
xchg
gs
dec
pop
adc
xchg
mov
ljmp
jg
jmp
push
pop
into
xor
jl
push
loopne
rcll
mov
ficoml
mov
dec
mov
cwtl
mov
gs
mov
test
imul
imul
aad
repz
insl
cs
push
lcall
fistl
testl
adc
cmp
mov
xor
fistl
lods
loope
fsubr
adc
repz
dec
or
mov
jge
dec
pop
or
or
ret
fucomi
cmp
mov
push
mov
push
jmp
add
cmp
mov
pop
and
xchg
xor
cmp
mov
mov
mov
and
pop
push
rorb
enter
call
sahf
ficomps
xchg
ds
sbb
nop
clc
stos
pusha
dec
nop
mov
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
sub
sub
jle
enter
mov
adc
dec
ja
pop
ljmp
cld
adc
fwait
pop
lea
jb
and
in
loop
xor
mov
add
xlat
bound
adc
mov
popa
les
loop
divl
and
fstp
push
adc
sub
jmp
and
dec
fwait
jns
jp
add
dec
stc
mov
dec
jmp
scas
fnsave
mov
nop
bound
jne
pushf
movsl
push
inc
fldl
mov
xor
arpl
jae
fiaddl
insb
add
sbb
cmp
cmp
cltd
sbb
lret
cmp
or
cwtl
dec
cltd
cmp
sub
arpl
call
faddp
add
adc
add
and
cmc
push
into
inc
stc
inc
adc
add
add
xor
adc
cmp
stos
pop
xchg
xor
push
pop
xor
hlt
cltd
ror
xor
cmp
imulb
push
bswap
in
clc
push
test
xchg
rcr
jge
jnp
ficomps
mov
and
loopne
mov
lock
sti
aad
insb
testb
testb
push
sbb
xor
and
test
jne
sbbb
lahf
es
repz
xchg
push
in
in
mov
lahf
add
sbb
push
cli
adc
sti
stc
sbb
adc
sbb
andb
mov
pop
cmp
or
jg
sbb
xadd
rclb
mov
sbb
push
shrb
cld
push
cld
rcr
popl
dec
in
mov
add
aam
in
addr16
scas
pop
add
mov
sub
adc
jg
mov
mov
dec
sub
sbbl
scas
insb
cwtl
adcl
outsl
xchg
not
outsl
and
xchg
pusha
pusha
popf
mov
xchg
out
fstl
mov
jecxz
js
add
cmpsl
shr
jo
or
push
add
scas
cmc
or
pop
dec
add
outsl
push
mov
xchg
into
pop
push
aas
mov
flds
mov
cmp
xor
lahf
or
or
outsl
das
or
xchg
xor
int3
fwait
loopne
dec
dec
aas
scas
stc
dec
push
sbb
loop
inc
mov
push
pushf
mov
fs
xor
jne
lret
ficoml
inc
dec
mov
stos
jnp
pop
out
xchg
mov
inc
scas
add
xchg
into
aad
push
daa
adc
push
xlat
sub
or
sti
pop
dec
scas
or
inc
xchg
cmp
jl
pop
jnp
inc
fwait
mov
dec
ds
test
in
inc
loope
sbb
movl
xor
add
cltd
lods
xor
lea
jmp
das
subb
mov
xor
arpl
loop
ss
jle
jge
jle
ss
xchg
add
xor
fiaddl
jbe
std
push
or
adc
ds
mov
fadds
adc
pop
out
push
dec
icebp
and
add
push
shlb
mov
xchg
sti
add
lret
xor
add
and
in
push
or
sbb
dec
pop
sbb
aaa
jae
andl
pop
mov
pop
jmp
pop
sbb
daa
and
jnp
mov
jmp
pop
out
lretw
jge
lret
fsubl
pop
and
popf
xchg
fmuls
jns
mov
and
sbb
lahf
dec
test
fcompl
mov
cmp
xchg
lods
push
notb
add
push
pop
addb
and
dec
mov
mov
inc
sub
jmp
push
inc
mov
sti
mov
repnz
jae
jmp
mov
sbb
fs
fsqrt
xchg
adc
ja
in
push
or
xchg
test
xchg
in
stc
mov
sbb
lret
rcll
addl
pop
jmp
out
subl
mov
xor
xor
fisttpl
or
inc
fmulp
ja
popa
sbb
les
clc
pop
xor
inc
mov
push
xchg
push
jae
sbb
aad
or
hlt
cltd
add
std
lret
and
and
fnstsw
pop
pop
and
sbb
cmp
lds
shrb
lea
add
cmp
repz
or
addl
add
jmp
jmp
mov
call
jle
or
negl
call
mov
cwtl
dec
imul
fucomip
push
or
mov
testb
sub
jg
adc
out
mov
out
or
test
cmp
ret
fwait
mov
mov
xabort
lret
inc
jae
mov
outsl
sub
fcoml
ss
or
adc
and
sub
dec
xor
fiaddl
fmull
lods
pop
loopne
scas
xor
xchg
lea
inc
mov
hlt
jbe
pop
pop
sub
xor
sub
xchg
fadds
fbstp
lds
inc
int
sarl
aad
mov
xchg
sbb
and
and
lret
cmp
mov
push
xor
pop
jno
cmp
cmc
iret
jmp
pushf
into
imul
jle
shlb
push
and
pop
aas
cmp
and
mov
sub
pop
popa
dec
insl
or
jae
std
add
imul
or
add
add
cmp
adc
aad
fcoms
or
lcall
outsb
nop
stc
cs
test
push
or
lods
and
cmp
and
push
cmpl
jo
mov
or
mov
mov
fstp
or
jg
repz
fstps
out
jp
mov
outsb
mov
rorl
push
into
xchg
addr16
cld
mov
mov
imul
jae
std
addl
popa
ds
sarl
dec
lcall
xchg
xor
jb,pn
jns
sbb
push
movsb
lds
pop
pop
jae
sbb
adc
bnd
mov
in
into
push
push
jne
sti
xchg
clc
jo
mov
repnz
mov
btc
sub
ljmp
sbb
and
dec
popf
enter
mov
xor
add
sub
aam
sarb
mov
cmc
sbb
aaa
imul
outsl
jo
imul
inc
lea
sbb
xchg
loop
imul
scas
das
idivb
icebp
pop
mov
ds
icebp
jo
push
clc
inc
mov
jmp
and
fsubl
pop
xchg
mov
sti
hlt
adc
cs
popa
insl
xchg
pop
call
mov
shll
cmpsl
sbb
dec
ficoms
idivb
shlb
lahf
mov
jo,pt
sti
sub
xor
jnp
push
lods
cli
or
jecxz
cmp
xor
cli
mov
xor
stc
jp
sar
sbb
movl
dec
jecxz
pusha
pop
mov
inc
inc
sahf
xor
imul
daa
cmp
push
pop
fwait
mov
call
out
jo
jecxz
roll
mov
jbe
aam
call
ja
lahf
mov
mov
jl
cwtl
push
and
xor
mov
rolb
push
mov
xchg
or
mov
mov
mov
adc
jbe
icebp
inc
int3
cmp
fcoms
jmp
pop
jl
sarb
addr16
je
aaa
or
push
fildll
in
mov
sbb
in
pop
leave
mov
lods
sbb
cld
xorps
dec
mov
ja
jno
cmpsb
leave
loopne
lea
scas
lds
test
rcrb
add
sub
adc
mov
in
add
adc
call
scas
inc
icebp
in
dec
stos
jmp
popl
or
loop
rcll
in
cmc
fisubs
add
movsb
pop
les
in
rclb
insb
lahf
sbb
mov
jno
mov
icebp
loope
lret
stc
pop
adc
mov
mov
inc
fildl
push
outsl
adc
test
dec
into
in
xor
lea
pop
mov
std
push
rcr
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
pmullw
mov
cltd
jle
jge
jle
imul
and
lret
nop
cltd
sahf
lods
mov
hlt
out
je
cli
dec
sbb
lea
jp
sbb
ret
stos
sbb
xchg
push
mov
adc
push
push
cmp
aas
mov
mov
outsl
or
mov
pop
outsl
stos
mov
add
nop
inc
and
mov
leave
sub
jge
xlat
cmpsb
jno
ret
sbb
subb
repz
cmp
fcoms
subl
push
aaa
gs
mov
mov
rol
dec
xor
insl
dec
or
bound
pop
sub
lea
out
push
pop
and
je
rcrl
xor
sahf
cmp
pop
fimuls
lret
loope
inc
lods
lret
cmc
sub
pop
jge
cwtl
test
jp
xor
clflush
inc
imul
jmp
out
fwait
into
dec
out
add
jae
or
mov
arpl
out
dec
pop
sub
mov
pusha
inc
idivl
or
hlt
test
repnz
jb
arpl
js
cmp
hlt
jg
daa
dec
cwtl
sbb
icebp
mov
pusha
mov
inc
mov
pop
call
and
movsl
xchg
sarl
push
xor
and
adcb
in
dec
mov
or
into
dec
xlat
loop
popf
sti
fwait
adc
stos
xor
test
sbb
int
mov
cmpsl
xchg
loope
xchg
jmp
mov
shrb
jnp
mov
repz
in
jnp
out
les
js
add
push
dec
xlat
jg
out
repz
and
lods
jbe
jecxz
sub
xchg
in
xor
cmpsb
clc
fndisi(8087
sti
lcall
cmpsl
fsub
or
mov
push
lahf
testl
jmp
add
pop
pop
pop
mov
adc
xchg
dec
sub
stos
and
mov
push
leave
test
aam
push
outsl
fimull
addl
popf
stc
inc
cs
cmp
ja
cmpsb
inc
jb
push
push
mov
mov
or
sahf
and
mov
jo
imul
inc
hlt
mov
mov
jo
cmpsb
or
adc
xchg
cmp
popa
inc
test
jae
icebp
ja
push
mov
dec
mov
dec
and
dec
pop
es
sbb
xor
dec
insb
mov
loope
outsb
ja
sub
sahf
fisubrl
lock
inc
ret
imul
pusha
stos
inc
outsb
sub
sub
movsl
scas
xchg
inc
lahf
dec
lret
jg
add
in
in
sub
jecxz
xchg
dec
push
mov
test
mov
clc
call
add
fdivp
jno
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
ljmp
loopne
push
aas
movsb
jle
push
jg
jle
in
enter
cli
sbb
testb
icebp
popf
je
add
addl
and
xor
loopne
add
out
and
adc
aad
negb
dec
jae
test
cmpsb
inc
xor
add
inc
addb
shl
repnz
cmp
jg
xor
jge
and
or
pop
mov
adc
daa
adc
mov
add
filds
xchg
adc
or
or
push
int3
scas
jg
cmp
dec
pushf
mov
pop
and
or
cmp
jmp
pop
aad
addb
and
dec
outsb
xchg
ljmp
imul
arpl
stos
icebp
pop
mov
xrelease
or
lcall
mov
xchg
imull
pusha
aam
sub
mov
mov
mov
loopne
mull
mov
xchg
lock
sbb
inc
jmp
or
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
lds
iret
movsl
jle
push
jg
jle
or
mov
lds
je
mov
hlt
pusha
push
cmp
or
and
seto
imul
stos
call
and
inc
aas
xor
int
mov
sub
repz
cli
aam
jo
xor
sub
inc
aam
stos
aaa
inc
jg
push
inc
xabort
mov
in
mov
outsl
push
mov
jns
fdecstp
int
leave
xchg
outsl
lods
mov
fidivrl
inc
sub
and
push
loope
adc
xchg
call
sub
loope
cmp
daa
add
cmp
xchg
jno
xchg
aaa
push
pop
icebp
jmp
mov
xor
mov
mov
inc
fwait
sub
ja
lods
cmp
jnp
adc
sbb
pop
or
add
cmp
push
push
shrb
addr16
jne
pop
add
and
mov
int
int3
jne
mov
lret
mov
jns
insl
dec
xchg
sbb
adc
movl
test
add
mov
xor
add
jmp
xor
xor
mov
cmp
fbld
jle
sbb
push
jg
xchg
dec
shr
jo
or
mov
test
rcr
insl
in
outsb
movsb
lret
ret
and
add
mov
sbb
clc
push
xchg
xor
gs
mov
out
mov
push
sub
sbb
sbb
cmp
roll
add
addl
dec
sti
xor
loope
mov
scas
jnp
int3
and
jle
pop
stos
and
cmc
adc
in
pop
xor
mov
xor
add
inc
ja
inc
cmp
xlat
andb
iret
jge
add
push
in
push
test
jge
sbb
movsl
mov
ja
cli
jb
pop
std
xorl
cmp
add
pop
cmpsb
sub
cmp
or
xchg
popa
cmp
stos
jb
adc
out
iret
jbe
xor
test
pop
and
jo
sub
aaa
shlb
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
mov
jle
push
jl
jle
adc
in
mov
movsl
or
addr16
push
jae
mov
dec
inc
push
mov
xor
xchg
xchg
aas
mov
data16
jae
test
pop
push
scas
aaa
cmp
mov
mov
xchg
ja
jecxz
mov
sub
pop
fs
adc
mov
xchg
mov
cmc
xor
pusha
cmpsl
pop
inc
das
out
dec
cltd
mov
cmp
ss
pop
jmp
adc
dec
ljmp
test
js
mov
lea
imul
jnp
sbb
jg
cmc
jns
push
mov
jp
mov
daa
pop
add
pusha
xor
cmc
pop
outsl
mov
push
dec
inc
mov
push
push
test
push
mov
xchg
dec
push
aaa
or
rclb
test
jnp
call
mov
out
movsb
inc
sub
dec
fbld
add
scas
loop
ficompl
cmp
jo
sbb
daa
mov
ret
add
addl
outsb
jl
push
mov
lods
sbb
sti
jl
jle
jo
pop
outsb
arpl
arpl
xor
pop
movsl
push
push
cmc
jae
pushf
loop
out
xchg
inc
dec
or
and
cmp
int3
push
cmpsb
cltd
nop
inc
test
rol
daa
mov
pop
test
cmpl
pop
jl
xchg
gs
sarb
pop
fiadds
xchg
stc
dec
pop
pushf
sbb
xor
mov
lock
bound
mul
jg
push
into
and
and
or
out
mov
pop
ljmp
out
aas
push
ja
clc
jns
repnz
fnstcw
test
out
or
dec
in
dec
loopne
cltd
inc
and
xchg
popf
mov
or
std
sbb
dec
ja
cmp
in
ds
jne
adc
shll
dec
add
dec
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
push
jecxz
shrb
notl
sbb
filds
movsl
adc
xor
dec
dec
fisubs
sahf
shrb
jo
lret
or
daa
loop,pn
popf
push
inc
xor
movsl
cmp
mov
shll
dec
rcr
and
and
mov
stc
inc
test
cmp
inc
jl
pop
daa
popf
inc
shl
cwtl
add
ret
lds
popa
mov
sub
xor
ret
dec
das
cmp
and
movsl
sub
std
pop
lea
jmp
push
inc
add
int3
sbb
call
pop
data16
push
inc
mov
fwait
or
push
mov
xor
test
push
push
stc
loopne
xchg
inc
mov
mov
in
sub
add
inc
out
or
outsb
push
adc
lahf
das
jle
sbb
addb
mov
mov
sahf
sub
fucomi
inc
insl
push
mov
xor
xchg
xchg
xchg
cmp
dec
outsb
decl
test
dec
cmp
dec
pop
dec
int
push
sub
or
add
sbb
int3
gs
popa
dec
inc
add
pop
insb
mov
inc
or
sbb
mov
cmp
jb
mov
setns
es
in
mov
jecxz
sbb
pop
stos
aam
repz
xor
out
cwtl
mov
sti
popf
lods
push
push
xorl
in
pop
adc
lea
addb
xchg
xor
icebp
sbb
sub
sub
sub
xor
pop
call
sbb
dec
mov
enter
mov
sbb
sub
loope
or
test
xchg
dec
int
nop
loop
cltd
pop
sarl
push
add
mov
cmc
ret
lock
cmpsb
aad
mov
iret
popf
aas
jle
inc
stc
pop
sub
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
leave
jp
aas
mov
fidivl
sbb
popa
pop
gs
lcall
ja
stos
jo
add
mov
sub
faddl
insb
lahf
imul
leave
test
aam
and
and
jle
cmp
push
les
jno
es
jmp
shl
and
dec
xchg
sub
xchg
scas
out
into
sbb
pushf
adc
enter
rcrb
mov
iret
dec
mov
rcr
and
xchg
pop
mov
lock
mov
and
mov
push
imul
xchg
repz
pop
push
pop
add
or
imul
andl
and
mov
es
lahf
pop
clc
aaa
add
rcrb
loopne
loop
mov
ljmp
dec
not
adcb
xchg
mov
adc
sub
jmp
or
or
pop
std
sbb
lea
pusha
push
mov
loope
pop
add
dec
rclb
xor
mov
cmc
dec
data16
mov
xlat
adc
push
rorl
add
shl
jne
cmp
dec
sub
add
jle
adc
jno
adc
jae
stc
divl
mov
jecxz
inc
out
adc
pop
pop
sub
inc
push
loop
dec
mov
test
int
imul
mov
mov
js
inc
xchg
jle
jnp
jp
xorb
cli
ljmp
sub
dec
mov
bound
jne
inc
inc
mov
pop
jno
inc
adc
in
xchg
mov
sahf
not
mov
cmpsb
pop
das
ffreep
jp
xchg
mov
push
add
out
mov
into
xchg
std
ljmp
dec
lds
xchg
jle
push
adc
jg
fs
push
cwtl
add
scas
test
fmull
movsl
jo
sub
movsl
pop
cld
or
divl
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
daa
out
xchg
sub
outsb
lea
leave
roll
int3
cmpsl
jge
fwait
push
mov
cmp
mov
fdiv
dec
divl
xchg
xor
mov
and
testb
ret
add
out
cmp
rcrb
xlat
scas
cli
imul
inc
ljmp
clc
cmp
es
mov
pop
mov
jbe
test
inc
push
cmp
nop
aam
ja
mov
mov
cwtl
arpl
int
push
xlat
jmp
or
mov
or
sti
xchg
mov
sbb
dec
push
cld
or
jno
add
or
xchg
notb
outsl
adcl
sbb
dec
pop
imul
fidivrs
dec
sub
arpl
fisttpll
xchg
dec
adc
out
cld
pop
ret
sub
lcall
icebp
xchg
cmc
neg
gs
mov
lret
dec
jg
cmp
add
ljmp
sbb
std
ret
incb
mov
sub
cmp
mov
lods
push
out
fwait
jp
insb
cmp
mov
jns
push
movsl
and
inc
jp
dec
push
inc
sub
ljmp
sub
pop
pop
lret
xchg
aaa
scas
lret
lods
inc
dec
pop
ss
lahf
add
sar
mov
inc
fsubrs
out
pop
mov
lods
mov
push
ljmp
xchg
pusha
jo
jae
push
pop
fnstenv
cmp
mov
dec
sbb
lods
je
mov
data16
rcr
subb
xor
push
out
lods
and
movb
mov
add
cmp
mov
shl
cwtl
mov
inc
out
std
lea
pop
and
mov
stos
jle
lods
cmpsl
cmp
sub
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
mov
and
lods
jl
jle
xchg
scas
jecxz
push
in
push
out
sub
popf
mov
mov
dec
sub
jl
cmp
jge
cld
push
aad
rcll
mov
and
mov
mov
mov
icebp
movsb
ss
push
mov
and
lea
data16
xor
xchg
cmp
into
mov
push
dec
jle
pop
fistps
sub
xchg
sarb
imul
mov
inc
sbb
out
mov
repz
in
inc
lcall
pop
jecxz
dec
das
cltd
cmovs
fwait
push
movsl
add
aaa
xor
adc
loope
sbb
jg
sub
dec
or
mov
mov
or
in
add
inc
rorb
stc
adc
fucom
rcll
add
cmp
cmp
inc
fsubs
mov
cmc
in
daa
rolb
andb
cmp
icebp
lcall
lret
mov
sub
adc
std
mov
push
adc
cmp
and
mov
leave
lea
rdtsc
jnp
or
push
aaa
daa
sub
insl
imul
mov
push
adc
leave
xor
je
sbb
pop
cmpsl
movsb
lret
mov
mov
imul
sbb
sarb
sbb
stc
testl
ret
inc
cmp
ss
jno
jbe
jae
cmp
jb
ss
imul
ret
out
and
cs
push
cmp
lods
mov
daa
popf
cli
sub
xchg
pop
mov
xor
cld
icebp
fsubrl
js
and
je
xchg
lret
popf
and
arpl
and
rcll
cmp
dec
in
adcb
das
aad
out
mov
inc
ja
add
jo
mov
repz
xchg
dec
fnsave
mov
pop
lock
insl
sub
popa
fldl
mov
add
push
and
jae
xlat
inc
jg
je
push
mov
outsb
aaa
stos
ret
or
xchg
push
inc
mov
or
mov
ret
dec
pop
test
lods
imul
loope
cli
out
push
push
ds
xlat
cmp
int
fcomp
add
cs
ret
cli
or
push
pushf
stos
xchg
ja
or
cmp
popa
cmp
jp
je
mov
jbe
fdivp
stc
repnz
push
adc
lcall
adc
inc
cld
xor
daa
cmp
jb
add
mov
addl
jmp
insb
xchg
xchg
in
or
mov
mov
jle
jl
jle
inc
mov
dec
out
mov
aam
mov
std
out
sub
outsb
clc
lahf
mov
shlb
das
xor
out
call
sahf
xchg
jo
jo
dec
adc
mov
mov
sub
add
sbb
testb
sbb
inc
jge
popa
inc
mov
rcrb
addl
fstps
in
mov
xchg
cmpsb
push
cwtl
ficoms
push
fldcw
adc
pop
fimuls
insb
addl
pop
nop
xchg
stos
fwait
or
enter
pop
inc
ret
adc
lcall
pop
dec
movsl
ss
scas
mov
cmc
jbe
out
jecxz
add
lods
shr
shlb
mov
enter
insl
jecxz
fimull
out
sbb
add
les
je
jbe
adc
jns
lahf
ret
std
sbb
ret
push
stos
shrl
nop
jl
addr16
sbb
jns
or
lea
pop
dec
mov
sub
ss
adc
es
xor
or
ret
mov
dec
das
jle
std
loopne
jge
push
or
mov
int3
jbe
sub
or
fisubrl
push
shl
jmp
enter
test
lahf
into
negl
sbb
pop
xorl
daa
dec
push
mov
ret
mov
gs
das
ret
mov
cmp
cmp
and
add
mov
pop
icebp
mov
popf
mov
jae
lret
sbb
out
add
push
sbb
cwtl
mov
or
mov
add
bswap
clc
or
pop
jl
push
inc
mov
mov
fsubrl
out
pop
call
sub
rclb
jmp
jns
dec
jae
cmp
sbb
rorb
push
out
xchg
mov
out
or
test
es
fadds
dec
push
insb
mov
ja
arpl
mov
sub
lret
xor
xchg
mov
std
cmp
jge
jno
pop
mov
jbe
xor
into
sbb
in
and
push
jge
inc
cmpsb
xchg
js
pop
cmp
xchg
mov
pop
idiv
and
mov
jbe
mov
push
pop
jno
cld
aad
or
gs
fstpt
jb
pop
sbb
cwtl
shl
or
jmp
lock
sub
rcrl
pop
push
nop
lret
lods
aaa
dec
or
pushf
pop
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
fsubs
or
jle
inc
lods
mov
adc
push
mov
or
loop
xor
mov
dec
add
mov
filds
mov
ficoms
sbb
add
jae
xchg
mov
push
mov
lds
arpl
fldl
mov
xchg
sahf
sub
xlat
je
jo
pop
push
hlt
mov
pop
mov
int
leave
cwtl
scas
or
pop
adc
mov
add
pop
or
mov
ret
jno
or
subb
jb
push
shll
iret
add
mov
pop
sub
cld
add
push
jmp
sub
mov
shl
bound
pop
bswap
sbb
pushf
dec
lsl
decl
add
jb
mov
and
inc
scas
cli
mov
cmpsb
mov
inc
sarb
lods
lods
and
stos
inc
pop
fwait
xchg
adc
lahf
ljmp
mov
std
in
jg
or
dec
mov
pop
xchg
mulb
pop
mov
mov
mov
mov
shll
push
xor
push
push
push
lret
js
sub
or
scas
cmpsb
pop
inc
push
aaa
dec
out
fsubrl
lods
mov
sub
fldenv
lret
js
out
add
int3
je
lock
aam
cmp
sub
cwtl
or
fildll
mov
mov
cmp
daa
push
mov
outsb
hlt
jle
rol
movups
js
bound
xchg
ljmp
cmp
mov
arpl
fs
test
rclb
mov
in
mov
fs
jl
out
ret
mov
push
sub
xor
clc
imulb
rcrl
loopne
movsb
pop
mov
fadd
loop
sbb
jg
pop
fsub
ret
rorb
jo
testb
and
and
and
jno
adc
jne
fnstcw
xor
adc
lcall
std
insl
pushf
xor
std
loopne
or
cwtl
enter
ss
lods
rcrb
adc
push
mov
dec
mov
jle
orl
or
sahf
jl
jl
icebp
nop
fcompl
shll
inc
ljmp
dec
pop
leave
sar
aam
imul
inc
imul
jo
insl
inc
pushf
adc
ja
shl
jne
popa
mov
movsl
stos
sahf
pop
in
movsl
sub
lods
aaa
add
lods
and
in
xchg
movsl
cmp
icebp
add
jmp
lock
arpl
sub
scas
ret
rcll
or
jl
jle
or
adc
jae
sbb
test
stc
gs
movhps
jg
cmp
adc
sbb
inc
xor
xchg
std
int3
push
das
mov
ss
xor
clc
testl
sbb
jecxz,pn
shl
jle
cmp
int
insl
leave
aaa
les
push
aad
loop
incl
or
bound
aas
push
test
xchg
and
add
int3
daa
repz
dec
mov
push
jl
mov
testb
mov
imul
jmp
fwait
repnz
aas
lods
popf
test
and
scas
push
enter
xchg
or
lahf
divb
clc
xor
je
pop
fmulp
pop
push
sub
scas
fisubs
pop
or
jbe
dec
mov
and
outsl
fmuls
push
enter
add
push
push
pop
add
fs
cmp
popa
and
xchg
add
enter
sub
imul
adc
dec
roll
ss
shll
dec
pop
xchg
pushf
loop
xchg
ret
mov
and
cmp
mov
mov
insl
or
cmp
mov
add
sarb
lea
jmp
push
mov
mov
nop
incl
movsl
jnp
lret
cmp
shlb
xchg
scas
or
mov
inc
pusha
push
imul
int
push
add
sahf
inc
mov
out
pop
in
cmp
mov
pop
lds
push
sub
pusha
pusha
insb
mov
adc
cld
outsb
out
andb
fwait
cltd
fdivr
ljmp
add
jbe
mov
and
bound
cmp
push
push
in
jbe
jae
int
pop
mov
imul
push
out
and
jno
rorl
cwtl
or
xchg
cmpsl
fstps
xor
flds
sarb
and
arpl
sahf
push
insl
mov
push
fsubl
iret
sarb
sbb
and
jge
cli
movsl
sub
push
and
repnz
test
call
subl
mov
rorb
xchg
loopne
iret
dec
std
jne
lods
lahf
roll
inc
lods
ss
mov
push
mov
std
or
pop
add
dec
cmp
cmp
sahf
stc
aaa
sbb
stc
rcll
sbb
testb
neg
into
adc
ret
inc
outsb
aaa
mov
movsl
push
dec
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
shl
mov
jle
or
mov
mov
sti
ret
push
xor
inc
stos
pop
cmpsl
stos
lods
pop
ret
hlt
xlat
loope
xchg
dec
movsl
cmp
out
lea
jmp
mov
jmp
dec
rcrl
mov
mov
jne
cmp
aad
in
xchg
jnp
xor
pop
mov
fisttps
cmp
and
pop
jae
cs
repz
ds
dec
add
stos
mov
minps
scas
add
or
in
popf
scas
inc
jnp
mov
cmc
insb
inc
mov
dec
out
push
dec
inc
and
mov
mov
xor
pop
add
push
xor
aam
or
xor
dec
shrl
icebp
cli
pop
push
cmp
push
or
jmp
mov
lcall
outsb
inc
js
add
xor
inc
jg
mov
xor
testb
jns
mov
xor
inc
cmp
pop
lret
lcall
xchg
leave
jecxz
push
jecxz
popa
aad
and
lahf
jnp
adc
popf
adc
mov
and
insb
push
push
sub
lds
ret
cwtl
orl
add
jno
cld
es
cmpsl
xchg
call
dec
cmp
and
subl
cmp
insl
sti
dec
adc
test
fisubs
dec
addl
and
dec
jmp
iret
shll
xchg
mov
movsl
call
imul
lret
and
lret
mov
ljmp
add
bound
cmc
xchg
mov
leave
std
rorl
cwtl
dec
jl
mov
movsb
aaa
xlat
icebp
leave
add
sub
cmc
negb
dec
insl
in
jo
pusha
shlb
fnstsw
or
mov
std
mov
outsl
out
jmp
adc
sbb
inc
sarb
sahf
repz
psubusb
rol
pop
mov
lods
push
cltd
xlat
xor
jge
aaa
sub
pop
ficomps
outsb
fildl
sbb
repz
cmp
dec
mov
pop
rcr
loopne
sbb
sti
aad
push
vcvttps2dq
jmp
sub
pop
pop
addr16
lods
clc
jnp
pusha
jecxz
lds
xchg
out
daa
cs
or
test
cmp
xchg
jo
inc
cmpsl
subb
stos
aas
dec
push
fs
dec
mov
cmp
insl
push
stc
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
or
mov
cwtl
push
sbb
fs
mov
or
and
clc
add
jns
test
test
mov
fcmovb
mov
adc
fadds
out
cmpsb
jge
lock
test
inc
sti
and
pop
bound
add
jmp
lret
mov
lock
cmp
fsubrp
mov
mov
xchg
outsb
push
cwtl
mov
pop
jno
cmpsl
dec
jmp
push
test
ficoml
pop
loop
push
pop
jp
lds
sbb
fnstenv
or
add
jb
jne
outsb
imul
or
xlat
pop
sbbb
pop
jno
adc
push
sbb
push
push
fucom
cmp
fcmovu
nop
clc
outsl
add
je
fmul
shrb
jns
jge
lods
jne
aaa
xchg
shl
jl
in
in
in
aam
loope
rorl
jne
scas
cmpsl
jnp
or
or
pushf
push
mov
mov
push
xchg
push
shll
popf
inc
jecxz
push
jns
out
sarb
call
icebp
mov
fwait
adc
cmpl
adc
jno
push
mov
in
fdivrs
xorl
repnz
inc
es
jg
mov
ret
sbb
mov
inc
cmp
aad
pop
jmp
push
sbb
xchg
fimull
push
and
xor
mov
stc
je
ret
rorl
inc
add
push
cmp
cld
shrb
jmp
enter
outsl
lods
ss
add
add
inc
imul
mov
push
test
gs
loope
popf
and
xchg
jo
es
xchg
cmp
push
adc
fbld
sub
and
fdivl
push
adc
push
pop
push
dec
sbb
fisttpll
xchg
test
add
test
add
xchg
push
jge
pop
or
mov
push
int
mov
mov
inc
pop
test
or
aad
pop
inc
es
imul
jno
or
or
mov
es
pop
repnz
aas
mov
push
xchg
sbb
dec
sbb
sub
sub
push
sahf
push
mull
nop
ljmp
inc
push
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
mov
rcll
jl
jle
xor
mov
lcall
cmp
ja
mov
dec
pop
mov
xchg
and
mov
jb
xor
sub
inc
insl
aad
pushf
lods
dec
leave
or
scas
cld
dec
mov
push
movsb
jmp
mov
rorl
jbe
add
pushf
adc
imul
cwtl
sbb
popf
add
mov
loop
movsl
sub
sub
lds
mov
vpunpckhdq
mov
loopne
cmp
cli
lret
daa
cmc
xchg
xchg
rcrb
aad
mov
lock
rclb
shr
mov
adc
loopne
and
repz
loope
testb
in
dec
fwait
and
lret
jnp
sarl
sbb
fimull
out
gs
nop
lea
insl
loopne
dec
pop
or
jmp
test
call
sbb
adc
insl
sti
fwait
xor
xchg
or
das
in
aas
scas
jns
sub
imul
mov
or
movsl
or
mov
sbb
insb
inc
ds
adc
lahf
mov
cmp
adc
out
bound
mov
lret
leave
fwait
loope
lods
jmp
mov
imul
repz
out
icebp
insl
es
repnz
add
mov
cld
pop
pop
fdiv
cmp
jo
mov
arpl
xor
lea
mov
dec
mov
xchg
mov
pop
sub
movsl
call
addr16
ret
lods
adc
add
sbb
ljmp
sub
cmpsl
in
sbb
into
mov
aam
nop
dec
test
in
or
movsb
icebp
int
jg
shll
or
outsl
inc
dec
outsb
jns
dec
nop
int
inc
shrl
mov
stc
movsl
mov
stos
sbb
xor
adc
sbb
or
test
aaa
je
or
shlb
inc
lock
ret
or
jb
jae
inc
xchg
jg
add
cld
clc
loop
gs
loopne
sbb
sub
xchg
ss
push
cltd
push
fisttpl
in
stc
mov
inc
insb
scas
dec
inc
subb
std
gs
pushf
clc
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
fsubr
outsb
adc
jg
jle
inc
cmc
gs
mov
adc
push
loopne
push
fdivrl
mov
das
push
inc
or
cmpsb
cmp
push
loop
cmp
inc
adc
jo
mov
adcl
out
xchg
sbb
pushf
shl
jecxz
fstpl
sbb
pop
cld
fs
mov
pop
sub
cmp
lcall
xor
pop
mov
insb
pop
aas
mov
imul
aaa
sbb
pop
daa
mov
into
jg
addr16
pop
dec
gs
lret
push
outsb
loopne
pop
ret
shlb
mov
ljmp
lea
jnp
decl
xor
and
jb
shr
hlt
add
pop
loop
int
push
mov
std
lahf
data16
ljmp
out
jbe
lods
cmp
mov
sbb
in
jp
and
push
push
clc
xchg
sahf
shll
mov
jmp
xchg
mov
mov
or
cmp
push
ffree
movsl
jo
ficoml
repz
aaa
pop
icebp
fidivrl
pop
pop
adc
dec
lock
lods
cmp
mov
xchg
out
push
jnp
push
sub
ficomps
jno
push
in
dec
popa
pop
insl
lret
adc
lock
cltd
cmp
testl
dec
xchg
sub
sarb
lods
mov
pop
inc
sub
xor
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
imul
mov
jle
jg
jle
inc
das
ljmp
jne
mov
jno
test
sbb
clc
jg
adc
movl
xchg
add
jmp
or
push
repnz
rcr
sahf
lahf
inc
jne
pop
pop
in
rorl
sub
aad
lea
mov
mov
mov
clc
popf
lcall
rcrb
scas
or
mov
mov
xchg
into
out
mov
add
fnsave
mov
jle
test
xchg
pop
mov
lea
lods
jbe
adc
int3
jbe
mov
jmp
jecxz
dec
mov
add
call
cltd
jp
data16
in
pop
ficoml
pop
stos
mov
and
or
cmp
jb
pop
repnz
repz
dec
scas
out
add
sub
jecxz
or
lret
cmpsb
pop
rcrb
ss
imul
sub
imul
jb
push
jmp
mov
adc
sar
ja
ficoml
sub
xchg
sub
mov
push
inc
loope
pop
mov
lock
mov
or
and
sbb
jl
adc
mov
gs
fwait
sub
orl
push
jns
push
xor
int3
insb
jmp
roll
ljmp
sbb
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
and
inc
jle
icebp
jg
jle
mov
rolb
mov
adc
in
aaa
mov
adc
mov
and
cmp
ror
sahf
insl
mov
cltd
xor
or
pop
and
pop
mov
ror
sub
pop
lds
ret
lahf
mov
or
xchg
das
outsb
pusha
sbb
pop
mov
dec
icebp
outsb
repnz
ja
test
inc
stos
push
jno
fcmovbe
push
mov
ret
mov
bound
xchg
jbe
pop
sti
mov
ja
adc
bound
rorl
and
dec
mov
pop
xor
in
and
imul
push
int
sbb
in
xor
add
dec
and
adc
shrb
xchg
sbb
jns
scas
sahf
xor
and
out
adc
xor
fsub
sahf
xlat
cmp
jecxz
mov
shlb
gs
push
movsb
fdivr
imul
dec
out
fldcw
mov
call
in
inc
insl
gs
rcrb
in
ret
push
les
cmp
lock
das
mov
insb
xor
cwtl
add
outsl
filds
dec
add
or
add
mov
popf
push
push
push
push
push
fsubs
cmpsb
and
dec
pop
pop
mov
aas
es
scas
imul
push
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
mov
mov
jle
jg
jle
xchg
jmp
cmp
in
cwtd
divb
pop
loop
clc
pushf
insl
loopne
push
out
movsb
cltd
mov
fcmove
loopne
aam
xor
inc
fnsave
xchg
lret
daa
mov
cs
sbb
mov
cli
jl
pop
mov
xorb
push
or
int3
and
mov
inc
push
lret
push
jmp
sbb
shl
mov
js
imul
jbe
dec
mov
rep
int
rolb
add
push
imul
fs
daa
lea
sti
mov
daa
add
xor
xlat
out
cmpl
pop
pop
imul
das
in
push
and
arpl
inc
sbb
lea
sub
xchg
mov
ror
cwtl
rcr
sub
adc
jmp
xchg
pop
pop
mov
adc
inc
sbb
shlb
cmpsl
adc
dec
lds
es
in
push
hlt
mov
test
mov
xchg
and
or
js
pop
lds
push
test
std
sbb
mov
mov
negb
adc
aad
lea
and
enter
fidivl
pop
ja
push
and
insl
ljmp
inc
xor
ret
sbb
nop
pop
push
push
adc
movsb
xchg
test
mov
sbb
inc
add
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
push
add
jle
jg
jle
jns
mov
inc
mov
addl
xchg
or
cld
not
repz
out
mov
pop
pop
int3
pushf
inc
sbb
mov
push
rolb
dec
fldenv
sub
sbb
ret
mov
sub
dec
cltd
jo
movl
fldenv
loop
mov
iret
fldl
cmp
and
js
add
xchg
fidivrl
daa
sub
adc
sbb
addr16
pushf
mov
mov
mov
out
jmp
inc
mov
sub
adcl
sarb
movsb
mulb
dec
xchg
iret
orl
mov
push
in
out
iret
jge
pop
adc
into
js
dec
mov
sub
xchg
lcall
outsb
in
sub
push
xchg
pop
adc
xor
and
fisttps
loope
mov
stc
repnz
sbb
les
daa
popa
sbb
inc
adc
adc
push
call
push
push
xchg
iret
scas
sbb
jno
pop
repz
movsb
jo
mov
xor
ljmp
icebp
dec
fcomps
xchg
or
int3
push
add
inc
fidivrs
fcmovnb
aas
jl
dec
dec
xchg
inc
test
out
push
jae
mov
mov
and
inc
or
pop
cld
decl
jmp
ljmp
jo
fidivs
shrl
addb
icebp
jg
jle
daa
cmp
mov
jge
jge
cs
inc
out
test
add
fs
out
int3
cltd
sub
inc
int
sub
and
inc
inc
xchg
xchg
out
sbb
fsubrs
fildl
je
popa
dec
movsl
mov
push
dec
pushf
insb
ljmp
jl
and
ret
pop
into
or
in
aad
lods
adc
aas
aad
pop
insl
fisttpl
xor
dec
mov
push
push
ds
or
call
jp
sbb
js
pop
test
rorb
add
arpl
sahf
jmp
cmp
jle
lods
mov
and
mov
mov
push
and
adc
ret
and
lcall
lea
iret
loop
mov
adc
mov
outsb
cwtl
lea
inc
insl
ret
hlt
pop
repz
cmp
add
and
pushf
cmp
iret
pusha
ja
push
mov
subl
in
lock
enter
sarb
lods
and
dec
jge
xlat
sahf
mov
leave
xchg
jecxz
pop
dec
xchg
cmp
cld
cmc
loop
adc
scas
dec
adc
xchg
mov
pop
cs
ficoms
xchg
add
outsb
jle
fcomps
imull
add
testl
pop
mov
adc
fstp
xchg
stc
ljmp
out
in
push
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
pop
in
xchg
in
jae
pop
mov
je
push
sub
inc
and
or
mov
sub
jg
sub
loope
das
pushf
sbb
mov
repz
xor
int3
sbb
mov
cwtl
xchg
dec
icebp
lret
popa
scas
daa
jo
and
lret
sub
dec
ret
insb
adc
mov
scas
mov
aaa
or
cld
sbb
mov
and
push
scas
mov
rcrl
call
lcall
push
stos
notl
ret
inc
push
mov
xor
or
cmp
cmp
jae
push
mov
popf
mov
and
xor
add
jae
mov
cmp
shrb
jg
xchg
inc
cmpsl
pop
sub
pusha
dec
mov
push
fadd
sbb
or
sub
push
sbb
scas
pop
inc
xchg
in
mov
adc
push
add
es
mov
sbb
inc
mov
lret
rcrb
inc
jnp
repz
pushf
mov
cwtl
icebp
loope
jo
lods
push
dec
and
and
shrb
and
push
daa
into
pop
rol
sub
jb
rorb
lcall
inc
jae
in
aad
dec
or
sub
pop
lret
aaa
in
mov
cmpsl
xchg
sub
sti
repz
xchg
push
pop
pop
sti
cs
push
sub
mov
lea
cmpb
and
pop
fnstcw
scas
add
iret
scas
int3
xor
outsl
into
repnz
daa
aas
sbb
jns
pop
add
and
adc
gs
pop
cmp
pushf
mov
repnz
aas
mov
jp
mov
jmp
repnz
pop
jecxz
adc
mov
mov
iret
pop
bound
pop
out
mov
std
das
inc
in
xchg
cltd
movsl
scas
les
mov
ficomps
inc
mov
push
xlat
push
in
adc
mov
imul
inc
inc
aaa
lcall
adc
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
xchg
movl
xchg
jo
addr16
xor
jmp
fmulp
pop
ds
inc
lret
pop
test
outsl
or
rol
xor
ret
xor
mov
or
and
push
mov
aaa
loop,pn
add
cmp
lea
pop
das
and
pusha
out
xlat
outsb
push
pop
leave
mov
cs
jg
inc
jge
inc
out
push
sbb
push
rol
mov
pop
mov
imul
aas
pusha
in
xor
movsb
js
lds
cld
std
and
jne
lret
jns
jg
cs
adc
inc
sub
call
mov
sahf
and
imull
cld
inc
in
fwait
pop
popa
insl
leave
push
mov
dec
bound
sbb
xor
jle
es
xchg
test
jb
mov
or
movsl
int3
mov
push
pop
inc
decb
int3
xchg
hlt
mov
fisttpll
inc
xor
ret
inc
push
mov
icebp
mul
jle
push
stc
test
adc
xchg
cwtl
jmp
rclb
stos
pop
popa
test
inc
aaa
in
push
test
fwait
sub
mov
mov
jmp
push
mov
addr16
mov
ds
mov
clc
and
lds
loop
movsl
jne
cmp
mov
sub
mov
xchg
test
dec
lods
ljmp
or
xchg
adc
cs
rorb
adc
add
and
aaa
xchg
and
add
adc
pop
inc
mov
dec
sarl
pop
out
cmp
lea
xchg
xor
daa
paddsb
mov
in
pushf
push
push
sbb
fwait
pop
xor
sub
je
mov
bound
pop
jg
sbb
in
inc
dec
cld
jb
aad
push
aam
nop
xor
sub
int3
in
lods
xor
sti
xchg
sub
inc
ljmp
jb
sbb
jecxz
ret
jne
mov
add
jmp
mov
imul
dec
or
dec
jle
adc
stos
loope
cmp
cmp
imul
sarl
and
das
mov
jle
in
rep
mov
push
and
mov
aam
or
jo
es
mov
call
sbb
sbb
sub
mov
jb
fstps
xchg
movsb
mov
movsb
jge
pop
or
mov
dec
lods
pop
push
mov
shl
xor
mov
adc
sbb
call
jg
push
mov
int3
sbb
test
jge
scas
xor
pop
pop
les
iret
jno
xchg
test
pop
mov
sbb
adc
in
les
add
xchg
repz
lods
push
fidivrs
pop
mov
push
pop
dec
jmp
mov
das
lods
jl
adc
pop
pop
xchg
push
jns
jle
inc
mov
jle
mov
jnp
outsl
pop
sbb
or
lahf
inc
xchg
adc
jae
hlt
or
mov
push
mov
sbb
ret
aas
xchg
fdivrs
or
pop
fnstsw
ret
andb
nop
movsb
ret
xor
adc
pushf
adc
ss
push
sub
aas
aam
outsl
int3
xchg
ljmp
test
stc
fists
repnz
mov
add
or
fidivrl
sbb
mov
imul
aaa
leave
enter
push
push
or
sub
xlat
xchg
add
inc
out
cltd
push
inc
into
mov
push
and
or
add
mov
push
les
pop
mov
cld
add
push
cmp
sub
mov
dec
dec
ret
mov
mov
push
fldenv
sub
mov
pop
pop
jne
test
loopne
mov
mov
daa
push
adc
pop
cli
int
fistpl
faddl
push
mov
stos
lea
scas
add
ss
mov
loopne
mov
std
sti
pop
ja
sbb
cmpsb
add
neg
adc
rcrb
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
mov
xlat
add
add
add
fsubrs
lods
mov
in
fnsave
add
inc
sbb
jp
lahf
stc
and
loope
pop
xchg
in
mov
adc
cmp
mov
xor
jg
mov
xchg
adc
setno
test
add
sub
adc
std
adcb
mov
fsubrl
cmp
mov
dec
in
fidivl
popf
movsb
lret
or
icebp
imul
arpl
xchg
inc
popf
addr16
sub
dec
sub
adc
lea
mov
xchg
jo
mov
outsb
data16
pop
adc
jnp
insl
cs
adc
test
push
shrb
xchg
cmpsl
dec
fst
sub
sbb
xchg
push
int
mov
mov
jl
cmp
fistps
add
xlat
fidivl
inc
sub
es
cltd
push
push
sub
lret
cmpsb
sti
pop
fld
lods
pop
add
nop
pop
mov
pop
ficoml
in
jle
lcall
icebp
fadds
add
add
add
sub
mull
pop
outsl
and
ja
lret
xchg
xchg
xchg
push
jmp
icebp
cli
fstpl
push
lods
inc
scas
enter
pop
sbb
jo
sub
bnd
aam
cmp
sbb
inc
pop
fs
ds
inc
cmp
xchg
cwtl
dec
push
ficoms
int3
nop
push
mov
lds
neg
pop
das
rcrl
fdiv
std
dec
add
xor
add
mov
fidivs
dec
fbld
lea
jo
rolb
and
and
xchg
int3
inc
testb
cmpb
jge
xor
fadd
out
dec
add
push
rorb
cmp
enter
das
stc
cmc
movsl
mov
jbe
sub
cmpsl
pop
popa
call
jecxz
xchg
in
je
es
push
idivb
dec
jp
pop
loope
mov
xlat
mov
lea
pop
scas
pop
add
add
mov
push
mov
cmpsl
repz
add
add
add
add
rorl
inc
sbbb
andb
cli
fisubrl
push
cltd
cwtl
in
or
cmp
popf
ds
loope
mov
ret
jno
outsb
test
lods
lea
lcall
cli
add
add
ja
xor
dec
push
loop
add
enter
gs
call
arpl
in
fldenv
push
xchg
aaa
scas
dec
fildl
test
xchg
pop
cmpsl
cmpsb
pop
push
orb
mov
sbb
xor
inc
mov
test
faddl
mov
and
cs
sub
daa
inc
js
inc
into
loop
idivb
imul
popa
roll
lods
dec
aad
popf
or
cmp
aad
push
or
xor
mov
push
dec
push
or
cmpsl
ja,pn
add
add
subl
roll
mov
pop
dec
fiaddl
add
add
add
cs
daa
sub
in
clc
push
sub
mov
sub
mov
push
into
pop
mov
cs
inc
std
cli
pop
xlat
subb
xchg
xchg
jp
mov
mov
dec
sbb
cmpl
jmp
iret
aam
inc
in
mov
sbb
pop
xchg
or
xor
mov
cli
hlt
outsb
popf
or
adc
xor
nop
cmp
cmpsb
imulb
add
mov
push
movsb
add
adc
movsb
insl
movsl
xor
rcll
inc
sbb
aam
lods
mov
lea
dec
fmuls
filds
outsl
mov
movsb
lock
mov
mov
jbe
push
mov
fcmovb
shll
add
and
dec
and
cltd
dec
or
cli
mov
in
call
pop
jae
or
pop
dec
or
int
pop
fildl
add
add
add
jg
lds
shll
adc
push
inc
jmp
or
gs
mov
movsb
jns
jecxz
aas
fwait
jne
jle
mov
lcall
ljmp
adc
jbe
test
fcomps
push
fidivl
mov
jmp
mov
loopne
jo
jecxz
divl
sbb
and
das
or
xor
addps
pusha
cmp
push
push
aad
icebp
push
aas
pop
mov
sub
dec
dec
in
dec
adc
xchg
adc
xor
pop
daa
rcl
hlt
dec
iret
sub
add
aam
pop
mov
mov
gs
es
jbe
jae
or
and
stos
ja
pop
mov
sbbl
dec
push
cltd
lds
push
insl
out
nop
add
or
divb
mov
cltd
cltd
in
sub
jge
cltd
movsl
shrb
ljmp
repnz
jmp
lea
jg
cmc
insl
cmc
out
lcall
enter
imul
add
add
or
inc
push
in
mov
mov
xor
push
or
cwtl
push
gs
out
jp
sub
and
cmp
fstl
mov
dec
pop
jns
and
cwtl
mov
daa
loope
les
sub
mov
or
push
jbe
hlt
jb
or
inc
xchg
dec
mov
out
and
mov
arpl
pop
rcll
data16
lock
test
lock
xchg
add
mov
jl
jb,pn
dec
xchg
popf
loope
pop
sub
js
outsb
sub
rcrb
dec
int3
mov
fcmovb
addr16
pop
lods
push
nop
lret
mov
fcos
xchg
push
cmc
fsubr
add
dec
pushf
inc
jmp
movsb
push
mov
mov
jns
mov
push
cmc
cmpsb
loope
pop
sub
push
nop
cmp
sarb
lea
add
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
stc
and
test
movsl
fstpl
loop
push
je
mov
xchg
imul
test
int3
movsl
shlb
push
inc
adc
push
push
inc
fldenv
enter
dec
stos
dec
insl
decl
cmpsb
and
add
push
xchg
jle
cmp
or
movsb
sti
cmp
and
call
outsl
push
pushf
xlat
outsl
inc
lahf
das
pop
jmp
mov
repz
or
xor
inc
fstl
call
sbb
jmp
repz
pop
stos
mov
cs
pusha
mov
adc
dec
inc
lret
out
dec
xchg
adc
xlat
add
fbld
je
adc
sbb
sbb
gs
fwait
data16
fwait
cmc
sub
dec
jne
shlb
incb
inc
ret
mov
cld
gs
fs
mov
xchg
jle
das
in
cmp
mov
and
add
add
jle
and
scas
sti
jle
pop
push
pop
dec
notl
fiadds
add
add
add
icebp
pop
sarb
pop
ret
cmp
add
lods
lods
int
sbb
and
jbe
cmp
lea
jle
jp
shll
fs
pop
pusha
std
jae
or
cmpsl
stos
cmc
icebp
xchg
jecxz
inc
nop
or
outsb
jmp
pop
fcmovnbe
inc
dec
dec
jp
nop
imul
dec
or
and
ret
imul
out
pop
testl
add
repz
lds
push
aam
mov
test
sbb
push
out
and
arpl
or
mov
inc
imulb
push
inc
in
inc
aas
xlat
xchg
test
jl
cld
inc
inc
nop
push
or
fmuls
scas
push
push
mov
and
jg
sub
fs
mov
xor
lahf
xchg
orb
loope
lods
inc
rolb
jecxz
sub
push
lds
sub
rcr
not
mov
aad
inc
xchg
jno
add
add
negl
arpl
mov
add
add
add
mov
mov
add
data16
fwait
push
movsl
jbe
jne
lods
push
inc
mov
pop
fstp
in
xchg
movsl
push
fisttpl
testl
ret
xor
sarb
push
mov
call
stos
pop
into
iret
cmpsb
mov
add
js
mov
out
add
cmpsl
les
xchg
addr16
mov
dec
lret
mov
lea
xchg
nop
jmp
cmc
enter
jmp
in
jns
in
and
or
pop
or
mov
bound
xchg
movsb
add
add
and
jge
mov
push
push
mov
pop
mov
out
cmp
add
dec
jns
inc
aas
pop
push
inc
fiadds
jmp
push
insb
rcll
pop
push
mov
test
push
movsb
xor
push
jl
jle
insb
out
cs
pop
cmp
loopnew
add
add
add
cmp
pop
jg
push
mov
xor
aam
cli
into
jg
pop
push
xor
mov
jle
mulb
jo
fcmove
xchg
xor
inc
cmc
data16
sbb
js
xor
lret
mov
movsl
jbe
lahf
popf
and
fnsave
mov
and
pop
push
xchg
cmp
mov
cmpsb
add
ja
jbe
not
dec
mov
mov
jo
cs
push
cmp
jns
dec
in
fildl
andl
mov
or
xchg
jl
inc
adc
xor
movzbl
fadds
adc
jmp
mov
stos
jle
outsl
pop
les
clc
dec
cltd
sub
xchg
push
aaa
add
leave
inc
fwait
hlt
nop
ljmp
lahf
sti
cmp
loopne
fs
aas
and
hlt
arpl
add
mov
pop
mov
dec
push
rolb
add
add
fwait
mov
in
xor
adc
loopew
add
add
add
incb
sub
sbb
stc
or
xor
popa
push
out
sbb
xor
push
lcall
xor
aam
pop
sub
pop
int3
jg
push
xor
es
pop
mov
cmc
xchg
out
arpl
addr16
call
mov
jae
movsb
add
mov
fsub
jecxz
jne
sub
dec
push
je
xorl
sti
pop
mov
mov
mov
sahf
cs
addr16
lret
out
arpl
adc
repz
and
test
stos
pop
test
iret
insl
mov
pop
into
stos
mov
js
jmp
jmp
mov
sbb
paddw
mov
sbb
stos
pusha
fcmovu
lods
mov
add
aas
pop
sbbl
sbb
insl
out
in
int3
in
jp
mov
popa
aaa
data16
jne
mov
lcall
add
add
add
movsb
mov
xor
shr
dec
fiaddl
jb
jb
mov
xor
pop
arpl
mov
hlt
dec
incl
pop
testb
cmp
jecxz
push
cmp
xchg
scas
mov
sub
mov
adc
dec
mov
lret
push
jge
push
pusha
jg
fimull
sahf
sarl
jno
stc
mov
popa
lret
xor
add
lods
adc
add
add
outsb
and
pop
movsl
xlat
cwtl
lods
in
int
push
nop
in
pusha
icebp
inc
push
and
psrad
or
decb
je
adc
in
ds
inc
inc
inc
adc
mov
mov
mov
lds
mov
and
dec
pop
test
jbe
das
mov
and
inc
lret
jno
js
jp
sti
cmpsl
inc
jle
js
or
mov
vmwrite
fstpl
sub
jne,pn
or
add
add
add
jnp
sti
xchg
lahf
mov
mov
add
add
add
and
adc
lcall
ret
sub
push
jbe
aas
movsl
mov
xchg
in
lret
push
insl
cmp
xchg
xor
mov
sahf
aad
lds
ror
add
and
mov
in
cmpsl
fstpl
cs
out
sahf
cmp
sub
lahf
push
sub
aas
aas
and
mov
cld
ds
sbb
and
cli
cmp
shlb
mov
xlat
push
mov
push
cwtl
push
insl
fidivrl
and
and
mov
mov
lret
imull
lcall
inc
add
cld
sub
pop
test
mov
or
es
mov
xchg
ret
hlt
test
cmc
aad
mov
int
inc
adc
xchg
out
shlb
sbb
cmp
popa
out
sbbb
sub
sub
pop
sarl
mov
pop
addr16
add
add
add
scas
scas
push
pusha
fwait
mov
inc
adc
push
mov
inc
push
loope
push
ds
push
sbb
incb
cwtl
lcall
add
into
mov
xor
add
pop
jno
into
pop
xlat
cmp
fs
push
mov
aas
dec
mov
push
jnp
aaa
jne
inc
test
jg
push
es
lea
cmc
hlt
sub
testb
lock
mov
test
dec
sub
xchg
mov
test
sbb
stos
inc
bound
pop
nop
mov
hlt
incl
cmp
inc
popf
das
and
fcoms
push
inc
nop
inc
cmp
mov
pop
lds
jns
sub
popa
aam
dec
pop
inc
gs
mov
mov
subb
sar
insl
xlat
js
repz
push
lds
enter
or
in
mov
jno
lcall
insl
lock
std
repz
aaa
push
add
add
add
add
mov
ret
pop
inc
dec
and
push
cltd
and
stc
mov
or
je
xchg
leave
dec
xchg
cmp
push
into
mov
jns
sahf
mov
ret
popa
adc
mov
push
sub
and
stos
add
je
xchg
and
xchg
inc
lock
sub
push
sbb
pop
and
repnz
push
mov
int
je
sbb
xchg
fcomi
mov
ja
xchg
insl
sub
xor
xchg
test
scas
or
mov
cmp
push
mov
xor
jp
dec
into
mov
addr16
push
mov
aas
dec
fadd
cmp
and
clc
xor
dec
push
pushf
and
ja
imul
aad
rorb
sbb
mov
fwait
sysret
adc
insl
jne
jmp
fs
inc
add
pop
ficoms
add
lock
cmp
arpl
je
dec
cmp
addr16
add
add
add
sarl
rolb
aam
lcall
push
pusha
jno
fisubrl
and
mov
dec
leave
pop
insl
mov
in
out
mov
movsb
stos
add
adc
je
mov
pop
cld
mov
fimuls
adc
mov
fnsave
in
mov
scas
mov
fnstenv
mov
xor
jl
add
jecxz
pushl
push
jo
inc
adc
clc
cltd
mov
push
xchg
dec
sub
insb
in
in
mov
xchg
adc
and
sbb
sti
push
dec
outsl
das
jns
mov
mov
inc
inc
fcoml
ja
das
sub
inc
cmp
cmp
sub
sub
dec
ljmp
lret
inc
rolb
jne
cmpl
jecxz
testb
add
insl
lcall
mov
inc
sub
inc
jg
addr16
add
add
add
fiaddl
outsb
mov
dec
mov
jne
cmp
pusha
pop
push
or
adcb
movsl
and
int
mov
dec
leave
dec
dec
test
cmpsl
rcrb
es
rol
mov
pop
repz
repz
arpl
mov
and
lret
xor
cmpsb
loop
daa
fcmovnb
nop
sbb
mov
shll
push
int3
xchg
mov
iret
mov
movsb
jne
jb
in
sbb
mov
cmpsb
dec
jne
pop
push
xchg
pusha
mov
mov
std
add
cld
xchg
sbb
imul
push
andl
jbe
cmp
xlat
fimuls
add
popa
jl
cmp
xchg
sahf
or
or
int
js
sbb
sti
inc
add
jb
mov
or
jno
divl
sbb
add
mov
push
in
mov
add
add
xchg
in
mov
incl
rcrl
call
add
or
loope
pop
aam
cltd
cmpsb
out
cwtl
mov
sbb
push
in
jge
clc
inc
jge
add
mov
fwait
aad
push
shrb
and
pusha
sub
in
sub
xchg
mov
cs
fcompl
sbb
sub
sbb
test
pop
jl
or
xor
aas
testb
jmp
pop
mov
filds
or
bound
daa
push
cwtl
jno
xchg
loope
cli
movaps
inc
jne
mov
je
test
dec
mov
mov
mov
mov
mov
repz
lods
in
xchg
dec
mov
fstl
les
scas
jns
mov
mov
xchg
into
sbb
icebp
stos
pop
shrb
aam
jbe
data16
stc
rcrl
dec
pusha
test
iret
insl
rolb
pop
inc
push
mov
add
inc
mov
in
negl
sub
movsb
lret
and
add
add
add
cmp
sbb
pop
xor
sbb
sbbb
push
popa
xor
push
mov
jg,pt
jle
sbb
or
ret
cmp
xchg
int
lods
icebp
add
in
enter
xor
or
xor
jb
cltd
test
dec
lahf
adc
je
leave
jg
call
bound
stos
test
aaa
mov
jns
outsl
xchg
test
lahf
mov
leave
or
mov
xchg
mov
mov
test
rcr
sbbl
xor
loop
cmpsl
pop
stos
pop
imul
mov
dec
repz
aad
subb
fcomip
in
jp,pn
xor
test
test
mov
gs
inc
js
jmp
push
xchg
jb
cld
pop
test
out
push
dec
or
or
adc
in
cld
les
xor
movsl
lret
fistpll
stc
dec
push
fcompl
jge
addr16
inc
fcomps
lret
out
xor
aas
jns
push
cwtl
in
ja
clc
or
jg
cli
pop
ret
jb
imul
sbb
cmp
push
popl
clc
inc
xor
and
dec
clc
pushl
stos
add
pop
push
fidivs
jbe
xchg
adc
lret
mov
cltd
out
mov
jecxz
scas
adc
stos
pop
xchg
ljmp
and
inc
int3
or
in
push
rcll
cmpsl
loop
ret
xor
mov
jecxz
and
out
jle
cmp
jo
mov
ffree
cmpsb
pop
pop
mov
add
xchg
sub
fwait
xor
daa
xor
gs
push
push
fwait
lret
out
cli
inc
inc
les
inc
in
mov
into
cmpl
insb
out
addr16
sbb
cli
bound
in
leave
ret
xor
bound
repnz
out
data16
cmp
mov
push
push
push
mov
xchg
addr16
add
add
add
adc
lret
sub
sbb
ljmp
inc
cwtl
fmulp
shlb
loope
inc
mov
loope
sub
pop
clc
adc
ret
lret
cld
jnp
mov
lahf
inc
outsl
mov
sbb
pop
pop
jmp
fbstp
mov
int3
lods
dec
pop
das
pop
arpl
fcmovnu
or
mov
loope
aas
and
dec
mov
cmp
sub
xor
lret
je
dec
cwtl
or
mov
fwait
jbe
shll
int
jl
jne
ds
lret
cmp
add
or
std
scas
out
and
pushf
mov
push
bound
push
stos
ret
xor
mov
ss
xchg
cs
movsb
xchg
cmp
clc
daa
mov
inc
sbb
and
shll
es
mulb
jne
mov
add
out
repnz
add
pop
lcall
les
lret
addr16
add
add
add
mov
push
dec
mov
pushl
outsb
push
ret
cmc
test
stc
adc
loopne
movsl
and
les
nop
clc
jg
mov
negb
jge
cs
adc
push
xor
shlb
lods
pop
stos
std
sbb
int3
jg
dec
or
nop
fstp
pop
pop
jo
dec
imul
jle
mov
jge
inc
test
icebp
sub
push
into
leave
jb
push
mov
cltd
cli
and
jne
out
xlat
mov
lret
sub
mov
dec
mov
insl
and
bound
pushf
sub
pop
mov
mov
inc
shrb
push
xchg
mov
lea
pop
add
mov
mov
push
cmp
jo
or
rcll
incl
fwait
push
shlb
lahf
testb
aaa
push
xor
dec
mov
pop
mov
push
decl
jle
pop
test
add
add
add
pop
imul
fsubr
or
in
jmp
push
or
call
adc
pop
test
jmp
adc
enter
xchg
aaa
mov
pop
sarb
sbb
and
outsb
mov
inc
mov
stos
leave
dec
or
out
cmp
pop
in
jmp
mov
lods
adc
movsb
repnz
mov
cmpsb
dec
scas
push
out
ret
sub
and
xor
or
add
xor
fnstcw
ftst
add
xor
loopne
or
inc
ss
push
push
cmpsb
or
xchg
aas
add
cmc
cmp
in
mov
aam
push
mov
or
mov
or
pusha
mov
jb
mov
jns
call
xlat
xchg
fstpl
sub
into
sub
cmp
out
push
mov
jne
push
mov
sahf
std
dec
fists
movsl
inc
jge
out
sarl
lds
cmp
roll
add
add
jmp
in
push
sub
test
add
add
imul
mov
mov
fdiv
mov
inc
jno
orb
loope
aaa
xchg
inc
xor
outsl
push
adc
dec
and
aad
xor
ss
int3
cmp
jge
jmp
dec
in
adc
scas
cmp
pop
xchg
pop
gs
fwait
push
mov
bound
pop
and
jle
inc
mov
and
push
pop
adc
imull
push
mov
mov
in
sbb
xor
mov
add
xchg
fsubl
cwtl
aaa
push
mov
mov
dec
sahf
shlb
sbbl
inc
adc
nop
dec
jmp
cmc
xchg
jo
jb
xor
jmp
cmpsl
xor
mov
push
push
sub
jo
insb
fsubrl
fsubrp
lahf
fmull
out
mov
aad
das
inc
mov
push
or
pop
pop
dec
fs
je
std
mov
add
dec
xchg
aam
add
add
add
outsb
xor
mov
lcall
out
add
add
add
lods
mov
ljmp
fcompl
push
mov
testb
lds
xor
jnp
fdivl
pop
sbb
dec
rolb
and
sti
sbb
push
aas
insb
into
ja
ret
test
aas
sub
sahf
sub
fsub
xor
jg
sub
aas
aas
fwait
int
fcomi
ja
adc
nop
add
mov
subl
out
std
loop
xchg
push
stos
je
jmp
aaa
sbb
ret
jnp
es
das
hlt
rcrl
xor
add
pop
pop
fidivl
dec
push
add
aam
fimuls
push
inc
sarb
stos
hlt
ret
add
xor
inc
inc
xor
xor
xor
popf
or
test
hlt
adc
pop
dec
sbb
mov
pop
pop
leave
sub
in
hlt
repz
imul
push
sbb
mov
repz
ror
lock
jnp
xor
xchg
mov
lock
add
add
mov
fwait
addl
pop
clc
inc
jl
stc
pop
push
cmc
sub
pop
push
lods
aas
mov
std
movd
pop
das
mov
faddl
inc
pusha
pop
sbb
inc
pop
call
popa
mov
movsl
or
inc
mov
subl
push
popf
mov
push
mov
roll
inc
jnp
lds
push
lds
mov
adc
sub
xorb
push
cmc
movsb
xchg
mov
mov
data16
sbb
xchg
mov
sub
les
adc
jbe
std
rcr
mov
adc
mov
fsubrl
mov
pop
push
push
xor
sub
test
sbb
jae
stos
mov
or
outsl
mov
sbb
rcr
mov
push
jb
ficomps
xchg
pop
pusha
push
pop
pop
hlt
pop
or
and
repz
fisubs
iret
das
cwtl
addr16
add
add
add
cmp
mov
add
jb
add
mov
sbb
push
std
pop
mov
inc
ljmp
sbb
imul
jg
test
fwait
xorl
sub
or
or
push
stos
push
sbb
loop
sahf
stos
pop
loop
mov
mov
push
nop
or
cmp
and
xchg
jmp
inc
and
aaa
mov
aas
imul
loop
jge
sub
and
dec
xchg
mul
xor
in
test
xlat
sbb
lahf
xor
in
sub
or
sti
jl
mov
orw
scas
sbb
mov
popa
push
inc
push
inc
push
sub
sahf
xor
xorb
dec
pop
fsqrt
movsb
or
cmpsl
and
fsts
aas
mov
push
and
xor
sbb
pop
fisubrl
iret
sub
dec
pop
out
sbb
cmpb
add
add
add
cmp
stos
out
fs
lds
sbb
xlat
fwait
mov
addr16
or
adc
mov
inc
cwtl
or
push
dec
fildll
dec
icebp
mov
daa
divb
in
inc
insb
in
dec
add
fldcw
in
dec
lods
pop
xchg
adc
pop
and
lods
pop
stos
inc
stos
mov
xchg
cmpsb
fimull
arpl
stos
cli
and
out
addr16
popa
daa
bound
cld
sti
mov
fistps
es
push
enter
shr
push
adc
and
or
add
adc
adc
fs
adc
jmp
ds
in
push
xchg
stos
pop
and
movsb
test
pusha
mov
in
ds
or
shrb
adc
pop
shrl
or
sbb
sbb
out
mov
xor
xchg
jl
xchg
movsl
xor
inc
shrl
cmc
scas
sub
mov
repz
add
add
mul
gs
xor
sub
xor
enter
sbb
popf
fnstenv
aas
cwtl
push
clc
cwtl
popf
adc
cmpsl
aam
mov
inc
sbb
out
push
pop
cld
call
adc
pop
inc
mov
mov
fcomps
shl
and
sbb
fxtract
or
mov
mov
xchg
hlt
dec
aaa
xchg
adc
mov
add
lods
mov
dec
aad
mov
sub
mov
fs
pop
push
adc
sbbl
stos
add
lods
push
movsb
dec
xchg
xchg
xor
pop
std
jns
sbb
fildll
jge
or
sub
mov
mov
xlat
scas
jb
xchg
repz
testl
mov
dec
jb
mov
sub
push
sahf
jne
imul
icebp
cld
dec
dec
stos
mov
jmp
pop
jbe
or
aam
xchg
lret
pusha
rorb
cmpsb
mov
or
addr16
add
add
add
test
scas
adc
or
push
aaa
movsb
in
test
outsl
rorb
jne
xchg
icebp
int3
adc
sbb
push
and
ja
cld
xchg
pushf
cs
lret
dec
adc
xchg
pop
out
mov
push
aas
cli
xor
pop
or
add
roll
pop
push
popa
and
sub
test
aas
not
add
lock
or
fwait
or
mov
pop
es
pop
pop
pop
flds
iret
ljmp
js
jg
fimull
pop
jle
or
repz
inc
sub
or
sub
cld
jp,pt
sti
inc
mov
or
cmp
sub
or
mov
xorb
xchg
arpl
call
push
fyl2x
and
xor
cld
mov
or
aad
ss
jmp
xchg
jecxz
push
testl
xor
cwtl
addr16
add
add
add
xor
mov
in
jno
es
inc
ret
dec
add
add
je
pop
sti
mov
and
xchg
cmp
sarb
push
inc
loopne
pop
push
lret
pop
sbb
xchg
imul
or
rcll
clc
iret
lods
bound
pop
jbe
pop
xchg
mov
adc
pop
push
es
arpl
add
mov
test
jo
repz
dec
mov
jmp
cmp
mul
mov
jl
mov
shll
repz
vmread
fstpt
in
jg
dec
push
cmpl
add
lea
test
js
push
mov
sti
pop
dec
leave
test
or
lcall
push
xor
cwtl
cmp
test
mov
mov
sbb
hlt
daa
or
dec
divl
sub
dec
icebp
or
push
cmpsb
pop
ret
lret
or
fs
sbb
insb
sbb
cwtl
nop
fwait
mov
add
add
xchg
mov
mov
pop
das
dec
xchg
push
mov
add
add
jns
out
out
mov
pop
or
mov
mov
cmp
rolb
mov
push
xlat
arpl
dec
movl
lcall
xchg
inc
sub
and
imul
jae
test
sub
fisttpl
or
push
add
fwait
add
pop
inc
sub
sub
mov
inc
xor
rclb
gs
jle
movsl
sti
enter
xor
std
fistpll
sbb
mov
push
and
mov
cmp
xor
pop
and
mov
fstpt
data16
mov
xchg
pop
test
pop
mov
xchg
mov
dec
cmp
fsubrl
lahf
testb
imull
jl
aad
sahf
jbe
decl
pusha
sbb
pop
test
loopne
and
lret
jge
pop
jb
test
pop
mov
std
shlb
mov
fucomi
xor
mov
add
add
pop
daa
xchg
js
sti
push
fwait
dec
mov
sub
pop
xchg
add
cmp
ds
xchg
push
movsl
jno
jb
pop
nop
add
adc
inc
popa
in
mov
aam
jl
dec
xor
or
adc
jns
or
mov
gs
push
jb
icebp
scas
outsl
jecxz
outsl
push
outsb
aas
xor
inc
push
add
cmpsb
loope
pop
xchg
movb
push
dec
cmp
bound
arpl
in
cltd
xor
dec
dec
mov
jns
inc
out
gs
aam
clc
lcall
pop
std
enter
loopne
repz
inc
das
sarb
add
cmp
pop
xor
dec
fwait
mov
mov
sbb
dec
loop
sbb
in
call
mov
ret
out
push
hlt
pop
int3
aam
leave
std
add
sbb
inc
sti
js
out
fcmovnbe
pop
lea
cmpsb
dec
leave
cmp
cmp
add
add
push
inc
pop
jns
aas
loopne
sub
fs
addr16
add
add
add
pop
lahf
cmp
pop
lret
bound
cmp
dec
xor
inc
mov
mov
jo
bts
ret
push
out
dec
test
test
test
lahf
push
mov
insb
ret
and
insb
mov
cmpsl
sarl
jl
pusha
in
inc
int3
xchg
movsl
adc
xchg
clc
push
pop
ficomps
aam
add
or
lods
mov
jp
pop
add
int3
push
mov
adc
daa
sbb
xor
push
push
jno
jnp
push
loopne
mov
mov
sub
mov
mov
pusha
scas
bound
das
push
fisttpl
std
xchg
les
ret
sarl
shl
sbb
daa
push
push
data16
or
mov
jo
sbb
andb
jne
sub
fcomps
imul
sub
add
jnp
mov
cmp
add
add
add
cs
jae
xor
and
push
xchg
push
cltd
insb
nop
lods
jae
cmp
mov
and
outsb
push
inc
mov
mov
adc
mov
test
bound
cmp
adc
jl
daa
xchg
jns
ficomps
rcrl
rcrl
or
repnz
outsb
mov
bound
sub
lods
aam
mov
push
inc
lods
xor
iret
lcall
jbe
push
out
lds
int
mov
jg
dec
cmp
push
fnstenv
cmp
mov
icebp
imul
and
cwtl
pop
mov
addl
je
js
sub
mov
rcrb
enter
sarl
xchg
mov
cs
aaa
aas
popf
push
jmp
and
mov
mov
mov
test
dec
sub
gs
mov
idivb
dec
push
imul
fcompl
xor
add
add
adc
jns
adc
scas
lock
pop
int
dec
cmp
mov
rorb
jne
pushf
or
sub
fidivrl
pop
cltd
jecxz
call
cltd
pusha
test
xor
loop
int3
cmpsl
shlb
nop
add
mov
lcall
dec
mov
xchg
cwtl
in
call
in
push
mov
dec
fnstsw
scas
sbb
sbb
mov
mov
push
push
xlat
push
arpl
jns
test
pop
push
rclb
jne
mov
pop
cld
mov
outsl
fisubrl
jns
or
insl
sbb
jge
jae
mov
fiadds
mov
add
inc
dec
out
mov
adc
enter
stos
or
push
aaa
out
aaa
push
cmp
mov
xor
popa
dec
ret
mov
mov
adc
mov
push
cmpsl
mov
cmp
adc
xchg
xchg
mov
idivl
mov
add
add
add
jbe
movsb
test
movsb
das
movsb
or
addb
shlb
cwtl
jp
or
lods
mov
push
stc
bound
sahf
hlt
jnp
xchg
push
stc
xor
lods
out
lods
or
scas
leave
jbe
sbb
jbe
jb
lds
int3
fs
lcall
push
outsb
ret
xchg
loop
pop
xchg
xor
sub
push
cli
test
or
pop
cltd
jbe
push
cwtl
scas
jl
rcrl
adc
dec
dec
xchg
test
stos
inc
arpl
orb
xchg
pop
out
xchg
loope
ret
cmp
or
xchg
jl
jle
mov
std
adc
mov
or
pop
scas
cmpb
pop
aas
jo
sbb
ret
div
adc
fadds
push
xchg
xor
xchg
andl
mov
sub
mov
or
cmp
fisttpll
scas
mov
adc
dec
lock
fwait
xor
das
jno
adc
test
mov
fidivrl
cld
add
add
add
xchg
rcll
fcmovu
and
idivw
sbb
vpcmpgtb
sbb
adc
cmp
arpl
push
add
stos
mov
or
or
dec
ja
push
fidivrs
add
jl
cmp
ficompl
pop
jp
pop
pop
in
inc
cs
add
or
jge
push
cmpsb
dec
mov
push
scas
mov
and
mov
sbb
outsl
jecxz
test
mov
cwtl
jge
cld
jae
lds
mov
and
mov
aaa
push
dec
loope
popa
cmp
cmp
imul
loop
cs
and
mov
pushf
push
xor
xchg
fs
bound
lods
lahf
add
ljmp
push
int
pop
inc
xchg
cld
push
sub
pop
jb
test
jge
dec
imulb
add
pause
cs
add
push
pop
push
jmp
shlb
dec
bound
addr16
add
add
add
stos
fcoml
repnz
push
or
mov
adc
test
push
jno
and
push
fidivl
das
out
clc
mov
clc
aam
mov
cs
or
insb
and
inc
ret
xchg
andl
inc
adc
push
ficompl
insb
inc
cmp
js
in
sub
pop
inc
das
mov
aaa
or
add
mov
test
fucom
clc
xor
fnsave
push
mov
xchg
out
loop
lret
mov
sahf
or
repnz
inc
and
sbb
inc
mov
idivl
cld
sub
sub
sbb
shll
sub
sub
aas
add
jmp
daa
dec
cmpsb
jb
ss
andl
push
ds
les
repnz
push
ss
push
sub
adc
mov
cld
faddl
dec
enterw
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
in
sub
add
add
mov
push
dec
adc
sbb
add
test
movsb
lds
out
mov
or
fists
sub
ds
aaa
pop
dec
jp
inc
pop
stos
inc
sub
out
xchg
xor
out
xorb
shrl
jl
int
dec
adc
mov
shl
and
fmuls
push
sbb
in
xor
sub
cltd
movsl
call
jbe
xor
sub
pop
rcrl
cmovle
stos
mov
in
mov
daa
popa
mov
hlt
sub
aas
das
mov
insb
out
dec
or
pop
movb
shll
inc
mov
lret
and
repnz
push
xchg
in
mov
cld
mov
clc
call
not
jge
push
mov
jb
andb
int
lahf
popf
mov
cmp
dec
mov
es
loope
stos
push
mov
stc
or
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
sub
dec
mov
inc
lods
cmp
dec
adc
sub
jbe
push
sub
jbe
push
dec
push
jmp
movswl
cli
add
mov
daa
mov
mov
fprem1
lock
dec
js
pop
mov
fs
or
adc
fwait
xor
inc
test
rolb
jmp
in
or
sub
push
sub
pop
pop
iret
sub
lahf
pop
push
add
fs
mov
stos
inc
push
inc
lods
fdiv
into
fyl2x
cmpsb
inc
mov
pop
mov
fwait
xor
cltd
mov
addr16
leave
test
push
shlb
pop
sub
lds
adc
lock
push
mov
insl
and
pop
sbb
xchg
sub
add
add
aam
int
aaa
das
aam
mov
add
add
add
sbb
vpmacsdd
xchg
movsl
pop
mov
pop
sbb
cltd
loope
inc
es
inc
push
fwait
call
jo
adc
mov
into
js
mov
stc
add
aad
mov
stos
xchg
push
stos
imul
ljmp
pop
stos
cmpsb
push
int3
repz
mov
push
adc
pop
int
sti
popa
stos
shll
sub
adc
xor
rcll
mov
inc
inc
sbb
and
and
scas
xor
pop
or
mov
popf
test
std
xorl
ds
jne
rcrb
xchg
cmp
in
mov
inc
repz
cmpsb
jle
ds
xor
or
outsl
aaa
lods
hlt
mov
push
fidivs
orb
mov
pop
mov
push
xchg
je
loope
mov
sti
mov
add
fsubrs
add
arpl
addr16
sub
and
xchg
add
add
add
add
or
test
call
jb
dec
test
push
sbb
push
pop
sahf
and
adc
scas
mov
cmp
push
nop
inc
ret
lods
fisttpl
lea
fcoml
adc
dec
adc
dec
jns
ss
cli
outsb
push
inc
push
jle
cld
jnp
sbb
push
and
xor
push
gs
dec
daa
inc
add
js
mov
sub
out
push
mov
add
lretw
ficoml
scas
mov
stc
jecxz
pop
jns
loop
jg
pop
add
rclb
lea
bnd
push
pop
adc
cld
dec
mov
mov
pop
data16
in
adcl
lahf
out
lods
inc
mov
xor
pusha
insb
cmp
cmpb
push
aas
das
fcos
xlat
jmp
and
mov
xchg
dec
sbb
jge
loop
out
cmp
cmp
pushl
xchg
xor
and
add
add
add
add
cli
inc
ja
cld
cmpsl
xor
and
pavgb
ret
cmp
and
xchg
xchg
xor
mov
push
xchg
mov
movsb
rol
mov
mov
movsb
mov
pop
fcoml
jnp
adc
and
ja
iret
jmp
dec
lods
or
movsb
push
or
popa
jns
sbb
pop
lret
mov
or
add
push
or
ja
in
aaa
enter
mov
cmp
inc
xor
mov
mov
dec
xor
dec
movsb
scas
sub
xor
mov
and
in
mov
jbe
nop
sbb
dec
mov
ljmp
xor
mov
subl
aaa
mov
xor
aas
pop
push
jmp
das
mov
push
push
or
test
insb
shll
mov
push
jge
std
cmp
test
push
scas
mov
add
add
add
add
test
and
lea
xchg
mov
sub
cltd
xchg
test
in
push
mov
sti
add
xor
or
jp
xchg
xlat
mov
inc
sub
inc
mov
out
insl
cmp
inc
mov
shr
outsl
movsb
and
xchg
out
mov
dec
outsl
bound
xchg
dec
jae
popf
rcrl
shrl
pop
sbb
popa
and
out
push
push
cwtl
xor
and
pop
mov
bound
add
jg
jle
or
mov
outsb
repz
fisubrs
bound
cwtl
inc
pop
jecxz
pop
sarb
pusha
nop
push
pop
xchg
sti
mov
cmp
scas
and
cmp
push
cmp
sub
in
es
shlb
movsb
jbe
pop
sub
aaa
jbe
cmp
adc
fcompl
sub
shrl
shlb
mov
or
xor
test
add
add
xchg
and
movsl
mov
mov
mov
lods
andl
add
add
add
mov
dec
mov
lcall
mov
insb
or
lcall
cmp
cmp
je
pop
daa
and
xor
cmp
inc
fistps
stc
mov
repnz
mov
out
push
inc
iret
mov
mov
lcall
xor
sub
call
sbb
push
fnstsw
or
push
sbb
fbstp
jne
movsl
push
arpl
mov
in
push
call
or
xchg
gs
jp
fldenv
movsl
andl
lret
insl
cmp
jno
sub
fmuls
je
push
arpl
pop
stos
lods
sbb
pop
out
cs
hlt
mul
imul
inc
xchg
xchg
xchg
lcall
pop
push
scas
mov
insl
int
mov
pop
jmp
gs
test
aaa
loop
cmpsl
dec
fidivs
cwtl
fdivl
mov
dec
sub
sbb
add
add
mov
pop
cli
adc
pop
aam
cmp
int
xor
lock
mov
sbb
push
mov
scas
add
addr16
cwtl
mov
aas
xor
adc
dec
jmp
pop
cmpsb
cltd
dec
arpl
std
loop
add
lahf
inc
movsb
lcall
enter
sub
lret
mov
inc
int
into
xchg
xchg
hlt
xchg
pop
sbb
addl
add
cmp
jo
xor
repz
inc
shll
jbe
mov
lods
and
push
in
xchg
adc
cli
xchg
sub
repz
clc
cmpsl
jno
cmp
iret
div
add
sbb
push
cld
mov
out
aas
or
imull
adc
sbb
sub
outsl
pop
idivl
popl
sub
mov
mov
les
test
xor
ljmp
lea
das
insb
push
inc
stc
mov
mov
lods
imul
aas
adc
addr16
add
add
add
sub
jmp
scas
addr16
pop
test
push
faddl
sbbl
popf
shl
lret
xchg
sub
fidivl
add
leave
push
jg
leave
imul
fstps
out
dec
push
aam
mov
arpl
jg
stos
pop
sub
inc
mov
popf
addl
sbb
out
pop
mov
mov
or
and
das
jge
adc
jecxz
dec
int3
ja
mov
outsl
out
pop
mov
lods
xchg
clc
dec
mov
lret
sbb
int3
movsl
sti
pusha
bound
movl
mov
sub
ds
jge
mov
fwait
rorb
xorb
mov
das
mov
xchg
icebp
andl
cmp
or
cmp
addr16
sub
icebp
xor
jg
insb
add
inc
imul
mov
lds
inc
adc
cmc
daa
das
pushf
lahf
cmp
into
imul
add
add
mov
cmp
aam
mull
pop
add
add
add
jns
lahf
sub
shl
jge
push
inc
mov
pushf
lcall
xchg
push
leave
pushf
inc
sbb
jo
rcrb
pop
cmp
in
lret
pop
fnstcw
mov
jge
loopne
pop
lcall
cmc
mov
test
icebp
scas
fisttpll
cmp
gs
jecxz
fwait
mov
out
inc
lods
pushl
pop
int
aaa
adc
mov
icebp
movsl
test
cmc
jl
sbbl
fistpll
cmpsl
aas
mov
mov
mov
and
cmc
cmpsl
jne
and
in
imul
test
jle
mov
ss
mov
movsl
out
dec
lcall
jae
out
cltd
mov
loop
rcrl
sbb
jae
mov
insb
inc
ret
push
mov
or
pop
and
div
or
xchg
enter
push
fbld
das
popf
xchg
add
add
add
ror
cwtl
fistpll
jg
pop
aas
and
stc
sbb
shl
cmpsb
xchg
pop
fwait
cs
push
push
aam
call
and
pop
mov
xor
clc
or
lds
cmpsl
movsl
xchg
cmp
scas
mov
test
fs
xor
bts
pusha
cmp
pop
js
mov
in
repz
sub
sub
and
mov
loop
cmc
lods
roll
insb
lock
ja
aad
imul
xchg
ja
stos
inc
sub
add
dec
stc
out
mov
cmpsb
insb
hlt
stos
ja
lret
pop
push
push
mov
dec
sub
inc
cmp
jb
cmp
cmc
in
das
popf
sarl
cmp
sbb
inc
pop
test
sub
test
loop
insl
test
pusha
test
pop
icebp
xchg
or
stc
fldl
das
mov
int3
shl
orb
bound
and
mov
into
fwait
add
mov
andl
add
movsl
std
cmp
cld
dec
xor
dec
out
xor
jge
shll
mov
mov
aam
test
je
insb
mov
add
push
pop
lret
ljmp
mov
mov
lods
jo
inc
pusha
xor
scas
cld
xchg
jmp
scas
dec
pop
notl
jno
dec
pop
test
setns
dec
mov
out
mov
adc
add
test
jne
dec
std
and
and
mov
imul
iret
ret
call
pop
mov
mov
test
pop
cld
fwait
inc
daa
jmp
adc
mov
icebp
test
xor
cld
idivb
push
mov
mov
adcl
repz
imul
shlb
out
sti
insb
push
lret
and
inc
sbb
jno
test
fstpl
add
jl
test
out
mov
pop
sarb
in
push
mov
or
add
add
add
lea
mov
iret
pop
stc
pop
hlt
and
sarb
pop
push
int3
jle
or
aaa
cmp
test
leave
mov
test
cmpl
pushf
lsl
dec
mov
inc
cmp
cwtl
pop
mov
lea
sbb
clc
ret
jp
mov
and
hlt
rcrb
outsl
xor
mov
fiaddl
jo
xor
and
jle
pop
fsubl
imul
xor
and
gs
cld
mov
lds
pushf
or
pushf
movsb
movsl
out
mov
xor
jo
dec
or
push
test
pop
push
jae
negb
iret
xchg
dec
mov
jge
mov
les
pop
jge
mov
mov
leave
push
sub
xor
pop
mov
es
stc
aad
shlb
imul
fcoms
repz
add
sti
inc
out
aas
mov
rolb
or
add
add
add
and
pop
les
mov
sbb
inc
lods
mov
jmp
addl
repnz
int
nop
leave
jge
adc
jle
insb
mov
leave
loopne
shll
sub
push
insb
sti
nop
dec
cmp
loopne
das
or
xor
mov
shll
out
cwtl
mov
nop
mov
sarb
adc
xchg
add
stos
aaa
imul
aas
and
push
lods
and
adc
jnp
xor
mov
sbb
jmp
loopne
pushf
out
lock
sahf
and
mov
les
jne
out
loope
sub
xchg
loop
stc
dec
pop
mov
movsl
cli
mov
je
mov
mov
call
or
pop
sahf
jmp
add
push
popa
pop
gs
push
aad
inc
testl
pop
nop
je
push
bnd
dec
leave
and
xchg
int3
lcall
add
inc
xor
arpl
push
or
lahf
fidivs
sub
fdivrs
cmp
addr16
loope
mov
xor
inc
jb
repnz
push
mov
jns
xchg
sbb
insb
cmp
mov
push
xchg
add
pop
jae
insb
jp
and
xchg
cmc
scas
lods
or
and
xor
push
aad
ret
and
push
push
in
push
shlb
xchg
sub
call
adc
mov
push
insb
popa
xchg
mov
testb
lret
std
insb
adc
push
cmpsl
jmp
push
movsb
adc
into
lcall
push
or
add
push
or
sbb
mul
push
in
rcl
push
push
in
ljmp
popf
add
cmp
insl
or
test
outsb
movsl
adc
aad
arpl
mov
sbb
adc
and
dec
xor
stos
adc
push
pop
cmc
push
into
test
xorl
add
in
out
ja
filds
or
or
add
xor
cmpsb
das
jnp
sarl
or
test
mov
and
cmpsl
cmpsb
add
mov
add
dec
pop
dec
xchg
pop
xchg
test
xor
and
xchg
pop
orl
movsb
in
arpl
ja
mov
mov
lahf
push
jecxz
push
out
xor
inc
mov
mov
aas
add
jbe
jecxz
mov
adc
xchg
xor
sbb
sti
add
scas
or
jg
dec
pop
pop
lods
adc
jle
subl
lea
cltd
dec
arpl
dec
dec
jl
inc
xchg
dec
mov
mov
sub
dec
loope
test
movsb
sub
adc
scas
and
xor
jg
mov
add
in
clc
out
dec
xchg
pusha
movsb
enter
dec
sbb
les
iret
push
das
jecxz
cmp
xchg
push
jl
mov
add
scas
test
in
inc
push
or
push
add
add
add
sbb
in
lret
pusha
test
pop
or
mov
pop
fdivrs
lahf
shl
call
pushf
insl
mov
in
ds
add
cltd
sub
or
popf
pop
sbb
fldl
pop
push
imul
xchg
in
or
mov
fsub
sarl
pushf
mov
rorb
xor
in
les
popa
cmp
sbb
xchg
mov
repz
mov
cli
adc
and
mov
sub
stos
cmp
pop
movsb
pop
cmp
cmp
pop
repnz
flds
and
mov
out
or
sbbl
mov
mov
scas
sbb
fs
inc
inc
lret
jmp
ja
mov
fs
push
xchg
cs
push
push
jmp
insb
mov
inc
add
mov
mov
inc
mov
mov
jg
neg
pop
daa
inc
andb
add
add
add
sbb
dec
jbe
loopne
flds
loop
into
scas
fst
jg
stos
mov
add
popa
add
add
rol
repnz
mov
push
jns
ja
loop
push
sub
add
jb
in
inc
stos
push
out
repz
xor
clc
push
jne
jnp
lea
stos
outsl
mov
decl
imul
adc
push
jp
loop
inc
jecxz
sbb
loop
iret
out
lahf
repz
in
lods
xchg
dec
in
xchg
sbb
je
repnz
in
adc
in
pop
fidivs
je
jmp
stos
mov
xor
mov
cmc
inc
sub
adc
xor
push
fstl
adcl
ja
in
int
inc
fstl
cmpsb
or
mov
fs
push
mov
cmp
xor
pop
imul
daa
cmp
sti
jg
cmp
je
ss
adc
adc
add
add
add
sti
sbb
or
ret
repz
mov
mov
xchg
fmuls
xor
les
dec
ret
and
sub
mov
inc
mov
dec
jnp
sbb
jns
mov
fs
lock
add
nop
sub
js
cmc
and
fs
negb
fst
mov
xor
or
mov
sub
push
pop
dec
fldl
pop
in
cltd
mov
sub
stos
inc
stos
cmpsb
mov
fs
sub
jmp
dec
xchg
cmp
cli
pop
fsubrs
fucomp
pusha
push
lcall
push
ja
lcall
es
out
push
mov
in
es
jns
ret
push
pop
jb
jmp
stos
inc
mov
dec
sbb
fisubrl
inc
xor
aaa
lods
or
sub
jp
mov
lret
xchg
mov
sbb
scas
aam
jnp
fstp
fcompl
imul
aas
lock
add
add
add
fstps
mov
mov
mov
sahf
xchg
xchg
popa
cmc
xchg
xlat
jecxz
cmpsb
sbb
pop
and
int
mov
jb
dec
push
fisttpl
jl
sub
js
leave
push
or
lods
push
push
lods
leave
xlat
out
and
mov
movsb
sub
mov
stos
test
jmp
popf
dec
andb
lea
les
and
pop
cmp
in
pop
out
xchg
or
fs
cli
and
out
push
cltd
dec
loope
mov
lods
mov
sub
add
xor
mov
mov
inc
gs
test
pop
arpl
lret
xor
ficoms
cld
cmp
mov
xchg
push
out
mov
call
lret
pop
cmp
xchg
shlb
or
mov
fbstp
and
or
mov
inc
adc
jl
and
jnp
sbb
popa
sbb
loop
mov
jno
std
outsl
mov
add
sub
adc
add
add
add
ret
outsb
arpl
mov
sub
aas
mov
xorb
mov
push
nop
mov
bswap
sti
mov
cmp
cmp
xchg
adc
jmp
fisubs
sbb
iret
iret
xchg
xchg
scas
insl
cwtl
push
xchg
jp
rolb
je
mov
js
loop
adc
sahf
push
push
xor
frstor
int
int
sbb
cmp
mov
adcl
fildl
inc
imul
les
iret
jge
fstps
cmpsb
fidivrs
and
cwtl
data16
pop
jb
popa
cmp
sbbl
ficoms
movsl
push
pop
or
inc
ret
or
pushf
sbbb
or
inc
lcall
push
jg
lret
jp
in
cmp
lock
mov
sbbb
loope
jmp
fnstsw
lea
add
add
add
sbb
mov
imul
dec
or
cmc
sbb
stos
js
roll
ja
stc
scas
aad
repz
jecxz
shlb
inc
out
lcall
push
mov
cli
ljmp
mov
mov
hlt
sub
fsubl
rorb
xor
mov
popf
lahf
ss
xor
es
roll
sub
lahf
pop
inc
mov
cmp
cmp
or
les
xchg
push
sbb
int
out
hlt
cwtl
pop
dec
sbb
mov
es
sub
cmp
or
fidivs
mov
movsb
fnstenv
divb
xor
lcall
mov
leave
xor
mov
loop
fmuls
enter
adc
addr16
push
jne
dec
addr16
dec
int3
mov
adc
jl
in
xor
xchg
lds
rcll
mov
add
add
aas
mov
mov
popf
mov
inc
xchg
imul
loopne
cltd
xor
arpl
dec
sahf
xor
mov
data16
test
or
xlat
stos
js
add
in
or
pop
pop
jb
xchg
sahf
sub
dec
mov
xchg
sub
sbb
fiaddl
cmpsl
loope
mov
adc
sbb
and
mov
ret
jns
fsub
xchg
pop
aad
xlat
push
mov
jmp
jno
fnstsw
pop
pop
filds
xor
adcl
dec
enter
pusha
ljmp
xor
jmp
and
loopne
mov
fs
ret
xor
dec
lds
push
inc
fdivrs
and
cld
and
mov
call
xor
push
out
fs
add
xor
loopne
push
test
movsb
xor
add
add
cli
inc
jg
int
xchg
lods
or
dec
pop
andl
add
add
add
push
pushf
xor
int3
out
or
lcall
xor
pop
ljmp
lods
fldt
mov
scas
roll
push
addr16
xchg
pop
and
mov
out
stos
int
dec
subb
inc
in
xor
rcrb
xchg
add
ds
ficomps
mov
xorl
adc
cmpb
pop
fs
adcl
pop
sbb
jb
sti
xor
out
add
lret
pop
xchg
jo
out
neg
stos
mov
push
xor
sub
insb
je
pushf
mov
jns
repz
lods
aad
lods
arpl
in
cmpl
jp
iret
mov
mov
inc
jge
cmpsl
std
sbb
popf
imul
into
dec
and
jmp
cli
cmpsl
repnz
inc
mov
adc
jno
jp
lock
std
cmp
jle
fistpll
ss
cmp
or
add
add
add
inc
sbb
sti
or
xchg
sahf
repnz
mov
xchg
and
mov
in
ljmp
mov
inc
lcall
xlat
mov
add
or
je
fisubrl
xor
leave
inc
inc
sub
xchg
daa
mov
xchg
xchg
movsl
add
movsl
jg
rorb
out
hlt
aas
mov
xchg
movsb
mov
xchg
fwait
push
mov
rolb
mov
cwtl
outsl
test
xchg
mov
xor
push
jne
sbb
sti
mov
enter
out
out
jecxz
dec
inc
ret
jmp
mov
lods
popf
test
push
ljmp
out
xor
arpl
push
xchg
mov
ljmp
shrl
subb
push
mov
dec
push
inc
imul
xchg
or
mov
leave
fwait
ljmp
or
es
xor
mov
and
add
add
iret
xlat
ficompl
inc
xchg
cli
insl
jge
pop
add
add
add
mov
leave
std
xor
cmp
icebp
out
push
hlt
xchg
mov
std
dec
pop
mov
shl
sub
pop
mov
mov
ljmp
pop
cli
jmp
mov
insb
cwtl
mov
dec
scas
call
jmp
mov
jge
mov
sub
adc
or
rol
je
mov
mov
ret
push
add
addb
rorb
xlat
jno
rdtsc
rcl
mov
jmp
insb
pusha
clc
shrb
jg
cmp
cmpsl
push
and
fisubrl
ficoml
sub
popf
mov
loope
pop
dec
notb
in
or
jnp
arpl
daa
lods
mov
sbb
pop
std
stos
add
les
fcoml
mov
mov
inc
ficomps
and
jae
inc
sub
mov
sub
mov
leave
cmpsb
cmc
lock
icebp
inc
out
inc
fadds
add
add
sub
iret
outsb
jmp
push
test
popf
outsl
xchg
add
add
add
cmp
test
scas
mov
in
aad
push
push
pop
xor
andl
cmp
scas
pop
in
arpl
or
adc
mov
push
fsubr
enter
dec
popf
in
adc
insb
aaa
xchg
xor
sbb
adc
xor
mov
pop
je
std
adc
icebp
mov
adc
push
adc
mov
or
pop
jle
lea
pop
push
out
pop
sub
sub
push
lahf
insl
daa
jle
lea
loope
sub
enter
dec
cmp
ja
lock
mov
jecxz
lock
mov
mov
push
add
ret
push
pop
insb
div
stos
adc
scas
mov
xor
mov
std
xor
adc
bound
clc
cmpsb
in
test
mov
xchg
sub
out
sbb
std
sbb
stc
cld
or
xchg
shll
sbb
add
add
add
jle
mov
nop
movsb
adc
sahf
mov
cmp
jno
cmp
sub
aam
jl
xlat
xchg
cmp
pop
mov
imul
xlat
pop
test
xlat
pop
fwait
cmp
jno
add
andl
mov
pop
ret
mov
and
jnp
jae
xor
lcall
sti
mov
outsb
push
cmpsb
jp
push
jo
mov
cmp
mov
mov
and
fadd
cli
add
adc
leave
fsubr
sbb
inc
out
or
mov
xor
int
insb
push
xchg
ja
sub
rorb
push
push
xor
and
xlat
dec
mov
xor
cmp
leave
dec
stos
mov
enter
ds
push
xor
pop
add
mov
sub
test
dec
shlb
mov
cmp
xchg
and
stos
and
fldenv
cld
or
adc
add
add
pop
test
scas
repz
cld
adc
sbb
add
add
add
mov
out
sbb
cmp
cmp
pop
or
mov
jne
out
sti
sbb
mov
push
xor
push
or
or
cmp
je
xchg
cmp
scas
lds
in
mov
or
test
test
push
push
jo
test
xchg
pop
sbb
jb
test
ret
pop
sbb
jmp
aad
add
out
pop
adc
lds
iret
push
mov
std
push
sarb
and
pop
mov
cwtl
jnp
loop
or
lds
cmp
pusha
and
ljmp
sbb
repz
test
roll
aam
sbb
cmpsb
shl
cmpsb
mov
dec
lods
insb
pop
or
aas
adc
pop
xor
push
imul
lds
mov
jge
cltd
lods
sbb
aaa
shlb
add
mov
dec
pushl
ljmp
add
add
add
pop
negb
test
xchg
or
jmp
sbb
xchg
jnp
popf
mov
ljmp
xchg
insb
mov
sub
hlt
sbb
or
clc
outsl
cmpsl
jno
sti
ffree
push
mov
xchg
mov
cmc
adc
xor
scas
mov
cmp
mov
data16
imul
push
mov
jnp
lret
jmp
or
and
lods
xor
lea
sar
or
inc
mov
lock
fldcw
cmp
xchg
outsl
hlt
sbb
repz
pop
test
sbb
fs
adc
pop
xlat
or
mov
cltd
jmp
mov
outsw
xor
lea
ja
jae
mov
stos
inc
es
xchg
mov
and
lcall
scas
ljmp
xchg
invd
jbe
test
mov
iret
data16
mov
add
add
inc
ja
pop
aas
dec
push
repz
addr16
add
add
add
push
push
sbb
xchg
push
add
in
sti
addb
fsubrs
mov
mov
jecxz
push
ret
dec
xchg
push
daa
pop
xchg
push
cmp
and
add
mov
and
aaa
je
adc
jo
test
xor
lret
jae
sub
inc
mov
xchg
adc
add
loopne
clc
cltd
or
xor
rcll
adc
mov
mov
mov
sub
cmp
stos
int3
mov
jle
pop
cmp
xorb
mov
out
pop
mov
jno
sbb
stos
shll
pop
daa
xchg
int
inc
dec
add
sub
inc
lcall
cmc
insb
or
pop
mov
fcmovbe
fdivrs
dec
in
aam
jle
push
pushw
stos
jb
xchg
or
out
cli
push
rolb
negl
lods
mov
push
add
add
xchg
jae
ja
div
mov
movsb
xorl
add
add
inc
cmp
movsl
push
loopne
leave
sub
and
push
add
push
xorl
shr
int3
xchg
mov
cmp
jg
and
inc
inc
movsl
xchg
inc
push
daa
adc
out
inc
xchg
add
add
rolb
shr
movsb
xchg
xchg
or
jg
arpl
fisttpll
pushf
fsubp
jmp
add
pushf
and
movsb
and
jmp
lods
cmp
mov
ss
dec
add
and
inc
fldenv
fstpt
stos
and
mov
and
mov
imul
sub
imul
sub
jp
test
inc
int
fucomi
and
ret
xlat
fs
aam
adc
addr16
sub
into
sti
jge
test
out
mov
or
mov
add
imul
in
ja
das
mov
sbb
xor
cli
std
jg
push
pushf
dec
sti
sub
xchg
addr16
add
add
add
adc
mov
loop
sbb
dec
adcl
pop
mov
clc
cmp
ds
cmc
xchg
mov
xchg
mov
cmp
sub
cmp
push
pusha
sbb
fisttpll
out
fildl
dec
pop
out
mov
int
rcl
fisubrs
jnp
daa
mov
xchg
or
cs
popa
pop
adc
push
push
dec
jno
jne
clc
xor
pop
into
ret
movsl
outsl
dec
shrb
or
xchg
imul
test
cmp
push
loope
ret
sbb
xchg
dec
xchg
sub
or
jo
test
or
mov
cmp
insl
leave
sbb
or
or
fldenv
push
gs
add
or
data16
stos
clc
pushf
mov
cwtl
mov
or
imul
adc
or
sub
mov
add
add
add
add
mov
std
incl
sbb
cwtl
nop
sti
pop
addr16
add
add
add
mov
mov
leave
fmul
mov
mov
movsb
push
cli
cmc
mov
icebp
mov
out
adc
xorb
mov
mov
les
addr16
fcomp
mov
or
and
push
hlt
dec
jmp
sbb
loopne
or
cld
scas
je
jle
push
sti
inc
push
jnp,pn
hlt
sbbb
dec
dec
add
jmp
pinsrw
int3
int3
pop
test
jb
hlt
fwait
pop
or
out
std
mov
sbb
hlt
push
xchg
enter
in
cs
in
fwait
or
jg
sub
xchg
mov
mov
imul
and
sub
cmc
xchg
fwait
dec
je
jns
sbb
repz
out
je
and
push
fdiv
int
mov
mov
cld
add
inc
lcall
add
add
es
jg
pop
or
xor
out
lret
add
add
add
mov
push
in
mov
loopne
aad
adc
push
scas
fists
dec
adc
jg
inc
outsb
sbb
sahf
repz
adc
ret
ret
fcomi
stos
mov
test
inc
push
cltd
push
pop
repz
jns
cmp
mov
addr16
hlt
pushf
and
push
adc
cwtl
xor
cmc
xchg
xchg
das
ljmp
fwait
mov
call
xor
push
pop
repnz
add
jmp
jno
dec
mov
xchg
in
mov
pop
jns
out
rcll
out
mov
lods
mov
popf
or
cmpsb
mov
jp
pop
fwait
push
es
int
outsb
outsl
lods
pop
notl
jns
inc
sub
xorl
lcall
cld
je
orl
mov
cli
push
jo
imul
popa
rorb
add
add
or
dec
push
cmp
and
add
add
add
sahf
push
movsb
insb
rolb
retw
ret
lods
insl
adc
addl
nop
je
xor
nop
leave
ljmp
add
xchg
sbb
xchg
movsl
insb
je
jle
nop
ss
mov
sub
cltd
mov
test
cld
xor
push
cmp
adcl
xchg
cmp
outsb
sahf
mov
sbb
imulb
pop
mov
xor
in
or
sti
or
js
push
mov
and
loop
inc
jns
mov
mov
in
shl
dec
inc
js
adc
cmp
lods
pushf
test
gs
pop
dec
mov
xchg
push
cmpsb
aas
xchg
jg
scas
and
mov
mov
test
lods
repnz
int3
pop
jecxz
in
cmpsb
fucomip
xor
push
mov
or
outsb
mov
sbb
mov
and
dec
pop
mov
nop
sbb
or
jne
xor
mov
mov
and
add
add
add
hlt
lahf
xor
fimull
jo
rorb
nop
and
add
jg
jne
fstl
pop
cs
pusha
movsl
sbb
xchg
bound
arpl
push
and
jo
jb
std
clc
rolb
xchg
bound
sar
addr16
aam
push
jb
push
pop
lahf
inc
cmpsl
xorl
jo
cmp
and
jns
mov
push
xor
repnz
cld
cmpsb
std
mov
icebp
out
cmp
sbb
int
add
enter
cmp
int3
aam
les
sbb
inc
subb
imul
jno
sbb
std
rolb
mov
test
xchg
test
aas
sub
xchg
insb
movsl
out
inc
lods
fs
cli
xor
add
inc
sbb
incl
xor
fs
inc
fiadds
xchg
xor
fstl
inc
lret
or
mov
lds
add
ficoms
stos
sbb
call
mov
and
add
add
add
pop
mov
adc
fs
push
cwtl
fstl
les
add
dec
punpckhdq
gs
xchg
sbb
sub
out
iret
jnp
pusha
pop
mov
test
movsb
adc
adc
inc
jno
ja
mov
sbb
test
int
dec
pop
mov
sub
fwait
xor
dec
adc
mov
sarl
es
ret
movb
xor
sub
movsb
sub
mov
pusha
or
sbb
pusha
xor
aas
inc
dec
xchg
lods
in
pop
loope
or
push
rorb
imul
insb
push
sub
jp
in
dec
outsb
aad
sub
int3
sar
cwtl
sbb
jl
stos
and
adc
adc
popf
xlat
lods
or
and
mull
cmpsb
xor
popa
jo
add
xchg
mov
out
stos
jge
or
and
add
add
add
incb
push
mov
jnp
fcmovbe
and
dec
seto
and
and
mov
stos
dec
and
mov
aad
das
jle
inc
and
daa
lods
jae
arpl
jo
aad
cmp
loop
lods
scas
xchg
and
imul
outsb
inc
int
xor
js
sub
push
repz
or
aad
inc
cmp
dec
and
test
dec
shl
je
stos
add
lret
imul
pop
jno
push
pop
out
mov
push
sbb
fdivl
dec
int3
or
aam
mov
xor
movsl
adc
jmp
pushf
cmpsl
or
mov
repnz
outsb
sub
sbb
lds
jle
lret
mov
mov
out
sbbb
mov
les
jg
cmp
bswap
jae
xchg
insb
adc
bnd
test
or
loope
dec
or
out
xchg
iret
push
aas
ds
vpackuswb
add
sti
lret
mov
or
sarl
stos
xchg
rclb
popa
mov
xchg
mov
cmc
gs
mov
add
fisttps
cmp
xor
add
sbbb
pop
mov
sub
mov
mov
loop
jmp
pop
push
into
xchg
shlb
push
or
push
das
imul
dec
leave
xchg
xor
cmp
test
aas
cmp
stos
stos
movsl
cmpsl
jno
data16
lock
add
jg
aad
push
inc
stos
stos
jg
cmc
cli
or
scas
data16
sub
jo
jl
in
sub
in
jmp
scas
int3
mov
xchg
mov
popf
das
cmp
sub
mov
loop
test
insl
add
adc
xchg
shlb
stos
cld
cmpsb
lret
xorl
cld
jns
cs
fs
outsb
int
mov
push
xchg
adc
adc
pusha
cbtw
pop
push
out
add
add
in
add
cmp
out
loope
jns
pop
or
andb
add
add
add
adc
add
scas
es
sbb
shll
sub
nop
mov
test
and
outsb
in
out
adc
lret
lods
sbbl
push
mov
push
jns
cmp
dec
and
pop
cmp
sysret
xorl
repz
jae
inc
xor
jae
jno
aas
ds
negb
int
pop
call
sbb
mov
mov
xlat
addr16
cmc
lea
sbb
test
add
mov
jno
test
fidivrs
mov
pop
sahf
adc
and
gs
or
cmpsb
push
popf
dec
jmp
jns
and
xor
inc
lods
loopne
repz
xlat
adc
nop
add
xchg
jo
mov
or
mov
mov
xor
mov
sbb
dec
cmpsb
mov
cmp
cltd
pop
adc
cmp
mov
jge
dec
adc
xor
cmp
add
add
lods
jg
push
mov
stc
pop
mov
add
add
add
and
push
rorl
lret
mov
test
test
js
xchg
in
sbb
insb
ja
scas
adc
popf
out
push
pop
bndldx
add
mov
test
lcall
inc
xchg
and
dec
xor
xor
push
push
outsb
xchg
jmp
pusha
repnz
jmp
stc
pop
out
sbb
mov
stos
sbb
add
jl
lret
hlt
stos
pop
cwtl
mov
sbb
js
mov
sub
and
rcr
cmp
mov
int3
xlat
inc
rol
cmp
repnz
pop
mov
test
out
ss
scas
sub
ss
adc
mov
push
push
dec
movsb
mov
es
and
mov
mov
and
cmpsl
jl
arpl
mov
xchg
repz
cwtl
pop
inc
mov
dec
idivl
cld
ret
add
int
out
sub
add
add
add
push
jecxz
cmpsb
sbb
ret
push
and
mov
adc
mov
rcll
test
jp
and
inc
rorl
mov
int
cmpl
add
ljmp
mov
xchg
dec
xor
add
in
xchg
jmp
ljmp
test
rcll
cwtl
and
in
jecxz
cltd
ds
je
xchg
push
pop
lret
lahf
mov
sub
rcrl
adc
pushf
push
shrl
mov
mov
sub
pop
nop
xchg
xchg
xor
icebp
mov
outsl
mov
sub
push
daa
out
push
xor
mov
pcmpgtb
cmp
movsl
lcall
sub
fildl
std
push
leave
aam
add
xor
jg
lds
popa
pop
lahf
pop
cmp
call
jg
xchg
and
push
or
test
aas
jg
mov
ret
mov
iret
mov
icebp
sahf
dec
mulb
add
add
add
jg
data16
or
lahf
rol
sub
jb
xor
xchg
sbb
fildl
adc
pop
scas
fisttpll
mov
push
push
ja
xor
fstpl
pushf
xchg
lcall
clc
imul
and
adcl
xchg
fs
push
fs
sub
cmp
mov
lock
jnp
pushl
fwait
push
inc
jae
cmp
push
xor
inc
std
aas
cmp
addb
mov
mov
sbb
pop
or
outsl
mov
clc
xchg
cs
aam
popa
adcb
cmc
cmp
movsb
inc
adc
and
sbb
out
enter
mov
cmc
out
fs
test
mov
fildl
mov
shll
add
shll
nop
mov
jb
jno
dec
push
cli
fs
sarb
add
or
jg
arpl
jge
das
sub
add
add
add
add
ss
mov
xor
inc
and
mov
push
adc
dec
inc
in
int3
cmp
das
test
mov
cmc
int
and
sbb
mov
add
mov
dec
sub
nop
adc
in
lret
outsl
xchg
in
push
loopne
fsubr
push
push
add
mov
stc
add
mov
adc
sbb
sar
xchg
sub
lret
inc
mov
test
aas
push
fwait
imul
pop
push
movsl
mov
xchg
sub
cld
mov
sbb
icebp
in
clc
test
push
int
rorl
xor
mov
xchg
push
lahf
or
fwait
xchg
icebp
scas
mov
xchg
je
lahf
mov
or
mov
ds
inc
lods
adc
cmpb
lock
scas
jmp
out
jnp
pushl
adc
cltd
mov
mov
push
jb
test
xor
jb
lret
mov
add
add
xor
clc
cli
clc
sarb
sti
mov
out
sub
add
add
add
mov
setb
movsb
stos
add
loopne
mov
fwait
popa
lods
std
jo
pop
shlb
inc
add
es
push
outsl
fildll
fcoml
sbb
into
sbb
adc
stos
mov
inc
inc
stos
or
xchg
inc
out
mov
pop
and
inc
in
or
pop
out
shl
ljmpw
ja
push
add
loopne
add
fisubrs
test
clc
addr16
adc
fisttps
leave
mov
movsb
ss
cwtl
cmp
dec
and
mov
jo
enter
mov
call
ret
push
mov
lods
std
sub
arpl
adc
dec
js
fbstp
sti
aaa
xchg
fistps
lcall
data16
and
push
push
dec
pop
fdivrl
cmp
mov
mov
or
cmp
test
imul
mov
movsl
mov
add
add
jnp
in
jae
insl
jbe
cmp
add
add
mov
call
cmp
dec
repz
sbb
xchg
inc
je
popf
scas
divl
cld
mov
sar
push
into
das
cmpsb
sbb
dec
inc
jl
insl
xor
pushf
dec
xchg
fisttpll
dec
hlt
loope
or
pop
leave
rcl
adc
iret
scas
mov
gs
pop
mov
dec
stos
iret
add
xor
add
decb
mov
cli
insl
test
out
stc
dec
xor
xor
adc
mov
mov
or
sbb
jo
hlt
dec
and
mov
jg
xor
lock
lret
call
fistpll
aaa
pop
mov
sbb
mov
and
mov
mov
dec
xor
jp
push
jecxz
xor
mov
shll
sbb
jbe
out
and
rcrl
ret
enter
mov
jne
mov
fs
es
data16
insb
daa
mov
pop
xlat
xor
addr16
add
jl
jnp
popa
pop
xor
shlb
dec
sbb
stos
pop
test
mov
xchg
sub
roll
jns
sahf
inc
insl
and
sub
push
cs
outsb
or
movsl
ja
push
imulb
fidivl
inc
jo
cmp
sub
stos
cmp
loop
mov
xchg
mov
inc
or
mov
aas
popf
inc
pop
cs
fistps
in
adcl
scas
aaa
movsl
je
mov
fnstenv
data16
les
jb
mov
mov
jl
jnp
mov
pop
push
shrl
jge
dec
iret
lods
int3
pop
mov
jbe
pop
sbb
add
dec
jbe
insb
adc
and
xchg
orb
pop
adc
xor
inc
out
pop
mov
ljmp
ficomps
sub
xchg
or
or
sub
mov
add
cmpsl
clc
mov
rolb
add
add
dec
mov
imul
xor
add
add
dec
ss
add
in
rclb
sub
push
adc
icebp
stos
xchg
es
mov
and
outsl
inc
imul
dec
stos
aas
jecxz
and
mov
xlat
dec
in
jmp
push
stc
xchg
or
mov
and
fimull
xor
dec
int
xor
hlt
lea
lods
mov
insl
add
shrl
js
or
jae
nop
dec
cmp
leave
sahf
pop
pop
xchg
iret
das
dec
dec
pop
pop
sub
and
and
mov
rcrb
push
inc
test
enter
jbe
mov
adc
aas
mov
repnz
mov
daa
mov
pop
sbb
pop
loopne
mov
repz
lcall
pop
add
xlat
mov
sahf
dec
jmp
or
and
pop
cmp
jns
add
add
add
and
push
sti
cmpsl
enter
push
adc
addr16
add
add
add
insl
inc
or
dec
outsb
mov
jecxz
inc
push
js
popf
notb
pop
test
jp
mov
sbb
addb
das
xor
fidivrs
cmp
dec
cwtl
testb
sub
andb
mov
push
lahf
fdivl
adc
movsl
mov
sub
lods
rcl
push
cmp
fdivrl
dec
imul
push
mov
shlb
adc
int
fwait
or
cmp
push
sbb
cmp
mov
aad
adc
mov
push
jmp
stc
lahf
xlat
or
je
xchg
xchg
repz
sarb
xchg
lcall
pop
ja
out
into
xchg
push
xchg
fwait
inc
sub
inc
fisubs
mov
or
or
test
fildl
lret
mov
and
mov
push
out
int
jnp
sub
mov
pop
dec
ret
xor
add
add
mov
std
mov
dec
push
xor
xor
add
add
add
and
adc
xchg
scas
push
push
and
movsb
xor
aas
pop
xchg
andl
lahf
xchg
push
add
movsl
stos
aam
unpcklps
lret
test
and
fisubrl
addr16
mov
sti
les
mov
xorw
inc
xchg
xorb
jge
pop
lock
add
les
dec
mov
jnp
movsb
push
jo
xor
call
pop
lret
enter
sub
lcall
xor
xor
xor
cmp
icebp
jmp
jno
jbe
mov
stos
mov
inc
dec
jae
fmulp
mov
xchg
lret
mov
lahf
gs
mov
into
cmpsl
jo
adc
add
aad
sbb
cld
cmp
js
mov
roll
add
add
and
jecxz
and
lcall
add
add
add
pop
inc
pusha
outsb
sbb
outsb
lea
enter
dec
inc
in
xor
outsb
jmp
fsubr
adc
or
xchg
pop
or
fisubs
test
rcrl
addb
in
mov
stos
inc
mov
adc
jge
lret
fstp
add
insl
dec
cmp
lahf
and
xchg
mov
ja
xor
xor
xlat
xchg
push
mov
mov
out
jo
jnp
pop
xor
leave
scas
push
xchg
fildll
popl
push
lock
dec
aad
push
sahf
mov
outsb
fsubrs
cmp
pusha
push
cmp
stos
mov
pushf
ss
jmp
cmpsl
jp
shrl
insl
dec
mov
roll
mov
dec
push
les
jb
in
fbld
outsb
fbstp
movsl
stos
dec
xor
fstpl
jp
add
add
add
xchg
ficomps
cmp
lahf
mov
out
imul
add
mov
negb
push
and
cmpsb
add
das
icebp
jp
lock
mov
lret
pusha
cli
pusha
rolb
imul
and
cmpb
fisubrs
sahf
in
out
mov
mov
sbb
cmp
mov
ja
cmp
sahf
subl
push
push
cmc
aad
out
push
xor
hlt
in
fdivr
je
mov
test
cmpsl
sub
out
jnp
jnp
clc
mov
aam
aas
nop
addr16
out
or
js
push
insl
notb
psubusw
or
fistpl
sbb
arpl
imul
xchg
icebp
dec
sbb
xchg
mov
sub
jae
cmpb
xchg
fcoms
fst
dec
pop
and
add
imul
or
adc
jne
out
iret
arpl
aas
out
pop
mov
adc
arpl
ja
sub
add
xor
xor
add
add
add
out
and
mov
cmp
loope
adc
js
ret
fdivs
arpl
in
pusha
mov
adc
nop
pop
mov
fmuls
jb
mov
mov
mov
adc
ljmp
xchg
push
test
mov
call
pop
xchg
popa
mov
jno
and
icebp
push
xchg
repz
mov
movsb
jnp
cmp
fsubrl
jbe
in
mov
and
arpl
jecxz
insl
lcall
jecxz
mov
rorl
xchg
addr16
mov
inc
in
out
xor
add
mov
fsubl
xchg
pusha
jo
xchg
shlb
inc
fnsetpm(287
inc
punpcklbw
push
xor
dec
sub
imul
ret
leave
xlat
xor
mov
lret
mov
daa
jnp
mov
push
mov
mov
int3
lcall
add
lret
mov
or
ja
sbb
addr16
add
add
add
push
lds
xchg
call
call
in
add
ror
out
jl
negl
pusha
test
and
mov
fwait
je
enter
pop
js
decl
push
scas
loope
adc
fnstcw
add
es
xor
xor
out
in
mov
js
jl
sub
arpl
sbbb
in
pop
cmp
out
fdivs
sbb
fwait
loop
dec
pop
adc
mov
ljmp
push
lock
mov
push
sahf
or
xchg
xchg
hlt
push
sbb
fcoml
dec
or
loopne
repz
cmp
jmp
das
mov
adc
push
test
test
jbe
push
adc
pop
mov
ds
inc
mov
inc
adc
orb
mov
sub
sti
pop
jge
neg
hlt
add
inc
addr16
add
adc
jne
daa
and
cwtl
subl
cmpsl
inc
add
or
jmp
cltd
xor
xor
mov
mov
rcr
mov
adc
dec
clc
pop
inc
mov
or
add
negl
jl
icebp
int3
pop
outsl
div
cwtl
add
popf
pop
jo
push
xlat
jae
pop
pop
cmc
xchg
sbb
aam
lock
add
push
mov
fwait
dec
sbb
xlat
and
int3
test
push
mov
in
pop
stc
mov
xchg
imul
fcomp
rorb
xchg
push
jmp
adc
lea
js
push
and
mov
add
adc
sub
xchg
cmp
push
push
sbb
sti
int
dec
es
or
repz
leave
dec
repz
shr
sbb
jle
les
leave
dec
in
std
mov
setge
js
in
sub
add
add
fsub
std
in
popf
in
stc
jmp
mov
cmp
add
add
incb
fildll
mov
cmpsb
call
stos
jg
dec
repz
ret
mov
pop
jle
jmp
cmp
lcall
dec
mov
inc
jl
pop
or
or
xchg
push
lods
dec
push
sbb
ja
sub
repnz
cmp
test
shll
outsl
mov
mov
mov
in
jbe
and
pop
sbb
sbb
dec
lock
into
lret
fs
out
mov
push
sti
or
pop
pop
cmp
adc
pop
lock
shrl
cld
rcrb
jae
insl
enter
outsb
orl
cmp
mov
loop
ljmp
pusha
dec
sbb
out
xor
out
xchg
jge
push
lahf
jo
sbb
lock
int3
and
test
movsb
loope
add
fildl
add
add
jp
jnp
sti
xchg
jle
jp
lods
push
xchg
mov
add
add
jl
push
repz
push
cmp
into
test
fstps
jecxz
or
test
adc
or
imul
mov
mov
inc
sbb
test
sub
dec
sbb
repz
xchg
leave
jb,pn
test
mov
repnz
mov
lcall
cmp
in
pop
ja
xor
nop
test
jecxz
mov
cmp
sub
sbb
mov
and
aas
nop
push
repnz
xchg
test
mov
popl
enter
out
dec
popa
cmpb
mov
and
mov
aam
pop
pusha
xlat
pop
loop
imul
loopne
inc
xchg
dec
pushf
lret
and
fistpl
dec
or
mov
icebp
in
xor
xor
hlt
mov
jne
inc
or
fabs
push
add
test
cmpsl
orl
sub
ret
fwait
lods
mov
push
sti
decb
mov
fsubl
add
add
add
xchg
mov
lds
add
xchg
in
pushf
clc
lret
dec
call
rorl
cmpsb
jns
pop
rcr
sub
popf
mov
add
outsb
xor
sti
push
xchg
loopne
popa
test
jns
in
icebp
fildll
stc
mov
mov
jle
jl
rcll
nop
mull
gs
jbe
sbb
dec
enter
inc
mov
sub
fists
fucomi
xchg
mov
call
mov
mov
push
dec
rorb
cmp
cmc
orl
adcl
arpl
les
inc
in
dec
out
adc
push
sahf
jmp
adc
loop
fwait
jo
mov
aas
lods
ljmp
xor
xchg
jmp
jmp
je
call
icebp
sub
sbb
scas
dec
mov
xlat
xchg
jae
orb
and
xorb
es
lock
add
push
ret
cmp
xor
hlt
inc
std
fcoms
cmp
add
add
add
pop
lahf
cs
cld
cmp
sub
das
xchg
cltd
orl
sub
lahf
cmp
mov
shr
pop
jl
adc
adc
sbb
shrl
mov
push
imul
imul
inc
test
push
jno
push
sti
push
add
dec
sbb
sub
cmp
enter
cwtl
mov
imul
adc
sti
imul
subb
shlb
ficoms
add
out
out
imul
testb
cs
daa
mov
xchg
cld
sub
fcompl
xor
std
and
jge
fidivl
loope
aaa
adc
dec
jmp
xchg
push
lret
dec
stc
sahf
push
push
mov
add
out
mov
movsb
stos
and
sub
push
and
pop
popa
popa
push
insl
dec
fldenv
hlt
iret
mov
mov
xchg
incb
ljmp
nop
inc
mov
add
add
add
js
dec
in
dec
nop
xchg
inc
js
int3
nop
push
mov
cwtl
pop
inc
jo
mov
jo
adc
sub
negb
ss
mov
sti
jno
stos
movsb
divb
popf
or
inc
xor
sbb
jp
mov
mov
pop
out
imul
movsb
sub
mov
shll
and
scas
notb
push
jo
out
imul
cmp
mov
sbb
or
je
and
out
dec
pop
lock
fidivrs
add
mov
push
jae
pop
fst
je
mov
pop
xor
rolb
and
jae
push
push
rcrb
ljmp
mov
push
cs
faddl
jb
fimuls
ret
ds
sar
inc
in
sub
mov
push
out
and
fisubrs
cs
divb
rclb
nop
lcall
cmp
add
add
add
mov
lds
mov
sbb
inc
loop
jb
data16
daa
sbb
or
cmp
dec
jns
or
and
push
fsubr
rorl
jo
mov
push
mov
loop
xor
sub
int3
outsb
bound
das
jl
orb
pushf
lds
cmp
mov
xchg
sub
xchg
jne
sbb
lods
ds
cmp
mov
inc
add
out
lea
aad
push
movl
mov
mov
ret
test
or
loopne
in
sub
pop
add
xor
xor
dec
mov
pop
out
sub
mov
cli
sbb
js
add
xor
and
shlb
xorl
addr16
dec
pop
sahf
xor
outsb
sbbl
dec
push
xor
xchg
ja
cmc
mov
xchg
xchg
or
loope
xor
add
add
jbe
idivl
or
sti
adc
add
add
add
scas
sub
data16
mov
mov
push
adc
stc
std
jp
or
js
nop
mov
xchg
jg
icebp
mov
xor
push
ficoml
jp
dec
dec
mov
bound
in
mov
nop
sub
fisubrs
std
jb
insb
xor
rclb
lcall
insl
mov
push
fwait
out
fs
push
scas
leave
in
into
push
int
outsb
xorb
sti
jg
ja
lret
pop
and
mov
hlt
adc
mov
dec
or
data16
sub
xor
test
movsl
mov
add
jo
out
loope
mov
mov
push
stc
mov
jo
inc
push
decl
fildl
imul
and
ja
out
jp
jg
pop
mov
xchg
mov
push
rcrl
inc
xor
shr
mov
sub
mov
add
and
outsb
sub
stos
fs
jmp
leave
aas
scas
fidivs
addr16
add
fistps
aaa
aaa
sub
push
push
out
andl
adc
sbb
sub
push
add
sub
or
push
lahf
scas
adc
popf
inc
aaa
outsb
dec
imul
pop
mov
mov
mov
mov
xor
jbe
ss
xor
movsl
mov
pop
dec
sbb
je
inc
dec
xor
jnp
jmp
mov
sbb
cmp
push
sub
push
fiadds
lods
orb
pushf
mov
xor
scas
out
mov
call
je
sti
xor
cmpl
jne
sahf
dec
loopne
add
or
inc
xchg
adc
cmp
xor
out
fsub
add
adc
fimull
aas
xor
rcll
incl
dec
mov
js
hlt
cmpsb
bound
mov
or
cmpsl
imul
add
les
scas
fistpll
outsl
gs
dec
or
add
add
add
or
mov
jl
sti
adc
xchg
adc
xchg
shl
sbbl
and
jb
mov
call
mov
stos
mov
or
sbbl
cmp
jge
adc
call
arpl
xchg
lock
daa
aad
cmc
das
inc
outsl
dec
sbb
sub
loope
int
sbb
fwait
daa
insl
push
test
popf
mov
cmp
mov
outsb
ror
pushf
dec
or
clc
outsl
les
mov
popl
aad
jne
pusha
lcall
inc
jecxz
clc
xchg
mull
pop
sub
jge
rorl
cmpsb
clc
and
mov
mov
pop
jo
and
scas
inc
lcall
fwait
jns
ljmp
xchg
dec
loop
jge
das
xchg
sarl
pop
loop
gs
or
xchg
sahf
mov
mov
mov
pop
and
add
add
cmp
movsb
push
sbb
lret
addr16
add
add
add
pop
nop
scas
scas
mov
jbe
xor
dec
test
xchg
xchg
push
mov
stos
mov
shll
push
mov
lea
jmp
mov
fstl
adc
dec
sbb
or
pop
imul
int3
scas
movsb
xchg
jb
xor
sbb
xchg
xchg
cmpsl
adc
pop
pushf
stos
and
or
sti
in
jmp
sbb
mov
mov
ret
pop
mov
lea
lcall
cwtl
add
jmp
inc
and
imul
testb
nop
out
lret
xchg
out
roll
test
jl
imul
loope
cmp
scas
fstpt
xor
pop
cmp
hlt
mov
jb
rcr
mov
pop
sub
fbld
cmp
jmp
loope
and
mov
mov
jns
xchg
sbb
mov
xor
pop
test
cs
push
insl
imul
cld
dec
outsl
lret
mov
out
jmp
fwait
and
addr16
add
add
add
addr16
mov
dec
and
stos
pop
cmpsb
adc
jl
rcll
mov
mov
in
dec
jecxz
in
inc
xorl
cmp
lahf
les
outsl
rcl
mov
fsubs
inc
shll
xor
xor
mov
popa
inc
popa
and
push
repz
xchg
sub
dec
jp
sub
stos
mov
xor
mov
jg
fwait
or
dec
jo
clc
and
fstpt
test
gs
lea
mov
xchg
sub
addr16
pop
incb
inc
ret
es
out
adc
jbe
sub
sub
fnstenv
scas
xorb
out
xchg
pop
push
in
adc
jecxz
xlat
shrl
faddl
sbb
mov
cli
shll
inc
inc
insb
inc
out
xchg
and
add
xchg
rolb
push
sub
add
add
enter
add
and
das
cmp
lods
repz
mov
fisttps
add
add
add
xchg
clc
jmp
jb
xchg
in
out
dec
cmp
cmpsl
cld
inc
divl
negb
arpl
cmp
insl
cmpsl
clc
jle
adc
inc
clc
scas
sub
test
mov
ficompl
pusha
mov
shrl
mov
sbb
out
ss
lock
sub
sub
xor
add
movsb
pop
push
jne
lcall
sub
dec
jg
test
out
xchg
xor
xchg
inc
mov
lds
jge
lcall
pop
bound
xchg
jno
push
sub
scas
shlb
dec
push
cmp
inc
push
mov
shll
imul
mov
or
scas
aas
xchg
add
inc
mov
mov
xlat
hlt
sbb
mov
jbe
stos
cmp
ret
and
add
fidivl
cwtl
aas
daa
push
cld
push
std
jmp
dec
push
pop
movsb
addr16
add
add
add
pop
mov
adc
pavgw
adc
mov
cmp
das
daa
stc
dec
mov
outsl
scas
inc
fsub
push
sub
mov
xorl
xor
adc
bnd
cmp
inc
pop
jbe
mov
in
clc
adc
cmp
push
jo
xor
popw
and
aad
bnd
jae
push
adc
cmp
jmp
imul
jge
adc
fnop
xor
in
sub
and
jbe
icebp
stos
xchg
pop
dec
idivl
push
lcall
adc
sub
addr16
hlt
mov
xchg
roll
in
test
cwtl
xor
inc
sbb
sbb
dec
fisubs
or
inc
mov
push
mov
add
pusha
xor
add
ja
lods
xchg
lcall
ss
fwait
add
dec
push
add
sbb
dec
push
out
aad
jbe
xchg
aas
addr16
add
add
add
jp
adc
push
fiadds
or
insb
out
cmp
test
mov
outsl
subl
mov
jne
and
jp
es
adc
adc
packsswb
xchg
ss
push
sbb
xchg
mov
movsl
adc
stos
mov
push
jo
inc
mov
and
xor
aam
movb
cmpsb
out
js
mov
cli
lret
ja
lea
and
cmp
add
inc
ret
test
icebp
mov
pushf
out
aas
cmp
inc
cmc
stos
jmp
mov
popa
ds
jnp
je
dec
dec
jg
xchg
out
push
icebp
inc
dec
mov
sar
inc
imulb
sub
xor
or
xor
xchg
test
cltd
push
stos
in
or
call
cmc
sbb
push
outsb
bound
cli
popa
and
dec
aad
pop
and
or
dec
leave
stos
add
push
mov
or
adcl
add
add
add
outsb
mov
jg
neg
dec
push
scas
pop
xchg
int
cmp
mov
pop
mov
inc
sub
sub
inc
inc
mov
cmp
mov
jp
in
loopne
mov
adc
inc
or
aas
std
mov
mov
adc
pushaw
sahf
scas
adc
mov
test
fistl
cmp
inc
xlat
push
mov
adc
movsb
mov
ljmp
sbb
push
xchg
mov
xchg
mov
sub
jns
xchg
pusha
or
pop
stos
fs
xchg
mov
mov
insb
aad
dec
jl
xor
or
cmpsl
mov
xor
test
xor
mov
xlat
jge
cs
fiaddl
pop
pop
jno
iretw
int3
jge
orb
insb
pop
jnp
iret
in
add
add
jg
xchg
orl
push
addr16
add
add
add
jmp
mov
fldcw
lcall
xor
cmp
and
add
add
scas
daa
jae
fwait
test
mov
je
ljmp
mov
out
cmp
push
dec
std
add
or
mov
fisubrl
int3
cmp
push
mov
adc
pop
fcomps
mov
push
adc
mov
das
dec
mov
push
cmc
lds
mov
and
iret
rorl
lahf
jnp
ret
ss
adc
dec
iret
dec
and
sbb
popf
outsb
je
lret
loop
pop
push
es
outsb
jno
inc
pushf
pop
insl
clc
cmp
in
lret
or
int3
jns
fnstcw
test
lcall
nop
stos
std
rclb
ret
int
dec
pop
mov
fwait
xor
mov
cmpsl
adc
scas
dec
out
ljmp
sbb
pop
sti
ss
test
and
dec
lret
jmp
imul
aaa
je
xor
addr16
add
add
add
jmp
xchg
add
xorl
rcll
xchg
xchg
sbb
xor
or
es
jmp
cmc
jns
jle
pop
mov
and
mov
dec
cli
rclb
dec
xchg
mov
push
sbb
out
bound
mov
and
into
jns
dec
or
into
dec
cmp
pop
cmp
in
popa
nop
fdivl
push
pushf
andl
js
pop
je
fdivrs
ds
cwtl
and
pop
fists
es
out
fxch
jmp
and
push
jle
mov
out
dec
mov
xor
outsb
dec
lcall
mov
cmp
xor
push
int
adc
xlat
pop
xchg
test
cmpsb
dec
or
subb
or
je
xor
shlb
push
adc
jae
mov
inc
add
add
lds
cmc
cwtl
xchg
push
sub
xchg
addr16
add
add
add
adc
xor
xor
push
or
mov
mov
add
mov
into
or
loopne
pop
ja
mov
push
cmp
jmp
aas
dec
scas
into
cmp
jnp
mov
jb
aam
pop
dec
jg
mov
cs
mov
fistl
aas
call
mov
xchg
inc
cmp
dec
negb
dec
stc
les
push
mov
ja
xchg
sbb
sub
inc
nop
sbb
sub
in
or
mov
jne
inc
mov
sub
daa
out
push
mov
mov
push
mov
sbb
jmp
incb
cmp
jg
cmp
aas
jns
in
iret
filds
push
fldln2
in
dec
pushf
jg
ja
push
imul
mov
fisttpll
insl
jg
shrl
repz
movsb
mov
jle
xor
insl
popa
adc
lret
add
sub
jns
xor
jg
lock
add
add
add
add
shrb
push
xchg
push
mov
xchg
es
mov
adc
es
xor
fs
pushl
inc
inc
adc
inc
fildl
test
or
jae
and
dec
pushf
mov
popf
into
mov
out
lea
xor
sub
dec
sub
movsb
inc
ror
push
push
push
or
jmp
sbb
pop
cmp
shlb
fwait
jl
mov
test
push
push
sbb
dec
push
xchg
bound
ds
iret
std
pop
cmp
test
loop
push
icebp
jnp
sbb
xchg
lret
xor
and
lea
fistpll
push
mov
adc
cmpsl
jg
lahf
push
ss
cmp
add
push
push
push
imul
sub
mov
jecxz
jge
jb
scas
sbb
mov
fisubrs
mov
jecxz
mov
js
ret
jg
decl
rol
jp
clc
mov
add
add
add
jmp
mov
imul
and
add
mov
add
cmc
out
inc
cmp
mov
add
fadds
sti
fidivl
or
ret
add
in
adc
add
jae
lret
cs
popf
outsb
in
hlt
pop
fadd
repz
jecxz
jle
insl
repnz
cmc
dec
dec
aad
inc
xchg
inc
sub
jg
jo
mov
addr16
mov
out
js
inc
cltd
inc
leave
pop
add
pop
add
fbld
addr16
push
adc
stc
add
mov
aas
add
inc
cmpsb
into
mov
cmp
jmp
outsb
mov
or
push
int3
mov
clc
push
arpl
loope
daa
es
jmp
clc
aad
nop
mov
out
xchg
popa
cld
jo
or
dec
fcoml
jbe
mov
jb
pusha
sub
dec
cmp
pop
cld
setae
mov
sbb
sbb
stc
and
add
adc
mov
out
aad
add
pop
addr16
add
add
add
insb
nop
das
push
jl
mov
xlat
jb
dec
inc
cmp
and
add
jp
cmp
add
ljmp
leave
test
pop
aad
mov
insl
imul
push
or
orl
pop
dec
mov
pop
int3
clc
scas
xor
push
fdivl
xchg
jle
or
fnstenv
inc
xor
xchg
mov
inc
inc
jle
xor
into
shl
add
mov
mov
add
mov
loopne
test
out
cs
sub
fists
in
xor
inc
xor
test
pusha
inc
sbb
clc
daa
mov
pop
popa
and
sub
jb
popf
gs
imul
push
sbb
sbb
xor
push
pop
mov
lret
test
push
jp
test
and
jne
pop
imul
add
lahf
fdivrl
inc
icebp
hlt
gs
dec
adc
cmp
add
add
add
adc
pop
mov
insl
pop
jnp
stos
pop
popa
sub
ss
shrb
push
fimull
loop
shrl
jecxz
and
dec
mov
mov
ss
mov
add
lds
movsb
jbe
repz
sbb
outsl
pop
jbe
in
repz
insl
sub
std
cltd
ss
popf
push
mov
jle
mov
insb
xchg
sbb
movsb
iret
push
lret
or
xor
xlat
or
mov
cmp
ret
push
cmp
xchg
lods
in
sti
add
movsl
mov
les
and
mull
add
loope
mov
adcb
in
sarb
inc
mov
lcall
mov
xchg
cmp
mov
xchg
or
divl
out
fistpl
jmp
frstor
cwtl
xor
mov
cmp
add
add
aas
gs
pop
repnz
dec
add
add
add
cmp
fistl
cmp
cld
jno
add
repz
cld
rolb
dec
iret
sbb
mov
js
add
cmp
popf
arpl
mov
cmpl
dec
mov
jp
imul
insb
sbb
out
fdivs
pop
mov
or
popf
dec
int3
arpl
sar
out
insb
and
lahf
andl
sub
jo
lcall
add
int
adc
push
test
lds
daa
xchg
add
test
add
inc
ja
ja
mov
cmp
sbb
ret
mov
aaa
mov
xchg
out
packsswb
test
cmp
xor
shll
int3
pop
fidivrl
test
cmp
jmp
pop
cmp
pop
dec
pop
fst
into
out
cmp
call
mov
adc
sbb
lcall
mov
out
fisttpll
lock
dec
addr16
add
add
add
pop
push
rclb
cli
out
incl
mov
fcmove
cld
inc
cmp
jl
lcall
into
in
jo
dec
adc
and
push
jp
test
mov
lea
addr16
mov
fs
test
jne
fnsave
cmpsl
shrb
pop
inc
into
cltd
ljmp
push
add
cmp
and
push
jl
push
or
fiadds
pushf
sbb
pushf
adc
pusha
add
push
push
cmc
push
cmp
cmp
outsb
and
mov
mov
notb
dec
add
mov
mov
bound
jmp
sub
ret
pop
xchg
andb
jmp
je
leave
jge
and
mov
mov
fcom
cwtl
sti
inc
cmp
cmp
negl
jecxz
aad
sub
cmp
fildll
mov
ljmp
add
add
add
adc
loopne
dec
sub
mov
cmp
jmp
xchg
sbb
mov
stc
pop
int
mov
mov
push
cwtl
cld
xlat
adc
bnd
popa
pusha
icebp
push
push
push
lahf
movsl
push
xor
mov
jne
inc
andl
imul
mov
sub
mov
roll
loop
clc
pop
jne
aam
leave
push
stos
add
call
sarl
scas
out
outsl
in
les
cmpsb
ret
push
in
in
cmp
add
icebp
call
xchg
xorl
stos
inc
xchg
mov
fstps
sbb
jl
sub
dec
cld
cmp
mov
leave
in
notb
pop
mov
insl
notb
cmp
push
sahf
popf
setle
das
fcomi
ss
jg
aas
and
pop
xchg
in
shrb
cltd
movsl
mov
adc
shrl
bound
push
fnsave
fisttpl
mov
push
sbb
jmpw
fnstcw
jo
sahf
jb
lods
test
addr16
add
add
add
mov
outsl
mov
mov
inc
movl
sahf
sub
sbb
outsl
or
mov
and
pushf
jae
icebp
insb
mov
inc
movsl
xchg
or
fimull
pop
and
cwtl
sbb
dec
aas
insb
pop
icebp
push
adc
ror
pop
xchg
in
scas
jmp
je
cmc
push
jb
imul
mov
or
in
lret
out
push
sti
enter
sbb
enter
sbb
comiss
jae
add
push
data16
inc
adcb
jp
xchg
or
pop
mov
arpl
shlb
cmp
xorb
mov
xor
lock
xor
ds
fadd
dec
jbe
pop
call
popa
je
cli
testl
filds
add
add
imul
out
mov
mov
lahf
hlt
addr16
add
add
add
icebp
sahf
inc
aas
dec
test
insl
stos
imul
js
sbb
inc
inc
pop
dec
mov
adc
jno
sbb
xor
push
xchg
stc
aam
fbld
inc
jg
adc
adc
test
xor
lods
mov
jbe
mov
orl
inc
std
jbe
cltd
in
sub
add
int
mov
mov
negl
int3
adc
clc
inc
mov
and
pop
sbb
ret
cli
roll
lea
inc
hlt
inc
pop
dec
push
add
leave
pop
aas
mov
cmp
mov
lcall
data16
imul
cmpsl
adc
xchg
inc
cmc
mov
sbb
inc
xor
out
jbe
mov
cs
mov
cld
cltd
andl
into
hlt
test
int3
jbe
subb
sub
push
mov
test
js
add
dec
stc
mov
ljmp
addr16
add
add
add
aam
push
mov
sahf
loope
or
test
mov
lcall
scas
jae
insb
xchg
or
jp
hlt
ret
or
dec
dec
pop
jp
mov
clc
adc
or
add
popa
push
neg
jg
inc
ja
jae
in
dec
or
clc
xchg
addl
insb
in
stc
jecxz
push
jg
add
or
rcr
pop
jl
jecxz
rorl
mov
add
ret
insl
hlt
fsts
repz
insl
stos
popa
lret
loop
pop
hlt
lods
repz
or
pop
addr16
adc
aas
loopne
xchg
int
insb
aas
sub
xor
pop
and
cwtl
mov
mov
xchg
inc
mov
fstl
jge
xlat
int
rorb
mov
hlt
sub
or
or
and
lea
pop
xchg
std
and
iret
add
pop
adc
mov
sub
out
xchg
cmp
jle
jg
cld
lcall
aam
push
add
add
add
cmp
mov
aam
or
pop
jmp
mov
divb
push
shr
test
cld
test
cmp
mov
mov
outsb
sbb
iret
std
inc
pop
jbe
adc
push
xchg
cmpl
iret
ror
loope
jmp
push
xchg
ror
cli
adc
cmpsl
pop
push
orb
and
xchg
je
in
add
push
adc
add
sub
gs
push
mov
inc
sbb
push
dec
popf
mov
outsl
xor
aaa
xchg
fnstcw
xor
lret
mov
dec
push
pusha
lods
mov
mov
stos
xor
sbb
sbb
shll
cli
pushf
push
xor
push
je
dec
xor
xchg
sar
or
cmp
sbb
pop
cwtl
sbb
sbb
in
mov
pop
mov
ret
jge
shr
and
loop
pop
int
xchg
pop
mov
out
in
jmp
mov
xchg
mov
pop
lret
stc
addr16
add
add
add
pop
out
xor
sarl
fucomip
pop
add
dec
icebp
cltd
adc
sub
mov
orl
or
jl
mul
mov
leave
and
pop
adc
ljmp
jno
xchg
jge
aaa
push
ljmp
orl
in
daa
push
stc
popa
fcompl
popa
leave
repnz
leave
push
adc
xchg
les
daa
or
push
mov
cmp
pop
dec
dec
fldt
div
int3
addr16
jge
adc
outsl
cmc
inc
mov
in
push
adc
xchg
movsl
mov
psrlq
ret
das
daa
aam
xor
xor
sbb
sub
lahf
cltd
dec
push
imul
aad
cmp
mov
imul
jmp
mov
jmp
data16
icebp
mov
lret
push
jb
add
add
inc
mov
push
push
jmp
push
mov
sbb
add
add
add
jne
inc
iret
addr16
in
cmp
fldenv
ret
shll
call
aas
push
xor
rdseed
hlt
pop
gs
movsb
sub
insb
dec
dec
mov
cmpsb
inc
lcall
xor
lret
call
int3
mov
cmp
jae
adc
push
push
pushl
push
and
shrl
fnsetpm(287
ret
arpl
mov
mov
xor
fnstenv
rcll
inc
sub
ret
imul
fsubrs
in
xchg
inc
fs
xor
dec
testl
sub
ret
sub
jg
aas
movsl
push
inc
xchg
push
psraw
add
mov
jp
or
mov
jb
jae
jge
inc
xchg
lcall
pop
stc
mov
fcmovu
cmp
pop
pushf
pushw
mov
call
cmpsl
inc
dec
push
mov
jecxz
mov
mov
sub
dec
test
fsubrl
mov
out
cmp
ret
or
mov
push
add
add
add
jecxz
xchg
pop
pop
stc
cli
mov
jbe
jne
xchg
sub
adc
jge,pn
or
adc
jae
out
mov
imul
dec
orl
sbb
xchg
cmp
leave
push
ret
jmp
jns
and
lods
jo
fstpt
adc
cmp
out
xchg
xor
std
pop
adc
lds
mov
out
push
pop
cmp
or
stc
and
adc
roll
cmc
jecxz
mov
fmuls
cmp
aaa
cmp
xchg
ja
sub
jmp
scas
jge
jns
sahf
icebp
xlat
filds
stos
pop
and
jno
pop
or
pop
push
xor
pop
mov
out
movsl
cmpsl
pop
push
cli
call
in
xchg
flds
adc
and
or
or
push
repnz
fcomi
dec
es
fwait
nop
jb
pop
lea
add
add
push
shll
out
pop
pop
pushf
push
lcall
add
add
add
into
jl
cs
mov
push
jo
xor
xchg
mov
loope
sub
mov
cs
mov
xchg
mov
pop
test
inc
inc
xchg
mov
adc
inc
add
adc
mov
push
cmp
mov
push
lods
and
push
add
adc
repz
xor
jge
mov
cwtl
pop
jmp
fldt
dec
cltd
arpl
add
gs
xchg
mov
pop
dec
mov
xor
cmp
pop
aas
addr16
jbe
xchg
insb
mov
and
roll
push
mov
xor
popa
dec
sbb
outsl
inc
push
test
or
icebp
pop
push
sub
test
sub
adc
inc
cmc
mov
push
minps
inc
std
js
xchg
mov
sbb
out
inc
jp
cmp
add
out
lcall
hlt
mov
pop
ss
push
add
add
add
jae
loop
adcb
call
outsl
mov
scas
jno
shlb
jns
mov
pop
xchg
and
fcmove
js
cwtl
out
push
js
lret
inc
sbb
shrl
arpl
dec
mov
pop
data16
mov
sub
stc
jl
jno
inc
or
mov
jge
shll
mov
or
ret
test
fnstcw
xorb
adc
iret
jbe
rorl
or
sbb
fsubrl
out
jnp
popf
mov
cmpsl
imul
pop
pop
call
daa
stc
lds
je
sbbb
mov
xchg
lret
xor
addr16
out
push
mov
pop
int
mov
push
mov
cmc
mov
or
aaa
mov
adc
int
or
bound
imul
push
arpl
addr16
add
add
add
cs
lods
pop
fildll
jae
in
frstor
sti
insl
lret
xchg
mov
push
inc
push
mov
cmpl
arpl
pop
push
sbb
data16
cwtl
and
scas
inc
or
jo
push
pop
inc
or
mov
and
cs
xor
dec
lea
mov
pop
sub
out
dec
push
test
ds
sub
xor
mov
jo
pop
jb
hlt
add
xor
push
lock
adc
add
sub
imul
sub
imul
jbe
xchg
fsubrs
xchg
lods
and
sahf
imul
push
out
cmc
iret
loope
add
shl
add
adcl
jle
xor
push
cmp
cmpsb
je
mov
add
xchg
out
push
push
push
popf
inc
push
ja
jbe
std
jl
pop
clc
mov
add
jae
fwait
cmp
stos
sarb
addr16
add
add
add
mov
and
lret
dec
lahf
push
lods
cld
xchg
mov
adc
or
add
sahf
jge
nop
xor
xor
stc
lds
enter
lret
in
push
push
xchg
cmp
cld
xchg
mov
adc
stos
daa
call
xchg
loop
or
ss
sbb
jo
xchg
and
outsl
or
pusha
add
sbb
mov
repnz
lret
cmp
xor
shlb
in
icebp
adc
push
in
out
cli
shrb
lods
add
adc
lcall
mov
sbb
mov
sbb
xchg
and
iret
mov
mov
lds
jno
cwtl
aad
mov
push
scas
jae
sbb
add
mov
jg
movsb
gs
jl
pop
dec
xorb
sbb
fcomps
or
jp
sub
ja
loopne
add
add
clc
mov
and
hlt
or
stos
cmp
add
add
add
popf
in
or
add
jl
jbe
pop
push
or
add
adc
sbbl
push
push
cmc
repnz
inc
ljmp
jp
mov
lret
loope
adc
lock
fimull
jne
mov
sub
test
mov
and
jae
popw
cmp
scas
cmp
adc
cmpsl
adc
or
mov
pop
inc
pop
cmpb
mov
addl
push
lock
push
mov
pop
into
in
sahf
xor
xchg
ret
icebp
scas
insb
dec
mov
inc
jl
push
push
out
or
or
xor
push
scas
pop
cmpsl
jae
stos
repz
inc
pop
clc
testb
adc
shrl
jae
into
xchg
ret
add
fmuls
imul
mov
test
pop
shlb
cmp
gs
icebp
das
outsl
mov
mov
scas
xchg
push
adc
out
mov
jno
gs
addr16
add
add
add
fwait
sbb
in
jge
bound
dec
pop
mov
jge
adc
mov
push
rcr
shrb
adc
inc
data16
enter
inc
rorb
in
sbb
pusha
sahf
xor
mov
or
cmp
daa
fadd
call
aad
pushl
add
jbe
add
sahf
dec
cmp
cmc
add
hlt
mov
hlt
mov
jl
push
sub
call
pop
cmp
push
lds
or
push
cmp
or
mov
cmp
popl
xchg
sub
sbb
push
cmp
loopne
inc
push
test
cwtl
mov
cmpb
daa
push
sub
mov
scas
popa
push
inc
push
andb
mov
in
sarb
dec
stos
lahf
mov
cli
adc
out
xchg
xchg
jp
push
push
inc
lock
mov
fdiv
movsl
mov
cmp
sub
pushf
test
or
fdivs
mov
ficoms
add
add
sub
add
cli
and
leave
push
cmp
push
mov
int
pop
lahf
inc
ret
jge
xor
mov
xor
fs
mov
sbb
cld
dec
inc
mov
movsl
lret
cltd
mov
xcrypt-cbc
cmpsl
push
push
sbb
inc
mov
lret
icebp
lds
fsts
xlat
and
iret
cltd
leave
mov
enter
push
test
scas
add
fsincos
iret
inc
mov
inc
pushf
pop
xor
and
sbb
cmp
inc
add
cwtl
sahf
mov
call
mov
popa
mov
in
add
jo
and
mov
outsl
scas
jns
push
ss
xchg
cmp
fadd
scas
push
and
call
jg
inc
popf
lcall
xabort
lods
inc
push
loopne
into
mov
or
es
les
xchg
mov
jmp
add
pop
adc
ret
mov
and
das
cmp
pusha
fldt
mov
pop
add
add
add
xor
aaa
pop
fs
sub
notb
pop
sub
lock
loope
imul
clc
ds
xchg
push
adc
mov
add
add
aaa
mov
ja
jno
not
mov
js
cs
lret
stc
outsb
dec
packssdw
scas
inc
sbb
leave
into
inc
sti
test
push
jb
lea
push
into
sub
mov
cmp
in
mov
sahf
shrb
ss
stc
cwtl
mov
push
cmp
jno
hlt
test
adc
inc
mov
lds
mov
inc
xchg
test
stos
or
loopne
popa
arpl
push
cmc
xchg
test
mov
mov
pop
mov
shl
lock
and
xchg
fists
mov
in
adc
in
add
cwtl
faddl
add
xchg
enterw
add
add
movsb
jae
jnp
mov
ja
mov
xlat
rorb
add
add
les
popf
in
sahf
test
and
je
jmp
dec
sbb
dec
and
nop
ret
je
outsl
mov
sahf
sbb
arpl
xchg
pushf
or
fisubl
jge
in
jl
dec
movsl
cwtl
in
jno
pop
ljmp
or
or
mov
test
cmp
jae
cmpsb
outsl
jne
or
inc
sub
mov
pop
stos
daa
daa
clc
dec
mov
aas
roll
aad
xchg
rcrl
insl
cmp
add
jnp
lcall
cmpsb
jecxz
pop
and
rorl
mov
jmp
jb
lea
sub
add
xchg
repz
fisubrl
in
fnsave
mov
insl
pop
lcall
sub
repz
pop
adc
dec
push
pushf
cmp
dec
jae
lds
pushf
ffree
cld
mov
lods
fbstp
scas
adc
lahf
xlat
out
cld
push
leave
lods
xor
add
add
push
int3
lret
stos
xor
mov
out
decb
xor
inc
lds
clc
addr16
inc
dec
cmpsl
lret
jo
pushf
jle
pop
xor
out
cmp
lret
adcb
mov
aaa
pop
rcrl
ret
jnp
xor
test
mov
push
push
sti
cltd
rcl
inc
fsubrs
cmp
pop
lret
xor
pop
sbbb
pop
sub
mov
in
xchg
repnz
cs
mov
mov
push
filds
jg
mov
sub
jb
int3
insl
fucomp
test
jg
shll
rcrb
xor
addb
mov
mov
js
test
popa
out
insb
push
inc
not
cmp
popf
jle
pushf
nop
test
sub
pop
push
lea
dec
jmp
ja
cmpl
or
gs
sub
and
mov
out
add
add
mov
add
in
mov
mov
add
add
pop
jmp
inc
clc
add
inc
loop
inc
push
nop
stos
shl
xchg
hlt
mov
cmp
sarb
push
ss
cmpsb
aaa
dec
fnsave
cmp
cmp
sbb
fistl
xor
shr
inc
xlat
and
mov
or
dec
pop
jp
inc
xor
mov
leave
push
cltd
add
cmp
mov
inc
mov
call
mov
ja
insb
pop
push
inc
andl
mov
ljmp
push
in
je
and
jnp
sbbl
push
jnp
xor
shl
push
push
mov
jae
inc
or
sbb
out
decl
jnp
loop
and
movsb
mov
jg
data16
loopne
into
xchg
loope
lahf
xor
outsb
sub
xor
sbb
mov
adc
or
xor
sti
loop
nop
or
jno
cmp
add
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
out
xchg
dec
mov
in
push
ljmp
mov
mov
testb
pop
and
cmpsl
jns
in
mov
sub
inc
jmp
cmp
loop
cmp
and
out
dec
es
pushf
repnz
out
ds
mov
in
dec
or
sub
push
mov
mov
dec
out
dec
shll
int3
or
mov
out
scas
jo
mov
iret
movsl
fcomi
dec
test
sbb
xor
shr
aas
or
or
loope
mov
cmp
and
or
ret
or
or
fmul
lds
inc
mov
push
lock
daa
jns
mov
jb
movsb
mov
bnd
add
ja
aas
fisttpl
mov
mov
sub
out
mov
iret
insb
or
test
loopne
js
xor
add
and
mov
jg
or
bound
add
add
add
inc
lcall
mov
inc
aas
jmp
add
aaa
shrb
xor
jnp
cld
add
inc
pop
and
and
cmp
dec
cmpsl
hlt
pop
sbb
lret
adc
inc
pop
nop
sbb
cmp
int
or
cmp
mov
mov
xchg
inc
xchg
icebp
imul
xchg
sbb
insb
imul
sub
inc
mov
mov
pop
mov
xor
sub
out
push
divl
mov
inc
sti
scas
sub
jecxz
push
push
inc
bound
xchg
pop
push
dec
rclb
test
imul
or
cmp
insb
dec
cmpsb
and
les
icebp
stc
andl
jge
sti
cltd
pop
mov
lahf
sbb
dec
mov
or
add
add
lahf
pop
cmpsl
jne
mov
ret
arpl
add
add
add
aas
jns
lods
iret
test
mov
inc
mov
add
mov
je
fisubs
push
dec
fisubrs
mov
mov
and
cmc
xor
enter
cmp
xor
add
dec
fisttpll
sub
sbb
inc
sub
cmpsl
push
loopne
leave
jno
mov
nop
cmp
fbstp
mov
sbb
sbb
xor
lea
into
jae
push
pop
inc
bound
xor
loop
dec
movsl
daa
xchg
in
inc
add
add
imul
jg
in
or
jmp
insl
mov
add
sub
xor
cmp
and
pusha
pop
js
loopne
dec
jecxz
jp,pn
sbb
outsl
repnz
mov
loope
out
push
mov
and
loopne
adc
mov
push
dec
mov
inc
movsb
lcall
hlt
push
aas
iret
fwait
mov
pusha
cmpsb
adc
add
add
idiv
jg
sub
or
add
add
add
jg
dec
inc
pop
mov
jecxz
bound
sub
cmp
xchg
mov
scas
pop
rcrb
xchg
sub
std
mov
cli
xlat
and
pop
jecxz
nop
and
clc
cmp
cli
push
add
push
aas
lods
dec
fwait
pop
nop/reserved
pop
loopne
inc
or
sub
jno
add
xor
lahf
jne
lea
shrl
aas
popa
ret
in
cmp
jl
mov
das
adc
iret
pop
and
and
inc
or
shll
push
adc
xchg
imul
popa
xlat
adcl
jg
fdivs
mov
mov
test
scas
je
or
insl
subb
cwtl
std
mov
cmp
pop
notb
and
mov
or
cmp
mov
lcall
jne
pop
fsubrl
inc
pop
mov
fstps
cld
xchg
add
add
add
enter
jle
adc
mov
insl
lock
rcll
in
fs
pushf
icebp
sbb
inc
mov
inc
pop
idivl
scas
mov
outsl
loop,pn
and
mov
scas
enter
fsubs
sbb
loope
xchg
test
mov
xor
in
insl
ljmp
dec
sbb
and
push
jnp
and
pop
xchg
pop
js
fisubrl
ja
mov
pop
push
dec
sub
xchg
xor
pop
aad
push
cmp
adc
hlt
pop
and
test
das
insb
test
dec
in
gs
pop
adc
stos
popa
int3
enter
and
push
sbbb
xchg
mov
stc
lea
sub
in
mov
loope
sbb
pop
mov
sbb
in
loop
pop
add
xor
xlat
or
jo
pusha
enter
and
adc
add
add
repnz
movsb
jle
arpl
or
add
add
add
scas
cmp
out
and
je
clc
iret
and
repz
xor
adcb
cmp
jnp
adc
fcmovb
cld
xor
out
mov
or
leave
mov
inc
push
ljmp
jp
jo
cmp
lods
sbbl
inc
stos
sub
push
inc
dec
jp
mov
adc
cmpsl
add
push
sbb
or
rolb
aam
xchg
jns
mov
bound
js
cmpsb
push
cld
fisttps
notl
outsb
mov
mov
mov
scas
push
add
xor
jecxz
sti
je
cmp
adc
daa
cmp
inc
mov
inc
xor
aaa
mov
rol
rcrb
arpl
or
and
sahf
in
xor
jge
push
lcall
sarb
movsl
movl
xchg
sub
push
push
hlt
push
rcll
fucom
mov
fcomp
stos
sub
stos
out
jmp
sub
bound
xor
add
add
add
sub
jecxz
stos
lock
loop
loopne
outsb
out
jmp
dec
pop
xchg
mov
mov
push
cmp
xchg
fstl
testb
dec
mov
dec
and
loope
cmp
ss
mov
test
pop
add
cs
scas
mov
je
sbb
aaa
cmpsb
pop
or
push
cmpsb
cmc
push
cmp
rol
jmp
xchg
cmc
pushf
loope
iret
xchg
cltd
jmp
lret
arpl
pop
push
into
ret
lods
icebp
inc
nop
xchg
insl
cltd
or
pushf
pop
jnp
and
bound
dec
mov
test
jb
sbb
filds
loope
scas
leave
and
into
out
pop
pop
popf
enter
scas
cmp
fists
iret
mov
cld
jae
adc
cmp
or
adc
aas
xchg
inc
dec
push
xlat
shlb
mov
mov
sbb
pusha
and
mov
xchg
shll
fnstenv
shl
push
xchg
add
add
add
imulb
pop
in
loop
jns
pop
pop
jae
or
pusha
dec
shlb
aad
fstp
js
out
iret
mov
mov
aam
mov
shl
icebp
mov
push
pop
pop
adcl
stos
in
sbb
mov
mov
aad
pushf
dec
subl
mov
fmuls
popa
ja
or
movsl
cmpsb
xchg
jnp
in
dec
mov
adc
mov
mov
pop
adc
test
mov
mov
movsl
sub
fcoml
jle
xor
repnz
fmulp
enter
push
adc
fdivrp
sub
jmp
aas
mov
pop
or
adc
data16
movsl
add
inc
call
sbb
movsl
inc
out
daa
les
fcomp
and
xchg
xor
dec
inc
mov
pusha
rclb
dec
cmp
iret
insb
loope
sbb
loop
xchg
movb
cld
je
jbe
jns
sbb
pop
daa
jp
imul
add
imul
stos
sbb
pop
aam
xor
cmp
xchg
ficoms
cmp
xor
stos
xchg
inc
daa
cmp
sub
sbb
jle
call
lods
adc
pop
iret
test
push
add
jp
or
std
lcall
xchg
repz
push
rcrl
fldenv
pop
sbb
les
mov
clc
daa
imul
or
add
add
mov
or
jle
push
ds
dec
cmp
fistps
incb
adc
mov
mov
gs
out
insb
mov
arpl
jno
xor
jmp
push
insl
jg
std
push
shlb
xor
add
inc
mov
lds
push
pop
daa
sub
mov
cmp
dec
xchg
fwait
call
or
push
cltd
jmp
fildl
or
lahf
sar
addr16
add
add
add
inc
mov
and
adc
in
icebp
iret
cmpsl
loopne
out
fwait
xchg
adc
lods
pop
lahf
sarb
lock
dec
cmp
sbbl
test
repnz
sbb
negb
outsb
xchg
mov
mov
rorl
in
popf
aam
loop
dec
call
sub
inc
sbb
sahf
sbb
mov
inc
in
cs
pusha
fidivrl
jb
or
pop
int3
std
xor
loopne
pop
into
jbe
loope
jae
in
xchg
out
xchg
mov
pop
mov
and
jp
mov
add
push
test
ljmp
fiadds
popf
push
cmp
and
cmp
and
cmp
add
in
iret
scas
sahf
loopne
or
imul
adc
movsb
test
outsl
sub
addl
pop
adc
pop
outsb
jmp
aad
add
add
push
jg
dec
xchg
dec
hlt
outsb
movsl
imul
add
sub
out
push
push
mov
cmpsl
mov
and
scas
pop
in
lcall
inc
xlat
fisttps
bnd
je
insl
in
jns
in
or
pop
cmp
sub
sbb
call
test
je
adc
mov
pusha
imul
xor
inc
mov
cmp
ja
filds
bswap
in
popf
fidivrl
addr16
sbb
test
push
movsl
xor
inc
mov
test
pop
mov
js
aad
cmpsl
sbb
inc
dec
pop
xlat
add
sub
jp
mov
xchg
fstps
fwait
push
mov
jae
std
scas
inc
aad
jmp
aas
xchg
push
push
add
imul
in
rcrb
xlat
enter
add
pop
cmp
enter
inc
jle
mov
lret
lahf
inc
mov
sbb
mov
iret
mov
fucomip
push
insb
xor
sbb
insb
add
add
add
cmp
test
jmp
cmp
mov
sbb
jp
mov
leave
pop
sbb
jp
and
lods
je
sub
out
cmc
add
fistl
fsts
pop
repz
hlt
fidivl
mov
dec
or
mov
add
xlat
lcall
aaa
fmull
sarl
or
cmp
mov
ljmp
and
stos
arpl
mov
sbb
push
xor
cmp
mov
shlb
lcall
fcomps
mov
jb
jg
sbb
adc
dec
adc
and
loopew
movsl
mov
pushl
cli
jno
bound
cld
idivb
aaa
icebp
stos
cmp
dec
out
test
mov
push
xchg
add
pop
mov
xlat
sar
pop
or
push
insb
in
sbb
insl
and
das
lods
ret
movnti
lret
imul
dec
out
iret
jmp
aas
in
push
mov
mov
insl
add
add
add
mov
ficomps
arpl
cmp
scas
dec
push
enter
adc
lcall
jge
push
mov
stos
cmp
pushf
inc
in
sahf
lock
ret
loope
push
mov
int3
sub
dec
cmp
inc
ss
mov
or
stc
outsl
movsb
sub
adc
cmp
sbb
mov
test
sub
fildl
mov
mov
dec
dec
mov
sbb
mov
add
jnp
ss
sti
mov
xor
push
repnz
popf
out
sub
outsb
mov
dec
mov
mov
adc
lea
inc
lods
inc
add
fsubr
cmpsb
pop
add
stos
cmpsl
xorl
inc
mov
sub
test
cwtl
lcall
mov
outsl
jne
xchg
aad
mulps
int3
fsubp
dec
mov
mov
je
xchg
scas
xor
sarl
cmp
lahf
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
outsb
add
add
add
add
stc
xor
jne
sbbb
lea
cmp
cmp
lds
test
mov
xor
mov
clc
cmp
mov
in
jg
mov
shrb
jne
xor
loope
xchg
shrl
ror
std
and
push
ret
addr16
xchg
repz
sbb
std
push
out
or
aam
add
adc
adc
fnstenv
js
cltd
into
popf
jp
mov
out
rolb
ljmp
cmpsl
push
lahf
cmp
mov
pusha
int3
test
daa
inc
sbb
jmp
xchg
jns
enter
xchg
call
adc
and
lahf
sub
movsl
or
insb
enter
pushf
in
jns
or
cmp
inc
out
in
xchg
lds
jnp
out
mov
xchg
scas
enter
cmp
aas
mov
push
adc
and
add
add
adc
cli
adc
add
add
neg
std
sub
dec
mov
dec
outsl
add
add
add
sbb
lock
vpgatherqd
shlb
icebp
xor
dec
mov
or
repz
pop
sbb
mov
repnz
mov
pushf
cmp
out
shrl
nop
lods
cmp
cmc
lods
nop
jecxz
fs
out
add
loopne
andl
xchg
xchg
push
aaa
aad
lea
insb
push
fwait
out
test
lret
or
inc
jg
push
sub
xor
pop
outsl
cmp
or
fstp
insl
movsl
jnp
xchg
jb
mov
fwait
pop
popa
sti
loope
mov
out
inc
cmp
outsl
cmp
arpl
sti
popa
or
or
test
xorl
or
lods
addr16
fisubrl
or
and
add
xor
fs
and
push
out
cmp
fucomp
jge
lret
loopne
pop
push
subb
in
push
mov
rcr
sbb
addr16
add
add
add
sub
aaa
mov
nop
fwait
adc
daa
push
das
inc
repz
jg
sbb
jne
repz
push
xor
imul
lcall
mov
icebp
xchg
scas
rcll
mov
rcr
ret
dec
jae
inc
out
cmc
aas
les
imul
adc
insl
gs
pop
mov
test
mov
cltd
sahf
dec
xchg
dec
xor
adc
jmp
adc
ljmp
jmp
es
in
push
repz
xor
out
xlat
jge
outsb
nop
jne
imul
fwait
push
nop
jmp
add
pop
mov
push
mov
jl
add
jg
fstpl
xorl
dec
cld
iret
inc
test
in
and
dec
sub
ss
push
arpl
cmp
or
into
adc
cld
mov
inc
adc
lcall
out
sbb
push
inc
addr16
add
add
add
sub
xchg
push
push
ja
jae
aaa
sbb
subl
jg
stos
or
nopl
clc
adc
gs
inc
sbb
decl
cmpxchg
mov
int
ret
repz
test
xchg
or
imul
movsb
fldt
push
jg
sti
adc
fcomp
pop
xor
into
testl
inc
adc
lds
mov
sti
mov
dec
adc
jl
xchg
and
lret
scas
dec
xchg
push
xchg
dec
sahf
fistpl
fsubrs
sbb
lea
add
add
ret
aaa
dec
rcll
hlt
icebp
scas
mov
int3
jne
mov
dec
scas
xchg
test
aad
mov
xlat
rorb
scas
xor
xor
cmp
mov
sub
push
in
push
loop
decl
xchg
leave
pop
pop
jne
add
add
sub
ja
mov
call
add
add
add
push
aam
fsubrs
push
jge
hlt
cli
adc
sbb
in
xchg
rorb
pop
and
es
pop
fildl
jmp
add
jno
out
aaa
sbb
and
mov
cmp
addr16
lods
jbe
sti
jne
dec
xchg
push
xlat
dec
push
mov
movsl
xor
pop
in
outsb
dec
cmp
rcr
adc
test
fildl
lcall
fwait
scas
int
shrl
aas
lahf
sbb
mov
mov
cwtl
out
add
out
lock
xchg
pop
cwtl
jnp
fsub
cmp
fisubrl
gs
fisubrs
push
push
enter
data16
ja
sahf
cld
add
stos
push
mov
scas
mov
pop
loop
dec
lret
rorl
faddp
mov
out
jb
lcall
test
mov
subl
int
mov
jnp
outsl
cmpsb
loopne
and
add
add
add
and
or
or
loopne
lahf
jae
repz
out
arpl
ret
out
adc
imul
js
inc
mov
add
in
loope
loopne
pop
inc
lea
fiadds
lods
cwtl
push
or
dec
cltd
cltd
orb
inc
xor
jecxz
cltd
cmc
pop
adc
sbbb
add
scas
sti
sbb
lods
fldcw
cmp
les
sbb
cld
fstpl
scas
add
xlat
mov
cmpb
test
jle
scas
xchg
jbe
and
lock
fdivr
sbb
and
std
jbe
pop
push
testl
push
push
rol
adc
stos
cld
xorb
fs
loope
cmp
mov
xchg
ret
sbb
out
push
sbb
cmpsl
imul
jg
sbb
push
sub
shr
adc
xlat
or
add
add
cli
xchg
jle
push
je
std
push
add
je
add
add
add
cltd
stos
add
test
lds
push
pop
daa
cmc
xchg
add
mov
loopne,pn
sbb
or
sti
mov
sub
push
insl
pusha
in
fmulp
pop
lret
ret
adc
xchg
daa
jno
das
imul
pop
fstpl
movsb
test
mov
mov
in
cmp
std
and
movsb
ja
mov
jno
clc
xor
ret
cli
out
push
and
fcomps
inc
imul
or
cli
bound
out
insl
mov
inc
sbb
movsb
outsl
and
push
and
mov
ja
fcoml
mov
xor
sub
lea
ret
xor
cmc
adc
adcb
push
imul
je
xchg
ds
ljmp
or
mov
cmpb
ss
push
stos
cwtl
cmp
push
test
imul
add
add
add
inc
aaa
dec
fwait
jnp
aad
sbb
ficoms
add
add
fs
shl
push
xor
adc
jl
pop
pop
sub
stos
dec
dec
ds
nopl
call
icebp
cmp
in
push
and
int
push
xchg
pop
dec
imul
inc
imul
pop
in
dec
cmpsb
out
jge
and
jp
rorl
jg
sub
call
out
lahf
movsb
stc
adc
imul
insl
and
nop
adc
mov
fiadds
rorb
iret
test
xor
jo
mov
add
push
and
repnz
lahf
mulb
int
dec
aad
mov
mov
dec
and
push
or
std
push
lods
mov
sti
sub
cltd
push
push
jno
lods
mov
imul
inc
ljmp
push
mov
adc
and
push
xchg
dec
lret
int
cld
push
loope
insl
loopne
lods
pop
pop
test
adc
cmpsb
mov
mov
std
mov
sub
push
xor
addr16
add
add
add
pop
jno
and
sub
and
sbb
addb
pop
or
cmp
push
cltd
xor
loopne
cmp
popa
pop
or
iret
mov
and
xchg
hlt
pop
rolb
imul
xchg
push
cs
cmp
push
mov
add
imul
in
aaa
cmp
fistpl
mov
arpl
divb
cmp
mov
xchg
lcall
inc
push
imulb
mov
icebp
pop
rcrb
iret
dec
jl
sbb
lds
repnz
sub
call
daa
jbe
pop
or
jmp
pusha
adc
nop
or
add
pop
sarl
scas
in
jb
popf
push
inc
aad
jno
decl
dec
pop
jp
mov
xor
loop
cmp
jnp,pn
fidivrl
jo
shl
ficoms
mov
pop
in
xchg
xor
cltd
add
les
and
pop
jae
ljmp
pop
push
adcl
xchg
fisttps
mov
pop
pusha
addr16
add
add
add
pop
fcmovne
mov
or
call
xor
ja
push
scas
add
mov
pop
icebp
dec
fisubl
and
rolb
cmpl
and
xor
pop
lds
dec
insb
xchg
loop
lret
jmp
push
les
pop
aaa
adc
push
jecxz
je
sahf
dec
mov
vpshufhw
adc
adc
stc
mov
test
pop
shr
inc
popf
pop
mov
sub
mov
out
je
leave
push
lods
mov
or
mull
scas
jo
stos
aas
addr16
or
lock
pop
shlb
lods
scas
jae
inc
mov
xchg
mov
mov
xchg
push
push
stc
mov
ret
dec
pop
xor
pop
cs
fsts
sub
testb
out
dec
shll
test
repnz
push
mov
ss
push
pop
sbb
ljmp
push
and
xchg
add
add
bound
sub
sbb
js
add
add
add
inc
inc
pushf
mov
cmpsl
repz
std
or
mov
imulb
sbb
das
bound
clc
pusha
sub
jle
cwtl
pusha
sbb
adc
and
add
xchg
fstpl
cmp
setg
push
pop
addr16
call
leave
clc
cli
subb
ret
nop
or
test
add
loope
data16
cmp
icebp
dec
pusha
fs
js
jle
jno
mov
cmp
ficoml
mov
pop
clc
stc
pushf
xor
decl
imul
clc
mov
popa
loopne
sti
or
xchg
add
sbb
fwait
xchg
inc
and
dec
icebp
in
int
bound
pop
adcb
mov
sub
in
std
loope
xchg
call
and
add
push
jne,pn
xor
or
adcl
ljmp
add
add
divl
in
sub
addr16
add
add
add
shlb
repz
or
add
cmp
xor
mov
cmp
ret
adc
gs
rcl
les
shll
lock
or
inc
push
imul
adc
push
mov
aaa
das
in
push
mov
jle
pop
nop
in
test
sbb
in
stc
adc
sahf
mov
repnz
xchg
adc
test
and
ror
push
scas
imul
dec
xchg
jnp
scas
jp
movsb
rorb
xchg
mov
data16
adc
pop
shlb
gs
mov
push
xchg
add
aad
inc
push
clc
cmp
pop
test
xchg
gs
inc
out
add
add
imul
repz
inc
call
jecxz
inc
dec
das
gs
js
jge
push
mov
add
divb
insb
bound
push
xchg
fistpl
lret
rol
mov
loope
dec
clc
fisubs
mov
mov
cmp
addr16
add
add
add
and
inc
cmpsl
shll
push
out
and
jl
in
dec
popa
xor
leave
jo
rcrl
insl
jp
std
pop
mull
or
int
ret
rcll
and
jge
out
mov
in
movl
test
add
xorl
repnz
jb
lea
dec
dec
sbb
push
cmc
mov
mov
adc
sub
stos
dec
dec
scas
pop
jp
pop
addr16
nop
pop
add
ljmp
push
cmpsl
push
mov
shrd
xchg
testb
xor
or
fisttpll
mov
inc
push
sbb
cld
bound
adc
xor
dec
pop
mov
jb
stc
push
pusha
das
or
inc
andl
sub
push
adc
rorl
xchg
rorb
lret
add
add
add
mov
outsl
jne
ljmp
dec
ds
jnp
add
add
add
jl
fists
in
or
ss
hlt
dec
les
mov
data16
lret
push
jnp
pop
sahf
out
push
xor
aad
mov
sti
ficoml
mov
mov
nop
xor
sub
insb
clc
jb
int3
pop
leave
shlb
mov
pop
mov
inc
mov
in
push
cmpsb
dec
add
out
cmpsb
jae
add
lods
clc
insb
jo
mov
fsubr
fscale
andl
cld
push
roll
mov
enter
lret
fst
xor
lods
cmp
xchg
dec
and
bound
xchg
push
repz
mov
jae
jb
jb
rorb
inc
jb
repz
xchg
int3
into
pop
sbb
pusha
xor
jae
lds
mov
xchg
mov
adc
mov
sti
outsl
loopne
lret
pop
pop
add
add
testl
cmp
add
add
pop
pop
sbb
insb
je
inc
int3
add
dec
out
pop
pop
push
push
cwtl
jl
xor
pop
inc
sub
jb
inc
sti
cmpsb
and
cmp
lahf
frstor
xchg
jle
out
lcall
subb
add
out
ds
mov
mov
test
in
stc
les
push
xor
mov
xchg
incl
push
adc
xor
stc
mov
mov
in
or
mov
aad
jo
xchg
js
add
aas
add
pusha
in
ret
add
daa
add
mov
jmp
ds
dec
movsl
push
sbb
pop
iret
jae
je
test
orl
mov
mov
out
mov
add
outsl
or
dec
jge
adcb
push
in
adc
lcall
arpl
stos
add
pop
adc
das
sub
lret
out
pop
and
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
adc
fcompp
shlb
scas
ss
int
add
scas
pop
inc
shlb
aad
orl
push
loopne
leave
push
movsb
sbb
cmp
cmpsl
out
sbb
xor
test
dec
adc
cmp
cwtl
push
add
lret
and
cltd
decb
mov
imul
jns
lcall
sbb
ds
lret
mov
fdiv
push
mov
mov
add
shl
out
mov
icebp
add
cli
lret
sahf
and
addr16
push
pop
xchg
jae
cmp
pop
dec
icebp
xor
cmp
mov
mov
popf
push
testl
sub
test
into
sbb
mov
mov
scas
dec
xor
dec
add
sbb
lahf
int3
jl
mov
xlat
test
insl
fiaddl
dec
dec
and
cmp
adcb
mov
cmpsb
push
sbb
insb
shlb
add
add
add
cld
ss
icebp
sbb
es
push
imul
cmpsl
fsubs
cmc
out
dec
dec
cld
loopne
sbb
inc
das
mov
adc
mov
lods
iret
or
hlt
js
push
call
xchg
ret
in
xor
and
popf
and
push
aad
into
loope
ret
mov
jl
push
adc
push
push
pop
shlb
sti
dec
mov
xchg
jb
in
jo
push
sub
add
mov
dec
punpcklbw
aad
xchg
jmp
push
jg
cmpsl
push
mov
xor
cld
stos
xchg
sub
sbb
adc
ds
push
insb
or
xor
pop
stos
mov
mov
loop
sti
in
mov
push
test
adc
push
addr16
sbb
incl
mov
cmp
mov
fsts
int
or
cli
dec
mov
les
add
cmp
cli
mov
int3
mov
add
add
add
ljmp
inc
flds
sbbb
call
bound
bound
icebp
mov
int
pop
add
addl
rol
fbld
sub
subl
scas
cmp
mov
test
insl
inc
aad
cwtl
ret
jl
xchg
mov
jb
lea
mov
int3
insl
add
inc
and
push
push
xor
popa
push
lods
add
inc
xor
sub
loopne
xchg
or
inc
push
or
push
pop
inc
adc
push
push
or
movsb
dec
pop
dec
insb
mov
cs
push
mov
mov
push
cmpsb
xor
clc
fbstp
sbbl
mov
adc
push
clc
rcrl
lret
jmp
ret
pop
les
ja
mov
xchg
xchg
cwtl
add
mov
dec
mov
add
std
test
lcall
adc
add
add
add
outsl
andb
pop
inc
cmp
orl
xchg
cltd
pop
aam
sub
xor
mov
mov
lret
das
mov
es
xor
cwtl
gs
jo
dec
test
inc
int3
jne
push
mov
mov
jecxz
sbb
pop
insl
popf
cmp
and
xchg
xchg
out
dec
dec
lcall
loop
daa
out
rcrl
push
idivl
out
dec
clc
lret
cs
subl
xchg
jecxz
dec
in
add
ljmp
fsubrs
repz
call
or
xor
ret
push
ja
jmp
stos
push
xor
subl
jbe
inc
push
shrb
push
mov
stos
xor
int3
les
and
mov
jno
pop
fucomip
std
popf
cmpsl
jbe
ljmp
dec
inc
mov
inc
pop
test
mov
movsb
int
jl
popf
mov
or
pusha
testb
daa
mov
pop
addl
add
ss
les
push
mov
mov
pusha
jge
jb
adc
or
mov
push
or
out
and
cmc
xchg
cmp
and
push
insl
fidivs
mov
mov
jecxz
sbb
sahf
stos
in
ljmp
mov
je
lock
dec
xchg
sub
mov
or
rcr
and
shlb
sbbb
mov
mov
inc
push
xchg
lock
cltd
mov
xor
testb
adc
orl
xchg
pusha
out
add
or
enter
outsl
nop
xor
and
sbb
sti
hlt
aas
xchg
jae
aas
jns
outsl
jno
xlat
ret
jl
lods
out
movsb
enter
scas
add
shll
lods
mov
mov
sub
adc
xchg
xchg
or
pushf
ljmp
int
sbb
scas
lcall
adc
sbb
lods
sbb
mov
add
add
cwtl
fdivl
jl
cmp
pop
inc
aaa
mov
jp
sti
xchg
loopne
jne
imul
push
inc
jno
insl
adc
daa
imul
pushf
dec
out
mov
mov
arpl
clc
fwait
bound
sub
bound
nop
or
out
cmp
jl
or
lock
adc
in
cmpsl
sbb
sbb
and
sub
mov
dec
pop
test
lock
bound
pop
ja
fs
pop
movl
inc
dec
jne
fadds
mov
shlb
jge
adc
aas
pop
ja
nop
ss
xchg
push
leave
or
shr
pushf
xorb
inc
push
fsubr
mov
scas
jmp
outsl
inc
pop
imulb
jg
rcrl
subl
mov
push
lahf
adc
dec
mov
stos
ficomps
push
add
jl
cs
idiv
jne
iret
xchg
xor
add
add
add
loope
jns
inc
cmp
xor
fimuls
or
pop
dec
mov
lock
push
lods
fbstp
loope
popf
movzbl
jb
inc
push
xlat
insb
push
repz
pop
sub
clc
roll
lcall
sub
icebp
call
mov
cmpb
cmp
pusha
inc
mov
cmp
pusha
or
mov
mov
mov
mov
lds
mov
es
jmp
aad
addr16
jge
xchg
iret
mov
cld
and
mov
mov
test
insb
sahf
mov
testl
imul
cmp
call
insl
shl
mov
scas
test
lods
sbb
pop
insl
inc
mov
divl
adc
pop
or
pop
das
xchg
into
or
cmp
or
xor
mov
add
xchg
pushl
sub
nop
jae
jb
test
add
add
add
testb
int
iret
adc
js
icebp
fs
test
leave
ds
cs
es
lods
test
rcrl
je
ret
cli
cmp
ret
inc
cmp
lea
mov
mov
xor
daa
mov
xlat
pop
dec
hlt
adc
daa
add
xchg
mov
mov
add
bndstx
mov
inc
cltd
push
cld
inc
mov
xchg
test
aad
cmpsb
dec
rorb
dec
mov
into
fsubr
lds
insb
mov
push
cmp
jmp
stc
inc
dec
out
or
inc
sbb
mov
cmp
jle
sbb
jae
rclb
cltd
adc
pop
inc
xchg
cmpb
rcrl
movsb
mov
inc
cmp
push
mov
and
shrl
push
test
jmp
xor
loopne
push
sub
fmull
out
ds
push
xchg
popf
cmp
aad
mov
jge
std
sti
iret
ss
push
jno
push
clc
andl
add
add
add
mov
stos
mov
rcll
xchg
jle
jbe
outsb
fwait
xchg
xor
stos
xchg
cmpsb
dec
xchg
jl
adc
sahf
pop
push
mov
ret
popa
je
pushf
into
repz
out
xchg
push
cld
mov
lods
inc
xor
and
mov
mov
call
fwait
mov
inc
cltd
dec
cmp
sti
dec
outsl
xor
pmulhw
add
add
or
cmpsb
movsb
jmp
in
repz
adc
inc
xchg
fldl
cmc
cmp
scas
mov
insb
sub
lret
shr
or
mov
loope
movsb
push
mov
jbe
out
out
pop
xchg
lahf
jecxz
test
push
fdivrl
and
cltd
cmp
sti
mov
dec
fdivs
push
adc
xchg
shl
pop
mov
or
stos
dec
addl
lahf
inc
jae
xchg
mov
push
sbb
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
test
add
add
add
int
cmpsb
xchg
test
cs
sbb
mov
stos
adc
mov
mov
ds
xchg
jp
fnstsw
rcrl
lea
fistl
add
sub
pop
stc
out
mov
mov
dec
imulb
sahf
add
sahf
fcoml
jnp
dec
mov
add
pop
jecxz
aaa
jbe
int
xchg
inc
xchg
sub
shll
or
popa
sbb
loop
frstor
out
cmc
pop
pop
add
sahf
rclb
xchg
in
mov
mov
mov
in
mov
in
nop
adc
scas
dec
test
clc
pop
push
imul
jne
add
mov
ret
data16
dec
call
movsl
mov
sahf
push
sub
cmp
push
fwait
jmp
inc
mov
xchg
add
cmp
sbb
out
mov
mov
mov
cmpsl
dec
xchg
add
add
add
ds
into
test
rclb
or
adc
sbb
xchg
ret
call
and
mov
pop
adc
in
pop
sub
enter
sub
fimull
rcrb
inc
mov
mov
inc
add
inc
mov
int
das
popa
jno
fimuls
test
sbb
mov
cmp
shr
xchg
mov
jge
repnz
rcll
outsb
les
outsb
scas
scas
mov
inc
mov
jle
repnz
xchg
jnp
fbstp
jae
push
sub
int3
pop
cmpsb
pusha
jmp
mov
jmp
or
and
mov
pop
adc
mov
mov
xchg
mov
lret
jae
fs
scas
push
test
fldl
add
add
pop
test
ljmp
lock
xchg
out
cmp
add
add
add
faddl
xlat
mov
or
outsb
divb
aad
sbb
or
add
sti
push
bound
add
in
cmpsl
into
add
mov
rcrl
dec
mov
jne
ror
fst
test
test
lret
and
jns
push
inc
and
ret
loop
mov
loop
pop
jmp
cmpb
push
pop
sub
insl
xchg
enter
aaa
push
pop
sub
sub
lahf
cmp
mov
mov
inc
repz
lahf
repz
sbb
rclb
dec
pop
lret
push
lcall
std
xchg
and
les
sarl
mov
cld
fsubs
jne
adc
xchg
and
or
fs
sub
inc
mov
add
adc
outsb
js
push
sbb
inc
mov
cs
hlt
ror
cltd
arpl
sbb
dec
imul
jl
xlat
in
mov
mov
sbb
add
arpl
jnp
sbb
push
xor
dec
lcall
add
cmp
add
adcl
fists
jmp
pop
lds
lods
dec
bound
sbb
iret
rolb
lock
or
dec
push
xchg
aam
add
mov
dec
in
jmp
mov
add
mov
sub
insb
inc
mov
gs
or
xor
jmp
shl
jne
jg
ds
repnz
or
repz
out
cmp
addl
pop
sub
jnp
gs
inc
out
mov
imul
test
xchg
div
je
cmp
leave
pop
lock
mov
pop
xchg
sub
pop
inc
push
sub
clc
or
inc
pop
and
mov
movsb
sbb
jge
dec
arpl
xchg
pop
dec
jns
addr16
pusha
fisubrs
stos
add
fildl
aad
lret
sti
cmp
mov
push
aas
or
mov
gs
enter
add
add
add
out
sub
out
jl
lods
es
gs
xchg
test
fstpt
fwait
out
inc
int
jge
mov
and
faddl
lret
arpl
sub
pop
cld
fsubrl
mov
jmp
out
or
insb
mov
jne
xchg
cmc
loopne
cmp
test
mov
dec
movsb
mov
cmp
in
push
gs
xchg
pop
jo
jno
jae
push
pop
xor
sub
inc
hlt
inc
outsl
and
push
test
jl
fs
sbb
lret
int3
mov
es
mov
shll
and
mov
imul
or
fwait
inc
jae
add
or
cwtl
arpl
sbb
add
fmull
mov
nop
sub
enter
or
sti
and
jo
fs
jecxz
scas
lods
push
adc
mov
subb
insb
fidivl
bound
mov
add
add
add
cltd
cmp
imul
xor
sbb
std
ret
hlt
pop
stos
fcos
xchg
sub
cltd
shrb
sub
lods
pop
pop
test
push
test
lea
push
out
xchg
xchg
je
enter
notl
lock
mov
sbb
repz
cld
incl
daa
adc
cmp
repnz
push
std
push
int3
and
lods
pop
or
mov
and
imul
adc
jecxz
push
sahf
vmread
mov
mov
fidivrs
leave
fimull
cld
push
cld
pop
and
fiaddl
sub
jl
inc
mov
or
enter
lock
aas
cmp
sub
push
daa
inc
sub
or
jns
cli
adc
cmpsb
outsb
push
imull
mov
push
mov
cmpsb
js
call
cmp
xor
filds
mov
pop
dec
sub
testb
cmp
mov
jns
or
add
add
add
sub
mov
inc
jbe
ds
adcb
dec
in
and
fistl
ljmp
aad
inc
jnp
hlt
gs
sbb
or
mov
scas
aas
jge
pop
xchg
sbb
int
inc
ljmp
mov
mov
shrb
test
loop
sbbl
pushf
sub
stos
add
mov
jbe
sub
out
cmpsl
xchg
xor
js
jne
xchg
add
and
std
xor
mov
push
outsl
loope
and
or
jne
jns
xor
add
scas
cmp
lret
outsb
and
mov
ss
add
sub
gs
pop
cmovnp
cmc
cmp
jne
int
sbb
jl
shl
add
cmp
sub
jl
push
and
xor
add
add
int
fstp
iret
push
cmpsb
fadd
dec
arpl
fadd
lea
add
add
add
push
push
pop
rcrl
adc
lea
adc
add
xchg
adc
cmp
fbld
pop
mov
iret
popl
cmc
fwait
push
imul
out
add
jo
add
rdtsc
das
and
pop
lret
in
or
mov
popf
shr
test
and
pop
push
outsl
mov
inc
ror
jne
sbb
popa
dec
shlb
and
es
and
mov
das
mov
insl
dec
ljmp
sbb
xchg
shlb
xchg
cs
insb
fbld
aas
mov
mov
jbe
mov
bound
pop
cmp
xlat
ds
mov
cli
cwtl
in
cmp
mov
inc
push
jb
push
ret
mov
xlat
push
in
sub
imulb
xchg
mov
aam
inc
lret
lods
addr16
dec
mov
mov
ljmp
sub
fwait
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
pop
lcall
faddl
lret
mov
or
les
sahf
js
mov
pop
lret
sub
lods
fcom
xchg
jbe
iret
mov
or
push
adc
cs
and
sbbl
mulb
cmp
js
mov
mov
iret
fcoms
inc
or
cmp
and
add
gs
cmpsl
jl
sahf
std
setnp
mov
pushl
sub
icebp
fisttps
mov
lret
out
xchg
jns
inc
cmp
sbb
call
fs
and
cmc
daa
jp
xchg
sahf
mov
push
orb
fcmovnbe
or
clc
inc
sub
popa
or
ret
insl
sbb
std
jmp
jae
mov
and
aas
lea
add
push
fwait
sarb
pusha
or
mov
test
lahf
aas
dec
enter
shll
add
add
mov
icebp
fsubrs
add
add
add
cs
jnp
push
loop
hlt
mov
mov
clc
jns
pop
pop
jno
xchg
jmp
add
cli
inc
hlt
mov
pushf
or
cmp
loop
dec
pop
popa
pop
rorb
pushf
push
inc
cmp
jmp
gs
addr16
fmuls
jns
pusha
xchg
push
dec
mov
pop
dec
push
imul
insb
pop
xchg
out
or
push
into
orl
cli
insl
inc
pop
sbb
adc
fwait
roll
fxch
fists
fsubrl
lock
pop
movsl
or
adc
inc
out
es
shl
out
xchg
jo
ds
xor
add
mov
mov
pushf
in
icebp
movsb
jbe
mov
jmp
and
mov
std
popa
das
pop
pop
inc
pop
cmp
pop
adc
inc
test
sub
adc
inc
or
test
fcomps
add
jne
addr16
add
add
add
clc
adc
loopne
js
loopne
inc
lret
test
cmp
jle
jns
and
jo
and
xor
cmp
xor
rolb
mov
sub
ds
dec
test
jo
jae
sub
pop
cli
out
xor
dec
not
jecxz
add
sti
jno
iret
mov
les
arpl
scas
dec
movsl
cmpsl
mov
xchg
xchg
jbe
or
daa
xchg
push
sub
hlt
sbbl
out
fwait
xor
cmp
jae
gs
jp
push
sbb
in
data16
out
movsl
int
lods
inc
ss
fwait
jmp
jmp
insl
dec
mov
add
aam
sbb
addr16
ret
rolb
inc
orl
mov
shll
cmp
mov
mov
jp
aam
movsb
xor
cmp
std
popf
xchg
sub
insl
and
sti
mov
ljmpw
ljmp
dec
mov
sbb
addr16
add
add
add
fnstsw
out
push
das
and
into
lea
mov
in
shrb
add
jbe
pop
test
imul
inc
inc
gs
insb
jns
mov
mov
jne
mov
jbe
outsb
aad
mov
addr16
shlb
push
je
add
xchg
repnz
movsb
inc
or
jno
daa
xchg
sbb
addr16
movsb
add
inc
shlb
pop
int
dec
decb
nop
adc
xchg
pop
movsb
pushf
leave
enter
data16
data16
jmp
scas
xchg
inc
dec
jnp
out
repz
int3
test
test
mov
mov
mov
call
jg
add
push
int3
sbb
lods
sarb
das
shl
popa
rclb
cmp
jb
out
jbe
loopne
jo
jg
cld
int3
xor
ret
pop
cs
push
aaa
shlb
cmc
div
testl
pop
addr16
add
add
add
inc
pop
ss
jno
push
addr16
dec
add
add
lock
mov
test
sub
push
jae,pn
and
clc
insb
nop
mov
mov
pop
inc
aas
dec
cli
pop
rcrl
imul
es
lea
lds
pop
loopne
jno
lods
or
mov
mov
sub
aas
mov
enter
shll
scas
hlt
pop
jae
inc
add
mov
lcall
inc
cmc
sub
ljmp
repz
fldcw
cld
imul
leave
cmc
pop
dec
xor
cmp
xor
push
test
mov
imul
pop
bound
mov
mov
pop
shll
pop
push
insl
push
pop
ret
enter
jmp
jns
cmc
jbe
or
jnp
xchg
fistpll
inc
sub
clc
sub
dec
icebp
in
lock
xlat
pop
push
nop
push
sahf
rcr
pop
adcb
std
cmp
add
add
add
and
es
imul
mov
sub
out
dec
push
mov
or
lock
dec
sbb
dec
iret
leave
push
pop
sbb
adc
xchg
enter
sbb
push
scas
pop
imul
push
mov
push
into
inc
sub
es
stos
outsb
lret
gs
sbb
and
pop
fsubrs
notb
mov
push
cwtl
mov
add
push
in
pop
push
sbb
mov
pop
jge
push
stos
mov
push
sub
lock
jae
mov
sub
jb
popf
out
sub
mov
jno
inc
xor
jle
stos
xor
mov
sub
inc
add
mov
xchg
jmp
pop
outsb
push
and
or
mov
adc
icebp
sub
fisttps
shll
cmpsb
jcxz
fimull
addr16
add
add
add
inc
dec
pop
mov
out
lahf
mov
xchg
add
in
scas
jecxz
or
mov
push
das
and
sub
fisubrl
xor
sbb
push
popa
fwait
iret
inc
xchg
bound
or
rorb
imul
cmp
jne
es
loop
adc
or
cmp
bswap
pop
arpl
push
push
shlb
fwait
pop
mov
jae
sub
xchg
cmp
jbe
repnz
stc
jp
aam
xor
fs
dec
adc
jo
pop
mov
hlt
push
into
push
mov
xchg
xchg
mov
mov
loop
es
cltd
or
jp
push
loop
cs
add
int3
lcall
test
int
sti
test
cmp
test
js
push
push
int3
in
jno
cmp
adc
mov
jp
aas
sub
mov
outsl
movsb
xchg
inc
jns
lret
pop
adc
sahf
sahf
sbb
out
or
pop
sub
push
jge
add
add
clc
jnp
jg
in
cli
enter
fnstsw
add
addr16
add
add
add
jp
popf
cmpsl
out
push
adc
adc
cmc
bound
bound
xchg
cwtl
nop
or
cmp
aad
push
mov
lcall
inc
or
inc
and
hlt
xchg
push
sub
dec
add
pop
out
in
sbb
dec
mov
and
and
cwtl
js
push
shr
nop
shl
jne
cmp
cmp
in
ret
pop
pop
xchg
cmp
flds
adc
xlat
clc
fdivrl
cmp
and
cli
aas
sbb
xchg
outsl
mov
mov
add
xchg
addr16
mov
mov
adc
cwtl
aas
stos
rolb
pop
adc
iret
ja
add
les
and
mov
insl
in
xorb
push
mov
call
lcall
pop
fs
push
jp
inc
mov
sarl
jno
movsl
ljmp
cld
gs
mov
addr16
add
add
add
hlt
int3
mov
mov
dec
jge
fbld
or
sahf
clc
fs
dec
mov
loop
aam
jge
lcall
int3
shrb
stc
push
les
mov
repnz
jmp
lret
adc
repz
es
adc
sbb
xchg
rcrl
mov
je
outsl
jecxz
mov
ss
mov
inc
pop
lds
mov
in
aaa
popl
dec
lods
mov
mov
call
push
aam
fisttpl
mov
mov
fldcw
pop
sub
xchg
pop
scas
push
jae
mov
lret
jnp
subl
rorb
inc
shll
cwtl
sbb
mov
fwait
arpl
inc
xor
scas
push
out
jmp
mov
test
mov
flds
dec
jmp
rol
xchg
data16
pop
pop
mov
jl
sar
std
jle
pop
popf
scas
ljmp
add
add
add
mov
push
sbb
lock
sbb
es
xlat
mov
mov
or
add
add
iret
stos
inc
into
pop
pop
or
jmp
in
stc
fadds
fists
cmp
popf
dec
adc
in
fists
mov
adc
insb
xchg
sahf
shld
add
add
or
icebp
mov
inc
mov
gs
insb
mov
sti
test
pop
bound
in
xor
jb
repz
fcomps
add
dec
and
push
icebp
ss
sbb
enter
mov
xor
dec
add
fistpll
shlb
inc
stos
cmpb
popa
mov
fnsave
sub
sub
pop
ret
mov
xchg
pop
mov
lahf
lret
mov
into
cmp
cmp
in
aas
es
addr16
add
add
add
aas
pusha
add
roll
or
push
test
insl
adc
mov
repnz
aam
jne
xor
jns
cmpsl
scas
pop
add
shl
pop
dec
mov
jno
repnz
pop
ret
inc
ljmp
dec
mov
rorl
imul
sub
jo
stos
mov
sahf
cmp
adc
xor
fwait
dec
cmp
mov
lods
xchg
sub
inc
or
push
sahf
xchg
or
jne
shrb
out
mov
sbb
cltd
adc
push
adc
push
scas
pop
add
mov
insb
adc
inc
test
xor
and
loop
mov
in
pop
lahf
fsubr
icebp
lret
repnz
add
cld
add
lods
push
enter
push
cmp
push
xchg
stc
inc
add
in
lret
sub
pop
stos
fwait
and
popa
mov
xorl
addr16
add
add
add
xchg
sbb
jmp
cmp
push
adc
dec
mov
fldcw
imull
push
add
ljmp
in
jns
jp
lock
dec
push
rcr
dec
jge
divb
lods
mov
or
fwait
or
sarl
gs
jl
aaa
mov
xchg
jecxz
dec
fldenv
push
loop
js
sbb
fwait
xor
mov
outsb
push
xchg
lock
push
imul
shrb
and
sub
ljmp
push
or
shl
sub
and
imul
inc
adc
cmp
or
xor
lea
xor
test
bound
or
mov
cmovbe
adc
mov
scas
mov
mul
xor
dec
dec
mov
ficomps
pop
mov
mov
push
iret
int
mov
jl
push
sarb
mov
sub
inc
xlat
push
and
xlat
aas
dec
sbb
or
addr16
xor
je
rolb
push
lods
sub
mov
rcrl
insl
jns
push
and
int3
insb
mov
adc
jnp
lea
insl
sti
fcomp
mov
rcr
rcll
adc
push
lret
mov
jno
es
and
add
stos
push
mov
xchg
inc
jne
xchg
fldl
adc
fcomp
icebp
pop
add
jno
mov
pop
or
push
dec
ret
fnstenv
xchg
in
shlw
and
cmp
jle
cmp
xchg
loope
in
lahf
xchg
sbb
mov
mov
adc
xlat
add
cmp
adc
sarb
ljmp
andb
movsl
loop
repnz
lods
push
cmp
std
mov
lret
cmc
pop
add
out
pop
and
in
jl
gs
adc
cmc
faddl
add
add
mov
mov
jmp
test
jae
addr16
add
add
add
hlt
lea
outsb
lock
sbb
stc
pop
inc
dec
pushf
jp
mov
sub
xchg
jmp
mov
stc
arpl
lcall
call
dec
loope
out
adc
mov
ljmp
jb
mov
or
mov
shlb
test
sahf
rolb
jmp
inc
loop
jo
mov
or
scas
aas
xchg
rolb
test
sbb
aam
push
push
jl
dec
push
mov
mov
loope
es
test
mov
jle
mov
and
jle
fcompl
int
xor
testb
scas
test
pop
fcmovb
rorb
mov
and
mov
sbb
fmul
sbb
xor
inc
xor
call
call
iret
test
into
pusha
mov
push
xchg
xchg
push
or
pop
ja
fstpt
adc
sbbl
popl
mov
addr16
add
add
add
insl
mov
jb
rorb
mov
test
pushf
xchg
mov
inc
je
mov
mov
sbb
xlat
pusha
and
jg
popa
inc
and
xchg
test
jbe
mov
cmp
mov
call
dec
stos
shrb
fidivl
ret
and
xor
in
xlat
es
jno
mov
into
std
fistpll
js
std
movsl
push
popa
fcos
movsl
sub
mov
ds
popa
sbb
inc
in
cs
add
mov
xchg
dec
pop
in
mov
subl
adc
cmp
sbb
adc
add
inc
push
stos
sub
int3
aad
push
xor
push
xor
sahf
push
cmpsb
stos
lcall
jo
les
shlb
cs
and
daa
fsts
push
lods
inc
push
mov
inc
stc
mov
imul
movsb
and
dec
mov
add
add
add
xor
lret
jp
mov
stos
xchg
sbb
push
jae
fcmovb
popa
shrl
pop
testb
pushf
jp
mov
xchg
push
mov
mov
outsl
shrd
sahf
mov
push
mov
stos
adc
inc
mov
mov
jle
xchg
in
mov
ljmp
jb
push
lret
and
test
std
ffreep
lds
pop
rcrb
popa
inc
xchg
xchg
mov
push
clc
dec
dec
test
lock
cld
int
cmp
stos
ljmp
imul
jg
call
test
ja
mov
xchg
stc
int3
xchg
xchg
mov
mov
dec
mov
adc
mov
mov
ss
fmulp
jns
jge
sarl
sub
mov
in
and
mov
mov
push
pop
add
divb
mov
cmp
add
add
mov
sub
lahf
mov
fsubp
addr16
add
add
add
leave
cmp
xchg
sbb
jp
imul
icebp
out
sub
mov
pop
cli
test
push
leave
aam
std
ja
sub
pop
int3
aas
sbb
les
dec
lods
pop
sbb
mov
mov
lcall
mov
ss
inc
xchg
in
jae
loop
test
dec
pop
pop
scas
pop
sub
mov
pusha
push
sbb
sti
pop
jo
addb
fbld
dec
sub
mov
loope
outsl
and
jne
aam
sahf
xlat
add
mov
gs
mov
xchg
int
push
pop
xor
hlt
sbb
cmp
and
add
xchg
leave
jns
in
mov
xchg
scas
movsb
dec
sbb
mov
in
lahf
lds
pop
hlt
inc
xlat
fiadds
and
gs
pop
sub
mov
lahf
clc
jae
push
pop
fsubl
jmp
push
jb
push
lods
xor
ljmp
das
out
add
add
ja
out
inc
sub
or
inc
push
pop
addr16
add
add
add
dec
push
lock
mov
push
ss
jne
mov
cmp
sbb
lock
sbb
inc
push
mov
aad
mov
pop
mov
aaa
pop
cmp
and
dec
lea
mov
js
xor
orl
jl
lret
daa
push
loopne
add
loope
in
orl
mov
sub
cwtl
ss
lods
rcrl
jb
sub
sub
sbb
dec
lods
pop
je
lcall
cltd
inc
dec
test
rcll
jne
jb
push
gs
add
je
stc
icebp
and
ds
outsl
cmpsl
inc
inc
data16
aaa
lock
and
push
pop
sbb
mov
and
fnsave
or
dec
xor
jle
mov
pop
into
ja
pop
add
adc
cmp
shll
cmp
popf
jle
orl
mov
mov
add
add
pusha
test
mov
cld
mov
addr16
add
add
inc
stos
sbb
cld
inc
arpl
xchg
lods
fsubrs
cmp
rcl
fisubl
mov
jns
ja
mov
pop
push
lret
push
push
shll
or
sbb
xor
jb
ret
je
lea
sub
sti
iret
loopne
outsl
pop
or
jmp
test
in
mov
out
mov
adc
add
inc
adcl
or
popf
popa
shrl
add
xchg
xor
out
inc
dec
xchg
cmp
dec
adc
pop
dec
mov
xor
inc
ret
cmp
lock
and
pop
push
fildll
leave
data16
and
push
js
mov
lahf
sbb
sar
mov
rol
mov
orb
insl
cli
or
pop
out
outsb
or
cli
gs
lret
jmp
lea
dec
cmp
xchg
xchg
hlt
jl
out
sbb
add
add
mov
repz
repz
cli
repz
mov
add
or
les
popf
pop
ljmp
dec
cmp
loope
cwtl
mov
roll
cmp
mov
sti
or
pop
push
popf
out
push
in
rolb
addb
sbb
push
or
je
inc
movsl
lret
sub
lret
mov
jecxz
mov
sbb
jbe
mov
aas
pop
mov
mov
in
in
xchg
aam
inc
ret
pop
inc
inc
pop
and
test
add
mov
sub
push
sub
lret
jbe
in
jno
test
insb
pushf
in
out
cmc
test
mov
repnz
shll
pcmpgtw
jmp
or
sbb
mov
leave
push
fcompl
imul
adc
mov
fcmovb
pop
inc
pop
int3
movsl
mov
mov
scas
and
cmp
iret
and
or
ljmp
div
cmp
faddl
fimuls
add
add
add
mov
inc
inc
add
mov
add
jge
in
adc
xor
mulb
xchg
or
adc
jae
jmp
push
nop
call
sub
fistl
cmp
andl
leave
aas
mov
insb
inc
dec
cmp
jp
ficoms
sub
mov
and
pushf
xor
add
shl
or
fisubl
inc
mov
add
pop
lret
push
mov
dec
ret
mov
je
mov
sbb
jmp
and
pop
jl
std
fstps
add
test
jns
das
inc
and
or
sub
sbb
jg
incl
xchg
or
aad
in
add
stos
push
loopne
bound
subl
adc
sbb
cmpsl
or
fldcw
js
in
dec
dec
nop
pop
out
shlb
jbe
or
sbb
inc
mov
jb
addr16
add
add
mov
or
dec
loop
dec
mov
ss
dec
mov
fsubr
ret
sub
xchg
xchg
add
cmpsb
orb
loopne
mov
ljmp
sbb
adc
je
iret
push
sub
mov
dec
jecxz
jg
sub
inc
mov
test
inc
push
and
enter
sti
out
sbb
punpckhbw
jge
inc
fildl
pop
dec
pop
mov
fs
mov
test
fidivrs
sahf
and
sbb
mov
jb
adc
mov
bound
iret
test
stos
sub
cmp
test
push
movsb
jns
stc
jb
mov
mov
sub
pop
lahf
add
loope
pop
scas
cltd
or
cmp
mov
fdivrp
shrl
addr16
in
fbstp
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
xchg
xchg
scas
cmc
je
stc
loop
pop
daa
dec
ret
push
loope
clc
out
jp
and
out
lcall
enter
loop
rcrb
js
mov
outsl
jge
stc
mov
push
in
out
add
mov
stos
stos
les
or
sub
add
adc
jle
mov
sarl
mov
push
sub
in
popa
cmp
orb
sahf
shll
inc
icebp
pop
pop
mov
ljmp
add
insb
out
add
dec
push
ret
cmc
ret
fldcw
test
inc
jecxz
pop
xchg
pop
mov
dec
fnstcw
adc
ja
lods
dec
jns
pop
jne
mov
mov
dec
xchg
pop
test
popf
mov
or
imul
dec
hlt
fidivl
aaa
lea
xchg
push
jae
add
add
sbb
mov
sbb
mov
adc
add
add
add
jbe
std
cmpsl
inc
push
inc
add
out
xchg
xor
adc
cmp
mov
fnsave
testl
push
out
lret
cmp
lds
push
out
inc
rcrl
addb
pop
lret
sub
or
dec
add
subl
sbb
xor
ja
loop,pt
add
fs
jecxz
jnp
hlt
lods
add
dec
or
lcall
imul
lahf
dec
loop
cmc
jno
popa
add
push
adc
fdivl
sub
inc
xchg
in
xor
loopne
push
clc
lret
bound
ljmp
pop
daa
ljmp
or
cmp
out
lds
icebp
push
xor
jmp
jae
cld
jmp
les
inc
add
add
inc
inc
enter
pop
fdivrs
or
rcrb
push
sahf
loop
sbb
ds
xor
ret
iret
inc
adc
mov
mov
pop
pop
pop
test
stos
hlt
jmp
cmp
jbe
fs
test
cmpsb
add
add
add
sti
jno
repnz
lret
sahf
jp
shl
jmp
mov
inc
adc
rol
sbb
scas
daa
adc
inc
xchg
mov
out
and
jb
dec
repz
inc
sbb
pop
pop
push
jb
cmc
mov
jl
imul
and
push
push
push
mov
add
daa
push
test
jno,pn
lret
xchg
rolb
scas
dec
adc
cmp
pop
add
mov
cmc
sub
icebp
in
add
xor
sub
popa
adc
or
loopne
xchg
xor
push
icebp
fidivrs
xchg
cmp
cmp
cmpsb
lret
fistpl
push
add
arpl
add
roll
mov
sub
mov
xchg
ret
andl
cmp
fcmovu
adc
in
add
imul
ja
leavew
push
jnp,pt
xor
pushf
mov
mov
mov
add
add
out
xlat
out
jg
in
xor
fldlg2
int
push
cmpsl
add
add
add
sbb
mov
jbe
fmuls
mov
movsb
adc
das
cli
mov
jnp
jle
sub
pop
inc
push
clc
xorl
add
mov
lret
mov
xor
cmp
cwtl
push
bnd
xchg
push
mov
mov
lods
jo
pushf
orb
and
data16
clc
js
rorl
dec
push
je
sti
dec
pop
push
clc
mov
xchg
add
pop
push
fidivrl
test
enter
xchg
movsb
jnp
outsl
jmp
jo
mov
pop
sbb
clc
int
dec
iret
into
mov
loopne
mov
test
xchg
out
clc
aam
clc
cli
or
inc
dec
shrl
ds
shrb
push
jbe
add
pop
test
outsb
jmp
ficoml
sub
and
call
cmpsl
test
outsb
popa
rcrl
add
sbb
pop
fbstp
fldl2e
jmp
dec
dec
addr16
add
add
add
xchg
lock
data16
pop
lods
test
dec
mov
pushl
adc
testw
push
lret
jp
js
rolb
pop
jecxz
push
xchg
je
sarb
aam
dec
sahf
pushf
mov
call
outsb
sub
jne
push
jmp
push
add
clc
xor
add
push
lret
leave
lcall
pop
loop
test
cmc
pop
ja
mov
daa
dec
je
xlat
push
aam
cmp
std
sti
mov
jno
in
dec
mov
scas
jae
push
ret
enter
es
lret
and
lods
pop
jb
clc
inc
rcll
push
adc
mov
cwtl
es
adc
into
leave
pop
lret
xchg
push
pusha
into
cs
mov
dec
loope
xchg
inc
jno
cmp
mov
adc
xlat
into
xor
pop
jb
ja
mov
or
popf
push
xchg
mov
xchg
cld
sti
xchg
cmp
lcall
std
inc
jne
andl
add
add
add
xchg
notl
leave
or
scas
fdivs
mov
xchg
mov
lock
aad
ret
mov
mov
test
testl
mov
fcoms
insl
xor
js
push
xlat
clc
imul
in
decb
jecxz
sarl
nop
sbbb
jae
xchg
es
cmpsl
leave
mov
andl
gs
jl
mov
dec
out
mov
gs
or
push
int
or
xor
mov
push
popf
and
inc
mov
fldl
js
scas
gs
insl
cltd
sbb
test
adc
xchg
cmp
sub
mov
cmp
adc
or
cmp
into
das
cmp
or
int
movsl
cmp
fnstcw
and
ret
stos
adc
push
jae
pop
fdivrs
int3
sub
in
out
hlt
lret
add
add
mov
push
sti
jmp
push
mov
imulb
int3
hlt
stos
add
add
add
lds
pop
xchg
push
loopne
inc
xchg
mov
jo
sbb
inc
pop
stos
inc
add
fs
fs
and
sbb
mov
and
mov
test
lret
mov
cld
push
mov
sub
aas
add
into
je
sub
in
jle
pusha
sbb
pop
sbb
std
jp
repnz
rolb
sub
push
and
mul
adc
data16
lret
popl
push
pop
ss
mov
lods
xchg
sarb
cld
movsl
inc
rcll
pop
push
pop
or
pop
hlt
pusha
mov
push
lock
xchg
jl
adc
xor
mov
out
test
js
and
repz
scas
sbb
or
mov
push
icebp
pop
or
lret
mov
xor
les
test
arpl
mov
adc
pop
mov
sub
daa
cltd
dec
xor
pop
xchg
daa
outsl
dec
in
adc
test
mov
jecxz
lock
dec
push
stos
add
add
add
sahf
sub
push
fnstcw
jge
sbb
stc
adc
pop
fs
adc
scas
ja
nop
rcr
dec
scas
es
bound
fiaddl
pop
clc
dec
aas
sbb
mov
push
jns
cmp
arpl
and
mov
rcr
cmp
or
mov
out
mov
iret
push
hlt
lret
jecxz
mov
shlb
jno
aam
imul
movsb
and
mov
inc
inc
add
dec
lahf
subb
outsb
pop
cltd
add
loop
add
sbbl
mov
pop
dec
in
or
mov
iret
inc
dec
cmpsl
pop
jb
imul
scas
xchg
inc
lret
add
add
insl
leave
sub
adc
fstl
les
jecxz
mov
aas
jecxz
mov
push
push
xchg
shrl
push
call
xchg
jl
shrb
testl
add
add
cld
mov
leave
cmc
add
lods
add
add
add
or
lock
insb
std
mov
outsb
mov
lds
jle
stos
sbb
mov
sbb
mov
mov
lock
aam
test
imul
push
adcb
daa
sbb
lret
mov
add
sbb
lret
test
clc
scas
ljmp
rep
sbb
fsts
ret
xor
mov
sbb
inc
adc
lods
xchg
add
les
imul
mov
or
cli
cmp
xor
test
pop
lcall
scas
fld
mov
inc
aaa
in
mov
insl
hlt
cmp
fimull
out
mov
sub
rolb
fidivrs
add
inc
inc
ret
fsts
ljmp
unpckhps
cmp
sub
je
scas
mov
add
sbb
pushf
dec
data16
inc
das
mov
stos
pop
int3
and
add
add
out
cmc
mov
mov
lods
add
add
add
xchg
addb
xor
sbb
call
xor
dec
cmp
xchg
test
out
icebp
test
out
sahf
lret
jecxz
int
pop
stc
push
push
dec
jle
and
mov
jg
inc
mov
cltd
call
cmp
rcr
mul
jbe
popa
cmpsl
aas
xchg
cmp
frstor
into
clc
mov
sarb
fcoml
adc
aas
cmp
js
outsl
adc
adc
ja
out
fcomip
aas
enter
insl
aaa
fdivs
dec
repz
push
ud1
add
cmc
dec
repz
test
scas
test
mov
sbb
inc
pop
and
shrb
seta
jbe
test
cmc
xchg
dec
lea
popa
add
mov
pop
jmp
fwait
inc
test
aam
es
jo
xor
dec
js
pop
jnp
das
repnz
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
mov
pop
push
scas
add
add
add
adc
push
mov
xchg
adc
sub
dec
jbe
aas
jmp
dec
lock
lahf
test
xchg
insl
ds
dec
inc
imul
jp
adc
xor
jno
out
sub
inc
das
sub
mov
push
gs
movl
inc
xchg
in
test
cmp
jne
jae
push
inc
aaa
mov
cmpsl
push
push
orl
push
dec
adc
inc
rolb
xor
pop
les
ret
je
pop
dec
stos
dec
rorb
inc
scas
xchg
pop
int3
fldt
or
push
out
adc
aad
je
mov
shr
push
push
lods
pop
shlb
and
jmp
insb
jo
repnz
xlat
stos
push
out
movsb
mov
aaa
dec
push
in
in
adc
sbb
sbb
fcomps
mov
xchg
ljmp
jl
add
jne
adc
ret
test
dec
shll
lcall
adc
add
add
fidivs
loop
ljmp
xchg
cmp
push
scas
add
add
add
dec
jbe
mov
cmp
xchg
test
xchg
ror
or
sbb
aaa
cmp
rcl
outsl
stos
ret
arpl
xchg
mov
test
inc
jmp
aad
divb
fldenv
mov
ds
lcall
pushf
imul
xor
enter
mov
inc
inc
inc
mov
bound
fistl
mov
cmpsb
in
dec
push
pop
mov
pusha
xlat
je
negb
jge
adc
jbe
lret
or
pop
sti
jae
jb
pop
leave
out
mov
out
inc
cs
repnz
sub
stc
cwtl
xchg
in
inc
push
and
in
cmpl
daa
xlat
cmp
out
decb
fiadds
int3
loop
fstl
jae
cli
cmpb
scas
mov
dec
pushf
fsubr
ret
jne
mov
insb
mov
pop
call
pop
cmp
testb
cld
and
outsb
pusha
jno
inc
pop
mov
add
add
xchg
jg
jmp
std
mov
sub
mov
add
add
add
jl
or
jb
mov
lds
xorb
pop
add
xchg
mov
js
push
mov
iret
push
pop
repnz
test
or
mov
dec
jmp
inc
adc
mov
or
iret
mov
jle
popf
lods
sbb
adc
scas
mov
ret
int
bound
mov
pmaddwd
sub
and
aas
fsubrl
cmpsb
popa
call
lock
inc
xlat
and
ljmp
mov
push
ret
adc
les
insb
jnp
add
xor
test
das
fwait
mov
ja
jno
mov
inc
cld
lcall
ljmp
sub
jb
inc
int3
and
movsb
pop
xor
xchg
dec
dec
dec
out
outsl
out
sbb
scas
cwtl
cmc
cmp
mov
push
divb
inc
mov
inc
mov
add
add
mov
daa
adcb
loop
jg
lcall
in
out
xchg
scas
jecxz
shl
inc
push
push
xor
add
lcall
push
xchg
aam
mov
ljmp
jns
pop
pop
ja
popf
int
mov
fcmovnb
loop
sub
loope
dec
mov
xchg
dec
mov
andl
push
push
cmpsl
movsb
inc
sbb
pop
ret
add
jne
jmp
pop
jo
lods
cmp
sbb
gs
push
aad
xchg
fs
cmpb
std
sbb
dec
fincstp
imul
cmpsb
push
cmp
orl
xchg
lret
inc
jg
lock
push
nop
inc
jmp
pushl
mov
push
push
push
out
cmpsl
outsl
pop
lcall
mov
adc
push
dec
lods
cmp
dec
jg
daa
leave
jae
movsl
jo
lahf
and
sub
mov
in
or
rolb
mov
add
add
xor
cmp
inc
call
xchg
addr16
add
add
add
loop
mov
inc
mov
dec
sub
jne
inc
jnp
fidivs
das
mov
std
movsl
dec
jns
add
mov
rolb
mov
jg
adc
sub
push
jbe
adc
out
dec
sub
add
addr16
or
stc
dec
cmpsb
outsl
pop
jmp
loop
add
pop
pop
jmp
push
jge
cwtl
mov
repnz
jle
cmp
xor
mov
add
inc
mov
xchg
xor
leave
or
iret
call
add
sti
int3
ss
ret
mov
in
iret
dec
push
mov
jae
aad
mov
mov
cmpsb
add
add
xor
sub
inc
bound
xchg
push
mov
or
into
cmc
jbe
lahf
aam
xor
mov
flds
push
mov
mov
add
jmp
leave
es
les
mov
arpl
push
addr16
add
add
add
sbbb
push
mov
imul
adc
scas
push
add
shll
xchg
aaa
pop
int
test
inc
mov
adc
mov
pop
rcr
sbb
imul
or
mov
loopne
mov
sub
mov
jp
test
pusha
ret
pop
arpl
xchg
cli
jnp
xchg
mov
add
cltd
mov
mov
cwtl
and
ret
xchg
dec
pop
fisubrs
inc
pop
es
mov
jb
sub
push
mov
adc
dec
sub
pop
jge
add
pop
cmc
mov
mov
cmpl
push
sbb
mov
ss
stos
sub
into
scas
aas
sahf
popf
aam
mov
repnz
hlt
add
dec
push
imul
lret
mov
aam
lcall
jnp
pop
mov
inc
push
add
mov
movsb
arpl
jl
xchg
arpl
add
clc
pop
stc
out
push
pop
bound
outsb
addr16
add
add
add
scas
jecxz
es
out
lea
adc
push
adc
and
add
ljmp
mov
mov
xor
out
out
push
mov
push
xor
icebp
ss
sub
jne
sbb
fs
pop
mov
in
sub
mov
cmpsb
or
xchg
ret
xor
push
inc
sahf
xor
mov
sbb
mov
sub
push
jge
and
or
pop
dec
js
in
jl
scas
rcrl
lcall
stc
lds
aaa
popf
int3
push
jb
mov
pusha
push
outsb
push
xor
cld
mov
xchg
ljmp
adcl
mov
mov
aas
aam
flds
cli
mov
dec
mov
mov
test
cwtl
ljmp
mov
sahf
xor
push
ljmp
lds
cli
lcall
push
addr16
add
add
add
shll
add
push
cmp
mov
aaa
js
mov
cld
cmp
loope
je
push
sbb
daa
fsts
stos
mov
packsswb
xlat
jg
cmp
out
push
sbb
xchg
xchg
xchg
and
adc
push
hlt
lods
cmp
sbb
sub
pop
test
sub
aam
rorb
mov
mov
in
inc
mov
lods
adc
fld
xchg
inc
decl
push
mov
xor
daa
fs
lret
imul
decl
xlat
and
in
mov
fnstcw
sbb
jbe
lcall
xor
mov
pop
dec
aaa
mov
jle
inc
ss
dec
imul
stos
or
cwtl
gs
clc
jmp
and
push
cmpsb
cmp
mov
sbb
out
ds
sbb
mov
sbb
sub
dec
dec
enter
xorl
insb
lret
push
mov
add
add
cli
inc
adc
jns
jnp
test
stos
xchg
xchg
fs
mov
and
push
into
cmp
insb
cwtl
daa
xchg
sub
push
xchg
ja
sbb
daa
imul
repz
cmp
lret
mov
xchg
push
dec
sub
sbb
fldt
dec
cmp
mov
aas
pop
pop
mov
cmc
cmp
lea
inc
mov
movq
pop
test
fs
sub
jbe
scas
cmpsb
jne
mov
xor
outsl
std
push
jl
mov
faddp
repz
or
mov
mov
jns
mov
dec
mov
insl
push
gs
loop
call
out
scas
mov
adc
lret
jnp
imul
xor
dec
mov
inc
adc
stos
orl
ss
pop
lret
aas
popa
out
pop
mov
imul
nop
or
adc
push
bound
add
pop
sbbl
fstp
rorl
stos
addb
add
add
add
lret
xor
cwtl
fadds
xchg
cmp
mov
xor
mov
lcall
fstpl
jb
cmpsb
adc
mov
push
or
addr16
ss
mov
mov
in
leave
call
sbb
jp
pushf
or
fsubs
out
cmp
pop
repz
mov
inc
xchg
js
hlt
rclb
loope
push
scas
sub
in
inc
adc
sub
std
call
and
xchg
dec
movsl
push
dec
repz
test
pop
stos
xor
xchg
dec
stc
bnd
jmp
cmp
sbb
jmp
push
xor
pop
inc
sbb
in
inc
std
imul
shrb
test
out
movsb
cmp
enter
les
pop
dec
call
ficompl
inc
sub
jae
arpl
aad
jnp
and
add
loope
mov
jecxz
out
mov
mov
add
add
add
mov
xor
lahf
xchg
hlt
jmp
cmp
xchg
adc
mov
sarl
sub
into
lcall
sbb
enter
jle
loop
dec
jmp
jecxz
fildll
pop
sbb
js
xchg
mov
sub
out
aad
test
xchg
scas
movsl
mov
bound
add
shlb
sub
jb
stos
xchg
into
mov
push
and
pop
jne
pop
xchg
in
enter
sbb
and
repz
hlt
push
sub
adcb
int
pop
jg
lods
adc
jmp
clc
stc
jae
xchg
push
mov
idivl
cmp
push
push
pop
in
popf
jo
mov
xchg
inc
ja
add
lods
cmc
gs
mov
push
sbb
pop
cmp
das
sbb
mov
cmp
aas
adc
inc
jne
inc
mov
push
xchg
test
jg
into
lret
orl
add
add
sar
pop
push
aaa
push
hlt
jne
in
sbb
jge
add
cmp
mov
scas
int
in
shll
cmpsl
push
or
inc
shlb
ss
stc
mov
repnz
mov
dec
xor
sub
test
aad
push
scas
mov
lds
adc
push
stos
inc
ljmp
jnp
sbb
add
jne
ja
xor
out
fisubs
mov
mov
push
fwait
push
mov
inc
or
pop
loope,pn
mov
pop
jl
pop
hlt
rcrl
jo
iret
xchg
sub
mov
jne
mov
lods
stos
movsb
and
jmp
fcompl
xchg
call
push
idivb
xchg
fdivrs
push
pop
jge
adc
cli
sbb
sbb
mov
mov
stos
das
xor
or
xchg
out
add
lock
in
lcall
jae
dec
mov
xor
add
add
add
aaa
ljmp
push
push
xor
adc
jno
jae
test
and
insl
andb
fs
fnstcw
aaa
and
pushf
gs
mov
movsl
pop
mov
lret
lret
xchg
adc
push
sub
inc
xchg
cmp
jno
mov
push
add
sub
adc
jl
in
jp
inc
icebp
jp
iret
push
adc
ret
mov
jge
sbb
push
push
inc
jle
jae
fildl
adc
lods
or
arpl
or
das
pop
pop
pop
jp
lea
lock
cmp
ja
out
push
cmp
in
daa
fxch
mov
sbb
mov
out
lahf
cli
cli
repz
pop
stos
scas
dec
mov
mov
lds
vsubss
jnp
or
lahf
dec
fcmovnb
addl
jg
add
pop
outsl
dec
or
jg
dec
arpl
mov
add
add
mov
jae
ss
xchg
bound
xlat
jb
jne
imul
scas
scas
inc
sahf
clc
mov
in
leave
cwtl
lea
testb
xchg
lock
mov
jle
mov
or
icebp
test
out
jne
jb
mov
xchg
or
shl
and
mov
sbb
inc
pop
jbe
out
sbb
fsubrs
xor
mov
iret
pop
pushf
fiadds
das
adc
pop
mov
dec
sbb
and
shlb
test
js
push
test
or
lock
test
int
out
adc
jge
mov
ret
mov
out
leave
leave
sub
fisttpll
data16
pop
test
or
aad
aas
mov
clc
scas
sbb
stos
dec
xchg
cmp
or
pop
push
and
xor
mov
lods
iret
mov
push
sldt
add
insl
sbb
outsl
mov
std
mov
inc
addr16
add
or
fs
ficompl
inc
into
pop
pop
test
or
inc
ficompl
mov
inc
inc
roll
test
jp
add
mov
orl
outsl
mov
and
mov
insb
push
push
ret
insl
adc
mov
and
cli
cmp
out
xor
sti
icebp
mov
mov
out
mov
and
lods
iret
stos
repz
inc
cli
es
imul
and
sub
pusha
insb
xor
jmp
in
or
je
icebp
mov
stos
stc
sbb
scas
call
cmpsb
shll
nop
push
cmpsl
sbb
popa
or
mov
jbe
dec
loopne
push
nop
jns
pop
push
lahf
mov
and
shll
sub
inc
or
cmpsl
xorl
arpl
jp
or
int3
arpl
mov
xchg
push
xor
mov
pop
sbb
shll
add
add
add
mov
inc
jmp
rclb
push
mov
mov
xor
inc
push
sarb
nop
hlt
or
sub
insb
cmp
addl
xor
sub
xor
stos
movsb
push
daa
jbe
xor
loop
sub
mov
shll
popa
sbb
cmp
scas
pop
or
sbbb
aaa
cmp
mov
rorb
ffreep
ret
sbb
cmp
in
sub
inc
adc
and
jne
lret
xorl
push
mov
out
pop
inc
outsl
daa
insb
inc
jge
aad
sbbb
addr16
pop
testb
loope
inc
int3
xchg
xor
hlt
mov
pop
fcmovbe
add
cmp
cmpsb
inc
daa
movsb
jle
xor
adc
pop
das
cmp
in
push
xorb
xor
insl
push
push
call
inc
xchg
aam
addr16
add
pop
cmp
nop
js
stos
cmp
adc
aam
mov
jecxz
cmp
jp
out
test
xor
rcr
into
pusha
fcmovbe
scas
repnz
xchg
cmpsb
aaa
adc
xchg
das
jp
insb
pop
pop
scas
rcr
and
data16
pop
loopne
popf
dec
xor
pop
or
jae
or
xor
outsb
jno
xor
test
ret
aas
sbb
sbbl
ljmp
icebp
repnz
dec
adc
or
jl
jne
xchg
in
sub
or
ret
inc
ss
push
mov
aaa
scas
xchg
cmp
andl
fcoml
xor
lods
sbb
xchg
mov
inc
or
imul
fstps
dec
iret
and
repz
mov
jle
gs
sbb
ja
sahf
stos
lahf
adc
jmp
add
into
std
sti
leave
sti
iret
jmp
jle
repz
add
lock
in
mov
xlat
outsl
dec
and
mov
pop
mov
inc
test
out
in
dec
mov
add
es
pop
sub
int3
cmp
mov
fidivrl
shlb
xor
mov
shll
popa
daa
inc
movsl
in
ret
mov
push
in
aad
dec
push
pop
lea
mov
movsl
fwait
ljmp
mov
xchg
inc
add
les
jmp
arpl
xor
xchg
mov
pop
jle
in
push
mov
shl
sarb
cmp
insb
mov
jno
inc
mov
push
out
cmp
popa
in
xchg
push
inc
int
lret
test
jne
shll
lret
mov
cmp
inc
pop
gs
cmp
or
mov
inc
repnz
push
ds
push
rcrb
mov
xor
mov
and
and
mov
mov
xor
xor
rolb
add
add
mov
mov
das
fiaddl
pcmpeqw
dec
sbb
fstl
neg
jb
mov
out
mov
out
testb
clc
jp
jbe
movsl
out
push
sti
and
aaa
sub
push
xchg
push
mov
scas
mov
dec
bound
inc
xchg
xlat
in
jp
fwait
inc
shll
nop
testl
orl
int
lock
leave
in
adc
jne
jae
aam
mov
sbb
stos
shlb
mov
mov
sbb
pop
imul
sub
ret
pop
test
dec
cmpsb
repnz
cmovae
add
stos
aas
call
sub
fwait
test
icebp
and
repz
dec
pop
stos
insb
pop
popf
clc
lock
insl
xlat
out
push
or
mov
add
push
popf
mov
in
or
loop
fcoms
mov
inc
sub
sar
fwait
mov
or
jg
mov
sahf
loop
dec
out
repnz
roll
add
add
pushf
in
and
jmp
pop
pop
add
ljmp
pop
pop
arpl
scas
cli
rorl
and
dec
arpl
stos
lcall
shll
adc
pop
sub
arpl
cs
lods
aad
lahf
sbb
adc
mov
fildl
out
pop
add
lds
out
pop
inc
outsb
sbb
cmp
add
jle
in
clc
dec
sbb
xor
add
adc
xchg
mov
fwait
mov
push
mov
dec
les
adc
sbb
xor
jge
push
loop
pop
mov
into
js
call
jg
pop
sbb
inc
sbb
cwtl
xor
push
sbb
fcompl
psrad
push
push
xor
jno
xor
icebp
dec
mov
aad
inc
das
lock
call
adc
or
xlat
andl
jns
int
arpl
fldenv
adc
test
sti
mov
xor
push
cld
pushl
cld
sbb
addr16
add
add
test
pop
and
das
xchg
ljmp
ja
sbb
lods
mov
or
xchg
daa
fldcw
mov
lahf
mov
scas
repz
aam
pop
xchg
gs
mov
jmp
movb
mov
sub
aam
fldt
in
je
sub
xor
mov
fisttpll
mov
xor
push
ss
fstl
in
mov
inc
cli
mov
xlat
inc
lock
add
adc
jo
stos
repnz
leave
sub
xchg
dec
clc
xchg
xor
or
dec
enter
add
pop
test
rorl
xor
mov
jg
pop
rcrb
xchg
aas
das
loope
inc
rcrl
popf
cmp
int
and
dec
mov
lret
jg
add
add
pushf
shrb
lcall
mov
ret
add
add
add
popa
fwait
sarl
in
dec
cmp
pop
testl
pop
lea
loopne
cmc
sbb
add
fstl
push
popf
and
pusha
add
sub
in
mov
mov
dec
dec
mov
orl
pop
addb
sti
daa
push
and
and
inc
xor
lock
pop
or
movsl
mov
movb
add
inc
cwtl
pop
fwait
push
test
outsl
cmpsl
dec
inc
or
add
push
ret
out
int
sub
jl
jne
shlb
rcrb
das
push
fldz
sub
sbb
insl
lock
adcl
jae
jns
jo
or
xlat
lods
push
das
lods
leave
pop
add
in
fidivs
enter
add
sbb
stos
mov
popa
adc
adc
push
lea
test
add
add
test
mov
aas
scas
fstps
les
add
add
add
cmp
scas
movsl
and
add
cmpsb
pop
mov
sub
lods
lds
cmp
xchg
jns
mov
pop
aaa
push
pusha
jecxz
icebp
and
cmp
xchg
aad
dec
test
test
push
pop
inc
jne
add
pusha
packssdw
lock
ljmp
xchg
push
inc
test
in
jbe
adc
and
cltd
xor
jg
jbe
test
lret
adc
mov
inc
adc
mov
mov
aas
cmp
fldt
jg
aaa
arpl
and
je
jnp
jecxz
imull
xchg
imul
sbb
nop
popa
xchg
lahf
ja
mov
lret
cmpsl
pop
ljmp
repnz
ljmp
jnp
pop
dec
jecxz
nop
mov
sahf
imul
je
imul
dec
ljmp
add
jg
jne
jne
jg
loop
mov
lret
add
add
add
ds
jb
fisttps
jae
adc
xchg
leave
popa
in
orl
or
mov
notb
in
mov
mov
mov
rclb
xorb
jb
add
push
cli
or
sub
mov
les
mov
popf
ret
call
cmp
adc
popf
aaa
dec
sarl
daa
sbb
out
push
add
in
nop
inc
pushl
cmp
cli
adc
push
test
jns
cmc
insb
incl
lcall
adc
pop
test
ds
sar
jne
or
push
stos
insl
test
sbb
mov
mov
mov
setns
fstpt
jae
push
out
int3
pop
addr16
xchg
sarl
mov
or
gs
push
sub
ljmp
mov
cmp
mov
add
sbb
mov
cmc
mov
or
add
add
add
leave
outsb
ljmp
rclb
mov
inc
mov
mov
mov
jg
lcall
jge
les
inc
ljmp
xchg
movsl
xchg
and
pmaddwd
inc
and
cmp
insl
pop
mov
rcr
or
movsl
push
xor
outsb
fists
xchg
dec
aaa
addr16
pop
out
jae
sti
pop
ja
and
das
mov
push
or
jbe
mov
pop
pop
mov
mov
ss
pop
jbe
mov
pop
iret
pusha
sbb
pop
push
fildl
mov
dec
clc
fstps
mov
lret
cmp
or
push
mov
and
dec
cltd
sbb
cmpsl
call
pop
daa
mov
ss
faddp
jns
xchg
jbe
pop
jle
cltd
and
repnz
dec
dec
fs
push
das
xchg
sbb
scas
push
jo
adc
sbb
xor
std
sub
and
outsb
jle
lods
testl
movl
add
dec
daa
fwait
out
mov
bound
imul
dec
and
ljmp
sbb
xchg
mov
xchg
or
mov
scas
leave
mov
dec
jb
rcll
and
or
pop
sahf
iret
movsl
ljmp
inc
aaa
inc
mov
mov
imul
insb
cmpsb
mov
adc
dec
inc
fsts
xor
cmp
mov
adc
cmp
dec
adc
scas
popa
nop
adc
pushw
mov
and
minps
pop
lods
sahf
stos
sti
adc
mov
scas
or
dec
sub
in
or
push
mov
pop
in
into
xor
lahf
in
negb
addr16
arpl
jle
test
js
sub
fmull
xor
popf
int3
out
insb
popa
push
loope
movsb
loopne
jmp
cmp
lea
jo
pop
dec
xchg
dec
push
js
insl
mov
add
mov
mov
add
pusha
mov
enter
add
add
jp
mov
rcrl
jmp
jo
cmp
jbe
mov
pop
enter
iret
or
inc
xorl
vhsubps
rorb
mov
out
mov
std
sbb
insl
loop
xor
mov
xchg
mov
nop
inc
push
jmp
aas
jne
adc
scas
sbb
and
mov
mov
pop
mov
inc
dec
out
ja
in
jmp
add
mov
and
out
and
mov
ret
mov
lods
cmc
scas
jmp
insb
pushf
xorb
push
push
jo
lods
push
pusha
lret
mov
xor
in
adcb
push
adc
xor
in
adc
iret
fsts
mov
adc
inc
call
push
mov
push
cmpl
inc
jnp
pop
lods
int3
addl
or
add
add
out
sti
xlat
in
aad
es
add
add
add
mov
pop
xchg
mov
out
jae
and
jns
cwtl
push
outsb
xchg
xchg
bswap
dec
xchg
and
and
loope
out
sub
push
pop
adc
in
or
out
jae
orl
sahf
mov
fwait
sub
aas
jns
movl
jb
enter
mov
add
stos
mov
insb
inc
cmp
xor
mov
jne
cmpsl
scas
mov
or
jmp
jmp
out
out
stc
into
add
mov
pop
add
jmp
pop
pop
pusha
lods
push
into
sub
sbb
sbb
rcrb
fwait
nop
imul
rcr
out
xor
sbb
in
jmp
bswap
push
mov
push
push
mov
mov
insl
sbb
push
xchg
int
out
ljmp
adc
and
mov
jecxz
or
add
dec
cmp
rclb
or
add
add
push
sub
cmp
jg
and
mov
jne
cld
mov
add
add
xchg
dec
outsl
dec
or
je
dec
xchg
jle
pop
cmc
pop
or
lea
mov
jns
mov
cmpsl
in
stc
lret
int3
adc
addr16
mov
shrl
jns
fstpt
fsubs
imul
cld
loope
or
fstl
dec
shlb
loope
or
popa
test
dec
push
outsl
outsb
testl
lods
cmp
das
push
aam
xchg
jp
ret
mov
pop
stos
push
pop
sub
iret
mov
sbb
add
inc
sub
sbb
jbe
pop
insb
insb
lock
xchg
jl
push
int3
popa
xor
ss
mov
negb
cmp
ja
fwait
pushl
test
js
cs
repnz
xlat
jg
ds
cld
adc
dec
insb
sub
mov
dec
outsl
mov
loopne
jge
lds
mov
inc
mov
iret
js
jmp
ds
repz
fcoms
xor
mov
addr16
add
add
add
std
mov
add
scas
adc
xor
xchg
xor
pop
ror
test
aam
sbb
inc
sbb
lret
outsb
mov
test
arpl
imul
lret
std
jnp
jne
or
loop
jge
jne
sbb
test
ljmp
scas
bound
cmp
and
push
jno
push
cmp
pop
or
mov
notl
xchg
aaa
cli
arpl
xchg
shlb
inc
or
hlt
movsb
sub
mov
rcr
jo
jnp
mov
sahf
cs
pop
aas
and
xor
rol
add
cmpsb
aam
fistl
xchg
jne
int
push
pushf
adc
pop
xor
and
mov
xor
fwait
mul
mov
dec
lret
dec
xchg
insl
and
stos
pop
cmp
lds
push
scas
data16
lock
add
mov
mov
mov
inc
in
or
add
add
add
in
pop
pop
mov
into
out
repz
mov
push
cmp
es
push
ja
call
popf
ret
stos
jle
addr16
out
cld
cwtl
mov
cmp
test
add
je
mov
dec
pop
icebp
roll
push
xchg
jg
repnz
ss
sub
cmp
inc
xchg
mov
lahf
xor
jae
nop
insl
out
dec
adc
add
shl
mov
enter
xchg
in
ret
je
enter
adc
pop
stos
test
mov
call
call
adc
inc
in
add
push
push
push
nop
aad
stc
xchg
repnz
scas
cs
inc
into
stos
dec
xchg
mov
mov
xor
mov
jnp
lock
push
setle
dec
and
popa
arpl
push
push
cmpb
mov
pop
bound
and
cmp
xor
jb
insb
mov
aam
add
add
enter
in
sbb
push
inc
je
addr16
add
add
add
mov
push
xchg
pop
inc
add
and
push
push
test
out
mov
and
mov
and
or
mov
push
outsb
xchg
push
cmp
fldt
push
xchg
mov
popf
adc
mov
adcb
dec
mov
fwait
popa
lds
mov
mov
push
pop
iret
scas
or
mov
imul
mov
insb
adc
cmp
add
mov
push
out
mov
add
fstl
stc
jge
sbbl
jnp
cmp
mov
cld
cmp
and
out
sbbl
stos
in
pop
out
dec
push
dec
cmp
pop
pop
lds
cld
mov
aad
cmp
or
mov
cmp
popa
push
out
fcom
jno
mov
pusha
repnz
sub
arpl
add
add
imul
cmc
call
inc
push
popa
and
cmp
addr16
add
add
add
pop
jno
push
call
jae
xchg
mov
jle
je
in
dec
mov
mov
cmpsb
addr16
gs
cld
cmc
lcall
adc
scas
mov
icebp
push
mov
aad
shrl
stc
ss
cmp
lock
pop
mov
or
xchg
in
mov
and
xchg
jnp
inc
jne
ret
enter
adcl
aad
aam
std
cmp
lret
mov
clc
dec
pusha
adc
pusha
add
jg
cmpsb
dec
sub
mov
mov
lods
in
xchg
or
xchg
cmp
dec
mov
out
leave
scas
push
adc
js
sub
xor
mov
dec
fimull
pop
mov
aad
adc
out
pop
mov
stos
ljmp
mov
outsl
mov
lock
arpl
les
aaa
test
lock
inc
inc
dec
mov
jb
lret
stc
das
movsl
mov
iret
sub
aad
and
add
add
add
negl
popf
mov
dec
mov
insl
ret
cmc
add
scas
insl
xchg
xchg
sti
add
lods
ds
xchg
pop
mov
in
mov
sub
inc
jmp
push
push
lock
push
pushf
xchg
dec
push
cli
stos
xor
pop
lahf
inc
popa
mov
in
cmp
stc
mov
je
mov
xchg
pusha
lds
test
lret
xchg
pop
push
popa
icebp
sub
pop
xorb
popf
jl
and
dec
int
or
push
int3
jp
ror
divl
pop
or
push
lret
sbb
jbe
dec
lds
xlat
ret
fisubl
jnp
dec
inc
insl
push
push
cld
sbb
or
mov
out
inc
cmp
dec
cmp
fsubs
cld
bound
cwtl
push
pop
fmuls
loopne
dec
les
jle
or
sbb
les
shlb
cwtl
out
in
lahf
xor
add
mov
out
out
out
into
gs
cld
test
sub
add
add
add
insb
or
sbb
lea
xchg
fs
sbb
inc
add
in
lods
or
or
add
clc
lret
adc
stos
movsl
xor
dec
mov
lret
mov
or
int3
bound
jne
mov
jl,pn
mov
cmp
aas
mov
lahf
mov
mov
mov
loope
in
hlt
inc
cwtl
pop
nop
loop
cmpsl
loope
xchg
cmp
lret
xchg
aad
sub
mov
repnz
push
imul
pushf
push
push
xchg
inc
daa
xchg
and
shlb
hlt
add
pop
sahf
adc
pop
add
sub
inc
pop
fcoms
mov
mov
lahf
mov
sbb
adc
mov
popa
cs
add
adc
jg
hlt
push
lods
int
xor
stos
push
dec
nop
push
add
shlb
loopne
and
je
out
mov
mov
roll
add
add
add
test
out
sbb
push
cmp
add
stos
pushf
loopne
sub
jbe
imul
and
cmp
cmpsb
pusha
adc
dec
iret
sub
mov
dec
shr
lock
push
lahf
lidtl
lea
dec
add
fildl
add
das
jp
scas
out
add
gs
inc
xchg
sti
jb
les
jp
lret
fistpll
xor
and
mov
les
inc
sti
lods
push
jg
xor
cs
inc
popa
inc
aas
daa
xorw
push
xchg
fwait
loope
inc
xor
pop
jb
das
mov
jle
add
cmp
popf
push
pop
insl
in
push
push
add
ret
notb
sub
fwait
rcll
cmp
xor
or
in
scas
cmp
pop
pop
gs
push
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
mov
pop
imul
add
add
add
ljmp
jae
lcall
push
icebp
xchg
push
sub
inc
aaa
out
int
fs
push
shl
mov
push
das
or
ds
es
faddl
fmul
sub
loope
and
jb
loopne
or
xor
stos
mov
xor
das
push
pop
inc
sub
lcall
test
mov
sub
subb
jnp
test
cmp
dec
and
cmpl
stos
mov
rep
adc
sti
push
push
xchg
push
dec
lds
scas
xchg
mov
pop
aam
fwait
jge
dec
adc
mov
push
ret
xor
jle
sbb
sbb
fldt
mov
sahf
pop
cli
mov
movsl
sbb
loope
fsubs
das
push
inc
flds
add
add
popf
mov
lahf
ret
or
roll
add
add
add
mov
iret
inc
mov
jns
cltd
ljmp
xchg
pop
push
mov
sub
mov
call
mov
inc
jl
xor
mov
rclb
sbb
add
test
adc
mov
imul
repnz
mov
nop
jo
cltd
in
mov
movsb
xacquire
mov
mov
outsb
xchg
sbb
cmp
mov
in
jns
mov
shlb
das
push
inc
xorl
add
sbb
sub
sub
clc
cltd
mov
test
xor
repnz
pop
lods
mov
pop
push
add
cmp
gs
sbb
adc
inc
ds
das
fbld
xor
inc
scas
loop
movsl
add
push
rcl
sbbb
jns
lods
out
repnz
sarl
xchg
pusha
sub
sbb
mov
mov
mov
pop
xchg
or
aam
add
add
add
dec
xlat
insl
scas
cmp
inc
sbb
adc
add
cmpb
jg
gs
inc
xchg
insb
mov
pushf
aad
es
lds
cltd
push
push
sbb
daa
push
iret
jl
inc
in
pop
push
and
mov
xlat
ret
jmp
mov
ljmp
nop
cmp
jmp
or
mov
pop
dec
jp
jbe
aaa
fsts
mov
dec
push
or
mov
fmuls
js
popa
cmp
mov
sarb
cmp
xchg
push
add
clc
aam
jmp
adc
mov
cwtl
mov
and
dec
cli
mov
add
push
fwait
xor
and
or
push
mov
nop
aad
jl
xor
arpl
pop
adc
sahf
mov
gs
ljmp
push
into
or
fsts
xor
add
sbb
sub
dec
dec
dec
aaa
jnp
aad
add
add
add
out
cmc
inc
into
mov
pop
cmpsl
xor
fs
xor
mov
and
push
pop
mov
ficoms
push
sbb
in
xchg
sbb
xor
push
mov
jae
jmp
pop
mov
push
xchg
insl
cli
fisubl
jl
pop
rol
push
std
in
jg
cmp
fs
push
jecxz
dec
mov
pop
cmpl
sub
mov
js
outsl
fmuls
iret
push
fdivrl
fmuls
repz
and
sub
sub
negl
sar
xor
and
jg
fcmovnb
push
xor
imul
inc
or
clc
call
xchg
jge
stos
pop
into
test
and
inc
stos
mov
daa
push
mov
iret
jg
or
cmp
xchg
xor
xchg
or
imul
add
pop
jae
mov
pushf
adc
ds
jae
pop
push
mulb
add
add
add
ja
mov
push
or
mov
je
ja
lock
or
int
inc
ror
in
push
xchg
mov
cmpsl
sbb
push
mov
outsl
ja
jne
mov
add
push
daa
in
sub
xchg
dec
jb
fistps
ds
mov
pop
es
inc
sbb
jg
dec
aas
pop
and
xor
push
ds
inc
popa
imul
outsl
leave
push
add
std
jnp
pop
fwait
xor
mov
movsl
push
in
sub
and
ret
orl
scas
pop
fists
fdivrs
arpl
repnz
push
iret
pop
and
pop
adc
adc
mov
pop
and
pop
dec
std
insl
pop
int3
push
arpl
mov
and
bound
add
sub
mov
icebp
add
ss
pop
mov
xchg
and
idiv
lahf
insl
mov
or
and
add
add
add
iret
lds
add
bound
jge
iret
or
cld
cmp
fadds
imul
mov
or
xchg
push
jmp
clc
push
sbb
fs
mov
pop
lcall
shr
bound
aam
fistpl
rolb
call
idivl
or
xchg
pop
sbb
push
sahf
mov
shl
xchg
sub
divb
in
addr16
nop
test
sub
adc
repz
ljmp
dec
pushw
nop
les
mov
xchg
dec
mov
aas
xchg
outsb
mov
mov
xlat
and
xor
cs
inc
shll
fistl
pop
test
xor
les
out
and
fstps
cmp
jb
sti
push
sbb
dec
ss
xorb
jmp
je
sti
in
sahf
mov
mov
rclb
cmp
jg
leave
or
pop
and
pop
fadds
add
add
add
xchg
lret
mov
iret
ja
mov
and
sbb
inc
sub
sahf
fadd
or
test
add
fidivs
sub
addr16
mov
sarl
fidivrl
inc
out
cmp
notl
or
sub
int
into
sub
adc
sub
idiv
xlat
and
stos
adc
inc
adc
arpl
cpuid
push
clc
in
lds
cmpsb
ja
cs
fistps
sub
pop
clc
mov
mov
testb
mov
das
imul
xchg
adc
and
xchg
cmp
dec
fs
movsb
pop
mov
mov
insl
mov
das
out
xchg
out
ljmp
cli
pop
xchg
rorl
sbb
inc
cmp
das
mov
pop
cmp
inc
cmc
and
out
push
loope
xchg
mov
imul
xchg
movsb
inc
jno
shlb
add
add
add
push
sub
pop
rclb
adc
xor
jae
push
repnz
cmp
fistpll
mov
jnp
fistpll
dec
imul
xlat
inc
arpl
xchg
lcall
cmpsl
xchg
cli
fistpl
ret
pop
scas
xchg
outsb
sbb
das
or
addr16
or
xor
push
sahf
and
mov
loope
jecxz
mov
jnp
push
dec
cwtl
inc
push
lock
and
and
rorb
scas
addr16
ror
mov
mov
call
mov
enter
fsts
mov
pop
cwtl
lods
in
jo
or
xchg
fimuls
loope
and
inc
push
or
ret
stc
dec
out
fcomp
jnp
jne
cmp
pop
jmp
pop
cwtl
adc
test
mov
pop
pushf
add
mov
ret
hlt
ret
add
out
fldcw
push
in
sub
xchg
fiaddl
add
add
add
out
sbb
ret
in
out
sbb
sbbl
mov
clc
pop
adc
sbb
jo
movsl
outsl
mov
imul
dec
inc
jb
push
sub
test
subb
pop
or
test
data16
mov
pop
adc
cmc
xchg
jne
das
bound
faddl
arpl
push
mov
xchg
inc
in
imul
out
jns
je
mov
inc
cwtl
mov
mov
out
sbb
mov
sbb
in
cmp
int
mov
and
cmp
cs
sub
gs
stos
xchg
stos
adc
mov
addl
dec
or
jle
lret
bound
aad
jnp
adc
mov
mov
clc
mov
rorl
jl
add
lret
xchg
push
cs
xlat
test
jbe
push
cwtl
sbb
rorl
jmp
testb
sti
push
xchg
push
aad
cwtl
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
decb
add
add
pop
fsqrt
adc
in
fwait
fwait
data16
sub
jg
fs
aad
xchg
shl
dec
sahf
jnp
pop
adc
test
push
ja
xchg
in
jns
cmp
adc
or
lds
jo
mov
dec
inc
mov
dec
jns
test
jne
ja
imul
arpl
scas
or
jno
pop
arpl
aas
popf
push
mov
pop
jle
mov
in
int3
sbb
in
cmp
sub
idivb
rcr
mov
cmpsl
xor
xor
push
pop
or
pop
ret
arpl
iret
dec
lods
les
out
xor
in
sbb
insl
cmp
lahf
xor
jecxz
jne
clc
adc
adc
mov
int3
jnp
bound
lcall
sub
inc
xor
lret
movsb
in
jbe
jmp
push
mov
lods
pop
add
dec
in
movsl
insl
mov
pusha
neg
imul
loop
pop
dec
jle
jg
std
fstpt
and
stc
faddl
add
add
add
popa
add
mov
or
lock
cmc
sub
lods
xor
cmc
lods
pop
fisubrs
push
dec
push
int3
cmp
in
xchg
cmpb
cmc
xchg
shll
pop
loop
lcall
mov
or
sbb
mov
in
rorb
sahf
aad
es
xor
dec
nop
adc
cmc
push
cmp
hlt
jge
sti
aaa
std
cmpsl
push
xor
jle
xchg
cmp
sub
roll
push
daa
sarl
pop
dec
dec
sbb
inc
xchg
jmp
lods
add
lcall
xchg
test
fimuls
sub
pop
dec
out
in
cmp
dec
stos
adc
adc
inc
xchg
testl
fnstsw
cmp
ljmp
gs
fldl
add
add
add
xor
inc
mov
rorl
dec
out
lea
xor
mov
mov
pop
sub
xchg
cli
jb
sub
fildl
or
xchg
adc
rorb
loope
mov
fldcw
xchg
sbb
enter
cmp
adc
push
cmp
pop
xchg
pop
push
pop
mov
dec
sbb
push
fldcw
cmpsl
sub
xchg
sub
lock
jmp
enter
ljmp
xchg
pop
cmp
or
scas
push
adc
test
push
pop
adc
test
or
test
lods
subb
jg
jne
insl
ja
mov
mov
pop
dec
mov
or
pusha
mov
les
pop
mov
cmp
ljmp
push
xchg
jl
daa
fsubrl
sbb
in
enter
add
sbb
push
push
add
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
xchg
push
int
pop
scas
dec
enter
hlt
stos
repnz
push
rep
or
mov
movsl
jp
movsl
mov
rcll
pusha
shr
mov
clc
fistl
dec
lods
insl
rcr
push
mov
cmpsb
das
sbb
pop
cmpsb
fdivs
pop
xchg
test
pushf
sbb
faddl
jecxz
and
rorl
cmp
cmp
push
xchg
and
adc
lea
rcl
fwait
pop
fbstp
jle
test
inc
cmp
xor
or
cmp
popf
cmp
shl
xor
pusha
insb
pop
mov
jge
cmc
jo
in
or
adc
leave
shrl
and
iret
mov
lds
movsl
sub
pusha
sbb
jns
out
push
inc
insl
lock
mov
jp
or
nop
scas
nop
and
add
add
push
out
faddl
cmpsl
movsb
filds
add
add
add
movsl
cmp
jp
mov
jmp
mov
lods
mov
inc
ds
inc
lahf
idivl
orl
bound
inc
dec
and
loop
fnstsw
mov
mov
mov
sbb
push
inc
das
lcall
mov
lds
mov
cmp
cmp
lcall
pop
jp
imulb
lods
decb
movsl
inc
mov
dec
cmp
int3
int
leave
push
roll
enter
mov
idiv
sti
jne
push
jmp
out
xchg
out
cmpsl
xchg
cltd
xchg
dec
aam
mov
bound
test
fidivl
insb
outsl
fistl
push
dec
and
sbb
mov
or
inc
and
push
and
ds
xor
sbb
inc
cmp
cmp
sub
outsl
cmpsb
sub
pusha
cmp
faddl
push
add
mov
lcall
fisttps
or
loopnew
add
add
add
xchg
xchg
push
and
sarb
out
lods
mov
lods
sbb
incb
test
and
nop
into
les
loopne
sti
xchg
pop
test
mov
sarl
dec
repnz
in
mov
pop
negl
cmpsl
cld
jge
add
jae
or
or
xchg
inc
imul
lods
jecxz
stos
mov
jp
xchg
add
add
cmp
and
out
popa
jg
cmp
pop
jae
adc
add
push
sbb
dec
mov
lahf
mov
cmp
pop
xor
nop
sbb
add
es
jle
iret
in
mov
sbb
adc
sub
xchg
or
in
pop
or
mov
mov
jl
inc
xchg
pop
add
fnstenv
mov
ljmp
movsb
jecxz
push
jo
fwait
xlat
inc
stc
cmpsb
sub
xchg
jge
ja
push
push
imul
add
add
mov
jns
xchg
xchg
mov
in
push
add
add
scas
arpl
fisubl
cli
mov
pop
mov
sbb
outsl
fs
in
int
xor
into
xchg
sti
mov
leave
xor
repnz
mov
add
mov
jle
popa
subb
inc
test
ja
icebp
mov
stc
adc
lods
jne
and
add
test
loopne
pop
mov
cwtl
jle
out
and
add
add
mov
push
push
orl
insb
or
push
fmull
mov
outsl
cmp
sub
mov
lods
mov
mov
adc
into
jg
fisubrs
xor
mov
adc
and
sahf
shrb
pop
or
or
sub
jmp
pop
mov
sub
pop
and
gs
push
mov
insb
stos
mov
mov
mov
dec
sbb
jns
or
movsb
dec
inc
cli
sub
cmp
inc
xchg
pop
xchg
jae
fadd
fsubp
jnp
or
cld
in
mov
add
add
add
dec
fists
stc
jae
cmp
cli
jae
jbe
mov
mov
or
add
pusha
push
push
test
nop
clc
dec
lods
pop
xchg
xlat
std
push
add
xchg
cmpb
mov
xor
js
paddusb
enter
push
and
movsl
std
aas
loope,pt
lahf
add
cmp
shll
adc
imul
hlt
xchg
sbb
aaa
add
adc
and
out
ret
adc
mov
pop
pop
xlat
push
repz
out
in
pop
enter
push
cmovp
arpl
mov
loop
adc
push
out
cltd
scas
push
insl
cmpsl
cmp
push
dec
arpl
xchg
mov
push
cmp
cli
mov
test
in
xchg
add
mov
inc
out
outsl
mov
fdivr
xchg
outsb
push
cmp
xchg
roll
aaa
jmp
imul
push
and
out
xchg
push
cmp
sub
cld
cli
jle
dec
nop
xor
mov
add
add
add
icebp
imul
jnp
stc
data16
fisubl
js
fldl
addr16
in
lods
or
lods
xor
mov
out
or
sbb
loop
out
push
movsl
lret
sahf
into
std
mov
pop
repnz
js
aad
lret
outsl
in
pusha
mov
sub
xchg
add
aaa
and
fs
fdivrl
sbb
aas
fimull
pop
mov
das
xchg
adc
scas
cli
mov
or
fdivr
push
jg
lds
shlb
scas
iret
xor
xchg
jmp
hlt
mov
faddp
loope
lahf
inc
push
and
dec
je
lock
cwtl
jle
sbb
mov
mov
adc
out
fbld
repnz
sbb
pop
xchg
hlt
test
push
les
cmp
adc
test
dec
test
ret
out
xor
test
add
ja
sti
aaa
out
ja
aaa
shlb
addr16
add
add
add
cmp
out
adc
test
rsqrtps
or
fidivrs
xor
push
fisttpl
and
mov
inc
mov
ss
leave
lods
mov
jp
dec
jecxz
sbb
decb
xchg
out
jle
repz
pop
repz
into
shl
push
andb
cmp
xchg
addr16
cmp
aam
sub
xchg
mov
es
pop
int
jne
mov
movsb
arpl
popa
sbb
scas
dec
lea
inc
sub
jge
cmpsl
sub
aaa
test
or
jl
mov
xchg
sub
popa
mov
stc
loope
inc
mov
adc
sub
push
xor
dec
mul
mov
pusha
adc
shl
movsb
add
and
mov
lcall
push
ficomps
xchg
das
mov
fnstcw
loope
jnp
ror
fwait
fwait
jmp
jbe
ror
cltd
outsl
mov
aaa
pushf
mov
in
add
add
add
cmc
subl
sti
int
shl
out
aam
movl
add
dec
mov
cmpsb
push
cmc
mov
iret
popf
pushf
fistl
arpl
sbb
push
std
lods
dec
dec
hlt
scas
cmp
push
movsl
cmp
and
fcompl
test
add
pop
sub
xor
mov
xor
xchg
sbb
mov
stos
lds
sub
mov
jo
inc
push
popa
idivl
ret
mov
sbb
cmp
cli
dec
adc
aad
pop
adc
jne
xchg
shl
cli
sbb
fcom
xor
fsubrl
lret
pop
mov
lea
add
cmp
ljmp
push
nop
test
dec
pop
and
outsb
stc
xor
in
or
adc
cmpsb
cmp
jecxz
sbb
dec
cmc
cmp
aam
cmp
popa
loope
leave
loope
xchg
add
add
ja
lcall
mov
inc
addr16
add
add
add
outsl
in
sbb
aad
cs
sbb
xchg
mov
xor
andl
mov
fs
out
and
loope
mov
imul
xor
mov
jnp
adc
hlt
xchg
popa
movsl
mov
mov
inc
cmpsb
cs
xor
pslld
push
cld
js
das
fwait
sub
jl
test
shll
test
fwait
pop
push
rorl
ja
adc
dec
test
popa
jno
in
inc
inc
call
sbb
xor
int
push
xlat
sub
test
push
inc
mov
add
cmpsl
shr
je
repnz
sub
push
mov
loope
fidivrl
mov
aas
dec
clc
out
pop
sub
into
and
gs
sbb
jae
add
xchg
pushf
dec
jge
repnz
rol
mov
push
hlt
or
popf
or
cmp
outsb
inc
cmpsb
push
jae
insl
push
cmp
insb
and
add
add
add
lock
jg
in
and
fwait
or
addr16
add
add
add
bound
xor
pop
bound
mov
ss
adc
dec
jae
jo
aas
lds
into
mov
xchg
out
je
scas
mov
adc
ds
js
dec
xor
roll
jns,pt
loopne
rol
cwtl
mov
xor
adc
fistpll
and
shrl
in
nop
mov
test
pushf
jnp
outsl
sbb
movsb
push
jle
jecxz
mov
lahf
scas
mov
inc
lcall
adc
xchg
jae
xchg
push
add
rcr
adc
daa
sub
cmp
outsb
adc
jp
push
inc
aad
aas
mov
push
adc
roll
push
mov
ss
mov
inc
ret
lds
mov
imul
fdivr
pop
cmp
adc
mov
adc
cmp
push
shl
jp,pt
or
jo
add
adc
mov
add
pop
xlat
fistpl
mov
add
add
add
cld
sub
rcll
sahf
pop
into
shl
push
repz
cmpsl
loopne
in
xor
cmp
ds
jnp
xor
movsb
add
add
bound
pusha
lea
cmp
pop
ret
add
pop
xor
pop
mov
fsubr
lds
pop
sub
fs
mov
jl
mov
mov
icebp
sbb
cmpsl
xchg
in
mov
cmp
inc
pop
std
cmpsl
xor
jne
pusha
cltd
loop
arpl
cwtl
push
sub
arpl
rolb
in
push
outsb
jmp
mov
ljmp
add
mov
inc
sub
imul
cld
icebp
dec
pop
jmp
or
sbb
push
loope
aad
out
sbb
leave
and
pop
pop
add
and
cmpsb
jne
lahf
loope
inc
mov
scas
xchg
cmp
imul
add
stc
mov
dec
js
stc
mov
dec
int
cld
inc
test
jmp
add
sbb
sub
aas
or
fmull
mov
sub
movb
inc
repz
pop
insb
mov
mov
sub
xchg
pop
mov
mov
cwtl
mov
loope
push
cltd
sarb
ja
ss
sub
repnz
mov
mov
movsb
or
xor
jo
ror
xchg
out
movsl
mov
mov
movsb
pop
insb
mov
cmp
arpl
ret
mov
inc
push
loope
jg
lods
xchg
mov
sbb
fcoml
stos
xchg
jecxz
add
adc
sti
mov
and
and
iret
outsb
std
pop
pop
lds
xchg
lret
and
dec
inc
jo
arpl
aad
sbb
inc
aaa
rcll
mov
pop
pop
out
and
movsl
aam
pop
int
ret
pop
mov
mov
out
in
ja
cmp
fwait
ds
cwtl
xor
mov
pop
insb
fildll
fwait
jns
jns
xchg
sti
addr16
fiadds
xchg
push
dec
fisubs
fistl
mov
fcoms
dec
inc
add
mov
pusha
sahf
aam
rol
sbb
ds
and
jg
dec
pushf
nop
adc
call
mov
mov
pop
push
mov
stos
fisubrl
mov
arpl
gs
pop
hlt
loop
stos
push
dec
adc
fidivrs
xchg
or
add
std
nop
in
testb
fildll
lea
xchg
mov
mov
out
push
or
jbe
mov
outsl
ljmp
incl
aam
sbb
and
mov
fcmovb
xor
and
jns
inc
ret
sub
mov
xchg
std
out
repz
popa
into
fs
xor
mov
arpl
inc
push
or
sub
repnz
insb
bts
xor
leave
mov
pop
xchg
and
shr
add
add
mov
pxor
jnp
adc
jne
mov
mov
add
add
add
pop
imul
clc
pusha
aas
adc
ret
add
aam
pop
jns
rcll
addr16
adc
pop
add
sarl
sub
xor
ljmp
jp
sub
loope
sub
jp
push
fldcw
in
adc
pop
ficoms
xor
pop
xchg
mov
into
mov
mov
data16
rol
push
ret
jne
and
mov
mov
rcrb
jnp
push
xorl
insl
jb
xchg
cmp
mov
in
add
xorb
arpl
push
mov
out
xor
adc
mov
cmp
shld
int3
xchg
shrl
sub
dec
pop
and
in
adc
nop
pop
xor
and
out
inc
pop
jmp
mov
xor
xchg
sub
gs
push
aas
jns
out
lods
xor
aas
xlat
fistl
das
mov
jns
addr16
add
add
add
xor
leave
out
push
sbb
adc
mov
mov
sub
dec
push
loop
ficoml
movups
outsl
data16
xchg
cmp
aad
lea
jle
sbb
pusha
cmpsb
aas
add
jecxz
lea
outsb
dec
or
imul
mov
xchg
ljmp
sub
leave
dec
pop
xchg
jbe
insb
xchg
and
jle
insb
jl
or
mov
jmp
xchg
stos
adc
push
adc
jo
imul
mov
stc
popa
loope
pop
in
mov
fldcw
adc
ja
or
es
add
mov
ja
arpl
pop
dec
or
mov
add
push
cmp
jb
leave
subb
test
sti
dec
sub
insb
mov
lcall
pop
sbbl
fs
xchg
movsl
dec
or
mov
push
in
dec
inc
mov
add
jb
scas
decb
fisttps
xor
add
add
add
cwtl
lock
aad
in
add
dec
xchg
repz
add
outsl
jmp
pop
stc
jge
dec
insb
jle
xchg
xor
push
xchg
dec
fwait
mov
xorb
fisubrl
mov
divb
jb
mov
add
orb
sub
je
stos
xor
pop
or
subl
gs
jp
test
push
enter
pop
mov
stc
fdivl
mov
jo
cmp
add
fsub
repz
cli
mov
sub
bswap
jp
mov
aas
imul
xor
js
addr16
push
ja
pop
mov
fisttpll
cmpsl
movsb
test
xor
stos
stos
pop
jmp
inc
nop
scas
or
cmp
mov
fs
mov
dec
mov
sub
fstl
adc
xor
lea
sar
cli
add
push
xchg
mov
outsb
call
pushf
andb
mov
mov
xlat
mov
xchg
in
pop
cmp
addr16
add
add
add
mov
push
repz
pop
cmc
arpl
insl
mov
lods
outsl
jl
arpl
jl
xor
inc
test
int
dec
cmpsb
stos
cmc
out
push
push
sbb
pop
mov
mov
sub
sbb
jns
inc
pop
icebp
shrl
rdpmc
xor
mov
jge
and
rolb
mov
outsl
jl
jmp
adc
aam
lret
sub
jge
das
gs
popf
sti
inc
js
xchg
add
popa
adc
rclb
popf
sub
cmp
ljmp
xor
xor
dec
imul
add
and
add
imul
insb
fs
xor
aas
mov
dec
addr16
cmp
sbb
push
repnz
mov
jne
xchg
and
aas
mov
cwtl
add
movb
mov
fdivs
clc
pop
sub
ficomps
lods
cmp
lods
aas
mov
fbld
addr16
add
add
add
popa
adc
inc
mov
sbb
pop
scas
push
test
lret
and
test
mov
sub
and
fidivs
out
cltd
cmp
test
pop
ficoms
imul
pop
ror
sub
gs
dec
ret
shl
inc
adc
sbb
cli
pusha
xlat
mov
jae
mov
push
pushf
sub
and
ljmp
jg
push
mov
out
cld
push
jae
lcall
mov
push
jge
jb
rcl
cmpsl
adc
mov
lahf
test
ja
popa
inc
mov
loope
jp
sti
adc
lret
mov
xchg
fadds
test
aaa
std
mov
scas
inc
xor
shlb
ret
pusha
jle
cmc
out
fbld
xor
ret
push
xor
jne
add
aas
js
js
xchg
scas
sub
dec
sbb
add
add
mov
sti
mov
dec
lock
push
lock
add
add
movsl
mov
push
jb
jo
jp
loop
inc
dec
adc
out
insl
jg
lds
addl
dec
cltd
mov
das
lock
mov
stc
push
out
mov
out
xor
outsb
outsl
scas
and
pop
pop
loope
in
pop
cmc
imul
sub
ficomps
outsb
icebp
sub
daa
mov
mov
or
mov
imul
std
and
inc
in
cli
jmp
pushf
fildl
dec
jae
jl
faddp
dec
mov
ljmp
dec
xchg
sub
mov
mov
cwtl
fmuls
xchg
data16
pop
ret
dec
shll
inc
bound
repz
loopne
pop
rcrl
lret
dec
call
mov
mov
mov
inc
out
pop
leave
movl
or
push
push
hlt
push
xchg
ja
sbb
pop
stos
nop
jmp
xchg
std
lret
stos
push
addr16
dec
mov
pop
loop
dec
aad
push
cmp
adc
neg
jge
xchg
jns
xchg
jne
imul
add
add
add
and
lcall
enter
cmp
cmp
cwtl
xchg
add
sbb
adc
jmp
sub
sti
ficoms
movsb
pop
pop
mov
call
inc
dec
arpl
mov
clc
pop
pop
mov
or
pop
popf
adc
mov
aad
pop
mov
cltd
int
sahf
lods
mov
insb
ds
push
mov
pop
in
pop
push
shl
pop
xchg
mov
mov
rolb
notb
pushf
xlat
or
adc
cwtl
pop
loope
ret
movsl
icebp
fbld
lds
sub
inc
fcoms
lret
je
icebp
cmpxchg
sbbl
or
jne
and
lret
sahf
mov
dec
jb
adc
stos
pop
popa
into
stos
jnp
mov
shl
std
sub
push
hlt
cmp
pop
cmp
outsl
jg
jg
sub
fcmovu
sahf
icebp
out
repnz
add
add
adc
pushf
pop
in
sub
or
mov
push
cli
addb
ljmp
fs
add
add
inc
cli
popa
xchg
bound
fdivl
jg
xchg
aad
ljmp
js
inc
pop
enter
pop
cmc
loop
mov
js
push
icebp
jnp
mov
inc
inc
xlat
pop
cmp
cmpsl
dec
idivl
dec
mov
mov
repnz
sbb
int3
aaa
xchg
jg
and
inc
mov
push
or
mov
xchg
out
imul
mov
pushl
pop
addb
pusha
sub
xadd
stos
insl
imull
loope
fsts
push
push
pop
mov
aad
and
shrl
xor
orl
arpl
jne
push
fisubl
mov
sbb
movsl
dec
mov
mov
inc
push
sub
jbe
in
adc
cltd
or
les
icebp
pop
cmp
add
add
ja
and
aaa
divl
mov
add
add
add
jno
mov
pop
mov
imul
ljmp
ror
mov
inc
out
mov
and
out
mov
inc
sbb
sti
mov
inc
aam
pop
or
mov
inc
insb
stos
shll
lahf
jno
scas
nopl
mov
ljmp
or
popa
mov
adc
mov
js
std
ss
imul
push
jnp
pop
movsl
push
or
mov
cmp
and
cmp
push
xchg
adc
nop
loopne
jno
sub
addr16
mov
push
inc
cmp
insl
mov
rolb
jmp
inc
stos
jo
out
xlat
ficompl
jle
push
out
pushl
loope
flds
mov
lcall
xchg
dec
scas
jnp
cwtl
dec
fists
inc
fisttps
cltd
xchg
mov
push
pushf
push
mov
pand
add
add
mov
cmc
mov
jl
jbe
addr16
add
add
add
and
repnz
mov
aad
in
push
dec
jbe
nop
add
mov
cmpsl
mov
xchg
test
sbb
ljmp
push
iret
xchg
out
cmp
mov
mov
orl
dec
sbb
cwtl
bound
dec
sbb
inc
test
jmp
fs
fbstp
gs
mov
jnp
adc
push
rcll
movsl
mov
arpl
push
pusha
mov
cmp
loop
sub
in
lea
cmovg
push
mov
mov
aas
fbstp
dec
add
idivl
orb
xchg
or
idivb
xchg
outsl
mov
stos
cltd
inc
pop
test
and
stc
fmull
xchg
mov
xor
test
push
cmc
imul
hlt
mov
add
call
icebp
jle
jne
pusha
popf
pop
sbbl
add
add
add
mov
pop
imul
inc
std
xchg
sbb
mov
dec
movswl
jb
cld
out
inc
xor
icebp
adc
push
cmp
xchg
insb
int3
subb
jbe
inc
in
dec
xor
push
and
iret
xlat
insb
enter
decl
or
bound
mov
fcmovb
test
xor
je
pop
adc
pop
mov
cwtl
out
jnp
ret
and
sbb
test
jo
dec
andl
cs
mov
adc
pop
movb
inc
jl
sbb
sbb
dec
sub
jne
in
add
mov
lea
pop
push
lods
lods
push
jmp
inc
pop
sub
js
imul
fistl
push
mov
push
test
int3
inc
push
stos
mov
sbb
mov
outsb
jne
jg
in
cltd
mov
dec
or
push
icebp
mov
cs
sub
jecxz
xor
push
pop
test
add
add
imulb
mul
xor
testb
add
add
andl
push
jge
ret
mov
jmp
jb
adc
pop
imul
lahf
sti
jne
popa
dec
stc
sub
aas
sti
mov
jg
push
addr16
add
lcall
fucom
das
mov
pusha
gs
dec
nop
mov
fwait
or
pminub
int
jecxz
jns
arpl
mov
mov
cmp
lcall
clc
and
rclb
rcl
out
shlb
pop
mov
movsb
mov
adc
mov
xchg
push
and
and
push
out
fwait
lcall
mov
push
ret
nop
jb
adcl
push
push
sbb
ror
daa
inc
sub
xchg
push
jne
sub
mov
mov
mov
adc
push
clc
jp
pop
dec
imul
pop
stc
and
in
mov
add
add
add
xor
jb
jae
jno
xchg
shlb
add
add
add
leave
movsb
js
imul
mov
push
pop
addl
cmp
sahf
sub
push
add
push
and
push
inc
mov
or
push
and
stos
adcb
mov
in
lahf
leave
inc
and
inc
addl
pop
imul
shld
inc
xchg
push
loopne
rcr
jecxz
cmpsb
push
or
into
xchg
sbb
or
push
xchg
pop
out
or
dec
idiv
mov
adc
pop
in
jg
fbld
sub
sbb
inc
stos
xchg
adc
fisubs
adc
pop
out
out
mov
cmp
cs
sub
dec
daa
mov
sub
push
sub
sub
stos
fmuls
sbb
sbb
mov
sub
stc
or
cmp
mov
outsl
push
mov
test
lea
adc
pop
jl
int3
push
test
jecxz
pop
inc
clc
inc
cwtl
and
lret
mov
adc
int
in
idivl
js
mov
jmp
clc
add
add
add
jns
rcrl
mov
int
mov
jp
roll
outsl
jge
cmp
popf
movb
mov
sbb
mov
hlt
imul
fimull
jae
mov
repnz
push
mov
and
addr16
ja
arpl
ficoml
jno
jbe
lods
ja
das
or
int3
pop
scas
push
gs
lret
outsl
dec
and
rcr
pusha
push
lods
gs
sbb
mul
andb
into
jb
out
xchg
jge
inc
jae
fwait
in
popa
rol
gs
inc
jge
or
test
in
sbb
ss
push
lret
dec
clc
xchg
hlt
ret
cmpsl
data16
sbb
adc
pop
jg
test
sub
in
sub
fsubs
hlt
xchg
pusha
mov
mov
subl
pop
cs
xor
adc
test
add
add
jecxz
inc
cli
aas
into
lret
roll
addr16
add
add
add
fs
dec
mov
subb
aaa
add
mov
inc
jnp
out
and
dec
mov
daa
or
stc
shll
stos
jns
mov
nop
lods
into
sbb
cltd
sbb
ret
cld
aaa
cli
pop
xchg
fcoms
push
add
cltd
jp
mov
mov
dec
je
imul
or
iret
icebp
jle
pop
mov
inc
lahf
mov
cmp
cs
int3
push
fcmovbe
sub
mov
lcall
xor
or
xor
fmuls
in
jp
fidivrl
hlt
ss
lahf
fwait
mov
das
pushf
lret
in
bound
add
push
ss
and
adc
je
aaa
add
mov
adc
hlt
insb
xchg
ljmp
push
aad
pop
cmpsl
lds
pushl
cwtl
mov
lcall
pop
or
clc
addr16
add
add
add
stos
cmp
mov
pop
or
icebp
ret
dec
jnp
jmp
and
mov
into
lods
stc
push
or
js
ds
push
sti
mov
lods
pop
lea
mov
dec
and
out
mov
add
xor
or
dec
mov
push
enter
xlat
mov
mov
jne
mov
xchg
mov
ds
mov
test
sbb
stos
hlt
pop
loopne
test
dec
shrb
jecxz
sub
adcl
mov
push
adc
adc
push
in
pop
jne
adc
cltd
sti
es
jb
inc
push
mov
in
and
add
ljmp
enter
imul
repz
gs
add
orl
shll
call
arpl
ljmp
negb
pop
mov
fwait
push
cmpsl
inc
mov
aaa
jae
cltd
dec
mov
jno
test
clc
das
addr16
add
add
add
test
push
xor
jnp
adc
insb
sub
and
rorl
out
popa
test
and
shl
sub
xchg
and
add
mov
push
je
jns
sbb
roll
push
and
lret
and
insw
add
and
jne
nop
test
and
push
inc
je
or
sti
mov
enter
rcrl
cmp
fnstcw
mov
pusha
fadds
cmp
pop
jl
mov
lock
rcr
cmp
ss
mov
cmp
fs
xor
dec
pop
std
mov
aas
shll
pop
mov
insl
mov
mov
jns
push
jg
sub
push
js
insl
cmp
out
mov
push
popf
outsb
rcrb
imul
push
lahf
addb
lds
sbb
mov
ret
jp
mov
cmp
fists
ds
into
nop
out
cwtl
jle
push
sub
dec
insb
mov
sbb
add
add
dec
xchg
enter
pop
clc
ret
out
jbe
sbb
popf
in
pusha
mov
stc
stos
cmp
and
dec
mov
shl
ljmp
pop
stos
ja
push
xchg
or
inc
and
pop
pop
push
adc
shrb
jmp
aas
mov
ja
int3
orl
movsb
shrl
xor
out
pop
sub
lret
mov
cltd
jp
adc
lret
and
mov
out
lret
fsin
mov
lods
jmp
xorl
dec
add
sub
leave
nop
aas
jno
call
sub
cmpsl
arpl
mov
mov
es
jmp
stc
movsl
xchg
xchg
rclb
mov
sub
jge
sbb
mov
pop
cmp
add
loope
jmp
adc
enter
ljmp
add
add
add
test
jg
push
pop
push
mov
addr16
add
add
add
xor
jecxz
loope
push
lea
loopne
xor
leavew
inc
pop
jl
jl
pop
clc
sub
pop
add
adc
jg
leave
and
imul
in
lea
xchg
nop
and
insb
mov
add
mov
fcoms
xor
sub
sub
rcll
in
dec
jo
hlt
test
mov
lods
imul
lds
insb
orl
rolb
jns
popf
xor
es
and
test
icebp
push
xor
mov
push
add
push
pop
loopne
fstps
movsl
dec
mov
cmp
adc
mov
jg
movsb
daa
xor
dec
insl
gs
out
lcall
or
or
popf
into
and
fwait
sbbb
js
pop
adc
shlb
push
jmp
adc
jno
movsb
jp
jg
fstpl
dec
rolb
add
add
movsb
push
in
cmc
jne
sbb
js
pop
loopne
incb
add
add
add
lods
mov
shlb
mov
cmpsl
push
jg
call
xchg
jo
out
outsl
test
jle
jl
scas
adc
jno
xchg
cltd
dec
cli
add
sub
add
inc
sub
aas
daa
and
stc
xor
mov
sbb
push
icebp
mov
jmp
popa
js
imul
jmp
jmp
adc
in
inc
sub
testl
movsb
xchg
push
mov
cmpb
jae
xorb
pop
out
nop
xor
xlat
adc
cvtdq2ps
sahf
fisttps
ret
gs
push
mov
loope
dec
mov
ret
push
daa
nop
in
ds
out
shll
clc
test
xchg
mov
xchg
xchg
clc
mov
cmp
outsl
lret
pop
mov
add
stos
pop
sbb
test
repnz
fucomip
adc
out
and
sbb
add
add
sbb
shlb
aas
out
int3
mov
clc
sbb
add
add
add
aam
imul
imul
mov
loope
mov
ficoms
cmpsl
or
testb
xor
in
pop
cmp
adc
adc
xor
icebp
pop
imul
xchg
xchg
ss
fwait
test
out
pushf
orb
push
inc
mov
sbb
out
cwtl
test
push
loopne
jno
lods
and
outsb
aaa
jbe
sbb
popf
std
aad
pop
mov
mov
dec
push
fxch
lods
mov
lock
add
leave
pop
xor
outsb
push
sub
sub
dec
data16
mov
test
sahf
ss
add
xlat
mov
or
arpl
shll
sahf
lods
mov
and
inc
fldenv
ret
pop
loope
or
xor
lods
sub
imul
lcall
mov
imul
fdivs
sar
or
mov
and
add
add
add
add
add
insb
data16
into
push
and
mov
pop
pop
mov
xor
push
sbb
bnd
shrb
or
cmp
and
add
jbe
ja
out
loope
mov
sub
or
sub
and
dec
dec
and
fcoml
xchg
push
dec
outsb
shlb
sub
inc
jo
insl
outsl
les
es
shufps
shrl
pop
xor
dec
fnstsw
flds
cmp
cmp
pop
push
mov
subl
adc
and
mov
or
ret
test
xor
sub
cmc
add
pop
jbe
push
cltd
in
divb
std
or
icebp
dec
dec
repz
test
cli
int
inc
ret
lahf
xlat
mov
mov
mov
dec
imull
push
lcall
add
dec
inc
ljmp
add
xchg
jecxz
dec
rol
lret
clc
cmc
inc
stos
repz
xor
add
add
add
add
mov
sbb
adc
gs
outsl
push
adc
mov
fsts
push
jnp
cs
jns
lock
mov
and
loopne
imul
imul
pcmpgtd
das
sub
cmpb
sub
cld
pop
add
lock
dec
mov
insb
adc
or
mov
mov
mov
xorl
dec
push
xchg
mov
fs
je
dec
jne
fbstp
mov
mov
pop
mov
or
jns
pop
or
mov
mov
repnz
push
lds
mov
add
dec
jp
repz
les
xor
and
add
sbb
xchg
leave
out
cmp
push
sbb
or
xchg
lea
repz
cmpsl
jl
jle
mov
pop
mov
clc
sbb
iret
or
add
add
std
aaa
mov
shll
or
add
add
add
dec
push
jg
mov
push
adcb
xor
cwtl
dec
ja
dec
mov
or
or
sahf
cmpb
mov
sub
jmp
xor
fstpt
cmp
mov
mov
mov
jno
xor
mov
pop
sahf
add
jle
lea
aad
jp
jg
roll
stos
sub
and
jae
pusha
cmp
popa
inc
sub
lcall
out
pop
xor
jecxz
popf
mov
cmp
test
push
cmp
pop
arpl
push
clc
sti
xor
or
mov
and
mov
dec
push
pop
jne
jnp
movsl
cmp
mov
sub
arpl
sti
cmp
jecxz
pop
fdivs
mov
push
xlat
adcb
mov
insb
mov
ljmp
in
out
pusha
scas
and
dec
pop
insb
and
insl
aam
mov
scas
add
test
das
add
add
add
les
fsubrl
add
cmp
xor
unpcklps
outsb
dec
sbb
pop
lcall
pop
adc
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
mov
add
out
test
inc
mov
add
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
