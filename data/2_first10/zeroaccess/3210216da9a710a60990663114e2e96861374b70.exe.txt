push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
jl
jl
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
jecxz
cli
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
leave
xor
cmp
lock
cmp
jecxz
test
test
cmp
std
jmp
rcr
out
xlat
icebp
shll
fsubr
in
out
ret
aad
filds
test
out
enter
cmc
mov
iret
leave
cs
out
fcomi
cmp
loopne
iret
shl
cmc
cld
jmp
call
aad
loopne
into
fxam
int3
enter
sarl
repnz
ds
ret
loop
xchg
nop
loope
in
icebp
div
in
test
stc
loope
loopne
in
test
and
out
shr
xchg
lret
loop
fnclex
out
xor
cld
cli
into
iret
jmp
mov
f2xm1
loopne
or
in
call
out
cld
hlt
cmc
out
neg
sub
loope
xchg
cld
loope
lret
into
enter
fsubrp
int3
iret
loope
shl
jecxz
in
in
enter
in
adcb
repz
fcmovnu
idivb
aas
addl
out
lret
cli
lret
xchg
fcomip
xor
ljmp
shll
cmp
lret
xchg
xchg
or
jecxz
jmp
repz
out
clc
testb
add
in
jecxz
fsub
sti
mov
loope
hlt
call
shl
loope
cmp
int3
aas
ret
adc
out
sub
mov
mov
jecxz
cmc
shl
lock
xor
mov
test
mov
icebp
out
hlt
cs
aas
sbb
out
aas
ret
ljmp
int3
xlat
lret
iret
xor
xlat
jmp
in
in
out
xor
sti
iret
leave
mov
or
fdivp
shl
in
int3
cmc
lret
cli
jmp
loopne
xlat
leave
cld
ret
dec
loope
mov
loope
int3
aam
cld
leave
in
jecxz
ljmp
xor
lret
aam
in
aad
iret
fld
lret
lret
fdivrp
stc
orl
mov
icebp
nop
out
call
aam
ljmp
stc
fdivr
cmp
add
out
lret
icebp
aad
shlb
imul
leave
ds
out
lret
fdiv
xchg
mov
mov
shl
in
fsubr
aam
aas
mul
shl
out
stc
shr
les
std
lret
jecxz
repz
xor
xor
leave
call
loop
std
cli
jecxz
lds
clc
call
in
out
clc
shll
jmp
into
repnz
shl
loope
imul
fucom
int
mov
int3
in
call
int
rcl
sti
shl
fsub
shl
fnstsw
lock
fldl2t
test
loope
fsubr
incb
xor
std
in
ror
sar
fcomip
fdivrs
loop
xchg
roll
test
ror
xor
call
sbb
xor
in
in
out
dec
test
lock
cli
lret
clc
cmp
std
shl
testl
cli
cld
fmull
mul
lret
repz
cmc
enter
hlt
cmp
xchg
orb
xor
cmc
clc
aas
rcr
aam
fdivp
dec
loope
ljmp
lret
into
xlat
cmc
aam
xlat
xor
dec
or
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
arpl
jl
add
aad
xor
xor
lret
loopne
out
jmp
icebp
addl
loope
lds
test
stc
loope
int3
shl
fscale
mov
loope
loopne
call
out
stc
out
sarb
rcr
repnz
test
enter
int3
loopne
icebp
xchg
xchg
int3
out
das
aad
icebp
idiv
xor
xlat
sarb
div
loope
loop
mov
lret
rcr
hlt
loop
xor
repz
rol
jmp
not
out
test
lret
stc
lock
xchg
divl
stc
in
lret
leave
les
aaa
shr
xlat
fstpt
loopne
jecxz
orl
loopne
cli
cmc
repz
int
lret
test
cmp
cmc
repz
jmp
dec
in
call
iret
out
aaa
fcomi
cmp
cld
fnstsw
fldl
in
call
out
rol
int3
ljmp
repnz
cld
inc
rcl
stc
stc
loopne
call
into
mov
sti
in
aam
std
leave
xor
adc
hlt
cld
fxam
testl
fmul
icebp
int
fnstcw
cmp
aam
cmp
mov
lea
leave
int3
leave
cmp
xor
rcl
in
repnz
iret
aad
lock
leave
aad
cld
call
addb
in
ror
leave
in
sbb
neg
add
addb
test
cli
mov
aam
cmp
loopne
in
in
clc
rol
in
in
cld
ficoms
mov
sub
in
sarl
aad
fdivrl
lock
fdivrp
test
ret
iret
sti
out
xchg
lret
hlt
cmp
ret
jmp
ljmp
loop
cmp
loopne
out
std
lret
iret
lret
ret
loop
call
aad
cmc
xor
rol
sti
rcr
cli
mov
call
aad
xor
enter
cmc
xor
cmp
lock
imul
adc
xchg
mov
std
call
leave
cli
ljmp
out
lret
rcr
mov
jmp
in
leave
addl
sti
out
ss
loope
test
jmp
adc
out
xchg
aam
loopne
fsub
icebp
cli
out
cli
fndisi(8087
fneni(8087
out
in
out
cld
loope
xchg
into
loope
loopne
test
rcl
aam
xor
fnstenv
in
lret
aam
stc
aad
lock
mov
loop
shl
cmc
xlat
not
shr
loop
out
cmc
jmp
ss
rcl
fdiv
fsub
loopne
mov
sar
in
aad
cmp
dec
fnstsw
cli
in
mov
cli
cmp
into
int
enter
in
jmp
sti
idivl
xor
ret
adc
int3
fmull
xlat
in
stc
out
rcr
std
xlat
jmp
hlt
in
xor
les
faddl
pop
xchg
cs
xor
fcmovu
out
cmc
sub
loop
ret
xchg
lret
call
iret
cld
out
shll
xor
fcmovb
shl
xor
jmp
mov
fcmovnu
call
rorl
loop
hlt
in
cmp
mul
cmpl
ror
fcmovb
fcmove
in
leave
xchg
loop
xor
in
rol
rol
sar
stc
rcr
cmc
cmp
idiv
repnz
nop
roll
ret
cmp
push
int3
test
cmc
xchg
out
int
xchg
xchg
mov
ljmp
div
notrack
cmpl
ret
ret
aam
int
test
in
enter
lret
hlt
into
cld
fprem
sub
call
repnz
xchg
roll
shr
aad
out
clc
neg
shr
loopne
loope
jmp
int
mov
das
aad
in
clc
out
in
aas
cld
repnz
std
leave
leave
xchg
clc
fsubp
iret
ror
ret
leave
leave
jecxz
jmp
ljmp
loope
sti
aam
aas
sti
lret
cmp
in
loopne
xor
out
iret
addb
arpl
push
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
cli
sub
sahf
or
jl
addb
jl
ds
fdecstp
aad
adc
fcmovnb
into
rcr
mov
aad
rcl
in
xor
out
sarl
cli
into
sti
cli
stc
div
aas
mul
xchg
hlt
shll
cmp
cmc
repnz
xlat
aas
fistpll
loope
std
stc
out
cld
out
ret
in
orb
leave
test
fdiv
cmp
fprem
test
std
aam
loop
loope
enter
test
jecxz
cmp
aad
ds
into
loopne
incb
xchg
in
call
sti
in
jmp
int
hlt
lock
out
loop
stc
fdiv
leave
clc
mov
fsubr
fcmovne
les
in
xlat
xor
ljmp
fadd
flds
xchg
repnz
repnz
cmp
out
fucomp
in
xchg
out
rcr
ret
vshufps
loopne
call
cli
cmc
shl
call
dec
repz
jmp
sub
out
lret
xor
jmp
hlt
cmp
fcom
in
ffree
call
fcmovnb
mov
fcmovnbe
mov
xchg
test
xor
repnz
cmp
adc
xlat
shl
icebp
xchg
lret
lret
in
nop
iret
iret
loop
in
shl
sar
shl
cmp
cmp
fmul
sar
call
stc
sti
leave
mov
shl
in
out
cli
out
iret
rcr
loope
lret
fadds
xchg
in
ret
mov
out
mov
shl
cmc
rcl
out
hlt
out
cmp
fstpt
rcl
in
in
testl
sti
in
in
cs
shr
fstpt
shl
rolb
ljmp
lds
xor
iret
ss
cmc
jmp
repz
std
cld
jmp
cli
fdivp
xchg
test
mov
lret
xor
into
ss
lret
int
int
ret
cmp
loopne
mov
aad
jmp
into
out
xchg
leave
in
xor
cmp
sti
ss
fdivl
or
rcr
leave
fst
loopne
into
ret
xchg
mov
xorl
xor
cmc
out
div
repz
std
icebp
repz
ret
orb
out
loopne
jmp
repnz
clc
repnz
cmp
idivb
loop
add
lock
xor
xor
cmp
fdivrl
aad
ss
xchg
stc
loop
adcl
into
icebp
xor
add
fistpll
fucom
out
loope
fimull
orb
lret
lret
cmp
fcomi
stc
loope
cmc
mov
clc
in
sbb
in
mov
loope
shlb
cs
xor
in
xor
idiv
rcr
clc
fsub
stc
loope
fcmovnb
cmp
jmp
rcr
xor
into
into
in
cli
shl
divl
roll
rcr
fisttpl
leave
fcmovnbe
xchg
in
aam
xor
cmp
cmp
lret
sub
shl
test
out
ljmp
out
mov
int3
shl
aaa
aam
out
fmul
ret
and
addb
lret
rorb
lock
jmp
ljmp
test
mov
loop
in
out
xchg
stc
iret
cli
jmp
xor
ljmp
cmp
in
enter
ffreep
test
loop
stc
aad
cmp
enter
xlat
mov
hlt
fmull
mov
xchg
iret
cmp
std
lock
lret
cmp
aad
iret
cli
test
xlat
hlt
leave
jmp
xchg
repz
lret
clc
repz
shl
out
cli
test
mov
fdivrp
and
fdivr
fucom
int
cmp
xor
aaa
sar
rcl
hlt
aad
iret
iret
repz
addb
jmp
mov
repz
out
aas
cmp
rolb
in
mov
enter
out
lock
mov
ss
out
stc
icebp
cmp
aad
jecxz
iret
sti
in
shl
cld
loop
ffreep
jmp
std
xor
hlt
shr
leave
shl
stc
ljmp
jecxz
sar
aad
call
out
xchg
xchg
hlt
int3
sarb
in
out
repz
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
lret
mov
mov
jl
addb
jl
rol
aam
mov
sub
shlb
xor
loopne
hlt
fdiv
sbb
fcmovbe
mov
cld
out
xor
enter
cmp
icebp
fcomp
div
fdiv
and
fiaddl
enter
repnz
repz
xor
lret
aas
ss
cld
ret
cli
cmc
mov
cmp
loopne
fstp
leave
loop
enter
jmp
rcl
sarl
iret
repnz
cmp
faddp
in
fsincos
flds
jecxz
xlat
xor
xor
xlat
enter
cli
fidivrl
cmp
mov
mov
xchg
icebp
test
in
jmp
lock
call
icebp
cmp
shl
cli
in
test
shl
in
loop
int3
hlt
aaa
fmul
cmp
lock
ret
ffree
dec
mov
mov
out
fdivrp
repnz
out
int
xor
cmp
fxam
ret
xlat
test
repnz
faddl
in
xor
fst
cs
fdivr
ret
aas
aaa
cld
sub
lds
in
jmp
aad
cmp
iret
iret
rcl
lret
roll
lret
jecxz
mov
jmp
mov
repnz
cmp
out
cmp
icebp
icebp
adc
iret
cmp
xlat
cmp
jecxz
into
bnd
fsub
aad
loop
in
ss
rcr
aaa
hlt
cmp
repnz
cmp
cmc
jmp
sti
icebp
adc
ret
icebp
loop
fxtract
in
fidivrs
fnstcw
test
orb
shlb
xor
cld
into
aas
out
jmp
std
adc
enter
mov
xchg
rorl
in
cmc
xor
loopne
cmp
shl
add
clc
out
lret
mov
aam
rcl
idiv
hlt
shr
in
std
cmp
rcr
cld
fldl
mov
cli
ljmp
xor
ret
sti
imul
in
repz
add
sar
aad
add
nop
jmp
les
cmp
cmp
icebp
cmp
out
in
loop
cli
call
roll
int3
xor
repnz
sti
sti
adc
in
call
lret
mov
out
in
shr
ret
ss
in
into
in
int3
sar
rcl
ret
xchg
cmp
addb
xor
xor
fdivl
cmp
clc
fsubrp
cmc
ret
ds
fsub
fildl
int
loop
shl
loope
aad
enter
in
cmp
ffreep
fnstsw
ret
in
out
out
mov
mov
faddp
call
lock
into
iret
jmp
loopne
in
ret
fmul
in
int3
xchg
shlb
mul
ss
xlat
rcl
jmp
cmp
rcl
stc
fsub
xlat
leave
out
rolb
cmc
out
clc
lds
out
loope
ret
lret
fildl
cmc
orb
out
shr
xor
loopne
fxch
fcmovu
ljmp
xlat
sti
fsub
mov
in
jecxz
filds
shl
sub
into
in
out
lock
ror
clc
int3
cmp
aas
cld
call
in
stc
mov
mov
out
mov
stc
in
xor
aad
xlat
cmp
cli
fcom
shl
inc
xlat
fisttpll
xchg
clc
xor
stc
icebp
cmp
cmc
aas
fucomip
vlddqu
std
out
in
out
xchg
in
lret
shl
call
fmulp
fdivrl
clc
out
testl
xchg
out
lea
xor
in
sub
in
aad
std
call
ds
add
mov
fstp
lret
xchg
shl
cs
xor
into
jmp
ds
cmp
out
call
std
out
xor
out
cmp
jecxz
int
in
cld
test
cmp
cmp
jmp
repz
cmp
xor
xlat
rcr
out
xor
fcmovbe
not
into
cld
ret
enter
rclb
jecxz
loop
in
xlat
std
cld
sar
bnd
icebp
cmp
mov
loop
fdivrp
ljmp
lret
fcmovbe
iret
sti
lock
out
iret
int3
repnz
ds
xchg
loop
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
addl
push
jl
addb
jl
mov
int
fldlg2
ret
enter
xor
ljmp
jmp
mov
iret
out
call
lret
repz
int
into
fincstp
xor
shl
repz
in
out
cmp
aas
out
rcr
cmp
out
enter
nop
ljmp
inc
aam
fildl
add
clc
cmp
out
icebp
test
int
xor
stc
cmp
in
sti
test
test
test
ret
out
out
jmp
in
fsubp
ds
xor
fnstcw
loope
xor
loope
enter
out
loop
xchg
fiaddl
mov
loope
sti
loope
cld
cmc
lds
fists
rol
aaa
enter
ror
aam
adc
in
cmp
test
mov
fimuls
cmc
in
cs
xor
ss
enter
cmp
fsubrp
jmp
test
loopne
lock
rcl
in
rcl
jmp
aaa
xor
addb
call
aad
in
cmp
lret
xor
fdivrp
sti
aad
cmp
lock
xlat
incl
xchg
jecxz
iret
xor
out
shr
and
sti
mov
xlat
incl
int3
rclb
div
ljmp
shr
fdiv
cmp
fildl
stc
fcmove
jmp
int
cmc
idivb
into
int3
xor
fcmovne
out
clc
aam
hlt
stc
test
fildl
out
enter
lret
xor
cmp
lret
adc
out
aam
hlt
test
mov
cli
sub
fpatan
xor
lock
repz
into
sti
cli
out
call
lret
mov
xchg
ret
into
cmp
sarl
cmp
fcomip
in
test
clc
in
ljmp
xchg
repnz
hlt
sub
xlat
int3
cmp
int3
aam
ljmp
aam
fimuls
test
fnstenv
lock
lret
ljmp
loopne
ror
fld
test
lret
iret
loopne
xchg
xlat
rcl
xor
jmp
in
vpsllq
hlt
add
movl
ret
lock
enter
cmp
fdiv
xlat
fcom
jmp
clc
fcmovnu
xchg
into
xchg
jmp
into
shl
xor
sti
leave
fmul
out
dec
cli
aam
cmp
hlt
jmp
loopne
mov
sub
cs
out
sti
xor
cmc
loope
shl
fadds
jmp
call
xchg
int
xlat
in
rol
cmp
ss
int
out
clc
roll
mov
mov
xchg
jmp
fdivrs
repz
into
fsubp
iret
lock
jmp
clc
mov
in
ljmp
cmp
std
lret
cmp
shl
iret
xlat
hlt
stc
cmp
xlat
int3
fisttpll
loope
lock
hlt
sub
sarb
sti
lock
fadds
into
int3
iret
lock
jecxz
lock
cmp
aas
adc
in
loope
xchg
xlat
xchg
repz
out
rcr
aaa
int3
enter
cmp
xlat
jmp
in
lret
fiadds
loopne
jmp
rcl
ss
aas
fcmovnbe
sbb
repz
in
or
loop
ljmp
lret
aaa
cld
sti
rcr
cmp
cmp
rcl
ds
hlt
out
xchg
into
lea
shrb
test
std
xor
icebp
sar
jecxz
lret
loopne
xchg
lock
cld
in
int
sub
out
stc
shl
shl
rol
cld
loopne
in
testb
enter
xor
in
call
cmp
xor
decb
iret
out
enter
xlat
iret
xor
cmp
fmul
in
out
aad
loopne
div
fdiv
div
repz
out
div
in
ret
out
xchg
xor
jmp
xlat
ss
cmp
rcl
fldl
frstpm(287
nop
fsubr
rcl
repz
fcmovnbe
repnz
xor
fbstp
lret
fldl
and
in
addl
mov
mov
jmp
aam
into
lret
rcr
fstp
les
scas
mov
addb
jl
xchg
rcl
in
leave
xor
int
std
icebp
cmp
fdivrs
loop
fdivr
xchg
jmp
sti
icebp
cld
xchg
xor
stc
clc
cmc
shl
ss
lock
cmp
repnz
repz
out
in
jecxz
xchg
mov
in
lret
stc
cs
lret
rcl
ffreep
loop
cmp
fiadds
sti
or
fcmovb
int3
aam
aam
shl
jmp
in
cli
cmp
ret
ret
in
jecxz
mov
loopne
xor
ljmp
idiv
in
inc
xchg
in
xchg
lea
hlt
shlb
enter
fldlg2
shl
or
cmp
in
fadd
mov
notb
shll
call
clc
cmc
cli
stc
fscale
repz
ret
cld
std
mov
jmp
cli
mov
xchg
jecxz,pt
rol
in
clc
into
imul
xor
aad
sti
repnz
in
orl
das
ss
aaa
not
int3
lret
rolb
jmp
in
aam
loopne
icebp
jmp
jmp
leave
rol
fcmovne
cmp
sar
rol
iret
rcr
xchg
cmp
sbb
xchg
shr
xchg
xchg
ds
xor
enter
out
loope
clc
add
in
fadd
rcr
fcomi
int
mov
or
iret
ret
repnz
in
roll
loop
repnz
sub
loope
rcr
out
frstpm(287
in
ljmp
out
imul
ror
cld
incb
mov
out
in
rcl
stc
cmp
loopne
fstp
int
cmp
fdiv
fldl
out
lret
iret
xlat
in
xlat
cmc
int3
call
sarb
roll
incl
icebp
nop
test
jmp
out
in
sti
out
call
std
ss
std
aas
clc
clc
in
in
in
and
mov
cmp
lret
rol
fst
cli
fcomip
test
jmp
call
jecxz
in
mov
repz
repnz
jmp
cmp
ljmp
shr
incl
test
mov
aaa
jecxz
int
idiv
loope
std
roll
enter
out
mov
lock
cld
in
aad
out
shrl
ror
lret
aad
repnz
jecxz
jecxz
fstp
mov
imul
fmul
ljmp
out
clc
loopne
out
fsubr
lret
cmp
fcmovnb
test
repnz
in
loope
xchg
ret
xor
enter
cmc
ds
ljmp
test
mov
icebp
iret
lea
jmp
hlt
shl
std
int
in
hlt
cmp
loop
call
out
repz
ds
sub
iret
lret
cmp
jecxz
rcr
shl
fucom
xchg
out
aad
jmp
icebp
shll
call
aam
int3
int
vpsrld
xlat
mov
out
mov
aaa
ljmp
shl
fiaddl
shl
int
out
call
cmc
icebp
sub
cs
mov
idivb
shl
icebp
shl
ljmp
xor
div
lret
dec
cmp
loopne
ret
aad
loop
fsubr
xlat
fmul
mov
in
jmp
mov
xchg
icebp
jmp
aam
cmp
hlt
hlt
lock
enter
neg
decb
in
lret
shl
in
jmp
aam
fcmovne
ss
cld
in
sar
cmp
ljmp
xlat
loope
shr
cli
repz
jmp
cmp
lret
cld
in
cld
xlat
ffreep
loop
idiv
out
sti
decb
les
lds
sarl
cmp
sti
lds
rol
mov
in
out
out
leave
int
lret
in
in
std
or
cmc
stc
iret
addl
out
sub
repz
jmp
fcmovnu
neg
ror
lret
in
adc
loopne
cld
jecxz
jmp
ret
out
stc
fdiv
fcmovbe
sar
div
cmp
std
out
fmulp
call
int
lret
leave
icebp
aam
into
cmp
fcmove
out
loope
movb
rolb
hlt
out
ret
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
or
and
jl
addb
jl
test
xlat
xor
hlt
test
fcomi
shl
loopne
repnz
icebp
mov
fcom
lret
out
fcmove
into
aad
cmp
not
or
enter
shl
cmc
test
loopne
repz
ror
fidivrs
std
out
shl
aam
jecxz
fsub
addl
aam
lock
in
cmc
sti
lret
ds
stc
out
ret
shl
xchg
flds
orb
in
xor
cmp
cmp
in
cmc
ss
call
fmul
int3
jecxz
sti
mov
xchg
ret
jmp
aaa
std
lret
icebp
xchg
stc
aad
out
clc
hlt
sbb
lret
shr
and
out
in
fcmovnbe
xor
aam
fnstenv
add
fsub
in
enter
fcoml
ljmp
ljmp
cmp
sub
icebp
lock
in
shlb
in
fabs
stc
fdivrs
cmp
idiv
stc
in
fmuls
in
mov
out
out
das
cld
xor
leave
loopne
addb
mov
mov
out
mov
xchg
xchg
shlb
xor
xor
jmp
roll
rol
lret
orl
fsub
std
and
out
out
fcmovnb
fadd
out
aad
hlt
stc
loope
rcl
add
int
out
nop
in
in
cli
xchg
fcomip
fdivp
fucomi
int
loopne
ret
add
out
fsub
mov
in
xchg
int
repnz
xor
repz
fcom
xor
loope
test
sbb
fsubr
and
in
in
lret
mov
fdivr
into
int
ret
cmp
ljmp
fcmove
test
fiadds
cld
in
mov
xchg
aas
stc
rol
cmc
in
hlt
loopne
in
fchs
out
in
movb
icebp
nop
repz
repz
xor
xor
call
fdiv
hlt
cmp
out
lds
enter
iret
loope
sub
rcr
xor
int3
cld
cmp
jmp
ss
aas
ret
idiv
filds
mov
fadd
cs
ljmp
rcl
fdivp
repz
in
lock
jmp
aam
jecxz
loop
in
out
aas
cmp
iret
sarl
clc
aad
sti
rol
leave
in
mov
test
mov
jmp
in
lret
ds
out
clc
in
ds
repz
loopne
jecxz
mov
jmp
ror
lret
ss
aad
jmp
ljmp
stc
jmp
std
loope
in
xchg
loopne
repnz
call
int3
icebp
out
ror
aaa
loopne
lock
fiadds
in
ss
leave
ss
fdiv
stc
repnz
sti
xchg
fcmovnb
mov
lret
sub
into
xor
sti
fucomp
repnz
cmp
cmc
hlt
idiv
idiv
fmulp
xchg
int
ds
shl
lret
cmp
call
fdivr
cmc
and
fcmovu
lret
ficoml
aad
xor
cli
cmp
lret
fcomi
addb
iret
and
cmp
xor
das
fdiv
hlt
int
fld
rcl
in
in
xchg
fcmovne
mov
mov
lret
lret
jecxz
icebp
shlb
in
aad
cld
out
rcl
fsubrp
mov
jecxz
xor
mov
shr
repz
xor
rcl
ljmp
iret
aas
movb
sbb
aam
loope
ss
test
cli
lret
ret
loopne
fdivr
call
loope
cli
leave
out
icebp
leave
repnz
int3
aam
loope
out
sar
icebp
in
hlt
call
iret
loop
cld
rcl
ljmp
mov
xchg
out
in
divl
rol
leave
int3
xor
ss
fst
out
xchg
in
into
mov
adc
rol
repz
cmc
int3
stc
mul
rcl
icebp
mov
shl
xchg
in
fucomip
sub
shl
xor
std
fldl
rcl
sarb
ds
neg
fucomi
lret
xchg
loop
out
repz
leave
out
fmulp
cmp
loope
in
ret
jmp
out
mov
fmulp
in
xchg
call
mulb
dec
cld
jmp
sarb
enter
fidivl
mov
and
cmpsb
sbb
jl
jmp
out
cmc
aam
aas
repz
call
out
int3
std
in
int
loop
rol
lret
jmp
fcmovnb
test
cli
fmull
loope
xchg
call
call
xor
xor
lret
cmp
mul
lock
lret
fstp
cld
clc
call
loope
stc
out
out
repnz
leave
idiv
ds
mul
cmp
sti
mov
fisttps
jmp
sub
ret
xor
cmp
out
roll
in
mov
nop
in
shrl
loop
cmp
out
int
aad
rcl
in
leave
xchg
leave
call
call
sub
shr
lret
shl
cmp
aad
repz
test
or
fsub
loopne
mov
enter
not
int
repz
fiadds
idiv
test
xchg
icebp
xchg
mov
mov
repnz
shl
lret
stc
std
out
aad
cmp
adc
fcmovne
mov
jmp
icebp
lds
aaa
xor
xor
sti
cmc
ljmp
jmp
inc
sti
decl
xchg
xlat
cmc
cmc
leave
in
into
cmc
repnz
fidivrs
rcl
shl
add
mov
sti
jecxz
ljmp
std
iret
repnz
test
std
cmp
inc
clc
loope
std
jmp
jmp
mov
into
leave
idiv
ret
cmp
adc
std
shr
jmp
and
add
divl
cli
in
cmp
enter
addl
std
xlat
mov
clc
enter
repnz
int
in
leave
dec
cld
fcmovnu
cmc
into
xchg
mul
dec
or
out
jmp
icebp
loope
lret
out
in
icebp
ljmp
sub
out
and
or
out
enter
vpsubsb
in
divb
jecxz
repnz
sti
sti
ror
fimull
test
in
enter
leave
out
int
cmc
imul
cld
testl
fabs
out
in
xchg
aad
ljmp
rcr
imul
loope
out
out
clc
fsub
incb
out
repz
rcl
int3
ljmp
ljmp
repz
ret
int
call
loop
xlat
int3
cmp
xlat
xor
jmp
incb
aad
mov
cmc
orl
xor
out
ret
cmp
int
in
cmc
out
test
fcmovbe
in
add
repz
lea
out
jmp
loope
fnstsw
out
ret
fsubp
jmp
fucomp
out
test
lock
repnz
lret
cmp
loope
test
out
out
repz
in
or
lea
in
in
sti
cmp
repz
test
incl
in
mov
incl
int
leave
xor
fistpll
fnstcw
jmp
ljmp
mov
div
xor
ss
cmp
in
stc
aas
rol
enter
fstp
in
test
jmp
leave
aad
xor
in
fsubp
call
fucom
in
out
test
addl
lock
jmp
out
int
fistpll
lock
cmc
cld
cmc
aam
cli
ljmp
aam
ret
repnz
in
shr
aaa
std
sar
fsubp
out
inc
fucom
loope
out
rclb
int
ljmp
shl
mov
cmc
jmp
ffreep
lock
mov
repnz
rcl
cmc
in
sarl
shr
fcmovbe
loope
rcl
neg
clc
call
out
cld
loope
rol
call
out
out
icebp
lock
fcmovu
ffree
sti
sti
hlt
loope
xchg
out
fsubp
aad
xor
shll
test
repz
ret
xor
lds
sbb
movb
shl
iret
jmp
rolb
sbb
fld1
test
dec
mov
iret
into
fdiv
loop
out
int
cmp
ljmp
cli
cmp
jmp
mov
loopne
jmp
iret
aad
repz
enter
ss
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
stos
lods
sti
jl
addb
jl
loopne
fstp
clc
jmp
loopne
fcmovbe
mov
call
icebp
cmp
int
push
repnz
cmp
repnz
cmp
cli
cli
mov
mov
out
jmp
cmp
cmc
std
call
out
in
test
stc
test
jmp
shr
loop
in
fucomp
clc
enter
hlt
ret
adc
out
div
ljmp
cld
loope
jmp
in
in
cld
sti
fdivrl
cli
loopne
repz
test
ljmp
lret
in
into
ss
clc
xor
fucomp
fdivrp
cmp
fchs
sar
xchg
out
in
aam
les
fucom
aad
ds
int3
shl
repz
sti
xchg
shl
fcmove
jmp
in
enter
lret
out
roll
mov
out
test
lock
sub
call
aas
std
jmp
out
sarl
test
sar
test
lret
sub
out
clc
in
repz
enter
cmp
jmp
cmc
iret
loopne
adc
lock
and
call
in
xchg
icebp
xor
lret
ljmp
int
out
mov
fmull
clc
cld
icebp
xchg
icebp
xor
sub
out
repnz
cmc
stc
out
loope
cmp
loopne
iret
jecxz
in
out
mov
repnz
loope
hlt
shll
cmp
aad
clc
aad
cld
cmc
std
in
ss
hlt
xchg
mov
out
repz
icebp
aad
aas
call
test
fiaddl
lret
test
call
out
in
hlt
mov
aad
stc
cmp
addb
out
mov
out
aaa
ljmp
filds
shl
test
call
in
icebp
cmp
ss
cmp
rcl
cld
in
cmp
sar
loop
enter
lret
out
lret
in
sub
imul
cmp
dec
cmp
clc
loope
ret
ljmp
mov
fcmovbe
jecxz
int
out
out
jmp
cmp
fdivrp
iret
out
addb
sti
lret
xchg
int3
out
in
in
mov
leave
loop
int3
enter
std
ds
cld
xlat
icebp
cmp
loopne
rol
in
cmc
and
hlt
hlt
ror
sub
ljmp
jecxz
hlt
into
test
rorl
xchg
das
ret
lret
cmp
aad
fnstcw
repnz
clc
cmp
icebp
xchg
loope
clc
imul
xchg
loope
sub
ret
in
jmp
jmp
cmp
fsubp
out
inc
loopne
fucomi
out
out
call
ret
shlb
xor
cmp
call
fiaddl
testb
or
aad
ret
test
loop
hlt
cmc
out
fsubr
into
jmp
repnz
orl
fsub
std
fists
xor
clc
fstpt
ds
into
cld
ret
repnz
std
fcomp
xchg
in
hlt
stc
fucomi
into
cmp
test
not
sti
hlt
fcomp
int
stc
fsub
lret
jmp
int3
int3
loop
xlat
lret
out
cli
lret
adc
hlt
out
cli
out
call
sub
aad
stc
xor
cmp
in
clc
loope
cmp
fincstp
ret
jecxz
inc
xchg
rcr
mov
out
ret
xor
hlt
rcr
jmp
xor
fidivrl
jmp
aam
mov
into
nop
fucomip
sti
cmp
lret
cmp
clc
test
ds
aas
std
jecxz
addb
ss
enter
rcr
add
rol
lock
sti
mov
and
cld
iret
enter
ss
div
ljmp
repz
test
mov
lea
sub
clc
loop
xor
cmc
into
iret
xlat
aad
iret
loop
iret
cmp
fdivr
loop
addl
ret
into
shl
lret
jmp
sbb
fisttpll
call
out
loop
lock
hlt
ljmp
divl
into
lds
fdivr
enter
lret
sub
xor
icebp
jmp
loope
aam
out
int
sar
sti
repz
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
xchg
push
xchg
pop
mov
jl
addb
jl
add
faddl
in
aam
stc
int3
clc
jmp
ror
ret
fcomip
cld
in
lret
fadds
cmc
xchg
int
in
ret
fsubrs
lret
int3
fidivrl
loop
aam
lret
loop
in
in
int3
lret
in
repnz
fcomip
fucomp
incl
fsin
std
not
fcom
popl
jecxz
iret
cs
out
test
cli
loopne
idivb
cmp
xchg
and
fmuls
out
xchg
aam
out
repz
aaa
test
aad
cmp
sbb
mul
test
out
into
lret
decl
into
out
cmc
xlat
sti
out
icebp
ror
roll
loopne
test
lds
test
test
lret
into
xor
into
out
sar
call
rcl
xchg
mov
fcmovne
jecxz
rcll
lock
repnz
out
cmp
loopne
adc
add
xchg
enter
xchg
shr
xchg
repz
xor
cmp
jmp
shr
fdivrp
shl
or
call
ret
das
ljmp
cmp
xor
decl
in
sbb
lret
enter
jmp
sub
call
fidivrl
hlt
shl
in
in
clc
incb
rol
aaa
loop
fnclex
les
cmpl
test
jmp
int3
repz
in
rcl
shll
std
cmpb
in
in
repz
sub
clc
mov
xor
out
xor
std
cmp
aam
into
out
cmp
mov
in
jmp
shll
shl
repnz
cld
cmc
sti
cmp
in
in
mov
ds
stc
mov
cmc
test
icebp
xor
loop
lret
in
cmp
call
std
and
rolb
xchg
in
mov
cmp
in
iret
jmp
int3
iret
shl
sti
fcmovnbe
repz
mov
rol
fcom
xlat
int
into
out
shr
fnstenv
jecxz
in
mov
call
xchg
lock
neg
cs
cmp
lret
in
out
fisttps
fiadds
incl
sub
xor
out
fdivrs
icebp
repnz
cmp
mov
int
fisttpl
ror
in
rcl
xor
iret
shr
shl
aad
hlt
call
fsub
out
loop
sub
in
in
jmp
leave
cmp
xchg
vpaddusb
leave
jecxz
xchg
jecxz
xor
repnz
fdivp
cmp
std
out
repnz
jmp
int3
cli
sbb
sub
xor
ljmp
ljmp
loopne
repz
cmp
fldl
sub
ss
lock
call
idiv
in
jmp
in
jmp
dec
idiv
int3
iret
div
xlat
into
cmp
in
fadd
cld
cli
or
int
lock
mov
enter
icebp
out
sarl
fildl
aad
mov
decl
xor
xor
cmp
out
out
int
std
loope
sti
lret
mov
mov
ds
ljmp
in
cld
rolb
fadds
xlat
jecxz
ljmp
fpatan
enter
icebp
lock
cmp
in
cld
hlt
cld
loope
cmpl
iret
mov
int
shll
leave
out
cmp
stc
in
sti
cmp
out
loope
repnz
mov
enter
mov
xchg
xor
rcl
out
ss
rcl
cmp
out
faddp
incl
in
sti
xchg
std
shl
das
cmc
cmc
int3
rcr
out
call
loop
loopne
sar
loopne
out
fiadds
out
lret
in
cmc
fld
rol
fucomip
in
clc
neg
cld
shl
filds
fucom
nop
sbb
call
jecxz
ret
jmp
fcomp
int
xor
fstp
loopne
mov
mov
decb
xor
in
fnop
ljmp
shl
sar
loop
mov
iret
out
iret
leave
mov
jmp
into
les
rcr
fxch
enter
or
jl
addb
jl
jmp
in
loop
fsub
int
idiv
ss
shl
inc
sti
test
cld
xlat
mov
cmp
cmc
shr
test
cmp
cmc
rolb
test
mov
in
call
xlat
jmp
int3
xor
leave
out
cli
aaa
shlb
sti
aam
repz
int3
ffree
ror
out
in
das
ret
int3
ror
idiv
xor
ds
cli
rcr
jmp
fcmovnb
int
sbb
out
repnz
in
aaa
lret
rcl
call
stc
in
loopne
stc
rcl
fmull
fneni(8087
in
icebp
mov
xor
int3
in
std
cmp
sbb
fcomp
aad
mov
call
out
repnz
int
test
in
loope
lret
cmp
sbb
aam
aam
fucomip
std
xchg
cld
out
std
iret
fsubp
jmp
out
sti
sar
call
out
fdivrp
std
aam
addl
call
repz
jmp
fiadds
xlat
test
jmp
mov
in
xor
cmc
shlb
xchg
leave
fmul
ljmp
ljmp
shlb
cmp
addb
cld
mov
out
int
filds
cmp
in
fnstcw
jmp
in
jecxz
fisttpll
cli
leave
and
hlt
shlb
lret
leave
fcmovnu
fsubp
fcmovnbe
cmp
loop
flds
fcmove
in
ror
aad
out
shr
jmp
int3
fcmovu
shl
aam
incb
adc
leave
sti
clc
or
cmc
out
rcr
cmp
fcomi
xor
repnz
jecxz
rcr
xlat
lret
xchg
shr
out
cmp
fcomip
out
test
cmp
test
and
or
mov
cs
cmp
vpminsw
test
fcmovnb
sti
in
loop
orl
int
fidivs
repnz
sti
idiv
fst
lret
jmp
ljmp
jecxz
fisttpll
out
jecxz
aad
loope
into
in
hlt
jmp
into
cmp
into
adc
fcmovbe
fldln2
enter
out
repz
out
loope
xor
rcl
aaa
leave
iret
xlat
std
cmp
fisttpl
cmc
cli
fsub
rorl
lret
ret
lret
fstpt
cmp
cld
sar
out
xor
mov
addb
stc
lret
cli
cmp
cmp
fcmovnb
shl
jecxz
aam
movl
xor
xor
call
repz
shl
mov
leave
mov
xchg
call
jmp
rcl
fiadds
fldz
cmp
rcr
ljmp
out
mov
ljmp
fdiv
fsincos
cmc
xor
in
loopne
xchg
faddl
repz
hlt
lret
cmp
fcmove
repz
xor
loope
fnstcw
rorb
out
movl
int3
aam
out
fld1
cmp
repz
iret
stc
cmp
fucomi
in
lret
mov
in
shr
xlat
shl
jmp
out
aas
into
out
loopne
out
out
iret
cld
in
mov
xchg
into
fincstp
enter
clc
ljmp
ss
jecxz
clc
in
lret
fiaddl
loop
aas
in
rcr
hlt
enter
in
aad
aaa
sbb
in
ljmp
vfrczpd
in
xor
into
in
xor
repnz
loope
cli
shr
out
loopne
xchg
in
mov
xor
ss
div
cmp
stc
xor
out
clc
loop
mov
sbb
xchg
xor
xor
cmp
aas
cli
ror
in
jecxz
xlat
mov
stc
test
in
test
loope
leave
int
shll
in
aaa
ss
into
ljmp
xlat
ljmp
in
int3
shll
int3
into
lds
cmp
not
stc
sar
fcmovb
fsubp
fucomip
std
jecxz
int
in
mov
sub
lock
aad
cmp
shl
ffree
adc
fcmovnu
lret
xchg
cmc
in
repnz
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
inc
mov
add
vcmpss
fucomi
in
ljmp
les
enter
nop
in
out
out
repz
cmc
int
lds
clc
out
cmp
xchg
test
xor
in
in
shl
ljmp
push
cmp
loop
leave
mov
ljmp
in
ror
lock
cld
in
ret
test
mov
loop
clc
cld
xchg
test
out
fyl2xp1
sti
in
xor
cmp
not
cmp
jecxz
idiv
call
loop
fucomip
aad
cmc
ret
enter
in
aad
hlt
fcmovnb
loope
in
loope
decb
ficoml
iret
call
ds
loope
clc
test
mov
cli
flds
xchg
iret
lds
ss
in
leave
in
aad
cmp
sarl
jecxz
hlt
rol
xlat
fmulp
ljmp
shl
loop
leave
xor
in
out
ds
repz
sarb
mov
cld
mov
loop
repz
ffreep
sub
enter
xor
ljmp
ds
fimull
out
iret
lret
neg
repz
ljmp
cmp
cld
addb
fadd
repz
lret
xor
lock
ror
into
test
ljmp
lret
shl
sub
out
cmp
addb
cmp
out
fninit
in
repz
xor
divb
ror
aam
f2xm1
jecxz
std
aam
sti
stc
jmp
ljmp
sub
call
std
aaa
xor
div
cld
adc
fsubr
xchg
enter
fldl
xlat
cs
xor
cli
lret
jmp
enter
in
loope
hlt
jecxz
stc
call
adcl
cmp
xorb
lock
ffreep
incl
shl
ret
repz
xor
fdivrp
loop
rcr
repz
clc
in
fisttpl
lret
shrb
jmp
cmp
ljmp
bnd
fsubr
out
cli
enter
sbb
aaa
hlt
div
fdivr
fcmovbe
stc
fld
lret
aam
jecxz
mul
in
mov
call
in
in
xor
sti
rcl
aad
sti
in
jecxz
enter
fiaddl
lret
jmp
into
aad
int3
out
shr
cmp
roll
loop
int
jmp
repz
fldl
cmp
cmp
into
fucomp
shl
test
xlat
sti
fdivrp
lret
ljmp
ds
xlat
sti
int3
cmp
sti
rcr
rcl
lock
in
fcmovbe
sti
test
out
decl
cmp
dec
sar
call
push
aam
in
test
movl
shr
icebp
shr
out
sar
rcr
in
cld
jmp
std
in
in
clc
iret
mov
mov
mov
jmp
cld
out
jmp
int
jecxz
loop
call
mov
loop
test
fsubrp
aam
leave
repz
cmp
sti
idivb
not
iret
sarl
mov
faddp
cli
addb
out
in
fxch
out
in
fyl2x
repz
loop
rol
test
jmp
cmp
repnz
xchg
aas
in
loop
hlt
aaa
clc
cmp
fcmovne
cmp
shr
std
mov
cld
in
call
lea
out
jmp
cs
in
cmc
loopne
fadds
fimull
icebp
hlt
loope
cli
lock
xlat
lret
lock
stc
mov
in
loop
out
ficoml
xor
out
ror
shr
cmp
rcr
cli
xlat
test
fadds
loop
div
xor
cmp
test
in
std
aas
loope
fmull
jecxz
jecxz
out
cmp
aaa
aaa
cmp
sub
fadd
lock
neg
aad
out
out
repnz
ror
xor
iret
iret
aam
fdivr
hlt
ror
ffreep
not
fucomi
fisttpll
mov
stc
fxch
jmp
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
shl
les
jl
addb
jl
std
in
hlt
fdiv
fdiv
cmp
mov
into
filds
lret
int
loope
sbb
in
hlt
in
clc
loop
xchg
loope
in
xchg
aas
xor
clc
fdiv
sar
hlt
cmp
shl
out
ffree
clc
out
jmp
sti
aaa
cmp
out
out
aas
rol
aad
ret
aam
orl
sub
hlt
repz
shl
fcomi
in
roll
iret
int
int
xor
jmp
aam
stc
aad
test
test
leave
cli
rcr
enter
in
lea
aaa
cmp
cmp
out
ret
sar
aas
and
rol
std
fdivr
decb
cmc
in
sar
not
cli
shl
call
cli
fcmovnb
jecxz
rcl
mov
cmc
mov
out
movb
xor
fcmovnbe
stc
cmp
cmp
int3
into
cmp
xchg
repz
mov
in
out
adc
mov
fmul
out
stc
jmp
jecxz
ror
xchg
fsub
fsub
loopne
enter
out
faddl
xor
aaa
into
rcr
cmp
cmp
repnz
not
cmc
int
cld
clc
out
sub
out
in
xor
cmp
call
aas
aad
rol
std
leave
jmp
aad
in
mov
jmp
jmp
loop
into
fcomip
int
out
loopne
ds
flds
fmul
xchg
mov
lock
repnz
out
repz
cmc
rcr
cmp
ror
cld
fdiv
repz
loopne
popl
fnstenv
lret
into
fadds
out
in
xlat
test
lret
fisttps
shlb
icebp
clc
ror
in
cmp
neg
ss
loopne
std
cmc
jecxz
out
jmp
aad
xor
ljmp
in
cld
int
lock
lock
cld
enter
xchg
ret
out
ret
leave
cmp
fiaddl
test
rcr
std
call
out
out
and
int3
repnz
fstpt
ljmp
and
call
lret
lret
test
into
in
ljmp
call
div
leave
vpavgw
cmp
call
shlb
cmc
stc
sti
stc
iret
repnz
hlt
lret
fmul
call
in
icebp
repz
aaa
xor
xor
cmp
aad
stc
out
loope
ljmp
subb
icebp
ror
rcl
out
cld
fcmovnbe
xlat
xlat
jecxz
cli
idiv
fdivp
test
xchg
lret
fimull
icebp
shl
sti
out
sar
cmp
into
clc
test
ds
loope
orl
xlat
out
aad
out
hlt
aad
out
call
inc
lock
cld
lret
loop
jmp
mov
out
iret
das
jmp
cmc
cli
fstpt
cmp
loopne
loope
iret
icebp
loopne
shl
lret
sub
ret
aas
ds
fdiv
fcmovnu
hlt
idiv
xchg
in
cmc
aam
call
div
loopne
ret
ljmp
loopne
rcl
rol
mov
jmp
test
lock
repnz
int
cmp
in
aam
cld
sti
iret
in
fcmovbe
in
aam
in
cld
ret
rorb
cmp
rcr
aam
test
loopne
roll
xchg
fsqrt
rolb
ret
into
out
out
sti
lock
cli
aas
rolb
fucomip
lret
repz
repz
cmc
repz
xlat
cmp
imul
rcr
aad
fdivrl
loopne
std
aad
loopne
mov
xchg
mov
faddp
aam
xor
lret
cmp
fadds
aad
testb
mov
jecxz
ret
fdivrs
stc
repnz
hlt
fsubr
in
roll
test
stc
fcmovu
in
in
int
sub
xor
int
aas
ror
icebp
in
fmul
hlt
call
mov
in
nop
shl
shlb
xor
repnz
cmp
sar
fdiv
loope
in
xor
fistpll
jmp
stc
fcomi
sar
enter
hlt
ret
cmp
dec
or
sahf
add
add
iret
leave
ret
int
xor
or
add
ss
addb
jl
cmp
jmp
fmulp
in
in
repnz
aaa
xor
shlb
idivb
cmp
aam
cld
or
lret
and
or
in
fdivs
into
cmp
cmp
loopne
hlt
rolb
fcmovu
cli
cld
iret
loop
orb
cli
in
leave
repnz
int3
iret
icebp
ret
fnop
cmp
in
in
into
xchg
leave
xor
jecxz
sti
icebp
cld
fcomp
shr
stc
int3
out
test
rolb
fadd
call
into
xor
out
cmpl
add
cli
int3
fimuls
lret
xchg
out
lret
xlat
fdecstp
iret
aad
repnz
roll
jecxz
idiv
dec
clc
ror
xor
cmp
jmp
aam
test
clc
cld
xlat
fdivr
cli
jmp
jmp
in
ror
ret
xor
call
div
ds
in
loop
std
icebp
in
shl
xchg
ret
in
clc
repnz
fstp
repz
fsubp
out
ret
ret
test
loopne
out
fiadds
out
out
vpsllw
sar
fistpll
out
in
sbb
leave
jmp
cmp
lret
aad
ror
xor
sti
out
iret
ss
ret
rol
incl
test
jmp
out
idivb
int
in
lock
out
in
rolb
idivl
shl
test
stc
in
xor
stc
idiv
ss
sub
test
xor
loopne
sti
mov
lock
out
xchg
in
shl
enter
ljmp
iret
repnz
faddl
xchg
fbstp
jmp
out
div
repz
fistpll
sbb
loop
fmul
shr
jmp
mov
out
xchg
call
xor
test
idiv
fcmove
cmp
cmc
repnz
lret
fsub
xchg
in
neg
cmp
sarb
aaa
std
enter
icebp
ret
cld
icebp
loop
xlat
jmp
out
in
lock
imull
imul
leave
not
cli
rcl
in
int3
int
idivl
lret
cli
call
fucom
repz
lock
in
cli
fdiv
shl
cld
aas
fidivrs
ret
mov
loope
push
loopne
in
ror
shl
cmc
cmp
shl
std
sarl
int3
cli
ds
add
xchg
leave
call
lea
cmp
int
jmp
loopne
fcmovbe
repnz
fsubp
out
loop
mov
icebp
std
fdivp
xor
leave
fnstcw
repz
idiv
test
cmc
leave
in
addl
xchg
std
jmp
aaa
iret
in
sbb
test
cmp
idiv
aad
std
jmp
fucom
in
in
repnz
aam
jmp
cmc
rcr
in
enter
cli
fisttps
int3
stc
clc
lret
int
lret
aam
stc
fdivr
or
cmp
loope
call
in
out
rol
int3
faddl
shr
std
aas
out
mov
in
stc
sub
call
in
lret
cmp
iret
cmc
cmp
aam
ds
aad
fimull
into
fdivl
in
int
cmp
cld
frstpm(287
out
sarl
ret
out
out
rorl
cmp
cmp
xor
fadds
xlat
clc
jmp
loopne
mov
ljmp
stc
sti
in
idiv
sti
fst
stc
test
les
jmp
out
int3
jmp
into
call
int
call
in
lock
fcmovnu
loop
dec
jmp
lret
loopne
cmp
ss
std
fnstsw
cmp
shl
ret
in
mov
repz
xlat
clc
aam
in
into
imul
std
fmulp
fiadds
jecxz
test
and
or
xlat
ds
stc
test
idivb
xor
sti
jecxz
loop
xchg
std
cli
adcl
loop
sar
xor
enter
hlt
cmc
test
call
cli
int
xchg
ss
divl
lret
icebp
loopne
ret
cmp
ret
stc
xor
lea
jmp
rcl
int3
iret
rol
shll
or
add
cmp
jl
hlt
aam
cld
ljmp
xchg
mul
das
int
in
shl
ss
std
sarb
clc
out
call
lret
lret
in
nop
in
jmp
sti
fdiv
ss
ds
std
stc
out
rcl
cmp
ffree
ficoms
rcr
cmp
les
into
int3
repz
loope
repz
fcmovnbe
lret
int3
fstp
orl
imul
ljmp
cmp
test
fsubp
cmc
xlat
xchg
xchg
int
leave
rorb
fsub
in
cmp
cmp
repnz
cmc
xor
ret
in
jecxz
or
in
out
out
into
cli
ss
out
fdivr
int
aam
fld
or
testb
aad
out
lret
cmc
fcmovbe
ss
rcl
rcl
fsub
stc
sbb
in
mov
icebp
test
repz
out
call
iret
stc
std
loop
jmp
jmp
in
out
orl
in
call
into
fxch
aas
xlat
ret
loop
loope
call
out
xchg
xchg
in
icebp
lret
cmp
icebp
repnz
repnz
aam
cmp
fmulp
flds
cld
aam
in
in
aam
repnz
ds
cmp
cld
mul
adc
into
nop
loopne
test
xor
call
ds
jecxz
std
not
mul
clc
mov
out
test
sti
out
nop
fsubr
sub
in
loop
iret
aam
out
repnz
in
shl
and
cld
loop
out
clc
fcom
xor
cmc
into
lret
fdivrp
in
sar
ds
loopne
das
int3
shr
fadd
xor
rcr
int
stc
lock
loopne
aad
and
clc
out
lret
jmp
loope
icebp
loop
xor
ds
fdivrs
iret
loope
out
jmp
mov
std
enter
out
aaa
hlt
jmp
aad
push
out
icebp
xlat
icebp
test
jmp
fmul
mov
rorl
das
ret
clc
shr
int3
xlat
out
leave
fldl
stc
fxch
cmpl
out
jmp
lret
loopne
int3
xor
jmp
loope
sbb
movb
shl
test
stc
cmp
iret
fdivrs
cli
xlat
aad
test
out
mov
call
cmc
orb
cld
ror
or
rolb
cmp
in
call
cld
cld
faddp
int
ljmp
cli
out
out
leave
repz
xchg
into
jecxz
rcr
aad
repz
call
int3
rcl
test
leave
repnz
jmp
std
std
xchg
les
out
stc
std
out
std
out
enter
sar
aam
or
in
leave
out
mov
call
int
aaa
ss
clc
cmp
loopne
push
ret
fimull
xor
out
cmp
out
out
std
hlt
in
jecxz
loope
cli
jmp
loope
icebp
loope
int3
rorl
enter
xor
testl
test
ret
mov
int
xor
in
sti
repnz
faddp
fcmovnu
rcl
stc
aas
cmp
ljmp
repnz
loopne
xor
rol
into
int3
cmp
int3
test
rorl
sub
jmp
jmp
sub
divl
ljmp
lock
repz
in
hlt
int
mov
or
in
out
xlat
jmp
cmp
cmp
cmp
ret
fiaddl
in
cmp
shl
out
shl
shr
out
in
fsubr
ret
jecxz
std
lds
mov
shr
aad
std
aad
cmp
repnz
fcmovnbe
int3
rol
call
adcl
out
ss
jmp
aas
int
ret
loop
fld
in
lret
test
std
fimuls
jmp
lret
leave
cmp
xor
cld
cmp
repz
std
cld
cmc
loopne
fdivr
into
test
hlt
call
out
rol
lock
enter
sarl
les
in
in
ljmp
mov
movzwl
cmp
jmp
lret
rcr
int
orb
jg
sbb
push
sarl
jl
sti
fldl
lret
aaa
ror
aaa
lock
clc
xlat
roll
and
leave
test
xchg
and
ret
ret
jecxz
xor
cmc
cmc
stc
stc
repz
lock
rorb
ljmp
xor
hlt
std
out
int
cmp
rcl
cmc
fnstsw
enter
std
loopne
icebp
xchg
in
loope
cmc
aam
vpsubw
int3
shr
rol
ds
xchg
mov
in
fmul
stc
rclb
xor
int3
test
jmp
cmp
rcr
aam
clc
mov
fiadds
int
fdivrs
int
jmp
lock
iret
xchg
call
jmp
int3
and
cs
out
jmp
out
leave
ljmp
sti
mov
addl
test
xchg
xor
out
leave
out
ds
out
loopne
orb
fstl
shlb
xor
not
lock
cmp
ljmp
repnz
std
ljmp
int3
jmp
call
enter
ret
cli
ds
xchg
mov
fmuls
faddl
leave
ljmp
fst
rolb
xchg
in
int
fisttps
fadd
aad
enter
cmpl
sar
test
out
cli
clc
mov
xchg
in
xor
fcomp
fstpt
rcl
out
cld
clc
fmul
out
out
out
enter
cmc
iret
repnz
out
in
sar
xor
aaa
lock
mul
repnz
in
in
in
lret
xchg
jecxz
int
icebp
cld
jmp
cli
rol
into
rol
ljmp
mov
addl
lret
into
fnstsw
lock
cmp
cmpl
in
enter
orb
rcr
out
into
aas
ss
into
testb
repnz
loopne
in
mov
fisttpl
xor
in
xor
aad
stc
xor
int3
adc
sti
xchg
call
hlt
fcmove
into
repz
repnz
xor
stc
cmp
hlt
int
cmp
rolb
lret
cmp
cli
mov
cld
xchg
rcl
sub
call
cli
aaa
rcr
ds
addl
stc
ret
stc
cli
jmp
call
lock
loope
jecxz
adc
clc
loopne
fsubp
mov
lret
fsub
test
int3
ljmp
lret
clc
int3
fdivs
sti
in
fcmovne
ret
adc
jmp
int
icebp
sbb
ret
cmp
rcl
int3
int3
ror
cmp
fsub
xchg
mov
into
call
xor
aam
aas
aam
sarb
loop
test
ljmp
nop
in
fmul
shrb
xor
call
cli
icebp
fucomi
xchg
mov
mov
repz
sub
out
cmc
sar
std
xor
fdiv
loope
fsubp
xchg
fucomip
movl
aam
imul
lock
cmp
repnz
ljmp
test
xor
stc
ret
cmp
aaa
int3
loopne
neg
sarl
fucomi
enter
xchg
int
shrb
fldz
leave
int
call
into
idivb
fcmovu
rorl
mov
in
mov
test
divl
out
sti
ror
clc
jecxz
iret
shr
enter
out
xchg
in
sar
lds
cli
out
int3
fildl
jmp
cld
out
lret
mov
hlt
clc
clc
repz
fdivrl
in
clc
shl
sbb
aad
in
jmp
fimuls
fyl2xp1
xlat
cli
cli
fldl2e
call
sbb
mov
aam
loopne
test
loope
loopne
int
icebp
cmp
clc
rcl
icebp
and
in
ret
rcl
fiadds
fmul
jmp
cld
in
lock
enter
fmul
ror
fdivrs
lds
int
in
in
cmc
cmc
jmp
aaa
int3
icebp
xlat
repz
stc
fdivrs
int3
out
rcl
shl
jmp
in
jecxz
xchg
in
aam
inc
adc
mov
cld
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
fsubp
in
int3
das
ljmp
in
out
sar
loope
xlat
sub
sub
mul
fldl2t
jmp
sarl
ret
iret
cmc
fmul
loope
xchg
call
out
xor
xor
das
cmp
cld
div
out
icebp
vpaddq
xchg
jmp
mov
test
add
fnop
loop
xor
out
icebp
into
lock
aad
xchg
call
movl
out
enter
cmp
aaa
aad
ret
cmp
fadd
repnz
cld
in
std
in
rcr
xchg
call
stc
in
in
lret
sar
push
lock
loopne
test
in
cs
in
int
icebp
out
sub
incb
loope
and
ljmp
fstpt
cmp
ror
loopne
and
fsub
xchg
loopne
sti
loopne
shr
ffreep
ss
out
xor
repz
xor
aas
fstp
aad
xlat
lock
lret
fxch
mov
xchg
cs
jmp
out
fldl
lock
aad
out
orl
lret
cmp
std
loopne,pt
loop
rcl
rcl
in
clc
shr
xchg
int
repnz
int3
shr
int
hlt
or
movl
in
decb
lret
enter
lret
fsubr
icebp
fdivp
fnstsw
aad
jecxz
xchg
loop
jecxz
std
xchg
xchg
jmp
ljmp
xor
clc
icebp
loope
out
out
test
loop
mov
xor
loope
into
lret
clc
loope
loope
fsin
loop
aam
jmp
mov
lret
loop
xchg
aad
in
xor
xlat
xor
cmp
adc
repnz
loope
fcomp
cli
mov
or
aad
cmp
xor
out
clc
in
repnz
cmp
clc
std
repz
cld
in
fcmovnu
xchg
addb
sub
int3
cmp
fnstcw
rcl
shl
xlat
mov
loop
in
loop
int3
fmul
push
repnz
jecxz
iret
cmc
aaa
cld
cmp
sarl
and
icebp
fiadds
fcomip
cli
mov
int3
int
shl
sub
repz
in
out
cmp
cli
idivl
loop
mov
aas
fcmovnu
test
jmp
iret
jecxz
ljmp
call
clc
cmp
test
neg
testl
call
loopne
rcr
ror
fcom
cmp
addb
jmp
int3
xchg
repz
fsubp
loop
repz
div
lock
ss
clc
in
fildl
sti
adcb
into
xor
aaa
cmp
jmp
cmp
adc
fucom
aam
in
test
jmp
lret
iret
cmc
mov
into
ffree
fcmovnb
xlat
fldl
aam
fcomp
enter
jmp
sub
ss
xor
xor
hlt
repz
cmc
and
xor
adc
loop
call
xorb
repz
out
ljmp
in
hlt
ffreep
mov
shll
shr
in
in
cmp
aas
fistpll
cld
fucomp
loopne
or
lret
int
ror
aaa
sub
shl
ror
rcl
shl
in
fmuls
cld
in
in
ret
sti
mov
ljmp
ljmp
into
out
std
ror
ret
cli
mul
mov
hlt
fsubrp
call
icebp
xlat
fiadds
xlat
leave
cld
jmp
int3
test
shl
shlb
jmp
iret
in
aad
rcr
cmp
rol
loope
fistpll
fcomp
addl
out
in
cld
int3
xlat
ds
lock
xchg
fcmovu
call
lea
cmp
cmp
fcmovbe
std
xor
sbb
sti
mov
in
mov
repnz
xor
jmp
repnz
fdiv
xlat
test
xchg
orl
into
xchg
test
icebp
fcom
cmp
not
clc
cmc
stc
add
in
call
cmp
jmp
loope
icebp
aad
iret
mov
jmp
jmp
rcl
rol
fstp
lret
cmp
enter
add
cld
shr
adc
repz
adc
mov
fisttpll
sti
loop
aam
cmp
aad
sarl
enter
cld
orb
out
ret
enter
out
shl
loope
clc
out
into
and
jmp
xchg
mov
lret
sarl
in
sar
rolb
loopne
loop
icebp
rcl
shr
cmc
les
cli
call
cmp
cli
sar
in
leave
in
div
in
clc
lret
std
jmp
hlt
call
std
fcmovnb
in
adc
out
loop
lds
loope
int3
lock
shl
sarb
cld
out
or
shl
icebp
out
test
lret
orl
jmp
not
cmp
les
les
shl
xor
fcmovne
rcr
cld
out
ss
neg
into
std
cld
mov
fdiv
fists
div
sarl
int3
fcmovne
ljmp
in
ffree
leave
cli
cmp
imul
jecxz
shr
test
repnz
clc
clc
cmp
clc
in
sti
div
aad
out
jmp
test
or
mov
rol
aad
div
in
hlt
int3
cmc
test
adc
les
iret
adcb
xor
fsubrp
lret
rolb
xchg
loopne
fcmovnu
lock
out
out
leave
out
in
shr
cld
cmp
repz
int
add
orl
lock
out
in
cmp
fcmovne
rcr
in
xchg
fndisi(8087
mov
loopne
in
xchg
out
xor
rol
leave
hlt
out
fistpll
into
not
fxch
shl
cmp
ret
leave
loope
jecxz
shr
hlt
int
aam
das
xlat
clc
cmp
int3
out
shl
out
out
cli
in
test
rcr
enter
xor
call
div
ss
rcr
cli
hlt
ret
out
leave
iret
in
in
ljmp
not
icebp
div
repnz
ret
out
fdiv
aam
cmp
repz
call
fmul
fcmovu
and
xchg
fsubp
std
repz
shr
aad
cmp
aam
sti
and
iret
fildl
xlat
lret
cmp
in
xor
rcl
in
icebp
shr
mov
shl
stc
sti
mov
cmp
fucomip
icebp
aad
xor
jmp
cmp
cmp
jecxz
leave
jmp
stc
test
jecxz
test
xlat
out
repnz
enter
sub
adc
ljmp
in
shl
out
jmp
int3
ss
xlat
int
out
loop
in
ret
cld
ljmp
mov
xchg
orb
enter
in
cmp
fmul
cmp
stc
clc
lea
jecxz
lret
nop
fucomip
into
repz
xor
jecxz
sar
clc
addb
int3
vcomiss
aam
xlat
lock
out
rcl
jecxz
sbb
enter
mov
cmp
lret
divb
out
call
rol
aad
test
call
cli
loopne
ds
ret
lret
in
jmp
loope
ret
in
fcmovnbe
repnz
lea
sti
sti
cld
test
ret
cld
cmp
ret
sti
ds
out
loopne
int3
aad
lret
loope
aad
cld
shl
lret
int
fdivrp
shl
out
out
fcmovnb
int
ret
orb
lret
cmp
fidivrl
cmp
cmpb
cmp
icebp
cli
sti
cmc
enter
into
sti
in
cmc
aad
ds
idivb
cmpl
xlat
jmp
lret
out
out
in
xchg
loope
stc
lock
ss
in
fcmovnbe
stc
ret
sar
ret
not
in
in
rcl
mov
repnz
aam
loop
ljmp
jecxz
iret
in
adc
cmp
loope
std
les
out
hlt
neg
div
shl
or
icebp
lock
out
mov
cmc
not
xor
xor
lea
mov
jmp
mov
lret
fnstenv
in
mov
addb
jl
fsubr
fidivrl
rcr
fxtract
fsub
fucomi
iret
jmp
sub
enter
ss
out
enter
int
cmp
aam
jecxz
mov
xchg
xor
enter
iret
aad
sub
and
hlt
shl
aam
mov
mov
fcmove
repnz
mov
out
cmp
aam
fdivr
call
aas
stc
fcomip
testl
out
into
aam
repnz
xor
jmp
cmp
sar
test
cmc
jecxz
out
movb
jmp
cs
out
xlat
lock
fucomp
fninit
shl
loop
xor
fsubp
loope
xchg
repnz
ret
xor
fdivs
icebp
sbb
inc
neg
fdiv
stc
clc
fiaddl
out
cmc
ret
aaa
std
in
cmp
shl
int
bnd
ret
call
in
test
xchg
mov
out
icebp
call
and
inc
clc
filds
xor
sub
jmp
cmc
ss
add
ret
out
xchg
int3
std
rcl
int3
xor
fcmove
xor
cmp
cmp
loop
cmp
rorl
out
repnz
test
fdivrl
icebp
aam
xlat
cmp
jmp
test
test
icebp
loopne
mov
cli
cli
jmp
cmp
out
imul
decl
leave
aam
cli
cmp
rcl
int3
aas
icebp
repz
cmc
leave
call
out
into
aam
in
stc
xor
cmp
hlt
aaa
lret
rcl
cld
repz
rolb
test
shl
aaa
xor
sar
lock
fdivs
cmp
fildl
loope
jmp
jmp
in
cmp
into
cld
in
xlat
hlt
std
cmc
fmul
xor
fstp
rol
out
in
fucomip
in
aaa
shll
fcomi
sar
int
xor
cmp
fdivp
rcl
test
mov
mov
in
cld
mov
rol
out
icebp
sti
in
std
xlat
clc
xor
into
in
shl
sti
xchg
in
out
in
out
shl
repnz
out
out
cld
jmp
fdiv
in
loope
xor
ret
fnstsw
mov
mov
shl
aam
out
aam
aas
ljmp
repnz
sbb
mov
fst
cli
inc
xchg
lret
ds
jmp
shr
rcl
ret
jecxz
cmp
sti
mov
mov
xchg
in
shl
out
ror
lret
aas
cmp
int3
cmp
ret
ret
ret
cmc
xchg
in
in
rcl
iret
aad
divl
xlat
fst
cmp
rcl
imul
mov
sub
xchg
mov
cmp
shr
sti
repz
loop
shl
in
fucom
addl
cmc
shl
fmul
jmp
repnz
ret
fcomp
xor
aas
in
into
addb
xor
aaa
std
aas
loope
xor
out
jecxz
std
enter
out
call
ljmp
cld
ss
fsubrp
ret
loop
jecxz
roll
cmp
cli
xchg
adc
lret
fst
loope
fnstcw
neg
jmp
cmp
test
fimuls
enter
sti
lds
repnz
fmulp
clc
cli
in
aas
in
loope
jecxz
leave
stc
idiv
mov
rol
ror
sarb
out
rcl
xor
addb
loopne
out
out
in
call
aaa
xor
cmc
out
into
cmp
rol
aas
cmp
aam
stc
jmp
std
jecxz
enter
jmp
repnz
cmp
xlat
aad
cli
jecxz
jmp
nop
fmul
in
lock
fcmovnbe
cld
repnz
loopne
out
aas
stc
repz
rolb
leave
loope
enter
sub
int3
icebp
fnstenv
int
cmp
lock
into
xor
orl
stc
xchg
in
ljmp
hlt
cmp
cli
cmp
lock
loop
in
out
jmp
mov
lock
and
xor
cmp
sar
ror
call
aas
hlt
aad
inc
hlt
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
cmp
jmp
lret
decl
in
clc
aam
int
sti
clc
sbb
in
fisttpl
call
loop
out
iret
ss
repz
shr
ljmp
ret
ret
fucomi
lret
mov
int
ret
xor
cmp
ds
out
xchg
mul
out
std
mov
mov
shl
cmp
clc
out
repz
shl
sti
cmp
repz
ret
ret
fisttpl
enter
fptan
aad
repz
aas
cmp
hlt
fdiv
cld
cmp
lret
sub
icebp
xchg
call
std
shl
out
std
loope
in
xlat
xchg
lret
fadd
out
cld
das
call
xor
in
xor
rol
rcl
sti
fnstsw
ljmp
imull
hlt
int3
fcmovne
stc
icebp
xor
or
div
jecxz
repnz
fsubr
jecxz
std
loopne
cli
nop
xchg
out
into
out
sti
fldl2t
cmp
cmc
test
repnz
jmp
cmc
in
fdivp
and
out
int
jmp
repz
cmp
in
and
hlt
in
lea
fsubrp
out
xor
iret
leave
aam
iret
ljmp
add
xlat
loope
mov
iret
test
loopne
lock
rcl
xor
jmp
xor
aas
int
cmc
shl
rcr
sub
or
loop
out
loopne
into
into
fdiv
bnd
int3
into
test
rol
repnz
lret
mov
int
ljmp
jmp
fmul
xlat
out
roll
addl
cld
ror
loope
lret
aam
rcl
out
clc
aad
jmp
test
sti
fcmovnb
out
test
out
iret
jmp
cld
in
int
in
aaa
jmp
fucomp
cmc
or
rolb
out
mov
test
icebp
out
xlat
ljmp
lret
enter
repnz
movb
std
mov
xor
shr
aaa
hlt
ss
shl
aad
fstpt
ds
aas
mov
out
rcl
mov
aas
iret
enter
fucomi
cld
cmp
idiv
test
ljmp
loope
in
xorl
in
ljmp
repz
loopne
fadd
sti
jecxz
fldpi
shr
fcomi
into
jmp
shrl
repz
divb
xlat
ss
faddl
test
incb
fcmovb
shr
cli
ss
loope
into
repz
fiadds
mov
ljmp
xor
xor
out
out
shl
ret
loope
sti
orl
shl
fadd
loope
repnz
fisttpl
iret
mov
fmul
fisttpll
in
int3
leave
fcmovu
fyl2xp1
into
int
out
xlat
cmc
loope
jecxz
std
ftst
fucomi
fisttps
lock
fnstsw
fstpt
repnz
lret
repnz
fsubrp
jmp
in
xchg
mov
lock
loop
fdivrs
into
lret
fdivrp
in
repnz
out
cmc
cmp
jmp
sti
icebp
loopne
in
ljmp
clc
cmp
aas
cld
cmpb
loop
les
loopne
imul
fcmovb
loope
not
xchg
mov
repnz
cmc
aad
call
in
push
rcl
aam
ret
clc
shl
jmp
loop
out
std
jecxz
int3
xor
int3
ljmp
aaa
into
repz
in
out
sbb
loopne
test
xchg
loopne
cmc
out
into
jmp
fnsave
cmp
int3
sar
xlat
clc
fcmovnbe
clc
shl
loopne
ljmp
out
ret
ror
call
loope
fcmovne
cmp
icebp
clc
mov
fiadds
mov
shl
int
aam
int3
shl
stc
rcl
roll
orb
fcomip
ljmp
cs
iret
in
aas
shr
lock
aas
in
jmp
fdivr
xacquire
ljmp
cmp
fdivr
cmp
shl
std
loop
lret
out
popl
ret
enter
cmp
into
repz
sbb
out
mov
movl
jmp
jmp
ret
lret
enter
dec
and
jl
addb
jl
icebp
out
fiaddl
hlt
loopne
cmc
aad
aam
lret
lock
repnz
ds
addb
xchg
loop
shr
ss
repnz
cmp
cli
adc
ret
out
enter
fucompp
in
xchg
lret
xor
iret
cmp
out
std
fidivs
into
loopne
ret
sar
flds
mov
mov
xchg
mov
mov
lret
xor
rcl
cmp
into
adc
add
fmull
hlt
cmc
das
jmp
sar
lock
fucomip
fdivr
xchg
sar
mov
int
jmp
ror
repnz
jmp
cmp
hlt
imul
repz
icebp
cli
rorl
sbb
in
jmp
clc
iret
aad
fucomip
icebp
adc
ret
test
out
cli
out
nop
loope
mov
jecxz
out
out
test
fidivl
ret
aam
out
fiadds
testb
jmp
xor
hlt
jmp
vpsllw
ds
repnz
add
cld
fsubp
fcmovb
jmp
xchg
fimull
out
out
rcl
neg
rcr
loope
lock
test
loop
jmp
lret
mov
out
in
not
movb
hlt
out
repz
cld
incl
xchg
aad
das
shl
aam
call
stc
xor
cmp
aad
std
mov
lret
shr
call
lret
enter
xor
hlt
fcom
fldln2
cmc
aam
icebp
jmp
testl
in
in
bnd
ljmp
repnz
loopne
jmp
lea
idiv
enter
out
cmp
aad
out
ds
sti
mov
imul
out
xchg
int3
loop
enter
cmp
in
sar
test
shl
xchg
fucomp
fcmovu
mov
shr
shr
jecxz
into
sub
cmp
jmp
fsub
xor
xchg
clc
mov
in
ret
jmp
sub
shl
repnz
in
ror
sti
clc
int
jecxz
sbb
aad
ljmp
int
fst
xor
stc
iret
xor
xor
iret
and
cmp
fcomp
ljmp
fsubp
lret
sub
ret
cmp
lock
into
clc
rcl
repnz
call
out
int3
adc
enter
fcmovnbe
bnd
jecxz
rol
fimull
repz
into
mov
sub
ret
ljmp
incb
loop
fcomp
int
lock
lret
out
ror
enter
lret
cmp
cmp
fcmovnb
in
and
xlat
loope
cli
out
loopne
jmp
lret
xor
sar
and
rcl
aad
cmp
rorb
lock
rcl
fdivp
fsincos
rcr
in
adc
shl
fprem1
mov
fmul
jmp
shr
ljmp
cmp
sti
repnz
shl
aam
idiv
ret
fld
mov
hlt
out
sub
in
loop
xor
in
fcom
out
sbb
jecxz
cli
cmp
int
test
enter
mov
rcl
test
lret
cmp
jmp
rol
cld
fdivr
ret
mov
xchg
lret
in
loope
loope
sub
jmp
fcomi
out
fyl2x
fcmovbe
loop
fcom
fld
jmp
sub
out
nop
in
and
out
xor
cmp
shl
ljmp
jmp
jmp
repnz
nop
fidivs
loop
les
loope
repz
jecxz
fdivp
fst
faddp
jmp
mov
xchg
aad
jmp
xor
fnstsw
ds
ret
loop
fcmovb
sti
ljmp
ljmp
aam
icebp
aad
cmpl
aam
aam
ret
ret
xchg
call
cmc
call
clc
clc
in
neg
rcr
xlat
out
aas
faddp
mov
out
mov
ffreep
int3
xor
clc
enter
loope
stc
shl
mov
sar
sti
ret
enter
in
ljmp
xor
xor
fsubrp
out
test
loop
repnz
repnz
fcomp
ljmp
or
sahf
add
add
rcl
aad
lret
enter
push
xchg
addb
jl
aam
fnstenv
repnz
fcom
fnstenv
xlat
out
in
aad
loop
sti
clc
jmp
test
stc
cmc
xor
in
iret
ljmp
icebp
fldl
mov
lret
fildl
fsubrp
in
repnz
cld
int
cli
xlat
les
ret
mov
icebp
lret
test
xor
neg
xor
int
fdiv
shl
aam
fdivrs
aam
mov
fld1
enter
std
int
xor
repz
cmp
repz
out
call
div
std
jmp
in
nop
std
mov
icebp
icebp
out
loope
jmp
fidivrl
test
lock
add
aam
div
int
std
xor
cmp
int3
jecxz
sar
fdivr
clc
mul
stc
std
repz
test
aam
repz
int
rcl
shl
sti
addl
not
loope
in
fcmove
lret
lret
fcmovbe
sub
test
addl
lret
aaa
iret
leave
xlat
std
in
out
lret
out
xchg
mov
in
shr
in
lret
addb
cmp
xor
cmp
aad
into
xlat
sti
out
jmp
orl
inc
fnstcw
xor
xor
sar
rol
rcr
ret
cli
shl
ret
int
int3
jmp
icebp
in
int
sarl
aam
aad
repnz
div
div
addl
jmp
or
jmp
fldl
fcomi
fucomp
fidivrl
ljmp
out
mov
ljmp
int3
in
repnz
into
fdiv
flds
clc
sarb
mov
xchg
xchg
jmp
jmp
loop
into
dec
ss
jecxz
sti
in
cmc
in
fcmove
in
fxch
xchg
rol
test
shll
shr
aad
aas
xor
loop
incl
loop
int
fsubp
test
xlat
rcr
shrb
aad
in
call
lock
test
cmp
icebp
adc
in
and
into
out
aad
in
lret
in
aam
fdivrp
stc
cmp
repnz
fcmovbe
hlt
jmp
sti
jmp
iret
cmc
xor
leave
cmp
in
ljmp
icebp
loopne
stc
fmull
mov
cld
orl
cmp
aas
lock
ljmp
rol
jmp
out
out
inc
mov
loope
mov
ss
rol
jecxz
mov
in
and
cld
or
and
icebp
out
shr
sar
repz
in
cli
loop
aad
fstp
in
cld
enter
out
cmp
into
not
std
jecxz
cmc
faddp
in
mov
mov
mov
out
fiadds
jecxz
in
jmp
cmp
lret
aad
jmp
call
sti
decl
hlt
int
int
into
aaa
xor
aam
repnz
test
test
add
fimull
divb
xor
shr
out
cmc
shl
test
aad
enter
enter
repz
call
cmp
repz
cmp
add
jmp
lret
cli
call
aam
ljmp
out
imul
into
cmp
fdivr
roll
clc
fisttps
jmp
out
sti
in
aas
loope
xlat
loope
cli
clc
hlt
testl
repz
rol
jmp
lock
ljmp
add
sub
sti
xchg
cld
shll
aam
cmp
fucomp
shl
int3
fmulp
cmc
std
cmp
loopne
cmp
xchg
test
out
loope
aaa
int3
in
out
lock
enter
addl
stc
cld
ljmp
loop
aaa
shr
int3
in
clc
rcl
cmp
repz
test
clc
out
cld
xchg
cmc
rcl
xor
ret
in
stc
cmp
aad
xor
clc
in
cmp
aam
mov
fmull
shl
fsubrp
rol
xor
cld
ds
int3
cmp
repnz
ret
fcoms
sub
xor
add
jmp
rol
rcr
jbe
ss
dec
and
jl
add
ss
cmp
cmp
in
shr
ds
fdivr
repz
aam
lds
cld
into
xchg
loopne
out
enter
rol
clc
cmp
testl
out
cli
out
cs
sub
lret
jmp
sar
in
rcl
fcmovnu
vpxor
xchg
fstp
adc
lock
hlt
icebp
std
cmc
xor
fucomi
repnz
fnsetpm(287
mov
jecxz
repnz
out
std
ret
mov
ret
divb
cmc
lock
cmp
fucomp
xchg
call
jecxz
int
out
sarl
int
fnstenv
repnz
div
cli
xor
fiaddl
xchg
fcomp
mov
addb
xor
rcr
fstpt
int3
aas
icebp
xlat
in
fdivp
icebp
aad
test
fimuls
jmp
xorl
rol
in
cli
jmp
clc
repnz
std
aam
aam
mov
addb
cli
jmp
cmp
int3
icebp
ds
fcmovnu
xlat
xchg
fucomi
addl
sti
ror
cmp
xlat
cli
testb
leave
fmul
jecxz
fucompp
mov
out
xor
ror
cmp
enter
fstp
shr
ret
aad
xchg
ret
xchg
mov
fstl
fisubrs
loop
sti
sti
cmp
aam
idiv
in
in
ret
out
fcmovne
fadd
mov
call
lret
stc
fsubp
sar
cmp
std
aas
fcmovbe
jecxz
test
out
loop
xchg
into
cmp
rcr
enter
ljmp
leave
mov
not
faddl
int3
xor
lds
xor
in
out
cli
clc
out
sar
jmp
leave
adcb
loop
xor
iret
cld
jmp
clc
cmp
out
out
loopne
mul
ljmp
and
shlb
cs
lock
loope
cld
in
ret
stc
xchg
ljmp
test
fcmovnu
aad
repnz
rcl
cld
jmp
std
lock
jecxz
jmp
jmp
cmp
lret
loope
stc
sbb
fsub
in
jecxz
shl
out
xor
enter
fldlg2
in
std
std
into
ffreep
aam
test
int3
call
ljmp
ljmp
fstpt
shl
xor
mov
aam
lret
fsubrp
xchg
lock
test
aaa
int3
fidivrl
fst
test
lret
cmp
jmp
cmc
in
out
loop
out
aad
in
int3
lock
jmp
shl
add
xchg
testl
lock
fcmovbe
aad
repnz
cmp
ds
rol
and
jmp
cld
in
imul
sub
lret
in
leave
jmp
ljmp
aam
xchg
in
lret
loope
jmp
aaa
jmp
cmp
ss
cmp
xor
mov
in
test
in
repnz
fnstenv
in
int3
out
int
out
hlt
cmp
shl
lock
rcr
sti
cld
cld
fisttpl
ror
out
lret
jecxz
rcr
call
in
cmp
test
loope
addb
out
in
enter
xor
lret
clc
aam
xchg
xchg
into
or
xchg
iret
out
xor
les
neg
lret
add
rcl
sti
fcomip
std
enter
mov
shr
repz
fucom
sti
leave
fmul
shr
std
xchg
lock
repz
fdivrp
in
mov
fimull
xor
hlt
aad
xor
in
out
shr
and
loope
or
mov
repz
xor
jmp
cli
roll
jmp
lret
in
enter
aad
into
ds
fmul
cmp
icebp
cld
sti
call
rcr
rcr
and
and
lock
cld
sub
cs
std
out
lret
lock
aas
ret
cmp
testl
xor
xor
repnz
fstpt
hlt
xor
cli
movb
in
jecxz
enter
fidivl
into
fdivrs
sarl
add
test
cmp
add
clc
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
addl
jl
add
icebp
xor
fsubp
jmp
test
int3
sar
hlt
fbstp
out
clc
out
cld
fst
in
fcmovne
xlat
test
rol
ret
hlt
aam
mov
in
sbb
rclb
clc
jmp
cmp
loope
ds
in
incb
xlat
ljmp
in
aam
in
lret
cmc
call
in
ret
cmc
int3
loopne
test
mov
fmull
rol
xor
cmp
fcom
fcmovnbe
shl
call
lock
mul
loope
enter
xchg
xor
ss
aad
test
addb
fcmovne
repnz
xchg
ret
call
cmp
icebp
rcr
fdivp
push
fdivrp
cld
loop
std
fxam
fdivp
mov
xor
cmp
shl
cmp
xor
clc
xchg
mov
jecxz
jmp
xchg
in
fadd
fxch
das
cmp
fnsave
aas
fdivrp
ret
shl
rcr
mov
leave
mov
loop
int3
mov
rol
int3
rcr
aam
sub
in
call
jecxz
iret
fldl
in
into
sti
xchg
in
rcl
hlt
test
aas
cmp
call
cli
test
xchg
mov
decl
xchg
out
rol
call
repz
sar
stc
fsubrp
loop
std
in
testb
in
out
enter
cmc
aaa
std
cmc
ljmp
fldl
clc
in
ljmp
out
in
lret
ds
mov
leave
cli
sti
flds
xchg
out
in
rol
cmp
aad
ss
sbb
sar
xlat
rolb
mov
cli
sti
xchg
jmp
bnd
jmp
fnsave
cmp
int
lret
cmp
cmp
fincstp
int
out
mov
ss
out
stc
xlat
iret
cmp
aad
jmp
xor
loop
enter
jmp
out
in
aas
das
lock
xor
in
out
lock
not
fcmovnu
test
fcmove
stc
lret
leave
and
in
fcom
xor
iret
clc
cmp
ljmp
mov
cmp
jmp
enter
xchg
in
lock
sub
icebp
enter
in
cmp
sarl
jmp
mov
lret
in
out
lret
xor
sti
lret
fucomp
adc
mov
jmp
mov
call
ror
fbstp
shr
iret
rcr
fld
repz
ret
cli
test
jmp
leave
fsubrp
hlt
icebp
xor
in
sti
enter
cmp
fxch
ljmp
rolb
leave
test
in
lds
in
iret
repz
int
lret
int3
in
enter
test
mov
mov
jmp
ror
sub
fiaddl
loope
ffree
rclb
jmp
fcmovu
into
fsubr
aam
into
stc
aas
jmp
xchg
mov
ljmp
ss
mul
aad
out
in
out
fadd
repnz
cmp
rol
aam
aas
test
fucomi
lret
rcr
jmp
xor
test
jecxz
ret
loope
call
testl
icebp
aaa
xor
loopne
repz
cmp
imul
xchg
std
mov
icebp
int3
cli
jmp
enter
out
in
in
std
in
filds
aad
cmp
jmp
xchg
out
in
into
shll
iret
sub
shlb
test
call
icebp
fucomip
fdivp
shl
ror
enter
jecxz
in
rorl
shlb
in
clc
out
shl
aad
in
repnz
loop
clc
fildl
lret
ror
lret
ror
lret
int
fdivr
fadds
mov
decb
in
std
leave
lock
cmc
sub
jmp
out
out
sub
fcmovnbe
ffree
test
enter
out
enter
xor
neg
std
int
iret
xlat
aam
cmc
leave
rolb
iret
jmp
xor
rol
int
in
iret
fdivrs
call
lock
enter
enter
out
fstl
clc
xlat
fldz
cli
rcl
neg
repnz
icebp
cmp
add
add
ret
xlat
int3
int
cmc
or
idivb
ficompl
mov
jl
addb
jl
in
orb
cld
call
addb
xor
fucomip
into
ss
cmp
into
shl
ds
cld
jecxz
shr
ror
repnz
xor
into
cmp
fucomip
addb
lret
and
xchg
xor
aad
lock
idiv
ljmp
out
mov
mov
sub
mov
xor
into
icebp
fucomi
cs
hlt
cmp
rol
ds
mul
loopne
decl
repnz
sar
xor
cli
int
int3
fcmovnu
sar
sar
in
movl
shr
ret
aad
xor
rcr
out
hlt
ds
loop
in
mul
test
aam
mul
lock
aam
cmp
rol
cld
sti
lock
int3
iret
nop
in
shll
ljmp
cmp
cmc
fsubr
div
ret
xchg
jmp
mov
faddl
xlat
shlb
cmc
adc
test
aas
in
in
int
in
aad
aad
in
out
cmp
ds
icebp
ror
in
fsub
and
xchg
ljmp
xchg
iret
lret
in
xor
aas
cli
hlt
shr
fucomi
stc
mov
jmp
loopne
jmp
aad
aaa
xor
cmp
cmp
aam
xlat
loop
cmp
stc
xchg
ret
les
vaddsubps
das
call
out
fnstsw
aad
rcr
jecxz
repnz
neg
xchg
push
add
hlt
out
test
icebp
fdivrs
stc
loop
rcr
loop
clc
clc
dec
xchg
out
out
adc
iret
lock
aam
std
fdivl
out
shl
ret
ret
fdivrs
les
xchg
int3
shl
div
aam
lret
cmp
in
out
stc
lea
leave
xchg
mov
xchg
fld
jmp
aas
sar
sar
rcr
loope
fdiv
ret
clc
clc
cld
inc
mov
ror
repz
xor
iret
iret
ds
in
cli
xor
in
neg
stc
in
out
lret
sub
iret
ss
xlat
clc
ds
shl
cmc
idiv
xlat
lret
lock
xor
sub
fmulp
cmp
cli
rcl
xchg
shl
fildl
int3
into
loopne
fsubp
into
aam
repnz
lret
ds
cmp
mov
fmull
mov
aam
int3
xor
in
repnz
iret
into
ss
cld
addb
lret
lret
sub
std
mov
xor
out
xor
call
cli
xchg
repz
decl
enter
lds
in
leave
xlat
in
cmp
loop
ffree
ret
hlt
leave
ret
and
int
loope
sti
imul
cmc
xor
rcl
cli
repnz
repnz
call
in
fcmovnu
cli
in
hlt
ljmp
out
repnz
out
in
clc
aam
rorl
rorl
ljmp
cmp
rcl
icebp
orb
icebp
in
xchg
mov
aam
out
test
out
stc
movb
in
loopne
in
incl
in
addb
std
std
cmp
icebp
call
roll
xchg
or
repz
sti
sub
shll
cmpb
hlt
rcl
cli
jmp
push
popl
int3
out
fmul
sar
cmp
lret
fdivrs
clc
fcmove
loope
lret
test
fst
push
cmc
loop,pn
ret
xor
cld
ror
xlat
sarl
xchg
jecxz
iret
rorl
loop
xor
frndint
std
test
and
out
aad
clc
fmul
jmp
in
repz
ret
repnz
aam
call
into
test
adc
test
xchg
fadd
sti
int
in
dec
cmp
sarl
roll
in
fcmovnu
out
adcb
lret
cmc
cs
jmp
flds
clc
cmp
decl
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
data16
pusha
xor
addb
jl
jmp
lret
fadd
mov
int3
lret
hlt
cmp
enter
lock
std
ffree
ss
hlt
adc
sub
out
repz
iret
xchg
ljmp
into
int3
cld
cmc
loopne
xor
sbb
std
jmp
nop
rorb
xor
int3
ss
sti
cmp
into
in
iret
cmpl
cli
test
loop
out
sub
fnstenv
hlt
aad
out
aad
call
cmp
aad
clc
mov
jmp
sub
loop
jecxz
lret
xor
fnstsw
aam
rcr
jmp
jmp
lret
xchg
out
jmp
aaa
ljmp
rol
sar
roll
fucomi
test
in
ds
test
loope
lock
inc
addl
in
test
loope
aaa
rol
xor
xor
hlt
inc
jecxz
sti
std
roll
rol
fchs
stc
cli
ficoml
out
into
stc
enter
in
fdiv
out
fcmovbe
xchg
adc
mul
jmp
bnd
cmc
les
cs
xor
ljmp
std
xlat
xlat
out
add
loop
std
mov
shlb
shr
sti
std
cmp
fcmovu
adc
xlat
test
and
in
in
test
aaa
ror
out
cmc
cmp
cmp
rol
cmp
xchg
jecxz
lret
mov
mov
sti
loopne
xchg
loop
ss
jmp
shl
icebp
xchg
mov
fstp
mov
jmp
jmp
rcl
std
stc
cld
enter
sti
cmp
sarb
loop
fadds
mov
aam
lret
shl
out
imul
roll
in
enter
testb
mov
int3
shrb
cmp
cmc
testb
xor
stc
incb
out
ljmp
ljmp
xlat
stc
aad
test
mov
lds
call
leave
ror
lock
leave
cs
ds
jmp
sti
shl
loope
iret
ret
shl
jmp
ret
in
sti
roll
movl
xor
cld
cs
neg
in
iret
cmp
incl
and
clc
call
mov
cs
rcl
repnz
cld
cmp
rcr
not
icebp
rcr
fisttps
loopne
fcmovu
lea
lock
loop
xor
repnz
shr
or
xchg
enter
xchg
loopne
out
sti
std
sti
out
lret
sarb
xlat
fsub
xchg
clc
enter
ljmp
test
fdiv
repz
stc
test
mov
ljmp
xchg
std
jecxz
shl
xabort
cmp
fcmovnu
xor
int3
test
div
ror
test
cli
fiaddl
mov
ror
xor
divl
in
sti
hlt
fnstsw
fcmovnbe
sar
stc
in
ds
sbb
testb
jmp
ret
aam
in
leave
iret
lret
ror
hlt
shl
mul
out
std
mov
call
fucomip
clc
icebp
clc
xor
aam
cmp
fsub
lock
ret
loop
ljmp
lock
cli
lret
cmp
sar
cmp
jecxz
rcl
cmp
ljmp
loop
ret
repnz
rcl
jmp
lock
xchg
mov
xchg
xchg
mov
icebp
cs
stc
jmp
rol
lret
lret
cli
cli
out
shl
xchg
mov
mov
sub
in
in
in
in
fcmovne
fst
iret
icebp
out
clc
fdivrp
sar
idivb
push
jmp
testb
mov
aad
div
leave
aad
std
stc
aam
sar
lret
call
loop
in
shl
ffreep
iret
cmp
clc
int
int
leave
cmp
ret
ret
jmp
mov
orb
xor
leave
cmp
test
cmc
std
ljmp
into
xchg
enter
sub
rcr
aam
cld
sti
int3
aam
test
shl
fyl2xp1
in
mov
jecxz
jmp
ror
int
fcmove
mov
push
das
mov
cwtl
repz
addb
jl
addb
cmc
jmp
repnz
out
aad
loopne
incb
jmp
or
xchg
das
ror
ret
fnsave
lret
sarl
test
faddl
int3
mov
ror
call
leave
aaa
cmp
fcmove
fsubrp
lock
idivl
ds
fcmove
in
mov
int3
xchg
shl
out
fsubr
lock
clc
aad
ret
in
cmp
aam
out
popl
shlb
aam
fldz
fcomp
jmp
aad
in
jmp
stc
ret
call
loop
shr
cmp
sti
out
cli
lock
cmp
test
mul
std
in
fcomi
int3
and
repz
in
out
rcl
rol
in
cmp
fidivrl
fsubp
out
loop
in
fadds
loop
xchg
ret
hlt
shl
cmc
sti
ss
sti
cmp
rol
stc
loope
hlt
lret
lret
loopne
out
cmp
not
cmc
cld
aam
fcomip
cmp
neg
add
out
mov
sti
or
int3
aad
enter
div
iret
sar
icebp
fdivp
out
jmp
in
faddl
ret
xor
into
sti
xor
fsub
loopne
cmc
ret
out
aad
out
mov
decb
out
int3
jecxz
xor
std
sarb
rcr
cmp
addb
mov
xor
repnz
ror
lret
int
shl
fadds
clc
cmp
fcmovnu
mov
cld
cli
out
xchg
int
div
out
jmp
fidivl
iret
rcr
sar
jecxz
fsub
out
fmul
sub
out
iret
enter
cmc
idivl
cmp
repz
ss
sbb
stc
mov
std
xchg
in
shr
aad
not
call
cmp
faddl
leave
fcmove
icebp
sub
cmc
in
int3
clc
cmc
cld
repnz
cli
aas
hlt
cli
ds
fmuls
out
lret
ffreep
clc
lret
aad
hlt
iret
sti
fsubr
ret
in
aad
test
cli
orb
jmp
iret
int3
out
into
lock
rcr
cmp
aam
repz
out
loopne
icebp
add
cmc
in
in
iret
ror
icebp
test
icebp
aaa
out
divb
aad
loope
std
stc
ret
fmul
ljmp
ror
shl
iret
xor
cmp
into
int
std
enter
stc
in
out
fdivr
xlat
call
lock
xabort
cmc
fdivrp
aad
stc
iret
xor
addl
xchg
lock
into
xlat
iret
loope
cmp
cmpb
rol
test
test
loop
test
and
filds
enter
out
leave
aam
cmp
repz
fucomp
fldl
lock
icebp
mul
leave
jmp
cmp
fcmovbe
jecxz
icebp
adc
rcl
clc
rcr
xchg
lock
aad
aaa
in
cmc
imul
aam
sub
sti
rcr
loopne
inc
incl
loopne
xchg
icebp
hlt
fucomi
jmp
cmp
iret
shl
ret
sti
into
cli
ret
cld
mov
lock
repnz
fxch
out
cmp
inc
std
out
mov
clc
test
lret
jmp
shr
mov
int3
ss
enter
iret
clc
stc
adc
fld
mov
rorb
fdivr
jmp
into
cld
out
out
cld
loope
inc
aam
xchg
int3
sti
mov
or
std
shr
xor
sti
ljmp
jmp
test
sar
hlt
neg
int
out
std
out
test
lret
das
jmp
std
fidivrl
lret
out
cmp
mov
cmp
lret
jmp
xchg
lds
into
out
lret
aad
lock
test
ret
stc
addl
fcmovu
iret
fdivp
in
ret
icebp
xor
int3
fdivr
fstpt
cmp
call
xchg
nop
cli
call
rcr
cld
jmp
aam
in
clc
fcom
iret
mov
loopne
xchg
out
int3
leave
in
ret
lret
std
cli
cmp
fcmovnbe
fmul
loope
in
lret
in
xor
lret
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
imul
jl
aad
fmul
cmp
ljmp
aam
cld
aad
jmp
xchg
int3
xchg
sub
fyl2x
idiv
fnsave
ss
fxam
hlt
loope
mov
idiv
ret
jmp
in
rclb
sti
aad
cli
lock
ljmp
mov
lret
call
stc
jecxz
xlat
ss
cli
xor
cmp
rcr
lock
jmp
rcr
lret
mov
xor
jmp
cmp
hlt
in
fcomp
fst
cli
orl
int
addl
in
jmp
aad
cmp
std
fdivrp
mov
in
mov
icebp
test
leave
aad
int3
hlt
cmp
int
lock
not
xlat
out
lds
rclb
enter
leave
fcmovu
shl
neg
not
shl
icebp
shl
fdivrl
fmull
roll
xor
xor
dec
fsubrp
into
xor
out
aad
mov
std
loop
lret
neg
mov
std
repnz
int3
cld
ss
cmp
rolb
test
stc
loopne
ljmp
sti
into
fcmovnbe
aas
icebp
fidivrs
test
in
jmp
lea
rcl
in
iret
std
ror
cmp
ret
sbb
inc
mov
out
ret
repz
hlt
in
out
das
iret
jmp
icebp
idiv
iret
in
rolb
lret
filds
in
xor
sti
leave
fdivs
int
cmp
fcmovb
loopne
test
out
mov
testl
out
sub
rcr
cmp
lret
loope
sti
fdivr
shl
fdivrl
or
inc
in
mov
shl
iret
std
cmp
out
rcl
cmc
rcl
shl
hlt
call
les
ljmp
fdivr
lock
out
in
int
lret
out
test
loopne
xor
aaa
xor
cmp
frndint
in
mul
or
fimuls
lret
int3
int
out
aas
cmpb
ret
ret
clc
test
mov
shl
test
into
rcl
xor
hlt
decl
test
fucomp
mov
int
in
iret
aam
icebp
aam
lock
into
loop
xchg
std
fistpll
xchg
mov
repnz
int3
in
cmc
out
lock
call
ds
lock
lock
addb
xchg
fildll
loopne
out
jmp
out
cmp
jecxz
loope
or
shl
test
in
out
lret
in
aad
iret
repnz
jecxz
shl
loopne
mov
fstp
ffreep
jecxz
out
xchg
lock
loope
lret
icebp
xor
stc
cli
xor
aas
cmp
aam
std
loope
hlt
repz
in
in
mov
clc
loope
mov
leave
ret
cmc
aaa
repz
in
test
idiv
loopne
shl
std
clc
stc
in
cmc
xlat
jecxz
mov
iret
int3
ljmp
rcr
in
cld
lret
rcl
cmp
lret
fstp
loope
out
loopne
xchg
orl
std
ljmp
test
repnz
repz
fxch
in
cld
enter
mov
int3
ljmp
in
in
iret
int3
stc
loope
testl
clc
fsubp
in
jecxz
in
icebp
aaa
out
int3
fcom
clc
jecxz
loopne
leave
shl
fmulp
mov
in
mov
xlat
loop
call
hlt
into
div
loope
ffreep
jecxz
out
aad
cmp
nop
mov
rcl
loope
fxch
aam
cmp
clc
std
leave
xor
aad
cli
stc
enter
into
int3
out
test
leave
repz
rcl
fnstsw
clc
int
sub
jecxz
out
shl
ljmp
iret
jecxz
ror
cli
cmp
cmp
cli
fcmovu
fildl
enter
jecxz
ljmp
aaa
ljmp
lret
out
icebp
loop
filds
shl
idiv
lret
adc
cs
aam
sti
fdiv
fdiv
test
and
lds
mov
repnz
iret
icebp
sub
cmp
shrl
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
inc
int3
push
movsb
cli
jl
addb
jl
cmp
std
fnstcw
loope
jmp
loop
in
mov
decb
ret
repz
hlt
in
aas
ds
hlt
stc
xchg
cld
add
cli
icebp
mov
jecxz
out
cmp
fstpt
aas
icebp
rcl
loop
cmc
xchg
out
fdivrp
xchg
int
lock
mul
not
in
divb
call
rorl
lret
jecxz
in
loopne
mov
jmp
xor
vshufpd
out
fucomi
loop
clc
loopne
jecxz
ljmp
in
iret
cmc
xor
xor
xor
fdivrl
jmp
aas
into
fcomp
fnsetpm(287
cmp
int3
xchg
cld
xchg
out
loope
jecxz
shl
fst
in
div
cmp
loop
loop
aad
cmp
out
addb
xchg
rol
icebp
loop
in
shr
ds
lock
std
adc
ret
xchg
icebp
in
loope
divl
lret
xlat
hlt
test
lret
out
lret
lret
repz
fcomi
repnz
ds
rcl
jmp
leave
fsub
ret
in
xor
repnz
xor
enter
cmp
fcmovbe
test
xchg
leave
out
mov
ljmp
xor
aaa
repz
aaa
sti
ss
stc
ret
stc
fcmovnu
xchg
clc
cli
enter
cld
xchg
repnz
shrl
loop
call
repz
sar
cmp
rol
in
cli
sbb
mov
cld
clc
leave
mov
out
xor
cli
das
in
cmp
cmp
fcmovnb
xlat
std
loop
inc
ret
int
mov
test
int
fldpi
iret
xor
xor
jmp
int3
cld
aam
cmc
mov
fst
test
repz
iret
icebp
xlat
aaa
int3
ds
test
xor
fildl
enter
into
leave
fptan
ftst
in
out
in
stc
cli
in
clc
std
cmp
neg
neg
jecxz
fucomi
test
vpaddq
not
xor
fsubrp
sar
icebp
std
cmpb
out
addb
loopne
xchg
add
jmp
out
fidivrs
int
cli
loopne
in
aam
sub
cli
loope
iret
icebp
hlt
int
xor
cmp
xlat
cmp
cmc
stc
sti
out
out
ljmp
iret
jecxz
jecxz
aam
xor
xor
loopne
stc
xor
ss
test
loopne
in
out
call
xor
repnz
sti
sti
cli
cmp
std
repz
shl
lock
stc
mov
lret
cli
std
mov
das
leave
cmc
xor
repnz
shl
rcl
fnclex
fucomip
fiadds
shl
hlt
mov
aaa
shl
ret
cmp
cmc
cld
clc
loop
fdivr
cmp
loop
mov
test
enter
xor
neg
enter
int
int3
rcl
out
neg
repnz
jmp
call
test
cli
rcr
incb
cli
fstpt
ljmp
rolb
ret
shlb
enter
fprem
fcomp
dec
sar
loop
ret
xchg
in
test
xor
repnz
clc
aad
repnz
cld
fsubp
stc
xchg
in
nop
lock
shr
jmp
int3
fcomip
shr
aam
test
mov
lret
shrl
loop
cmp
sti
xor
fnstsw
cli
int3
inc
aas
shl
in
ret
faddp
dec
fcoml
hlt
out
aam
cmp
xor
mul
std
shl
mov
aad
incb
xchg
in
lea
out
sar
aaa
out
icebp
cmp
ljmp
cli
fprem
ret
icebp
nop
jecxz
xchg
ss
cmp
cld
hlt
hlt
in
cmp
xlat
shr
test
test
iret
out
loop
repnz
rcr
test
fidivrs
fucomi
cmpl
mov
xchg
mov
sbb
shl
call
testb
rolb
xchg
mov
sub
cmp
leave
cmc
xor
cmp
cmp
cmp
repz
aam
orb
repz
std
cmp
in
fadd
dec
mov
jmp
leave
int
int
int
mov
aam
push
jnp
sub
jl
loope
shr
cmc
stc
int3
fsubp
in
lea
mul
div
jmp
int
aam
xor
hlt
sbb
std
call
fists
out
aam
into
cld
repz
xor
jecxz
xlat
jecxz
repz
mov
int
out
lret
int
repz
mov
aaa
sarb
aaa
xor
ds
cmp
fsub
orb
loopne
cmc
rcr
loopne
shll
jmp
rol
icebp
rcr
loopne
aam
fisttps
out
mov
in
rol
cmp
out
out
inc
loope
aas
loopne
rcl
rcr
leave
mov
and
int
adc
ss
repz
leave
xor
loope
in
rcr
loop
clc
enter
xchg
lock
xchg
loope
out
out
imul
cmp
in
rol
xchg
lock
clc
test
lret
lock
xchg
sbb
out
aaa
call
icebp
cmc
sar
clc
in
cli
stc
loop
test
in
loop
fsubp
ljmp
imul
iret
xor
ror
adc
aas
roll
enter
orb
cmp
into
in
fnstcw
lret
cli
fdivr
int3
cmp
cli
xlat
enter
cli
fiaddl
test
cli
lret
rcl
cmp
cld
cmp
sti
fcomip
fimuls
addl
jmp
cli
jmp
cmp
std
shl
ljmp
call
into
jmp
cmp
adc
std
in
clc
aad
cld
fmul
leave
xlat
call
loope
idiv
call
ljmp
loop
fisttpl
or
loope
in
loop
stc
ss
sub
cli
aas
xor
aas
in
cmc
aad
test
test
fisttpll
cmc
in
loope
into
cs
xor
aad
ljmp
and
loopne
mov
iret
int
mov
cmc
loope
call
cmp
ss
fmul
cmp
lock
jecxz
xchg
cmc
cmp
jmp
cmp
stc
incb
cli
fcom
mov
int
xchg
incb
ss
jmp
stc
loopne
fdivrl
sti
out
xchg
stc
rcl
fiaddl
call
out
out
fst
cmp
fcmovnu
iret
aam
loope
mov
xchg
int3
xchg
into
out
xchg
sti
hlt
lock
fcmovb
loope
idivb
cld
icebp
cli
iret
orb
fcoml
aaa
ret
in
shl
iret
cld
out
cmc
cmp
incl
clc
fucom
in
rcl
jmp
ret
int
aad
int
test
add
jecxz
call
loope
xchg
into
cld
jmp
leave
sti
ss
iret
jmp
sar
loope
ffree
hlt
loope
int
lock
hlt
test
lock
repz
shr
lock
cmp
vcvttpd2dq
mov
jecxz
mov
decb
cs
int3
hlt
clc
lock
ds
stc
clc
aad
les
in
out
xchg
shl
stc
aaa
fcom
ljmp
in
loopne
fdiv
jmp
out
nop
call
lret
xor
jmp
sarl
in
repz
ret
icebp
call
cmc
loope
lret
xor
ljmp
repnz
jecxz
rcr
loope
jmp
repz
ss
repnz
jmp
repz
clc
sti
in
lock
loop
sbb
cli
jmp
fld
not
out
hlt
aas
int3
ss
stc
loope
sar
call
lret
nop
jecxz
xchg
loope
repnz
fucomp
lret
std
int3
ss
cmp
les
aad
fldl2t
lret
repz
in
in
out
fmulp
in
idivl
out
test
aas
xchg
mov
addl
ret
ret
hlt
out
aas
not
in
fnstcw
xchg
aam
mov
shl
in
fldlg2
jmp
mul
aas
repz
aad
rcl
call
mov
in
hlt
leave
dec
int
clc
loopne
ffreep
rorl
add
aad
leave
lret
fstp
aad
mov
jae
mov
jl
addb
jl
enter
fmul
cli
mov
jecxz
aaa
rcl
in
clc
enter
ss
ds
sti
xchg
les
std
and
mov
into
lret
ss
out
aaa
sar
icebp
jecxz
test
out
out
lret
lret
ljmp
out
xor
hlt
iret
out
jecxz
lret
icebp
cld
fucomp
jmp
loopne
loop
pop
das
cmp
clc
leave
in
cmp
fucomi
lret
ret
xlat
not
jmp
rorb
in
xor
cmp
int
fcomi
icebp
sti
mov
in
loopne
loopne
mov
das
stc
xlat
xor
iret
cmpl
fsubr
fisttps
out
ret
cli
in
xor
inc
fxch
out
hlt
in
cmc
lret
in
xchg
cld
rcl
mov
icebp
ret
out
rcl
sub
jmp
sar
test
shl
loop
test
test
orl
aad
les
iret
fdivrl
in
ds
cmp
shl
clc
cmp
sbb
lret
icebp
clc
xchg
out
xchg
out
fdivs
sti
das
stc
aas
xor
jmp
cmp
rol
lret
in
out
mov
adc
idiv
std
jmp
ds
sti
ds
aam
sti
lret
ret
test
sub
enter
cmp
out
sti
ds
icebp
ret
leave
in
loop
xlat
xchg
iret
jmp
loopne
xchg
aad
jmp
cmc
fdivs
ss
rcr
and
jmp
mov
mov
filds
test
repz
shl
sti
repnz
fcomi
out
ljmp
repz
iret
into
enter
fdivr
lret
fcomip
rcr
test
fiaddl
test
mov
leave
in
call
cmp
xchg
xchg
xchg
in
test
loope
xor
aaa
ss
shl
enter
jecxz
test
cmc
jmp
xchg
incb
xchg
xor
out
lret
cmp
fistpll
jmp
addl
xchg
fisttpll
repz
sarb
in
xlat
cli
shlb
hlt
cmc
jecxz
lock
hlt
fmulp
fucomip
int3
out
shl
in
xlat
lret
ss
cli
icebp
in
jmp
lret
sarb
mov
test
lds
shl
shll
aaa
hlt
out
jmp
repz
cld
enter
fcmovnu
orb
shl
ret
sti
xor
fst
shl
rcl
icebp
ret
loopne
aad
fucomi
mov
loopne
ror
xchg
shrl
shrl
call
rcr
xlat
xor
aam
aad
fnsetpm(287
sub
cli
rolb
in
jmp
cmp
out
cmp
in
cmp
xor
mov
mov
jecxz
lret
sar
sti
jmp
fndisi(8087
sar
fiaddl
sbb
iret
fdivr
test
repnz
in
in
repnz
call
fidivrl
cli
hlt
loope
icebp
hlt
std
ret
addl
out
test
cmp
int3
aas
cmp
std
loopne
shl
div
mov
mov
les
fmull
repz
stc
pushl
in
cmp
cmp
fstp
cld
xchg
test
jecxz
mov
lret
jmp
xor
aam
out
fnstsw
std
sbb
shl
test
cld
fcmove
enter
in
xchg
icebp
in
mov
enter
clc
fst
fcmovnu
stc
cli
std
decl
mov
in
out
in
shl
jmp
sbb
jmp
loopne
sub
ljmp
fcmovnbe
xlat
loopne
sar
lock
repz
xchg
xchg
aad
aad
loope
out
repz
neg
rol
loope
shl
in
mov
rorl
cmc
cmc
std
in
lock
ret
leave
mov
jecxz
cmp
int
shr
xor
xor
int3
ljmp
test
rolb
test
std
icebp
int
icebp
icebp
stc
jecxz
cmc
xor
out
aas
int
jecxz
or
cmc
cmp
aam
out
loope
in
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
add
mov
add
lret
in
out
ss
fdivr
xor
in
iret
lret
cmp
repnz
test
fmulp
mov
incl
xor
sti
in
int
int
in
jecxz
in
ret
rcr
xlat
faddp
or
int
icebp
out
nop
rcll
int
iret
enter
fsin
cli
lock
test
xlat
in
test
xlat
test
in
xchg
mov
into
loop
cmp
stc
fistpll
cmp
sti
std
repnz
fisttps
lret
vpmaddwd
out
into
lock
fcomip
out
loopne
out
rcl
aam
aam
sti
into
iret
lret
out
lock
mov
shr
shr
hlt
cmp
and
ljmp
iret
repz
lock
out
shlb
hlt
imul
shl
aad
add
sti
jecxz
leave
sti
testb
movl
aaa
loope
enter
rcr
cmc
xchg
fcom
cmp
jmp
das
idiv
icebp
sti
ss
sti
lret
sar
cmp
jmp
mov
call
addl
call
addb
idiv
std
sub
fsub
adc
lock
out
clc
repz
cli
int
xlat
clc
sar
shl
hlt
clc
jecxz
leave
mov
jecxz
loop
sub
leave
out
aad
iret
hlt
cmp
cmp
xlat
ret
repz
in
xbegin
fstl
sub
aad
in
jmp
xor
in
idiv
aad
cli
in
cld
sub
shl
out
xor
cmp
aas
shl
loope
sarl
loop
call
iret
xchg
call
shl
lret
les
lret
cli
icebp
sarb
xlat
ret
aad
incl
mov
shll
sub
out
ror
in
repnz
out
std
cld
ds
rcr
and
stc
les
loop
mul
not
iret
in
fcmovnbe
in
xor
not
xor
clc
cmp
call
out
in
mov
in
lea
fcom
fcmovnu
fcmove
fnstcw
decl
lret
test
call
repnz
rcr
leave
rcl
ret
xlat
cmp
faddl
mov
mov
shl
call
leave
shr
lret
addl
mov
xchg
lret
clc
xchg
iret
aad
stc
repnz
div
idiv
cmp
int3
faddp
rolb
out
enter
loope
faddl
xor
repz
repz
not
fdivr
into
ds
fneni(8087
sub
in
lea
xor
sti
cmp
shr
fcmovu
fildl
vpor
cmp
in
cli
repnz
xlat
in
xor
lret
cli
out
lock
in
testl
loop
lret
mov
out
icebp
jmp
shr
ret
call
cmp
rol
loope
in
test
incl
out
in
lock
ljmp
fdivr
fnop
xchg
fiadds
or
call
xchg
shr
out
aaa
out
icebp
fxch
cmp
int
ror
in
xchg
in
mov
out
out
aaa
in
shlb
lock
lock
f2xm1
cmp
lock
mov
mov
icebp
cmc
lret
xor
cmp
fistpll
cld
loopne
cmp
ret
in
idiv
mov
xchg
nop
mov
sub
aaa
icebp
stc
fdivp
clc
fxtract
cmp
imul
cmp
in
fsubp
test
out
loopne
out
enter
call
cmp
fidivrl
out
cmc
mov
fcmovu
repz
out
xor
into
fucomi
imul
fsubp
f2xm1
ds
cli
les
addb
xor
hlt
in
fstp
enter
jecxz
out
shl
cmp
faddp
out
rorb
out
test
lock
stc
aam
cmp
jecxz
fcmovne
fnsetpm(287
jecxz
adcb
ljmp
iret
aam
mul
cmp
fld
aas
jecxz
clc
orb
mov
xchg
shl
xlat
fcmovne
xor
fcmovu
cmp
out
clc
aam
out
xchg
repz
jecxz
movb
jmp
xlat
aad
rcr
fstp
add
mov
add
out
lret
stc
ror
lret
idivb
fidivrs
adc
imul
mov
leave
std
shl
div
fdiv
ror
xor
ds
repnz
aam
fmul
fstp
jmp
std
mov
rol
xor
out
ljmp
repnz
test
icebp
xchg
clc
and
mov
cmc
loopne
rcl
aam
cmc
cmc
enter
cmpl
sti
fsubr
loope
in
into
or
hlt
rol
out
ljmp
lret
rolb
aam
sbb
mov
out
aad
cmp
jecxz
hlt
sar
out
fadd
loop
in
ljmp
mov
shl
hlt
icebp
in
std
cld
cmp
cmp
hlt
addb
fnstcw
or
lret
in
out
cs
lock
aas
icebp
repz
lret
xchg
cmc
repnz
in
mov
ljmp
int
xlat
ljmp
sarl
ret
hlt
addl
lret
icebp
fcomi
mov
test
rcl
repz
std
int3
lret
clc
sti
fildl
out
add
ret
fsubr
leave
fldz
out
and
xchg
fsubp
lock
xor
cmp
hlt
in
aad
cmp
cmp
clc
leave
icebp
fmull
xor
in
cli
shll
ret
cmp
xor
ljmp
sti
xchg
jmp
sub
shr
xor
fstpt
out
cmc
cli
ret
out
repnz
xchg
lret
std
in
clc
xchg
fisttpll
not
out
jmp
out
repz
int3
rcr
or
les
int
xchg
sub
test
test
iret
out
enter
ljmp
loop
sti
jecxz
mov
stc
out
adc
shr
xor
aam
rol
xor
adc
loop
clc
xchg
fsubp
jmp
in
addb
xlat
ret
ret
shl
enter
cmp
loopne
neg
fmul
sti
in
ljmp
int
loope
out
sbb
sti
ljmp
in
test
xchg
sub
ss
idivl
enter
shl
inc
fcomip
out
ret
ljmp
out
mov
int3
ret
sub
in
aam
fstp
lock
rcr
repz
jmp
ret
iret
out
jmp
jmp
int
xor
cmp
int
jecxz
test
into
fcmovnbe
out
sti
fdivrp
out
out
in
mov
ret
enter
cmp
out
icebp
ret
cld
ret
fdiv
xchg
incb
out
leave
div
aam
in
enter
aam
out
rcr
iret
call
loop
test
leave
in
in
clc
adc
shr
cs
into
rol
call
shl
iret
aaa
div
clc
repz
cmp
or
mov
sar
aam
xor
rol
rolb
xchg
jmp
loop
and
filds
out
ljmp
cmp
cmp
out
mov
lock
jmp
in
cmp
repz
xor
lret
cmc
in
repnz
int3
out
aam
xchg
ret
iret
shl
int3
mov
repnz
aaa
cmp
fnclex
ffree
mov
cmc
jecxz
sub
mov
mov
sbb
out
sti
ss
fdiv
repnz
in
loope
jmp
fninit
sub
out
in
iret
xchg
out
aad
xor
div
dec
jmp
lock
repnz
test
mov
enter
loop
in
aaa
cmp
cmp
int3
hlt
add
sub
xlat
fcmovnb
xchg
icebp
jecxz
sti
clc
sar
jmp
lock
lock
jecxz
test
mov
fisttpll
xchg
in
not
ss
cmp
cmc
or
rcl
xchg
aam
sti
mov
jecxz
mov
int
loop
out
fmul
aam
xlat
neg
and
add
mov
in
mov
xchg
ljmp
call
ss
sar
loop
cmp
xchg
jmp
mov
mov
leave
fcmovnu
cmc
mov
xor
lret
in
xor
lock
test
lock
loope
fldz
test
fcmovnb
call
ss
sti
cmp
add
jmp
ds
leave
fstp
ret
lds
ret
jl
add
leave
rcr
cmp
fmulp
int3
test
rcl
sub
out
add
loop
out
xor
loop
lock
cs
shr
fsubp
ljmp
out
imul
in
jmp
cli
iret
out
in
divb
loope
iret
leave
icebp
cmp
fidivrl
xlat
out
test
aad
mov
neg
xchg
out
out
lock
xchg
in
in
stc
int3
hlt
into
fidivl
int
fucomip
fabs
loopne
hlt
addb
iret
xchg
xchg
leave
lock
cmp
repnz
fsub
cmp
or
hlt
ljmp
xchg
jmp
jmp
cmp
fnop
call
cmp
cld
into
repz
aad
mov
ficoml
jecxz
call
cld
out
loop
rcr
shl
addl
fsubr
icebp
or
lea
xor
xor
into
clc
out
fldlg2
in
test
out
sub
out
shr
hlt
call
cld
cmc
ss
aam
out
out
cmp
cmc
rolb
mov
int
test
in
in
ror
lret
cmp
loop
in
out
rol
call
lea
shl
in
call
lret
out
jecxz
rol
jecxz
fld
loope
cli
hlt
mov
xchg
xchg
lret
xor
lret
std
clc
fadd
in
loope
roll
ljmp
fiadds
ljmp
hlt
cld
cmp
xchg
call
ret
in
lret
dec
into
test
xor
clc
icebp
cld
in
icebp
lret
xchg
aad
enter
testb
div
stc
ret
aad
xlat
enter
jecxz
aad
loop
flds
jmp
and
jmp
cmc
out
leave
ljmp
ret
orl
out
in
shr
ret
xor
xor
repz
int
fstpt
in
neg
sti
out
in
fucom
xor
in
sar
aam
jmp
loope
shlb
rcr
sbb
xlat
dec
cld
flds
out
das
into
out
std
cmp
hlt
enter
loope
faddp
fcom
cmp
ret
ret
out
xchg
xchg
repz
lret
xor
repnz
cmp
out
cld
stc
cmp
fcomp
cmc
mov
sub
test
xchg
out
test
out
out
hlt
dec
idivl
jmp
sbb
xchg
ljmp
das
clc
ss
sarb
fcmovnbe
sarl
cli
in
cld
ds
loope
mov
nop
clc
rclb
jmp
shl
ror
leave
cmp
xor
sar
sarb
leave
leave
jmp
xchg
enter
lret
ret
iret
clc
cmp
std
int3
into
jecxz
jecxz
ret
testb
icebp
enter
iret
xor
xor
iret
lret
lret
test
les
cld
in
xchg
test
mov
test
out
out
aaa
rcr
in
cmp
inc
xlat
fxch
out
in
std
ret
hlt
jmp
rcr
test
cmp
cmp
loop
fcmovu
std
jmp
cmp
in
repnz
repz
loope
aam
lock
fdiv
cmp
rcr
ljmp
fists
not
out
into
hlt
call
loope
fcmovne
into
out
call
out
dec
incl
rcl
clc
out
lock
call
aaa
aad
cmc
faddl
int
loope
jmp
jecxz
fcom
leave
cmp
fnstcw
sbb
repz
vpsraw
clc
fdivr
mov
ljmp
cmp
int3
idiv
jmp
shr
in
jmp
mov
in
fdivp
fbstp
xor
int
cmp
iret
out
jmp
iret
hlt
aad
jmp
mov
xchg
aad
aaa
xor
lret
fucomp
inc
xlat
fucomip
iret
cli
in
xlat
cmp
xchg
out
cld
mov
out
into
neg
rcl
out
fcomp
leave
lret
cmp
fcmove
cmp
stc
ret
ret
lret
sti
mov
mov
sbb
mul
fcom
neg
cmp
cmp
fdivr
loop
out
sti
leave
ror
lret
in
fadds
in
lret
xlat
xor
xor
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
data16
xchg
addb
jl
int3
test
cli
enter
mov
lret
call
cld
not
xor
out
int3
rcr
out
rol
sar
sarl
in
aam
call
call
shl
out
shr
into
in
roll
rcr
xlat
incb
cli
int3
in
hlt
out
in
cmc
loop
ror
xlat
int
cmp
shr
lock
mov
loop
sar
xchg
iret
cs
sti
in
std
stc
idivl
cmp
jmp
fdivp
rolb
in
ror
out
xor
fdivr
cmc
into
idivb
aam
aam
incl
jmp
fucomi
in
hlt
xlat
out
clc
cmp
div
xor
fucomip
aad
iret
test
aam
repz
loop
mov
cli
out
in
out
fdivp
ljmp
fsub
fcmovne
fneni(8087
loope
cli
xchg
rcr
loope
sub
cld
int
lret
fxch
cmp
cmp
fildl
cmp
fadds
fldl
les
in
iret
cmp
out
ljmp
cld
fiadds
ljmp
mov
lock
ss
in
out
aad
cmc
int3
out
cmp
aam
in
ljmp
in
xchg
in
cmc
cmp
out
fldz
in
fdivp
cmpl
fsub
rcr
jecxz
sti
ljmp
in
out
imul
out
shl
std
aas
shl
call
incl
cli
lret
shl
loop
cmp
cmp
cli
cmp
fiaddl
fucomp
mov
lock
rcr
cmc
hlt
shr
repnz
sar
aad
clc
stc
addb
fcmovu
orl
out
shll
icebp
call
clc
out
cmp
flds
fcomip
lret
fucomi
ficoml
repnz
cmp
in
cmp
icebp
enter
jecxz
xchg
fxam
repnz
call
lock
lret
aam
loop
rcl
clc
sarb
faddl
fxch
fcompp
loope
out
rcr
cmp
in
out
aaa
xor
aad
testl
fcmove
int
out
repz
clc
iret
lock
xor
shr
ffreep
aas
cmp
in
testb
sub
jmp
repz
xlat
rol
ret
mov
cld
mov
mov
in
loop
out
out
icebp
out
in
ror
cmp
stc
idiv
iret
std
xchg
rcl
in
lret
fstl
out
fbstp
ljmp
int
cmp
repz
aam
clc
test
cld
in
rcl
add
in
fucomi
idiv
inc
jmp
shr
jecxz
xchg
addl
orl
rcr
ss
faddp
stc
rol
testl
out
loopne
xor
fld
shr
lret
ret
loopne
loope
mov
mov
xchg
ret
lock
ss
cmp
hlt
in
fmul
bnd
fsubrp
xchg
out
in
test
out
xor
jmp
enter
repnz
int3
test
ret
jmp
lock
out
xor
lret
sarb
clc
lret
fucomp
lret
sti
in
rorl
lret
fdivr
out
repnz
rcl
ret
cmp
icebp
ljmp
jmp
test
cmc
cmc
ds
jmp
xor
fiadds
rolb
jecxz
lret
sub
fxch
repz
cs
int
repz
cmp
mov
mov
in
enter
aam
cld
repnz
shl
fldl
jmp
call
icebp
les
cmp
aam
repnz
loopne
hlt
cmc
out
call
int3
int3
repnz
call
aaa
fucomp
aas
cmc
aaa
lret
fst
fcmovnbe
rolb
mov
iret
mov
cli
mov
xor
cmp
sub
jmp
ret
test
lret
icebp
out
rcl
repz
aam
icebp
lret
cmp
cmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
cld
jmp
stos
into
lcall
idiv
enter
jmp
jecxz
jecxz
out
xchg
jmp
shll
fidivrl
call
sar
cmp
add
lret
in
lret
test
shl
into
repnz
shr
ljmp
out
stc
lock
fucomp
iret
out
rcl
aas
loop
in
in
rcl
cmp
sbb
aad
fstp
lret
lret
mov
mov
call
cmc
stc
xor
xor
repnz
jmp
testb
call
loope
or
icebp
loopne
sub
xor
cmc
sar
imul
fildl
xchg
mov
jecxz
out
xchg
cmc
cs
lret
cli
cmp
aad
fstp
mov
mov
aam
out
out
xchg
test
jmp
cmp
jmp
iret
ret
jecxz
orl
repnz
call
in
div
int3
fsubr
into
in
aas
ds
cmp
loopne
mov
fiaddl
hlt
lock
std
lret
enter
ds
test
ffreep
sbb
filds
xlat
rcr
repz
idiv
lock
sbb
not
fucomi
enter
mov
out
out
out
ret
iret
cmp
clc
cmp
ret
iret
int3
aam
rcl
rcr
mov
or
in
int3
xchg
in
aam
in
leave
fucomp
out
in
ss
fsin
cmp
cmc
ror
fcmovnbe
lret
aam
fucomp
mov
into
jmp
xlat
aad
xlat
sti
in
jmp
fstp
in
mov
loope
call
in
cmp
shr
rolb
in
aad
neg
and
ret
out
lock
int
aaa
int3
enter
cs
in
out
into
fdivr
lock
aam
jmp
cld
fiadds
iret
xchg
lret
shl
fstp
cmp
jmp
cmp
stc
clc
enter
out
fcmove
fucomp
mov
in
repz
rolb
xlat
aas
cmp
sub
xchg
jmp
xchg
out
ljmp
divb
fneni(8087
rcl
into
adc
adc
fsub
clc
fmul
rcr
aam
loop
repnz
lret
std
cmp
aas
fcmovnb
jmp
xchg
mov
mov
sti
xchg
ljmp
fidivrl
xor
into
testl
lock
xor
hlt
xor
jmp
ljmp
fldl
in
stc
xchg
test
aam
cmp
enter
ljmp
call
enter
lock
in
repnz
out
enter
out
repnz
push
cmp
ret
xchg
aad
leave
icebp
int3
frstpm(287
std
in
xchg
loopne
loop
lret
cmp
fstpt
cmp
inc
fiaddl
loopne
out
out
mov
ror
cmp
lret
int3
in
testl
fmuls
in
stc
int
lock
clc
jmp
in
repnz
std
xchg
cmp
mov
in
sub
in
aaa
shr
ret
enter
jmp
into
cmp
out
div
test
xlat
ljmp
cli
loopne
xor
aam
fcmove
aad
lret
fdivrp
iret
sti
xlat
and
roll
xchg
fcmovne
in
jmp
jecxz
frndint
lock
int
shl
jmp
repz
shr
ffree
fisttpll
hlt
divb
ret
xor
icebp
out
clc
push
out
int
cmp
mov
aas
cmp
mov
mov
call
xor
clc
in
call
lock
shl
ds
addb
test
lret
mov
xor
cmp
lret
std
cmp
not
ljmp
lock
mov
lea
in
out
cld
out
xlat
enter
fdiv
sti
fsubr
ss
in
sti
int3
hlt
rol
or
std
jmp
mov
in
decb
out
das
std
aas
aam
lock
rcr
fst
jmp
and
icebp
xchg
das
lret
repz
out
shl
cmp
xor
in
out
testl
mov
nop
loope
push
into
shl
stc
test
aad
xlat
fcmovnb
sbb
mov
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
cwtl
sub
push
sahf
jl
addb
jl
clc
int
std
fsub
xor
ss
fidivl
int3
ret
fidivs
stc
in
out
cli
clc
mov
ljmp
adc
icebp
stc
iret
repz
ret
clc
lret
call
out
lret
lret
call
clc
fiaddl
faddl
orl
call
lret
cmc
std
repnz
fcomip
fmuls
lret
fmul
fiadds
fucomi
loop
rcr
cmp
roll
fiadds
fcomp
out
jmp
shl
in
rcr
cli
call
in
jmp
in
cmp
xlat
in
mov
in
xchg
ret
into
sub
out
fdivr
int3
repnz
cmp
and
lret
out
sar
xchg
sar
in
sub
icebp
cmp
std
in
repz
cli
repnz
shl
inc
sbb
aad
shl
rolb
lret
fucomi
int
fiadds
lock
aas
ret
xchg
idiv
flds
cld
sarl
out
ret
fdiv
jmp
repnz
out
cmp
loopne
leave
mov
jmp
fsubr
cld
fimuls
int
xor
cmp
repz
add
loopne
repnz
fsubrp
fisttpll
lea
aam
das
in
xor
ss
icebp
ss
sar
mov
jmp
call
out
aad
cmc
xor
enter
fcomip
clc
fstpt
aad
aad
loopne
iret
xchg
orl
leave
in
hlt
rcl
icebp
call
cmp
sbb
xchg
dec
stc
mov
lret
out
clc
enter
cmp
std
int3
test
fsubp
loop
xchg
int
icebp
out
decl
cmp
call
std
lock
cmc
aaa
std
dec
clc
fadd
xlat
cmc
cmp
mov
in
mov
iret
aaa
xor
stc
xlat
fnstenv
cs
jmp
rcl
sarl
sti
xchg
mov
test
xchg
in
sti
ficoml
out
xor
int
loope
cmp
loop
fxam
test
lret
fucomp
add
orb
fptan
fnstsw
enter
jecxz
test
repnz
lret
cld
enter
mov
out
mul
fdivs
jmp
fdiv
in
rol
ffreep
mov
flds
clc
lret
xor
cmc
cli
int
jmp
loope
out
ds
clc
fcom
test
stc
int
jmp
lret
ss
repz
cmp
iret
aam
in
fcomp
repz
in
shl
orb
into
fidivs
leave
out
dec
repz
cmp
loopne
aas
mov
fistpll
sub
into
lret
icebp
cli
int
xlat
ret
jmp
xor
ror
out
xlat
shl
fld
xchg
fmull
fstp
lock
ret
xor
xor
sbb
jecxz
ret
fiaddl
fabs
in
fisttps
in
aam
mov
out
int
shlb
rcl
clc
xchg
in
ffreep
cld
jecxz
fldl
jmp
sub
in
fdivl
shl
call
cld
loope
shl
ror
jecxz
fldlg2
jmp
call
mov
shr
cli
shr
icebp
loope
ret
leave
out
std
xchg
call
loope
in
hlt
in
ljmp
int3
xchg
aas
ret
fsubr
out
clc
enter
ret
enter
fld1
in
lret
cmpl
addl
neg
fst
addl
fistpll
div
cmp
sarl
xchg
rolb
jmp
xchg
out
clc
cmp
xlat
int
cmp
ror
xlat
jecxz
fdivr
mov
out
call
xlat
fmul
repz
aam
fcmovnbe
out
aam
jecxz
out
repz
jmp
out
sar
ljmp
enter
test
icebp
loopne
cli
lret
xchg
enter
fsubr
aas
fadds
ror
fsubr
in
mov
fsubp
int3
out
lock
xor
out
in
cmp
fcmove
aas
lock
fdivp
test
ffree
cmc
std
out
std
loopne
in
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
out
aad
loopne
sti
cmp
into
enter
into
ret
iret
xchg
orl
repnz
sub
iret
sti
cmp
aaa
icebp
std
cmp
call
in
sti
ljmp
dec
icebp
hlt
cmp
repz
fcomp
testb
ds
out
orb
cmc
xor
test
repnz
lock
aas
int3
movl
xchg
nop
rcl
aad
div
cmp
lret
repz
fcmovnu
lock
sub
xchg
in
into
xor
xor
iret
clc
cld
xor
dec
hlt
sbb
xlat
fnstcw
aam
aam
mov
out
mov
aam
shr
cmp
repnz
iret
faddp
in
sar
xlat
in
testl
fsubrp
ret
cld
cmp
repz
xor
shl
sti
repnz
mov
mov
xor
clc
ss
repnz
leave
neg
repnz
xlat
sti
ret
xchg
lret
in
int3
ror
xchg
lock
into
shlb
icebp
out
repnz
cmp
shl
aas
fcomip
ret
out
std
repnz
loop
xchg
xchg
iret
ds
leave
jmp
std
shr
cmp
loope
jecxz
xchg
cmc
std
call
fsub
addl
into
cmp
repz
into
fdivr
dec
ret
clc
hlt
aam
test
mov
fimull
fcmovnb
ljmp
shl
aas
xlat
rolb
sti
std
in
fxch
mov
ret
cmp
call
fidivl
loope
int
xchg
out
out
test
roll
and
repnz
lret
clc
icebp
int3
enter
fcomip
ds
call
xchg
jmp
xor
ljmp
out
in
shl
fsub
rcl
fst
jmp
lret
in
in
loopne
shr
cmc
xlat
int3
xor
leave
div
aad
ret
lock
clc
out
mov
sar
mov
nop
fldl
xor
enter
test
sbb
movl
in
aad
out
in
into
cmp
test
fsubr
aad
sti
clc
mov
nop
in
cs
leave
out
neg
lret
rcl
aad
test
lock
loop
in
lea
ffreep
ret
sub
xor
repz
in
xlat
hlt
loopne
cmp
jmp
mov
cli
into
jmp
mov
div
shl
xlat
cmp
ljmp
loop
rcr
cmp
out
in
jmp
shr
fidivl
cmp
cmp
lret
mul
stc
fisttps
out
in
fucomip
loop
jmp
aam
loop
sti
ljmp
loop
cld
rcr
ffree
mov
jmp
ljmp
shr
das
stc
out
cmp
xlat
int3
clc
shl
addb
mov
jmp
aaa
call
cli
out
aam
fcomp
aam
lock
loopne
jmp
cli
out
fstl
rcl
icebp
cli
icebp
enter
cmp
out
not
out
sti
movb
stc
fcoms
lret
ror
neg
jmp
push
int
hlt
fcmovnb
cli
shl
cmp
mov
aaa
icebp
ss
aad
cld
not
xor
neg
loop
icebp
addb
testb
cld
int3
xor
cmp
cmc
enter
ret
icebp
loope
cld
test
in
icebp
call
out
xor
lret
add
and
aad
mov
ljmp
nop
xor
xor
lret
std
repz
cmp
loopne
jmp
fildl
lret
call
ljmp
or
clc
mov
shl
xchg
mov
jecxz
fldl2e
jmp
stc
cld
ds
fsub
into
cmp
std
cmc
ret
filds
test
loopne
test
lock
stc
cmc
xor
cmp
sar
cld
aam
jecxz
leave
out
std
loope
cmpb
or
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
pop
js
test
jl
in
xchg
xchg
out
in
leave
lret
fldl2e
fistpll
neg
cmp
test
loopne
sbb
mov
in
lret
lret
ljmp
sarb
int
fstp
roll
mov
cli
ror
enter
fdivr
repnz
fdiv
adc
in
fcmovb
clc
jmp
loopne
loopne
ror
in
out
in
out
iret
xlat
repz
lock
and
addl
nop
test
xlat
rol
ror
int
loopne
int3
iret
repz
jmp
or
mov
repz
out
into
imul
std
ds
or
in
loop
loopne
fnclex
jmp
ds
aad
cmp
fucom
not
add
fdivr
rcr
sub
fisttps
into
int
aam
out
call
out
fmul
test
vshufps
into
into
lret
jmp
in
imul
aad
iret
shl
in
cld
stc
clc
cld
lret
rcl
in
repnz
std
ror
lret
repz
cmp
rcr
repz
loopne
fxch
repz
sbb
in
icebp
call
icebp
hlt
out
xor
xor
cmpl
in
hlt
rorb
in
mov
jmp
std
lret
divb
shl
aaa
xlat
iret
cmc
jmp
cmpl
loopne
jmp
and
movl
int
xor
enter
ret
out
xor
fmull
int3
std
rorl
in
jmp
hlt
repz
iret
into
mov
call
out
out
fucomip
out
rol
loop
imul
iret
cli
hlt
cmp
neg
sbb
loop
hlt
testl
aad
jmp
ss
cmp
and
out
repz
int3
and
mov
out
into
lret
std
cli
clc
xlat
cmc
xor
repnz
xchg
aam
std
iret
fiadds
xor
clc
iret
xor
aas
ret
test
cmp
push
fildl
lea
jecxz
repnz
jmp
out
enter
std
cmp
xchg
clc
mov
out
mov
fstl
int
sar
cmp
aam
fadd
mov
and
loope
fcmove
xchg
test
xor
jecxz
iret
enter
cmp
out
sarb
sti
cld
add
xlat
jmp
fucomi
into
repnz
icebp
in
lds
lret
cli
rol
iret
shl
hlt
jecxz
sub
jmp
lock
iret
ss
int3
out
xor
out
stc
clc
cmp
loop
std
xlat
fstp
out
call
lret
in
in
idiv
jmp
in
call
std
test
sub
ljmp
mov
imul
ljmp
lret
repnz
fnstsw
mov
in
sbb
rcll
jecxz
sarb
in
cmp
repz
cmp
mov
int3
nop
rclb
xor
int
lret
cli
cmc
hlt
loopne
cli
fincstp
cli
fmull
call
loopne
repnz
fmul
iret
loopne
cli
cmp
cmp
in
cmp
xchg
xor
rcl
call
div
lock
rol
sti
aad
cld
out
mov
loope
test
loope
ret
fmul
xlat
repnz
cmp
cmp
leave
xchg
xchg
loope
mov
xor
leave
cld
or
in
jmp
std
xabort
into
out
fucomip
shr
cmc
div
fucomi
imul
loopne
xlat
test
repnz
mov
ljmp
ljmp
xlat
sti
out
shl
sbb
repz
ret
ret
jmp
xchg
rcr
shl
enter
fstp
idivl
lret
out
aas
std
fcmovnu
sti
lea
out
enter
div
aad
sarb
in
fdivrl
cmp
cmp
loope
xchg
mov
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
sahf
dec
outsl
and
flds
jl
in
mov
loop
jmp
loopne
out
xlat
shr
sti
dec
out
ret
into
clc
stc
test
jecxz
mov
fimull
xor
xor
xor
in
icebp
cmc
lret
sbb
lret
in
jecxz
ficoml
lret
xor
cmp
ds
testl
jmp
orb
stc
iret
in
stc
lret
int
adc
inc
xchg
xchg
lds
xchg
into
rcl
loop
cmp
lret
clc
sti
cmc
fidivs
test
sbb
les
xchg
ret
ret
call
shr
cmp
icebp
loopne
jecxz
addb
lea
aam
jmp
leave
sar
lret
loop
loop
shl
jmp
in
enter
lret
lret
sub
fcomp
out
into
shr
repz
ret
idivl
sti
orl
lret
jmp
out
xlat
lret
into
in
hlt
xor
out
cmp
inc
xlat
sarl
jmp
addb
adc
xlat
aad
aam
cli
in
int3
cmc
shl
loope
shl
stc
stc
fst
fmuls
out
xor
in
cld
in
cmp
in
iret
fsincos
cli
test
sarl
addl
out
in
push
into
in
test
div
idiv
aas
shl
clc
cld
out
mov
ret
in
xchg
int
in
loopne
ror
fcmovbe
cs
cmp
rcl
fadd
loop
loop
aam
xor
ror
loopne
test
aaa
icebp
repz
int3
std
shl
cmpb
adc
decb
in
repz
repz
fucomp
lret
into
cmp
cld
add
movl
in
in
xor
ss
shr
aas
in
sarb
call
rcl
mov
test
hlt
in
call
in
xlat
neg
shl
in
out
enter
in
lret
ficoms
ret
aad
ss
int3
xor
sbb
in
in
neg
test
fildl
mov
sub
xlat
out
out
repnz
fcmovbe
in
repz
shl
sti
mov
xchg
clc
mov
roll
leave
aad
lret
filds
hlt
cli
hlt
aam
call
in
call
in
hlt
out
aam
into
imul
enter
cmp
xrelease
enter
nop
cmc
aaa
lret
stc
icebp
stc
test
rol
loopne
lret
in
in
loope
jecxz
neg
testb
ljmp
rcr
sar
enter
iret
repz
sar
and
rol
repz
in
lock
repz
fucomp
cli
int3
roll
rcr
roll
std
enter
leave
loopne
in
out
lock
jmp
loop
faddp
lock
in
std
in
fimull
xor
das
neg
aam
clc
lock
test
stc
xlat
ror
out
xor
in
rol
xor
cld
repz
in
stc
cmp
fidivrs
orl
lret
in
ss
out
neg
sti
in
xlat
icebp
repz
xor
out
xchg
in
loope
xchg
xchg
aad
in
jecxz
int
xor
test
repnz
adc
sar
xlat
in
cli
out
fucom
dec
adcb
hlt
jmp
leave
clc
rcr
hlt
shr
mov
xchg
lret
inc
xorl
ss
ror
cmp
div
icebp
out
neg
ret
ret
in
mov
rcl
sti
in
ljmp
in
aam
fcomi
call
les
std
call
fsubrp
xor
clc
repz
cmc
cld
loopne
addl
clc
fcomip
fiadds
icebp
in
mov
jmp
aad
rcl
cmp
fcomp
std
shl
decl
int
fsincos
mov
icebp
enter
jmp
cld
int3
cmp
std
fnstcw
je
jmp
iret
aad
aad
aad
aad
mov
jg
rcll
in
mov
jl
add
shl
ret
clc
stc
jmp
ljmp
shll
fprem
leave
divb
fdiv
xor
sub
lret
jecxz
out
mov
in
shl
xor
sub
aad
add
fsubrp
repz
shr
mov
fdiv
xchg
xchg
hlt
out
xor
xor
loop
int3
iret
fcmove
int
test
mul
mov
cmpl
ljmp
enter
out
fdivp
addl
orl
inc
out
out
out
loopne
sar
out
cmp
aad
hlt
icebp
cmp
sarb
ds
faddp
clc
ljmp
repnz
out
fmul
cmp
icebp
icebp
cmp
cli
lock
sti
fcmovnu
aad
xchg
xchg
stc
stc
mov
int
orl
cmp
cmp
not
ljmp
rcr
ljmp
mov
enter
into
cmp
cmp
neg
sarb
out
fdivrp
out
shl
aad
shr
icebp
out
ret
sti
repnz
hlt
ret
cmc
stc
mov
jmp
std
xchg
leave
test
hlt
lret
shll
fcmovb
int3
xor
xor
into
loope
jmp
fiadds
cmc
lret
leave
ret
out
jmp
cli
repnz
neg
ds
not
int
fiaddl
lret
out
cmc
sti
cli
shlb
fistpll
sbb
fst
mov
jmp
mul
fmuls
in
jmp
jmp
jmp
cld
icebp
fsubrp
rcl
test
mov
add
cli
xchg
mov
loop
ss
fdivl
lock
rcl
loopne
hlt
fdiv
repz
ljmp
out
fsub
jmp
shl
icebp
in
out
call
clc
sar
rol
fsubp
movb
mov
xchg
xchg
adc
aaa
test
ljmp
idiv
test
addb
std
mov
fmul
repz
int3
hlt
cmp
lret
in
out
stc
rol
hlt
in
jmp
stc
xlat
mov
in
loop
out
lret
divl
out
out
xor
shl
sar
cld
out
test
testl
shl
in
add
call
call
lock
cli
jmp
call
in
ret
stc
aad
push
out
shl
clc
loope
in
call
rclb
rol
icebp
in
rcr
enter
fidivrl
roll
fxch
mov
jmp
jecxz
xor
stc
jecxz
ror
lret
iret
int
fadd
into
icebp
out
jmp
repnz
fadd
call
cli
out
mov
int3
hlt
cmp
aad
fsubrp
aam
cmp
ds
cmp
shr
in
mov
jmp
in
cld
icebp
repz
std
ss
in
aas
in
cmp
out
shl
in
in
fdivr
leave
in
into
sub
ss
clc
enter
ror
in
cmp
icebp
stc
std
loope
in
cmp
iret
shl
fmulp
hlt
in
ror
rcl
leave
repz
out
ret
sub
in
fstp
enter
ror
jmp
loop
int3
in
out
fdiv
cmp
int3
rcl
out
jecxz
in
loope
in
xchg
in
std
popl
repnz
xlat
hlt
repz
out
call
clc
in
addb
lret
mov
fsubrp
loope
in
cmc
in
out
divl
ljmp
addl
mov
out
clc
clc
out
xor
hlt
in
dec
test
test
fdiv
xchg
enter
ss
fcmovu
aad
fcmovu
clc
test
shl
addb
out
iret
or
shl
in
shl
lret
rcl
icebp
loope
into
jecxz
icebp
aad
mov
push
and
cld
icebp
xor
in
in
aad
iret
out
and
xchg
mov
out
add
lret
out
icebp
xchg
test
ljmp
lret
ds
sti
test
sti
fsub
xchg
enter
rcl
das
sub
aam
cmp
fcmovu
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
out
icebp
inc
mov
jl
add
repz
out
rolb
ret
iret
int3
ret
nop
rcl
shl
in
in
rcr
icebp
cmp
sar
jmp
in
cmp
leave
xor
mov
sub
xor
icebp
sti
neg
int3
repz
jmp
mov
in
icebp
lock
cmp
clc
repz
idivb
iret
int
fadds
mov
out
enter
xor
in
clc
out
rcl
sar
cmp
fdiv
sti
fnsetpm(287
loop
in
sbb
cmc
out
out
cmp
into
in
fdivrp
adc
in
in
cli
xlat
int3
test
jmp
xor
icebp
xor
stc
dec
in
aad
cmp
fldl
std
or
das
xlat
aam
loop
int3
in
in
call
repnz
out
sti
ljmp
loop
lea
hlt
std
cli
call
repz
fnstsw
xlat
les
lret
or
xchg
out
hlt
fyl2x
in
ljmp
aad
in
ret
addb
sub
aad
xor
ds
lock
movl
xchg
out
out
mov
in
fnstenv
xor
std
xor
xor
icebp
fsubrp
filds
shl
or
mov
jmp
xlat
imul
hlt
shr
lret
aam
fstpt
fimuls
loope
or
loopne
shl
lret
ror
enter
stc
lock
repnz
loopne
mov
fadds
jecxz
in
fdivrp
jmp
hlt
in
rcl
icebp
cld
cmp
fisttpll
ljmp
lret
icebp
enter
cmp
rolb
mov
aad
stc
jmp
lret
ret
int3
sub
sub
repnz
call
repnz
cli
loopne
neg
mov
int
in
xchg
iret
out
iret
ret
out
aad
cmp
icebp
rolb
cmp
stc
std
leave
cli
out
cli
lret
lret
xor
in
xor
shr
ljmp
ds
mov
ret
lret
repz
std
fsubrl
aaa
hlt
xlat
shl
sarl
cmc
sar
lock
rol
jmp
xchg
out
loop
nop
loope
ljmp
leave
iret
movb
test
repz
icebp
in
mov
out
loope
out
aaa
ret
repz
lock
xor
sarb
loop
clc
loopne
jecxz
mov
loopne
ds
xor
xor
fxch
icebp
aaa
call
cmc
cmp
jecxz
std
in
filds
cmc
shll
shr
call
cmp
iret
aad
xchg
std
fdivp
lret
int
loop
sar
lret
out
xor
aad
mul
mov
mov
jecxz
into
jecxz
lret
int
shr
leave
call
or
addl
leave
in
shr
in
sti
cli
iret
ss
sbb
loope
call
xchg
jmp
xor
jmp
int3
std
call
in
in
incb
stc
aam
aam
icebp
fdivr
out
orl
clc
sti
in
clc
enter
sarb
repz
sar
ljmp
test
lds
fdivp
fcmovu
loop
les
repnz
jmp
lret
jmp
adcb
int
int
cmp
hlt
cmp
int
jecxz
fstp
sar
loope
xchg
int3
or
aad
xor
out
cmc
clc
sub
hlt
stc
enter
out
hlt
std
ror
cmc
in
fcom
iret
int3
iret
clc
lock
aad
shl
iret
clc
out
in
cmc
sarl
fucomi
xchg
rcr
test
fstp
in
sbb
in
xor
sarl
int3
cmp
std
cmp
imul
in
in
lret
xchg
ret
xlat
lret
out
std
aad
jecxz
repz
sti
loope
mov
out
jmp
xor
call
inc
add
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
and
and
jl
cmc
out
leave
aas
repnz
fucom
jecxz
fisttpl
xchg
xchg
aam
loope
xlat
in
fsub
cmc
in
fnstsw
out
icebp
aad
mov
in
out
icebp
aam
ret
sub
cmp
ffree
ret
xor
aad
mov
xchg
int3
repz
cmp
std
out
aam
aaa
loopne
fimuls
in
jmp
out
xchg
shl
repz
out
shll
out
aas
cmp
test
loopne
repz
xlat
into
lock
nop
mov
aad
loopne
call
call
ret
rcr
mov
ret
mov
int
out
xor
aad
ror
shr
fucomip
rcr
test
decl
test
xchg
loop
sub
cmc
hlt
leave
cli
sar
fidivs
cmp
stc
loop
mov
jmp
mov
in
jecxz
out
xchg
xor
aaa
cmp
cmp
aam
ror
fistpll
in
sub
mov
out
cli
sub
jecxz
hlt
repnz
int3
enter
or
int3
sti
repnz
cli
push
dec
orb
push
int3
loopne
sti
in
cmp
ss
idiv
into
loope
in
cmc
lock
aad
out
fimuls
in
out
call
std
cmp
aas
lret
lret
fucom
loop
lock
jmp
ret
loopne
in
out
ret
hlt
ds
aas
rcr
loopne
mov
mov
std
cli
stc
lret
sar
nop
jmp
int
leave
cmp
not
sarb
in
test
cli
xchg
lret
ror
icebp
repz
xor
cld
aad
cli
sub
call
sti
xchg
lret
xchg
out
add
in
lret
std
cmp
ror
xor
ljmp
enter
lret
cli
std
jmp
mov
fcomip
repnz
out
ror
in
cld
out
cld
cmp
repz
cld
mul
aam
jmp
lret
hlt
mov
mov
test
orb
fcmovnu
enter
test
fadds
cli
iret
mov
bnd
test
fcmovb
cli
cmc
aas
xlat
xorl
idiv
out
out
hlt
sti
les
mov
loopne
out
cmp
call
inc
fdivrl
fisttpll
neg
out
loopne
xchg
jecxz
xor
xor
cmc
call
test
stc
sub
loope
jmp
out
lock
lret
fucomp
enter
fidivrs
cli
adc
movb
in
fiaddl
cs
in
out
aaa
ds
aam
cmp
std
ds
mov
hlt
fmulp
fldlg2
ret
sti
int
in
fdivr
ret
jecxz
test
leave
xlat
mov
ret
hlt
mov
fildl
ret
xor
fld
cmp
cli
fidivrs
iret
icebp
cmp
fcomp
aam
out
add
jecxz
xor
jecxz
ljmp
test
aad
out
xchg
loope
fcmovu
in
orb
fdiv
xor
into
into
adc
loope
xchg
jmp
in
in
mov
xor
aaa
ss
not
clc
sbb
cmp
ret
in
out
in
in
xchg
repz
rcl
out
fnsave
cld
hlt
leave
int3
out
sbb
test
xlat
dec
enter
test
icebp
mov
mov
rcl
xlat
ljmp
cmp
loope
loop
cld
mov
fsubr
xlat
and
iret
clc
out
in
div
into
stc
enter
repnz
test
rol
enter
sbb
test
loop
test
lock
lock
std
out
cli
aad
ss
into
aad
fstpt
roll
movl
aam
aaa
enter
lret
div
hlt
sti
fcmovnb
cli
jmp
lret
mov
sub
leave
lret
lock
cld
cmp
aam
ret
in
and
sar
in
aam
shl
fstl
in
lret
in
lret
icebp
rol
rol
into
fsubr
xchg
adc
int
mov
xchg
xchg
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
pop
movsb
adc
cld
mov
jl
jecxz
cmp
fcom
cld
std
cmp
fcmovu
std
fcmovnu
test
std
icebp
out
fcmove
repz
jmp
fucomi
icebp
repnz
ds
into
shl
std
loope
loope
faddl
loopne
iret
int
leave
out
leave
xlat
into
cmp
clc
cmp
jmp
call
xchg
rclb
rcr
aas
cmp
aad
into
roll
aam
lea
int
out
int3
cmp
iret
ss
cmp
iret
into
in
mov
loop
or
iret
ljmp
iret
in
shl
ret
in
loopne
std
lret
out
int
ljmp
aaa
out
fucomp
aad
cmpl
clc
repz
xchg
cli
jmp
std
leave
lret
jmp
jmp
aaa
in
xor
rcl
sbb
cmpb
test
xchg
loopne
icebp
in
icebp
mov
cmc
ss
fmul
icebp
sti
loop
loopne
cmp
addb
icebp
xchg
out
mov
divb
xor
rcl
cmc
shr
aad
cmp
shl
clc
mov
call
jecxz
decb
xor
sub
fucomi
xor
ret
fadd
mov
cmc
xchg
loopne
iret
out
ds
repnz
int
shr
in
xlat
iret
shl
cld
ds
rolb
sti
fadds
out
hlt
ror
leave
jmp
aam
shr
cli
aad
icebp
out
stc
test
sti
cld
aam
loope
out
test
shl
imul
lret
fadd
shl
vpmaddwd
fstp
fldl
into
fcmove
repnz
shl
out
shl
out
ror
in
cli
fiaddl
mov
std
nop
leave
in
call
cmp
cmp
ljmp
fcmovnu
fadds
flds
loope
xor
leave
out
in
aad
in
jmp
cmp
lret
iret
cmp
aad
mov
cmp
faddp
loope
xchg
enter
fcom
leave
cmpb
rcr
roll
in
in
xor
xor
aad
in
push
fcomi
clc
std
in
in
imul
aam
cmp
cli
shl
xchg
xor
jmp
hlt
rcl
fstp
cmp
leave
fisttpll
loop
mov
xchg
int
sub
cmp
jmp
xor
shl
jecxz
cmp
out
movb
aaa
sub
out
icebp
sti
ss
idivl
into
ret
ret
sti
cli
mul
ffreep
rcr
leave
xchg
lret
loop
out
in
mul
ljmp
aas
rcr
lock
adc
in
jecxz
fmull
xor
call
aaa
int
sub
xlat
rcl
rcr
mov
fmulp
or
in
and
leave
fyl2xp1
cmp
shl
aad
aas
xlat
ds
cli
iret
mov
ljmp
cmc
pushl
cld
aad
stc
repz
mov
ljmp
nop
cs
xlat
stc
sbb
cld
out
out
repz
jmp
jecxz
ret
repnz
xlat
sti
int3
xlat
clc
cmp
ret
in
repz
ret
out
iret
out
jmp
xlat
stc
ss
shr
iret
fiadds
leave
jmp
fdivrp
mov
jecxz
int
xor
aaa
loop
hlt
fcmovu
sti
test
call
cmp
int
std
jecxz
jmp
ljmp
int
aad
adc
test
in
in
mov
test
loope
popl
out
cld
fprem
clc
int
cld
stc
ret
in
xlat
mov
iret
rorl
out
repnz
clc
in
clc
not
rcl
loopne
test
mov
aam
fstp
lret
mov
cld
in
into
fsub
ljmp
hlt
repnz
ret
xchg
idiv
jecxz
mov
int3
aas
test
out
fidivl
cmp
loope
shll
std
hlt
std
neg
mov
addl
ret
lret
add
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
fcmove
fcomip
shl
iret
cmp
in
in
repnz
in
loopne
icebp
std
fst
mov
aam
ret
xchg
mov
idiv
loop
cmp
jecxz
not
ret
fld
or
out
loope
xchg
in
repnz
int
xor
cmp
cmc
cld
cli
xor
loop
lret
mov
test
out
clc
out
icebp
lret
shr
sub
clc
jmp
fidivrs
stc
cli
neg
repnz
jmp
xchg
in
ljmp
jecxz
xor
adc
cmp
cmp
mov
call
int3
aad
iret
imul
rcl
lock
bnd
sti
test
jmp
test
and
loopne
test
hlt
stc
in
adc
loop
sti
out
cmc
mov
testb
repz
lret
jmp
out
stc
test
xor
cmp
cld
hlt
in
idiv
les
aam
loop
jmp
jecxz
jmp
repnz
jecxz
mul
lock
fsub
in
int
lock
enter
fstp
xor
ret
rcl
xlat
int
xchg
out
mov
in
out
stc
xor
fdivrs
ret
loope
out
fcmovnbe
fmul
xchg
shr
xchg
rcl
loop
fdiv
sti
jmp
icebp
sarb
cmc
in
std
ret
enter
test
mov
out
out
neg
cmp
ffreep
into
ffree
add
test
les
call
ret
out
repz
fsubr
lret
iret
cmp
les
xchg
mov
xchg
ds
int3
in
iret
into
cmc
call
cmp
repz
movl
repnz
aaa
shl
f2xm1
aad
loope
rcl
fidivrl
shr
fnclex
les
roll
xor
int3
out
cmp
fdivr
rcl
in
cmp
lret
leave
cld
shl
test
enter
out
jmp
out
and
std
repnz
incb
in
repnz
xor
out
shl
idiv
hlt
cmp
xlat
xlat
repz
in
xchg
sar
les
out
out
cld
cs
cmp
lret
ljmp
out
sub
loopne
in
cld
test
xor
aad
iret
iret
lret
std
aad
sbb
cld
fadd
test
mov
xchg
loopne
repz
jecxz
sub
repnz
lock
lret
cmp
mov
loop
lret
shl
in
or
sarb
ror
in
lret
aam
in
lock
xor
mov
fildl
loope
not
icebp
xor
ret
aam
fcom
loopne
ljmp
clc
hlt
xlat
clc
dec
fldl
xor
enter
rcr
leave
mul
sti
fcomi
clc
jmp
hlt
aam
cli
cld
sbb
filds
sarl
fstpt
cmp
in
cmp
int3
rcr
ds
aas
fmul
leave
fucomip
fadds
jecxz
int3
loopne
fsubrs
xlat
cmc
ss
jmp
in
shl
std
rcl
idiv
loope
cli
lret
int
roll
out
xor
std
cld
std
cmpb
lock
jmp
hlt
xlat
jmp
out
jecxz
cmp
cmp
sti
int
aam
fidivrs
cmp
sar
mov
stc
sti
lret
mov
loopne
out
xor
aaa
out
jmp
cmp
ds
test
ffreep
test
fcmovbe
std
xchg
xchg
in
hlt
lret
shlb
repnz
ss
cmp
rolb
in
enter
loop
adcl
jmp
cmc
jmp
cmp
std
out
ret
movl
ljmp
shl
repnz
cld
std
fsub
adc
int
or
xchg
xor
enter
cmp
ss
cmp
fdiv
cmp
ret
rolb
mov
out
ljmp
enter
rcr
cli
cli
cmp
inc
add
add
add
add
or
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
inc
jl
flds
jl
orl
xor
loopne
shr
in
jmp
test
shl
mul
repz
out
ljmp
shll
out
aam
repnz
not
int
cmp
enter
sbb
mov
loop,pn
stc
in
aam
not
loopne
ret
aas
out
leave
clc
ljmp
fsubr
call
into
shr
icebp
cmpb
loopne
cmp
xchg
mov
jmp
xor
enter
out
xor
aad
sti
cmpl
out
int
orl
fcomi
cmp
in
out
call
jmp
loopne
xchg
iret
fldln2
out
into
aad
fxch
xor
das
call
filds
test
mov
fisttpll
faddl
lret
test
call
xchg
ds
cmp
int3
or
fdivp
in
hlt
xchg
ljmp
div
sarl
cmc
xchg
in
loop
std
in
lret
mov
in
xor
sti
int
fcmovu
call
roll
flds
mov
mov
test
int3
xor
repnz
std
ss
fucomip
cli
into
cli
loope
out
cld
in
lret
out
mov
lret
shr
cmp
jmp
cmp
int3
sti
add
test
fadds
xchg
hlt
repz
out
repnz
int3
xchg
cli
mov
ljmp
xchg
lret
call
les
cmp
jecxz
rcl
in
fimuls
fsub
shr
nop
int3
mov
in
in
rcr
in
leave
fdivrs
ljmp
out
lret
fdivr
hlt
stc
enter
mov
xor
ror
cmp
into
sar
fnstcw
fcmovnu
jmp
cld
out
shl
int3
or
int3
int3
loopne,pt
test
cmp
sub
cli
mov
xor
enter
repz
cmp
loopne
les
loop
in
jmp
shr
in
out
cmp
loope
out
and
in
cmp
ret
shr
repz
sar
jmp
faddl
xchg
loop
mov
cli
mov
int3
in
xor
lret
jmp
xor
cli
shl
in
sbb
stc
inc
test
icebp
repnz
stc
sti
ss
cmp
hlt
into
cmp
in
repnz
fadd
mov
addl
repnz
in
xor
out
call
and
aad
jmp
decb
cmc
call
lret
lret
in
into
hlt
repz
ret
mov
ljmp
xor
out
xor
lret
into
cmp
fcomi
xchg
out
test
loop
rcl
and
xor
in
loop
enter
call
lock
cmp
fdivp
repnz
fisttpl
test
fcmovbe
aad
out
lret
aaa
loopne
cmp
xor
test
decb
in
loopne
shr
xor
test
cmp
mov
mov
xchg
xchg
test
call
ljmp
lds
ret
idiv
into
sti
nop
cmc
fmull
in
aam
shr
in
int
shl
neg
add
repz
out
mov
int
lock
shl
ret
sarb
rcl
lret
stc
ret
fiadds
mov
loop
repnz
lds
lret
in
cli
neg
fcom
cmp
add
call
call
fists
in
aad
xor
in
loopne
cmp
rolb
lret
loope
fxch
out
addb
ret
fxch
icebp
xor
lret
xlat
lock
ds
mov
jmp
ffree
mov
fidivs
xor
clc
cld
neg
ljmp
mov
jmp
lret
aam
fstp
fisubrl
push
int3
cmc
flds
jl
lds
loopne
enter
cmp
enter
enter
cmp
out
testl
lret
stc
call
sub
in
in
xlat
xor
in
cmp
cmpl
mov
xlat
fadds
out
lds
xor
in
hlt
cmp
int3
addl
xlat
out
loopne
clc
xchg
rcl
mov
ret
in
aaa
jmp
fucomp
lock
in
repz
call
test
xor
cli
cmp
sarl
sar
in
cmp
fcmovnb
sti
test
out
loopne
frndint
fsub
int3
mov
out
icebp
shlb
hlt
out
xlat
ljmp
xlat
cmp
clc
out
jmp
leave
jecxz
in
aaa
stc
out
out
out
xor
std
rolb
rcr
repnz
ljmp
ffreep
sarb
xor
fdiv
repz
cli
iret
out
into
out
leave
testb
loope
int3
xchg
ds
xlat
jecxz
das
lret
aad
rcr
xorl
inc
shl
xlat
orb
aad
lock
stc
cs
bnd
repnz
test
enter
fcom
into
call
repz
icebp
stc
repnz
adc
test
out
iret
xchg
rol
jmp
enter
xor
call
out
fcomp
ljmp
mov
in
shlb
not
xor
jmp
std
std
loope
fidivrs
out
in
loop
rorl
jmp
mul
rcl
in
lock
cmp
sti
idivb
xor
out
ret
out
xlat
vpsubsw
cli
lret
xchg
cli
out
hlt
sub
repz
jmp
ds
stc
loope
ret
jecxz
in
call
rcr
loop
out
ror
aaa
clc
idiv
aas
loop
jecxz
loope
xlat
clc
jmp
cld
nop
and
ss
out
fdivrs
aas
icebp
rcl
icebp
testb
int
fisttpll
orb
ljmp
into
loope
out
xchg
fmuls
fildl
lret
ret
icebp
int
fdivs
hlt
cmp
aas
fadd
rcr
test
fldl
icebp
out
int
aam
test
cmp
lret
repz
iret
stc
call
out
loop
std
jecxz
test
loop
loop
ljmp
lret
fcomip
add
loop
or
loope
xchg
mov
xor
iret
cmp
lret
out
ror
ljmp
loopne
out
out
xchg
loop
hlt
jmp
ret
xor
call
sbb
out
into
aad
sti
fiadds
or
xor
clc
rcr
hlt
cmp
loope
clc
into
inc
lds
sub
in
mov
and
cmc
shr
hlt
in
fstp
cld
iret
in
out
fmuls
cld
mov
stc
in
xlat
aaa
cmp
cmp
lock
sar
clc
lock
stc
mov
ljmp
ds
cmp
in
aam
sar
in
shl
shl
cmp
dec
faddl
xor
icebp
cmp
leave
jmp
cld
stc
shl
repnz
ljmp
fucom
enter
shl
ljmp
stc
aad
int
ret
out
fcom
dec
mov
mov
aad
iret
jmp
sti
aas
roll
aam
std
std
loope
xchg
repz
mov
into
lret
fnop
ss
cmp
cmc
out
loopne
ret
fadd
ret
cld
lret
aad
out
ss
shll
cmp
not
cmp
addb
adc
xchg
xchg
loop
repz
jecxz
hlt
in
repz
fucom
repnz
fndisi(8087
xchg
fxch
mov
test
xchg
aad
cmc
rcl
icebp
rcr
fdivp
lret
repz
aad
fcmovnb
testl
out
jmp
out
shr
xor
aas
aam
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
dec
inc
pop
push
add
rolb
mov
lret
int
in
in
in
test
sti
cmc
lock
fdivr
aad
cmp
test
hlt
xor
jecxz
jmp
loopne
shl
lret
fmul
frndint
aam
loop
aad
mul
test
enter
mov
ret
xchg
mov
jmp
hlt
sarb
shr
fsub
clc
cmp
aad
cld
fcmovu
cli
lret
movb
loop
int3
cmc
lret
hlt
jmp
lock
lock
out
mov
in
icebp
out
shr
loopne
ret
clc
leave
jmp
int
cmp
cmc
sbb
fnsetpm(287
std
cmp
mov
ljmp
icebp
shl
cmc
jmp
int3
call
into
ret
cld
cmc
cld
stc
in
movl
mov
clc
cmp
ljmp
hlt
ret
int
fstp
fdivrp
out
loope
rcl
xor
cs
ror
iret
not
clc
xor
jecxz
push
fcomi
leave
ret
cld
orl
cs
shrb
clc
aas
cmp
repnz
cmp
out
idiv
repz
mov
lret
test
in
nop
jmp
shrl
fucomi
clc
neg
sti
faddl
jmp
stc
lret
sub
fisttpll
in
aaa
divb
fcmovne
cmpl
mov
shl
leave
call
out
incb
loop
std
stc
fdivr
fsin
in
xor
int3
fistpll
sti
fdivr
fcomip
call
out
xchg
xchg
hlt
xor
rcl
out
out
std
xor
test
mov
test
shl
out
faddp
ljmp
cmp
cmp
cli
repnz
int3
xlat
lret
in
int
sub
int
xor
ljmp
int
test
fsubrp
ret
out
std
lret
call
icebp
iret
ror
ljmp
shl
loopne
mov
cmp
call
xor
cmp
ss
fcmovnbe
cmp
jmp
mov
or
ret
lock
mov
mov
loopne
aam
in
int
clc
fcmovb
rol
aam
repnz
test
mov
rcr
mov
shr
in
in
in
aad
les
int
out
cmp
stc
cmp
mov
call
cmp
call
into
lret
out
icebp
std
xor
hlt
fld
rcr
sti
loope
leave
mov
sti
addl
cmc
jmp
int3
add
cmp
sbb
into
xchg
int
lock
shl
test
std
clc
int3
int
cmp
in
xchg
test
loope
jmp
mov
vcmpps
lret
cli
lret
into
icebp
fdivrl
ss
faddp
sti
shl
cli
jmp
lock
divb
neg
clc
stc
icebp
cmc
loopne
icebp
int3
not
xchg
mov
mov
xchg
fadds
ds
in
hlt
fmul
cmp
xor
into
xchg
aam
loop
leave
test
mov
in
test
lret
divl
lret
call
fidivrl
icebp
into
orb
lds
fiadds
out
ljmp
out
out
cmp
shl
lret
in
call
xchg
ror
xlat
lret
jmp
imul
xor
stc
out
cld
lret
add
int3
repnz
in
int3
xor
jmp
in
in
fdivr
leave
iret
call
out
int3
into
test
fidivrl
les
in
addb
out
int3
ret
cmp
cmp
xor
fcmovu
mov
out
jmp
jmp
mov
enter
lock
cmp
loopne
and
out
repz
orl
das
loopne
ret
repnz
out
sar
ds
std
shl
out
mov
fcmovnb
shl
call
ror
fucomi
out
imul
call
sti
les
fdiv
mov
int
cmp
aaa
xor
cmc
ret
jecxz
std
filds
std
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
inc
mov
adc
push
jl
lret
jl
loope
out
fcomip
xor
shlb
call
sar
cld
fcomp
std
call
hlt
in
mov
jecxz
cmc
in
call
out
push
iret
iret
repz
out
loop
lock
mul
jmp
out
xchg
ficoml
cmp
jmp
idiv
lret
iret
fiadds
adc
fisttpl
ljmp
cmp
ror
enter
loop
cld
idiv
sti
cld
call
in
enter
xor
lds
xor
std
repnz
cli
hlt
loopne
shl
icebp
icebp
sub
cmc
in
cli
out
sti
mov
roll
out
aad
sar
cli
ror
lock
xlat
cld
aad
loopne
int3
movl
test
xor
hlt
cmp
cmp
rcl
adc
std
std
int
mov
sub
aam
xor
clc
xlat
ds
clc
rcl
xor
xchg
loopne
in
iret
xor
ret
xlat
aad
into
cli
cmp
ret
in
fucom
fcomp
testb
call
icebp
cmp
cmp
fucomi
cmp
cmp
hlt
ds
jmp
out
div
lret
mov
mov
hlt
ljmp
aam
int3
loope
int
aam
fst
clc
les
ljmp
jmp
ror
test
out
test
fdivr
xchg
in
fimull
into
repz
in
out
lret
faddl
ljmp
in
xchg
std
fsubrl
int
rcl
ror
sti
testl
mov
sub
enter
out
fmulp
jecxz
xlat
rcl
clc
xchg
jecxz
fdivr
fiaddl
xor
jecxz
lret
xlat
rcl
in
int3
rcr
aas
mul
out
rcl
orb
sti
lock
push
jecxz
ret
cli
bnd
cli
ljmp
test
fadds
test
sub
lret
cmp
fdiv
cmc
rcl
sbb
loopne
sti
mov
cld
mov
mov
jmp
cmp
cld
sbb
fdivr
rcr
cmp
in
xchg
or
in
into
aaa
xor
divb
enter
incb
ljmp
in
mov
lret
enter
fdiv
cmp
adc
xlat
ljmp
fdivr
in
in
xchg
aaa
ljmp
aas
fnstsw
out
aad
test
movl
xchg
lea
xor
xlat
ljmp
clc
xchg
fisttpll
lret
in
out
xchg
out
loopne
sarl
hlt
out
ror
int3
xor
ffreep
add
fmulp
fiadds
cld
cld
leave
out
repz
in
aaa
int
repz
cmp
sbb
loop
test
mov
lret
mov
call
enter
cmp
call
addb
or
ret
std
jecxz
call
cmc
lret
cli
jmp
xlat
fmul
lret
clc
neg
shl
fucomp
in
les
cld
shlb
int
fcom
fcmovne
iret
iret
cmp
cmp
cmp
fldl
mov
xchg
sub
xlat
repnz
jmp
in
out
lock
loopne
cmp
clc
mov
into
mov
loop
out
mov
not
in
shl
aad
in
cli
cli
int3
fucom
jmp
hlt
jecxz
cld
mov
out
cs
in
lock
ret
in
int
aad
fimuls
call
and
sti
icebp
hlt
cld
out
xlat
aas
clc
jecxz
sbb
enter
out
in
lret
mov
ss
cmc
xor
hlt
cmc
fcomp
cmp
fmul
mov
fdivr
out
xchg
in
lock
sub
shll
cmp
icebp
in
fdivr
cld
std
std
fdiv
cli
xchg
sti
fcmovnu
int3
leave
flds
div
xor
fcmovnu
std
out
movl
mov
mov
push
xor
mov
add
jmp
jmp
aad
shlb
lret
xchg
lret
jl
cli
sub
fiadds
test
leave
out
test
rol
in
shl
xor
ds
cmp
repz
hlt
out
sub
jecxz
mov
ret
xlat
into
aaa
in
into
into
cmc
repz
in
fsubr
cli
clc
hlt
sti
sti
test
jmp
out
int3
lret
fxch
sar
ss
aam
addb
lret
xlat
adc
xchg
das
shl
rcl
out
in
lret
xor
cmp
hlt
fmul
enter
icebp
iret
repz
int3
enter
cmp
leave
cmp
ljmp
faddl
call
test
in
rol
aam
fnstsw
fcmovnu
cmp
hlt
lock
cld
fldpi
in
nop
std
lret
enter
xor
fdivrs
int
ret
lock
out
movl
ret
out
cmp
aad
loope
and
fcmovnb
fninit
in
call
lret
int
sbb
call
aad
in
call
aad
fdivrl
xchg
fnsetpm(287
sti
jecxz
mov
fucomp
xchg
hlt
out
xor
ret
out
repz
aam
cld
fcomi
rcl
cmp
xchg
loop
ljmp
roll
icebp
repnz
in
repnz
in
sti
out
std
test
repnz
cli
loopne
loop
rolb
int3
aam
ss
sti
iret
xor
lds
call
jecxz
mov
fmulp
bnd
int
fadds
aas
fcmovnbe
icebp
leave
test
xchg
in
test
fsubp
into
xlat
neg
out
idivb
enter
jmp
clc
rol
clc
not
sub
cld
in
out
loope
icebp
xor
jecxz
int3
cmc
xor
call
test
adc
jmp
int
nop
call
ret
icebp
lock
in
iret
aam
idivl
ljmp
ret
fucomi
fsub
test
in
sub
lret
shl
ss
loopne
out
ss
fnstcw
addb
mov
ret
fld
ror
leave
rcl
dec
ljmp
jecxz
rol
sti
leave
in
rol
mov
jmp
xor
cmp
in
cld
icebp
cmp
loop
cli
ret
aad
sub
shr
ffreep
aad
rol
in
fdivs
fnstenv
fucomp
cmp
sub
xchg
fsub
aam
std
in
int3
mov
in
std
leave
out
repnz
cmc
inc
imul
out
enter
loopne
int3
mov
mov
loop
xlat
ss
xor
int
mov
int3
enter
icebp
mov
ljmp
fsubrp
cmp
fiaddl
lret
mov
cld
cli
lock
shr
repnz
clc
lret
fprem
cmp
jecxz
test
cmp
fldl
int3
shll
jmp
sub
out
ror
cmp
cmp
fcmove
fadds
mov
in
loop
xor
bnd
cmp
ret
roll
in
enter
loopne
xor
ror
fnstenv
cmp
int
shl
mov
cld
repnz
mov
out
orb
lock
cli
enter
ljmp
aas
cmc
shr
lret
loope
lock
shl
fcmovnbe
mov
clc
cmp
xlat
cmp
hlt
repnz
mov
fsub
jmp
jmp
fxch
jmp
leave
not
in
ss
loope
hlt
shl
in
ljmp
out
loopne
lret
loopne
hlt
cmc
cmp
loope
loopne
fiadds
jmp
fsub
jmp
fucomip
lret
shrl
shl
movb
roll
dec
cld
out
mov
xlat
out
xor
sarl
dec
out
loopne
ljmp
ror
loope
mov
jmp
test
out
rcr
xlat
rcl
fdivr
aas
ds
xor
rcl
fcomip
cli
stc
cmp
testb
test
data16
add
rcl
aad
fcmovne
scas
push
mov
scas
addb
lret
jl
fdivp
fimull
rcl
into
ljmp
sarl
fdivr
out
xor
out
out
in
xchg
xchg
jecxz
repz
out
iret
shr
repnz
cmp
std
aad
fsubp
in
fsubp
stc
ljmp
iret
xor
out
aam
cmp
sti
aam
push
test
sti
fildl
in
xchg
loope
repnz
ljmp
cmp
aas
in
mov
mov
shl
cli
xchg
ret
ret
rcl
jmp
xor
cmp
aas
xlat
int3
rol
cld
mov
fcmovne
mov
enter
ss
cli
loope
cmc
stc
cmp
ret
loop
int3
xchg
into
into
out
int3
xor
iret
out
ret
cmp
xlat
fsubr
shll
out
xchg
jecxz
mov
ljmp
out
shr
sti
cmp
in
icebp
hlt
cmp
icebp
sar
testl
in
adcl
cmp
fsqrt
xlat
rcr
ffree
hlt
fsubr
mov
ds
dec
in
fsub
hlt
loop
jmp
ss
jmp
in
add
cld
std
loopne
leave
mov
iret
jecxz
loop
aam
out
into
shl
ret
cmp
fdivr
lock
rcr
sti
les
lret
in
bnd
jmp
loop
jmp
loop
fsubr
div
call
mul
rorl
aad
fdivs
idiv
sar
rcr
hlt
repz
loop
sti
mov
faddl
out
int3
rcr
in
xor
lock
fcom
loope
xchg
test
sbb
shl
icebp
xor
lret
lret
repz
out
addl
in
faddl
loope
xlat
repnz
sar
into
fcmovnb
out
cmc
lock
out
loopne
enter
xchg
mov
jmp
rcl
aam
cmp
out
aam
imul
cli
xchg
mov
sbb
aad
rorb
leave
lret
xor
lret
std
cmp
out
out
lret
cmp
hlt
mov
loopne
cli
jmp
test
xchg
in
test
fcmovb
loope
cmc
idiv
repz
aas
repz
ror
lret
test
ror
cmc
cs
out
fnstsw
hlt
cld
fsub
icebp
out
sti
call
roll
int3
lret
ror
xor
dec
ds
int3
hlt
cmp
call
ret
jecxz
repz
test
xlat
lock
lret
enter
int
in
rcr
xchg
std
ret
fiaddl
ffreep
xor
lret
leave
int
sar
rcr
fcmovnu
add
mov
cli
iret
int3
mul
shl
cli
lret
rcr
cmp
loop
fstpt
xor
repz
in
enter
repz
fcmovnbe
clc
loop
jecxz
rorb
sti
enter
fimuls
xlat
idiv
std
shl
cli
cmc
aaa
hlt
idiv
fidivrl
in
repz
cld
out
cli
xchg
shl
xor
lret
shl
out
ss
fmul
cmp
out
add
xlat
sub
mov
shl
cmp
cmp
fidivrl
jecxz
in
ret
les
fucom
cmp
and
loopne
cmp
int
cmp
les
jmp
out
add
enter
lret
repnz
int
lret
aaa
stc
fcmove
dec
cmp
incl
lds
xchg
mov
neg
lret
stc
rcl
cmp
repz
loopne
fcmovnbe
mov
fildl
loopne
mov
call
into
cli
into
ds
in
fdivrp
test
test
sti
fmul
in
xchg
in
fisttpl
sarb
in
hlt
cmp
into
loopne
int3
ret
fnstsw
f2xm1
orb
mov
xchg
repz
ret
out
std
shr
aad
in
xor
loop
jmp
and
fcomip
xchg
icebp
loope
shl
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
and
jl
lret
jl
stc
cmp
cmp
cmp
in
repnz
in
mov
orb
lret
idiv
sarl
leave
ss
lock
repnz
repnz
sbb
lret
jecxz
int
jmp
aam
in
out
iret
sti
std
xlat
aam
flds
rol
in
in
and
test
xor
aad
ss
ret
and
xor
xchg
in
lock
repz
xor
xlat
in
loop
xor
cmp
out
shl
xchg
bnd
ret
xchg
lock
xor
fcomi
loop
cli
call
aas
repz
aam
xchg
jmp
loop
fsub
loop
cli
cld
in
shrb
hlt
iret
shr
xor
fcmovbe
iret
xor
stc
test
idiv
fxch
out
mov
into
jmp
jmp
xlat
lock
clc
fadds
test
in
in
int
aam
int3
aaa
clc
cmc
sti
out
fsubrp
rol
xlat
aam
xlat
aad
mov
in
clc
jmp
fsubrp
lret
loop
sar
std
cld
std
lret
fdivr
aam
cmp
loop
loope
in
in
mov
out
out
test
fbstp
ss
in
cld
shl
shl
hlt
fcmovne
clc
clc
mov
mov
leave
loop
xlat
icebp
test
stc
sti
fyl2xp1
into
inc
xlat
cmp
test
fmull
xor
ror
in
aad
pushl
int
xlat
cmp
ret
shl
aam
adc
in
call
xor
fcomi
jmp
cmp
cmp
loope
aad
fdivr
in
lret
jecxz
fsubr
xor
loop
test
lret
and
loopne
ret
test
int
test
out
call
imul
shl
cmc
lret
cld
jmp
out
fdivrs
sar
addl
into
rcl
loop
jmp
fdiv
jmp
sti
in
aam
loop
loope
lret
fisttps
in
icebp
hlt
repnz
fadd
cmp
lock
repnz
clc
in
loope
jecxz
std
mov
shl
aad
xor
fcmovb
aaa
cmp
ret
cli
ljmp
in
out
int
repnz
in
cmp
loopne
loope
fsubp
mov
xchg
sti
iret
popl
ror
in
fcmovnbe
mul
or
sti
sub
aam
fsubr
xchg
out
out
rcr
out
int3
stc
out
out
jmp
int
adc
fcomip
xchg
mov
std
jmp
out
cs
hlt
call
sti
sbb
in
out
rcr
in
ret
jmp
out
jecxz
in
jmp
xor
sub
repz
aad
lret
call
or
mov
vpaddb
lret
xchg
repz
jmp
jecxz
in
enter
sti
std
out
cmp
loope
ret
xlat
lret
sti
out
loope
call
xor
int
int
into
aas
rcr
sarb
filds
std
int
fmulp
fmul
aam
xlat
fsubr
cmp
xlat
rcr
loop
in
sar
call
jmp
jecxz
ret
rorb
int3
repnz
xor
cmp
out
cmp
mov
out
mov
call
fnstenv
ljmp
lds
xchg
aam
int3
in
add
shl
in
xor
enter
xlat
cmp
aam
out
fdiv
shr
cli
in
jmp
loop
sub
icebp
xorb
imul
sar
repnz
sar
in
mov
in
rorb
rcl
loop
aas
clc
lret
fnclex
xlat
xlat
out
cli
shr
fildl
cli
jecxz
ljmp
shl
lret
int
cli
cmp
roll
mov
std
cli
enter
lret
xor
cmp
cli
fstpt
div
cmp
aam
in
call
faddl
in
repnz
out
int3
loopne
andl
xchg
add
add
jmp
ret
int
lret
sub
das
mov
lret
jl
inc
neg
fxch
call
in
test
int
enter
cmp
in
sarb
aas
xlat
sar
rol
repnz
ret
in
fmull
rol
lret
aad
jmp
lret
sar
sarl
int3
shl
repnz
incb
xor
stc
std
xlat
ss
cli
fdivrp
into
rcr
orb
clc
sar
int
fcomip
xlat
hlt
fucomi
idiv
fsub
fsubp
clc
addl
flds
shl
fnstenv
int3
lock
xlat
fnstsw
and
in
and
lock
ret
sub
xor
aaa
cmp
aas
jmp
cmp
fcmovnu
hlt
cld
cli
in
std
rorl
xlat
rol
jmp
cmc
cmp
repz
sarl
cmc
in
xchg
fmulp
sbb
xlat
hlt
hlt
aad
rcr
cmc
cmp
out
fnstsw
loop
loop
jecxz
lock
sti
fadd
fmul
addl
xlat
hlt
xor
in
lret
call
repz
fcomi
test
test
mov
stc
loop
lret
fsub
cmp
shl
out
rcr
out
mov
in
leave
nop
in
iret
int
aam
ss
iret
std
out
loope
fcmovu
fdivl
adc
stc
jmp
ret
fisttpl
lret
leave
out
repnz
lock
shr
int
ret
jmp
cld
lret
dec
roll
in
cmp
ljmp
cmp
fiadds
lock
cmc
std
mov
sub
in
xlat
aaa
ror
fstp
ss
ljmp
repnz
fucom
test
shr
into
aaa
rcl
icebp
in
jmp
sti
hlt
int3
into
ret
clc
rcr
loope
lret
ffree
ljmp
xor
int3
neg
leave
int3
ror
in
cmp
fsub
jmp
aam
cmp
fsubrp
repz
out
xor
ljmp
aas
fcomi
stc
in
std
out
jmp
aad
loopne
cmp
sub
out
ss
jmp
aam
std
sbb
lret
jmp
incl
jmp
cmp
stc
in
cmp
out
adc
incl
mov
lret
ljmp
clc
ror
shr
out
ljmp
sarx
stc
aam
enter
lock
into
ror
clc
neg
mul
cmc
call
stc
div
rcr
in
mov
incl
xchg
jecxz
in
ljmp
xlat
repnz
std
sti
xlat
fcomp
xchg
fsubrp
out
call
xchg
into
fdivp
xor
cmp
fucomp
div
std
loopne
sub
mov
popl
nop
jecxz
jmp
jmp
int
rcr
cli
loop
icebp
cmp
loope
mov
xchg
xchg
sub
jmp
hlt
cmc
cmp
call
sarb
int
test
call
stc
loope
nop
out
shl
in
aaa
std
shl
fdivr
cmp
ret
sub
rol
cmc
rcl
fcomp
sti
test
sub
jecxz
call
aas
cmp
repnz
sarb
in
ffreep
loopne
mov
xchg
mov
loope
ss
ss
aad
loopne
cmp
call
sarb
cld
addl
out
xor
ljmp
fmulp
jecxz
test
loopne
shr
mov
mov
jecxz
xchg
out
lret
shrl
repnz
fucomi
cmp
loopne
fst
iret
fldl
test
movb
into
lds
clc
sti
shr
idivl
ss
in
mov
in
fimuls
out
xchg
int3
loope
sub
repz
shl
ss
cmp
addl
lret
test
mov
out
aaa
out
shr
bnd
cmp
cmp
ret
jmp
xchg
in
out
in
xlat
icebp
out
fucomp
in
shr
iret
xchg
fsub
dec
stc
faddl
mov
mov
mov
jmp
ds
int
int
int
mov
xor
jmp
jl
lret
jl
in
cmp
repnz
hlt
int
jmp
loop
rol
les
jmp
xchg
int3
out
int
xor
cmp
jmp
cmp
shl
jecxz
shr
loop
ds
sub
test
loop
in
out
iret
cmp
cld
or
ret
stc
incb
enter
ror
aad
jmp
call
out
fdivr
incb
into
lret
dec
lret
lock
hlt
ljmp
rcl
repz
fsubr
xchg
std
in
in
jmp
xor
out
ss
lret
fxch
ret
testl
fisttpll
xchg
jecxz
xor
clc
lret
xor
clc
fdiv
fdivr
ret
mov
lret
out
iret
nop
out
loopne
sub
xor
lret
roll
out
test
loope
clc
sti
in
fsubr
cmc
in
in
repz
xlat
lock
xlat
testl
enter
shl
mov
out
shr
call
aas
sti
iret
jecxz
cld
not
in
and
stc
out
std
adc
in
vpaddb
rcl
shlb
test
loop
leave
orl
shlb
cmp
xor
fdivl
loope
inc
in
loope
cld
std
xchg
fld
icebp
out
xchg
xchg
in
out
loopne
xor
ror
xor
loopne
cmp
ret
std
loop
lret
imul
shl
xchg
nop
xchg
xor
clc
fcomi
cmp
xor
cld
lock
jmp
out
clc
mov
mov
in
clc
stc
xlat
jmp
rcl
sar
stc
test
fsub
mov
test
xchg
sarl
icebp
out
icebp
xor
fnstsw
in
sti
test
mov
test
jmp
ret
in
icebp
ffree
cmp
in
fdivr
aas
cmc
test
fdiv
fcom
mov
iret
jmp
cmc
sub
jmp
aam
ljmp
ljmp
ror
mov
mov
loop
lret
shr
into
cmp
aaa
aam
sti
shl
int
ret
hlt
enter
fcomp
test
rcl
icebp
jmp
shr
cmp
repnz
xor
xchg
mov
sar
rcr
jecxz
aaa
loope
xor
aad
xor
lock
loopne
icebp
sbb
loop
cli
call
orb
std
fcmovne
in
call
test
out
addb
test
out
loop
jmp
cmp
jecxz
cmp
cld
rcl
std
fst
out
in
or
lock
iret
shl
xor
fnsave
cmpl
loop
addb
in
stc
jecxz
test
shr
fstpt
fsqrt
fnclex
repnz
mov
fucomip
repz
mov
hlt
icebp
out
lret
aas
rcl
loop
cmp
cld
cli
enter
stc
rcr
ljmp
icebp
aad
aaa
lret
stc
loopne,pt
test
fstp
fcomip
test
jmp
mov
ss
cmp
iret
aaa
hlt
fcomi
fsubrp
call
shl
stc
cmc
mov
clc
call
mov
loope,pt
xor
ror
shr
cmp
jmp
out
sbb
stc
lret
clc
ljmp
xor
neg
jmp
in
clc
cmp
loopne
std
ret
mov
jmp
test
mov
mov
rcl
repnz
ss
cmp
cmc
test
sarb
out
hlt
call
addb
fcmovnbe
in
in
ss
adc
ds
cmc
cld
sbb
inc
jmp
fdivr
loop
lock
enter
int
ljmp
in
ret
ret
sti
std
fcomip
idiv
fcmovbe
call
sub
call
int3
enter
cmpl
repz
jmp
sbb
cld
cmp
mov
aad
xlat
clc
int
out
aam
call
add
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
sub
outsl
jl
lret
jl
test
repz
lret
out
jmp
loope
xor
fprem
in
aam
cli
icebp
iret
adc
cli
roll
loopne
mov
loope
lret
jecxz
leave
cmp
xlat
ret
iret
incb
loope
leave
fadds
mov
rcl
in
xor
fnstsw
cmp
int
shl
xchg
xlat
jmp
lret
iret
test
xchg
cs
ljmp
into
cld
sti
lret
flds
clc
testb
shr
into
lock
das
imul
aad
fucomip
xor
into
stc
cld
std
addb
in
cld
lret
ljmp
rcr
fucomip
cmp
cmp
fdivr
leave
fcomp
icebp
mov
icebp
cmc
aaa
xor
shr
rcr
xor
not
push
into
fyl2x
in
faddl
in
leave
out
out
loop
ljmp
rcr
fcmovu
iret
addl
hlt
clc
cli
int3
mov
mov
repnz
jecxz
lock
aad
fdivp
imul
fdiv
sti
sbb
xlat
call
in
dec
xchg
rcll
enter
int3
icebp
cmpl
aas
test
ret
in
out
std
out
loope
sar
imul
ljmp
int
enter
lock
lock
in
in
loop
jecxz
icebp
jecxz
ss
call
push
lock
jecxz
test
sbb
faddl
loop
fucomip
aad
out
ror
iret
fucomi
cmp
xlat
aas
in
aas
ret
cli
cli
in
mov
test
xchg
ficoms
repnz
jmp
int3
faddp
out
into
fucompp
fadds
jmp
loop
lock
loope
xor
jecxz
lock
fsubr
leave
cmp
cmc
out
int3
loope
call
mov
fldln2
xchg
ljmp
hlt
out
in
in
loope
out
loopne
sbb
rcl
mov
fiaddl
xchg
xchg
xor
enter
cld
fbstp
into
into
cmc
cmp
fucomi
xchg
lds
lds
rol
idivl
out
ror
cmc
aad
idiv
out
loopne
loop
jmp
fmulp
std
xchg
cmc
int
loope
aam
clc
aaa
xlat
aad
aam
jecxz
clc
ret
cli
fcmovbe
shl
fimuls
xchg
cmc
aaa
out
lret
cmp
in
jmp
ret
loope
fdivr
not
jmp
fsub
cli
jecxz
lret
cld
aad
in
xlat
aaa
test
enter
cmp
in
loope
fucom
shl
lret
cmp
mov
aam
out
cmp
cmp
lret
clc
sarb
clc
fcom
loope
std
leave
enter
cld
out
iret
xchg
movl
cmp
testl
vpminsw
xchg
fadds
xlat
jmp
cli
xor
aaa
ss
cmp
stc
test
mov
enter
loope
xchg
iret
aad
clc
enter
xlat
call
add
fcos
imul
cmp
iret
out
repz
call
iret
out
ljmp
test
test
fimuls
call
xchg
sbb
jmp
sti
lret
repnz
enter
out
clc
rcr
in
faddp
ffree
in
mov
xchg
rcll
fcomp
xor
call
cmp
hlt
repnz
ljmp
fmul
loop
lock
in
jmp
ljmp
cmp
into
icebp
test
loop
cmc
lret
ljmp
into
repz
in
ror
loopne
ret
iret
fcomi
cmp
xchg
fimull
xor
icebp
sti
sti
ss
in
sti
into
cmc
xlat
fmulp
into
push
xlat
test
test
lock
into
xor
icebp
leave
lret
lret
loopne
ret
cli
cmc
repz
test
and
sub
lret
cli
icebp
clc
repz
in
rolb
orb
faddp
shl
jmp
fucomp
aas
into
clc
adc
aas
cmp
test
test
mov
mov
jmp
aad
enter
fsts
outsl
inc
fdivs
jl
add
shl
jmp
aaa
xlat
clc
sarl
clc
in
iret
stc
iret
cli
out
cmc
in
out
fsub
orl
repz
xor
rcr
repz
xchg
clc
div
jmp
jmp
icebp
icebp
xor
out
rcl
lret
ffree
leave
int
aaa
fdivrp
xchg
fstp
out
loope
jmp
xchg
enter
ds
fcmovnbe
lock
aas
repnz
icebp
cmp
jmp
in
xchg
ret
xor
aaa
int3
icebp
rcl
std
std
jecxz
cld
cmp
test
orl
xor
aaa
int
cmc
ffree
xor
in
aad
add
loope
test
jmp
ljmp
lret
fcomi
cmc
ljmp
rorb
int
in
lret
nop
jmp
cmp
fmul
into
out
fucomi
ret
cmp
into
roll
ljmp
dec
test
jmp
cmp
test
fiadds
jmp
jmp
xchg
ror
lret
lret
cmp
stc
cmp
jecxz
rolb
fdivrp
std
lea
sub
xor
sti
aaa
xor
fxch
iret
lret
cmp
clc
addl
ljmp
jecxz
clc
out
aaa
sti
not
int
jecxz
clc
mov
in
cli
std
fcomi
xchg
mov
divl
out
hlt
xor
aaa
repnz
xlat
test
mov
fiadds
shl
xor
ret
fdivr
lret
int3
loope
fstp
mov
test
loope
icebp
lret
in
sub
fld
lret
shr
ret
hlt
flds
mov
test
ds
leave
cmp
enter
jecxz
hlt
in
sti
cmp
mov
lret
int
rcll
aam
xor
jmp
stc
fucomp
icebp
and
jmp
test
neg
out
leave
shl
shr
cli
repnz
cmp
out
ds
in
ret
in
sbb
enter
in
xor
ljmp
xor
cmc
fdiv
mov
lret
fucomip
lret
in
ret
int3
repnz
out
int
xor
out
stc
out
incb
sbb
call
in
in
into
repnz
hlt
sarb
sar
sti
aas
cmp
std
hlt
fucomi
jecxz
sti
jecxz
sub
xlat
std
neg
cmp
fcmovu
fcmovnbe
xlat
cld
fstp
jecxz
clc
mov
repnz
mov
cs
ror
xor
xor
aad
fcomi
loop
repz
cmp
test
fsincos
out
filds
pop
sub
xor
les
ror
xor
ret
cld
mul
icebp
loop
mov
ret
jmp
in
out
in
into
out
call
repz
cmp
loopne
movb
lea
int
enter
int3
fucomi
cmp
int3
cmp
std
orl
addb
leave
fidivl
cmp
cld
cmp
icebp
sar
icebp
faddp
fld1
test
ljmp
std
xchg
xchg
xor
jmp
out
repz
fcmovnb
fucom
ret
rcr
jmp
in
lret
xchg
cmc
test
repnz
int
cli
jecxz
cmp
jmp
icebp
rorb
sub
fcmovnbe
cmp
cld
sti
repnz
xor
xlat
shl
xchg
les
in
sub
sub
cmc
into
aad
test
cmp
addl
fmuls
jmp
sub
aad
fucomi
cld
enter
fucomip
fidivrl
fabs
addb
xchg
fucomp
lret
out
ds
mul
frndint
jmp
roll
in
push
cld
jmp
out
rol
lock
leave
int
int
shr
in
sti
hlt
lock
cmp
in
fcmove
mov
out
in
lret
movl
cmp
add
add
xlat
aas
fst
fcmovne
mov
imul
lret
jl
repz
cmp
inc
loope
cli
clc
in
lret
fmul
ljmp
xor
fsubr
fcmove
loope
hlt
sar
ds
fdivr
jecxz
cmc
vpmulhuw
out
fsubr
nop
out
xor
iret
in
lret
lret
icebp
cld
in
shl
xor
fcos
sbb
rcl
xor
jmp
iret
cmp
test
cld
cmp
les
flds
call
aad
stc
cmp
aam
fcomp
in
stc
fadds
fsubr
test
into
sub
ds
into
cmp
jmp
cmp
sarl
std
in
rolb
ficoml
cld
jecxz
idivb
aad
cmp
imul
in
fxam
loope
shl
in
ljmp
stc
in
out
into
rcr
rcr
push
fdivrl
rolb
orl
cmp
xor
jmp
and
into
ds
cmc
fucomp
int3
stc
jmp
out
iret
loope
fcmovnb
out
idivl
fidivrl
repnz
out
xchg
aad
aam
jmp
int3
stc
mov
xchg
xchg
lock
jmp
sti
cmp
dec
faddp
loopne
jecxz
jmp
mov
ret
aam
std
dec
fcmovbe
xor
xlat
fiaddl
mov
jmp
in
into
aaa
ss
vpand
out
iret
int3
cmp
cli
out
cmp
shr
mov
out
loopne
xchg
aad
ret
xor
fcmovne
not
ljmp
adc
filds
sub
icebp
fucomi
xor
neg
cmp
fadd
call
std
int
in
test
xchg
cld
leave
shll
out
cmc
sar
jmp
fsubr
ds
sbb
fdivr
mov
into
fldl
clc
rcl
enter
adc
clc
jecxz
in
ljmp
out
xchg
cmp
xor
ss
cli
icebp
fsubr
sti
lret
shl
cmc
in
repnz
shl
in
lret
xor
iret
lret
xor
int3
aaa
cld
fcmovbe
fucomp
clc
cmc
rol
shl
stc
in
stc
icebp
loopne
test
lret
in
loop
int3
stc
ds
jecxz
in
sub
fdivr
jmp
in
fcmovne
int3
fdivr
loop
xchg
lret
aam
aad
cmp
cmp
int3
ret
test
stc
call
out
xchg
int
icebp
xor
shll
sti
shlb
xlat
leave
fadd
cmp
aam
xlat
xlat
les
in
xchg
shr
lret
mov
ljmp
fcomi
ljmp
addl
mov
addl
leave
aad
aaa
cmp
ljmp
call
filds
xchg
mov
lret
xor
cmc
div
les
enter
ljmp
loopne
in
cld
lea
call
out
cmc
lock
in
ljmp
and
mov
jmp
cmc
int
loope
repz
aam
lock
jecxz
loop
adc
shl
sti
xchg
out
jmp
mov
int
out
rcl
lock
lock
loope
int
iret
ret
ds
aam
fucomip
leave
icebp
mov
fldl
cmc
icebp
aad
repnz
loop
shr
repz
jmp
in
lret
int3
out
jecxz
int
ret
ret
lret
ljmp
std
repz
rorb
clc
mov
jmp
pause
int3
loop
xor
aad
neg
std
shr
sti
rcr
lock
fcmovnbe
filds
ljmp
in
xor
sar
cmp
incb
fsubp
mov
fldl
out
mov
repnz
fldln2
dec
iret
in
and
xlat
sti
loopne
jecxz
ret
clc
out
sti
xchg
xchg
loop
shl
xor
stc
lock
out
cmp
leave
fmul
mov
or
out
roll
jmp
sarl
lret
and
std
mov
sti
test
rorb
test
lcall
jmp
int
into
fcmove
fst
aam
lods
push
push
xor
bound
jl
add
mov
ror
in
jmp
out
ss
out
out
enter
cld
stc
vpmullw
out
mov
int
xchg
icebp
rclb
loop
repnz
cli
xor
sarl
in
fcmovnb
ds
lret
ljmp
out
test
out
aas
sarl
cmp
idiv
in
shl
clc
mov
fcmovu
xchg
loop
rol
call
hlt
int
xor
aas
cmp
adc
fldln2
xchg
loopne
xchg
jmp
ret
out
out
out
aam
fdivrs
addl
xchg
xor
cmp
in
fdivs
lret
cli
into
cmp
cli
loopne
loopne
fdivrp
mov
xchg
jecxz
aaa
shr
cmp
fldl
pop
out
loope
mov
leave
out
lock
aaa
aad
fldlg2
cld
iret
clc
clc
jmp
jmp
adcl
out
fcmovnbe
icebp
shl
addb
lock
out
fcomp
lret
into
loop
in
mov
loopne
aam
repz
aad
rcr
lret
repz
cld
mov
loopne
cld
call
repz
repz
fcomi
ss
aas
jmp
out
fadd
jecxz
fcmovnb
mov
mov
imul
in
cli
lret
jmp
fcmovne
xor
imul
cmp
not
ds
leave
iret
loop
mov
iret
test
hlt
aam
call
hlt
cmp
fdivrp
stc
fst
add
neg
mov
cld
mov
out
jmp
loop
fsubr
ds
xlat
cmp
sti
cmc
xchg
adc
in
stc
out
fdivrl
ljmp
cmp
enter
test
and
icebp
rol
fsincos
lock
out
xor
lret
in
aas
cld
mov
sbb
jmp
lret
icebp
aaa
int
lock
cli
out
not
iret
loope
in
loop
stc
aam
ror
xchg
fsubr
leave
out
repnz
rcr
fldl
loope
cmp
cld
test
lock
enter
xor
idiv
sbb
xchg
frndint
out
rorb
ror
xor
jmp
int3
iret
out
aam
xchg
stc
mov
out
ret
xchg
int
into
ret
out
xor
lock
cld
out
stc
iret
into
out
repnz
cli
xchg
test
addl
into
cli
cmp
repnz
repnz
loope
sar
jecxz
fisttpl
cld
fldl
iret
fcmovnbe
ljmp
aad
out
loopne
ror
ljmp
test
shrl
icebp
ljmp
cmpb
cmp
in
test
cmp
out
loope
shl
cmp
xor
sti
call
adc
in
std
xchg
in
jmp
in
enter
repz
int
lock
cmp
add
repz
in
iret
in
xchg
mov
mov
out
cmp
aam
idivb
jecxz
int3
clc
out
movb
leave
enter
fmulp
fidivs
xor
xor
ror
test
in
jmp
test
sub
rcr
enter
cli
sar
xor
roll
shr
test
xor
enter
fucomp
sti
aam
rcr
ret
sti
fcomp
fsub
cld
cld
nop
fdivr
cld
jmp
fucomi
out
shl
xlat
fstp
and
rolb
orb
int3
xor
std
call
loope
in
loopne
in
repnz
call
lret
hlt
lret
enter
leave
cmp
hlt
xlat
cld
fcmovb
lock
out
mov
ficoms
das
rcr
xlat
int
icebp
enter
xlat
and
cmp
sub
jmp
ljmp
loopne
enter
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
pop
pop
push
out
jle
jl
add
lret
fstpt
ror
cmp
fdivr
call
xchg
fcmovu
in
loop
mov
iret
in
idiv
cmp
out
fidivrl
sti
loope
rcl
fucomi
call
in
out
mov
xor
lret
in
xor
out
fcomip
in
cmp
xchg
in
rol
jmp
stc
out
out
out
loopne
push
loope
xor
lock
repz
shl
fcmovne
call
std
repz
xor
enter
sar
test
roll
in
mov
in
cli
fcmovbe
xchg
xor
sarl
into
icebp
not
cmp
out
stc
aas
aad
loopne
call
in
out
mov
loop
test
fdivr
call
repz
in
loop
call
in
lret
aad
ror
aad
repz
out
fidivrl
fsub
cld
aam
sar
mov
out
cld
cli
icebp
test
shr
lret
shlb
out
std
call
test
mov
cli
fldl
jmp
lock
xlat
repnz
out
ror
lret
shr
cmp
into
cmp
out
xlat
repz
hlt
sti
stc
int3
inc
sti
mov
xor
fcmovb
iret
int3
xor
cmp
in
fucomip
sti
aad
out
faddp
aam
or
xchg
xor
shl
loop
in
lock
rcr
ror
cmp
aad
fcomp
in
fsubr
xlat
in
nop
cmc
cmc
lret
jecxz
out
ss
lret
cmc
hlt
aas
stc
out
movl
icebp
xchg
repnz
rcl
cmp
sar
ror
loopne
aaa
shr
stc
fcmovbe
jmp
ljmp
int3
cmp
hlt
lret
cmp
aad
ret
lock
shl
hlt
loop
xchg
xchg
sar
xchg
out
ss
xor
lret
sbb
stc
fadd
loope
call
loop
loopne
in
shl
repnz
icebp
cmp
aad
hlt
adc
aas
std
cld
jmp
rcl
xchg
iret
ret
loopne
imull
cmp
fnstsw
or
aas
cmp
ffree
hlt
jmp
and
repz
cs
int3
icebp
xor
aad
fldl
icebp
loope
jecxz
mov
faddl
jecxz
subb
shr
xor
fnstsw
call
sar
flds
enter
xchg
mov
bnd
leave
cmp
lret
hlt
cmp
loopne
lret
mov
nop
xchg
in
out
sub
xor
into
xor
lret
lret
jmp
icebp
inc
cld
fldl
dec
out
jmp
div
xor
out
lret
clc
aaa
call
fildl
loope
lds
out
lret
cmp
aam
iret
sti
hlt
aad
int3
cli
loopne
in
shl
in
loope
in
loop
int3
shl
into
in
xor
ret
fcmovne
cld
fcmovnbe
xlat
xlat
in
iret
aam
jecxz,pt
std
les
shr
repz
icebp
test
cli
cmp
cld
repnz
out
jecxz
sub
loope
xchg
jmp
ss
fmul
ds
cmp
not
fstp
imul
out
out
adcl
sti
aaa
xlat
xor
cmc
ror
call
lock
call
cld
jecxz
mov
fists
xor
int3
les
jecxz
cmp
aad
xchg
loop
xchg
adc
xchg
aad
jecxz
jmp
into
hlt
fcos
fsubrp
lret
cmp
jecxz
and
out
sti
lock
xor
xor
out
enter
jmp
out
cmp
ret
in
lret
jmp
fstl
enter
sub
xlat
leave
sar
cli
vshufps
out
mov
in
and
adc
xor
rcl
cmp
fxch
sarl
ror
loope
iret
inc
out
addb
nop
in
std
mov
int
xor
cmp
xlat
jmp
stc
icebp
aam
loopne
jmp
test
dec
xlat
into
les
xlat
mul
aad
fdivr
fistpll
idiv
std
clc
std
mov
jmp
ror
ds
ret
or
xor
jl
add
fcmovnu
test
out
xor
aaa
shr
in
shr
stc
xor
stc
xchg
sti
mov
mov
mov
cmp
icebp
jmp
shr
call
cld
cmp
ljmp
repz
not
jecxz
out
xchg
fimuls
jmp
test
cmp
cmpb
adc
ftst
icebp
call
repnz
enter
cmp
aas
push
into
cmp
test
out
nop
test
out
repz
aad
neg
stc
ljmp
clc
shl
out
enter
sub
int3
fcom
div
bnd
cmp
fucomi
stc
jecxz
fdivrs
ds
adc
lock
loope
subb
int
call
std
fnstenv
cmp
cld
xchg
cli
fucomi
cmc
out
sub
repz
aad
cs
fcomi
aam
in
lret
xlat
aam
loope
stc
cmp
loopne
cmp
test
int3
int3
out
jmp
cmp
fcmovnu
out
and
cmp
aad
jmp
and
icebp
loope
xor
ret
cmp
loopne
cld
leave
inc
not
lret
sti
fdivp
in
fldl
aaa
std
cmp
cmc
ss
rcl
in
cld
out
ret
movl
nop
xchg
iret
lock
enter
fdivr
icebp
loop
rolb
roll
out
rol
in
clc
cmp
aam
cld
out
int
ret
incl
fdecstp
mov
loop
addl
lds
cmp
cld
call
fildl
ret
rcr
jmp
call
xor
out
ds
cmc
repz
testb
loope
fcompp
push
nop
out
test
fnstenv
sarl
leave
repnz
cli
ret
aas
xor
jecxz
leave
jecxz
in
in
loope
out
xor
repnz
jmp
sti
cli
ret
in
ror
mov
mov
xchg
lock
leave
aam
cmp
std
aas
shlb
iret
loop
loope
cmc
clc
out
ret
in
cld
fimull
loop
cmp
xor
cld
icebp
cmc
fdiv
out
repnz
cld
cmp
movb
rolb
xor
in
lock
cmp
ljmp
ljmp
sti
fsubrp
ror
xor
lock
aaa
shr
lock
fcomi
shl
aas
xlat
cmc
filds
mov
jmp
int3
into
lret
sub
stc
enter
ds
fimuls
fucom
nop
in
icebp
xchg
hlt
sub
cs
sti
jmp
dec
neg
in
repnz
mov
fdivr
loope
iret
ror
in
xor
out
cmp
into
lret
fdiv
push
aad
call
icebp
xchg
test
fcmovnu
cmp
int
sar
ret
rcl
into
adc
sbb
int3
test
ljmp
fdivr
cmp
fucom
in
mov
lock
in
lret
hlt
xlat
lock
fidivs
lret
fsub
neg
cmp
mov
in
dec
out
mov
sub
cmc
into
stc
cmp
std
fidivl
fprem1
out
mov
adc
iret
clc
fmull
leave
in
aaa
cmp
ds
ds
hlt
sarb
cmc
enter
stc
in
xchg
sub
aaa
aad
cmc
std
ljmp
xchg
aas
mov
out
loopne
xor
xor
idiv
fcmovbe
loope
cli
addl
test
idiv
fadds
out
les
in
cmp
cmp
sti
fiadds
in
icebp
cli
call
in
xor
hlt
call
jmp
xor
fsubr
rolb
out
dec
loope
in
rorb
icebp
jecxz
cmc
sarb
xor
iret
call
test
aam
std
fildl
cmp
ret
enter
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
aaa
add
pop
push
jg
lret
jl
int
in
shl
icebp
iret
loop
in
aas
neg
jmp
xchg
xchg
shl
enter
test
rol
sar
enter
fiaddl
in
out
lret
lock
xor
repz
rcr
adc
mov
fisttpll
mov
leave
in
ret
xor
xor
fcomp
ds
ret
in
decb
cld
in
ljmp
leave
cmp
int3
xor
test
test
lret
call
in
cmc
jmp
ret
call
lret
ljmp
in
out
cld
fmuls
jmp
xor
idivl
int3
aad
cmp
repnz
loope
loopne
cmpl
xchg
call
fyl2x
repz
neg
repz
fcmovu
rcr
loope
les
int3
out
cld
mov
ror
cs
rol
cmp
cmc
std
cmc
fistpll
inc
out
mul
dec
mov
orl
in
out
test
not
icebp
add
addl
lret
jecxz
out
mov
in
lock
jecxz
iret
adc
shl
call
xchg
mov
ret
out
jmp
iret
xor
repnz
in
test
in
in
repz
cmp
int
fdivrl
rol
in
enter
int
clc
mov
faddl
das
out
sti
lds
ljmp
rol
jmp
leave
inc
in
mov
int
aad
clc
repnz
clc
cmp
ss
aaa
loope
fldl
fmull
nop
inc
les
cmp
fcmovnb
repnz
jecxz
out
rolb
std
xchg
sub
out
xchg
call
loop
repnz
ss
cmp
cmp
orl
mov
cmc
out
ret
in
in
cmp
fcmovb
hlt
fsubrp
adc
mov
int
loopne
test
out
xor
lret
xor
cli
clc
jecxz
rolb
mov
lret
in
xchg
int
shrl
lock
cmc
fxch
cmp
repnz
int
cmc
cmp
repz
jmp
int
std
in
jmp
xor
das
in
int
in
int
cmp
hlt
loopne
jmp
in
cld
in
fsub
repz
shl
out
stc
in
sti
ror
out
cmp
cld
aam
loopne
mov
loopne
in
std
loope
in
aas
out
lret
in
cmp
int3
icebp
stc
into
aas
shl
out
repz
ret
mov
in
cli
loope
test
lret
rcl
out
sar
hlt
sti
aad
int
cmp
roll
testl
jmp
fcmovu
out
aas
hlt
sti
testb
sar
jmp
mov
int3
in
xchg
into
xor
lret
repz
lret
fiadds
clc
testb
lret
in
mov
rclb
clc
sub
iret
ffreep
cld
loope
and
fldl
sub
rclb
shl
in
out
xor
flds
ret
test
in
ffree
int3
mov
fisttpll
ss
out
leave
cmp
iret
cmp
in
xchg
loop
loop
loop
lea
test
aad
shr
fsub
fprem
sti
vpmaddwd
fcmove
aam
fcomi
clc
fmull
out
stc
out
cs
cmp
lret
fildl
decl
in
std
std
shl
in
cmp
cmp
lock
std
cmp
jmp
repz
out
test
sbb
orl
out
stc
xor
cmp
fsubp
addb
and
jecxz
in
fdivp
hlt
ror
xor
sarl
addb
cli
hlt
notl
mov
in
lret
fsub
std
enter
ss
lret
cmp
jmp
mov
fcmovnb
in
mov
jns
sub
jg
lret
jl
xor
mov
enter
nop
repnz
in
xor
aas
in
sar
shl
lock
loope
cmc
xlat
std
cli
jmp
std
test
cmp
fcos
fmul
imul
sarb
shl
sti
jmp
mov
shr
or
in
lret
hlt
xlat
cmp
rcl
repz
in
cli
xchg
ljmp
les
xor
jmp
hlt
cli
fucom
icebp
addl
call
jmp
fadd
cli
loope
rcl
xlat
in
lock
cli
orl
jmp
xor
out
out
cmp
not
icebp
out
in
out
enter
std
jmp
lret
aad
out
xor
sti
fucomp
fstpt
int3
repnz
mul
mov
sti
in
loope
leave
xchg
in
iret
sti
hlt
cmp
out
rcl
ljmp
shl
test
call
std
or
fcomip
jecxz
enter
cmp
out
aad
fld
sti
loope
xchg
in
jmp
enter
cmp
idiv
xor
aas
cmp
ret
out
mov
xor
xor
ret
repnz
into
sti
icebp
clc
cmp
sbb
rol
ret
xchg
ret
xchg
out
xchg
mov
aam
int
call
inc
cld
rol
repz
orl
mov
in
clc
cmc
aaa
cs
aad
hlt
fdivr
cli
movl
jmp
shr
out
aam
hlt
sti
sarl
int3
out
cld
xchg
jecxz
xor
ljmp
sar
in
out
aad
aad
and
jmp
ffreep
std
fcmovnbe
lret
in
shl
int
fstp
leave
out
jmp
stc
lock
mov
fninit
jmp
stc
test
fsub
xchg
xchg
ror
rcl
xor
cmc
xor
stc
shl
loopne
sar
repz
filds
and
in
into
mov
shl
hlt
ss
cmp
int3
dec
test
cld
out
out
lret
and
int
decl
ret
rcl
in
cmp
aam
lock
cmp
roll
fneni(8087
call
in
test
int
sub
xlat
fnstenv
shr
rcl
cld
ret
testb
lock
leave
enter
test
rcl
lock
aad
xchg
leave
call
loop
adcl
xor
int
xlat
cli
cld
repz
xchg
jecxz
jmp
shll
test
stc
cmc
ds
addl
enter
loopne
rcr
aam
out
repz
repnz
ds
cmp
ljmp
out
xchg
iret
ljmp
int
enter
rol
out
cld
rcr
loop
xchg
cli
loope
rcr
jmp
loope
jmp
clc
lock
lret
cmp
sar
xlat
ljmp
out
cs
xor
xlat
clc
repnz
fdivr
repz
ds
in
cli
orb
repz
ret
call
shr
jecxz
sarl
cli
in
ljmp
call
call
out
sti
rolb
cli
adc
les
in
les
aad
ret
cmp
fucom
cmp
xlat
fadd
fsub
loope
stc
sbb
loop
xor
stc
sar
shl
aad
into
in
vshufps
ljmp
in
lret
lret
sti
ljmp
aas
aad
repnz
mov
int3
leave
enter
xchg
xor
aaa
lds
hlt
div
repnz
xchg
xchg
fcmovne
mov
sti
int
roll
iret
aam
lds
xor
std
ljmp
leave
cld
repnz
iret
in
test
in
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
inc
cli
adc
lret
jl
in
imul
iret
ret
cmp
xlat
enter
cmp
cmp
loope
repz
xchg
sub
test
lret
xor
icebp
out
fyl2xp1
ds
shl
fadds
repnz
in
mov
sub
cli
xor
xor
shl
and
lock
filds
in
iret
mov
cld
call
shrb
xor
jmp
aad
fcmove
fdivr
div
neg
test
ret
mov
loope
jmp
lret
fprem1
cli
cmp
cmp
fnsave
shl
aam
idiv
xchg
xchg
sub
in
leave
icebp
int
dec
rcr
hlt
rcl
mov
cmc
in
call
in
jmp
iret
aaa
cmc
ror
rcr
stc
sar
stc
rcr
fucomp
and
cld
jmp
out
leave
into
out
into
int3
xor
leave
xor
aad
fcomp
xor
std
out
out
jecxz
addl
mov
hlt
test
ss
in
fst
xlat
shl
stc
out
iret
fsubp
jmp
hlt
aad
out
cmp
fcmovnb
hlt
adc
jecxz
sti
xchg
orl
les
xlat
aad
fucomip
fsubrp
sti
leave
out
lret
int
jecxz
sti
fiadds
sti
out
in
jmp
cmc
incb
in
call
test
repz
fnstsw
xor
leave
sub
cmc
xlat
leave
loopne
jecxz
aas
fiaddl
fimull
cli
rorl
clc
fnsave
out
clc
fsubr
shl
cmp
clc
jmp
int
in
xchg
fcomi
xchg
xchg
sub
aaa
not
cmc
clc
imul
xor
cld
out
loop
cmc
mov
cmc
popl
lret
ds
adc
div
not
aam
out
std
jmp
call
int
xorb
xor
vpsrld
into
idiv
iret
imul
ror
loope
xchg
in
call
mov
lret
call
cmp
fadd
neg
mov
test
fstp
ret
in
enter
in
xlat
ret
loop
int
aam
fnstcw
cmp
repz
test
ret
fcoms
fidivs
in
lret
repz
call
xchg
neg
fsub
out
lret
adc
cli
test
movl
sti
fdiv
aad
out
ret
ss
repz
out
jmp
cld
mov
lret
repz
rol
cmc
cmc
clc
ret
into
rolb
or
out
mov
in
sub
enter
rcr
sti
xchg
sti
fadds
repz
loop
call
aad
cmc
dec
fcmovnu
out
xlat
xchg
aad
in
ret
mov
jecxz
faddl
out
fstpt
aam
aad
ds
fcmovnbe
std
cmp
lret
fucom
out
in
in
enter
xor
hlt
fnstsw
ss
cmc
sar
xlat
in
aad
enter
lret
movl
in
ror
aad
int3
cmpl
cld
in
fabs
rol
in
loope
call
lret
ret
loop
rcl
xlat
xor
jmp
cli
clc
cmp
ret
loop
jmp
ret
xchg
ljmp
aad
lock
fmul
std
sar
aam
aad
loop
call
sbb
fadd
lret
aam
ror
fdivl
sar
aam
cmp
loop
aas
ret
call
icebp
decb
out
in
std
iret
aam
loope
ds
rcl
in
out
vpavgw
out
in
shr
iret
xor
sar
clc
lret
into
int3
aam
aaa
aam
out
rol
aas
fisttpll
out
in
xor
cmp
fldl2t
shll
cld
fistpll
int
into
mov
loopne
sti
ret
lock
fnstenv
cmp
fcmovnu
ljmp
ret
or
sti
fsubr
nop
iret
out
shl
repz
cli
fdivr
incl
cmp
je
movl
jmp
rcl
rcl
roll
movsl
test
adc
jl
jmp
int3
lock
cld
hlt
and
fldl
mov
jmp
repz
call
loope
iret
cmp
fdivrp
fmuls
out
xchg
xchg
sarl
int3
in
shl
fcomp
lret
adc
test
enter
and
out
fdivp
ljmp
test
fildl
clc
leave
jecxz
mov
test
loop
ds
cmp
ss
enter
fcmovnbe
iret
stc
enter
int3
fmuls
in
loope
out
in
aaa
xor
out
fcomip
shl
repz
mov
or
xor
jmp
aas
cmp
rcl
addl
aam
testl
in
shr
xor
out
jmp
cmp
xchg
jmp
fdivr
iret
xchg
cmc
ljmp
std
jmp
cmp
cmp
out
into
cld
stc
roll
out
xchg
in
test
xor
cmp
out
aaa
fnsave
loopne
cmp
rol
mov
out
call
call
leave
shl
icebp
cmc
clc
cmp
into
sar
out
filds
enter
call
mov
subb
xor
rcr
xor
repnz
clc
cli
mov
call
xchg
int3
sub
stc
cs
fdivrl
aaa
hlt
cli
fistpll
cmp
out
loop
ljmp
fsubp
shl
cld
ljmp
shll
fdivr
fdiv
shl
cli
addb
leave
cli
sti
int3
out
mov
xor
out
out
std
int
xor
addb
shl
cli
fsubrp
xchg
loope
fsub
in
hlt
cmp
lret
lret
xlat
int3
jecxz
cli
xchg
std
test
in
ljmp
lret
das
out
cmp
sti
jecxz
int
not
std
leave
repz
loopne
std
leave
fdivr
mov
aad
in
xor
fdivrl
aam
rcr
cmp
call
fucomip
test
rol
leave
cmp
hlt
rcl
xlat
dec
xor
sti
icebp
out
mov
ret
aad
in
xchg
rol
xor
repnz
jmp
repnz
fdivrl
rol
xchg
cli
loop
xchg
in
shll
fcomp
repnz
sti
loopne
cmp
sti
rol
in
out
in
cld
into
in
loop
test
divb
cmp
jmp
icebp
in
in
fcomip
mul
test
cld
mov
int
hlt
ljmp
idiv
shr
fadds
ljmp
repz
xlat
lret
lret
std
enter
loopne
loope
lock
clc
fsincos
sbb
in
cmc
sbb
xor
jmp
aad
icebp
fucomip
loope
aad
cmp
xlat
fdiv
in
jecxz
call
ljmp
lock
aas
ljmp
hlt
icebp
leave
in
aad
jmp
mov
hlt
ret
stc
xor
loop
rcr
std
aas
enter
into
cmp
cli
jecxz
aam
loope
mov
out
in
mov
fucomip
iret
xor
loop
cmp
enter
cmp
and
icebp
fcmove
faddl
int3
ficoml
in
hlt
out
out
fcom
out
int3
in
repnz
testl
test
xchg
fsubrp
sub
mul
cli
shlb
cmp
neg
loope
fdiv
adc
aam
cli
test
out
in
rcl
in
cmc
xor
stc
into
neg
rcl
aad
sti
addb
loop
fisttpll
repz
leave
shll
int3
cmp
hlt
rcl
cli
ret
in
mov
xlat
int
call
mov
ljmp
fchs
int3
loop
testb
incb
lock
fmul
stc
sar
xlat
cmp
into
cld
stc
filds
loopne
stc
loop
cli
sbb
ror
out
ret
lock
loop
icebp
leave
int3
ss
cmp
into
cmp
repnz
out
stc
mov
data16
add
lret
ret
int
jle
rol
add
push
sbb
lret
jl
xchg
xchg
out
in
divb
cmp
repnz
lock
and
mov
fcomp
addb
xchg
xor
enter
shr
and
aad
fiadds
in
fimuls
xorb
test
ljmp
ljmp
repnz
mov
cli
loope
repnz
jmp
out
xlat
in
ror
les
int
neg
out
fcomi
sti
out
loopne
incl
xchg
leave
xchg
lret
jmp
out
aaa
into
ds
in
cmc
xlat
repnz
fcmovu
jmp
in
repz
in
mov
in
aam
cli
xor
neg
clc
loope
in
fstp
std
or
add
sti
ret
cmp
xor
fsub
repnz
cmc
clc
fdivr
incl
loop
hlt
mov
ljmp
repnz
int
lock
lock
cmp
rcl
loope
cli
jmp
in
out
lret
xchg
mov
clc
jmp
cmp
loope
loop
cld
ds
cld
leave
into
icebp
repnz
xchg
int3
fdecstp
cmp
jmp
aaa
ljmp
loopne
loop
leave
test
out
lock
into
lret
call
out
fcmovne
in
cli
repz
cmp
mov
testb
in
mov
hlt
ss
in
xor
out
repz
out
idivb
jmp
fstp
fsub
adc
loop
div
sub
fndisi(8087
call
std
ret
xlat
sti
fchs
sbb
fmul
int
rol
lret
fsub
fmul
cmp
stc
out
jmp
in
rcr
les
fmull
repz
fmul
stc
repnz
rcr
ss
flds
loopne
loopne
mov
test
jmp
jmp
lock
ljmp
cli
push
stc
sti
fadds
int3
lret
out
ss
fdivs
aaa
fnsave
cmp
cmp
jecxz
ror
mul
fnstsw
cld
sti
int
test
jmp
cmp
out
hlt
loop
and
fucom
loope
out
fcompp
enter
cmc
xchg
lret
xor
cld
aad
loop
cmp
xchg
iret
into
xor
loope
loope
xor
leave
into
lret
jmp
fidivrs
sti
and
movb
ljmp
sub
std
fidivl
xor
jecxz
call
mov
xchg
xor
in
call
call
loope
cmp
adc
lret
shl
in
les
jmp
sarl
sar
jmp
lret
xchg
add
div
fcmovbe
int3
fcomip
repnz
shl
leave
orb
in
orl
repz
fst
cld
icebp
in
fcomi
filds
mov
rol
cli
fnstenv
call
ds
test
lock
shl
jecxz
faddl
adcb
sti
repz
shr
jmp
fcmovnb
rcl
enter
sub
out
xchg
mov
int
fucomp
shlb
iret
aam
repnz
repz
hlt
leave
fdivrp
lret
sbb
aad
shll
rcl
aaa
ss
fadd
and
rol
mov
hlt
fxch
loop
rorb
int3
in
mul
clc
aad
iret
cmc
call
ss
leave
call
stc
jmp
lret
fcoms
loop
xor
in
repz
ds
out
cmp
sti
call
sbb
hlt
ss
rol
xor
out
rcl
xlat
fsubr
in
cli
inc
jmp
and
in
lret
icebp
clc
out
shl
xor
into
xlat
aad
fcmovu
ret
loope
stc
in
call
lret
test
fisttps
fcmovnu
aad
fcmovnbe
faddl
rcr
fcomi
aam
sti
incl
in
aad
sub
xlat
out
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
jns
and
jg
lret
jl
aam
cmp
aas
repnz
rol
sub
sti
cli
mov
loop
xor
int3
enter
cld
iret
icebp
aam
lock
incb
in
in
shr
icebp
shl
xor
ljmp
in
loopne
les
rol
std
xchg
std
out
fadd
mov
repnz
hlt
jmp
sbb
fdivrs
jecxz
call
cmp
mov
ror
aaa
aad
leave
int
call
xchg
out
mov
lret
fldln2
jecxz
mov
jmp
fdivp
adc
call
cmp
loop
hlt
clc
fmuls
mov
jmp
xor
into
aad
fucom
ret
ds
test
cli
lock
in
in
out
leave
xor
inc
out
ljmp
idivb
test
fmull
xlat
repnz
ss
fdivl
aam
cmp
out
hlt
in
xchg
hlt
movb
enter
xor
repnz
out
in
rcl
fnstcw
cli
mov
fcmovne
mov
repnz
sub
rol
repnz
aad
cmp
ds
icebp
leave
loope
std
xlat
lret
in
leave
lock
lret
xlat
cmc
cmp
repz
out
loop
shl
out
enter
out
in
out
cmp
rcr
ret
fdiv
aas
test
out
mov
mov
jmp
ljmp
fcmovbe
lret
jecxz
fidivrs
in
clc
call
loop
xchg
sub
loope
fdiv
jmp
clc
in
cmp
cmp
hlt
loope
test
jmp
loopne
xorb
out
lret
ss
fdivs
rcr
loope
sarl
test
neg
mov
fdivp
xchg
fcmovne
cli
rcl
lret
xor
int
fisubrl
cmp
out
call
aad
aas
jecxz
jecxz
mov
into
into
ret
xor
idivl
out
call
ret
loop
in
mov
test
in
sbb
repnz
rcl
lret
cli
add
repnz
out
mov
shlb
call
fcmovnbe
into
enter
aam
call
orb
in
xlat
cs
xor
hlt
rcl
fdiv
into
sti
out
jmp
rcl
cli
repz
in
jmp
ljmp
loope
into
idiv
repnz
int
cld
lea
in
in
fdivs
fdiv
leave
ss
cli
fxch
cmp
sbb
fsub
mov
rol
cmc
jmp
jmp
in
loope
fucom
jecxz
mov
leave
in
mov
jmp
shl
jmp
xor
call
aam
ljmp
lds
leave
lret
jmp
icebp
in
in
fadd
test
in
fdivr
fadds
and
in
out
cmp
cmp
in
cld
sarl
cld
ds
faddl
mov
xchg
fdivr
int3
in
repnz
iret
hlt
not
fdiv
ds
loopne
faddp
xchg
addb
xchg
test
enter
xor
int3
out
std
xor
cmp
loope
in
loop
into
cmp
xchg
mov
mul
jmp
jmp
fdecstp
loopne
sti
repnz
int3
orb
sub
fidivrl
sarl
aas
sar
test
in
mov
sub
out
into
sar
clc
jmp
out
cmp
cld
int
cmc
into
cmp
ret
fucom
lret
mov
in
fmul
call
in
ds
lret
ret
call
shr
aam
sbb
mov
rorl
ror
hlt
jmp
cli
stc
rcr
fiaddl
out
into
loop
leave
shr
mov
sub
icebp
out
enter
cmp
fcmovnu
loope
xlat
cli
mov
xor
lea
mov
jmp
into
int3
ret
ds
jge
jae
dec
push
dec
stc
mov
jg
lret
jl
aam
cli
jecxz
loop
mov
jmp
in
cld
clc
sub
loop
faddp
fucomi
int
xrelease
lock
cmp
cmp
mul
jecxz
stc
cmp
mov
and
aas
shlb
ljmp
or
loope
icebp
ret
aam
and
clc
out
in
ret
aam
stc
leave
fildl
imul
cld
cmp
enter
mov
rcl
nop
xor
in
into
lret
xor
into
lret
fdivr
cld
fucom
ret
stc
fiadds
in
addb
ret
fucomi
fidivl
stc
cmp
into
cmp
aad
rol
in
ret
loope
fmul
nop
repz
test
lds
aam
call
xor
into
out
repz
fcmovb
stc
hlt
jmp
xchg
lret
rcl
call
xor
clc
or
std
fcmovbe
jecxz
jecxz
cli
vpaddsw
mov
rorl
in
jmp
and
icebp
int
in
ret
in
xchg
mov
icebp
shr
jmp
in
xor
hlt
std
out
aaa
loopne
and
test
sti
mov
xor
jmp
aaa
ljmp
cmp
aam
test
enter
test
xchg
jmp
sub
jmp
aad
enter
incb
iret
shlb
int3
fld
aaa
int3
xor
shl
repnz
jmp
fucomi
icebp
int
adc
clc
in
cmp
loope
ljmp
fiaddl
out
mov
sar
cld
aas
rol
shr
leave
fnstsw
out
xlat
cmp
hlt
lret
ret
cmp
cld
mov
out
std
and
lret
jmp
fyl2x
or
loop
out
fsqrt
loop
fcmovnbe
in
cli
loop
repz
fsubr
les
loopne
repnz
xlat
fstp
rcr
ss
ret
in
test
hlt
and
or
shl
aam
aam
jmp
fcmovnu
lret
aad
call
idiv
loope
mov
ljmp
lock
fstpt
out
cli
lock
xchg
in
fadd
testl
repz
loop
fst
call
cld
rol
sti
jmp
cmc
fsubr
loop
leave
cld
loopne
dec
out
in
out
cmp
lock
lret
fdivr
lock
cmp
clc
out
mov
rclb
call
call
into
in
fadd
lock
jecxz
jecxz
out
fdivrp
fcoml
clc
jmp
iret
cld
fsubr
shl
ds
std
loop
in
aam
int
movb
in
ror
repnz
std
sti
fadd
cld
rcr
hlt
cld
loop
fdivr
cmp
hlt
jmp
xor
orl
in
lret
jmp
cli
fldl
jmp
in
xchg
int
in
loopne
in
int3
in
cmp
cmp
imul
fyl2x
iret
not
loope
test
sub
mov
xchg
in
shr
int
jmp
fdivrp
xlat
aam
in
mov
lret
jmp
ret
divb
cmp
int
cmp
out
fucom
sti
test
loope
in
icebp
jmp
clc
cli
cld
xor
in
test
and
fmull
nop
cld
sbb
in
leave
jmp
cld
fdivr
leave
idivb
and
cld
sti
adcl
in
xlat
leave
in
leave
cli
xor
aas
fcmovu
int
loop
jecxz
in
ftst
in
loopne
mov
shl
das
std
cmp
cmp
filds
mov
test
cli
ds
jmp
sti
faddl
imul
out
in
fistpll
icebp
cmp
out
fcmovb
lret
call
lock
iret
clc
int
call
and
les
call
fimuls
ret
in
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
mov
jl
add
out
cmp
xor
out
rcr
cmp
mov
mov
lret
ret
aaa
icebp
shll
das
fcmove
in
loopne
loope
cmp
test
mov
xor
divl
stc
cli
cmp
rcr
repz
idiv
std
fmulp
fst
mov
jmp
int3
ret
lock
out
ss
loope
sarb
in
into
cli
std
mov
xchg
ljmp
fnstenv
ret
stc
mov
cmp
in
addb
in
fimuls
subb
sti
cmp
iret
out
hlt
fcomi
fdivp
aam
les
fmull
test
sar
int
int
clc
out
testl
faddp
xchg
repnz
repnz
repnz
repnz
stc
fsub
mov
and
int3
xchg
neg
in
into
repz
leave
rcr
call
icebp
cmp
fstpt
fsub
into
fucom
mov
ret
repz
in
out
xor
pushl
in
repnz
mov
jecxz
fdivr
lret
into
das
out
test
fnstenv
int3
aas
xlat
mul
xchg
sar
out
in
movb
out
int3
xor
out
call
lock
mov
or
cld
ljmp
cmp
loop
stc
fcos
xor
aas
fld1
out
loop
lret
jmp
cmp
sub
xlat
cmp
cmp
loop
xor
in
jmp
fmull
rol
in
call
clc
sub
iret
out
test
incb
or
leave
shr
out
ljmp
idiv
aas
div
clc
jecxz
cmp
jmp
xchg
lret
in
hlt
jmp
lret
fcomi
not
fcmove
lock
test
rolb
xchg
leave
xchg
enter
xor
xor
iret
out
dec
shll
out
cmp
fildl
mov
neg
call
nop
xchg
shl
les
out
out
hlt
out
hlt
rcl
aad
shr
repz
in
clc
jecxz
int
mov
rol
hlt
div
call
stc
cmp
test
cli
xchg
hlt
xlat
cli
enter
mov
in
jmp
int3
icebp
imul
out
in
fcomp
in
shl
std
stc
mov
xchg
xchg
into
fisttps
out
iret
int3
out
clc
rolb
xor
xchg
out
iret
fmull
leave
out
cmp
fbstp
cmp
adc
aam
rolb
mov
ror
xor
aam
call
fdivrl
loope
shl
icebp
mov
testl
and
leave
xlat
test
in
jmp
out
sti
out
lock
cmp
ret
test
out
sbb
in
repz
ss
fidivrl
repz
and
loopne
rol
clc
in
fldt
into
int3
repz
cmp
out
jmp
jmp
ret
ljmp
into
repnz
in
shr
iret
rol
int3
repz
ror
cld
fadds
rcl
xor
rcl
aaa
shll
or
cmp
ljmp
loopne
xor
out
ret
xlat
aas
cli
jmp
cld
aam
cmc
sar
xor
in
out
faddl
in
in
clc
std
fcmovnb
icebp
out
sbb
call
cld
loop
orl
cmp
iret
clc
cmp
int
fucom
shl
cld
test
call
fcmovnu
lret
cli
shl
aaa
rol
repz
xor
cmp
sar
out
fdivrl
loop
mov
faddl
in
loop
test
icebp
fsub
loopne
iret
rcr
std
hlt
fdivrp
fabs
lret
mov
adcl
loopne
fsub
sti
in
lock
roll
xor
jmp
sarl
lret
rcr
fsubr
push
adc
jg
lret
jl
imul
loop
clc
jmp
mov
int3
cmc
xor
out
int3
jmp
fiadds
lock
leave
ljmp
mov
out
ss
in
aad
cmp
lock
cmp
or
out
add
out
addb
cmp
enter
in
ljmp
repz
jecxz
in
mov
enter
xchg
test
neg
int3
out
cmc
fsubp
shl
icebp
aas
icebp
clc
in
xlat
jmp
hlt
fucom
ret
xchg
xor
ror
out
fstp
enter
clc
loopne
fiadds
out
testl
bnd
int3
ss
repnz
xchg
addb
xor
aad
sti
shr
cmp
shr
mov
call
lea
out
icebp
in
lock
loopne
xor
faddl
cmp
xchg
shl
xchg
mov
ret
stc
int3
int
call
repz
mov
addb
icebp
roll
repz
std
int
ds
cmp
clc
fistpll
neg
int
jecxz
lret
test
test
imul
hlt
cmp
lret
lret
icebp
out
hlt
fsincos
jmp
fisttps
fimull
fbstp
aam
out
call
in
cmp
in
adc
jmp
clc
xchg
fucom
sub
int
xor
xor
aam
clc
out
rolb
test
movb
out
mov
jmp
les
xor
sti
cmp
aam
out
repnz
in
fiadds
out
int
rorl
in
out
in
xlat
lock
test
out
cmc
stc
int
nop
loopne
divl
shl
sti
fcmove
lret
hlt
fstp
ljmp
cmp
call
fmull
cmp
in
cld
in
aas
std
xlat
mul
in
cli
in
hlt
loopne
xchg
cld
iret
ljmp
call
fsubrp
jecxz
rol
cli
xlat
loope
out
in
shr
xchg
sub
std
ljmp
lret
fcmovne
loope
lret
aad
in
jmp
mov
cmc
xor
ret
fnstcw
fcmovu
ss
aas
iret
lret
test
out
jecxz
test
mov
cli
loop
add
xor
xor
int
fcomi
fsub
sarl
sarl
sbb
int
jmp
lock
icebp
jmp
rcr
cmc
shlb
ljmp
std
ror
ret
int
ljmp
call
ret
not
fsubr
rcl
in
rcr
rcl
xchg
loope
leave
loope
fsubr
repz
xchg
shlb
cs
out
into
repnz
aad
fucomip
cmp
orb
fildl
iret
ret
cmp
int3
fcmovbe
cmp
ffreep
aam
in
ljmp
das
out
sub
out
bnd
divl
out
fistpll
leave
hlt
int3
mov
mov
out
ljmp
fnstcw
cmp
repz
out
cmp
mov
in
nop
lret
cld
xchg
repz
int
cld
stc
in
std
int3
cmp
xor
cmp
test
out
enter
mov
rcl
sub
jmp
iret
cmp
cmp
shl
cmp
jmp
lret
loopne
loope
into
rol
sub
fdivr
xor
jecxz
fsub
shl
mov
mov
neg
loope
fsubp
int3
xchg
mul
divl
repz
cmp
cmp
imul
lock
rcr
fmul
aam
ds
in
and
ror
in
cmp
loopne
in
sarl
fstp
adc
test
cld
cmp
repz
out
fsub
stc
roll
cmp
inc
out
hlt
fcomp
jecxz
or
out
ljmp
int
sti
hlt
call
ss
aad
cmc
ljmp
fmull
adc
data16
add
int3
fcmovnbe
int
loope
insl
lahf
push
dec
gs
das
jg
lret
jl
sub
aaa
iret
ffree
aaa
fndisi(8087
fdivrl
fcmovb
aam
jecxz
std
stc
lret
fildl
out
out
int
sub
cmc
in
out
out
cmpl
in
mov
int3
test
xchg
repz
enter
in
fcmove
push
out
shr
rol
fcom
sbb
in
faddl
jmp
call
lret
aam
repz
out
into
cli
sbb
test
rol
ds
lret
out
jecxz
hlt
repz
rol
xlat
in
fcomip
cmp
out
rcl
iret
sar
xlat
test
mov
in
rcll
cmp
fdivs
ds
aam
in
aas
rcl
test
icebp
mov
loop
int
aam
icebp
out
fnstsw
loopne
roll
xabort
mov
test
mov
hlt
sub
int
in
dec
fmul
fiaddl
lock
cli
mov
jmp
and
icebp
in
fxch
fidivl
addl
neg
leave
ret
loop
out
ljmp
cmp
sarb
sti
adc
call
sti
out
test
faddl
in
ss
out
cld
cmp
rcr
lock
leave
test
int3
test
repnz
xchg
xor
int
idivb
rol
cmp
repnz
lret
out
test
sar
out
xor
aad
out
xor
loopne
cli
rcl
ret
clc
fucom
mov
mov
icebp
xchg
fiadds
cli
iret
lock
ret
cmp
repz
jmp
iret
mov
xchg
in
fmul
xor
xlat
ljmp
cmp
sti
int3
roll
loope
lds
std
in
shl
in
fidivrl
cmp
loope
sar
sti
ror
jecxz
test
test
mov
sub
rcr
das
in
cli
aam
rcl
aad
shl
cmp
mul
mov
enter
cmc
lock
rcl
out
into
icebp
cli
lret
aaa
aad
std
aad
leave
in
in
mov
ljmp
shll
repz
in
jmp
ljmp
sti
sti
sti
jmp
nop
xor
xor
in
sub
shl
shl
cmp
call
test
sub
rol
int
out
cmp
stc
loope
test
shl
cli
lret
out
loop
mov
cld
mov
xor
xor
in
jmp
cmp
aam
aad
in
std
cli
loop
int3
int
fucomi
out
jecxz
clc
ss
shr
stc
cmp
bnd
xlat
lock
enter
or
repnz
cmp
enter
cmp
xlat
sarb
ret
out
ds
stc
mov
cli
lea
repnz
lock
aam
aad
fxch
xlat
cld
cmp
jmp
fst
xchg
shl
out
iret
fcom
stc
sti
lret
hlt
sar
loope
repz
lds
and
call
jecxz
fcmove
jmp
shl
repnz
sar
loope
ljmp
ljmp
sub
shl
neg
cmp
movb
in
xchg
rcl
ljmp
cmp
cmp
jmp
roll
enter
call
rclb
mul
fdivrl
neg
into
fdivrs
ror
into
sti
repnz
in
jmp
enter
xor
call
aam
in
shl
ffree
stc
out
add
cld
cmc
fcomp
icebp
in
icebp
leave
in
hlt
cs
lds
cmp
adc
rcl
in
in
fsub
test
aad
xor
repz
xor
cmp
inc
hlt
fldz
cmp
test
hlt
lret
int3
ljmp
mov
xor
in
fcmovne
cmc
fstp
test
roll
aam
lea
repz
xor
loope
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
mov
jg
lret
jl
ret
fiaddl
call
fsubr
in
mul
lret
fcomi
lret
out
cmp
repnz
cli
leave
test
loope
into
lock
das
loope
jmp
loope
in
fnstsw
in
ret
std
loop
rcr
jmp
out
iret
jmp
cmc
call
cld
stc
in
repz
in
addl
xor
cmp
not
xlat
into
fstp
out
lret
cld
ljmp
ret
shl
fldpi
rcl
sarl
jmp
icebp
test
fdiv
leave
fucom
fst
mov
leave
cmp
repz
out
aad
divl
std
cld
jecxz
ret
xlat
in
fadd
orb
out
out
cmp
sti
aam
cmp
int
loope
cmp
xlat
neg
mov
leave
ljmp
in
xor
int3
clc
fcomp
cmp
fcomip
mov
repnz
enter
dec
xchg
clc
ret
repz
shl
jmp
loope
testl
int
lret
shl
out
out
cmp
aaa
fcomi
int
cmc
into
cmp
rol
fimull
loope
jmp
ljmp
into
in
aaa
shr
loop
cld
int3
div
in
or
test
aam
ror
enter
clc
fdivrs
lock
aad
in
fiaddl
xchg
int
xor
jmp
int
shl
repz
aad
loopne
cmp
test
nop
ljmp
repz
jmp
shr
in
jmp
aam
in
ret
add
xchg
jecxz
mov
out
xchg
iret
int
ret
cmp
leave
cmp
fadd
xor
rcl
sti
in
test
addb
fsubr
mov
cs
icebp
out
aam
cmc
fstp
loop
out
xchg
aad
xchg
fadds
xor
ror
xor
sarb
fsubr
ds
ret
jmp
dec
in
or
out
fcomip
repnz
ljmp
clc
fadd
loopne
fmul
shl
xor
std
loop
jmp
in
into
xchg
cld
cld
hlt
xor
aam
clc
out
jmp
stc
cmp
lock
aam
fldl
enter
ret
vcvtdq2pd
in
out
dec
into
ret
icebp
clc
repz
fcomp
faddl
shl
jecxz
faddp
icebp
aaa
shr
iret
icebp
ds
int3
lock
repnz
hlt
loopne
clc
ds
cli
ffree
into
orb
xor
repz
test
stc
in
cmpl
icebp
repz
shr
jmp
clc
ljmp
loopne
aad
loope
jmp
aam
sbb
iret
jmp
sub
jecxz
cmp
xor
cmc
lret
lret
in
cld
in
mov
repz
leave
fimuls
loopne
mov
cs
ss
cli
fidivrl
ljmp
cmp
lret
out
in
int3
out
ret
test
lock
fcom
std
aad
aas
iret
in
fcmovbe
fcmovnb
in
ror
jmp
idiv
xchg
nop
out
int3
shr
into
ret
xor
out
sti
aaa
idivl
clc
fdivrl
repz
jmp
lret
or
loope
out
loopne
int3
repz
out
sar
out
cmp
out
loope
fdivp
fcmovb
xlat
call
fiaddl
shrb
repnz
cmp
in
cmp
aaa
cld
lock
rcl
aas
xlat
incb
rcl
rol
clc
ljmp
fsub
sarb
fadds
in
test
ret
sti
xor
enter
repz
loop
fdivp
fiadds
fucomi
test
xor
shl
out
fst
int
std
stc
iret
sarb
mov
in
int3
iret
int3
out
out
aad
cmc
xor
xor
lret
ljmp
out
shl
xchg
out
leave
repnz
in
sub
ret
out
cld
cmp
fcmovne
fcomip
cld
sar
in
repnz
sub
add
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
lret
jmp
leave
cmp
jg
add
incl
out
int3
cmp
std
aad
cmp
out
fisttpll
add
repnz
xchg
in
cli
ss
fmul
clc
hlt
ret
ret
cli
lea
in
std
loopne
jecxz
leave
sub
shlb
cmp
shl
fadds
out
xchg
ljmp
shll
icebp
ljmp
std
int
out
aad
xchg
out
in
loope
ror
out
jmp
jmp
idivb
fdivr
loope
test
mov
lret
jmp
loope
div
lret
cmp
test
int3
loopne
shl
lock
cli
fimull
ror
xchg
clc
lret
xor
cmp
cmp
sarb
call
out
sti
popl
mov
fprem1
xor
int3
sar
fucomp
cmp
fsub
fcos
call
test
ljmp
in
xor
sti
aad
in
rolb
cmp
fsubrp
lock
xchg
mov
repz
jmp
vpaddsw
icebp
cmp
frstpm(287
fisttps
out
dec
test
cs
int3
enter
call
adc
in
icebp
or
sarl
lret
rcr
sarb
xor
cli
xlat
hlt
fimuls
orl
cmp
cmp
shlb
sti
aam
loope
loopne
out
int
xchg
jmp
f2xm1
std
lret
stc
fdiv
dec
fstp
shl
repnz
mov
cld
std
out
xchg
xchg
sub
xor
divb
cli
fcomi
xor
aad
repz
cld
test
hlt
fmul
mov
into
in
mov
ss
cmp
lret
loope
aad
int
repz
stc
repnz
fmul
test
int3
out
repnz
aam
aam
jmp
int3
in
fcmovu
cmc
in
mov
xchg
cld
mov
lret
lret
cmc
in
xor
shl
flds
jecxz
mov
fdivr
lret
iret
ror
in
ret
into
sti
in
out
cli
lret
loop
fcmovnbe
mov
mul
jmp
xchg
mov
out
jmp
cmp
imul
lret
cli
into
rcr
stc
loopne
nop
loopne
jecxz
nop
leave
aam
repz
cli
rol
iret
fcmovne
adc
in
adc
rol
or
lock
or
ljmp
in
into
fcmove
idivb
loope
clc
fcom
std
decb
fmul
nop
mov
aaa
stc
xor
ret
cmp
cmp
fsubp
cmp
and
enter
iret
out
cld
lret
xor
sti
call
div
div
cmp
cld
jecxz
in
enter
out
cli
shr
jmp
jmp
cmc
out
xor
aam
test
enter
enter
icebp
call
shl
xor
idivl
imul
cmp
cmp
cmp
push
adc
faddl
mov
out
in
repnz
in
in
lret
cmp
cmc
std
repz
mov
mov
iret
out
shr
xchg
aad
xor
aad
clc
imul
iret
into
loope
rcr
in
or
out
fucomip
hlt
lret
sub
hlt
call
ss
int
fdivr
aam
hlt
std
leave
in
movb
lret
out
cmc
not
in
leave
fsub
ljmp
cmc
or
icebp
std
loopne
lret
mov
rcl
lock
out
cmp
cli
lret
cmp
repz
repnz
leave
cld
xlat
in
mov
xchg
rcl
aaa
in
out
call
fdivl
cli
sarl
aas
xlat
xor
xchg
shr
fstl
out
out
xor
cld
addb
xlat
movl
aad
stc
into
repnz
cmp
sti
cmp
shl
cld
leave
mov
fisttpl
test
in
ds
sti
cli
out
aaa
cmp
cli
jecxz
fdivr
cld
jmp
std
and
ret
out
enter
lret
cmc
call
cli
cli
cli
out
aas
rcl
mov
cli
ffree
fmul
loopne
in
aad
aaa
in
repz
cs
ds
repnz
hlt
out
jmp
jmp
repz
int
hlt
out
ss
sti
cmp
loop
out
fadds
xlat
cli
out
mov
int3
jmp
vpmaddwd
hlt
lret
fdivp
std
xlat
inc
loopne
in
sbb
cld
mov
xchg
lock
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
sbb
xchg
and
jl
xor
xor
rcl
aas
fsincos
shl
repz
mov
in
int3
out
ljmp
aaa
into
sti
jmp
lock
hlt
in
aam
test
loope
sbb
test
jmp
test
adcb
out
sub
in
cmp
icebp
jmp
aad
shl
test
cmc
jmp
loop
fcomp
mov
loope
xor
jecxz
jmp
icebp
xlat
into
cli
fsubrp
idiv
stc
xchg
fldl
mul
out
cmp
out
out
ds
cli
roll
mul
loopne
mov
ljmp
out
lret
out
xor
cmp
addb
fimuls
les
test
shll
in
enter
sti
cmp
vpmulhw
cmp
testl
loope
sub
xor
std
testl
mul
shl
fcmove
cld
in
shll
shll
jmp
leave
repnz
cmp
aas
fadd
rcl
mov
out
shl
xchg
nop
xor
out
fucomp
iret
fsubr
out
in
out
ds
hlt
sbb
out
icebp
lock
out
idiv
iret
in
int3
xor
jecxz
shl
rol
stc
loope
ret
xchg
cld
in
cld
mov
xor
cli
xlat
aas
cmp
cmp
cmp
cld
in
fcmovne
and
loope
orb
in
repnz
in
lock
clc
stc
cli
incl
aas
cli
rolb
clc
lock
icebp
ss
ljmp
std
int3
ret
sub
out
int3
flds
icebp
loop
in
sti
int
div
neg
test
out
mov
lret
clc
loopne
xchg
enter
iret
xor
out
iret
aas
loope
int
xlat
loopne
rcl
test
and
out
jmp
mov
xchg
mov
loopne
shl
cmp
clc
int
rcr
icebp
xlat
cmp
into
std
movb
jecxz
faddl
vpslld
xor
stc
push
ret
not
fsubp
leave
sti
les
mov
cmp
cs
ret
fdiv
loope
fadds
cld
jmp
out
cli
loop
in
xor
sti
stc
fcmovbe
in
aas
icebp
cmc
add
fstp
clc
std
flds
nop
mov
fucomp
xchg
out
enter
clc
sar
cmp
iret
div
in
fildl
jmp
loopne
int
into
loopne,pn
xor
call
rcl
loopne
loopne
into
shl
mov
int
test
out
lret
enter
fcmovnb
fcomip
ljmp
ret
call
call
nop
nop
out
int
hlt
xor
cmc
stc
fcomp
cli
ffreep
fcmovnbe
faddl
fcmovnu
cli
in
mov
fsubp
in
rol
aam
std
vpsrlw
add
hlt
in
sti
testb
into
mov
lret
in
aad
int
xlat
fistpll
cmp
aaa
iret
out
adc
ret
xchg
jmp
divb
in
xor
shr
div
cmc
clc
fdivrl
jmp
loop
xchg
call
int
xor
in
jmp
cmp
sub
lock
fildl
mov
mov
enter
fnstcw
cli
in
fsqrt
icebp
ljmp
fneni(8087
mov
mov
out
idiv
xor
sarb
aam
clc
ret
fcmovnu
les
call
call
rcl
leave
out
lret
fistpll
sbb
fmull
into
lret
into
in
lock
repnz
fidivrl
xlat
sti
cld
fadd
lret
mov
xchg
out
test
ror
loop
rcl
fcmovnu
ret
fadds
xchg
fucomip
fdivs
cli
out
rcl
ror
iret
jecxz
int3
aad
out
cmp
ljmp
lock
imul
jmp
xor
cli
xlat
cmp
cmpl
sti
ror
xor
fucom
movb
into
cmc
xor
in
lds
rcl
rcr
aas
mov
test
stc
loopne
add
rorl
rcl
shr
cmp
xlat
loopne
adc
out
xlat
ffreep
fdivr
jecxz
in
loopne
jmp
xor
aad
cmc
out
rcl
sar
fcomi
repnz
xchg
adc
in
mov
xor
rcl
cli
shr
out
ret
xchg
flds
hlt
shl
cmp
stc
shl
sti
out
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
fucom
dec
push
sarb
add
aad
div
jmp
jecxz
int
std
cli
and
lret
xor
ret
cmp
sti
lret
rol
clc
inc
faddp
std
loopne
frstpm(287
test
loop
xor
jmp
out
repz
fucom
xlat
fcom
adc
loop
shl
jmp
clc
enter
repnz
in
ror
icebp
in
imul
mul
repnz
stc
jmp
filds
int3
in
sarb
cld
cmp
test
leave
hlt
rcr
lret
loopne
loop
lret
xchg
les
sarb
aad
repnz
in
sti
xor
shl
sti
and
mov
ret
in
int
inc
or
mov
xlat
xlat
enter
stc
fcmovne
ds
shl
cmp
loop
xlat
ljmp
int3
fucomp
int
repz
xor
icebp
cli
cmp
adc
cmp
jmp
cli
mov
mov
xchg
rorl
repz
hlt
xor
xlat
rcr
out
cmc
out
fstp
out
idiv
jmp
nop
div
int
aam
shlb
fnstenv
hlt
lock
mov
in
lret
cmc
lea
lret
shlb
cmp
fiaddl
faddl
mov
into
jecxz
out
ljmp
cmp
ss
hlt
enter
out
lock
rol
fsubr
call
sub
lret
jmp
lock
repz
enter
loop
enter
xor
cmp
enter
out
ss
cmp
incl
xchg
out
clc
lret
aad
bnd
enter
mov
loopne
div
div
in
incl
xchg
mov
int3
jmp
repnz
out
shr
incb
idiv
shl
mov
sti
xchg
and
out
fmulp
call
iret
cmp
cmp
or
out
out
fcomp
cld
call
rorb
aad
fld
int
xor
fxch
cli
cmp
fprem
ss
cld
roll
xchg
jecxz
lret
cs
cmc
shl
fsubr
stc
sti
repnz
aas
in
iret
vpmullw
ret
lret
test
shl
rcl
loop
stc
repnz
jmp
cmp
and
fsub
leave
xchg
xor
shrb
xor
jmp
rol
loopne
jecxz
add
fisttpll
jmp
lret
out
iret
std
hlt
jmp
fmulp
test
fisttpll
enter
loop
rorb
leave
stc
cli
int3
sar
fnstsw
out
xor
rcl
jmp
fsqrt
enter
mov
xlat
leave
cli
sar
cmp
loopne
loopne
cmc
cmp
addl
icebp
jmp
aaa
in
shr
int3
std
leave
fnstcw
xor
repnz
ds
fadds
out
xor
enter
leave
cmp
xlat
hlt
push
out
jmp
enter
int
ljmp
repnz
out
int3
leave
call
out
jmp
addb
mov
xchg
in
sub
fdiv
lock
rcl
jecxz
sarl
clc
sar
out
xchg
jecxz
mov
in
cli
nop
in
icebp
in
icebp
xor
out
enter
int
out
fnclex
call
mov
iret
cld
fstp
lret
mov
cs
int
cmp
clc
iret
cmc
cmp
rcr
out
std
mov
loop
sbb
xchg
rolb
cmp
fcmovbe
fidivrl
roll
test
enter
in
cld
mov
ret
ss
ss
cmp
jecxz
aam
sarl
mov
in
out
enter
loope
cmc
xor
shl
stc
sub
cmp
hlt
filds
in
cld
xlat
repz
and
ljmp
ret
cmp
cmp
cmp
std
jecxz
fprem1
faddl
xchg
lea
repnz
sti
jmp
hlt
enter
cmp
fsub
lret
fcomi
rcll
lret
xor
aam
aad
test
sti
shl
mov
cmp
test
lock
hlt
lret
std
neg
into
jmp
cld
roll
out
out
mov
into
enter
not
loop
mov
ss
adc
mov
ret
leave
loope
fld
in
xchg
subb
std
cmp
fucomi
icebp
in
ds
les
cld
xchg
mov
lock
aad
clc
clc
cmc
shll
ss
sar
cmc
out
mov
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
in
or
add
jmp
imul
test
fimull
out
aaa
ror
repz
aas
clc
incl
rol
mov
leave
fcmovbe
nop
rorl
icebp
call
repz
fnstenv
in
cmp
xlat
leave
out
fcmovu
shl
out
icebp
mov
sub
in
int3
cmp
icebp
aaa
not
aad
adc
ds
mov
loop
in
cmp
loop
xor
fdivr
enter
fdiv
xchg
repz
incb
call
in
out
cmp
rcl
sti
out
cmp
jecxz
cmc
in
ds
fucom
fmuls
rcl
xor
sub
repnz
enter
cmp
jmp
aad
cmp
shl
ret
neg
std
jmp
iret
nop
loopne
in
divb
into
xor
int
out
cmc
hlt
cld
out
sti
jecxz
jmp
test
out
lds
ljmp
int3
sarb
repnz
in
test
faddl
out
repz
jecxz
repz
out
cmc
hlt
xlat
sarb
roll
fsubp
in
lock
loopne
rol
rcl
in
jecxz
out
cmc
fmul
xor
in
sti
addb
fldl
cmc
rcl
hlt
cli
iret
int
enter
cli
ss
xlat
test
mov
xchg
in
bnd
in
fcmovu
lret
out
fnstsw
fcomp
xchg
int
popl
leave
xor
stc
hlt
in
enter
out
fidivrl
loope
decb
test
aad
aam
ret
vpslld
enter
into
loop
xlat
jecxz
sti
jmp
lret
out
jmp
repnz
int
in
iret
cli
aaa
lret
roll
test
shr
lock
shl
ljmp
loopne
fcomi
loope
test
fmul
sti
call
xchg
in
icebp
icebp
out
cmc
std
loope
aad
xlat
shl
loopne
lock
and
stc
xchg
jmp
in
aaa
cmc
jmp
repz
in
idiv
out
lret
out
int
jmp
aad
cmp
ss
ss
fxch
sar
xchg
fiadds
fmull
lock
ds
hlt
das
fidivrl
shr
repnz
ror
sti
cmp
lock
repnz
ljmp
into
out
xlat
int3
cmpb
cmp
mul
cmp
int
dec
aad
in
aaa
ljmp
cmp
cmp
fadd
cmp
roll
mov
mov
in
jecxz
xor
hlt
aam
fnstsw
rcl
mov
call
lock
cld
call
in
ret
hlt
in
cmp
int3
fnstsw
lock
push
xlat
std
lret
icebp
iret
int3
loope
div
lret
ljmp
cmp
icebp
rolb
lret
jecxz
xchg
xchg
aad
rcr
enter
sti
aad
jecxz
fsubp
std
aas
cmp
cmp
clc
ljmp
in
test
not
int
incb
xchg
std
cmc
lret
jmp
fsubrp
int3
repz
cs
fsubr
hlt
cli
shr
xlat
fcmovbe
test
aas
std
cld
roll
xor
stc
aaa
fcmovnbe
fdivs
fdiv
into
lock
out
repnz
fcmovnbe
fldl
jecxz
fucomp
int3
shlb
int3
int
xlat
out
lret
rcr
cmp
test
mul
mov
fcmove
sub
aaa
aad
cmp
sar
aas
jecxz,pt
ds
cmp
in
out
cmp
int3
loope
icebp
jecxz
sarb
cli
stc
ror
rcr
shr
in
hlt
out
std
xchg
out
clc
in
xchg
lret
lret
lret
shll
into
loopne
in
cmc
cmp
clc
aam
lea
out
enter
in
jecxz
loop
repnz
ret
rcl
fadds
test
jmp
mov
call
cmc
sti
iret
shl
ds
aas
cli
jecxz
mov
iret
fcomp
jecxz
xchg
decb
in
clc
std
out
sti
sti
icebp
fcmovnbe
into
imul
cmc
push
rcl
in
mov
or
loopne
in
xor
fxch
cmp
xor
div
clc
fdivr
repz
and
clc
ret
loope
xchg
in
loop
rol
in
lret
neg
fcomp
out
fistpll
jecxz
rcr
ret
lret
ror
in
fsubrp
rcl
stc
in
cmp
fdiv
rcl
fcomip
fdiv
repz
xor
jmp
xlat
ror
fcmovu
fcmovne
sbb
or
push
lret
jg
add
int3
int
iret
cmc
mov
lock
cmc
fnsave
cmp
cmp
cmc
out
std
imul
call
mov
in
cli
das
sarb
out
stc
repz
or
ds
loopne
enter
jecxz
fucom
out
xor
out
fdivrs
call
cli
hlt
ss
cmc
ffreep
ret
mov
leave
vpsrad
xor
int
out
int
loope
std
out
out
and
fst
fildl
out
loope
call
cmp
xlat
loopne
add
jmp
cmp
or
fmulp
leave
ror
cmp
fdiv
push
aam
int3
xchg
ret
leave
xchg
out
mov
icebp
int3
lret
jmp
into
xor
enter
sar
and
fsts
xor
out
out
sub
cmp
faddl
call
ljmp
icebp
out
test
leave
cmp
cmp
cmp
addl
mov
xchg
xchg
int
repz
aad
ret
jmp
flds
fcmovnbe
loope
sbb
in
out
fiaddl
in
fcmovnbe
in
xor
out
repz
clc
test
in
sbb
ret
out
in
out
mov
lret
shl
out
mov
ds
rcr
ror
into
xor
lock
xor
jmp
cli
cmc
in
xchg
ret
into
aam
cmc
cmp
enter
aas
in
fdivr
xlat
rcr
test
xchg
cmc
das
sarl
shl
int
dec
ds
out
fld
sti
cld
neg
fxtract
test
rcl
les
sti
icebp
cmp
in
cmp
ret
inc
fcmovu
jmp
jmp
loop
repz
out
lock
fxch
out
cmp
cmp
repz
repz
xlat
aad
loopne
jecxz
cmp
xchg
in
lret
aad
aaa
in
int
fcmovnbe
iret
cmp
rcr
ret
cld
aad
mov
sbb
jmp
iret
fdivr
neg
sar
out
ljmp
xchg
jecxz
mov
xor
fsubr
xor
repz
fmulp
std
into
aam
aas
incb
sbb
loopne
lret
shl
shl
call
enter
icebp
cld
out
into
faddl
fsubp
jecxz
fists
ret
ss
sar
xlat
fcmove
fsubp
imul
rol
hlt
fcomi
neg
sub
mov
ret
out
in
aas
loope
clc
int3
test
cmc
cld
sbb
fcomp
jmp
lds
fsub
ret
dec
repnz
sarl
ret
call
repz
jmp
int
repz
int
cmp
ss
testb
stc
clc
lret
xchg
ret
aam
out
fcomp
xlat
cmpb
out
icebp
loopne
loop
in
ljmp
out
cmc
sti
sarl
cmp
int3
shl
clc
loope,pt
fisttpl
jmp
mov
out
hlt
rol
repnz
std
cli
aad
int3
test
ror
out
xchg
mov
int
in
cmc
in
imul
fcmovu
enter
aas
sarl
mov
std
into
mov
fucompp
out
ds
jmp
sar
fcom
aas
add
fcomi
testb
int
lds
xor
icebp
out
stc
rcl
repnz
cli
fsubp
lret
fsubr
int
in
icebp
xor
xlat
leave
fdiv
repnz
out
faddp
fcmovbe
cmc
jecxz
and
test
cli
aad
stc
xor
in
cmp
rcr
ret
cmc
test
sti
jmp
leave
mov
out
loope
in
cmp
cmpl
leave
mov
dec
fucomp
lret
repz
ss
cmp
testl
in
clc
ljmp
xchg
test
call
in
shr
clc
loop
fcmovnb
cmp
sti
jmp
loop
enter
lock
out
cmp
clc
iret
cmc
xor
loop
xchg
loop
mov
test
ffreep
orb
ljmp
int3
fucom
in
fstp
std
cld
jmp
test
out
sub
ret
lock
fmul
fidivrl
fdivrp
std
cld
cmp
mov
enter
addl
shll
fmul
loopne
int
addb
jmp
out
mov
xchg
jb
add
incl
add
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
icebp
aaa
out
int
ret
xor
fadds
adc
flds
leave
cli
out
int
cmc
ret
shl
lret
rol
ss
fucomip
shl
repz
neg
fsub
in
out
jecxz
adcl
lret
lock
out
adc
incb
xchg
call
xor
mul
aam
enter
cld
int
imul
xlat
out
call
rcr
jmp
loope
int
ret
jmp
loop
clc
iret
repz
cld
fsub
in
test
lret
in
xchg
out
sarb
in
repnz
in
int3
clc
cmp
clc
into
in
repz
fiadds
into
mov
ds
xor
into
fyl2x
std
cmp
cli
out
leave
ret
fcmovu
clc
cld
mov
out
mov
cli
loope
ror
lret
leave
lret
jmp
cmp
jmp
cmc
add
std
mov
test
mov
adcl
shl
cmp
enter
into
aam
sar
test
hlt
loopne
cld
sub
mov
orb
ss
cmc
aaa
cli
icebp
jecxz
adc
hlt
in
aam
xlat
mov
in
lret
fdivp
in
loopne
out
xor
inc
rcl
shl
hlt
ljmp
out
fmulp
sar
lock
out
jecxz
les
lret
ds
xor
sar
xchg
test
hlt
adc
xchg
icebp
out
xchg
ljmp
xor
jecxz
lock
lock
filds
xchg
nop
loope
icebp
enter
cmp
ror
jecxz
push
ret
hlt
hlt
std
call
leave
out
loop
xchg
in
xor
xlat
std
aad
cmp
cmp
xor
lock
stc
mov
in
lea
mov
rcr
xor
in
std
filds
out
stc
xchg
int3
fdivr
rolb
in
lds
into
aam
fcom
hlt
cmpb
cmc
xor
fildl
ljmp
sti
stc
int
stc
in
xor
rolb
rcl
mov
cmp
lret
cli
jmp
ret
sti
aad
clc
testb
in
call
mov
fisttps
jecxz
ror
ljmp
in
test
icebp
lock
jecxz
rcl
loop
icebp
aas
aaa
jecxz
iret
int3
fdivrp
fcomp
ljmp
hlt
cld
mov
cli
jmp
iret
fisttpll
repz
into
fnstenv
div
std
test
fldl
fucom
cld
std
xchg
iret
or
repnz
vpmulhuw
out
iret
cli
aam
lret
icebp
xchg
les
orb
sti
cmp
jmp
cmp
stc
int
std
out
stc
loopne
not
decl
test
fprem
iret
enter
in
jecxz
in
xlat
ror
xlat
or
test
jmp
loopne
icebp
imul
leave
in
aam
aad
aad
fsubrp
jecxz
roll
jmp
leave
jmp
test
shll
rcr
lret
cmp
aaa
fsub
fadds
mov
loope
out
icebp
not
in
rcl
aad
cmp
filds
mov
out
mul
in
fxch
fdivs
xor
jmp
sti
fcmovnb
cmc
aam
call
in
in
mov
out
ds
clc
cmp
ror
dec
ljmp
xlat
loope
jmp
addl
shr
xlat
int
jmp
ljmp
test
fiadds
call
lret
fsubrp
loop
lret
xor
xorb
jmp
int3
out
xchg
fists
in
in
xor
cli
incl
sarl
stc
idiv
filds
incl
into
cmp
fsub
xlat
repz
testl
stc
int3
ret
lea
out
enter
cmp
ror
cmc
shl
lock
mov
mov
out
std
sbb
jmp
in
fcos
aaa
sub
xor
into
out
test
xlat
loope
fisttps
in
ljmp
cmp
int3
shl
sbb
loope
loopne
fmuls
into
aaa
xor
fucomp
jmp
lret
aas
loope
shr
shl
mov
out
mov
leave
in
cli
in
adcl
xor
jmp
decl
filds
mov
into
mov
icebp
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
xrelease
aad
jl
add
ffree
cmp
fincstp
ds
call
mov
hlt
in
int3
shr
shrl
std
cli
ror
int3
sar
cmp
loope
ljmp
test
into
ljmp
cmp
in
cmc
lret
in
loop
xchg
mov
out
test
test
loop
leave
jecxz
xor
hlt
ds
cmp
cmp
idiv
shl
cld
loop
ljmp
call
jmp
out
cld
ds
fdiv
test
loope
ljmp
repz
loop
aam
leave
ljmp
xlat
in
shl
iret
cmc
out
flds
orl
xlat
xor
out
in
fdivr
icebp
fyl2xp1
std
lock
ljmp
loope
cmc
repnz
fsubr
clc
int3
hlt
iret
ds
icebp
loopne
stc
out
in
jecxz
xchg
out
xchg
ljmp
lret
cmc
call
aam
loop
cmp
hlt
orl
in
sub
out
ljmp
sub
xlat
loop
cmp
not
sub
into
out
repz
int3
jmp
fdiv
out
in
testl
out
cli
mov
out
fldln2
leave
loop
repnz
fucomip
fcmovbe
lock
xor
stc
decb
loop
int
mov
les
xlat
xor
cmc
icebp
cmp
cmp
sti
test
cmp
fiaddl
sti
cld
fsubr
call
rcl
aaa
cs
fldz
fnstenv
add
xchg
in
xchg
test
icebp
nop
in
not
xor
xlat
cmp
fdivs
loopne
xchg
call
fsub
in
fucomip
out
lock
lret
jmp
fidivrs
push
in
sar
xchg
loop
jmp
in
int3
lret
das
hlt
cmc
xor
fldln2
ss
loope
fdivp
hlt
clc
out
rcr
cli
lea
repnz
shl
loopne
hlt
iret
xor
iret
aam
sar
lock
ds
aad
testl
xor
rcl
clc
int
fneni(8087
repnz
hlt
idiv
imul
fyl2x
loopne
test
loopne
shll
lock
stc
cmc
rcl
jmp
int3
in
test
in
stc
mov
cld
loope
fsub
xchg
lret
xor
jecxz
aam
out
test
sar
xlat
shl
sti
loope
incb
into
fists
repnz
shl
cmp
sti
fcmove
cli
cld
rol
aam
repnz
loope
add
jmp
rcl
mul
aaa
fdivrl
out
repz
inc
icebp
ret
adc
loop
int
test
lret
rolb
repnz
lret
or
lret
fdiv
ds
xlat
hlt
lret
test
out
lret
repnz
aad
aaa
sarl
shl
vmaskmovdqu
inc
mov
int3
test
call
sar
into
xor
ss
neg
std
cmpb
std
fchs
in
rorl
fadd
cli
aad
jmp
xor
and
fsubr
cld
ret
test
mov
ret
lret
loop
xlat
lret
lock
loope
ds
std
fsin
lret
test
mov
decl
call
fcomp
out
hlt
shr
std
add
sub
ljmp
test
lret
sub
cmp
repnz
std
leave
lret
icebp
loopne
ret
fidivrs
idiv
push
lret
cli
mov
sar
mov
fcomip
loop
out
leave
fdivl
faddp
icebp
int3
stc
aam
hlt
jmp
rol
cld
loopne
lea
out
call
in
fidivrs
rolb
mov
icebp
rol
cld
mov
xchg
aam
iret
xor
in
idiv
cmp
jmp
test
cld
addb
stc
ret
mov
cld
rcl
shl
lock
cmc
jmp
fcmovnb
cmp
mov
mov
loop
loop
ret
enter
fucomip
fiaddl
vpmullw
cmp
in
jmp
iret
int3
jmp
ljmp
fmul
fidivrs
fstp
fcomp
out
aam
jmp
out
stc
mov
bnd
ds
call
lret
fcmovu
cmp
inc
std
xchg
int3
and
sar
xchg
rcl
repz
idivb
cmp
out
in
ds
test
in
fcmovne
in
into
loop
cli
lock
in
shl
repz
int3
int
xor
loop
ret
aad
ret
mov
std
ljmp
aad
not
fnstcw
fdivrl
std
cmc
int
cmc
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
std
xchg
mov
mov
jg
add
cmp
and
mov
iret
mov
icebp
in
cmp
leave
xor
icebp
int
repz
add
rol
shl
not
jecxz
ljmp
ret
f2xm1
lret
cmp
shr
add
and
fcmovnbe
in
xor
shrl
ret
fcmovnb
sti
cmp
lret
aas
xor
test
stc
jmp
in
in
icebp
mov
mov
iret
xchg
ds
out
leave
cmp
sarb
neg
in
xlat
xchg
lock
jmp
ror
fimuls
shll
mul
hlt
stc
clc
out
stc
fstpt
ret
fcom
fdivrp
ljmp
rcl
cmc
cmc
repz
lret
int
fdivl
fdiv
loop
sub
shl
xchg
out
mov
hlt
out
jmp
cmc
cmp
int
dec
cmp
cmp
xchg
out
loopne
rol
cs
ss
cmp
in
out
in
loope
out
jecxz
neg
in
lret
fildl
loopne
jmp
shr
cld
neg
shl
mov
jmp
leave
xchg
mul
in
into
lock
xor
repz
flds
fldpi
cmp
ror
les
mul
cmp
iret
fdiv
ds
sub
call
out
ljmp
repnz
lock
cmc
test
icebp
shl
mul
mov
out
ret
mov
lret
ss
call
cmp
clc
fidivrs
std
loopne
cmc
aam
test
leave
in
in
in
call
fldcw
out
ljmp
fdivrl
lret
cli
cmc
in
xchg
sub
ljmp
leave
cmp
cmp
mul
sarb
jmp
ljmp
lock
int3
xor
ss
cmc
clc
hlt
aad
fdivrp
aas
cmpb
test
test
lret
test
xor
fcmovnb
shl
out
shl
test
jecxz
ret
cmp
fsubp
call
leave
fcmovne
ss
jmp
rcr
sti
aad
mov
mov
iret
out
xchg
loope
shll
repz
lret
stc
stc
rorb
fimuls
int3
jecxz
xor
xor
cmp
lock
aam
jecxz
test
neg
rcr
mov
int3
mov
mov
in
xor
into
in
out
clc
sar
in
loope
ds
incl
stc
std
std
fimuls
loopne
xor
repnz
fucomi
aaa
into
fidivrl
fcmovb
push
leave
lea
jmp
int3
sti
ror
stc
sbb
clc
not
cmp
mov
xor
repnz
cli
out
repz
cmp
sbb
repz
stc
faddp
xchg
lret
iret
loop
sub
ret
enter
fadds
icebp
and
std
cld
in
ret
xchg
xchg
lock
repz
enter
out
rcr
cmp
cld
cmp
inc
stc
xlat
hlt
sti
in
in
sti
in
loopne
icebp
cld
sub
aaa
leave
jmp
aaa
sti
rolb
rolb
call
icebp
filds
out
xor
fcmovnu
out
call
test
mov
iret
test
inc
les
xor
aam
hlt
aad
shr
jecxz,pt
add
test
lret
xchg
sub
lock
xor
into
call
in
shl
test
clc
hlt
out
loop
loope
iret
sub
jecxz
xor
cli
clc
fmul
out
fdivrp
xor
xchg
in
cmp
call
mov
lds
ss
ss
jmp
in
loop
test
lret
sbb
lea
out
jmp
repz
int
lock
loope
in
jecxz
inc
call
and
rcl
shlb
cmp
xlat
jmp
jmp
lock
ljmp
nop
xchg
shrl
xor
lock
jmp
cli
sub
test
repnz
out
fcmovnu
fxch
sub
in
in
repnz
call
jmp
ljmp
neg
jmp
ljmp
rol
lret
jecxz
out
in
fdivrs
xor
lock
addb
addb
xlat
in
shl
fdivrs
iret
int
cmc
filds
int3
cmp
repz
xchg
xchg
cmc
call
cli
in
fcmovnu
jmp
xchg
ret
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
data16
add
loop
ljmp
in
ljmp
xlat
fst
cmp
xchg
clc
testb
mov
divb
xor
shl
fmulp
fcmovb
aam
fucomip
lock
test
fstp
mov
jecxz
call
fdivr
lret
in
fdiv
in
cli
adc
ret
or
popl
xchg
loop
leave
ss
out
fdivr
ljmp
lock
mov
aad
loopne
int3
lret
jmp
xorb
xor
shr
repz
loopne
inc
cmp
fdivr
shl
cmp
in
sub
xchg
jmp
lock
sub
out
cmc
cmc
stc
lret
loope
xlat
xchg
fcmovbe
std
loopne
ds
in
adc
mov
xor
ss
repnz
cmc
fidivrl
loope
xor
test
aad
ret
loop
fldl
iret
xor
mov
aas
out
into
jecxz
rcr
into
loope
cmpb
int
mov
cli
jmp
not
in
cmp
cmp
xor
aam
ffreep
call
lock
cmc
adc
jmp
call
ljmp
lret
fnstsw
fst
int
ljmp
enter
lea
cs
out
out
xor
out
cmp
cmp
ret
repnz
in
leave
cli
clc
leave
in
in
test
into
into
int
cmp
repnz
in
enter
out
loopne
ds
cmp
mov
stc
fmul
in
mov
lret
clc
stc
cld
call
cmp
cmp
mov
or
out
fsub
loopne
xor
imul
aaa
ljmp
sar
jmp
clc
dec
clc
sbb
loopne
xchg
ljmp
fmul
cmp
sar
out
sti
lock
xlat
ljmp
xchg
shl
rcr
lret
cmp
out
loope
int3
stc
rol
idiv
mov
loop
fcmovnb
test
enter
shrl
rcl
std
icebp
fdivrs
cmpl
sar
cmp
fstp
jecxz
mov
sti
mov
hlt
jmp
jecxz
sar
cmp
fadd
repnz
xor
idiv
sbb
mov
test
test
ror
jmp
push
leave
fdivs
icebp
leave
leave
jmp
ds
lret
test
rcll
out
int3
out
in
rol
cli
cmp
cli
ljmp
aam
mov
rolb
out
in
imul
sti
lock
call
ret
lock
rcr
repnz
fiaddl
fdiv
test
ds
clc
xor
fucomp
repz
enter
fcomi
jmp
mov
fscale
shl
fucomp
lret
xor
lock
int3
fst
fidivrl
icebp
xor
sbb
not
xor
std
loopne
icebp
mov
xlat
hlt
call
fdivrl
call
shl
jmp
iret
in
call
fdivp
in
loop
sub
jmp
loopne
cld
shl
jmp
test
ljmp
int
ror
imul
mul
int3
adc
loop
ds
hlt
out
out
xchg
in
ljmp
int3
lock
test
xlat
out
aam
fimull
cli
int3
jecxz
ror
aad
shll
xlat
rol
cmp
int
icebp
cmc
out
fiadds
fcomp
aam
out
fucomi
xchg
clc
ss
ss
repnz
fadd
in
cmp
ffreep
in
mov
cli
out
icebp
icebp
sub
ljmp
filds
iret
fst
cmp
cli
cld
in
out
mov
leave
sti
jmp
out
imul
neg
out
cmp
and
test
test
mov
loopne
call
cmp
sarl
fmulp
fcom
loop
fsub
std
jmp
fdivrp
fucom
jmp
in
jecxz
enter
cmp
fnstsw
lock
idiv
cli
fucom
ret
ds
shr
shl
int
loope
ljmp
icebp
loopne
lret
aad
ror
jmp
jecxz
iret
stc
lock
in
xchg
iret
xor
in
out
cmc
out
iret
ds
in
clc
cli
std
leave
loopne
iret
adcl
cs
xlat
stc
cmp
xchg
fiaddl
int3
fld
enter
ds
fdivs
jmp
sar
bnd
lock
fdivrp
hlt
cld
test
mov
ljmp
fmulp
fcomip
div
faddp
ret
hlt
jmp
ffreep
nop
icebp
out
aam
loop
imul
enter
sar
fcomp
stc
int3
mov
not
ret
lock
jmp
iret
int
ret
fstp
sbb
and
add
sti
and
call
repnz
cs
call
cmp
sti
addl
adc
xor
jmp
sarb
adc
xchg
mul
cs
out
lret
aam
cmp
lock
mov
ds
out
aas
jecxz
in
cmp
cmp
cmp
ret
loop
fld
jecxz
in
xlat
out
ljmp
shr
lds
lret
rolb
fsin
xchg
movl
stc
int
rol
into
aas
cmp
aad
int3
shl
cmp
fucom
test
mov
imulb
lds
imul
call
shl
repz
xchg
test
lock
stc
in
not
xlat
fucomp
shr
aam
rcl
repz
in
fstl
ror
loop
leave
shl
lret
sti
in
cmc
shl
ret
out
in
std
in
mov
loopne
enter
rcr
aas
cmp
aam
aam
add
jecxz
int3
into
jecxz
loope
jecxz
fcom
xlat
int
not
call
cmp
orl
lret
mov
loopne
in
into
fnop
into
repz
sbb
loopne
aas
neg
cli
sti
shl
test
lock
clc
rcl
leave
cld
ss
xchg
ror
clc
nop
iret
xchg
xchg
hlt
jecxz
icebp
aaa
in
leave
cmp
xor
in
shl
clc
xlat
sti
sti
filds
out
hlt
lret
ror
fcom
fcmovu
dec
into
lret
ret
rcl
fcmovbe
lret
xchg
mov
stc
fdivrs
cmp
sti
ret
mov
cli
orl
in
call
in
hlt
jmp
xor
jmp
out
mov
xchg
enter
stc
jmp
cmp
fnstcw
shl
cmp
hlt
cli
xchg
rorl
loopne
lret
fcmovne
into
aam
into
shl
rcr
xchg
mov
lret
imul
in
out
out
fsubp
ror
sar
clc
call
fcom
aad
aam
aas
xchg
fnstsw
xchg
into
clc
adcb
icebp
aad
aaa
iret
idiv
fmul
sub
flds
mov
test
rcr
lret
in
aam
hlt
cld
repz
mov
fsub
std
sar
sar
ror
xor
sub
sar
stc
addb
testl
fimull
out
xor
lret
cmp
ret
fadds
movb
xlat
xor
in
xor
cmp
cmp
aas
repnz
lock
std
repz
in
mov
icebp
test
shl
into
in
repnz
xor
fsubr
in
iret
cmc
lret
shr
ffreep
fdivr
repnz
out
fdivr
loopne
loop
out
repnz
aam
into
test
int3
sar
stc
lock
iret
in
jmp
test
aas
aad
in
loop
xchg
enter
fildl
enter
ljmp
ror
in
test
std
fcmovu
jecxz
in
lock
xchg
int
xor
icebp
cli
not
cmp
lret
out
repz
loopne
fneni(8087
shl
enter
and
mov
cmc
xor
int3
xor
repnz
lock
loope
jmp
hlt
out
test
call
loop
xor
divb
lret
in
stc
jmp
idivb
rcr
sarb
lock
rcl
jecxz
int
lret
sar
jmp
xor
out
cmp
xor
cli
test
sar
in
orb
std
in
xchg
rol
jmp
clc
shr
in
hlt
fldl2e
cmp
shr
mov
mov
fucomip
xlat
bnd
hlt
hlt
cmp
icebp
jecxz
xchg
lea
mov
aad
xor
cli
aad
int3
out
cmp
jecxz
loope
fsub
jmp
ljmp
rcl
jmp
cld
into
cmp
hlt
repz
jmp
in
idiv
mov
repz
repz
cs
repnz
repz
mul
ret
fildl
ror
in
divl
int3
ss
shrb
rcr
in
aaa
fdiv
aad
cld
cld
mov
cmc
ds
std
fdivr
xor
jecxz
je
xor
add
jmp
rol
sarl
rcl
mov
adc
ds
jl
xor
out
clc
leave
jecxz
rcl
lock
incl
movl
ret
test
lret
ds
int
aaa
shl
lds
in
shl
loop
shr
cmc
call
out
stc
hlt
out
shl
jmp
out
out
xchg
lret
jmp
aad
out
loop
xor
push
int
fldl
cmp
incl
mov
cld
into
sub
ss
repnz
loope
ss
cmp
test
clc
mov
test
or
cs
lret
cmp
idiv
sti
shl
lock
cmc
mov
mov
mov
lock
aad
rol
xor
aam
cmp
push
cli
cld
cmc
fiaddl
call
shl
jecxz
icebp
cmp
cmp
in
hlt
sarl
xlat
xor
loope
fcmovbe
xchg
call
into
cld
jmp
rcl
call
call
loope
fcmovu
cmc
neg
decl
std
call
shl
cli
cmc
aaa
aam
shr
ret
div
adc
mov
loope
in
lds
xor
iret
repnz
leave
lret
aad
lret
fdivrl
aam
loope
ret
mul
mov
lock
xchg
fsubrp
xor
cmp
rcl
aad
lock
out
std
in
jmp
fnsave
xor
aas
cmp
ret
sti
jmp
repz
int
shl
repnz
clc
stc
shl
icebp
cli
cmp
sti
sti
cli
iret
in
loopne
lret
xor
ljmp
sarl
cmp
fnstsw
sarb
in
les
xor
into
xor
icebp
fxch
idiv
loop
shl
addl
xchg
ror
into
enter
sub
cli
hlt
fidivl
shl
cld
cmp
rcl
in
not
xchg
loop
out
std
out
roll
shlb
fpatan
into
int
jecxz
loop
cmp
aad
in
out
std
loopne
xchg
lds
leave
jmp
cmc
sarb
int3
fidivrs
rol
cli
call
leave
in
ljmp
icebp
repz
int3
cmp
std
iret
cmp
hlt
not
call
cld
aad
mov
xchg
incb
shrb
vcvtdq2pd
enter
loopne
cmc
test
sti
aam
in
mov
ljmp
lret
repnz
shr
out
call
std
out
ret
jmp
shr
hlt
clc
not
lret
icebp
into
into
cmc
aas
xor
out
lock
repnz
fcmovnbe
loope
xlat
shl
sti
test
fildl
repnz
aaa
int
cld
std
cmp
sti
sti
std
ret
out
sub
shrl
xor
stc
std
cmp
iret
iret
repnz
jmp
hlt
xlat
fcmove
in
addl
shlb
in
aad
fcomp
fiadds
imul
filds
loopne
decl
out
neg
in
aaa
call
out
xlat
fsub
fsubp
jecxz
mov
mov
out
call
loope
fsubr
out
cmp
repz
aam
test
loopne
mov
cli
std
mov
fiadds
icebp
xor
icebp
aam
stc
repnz
hlt
hlt
aas
mul
vmovq
ffree
div
mov
loopne
fldl
xor
fnstenv
shr
rol
loopne
into
adc
cli
clc
enter
in
jecxz
mov
cmc
rcl
pushl
cmpb
cmp
xchg
lock
int3
in
sti
cmp
jmp
fucomp
stc
std
fldl
lock
in
jmp
cld
xchg
ljmp
hlt
jmp
cmp
lock
ret
hlt
leave
out
ror
mov
lret
lret
ret
lds
rcr
jmp
fcom
ret
clc
cmp
cli
jecxz
mov
shll
int
int3
stc
sar
leave
aad
cmp
in
sti
aam
icebp
call
in
xchg
roll
out
ret
aam
leave
fnstenv
lock
fstp
loopne
aad
clc
call
leave
incb
loop
call
out
int3
cld
int
cmp
fyl2x
repz
sti
enter
iret
add
test
hlt
in
out
cmp
out
clc
fcomi
iret
repz
xor
adc
xlat
test
fsts
jmp
ret
rcl
lret
fsubr
ror
enter
test
call
in
fisttpll
repnz
cmc
das
clc
in
jmp
mov
jmp
iret
aad
aad
push
or
daa
in
jg
add
sarl
repz
repz
xchg
fst
test
in
sbb
repnz
repz
sti
fcmove
rcr
div
loopne
out
cmp
lret
fmuls
in
std
mov
in
rcl
sti
cmc
cld
into
cmp
std
std
xchg
jecxz
xchg
xor
xlat
hlt
icebp
enter
out
lret
xor
cmp
fstp
ret
hlt
hlt
cld
lret
loop
mov
jecxz
cmc
lret
aaa
aam
hlt
hlt
cmp
ret
xchg
lock
in
call
rol
iret
xor
icebp
cld
cmp
cmp
sarl
mov
xlat
call
out
in
hlt
call
jmp
lret
sti
jecxz
aam
addl
cli
std
jmp
cmc
loope
ret
cmp
aad
cld
sti
cld
aam
repnz
cmp
test
loopne
test
in
fsubp
xor
cli
lret
jmp
cmp
cmp
into
aas
mov
jmp
call
cld
int
jecxz
shlb
cs
out
lock
aad
fcmovnbe
rolb
loop
nop
fcomip
out
out
rcr
xlat
out
sti
fstp
not
aad
xlat
cmpl
mov
loope
std
cld
jmp
loop
aam
aam
aam
loopne
repz
sti
call
loop
mov
xchg
rorb
repnz
hlt
cmp
lret
fucomi
fcom
cmp
xchg
in
fisttpll
xchg
rolb
cli
int
jmp
xor
shr
rolb
lds
mov
out
sti
shr
repz
iret
in
fdivrl
cmp
aam
fsub
ret
xchg
or
loopne
in
aaa
out
aaa
call
icebp
ljmp
cmp
lret
fcmovbe
jmp
jecxz
aam
xor
jmp
in
icebp
cmc
fbstp
sti
aam
loopne
sbb
addl
out
iret
icebp
fcos
stc
neg
sarl
in
test
out
shl
ret
shl
jecxz
sar
fisttps
jmp
aaa
fdivr
std
repz
repnz
cmp
sarl
shl
leave
xor
xor
aaa
shr
int
stc
aad
ljmp
int
xlat
fcoml
xchg
aam
div
xor
repz
hlt
jmp
loopne
into
fsubr
repz
jecxz
movl
cmp
hlt
out
fprem1
jmp
loope
in
xor
not
xchg
fneni(8087
in
in
repz
xor
cmp
shl
lret
cld
clc
in
fsubp
cld
xchg
jecxz
fucomi
ds
xchg
in
xor
loope
in
shl
leave
ljmp
mov
loopne
sub
fmulp
iret
in
aaa
in
cmc
xor
lock
stc
cld
clc
aad
bnd
fiaddl
loop
xchg
or
shl
test
fprem
rol
jecxz
lret
rcl
xor
jmp
cli
cmp
loope
loop
loopne
mov
in
fucomip
lret
clc
out
fsub
enter
clc
sub
fnstcw
loope
lret
cmp
cld
lret
loop
sti
lret
aaa
leave
imul
cmc
xor
in
out
or
rcl
out
sub
push
fildl
lock
jmp
shl
cmp
aad
loopne
mov
ret
addl
div
stc
repz
out
in
jecxz
aad
lock
enter
fsubrp
in
repnz
int3
fyl2xp1
leave
ror
call
fdiv
test
cli
lret
leave
mov
lret
int3
iret
call
lock
in
aam
rcl
aad
clc
int3
loop
enter
jmp
imul
cmc
xor
int
cmp
aaa
fcmove
fstp
sarb
fdivr
out
mov
jmp
jecxz
add
clc
xor
out
leave
in
sti
cli
clc
fxch
roll
xlat
int3
jmp
xchg
aad
lret
jmp
xor
sti
call
out
fsubr
mov
jmp
mov
mov
iret
lret
std
enter
cmc
loopne
cmp
xchg
aad
out
cld
out
out
mov
cmp
xlat
jmp
fucomp
sar
icebp
fmul
shlb
aas
faddp
rorb
call
repz
imul
iret
cmp
loope
xchg
loopne
fldl
lock
out
cmp
iret
ljmp
fadd
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
pushf
movsl
sub
std
add
mov
sbb
leave
out
fucomip
fsubrp
repz
ljmp
cmp
shl
cmp
in
in
lea
jmp
xor
lds
ror
in
repnz
stc
rol
rcl
out
loope
ret
sbb
in
std
into
shr
xchg
ret
repz
lret
sti
aam
rcr
repz
fucomi
neg
lret
and
out
loopne
xor
out
out
cli
rcl
cld
hlt
aaa
vshufps
rolb
icebp
mov
sbb
in
in
enter
aaa
lret
cmc
repnz
flds
aad
fimull
leave
cs
in
fsubr
out
jmp
icebp
lock
aam
mov
leave
sti
movb
loope
ss
icebp
lock
out
ss
fsub
aam
fneni(8087
fimuls
shlb
shlb
xor
fcmovbe
sarl
cmp
repnz
repz
stc
int
in
cld
fildl
in
cmp
rcr
aas
cmp
rcl
lock
into
repnz
ljmp
addb
cmc
ss
icebp
xchg
cld
xchg
clc
cli
jmp
in
faddl
ljmp
repz
neg
cmp
test
fucom
out
fucompp
xchg
lock
iret
iret
xor
hlt
stc
idiv
rcl
mov
loop
cmpl
icebp
out
sar
aad
out
loopne
out
cld
xor
mov
cmpl
clc
sti
fidivrs
cmp
in
fucomi
fadds
out
iret
out
cs
in
stc
cmp
shl
jecxz
loope
out
and
mov
leave
cld
adcl
xor
enter
cmp
loope
sti
sar
loopne
fadd
loop
in
fmul
sti
int
in
out
leave
jecxz
sub
clc
lret
int3
jecxz
sar
fildl
fisttps
out
repz
in
xor
out
out
fdivr
cli
fcmovnbe
in
sarb
xlat
fdivr
fadd
ljmp
loopne
lret
jecxz
cmp
cmp
repnz
aam
in
clc
fsub
rorl
loop
sub
test
loopne
in
xor
xlat
shl
repnz
ffreep
fdivp
ds
fld
jmp
into
ret
loop
ljmp
sar
cli
std
not
ret
loope
cmc
lret
add
fldlg2
out
ljmp
divb
cli
aaa
cmp
loope
in
fcmovnb
aas
icebp
jmp
loopne
cld
int
mov
shl
ret
ljmp
loopne
cmp
rolb
jecxz
mov
loop
xor
cmp
ffree
jmp
fistpll
stc
xchg
loop
xchg
xor
in
fsubr
xor
repnz
ret
lock
in
leave
out
enter
std
xchg
in
lds
lret
sarl
cmp
test
loop
enter
mov
out
int3
loop
hlt
aam
jecxz
in
repz
ret
fdivrs
idivb
stc
lock
sbb
fucomp
mov
div
sub
call
stc
aas
cmpb
cmc
jecxz
fcos
cld
mov
orl
ret
ljmp
shl
shl
adc
cmc
fcomi
test
lret
jmp
in
xor
aad
ds
ffreep
ds
flds
std
cld
into
xchg
int
aad
ljmp
loope
out
out
out
aas
fcomp
std
enter
out
int
ror
hlt
out
in
out
lret
cmp
loopne
neg
ds
test
and
xlat
decb
into
xor
in
ret
jecxz
bnd
fstpt
hlt
cmp
shl
in
mov
icebp
cld
aam
imul
in
cs
into
std
shl
ss
in
flds
clc
int
jecxz
cs
jmp
ret
int
cmc
enter
aas
icebp
mul
fdivp
loopne
ret
fsubr
int
iret
std
aam
ret
out
ljmp
loopne
out
jecxz
loop
cld
testl
xor
jmp
cmc
cmp
aas
jmp
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
imul
jl
add
ffreep
ds
sarb
les
into
out
out
in
enter
cli
ljmp
fisttpl
cmc
sub
in
out
jmp
das
lock
fcmovu
icebp
xor
fsubr
not
shl
shl
cld
enter
into
les
out
lret
jmp
call
neg
sub
lret
out
cli
adc
cmc
aad
lret
in
cmp
aad
fdivr
sarb
lock
and
out
test
jmp
addb
xor
out
out
fmul
leave
cmp
xlat
repnz
ds
cmp
lret
clc
loop
mov
xchg
fsubr
bnd
cmp
xor
cmp
rol
aam
roll
lds
repnz
xor
hlt
in
cmc
cmp
repnz
shl
addb
stc
in
fsubp
cld
lret
in
ret
in
fcom
stc
ljmp
fidivrs
roll
out
sub
lds
cmp
ret
fst
aam
rol
ret
jmp
std
out
xchg
int3
cmc
shl
xor
repz
xor
fidivrl
cli
sar
std
cmp
cli
mov
loope
in
enter
lret
call
fmul
ljmp
xchg
cmp
in
int3
in
loope
xchg
int3
loopne
stc
fcmovnu
aas
sarl
aas
ret
xchg
or
xor
mov
lret
xor
rcl
ds
in
enter
out
xchg
std
ljmp
iret
into
call
rol
cmpl
jecxz
jmp
in
iret
mov
xlat
icebp
in
out
aaa
cld
jecxz
lret
sar
icebp
rorb
loop
std
out
mov
fcom
fidivl
cld
lret
in
ds
std
out
test
rcr
sbb
jecxz
jmp
shl
aaa
in
jecxz
enter
shr
ret
ret
cmp
mov
mov
mov
xchg
ror
lock
shlb
out
out
lock
in
sarb
fdivr
imul
cld
fldl
xlat
das
jmp
call
cld
lock
aad
ds
fstp
ds
out
jecxz
orb
enter
repz
call
cmc
sarl
not
rol
ljmp
xchg
fcmovbe
call
test
xlat
repz
lock
ds
jmp
loope
in
addb
repnz
cmp
xlat
cmp
std
cmp
iret
hlt
fdivrp
clc
cmp
jmp
fcomp
loop
xchg
sub
xchg
call
out
aam
fnstsw
shl
add
call
loopne
call
int3
lock
lret
in
xlat
push
ret
idiv
std
ret
hlt
out
fprem1
enter
adc
in
ret
clc
in
xor
hlt
ds
xor
shr
enter
leave
in
mov
sub
xor
repnz
cmp
repz
ret
cmp
in
out
jecxz
jmp
int
iret
int3
icebp
repnz
fucomip
in
aad
out
xchg
aad
mov
in
sti
leave
enter
repnz
lret
cmp
xor
idivb
shl
lock
testl
rcl
repnz
fstpt
int
repnz
in
repz
mul
fcomp
fimuls
into
enter
xlat
stc
jmp
out
aaa
cmp
in
lds
ret
sub
leave
xor
xor
cmp
shr
aad
sti
aam
fmuls
lock
aam
cmp
shll
cmc
ret
fdivrl
out
cld
xchg
fsubr
cld
adc
lock
repnz
out
aam
fnstsw
fidivrs
cmp
sar
jecxz
jecxz
std
inc
aas
lret
icebp
int
lret
test
ljmp
std
std
ss
cmp
clc
filds
ror
call
jmp
xchg
xor
test
fmul
cli
fxch
ljmp
xchg
in
test
xchg
jmp
in
jecxz
lock
icebp
cmp
fxch
out
jmp
add
jmp
jmp
enter
fstp
fstp
adc
push
lea
std
add
test
not
aam
test
out
mov
xlat
jmp
clc
out
ss
loope
loop
and
sti
incl
in
int3
nop
lret
xor
out
repnz
lock
repz
ret
faddp
xlat
cld
in
xchg
std
in
jmp
lock
std
fsubr
cmp
in
sbb
stc
rcl
std
rol
cli
stc
cmp
mov
xchg
adc
rcl
lret
xor
clc
repz
cld
in
cmp
out
cmp
cmp
enter
std
int3
or
cs
int
into
icebp
cmp
int
sarl
fadd
xor
clc
fcmovnb
fucomi
in
decl
in
xor
std
lock
aas
fdivr
cmp
xor
test
jecxz
int3
icebp
xchg
int3
in
jmp
in
idivb
loope
lret
iret
fadds
call
test
sbb
ror
cmp
sti
lret
int
clc
jmp
sbb
enter
ljmp
xchg
imull
leave
cmc
stc
out
ds
iret
rolb
jecxz
ljmp
mov
aad
fdivp
rcl
cmp
fdivrs
fst
int3
out
roll
cld
iret
jmp
nop
int3
repz
shll
shl
shll
iret
cmp
testb
out
rol
loopne
rcll
xlat
out
repz
into
out
lret
fsubr
aam
lret
in
filds
std
leave
idiv
sti
jmp
test
xor
sarb
xor
cmp
cmp
cmc
loop
ds
jmp
sti
std
repnz
icebp
jecxz
xor
clc
xor
aas
xor
repz
sti
mov
lret
xchg
shl
into
leave
rcl
lret
leave
xlat
in
sti
int
sti
out
rcr
div
lds
cld
lret
rcll
ror
into
cmp
shr
rol
xlat
cmp
lds
enter
orl
ret
idivl
cs
iret
add
sub
fildl
in
ljmp
int
lret
lock
aas
ror
in
xlat
cmp
cld
int
mul
mov
test
popl
call
fucomip
cmp
cmpl
xchg
enter
and
repz
in
vmovq
das
sti
fidivrl
fcmovne
out
xor
shr
shl
clc
loope
out
lea
stc
in
loopne
out
sti
leave
aam
lret
cmc
std
xor
loop
out
rcl
xchg
cli
in
repz
shll
jmp
cld
clc
jmp
loop
repnz
flds
xchg
xchg
in
ss
repz
shr
in
cmc
sarb
ss
in
fiaddl
jmp
mov
in
clc
out
das
out
repnz
imul
cmp
adc
loopne
in
in
xchg
xor
lds
fyl2xp1
ror
icebp
cmc
cmp
xor
rcr
test
aad
leave
in
lret
xchg
or
fdiv
sarl
cmp
aad
aad
cmp
loop
xor
lret
les
rcl
fsubr
out
cmp
loope
xlat
lds
lock
sub
icebp
orl
rol
xor
fcmovne
into
into
clc
sarl
fbstp
into
jmp
fsubr
in
in
jecxz
xor
out
cs
shl
lret
ds
aas
or
xlat
call
cld
ljmp
stc
repnz
ss
repnz
add
icebp
cld
aam
mov
jmp
xchg
sub
leave
icebp
lock
cli
std
aas
lock
fcmovu
hlt
icebp
lock
addl
out
in
or
fsub
out
stc
cmp
shl
fidivrl
iret
cli
repnz
ds
and
jmp
mov
decb
xor
xlat
cmp
cmp
test
ds
cli
jmp
iret
in
orb
ds
fcomp
icebp
int3
iret
cmpl
test
xlat
sti
mov
in
mov
jmp
int3
sar
xlat
sti
rcl
cmp
cli
fiaddl
mov
fucomi
fadds
shr
out
sub
repnz
repz
jmp
aad
rcr
fstp
sbb
idivb
std
add
into
int3
fiadds
in
xchg
mov
xchg
addl
repnz
int3
shl
sti
sbb
jmp
decb
incl
jmp
ss
stc
cmp
clc
int3
in
test
les
lret
jecxz
loop
repz
ret
out
fcomp
cmp
ret
stc
rcr
loop
fadds
in
out
iret
repz
aad
aaa
ss
xlat
hlt
xor
fdivrs
ds
ret
ret
faddl
shl
repz
repnz
iret
aam
sarl
shr
fiaddl
into
in
enter
call
shr
cmp
xor
cli
fldl
cld
lret
fdivr
xchg
xchg
xchg
into
into
hlt
in
out
cmp
sar
cld
fcmovnbe
clc
jecxz
call
faddl
loope
loop
repz
fcmovbe
leave
std
xor
div
cmc
fst
ret
out
and
loop
xchg
repnz
les
xor
fucomi
loope
into
rcr
fcomp
loope
into
icebp
jmp
jecxz
mov
in
enter
xor
repnz
sti
loope
rol
aam
testl
lret
shrl
cmp
cs
leave
jmp
fcmovnb
decl
mov
nop
sub
cmc
into
ret
xor
cmp
cmc
fcmovbe
rcr
cmp
stc
imul
int
out
xchg
test
aaa
fdivl
aas
neg
ds
in
shl
repnz
fnstsw
addl
test
cs
jmp
ret
ror
sarl
filds
test
mov
sti
fninit
xchg
mov
lret
cmp
call
loop
hlt
fsubp
jecxz
xlat
hlt
ljmp
in
jmp
int3
iret
xor
ror
divb
fdiv
aaa
in
ret
fldz
jecxz
loop
aas
leave
xchg
ffreep
xchg
shl
jmp
xlat
in
xor
int
fmul
shr
lret
cmp
shl
and
in
leave
icebp
xchg
mov
in
out
lret
aaa
ss
cmp
aam
int3
rcl
out
out
out
test
int3
leave
mov
xchg
sub
in
sti
iret
lock
filds
sti
call
cli
cmc
ror
mov
xor
ds
xor
out
neg
fadd
sti
jecxz
incl
iret
loopne
cmp
fidivrs
leave
ljmp
clc
mov
in
xchg
fimuls
lret
jmp
xor
sarl
cmp
cmp
ffree
addl
repz
int3
call
xlat
aam
repz
repz
lret
ljmp
std
fdecstp
in
cli
and
in
lret
shll
out
cmp
in
jmp
loope
cld
sub
in
fdivrp
xlat
in
mov
ss
int3
mov
xor
fstpt
fldl
decb
out
int3
xor
clc
aad
xor
repz
aas
cmp
fucomp
lret
leave
icebp
mov
shll
lds
shr
cmp
enter
int
cmp
incl
lret
loopne
hlt
cmc
iret
lock
cmp
rol
xor
lock
std
xor
repnz
loope
loopne
out
jecxz
cld
lea
leave
cld
jmp
cmp
loope
aad
in
sti
in
lea
rcr
lret
icebp
int
cmp
fidivrl
aas
icebp
aaa
filds
fucom
xchg
mov
in
mov
in
cmp
in
call
xlat
into
aam
shl
adc
out
test
out
lock
int
xor
lock
cmc
test
fcos
jmp
out
icebp
lret
mov
jmp
repz
repz
in
cmc
shl
sti
ffree
lret
mov
ficoms
int3
int3
ss
out
enter
repz
in
aas
hlt
jmp
fmull
mov
shrb
stc
std
das
cmp
cmp
clc
test
clc
sti
testb
sbb
icebp
addb
call
or
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
push
mov
leave
or
jl
cmp
repz
in
jmp
in
in
nop
sub
ljmp
call
shl
repz
flds
mov
nop
out
in
ror
ret
lret
cmc
lret
cmp
in
in
dec
test
cli
mov
neg
cmp
fxtract
enter
cmp
out
loop
sub
out
lret
ret
in
aam
out
aad
fdiv
repz
sar
fucom
mov
xchg
jmp
enter
iret
cmp
repnz
out
rcr
std
repz
flds
out
icebp
test
lret
jmp
fcmovnu
in
xlat
cmp
fucomi
ljmp
mul
fcom
ffree
popl
xchg
hlt
rcl
into
das
pushl
lret
mul
repz
test
cld
aam
int
or
loopne
test
repz
xor
xor
jmp
mov
fdivp
repnz
xlat
test
sti
fcmovnu
std
mov
out
out
ret
cli
loopne
shr
xor
cmp
in
clc
lret
fdivrl
out
test
cmpb
lds
loop
or
jmp
in
aad
jmp
sti
cmpl
aad
fdiv
fcom
lret
shl
icebp
ljmp
aad
xor
in
out
int
enter
loop
cli
repz
sti
jmp
jmp
orb
jmp
stc
aam
cmp
stc
rol
cli
repnz
mov
leave
lock
call
cmp
xor
ret
out
sbb
ret
ffree
test
lret
mov
in
lock
xlat
xor
out
in
rcl
in
stc
sar
repz
and
stc
loop
or
mov
xchg
mov
mov
ss
clc
rcl
cmp
cmp
cmp
filds
in
fsubr
int
jmp
das
ret
in
aaa
lock
lret
cld
rol
aam
test
movl
aad
clc
leave
xor
lret
int
call
test
loopne
fildl
lock
loope
in
xlat
clc
out
out
repnz
int
out
out
mov
test
fucomip
rcl
in
cmc
ret
iret
xor
out
cmp
shl
cli
clc
lret
fsqrt
leave
in
xchg
loope
icebp
aaa
rcl
out
in
sarb
call
jmp
xlat
sar
repnz
hlt
out
loop
in
fimull
hlt
rol
les
int
out
lret
cmp
cli
shl
and
stc
rorl
in
out
loop
out
rcl
fsubr
sti
cmp
jmp
addl
jmp
lret
call
clc
xor
repz
adc
out
fadd
xor
call
popl
ds
lret
cmc
fidivrl
hlt
repz
cmp
xchg
addl
call
aad
fxch
repz
fdivrp
hlt
inc
sbb
cmc
out
mov
std
dec
cld
out
ficoml
cmp
cmp
iret
clc
iret
fldln2
int
loop
cli
loop
dec
lret
jmp
ror
out
hlt
sub
stc
jmp
or
repz
fucomi
jmp
loopne
loope
int3
ds
lock
int3
jmp
adc
fdiv
in
movl
int3
shl
aam
aad
jecxz
clc
hlt
iret
out
aas
cmp
loopne
out
cmp
rcr
cmp
decb
mov
lock
jmp
out
xlat
cmp
clc
rcl
xchg
neg
fucom
in
jmp
call
in
jmp
ljmp
aam
sar
out
stc
rcl
rorb
lret
fdivp
lret
cmc
jmp
fdivs
jmp
loope
hlt
in
loope
jecxz
clc
call
cld
nop
loopne
icebp
cmc
cmp
lock
sar
fdivp
and
xrelease
enter
in
in
xor
cmp
in
in
and
jecxz
mul
cli
hlt
ljmp
sbb
lret
xchg
rol
out
loop
fnstenv
repz
loope
repz
fistpll
call
call
xchg
iret
jmp
enter
repz
stc
cmp
or
int
repnz
in
rcr
fucomi
in
clc
repz
fsubr
xor
loop
sub
lret
leave
leave
loopne
hlt
repz
cld
cmp
test
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
and
mov
jg
cmpsb
add
in
rorb
loopne
ret
out
fdecstp
sar
fcmovb
lock
test
repz
shl
out
aam
iret
std
out
stc
out
iret
int
into
stc
xchg
test
sub
lret
loop
in
shl
jmp
div
repnz
aad
aas
xchg
mov
fisttpl
lret
stc
cmp
fcmovbe
fdivrp
rcl
cmpb
cmp
out
test
in
jecxz
in
loope
call
ljmp
cmp
sti
ret
call
out
repz
ret
xor
sub
out
into
cmp
cli
cld
aam
cmp
loopne
aam
icebp
xchg
in
stc
les
cmp
lret
icebp
hlt
lret
repnz
in
loope
ljmp
xchg
loop
shl
aad
ljmp
sbb
xchg
enter
xchg
jecxz
mov
out
leave
iret
shl
lret
cli
aad
cmp
cmp
fdivr
out
fsubp
cli
out
out
mov
rol
xor
rcr
std
xor
fucomip
repz
test
jecxz
clc
cld
decl
xchg
mov
in
ss
xor
sub
fsub
loope
xchg
cmc
xchg
test
out
ljmp
into
into
addb
mov
loopne
mov
loopne
iret
xlat
xor
into
leave
into
call
fistpll
loop
loopne
jmp
sub
ror
orl
call
jecxz,pt
repnz
filds
mul
std
iret
icebp
fsubr
out
out
xor
cmp
rcr
rcr
hlt
out
aam
hlt
hlt
stc
call
int3
mov
bnd
out
fcmovb
hlt
loopne
lock
shl
cli
cld
call
out
sti
fmul
out
mov
in
shr
loop
ret
xor
aas
aaa
test
fstp
fsubrp
rcr
neg
in
xchg
aas
in
cmp
shl
iret
lret
out
cmp
cmp
in
loop
fisttpll
cld
lret
clc
jmp
out
ret
xlat
sbb
dec
orl
repnz
cld
cmp
in
loope
cmp
sbb
inc
xlat
ret
xchg
icebp
nop
out
sbb
in
xor
enter
ss
int
test
cli
sar
neg
hlt
lret
mov
out
ljmp
jecxz
out
aam
enter
in
rcl
loopne
jmp
mov
std
mov
jmp
jmp
rcr
test
aad
fsub
jmp
ror
fdivr
rcr
xchg
vextracti128
out
fcomip
fsubrp
repnz
div
rcr
rcr
lock
out
icebp
iret
loop
hlt
int
aaa
xor
and
cmp
call
fsqrt
addb
out
sarl
out
aas
lock
int
xlat
into
cmp
sar
mov
enter
cmp
xchg
filds
icebp
lret
leave
int3
cmp
in
xlat
rol
xchg
aam
std
mov
int
xchg
xchg
int
loope
out
in
fcmove
cmp
lock
repnz
leave
addb
fucomip
mov
aad
leave
cli
cld
out
loopne
loop
inc
cli
sbb
mov
in
mov
ror
ret
stc
cmp
ret
xchg
in
call
cmp
test
into
jecxz
shl
aaa
call
xor
out
cld
in
iret
jecxz
mov
lret
idiv
fmull
ret
icebp
xor
fcomp
stc
lret
fsub
testb
cli
cmp
hlt
aas
mov
mov
clc
aad
enter
ss
clc
in
out
shl
push
vcvtdq2pd
xchg
bnd
shr
ror
rcr
fcmovne
aas
lock
test
ljmp
cld
loope
cmp
fcmovnb
repz
std
xor
cmc
clc
fdiv
enter
jmp
lret
hlt
in
cld
cmp
cmp
fiaddl
sar
in
in
loope
decl
sub
out
icebp
cmp
cmp
cmp
std
and
repz
repz
icebp
out
repz
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
mov
jg
cmpsb
add
rcl
ljmp
rol
in
ret
xor
rol
in
in
in
enter
enter
aad
stc
lock
lock
lret
out
test
sbb
test
dec
mov
cmc
das
ret
jmp
cmp
loopne
out
icebp
test
ffreep
in
mul
fsts
call
cmp
in
aam
fsubr
in
ds
sar
test
int3
ficoml
rcr
cmp
neg
cmp
cmc
sti
xlat
fidivrs
test
hlt
in
int
test
out
mov
loop
cmp
idivl
in
xchg
loopne
in
lds
mov
ljmp
cli
lret
cmp
aas
fsub
std
int3
cli
fcmovne
call
xor
xor
iret
xor
lret
call
idiv
repnz
mov
mul
out
in
loop
lea
stc
stc
xlat
icebp
call
div
rcr
ds
clc
loopne
leave
rol
mov
icebp
into
mov
aam
fcomp
hlt
cmp
cmc
out
cmpb
icebp
rcr
loopne
stc
test
out
jmp
mov
xor
leave
clc
sti
call
loopne
ret
cli
mov
xlat
movb
cmc
loope
out
clc
cs
std
test
incl
aad
in
in
nop
ror
shl
jmp
jecxz
iret
xor
repnz
cmp
iret
jecxz
or
stc
sti
sti
add
les
repnz
lock
loop
cmp
cmp
fdiv
repnz
lret
test
not
rcl
sti
iret
jmp
cmp
fnstcw
ss
fcom
cli
test
repz
int
mov
repnz
xor
iret
xor
icebp
into
sbb
ds
and
int3
fisttpl
in
into
ljmp
cmc
not
cld
mul
aad
sarl
in
fsubp
fimull
in
lea
xor
in
xor
xor
cmp
ss
jmp
repz
ret
jmp
xchg
clc
sti
out
cmc
mov
neg
out
repnz
cmp
std
not
hlt
fadd
jecxz
aad
cli
cld
or
fstp
out
call
int
aaa
fdivrs
cld
in
hlt
in
repnz
ds
fsub
fchs
ret
xchg
xlat
ljmp
rcl
lock
fmul
cmp
cmp
shr
and
mov
out
out
test
out
xor
cmp
lret
repnz
aas
aaa
test
rcr
std
out
fsubp
fmul
ficoms
in
xor
loop
fmul
enter
icebp
cmpl
add
aam
add
mov
enter
out
icebp
jmp
fcmovbe
sarb
mov
stc
mov
lret
into
mov
jmp
cmp
fmul
leave
in
cmp
aas
xor
xchg
sti
icebp
movb
ss
enter
xlat
aaa
xor
loope
ffree
in
sti
in
popl
cmp
out
repnz
cmp
div
jecxz,pt
adc
jmp
in
mov
cld
xchg
mov
mov
shrb
out
std
xor
lock
fisttpl
loopne
xchg
fcomip
lock
into
cmp
xor
into
loope
aad
cld
in
incb
leave
in
mov
mov
cmc
out
in
into
stc
ljmp
inc
out
icebp
in
clc
test
jmp
icebp
std
mov
xor
aad
jmp
aas
in
out
fcmovnb
out
test
hlt
fsubr
mov
orb
aam
fcom
shr
ds
flds
cli
mov
mov
xchg
fisttpll
out
fucom
cld
xor
fcomp
lock
mov
int3
leave
call
mov
int3
ret
loope
int3
in
aam
xor
in
shl
in
cmp
addb
ljmp
jmp
jmp
ss
aad
aas
jecxz
fsqrt
cmp
fsubrp
sti
fcom
and
rcl
shl
cmc
out
xor
shr
iret
xor
sti
flds
lret
mov
out
int3
jmp
iret
sti
leave
jmp
fchs
xor
std
rcl
stc
shr
cli
lret
jecxz
stc
loopne
std
out
lret
faddp
sub
div
leave
cmp
lea
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
jns
rcl
push
xchg
jg
cmpsb
add
rol
test
addl
test
mov
fmulp
loope
xor
aad
cmp
aad
cmp
std
fnsave
aad
sarl
enter
mov
out
in
ljmp
cld
in
or
sar
sub
xchg
loope
repnz
aas
out
sub
aaa
out
leave
xlat
int3
int3
ret
ds
xlat
xchg
jecxz
in
adcl
xor
ds
ret
sub
hlt
xlat
call
fstl
cli
icebp
in
fcmovu
fsubp
cmc
lret
dec
rcr
xchg
ljmp
in
into
sar
lret
xor
stc
in
ror
into
cmp
cmp
in
into
aam
loop
aam
clc
iret
xor
aaa
cmc
in
sar
shr
adc
loop
cmp
xchg
in
jmp
mov
std
out
mov
xor
fdivrs
fcmovb
jmp
leave
aam
cmp
fcom
repnz
mov
mov
int
lock
int3
out
loope
stc
cli
sarl
out
cmp
xlat
ljmp
ret
lret
leave
fstp
lea
shl
xor
in
fcmovne
repnz
cmp
cmp
fadd
movl
out
rcl
cmc
repnz
ror
jmp
sar
std
test
cmp
add
fcmovu
clc
out
out
in
fdiv
out
ror
icebp
into
xor
repnz
hlt
loopne
clc
stc
mov
rcr
jmp
jecxz
jmp
leave
int3
neg
cmp
cmp
rol
sbb
fsubp
cmp
xor
int3
xor
aaa
lret
rcr
lock
in
cld
out
ljmp
ss
jmp
out
icebp
cmp
fmul
test
aad
cmc
loopne
shl
mov
test
xor
xor
repz
call
cli
shl
aas
stc
lock
roll
mov
enter
aam
hlt
jmp
cmp
fcom
cmp
aad
faddp
clc
mov
loop
loop
shl
std
shr
aad
ds
in
test
aam
ret
jmp
addl
out
nop
mov
in
repz
das
cmp
adc
aam
fcomp
cmc
fmull
fimuls
ret
aad
jmp
int
fdiv
fidivrl
cmp
in
repnz
xchg
leave
fdiv
int
lock
idivb
out
test
in
roll
out
fstp
cld
sbb
out
sub
lret
cmp
cli
fsubrp
cmp
aaa
cmp
std
out
xchg
xchg
nop
loope
test
jecxz
fsub
fcmovb
int3
out
shr
fldl
xchg
hlt
cmc
ret
in
jecxz
mov
icebp
int3
ret
aaa
ljmp
clc
xlat
in
jmp
lret
in
int3
xchg
mov
jmp
leave
fadd
lock
out
int
ds
addl
ret
loope
fcmove
enter
into
sub
out
cmp
in
fcomip
idiv
call
div
mul
in
fcmovne
jmp
mov
xor
in
cli
iret
shr
std
cmc
fucomi
jecxz
ds
into
test
cld
test
int3
shl
iret
into
out
repz
loope
ljmp
rcr
f2xm1
mul
xchg
in
fadds
ljmp
lret
cmp
jecxz
fcomi
aam
ds
call
les
xchg
xor
lret
cld
repz
cmp
clc
fcmovnu
repnz
lret
lea
jmp
iret
cmp
cmp
out
cmp
cmp
test
xlat
out
jmp
fmull
hlt
xlat
int
jmp
xlat
aas
out
jecxz
cli
test
lret
enter
fcmovnb
xchg
in
fsubr
std
lret
hlt
cli
rol
ds
shl
in
mov
mov
lret
fadd
fucomp
loop
xor
int3
fcom
iret
call
cli
rcl
mov
cmp
sti
jmp
in
icebp
jecxz
das
in
int
xor
aad
aas
loopne
lret
in
loope
in
fcomp
int3
std
xchg
int3
jmp
shl
cmp
fistpll
push
aam
call
xchg
fucomp
fmulp
mov
shr
cmp
repnz
out
cmp
into
lret
or
ss
out
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
pop
xchg
jge
mov
jg
cmpsb
add
in
stc
jmp
nop
fmul
cmc
mul
ret
hlt
shr
cmp
xlat
ror
cmp
cmc
repz
fadds
xchg
mov
rol
call
ss
cmp
sarl
hlt
jmp
cmc
cli
fcmove
mov
jecxz
hlt
into
xor
loope
ljmp
dec
ljmp
loope
jecxz
loop
in
dec
nop
loopne
repz
xor
not
cmp
lock
sbb
mov
in
in
iret
ljmp
enter
enter
rcr
loope
out
mov
fld
mov
sbb
repz
cmp
jecxz
jecxz
cmp
cmc
repz
fsub
fadds
xchg
out
in
enter
xlat
fdivr
in
sti
cmp
mov
clc
mov
sub
out
ss
sub
stc
cmp
enter
test
fisttps
xlat
clc
and
jmp
into
out
into
aas
int3
loope
icebp
out
fdivrp
jecxz
fcomp
fcmovnu
aad
fxch
ret
xchg
aaa
xlat
cmc
cld
fpatan
loopne
xor
cld
in
ds
rolb
clc
loope
out
mov
rcl
jecxz
hlt
in
lock
clc
sbb
ds
mov
xchg
cli
in
jmp
fsubr
mov
in
ljmp
rcr
fsubr
aas
into
add
cli
xchg
fucomi
nop
out
shl
xor
aad
aad
in
cmp
cmp
in
repnz
not
in
adc
iret
ficoms
call
cli
cmp
icebp
ds
cmp
in
ret
test
sub
addl
lret
out
leave
cld
sti
fidivl
fidivrl
div
stc
lret
lea
leave
mov
lock
ljmp
leave
ss
sarb
aas
lock
leave
leave
fcmovnb
add
orb
ss
mov
loopne
cmp
fdivp
sbb
fldl2e
lret
mov
cli
in
int
xchg
rcl
shl
fcmovne
cmp
aad
xor
cmp
rcr
ret
testl
lock
fsubrs
aad
sar
std
out
call
imul
out
loope
sti
inc
mov
call
int3
rcl
iret
jecxz
xor
in
in
mul
shl
clc
loope
loop
xchg
xchg
ljmp
loope
cmc
div
cmp
xor
in
rol
sbb
cmc
not
test
xchg
ljmp
rcl
in
repnz
in
cmp
jecxz
int3
in
clc
jecxz
fiaddl
fmul
fldl
clc
cmp
xor
in
loope
loopne
in
loope
fscale
test
mov
in
stc
test
ljmp
repz
out
sarl
idivb
in
leave
sar
loope
imul
jmp
xchg
imul
aad
repnz
out
out
cmp
hlt
sar
out
out
ret
in
out
inc
ret
xchg
cmc
shr
cli
shr
cmp
cmp
or
addl
sti
nop
loopne
ds
xor
aaa
xor
sar
aad
iret
cmp
jmp
and
filds
into
xchg
int3
repnz
in
in
sti
cmp
idivl
call
test
xchg
addb
out
test
sub
in
shl
in
xor
aad
into
clc
add
mov
loopne
sti
out
test
nop
out
icebp
cmp
leave
ss
rcl
aad
xor
rcr
cmp
mov
call
out
iret
fmull
das
shl
std
iret
stc
iret
fcmovnbe
xchg
sti
call
into
clc
ljmp
cmp
cld
leave
idivb
rcr
in
push
idivl
div
adc
mul
out
mul
mov
rcl
xchg
fsubrp
xor
sarl
repnz
lock
shr
mov
out
xchg
lock
cmc
sub
aam
cmp
lock
lret
xchg
repnz
jmp
in
sub
xchg
fsubrp
not
in
aad
out
into
out
cmp
cmp
out
fld
mov
add
testl
out
lret
lret
cmp
fucomip
cmp
in
test
ret
testb
sti
out
lret
nop
loop
shll
out
repz
aas
jecxz
loop
cmc
cld
out
cmp
fucomip
in
loop
xor
jmp
aad
rcl
fst
leave
pop
push
mov
jl
add
xchg
shl
div
loop
shl
lret
idiv
cmc
jecxz
cld
and
out
loop
jmp
fsub
hlt
repnz
xor
repz
neg
cli
aad
icebp
std
aam
fucomip
test
xchg
repz
xchg
xchg
in
stc
in
call
repz
ret
out
adc
cli
stc
lret
call
nop
xor
xlat
out
out
cmp
into
shl
xor
in
test
std
mov
lret
rcl
stc
ror
aad
mul
aas
xor
aas
in
adc
xchg
int
int3
iret
addl
out
xlat
int3
cmp
or
repnz
jmp
out
int3
rcr
nop
shr
das
shl
cmp
xlat
fstpt
out
loope
shll
fnstcw
cmc
rcr
hlt
hlt
sti
loopne
fucomip
lret
iret
aas
jmp
xlat
enter
cmp
jecxz,pt
jmp
in
ret
mov
mov
test
call
call
icebp
cmpb
fiadds
adc
fadds
lret
in
lret
sti
test
ss
in
sar
std
jecxz
fmulp
loope
test
ret
loop
stc
shl
ljmp
rol
inc
rcr
sti
mov
lock
into
shl
xor
xor
std
adc
cli
out
icebp
rcr
out
shl
das
sub
xor
enter
sarl
shl
stc
xlat
frstpm(287
aam
in
hlt
in
lret
mov
in
xlat
ret
fdecstp
xor
xor
test
std
xlat
repz
addl
xchg
aam
shr
vpsllq
cmc
fcomi
shr
repz
ret
loop
leave
int
ret
push
aas
in
out
in
shll
out
lret
aad
repnz
cmp
in
sar
lret
in
out
mov
xchg
xor
fcmovnbe
call
in
and
cli
sti
orl
mov
repz
rcl
enter
ffree
jmp
adc
fildl
movl
loope
sub
imul
xlat
cld
cmp
fcomp
fxch
push
rol
ftst
jecxz
fisttps
aad
jecxz
jmp
cmp
cli
iret
fcom
add
lds
leave
int
repz
and
jmp
in
ret
fadd
fucomip
ds
cmp
repnz
ds
stc
fsub
lock
shl
ret
into
xor
aaa
cmp
out
cmp
test
mov
jecxz
dec
ror
xchg
mov
jecxz
ljmp
hlt
mul
aaa
repz
int
lret
fucomip
adcl
hlt
lret
lock
cmpb
loop
pop
cli
xchg
int3
in
in
in
fsub
xor
cmp
aad
shl
shl
neg
repnz
xchg
stc
shr
cmc
xchg
ds
vmaskmovdqu
lock
lret
loopne
cmp
in
repz
test
out
xchg
int3
shr
test
in
xor
int
xlat
iret
icebp
xlat
clc
icebp
fdiv
jmp
std
in
out
repz
int
rol
int3
icebp
out
int3
fucomi
cmp
loop
aas
std
fucomi
in
loop
cli
clc
int3
jmp
in
ror
ljmp
cmp
repnz
sbb
leave
lds
in
and
loopne
cmp
divb
in
cmp
cmp
mul
jecxz
jmp
xchg
lock
leave
divb
jmp
sarl
stc
int
flds
xchg
aam
int3
cli
dec
in
enter
xor
xlat
lret
jmp
ds
cld
int3
jecxz
cld
hlt
test
call
xchg
ljmp
aad
leave
cmp
int
loope
ffreep
in
test
call
out
int3
in
jecxz
shl
loop
shlb
lret
out
iret
repnz
aam
xchg
test
call
mov
hlt
out
sti
call
aaa
sti
dec
fcmovb
test
out
rcr
ljmp
fdivp
out
divl
out
leave
leave
xlat
aaa
iret
out
cmp
in
cld
loop
addb
fsub
mov
icebp
aam
in
xor
aam
xor
cmc
in
fyl2xp1
sti
cmp
stc
sti
mov
leave
fmull
shl
ret
jecxz
jmp
xor
add
add
jmp
leave
sarl
rcl
int
mov
push
xchg
faddl
jg
cmpsb
add
sar
ljmp
enter
int
loopne
jmp
shl
xchg
rcl
fnstcw
in
repz
xor
cmp
out
ret
aad
sbb
jecxz
les
loop
sub
xlat
in
clc
out
fst
fnclex
clc
repz
sti
filds
out
in
jmp
repnz
enter
aam
cmp
fdivrl
in
rcr
loope
in
fdivr
leave
fiaddl
ljmp
aaa
out
call
loop
test
clc
loopne
test
in
in
iret
lret
cmc
fucomi
icebp
jmp
int
shl
stc
out
cmpb
jecxz
clc
jecxz
lret
out
out
ret
rcl
stc
cmp
cmp
test
rcr
aam
aad
rcr
lock
repnz
lret
aaa
call
stc
sti
cmp
in
addl
ret
mov
iret
int
aaa
das
sar
fcomi
cmp
fcomp
cmp
mov
sti
ret
lret
jecxz
jecxz
shl
sub
xor
std
in
into
aaa
aam
loop
sarb
adc
xor
mov
iret
int3
lret
loope
clc
int
fincstp
sti
leave
shl
cmp
in
ds
jmp
adc
fdivr
jmp
repz
xchg
int3
mov
leave
sbb
testl
mov
lret
xchg
mov
rol
not
aad
lret
sti
sarb
rorb
mov
jecxz
out
nop
out
iret
ljmp
out
cld
cmp
fcmovnu
jmp
cli
int
mov
xor
jmp
lret
fadds
ds
sti
cli
test
lea
cmc
aam
jmp
ljmp
cmp
icebp
test
loope
call
xchg
in
in
clc
loop
cmp
lret
shl
int
cld
loope
out
lret
and
fdiv
iret
std
mov
loope
cmp
cmp
std
cmp
cmp
rolb
in
adcb
xor
in
iret
call
jecxz
icebp
xchg
mul
leave
cmc
loop
in
std
mov
xacquire
cmp
stc
aas
aas
sar
ds
lock
xchg
mov
mov
out
shl
xor
aad
cli
fcmovbe
cmp
enter
adc
faddl
fcmovne
fisttpl
cs
iret
aam
cld
fstp
iret
lock
cmp
loop
inc
repz
testl
jmp
aam
in
std
iret
divl
filds
jecxz
aas
mov
sti
loopne
mov
in
xor
out
xor
sti
in
xor
lret
cmp
idiv
repnz
out
idivl
enter
xchg
rcr
jmp
repz
xlat
jmp
loope
aas
test
ret
fcomp
jmp
sbb
jmp
out
xor
fsub
fcmovnbe
cmp
jmp
fst
repnz
ret
in
in
shr
mov
int
mov
ret
cmc
add
lds
out
inc
stc
hlt
ljmp
xlat
sti
repnz
jmp
aad
jecxz
fmulp
fisttps
rcl
rol
aad
aaa
iret
int3
aad
sti
std
out
cld
in
out
addl
out
lock
lret
out
out
cmp
xor
xor
lret
enter
fsubrp
call
sub
shr
fdivs
lret
lret
std
fdiv
test
out
loope
clc
mov
loope
repz
int
fucomip
std
aad
iret
out
stc
into
ds
sar
lret
fcomp
lret
ljmp
cmc
into
lret
jmp
ds
repnz
xlat
fcom
shl
jmp
icebp
jmp
cli
in
mov
call
xlat
lret
aam
loope
repnz
int3
rcr
loope
add
mov
mov
std
lret
in
div
int3
xlat
fdivl
fcom
cmp
faddp
mov
test
mov
mov
xchg
mov
int
shl
call
xlat
fst
add
cmc
test
jecxz
out
loopne
mov
xchg
enter
ss
ffreep
sarb
fld
fdiv
out
into
cld
mov
in
int3
rol
iret
fcomp
cli
repnz
xlat
test
div
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
loop
sti
fucom
sub
test
loop
das
out
aam
hlt
fst
int
f2xm1
fistpll
in
repz
loop
cld
loope
idiv
std
fdivrp
mov
cs
call
int
hlt
into
inc
xchg
dec
xchg
clc
int3
iret
jmp
jmp
sti
std
int3
clc
fcmovu
sar
mul
test
imul
testl
aam
ret
loop
repz
in
sarl
aam
ret
lock
and
sub
sbb
repnz
xor
call
lret
repnz
aam
incb
mov
fsubrp
out
into
sub
lret
in
std
xlat
sti
hlt
cmp
cmp
adc
loop
loope
std
loope
mov
ljmp
cmp
fcomi
div
neg
addb
mov
addl
sub
fcmove
cmp
ljmp
adc
jmp
fildl
jecxz
into
mov
ret
xor
shl
ljmp
clc
xlat
loop
stc
enter
out
test
test
cli
nop
fdivp
in
mov
lret
rcl
aad
or
rolb
lret
fdivr
test
jmp
lret
ret
repz
in
sub
test
std
cmc
leave
mul
fildl
test
call
int3
ss
fdivl
lock
lret
repnz
cmp
lret
enter
in
xchg
rol
out
jmp
hlt
enter
cmp
and
mov
sub
xchg
loope
mov
sti
enter
loop
aad
and
xchg
leave
jecxz
loope
cld
int
ljmp
enter
shr
cli
stc
iret
aam
test
sub
xchg
cmc
cmp
aaa
aad
xor
addl
sar
repz
in
sbb
mov
xor
cmc
lret
dec
fnstcw
cmp
into
cmp
xchg
in
mov
repz
xor
in
fsincos
xor
aam
idivl
cmc
jecxz
out
ret
out
in
mov
xor
int3
ret
in
out
cmp
sarl
jmp
in
fmul
out
incl
xlat
shr
sti
aad
in
aad
adc
ret
jecxz
ljmp
lea
shll
out
lret
clc
jmp
cmp
cli
hlt
xchg
std
fyl2xp1
repz
cmc
stc
in
xlat
in
out
int
xor
fld
repz
jmp
lret
test
int3
xor
xor
xor
lret
std
rcr
cmp
loopne
rcr
lret
in
orl
test
lret
cmp
fdivp
jecxz
jmp
fldl
xchg
lret
iret
xor
imul
xlat
xor
into
in
into
cmp
cli
jecxz
and
jecxz
in
jmp
lret
aad
out
lret
shl
fucom
xchg
cld
hlt
out
mov
mov
out
lret
rcl
aad
into
int3
cmp
sar
repz
aam
ret
xlat
ret
sti
iret
and
imul
stc
in
cmp
out
cli
idivb
jmp
rcl
cmc
std
fdivp
or
hlt
iret
fmuls
cld
xor
aaa
aaa
xlat
hlt
lock
fidivl
aas
rcr
loop
out
aam
and
sub
lret
lret
loope
mov
lds
bnd
in
ljmp
cmp
bnd
mov
enter
icebp
nop
xchg
call
hlt
shr
out
ret
shr
jmp
cmp
add
cmp
xchg
mov
xchg
orb
lret
repz
cmp
cmp
in
cmpb
mov
and
rorb
aaa
out
rol
mul
enter
aas
sti
into
cmp
sti
enter
jmp
test
in
in
cmc
enter
xor
cld
lock
into
addl
test
xchg
lret
lea
ftst
icebp
lret
std
fcomp
cli
std
stc
out
out
fdiv
clc
xchg
jmp
leave
int
fsub
in
int
lret
lock
iret
lock
std
cmp
fst
fsubrp
into
testl
mov
xor
cmp
cmp
call
repz
in
fstpt
int
loop
je
movl
jmp
sarl
rcl
rcl
rol
ret
bound
inc
fsubrs
jl
mov
lret
call
lret
xlat
ljmp
clc
loop
lret
mov
repnz
cmp
in
fcomip
cmp
clc
rcr
fcomp
repz
xlat
ret
cld
in
in
in
into
xor
into
aaa
in
sarb
xor
out
cmp
cmp
out
cmp
loope
xlat
out
xchg
aam
call
cld
lret
ss
ss
loope
fcomp
rcl
jmp
ror
mov
test
mul
fsubrs
shl
aaa
fmul
repnz
cld
fsubr
aas
into
out
cli
rcr
mul
fucomp
call
shr
int
rol
lds
in
lock
test
cmp
cld
fdiv
loope
ljmp
rcl
shll
loopne
shr
std
int3
cmp
cmp
fld
jecxz
loope
jmp
mov
loopne
xchg
leave
shl
xor
out
mul
cmp
aam
rol
ret
nop
fmull
out
xlat
sub
sar
rcr
jmp
fnstcw
out
icebp
aam
cli
cmp
ret
leave
nop
addl
out
fxch
fnstsw
iret
int
clc
ds
sti
rcl
repnz
std
fisttps
out
dec
jmp
cmp
cmp
int3
aaa
cmp
vpaddusw
in
dec
xchg
test
ror
rcl
shl
std
aaa
jmp
cmp
shl
clc
movl
repnz
aaa
in
aam
fprem
idiv
dec
cmp
loopne
sbb
nop
shl
mov
aam
loopne
int3
in
xlat
aad
fdivrp
cmp
loop
in
xchg
cli
xchg
in
call
loopne
shl
lret
out
aam
repz
into
xlat
repz
stc
lock
shl
sti
mov
idiv
jmp
sar
int
lret
xor
lret
iret
fmul
cld
ret
sarl
test
sti
mul
addl
out
in
fucomp
aad
fdiv
faddp
ffreep
test
cld
jmp
in
xchg
cmc
out
cs
call
repnz
cli
div
cmp
mov
xchg
aad
cmp
out
int3
in
cmp
cmp
lock
cli
std
leave
int
out
out
out
lret
out
out
out
in
imul
aaa
shr
ds
in
ret
fucomp
fimuls
in
call
jmp
std
out
into
not
ret
xlat
fdivrp
hlt
xlat
out
sbb
sti
mov
xchg
jmp
in
cmp
fstpt
out
cli
fcmovbe
ret
xchg
in
out
int3
aad
call
cmp
idiv
clc
repz
addl
enter
aam
repz
clc
cld
repz
clc
cli
test
testl
fcom
xlat
in
xor
stc
xlat
loopne
cli
neg
repnz
cld
loop
sti
xlat
addl
loopne
int
fidivl
out
iret
in
fdivrs
ret
repz
loopne
in
shr
mov
fnstsw
loop
repz
sub
imul
lret
clc
iret
sar
cmp
not
aas
sar
sti
add
ret
in
mov
xor
cld
in
idivl
jecxz
hlt
aas
fadd
mov
out
filds
lock
cs
loopne
ljmp
ljmp
idivb
nop
lret
shl
loop
aaa
ret
out
out
repnz
lock
ds
out
fsubrp
out
xchg
jmp
iret
fsubp
in
mul
lret
cmp
ss
ds
testl
int3
in
cmp
lea
int
sub
xor
aam
test
cmp
jmp
in
repz
mov
fcmovbe
hlt
cmc
sti
fxtract
aam
cmpb
test
mov
into
call
sub
jmp
icebp
ror
cld
out
ss
faddp
aad
and
std
out
ljmp
lret
repz
clc
hlt
out
ror
cli
lock
decl
mov
int3
out
out
iret
aaa
jmp
leave
sar
cli
icebp
push
xlat
repnz
cld
leave
loop
in
rolb
icebp
into
sti
jmp
lret
cmp
jmp
loopne
mov
nop
loop
shl
sub
enter
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
lock
jl
add
mul
cmp
idiv
in
cmp
loope
fisttpll
std
test
int3
icebp
xor
cs
xor
sti
sti
jecxz
and
call
in
call
rcr
stc
int
mul
into
cmc
sar
cld
fadd
clc
repz
aas
ret
loope
call
dec
xorb
rcr
jmp
not
faddl
aam
cld
ret
fmul
mov
in
iret
in
incl
shl
xor
fidivl
std
sarb
rcr
cld
enter
loop
lret
xor
rcr
jecxz
sub
ljmp
sarb
aam
rcr
lret
cmc
loop
int
ljmp
out
in
jmp
rcr
jecxz
shl
sti
clc
roll
fucomi
loop
enter
hlt
aad
into
xor
sar
out
aam
sar
hlt
addl
leave
ret
xchg
leave
lea
jmp
cmp
ljmp
addb
jecxz
xchg
out
shl
sar
enter
cmp
inc
loopne
repz
sti
ljmp
mov
out
das
aam
aad
aas
fmul
inc
fistpll
mov
dec
clc
loopne
mov
cli
leave
cli
cmp
int
aad
in
out
loope
stc
mov
iret
ljmp
xor
std
clc
fadd
xlat
incl
fucomip
sti
enter
xchg
test
out
stc
int3
in
xor
ror
fadd
loope
leave
loop
std
fiaddl
or
repnz
icebp
repnz
filds
cmc
cld
stc
repz
leave
jmp
out
loopne
int
xchg
leave
das
int
aaa
xor
out
cmp
into
roll
out
call
test
in
lock
ror
lock
ljmp
fcmovb
rolb
out
mov
aad
sti
enter
repz
ds
test
lock
fildl
mov
repz
out
int3
xor
in
xor
hlt
cld
cmp
lock
rol
filds
int3
lret
loope
jmp
aam
fsubr
call
rolb
loop
leave
mov
in
loope
call
mov
icebp
int
fidivrl
add
loope
add
les
ljmp
in
xor
icebp
cmp
repz
fadd
clc
rol
call
stc
cmp
xchg
nop
shl
loope
call
xor
cmc
test
fdivr
aad
test
fdivr
mov
in
and
shl
cld
std
shl
int3
addl
fimuls
mov
out
aam
out
xlat
std
xor
rol
enter
nop
leave
vpaddsb
aaa
ret
icebp
int3
in
test
cmc
in
repz
fcmovnb
xlat
rol
cmc
loope
cld
out
xchg
jmp
hlt
clc
jmp
int
cmp
xor
hlt
fcomip
stc
call
shl
lret
hlt
out
cli
out
in
cli
mov
divl
ret
shl
cld
sti
leave
cmp
fiaddl
std
repz
in
loop
mov
in
int3
into
jmp
lret
in
ror
cmp
iret
lock
shl
fdivrp
mov
mov
int3
les
repz
ljmp
hlt
shl
movl
loopne
xchg
loope
shl
cmp
aad
fucomi
jmp
cmp
icebp
lock
in
fsincos
loop
jmp
xchg
in
int3
fldcw
xor
out
xor
aas
int3
dec
sti
cmp
cli
loope
xor
in
fcmovb
loop
lret
jmp
cmp
imul
lock
lret
fcos
fmuls
cld
lret
shr
leave
xor
cmp
sti
loopne
aas
hlt
loope
std
loope
std
fdivr
mov
xor
out
aad
push
aaa
lret
sti
rcl
loopne
std
lds
xchg
xchg
lret
in
loope
xor
hlt
jmp
cld
hlt
rcl
repz
jmp
in
mov
cmc
jecxz
lock
xor
fxch
cmp
lock
xor
out
mov
cld
test
icebp
mov
repnz
out
ljmp
out
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
mov
mov
jl
add
sbb
clc
jmp
ffree
mov
out
sti
clc
leave
cld
repz
fsubr
sti
loope
out
cmp
fscale
in
icebp
call
rcl
in
out
repnz
fxch
fcmovnu
cli
in
repnz
cmc
xlat
fildl
das
stc
loopne
idiv
out
clc
cmp
jmp
aas
cld
hlt
aas
ret
xlat
in
mov
mov
aad
jmp
shr
lret
std
icebp
fucomi
std
out
fcmovb
and
enter
in
mov
xchg
repnz
cmp
xor
stc
sti
ljmp
loope
in
fxch
jmp
ds
rorb
ss
cld
out
cmp
into
in
ret
cli
sar
mov
shl
repnz
inc
lret
cs
repz
int3
in
cmp
int
shl
std
incl
mov
out
out
xor
in
aaa
xor
lock
aas
aas
add
lret
adc
or
mov
xlat
rcl
fdiv
not
in
cmp
in
faddp
xchg
test
mov
aad
xlat
lock
fdivr
out
in
shl
xlat
stc
rcl
in
sub
loopne
cld
cli
in
mov
out
test
sar
testl
fisttpl
call
fcmovnbe
imul
rcl
fcmovu
aas
cmp
mov
cmp
filds
fimull
out
aad
in
xlat
cmp
imul
out
rcr
loope
cmc
xchg
leave
and
xchg
xchg
sti
nop
mov
aas
lret
sar
xor
in
cli
cmp
not
test
mov
mov
jmp
mov
das
xor
aaa
aam
out
out
repnz
faddl
lock
or
in
cmp
xchg
into
int
enter
int3
ret
sarb
xchg
repnz
shl
aam
and
adc
test
out
lret
out
cld
stc
cld
cmp
cli
fadd
movb
mov
loop
ss
xor
das
icebp
repz
ror
cmp
hlt
rcr
fucomi
in
mov
out
hlt
fsub
das
out
in
out
cmp
ss
jecxz
stc
sti
not
rol
loop
clc
loope
stc
loope
call
test
xlat
fdivr
cmp
ss
jmp
xrelease
loop
iret
sub
iret
lret
orb
aad
clc
idivl
into
cmc
cmp
int3
out
fcmovb
in
loopne
in
lret
in
shl
and
aam
int3
cld
ror
rcl
fcomp
in
cli
into
xchg
out
cmp
aam
out
leave
repz
mov
jecxz
xor
jmp
in
out
cli
call
repnz
out
cmc
aam
stc
lret
sub
mov
test
cld
rcr
into
jecxz
sar
hlt
hlt
lea
loope
mov
fdiv
int3
loop
xor
das
cmc
aaa
cmp
icebp
icebp
cmp
cmc
enter
in
mov
icebp
int3
mov
cmc
ror
aaa
aad
out
cmp
sti
ds
rol
in
int3
xchg
mov
sub
loop
stc
iret
shr
repz
hlt
sar
fadd
sti
or
fcompp
fucomip
lret
leave
fidivrs
repz
lock
fcmovbe
fdivr
in
rcr
ljmp
shlb
sub
repnz
lock
lret
fdivr
icebp
out
clc
faddp
loop
fsub
repnz
mov
repnz
add
enter
cmp
iret
ds
jecxz
in
cmp
out
into
out
cld
xchg
ljmp
leave
fucom
repnz
shl
in
xlat
call
loopne
into
out
icebp
in
stc
call
and
stc
aam
clc
cld
xchg
sti
cmp
jmp
rcl
loopne
in
lock
lret
aad
cmp
ret
in
fucomip
mul
call
iret
call
jmp
call
sarl
xchg
int
mov
fstp
les
icebp
cmp
ss
in
lds
test
loope
std
int3
xchg
stc
aam
in
fcom
ss
cmp
cmc
ljmp
test
xlat
sub
enter
shl
aaa
ret
rcl
ss
ljmp
aam
in
fcomi
decb
inc
hlt
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
call
loop
cmp
xlat
ljmp
in
cli
cmc
idivb
incb
neg
xchg
loope
out
lea
xor
in
sti
aas
xlat
fistpll
aaa
cld
cmp
out
sarb
xchg
in
nop
mov
xor
repnz
iret
out
fcmove
cmp
test
loopne
fucomip
out
faddp
loope
in
int3
out
call
cmp
rol
cld
std
cld
test
jecxz
loopne
ljmp
xlat
into
repnz
cmp
call
in
ret
shr
fdivrl
jmp
fisttpl
nop
lock
xor
clc
aad
cli
sbb
lock
out
rolb
fsubr
mov
out
lret
ret
jecxz
div
xor
aas
fidivrl
cmp
cli
test
rol
fildl
clc
in
rol
shrb
into
out
in
std
xor
jmp
int3
rcr
xlat
mov
stc
jmp
cli
sub
into
enter
loope
cs
cld
cmc
jmp
repnz
hlt
int
in
fcom
mov
in
fisttps
sbb
sub
jmp
out
cmp
fxch
sti
in
out
roll
in
mov
int
xor
into
jmp
cmp
not
lret
cmp
testl
popl
repz
clc
in
leave
aad
test
aam
sbb
mov
lret
xchg
sar
shl
shr
loopne
cmp
fcmovbe
aad
lret
in
idiv
mov
test
addl
fcmovne
out
repz
icebp
test
mul
lret
int
aam
loopne
shl
cmp
ds
shl
std
cmp
fcomip
mov
lret
jecxz
loopne
cmc
into
xchg
not
repnz
adc
cli
vpsubusw
xchg
mov
in
loopne
xchg
loopne
icebp
rcl
clc
fincstp
call
repnz
aam
aam
repz
out
or
dec
lret
out
loopne
fadd
sti
stc
in
repz
rol
lock
call
orb
aaa
into
aam
idivl
repnz
addb
ljmp
in
enter
xlat
shrl
xor
fnstenv
clc
not
aad
shl
cmc
aam
jmp
mov
ret
out
cmp
test
rcr
sti
cmp
int3
aad
ret
push
rcl
xchg
lret
int3
out
jmp
repnz
fadd
lock
sar
fnstcw
ds
testb
fmuls
mov
stc
rcr
out
repnz
sarl
int
repnz
mul
fldl2t
sti
fcmovne
mov
lock
fdivp
out
stc
enter
sti
fdivr
xlat
stc
ret
cmc
adc
enter
mov
in
out
cmc
int3
in
in
enter
jmp
ds
into
shl
rol
cli
int
std
sub
out
iret
shl
xor
aaa
shlb
xlat
aad
cld
cli
loope
loop
fstp
out
sti
jmp
add
xor
cmp
lret
fsin
loope
inc
out
fadd
shl
cli
fmull
xchg
cld
shl
in
into
shl
lret
repnz
ljmp
leave
rcr
xchg
loope
cld
iret
decl
rcl
xor
repz
cmp
out
loop
loope
hlt
mov
in
fcmovbe
clc
std
mov
orl
out
out
shlb
jmp
and
loope
xchg
leave
int3
loop
cmp
sub
loop
xor
fsincos
fsubp
into
xlat
hlt
aas
rcr
sti
cli
out
cmpb
cli
mov
in
ljmp
xlat
sti
fidivrl
aad
cmp
aad
in
testl
mov
les
into
cmp
cli
iret
xor
fcmove
loope
std
rcl
repz
std
jmp
xchg
test
hlt
xor
aad
lret
out
cmc
cli
cmp
in
rolb
loop
test
int3
xor
cld
ret
xlat
shr
in
stc
decl
out
rcr
int3
das
ljmp
fdivrl
fprem
repnz
in
in
test
into
rolb
hlt
ret
enter
lret
cmc
cmp
xchg
xchg
mov
loop
call
test
jmp
jmp
rol
int
fst
fcmovne
xor
fadds
mov
jl
call
cmp
lret
out
repz
div
fsub
leave
in
jmp
loop
xchg
rcl
ss
lret
push
jecxz
ret
clc
hlt
idivl
ror
icebp
call
jecxz
rcl
hlt
xor
int3
stc
repz
filds
sar
mov
lret
in
out
nop
ljmp
loop
aad
test
xlat
int
in
aas
test
xlat
in
les
jmp
sub
shl
not
xor
fmulp
stc
shl
sti
fsub
ljmp
int3
subl
cmp
into
ror
std
lock
aam
fdivp
cld
mov
in
out
cld
xchg
test
shr
stc
shl
cmp
std
faddp
repnz
cli
iret
sti
out
in
movl
xor
fdivs
add
cmc
loop
incb
ffreep
fcoml
ljmp
lock
hlt
out
cmp
cld
inc
xchg
shr
loopne
stc
in
xchg
out
loopne
xor
cli
xor
lret
cmp
loop
call
cld
lea
out
cmc
lret
fcmovne
cmp
idiv
addb
loopne
test
cld
mov
out
iret
sti
cmp
lock
cli
ffree
test
shl
ret
cld
adc
div
out
fprem1
xor
cs
cld
div
loop
addb
stc
test
mov
xchg
out
ljmp
out
in
call
test
cmc
fst
sarb
fsqrt
xchg
sar
decl
lds
neg
filds
orl
loopne
into
aam
xor
out
cli
jmp
sarl
sti
repz
aad
shl
in
in
orl
in
ljmp
lret
ret
cld
leave
cmc
aad
in
leave
ret
ljmp
loop
sar
int
shr
lock
repnz
cmp
enter
xchg
rorl
in
ss
out
stc
fcomp
fcomi
shl
lock
mov
xchg
loope
into
loope
fmulp
icebp
jecxz
out
repnz
rcl
out
jecxz
sarb
test
out
cmc
fnsetpm(287
rolb
icebp
divl
clc
lock
jmp
roll
rcl
hlt
loope
cld
mov
rorl
das
in
icebp
out
into
ss
rolb
in
fdiv
ret
fcmovnbe
mov
xchg
in
iret
jmp
shl
ret
xor
icebp
into
loope
repnz
pushl
loop
hlt
rcr
jecxz
or
lock
jecxz
leave
sub
out
cmp
ret
repnz
stc
mov
lret
mov
lret
sub
loop
lret
int3
lret
cmp
stc
fcomi
aaa
loope
enter
sar
cmc
ret
and
iret
xchg
xchg
test
shl
xor
ret
xor
ljmp
fucom
fprem1
out
mov
in
xchg
fisttpll
shll
shll
repz
ret
shl
roll
out
xchg
mov
stc
ljmp
out
cmpl
fcmovb
mov
out
fsub
jecxz
lret
sbb
sub
repz
repnz
repz
roll
fmul
cmp
lea
shl
das
stc
jmp
cld
icebp
div
shl
sarb
shl
shl
mov
call
ljmp
xor
jmp
idiv
std
addb
leave
loopne
out
loopne
out
iret
out
aad
xor
int3
hlt
cmp
ret
loope
cmc
repnz
cli
jecxz
in
int3
mov
mov
ret
ljmp
ror
lret
out
fchs
mov
cmp
fldpi
xchg
mov
loope
lret
fsubr
stc
lret
clc
aaa
cmc
adc
leave
test
jecxz
nop
fldl
xor
hlt
hlt
xlat
in
out
fidivs
loop
in
jmp
mov
xchg
repnz
into
loop
xor
aam
shl
fsqrt
ss
clc
enter
ret
iret
mov
cmp
out
aad
fsubr
call
rcl
aad
loop
xchg
cld
loopne
fucom
out
and
enter
sar
iret
out
fistps
ret
add
lret
ret
fstpl
fidivrl
xorb
cmpsb
add
stc
cld
test
fninit
ljmp
shlb
in
imul
cmc
leave
iret
out
fucom
fsubr
iret
loopne
stc
dec
ret
in
leave
add
jmp
mov
xor
cmp
jmp
iret
hlt
call
test
clc
cld
std
mov
out
xchg
fisttpl
divb
fcmovbe
clc
repz
cld
sarb
leave
fcomi
sti
mov
test
addb
xor
int
lock
lock
out
int3
and
cmp
test
idiv
movb
out
out
xor
ljmp
stc
fadd
into
sti
cmp
jecxz
ljmp
xchg
loope
das
iret
lock
int
int
std
aad
sti
cli
in
hlt
rcl
dec
jmp
leave
out
out
fnstenv
iret
fmul
aaa
ljmp
sti
shl
cmp
test
jmp
mov
std
cmc
div
ljmp
sti
adc
loopne
ror
shl
loopne
sti
loopne
cli
sti
lret
loope
loope
leave
stc
in
xor
cmp
stc
repnz
ss
cli
mov
not
ljmp
sub
out
xlat
xlat
hlt
shlb
into
imul
lret
hlt
jmp
out
call
jmp
icebp
cmp
sar
aam
fistpll
fstp
fildl
lea
test
iret
ljmp
int3
fdivrl
cld
icebp
jmp
in
loop
push
repz
xlat
faddl
mov
fldlg2
idiv
cs
loope
in
div
sti
mov
test
sti
fldl2e
jecxz
xchg
out
jecxz
xor
call
xor
into
cld
sarl
lock
out
in
mov
out
lret
out
cld
iret
iret
lret
fldl2t
cmp
fmul
xor
in
int
cmp
xlat
cld
fmuls
out
xchg
xor
loopne
out
shl
sti
aam
std
cmc
faddp
out
fdivrl
jecxz
ror
and
dec
repz
in
and
divl
xlat
mul
iret
ss
lret
cmp
int
cmp
std
shl
and
enter
int
jmp
ljmp
clc
out
jmp
int3
in
fdivr
fdivr
mov
ljmp
xchg
out
int
ret
div
aam
out
aad
iret
stc
mul
shl
xchg
xchg
divl
aaa
stc
iret
loop
stc
cld
ss
in
hlt
faddl
fcomip
cli
out
jecxz
call
fcomip
test
cmc
aas
cmp
out
out
aad
hlt
clc
stc
fsubp
mov
in
rol
ljmp
repz
sar
repz
out
leave
mov
jmp
xchg
into
aad
jmp
cmp
repnz
fst
fadd
mov
call
shl
mov
shl
in
out
lret
div
ss
loopne
rorl
popl
enter
lock
xor
lock
lret
ror
out
fcmovu
jmp
inc
cli
filds
lret
loope
imul
jmp
lret
std
repnz
rol
out
ljmp
sar
fsubp
in
call
out
lret
in
fcmovnu
ffreep
test
addl
jecxz
lock
jmp
xlat
cli
ror
in
sar
sti
fsubp
sar
xchg
fxch
leave
in
mov
fisttps
out
cmp
cmc
in
aam
sar
jecxz
rcr
xchg
in
enter
leave
std
jmp
adc
stc
sarb
cli
out
iret
call
fcom
stc
out
out
repnz
clc
mov
enter
fdiv
iret
jmp
enter
cli
in
out
jecxz
in
aad
in
jmp
loope
fxam
mov
int
rclb
xor
xor
rolb
cmp
push
aas
sti
test
int3
icebp
cld
cmc
out
ret
jmp
out
enter
fcmove
in
cmp
shl
in
out
std
nop
nop
mov
repz
in
sar
cmp
cld
shl
fucom
idiv
decl
ds
ret
lock
fidivrs
out
out
or
ljmp
test
repz
aam
cmp
cmp
fcomip
idivl
iret
roll
mul
clc
ljmp
adc
sti
in
fstpt
lret
shl
ror
aad
jmp
pop
pop
leave
ret
mov
jmp
aam
fcmovnu
mulb
or
aam
jg
cmpsb
add
jmp
icebp
out
les
aam
call
xlat
cmpl
aaa
faddp
vpsadbw
fcmovnbe
in
loop
loop
mov
fdiv
in
leave
fstp
cmp
stc
fsub
incb
in
test
cs
out
shl
cs
cmp
out
ljmp
ror
dec
int
fiadds
aaa
stc
stc
xor
sarl
call
in
in
ret
ljmp
jecxz
lea
enter
lret
cli
loop
test
mov
aad
out
inc
or
in
fsubrl
in
into
xor
fidivrl
sarl
roll
jmp
hlt
loopne
xchg
jmp
ror
cmc
lret
in
sti
cmp
add
fdivr
enter
loope
and
xchg
mov
das
in
in
cmp
cmp
fucomip
cmp
repnz
fmul
jecxz
out
sti
rorb
xor
aaa
xor
cld
filds
repz
ret
not
aam
jmp
sti
mov
in
in
jmp
xlat
jmp
cmp
int3
ret
rolb
fsubrp
out
decb
aam
rcr
cmp
in
stc
sarl
fildl
lret
test
xor
into
xchg
shl
idivl
xor
xor
in
out
int
aas
iret
fldlg2
xchg
icebp
test
mov
jmp
xchg
xor
in
stc
xlat
cmp
out
ds
into
aas
loop
fisttpl
rorb
rcl
xor
cli
lret
enter
cmpb
fcmovu
stc
leave
lock
aam
lret
fucomi
decl
mul
ret
aam
cmp
repz
shlb
shl
addl
loopne
nop
fimuls
rcl
in
test
std
fdivr
call
cld
in
jmp
ret
out
jmp
sti
into
clc
out
aas
xor
leave
aad
mov
loopne
in
nop
out
test
das
jmp
aaa
fld
clc
leave
enter
in
stc
rcl
cmp
std
test
and
out
xor
ret
in
fcmovne
out
adc
repnz
test
xchg
icebp
aad
enter
cmc
shl
aas
sti
fnsave
cld
test
in
aam
jmp
in
int3
out
lea
call
not
shl
adc
loopne
call
inc
lock
sti
jmp
cld
ret
repz
rorb
in
lret
ljmp
in
fcom
shll
cld
repnz
not
ljmp
xchg
in
icebp
mov
lret
xor
cmp
xor
cmp
not
cmp
loop
jecxz
decb
into
cld
fsubrp
fxch
into
xlat
in
clc
lock
cmp
aam
xchg
lock
jmp
test
jmp
div
test
call
stc
rolb
rorb
adcl
mul
stc
xor
cmp
sti
jmp
loop
ds
lock
lret
xbegin
xchg
ret
divb
cs
cli
sti
rcl
idiv
neg
movb
filds
cmc
out
ss
std
call
std
cmp
repz
in
loopne
test
in
out
lret
xchg
in
in
idivb
add
shl
loopne
cmp
sti
clc
mov
in
aad
in
jecxz
loop
xor
shl
sar
rcr
std
neg
leave
cli
int
std
test
shl
fld1
sti
in
cmp
fiaddl
sar
fmul
in
repz
idivl
cmp
cmc
into
xlat
fdivs
ds
loope
xchg
in
neg
int
in
nop
repz
dec
call
leave
fdiv
clc
shl
xlat
rcr
ljmp
xchg
in
aam
aam
cmp
cli
fiaddl
test
xlat
mov
cld
fucomp
push
xor
ljmp
fdivrl
xor
cmc
loopne
test
clc
loope
in
out
nop
ror
std
jmp
ret
ljmp
cmp
fcom
in
loopne
loope
in
mov
lret
cli
std
mov
xor
inc
call
mov
add
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
pop
cmp
jg
cmpsb
add
loopne
enter
jmp
iret
lock
fstp
sbb
mov
out
xchg
jecxz
fsubr
ret
ror
int3
int3
out
rcl
iret
sbb
jmp
fadd
cli
enter
in
int3
shl
repnz
int
xlat
jmp
cmp
cmp
jecxz
cli
xchg
std
fldl
xor
enter
rol
aam
enter
sbb
aad
mov
mov
cli
out
ds
fsqrt
div
in
lret
cmc
ljmp
aam
mov
fnsetpm(287
out
out
fcmovu
lock
ror
aaa
in
in
shr
jmp
cld
sub
cmp
hlt
aam
mov
aad
fyl2x
into
nop
repnz
repz
xor
xor
ss
hlt
int3
fistpll
repnz
in
jmp
mov
mov
int3
int3
xor
std
inc
cmp
clc
in
hlt
call
loop
fucomip
ljmp
repnz
xor
cmp
rol
hlt
mov
in
int
int
mov
nop
icebp
xlat
lock
cli
cld
lret
aas
leave
clc
lock
rolb
addl
cmc
repnz
sarl
cmp
fmul
xlat
cmp
iret
xor
loop
loope
orl
aad
xor
repnz
hlt
in
fucomi
in
cmp
sarl
aam
enter
enter
xchg
jmp
xor
cmc
jmp
cmp
xor
ret
sbb
fstp
popl
aam
xlat
stc
cmc
repz
cmp
ss
cmp
ds
xlat
loope
loope
in
out
in
std
loop
in
cmp
ljmp
icebp
loope
std
xlat
std
fcomp
imul
and
cli
and
loope
shr
repnz
cmc
xor
xchg
sbb
leave
lret
loope
in
dec
xor
fucomi
aam
cmp
jmp
xor
stc
aad
test
call
lret
loopne
sti
sti
xchg
aad
int
enter
xor
shl
cmc
repz
out
jmp
and
ljmp
jmp
fcmovu
std
cli
sub
mov
int
test
jmp
shl
iret
clc
ljmp
out
cmc
into
icebp
ret
std
lret
test
cli
in
mov
in
xor
lret
cmp
repz
xor
jmp
cld
clc
aad
aad
lds
out
ret
jmp
lret
std
sti
div
int3
xlat
fstp
loopne
jecxz
fcmovu
loop
in
jmp
ret
aam
lret
shl
into
loop
jecxz
loope
shl
lret
mov
in
sub
jmp
sti
and
int
ds
hlt
loope
ljmp
in
repz
out
sti
aad
icebp
xlat
sti
iret
cmc
jecxz
aam
mov
fdivp
fucomi
cli
hlt
hlt
cmc
int
cmp
lret
xlat
cmp
aam
into
aam
rorb
jecxz
mov
faddl
int3
icebp
jmp
sti
xlat
hlt
aad
stc
std
push
testl
repnz
ds
jecxz
cmp
std
aas
aas
cmp
fdiv
or
call
jecxz
mov
rcl
into
rcl
icebp
faddl
loopne
sar
adc
stc
mov
int
cld
iret
std
repz
cmp
iret
repz
incb
incl
loop
not
out
enter
mov
iret
ror
aaa
xor
fcmovne
sti
fsubrp
cmp
repz
cli
in
idivl
loop
ljmp
jecxz
in
in
into
not
clc
lret
sti
shl
ljmp
aad
jecxz
int
in
loop
les
into
into
cmp
out
cmp
cld
sarb
cmc
adc
call
jmp
mov
int3
in
iret
aaa
aam
icebp
aas
call
rcr
test
test
out
jmp
xchg
jecxz
shl
out
xor
cmc
std
rcr
test
sar
loopne
ffree
faddp
jmp
fists
ret
jmp
aad
sar
ret
out
mov
mov
aad
ljmp
xlat
fsubr
sti
rol
ret
call
repz
aad
lret
in
lret
mov
mov
out
xor
cmp
cli
jmp
call
sbb
add
lock
decl
add
add
rol
iret
aad
aad
adc
lea
push
mov
cmpsb
add
icebp
cmp
xchg
test
stc
mov
mov
repz
aam
incl
shl
jmp
stc
cld
int3
loope
orb
ror
ret
int
repnz
fst
cmp
std
jmp
movb
lret
les
into
cmp
adc
ljmp
test
mov
in
jmp
xor
lock
jmp
rcr
out
addb
mov
fisttpll
xlat
in
call
cld
lock
cmp
xorb
repz
leave
leave
neg
in
out
int
dec
loop
loop
jmp
enter
into
cld
shl
xor
call
sti
in
test
mov
jmp
mov
fadd
xor
int
cmp
lock
aad
sti
cmc
stc
loopne
fcmovnbe
ds
lret
int
ret
xchg
xor
xor
aam
cmp
sarb
sarb
loopne
test
mov
into
addl
idiv
cmp
icebp
fnstcw
hlt
rol
ljmp
ficoms
das
xor
out
fmul
xor
cmp
fcomp
loope
mov
mov
adc
ljmp
sbb
ret
cli
mov
jmp
xchg
int3
cmc
ljmp
sarb
icebp
cmp
jecxz
int
fadd
ror
fxch
leave
neg
in
loopne
ljmp
cmp
out
aas
enter
xchg
sbb
repz
lret
addb
ss
out
shl
int
cmp
loope,pt
into
stc
and
rolb
repnz
jmp
lock
jecxz
rcr
aaa
loopne
sti
into
adc
rcr
xchg
mov
incb
mov
ret
int
lock
in
aam
aas
cld
aad
xlat
fdivr
test
decl
xchg
xlat
hlt
aaa
ret
fnsave
fcomi
xlat
aad
aad
jmp
clc
test
ret
in
cmp
int
out
cmc
xor
cld
clc
jmp
test
iret
lock
in
repnz
out
lret
xlat
cld
out
hlt
sub
cmp
leave
addb
xor
mov
leave
cmc
out
iret
out
faddl
in
loope
in
cli
iret
mov
out
mov
leave
sarb
ret
cld
icebp
sar
hlt
int3
and
hlt
aas
roll
loopne
shl
lock
rcl
ret
lret
iret
out
aas
cmc
in
fcomp
iret
sti
loop
in
mov
out
cmp
hlt
add
cmc
cmc
fcmove
lret
icebp
cmc
iret
loope
cli
addl
mul
fimull
std
xorl
repnz
rcr
out
int
int3
repz
int3
hlt
ret
icebp
shl
hlt
xchg
iret
jmp
in
xor
int
test
in
leave
rcr
int3
jecxz
nop
iret
fisttpll
out
rcr
lock
out
aam
cmp
out
cli
rcr
clc
clc
fiadds
sarb
icebp
int3
aam
sti
icebp
fnstcw
enter
sarb
xchg
lret
and
int3
in
lret
in
jmp
fdivs
ss
call
out
int3
aam
std
shl
fmuls
mov
shll
aad
aam
in
ror
stc
out
test
loop
lds
fadds
in
out
shl
not
bnd
loope
cmc
rcl
aam
out
int
lret
sub
mov
call
icebp
int
ljmp
ret
flds
clc
mov
fdivp
repnz
out
xor
ljmp
cmp
test
loope
mov
xchg
loope
lret
icebp
repz
iret
fmulp
cmp
ljmp
and
mov
xchg
hlt
cmc
icebp
fcomp
iret
std
fucomi
in
fcmovu
int
ffree
in
fsub
loop
call
lock
sub
in
xor
int3
repz
ret
jmp
in
int
stc
mov
incl
fprem
xor
repnz
sarb
iret
fdiv
sbb
std
loopne
test
loopne
lock
lret
out
cs
aad
lock
shr
in
loop
in
into
icebp
test
lds
jmp
mov
int
mov
push
and
push
jg
cmpsb
add
loop
adcl
jmp
idivl
sti
into
fidivs
in
xor
add
fcmove
out
fdivr
jmp
in
xor
shl
rcr
cmc
out
cmp
out
fadds
loope
std
incl
into
sti
test
aas
cmp
hlt
int3
aad
cmp
call
movl
out
call
lret
xlat
in
cmp
repz
in
out
lret
mov
fldl
aad
cmp
jmp
int
sti
clc
int3
sti
xchg
leave
stc
fisttps
int3
ficoms
enter
cmp
repnz
out
shl
adc
fstp
orb
fmul
out
int
cs
shr
xor
int
divb
repz
clc
out
addb
mov
ljmp
out
cmp
stc
sar
cmp
in
fadd
repz
leave
fmulp
test
shlb
xor
ljmp
cmp
not
neg
lret
in
in
test
loop
mov
mov
icebp
hlt
lock
xlat
cmp
cld
cmp
test
into
mov
mov
out
ret
into
or
adc
not
fdivr
dec
icebp
jecxz
sub
aam
ljmp
aas
ror
fstp
out
cmpb
lds
repz
in
loope
in
not
xor
sarl
sbb
rcr
cli
fcmovb
mov
jmp
in
int
jmp
shll
xor
int3
into
lock
out
aas
stc
fcmovbe
cmpb
ret
imul
cli
lret
ficoms
cs
ret
in
into
ljmp
incl
hlt
int
mov
jmp
ret
les
sar
xor
ret
roll
clc
mov
icebp
fisttpll
rcr
sti
int
fdivrl
test
sti
clc
in
mov
in
ret
aaa
leave
int
xor
fildl
clc
shr
in
and
xchg
addb
stc
jmp
jmp
cmp
loopne
mov
dec
in
out
pause
leave
xor
call
in
sti
lock
aas
jmp
cmp
ficoms
xchg
mov
sub
cmp
aad
cld
aam
ss
ror
lock
fistpll
cld
fiadds
out
lret
out
fmulp
xor
xor
out
lock
icebp
xlat
idiv
std
fistpll
sar
in
loope
addb
ret
into
fidivrl
shr
test
xchg
enter
lret
sti
xor
not
repnz
xlat
div
test
and
leave
fldl
xchg
fisubrs
xor
cmp
sti
shr
cli
cmpl
inc
loope
fmuls
fsub
lea
cs
stc
iret
cli
lret
sar
hlt
and
loope
mov
in
mov
fsubr
xor
lret
out
aad
call
fcom
cmc
out
fucom
ret
in
fucomi
clc
leave
fdivr
mov
cs
fidivrl
xor
repnz
fdivr
jecxz
cli
iret
stc
cli
in
xchg
mov
fists
sti
xor
ljmp
imul
xor
cmp
enter
in
ret
test
xor
loope
int
ret
iret
cmp
std
sub
clc
in
roll
shlb
aad
call
int
lock
decb
rclb
iret
sti
xor
clc
imul
ror
clc
test
or
iret
out
loop
ss
xor
std
jmp
ffreep
xlat
ret
into
out
clc
in
ret
mov
enter
lret
jmp
sar
idivb
faddl
cmp
xlat
clc
fld
loop
clc
mov
rolb
into
sti
rcl
cmp
or
loopne
call
stc
lret
incb
jmp
enter
std
cmp
push
ret
lret
leave
fsubp
call
loop
or
cmc
cli
cmp
sti
rcr
push
and
fisttpll
int
ret
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
out
sub
in
sarb
frndint
hlt
shl
faddl
test
enter
int
hlt
rcl
cld
div
fcomp
repnz
faddp
sarb
in
in
jecxz
dec
in
icebp
in
in
rcr
in
sti
das
imul
cmp
sti
dec
repz
sbb
mov
loop
out
lret
ss
out
fnstcw
out
sbb
icebp
movb
xchg
mov
mov
sub
xor
ljmp
fdivrp
cmp
ror
ds
loop
ljmp
loop
sar
cli
shl
shll
ror
xchg
loope
out
ret
mov
dec
and
xor
xor
rcl
sti
in
shr
ror
repz
call
int3
sti
les
call
out
rcr
stc
fcmovnbe
sti
out
in
hlt
xchg
xchg
int3
out
xchg
rol
ret
fcmovu
mul
leave
not
cmp
fndisi(8087
test
out
or
sub
lret
out
icebp
xlat
std
out
push
cli
call
into
ret
addl
loopne
jecxz
test
in
out
out
icebp
ljmp
iret
adc
aam
out
addb
mov
into
nop
rolb
neg
sti
into
dec
clc
int
iret
loope
in
jmp
in
std
fadds
leave
fnstenv
ret
aam
call
lret
std
fxch
jecxz
idiv
lret
call
filds
in
leave
xor
lock
lret
cli
cmp
cld
enter
fadd
fmul
mov
out
cmp
shlb
fmul
repz
shl
cmp
fcmovnu
jmp
in
repz
jmp
sar
fst
int
icebp
std
lock
out
cmp
mov
cmp
xchg
lret
repz
lret
xor
int3
ret
jmp
xor
aas
sarl
xchg
leave
jmp
xchg
leave
loope
leave
in
jecxz
das
in
cld
cmp
jmp
xorl
adc
xlat
in
sub
test
out
loop
out
fcmove
aam
shl
in
rol
repz
lret
rclb
shr
xor
out
in
rcl
into
aam
std
add
mov
mov
xchg
int3
cmc
aad
int
divl
sar
cld
cmc
repnz
cli
sar
aad
jmp
mov
out
xor
xor
shl
jmp
int
into
aaa
ror
into
fsubp
les
jecxz
out
lock
int
cld
dec
imul
fdiv
fcomip
aam
sti
int
jmp
fists
sub
fld
in
into
jmp
xor
cli
cmc
fnclex
aad
test
leave
cli
addl
hlt
fsubr
shl
jmp
aaa
cmp
cli
icebp
test
xor
ds
addb
mov
shl
ljmp
iret
stc
icebp
rcl
leave
in
int
cld
mov
cld
std
xchg
in
into
lret
xlat
xor
cmp
sbb
loope
in
fsubrp
xor
in
fldl
aad
xlat
lock
enter
rcr
sarl
hlt
and
lret
fsubr
test
call
int
stc
xor
sub
fdiv
test
and
decl
loopne
aam
out
lock
xor
lock
out
rcl
decb
fiadds
xor
rcl
repnz
shlb
fucomip
cmp
hlt
loopne
cli
call
cmp
aam
out
jmp
orb
int3
iret
aad
rcl
xlat
fucomi
sar
sti
sbb
loope
cli
orl
imul
fcomi
sarb
adc
cli
push
mov
add
xchg
out
movb
loopne
xlat
in
cmc
enter
fidivrs
ret
aad
out
sub
fsubr
and
cld
icebp
jmp
aam
sti
in
hlt
cmp
fsubr
loopne
repz
fld
cmp
icebp
test
mov
lock
shl
sarl
cmp
int
idiv
lock
cli
shl
test
div
and
shl
xor
xor
fsubr
test
aas
xchg
int
sbb
xor
shr
clc
cmp
in
out
xorl
jmp
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
mov
jl
add
fnclex
int3
testb
xchg
in
out
enter
out
ss
cmp
jmp
cmp
fisttpll
fadd
jmp
sarb
cmp
aam
fcmovu
ljmp
loop
sti
jmp
in
in
in
enter
repz
stc
jecxz
fucomp
in
out
out
hlt
ror
and
repnz
test
aam
fucompp
icebp
cld
out
repz
test
in
xlat
sar
cld
fiaddl
clc
fnstcw
ds
in
call
leave
mov
rcl
shll
leave
not
fucomi
out
clc
stc
fidivrl
fcomp
les
enter
rcl
loopne
lock
std
repz
xor
out
repnz
in
jmp
rclb
cli
cmp
in
cld
iret
in
fucom
xlat
std
ret
fsubp
clc
fisttps
xchg
out
aad
into
shl
shl
cmp
out
std
sarb
hlt
jmp
cmp
and
icebp
enter
hlt
call
in
fcmove
cmp
sarl
xlat
aam
div
test
stc
jecxz
mov
xchg
out
into
ss
aaa
lock
rol
int3
loope
addb
aam
into
out
fldl
in
lret
out
fsub
fldl
sbb
out
loopne
loope
mov
in
ror
jmp
ljmp
into
cmp
xchg
enter
test
cli
icebp
xchg
int3
iret
repnz
shr
into
shl
into
jecxz
cmp
movl
icebp
int3
jecxz
in
lock
icebp
rcl
stc
cli
test
rol
in
mov
shr
jmp
jecxz
iret
stc
not
xlat
ljmp
leave
repnz
out
loopne
mov
out
in
ljmp
stc
into
sarb
idiv
loope
mov
les
jmp
mov
shl
xor
cli
lret
cld
aam
fdivrl
xchg
stc
shr
not
jmp
xchg
out
sub
sarb
hlt
cmc
ljmp
ret
aam
test
sub
nop
call
out
jmp
ss
ss
cmp
fstpt
xlat
xlat
ret
ret
xchg
iret
xchg
mov
jecxz
cs
lret
into
jmp
cmp
ds
loop
aas
jmp
call
xchg
int
lret
sub
iret
div
aad
neg
lret
repnz
aad
repz
ljmp
int
ljmp
cli
sarb
xor
test
incb
std
cld
in
in
in
repz
cmp
stc
ljmp
in
hlt
xlat
jmp
call
in
lock
cmp
leave
clc
xor
loope
addb
hlt
xchg
fists
lock
ss
clc
cmp
ret
out
out
test
aad
stc
icebp
vpaddusw
fdivp
fnstcw
test
ret
in
cmp
mov
mov
mov
mov
test
ss
xor
out
stc
cli
aad
out
lret
out
incb
ret
std
jmp
jmp
ljmp
call
lock
leave
mul
orl
fmul
in
cli
out
fchs
cmp
hlt
std
aad
xlat
out
test
ret
jmp
repnz
aad
xlat
icebp
fcomp
cmc
leave
enter
icebp
cmpb
fsubr
call
test
sub
rol
fnstsw
clc
aaa
cli
cmp
jecxz
fnstcw
iret
mov
loop
fsub
icebp
int3
test
xor
int3
out
into
fst
int3
cmp
fdivs
iret
icebp
mov
aad
and
std
inc
into
cld
into
leave
jecxz
jmp
into
cmc
rcl
fcmovnbe
test
fdivr
in
lret
loopne
xchg
xchg
lret
xorb
call
ljmp
repnz
and
lret
ljmp
call
aaa
ljmp
repnz
enter
aas
out
cli
mov
jecxz
fcmovnb
fcmove
mov
lock
divb
fcomi
hlt
xor
out
int
cmc
std
rcr
aam
out
les
test
mov
icebp
sub
out
xor
ss
call
cli
loope
ret
jmp
add
ret
pop
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
cmc
cmc
shlb
jl
add
ret
fxch
out
mov
rcl
xor
jecxz
cmc
divl
dec
jmp
stc
aam
in
in
incb
test
into
std
out
shl
adc
out
sub
fdivrs
ss
xor
enter
aad
rol
clc
hlt
fdivr
sti
ljmp
xlat
loop
enter
in
fprem1
lock
clc
xor
fdivp
clc
xlat
lret
iret
out
mov
std
nop
test
xor
call
cmp
fdivr
aas
in
stc
aam
std
ds
mov
or
fsub
xor
out
stc
divl
std
cmp
cmc
lret
fldln2
cmp
add
call
in
repz
aam
stc
sti
out
cmp
repnz
mov
lret
cmp
ljmp
xor
ret
leave
hlt
icebp
xor
not
rcl
cmp
div
aad
out
sti
stc
jmp
lock
jecxz
leave
int
aaa
xor
lock
cli
cld
aas
fucomi
fdivp
out
stc
jmp
fst
mov
shr
ret
div
sar
in
cmpb
test
sti
stc
fadd
lock
mov
in
rol
cmp
in
call
xlat
aas
fdivrp
rorl
out
xchg
fsubr
xchg
out
divl
repnz
repz
in
test
ror
enter
sti
int3
shl
out
xchg
xchg
out
xlat
stc
in
rcl
xor
fdivr
cmp
hlt
ds
loop
cmc
fincstp
rcr
cld
iret
rorl
iret
in
repnz
aam
aad
rol
xchg
xchg
loopne
in
int3
sub
xchg
out
das
fdivs
lret
into
into
aad
fucomip
in
stc
out
cmc
loopne
in
fmull
fldcw
iret
sub
ljmp
stc
loopne
clc
mov
lret
addl
mov
shlb
ss
xlat
jmp
mul
aam
incb
hlt
iret
stc
fdiv
mov
in
xchg
xor
repz
stc
cmp
shl
test
fcmovu
in
hlt
aam
out
out
ljmp
cs
shr
int3
cmp
out
aas
repz
loopne
ss
shl
fucomi
in
jmp
in
iret
jmp
out
fcomp
stc
ljmp
in
xchg
fiaddl
test
out
iret
xor
into
out
out
fcmove
int
incl
std
hlt
call
in
loop
into
call
iret
dec
cmp
sti
aad
repnz
sbb
roll
enter
call
loope
loopne
loope
test
test
loope
in
cli
addl
xlat
shr
in
int
cmp
sbb
xchg
test
mov
fmul
les
sarb
enter
jmp
fcmovb
stc
out
sbb
cmc
ret
ffreep
les
loope
in
mov
aas
ds
repz
ret
ss
in
sti
test
faddl
out
cmp
jmp
sti
out
fdivrl
shlb
cmp
icebp
mov
div
int3
loop
mov
dec
cmc
sarl
cs
int
iret
cli
cmp
cmp
ret
add
mov
xor
xlat
jmp
xlat
jmp
stc
xlat
cmp
leave
bnd
mov
leave
ljmp
out
out
in
xor
cmp
fistpll
ljmp
ffreep
cli
in
std
sti
fcomip
xchg
out
shll
sub
xlat
fst
repz
loopne
loopne
cmp
mov
out
decb
loope
xlat
aam
out
jmp
cmp
cmc
mul
jecxz
leave
repnz
xlat
sbb
lret
mov
int3
lock
out
shr
into
hlt
lret
fmul
test
in
test
fdivr
std
enter
aad
lock
iret
jmp
lock
in
rcl
out
incl
add
nop
out
decl
in
jmp
aam
out
lret
lock
lock
xor
std
into
xabort
aas
shl
sti
rol
enter
cld
xchg
jmp
and
aad
ret
fmul
cmp
jecxz
repz
repz
in
mov
mov
int
cli
out
xchg
in
shll
in
ret
aam
clc
idivl
repz
fildl
sub
ror
std
in
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
out
mov
jp
jg
cmpsb
add
test
sub
aad
cmc
fdivrl
int
aad
iret
clc
clc
fcmovb
fld
ret
ljmp
mov
xchg
cs
in
xlat
repz
sbb
cli
in
aas
call
fcmovnu
fdivp
in
ss
hlt
aaa
cmp
fdivr
rcr
test
shl
fildl
lret
call
lret
cs
lret
fnstcw
in
xlat
cmp
in
cmc
shl
dec
mov
push
addb
xor
jmp
stc
std
hlt
lret
ljmp
out
cld
hlt
stc
jmp
mov
xchg
xchg
jmp
sti
icebp
cmp
cmp
fistpll
cli
cmp
vcvtpd2dq
xchg
iret
jmp
leave
jmp
lret
in
int
rcl
int
std
std
sar
fadd
or
nop
out
out
int
cld
in
std
into
repz
idiv
fdivp
fcomp
ljmp
lret
and
out
out
xor
out
aam
into
cli
cmp
xchg
cld
xchg
lock
lret
divb
ret
in
imul
cli
cli
cmp
out
lock
cld
jecxz
fsubrp
out
mov
int3
lret
lock
repnz
out
out
xor
fstpt
cli
lock
repnz
into
fimuls
loop
aaa
jmp
cmp
lock
cld
cld
out
cld
ljmp
out
xchg
mov
in
out
lret
xor
fcomip
cmc
ret
ds
inc
lret
mov
in
vphaddwq
leave
int
xor
out
out
aaa
lret
rcr
in
aad
std
incl
filds
out
xor
ss
xor
fdiv
clc
cmp
loop
aam
fsub
std
mov
lret
xchg
xchg
lock
jecxz,pt
loop
out
in
cmc
out
out
aas
fcom
into
repz
in
out
stc
xchg
fisttps
hlt
xor
fidivl
lock
hlt
int3
cli
lock
repnz
vpavgw
mov
out
fisubrs
out
jmp
xor
lock
aam
fdivp
xchg
lret
ljmp
out
fsubrp
into
cmc
rcr
out
sar
icebp
repnz
xlat
idiv
enter
leave
loopne
jmp
cld
mov
cmc
out
fdivr
cmp
std
aad
aam
fimull
leave
lea
xor
loop
icebp
jmp
jmp
repnz
loopne
jmp
cmp
and
out
xchg
fdivp
clc
hlt
lret
iret
int3
clc
out
int
std
loope
test
clc
rcr
inc
fcmovu
int3
loopne
xchg
lock
in
cs
in
cmp
lret
idiv
out
jecxz
into
ds
ljmp
ret
addl
fst
adc
lock
mov
mov
cld
test
xchg
out
aad
fdivr
cmp
fsin
repz
xchg
jecxz
out
sti
test
adc
shl
cmc
int
shr
cmp
cmp
int3
div
fcmovnu
cmc
idiv
stc
call
mov
jmp
ljmp
aas
jmp
out
loope
in
idiv
out
test
aad
sarb
leave
out
fsub
ds
xlat
loopne
addb
test
and
fmulp
sub
aaa
xor
sar
fnstenv
in
aaa
cld
ret
out
loope
fcomp
or
fmul
ds
sti
fcmovbe
cli
cmp
leave
int3
stc
int
loopne
ret
in
aad
fiadds
nop
in
hlt
aas
xor
test
icebp
cmp
sarb
std
test
out
in
sub
rcr
enter
aad
cmp
loop
loopne
cli
aad
ret
iret
cld
xchg
xchg
in
lret
ret
cs
iret
cmp
into
fcmovu
ret
fcmovnu
icebp
clc
mov
xchg
icebp
int3
enter
lret
hlt
into
aas
cmp
call
fmulp
jmp
out
vaddsubps
out
xor
enter
in
std
addl
xchg
out
repz
loop
leave
sti
cmp
repz
ds
in
xchg
in
clc
std
clc
jmp
lock
cs
fcmovu
sti
in
idiv
icebp
mul
into
in
std
mov
enter
out
mov
rol
lret
fcomi
cmp
jmp
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
imul
add
xor
jmp
ret
not
inc
xchg
sub
in
in
repz
xor
out
xor
int
fidivrs
loope
idivl
fmulp
stc
loopne
lret
in
lret
xor
repz
std
fcomip
test
ret
aam
loopne
idiv
leave
sti
loope
test
into
int3
sub
repnz
fdivrp
in
enter
fxch
loopne
jecxz
mov
in
xlat
shr
clc
std
cli
cmp
stc
aad
aas
sbb
lds
out
lret
xor
std
int3
std
rcl
fdivr
lret
in
rolb
sbb
testl
xor
in
xor
fnstsw
rcl
cld
ror
xchg
fmul
fmull
icebp
mov
out
not
lock
out
test
addb
enter
loope
out
out
cs
call
fsincos
hlt
iret
sti
out
idiv
aad
or
push
mov
xchg
out
xchg
out
enter
xor
xlat
std
ljmp
shl
test
fcmove
addb
cld
ss
iret
jmp
cmc
fiaddl
cmp
cmp
shl
cli
and
les
loopne
aam
int
clc
clc
xor
cli
cli
test
xlat
leave
shl
call
loope
shr
ss
stc
cmp
rcr
sti
ret
in
fadd
repz
call
ljmp
loop
xor
lret
cmp
call
xchg
test
loopne
lret
lret
adcb
div
in
cmp
cmp
hlt
rol
idiv
or
loopne
in
call
xchg
in
loope
xor
lret
fmulp
leave
imul
fnstsw
cld
out
call
loop
mov
xor
enter
lret
out
out
idivl
adc
enter
lock
loopne
ljmp
repz
loope
hlt
icebp
iret
ds
cld
lds
sbb
rcr
lock
iret
sti
lock
enter
out
sub
aas
fadd
rcl
test
orb
int
xor
sarb
cmp
fmul
fsubrp
sti
cmp
stc
in
fmulp
ljmp
jecxz
mov
xor
icebp
cmp
int3
out
imul
cmp
in
repz
add
loopne
xchg
ret
jecxz
xor
lret
xor
repz
ret
call
out
out
out
mov
repnz
das
test
shl
int3
sarb
xor
fldl
lret
xchg
int
ret
clc
out
out
lret
fidivrs
adc
fucomip
repz
int
in
frstpm(287
fmul
out
out
hlt
sti
sti
repz
shl
lret
jecxz
std
fsubp
out
icebp
mov
cli
add
iret
jecxz
fcomp
icebp
lret
call
aad
loop
fxtract
fmul
fucomp
out
leave
jmp
fsubrp
out
out
enter
shl
fsub
icebp
and
repnz
loopne
test
sti
ficoms
das
into
xor
leave
push
int
fucomi
ds
aam
fldl
xchg
xor
clc
jmp
cmp
int
and
fadd
xor
call
out
mov
ret
fcmovbe
fsubr
fcomp
xlat
std
loop
ret
jmp
aam
sti
cli
shr
xchg
lock
call
leave
int
rcr
shl
fistpll
cli
fnsave
cmc
mov
leave
sbb
int3
std
fcmove
loopne
xchg
hlt
jmp
repnz
call
rol
hlt
sbb
sti
in
loopne
test
lea
int3
out
cli
cs
lret
neg
fsubp
orb
mov
lock
fsin
stc
fst
fdivrl
div
test
fmulp
fucomi
cli
fiaddl
cmc
enter
cmp
fadds
lock
lock
fldpi
orl
out
incb
iret
xor
lock
in
loope
sar
test
int
into
lret
xchg
out
ss
xor
xor
in
ljmp
in
fadd
sti
xlat
call
in
out
loope
cmp
cld
cmp
mul
cmc
aad
fiadds
jmp
int
ret
fcmovu
add
dec
scas
xorb
into
outsb
jg
cmpsb
add
test
and
icebp
xchg
cmc
lret
out
out
mul
shl
sti
cmc
lret
cmp
icebp
sti
cld
ret
jecxz
flds
mov
out
in
les
fdiv
out
ljmp
cmp
in
jecxz
loope
lret
fsubp
int
incb
out
div
in
int
sar
shl
ss
jmp
jmp
icebp
leave
xchg
fucomip
aad
shl
out
hlt
sar
loopne
rol
clc
aad
clc
call
nop
cmp
xchg
cmp
cli
sub
cmp
shl
cli
cmp
mov
shr
lret
jmp
call
repnz
ror
icebp
in
std
test
loop
rol
jecxz
fdivr
aam
adcb
leave
lret
repz
xor
enter
icebp
fadd
out
xor
out
cld
mov
cli
in
out
call
hlt
div
repnz
jmp
lret
into
loopne
sti
sbb
call
std
test
fstl
rcr
cmp
fdivrs
cmp
idiv
std
rcr
cmp
jecxz
fiaddl
loope
iret
aad
clc
jecxz
hlt
jmp
enter
stc
fld
loop
and
mov
lret
jmp
repnz
xor
into
xor
sub
fidivrl
aas
clc
stc
test
jmp
test
in
repnz
stc
out
repnz
test
mov
icebp
xor
loopne
lret
xor
dec
loope
int3
loope
clc
repnz
ret
lret
rol
rcl
cld
sti
fcomp
clc
cli
int3
hlt
test
enter
mov
loopne
loop
ret
int
cmp
neg
cli
cmp
test
sti
out
nop
out
xlat
int
fdivr
cmp
call
cmc
fstpt
roll
in
sti
mov
out
das
mul
rcr
cmc
ljmp
testb
loope
ljmp
loopne
cmp
stc
call
xor
xlat
into
repnz
repnz
aad
imul
fstp
xchg
fucom
or
ror
cmp
into
out
fstp
loopne
shl
aad
lock
cld
loop
jmp
loop
loope
repnz
repnz
aad
aad
cmc
cmp
stc
jmp
xchg
neg
iret
clc
mov
lret
xchg
shr
loopne
out
idiv
lock
in
iret
out
icebp
std
clc
cmc
in
aam
lds
fldl
in
iret
lock
fdivrp
loopne
call
ds
xchg
lret
les
hlt
enter
loope
loope
cmp
repnz
not
cmp
call
out
lret
das
in
repz
leave
sti
aas
cld
or
test
fucomi
fincstp
repz
fld
mov
lret
iret
jmp
aam
call
jmp
test
cld
xchg
in
mov
lret
xor
lret
leave
in
fucomp
in
sbb
shr
rcr
clc
addl
iret
sub
lret
leave
xor
imul
cmp
cmp
int3
loopne
shr
fimuls
xor
mov
rol
ror
jmp
loope
test
cli
in
testb
in
aad
xor
aaa
xor
sti
xchg
out
iret
out
loope
ljmp
in
into
shl
idiv
aad
xor
cmp
mov
fucomip
sti
cli
fiadds
xlat
into
xor
clc
jmp
jmp
into
in
lock
cmc
cmc
test
fsubp
ljmp
out
stc
int
fldcw
cmc
div
fcmovne
out
filds
test
fldl
incl
xor
ror
fidivl
iret
hlt
int3
sbb
fsubr
in
in
nop
repz
std
adc
sub
ljmp
into
stc
loope
jecxz
rcl
test
loop
xchg
clc
and
loopne
xlat
ss
in
clc
ss
sub
rcl
testl
jmp
ror
rcl
call
cli
aam
cmp
aam
rol
ret
shl
fiaddl
repz
in
in
shlb
repnz
cmp
ret
repz
loop
fstp
xlat
mov
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
push
dec
mov
jl
add
in
fdiv
out
aam
xor
int3
std
repz
cmp
fsubr
sarl
cmp
fst
test
ffreep
cld
std
icebp
lock
das
xor
jecxz
cld
repnz
cmp
cmc
cmp
fdivrs
fmull
mov
int3
jmp
lret
into
cli
ret
iret
loope
xlat
lret
int3
aaa
or
cld
xor
aad
loopne
mov
xor
out
into
sarb
sarb
cmp
loop
aam
ds
jmp
ror
jmp
fldlg2
cmp
bnd
ret
sar
rcr
sti
shl
addl
lea
aaa
sar
icebp
lret
cmp
cmc
repnz
xlat
icebp
ds
cld
int
mov
out
orb
leave
in
aam
jmp
roll
out
jmp
xlat
xor
lret
lock
fstp
in
into
mov
sub
test
out
xor
xor
enter
int
cmp
xchg
test
in
repz
fnstenv
xor
into
aaa
cmp
into
iret
fst
stc
xlat
mov
aad
mov
test
fsub
repz
loop
imul
cmp
cmp
into
cmc
jmp
faddp
lock
rcr
inc
fdivr
sub
leave
jmp
enter
xor
xor
shl
sti
mov
cld
int3
loop
jmp
test
ds
loop
repz
repz
xor
in
movl
jmp
jecxz
stc
repz
int
cmp
out
repnz
fucom
mov
in
out
fcmovu
rcll
jmp
sti
rcr
lret
ret
fucom
jmp
test
lret
in
out
stc
int3
fcmovu
ljmp
div
lds
and
lret
loop
int
jmp
xor
idiv
fnstcw
loope
int3
loope
neg
cmp
fmuls
out
lock
fadd
xlat
idivl
in
cmp
sbb
int3
int3
lret
lea
call
repnz
lret
cmp
out
neg
cli
ljmp
iret
aad
jmp
xlat
clc
out
out
cmp
and
orl
fisubrs
in
enter
ljmp
fcmovnu
in
call
aam
addl
icebp
in
xlat
ror
cmp
fcmovne
cmp
int3
aaa
ds
bnd
vcvtdq2pd
loope
loopne
test
repnz
enter
rcr
jmp
fnstsw
clc
icebp
test
clc
mov
decl
xchg
lock
jmp
divb
cmp
ds
fsub
and
testb
into
out
out
ret
icebp
xlat
hlt
shl
iret
ljmp
inc
xlat
fisttps
loope
shr
neg
ljmp
std
ds
icebp
repnz
ret
sub
test
icebp
xor
in
out
shl
xor
clc
out
ret
and
mov
ljmp
call
cmp
std
push
movb
ret
out
repz
leave
xor
out
out
out
out
repz
out
rcl
shl
fnclex
frndint
into
fdivp
call
xor
cmp
shlb
fsubr
out
xlat
jecxz
repnz
jmp
and
out
test
out
shr
xor
rol
cmc
cmp
cmp
int
shl
aad
fdivrp
mov
roll
lock
iret
fpatan
cmp
movb
fst
fcmovu
out
aas
flds
test
ljmp
enter
iret
in
ret
sar
ret
loopne
leave
in
call
jmp
fdiv
enter
ret
cmp
hlt
stc
loope
les
xor
lock
fcmovbe
xlat
neg
int3
xlat
aam
ffreep
sti
adc
int
loop
xchg
xchg
mov
repz
cld
cld
sti
in
in
repnz
mov
loop
nop
xchg
fst
loop
call
lret
enter
cmp
stc
jmp
stc
ljmp
sub
in
in
xor
repz
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
jns
and
cmpsb
add
jmp
jmp
in
fucomi
fucomi
cld
test
loopne
call
leave
loopne
aad
imul
iret
int
cmp
cli
stc
repnz
hlt
fnsave
sar
ror
stc
std
or
aad
sub
aad
rcr
int
aas
ss
fcmovbe
hlt
in
orl
enter
loop
xchg
shl
ljmp
cld
enter
into
cld
clc
repnz
stc
xchg
hlt
repz
lret
ret
lret
lret
iret
icebp
icebp
into
in
in
in
cmp
adc
aam
out
fdiv
lret
xor
fcmovu
xor
in
rol
cld
xlat
div
fsub
sbb
fsub
xchg
int3
clc
shl
repz
out
fcmovnbe
add
fsub
mov
call
in
sar
test
jmp
jmp
dec
fistpll
fadds
loope
mov
fisttpll
rol
out
ljmp
addl
int3
in
lock
lock
rorb
repz
out
clc
xor
aas
inc
in
fcomp
into
test
rolb
cli
ror
adc
rcl
test
cli
stc
fdivr
cmp
sbb
out
hlt
add
lret
in
or
repz
iret
fcom
out
fnstsw
ds
cld
out
loope
in
mov
stc
out
adc
test
in
fcom
out
leave
ds
in
out
out
fadds
fcoms
into
sarl
lock
stc
xlat
ss
into
cmp
lock
lock
out
cld
ror
sub
in
xor
fcmovb
rcr
cli
fdivrs
int3
rol
fnstsw
fisttpl
stc
lret
sti
std
std
rcl
rcl
cmp
call
aaa
in
int3
loope
repnz
stc
dec
std
fmul
nop
fisttpll
in
aaa
in
leave
shlb
cmp
cmp
shl
icebp
ffreep
in
out
cmp
xchg
xor
not
lret
lret
fcmovnbe
xor
shl
repnz
std
sbb
orb
iret
repnz
iret
fsubr
not
lret
fcmovnbe
icebp
shl
enter
testb
jmp
das
xor
xor
aaa
fsub
cmp
cmc
jecxz
addl
xlat
or
cld
cmc
in
call
in
fsubr
int
xor
repnz
xchg
ljmp
xchg
call
loope
rcr
xor
int
fsubr
fld
aas
rcl
lock
ffree
lock
loop
jmp
out
jmp
repnz
repz
cmp
test
lret
mov
lea
int
into
imul
lock
int3
ds
clc
cld
hlt
sti
fstp
loop
sti
cmp
mov
xor
enter
cmp
ds
fisttpll
sub
ljmp
leave
xor
out
fsubr
in
fucomip
clc
faddl
sbb
xchg
iret
jmp
ret
cmc
iret
stc
ss
int
stc
aad
shl
sti
xchg
lret
jecxz
aad
in
xor
xor
xor
icebp
cmp
rcl
neg
cmp
out
fdivp
fmul
testl
aam
enter
hlt
int3
pushl
clc
sarl
adc
test
sub
int3
xchg
jmp
hlt
xor
cld
aad
aas
in
lret
and
jmp
roll
loopne
aam
cmp
cs
jecxz
in
iret
fadds
idiv
lock
mov
aam
in
shl
iret
cmp
std
lret
lret
cmp
aam
xor
ljmp
lret
xchg
lret
xor
shl
aam
xlat
lock
shr
cmp
out
xor
std
fimull
xlat
in
in
sar
into
jmp
aam
out
cmp
call
cmp
sbb
xchg
repz
xor
icebp
out
in
ljmp
add
ret
jecxz
mov
xchg
in
loope
xlat
aad
aaa
xor
cli
aad
hlt
fcmovnu
fsubp
out
icebp
call
out
fcmovb
mov
xchg
cmc
mov
xor
out
lock
ror
fnstsw
neg
fiadds
fsubp
test
lret
orl
xor
jmp
icebp
fsubr
sarl
faddl
cmp
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
rcrl
int3
jl
jl
add
ds
repnz
testb
jmp
iret
icebp
xor
rcr
int3
aaa
int
shl
fiadds
xchg
mov
lret
jmp
xchg
lock
div
cmp
cli
cmc
fmul
int3
fidivrs
cmp
movl
ljmp
xor
int3
incl
neg
loop
ffree
cld
lret
xchg
nop
icebp
cmc
out
out
in
cmc
cld
sarl
call
fdiv
neg
stc
not
ljmp
out
call
fmul
cld
or
jecxz
hlt
ret
adc
fsubp
orl
xchg
div
das
in
leave
sti
jmp
ror
xlat
ret
idiv
fxtract
mov
hlt
shl
aad
ret
loop
repz
fdecstp
cli
loope
lock
idiv
jecxz
mov
call
loop
xchg
out
shrl
in
jmp
cmp
jecxz
stc
incb
jmp
stc
loope
repnz
call
cmp
icebp
ljmp
bnd
fdivr
xchg
int
xchg
cs
in
ljmp
rolb
stc
mov
lret
cld
nop
mov
les
aaa
neg
in
sarl
fdivrl
out
lock
xchg
in
loopne
clc
test
faddl
int
fcom
clc
enter
xor
ljmp
loopne
sti
sti
out
fucomp
sar
jmp
out
out
cmp
jecxz
cmp
lock
cmc
mov
out
rclb
xor
mul
out
xor
lret
fidivrl
ljmp
shl
fxtract
addl
lret
div
xor
fcmovnu
cmp
test
rcr
loope
sbb
cld
jmp
loopne
sti
ljmp
fldl2t
out
div
flds
repz
ret
loopne
in
stc
decb
xchg
aam
shrb
aam
in
fmul
addb
ds
fiadds
call
iret
ljmp
aaa
std
into
int
ret
stc
jmp
fcmove
ror
decb
mov
in
cmc
out
cli
cmp
shl
loop
aad
mov
cmp
mov
out
nop
fisttpll
cs
clc
call
fcom
div
sbb
ret
lret
loop
jmp
adcl
rol
ss
xor
fsub
shl
out
and
std
incl
sub
std
das
shlb
ss
fmul
sti
loope
rolb
aam
fdivr
mov
xor
jmp
in
into
fdiv
cmpb
clc
adc
stc
and
vshufps
int
fucom
xor
loop
ret
xor
out
cmp
jmp
cmp
loope
rolb
repz
mov
ss
call
int
rcr
cld
cmp
vcmpps
fsubr
in
aam
les
call
in
xlat
neg
stc
and
xchg
cli
int3
in
loope
ret
in
out
cmp
cmp
jmp
test
orb
test
aam
sub
xor
das
fdivrl
test
fadd
aas
addb
adcl
out
hlt
int3
fsubr
in
ret
hlt
cmp
aam
ret
fcmovb
cli
ljmp
xlat
leave
icebp
out
into
fucomip
lret
cmp
into
int3
aas
fcmovnb
xlat
out
loope
jmp
mov
divb
aad
sbb
cld
cmc
testb
mov
mov
clc
lret
cmp
lret
in
sbb
not
in
stc
addb
jmp
xor
shl
in
loopne
into
cmp
filds
call
shl
divb
xor
leave
cld
fcomi
cmp
sar
out
rcl
xor
rorl
cli
lret
lret
rcl
xor
cmp
fsubp
cmp
sbb
cli
clc
cli
out
mov
loope
icebp
add
in
in
cmp
lret
call
ds
ret
rol
loope
fcmove
ret
filds
lret
call
testl
sti
in
lret
call
and
out
cmp
out
fldln2
int
fdivl
ss
aad
rcr
mov
out
mov
out
int3
iret
enter
ds
aad
jecxz
stc
aad
lret
sar
loop
xchg
ror
call
out
lret
cmp
add
add
add
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
shrb
add
jge
jl
fldl
jmp
sub
loope
test
cmc
ds
xlat
ljmp
shl
out
fdivr
cld
ljmp
out
sub
in
in
aaa
in
cmp
fcom
iret
out
jecxz
ret
clc
int
cli
test
test
xchg
clc
int
call
stc
cmp
out
in
out
enter
repnz
jmp
aad
int3
in
fmul
lret
cmc
cmp
lret
out
fisttpll
decb
fimull
aam
icebp
fcmovnu
cmp
cmp
out
ret
in
call
int
mov
xlat
jmp
cmp
in
clc
adc
enter
in
lret
in
test
aaa
lret
out
shl
div
fucomi
cmp
repnz
cld
cmc
xchg
std
faddl
lret
fsubp
ror
aam
mov
icebp
xlat
in
cmp
xlat
loope
fneni(8087
clc
call
ret
ret
in
xchg
repz
icebp
int
out
loop
ss
aad
fmul
ret
fcmovb
cmp
xchg
lret
fucomp
ret
ret
test
out
in
fnstsw
ljmp
cmp
aas
cmp
addl
fcomip
jmp
int
aad
xor
rol
les
ljmp
ret
repnz
call
stc
std
out
loopne
jmp
aam
aad
cmp
repnz
xor
int
xlat
rcl
in
xchg
in
lea
leave
in
fdivrs
xor
stc
int
in
xchg
mov
ret
out
int3
mov
xor
lock
ss
test
movl
fsubp
repz
loop
int
std
xlat
leave
fcmovb
aas
jmp
xchg
fldl
repnz
in
rcl
shr
pushl
ss
loope
in
stc
ftst
rorb
lret
test
aam
loop
sub
out
xor
jmp
stc
aad
xlat
cmp
int
sar
xchg
xchg
out
hlt
jmp
lds
cmp
cmp
aad
cmp
cld
test
call
stc
out
lret
out
idiv
enter
fcmovnbe
les
loopne
in
int3
jecxz
out
fsubr
ljmp
hlt
hlt
ds
repnz
sar
jecxz
clc
aam
xchg
out
out
repz
out
loope
lret
shr
leave
repz
hlt
lret
lret
aad
cli
mov
sti
loopne
leave
fdivr
in
call
fdivs
loope
aas
cli
ret
test
test
xchg
ljmp
sbb
shrl
repz
xor
rolb
into
test
xor
fsubr
repnz
out
jmp
vshufps
in
aaa
fidivrl
cmpb
repz
orb
xchg
leave
iret
into
icebp
int3
icebp
xor
xor
cmc
movb
iret
shl
fsub
xor
cld
loop
int
loopne
ret
xor
cmp
xor
in
lret
loop
loope
sar
sti
test
mov
mov
jecxz
into
out
mul
cmpl
cmc
cli
cli
xlat
cmc
std
sbb
leave
in
loopne
iret
in
xlat
vmovq
call
cmc
icebp
and
fnstsw
cld
hlt
mov
int
out
xchg
addb
loop
out
fnstsw
cmp
xlat
aam
rol
sar
iret
lret
and
in
aam
shl
hlt
xor
shlb
cld
test
ror
sti
repnz
mov
rclb
xor
cmp
aad
aam
stc
int3
cmp
fdivr
in
ret
jmp
movl
lret
aam
xlat
in
idiv
mul
std
out
out
xchg
out
addb
ljmp
call
clc
fdivp
shl
in
add
test
xchg
ljmp
rol
sar
jecxz
int
lock
test
add
xchg
aad
lret
in
out
fucomip
aam
stc
int
ret
shl
jmp
lock
fsubr
sub
out
xor
icebp
sti
loope
neg
jecxz
rcr
jmp
in
out
and
leave
vcmppd
hlt
cmp
ror
jmp
cmp
rcl
jecxz
repnz
loope
in
loopne
xchg
int3
xchg
mov
jmp
sub
clc
fstp
lret
enter
sarl
cmp
cmpl
xchg
jecxz
mov
xor
bnd
sti
xor
adc
fcmovnb
movl
rorl
lock
cmp
enter
cmp
mov
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
sbb
jge
jl
ds
repnz
ds
test
xchg
out
iret
adc
xor
std
leave
aas
in
in
fld
cmp
out
cmc
std
xlat
mov
fcoml
loope
aad
mov
xor
out
ss
div
cmc
hlt
rorl
decl
mov
out
xlat
call
xlat
int3
ds
fnstsw
mov
fcomip
fldpi
int
sar
fstl
aaa
int3
repz
stc
xor
aad
mul
faddp
ds
ljmp
shl
xor
in
repz
rcr
hlt
xor
aam
and
int
in
cli
cmp
iret
xor
leave
cli
fnstcw
in
xor
into
fldln2
add
jecxz
sti
int
test
int
jmp
xor
in
cmp
aam
ljmp
cmp
addb
lock
fimull
aaa
fcom
out
stc
xor
icebp
sbb
fadd
xchg
out
icebp
out
cmp
repnz
repz
and
addb
das
ds
stc
cmc
in
fucom
int
fdivrl
out
sbb
fstp
jecxz
sti
hlt
clc
lret
mov
in
in
jmp
out
ss
icebp
cld
in
add
rcr
fucomi
fimuls
call
aam
cmc
hlt
lock
loop
test
fisttpl
mov
lret
iret
in
jecxz
lea
bnd
ljmp
aas
fnstcw
in
leave
out
mov
fadd
loopne
test
lock
repz
cmp
stc
cmp
clc
aad
fildl
int
xchg
test
xchg
xor
shlb
stc
test
xlat
cmp
mov
rol
xlat
iret
int
cld
adc
repnz
xor
fnsave
shl
cmc
stc
aam
aad
stc
xchg
out
mov
enter
repnz
int3
jmp
rcr
loope
mov
fmul
leave
dec
lock
in
xor
cmp
int
aad
cmp
lock
aad
std
mov
iret
cld
fmulp
call
in
iret
shll
into
cmp
aas
ljmp
loopne
clc
jmp
in
test
rcl
xchg
shrl
ss
cli
fcmovnu
cmp
icebp
aad
fucom
cmc
movl
xchg
ror
int3
lret
repz
aaa
cmc
roll
xchg
xlat
ret
std
iret
into
repz
jmp
sub
fsub
lret
cld
imul
xor
fildl
fmul
jecxz
sub
fdiv
cmp
sti
in
cmp
lock
in
mul
xlat
cli
testb
and
fcmovnu
in
jmp
repnz
loopne
filds
in
jmp
enter
in
in
cmp
fdivp
mov
ds
repz
icebp
loop
icebp
fdivs
in
in
cmp
out
call
ljmp
loope
in
cmp
in
lret
repz
lret
rcr
stc
cmp
addl
out
aaa
aaa
cmp
repnz
xchg
stc
cmp
rcr
add
fmul
mov
rcl
aad
repnz
cmp
jmp
lock
fmul
cmp
jecxz
mov
ret
in
lock
cmp
int3
jecxz
xlat
xor
fcmovu
cmp
cmc
clc
call
loope
enter
icebp
int
shl
ss
out
icebp
cmp
xlat
aas
aad
ret
cmp
fsub
fucom
out
aam
fcomi
in
lret
in
cmp
cmc
cld
cld
iret
test
roll
dec
sub
out
aad
into
into
cmp
rcl
flds
repz
call
jmp
idiv
out
lret
cmp
cmp
cmc
jmp
cli
test
fmull
mov
mov
out
ss
sti
leave
hlt
int3
ror
int
into
cmp
jecxz
aam
mov
call
ret
jmp
xor
clc
clc
lock
clc
cld
fld1
in
lret
sbb
test
out
out
xor
loope
out
shr
xor
addl
les
xchg
call
repz
in
cld
cld
repz
out
sbb
bnd
xor
fdivp
shr
fsubp
add
loopne
cmp
fsqrt
enter
shr
shrb
hlt
repz
cld
fcmovu
jmp
fcmovnb
inc
lock
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
cmc
rorl
jle
jge
jl
aam
ret
cmp
shr
decl
addb
out
repz
ss
xlat
xor
cld
sub
test
loope
div
loop
fldl
in
mov
shl
shlb
les
lret
dec
cmp
fildl
out
out
mov
out
icebp
cmp
out
cmp
iret
ljmp
rcl
ret
clc
sub
ret
orb
loop
int3
repnz
std
int3
fldl
jmp
fucomip
decb
out
ret
in
lock
sti
into
fsubr
incl
fmul
cld
in
sti
into
icebp
loop
in
out
ljmp
repz
cmp
enter
mov
clc
fcomp
into
cmp
xlat
out
ret
aas
loop
repz
xchg
cld
test
addb
int3
xlat
cmp
sti
xor
lock
into
shl
cmp
aam
lret
sub
and
cmc
sti
sti
ror
stc
loope
xor
out
cld
idiv
loop
call
adcl
out
rcl
in
in
ds
cli
clc
loopne
xchg
stc
std
jecxz
xchg
mov
iret
les
repz
lock
push
sar
sti
cld
xchg
aad
xlat
fisttpl
xchg
sub
xor
in
out
shr
fsubr
fldl2e
cmp
shr
div
int3
fdivrp
xchg
mov
orl
cmp
stc
neg
sti
iret
in
testb
test
mov
lret
subb
int3
call
cmp
inc
fdivrs
hlt
fsub
test
fadds
iret
orl
xor
cli
shr
sarl
jecxz
in
vpsllw
ret
mov
std
enter
aas
ret
cld
rcr
cmc
hlt
int
mov
jmp
fsubr
lret
into
aam
sub
std
aam
idivb
rol
xlat
loopne
xlat
sub
sub
shr
shl
fidivrl
std
fcmovnbe
cmpl
lock
fcomp
call
xchg
fcomp
sarb
rol
aam
std
clc
in
hlt
fadds
stc
mov
sbb
ret
fdiv
jmp
loope
clc
test
mov
les
nop
mov
ror
ss
enter
cmp
rcr
cmc
sti
repz
cli
fucomip
nop
cld
xchg
std
int
out
jmp
ljmp
rcl
int
repz
or
cld
int
fiaddl
int3
xlat
hlt
ret
aaa
sub
out
icebp
cmpl
ret
aad
enter
movb
stc
lret
cmc
iret
fcomp
aam
cli
in
loope
in
call
lret
mov
mov
shr
mov
enter
enter
fldl2e
ds
cmc
rcl
test
loopne
lock
ljmp
xor
cmp
cmc
rcl
icebp
out
cmp
loope
hlt
loope
xlat
jmp
fadds
in
lret
iret
xor
cli
cmp
enter
test
lds
out
out
fadd
mov
fsubrl
ret
rcr
fcmove
ljmp
aad
cli
stc
call
xchg
call
ret
fucomp
leave
aad
out
aad
lret
xchg
test
std
into
ror
dec
fmulp
int3
loop
aam
iret
aaa
loope
fildl
fadds
mov
xchg
nop
orb
out
icebp
clc
div
inc
rcl
test
call
out
in
ljmp
shr
ljmp
divb
les
test
sbb
clc
jmp
std
loop
out
jecxz
cmp
out
fucomi
aad
repz
lock
aam
int
loop
fmuls
icebp
xor
aad
xlat
shlb
shl
repnz
xlat
aas
xchg
jecxz
ljmp
in
sub
shl
out
std
aam
sti
rol
ret
jecxz
repnz
ret
aam
out
std
test
fiaddl
in
shl
ljmp
out
icebp
clc
aad
loop
loope
stc
loopne
fcmovu
jecxz
icebp
xchg
out
xlat
loop
fxch
sar
out
fdivr
jmp
ret
in
dec
mov
fcomi
jmp
loop
fcmove
hlt
cmp
into
lock
cmp
std
mov
cmc
ffreep
out
out
call
hlt
sub
jecxz
loop
out
ljmp
repz
out
jmp
mov
mov
cmp
cmc
jmp
fucom
out
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
ds
scas
outsl
enter
jge
jl
int
repnz
hlt
std
fdivp
cmp
in
test
xlat
enter
out
dec
sti
lret
addl
cmp
shl
int
jmp
in
xlat
out
lret
loope
addl
mov
fucomip
xchg
iret
cmc
xchg
xchg
xor
iret
lds
in
idivb
std
xor
in
inc
rcl
fptan
jmp
in
lret
out
leave
test
shl
out
lock
icebp
cmp
lret
fdivrs
rol
xchg
shr
into
mov
out
aad
xor
cmp
call
repz
repnz
fsubr
mov
sti
mov
test
cmp
fsub
in
into
into
in
aas
test
sti
cli
xchg
adc
repnz
out
stc
xor
cmp
out
int
jecxz
in
aam
test
loope
enter
jecxz
rcl
shr
call
enter
out
out
int3
repnz
out
ret
hlt
adcb
hlt
shl
rcr
lock
xlat
cs
in
lret
sti
and
leave
repnz
test
loop
in
lret
stc
in
repz
cld
enter
ds
leave
faddl
xchg
loope
xchg
fisttps
int
cli
jmp
cmp
out
sti
aas
call
enter
orb
ss
not
neg
lret
ret
fdivr
test
fpatan
fcmovne
xchg
loope
in
lret
out
cmp
cmp
in
cli
fcmovnbe
sarb
ret
faddl
call
sub
cmc
xor
clc
lock
loope
call
call
mov
lret
xchg
ljmp
cmp
cli
jmp
repz
fcmovne
repz
xchg
in
jecxz
jmp
ffree
enter
lock
lock
sti
shl
aad
sbb
div
loopne
ror
repnz
aad
lret
jecxz
repz
iret
fiadds
out
repz
cli
sti
mov
int3
xchg
fimuls
shlb
repz
sti
aaa
in
out
in
loopne
out
aam
out
test
mov
fucom
loope
call
lret
leave
lds
iret
idivb
iret
ds
aam
cli
xchg
ljmp
test
into
idivb
fadd
cmc
cmc
jmp
out
int
xchg
aam
cmp
std
out
adc
ret
cmc
loop
fcmovu
int
fdiv
hlt
sti
aam
add
shl
mov
mov
fadds
pushl
icebp
hlt
sti
aam
into
xlat
iret
loop
aam
aas
and
test
out
mov
xchg
int
out
cmp
hlt
cmc
jmp
cli
shl
xchg
repnz
fmul
in
icebp
loope
iret
cmc
hlt
out
xor
fistpll
cmp
xlat
lret
out
fdivr
aad
cmc
jmp
stc
mov
test
stc
int3
out
sti
ret
lock
out
sti
in
sbb
out
in
loope
loopne
cmc
jmp
in
repz
hlt
ret
int
std
rolb
and
mov
icebp
ret
cmc
ret
fcmovne
xor
lock
aam
adc
mov
fadd
int
mov
into
out
out
in
sub
ljmp
addl
mov
fistl
aaa
mul
shlb
xor
not
cmp
in
ret
repz
fdiv
sbb
out
enter
nop
xchg
sub
repz
cmp
aam
cmpl
cmp
and
xor
shl
jmp
int3
ljmp
shl
aad
cmp
fdivrp
test
stc
fmul
repz
ficoms
repz
fnstsw
icebp
in
aam
fld
xchg
lret
lret
repz
jmp
stc
in
std
std
xor
sti
cld
and
les
in
aad
cmp
int3
xor
aas
cmp
clc
test
mov
add
mov
jecxz
cmc
hlt
shr
fcomi
icebp
test
lock
ds
fcomp
cmc
jmp
loopne
jmp
repnz
fcomi
xor
cmp
fcmovbe
cmc
lock
loope
loop
icebp
nop
int3
mov
call
leave
repz
idivl
xorb
cmc
loop
loopne
leave
hlt
lret
int
ror
mov
ftst
jmp
sar
enter
add
mov
and
fdivr
iret
shl
jecxz
in
xlat
into
ljmp
lock
ret
shl
sti
xchg
decb
clc
cld
xchg
out
xchg
repz
sti
sti
ljmp
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
inc
lods
leave
pop
jle
jge
jl
cmp
sti
fdivrp
into
shl
out
out
into
sbb
mov
ss
repnz
ljmp
rol
decl
in
xor
cli
out
xor
xor
xchg
test
ljmp
fxtract
int3
neg
out
into
cmp
fcmovne
xlat
lock
fadd
xchg
xchg
cmc
lock
lock
in
stc
rcl
sarb
in
aad
ret
cmp
imul
and
in
loop
xor
xor
xor
xlat
fxch
aad
lock
aas
pushl
rcr
lds
mov
jecxz
jecxz
lea
xor
into
repz
xor
ljmp
rcl
cld
inc
std
out
lret
hlt
sub
xlat
cmp
rcl
cmp
aad
ror
rolb
cli
fmulp
fadds
rol
jecxz
repz
aas
repz
sti
xchg
lock
fucom
std
loopne
in
flds
cmc
in
lock
lret
clc
jmp
ds
icebp
in
aaa
fdivrl
into
loope
clc
mov
int
sti
test
fmul
enter
vpsubusw
int3
shr
cld
loop
icebp
sti
lock
fsubr
xor
mov
out
test
ljmp
cmp
in
fimull
fcmovne
fildl
aad
repnz
ret
dec
xor
clc
cli
cld
jmp
test
xchg
lret
call
xor
shl
stc
aam
in
fcmove
stc
sarb
shl
sti
clc
rol
mov
xlat
out
cld
mov
mov
rorb
call
into
lret
xlat
iret
aam
ret
loop
cmp
call
mov
cli
repnz
out
icebp
cmp
fiaddl
vpsadbw
enter
imul
fdivr
sar
ror
iret
repnz
int
out
into
out
cmp
cmp
repz
or
nop
into
repnz
cmp
icebp
shl
iret
idivb
fsubr
jecxz
ljmp
mov
test
rcl
jmp
xor
ret
fnstsw
rcr
fadds
xchg
out
xchg
mov
ret
jecxz
shl
xor
aaa
jmp
stc
rcr
ffreep
xlat
mov
and
lret
sbb
out
jecxz
ss
hlt
xlat
neg
cmp
lock
fcmovnbe
orl
jmp
in
call
in
fcmovbe
fst
sub
std
in
stc
shl
sbb
leave
dec
rcll
xor
int3
ljmp
sti
fadd
repnz
jmp
enter
nop
in
out
imulb
sti
call
repz
call
xlat
sub
std
fldl
loop
cmc
repz
xor
out
out
jmp
clc
cmp
icebp
lock
in
in
leave
jecxz
std
mov
out
mov
in
lret
icebp
jecxz
out
out
ss
in
ljmp
hlt
test
xlat
loope
mov
lock
lea
loop
cli
jmp
cmp
fcmovbe
cld
aam
call
mov
sbb
lret
into
jmp
cs
hlt
cld
aas
sti
into
fucom
fstpt
rol
cld
repz
fsubrp
pop
fstl
nop
loopne
hlt
out
cmp
cmp
cli
in
aaa
or
sar
div
repnz
loop
loope
iret
addl
sti
into
fmul
cmp
out
and
xchg
stc
leave
rcl
aam
lret
lea
hlt
jmp
xor
aaa
ror
ljmp
ret
mov
fisttpl
orl
aad
fsubr
jmp
fmul
int
fldl
cmp
std
loopne
loop
ret
xor
ss
xor
int
fsubr
cmp
ret
mov
mov
xchg
ret
fmul
xor
out
aas
out
cmc
cli
out
in
out
and
int
jecxz
mov
cmc
mov
aam
cmp
aaa
fucomi
fnclex
in
fadd
mov
sbb
faddp
repz
sbb
clc
cmc
clc
int
cmp
sti
loopne,pt
shr
cmp
repz
loop
loopne
xchg
xor
leave
in
std
fcmovnb
cmp
call
test
testl
out
in
in
xor
int3
cs
cmp
repnz
aad
cmp
idiv
jmp
rorl
shl
test
cli
fstpt
int3
lret
repz
repz
cmc
leave
fucomi
out
lret
rol
ds
enter
shl
out
in
out
and
out
into
leave
testb
fisttpl
sub
mov
inc
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
xchg
inc
xchg
sbb
jge
jl
shr
aas
clc
int3
fnstcw
out
fiaddl
orl
rcr
repnz
cmp
fcomi
cmp
fdivp
ds
xlat
test
inc
movb
in
cli
fnstcw
cmp
sarl
test
adc
mov
xchg
cmc
icebp
xor
call
out
cli
fldln2
loopne
ret
jecxz
xbegin
fistl
shl
in
iret
cmp
cmp
lret
aas
loope
aas
test
repz
jmp
les
lea
leave
int
aam
aad
push
cmp
loopne
lock
call
icebp
in
rorb
rol
ret
hlt
clc
ljmp
lock
xchg
fcmovne
sti
lret
loopne
out
out
iret
cs
xor
sbb
repz
sbb
hlt
fcmovne
lret
xchg
test
xor
xor
jmp
cli
xor
cmc
lock
mov
fnstsw
in
in
jmp
rcl
fidivrs
dec
not
xor
xor
leave
jecxz
sti
std
mov
mov
xlat
in
lret
cmp
shr
cmp
aam
repnz
repnz
cld
repz
clc
aam
std
out
out
out
cmc
fsubrp
cmp
mul
in
repz
rcl
out
into
loopne
ss
cli
loope
test
loopne
mov
xchg
into
fsubrs
int
clc
out
jmp
cli
jecxz
repnz
loop,pt
cmp
jmp
nop
call
loope
cmp
ljmp
rcr
ffreep
out
loop
cli
leave
int
orb
lds
ljmp
out
xlat
cmp
int
shl
mov
orl
out
loopne
fdivp
shr
into
in
lret
cli
cmp
idivl
rcr
out
ds
icebp
xchg
jmp
xor
iret
cli
cmp
int3
out
aam
aaa
repz
hlt
fdivr
call
xchg
shl
xor
call
rcr
loopne
clc
ds
sti
std
ret
into
mov
lea
jecxz
aad
rcl
sar
xlat
into
cmc
lret
jecxz
xchg
lret
and
out
xchg
ret
into
fstpt
shr
int
cmp
test
fucomi
jecxz
in
fcmovu
int3
xchg
cmc
xchg
jmp
cs
ss
fidivrl
aad
shl
cmp
mov
lea
jmp
enter
idivl
sub
repnz
jmp
loop
xchg
xor
loopne
repnz
shl
add
mov
lret
jmp
sbb
fldl
icebp
rcl
in
std
call
call
cld
out
in
lret
lret
orl
jmp
fdivr
int
loop
loope
lret
xchg
in
loope
loop
std
lock
in
loopne
sti
int
lret
cmp
idiv
cli
ret
out
xchg
incb
fucom
std
fcmovu
xchg
xor
iret
sti
xor
rcl
cld
xlat
xor
repnz
sbb
fdiv
test
xchg
shll
lret
cmp
enter
into
fdivr
ds
lock
mul
mov
fdivr
xchg
bnd
cmc
out
aaa
ret
fidivrl
rcr
cli
fldl
out
mov
sub
not
xor
das
out
jmp
ljmp
std
bnd
cmp
int
mov
mov
shr
stc
xor
cli
aad
cmp
cli
test
loopne
jmp
jmp
loope
in
int
orb
aad
cmp
fdivrl
leave
xor
fcmovbe
ds
mov
mov
ljmp
cmc
int3
in
xor
cmp
cli
ror
sarb
aad
sti
clc
cli
mov
aad
sbb
loop
lock
rcl
sarb
ret
lock
std
rcr
xlat
int3
repz
jecxz
loopne
lea
cmc
fmulp
xor
xor
sar
sti
ljmp
hlt
sar
fsub
repnz
int3
lret
aad
shl
aad
stc
xor
cmp
sti
cmp
shr
xor
adc
out
cli
loopne
repnz
jecxz
fsubrp
rol
iret
cmc
idivl
ret
roll
xchg
lret
lret
out
mov
not
sti
lds
in
sar
cmp
cmp
cli
neg
cld
shl
fsubr
ret
mov
fnstsw
cmc
xlat
in
xlat
icebp
cmp
fdivp
sti
std
into
aad
ret
test
ds
out
enter
xchg
enter
out
fdivs
rcl
std
aas
sar
test
xchg
in
in
jmp
in
enter
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
lock
and
jge
jl
aam
out
out
cli
cld
sbb
fld
std
test
iret
mov
into
out
hlt
sar
repz
cmp
loopne
ss
les
ljmp
aaa
into
shl
bnd
fsubp
loopne
sar
jmp
out
iret
out
jmp
fstp
in
repz
loop
cmp
cmp
ret
stc
sti
in
int3
ficoml
ret
in
aam
cmp
iret
fdivrl
stc
loopne
push
loop
mov
fucomi
cld
shr
lock
ss
in
out
std
icebp
fxtract
jmp
adc
in
cmp
cmp
cmpl
iret
out
cli
xor
aam
iret
cmp
icebp
adc
fidivrs
ret
ljmp
xor
aaa
cmp
cmc
ror
xlat
icebp
test
xlat
std
ffreep
sti
mov
flds
ds
test
leave
repz
sti
cmp
xchg
not
in
in
out
int
mov
loopne
jmp
fcmovu
cmp
ffree
not
cmp
in
cld
dec
test
loope
divb
aad
cmp
fidivrl
loope
repnz
repnz
mov
fdivr
in
enter
int3
aad
loopne
ret
cmp
ljmp
cld
rcr
ffree
loopne
orb
lret
cmc
test
ds
lret
sbb
clc
clc
xlat
xchg
xor
loope
movb
int3
loope
jmp
out
loope
fcmovu
adc
loope,pt
jmp
cld
in
adc
xchg
mov
lret
call
cmp
fucomp
fisttps
jecxz
enter
enter
lret
cmp
loope
int
in
cld
aam
xchg
incb
jmp
mov
loope
ret
xlat
sti
into
fld
jmp
loope
test
fldl
loopne
loopne
call
xor
leave
ror
cli
sub
fdivr
rcl
shl
mov
not
enter
cld
in
loop
xor
xor
xlat
ss
in
out
aam
rolb
out
and
lret
call
shl
loope
jecxz
fimull
xchg
shl
int3
test
ss
rcr
cld
test
aad
fildl
std
call
xchg
or
repz
leave
cs
fsubrp
fcmovnu
cmp
faddl
in
mov
loope
jmp
out
xor
shlb
push
enter
std
cmp
fdivr
in
out
enter
in
out
test
cmc
out
lock
jmp
neg
cmp
int3
cmp
xlat
loop
test
in
nop
out
repz
sub
ret
xor
sti
lret
ss
fdivr
xlat
xor
sar
ret
jecxz
lret
shr
into
ret
rol
xor
neg
stc
clc
into
fdivrs
out
cmp
cmp
repnz
orb
loop
repnz
into
std
in
lret
shr
repnz
cld
cmp
rcr
jmp
les
out
ljmp
fadd
in
ljmp
cld
mov
out
cli
jmp
out
rcr
mov
rol
into
ret
fdiv
test
fxch
jecxz
in
loop
ret
leave
cli
lret
sar
cmc
xchg
loop
aad
aam
cli
ds
sarb
aas
add
enter
jmp
shl
xor
hlt
cs
in
in
cld
addl
in
sub
xchg
loopne
cmc
enter
rcl
hlt
fdivrl
aad
jmp
in
fiadds
sub
out
cmp
fcmovnu
into
jecxz
xchg
xchg
xchg
out
xrelease
stc
stc
fucomi
leave
fadds
fptan
ret
sti
out
fucom
or
call
out
sar
jmp
sti
cmp
rol
shl
std
mov
xchg
shl
repnz
fdivr
cmp
std
clc
xlat
ror
lret
mov
jmp
in
fiadds
int
shl
leave
jmp
aam
rcr
test
std
out
repz
fisttps
xor
cmp
aam
ljmp
mul
mov
test
in
sub
into
ljmp
aas
xchg
decb
faddl
xchg
idivl
xor
sub
xlat
loopne
lret
stc
test
fldl
jmp
in
test
xor
int3
out
fmul
mov
incl
jmp
int
iret
rcl
fsts
fs
dec
iret
jnp
les
jl
add
fcomp
icebp
icebp
std
cmp
cmc
jmp
mov
sarb
sti
fcmovnu
ljmp
mul
cld
xchg
std
filds
xor
cmc
xor
xor
jmp
cld
cmp
cmp
test
stc
jmp
fucom
int
loop
in
xor
lock
loope
std
ret
shl
cmc
fsubp
fdivr
stc
out
fsubr
lea
out
cli
cmc
ljmp
in
out
test
xchg
ljmp
lret
ljmp
iret
lret
in
mul
aas
std
lock
cld
sar
out
jmp
shl
lock
imul
cmp
loope
idivb
lock
loopne,pt
shl
mov
dec
sti
cld
lret
lret
loop
lock
shl
call
lret
repnz
aam
int
out
call
in
stc
lret
test
loopne
loope
jecxz
lea
loope
jecxz
xor
cmp
sub
add
cmc
out
cli
in
sti
fcoms
aam
xor
ljmp
clc
loopne
cmp
cld
cmc
div
fsub
fxch
out
shlb
lret
out
leave
lret
cmp
in
out
xor
aam
fcomip
addl
repz
icebp
lret
repnz
int
icebp
rcl
loope
clc
fisttpl
xchg
rorb
out
xor
enter
cmp
in
xchg
orb
call
repz
xbegin
stc
hlt
aam
into
cmp
fptan
loopne
ret
sti
loop
std
out
mov
loope
xor
out
repz
sti
into
std
sti
rolb
test
out
ret
fucomi
out
repz
out
enter
fucompp
in
cld
int3
xlat
iret
stc
repnz
out
fcmovnb
int3
mov
in
ret
test
in
xor
clc
lock
clc
int
and
test
loopne
in
fmulp
roll
shl
sar
fucompp
out
cld
icebp
loopne
cmp
in
cmc
idivb
addl
lret
lock
xor
clc
fdivrl
call
out
jmp
jmp
in
jmp
rcl
mov
aas
lret
xor
cmp
hlt
ret
sti
std
repnz
cmc
call
lea
rol
cmp
in
cmp
out
loopne
into
ffree
roll
jmp
adcb
cli
int3
cmp
icebp
ss
rcr
aaa
cmp
repnz
xor
out
in
sub
xor
enter
lret
loopne
repz
stc
xchg
mov
int
xchg
jmp
loope
jecxz
into
leave
int3
aad
in
ret
ljmp
lds
cld
std
fists
out
in
clc
shr
out
int
rcr
iret
shl
lock
call
cld
out
enter
out
aaa
jmp
in
ss
ss
repz
fdivp
cld
out
orb
out
jecxz
cmp
lret
in
clc
xlat
roll
loop
mov
loopne
ret
xchg
cmc
xor
out
out
hlt
imul
repz
rcl
aas
jmp
les
int
enter
jmp
int3
xlat
int
aam
fidivrl
shl
call
out
jmp
test
in
repnz
ljmp
sti
leave
in
cmc
sti
clc
jmp
lock
lret
jmp
lret
into
jmp
in
out
into
inc
test
in
leave
fdivr
out
ljmp
shlb
shl
fsubr
out
std
and
xor
cmp
clc
ljmp
fsubp
xchg
shl
fldl2t
out
xor
cmc
jmp
into
out
test
sub
int
fmuls
out
iret
rcl
icebp
lock
iret
cmp
xchg
loop
sar
std
mov
mov
lret
xchg
sub
lds
sti
shl
xlat
leave
jmp
stc
sti
std
loopne
in
std
fiaddl
addl
into
xor
int3
int
repnz
loopne
fdivrp
jmp
mov
fisttpl
enter
cmp
xor
in
icebp
cmp
fcmovb
addb
enter
filds
out
shr
lret
into
loope
push
fildl
in
call
int3
xor
aad
int3
xor
fcmovnbe
cmp
jecxz
fidivrs
rol
faddl
loopne
in
cld
out
sarl
inc
test
inc
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
cli
cmp
out
fnstcw
sti
iret
push
cmc
xchg
out
xchg
fdivrp
fnstsw
mov
xor
in
fcmovne
hlt
rcl
in
cmp
jecxz
loopne
fadds
testl
in
jecxz
cmp
cmp
sti
cmp
test
fcmovb
cmp
neg
add
fcmove
xchg
out
mov
lock
in
sarl
xlat
int
fdiv
cli
enter
jmp
pause
ffreep
in
ret
shl
iret
fcomp
fnstsw
cmp
cmp
idivl
cli
dec
cld
out
xor
call
lock
stc
stc
addb
loope
mov
mov
out
jmp
xor
into
repz
fcmovbe
neg
cli
rcl
test
ljmp
xor
hlt
ret
call
div
aad
cli
sti
test
fcmovb
leave
ret
repnz
lret
rolb
xor
out
clc
int3
cli
lret
idivb
int3
loopne
out
out
repz
loopne
stc
popl
repz
xor
cmp
ljmp
ret
out
jecxz
lret
out
or
vpmullw
lock
fdivrs
ss
stc
ret
fdivrp
aam
repz
out
test
std
out
mov
cld
les
xor
cmp
call
cmp
fld
loope
leave
out
loop
iret
decl
fxch
jmp
iret
in
call
fcmovb
sar
xlat
repnz
sti
in
xchg
nop
mov
loop
hlt
in
hlt
in
in
rcr
xor
jecxz
iret
stc
aad
loope
mov
enter
repz
sti
fldlg2
loopne
cmp
out
rcr
clc
loopne
cld
mov
into
fcomip
sar
mul
xor
fdivrp
repnz
loop
and
test
sub
jmp
shl
test
enter
hlt
stc
fcomip
repnz
out
call
call
lock
fnstcw
fcmovb
xor
cmp
ret
std
ds
fld
cli
neg
fldl
shr
int
in
leave
cmp
xor
xlat
mov
rcr
out
in
iret
fisttpll
cmc
aam
ljmp
fdivp
out
test
neg
out
repnz
lret
fldl
xchg
hlt
cmc
icebp
call
cmp
hlt
shl
loopne
stc
loope
aad
in
in
out
roll
sub
enter
aam
cmp
push
stc
loop
aam
mov
int
cld
orl
icebp
in
out
repz
cmc
cmp
vpmaddwd
jmp
in
xchg
call
div
in
aad
imul
call
not
shl
int
leave
mov
mov
enter
fcmovu
test
repz
rcl
call
ret
icebp
icebp
xchg
xchg
icebp
jmp
xor
out
out
hlt
jmp
orl
sti
xor
int
cmp
sarl
fadd
shl
fsubr
mov
std
nop
nop
out
icebp
aam
hlt
test
xlat
call
loope
ds
cld
repnz
leave
out
cli
rcr
xchg
repnz
vpextrw
in
into
out
leave
ror
sub
cmp
dec
fucomip
mov
repnz
out
in
ss
leave
cli
loope
cld
in
xlat
fcmove
jmp
cld
mul
mov
loope
shl
into
cmc
xor
xbegin
cmp
fistpll
rcl
leave
xchg
jmp
lret
icebp
xchg
out
fidivs
lret
in
leave
out
repz
int
jecxz
out
sar
xbegin
lock
loope
cmc
enter
call
aad
hlt
fstp
cld
mov
xchg
ljmp
leave
lds
in
fstp
out
lock
fcmovu
repz
sar
fimuls
cmc
in
mov
out
lret
xor
sub
out
rcr
aas
rcr
icebp
aam
lock
lock
ftst
icebp
shr
aad
out
ret
xor
fcomp
repz
cmp
clc
cmc
jecxz
rol
cmp
in
out
jmp
das
in
jmp
cli
xor
aaa
aas
in
cmp
fcomip
repnz
addl
rcr
fcmovnbe
sti
fst
sti
icebp
int3
aad
ret
rcr
aam
cmc
out
push
or
ljmp
repz
iret
int
std
enter
mul
fcmovnu
rcl
xchg
clc
fsub
fcmove
test
xor
out
out
xlat
sti
out
sti
fucomip
jecxz
std
iret
ret
shl
add
fisttpll
iret
cmc
xor
jmp
rcl
aad
aad
rolb
push
call
jle
jge
jl
xabort
fsubrp
fdivr
cld
rcl
test
aam
loope
ljmp
sti
lret
ror
fstpt
add
cmp
shl
in
lret
call
icebp
xchg
stc
sub
into
jmp
imul
cmp
repz
roll
jmp
out
into
ss
cmp
int
test
repnz
mov
fcmove
int3
loopne
shl
int
das
test
std
aad
xor
aas
mov
sti
mov
in
nop
in
into
aam
imul
lret
out
cmp
jmp
adc
cmp
fucomi
inc
xchg
out
fdiv
test
in
call
flds
sti
sti
incb
fsubrp
faddl
sub
fcmovnbe
cmc
shl
icebp
hlt
aad
not
loop
hlt
aad
mov
int
lock
mov
icebp
in
call
testl
lret
cli
ljmp
enter
out
std
sti
cmp
loope
repz
sarb
clc
out
aad
mov
int3
xor
ret
call
hlt
loope
idiv
fst
cld
xchg
mov
test
loopne
sti
enter
cld
lds
xor
lret
fld
std
ror
les
leave
loopne
out
int3
mov
xor
lret
into
fcmovnu
aas
hlt
xchg
out
testb
sub
jmp
xor
cmc
clc
repz
fsub
aas
lock
addl
fsubp
imull
hlt
ror
xor
sti
std
hlt
sarl
iret
cmp
jecxz
in
out
std
loopne
fdiv
aam
int3
icebp
enter
repz
fmul
fnstcw
cmp
fadd
int
in
int
lock
loope
ds
lret
cli
out
hlt
lret
lock
flds
in
jmp
xchg
xchg
out
stc
xor
aam
aad
cmp
aad
out
std
xchg
xchg
shl
addb
hlt
aaa
out
int3
enter
xor
cli
shl
aad
lock
rol
mov
out
ljmp
aad
loope
cmc
icebp
cmp
fiadds
shl
mov
jmp
test
mul
out
ljmp
test
cld
cmp
and
test
mov
rcr
xchg
jmp
repnz
aad
aad
std
shr
loop
out
test
mov
mov
iret
jmp
cld
xor
cli
lret
cmpb
call
jecxz
enter
xchg
lret
in
cmp
lret
cmp
aas
in
out
test
ffree
cmc
std
in
sti
nop
fimull
xor
not
ss
div
into
cmp
out
fcmovne
xchg
out
xchg
call
lret
aam
sti
not
sar
fnstcw
clc
lock
loop
ret
in
dec
enter
orl
stc
xor
call
sbb
loopne
ret
loopne
orl
into
cmc
mov
hlt
sar
cs
ss
loop
repz
cld
out
and
leave
mov
call
xor
out
ds
fucomp
stc
sbb
vpminsw
loop
out
fimull
into
xor
lret
fst
fdiv
lock
out
aas
rol
ljmp
iret
ljmp
in
std
repz
cmp
cli
cmp
out
sti
aam
out
mov
in
ljmp
into
shl
std
xlat
enter
fldl
loope
ljmp
shr
leave
lret
call
out
aaa
jmp
iret
fldl
fadd
xchg
jmp
fmulp
ret
cli
in
out
ror
iret
xlat
repz
adc
stc
loop
out
ret
into
out
lret
aad
call
ljmp
sar
clc
ds
jecxz
out
xchg
cli
nop
aad
sub
shl
xor
lret
xor
cmp
int
ds
cmp
fdivp
int3
out
enter
decb
div
in
sar
fucom
sarb
repz
fxch
jmp
mov
cld
iret
in
xchg
cld
repnz
cmp
out
repz
loopne
test
jmp
hlt
xchg
ffree
mov
aaa
int3
out
cli
int3
jmp
fcmovnb
iret
ffree
icebp
test
cli
int3
xchg
lock
iret
jecxz
int3
aaa
leave
hlt
call
rol
sub
adc
lret
ljmp
loop
into
lret
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
enter
ljmp
idiv
ret
idiv
mov
ljmp
iret
cmp
repnz
out
fiaddl
repz
addb
aad
in
shl
cmp
ret
shl
mov
cmp
in
out
xlat
not
fidivrl
xor
int3
cmp
aas
sarb
fchs
int
out
xchg
in
jmp
in
out
out
ss
xor
repz
stc
ret
cmp
shl
incb
call
xlat
ror
flds
lock
hlt
out
fxam
iret
fsubr
out
fcmove
xchg
xor
ret
enter
ljmp
filds
notl
in
les
repnz
int
ss
cmp
aas
rolb
jmp
mov
lret
xchg
rol
call
aaa
not
loope
loope
in
rcr
loope
in
loope
int3
int3
adc
xchg
int
in
xor
jmp
enter
out
rcr
xchg
ret
frstpm(287
inc
sti
std
enter
int3
in
xor
int3
sar
ljmp
aad
ljmp
int3
in
lret
xchg
loope
aaa
cmc
rcl
int3
sarl
loopne
test
xchg
leave
sub
cli
stc
leave
test
loopne
loopne
shr
aam
lret
cmp
repnz
cmc
clc
in
call
xchg
in
lret
cmc
jmp
xor
cmp
loopne
aad
jmp
loopne
nop
mov
fdivrp
jmp
fdivr
cmp
aad
cmc
fcmovbe
out
call
out
leave
addl
into
repz
cmp
sti
clc
xlat
mov
out
call
in
test
lret
int3
cmp
ret
into
sti
idivl
fcmovnu
enter
jmp
cmc
ret
leave
into
lret
std
addl
stc
ret
sbb
repnz
fdivl
stc
clc
xor
xlat
aam
cmpl
stc
jmp
fildl
jmp
out
int3
cs
shll
cmp
test
or
in
int
ror
enter
fldln2
jmp
into
cmc
loope
shll
xlat
cmc
sbb
ljmp
inc
lret
out
ret
in
in
repz
out
ss
cli
ret
addl
aas
out
ret
int
lret
cmp
fdiv
ffreep
stc
rol
cli
mov
xchg
call
in
out
int
sub
xlat
addl
out
jmp
in
out
cmp
in
ss
stc
stc
les
stc
enter
mov
clc
out
test
repz
int
out
out
out
cmp
cmpl
cmp
call
ljmp
rolb
aam
call
out
into
fnstcw
fnstsw
call
in
out
loopne
nop
in
in
out
lret
hlt
ss
lock
shll
cmp
xchg
lret
xchg
lret
in
mov
das
ret
leave
lret
cmp
and
hlt
shl
loop
leave
std
orl
stc
aaa
rol
ftst
not
rol
aad
in
loop
sti
sar
std
loop
enter
loop
ret
iret
sub
hlt
xlat
cmp
aad
lock
fmul
ljmp
enter
jmp
in
lock
fdivrp
int
cmp
int3
fistpll
std
mov
sub
decb
aad
icebp
out
fstpt
icebp
stc
fucom
dec
fisttps
ficoms
fstpt
icebp
icebp
sti
jmp
ds
aas
xlat
cmp
fld
mov
xchg
loop
xlat
std
cmc
hlt
fadd
ss
fldl
test
decb
mov
das
rol
xor
lock
fdivrs
xor
out
out
out
fmuls
in
movb
shl
jmp
xor
repnz
aad
hlt
in
cmp
fcmove
aad
clc
enter
test
mov
int
shrl
imul
in
into
xor
loop
jecxz
cld
clc
hlt
loopne
std
popl
loopne
call
cmp
in
fldpi
repz
ret
sbb
faddl
leave
incb
mov
in
jmp
aad
fmul
loope
cmp
rol
clc
repz
jecxz
xchg
in
lret
ljmp
or
jmp
ror
ror
rcr
frstor
pop
sub
lods
push
xadd
jle
jge
jl
shl
iret
cmp
cmp
add
fcomip
test
mov
inc
fsubrp
icebp
int
rol
xor
xor
cmc
cmp
div
shl
cmp
aas
aas
icebp
inc
fcomip
in
out
orb
cmp
fdivl
fistpll
clc
iret
fadd
cmp
sti
fcmovbe
fsubr
loop
ljmp
sub
out
sarl
int3
hlt
fdivrs
jmp
inc
sbb
jmp
enter
in
lea
lock
cmp
iret
lret
in
xlat
int3
aad
shl
rcl
leave
in
jmp
icebp
loope
ljmp
repnz
ror
imul
ret
fadd
mov
add
sti
mov
incl
lds
repnz
lock
add
jmp
fimuls
cli
shl
icebp
sub
icebp
int
aad
leave
int
lret
into
aad
test
sti
fldl
mov
hlt
aam
in
sar
aad
fdivr
aaa
fstp
cmp
repz
std
lds
ljmp
out
bnd
fstpt
clc
cmp
ds
cmc
incl
in
fucom
test
ljmp
jmp
in
repnz
int3
clc
stc
sbb
jecxz
and
and
mov
fidivs
xlat
in
out
out
fdivr
fistpll
std
sti
repz
cli
addl
lret
loop
jmp
into
aam
fsub
int3
loopne
incl
aad
inc
loopne
jecxz
lret
icebp
in
movl
jmp
lret
and
ret
aas
cmc
mov
mov
ds
jmp
into
repz
xor
ror
repz
fsubr
fmull
addb
enter
repz
shl
addl
xchg
jmp
aaa
xor
clc
cmp
jmp
lock
loope
and
lret
lret
cld
xor
imul
cmp
repz
aas
in
loopne
aad
jecxz
fcom
rolb
cld
fldl
aam
mul
aad
aam
ss
ljmp
stc
in
iret
cli
mov
stc
aam
aad
aam
loope
incb
test
cmc
ret
call
nop
aas
xor
clc
icebp
fucomp
stc
test
xlat
repnz
out
clc
shl
rorb
ret
cmp
cmp
test
adc
addl
mov
lret
call
out
fmulp
fsub
test
jecxz
xlat
sar
out
fisttps
xchg
xchg
loopne
sarb
xor
ljmp
ret
cmp
leave
cld
xlat
in
stc
xchg
out
jmp
int3
int
rcl
xor
cmp
aas
std
cmp
cmp
ds
stc
cld
mov
mov
icebp
loop
mov
fcmovnbe
cmc
fadd
cmp
xor
fdivr
cld
clc
xchg
mov
mov
fnstcw
in
call
loope
roll
sti
xlat
fiaddl
shr
xchg
shll
loopne
xor
call
aas
fcmovu
rcr
mov
repz
in
iret
rol
xor
shlb
cmp
ljmp
aad
ror
jmp
call
shl
icebp
call
ss
cmc
ljmp
sti
fisttps
xchg
xor
ss
lock
test
ret
loopne
ret
in
xlat
fmul
ljmp
icebp
ret
in
std
iret
cmp
cmp
sarb
rol
rol
shl
mov
lret
lock
cli
int
int
aaa
icebp
div
leave
xor
int3
aad
cmp
test
rol
sar
mov
out
mov
xchg
ds
aaa
lds
shll
lock
xor
mov
out
out
jmp
sbb
imull
jecxz
aam
fcmovne
call
out
std
fld1
enter
in
xchg
fimuls
xor
iret
shrb
lock
in
fmul
in
fadds
cmp
jecxz,pt
cli
mov
shl
int
cmc
aaa
cmp
idivl
sar
lock
loop
mov
hlt
test
or
loopne
xchg
out
xlat
std
shr
fmulp
lock
in
clc
xor
clc
leave
xacquire
xor
out
in
fst
cli
shl
sar
lds
xchg
icebp
mov
repz
icebp
int
xlat
cmc
out
in
cmp
sar
sarl
in
ret
fmulp
clc
enter
rcl
rol
loope
ret
push
jmp
lret
ds
lret
rol
loop
jne
xlat
sarl
jl
add
xlat
out
idiv
in
fsubrp
lret
aaa
neg
fcmovnu
jecxz
fcmovnb
loope
fcomp
lock
repz
out
xor
sti
in
icebp
incl
loop
sti
ret
mov
fsubp
or
out
jmp
ss
rcr
fdivrp
xor
in
cmp
sub
int
loop
fcmove
xchg
out
loop
in
cli
icebp
lock
lret
jmp
aas
iret
lret
ret
fcmovnu
dec
test
icebp
cld
lret
sub
leave
out
repz
jmp
fucomp
ljmp
mov
out
in
icebp
das
out
shr
out
fdivrs
fdivrl
aad
jmp
std
mov
icebp
ret
rcl
call
div
xor
in
jmp
int3
not
cmp
jmp
shl
leave
call
xchg
out
cmp
cld
neg
neg
shl
xlat
cmpl
mov
enter
out
shl
rcl
aam
xor
into
cmp
cmp
aaa
not
fcmovb
out
repz
sti
cli
in
in
int
int
xor
xor
xor
jecxz
out
sar
fucomip
orl
repz
icebp
out
in
in
clc
jmp
in
loop
enter
adcl
cs
out
sti
iret
loopne
aas
into
in
fdivrp
mov
mov
out
lock
aam
int3
idiv
enter
out
xor
cli
ret
ds
icebp
lret
xchg
in
xor
enter
std
rol
cmc
lret
fsubp
fdiv
loope
jmp
ljmp
sub
fxam
icebp
out
stc
sarl
icebp
sti
ds
les
int3
nop
jecxz
sub
out
cmp
aaa
xor
cld
fcmovnu
fcmovne
aaa
sti
cli
jmp
jmp
mov
fldl
int
sub
cmp
ss
cld
into
lock
jmp
ret
fndisi(8087
repnz
addl
xor
xlat
lret
cli
aam
ss
ffree
xlat
aam
in
sbb
lock
into
into
hlt
lds
enter
aam
ljmp
ds
les
in
addb
into
fstpt
mul
addl
mov
mov
in
into
loop
into
out
in
icebp
dec
fcmovne
fdiv
fdivrl
cmc
xor
out
in
jmp
loopne
repnz
loopne
cli
ss
adc
not
call
stc
sti
in
int3
rclb
lret
jmp
cli
cmpl
cli
repnz
repnz
flds
shl
call
sti
ds
stc
iret
in
cmp
fsubrp
jecxz
fcmovnu
fdivr
cld
mov
das
shr
lret
clc
cmp
shr
int3
sti
into
icebp
mov
fsubrp
out
in
in
jecxz
incb
iret
icebp
cmp
cmp
ds
cld
loopne
xor
test
into
adc
ret
sar
lret
mul
in
aas
jmp
fmuls
or
shlb
int3
lock
in
aas
lock
xor
in
xor
movl
xlat
aam
ss
cmp
fmul
repz
test
orb
iret
jmp
cld
cld
jecxz
ret
in
ret
ror
in
aad
ljmp
ret
call
leave
shr
les
in
cmp
leave
sarl
dec
repz
out
cld
add
addl
xor
ret
aam
xor
in
repz
ret
and
lret
into
fisttps
jecxz
idivb
fscale
repz
aas
xor
xlat
xchg
ljmp
shr
aaa
repz
xor
fnstsw
jecxz
fnstsw
ret
in
sti
jmp
fiaddl
jmp
mov
stc
ljmp
cmpl
fdivrl
ret
jmp
xchg
icebp
loop
xor
shll
cli
aam
cmc
jmp
roll
cmc
xchg
hlt
fmulp
lret
nop
mov
ret
lds
lret
hlt
cmp
clc
ljmp
in
ret
stc
jmp
mov
into
in
fcmovnbe
cmc
fcmovnbe
out
lret
cmpl
int3
xor
stc
rolb
int
cld
shr
jmp
hlt
call
aaa
cld
jmp
loope
fdivp
repz
in
mov
loop
in
out
shl
ljmp
faddp
lret
lret
out
xchg
sti
and
lret
out
fcmovnu
fdivp
ljmp
push
jmp
rcl
mov
neg
repnz
cmpl
pusha
ds
jge
jl
in
in
aad
aam
cmp
shl
stc
fdiv
ret
cld
mov
call
jecxz
out
ror
clc
cmp
cmc
aaa
repz
cli
call
fcomi
cmp
test
lret
jecxz
loop
call
repnz
xor
shr
repz
repnz
out
in
lock
ror
filds
cld
mov
fdivrp
hlt
out
imul
out
loop
cmp
jmp
fdivp
xor
cli
into
and
loope
fdivp
loopne
ljmp
enter
sti
lock
dec
shr
stc
sti
xchg
rcr
or
out
icebp
fninit
lock
hlt
stc
sarl
xlat
in
cmp
cmp
shl
test
aad
fdivp
xchg
iret
lea
ror
loop
xor
aas
repnz
rolb
std
xchg
sti
sub
xorb
ljmp
aaa
fcmovnbe
int
int3
aas
or
mov
xchg
cld
into
loopne
enter
out
out
cmc
call
loope
repnz
adc
lock
in
xchg
ret
mov
ds
in
jmp
sar
jecxz
hlt
cmp
test
loop
mov
mov
leave
loope
cs
fdiv
shl
fsub
out
cmp
out
test
stc
stc
in
into
in
lea
ret
fyl2x
out
hlt
lret
in
sti
out
rcl
lea
hlt
ret
in
lock
xor
repz
sti
cli
ljmp
fcmovu
call
xchg
fucomi
mov
iret
cmc
aam
fmul
aaa
lret
lock
sbb
sti
jmp
sbb
xchg
out
into
lock
xor
rcl
clc
call
out
sarb
icebp
hlt
idiv
loop
fiaddl
lock
fmulp
push
in
lret
xor
lret
call
inc
addl
int3
sub
out
cmp
icebp
enter
addb
faddl
fildl
out
aas
lock
loop
std
into
xor
in
aas
shl
out
loopne
flds
enter
jmp
ljmp
lret
cmp
cmp
rcl
into
out
rcr
leave
cmc
loop
orl
in
jmp
loope
ljmp
call
jecxz
mov
in
cmc
fdivr
xor
cmp
int3
repnz
xchg
xchg
loop
hlt
fucomip
roll
aad
out
cmp
shrl
cli
int3
cmc
fsub
out
xlat
rcl
out
out
fldl
out
loope
rcll
aaa
hlt
hlt
out
xor
lock
mov
sti
icebp
xchg
lock
push
xlat
in
cli
aas
ds
ret
hlt
clc
loope
jmp
fucomi
roll
aam
in
out
xor
fsub
cmc
cld
loope
xchg
aam
stc
hlt
clc
not
lea
out
shl
xor
in
cmc
shl
fildl
into
xlat
mov
jmp
mov
fsubrp
fsubr
call
int3
cmc
aad
fprem1
div
std
int3
and
xor
cmp
test
icebp
rol
call
jmp
repz
test
and
flds
xchg
mov
xor
int
enter
cmp
idivb
lock
call
stc
fmulp
repnz
cld
xchg
sub
fldpi
jmp
out
jmp
lret
fidivrs
test
fcmovu
xchg
jmp
aad
test
ljmp
cmc
icebp
icebp
rcr
cmp
mov
lds
xchg
jecxz
mov
stc
jmp
fucom
icebp
into
cmp
ret
jmp
mul
sti
in
out
out
aad
lock
fst
aas
fdivr
shr
idivb
cld
shl
cli
jmp
mov
lea
cs
ljmp
aad
rol
aad
enter
loop
xchg
lret
in
int3
leave
les
cmc
ss
fcmovnu
cmp
cld
loope
aas
xlat
out
call
enter
sbb
jmp
xor
out
leave
call
in
ret
rol
mov
sti
cmc
lret
mul
call
loope
in
in
into
jmp
int
fistpll
ds
lret
cmp
lret
xlat
loopne
xchg
out
shl
repnz
int
xor
int3
out
ror
shl
std
std
sti
fsub
in
leave
fiaddl
mov
hlt
fcomi
fincstp
div
in
out
sarb
in
out
call
hlt
lret
hlt
cmc
hlt
cld
lock
rolb
in
or
ret
sti
jmp
sar
xor
dec
xchg
add
xchg
add
jmp
int
mov
cmp
xchg
mov
aas
leave
jle
jge
jl
cs
in
xor
roll
iret
aas
loopne
fiadds
test
xor
lds
cmp
ds
ljmp
add
fiaddl
leave
in
clc
hlt
xor
cmp
stc
shr
hlt
aad
in
loope
xchg
in
jmp
in
out
shl
shl
in
fidivl
fstp
cli
clc
out
out
std
ss
sar
enter
xchg
test
iret
ret
in
jmp
iret
cmp
cmp
icebp
repz
fxch
out
xchg
int3
cmc
jmp
sub
fucomip
lret
in
xlat
or
loopne
out
clc
cld
std
out
nop
jmp
ret
hlt
shr
std
cmp
iret
iret
fdivrs
out
ror
add
int3
int3
ret
test
mov
mov
out
fldcw
jmp
sti
repnz
in
ror
mov
sti
fdivrp
in
in
in
int
shr
cs
int
cmc
xlat
pushl
into
repnz
cli
shl
fildl
mov
mov
cmc
loope
clc
icebp
enter
roll
div
fimull
xchg
out
out
in
stc
repnz
xlat
cmp
call
in
in
rcl
xchg
in
xchg
inc
xchg
in
xor
out
int
cli
cmp
repnz
xlat
loope
iret
lock
ror
test
in
aaa
lock
fcmovnbe
fcmovnbe
cli
rcl
in
fstp
lock
out
ffreep
mov
sub
fdivs
fcmove
cld
shl
cmp
aaa
rcl
loope
in
inc
aam
cli
loope
and
test
into
int
jmp
loope
lock
jmp
fcmovnb
fldpi
xchg
cmp
fiaddl
xor
clc
icebp
xor
rcl
cld
cmp
rcl
std
in
mov
int
out
fnstsw
lret
in
lret
xlat
cli
aaa
repnz
sar
hlt
aas
ds
aas
call
fsubrp
test
div
clc
cmc
cli
in
fsubr
lret
cld
aas
jecxz
rcl
sar
sar
clc
mov
call
sar
shr
loopne
cs
repnz
out
xor
xlat
lock
out
ret
cli
cld
clc
cld
flds
xchg
shl
xor
icebp
out
div
pushl
jecxz
ret
ret
cmp
ret
in
jmp
addl
fcomp
std
clc
cli
neg
hlt
out
cmp
in
call
cld
lret
xor
clc
out
out
in
int
fsubrp
in
frstpm(287
add
in
cli
leave
sar
fcmove
std
jmp
fdivp
int3
fadd
out
lret
int
int
xor
cmp
loop
mov
enter
dec
in
int
xor
xor
fmul
lock
cli
in
cmc
loope
mov
lea
rclb
enter
iret
shlb
fscale
repnz
fdivr
icebp
sar
faddl
cld
rcl
mov
int
jmp
cmp
hlt
cmp
cmp
in
into
xlat
out
aam
ljmp
call
cmp
rcl
sti
stc
ss
aam
icebp
shl
jecxz
fiadds
mov
fsub
orb
aaa
leave
clc
xor
cmp
sarl
in
fld
jmp
ljmp
iret
enter
repnz
in
iret
cmp
call
loope
loopne
clc
sti
fucom
ret
in
ror
in
xlat
repnz
cli
in
leave
aam
jmp
faddl
bnd
jmp
adcl
in
out
in
lock
in
fsubp
rcl
loope
mov
mov
ret
iret
into
in
incl
xor
movb
std
lds
in
icebp
test
sub
out
icebp
out
xor
sti
aas
jecxz
cmp
loop
hlt
fisttpll
xchg
in
xor
in
in
fstpt
aam
test
icebp
mov
cmp
enter
mov
ljmp
out
cmc
xor
jmp
fdivr
or
cmc
out
int
stc
xor
repnz
fdivrs
idivb
clc
roll
loop
movl
ret
fnstenv
int3
ss
cld
fcomi
in
sar
jmp
mul
out
fucomi
lock
fists
das
lret
hlt
xor
rcl
into
adc
rcr
jecxz
mov
call
lock
das
idiv
cmc
cmp
out
leave
aaa
sti
add
xchg
fcmovnu
xchg
lret
mov
repz
xor
sti
std
enter
cmp
repz
lock
aad
xchg
in
sub
cmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
sbb
jle
jge
jl
das
icebp
fcmovnb
sti
stc
repnz
int3
cmc
sar
loop
loope
sti
call
out
in
in
xor
cmp
ror
aaa
ljmp
loope
ret
xor
mov
mov
test
cmp
jmp
repz
in
std
cmc
lret
aad
ljmp
xchg
xor
fsincos
xor
aam
jmp
sti
ffreep
loope
in
in
cli
enter
std
or
shl
clc
jmp
out
neg
cmp
hlt
std
leave
rol
xchg
enter
mov
sti
repz
leave
cld
div
jecxz
in
iret
sti
cmc
jmp
int3
loopne
test
fdivp
rcl
shl
cli
cmp
xbegin
aad
out
fcmovbe
stc
sbb
int
into
in
mov
orb
xor
repz
jmp
faddp
in
cli
lret
lea
ljmp
fidivrl
idivb
aam
rol
out
shr
xbegin
iret
test
out
loopne
cmc
fdivrl
jmp
shl
shl
xlat
in
in
xchg
loop
fldl
xchg
lret
jmp
fdiv
fldl2e
addl
loopne
aas
or
iret
mov
jecxz
ret
ror
fcmove
int3
cmc
ds
sti
mov
xor
call
popl
sub
les
fprem
stc
xor
addl
jecxz
dec
clc
and
not
xor
shlb
rcl
jmp
fcmove
cmp
fcmovnbe
sar
lret
int3
jecxz
clc
call
ret
lds
clc
xor
cld
cmp
out
in
or
fiaddl
xor
sar
aam
aad
cld
sbb
xlat
loope
adc
ficoms
call
xor
out
xlat
cmp
fidivs
loop
lock
mul
leave
out
into
cli
cmp
jmp
jmp
hlt
lret
loopne
int
ss
int
std
faddp
fiadds
hlt
out
int
lret
loopne
lret
rcr
cmp
test
stc
fstl
jmp
jmp
vpaddusb
cmp
rcl
xorb
fdivr
rcr
std
mov
adc
icebp
call
in
xor
ret
out
fcomip
test
rcl
in
in
or
jmp
ror
aaa
ss
aad
into
int
xor
fadds
out
fimull
ret
in
xor
sti
enter
sti
cli
xlat
push
rcl
cld
neg
int
loopne
iret
std
xchg
xchg
xchg
div
into
xor
ret
aad
iret
xor
xor
clc
loope
out
std
fadds
popl
fdivr
out
test
fmul
stc
test
lock
neg
out
into
icebp
xchg
les
cmp
clc
cs
cmp
loope
out
ret
ret
std
xchg
loope
aam
cld
jmp
jmp
loope
xlat
int3
jmp
jmp
rcr
aad
not
aam
xlat
rol
sti
movb
incl
cs
fsubr
cmp
fildl
rolb
mov
xchg
repz
xor
jmp
cmp
xlat
stc
jecxz
iret
fiadds
loopne
mov
flds
xchg
out
aam
aam
cmp
iret
lret
int
fucom
cli
testl
int3
mov
repnz
lret
cmp
enter
fxch
cmp
add
leave
xchg
fucom
call
iret
into
in
lret
rcl
xor
loopne
cld
in
inc
aas
repz
in
idiv
loop
leave
call
cmc
ret
lret
lret
cmc
shr
xor
cmp
jecxz
mov
rcl
xor
divl
hlt
leave
fdivr
sar
into
ljmp
rorb
mov
addb
fcom
cmp
test
ds
flds
test
loope
call
sub
lret
clc
xor
shl
cli
out
imul
in
sti
fdivr
loopne
enter
fmulp
out
int
sti
icebp
cmp
imul
cld
ror
aaa
fcmovnu
fsubp
xor
stc
int3
cli
test
jecxz
jecxz
int
xor
aad
clc
cmp
cmp
cmp
ret
fucomi
addb
mov
shl
rcl
lret
ss
fcomi
repz
cmc
ret
sub
and
icebp
fucomip
fldl
cs
enter
out
fcmove
rcl
out
orb
loopne
lret
into
push
mov
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
pusha
jno
cmp
add
loope
hlt
out
cmp
sarb
out
ds
aas
cld
cmc
sbb
fadd
fsub
ljmp
lret
aam
ret
xor
cli
xor
stc
repz
xor
fsubp
jecxz
mov
hlt
cmc
enter
out
jmp
cmp
or
mov
call
jmp
out
lret
sti
ds
ror
loopne
sub
fchs
in
out
xchg
cld
out
cmc
stc
fld
fcmovnbe
imul
int3
cmc
aas
shl
filds
stc
fxtract
loope
clc
clc
mov
in
enter
ljmp
cmp
out
std
xlat
test
ljmp
aam
out
sarb
int3
icebp
lret
call
out
fcmovnbe
jmp
sti
out
ret
ret
mov
jmp
xor
sar
aas
aaa
aam
stc
lock
cmp
not
in
idiv
cli
loopne
fucomip
loope
ret
test
std
aas
aas
in
fneni(8087
fcomp
into
rcl
loop
sti
mov
jecxz
xchg
jecxz
das
xlat
leave
lret
fdivr
cmp
jmp
not
not
ret
loop
cld
jmp
call
in
xor
xor
cmp
xlat
lock
aad
hlt
out
hlt
call
xchg
roll
cs
in
enter
into
fcos
out
shl
mov
leave
in
in
out
shl
fsub
vshufpd
ss
int
lock
shl
fcmovbe
out
int3
sti
out
xchg
xchg
aad
lock
ret
jmp
fadd
sbb
rolb
xor
icebp
out
test
leave
divl
xor
cmp
test
add
vcmpps
fcoms
loopne
loopne
lock
fcomip
fsqrt
sarb
not
rol
fsubp
mov
mov
cs
imul
in
jmp
jmp
in
cmp
ds
enter
out
cld
cmp
mov
xchg
repz
xor
enter
stc
int
cmc
jecxz
fcmovnu
clc
fnstcw
lret
out
fisttpl
fadd
ret
in
xor
repnz
fdivr
cmc
xlat
xchg
fcmovnb
ret
stc
sub
div
shl
clc
call
cmp
loop
xlat
fcmovb
xchg
mov
fadd
shl
ret
cmp
in
repz
int
out
out
aaa
in
leave
cmc
leave
ffree
xor
nop
xor
xor
cli
fincstp
ror
sti
jmp
neg
iret
ret
test
out
cli
enter
sbb
repz
ret
imul
sarb
aas
stc
cli
into
imul
fcmovbe
test
fneni(8087
repz
fdivrp
ljmp
out
into
fucomi
in
clc
cld
ljmp
ror
stc
loop
mov
lea
cmp
cmc
jmp
dec
cmp
fdiv
fucom
in
loop
clc
shl
loope
lret
adcb
enter
cmp
bnd
neg
in
in
aas
call
loope
clc
mov
in
imul
out
int3
lock
fdivrs
ret
std
aam
icebp
fmuls
int3
in
mov
call
int
lock
imul
ds
in
out
fxch
jmp
aam
test
mov
int3
repz
lret
in
lock
lock
fcmovbe
aam
out
cmc
ret
fsubrp
mov
jecxz
jmp
cli
xor
cmp
fstp
hlt
aam
stc
in
addl
out
into
call
xor
aam
stc
sbb
ret
movl
lret
int
repz
jmp
xlat
cmp
rol
loope
div
clc
lret
loope
sti
clc
jmp
jecxz
jmp
xor
out
ljmp
xor
mov
in
fisttps
ljmp
fmulp
in
hlt
fstpt
stc
xor
fcomip
sub
mov
fcomi
les
lret
repnz
loopne
lret
lret
mov
iret
test
enter
lret
sub
cmp
das
fcmovbe
cli
xor
int3
ds
out
rol
in
out
ret
out
mov
out
aaa
sti
in
cmp
ds
aas
aam
repz
mov
leave
in
sti
in
mov
in
call
int3
ror
aaa
iret
sarl
cld
ret
add
fadd
fdiv
jmp
ljmp
jmp
xor
xor
cmc
cmp
repnz
out
ljmp
repnz
sti
in
iret
decl
xor
lret
leave
call
jmp
ret
test
out
sti
mov
filds
dec
clc
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
test
jge
jl
cld
shll
jmp
idiv
ljmp
shr
mul
shl
std
out
stc
int
std
fsubr
loop
divb
stc
iret
cmp
lret
in
int3
divl
sar
rcl
and
mov
testl
int3
ror
icebp
aad
sarl
out
ds
lock
jmp
loopne
lock
leave
xor
cmp
in
les
mov
jecxz
xchg
sarl
lret
cmp
fmul
shr
repz
in
xchg
in
lret
cld
sub
out
rcl
xor
das
in
ss
rol
aad
loop
lds
adc
int
iret
leave
lret
in
rcr
fmulp
cmp
fcmovu
test
ds
fucomip
mov
icebp
out
mov
fscale
jmp
xor
loopne
sti
and
shl
orl
mov
ror
in
int
xor
fnsave
in
ljmp
roll
jecxz
xchg
jmp
ljmp
std
cmp
dec
mov
test
lret
fmull
aaa
div
ljmp
lret
in
int
out
adc
repz
loope
out
leave
in
out
in
lock
mul
xor
xor
cld
jmp
ds
neg
test
test
loope
in
loope
xchg
loop
aad
repnz
fcmove
xor
jecxz
cmp
hlt
not
ds
std
test
call
test
imul
lret
sti
rol
shl
ffree
fnclex
add
sub
loope
xchg
mov
icebp
xor
stc
in
cmp
into
sti
cli
xlat
push
ljmp
iret
ljmp
sti
hlt
div
loope
fcmove
repz
fiaddl
fadd
xchg
test
hlt
call
ljmp
rol
cmc
repz
hlt
std
ljmp
sub
xor
enter
int3
in
xlat
loope
fildl
ljmp
fmull
out
in
rcr
out
cmp
hlt
fprem1
xchg
roll
les
out
out
xor
in
std
shl
lock
mov
rol
cli
fiaddl
mov
aas
test
cmp
stc
lret
in
aas
xchg
xor
std
ljmp
cld
and
stc
sti
repnz
int
int
cmp
neg
repz
cld
cmp
jmp
out
fcmovnbe
xchg
cmc
les
lret
rcl
cmp
add
jmp
loop
in
mov
nop
in
jmp
int3
enter
call
ljmp
std
out
addl
not
cs
out
addl
lret
lret
repnz
aaa
out
hlt
aad
das
cmp
xlat
fistpll
xlat
aad
out
mov
cli
test
sti
iret
jmp
sub
loopne
ret
rcr
hlt
fiadds
div
in
call
fdivp
loope
shlb
fdivrs
xor
xor
rcl
cmp
in
aas
icebp
shl
addl
loope
iret
in
lock
sarl
aas
aad
loope
fadd
in
frndint
cld
in
stc
xchg
lret
std
mov
fidivl
shr
jmp
ljmp
sub
call
call
aaa
sar
ret
rcl
rcr
ljmp
jmp
icebp
loop
jecxz
xor
lret
rcr
ss
cmp
xlat
fsubr
out
cmp
cli
repz
in
sti
mov
in
out
loop
iret
vaddsubps
fyl2x
xlat
aaa
and
filds
lret
out
test
cmc
divb
idiv
icebp
clc
repz
shl
jmp
test
clc
sar
test
aaa
repz
aaa
cmp
enter
fsubp
mov
testl
fcomip
loop
int
stc
cmp
fcmovu
cmp
aas
cmc
sti
mov
jmp
orl
jmp
lret
lret
xor
rorl
ftst
jecxz
les
ljmp
ljmp
fdiv
sub
fcmovnu
fmuls
in
loopne
repz
ss
int3
sarl
repz
stc
std
fdivr
enter
loopne
lret
xchg
lock
out
aaa
repz
aaa
rcr
test
roll
stc
out
lock
orl
jmp
int
enter
int
lds
pop
cmp
jle
jge
jl
incl
icebp
xor
fcmovu
icebp
lock
shl
test
mov
fisttpll
sub
in
int3
call
fdivrs
int3
sti
loop
loop
out
enter
mov
int
in
out
ljmp
int3
fnstsw
ret
sub
clc
sbb
cli
std
in
leave
leave
cli
xchg
movl
fdivrp
cmp
ss
mov
call
fcomp
orl
loop
cmp
cmp
aaa
xor
aam
rcl
sbb
loop
aas
std
fldl
loope
cmp
cmc
cli
aam
in
in
out
cmp
shl
out
and
clc
in
hlt
out
ss
cmp
aas
ss
fsub
faddp
ffree
aam
lret
mov
loop
les
out
xor
ljmp
test
rolb
popl
iret
shl
fdivp
xor
repnz
icebp
xlat
aam
stc
shl
jecxz
testl
lret
in
xor
stc
stc
int
cmp
lret
out
fiaddl
ret
jmp
out
call
lret
lock
fidivl
rcr
cli
iret
in
out
cld
fcmovnu
out
repnz
in
jecxz
cmp
ficoms
lock
lret
int
icebp
cmp
loope
cmp
fucomip
jmp
out
mov
fcoms
iret
xor
cmp
cmc
fsub
cmp
adc
clc
std
addl
nop
lock
out
icebp
int3
aad
sub
fcomip
lret
aad
iret
ljmp
cmp
notb
test
iret
aaa
out
icebp
fdivrs
int3
shr
idivb
sti
roll
int
fucomip
iret
lret
in
int3
iret
out
mul
lock
in
addl
fsubp
xchg
lret
leave
icebp
hlt
jecxz
jmp
ss
sar
cmc
xor
or
cli
ret
out
sub
mov
sarb
cmc
repz
repnz
stc
aad
shl
sbb
roll
test
std
fsubr
loope
shr
ret
xor
cmp
rcl
xor
ss
mov
lret
enter
lret
orl
fyl2xp1
repnz
ljmp
out
rcl
out
in
xchg
mov
std
test
hlt
rcl
xor
xor
cmp
xchg
cmp
loopne
int3
in
adcl
in
xor
xor
fxtract
rcr
adc
ds
rcl
cli
idiv
enter
in
fst
icebp
ljmp
fstp
fdivrs
cld
addb
test
lock
adcl
aad
cmp
lret
cmp
addb
mov
mov
in
std
lret
in
jmp
xor
leave
aam
fmul
call
shl
cmc
cmp
loope
mov
in
loope
sar
in
stc
int
repz
repz
fdivrp
into
ror
adc
not
jmp
in
mov
lret
test
cmp
rcl
and
call
mov
ret
shrl
enter
fdiv
fadd
into
cmc
std
mov
in
in
out
lret
xchg
mov
cmc
xor
out
shlb
in
iret
shr
xor
jecxz
ret
call
loop
mov
loope
in
aam
hlt
in
sar
ror
xor
rcl
idiv
fcompp
lea
lock
loop
sub
out
lret
int
repnz
leave
ret
int3
les
xchg
xchg
lds
ljmp
lock
aas
int
in
out
fcom
ret
test
test
xchg
xor
jmp
out
xor
fdivrp
shl
iret
xchg
mov
mov
lret
hlt
loop
int3
hlt
lret
into
out
clc
div
out
cmp
aas
in
icebp
aad
jmp
xchg
jmp
into
xchg
iret
out
test
idivb
fdivrs
cld
ret
rcl
loopne
cld
xlat
idiv
into
mov
repz
lret
loope
test
cmp
xor
ds
repnz
roll
lret
roll
shl
leave
aad
fdivs
out
lock
rcl
hlt
loop
clc
decb
jecxz
in
shr
fcom
xor
int
cmp
fdivp
sti
aam
loopne
test
shr
xchg
cld
cli
xchg
orl
ret
aam
fsubp
loope
test
cld
fdivrp
in
nop
iret
loopne
in
fcomi
xor
out
int3
ljmp
into
fdiv
loopne
in
std
mov
add
ds
ror
aad
fistl
loop
pop
and
jle
jge
jl
jmp
xor
fsubrs
cmp
xlat
out
sti
lock
hlt
std
jmp
clc
test
fimuls
xor
ror
cmp
repz
aaa
cli
fdiv
ror
sbb
stc
loop
sbb
loopne
iret
sti
loop
test
shr
clc
in
aam
xor
fcomip
int
in
std
fucomp
rcr
fxch
fiaddl
xchg
mov
out
lret
out
iret
cmc
enter
cmc
addb
stc
xlat
lret
fsubp
mov
ror
neg
std
in
std
out
fcmovne
xchg
stc
enter
cli
cld
fsubr
call
call
sarl
fcmovu
ss
fcomip
xchg
fcmovu
std
shr
mov
out
hlt
sub
call
lret
loopne
shr
neg
loopne
std
inc
cli
test
lds
xchg
xlat
xlat
int3
iret
out
in
ror
aam
jmp
loop
fnstcw
jmp
testl
ret
das
cmp
fcomp
cmp
out
jmp
rcl
test
mov
vpsubusb
std
xchg
icebp
rorl
ror
shl
rcl
sbb
shl
aad
stc
stc
fcmovu
in
repz
shr
in
idivl
das
int
in
lret
in
adc
ss
jecxz
xacquire
fildl
ret
in
shl
sti
lret
int
shl
lret
fistpll
ffreep
test
loope
lret
xlat
ret
cmp
cmp
loopne,pt
fdivr
aas
test
fsub
loope
out
sar
std
lret
call
xor
in
xor
fiaddl
fcom
cmp
mov
iret
loopne
aad
out
ret
sar
fnsave
cmp
cli
cmc
flds
mov
call
aaa
lret
in
fmul
adc
xchg
orb
shl
lock
aaa
aad
jmp
repnz
div
fstpt
fsub
shl
icebp
or
out
lea
into
cmc
sub
loop
in
repnz
repnz
into
jecxz
sti
fisttpll
mov
faddl
sti
xor
xlat
xlat
fcmove
ds
shl
neg
std
xchg
std
call
fisttpll
fnstcw
shl
ss
repz
fcmovnbe
lock
test
xlat
jecxz
in
orl
aam
ror
fstp
cmp
cmp
repz
cmp
in
xchg
mov
xor
jmp
lock
iret
loop
rolb
loop
cli
int3
test
call
idivb
test
aam
rcr
call
fmuls
out
ljmp
jmp
shr
jecxz
in
jecxz
in
test
out
out
repnz
xor
xor
lret
jmp
xor
int3
out
cmc
xlat
xchg
std
lea
hlt
out
jecxz
xor
aam
jmp
xor
int
fdivrp
ret
cmp
cld
fstpt
in
lea
ret
xor
clc
icebp
clc
std
sbb
movb
std
in
iret
in
aad
aaa
jmp
cmp
ljmp
call
mov
xchg
lock
cli
in
repz
out
rcl
out
leave
hlt
ljmp
fiadds
xchg
in
decb
aad
rcl
xor
out
std
int3
repz
out
add
jecxz
sub
jmp
lret
aam
in
in
loop
aaa
out
jmp
adc
cmp
ds
or
in
jmp
fucomip
cs
lret
out
out
cmp
idiv
icebp
xlat
fiaddl
testl
das
out
repnz
out
int
cmpb
lret
fdivp
enter
fucom
ds
int3
cmp
sti
enter
jmp
ljmp
hlt
xlat
jmp
fsubp
rcll
loopne
ret
aad
out
jecxz
cli
sti
sar
loope
call
out
lret
int
cmp
fucomi
out
cld
ffree
fcomp
jmp
aad
icebp
repnz
enter
in
xchg
mov
shr
icebp
xor
rcr
shl
fmul
into
fldl
test
flds
repz
ds
out
fmul
rcl
aaa
cli
cmp
cmp
xlat
call
in
cli
iret
in
in
fmulp
ror
aaa
cmc
cmp
xlat
stc
out
and
std
loope
jecxz
cld
std
in
mov
xchg
cmc
int
out
jmp
cmc
cmp
fidivrl
imul
lock
and
loopne
int3
ljmp
or
push
mov
jmp
int3
ret
ds
fst
decl
out
cld
sbb
pop
add
in
lret
in
xor
int3
xor
fidivl
out
cmp
hlt
repz
clc
fld
cmp
mov
in
hlt
jmp
lock
hlt
fdivrp
xchg
out
sti
hlt
neg
mov
in
repnz
in
out
bnd
loope
rcl
add
in
mov
aad
ror
xor
out
out
out
idivl
repz
jecxz
repnz
into
fsubr
mov
aaa
out
out
fdivl
repz
ret
ret
mov
test
loope
cli
std
rcl
loop
clc
in
jmp
in
fmulp
fdivr
cli
fcomp
rcl
enter
xchg
enter
or
xor
aaa
call
cmp
icebp
cmc
flds
loop
mov
xchg
loope
sub
test
into
stc
in
aam
loopne
lock
fadd
fimull
in
leave
xor
fadd
leave
cmp
icebp
int
xor
xchg
neg
fcmovb
lret
or
cld
adc
lock
sti
int3
cli
out
in
loopne
xor
ds
xchg
mov
ljmp
into
out
xor
divl
fucomp
xlat
roll
in
mov
test
test
orb
jecxz
leave
cmp
cmp
out
std
cmp
cmc
std
fistpll
cmc
in
loop
test
cld
loopne
test
cmp
cli
hlt
fidivrs
jecxz
out
cmp
fsubp
test
mov
icebp
adc
in
call
jmp
cmpl
loopne
shl
mov
out
out
and
adcl
in
cmc
iret
ljmp
rcl
shl
push
sti
loope
in
int
cld
cli
xchg
ror
mov
fxch
leave
repnz
cmc
std
out
aad
cli
faddl
out
jecxz
ljmp
ret
shr
fcom
cli
cmp
rcl
mov
fprem1
out
les
lea
in
jecxz
xor
cmp
fsubp
stc
jecxz
lret
call
in
xchg
mov
loop
enter
shr
hlt
repnz
aas
sar
add
div
fcmove
ret
test
xchg
test
shrl
xor
aaa
lret
lret
in
aaa
cmp
sbb
out
cmp
in
repnz
xor
loope
shlb
aad
rol
cmp
loopne
aas
fdiv
jecxz
fsubr
in
cmp
test
icebp
out
xor
aad
int
call
jecxz
cmp
and
enter
lret
mov
rcl
ljmp
fnstsw
xor
mov
xlat
mov
nop
nop
loopne
repz
std
rcr
xlat
out
cmc
lret
xlat
ffreep
xchg
cmp
ds
idiv
int
iret
fldl
lret
hlt
ror
fucom
ljmp
clc
clc
xchg
ffree
in
mov
sub
jecxz
jmp
out
ljmp
loope
rol
fmuls
jecxz
fcmovnu
orb
enter
lock
lock
out
testl
sti
lock
cmc
ret
ret
out
cmp
cmp
out
int3
xchg
addl
xchg
out
movl
cmp
fdiv
xor
cmp
fimuls
call
repnz
in
int
xor
out
in
repz
in
fnstsw
cmp
leave
cld
lds
nop
xchg
hlt
rcl
ret
ss
icebp
int
xor
cmp
std
repz
call
out
in
in
into
cmc
repz
aam
out
aam
cmp
repnz
cmc
cmp
loopne
loopne
call
iret
loopne
stc
repz
cmp
hlt
sbb
in
stc
xchg
std
add
orb
xlat
div
ret
cli
xor
ss
out
cmp
in
jecxz
cmp
hlt
rol
test
lock
in
xlat
leave
cmp
fsubr
call
cld
cld
fdecstp
hlt
hlt
in
xchg
faddl
lret
xor
cli
into
in
cmp
shll
aad
shl
xchg
leave
int3
leave
jmp
loop
shl
loope
into
repnz
int3
in
xor
shl
iret
repz
fcmovnu
xchg
shl
loop
leave
cmp
leave
fst
shl
jecxz
mov
in
addb
fcmove
xchg
shll
int3
loop
cmp
xor
aaa
repnz
cmp
rol
jmp
ljmp
or
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
push
adc
jle
pop
add
fucom
loop
in
loopne
call
into
int3
aaa
lock
lret
aas
out
rcl
and
or
mov
roll
fcmovnbe
aad
repz
ds
in
int3
out
std
in
xchg
jmp
out
jmp
ret
stc
jmp
rol
fsubp
mov
xchg
enter
ret
out
shl
lret
jmp
leave
repnz
cld
in
xchg
hlt
rcr
xchg
loop
loope
fists
int
lock
lock
rol
ror
std
test
sti
rcl
call
loop
ljmp
int
sar
clc
xor
fcmovu
lock
vcmpps
mov
fisttpl
icebp
repnz
cmp
xor
stc
test
and
out
clc
ret
cmp
jmp
xchg
loop
lret
sarb
in
xor
enter
loopne
in
in
xchg
sbb
xlat
ret
jmp
in
icebp
std
fcmovu
xlat
cmp
out
jmp
and
into
test
repnz
fdivp
les
sti
out
lret
cmp
fcompp
ljmp
testb
mov
xor
ss
cmp
repnz
cmc
sti
ds
out
cmp
jmp
mov
in
xor
enter
icebp
aam
int
idivb
sbb
sub
mov
lret
shl
int
xor
cs
cmp
jmp
into
dec
hlt
fcomi
into
ret
fucom
mov
mul
out
loope
mov
out
shl
cmp
hlt
xor
repnz
in
ret
xchg
testl
rcl
repz
repnz
iret
cmc
xor
neg
stc
iret
ret
int
out
in
xchg
loope
cs
jmp
in
loopne
out
addb
mov
fdivp
lret
call
movb
repz
not
sti
mov
loopne
incl
xor
sarl
out
fmulp
loopne
bnd
fucomi
mov
mov
in
out
cld
lock
out
shl
fcmovne
cmp
test
aam
fdivr
sbb
hlt
out
loope
iret
mov
ror
fmul
leave
in
stc
xor
mov
in
loope
out
repz
aad
shlb
xlat
rcl
fld
in
cmp
sbb
fld
ljmp
iret
in
aaa
repnz
std
cld
sti
ss
cmp
xor
fiadds
aad
in
sti
jmp
test
enter
cmp
fcomi
std
aam
xor
cld
adc
xlat
sti
mul
lret
xchg
lret
cs
in
icebp
in
fdiv
clc
int3
loopne
shl
loop
rol
xchg
std
enter
rolb
icebp
int3
into
rol
idiv
lret
std
in
cmc
xlat
ffree
fcomi
loope
sti
loopne
iret
in
aam
enter
fcmove
ror
stc
leave
lock
int3
ret
fsubrp
mov
sar
loopne
in
out
ljmp
sti
std
fucomi
vpaddusb
stc
aam
orb
out
cs
xor
fcomi
ds
sar
test
cld
mov
rolb
in
enter
std
fidivrl
out
std
ds
aad
repz
mul
incb
xchg
xchg
imul
xlat
xor
lret
rcr
ljmp
out
fsub
testl
cmc
lret
xchg
xor
enter
fucomi
in
cmc
fmul
sar
lock
repnz
out
fcomp
out
orl
call
int
sti
xchg
out
jecxz
test
mov
repz
faddp
jmp
ror
out
xlat
hlt
fst
cmp
rcr
shl
std
in
in
repz
xor
iret
call
test
jecxz
clc
ds
fildl
jmp
aaa
in
xlat
loop
neg
clc
aas
shlb
icebp
sar
in
fucom
in
cli
enter
fmulp
aad
jmp
repz
in
hlt
cmc
ror
std
ffreep
fcmovb
sarl
aad
vcvtpd2dq
out
ljmp
leave
out
repz
fstpt
cmp
cmp
repnz
jecxz
test
std
out
mov
mov
ljmp
fcmovnu
out
cmpl
dec
add
hlt
in
stc
mov
loop
enter
shl
int
clc
shr
repz
mov
movl
subl
jmp
lret
ffree
fst
in
notl
jecxz
dec
and
pop
add
cld
lret
mov
fsubp
xchg
out
shl
cmp
cli
aam
rcr
iret
lret
cmp
aad
mov
sbb
test
jecxz
out
in
aad
ss
in
into
in
loope
lret
test
icebp
xlat
rorl
flds
cmc
in
jmp
stc
shr
idivl
cmc
out
fmul
and
std
fadds
loope
test
xchg
xor
xlat
out
cli
neg
std
std
faddl
rcr
test
out
int
shr
in
cs
cli
rcl
aaa
cmp
fidivrl
cli
ret
ds
mov
loopne
std
enter
sub
hlt
loopne
jmp
cs
cli
aam
stc
cmp
iret
and
enter
cmp
or
out
shlb
sar
hlt
clc
test
icebp
aas
sti
in
ret
in
xchg
ljmp
iret
xor
fsubr
imul
in
clc
out
hlt
rcr
icebp
aam
mul
in
xchg
orb
out
jmp
cmp
hlt
dec
int3
in
cmp
loop
loopne
mov
in
int3
out
repz
out
loopne
iret
xor
clc
xor
out
and
cld
aam
into
xor
ljmp
cmp
test
not
shl
fadd
cmc
rcr
sti
leave
loopne
out
fisttpl
ljmp
fidivrl
in
out
fprem
stc
sti
in
enter
loope
out
call
repz
xor
call
ffree
xchg
fucomp
leave
stc
in
in
mov
xchg
aaa
jmp
xor
hlt
icebp
lret
jmp
aam
aas
aad
cmp
call
ljmp
repz
shl
cmp
enter
roll
xlat
cli
movl
cmc
cmp
div
clc
leave
ljmp
shl
cmp
jecxz
call
aad
xor
shr
in
call
cmp
jecxz
ret
cmp
sub
xchg
ljmp
loopne
call
cmc
int3
xorl
or
addl
div
lock
fdivrp
int
xlat
roll
fmul
in
dec
lret
fcmovne
rcll
ret
shl
aas
sti
xor
in
loopne
jmp
incb
cmc
into
xorl
cli
int3
out
shl
cmp
cmp
rcl
out
in
leave
ljmp
out
int
stc
enter
rol
div
clc
icebp
xlat
cmp
mov
rorl
and
jmp
loope
ret
xor
aam
out
cld
ds
hlt
sar
lock
lock
lret
stc
out
rcl
aad
xor
test
shr
sti
iret
out
std
into
xchg
lret
jmp
loop
aaa
cmp
sar
rcr
rolb
fisttpl
cli
icebp
mov
lock
xlat
int3
fscale
fdiv
fidivrs
sbb
rol
rcl
stc
fisttpll
and
xor
in
hlt
xlat
in
fcmovu
out
lock
inc
loop
stc
clc
lret
in
xchg
test
fmulp
mov
fxch
ss
in
in
repz
test
jecxz
shl
cmc
and
rorl
shl
xor
shl
cmp
int3
in
vpmuludq
ret
cld
hlt
mov
fimuls
out
lret
xor
cmp
cmp
test
mov
mul
rorl
sub
icebp
fsubrs
ds
shl
lock
idiv
popl
xor
out
lret
call
xlat
hlt
call
mov
xchg
out
rcll
in
ret
xlat
cmp
fidivrs
div
in
shl
fmulp
rcr
iret
in
std
loope
xchg
shll
aad
in
in
cmp
aas
cmpl
cli
jecxz
rcr
add
test
cli
jmp
ljmp
sti
ljmp
cmp
test
sbb
neg
call
into
divb
xor
in
fdivr
ror
loopne
in
fdivr
sub
cli
loopne
ljmp
xor
xor
aam
cmp
hlt
xlat
sti
cli
jmp
loope
stc
jmp
call
cmp
in
stc
int3
out
int
stc
cmp
fcomip
test
mov
int3
lret
shl
ljmp
lock
rcl
hlt
aad
test
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
push
jl
add
ret
out
mov
roll
mov
int
hlt
cmc
ret
jmp
lret
aas
xlat
repz
orb
sub
in
test
out
cmp
int
out
fsubp
into
sti
rcr
call
out
int
fadd
loope
in
jecxz
xor
cli
fcmovne
lock
fcmovu
inc
std
les
incl
xchg
ficoml
xor
jmp
int3
aad
cmp
int
test
aad
out
xchg
fcmovu
mov
xchg
adcb
sub
clc
icebp
aad
sti
cmp
shr
xlat
test
xchg
call
out
lret
in
clc
int
std
std
loope
inc
clc
cli
aas
roll
mov
rol
jecxz
ret
stc
leave
int
cmc
xor
repnz
out
fistpll
cli
ret
ljmp
xchg
loop
in
rcl
call
not
loopne
fdivrs
incl
lret
popl
cmp
lret
call
jecxz
clc
in
incl
out
cld
mov
sbb
hlt
iret
fadd
std
repz
int
cld
rcl
ret
shl
not
call
loop
roll
in
in
lret
cmp
call
ror
cmc
inc
mul
hlt
testb
fucom
ljmp
fcmovnu
hlt
ss
shl
fucom
shl
loop
fdivp
std
lea
bnd
ret
out
aam
fdiv
cmc
cmc
jmp
loope
fidivrl
sbb
cmp
mov
mov
lret
cs
jmp
clc
test
cmp
mov
mov
jecxz
int3
mov
in
rol
aaa
ljmp
in
cmc
rolb
hlt
fucomip
incl
int3
shl
aam
shl
call
in
shl
jecxz
xchg
fsubp
loop
ret
xchg
hlt
fmulp
in
out
int3
ror
fiaddl
cmc
aam
lret
mov
out
lock
repz
xor
into
lds
shr
int
ret
sbb
fneni(8087
sar
cld
test
fmul
jecxz
and
jmp
xor
clc
fdivrs
cmp
vmovq
faddl
in
shr
loope
ror
shlb
fcmovnu
cmc
in
aad
cmp
cli
ret
push
xlat
lret
loop
ljmp
lret
lret
xor
cmp
cmp
jmp
fcomip
test
ljmp
shl
xchg
fidivs
call
test
clc
ljmp
mov
cmc
ljmp
shr
aad
idiv
xor
aas
cmp
enter
fprem1
xlat
ret
mov
decl
cmc
test
xor
rcr
ljmp
xlat
mov
subl
ss
sub
cmp
in
repz
in
loopne
out
call
xchg
int3
aaa
sub
lock
clc
fadds
enter
leave
fisttpl
ljmp
jmp
shl
icebp
test
aas
test
sti
loopne
clc
sub
test
mov
mov
aam
lock
cli
jmp
cli
jmp
fdivp
rcr
lock
xchg
int3
xchg
out
shrb
into
xor
aaa
cmp
loop
xlat
loope
ret
cmp
xchg
addb
fcom
sti
jmp
shlb
fcmovbe
xlat
cli
clc
xchg
int3
leave
jecxz
test
call
neg
cmp
jmp
fistpll
call
fst
mov
lret
mov
fldl
sarl
aam
xor
sti
out
cmc
hlt
loope
jecxz
orl
adcb
aad
repnz
cld
int
in
stc
test
testl
repz
out
out
sti
test
iret
out
cmp
std
cli
idiv
cmp
ffreep
loop
movl
leave
clc
in
fst
sti
cmc
sbb
cld
sti
sar
xchg
stc
in
lret
loope
hlt
mov
xor
int
sti
in
cld
loope
out
sbb
stc
test
aam
test
test
mov
repz
lret
ss
cmc
xor
div
in
cmp
rcl
flds
xchg
ret
int3
jmp
loopne
shll
xor
fst
sti
fdivrl
in
fcmovne
cmc
div
xchg
lret
cld
cli
xchg
lock
roll
xor
out
out
fcmovu
in
xor
test
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
dec
mov
clc
jle
pop
add
ds
faddl
int3
cli
fmulp
fcoml
in
leave
repz
imul
into
stc
shr
lock
fidivrs
cmc
enter
mov
iret
int
iret
xchg
xchg
rcl
out
stc
rcl
hlt
cmp
xlat
std
repz
aad
fcmovbe
loope
rol
out
fldl
mul
repz
cmp
idiv
fchs
filds
imul
jmp
int
fsubrp
xchg
decb
xor
hlt
fstpt
fdiv
xlat
into
in
xchg
cmc
mov
decb
mov
rcl
in
cli
ss
out
cld
cld
stc
ds
movb
out
loop
repz
out
xlat
mov
ss
repnz
int3
icebp
sti
repz
call
out
in
out
cld
mov
xor
in
cmp
stc
int3
fmul
sti
cmpl
fcomip
lds
in
in
mov
xor
call
fidivrs
ret
out
ds
les
testb
rol
lret
out
cli
enter
iret
ror
in
std
loopne
fcmovu
aas
and
ljmp
xor
ss
xlat
repz
ss
ret
fptan
aam
mov
in
add
fsubrp
mov
mov
ret
xor
ljmp
imul
cmc
hlt
ror
test
call
aad
ljmp
imul
std
repnz
cmp
call
loope
loopne
in
ror
xor
shr
fadds
shl
fcomip
stc
sti
fadds
int3
shl
fnstcw
fdivrl
cld
aad
sti
adc
loop
loope
ficoml
les
lret
int3
aaa
ds
cmp
loop
lock
mov
aad
std
lret
int
rclb
call
cmp
fadds
rolb
iret
int3
cli
shl
aam
call
aas
hlt
aas
imul
xlat
xlat
mov
clc
ror
in
out
xchg
mov
xor
xlat
call
rcr
clc
add
ret
sbb
fcomip
iret
sub
out
ljmp
cmp
hlt
rcl
loope
sti
ljmp
ror
jmp
repnz
imul
xor
cmpl
fst
lret
fucomp
lret
std
nop
std
nop
subb
xor
ljmp
rcr
jecxz
xchg
test
loope
ljmp
xchg
shl
loop
loopne
in
lock
call
loopne
movl
lock
rcr
repz
fxch
lock
shrb
out
sar
in
cld
ret
out
inc
shl
in
in
ljmp
repnz
in
ror
stc
lret
stc
cmpb
ret
mov
les
mov
out
fsubrp
xor
xor
aaa
ljmp
cli
xchg
idiv
loopne
mov
aas
rol
lock
lret
clc
fdivrs
adc
cld
sar
jmp
loope
ret
mov
in
cmc
lret
xlat
int3
shr
hlt
cmp
cli
cmc
iret
int
jecxz
incl
xchg
xchg
mov
nop
xor
int
call
std
lret
ret
aad
cmp
loop
jecxz
in
les
into
xor
call
rcl
call
fdivrl
mov
orl
cmp
fmul
repz
cli
cmp
icebp
cmc
jecxz
rol
mov
iret
xchg
ljmp
lret
idiv
enter
fcmove
cmp
out
xchg
fcmovbe
xchg
sarl
xlat
out
lret
xor
imulb
jmp
shr
loopne
int
iret
loope
test
enter
in
loopne
xchg
aaa
xor
ljmp
hlt
in
cmc
incb
xchg
ljmp
test
cld
ds
lret
aad
clc
ljmp
stc
sti
shl
cmc
testl
jecxz
xor
shll
ss
jmp
idivb
out
test
mov
rcr
xchg
in
cld
xchg
shl
xor
mul
imul
sub
cmp
faddp
loopne
xlat
cli
mov
lock
xor
cs
repz
in
int
ret
fdiv
fimuls
xlat
jecxz
mov
lret
ror
aad
jmp
fcmovnbe
flds
fucomp
orb
repz
sub
in
cmp
shr
cmc
add
add
ror
aas
aad
iret
rol
adcb
iret
ss
mov
jle
pop
add
fmulp
out
clc
call
mov
loop
jmp
enter
xor
clc
div
stc
into
repnz
xchg
mov
jecxz
shr
rorl
cs
xor
call
iret
fsubrp
iret
and
and
out
xlat
in
std
mov
fsubrp
aad
hlt
lock
not
xlat
cmp
int3
loop
xlat
cmc
xchg
and
std
call
aaa
leave
into
in
fstp
repnz
hlt
loop
in
call
test
enter
leave
lret
in
xor
into
xor
hlt
in
leave
repz
enter
repz
in
cli
adc
in
xchg
mov
iret
xor
into
ror
ljmp
and
test
addb
iret
into
aas
call
fadd
fcmovne
fiaddl
ret
enter
in
jecxz
out
mov
shl
jecxz
in
jmp
aam
lock
jmp
mov
xchg
cs
xlat
stc
rcl
cmp
faddl
out
loop
mov
div
cmp
aam
fdivr
addl
mov
jecxz
cld
iret
int3
int3
mov
xchg
mov
loopne
int
xlat
fsub
fucomip
cld
not
iret
faddl
aam
in
ljmp
stc
rcl
std
call
jecxz
cld
aam
fdivrp
fcom
xor
jecxz
jecxz
loopne
into
lea
in
stc
xor
repnz
clc
loopne
repz
repnz
jmp
mov
repnz
cmc
shl
in
out
shr
cmp
in
call
in
xchg
jmp
repz
lret
jmp
iret
cmp
loop
hlt
and
faddp
jmp
fsubr
mov
cmp
sar
cmp
jmp
loopne
sbb
sti
call
mov
iret
aaa
ror
cmc
lret
repnz
cmp
fcmovnu
aam
std
fadd
int
out
mov
lret
mov
loope
repnz
in
out
stc
fadd
ljmp
cli
out
clc
in
icebp
mov
lock
fdivl
leave
cmp
lret
out
cmp
cmp
repz
fcmovnu
ret
inc
cli
stc
enter
iret
xor
shlb
lock
lret
stc
fcomp
jecxz
mov
sti
mov
out
mov
mov
in
fdivs
repnz
hlt
xor
sar
aad
int3
loopne
idiv
ret
fisttpl
shl
jmp
out
enter
out
rcl
sti
fiadds
jmp
out
loope
mov
addl
xor
cld
leave
clc
ds
add
ret
aas
mov
addl
xor
in
adc
orl
jmp
ljmp
cmp
jmp
fsub
std
fsin
fdivrp
loope
faddl
iret
iret
int3
xor
sti
cmc
icebp
in
lret
jmp
loopne
cli
cmp
test
ficoms
repnz
out
jmp
jmp
sbb
fadd
fsubr
fdivr
loop
fmulp
enter
ror
shll
cmp
fcmovu
enter
int
sbb
cmp
cli
cld
fldl2t
mov
idivl
fsubr
hlt
lret
idiv
aas
ds
xlat
shl
ds
xlat
into
jecxz
cld
call
fld
fadd
clc
cmp
jmp
sbb
mov
fstp
loopne
test
lret
into
int3
jecxz
xor
fadd
fnstcw
fcomp
cmp
sarb
sti
mov
in
call
out
jmp
out
repz
jmp
jecxz
push
std
rcr
lret
out
sti
fsub
into
lret
jmp
sti
icebp
lock
jecxz
sti
xchg
sar
xlat
clc
lret
jecxz
call
aam
out
jmp
sarl
fucomip
cli
rcl
cli
stc
rorb
int
jmp
loope
test
shl
ljmp
icebp
sar
loope
adc
sbb
and
call
in
jmp
idiv
jecxz
stc
adc
and
mov
flds
loope
not
cmp
fcmovnbe
fdivrs
rol
cmp
aas
fucom
enter
in
rolb
ror
loop
fcom
lret
stc
loope
lock
rcr
cmp
and
mov
xchg
xrelease
jmp
mov
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
adc
xor
pop
add
fstp
sti
fcom
out
jecxz
cmc
clc
leave
out
out
mov
adc
xor
cli
fdivrs
loope
out
cmp
cld
fldl
cmp
repnz
xchg
xor
in
xor
stc
jmp
out
cmp
bnd
xchg
adcb
lret
out
test
ds
shl
cmp
xchg
sti
sub
fmull
xor
shl
sarb
fcmovne
in
sti
clc
repz
ffreep
test
lret
xchg
mov
fbstp
xor
fsqrt
sub
ror
ss
fadd
sti
fsubp
incb
out
call
xchg
repz
lret
xor
in
aad
int3
cmp
fcmovnbe
fsin
mov
out
mov
and
xor
ss
xor
out
int
ds
in
roll
repnz
fcomp
lret
call
hlt
shrl
div
lret
repnz
lock
fldl
dec
in
loopne
out
shl
fnstenv
clc
fcmovne
test
int
cld
lock
rol
test
test
icebp
clc
lret
lock
xor
iret
out
cmp
enter
stc
ret
jecxz
rol
fcmovnu
stc
lret
cld
fisttpl
in
shll
stc
cmp
fcmovnb
sar
shl
aad
fldl2t
faddl
ljmp
cmp
cmp
sar
out
mov
loop
fcoml
shl
rcl
int
das
lret
fcomip
ds
sti
fld
shl
fadds
cld
lret
fcomip
rol
jecxz
clc
leave
cmp
lret
loope
cld
aas
ret
roll
in
enter
decl
divb
ror
shl
fcmovb
rcr
in
in
lret
lret
dec
call
out
xor
in
lock
push
cld
aam
bnd
in
stc
fldl2t
in
call
enter
xlat
stc
ss
cld
iret
ljmp
ret
fcmovbe
cmc
ljmp
shr
int3
mov
out
div
imul
cmp
int3
fucomip
add
in
cld
shl
leave
lea
mov
ror
out
repnz
xor
ss
rcl
ret
fcmovnbe
enter
out
mov
xchg
in
icebp
lret
xor
repz
out
in
jecxz
lock
icebp
stc
sar
fmulp
repnz
out
sti
in
mov
stc
xlat
fmul
fmul
fcom
fadd
ret
xlat
fcmovb
repnz
fildl
cmc
out
repnz
clc
sub
cli
aad
into
ss
int
aas
loopne
aad
rcr
loopne
mov
loopne
mov
aad
int
icebp
hlt
lock
cmp
aas
fcmovbe
incl
jecxz
leave
fucomip
out
mov
int
mov
rol
xor
jmp
enter
xor
xchg
out
cli
mov
leave
xor
lock
lret
clc
jecxz
cmp
iret
loopne
int3
inc
cmp
addb
out
filds
int
call
aas
stc
sti
jecxz
stc
loopne
sar
ret
std
cmp
lret
clc
mov
fcmove
in
test
jecxz
xor
aad
sti
jecxz
shl
rolb
ljmp
call
in
xor
in
rcr
cmp
stc
in
loopne
in
fdivr
fsubr
aam
movl
int3
rcl
fld
in
repz
repnz
fcom
cmp
repz
repz
jmp
out
xor
repz
in
ljmp
std
cld
in
test
les
addb
lret
in
repz
lock
ror
fcomi
xchg
jmp
fucomip
mov
loop
cmp
fldln2
int3
fidivrl
iret
cld
ds
loopne
mov
nop
in
ret
repnz
xlat
repnz
xlat
fdiv
ljmp
loope
int
std
call
jecxz
les
repz
cmp
loope
ljmp
cmc
clc
ret
call
test
cmc
in
ret
int3
repz
repz
cmp
in
div
addl
out
out
out
test
out
in
ss
leave
lret
sti
loopne
jecxz
div
mov
fsub
mov
loop
dec
cmc
lock
sti
rcl
rcr
ror
icebp
loop
loopne
fmulp
xor
adc
iret
mul
enter
cmp
cmp
sti
loopne
int3
fyl2xp1
fadd
cli
test
jmp
cld
movl
out
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
loop
xor
pop
add
fxch
icebp
sarb
jmp
hlt
ret
ret
mov
mov
bnd
xor
cmp
sti
stc
int3
test
rol
ffree
rcl
stc
loop
ljmp
xor
int3
cmp
idiv
cmp
loope
in
xchg
fcmovbe
std
cmc
loope
loope
loope
std
jmp
out
xor
enter
out
xor
cmp
sar
cli
xchg
hlt
jmp
cli
enter
lock
xor
enter
cli
iret
xlat
call
test
out
xchg
incl
lock
lret
stc
int3
xor
in
cld
cmp
test
loope
loop
xor
icebp
nop
fildl
cs
out
cmp
cmp
rol
xlat
stc
in
aam
mov
enter
int3
and
aaa
hlt
int
repz
shl
ror
out
icebp
and
addb
in
xchg
ret
xor
out
ffreep
sti
int3
in
shl
neg
xchg
mov
xchg
repz
lock
cmp
fnstenv
fpatan
sti
fstp
jecxz
or
lret
test
call
aad
fdiv
cmc
idivb
cmc
iret
cli
into
shl
out
jecxz
call
mov
xor
aaa
cmp
ljmp
vpsubusw
out
fmulp
in
ljmp
shlb
jmp
std
hlt
rcl
loop
add
roll
mov
fsubp
in
mov
hlt
lret
fnop
xor
ds
sarb
xchg
lret
in
in
fadd
xchg
repz
mov
out
cld
clc
cmp
rcl
idivl
ret
out
xlat
rorl
jmp
enter
jmp
iret
clc
ss
jmp
stc
int
cmp
aad
icebp
fistpll
ds
testb
repnz
fdiv
frstpm(287
clc
imul
and
aas
out
idivl
sti
rol
call
loopne
ret
aaa
shlb
xlat
in
lret
in
shl
lock
xchg
aad
mov
ffreep
test
jecxz
imull
jmp
aad
int3
sarb
jmp
aad
lds
in
xchg
ror
into
fmul
jmp
lret
aad
iret
rcr
shr
ss
ret
addl
in
ret
call
sar
sti
lret
cld
icebp
rorb
or
loope
shr
repz
lret
ljmp
fmul
repnz
add
shl
jecxz
lret
iret
addl
out
rcl
shr
cld
fcmovbe
stc
neg
test
cli
fcmovb
loopne
test
or
cmp
fcmove
cmp
enter
ds
stc
jmp
mov
iret
ljmp
das
xor
fcmove
lock
repz
aas
cld
ret
hlt
loop
std
stc
jmp
cs
xor
aaa
repnz
jmp
fdivr
rol
mov
loopne
out
icebp
fldln2
leave
int
xchg
aad
sub
call
lret
cli
rcr
xlat
ret
cmp
sar
mov
repnz
int3
imul
loopne
fdivr
xor
in
ds
jecxz
fcomi
jecxz
ds
or
out
mov
ret
sti
rol
in
shr
aam
idiv
sar
sar
loopne
aad
leave
mov
int3
roll
in
xlat
fadd
cmp
into
loopne
xor
ret
ret
test
in
out
lret
in
ror
lret
ss
dec
cld
rcl
sar
cmc
sbb
loope
fcomp
fisttpl
xchg
repz
lret
fnstcw
rcl
aad
shl
jecxz
stc
cld
clc
in
nop
rorb
ljmp
xor
rcr
fldl
jecxz
clc
testb
mov
icebp
in
in
in
cmp
fdivp
shr
fsubr
cmc
loope
aad
ljmp
repz
mov
into
xor
out
repnz
cld
jecxz
loop
icebp
ret
in
in
add
test
xor
int3
hlt
cmp
lock
aad
loope
out
out
std
out
fiaddl
in
fsubp
stc
out
clc
in
xlat
loop
loope
vcvtpd2dq
vpaddsb
enter
loope
test
xor
int
out
fcmovnu
cli
icebp
cmp
ror
in
sar
stc
out
mov
in
or
ss
rcl
enter
push
neg
cmc
faddl
fsubr
sub
loop
cs
int3
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
insl
mov
and
jl
jmp
ljmp
jecxz
ret
test
cli
sti
ret
call
lret
in
sar
out
cmp
out
cld
test
in
mov
leave
jmp
in
cld
mov
cs
fcmovnbe
iret
enter
rolb
jmp
enter
mov
xlat
out
test
in
rcr
fcmovu
cmp
fcompp
mov
std
lea
mov
out
xor
aam
lret
in
rol
int
xlat
aam
loope
mov
flds
or
lock
cmc
fsubp
ret
aad
cmp
call
test
jmp
ret
int3
div
call
icebp
ret
loop
stc
aas
jecxz
shl
loop
lret
roll
iret
fdiv
fcmovu
jmp
xor
xlat
xchg
rol
xlat
in
mov
and
out
out
in
cmp
push
and
idiv
in
mov
shr
jecxz
loope
fxch
leave
ror
cs
std
out
fdivr
ffreep
addl
lret
rorb
in
ljmp
cmp
ds
in
neg
out
std
jmp
clc
mov
sbb
ljmp
rcr
aas
int3
sar
ret
cmp
sub
int3
call
shl
repz
int
int
ljmp
in
rcr
fdivr
out
sti
xchg
xchg
ffree
hlt
lock
cmp
fldl
test
loopne
ljmp
lret
fnstcw
xor
in
int3
xor
fcmovb
in
repnz
out
aam
out
in
xchg
test
ret
das
jmp
mul
cli
out
cmp
rcl
aas
repz
fcmove
mov
testl
enter
in
xor
sti
add
fucomi
xchg
loopne
jecxz
loopne
xchg
in
xor
fxch
cld
xor
and
icebp
int3
cmp
jecxz
test
loop
xchg
sbb
nop
mov
ljmp
clc
rcl
cmp
xchg
fcomip
mov
mov
in
hlt
sub
hlt
imul
jmp
in
ret
xchg
stc
lds
lret
xchg
shr
shr
jecxz
aaa
call
cli
fsubr
loop
fucomp
aam
fsubp
fimull
lret
aam
cmp
leave
cli
hlt
lret
ds
cmc
test
sti
fucomi
mov
cld
mov
das
cs
aaa
cmp
ljmp
mov
lock
ljmp
test
lret
xor
das
enter
std
xorl
call
lret
in
mov
xlat
xor
neg
idiv
cmp
shl
loope
out
cmp
sarl
idiv
out
cld
lret
sub
lret
xor
fcomi
iret
aas
jecxz
cli
xchg
loopne
mov
in
sub
xchg
xor
shll
cmp
xlat
cmp
stc
rcl
addl
mov
mov
int
ljmp
ljmp
cmc
loopne
in
test
ffreep
fcomp
mov
lret
xchg
ret
hlt
hlt
xor
xlat
out
jmp
fiadds
mov
jecxz
xchg
iret
sub
into
aam
div
mul
cmc
xor
adc
jecxz
fucomip
icebp
mov
std
jecxz
shr
aad
shlb
aad
iret
imul
cmp
loop
fcmovnb
fucomip
out
sub
mov
out
in
xor
int
rcr
shl
loop
cld
shl
loop
jecxz
in
leave
loope
dec
in
imull
lret
fdivrs
inc
xor
fsubp
cmp
fxch
mov
icebp
or
jmp
int
in
ss
cmp
cld
out
cli
test
rcl
idivl
xlat
faddl
jmp
icebp
mul
ljmp
in
sti
jmp
sar
stc
aad
aad
test
addb
xor
call
xor
cmp
out
addl
sti
call
loope
mov
ds
out
into
leave
out
ss
fdivrp
cmp
and
out
std
ret
lock
lock
enter
hlt
clc
cmc
lret
aam
fistpll
aas
aad
in
xchg
loopne
nop
shl
int3
xor
out
int3
jmp
cmp
cmp
ret
out
fucomi
mov
push
or
cmp
jmp
aad
fstl
or
jle
pop
add
icebp
not
loop
cmc
fldln2
stc
fdivrl
and
cld
fsubrp
shl
inc
lret
cld
mov
into
mov
repnz
aad
cmc
stc
cmc
out
shl
sar
jecxz
xchg
ret
ret
out
fdivr
jecxz
cld
xor
leave
aam
out
clc
cmp
add
hlt
aaa
aam
rcr
sbb
movb
mov
into
call
cmp
in
int3
clc
out
mul
out
leave
clc
ljmp
xor
fnstcw
clc
clc
loopne
aam
ror
repnz
jmp
lds
hlt
fucomip
icebp
xlat
ret
fdivrs
lock
lock
mov
cmp
in
out
fdivr
mov
into
cmp
in
aam
aas
clc
in
sar
cmp
lock
aam
ret
mov
loope
incl
out
aad
xlat
cmp
out
cmp
fabs
loop
ret
jecxz
enter
cli
out
loop
jecxz
fsubp
out
out
loope
rcr
cld
rcl
fcmovne
into
icebp
fnsetpm(287
std
aad
lret
mov
std
in
enter
ret
iret
int3
out
out
lock
xlat
fucomip
aad
xlat
out
sti
int
mov
int3
lret
jmp
lret
ror
out
cs
fyl2x
loopne
fcmovnb
testl
ret
int
lret
lret
aam
in
lret
jmp
xor
jecxz
xchg
out
filds
ret
sti
cli
ret
lret
imul
fdiv
out
int
shr
cli
loopne
std
xchg
iret
in
xchg
xchg
cmpb
cmc
bnd
in
aam
rol
ret
ds
loope
cld
loope
fstp
orl
xlat
xor
ror
fcomp
fistpll
loope
out
std
out
int
call
in
repnz
in
shll
out
std
clc
jecxz
icebp
fucom
cmp
sub
loopne
enter
fidivs
sar
aaa
ss
out
xor
mov
loope
idivl
filds
in
rcl
in
test
ljmp
clc
std
fcmovnbe
fiaddl
lea
cmc
repnz
loopne
in
in
xor
xlat
shlb
out
cmp
mov
in
sub
cli
in
xchg
cld
cli
repz
into
shl
idiv
ss
fsubrp
repnz
aas
adc
loopne
clc
mov
xchg
xchg
fucompp
test
stc
shl
leave
in
xor
std
fdiv
aad
rolb
test
fldln2
mov
fcmovb
sti
jmp
xchg
loope
jecxz
xlat
sti
fdivr
ss
in
fdivrl
neg
cld
mov
hlt
enter
iret
jmp
in
int
in
in
mov
xchg
in
in
sub
clc
repnz
cli
out
jmp
loop
loopne
repz
sti
idiv
mov
xchg
fmulp
cs
aad
lret
std
fdivrl
xlat
fcmovnu
aam
in
repnz
loope
leave
sbb
in
or
out
jmp
imul
call
cmc
cmp
rol
not
int
in
jmp
call
xor
jmp
repnz
idiv
jmp
mov
enter
lock
lock
lock
aaa
int
in
fcom
cmp
loop
test
aad
out
mov
jecxz
lret
adcl
out
jmp
cli
repnz
aad
test
neg
xlat
out
jmp
xchg
loop
xchg
rcl
aaa
cmp
cmp
fucomp
addb
jecxz
jmp
fisttpll
in
shl
lret
repz
fildl
shl
out
aam
in
jecxz
sub
loopne
incl
into
shr
fnstsw
clc
cmp
aad
hlt
add
fisttpl
mov
jecxz
lret
clc
fmul
jmp
std
and
mov
mov
cmp
into
int3
sub
iret
in
ljmp
fsubp
inc
shl
loopne
addl
cmp
fdivl
iret
lret
std
test
lock
shr
cli
aad
call
or
rcr
repz
out
sti
fmul
int3
xor
std
out
shl
loop
fadd
or
out
out
sbb
subb
in
enter
cmp
filds
stc
aad
stc
aam
call
call
xor
test
into
xor
aam
stc
fldl
int
loop
repnz
mov
iret
loopne
hlt
xor
ffreep
icebp
int
iret
shl
shl
roll
mov
rolb
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
mov
jle
pop
add
ljmp
xor
jmp
cmp
jecxz
fcom
call
xchg
in
in
loope
in
aad
cli
sti
cmp
into
cli
repz
std
ret
cld
icebp
addb
fstp
mov
mov
out
lock
sarl
fmul
in
addb
out
out
call
int
xor
repz
clc
cld
cld
cmp
mov
in
cmc
fiadds
jmp
out
xor
out
jmp
out
into
loopne
repnz
mov
mov
loopne
jecxz
in
lret
test
ds
repz
sarb
sar
leave
enter
clc
enter
repz
mov
xor
rcl
shr
loop
cli
iret
ret
cmc
fiadds
xchg
xchg
rcr
xor
in
repnz
lret
jmp
cld
test
cmc
in
loopne
incl
repz
xor
cmp
xor
int
in
into
in
cmp
ds
loopne
fmull
and
mov
call
xor
idiv
repnz
adc
cli
loopne
ljmp
jmp
in
int3
out
out
call
aas
adc
in
fsub
and
test
icebp
loop
stc
stc
out
out
out
cmp
in
jecxz
faddl
frndint
loop
loope
in
das
cs
out
call
fmul
or
test
jmp
lret
mov
enter
ret
fcomp
idivl
clc
dec
fcomp
shl
clc
sti
addb
jmp
vpsubsw
clc
fstpt
lock
out
stc
shl
mov
in
lea
repz
ss
lret
hlt
in
xor
cmp
int3
out
repnz
hlt
jmp
in
mov
lret
shr
sar
clc
xlat
jmp
aas
xorb
out
mov
in
out
std
adcb
loop
lret
call
into
ror
in
ret
cmc
jmp
out
and
jmp
xlat
leave
xor
cld
leave
cmp
clc
cmp
cmp
xchg
jmp
icebp
xchg
cli
loope
iret
lret
loopne
fcmovnbe
cs
clc
inc
hlt
out
rcl
ds
sbb
int
sub
cmc
ror
repz
xor
lret
call
iret
lret
stc
hlt
aad
test
decb
in
lret
fdivp
loop
stc
test
xlat
cmp
cmp
cli
test
fmulp
in
mov
repz
ljmp
stc
fidivrs
hlt
addl
addl
ficoms
jmp
in
aaa
ss
repz
lds
in
mov
std
std
lret
cmc
xor
leave
ss
out
cmc
repz
lret
fstp
in
xchg
mov
iret
clc
fcmovne
rcr
xor
aad
cld
out
sarl
fdivrp
or
icebp
mov
out
xchg
xor
xlat
icebp
iret
repz
cmp
roll
add
call
out
mov
cmp
ror
repz
clc
in
ljmp
loope
repnz
flds
in
leave
xchg
mov
leave
loope
into
ret
out
out
sti
shr
fidivrs
aas
stc
ret
in
sbb
ret
sti
int
rcl
cmp
leave
cmp
ds
ljmp
stc
rcr
xchg
incb
repz
in
leave
shlb
std
jmp
jmp
sti
out
in
in
cld
int
sub
out
in
xor
clc
cmp
icebp
fstp
inc
cmc
ret
hlt
fdivr
enter
loopne
hlt
into
in
xor
aaa
neg
in
cmp
jecxz
aaa
rol
test
jmp
loopne
xchg
ljmp
in
xor
lret
xor
in
cmp
jmp
cmp
rcl
out
out
test
icebp
ror
ljmp
clc
cmp
repz
fadds
mov
cld
loop
jmp
lock
jmp
hlt
cmp
rcl
aam
sbb
into
fxch
xchg
out
jecxz
aad
jmp
neg
hlt
cmp
cli
test
fadd
call
decl
int3
jmp
into
into
int
ljmp
rcr
not
loopne
xchg
fcmovnu
int3
in
xchg
int
into
das
jecxz
lock
into
sarl
aas
sar
shl
ret
mov
xchg
fs
add
fs
add
rol
add
inc
jl
add
cli
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
rcrl
sbb
add
clc
test
xor
repnz
icebp
lock
cmp
cmp
jmp
ljmp
hlt
out
fcomp
sti
fdivrp
int
and
idiv
shr
loope
lret
out
cld
xor
call
in
cmc
aaa
sar
leave
aad
loope
fabs
shll
cmp
lret
loopne
std
test
into
loop
xlat
out
idiv
jmp
ret
into
cli
cli
xchg
lret
popl
mov
cmp
cmp
jmp
xlat
idiv
sar
mov
incl
fimull
into
lret
fcmovnbe
aas
rcr
fcmovnbe
shl
shl
repz
aas
ljmp
repnz
rol
jecxz
iret
xlat
lret
xor
sar
int
fcmovb
repnz
in
mov
cli
in
jecxz
repnz
out
sti
in
repz
cmp
xchg
ret
cld
sub
out
loopne
iret
xchg
in
out
lret
lret
ror
cmp
ss
cli
test
decl
enter
in
cmc
imul
fnstenv
fnstsw
int3
enter
icebp
sbb
and
fmuls
into
in
loopne
not
jmp
repz
ds
cmp
sbb
clc
test
int
int
icebp
shrb
xor
aam
cmp
loope
iret
stc
sti
in
loope
xchg
inc
loopne
in
out
shl
out
xor
int
cmp
xlat
icebp
out
fucomi
aad
xchg
fdivp
loope
hlt
jmp
mov
fdiv
ss
loopne
out
shr
fdivrs
jmp
repz
div
aad
call
loope
in
shl
iret
into
fdivs
cmp
div
aam
out
cld
jmp
mov
fsubp
call
in
fsub
leave
lock
aas
fiadds
cmc
stc
fimull
fisttpll
leave
aam
out
in
aas
jmp
loope
int
xchg
xchg
mov
clc
xchg
nop
cld
sub
shr
imul
shl
stc
hlt
in
aad
aad
cld
loope
test
ds
into
ljmp
repnz
jmp
ss
xor
aas
add
test
in
int
mov
int
std
cmc
xchg
cs
enter
rcr
cmp
aad
leave
in
out
orb
call
loop
imul
xor
not
rcl
out
fadd
repz
clc
ljmp
lret
icebp
enter
sti
in
loope
repnz
roll
out
fcmovbe
int
aad
cmc
hlt
ret
in
out
enter
out
aas
in
and
ljmp
in
loopne
xor
jmp
int
iret
cmp
lds
call
loopne
fdiv
iret
jmp
cmp
cld
iret
cmp
repnz
xchg
sbb
in
decb
ror
out
xor
lock
iret
xor
int3
hlt
ret
rcr
lret
lret
fsubrp
out
mov
shl
out
xor
jmp
jmp
ret
ret
ret
leave
clc
fildl
ss
rol
sti
out
cmp
repnz
cmp
test
fsub
mul
out
in
into
out
test
out
int
not
cmp
int3
fmulp
sar
cmp
icebp
inc
test
xchg
xchg
fadd
jmp
fucomp
xor
std
iret
idivb
xchg
cli
xchg
into
in
test
jecxz
lret
cld
fsubp
fucomip
clc
lock
shl
out
mov
lret
leave
xor
ljmp
div
fistpll
clc
jecxz
aam
clc
call
xchg
not
xor
in
sarl
cmp
lret
clc
fcomi
in
into
idivb
and
orl
icebp
jmp
xor
std
cmp
xlat
shl
clc
ret
fdivr
cmc
cld
repz
repz
xor
into
repnz
in
cmp
imul
shl
sti
loope
cli
fucom
fsubp
xchg
iret
jmp
mov
aas
xor
leave
xlat
out
fstp
xor
ret
cli
xchg
loop
lea
lret
repnz
enter
ret
aaa
hlt
cmp
div
in
std
mov
movb
in
int
cmc
mov
aam
xor
iret
cmp
into
in
fimull
fadd
xchg
loopne
mov
jmp
das
icebp
fcmovbe
out
lock
cmc
ret
fucomip
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
int
mov
jl
loop
loope
xchg
sub
hlt
int
xlat
imul
xor
out
icebp
out
aam
orb
test
lret
xchg
repnz
loopne
int
aaa
cmp
out
repz
sar
xorl
repnz
repnz
mov
xchg
sub
out
ss
jmp
loop
loope,pt
ret
cmc
fdivrp
in
into
in
fists
lret
leave
aam
cmp
aas
repz
fistpll
xlat
test
in
out
sub
out
out
xlat
cli
shl
ss
shl
aas
aas
rcr
fdiv
stc
loopne
out
mov
mov
xchg
ror
in
xlat
shl
cmp
out
jmp
divl
repnz
out
fiadds
fmuls
fst
lret
xor
aad
cld
ljmp
xor
enter
jmp
out
xor
cmc
rcl
idiv
fcomi
call
addl
mov
lds
ss
xlat
rcr
cld
lret
or
out
fcmovnu
repz
xchg
mov
ret
orl
cmp
lock
cmc
clc
cli
cmc
jecxz
stc
fcom
testl
mul
sub
out
ljmp
cld
out
shr
cld
xchg
ljmp
sub
repnz
cmp
cmp
lret
xor
cld
iret
adc
aam
fsubp
call
cli
mov
in
in
aaa
xor
lret
icebp
fadd
std
neg
leave
loopne
std
xchg
repnz
repnz
cmp
lret
loop
lock
ds
jecxz
idiv
mov
cld
sti
xchg
addl
into
int3
ss
ss
fcmove
fdivr
cmc
mov
sar
testb
test
out
xor
ret
jmp
out
jmp
iret
loope
fimuls
iret
loopne
in
fcomip
in
xor
cmp
stc
jmp
rcl
fcomi
loopne
mov
xor
mov
shr
test
cmp
stc
xlat
cmc
cmp
fabs
rorl
mov
sub
in
imul
call
clc
ret
out
dec
call
call
enter
lock
in
aad
and
fdivrs
xchg
and
repz
ljmp
dec
fdivp
shl
rcl
shl
test
in
leave
faddl
xor
clc
xor
ljmp
fldl2e
shl
loope
in
jmp
neg
enter
ljmp
shr
lock
hlt
xor
aam
div
xchg
addl
in
std
lock
fiadds
in
mov
fldl
in
xor
aad
call
out
out
cmp
aad
sar
xlat
cli
leave
addl
decb
cmc
enter
cmp
loope
stc
aas
adc
lock
cmp
std
std
call
sarl
enter
in
xor
cld
ret
sti
clc
loopne
loopne
add
fdiv
fmul
xchg
out
shl
xor
out
shl
cmp
cmp
lds
lret
iret
mov
call
out
xor
lock
in
into
loope
fdivrl
std
stc
adc
in
call
repnz
out
out
ror
idivl
std
div
sbb
sar
clc
cld
stc
jecxz
int
into
repz
shl
iret
lret
loop
fcom
cmp
loopne
orl
in
mov
hlt
out
cmc
hlt
jmp
aam
in
test
mov
and
in
out
in
xor
ror
loop
sti
in
iret
cmp
cli
repnz
loope
sarl
jecxz
xchg
lret
fdivp
cmc
out
in
fcmovnbe
xor
xlat
lret
aam
xlat
stc
int3
loope
std
loopne
hlt
and
stc
stc
mov
jmp
repnz
xor
lock
addl
fld
iret
rcr
jecxz
xchg
jmp
ret
aaa
shll
ror
aas
cld
into
aas
xor
fxch
xchg
lret
jmp
rol
das
in
aam
cmc
xor
into
rcr
iret
adc
mov
into
sti
out
xchg
sub
stc
repz
aam
dec
stc
out
lret
lock
and
out
cld
test
stc
xor
iret
stc
jmp
std
ds
add
sar
sub
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
mov
jl
add
sti
out
in
test
ret
aad
int3
cmp
loopne
test
rcr
flds
mov
int3
cs
das
out
sar
cmp
aad
cmp
testl
out
int3
cmp
shll
ss
loopne
fidivrl
cmp
iret
not
lock
icebp
icebp
or
aad
in
adc
icebp
leave
aad
fcmovne
cmp
cmpl
xor
fdecstp
movl
xor
call
jmp
enter
cli
shl
test
xchg
ds
sti
in
dec
fisttpll
repnz
cld
shll
repz
clc
jmp
cmp
adc
ret
loop
fisttpl
repz
fucomi
loope
cmp
xlat
in
fst
loopne
fmuls
int3
loopne
mov
lret
rcl
aad
imulb
fucomi
int
cmp
cmp
adc
fdiv
mov
ret
test
xor
repz
fmul
out
aad
in
cmp
aad
stc
fadd
leave
cmc
ljmp
into
test
repnz
xor
leave
ss
cld
jecxz
rcl
out
xchg
fst
test
xchg
shlb
shl
test
enter
or
repz
test
idiv
fistl
in
stc
call
fsubr
cli
std
out
cmp
faddp
aad
rolb
mov
out
mov
aam
rol
ret
out
xlat
cmc
aas
ss
out
cmp
rolb
sti
lock
mov
into
cmp
hlt
jmp
aam
test
fstp
jmp
mov
in
in
loope,pt
xor
out
cmp
fmul
xor
cld
fcomip
ret
addb
in
cmc
loope
shr
repz
cmp
aaa
jmp
cmp
repnz
ror
jmp
ds
mov
fimuls
out
aad
fidivrl
in
les
into
repnz
rol
mov
test
iret
lret
ret
lock
aaa
xor
fnstcw
repz
aad
aas
icebp
cli
out
lock
ljmp
iret
rol
xlat
out
ds
loop
std
aam
xlat
sub
loop
lret
test
add
int
icebp
out
in
out
stc
aam
aaa
shr
jecxz
fdivrs
lock
fadds
cli
test
fsubr
mov
stc
call
icebp
xor
in
shl
out
aad
mov
ret
movb
xor
stc
divl
shl
std
jecxz
sti
filds
rcr
lea
ljmp
cmp
sti
stc
lock
test
fcomp
fadd
leave
vpaddusb
jmp
int
out
fucomp
lret
std
mov
aam
shl
jmp
xchg
loopne
shl
out
aaa
fcmovne
jmp
int
aad
idivl
test
cmc
lds
icebp
cld
jmp
shlb
stc
fcmove
in
enter
cmp
test
xchg
mov
call
loopne
int
rcl
lret
xor
sti
xlat
out
cmp
into
or
aas
shr
inc
rcr
vpmacssdd
in
into
aad
cmp
shl
xlat
fcmovb
repz
lret
in
loop
loop
into
out
leave
shl
enter
xlat
jmp
lret
loop
xor
fdivrp
mov
cli
ffreep
mov
in
leave
sar
cmc
fcmovbe
icebp
iret
std
out
fildl
cld
mov
or
ret
xor
aad
cs
stc
rcr
in
out
out
test
filds
ljmp
out
out
cmc
out
fsubrp
cmp
loope
loop
cld
or
mov
test
leave
in
neg
sarl
hlt
cmp
cmp
cmp
ret
cld
loopne
clc
in
rorl
xchg
xor
repz
rcl
fcmovu
testl
leave
mul
cmc
out
call
mov
int3
hlt
shl
cmp
lock
fnstsw
test
out
fcmovu
test
call
cmp
xor
lret
enter
int3
cld
cmp
stc
ret
and
lret
ljmp
repz
in
in
in
ss
cmp
repnz
cld
or
int
leave
aad
into
lret
ret
cli
testb
faddl
sub
xchg
out
xor
xor
cli
fdivs
hlt
call
cli
cld
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
sbb
ljmp
loopne
jmp
leave
in
rcl
cmc
repnz
ffreep
stc
ss
and
mov
repnz
in
cmp
ds
in
stc
lock
fcmovbe
xlat
ffreep
fstp
cld
loop
call
hlt
ljmp
stc
sar
ret
aam
aad
cli
leave
jmp
out
test
sub
ror
jmp
fdivp
in
stc
fdivrp
stc
hlt
loopne
jmp
rolb
out
clc
out
lret
shll
rcr
cmp
shl
loopne
popl
into
out
idiv
cmc
xor
enter
shlb
neg
fimuls
in
ret
lock
cs
repnz
test
in
in
in
not
fcmovnb
ret
adc
loop
sbb
ljmp
iret
iret
xlat
aaa
shl
cmp
div
cld
cld
aad
repnz
fildl
test
sti
mov
sub
xor
int
out
fcmovnu
in
sarl
jecxz
incl
repnz
jecxz
shr
loop
xchg
loopne
jmp
out
xor
in
lret
in
cmp
shl
xchg
test
fcomp
in
into
xchg
in
xor
sub
sarb
shl
iret
and
lds
in
nop
lret
icebp
out
out
cmp
fidivrl
out
shl
repz
repnz
idiv
mul
les
mov
shr
cmc
in
out
in
fucomi
into
cmp
fcmovne
loope
test
lock
enter
jecxz
lock
roll
sti
ss
ljmp
in
test
rcr
xlat
sub
in
shl
int3
rcr
out
loope
xlat
fcmovne
int3
idiv
fcmove
xlat
cld
neg
out
aas
xchg
fcmovbe
loopne
jmp
xor
cmp
aam
jmp
icebp
cli
ret
in
rcl
fmull
fmuls
enter
cmp
cmc
repz
stc
div
xabort
loop
int
call
out
xchg
xor
xor
shl
cmp
aaa
lret
fnstsw
cmpb
in
jmp
ret
out
fisttps
xor
into
call
out
hlt
xor
out
adc
into
lock
jecxz
divb
xlat
xor
jmp
out
into
jmp
in
fadd
test
out
in
fisttpl
subb
std
aad
aas
shr
stc
ret
out
cmp
mov
shl
lock
lock
aam
ljmp
cmc
in
lock
div
in
std
in
mov
out
fldcw
lock
cli
clc
fdivs
out
int
loope
cmc
out
neg
ds
stc
cli
out
jecxz
nop
in
xchg
lret
mov
xor
xor
lret
repnz
sarl
out
icebp
lock
cli
fsub
ds
rorb
ret
ret
aam
repz
repz
in
cmp
rcr
clc
ret
lret
enter
mov
xor
int3
xor
das
leave
lock
iret
rcr
testb
loope
in
jecxz
mov
out
out
divb
lret
shr
ds
std
add
mov
hlt
test
sti
xchg
icebp
jmp
call
loope
fldz
divb
sti
into
sub
ret
rol
mov
cmp
mov
out
in
cmp
cmc
fcmovnbe
icebp
into
sti
and
in
loop
fimuls
xchg
int3
shl
out
cmp
cld
aam
ss
repnz
lock
ret
roll
out
out
out
xchg
xor
fxtract
lret
cmp
lret
ljmp
fcmovnu
ffreep
cld
in
fcmovnu
les
out
fxam
int
sar
cmp
lock
lock
neg
fsqrt
in
and
icebp
xchg
out
enter
xlat
aaa
cmp
out
cli
sti
clc
xor
cmp
xchg
jmp
cld
nop
mov
aas
out
mov
lock
into
repz
xor
loop
cmc
test
test
mov
aad
lret
int3
cmp
leave
cmp
xor
cmp
repnz
in
int
clc
sti
icebp
xchg
cli
out
loope
stc
into
cmp
sar
out
clc
jmp
into
cli
vcmpss
neg
jmp
xchg
ror
loop
aad
repnz
fcom
aam
sti
test
roll
fldl
in
int
sti
mov
aaa
cmp
shl
cmp
xor
cmp
jmp
cmp
loop
leave
fsubp
in
test
out
xor
aam
jmp
cmp
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
lcall
add
rolb
jmp
enter
in
xchg
out
out
into
lret
sti
fucomp
rcr
sarl
aad
repnz
testl
loop
out
lock
iret
out
cmp
aaa
jmp
int3
cmp
test
nop
lret
in
aaa
out
sar
ss
fldz
ffreep
fst
out
repnz
ljmp
xor
enter
jmp
out
repz
sar
rcl
ret
in
loop
fstl
cs
fnstenv
lds
cs
repz
xlat
fld
rol
ljmp
cld
fucomip
out
in
in
icebp
xlat
out
cmp
fnstcw
loop
addl
out
in
lret
in
into
jmp
clc
in
mul
aad
aam
lret
fsub
lock
test
xor
imulb
in
lret
lret
neg
lock
inc
call
out
call
mov
xor
jmp
idivl
rolb
call
mov
out
xchg
cmc
int
xor
xor
repz
fistpll
roll
rol
and
stc
fiaddl
fsubrp
sarb
out
cli
cmp
cmp
cmp
loope
stc
fucomip
out
ds
test
fsubp
into
loopne
xlat
repnz
in
icebp
cmp
cmp
loopne
mov
loope
ret
xor
out
int3
aam
aam
fdivrs
fcmovne
and
addl
mov
out
or
int
into
cmp
ljmp
loop
xchg
aam
div
int3
lret
lea
in
lret
div
shl
ror
cmc
rcr
aam
loopne
jecxz
lret
ljmp
in
ss
xor
cmp
repz
loop
iret
rcr
aad
loope
std
enter
nop
sub
aam
jmp
icebp
cmp
fdiv
cmp
enter
out
lret
aad
xor
leave
test
shl
cmp
sbb
ret
faddp
xlat
out
addb
xor
jmp
in
out
fstp
in
in
fcom
rcr
clc
mov
out
cmp
lock
lret
in
lret
fdivl
std
hlt
shl
xrelease
loopne
lret
iret
int3
xchg
mov
out
clc
cs
loop
enter
cmp
loop
icebp
incl
jmp
test
mov
repz
shll
idiv
jmp
rcl
test
cmc
repz
enter
test
mov
rol
aaa
int
call
cmp
fadd
push
out
jmp
mul
sbb
int3
addl
lock
out
repnz
cmc
xchg
repnz
xlat
in
test
out
fcomip
test
vpavgw
cmp
cmp
xlat
cmp
iret
sub
roll
and
out
sti
sar
loop
out
in
in
icebp
out
leave
aaa
out
clc
stc
ljmp
cli
xchg
mov
in
xchg
sub
test
ljmp
int3
cli
lock
lock
mov
fisttpl
mov
enter
int
rcl
ret
loop
ret
xchg
lret
xchg
test
xchg
xchg
into
rcl
clc
xor
in
fdivrs
roll
jmp
lea
in
out
sarb
cmp
roll
lret
mov
iret
out
in
shrl
in
rol
hlt
cmp
cmp
loop
inc
jmp
out
mov
roll
not
ss
movl
fsub
loop
inc
loop
leave
int3
cld
iret
in
in
xor
xlat
sti
sarb
lock
filds
in
xlat
cmc
ret
repz
iret
ror
out
out
icebp
movb
xchg
repz
ret
sub
out
ljmp
les
in
cmc
aaa
cmc
adc
cmp
fucomp
loopne
out
call
mov
jmp
icebp
into
call
enter
in
aad
fcomip
or
ret
into
sar
orb
sub
out
ljmp
fptan
jecxz
test
fsub
fucomp
out
dec
fildll
sti
fistpll
aad
loope
fcmovnb
aam
clc
loop
neg
out
out
jmp
int
rcr
clc
lock
cld
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
add
mov
jl
jl
jl
jmp
cmp
icebp
sar
mov
and
ffreep
in
cld
int
int
cmc
ljmp
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
