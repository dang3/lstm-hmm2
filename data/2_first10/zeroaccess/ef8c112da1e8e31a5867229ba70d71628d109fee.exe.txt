push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
add
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
jp
lock
dec
dec
int
add
out
repz
mov
insb
mov
fs
aad
ret
aad
and
fcmove
lods
cltd
dec
sbb
or
sti
inc
push
enter
adc
xchg
mov
repz
mov
aad
push
outsl
sbb
enter
in
pop
stc
mov
hlt
shll
mov
ficompl
bound
int3
xlat
hlt
inc
jo
jbe
jp
mov
xchg
lret
xchg
mov
mov
mov
movsb
dec
push
insb
out
push
call
sub
outsl
push
das
xchg
jmp
fs
push
pavgb
xor
sub
in
in
pop
push
jg
loop
cmp
sbb
jecxz
insl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
xchg
repnz
jg
jle
jg
jle
leave
fwait
push
add
aam
cmp
xor
dec
add
leave
cli
xor
cli
lods
cmc
cmp
sbb
lahf
xchg
sbb
mov
pop
pop
inc
cmp
ja
loop
faddl
and
sbb
push
fs
negl
xchg
or
call
repz
or
pop
sub
cmp
push
push
dec
xor
dec
jne
cli
add
xchg
insb
mov
xor
inc
jb
mov
xchg
mov
outsl
int3
popf
xchg
mov
and
and
mov
mov
and
ja
inc
test
icebp
mov
sbb
imul
aaa
ret
jo
pushf
or
pop
popa
mov
jae
dec
enter
in
iret
inc
jno
aad
into
adcb
fsubrl
cmovae
mov
rol
push
xchg
mov
hlt
mov
addr16
out
xchg
mov
call
mov
imul
ss
hlt
mov
insl
in
add
xchg
jle
jbe
or
dec
jnp
outsw
daa
mov
xchg
jp
in
aaa
fstl
cmc
jb
lahf
shl
ret
dec
jns
push
push
push
insb
or
sub
mov
pop
sub
es
fistpll
mov
dec
loope
enter
and
or
lret
xchg
int
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
roll
jle
cli
jg
jle
decb
fidivs
adc
insl
pop
jle
das
jmp
inc
stos
lcall
jge
enter
mov
dec
or
cmp
subb
inc
int
movsb
dec
add
scas
js
sti
cltd
pop
or
adc
dec
cmp
push
mov
outsb
lret
mov
add
sub
into
into
xchg
aaa
addr16
and
rorl
lcall
and
pop
xlat
mov
pop
jl
cltd
icebp
xchg
cmp
in
inc
add
and
outsl
push
and
add
pop
push
cmp
leave
mov
nop/reserved
mov
mov
test
cmpsb
movsb
sub
cmp
lods
sbb
iret
rcrl
lds
imul
repnz
fstpl
dec
into
lods
cmpsb
jecxz
in
es
mov
dec
push
dec
or
and
jecxz
jmp
xchg
mov
in
cmc
and
test
sbb
das
pop
in
fs
fmuls
cld
mov
push
pop
adc
sti
cmpsb
das
push
add
ds
imull
mov
incb
int
pop
xor
ljmp
jmp
cmc
rol
adc
push
fsubp
mov
jo
shlb
aas
popa
pop
test
inc
imul
mov
push
scas
fs
mov
xor
inc
pop
enter
cld
and
mov
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
mov
cmpb
cli
jg
jle
clc
mov
push
neg
aas
ds
test
cwtl
cmp
xchg
mov
jnp
sub
mov
jb
xchg
push
mov
and
call
mov
jp
jno
xchg
push
lods
shlb
dec
xor
mov
dec
cmp
test
leave
int3
jle
imul
add
daa
jnp
jae
setnp
out
mov
nop
dec
rcl
add
push
imul
stos
xchg
icebp
pop
pop
mov
adc
je
adc
pop
adc
test
jmp
jnp
sbb
into
es
cmpsb
lock
pop
mov
sub
cmp
das
pop
jg
fmull
or
sti
mov
fistpll
xchg
push
adc
fwait
ja,pt
pop
sbbl
inc
aad
xor
xchg
scas
leave
ljmp
rcl
cli
ds
inc
jne
stc
jo
stos
xchg
and
popa
or
popf
popf
mov
popa
push
cmp
daa
cwtl
dec
jmp
jb
add
add
sbb
xor
jo
and
insl
lock
je
xchg
or
adcb
pop
scas
cs
mov
test
add
or
mov
dec
movsb
int3
sahf
shlb
mov
popa
mov
xchg
sar
cmp
mov
or
xor
dec
sbb
jmp
xchg
mov
push
jo
adc
dec
push
push
mov
js
jle
jg
jle
addr16
outsl
cmp
test
lock
test
dec
insb
test
mov
je
inc
ja
rclb
sbb
loop
mov
lods
sbb
fcomi
jmp
dec
inc
pop
push
mov
lods
xchg
decl
xchg
cmp
sub
pop
mov
and
std
push
sub
pop
mov
ret
cmpsb
daa
cmc
mov
popa
jbe
sbb
outsl
xchg
dec
loop
fs
jle
fnstsw
arpl
jge
xchg
stos
enter
inc
inc
fiaddl
jns
push
les
andb
lret
js
lcall
mov
rorb
lds
adc
mov
arpl
sbb
xchg
and
decb
mov
test
mov
inc
pop
adcl
sbbl
pushf
ret
sub
push
test
daa
fscale
imul
js
pushl
lret
xchg
cmc
stos
jmp
sahf
clc
inc
andl
fwait
popa
sar
cld
cmp
stc
mov
push
ficoms
out
push
ds
or
leave
mov
lock
dec
dec
fsubs
js
into
mov
clc
jp
mov
mov
leave
lcall
std
mov
inc
mov
adc
js
inc
cltd
popa
arpl
iret
hlt
scas
sub
inc
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
leave
and
jle
cli
jg
jle
inc
test
pop
lock
lret
imulb
adc
outsb
or
mov
pop
aaa
jne
adc
xchg
ljmp
fmuls
pop
loop
mov
int
sbb
and
lahf
arpl
jne
sbb
iret
inc
mov
movl
sbb
or
or
pop
test
lock
test
insl
pop
fisttpll
shll
movsl
mov
push
lock
call
push
dec
mov
stc
xor
mov
mov
mov
dec
pushf
mov
fildl
jno
xor
fwait
and
subl
sahf
idivl
fimuls
ds
in
adc
iret
call
ret
popa
movsb
jae
ret
and
fdivl
inc
or
lods
pop
push
sbb
insl
sbb
or
or
cmpsb
ret
mov
add
out
jbe
sbb
nop
pop
cmp
adc
mov
rcrb
xchg
sbb
xchg
ss
jae
lock
mov
lods
out
iret
sbb
inc
inc
jne
sbb
negb
fcmovnbe
inc
cmovno
jbe
sbb
dec
lcall
and
jecxz
cli
and
iret
cmpl
jg
out
int
mov
add
add
inc
aam
dec
clc
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
and
pop
jle
cli
jg
jle
das
cltd
nop
cmpsb
xchg
mov
ja
mov
cmp
les
movsb
mov
fstpt
cmpsb
rcll
push
loope
in
sub
ret
or
pop
pop
or
dec
pmulhw
lahf
push
xchg
inc
shlb
jnp
xor
cli
mov
jg
or
dec
mov
push
scas
mov
adc
fistpl
xor
sbb
aad
fbld
xchg
fadds
inc
test
pop
daa
outsb
in
xlat
into
xor
cltd
pop
xchg
dec
xchg
loope
in
lea
and
cmc
iret
adc
rcll
dec
xchg
ret
add
pop
sbb
inc
js
lds
lock
arpl
sub
ror
cmp
sbb
xor
pop
xchg
mov
mov
pusha
out
out
pop
dec
adc
inc
inc
jp
inc
icebp
dec
dec
push
jp
pop
adc
sahf
pop
sbb
pop
bnd
jg
outsl
pop
jp
jno
jnp
sbb
out
popf
jl
mov
adc
loop
leave
adc
movsb
sbb
test
iret
xchg
push
cmpb
ss
pop
imul
pop
mov
cs
add
cmp
int3
mov
xor
adc
stc
sahf
frstpm(287
or
cmp
pop
in
jmp
xchg
pushf
mov
cli
dec
and
mov
xchg
fwait
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
gs
mov
clc
add
pop
shll
bound
dec
test
aad
inc
push
dec
cmp
ljmp
push
daa
fdivl
xor
stc
fwait
xor
sbb
xchg
or
ds
ds
mov
mov
cld
fdivs
inc
jecxz
xor
and
dec
xor
mov
ja
daa
jnp
mov
adc
xor
imul
jmp
repz
and
and
fdivr
arpl
push
lods
lock
or
mov
rcll
mov
push
jmp
in
adc
nop
inc
scas
insb
rcrb
xorl
cmp
aad
lcall
inc
out
cmp
pushf
push
sub
out
scas
addr16
dec
outsb
mov
aad
fimuls
divb
test
aas
xchg
es
adc
push
arpl
adc
jno
sub
jne
push
cmp
jg
shrb
cltd
add
cmpsl
adc
test
fcoml
adc
jg
inc
cmpsb
cltd
xchg
cld
aad
or
call
fldl
scas
mov
repnz
test
and
ds
mov
inc
jp
ret
sbb
push
lds
fdivrs
lret
pop
insl
xchg
jmp
sbbl
cli
cmp
cwtl
shl
scas
xchg
push
mov
add
jmp
cmc
dec
and
jno
push
mov
push
fadd
dec
push
add
cli
jg
jle
mov
pop
xor
jnp
imul
adcl
call
call
popa
leave
repz
jnp
lea
fs
xchg
std
inc
push
push
addb
clc
adc
clc
mov
lods
inc
insb
add
addl
rolb
lods
mov
daa
add
dec
stos
pop
mov
add
out
imul
xchg
aam
mov
aam
test
mov
in
push
or
mov
out
rcl
pop
scas
xchg
in
add
mov
mov
enter
and
outsl
sub
jg
popf
push
movsb
mov
fstps
movl
das
pop
adc
fcmovu
bound
das
or
sub
sub
jl
insl
inc
dec
aam
aas
rolb
cmp
pop
cmp
mov
mov
sub
repz
fistl
dec
popa
jmp
loop
jle
inc
pusha
add
sub
add
xchg
push
cmpsl
xchg
push
mov
mov
dec
mov
inc
ud0
movsl
in
pop
and
mov
leave
dec
aaa
push
xlat
mov
xor
cmp
scas
or
sub
dec
pop
pushl
icebp
ret
xchg
mov
fldcw
mov
xchg
lahf
sub
cmp
rcr
lea
and
incl
xchg
and
in
filds
xchg
mov
outsb
filds
fists
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
mov
add
cli
jg
jle
jecxz
jae
adc
ficompl
xchg
inc
cmpsb
out
add
mov
sbb
push
movsb
inc
repnz
imul
cmp
test
xor
or
jae
stos
ficompl
xor
cwtl
inc
dec
dec
fwait
ljmp
pop
pop
cld
and
adc
mov
xchg
or
fists
paddusb
sbb
imul
popa
adc
inc
add
ljmp
enter
cwtl
or
in
hlt
mov
add
inc
dec
pop
mov
in
shrl
fmuls
push
lock
clc
inc
in
or
movsb
scas
sub
pop
sub
in
push
sbb
mov
ret
mov
lcall
das
pop
push
daa
xor
jno
cmp
cmp
std
imul
inc
xchg
jmp
cmpsl
mov
test
mov
pushf
mov
push
adc
cltd
mov
andb
in
xchg
aam
out
popf
stos
inc
les
mov
adc
mov
mov
sub
jb
jge
hlt
mov
arpl
repz
nop
mov
popa
fcmove
decb
pop
fwait
out
adc
mov
pop
addr16
add
sbb
icebp
mov
and
cmp
lds
loope
dec
push
lahf
xor
inc
js
lods
and
xor
add
adc
and
je
addb
push
int3
add
lds
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
xor
add
cli
jg
jle
xchg
jge
aam
fmulp
loope
outsb
push
in
daa
xchg
insl
fmulp
in
cmp
sub
inc
push
shrl
gs
add
je
fadds
pop
ljmp
outsb
mov
mov
pop
push
push
push
enter
dec
scas
pop
push
and
es
out
enter
mov
loopne
sahf
push
mov
fidivl
push
stos
adc
data16
mov
add
hlt
inc
test
xor
mov
popa
adc
movsl
movsl
and
push
data16
jne
ret
jecxz
cmp
sub
and
jo
orb
lds
xchg
fiadds
pop
imul
xor
cmp
shl
ss
test
scas
jp
lea
push
xchg
pushf
mov
cs
sub
dec
call
aad
out
cli
scas
push
sbb
xchg
mov
aaa
dec
dec
push
js
add
cmp
shll
push
sbb
mov
addr16
lret
out
mov
ljmp
lods
xchg
test
adc
std
mov
mov
jae
out
jnp
incb
loop
push
mov
fucom
mov
mov
mov
adc
pop
sub
movsl
test
in
pop
dec
in
dec
movsl
or
popa
iret
adc
sbb
fildll
add
imul
out
dec
loopne
fstpl
fwait
jb
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
mov
push
jle
cli
jg
jle
mov
or
sbbl
xor
xor
push
shrl
int3
mov
push
cld
cmp
ret
xchg
dec
add
fisttpl
jl
adc
mov
or
xchg
out
push
xlat
mov
cli
jl
jb
push
in
aam
dec
add
mov
pop
sti
fwait
stos
enter
pop
jno
push
bound
out
or
daa
popf
rcrl
mov
and
mov
mov
pop
and
push
inc
sub
pop
hlt
mov
in
xlat
popa
mov
rolb
mov
scas
push
arpl
into
sahf
sub
outsl
xchg
pop
adc
js
inc
and
cmp
ss
push
dec
movsl
cmp
mov
in
jmp
pop
add
jo
mov
scas
or
xchg
test
imul
push
jns
sub
leave
cld
fsubrs
sbb
xor
movsb
fdivrl
imul
cmp
inc
fs
cmp
clc
inc
movsb
sub
scas
enter
add
jmp
xor
push
jmp
push
out
fimuls
out
jns
cmovnp
and
stos
in
ret
xor
rcrb
or
inc
aas
pop
es
pop
or
push
sarb
xor
add
das
jl
loop
sti
gs
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
push
push
scas
aas
cs
jle
jg
jle
test
ljmp
cwtl
call
inc
stc
rorb
sbb
out
cmp
mov
pop
jno
int
xchg
decb
push
sar
mov
sbb
mov
jp
xlat
ljmp
bound
notl
xchg
sub
xor
lret
inc
int
aas
ja
jge
xlat
rclb
in
pop
mov
jmp
mov
sub
pop
jle
and
pop
popf
mov
out
out
jecxz
cmp
mov
lds
out
test
es
adc
inc
mov
repz
insb
loop
lds
mov
inc
lret
lods
loop
outsb
sbb
adc
push
shrb
cmpsl
dec
daa
mov
out
mov
popa
sarl
pop
clc
inc
mov
sub
dec
or
sbb
gs
mov
push
je
mov
cmc
jno
jecxz
aaa
push
orl
lahf
into
shl
out
arpl
fsubrl
mov
fistl
test
sbb
sbb
in
sub
dec
loopne
cld
cwtl
aaa
arpl
xor
idivl
push
in
or
jmp
movsb
mov
bound
fdiv
ret
adc
pop
jae
push
push
adc
decb
enter
xor
inc
addb
stos
mov
pop
jbe
mov
mov
adc
int
and
jno
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
xchg
stos
or
jle
insl
cmpsb
repnz
ret
cmp
xchg
pop
adc
mov
adc
sbb
lfs
cmp
xor
aaa
adc
lret
mov
inc
cld
sbb
dec
mov
sub
or
add
outsl
mov
test
jp
in
rorl
sub
or
bound
cwtl
scas
adc
mov
jns
xor
push
cli
call
push
test
add
xor
adc
lahf
mov
push
inc
gs
sub
fidivl
mov
and
cmpsb
scas
mov
out
stos
mov
sub
in
aam
lahf
fsubr
ljmp
lock
into
lock
data16
and
push
push
or
divl
mov
iret
pusha
add
fmulp
mov
cmp
sbbl
ja
sub
jns
sub
and
loop
out
je
xchg
andb
adc
add
xchg
fists
push
sbb
scas
into
xor
sub
inc
push
out
test
fidivrs
divl
cli
mov
sub
adc
inc
inc
popa
jmp
mov
pop
imul
ljmp
out
push
fs
adc
test
fists
inc
ss
cmp
addl
inc
mov
xlat
inc
pop
lahf
cltd
inc
aam
jno
mov
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
idivb
jle
cli
jg
jle
mov
outsb
mov
daa
cmp
lds
les
hlt
inc
in
div
insl
sub
xor
push
jo
xchg
mov
xchg
and
pop
int
lock
push
rep
push
inc
dec
mov
aas
jg
popa
sti
mov
add
and
sbb
fwait
popa
sub
dec
in
xorb
and
pop
xor
in
mov
pop
repnz
pushf
mov
and
out
mov
fmull
xorb
add
push
mov
aad
add
xchg
nop
sbb
int
testl
mov
stc
test
movb
not
mov
sbb
push
mov
xchg
jns
adc
aaa
adc
dec
sbb
imul
shl
mov
mov
lahf
ljmp
xchg
jmp
int3
inc
xchg
add
shll
ds
nop
decl
cs
dec
sti
xchg
test
mov
mov
filds
pushf
jle
cli
inc
jle
aad
xchg
xchg
jmp
int3
in
fwait
in
ror
lea
cmp
pusha
sub
jmp
mov
into
dec
adc
out
rorb
mov
sti
push
sub
and
sub
add
or
or
js
jge
push
pop
int3
pushf
pop
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
xor
mov
jle
cli
jg
jle
hlt
ret
mov
rorl
fstpl
mov
cmp
sbb
ret
test
adc
rcl
jle
inc
mov
push
scas
and
mov
cmp
jo
jecxz
loope
fldcw
jbe
cmc
or
sub
aaa
adc
lock
mov
popf
jno
jle
scas
cmc
aam
mov
sbb
mov
cli
fs
in
out
sbb
shll
push
push
insb
negl
icebp
call
jmp
int3
mov
shl
push
sarl
sbb
movhlps
jp
pop
or
test
pop
inc
xor
cmpsl
fimuls
jne
daa
bound
inc
adc
push
mov
fidivs
stos
jge
pop
xor
jae
mov
fwait
daa
dec
xchg
cmpsl
adcl
pop
fisubrs
outsl
adc
jmp
call
dec
mov
mov
xor
inc
loope
sti
movsb
mov
mov
push
sub
rcl
push
push
cs
sbb
scas
das
adc
ret
out
add
sub
popf
mov
into
cli
mov
les
pusha
daa
dec
lea
cld
bound
movsl
leave
repz
aaa
dec
andb
sbb
cmpsl
lcall
cwtl
repnz
js
inc
lds
pop
adc
sbb
inc
jns,pt
push
jae
xchg
inc
dec
dec
xchg
pop
in
loop
dec
dec
fbld
cmpsl
sti
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
lahf
pop
ds
jle
cli
jg
jle
out
data16
orb
test
movsl
mov
mov
inc
inc
movsb
push
int
js
mov
out
imul
scas
iret
ror
ud1
fidivrs
bound
sbb
mov
xchg
filds
and
mov
dec
sbb
push
mov
cli
add
clc
inc
lahf
jo
out
in
aad
mov
xchg
cld
std
push
push
mov
cld
sub
xchg
ja
adc
xchg
int3
inc
mov
cmp
imul
cmp
cmp
int
stos
adc
clc
test
inc
sub
and
out
pop
repnz
inc
xchg
xchg
lahf
mov
decb
ja
in
sub
add
fs
pop
inc
and
call
cli
int3
mov
es
dec
bound
dec
fwait
sub
lret
orb
pushf
in
arpl
fs
mov
pop
loopne
sub
out
jmp
in
or
adc
xchg
sbb
fsts
mov
arpl
sub
push
xor
subb
js
xchg
lret
mov
pop
sti
jmp
push
lds
mov
jns
movsl
push
xor
mov
xor
aad
push
cmc
pop
cs
lahf
jle
cwtl
and
fdivl
ljmp
push
pop
pop
nop
dec
pop
popa
cmp
mov
xchg
or
cmp
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
sar
sub
mov
jg
jle
sub
pop
ficompl
in
lcall
dec
mov
push
or
inc
rclb
mov
and
into
gs
out
inc
lret
in
imul
ja
shlb
icebp
in
loope
pusha
stos
xchg
xor
montmul
cmpsb
inc
repnz
push
pop
jge
pop
jae
push
leave
clc
adc
jne
aam
hlt
jns
std
imul
sub
xor
das
sbb
mov
les
cmp
adc
mov
xchg
fadd
cli
xor
mov
push
sbb
je
lds
outsl
lcall
push
nop
fists
add
in
mov
imul
call
add
or
inc
aad
leave
call
ja
shrl
push
das
test
subb
inc
and
cwtl
js
push
mov
push
sbb
movsb
pop
bound
cmp
mov
jns
rolb
xchg
dec
out
push
das
inc
xchg
test
cli
out
mov
stos
sbb
push
mov
mov
add
negl
shl
add
cmp
mov
push
push
push
enter
xchg
std
xchg
jl
jne
in
lret
sti
out
pop
jns
pop
sub
mov
fisttpl
xchg
scas
insb
mov
out
fs
js
adc
xorb
mov
adc
dec
cltd
adc
arpl
and
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
arpl
adc
jle
aaa
mov
push
push
mov
in
mov
stc
mov
mov
mov
push
out
add
loop
cmp
repnz
sub
pop
adc
inc
xchg
mov
mov
sti
cmp
mov
pop
mov
pop
push
jae
ror
pop
mov
enter
out
xchg
xchg
leave
aas
fdivs
leave
insb
data16
lahf
add
add
rol
add
push
inc
sub
inc
ljmp
inc
mov
add
lock
leave
add
stc
mov
xchg
or
jns
xchg
movsl
rorl
jne
xor
clc
loope
push
fcompl
scas
ror
es
sarl
repnz
movsb
jbe
cltd
mov
xchg
add
ja
in
es
sahf
dec
push
mov
push
fwait
xor
pop
dec
in
lahf
push
fnstsw
repnz
call
pop
push
aaa
mov
movb
sub
jge
jno
pop
sbb
pop
push
cltd
call
xor
std
mov
imul
enter
pop
dec
push
inc
addr16
pop
sbb
bound
mov
inc
xchg
aad
vphsubbw
xchg
ret
xchg
arpl
add
pop
test
fmull
xchg
add
fdivrp
mov
xchg
decb
jecxz
xor
xor
std
inc
shll
mov
in
mov
insl
mov
popa
and
pop
insb
push
cwtl
sahf
ja
and
ffree
or
clc
aad
dec
in
lcall
dec
out
pop
pop
push
xchg
lcall
and
sbb
jb
add
out
xor
mov
cmpsb
imul
cli
jne
xlat
into
ret
mov
pushf
cmp
cmpb
ret
in
ljmp
add
nop
jne
das
sahf
icebp
cmpsl
je
jnp
sbb
pop
std
push
add
scas
sbb
mov
mov
push
jl
jge
sub
mov
adc
lret
enter
ds
in
inc
jbe
subb
stos
cmp
insl
rol
call
fcompl
mov
out
cmp
mov
sub
add
loopne
cwtl
mov
pop
lret
dec
ficomps
rorl
sbb
and
add
popf
jo
addl
cs
in
cmp
adc
pop
leave
shlb
push
xor
cmpb
pop
aad
jge
neg
inc
sbb
xchg
dec
dec
outsb
lds
push
sub
jl
jge
dec
adc
jne
int3
pop
pop
movsl
dec
xchg
jb
or
int
mov
inc
les
test
inc
add
stos
ss
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
add
sbb
adc
pop
jl
jle
and
inc
mov
inc
jecxz
stos
subb
push
adc
sbb
nop
in
cld
or
add
and
push
cmp
call
cltd
testb
arpl
out
shrl
inc
subl
pusha
and
push
inc
fsubr
fldt
add
dec
dec
mov
dec
in
xchg
cmp
js
aad
push
ja
in
lret
sarl
lock
mov
mov
ds
hlt
daa
pop
icebp
pop
xor
test
nop
jbe
clc
pushf
ficomps
hlt
out
stos
int3
inc
inc
mov
fwait
or
sub
push
and
cmpsl
jns
lds
inc
push
xchg
stc
add
and
push
mov
insb
stc
jns
xchg
and
clc
adc
in
ds
cmpsl
dec
scas
bound
adc
adc
inc
fbstp
test
jns
and
mov
shlb
add
loope
mov
cmp
cli
ret
lock
push
inc
jnp
icebp
lcall
insl
mov
xlat
inc
jp
repnz
adc
cld
jo
sub
push
int3
adc
je
jno
lret
mov
mov
jbe
push
mov
orb
int
popf
cs
mov
xchg
int
test
les
inc
ds
push
aas
lret
cmp
mov
in
fisubrs
sarl
mov
xor
daa
cmp
out
addr16
test
adc
jmp
add
mov
mov
aas
mov
inc
insb
arpl
rol
mov
jbe
lret
js
inc
adc
inc
xchg
push
hlt
loopne
adc
fisttpl
test
ficoms
mov
prefetch
dec
xchg
jl
sbb
and
rolb
adc
push
xchg
pop
pop
imul
jl
int3
and
and
mov
out
and
and
loop
inc
test
xor
roll
or
push
imul
imul
ret
mov
ret
pop
or
pop
dec
or
das
push
test
int
xlat
pop
mov
mov
and
jge
jecxz
sti
add
lret
jl
scas
mov
orb
insl
negb
mov
dec
mov
in
dec
aad
popf
imul
mov
mov
je
xchg
ljmp
push
or
mov
cmpsb
cwtl
stos
fcmovnu
dec
ds
pushf
push
and
push
lahf
mov
mov
cmpsb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
dec
xlat
repz
jle
pop
jl
jle
inc
and
push
mov
insb
jle
push
pop
pusha
jne
lcall
sub
loop
outsl
mov
shlb
add
or
pop
pop
and
adc
and
inc
mov
ljmp
loope
lret
fisttps
xor
push
test
loope
dec
mov
add
lock
aam
ja
loopne
and
rorl
int
aam
icebp
xchg
repnz
aaa
push
add
je
loopne
push
sarl
outsb
sub
mov
out
and
mov
out
add
add
out
sub
test
sbbb
push
lods
iret
and
dec
cmp
icebp
ficoml
leave
movsl
xor
xchg
xor
inc
in
and
lea
divb
push
jmp
jg
rclb
insb
xchg
mov
push
dec
sti
mov
mov
cmp
testl
lahf
or
dec
daa
loop
lock
sbb
jae
jge
xor
pushf
jmp
sub
adcl
idivl
mov
push
cli
loope
inc
inc
inc
popf
or
mov
pop
push
ds
les
rorb
ja
aaa
das
pushf
push
fildl
sub
push
neg
xor
movsl
inc
jnp
sbb
jle
stos
jno
enter
testl
js
divps
jg
push
mov
sub
cmp
jb
orl
gs
inc
xor
xlat
push
mov
ljmp
into
ja
je
cmp
push
movsl
push
and
sbbl
mov
push
mov
cmp
out
mov
imul
add
shlb
sbb
mov
fisttpl
ret
lds
or
inc
bound
xor
fsubl
test
hlt
push
pushf
arpl
push
scas
jae
nop
ja
mov
and
fisubl
adc
in
jge
outsb
loopne
in
mov
push
mov
sub
xchg
push
jecxz
push
mov
push
xchg
dec
cli
rcll
lods
adc
sbb
loope
lock
mov
sbbb
inc
out
push
out
ja
mov
out
xchg
jge
push
dec
pop
xchg
or
jbe
outsb
repz
ss
xchg
das
push
jbe
call
in
jb
out
std
sub
in
dec
arpl
or
das
push
mov
loopne
pop
aam
cmpsl
or
imul
test
insb
call
lahf
mov
xor
movsl
sbb
cmpsb
push
push
ds
ja
out
in
xlat
repz
adc
stos
pop
mov
jbe
leave
mov
hlt
jp
mov
adc
or
pop
jl
xchg
inc
cmp
aad
jns
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
cmp
je
jle
pop
jl
jle
inc
ret
inc
jmp
add
cld
cmp
lods
lret
sub
in
lea
shlb
fwait
cmp
and
xchg
mov
roll
cmpsb
xor
cmp
repnz
push
stc
mov
out
sahf
pushf
popa
or
fstps
or
jnp
sub
add
movsb
bound
cmp
mov
test
mov
xor
pusha
cmc
cltd
jmp
mov
filds
add
incl
dec
push
sub
fmuls
push
mov
push
outsb
dec
push
ret
pop
push
adc
gs
or
sub
inc
cmpsl
add
xchg
daa
int3
mov
ficoml
mov
mov
pop
xchg
cli
dec
adc
pusha
jg
mov
adc
xor
lods
adc
js
mov
lcall
mov
ss
mov
inc
test
stos
hlt
cmpsl
add
int
stos
mov
jb
out
inc
in
out
leave
aas
shlb
arpl
sub
outsb
mov
cmp
mov
mov
adc
xchg
sbb
add
movb
sbb
push
dec
ja
cmpsl
jecxz
pop
cwtl
out
inc
ljmp
enter
fwait
xchg
arpl
pop
jns,pn
xchg
ljmp
mov
cmp
loop
lcall
mov
xchg
and
mov
adc
fs
in
cmpsb
xchg
sub
aas
rcl
vpminsw
cmp
jmp
xchg
es
jmp
addr16
adc
dec
adc
es
xlat
jno
sbb
icebp
in
and
lcall
mov
addl
sbb
icebp
sarb
sahf
mov
xchg
mov
addl
in
nop
push
and
or
dec
ficompl
lods
insl
cmp
sarl
fisubrl
rcrl
ficompl
ror
aaa
lea
into
outsl
or
adc
shrl
mov
aaa
xchg
inc
fisttps
stc
xchg
adc
std
sarl
pop
aad
rorb
push
push
test
mov
xor
cmpsl
mov
fadds
dec
add
test
subb
out
jb
cld
and
mov
xor
sub
movsl
inc
cmp
sbb
jecxz
js
jne
ja
pop
cmp
lret
and
push
push
dec
icebp
mov
sti
and
mov
pop
xor
leave
cmpl
mov
mov
add
fwait
mov
repnz
int
adc
loopne
fiadds
mov
xor
pop
cmp
les
clc
jmp
add
dec
popa
jno
jne
xor
jle
fisttpl
mov
sbb
pop
jl
jle
sub
cwtl
xchg
adc
cmp
inc
test
mov
outsl
inc
pop
js
and
out
pop
inc
cld
push
or
insb
pop
jmp
and
pusha
mov
ret
dec
in
jo
cmp
iret
lcall
ret
inc
leave
arpl
std
adc
cltd
add
testb
dec
mov
int3
call
fisttps
ja
stos
ja
ljmp
push
outsl
sub
add
push
and
insb
gs
test
pop
fcompl
push
enter
mov
cmp
and
out
mov
data16
mov
ss
clc
rcl
dec
daa
lcall
clc
out
inc
rcll
lret
rol
js
imul
pop
cmp
fs
gs
push
outsl
add
add
sar
in
jp
inc
pop
test
aam
dec
lock
mov
inc
stc
and
daa
subb
adc
inc
dec
aam
sub
sub
xor
cli
xlat
bound
and
inc
ss
jl
xor
mov
jg
shrb
sub
inc
push
mov
ss
add
cmp
xor
nop
popf
test
rorl
mov
add
xchg
push
call
je
pop
dec
sti
dec
mov
push
imulb
jae
incl
add
sarl
xchg
outsb
inc
jno
pop
lret
add
jle
push
cwtl
or
or
lds
imul
xchg
jmp
jle
xor
stos
ljmp
sbb
out
out
insb
xor
sub
inc
jecxz
ficomps
popf
das
scas
push
test
out
dec
or
fs
jge
sbb
push
dec
ret
sbb
mov
sbb
jg
mov
sbb
jg
xchg
mov
jmp
add
jl
ret
repz
pop
inc
xor
sbb
jecxz
adc
mov
mov
pop
insl
mov
popf
xor
insb
inc
mov
and
movsl
xlat
aam
push
test
push
pop
jns
rolb
mov
outsb
shrb
mov
mov
sbb
xchg
imul
mov
stos
xchg
xchg
dec
add
nop
lea
lcall
dec
jge
add
sub
dec
inc
insb
jecxz
hlt
js
in
aas
test
and
sahf
or
mov
loopne
repz
mov
mov
shl
repz
lret
insl
push
sub
loopne
xor
ds
stos
mov
iret
pop
jo
fdivs
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
jmp
repnz
pop
jl
jle
mov
inc
adc
dec
jo
mov
push
cmp
mov
ja
cmpl
int3
cmc
jno
dec
repnz
ljmp
mov
mov
push
lret
lahf
xor
clc
pop
xchg
pop
sbb
mov
mov
enter
dec
pop
fucomp
adc
fistl
inc
outsl
ror
jns
hlt
or
or
fidivrl
mov
jl
pusha
xchg
add
jp
jle
shl
js,pn
pop
dec
ds
hlt
mov
mov
push
xor
and
inc
aad
add
int
enter
jecxz
mov
ficompl
jmp
xor
insl
inc
fwait
sub
sub
cmpsl
insb
inc
ret
fildl
cltd
xor
and
dec
sub
lods
jge
cmpl
dec
loop
in
push
test
insl
test
fdivs
jb
pop
scas
test
mov
in
sbb
inc
xchg
adc
out
stos
js
in
mov
mov
cmp
jle
pusha
pushf
and
mov
pop
pop
fsqrt
mov
mov
jle
lods
push
pop
cmp
jecxz
pop
xchg
les
mov
add
and
or
js
ret
aas
inc
push
repnz
inc
out
mov
int
mov
divl
xlat
ret
or
data16
inc
sbb
aad
sahf
push
in
lret
pop
jg
rcrb
fwait
cmp
mov
lahf
leave
xor
insl
repnz
test
xchg
popf
shll
jb
xor
scas
adc
das
push
into
test
push
out
repz
jne
mov
mov
sub
es
xchg
into
hlt
cli
inc
mov
out
pop
imul
inc
sbb
push
mov
or
pop
rol
cmpsb
jnp
push
popf
cmpsl
sti
xchg
stos
sbb
popf
in
cmpsb
xchg
dec
popf
xor
in
xor
jnp
jmp
les
inc
sub
sahf
and
mov
pop
nop
push
sbb
cmc
aam
aad
shrl
or
imul
adc
xchg
sbb
push
xchg
xchg
push
insl
jnp
mov
and
and
push
stos
pop
lret
mov
xchg
jnp
inc
je
ret
mov
xchg
jecxz
cmp
push
mov
fwait
mov
mov
or
in
in
jl
and
push
adc
sbbl
sbb
ror
jbe
pop
pusha
and
adc
mov
orl
pop
mov
mov
mov
pop
ficoml
or
mov
mov
out
xor
xor
addb
int3
inc
out
ret
lds
arpl
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
scas
inc
mov
jl
jle
xor
sub
mov
mov
pop
imul
out
adc
lret
and
cmc
movsl
nop
mov
fcompl
xchg
or
mov
mov
outsb
jb
roll
jae
divb
mov
outsb
pusha
xor
loope
cmpsl
pop
mov
sti
divl
das
fs
filds
popa
in
fs
loopne
lahf
mov
loopne
pop
mov
inc
mov
gs
jecxz
arpl
and
repnz
stos
ss
inc
into
push
int
sub
ja
sub
repz
cli
std
sub
jno
pop
ret
xor
adc
dec
mov
add
mov
out
popa
or
addr16
adc
xor
pop
jl
rorl
cmp
icebp
push
scas
mov
mov
mov
shll
int3
push
clc
arpl
pop
loop
sub
or
ret
jns
xchg
ret
out
and
pop
dec
xor
scas
cmp
sub
xorb
popa
push
and
ss
jb
xchg
cmp
out
dec
adc
dec
loopne
fnstsw
fsubp
rsm
mov
mov
in
mov
mov
push
imul
cmp
addps
sub
call
outsl
mov
imul
sbb
mov
jmp
mov
mov
imul
dec
sbb
xchg
xchg
int3
imul
gs
mov
gs
outsl
sbb
xor
jle
cmp
or
lret
adc
in
cwtl
xchg
cmp
xchg
into
cmp
lea
out
cmc
lds
enter
cld
sub
es
xchg
push
mov
pop
loope
mov
push
inc
subb
movsb
cmp
mov
iret
mov
fdivrs
and
jg
inc
xor
arpl
fstpt
add
mov
leave
mov
rcrb
xchg
cmp
push
pop
and
jle
repz
jl
inc
jge
and
xorb
addr16
mov
popf
lret
fsubrp
dec
cmp
pop
dec
fists
jg
push
mov
mov
bound
mov
mov
adc
and
iret
sahf
jg
scas
jl
mov
or
outsl
or
adc
fiaddl
adc
lahf
mov
pop
das
adc
push
icebp
and
xor
shlb
xor
mov
jecxz
sbb
or
ret
sbb
dec
sbb
push
les
fs
divl
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
mov
pushf
mov
jle
pop
jl
jle
sub
cmp
inc
lcall
cmp
ljmp
mov
rol
fcmovb
inc
ret
mov
pop
lea
sub
add
js
loopne
mov
jo
mov
imul
inc
addb
mov
vpsrld
mull
aaa
pusha
sub
insl
pop
mov
add
cltd
cs
sbb
imul
adc
fldl
popa
mov
outsb
loop
outsl
lods
stc
add
inc
daa
jns
jo
add
aaa
scas
and
pop
je
lret
out
cmp
push
sbb
cltd
movhlps
push
je
inc
adc
and
stos
pop
adc
fdivl
bound
dec
cmp
test
xor
nop
cmp
pop
cmp
lods
enter
or
into
test
addr16
pop
mov
pop
and
addl
adc
jne
ficomps
xchg
mov
push
sbb
mov
imull
out
mov
enter
xor
sahf
mov
imul
leave
bnd
imul
mov
lea
sti
cmp
in
xor
jmp
movsl
ss
sub
dec
cltd
pop
or
addl
mov
xor
lret
daa
imul
mov
js
cli
or
outsl
leave
jae
sbb
cmp
xor
addr16
push
fidivrs
jg,pt
sub
fs
cmc
loopne
inc
jns
lock
adc
mov
push
xchg
push
cmp
pop
addr16
jp
cmpsl
cli
jmp
inc
inc
loope
xor
leave
out
inc
push
mov
out
cltd
pushf
lds
fsubs
scas
mov
cmp
add
mov
leave
inc
into
sbb
loop
movl
ljmpw
jp
mov
inc
push
out
popf
jno
decb
into
mov
cmp
movsb
dec
out
jecxz
stos
mov
cmp
and
or
pop
sbb
stos
leave
jl
in
and
mov
test
nop
imul
out
cli
xor
pusha
lahf
in
mul
in
scas
mov
ljmp
popf
cmpb
addr16
test
les
mov
pop
push
int3
call
ljmp
mov
scas
mov
adc
lea
xchg
mov
cli
daa
outsb
and
xchg
or
sub
pop
addr16
xchg
mov
and
cmp
xchg
mov
das
jnp
jmp
insb
mov
loopne
push
mov
mov
pop
orb
xchg
filds
fdivrs
les
mov
popa
xor
insb
and
mov
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
insl
sub
jle
jl
jle
mov
stos
fbld
int
mov
push
mov
jl
add
jg
xorb
push
mov
jecxz
int3
addr16
sarb
int3
cmp
push
cmpsl
add
mov
les
pop
jo
pop
lock
inc
shlb
shl
shrb
pop
inc
movsb
xchg
push
jo
popf
leave
sbb
insb
and
enter
pop
cmp
shlb
or
jb
rorl
in
aam
fwait
pop
inc
imul
sub
paddusw
cld
jg
pop
and
adc
or
es
std
fdivs
ja
sbb
and
insl
lahf
test
mov
imul
pop
push
mov
mov
adc
adc
dec
push
xlat
push
in
or
mov
out
sub
sti
mov
and
adc
fsts
pusha
ljmp
fwait
inc
je
outsb
push
nop
out
adc
imul
call
int
jl
inc
idivl
jecxz
and
js
popf
aaa
scas
pop
inc
mov
sbb
mov
push
push
stos
dec
hlt
mov
pop
adc
rorl
sbb
xchg
sub
lret
mov
hlt
ss
out
adc
xor
sbb
jmp
hlt
pop
das
sub
shll
push
and
in
inc
jp
dec
cmc
mov
xchg
popf
cmp
mov
fimuls
or
cmp
add
inc
mov
jg
movsl
cmp
rorb
xchg
mov
lods
cmpsb
pusha
add
clc
sbb
dec
loope
orb
jne
sarb
add
and
push
pop
add
aam
pop
or
popf
inc
lret
xorb
sub
out
dec
les
lcall
push
mov
mov
addb
mov
sbbl
pop
arpl
imul
loope
or
add
push
fsqrt
aas
arpl
inc
bound
push
rolb
repnz
mov
mov
pop
pop
shll
push
scas
incb
inc
out
lods
ss
inc
mull
rolb
sub
cmpsl
xchg
add
dec
xchg
jnp
push
sbb
mov
push
leave
outsl
sti
je
dec
xchg
sub
sbb
mov
xchg
pop
mov
fildl
xchg
out
cmp
inc
loope
mov
movsl
repnz
pop
and
out
cmovp
mov
pop
sbb
aas
pop
out
lcall
data16
xchg
pop
clc
inc
icebp
fwait
inc
enter
fcomp
pop
dec
inc
cltd
iret
and
cli
out
imul
arpl
sub
out
pop
sub
pop
cmp
push
mov
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
lea
pop
jl
jle
sub
push
enter
lahf
test
lods
test
hlt
adc
sbb
aad
sbb
in
ret
in
dec
aad
in
cmp
mov
and
cltd
add
cmpsl
rolb
xchg
xor
mov
aaa
mov
mov
lock
sub
xor
pop
mov
xor
mov
addr16
xor
push
mov
push
loop
inc
xchg
add
cmp
rcll
leave
cmc
roll
aaa
adc
mov
insb
push
add
inc
mov
call
push
outsb
gs
dec
xor
dec
inc
ret
pop
mov
jecxz
inc
xchg
push
jl
repnz
lock
add
dec
sti
adc
std
iret
movsb
outsb
sub
lahf
jl
sbb
pop
fwait
clc
aad
inc
xchg
mov
add
mov
inc
data16
push
push
imul
jbe
sub
inc
int
fisubl
xchg
pop
adc
mov
lret
stc
sub
xor
pop
or
xorl
inc
jle
flds
push
bound
out
insl
in
dec
xchg
icebp
pop
mov
popf
pop
push
fistps
popa
or
or
cld
sub
ret
ja
out
sub
xor
int3
xchg
negl
xor
out
shll
xchg
in
cmpsb
pop
test
push
movl
mov
sub
inc
jmp
and
out
lret
inc
ljmp
sti
sbb
xchg
jb
nop
insl
add
mov
push
add
rclb
into
dec
ret
push
cld
and
insl
add
jae
jae
call
lahf
pop
mov
dec
xchg
sub
jg
jle
aaa
dec
es
loopne
call
mov
test
adc
jnp
dec
rol
or
push
call
add
pusha
lea
arpl
mov
scas
dec
xor
daa
xchg
pop
sub
popa
out
lret
lods
cmp
sbb
mov
test
push
pop
inc
mov
aam
dec
fldcw
leave
add
jp
testb
test
ret
leave
or
jl
xchg
sub
iret
fwait
jo
jl
mov
cmpl
lahf
insl
lds
sbb
jle
push
clc
jmp
mov
xchg
pushf
inc
cld
push
loope
dec
cs
fistps
popf
jecxz
mov
inc
subb
mov
loopne
pushf
dec
inc
pop
sbb
loope
jle
jns
dec
inc
mov
jns
insl
out
loopne
adc
das
hlt
xchg
cmp
adc
push
ret
adc
aad
shlb
adc
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
cmc
out
xor
sub
jle
jns
xchg
arpl
xor
stos
cmp
sub
push
sahf
out
popa
data16
stc
repnz
xchg
jecxz
loop
into
insb
adc
ss
add
mov
fistpl
mov
ss
add
fstl
inc
xor
xchg
pop
jnp
loope
movsb
pop
pushf
pop
xchg
xchg
hlt
xchg
mov
fwait
sbb
cmp
cmp
xchg
mov
cmpsl
arpl
sub
clc
in
add
movsb
movsb
push
fwait
rorl
movsb
mov
xor
lods
inc
fisubs
sbb
jg
mov
xchg
insb
cmp
je
fldl2t
leave
dec
xchg
arpl
arpl
add
xchg
mov
mov
sbb
cmpsb
mov
xchg
jnp
sbb
in
pop
hlt
xchg
jl
push
mov
pop
push
or
add
push
inc
xor
jg
xor
xchg
pushl
dec
xchg
or
dec
movsl
daa
pop
in
pop
mov
in
pop
popa
push
inc
add
add
jnp
pop
rolb
leave
outsb
xchg
or
adc
sub
scas
das
xlat
int
leave
repnz
inc
test
xchg
out
out
push
mov
fcompl
mov
in
aad
mov
sbb
outsl
movsb
hlt
inc
loop
cmp
mov
pusha
mov
add
pusha
mov
sarl
push
xchg
mov
mov
out
and
fsubl
or
into
add
adc
mov
movsl
je
rcll
imul
pop
jge
push
aas
cmp
frstor
fadds
insl
mov
or
rcr
xchg
mov
and
lds
les
xchg
ljmp
cmp
lods
mov
pop
sub
sbb
or
in
test
ret
mov
cmp
xchg
out
stos
or
repnz
and
jbe
out
mov
fisttpll
orl
sub
push
pop
out
lret
shlb
jnp
xchg
rolb
inc
jnp
and
insb
leave
cli
outsl
mov
cmp
inc
aaa
push
add
inc
sub
iret
lds
mov
push
lods
insl
sbb
sbb
sti
daa
xchg
adcl
xor
in
repz
xor
or
ds
dec
out
sti
dec
rorl
std
dec
outsb
xor
pop
mov
and
sti
les
sub
sbbb
mov
add
jb
popf
aaa
in
cld
pop
lret
fidivrl
mov
adc
add
or
push
sahf
adc
jo
cmc
or
sbb
in
xchg
jo
sub
lea
cmpl
in
pop
cmp
outsl
mov
push
and
cmpsl
push
adc
adc
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
fisubrl
push
and
movsl
fidivl
mov
or
mov
in
dec
notl
roll
stos
cmp
push
add
testb
sahf
mov
xchg
leave
jmp
bswap
push
jmp
je
pop
dec
sub
ja
cwtl
add
jp
aas
mov
xchg
adc
lods
lcall
lret
and
mov
mov
ja
ljmp
push
int3
sub
jp
enter
dec
add
mov
cmp
adc
addr16
aam
jge
push
rclb
and
cmp
pop
icebp
mov
je
adc
xchg
mov
outsl
cs
pop
out
call
jne
pop
and
lret
lret
mov
hlt
and
pop
in
cli
pop
pop
dec
int
push
insl
sbb
xchg
pop
jecxz
cld
and
cmp
dec
bnd
enter
adc
push
xor
sbb
scas
out
clc
cmpsb
fstpl
mov
mov
mov
jb
lods
sbb
sub
mov
adc
and
or
mov
insl
lods
in
add
cli
add
pushf
loop
aas
mov
sbb
adc
in
lea
xchg
repz
jl
popa
in
shll
jle
and
lods
sub
adcl
xchg
cld
jo
fcmovu
cmpsl
mov
lock
pop
or
into
sbb
rorb
jmp
sbb
xor
sbb
faddl
pushf
mov
pop
lock
shrb
imul
dec
inc
xchg
mov
rolw
jmp
xchg
sbbb
ffreep
jmp
add
sbb
jge
cmp
sbb
in
or
pop
decl
pop
inc
add
mov
cmp
mov
aam
in
mov
loopne
stos
imul
push
in
stos
push
cmp
hlt
in
xchg
dec
sub
xor
dec
jbe
cmpsb
ficoml
sub
mov
jecxz
xor
xchg
rcrl
flds
and
je
mov
call
pop
mov
pop
pop
fisttpl
dec
call
add
mov
jl
jl
rcrb
je
mov
pop
leave
int3
jmp
negl
fmull
push
sub
pop
mov
fnstenv
inc
gs
loope
loop
push
loop
gs
cmp
sbbl
or
add
lods
fsubs
test
popa
mov
mov
mov
mov
cwtl
loope
lods
mov
mov
int
sbb
dec
jbe
lcall
fisubl
pop
notb
mov
inc
out
and
and
sbb
cmp
push
inc
push
and
out
xor
int3
xor
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
lahf
mov
hlt
inc
loop
sbb
adc
xchg
repz
or
call
daa
jae
adc
stc
jle
inc
add
shlb
addb
stos
fidivrs
mov
mov
mov
ret
test
sti
pop
or
add
mov
icebp
testl
inc
pop
insl
xchg
mov
xchg
mov
cld
sahf
mov
cmp
sub
in
lock
adc
adc
jbe
mov
out
scas
push
add
sub
xchg
movsb
sub
jg
cmp
or
stos
inc
popa
clc
xchg
push
hlt
xor
pop
je
mov
aaa
push
mov
sbb
sub
xchg
push
scas
jge
ds
rcll
repnz
inc
insl
scas
in
imul
dec
adc
add
jmp
stos
cmp
adc
inc
mov
out
ljmp
sbb
mov
mov
push
push
dec
pop
push
lods
sub
out
daa
sbb
and
mov
into
xchg
mov
mov
mov
out
pop
das
push
mov
push
mov
popf
lods
and
jp
cmp
stos
add
rorl
and
adc
jns
mov
dec
dec
xor
insl
dec
mov
jecxz
dec
bound
mov
test
or
xor
or
ja
pop
sub
hlt
and
push
xlat
scas
je
cld
mov
test
or
mov
movsb
dec
xor
out
mov
sub
popf
jg
stc
dec
or
mov
outsb
adc
adc
push
adc
out
push
cmpsl
sti
scas
mov
jp
push
and
sbb
mov
and
inc
sub
inc
fwait
stc
insl
lcall
push
scas
jmp
and
movb
dec
lcall
loope
stos
mov
pop
cmc
bswap
mov
lcall
jmp
imul
dec
sbb
cld
pop
je
clc
xchg
lods
dec
stos
scas
lds
jo
icebp
sub
sub
lea
xchg
cmpsb
loop
cmpsb
sbbl
adcl
adc
jle
insb
mov
cwtl
enter
adc
je
lret
pop
xor
imul
or
mov
mov
dec
fildl
rclb
mov
aas
jl
shll
popa
movsb
gs
bound
xor
jl
jno
sbb
stos
lahf
lret
ss
mov
sbb
fwait
jnp
mov
lods
sbb
dec
sbb
cmp
cmp
push
cmc
loopne
ror
pop
fcmovnbe
push
mov
pop
mov
sbb
add
jl
test
xor
xorb
call
je
dec
shr
jo
cmp
cli
sub
sub
stos
cli
jmp
push
adc
xor
push
out
cld
ja
inc
xor
pop
outsl
jns
mov
bnd
sub
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
cmpsl
inc
lahf
pop
push
aas
jle
sub
jle
clc
adc
fwait
popa
jp
dec
xchg
adc
sbb
push
xor
cmp
int3
pop
jno
outsl
xchg
adc
push
test
push
push
icebp
fwait
shl
je
pushf
or
sbb
add
jg
popa
add
cmp
scas
movb
loop
jnp
xchg
mov
pop
imul
mov
ret
dec
add
test
icebp
mov
sbb
pop
mov
das
out
int3
imul
lcall
pusha
mov
jecxz
into
sub
adc
add
mov
xor
mov
cmc
pop
cli
fwait
inc
fstpl
push
mov
jge
in
mov
repz
push
stos
jb
mov
or
iret
cmpsb
data16
shl
xor
inc
js
xor
inc
mov
adc
fiadds
pop
sti
inc
push
iret
or
clc
mov
and
adc
sub
mov
lahf
repz
into
inc
dec
mov
jns
stos
fidivrl
pusha
or
das
push
fldenv
inc
pop
inc
add
jae
orb
pusha
shll
movsb
or
pop
cmp
pop
pop
call
mov
out
call
movsl
lds
mov
add
icebp
jo
mov
adc
test
mov
xchg
xchg
stc
dec
call
pushf
dec
jg
mov
push
ja
add
cmc
jp
dec
scas
xor
cs
dec
sub
pop
enter
xchg
stc
or
cltd
sub
popa
push
into
outsl
loopne
out
push
or
xlat
xchg
inc
loope
fisttpll
pop
or
rorl
xchg
sbb
lret
inc
rorb
cltd
imul
and
das
das
adc
movl
pushf
jle
in
pusha
pop
adc
aaa
jbe
xlat
in
lods
enter
xchg
mov
pop
fstpt
movsl
adc
into
push
clc
jbe
or
push
out
addr16
xor
inc
and
int3
lock
pop
add
pop
mov
ss
in
cmc
cmp
mov
and
lret
mov
sahf
jl
jl
cltd
inc
mov
sub
adc
adc
push
popa
xchg
xor
sub
icebp
testb
add
les
mov
adc
sub
imul
or
insl
xor
push
xor
sbb
mov
ja
out
adc
addb
andb
andl
inc
das
sbb
orl
out
add
lods
shl
shll
cwtl
xchg
shlb
in
push
call
fcmovu
insb
jmp
jbe
mov
and
fs
and
bound
xchg
in
push
mov
sub
enter
lock
je
dec
sbb
cmp
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
mov
mov
adc
adc
mov
xchg
add
xchg
stos
push
into
out
pop
out
mov
bound
scas
in
ljmp
add
and
ret
sub
data16
xchg
decl
rolb
idivl
das
fwait
lods
push
add
xchg
cs
ljmp
mov
mov
xchg
call
test
sbb
pop
repz
dec
xor
cmp
movsb
out
xor
hlt
jp
imul
or
out
jecxz
in
in
sbb
jecxz
jp
gs
dec
fbld
pushf
pop
aas
add
add
js
das
fcmovne
sbbl
fildll
lods
int3
insb
sbb
daa
addb
mov
jae
stos
sbb
jmp
paddq
ja
insl
cmpsl
test
mov
rorl
inc
mov
lods
dec
movsb
add
roll
arpl
and
lods
inc
sbb
ret
test
inc
mov
cmp
fbstp
pop
pop
push
pop
xchg
cmp
nop
insb
jmp
fdivrs
mov
dec
imul
pop
cmpl
lods
in
sub
or
pop
ret
sbb
shl
loope
cli
pusha
subb
das
aad
mov
popa
dec
inc
add
fsubs
lds
lods
mov
mov
lds
in
mov
dec
pop
xchg
and
jmp
and
mov
dec
dec
jecxz
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
jbe
xor
jle
mov
aad
mov
cmp
dec
pop
fld
int3
sbb
inc
sbb
dec
mov
pop
dec
mov
inc
lds
push
sub
cmc
iret
popl
loopw
pop
jnp
mov
mov
cmp
in
xchg
divl
pop
es
inc
sub
lock
gs
or
mov
rcrl
loopne
movsb
lods
sbb
mov
adc
push
sub
push
push
mov
icebp
scas
addr16
jno
stc
in
mov
es
into
or
loop
push
lret
ja
movsl
cmp
jg
xor
icebp
lret
cmpsl
push
cld
adc
or
cmp
aaa
mov
test
enter
lods
jecxz
movsl
jae
sub
jge
ret
dec
jbe
xor
mov
sub
shrb
mov
inc
pusha
push
mov
pop
xor
jmp
je
outsb
mov
cs
testb
flds
cmovno
lret
int
aad
add
add
faddl
fimull
sbb
cmpsb
fstps
sub
shrl
push
xchg
cmp
xor
push
mov
ds
xchg
stc
clc
aas
aas
dec
mov
pop
adc
mov
cmpsl
adc
pop
push
fsts
sub
aam
ja
and
pusha
test
adc
ret
and
xchg
insb
dec
sti
cld
ret
or
push
repnz
leave
lcall
mov
inc
jbe
sub
add
lods
test
jae
lcall
xchg
lods
add
dec
out
push
xchg
cmp
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
fbstp
lock
out
loopne
ljmp
mov
dec
sbb
push
stos
add
mov
jecxz
out
xacquire
enter
addl
aad
sub
loopne
mov
nop
or
clc
push
jge
bound
leave
call
mov
adc
adc
loope
xchg
mov
jle
and
pop
jae
inc
shrl
inc
loope
out
data16
ja
mov
pop
sbb
lcall
xchg
push
int3
push
das
dec
cmp
lret
rol
sub
xchg
cwtl
xchg
pop
in
pop
mov
mov
sahf
flds
mov
xor
aam
cmp
rorl
roll
mov
push
sbb
mov
xchg
nop
cltd
popf
stc
mov
in
jns
in
aad
iret
pop
add
sbb
bound
pop
pop
mov
sahf
icebp
dec
not
add
stos
jge
jl
fnstcw
add
dec
push
mov
lahf
inc
sbb
adc
mov
pop
pop
movsl
icebp
mov
into
ds
subb
sbb
ret
push
in
xlat
dec
xchg
ds
pop
xor
pop
adc
inc
or
cmpsb
xorb
hlt
mov
hlt
sub
das
inc
mov
scas
mov
leave
mov
fisttps
stos
in
shl
jmp
or
fstpl
mov
out
and
in
adc
sub
cwtl
pop
enter
scas
mov
jge
xchg
sub
loope
push
cmpsb
cmpsb
dec
ss
hlt
push
xor
loopne
jne
call
test
jmp
and
in
popa
push
lret
xchg
push
sub
les
mov
lds
gs
mov
fdiv
xchg
decl
shrb
fadds
cmpsl
mov
cmp
loopne
cli
pop
int
sahf
mov
sub
cltd
das
addl
cmp
xor
lods
xchg
fwait
jns
dec
pusha
mov
xchg
mov
pop
or
lea
enter
xor
popa
or
mov
clc
movsl
push
cmpsb
sub
mov
popa
pop
in
addr16
xchg
cli
cs
push
enter
loopne
jl
lods
int
xchg
movsb
ja
outsl
pop
cmp
scas
mov
nop
fcoml
cmpsl
rorl
mov
aas
dec
stos
mov
or
fstpl
inc
test
movsl
adc
push
inc
lods
pop
and
insb
loop
jbe
lds
jns
dec
addr16
cmp
adc
add
lcall
cmp
lods
sarb
sub
add
xor
loope
sub
mov
fdivrs
lods
mov
push
pop
or
and
in
mov
jno
sbb
cwtl
push
sti
mov
or
loopne
mov
jle
cld
test
dec
xor
xchg
jp
and
cmpl
mov
xchg
std
dec
jle
in
inc
loop
ret
xchg
push
mov
repz
add
adcb
aaa
and
jmp
cmp
xor
adc
cmp
ljmp
sbb
lods
push
pop
into
cmp
pusha
lret
nop
out
add
inc
cs
ja
sub
movsl
ss
cmc
cmpsl
movsb
push
movsl
push
stc
lods
push
mov
jge
push
pop
clc
pushf
jmp
popa
adc
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
imul
add
jp
cmpsl
pop
lods
mov
insl
adc
xchg
test
out
jle
mov
inc
test
adc
pushf
call
lahf
loop
out
or
faddl
push
xor
lahf
jae
xchg
sbb
cwtl
mov
inc
jl
cmp
fwait
push
in
das
push
shlb
outsb
xor
stc
nop
jae
lds
lret
movsb
xchg
sub
mov
push
outsb
cmp
pop
cmpsb
call
xor
stc
or
inc
push
xor
or
in
push
fstpt
test
sbb
popa
add
inc
rorl
or
daa
ja
push
inc
outsl
pop
pushf
push
cmpsl
mov
scas
ret
adc
icebp
or
mov
cltd
mov
xor
xor
xor
in
mov
cmp
jbe
lea
jne
clc
repnz
into
loope
insl
adc
jg
add
or
cmp
and
cltd
sub
sub
sub
ja
push
cmp
jmp
decl
aaa
push
ja
push
stos
push
imulb
mov
xchg
lcall
mov
mov
pop
shr
push
mov
jecxz
inc
adc
popf
mov
jl
ss
repz
cmp
sarb
fstps
xor
pop
jmp
cli
xchg
rorb
icebp
cli
lods
call
jbe
cld
push
or
mov
lea
add
mov
rorl
inc
imul
xor
dec
aad
es
jnp
xchg
push
inc
jns
call
jno
push
xchg
ss
and
pop
xchg
pop
mulb
aad
lds
mov
lods
mov
xchg
mov
add
dec
inc
or
in
jb
ret
addr16
mov
xor
dec
fldcw
mov
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
cmp
xrelease
sarb
jl
jle
lahf
mov
sub
and
test
sbb
sahf
mov
mov
xor
jbe
aaa
cmp
iret
pop
mov
sbb
mov
mov
jge
cmp
in
mov
pop
ret
pushf
pop
pop
sbbb
sub
jg
lret
das
mov
bound
cmp
popf
xchg
adc
jns
sbb
xor
out
aaa
sub
test
ljmp
xchg
int
mov
dec
ja
mov
lahf
rcll
pop
ficoml
xlat
ja
popf
xor
pop
fcoms
enter
test
lods
nop
mov
ficoml
jmp
fs
imul
fimull
bound
mov
int
rcrb
xorl
in
jmp
fucomi
jle
ljmp
inc
pop
xchg
mov
movsl
scas
ss
mov
test
sbb
adcl
in
jl
cwtl
mov
ljmp
iret
xor
pushf
add
test
sub
adc
nop
lods
xor
out
jmp
sbb
stos
sub
aad
pop
aas
lret
mov
xor
jo
cltd
push
sub
mov
sbb
in
popf
loopne
push
add
shlb
mov
cmp
inc
test
rorl
pop
cld
xchg
cs
cmp
dec
add
call
or
and
xor
clc
leave
add
xor
xor
fildl
in
dec
cld
lea
enter
outsl
lret
dec
cmp
pop
movsl
in
mov
pusha
ja
sbb
xchg
repnz
sbb
mov
shrb
and
xchg
dec
imul
cmp
iret
mov
in
outsl
jbe
imul
stos
movsl
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
add
loope
into
jle
add
adcl
xchg
cmp
inc
call
cli
add
xor
aam
sti
mov
test
mov
mov
divb
ja
add
inc
fldt
nop
jmp
clc
push
mov
hlt
aas
lahf
test
sub
pop
inc
sbb
fsts
mov
jl
jecxz
add
adc
repz
roll
aas
push
jbe
mov
divl
fdivrp
outsl
stos
ficompl
jp
push
sbb
ss
lret
mov
mov
pop
mov
fwait
mov
jp
lods
cmp
fsubs
push
xor
sbb
mov
sub
pop
xchg
adc
jmp
loopne
sub
stc
xchg
cltd
pop
push
lock
shrl
adc
jg
mov
inc
pop
les
rcll
test
pushf
shrb
shll
pop
sbb
xlat
mov
xchg
les
in
adc
mov
mov
fsubrp
adc
fcoml
sti
cmc
push
movsl
sti
movsl
iret
jns
je
stos
hlt
pop
cmp
push
cmp
mov
cwtl
and
insb
bnd
rcrl
lahf
adc
mov
fldt
jp
jecxz,pn
mov
and
xor
aas
dec
xchg
cli
cmp
xchg
adc
adc
rorl
xor
dec
outsb
out
shl
pop
test
xchg
add
test
cli
les
inc
xorb
movsb
mov
imul
cmp
pop
push
sub
lods
lret
jmp
pmullw
pop
clc
repz
jl
adc
outsb
mov
cmp
mov
test
fidivl
sbb
std
push
jb
cld
data16
mov
fdivr
or
outsb
cli
push
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
mov
int3
jle
add
push
ss
mov
fscale
sbb
in
or
inc
addr16
dec
mov
sub
add
andb
xlat
dec
dec
out
ds
xabort
xchg
stos
jno
pop
mov
mov
dec
and
xchg
aad
mov
lds
sbb
das
mov
push
mov
pop
xor
inc
mov
sub
dec
or
inc
mov
mov
jl,pt
jge
stc
pop
int
and
test
shll
or
imul
cmp
or
mov
add
aam
rolb
inc
lcall
pop
sbb
repz
jbe
xorl
leave
imul
fwait
hlt
fwait
pop
stos
dec
or
jno
jge
addr16
add
mov
xchg
stos
in
dec
scas
xor
nop
in
sbb
addl
mov
add
xor
add
lods
mov
into
sub
pop
sbb
jae
jg
fcmovbe
mov
sbb
das
stos
inc
jnp
dec
and
loope
mov
dec
out
js
push
pop
nop
fmuls
fdivr
mov
pop
loopne
cmpsl
and
cmp
jo
pop
jae
jg
js
mov
sti
inc
bnd
jge
dec
mov
jg
mov
sub
in
rclb
fsubl
push
mov
pop
push
test
popa
clc
push
add
fldt
test
and
insb
pop
lret
xor
ret
sub
jg
push
insl
cltd
inc
scas
dec
push
andb
fists
sub
cmpl
pushf
and
mov
dec
sub
jae
mov
jle
adc
fstpl
sub
xchg
dec
les
adc
inc
imul
jp
xchg
ja
pop
movsb
movsl
notl
push
push
push
mov
addl
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
leave
ds
and
jle
adc
loopne
or
pop
cld
roll
and
or
cltd
adc
lea
outsb
dec
js
sub
and
jp
jecxz
inc
or
mov
enter
xchg
fwait
jecxz
mov
xchg
pop
out
mov
mov
cmp
les
push
xor
xor
out
adc
arpl
and
mov
mov
ss
pop
out
push
inc
mov
adc
dec
mov
popf
sbb
jl
mov
sub
je
aaa
jmp
mov
sbb
push
lcall
or
hlt
pop
gs
jp
dec
test
cmp
pop
adc
arpl
push
cli
imul
lcall
sub
sbb
es
pop
mov
dec
je
mov
jbe
dec
cmp
sahf
sub
and
and
fwait
daa
ja
outsl
std
imul
push
cmpsb
push
lea
aaa
hlt
int3
out
mov
cltd
stc
dec
loopne
clc
int3
lcall
cmc
pop
loope
insb
imul
stos
mov
and
cmp
out
fisubrl
or
dec
fldl2t
pcmpeqb
imulb
adc
mov
clc
bound
loop
or
push
inc
adc
icebp
xchg
xor
adc
add
ds
xor
add
cmp
and
jb
sahf
fwait
ja
mov
out
loopne
arpl
push
jge
jmp
movsl
xor
cmp
in
insl
jo
call
dec
cmc
inc
cmpsl
int3
jns
xchg
push
rclb
mov
movsb
pop
test
push
add
inc
xchg
mov
inc
sti
dec
xor
xor
lcall
iret
sbb
jo
push
das
xchg
int
int
xor
aas
xchg
adc
test
pushf
pop
jb
xchg
add
sbb
mov
fbld
dec
nop
inc
mov
sbb
and
push
mov
add
daa
fcompl
inc
cld
inc
and
mov
adc
xlat
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
mov
jle
and
jle
cmp
mov
pop
psubq
aad
push
or
sbb
fstl
mov
xchg
imul
dec
mov
pusha
bound
int3
sub
cli
mov
push
mov
push
mov
pop
sbb
sbb
inc
outsb
push
pushf
leave
push
or
adc
inc
cmp
cmp
repz
mov
inc
ret
sarb
push
lods
aam
push
lret
xor
dec
outsl
js
loopne
cwtl
stos
push
xchg
push
mov
xchg
xor
test
cmc
jmp
dec
push
shr
paddq
lods
add
jne
mov
push
pop
cs
jns
iret
push
in
mov
and
jmp
xorl
insl
and
scas
xor
outsl
inc
and
xorb
out
add
dec
bound
icebp
adc
xor
jmp
add
frstor
ja
push
adc
push
mov
add
xor
std
in
push
loopne
jmp
imulb
sti
test
aaa
sahf
test
popf
push
dec
jb
hlt
mov
nop
insl
jl
jb
ja
test
call
pop
fadds
roll
rcr
adc
push
fxch
lret
subb
sub
sub
jns
adc
mov
stc
paddusw
sub
cmpsb
sub
ljmp
mov
xor
pusha
rol
push
cmp
or
aaa
xlat
shl
and
stos
xlat
xor
or
out
jmp
sbb
cmpsl
sub
icebp
icebp
repz
mov
popf
xchg
in
loopne
sbb
mov
in
xchg
xchg
adc
xchg
xor
mov
aad
push
fs
test
scas
mov
cmpsb
dec
push
push
movsl
or
or
ficomps
xchg
fwait
xor
and
fcmovu
pop
je
push
push
je
add
mov
outsb
push
dec
fs
cmpsb
dec
mov
aas
imul
inc
add
xor
hlt
sbbl
jmp
pop
push
jg
xor
add
pop
mov
jle
and
jle
xor
pop
mov
inc
imul
sti
pop
mov
popa
sti
popa
mov
dec
mov
mov
ds
cmp
sbb
ficomps
dec
mov
arpl
js
fdivrp
aad
test
imulb
sub
push
ljmp
push
sub
or
iret
hlt
pop
pop
xor
inc
cwtl
popa
push
jl
sahf
fcmovb
rorl
jbe
ret
jmp
adc
sbb
xchg
loopne
adc
xchg
jne
lds
lock
mov
jbe
jns
aam
xchg
pop
or
jbe
xor
xchg
jmp
or
sub
mov
pop
and
cmp
addr16
pop
insb
cmp
aam
or
call
sub
nop
jle
xchg
stc
ja
movsb
dec
mov
cmp
adc
das
cld
test
sarb
stos
in
js
xor
fstps
ret
mov
adc
in
mov
aaa
mov
and
mov
cmp
inc
aam
pop
rclb
pop
hlt
ljmp
shlb
iret
inc
pop
int
sbb
pusha
cmpb
push
daa
jo
add
in
repz
and
sub
dec
ret
shr
std
xlat
fistpll
es
ret
mov
mov
sti
xchg
insl
subl
jmp
dec
xor
js
cmp
fstps
push
fistpll
xor
imul
test
pslld
push
xor
add
push
scas
add
mov
pop
pop
and
dec
in
les
icebp
shl
mov
jne
es
fstpt
jecxz
xchg
clc
add
dec
neg
push
dec
int3
repnz
nop
jge
sahf
daa
sahf
jmp
int3
push
adc
into
xorl
sub
cmpsl
movsb
mov
jbe
mulb
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
push
mov
jle
and
jle
pop
pushf
mov
jae
dec
jne
std
movsb
dec
cmpsl
add
int
pop
mov
std
jno
mov
xchg
add
cmp
pop
mov
lock
push
jb
add
xchg
xor
pop
and
or
popf
call
sarb
jne
es
std
lock
ss
lret
and
pop
xor
cmc
sbbl
xor
and
add
xchg
shlb
js
sbb
stc
xchg
sahf
stc
sbb
imull
push
sub
mov
adcl
out
ljmp
or
inc
mov
std
rcll
scas
add
ss
pop
or
sbb
sub
jle
test
cli
int
mov
flds
or
popa
ss
xor
repnz
dec
aad
aaa
insl
push
cmpsl
and
mov
nop
or
dec
push
push
fldenv
insl
repz
pop
and
pop
xchg
sub
test
pusha
pop
pop
data16
jae
adc
sbb
pop
jno
pop
push
icebp
pop
add
pop
pusha
stos
cmc
xor
dec
pop
sub
daa
shrb
je
adc
std
dec
loope
pop
push
pop
xchg
mov
adc
into
mov
jmp
cmp
or
jno
arpl
arpl
adc
lret
fisubs
loope
fdivs
push
xchg
mov
lods
adc
add
call
xchg
shr
xor
mov
jecxz
or
inc
xor
xchg
add
sbb
dec
dec
fsts
sbb
sbb
mov
test
xchg
scas
and
scas
mov
inc
cltd
nop
dec
sbb
xchg
cmp
movsl
xchg
in
mov
cmp
jp
ficompl
mov
mov
test
mov
aas
js
mov
outsb
xchg
lds
out
pop
mov
das
sbb
mov
and
out
mov
sahf
pop
dec
jge
jle
in
and
mov
jbe
jl
dec
inc
jge
cmp
inc
shlb
push
cmp
pop
test
sbb
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
jo
jno
data16
and
jle
push
test
mov
nop
sbb
cmc
fadd
xchg
push
jp
mov
test
mov
fldl2t
incb
xor
leave
mov
and
test
push
je
mov
and
add
fwait
xchg
lcall
mov
rclb
jae
dec
sar
xor
pop
cmp
jnp
mov
xchg
insb
hlt
leave
nop
mov
mov
ror
popa
jle
push
sbb
sub
mov
and
test
mov
insb
ret
push
adc
sarb
loope
dec
sbb
pop
push
scas
push
loopne
pop
std
mov
sub
lret
xchg
mov
cwtl
std
pop
mov
loop
ror
pop
sub
jne
jbe
or
nop
mov
fsubrl
cmp
sbb
mov
idivl
arpl
jg
lods
rcll
or
js
fs
popa
mov
pop
mov
mull
cmp
sti
xor
scas
enter
inc
pop
mov
shll
jmp
or
fnsave
sub
or
mov
cs
loope
cmp
jae
sub
mov
cltd
leave
jl
xlat
hlt
test
cld
cmp
fisubl
mov
clc
das
push
testb
cmp
xor
bound
xlat
out
mov
nop
add
scas
rcl
push
mov
jnp
bound
iret
outsl
adc
stos
pop
pop
pop
je
cli
mov
test
popf
or
fiaddl
decb
out
mov
js
fwait
mov
push
into
jp
jl
fisttpll
fcmovnb
loopne
scas
sarl
jnp
ret
hlt
sub
clc
ror
in
cwtl
subb
mov
sub
sahf
js
adc
dec
xchg
les
movsl
in
je
pop
test
jne
loop
nop
jp
jo
mov
stc
add
addb
je
cmp
or
stc
inc
xchg
into
aam
shrl
inc
push
xchg
bound
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
sbb
pushf
stos
sub
stos
cmp
or
in
scas
jle
in
or
mov
sub
aaa
add
mov
test
mov
test
sub
rclb
mov
sub
xchg
call
add
cmpsb
xchg
pop
push
dec
sub
clc
and
sub
and
mov
jmp
mov
lds
fisubs
inc
mov
add
cmp
subl
adc
and
ror
and
mov
daa
pop
mov
mov
fimuls
dec
dec
sub
adc
lods
or
jno
inc
into
adc
cwtl
popf
andb
xchg
test
mov
mov
hlt
xchg
xlat
jno
add
xor
ret
lcall
fidivl
adc
clc
es
jl
push
inc
in
ror
mov
cltd
add
add
cltd
and
outsl
inc
aam
cltd
xor
stc
push
xlat
inc
or
fcoml
test
dec
mov
hlt
xchg
lea
push
xor
addr16
push
adc
rep
lahf
mov
ret
das
rorb
adc
insb
add
std
and
shl
fmull
mov
cmp
push
xchg
and
shlb
daa
push
lret
cltd
fdiv
xchg
mov
sub
adc
mov
or
idivl
push
stos
dec
jle
inc
repz
int
inc
add
popf
lods
dec
push
add
cmp
daa
sbb
scas
icebp
cli
cmp
mov
mov
je
imull
xchg
insb
out
hlt
sub
sub
inc
and
pop
or
xor
loopne
imul
int3
push
or
push
adc
cli
inc
inc
adc
dec
cs
lcall
jle
dec
das
adc
shrl
arpl
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
popf
and
xor
jle
and
jle
mov
je
xchg
add
xor
add
sarl
outsl
jecxz
arpl
cmp
imulb
pop
rolb
insl
pop
pushf
inc
xor
hlt
sub
cmpsb
outsl
jbe
dec
mov
and
add
sub
out
push
clc
push
cmp
add
pop
or
jge
jno
test
jb
imul
cmpsb
repnz
das
lock
add
xchg
scas
jnp
in
mov
mov
sub
push
mov
fstpt
cmp
sbb
cmp
dec
ds
sbbb
pop
dec
inc
mov
sbb
int
mov
push
loop
inc
mov
lahf
jmp
gs
movsl
ret
fcompl
push
aaa
mov
pop
addb
ds
jmp
mov
pop
iret
ror
fists
adc
sahf
je
jle
dec
mov
ljmp
mov
jbe
jns
cmpsl
push
arpl
fsubl
clc
enter
insl
leave
sbb
int3
inc
xchg
cmp
jne
push
daa
out
clc
sbb
mov
or
das
pop
xchg
stos
mov
xorb
sub
mov
dec
sub
lret
pop
scas
faddp
mov
clc
dec
push
or
in
lret
lret
push
ja
jbe
adc
sti
push
loop
adc
pop
sbb
push
shrb
movsl
xchg
arpl
or
cmp
sub
je
mov
je
popf
lahf
pop
fisubs
pop
jecxz
rcl
xor
adc
sub
clc
std
stos
mov
add
je
scas
dec
fwait
push
sti
jb
scas
xacquire
mov
add
push
jno
mov
inc
out
inc
or
shll
outsb
popa
cmpsl
adc
fwait
mov
add
jo
in
aas
push
jecxz
xchg
pop
jp
inc
pop
cmc
testl
dec
gs
movsl
dec
fwait
mov
push
xchg
jb
lcall
std
orl
sbb
or
inc
or
jne
jmp
lods
mov
outsb
xorl
pop
push
out
and
fcomp
jle
and
jle
pop
xor
movsb
sahf
flds
and
pop
add
call
dec
out
jmp
stos
test
mov
lods
es
dec
cmpsb
mov
mov
fmull
sar
je
shrl
push
insl
inc
xchg
stc
mov
int3
dec
mov
repz
and
std
xbegin
loop
jne
popa
in
subl
push
das
mov
jl
scas
pusha
cli
cmp
sbb
mov
mov
adcb
cld
mov
cmp
and
pop
xchg
fistpll
mov
pop
scas
inc
add
loop
out
xchg
sub
es
inc
jp
xor
aad
cmp
mov
ljmp
inc
dec
fsubs
es
sbb
pop
xchg
mov
mov
dec
cwtl
int
sbb
ds
out
or
adc
inc
movups
aad
adc
mov
adc
je
xchg
xchg
jg
pop
out
je
fstpl
add
filds
mov
pop
sub
mov
fnstcw
sete
dec
mov
enter
mov
mov
dec
mov
cmp
out
sub
gs
pop
repnz
jp
scas
ds
cld
or
in
popl
jp
cmpsl
std
pop
ljmp
mov
xchg
inc
and
xchg
pop
out
sti
mov
hlt
divb
push
aas
mov
daa
add
rclb
jp
mov
enter
dec
fbld
pop
in
stos
or
sbbb
and
pushf
jbe
stos
rcrl
dec
bound
inc
addb
mov
jnp
addl
outsb
push
mov
lds
ret
incl
mov
mov
jne
jae
and
fs
out
ss
add
or
xor
sub
pop
fdiv
loop
jecxz
pop
add
jmp
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
mov
cwtl
sbb
xchg
pusha
loope
stos
mov
cs
lods
fldenv
cmp
movsb
out
rcrb
mov
or
test
cs
cmc
lea
cltd
xchg
insb
test
test
lret
sti
mov
adc
test
loope
fstpt
mov
jmp
lods
fcomip
cmp
cmp
fs
fisubs
jb,pt
in
push
les
lahf
out
cwtl
push
icebp
mov
adc
dec
pop
lds
shlb
cmp
mov
js
ja
add
arpl
pusha
xor
adc
pop
jle
dec
sbb
xchg
adc
insb
das
push
clc
and
and
insb
cli
dec
or
leave
sub
jae
repz
andb
lock
pushf
and
jg
mov
lret
arpl
cli
out
popf
sub
in
out
mov
cmp
iret
cmp
pop
scas
lret
gs
adc
jns
sbb
xchg
out
mov
push
xlat
xchg
mov
lds
pop
fists
out
and
mov
push
xchg
data16
inc
aas
imul
insb
fdivs
adc
mov
out
lcall
dec
mov
adc
nop
fs
cmp
mov
mov
rclb
add
jp
cmp
lcall
aas
std
mov
and
dec
nop
sbbb
lods
iret
nop
dec
outsl
je
jl
andb
dec
daa
xor
sub
lock
and
insl
push
sub
loope
mov
mov
bound
add
negb
fcompl
test
inc
pop
clc
cmp
lods
loope
cmc
add
cmp
movsb
pushf
cmp
add
sub
add
movsl
adc
and
mov
ret
nop
mov
lahf
cmp
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
imul
mov
jle
cmp
jg
cli
sbb
push
popl
fwait
xchg
and
mov
test
loop
icebp
cli
addr16
adc
push
ret
sti
jp
in
outsl
shlb
repnz
mov
out
inc
inc
cs
imul
pop
or
sub
testl
cmp
or
or
pop
fs
fildl
jmp
mov
jae
mov
lods
mov
ret
daa
inc
int
or
xchg
scas
lahf
cltd
dec
pop
jne
icebp
inc
inc
ds
xchg
int3
push
int3
push
mov
insb
lods
sarb
cltd
xchg
je
gs
dec
sub
mov
fiadds
roll
jae
enter
sbb
sbb
ret
js
pop
inc
lret
insb
pop
mov
fbld
and
push
fwait
inc
push
fwait
mov
mov
push
dec
pop
push
mov
cmp
xchg
movsl
sub
in
jg
cmp
jl
mov
stos
push
push
xor
push
fs
mov
sbb
lret
or
movsl
iret
aam
dec
mov
jns
pop
dec
cli
das
test
or
outsl
adc
push
mov
xchg
mov
push
insl
mov
jge
int3
mov
cltd
and
xlat
jl
or
scas
in
sbb
incl
mov
fs
out
sbb
ficomps
sub
in
mulb
or
test
pop
in
push
addr16
data16
jo
popf
add
mov
dec
test
sub
addr16
enter
fidivs
fsubr
inc
insb
jnp
cmp
in
test
pop
or
aaa
incb
jle
mov
or
subb
fcmove
shrl
and
ret
andb
sub
sahf
pop
push
jg
dec
push
jp
sbb
fbld
lea
xchg
icebp
mov
cmp
cmpsl
mov
push
mov
lea
sbb
out
mov
sti
movsl
mov
out
push
sbbl
jmp
lds
popa
mov
fisttpll
mov
jle
cmp
dec
outsb
cmc
add
movsl
push
lret
rolb
fcom
xlat
lret
sbb
and
jns
out
adc
mov
fdivrl
xchg
shlb
push
mov
xchg
mov
sub
sub
enter
fnop
inc
adc
sub
add
movaps
aaa
sti
dec
xor
and
inc
push
inc
mov
in
sti
push
cmc
mov
xchg
sub
cmp
test
mov
dec
lds
xor
test
or
in
lret
ffreep
enter
pop
dec
data16
sub
int3
test
xchg
cmp
mov
aam
dec
js
jge
push
dec
scas
dec
jge
inc
mov
fwait
mov
or
sub
shrb
or
mov
pop
outsl
jo
adc
fsubl
sub
cld
notb
ss
or
xor
sub
inc
push
xchg
xchg
dec
and
test
pusha
inc
je
xor
adc
mov
jg
aam
jb
cmp
shll
cmp
pop
pop
in
adc
xchg
xor
cli
mov
out
jmp
daa
xchg
lea
cmp
mov
cmp
pop
pop
cmpb
adc
jns
xchg
mov
adc
or
jmp
mov
mov
lret
jnp
sbb
sahf
out
loop
out
insb
push
ret
scas
push
inc
jno
pop
sub
and
inc
or
inc
imul
add
fistps
jno
gs
dec
lock
aas
mov
pop
push
movsb
int
mov
cmp
jmp
cltd
push
sbb
jl
bound
fisttpll
xchg
dec
lods
pop
sub
cmp
aam
aaa
fisubs
adc
xor
xorl
push
sub
cmpb
dec
xor
adc
and
pop
out
adc
movsl
test
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
fbld
or
loop
jle
jl
jle
sbb
push
lahf
jb
repz
std
push
in
in
dec
arpl
and
xor
cmpb
movsb
jbe
xor
pusha
or
cs
pop
cmpsl
roll
sbbl
movsl
js
mov
mov
inc
int3
inc
xchg
or
inc
dec
mov
mov
xchg
stos
pop
pop
fadds
dec
pop
cmp
scas
xchg
inc
mov
lods
daa
ret
repz
cmpsl
adcl
fidivrl
mov
inc
mov
lcall
lea
sti
orl
jge
jnp
mov
ljmp
clc
xor
sbb
mov
ds
repnz
sti
pop
or
xchg
mov
aaa
imul
jae
aad
inc
lds
xor
or
sub
xor
leave
int3
mov
xor
push
jl
xchg
or
jge
pop
push
jg
mov
jne
int
movsb
sub
pop
sub
pop
into
test
cmpb
cmp
sbb
cmp
jp
pop
sbb
mov
stos
out
adc
movsb
dec
movsb
aad
inc
stos
and
lahf
mov
sti
lret
loope
adc
sub
pop
mov
mov
jae
std
scas
push
push
stos
cld
add
push
mov
sbb
call
inc
daa
clc
inc
xorb
dec
mov
xchg
roll
sti
push
pop
add
stc
inc
imul
rcr
mov
mov
xchg
fists
adc
cwtl
mov
cwtl
popa
jl
popf
out
imul
aaa
test
fbstp
mov
aas
gs
imull
push
lahf
in
cltd
cwtl
xchg
pop
jecxz
and
cmp
lea
cmp
pop
negl
clc
mov
lods
xor
cmc
subb
mov
xorb
push
and
fsubrs
adc
data16
pop
ss
inc
repz
stos
lods
xchg
xor
mov
lds
jg
add
fists
imul
jbe
pushl
xchg
gs
mov
out
xor
les
jle
les
cmp
fimull
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
stos
int
aam
loopne
jle
jl
jle
fcoms
jns
xor
sbb
mov
mov
and
test
push
cmpsb
xchg
xbegin
int
scas
cmp
push
mov
dec
mov
jae
ret
mov
mov
dec
in
mov
data16
adc
or
push
or
inc
mov
mov
popa
xchg
aaa
dec
faddl
mov
aam
lods
pop
pushf
add
xchg
scas
loop
add
out
negl
jo
loopne
jno
test
int
mov
xor
xorl
vaesenc
cmp
mov
jb
mov
shll
jb
sub
sbb
xlat
jmp
sbb
int
movsb
jg
scas
out
movl
add
mov
and
jo
pop
sbb
and
lahf
cmpsl
adc
into
pop
push
xor
sbb
push
loopne
lods
mov
sub
add
push
dec
insl
in
rorl
scas
or
add
shll
jno
test
fstl
xchg
ficomps
cmpsl
jbe
inc
lods
leave
addl
nop
loope
jne
test
rcll
call
jl
jp
in
icebp
xchg
shlb
xchg
orl
adc
push
ret
out
leave
out
xor
bound
aad
mov
adcl
mov
adc
mov
pop
repz
or
pop
ret
shlb
jae
pop
iret
or
jno
pop
push
dec
movsl
mov
xorl
cmp
or
das
pop
mov
iret
fdivs
daa
cmp
test
push
mov
push
mov
inc
or
aam
shlb
jmp
pop
mov
push
mov
push
sbb
popf
add
sbb
push
sbb
nop
or
mov
xchg
ret
pop
jns
jns
sbb
daa
hlt
mov
sbb
add
push
mov
pop
adc
push
sahf
ficoml
pop
jmp
lods
push
xchg
add
ss
sbb
or
enter
xor
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
stos
das
ret
lret
dec
out
jle
cmp
or
xor
inc
leave
sarl
sub
mov
insb
loopnew
xchg
mov
or
dec
int
das
fwait
arpl
aad
popf
daa
aaa
cmp
add
cmp
mov
xlat
clc
push
sbb
push
jl
pop
arpl
lea
test
xor
cmp
mov
adc
subb
add
mov
out
data16
ficoml
scas
lods
xchg
jl
and
jge
inc
pushf
push
sbb
in
fldl2e
hlt
fildll
mov
and
les
mov
cmp
xor
loopne
outsl
xor
loop
insl
push
call
repz
pop
pushf
sub
xor
loope
stc
or
cmp
inc
adc
xor
subl
jge
mov
in
cwtl
jae
bnd
lret
push
sbb
test
in
mull
and
push
mov
out
aad
int3
push
ss
add
sub
jbe
imul
cmpsl
xchg
in
outsb
cltd
pop
mov
or
push
push
ljmp
sub
ror
xor
pop
jl
shll
mov
lds
jae
movsb
pop
lret
and
xchg
arpl
jo
mov
xchg
lcall
daa
push
adc
lods
frndint
testb
and
or
pop
and
mov
fcmovnb
cltd
xor
adc
test
xchg
jge
mov
add
insb
inc
inc
std
out
ret
test
repnz
push
pop
repz
jo
jle
mov
push
lret
dec
xchg
int3
insb
cmp
je
dec
and
pop
imul
add
inc
mov
sarb
cmc
aad
dec
dec
pop
sbb
ret
aaa
sarl
sahf
loope
pop
lea
dec
popa
pop
shlb
xor
ds
pop
xchg
adc
jb
aas
xchg
inc
stc
or
cmp
cmp
xor
movsl
lods
imul
int3
add
fsts
rep
out
and
fwait
leave
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
test
jle
jl
jle
iret
mov
cmp
jmp
adc
jge
fidivrl
das
xchg
push
xchg
and
out
adc
in
ffreep
leave
adc
addb
insl
addl
or
push
jbe
xchg
mov
jo
nop
xchg
pop
aad
rorl
add
cwtl
sbb
sbbl
jg
loop
sbb
fwait
loope
xchg
es
pop
int3
add
sub
in
repz
mov
shr
jno
aam
out
iret
mov
cld
sub
mov
cld
es
bound
les
jbe
das
mov
jge
pop
rdtsc
out
inc
jp
xchg
jnp
sub
xchg
into
orb
out
scas
sbb
sbb
lret
xor
jl
xor
aas
arpl
fidivrl
jp
leave
jns
or
mov
adc
push
sbb
push
mov
incl
sbb
push
sbb
addb
es
movsl
into
ret
cmpsl
ds
pop
mov
push
dec
inc
mov
push
push
scas
lock
fistl
lods
xor
lahf
sarl
repnz
push
shll
pop
mov
fcmovnbe
pop
dec
and
mov
mov
movsl
das
cmpsl
aam
pop
pop
sub
xchg
jno
or
cmpsl
xchg
js
sbb
add
imul
movsl
pop
mov
cmc
stos
or
hlt
test
dec
adc
das
push
adc
aas
lret
xchg
insl
shr
pop
sbbb
orb
jg
push
dec
cltd
cmp
mov
push
pop
imul
sub
jle
popl
pusha
std
cmovle
sbb
sub
cmp
sbb
daa
mov
mov
std
in
jae
xorl
sbb
gs
ficomps
push
dec
push
nop
ja
sarl
xor
mov
cmp
arpl
or
push
mov
cltd
sahf
popa
lods
or
cmp
xchg
movsl
xchg
cmp
or
mov
roll
inc
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
lods
lock
shr
jle
cmp
sub
aam
push
inc
mov
imul
mov
mov
cmp
fwait
sbb
pop
bound
cmpsb
add
lret
popa
inc
push
addr16
add
adc
adc
inc
xchg
mov
loopne
add
ret
push
adc
push
std
scas
dec
add
hlt
xchg
rcrb
ss
stos
add
ret
call
ljmp
and
jb
xchg
fisttpll
xor
mov
xor
or
lods
push
xchg
mul
test
sbb
pop
push
adc
push
mov
scas
lods
sbb
pop
push
sbb
es
mov
es
inc
lea
sub
inc
out
and
lock
mov
cltd
push
jecxz
fisttpll
enter
or
pop
test
sbb
fwait
inc
sub
lret
mov
mov
lret
mov
jae
test
dec
gs
push
cmc
jb
loop
aam
leave
daa
jmp
dec
and
xor
popf
nop
fidivrs
xchg
inc
and
repz
mov
jne
int3
xor
in
imul
push
sub
jno
mov
ds
adc
jb
mov
or
jg
dec
push
and
dec
xchg
cmp
dec
lcall
loope
dec
es
movb
mov
fs
enter
mov
adc
or
push
xchg
jno
dec
int3
jns
push
pusha
insb
mov
gs
push
pop
je
inc
fwait
es
xor
dec
aas
test
lahf
dec
nop
or
adc
sub
dec
cmp
push
int
stc
mov
mov
scas
das
lods
nop
xchg
mov
sbb
cmp
xchg
inc
icebp
dec
inc
xor
stos
repz
imul
jle
pop
fidivrl
outsb
push
js
bound
nop
test
ss
push
push
mov
repz
and
les
subb
xchg
imul
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
jge
jmp
lret
pusha
cltd
aad
pop
xor
es
mov
in
mov
lods
or
das
mov
aas
lods
in
mov
out
popf
xor
cmp
in
sti
shll
add
ret
mov
scas
sbb
mov
es
inc
inc
ljmp
negl
pop
push
cltd
out
mov
mov
sbb
cmp
mov
lds
hlt
fcompl
pop
cli
hlt
ss
sub
jg
dec
and
repz
lods
pop
out
out
gs
add
adc
add
rcl
out
outsb
ljmp
pop
cmp
push
add
pop
fs
shll
fld
fisubrl
mov
rclb
lods
fsubs
dec
inc
sub
ret
mov
das
push
cmp
repz
sbb
lea
xor
in
repnz
xor
dec
or
dec
lds
sarb
subl
cmpsb
insb
shrb
pop
insb
movsl
cmp
inc
inc
mov
inc
idiv
mov
adc
adcl
mov
cmpsb
xchg
jg
jno
push
cmp
xor
pop
shrb
repz
sbb
dec
push
mov
sub
jecxz
add
aas
in
inc
jbe
ret
ret
shrb
xchg
push
cli
cmp
lods
sub
rcl
mov
xlat
jmp
hlt
sbb
int
pushf
shl
mov
sbb
shr
push
xor
push
icebp
loopne
pop
mov
imul
inc
inc
inc
mov
enter
cli
xchg
nop
pop
jo
xchg
stos
ret
aad
lea
pop
sbb
subb
aas
or
loopne
mul
xor
pushf
mov
mov
fidivl
or
daa
shlb
loopne
sub
jecxz,pn
jno
mov
or
xor
lret
xchg
adc
imul
movsb
pop
jnp
sbb
inc
inc
mov
pop
adc
inc
fwait
cmp
push
cmp
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
and
push
idivl
cmp
in
jecxz
add
xchg
cwtl
or
jmp
mov
int3
fmulp
dec
cmc
bound
fxch
push
lods
add
pop
aaa
fmull
pop
or
mov
fsub
movsl
xchg
stc
xchg
daa
jne
in
sub
cmpsb
repnz
mov
jg
ljmp
sti
push
lahf
mov
shr
in
mov
daa
sbb
aas
inc
lahf
jnp
mov
repz
inc
mov
jp
rcl
adcl
lods
aas
adc
daa
shl
subl
scas
xor
dec
insl
sbb
loope
mov
add
jns
imul
xor
divb
enter
push
or
push
add
cmpsb
mov
xor
repz
scas
data16
arpl
jmp
imul
shl
or
mov
ss
psrlw
pop
mov
mov
arpl
cmp
mov
test
movsl
sbb
test
cwtl
popf
sahf
pop
cltd
outsb
jo
cli
jmp
push
mov
jmp
lret
inc
inc
mov
sbb
push
push
xchg
stos
stos
sbb
mov
jnp
mov
dec
fcmove
cmc
fwait
pop
or
mov
add
cmpsl
gs
aaa
mov
jnp
mov
imul
out
xor
adc
cmp
roll
js
jp
cmpsl
mov
fistps
das
insb
or
xor
or
dec
in
iret
mov
adc
pop
mov
sbb
xchg
in
sbb
negl
aaa
and
dec
xlat
sbb
mov
mov
xlat
jbe
xchg
lahf
inc
in
movsb
scas
or
movsb
push
neg
mov
mov
jge
jl
iret
push
stos
lock
stos
add
lret
mov
adc
xchg
test
or
dec
and
jns
ret
push
jne
cmp
jle
and
das
mov
pop
push
push
sbb
cmpsl
adc
mov
push
jnp
negl
add
stos
jl
into
push
out
mov
test
mov
mov
push
lock
enter
and
pop
sbb
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
outsl
push
sub
jle
jl
jle
adc
pop
test
xlat
and
fdiv
mov
inc
xchg
lods
clc
sbb
jmp
fnstenv
fs
xor
push
push
push
or
dec
mov
ret
dec
outsb
in
inc
sbb
jb
mov
jecxz
adc
sar
popf
jmp
push
xchg
jp
lret
jmp
mov
mov
xor
mov
pop
inc
add
lds
sub
ror
and
jns
pop
push
in
out
xchg
into
gs
jbe
repnz
ds
out
scas
lock
stos
inc
fcomps
sbb
pop
test
mov
in
inc
jb
jg
lret
add
decl
icebp
out
jecxz
cmpsl
jo
aas
mov
addl
dec
sub
inc
sbb
aad
cmp
or
into
jmp
inc
fildll
adc
inc
xchg
cld
mov
mov
add
mov
jns
adc
inc
ds
mov
sub
and
sbb
les
sbb
cmp
bound
repz
ret
jo
imul
xchg
mov
arpl
dec
and
cwtl
imul
pop
sub
xchg
test
xchg
push
jecxz
or
out
mov
cmp
hlt
mov
stos
cld
cwtl
adc
and
adc
sbb
push
jle
cmpsl
cmp
xchg
mov
push
add
popa
pop
in
cwtl
inc
mov
jne
icebp
mov
push
mov
stc
mov
adc
rolb
ds
inc
fimuls
loop
cmp
in
fs
jne
dec
xor
shll
rclb
push
ds
movsl
cmp
dec
js
push
cmp
mov
xchg
lret
pop
xchg
insl
adc
xor
inc
negl
xlat
inc
push
mov
mov
icebp
cmp
mov
xchg
xchg
aam
cwtl
das
imul
out
mov
loopne
add
xor
xlat
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
sarb
call
jl
jle
xor
jns
test
jno
jo
mov
les
imul
rcrb
jno
inc
adc
adc
and
es
mov
xorps
adc
movsb
cmp
stos
push
sub
imul
pop
mov
lea
sti
test
mulb
mov
sarl
dec
xchg
hlt
stos
inc
call
xchg
push
imul
xchg
sub
in
sbbb
jmp
mov
or
mov
push
int
mov
repnz
xchg
adc
sbb
mov
or
rorb
and
inc
dec
xor
in
jbe
jne
pop
sub
xchg
or
xchg
arpl
jbe
inc
fsts
cmc
rclb
lret
sub
lds
mov
pop
aad
cmp
sti
shrb
mov
pop
cli
in
pop
hlt
out
or
loope
cmp
push
cwtl
and
js
jnp
in
stos
mov
inc
mov
mov
popa
int3
je
imul
xchg
and
inc
cld
fmul
cmpl
fldenv
stos
insl
mov
sub
mov
and
and
add
scas
je
out
leave
loope
pop
mov
subl
mov
lret
push
loopne
mov
lcall
cltd
call
jle
mov
popa
xchg
push
fwait
arpl
pop
bound
or
rolb
bound
sti
cmc
push
loopne
lock
pop
notl
sub
push
sub
scas
sbb
lahf
push
mov
mov
jbe
lcall
insb
push
push
jmp
out
popf
add
push
sub
mov
push
push
pop
inc
lds
mov
in
xor
adc
mov
repnz
aaa
sub
cwtl
cmp
xlat
lods
scas
pushf
imul
mov
push
push
or
mov
cmpsb
mov
test
aam
push
addr16
sub
scas
xchg
out
mov
push
arpl
cmp
sar
jne
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
decb
adc
jl
jle
mov
ss
push
aas
ds
test
xor
test
mov
cli
pop
adc
mov
push
dec
ds
cmc
add
xor
lret
or
and
dec
mov
pop
cmc
cmc
jbe
call
lahf
test
inc
pop
dec
out
clc
inc
jg
cld
mov
inc
pop
fldenv
dec
lcall
cmp
imull
popa
xor
cld
push
lahf
xchg
jne
fwait
imul
inc
andb
mov
js
push
sbb
mov
insl
push
sub
arpl
add
lods
inc
push
fbld
cmp
xchg
cmp
xchg
dec
dec
pop
pop
cmp
and
mov
push
jmp
push
mov
push
dec
leave
sti
or
jne
xor
push
mov
cli
adc
sbb
in
mov
sub
sub
mov
rcr
mov
mov
pop
xor
sbb
cmp
mov
mov
or
lahf
stos
sbb
das
js
imul
dec
in
push
add
mov
fisubl
sbb
push
js
fisubs
fdiv
mov
xchg
push
cmp
push
scas
insl
push
mov
test
adc
cmp
addr16
jl
std
pop
xchg
push
jl
sarb
sub
cmp
inc
adc
cwtl
andb
out
push
mov
add
and
mov
xchg
and
xor
add
mov
and
repnz
push
sub
push
loop
mov
cwtl
xor
aaa
scas
push
xor
call
stos
sbb
subl
lahf
push
addr16
loope
in
xor
loopne
jl
jecxz
cli
mov
push
add
sbb
adc
ret
test
mul
movsb
loopne
cli
das
push
test
push
lcall
stos
mov
jnp
inc
jno
xor
pop
repz
mov
shl
outsl
mov
arpl
pusha
out
adc
sub
lods
dec
ljmp
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
rcr
jl
jle
cmp
test
add
xchg
out
cmpsl
xor
mov
lea
jae
leave
and
sbb
mov
icebp
or
sbb
pop
std
shll
loop
mov
ss
int3
push
sub
inc
sub
fildll
push
aas
cmp
das
cmpl
test
loope
das
xchg
test
jo
add
jne
repnz
dec
jl
ljmp
mov
lret
dec
xor
inc
fists
std
pop
enter
add
lods
jecxz
test
dec
xchg
mov
push
xchg
js
jl
mov
repnz
xor
push
mov
xchg
js
aaa
jmp
sbb
stos
cmpsw
push
mov
fmuls
mov
adc
scas
cmpsl
orb
mov
loop
xchg
pop
scas
out
popa
push
push
loop
gs
pop
lret
imul
pop
mov
xchg
insb
push
xchg
cld
movsb
aaa
and
scas
jns
fstpl
daa
mov
mov
sub
out
pop
fnstsw
and
test
xor
pop
bound
aas
iret
sub
scas
mov
push
add
ljmp
cmp
enter
jg
xor
cli
and
jg
jg
arpl
sbb
xor
popa
inc
xchg
lds
adc
int
insb
inc
pop
in
dec
jo
mov
popf
leave
xor
inc
pop
cmp
inc
les
dec
add
ds
sbb
add
pop
enter
xor
lret
loop
cli
inc
test
adc
jbe
jno
push
dec
mov
dec
mov
call
out
stc
mov
cmpl
mov
out
out
sahf
pushf
je
sub
cmp
clc
pop
sti
xchg
lea
mov
jns
imull
mov
pop
lods
xor
ret
pushf
add
pusha
dec
je
je
fcoml
add
movsb
ret
and
loope
xor
clc
xor
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
jno
mov
jle
jl
jle
cmpsl
iret
icebp
pop
insl
mov
mov
stos
gs
repz
fistpl
pop
xor
mov
fimull
enter
jne
inc
pop
stos
inc
jbe
movsb
mov
test
push
cmp
xchg
mov
xchg
notl
test
jle
in
add
into
insl
dec
push
insb
mov
adc
fdivr
popf
clc
insb
xchg
cmc
push
ljmp
xor
sub
sub
push
adc
aad
movsl
or
inc
push
addb
cwtl
insl
dec
ret
in
insl
out
rolb
cltd
jmp
jp
ss
add
lahf
imulb
cmpsl
sub
sub
imul
mov
icebp
imul
pop
mov
push
pop
repnz
inc
mov
pop
loop
pop
or
jl
es
dec
movsb
cwtl
dec
repnz
mov
loope
arpl
jnp
ss
mov
jl
fldcw
xchg
ljmp
fildll
daa
divl
push
pop
mov
popa
sbb
ljmp
lret
fxam
xchg
pop
out
push
mov
cmpsl
jl
ljmp
adcb
lret
and
push
imul
jne
lret
cmc
cld
out
insl
mov
pop
dec
dec
adc
out
test
push
arpl
mov
cli
data16
inc
fs
xchg
std
dec
fidivrs
lock
dec
mov
cltd
jge
cwtl
popf
cmp
insl
push
leave
and
cwtl
enter
mov
or
lahf
inc
popf
mov
add
mov
add
pop
fwait
scas
add
jg
pop
lds
negl
pop
daa
testl
je
pop
ret
mov
shrl
lcall
mov
cli
add
cmpsl
test
mov
lock
mov
in
dec
and
fsubl
lea
rolb
rclb
jl
pop
or
fmul
outsb
mov
pop
insb
ja
cmp
lds
mov
lcall
or
negl
inc
cli
cmp
push
pop
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
jge
stc
jle
cmp
xchg
push
lahf
dec
aad
aas
mov
or
add
cs
sbb
shll
movsb
pop
or
dec
stos
jg
ret
and
scas
cmc
sbb
int
sub
outsb
leave
or
sub
and
jno
cmp
bound
dec
outsl
cmpsl
leavew
jg
stc
inc
test
sbb
jae
adc
push
lds
jbe
adc
popf
scas
cmpsb
pop
iret
scas
mov
mov
rorl
cmpsl
pop
stc
xchg
fsubrl
mov
shl
nop
push
add
mov
addr16
out
out
or
jo
icebp
vhsubps
mov
pop
xor
repz
stc
adc
cmpsl
adc
and
mov
fcmovnb
mov
aas
dec
mov
imul
pushf
imul
add
ret
insb
inc
jge
scas
push
xlat
jb
mov
pop
negb
cmp
pop
pop
jns
push
call
jge
jg
ljmp
jbe
cmp
fnstsw
fdivr
cs
and
pop
xchg
imul
popf
and
sahf
ficoms
fldt
or
jmp
adc
inc
push
add
loopne
and
mov
out
dec
and
inc
mov
daa
or
push
cmp
das
xchg
clc
ror
fwait
jo
jle
jb
pop
dec
das
fwait
xchg
add
fs
pop
adc
dec
cmc
cltd
xor
es
or
mov
or
inc
nop
pop
cmc
cltd
jno
rcrb
cmpsl
es
lcall
push
movsl
cmp
xor
rcl
or
mov
mov
clc
sub
test
xor
call
lret
jle
inc
scas
cmp
push
mov
shlb
ljmp
aad
pop
adc
rorb
push
cwtl
sbb
cmp
xchg
mov
fisubrs
adc
xchg
mov
mov
aam
fldcw
sar
pushf
mov
mov
scas
push
mov
rcrl
adc
mov
inc
or
push
mov
ds
leave
pop
aam
xchg
fadds
jp
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
xchg
imul
jle
cmp
push
out
mov
fmuls
mov
cmp
pop
pop
or
ror
loop
clc
mov
repnz
add
add
mov
les
je
aaa
lret
pusha
add
push
inc
push
mov
add
lods
in
sbb
jns
xchg
aaa
ljmp
sub
push
lds
and
clc
insl
insb
stos
in
push
jge
cmp
or
fcoml
sub
inc
xor
in
inc
push
imul
mov
mov
addr16
cmp
ljmp
mov
dec
dec
aam
inc
divb
push
test
xor
pop
and
imul
add
cmp
pop
dec
mov
in
lods
inc
push
sub
das
cli
in
add
sub
xchg
daa
pop
ljmp
mov
ds
stos
pop
lret
fucom
or
daa
or
pop
jno
rorl
testb
inc
fwait
xchg
pop
into
push
stos
inc
subb
mov
mov
inc
mov
sub
ror
mov
lahf
clc
repz
jns
out
push
cs
dec
inc
aad
xor
lcall
jb
sub
push
int
outsl
sahf
add
je
inc
inc
negb
sbb
mov
xchg
inc
xlat
sbb
mov
or
jae
lret
dec
mov
add
int
repz
cmc
das
pop
cmpsl
xchg
roll
cmc
push
icebp
pop
dec
lret
dec
lahf
jbe
push
xchg
sahf
inc
lea
bnd
lahf
icebp
sub
push
push
divl
subb
ds
cwtl
add
fdiv
test
push
aas
in
out
inc
adc
adc
aas
outsb
dec
xchg
inc
lret
hlt
pop
jae
or
add
imull
add
cld
add
pop
sub
cmp
xor
or
lea
out
xchg
stc
xchg
xchg
dec
movsb
scas
sbb
mov
mov
pcmpeqb
sub
icebp
mov
out
fistps
addl
outsl
idivl
and
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
cmpb
jl
jle
inc
lcall
mov
sbb
fsubr
mov
and
stc
mov
outsb
mov
push
in
sub
mov
fucom
pop
shr
insb
rolb
xlat
xchg
icebp
call
jbe
adc
mov
add
dec
ds
stc
lcall
pop
cmp
sub
std
jmp
test
lret
mov
mov
jmp
jbe
mov
sub
mov
cmp
add
sbb
mov
or
imul
leave
test
hlt
subl
xor
lock
adc
jns
or
pop
movsb
pop
sahf
add
sbb
xchg
rolb
inc
rcr
xor
test
and
clc
xor
xorb
fiadds
shll
adc
gs
or
pop
pop
xorb
fwait
sub
add
div
int
mov
decl
das
inc
outsl
fwait
and
push
lret
dec
aam
es
incb
fwait
pop
testl
mov
addr16
mov
mov
pop
mov
adc
jno
scas
cmp
jg
push
test
mov
cmpl
jne
pusha
cmpsb
aas
das
pushf
nop
in
paddq
mov
loop
sub
mov
mov
and
aas
sub
xor
sbb
jge
aas
lods
jle
and
mov
mov
mov
cmc
pop
pop
push
fstl
ret
mov
mov
push
jb
ficoms
stos
jp
sarl
push
pop
xchg
and
dec
dec
xchg
and
sbb
hlt
bound
jge
jmp
add
rorb
scas
icebp
movsl
xor
push
hlt
mov
mov
ficoml
aaa
es
cvtpi2ps
xchg
mov
out
stos
mov
mov
in
ds
xor
dec
ljmp
mov
inc
dec
stos
test
out
cmp
jmp
mov
hlt
xchg
mov
test
sub
ds
lret
sbb
repz
mov
outsb
cmpsb
or
bound
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
stos
xor
cmpb
jl
jle
loopne
xor
jne
insb
jbe
clc
jmp
shll
ror
xchg
push
jecxz
insl
inc
sbb
fnstsw
mov
fprem
mov
pop
movsl
out
and
in
and
xchg
js
ret
lcall
cld
pop
test
das
lret
xchg
inc
outsl
sub
push
int
mov
or
cs
jmp
cmpsb
pop
pop
jbe
dec
xchg
mov
adc
movsl
out
sub
jne
dec
pushaw
pop
mov
adc
daa
or
lea
test
xor
outsl
adc
mov
sub
inc
stos
add
aas
sub
roll
data16
sbb
enter
push
rolb
push
sbb
sbb
mov
mov
adc
lret
pop
jl
push
mov
lahf
inc
mov
fnstcw
arpl
insl
xor
sbb
pop
sub
nop
adc
sahf
push
mov
inc
lods
mov
xchg
lcall
inc
dec
clc
scas
push
test
jae
jle
hlt
daa
rorl
pop
sahf
sti
loope
fisubs
test
push
xor
push
rolb
sub
insl
jp
xchg
push
adc
or
sti
js
push
cwtl
sarl
jae
sahf
add
nop
jmp
cmp
mov
rcrb
paddw
mov
adc
mov
popf
hlt
pop
sti
mull
and
push
inc
fwait
pop
mov
ret
mov
cltd
sbb
sub
pop
mov
cmp
out
push
cwtl
jle
aad
insl
or
fsubrl
sbb
mov
dec
in
add
xor
push
movsb
popf
clc
gs
inc
call
dec
ret
adc
shlb
sub
xchg
adc
mov
jmp
rorb
lretw
aas
inc
or
or
cmp
add
mov
jbe
adc
in
pop
add
cmpsl
std
mov
faddl
push
lods
mov
mov
xchg
push
fwait
add
jle
bndldx
into
inc
addr16
rcll
pop
cmpl
or
movsb
inc
sbb
bound
mov
shr
add
add
mov
cwtl
mov
mov
cmp
xchg
mov
jl
jle
mov
inc
lahf
mov
ljmp
cmp
jecxz
stc
outsl
rclb
lret
test
mov
cmpsl
fmulp
dec
and
sub
jl
ret
pop
mov
scas
sub
sbb
shlb
xor
sti
mov
inc
mov
jecxz
xor
lret
mov
dec
stos
adc
push
insl
std
popf
cmp
int
rol
jb
lea
gs
pop
add
clc
or
ret
shrl
cmp
out
das
in
xchg
lcall
push
pop
add
sbb
clc
sbb
and
add
mov
out
iret
gs
mov
in
fwait
cmp
lods
aam
dec
popf
clc
jmp
lahf
adc
in
jg
xor
inc
insl
mov
mov
cmc
xchg
inc
dec
nop
mov
mov
cmp
jle
jno
jo
push
in
mov
das
push
pop
jp
ja
xor
jb
push
push
fimull
xor
adc
ja
jb
test
mov
add
xor
adc
push
mov
mov
jp
add
mov
push
ret
sbb
pop
xchg
mov
outsl
addr16
jno
pop
mov
aad
jno
mov
xor
inc
xchg
mov
gs
lods
mov
ss
decb
and
cmp
push
lahf
xchg
ss
push
xor
mov
nop
cli
int
mov
inc
push
inc
je
xchg
pop
or
inc
inc
mov
or
mov
ds
push
fwait
or
aam
daa
jecxz
dec
icebp
call
sbb
ret
sub
mov
out
mov
mov
in
sbb
insl
push
test
movsb
cmp
lock
push
cmp
clc
cmp
popf
scas
pop
fst
std
mov
fadds
push
jno
dec
cwtl
adc
out
dec
mov
or
dec
pop
outsb
cld
push
pop
mov
mov
fimull
or
push
lret
add
mov
ds
pop
and
stos
aaa
jp
cmp
scas
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
arpl
jle
jl
jle
jge
ffree
cmp
inc
stos
sub
pop
add
mul
cld
pop
bound
hlt
leave
or
pop
dec
int3
mov
mul
cmp
fildl
mov
aad
mov
out
nop
sahf
sbb
lea
popa
rorl
pushf
insl
lcall
pop
xor
es
and
cmpsb
xchg
dec
aaa
loopne
movsb
out
mov
mov
pop
or
cs
ret
add
xor
lcall
push
jnp
sub
nop
fisttps
repnz
into
ret
data16
sahf
icebp
inc
aad
or
sub
add
push
cmpsl
frstor
inc
dec
stos
leave
cld
push
sbb
sub
jecxz
inc
das
fs
testb
mov
data16
sbb
addr16
mov
repnz
xlat
ljmp
enter
and
test
iret
insl
pop
sub
and
stos
and
or
into
test
stos
xchg
pusha
adc
xchg
dec
and
shll
cmp
add
xchg
sbb
mov
cld
mov
mov
cs
out
jmp
addr16
scas
cwtl
pop
mov
push
and
sbb
inc
loopne
push
ret
cmp
mov
mov
in
xchg
xor
dec
stos
dec
jb
shrl
push
js
push
dec
push
jl
push
aaa
in
loop
dec
pop
nop
sub
jnp
pop
je
mov
push
decb
lock
stos
test
ret
leave
and
mov
enter
push
mov
jae
or
pusha
cmc
add
bound
adc
jb
mov
call
lahf
or
xor
mov
xchg
push
mov
std
xor
xor
inc
pop
cmpb
pop
in
cmp
daa
mov
mov
incb
and
cmc
lret
dec
jmp
mov
mov
fstp
and
push
xchg
dec
inc
inc
inc
fistpl
fiaddl
pushf
jnp
ljmp
repnz
loope
lahf
mov
or
xor
xor
jns
iret
xchg
mov
aas
xchg
push
shll
dec
bound
flds
add
push
std
dec
sahf
push
push
add
int3
in
sub
jle
cmp
or
imul
mul
fwait
push
mov
xchg
or
es
loop
cmp
shl
cmp
inc
scas
cmc
aad
pop
sub
xchg
jbe
jae
addb
pop
int
dec
pusha
lods
lock
mov
inc
adc
or
or
sub
mov
scas
mov
fwait
in
loop
xor
push
je
adc
dec
dec
es
and
out
fiadds
mov
lcall
dec
rorb
out
xor
orl
les
loopne
fiaddl
inc
sbb
lret
aas
je
mov
ret
out
loop
cmp
jno
lods
or
dec
add
mov
cmp
dec
sbb
push
rcrb
outsb
sarb
arpl
out
aas
push
je
in
in
jbe
sbb
lret
add
push
popf
lods
int
mov
push
and
dec
aas
mov
push
cli
rcrl
xor
push
js
add
push
ficoml
mov
and
push
aad
cli
or
mul
ja
adc
cs
ds
dec
fwait
xchg
stos
and
jb
jge
loopne
mov
scas
fdivrs
push
push
lcall
push
sahf
ret
cmp
jbe
addr16
push
pushf
aaa
cmp
daa
out
add
in
mov
lods
addb
subb
mov
movsb
lods
sbb
int3
push
sbb
add
xorb
fcmovne
push
movsl
sub
add
out
cmp
xor
js
daa
add
sub
ret
cld
cmp
cli
nop
or
add
rolb
mov
ss
fwait
ds
or
outsl
or
add
pushf
addr16
cmc
ja
test
outsl
sti
and
jg
pop
mov
xlat
lcall
pusha
rcrl
xor
sbb
sti
stc
mov
push
and
out
das
fbstp
inc
xor
rcr
dec
call
sub
cmp
outsb
jnp
gs
or
push
pop
je
xor
xchg
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
cmp
mov
cmp
cld
pushf
imulb
cmp
ds
lahf
mov
mov
ds
call
pusha
cmpsl
xor
pop
xchg
bound
daa
dec
inc
out
int3
cld
fldcw
testb
and
out
pushl
adc
adc
idivb
arpl
lret
xchg
mov
pop
out
add
sub
mov
daa
mov
fisubl
xor
xchg
fmul
mov
xchg
pop
lret
out
xor
xor
jg
pop
repnz
enter
lods
jae
int3
sbb
or
fsubrl
inc
repnz
rcrl
shl
push
js
jo
out
sub
jle
repnz
xchg
dec
aad
pop
push
adc
cmp
outsl
daa
xor
dec
adc
or
cmp
incb
sbb
das
not
out
aaa
aaa
loop
stc
imul
inc
adc
jns
ret
add
xor
adc
int
inc
out
dec
aas
nop
test
inc
pop
int
in
sub
pop
dec
cmp
jecxz
jmp
fistpl
jmp
mov
push
inc
mov
xor
test
sbb
cmp
hlt
mov
test
stos
pop
mov
mov
js
push
test
shr
stos
out
movsl
jge
xchg
jl
cmc
mov
andl
and
mov
xchg
push
mov
outsb
leave
push
or
movsl
lods
outsb
dec
add
nop
xchg
adc
xor
inc
mov
sti
je
sti
mov
push
sbb
fisubl
out
and
out
sub
fwait
in
dec
or
jmp
movsb
popf
imul
inc
xchg
fldenv
bound
cmp
movsb
stc
out
mov
mov
sbb
rclb
xor
mov
inc
insl
mov
lahf
xor
and
mov
sub
and
divl
cmp
push
addr16
orl
loop
pop
or
cmp
mov
sbb
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
shrb
cld
jge
xchg
jle
cmp
ljmp
sbb
addl
ja
jo
inc
je
aaa
jecxz
out
fisubrs
or
inc
testb
nop
clc
pop
push
fstl
aaa
rep
fwait
or
inc
fstps
push
fstpl
jge
aaa
int
mov
int
int
mov
mov
add
add
jmp
dec
stos
aad
pop
lret
into
jne
jmp
fistps
out
mov
sub
jecxz
popa
out
lods
or
mov
push
add
icebp
cmp
push
push
xchg
jmp
cmp
push
fistpll
xchg
mov
mov
lretw
jb
repnz
and
jne
add
jl
sbb
daa
and
adc
xor
les
rcrb
test
cmpsl
inc
jae
or
addb
test
mov
fisubs
sub
fidivs
add
shll
stos
bound
mov
adc
jnp
push
xchg
call
wrmsr
fmull
imul
xchg
dec
enter
push
test
stc
push
mov
xchg
cmc
pop
ret
cmc
inc
fwait
int3
scas
add
pop
push
xor
int
bound
jp
insb
data16
push
adc
or
and
sub
lret
mov
ret
xchg
jmp
push
sbb
jae
mov
push
test
fdivrl
mov
add
pop
cmpb
aas
call
adc
sub
popa
into
jle
lahf
or
arpl
push
insb
aas
xchg
inc
add
fcomps
repnz
cs
aam
xor
ficoms
popa
das
xchg
mov
xchg
ljmp
push
loop
cmp
pop
add
mov
cmpsl
scas
mov
cs
hlt
movsb
push
pop
push
jne
cli
mov
mov
lret
pop
out
test
and
outsb
outsb
stos
test
push
add
add
mov
cmp
adc
push
cmp
aad
shrl
jecxz
imul
sbb
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
fisttpl
and
jle
jl,pt
jle
inc
int
dec
pop
push
or
mov
stc
jnp
ljmp
sbb
mov
dec
dec
aad
sbb
mov
jecxz
dec
pop
mov
leave
lock
gs
movl
mov
adc
mov
outsl
sbb
adc
push
stos
icebp
jecxz
adc
and
std
int3
xlat
out
and
cmp
pop
insl
jo
sbb
bound
fstp
mov
hlt
xlat
xor
out
pop
mov
push
inc
loopne
orl
fsubs
jo
push
insb
das
fcmovne
mov
sti
xchg
xchg
iret
adc
push
adc
adc
mov
fs
pushf
lret
push
sbb
hlt
pop
mov
insb
icebp
sbb
cmp
jnp
movsl
mov
lahf
in
movsl
push
dec
fistl
arpl
dec
xor
loop
mov
gs
filds
gs
mov
test
outsl
and
enter
xor
icebp
xor
pusha
sbb
add
mov
test
mov
aam
push
lea
fbld
ss
fs
sub
insb
mov
cwtl
pushf
or
pop
and
aam
test
or
leave
int
int3
test
and
imul
rorl
sbb
rcrb
cmp
xor
jns
psadbw
imul
and
shlb
out
shlb
lods
xlat
cltd
xor
mov
xchg
gs
mov
push
mov
ljmp
repnz
jp
cmp
and
dec
mov
mov
jns
lods
pop
pop
lea
faddl
or
push
xchg
sbb
sub
bnd
sbb
cmp
dec
sub
xlat
dec
push
or
cmpsb
int
lcall
test
dec
sbb
sbb
inc
jl
je
sub
rolb
push
filds
mov
insl
ss
xchg
cmp
int3
test
mov
incb
hlt
imul
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
adc
cmp
jle
cmp
js
enter
jg
push
jge
loop
xor
sub
out
lods
into
mov
or
jp
insb
das
or
jo
jge
jmp
je
popa
hlt
mov
or
mov
jecxz
push
repz
int
cmp
pop
mov
sbb
and
test
lods
mov
out
leave
rolb
loopne
mov
push
mov
arpl
jl
xor
rclb
ret
movsb
xor
push
mov
dec
fistl
xchg
or
add
or
rorb
and
inc
ds
sbb
mov
jle
scas
dec
xchg
adc
push
insb
push
frstpm(287
ljmp
xchg
xorb
xchg
dec
mov
cmp
sbb
and
cmp
sbb
cltd
cmpsl
rcrb
scas
xchg
jo
mov
inc
ss
mov
mov
cmp
outsb
out
inc
xchg
dec
xchg
add
add
mov
sbb
fcompp
jbe
jg
fnstenv
push
ret
dec
scas
cmp
std
pop
or
sub
mov
mov
lcall
test
and
ficomps
jbe
int
std
push
mov
popf
subb
stos
xchg
add
push
cmp
sub
xchg
push
mov
push
call
push
insl
out
clc
push
push
adc
sub
mov
mov
adcb
sub
sti
leave
js
xchg
int3
sub
rorb
scas
jp
push
pop
adc
jecxz
inc
jge
jae
jns
gs
test
pop
sub
in
jge
push
add
jno
and
stos
jg
cmp
test
xchg
cmp
xchg
gs
sar
dec
fimuls
insl
inc
sub
out
movsl
pop
sub
test
lcall
aad
add
mov
hlt
idivb
cli
test
xor
jae
icebp
push
push
push
sub
pop
daa
sub
sub
or
fbstp
jns
popf
pop
and
and
jno
jae
inc
fidivl
stc
ljmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
daa
out
ljmp
xchg
and
popf
sbb
shrb
fnstcw
shr
icebp
dec
sbb
mov
mov
mov
test
ja
icebp
shr
mov
adc
or
and
mov
dec
jmp
frstor
cwtl
insl
mov
pop
lods
adc
push
adcb
xchg
xlat
pop
les
fwait
cmp
scas
pop
adc
nop
mov
xchg
fldenv
lock
orb
cmp
scas
or
das
xchg
aad
pop
movsl
ljmp
cmp
dec
push
inc
clc
outsl
push
jmp
push
push
pop
out
jae
mov
cmpl
sub
pop
and
mov
aad
aam
fwait
sub
std
xor
gs
pop
cmp
repnz
int
cmp
push
decb
mov
cld
mov
loopne
xchg
mov
or
imul
jle
outsb
das
mov
stos
sub
ss
xor
mov
mov
inc
ljmp
push
cmp
cmp
cmpl
inc
xchg
mov
inc
xchg
inc
mov
add
cmpsl
movsl
push
cli
mov
lahf
xor
push
mov
repnz
mov
mov
scas
ljmp
adc
xlat
lcall
movsl
mov
cltd
loopne
loop
enter
push
mov
mov
int
imul
xchg
cmpsb
push
cwtl
inc
repnz
jmp
push
inc
bound
lods
stc
push
mov
outsl
cmp
mov
popa
pop
sub
fimuls
mov
sahf
mov
push
jmp
in
inc
fmuls
sbb
sahf
or
mov
pop
cld
inc
cmp
idivb
fidivs
or
incl
iret
imul
in
cwtl
add
lds
jbe
ret
add
pop
jle
mov
pop
int
add
cmc
mov
fcoml
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
neg
faddl
mov
jg
jle
mov
dec
mov
cltd
jp
pop
leave
fs
es
imull
push
pop
imul
cmp
mov
or
push
jmp
dec
dec
inc
mov
inc
mov
stc
add
push
add
arpl
xor
inc
arpl
sub
mov
sbb
push
cmp
cmp
xchg
in
cs
lock
xchg
and
adc
add
inc
lcall
fs
ret
nop
cmpsb
add
sub
sbb
mov
push
mov
pop
inc
lret
sbb
or
aam
into
mov
mov
ret
clc
add
or
sub
adc
cmpl
lret
test
adc
or
fisubrl
in
sbb
jo
cmp
pop
jb
mov
lcall
mov
sbb
xchg
cmp
jecxz
outsl
movsl
movsl
loope
dec
add
dec
sub
xor
out
xchg
vmovntpd
sub
and
subl
push
or
mov
jmp
cmp
shll
xor
stos
sarl
jle
adc
jle
inc
xchg
sub
mov
mov
fiaddl
sub
inc
add
jmp
filds
call
and
test
frstor
loop
aas
dec
cmp
adc
inc
jnp
rclb
sbb
adc
fistl
and
add
xor
cmp
sti
add
dec
mov
mov
imul
push
in
mov
daa
pusha
shll
pushl
xchg
bound
or
or
leave
sub
push
pop
addr16
loop
shlb
inc
sub
aaa
sub
xchg
nop
or
cmp
jl
jmp
mov
aaa
push
and
arpl
push
cs
mov
mov
outsl
nop
outsb
jmp
loopne
and
lock
mov
sbb
movsb
lret
shll
addl
cmpsl
fisubrs
addr16
out
cmovle
add
ljmp
icebp
push
jge
dec
jg
dec
ljmp
mov
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
imul
jle
lcall
daa
jmp
outsb
sbb
lods
scas
push
inc
rol
pop
out
cmpsb
push
movsl
rcrl
and
xchg
mov
icebp
pop
pop
ljmp
mov
aad
insb
add
inc
sub
fdivl
pop
stos
mov
mov
lahf
insb
dec
mov
enter
lods
repnz
xor
enter
fildll
mov
pop
sahf
test
stc
std
or
mov
add
dec
test
js
lock
stc
or
sub
sbb
jns
sub
shlb
sti
daa
inc
xor
mov
mov
ret
shll
ds
xor
lds
in
mov
mov
mov
push
push
add
stos
push
jl
sti
cli
ljmp
adc
mov
mov
js
in
jmp
pop
in
xchg
and
jo
mov
fsubr
mov
cmc
cmp
mov
into
mov
inc
sbb
enter
adc
movsl
stc
add
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
test
cwtl
jle
adc
jle
call
and
sarb
sub
inc
and
jo
std
loope
adc
fistl
jle
repnz
divl
jne
shll
popf
sub
cli
sbb
in
sbb
popf
pop
or
es
push
movsl
sbb
jns
pop
cmc
sahf
xchg
lret
das
icebp
sahf
and
dec
sahf
mov
mov
rol
mov
lahf
cwtl
test
test
add
clc
into
ds
rcrl
pop
insl
mov
mov
jl
js
xlat
in
sbb
cmp
daa
mov
cs
stos
sub
cmc
pop
jae
repnz
mov
cmp
or
or
bound
push
icebp
pop
pushf
jmp
cmp
and
xor
rcr
call
fcmovb
add
dec
pop
mov
push
pushf
xor
push
and
fiadds
bound
cmp
test
sub
jns
jecxz
ss
add
aaa
mov
cltd
add
rol
jbe
sbb
sub
inc
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
inc
cli
sbb
cltd
jle
adc
jle
pop
cmp
mov
push
add
scas
lds
push
or
and
stc
and
mov
inc
lea
xchg
adc
aam
cmp
sub
jae
mov
dec
dec
sub
adc
pusha
xchg
adc
lahf
in
ljmp
mov
xchg
xorb
or
fstps
push
in
pushf
mov
sub
mov
movsb
dec
mov
cmp
dec
shll
cs
xchg
movsl
inc
lods
mov
adc
mov
jns
sub
ret
push
js
fisubrl
mov
push
xchg
bound
sub
mov
mov
aaa
add
push
ja
aam
sahf
and
test
mov
pop
in
and
sarl
or
jno
out
mov
call
imul
xor
insl
dec
lea
cwtl
popa
jmp
push
shr
mov
mov
push
xor
adc
cmp
inc
in
xchg
add
mov
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
icebp
out
push
jle
aam
sub
sbb
push
loop
fidivrs
lahf
test
adc
mov
int
mov
xchg
popa
cmpsb
mov
push
inc
movsl
repnz
aam
sbb
psrlq
add
push
ja
inc
mov
stos
aad
mov
popf
mov
mov
mov
cmp
or
popa
inc
das
add
dec
push
mov
pop
adcb
adc
inc
shll
in
jmp
cmp
xor
jmp
xorb
dec
xchg
orb
xchg
aas
mov
adc
pop
les
jns
jnp
into
mov
js
data16
out
adc
jle
cmpsb
cltd
mov
scas
lret
mov
xor
mov
and
jg
insl
popf
sbb
ud0
outsb
rcl
inc
das
push
mov
sub
pop
sarb
and
push
sbbl
inc
add
sub
inc
jge
and
aam
mov
dec
push
enter
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
mov
jle
adc
jle
ja
repnz
push
xor
cs
cmp
pop
inc
out
lds
inc
data16
mov
mov
adc
push
sysret
inc
pop
and
ja
mov
movsl
xchg
inc
das
in
loop
and
push
inc
or
mov
imul
lods
push
push
out
cmp
and
dec
rcrl
push
push
filds
sbb
das
pop
lods
aaa
fbstp
cmp
lahf
jne
rorb
dec
pop
mov
sti
jmp
jnp
loope
stc
sbb
fucomp
cmp
cmp
popa
in
mov
mov
inc
in
jmp
jmp
sti
mov
inc
and
sub
sub
xchg
mov
movsb
jmp
cmc
int3
push
and
dec
mov
dec
cltd
movsb
outsb
mov
or
fwait
inc
test
mov
jp
nop
stos
js
nop
mov
lds
pop
inc
aas
pop
cmpsl
insb
mov
scas
jo
mov
gs
bswap
add
loopne
loopne
sub
and
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
popl
jg
jle
leave
or
lods
xchg
or
popa
sbbb
rclb
out
fcmovu
jge
or
fimull
cmp
ret
ss
lock
jbe
filds
xchg
pop
mov
add
push
push
jno
inc
shr
adc
scas
mov
imul
inc
nop
or
scas
enter
daa
mov
push
fcmovnu
push
aam
xor
in
dec
lcall
ret
test
mov
sub
push
fldenv
std
sub
js
or
adc
clc
mov
or
outsl
js
lods
xchg
mov
cmpb
mov
int3
fs
mov
inc
sti
jo
push
in
mov
fimull
xlat
sti
xchg
sbb
dec
jno
xchg
sbb
int3
jne
pop
pop
push
cmp
fwait
mov
cmp
inc
aas
jno
ret
adc
push
xlat
gs
mov
dec
faddl
sbb
mov
jno
ja
inc
shl
adc
fcmovnbe
inc
xchg
inc
mov
inc
aad
in
in
dec
ja
mov
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
cmp
setp
jle
pop
clc
popl
scas
sbb
mov
add
loop
inc
data16
cmp
push
dec
mov
add
daa
mov
cmc
ss
scas
jbe
movsb
sub
mov
mov
xchg
and
pop
out
mov
xchg
movsb
stc
push
sub
bnd
repz
push
scas
lahf
mov
sarb
push
xor
idivb
test
in
push
sbb
cltd
rcl
mov
cmova
pop
shlb
les
add
inc
lods
pop
mov
cmp
xchg
sub
cmp
and
ja
lcall
dec
mov
outsl
pop
cs
adc
xor
outsl
mov
and
repnz
sub
lahf
repnz
mov
js
pop
sahf
mov
mov
lea
addr16
sub
or
aas
push
cli
jl
adc
xchg
dec
or
pop
jge
cmpsb
mov
xchg
inc
mov
call
inc
and
test
mov
adc
xorb
dec
mov
mov
sti
or
mov
lods
mov
fisttpl
pop
lock
dec
cmp
add
jg
pop
pop
loop
shr
mov
and
stos
add
sbb
int3
xchg
jbe
lock
xor
mov
adc
mov
lret
adc
mov
and
movsb
mov
movsl
mov
cmpsb
inc
out
cmpsl
icebp
aas
leave
adc
repz
and
mov
in
lock
dec
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
dec
loopne
test
popa
cvtpi2ps
mov
xchg
jbe
jo
test
xor
aaa
idivl
xchg
cmp
imul
xor
scas
inc
in
in
sub
sbb
add
sahf
ret
mov
cmp
mov
mov
mov
and
ret
imul
sub
xchg
cmc
jg
enter
mov
mov
mov
cwtl
into
mov
sar
imul
xchg
inc
inc
jns
imul
inc
mov
ljmp
cmpsb
rcl
ss
pop
dec
mov
mov
sbb
loop
ret
xchg
sbb
aam
sbb
pop
adc
pop
fistps
repnz
in
xlat
dec
aad
mov
sub
jne
mov
or
xchg
nop
mov
mov
jg
shlb
and
repnz
clc
pop
orl
je
cmp
lcall
aas
jge
int3
leave
mov
jmp
insb
sub
pop
push
js
pop
mov
inc
dec
das
lahf
out
leave
push
popf
cli
shr
enter
outsl
pop
and
xlat
push
jns
xor
ds
ss
js
cmp
lock
dec
rclb
test
call
loopne
mov
sbb
dec
sti
aam
adc
or
add
sbb
xchg
sbb
mov
jecxz
loopne
lds
imul
and
fnstenv
cmp
scas
cwtl
test
or
dec
daa
adc
xor
scas
pop
cmp
mov
push
ffree
push
outsb
dec
mov
sbb
and
xchg
addr16
mov
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
push
rcl
mov
jle
ret
hlt
pop
push
lret
in
aas
sarb
push
out
sbb
addr16
mov
and
fdivrp
aad
dec
fldt
das
adc
iret
pop
xor
adc
imul
fnsave
and
jecxz
dec
cld
mov
fidivl
aad
mov
testb
ja
aam
push
dec
mov
xchg
orl
jmp
pop
add
and
xchg
push
and
leave
divl
xchg
sbb
lret
mov
subb
shrb
push
mov
mov
jns
mov
shlb
push
insb
add
test
into
jle
cmp
out
add
sbb
bswap
nop
dec
xchg
fdivs
and
cld
dec
mov
mov
shl
iret
cld
mov
into
inc
fldt
dec
xchg
call
aas
sub
xchg
xchg
dec
cmp
add
dec
xchg
or
cmp
je
pop
add
enter
mov
add
mov
xor
das
add
sbbl
nop
jecxz
push
jns
fldcw
or
fisubrl
push
rorb
shr
jl
std
adc
push
xchg
insl
mov
rcrl
hlt
mov
mov
sahf
add
inc
adc
mov
aad
mov
inc
nop
call
adc
or
cmp
xor
inc
aam
push
cmp
stos
and
xchg
movsb
mov
fucomip
cmp
int
cmp
shr
cltd
cmpsl
mov
push
xor
mov
inc
or
call
lret
add
clc
test
cmc
sbb
xor
pushf
xor
inc
or
dec
sbb
cmp
jbe
xor
mov
ds
mov
xor
out
les
mov
test
dec
mov
sub
pop
sbb
jnp
mov
loope
cld
sbb
adc
mov
sbb
add
xchg
mov
ret
shl
jecxz
test
and
loop
fadds
divl
jae
xchg
test
je
sub
or
cmp
ret
push
xlat
gs
xchg
xchg
pop
in
vpshld
dec
lods
or
mov
jle
roll
in
cmp
imul
fsub
jo
sub
cld
lods
dec
mov
xchg
push
jg
or
cmp
scas
or
cwtl
xchg
shl
or
lret
in
dec
mov
inc
in
mov
pop
les
mov
shll
xor
mov
test
fnstsw
dec
jge
dec
mov
xchg
or
and
xor
add
and
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
mov
lods
jle
jl
jle
mov
loopne
inc
addr16
pop
mov
inc
ret
dec
cwtl
adc
dec
adc
rolb
mov
movsl
lea
jg
sub
mov
push
jno
ljmp
or
push
pop
mov
jb
scas
push
inc
pop
cmp
insl
sysret
arpl
add
dec
sbb
inc
jb
outsb
xchg
and
mov
cmpsl
pop
jae
and
in
xchg
adc
push
lea
adc
lea
cmp
and
rolb
sbb
or
or
aas
sub
and
adc
or
rcl
in
mov
or
cli
jg
stos
gs
jp
aam
dec
rcll
jg
pop
mov
out
add
and
pop
shlb
sub
dec
sub
mov
lock
arpl
and
nop
inc
push
xchg
insl
loopne
mov
insb
into
xchg
int
xchg
lret
ja
and
rcrb
in
fcompl
fimull
stos
fstps
dec
jo
or
xor
movsl
xchg
pop
add
out
or
cmp
jae
rcr
lcall
insb
into
lcall
add
inc
xchg
inc
popa
hlt
iret
inc
pop
xchg
xor
nop
jge
dec
or
fistpll
cmpb
out
fwait
outsl
daa
repnz
fs
jecxz
cmp
cmp
lea
or
sub
scas
scas
icebp
mov
sbb
sbb
aaa
lcall
je
xor
mov
inc
and
mov
imul
iret
add
mov
jp
jle
rep
mov
neg
or
and
dec
lret
std
lea
ljmp
insl
pop
mov
movsl
push
adc
int3
inc
and
repnz
lret
xchg
ljmp
xor
ds
in
dec
pop
imul
insb
mov
cmp
lods
pop
mov
sbb
dec
and
cs
mov
mov
pop
cli
mov
imul
test
mov
mov
xor
sbb
out
stos
inc
push
xor
insb
pop
lret
inc
dec
cmp
test
test
pop
xchg
test
jo
mov
mov
jno
and
and
ja
ret
repnz
rcrl
sub
lea
adc
fs
xchg
mov
sbb
mov
and
add
subl
icebp
push
hlt
sbb
pop
or
bound
add
pusha
aam
jno
jecxz
enter
mov
scas
jle
xchg
inc
sbb
sahf
stos
scas
xchg
add
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
shrb
jle
add
outsl
pop
pop
pop
xchg
jno
pop
data16
mov
or
bound
and
sbb
dec
lcall
push
test
mov
rol
in
rcrl
movsb
push
in
mov
cmp
je
push
pop
inc
push
xor
mov
les
mov
or
fisubl
outsl
clc
xchg
nop
jecxz
mov
xchg
cltd
pop
sub
rcl
roll
xchg
int
mov
imul
xor
ret
mov
es
cmpsl
adc
add
ffree
cs
lahf
cmpsb
push
std
fcmovnbe
outsl
push
push
fsubrl
test
add
out
sub
fninit
repz
lock
icebp
outsl
sbb
test
mov
xor
std
stos
sbbl
sub
movb
push
in
movaps
push
jns
xor
jp
adc
cmp
jns
fidivrl
sub
in
or
int3
daa
rclb
stc
pushf
daa
call
jg
sbb
scas
cli
jb
aas
test
ss
shrb
pusha
dec
lods
mov
adc
push
les
inc
dec
xchg
jmp
sub
xchg
add
sub
loopne
sub
sbb
mov
dec
dec
dec
xor
pusha
xchg
inc
sub
pop
sub
into
cs
add
cmp
call
sahf
cli
aam
cmc
lahf
mov
dec
lods
lahf
jo
lods
mov
ficoml
mulb
mov
popf
mov
xlat
push
xor
ret
cmpsb
movsl
jb
bound
fidivrl
sarb
cmp
in
and
inc
fists
inc
aam
popl
das
cwtl
loope
test
test
rorb
sahf
icebp
mov
ljmp
icebp
mov
lret
jle
iret
scas
adc
jne
push
or
lret
inc
cs
mov
pushf
repnz
xchg
rcrl
mov
cmc
popf
rcrb
out
fldt
push
inc
insl
insl
mov
fadd
dec
pop
out
or
mov
mov
lds
mov
icebp
fwait
pop
lods
dec
cltd
jmp
lods
call
dec
cmpsb
out
int
inc
xchg
pop
sbb
cmpsb
stc
addr16
enter
fsubrs
cmpsb
dec
dec
ljmp
mov
icebp
daa
inc
mov
xchg
and
and
xchg
out
ja
test
pop
cmp
aaa
inc
int
imul
fwait
jle
cli
pop
les
hlt
in
push
bound
sti
sar
inc
pop
pop
dec
imulb
in
cmc
cwtl
int
xor
sbb
jl
lcall
insb
pop
nop
mov
pushf
pop
hlt
repz
adc
mov
cmpsl
popf
push
sti
adc
loopne
iret
lret
xchg
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
outsl
ds
jle
mov
mov
stos
cmp
inc
mov
lret
jno
sahf
sbb
lret
cmpsl
dec
sub
pop
mov
dec
xor
aaa
leave
add
mov
stos
inc
into
cmc
scas
mov
cmp
and
xchg
mov
movb
xchg
add
xchg
movsl
mov
push
shrl
cld
mov
or
test
out
jb
mov
mov
icebp
scas
dec
xor
shl
and
in
lock
scas
xor
clc
adc
push
arpl
sahf
int
add
jnp
dec
aas
test
sub
pop
in
sbb
mov
pushf
jae
loopne
inc
dec
lcall
mov
aaa
loopne
std
es
movl
ret
and
mov
mov
push
test
push
jns
mov
jecxz
jp
xchg
xor
pop
sbb
adc
sbb
cmp
negb
fmul
lods
jae
into
jp
sub
push
lea
mov
cmp
hlt
nop
xchg
jecxz
and
jb
and
adc
push
adc
mov
movq
negb
dec
jne
imul
inc
or
adc
rorl
mov
icebp
xchg
sub
inc
test
ja
sbb
inc
in
loope
mov
mov
add
pop
mov
xor
cmp
xor
insl
outsb
call
jne
xor
pop
push
sub
push
mov
call
add
orb
nop
scas
pop
inc
mov
addr16
mov
lds
aad
std
cltd
aaa
inc
push
add
fabs
push
je
fwait
jns
jmp
ja
and
push
sbb
sub
and
out
mov
iret
adc
in
push
iret
daa
mov
jo
push
aas
and
sbb
mov
outsl
fld
mov
mov
jb
cld
inc
dec
add
arpl
lret
xchg
push
push
add
pop
and
mov
adc
xor
sbb
inc
popa
leave
sub
push
lock
leave
inc
dec
jno
and
rcll
sub
filds
cld
data16
push
imul
mov
sbb
jns
and
ljmp
jbe
icebp
pop
popa
in
fwait
jle
loop
mov
icebp
mov
out
repnz
mov
into
mov
cli
and
push
and
sub
pop
movsb
and
daa
orl
jo
nop
xorl
pop
popf
aam
push
pop
cmpsb
push
sbb
push
movsb
ret
cld
cmc
cwtl
mov
xor
mov
jmp
or
pop
jno
xchg
add
stos
jb
mov
jle
jge
jle
js
lods
or
movsb
inc
mov
cmp
jmp
aad
in
mov
inc
ljmp
pop
jg
gs
cs
hlt
lea
mov
sub
push
jb
mov
pusha
lcall
jecxz
push
out
push
fadds
mov
or
cld
dec
push
pusha
lods
enter
add
out
aam
xor
test
mov
lret
sbbl
cmp
or
lea
aaa
enter
jg
testb
and
xlat
mov
fiaddl
sbb
or
mov
lcall
dec
aas
add
ss
rolb
test
inc
mov
subb
jge
test
xor
push
push
jmp
xchg
es
in
jg
test
pushf
cmp
mov
aam
leave
hlt
popf
mov
test
es
add
stos
jg
aaa
jne
inc
mov
leave
mov
sti
mov
aaa
loopne
sarl
dec
or
mov
idivb
push
pop
inc
ljmp
sbbl
shrb
or
lcall
sub
fwait
test
or
cmp
dec
and
lds
xchg
ja
and
mov
stos
fcoml
xor
int
out
ss
fbstp
std
test
gs
push
loop,pn
or
data16
xchg
adc
xchg
aaa
jl
and
fcompl
loop
xchg
or
and
push
ss
and
popf
jmp
cwtl
sbb
popf
cmp
das
out
dec
mov
pop
mov
jg
out
in
dec
cwtl
cmp
dec
loope
sarl
adcl
push
push
xor
fildll
add
sbb
cltd
adc
into
in
push
outsl
inc
popa
push
or
scas
mov
mov
or
call
mov
rcrl
cmp
cltd
or
lods
imul
and
bound
testb
push
fs
dec
data16
mov
cwtl
pop
mov
aam
lcall
jbe
xor
ljmp
es
dec
cmpl
hlt
notl
pusha
sub
or
cmp
mov
inc
fwait
pop
loopne
outsb
fsubrl
pop
sbb
fs
je
cmp
fstpt
cvtps2pd
imul
call
enter
cmp
insl
mov
jae
push
or
fistl
push
cltd
or
jecxz
add
pusha
sub
out
loopne
aaa
loopne
or
cmp
cmpsl
ss
xchg
aas
mov
fistpll
arpl
fdiv
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
sub
fdivl
jle
push
dec
push
mov
js
test
andl
movsl
mov
push
push
jno
jae
insl
cli
out
out
aad
fnstcw
fldt
in
out
popa
pop
and
lcall
movsb
push
gs
sbb
pusha
xchg
push
inc
xor
mov
les
inc
lret
bound
sbb
jle
sub
idivb
and
mov
fwait
test
imul
loop
lret
std
iret
and
xchg
dec
rolb
or
xor
adc
jmp
dec
dec
test
dec
out
ret
xor
add
or
movl
xor
stos
sub
flds
sbb
out
push
dec
inc
pop
popf
outsl
rcrl
push
cmpsb
and
jo
fcmovnu
int
aam
mov
dec
xor
repz
orl
es
test
fnsave
out
lcall
fcomps
inc
mov
lea
jp
jmp
xchg
push
int3
and
pusha
test
lret
or
sub
ja
lods
adc
push
push
xor
cmp
jnp
cltd
insl
test
cwtl
inc
lret
inc
stos
push
adc
mov
push
push
pusha
push
push
and
inc
hlt
add
int
mov
cmp
push
jp
lahf
cltd
inc
sahf
add
mov
fwait
push
xchg
addr16
sub
lcall
jmp
mov
bnd
test
dec
sbb
cmp
pushl
and
repz
adc
shll
cld
and
sti
std
inc
cmp
fwait
push
sub
out
insb
imul
test
push
sub
cmp
jns
jg
imul
int
xchg
ficoms
int
loope
lahf
jle
push
shll
pop
ret
aaa
cs
test
lods
push
sbb
int3
inc
push
in
or
fisubl
mov
push
cwtl
jmp
pop
jo
cmp
aad
sub
jbe
mov
pop
fwait
cmp
sbb
pop
dec
push
sti
shlb
cmp
pop
jg
or
add
cmpsl
sahf
sbb
iret
in
push
dec
sub
rol
pop
test
adc
push
inc
outsb
adc
push
adc
repz
int
sbb
lods
jecxz
das
dec
or
in
cli
add
mov
xor
insl
scas
ret
push
mov
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
test
outsl
inc
add
jle
test
jmp
mov
addr16
cmp
int
cmp
adc
xor
loopne
mov
or
out
mov
mov
lret
mov
or
loop
fdivr
es
sar
jne
out
movsl
dec
add
adc
cmp
cltd
pop
mov
jl
int
dec
dec
jl
adc
inc
push
pusha
inc
push
pusha
aaa
mov
cmp
jg
jae
cmc
addr16
push
dec
push
daa
ljmp
push
aaa
or
data16
popa
aam
lods
aam
sub
ret
push
popf
mov
sub
adc
jns
and
fs
sar
repz
das
icebp
and
pop
or
mov
andb
sti
jbe
lods
mov
out
or
mov
or
bound
daa
cmpsl
jo
xlat
cld
add
iret
popa
jp
sub
push
arpl
ret
rcrb
add
pop
inc
subl
mov
out
xor
dec
setno
inc
jb
jbe
jl
mov
mov
test
mov
mov
jp
popa
jge
cmp
cmp
sbb
sbb
xor
xchg
rclb
sub
pop
out
test
cli
jmp
int
jae
dec
outsl
cmpsl
cmpsl
fists
sub
dec
mov
jle
xchg
cmpsb
cltd
dec
aaa
mov
push
scas
and
add
scas
bound
push
lds
cwtl
xor
push
outsl
iret
adc
stc
test
in
cmp
inc
jecxz
roll
testb
and
mov
push
ds
pop
out
adc
jmp
inc
lea
add
push
movsl
dec
xor
jecxz
dec
push
test
ljmp
ljmp
sbb
adc
mov
mov
icebp
pop
add
add
or
xchg
dec
xor
cmpsl
lahf
xor
and
andb
es
sarl
mov
out
jle
shrb
js
jno
mov
ret
test
mov
mov
mov
jbe
movb
add
or
jo
adc
xor
ss
lret
in
out
add
test
or
push
xor
loopne
fdiv
cmc
int
add
cs
lods
pop
or
test
fdivr
jns
sarb
cmp
or
adc
cmp
xchg
fcoml
fdivrl
xchg
dec
ljmp
and
mov
add
jmp
add
fdivl
lock
xchg
pop
push
out
mov
jl
jle
push
nop
aaa
pop
pop
jp
cli
add
inc
add
add
jns
std
inc
sub
and
pop
xchg
imul
popf
push
incb
cmp
adc
xchg
aam
or
inc
or
dec
cmc
shll
fsubrs
pop
sub
or
movsl
cli
mov
or
ss
aas
jecxz
loop
icebp
push
fwait
pop
je
movb
shl
xlat
lods
or
fndisi(8087
cmc
mov
ss
lock
jl
inc
mov
inc
mov
push
rclb
dec
add
dec
outsl
sbb
pop
dec
dec
cmp
insl
adc
fwait
jae
xor
inc
pusha
incl
cmp
pop
popf
sbb
adc
cwtl
sub
loopne
or
inc
mov
add
and
mov
jg
sti
aad
or
xchg
test
insb
in
mov
sub
pop
call
and
jns
xlat
fwait
lods
lahf
xchg
ret
add
cmp
add
mov
es
or
cmp
mov
xor
mov
pusha
aaa
and
sti
je
add
fmul
or
pop
sub
insb
or
add
lds
sub
pop
lahf
jle
add
dec
iret
shrb
xor
push
sahf
int
pop
mov
mov
int
daa
push
cmpsl
xchg
mov
push
push
sbb
xlat
orb
insl
cs
fisttps
mov
or
test
fbstp
mov
scas
sub
into
orb
jbe
mov
out
add
in
imul
pop
inc
mov
shrb
or
hlt
sbb
pop
imul
ret
cmp
mov
not
test
mov
in
xor
das
add
or
or
sahf
sbb
in
pop
gs
leave
adcl
cmpl
fcmovnbe
stos
jae
mov
enter
icebp
in
in
pop
iret
lods
clc
insb
shlb
dec
xchg
jo
or
nop
int
mov
xor
mov
es
jg
test
jo
pop
add
xlat
sub
daa
mov
lcall
daa
cmp
xchg
dec
adc
xchg
jne
dec
jbe
mov
jmp
dec
int
dec
jl
cli
aam
ret
icebp
adc
inc
adc
lahf
test
pushf
cmp
loope
xchg
sahf
pop
xchg
shlb
xchg
mov
jmp
je
push
push
lock
outsb
dec
mov
xchg
jmp
jle
scas
jl
jle
mov
ljmp
or
lock
test
and
cmc
lcall
jl
lds
fildl
jle
or
inc
mov
sub
imul
shll
pop
pop
mov
rcr
test
ret
enter
lods
fwait
mov
mov
sub
push
cmpsl
jne
cmc
add
mov
stos
stos
jmp
adc
adc
cmp
push
xchg
lea
dec
sub
shlb
mov
push
push
push
cmp
inc
sahf
lret
mov
cmc
jecxz
enter
inc
repnz
loope
cwtl
sahf
add
xchg
pop
insl
sub
dec
mov
shll
inc
xor
sub
push
inc
cmp
push
je
jle
push
out
in
and
or
pop
fucomi
sbb
lret
sub
icebp
jge
lods
insl
lds
aam
adc
std
sbb
mov
aam
cwtl
mov
cltd
aaa
fiaddl
mov
xchg
fisubrl
int
les
push
add
or
data16
jecxz
push
mov
idivl
movsb
leave
arpl
insb
cmpsb
mov
push
sbb
xchg
repz
les
andb
xchg
pop
sub
jge
adc
jae
lea
call
in
pop
and
leave
inc
imul
pop
mov
or
mov
dec
mov
and
sbb
sub
test
pop
xchg
sub
cmpsb
call
aas
mov
cmp
cltd
mov
and
push
out
aad
or
jmp
jmp
sahf
xorb
mov
mov
movlps
test
aas
outsl
adc
mov
aad
outsb
pop
mov
rorl
push
out
int3
dec
add
and
mov
mov
lods
cld
xchg
mov
adc
pop
and
je
dec
stc
cmc
int
jp
leave
enter
arpl
mov
xor
lods
daa
sub
in
jns
mov
cmc
adc
ret
jns
pop
dec
cmp
push
inc
dec
xlat
pop
call
out
push
dec
pop
cli
mov
cli
lahf
mov
lahf
call
stos
xor
mov
push
mov
inc
cmp
popf
sti
dec
lods
cli
push
xchg
leave
mov
fwait
shrb
cld
lds
lock
and
pop
sub
and
aaa
loop
sub
imul
decb
sbb
pop
cltd
pop
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
add
xor
scas
jl
jle
pushf
cmp
mov
mov
jae
push
std
fistpl
jns
int3
mov
shll
sbb
frstor
add
jmp
xor
insb
adc
add
jp
sub
cmc
shll
or
bound
icebp
pop
mov
mov
cmp
fstp
shll
adcb
negb
and
sbb
fnstcw
jmp
in
jmp
jp
lret
mov
inc
jne
push
decl
bound
jge
repz
pop
and
aad
fsubrs
fcomp
jle
mov
mov
leave
mov
fdivs
repnz
fdivrs
pusha
leave
das
arpl
pop
jmp
out
mov
movsb
adc
loop
movsl
mov
jbe
push
jo
imul
mov
mov
xor
add
dec
jmp
pusha
cmp
divb
loopne
rorl
out
lds
or
jb
in
mov
push
int
adc
ss
hlt
mov
lods
into
inc
xchg
inc
inc
dec
out
fistpll
nop
dec
ljmp
mov
jbe
shrl
xor
in
sub
enter
daa
movsl
ret
cwtl
sub
jbe
sti
ficoms
dec
in
pop
cmp
mov
or
pop
sub
jg
sbb
and
jle
fprem
idivb
repnz
shr
int
inc
pop
dec
push
inc
dec
push
fwait
dec
cmp
gs
adc
pusha
inc
fildl
dec
push
icebp
fldt
test
fldenv
enter
setns
fs
imul
xorl
out
xor
mov
or
or
fimull
push
jnp
xor
mov
sahf
mov
fs
sbbl
int3
jp
loope
pop
popf
adc
shll
cmp
lret
popa
popa
int3
xchg
mov
xor
dec
movsl
inc
mov
sub
addr16
dec
dec
mov
pop
mov
xchg
cmp
outsl
cmp
and
mov
aaa
cli
imul
test
fdivrl
mov
xor
mov
mov
ret
iret
mov
pop
xchg
fistps
sahf
xor
push
mov
adc
xchg
decl
loop
mov
shlb
mov
test
lock
xchg
mov
stos
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
repz
dec
inc
jle
scas
jl
jle
jl
jnp
jbe
mov
dec
mov
aaa
sbb
xor
mov
shll
pop
bound
popf
call
mov
xchg
jb
fsts
push
pushf
cltd
mov
jle
adc
inc
je
subb
lods
dec
mov
incl
lock
add
jl
pop
push
and
jle
adc
adc
sbb
mov
or
cmp
jge
xchg
push
jns
dec
xorl
or
push
xchg
adc
in
mov
sub
negb
setbe
movsb
sar
aaa
js
inc
rcrl
scas
arpl
add
xlat
fcomip
orb
lock
std
lret
fldenv
mov
leave
cmp
jecxz
sub
gs
dec
mov
imul
dec
inc
adc
lret
fsubl
jge
push
xor
pop
push
push
fldcw
iret
adc
add
sub
jmp
stos
out
in
xchg
mov
ja
in
aas
inc
jl
out
mov
movsl
ss
cmp
fstpl
lock
sub
cltd
fwait
lret
mov
jmp
lods
mov
mov
cli
loop
adc
jmp
and
dec
jg
fcoml
cmp
sbb
ss
ja
and
mov
or
cli
cmp
popa
daa
cmp
out
stc
mov
loopne
cmp
or
cmpsl
jp
dec
inc
dec
imul
adc
nop
out
scas
push
addr16
loopne
das
pop
add
and
jmp
cmp
int3
imul
push
or
jl
stos
out
jne
xchg
inc
sbb
pop
scas
jmp
mov
pop
insb
movsl
movsb
xor
push
mulb
lods
arpl
dec
out
subl
mov
arpl
shr
cs
mov
or
loopne
ljmp
mov
pusha
cmpb
xor
mov
sub
pop
repnz
mov
filds
mov
fidivl
adc
jne
ss
push
loop
cmp
mov
lahf
cwtl
pushf
sub
mov
ret
and
imul
dec
or
fnstsw
scas
mov
pop
jg
push
dec
jle
and
pop
mov
mov
pusha
imulb
pop
fisttpll
mov
add
ret
push
pop
lret
and
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
sbb
movl
outsl
jge
cmp
popa
pop
xchg
mov
movsl
dec
and
sub
cwtl
ficompl
out
test
test
jp
dec
call
mov
jmp
arpl
jne
xchg
call
jecxz
imul
cmpsl
int3
in
das
mov
mov
inc
movaps
mov
sbb
push
les
iret
mov
hlt
pop
fsubrl
cmovo
gs
imul
cmp
test
fcompl
popf
dec
imul
call
fs
imul
daa
lea
sub
adc
push
pop
imul
ds
push
pop
fildll
push
inc
xor
mov
sti
mov
add
gs
mov
popf
leave
pushf
loopne
jbe
das
aam
int3
hlt
mov
stos
into
test
insb
inc
fcmovbe
xchg
cld
adc
arpl
sbb
shlb
push
das
lea
push
push
div
mov
mov
mov
lock
lahf
idivl
xchg
data16
adc
fidivrl
iret
test
inc
sub
inc
repnz
sbbb
lret
cs
or
xchg
neg
cmpsb
and
pusha
imul
push
adc
or
movsb
fdivrs
repnz
mov
sbb
popf
and
push
inc
dec
sub
loope
and
pop
lcall
jne
jg
aaa
or
xor
mov
inc
add
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
popa
push
jle
movsb
jg
jle
fldt
lahf
sub
cltd
sarb
xlat
pop
movsb
test
icebp
add
adc
sbb
sti
in
jnp
mov
test
pop
dec
adc
dec
push
pop
out
pop
js
sub
push
lret
je
sbb
stc
sbb
js
push
dec
enter
jae
jp
outsl
xchg
ja
js
sub
inc
xor
sbb
rorb
jl
jno
in
fwait
adc
sbb
jb
push
dec
jmp
call
aad
int3
adc
xchg
test
xchg
bound
pop
add
push
fnstenv
push
xchg
test
dec
xchg
iret
sub
pop
andl
mov
mov
inc
and
or
aaa
jmp
dec
mov
and
sbb
push
mov
pop
xchg
mov
pop
cltd
or
add
cmc
mov
mov
lods
and
push
daa
xchg
mov
test
push
jb
dec
ljmp
push
add
push
ds
jne
scas
call
aaa
das
ja
pop
inc
aas
xchg
out
and
in
loopne
jl
ror
nop
pop
hlt
les
int
adc
rorb
sbb
mov
push
lcall
andb
add
test
xchg
aas
cmpsl
in
adc
cmp
push
dec
lahf
ret
jno
test
jnp
xchg
add
sub
dec
fcmovb
or
adc
nop
les
and
push
leave
xchg
stc
jbe
incb
xchg
inc
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
xor
mov
add
add
jns
shl
jmp
mov
mov
mov
xchg
subb
cwtl
or
adc
mov
rolb
outsb
inc
inc
ret
mov
test
sub
testb
test
into
fiaddl
sub
mov
mov
insb
icebp
lret
or
push
lret
xchg
mov
dec
test
jae
add
pop
stos
adc
cmp
inc
mov
mov
pop
jne
jo
outsl
fistps
jecxz
int
inc
in
jo
jg
les
xchg
addl
loop
pop
cwtl
fstl
enter
mov
lret
adc
adc
cmc
mov
add
cmp
mov
sub
jle
and
imulb
add
jb
lds
add
adc
jb
sbb
jmp
push
iret
push
pop
and
pop
dec
push
mov
xchg
std
xor
pop
ficoml
in
jle
lcall
movsl
loope
add
add
sub
mov
pop
push
cmp
adc
fs
imul
mov
pop
inc
inc
and
pushf
pop
out
inc
test
dec
test
pop
xorb
loopne
jmp
int3
pop
and
jl
jcxz
or
pop
or
sub
mov
mov
rclb
sahf
mov
and
out
ficoml
or
in
es
fs
mov
in
and
aas
or
cs
lea
xchg
ds
popf
pop
mov
sar
pop
pop
xor
or
jnp
das
pop
sbb
xorl
lahf
test
addr16
cltd
mov
inc
out
pop
mov
mov
or
icebp
aas
addr16
aas
mov
pop
jno
add
bound
mov
data16
inc
push
xchg
inc
clc
xchg
ds
mov
adc
out
test
push
jns
jnp
lock
add
add
add
mov
push
xchg
subb
roll
add
mov
icebp
std
xchg
inc
test
hlt
pop
lea
enter
cmpsl
jmp
and
pop
mov
adc
mov
cmp
addb
popa
jne
lret
inc
in
or
roll
push
outsb
ja
push
and
andb
incl
cmp
mov
loopne
and
pop
enter
inc
cmpb
inc
jbe
xchg
dec
sub
inc
mov
mov
inc
adc
xchg
jns
push
or
ret
push
and
rcrl
out
mov
sbb
mov
lcall
inc
imul
test
dec
sub
in
sbb
dec
fsubrl
aaa
xchg
outsl
leave
mov
cmp
loopne
cmp
cltd
jae
js
adc
out
jmp
hlt
repz
nop
xor
repnz
rcrl
icebp
in
mov
fwait
cmp
mov
cmp
or
mov
fs
aad
mov
pop
mov
add
shrl
add
add
subl
roll
or
add
add
jb
inc
mov
jns
lret
shll
or
iret
pop
xchg
fnstenv
rolb
pop
or
sbb
cmp
movsl
sbb
fidivrl
divl
cli
lea
out
iret
jge
ja
lods
push
pop
inc
or
ljmp
movsl
mov
dec
int
das
fcmovu
mov
call
cmovs
rcr
lahf
andl
std
pusha
lahf
fnstcw
xor
pop
mov
lea
insl
jle
jb
mov
mov
rolb
mov
dec
popa
mov
xchg
pop
mov
xor
xchg
rolb
sub
mov
sbb
mov
outsb
cmp
cmp
mov
xchg
addb
dec
fbld
fucom
jl
jl
jmp
movsl
pop
xchg
pop
jge
add
scas
fstps
xchg
inc
pop
mov
mov
push
mov
pop
jae
or
pop
dec
or
sti
jl
lock
add
mov
das
sub
push
lahf
mov
dec
ljmp
or
inc
pop
pop
mov
inc
je
dec
pop
ljmp
fidivs
sub
loope
adc
in
js
test
jl
pop
jb
sbb
cltd
jo
je
fwait
mov
add
sbb
and
fwait
rclb
cmp
push
sub
mull
mov
cmpsl
pop
lods
mov
sbb
imul
jmp
or
adc
out
cmp
jns
mov
cwtl
mov
mov
cltd
jno
insl
stos
mov
mov
sub
jecxz
es
push
out
push
mov
mov
pop
int3
jp
aas
inc
insb
cmp
test
adc
loop
aas
std
pop
dec
dec
jecxz
jns
cmp
fisubrl
push
xchg
ljmp
add
add
cmc
insl
cmc
out
lcall
enter
push
push
pop
cmc
add
add
inc
stos
adc
mov
pop
mov
pop
and
mov
jmp
or
movsl
jmp
mov
jecxz
pop
scas
mov
pop
xchg
ret
addr16
push
inc
inc
ret
aam
push
into
adc
and
jecxz
jns
scas
notb
adc
sarb
jl
xbegin
test
test
pop
ds
repnz
mov
sarl
push
mov
mov
data16
cmp
push
xor
lock
pop
scas
fcoml
sbb
jae
mov
mov
add
dec
dec
inc
mov
fs
add
pcmpgtd
shrl
mov
cs
outsl
lea
pop
in
lods
xchg
push
inc
call
sub
dec
test
pop
stos
or
inc
lret
addr16
or
add
jle
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
push
sub
dec
jae
out
sbb
xlat
gs
jp,pn
mov
loope
cld
pop
or
scas
push
inc
push
dec
cmp
pop
mov
into
jns
cli
push
pusha
addl
pop
pop
lret
daa
jo
cmp
icebp
ds
mov
cmpsb
xchg
aam
add
out
fisubl
pop
into
in
pusha
das
cld
jp
bound
cmp
aam
cli
loop
subb
js
out
cli
cmpsb
cmp
pop
push
and
sub
fistpl
mov
test
daa
dec
fsubs
xlat
sbb
test
mov
add
loopne
jp
adcb
xchg
das
inc
clc
pusha
ljmp
imulb
insb
inc
inc
cmp
lcall
mov
call
movsb
ret
and
cmp
insl
adc
dec
xor
sbb
fdivrp
inc
fwait
and
aam
lods
push
movsl
cmpsb
jecxz
inc
mov
mov
or
and
scas
sti
jle
pop
push
pop
out
mov
add
add
jbe
sub
lock
in
mov
ret
jmp
call
hlt
pop
mov
daa
add
xchg
pop
cmp
mov
and
push
and
mov
test
pushf
outsb
xor
mov
add
test
xchg
add
scas
shll
jp
scas
jo
sub
jl
xchg
cld
out
inc
fidivrs
jbe
sahf
jmp
scas
ja
cwtl
test
mov
stos
subl
jo
xor
les
xor
sbb
mov
ret
in
mov
or
fistpl
mov
pop
ja
cwtl
aas
or
xlat
popf
aad
or
and
lret
cmpsb
jl
mov
das
mov
insl
sarl
inc
cmp
pusha
cld
stc
push
push
mov
jge
lds
add
inc
sub
popa
lds
mov
out
and
sbb
jle
mov
lods
xor
cltd
cli
xor
push
adc
dec
ret
add
lahf
fnstcw
ss
lahf
stc
bound
lret
loop
fiaddl
add
mov
aaa
xor
push
pusha
std
push
xor
xor
sub
nop
mov
jg
mov
shrl
arpl
fisubl
imul
push
xchg
sub
lcall
mov
sub
lcall
add
les
jno
insb
pop
test
clc
in
push
aad
mov
fcomps
push
daa
lret
and
mov
pushf
push
aaa
lds
sub
push
push
adc
fsubs
dec
ljmp
cmpsb
inc
mov
and
lahf
push
lock
imulb
cmp
mov
mov
or
pop
movsb
lahf
cmc
loopne
int3
add
ja
js
mov
aaa
mov
cld
mov
lods
aaa
xchg
inc
inc
xchg
dec
lret
jge
in
and
sbb
int3
push
movsl
int
dec
out
sbb
push
add
add
push
jl
jle
insb
out
adc
repnz
or
add
add
in
sub
jp
outsb
outsb
scas
add
inc
inc
or
adc
das
inc
and
bound
aaa
scas
pushf
mov
nop
int
cmp
ror
iret
bnd
or
fisubs
sbb
add
in
sbb
and
lock
add
data16
mov
aam
aam
mov
sarl
lock
push
cmp
or
call
subl
jns
js
lea
aaa
add
das
add
inc
mov
adc
push
pop
inc
mov
sbbl
and
jo
incl
cltd
push
inc
call
into
pop
jno
pop
jmp
int3
push
lcall
mov
mov
mov
ficoms
enter
and
scas
pop
test
mov
add
xorb
cltd
call
jl
sti
lods
dec
sub
imul
add
fwait
mov
in
xor
adc
push
faddl
add
sub
dec
jns
mov
adc
xchg
jns
lret
or
movsb
xchg
lahf
daa
movsl
cmp
jns
loopne
pop
repz
cmpsb
or
lea
cs
dec
add
das
fmull
fldl
xchg
xchg
inc
jae
adc
cmp
jl
addr16
jmp
push
mov
mov
imul
push
aas
outsb
mov
dec
iret
dec
pop
and
pusha
iret
andl
pusha
jmp
sbb
test
mov
pop
jp
scas
dec
inc
cwtl
xchg
push
mov
mov
fstps
sahf
push
or
scas
cmp
xchg
pop
add
jle
sbb
insb
pushf
pop
cmp
xchg
mov
mov
int3
sahf
mov
cmp
fscale
dec
je
ret
loopne
cmp
fistps
cmp
movsl
jno
add
fsubr
push
ret
sbb
aaa
jge
ffree
pop
cvtpi2ps
add
aaa
data16
jne
mov
lcall
add
add
ljmp
or
out
push
sbb
cwtl
jns
aaa
dec
clc
dec
add
push
mov
mov
dec
movsb
inc
pop
jno
in
int
sub
sbb
fidivrl
dec
mov
stos
jmp
mov
and
cmp
dec
push
pop
xlat
stc
loop
nop
test
jmp
dec
push
pop
adc
cs
inc
das
loope
iret
mov
mov
lcall
bound
dec
shr
sbb
inc
inc
insl
sub
shll
push
xor
ja
mov
push
lock
aaa
leave
sbb
xchg
popf
dec
pop
mov
xchg
xorl
or
inc
cmp
sbb
clc
repnz
sbb
inc
ljmp
mov
std
mov
jg
mov
and
loopne
les
ss
mov
fdivs
add
add
add
jnp
sti
xchg
lahf
mov
jmp
sbb
add
add
mov
cli
cmpsb
std
inc
pop
scas
in
and
add
fcomps
icebp
in
std
pop
movsl
xor
and
ret
fcoml
mov
pop
das
jecxz
into
lret
or
cli
pop
and
pop
out
mov
jbe
push
mov
adc
push
and
mov
xchg
imul
pop
lret
sub
and
pop
outsb
bndldx
dec
adc
icebp
fildl
sub
lahf
fcoml
pop
or
loope
mov
mov
xchg
fwait
adc
or
aaa
nop
orl
imul
fmul
lahf
int3
fldl
ljmp
leave
adc
addr16
ret
push
inc
pop
or
out
jg
xor
push
push
jmp
imul
xchg
ret
lods
bnd
pusha
mov
ss
add
mov
ljmp
pop
pop
push
lcall
add
sub
pop
sarl
mov
ret
add
add
cmp
xor
ss
mov
out
mov
and
ss
ss
jb
xor
cltd
pusha
fadds
dec
nop
fcmovnb
leave
pop
jmp
pop
test
pushl
clc
cmpsl
mov
xchg
mov
mov
inc
lods
jmp
lret
push
andl
ffreep
rsqrtps
hlt
mov
cmp
int3
xchg
out
test
or
mov
flds
je
fisubrl
pop
xchg
push
xchg
filds
cmp
js
jmp
jnp
sub
jae
xor
xlat
popf
sbb
pop
sti
cmp
mov
and
jge
mov
jg
popf
mov
shll
aad
and
jge
push
cmp
cltd
push
faddl
insl
jecxz
inc
imull
in
sub
cmpl
mov
ret
cmp
pushf
hlt
jb
cmp
add
repz
std
repz
mov
add
add
mov
roll
inc
add
dec
nop
data16
xchg
inc
mov
dec
sub
sbb
inc
movsl
sub
mov
push
sbb
pop
lock
scas
mov
outsb
aas
scas
adc
or
pop
xlat
jns
fnstcw
daa
push
jnp
adcl
fmuls
cmpsl
repz
mov
dec
icebp
inc
pop
lock
jns
xor
xor
js
arpl
out
pop
sti
ds
and
mov
bound
daa
mov
xor
or
sub
out
adc
test
cli
mov
push
sbb
inc
insl
and
cs
shrl
andb
push
xchg
mov
icebp
adc
popf
repnz
decb
cmp
pop
out
inc
gs
jecxz
mov
lahf
xor
iret
cmpsb
imulb
sub
sub
add
in
sub
cmp
arpl
je
xor
add
add
push
xchg
jne
cmp
repz
inc
decl
and
cmp
xchg
fnstcw
mov
das
pop
mov
in
out
push
jp
push
bound
call
shlb
out
loop
out
cltd
loop
dec
add
cmp
xor
inc
out
faddl
jp
fs
sub
cmp
loopne
rorb
push
push
movsl
scas
xor
stos
adc
mov
pushf
or
repnz
lds
jb
scas
out
ss
mov
int
and
sub
outsl
jbe
icebp
inc
sub
and
pop
pop
cmp
mov
inc
mov
inc
scas
cli
add
mov
and
and
lcall
mov
push
fs
sbb
adc
mov
mov
sub
push
loopne
mov
rclb
sbb
je
data16
addl
loope
pop
and
lret
dec
jp
jecxz
mov
add
insl
lcall
mov
inc
sub
inc
fbstp
sub
add
add
pop
sbb
into
jnp
dec
lret
jl
and
inc
inc
add
push
mov
addb
xor
loopne
jno
fcomp
inc
dec
xchg
and
fldl
in
leave
and
inc
jo
bound
out
pop
sub
or
xor
jnp
adc
add
rep
shrl
push
mov
pushf
loop
mov
and
popa
lret
into
sti
mov
inc
in
push
xlat
leave
fxch
jo
dec
jp
frstor
fmuls
fisttpll
pop
adc
sbb
imul
sbb
inc
jecxz
mov
pop
fstl
aas
mov
jne
inc
mov
xchg
xchg
test
mov
dec
mov
add
pop
xchg
jg
jo
ret
and
sub
jecxz
xchg
cmc
xchg
mov
aam
rclb
add
pushf
icebp
shll
negb
test
stos
jecxz
jnp
mov
mull
mov
mov
add
add
xchg
in
mov
incl
rcrl
out
xor
add
add
hlt
dec
fucomi
mov
cwtl
xchg
call
inc
daa
xchg
fucom
loopne
insb
pop
or
dec
fucom
in
push
jne
cmpsl
jmp
js
gs
mov
hlt
test
lds
push
cmp
arpl
mov
inc
jl
mov
and
sti
and
xlat
ret
cmp
aam
sub
jae
pop
es
in
or
jno
dec
jecxz
push
in
out
in
or
in
mov
insb
movsl
sub
jo
lock
mov
in
mov
repnz
pop
fwait
inc
mov
mov
jbe
subl
mov
out
xor
add
push
cmp
out
fbld
sbb
ret
push
ret
ja
loop
mov
lahf
loope
jmp
mov
repnz
jnp
sbb
sahf
popa
insl
loope
fs
nop
jecxz
adc
dec
jb
xchg
xchg
nop
push
cmp
add
inc
mov
in
negl
sub
movsb
aam
or
ss
add
mov
dec
pop
les
stc
stos
push
popf
push
add
icebp
cmp
jne
psubusw
ja
mov
sub
push
xor
mov
push
les
jns
fiadds
in
lds
shl
aaa
adc
pop
pop
call
sbb
aam
pusha
push
pop
push
and
adc
inc
lcall
lret
inc
ret
jg
mov
cli
adc
out
xor
in
push
xor
sbbb
and
cmp
push
mov
idivb
sti
jmp
imul
cmp
stos
push
insl
es
in
mov
sub
pop
cltd
pushf
xorb
and
in
pop
mov
and
xchg
mov
mov
hlt
jnp
push
cwtl
std
hlt
pusha
mov
rcrl
outsl
dec
sub
cmp
fwait
arpl
add
add
mov
stc
dec
push
fmull
mov
push
cmp
add
add
pop
iret
out
adc
sbb
add
sti
inc
arpl
sub
xor
fisttps
adc
jo
xor
sub
push
pop
xchg
xchg
cmp
xchg
add
add
sub
outsb
je
bound
push
stos
push
ds
arpl
and
fucomi
cld
sub
ljmp
dec
cmp
xor
das
mov
ret
xor
sbb
add
push
hlt
mov
dec
dec
cmp
call
fucomip
rclw
jbe
mov
push
sub
rcl
fldenv
xchg
fimull
outsl
aas
dec
pop
jbe
inc
std
lret
add
insl
adc
inc
mov
and
in
shr
or
outsb
test
andl
orb
push
xor
xchg
inc
mov
fists
or
movsl
cltd
dec
jbe
xor
lea
inc
xchg
mov
add
add
adc
push
push
push
mov
xchg
add
add
xchg
test
jnp
insl
sub
mov
cmp
xchg
push
cmp
sub
lahf
sbb
push
scas
sub
or
pop
and
sbb
push
pop
jl
and
arpl
insb
xchg
movsb
stc
inc
jno
daa
cwtl
outsb
gs
and
clc
and
jmp
pop
sbb
dec
mov
dec
ret
pop
aas
sahf
push
pop
or
cmc
push
ret
sahf
pusha
jl
sti
aam
mov
cwtl
dec
ds
mov
shr
mov
in
pop
ss
in
jmp
test
movsl
movsl
push
pop
dec
subb
into
cmp
cmp
mov
xor
sbb
push
es
mov
push
fidivl
mov
inc
xor
pusha
sarl
and
insl
int
xchg
push
mov
mov
mov
push
cmp
lds
add
add
repnz
add
pop
lcall
les
add
inc
out
add
into
push
push
mov
aaa
sbb
lea
cmp
sub
inc
push
or
jle
sbb
cmp
push
test
push
aam
fldt
lahf
lock
mov
lods
call
adc
jmp
jne
jnp
int3
out
push
popf
push
or
pop
jp
pop
enter
or
je
movsb
mov
insl
lods
pop
mov
loop
adc
add
pushf
aas
repnz
dec
flds
sub
push
dec
loop
stc
adc
xlat
inc
mov
inc
jge
les
dec
pushf
in
jmp
mov
outsb
cmp
xchg
pop
dec
mov
mov
gs
daa
mov
mov
xorl
ja
or
cmp
out
jne
idiv
in
pop
add
xor
stos
or
popf
fs
cmp
adc
scas
cltd
xor
shll
xlat
or
push
imul
push
lret
add
rcll
daa
and
add
add
mov
push
decl
jp
test
dec
call
add
xorb
pushf
mov
mov
pop
clc
xchg
pop
js
xchg
mov
adc
mov
add
add
mov
inc
popa
xchg
sub
or
test
je
comiss
adc
push
sahf
cmp
cmpsl
pusha
fildll
sarl
cmpsb
fistpl
int3
inc
in
and
aas
popa
fisubrs
dec
bound
add
mov
dec
and
and
sar
rorb
insb
ja
leave
fists
jno
push
fmuls
stos
repnz
adc
test
fsts
jbe
leave
dec
out
add
enter
mov
sbb
inc
or
mov
sbb
push
add
add
in
in
mov
nop
repz
int3
dec
pop
push
lahf
cmpb
xchg
mov
mov
sub
enter
jbe
inc
mov
ficoms
mov
add
add
jmp
in
push
sub
or
add
in
dec
cmp
or
xor
xchg
imul
andb
shrb
dec
ret
jbe
insl
inc
cmp
jnp
sbb
es
xchg
idivl
iret
inc
aam
xchg
les
or
out
inc
rorb
leave
pop
mov
or
inc
fwait
push
mov
test
aad
xchg
daa
sbb
cs
jo
dec
push
pushf
jmp
out
jnp
cmpsl
add
push
ljmp
mov
mov
popf
mov
cld
xor
or
lods
mov
mov
mov
fistpl
lods
cmpsb
sbb
mov
mov
pop
cmp
test
popa
out
mov
inc
fsubs
add
xorl
and
add
sar
dec
gs
and
and
ds
pop
add
add
outsb
xor
mov
lcall
ljmp
mov
cltd
pop
fbld
sub
pop
push
push
xchg
out
and
out
pop
ret
test
xchg
sbb
in
popf
cmp
addr16
jl
in
pusha
or
test
push
jae
sbb
mov
cmc
mov
sbb
or
ret
and
das
shll
push
inc
jno
inc
xchg
xchg
mov
movsb
int3
push
xor
push
out
movsb
daa
mov
insb
ret
pop
pop
pop
and
mov
ret
mov
push
inc
stos
stc
inc
cmc
and
rcll
fwait
jbe
inc
lods
lret
mov
call
repnz
movb
xchg
cmp
pop
adc
inc
bound
pop
pop
push
cwtl
sbb
mov
pop
setl
sarb
sti
mov
ja
xor
dec
imulb
sub
dec
les
in
cmp
je
cmp
repnz
push
mov
out
or
xchg
add
add
inc
ror
lock
jnp
xor
xchg
mov
scas
das
pop
jmp
add
aad
cltd
mov
xchg
aaa
jl
int
xchg
mov
aam
and
add
stos
call
sbb
outsb
loop
pop
into
dec
inc
fiadds
cmp
xchg
inc
cld
add
lret
in
rorb
cwtl
or
jno
cmp
mov
mov
push
cld
mov
xchg
and
cmpsl
hlt
or
popa
std
aam
adc
cwtl
push
dec
flds
mov
mov
push
mov
adc
and
stc
mov
xor
or
push
mov
fstp
sahf
push
pusha
xlat
rorl
jmp
dec
sub
mov
jno
pusha
ficoms
outsb
mov
fnstenv
xor
mov
and
imul
cltd
add
adc
mov
mov
stos
ss
add
aaa
add
inc
jge
stc
in
add
scas
ja
add
and
repz
fisubs
mov
add
clc
leave
inc
fsubr
and
lods
daa
mov
fstl
mov
mov
add
xlat
or
xchg
mov
mov
xor
inc
cmp
jmp
add
mulb
pusha
cmp
xchg
push
adc
push
inc
cmpsb
test
pop
jle
and
mov
fs
push
fldln2
sbb
ss
xor
cmp
std
scas
and
sbbw
or
cwtl
ja
pcmpeqd
test
mov
sbb
adcl
gs
push
adc
mov
out
add
fucomi
or
sahf
cwtl
test
dec
add
or
nop
out
inc
stos
xor
orb
push
fdiv
test
mov
repz
sub
jno
xchg
nop
mov
jno
incb
lods
invlpg
inc
jb
in
inc
iret
rcrl
xchg
ljmp
push
dec
shlb
add
out
sbb
jp
or
arpl
add
add
into
sub
repz
push
jp
mov
inc
cmp
test
out
jno
sub
pop
push
mov
mov
and
jo
inc
mov
push
jl
sbb
jno
adc
dec
out
or
or
or
rcll
ss
scas
mov
push
jle
jno
or
nop
cmpsb
test
lods
inc
out
ret
loopne
iret
jl
insl
jbe,pt
mov
mov
int3
fsubrs
dec
jns
mov
adc
pop
and
repz
movsl
adcl
lea
adc
cmpsb
inc
mov
mov
jmp
add
aad
mov
hlt
pop
das
fsts
push
pmaxub
lock
or
das
mov
mov
xchg
sbb
inc
push
and
pop
pop
stos
test
adc
divl
xchg
and
push
mov
es
sbb
movsb
out
imul
ljmp
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
repz
cmpsl
push
jp
ret
icebp
sbb
fidivs
jmp
pop
pop
inc
lds
clc
loope
push
ds
ljmp
sahf
rorl
cmp
int3
mov
add
dec
ljmp
jb
xchg
stos
push
xchg
rcrb
and
and
jl
adc
mov
cli
ret
js
out
ljmp
inc
dec
xor
mov
sbb
pusha
lods
dec
ret
rclb
fs
pop
adc
jecxz
add
mov
shlb
push
dec
mov
inc
lea
in
fsubl
decb
inc
dec
push
js
jmp
outsb
and
rclb
sbb
subl
mov
fwait
roll
dec
out
into
pop
ret
sub
pop
in
mov
testb
enter
pop
sarl
lds
fwait
add
add
pusha
rorb
cmpsb
mov
out
xor
add
add
add
imul
cmp
andb
dec
icebp
pusha
int3
adc
dec
data16
clc
mov
rclb
push
js
or
testl
sub
jge
sahf
popf
or
cmp
lcall
gs
jae
mov
ja
lret
fwait
imul
fs
cmpsl
icebp
fldcw
sbb
cld
xor
jb
mov
popf
inc
cmpsl
xor
shlb
pop
inc
inc
pushf
push
ds
or
inc
cmpsl
or
dec
adc
mov
xor
xor
int3
cmp
outsl
push
insb
xchg
xchg
loop
pop
or
pop
cmc
pusha
in
dec
push
nop
cmp
adc
push
adc
orl
ljmp
loopne
add
xor
dec
adc
jne
les
add
cld
sub
pop
aaa
arpl
pop
mov
cmpsb
mov
pop
add
add
gs
testl
sub
add
popf
mov
sub
shl
mov
or
rorl
lods
cmp
out
jp
lods
cmp
lods
roll
andl
mov
add
nop
xchg
sbb
or
jae
jle
rolb
pop
mov
shrb
test
push
mov
mov
mov
popa
jp
outsl
cmp
mov
repnz
xchg
shr
les
add
dec
data16
into
shl
imul
mull
setge
aad
shll
aam
adcl
lods
cmp
push
pop
jge
scas
lcall
xchg
and
mov
pop
dec
out
rorb
adc
es
pushf
sbb
out
pop
sbb
mov
fwait
mov
negl
outsb
lods
sbb
sub
stos
sub
sbb
jg
push
mov
sub
insl
dec
mov
add
add
xchg
mov
mov
pop
das
mov
icebp
add
add
sub
inc
scas
movsl
movsb
lret
fcomi
inc
cli
icebp
mov
dec
ljmp
je
inc
repnz
into
enter
adc
jl
in
stos
jno
cmp
or
gs
push
adc
ljmp
add
push
xor
cwtl
add
push
mov
mov
or
mov
mov
ja
or
clc
jmp
fld
mov
cwtl
push
push
sbb
sub
push
pop
push
nop
jbe
pop
imul
mov
xor
test
or
push
dec
je
fidivl
inc
push
aad
and
and
and
mov
push
sarb
pop
fwait
xchg
scas
in
push
clc
mov
aam
jl
imul
lods
mov
jnp
scas
outsb
sub
push
gs
out
inc
lret
dec
scas
jae
push
cmp
iret
call
add
lods
or
addr16
push
dec
shrb
lock
mov
pop
xchg
add
add
add
fucomi
xor
aaa
mov
repnz
add
add
dec
pop
into
add
inc
rorb
out
push
mulb
repnz
mov
aad
fbld
sub
loopne
enter
xchg
cmc
push
xor
cmp
cltd
xchg
xlat
lcall
mov
or
leave
xchg
add
outsb
dec
lds
out
lret
out
js
push
aad
enter
xor
and
or
out
cmp
in
or
xchg
lock
dec
lcall
popf
add
data16
loop
clc
jle
xchg
ret
sbb
add
add
or
fs
lods
push
adc
addr16
push
imul
jb
pop
loope
sbb
out
adc
cmp
sub
jecxz
push
adc
jecxz
push
jge
lods
pop
mov
imul
bound
inc
dec
popa
xchg
cmp
cmpsl
lahf
xchg
sbb
cmp
xor
pop
stc
pop
mov
add
push
inc
pop
jns
aas
loopne
sub
jg
repz
add
rcrb
sbb
mov
inc
mov
push
pop
scas
or
icebp
and
js
clc
adc
shlb
ficomps
pushf
das
mov
leave
in
dec
stos
movsl
sub
pop
dec
adc
jmp
cli
lds
ror
xor
icebp
lds
and
xchg
nop
inc
mov
pop
or
inc
arpl
or
rol
clc
insl
adc
stos
mov
ficompl
cwtl
push
add
or
pop
xorl
test
out
movsb
xchg
lcall
imul
sbb
cmc
pop
sub
inc
out
out
mov
test
mov
test
xor
stc
fdivs
mov
imul
mov
pop
inc
vmovhps
rorl
mov
stc
test
pop
push
into
inc
xchg
adc
mov
xchg
lret
adc
test
fcmovu
add
add
jnp
mov
push
and
add
out
pop
pushf
jle
daa
ja
iret
xchg
mov
out
adc
xor
and
inc
jge
add
add
xorb
lods
lahf
enter
inc
xchg
inc
nop
and
rcrb
dec
mov
imul
hlt
cli
xchg
fwait
sbb
or
testb
cwtl
cmpsl
sub
push
pusha
dec
aaa
dec
push
and
rcrb
push
push
hlt
dec
dec
xor
push
inc
jb
add
xor
xor
cmp
daa
loope
cld
ret
mov
or
adc
fs
mov
test
jl
fwait
popa
testb
add
mov
int3
and
mov
icebp
dec
das
lods
push
inc
mov
mov
fmuls
pop
and
out
jle
cmp
xor
xor
pop
stc
scas
mov
and
out
sub
inc
ds
adc
sahf
aaa
mov
push
push
inc
aam
push
les
repz
add
add
xlat
pop
xlat
jg
mov
shlb
mov
add
add
loopne
push
mov
jecxz
outsb
jp
dec
inc
cli
or
adc
push
arpl
sbb
or
sub
mov
andb
push
cmp
dec
pop
xchg
fstp
pushf
mov
jno
and
iret
push
add
es
aad
out
out
xor
sbb
mov
xchg
sub
shlb
ret
adc
inc
jle
mov
mov
cmp
cld
icebp
dec
xchg
pop
int3
or
adc
shll
pop
cmp
sbbb
loope
fisubrs
sub
bound
jbe
jg
sahf
cltd
jne
repnz
icebp
mov
cmp
push
jbe
dec
in
sarl
loopne
repnz
out
push
and
lock
or
inc
add
pop
shlb
xchg
lock
std
push
inc
mov
ret
adc
aaa
sub
rolb
cmp
add
xchg
mov
idivl
scas
int3
pop
push
nop
testb
add
pop
mov
mov
sub
cmp
pop
mov
adc
sub
lea
xchg
xor
push
dec
push
mov
jp
mov
popf
or
sub
movsl
aam
or
inc
push
cli
cmp
jmp
call
fmuls
not
mov
cmp
cli
mov
aad
sub
aam
out
addb
push
sbb
pushf
imul
gs
push
fwait
cmpl
cltd
adc
lret
repnz
dec
test
fnsave
ss
lea
lds
mov
mov
addb
mov
add
icebp
rcll
inc
lea
lret
clc
aaa
in
mov
test
dec
int3
mov
arpl
std
sbb
add
cld
or
mov
add
jecxz
xchg
lods
xor
jo
mov
scas
mov
test
mov
fcmove
push
jg
xchg
testl
add
mov
dec
into
daa
lret
loopne
popa
and
test
rcrb
lret
rolb
es
and
sub
add
mov
lea
jbe
sub
pop
jb
xchg
ffree
mov
jmp
arpl
pop
idivb
adc
insl
lahf
add
movb
or
mov
mov
aad
adc
add
lods
push
and
mov
scas
ret
xchg
adc
cmc
pop
pusha
push
pop
aas
fcoms
fsts
mov
bnd
dec
idivb
cmp
sub
xorl
popa
add
fwait
and
pop
xor
inc
in
lret
xor
add
loop
mov
mov
dec
outsb
fldenv
imull
stc
lock
xor
or
inc
loopne
bound
out
mov
add
add
push
pop
push
jmp
shlb
xchg
add
inc
hlt
or
xchg
mov
out
movsl
cmpsl
adc
iret
cwtl
mov
add
cwtl
hlt
test
jmp
subl
mov
cmp
xchg
fnstcw
cmpsb
loopne
outsb
or
xor
out
jae
jo
int3
add
cmc
cmp
or
aad
jne
in
mov
in
pushf
imul
aad
jp
xchg
lds
dec
insl
inc
and
stc
or
addr16
mov
push
lods
cli
mov
sub
test
mov
bound
cmpsl
cmpsl
mov
inc
add
lods
xchg
push
lcall
fstl
filds
idivb
nop
stc
sarb
xor
popa
dec
push
xadd
in
sub
out
sti
lods
xchg
int3
fldt
pusha
mov
ret
xchg
sbb
hlt
add
lock
push
push
jmp
cmp
inc
push
fidivrl
lds
jecxz
loop
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
imul
add
int3
sbb
mov
add
pop
inc
mov
sub
aad
dec
mov
shl
push
bnd
xor
jg,pn
inc
test
das
fmull
or
out
sti
and
outsb
mov
daa
cli
cmp
outsl
push
jg
cltd
lcall
scas
jb
nopl
nop
stc
cwtl
lret
lahf
fsubl
fdivr
pop
push
adc
dec
movsl
push
inc
inc
cwtl
cmp
push
jns
xor
mull
jo,pt
jle
sub
cltd
cmp
scas
adc
repnz
loop
int3
mov
jae
jge
jl
xchg
ret
bnd
sub
lahf
cli
cmp
cld
pop
pop
dec
test
or
filds
aam
ficomps
jmp
and
push
jne
inc
dec
mov
bound
ljmp
pop
pusha
hlt
mov
and
cwtl
adc
insl
cmp
pop
in
repnz
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
jbe
icebp
add
pop
inc
shl
pop
sbb
and
mov
push
ljmp
push
add
or
aam
xchg
and
inc
ret
ja
scas
dec
fucomp
stc
sub
imul
leave
hlt
iret
addr16
dec
cwtl
or
adc
dec
sbb
and
cmpsb
lea
ficoms
mov
gs
mov
or
sub
lock
sub
pop
jbe
lock
jmp
jnp
push
xchg
adc
hlt
cmp
cld
xor
dec
adc
push
xchg
lock
lcall
jmp
push
cld
lds
lcall
sbb
and
stc
inc
pop
xor
sbb
mov
mov
popa
add
inc
stos
add
mov
xor
cmc
daa
in
or
jbe
shld
mov
lret
pop
jb
add
mov
nop
test
aam
int
aaa
das
aam
aas
cmp
add
mov
xor
and
and
stc
out
idivl
lds
je
mov
test
rorl
xchg
int
out
aad
test
sahf
jbe
ljmp
leave
fsin
push
cmp
push
stos
push
sbb
ret
sbb
cmc
lea
aad
xor
sbb
leave
xor
push
pop
push
and
iret
mov
jbe
or
push
push
dec
cmp
sbb
call
ds
push
jmp
mov
push
push
xorb
cmp
jp
add
or
mov
lret
loope
out
insl
cmpsl
faddl
sub
inc
outsl
mov
push
inc
jno
enter
push
cs
inc
dec
inc
xor
cmp
xor
stc
mov
sbb
out
rolb
mov
or
sub
jns
or
add
fcoml
add
add
arpl
addr16
sub
jnp
push
inc
scas
cld
add
add
shl
enter
jmp
insl
cld
aam
loopne
inc
repnz
repnz
test
inc
and
cmp
mov
dec
rolb
js
stc
dec
pusha
out
fidivs
rclb
imul
shrl
fdiv
jnp
ficoml
sub
fst
xchg
xor
adc
xor
add
cmp
sub
add
xchg
mov
push
jmp
xchg
jmp
sbb
out
mov
inc
fwait
es
fistps
pop
outsb
daa
out
cmp
adcb
push
and
ja
seta
push
push
in
outsl
push
aad
and
scas
adc
sbb
push
mov
fimull
cwtl
das
pop
add
aam
iret
test
push
aam
dec
mov
xor
add
dec
mov
pop
mov
lret
jle
mov
inc
flds
daa
ds
pop
roll
pop
mov
ret
sub
add
out
cmp
cmp
pushl
xchg
xor
cmpsb
lret
mov
add
add
jb
pop
lods
in
js
jp
jbe
je
push
jl
or
jge
daa
clc
rclb
xchg
mov
sbb
mov
push
jne
xchg
pop
add
std
adc
sbb
icebp
and
fcmove
mov
in
ret
mov
out
repz
call
cmpsl
scas
cmp
in
rorb
push
pop
clc
jno
cmp
cmp
mov
icebp
fcoml
aaa
mov
fwait
jle
loopne
pop
icebp
adc
dec
roll
out
lahf
jbe
pop
pop
push
push
sarl
cmp
sub
jecxz
mov
mov
xor
insl
inc
pushl
cltd
addb
jge
pusha
enter
rcr
pop
loop
pop
popf
mov
les
call
out
sti
clc
insb
into
call
pop
and
test
dec
lea
mov
or
mov
dec
roll
add
test
push
scas
mov
xor
mov
add
adc
cmc
mov
pop
pop
mov
push
and
das
hlt
sbb
cmpb
in
stos
jnp
sarl
jg
add
loop
addr16
sub
nop
test
stc
jl
sub
adc
adc
aad
pusha
and
xchg
adc
jl
fidivs
add
out
pop
stos
scas
adc
sahf
pop
cltd
movsl
out
and
mov
scas
or
sti
mov
mov
pop
push
shll
cmc
sti
stc
pop
mov
xchg
out
xchg
mov
xchg
data16
fstps
repnz
pop
dec
mov
pushf
test
cmp
cli
push
and
subb
jnp
xchg
xor
or
shrl
pop
sbb
add
rorl
sbb
mov
or
pop
std
data16
push
sub
das
xor
jl
fldt
leave
pop
fistpll
xor
add
add
aaa
xchg
and
movsl
mov
mov
mov
rolb
incl
add
jl
test
fcompl
mov
push
and
cmp
addr16
rcrb
cmp
jge
and
js
daa
dec
mov
mov
push
decl
test
jo
arpl
incl
mov
fldl
les
into
xlat
jp
mov
push
dec
jl
aas
cwtl
mov
jns
out
sub
ret
jle
sub
insl
gs
xchg
ss
jae
shl
jmp
jns
pusha
xor
out
push
rcl
lds
imul
out
add
jns
add
adc
rol
jg
jns
jmp
in
test
out
icebp
loopne
mov
mov
mov
movsb
or
ljmp
movsl
adc
sub
mov
push
push
mov
and
jns
adc
lret
sub
add
fdivl
mov
cmc
xorl
ret
add
cltd
in
xchg
fadds
pop
jns
inc
push
xlat
in
out
roll
cmp
dec
mov
lcall
pop
sarl
adc
cld
ror
int3
adc
mov
aas
pusha
je
mov
imul
lret
andl
adc
lods
adc
jg
push
jbe
lods
cmp
loope
std
sub
cmp
lret
fadd
iret
sub
pop
xchg
dec
mov
arpl
dec
pop
addb
xchg
popa
std
mov
clc
dec
sub
dec
scas
je
lds
in
outsl
add
rol
inc
stos
xor
dec
sti
xor
inc
sahf
lcall
cs
dec
pop
arpl
shrb
in
adc
dec
stos
cld
sbb
insl
add
push
sub
mov
stos
stc
aad
fsts
sub
sti
int
fdivs
shll
jmp
js
add
inc
stc
mov
mov
lods
imul
mov
add
add
pop
mov
inc
stos
idiv
mov
mov
mov
xor
mov
and
mov
push
mov
nop
hlt
xchg
mov
negb
mov
rolb
outsl
and
or
fsubl
je
ss
mov
mov
jmp
mov
and
add
pop
push
in
insl
mov
pop
outsl
cmpsl
add
mov
jp
movsb
fstl
pop
cwtl
movsb
das
pop
rol
lcall
xchg
addr16
dec
adc
dec
or
sti
add
push
mov
fisubrl
inc
ljmp
repz
in
push
es
orb
adcl
incl
cmp
adc
push
jmp
rclb
and
aaa
test
mov
or
xchg
adcb
dec
nop
mov
clc
push
add
add
mov
cmp
sarb
add
add
jmp
aaa
inc
push
cmp
insb
add
aad
mov
mov
popa
push
lahf
in
add
popa
jle
xor
push
jo
dec
xor
sahf
orb
xor
in
mov
inc
add
jmp
repz
out
mov
insb
jge
in
insb
mov
mov
dec
pop
int
pop
push
cld
pop
out
dec
arpl
out
mov
fidivs
loope
adc
fdivrs
cmp
pop
sub
cmc
sub
dec
cwtl
scas
adc
sbb
sti
inc
jbe
and
stos
dec
add
inc
dec
scas
out
movsl
and
mov
bound
imul
sub
fistps
out
outsb
or
pop
mul
std
xchg
pop
fsubl
imul
lret
inc
sbb
sbb
shll
sub
stos
or
shrl
ljmp
insl
add
push
sub
xchg
enter
push
fbld
xchg
lods
inc
roll
add
add
and
or
std
data16
ja
test
xor
fdivrs
or
sub
rcrb
or
adc
imul
and
sbbb
sbb
stos
mov
mov
sub
fld
divl
jns
int
fpatan
and
sbb
data16
mov
in
loope
lahf
inc
test
fisubl
xor
jp
inc
and
xor
outsb
cltd
push
in
push
enter
jmp
mov
roll
int3
push
out
aam
adc
notb
jle
dec
in
aaa
sbb
xor
xor
cmpsb
fsubrl
addr16
inc
lcall
pop
leave
dec
stc
mov
jo
lcall
mov
cmp
cwtl
int3
lcall
jle
sbb
sbbb
mov
stc
ret
and
imull
and
rol
fcoml
mov
testb
mov
add
add
into
fwait
add
mov
aam
add
add
or
adc
sub
or
jno
int
jno
xchg
pop
push
or
out
dec
movsl
lret
pop
jo
stos
adc
in
loope
or
sub
lods
adc
mov
mov
sbb
cmpsb
mov
addr16
hlt
cmp
or
sarb
rolb
or
push
pop
xor
or
xor
push
mov
pop
ja
add
flds
fwait
dec
into
pop
cli
push
ret
pop
dec
xchg
sbb
add
jp
xor
lods
cmp
mov
dec
add
dec
sbb
sbb
inc
addb
sub
sub
lahf
jmp
push
mov
es
mov
arpl
mov
jl
cmc
test
lret
pop
jmp
dec
xchg
pop
push
out
int3
loope
inc
pushf
lds
stc
sbb
push
int3
loopne
stc
add
adc
lahf
push
push
inc
push
mov
sub
push
cli
xor
push
lret
shll
mov
dec
add
add
xor
mov
pop
sarb
in
jbe
and
add
add
imul
stos
outsl
xor
insb
mov
mov
adc
mov
adc
add
mov
jo
enter
mov
shlb
pusha
xor
adc
popa
mov
mov
pushf
daa
pop
lods
cmp
fldenv
inc
mov
pushf
and
jl
fldenv
test
inc
lret
mov
lea
adcl
jmp
push
mov
adc
mov
fstpt
or
int
lods
imul
adc
aaa
imul
jae
nop
fisttpl
mov
into
dec
out
jno
push
pop
inc
and
pushf
out
and
adc
jg
and
popf
les
scas
iret
ret
ljmp
shrl
sbb
vpsubsb
idivb
dec
sbb
bound
sub
scas
xchg
imul
scas
repz
xor
add
sti
inc
out
aas
mov
rorb
push
add
add
sti
jae
cwtl
insb
loopne
and
dec
loopne
repz
lock
inc
sbb
xor
stos
and
lods
cmp
iret
pavgb
push
imul
setb
mov
ret
adc
cwtl
test
nop
adc
adc
inc
mov
hlt
ja
in
sbbb
xchg
std
mov
adc
xor
test
cmp
dec
jge
in
mov
aam
add
test
shll
cs
loopne
or
int
fucomp
push
jo,pt
pop
inc
cmc
xchg
mov
es
lods
jge
push
arpl
insl
sbb
adc
idivl
pop
mov
xchg
push
dec
mov
popa
pop
inc
es
ss
sub
pop
orb
sbb
and
pop
jb
dec
ret
enter
lods
insl
pop
cltd
mov
jno
add
add
bnd
dec
leave
and
es
in
add
add
mov
push
pop
mov
push
aad
cltd
cmp
or
dec
out
ja
aam
pop
xor
xor
stos
cmp
mov
pop
call
jnp
fs
adc
fidivrl
xor
fs
sub
fnstenv
sub
mov
xchg
shl
and
lock
dec
pop
ss
push
and
mov
je
out
pop
cltd
andb
mov
lcall
pop
loope
stc
icebp
lahf
push
jne
sahf
bound
sbb
push
xorl
mov
push
bound
stos
add
lods
aam
shrb
push
push
subl
xorl
ficomps
rorb
cmp
and
adc
rorl
xor
scas
jg
inc
into
xor
mov
movsb
ja
leave
out
cmp
in
lods
jle
loopne
and
jmp
cmpsl
inc
cli
adc
add
add
in
out
ja
filds
scas
ja
or
add
imul
push
js
push
mov
shl
add
sti
xor
jge
scas
shll
je
test
cmp
xor
or
xor
stc
mov
xchg
addl
enter
and
mov
xchg
rorl
repnz
xchg
int
pop
loope
pusha
jae
cmp
scas
rorb
es
xlat
jp
test
mov
xchg
mov
fldt
loop
jle
shlb
or
jle
sbb
dec
push
fadds
mov
in
lock
inc
movsl
dec
adc
pop
lds
mov
jl
inc
arpl
lret
pushl
xchg
cwtl
push
shl
subl
mov
push
inc
jmp
rolb
mov
shr
ja
stc
mov
jle
mov
mov
push
adc
scas
adc
in
mov
add
add
pop
in
inc
push
or
cmp
or
add
mov
adc
ss
lahf
sahf
in
aam
sub
mov
xor
add
sbb
insb
sarl
ret
lcall
jno
pop
jo
inc
dec
sub
mov
out
mov
stc
jae
xor
jl
add
in
add
jno
push
es
pop
imul
pop
imul
int
dec
push
in
mov
bound
shl
ret
xlat
lret
dec
and
insl
test
bound
data16
adc
lret
ficoml
arpl
jle
jnp
push
sub
mov
dec
adc
orb
cmp
sbb
adc
dec
test
dec
fxch
lret
insb
xor
cli
das
ret
cmp
mov
pop
jl
xchg
lret
push
fwait
pushf
in
outsl
jb
lods
iret
outsb
inc
jo
pusha
jg
jle
loop
pop
push
pop
icebp
push
dec
cmp
and
and
loop
add
add
jg
neg
pop
daa
inc
pop
icebp
adc
or
add
lods
std
lea
mov
int3
adc
lock
sahf
popa
leave
xor
ret
sahf
mov
shl
lds
clc
movsb
mov
jnp
ret
loop
sti
lea
fists
cmc
imul
sahf
jbe
leave
stos
dec
jnp
push
mov
fmuls
jl
loop
enter
mov
push
outsb
test
add
mov
arpl
jno
int
outsl
mov
stos
jnp
jno
add
test
fsubs
cmp
out
and
pushf
jb
movsl
scas
enter
add
movsb
out
movswl
xlat
fisttpl
sub
cs
sbb
nop
push
enter
aaa
xchg
cmp
out
ja
daa
addr16
js
pop
lcall
push
inc
and
ret
test
adc
sbb
xor
dec
cmc
cmc
xchg
in
mov
jno
mov
cmp
push
sldt
mov
mov
push
xchg
sub
add
add
sti
jg
cmp
je
outsl
lret
adc
or
add
xor
jo
push
in
cli
imul
loop
nop
ss
aaa
daa
mov
xor
fiaddl
lcall
jge
je
loopne
xor
dec
sbb
movsb
adc
insb
pop
fucomp
pop
mov
iret
push
iret
stc
dec
shll
jle
lret
or
or
imul
into
cwtl
jnp
sbb
and
arpl
adc
test
fwait
sub
fsubrs
xlat
gs
push
mov
cmp
or
sbb
cmpsl
or
inc
jo
push
repz
gs
push
xchg
notb
mov
jo
popf
and
xchg
test
shrl
xchg
cwtl
cwtl
mov
pop
fisttpll
cmp
or
pop
ret
and
or
add
xchg
lea
ds
les
mov
xor
and
add
add
jnp
fstp
fcompl
daa
mov
inc
decb
add
sub
dec
movsb
fldcw
xchg
imul
sub
loop
dec
insl
mov
mov
mov
stos
mov
shlb
movsl
jecxz
lock
jecxz
xor
sbb
into
sbb
lahf
pop
xor
inc
enter
mov
pop
mov
aam
fisubrl
fwait
sbb
jle
mov
shlb
in
fidivrs
movsl
gs
and
push
ja
ljmp
das
loopne
pop
cmp
sahf
ljmp
jge
sbb
sbbl
lret
cli
cmp
sbb
lret
lds
push
mov
lea
adc
and
mov
sub
jmp
popa
scas
movsb
outsb
andb
pop
arpl
in
fadd
xchg
sub
xchg
xor
and
add
cmp
and
jge
push
mov
adc
xor
out
add
mov
jno
std
outsl
mov
add
in
addr16
add
add
add
je
inc
xchg
jecxz
js
xlat
adc
loop
stos
rclb
pop
xchg
movsl
xor
xor
movsb
sahf
fidivrl
mov
arpl
in
sbb
lods
and
mov
into
fdivs
fcmovnbe
loop
jmp
hlt
rorl
daa
rcr
or
xorb
js
or
outsb
push
adc
ficomps
fdivrs
pop
je
jmp
in
stos
lock
outsb
les
mov
leave
hlt
sub
dec
fistps
cmc
adc
test
mov
mov
mov
or
sbb
mov
out
fwait
jno
outsl
adc
scas
sub
jl
fwait
les
cli
fisubrl
sahf
test
mov
mov
jns
push
inc
repz
movsl
in
jne
mov
jns
pop
nop
daa
lcall
movsb
push
push
sbb
jmp
inc
mov
jmp
mov
cmpxchg
call
cmp
add
jmp
fstp
sbb
add
pop
aam
sbb
pusha
test
pop
das
stc
mov
add
arpl
and
adc
inc
push
jno
in
in
push
cmp
pop
push
xor
out
sbb
pop
lret
cs
jmp
push
cwtl
dec
lods
out
add
leave
xchg
add
or
rcr
push
xchg
dec
sahf
sbb
xor
jnp
test
int
push
push
push
sbb
sub
mov
pusha
xchg
mov
ss
inc
jb
dec
fcoml
out
jae
inc
cmp
bnd
stos
ret
int3
inc
dec
shl
xor
push
ja
cwtl
mov
cmpsb
adcb
inc
mov
out
aaa
dec
xor
xchg
in
sub
push
dec
adc
rorl
outsl
xlat
inc
lds
mov
adc
loope
dec
adc
sti
sbb
test
stos
aaa
cmp
loop
or
pop
stos
sub
les
xor
xchg
lds
rcll
xor
add
add
das
repnz
mov
cmp
rcrb
fwait
push
mov
push
jmp
inc
adc
lods
cmp
out
cwtl
iret
cmpsb
in
testl
lret
andl
push
shll
jp
dec
cmpsl
out
add
adc
xor
mov
mov
push
out
mov
cmp
or
dec
insl
sub
jl
lcall
jmp
mov
dec
mov
pop
jmp
dec
enter
out
lret
ret
lds
jbe
or
add
fwait
dec
mov
mulps
rclb
lret
mov
insl
or
neg
mov
shl
ljmp
push
mov
inc
and
or
les
shll
out
out
aam
sbb
cmp
jne
clc
dec
lods
nop
outsb
push
mov
int3
fstp
imul
add
dec
cli
inc
jg
int
xchg
lods
or
movsb
call
add
jge
test
add
cmpsl
push
xor
and
xchg
fldl
jp
add
add
xchg
scas
adc
or
popf
pop
mov
jp
add
fucom
iret
inc
arpl
stos
rep
add
and
pop
pushf
dec
movsl
xchg
jmp
mov
xchg
frstor
fwait
inc
mov
outsl
fcoms
mov
dec
fwait
scas
js
leave
jno
in
orb
pop
in
sbb
adc
mov
gs
test
fcmovbe
and
fs
movsl
fdivl
movsb
fdivl
sar
mov
push
stos
js
mov
cmp
cli
ljmp
bound
roll
jmp
out
mov
fildll
mov
out
clc
inc
mov
ss
inc
adc
mov
dec
adc
xchg
pusha
mov
or
and
add
add
xchg
std
cmp
jle
fistpll
ficoml
mov
pop
adc
add
inc
jnp
jnp
pop
mov
data16
mov
subl
jb
lds
jno
leave
fmull
subb
clc
push
ds
sbb
push
je
lods
nop
loope
mov
orw
adc
pushf
inc
mov
xchg
or
mov
sbb
or
and
inc
std
rcl
mov
adc
mov
lea
and
dec
fstl
jl
and
movsl
aad
push
js
out
lret
jbe
aam
mov
mov
outsl
pop
shlb
push
stc
push
pop
mov
in
push
mov
lahf
testl
sti
scas
insb
add
jns
clc
fdivrs
fwait
daa
pop
cmpsl
adc
jmp
and
ss
je
movl
pop
das
mov
xchg
cmp
add
cltd
sti
mov
jnp
jge
mov
dec
fldcw
into
xchg
add
iret
xlat
ficompl
inc
iret
mov
xor
adc
add
and
mov
push
es
sub
sti
mov
popa
sbb
lcall
outsl
lods
jae
icebp
pop
push
push
adc
or
xchg
inc
push
aam
movsb
mov
scas
add
xchg
addr16
adc
mov
cmp
xorb
dec
ret
xor
test
shrb
testb
ja
and
mov
sub
ret
add
or
jge
cli
or
add
fldt
mov
add
mov
sub
sub
movups
fstl
xchg
je
rcrl
roll
push
add
shll
lock
into
jns
dec
mov
shrb
pop
add
arpl
pop
mov
cmp
repz
ja
xchg
addr16
popa
loopne
adc
mov
mov
push
pop
pop
xchg
in
mov
jb
mov
jns
mov
pop
lods
insb
add
dec
call
shr
icebp
adc
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
out
xor
adc
add
adcl
ret
scas
adc
cmpsb
xchg
lcall
lret
lcall
dec
jne
add
jb
fisubrl
out
movsl
cmc
leave
or
cmp
ljmp
in
cmpsl
push
dec
cwtl
outsl
das
cwtl
ds
call
adc
cli
js
and
inc
outsb
sbb
mov
sbb
add
add
dec
adc
inc
out
xor
aas
loopne
pop
dec
clc
push
aad
sti
outsl
imul
xor
jge
dec
mov
xchg
cmpsl
loopne
popf
in
icebp
xlat
mov
or
in
mov
or
adc
add
repz
sub
cmp
jbe
ret
gs
mov
mov
or
clc
popf
pop
outsl
popa
sub
xchg
add
or
and
fwait
test
add
cli
jle
dec
jg
loope
rcrl
sbb
mov
out
test
add
add
std
sbb
stc
cld
or
mov
aaa
arpl
adc
add
mov
mov
push
icebp
xlat
adc
push
pusha
daa
ret
xor
jbe
fnsave
push
inc
dec
call
pushf
mov
aam
push
push
dec
sub
lods
adc
fwait
jp
push
mov
cltd
add
mov
repnz
jle
sbb
jle
cmp
fstpl
pop
sbb
fwait
in
dec
push
pop
sbb
sbb
or
cmp
aad
popa
jo
adc
xor
rolb
jmp
jae
add
xchg
in
movsb
adc
push
gs
or
in
mov
inc
jb
mov
sub
fadds
das
mov
cltd
jge
mov
jle
mov
jnp
scas
mov
js
pop
setg
fstl
je
lahf
imul
dec
ficoms
sbb
subb
add
mov
iret
loop
mov
or
imul
jae
mov
and
add
negl
adc
pop
xchg
cmpsb
mov
push
add
add
cmp
test
jne
daa
inc
ss
out
gs
pop
stos
stc
scas
push
sarl
cmp
or
xchg
sbb
ds
shlb
lds
jbe
pusha
clc
fs
mov
push
fcmove
mov
push
add
movsl
sub
mov
out
mov
mov
test
mov
add
aam
inc
cli
lods
stos
les
js
add
stos
jmp
dec
aas
test
and
orb
mov
xor
push
pushf
xchg
movsl
push
add
mov
dec
inc
insb
sbb
mov
nop
mov
pushf
filds
mov
xchg
in
faddl
or
xor
and
les
cmp
or
jecxz
iret
test
popa
sbb
notl
mov
pop
and
or
pop
xchg
dec
inc
cmp
subl
rcll
insl
mov
push
pop
push
and
mov
cmc
dec
jns
lods
mov
add
add
dec
pushl
pop
mov
add
add
out
push
int
mov
fisttps
hlt
jg
mov
ljmp
or
xchg
sub
rcl
stos
je
sarl
das
xorb
inc
iret
push
mov
icebp
lds
ljmp
jge
jle
push
jae
pusha
nop
dec
adc
xchg
test
cs
add
fcmovne
movl
xchg
repnz
stos
cmp
nop
in
fnstcw
dec
push
xchg
pop
ds
mov
mov
mov
sbb
fmuls
add
out
add
scas
dec
daa
push
lock
pop
push
and
mov
adc
jb
lods
das
nop
dec
aas
scas
xchg
jle
outsb
jl
sbbb
test
push
dec
ret
gs
jnp
leave
nop
stc
pop
jnp
xchg
mov
jns
xchg
mov
pushf
pusha
or
test
xchg
inc
cmp
jae
mov
add
add
inc
ja
pop
aas
dec
push
out
xor
add
add
movb
movsl
and
push
lcall
cwtl
xchg
aas
pop
outsb
lods
mov
into
jo
js
popf
push
jecxz
loop
or
xchg
sti
jb
fsincos
cld
sbb
idivl
sbb
xor
mov
mov
popf
loopne
add
cmpsb
mov
stos
es
imul
jge
dec
lods
rol
std
xchg
movsb
popa
or
xchg
leave
pop
fstl
jno
push
mov
mov
pop
stos
mov
mov
inc
sub
add
push
inc
push
dec
popf
adc
dec
stos
outsb
popa
negl
es
push
add
push
loopne
xor
ljmpw
xlat
mov
int
test
sahf
inc
jb
call
jmp
je
fbstp
enter
sbb
in
adc
cmpl
inc
jo
lahf
xchg
adc
fwait
xor
xchg
clc
rclb
adc
add
add
xchg
jae
ja
div
mov
call
add
repz
sub
jmp
jg
aaa
adc
add
cmp
adc
int
sarb
sbbb
decl
cwtl
enter
lret
test
inc
cli
dec
sub
lds
and
mov
dec
repz
mov
xchg
cmp
shr
sub
andb
mov
and
jmp
inc
pop
push
sti
lret
aaa
sbb
xchg
sub
mov
jns
sbb
push
mov
or
xchg
inc
xor
imul
cs
popa
cltd
mov
out
pop
lds
ss
push
sbb
cmp
dec
js
pop
xchg
mov
push
ljmp
idivb
negl
inc
jg
mov
xchg
jne
pop
insb
xlat
loopne
inc
jg
ja
push
aaa
xchg
mov
stos
dec
xchg
lea
mov
aaa
xor
sbb
cmc
or
imul
xchg
mov
or
pusha
loop
add
add
cli
std
jg
push
pushf
dec
loopne
test
add
push
adc
sbb
test
clc
sbb
daa
inc
stos
aam
xor
not
repz
pushf
or
scas
inc
push
lahf
fstps
cli
jmp
clc
jp
je
scas
mov
pop
pushw
push
insl
mov
mov
push
inc
shrl
nop
add
clc
jg
or
icebp
push
out
add
and
sub
cmp
aas
lock
std
and
shl
fsub
inc
jg
pop
xchg
das
insb
xor
mov
sbb
push
xchg
in
movsl
insl
xor
adc
xor
dec
mov
mov
popa
and
mov
ret
push
mov
inc
test
inc
call
pop
ljmp
stos
pop
lea
push
cmp
fcoms
daa
ret
push
inc
fcmovbe
pop
and
adc
es
and
push
shl
pop
maxps
daa
mov
pop
out
xor
loop
push
cmp
dec
push
mov
push
jmp
add
add
add
mov
std
incl
sbb
int3
dec
rcll
add
add
ret
icebp
addb
xor
stos
xchg
movsl
dec
imul
andb
jnp
mov
sub
test
ss
or
push
add
nop
das
cmc
ds
pop
inc
int3
jecxz
call
fcoms
cmpb
pop
pushf
cmp
sbb
and
rorb
ss
cmp
xchg
dec
mov
test
cltd
ds
arpl
and
mov
stos
pop
push
arpl
xchg
lret
xor
or
sub
xchg
stos
sub
mov
sti
push
test
ret
out
scas
adc
jae
sbb
xor
dec
dec
arpl
push
xor
loopne
fst
lds
mov
pop
popa
enter
dec
add
jno
adc
dec
shll
shll
stos
hlt
mov
addr16
cs
push
es
jg
pop
or
xor
sbb
dec
sbb
add
sub
push
fwait
mov
and
pop
sub
lods
mov
iret
add
insl
cmp
xchg
xorb
sbb
test
inc
jmp
dec
push
test
mov
sub
stos
mov
push
add
outsb
jb
ror
sbb
or
mov
xor
jae
dec
movsb
jecxz,pn
sub
jp
stos
int
xor
leave
loop
lock
mov
lret
es
add
xor
fbld
out
push
fucomip
imul
lods
loope
push
mov
inc
xchg
jb
scas
or
rcrl
repz
call
push
jp
adc
fidivrs
std
shlb
sub
pop
cmp
mov
je
dec
mov
xlat
adc
or
lret
mov
mov
jmp
add
idivb
mov
lods
out
ljmp
fcomps
int3
dec
cmp
add
push
clc
or
dec
push
cmp
sbb
add
in
cmp
jmp
or
shrl
sub
lcall
push
mov
adc
sub
in
xlat
pop
push
loop
fs
cmp
sbb
imul
adc
jne
cmp
jge
and
pop
movsb
or
andl
mov
pop
add
addr16
push
into
xor
test
loope
mov
in
into
mov
aaa
jne
shlb
leave
notb
adc
sub
xchg
cmp
cmp
sahf
pop
ficomps
rol
sbb
sub
mov
imul
rcrb
shll
outsl
test
les
add
mov
mov
dec
xchg
adc
pop
jl
adc
push
mov
adc
fsubs
into
mov
movsl
dec
xor
jmp
dec
popa
fistl
pop
push
popl
out
loop
add
add
stc
lods
xor
mov
xor
push
push
add
add
and
cs
cs
xchg
cmp
repz
lock
call
sub
lret
push
mov
add
lock
jbe
adc
adc
sub
pusha
inc
mov
mov
sub
mov
pushf
in
xchg
sub
sbb
pop
push
xchg
lahf
xchg
mov
push
pop
mov
andl
add
sbb
lret
loope
mov
popf
and
inc
cmp
insb
in
call
outsb
imul
pop
lea
jmp
hlt
aaa
mov
lret
mov
jne
push
popf
inc
xor
nop
ljmp
sbb
mov
mov
jae
dec
mov
xor
out
xchg
adc
out
pop
cmp
mov
sbb
or
adc
rcrb
add
sub
mov
je
jge
xlat
ret
bnd
push
jnp
dec
jl
movsl
out
inc
das
or
lcall
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
popa
pop
mov
dec
or
cs
in
or
jl
int3
gs
into
cmp
test
iret
dec
out
loopne
pop
inc
add
xchg
and
mov
fiaddl
sarl
sub
das
fisubl
xchg
loopne
add
call
cmp
sub
jmp
out
sbb
sub
rcll
cwtl
movsl
shrb
ror
fs
mov
cmp
jecxz
aad
cmp
jbe
pop
mov
popl
sbb
pop
jns
loopne
xor
call
loop
es
lock
xchg
nop
pop
stos
add
jecxz
jne
lret
add
jg
leave
fxch
xor
xchg
adc
jp
lahf
stos
leave
sub
dec
add
mov
clc
je
jge
mov
daa
out
cwtl
and
push
push
mov
mov
push
mov
mov
test
add
mov
out
stos
jge
or
and
add
xchg
dec
pop
push
dec
inc
insb
mov
hlt
in
and
mov
aas
mov
sti
jbe
push
xchg
mov
xchg
mov
je
mov
into
je
test
jno
add
lods
in
dec
out
nop
jmp
dec
insl
cs
bnd
lahf
xchg
adc
lahf
js
dec
jge
and
or
xchg
loope
jae
aaa
add
dec
xchg
repz
mov
push
aaa
push
sbb
add
aad
xchg
shrl
lock
sbb
mov
xchg
jmp
lods
repz
int3
xlat
aad
pushf
sbb
movsl
lods
jns
shll
ss
mov
or
jl
push
push
jae
ds
xor
sarb
int
push
or
xchg
nop
mov
inc
arpl
sub
fsts
mov
ds
mov
adc
push
mov
jmp
int3
imul
inc
add
add
sbb
out
xchg
iret
push
aas
pop
mov
add
add
arpl
inc
adc
addb
add
mov
popf
cmp
movsb
icebp
das
ds
ljmp
rclb
xchg
in
mov
rcrl
mov
lods
icebp
cvtps2pi
das
or
push
add
loopne
xor
cmp
mov
or
test
in
mov
jne
inc
sub
inc
adc
mov
inc
js
lods
test
gs
inc
hlt
xor
mov
pop
pop
jne
cmp
xchg
cmp
or
inc
jbe
push
jecxz
inc
sub
mov
stos
and
stos
adc
fstps
cmp
sub
adc
shlb
loopne
jle
icebp
mov
out
inc
pop
cs
lahf
xchg
call
cmp
enter
inc
lcall
ficompl
dec
ja
push
outsb
enter
pushf
xchg
mov
dec
scas
imul
mov
sbb
lods
mov
fimuls
xor
cmpsb
sbb
repnz
cli
add
aam
add
cmp
out
loope
jns
iret
dec
xchg
cmp
add
add
insb
inc
pop
jnp
mov
dec
lret
int
sub
jmp
aaa
xorb
test
add
push
mov
cmpsl
dec
and
ret
cmp
mov
mov
out
out
imul
xchg
mov
mov
cmc
mov
sahf
mov
mov
cmp
out
jno
fidivs
imul
dec
dec
les
push
inc
inc
stos
frstor
pop
cmp
out
mov
dec
inc
xchg
xor
lahf
icebp
std
inc
adc
cmpsb
inc
mov
dec
cmpb
scas
or
cli
jge
sahf
movsb
xchg
pop
js
inc
into
jnp
mov
popa
ljmp
out
xlat
flds
jae
mov
sub
inc
stos
and
push
dec
pusha
lahf
in
sbb
cmp
lods
gs
adcb
aaa
nop
nop
pop
xchg
out
test
pop
mov
add
test
sbb
sti
push
mov
je
pusha
adc
and
add
mov
push
pop
sbb
dec
andl
jnp
fistps
jb
sbb
mov
aaa
out
jo
push
inc
or
or
mov
push
sbb
inc
rcll
fmuls
jmp
std
ljmp
stos
inc
add
xchg
rcll
neg
xchg
mov
lret
aad
jl
test
int3
cs
fs
iret
pop
rcr
je
mov
jne
xchg
mov
push
scas
imul
ljmp
loope
pusha
sub
imul
addb
nop
insl
fdivrl
in
sub
and
fistl
loop
adc
paddq
pop
xchg
add
dec
add
sub
js
cwtl
mov
cltd
outsb
aaa
inc
jns
rcrl
adc
je
pop
jae
int3
fdivrl
ss
adc
xchg
leave
or
cmpsl
loop
stos
mov
in
xor
scas
pop
jge
add
add
jg
cld
ret
add
mov
add
add
shl
mov
inc
das
dec
pushf
push
inc
lret
cmpsb
sbb
pop
jg
xchg
movsb
fcmove
and
and
mov
jae
dec
push
lock
cmp
jg
xchg
bound
insb
adc
scas
add
push
jmp
mov
add
jno
mov
sbb
fwait
test
inc
ret
push
rcrb
xchg
cmp
sbb
cmp
inc
pushf
leave
sub
sub
test
mov
cltd
leave
mov
pop
mov
lahf
mov
aam
decl
lods
mov
push
mov
or
add
adc
mov
sbb
movsb
mov
and
in
popf
xor
inc
dec
int
jnp
loopne
dec
xchg
or
mov
mov
sbb
lahf
jnp
cmpsl
mov
in
mov
scas
jae
xchg
jne
dec
inc
inc
jae
ret
in
sbb
out
pop
sahf
add
add
mov
iret
mov
js
jne
jbe
add
add
pop
data16
jo
sub
cmpsb
mov
inc
push
adc
insb
cmp
jl
daa
sbb
sbb
xchg
or
iret
icebp
aaa
mov
cmp
iret
out
jmp
loopne
pop
ret
xchg
out
out
insl
loopne
out
test
sub
mov
xor
lahf
popf
xchg
mov
inc
lea
test
inc
stos
in
adc
je
sti
les
clc
in
lret
dec
stc
and
pop
jge
jge
pushf
int
push
push
icebp
scas
idivb
lahf
stc
lock
pop
mov
xchg
sub
ret
pop
cmp
or
add
add
mov
pop
out
int
jae
sub
sub
jbe
sub
mov
cmp
mov
lret
inc
push
inc
mov
insb
lret
stos
push
popf
cmpsl
xchg
in
ja
mov
out
and
adc
lods
mov
and
out
sub
fistpll
nop
icebp
and
add
add
or
jg
arpl
pusha
dec
das
jnp
add
add
inc
in
pop
add
aad
or
mov
hlt
pushf
xchg
adc
pop
aaa
hlt
inc
lret
call
rcrb
inc
je
cmc
sbb
test
mov
loop
daa
push
and
fsub
push
sbb
lret
jbe
je
aaa
arpl
mov
push
fnstsw
push
mov
enter
movsl
test
mov
enter
jb
dec
enter
push
jl
stos
mov
sbb
mov
dec
ljmp
lods
pop
push
add
stc
xchg
test
stc
mov
xorb
pop
jmp
rcrb
mov
sarb
rorb
aaa
adc
pop
out
and
sbb
jns
mov
dec
mov
xchg
shll
inc
xor
in
lods
adc
es
xchg
xor
cli
mov
and
ds
cmp
je
mov
jnp
popa
pop
jge
add
add
xor
clc
cli
clc
sarb
sti
mov
daa
loop
daa
add
add
xchg
outsb
outsb
push
repz
setne
or
sub
and
push
lret
stos
push
and
jle
jnp
jl
cmp
xchg
adc
add
jnp
incb
test
sub
mov
cli
adc
imul
stos
mov
sti
test
and
andl
adc
lret
ss
bound
lcall
push
sub
sbbl
faddl
mov
cmp
inc
mov
std
pop
jmp
inc
mov
std
add
idivb
sub
add
add
jmp
jle
fcompl
mov
xchg
and
leave
stc
inc
test
insl
adc
fs
xor
stc
in
pop
std
repnz
dec
jg
jge
mov
and
push
std
popf
imul
imul
scas
lods
mov
hlt
push
jnp
and
in
jns
add
add
jnp
out
mov
ret
sub
add
inc
adc
mov
enter
pop
scas
lea
cwtl
cmp
movsb
leave
out
sub
movsl
imul
xor
std
testb
inc
jb
xlat
or
push
repnz
iret
mov
xchg
xor
or
fsubs
cmp
ljmp
test
test
xor
js
jl
lret
xchg
sub
and
sahf
cmp
cli
ljmp
push
push
repz
jbe
lret
mov
out
repz
pop
mov
pusha
shll
add
int
punpckhwd
dec
bound
push
add
xlat
in
cmpsl
adc
add
sarb
inc
cmp
mov
sub
jecxz
xchg
pop
cmpl
lods
cmpsb
rcl
fwait
js
jcxz
mov
nop
pop
mov
xor
sbb
adc
xchg
out
fiadds
arpl
and
add
add
es
data16
insb
daa
mov
pushf
jno
in
sub
add
outsl
sub
ljmp
cwtl
pop
cmp
pop
aad
jne
sahf
mov
inc
mov
ret
cld
ds
sub
pop
xchg
fisubl
enter
xchg
test
leave
pop
and
xlat
xchg
clc
or
push
push
sub
jnp
movsb
lods
inc
shlb
xor
dec
lods
jns
lods
or
iret
enter
scas
sbb
xchg
mov
add
pop
ja
inc
lods
xchg
inc
push
xor
faddl
jbe
add
in
and
outsl
push
or
mov
movsl
xchg
jmp
xchg
in
pop
dec
cmp
xchg
push
cmp
test
loopne
adc
dec
xor
mov
jp
xchg
mov
xchg
lcall
out
leave
ja
in
push
and
pop
shlb
sub
in
jae
pop
sbb
sub
jnp
mov
or
pop
les
les
add
clc
mov
fldcw
add
lock
add
pop
mov
mov
mov
frstor
and
rolb
push
cli
sti
inc
push
mov
and
imul
push
lds
notl
push
jo
iret
scas
pop
xchg
psraw
stc
shl
pop
lea
push
repnz
sbb
mov
test
shl
addr16
adc
dec
ljmp
or
mov
mov
daa
in
xchg
xor
mov
lods
adcl
ds
sub
dec
xchg
cld
xchg
testb
and
dec
out
push
mov
stc
xchg
stos
punpckhwd
mov
mov
xor
mov
ss
int3
int3
inc
add
lahf
orl
push
aad
ss
shll
imul
and
shlb
movsl
mov
inc
in
or
add
cmpsb
sbb
push
sub
add
repz
push
sti
cmpsl
enter
inc
cltd
xor
xchg
sub
add
sbb
mov
xchg
fcoml
insb
rcrl
pushf
adc
fisubl
push
dec
or
dec
push
push
cld
add
es
test
xor
add
imul
mov
cmp
mov
rcrl
add
xchg
sbb
add
orl
mov
cli
and
mov
add
ret
iret
sub
jg
push
fwait
pop
out
xchg
test
imul
xor
aaa
jbe
mov
into
scas
push
pop
push
das
dec
xchg
jns
insl
fwait
test
push
pop
add
xor
jmp
fldl
xchg
lret
pop
xchg
lahf
int3
je
or
mov
fisttpl
fisubrl
or
inc
mov
inc
adc
mov
gs
adc
aas
es
inc
scas
test
cmp
xor
dec
push
jg
insl
imull
add
push
and
std
mov
dec
push
pop
jne
cltd
sub
add
pop
jbe
repnz
lcall
movsb
int
loop
in
jo
stos
subl
cld
in
mov
push
fs
popf
addr16
mov
mov
or
aad
xor
in
xor
out
shll
ret
adc
cmpsb
mov
clc
js
mov
adc
aam
stos
stos
and
cmp
leave
xchg
lods
repz
mov
jnp
sbb
push
movsl
iret
gs
add
lret
sti
fadd
jle
pusha
mov
cmp
loopne
or
inc
and
je
lcall
stos
movl
mov
adc
pop
ret
pop
iret
aam
mov
clc
fwait
sbb
sahf
add
data16
xlat
xchg
xor
popf
sbb
mov
addr16
or
or
aas
lret
pop
sahf
stos
sbb
rcll
insl
out
scas
xchg
add
xchg
nop
inc
jo
fistl
insb
pusha
insb
popa
mov
mov
mov
add
lds
xchg
and
inc
and
lcall
add
add
iret
lds
add
popf
in
sbb
push
lock
lods
inc
mov
mov
xor
sahf
push
jg
adc
test
int
cmpsb
sbb
fmul
aad
repnz
popf
loopne
scas
and
inc
and
cs
and
es
test
lahf
orb
sbb
fstl
lahf
push
push
das
aad
mov
cmpsl
mov
fstpt
jle
adc
shll
mov
jl
mov
push
rcll
std
sbb
hlt
add
jmp
push
xor
lods
aaa
cmp
decl
dec
lahf
fwait
and
movsl
mov
or
leave
sahf
incl
sub
cmp
das
sbb
lret
setne
jmp
outsb
and
negb
filds
addr16
fwait
mov
fiadds
pop
push
mov
cmpsl
jle
or
pop
xchg
fwait
cmp
add
fiaddl
ret
ficomps
cmp
lahf
fisubrl
dec
mov
add
add
test
inc
fdivs
and
adc
xor
lahf
mov
mov
cmp
nop
or
call
call
ds
nop
and
fs
dec
dec
and
sub
ret
cmp
add
xor
xchg
xchg
shlb
xchg
sub
xor
xchg
cs
gs
xor
pop
out
or
inc
mov
rcl
lcall
mov
clc
mov
dec
dec
mov
xorb
push
loope
pop
neg
sub
or
dec
jmp
push
jle
loope
jl
add
sbb
mov
repnz
mulb
add
daa
cwtl
jle
sub
ja
stos
mov
insl
rol
jp
ror
stc
lahf
mov
mov
mov
jo
inc
mov
inc
mov
rolb
into
xor
outsb
pop
insb
mov
fmuls
add
add
lods
xor
mov
cmp
sbb
xor
test
add
add
xchg
test
mov
test
mov
inc
aaa
add
outsl
nop
test
or
dec
jbe
cmovbe
or
fs
repnz
mov
std
je
or
dec
sbb
fcmovnb
xchg
add
mov
push
repz
and
jbe
xchg
pop
enter
jno
rcll
pop
mov
out
jp
aam
stos
mov
movb
sub
test
call
jmp
popa
pop
bound
add
mov
outsl
inc
xor
and
inc
mov
dec
popa
andb
jge
popf
fimull
movsb
fmull
aas
rcl
xor
pop
out
scas
std
dec
or
outsb
lret
pushfw
xchg
cmpsb
cmp
push
adc
imul
pop
and
leave
mov
and
jo
cmp
jecxz
in
or
stos
push
cmp
or
mov
push
dec
add
add
lret
mov
or
or
xchg
lods
xor
add
pop
or
jo
fidivrs
loope
inc
inc
jne
sub
add
mov
jns
push
shrl
clc
pop
popa
jnp
adc
aaa
or
jmp
insl
adcl
mov
dec
in
jp
leave
and
adc
and
movsb
cs
ret
testl
mov
bound
xchg
cli
inc
loopne
js
add
std
movsb
xchg
jae
mov
xor
out
jnp
add
and
fsubrl
cmp
inc
sub
and
sub
adc
xchg
out
in
jnp
pop
ljmp
lds
lahf
aas
push
aam
cmp
cld
nop
add
push
ret
insb
roll
mov
fdivl
cmpsl
out
pop
test
je
dec
jo
fs
push
pop
test
pop
jp
jge
pop
inc
sub
sub
mov
test
fisttps
pushf
ja
roll
add
sub
sti
pop
jge
neg
hlt
add
shll
add
add
jno
jecxz
jbe
pushf
mov
jne
gs
inc
add
jecxz
stos
jl
add
sub
imul
test
jp
fisubs
jecxz
xchg
jb
cmp
lea
pop
cmp
loop
xchg
adc
les
call
and
aad
ljmp
shr
fs
or
jno
inc
addr16
hlt
sbb
sbb
and
xchg
sbb
out
mov
add
adc
dec
cmp
imul
rorl
and
sub
nop
mov
dec
pop
andl
mov
or
push
xor
lods
nop
xchg
push
cltd
fists
pop
or
repz
add
mov
lret
lcall
cltd
jl
jo
stos
ret
das
in
pop
sbb
add
scas
inc
dec
push
mov
mov
jmp
out
inc
add
add
fsub
std
in
popf
in
stc
jmp
sbb
mov
add
cmp
loop
jge
jbe
lret
testl
stc
cmp
mov
sbb
jge
out
sub
inc
mov
js
fiadds
sub
loope
in
orb
out
xor
xchg
ljmp
insb
dec
xlat
shrd
sbb
mov
sub
and
push
mov
dec
xchg
les
loope
lret
mov
dec
pushf
in
cli
mov
mov
mov
testb
xor
cmp
adc
lods
pop
leave
xor
xchg
and
or
push
cmpsl
adc
sbb
push
sub
dec
aad
or
test
jbe
mov
adc
xchg
or
enter
int
lods
sub
divl
repz
imul
push
loop
stc
cltd
and
jecxz
scas
out
pop
shll
movsl
hlt
mov
stos
rolb
sub
or
shlb
inc
add
sub
sub
add
add
jp
jnp
sti
xchg
jle
jp
lods
in
sbb
xor
add
mov
push
and
les
adc
jge
int3
test
out
lcall
fldl2t
mov
mov
call
xorb
adc
jns
mov
cmp
es
mov
clc
add
jae
and
xchg
inc
in
inc
mov
imull
xchg
aaa
in
cmc
mov
mull
adc
cmp
imul
cmp
std
or
stos
ret
xor
mov
mov
data16
fstp
push
mov
cltd
adc
pop
inc
cmp
pop
movsb
inc
mov
pop
jl
and
lahf
mov
negb
sbb
push
ret
and
out
ror
aaa
in
movsl
fldcw
dec
out
cli
jnp
push
repnz
jmp
xor
lcall
popa
cmp
cli
js
mov
das
fstl
dec
fmuls
sbb
add
push
pop
in
jne
push
loop
add
mov
push
sti
decb
mov
push
shll
add
ss
fucom
push
lret
std
js
icebp
cld
mov
fstpt
cmc
jne
cmp
inc
fcompl
push
or
xor
movsl
mov
mov
cltd
pop
popf
sub
or
sarl
cld
jg
arpl
mov
sbb
ss
testl
loope
pop
lcall
mov
cmp
and
sub
rol
lock
loopne
push
mov
xchg
orl
cltd
push
inc
xchg
out
push
or
adc
jnp
push
cmp
inc
test
mov
cmc
test
push
stos
divl
scas
pop
lods
jno
jmp
and
out
repnz
lcall
sbb
hlt
jns,pn
cmp
jg
dec
je
add
mov
jae
fdivl
mov
movl
loope
nop
lods
adc
nop
sbb
push
inc
fiadds
sub
add
cmp
xor
hlt
out
dec
push
xor
add
hlt
add
mov
sub
aas
adc
test
mov
mov
jae
mov
sbb
aam
sbb
dec
rorl
jl
xchg
xlat
push
shr
scas
adc
mov
mov
fstl
cld
push
add
mov
mov
xchg
dec
scas
imul
scas
testb
and
test
and
ret
cld
outsb
fistps
pop
call
sti
movsl
incl
sub
mov
mov
inc
insb
mov
and
imul
loope
cmp
popfw
shlb
or
int3
std
int3
js
mov
sbb
sbb
sub
inc
push
add
push
inc
or
mov
outsb
xchg
mov
rorb
ljmp
adc
fcmovnbe
adc
mov
pop
js
addr16
ljmp
sbb
add
add
cmp
jge
stos
lea
shrb
stos
pusha
lret
add
add
sbb
mov
imul
aam
addr16
mov
xchg
xchg
mov
push
ss
icebp
xor
les
pop
ds
xchg
mov
jnp
je
clc
ljmp
dec
jne
sbb
mov
adc
jo
sub
sub
cltd
jne
sahf
add
push
fisubs
sar
inc
icebp
inc
repnz
movsl
les
leave
data16
repnz
cmp
les
std
pop
hlt
scas
push
cli
arpl
test
pop
mov
xchg
add
cmc
addb
pop
mov
mov
mov
out
cmpsb
sbbb
fists
or
dec
mov
mov
pop
int3
push
and
call
pop
dec
scas
cmc
int3
dec
sti
xlat
mov
sub
jle
call
cs
stos
cltd
cmp
add
divb
rclb
nop
lcall
aaa
add
add
jae
movsb
das
lret
xor
or
sub
lock
into
cltd
jae
mov
push
in
lods
or
dec
adc
pop
cmp
loopne
addr16
sahf
push
gs
xchg
pop
inc
and
icebp
add
or
inc
dec
enter
rcrb
incb
push
and
jns
adc
movsb
adc
ja
jmp
push
jle
out
xchg
movb
adc
mov
sbb
fidivrs
arpl
out
xlat
call
sahf
aad
sub
aam
adcb
adc
dec
idivb
outsb
mov
sahf
mov
fisubrs
aam
adc
adc
mov
test
mov
sub
movsb
scas
cmpsb
sti
pop
pusha
stos
inc
mov
test
mov
in
adc
popf
test
lcall
mov
adc
gs
lret
jg
jge
jp
add
jl
dec
jbe
idivl
or
shl
aad
add
add
adc
outsb
iret
or
scas
sub
cmp
mov
test
cwtl
mov
shlb
add
in
imul
clc
clc
les
into
inc
pop
icebp
mov
jb
xor
xchg
mov
adc
shrl
or
and
xchg
stc
lods
cmpsb
add
push
int
dec
in
pop
insb
jbe
add
sbb
ja
and
inc
hlt
je
fisttps
mov
fidivrl
add
ds
adcb
sbb
test
hlt
sbb
outsl
negb
stc
add
es
bound
std
out
mov
sbb
inc
adc
mov
fnsave
jne
aaa
xlat
add
ds
cmp
cmpsb
pushf
xchg
sti
out
sbb
fcomps
out
xchg
sbb
jo
xor
bound
rolb
in
add
sbb
and
outsb
sub
stos
fs
jmp
leave
aas
in
es
add
fdivrl
stos
add
xchg
pop
push
cmpsl
mov
mov
push
sarl
jge
fists
dec
pop
adc
in
sub
sub
pop
xchg
pusha
inc
or
jp
pop
sub
das
ljmp
push
push
mov
jg
pusha
sbb
cmp
movb
jle
cli
dec
mov
sbbb
lahf
lret
mov
dec
movsb
xor
add
sub
and
loope
mov
jmp
jnp
xchg
jbe
sub
inc
push
popf
leave
dec
test
and
pop
ror
xor
insl
push
mov
pop
psubq
mull
push
out
cmp
push
sub
mov
mov
mov
dec
fdivr
xor
cmp
jns
push
popf
sbb
rol
inc
rcll
jnp
mov
in
jae
daa
bnd
sub
xchg
jo
sbb
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
jle
sbb
add
add
xchg
jns
xorb
add
inc
loop
mov
mov
sbb
and
dec
inc
mov
rorl
lret
nop
cli
push
into
mov
inc
sub
jg
test
aas
jg
icebp
mov
mov
insl
adc
outsb
into
lret
sbb
lcall
or
es
in
sbb
sbb
in
pop
sub
mov
mov
leave
orb
push
out
jb
loopne
loopne
gs
shl
int3
sbb
rcrl
mov
es
rorb
mov
js
sbb
repnz
cmpsl
mov
inc
pop
mov
jns
push
pop
imul
imul
dec
push
sub
push
dec
jcxz
cmp
sub
pushf
ret
add
mov
mov
cmc
xchg
adc
pop
dec
pop
daa
pushf
repnz
ljmp
mov
bound
or
add
cmp
movsb
push
sbb
cmp
add
add
outsl
xchg
mov
pop
or
ljmp
rcrl
adcl
cmpsb
mov
loope
cmc
jecxz
inc
stos
sar
ja
addr16
inc
dec
loope
cmp
movsb
imul
cs
into
and
fs
mov
dec
xchg
je
push
push
adc
adc
mov
mov
cmc
cli
cmpsl
scas
add
mov
add
dec
insb
enter
bound
adc
jmp
into
rolb
sub
pushf
mov
xchg
rorl
je
out
push
push
mov
pop
sbb
push
lods
mov
lods
das
loop
into
cmp
push
stos
jnp
clc
ja
mov
shl
sub
jp
scas
add
jge
mov
repz
xchg
dec
and
outsb
mov
fwait
scas
arpl
or
mov
imul
add
aad
add
outsl
lret
mov
out
jmp
popa
mov
add
pushf
xlat
fwait
mov
pop
sbb
insl
adc
out
shrb
jl
xor
sub
lret
daa
in
dec
push
test
fisubrs
dec
mov
add
or
xchg
cmp
or
sbb
jmp
lahf
ja
decl
xchg
ja
xor
push
je
or
in
inc
lods
sub
jecxz
movsl
jns
addr16
pop
insb
sti
cmp
push
add
fdivl
mov
and
out
push
lock
in
ss
mov
push
idivl
ds
scas
inc
movsl
pusha
movsl
push
jbe
insl
shr
fdivs
testb
jmp
mov
lcall
lock
adc
xchg
xlat
es
sub
cmp
jecxz
out
jmp
sub
xchg
or
push
mov
xchg
cmpsl
popf
xorb
pop
pushf
outsb
cwtl
cld
sbb
sub
mov
add
add
repz
cmp
lods
repz
mov
pop
orl
add
add
push
lock
lods
add
xchg
dec
ja
fsubrl
xchg
cmp
in
lods
enter
adc
mov
sub
and
mov
shrb
imul
xor
add
fs
int3
or
mov
lods
in
popa
sub
daa
jecxz
pop
aam
pop
pop
loope
scas
mov
fst
mov
inc
mov
pop
std
lret
lcall
pop
mov
pop
mov
sbb
ret
fisttpl
add
out
aad
mov
pop
mov
popa
ret
out
cmp
cmp
loopne
ljmp
jecxz
mov
cmp
int3
sub
ret
cmp
cmp
leave
add
pop
inc
xchg
or
dec
push
jbe
push
sub
cmpsb
les
out
inc
inc
psubusw
pop
jns
and
add
add
daa
push
cld
push
std
jmp
dec
push
or
add
push
or
cld
mov
cmpsl
pop
inc
mov
adc
mov
popf
cmp
add
mov
cli
mov
stc
pusha
enter
pop
xorb
dec
pushf
xchg
addb
and
div
or
in
out
test
inc
jmp
sub
subl
test
jns
mov
dec
jecxz
or
jp
adc
sbb
std
mov
mov
imul
dec
mov
scas
push
inc
fcoms
fstps
push
iret
arpl
xor
out
shlb
outsb
and
push
fsubrs
sbb
jl
inc
mov
cwtl
ret
pop
jno
icebp
insb
pop
leave
dec
data16
adc
test
imul
sbb
dec
test
cld
lret
mov
and
add
add
mov
jg
sbb
fists
dec
hlt
sub
adc
insb
and
fwait
loope
add
add
add
sbb
dec
push
out
aad
or
mov
add
fstpt
int
nop
jmp
test
mov
and
nop
adc
popa
and
or
or
lret
push
pop
push
ds
sub
jmp
jp
fwait
imul
fs
aaa
loop
mov
aas
adc
out
lods
test
push
push
adc
out
push
dec
icebp
dec
inc
jle
fdivr
pop
sar
in
add
mov
cmpb
xchg
call
repnz
jae
pop
cmpl
dec
jmp
xchg
out
push
jne
sub
dec
mov
outsb
data16
outsb
pop
or
dec
xchg
repz
and
pop
in
sub
lret
dec
xbegin
fnstcw
stc
aad
call
mov
sbb
in
cmpsb
inc
in
mov
jl
ljmp
xor
lock
sub
mov
dec
sbb
mov
fcoms
xchg
dec
and
add
add
idivl
or
jge
dec
std
inc
add
add
nop
mov
test
sbb
pop
ret
xchg
aaa
jnp
jg
sub
push
stc
rol
and
jno
push
fidivs
pop
out
jne
ljmp
cmpsl
cmp
and
inc
popl
jle
icebp
xor
push
stc
cltd
cmp
cmp
ret
push
sti
jp
mov
pop
xorl
pop
cwtl
sub
int
out
addr16
in
mov
sub
inc
cmc
test
xchg
in
sub
clc
or
and
sub
inc
push
and
gs
ss
cmc
les
sub
push
or
ret
jbe
shlb
sbb
and
int3
cli
and
mov
xchg
or
jecxz
inc
ret
ret
pushl
popf
bound
push
insl
popl
fldl
icebp
add
adc
lods
lock
leave
insl
mov
jbe
sub
sbb
dec
sbb
or
pop
jmp
add
mov
ja
jg
xchg
orl
flds
inc
add
add
push
outsl
lods
sbbl
es
inc
or
es
xchg
pop
inc
sarl
dec
cld
daa
insb
mov
jp
dec
repnz
xor
imul
call
add
and
and
stc
lret
ret
in
jae
out
jp
movsb
xchg
insb
imul
sbb
nop
mov
jl
enter
adc
mov
fistpl
sbb
lahf
mov
inc
add
fidivrl
push
xor
ljmp
cmpsb
imul
orb
mov
aaa
jo
lcall
lods
mov
push
xor
imul
popa
test
push
popa
jns
bound
sbb
sbb
push
inc
or
pop
jo
cld
test
pop
imul
cmp
lea
and
ret
pop
pusha
push
out
sub
xor
add
push
dec
lret
jmp
imul
aaa
je
inc
xchg
int3
pop
inc
add
add
inc
repz
mov
in
rorl
xchg
mov
les
push
cs
sub
mov
inc
aas
mov
pop
or
mov
inc
icebp
lcall
adc
pop
push
and
push
int
mov
in
or
in
out
and
mov
jg
sbbb
or
adc
mov
rorb
jmp
xor
sbb
sbb
in
sbb
xchg
cwtl
fildll
call
aam
subl
inc
jne
mov
lcall
add
and
pop
push
insb
cmpsb
push
ja
ds
dec
xchg
test
push
in
insl
inc
and
sbb
lahf
dec
nop
outsb
mov
stos
ss
jo
inc
mov
xor
stos
lahf
cld
xor
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
inc
add
add
and
outsl
out
cwtl
mov
mov
leave
mov
stos
inc
mov
pop
push
adcl
xor
inc
pop
mov
xchg
popf
mov
jno
pusha
fcomp
pop
jge
cs
rorl
inc
call
inc
mov
mov
je
sbb
les
sbb
xchg
xchg
iret
lods
jnp
shll
addr16
pop
test
push
add
ret
inc
mov
rorb
mov
dec
repnz
mov
fwait
lods
fisttpll
and
push
ret
push
mov
sbb
call
popw
add
xor
push
pop
mov
mov
in
fstpl
in
push
sub
add
jne
adc
push
or
xchg
ja
subl
dec
ljmp
lea
sbb
sti
mov
xchg
add
add
jns
xor
jg
push
cmpsb
loope
inc
add
add
loope
aas
cli
mov
adc
mov
cmp
shl
mov
pop
lds
rorb
jae
repz
int
mov
mov
jbe
lcall
leave
imul
lret
out
cli
and
sbb
es
mov
gs
sbb
fdivrs
fists
jbe
dec
jnp
stc
and
xlat
out
andb
xchg
or
push
mov
jo
push
or
adc
pop
movsl
jmp
fs
mov
in
pushf
mov
add
pop
nopl
fdiv
push
dec
bound
mov
sub
pop
add
pop
repz
and
loop
sub
lock
add
out
test
adc
cld
mov
sbb
enter
rol
pop
jmp
jae
dec
push
push
add
js
ret
jg
decl
rol
dec
mov
or
inc
add
add
xchg
stc
cmc
in
and
lds
mov
fadds
cmp
mov
fs
ret
lods
or
repz
ret
aas
roll
fiaddl
pop
inc
xchg
xor
push
lret
loopne
lcall
jae
inc
dec
dec
fnstsw
adc
out
jbe
cmpsb
adc
lcall
cmp
cmc
add
addr16
nop
pop
cmp
mov
sbb
sarb
mov
sub
sub
and
popf
dec
xchg
iret
dec
scas
mov
stos
mov
cld
push
sub
shrl
add
push
adc
test
jns
test
jnp
movsb
gs
adc
in
push
push
cltd
mov
iret
cs
ja
jmp
mov
push
in
inc
xchg
pop
and
inc
push
jl
in
mov
jbe
leave
aaa
jae
xchg
movsb
add
add
das
mov
out
aad
jne
stc
sbb
add
cltd
sbb
jecxz
clc
sbbb
or
fdivl
lock
ret
cmp
scas
push
xor
loope
inc
sbb
in
sub
cwtl
sub
fwait
and
or
pusha
popa
out
lock
jmp
or
out
std
daa
gs
in
sub
js
mov
das
mov
out
incb
cmp
add
xor
fidivrl
mov
pop
push
cmpl
cmpl
jmp
push
lds
cmp
and
js
push
addr16
fldenv
mov
aas
outsb
mov
lods
ficompl
aaa
mov
sub
loope
sub
in
popf
mov
outsb
add
call
insb
cmpsl
mov
inc
fwait
pop
sub
iret
adc
std
dec
mov
out
fldt
stc
push
mov
pop
sub
repz
mov
stc
or
mov
inc
icebp
hlt
gs
dec
adc
sub
dec
add
add
push
shll
dec
sbb
adc
scas
sbb
adc
stos
xchg
out
pop
xchg
push
insb
inc
arpl
dec
iret
xor
in
decl
add
xchg
lea
daa
fwait
sbb
shlb
mov
pop
iret
cli
jns
and
jmp
cmc
mov
adc
test
cmp
xchg
sbb
pusha
arpl
dec
rcr
inc
fbstp
or
call
mov
xorb
jmp
cmp
jmp
jae
sahf
or
xchg
or
pop
dec
adc
sub
xchg
mov
mov
aaa
inc
pop
xchg
push
jno
mov
sbb
inc
mov
sbb
mov
sti
inc
or
push
push
in
push
jl
test
ljmp
test
lock
subl
and
in
scas
add
add
aas
gs
pop
repnz
dec
add
add
repz
mov
fcomip
push
insb
imul
add
fwait
pop
dec
cwtl
mov
push
adc
popa
sbbl
sub
jno
nop
lods
sbb
imull
daa
sub
frstor
and
pop
xchg
add
jl
in
inc
pop
out
add
in
xchg
scas
sbb
dec
lods
inc
adcl
mov
icebp
push
shrb
loop
outsl
aaa
add
jne
jl
xor
mov
sarb
outsl
loopne
ljmp
push
fiadds
sti
and
test
fwait
ret
adc
ds
lret
mov
cmp
movsb
in
mov
test
test
idivb
test
int
cmpsb
add
push
mov
add
pop
inc
enter
lret
popa
aam
xchg
ffreep
mov
mov
out
mov
sahf
jmp
call
data16
call
add
add
out
fisttpll
lock
imul
add
add
adc
mov
mov
cwtl
das
cli
scas
ds
cmp
xchg
add
or
cmp
xchg
dec
jge
movsb
cmp
xor
inc
int
and
or
shl
mov
push
aaa
mov
bound
ficomps
loop
jne
psraw
lea
repz
cmp
dec
out
mov
out
das
mov
cmp
aad
push
cmp
into
mov
gs
adc
xchg
mov
xchg
push
push
in
lea
or
loope
pop
dec
dec
lods
sub
add
out
cmp
sbb
scas
lret
dec
dec
ret
sahf
sbb
jge
fdivrl
ss
shl
lods
and
fnstenv
jbe
nop
mov
sub
inc
mov
sub
movsl
jns
dec
push
icebp
out
movsb
mov
cld
mov
add
mov
ljmp
add
add
jnp
dec
decl
mov
insl
mov
add
cmpsb
mov
xchg
and
data16
fs
sbb
mov
dec
lock
pop
clc
test
fwait
mov
and
mov
dec
es
push
add
mov
inc
jecxz
add
jg
cmpsb
fnstsw
mov
negb
fildl
fdivs
mov
rcr
fnstenv
lock
sbb
addr16
daa
insb
mov
and
sbb
enter
hlt
clc
or
call
outsb
mov
sbb
pusha
mov
mov
sbb
cmp
xchg
adc
shrl
jecxz
mov
arpl
fisttps
mov
inc
adc
fs
pop
test
fdivl
in
ss
dec
inc
shr
xchg
pop
cli
rcrl
mov
dec
mov
hlt
pushf
push
negb
fnstcw
xor
out
testl
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
sub
xor
add
add
cli
lods
stc
std
jg
fistl
rclb
adc
and
mov
cmp
inc
iret
push
or
jp
subb
movsl
sbb
add
dec
js
push
mov
inc
mov
add
psraw
sbb
push
lret
in
push
mov
lock
out
nop
lcall
push
push
loopne
ljmp
xchg
mov
std
fcmovnb
insl
aas
pushf
xor
mov
adc
popl
sar
out
sbb
dec
pop
push
test
mov
mov
jp
dec
and
sub
xor
jg
inc
inc
xchg
adc
aam
enter
inc
xchg
jae
insb
scas
int3
pop
push
and
mov
in
cs
sbbb
dec
cmpsl
lret
add
mov
js
sbb
jmp
test
xchg
push
out
push
xchg
sbb
out
mov
hlt
push
xor
or
sahf
sbb
cmp
imul
out
mov
mov
dec
inc
cmp
add
mov
jbe
inc
insl
sub
fstl
dec
ljmp
cmp
mov
mov
iret
mov
out
mov
xchg
and
xchg
xchg
mov
sub
add
sbb
mov
rcrb
xchg
enter
pop
pop
repnz
mov
leave
inc
les
stc
xchg
fdivrs
pop
xlat
outsb
and
push
sbbl
dec
or
add
leave
pusha
dec
cmpsb
and
adcl
imul
and
addr16
daa
cmp
mov
mov
call
jno
mov
movsl
testl
xor
jmp
adc
rcll
out
cmp
sbb
mov
push
mov
loopne
dec
cmp
addr16
cwtl
gs
xor
icebp
mov
insl
push
add
ds
mov
mov
nop
sbb
aaa
fdivrs
fs
add
add
add
dec
stc
mov
ljmp
ds
add
add
test
aaa
inc
jmp
fisubrl
xchg
dec
sahf
fists
mov
xchg
lret
cmc
mov
or
mov
jae
insb
hlt
arpl
lret
pop
push
prefetch
fldenv
xor
loop
or
jg
out
fcoml
mov
xor
adc
int
add
les
xchg
dec
gs
sbb
xor
add
or
mov
rclb
mov
and
or
pop
mov
nop
jl
mov
pop
jnp
int3
xor
bound
in
movsl
xchg
les
pop
sub
out
adc
add
test
jmp
adc
jl
stos
jle
ss
xchg
sub
imul
test
daa
jb
mov
push
das
enter
popa
lret
sbbb
js
mov
mov
leave
sub
shl
push
jnp
add
add
jg
cld
lcall
imul
add
push
int3
mov
mov
mov
push
lods
sti
out
jmp
mov
icebp
xchg
test
add
add
repnz
inc
pop
stos
mov
inc
les
out
lcall
test
dec
mov
stos
mov
movsl
loopne
shll
pop
push
call
or
sbb
lods
test
cmp
push
shlb
xchg
dec
mov
je
es
repnz
pop
cld
mov
dec
jnp
mov
movsb
and
dec
and
dec
stos
pushf
hlt
pop
dec
sahf
cmpsb
mov
fcomps
mov
sbb
fisubrl
inc
sarb
and
xor
mov
movsb
xor
into
and
stos
daa
lods
push
loop
stos
ret
cld
jae
sbb
testl
lds
mov
es
and
sbb
fsubrs
repz
xlat
mov
xchg
popf
add
add
xchg
mov
pop
push
push
test
add
pop
lahf
adc
clc
neg
pop
jle
pop
cmp
test
inc
mov
xchg
xchg
cmp
mov
dec
cld
and
cmp
mov
cli
pop
add
aas
jp
icebp
jne
in
mov
mov
mov
push
jmp
sti
std
sbb
adc
and
jb
movsl
xchg
gs
lcall
pop
popw
pop
daa
fwait
inc
sub
pop
xlat
pop
xchg
xlat
xchg
in
aad
fildl
nop
pop
clc
adc
adc
pop
sub
or
test
xor
dec
add
mov
std
adcb
inc
imul
inc
push
push
pop
clc
xor
or
leave
mov
add
aad
jg
fildl
mov
mov
fbstp
movsb
or
jl
loop
daa
adc
mov
addr16
fstpl
iret
push
mov
popa
int
inc
mov
daa
lods
bound
add
inc
mov
push
push
jmp
push
mov
lahf
dec
push
add
add
or
mov
xor
lea
jae
in
jo
pop
lods
and
fmull
mov
jnp
sbb
cmp
js
and
in
jmp
jp
sub
movsl
mov
jno
xchg
mov
xchg
cli
in
mov
push
or
xchg
mov
cmp
mov
in
inc
or
hlt
push
sub
shl
aaa
pusha
xchg
ret
mov
cld
inc
pop
cmp
pop
cmp
mov
push
mov
jle
out
xor
xor
popa
or
jo
repnz
fisubrl
ja
or
push
in
sti
lock
fildl
lret
mov
clc
mov
add
sbbb
push
std
push
pushf
mov
xchg
outsl
rcll
push
fisubrl
mov
ljmp
push
xlat
mov
fcmovnb
stos
jge
jb
leave
ss
add
add
sub
cmp
ret
or
hlt
jnp
ds
push
add
add
inc
jno
addr16
cs
ret
int3
xlat
mul
push
mov
ljmp
xor
adc
dec
pop
dec
push
lds
in
jp
int3
addr16
cmp
jb
push
jae
lock
xor
pop
pop
add
call
gs
xchg
mov
adc
es
ret
push
cmpb
mov
inc
jnp
xchg
or
jmp
mov
and
dec
jns
lahf
pop
ret
inc
mov
xlat
push
pop
sbb
insl
imul
js
mov
xchg
ret
mov
enter
sub
inc
mov
rcl
movsl
push
bound
bound
cmp
jmp
cmpsl
inc
pop
dec
fmuls
xchg
dec
gs
add
or
outsb
xor
fs
rcl
iret
and
cmpsb
add
xchg
add
bound
xor
mov
cmpsl
add
add
push
shll
out
pop
pop
pushf
push
jmp
push
add
add
test
data16
rcrb
lods
mov
pop
icebp
cs
in
loope
xchg
insl
js
dec
or
xor
scas
fidivrs
pop
lret
add
sbb
lret
cmp
sbb
xchg
stos
sbb
std
out
rol
leave
cmpb
fcmovnbe
test
cmp
mov
insb
xor
loope
pop
mov
bound
orl
test
lods
mov
insb
mov
mov
out
addr16
mov
into
fnsave
call
xor
xor
pop
and
push
cmp
push
or
jbe
xchg
push
outsl
mov
push
cmp
clc
xchg
das
fcomps
add
jo
ja
pop
out
clc
jb
push
push
cmp
repz
push
fdivl
xor
dec
cmp
fistpll
bound
adc
lds
es
cmp
sbb
mov
cmpsl
add
add
out
lcall
hlt
mov
jle
push
pop
push
add
add
loopne
xchg
arpl
test
std
sbb
sbb
out
mov
adc
loope
jg
jmp
ds
insl
adc
add
inc
pushf
lret
push
movl
jns
mov
clc
cs
sub
dec
stos
div
xchg
jae
in
lret
adc
push
cmpsl
les
inc
aam
xchg
sbb
cmc
out
in
jmp
mov
rolb
mov
int3
cmpl
dec
cs
cwtl
mov
loopne
aaa
lock
fsubs
ret
cmpsb
cmpl
push
shll
push
loopne
cmp
mov
sub
xchg
repnz
lods
mov
xor
ljmp
mov
loop
mov
sbb
pop
stc
out
push
shrl
or
mov
inc
arpl
int
pop
sarl
bound
lret
shl
or
aam
add
add
jbe
idiv
imul
test
aad
push
add
add
xor
mov
xchg
inc
adc
mov
out
jno
mov
cltd
xchg
xlat
cmc
sbb
pop
stos
inc
cmp
hlt
wrmsr
dec
fdivr
std
cmp
icebp
fbstp
int3
ret
shr
mov
mov
int
xor
out
inc
and
and
outsl
stos
jne
jg
push
xor
aas
pop
lock
lock
adc
scas
fdivl
pop
add
and
rorb
mov
jge
insb
push
push
testl
loop
sahf
faddl
push
out
loop
sub
enter
lahf
call
xor
push
sbb
popf
mov
in
xchg
or
sub
lock
popa
and
mov
cmc
xor
adc
add
dec
shll
jecxz
gs
ja
test
push
cmp
out
push
loope
or
mov
add
add
fwait
cmp
stos
sarb
push
add
add
jne
xor
inc
cmpsl
fistpll
cmpsb
outsb
jo
movsl
adc
mov
or
in
push
inc
push
pop
cmpsl
push
fwait
adc
pop
lods
ja
mov
jg
imul
rorb
shlb
sub
shrb
adc
or
dec
cld
sbb
fsubp
fisubrs
andb
rcr
lods
pop
pop
cmpsb
sub
xor
aas
jle
stos
in
jnp
mov
sti
jle
dec
sbb
adc
adc
add
stc
fistpll
dec
jo
loope
push
clc
in
sbb
or
cld
sbb
les
nop
loopne
or
mulb
and
into
sub
cmp
fs
add
loopne
mov
rorl
adc
push
fs
imul
push
call
std
sahf
cmpsl
subb
gs
sub
dec
xor
adc
mov
jnp
push
xchg
dec
pop
add
add
clc
mov
and
hlt
jno
test
add
outsl
pop
popf
popf
mov
xor
dec
cmpsb
subl
pop
ja
sti
into
mov
cmpsb
rcr
or
dec
xchg
dec
mov
je
test
aam
adc
mov
js
aaa
rorb
sub
mov
nop
cmc
mov
xchg
cwtl
jnp
adc
test
xchg
mov
ret
aad
mov
stos
test
pop
int3
ss
xchg
adc
fbstp
insl
nop
cwtl
test
cli
adc
es
adc
nop
or
inc
dec
mov
adcb
pushf
gs
sahf
cmc
and
push
dec
sti
cmp
enter
mov
in
or
mov
mov
mov
clc
sahf
cmp
or
add
xchg
xor
in
xor
es
imul
and
mov
pop
xchg
jbe
aam
test
nop
int
shlb
sub
mov
je
fisttps
stc
dec
inc
or
add
scas
xchg
push
adc
out
mov
andl
add
xlat
jmp
mov
jp
jle
jl
dec
jne
fs
pop
subl
ds
pushf
push
sbb
addr16
dec
inc
stos
lcall
and
aad
jns
movsl
and
inc
lahf
dec
inc
and
mov
iret
xchg
loopne
pop
sub
jne
push
or
mov
mov
mov
add
jmp
out
sbb
jge
out
mov
cmpsl
inc
jmp
gs
xchg
mov
sub
sbb
dec
aas
push
cmp
mov
lcall
cs
loope
sbb
cmp
cs
aaa
ja
and
addl
pop
dec
pop
xor
add
push
sbb
mov
jno
pop
lods
cmp
sbb
push
lock
ss
cmc
xor
aas
add
pop
outsl
xchg
sahf
mov
les
pushf
mov
adc
add
add
mov
lds
aad
pop
mov
jno
pop
add
add
imul
cwtl
cmp
outsl
cld
jo
push
and
divb
cmc
push
adc
cmp
adc
loope
push
mov
xlat
cmp
lahf
pop
push
aaa
and
mov
mov
dec
xor
xchg
pop
jmp
inc
cld
stc
mov
xor
push
into
and
xchg
aaa
loope
orl
pop
xchg
call
jmp
sbb
stos
movsb
adc
or
insb
fnstsw
neg
leave
push
mov
add
xchg
pop
xor
dec
loopne
pop
or
push
adc
divl
sub
frstor
lods
or
push
into
aam
cmp
js
ss
mov
cli
mov
cmpsb
mov
push
push
enter
imul
cs
mov
sub
adc
fwait
add
imul
cmp
lock
sub
add
pop
and
jno
movsl
les
jecxz
add
mov
and
das
cmp
pusha
add
or
pop
add
add
jmp
xchg
push
and
jle
outsl
outsb
mov
sbbb
pop
cmp
mov
mov
adc
out
push
jg
dec
push
pop
adc
lock
adc
sub
enter
stos
mov
xchg
adc
add
pop
xor
pop
sub
sbb
in
cmpsl
sub
ss
or
push
mov
je
iret
mov
pop
cli
fimuls
mov
rcll
jmp
fsts
cld
sbb
test
cmpsb
pushw
nop
lea
dec
xor
dec
lret
mov
sub
add
lcall
push
lahf
inc
fnsave
popf
into
jge
xchg
push
push
jbe
rcrb
out
das
jmp
push
sbb
fs
push
fs
push
push
mov
push
xchg
popa
test
mov
adc
adc
add
fsubl
mov
ja
mov
pop
sub
jg
add
add
xchg
inc
in
outsb
pop
inc
push
sbb
push
fiadds
pop
arpl
cli
shr
jmp
fmuls
je
out
in
fisubs
es
adc
push
or
leave
call
pop
dec
xchg
push
jns
push
xlat
lahf
push
cmp
test
and
sub
inc
shrb
jecxz
mov
iret
adc
mov
sub
incb
lods
sub
insb
pop
test
or
cltd
out
dec
sbb
scas
divl
xchg
iret
and
imul
pop
fcoms
sbb
mov
adc
inc
mov
das
inc
shlb
inc
jae
stc
push
lods
sti
add
test
das
or
inc
pop
jns
std
addr16
adc
sbb
inc
cmp
movsl
imul
jle
mov
push
jmp
dec
bnd
add
fbstp
scas
adc
lahf
xlat
out
cld
shlb
cmp
add
sub
xor
out
hlt
leave
jmp
test
das
cli
insl
pop
dec
cmp
bound
out
xchg
outsb
sub
dec
add
into
add
pop
pushl
inc
loope
stos
ds
out
jno
lods
addr16
lret
pop
pop
insl
out
stos
sbb
stos
cltd
cwtl
in
sub
cmp
inc
jecxz
popa
and
ljmp
mov
cmp
adc
dec
or
push
dec
pop
xor
inc
or
mov
sbb
jge
mov
add
and
gs
xor
jno
lods
scas
icebp
test
jmp
rcrl
jecxz
adc
aad
cmp
xchg
dec
xchg
xor
adc
int
enter
outsl
pop
mov
mov
sbb
push
cli
aas
outsb
xchg
repz
adcl
mov
mov
mov
jb
test
nop
cmp
add
add
mov
add
pop
jae
loopne
pop
add
add
out
aad
and
cmp
dec
fs
or
mov
fiaddl
ja
cmp
jbe
adc
js
fnstcw
xchg
mov
test
dec
mov
in
lea
shll
dec
adc
jmp
mov
aam
and
adc
dec
das
mov
push
loopne
mov
mov
mov
jb
daa
data16
adc
add
fcmovnbe
xlat
shlb
cld
mov
test
cwtl
jmp
mov
lret
movsb
jno
inc
cmp
gs
push
jbe
clc
add
mov
hlt
cli
jnp
adc
test
or
and
xor
mov
iret
clc
push
addl
jno
mov
dec
mov
push
mov
inc
sub
add
ficoms
enter
push
xor
test
addr16
add
push
into
push
push
inc
lahf
mov
mov
add
dec
push
adc
jo
nop
iret
mov
in
pusha
sti
sbb
sbb
dec
movsl
and
fsts
bound
in
push
jecxz
andb
pop
adc
repnz
push
pop
jl
icebp
mov
js
mov
jmp
dec
xor
xor
dec
out
imul
rorl
testb
aad
add
nop
mov
cmpsb
jb
lret
add
loopne
inc
adc
lahf
mov
cmp
inc
inc
cmp
inc
adc
cwtl
pop
sbb
jno
pop
nop
cmp
pop
xchg
push
dec
mov
push
sbb
adc
add
int
lret
loop
dec
sbb
aad
sbbl
in
outsl
jns
cmc
stos
mov
sbb
cwtl
and
addr16
xchg
and
int
xor
shl
lds
pushf
and
sub
push
xor
scas
cmp
add
and
mov
jg
or
xchg
pop
add
add
mov
dec
dec
push
push
negb
adc
test
push
loop
adc
je
xchg
jge
icebp
cmp
inc
mov
leave
jmp
jle
loop
cmp
int
mov
imul
push
adc
fisttpl
sti
or
into
cmpsb
orl
paddusw
xchg
bound
mov
int
enter
lahf
cmp
xchg
lds
aad
mov
lock
lret
xor
xchg
adc
in
in
jp,pn
clc
cmp
pop
fistps
cmp
adc
cmp
cmpsb
pop
dec
adc
push
jns
shrb
hlt
aam
adc
jns
insb
mov
popa
add
sbb
stc
rcrl
jbe
nop
xorb
out
push
shlb
punpckldq
aaa
jmp
pop
mov
or
cmp
shl
mov
mov
mov
pop
jbe
in
out
sbb
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
lahf
aaa
adc
add
add
sbb
fsubrl
dec
rclb
inc
jg
jmp
xchg
test
shrb
cwtl
xchg
mov
jae
sub
popa
mov
add
cmp
sbb
jnp
fiaddl
imul
rcrl
pop
jo
add
fs
mov
imul
pop
pop
xchg
mov
out
imul
and
jo
leave
adc
test
fmul
pop
out
cmp
adc
xor
pop
mov
fadd
addb
jbe
mov
sbb
sub
xchg
fucomp
jb
cli
or
jge
xor
test
jnp
add
mov
and
dec
cli
mov
movsl
or
stos
lock
test
sahf
mov
insb
sbb
cmpl
push
cmp
mov
outsb
or
stc
lea
mov
inc
or
inc
cli
stos
xchg
lcall
add
add
idiv
jg
sub
nop
sbbl
add
fdivr
call
jp
aas
mov
mov
sub
stos
inc
cs
cmp
aaa
aam
xchg
jb
xor
divb
lcall
rcl
or
xor
push
jge
sbbl
stc
lock
mov
add
fsubrs
push
insl
mov
sbb
das
jmp
aam
out
or
pop
or
mov
or
scas
jbe
arpl
fst
stos
sub
jmp
adc
sub
negl
lcall
adc
loop
push
popa
cmc
mov
aam
out
add
loope
icebp
ret
jo
xchg
xchg
sbb
inc
jnp
lods
daa
dec
adc
push
shl
adc
lahf
loop
aas
frstor
mov
sub
push
movsl
inc
bswap
test
pop
hlt
add
mov
rcll
and
insl
loopne
addr16
add
add
mov
add
inc
pop
mov
fstps
xor
add
sbb
pop
fstpl
adc
jnp
movsl
into
popa
outsb
push
imul
fwait
push
lahf
ljmp
out
dec
addr16
mov
aaa
cmpsb
mov
xchg
fnstenv
sub
dec
push
in
and
jns
pop
and
pop
add
stos
mov
and
pop
loop
iret
out
push
jmp
fwait
call
mov
repnz
inc
push
cmpsb
lret
jmp
data16
ficoms
mov
test
sbb
cld
mov
mov
call
and
test
rcr
xchg
icebp
call
jns
cltd
stos
mov
mov
sbb
incl
and
popf
pop
shll
adc
pop
pop
pop
jae
test
outsb
arpl
js
test
xchg
pop
mov
xchg
mov
mov
add
mov
jl
leave
outsb
add
add
repnz
movsb
jle
arpl
xor
add
mov
mov
adc
popf
xor
xchg
stos
sarb
xor
xor
xchg
addr16
xchg
orl
scas
aad
aaa
nop
sbb
adc
add
shlb
mov
popa
xchg
aas
inc
imul
mov
imul
jecxz
lret
sbb
ret
pop
in
dec
imull
adc
sbb
push
cmp
push
push
dec
cmpsl
pusha
ret
inc
scas
sbb
orb
in
add
or
mov
enter
sbb
insl
pop
xchg
incb
adc
ret
bnd
out
mov
mov
and
je
scas
inc
fisttpll
ljmp
mov
fadds
mov
xor
das
jmp
int3
jg
mov
jg
fisubrs
loop
sub
pop
pop
jbe
cld
inc
xor
ja
mov
aam
jmp
int
xchg
ljmp
add
jmp
sub
pop
xor
lods
add
add
gs
shll
movzwl
stc
sub
xchg
mov
repnz
pushf
shl
cwtl
mov
xor
pushf
pop
addl
push
sarb
fnstsw
sahf
mov
cld
pop
and
inc
dec
or
inc
mov
outsl
sarb
or
mov
adc
popf
xor
xor
pusha
into
fwait
sbb
push
adcb
xchg
ja
jle
and
jno
mov
ror
dec
push
xchg
daa
dec
addr16
in
dec
cmc
cwtl
add
mov
daa
lcall
inc
inc
xor
das
mov
xor
aas
jmp
rclb
lret
bound
inc
dec
lods
dec
mov
stc
clc
loop
call
push
addr16
aas
sbb
adc
cmp
ja
pop
shrl
push
lock
popa
std
bound
add
mov
fnstenv
jb
xor
add
sbb
xor
repz
sub
outsb
mov
daa
in
sub
sbb
push
jbe
icebp
insb
stos
adc
dec
jnp
sbb
imul
fistpl
roll
gs
mov
dec
repnz
icebp
sub
bound
movsb
movsl
or
adc
sbb
nopl
mov
xchg
ret
ds
f2xm1
pushf
iret
mov
cmp
imul
mov
int3
lcall
jnp
xchg
call
sbb
and
fs
mov
out
mov
nop
mov
clc
and
cmpsb
ss
and
push
dec
popa
test
sti
repnz
cmp
fchs
or
rcrl
inc
lods
hlt
and
or
loopne
or
mov
ficoml
test
xor
testl
repz
add
cld
je
jbe
jns
sbb
insl
nop
add
add
cmp
ret
clc
xadd
sbb
push
outsb
xorb
add
adc
ja
jo
addr16
mov
fstpl
jne
lret
fidivrl
jnp
dec
adcb
mov
mov
das
sub
les
mov
jnp
mov
mov
mov
ss
sarl
ret
sti
mov
and
aaa
cmp
loopne
mov
mov
jp
scas
or
lods
ljmp
out
pusha
jl
pop
dec
icebp
data16
ret
jne
lcall
aas
mov
mov
popl
mov
psubb
push
je
ljmp
ret
pop
mov
shlb
dec
add
pop
fld
mov
and
std
mov
lret
add
push
mull
call
test
push
mov
addr16
inc
aas
push
ret
sub
push
cltd
jmp
fildl
or
push
dec
sarb
add
cmp
mov
jno
cwtl
call
rcll
xor
push
fs
dec
stos
out
imul
inc
dec
aas
cmpsb
cmp
ja
push
ficomps
dec
lcall
xchg
lcall
cltd
cmp
xchg
xchg
dec
mov
cmp
fdivl
ret
leave
pop
jno
stos
xchg
add
clc
sti
mov
push
mov
mov
add
mov
fdivr
cmp
pushl
ret
loopne
xchg
mov
inc
mov
sti
stos
faddl
mov
imul
mov
scas
outsb
imul
mov
mov
pop
nop
sub
inc
pop
cmp
push
imul
cli
into
addr16
mov
notl
sahf
and
inc
test
push
dec
lea
or
in
fistl
insl
jl
test
into
insb
pop
and
jbe
dec
divb
xchg
pop
ret
fs
test
stc
pop
cmp
mov
add
mov
mov
push
jg
dec
xchg
dec
jl
and
add
xor
mov
in
inc
push
insb
popf
jmp
jb
mov
das
sti
add
add
jge
fucom
repnz
ret
add
xchg
pop
loop
mov
shll
aaa
adc
jbe
cmp
adc
roll
loop
aam
push
or
mov
add
sbb
mov
add
stos
mov
sub
enter
ret
mov
adc
pop
xchg
sti
imul
or
pop
test
jo
push
or
mov
or
and
dec
in
add
mov
add
addr16
and
xchg
jmp
mov
xchg
and
in
into
pop
cmp
sbb
mov
outsl
outsb
adc
adc
lds
push
imul
aas
gs
popf
mov
cwtl
or
clc
mov
mov
pop
out
add
iret
mov
fucomip
push
insb
xor
xchg
cmp
lds
add
adc
xchg
insl
pushf
lcall
bound
xor
scas
test
mov
mov
adc
jae
cwtl
pop
pushf
ficomps
test
and
aas
fxam
jb
mov
xor
bound
xor
cli
jno
jp
push
cltd
adc
pop
out
and
jge
and
sub
cmp
je
add
jne
repnz
repnz
cwtl
aaa
sub
cmp
mov
jo
adc
pop
or
push
shl
xor
adc
lods
std
mov
or
pop
or
or
sar
pop
lods
test
sub
push
jmp
jbe
and
jae
sar
mov
dec
inc
shr
jns
je
jp
call
or
inc
inc
jl
mov
inc
pop
add
dec
add
scas
jecxz
in
jp
sbb
add
call
imul
dec
out
iret
jmp
aas
in
push
xor
add
add
adc
inc
sub
hlt
dec
adc
inc
ljmp
add
scas
ja
sub
mov
xorl
es
fsub
std
mov
lcall
scas
lahf
lea
jne
push
mov
jle
cs
and
jno
adc
js
mov
dec
xor
test
push
test
and
es
or
icebp
clc
repnz
pusha
repz
repz
andb
mov
out
clc
adc
out
jo
rorb
adc
ror
mov
sbb
sbb
mov
cwtl
daa
sahf
stos
xchg
fsubrl
xchg
sub
roll
popf
std
and
jae
mov
lds
pop
cmpsb
sbb
jl
fisubrl
lods
mov
jp
lret
dec
and
jae
dec
xchg
mov
dec
aas
cli
or
lock
bound
ljmp
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
add
add
cli
mov
push
push
mov
mov
push
xchg
mov
or
in
pushf
add
out
sub
stc
sbb
adc
rcll
inc
arpl
lret
ret
int
ja
pop
out
fisubrs
cmp
pop
arpl
pop
cltd
or
xor
add
xchg
or
push
mov
call
xor
sub
mov
mov
sti
or
jae
int3
hlt
xor
jne
out
cmp
cmp
jmp
dec
in
sub
mov
cs
mov
sub
pop
add
fldl
ret
fwait
subl
nop
push
mov
pop
add
cmpsl
or
mov
pop
inc
lods
xchg
je
movsl
or
jns
pop
jno
mov
scas
push
lods
jg
mov
mov
int
std
shrl
mov
stc
addb
add
neg
std
sub
dec
mov
mov
add
js
lds
cmp
sbb
pop
fcompl
mov
loope
push
subl
or
jp
jb
jae
inc
xor
adc
xchg
ret
test
sarl
pop
and
daa
data16
aad
push
mov
fwait
aam
inc
cmp
pop
lcall
jmp
inc
stos
mov
and
iret
pop
int
sahf
pusha
pusha
pop
mov
inc
cli
fldenv
inc
or
add
dec
push
nop
test
ss
das
jle
fiaddl
mov
mov
mov
mov
jmp
addr16
sbb
jnp
fstps
lret
mov
xor
int3
mov
mov
and
xor
mov
add
in
mov
add
mov
jne
call
sub
mov
pop
pushf
and
out
cmc
cmp
or
outsb
mov
xor
dec
shll
shrl
add
add
cs
xor
cltd
stc
mov
add
adc
pop
clc
cmc
push
cwtl
dec
push
push
xchg
ss
out
sbbl
mov
test
xchg
pop
xchg
popa
outsb
push
inc
scas
jecxz
test
dec
xchg
pop
sti
out
mov
pusha
xchg
xchg
ret
inc
dec
aam
mov
jnp
jne
cmpsl
xchg
pop
arpl
sub
divl
xchg
shrb
fnsave
pop
xor
mov
in
mov
sbb
popa
data16
ljmp
scas
and
add
arpl
xchg
mov
repnz
call
cmp
sbb
pop
pop
push
sub
adc
pop
inc
dec
popa
lahf
and
in
mov
outsl
sbb
jns
mov
jbe
inc
and
cltd
pop
cltd
addr16
cmp
out
aad
pop
sahf
clc
pop
das
sbb
sbb
pop
cmp
mov
ja
sub
adc
shlb
xor
jle
pop
das
rol
loop
popf
add
add
ja
out
sbb
dec
dec
fisubrs
add
pop
das
xor
jecxz
push
sub
mov
out
add
inc
loop
or
inc
ja
aaa
cs
add
lret
or
fistpl
mov
rol
xor
cmp
into
inc
orl
mov
fsubrp
mov
sub
mov
or
clc
mov
lds
movl
add
xchg
push
push
pop
call
sarb
rcrl
or
and
out
mov
loopne
jo
xchg
xchg
lods
inc
hlt
sbb
mov
jne
icebp
pop
mov
push
xor
clc
pop
mov
mov
jge
pop
daa
aad
add
push
ret
mov
push
inc
add
jns
sub
xor
mov
xor
lret
push
mov
dec
andnps
push
lods
mov
das
and
inc
adc
lea
add
daa
sub
ja
mov
lods
pushf
push
jecxz
add
add
jno
mov
jae
pop
jnp
xor
stc
ss
inc
adc
push
loop
push
sub
adc
and
xchg
pop
es
fmuls
fsubrl
ret
xor
arpl
popa
cmp
outsb
fs
test
shr
inc
loopne
jmp
cltd
movsl
jecxz
mov
rcll
bound
call
jbe
or
add
or
repnz
iret
sbb
dec
add
inc
jmp
lods
push
push
hlt
pop
jmp
add
loopne
mov
lods
shl
adc
mov
rorb
mov
xor
xchg
out
leave
mov
inc
mov
sub
stos
push
shlb
clc
lds
xchg
lcall
pop
gs
into
jl
loope
push
stos
movsb
iret
aad
arpl
jbe
xlat
das
insb
mov
insl
lods
rorb
iret
aam
cmp
dec
cwtl
inc
cld
xor
jg
add
xor
out
cmpsl
lods
test
push
mov
inc
add
add
cmp
jnp
outsl
cmpsb
loopne
push
push
push
call
add
add
inc
and
sub
cmp
pop
sub
cmp
fs
loop
lock
inc
in
jo
aad
inc
out
movsb
xchg
mov
ds
xor
cmpsl
sub
loopne
cmpsb
in
pop
shrl
dec
cmc
mov
ret
dec
outsb
pushf
inc
inc
pop
add
lahf
fs
inc
pop
or
inc
lahf
arpl
dec
pop
sub
out
enter
dec
test
std
dec
repnz
cmp
leave
jp
xchg
je
dec
loop
mov
je
test
out
lods
push
bound
cmpsl
push
pushf
add
mov
xchg
adc
pop
cld
adcb
add
and
nop
cmp
inc
int
and
or
xchg
cmpsl
cltd
jl
repz
vorpd
fwait
push
aas
mov
pop
or
inc
daa
int
xchg
mov
ret
es
dec
stos
xchg
and
sahf
mov
inc
int3
fiaddl
rcl
jno
add
xchg
push
mov
cli
xchg
jle
push
je
dec
insl
das
loope
jno
add
xorb
rorb
jns
out
add
cld
je
mov
dec
or
test
fsts
inc
sbb
imul
ret
loopne
mov
dec
sbb
data16
jg
fs
mov
inc
outsl
stos
mov
mov
mov
daa
push
fucomi
push
or
pop
xchg
dec
xor
pop
shl
adc
fsubl
jnp
inc
in
pusha
dec
rcl
inc
push
outsb
fcmovnbe
mov
mov
add
clc
stc
pop
call
mov
xchg
inc
dec
inc
and
add
dec
cld
cmpsl
pusha
fdiv
outsb
inc
xchg
stos
pop
pop
addl
gs
ror
sbb
mov
icebp
jb
cmpsl
pop
stos
push
or
pushf
movsb
jae
cwtl
movsb
pop
push
or
mov
fcmove
push
decl
mov
and
jmp
jl
sub
sub
dec
int3
in
mov
adcl
mov
add
inc
aaa
dec
fwait
jnp
aad
sbb
inc
jmp
add
dec
mov
add
xor
ljmp
imul
jnp
adc
mov
mov
mov
out
loopne
inc
xor
or
fcomp
fs
lahf
sbb
pushf
das
xchg
and
push
mov
xor
fisubrs
loope
sbb
sub
and
icebp
xchg
rcr
shrl
mov
insb
rcrl
in
movsl
test
add
inc
xor
xchg
js
dec
inc
sub
inc
stc
sbb
or
repnz
sbb
cwtl
addr16
lahf
and
inc
xchg
insb
mov
nop
pop
push
repz
dec
aaa
adc
inc
gs
scas
mov
pusha
imul
movsl
out
xchg
js
nop
popf
push
add
inc
add
jnp
scas
jo
fcmovnbe
loopne
mov
aam
lock
mov
test
adc
ss
lods
insb
mov
loop
add
mov
std
mov
sub
jae
add
sub
fdivs
add
or
xchg
leave
notb
mov
loope
inc
ds
pop
aad
mov
lds
mov
mov
fsin
pop
pop
mov
pop
out
cwtl
mov
dec
fldcw
popf
outsl
ljmp
inc
cmpsl
mov
adc
popw
xchg
pop
test
test
rcr
rorl
pop
inc
sub
shll
add
jns
pusha
cmc
xor
cmp
push
ret
and
xor
daa
jo
scas
xlat
push
lock
daa
cltd
push
int3
dec
cmc
sti
mov
adc
lds
sub
mov
sub
jmp
imul
int3
mov
es
inc
ja
adc
cmp
out
lods
cmpsl
push
sbb
xchg
call
inc
leave
lock
imul
dec
cli
insb
dec
loopne
sbb
loop
rolb
and
add
fstl
lret
jbe
cld
je
add
loopne
inc
ss
mov
add
dec
jnp
pop
inc
mov
dec
pop
pop
nop
cmpsl
std
sbb
sub
ljmp
je
adc
loope
adc
fidivrs
loope
pusha
inc
xor
nop
cmp
out
movl
inc
jp
movsb
dec
nop
stos
xchg
repnz
jmp
mov
scas
adcl
push
dec
jns
dec
jo
movsb
sbb
fsubr
push
adc
imul
sub
cli
cmc
std
aam
xchg
mov
mov
or
clc
insl
mov
imul
jno
adc
mov
inc
sub
dec
popa
pop
aam
jl
fiaddl
nopl
push
insb
lea
ret
cltd
adc
cmc
inc
rol
mov
ficompl
jbe
mov
jae
cmp
insb
or
or
lds
fildl
add
inc
in
mov
mov
out
sub
sbb
jbe
add
cs
jne
fsts
out
mov
jmp
leave
shr
sarb
imul
leave
mov
sbbb
mov
pop
and
in
into
push
cmp
jg
sti
imul
cs
js
xchg
and
dec
mov
stc
jne
add
leave
mov
mov
and
pop
add
popf
cs
mov
jg
insl
test
loopne
out
jne
int3
jb
pop
test
js
dec
pop
adc
stos
mov
imull
lcallw
sub
mov
cmpsl
test
stc
mov
jns
in
fstpl
pop
pop
sub
imul
dec
mov
notb
jl
push
xchg
sub
or
jno
lods
fiadds
adc
pop
inc
test
and
jo
xchg
shlb
rcl
jle
add
fwait
and
dec
inc
lods
mov
arpl
mov
add
add
divl
in
sub
push
ja
add
popa
sub
pop
dec
les
mov
sbb
xchg
inc
jle
or
test
or
cmp
nop
dec
fstp
shrb
arpl
arpl
aas
xchg
repnz
cmpsb
jle
lahf
cmp
add
loope
lods
loop
lahf
data16
push
push
das
int3
mov
push
or
mov
add
push
push
adc
mov
sahf
iret
addr16
imul
pop
mov
xor
or
fsubrs
adc
or
out
in
dec
lods
or
sbb
xor
sahf
dec
inc
jecxz
mov
add
jbe
repz
push
shl
pop
insb
sub
dec
cli
adc
orb
adc
add
arpl
add
aam
mov
cmpsl
cmp
xchg
push
push
mov
inc
xor
lret
and
sub
jg
sar
lds
jecxz
add
add
fisubs
mov
mov
mov
or
add
mov
dec
daa
je
cmp
push
imul
cmp
fnstsw
mov
jno
sarb
sbb
aam
sub
imul
pop
dec
popa
ja
enter
daa
frstor
xor
stos
mov
fwait
push
inc
and
sbb
movsb
cmp
sti
mov
sbb
add
imul
jne
test
nop
fdiv
jl
in
sti
inc
add
stos
xchg
incb
shr
mov
nop
adc
adc
dec
leave
sbb
and
push
orl
scas
cmp
and
push
rclb
xchg
insl
mov
pop
pusha
roll
clc
inc
fdivs
xor
sub
xor
iret
cmp
cmp
out
mov
repz
lods
ljmp
cld
sbb
fdivs
cmp
jo
loop
dec
xchg
daa
in
add
add
mov
outsl
jne
ljmp
mov
add
add
lea
insl
stos
call
fistl
add
push
iret
gs
sbb
mov
xchg
pavgb
jb
popa
lahf
test
cs
nop
dec
mov
ss
lods
or
mov
jp
jl
mov
test
sub
fimuls
repnz
fistl
int3
xchg
jmp
push
imul
mov
movsl
xlat
pop
mov
pop
in
and
fnstenv
cmpsl
out
loope
xlat
push
xchg
cmpsb
in
aam
xlat
aaa
negl
push
and
stos
xchg
ret
negl
aad
cltd
fimuls
jge
add
jnp
out
fbstp
lcall
xchg
addr16
rorb
ret
push
adc
push
inc
iret
sbb
jmp
enter
mov
ja
add
clc
stos
dec
sub
dec
push
pop
mov
int3
adc
incl
popf
dec
xchg
pcmpgtd
stos
xor
add
orb
ljmp
jl
insl
hlt
and
add
add
fs
aam
mov
xor
leave
inc
cmpsb
or
xor
xchg
adc
sub
int
imul
mov
sbb
pop
fldenv
dec
int
jle
adc
xchg
and
adc
adc
push
push
push
aam
cmp
jge
aaa
dec
mov
ja
add
push
iret
call
and
test
jb
mov
sub
fsubs
push
out
rcr
mull
pusha
shll
ret
xorl
mov
lahf
jbe,pt
jg
mov
jmp
inc
aaa
lock
push
mov
xchg
movsl
xchg
mov
mov
scas
and
sbb
fwait
dec
jecxz
pop
xor
push
cmp
sahf
ret
dec
add
lods
push
jecxz
xchg
sbb
ret
inc
shrl
ret
pop
shll
dec
mov
sbb
add
add
jo
ja
std
stos
sbb
ljmp
add
add
testb
xlat
sti
scas
jp
or
ja
leave
pop
dec
jmp
mov
mov
rorb
jmp
xlat
cmp
or
aaa
mov
leave
in
jne
add
push
sbb
sbb
je
dec
imul
push
clc
mov
negb
dec
sub
mov
je
popf
jp
sahf
test
or
stc
lret
push
lods
xor
out
out
jne
add
ss
sbb
shrb
xor
add
xor
push
mov
xchg
or
stos
add
cmp
faddl
and
jmp
std
das
adc
inc
fwait
andl
enter
jne
mov
testl
xchg
call
addb
inc
imul
stos
icebp
lea
and
inc
dec
out
mov
rcrl
testl
add
mov
cmpsb
push
sbb
xchg
jl
add
add
test
mov
mov
jae
push
inc
imul
push
push
dec
xchg
mov
sub
cli
inc
cmpb
loopne
add
aas
rol
ret
out
loopne
addr16
dec
pop
ret
xchg
mov
fistps
jne,pt
outsl
lret
movsb
bound
sbb
mov
lcall
out
jnp
lret
jno
xor
fbstp
clc
stos
mov
arpl
cli
jmp
fwait
push
mov
sub
ret
push
xchg
iret
jno
stos
adc
pusha
fprem1
and
sar
ds
in
cmp
dec
sbb
add
jge
jmp
adc
pop
or
rcrb
inc
pop
sarl
xchg
pop
jge
out
adc
dec
push
je
sbb
inc
pop
inc
mov
ret
sub
dec
xor
into
cmp
pop
push
and
fucomip
and
dec
jmp
inc
stos
into
push
sbb
add
xor
cli
mov
jbe
cli
insl
and
add
add
fucom
add
and
fsubl
clc
pop
test
pop
jmp
and
imul
push
mov
xchg
xchg
fdivl
push
repnz
mov
jp
sti
int3
inc
sub
int3
shll
mov
aas
sbb
iret
cmc
popa
mov
orl
jl
jo
cmp
jecxz
mov
rcrb
insl
pop
sahf
shlb
jbe
cmp
out
pop
data16
sbb
movsb
fdivl
sub
adc
sub
sub
cmp
mov
enter
ljmp
jecxz
shll
cmp
pop
sbb
sti
ret
dec
xchg
stos
push
pop
into
jbe
cmp
orl
mov
imul
xchg
addr16
cmp
pop
mov
lret
popf
add
mov
pop
sub
dec
adc
fucomip
mov
das
pop
cmp
add
test
lcall
adc
add
sbb
fld
hlt
adc
mov
lock
ja
lock
cmp
nop
xchg
icebp
notb
rorb
jmp
adc
mov
ret
xchg
add
and
or
mov
dec
and
popa
leave
mov
imul
xchg
xchg
push
push
inc
pop
std
stos
xorl
sbb
sub
loop
sbb
dec
mov
or
js
mov
test
jo
adc
mov
jg
xchg
sbb
adc
push
pop
aam
inc
inc
mov
test
es
push
cli
lcall
lret
jo
jmp
push
in
sti
leave
pusha
jmp
push
jg
xor
movsb
in
push
adc
mov
push
jbe
sub
cld
jns
push
mov
inc
jg
aaa
aam
clc
mov
adc
xchg
push
xchg
cmp
loope
sti
xchg
ret
mov
pop
xchg
fadds
in
add
add
xchg
xchg
jns
jmp
mov
stc
jg,pn
add
sahf
and
clc
cmpsb
mov
pop
cmc
mov
mov
mov
pop
repnz
push
shrl
mov
push
sbb
xor
and
addr16
xorb
outsb
mov
test
jbe
push
xchg
or
nop
mov
cmp
adc
aaa
mov
shll
repnz
xlat
sahf
lock
adc
nop
out
mov
push
sub
sbb
cmp
test
sbb
popl
cmp
popf
jnp
test
jp
and
test
xor
jo
jo
push
vcvtss2sd
jne
cmp
in
sbb
xchg
lret
clc
sub
leave
pop
das
mov
pop
movsl
xor
shll
cmp
fisubrs
and
xchg
or
pop
pop
add
pop
rorl
add
scas
lcall
adc
sbb
arpl
mov
xor
add
out
xchg
cmp
mov
jno
fcmovnb
stos
rclb
cmp
imul
adc
dec
pusha
jo
xchg
lods
cs
add
xchg
jmp
sbb
insl
jae
pop
cmp
sbb
cltd
sti
ret
out
andl
and
xchg
repz
ja
lgs
sbb
fimuls
push
sub
jae
sub
lods
std
test
enter
dec
gs
jmp
gs
cltd
das
int
mov
pop
arpl
lods
frstor
push
mov
mov
bound
lods
js
ret
cmp
add
xchg
sbb
lods
arpl
repz
cmp
push
gs
aam
inc
xor
pop
out
xlat
jp
or
mov
pop
fldcw
sub
out
int
inc
das
roll
add
jl
cs
idiv
jne
iret
popa
aam
dec
cmp
add
lcall
lea
fisubrl
fwait
mov
push
cmpsl
lret
xlat
les
in
xlat
jne
cmc
mov
movsb
xchg
adc
jle
sbb
pop
mov
lahf
sbb
push
mov
xor
sub
ja
pop
pop
push
ffreep
or
dec
movsl
adc
and
aas
in
test
inc
cld
into
sbb
daa
adc
adc
outsb
outsb
pop
into
or
push
jns
mov
adc
negl
mov
pop
push
fmul
loope
lock
out
rol
insb
pop
addl
xchg
scas
mov
push
popa
add
out
clc
repz
test
cwtl
lock
daa
add
sub
mov
jle
jmp
pop
outsb
cltd
xchg
in
mov
movsb
lock
sbb
adc
enter
jge
or
sbb
pop
push
mov
jle
cmp
divl
lods
adc
add
jae
jae
xchg
je
fs
cmc
outsb
inc
xchg
insl
cmc
add
add
pushl
sub
lds
add
add
mov
pushf
mov
test
jne
mov
imul
or
sahf
xchg
dec
mov
in
xor
addl
adc
jo
int3
out
and
mov
insb
ret
lds
cmp
push
cmp
fdivrs
push
pop
jns
push
stos
cmp
cltd
js
mov
sbb
in
jae
test
push
dec
test
fs
ret
mov
add
push
sbb
icebp
ja
les
fwait
jns
mov
inc
push
xchg
ret
ret
mov
jecxz
mov
push
icebp
lds
sbb
or
sarl
aad
inc
inc
cld
jbe
lods
insb
iret
adc
xor
fnsave
ret
es
ds
pop
add
outsl
xchg
cwtl
jp
push
lret
aas
push
scas
cwtl
xchg
leave
pop
aam
ljmp
icebp
cmp
sbb
mov
jge
std
sti
iret
ss
push
jno
aam
mov
add
add
into
outsb
xor
cmpsl
les
or
push
sub
dec
sbb
push
add
scas
out
adc
popf
push
and
outsb
aas
sahf
inc
rcrl
je
xchg
xorl
pop
leave
push
ja
repnz
inc
jecxz
cli
cs
cmc
gs
adc
mov
das
dec
mov
mov
ficoms
adc
cmp
jne
mov
fs
mov
mov
cmp
loopne
adc
jbe
cmp
fdiv
fdiv
shlb
punpckldq
or
pop
enter
es
test
jns
pop
in
imul
add
dec
mov
shrl
adc
test
pushw
dec
inc
test
cs
imull
mov
add
test
jb
add
push
jne
outsb
out
aaa
arpl
jecxz
inc
test
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
or
inc
test
add
fwait
in
loop
in
punpckhbw
push
jo
mov
inc
into
inc
aad
pusha
into
xchg
das
jnp
push
movl
pop
test
scas
aaa
push
imul
push
inc
aas
test
cmp
arpl
push
inc
pop
ljmp
sub
leave
dec
out
cmc
stos
std
aam
sub
sbb
fcmovbe
adcb
test
adc
imul
jp
pop
xor
imulb
push
data16
mov
addl
add
addps
dec
cmp
xor
out
lods
mov
cmp
sbb
popa
faddp
out
sahf
pop
shll
sub
mov
addr16
mov
pop
xor
ret
rcll
fcoml
push
dec
pop
rorb
out
call
in
cmp
sbb
jp
in
or
adc
add
add
mov
mov
test
add
or
inc
sbb
movsl
aas
cltd
ja
xor
xlat
dec
lods
aad
movsb
pop
daa
movsl
pop
int3
imul
mov
mov
dec
cmp
xlat
push
pop
jns
sbb
and
mov
fsts
xor
or
and
push
test
and
or
mov
shl
jle
or
aam
repnz
test
pop
sbb
cmp
sub
sbb
add
test
outsl
mov
mov
fcoml
xchg
shrl
aad
sahf
jp
mov
repnz
arpl
mov
jmp
js
sub
dec
pop
dec
jp
loopne
mov
in
cmp
mov
shll
daa
pop
cli
cmpl
and
jle
push
mull
dec
aaa
cmp
dec
xor
loope
pop
jb
cmpsb
inc
push
mov
dec
nop
adc
push
sub
loop
pop
and
insb
mov
cmpb
cmp
add
and
out
ljmp
lock
xchg
divb
add
cmp
fwait
int
jg
loopne
orl
les
mov
inc
add
pusha
pop
faddl
mulb
notl
pop
or
add
xchg
sub
cmpsb
test
push
out
jecxz
xor
adc
sahf
pop
push
xor
rolb
into
push
sub
mov
pop
push
and
mov
sbb
push
scas
stc
inc
ret
mov
or
in
sub
push
jmp
lret
sbb
jb
loope
inc
fstps
scas
iret
fsubs
cmp
mov
pop
lea
xor
mov
push
push
shrb
mov
jnp
lcall
insb
inc
inc
add
cltd
cld
push
lret
mov
push
lret
repz
lret
testl
cld
mov
in
fstpl
adc
jnp
loop
adc
cld
into
xchg
add
imul
push
jnp
sbb
push
xor
push
inc
fs
xchg
add
ret
push
test
sbb
cwtl
mov
popf
nop
fwait
iret
push
mov
sbb
mov
jne
dec
movsl
cmp
ficompl
xchg
dec
sahf
cmp
or
enter
nop
sbb
pop
xchg
cmp
popa
push
ja
lret
loope
pop
int3
inc
push
mov
pushf
das
js
shr
or
inc
push
in
inc
add
and
xor
mov
movsb
ret
adc
mov
mov
test
sub
test
mov
xor
mov
jge
popf
outsb
ja
in
les
mov
fimull
stos
or
mov
jae
pushf
pushf
lret
dec
das
lret
mov
add
pushf
iret
push
jns
pushf
mov
int3
pop
out
shrb
int
cmp
out
cmp
xor
and
test
jmp
xchg
insl
or
dec
pop
aaa
xor
ret
imul
shr
jne
das
pop
push
dec
pop
std
aad
dec
jl
dec
mov
add
add
aas
or
mov
jmp
mov
add
inc
loope
je
jge
inc
push
jg
xor
adc
es
fstpl
idiv
or
dec
push
test
jmp
push
or
mov
mov
xchg
xor
mov
loopne
std
movsl
out
and
jne
loopne
mov
repnz
xor
sub
outsl
sub
out
dec
iret
ficompl
add
pop
insb
stos
push
push
sti
sahf
push
cmp
inc
add
shll
mov
jg
mov
addr16
js
or
pop
fnstsw
xor
leave
add
push
and
xlat
sbb
push
repz
rcrl
sti
repnz
pop
dec
ss
xchg
mov
inc
jecxz
mov
lahf
cli
icebp
imul
lcall
enter
jbe
add
mov
mov
in
inc
ds
leave
xor
fidivl
mov
out
sub
jmp
pop
fistl
cmpsb
lret
test
roll
xchg
imul
insb
fidivl
bound
fs
pusha
mov
add
orl
test
adc
xor
xchg
dec
mov
mov
pushf
repz
mull
rolb
stc
mov
lcall
sbb
push
inc
dec
mov
sbb
dec
lahf
inc
adc
mov
pop
jae
pop
add
push
cmp
cmpsb
and
in
sub
orl
lea
jns
mov
push
push
movsl
mov
lahf
iret
pop
inc
fchs
int
js
into
dec
int
sbb
inc
negb
or
adc
push
dec
mov
stos
mov
sahf
lock
lods
popa
repnz
inc
cli
adc
js
clc
mov
xchg
ret
icebp
xchg
and
loope
popa
push
pop
mov
mov
mov
mov
lods
mov
fst
mov
cmp
jge
sbb
dec
mov
mov
cmpb
and
jae
xor
add
cmp
mov
jns
jmp
add
add
lcall
loope
xlat
pop
jl
and
aam
mov
jmp
imul
inc
xchg
insb
nop
insb
das
mov
xor
xchg
divb
cmp
xchg
or
inc
adc
push
mov
mov
js
mov
jl
adc
xchg
inc
pop
into
popf
sbb
dec
fldl
jno
mov
in
loope
mov
lret
push
xor
adc
push
pop
cmpsl
pop
clc
jns
stc
lret
stc
stos
lds
fs
fnstsw
mov
incl
sub
add
icebp
pop
jne
push
mov
loope
stc
daa
push
adc
mov
aam
push
mov
inc
and
and
popf
mov
orb
cmpl
push
xor
add
add
push
popf
mov
push
inc
mov
or
ret
inc
repnz
push
popa
pop
faddl
inc
test
cmp
jle
dec
ljmp
add
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
mov
mov
add
push
pop
xor
jns
xor
scas
sub
xor
cli
mov
addr16
cmc
xor
out
sbb
sub
xor
jo
andl
loopne
scas
inc
xchg
pop
mov
or
adc
out
mov
sbb
push
mov
cmp
shrl
mov
hlt
mov
les
dec
xchg
mov
gs
and
and
loopne
loop
lret
sub
loope
imul
movsl
cmp
jle
push
insl
or
cmc
lods
mov
and
cmp
xchg
mov
xchg
sbb
add
push
out
push
push
stos
lret
add
mov
ds
inc
iret
cmp
aad
push
insb
xchg
stos
sbb
imul
jge
imul
scas
fwait
xor
mov
fwait
dec
add
add
adc
std
out
ljmp
outsl
mov
add
push
xchg
jne
dec
mov
xlat
mov
mov
out
fcoms
cltd
std
enter
add
mov
pop
cld
lds
rolb
les
pusha
add
sub
inc
stos
cmpsl
pop
jnp
outsb
in
sub
pushf
aas
leave
lcall
cltd
stos
iret
fisttpll
add
inc
push
insl
les
dec
lcall
js
and
ret
inc
ja
emms
lea
ret
shrl
aas
jbe
das
sbb
xchg
out
cmc
leave
movsb
popa
loop
mov
inc
mov
repnz
shll
fisubrl
aam
aas
enter
jl
subl
dec
loop
int3
xor
fs
test
inc
dec
imul
rolb
cmp
adc
test
jge,pn
lcall
in
sbb
test
scas
mov
dec
xchg
repnz
loop
push
push
mov
fcoml
ljmp
imul
add
add
mov
icebp
mov
lea
add
push
sub
lahf
sub
cs
loopne
insb
scas
sbb
lea
in
adc
into
ss
cmc
cmp
pusha
call
sahf
fsubrp
mov
dec
in
lds
jbe
pop
movsb
in
aaa
jle
sbbl
add
ret
test
sub
sahf
xchg
push
das
fisubrs
cmc
sbb
out
adc
add
fbld
aad
fistl
push
aas
pop
aam
out
andl
out
dec
pop
jp
sahf
data16
mov
adc
lds
out
popf
jmp
in
rcr
jp
jp
mov
test
push
mov
jb
aam
aam
mov
mov
xor
jo
push
sub
jmp
loope
aas
mov
pusha
imul
das
lcall
pop
xchg
cmp
mov
pop
aas
inc
lret
add
push
xchg
add
inc
or
test
fcomps
add
fsub
or
add
add
adc
out
xor
imul
ror
aas
push
das
adc
sub
gs
popa
outsb
add
xchg
in
mov
sub
cmp
push
sub
test
lea
iret
out
and
sbb
push
dec
pusha
pop
test
cmp
ja
xlat
cs
mov
ss
test
and
ret
push
cltd
cmpsl
ds
mov
xor
jne
and
mov
add
insl
or
push
jl
repz
jg
pusha
jbe
xor
cmp
pop
adc
bound
dec
xchg
sbb
mov
pop
xchg
jmp
fmuls
jne
les
dec
jae
movsl
xchg
data16
push
test
stos
movsl
leave
in
in
push
fprem
pop
adcb
aaa
int3
jns
xor
cmp
rcr
or
jmp
add
add
ljmp
dec
mov
jnp
jle
add
add
hlt
pop
cld
loopne
pushf
and
loopne
cmc
or
jbe
mov
test
popl
fmuls
lods
add
xchg
cmp
out
sbb
cmp
and
sub
jne
aam
mov
fs
push
add
xchg
dec
loope
call
aad
pop
mov
ja
out
in
popa
pusha
rcrb
jno
test
xchg
or
lahf
mov
inc
popf
dec
fmuls
jns
in
fstpl
mov
mov
add
scas
add
adc
inc
push
mov
daa
hlt
iret
mov
xchg
sbb
dec
shll
adc
add
inc
or
cltd
jp
pop
pusha
add
mov
sarl
push
pop
add
fwait
outsl
xchg
clc
pop
sar
lret
dec
push
cmpsl
mov
sbb
jns
scas
movsl
fmul
add
add
aaa
shlb
cmc
div
testl
bound
add
add
out
js
xchg
jle
ljmp
scas
sbb
nop
or
cld
imul
int3
cmp
outsl
in
test
aad
dec
push
rcrb
lds
sbb
or
leave
cmp
cmp
dec
push
cmc
push
scas
xchg
cmpsl
enter
mov
push
nop
jne
test
shrl
xor
push
pop
int
and
push
xchg
dec
add
dec
mov
cmp
bound
push
dec
enter
mov
cmp
mov
in
dec
or
or
inc
or
mov
fsubrl
fnstcw
idiv
call
dec
pusha
add
cli
ss
xchg
arpl
mov
pop
dec
loop
rcl
xchg
sbb
inc
sbb
pop
jecxz
xchg
mov
push
out
push
push
in
ja
lods
repz
rcll
pop
fsubrs
add
add
push
sahf
rcr
pop
adcb
lret
xchg
mov
add
ficomps
sub
mov
or
dec
sti
nop
fisttps
dec
ficoml
pop
es
rcrb
sbb
imul
add
mov
addr16
add
push
jmp
sub
mov
xchg
push
mov
xchg
adc
dec
orb
in
ficoms
cmpsb
fimuls
pop
add
push
ss
jno
je
mov
jmp
mov
xlat
pop
pop
pusha
repnz
decl
or
lds
int
ret
pop
push
or
sar
and
push
lcall
mov
aam
jns
out
xchg
inc
sub
jo
cmpsl
jge
gs
cmp
iret
test
pushl
cmp
or
jo
add
mov
repnz
xchg
gs
and
fdivl
int
and
ja
rolb
add
arpl
cmpsb
jcxz
fimull
lea
add
xchg
pop
mov
leave
fs
and
pop
pushf
pop
push
mov
cmp
mov
mov
rolb
and
xchg
jbe
clc
sub
pop
or
dec
push
testl
or
inc
push
sub
xor
addr16
lret
insl
pop
sbb
bound
and
ds
xor
nop
xchg
stos
addb
lods
xchg
fs
or
sbb
sbb
jmp
cmpl
jns
movb
stc
push
fists
repnz
testl
mov
xchg
test
cmp
xchg
jle
das
push
dec
sbb
pop
ss
test
andb
out
ror
sub
sub
inc
mov
inc
jo
int
pop
pop
mov
outsb
or
icebp
in
dec
push
aas
jno
aam
inc
mov
sub
rcll
jnp
shl
xchg
mov
add
add
clc
jnp
jg
in
cli
enter
cld
repnz
pop
xchg
xchg
add
add
or
add
dec
sahf
int
xor
test
rcrb
sub
neg
jl
cmc
das
bound
and
sub
mov
jl
pushl
inc
sub
je
jne
xchg
stos
test
mov
jbe
data16
jle
fdivrs
mov
jno
cmc
pop
jg
leave
xchg
stos
add
ret
xchg
push
xor
out
and
adc
fwait
and
cmpsl
or
leave
dec
das
insl
jl
cmp
mov
sahf
cmc
cld
cli
dec
stos
out
or
mov
stos
pop
leave
pop
loop
mov
cwtl
out
je
pop
cwtl
mov
jne
mov
in
aas
daa
mov
lods
pop
cs
mov
mov
in
icebp
cmpsb
add
mov
push
push
jo
cmpsl
mov
add
addl
inc
outsl
push
xor
out
jne
mov
inc
dec
or
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
sahf
out
push
nop
cmp
ficompl
test
xchg
or
jb
jg
mov
xor
dec
inc
sub
fisubrl
push
mov
fisubl
pop
jecxz
bndldx
adc
adc
imul
mov
cmp
inc
popf
cmpsl
iret
and
sub
cmp
mov
mov
das
inc
or
insl
dec
int3
push
push
insb
in
jmp
pop
ret
add
or
cltd
pop
pop
pop
and
rcll
push
movsb
dec
stc
sbb
and
das
pop
out
iret
fdivrl
sub
fwait
movsl
cmc
lock
pop
push
enter
rcr
test
sar
add
rcrl
scas
in
pushf
mov
sbb
inc
fcompl
mov
lret
popf
pusha
or
repz
iret
cmp
insl
xchg
pop
iret
stos
lock
into
sbb
sahf
mov
popa
fsts
cs
lock
add
sub
dec
sahf
and
jecxz
mov
add
jl
sar
std
jle
pop
popf
scas
mov
sub
xchg
add
add
sete
cmpsl
ja
push
jae
mov
mov
mov
mov
js
lock
cmp
jge
pusha
stos
shl
dec
mov
dec
aaa
cmp
sti
cmp
shrl
popf
jg
add
lcall
push
repz
jbe
movsl
aaa
mov
pop
mov
out
fisttps
xchg
pop
dec
mov
pushf
xchg
les
aas
pop
mov
nop
xor
mov
xchg
scas
in
dec
adc
ljmp
lock
out
repz
mov
std
and
sub
cmp
fbld
clc
mov
fists
dec
dec
cmpsb
pop
mov
xor
lods
mov
sbb
mov
cmpsb
or
movsl
xchg
cli
jnp
lcallw
jae
adc
mov
xor
stos
lahf
nop
andb
sub
lods
insl
leave
in
lea
jl
fwait
lret
sarb
mov
add
add
cwtl
or
stos
xchg
cmp
in
jp
clc
inc
mov
add
add
xlat
test
je
push
movsb
jbe
jge
cwtl
and
inc
inc
cmp
or
xchg
jbe
inc
das
mov
pop
mov
test
sti
lea
jle,pt
lock
add
pop
xchg
or
adc
inc
outsb
scas
stos
sub
inc
insb
scas
jge
jns
and
pop
mov
push
stc
sub
inc
xchg
lods
gs
and
jge
cmpsb
push
pop
xor
mov
fcompl
jnp
lods
jne
sti
movsl
jbe
daa
inc
dec
add
push
xor
cmp
in
or
adc
test
push
lret
mov
dec
mov
jnp
popf
outsb
lret
int3
sbb
or
dec
push
sbb
adc
insl
sbb
repz
das
inc
pop
add
cmpsb
test
xchg
mov
shll
mov
dec
frstor
xor
add
mov
mov
cs
add
pop
jbe
cmp
cltd
std
pop
adc
fwait
and
popa
mov
xorl
cmpsb
xchg
add
add
lock
dec
aaa
dec
shlb
jecxz
scas
mov
aaa
or
stos
loope
push
sub
fdivl
adc
fwait
movsb
dec
fnstsw
cmp
push
push
inc
lret
adc
addr16
orb
inc
sub
lds
xchg
jl
cmpsb
imul
aad
mov
lods
out
insl
inc
mov
aad
int3
push
loope
cmpsl
mov
mov
xchg
daa
outsb
mov
push
pop
fs
add
push
fisubrl
iret
mov
jne
imul
imul
mov
push
mov
xchg
fmull
test
pop
push
test
cli
mov
add
pop
mov
mov
clc
jecxz
in
inc
pop
adc
in
rol
es
mov
mov
xor
fnstcw
xchg
add
pop
adc
out
shlb
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
inc
add
daa
lcall
ds
out
jb
daa
test
leave
scas
push
nop
ljmp
jl
cmp
cld
or
push
repnz
movsb
xchg
dec
aas
cmpsb
aad
insl
and
lds
cwtl
aas
jmp
add
das
inc
xchg
in
aas
and
push
push
hlt
popl
pop
mov
das
inc
inc
stos
xor
pop
dec
out
jno
loop
sbb
divb
sub
xlat
add
dec
addr16
ror
rcrb
cs
lods
rclb
ss
in
fcomps
add
bound
rorl
popa
or
shlb
ds
dec
or
push
cmc
and
mov
into
std
dec
data16
add
pop
lock
cld
add
cmp
mov
jge
test
sub
mov
xchg
addr16
xchg
add
add
mov
mov
jmp
test
xchg
imul
and
mov
or
sbb
sub
lds
pop
jecxz
aam
mov
scas
cld
xchg
subl
push
jmp
push
adc
stos
sbb
lahf
dec
jp
ljmp
push
dec
cwtl
cwtl
test
cmpb
mov
es
jne
out
inc
mov
cmp
mov
add
mov
xor
sbb
xchg
cmp
add
xchg
sbb
dec
xchg
pop
pop
or
fstp
xchg
xor
aam
cmc
add
adc
addr16
sub
rolb
jl
sbb
jle
dec
movsb
lcall
mov
daa
lea
mov
scas
sbb
cmp
add
push
ja
inc
nop
into
out
jl
cmp
jp
lods
lahf
incb
sbb
call
mov
sbb
movl
push
inc
mov
add
adc
sbbl
popl
jo
mov
add
add
pusha
mov
imul
lret
mov
jp
adc
jo
std
or
arpl
test
inc
mov
push
mov
and
sti
aad
rol
cltd
or
or
fbld
dec
pushf
pop
adc
cmp
jbe
mov
adc
pop
test
adc
mov
mov
inc
lahf
jmp
aad
insb
aas
fistps
jmp
lahf
mov
xchg
call
enter
out
add
out
sahf
idiv
rolb
mov
lahf
icebp
neg
push
or
sarb
xchg
enter
addr16
fsubrs
pop
and
insl
lahf
loopne
and
es
inc
dec
outsl
xor
dec
sbb
in
xchg
xlat
repnz
lahf
mov
cmpsb
dec
ret
xchg
inc
pop
fmull
jbe
movsb
add
mov
lahf
inc
and
push
loopne
ja
mov
jbe
mov
add
add
imul
movsb
and
pop
xchg
cwtl
mov
add
add
xorb
adc
fstpl
push
cmpsl
push
mov
lahf
or
mov
jp
xor
pop
mov
aad
mov
cmp
mov
hlt
adc
insl
stos
or
lock
or
mov
orl
leave
into
je
aas
cwtl
dec
aaa
cmp
imul
or
hlt
movsb
loopne
inc
pop
mov
mov
inc
aam
in
stos
sub
sbb
xor
shrl
cli
fdivr
aad
push
addb
mov
dec
fsub
inc
mov
xchg
stos
cltd
or
sub
sub
repnz
mov
sub
pop
fdivr
inc
jnp
push
push
fdivp
aaa
pop
and
sbb
inc
push
push
cli
sbb
inc
jnp
in
or
test
pushf
loope
test
call
fsubs
and
nop
push
sbb
sahf
adc
out
ss
loop
rclb
sub
insl
js
test
daa
mov
jecxz
mov
cmp
push
ja
add
mov
jge
jg
ljmp
in
lahf
mov
ret
mov
add
add
out
push
push
inc
movups
mov
pushf
faddl
mov
int3
lret
xchg
outsb
add
std
push
mov
mov
inc
xor
lret
repnz
rcrb
imul
add
out
push
sbb
fnstcw
data16
mov
shld
xor
jmp
push
jae
cmpsb
cs
or
adc
dec
std
push
xor
loope
xchg
pop
orb
and
lcall
sti
add
add
mov
fcomip
sbb
xlat
aad
xchg
ret
imul
fdiv
mov
jo
sbb
pop
mov
mov
mov
loopne
mov
decb
cs
fiaddl
fucomip
ret
addb
push
push
rorb
inc
mov
cs
loop
popa
test
sarl
xchg
in
pop
push
imul
add
add
ja
out
inc
sub
or
insb
mov
add
lea
dec
icebp
dec
xchg
in
loope
aad
nop
adc
push
pushf
mov
dec
gs
pop
jl
dec
cmp
jae
outsb
add
push
and
mov
mov
loopne
xchg
scas
and
xchg
push
es
pop
jg
nop
js
stc
xchg
ficompl
fstl
mov
pop
xor
out
cmp
scas
jo
movsb
xorb
lods
cmp
xor
les
in
nop
mov
mov
orl
inc
sub
out
jb
dec
cs
xchg
and
int
out
or
inc
fdiv
xorps
leave
sbb
pop
pop
add
lods
xchg
arpl
inc
int
xchg
mov
pop
hlt
push
cmp
mov
les
xchg
push
shl
ljmp
cmc
inc
out
inc
stc
in
push
imulb
jnp
adc
and
lea
js
xchg
push
mov
cmpsb
sahf
fidivrl
cwtl
push
popl
add
loop
test
mov
cld
mov
leave
sahf
add
add
mov
sub
xchg
dec
xor
int
mov
rolb
pop
fs
mov
call
ljmp
mov
inc
gs
xchg
fsubl
gs
les
cld
in
inc
shlb
mov
popa
pop
enter
xor
push
mov
xor
adc
sub
imulb
dec
mov
push
fucomp
adc
sahf
lcall
js
int
lcall
xchg
xchg
jbe
int
fimuls
ja
push
or
notl
mov
dec
fstps
test
jle
push
mov
xor
or
bswap
dec
mov
xchg
pop
in
mov
dec
sbb
test
scas
repnz
bound
inc
rcrl
lods
ljmp
xor
xchg
pop
inc
rorb
sub
jnp
stos
add
push
mov
or
pop
lods
in
push
push
mov
cwtl
cmpl
sub
add
add
mov
repz
repz
cmpsl
add
lahf
add
add
popf
pcmpgtw
cmp
or
enter
leave
adcb
sub
scas
xor
cmc
pop
aad
scas
aad
xorb
es
push
std
stos
std
mov
xchg
dec
xor
out
push
into
icebp
pop
inc
es
pop
iret
sub
movsl
insl
aam
jmp
addb
adc
dec
sub
fsubrl
lret
jbe
adc
stc
pop
fmul
stos
push
jnp
ret
out
stos
enter
mull
mov
or
mov
addr16
icebp
xor
ljmp
mov
sub
mov
std
repz
roll
add
cmp
ror
mov
sarb
cmp
aas
push
add
repz
mov
repz
inc
js
xchg
popf
inc
cmp
push
or
pop
cmpsl
ficompl
and
negl
dec
add
dec
push
lahf
inc
ja
fwait
cltd
adcb
add
movsb
mov
mov
inc
inc
add
mov
add
rcl
cmp
xor
jae
add
fs
call
cmp
xor
adc
daa
cmp
mov
or
cmp
push
faddl
fisubl
inc
sbb
push
popf
out
fwait
cmp
movsl
cmp
std
push
icebp
jne
shl
jns
mov
outsl
xor
negl
cmpsb
jb
dec
jae
rcrl
sub
cld
out
scas
mov
or
lods
add
mov
nop
push
enter
cmp
sbb
xor
lahf
inc
outsb
mov
sub
jle
les
andb
jb
push
pop
and
add
mov
push
loop
mov
cmp
mov
int3
sbb
icebp
push
orb
mov
inc
pop
loopne
or
inc
add
push
push
lret
lods
repz
jp
cmp
dec
nop
cltd
cmpsl
stc
mov
add
add
std
inc
mov
out
sub
mov
add
je
les
mov
clc
xchg
insb
cs
push
popa
mov
jo
sbb
adc
std
push
xlat
mov
fadd
sub
lcall
mov
adc
mov
nop
push
mov
lods
mov
adc
cmp
push
addr16
push
pop
mov
divl
ret
push
sub
sub
movsb
xchg
pop
mov
stc
bound
fs
or
or
test
lea
cmpsb
cmp
sub
movsl
dec
sahf
fs
rcrb
aaa
test
pop
dec
test
adc
pusha
out
dec
loop
push
scas
xchg
mov
push
jb
push
pusha
add
xor
rcll
fwait
test
out
adc
mov
ror
daa
ret
cmp
xor
in
dec
sbb
xchg
pop
add
inc
enter
jecxz
add
inc
lods
scas
mov
stos
cltd
cli
bound
xor
out
sbb
in
xor
add
add
inc
fdivl
push
dec
mov
frstor
add
jl
or
je
jle
andb
cmp
lahf
push
jno
das
mov
cltd
stc
or
int
mov
fdivrl
jbe
aaa
adc
gs
cli
cmpb
push
test
in
out
sahf
lods
xchg
fimuls
sub
mov
faddl
mov
cmpsl
aas
out
enter
in
and
mov
cmc
push
pop
cmp
xchg
sbb
mov
pop
out
loope
imul
dec
aad
push
outsl
outsl
nop
jnp
dec
pop
dec
jmp
jae
jns
out
and
push
lahf
adc
mov
adc
gs
jg
ret
xchg
ljmp
xchg
xchg
fnstenv
lcall
mov
pop
lods
into
mov
sub
insl
aas
fdiv
jge
shrl
inc
stc
xor
cmpsb
int
fbld
ret
popa
pop
int3
dec
push
sub
out
sub
das
cvtpi2ps
scas
sub
adc
mov
sbb
and
add
jb
sbb
gs
jle
cmpsl
sub
xchg
popw
outsl
loopne
je
loop
mov
inc
push
sbb
idivb
pop
cmp
rcrl
into
andl
and
cmp
adc
add
shlb
cli
sbb
mov
insb
lahf
cmp
je
aas
inc
jnp
ret
shrl
dec
adc
leave
out
adc
inc
out
pop
sub
sbb
mov
bound
xchg
jmp
xchg
mov
xor
mov
cltd
hlt
pop
iret
dec
xor
dec
gs
cmp
insb
fistps
cs
mov
and
push
cmc
push
pushf
sub
ret
mov
pop
jnp
aaa
jmp
sub
mov
push
ja
push
cmp
xchg
dec
bound
sahf
cmp
jge
fucomi
jne
mov
jo
rol
movsb
and
clc
add
pusha
pusha
rcrl
fistpl
lret
inc
or
add
add
stos
hlt
jmp
cmp
jbe
repz
pop
jg
movsb
add
add
xchg
in
xchg
fdivr
pop
sub
repz
add
scas
testb
push
fisubl
shrb
lods
iret
sbb
mov
jmp
jno
aam
mov
imul
xor
xor
or
pop
add
jnp
data16
leave
shl
sub
add
adc
push
fwait
aam
stc
push
jns
ds
das
outsb
add
arpl
gs
jbe
adc
mov
movsl
sub
fidivrl
xchg
and
int3
inc
les
jo
pop
mov
aam
jnp
lea
jp
push
hlt
pop
pop
out
xchg
adcb
std
mov
pop
xlat
xor
out
mov
add
iret
inc
aas
loop
out
movsl
enter
add
add
repz
lahf
pop
mov
mov
mov
sub
xor
mov
dec
fidivrs
fdivs
add
add
push
nop
out
xlat
out
jg
in
xor
and
pop
in
movsl
add
add
xor
or
subl
pop
cs
call
lret
cmp
dec
jnp
in
repz
ficoml
sub
and
fbstp
xchg
fidivrs
test
arpl
mov
test
jne
std
and
jg
xchg
or
fwait
dec
daa
fstps
cld
sub
mov
pop
mov
jmp
mov
xor
cli
pop
lods
bound
iret
pusha
push
out
mov
xchg
movsb
sbb
jno
ss
outsb
xchg
daa
mov
push
xchg
cmc
scas
js
lret
enter
fbstp
push
fwait
dec
mov
adc
push
mov
in
mov
dec
or
ret
stc
mov
pop
mov
in
aam
das
and
cs
daa
insb
loopne
cmp
popf
lret
mov
test
mov
sub
mov
mov
test
add
add
mov
inc
fwait
lds
jo
fldl2e
das
imul
cmpsb
add
add
rorl
sub
repz
jge
cli
sbb
mov
iret
jae
mov
add
scas
mov
or
lahf
enter
mov
xchg
jmp
xchg
add
sbb
fildll
fcmove
cmp
call
outsb
or
push
mov
add
lahf
fdivs
mov
cmpsb
mov
lret
nop
sbb
fcmovne
and
mov
jmp
sti
scas
or
bound
inc
mov
or
dec
fcomps
or
imulb
jmp
test
mov
jecxz
in
sbb
loope
inc
aam
push
fadds
ficomps
int
add
ja
test
loop
imul
pop
divl
or
add
frstor
fisubl
push
dec
andb
lcall
dec
or
pop
jno
and
jge
push
mov
sar
jecxz
xor
sarb
repz
add
lcall
std
inc
jne
subl
add
add
pushf
notl
mov
cmp
movsb
fbstp
psadbw
xor
incl
cmp
dec
mov
test
mov
cmp
stos
stc
inc
pop
sti
pushf
jbe
loop
xchg
ret
lods
loop
int3
icebp
jecxz
sub
ljmp
pusha
adc
mov
shlb
push
jg
jmp
dec
aaa
mov
dec
inc
out
aad
in
out
movsb
inc
xchg
mov
jnp
ffreep
scas
mov
and
cmp
mov
repz
rcll
xchg
and
pop
stos
xchg
and
hlt
nop
push
scas
or
mov
adcl
adc
pop
or
push
fsubr
sahf
das
xchg
and
dec
jo
cmp
sbb
jp
cmp
inc
ror
mov
fmulp
and
pusha
push
insl
outsl
xchg
lret
sbb
xchg
lret
mov
adc
leave
xchg
idivl
imul
imull
fbstp
inc
adc
add
add
mov
push
sti
jmp
push
mov
divb
sub
add
out
aad
dec
mov
cmpsl
mov
push
add
movsl
cmp
ficomps
test
cmp
aam
jne
insl
sbbb
inc
pop
mov
in
cwtl
clc
sbb
and
mov
fiaddl
aas
pop
lods
cwtl
in
pop
arpl
cmc
push
mov
orb
outsl
adc
sub
xchg
jb
and
dec
shrl
lea
rorl
out
cmpsb
ds
cmp
leave
push
mov
loope
stos
and
dec
inc
std
sbb
lock
movsl
pop
cli
lret
jg
xor
and
pop
stc
mov
or
bound
sbb
or
sub
pop
push
sub
sbb
stos
xchg
adc
repnz
adc
mov
in
lret
xor
in
dec
jmp
mov
js
lret
inc
and
cli
pushf
test
sub
push
mov
je
cmpsl
cmc
std
sbb
inc
mov
lret
imul
xchg
shrl
add
mov
jecxz
lock
dec
stos
add
add
roll
shr
scas
enter
sub
xor
sbb
or
xlat
test
pop
out
repz
jb
dec
mov
dec
mov
or
nop
scas
enter
stos
mov
fistl
xchg
pop
cmp
mov
fistpll
pop
push
xchg
rolb
mov
hlt
cmp
sahf
bound
cmp
dec
addr16
xchg
xchg
xchg
imul
stos
and
xchg
or
pusha
mov
lret
in
mov
into
rorl
inc
std
insl
mov
xchg
dec
dec
xchg
and
push
cli
mov
or
loopne
mov
push
push
mov
sub
push
push
in
pop
mov
sbb
cltd
out
pop
mov
nop
sbb
int
mov
push
xor
cmp
push
outsb
cld
hlt
idiv
sahf
data16
rcll
testb
hlt
ja
scas
lea
and
mov
fstpl
testl
add
mov
cld
mov
leave
idivb
add
add
pop
xor
xchg
roll
call
xchg
inc
mov
fmull
pop
and
mov
or
ret
or
mov
xchg
dec
mov
jbe
inc
and
fwait
leave
push
push
mov
ret
insb
addl
mov
out
fnstenv
mov
loope
cmp
xchg
inc
js
adc
adcl
and
sbb
cwtl
push
sbb
nop
fwait
sub
mov
add
stc
and
jb
push
and
dec
or
or
or
inc
mov
ljmp
sub
sub
arpl
and
das
mov
mov
fisubrl
jecxz
aas
sbb
sub
scas
dec
int3
add
jecxz
inc
das
xor
imul
stos
sahf
inc
inc
sub
pusha
ss
cltd
xchg
dec
in
lret
mov
aaa
call
mov
dec
das
pop
out
cmc
mov
xchg
add
or
add
jns
pop
pop
xor
jb
jne
sub
mov
pop
dec
test
fidivl
gs
cmp
stos
fs
pop
mov
leave
cltd
int3
or
pop
rcl
enter
pop
xor
pop
push
sub
push
mov
jle
xor
sbb
fwait
nop
dec
and
cmp
dec
loope
rcl
mov
out
xor
ss
mov
int
sub
xchg
stos
or
and
cmpsb
or
cmp
pop
imul
cwtl
pop
fwait
dec
mov
pop
cli
popa
pushf
cmpsl
push
xchg
fucomi
jo
lods
ljmp
mov
or
data16
adcl
push
add
push
in
cwtl
xchg
push
lret
rcrb
orb
or
lret
mov
mov
mov
sub
hlt
mov
sbb
cmpsl
incb
mov
xor
jg
pop
add
jae
mov
out
cwtl
mov
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
push
orb
add
out
aaa
fldcw
repz
and
repz
pushf
sbb
sti
and
xor
adc
in
and
addb
add
out
mov
std
mov
dec
xchg
lea
cs
cmc
mov
out
ffreep
call
lds
enter
pusha
mov
pop
inc
mov
test
mov
enter
shlb
cmc
mov
push
in
out
inc
mov
adc
je
sarb
push
ror
jp
xchg
cmp
pop
fcoms
cmc
jmp
sbb
lds
sbb
mov
loop
push
jne
cmpsb
mov
pop
adcb
int
repz
mov
out
add
cmc
jo
mov
mov
mov
test
sub
or
add
jg
jnp
out
sbb
mov
enter
dec
pushf
inc
mov
add
fidivs
loop
ljmp
inc
jo
adc
add
add
adc
or
dec
push
xchg
ret
jnp
adcb
cs
scas
in
addr16
pop
sub
shl
cmpb
lret
pop
dec
inc
fnstcw
mov
pop
pop
sbbl
mov
cmp
addr16
out
stc
mov
repz
test
aad
les
clc
xchg
sbb
add
xchg
sbb
mov
pop
cmpsl
or
out
in
sbb
clc
mov
push
insb
mov
sub
aam
xchg
mov
xor
mul
enter
out
scas
pop
fwait
xchg
repz
cwtl
push
cli
enter
icebp
mov
mov
sahf
xchg
es
mov
shlb
dec
stc
test
daa
xor
xchg
sbb
cmpsb
push
mov
sub
jl
inc
xchg
cld
ror
jmp
mov
xor
sti
ret
push
adc
push
ja
js
imul
mov
stos
xchg
shll
xchg
push
mov
add
xchg
jg
jmp
std
mov
cmp
add
add
xor
adc
popa
aad
in
lret
inc
fwait
nop
testl
push
test
ret
xchg
push
inc
or
and
adc
out
sbb
pop
test
push
sbb
adc
sbb
and
sub
test
mov
push
int3
inc
sbb
push
jae
add
sub
movsb
in
sbb
jo
mov
inc
push
mov
lcall
mov
sbb
sbb
sbb
in
sub
idivb
add
paddsw
frstor
mov
sbb
ds
and
lods
push
fs
iret
test
adc
adc
mov
loope
dec
sbb
inc
rorl
mov
mov
mov
and
fildl
mov
stc
fadds
cmp
dec
mov
jl
dec
js
cmp
adc
add
push
divb
inc
mov
gs
mov
add
fs
or
shll
rol
xchg
cmp
cmp
jecxz
sub
jb
inc
xchg
bound
jne
fisubrs
daa
rorb
popl
jae
jl
xchg
faddl
roll
push
fistpll
pusha
lods
pop
push
divl
sbb
xor
dec
mov
clc
pop
mov
xlat
or
cmp
ror
in
repz
mov
aam
insl
mov
out
shrl
pop
cmp
test
out
mov
inc
call
stc
or
sbb
jns
les
ljmp
jns
mov
jge
push
cmp
dec
loop
mov
cs
leave
fs
push
inc
movsl
adc
in
lret
inc
clc
iret
in
pop
mov
jecxz
test
mov
xchg
or
ror
add
inc
pop
addr16
or
test
add
push
pop
xor
cmp
inc
call
hlt
and
add
bound
js
fstps
clc
jp
lods
mov
sbb
push
mov
andb
sbb
insb
jl
fdivs
jbe
dec
stos
jmp
ss
sbb
inc
lock
cmp
orb
and
icebp
nop
roll
pusha
push
pop
stc
mov
lret
mov
mov
sub
add
mov
mov
jl
mov
insb
int
ss
push
push
pop
mov
lods
xor
cmp
shl
outsl
sbb
or
xor
sub
stos
lcall
lods
cltd
push
dec
dec
xchg
stc
inc
fstpl
push
stos
shl
les
pop
or
out
inc
inc
scas
pop
andl
mov
jno
mov
aas
loopne
data16
mov
jae
loope
adc
mulb
or
outsl
pop
es
adc
add
add
jp
les
mov
arpl
addr16
mov
add
inc
pushf
shrb
cmc
ds
and
push
add
mov
add
mov
mov
xchg
push
mov
stos
rclb
cmp
or
pop
loop
std
in
adc
repnz
push
jmp
cmpsl
sbb
aad
add
out
js
jno
ljmp
mov
xor
rcl
ss
jp
add
cmp
rclb
notl
mov
stos
jg
daa
pushf
movsl
sub
shlb
lea
pop
jno
in
icebp
stc
mov
push
mov
imul
push
push
lret
jo
sbb
imul
sub
or
add
mov
das
xchg
mov
inc
in
push
cmpsl
pop
lods
cli
mov
lods
and
rol
xchg
jl
add
cmpsb
mov
push
sti
aaa
sti
lea
pop
adc
movsb
xor
cmc
or
xor
orl
adc
shll
add
add
clc
pop
stc
out
push
pop
bound
lahf
sub
add
add
out
les
bound
dec
pop
mov
fimull
dec
xor
mov
and
push
and
mov
lea
mov
pop
pop
pop
jo
pop
je
mov
cltd
push
jmp
sbb
add
mov
mull
xor
xchg
ss
divb
test
mov
adc
sahf
in
lret
inc
add
fidivs
inc
repnz
mov
ret
push
and
scas
and
stos
sbb
cmp
inc
xchg
lds
or
adc
lods
adc
jge
sti
mov
cmc
sbb
jo
cmp
pusha
cmp
xchg
rolb
scas
loopne
cmpb
mov
test
cmp
outsb
cmpl
cs
push
outsb
push
cmp
cmpsl
xchg
movsb
xor
sbb
jp
jp
fcoml
add
add
push
mov
lcall
push
xor
add
scas
dec
mov
inc
xchg
add
ja
cmp
std
push
jae
mov
cmp
ret
mov
in
loope
and
inc
add
dec
out
xlat
sbb
add
and
add
fs
adc
rorb
inc
fwait
xchg
or
repz
out
push
imul
in
push
pusha
xchg
or
mov
pop
jbe
popa
pop
pop
xchg
sbb
fs
clc
imull
fbstp
xor
cli
popa
push
dec
ja
cmp
jo
or
xor
outsl
jae
sub
jns
sti
xchg
fmull
into
dec
int
stos
lock
scas
sbb
cmpsb
dec
cmpsb
xor
push
mov
cmp
cld
lock
inc
daa
in
mov
sbb
pop
stos
jns
js
out
lcall
dec
mov
add
xchg
jl
or
jb
sbb
adc
pusha
xor
adc
sti
add
hlt
in
lock
mov
add
add
jne
mov
int3
insb
lret
pop
movsl
aaa
mov
add
pusha
and
sbb
enter
aas
call
das
rcl
xlat
push
xchg
repnz
cmpsl
pushf
pusha
jb
push
or
xor
dec
or
ljmp
aam
movsb
dec
mov
pop
mov
std
jecxz
fildl
notb
or
mov
xchg
dec
arpl
dec
xor
xor
jecxz
mov
push
leave
xor
movsl
fs
cmpsl
fiadds
pusha
pop
insb
dec
mov
fwait
dec
sub
sub
push
push
mov
inc
push
stc
cltd
mov
icebp
cmc
js
cli
test
xor
pop
rorl
and
add
cmp
repnz
mov
popa
shrl
inc
adc
sub
jmp
insb
frstor
into
adc
in
cmp
rcrl
mov
mov
and
cmpsl
mov
push
add
insl
sub
out
add
add
pop
sbbl
fstp
rorl
cli
jb
cmp
add
add
lds
xor
mov
inc
xchg
mov
subl
jge
stc
movsl
sahf
xchg
xchg
popf
insb
and
jle
pop
ret
and
pushf
jb
adc
fisttpl
inc
fidivs
sub
test
cli
mov
jl
pushf
add
mov
sub
fisttpll
push
mov
cs
adc
mov
loopne
test
or
pop
add
xchg
push
lcall
and
neg
out
push
adc
mov
xchg
xchg
dec
cmp
xlat
cmp
insb
or
pop
fs
and
mov
sbb
fs
sahf
out
scas
out
push
xchg
in
pop
movsb
mov
sbb
test
popf
cld
cvtps2pi
repnz
loopne
out
push
outsb
push
rcrb
pop
adc
cld
roll
cmpsb
push
push
inc
aas
cmp
adc
ret
jecxz
imul
test
subl
adc
add
loope
mov
jecxz
out
mov
push
fisttpl
mov
add
sbb
wrmsr
adc
call
push
mov
subb
sbbl
sti
xor
int
xchg
and
aaa
push
in
call
fs
out
mov
call
shrl
fs
mov
ret
jle
lret
scas
and
das
and
jb
and
out
insb
cld
mov
pop
xor
adc
jne
mov
fisttpl
inc
push
jle
add
xor
mov
xchg
je
jne
jmp
out
insb
out
add
mov
icebp
int
pop
fisttpl
insl
jmp
aad
mov
and
cmc
lret
popf
mov
jb
ljmp
xor
subl
jl
mov
les
out
arpl
aam
jge
in
or
out
adc
lret
jmp
xchg
add
add
std
test
jg
into
lret
orl
add
add
pop
xor
fsub
xor
fcoms
pop
dec
pop
in
add
movsl
dec
sbb
sub
test
into
aad
les
xor
add
pushf
rolb
scas
fs
in
mov
and
mov
sbb
mov
ja
std
mov
jecxz
mov
cmp
mov
cmp
cmp
adc
call
cld
dec
aam
scas
les
and
jnp
es
add
jbe
mov
or
into
lret
psubd
jmp
lock
xchg
dec
mov
cmpsl
subl
inc
addr16
rcrl
int
rorb
popa
push
push
sbb
pop
or
lods
cmpb
pop
pop
out
and
xor
arpl
sbb
mov
pusha
fmul
jmp
mov
ds
enter
add
lock
in
lcall
jae
dec
mov
dec
aas
cmp
add
add
fdivrs
jl
pop
or
shl
arpl
xor
aam
xchg
sbb
aaa
mov
jle
add
repz
scas
cmpb
ret
inc
inc
xchg
inc
aas
dec
xorb
lret
das
adc
pop
mov
cmp
xchg
xor
jmp
push
mov
push
nop
dec
addr16
push
or
or
push
xchg
inc
nop
push
jns
push
mov
aad
movsl
add
and
inc
int3
dec
push
loopne
loop
xchg
out
pop
mov
pop
and
mov
inc
lds
faddl
addr16
dec
or
pop
mov
imull
mov
ret
pop
adc
xchg
mov
xchg
divb
dec
jecxz
lcall
repnz
sbb
dec
ds
mov
iret
push
cmp
cs
mov
daa
sbb
xchg
jo
cs
xchg
mov
adc
sar
mov
mov
cmpb
cmp
add
sub
jg,pt
dec
arpl
add
mov
add
xchg
rol
leave
ret
mov
int3
pushf
push
mov
je
repz
fistpll
mov
inc
pop
push
insl
add
xor
xchg
cltd
inc
mov
jae
jecxz
sbb
jge
test
ror
mov
push
and
lods
sub
ljmp
rcrl
int
bound
cmp
mov
sbb
nop
mov
mov
loope
mov
daa
fisubrl
pop
subb
fsqrt
or
cs
in
cmc
lock
sub
mov
mov
outsl
sbb
fcmove
andb
pop
test
mov
lods
cltd
imul
pop
cmpsl
inc
fistpl
clc
insl
js
cmp
xchg
addl
es
lret
sub
cmpl
into
pushf
out
jmp
jb
fcoms
subl
sarb
js
fisubs
add
insl
sbb
outsl
mov
scas
int3
dec
sahf
push
mov
add
stc
mov
jmp
push
pop
cwtl
xchg
mov
pop
filds
adc
and
xchg
mov
rolb
cmp
lahf
into
ljmp
or
scas
enter
dec
jb
pop
jl
cmpsb
imul
push
das
mul
ficoml
sbbl
sbb
inc
xor
lds
sbb
add
bound
test
xorb
jbe
push
inc
adc
push
inc
mov
inc
test
loope
out
xchg
lret
cvttps2pi
sbbb
push
das
rclb
frstor
add
xchg
dec
dec
push
mov
sti
hlt
in
cld
sub
sti
adc
and
adc
jne
fcmovb
test
mov
loope
or
add
jge
push
and
mov
out
inc
outsb
fisubrl
xchg
add
fldl
arpl
rdmsr
dec
out
jae
dec
in
add
xorb
inc
movl
add
xor
mov
pop
out
mov
add
jmp
or
int
movsl
sarl
dec
lods
je
add
mov
push
push
roll
and
lahf
push
es
fsubl
imul
sub
rcll
mov
pop
mov
cli
add
jne
mov
mov
ljmp
xor
je
aad
mov
or
jp
pop
into
jle
ja
xchg
or
pop
mov
push
pop
adc
test
jmp
call
inc
sbb
mov
jp
push
or
push
loopne
dec
stc
sbb
rorb
jae
adc
idiv
and
mov
std
push
pop
sub
and
sti
pop
es
fcompp
ljmp
clc
jl
sbb
pop
incl
xchg
cli
mov
inc
ret
insb
repz
cld
ret
mov
xchg
stc
cmc
aam
js
and
mov
mov
xor
mov
mov
stc
xchg
shrb
add
add
fistpll
call
adc
add
add
in
jle,pt
mov
popf
or
cmpb
sub
jecxz
fisttps
xchg
adc
in
aas
push
push
enter
fmul
enter
xchg
je
call
pop
es
movsb
pop
cli
les
jae
shrl
or
push
and
popa
mov
adc
inc
xchg
mov
sub
scas
loop
dec
scas
mov
shlb
mov
sbb
xchg
outsb
mov
lret
mov
cmc
andl
ljmp
stos
jecxz
enter
push
jo
mov
sahf
test
mov
cmp
das
and
fldt
inc
sbb
xor
mov
sar
das
sub
jne
add
mov
and
xor
inc
aad
insb
repz
ljmp
xor
xchg
inc
pushf
fistl
xor
jg
mov
mov
pop
jle
cmp
lock
imul
add
into
std
sti
leave
sti
iret
jmp
jns
sub
add
repnz
inc
jnp
mov
or
iret
stos
sub
inc
mov
or
test
or
jmp
loop
jle
bound
mov
inc
adc
scas
mov
test
rorl
and
or
imul
adcl
enter
int3
and
pop
notl
flds
jo
aam
lods
adc
js
cmp
out
mov
scas
es
fs
pusha
ret
movsb
enter
dec
or
sahf
push
add
mov
mov
jo
rorl
in
cmp
dec
cld
inc
push
jns
repnz
mov
mov
sbb
cs
cmpl
cmpb
jno
xor
ja
ret
or
shr
cs
mov
inc
xor
lahf
js
jne
jb
sarl
ss
cmp
out
repz
arpl
and
fadds
sub
jl
add
add
mov
xor
add
add
add
fcoms
fmul
mov
inc
aas
adc
dec
pusha
inc
or
jne
pop
daa
and
aaa
mov
mov
das
incl
mov
mov
fcompl
inc
cmp
xor
stos
mov
jg
push
call
mov
dec
mov
lret
cmp
loope
pop
push
call
lock
mov
sbb
in
xchg
rcll
fcoml
mov
ficoml
inc
in
gs
cli
in
es
jne
mov
sub
push
cmp
test
or
jbe
jp
call
sub
inc
cmp
jecxz
jns
mov
insl
push
dec
dec
aam
popf
xchg
cli
lock
mov
push
cli
push
sub
outsb
test
xchg
dec
ret
mov
jne
in
push
lea
add
fwait
mov
or
jg
mov
sahf
loop
leave
test
cmp
add
add
and
or
je
loop
xchg
or
testb
call
cmp
adc
xchg
pop
inc
aam
movsl
into
frstor
jmp
mov
cmp
aas
mov
mov
mov
cmp
fiaddl
sbb
xchg
ss
sub
pop
clc
jge
sub
leave
sbb
aaa
mov
jge
push
imul
sub
pop
xor
icebp
js
mov
and
xor
aaa
jnp
inc
or
ljmp
xchg
cmp
repz
out
cld
dec
nop
push
iret
outsb
push
hlt
jns
jb
cmc
std
movb
shrb
and
lahf
ds
in
enter
push
push
cmpsb
lcall
adc
and
fildll
mov
xchg
sub
add
or
jae
ret
dec
fs
add
xchg
cwtl
cmpsb
ja
add
out
pop
mov
scas
testb
mov
add
add
inc
enter
pushl
cld
sbb
jae
add
add
inc
pop
mov
stos
stos
fsub
in
aaa
cmp
mov
f2xm1
xorl
imul
sahf
mov
aam
out
sti
cmp
mov
hlt
enter
cwtl
rcll
std
mov
fwait
sbb
push
xchg
cmp
leave
repz
add
xor
sbb
rcrl
jo
cmc
and
inc
mov
adc
jnp
mov
icebp
fnsave
shlb
lea
mov
out
into
movsl
into
jb
xchg
push
pusha
fdivr
mov
sbb
push
or
jns
cmp
mov
pop
subl
out
les
push
outsl
sbb
fldcw
mov
xchg
add
jo
mov
repz
enter
lds
xor
lods
das
in
std
loope
fstl
cli
dec
repz
xchg
aaa
jae
jb
xlat
mov
or
xchg
add
add
pushf
shrb
lcall
cli
adc
js
add
add
jae
in
or
scas
adc
iret
push
or
hlt
dec
imul
pop
das
push
adc
shr
xchg
mov
jle
or
fldt
jg
lret
dec
out
stc
add
pop
inc
pushf
lret
ljmp
jmp
pop
pop
mov
jg
xor
jnp
sub
in
aam
adc
dec
inc
inc
mov
xchg
jg
dec
sahf
pop
cmpsb
mov
sub
jae
xchg
adc
subb
shll
xlat
loope
rorb
lods
xchg
jmp
stc
movsb
pop
aad
insl
not
dec
mov
add
pop
pop
adc
push
adc
test
mov
mov
mov
cwtl
xchg
xor
repnz
mov
xorl
push
xchg
cmp
cmp
je
push
scas
iret
pop
imul
test
insb
in
sub
mov
xchg
push
xor
inc
add
add
test
mov
aas
scas
fxch
roll
jge
add
add
cltd
std
pop
lods
cmpsl
call
adc
icebp
push
and
dec
mov
xchg
jnp
inc
shr
inc
aam
loopne
sub
or
testb
nop
push
negb
cmc
mov
sbb
sub
mov
inc
pop
or
sbbl
outsl
hlt
lcall
jb
or
fstpt
push
and
mov
mov
leave
push
or
lcall
arpl
stc
xlat
mul
xchg
xor
mov
cltd
sbb
arpl
add
cmpb
rcr
leave
in
add
in
and
mov
jp
cs
mov
or
addb
loopne
movsl
xchg
lahf
movhlps
in
in
xor
repz
push
dec
mov
dec
mov
outsl
out
mov
jl
inc
outsl
adc
call
cmpsl
cmp
mov
out
ljmp
addl
add
jg
jne
jne
jg
loop
mov
and
add
add
or
mov
movsb
loop
and
loopne
les
cmp
test
sub
cmp
sbb
mov
shlb
rcrb
mov
push
ss
inc
ja
mov
dec
psubw
loop
bound
mov
popw
and
dec
pop
lds
mov
insb
into
je
xchg
mov
cwtl
jmp
out
aaa
jb
call
int3
ret
lds
inc
popf
sbb
adc
lods
scas
mov
sbb
sti
push
mov
adc
mov
cmp
insb
xor
fwait
push
jbe
mov
repnz
add
push
or
or
xchg
cmc
mov
ret
jo
int
cltd
clc
xlat
aad
push
pop
lock
pop
cli
cmp
outsb
lahf
mov
mov
popa
push
cs
fistl
subl
jle
inc
scas
adc
mov
add
add
dec
pop
mov
cmc
mov
stos
xchg
add
add
inc
xchg
lret
mov
xchg
out
rol
add
or
pop
mov
rcrl
push
call
fcoml
fmull
pop
fimull
outsb
xlat
mov
pop
jb
lea
xor
push
stos
xor
movsb
mov
fldl
addr16
inc
std
push
sbb
fisubrl
scas
jmp
push
rol
arpl
cld
dec
pop
mov
mov
rorl
out
fbld
jmp
popf
jnp
xchg
inc
or
jl
or
pushf
push
int
repnz
xchg
pusha
sarb
pop
shlb
mov
and
lock
outsb
and
xor
pop
inc
jmp
sub
mov
in
notl
dec
loop,pt
stc
shr
iret
and
cmp
sub
sub
inc
xchg
add
cmp
sub
stc
movsl
xchg
incl
xchg
push
pop
dec
sub
and
outsb
jle
lods
testl
movb
add
xor
testb
push
stos
mov
mov
xchg
pop
dec
add
fldl
je
lcall
in
in
aam
push
xlat
inc
mov
mov
push
sub
pop
stc
and
sub
mov
push
fistpll
sub
insb
setl
std
pop
push
xchg
mov
ss
mov
cmp
fcmovne
daa
pusha
cmp
push
dec
xchg
les
cmp
jge
mov
test
mov
lods
jno
adc
cmp
lods
dec
or
jb
popf
loope
cmp
cld
popa
mov
inc
inc
and
int3
in
inc
imul
addb
or
out
dec
aaa
pusha
sub
adc
in
data16
inc
cld
pop
cmp
mov
xlat
sarl
into
out
xchg
add
add
mov
xchg
insb
fcoms
add
add
mov
jge
fucomip
mov
jg
xchg
xchg
in
push
push
andb
sub
test
shlb
outsl
jl
mov
xchg
xchg
push
hlt
push
cmpsb
lret
sub
pop
nop
xchg
xor
lods
hlt
imul
xchg
ficoml
gs
cmpsl
pop
daa
xchg
notl
jmp
mov
movsl
jp
sub
cmp
sub
sub
xchg
mov
cmpsb
std
repz
pop
adc
shl
mov
mov
mov
cmp
xor
dec
sub
pop
xor
jp
xor
jl
pop
mov
mov
sub
jmp
enter
leave
or
lea
mov
inc
jae
mov
xchg
negb
stc
test
jns
cmp
xor
movsl
sub
lds
popa
mov
popa
ds
lock
add
insl
outsl
xor
decb
add
add
out
sti
xlat
in
aad
pop
pop
xchg
in
xchg
enter
add
add
in
xor
stos
pop
je
push
cltd
ficomps
xlat
add
stc
rcl
das
sub
sarb
mov
cmp
fcmovnbe
cmpsl
addr16
lret
pusha
mov
jp
sub
test
dec
out
mov
pop
scas
jge
mov
mov
shrl
and
dec
or
jmp
popa
cmpsl
icebp
js
shrl
xor
mov
in
cmpsb
insl
mov
or
ja
xchg
inc
pop
cwtl
or
mov
sub
in
inc
fisubrl
mov
cmp
fs
adc
xorl
or
mov
sub
repz
jmp
imul
popa
push
repnz
out
cmc
mov
or
ret
dec
sbb
mov
jae
daa
adc
iret
aas
push
dec
outsb
xchg
sub
roll
push
insl
leave
pop
std
jne
and
test
add
push
sub
cmp
jg
and
mov
xchg
mov
add
add
addr16
je
push
pop
insl
push
cmc
aam
std
sahf
aad
mov
idivl
cli
shr
mov
loopne
push
push
stos
mull
add
push
pop
imul
push
jecxz
dec
mov
icebp
push
jle
jle
sbb
sbb
lcall
sub
mov
subl
and
js
repnz
aad
lret
and
enter
arpl
jmp
lret
adc
imulb
sbb
mov
xchg
fwait
sbbl
jecxz
les
mov
test
dec
gs
test
cld
les
pop
cmp
dec
inc
sub
not
cmp
repnz
popf
mov
inc
bound
push
jb
cmp
loop
cmp
out
sbbl
add
xor
in
sub
rcrl
xor
jg
mov
int3
fwait
shlb
add
jmp
ds
repz
fcoms
mov
lret
add
out
sti
or
lods
xor
mov
lret
ljmp
fs
sbb
cmp
push
cmp
add
lods
test
jle
inc
push
notl
icebp
je
aam
lret
fwait
mov
mov
dec
cmp
add
outsb
lret
xlat
jle
cmpsb
mov
mov
clc
adc
sti
xlat
mov
pop
xchg
cmp
repnz
int3
testb
pop
test
aam
jge
jp
push
sub
mov
adc
cmp
add
inc
pop
mov
les
push
pop
sub
xor
add
jl
push
dec
sub
inc
call
push
sub
sarl
imul
mov
xchg
cmp
jecxz
inc
mov
pop
fwait
and
jmp
insl
js
mov
sbb
cli
jecxz
in
dec
jmp
loope
icebp
lcall
mov
add
add
mov
mov
mov
xor
lret
add
add
aas
cmp
nop
inc
xchg
jmp
or
loop
sar
cmp
mov
mov
jmp
jle
movsb
mov
ljmp
pop
sub
mov
jge
mov
ss
shrb
push
xchg
sbb
cmp
addl
ljmp
xor
mov
mov
jecxz
addb
fwait
pusha
and
cld
add
ljmp
jge
call
push
xor
mov
pop
loope
jne
testb
or
test
lahf
les
mov
mov
sbb
lret
mov
rcrb
and
xor
adc
subl
repz
add
outsl
lods
xor
bound
and
fcomps
mov
lret
add
stc
enter
in
sbb
push
inc
push
int3
add
add
sub
daa
xchg
jg
dec
adc
fbstp
mov
mov
push
xlat
jnp
pop
stos
rolb
pop
lahf
outsl
stc
jle
xchg
push
fdivrl
stos
mov
dec
and
pop
push
mov
inc
xor
add
and
xor
sbb
lods
pusha
jmp
mov
pop
movb
fucomip
jp
out
outsb
mulb
out
andb
jb
sbb
cmp
int
ss
out
and
mov
jg
sysenter
inc
addr16
jmp
xor
push
test
cmp
ljmp
xchg
push
or
out
and
sub
cmp
stc
or
jl
xor
inc
pushl
mov
push
cmp
or
pop
push
outsl
jl
inc
and
sbb
shrl
and
add
jne
imul
cmc
call
inc
push
popa
inc
insb
pusha
jmp
add
jns
fsin
cmpsb
mov
lea
mov
add
xchg
lcall
sub
ja
dec
push
mov
aaa
mov
jge
fsubrs
and
push
xchg
xlat
mov
out
vpmovzxbq
ret
xor
mov
pushf
sub
enter
xchg
rolb
push
dec
arpl
xchg
dec
scas
jns
std
and
sub
xor
inc
or
sub
gs
xchg
mov
mov
mov
int3
cwtl
ja
and
pushl
push
mov
dec
loop
popa
popa
int3
adc
inc
js
adc
pop
jae
jbe
lahf
stos
sbb
lods
dec
cmc
jl
jg
mov
pop
loope
rcll
push
incl
int
sbb
test
inc
or
das
fnstenv
cmp
xor
int3
int3
lret
push
clc
in
adc
pop
insb
pusha
lock
sbb
movsb
adc
arpl
or
enter
xchg
sub
add
movsl
mov
iret
sub
push
cld
stos
mov
add
add
and
imul
cwtl
push
jne
int
out
fidivrl
and
dec
clc
add
loopne
int3
repnz
cltd
lret
inc
jl
das
mov
and
push
mov
stos
test
rorb
xchg
adc
or
add
jl
imul
mov
jecxz
add
aad
xorl
js
mov
les
daa
xor
dec
repz
movsl
mov
inc
shr
mov
add
mov
inc
xchg
loop
sub
in
sbb
dec
stos
icebp
inc
stos
cmc
lahf
sbb
popa
in
iret
dec
je
jns
add
add
or
orb
xchg
mov
ja
shlb
mov
pop
hlt
xchg
sbb
pusha
cli
cmp
fmuls
test
jae
ds
stc
mov
ficomps
add
mov
out
out
out
into
gs
cld
test
nop
adc
add
sbb
and
xchg
cltd
push
adcl
imul
aaa
jmp
adc
jno
push
bound
mov
fldl
std
mov
decb
jae
icebp
inc
movsb
mov
pop
jl
xlat
xchg
mov
cmc
adc
mov
mov
jne
and
dec
ret
jo
sbb
cmp
ret
or
jnp
ret
dec
xor
mov
ja
jo
cmp
jmp
scas
xchg
cmp
pushf
mov
xor
dec
add
and
andb
adc
jle
inc
orl
iret
xor
adc
xchg
mov
cld
mov
pop
xor
repnz
fcmovnu
push
out
cld
mov
cmpsl
es
dec
sqrtps
mov
arpl
out
push
inc
outsb
iret
mov
dec
push
popf
out
movsb
lcall
push
fmull
dec
sub
add
loopne
and
je
out
mov
xchg
insl
rclb
add
inc
fdivs
pop
out
out
sub
cmp
sbb
push
and
movsb
aaa
test
sub
and
loopne
dec
xchg
das
mov
cmpsl
mov
mov
popf
dec
ja
lea
mov
mov
dec
nopl
or
push
inc
add
fistl
inc
jae
inc
lea
adc
ds
mov
add
push
inc
xchg
cmp
outsl
out
inc
repz
push
push
jbe
jns
mov
mov
leave
sbb
fldt
inc
xchg
das
and
inc
je
lods
nop
cli
adcb
ja
mov
and
test
mov
movsb
fsubrl
jnp
enter
adc
push
in
mov
push
sbb
pop
mov
loop
cltd
push
cmp
pop
insb
or
xchg
ss
aas
enter
lock
inc
gs
dec
or
pop
or
adc
outsb
mov
cltd
add
add
dec
daa
dec
das
outsb
imul
push
xchg
jecxz
mov
add
rorb
push
pusha
jmp
jp
xor
cmp
cmp
cmp
fwait
loop
and
stc
jge
push
std
xchg
push
jmp
or
cmp
xchg
sbb
es
repz
psraw
out
inc
mov
popa
mov
lods
push
daa
ret
das
inc
daa
iret
sub
test
or
push
add
jbe
and
lahf
stc
sbb
pusha
sub
movsl
jecxz
mov
pushf
jmp
jmp
mov
in
or
clc
ljmp
inc
scas
cwtl
cmpsl
repnz
notb
shlb
hlt
outsl
xlat
das
add
sbb
xchg
xchg
dec
stos
leave
pcmpeqw
int3
or
xlat
imulb
jecxz
mov
dec
inc
adc
adc
repnz
mov
push
ret
lret
out
dec
and
icebp
ljmp
ret
add
call
out
lahf
ret
or
sahf
mov
enter
add
dec
sub
fstl
push
imul
mov
stos
push
aam
lret
lcall
clc
mov
mov
jl
or
adc
cwtl
stos
and
sbb
loop
pop
sbb
call
rcrl
xlat
dec
repz
mov
enter
xchg
mov
mov
dec
jmp
inc
jnp
ds
mov
mov
clc
cmp
mov
scas
cmp
sbb
loop
loop
popf
jmp
rcll
xchg
lock
fadds
cmc
adc
mov
push
inc
cmp
negl
sbb
pusha
sti
mov
sub
push
xchg
lret
mov
jbe
mov
xchg
jb
scas
push
inc
jp
or
pusha
insl
imul
pop
jae
and
daa
push
popa
imul
lods
cmp
pusha
leave
push
sbb
lock
ja
mov
loop
orl
add
add
neg
outsl
push
xchg
or
add
add
add
cmpsl
les
add
fisttpl
lock
sbb
in
sub
pop
jmp
rorb
cmp
jnp
sti
imul
mov
add
sbb
arpl
pop
pop
mov
sub
adc
int3
lock
fimuls
pusha
test
subl
ret
pop
xchg
movsl
rcrl
xchg
movsl
in
aaa
testl
push
sti
lret
ficoms
gs
sub
push
movl
inc
lock
not
mov
movsl
popa
lea
cmp
push
cli
dec
dec
cmp
mov
stc
dec
jnp
push
jbe
shr
arpl
ret
fcoml
mov
pop
rcrb
lcall
stos
ja
adc
int3
lea
test
sbb
pusha
cmp
stos
sbb
xchg
adc
aas
cmc
dec
dec
sub
incb
cmp
add
xor
add
sbb
sub
dec
inc
fisubs
rcl
add
add
and
mov
imul
add
mov
loop
mov
test
cmc
lods
mov
mov
lahf
mov
dec
aam
fcompl
cld
pop
es
cmpsl
aad
pop
repz
out
or
dec
jmp
mov
xor
sub
jno
cmp
or
ret
cmp
xchg
mov
add
add
cli
stc
jbe
mov
stos
dec
push
out
enter
pop
movl
leave
add
addr16
dec
cmpl
fs
mov
call
icebp
lea
add
fnsave
out
fiaddl
mov
inc
mov
jnp
popf
in
mov
cwtl
rcll
push
stc
xor
mov
lods
test
insl
jb
adc
adc
mov
test
adc
lret
jne
aam
mov
scas
or
aaa
dec
push
push
les
fwait
pop
push
test
add
mov
pushf
adc
ds
jae
aam
sub
aad
add
mov
dec
sub
cli
or
gs
mov
pop
push
jns
sbbl
push
in
addr16
out
rcrl
popa
loope
imull
sub
lret
push
sti
repnz
or
or
divb
and
xchg
das
jmp
stos
xchg
imul
jge
mov
fs
addr16
pop
pop
push
mov
sub
cmp
mov
add
inc
xchg
outsb
and
data16
arpl
pop
scas
pushf
mov
fdivrl
adc
inc
push
mov
inc
adc
call
cltd
cmpsb
xchg
jmp
movsl
xor
sarl
loopne
sub
push
push
mov
lret
pushf
push
push
sbb
in
inc
test
inc
es
aas
sub
mov
aaa
xchg
addr16
cmpb
movsb
inc
push
das
vpsadbw
xor
jne
lds
add
xchg
and
idiv
lahf
insl
mov
movsl
xchg
lret
add
add
mov
push
daa
ret
xor
xlat
fmull
push
int
inc
ljmp
jns,pn
mov
sub
xchg
inc
jle
mov
inc
xchg
dec
xchg
fadds
jp
scas
sub
in
stc
jmp
pop
outsb
cmp
pop
inc
fldcw
leave
cmp
push
clc
ja
lcall
and
sbb
add
jne
inc
shrl
push
aad
pop
movsb
mov
lods
mov
xor
sub
jmp
add
mov
movsl
push
and
push
jge
pusha
ret
mov
inc
mov
mov
cwtl
dec
mov
mov
es
adc
cltd
jl
jge
mov
lahf
jno
cwtl
bound
xor
push
add
lret
cli
cmc
fucomi
inc
aaa
cwtl
jnp
dec
xchg
test
push
mov
insb
test
sbb
mov
loop
jne
xlat
pop
or
popf
out
xchg
repz
shrl
add
add
xchg
ja
push
jg
leave
or
xchg
dec
loope
add
add
lods
stos
lds
ret
insl
inc
pop
pop
xchg
popa
xchg
into
xlat
dec
mov
or
cmp
js,pn
mov
adc
loopne
es
inc
stos
jns
rcrl
adc
cmp
push
clc
std
fnstenv
mov
xor
mov
pop
add
push
mov
jne
fidivl
stos
mov
fisttps
xchg
add
push
pop
idivb
flds
data16
pop
cltd
bound
push
fs
cmp
mov
or
xor
outsl
js
jp
mov
js
mov
push
sub
jae
repz
sbb
je
scas
inc
imul
fistps
das
adc
pop
in
lahf
out
pop
cmp
mov
adc
push
pop
push
call
sbb
icebp
flds
adcl
cmp
scas
out
mov
add
imul
xchg
movsb
stos
push
test
out
add
add
xor
aad
fldcw
xlat
or
aad
in
mov
push
test
add
into
lock
or
mov
jge
push
xchg
jg
sub
leave
fisubl
mov
rorl
sub
ret
sbb
sahf
in
jbe
rcr
bound
loop
repnz
sub
xor
cmp
jno
scas
xchg
mov
push
stos
and
sub
jo
mov
mov
mov
ss
popf
in
js
or
inc
and
clc
or
scas
pop
divb
pusha
mov
popa
adc
push
pop
mov
add
lahf
adc
or
push
xor
insb
mov
inc
cs
sub
push
pop
push
jle
in
sub
test
lods
mov
jmp
pop
push
jecxz
aam
test
mov
lret
cmp
add
imul
out
fldcw
push
in
sub
dec
jmp
add
add
scas
inc
lods
xor
inc
push
push
clc
xchg
mov
push
push
es
aad
lds
cmp
mov
xor
jb
xlat
sahf
jl
fidivl
in
nop
jl
mov
int
in
std
add
inc
xchg
xchg
dec
pop
pop
add
sbb
nop
lods
stc
daa
iret
inc
adcb
inc
mov
test
repz
lea
jmp
dec
dec
insb
lahf
es
jbe
enter
fnstsw
sbb
push
mull
lea
pop
mov
push
mov
dec
add
cli
lds
xchg
sbb
and
pop
not
xorl
or
loop
rclb
inc
imul
subl
and
push
dec
adc
xchg
push
js
fcmove
add
dec
aaa
and
mov
fistpl
jno
jle
pop
dec
decb
adc
jo
arpl
cmp
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
pop
lock
add
dec
push
lods
and
mov
mov
adc
xor
stc
lret
cmp
loope
add
add
fsubrl
mov
ret
push
pop
inc
and
fmulp
jg,pn
adc
pop
adc
pop
and
xchg
adc
xor
lahf
es
setbe
xchg
sub
leave
adc
test
push
iret
ss
arpl
cmp
xor
insl
and
fbld
stos
mov
jmp
out
push
data16
or
out
push
adc
xchg
inc
xchg
or
imulb
fdiv
push
or
pop
inc
fldl2t
ficomps
jg
add
movsb
clc
imul
sub
cli
push
dec
jnp
add
cli
dec
repnz
icebp
cmp
rcr
mov
ja
mov
test
nop
fsubl
stos
jae
sahf
movsl
add
add
jle
jg
std
fstpt
or
add
add
mov
jns
arpl
mov
lret
and
jg
lahf
loope
je
push
dec
daa
sbb
loopne
add
adc
pushf
movsb
mov
lds
cmpsl
repz
xchg
inc
xor
mov
nop
lea
mov
dec
and
sarl
push
enter
loop
lret
aam
sub
adc
mov
or
mov
cmpsl
add
arpl
mov
lret
rcrl
jo
mov
dec
pop
test
push
leave
mov
jmp
fidivrl
shl
test
cmp
dec
jge
in
push
movsl
pop
shll
orl
stos
scas
or
stc
inc
push
scas
xor
xor
pop
mov
cmpsb
scas
add
push
andl
sarl
sub
and
cmp
cmpsb
xchg
mov
or
push
jbe
mov
aam
loop
xchg
jg
xor
add
add
mov
sti
idiv
lods
pop
sbb
xchg
or
add
in
cmp
or
dec
cmp
jae
clc
cmp
cmc
pop
adc
xchg
int3
sbb
mov
mov
popa
push
add
shrl
add
popf
int
imul
or
imul
mov
mov
insb
mov
imul
cli
test
sbb
add
or
or
pop
xchg
je
push
hlt
push
push
xchg
lods
and
cld
cwtl
jge
xchg
add
outsl
sub
ja
bound
outsb
cli
fbstp
fcmove
in
ss
jmp
mulb
mov
fdivs
dec
pop
ret
fstps
iret
aas
adc
fmull
aad
push
lahf
jg
xchg
pusha
cmp
js
mov
cmp
mov
adc
fnsave
cmpsb
stos
es
jae
les
rcl
lret
mov
push
cld
xchg
or
add
add
sbb
jmp
scas
inc
call
fldl
add
lods
lcall
ljmp
lods
or
push
push
add
rcpps
cltd
pop
xchg
dec
xchg
lock
ret
int3
into
dec
enter
insb
jns
shlb
pop
push
jns
cmp
add
es
push
xchg
cld
jo
in
and
into
popa
orb
mov
xor
insl
sbb
inc
adcl
add
cmp
shl
inc
sub
mov
dec
dec
jb
and
adc
aad
jl
adc
xorb
idivb
stos
nop
in
test
das
dec
dec
xlat
pop
xchg
jo
dec
sbb
stos
push
outsb
jp
sbb
mov
and
lcall
leave
cmpsb
daa
or
jno
cli
jb
or
cmp
or
loopne
dec
or
leave
pop
imul
sbb
jnp
and
sti
push
mov
pop
add
add
push
out
faddl
je
add
add
add
add
std
fwait
es
arpl
lock
jecxz
insl
insb
inc
addr16
ret
sarb
das
sub
adc
xlat
xor
fcomi
jp
clc
mov
xchg
leave
adc
nop
cmp
jge
dec
fucom
pushf
pop
aas
and
test
sbb
cmp
in
cmpb
push
gs
mov
ror
scas
xchg
outsb
cmp
add
sti
pushl
rorb
lock
lods
inc
cmpsb
test
hlt
scas
pop
inc
lods
stos
cs
aaa
xchg
lea
hlt
scas
btc
loope
jo
repz
ret
mov
gs
scas
ja
pop
adc
xor
push
sbb
out
test
mov
cmp
cmp
mov
mov
lret
js
sbb
das
test
into
mov
scas
push
lods
mov
jns
xchg
sub
fpatan
jb
jp
jg
fdivrl
add
leave
or
leave
daa
push
pop
jb
mov
inc
fstpt
xchg
add
add
mov
lcall
fisttps
or
or
add
add
xor
arpl
cltd
sub
and
push
mov
or
adc
jo
sub
cmp
cmpsl
out
xor
add
aam
add
les
lret
addr16
test
in
aaa
loopne
xor
push
nop
jg
les
jb
and
movsl
xchg
nop
cmpsb
les
or
jmp
divb
push
jae
push
jecxz
movsl
loop
fs
pop
fnstsw
rcrb
adc
adc
inc
mov
aad
roll
ret
int
add
push
mov
lea
lcall
icebp
or
inc
iret
push
mov
test
mov
pop
popa
mov
inc
jnp
scas
dec
pop
scas
in
addr16
push
dec
inc
and
andl
and
int3
mov
scas
cmp
xchg
jecxz
xchg
testb
mov
mov
inc
dec
loope
adc
mov
mov
cmp
clc
xor
add
sbb
jns
xchg
xchg
mov
insl
xor
loope
add
ljmp
push
sti
and
jge
aam
popf
adc
mov
mov
mov
add
mov
nop
sbb
or
cmp
aaa
xchg
mov
mov
gs
jmp
lret
xchg
leave
push
in
add
cli
jle
shlb
shlb
inc
ficoml
inc
jecxz
daa
cli
lods
adc
shl
dec
das
xor
xor
in
or
sub
cmp
out
popf
int
insb
xchg
shr
or
int3
popf
mov
mov
fwait
sbb
inc
fdivr
in
pop
ja
shrb
mov
in
pusha
in
sub
lock
stos
gs
nop
jb
jecxz
push
dec
mov
xchg
jge
lret
and
pop
call
sbbl
shll
ret
test
cmpsl
insl
in
inc
add
mov
fisubl
addl
add
jae
fadd
fsubp
jnp
or
cld
les
dec
inc
arpl
loop
add
xchg
jae
inc
bound
sbb
adc
mov
mov
dec
decb
sbb
pop
lcall
adc
xchg
push
mov
andnps
jno
outsl
arpl
outsb
inc
and
mov
jle
cmc
cmc
pushf
mov
mov
pop
fcmovnbe
and
push
mov
test
fwait
movsl
in
add
in
inc
xor
nop
xchg
jge
mov
enter
pop
pop
cmovp
pop
cmp
sti
mov
call
lea
inc
adc
cmp
push
pushf
lods
lahf
push
jno
sar
jmp
xchg
push
sub
dec
lahf
out
xlat
imul
cli
lcall
test
ljmp
dec
mov
mov
insl
pushf
pop
xor
adc
sbb
stos
fldl
jp
add
lret
jg
and
add
movsb
cmp
fucomp
aad
mov
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
mov
add
add
aas
ds
test
mov
lods
adc
mov
out
cmpsb
dec
or
push
out
xor
mov
jae
sub
or
imul
fwait
cmp
or
andl
mov
xor
sub
icebp
xchg
dec
cmp
rolb
cwtl
insl
mov
sub
jl
dec
xor
pop
xchg
push
shrb
pop
out
test
push
and
aad
out
mov
fimull
popa
stos
mov
rcrl
xchg
pop
rcrl
mov
in
xchg
xor
popa
and
mov
out
push
insb
nop
fimull
inc
jo
inc
ret
leave
aam
sahf
or
push
push
cmpsb
scas
or
adc
jae
add
daa
jecxz
inc
jge
or
jg
shlb
lret
cmpsb
xchg
les
loope
add
test
inc
lahf
jnp
sti
mov
mov
lret
out
mov
add
lea
pop
jbe
ja
sti
aaa
out
ja
subl
in
add
pop
inc
ret
dec
xor
loope
or
mov
add
dec
and
sub
scas
sahf
lcall
push
fldt
pop
outsb
and
stc
mov
inc
shll
adc
and
ret
rcrb
mov
and
in
in
das
lret
add
push
xor
andb
leave
cmp
pop
jae
and
pusha
int3
push
into
mov
dec
cmpps
mov
add
cmc
int3
repnz
adc
popf
adc
cwtl
mov
ffreep
pop
sub
sub
cmp
ljmp
or
lea
cld
nop
clc
push
loope
gs
jae
jmp
mov
xchg
xchg
jns
pop
loope
inc
cmc
and
xor
loope
inc
movl
pusha
test
lcall
push
xchg
mov
pop
adc
mov
add
ror
cltd
outsl
mov
aaa
pushf
stos
out
mov
add
adc
aas
inc
lock
movl
cmp
stos
and
mov
int
scas
iret
cltd
sarb
ficompl
mov
fwait
mov
cmp
inc
cmpsl
sub
sub
insl
mov
int3
pop
xlat
mov
and
insb
mov
add
inc
fstl
rorb
fnsave
insl
and
jns
cmc
pop
jnp
mov
aam
enter
jl
int3
in
adc
add
cli
add
fcmove
daa
repnz
push
xchg
out
in
roll
out
pop
fdivr
clc
repz
push
sub
mov
out
hlt
lea
cmc
xor
and
sbb
je
iret
inc
test
push
xorb
mov
sti
mov
push
sbb
loopne
int
cld
std
repz
cmp
push
add
add
ja
lcall
mov
cmp
out
add
lock
xchg
push
popf
pop
imul
pusha
jp
fimuls
les
pusha
mov
cmc
popf
ljmp
fdivrs
mov
mov
add
pop
call
repnz
outsb
mov
and
push
sbb
sbb
dec
fldl
cmp
imul
test
out
sub
and
dec
sub
add
ds
adc
fsubrs
xlat
mov
mov
and
sbb
out
aas
sbb
scas
add
xor
cmp
mov
mov
mov
mov
xchg
out
call
rclb
ss
xchg
jns
jmp
and
lcall
and
ja
xchg
adc
call
push
adc
out
lret
xchg
pushf
and
test
aaa
imul
loopne
and
loopne
test
shrl
and
pop
add
add
add
lock
jg
in
and
sub
sub
add
add
sahf
int
pop
mov
ss
aas
call
push
sbb
xchg
pop
fnstcw
hlt
xchg
and
cmp
xor
dec
lret
in
test
pop
xchg
ja
hlt
popa
inc
push
lcall
mov
mov
ljmp
repnz
gs
xor
fiadds
dec
add
scas
std
and
insb
roll
jno
aaa
mov
rcr
fdivrl
sub
dec
sbb
xor
test
add
or
lcall
sahf
lea
enter
int
out
gs
xor
sti
add
jae
mov
xchg
cld
cltd
rorl
shlb
push
adc
out
add
clc
xchg
sbb
pop
mov
fidivrs
popf
push
xchg
subl
push
push
notl
push
ljmp
jbe
or
mov
lcall
mov
sbb
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
xor
push
xor
add
add
fs
pop
jbe
jecxz
sub
stos
xor
sbbb
mov
pop
js
add
out
outsb
std
cwtl
stos
pop
xor
push
adc
mov
inc
lock
cmpsb
push
mov
mov
mov
cltd
inc
imul
or
pushf
test
xlat
movsb
mov
call
leave
pop
pop
cmp
dec
lret
xor
int3
inc
jno
or
add
mulb
adc
sbb
xor
dec
lods
scas
add
xchg
jg
mov
jne
xchg
sub
test
lea
nop
and
cmp
pop
dec
jnp
mov
mov
push
mov
xchg
test
adc
out
adc
fwait
in
aad
iret
pushl
push
fwait
dec
pop
ja
and
sbb
inc
mov
test
pop
js
push
xor
pushf
mov
testb
add
mov
dec
js
stc
mov
dec
int
repz
movsb
ss
add
push
lret
mov
inc
and
push
adc
rcl
jp
rcll
mov
push
cmpsl
pop
jle
sub
pusha
and
cmp
and
test
fcompl
mov
dec
arpl
cmpsb
adc
fdivs
sub
cmp
jae
in
nop
and
aam
cmc
push
les
repz
data16
out
inc
mov
push
dec
pop
mov
pop
inc
fistl
ljmp
into
jns
outsb
mov
nop
mov
xchg
sarb
jle
loopne
cmp
pop
std
cmp
dec
sti
test
or
js
mov
pop
cmp
cmpsb
les
push
iret
pop
es
insb
pushf
pusha
aad
scas
clc
call
sub
ds
mov
adc
or
rclb
xor
mov
and
jle
jb
inc
fldt
fistps
fdiv
add
sub
lods
ss
aaa
nop
rol
jp
repnz
mov
add
mov
pop
insb
fildll
fwait
jns
jns
mov
cmp
add
add
pop
stos
addb
call
pop
pop
push
mov
stos
mov
loope
cld
xchg
xchg
mov
out
hlt
cmp
pushf
push
rcl
inc
and
rcr
pop
sti
in
movsl
add
cmp
cmp
inc
stos
pop
stos
xchg
xor
pop
fistpll
cwtl
lret
add
sbb
mov
lods
push
loop
xchg
cmp
int3
int3
mov
scas
std
fsubrs
scas
int
lahf
xchg
xchg
jmp
fidivrs
pop
mov
into
in
adc
adc
or
aad
outsl
sbb
push
and
push
and
mov
dec
inc
mov
push
cltd
and
fstpl
xchg
outsb
cmc
sbb
lret
jb
es
and
shlb
test
fdecstp
xor
mov
aad
mov
push
or
pop
out
and
clc
adc
rorb
pxor
jmp
add
add
cmp
jnp
adc
jne
sbb
testb
add
xchg
out
lock
dec
aad
fcmovnb
add
xchg
enter
enter
xor
test
stc
ss
or
lods
aaa
push
mov
adc
or
lret
inc
fcompl
mov
dec
jg
cltd
push
mov
loope
cmp
inc
rcrl
xor
push
int3
push
das
add
mov
orl
dec
pop
out
inc
mov
lret
fmul
mov
insl
and
add
lds
jnp
movl
insl
dec
dec
pop
sub
aad
vpmulhuw
mov
jne
int
fisubrl
sbb
and
adc
lret
pop
gs
push
subb
bound
inc
pop
sbb
loop
add
adc
aam
inc
daa
decb
mov
in
push
mov
xor
xchg
pop
ret
cwtl
loopne
pop
and
leave
dec
popl
cmp
adc
sbb
sub
add
out
lods
xor
aas
xlat
fistl
das
inc
lret
dec
filds
add
add
adc
add
test
movsb
jecxz
mov
stos
cmp
and
aam
mov
je
out
mov
pushw
fidivs
dec
rcrb
out
lods
mov
jne
dec
pop
outsl
pop
ja
jno
xchg
cld
inc
push
ret
mov
and
aaa
fnstsw
mov
xlat
pop
mov
cwtl
pop
jle
roll
icebp
aad
popl
cld
pop
push
jl
push
je
inc
sbb
adc
xchg
or
cmp
mov
push
sarl
icebp
out
fdivl
imul
mov
push
icebp
lahf
sbb
adc
sub
cmpl
popf
pushf
xchg
out
in
cmp
mov
xchg
pop
mov
mov
addb
sub
inc
dec
je
push
gs
loop
mov
push
xor
or
push
in
mov
lods
notb
cld
out
add
add
jb
scas
decb
fisttps
fadds
add
popa
outsl
mov
inc
in
adc
mov
push
movsl
repnz
repz
shll
jns
cs
outsl
xchg
push
pop
rcll
pop
subb
out
and
push
arpl
push
add
adc
loopne
ljmp
pop
xor
pusha
call
and
adc
push
hlt
popf
out
sbb
inc
xor
scas
imul
jecxz,pn
mov
pop
xchg
mov
pop
ret
xor
push
sahf
mov
fisubrs
test
mov
or
add
cwtl
sub
lds
in
iret
adc
mov
fsubs
sbb
inc
jg
xchg
mov
fmuls
fcomps
cltd
enter
repz
pop
jg
add
xchg
into
pop
mov
mov
ja
mov
lods
sbb
nop
mov
out
imul
popa
mov
adc
les
add
xlat
mov
xchg
xchg
sub
add
or
pop
xchg
arpl
push
sub
leave
nop
aas
clc
shlb
lock
andb
dec
les
inc
into
mov
aad
data16
jmp
in
xchg
js
adc
or
jmp
pmaxub
pop
push
mov
sub
scas
lea
push
fsts
and
push
pop
in
mov
test
cmp
inc
clc
and
out
cmpsb
and
mov
test
jnp
fwait
ss
and
add
xor
xor
push
push
cmpsb
jne
mov
icebp
xchg
cmp
cmp
cmp
lahf
sbb
into
in
sbb
mov
rcrl
test
loop
adc
mov
rorl
push
aad
in
lea
adc
sbb
and
dec
jle
add
add
add
mov
aas
mov
add
push
out
add
add
xchg
das
jg
test
adc
addr16
pop
sub
inc
in
mov
sub
roll
jle
frstor
and
roll
jmp
mov
ljmp
mov
mov
cmp
sub
imul
jl
push
sbb
and
push
sub
bound
xchg
pop
dec
cltd
into
push
mov
test
inc
lret
inc
in
xchg
sbb
insb
repnz
or
and
or
scas
pop
cwtl
cli
and
sub
rolb
lret
cmp
mov
inc
pop
dec
imul
xchg
ja,pt
aad
negb
mov
adc
dec
imul
cmp
icebp
js
roll
or
shl
cmp
xchg
xchg
and
pop
pusha
pop
dec
adc
xchg
cmc
loop
adc
adc
push
dec
mov
dec
scas
cltd
test
jg
testl
loop
fadd
sti
mov
stos
enter
lock
add
test
shlb
mov
rorb
jo
es
jge
and
mov
cmp
xchg
std
jmp
mov
push
adcb
push
mov
mov
ljmp
cmp
jne
jb
mov
sbb
sahf
mov
push
lret
sub
xchg
add
mov
jge
insb
pop
push
test
xchg
inc
adc
adc
lods
loop
stos
and
xor
cmp
aaa
mov
loopne
sti
pop
mov
jge
rorb
popf
add
adc
sub
xor
enter
mov
mov
xchg
iret
icebp
movsb
jns
sbb
movsl
and
mov
mov
movsl
adc
movsb
int3
dec
arpl
sahf
sbb
out
pop
push
in
fwait
cltd
sarb
outsl
cmp
adc
inc
pop
add
out
xchg
jnp
pop
insb
pop
add
add
into
adc
neg
jge
xchg
jns
xchg
rclb
add
rorb
cld
xor
mov
es
int3
mov
ds
xlat
lea
mull
sbb
std
cmpsb
and
adc
movsl
arpl
repz
mov
cltd
lods
mov
sar
adc
mov
mov
cmp
sbb
les
sub
inc
jg
add
jbe
xor
movsb
lahf
jae
mov
pop
andl
cli
push
and
add
jo
clc
imul
test
repz
sahf
nop
or
popa
lea
jns
or
fisubrs
je
inc
mov
push
in
pop
or
mov
mov
push
jp
jle
fldcw
mov
inc
push
push
test
jns
mov
and
xor
cwtl
or
add
inc
cmpsl
dec
pop
aam
mov
add
mov
inc
arpl
xchg
fsubs
or
loop
mov
add
dec
sub
sub
fimull
stos
sub
add
dec
mov
mov
xor
int3
dec
mov
leave
cmp
xchg
jge
adc
or
icebp
repz
int
fs
xor
jb
mov
js
icebp
loope
fiadds
push
pop
in
fcmove
pusha
add
popf
in
enter
push
shl
inc
pop
jno
icebp
ret
insl
sbb
sub
sub
adc
cmpsb
test
orb
pop
lret
pushf
mov
movups
mov
scas
pusha
add
lods
loopne
cmp
loopne
pushf
jl
orb
shll
into
sub
frstor
jg
movsb
push
jle
push
fcoms
pop
mov
out
inc
sub
sbb
andb
test
mov
push
xchg
aas
mov
scas
or
or
jecxz
push
in
imul
cltd
pop
dec
push
ss
xchg
cmp
fwait
xchg
jge
lret
cmp
cmpsl
sbbb
in
add
add
ja
and
aaa
divl
inc
int3
ljmp
add
or
jge
fildl
push
call
rorl
adc
mov
add
int3
and
hlt
push
fcoms
in
pop
std
sbb
mov
test
imull
stos
xchg
adc
out
lods
adc
cmp
and
cmpsb
mov
movsb
popl
in
or
xchg
sbb
in
mov
mov
movsl
and
cwtl
pop
jae
bound
adc
call
and
sbb
insl
stos
andb
pop
lock
push
jae
test
lds
pop
mov
sahf
out
idivl
pop
rclb
mov
lods
mov
fdivrl
cmp
out
cmp
movsl
xchg
inc
mov
adc
ss
dec
cwtl
xchg
movsl
inc
fs
andl
push
jno
jecxz
cmp
in
mov
sbb
and
pop
jmp
sbbb
hlt
das
fsubr
mov
add
decb
jecxz
imul
push
cltd
push
mov
add
add
mov
cmc
mov
mov
mov
insl
hlt
add
add
shr
add
jo
enter
je
gs
mov
into
sbb
push
mov
into
jge
std
mov
movsl
mov
popf
and
es
in
cmpsb
mov
jmp
outsb
sub
push
cmc
dec
mov
repz
mov
std
rcll
out
pop
push
test
out
or
sub
adcl
pop
fmul
pushf
nop
jnp
adcl
pusha
xchg
testb
mov
aaa
push
adc
pushf
lea
repnz
cmp
sbb
adc
add
push
xlat
ja
xor
in
das
cmp
ljmp
jo
add
ljmp
adc
xor
fnstsw
xor
and
cmpsl
sbb
testb
mov
add
pop
clc
push
sub
adc
cmp
rorl
cs
rcrb
scas
cmp
es
pushf
add
add
jne
pusha
popf
pop
adc
cmc
add
add
data16
daa
xor
mov
jecxz
hlt
dec
fisubrl
mov
add
psubw
push
pop
adc
fstps
or
cmp
mov
push
lret
rclb
xor
adc
fidivrs
lret
sub
mov
hlt
ret
aas
push
shlb
je
stc
shrb
xor
jp
dec
cmp
sbb
fldcw
jb
pop
mov
testl
sub
push
arpl
or
adc
inc
mov
xchg
clc
mov
push
dec
je
in
push
jne
lcall
ljmp
orl
or
aaa
dec
inc
jbe
cld
lcall
or
nop
mov
mov
std
fnstenv
out
cmp
rcrl
mov
xchg
stos
sbb
pop
inc
ret
ss
scas
push
mov
add
imulb
mul
xor
dec
ja
add
add
mov
lret
mov
loope
jmp
pushf
sub
or
adc
dec
jne
jg
sub
jae
cmp
dec
xchg
insb
sub
pop
cmp
es
stos
add
dec
or
and
add
push
into
sub
cmp
fcomp
mov
in
hlt
das
outsb
cmp
or
call
int
mov
aam
lcall
je
inc
js
aad
xor
dec
movsb
lock
mov
stc
out
xor
scas
mov
push
or
dec
sahf
lret
dec
sub
imul
in
xchg
test
sbb
xchg
adc
cli
xor
mov
insb
xor
roll
mov
call
pop
mov
lods
mov
dec
sbb
jbe
shlb
push
hlt
xchg
outsl
cmc
jbe
cld
mov
cs
call
add
xchg
lock
add
add
add
xor
jb
jae
dec
cltd
fs
testl
add
cli
xchg
mov
push
cmp
outsl
and
mov
jle
dec
xchg
call
ds
pop
cmp
lock
lds
dec
jg
ret
pusha
jle
imul
cmp
aaa
mov
dec
ja
mov
add
inc
or
idivl
adc
cli
pop
mov
or
mov
mov
jbe
inc
stos
lahf
sbb
paddb
xchg
ret
xlat
fildl
popa
shrl
ss
ds
sahf
push
in
aam
sub
pop
jb
stos
add
in
js
sub
notb
cmp
and
dec
mov
sti
dec
xchg
out
scas
push
lahf
loope
inc
xchg
leave
frstor
pop
clc
repz
pop
cli
lret
idivl
in
fnstcw
or
jo
jb,pn
arpl
jns
mov
dec
lods
pop
and
das
pop
int3
insb
dec
sti
or
adc
int
in
idivl
js
mov
adc
add
jge
mov
scas
sub
xcrypt-cfb
cmpsl
movsl
and
jp
push
or
addr16
inc
and
xchg
imul
jno
subl
dec
inc
lds
mov
mov
ficoml
pop
xchg
xor
mov
pop
sbb
sbb
sub
and
popa
ss
gs
mov
fcom
xor
dec
shll
pusha
movsl
repz
lret
divl
mov
in
outsb
leave
adc
cs
rcll
cld
imul
idiv
fistl
adc
nop
je
inc
dec
inc
pop
jne
jp
mov
mov
test
pop
iret
fwait
iret
push
roll
adc
lods
or
and
lcall
xor
cmp
cli
sti
push
push
lods
movb
ss
jb
add
lea
clc
add
add
jecxz
inc
cli
aas
into
lret
aam
cli
dec
xchg
add
add
pop
jns
xor
jl
mov
shll
adc
cmc
add
call
sbb
inc
repz
xchg
mov
int3
cmp
pop
inc
adc
in
dec
enter
mov
and
imul
cmp
loopne
outsl
aam
clc
scas
test
adc
cmp
pop
pushf
mov
pop
inc
fmull
xor
pusha
lods
push
cli
test
pop
cmp
iret
ljmp
test
sbb
popf
jge
int
xor
push
dec
push
sub
fwait
dec
xchg
push
inc
dec
aas
sub
stc
xor
push
jmp
ret
jb
add
adc
in
cmp
push
imul
and
mov
gs
add
sbb
cmc
or
shr
mov
out
out
jp
cmp
mov
or
cmpsl
cmp
push
loope
test
pop
inc
hlt
mov
ljmp
fnstsw
lods
mov
adc
mov
push
mov
add
add
lcall
fidivrl
add
add
arpl
xor
fists
mov
mov
in
jb
pop
mov
insb
rol
lret
std
mov
mov
push
jle
lock
loopne
sahf
addl
adc
push
fidivrl
les
test
sub
cmpsb
leave
clc
fldcw
mov
or
scas
mov
inc
jbe
xchg
out
mov
clc
inc
loopne
lcall
xchg
mov
pop
or
std
cmp
lahf
push
clc
rcrb
or
xchg
icebp
push
cs
add
or
mov
daa
cmp
test
add
fimuls
dec
add
xchg
je
idiv
mov
sub
out
jnp
icebp
pop
sbb
ljmp
cwtl
jecxz
nop
cltd
mov
out
addr16
xchg
loopne
dec
dec
aaa
testb
jecxz
mov
add
add
jae
cltd
dec
mov
jno
repz
cmp
sti
add
add
mov
cwtl
movsl
add
mov
cld
pop
out
ss
dec
imul
inc
mov
push
cmovno
dec
pop
and
daa
cmp
jmp
push
loopne
xchg
addb
inc
or
jbe
sub
adc
aaa
sbbl
pop
or
fisubl
ret
dec
bound
mov
add
dec
sbb
sbb
lock
dec
scas
idivl
test
sbb
lahf
clc
sti
jg
inc
sub
dec
in
mov
sub
cmp
pop
jecxz
jbe
adc
mov
inc
push
imul
ret
or
mov
fwait
mov
fstps
js
leave
test
xchg
push
lea
cli
mov
xorb
lahf
jne
loope
test
pop
jg
notb
or
je
push
xor
dec
xchg
out
pushf
lods
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
sub
cld
add
add
xor
cmp
scas
loop
adc
mov
mov
jl
repnz
cmp
sbb
sub
rcll
jo,pn
repnz
out
lds
out
or
pop
xchg
std
mov
repnz
dec
lods
adc
and
inc
and
pop
insb
mov
fdivs
pop
inc
test
xchg
test
push
shl
push
inc
push
mov
inc
loopne
add
lea
mov
push
xor
mov
push
jg
and
add
sub
xchg
nop
and
and
xchg
push
mov
int
xor
and
sbb
subb
test
inc
jnp
sbb
aad
divl
xchg
hlt
push
iret
ffree
pop
add
lock
and
fnstcw
cmp
in
mov
js
lahf
mov
xchg
push
in
dec
cmpsl
sub
add
add
test
jg
push
pop
push
mov
lcall
add
cmpsl
fsub
pop
mov
addl
dec
ficomps
mov
rorb
fmuls
ds
sbb
repnz
mov
mov
pop
ret
mov
dec
pmaxsw
pushf
lds
push
push
jl
scas
ljmp
xchg
loope
lcall
sub
cmpsb
xchg
xor
add
xchg
clc
lea
mov
xor
xchg
adc
inc
or
popf
jnp
aas
cli
dec
or
mov
fbld
push
push
jge
mov
dec
xchg
push
fcomp
fwait
stos
inc
cmp
jmp
sub
pop
popa
repz
fwait
in
jns
out
mov
movsl
push
xchg
cmp
jne
mov
jne
jg
arpl
ljmp
and
lock
loope
bound
or
pop
imul
mov
adc
mov
adc
add
add
movsb
push
in
cmc
jne
sbb
js
adc
add
add
jno
jns
lods
jnp
subl
cltd
dec
test
jae
test
adc
dec
loop
mov
push
push
int3
ret
xor
xchg
add
xchg
bnd
divl
sbb
and
adc
push
push
aas
sbb
and
fs
cmp
test
std
shrb
pop
imul
xchg
mov
neg
lea
daa
cmp
inc
pop
mov
mov
bound
or
mov
movb
and
test
mov
add
dec
sub
xchg
and
mov
inc
fadd
imul
or
dec
lock
and
jmp
add
cld
enter
inc
data16
cmp
cmpb
mov
dec
xchg
nop
in
je
adc
push
enter
push
and
outsb
push
jno
mov
mov
loope
add
nop
notl
fadds
add
sbb
shlb
aas
out
int3
mov
mov
incl
add
mov
test
stos
push
les
pop
cltd
out
xchg
call
pop
rclb
aas
les
push
mov
or
lret
adc
jb
pop
mov
in
loop
xchg
and
mov
shrb
mov
jmp
sub
xor
mov
leave
sbb
idivb
xor
xchg
les
sahf
and
xchg
dec
and
xlat
add
stos
dec
movsb
sub
sub
xchg
adc
mov
mov
push
dec
push
adc
hlt
pshufw
fstpt
cmp
mov
push
rcrb
xchg
dec
sub
lods
pop
inc
mov
outsl
sti
dec
inc
lret
cmpsb
and
pop
fcmovu
mov
add
xor
shll
mov
mov
xchg
popf
push
in
jle
mov
jg
add
outsl
mov
cmp
cmp
cmp
mov
dec
add
add
mov
lcall
sub
add
aad
xchg
mov
daa
test
mov
xchg
nop
inc
sub
xorl
xor
lret
adc
shlb
hlt
adc
leave
pop
cmp
neg
pusha
jae
xchg
arpl
enter
pop
and
sahf
and
jp
sbb
push
insb
out
inc
cmp
xchg
pop
mov
outsl
stos
scas
push
movsb
ss
xchg
inc
xchg
lds
adc
cmp
mov
dec
testl
enter
cmp
mov
add
adc
or
or
xor
lock
test
test
xchg
xchg
and
sub
and
add
xor
outsb
adc
and
jns
adc
push
fisttps
es
icebp
and
insb
inc
jae
jg
mov
xchg
mov
imul
sub
or
sbb
mov
push
and
xchg
mov
subl
add
add
ret
bnd
cmc
inc
stos
repz
mov
scas
add
add
ds
je
cltd
and
push
xor
lods
fisttpl
mov
fstps
sub
cmpsb
testb
sbb
adc
jo
mov
lahf
cmp
in
jmp
lret
sbbb
testl
icebp
int3
rcll
daa
add
inc
push
out
test
es
fsubrs
out
cmp
and
lea
cmp
fdivrs
jnp
pushf
or
dec
rclb
inc
aad
sets
test
pop
cli
jg
mov
pop
fmuls
and
add
stc
push
jnp
movsb
add
aas
push
xchg
xor
in
dec
call
lods
inc
jg
cltd
aaa
mov
lret
lahf
lret
pop
sub
adc
decb
iret
cld
add
mov
push
das
cmp
jge
jmp
jbe
dec
mov
add
std
aaa
mov
shll
imul
add
sbb
mov
and
mov
icebp
ljmp
ret
jmp
mov
mov
jo
fwait
jne
lret
imulb
xchg
or
stos
ljmp
jmp
pusha
into
or
jns
int
lret
iret
xor
pop
movsl
mov
loopne
shlb
xor
stos
sub
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
sbb
popa
dec
xchg
outsl
adc
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
