push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
test
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
cmc
fcom
cld
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
rcr
fmulp
rcr
ljmp
repz
call
out
shl
out
out
out
cmp
add
int3
shl
shl
loope
cld
enter
xchg
mov
shl
xor
xlat
cmp
sbb
ret
ds
loope
loope
mov
hlt
out
icebp
das
xor
mul
in
aam
faddl
cld
xchg
xor
out
test
lret
fyl2x
fdivrs
div
cmp
cld
icebp
out
test
sti
leave
repz
loop
loop
aad
sti
rol
lock
std
int3
test
neg
enter
test
std
mov
xor
xor
xor
aad
jmp
sti
sar
cmp
rolb
std
nop
lret
loop
rcl
rcr
jmp
fdiv
jmp
loopne
out
hlt
cli
repnz
lret
mov
lea
cmp
aad
hlt
das
int
lret
in
shl
ds
xlat
jecxz
sti
decl
in
sub
idiv
enter
cmp
aad
repz
push
xor
jmp
rol
ror
rcr
fcmovnu
mov
mov
jle
or
jle
aad
loopne
jmp
cmc
out
in
mov
mov
testb
xor
cmc
fucomip
fiadds
call
out
in
incl
loope
int
xlat
xlat
fdivr
xor
fld
cli
jmp
rol
xlat
int
lret
out
ret
iret
lret
into
xor
enter
ss
fmul
cmp
fucomip
ds
cli
idiv
test
out
mov
in
cmp
aaa
cmp
shlb
clc
cmp
xchg
xchg
and
rcr
rcll
out
cmc
repz
out
lret
int3
clc
in
orl
hlt
xor
call
fistpll
loopne
ret
fimuls
cld
call
orl
xlat
fdiv
dec
xlat
hlt
xchg
stc
stc
mov
jmp
jmp
mov
call
sub
stc
fistpll
cmp
test
rcl
loope
faddl
mov
ror
testb
cmp
rcl
int3
rcr
addl
call
int
div
cmp
icebp
leave
xor
clc
out
in
jecxz
ret
faddl
nop
out
loop
xchg
shlb
in
lret
sarl
cld
cmp
std
xlat
loop
test
ljmp
loope
xchg
rcll
fxam
aam
fcmovu
ret
sarl
hlt
in
test
int
std
into
iret
xchg
repnz
xor
shlb
enter
ret
loope
xchg
fpatan
cld
loope
les
leave
xchg
out
loop
test
ror
cli
stc
enter
sbb
cmp
fcmovnb
hlt
loopne
mov
in
shr
cs
in
xor
lock
cmp
rcl
sar
std
cld
ret
mov
in
testl
out
cli
aad
shl
testl
int3
test
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
cmp
push
add
or
jle
repz
xchg
leave
repnz
in
call
roll
cmp
dec
out
lret
leave
cli
xchg
mov
cmc
mov
sub
xor
hlt
out
neg
clc
cld
fidivrl
fcmovne
std
loope
les
mov
loop
loop
repnz
shr
iret
lock
fcom
hlt
test
fisttpll
cli
out
rcll
out
in
lret
cmc
leave
push
cmpl
xchg
aam
neg
loope
test
icebp
std
ljmp
hlt
clc
ljmp
cli
fninit
cmp
lret
in
mov
mov
xchg
not
in
xor
fld
sti
sar
icebp
sar
loopne
add
mov
loop
adc
ljmp
shl
in
jecxz
iret
icebp
cmp
xchg
out
mov
iret
iret
sti
icebp
out
cmp
std
cmp
in
ffree
movb
lret
out
xchg
shl
sub
aam
out
int3
out
fdiv
test
or
lret
cld
jmp
jecxz
cmp
cld
leave
cld
ljmp
lock
addl
out
test
cmp
xor
aam
int3
jmp
in
sar
xchg
std
cld
xchg
test
lds
cld
in
xlat
clc
out
cmp
aaa
clc
cmc
fsubr
lock
shl
out
fisttpl
or
lock
shr
cmp
clc
clc
cmp
fcomip
and
ljmp
int
xchg
icebp
xchg
mov
ret
loope
call
cmpb
test
cmp
mov
mov
test
xchg
orl
cmc
std
sbb
rcl
loope
xlat
jmp
fsubr
test
nop
adcb
int3
jmp
xor
fmulp
fcmovnb
std
in
loope
mov
lret
lock
in
out
rorb
repz
int
push
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
add
jle
add
ljmp
ror
add
aas
in
stc
icebp
fildl
call
repnz
fucomip
std
out
rorl
in
jmp
test
lock
fsubr
jmp
fsub
out
sar
fsub
ror
xchg
loopne
xchg
repz
std
divl
xor
repnz
cmc
shl
enter
ror
xchg
hlt
test
lock
int3
shlb
repnz
cmp
test
jecxz
iret
leave
into
rolb
xor
call
cmp
aad
mov
loop
int
test
mov
jmp
int3
sti
xor
repz
not
cld
jecxz
xchg
icebp
int
lret
div
fsub
aaa
out
lock
imul
xchg
fadds
loop
xchg
xor
ror
out
fucomp
not
idivb
neg
rcr
aad
addl
call
cmp
aad
out
shr
test
out
cld
ljmp
repnz
int
cmp
rcr
sti
loopne
aam
out
adc
xchg
cld
fcmovnu
lea
iret
ljmp
cmp
aad
rol
fiaddl
ffreep
std
fyl2xp1
loopne
int3
loopne
ljmp
ljmp
out
loop
fcomip
aam
stc
decl
mov
out
int3
imul
in
cli
xor
fcomp
aad
fbstp
cmc
ds
mov
fiaddl
leave
mov
xchg
jmp
xor
in
repnz
stc
int3
xor
iret
cli
xchg
aas
out
cld
jmp
lock
test
into
cld
fcmove
out
idivb
sti
iret
ret
mov
mov
aad
xor
ret
hlt
xor
cmp
ss
shl
lock
cmp
leave
xchg
cmp
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
sub
ss
jle
or
jle
mov
lret
into
xchg
mov
xor
out
lret
lock
jmp
not
in
ljmp
dec
iret
rorl
xor
xlat
hlt
ds
iret
loopne
ret
fildl
notl
cld
aam
aaa
out
rcr
jmp
cmp
in
rcr
in
clc
int3
call
iret
enter
xabort
shr
call
in
ret
xchg
stc
xchg
icebp
fsubrp
call
hlt
ror
into
aaa
ffreep
neg
fdiv
fcos
loop,pt
jmp
rcr
sti
lret
ror
jmp
call
cmp
loope
iret
fldl
clc
out
int3
into
fimuls
ljmp
out
clc
enter
lds
aad
mov
adcl
out
cmp
out
loop
mov
mov
in
fsubrp
call
out
cs
lock
out
enter
int3
loope
shl
clc
aad
mov
cmc
loope
xchg
push
ss
cmp
xor
ret
cmp
idiv
std
int
mov
int3
icebp
aam
sarl
xor
loope
and
test
cli
in
mov
cli
cli
out
in
in
lret
enter
iret
fbstp
cmc
div
adc
out
cld
cli
cli
call
xchg
xchg
shl
lret
enter
fdivr
into
cmpl
enter
fucom
leave
into
int3
lret
in
stc
shr
xlat
call
in
cli
filds
jmp
and
std
into
fiaddl
sub
in
cmp
xlat
in
neg
fnstcw
xor
stc
test
loop
jmp
lock
sti
repz
aaa
iret
mov
rcr
out
out
enter
icebp
jmp
int
lret
mov
mov
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
out
mov
pop
les
jle
or
jle
jmp
cmp
test
addl
lret
jecxz
sar
aaa
aam
aad
cli
loope
hlt
shl
cld
fcmovu
loope
fsubp
fxch
mov
iret
xchg
xchg
loop
rcr
xor
fdivrs
iret
repnz
ret
fnstsw
test
lret
cld
icebp
add
lock
into
out
repz
fcomi
shr
cld
jecxz
shl
clc
stc
std
test
nop
repz
lret
fcos
fdivrp
icebp
int
and
mov
leave
aad
adc
xchg
push
lock
into
ror
loopne
repz
ljmp
mov
test
mov
int3
in
vshufps
out
xlat
dec
les
aas
fst
orb
int3
out
in
std
enter
loop
shl
ds
ror
repz
shl
xlat
loope
orl
std
lret
enter
int
sti
xor
iret
out
div
sbb
inc
aas
cmc
std
fmull
jmp
ret
fxam
lret
hlt
out
into
cmp
idiv
stc
shl
test
lret
int
test
fsubrp
icebp
xor
repz
lret
in
stc
loopne
shr
fcmovbe
clc
fildl
shr
test
call
cmc
ds
jmp
loopne
rcl
repz
out
cld
xchg
mov
mov
ret
in
int
clc
aam
aam
int3
sbb
fld
aad
mov
in
cli
mov
out
nop
cmp
xor
into
int3
in
repz
shl
fdiv
cmp
loope
fiaddl
mov
test
xor
out
int3
sbb
ds
test
fisttps
out
fildl
shl
jecxz
into
std
cli
icebp
fxam
icebp
mov
loop
std
iret
out
test
loop
cmc
int
ror
hlt
cmp
fucom
in
aad
repnz
adc
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
inc
push
rorb
jle
or
jle
rorl
into
out
roll
in
in
fldz
in
lock
icebp
add
fnstsw
rcl
aad
jmp
fcmovbe
fucomp
cmc
xchg
repz
cmp
sar
lock
cld
fcmovne
fadd
mov
iret
xor
rcr
cli
out
test
xlat
fdivp
std
cmc
out
rolb
in
out
aam
enter
stc
iret
rcr
cmc
sarb
loopne
mov
loopne
xchg
xchg
xchg
clc
hlt
int3
in
fcmovbe
idiv
xor
out
test
loopne
call
adc
loop
hlt
rcl
in
xor
xor
repz
ret
loope
aad
loopne
lret
loope
mov
nop
roll
sarl
loopne
test
jecxz
cmp
cld
mov
lea
jmp
stc
fnstcw
cmp
cmp
ret
rcl
cld
fcmovb
in
incl
into
in
xor
xor
stc
aas
aas
loopne
aad
or
std
std
shr
jmp
in
cmc
stc
sti
out
ljmp
iret
adc
stc
aam
nop
int
in
int
loop
jmp
fidivl
sti
fdivrs
aas
in
call
sti
loope
int3
sti
in
rclb
xlat
out
shl
clc
xlat
aad
aas
aas
loope
incb
loope
sti
mov
test
in
aaa
icebp
xlat
in
stc
neg
fchs
xlat
xor
in
neg
xchg
into
clc
lock
call
lret
fdecstp
shll
repz
imul
rcl
clc
icebp
shl
faddl
sti
in
shl
test
ljmp
loopne
sti
les
cld
mov
fsubr
out
xchg
xchg
rclb
jecxz
into
sti
enter
out
out
loop
fdiv
stc
in
mov
mov
icebp
fildl
add
add
add
fcom
fstp
je
xchg
or
loopne
jle
or
jle
in
leave
int3
aaa
shr
cmpl
cmp
out
leave
jecxz
rcr
xchg
mov
cmc
stc
cmp
shl
cmp
shr
cmp
rcl
cli
and
sti
out
ror
mov
lock
idiv
in
cmc
rol
ljmp
aas
loope
addl
out
test
mov
aas
int
out
leave
lret
cli
cmp
sti
filds
movl
mov
mov
lret
lock
xor
fst
aam
fcomi
sbb
sti
test
std
testl
out
loopne
cmc
not
fcmovnu
ss
hlt
rcl
adc
fcmove
fldlg2
mov
xchg
xchg
aad
repnz
iret
fld
out
aad
lret
jmp
ss
repnz
loope
fiadds
out
jecxz
in
cmc
in
xor
in
fmul
repnz
cmp
test
shl
inc
les
xchg
shr
jmp
xor
lock
into
sti
xor
inc
decl
mov
shl
fdiv
ror
repz
xor
call
loopne
icebp
test
dec
lea
loop
in
in
aad
lret
fldpi
lret
cmp
rol
cld
inc
cld
sti
fsubr
mov
fucom
jecxz
shl
lock
xor
cmp
aam
shl
fdivp
xor
test
loope
ret
les
ljmp
enter
fucomip
cmp
int
sar
repnz
clc
shl
in
cld
fcmovu
les
hlt
xor
aaa
jmp
ret
shl
in
in
test
mov
in
jmp
hlt
in
icebp
fmul
sar
in
aas
shr
lret
ljmp
xchg
out
sub
rcl
ss
cld
call
aad
cmp
cmp
mov
fdivp
jecxz
xor
xor
enter
hlt
sti
jmp
cli
iret
jecxz
jne
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
sti
out
push
jle
or
jle
repz
cmp
cmp
fucom
jmp
ffreep
cmp
sti
lret
aad
repz
int3
cmp
rcr
sar
jmp
aas
xor
xchg
xchg
int3
clc
cmp
xlat
cmp
ss
ds
loop
xlat
shl
test
loope
cld
cld
xlat
cli
test
fildl
hlt
enter
in
ljmp
fst
enter
xchg
out
in
stc
cmp
or
out
xor
sub
xor
not
xlat
jecxz
aad
ret
cmc
lds
mov
shr
aad
lock
sarb
cmp
cld
clc
xlat
cld
cmc
ret
fucomi
mov
and
mov
shr
xor
hlt
cmp
xlat
jmp
idivl
shl
call
leave
mov
fdivrp
rclb
xor
cmp
stc
lret
loop
shr
ret
xlat
loop
cld
sti
cmp
in
sti
int
rol
shl
xchg
div
sar
lock
aam
cld
cmc
stc
aas
lock
in
fstp
cli
xchg
test
fmul
enter
cli
shr
fiadds
fdivrp
in
in
bnd
rol
xor
iret
ds
sti
icebp
ss
xchg
std
call
mov
enter
loop
call
sar
loopne
xlat
cmp
cld
clc
push
in
movb
loope
xchg
xchg
rcl
xor
cmp
lret
sti
cmp
jmp
std
and
fisttpll
vpsrad
xor
hlt
sarl
ret
ret
out
aam
idivb
fcmovu
int3
nop
rcr
out
test
das
xlat
std
repnz
in
or
out
rolb
in
out
xchg
xchg
lret
in
int3
xor
cmp
out
repnz
xor
rol
cli
test
jmp
int3
sarl
repz
rol
aam
jmp
fdivr
xchg
mov
movb
mov
mov
mov
jmp
leave
ret
int
int
mov
mov
sub
adc
or
jle
xchg
test
shr
cmp
test
hlt
shr
in
addb
xchg
int
cmp
clc
bnd
out
mov
cmp
xlat
faddp
mov
out
xchg
shr
cmp
cmc
icebp
cmp
into
aas
in
ror
xor
cmp
xchg
mov
fadds
adc
rol
xor
xor
hlt
aaa
rcl
test
cld
filds
mov
out
ret
mov
hlt
in
ror
idiv
cmp
iret
hlt
aas
divb
stc
sbb
std
cmc
addb
out
leave
leave
test
cmp
cmc
adc
fcomi
lret
test
test
stc
cmp
xchg
icebp
xlat
iret
in
xor
repnz
repnz
adc
stc
mov
test
test
mov
fcmovnbe
jecxz
lret
jmp
leave
loopne
stc
rcr
aaa
into
fstp
jecxz
hlt
orl
rol
in
repz
xor
cmc
filds
out
mov
out
out
orl
leave
cmp
cli
dec
repnz
cmp
iret
shl
call
out
xchg
ret
loope
mov
jmp
sti
rcl
hlt
sti
cld
cmp
cli
in
neg
in
out
out
out
test
mov
cld
aaa
aam
fdivrs
fadd
out
rcl
mov
lret
ljmp
aad
shlb
rcl
int
iret
cmc
stc
xlat
addb
fmull
addl
stc
hlt
aaa
ror
fst
rol
cmp
fildl
mov
int
fdivp
adcb
hlt
idivl
aad
std
icebp
cld
sbb
mov
into
mov
fldl2t
xor
add
clc
xor
stc
adc
cmp
and
std
fcomip
repz
mov
loop
xchg
mov
icebp
xchg
repz
icebp
in
xor
vpmuludq
cmp
xor
jmp
aam
mov
jae
int
adc
or
jle
lock
cmp
dec
cld
lock
rorl
sti
aam
sar
hlt
aaa
repnz
aas
repnz
mov
enter
jmp
into
roll
jmp
cmp
int3
rcr
ljmp
leave
in
addl
shl
iret
cli
cli
cmp
aaa
aam
fdivp
ss
out
test
in
fcmovnbe
mov
call
cs
not
ror
fincstp
xlat
aam
movb
loope
std
icebp
test
mov
out
cld
fdivrp
ror
shr
xlat
xlat
test
stc
popl
ret
idivb
fnstenv
xor
in
idivl
fiaddl
fists
int
cli
idivl
fcmove
test
out
cld
aas
fcmovb
lret
lock
loop
aam
fisubrl
cmp
iret
cmp
icebp
out
test
in
in
xor
jecxz
out
in
enter
fdivrl
sub
addl
test
xchg
fldl
int
cld
cmp
in
lock
fcomi
in
test
jecxz
enter
mov
xchg
clc
ss
cmp
lret
into
cmp
int
rcl
repz
aam
test
mov
or
test
lret
icebp
iret
jmp
out
jmp
aad
ret
mov
in
fldl
fbstp
loop
in
jmp
int3
int3
out
addl
out
xchg
repnz
jecxz
aam
leave
enter
in
repnz
clc
call
fiadds
xchg
mov
jmp
sub
rcr
ljmp
int
repnz
cld
xchg
out
test
out
lret
lock
sub
hlt
icebp
ret
cli
into
addb
xlat
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
push
mov
cwtl
adc
jle
add
leave
jecxz
jecxz
int
xor
hlt
int3
fdivr
ror
testb
cli
shl
xchg
mov
into
out
xchg
aaa
divl
call
out
stc
fadds
out
test
clc
in
call
in
aad
aaa
out
xor
in
fdivrp
enter
roll
fsubr
fmul
fmul
fimuls
ss
loop
aam
jmp
and
loopne
out
xlat
out
lock
in
fst
in
ljmp
rcl
loope
cmc
test
ret
cli
les
shl
and
cmp
cmc
iret
out
icebp
cmp
frstpm(287
mov
icebp
jecxz
loopne
in
icebp
cld
adcl
cmp
in
iret
adc
shr
rolb
test
mov
ret
out
aad
ror
cmp
in
test
and
repnz
mov
in
test
xchg
idivl
test
sbb
addl
mov
lock
in
test
xor
in
jmp
out
jecxz
in
in
in
inc
sub
out
into
mov
clc
out
hlt
aam
jmp
cmp
repnz
std
rcl
aad
fildl
aad
loope
xor
cli
shl
xlat
stc
loopne
shl
hlt
ret
cmp
ds
loopne
filds
sub
fld1
cld
fidivl
icebp
cmc
ljmp
lock
mov
fucom
jmp
jmp
shr
aam
sti
shr
dec
rcr
cmc
incb
leave
and
in
sub
loopne
lret
lds
repnz
cmc
lock
sarl
ror
not
in
idivb
popl
test
in
shr
ljmp
in
rol
test
fdiv
cld
sti
xchg
fucomip
shr
xchg
lock
rorl
fsubr
cmp
dec
cld
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
ss
adc
cli
or
cld
fucomip
test
test
mov
ficoms
aad
aaa
sti
out
shl
iret
int
in
ret
loope
in
jmp
jecxz
sti
xacquire
into
in
icebp
out
fdiv
shl
fcomp
cld
cmp
int
call
ljmp
jmp
xor
in
fadd
xor
cmp
loop
fmul
loop
sar
enter
cli
sbb
loopne
sub
rcl
out
hlt
aam
aaa
jmp
std
clc
lds
idiv
cmp
iret
mov
loope
repnz
fadd
aam
lret
shl
aam
loop
sar
sbb
mov
test
in
in
out
cmp
cmp
fistpll
out
les
sub
out
repnz
out
sub
imul
clc
fdivrp
jmp
shr
jecxz
rol
test
fsubp
neg
fcmovnu
xchg
fistl
xor
in
out
das
imul
int
out
stc
rcl
aas
cmc
loop
mov
in
clc
cld
ljmp
aas
ret
aam
sti
ljmp
sti
fucomi
mov
mov
shl
icebp
ret
fstp
ljmp
cmp
std
sti
cmc
out
mov
in
leave
loope
hlt
out
aam
idivb
out
jmp
imul
cmp
aam
lock
sti
loop
xchg
xchg
in
das
das
in
out
repz
icebp
clc
sarl
cli
aad
ffreep
sti
jecxz
div
lea
orl
stc
enter
int
out
stc
aam
test
or
icebp
les
leave
out
shl
jmp
fnstenv
roll
aam
loop
out
in
stc
xlat
fsubrp
popl
int
sti
cmp
xor
repz
fcos
std
ljmp
or
into
lret
out
ror
repz
xor
xor
ror
les
xlat
add
mov
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
adc
mov
jle
or
jle
mov
xchg
mov
call
cli
out
fdivr
out
adc
idiv
out
test
lea
out
hlt
lret
leave
in
jmp
cmp
in
leave
xchg
cli
fst
cld
clc
loope
mov
ret
aaa
cld
xor
shl
iret
aam
fadd
lock
sti
shr
mov
shr
hlt
shl
icebp
cmp
into
aam
icebp
rcl
xor
out
mov
enter
lock
leave
xchg
loop
icebp
aaa
out
icebp
aaa
xor
jecxz
rolb
sti
fmul
fimull
cmpb
fxch
aam
leave
iret
neg
aam
fcmovu
rolb
mov
cmp
test
cmc
rcll
jmp
fdiv
ss
sti
ret
add
call
in
leave
rorl
stc
in
xor
call
fneni(8087
ss
jmp
test
movb
jmp
cmc
lret
lret
hlt
in
ss
test
repz
fcmovb
ljmp
out
roll
hlt
xor
call
xlat
cmp
in
ret
ret
ljmp
out
loope
test
fucomp
in
int3
icebp
ror
ss
sarb
xchg
jecxz
lret
ror
mov
jmp
aad
sub
jmp
cmp
aam
cmc
in
hlt
aam
faddp
enter
mov
repnz
in
mov
aaa
xor
leave
hlt
iret
cmp
xlat
mul
sti
xchg
std
repnz
xchg
aam
in
clc
in
iret
icebp
neg
xlat
idiv
stc
test
fcmovnu
out
mov
rclb
cmp
cmp
call
loop
movb
clc
lock
mov
int
into
sar
rol
testl
repnz
call
inc
or
dec
or
movb
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
jnp
dec
inc
sbb
or
jle
cli
aad
cmc
iret
cmp
iret
roll
clc
into
xlat
in
iret
repnz
rcll
cmp
cmp
in
fmul
clc
cmp
cmp
cmp
loop
cmc
fsub
lret
dec
test
out
aaa
into
ss
cmp
fstpt
ror
xchg
int3
fsubp
loop
fimuls
sub
cmp
lret
iret
std
icebp
int
aas
out
vpminub
sti
mov
cld
jmp
call
enter
out
into
xlat
sti
out
test
in
lock
loope
flds
loope
loope
mov
call
out
fcomi
idivl
ret
repnz
lock
and
in
mov
lret
call
shl
cmp
f2xm1
repz
stc
adc
xchg
into
xchg
xor
jecxz
cli
cmp
lret
xor
clc
ljmp
xchg
sti
hlt
shl
loope
fmul
fcmove
icebp
not
out
aas
in
cmp
xchg
lock
ljmp
lock
jecxz
xor
out
cli
cmp
xor
xor
loopne
jecxz
enter
mov
xchg
out
out
xlat
out
stc
enter
ret
cmp
jmp
mov
in
repnz
repnz
fcomip
into
cmc
into
xor
jmp
rcl
cld
loope
in
test
mov
ret
sti
idivb
shr
loope
out
cld
xchg
loop
mov
jmp
in
aaa
aam
repz
cmp
ss
fiaddl
shl
sar
cli
fisttps
mov
ret
out
and
cmp
faddl
mov
std
out
loopne
aaa
aaa
cmp
aam
call
in
out
rcr
cmp
mov
nop
fsubp
loope
xor
sar
ror
lret
ret
jecxz
repz
into
sub
mov
jmp
int3
enter
lret
int
stos
test
aaa
pop
xchg
cmpsl
push
sbb
jle
add
out
xlat
add
lea
not
int3
lret
repz
iret
rcr
fld
ffree
incb
sbb
cmc
out
rolb
xchg
shl
lock
xlat
aam
stc
rol
loopne
call
lret
fimull
into
in
jecxz
shll
idiv
repz
leave
or
cmp
out
xchg
out
decb
cmc
xor
enter
idiv
cmp
std
idiv
stc
mov
lret
stc
mov
fcmovnu
std
adcb
xlat
in
test
aad
int
ror
cmc
fdivrs
in
mov
sub
hlt
ret
test
testb
add
std
std
int3
mov
notb
repnz
cmc
iret
repnz
aad
aas
sub
aam
cmp
xchg
fisttps
jmp
lret
repz
cli
inc
loop
fadd
incl
repnz
xchg
jmp
xor
shl
clc
int
cld
ret
les
loope
into
ret
cmp
icebp
aad
jmp
cmc
cmp
cmp
lret
fldl
incl
lock
out
xor
enter
aad
out
cmp
std
loopne
lret
enter
jecxz
iret
xchg
cs
out
iret
loope
out
sar
movl
rcl
aam
out
cmp
cli
fsubp
out
fsubrp
loope
repnz
fcmovu
clc
int3
xlat
out
out
jmp
jecxz
enter
idiv
div
fiaddl
stc
shl
lret
xlat
xor
mov
jecxz
out
fmul
iret
std
rcr
cmp
rol
aad
out
and
leave
fists
cmc
ret
das
int3
std
cmp
icebp
ljmp
xchg
repnz
repz
lea
mov
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
xlat
int3
ret
cmp
ds
cmp
add
fsubp
aad
xlat
jmp
xchg
in
xor
fcmovbe
les
lret
fmul
add
test
in
in
enter
lret
jmp
loopne
out
int
into
aaa
in
enter
std
ds
clc
mov
int
rcll
loop
xor
xor
cmp
cmp
out
std
xchg
cmc
clc
out
stc
in
into
hlt
loopne
jmp
leave
fmul
aaa
fsubr
sti
fiadds
mov
mov
mov
iret
loope
jmp
out
fdivrl
ljmp
clc
std
in
fisttpl
mov
ljmp
icebp
cli
repnz
cmp
xchg
fildl
mov
xchg
mov
xor
int3
xor
ljmp
shl
ljmp
loope
nop
loopne
xor
lret
xor
out
cmp
in
and
xchg
loop
hlt
lret
test
test
in
xor
cmp
xor
test
in
icebp
dec
faddp
sbb
out
lret
jecxz
cs
call
cmc
aad
test
shl
cli
aas
fistpll
filds
fcmovbe
in
xchg
lock
sar
ds
clc
out
cld
icebp
out
call
call
fucomp
mov
sti
jmp
xor
sarb
into
shl
ret
stc
mov
jecxz
lea
aaa
vpsllw
icebp
leave
aam
xor
ret
jecxz
jmp
mov
stc
out
xchg
mov
loop
lret
xor
idivl
in
sti
cmp
out
addl
in
aam
or
rol
cmc
enter
sbb
out
aad
cld
out
in
clc
cld
sti
loope
out
adcb
fmul
shl
fsubrp
hlt
lret
sti
shrb
enter
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
pop
imul
jle
cmp
lock
ret
fmull
mov
out
cmp
dec
cld
shl
stc
sar
repnz
std
mov
loop
loopne
int3
fists
aad
xor
ss
fcomi
int3
cmp
rolb
mov
ret
xchg
fcmovne
int3
mov
in
jecxz
jecxz
aaa
rol
sti
rcl
xor
test
mov
in
jmp
sar
out
in
cmc
out
fnstenv
call
fiadds
out
ret
cmp
roll
icebp
in
test
mov
out
vpsrlw
int
fsub
and
icebp
ret
aad
test
int
sub
repz
sub
icebp
cmp
aad
in
out
aad
cmp
test
rcr
xchg
test
aad
loopne
shr
repz
xlat
sti
fcomi
icebp
sar
cmc
enter
stc
fisttpll
mov
cmp
out
int
cld
fucom
iret
int3
cmp
jmp
enter
leave
rol
aad
in
aad
idiv
lock
lret
stc
cli
std
cld
sti
icebp
cmpl
adcb
int
ret
fnstenv
sub
iret
cli
lret
ljmp
idivb
repnz
mov
xchg
cmp
int
xor
call
loop
test
clc
fildl
mov
int3
adcb
ss
lock
fnstcw
xlat
loope
test
loopne
fcompp
lock
repz
iret
cmp
cmp
ret
int
lds
stc
stc
xchg
enter
jecxz
hlt
lret
out
ljmp
div
rolb
neg
fmul
in
ljmp
loop
lret
int
clc
not
hlt
cmp
rol
ret
faddp
aad
clc
addl
rclb
aaa
jmp
cmp
ds
cmc
out
and
into
mov
orl
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
out
jp
jle
or
jle
in
testb
lock
out
dec
cmp
xor
loop
fprem
call
in
int
ret
in
cmp
cli
std
cmp
cmp
loop
hlt
test
kmovw
in
leave
mov
xor
out
test
cli
stc
in
shl
leave
cld
cmc
int
orl
xlat
cmc
fcom
iret
out
cli
icebp
cmp
ss
sti
std
in
stc
out
pop
out
int
jecxz
fldlg2
lock
icebp
clc
div
cli
cmp
mul
les
aas
sti
fmul
int3
sub
std
lock
ljmp
into
sar
sar
out
testl
out
repnz
sarl
int3
xor
in
hlt
cmp
rcl
add
in
xchg
xchg
sti
leave
lock
ss
fstpt
aas
clc
aam
rcl
leave
repz
cmc
fimuls
xchg
xor
out
leave
ss
ljmp
xchg
ret
lret
jmp
rol
xor
in
cmc
enter
iret
aaa
clc
testl
mov
ljmp
fst
loopne
and
stc
and
ret
lret
in
xchg
int
int3
out
fmul
les
repnz
cmp
fdivrs
test
rcr
sbb
fadds
repnz
fnstenv
int3
xor
cli
int3
out
aas
int
rol
in
aad
stc
sbb
aad
fcmovu
out
in
xor
cmp
xlat
fsubr
std
in
sti
out
loope
test
lock
xor
int3
fcmovu
shl
sti
lret
in
loopne
ret
cmp
hlt
aam
jmp
ljmp
int3
ret
fnsave
sarl
iret
loop
sar
aas
cmp
sub
loope
sti
lds
loop
lock
stc
shl
xor
lret
int3
cmp
je
jmp
aam
int
aad
fldt
sbb
or
jle
add
iret
test
jecxz
enter
mov
mov
ret
iret
xor
idiv
cmp
ds
lock
out
hlt
add
fcomp
mov
in
xchg
sub
aad
in
in
lret
in
xlat
fnstsw
cld
out
sti
cli
mov
lret
fdivrp
call
jecxz
in
xor
jmp
cmp
leave
out
clc
not
lock
out
sti
in
incl
out
in
xor
fsubr
repz
cld
cli
sarl
cmc
or
in
rol
out
mov
fsubp
shrb
cmp
out
cmp
shl
icebp
ret
testl
mul
xor
ret
leave
lret
repz
ljmp
iret
neg
rcr
fsubrp
fiadds
cld
call
enter
ds
sar
stc
adc
stc
out
in
in
into
sbb
shl
int
xor
imul
icebp
xor
ds
out
jmp
shl
mov
loopne
mov
ljmp
out
xlat
cld
out
in
aam
cmp
in
cli
xchg
lret
addl
jmp
fcomi
into
clc
ds
rol
in
in
fxch
ljmp
repz
jecxz
int
aam
std
icebp
shl
repnz
xchg
fmuls
lret
iret
out
shl
cmp
stc
idiv
cmp
cmp
cld
rol
out
aam
fisttpll
jmp
call
xlat
in
out
ror
cmp
in
fld1
repz
jmp
lret
xchg
rcll
sti
fdivrl
in
xor
loop
out
repz
cmc
ret
in
std
loope
mov
in
int
stc
in
in
cmc
aad
cmp
xor
cld
fstp
inc
xchg
orb
mov
adcl
aas
hlt
cld
std
shl
aas
ds
xchg
mov
mov
jmp
aam
iret
int3
fst
outsl
fmull
movsb
sub
jle
add
ljmp
shlb
shll
cmp
ss
sar
int
cmp
mov
incl
loop
out
aam
call
cli
cld
iret
std
ljmp
fdivp
stc
stc
loop
out
test
or
sar
call
pushl
aad
f2xm1
cmc
std
xchg
mov
test
std
lret
lret
out
out
aam
leave
cld
rcr
loopne
fcomi
cld
cmp
mov
test
into
rolb
les
leave
fdivr
lret
fdivr
into
cmp
xchg
mov
fimull
xor
in
cmp
repnz
rcl
mul
ljmp
into
ljmp
lock
aad
jmp
cmp
fdivrp
loope
fdivrp
int
clc
in
xchg
xchg
xchg
rol
cs
fdivr
xor
cmp
shr
rcr
in
cli
fiaddl
dec
lret
ror
xor
icebp
in
std
cmp
out
in
sti
ret
cmp
fcmovnb
fisttps
cld
out
out
in
jecxz
xor
jmp
shlb
enter
out
fsubr
cld
cmp
aam
jecxz
in
hlt
lret
loope
aad
sti
std
repz
or
xlat
clc
aas
cmp
mov
fdivr
out
fsub
jmp
int
in
out
aaa
ljmp
lret
ljmp
std
fdivp
out
lds
hlt
in
xchg
leave
aaa
int3
les
iret
sti
int3
ljmp
lock
rcr
out
jmp
jmp
aad
in
jecxz
repnz
int
out
repz
sbb
fcom
icebp
fstp
rorl
jmp
mov
loope
int3
in
jmp
divl
dec
cmp
out
leave
testb
xchg
mov
in
bnd
xlat
int
icebp
rol
repnz
iret
xlat
cmp
hlt
in
orb
int3
loopne
into
lock
xor
in
mov
mov
jmp
ret
xlat
int
fstp
cltd
sbb
movsb
and
jle
or
jle
jmp
fmul
clc
lret
not
cli
in
fcomi
out
sti
adcl
std
mov
aad
cmp
stc
ljmp
rcr
movl
sar
int
xlat
into
jecxz
int3
stc
std
xlat
jmp
cli
faddl
cli
movb
incb
in
enter
rcr
fsub
sti
out
test
cld
lret
in
and
into
xchg
lret
xor
in
xor
cmp
stc
and
in
int3
out
in
xchg
int
rolb
fnstcw
out
dec
cmp
int
clc
cmp
xchg
ljmp
leave
in
xor
loopne
ffreep
ret
cmp
loope
xchg
loopne
out
test
nop
in
repnz
sar
fdivs
roll
hlt
xlat
cld
xchg
cli
xor
jmp
enter
fcomi
aam
idiv
dec
stc
test
enter
ljmp
adc
aad
rcr
cs
cmp
loope
test
stc
loop
shl
enter
out
ror
xchg
fdiv
in
aam
rol
out
sarl
stc
lret
leave
out
sti
fsin
std
jecxz
xchg
mov
nop
cmc
int
xor
rcl
test
sti
sti
sti
addb
testb
loopne
mov
in
aad
ss
div
cmc
stc
sub
fucomip
rcr
in
cmp
ljmp
bnd
aaa
fdivrl
fcmovnbe
shr
loopne
fildl
aas
jmp
xchg
icebp
int
cmc
into
cmp
ljmp
shl
in
decb
mov
xchg
in
aad
cmc
sub
imul
cmp
sbb
sarl
enter
fmul
rolb
xchg
into
ss
leave
enter
out
aaa
into
in
clc
lea
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
insl
negb
jle
add
and
mov
fsubp
out
ljmp
ljmp
ror
xchg
mov
xlat
loope
call
out
fnstenv
aam
fcmovnbe
ret
adc
rcl
clc
aad
iret
lock
out
in
ror
into
fdivr
aad
cmp
clc
sti
std
cmpl
fisttpll
in
addl
xor
cmp
fsubrp
cld
fcmove
sar
ret
ret
sbb
fsubp
add
enter
xchg
into
out
clc
jmp
into
aad
rcr
fnstcw
out
out
out
nop
icebp
out
enter
imul
out
out
cmp
fdiv
fcmovnbe
shl
aam
cmc
call
mov
sub
mov
jmp
and
das
iret
icebp
jmp
cmc
cmp
into
in
rcr
idiv
sar
jmp
fsubp
xchg
in
out
in
cmc
fcmovnu
repz
rol
sbb
loop
neg
stc
into
xchg
roll
cmp
xor
faddl
xlat
mov
and
cmc
das
repnz
in
xor
fcmovbe
repnz
sbb
mov
std
std
leave
fsubp
shl
jecxz
lret
fsubr
enter
call
cmpb
cld
test
addb
std
lret
loopne
loop
sarl
cmp
fabs
cmc
cmp
in
loopne
sub
lock
hlt
mov
jecxz
xor
out
cmc
repz
and
decl
cld
movl
out
in
sti
xor
iret
clc
in
faddp
clc
cmp
in
loope
lret
lret
addb
clc
test
jmp
rcr
cmp
in
ret
fucompp
mov
in
decb
int3
out
out
in
sti
loopne
ret
call
aam
in
out
mov
mov
aaa
call
add
add
enter
ret
xorb
mov
or
jle
xor
cmc
xlat
fcmovne
cmp
cmp
cmp
rolb
fstl
repz
in
fsub
inc
cmp
ss
loopne
addl
movb
stc
cs
sub
lret
out
adc
aam
enter
xchg
filds
in
shlb
int3
in
loopne
cmp
xlat
aas
add
mov
cld
jmp
fmull
fisubrl
in
xor
call
int3
rol
sti
add
xlat
into
mov
fucom
ror
shll
xlat
ds
sbb
cld
cld
fxch
cli
loope
int
jmp
shl
div
in
int
out
enter
ret
shl
test
test
and
test
icebp
ror
aad
cmp
rcl
int3
jmp
sti
in
stc
testb
clc
mov
iret
mov
dec
lock
out
repnz
xor
xchg
cld
faddl
in
jecxz
iret
fucom
xchg
fcomip
xor
cmp
xlat
jecxz
rol
shl
fucom
in
jmp
iret
xchg
cld
test
in
loop
cs
aam
out
in
sti
icebp
jmp
ss
call
loope
mov
into
int3
call
repz
test
neg
out
cld
ret
into
xchg
dec
rorb
shr
out
repnz
out
into
enter
xor
fsubr
test
lea
mov
cli
out
out
cmp
out
into
iret
loopne
inc
rcl
icebp
test
fcmovnbe
mov
jmp
into
in
in
add
neg
loopne
loopne
std
out
mov
xor
hlt
sti
repz
cmp
ljmp
icebp
stc
stc
fsubr
jmp
mov
rcll
in
ror
cmp
cmc
cmp
lds
jmp
leave
xchg
aaa
cmp
push
into
das
jle
or
jle
test
shl
std
test
loop
rcr
xchg
jmp
xchg
leave
shl
rcr
repz
xor
stc
in
rcr
sub
int
mov
out
nop
mov
nop
inc
sub
out
in
ror
sti
hlt
ret
clc
xchg
aam
jmp
ljmp
mov
ret
sub
stc
shl
fnstsw
test
out
out
out
mov
xchg
cmc
out
das
xor
xor
ljmp
aas
testl
int3
rcr
out
ljmp
aaa
into
rcl
out
xchg
addb
into
iret
popl
loop
stc
lock
stc
cmp
std
cmp
fdivr
shl
adc
xlat
nop
loopne
out
iret
fcom
lock
icebp
xor
jmp
std
clc
mov
cmc
stc
lret
fcmovnb
fcoml
xor
xlat
test
das
leave
ds
cmp
stc
test
icebp
out
loope
lret
mov
xchg
or
out
aam
iret
in
lock
rcr
cmp
sarl
out
in
shl
cld
loop
lea
fldl
repz
lret
sar
ror
std
not
shl
xchg
loop
xchg
loop
fldl
out
ror
aaa
cli
aad
in
idivl
fdivr
in
xchg
cld
sbb
mov
std
xchg
loop
xor
jmp
cli
stc
imul
repnz
imul
neg
fists
shl
xor
imul
sti
repnz
loopne
fcomp
loopne
out
aad
mov
in
fisttpl
or
iret
out
aaa
ljmp
cmp
movb
test
leave
fsub
xchg
vcomisd
imul
das
cld
iret
in
in
xor
icebp
test
mov
loopne
loop
loop
xchg
hlt
addb
cld
out
lret
out
rcr
leave
repnz
std
loope
in
mov
sti
xchg
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
rcr
loopne
aam
xor
lock
lret
icebp
stc
fdivr
iret
rol
loopne
orl
repnz
aad
out
cld
repz
sarb
out
fmull
fsubrp
xchg
incb
shl
xor
cmp
cmp
aas
std
cmp
test
jmp
xchg
ss
jmp
fcompp
lret
sar
cmp
mov
int
and
jecxz
ror
lret
fucomi
repnz
lret
test
out
rcr
shl
jmp
cli
nop
enter
mov
jecxz
shl
xor
rcr
lret
iret
fmulp
xor
cld
xor
in
in
ror
fsubr
aam
rol
cmc
stc
push
not
in
ret
loop
cmc
ffree
out
test
hlt
mov
xor
ljmp
hlt
cld
ret
in
aam
jmp
in
mov
ljmp
aam
out
xor
int
idivl
aas
in
in
rcr
fisttps
lret
xchg
xchg
hlt
ror
sub
rcr
cmp
rol
out
in
test
out
sti
out
lret
int
filds
fdivrs
ror
frndint
roll
fdivr
fdivr
decb
nop
xchg
jecxz
mov
loop
cmp
in
divl
loop
loope
test
cmc
loop
fsubr
mov
lret
jmp
int3
out
into
cs
repz
test
div
loope
out
enter
mov
xor
xor
clc
aam
out
sti
icebp
rcl
std
sti
shl
sar
stc
lret
std
mov
cld
xchg
fldl
fnsetpm(287
call
hlt
test
loope
stc
ret
loop
sti
fcmovnu
ficoms
ljmp
rcr
std
addb
mov
ds
in
cld
mov
mov
test
xor
cmc
fcomi
iret
iret
cld
cli
test
or
jmp
ret
enter
int
aas
icebp
jg
fldenv
ja
xor
or
jle
jecxz
in
stc
hlt
leave
rcl
fdivr
into
ret
lret
mov
aam
iret
rcr
iret
lret
jecxz
hlt
ds
lds
in
mov
sub
sti
out
into
out
lock
icebp
out
cmp
aam
cli
mov
incl
lret
out
xor
int3
clc
aaa
lret
call
jmp
jecxz
in
testb
lret
cmc
shl
lret
out
mov
fcmovu
stc
rcr
ret
test
decl
adcl
cmc
enter
iret
repnz
icebp
out
test
call
rcr
test
fsub
aam
out
in
lock
std
cmp
adc
repnz
fnstsw
clc
mov
xchg
orb
into
in
in
cmp
push
shr
aam
fcmovbe
int3
in
ljmp
fdivp
in
xbegin
in
xor
sar
ret
xor
ret
xor
int
mov
into
icebp
jmp
hlt
cmp
mov
mov
or
out
in
out
xor
cmp
cmp
shr
sub
loop
jmp
lea
rcl
in
hlt
sti
in
out
hlt
loopne
fcomp
loope
fiadds
call
or
ror
aam
clc
enter
fdivrs
sti
adc
xchg
fsubrp
in
addb
test
shll
fdiv
out
sti
out
fdivrp
hlt
jecxz
out
repnz
in
loop
int3
or
lea
ss
mul
fucomp
cmp
test
repz
in
mov
in
mov
fld
out
aad
fdivp
shl
out
loop
aam
sbb
mov
xor
xor
enter
jecxz
filds
test
ffree
out
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
push
lret
clc
xor
jle
cli
orb
xor
cmp
fdivr
cmp
neg
fst
orb
les
loop
cmp
cmp
shr
adc
stc
mul
jmp
mov
mov
stc
shr
sti
repnz
into
cmc
cld
stc
out
test
test
nop
out
in
out
int3
aad
sar
jmp
sar
aam
lock
aam
enter
loope
xchg
rolb
aam
in
fucomip
out
cmp
aas
aaa
sbb
loop
test
cmc
mov
rorb
xchg
iret
das
xor
cmc
ss
cmp
aam
int
cmp
filds
fldl
nop
fldl
cmp
aad
out
repnz
roll
in
cli
rolb
repnz
enter
shl
faddl
adc
mov
mul
nop
out
int3
loope
aad
aaa
fldt
aam
std
shr
cld
movb
test
in
call
aam
cmp
hlt
rcl
cld
idivl
incb
call
mov
fsub
out
call
repnz
xor
cld
clc
lret
int3
clc
aaa
add
clc
leave
add
fucom
iret
int3
loopne
lock
rcl
cli
cmp
cmp
int
aad
rolb
ror
lret
mov
lret
adcl
fcmovbe
fidivl
loopne
test
loope
mov
out
add
in
enter
out
loop
sub
into
mov
fcomip
idivl
sti
mov
fmull
mov
xchg
xchg
shrb
xor
xor
ss
stc
fdivr
iret
aad
loop
shr
sub
int
ret
and
xchg
out
fld
lret
lock
aas
int
fdiv
out
div
loopne
mov
fcomp
or
loopne
loopne
repnz
xlat
imul
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
aas
call
fndisi(8087
aas
aad
stc
cli
enter
subl
jmp
cmp
xor
xchg
cmc
lret
popl
mov
fcom
cmp
aas
test
testb
ffree
int
repz
rcl
clc
repz
repz
iret
stc
cli
hlt
ds
cli
ret
fucomi
fildl
in
aad
cmp
lret
jmp
div
ds
ds
stc
ljmp
fmul
lret
das
fnstenv
int3
xor
fcomip
shl
aad
repz
rcr
fmul
loope
add
lock
loopne
cmc
leave
out
leave
cmp
cmp
icebp
rcr
sub
fldl
mov
lea
xor
int3
dec
aas
int3
test
sbb
leave
test
nop
lret
repz
rcl
sub
neg
ror
out
cmp
call
fdivr
out
loopne
aas
stc
ret
jecxz
leave
call
in
cs
shr
rcr
call
loopne
test
add
enter
adc
sub
test
enter
cmc
iret
out
test
fdivr
lret
icebp
std
jmp
lret
cmp
aam
rcr
xlat
fisttpl
sti
test
stc
mov
in
test
adc
enter
out
call
idiv
cld
repnz
loop
fimuls
das
shl
cld
cmp
into
leave
rolb
div
sbb
mov
loope
fdiv
into
int3
ljmp
cmp
rcr
hlt
stc
mov
test
call
rcl
jmp
aad
incb
and
mov
test
loopne
iret
repnz
fcom
hlt
ljmp
stc
incl
xlat
out
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
shufps
xchg
cmp
cmp
jle
sti
leave
into
mov
rcl
aam
cmp
fxtract
icebp
cmc
icebp
leave
hlt
cli
ds
incb
sti
mov
jmp
jmp
cli
ljmp
std
iret
fildl
vcvttpd2dq
and
jmp
fnsetpm(287
cmc
xlat
cmc
aad
out
aad
repz
xchg
sti
in
int3
lret
lret
xchg
out
int
ror
fdiv
in
cmp
fidivrl
int
sbb
roll
lret
lret
fxch
lock
lret
jmp
iret
jecxz
aam
rcl
shl
enter
mov
xchg
std
int3
dec
ret
enter
stc
sarl
icebp
addl
stc
ljmp
lock
xlat
iret
rcl
lret
cld
rcr
lret
cmp
out
cmp
neg
faddl
mov
repz
neg
out
sti
stc
xor
int3
xlat
cmp
int
xchg
clc
lret
int
int3
ret
out
xchg
out
test
sar
in
cld
sarb
repnz
ffree
or
cmp
jecxz
ret
xchg
test
fildl
test
hlt
lret
cmp
lret
cmp
xlat
repnz
jmp
mov
xchg
mov
in
out
int
out
fidivrl
shl
fistpll
ffree
add
cmc
decb
xchg
lock
call
fiaddl
repz
cmc
test
out
in
jmp
clc
aad
lock
clc
fsub
fcomp
std
aam
inc
sbb
xchg
in
in
lret
loop
int3
in
int
call
icebp
les
loop
int3
out
mov
mov
out
in
ret
sub
repz
shr
in
into
out
cmp
cmc
cmc
jmp
stc
iret
xchg
enter
lock
fucomi
repnz
std
test
sti
nop
int3
int3
out
clc
jmp
iret
std
adc
call
sti
stc
repz
fdivrp
int
stc
xchg
out
out
add
xor
fcomi
aad
cmp
cmc
ds
jecxz
cli
sub
mov
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
xor
push
cmp
cmp
jle
cli
aad
clc
loope
mov
loop
mov
das
jmp
hlt
fucomi
shr
fcmovbe
rcl
call
fucomp
enter
jmp
call
out
aam
fidivrs
sub
jmp
cmp
xchg
int
xor
sti
divb
sarl
fmulp
fucomi
in
in
loopne
loopne
repz
int
xchg
call
out
cmp
idivb
xor
repnz
jmp
lock
shl
std
ffreep
frndint
mov
jmp
xchg
fsubrp
rcl
out
jecxz
aaa
idivb
cli
fsubr
aaa
aad
ret
out
aad
aas
filds
nop
xchg
mov
rol
in
jmp
shl
shl
lock
mov
ror
mov
out
out
std
enter
repnz
repz
icebp
fcmovnb
xlat
test
fdivr
fucom
call
ffreep
shll
out
cmc
cmp
aas
into
std
lret
clc
stc
rcl
ljmp
jmp
sti
xchg
jmp
ret
in
call
sar
lds
lret
addl
xchg
mov
clc
cmp
cmp
out
loopne
stc
cmp
mov
xchg
test
sti
out
lret
icebp
jmp
loopne
jmp
sar
sti
fptan
jmp
std
testb
in
mov
orb
cld
faddp
cmp
into
aam
fucomi
rcr
xchg
loopne
jmp
xchg
xchg
fdiv
int3
leave
xor
repnz
ret
repz
cld
fdecstp
out
std
mov
loope
ljmp
jmp
loope
loop
jecxz
test
std
in
int
rclb
cmc
out
aam
in
cmp
shl
loopne
test
lock
sbb
loopne
lret
adcb
hlt
cld
fcmove
ds
loope
jecxz
xchg
mov
flds
test
rol
rol
xor
cld
into
xor
icebp
into
rcr
loope
shl
ret
lock
in
ret
into
iret
int3
lret
int
cmp
clc
out
cld
sarl
movl
jne
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
les
jle
cmp
jle
adc
xchg
nop
loop
fst
out
stc
loop
in
xor
in
in
fucomip
shr
rcr
sar
test
cli
test
xor
jecxz
int3
aam
iret
icebp
int
aas
cmp
xor
mov
notb
test
out
fst
ljmp
cmp
cmp
ds
out
cmp
cli
aad
sti
std
lock
out
cmp
enter
cmp
repz
cli
xor
repnz
fidivs
cld
cmp
in
out
hlt
ret
stc
test
cld
jmp
into
lret
loopne
in
hlt
hlt
test
jmp
shl
lret
cmp
fincstp
fprem1
fucompp
cmp
jmp
out
sti
mov
xor
lret
jmp
addl
fsub
mov
lock
addb
icebp
cli
cmp
out
iret
cmc
aam
hlt
repz
loopne
fucom
clc
xchg
aad
mov
xchg
xchg
into
in
into
xor
ss
cmp
repz
leave
leave
incb
nop
ficoms
lret
enter
std
cmp
shl
rcr
mov
out
rolb
xor
sarb
loope
cmp
fcomip
mov
cmc
aad
fcmove
mov
xchg
xor
ljmp
ss
cmp
icebp
cld
cld
lret
in
xor
into
mov
rol
lock
shr
jecxz
cli
lds
mul
mov
jecxz
lea
shl
xor
fnstenv
in
test
fldl
ror
cli
cmp
out
shl
lock
lret
lret
mul
repz
sti
mul
cld
cld
test
clc
test
test
orl
fcmovu
cmp
cmp
fcomi
int3
mov
into
lret
in
cmc
rclb
cmp
int
loopne
cmp
ret
cmc
stc
mov
jmp
xchg
shl
xchg
aaa
fcmovbe
cmp
lret
aad
cld
cmp
fiadds
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
adc
lahf
into
sarb
add
stc
clc
in
div
fdivr
in
mov
sub
rcl
int3
enter
int3
fld
xchg
fsubrp
fdivr
out
std
adcb
lret
repz
cmc
jmp
out
xorb
mov
rcl
fsub
clc
mov
out
not
fsubr
aad
call
iret
imul
loopne
mov
loope
aam
jmp
mov
out
out
lret
cmp
icebp
repz
roll
out
and
in
xchg
adcl
fmul
mov
aad
cmp
addb
out
sti
loop
nop
test
repnz
xor
leave
fdivrp
shl
sar
rcr
aad
leave
jmp
nop
xchg
jecxz
jmp
xchg
cld
test
cmp
icebp
cmp
les
lret
xchg
in
xchg
into
rcl
cld
aaa
lock
div
icebp
roll
mov
loopne
cld
cld
ljmp
iret
cld
aam
int3
aad
std
test
clc
clc
repz
mov
mul
sti
lret
repz
leave
cmp
icebp
rcr
cli
idiv
out
cld
fdiv
out
add
sti
enter
xchg
lret
xor
ljmp
cmc
rcl
cld
xlat
std
out
clc
shl
jmp
roll
mul
rol
cld
out
cmp
icebp
in
into
lret
ds
lock
xchg
fmulp
sub
mov
std
adcl
sti
call
std
loop
and
fcmovnbe
jmp
loopne
loop
ljmp
fucomi
repnz
shr
int3
out
cmp
idiv
loope
addb
in
rol
int3
xor
cmc
rcl
fcmovbe
cmp
loopne
neg
out
mov
decb
mov
in
xor
jmp
cmp
fsubp
cld
ret
rcr
loope
xchg
neg
rorb
xor
cli
ljmp
stc
ds
into
loope
repz
jmp
int3
lret
int
neg
rcr
int3
cli
sbb
cli
roll
mov
jmp
ret
leave
lret
aad
flds
add
jle
add
cld
ret
xchg
aad
out
out
sti
fldl
jmp
out
shlb
hlt
shr
loopne
test
mov
filds
jmp
icebp
cmc
in
lds
cmp
int
fsubr
in
lret
ds
repz
cli
leave
clc
rorl
lret
mov
shlb
cmp
xlat
ds
cld
aas
cmpb
lock
cmp
lds
out
mov
enter
cmc
out
cmp
ror
out
cli
stc
loop
sar
add
call
xchg
out
xor
ss
cmp
div
cli
roll
cmp
mul
mov
xchg
hlt
ret
call
int3
idivb
bnd
shl
xchg
jmp
leave
out
jmp
xor
shl
shl
cli
cmc
cmp
ffreep
mul
cld
int3
idiv
icebp
int
in
test
xor
idivl
iret
fmul
sar
repnz
xor
dec
jmp
enter
cmc
xchg
out
ds
jmp
hlt
lock
movl
repz
xor
fdivrl
ret
repnz
aad
out
int
out
lret
mul
not
out
xlat
xor
fmulp
lock
cmp
cmp
repnz
jecxz
out
call
in
subb
xor
out
sar
lret
int
test
repz
mov
xchg
jmp
hlt
out
cmp
divb
ljmp
stc
sarl
ds
inc
mov
leave
int3
loopne
int
icebp
sub
repnz
in
adc
jecxz
stc
clc
mov
xchg
test
enter
into
aaa
cmp
fistpll
cmp
aas
rcr
repnz
ret
cld
incb
shr
out
fdiv
cld
cli
into
inc
xor
cmp
repz
dec
clc
leave
std
mov
rol
into
ss
shr
stc
imul
cmp
std
not
iret
ds
fcmovb
mov
jecxz
into
mov
xchg
in
loop
xor
fnstcw
mov
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
test
iret
xchg
repz
not
call
into
incb
int3
clc
call
clc
loop
int
shl
ror
ljmp
xchg
icebp
fmull
aaa
jecxz
leave
cli
out
lret
ljmp
fsub
mul
lret
fiaddl
icebp
in
ret
lret
in
xor
cmp
in
in
out
push
mov
ss
aaa
xor
cmp
sti
fdivr
out
stc
clc
test
jecxz
lock
int3
aad
std
sarl
ss
in
clc
orl
clc
out
stc
xor
cmp
cmp
cmp
clc
fisttps
xlat
in
sti
sar
xchg
in
sarl
jecxz
lret
fdivrp
out
in
ljmp
out
mov
lret
mov
in
aam
ss
xlat
call
clc
sbb
fdivr
shl
ret
test
ffreep
xchg
mov
into
cmp
fpatan
fidivrs
aas
hlt
rcr
xchg
jecxz
in
adc
in
repnz
out
shl
jmp
cmp
icebp
lock
lock
jecxz
sti
sti
xlat
loope
in
jmp
lret
cmc
ljmp
std
lock
idiv
lret
lock
hlt
fdecstp
fnsetpm(287
loope
out
mov
out
jecxz
jecxz
leave
clc
enter
fmul
fsubr
out
sarl
test
loopne
jmp
fmul
cld
sar
int3
test
sarb
iret
fsub
jmp
repnz
out
call
xor
repz
aad
out
aam
cmp
cmp
loop
inc
div
fsubr
int
in
loope
ljmp
aaa
aaa
lock
stc
test
in
enter
cld
out
test
repz
aad
in
sti
into
cmp
int3
fcomi
test
mov
int
jecxz
lret
repz
ljmp
loope
fsub
sti
fsubr
aad
leave
icebp
in
into
rcl
cmp
sti
into
jmp
ret
cld
inc
add
add
add
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
je
and
jle
add
cmp
cli
test
xchg
cli
orl
iret
sub
cmp
ds
cmp
int
fscale
push
mov
call
test
nop
test
imul
loop
vpaddb
sar
in
sar
ret
int3
leave
mov
xchg
iret
ffreep
lock
repnz
div
in
shl
fmuls
call
mov
out
ror
jmp
sarb
fmull
iret
stc
mov
shr
decl
cmc
call
sar
shr
sbb
add
fcmovnu
ficoms
fnstenv
xor
ror
idivb
hlt
aaa
cmp
loopne
jmp
xchg
out
out
mov
out
lock
int
cmp
in
fdivrs
out
sti
cmp
idivb
out
xchg
flds
test
enter
aam
cmp
int
cmp
aas
out
in
out
aas
loop
test
mul
xchg
mov
xchg
xchg
iret
stc
not
leave
xor
icebp
cmp
fcmovb
aam
sbb
jecxz
jmp
jecxz
out
loop
das
jmp
iret
xor
clc
and
fdivrp
fxch
jmp
icebp
call
in
das
ror
repnz
out
cmp
sti
xlat
into
aas
faddl
sti
lret
stc
sub
loop
ljmp
ss
shl
into
faddp
clc
mul
aas
enter
jmp
stc
nop
jecxz
mov
loop
clc
xor
out
aam
shl
cmc
jecxz
ffreep
xchg
out
clc
jecxz
xchg
jmp
lret
ljmp
out
shl
test
fisttpl
mov
test
xchg
ljmp
fdivp
xlat
mul
in
out
iret
repz
ret
mul
loope
clc
clc
xchg
lret
loopne
in
shlb
aam
repnz
jmp
fsubr
jmp
cmp
rol
fucomip
cld
shr
mov
loope
nop
repnz
in
idiv
sar
shr
fucomip
out
sti
aad
in
rcr
lret
enter
ret
and
test
leave
in
fxch
mov
mov
jmp
enter
fcmovnbe
fcomp
insb
jae
fiadds
xor
push
cmp
jle
lret
fnstcw
stc
fsqrt
test
in
call
lock
into
sti
idiv
lret
cmp
stc
xchg
out
lret
mov
xor
enter
cli
xor
cmp
iret
cmp
aam
in
ror
mov
shr
aad
xor
les
int
int3
aad
icebp
or
les
shl
mov
loopne
ljmp
lret
enter
xor
rcr
fadd
xchg
mov
sar
xchg
lret
mov
in
loop
lret
cmp
ss
aad
fsubp
out
shl
test
sti
xchg
inc
in
loop
fldpi
xor
clc
leave
xlat
lret
ss
loop
jecxz
cli
lds
repz
loope
hlt
int
call
repnz
shl
hlt
out
leave
stc
int
out
test
hlt
iret
not
xor
repnz
in
fld
out
rol
shr
fucomp
fdivrp
in
test
mov
loop
loope
out
push
jecxz
testl
loope
xchg
out
aam
out
jmp
filds
loope
movb
decl
out
fsubr
fucomp
lock
aas
rcr
fcmovnb
icebp
fldl2t
ret
add
sub
rclb
nop
lret
stc
cli
in
int
rcl
or
cmc
fcmovnb
loope
in
mov
fisttpll
xchg
in
shl
cmc
aaa
jmp
int
cmp
fucomip
lds
mov
icebp
mov
out
jmp
xlat
hlt
lock
in
jecxz
rol
in
or
in
icebp
xchg
mov
xor
repz
jmp
int
in
loope
mov
fmul
jmp
fucomip
xchg
mul
cmc
hlt
jmp
rol
addb
fucomi
and
xchg
push
movb
int
cli
aad
aam
xlat
test
shr
mov
cld
mov
fcomp
fisttpll
loope
int
sti
mov
add
pop
jmp
aas
lret
ror
lahf
jmp
dec
fldl
jle
cmp
sti
std
xlat
add
rorb
mov
xchg
xchg
out
xchg
loopne
ror
icebp
cs
in
repnz
fmulp
xlat
rolb
in
lret
fsubr
into
lea
out
call
repnz
sar
sti
test
leave
out
icebp
stc
rcl
lock
aam
rol
in
int
repnz
in
cmp
flds
clc
mov
test
loopne
in
fidivl
out
idivl
into
ljmp
in
loope
testl
sub
sar
loope
sti
fnstcw
fsubp
in
out
call
xchg
in
mov
repz
ret
jmp
int
ret
cmc
aas
incb
cld
mov
sti
lret
xchg
std
hlt
icebp
lret
jmp
aam
ret
xchg
sub
repnz
lret
aam
sub
cli
lock
rolb
in
iret
out
icebp
fstpt
filds
into
xchg
jecxz
aaa
cmc
jmp
leave
lret
lret
sar
stc
ds
cli
jmp
xlat
enter
xor
test
cmc
int3
call
icebp
fucom
out
cld
xchg
hlt
aad
lret
sbb
icebp
mov
jmp
in
out
int
cli
cld
ljmp
fcmovbe
test
jmp
ljmp
out
in
jecxz
jecxz
aaa
int3
enter
lret
rcl
call
into
mov
int
icebp
jmp
in
icebp
repnz
aaa
sar
not
fucomip
loope
cmp
test
test
int
jecxz
nop
jmp
loop
icebp
call
sti
aad
int
fdiv
stc
fcmovbe
xchg
xchg
rclb
rcr
shlb
cmp
loope
cmp
ret
xchg
xchg
xchg
xchg
hlt
das
xlat
int3
rcr
xor
cmp
xlat
xlat
in
iret
cmc
sar
xchg
fxtract
jmp
adc
xchg
lea
rol
xor
repnz
into
incb
filds
int3
mov
mov
xchg
xchg
lock
out
hlt
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
repnz
cmp
cmp
rcr
in
and
clc
std
ljmp
test
out
rcl
out
icebp
fucomi
cli
loopne
xor
xchg
sbb
xchg
test
cmp
aaa
into
out
aas
out
idiv
ds
addl
in
out
out
mov
stc
jmp
xor
cmp
fpatan
icebp
filds
mov
leave
testb
xchg
xchg
ljmp
sbb
cmp
jmp
jmp
fsub
rorb
repz
out
cmp
ljmp
loop
test
out
sub
xchg
xchg
cmc
xchg
shl
call
cmp
shll
out
xlat
rcl
fadd
loopne
int3
jecxz
icebp
in
dec
mov
in
clc
aad
fmul
ss
cmp
repz
clc
aam
mov
fcmovnu
sti
in
lret
imull
lock
div
cmp
sarb
xchg
stc
xlat
clc
test
shl
lock
jmp
cmp
ss
std
jecxz
lock
lock
shl
in
aad
mov
cli
ljmp
cmp
out
cmp
cmp
out
repnz
loopne
loope
mov
out
enter
repz
les
aaa
stc
fcmovnu
in
int
into
loopne
out
test
test
lret
mov
into
loopne
in
xor
fyl2xp1
fcmovnbe
cli
cmp
loop
sti
ss
aas
stc
rolb
cli
stc
into
iret
out
roll
cmp
cmc
aam
aad
aam
loop
sti
iret
sar
test
std
idiv
lret
jecxz
in
clc
iret
std
sti
icebp
out
clc
ror
fldz
xor
icebp
hlt
mov
jmp
call
hlt
enter
repnz
jmp
int3
aaa
ret
mov
cmp
test
jmp
clc
xor
cmp
out
jecxz
rcl
repnz
mov
test
xor
ljmp
cmp
not
fnstcw
aas
fneni(8087
in
xlat
loopne
jmp
out
repz
mov
and
or
jmp
ret
ret
rcl
aad
sbb
std
add
jle
cmp
jle
in
icebp
xor
icebp
out
sar
cmp
xchg
les
int
cld
in
shl
into
ret
xor
clc
jmp
cmp
fiaddl
lret
int3
mov
xlat
shll
ss
out
lret
hlt
aam
repz
fldl
out
fdiv
jmp
xor
leave
leave
aad
rcl
ret
aas
idivb
fisttpll
xchg
out
lock
imul
out
cmp
aam
repnz
repz
loopne
lret
faddl
repnz
in
in
clc
cmc
xor
aad
cmc
sti
lock
out
loopne
leave
or
fldl
clc
xor
lock
loope
out
call
mov
xchg
in
orl
sar
aam
repz
cli
lret
cli
out
sbb
rolb
xchg
out
in
xor
jmp
xor
int3
cli
imul
fsub
ret
cmp
call
mov
ljmp
das
xor
xor
sarb
xor
out
xor
aam
aas
ret
test
movb
int
mov
fsubr
stc
ljmp
roll
lret
int
jmp
loop
out
and
cli
ds
fistpll
cli
fiaddl
aam
xchg
int
shl
mov
aam
xor
cmp
fistpll
ljmp
test
sub
lret
das
stc
ljmp
int
cmp
repnz
fdivr
cmc
ljmp
sbb
out
iret
das
iret
fcomp
fnstcw
incb
out
shl
fxam
fcmovu
xchg
into
repz
stc
xor
out
jmp
shl
ret
std
test
flds
rorl
ret
hlt
lret
in
fcmovu
lock
loope
mov
fmul
ljmp
aad
hlt
ss
std
into
cmp
aaa
rcl
cmp
shl
testl
hlt
xchg
mov
pop
ret
push
mov
jmp
lret
aad
int
ss
rcrl
dec
jecxz
sarb
adc
jle
enter
repz
aam
out
aaa
repz
shl
aam
in
ret
lret
lret
test
loopne
into
jecxz
xlat
cmp
rcl
aam
neg
aas
mov
ds
fstp
incl
rcr
in
in
cmp
in
aad
add
xchg
ret
loope
xor
lret
mov
lock
call
sub
icebp
sti
fucompp
repnz
shr
cmp
cmp
cld
orl
in
adc
lock
jecxz
lret
fdivrs
sti
cmc
aas
repz
int
shl
incb
imul
xor
repnz
aad
cld
xlat
repnz
fdiv
clc
fld
mov
in
mov
cmp
cmpb
ds
loopne
out
leave
sbb
in
lock
int
xlat
xor
aam
jecxz
ds
stc
shl
test
xlat
loope
leave
out
lock
test
rol
hlt
iret
ss
repz
addl
addl
xor
out
fincstp
cld
lret
xorl
ffree
mov
fiaddl
out
rclb
out
cmc
cmp
cmp
loopne
test
mov
sti
loopne
nop
lock
xchg
xor
xor
std
out
aam
leave
test
mov
cli
sti
mov
mov
lret
ret
leave
xor
repnz
into
rcr
cmp
ret
mov
cmc
mul
mov
xchg
loopne
loop
cmp
aad
repz
fcom
cmp
mov
ret
mov
icebp
lret
jmp
divb
ror
jmp
cli
out
incl
orb
test
bnd
call
ds
fcomi
repz
loopne
fmull
in
xor
fld
rcr
rcl
fcmove
clc
ret
idiv
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
leave
cmp
loop
lret
orl
call
icebp
xlat
int
cmp
stc
fxam
lret
cld
lock
rolb
jmp
rcr
aam
jmp
jmp
aad
icebp
ret
mov
testl
nop
imul
clc
in
divb
divl
int3
repz
loopne
test
rcr
loope
cli
fcmove
test
jmp
int
xlat
in
aaa
cmp
ret
sti
sarb
leave
int
lock
ljmp
idiv
fnstcw
lock
sarb
sti
ds
jmp
mov
out
addb
xchg
mov
out
cld
cmc
cmp
fcmovu
ds
shr
in
jmp
std
test
cld
out
lea
ret
repz
testb
loopne
rol
test
fcmovu
jmp
loope
out
roll
div
xor
das
cmp
idivl
cmp
in
fsub
aas
decl
iret
jmp
sub
call
xor
xor
cli
sti
leave
rcr
hlt
ret
cmc
stc
rcr
xor
mov
cld
int3
cli
stc
xchg
sub
in
xlat
lret
clc
fidivrs
in
loopne
jecxz
sti
xchg
mov
jmp
jecxz
fbstp
rol
cmp
aaa
out
cld
xlat
fdiv
rcr
iret
incl
in
testb
aam
cmc
stc
divl
icebp
iret
in
clc
cmp
xlat
xlat
lret
iret
test
fsubp
loop
mov
xchg
xchg
hlt
addl
cmp
jmp
aad
aas
fdiv
rcl
stc
loope
lret
icebp
out
out
in
fbstp
jmp
fdiv
repz
out
iret
loop
std
shr
int
fucom
xchg
out
loop
fxch
cmp
lock
fcmovbe
in
jecxz
adc
clc
fimull
addl
fcmovne
testl
fsubr
mov
fmull
iret
enter
hlt
leave
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
rclb
pop
pop
in
jle
adc
jle
out
fucomi
not
hlt
rcl
cmp
repnz
fnclex
les
in
out
rcr
ret
lret
aaa
rcr
shl
loopne
fcmovbe
rcr
in
fcmovnb
out
dec
in
int3
lret
xchg
in
ret
xor
xor
jmp
aas
std
or
sar
imul
cld
mov
test
out
out
lock
ss
aas
xchg
mov
fcomip
in
clc
into
mov
in
jmp
lret
xlat
fidivrl
add
enter
mov
out
out
std
out
into
test
les
sar
ljmp
repz
out
call
mov
lock
cmp
int3
hlt
fcomip
fcmovu
sbb
add
clc
repnz
test
ret
shl
xchg
xchg
aad
loope
shr
cld
fbstp
adc
out
out
repz
fistl
call
out
sub
fdivr
test
loope
lret
out
sbb
repnz
lret
aad
leave
jmp
xlat
cmp
jmp
rcr
loop
mov
sbb
leave
call
in
out
leave
call
iret
cmp
fcmovnbe
nop
loope
out
int
lock
xor
out
hlt
call
ds
in
cli
aas
loope
orb
in
shl
das
jmp
out
cmp
mov
lret
fsubr
loopne
loopne
nop
int3
loop
rol
lret
loopne
xlat
fcmovb
int
loopne
clc
fisttpll
flds
adc
xor
cmp
fmul
out
loop
out
out
test
call
stc
iret
ficoml
fsub
fsqrt
leave
xor
stc
fcmovne
mul
in
out
addb
enter
addb
in
cmc
fst
int3
jmp
incb
out
mov
movzwl
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
cmp
jle
add
loopne
jmp
int3
in
in
lret
jecxz
ljmp
fsubp
iret
loop
ljmp
lret
test
jmp
jmp
icebp
leave
repnz
fdivr
loopne
rcl
fcomi
shl
fcomp
enter
iret
mov
xchg
loope
mov
cmp
cmp
int
aam
xchg
cli
fdiv
cmc
fmul
fdiv
leave
xchg
test
out
int3
rcr
cmp
repnz
cli
fldl
mov
ret
out
cmp
call
aas
out
test
loope
jmp
int3
repz
aad
shl
xor
int
leave
repnz
fmul
cmp
fcmovnbe
loop
mov
aad
xlat
add
xchg
test
lock
jmp
sbb
les
shr
jmp
out
loope
fsubrp
mov
lret
jmp
ret
test
loop
vpaddb
int3
xchg
loope
repnz
sub
leave
repz
loop
in
jecxz
xchg
aad
cld
xlat
in
ljmp
shr
das
iret
aad
in
cmc
shr
cld
jecxz
cmc
fsub
loope
in
int3
in
lock
and
jmp
clc
into
cmp
cld
test
clc
sub
test
icebp
cs
fcomp
int3
cmp
int
fdiv
test
idiv
aas
out
ret
in
in
jmp
mov
ljmp
rcr
cmp
lock
fst
jecxz,pt
xchg
loop
test
out
hlt
ljmp
call
aaa
cmc
out
xlat
aam
aad
aam
ret
fmul
in
jecxz
icebp
out
rolb
leave
fdivr
in
cmp
cmpb
ftst
stc
fsubr
in
sti
loop
fmuls
mov
mov
xor
xlat
cs
cmp
out
fsub
ret
enter
sbb
and
aam
into
xor
icebp
cmp
sarb
rorl
mov
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
mov
fidivrl
adc
jle
fsub
jecxz
cmp
sub
and
roll
fsub
sti
shl
cmc
clc
loopne
idiv
sti
repz
loop
lret
sti
xlat
mov
out
lock
call
ss
lret
loop
inc
shl
fdivp
leave
test
sub
lock
ret
jecxz
ljmp
jecxz
shl
icebp
jecxz
jecxz
rol
fcmovu
out
rorl
jmp
repnz
into
int3
lret
xlat
and
test
in
lret
xchg
repnz
out
out
cmp
int
sub
rcl
loope
fsubr
or
ficoms
out
into
jmp
int3
xor
in
stc
ret
cmc
xchg
stc
fsubrp
jecxz
addb
out
sub
xlat
sbb
out
cmc
jmp
loopne
sbb
cmp
clc
ljmp
xor
fdivr
repnz
iret
loopne
fxam
ljmp
shr
mul
call
repz
ljmp
hlt
rcr
stc
cli
in
lock
dec
int3
aam
out
repnz
div
cmp
loopne
int3
out
jecxz
test
in
in
loope
jecxz
out
ss
icebp
out
cmp
clc
into
std
jmp
divb
fcmovne
xlat
ret
std
lret
loope
hlt
cmp
out
out
aam
shr
repz
shl
shr
repz
not
cld
nop
mov
icebp
sub
leave
call
cmc
cmc
lock
sar
hlt
hlt
cli
aam
jecxz
test
in
lock
sti
neg
fmul
into
loopne
out
std
test
cli
incb
xchg
lret
xchg
nop
rcl
out
fadd
fcom
fdivp
fnstenv
hlt
xlat
fcmovbe
in
jecxz
out
addl
clc
into
aad
cmc
repz
repz
int3
loopne
lret
sar
fdivr
xor
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
mov
fdivrl
adc
jle
shl
xor
ss
jmp
std
jecxz
fcomp
sar
test
int3
jmp
lret
adc
xchg
shll
cli
call
into
roll
test
aas
or
repz
lret
xlat
out
leave
ljmp
div
roll
sub
loop
iret
fsub
neg
fdivrp
idiv
into
jecxz
aaa
xlat
fcos
fstp
out
cld
xorl
enter
jmp
icebp
out
fidivrs
les
in
lock
shr
test
repz
fdiv
and
aam
fld
sbb
jmp
test
div
filds
loop
aam
cmc
test
or
mov
int
lret
imul
int
jmp
fldcw
ljmp
ret
fdivrl
shl
fcmovb
in
ljmp
adc
stc
call
cmp
rcr
ffreep
cmp
cmc
repz
lret
xchg
lret
xchg
out
int
ror
xlat
out
cmp
jmp
iret
out
xchg
movb
std
icebp
jecxz
xchg
out
xor
fcmovne
out
int3
ljmp
sar
rorl
loope
mov
push
iret
aad
shr
cld
aam
lret
fcom
cmp
stc
fmul
xchg
xchg
xchg
in
hlt
call
repz
jmp
ret
aas
fcomi
fsubrp
loop
fimull
call
shr
fucomi
int3
out
dec
out
ret
loope
orb
int
faddl
icebp
int3
repz
cmp
hlt
cmp
std
shl
out
shl
aas
fabs
test
mov
sub
call
fsubr
cli
int
jmp
testl
in
nop
test
in
ror
fdivr
test
sarb
repnz
movsb
jbe
add
imul
jb
dec
jmp
aam
fadd
fstp
pusha
shl
jns
popf
sub
add
stc
shl
jmp
orb
xchg
hlt
mul
ret
jmp
cmp
cmp
roll
ficoms
rol
rcl
aaa
lock
aas
out
in
ret
in
cli
fcmovne
out
shl
in
loope
das
sub
xor
aam
loope
cmc
out
xchg
repz
in
mov
out
std
xchg
hlt
fdivs
rcr
cmp
iret
in
fst
out
orl
dec
addb
in
jecxz
hlt
call
cli
shr
bnd
addb
lret
out
mov
jmp
rcl
fmulp
clc
ror
rcr
cmc
xchg
mov
enter
jecxz
in
int3
repnz
call
shl
cmp
sbb
sub
in
lea
in
into
ljmp
icebp
ss
rcl
hlt
ffree
sar
mov
loope
mov
xchg
into
rol
repz
cmp
iret
clc
fdivrp
icebp
fcmovnbe
cmp
lret
cld
xchg
repnz
ljmp
fcmove
in
cmp
ror
loope
sbb
in
xchg
cmp
ffreep
lret
into
out
icebp
rcl
clc
xor
fcomi
repz
neg
out
inc
addl
fucom
out
sub
ss
shr
std
ror
xlat
sar
cmp
cmp
and
imul
fmull
mov
lret
repnz
jmp
in
int
lock
adc
fdivr
jmp
in
lock
add
iret
call
in
fdivr
cld
loop
fcmovu
ds
fcomi
fcmovu
fimull
test
xchg
nop
clc
div
in
shl
into
cmp
out
clc
repnz
cmp
jmp
sub
cld
fsqrt
in
hlt
mov
cmp
int3
lock
stc
shl
aas
xlat
sti
shl
ffree
test
cli
fsubr
jmp
nop
and
lock
jbe
add
inc
hlt
addl
jmp
fcomp
fistps
je
jbe
jle
add
fcmove
sti
cmp
cmp
jecxz
test
enter
cld
mov
into
divl
lret
lret
fidivrs
lret
jmp
ret
test
ljmp
hlt
aaa
xbegin
cmp
cli
clc
sar
test
and
stc
out
loopne
sarb
out
lret
in
fcomi
div
cmc
clc
cmp
enter
or
cld
fdivr
loope
repz
xor
xor
in
filds
idiv
loope
mul
jecxz
addb
adcl
leave
out
ds
ljmp
out
ret
dec
jecxz
fdiv
xchg
and
int
div
lret
testl
testb
lock
out
int3
out
sti
in
fistpll
ds
mul
loopne
loope
aam
fcomi
loope
loope
mov
ljmp
ss
fnstcw
lock
movl
test
lret
lret
sti
xor
cmp
ret
cld
test
loope
loop
loopne
shr
out
xchg
xchg
rol
adc
aad
fcmovbe
fsubrp
in
loope
jmp
loop
repnz
rcr
cmp
xor
aad
into
out
ds
aam
test
xchg
icebp
icebp
loop
xor
out
out
enter
xlat
loop
in
or
sar
in
mov
fiaddl
out
in
in
stc
jmp
iret
lret
aas
shl
test
out
mov
or
in
mul
aam
cmp
std
xor
sar
dec
fadd
out
cmpl
ljmp
rorb
rol
xor
ljmp
fidivrs
loope
repnz
mov
loope
icebp
adc
orb
out
cmp
std
leave
cmp
loop
rorb
lret
roll
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
subl
jle
adc
jle
mov
lret
cmp
rcr
call
or
stc
rcr
cmc
cmp
shl
mov
jmp
xchg
jmp
call
sub
xor
aas
xor
cmp
aad
xlat
ret
les
aam
ljmp
lock
std
ds
fstp
rol
xlat
fdivp
sti
in
ret
lds
adcb
xor
repnz
icebp
fxch
into
xor
rcr
in
loopne
repnz
mov
lret
xor
stc
fstp
shl
jmp
aad
mul
sub
mov
imul
int3
loope
adc
xchg
shl
int
xor
cmp
test
ljmp
test
stc
lock
repnz
hlt
shr
fucomp
fsubp
enter
cmc
jecxz
sti
out
out
orl
cmc
fnstcw
lret
sarl
ftst
leave
addl
ss
int3
jecxz
divb
clc
lret
out
repz
sar
in
xlat
fadds
call
sti
cld
out
fdivr
in
in
cmp
jmp
ljmp
aaa
sar
fmul
leave
out
cli
jmp
rcl
xchg
loopne
mov
fmuls
mov
ljmp
cmp
cmp
fiaddl
jecxz
idiv
movb
in
cmc
mov
out
in
in
divl
ds
into
cmp
aam
xchg
fucomp
xlat
xchg
iret
cld
lret
fucomp
xor
lock
cmp
lret
iret
cmc
fstpt
rcr
cmc
jmp
mov
in
lret
call
cli
ret
rcr
jmp
in
loop
rol
fdivr
test
lds
rolb
ror
cmp
jmp
rcr
hlt
call
les
sbb
fdivrp
loop
in
icebp
icebp
mov
int3
ljmp
neg
fnstcw
jmp
je
adc
jmp
int3
rol
aad
pop
pop
movsb
or
je
imul
jle
rolb
cmc
ret
vpminub
mul
out
fucom
xchg
hlt
int
shrb
rcl
lret
out
sti
fcmove
int
incb
or
mov
std
mov
xor
into
jmp
in
ds
fcomi
flds
cmc
fsub
lret
in
mov
int3
ror
ret
into
fcmovne
rol
loope
movb
jmp
fndisi(8087
xchg
xchg
ret
int
shr
loope
stc
sti
ret
jecxz
mul
ljmp
fmul
in
adc
shll
hlt
jmp
in
cli
fdivrp
xlat
hlt
test
loopne
sbb
out
mov
mov
fbstp
ret
mov
lret
aaa
leave
jmp
icebp
div
out
fildl
lret
in
in
jecxz
call
clc
neg
into
into
fdiv
cmp
jecxz
in
in
fisttps
lret
out
loopne
out
cmc
aaa
cmp
lret
cmp
jmp
xlat
aad
out
in
rcr
xchg
incl
jmp
cmp
cmp
in
ret
int
fiaddl
jecxz
lret
xor
fcmovne
fxch
fnstcw
in
cmp
xor
decl
jecxz
out
enter
sarl
ds
into
hlt
cmc
fdivr
stc
shl
fmuls
test
shrb
cmp
cli
cmp
loopne
lock
icebp
in
or
fmull
iret
xchg
loope
ljmp
aad
into
cmp
rcl
fdivr
roll
in
repnz
int
lds
rcl
call
jecxz
fucomp
in
jecxz
jecxz
shl
aam
clc
enter
repz
cld
les
lret
out
hlt
out
lock
ss
loope
div
addl
ret
mov
or
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
cs
push
jle
adc
jle
fsubrp
aam
fidivl
clc
jmp
cmpb
shl
out
cmp
ret
int3
in
cmc
shl
divl
aam
cmp
fxam
out
sbb
mul
jmp
cld
leave
ljmp
ss
aam
sti
std
int3
loopne
and
stc
xchg
in
kmovd
mov
ss
stc
ror
jecxz
in
cmp
xchg
std
aam
clc
jmp
icebp
mov
xchg
xchg
aam
jmp
std
cmc
lret
fcmovb
test
sti
cmp
fsubr
testb
loope
shll
cmp
fcmovbe
shr
leave
ds
shr
int
icebp
loope
mov
ds
fcmovne
in
jmp
out
or
loope
div
icebp
ljmp
fucom
sbb
fdivrs
xchg
fisttpll
in
aad
ss
cmp
cmp
shl
hlt
hlt
lock
xchg
lret
sbb
fsubp
in
roll
icebp
iret
ffree
sti
imul
cli
rcr
cmp
stc
incb
mov
movl
jecxz
fidivl
rcr
cmp
adc
cld
ret
into
lret
lret
jmp
aaa
out
shr
in
cld
sar
shll
stc
fcmovnu
fistpll
cmp
adc
sti
xchg
test
out
jmp
int3
ss
ds
hlt
out
in
hlt
cmp
loop
out
sar
ds
fcmove
mov
mov
repnz
lret
in
xor
jecxz
in
fst
cmp
cmp
xlat
loope
in
in
in
lret
repnz
shl
enter
hlt
ss
loopne
sar
test
cmp
ds
out
popl
or
int
stc
in
xlat
out
std
aad
hlt
sarl
sbb
xchg
out
xchg
fdivr
into
into
out
repnz
jecxz
in
out
fdivr
repnz
cmc
mov
clc
ljmp
aam
aam
xor
div
xlat
into
neg
int
cmp
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
jnp
and
psubsw
adc
jle
jmp
iret
ret
jmp
shl
lret
xor
hlt
cmp
cmp
incl
ret
loop
lret
lret
in
enter
int3
orb
xor
loopne
repz
test
cmp
loopne
ljmp
in
xchg
aad
lret
cmp
das
repnz
lret
jecxz
loop
fdivrp
mov
rcr
in
test
out
loopne
test
shl
ret
int
lock
cld
ss
icebp
ret
rcl
hlt
lret
fcmove
in
leave
xor
int
leave
shl
jmp
stc
ljmp
cli
and
loopne
loop
stc
addb
mov
iret
fsub
stc
sti
cmp
out
lock
add
fsubp
cli
neg
mov
mov
in
jecxz
in
sar
cmp
into
loope
in
cmp
out
cld
in
sub
lock
xchg
shr
sub
repz
iret
out
jmp
in
loopne
ret
cld
loop
enter
mov
jmp
out
ljmp
jecxz
fmull
fcomp
enter
fcomip
in
clc
xlat
hlt
stc
xor
cld
not
in
fadd
sti
xlat
cmp
std
lret
clc
mov
jmp
xchg
or
fsubr
out
cmc
cmc
xlat
stc
fdivr
into
loop
shl
shl
mov
loop
shr
mov
jmp
sar
test
shl
cmpl
test
shl
out
movl
shl
jmp
lock
jmp
clc
into
testb
cmc
in
out
ror
lret
mov
fdivp
out
shl
ljmp
sar
loop
loopne
lock
test
in
xchg
fimull
int
shll
cmp
repnz
aaa
aas
xor
sbb
call
lret
ss
xor
shr
cmp
idiv
aas
fdivrp
fdiv
cli
sub
fcomp
lret
hlt
out
ljmp
or
mov
nop
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
aad
adc
jle
rcl
lret
loopne
fdivrp
ss
out
in
icebp
test
mov
mul
shr
repz
clc
cmp
sti
fucomi
clc
cmp
fidivrl
neg
test
icebp
shl
mov
lret
mov
cmp
sub
aaa
clc
out
cmp
fld1
cmp
cmc
in
into
rcl
aad
add
jecxz
xlat
fld
ljmp
std
std
xlat
in
fld
jmp
inc
out
repnz
xchg
fidivl
cmc
out
aaa
sar
filds
clc
mov
out
lret
out
out
in
xor
ljmp
ljmp
hlt
and
loopne
out
ljmp
aad
out
cmc
clc
jmp
aaa
mul
lret
out
stc
iret
ret
faddp
jecxz
ret
sti
jecxz
lret
fsubr
nop
adcl
cmc
enter
out
adc
clc
fsub
aas
xchg
out
int
fucomip
sub
adc
leave
lds
call
cmp
loopne
loopne
not
ret
ret
in
enter
incl
ljmp
out
lret
ret
flds
enter
ret
out
and
cmp
neg
std
xlat
test
int
call
loop,pt
loopne
fimuls
enter
ret
in
fmul
cmp
loop
cmc
cmpb
aad
mov
xchg
sar
rclb
in
cmp
xor
dec
jecxz
in
xchg
clc
test
cmp
leave
addl
xchg
idivl
rcl
imul
cmp
repnz
and
lret
out
jmp
fsubr
shl
jmp
std
aad
fildl
loop
fiadds
xchg
mov
jecxz
shr
aaa
jecxz
clc
cmc
out
in
repz
aad
hlt
call
mov
mov
stc
addb
shr
call
icebp
testl
test
mov
jmp
aam
aad
fstp
movsb
ficomps
cmc
xor
add
test
ljmp
ret
xor
ss
rcr
jmp
aad
out
cmp
mov
cli
xchg
mov
xchg
mov
std
xchg
loop
imul
out
rcl
cld
in
rcl
shl
cli
aam
lret
cmc
fadd
out
lock
out
out
hlt
cmp
ret
cmp
leave
leave
jmp
sti
std
out
out
in
repz
rcl
and
shl
out
fcomip
test
jecxz
fsubr
nop
xchg
clc
rol
cmp
clc
fsub
fcom
xor
enter
movl
out
int3
out
cld
enter
test
xchg
rorl
movl
into
iret
cli
fdivl
xlat
into
fdivl
fld
icebp
ffreep
repnz
repz
fcmovb
in
xlat
mov
xchg
jmp
xlat
call
sti
cmp
in
fildl
enter
jecxz
sti
xchg
call
out
sarb
enter
iret
in
fcomp
aam
int
fnstcw
fstp
div
sti
in
into
loopne
sar
xor
in
hlt
leave
xor
sti
fmul
test
repnz
aam
mov
inc
leave
fstp
out
repnz
xor
enter
neg
fnstsw
cmp
cmc
repnz
cmp
stc
fucom
dec
xchg
cli
xchg
shr
mul
aaa
fldz
lret
shr
xor
sar
fst
les
xchg
jecxz
xchg
test
repz
leave
cli
lret
xor
iret
cld
icebp
repz
fistpll
test
xchg
std
in
hlt
loopne
xlat
repz
test
ss
cmp
in
out
xchg
jmp
sub
filds
clc
clc
div
in
stc
fmul
xor
faddp
fimuls
mov
sti
xchg
xchg
in
ss
in
xor
cmp
int3
test
rolb
stc
jmp
mov
hlt
jmp
ljmp
mov
jmp
ret
lret
enter
int
cltd
movsb
imul
lret
out
sub
out
jle
adc
jle
aaa
fcmovnb
in
ret
sub
adc
xlat
in
mov
out
shl
jmp
xor
std
out
aad
cli
int3
cmp
lock
cld
fcmovnb
out
loope
leave
in
out
imul
xlat
iret
iret
xlat
cmp
cmp
sar
aad
vcmpps
loop
cld
xchg
rorl
rol
xor
in
lock
fsub
incb
hlt
in
test
int3
loopne
jmp
in
ret
ret
leave
lret
fdiv
fcomp
out
shl
lret
sub
enter
xchg
out
xor
in
sti
cmp
ds
lret
aam
loopne
lock
jmp
out
stc
int3
lret
rorl
in
sti
lock
leave
filds
ds
hlt
fcomip
xlat
dec
out
xchg
xchg
aad
repnz
out
fsub
loopne
or
cli
loopne
hlt
fcmovne
loopne
ljmp
xor
leave
vpminsw
lock
fmul
lock
out
cmp
aas
incl
fmul
call
aaa
fucomi
cmc
aad
fcom
sarb
fcmovnb
roll
fcmove
push
int
jmp
cmc
icebp
into
lret
in
lret
fdivr
test
std
xlat
fldl
fxch
loope
leave
cmc
in
out
sub
out
xchg
ret
mov
lret
in
xchg
jmp
out
into
xor
fldl2t
cmc
out
int3
in
fadd
mov
loop
clc
cli
call
int
jmp
rol
cmp
shl
repz
sar
lock
idivb
in
out
or
mov
test
lret
into
cmp
cmc
cmp
loope
cmc
ljmp
ljmp
cs
out
in
sbb
vcvtpd2dq
xor
in
jmp
test
xor
icebp
fcmovnu
fcom
cmp
hlt
ret
imul
faddl
iret
inc
jmp
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
icebp
sub
xor
hlt
fistpll
fdivrs
out
fnstsw
lds
sti
mov
xchg
lock
lds
sarb
out
xor
rol
in
rol
clc
test
ljmp
into
fsubp
mov
aam
xor
aas
out
repz
aad
shl
not
mov
addl
fadd
xbegin
fdivrl
int
in
lock
mov
test
jecxz
shr
sub
xor
jmp
icebp
int3
into
lock
fcom
out
jecxz
shl
in
fsub
int3
mov
cli
fcomip
xchg
xor
div
aad
std
idiv
stc
std
and
aas
hlt
mov
xor
xchg
enter
loopne
repnz
not
aam
cld
ljmp
idivl
fdivr
cli
enter
mov
mov
mov
lds
cmp
sarb
fadds
in
or
out
icebp
xor
xor
xlat
cmp
cmp
sub
cmp
roll
cli
xlat
in
movb
fdiv
shl
cmp
leave
enter
std
rcl
aaa
test
fcmovnb
sub
cli
xlat
or
out
cmc
lock
aad
in
out
jmp
shl
icebp
adc
leave
cld
sti
mov
loopne
lret
mov
repnz
aam
cmp
leave
lret
xlat
cmp
aam
mov
loope
call
loopne
xlat
ljmp
fcmovu
lret
fld
faddl
leave
out
shl
test
fidivs
in
repz
out
fdivr
enter
fcmovbe
iret
sti
jmp
xchg
dec
in
xchg
orb
test
xor
enter
into
sti
rcr
jecxz
sbb
loope
loop
enter
xchg
xor
das
out
cmp
icebp
int3
fcmove
xor
sbb
aas
xchg
mov
cmp
aam
idiv
xor
aas
roll
movsb
repnz
lcall
sub
add
int3
into
fmul
fsubrl
in
jecxz
pop
xchg
iret
pusha
out
repz
adc
jle
lds
int3
lock
call
xor
stc
xor
lock
in
roll
mov
in
fmul
out
jmp
out
fsubr
shll
fmul
out
cmp
shl
mov
fcmove
enter
jmp
into
enter
clc
hlt
aaa
out
out
loop
icebp
rolb
in
mov
out
xchg
aam
lock
hlt
clc
jmp
cmp
xor
rcl
jmp
repz
decl
shll
ds
loop
sar
jecxz
rorb
loopne
test
mov
push
divb
repnz
out
xlat
jecxz
cmc
and
rorb
sti
ljmp
ljmp
shl
sar
xchg
sti
mov
aad
jecxz
icebp
in
xchg
in
loop
ret
in
idivl
cmp
in
xlat
sti
cmpl
in
cli
icebp
not
fcomp
in
ljmp
iret
out
int
out
ret
jecxz
call
jmp
jmp
call
xchg
loope
shl
sti
aad
cmp
fdivr
xor
neg
ret
loop
filds
xor
xor
cli
xor
div
cmp
shl
out
adc
test
sti
lret
loope
xchg
repz
lret
icebp
lock
sar
shl
repnz
cmp
jmp
loop
in
orl
lret
call
xor
faddl
cmc
hlt
stc
jmp
nop
lret
f2xm1
shl
in
loop
jmp
ljmp
clc
jmp
ret
mov
xchg
decb
fmul
into
xor
xor
into
in
hlt
cmp
shl
lret
cmc
aas
sar
in
mov
in
loop
std
iret
hlt
shrb
xor
repnz
inc
shr
cmc
loop
shl
jmp
fsubp
int
lret
aam
pop
jmp
ret
ror
aam
mov
repz
add
lret
cmp
out
int3
cmp
fcmove
adc
in
lds
shl
loope
lock
xor
xor
fucomp
cmp
xlat
rcl
aam
fstp
test
out
iret
fcmovu
icebp
mov
cmc
imul
out
idiv
int
cmp
loop
iret
aas
faddp
aam
in
fdivr
rorb
out
xor
ret
jmp
sar
clc
cmp
idiv
shl
cmp
clc
mov
out
lret
cld
shl
xor
cmp
xor
and
in
out
stc
sti
icebp
addb
stc
faddl
jmp
out
repz
int
ljmp
test
cmp
std
jmp
into
mov
fists
out
int3
enter
aas
iret
div
jecxz
filds
fucom
clc
jecxz
xor
test
aad
xor
xor
cmp
cli
fcomip
fucom
cld
aam
clc
and
in
hlt
in
rcl
fstp
cmc
cmp
icebp
in
test
cmp
sar
in
rorb
test
aaa
iret
cmp
in
repz
repnz
cmp
test
enter
cld
std
loopne
jmp
addl
stc
fcmovnu
lret
inc
addb
enter
ror
fmul
xchg
xchg
xchg
loop
leave
cmp
aaa
cli
cmp
cmp
cmp
aas
iret
fnclex
ret
fstp
mov
lret
xchg
cmc
test
das
stc
out
div
cmp
shr
jecxz
clc
lock
div
ljmp
in
cld
aad
enter
out
aaa
sarb
stc
lret
fdivr
repnz
fmull
out
out
mov
repz
rol
shl
stc
lret
ljmp
aas
cmp
fcmovne
mov
lret
in
iret
out
jmp
out
adc
sti
push
jmp
loopne
cs
aam
ror
xor
ret
sti
ret
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
mov
in
in
shl
imul
into
fdivl
fsubrp
ljmp
loope
clc
in
out
fmulp
out
hlt
cmc
call
icebp
les
cmp
int
loop
xlat
aaa
ret
out
shr
mov
mov
out
adcl
cmp
in
std
sarl
fadds
neg
ret
jmp
ret
int3
loopne
mov
xor
lret
aaa
cld
clc
out
aam
cmp
clc
orl
cmp
ror
xor
icebp
hlt
cmpb
icebp
repnz
test
loopne
repnz
ror
in
in
aaa
xor
sar
fistpll
aad
aas
fsubp
fsub
xlat
fsqrt
fxch
iret
in
sub
xor
out
out
cmc
ljmp
shl
repnz
jmp
leave
out
xchg
xor
sti
jmp
fcmove
fnstcw
test
adc
mov
jecxz
cmp
mov
shl
jmp
enter
cmp
stc
call
std
lret
loope
hlt
neg
aad
call
cli
icebp
mov
adc
int
aaa
stc
ss
lret
sarl
fildl
fcmovne
neg
in
out
rolb
in
lret
in
enter
std
fucomp
fdivrp
lock
mov
cli
fmul
cmc
int
loopne
into
xor
shl
stc
aad
adc
ffreep
out
idiv
mov
clc
stc
mov
mov
cld
in
and
into
in
out
fdiv
out
sar
shl
out
sbb
xchg
mov
lret
int3
in
mov
repz
fidivl
xlat
cs
in
iret
incl
loop
out
fucomp
mov
sti
xchg
jmp
xchg
ss
cli
stc
cmc
rcr
fdivr
aad
fsub
xlat
xlat
mov
clc
clc
nop
lret
mov
into
cmc
cmc
hlt
cmp
jmp
aad
clc
out
test
incb
xchg
lds
rol
int
cmp
std
xor
add
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
daa
cmpsl
stc
jle
adc
jle
out
out
lock
repz
xchg
fcmovu
loope
sbb
lret
jmp
cmp
cmp
ror
rcl
cmp
out
ds
enter
xabort
and
repz
call
sti
in
out
xlat
loop
rcr
ret
hlt
loope
enter
mov
in
cmc
aam
xor
xor
cmp
flds
stc
cmp
call
loop
out
std
fcomi
xchg
sbb
in
xor
out
out
icebp
cmpb
test
shl
lret
fcmovb
repnz
in
xchg
fdivrs
xor
lret
fistpll
ljmp
cmp
rcr
aad
into
sub
in
mov
testb
in
repnz
repz
cld
ds
aam
addb
stc
out
call
out
aam
xor
rcr
rolb
aad
fimull
enter
out
shrb
ljmp
cmp
cmp
std
cld
out
loop
mov
call
lret
jmp
fcom
lret
shl
cld
hlt
cmp
xchg
mov
loope
out
loopne
nop
hlt
hlt
enter
stc
not
leave
shl
aas
iret
out
out
aam
aad
fadds
xchg
xchg
loopne
enter
iret
jmp
rol
hlt
in
mov
sbb
iret
xchg
adc
div
bnd
lret
neg
repz
fcomp
repz
in
std
loopne
jmp
mov
jmp
int
imulb
xor
std
lock
ret
cmp
inc
std
ret
jmp
enter
mov
and
out
shr
jmp
shl
hlt
ljmp
loop
testb
fucom
sti
test
std
loopne
in
shr
leave
cmp
cli
cmc
stc
cmp
into
int
cmp
mov
mov
mov
aaa
aad
ljmp
fiaddl
out
stc
fmul
xlat
ror
xchg
mov
mov
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
adcb
sti
jle
adc
jle
lock
out
out
int3
repz
clc
aaa
cmp
ds
les
lret
jmp
lret
xchg
mov
call
ss
shll
aad
repz
repz
call
fcmovne
xor
mov
ret
xor
repnz
cmp
out
repz
ljmp
jecxz
aad
xlat
xor
aad
call
cmp
ds
jmp
out
loope
test
lret
cmc
cmp
rol
sti
fcom
div
call
ret
rcl
mov
aad
test
mov
imul
int
repnz
iret
xlat
int
cmp
hlt
stc
fadd
fadds
in
out
mov
mov
shl
lret
sar
call
lock
shr
cmp
ret
enter
lret
repnz
mov
xlat
jecxz
cmp
xabort
loopne
rcr
test
addb
in
iret
mov
test
fcmovbe
sub
ljmp
adc
mov
test
lea
loopne
aad
les
aaa
cmc
call
xlat
in
les
hlt
xchg
orl
sub
ror
hlt
ljmp
neg
addb
iret
into
out
loopne
out
out
call
cli
shl
fdivrp
cmp
or
rcr
shl
ret
int
out
in
mov
iret
enter
aam
cmp
or
jmp
mov
in
fdivr
fcmovnu
loopne
mov
hlt
fdivs
jecxz
repz
cmp
cmp
roll
mov
fildl
out
enter
aad
clc
fdivr
sarl
sbb
aam
inc
call
in
fucomi
in
loope
addb
ret
in
jmp
in
cmc
shl
incb
in
loope
mov
cmc
int3
repz
test
stc
fidivrl
xlat
loope
clc
mov
mov
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
loop
leave
rcr
test
sub
xor
cli
das
cmp
aaa
fiadds
xlat
sti
ljmp
int3
jmp
shr
cli
cmp
cli
icebp
call
inc
out
ret
mov
ret
out
xchg
mov
xlat
xor
iret
idiv
icebp
fdivr
stc
xor
out
aam
fdivr
fisttpll
iret
mov
xor
not
clc
sarb
cli
sar
std
xor
aad
in
jmp
test
enter
iret
xor
shl
out
cmp
cmp
and
out
sub
fld
xchg
rolb
stc
imul
cmp
aam
xor
cmpb
icebp
loope
aam
in
leave
loope
mov
loop
or
xchg
icebp
in
jmp
fcmovnbe
out
push
clc
adc
loopne
out
iret
in
xchg
test
rcr
repnz
in
cmc
cmp
icebp
cmp
int
in
in
mov
mov
iret
jecxz
lock
cmp
iret
xchg
enter
ds
jecxz
out
in
jmp
xor
xor
clc
cmp
clc
jecxz,pt
test
testl
neg
into
aad
lret
in
into
out
icebp
fdivr
out
xlat
test
fcoml
roll
repnz
fstp
aam
rolb
jecxz
jecxz
xor
clc
jmp
loope
shl
shl
loope
ss
jmp
cli
inc
call
cmp
std
mov
lret
loope
in
fucomi
fbstp
ljmp
fdivrl
aas
out
aam
int3
lret
mov
loopne
out
out
in
rcr
int
into
fiadds
loope
loopne
lret
faddl
int
jmp
lock
int3
out
in
in
cmp
xchg
shl
loope
cmc
sbb
icebp
in
rorl
xor
test
inc
or
push
or
sub
add
xlat
into
rcl
aad
fadd
mov
adc
cmpsl
ja
pusha
jle
adc
jle
leave
cmp
cmp
aad
sar
in
cmp
mov
int3
sti
rorl
call
int3
fcmovnbe
sti
fistpll
sti
jecxz
ljmp
lock
xchg
rorb
sti
hlt
fcmovnu
int3
jmp
in
ds
in
cmc
enter
mov
enter
loop
hlt
xor
fst
fcmovb
cmc
in
rcl
enter
lret
lock
int3
out
int3
aad
jmp
int3
jmp
loopne
sti
aam
fnsetpm(287
les
fnstsw
xchg
jmp
loope
ss
cmp
fmulp
enter
int
sti
shr
mov
hlt
loopne
shl
vphsubwd
ret
shl
xlat
fcom
leave
icebp
into
out
fcmovnb
sar
mov
adc
sbb
cli
clc
cli
shl
out
jecxz
ss
cmp
aaa
iret
fnstcw
cmc
loopne
idiv
call
fcmovb
std
std
mov
in
int
loope
enter
ljmp
or
and
xlat
loope
jmp
ror
out
shr
enter
out
leave
cmp
cmp
filds
std
cmc
loope
mov
shr
xchg
jmp
into
leave
shl
xor
clc
cmpb
fdiv
push
rcr
and
test
lret
ret
mov
jmp
xchg
jecxz
ret
into
stc
rcl
call
test
ret
xchg
movl
int
mov
in
xor
lret
into
cmp
ror
lock
aam
loopne
fneni(8087
int3
loop
leave
xor
aam
cmp
iret
aas
jmp
shl
test
leave
clc
sti
fdiv
out
jmp
sub
aad
icebp
cmp
repnz
ror
iret
stc
out
add
out
cmc
in
loopne
sti
fmull
iret
jecxz
call
shl
aas
add
out
stc
mov
fdivrp
mov
loope
int3
lock
leave
call
aad
lock
rolb
cmp
jmp
ror
enter
lret
add
cmovs
jle
adc
jle
roll
ffreep
jecxz
int
fdiv
lret
sti
fdiv
and
repz
loop
sti
sti
enter
mov
in
xchg
xor
cmc
jecxz
ljmp
ret
test
repz
xor
or
shr
xchg
faddl
jmp
cmp
fistpll
cmp
stc
clc
hlt
shl
shl
stc
out
mov
imul
clc
xor
into
div
hlt
cmp
xlat
cli
ds
ds
ror
cld
decb
out
ljmp
fsqrt
lret
cmp
out
stc
sar
fneni(8087
leave
xchg
cmc
fdivr
cli
in
out
iret
lret
xchg
xchg
icebp
ret
out
in
leave
fcmovnu
inc
cmp
xor
fst
out
loop
jecxz
std
repnz
hlt
leave
ss
aas
jmp
fldl
cmc
fcomp
loope
loopne
sti
cli
mov
repz
out
lret
out
fcompp
cmp
repnz
icebp
xchg
ret
rol
jmp
lret
xchg
popl
xor
aad
lret
int3
out
in
cmc
aad
mov
cmp
mov
lock
jecxz
int
jmp
cmp
ffreep
sti
mov
mov
call
faddl
fcmove
in
cmp
fucom
xchg
roll
nop
loop
out
dec
jmp
jecxz
in
lret
enter
ror
test
loopne
test
rcll
into
out
idivl
out
cmp
clc
jecxz
xchg
out
leave
jmp
cmc
shl
fcomp
shlb
aaa
cmp
cmc
in
cmp
cmc
ffreep
ret
jecxz
int3
flds
mov
inc
rcl
into
out
clc
hlt
xor
loopne
fdiv
repnz
shl
aam
fdivr
fdivr
xchg
in
hlt
test
lock
iret
ds
shl
loope
loope
orl
xchg
icebp
rorb
repnz
jne
mov
mov
movsbl
xor
add
jmp
int3
enter
into
push
mov
cmp
test
adc
jle
lret
xor
rcr
test
fimull
lret
lret
repnz
ljmp
ror
cmp
aad
jmp
fiaddl
xchg
in
xlat
shll
fnstsw
cmp
repz
std
cld
call
jmp
xchg
out
ljmp
cld
std
out
fstp
xlat
xchg
rol
fmull
call
jmp
rol
in
std
fdivr
cld
pushl
cmp
xchg
xchg
mov
nop
out
das
out
int3
aam
lret
bnd
idivl
out
stc
loop
mov
xchg
xchg
xchg
loop
not
not
clc
out
int3
loop
cli
aas
shl
ret
neg
fdivp
mov
in
in
xchg
xchg
cmc
jmp
xor
leave
into
icebp
cmp
icebp
fxch
and
cmp
ret
sti
jmp
ror
testb
iret
in
int3
icebp
icebp
ds
ret
test
leave
iret
fisttpl
xlat
out
shrb
stc
xor
shr
loop
ret
fst
loope
loopne
addl
aaa
iret
in
sub
sar
repz
cmp
ljmp
enter
loop
stc
loop
rcl
ds
ret
test
in
clc
rolb
jmp
into
cld
lret
iret
das
call
iret
neg
cmp
rol
jmp
stc
loop
loopne
leave
out
in
xchg
out
xor
repz
fcmovne
jmp
fsubp
loopne
shl
jmp
mov
xor
ss
xor
icebp
cmp
int
loop
out
xchg
stc
loop
icebp
test
cmc
das
ss
out
cmp
loop
fdivl
int
shl
mov
fisttpll
and
lea
cmp
ror
rcl
cmp
sub
aas
test
loope
out
nop
nop
loopne
rorb
test
push
add
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
mov
test
aaa
lret
cmp
enter
cmp
fcmovb
lret
mov
mov
cli
loope
testb
in
iret
cmp
lock
repz
movl
xchg
iret
ret
xor
sar
enter
rcl
cmp
in
mov
in
icebp
mov
lret
ss
xor
in
xor
iret
fucomip
icebp
ds
repnz
jmp
in
mov
int3
int
xchg
iret
ss
aad
ror
jmp
repnz
cmp
fdiv
rcr
fisttps
enter
sub
jmp
out
xor
fdivr
imul
aas
in
cmp
addb
out
or
std
cmp
ror
iret
ret
sti
idivb
cmp
aaa
idiv
mul
not
cmp
out
in
mov
ret
sub
aaa
jmp
loopne
in
cmp
sar
call
call
sub
xchg
xchg
in
cmp
fdivr
jmp
not
idivl
aad
roll
cmp
loop
fsub
iret
mov
subb
xor
cs
in
loope
ror
aad
in
lds
out
ljmp
out
mov
repz
loop
in
cmp
rcl
iret
cmp
stc
mov
leave
xchg
in
fdiv
lea
xor
fcmovbe
cs
ljmp
shl
cmc
jmp
xchg
lea
out
leave
aam
das
rcr
leave
out
xlat
in
out
out
mov
repnz
int3
stc
and
ljmp
out
jecxz
cld
stc
repz
push
shl
cld
adc
sub
fisttps
into
jmp
fstp
lock
ljmp
clc
jecxz
lret
cmp
mov
repz
test
stc
iret
cmp
xor
xlat
cmc
sti
inc
fadds
out
mov
lret
jecxz
shlb
jmp
xlat
fprem
cmpb
jecxz
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
add
test
sub
jle
adc
jle
fcom
icebp
loope
call
lock
call
ffreep
repnz
aam
in
call
cld
cmpb
in
fdivrp
leave
in
in
loopne
fucomip
out
lret
rcl
fmulp
fsub
int3
rcl
cmp
xchg
xrelease
or
sti
fisttpll
ror
sarb
cmp
jmp
shl
out
cmp
test
in
out
ret
filds
into
cmp
out
sarb
cmp
out
test
fdiv
repnz
hlt
in
les
sar
xchg
xlat
call
sarb
clc
loopne
testb
aam
out
ljmp
iret
rcr
repz
aam
aad
lock
rcr
fmuls
mov
int3
out
test
icebp
leave
xor
fidivl
loopne
loope
shl
sti
aas
stc
fiaddl
mov
in
cmc
das
cmp
not
lock
fiadds
std
in
neg
fucom
sti
mov
fstl
xlat
cmc
call
lock
idivb
repnz
decl
fucomp
lock
in
stc
out
ljmp
int
fstp
repz
ret
jmp
xchg
out
lock
mov
xchg
in
loop
ret
aam
aaa
fmulp
icebp
into
sar
in
repnz
std
enter
fmul
rorl
test
cmc
aad
clc
aam
cmp
leave
rcl
repz
cld
cli
lock
rorl
ss
xor
shr
shl
repnz
int3
ror
aaa
enter
mov
test
adcb
ret
div
xlat
xor
xlat
shl
iret
cmp
loopne
aad
into
out
ret
mov
loopne
ljmp
clc
cmp
rcr
cmp
stc
fcmovnbe
addb
hlt
jecxz
cld
clc
out
sar
test
out
iret
cmp
cmp
aas
aam
into
ds
ds
cli
ffreep
in
in
out
stc
in
out
sub
inc
lock
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
sti
fs
aas
mov
adc
jle
xor
lret
cmc
loope
incl
mov
les
sub
out
out
cmc
enter
loope
fdecstp
ret
fld
leave
lds
loopne
nop
loop
cmp
ljmp
ds
cli
jmp
loopne
rcr
ficoms
int
cmp
leave
iret
testb
repnz
idiv
in
dec
xchg
sar
or
int
repnz
fcmovbe
fsubr
cmp
in
in
idiv
xlat
enter
nop
rolb
in
in
enter
cld
ds
incb
sub
lock
sti
test
icebp
ret
out
iret
aaa
cmp
icebp
lret
repz
fdivrs
ret
in
in
loop
loop
vprotq
rcr
int
in
cld
aaa
cmp
aaa
stc
icebp
jmp
fsubr
leave
fsubrp
int
jmp
das
lock
shl
addb
in
xchg
clc
sub
lret
and
cmc
leave
repnz
stc
fcomip
loope
xlat
xchg
ror
int
in
mov
ljmp
sti
xor
stc
stc
jmp
rcr
clc
loopne
clc
cmc
aam
clc
sub
out
mov
xchg
nop
nop
xchg
loopne
out
in
out
fcomi
lret
cmc
std
call
test
cmc
idivb
inc
in
loopne
xchg
nop
xchg
jmp
in
fcmovb
enter
ljmp
cmp
xlat
loopne
in
mov
stc
int
iret
fdiv
into
ret
ftst
cmp
out
ds
aas
repz
out
iret
fdecstp
test
aam
sti
clc
mov
adcl
hlt
sti
cld
lock
fadds
aas
lret
loopne
mov
mov
ret
out
xor
aam
clc
lret
xlat
loop
cld
out
out
rcr
fimull
in
xchg
xlat
ljmp
lret
xor
in
shl
jecxz
aas
aas
lds
or
pop
out
decl
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
add
jp
mov
mov
fucomp
jmp
in
loopne
shl
xor
icebp
call
ror
out
sti
loopne
mov
lret
stc
mov
xchg
jmp
icebp
ljmp
aam
aam
aam
xchg
xor
test
lock
rol
in
aaa
neg
aam
stc
fucomp
cmc
ss
clc
les
int
or
in
int3
enter
xor
int3
call
lock
fldl
dec
mov
and
shl
sub
lret
jecxz
cld
lret
fdiv
sar
out
in
fsubr
filds
xchg
fcomp
cmc
sti
aam
aas
jecxz
cmpl
hlt
mov
lret
loop
out
ss
shr
int
in
rolb
in
mov
hlt
sbb
in
std
mov
int
loope
jecxz
jmp
leave
cmp
ror
out
jmp
fdivr
cld
lret
fmull
rcl
imul
shl
hlt
cld
jmp
out
fiaddl
xchg
out
out
loop
div
cmp
out
lock
sti
xlat
out
repnz
jecxz
loope
mov
fcomp
ljmp
cmc
into
aam
int
xor
out
rcr
cmp
out
aas
testb
fldl
ss
shll
lret
iret
repnz
in
aaa
stc
repnz
mul
loop
leave
int3
fdiv
rol
xchg
loop
rcl
clc
ror
in
jmp
fstpt
lock
repnz
ret
out
in
std
mov
xor
repnz
ds
aas
not
iret
shl
loopne
jmp
mov
mov
lea
cli
int3
aad
fdivrs
rcr
loope
rcr
fdiv
aam
clc
fcomp
stc
out
cli
sub
out
loopne
imul
cmp
aaa
fdivrp
rcl
rol
cmp
aad
addb
jecxz
repz
call
jecxz
fxam
call
cmp
rol
repz
fsubrp
sti
ret
loop
cli
fisttpll
jmp
cmp
fnstsw
bnd
leave
ljmp
out
mov
lock
out
cmp
out
cmc
xor
rcl
xlat
loope
fxch
xchg
xchg
loope
xchg
aad
jmp
cli
jecxz
das
fcomi
incb
into
cld
aad
xlat
loopne
or
fisttpll
not
iret
in
in
stc
rcr
xor
out
xlat
aas
iret
ret
cmc
in
int
leave
jmp
enter
ss
fistpll
out
repz
in
sbb
cmc
movl
add
jmp
rol
rcr
fld
pop
into
shll
adc
jle
out
out
test
xchg
fyl2x
xchg
das
fucomi
into
cmp
ss
icebp
or
cld
aam
shl
aas
loopne
out
out
hlt
aaa
das
sub
hlt
in
aas
faddl
xchg
jmp
xchg
xchg
test
in
aaa
shr
in
iret
fnstsw
clc
lret
std
ds
std
repnz
leave
fcmovnu
mov
leave
std
call
shl
clc
into
cmc
call
cli
movb
enter
incl
in
not
int3
repnz
std
loop
ret
cmp
mov
in
jmp
roll
xor
icebp
shr
repz
roll
addl
in
xor
cmc
cld
repnz
xor
jmp
into
out
in
ljmp
leave
call
aad
cmp
in
call
call
rolb
aad
loope
xchg
or
cmc
aam
out
ss
loopne
rcr
in
faddp
loope
fsub
ljmp
aam
lock
cmp
rcl
cli
cmp
loope
aad
test
test
into
fimuls
int
fucomp
clc
aas
hlt
cli
ss
cmc
mov
cld
mov
cmp
lret
push
fstl
call
in
aad
loopne
aam
in
enter
iret
fmull
shll
xor
out
xor
int3
ret
ret
lret
out
into
lea
sub
aad
fdiv
rcr
in
cmp
rolb
ds
faddl
out
shr
xor
in
cli
cmp
cli
rol
loopne
cmc
clc
ljmp
in
hlt
into
xor
xor
test
lock
fstp
cmp
incb
fsubp
imul
mov
in
test
lret
out
stc
adc
inc
repnz
cld
fdivr
int3
mov
hlt
hlt
mov
in
fcmovb
cmc
cmp
fdiv
fdivp
out
neg
les
xlat
out
fcmovnbe
int
int3
test
mov
repz
fdivrs
neg
cld
fyl2x
out
sar
stc
fsubr
repz
loope
mov
cld
xchg
out
aad
fsqrt
cmp
rcr
xor
loope
test
decl
loope
in
jmp
out
repnz
call
stc
aam
std
addl
in
rolb
das
fcmovu
shl
cmp
in
aad
ds
aad
inc
cld
daa
test
inc
add
add
add
rolb
add
add
add
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
decl
pop
jl
xchg
jle
mov
fcmovb
rol
xor
out
loope
xchg
aam
repz
call
cmp
cmc
mov
or
repnz
aaa
ret
into
call
fistpll
lret
aas
faddp
flds
clc
cmp
xchg
in
cs
lret
cmp
ret
rol
sti
out
clc
int
into
in
out
sub
shl
iret
cmp
out
adc
aam
xchg
enter
in
addb
xor
in
hlt
into
cmp
hlt
cmp
mov
loope
std
sti
mov
shl
shll
xlat
aaa
les
int3
lret
fnstsw
loope
aam
mov
test
faddl
out
aad
das
stc
cmc
int3
fdivr
lret
cli
icebp
stc
in
into
mov
or
xchg
xchg
in
ss
call
fcmovnbe
out
loop
loop
cli
ffree
mov
rorl
cli
loop
stc
out
stc
aas
loopne
in
roll
in
test
xor
clc
ret
sti
out
fcmovnu
sti
lret
cmpl
test
clc
test
mov
into
xchg
enter
xor
fst
into
lock
and
rcl
std
sti
into
in
sub
test
lret
fcmovne
rolb
testl
orl
fmul
cs
int
xchg
rcl
test
clc
mul
call
int3
xchg
ss
cmp
aam
cli
cmp
aas
xlat
cmp
int3
aad
fiaddl
enter
repz
cld
in
xor
cmc
out
int3
cld
fcmove
lret
addl
fxch
xchg
jmp
hlt
icebp
out
rol
sti
out
clc
aam
cmp
cld
aad
xlat
fiadds
std
mov
shll
sub
loopne
fsub
icebp
icebp
div
cmc
ret
ljmp
int3
loopne
aad
shl
aad
sar
sar
out
std
orb
into
jecxz
test
xor
into
cmp
icebp
sarb
addb
lret
mov
stc
iret
in
rol
lret
sti
rcl
jmp
aas
jmp
into
out
int3
mov
cmp
out
das
repz
rcl
cmp
int3
add
loope
std
test
jmp
jmp
out
int
out
aaa
leave
cmp
int
cmp
cld
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
and
inc
cli
aam
into
xchg
nop
test
xor
into
clc
shl
cmp
lret
leave
xlat
add
in
testl
cmp
out
sarl
int3
fnstcw
hlt
loop
out
jecxz
lret
sti
in
lock
out
sub
call
out
aad
cmp
into
out
sti
div
fdivp
fadds
aad
hlt
clc
out
shlb
sarb
cmp
stc
stc
repnz
cmp
mov
hlt
lret
loope
ljmp
mov
in
jecxz
cmc
in
hlt
shl
out
xor
shl
in
in
fsubr
fucomip
shl
int3
mov
aad
in
lret
fxch
fnstenv
cmp
mov
cli
leave
mov
icebp
fcomi
jmp
sub
idivb
sarb
roll
cmc
repz
leave
jmp
xchg
iret
sar
xchg
loope
xor
divl
in
out
int
in
fucomi
aad
neg
leave
call
xchg
repnz
xchg
xor
lret
xor
aad
stc
fldz
out
stc
cli
loope
loopne
repnz
loop
in
nop
cli
sub
in
aaa
in
enter
in
xor
fdivrl
aam
fcmovnu
ret
in
lock
out
ljmp
ljmp
icebp
shl
in
mov
xchg
std
lea
xor
in
lret
test
repnz
testb
std
ret
loop
in
test
xor
clc
rol
enter
cmc
neg
fcomip
cli
lock
in
in
cli
int3
int
xchg
fmull
icebp
cmc
aam
hlt
fsubrp
loopne
repnz
aam
call
lret
cld
lret
jmp
test
xor
jmp
in
fdivrl
lock
test
out
cmc
fdivp
and
loope
nop
xchg
std
incl
repz
xor
cmp
ror
aam
xlat
test
xlat
aam
loopne
cli
fistl
xchg
das
aaa
iret
into
fcmovu
div
loope
cld
ret
ljmp
mov
ljmp
sar
into
rcl
aaa
stc
loop
rcl
test
loope
ftst
inc
in
into
call
and
clc
loope
cmc
in
out
div
sarb
fxtract
fcmovnbe
aas
call
cmc
stc
fdiv
jecxz
cmc
int3
aam
icebp
les
idiv
filds
xlat
incb
in
mov
test
lock
enter
xor
out
lret
shl
jecxz
out
repz
test
loopne
jmp
jmp
in
lret
cmp
idiv
ljmp
pop
jmp
rcl
aad
aad
shll
jb
cmc
lret
jle
add
cmc
fistpll
lock
fiadds
lret
aad
lret
aaa
cmp
leave
cmc
cmp
cmp
testl
cld
hlt
out
xchg
sub
leave
xlat
cmc
fmul
fdivrl
xor
xchg
test
in
xchg
loop
enter
out
ror
cmp
cmpb
std
fcmovne
out
fsts
xchg
jmp
in
jmp
sti
ror
iret
repnz
call
lret
jmp
int3
test
loope
aaa
xor
cli
fcmovbe
cld
cli
aam
shl
xchg
testb
out
lea
sti
cmp
icebp
sub
inc
test
fucomp
fildll
rcl
fistpll
not
loopne
rol
repnz
aam
jmp
loop
mov
mov
fidivs
lock
cld
clc
leave
aad
fnsetpm(287
loopne
loop
testb
lea
out
clc
shl
std
fcom
loopne
rcl
sbb
ds
cmc
mov
mov
fildl
loop
ret
aaa
icebp
stc
call
sar
sar
clc
cmc
enter
out
mov
call
out
jmp
stc
fcomi
out
and
aam
rolb
test
xor
mov
fsub
lock
in
out
cmp
repnz
rcr
test
cmpb
icebp
into
or
nop
in
xor
xor
aad
into
test
leave
xchg
jmp
mov
xor
jmp
not
fdivp
int3
cld
cmp
loop
out
sti
jecxz
cld
loopne
fcmovnbe
int
into
xchg
int
xabort
out
jmp
repz
aas
ret
in
fucom
cld
aam
aad
xlat
jmp
xchg
aad
xor
jecxz
hlt
sti
hlt
cmp
cli
cld
mov
cli
hlt
test
loope
cld
xchg
loopne
lret
aad
out
shr
shr
aam
add
sti
adc
call
iret
call
cmc
xor
hlt
call
cmp
lret
cmp
cld
loopne
fmulp
loop
in
mov
ror
test
and
xlat
repz
aam
enter
fcmovnbe
cmp
aam
jecxz
lret
out
int3
loop
rclb
aaa
call
cmp
ret
aam
in
fucomi
loopne
les
cld
test
test
cli
int
not
fdivr
out
push
in
rcr
fucom
call
in
iret
ss
in
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
cmp
jecxz
or
jle
std
test
loopne
in
aad
out
jecxz
rorl
das
rcl
sti
into
int3
xor
and
fdivr
fadds
fucomp
rcl
in
xor
cmp
lret
in
repnz
stc
call
aas
sarl
ds
xchg
repz
out
ret
sar
xchg
rcl
sub
in
xlat
out
cmp
jmp
lock
cli
loop
cmp
mov
mov
repnz
lret
loop
shlb
aaa
shl
std
sti
iret
int
xor
fdivrs
adc
fsubr
sbb
lock
in
call
xor
lret
out
cld
aaa
xlat
lock
aad
loope
cmp
std
fmuls
int3
xchg
aam
ljmp
fcomp
in
and
ret
ret
int
cld
iret
jmp
movb
out
out
fxch
ss
rcl
ret
cli
ret
xchg
enter
cld
in
jmp
lret
out
lret
icebp
rcl
fcmovnu
shl
icebp
fxtract
mov
call
cld
in
mov
out
aam
cmc
aaa
out
cli
int3
cmp
iret
loop
test
loope
test
xlat
out
rorb
stc
stc
cmp
aam
jecxz
out
call
int
in
call
out
aam
xor
ss
out
cmp
imul
cmp
mov
jmp
fcmovnu
out
xchg
fisttpll
icebp
xor
rcl
ljmp
in
movl
in
hlt
in
in
imul
into
cmp
xor
cmp
in
mov
mov
in
out
cmp
idivb
aad
in
aad
xchg
std
stc
decb
shl
xchg
out
hlt
int3
cld
jmp
cmp
sar
clc
ret
mul
loop
call
hlt
lret
loope
ret
out
ror
enter
jecxz
ror
fcmovnbe
cld
loop
call
in
loopne
aam
jmp
hlt
cmp
test
fdiv
shl
ret
cmc
into
into
mov
mov
xchg
test
mul
int3
lock
lret
ffreep
lock
addb
loopne
nop
std
int
int3
rcr
in
fucomip
xor
cmp
les
loop
rcr
in
call
aam
shr
clc
leave
jmp
aad
call
loope
cmp
fst
xchg
jmp
loope
test
repz
std
aas
out
int3
cmp
loope
out
fsubp
enter
xchg
repnz
jecxz
jecxz
int
repnz
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
jge
inc
inc
pushf
jle
mov
loopne
cmp
jmp
jmp
mov
rcl
out
int
loopne
cmp
repnz
leave
mov
and
mov
lock
enter
sti
in
ljmp
call
addl
jmp
lret
test
xorl
das
aad
testl
jmp
cmc
rcl
out
loope
dec
in
fidivl
aad
icebp
in
std
std
xor
in
xlat
aas
fcomi
leave
sbb
and
testb
cmp
fstp
repnz
rolb
loope
in
loop
nop
mov
mov
imul
int
cmp
clc
fdivrl
fldl
hlt
fisttpl
std
jmp
enter
aad
stc
loope
cmp
rol
sti
sbb
int3
testb
out
xchg
iret
jecxz
out
fstp
fnstsw
enter
test
lock
hlt
fimuls
loope
enter
in
aaa
xlat
f2xm1
divl
out
aad
aaa
clc
aam
out
std
loop
in
lea
xchg
sub
repz
jmp
jmp
iret
int3
cmp
out
leave
mov
sti
mov
enter
ljmp
xor
icebp
sub
out
stc
faddp
in
fcomi
lock
int
rolb
das
xor
enter
fidivrl
or
test
fcmovbe
loop
jmp
fiadds
xchg
call
stc
repnz
out
cmp
hlt
rcr
out
hlt
loope
cmc
mov
ficoml
xor
out
ret
repnz
fdivp
cld
clc
out
mov
mov
lret
loopne
loop
lea
jmp
clc
xor
cmp
cmp
mov
fxch
nop
out
lret
cli
mov
aam
cmc
stc
into
cmp
rcr
iret
icebp
clc
std
icebp
and
test
imul
lret
loope
loope
icebp
jmp
call
aad
aas
loopne
loope
push
aad
loopne
vcvtdq2pd
fisttps
lock
xor
out
shl
cld
addb
cld
xchg
xchg
and
hlt
out
into
icebp
lret
lret
int3
aad
loop
leave
xchg
lret
test
xchg
out
out
aam
out
icebp
std
fdivrp
neg
jmp
hlt
fucom
fadds
test
in
icebp
xor
das
int3
jmp
iret
cmc
cmp
sarb
iret
repnz
loop
jmp
sbb
fisttpll
fidivl
xor
mov
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
xor
jle
add
lock
neg
fidivrs
testl
out
mov
fucomp
adcl
fsubrp
cmp
in
idivl
loope
xlat
ret
jmp
jecxz
jmp
jmp
xor
cmp
cmp
neg
jmp
cmc
div
xchg
rorl
into
or
aam
ljmp
leave
inc
cmpb
not
aad
xlat
enter
lea
test
out
ret
idivb
cli
sub
iret
xlat
div
sti
test
jmp
mov
int3
orl
in
aad
vpaddq
roll
test
jecxz
clc
test
clc
cmp
xor
in
cmp
cmp
not
jmp
fcom
inc
cld
aam
fiaddl
mov
shl
in
aaa
cmp
sbb
shl
repnz
mov
fucomip
ljmp
ror
divb
cmp
shl
cld
cmc
loope
out
mov
lret
lock
ret
xor
cmp
call
out
clc
std
fdivr
incl
mov
in
xlat
xlat
repnz
cmp
loop
sar
shr
aas
repnz
aam
out
mov
enter
iret
icebp
call
fnstsw
lret
cmp
into
roll
test
lock
lret
loop
mov
loope
cmp
aad
frndint
lret
shlb
ds
sti
leave
lock
iret
ljmp
ss
repnz
aam
neg
sar
loop
xchg
int
sbb
fisttpll
out
in
icebp
out
iret
clc
leave
repnz
fucomi
and
fdiv
jmp
xchg
lret
fcmovbe
aad
clc
sar
or
fcmovu
idiv
ret
jecxz
int3
lret
mov
ss
xor
call
ret
neg
hlt
loopne
fildl
rorl
into
repz
cmp
iret
icebp
aas
out
ret
loope
in
fcmovnu
lock
fcmovne
xchg
xor
cld
leave
cmp
sub
rolb
std
xchg
or
ret
fsubr
lret
fcmove
enter
aas
fsub
rcl
fdivr
mov
ret
loope
out
leave
enter
rcr
fucomp
cmp
int3
filds
fisttps
rcr
shl
in
cs
clc
out
icebp
xor
jmp
out
int
clc
out
out
repnz
std
sbb
aad
xlat
iret
into
icebp
in
xchg
test
call
xor
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
push
ljmp
mov
hlt
lret
repz
int3
ds
sti
rol
aad
fcmovu
mov
mov
fsub
sarb
ffree
call
mov
nop
jecxz
fsubp
in
in
int
cmc
repnz
icebp
icebp
cmp
out
out
jecxz
aaa
cli
fndisi(8087
aas
leave
inc
in
in
fisttpll
loop
loop
enter
das
out
lock
fildl
test
roll
in
dec
addl
neg
sti
sti
shr
test
aad
clc
xlat
mov
mov
out
jecxz
xchg
xchg
int
jmp
cmc
leave
fnstsw
loopne
cmp
fndisi(8087
loop
test
ror
aad
iret
ljmp
out
ss
aad
into
cld
into
ljmp
sar
cmp
xchg
icebp
out
lds
ret
into
cmp
xor
cld
test
in
aam
loopne
fimuls
fucom
aad
xor
leave
sti
cmp
loopne
fld
out
in
fsubp
in
lret
mov
ljmp
sub
hlt
in
jmp
enter
xor
aad
faddp
xlat
sbb
mov
hlt
jecxz
call
ss
jmp
lret
adc
rcr
fcomi
cli
mov
orb
in
imul
enter
jmp
shl
loope
ret
movb
repnz
in
int3
xor
xor
out
out
lret
call
sarb
sar
rcr
in
in
out
clc
lea
xchg
in
sub
std
lock
sti
fcomip
rcr
add
iret
out
xchg
in
out
in
cmc
jecxz
cmp
ds
hlt
rolb
clc
addl
enter
call
sti
fnstsw
sar
adc
lds
sti
out
and
sar
out
iret
into
in
int3
cli
ds
into
ret
rol
sti
cld
in
ljmp
fsub
call
cmp
das
ds
repnz
jecxz
loope
std
frstpm(287
fcmovne
idiv
ljmp
out
ljmp
lock
cmp
cmp
aam
clc
shl
loop
jecxz
shl
mov
ror
jecxz
jmp
jmp
ffree
fcomi
std
aad
fucom
clc
mov
in
xchg
lret
mov
out
fcmovne
cli
jmp
ror
in
in
repnz
aam
fdivr
testb
iret
in
shl
lret
int3
sti
div
cmp
cmc
jecxz
out
ret
xlat
test
xchg
out
test
xchg
fisttpll
or
lock
rcl
aad
rcrl
repz
add
jle
fcom
aad
lock
test
in
clc
repz
cld
flds
aad
in
xlat
sti
rcr
jmp
aaa
ds
loopne
lock
fcmovnu
and
leave
lock
test
clc
cs
fsubr
iret
loopne
repnz
addl
out
out
mov
jecxz
fadd
in
in
rcl
cli
out
iret
repnz
repnz
fisttps
out
xchg
xchg
fucomp
in
clc
aam
in
aaa
ss
adc
int
icebp
aad
sti
ljmp
lret
icebp
xchg
ss
jmp
in
sarb
xlat
rcl
out
loop
stc
out
stc
out
orl
sub
xor
jmp
idivb
adc
incl
std
in
faddp
clc
jmp
call
shlb
aad
ss
shl
idivb
repnz
into
fsubp
aam
mov
mov
in
in
out
xor
sti
fdecstp
aam
out
fsubrp
testl
xchg
loope
xor
xchg
xor
xor
aaa
stc
aaa
std
aas
sarb
in
test
les
mov
adc
loope
in
hlt
bnd
xor
lock
lret
loop
ret
mov
std
in
test
loopne
lock
jmp
shl
cmp
repnz
cmp
test
loopne
popl
jmp
shr
xor
ljmp
sarb
mul
stc
lock
mov
mov
icebp
xor
aad
cmp
in
lock
in
std
sbb
bnd
fcomp
add
aad
aad
call
cld
loopne
cmp
cmp
rol
out
mov
xrelease
out
iret
int
jmp
ret
addb
cmp
loop
in
loop
out
out
enter
hlt
rcr
sbb
aam
stc
ljmp
lock
xchg
xchg
xor
out
call
lock
mov
int3
sub
nop
sti
cld
mov
iret
das
aam
clc
lret
cmp
std
rolb
loopne
mov
enter
enter
clc
clc
in
into
fcmovnbe
jmp
clc
out
out
aam
jmp
lret
or
in
test
ret
ljmp
std
sbb
and
in
mov
xchg
cld
out
in
cmc
xor
icebp
vshufpd
int
in
iret
sar
ret
out
out
incl
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
push
enter
cmpsl
jle
sbb
jle
in
int
rcl
cmp
cmp
loop
ret
cld
enter
fadd
xchg
loope
leave
xchg
xlat
enter
aaa
repnz
fcomip
sbb
div
decl
test
cmc
cmp
repnz
sbb
loopne
fstp
in
vshufpd
sti
loop
sti
divl
out
loope
shlb
ss
out
aam
sar
out
sarb
div
mov
std
xchg
fmulp
shl
ret
xor
aam
icebp
leave
cmp
in
in
cld
ret
mov
out
int
ljmp
fcmove
test
stc
fnsave
stc
cmp
out
test
fiaddl
out
fdiv
std
or
leave
sarb
int3
fld
orb
neg
int3
sti
jecxz
nop
out
ljmp
cmpb
lret
loopne
test
sub
ljmp
jmp
clc
das
lret
xor
in
into
rol
lock
ret
loopne
in
xchg
xchg
shr
cld
jmp
div
repnz
out
lret
lret
in
sti
jmp
ret
cli
aad
fucomip
aaa
idivb
mul
test
test
fldl
icebp
out
aaa
cs
ss
repz
ss
sti
xchg
aas
fiadds
jmp
iret
out
xchg
mul
int
repnz
hlt
aas
sub
rcr
loop
aad
sti
test
enter
in
loopne
aaa
aad
xor
ror
idiv
cli
inc
loope
cli
in
stc
mov
nop
xchg
iret
out
ds
cmp
loope
hlt
idiv
mov
xchg
call
out
hlt
ljmp
lock
loope,pt
mov
or
mov
shl
jmp
aaa
fucomi
shr
cmp
leave
loope
leave
xchg
int3
mov
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
ljmp
jle
rcl
loope
out
fptan
lret
repnz
xlat
ret
out
hlt
test
cli
cmc
loop
lock
in
lret
out
xor
jecxz
fcmovb
cmp
rcl
icebp
clc
cmp
sarl
loope
clc
cli
mov
fxch
mov
aam
int3
sarb
in
xlat
cld
fdiv
cmp
shl
rcl
repz
movl
rclb
in
cmp
clc
ljmp
cmp
mov
ljmp
fcmovbe
enter
icebp
fndisi(8087
int
fstpt
sti
aas
test
test
test
div
mul
xor
fidivl
cld
sti
stc
hlt
lock
out
call
mov
out
repz
sti
jmp
int
rcr
inc
sub
fdivrp
cli
fadd
iret
xchg
cld
xchg
nop
ljmp
cli
call
clc
fsubp
adc
loopne
stc
fiadds
std
xchg
div
ljmp
cmp
out
cmp
cmp
mov
loop
loop
leave
jmp
cld
int3
dec
shlb
jecxz
out
ss
xlat
in
rcr
xlat
sar
fcmovne
stc
std
enter
stc
shr
mov
call
out
cld
int3
out
aas
into
ror
sarb
rcr
leave
leave
loope
nop
in
repz
out
mov
lock
lock
lock
into
out
shl
aad
in
out
mov
lock
int
aam
xor
stc
icebp
out
cmp
shl
in
les
fdivr
loop
decb
out
in
jmp
cmp
jmp
and
cli
fstp
aam
lret
jmp
repz
out
int
jecxz
fnsave
xor
sar
leave
in
mov
popl
rcl
out
in
fcomp
cmp
int
rolb
shl
test
jecxz
fcmovnb
out
out
loope
imul
clc
int
lret
cmc
neg
ret
loope
mov
orb
int3
or
add
add
push
add
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
fcmovnu
out
aas
out
ljmp
int
ret
in
fucom
cmc
sbb
std
sti
lret
loopne
lret
in
hlt
xor
sub
dec
call
roll
repz
xchg
sti
test
xchg
nop
lret
enter
fnsave
and
in
hlt
repnz
xchg
mov
test
loop
shlb
enter
ret
in
rol
loope
test
out
enter
jmp
ljmp
sub
in
into
ss
ds
clc
fucomi
lds
in
jmp
iret
mov
in
out
sub
iret
iret
std
int
loop
icebp
ds
jmp
in
fmulp
loop
out
mov
fbstp
iret
aaa
fxch
aad
aad
cli
std
loope
add
repz
mov
les
out
out
shl
int3
das
ret
xor
cmp
jmp
fcom
xlat
push
aad
mov
in
int
mov
test
aad
not
fcmove
imull
icebp
repnz
fdivs
rcr
out
aam
lret
stc
xchg
icebp
and
aad
in
out
lret
aas
fldl
rolb
enter
out
mov
cmp
fcomi
cmp
int3
cld
cmpl
and
xchg
std
lock
test
into
xlat
xor
aam
cmp
lret
rcr
addb
loopne
cli
xchg
sub
xchg
ljmp
xor
cmp
xlat
repz
rcl
mov
sub
out
call
int3
clc
jmp
clc
call
lock
loop
out
repz
clc
fisttpll
sub
ret
aad
jmp
out
fiadds
in
ret
movb
in
leave
rolb
in
stc
stc
jmp
aam
icebp
not
enter
xchg
out
loop
fdivp
jmp
lret
fdivrs
leave
rcr
sarl
roll
fldln2
sti
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
sub
lods
sbb
scas
jle
sbb
jle
mov
sub
in
shl
enter
int3
cmc
clc
in
test
cld
fcomp
aas
repz
enter
jecxz
xchg
into
test
out
int3
enter
out
fdivrl
cmc
repz
loop
incl
int
leave
mov
in
ljmp
in
sti
jmp
cmp
std
xchg
cld
out
jmp
test
out
aam
repnz
stc
addl
in
nop
mov
in
in
lock
jmp
hlt
fidivrl
fcomi
out
aad
jmp
jmp
cmp
jecxz
icebp
fcomip
lock
fcmovu
call
iret
repz
mov
call
test
mov
addb
xlat
lock
loopne,pt
jmp
shl
loope
aad
out
ljmp
jecxz
hlt
xor
call
fcmovnbe
adc
rcl
in
jmp
test
out
in
iret
lret
sti
sarl
std
cmp
cmp
clc
fcmovnu
out
mov
loopne
ljmp
mul
into
fmul
sar
ror
shr
cmc
call
xlat
fsubrp
jecxz
popl
aas
shr
lret
in
fnstsw
loopne
add
adc
adc
xlat
out
dec
in
rolb
shl
hlt
fsincos
in
cmc
fst
lock
in
xlat
cmp
sbb
rorb
xor
idiv
lret
shl
fidivl
aam
shll
loopne
mov
xchg
jmp
shl
loop
fdivr
cli
in
sti
aas
lock
cmpb
aad
sar
cmp
lret
xchg
cmc
shl
in
in
shl
clc
sarb
in
int3
repnz
in
fistpll
ljmp
mov
fucom
jmp
enter
cli
lret
loopne
ret
ret
mov
aas
mov
loop
xchg
ljmp
out
jmp
into
cli
icebp
clc
fdiv
stc
add
and
loope
xor
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
push
ss
jle
add
mov
cli
cli
mov
ret
cmp
sar
fistpll
fmul
lret
fcmovnu
into
aas
cmp
ds
loope
test
xor
xor
aad
fcomip
cli
xlat
cmp
les
iret
out
repnz
in
aam
shll
out
dec
ror
cmc
jmp
cmp
ret
fmuls
mov
out
hlt
xor
ljmp
idiv
fcmovu
cmc
fldl
clc
in
xchg
xchg
out
in
les
int
std
cmc
in
incb
call
jmp
fdivr
fmul
xchg
xor
out
lret
xor
std
out
sti
aam
into
repz
and
clc
fdivrp
fimuls
rorl
in
aam
shl
lret
shl
in
aam
ret
filds
sti
in
lret
addl
out
fcmovbe
cmp
rol
rol
xchg
fcmovnb
stc
xor
shl
in
out
out
leave
xor
enter
shr
imul
sar
cmc
mul
idiv
repz
mov
jecxz
lock
adc
aad
sar
aam
div
in
fcomp
shl
cmp
sti
cmc
in
out
loope
out
mov
loope
lret
aad
shl
xlat
ljmp
sbb
ret
xlat
fldl
loope
int
cmp
out
stc
in
cld
test
in
ror
loope
lret
decl
jecxz
xor
cli
out
leave
call
adc
leave
enter
loopne
out
mov
int
jecxz
fcomp
ljmp
loope
aam
mov
cmc
mov
jmp
enter
hlt
mov
in
std
repnz
sar
clc
enter
out
xchg
mov
repz
in
leave
ss
stc
cmp
repnz
roll
into
repz
fsubr
out
cmp
lock
leave
fst
aas
test
out
rolb
not
and
jmp
aam
enter
aad
cmp
and
add
mov
jle
add
out
mov
xchg
icebp
xchg
imul
repz
div
std
cld
xlat
cmc
rcr
test
xchg
sti
repnz
ret
std
fildl
fst
cs
lret
lock
rcr
xlat
std
xor
stc
jecxz
fsub
mov
lea
in
shr
aaa
cmp
loopne
hlt
xchg
testl
mov
cmp
rcr
iret
into
loopne
cmp
xlat
imul
ds
mov
icebp
iret
out
fadd
iret
enter
fcmovbe
aad
ret
rol
aas
aam
call
fmul
int
incl
shr
rcl
cli
leave
fmulp
cmp
clc
into
out
mov
movl
mov
aad
cmp
xor
fst
in
sti
out
call
in
testl
clc
in
out
cli
repz
fxch
stc
sbb
out
imul
xchg
test
xchg
ljmp
ss
int3
xor
fcomip
xlat
loopne
test
lret
out
out
lock
xchg
in
out
repnz
sti
repnz
sarb
loop
cmc
cld
mov
hlt
xchg
enter
clc
out
fcmovnbe
xor
lock
iret
fsub
lock
call
std
mov
or
repz
fdiv
xor
into
rol
testl
cmp
rcl
shl
test
out
in
fcmovb
shl
lock
jecxz
ret
loop
loopne
mov
into
cli
xchg
xchg
popl
in
xor
ljmp
lret
out
decb
shl
cmc
out
ljmp
cmp
fldl
jmp
rol
jmp
out
cmp
cmp
hlt
aad
cmp
loopne
xlat
addb
fiadds
jmp
xor
out
out
aam
and
in
rol
icebp
ret
mov
mov
jmp
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
loope,pt
lret
in
xchg
ret
xor
leave
jmp
clc
cli
ret
cmc
cmp
mov
fmulp
nop
lock
cmp
lock
clc
cli
ret
int
aad
fildl
mov
xchg
mov
cmp
out
shlb
call
ror
idivb
sar
mov
mov
xchg
rcl
xchg
bnd
xor
aad
iret
int
ret
jmp
adc
hlt
repnz
shl
xlat
fcmovu
aam
iret
xor
ljmp
mov
lret
jmp
sbb
xchg
mul
xor
aad
int
cmp
stc
fcomi
adc
out
mov
incb
aam
repnz
out
stc
in
cmp
fdiv
and
fucomi
std
idiv
out
mov
in
loope
shr
xor
jmp
xlat
std
ss
lock
fdivr
std
inc
faddl
cld
mov
stc
div
repz
fdivr
aaa
cmp
rcl
shr
jmp
clc
or
rorl
fldlg2
fcmovnbe
fstp
lock
in
sti
icebp
hlt
addb
in
jecxz
mov
xor
shll
aam
jmp
fucomi
xor
aas
fadd
mov
clc
call
out
lret
jmp
aam
cli
enter
jecxz
iret
sarl
ljmp
xchg
in
mov
jmp
xor
bnd
lock
idivl
jecxz
loop
leave
std
cli
in
lock
xchg
ret
call
aam
rol
filds
call
addb
xor
enter
loopne
ds
in
cmp
add
xlat
aas
xchg
jmp
fucom
cmc
repz
ret
cmp
cmp
repz
iret
and
std
lock
inc
out
loope
sti
sub
sub
xchg
xor
jmp
cmp
clc
std
cld
aaa
ljmp
pushl
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
sar
xchg
add
out
hlt
mov
int
cli
orb
ljmp
clc
fprem
aad
sti
fidivrs
test
addl
stc
fcmovbe
call
xor
iret
in
lret
out
loope
loope,pt
sti
xlat
cld
fmul
cld
loop
sub
cmc
int3
rcr
cmp
xor
in
lock
shl
in
sar
mov
test
movl
hlt
in
aad
fsubr
clc
sbb
fdivr
fsubrp
imul
jecxz
fmull
int3
shr
xchg
cmc
shl
in
aad
out
cmp
fcomip
addl
xchg
fadds
xor
out
repz
out
call
cli
cmp
fsubp
flds
into
test
shl
test
out
cmp
cmp
clc
xor
cmp
hlt
loop
shl
cli
cmp
lret
into
jmp
xor
icebp
lds
enter
icebp
aam
repz
sub
fincstp
in
xchg
into
xchg
rcl
xor
in
sti
stc
cmp
shl
mov
addb
in
xchg
jmp
jecxz
leave
aam
xlat
cmp
in
out
fucom
loop
sti
cld
int
in
lret
icebp
out
test
xlat
fldl2t
aam
idivb
repnz
cmp
sub
in
enter
xchg
int
loopne
cmp
cmp
out
into
loope,pt
in
shr
fsub
icebp
hlt
mul
cmc
loope
faddl
xchg
shll
xor
in
fnstsw
cmp
cmp
lock
cli
fcomip
incb
in
add
loope
ror
xchg
sub
call
divb
test
icebp
ror
faddl
xor
xor
aam
enter
repz
rol
xor
test
aas
add
sti
leave
nop
cld
std
xchg
faddp
out
hlt
fcmovbe
shl
lret
ljmp
loope
idiv
fld
hlt
clc
sti
shl
xchg
sti
mov
enter
out
fprem1
repz
addl
mov
lret
lret
clc
repz
cmp
rcr
lret
lret
idiv
flds
in
out
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
dec
mov
jle
ret
jle
mov
xchg
aam
jecxz
xor
loopne
call
cmp
aad
aad
testl
loop
repnz
repnz
cld
shr
cmp
into
sti
repz
jmp
mov
lock
iret
repnz
int
icebp
cmp
xlat
icebp
fcmovu
idiv
ds
leave
loop
int3
stc
sbb
mov
cmc
in
xor
cmp
cmp
ds
lret
aam
rcr
fdivp
stc
xlat
addb
repz
shl
repz
clc
cmp
ror
out
xlat
push
ljmp
jmp
aad
divl
int3
out
cli
cmp
repnz
loope
ret
decb
or
sbb
out
icebp
loopne
aam
aad
int
fcmove
cmp
stc
repz
test
test
loop
loope
and
xor
in
icebp
aad
aam
adc
aam
fisttps
xchg
rcr
loope
jmp
aam
lock
lret
xor
aaa
enter
fcom
hlt
aam
cmp
loopne
mov
hlt
mov
das
xor
cmp
out
cmc
rcr
out
out
rcl
jecxz
cmp
call
int
xor
int3
out
lret
enter
cmp
fdivr
cmc
cld
testb
nop
leave
repnz
in
into
cmc
xlat
xlat
xor
not
into
cmp
sbb
out
faddl
call
cs
xor
aaa
clc
neg
rolb
rol
enter
fucomip
out
jmp
xor
xlat
sti
in
xor
ds
hlt
rolb
mov
in
mov
repnz
icebp
cmp
call
int
inc
aam
jecxz
sar
out
fstp
addb
shl
cmp
ror
cmp
loop
fcmovb
mov
lret
aas
les
lock
cs
sub
lret
out
jmp
out
cmp
mov
leave
loopne
sbb
xchg
loopne
aaa
fadd
hlt
stc
repnz
clc
sti
aam
enter
loop
ljmp
inc
in
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
jmp
ror
in
iret
cmp
lock
cmc
loope
loop
cmp
lds
mov
mov
lret
hlt
dec
xor
lret
rcl
iret
std
dec
out
inc
repnz
lret
mov
enter
out
xchg
repz
aam
out
xlat
aaa
lock
cmc
cmc
cmc
aas
jecxz
inc
or
into
xchg
call
clc
in
ljmp
xor
xlat
sar
out
repnz
mov
iret
repz
fcom
cmp
ljmp
idivb
movb
jmp
fstp
out
loop
ss
leave
icebp
cmp
lret
cmp
sti
stc
add
call
out
out
clc
out
xchg
fimuls
lret
int3
fsub
cmc
fstpt
loopne
aad
loopne
mov
xchg
xchg
xchg
out
out
icebp
xor
cs
fst
clc
out
repnz
cmp
fsubp
hlt
ret
mov
lret
xchg
lock
repz
jmp
sti
out
rolb
int3
sti
xlat
leave
lock
bnd
jmp
enter
cmp
sar
ret
hlt
cmc
in
hlt
mov
loope
out
rcll
loop
out
std
stc
cld
fldl
in
stc
cmp
test
fsubrp
in
leave
in
rcll
shr
in
fucomi
rcl
icebp
loop
fcmovb
sti
rcl
shl
out
mov
fcomp
nop
call
out
rcl
call
ds
cli
sti
xlat
repnz
mov
sti
into
mov
test
out
xor
cmp
fadd
rcr
loopne
cmc
xor
jmp
int
mov
sti
xor
lret
xor
iret
in
sarb
aam
leave
xchg
mov
mov
iret
cmp
jmp
faddl
fdivrs
hlt
cmp
jmp
shl
shr
xor
divb
ljmp
jecxz
fadds
out
test
iret
or
rorl
xlat
cli
cmp
incb
in
aad
test
out
popl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
fadd
dec
leave
fdivrl
jle
out
das
in
jecxz
in
cmp
sarl
jecxz
int
and
fcmovbe
cld
xchg
out
clc
sti
in
leave
int3
xchg
aas
iret
in
shr
hlt
lret
cli
cmp
rol
imul
xchg
test
lock
int
aaa
aad
testl
test
cld
call
aaa
shr
ret
aaa
fcmovu
ror
in
aad
int3
clc
xlat
sbb
fisttps
mov
out
aam
xor
cmp
in
out
ret
jmp
rolb
cmc
out
fdiv
out
out
idivl
enter
out
shl
fld
cmp
fildl
ret
fdiv
rcl
shll
repnz
leave
repz
shl
out
addl
f2xm1
xchg
jmp
xchg
hlt
cmp
int
cld
std
fnstsw
cmp
loop
out
test
fdivrp
lea
aam
in
cli
cmp
in
out
cld
fadd
fdivrp
addb
test
vpaddq
into
vpaddw
in
flds
jecxz
cli
ret
loopne
or
repz
in
shr
out
iret
int3
out
repz
icebp
fdivr
aas
sar
sar
test
fcmovbe
mov
int3
xchg
loope
cmc
xor
int3
cmp
repnz
ds
cld
flds
loope
xchg
sub
in
out
shl
aad
lret
call
out
ds
ror
in
loope
orl
rcl
out
xor
fmul
fldl2e
xor
cld
sti
addb
enter
or
jmp
nop
in
in
cmp
call
out
loope
cmp
flds
out
int3
into
fmulp
int
in
aad
sti
aam
cmp
filds
push
mul
jmp
addl
lea
out
iret
aad
cmp
jmp
aas
fdivrs
test
out
clc
jecxz
or
xchg
cmp
idiv
cmp
fsubrp
loop
icebp
addb
fisttpll
jecxz
xchg
shll
xor
mov
adcl
xor
adcl
xor
adcl
add
add
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
cmpsl
xor
mov
add
loop
fnstcw
rcr
inc
sbb
out
sti
addb
cmp
leave
repnz
hlt
mov
sarl
ljmp
repnz
fabs
std
xchg
fadd
mov
repnz
repnz
jecxz
into
xor
stc
fadd
icebp
iret
int3
in
out
test
cmp
jecxz
jmp
xchg
test
shl
repnz
aaa
ljmp
cld
out
fcomp
orb
orl
out
aam
sti
jmp
rcr
fcomp
repnz
fucom
test
out
clc
xor
xor
xor
cmc
std
jmp
repz
in
fadd
call
jecxz
test
shl
jmp
out
cmp
ljmp
repz
hlt
add
lea
icebp
iret
xor
fxch
neg
roll
rol
stc
lret
fcmovu
mov
mov
cmc
leave
int3
sti
ljmp
aad
hlt
int
stc
fcmove
in
mov
cmp
mov
xchg
test
ljmp
jecxz
mov
sti
sti
neg
ljmp
int
aad
sub
cld
out
rcl
ds
dec
cli
out
and
fucomip
jmp
jecxz
in
iret
rclb
out
xlat
loopne
shl
loope
loop
idiv
fsubr
leave
sub
mov
mov
ljmp
hlt
and
fiadds
fsubp
jmp
jmp
loopne
aam
in
lret
int3
stc
jmp
sbb
iret
rcr
or
neg
test
in
int
call
lock
fdivs
aad
in
aam
call
fcmove
cli
xchg
xchg
repnz
loope
in
aad
aaa
cmp
jecxz
and
cmc
rolb
xchg
iret
out
int3
fbstp
repnz
sti
jmp
lret
icebp
in
ljmp
into
lock
rcll
leave
xor
xor
sti
cmp
aas
rcl
repnz
testb
cli
in
into
in
ljmp
aam
xor
test
add
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
or
jle
ret
jle
stc
leave
jmp
cmp
ds
jecxz,pt
in
lret
in
leave
ret
mov
xchg
cmc
aam
shr
lock
ljmp
in
shl
lock
in
lret
mov
into
loop
enter
ds
jecxz
loop
cld
out
icebp
fsub
jmp
incb
rcr
in
lds
aad
f2xm1
lret
in
repnz
in
iret
xor
decb
incb
xor
in
cmp
sarl
hlt
rol
hlt
mov
test
xchg
call
lock
out
shl
cmp
iret
rcl
aam
repz
out
jecxz
in
hlt
fcoml
mov
not
int3
out
jecxz
ss
out
repnz
sti
aam
out
inc
leave
in
jecxz
cld
in
enter
jecxz
cmp
jmp
cmp
xlat
icebp
ret
int
fildl
fadd
sti
xchg
mov
nop
xchg
out
xlat
in
fcmovu
cmp
cli
test
loopne
xchg
nop
mov
rcl
lret
lret
std
int
cmp
sti
flds
lret
std
mov
and
aaa
shlb
jmp
in
fcomi
fsubp
repnz
ret
addl
enter
lret
jecxz
not
loop
out
out
idiv
adc
int
cmp
cmp
int3
lret
ror
iret
rorb
hlt
stc
cmp
int3
ret
aam
rcl
in
test
orl
sarb
fsin
in
in
jmp
lret
rcl
test
sar
rcr
aam
fmulp
in
shl
fsubr
loope
int3
icebp
xor
in
out
fidivrl
adc
std
aam
rorl
mov
shl
mov
ss
fxch
in
int
stc
lret
cmp
idiv
repnz
fiadds
aaa
sub
cli
ljmp
xor
loop
enter
out
xchg
and
rol
loop
les
xor
cmp
loop
xchg
in
dec
sti
jmp
icebp
loop
repnz
aaa
std
cmp
lock
mov
jmp
lret
ret
int
lret
in
aad
jno
nop
sub
ret
jle
fnstsw
aam
cmp
imul
in
nop
or
and
enter
imul
cmp
enter
cmp
ds
fildl
out
cmp
ss
out
int3
ret
cmc
fcmovnbe
in
imul
sti
ret
xchg
lret
in
in
and
fnstsw
clc
cmp
jmp
cmp
leave
shl
lret
rol
loopne
cli
sar
and
fiadds
in
out
iret
fsubr
int
cmp
lret
cmp
call
std
leave
fcmovnbe
sbb
iret
ss
stc
cmc
in
cmc
hlt
shl
fcomip
xor
les
into
jmp
mov
aaa
xor
cmc
leave
xor
lret
shl
fidivrs
xchg
test
clc
loop
xchg
in
into
fdiv
fnstcw
cli
stc
loope
icebp
in
rcl
cld
imul
test
test
jmp
fnstenv
ss
sti
fcmovne
cmp
cmp
test
rcl
cmp
sti
addb
in
cmc
xlat
fcmovnb
in
jmp
std
test
jmp
ds
into
fisttps
rol
lock
out
out
xor
cmp
lret
fcmovu
sbb
repnz
out
frndint
jmp
sar
xchg
hlt
cmp
lret
lret
cmp
xchg
call
fsubr
out
pause
shl
aad
xor
iret
fidivrs
cmp
clc
fiaddl
int
into
int
shl
cmc
out
jmp
into
out
enter
enter
xlat
cmp
fst
ror
ljmp
decl
out
in
out
ss
not
jmp
cmp
int
inc
lret
test
ljmp
repnz
out
fdivr
fdivp
aas
fdivr
cmp
aaa
sar
test
xlat
mov
jmp
stc
jmp
mov
jmp
test
xor
ret
fdiv
xor
fsubr
cli
ds
cmp
std
rcr
les
stc
int3
mov
xor
out
in
aad
fincstp
xlat
int3
rcl
in
sar
sti
aam
leave
div
mov
xor
sub
fdivrs
lret
cmp
cmp
cli
imul
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
xlat
cli
ret
addb
shlb
jmp
lret
shr
out
int3
call
clc
loop
hlt
ds
mov
in
clc
loopne
dec
xchg
iret
enter
repz
idiv
lock
fsubp
shr
clc
roll
xchg
ror
mov
xor
out
cmp
out
in
cmp
ror
into
test
leave
leave
mov
jmp
fdivp
aam
shl
enter
cmp
or
loopne
aas
repz
adcb
in
neg
bnd
loop,pt
in
call
cmp
test
icebp
test
decb
lret
sarl
ljmp
cmp
movl
in
icebp
mov
cmc
neg
out
hlt
std
rol
imul
iret
sbb
cmp
jecxz
repnz
not
fdivr
out
ffree
cmp
out
inc
stc
cmp
out
sti
ljmp
aad
clc
xlat
ret
sti
ljmp
test
shr
in
cld
xchg
std
test
enter
jmp
cld
fcmovnbe
ret
hlt
xor
cld
frstpm(287
ffreep
mov
repz
cmc
aaa
jecxz
aaa
out
call
in
xchg
loope
test
dec
lock
in
mov
xor
aad
xor
call
fadds
mov
mov
orb
xchg
xchg
shl
not
lret
jmp
cld
hlt
cld
loop
clc
fistpll
aam
jecxz
movb
in
out
aad
shr
loop
int
sti
sti
int
cmp
rol
ffree
in
xchg
loopne
loope
ljmp
not
neg
fsubr
lret
lret
cmp
fucom
icebp
mov
hlt
mov
mov
sub
in
xchg
loop
rol
ret
stc
ss
cmp
xlat
inc
inc
clc
loope
out
fcmovbe
int3
nop
test
cmp
enter
cmp
fucomi
fildl
mov
out
test
call
cmp
ds
adc
aas
loope
mov
orl
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
movsl
fildl
xorl
cli
fnstcw
lret
add
int
mov
out
sub
xor
aaa
in
cmp
lret
aas
shl
clc
loopne
out
xchg
loope
xlat
mov
nop
fcmovnb
incb
xor
out
sar
cmp
in
lds
aas
test
ret
into
out
in
xchg
xlat
fld
iret
test
cld
hlt
lock
cmp
xor
aam
in
fcmovnu
lea
rcr
xor
test
repz
loopne
aam
loop
call
jmp
popl
in
lock
enter
xlat
out
shl
xlat
leave
leave
xchg
fimuls
jmp
mov
xor
dec
hlt
out
test
out
xlat
lds
out
test
call
cmp
xor
cld
jmp
fucomip
clc
shl
neg
idiv
int3
out
in
fst
std
mov
rcr
vpsadbw
cmp
xlat
repz
idivb
aas
out
adc
in
lret
fucomip
in
out
cld
call
clc
fdivl
imul
fiaddl
sti
xlat
test
leave
ljmp
loopne
into
xor
in
aam
sarb
cld
cmc
out
mul
test
addb
out
loope
aad
lret
out
jmp
rcl
shl
div
fcmovu
filds
orb
repnz
jecxz
repz
imul
in
ffreep
out
fcom
fdivrp
sti
aad
fdivrp
test
test
shl
in
clc
xor
cmp
cld
fldl
cmp
testb
mov
nop
in
orb
fmul
ss
cmpl
sarl
mov
lds
cli
lret
shr
loope
rcr
ror
leave
repz
int
repz
std
mov
xchg
repnz
subl
fcom
out
ror
ret
test
fcmovnbe
clc
cmp
out
ffreep
jmp
in
xchg
call
sarb
hlt
fidivrs
aas
rcr
shl
leave
orb
call
xor
out
iret
xor
in
neg
aas
cmc
movb
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
ficompl
jle
ret
jle
jmp
sub
repnz
mov
int3
into
in
fnstsw
cmp
cmp
sti
loopne
test
mov
leave
loop
in
xorb
xor
in
ljmp
std
sar
fprem
mov
stc
in
stc
out
test
xchg
sub
ss
call
in
stc
clc
xlat
repnz
div
std
out
in
nop
call
mov
xlat
out
sar
cmp
fld
fcomp
cld
aad
incl
loop
lret
loopne
xor
hlt
leave
jmp
cmp
test
lock
jecxz
shl
jecxz
call
orb
sti
hlt
call
addb
loope
mov
into
xchg
out
fnstsw
xchg
repnz
in
xor
stc
hlt
aaa
loope
out
fld
add
not
jmp
into
loop
fucomip
out
xlat
ret
shrl
idivl
loope
ror
adc
jmp
int
mov
xchg
mov
jecxz
xor
out
std
int3
int
shl
repnz
out
aas
fildl
cmc
in
mov
cli
xor
in
leave
into
dec
jecxz
icebp
or
ret
ret
adc
call
in
out
in
xor
rcl
sub
sti
rolb
cld
int3
int3
loopne
jecxz
xor
into
out
shl
repz
rcr
ret
shl
fsub
ffreep
neg
fdivr
cli
std
xchg
ljmp
cmp
xlat
cmp
xor
in
cmc
cmp
mov
and
test
rol
cmp
aaa
leave
out
jmp
aam
int
xor
repnz
jmp
test
call
jmp
call
cmp
stc
hlt
icebp
incb
add
mov
lret
les
in
clc
lock
in
in
stc
fst
xlat
icebp
cld
mov
fld
out
enter
adc
jmp
lret
ror
lret
cmp
out
cmc
out
cmp
int3
aad
test
ror
test
jmp
vshufps
loop
rolb
sbb
leave
lret
aas
jmp
rol
rcr
and
rcrb
ret
jle
iret
xchg
out
aam
rcl
shl
iret
fdivrp
cmp
in
std
sarl
ret
std
jmp
call
in
test
int3
hlt
sti
cmc
call
hlt
shl
cmp
aam
testl
xchg
jmp
out
xor
jecxz
xlat
repz
in
mov
cld
adc
clc
lret
int3
out
aas
repz
cmp
stc
addl
ret
xchg
enter
test
jecxz
rcl
xor
leave
xor
in
aas
sarl
in
cmp
xchg
ds
lret
mov
lock
mov
aaa
les
in
cmc
ror
int3
loopne
cmp
call
sub
call
push
icebp
enter
lret
icebp
fstpt
test
cli
out
fcomp
out
loopne
fsubrp
mov
xchg
loope
idiv
xor
std
stc
cld
hlt
ret
clc
cld
jecxz
mov
mov
mov
loopne
in
sar
int3
aaa
xor
leave
shr
cmp
xlat
in
fcmovnb
test
rol
xchg
enter
adc
icebp
test
xor
xor
shl
ret
not
jecxz
stc
test
fsubp
out
jmp
xchg
out
jecxz
aad
shl
loop
ret
rcr
repz
clc
into
test
aaa
fcmovne
loope
call
mov
xchg
test
fadd
cmp
in
loopne
loopne
neg
div
jecxz
lret
fisttps
cmc
in
out
cmc
test
jmp
fincstp
cmp
rol
repnz
lret
test
lock
icebp
lds
int
cmc
out
cld
neg
shr
out
hlt
test
ljmp
iret
int3
in
ror
xchg
loop
vpmovmskb
into
jmp
sarb
loope
sar
lds
ds
mov
call
xor
in
shlb
hlt
cld
lock
rol
in
stc
out
test
test
in
jecxz
xchg
vpsrad
lock
iret
in
aam
xchg
test
movb
cmc
sar
fstpt
cmp
xacquire
leave
mov
in
enter
mov
jmp
fadd
lret
fstp
aad
mov
cmp
punpckhbw
cld
dec
jle
ret
jle
xchg
enter
iret
jmp
xlat
cld
in
out
repz
out
loope
loopne
cld
xchg
shr
lea
cmp
out
repz
in
out
stc
incb
mov
ljmp
ret
stc
into
fcom
cmp
cmp
aam
loop
out
mul
sti
mov
stc
ljmp
int
fstpt
out
jmp
aad
iret
cmp
ror
clc
out
mov
lret
shr
cmc
loope
xor
cmp
les
cmc
cmp
std
loopne
hlt
flds
repnz
xchg
xor
shl
sar
fdivp
hlt
and
fabs
fnsetpm(287
xchg
fdivr
addb
enter
ss
fcom
dec
stc
loopne
fdivr
loopne
idiv
loopne
mov
xchg
ret
std
lret
xchg
ret
cmp
aad
ror
repz
rorb
lret
std
out
in
not
in
ror
aad
cmp
repz
cmp
jecxz
jmp
ljmp
fmul
ret
jmp
repnz
int3
ds
sar
ret
lock
fimull
test
popl
int3
shl
aaa
cmp
std
shl
xor
mov
leave
fadd
in
addb
xchg
xor
repz
repnz
cmp
or
icebp
aad
call
bnd
call
lds
lret
fdiv
jecxz
loopne
sti
loop
mov
and
out
mov
in
xchg
into
out
int
int3
icebp
iret
imul
repz
sti
xor
mov
int3
mov
and
ss
enter
icebp
loopne
sbb
shl
icebp
stc
xchg
xchg
enter
loop
lock
xor
hlt
or
shl
std
adc
lret
loop
ljmp
int
shll
idivl
rcl
aaa
shl
repz
ret
fadds
into
sti
shr
shl
xchg
mul
test
ljmp
in
hlt
jmp
cli
orl
mull
ret
cmp
add
ret
pop
je
mov
xor
jmp
ror
ror
mov
cmp
and
jle
ret
jle
fmul
out
ror
cmpb
cld
sar
ret
imul
hlt
out
iret
int3
fists
int3
shl
std
loop
repz
into
rcr
loop
mov
lock
nop
addb
into
shr
cmp
stc
loope
icebp
xlat
imul
mov
mov
fcmovu
mov
std
in
out
int3
int3
repz
fdiv
in
leave
sarb
std
xor
std
jmp
icebp
lret
test
in
out
lret
rcr
lock
hlt
fiaddl
test
inc
out
int3
lock
ret
loop
fstpt
cmp
repz
repz
sar
fsub
fsub
into
loope
orb
loopne
xor
loopne
cli
cmpl
loopne
cmc
jmp
xchg
in
test
in
loop
not
idivl
addb
ret
leave
sti
mov
repnz
jmp
sarl
cmp
fcmovnu
repz
out
idivl
add
in
jmp
orl
int
ljmp
cli
repnz
sti
shl
repz
fstp
test
das
sarb
in
sti
sar
fcmovnb
call
out
mov
repz
into
fmul
cmp
call
test
les
lret
in
cmp
out
stc
loop
int3
fucomp
ljmp
ret
cld
mul
jmp
clc
into
test
int3
int
std
and
loope
into
div
cmp
ds
repnz
repz
mov
out
std
in
jecxz
leave
clc
int
cmc
into
enter
std
fdivr
add
cld
out
clc
ljmp
int
jmp
fscale
cld
shr
cli
rcl
cld
mov
fxch
decb
ret
out
fcmovu
aam
fmulp
fninit
xlat
in
xlat
adc
mov
jecxz
or
mov
shl
xchg
sub
hlt
divl
into
ljmp
aaa
iret
mov
cld
sti
lret
out
mov
ljmp
cmc
jmp
icebp
add
jmp
xlat
into
ror
fxch
flds
jp
pop
aaa
dec
xchg
pop
add
jle
ret
jle
shr
rcl
ror
lock
cmc
ljmp
std
jmp
in
fsubrp
jecxz
iret
iret
out
aad
out
repz
fdiv
iret
cld
into
aas
out
stc
mul
test
in
xchg
aam
in
in
sti
in
call
cli
test
shl
fcmovnu
jmp
jmp
into
mov
rcr
fcmovbe
out
in
cmp
sti
repz
lock
fabs
lret
rolb
out
fxch
xlat
repnz
shl
cmp
aad
out
fxch
jmp
aad
out
shl
call
sar
into
cli
loope
mov
vcvtdq2pd
mov
lock
xlat
cmp
test
cli
ret
xchg
fadds
shr
xor
into
fsubrp
sti
xlat
hlt
testl
out
filds
mov
repnz
shll
cmp
out
fstpt
fxch
repz
jmp
repnz
in
std
cld
loope
fiaddl
out
loope
sti
in
xor
std
cmp
icebp
cmp
fdivr
out
out
mov
filds
in
cld
int3
out
cmp
aad
in
fst
sti
incb
testl
fxch
lret
repnz
call
flds
cmp
jmp
out
jmp
enter
lret
icebp
idivl
ret
shl
out
xlat
fcomp
test
cmp
out
jmp
loop
aas
xor
fldl2t
out
rcr
xlat
fdivrl
sub
loope
jecxz
aam
sti
int3
incl
shl
in
rcl
jecxz
div
cmp
fcmovu
cmc
cmp
cld
testb
jecxz
xchg
fsubp
mov
xor
fxch
cmp
jmp
int3
std
hlt
fcmovnb
std
test
movl
aaa
cmc
fcmovne
xlat
leave
loopne
shr
neg
lock
in
in
rorl
loope
xor
xor
out
int
int
fneni(8087
ret
icebp
fcmovbe
ret
xchg
fadds
sar
shr
out
shl
cmp
sarl
mov
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
call
jmp
jle
ret
jle
xor
incl
aam
xchg
loope
loopne
in
adc
fucomip
icebp
hlt
repnz
loope
repnz
sti
mov
out
fildl
lret
xchg
mov
aad
xor
lock
shr
cld
xlat
sarb
cmc
stc
aad
in
iret
shl
out
mov
ljmp
call
cmc
std
out
cli
mov
mov
incl
lret
xchg
out
in
aad
clc
mov
loop
cmp
out
cli
int3
fimuls
rcl
icebp
call
rcr
jmp
rcr
fldln2
stc
fstp
xchg
mul
loop
rcr
and
xor
out
ds
cmp
ret
xacquire
fucomp
std
fdivrp
out
in
adc
icebp
aad
out
lret
repnz
addl
mov
fcomp
out
cld
sbb
lret
cli
icebp
cld
fstp
lret
filds
stc
sub
orb
xchg
sub
lock
cmp
jmp
in
testl
xchg
jmp
jmp
shl
leave
out
cmp
roll
out
jmp
aas
test
sti
fcmovu
fsubr
filds
ror
xlat
out
xor
sti
aad
out
jmp
int3
fucom
jmp
fidivl
aas
cli
in
shl
aaa
loop
sar
aad
cmc
loope
in
into
fstl
in
xor
in
repz
out
icebp
loopne
iret
xlat
aam
in
decb
in
ljmp
lock
ljmp
fdivr
xor
flds
xchg
lock
cld
fmul
lret
addl
movl
icebp
in
jmp
in
in
sub
cmpb
fadd
loopne
mov
loopne
nop
mov
xchg
mov
xor
iret
jmp
xlat
fucomip
addl
mov
cli
ficoms
xchg
out
xor
lds
lock
aas
mov
jmp
rol
int3
fmul
aad
mov
jle
add
rcr
jmp
addb
xchg
mov
xchg
in
imul
leave
mul
out
fdivrs
out
sar
repz
shl
loopne
cli
fadd
xabort
lret
out
fcmove
int
test
icebp
cs
call
repnz
sbb
shr
fcmovnb
mov
mov
in
out
mov
faddl
fidivrl
std
cmp
lock
fcomip
frndint
out
mov
lock
xchg
enter
aam
rcr
out
icebp
aas
fadds
xchg
leave
mov
ljmp
cmp
fdivp
stc
imul
fcmovnu
repz
cli
fsubrp
std
mov
in
jecxz
xchg
xchg
fildll
xor
lret
in
xor
cmp
or
ret
cld
std
cmpb
xchg
ljmp
call
cld
cmp
jmp
xchg
aas
jecxz
clc
jmp
mov
fsts
loopne
jecxz
xor
div
cmp
aad
in
out
loope
loop
in
adc
mul
in
decb
lock
xor
cmp
sar
jmp
jmp
sar
cli
rol
test
stc
loop
lret
rolb
into
fdivs
sti
ror
aam
jmp
sti
aam
cli
ret
mov
jecxz
mov
shr
lret
call
out
fsubp
shl
ret
loopne
cmc
sub
leave
in
jmp
call
hlt
int3
shl
cmp
loope
fcompp
std
rcl
faddl
mov
test
ret
xor
aad
sti
sti
cmp
loope
in
sti
hlt
loope
addl
xchg
int
jecxz
aaa
jmp
ret
adc
sti
out
sbb
mov
out
ljmp
cld
out
xlat
fcmovnu
std
sub
fmulp
test
hlt
in
lret
out
stc
repz
rcl
cmc
hlt
sar
cld
std
lock
enter
lock
xchg
sub
lret
fstp
fcomip
and
mov
out
lret
orl
repz
fmul
div
stc
imul
aaa
test
shlb
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
push
sbbb
pop
jle
ret
jle
jecxz
filds
xchg
icebp
ror
repz
ljmp
fcmovu
ret
test
cmc
add
rcr
in
mov
repnz
ljmp
std
clc
shl
shl
imul
mov
clc
stc
iret
ljmp
ss
std
int
in
fnclex
loop
cli
shl
clc
fstp
and
or
jecxz
loopne
loop
rcr
stc
lock
iret
enter
aam
ds
cmp
test
lret
clc
in
sub
xchg
xor
das
xor
ljmp
int3
hlt
repnz
out
ret
test
jmp
in
rcl
aad
into
xor
xor
divl
sti
stc
ds
idivl
std
lds
lea
in
cmp
sti
fdivp
std
ror
loope
shr
clc
shl
shl
test
in
rcl
in
jmp
cmp
idiv
ljmp
out
rol
inc
rol
in
jecxz
icebp
aam
cmc
in
stc
jecxz
cmp
cli
xlat
idiv
fstp
rol
fdivr
xor
dec
lret
in
in
in
imul
div
fcmovu
sti
hlt
ds
cmp
xrelease
out
icebp
xchg
loop
mov
out
shll
int3
jmp
div
shl
cmp
and
rol
imul
fisttpll
icebp
shl
nop
mov
xlat
cmc
clc
lret
int
cmp
icebp
loopne
ds
fcomp
fsubr
lret
in
fcmovnb
out
mov
loop
call
iret
jmp
sbb
lock
stc
fcos
sti
in
iret
in
filds
sub
shr
std
out
inc
cmp
testb
repz
out
in
lret
fxch
hlt
shl
in
sub
in
enter
sti
clc
loopne,pt
loop
lock
rcl
fmul
mov
jmp
repnz
int3
in
imul
aam
into
fucomip
repz
mov
mov
out
out
out
ljmp
cmp
rcr
aad
fisttpll
out
in
out
shll
fadd
out
cmp
call
cmp
repnz
mov
fsubr
pop
add
add
aad
vpaddusw
aad
js
jg
cwtl
loope
adc
jle
ret
jle
clc
orl
mov
ljmp
call
test
iret
stc
mov
cmp
ljmp
xchg
mov
lret
shl
sti
fldl2t
fprem
xlat
lret
jmp
in
fninit
lock
in
sti
jmp
ljmp
cs
leave
cmp
lret
shr
sti
loop
out
loop
mov
jmp
stc
stc
cmc
aam
enter
xor
int
rcl
shl
lret
in
lret
out
mov
cmc
sarb
fdiv
std
idiv
in
cmp
fld
xchg
out
std
popl
clc
shl
xor
cmc
xlat
lock
stc
std
lret
fcomp
mov
lret
cmc
shr
aam
ds
loope
aas
aad
aas
in
aam
mov
loopne
out
in
ljmp
hlt
ss
cli
idiv
cld
aad
aad
test
lock
orb
aam
int
fdiv
out
int3
in
test
into
jecxz
in
leave
lret
filds
shll
shl
jmp
out
imul
in
test
out
cli
aad
shl
leave
call
ljmp
shll
cmp
enter
int3
cmp
sbb
xchg
fnstcw
std
cmp
icebp
sbb
das
xor
xor
repnz
xlat
xlat
cmc
fucomi
repnz
aam
clc
fprem1
xchg
loopne
repnz
xor
xor
shlb
sti
icebp
cli
stc
jmp
cmpl
mov
incl
icebp
jecxz
mov
into
cld
into
jmp
cmp
filds
mov
cld
in
fchs
jmp
aad
repnz
leave
in
ror
int
cld
fdivr
repnz
in
orb
roll
fstpt
aam
fdivrs
int3
rol
jecxz
loopne
jmp
addl
fldcw
aam
in
fst
lret
or
cmp
out
ljmp
loope
xor
aaa
cmp
cmp
fmulp
sti
cmpb
in
xor
sub
xchg
xor
add
imul
sub
jmp
aad
int3
fmul
fnstsw
jb
fcomps
jle
add
out
int3
fldl
cmp
cmp
int
neg
sar
jecxz
sti
xchg
xchg
in
repz
ror
into
aam
cmp
addl
loop
call
call
neg
xlat
loope
hlt
repnz
cmp
clc
addb
jecxz
fmulp
int3
cli
fmull
imul
xor
stc
xor
lock
sbb
cli
jmp
out
int3
nop
call
shr
jecxz
aad
aas
leave
fldlg2
neg
aas
sar
out
cld
aam
addl
aaa
icebp
not
in
cmc
lret
div
repz
faddl
int
mov
test
xor
int3
cmp
lret
rcl
call
ret
cmp
xchg
in
aad
int3
out
decb
call
rcr
lock
jmp
lock
out
ret
test
ljmp
in
mov
jmp
out
rcr
xor
ljmp
loope
out
fadd
fsubrp
aad
out
loopne
loopne
out
sar
loop
into
cld
enter
out
in
in
cli
xor
aam
jecxz
cmc
loop
lea
jmp
in
stc
xor
into
loopne
jecxz
in
and
aad
test
out
fiadds
xchg
fucomip
out
sti
fxch
aaa
imul
aad
int3
lock
shr
out
sub
test
lret
into
call
hlt
iret
div
shl
call
jmp
call
filds
in
ljmp
int3
test
aam
ffree
jecxz
addl
idivl
shlb
imul
ror
add
shr
in
loopne
out
xchg
out
fcmovne
in
shl
sarb
aad
std
repnz
cmp
xor
rcr
xchg
lret
clc
call
cmc
xor
imul
ljmp
rcr
xlat
icebp
faddp
clc
testb
lret
sbb
call
icebp
clc
cmpb
rolb
ret
enter
ljmp
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
mov
jle
add
xchg
rol
int3
xor
shl
clc
iret
aam
aad
loop
sti
mov
cld
repz
addb
xor
call
repz
cmp
cmc
clc
jecxz
mov
hlt
rcll
cmc
lret
cmp
cld
out
in
div
stc
fucomip
xchg
mov
in
out
enter
das
xor
in
in
aam
stc
rcl
and
sbb
ljmp
out
iret
cmc
cmp
stc
out
aas
ljmp
iret
fildl
in
sti
std
leave
xchg
in
into
in
out
imul
fcmove
icebp
cmp
int
mul
and
sub
mov
int3
sub
out
xlat
fadd
ljmp
cld
std
fadd
loop
enter
iret
xchg
mov
imul
xor
fnstsw
fdivp
sbb
cli
les
cmp
clc
cli
lret
adc
stc
repnz
in
sti
aaa
aaa
hlt
std
std
int
sti
and
jmp
fcmovu
rolb
in
cmp
cli
stc
cmp
cmp
shr
cmp
test
xor
jecxz
out
shl
xchg
loop
into
mul
iret
cmp
in
cmp
fidivrs
enter
cmp
std
hlt
test
cmp
sti
test
fsub
xchg
loop
loope
icebp
aam
rcr
fsub
rcl
aam
rcl
out
leave
int
stc
call
repz
rcl
jmp
dec
shl
loopne
in
rcr
aas
aad
fdivp
aad
popl
roll
call
xor
lret
out
icebp
shl
stc
cli
cmp
jmp
call
icebp
xchg
dec
clc
icebp
repz
fcmovne
int3
fmul
in
test
iret
out
xchg
addl
out
jmp
into
lret
icebp
fld
hlt
repnz
testl
std
iret
repz
repz
lret
shr
icebp
ss
cmp
jmp
icebp
out
cmp
clc
stc
mov
lret
lock
xchg
mov
clc
fsubr
xor
in
leave
cmp
fsubr
fiaddl
in
fdivr
fmul
sti
xchg
rorb
xor
cmp
jmp
int
int3
int
cmc
inc
cwtl
inc
stos
pop
out
arpl
ret
jle
sti
fcmovbe
cmp
loop
lock
enter
fdivr
leave
lret
xor
jmp
cs
sti
lret
and
fdivrl
hlt
aam
jecxz
mov
repnz
jmp
shrb
fprem1
fdivrs
out
aas
repz
int3
roll
in
mov
mov
test
xor
cli
ljmp
ds
neg
out
clc
fdiv
mov
leave
xlat
out
mov
xchg
lret
jmp
int3
rcr
cmp
cmc
cmc
fucom
out
xlat
test
decb
or
ss
in
stc
out
lret
fmul
cmp
sti
cld
mov
xchg
lock
repnz
out
repz
call
stc
int
fst
sbb
jmp
int3
xchg
mov
orl
leave
cmp
loope
iret
ret
idivl
stc
test
fildl
in
int3
sub
shl
enter
xlat
fsubp
roll
and
jmp
jecxz
loopne
xor
ret
in
lret
cmc
ds
cmp
cmp
in
mov
loop
xlat
orb
loopne
shlb
xlat
lret
jmp
shr
fcmovnb
int
loope
fsub
ret
rcl
in
adc
in
aaa
lret
sub
loopne
loope
icebp
cmp
ret
call
enter
loope
std
hlt
call
jmp
shll
loopne
cmp
repnz
mov
xlat
test
jmp
int3
int
xor
clc
div
ror
cmp
cmc
in
aad
clc
stc
cmc
mov
enter
aad
out
xor
sti
aam
jmp
xlat
sti
jecxz
aas
out
repz
mul
loopne
imul
out
loop
mov
loope
lock
shr
cld
lock
fdivp
xchg
std
fldl2e
loope
jecxz
and
loope
mov
out
xor
hlt
fucomip
cmpb
fidivrs
dec
ret
leave
loop
std
rorl
aam
int3
sar
into
cmp
rolb
cld
fldl
flds
fists
xlat
in
aam
test
decl
add
add
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
ss
cmp
in
loop
lret
in
into
enter
in
ror
icebp
cmp
jmp
into
loope
int3
aam
shl
std
in
jecxz
mov
jmp
clc
in
int3
iret
in
rol
jmp
imul
aad
aad
sar
loopne
loop
sti
stc
hlt
cmp
out
fcom
loop
ror
cli
lret
jmp
loope
in
orl
xor
jmp
icebp
loopne
cmp
iret
xor
fcmovbe
test
shl
repnz
xchg
addb
ret
rcl
call
fcom
cmc
in
rcl
push
test
nop
mov
xor
loope
fsubr
cmc
ss
jmp
std
fdivrl
test
out
icebp
leave
rolb
cld
fimull
loop
rcl
xor
hlt
lret
stc
loope
fincstp
ret
mul
leave
stc
int
out
fucomip
mov
shl
xor
out
xor
xor
leave
call
aad
cld
out
jecxz
in
popl
std
in
xor
jecxz
div
icebp
fdivrl
fstp
test
out
in
leave
lret
xchg
nop
decb
in
out
stc
repnz
into
stc
ds
rcr
repz
addb
in
in
enter
out
int3
das
enter
repnz
fst
int3
fbstp
cmp
faddl
lret
fucomp
adcl
sarl
repz
test
or
mov
std
out
mov
lret
lds
aam
hlt
cmc
test
fadds
jecxz
in
in
cmc
jmp
xor
sar
std
jmp
fildl
std
mov
sti
ret
int
lock
cmc
ljmp
jmp
cmp
cld
xchg
int3
stc
loope
lret
jmp
imul
repz
xlat
cmp
iret
hlt
cld
cmp
int
cmc
out
ret
loop
jmp
int
icebp
fmull
lock
aaa
in
lret
sar
loope
fmulp
jecxz
mov
call
nop
leave
mov
fcmove
cmp
addl
jmp
mov
jmp
ret
int
fstl
mov
sub
ret
jle
int
fidivrs
testl
loop
lret
lret
mov
out
xor
cli
leave
int
xor
repz
fsub
hlt
cli
call
jmp
xor
mul
aad
lock
xlat
in
sar
shl
sar
aam
loopne
fcmovnu
loopne
movl
in
xor
fdivl
shlb
rcr
repz
fmul
fdivr
sbb
lock
cld
fcmovnu
fdivrp
cmp
icebp
test
fcomip
faddl
ficoml
das
aad
out
shr
int
or
loope
fld
repz
loop
mov
lret
mov
shl
cld
fsubr
lret
not
faddp
testb
fcmovnu
fucomip
addb
xor
xlat
stc
cmp
cmp
ror
iret
in
ffree
fmul
loop
icebp
lock
lret
mov
in
sti
aad
out
xlat
cmp
int
sti
cmp
in
enter
rcr
mov
fimuls
aam
cmp
ds
out
repnz
ds
jmp
fst
clc
jmp
lret
repz
leave
fxch
lret
lret
lock
cld
iret
out
out
ret
mov
dec
xchg
fsubrp
ljmp
divl
sti
fidivrs
lock
out
cld
repnz
loopne
loop
aam
xchg
fmull
jmp
cld
in
xor
cli
not
clc
testl
addl
xor
xor
aaa
cmp
mul
into
jmp
sti
in
hlt
aas
icebp
loop
jmp
mov
repnz
xchg
out
out
iret
lock
xlat
mul
clc
cmp
stc
stc
loop
fxch
jmp
call
xchg
repz
lret
cmp
lock
ret
shl
test
incb
xchg
out
call
ljmp
out
stc
xchg
fcmovnu
fsubrp
sub
adc
into
ret
jmp
fdiv
sar
loope
xlat
cli
addb
test
repz
adc
clc
not
fnop
lret
fcmovne
loop
cmp
test
jmp
int3
ret
int
mov
pusha
das
es
jle
ret
jle
sti
std
enter
fdiv
fiaddl
hlt
dec
shl
xor
aam
call
hlt
xor
cmc
loop
mov
clc
xchg
lock
mov
out
xchg
in
xor
fcom
repz
fcmovu
fcomi
cmp
ret
call
mov
idiv
repz
leave
out
in
xor
cld
ffreep
rol
shl
cmp
clc
enter
in
lret
int3
int3
out
fxch
into
rcl
sarl
fsubr
jmp
and
loopne
cmp
clc
out
enter
out
mov
ret
shlb
jmp
ds
roll
fdivrp
test
clc
jecxz
test
cmc
int3
neg
out
aaa
jmp
idivl
shl
icebp
loopne
movb
cld
icebp
out
jmp
jecxz
iret
leave
vpsllq
aaa
aad
fptan
sbb
stc
test
fucom
ljmp
iret
rorl
int3
shl
sti
iret
sar
call
lock
xchg
jecxz
cmc
fmul
orl
ss
divb
out
in
int
fcmovnb
ret
ret
sti
in
mov
mov
out
in
jmp
cmp
out
in
lret
out
leave
ret
shl
loope
mov
in
mov
jmp
aad
hlt
in
sti
loope
xorb
loopne
ret
xchg
loop
mov
int3
mov
out
cs
out
clc
out
lret
cmp
iret
mov
enter
fsub
out
test
loope
in
xor
in
jmp
cmc
ror
test
lock
stc
orb
cmc
repz
test
out
stc
rolb
out
lock
test
loop
jecxz
addl
repz
ss
clc
aad
rol
repnz
repz
cmc
in
stc
sub
and
jmp
fmul
fcmovbe
repz
ret
mov
jmp
or
fucomi
lock
icebp
icebp
enter
cmp
into
repnz
int
aam
sbb
out
call
xchg
in
loope
loopne
xor
out
in
loopne
sti
sti
cmp
mov
jmp
push
mov
jmp
aad
iret
aas
rol
aad
push
inc
push
or
pop
xor
test
jle
jmp
mov
out
xchg
xchg
xor
les
lock
cmc
in
in
cld
cld
idiv
call
in
xchg
jmp
in
clc
out
fcmove
div
cmp
in
in
stc
fstp
mov
jmp
in
mov
int
in
das
lret
lock
rcl
cmc
cmc
filds
inc
out
loope
out
loope
cmp
clc
ror
leave
aad
in
icebp
and
aad
sbb
into
lea
lret
out
fcmove
lret
fsqrt
shr
hlt
stc
std
icebp
fld1
out
mov
call
test
out
xor
out
repz
lret
aad
into
xor
leave
aam
fldpi
nop
jmp
xchg
in
lock
aam
imul
cld
jmp
repz
test
xchg
mov
test
xchg
loop
out
xor
rol
repnz
hlt
clc
test
stc
repz
aam
test
hlt
nop
into
int3
ror
in
fcom
clc
out
jmp
les
call
and
into
rcr
xchg
xor
repz
int
cmp
lret
fucomp
aas
idiv
in
sti
aam
fadds
in
xchg
repnz
enter
xor
cmp
call
mov
repz
test
jmp
jmp
sti
idivb
cli
jmp
filds
out
test
imul
fdivr
sti
xchg
iret
mov
out
fdivrl
add
cmc
and
int
out
into
iret
jmp
lret
out
hlt
shr
cmp
shl
jecxz
jmp
ret
xchg
jmp
shl
das
lret
ss
aaa
idivb
std
fdiv
inc
call
fmulp
jmp
xchg
lret
aaa
sub
cli
fdivr
cmp
aaa
iret
loopne
not
out
icebp
cli
fcmovnb
or
test
out
jecxz
in
iret
iret
sub
int3
fsubr
test
xchg
leave
filds
cli
orl
in
fnstcw
std
sti
jmp
fcmovbe
cmp
xlat
fucomip
iret
aas
cmc
out
in
cmp
aas
xor
shl
neg
or
xchg
aad
lret
test
lock
jmp
rol
hlt
std
loope
fdivp
incb
mov
fdivrp
rcl
shl
icebp
rcl
fmul
repnz
aad
in
rcr
clc
sti
aas
xchg
fsubr
cmp
xchg
sub
jmp
aas
into
lret
leave
aam
dec
jo
sbb
outsl
jle
test
jle
into
repz
call
fucomi
call
in
cmp
repnz
addb
xchg
loop
xor
xor
stc
cmp
aas
loopne
cmc
xor
xchg
clc
incb
out
loopne
lret
fdivr
cmp
cmc
icebp
rcr
sar
in
loopne
cld
mov
lock
jmp
lret
ljmp
cli
fneni(8087
into
cli
lock
mov
xlat
fsubp
testl
aad
fucomp
jmp
cmp
ds
lret
loop
mov
dec
rcl
leave
iret
out
lret
into
fdivp
cld
out
loope
fld
sar
in
call
test
lock
in
loop
sub
xor
ljmp
out
in
fsub
test
fdivp
out
in
xor
aam
std
leave
push
cmp
rolb
ljmp
popl
shl
int3
into
aaa
stc
in
testl
ret
call
fiadds
cmp
lret
fdiv
aam
ror
cmp
loop
xlat
jmp
loope
xchg
xchg
lock
lds
not
fdivr
icebp
cmc
loope
ljmp
clc
repz
in
fmulp
adcl
iret
lret
ss
loopne
cld
std
lock
cmp
loope
call
test
aam
cmp
iret
jmp
cli
fdivrs
out
cld
mul
repz
out
jmp
int3
fmull
xlat
hlt
clc
icebp
xor
iret
out
out
cld
shl
cmp
cld
add
jecxz
test
ljmp
incb
clc
jmp
iret
fdivr
sbb
mov
cli
jecxz
decl
out
out
sar
cmp
cmp
fcmovbe
aam
std
xchg
repnz
enter
ljmp
enter
imul
leave
cli
idiv
into
loope
loop
aaa
ret
out
ret
cli
test
leave
into
xchg
shl
fmul
xor
cmp
aad
fiadds
in
jmp
sbb
in
shl
rcr
div
into
jmp
into
std
rcr
aas
ffree
sti
clc
loop
les
repz
xchg
xor
ljmp
stc
lock
stc
ret
ljmp
loope
in
call
imul
shr
call
xlat
clc
sti
test
cld
mov
addb
loope
xor
out
lret
or
push
jmp
int3
ret
int3
int3
sahf
pushf
gs
cmpsl
adc
les
jle
add
in
xor
cmp
test
out
xchg
xlat
loop
faddp
xchg
rcl
imul
not
cmc
aas
int3
int
and
mov
mov
iret
xor
rcl
repnz
pushl
out
ds
out
icebp
aas
iret
sbb
xchg
sti
xlat
out
fcmovne
jmp
hlt
xchg
fdivrs
fmul
sar
int
ror
cmp
sub
xchg
loopne
fldl
enter
aad
rcl
aam
std
fcomi
shl
fsub
lret
call
faddp
xchg
loop
stc
sub
repnz
out
call
cmp
jecxz
into
iret
test
jecxz
lret
adcl
icebp
into
xor
cmp
fmul
neg
ds
test
testl
adcl
ror
int3
roll
cmp
orl
test
mov
aad
xor
lock
repnz
lock
ret
std
cmpl
out
in
std
mov
xchg
repnz
int
out
shll
enter
leave
ds
in
sbb
xlat
lds
or
int
jmp
xor
out
into
std
in
ret
mul
sub
fcmovnb
int3
sub
out
fldl
xor
int3
rcr
jmp
shl
addb
in
lret
icebp
rcr
cmc
int
cmp
ror
xor
cmp
cmp
adc
stc
loopne
imul
sti
cld
fnstsw
lret
xchg
lock
jmp
cmp
jecxz
sar
idiv
ljmp
sti
fsub
mov
notb
iret
lock
repz
cmp
xor
jecxz
fsubp
sti
mov
leave
mov
enter
addb
icebp
leave
aad
lock
repnz
jecxz
mov
rolb
hlt
leave
enter
fsubr
not
std
ds
aam
addl
icebp
fucom
jmp
xor
out
out
fdiv
lret
fucomi
cmp
test
xlat
mov
fsubrp
stc
leave
out
lret
mov
iret
enter
rcr
iret
into
loope
shl
lret
in
fists
icebp
test
ss
xor
shll
loope
aad
shl
shl
xchg
idiv
jmp
int
test
aam
into
ljmp
shl
ffreep
out
ror
mov
cli
fcmove
enter
rcl
aam
jecxz
dec
or
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
adc
jle
test
jle
ret
fdiv
loopne
call
and
std
icebp
aad
in
in
leave
fcmovne
xor
loop
loope
aad
cmc
cmc
in
idiv
in
and
xor
loope
fnstcw
out
clc
icebp
fnstenv
sbb
xlat
or
nop
int3
call
xor
stc
cld
out
loope
std
sti
aad
rol
filds
mov
out
mov
fmul
leave
cmp
cmp
idiv
incl
idiv
and
out
fmull
xchg
rcl
rcl
fsqrt
cmc
ss
in
ret
aad
neg
in
fimull
mov
and
in
sti
icebp
std
cld
xor
hlt
cmp
adc
loopne
test
jecxz
xlat
ljmp
loopne
in
ret
out
sar
out
ljmp
stc
sti
out
mov
in
adc
jecxz
mov
cs
sub
fst
sti
idivb
shl
cmp
jecxz
neg
mov
icebp
in
adcb
out
int3
fcmove
leave
sbb
repnz
call
jmp
sub
in
ljmp
in
fnstenv
in
ljmp
icebp
in
clc
sti
cli
loop
fimull
loopne
lock
xor
lock
lret
out
aas
iret
loope
lock
icebp
fcomip
hlt
test
ret
xchg
hlt
xchg
shl
xor
cmp
lock
test
test
clc
loopne
shl
aad
jmp
call
cmc
repz
fstpt
aad
fcomp
or
jmp
enter
in
enter
cmp
cmp
cmp
cmp
rcr
ret
fidivrl
xchg
filds
in
hlt
ret
clc
aam
ljmp
iret
stc
test
shl
loope
or
nop
fdivrp
xchg
xchg
das
jmp
test
movb
iret
cld
and
mov
cmp
sub
in
div
fmul
cld
test
out
out
in
loopne
add
test
in
fisttps
in
rol
int
cli
stc
loop
aad
ret
clc
not
out
enter
decl
in
ror
cmp
fnstsw
cmp
fcmovnu
ds
fadd
in
out
icebp
out
out
xlat
out
int3
enter
sar
cmp
rcl
cmc
faddl
or
loopne
dec
adcl
out
cli
into
cmp
xlat
out
cmc
iret
idivb
rolb
testl
add
int
iret
rcl
aad
inc
xor
add
sti
cwtl
ja
jle
add
out
repz
int
into
int3
lret
ror
cli
xor
xorb
test
sti
movb
sti
repnz
testb
fcmovnu
lret
lret
jecxz
rcr
out
decb
clc
ljmp
cmc
rcl
fcmovbe
lret
out
in
lret
lret
cmc
int
xor
ljmp
repnz
std
xchg
xor
shl
call
rol
loop
filds
leave
loop
xchg
ljmp
in
idivb
lret
fadd
xlat
clc
mov
loop
call
xchg
mov
in
cmp
xlat
fstp
hlt
call
in
cmc
adc
jmp
ljmp
jecxz
ret
fcmovbe
int
hlt
ljmp
lock
jmp
ffree
fisttps
out
lock
in
xor
xor
call
in
jmp
and
in
mov
xor
cmp
cmpb
jecxz
xlat
ret
xor
cmp
iret
fcmove
xchg
rolb
cmp
in
cmp
fcmovu
out
cmp
into
int
testb
loope
fmull
jmp
int3
xor
idiv
cmp
in
loope,pt
mov
sub
mov
mov
stc
jmp
cmp
out
sar
cmc
lock
cld
mov
bnd
fcomip
xlat
mov
mov
jmp
lret
iret
idivl
xor
cli
ret
filds
incl
divb
shlb
das
fstp
aam
in
in
adc
clc
mov
xlat
stc
iret
shl
ljmp
aam
call
fcmovu
idiv
sar
cld
ljmp
cld
repz
xchg
ret
lock
lock
rol
cmp
loop
faddp
fucom
in
fiadds
loop
mov
ljmp
repnz
loopne
std
hlt
sar
loope
faddl
out
fdivr
nop
std
fisttps
leave
fpatan
repnz
lock
hlt
aad
ret
sti
nop
mov
shr
xor
clc
repnz
icebp
cmp
clc
test
aam
stc
jmp
fmul
lret
nop
xchg
xorl
into
aam
fcmovnbe
clc
sar
cmp
out
cli
inc
fimuls
out
mov
int
repz
leave
into
sarl
out
ffree
clc
out
ds
mov
lret
ljmp
out
jmp
xor
adcl
add
jmp
mov
fcmovnu
or
sub
sub
jle
add
lret
cmp
fdivr
cmp
fidivrl
fcos
out
lret
test
aad
loopne
out
out
in
iret
xor
cmc
incb
mov
loope
mov
lret
out
lret
call
fcom
aad
xor
in
addl
xor
mov
repz
repz
cmp
out
aad
in
cmp
aam
hlt
cmp
xchg
test
jmp
test
aam
leave
cmp
aad
enter
cld
rcl
into
fcmovu
in
cli
out
cld
into
out
call
fsubrp
icebp
xor
repnz
dec
movb
idiv
fnstsw
addb
das
xor
fdivr
xor
lret
int3
fdiv
icebp
aad
rcr
rcr
cld
enter
jmp
into
test
cmp
fldln2
icebp
out
lret
cld
ret
sbb
test
sar
mov
int
int3
jecxz
jmp
imulb
lret
in
ss
shr
shll
sbb
ret
testl
in
sar
shlb
xlat
stc
clc
fcmovnbe
cmc
ror
test
flds
lret
shl
sub
cmp
xlat
cmp
int
cmp
fnstcw
xchg
xchg
ret
xlat
div
fsubr
rcr
in
cli
out
loopne
enter
aam
enter
test
loope
out
iret
in
clc
xor
fmul
fidivrl
repnz
fcomp
mov
ret
aad
out
repz
idiv
loopne
out
cmp
or
rorl
jmp
aad
xlat
iret
lret
lock
aad
idivb
icebp
jecxz
out
in
xor
mov
iret
ror
out
loope
into
in
cmp
repz
decl
jmp
cmp
aaa
shl
sti
cld
out
enter
cmc
shl
clc
fcmovb
inc
cmp
xchg
fldl
into
out
jmp
jmp
lock
out
cmc
test
addb
out
xchg
xchg
out
das
ret
into
fdivrp
cmp
test
fdivp
repz
cmp
test
mov
out
lret
in
std
shlb
fdivr
aam
aas
incl
frstpm(287
in
lret
lret
hlt
shl
aam
ljmp
aad
or
cmp
in
adc
fisttpll
mov
repz
cmp
xor
std
clc
hlt
cmp
push
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
mov
jle
test
jle
fadds
jmp
mov
xlat
loop
out
iret
int
int3
sub
cli
leave
enter
hlt
ret
cmp
mov
ljmp
rcl
xchg
xor
cli
div
xlat
fdivr
loop
cld
in
icebp
in
mov
xlat
addb
jecxz
hlt
lret
jmp
cmp
fcmovb
shl
jecxz
cli
xchg
fcmovnu
jmp
lret
iret
jmp
loopne
lret
cmp
jmp
addl
loope
in
xchg
icebp
xchg
fmulp
loopne
jmp
loope
sub
xlat
cmp
addb
fxch
loope
repnz
cmp
xor
hlt
ljmp
ds
fadds
fisttpll
jecxz
rolb
cmp
cmp
in
jmp
out
stc
fcomi
nop
jmp
les
int3
out
cmp
int
out
loope
iret
fdiv
cmc
ret
aad
out
xlat
mov
sub
icebp
xor
aas
rcr
cmc
stc
stc
fiadds
mov
mov
xchg
in
in
aad
lret
xor
fsubp
fcomi
cmc
roll
bnd
in
icebp
nop
jmp
into
loopne
lret
loop
jmp
lock
lret
fcom
sarb
sar
enter
hlt
idiv
in
loopne
loope
mov
out
in
into
in
out
iret
ds
cmp
cli
call
loop
enter
in
loope
ljmp
rcl
imul
fnstcw
out
aam
aam
in
enter
out
ret
cld
cmp
out
jmp
out
rcl
ret
addb
decl
jecxz
xor
clc
ljmp
hlt
cli
ds
sti
test
cmc
jmp
ret
loop
nop
jmp
xor
mov
int
aas
hlt
not
cmpl
jmp
ljmp
xchg
out
xchg
loopne
call
repz
jecxz
aas
fildl
mov
in
mov
bnd
out
lret
das
idivl
ljmp
out
hlt
in
lock
repnz
aas
neg
iret
out
cli
shl
loopne
shlb
loop
call
fdivrl
shl
test
jmp
shl
loope
out
aaa
jecxz
xlat
cli
in
aad
loopne
loope
aad
aam
hlt
test
out
loope
call
lock
sarb
rcr
xchg
loope
fsubp
mov
std
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
std
jl
je
jg
jle
add
fmul
nop
lret
xchg
and
std
std
fld1
cmp
cli
roll
std
jecxz
cld
xchg
cld
lret
mul
out
repnz
cs
fdivrp
cmp
in
sub
idiv
fcomi
lret
in
out
mov
repnz
aam
divb
call
sti
shll
fptan
repz
fcmovne
int3
aam
shl
ljmp
jmp
xor
repz
ret
fdiv
stc
sti
out
xchg
ret
in
repz
loopne
aas
fsub
fdivp
shl
call
repnz
out
repnz
rcr
lret
cmpl
cmc
rcr
push
stc
hlt
ret
xchg
xchg
lea
shl
out
repz
ds
cmp
cld
mov
jmp
mov
in
mov
clc
repz
ror
test
fadd
int3
ds
incl
cmp
lock
shr
xchg
lret
divb
cmp
clc
into
test
repnz
rcr
movb
xor
rol
cmc
xor
leave
cmp
fcos
hlt
clc
shl
xchg
movb
mov
sub
in
into
das
cmp
cmp
sti
jmp
fnstsw
iret
sbb
ret
call
mov
xchg
sub
jmp
in
ror
repnz
fsubp
test
in
test
fisttps
xchg
nop
lret
lock
ljmp
loop
clc
lret
nop
dec
lock
rcll
lret
out
leave
call
cmp
sti
stc
mul
out
test
jmp
jmp
shl
xor
fcomip
jmp
sbb
fildl
lock
aaa
loopne
aam
aad
cmc
in
cli
clc
xlat
sti
cli
lret
ret
sub
icebp
repz
fdivl
cmp
aam
out
out
in
incb
int
out
mov
fidivrl
fcmovnbe
ss
cmp
shl
std
out
rcl
in
in
out
sti
int3
rorl
in
xor
test
xlat
test
cmc
loop
loope
int
fucomi
hlt
loop
rcl
in
lret
out
aad
cmp
cmc
loope
rolb
jmp
lret
nop
stc
loopne
jmp
xchg
repz
out
aad
cmp
xor
ret
cmp
faddp
in
loopne
jecxz
xchg
xchg
xchg
test
test
add
add
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
mov
add
add
test
jle
xor
repz
ror
int3
into
fbstp
adc
call
cmp
mov
leave
jmp
out
iret
out
bnd
fsubr
into
repnz
testb
cli
mov
std
mov
fsubr
call
sarl
adc
adc
fucom
loopne
xchg
clc
out
addl
xor
call
in
int
cmp
ffreep
test
shl
addb
dec
jmp
loope
hlt
out
out
fdivrl
repnz
in
out
mov
test
jmp
sub
mov
out
ljmp
cli
into
int
cmc
adc
fimull
fimull
out
rol
in
lret
cli
out
lock
into
aad
ds
cmc
lret
out
incb
shl
stc
enter
stc
shl
aas
int
mov
mov
lock
hlt
shr
shr
les
in
loope
jmp
ss
faddl
mov
in
lret
fldt
rcr
ljmp
adc
ljmp
mov
hlt
clc
xor
neg
cmp
aaa
cmc
loop
out
aad
icebp
fsub
jmp
out
aam
mov
aam
int3
icebp
repnz
fidivrl
sti
cmc
test
mul
in
cmp
icebp
xchg
ror
jmp
cmp
cmc
fdiv
aad
in
shr
testl
aas
int3
int3
ret
out
lock
leave
sti
int3
idivb
out
neg
neg
lret
not
fstl
jmp
int3
xlat
loope
lret
clc
cli
sbb
cmc
and
test
fmulp
aam
enter
out
cmp
ss
shl
out
out
aam
rolb
leave
xchg
sti
call
ret
out
cli
fneni(8087
cmp
iret
sti
in
jecxz
ret
sti
lret
into
fcomip
lret
ljmp
iret
ss
out
fstpt
rol
rol
in
shr
loope
in
lret
enter
loop
adcl
ljmp
in
repz
aad
hlt
out
mov
stc
out
rcll
loope
aaa
jmp
fdivrs
jecxz
out
fsubr
fisttpll
loop
idiv
les
clc
cmp
shl
sar
repnz
sbb
xor
mov
shr
repz
out
shl
aam
xor
mov
jmp
cmp
jmp
into
int
xlat
dec
out
push
jg
test
jle
shl
fcomi
std
ds
jmp
in
repnz
testb
div
fsubr
sar
into
aas
loope
fiadds
out
loop
and
cld
lret
mov
repnz
in
jmp
into
jmp
sti
cld
std
les
loope
out
loope
rolb
ror
lock
fbstp
rcl
std
in
jecxz
repz
std
fcom
test
jmp
loope
fists
imul
shlb
out
rcr
cmp
fcmovnu
movb
out
in
repz
ret
sar
cmp
cmc
idivb
f2xm1
aas
cli
rcr
jecxz
lret
addb
out
int
imulb
test
aam
ss
rolb
shl
repnz
and
jmp
in
aaa
std
clc
loopne
loopne
test
ds
ffree
fsub
ljmp
fsub
xchg
das
cmp
cmc
cmp
out
lock
cli
aas
aaa
not
aas
cld
clc
fimull
jmp
enter
int
cmp
out
out
repnz
rol
in
cmp
out
sub
test
xor
out
in
enter
mul
fcomi
cli
clc
call
loope
jmp
cld
xchg
nop
mov
xchg
shr
enter
ss
lock
in
loopne
xlat
test
aad
rol
enter
xchg
fstl
call
cmp
icebp
iret
sub
rol
and
mov
int
test
aad
xor
iret
std
stc
icebp
clc
repnz
sar
in
ror
aad
sti
fucomi
xchg
in
fsubp
shl
ljmp
sar
sti
lock
hlt
add
cmc
cmc
out
cli
leave
jmp
call
cli
neg
out
fcom
int3
lret
stc
xchg
adc
out
out
rorb
enter
xor
cmp
int
xchg
roll
out
int
nop
orb
int3
lock
aas
rol
int3
in
idiv
flds
stc
loopne
icebp
out
sbb
adc
ret
in
cmp
cmp
xor
icebp
rolb
hlt
dec
stc
fiadds
xlat
jmp
call
rcr
xor
rorl
lret
fisttps
icebp
repz
fmul
ss
shl
loop
jmp
jecxz
fisttpll
std
nop
mov
not
lret
ror
hlt
in
xlat
cmp
rcr
call
jne
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
dec
mov
int3
loope
shrl
lret
cmp
lock
cmp
jecxz
cli
ret
rolb
or
lret
aas
shl
out
cmp
lret
clc
sti
test
and
cld
rorl
aam
out
cld
lock
fdivrl
shl
rorl
adcl
repz
sarl
clc
loopne
rcl
lock
out
iret
icebp
ret
aam
loop
out
lock
icebp
repz
int
das
out
or
cmp
mov
jmp
xor
xor
out
ss
out
fmul
jecxz
cmp
jmp
xchg
in
repnz
into
call
loope
idiv
fstp
ds
rol
hlt
aad
jmp
jecxz
out
xchg
jecxz
mul
loope
lock
cmc
out
aad
rcl
fcmovbe
sti
sti
xlat
test
test
ret
incl
out
fcmovu
in
repz
repnz
fidivrs
fiadds
clc
stc
in
std
ljmp
in
in
repz
fdivrp
cmc
loopne
jmp
clc
xor
jmp
addl
fdivp
int3
clc
int
lret
fcomp
leave
cmp
aas
shl
jecxz
aam
jmp
xchg
aad
call
std
cmp
repz
fstp
hlt
test
or
aad
fcmovbe
xchg
loopne
jmp
xlat
enter
cli
fdiv
rcr
fsubr
fdivr
jmp
les
loop
xor
stc
jmp
repnz
hlt
out
xor
rcr
sbb
ret
in
jecxz
nop
in
call
aam
das
int
aam
test
int
cli
aas
cmp
clc
cmp
mov
mov
jecxz
xor
fsincos
call
test
repz
std
lea
out
call
cmc
cmp
out
sar
ret
loope
xchg
shr
jecxz
stc
iret
in
cmc
xor
repnz
adc
cmp
decl
shl
std
xor
xor
call
fidivs
adc
icebp
sti
fsub
repnz
sti
fildl
iret
jmp
ljmp
not
fcmovne
int3
hlt
std
cmp
jmp
fcmovu
mov
jmp
xlat
xlat
icebp
out
stc
cmp
fcmovnbe
int
std
rcr
sti
mov
into
in
xchg
jmp
orl
sub
push
orl
jmp
aam
ror
fcomp
aam
aas
idivb
popf
or
test
jle
repz
lock
cmp
aam
in
fmul
int
repnz
xchg
icebp
repnz
out
sarl
rcl
rol
in
jmp
leave
fmull
std
xchg
jecxz
repnz
vcvtpd2dqy
cmp
shl
loop
in
sti
call
out
iret
decb
lret
cld
iret
out
ss
fcmovnu
cmp
roll
jmp
in
test
test
loop
cmp
cld
lret
fildl
into
fucomip
mov
jecxz
call
decl
loop
xlat
int3
out
rcl
aad
jmp
out
in
sub
repnz
shl
and
xor
cmp
in
into
cli
cmp
ret
fcom
test
clc
loop
lds
mov
orb
aaa
in
cli
jmp
sarb
loope
jmp
test
movl
fsubr
lret
sti
stc
aas
fcomi
xchg
fmull
test
mov
xchg
shlb
in
call
iret
std
loop
loop
fst
xchg
xchg
ljmp
xchg
repnz
loopne
leave
cmp
cmp
idiv
ret
repnz
lds
loopne
xchg
fucom
xchg
cmc
jmp
xor
aas
jecxz
std
imul
jmp
std
add
std
adc
fscale
lds
repz
cli
cmp
out
hlt
hlt
in
in
test
ljmp
cld
enter
dec
icebp
cmc
hlt
mov
repnz
xlat
out
mov
out
in
and
iret
lock
stc
lock
loop
testl
test
repz
div
in
out
into
cmp
lock
rol
int
f2xm1
ret
ret
loop
cli
mov
cmp
sti
repz
in
lds
fmul
iret
shlb
cmp
lock
out
clc
not
ljmp
mov
into
xor
out
aam
repnz
cmp
out
sti
lock
out
iret
stc
flds
fdivr
icebp
int
loop
xchg
in
leave
cmp
out
iret
fcom
addl
sti
iret
loope
adc
test
cld
aad
cmp
xor
out
cmp
sti
and
clc
lret
test
nop
into
rorl
ss
cmp
std
into
iret
xor
int
cmp
ljmp
in
xchg
lock
xor
aam
repz
ja
add
add
add
inc
or
outsb
sub
add
inc
or
ret
add
rcl
aam
ret
sarl
lcall
test
jle
out
rcr
in
ds
mov
mov
icebp
int
hlt
lock
ljmp
aam
sti
repnz
test
out
test
mov
mov
shl
cli
fnstenv
in
aad
jmp
fildl
in
jecxz
call
iret
call
in
shl
jmp
aam
fidivs
in
ret
repnz
fildl
test
mov
mov
repz
loope
clc
sarl
out
enter
div
test
aad
stc
mov
out
cmp
ret
idiv
repz
cmp
icebp
shl
cmp
out
ljmp
fucomi
int
xchg
xchg
ljmp
idiv
rcr
clc
ret
sar
test
loop
into
in
call
out
clc
in
cmc
sar
aaa
ds
rol
clc
out
neg
fldl
out
in
int3
aas
bnd
shl
fldpi
cmc
imul
fcmovne
shl
in
test
mov
leave
sbb
lds
xor
repz
fdivp
call
adc
out
repz
ret
enter
loopne
xchg
mov
cs
out
fidivrl
fdivrs
xor
out
testb
aad
in
xchg
cld
ljmp
fldpi
lret
lret
fcmovu
test
loop
fildl
test
ror
into
xlat
out
aaa
lock
cmc
shl
fst
repz
int
sbb
in
call
vpsubusw
loopne
icebp
hlt
xlat
xchg
test
mov
mov
jmp
push
shlb
aam
fcmovbe
roll
sbb
filds
fmull
loopne
aam
cli
cmc
sar
shr
cmc
ret
cld
sti
rcr
fcomi
addl
loopne
xchg
shr
sub
sti
clc
fucomip
roll
repz
call
fisttpll
mov
das
in
in
clc
cmp
loopne
cmp
in
rol
xchg
loop
mov
out
fucomp
out
in
in
ljmp
lock
int
int3
rcl
in
stc
idiv
in
jmp
sti
addb
aas
loop
sub
fdiv
repz
fcmove
out
sarb
call
stc
jmp
mov
imull
xor
neg
lret
cmp
aad
fucomi
in
decl
in
xchg
shlb
fcomi
xor
lret
repz
in
shl
std
shl
jge
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
icebp
xchg
inc
cs
movq
add
inc
cmp
xchg
xchg
out
lock
xor
cli
lock
cmp
aas
cmp
xchg
xlat
jmp
loopne
stc
loope
iret
std
mov
in
out
aaa
sti
xor
fcmovnbe
int3
lock
rol
jmp
loope
xchg
fucomp
xor
enter
cmp
fpatan
rcr
fsub
testb
out
fldl
cs
xor
fdivs
cld
in
stc
iret
clc
loopne
loopne
in
call
xchg
enter
int3
int
fildll
fidivrl
cld
xor
cmp
cmp
fstp
fdivp
stc
cli
test
mov
loope
test
xchg
sar
int
sar
fcom
fcomp
imul
lret
sbb
fptan
mov
neg
add
int3
lock
jmp
cld
jmp
into
aaa
out
ret
orl
xchg
lock
stc
into
in
sti
aam
loopne
cld
shl
shr
fdivrp
cmp
xlat
fmul
orl
pop
lock
lret
cmp
repnz
test
jecxz
cmc
out
loope
into
std
lret
lds
iret
jecxz
fcmovbe
cli
fcmove
rcr
sar
icebp
xlat
les
ror
fistl
xor
lret
cmp
fldl
decb
int3
iret
out
xchg
sub
in
xor
out
in
cmp
into
roll
out
call
leave
ret
in
xchg
int3
repz
jecxz
cmp
das
leave
cmp
out
int
in
fcmovb
enter
fcmovu
cld
repnz
rcr
lret
sarl
xor
aad
ret
cli
ds
cli
or
lret
int
enter
shll
ljmp
ds
loop
fsub
fstpt
xchg
iret
in
in
icebp
ss
ljmp
test
roll
aas
orl
xchg
das
hlt
aad
rcl
fidivrs
jmp
sarb
jmp
stc
test
in
xor
hlt
in
out
iret
sub
roll
in
neg
into
in
mov
cmp
into
call
shr
div
ds
cli
lret
call
xchg
repnz
std
das
out
cmp
sar
ret
test
rolb
adcb
xchg
out
shl
in
fstpt
lock
lret
ljmp
mov
ljmp
call
movb
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
ret
cmp
jg
test
jle
xchg
call
rcl
xor
clc
cmpb
loopne
cli
fldl
les
int3
lret
rol
in
xor
cmp
fsubr
cmp
int
in
test
jecxz
cli
ret
dec
fmul
in
mov
ret
out
aaa
ss
clc
ret
std
lock
loop
cmp
roll
xor
lock
cld
stc
sbb
xlat
repz
lock
sti
fmul
in
enter
enter
out
in
in
into
in
xor
test
cld
ret
stc
loop
fcomi
xchg
out
loopne
flds
ret
out
jecxz
fcmovbe
hlt
call
test
jecxz
sub
hlt
loop
cld
iret
jmp
shr
fdivs
aad
out
aad
xchg
xor
enter
fsubr
repnz
cmc
xchg
out
loope
int3
xor
cmp
into
leave
sti
iret
in
cmp
iret
clc
loop
ret
mov
and
leave
iret
out
loop
hlt
stc
fsubr
fdecstp
in
aas
fdivrp
in
ret
fadds
repz
jmp
lock
call
xor
in
out
int3
ljmp
hlt
sar
jmp
stc
in
loopne
ljmp
out
call
cmp
test
testb
mov
lret
xor
out
xor
int3
repz
xor
aas
ret
shl
ret
fcmovne
xor
lock
xchg
int
in
fcmovnbe
int
enter
fcmovnb
out
cmp
cmc
xchg
cld
jmp
ljmp
loop
in
cmp
lret
jmp
in
adc
ftst
loop
loopne
cli
fcomip
ljmp
cmp
cmp
idiv
in
repnz
idiv
stc
cli
jecxz
lret
test
or
shr
xchg
rol
aam
ror
fsub
aaa
fdivp
cmpl
clc
xchg
and
mov
mov
orl
sti
leave
cmp
fucomi
into
lock
test
mov
out
test
aam
repnz
fsubrp
cmpb
jecxz
out
test
mov
faddp
into
shl
mov
call
clc
ds
neg
cmp
test
cmp
mov
ljmp
mov
cs
cmpb
cmp
loopne
cli
not
in
inc
sti
loop
out
repnz
in
in
cmp
in
sar
cmc
jecxz
fprem1
rol
enter
loopne
jmp
loope
test
fadd
lret
fisttps
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
scas
and
data16
jle
add
cmc
int
out
loop
cmp
ds
ret
ljmp
mov
in
sti
jmp
repz
sar
mov
cmp
loop
int3
iret
int3
in
xchg
in
int
xor
xor
lret
std
fstp
in
fsubr
in
test
lret
int
into
loopne
iret
sar
mov
ss
stc
in
stc
iret
jmp
sti
clc
in
out
aas
aas
cld
lret
xlat
ljmp
icebp
rcr
cli
sti
out
out
cmp
shl
ret
out
shl
ffreep
rcl
jmp
test
fucom
out
in
into
xlat
int3
les
in
sti
int3
aad
int3
xor
cmp
loope
enter
in
fimuls
hlt
lock
jmp
into
aaa
lret
repz
cmc
rorb
loop
fcoms
enter
shr
in
sti
cmp
fabs
xchg
fdivr
not
shl
xchg
ljmp
ret
cli
repnz
rcl
xor
shr
loop
out
rcl
hlt
icebp
in
ss
into
mov
jmp
loopne
lock
cld
into
repz
ljmp
in
test
out
mov
stc
cmp
in
lret
ds
aaa
icebp
cmp
stc
testb
loopne
loope
incb
xor
in
cmp
rcl
cmp
test
fcmovnb
and
sub
shr
xor
xor
test
ds
mul
aam
jmp
fmull
cmc
or
shlb
shl
das
sar
sarb
add
add
std
in
std
ljmp
sub
jmp
iret
icebp
imul
fsub
fst
icebp
repz
in
mul
loop
xchg
jmp
clc
clc
shl
cmp
clc
hlt
fucomp
cld
ror
lret
mov
sti
movl
repz
clc
sarb
stc
cli
loop
aad
test
clc
ftst
leave
lock
lret
sarb
out
sub
fdivr
xor
sti
int3
loope
in
xchg
cmc
fcom
clc
ret
cld
mov
lea
aad
stc
cld
incb
inc
cmc
loop
sbb
mov
int3
in
repz
sub
ss
sub
in
xchg
sbb
sbb
xchg
hlt
mov
sub
xlat
cmp
fmul
in
fucomi
in
loop
aad
addb
lret
ljmp
shr
xor
in
cmp
enter
aad
cmp
mov
ret
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
jecxz
jle
pop
jg
test
jle
rcl
sub
add
lret
icebp
mov
in
int
xor
cmp
out
jecxz
cld
testl
lea
fxch
repnz
lock
cmp
out
loopne
sti
int
enter
out
jecxz
enter
lret
clc
sti
cmp
int
loop
loop
repz
xlat
clc
mul
enter
fdivr
mov
xor
cld
jmp
fucomi
cmp
test
cmp
in
in
mov
std
fimuls
das
jmp
ljmp
aad
in
out
ret
cld
mov
std
xor
leave
int
int3
repnz
fucomip
jecxz
lock
shl
jecxz
out
xchg
leave
out
xchg
jecxz
cli
xlat
out
hlt
xor
stc
cli
out
int
hlt
jmp
xchg
jmp
shr
xor
out
ss
div
fdivrl
test
rol
sar
loopne
lds
mov
int3
loop
out
out
shl
int3
ss
cmc
cld
loopne
fdivrp
fcomp
stc
repnz
fimull
ror
mov
mov
into
in
ror
aad
out
ror
cmp
jmp
addb
hlt
or
xchg
xchg
xchg
shl
enter
cs
iret
roll
jmp
out
iret
in
fists
ret
cmp
fsincos
in
lret
cmp
in
cld
cli
vpsubq
stc
fdiv
std
cld
fdiv
xchg
out
xor
iret
fdiv
lret
out
clc
lock
clc
fidivrl
in
xchg
enter
xchg
test
and
aam
sar
in
ror
loop
repnz
xlat
cmp
out
out
cld
and
int
xchg
in
jmp
in
cmc
cmp
fdivrs
fdivrs
sti
test
idivl
repz
cmp
lret
fsubr
into
out
hlt
cmp
hlt
out
out
cmp
cmp
into
icebp
hlt
shl
ljmp
leave
std
test
loope
cmp
repz
ror
clc
aas
test
bnd
ret
int3
faddl
int3
shr
ljmp
icebp
fcomi
icebp
cmp
faddp
loope
sti
mov
jmp
in
fnstsw
out
ljmp
int
hlt
lock
test
fildl
leave
roll
xor
rcl
cmp
mov
int
out
ljmp
shr
icebp
lock
imul
clc
loopne
shl
ljmp
loopne
lea
push
pushl
call
jmp
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
xlat
pop
xchg
cmp
jg
test
jle
rcl
in
xchg
repnz
call
stc
fildl
shl
loope
fdivr
rolb
xor
shl
cli
cli
fucomp
lret
leave
lret
xlat
add
cld
ret
cli
xlat
fcompp
ftst
lea
div
shr
sarb
fcmovne
fstp
sarb
in
call
addb
cmp
cmp
ss
leave
rcl
sti
sar
enter
mov
fmuls
sub
divl
int3
out
jmp
shr
fsubr
repz
in
ror
in
call
ret
shl
lock
out
addl
incl
repnz
leave
ret
fdivl
std
fdivrp
fxch
aam
in
shl
in
int3
clc
sti
enter
leave
xchg
ret
ret
out
fdivs
jmp
shl
cld
jmp
fcompp
roll
shl
xor
lret
xor
sbb
hlt
cmc
xchg
call
loop
faddl
out
xor
cmc
fsubr
aam
cmp
test
into
jmp
out
lret
xlat
out
shl
hlt
cmc
out
cmc
loop
and
cmp
fcmovnu
rcr
leave
test
lret
shr
jmp
lret
fcmovbe
loopne
imul
aam
std
xchg
loop
fimuls
mov
rol
loop
fcmove
div
call
aas
mov
cmp
int3
cld
into
lret
iret
cld
out
repnz
iret
jmp
hlt
icebp
into
stc
rcl
aas
aas
rcl
in
test
xchg
rorb
lock
lret
fcmovbe
iret
not
and
fdivrp
std
addb
aam
aam
repnz
call
test
sbb
testb
fisttpll
in
call
xlat
out
out
shr
shl
int3
cli
xor
cli
xchg
in
sub
shr
lret
cli
leave
lds
ds
cmp
xlat
les
lret
fcompp
sti
leave
sti
shl
xor
icebp
iret
int
fidivl
rcr
loope
iret
std
ret
xchg
out
mov
orl
sarl
fsubr
loopne
cmp
hlt
stc
loope
loop
xlat
loope
jmp
test
jmp
out
fcmovbe
xor
cli
in
stc
clc
loop
push
mov
cli
jmp
ret
iret
adcl
cmp
jne
jmp
enter
rcr
adc
lock
dec
pop
fs
jle
add
aam
fstp
fcmovbe
fst
repnz
in
mov
into
addl
shll
out
out
leave
fmul
jecxz
div
incb
in
xchg
out
hlt
lea
icebp
test
jmp
cli
filds
mov
xlat
in
xchg
mov
cmc
fld1
std
rcl
enter
cli
or
aas
add
in
mov
fildl
aad
fidivrl
in
hlt
lock
xlat
in
ds
fsub
loope
cmc
imul
test
repz
testb
fxch
in
aam
ds
loopne
cli
rol
clc
loop
xchg
sti
lea
ss
cmp
aam
ds
lret
fcmovu
cmp
aam
call
in
lock
shl
les
enter
hlt
fistpll
hlt
int
rcl
fsub
or
testb
in
lret
icebp
shl
int3
in
fidivs
lock
rol
mov
jmp
loope
lret
test
xor
int3
enter
repnz
rol
aas
xchg
xchg
adcb
in
xor
leave
aaa
icebp
lock
out
cmp
imul
repz
aad
test
movl
cmp
repz
fcmovne
shl
out
in
out
aad
ret
fmuls
lret
rol
out
ljmp
cmp
std
add
mov
lret
int
out
mov
cli
aad
std
sar
aas
cli
sarl
cmp
lea
out
jmp
out
rol
xlat
shl
hlt
out
cli
not
aad
fisttpll
fcoml
int
out
call
int3
xor
fdivrs
xchg
ljmp
ret
lret
fistl
lock
ljmp
in
fst
loope
fcmovnb
mov
int3
fdivr
fcomip
lret
rol
in
cmp
jmp
cmc
jmp
ds
sar
movl
mov
incl
cmc
in
cmp
idiv
loope
call
test
in
int3
leave
nop
into
shl
fcomip
repnz
jmp
into
xor
cmp
std
in
icebp
mov
out
out
stc
out
sar
xchg
xchg
out
rol
xor
sarb
fcmovbe
cmc
fcomip
call
loope
out
into
repz
xor
int
aad
cmp
clc
add
jmp
rcl
rcl
aad
mov
fisubl
pop
jg
test
jle
flds
lret
cld
mov
xor
in
mul
lret
in
loope
enter
loope
in
ljmp
lock
loop
aad
cld
sbb
add
ret
xchg
enter
jecxz
int
xchg
cs
fcom
addb
ljmp
ret
fucom
rcl
xchg
xor
jmp
ret
loopne
clc
jecxz
xchg
xchg
orl
jmp
aam
loopne
fldl2e
fcmovnb
xor
xchg
xchg
shr
int3
cmc
xor
xlat
cmp
fsub
int
cmp
into
out
fcmovbe
fiadds
in
fsubp
xchg
hlt
in
xlat
divl
fcomi
sti
xor
xor
jmp
rolb
and
mov
out
xchg
sub
cmp
cmp
lret
stc
clc
aad
xlat
cld
mov
lret
enter
ljmp
xor
das
stc
adc
cmp
enter
mov
nop
adcl
test
in
fsubrp
lret
out
fcomi
out
rorl
mov
out
shl
jmp
in
shr
out
cmp
call
shl
ret
xchg
aas
xlat
stc
rcl
in
xchg
fildl
rcl
ror
stc
cmp
aam
aam
int3
cmp
shl
rcl
fcmovu
std
lret
add
testb
shl
std
idivb
aam
repnz
fdivr
cmp
xchg
out
stc
leave
sti
lret
mov
lret
in
xlat
fnstcw
lock
stc
in
ror
fadd
test
aaa
icebp
aaa
cmp
in
cmp
out
faddp
enter
fsubrp
in
xchg
iret
into
xlat
ljmp
ds
cmp
stc
test
shl
ret
repz
loopne
frstpm(287
jmp
int
out
lock
das
out
repnz
aad
shll
cmp
divb
loope
fdivrl
cmp
mov
sub
testb
out
fidivs
loopne
cmp
fcmovb
sti
into
ret
idiv
enter
sub
xchg
out
adcb
rcr
xbegin
iret
lock
xlat
fmull
test
in
mov
adc
shl
in
enter
call
clc
aam
out
repz
cmp
int
iret
rcr
xor
fdivrl
cmp
jmp
fadd
out
mov
in
filds
jmp
rcl
lret
rcr
ficoms
cmp
jg
test
jle
mov
loopne
xor
out
hlt
xor
in
xlat
not
ds
les
int
xchg
in
lock
hlt
stc
lds
int
lock
xor
std
fucomi
jmp
out
fdivrp
mov
orl
repnz
iret
stc
clc
in
lret
cmp
loop
cmp
aam
rcr
fisttps
xchg
repz
sub
aad
lock
int3
hlt
or
out
rol
ret
ljmp
out
xchg
shr
lret
in
in
cli
ret
cmc
cld
in
fcmovu
shr
loope
aam
test
lret
in
shl
cmc
int
int
clc
repnz
int3
flds
fld
adc
shl
xabort
fiaddl
icebp
mov
into
fidivrl
out
call
cli
cmp
ret
clc
orb
jecxz
xor
call
cmp
test
out
cmp
clc
test
jmp
test
out
repnz
jecxz
fcmovnu
iret
push
ljmp
rorl
mov
out
jmp
hlt
lret
int3
shll
aam
loop
rcr
into
cli
mov
cli
fcomi
fimuls
shl
jecxz
icebp
iret
xor
fistpll
ss
cld
jecxz
loopne
test
out
jmp
in
hlt
test
cmc
xor
divb
ss
cld
repz
loope
ret
repz
jecxz
fucom
out
orl
std
repnz
out
icebp
das
into
int3
xlat
jmp
fld1
lock
in
ffree
decl
call
rolb
xlat
cld
out
sarb
div
repnz
fnstsw
xor
mov
int
fmull
out
call
lret
repz
int3
fnop
aas
repz
fsub
out
add
incl
mov
in
aad
shr
rcl
xor
std
aad
ret
call
loope
xchg
aam
ljmp
jmp
icebp
cli
aas
cli
ret
out
fyl2xp1
lea
repnz
loop
lret
das
rol
std
hlt
inc
fldl
fucompp
orb
icebp
out
loop
xor
ljmp
ds
mov
loope
out
nop
int
xchg
ss
clc
fcmovbe
jecxz
lock
xchg
enter
loope
mov
into
lret
out
cmp
cli
cld
repnz
repz
repnz
add
vshufps
fcmovne
aam
into
int
xor
mov
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
mov
jg
test
jle
test
into
stc
ljmp
repz
mov
sti
jmp
fimull
out
in
imull
int3
cmp
cld
jecxz
cmc
and
shl
stc
out
in
in
out
lea
xor
les
int3
ljmp
neg
in
repnz
cld
mov
int3
cli
rcll
lret
jmp
sbb
sar
aam
cmp
xchg
in
loope
ljmp
cmp
xor
fidivrl
xor
into
sub
mov
fcmovu
ffree
in
clc
xlat
lret
int
icebp
aam
xor
hlt
fcmovnu
cmp
loope
and
out
enter
test
fmul
inc
xlat
int
int
shr
rcl
repnz
mul
int
clc
std
jecxz
call
shr
jmp
cmp
int
rcl
aaa
shl
in
test
int3
cli
mov
call
jmp
fldl2t
into
leave
out
fiaddl
fldl2t
rol
jmp
sti
in
xchg
mov
jecxz
repz
jmp
out
cmp
hlt
int3
jmp
mov
out
xlat
ss
stc
cmc
iret
sti
lret
fldl
jmp
or
lock
int
xor
repnz
hlt
out
testl
loope
addb
into
in
xchg
lret
jmp
aas
jmp
icebp
bnd
vcvtdq2pd
out
ljmp
rol
in
clc
cmp
cmp
ret
fcomp
fiaddl
leave
out
loopne
lock
in
in
hlt
xlat
not
cmc
hlt
aad
std
aas
cmp
add
jmp
lret
loope
int
in
out
ljmp
jmp
fmulp
and
repnz
ret
aam
lea
mov
rcl
repnz
out
leave
iret
out
cmc
ds
inc
loope
int3
sti
iret
out
and
lret
cld
sti
cmp
sti
add
or
in
leave
decl
aad
hlt
aaa
cli
fcmovne
xlat
enter
into
cmp
add
loope
in
into
std
sti
xchg
in
lea
stc
xor
ss
rol
out
clc
repz
fld
mov
int3
adc
call
ss
shl
out
xor
repz
xlat
icebp
in
jmp
test
out
cli
fists
out
aam
int
sbb
ret
add
iret
xlat
xlat
into
xlat
fwait
in
mov
cmp
jle
add
aaa
aam
rcl
clc
stc
cld
lret
int
out
mov
in
std
in
iret
in
ds
rcl
sub
mov
lock
cmp
fdivr
fcom
rcr
xlat
out
loopne
loopne
decb
jecxz
xchg
int3
in
cmp
xor
out
fcmovbe
rcr
cmp
in
stc
ret
and
test
and
jmp
in
lret
repz
hlt
in
cmp
sar
xchg
aas
mov
in
das
in
cmc
icebp
cmp
xor
out
stc
fucom
enter
mov
int
xchg
out
in
xor
icebp
jmp
das
cmp
aad
in
cld
test
aad
mov
repz
in
mov
mov
lock
mov
ljmp
int
clc
int3
filds
jmp
lock
in
mov
mov
lock
xlat
cmp
loope
xchg
aas
ljmp
in
xchg
int
loop
cli
out
ljmp
repz
ror
ret
sti
fiadds
iret
leave
iret
in
shr
lock
out
ss
leave
fcomip
cli
cmp
shl
loopne
and
int3
int
icebp
in
xchg
xchg
lret
jmp
ss
sub
xor
cmp
cld
fldln2
cmc
jmp
out
in
jmp
loop
out
shl
stc
int
aaa
leave
jmp
aaa
out
repnz
loope
fiaddl
xchg
incl
enter
stc
cmp
ret
shl
in
faddl
cmp
hlt
xor
xlat
lock
clc
cli
cmp
cmpl
rol
sub
lret
enter
rol
rcr
xor
cmc
shll
cli
cmp
cmp
test
xchg
orb
jmp
lret
hlt
jmp
in
out
rol
cmc
shl
stc
idiv
mov
in
mov
int3
popl
ror
cmp
out
cmp
stc
cli
out
ljmp
mov
int3
ror
icebp
jmp
ror
das
xor
shr
sar
iret
ret
lock
out
loope
in
in
out
mul
lret
icebp
out
aam
cli
cmc
push
aad
aad
mov
in
loop
or
rol
cld
in
fdivrs
lret
fcmovnbe
fld
cmp
cmc
jmp
in
int
xchg
mov
loopne
das
cmp
into
cmp
out
int
xor
ret
into
in
fsin
test
enter
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
xor
inc
cmc
sub
test
jle
test
or
in
hlt
mov
xor
xor
icebp
aad
aas
in
or
and
cli
sar
xchg
or
clc
enter
rcl
aaa
inc
shl
xlat
fcmovbe
les
add
or
out
hlt
xchg
in
in
jecxz
iret
leave
repz
ljmp
test
fstp
fadd
fsubr
fcmovnbe
hlt
test
in
mov
aaa
ljmp
rorb
fsincos
shl
jecxz
shl
icebp
xlat
aaa
lret
shl
xor
rcr
clc
into
add
xchg
jecxz
out
sti
mov
iret
fdivr
loopne
iret
fimuls
into
sar
xlat
fidivrs
rcl
aam
roll
lret
into
jmp
loopne
xor
stc
ljmp
xchg
ret
mov
jmp
xchg
nop
lea
ss
call
into
shl
hlt
ret
sbb
fld
loope
xchg
fucomip
aam
jecxz
aad
sarb
aad
lret
faddl
stc
imul
not
ret
decl
fstp
divl
xor
fcomi
shl
call
loopne
stc
or
into
xchg
ljmp
lret
cmp
fldpi
leave
ljmp
filds
fmull
xchg
lret
jmp
cmp
out
ret
faddp
filds
jecxz
rcll
aam
cmp
cmp
xlat
in
add
xchg
xchg
mov
std
aam
fyl2x
enter
jmp
jmp
lock
mov
loop
into
aam
loope
clc
jecxz
clc
in
cmp
into
aaa
jmp
into
repz
ret
out
mov
jecxz
int
add
ljmp
cmc
cli
int
fsubp
aad
hlt
sar
lret
fsts
ror
aaa
lret
repz
in
lret
into
repnz
vpsrlw
lea
rcl
nop
xchg
into
in
stc
hlt
clc
shl
sarl
rolb
cld
mov
test
mov
call
nop
xor
lret
int3
jmp
not
cmp
std
int
cli
loope
loop
xchg
loope
fcmovne
addl
neg
sar
cmpl
shl
aas
ljmp
loopne
jecxz
int3
fidivs
loopne
out
out
bnd
cmp
shl
cmp
roll
std
clc
mov
mov
lock
jne
mov
pop
jmp
ror
ret
int
movsb
inc
push
cltd
insb
outsl
shlb
jg
test
jle
xor
cmp
clc
xor
test
in
mov
add
lock
in
repz
xor
ret
rcr
cld
mov
leave
stc
lret
test
icebp
cld
nop
not
out
loope
jecxz
ds
cmp
in
addb
mov
xchg
in
jmp
xlat
jmp
rcr
rcl
cld
rcr
xrelease
cld
std
xchg
clc
jmp
fdiv
call
ffree
xlat
loopne
ret
fdivrp
mov
cmc
xchg
ljmp
int
shll
out
icebp
filds
dec
fcmovb
ror
mov
in
cld
call
cmp
cmc
xchg
stc
fcomp
not
leave
out
loop
lock
ffreep
loopne
jmp
fdiv
into
rcr
icebp
cli
stc
fadds
repz
fldl2e
int
mov
fcomi
clc
cmc
repz
rcr
loop
std
repz
xchg
mov
int
adc
rcr
aam
cmc
cld
cli
in
std
xor
hlt
addl
addb
xchg
in
lret
aam
int
shr
shlb
loope
fcmovb
std
icebp
sub
adc
les
ljmp
enter
stc
out
faddl
out
cmp
ret
jmp
lret
ljmp
lret
fcomp
fcmovbe
std
aam
sar
mul
aam
repz
xchg
rcr
in
out
xchg
xor
fcom
fsub
ss
aam
loope
icebp
fsub
loop
mov
not
call
mov
call
cld
cmp
out
fdiv
aas
test
mov
call
jmp
ror
repnz
fldlg2
xor
rcl
cld
fcmove
xlat
or
cmp
out
mov
cmp
std
or
repnz
xlat
into
sar
jmp
shr
flds
stc
sub
jecxz
cld
fstp
mov
in
jmp
stc
int3
fnstenv
aas
clc
sti
add
in
repnz
in
idiv
mov
out
icebp
hlt
out
into
aad
ss
jmp
xlat
out
fcmovnu
rcr
cld
in
sbb
fisttpl
loop
in
xor
ljmp
icebp
fcmovu
shr
cmp
cld
sub
xchg
fisttpll
leave
repz
icebp
cmp
jmp
cmp
loop
fsubrp
mov
fcom
loop
fcmove
filds
cmp
xor
cmp
loop
jmp
ret
int3
rcl
ret
fldl
or
mov
jg
test
jle
into
test
shl
fiadds
loope
lock
lret
jmp
in
cli
icebp
jmp
aad
iret
lock
cmp
out
fcomi
loopne
fscale
cmp
xchg
xchg
jmp
jmp
aad
sar
loope
shl
sar
out
loop
cld
enter
test
jecxz
leave
enter
cmp
ss
fucom
testl
adcb
jecxz
repz
xor
sub
fstp
cld
sbb
in
into
stc
ljmp
into
shll
xlat
icebp
shl
into
cmpb
fmuls
rolb
imul
out
in
repz
hlt
idivl
test
std
ljmp
xor
lock
ljmp
cmc
rcl
xlat
mov
ljmp
roll
int3
not
rcr
shl
out
fcmovnbe
fcomp
fadds
fiaddl
repz
ret
aad
xor
into
icebp
stc
lret
lock
testb
int
filds
out
xor
lock
xor
into
xlat
cmp
cmp
into
in
xchg
mov
aad
loop
clc
clc
cli
leave
leave
jmp
jmp
cmc
stc
cmp
fdivrs
cli
xlat
fxch
cmp
mov
fcmovu
add
sti
xchg
rol
jmp
hlt
in
cmc
lret
cld
cmp
out
loope
repnz
loop
call
rclb
lret
fcmovnu
aam
cmp
cld
mov
mov
test
in
lret
out
clc
loope
out
rcl
cmp
push
and
in
jecxz
ljmp
enter
mov
shrl
out
xlat
shl
std
test
cmp
sbb
clc
roll
in
mov
int3
mov
not
aaa
xlat
xor
fdivp
fdivr
fiadds
repnz
in
mov
shr
leave
xor
fdiv
sbb
rol
fiaddl
out
xchg
loop
rcr
ror
in
incl
mov
xlat
cld
loopne
in
test
jecxz
mov
imul
cs
out
call
fnstsw
fiaddl
enter
loope
enter
out
and
enter
xlat
cmp
pushl
ds
cld
fadds
out
fsubr
incl
shl
test
stc
lret
sti
lret
dec
repz
stc
rcl
xchg
jmp
fadd
aam
fst
fcoms
sbb
jg
ficomps
xor
jg
test
jle
fisttpl
mov
rcl
cld
int3
iret
shl
clc
loope
in
xchg
out
jmp
in
loop
in
aaa
shl
xor
lret
sti
add
ret
shl
call
faddl
xor
repz
fadd
cmp
cld
orl
ljmp
shl
clc
ret
hlt
fcmovnbe
aad
call
repz
aam
call
call
nop
xchg
aas
lock
hlt
xor
loope
std
iret
xchg
rol
aas
fsub
sti
xchg
out
loopne
int3
cmp
repnz
shr
out
cmp
ret
cld
vpmuludq
mov
test
in
mov
loope
in
repnz
ret
divl
xor
and
mov
fldl2e
orb
aad
ret
jmp
lret
cmp
cmp
xlat
cmp
stc
xchg
jecxz
loopne
into
stc
lock
aam
jecxz
into
lret
loop
fstp
aad
rorl
xchg
repnz
and
repz
xor
iret
adc
aam
adc
out
out
shr
ljmp
nop
lea
icebp
leave
test
xor
shr
xlat
cli
enter
flds
leave
cmc
lea
cmp
cmp
cmp
fcmovnu
aam
repnz
std
xor
in
test
into
dec
int
lea
out
cmp
jmp
sti
fcom
rcl
in
mov
clc
xchg
sar
jmp
adc
clc
out
iret
shlb
xlat
fucomip
cli
ljmp
rcr
loope
out
in
jmp
in
loop
ljmp
rol
sbb
lret
cmp
out
jmp
iret
mov
aas
ds
repz
out
cmp
xchg
ljmp
in
jecxz
repz
xor
cmp
neg
sti
loopne
cld
cmp
ret
in
repnz
movb
int
fldl
xlat
shl
xor
fmulp
into
cld
sar
cld
shl
stc
dec
mov
icebp
ljmp
cmc
ss
sti
cmp
ds
orl
out
std
ljmp
jecxz
fdivrs
cmp
fcomip
xchg
lret
loop
xchg
repz
shr
imul
lock
int3
clc
xlat
cmp
sbb
frstpm(287
enter
loope
xchg
pop
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
push
cmp
xor
jle
add
loop
repnz
out
icebp
cmp
out
les
mov
call
in
iret
cs
ss
ret
xchg
aad
out
adc
clc
std
and
int
jmp
int3
xlat
lock
adc
loopne
cli
loopne
clc
test
jecxz
test
std
aam
clc
xor
xor
xor
fucomp
fiaddl
out
cmc
test
out
std
cli
sti
rclb
xor
lret
ljmp
sti
fstp
mov
testb
sti
lock
repnz
xor
repnz
aaa
fcomi
icebp
aas
cmp
sar
shl
icebp
out
cmpl
mul
out
xchg
mov
cld
cmc
shl
lret
ror
test
rolb
les
mov
loop
shlb
lret
vpmuludq
shl
sbb
test
call
incl
cs
aad
rcl
aad
aas
into
jecxz
cmc
xchg
aad
fmull
xchg
into
jmp
iret
ret
test
cli
lret
cmp
loop
adc
cmp
fsubr
out
loope
or
xchg
and
rcl
iret
cmp
sti
xor
fstp
rcr
sti
incl
sti
fldl
in
out
xchg
ret
in
shr
jmp
cmc
out
inc
lds
jmp
out
fdivs
shr
out
lret
ds
cmp
cmp
mov
out
filds
ljmp
cmc
out
loopne
aaa
out
lret
test
out
test
jmp
test
jmp
in
xlat
in
cmp
lret
ffreep
xlat
in
jecxz
faddp
leave
call
out
xchg
std
sub
out
enter
repz
aas
fneni(8087
hlt
enter
fucomip
nop
loopne
mov
subb
ror
repz
hlt
rcr
cmp
sarl
clc
rcl
icebp
loope
orl
in
loopne
lret
xor
les
std
fdivrs
cmp
sbb
fincstp
jmp
in
aam
in
in
enter
cld
lret
ss
neg
iret
aas
rcr
in
inc
xchg
mov
push
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
dec
pop
leave
lea
aaa
jg
fiaddl
jle
jmp
repz
ss
cmp
cld
hlt
fcmovbe
sub
rol
ljmp
out
loope
jecxz
ljmp
int3
cmp
aad
in
repnz
cmc
loope
shr
in
movb
cmc
fcomip
das
lret
ds
rcr
cmp
orl
out
jecxz
aam
and
aaa
jecxz
xor
out
cmp
repz
cmpb
xlat
in
rcr
loopne
out
fnstenv
cmp
stc
repnz
incb
clc
in
mov
lret
out
in
ficoms
fdivs
lret
leave
icebp
out
std
jmp
call
jmp
fcmove
fdivrp
cmc
int3
xor
ret
das
clc
lock
sarl
repz
stc
lret
fisttpll
in
int3
iret
jecxz
shr
icebp
sti
fcmovu
lret
aam
ffree
cli
repz
mov
xor
repnz
int3
lock
shr
rcr
cmp
rcl
clc
jmp
clc
cli
enter
in
xor
hlt
in
aaa
in
jmp
div
clc
lds
lock
add
out
into
nop
into
repz
aam
ror
lock
repz
shl
leave
call
std
jmp
in
ror
aaa
loop
lret
neg
ds
fmul
out
testl
xor
xor
in
out
out
aam
cmc
test
fcmovnu
sbb
mov
and
in
ret
clc
sarl
shl
loopne
in
cmp
out
xchg
and
hlt
test
sub
jmp
cs
lret
fstpt
repz
addl
std
jecxz
stc
xchg
in
loope
out
xchg
rol
cli
in
cli
int3
icebp
ljmp
rcr
cmc
jecxz
sti
hlt
stc
out
fdivrp
in
rclb
fcom
lret
call
incl
in
cld
fiadds
jecxz
leave
in
ret
fdivl
ror
fistpll
hlt
cmpl
loopne
ret
clc
out
lock
fsubrp
in
divb
clc
rol
cmp
jecxz
rol
ret
out
fildl
and
loopne
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
sahf
sub
xchg
cmp
fiaddl
jle
addl
into
cmp
imul
ret
rcl
sti
roll
in
iret
nop
xchg
orl
xor
into
cmp
cmp
repnz
in
xchg
mov
int3
sti
cmp
lret
in
mov
div
out
cmp
ds
loopne
ds
mov
fsubrp
cmc
loop
enter
icebp
lea
xor
std
call
cli
cmp
cli
test
cli
nop
xchg
lock
mov
int3
xor
aad
cmp
clc
loope
xchg
xlat
aad
lret
fisttpl
out
mov
fsubr
test
xor
shr
cld
cmp
loop
aas
test
clc
xlat
leave
loop
lret
lret
xchg
mov
jmp
out
loop
rcl
in
aad
cmp
ffree
jecxz
repnz
cmc
out
jmp
xor
rol
out
int
icebp
in
sar
ds
fdivp
not
mov
les
fisttps
in
fcomi
ljmp
ret
xchg
ror
inc
enter
leave
int3
lock
hlt
rolb
repz
shl
cld
aas
lock
out
out
mov
repz
cli
orl
fldz
cmp
fdivl
cli
cli
fsubr
icebp
aas
in
fdiv
cli
ret
test
ljmp
call
leave
cmp
repz
addl
lret
fmull
int3
in
sar
lret
out
shl
iret
in
ffree
clc
sarl
repnz
lock
loope
std
fsin
ds
cli
repz
mov
in
mul
mov
out
ljmp
hlt
iret
jmp
ds
rcr
ret
faddl
jmp
loop
into
mov
out
leave
xor
divb
div
cmc
loop
rorb
in
out
std
dec
test
jmp
cmp
clc
cmp
rcr
sbb
out
cmp
mov
call
iret
test
fcomi
cmp
cmp
in
in
out
call
mov
xchg
adc
repnz
xor
cmp
out
fsubrp
shl
flds
mov
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
mulb
shlb
jle
add
mov
in
loope
mov
xchg
jecxz
aaa
xor
sti
jmp
rcl
sarb
repz
sti
mov
ret
in
mov
xchg
repz
in
cmc
iret
into
repnz
into
icebp
clc
jmp
in
fdiv
ret
xor
out
sti
jmp
loope
test
lret
xor
int3
cld
rol
test
loopne
adc
jmp
icebp
lret
ljmp
xlat
ljmp
lock
cld
lock
mov
out
in
in
mov
xchg
repz
xor
fucompp
cmp
iret
aad
cli
fcmovnu
fst
std
ret
cmc
in
xchg
fiaddl
jmp
ss
lret
loopne
jmp
fsub
std
rol
cmp
testl
iret
hlt
out
repz
cli
xlat
in
repz
cmp
xor
xlat
sti
call
xor
aam
out
jmp
in
int3
fmul
rcl
mul
rol
clc
jmp
fmul
mov
les
out
out
jmp
lock
lret
jmp
loop
fldl
sti
out
sti
sub
lock
loop
xor
call
icebp
testb
clc
ljmp
cli
sti
xchg
shr
shr
out
jecxz
jmp
fucom
test
cmp
in
in
xchg
jmp
shr
ljmp
in
ljmp
int
cli
idivl
cmc
loop
cld
out
fimull
sub
hlt
shll
rcl
clc
xlat
in
fptan
cmp
enter
in
jmp
subb
xor
cli
stc
out
icebp
repz
fcomip
les
out
mov
fldl
in
int
sub
in
out
lock
in
loope
aas
fidivl
test
iret
test
aam
mov
out
fdiv
in
xchg
cli
rcr
jmp
imul
lret
repnz
test
xchg
ljmp
into
jmp
loope
fcomip
xlat
cmp
jmp
cmp
add
xor
in
mov
roll
clc
jecxz
sar
out
iret
rcl
sbb
rcl
movl
in
leave
enter
out
int
jmp
lret
into
out
movl
xor
or
sub
jmp
ror
rcr
ror
js
cmp
jg,pt
fiaddl
jle
aas
mov
mov
loopne
cmp
into
loopne
loop
xlat
cli
into
xlat
int3
hlt
cmp
hlt
loop
rcl
icebp
and
fdiv
out
decl
aaa
xor
fst
in
sbb
sbb
clc
adc
sub
in
cld
aam
mov
aad
xor
leave
icebp
out
rcl
flds
call
or
cli
loop
loop
repnz
out
xor
iret
fdivrs
cmp
jmp
in
rorl
int
or
addb
aam
ljmp
shl
in
orl
std
hlt
out
out
cmc
clc
cmp
shl
ljmp
fsub
ror
in
cmp
lret
xor
sub
in
sarl
fnstcw
out
shl
out
xlat
fucomi
loopne
cli
int3
out
in
out
lret
in
hlt
shrb
out
ss
xor
ror
mov
std
in
out
cli
repnz
nop
enter
iret
fxch
repz
call
fucomip
std
in
cli
cmp
fildl
ror
xor
hlt
cmp
aam
mul
lock
cld
loope
enter
fcoml
aad
jecxz
cmp
clc
loope
and
fcmovnb
shl
repnz
in
rcr
xchg
xchg
hlt
stc
out
call
xlat
sar
aad
in
sar
sti
cmp
adcb
xchg
ret
xor
out
fcmovne
xlat
iret
rcr
loopne
shl
neg
repz
in
mov
addb
lea
repz
cmp
cmc
mov
imul
xchg
loope
enter
ljmp
lock
cmp
xor
lret
repz
mov
cld
mov
xchg
in
aam
int3
xor
sti
repnz
cli
and
fcmovu
fildl
call
xchg
loope
cmp
neg
call
ds
aam
shr
fmull
fdiv
jecxz
xchg
shl
aad
out
cmc
fcmovnu
ds
adc
aam
vmovq
mov
lock
xchg
enter
cmp
div
cmp
icebp
cmp
inc
fsubs
test
add
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
stc
filds
fiaddl
jle
cmpb
fmuls
or
std
out
mov
xor
out
enter
in
sti
cmp
out
fmuls
fld1
leave
jecxz
loope
jecxz
in
xor
aad
enter
loop
add
test
out
mov
in
rclb
icebp
ror
in
xor
cmp
aad
add
cmp
jmp
int3
cld
rclb
out
aad
int
aad
lret
jmp
lret
ret
rcr
aad
in
decl
xchg
xchg
hlt
loop
repnz
dec
rcl
aam
sti
std
filds
testb
lret
jecxz
cs
repnz
fsubr
aam
std
fucomi
fcom
clc
sti
adc
or
int3
mov
test
out
into
xlat
fptan
xlat
repz
loope
fprem1
xlat
loope
fsubp
out
jmp
jmp
xor
int
iret
fcmovnu
shr
rcl
shr
enter
test
cld
shl
loope
ss
repz
sarb
fistpll
idivl
xor
loopne
lret
lds
out
mov
cmp
in
ljmp
repz
in
jmp
into
out
out
incb
in
xor
fdivrp
in
std
aas
xor
cmc
fdivr
neg
enter
out
mov
mov
iret
leave
imul
xorb
icebp
aam
movb
out
mov
flds
repnz
in
shr
lock
ror
xlat
aad
ret
loope
leave
aad
cmp
adcb
aad
jmp
fldln2
hlt
sarl
out
xor
roll
loop
aad
std
xchg
jmp
test
in
lret
xlat
jmp
in
cmp
xlat
cmp
out
in
sti
iret
lret
in
shl
jecxz
xlat
ljmp
neg
fdivp
inc
jecxz
aad
orb
ret
sub
in
cli
out
sarl
icebp
in
int
fcomp
out
and
out
cmc
xchg
loop
int3
xlat
stc
xor
int3
iret
out
fxch
clc
ret
cli
out
fimuls
xchg
mov
loop
shl
ss
repz
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
test
ret
jg
fiaddl
jle
enter
into
repz
loope
jmp
stc
cld
mov
test
out
shr
hlt
sti
imul
xlat
cmp
fcomi
jmp
loope
ljmp
loopne
loopne
lock
cmc
fdivs
push
rcl
loop
clc
enter
ret
mov
adcb
cld
fidivrs
sarl
in
cmp
shl
iret
fcomi
xlat
call
mov
iret
xchg
mov
rol
repnz
hlt
int
ds
cli
aad
cmp
xlat
cli
stc
mov
incb
hlt
out
int
into
out
stc
loopne
test
aad
fadd
mov
iret
mov
ret
in
aad
sti
ds
fmul
fcmovnbe
xchg
lret
int
in
mov
xor
lret
out
das
fdivrs
cmp
icebp
cmp
test
mov
loope
int3
in
orl
aam
ljmp
hlt
idiv
or
clc
loop
fmul
repz
out
enter
fidivrl
shl
aam
idiv
lret
jecxz
roll
shlb
xor
fcomp
sbb
repz
idiv
loop
repz
xchg
ss
cld
int
ror
out
shl
flds
int3
out
cli
jecxz
incb
hlt
lret
xor
cmpl
jecxz
fiaddl
loope
in
loopne
lret
cmp
out
shl
repnz
cmp
call
std
into
std
xchg
shl
int3
xor
fidivs
in
hlt
test
jecxz
shr
inc
leave
out
shl
jecxz
aas
call
cli
lock
fsub
hlt
rcl
loope
fisttpl
orl
into
cmc
xor
shr
ss
loopne
fdiv
xor
ret
in
jmp
test
repnz
xor
fcomi
sti
jmp
fidivrs
loope
add
leave
cld
xchg
jecxz
sti
xchg
aam
vaddsubpd
aam
sar
cmp
shl
icebp
xchg
xlat
cmp
xlat
jecxz
clc
leave
shr
mov
aad
jmp
jmp
fcom
rcr
fstp
fnstsw
fmull
lds
xchg
loop
jg
fiaddl
jle
aad
clc
rcr
fcomi
xlat
fscale
fildl
jecxz
iret
icebp
lret
aam
int3
fcmovu
fdivrl
ret
call
loopne
jmp
xchg
in
shr
loop
clc
rcl
into
in
into
aam
ror
hlt
bnd
enter
out
out
mov
jmp
repz
idiv
enter
test
out
mov
test
hlt
lret
out
in
lret
fmul
mov
leave
ss
sti
cmp
fildl
repnz
cli
sti
stc
loope
ljmp
out
rcl
in
aaa
cmp
loope,pt
cli
idivl
aas
ret
std
aad
xlat
aam
into
cld
out
cmc
mov
lds
shr
repnz
clc
in
addb
jmp
ljmp
in
ror
xor
cmp
jmp
leave
lret
loopne
lret
fmulp
jmp
xor
stc
out
out
in
cli
hlt
iret
xchg
fcompp
cmp
mov
xlat
mov
cmc
xlat
in
int3
out
aas
cmp
lock
jmp
jmp
icebp
jecxz
fsubp
xor
aad
icebp
xor
ds
inc
fadds
hlt
cmc
loope
clc
clc
jmp
xchg
aad
out
fcmovne
call
stc
lock
int
xchg
out
into
repz
rcr
stc
icebp
incb
in
fcmovnb
repz
lock
in
xchg
hlt
cmp
aad
loopne
sar
call
mov
mov
xor
iret
cmp
cld
rcr
filds
test
sti
fsubp
or
sti
call
ret
xor
jecxz
repz
sti
cmp
rcr
cmp
hlt
cmc
ror
jmp
les
leave
mov
xor
clc
fdivr
fstp
aas
fcmovbe
fdiv
or
mov
shr
sti
and
loopne
out
xor
sarl
hlt
test
repnz
lret
lock
repz
cmc
into
aad
sar
fsub
mov
mov
enter
xchg
aam
in
xorb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
lock
jle
add
rol
aad
stc
shll
leave
test
lret
aas
ror
xchg
ljmp
int3
ror
clc
loope
lret
xor
int3
ror
cmc
ret
loop
std
jmp
into
fildl
xor
cmp
xlat
fxch
cld
cmp
sti
xchg
mov
mov
test
out
test
loopne
rcr
rol
aad
xor
lret
shr
rcr
test
decl
mov
sar
leave
aad
enter
jmp
sbb
testb
xchg
iret
int
out
fstl
repnz
neg
sti
int
loope
repnz
hlt
hlt
out
clc
movl
out
out
repz
cmp
ljmp
clc
std
cmp
shl
sub
nop
cld
jmp
xchg
icebp
fsubrp
sub
xor
xor
xor
ret
sub
or
rcr
imul
out
xor
enter
sti
aaa
fmulp
fdivr
fdivr
jecxz
hlt
fcmovne
decl
cli
dec
mov
aad
loop
in
jmp
stc
jecxz
aad
filds
int
lret
mov
int
ret
out
xor
enter
cmc
faddl
rcr
add
jmp
or
into
loopne
lret
fidivl
imul
sti
ret
test
idiv
out
int
in
nop
out
cmc
iret
div
jmp
repnz
leave
shr
cmp
cmc
stc
aad
aam
fiadds
out
jmp
lock
xor
hlt
shl
out
shr
cmp
shl
test
xchg
ljmp
cmp
fcom
ds
cmp
test
out
loop
xchg
leave
out
mov
mov
jmp
sti
aam
out
fcmovne
ffree
out
repz
in
loop
out
in
out
in
int
jecxz
jmp
ss
in
cmp
aas
sarb
ror
in
fidivrl
cld
test
and
or
hlt
int
jecxz
cmp
fcompp
rolb
cmp
orb
std
ror
in
ljmp
divl
loopne
cmp
xlat
aas
loope
shl
fcmovnu
mov
fisttps
mov
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
xor
jg
fiaddl
jle
orl
out
sti
aam
stc
imul
shl
cmp
cmpl
hlt
jmp
sti
ficoml
icebp
loope
lock
jmp
out
cmp
in
aaa
test
jmp
mov
icebp
out
lock
xchg
adc
in
iret
fldz
ds
cmp
cld
cld
faddp
clc
out
mov
and
fldl
cmp
cmp
int
out
cli
not
lock
call
cmp
in
mov
repnz
test
in
out
int
rcl
fsub
incl
call
clc
out
in
repz
xchg
cmc
das
enter
int
clc
fmulp
iret
sar
rcl
stc
fcmovnbe
test
xchg
ljmp
hlt
int3
fincstp
sti
ds
rcl
std
lock
out
stc
mov
fimull
lret
loope
shlb
ss
cmp
in
xor
lret
addl
fildl
into
sub
shr
cmp
not
aas
aad
mov
sbb
fdivr
call
sub
leave
xor
cmp
clc
div
aad
idiv
mov
jecxz
out
in
into
div
aaa
aad
clc
out
cld
cmc
shl
in
sti
cmpb
stc
loope
fcom
faddl
in
into
std
ljmp
in
in
iret
stc
xlat
cli
lret
cmp
fiadds
sub
xchg
icebp
cld
incl
stc
sti
icebp
lret
clc
cmp
test
cld
neg
fimull
xchg
mov
jecxz
hlt
cmc
fmul
cmp
std
in
sti
out
testb
loopne
mov
ljmp
leave
clc
ss
shr
cmp
ds
fprem
test
les
lret
int3
shll
out
fcomi
clc
cmc
leave
out
ljmp
call
int3
in
cld
call
jecxz
sub
in
xor
jmp
lock
into
rcr
in
cmp
cmp
fdivr
mov
in
add
xor
sub
out
jmp
testl
loopne
lock
in
shll
out
shl
call
cld
aam
cmp
repnz
jmp
subl
add
sub
je
add
rcl
ret
fucomp
insb
fstps
adc
imulb
test
jle
add
in
rclb
rcl
xor
out
ljmp
std
out
sti
call
in
into
xchg
int3
loope
aaa
xlat
ss
shll
sarb
aas
fdivp
fiaddl
cmp
loope
leave
ljmp
cmc
shl
icebp
out
aam
sarb
in
rol
cmp
loope
leave
leave
ljmp
in
int
repnz
enter
xlat
rcl
test
cmp
in
test
icebp
xchg
repnz
xor
enter
fnsave
test
ret
sti
ljmp
mov
iret
out
stc
stc
ss
xlat
stc
rcl
add
sti
ljmp
xchg
rclb
xor
fldz
fdivrl
into
loope
out
vpinsrw
fisttps
xchg
stc
not
xlat
test
cmp
aam
fildl
std
mov
int
xchg
iret
out
xchg
xor
loop
cmp
jmp
fdivrs
div
icebp
adc
sub
int
ret
cld
xchg
cmp
enter
repnz
in
fistpll
fisttpl
mov
into
test
jmp
cs
aam
repnz
cmp
out
fld
out
lock
int
xchg
jmp
test
out
repnz
lret
fdivr
repnz
ljmp
jmp
aam
into
ss
not
fdivp
ror
xchg
lds
iret
jmp
mov
icebp
test
in
fidivrl
enter
int
out
cmp
cmp
lret
mov
in
sar
int3
xchg
sub
in
mov
cmp
ds
leave
fcmovbe
shr
in
xor
cli
mov
nop
in
out
or
leave
lret
repnz
shl
clc
in
loopne
test
clc
and
out
movl
icebp
lock
aam
repnz
xor
icebp
hlt
idiv
sar
cmp
sti
out
enter
icebp
aaa
shlb
fdivrl
hlt
xchg
cld
mov
enter
in
into
xchg
loope
not
lret
in
lock
aam
imul
lds
ja
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
roll
repz
shrl
ljmp
addb
ror
ds
fsubp
lret
ret
out
cmp
aam
cli
iret
icebp
cmp
push
repz
loope
hlt
aad
std
out
std
lret
xchg
icebp
aam
xor
ror
xor
cmp
cmp
cld
cmp
xchg
aad
in
test
std
out
loop
fdivp
incb
ss
fst
enter
test
fimuls
rcr
in
call
xlat
leave
aad
enter
jmp
sarl
mov
add
call
xchg
test
out
stc
cld
ss
iret
xor
cmp
mov
fucom
lret
fcomi
call
clc
shrb
call
cmp
stc
xchg
fninit
out
std
fucomp
loop
mov
out
shl
lret
iret
ljmp
test
fimuls
in
in
jmp
mov
out
lret
leave
fcmovne
das
in
lret
sarb
fcmovnu
enter
lea
mov
fxtract
xor
int3
div
cmc
iret
fnstcw
out
shl
jmp
mov
clc
lds
ljmp
lret
cmp
cmp
cmp
roll
out
out
fmulp
out
ss
xlat
into
sti
fmul
stc
int
in
loop
cld
loop
in
leave
jmp
jecxz
std
rcl
and
jmp
cmp
fcmovb
fstp
cmp
hlt
rcr
fcomip
out
mov
rcr
mov
int3
shl
xor
ds
out
xor
xchg
xchg
jecxz
lock
shl
shr
iret
jmp
int3
fdivrs
rcr
and
fldl
int3
xchg
aam
xchg
loope
int3
loop
std
lock
lock
sbb
mov
ljmp
addl
cs
rcl
sarl
ljmp
clc
mov
fadds
xchg
lret
in
rclb
enter
call
out
stc
rolb
jmp
jmp
mov
xchg
in
into
in
lret
ds
sarb
mov
add
jmp
rcl
aad
loop
pop
sbb
out
xor
fiaddl
jle
loop
xlat
std
call
loop
jmp
repz
xorl
div
aaa
xor
int
icebp
hlt
rcl
mov
int3
xchg
nop
lock
ror
clc
neg
leave
in
xor
cmp
loop
in
loopne
xchg
int
icebp
ficoms
cmp
in
cmc
cmp
xorb
aam
loopne
lret
loope
lret
ljmp
ss
lds
aas
ljmp
repz
out
sti
lock
mov
jmp
ljmp
out
cmp
lds
test
icebp
cld
nop
in
sub
out
aaa
out
ss
cmp
jecxz
jmp
fcomip
lock
ror
repz
icebp
xor
xor
clc
adc
in
fxch
in
mul
or
test
aaa
xor
rcl
ds
out
testl
loopne
in
stc
mov
cli
loop
mov
aad
std
rcr
xlat
loope
cmp
fdiv
jmp
lret
leave
lea
jmp
rol
out
repz
jmp
fistpll
lock
enter
loopne
mov
out
test
xchg
repz
xlat
ss
enter
clc
call
ds
xor
decl
enter
jecxz
shll
shll
rcl
xchg
aam
aad
cli
cmc
fdivrp
call
rolb
in
fdivp
out
leave
divl
test
shl
mov
mov
stc
fsubr
rorb
xchg
cmc
int3
icebp
shll
xor
clc
out
ss
repnz
addb
in
out
jecxz
repnz
loope
ror
enter
sti
fcmovnbe
fucomp
fcmovu
xlat
xchg
test
fldl2t
out
lea
sarb
clc
xor
shl
imul
cmp
div
leave
test
into
fabs
and
repnz
shl
in
out
dec
lock
sbb
fdiv
rcr
in
mov
call
xchg
loop
sti
bnd
fdivr
fdivrs
fadd
sti
cmp
test
jmp
lret
enter
xchg
ret
enter
lret
int
int3
sti
cld
fimuls
mov
je
add
enter
fstp
int
inc
dec
sbbl
fimuls
add
in
shl
adc
ret
loopne
cli
out
fadd
out
fucomip
test
repz
cmp
fadds
ret
ret
ljmp
mov
in
div
cmp
stc
aad
div
shl
leave
test
icebp
loopne
xor
aaa
cmp
loopne
idivl
ffree
cld
std
xor
enter
out
lock
out
out
call
in
lock
cmc
cmp
idiv
repz
xchg
iret
in
jecxz
loop
xchg
fmul
ret
xor
int
cmp
aad
out
out
stc
cmp
fiadds
xchg
mov
sti
cmc
cmp
lock
in
fabs
ffree
xor
ljmp
std
out
lock
out
rcl
not
lret
aaa
idiv
rcl
test
ds
jmp
loopne
loopne
std
rorb
enter
stc
aas
neg
iret
incb
mov
aam
int3
orl
repnz
in
in
hlt
xorl
fildl
lock
sti
fisttpll
cmp
enter
jmp
icebp
sar
out
sti
cld
fimull
lock
nop
icebp
jmp
int3
fdivrp
aaa
cmp
out
jecxz
inc
jmp
out
int
ljmp
fcmove
cmc
sar
add
loope
xchg
stc
in
jecxz
test
enter
int3
xchg
out
icebp
in
out
int3
sti
aad
call
clc
mul
rol
clc
fucom
mov
std
in
lock
enter
cmp
dec
cmp
fistpll
cli
mov
out
ljmp
out
ret
iret
vpaddusw
aas
fcmovu
fdivr
cmp
xchg
in
repnz
sti
mov
in
in
sub
cli
xlat
icebp
lret
fnsave
cli
enter
test
repnz
and
jmp
cli
lret
in
call
out
in
xlat
adc
xlat
out
jmp
incl
into
aas
stc
lock
rol
sti
loopne
hlt
aaa
sarb
cmc
ror
mov
xchg
std
out
rol
xor
jmp
out
fistpll
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
lods
xor
push
data16
jle
add
into
fucom
fstpt
in
cmp
add
and
mov
xchg
icebp
jmp
cmp
fcomp
rcl
shl
cld
filds
lret
fst
out
out
orl
not
call
int3
iret
icebp
roll
in
out
std
decb
add
lock
leave
lock
cmp
ror
mov
loopne
int3
fsub
jmp
in
xor
in
lret
xor
std
neg
cli
std
cld
lret
xchg
in
cld
lock
cmc
call
in
iret
cmp
aas
repz
out
sbb
mov
fmulp
loop
shr
ljmp
lret
cmp
leave
lock
icebp
clc
fcomip
rol
fcmove
fmuls
jmp
jecxz
int
ljmp
xlat
fdiv
movb
cli
jmp
cld
jecxz
repz
icebp
into
xor
lret
enter
xor
rcr
shr
std
jmp
out
out
into
in
adcl
shl
into
lret
cmp
repnz
adc
ljmp
mov
xchg
enter
ljmp
and
out
rol
in
mul
jecxz
in
fucomp
out
test
fucompp
jmp
aam
xlat
icebp
int
cmp
addl
shr
call
iret
cmp
jmp
out
cmp
xor
aas
sti
fcmovne
sti
leave
mul
xbegin
int
xchg
icebp
jecxz
clc
aaa
jmp
lock
into
xor
lret
call
call
in
cmp
cmp
xlat
out
into
out
out
clc
loopne
sarl
rol
aam
in
int
leave
loop
icebp
into
in
jecxz
leave
out
not
in
rcl
add
shl
xchg
sub
out
out
repnz
fcmovne
rcr
std
fstpt
repz
aad
in
hlt
mov
fsubr
jecxz
fisttpll
das
ret
repnz
xor
mul
clc
fcmovnb
out
cli
sbb
test
icebp
icebp
fdivr
rcl
rcl
jmp
cmpl
in
sti
rcl
mul
imul
fstp
xor
mov
call
rolb
add
and
add
clc
jmp
aam
mov
int
rol
repnz
jge
sub
ret
jle
add
divb
icebp
int3
lret
cli
fsubp
shl
adc
mov
fsub
clc
adcb
aam
shlb
xor
int
push
leave
jmp
icebp
iret
aad
fsubr
cli
lret
into
mov
jmp
xor
in
fld
fnstsw
cmp
test
loopne
rol
jmp
aas
and
cld
out
jmp
shl
fnstenv
ljmp
into
adc
sti
fldl
std
in
repz
xor
lock
out
rcl
loopne
int3
icebp
sbb
xchg
lret
enter
in
mov
xor
xor
xor
aaa
sbb
cld
lock
loop
shr
ret
mov
enter
in
fprem1
ret
icebp
icebp
hlt
cmp
in
enter
loopne
loope
xor
cld
int3
fldl
lret
cmp
cli
fcmovne
rcr
frstpm(287
aad
mov
fsub
call
les
icebp
cli
int
lret
rcr
sti
loop
loope
aaa
stc
aam
jmp
test
jmp
mov
aad
lds
hlt
cmc
cmp
ret
xchg
jecxz
fsubp
int3
in
call
ret
xor
cmp
loopne
in
int
fcmovbe
fadd
enter
mov
repz
int
cmp
jmp
addl
aad
int
repnz
sti
or
in
call
repz
aas
cmp
xor
xchg
ret
sbb
and
clc
std
aam
cmc
leave
leave
lret
cmp
repz
loopne
mov
loopne
fldl2t
out
decb
rcl
icebp
imul
loope
incl
fiaddl
repnz
xchg
hlt
loope
ret
ss
cmp
int3
fistpll
int
ret
in
cmp
jecxz
xbegin
iret
xchg
ror
lret
xor
cli
out
cmp
loop
stc
jmp
lret
mov
shr
cmp
call
rcr
add
rolb
jmp
dec
aaa
das
clc
xlat
in
cmp
repz
aad
repnz
hlt
repz
hlt
in
loope
in
out
decl
stc
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
cmp
dec
dec
sahf
fidivrl
fiaddl
jle
ljmp
aaa
lret
cmp
ffreep
in
fdivr
test
in
in
std
call
in
in
cmp
in
aas
rcr
iret
int3
fcmovb
loop
rcl
cld
loopne
loopne
lret
ljmp
jmp
cmp
cmp
xlat
clc
div
and
ret
leave
loop
mov
fcoml
lock
fstpt
lret
out
jmp
repnz
xlat
mov
fucom
and
aam
fcmovnb
out
jmp
fldl
enter
mov
int3
aam
rcl
ljmp
out
repnz
lock
clc
clc
mov
cld
in
out
faddl
xor
fdivrl
fadd
hlt
xor
out
lret
out
mov
icebp
int
mov
int3
std
fcmovu
sti
clc
in
xor
ret
leave
cld
vpavgb
sbb
mov
ret
ret
ljmp
fdivp
ret
adc
jecxz
fucom
in
mov
stc
in
in
xchg
repnz
les
ss
repnz
std
fiadds
loop
sti
repnz
mov
jmp
leave
int
std
repz
rcr
jmp
ret
call
call
xor
xor
stc
iret
lret
fsub
int
std
call
fmuls
iret
out
fsubrp
fsubr
loope
ret
xor
int
rcl
cmc
loop
loope
fucom
filds
repnz
mov
test
int
out
enter
xor
rol
out
fmuls
xchg
out
loop
xlat
fcmovbe
out
cmp
icebp
cld
mov
shl
lret
lds
ss
cld
jmp
sbb
shr
push
cmp
orb
call
icebp
cmp
fucomp
aas
cmp
in
xchg
int3
out
fcmovu
int
out
int3
xchg
aas
repz
in
out
cmp
fstp
rcr
testb
fdiv
ror
iret
shl
mov
int3
xor
into
aam
fdivrl
sti
enter
in
xchg
enter
cli
enter
and
push
int3
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
cwtl
mov
lahf
jp
jg
fiaddl
jle
lret
repnz
leave
rcr
rcl
rcl
iret
jecxz
aas
cld
in
idiv
jecxz
mov
mov
call
in
shr
int3
repz
fdiv
aaa
ljmp
xlat
out
test
in
cli
repnz
in
call
repnz
cmp
fadd
sub
add
ljmp
jmp
cmc
cld
xlat
fucomi
cmp
cmp
xchg
loopne
out
out
lock
lret
int
icebp
imul
xor
sti
fst
shl
in
int
out
rcr
in
in
fstp
loopne
fucom
out
xchg
aad
out
sti
lret
cmp
xor
in
xchg
in
rorb
ljmp
jecxz
shr
lock
icebp
int3
aam
fucomip
cmp
jmp
in
out
fmull
jecxz
in
cs
aaa
loopne
cmp
ret
cld
orb
call
aad
cmp
imul
xor
push
ret
fcmovnu
loope
aam
ffreep
call
mov
rcr
aad
in
enter
xlat
cli
shl
repnz
in
in
std
test
int
test
cmp
cli
xlat
idivl
out
fldln2
call
iret
lock
in
xlat
stc
out
xchg
hlt
int
xorb
out
lock
jecxz
out
clc
rcr
out
loope
cmp
jmp
loopne
mov
iret
ret
xor
ss
cmp
rcr
cmp
sti
cmc
loopne
cld
mov
cld
out
mov
in
shlb
cmc
lret
fcomi
loopne
loop
repz
dec
cmc
fsubp
test
ret
cld
in
loopne
shll
ss
cmp
repz
test
sti
aad
std
enter
in
in
orb
in
repnz
out
iret
cli
jmp
cmp
out
rol
mov
jmp
push
ret
lret
cmp
aam
xor
fcompp
neg
int
out
out
out
nop
lock
roll
fdivr
repnz
cli
clc
iret
repnz
xlat
cli
xlat
clc
adc
in
in
loopne
fmull
int3
xlat
call
hlt
loope
loope
incl
xlat
test
fildl
stc
adc
add
jmp
aad
ret
int
fistpl
jb
mov
fiaddl
jle
fmuls
in
aas
jmp
out
icebp
enter
ret
xor
stc
incb
in
loopne
out
jecxz
out
ret
icebp
shll
out
iret
shr
loop
cmp
clc
mov
xchg
ror
lret
test
shl
clc
sarl
cmp
cmp
xchg
cmp
test
and
xchg
cmc
test
xor
jmp
xlat
fadd
icebp
loope
fimuls
nop
cld
mov
hlt
idivl
shr
hlt
jmp
repnz
icebp
ret
dec
std
fmull
das
xor
lock
enter
lock
repz
sar
faddp
mov
aaa
idivl
rcl
lret
cmp
aas
leave
out
sti
sti
lea
hlt
lock
lret
xor
aad
fsub
loop
out
lock
faddp
jmp
loop
fsubrp
ljmp
aaa
cmp
sar
ss
std
cmc
in
rorb
shl
lret
out
ret
shl
stc
call
std
ret
cmp
test
add
fdivr
jmp
loopne
loopne
ss
aad
leave
call
ret
incb
loope
clc
icebp
mov
fstl
cli
cli
sti
ljmp
iret
into
faddl
mov
fcomp
std
xchg
into
xor
xlat
shll
ss
iret
loop
sti
xchg
fcmovu
out
int
ljmp
aaa
fmul
xor
fdivp
fucom
cmp
loope
xchg
loopne
ror
shl
std
int3
test
aam
test
idiv
lret
fiadds
div
add
xlat
sti
repnz
xchg
nop
lret
cmp
out
fdivrp
cmp
lret
push
cmp
int3
fucomip
enter
xchg
mov
in
aad
aaa
hlt
cmp
fdiv
out
rcl
hlt
ds
filds
sar
int
loope
lock
cmp
cmp
aad
out
aas
out
out
aad
in
addl
in
lock
out
cli
hlt
cmp
sar
xchg
xlat
imul
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
mov
jg
fiaddl
jle
clc
ffreep
into
fndisi(8087
adc
call
repz
ss
lret
sar
sub
rcl
incb
incl
in
call
enter
ljmp
roll
sub
lret
in
ljmp
xor
std
ret
loopne
in
orb
rorl
in
out
enter
cli
adc
inc
loope
les
call
sub
xor
rcl
jecxz
cmp
cld
ret
aas
neg
hlt
fmul
leave
jmp
into
cmp
mov
ss
shr
xor
shl
sarl
loopne
repz
aad
clc
in
sar
shr
ljmp
aad
ss
hlt
fidivrs
mov
cli
int
xor
lret
jmp
xor
aaa
lret
icebp
shl
cmp
ret
out
loop
neg
mov
xchg
int3
xchg
xchg
out
jmp
shll
aas
lret
loopne
ss
hlt
in
test
out
mov
xchg
aam
sub
divl
fdivp
fcmovb
icebp
div
out
cmpb
shl
test
mov
fdivl
cmp
sti
aad
rolb
ret
mov
repz
cmc
lret
aam
enter
xlat
repz
rolb
sti
incb
into
fstl
cmp
enter
fmul
out
out
cmp
cli
ret
out
mov
out
call
out
icebp
cmp
int3
in
icebp
shl
jmp
xor
loope
cld
shl
fisttpll
filds
mul
sar
into
std
cmp
leave
cmp
in
sbb
mov
cld
faddp
sbb
out
xchg
in
int
stc
cmc
aaa
ljmp
fcom
repz
out
fdiv
leave
int
int3
xchg
xchg
repz
cli
xor
aas
ljmp
std
bnd
in
in
in
mov
int3
clc
clc
xor
cmc
out
jmp
jmp
xlat
ret
call
out
fcmovb
std
mov
lret
xchg
loope
xor
out
cmp
out
rcr
loope
shl
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
loopne
std
xchg
cld
mov
iret
cld
sbb
addl
cmp
enter
fninit
cmc
fdivr
aam
aad
in
loopne
loopne
in
repnz
xor
xor
hlt
aam
xbegin
out
fsubp
shl
icebp
and
test
shr
filds
imulb
out
cld
cld
fstpt
out
out
testb
in
loopne
mov
nop
out
into
hlt
loop
lret
fnstenv
fsubr
loop
cmp
into
xchg
in
fmul
jmp
test
in
repz
ljmp
out
hlt
in
addb
in
out
lock
shr
cmp
idiv
hlt
rcr
stc
test
cmp
fld
fucomip
cld
out
orl
cmp
iret
neg
cmp
stc
aas
rcl
icebp
ror
jmp
sti
xchg
std
rclb
shlb
clc
fstp
std
shl
cmp
in
fldl
jmp
xor
ss
cld
aaa
stc
fcmovnu
fidivrs
test
sti
mov
fildl
mov
rorb
aam
xor
ljmp
incl
fld1
loopne
ljmp
loopne
jmp
in
xor
shr
aam
in
jmp
ljmp
jecxz
jmp
jmp
fdiv
sar
ret
std
cmp
sti
ljmp
mov
sub
xor
out
in
stc
ds
in
stc
sbb
ret
add
int3
jecxz
sti
ljmp
int
into
xor
cmp
repnz
sar
aad
test
mov
shlb
in
lret
xor
int3
fdivr
sti
cmp
cmp
sar
loope
jmp
mov
std
rcll
out
clc
aaa
iret
lret
ss
in
in
inc
test
xlat
jmp
into
ljmp
cmc
loopne
ss
hlt
lret
ror
lret
aam
shr
iret
cli
test
in
test
std
icebp
mov
ljmp
int3
sti
addl
out
in
mov
clc
out
jmp
rclb
aam
in
jmp
orb
or
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
fisubrs
jle
add
cmp
mov
mov
aas
leave
cld
in
int
repz
shrl
cmc
rol
fcmovnu
aam
out
aas
out
rcl
in
lock
leave
call
in
out
int
out
rcr
repz
fldz
xor
sar
int3
neg
fdivr
fprem
loop
cmc
ds
in
in
icebp
adc
jmp
stc
fcom
cli
jmp
ffree
cmc
in
hlt
filds
repnz
ljmp
cmp
aad
hlt
fucom
std
aad
stc
fmul
addb
loopne
out
repnz
das
int
loopne,pt
ds
xor
ljmp
icebp
nop
test
mul
ftst
out
jmp
sub
ds
std
jmp
out
xchg
ljmp
sti
shr
repnz
fxch
cmpb
fdiv
fimuls
mov
clc
lret
iret
fildl
clc
out
enter
loopne
iret
cmp
repz
loopne
mov
sti
int3
std
enter
xchg
jecxz
sub
in
call
fxch
rcr
iret
cmp
std
icebp
xlat
aam
clc
loope
incb
out
cmp
xor
hlt
repnz
stc
addb
loopne
leave
mov
fisttpl
aad
int
fucomi
xlat
fcmovnu
in
iret
shl
sarl
or
fcmovu
ljmp
les
ret
aam
leave
rcl
out
out
sar
call
sar
jmp
xchg
rorl
fxam
aam
cmp
cmp
enter
aad
test
mov
into
xchg
jecxz
repz
ljmp
int3
loope
cld
cmc
shl
loope
mov
loopne
fiaddl
leave
out
lret
test
idiv
lock
fmul
stc
repnz
xor
ret
mov
loopne
test
not
stc
in
stc
jmp
icebp
fstp
iret
aas
fcomp
fiadds
lret
int
enter
iret
clc
cli
int3
cli
dec
sar
aad
test
in
mov
orb
ror
fucom
into
cld
faddp
out
int3
test
adc
mov
fdivrp
int
shl
mov
jmp
fcom
rcl
fidivs
shlb
clc
add
jmp
int3
int
loope
sub
xor
jg
fiaddl
jle
sti
stc
aad
fchs
xchg
fldl
cld
orl
int
loopne
xor
jecxz
xor
iret
cmp
jecxz
repnz
leave
xlat
fimull
jmp
neg
lret
divb
jmp
ds
cmp
loop
ret
jmp
and
sti
mov
rcr
in
in
push
rcl
test
fnsetpm(287
sti
stc
and
repnz
xchg
sub
repnz
xor
adc
jecxz
cmp
ds
loope
out
in
clc
in
out
mov
ret
into
int3
shl
in
fsubp
clc
lock
aas
out
ljmp
repz
repz
enter
xor
hlt
std
xor
xlat
jmp
shr
aad
rol
jecxz
lds
lret
in
loop
stc
div
cmc
cmp
fidivrs
and
cmp
div
in
hlt
ffreep
fsqrt
into
loope
xchg
enter
cmp
icebp
das
cmp
sar
sar
cmc
aad
cmc
ror
in
mov
int3
mov
lret
fucomip
aad
ret
in
in
cli
cmp
repnz
mov
sti
ret
loope
loopne
fiadds
ror
ss
repnz
dec
ffree
ds
fcmovnu
add
loopne
lret
xchg
out
repnz
fidivl
loopne
filds
fadds
mov
loopne
xchg
sti
aam
fsubr
fdivp
add
clc
in
clc
xlat
repnz
sti
clc
loopne
sub
test
in
shl
xor
cmp
clc
out
fcmove
cmp
ret
ret
in
test
loope
orl
leave
lret
lret
fsubr
sar
std
fmul
fimuls
out
lock
out
call
fmul
lret
into
jmp
hlt
in
icebp
xlat
fcmovnbe
cmp
hlt
faddp
sti
mov
ror
xchg
in
sub
lret
iret
movl
in
inc
sbb
test
test
shl
icebp
call
call
stc
dec
in
jmp
jmp
loopne
xchg
in
jmp
repz
jecxz
cmp
shl
fcom
shr
icebp
adc
call
sti
mov
xchg
mov
fadd
stc
add
jmp
enter
fstp
int3
shl
scas
imul
js
cmp
fiaddl
jle
lret
leave
in
fildl
aad
idiv
xchg
fsubr
leave
into
hlt
out
call
cmp
neg
repnz
rol
loopne
fcmovb
cmc
fcmovu
enter
jmp
jecxz
jecxz
in
jmp
cmp
cli
ljmp
out
mov
jecxz
stc
lret
loop
out
fld
lret
shlb
ljmp
ds
std
mov
flds
nop
aad
aaa
xor
sub
out
jmp
fmull
addl
int3
in
sar
out
divl
rol
cmc
out
aad
jecxz
sbb
jecxz
in
lret
rorl
ss
xor
cmp
shl
std
rcl
in
xor
xlat
cld
fmul
orb
std
sub
xor
rcl
ss
ss
icebp
aam
cli
clc
loope
test
mov
adcb
in
leave
leave
icebp
fcmovu
out
fdivrs
fiaddl
mov
jecxz
mov
cmc
lock
iret
leave
call
fucomp
cmp
ds
aad
sti
test
leave
loope
loop
mul
lret
int
iret
fadds
aad
cmp
mov
jecxz
fneni(8087
fists
rol
not
into
lret
aam
out
cmp
test
fdiv
loopne
xchg
leave
fsubrp
addb
xor
into
lret
repnz
cmp
xrelease
call
into
jmp
shl
call
out
xchg
ret
aam
add
flds
div
into
shl
hlt
aaa
sar
cli
cmp
hlt
cmc
xchg
call
call
icebp
mov
in
iret
loopne
cli
cli
in
out
out
iret
cli
aas
stc
icebp
loope,pt
sarb
lret
or
rol
iret
leave
xchg
icebp
xchg
xor
iret
cmp
cmc
loop
xlat
cld
repz
repnz
fsub
xchg
in
in
in
aaa
fucomi
out
out
cli
fidivrs
int3
into
faddp
add
out
ljmp
jmp
xlat
lock
fidivrs
aas
xor
cli
xlat
out
std
stc
aad
mov
or
xchg
xlat
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
ljmp
cli
hlt
rol
test
clc
ffreep
int3
adc
int
in
out
loope
jmp
cmc
stc
fsubp
fildl
test
int
cli
ljmp
in
fcmovnb
xor
cli
lret
loop
repz
shl
in
fsubp
stc
cli
fsub
out
test
fimuls
mov
xlat
leave
xor
xlat
aad
cld
roll
out
lret
test
aam
out
cmc
leave
lock
into
lock
ljmp
in
hlt
loope
xchg
nop
lret
jmp
xlat
rol
repz
cli
out
in
cmp
hlt
rol
std
ljmp
jecxz
fimuls
cmp
fcomip
stc
shl
dec
idivb
roll
fucom
lret
leave
in
into
jmp
aaa
in
cmp
cli
cmp
out
in
std
ret
out
cld
aam
iret
shll
repz
repnz
cmp
aam
iret
repnz
in
mov
fcomip
int
xor
in
hlt
rol
cmp
sti
xor
cld
addb
test
aaa
enter
xlat
ljmp
test
stc
iret
dec
jecxz
icebp
test
lds
xabort
lret
fcom
flds
cmp
int
fcmovnu
out
lock
rcl
aad
xor
fxtract
aad
fcomip
fistpll
fpatan
ljmp
std
roll
loop
jmp
in
out
xlat
aam
icebp
loope
call
out
test
mov
in
shr
xor
aas
cli
faddp
rol
cmp
cld
xchg
fdivrp
xchg
into
in
std
rcl
xor
xor
in
cld
in
aaa
fdivrp
rol
cli
rol
fimuls
mov
mov
repnz
in
repz
repz
into
loope
fmulp
rcr
xlat
loope
cli
ljmp
rclb
ss
repz
fcmovne
in
cli
aam
int
jecxz
mul
cld
jecxz
loope
leave
fucomip
addl
sti
lret
fldl
fmuls
mov
clc
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
xorl
jle
add
int
int3
add
leave
cmc
ss
lret
cmp
fucom
ror
call
fucomi
leave
xchg
test
jecxz
fisttpll
out
in
aad
clc
fsubp
xor
loope
int
not
call
adcb
int
cli
icebp
hlt
jmp
div
cmp
cmp
push
sbb
and
xor
shr
enter
test
fiadds
jmp
call
loopne
test
div
sar
call
shr
cli
test
neg
jmp
enter
iret
xchg
fsubp
aad
int
out
out
xor
iret
shl
call
aad
mov
call
out
enter
out
leave
roll
xlat
lret
out
into
fistl
out
aas
out
sar
in
call
cmp
stc
not
stc
mov
xchg
test
call
xor
aam
jmp
loop
cmp
jecxz
jmp
ljmp
rcr
jecxz
in
shr
cmp
push
loope
aam
rcl
xlat
jmp
frndint
loopne
decl
ret
repnz
fcomi
xlat
lret
cmp
jmp
repz
ret
neg
fld
in
test
call
not
idiv
shr
loope
ret
fdiv
fiadds
test
int3
jmp
cmc
call
ljmp
flds
ret
flds
loop
xlat
lock
hlt
xor
fcmovbe
hlt
iret
loope
rcl
mov
jmp
cmc
mov
lock
loop
lock
rcr
sti
shl
call
sar
ljmp
sbb
out
rcl
inc
out
cmp
call
std
clc
lock
test
call
ljmp
xor
out
lret
not
add
aad
filds
xchg
in
adcb
xor
out
ss
add
xchg
out
rorl
leave
xchg
into
xchg
imul
aam
ret
iret
fcmove
cmp
loopne
cmpb
ljmp
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
je
jmp
fiaddl
jle
jmp
mov
out
cmp
cmp
sti
addb
aam
mov
xchg
int3
out
mov
xor
jmp
xor
aad
call
ljmp
shl
cmc
leave
in
ljmp
enter
aam
repnz
lret
sar
in
test
in
lock
cld
aam
jmp
ljmp
ret
stc
ds
enter
or
iret
in
sub
out
xlat
ret
lret
cld
xor
repz
cmc
cld
loop,pt
loopne
movb
out
into
in
jmp
ror
shl
das
jmp
ror
fnstsw
or
call
in
xor
out
hlt
decl
test
fsubp
pop
push
shl
out
xor
lock
into
or
aas
fadds
test
lret
fcomp
lea
int3
repnz
iret
aad
test
cld
rcl
mov
in
sar
call
std
xchg
aaa
aam
out
out
in
idiv
sarl
out
faddp
mov
sub
clc
mov
call
aad
shl
into
repnz
aas
sti
clc
out
out
mov
lock
repnz
cmp
ds
lock
shl
mov
xlat
jecxz
xchg
loop
aad
out
out
aaa
aam
hlt
or
fsubr
fninit
loop
jmp
filds
inc
sub
in
das
aad
int
into
cmc
cmp
hlt
in
mul
int
xchg
mov
out
xabort
out
cmp
lret
fidivrs
mov
test
in
test
incl
cmp
repz
fcmovnbe
jmp
fsub
fcomp
fdivp
decb
cld
loope
fstl
enter
neg
leave
cli
repnz
loopne
mul
fcmovu
mov
lret
xchg
int
cmp
icebp
xor
into
ss
jmp
sar
addl
out
loope
ret
cmp
cmp
clc
xlat
cmp
fdiv
lret
fcmovu
out
cmp
fimull
add
add
xlat
mov
rcr
xlat
sub
aam
hlt
jg
fiaddl
jle
sti
loope
xchg
xchg
xchg
mov
jmp
xor
int
cmp
div
stc
loope
cmc
enter
jecxz
loopne
xchg
xchg
out
icebp
mov
out
jmp
idiv
aas
adc
ret
loop
test
ror
lock
pushl
test
cmp
clc
not
adc
sub
mov
lock
sar
cmp
fstp
faddp
aas
loopne
fadd
out
repz
les
repnz
fistpll
rol
iret
aam
std
out
sbb
cli
lds
in
in
mov
loop
in
int
sar
xlat
shr
jecxz
stc
ret
cmp
xchg
in
in
enter
mov
aam
icebp
aam
cmp
out
cmc
cmp
lret
cli
xchg
clc
xchg
loop
fabs
lock
into
shr
les
in
iret
div
cmp
icebp
hlt
xchg
loope
addb
out
in
cmp
xchg
cmc
icebp
jecxz
jmp
lret
clc
stc
repz
lds
cld
clc
call
xorb
in
in
call
div
cmp
shl
ret
mov
fsubr
xchg
clc
xor
cli
icebp
imul
shl
icebp
test
fadds
xlat
in
flds
clc
cmp
aad
out
fldl2e
lock
shl
mul
enter
mov
loope
xchg
shl
jmp
cmc
ss
rcl
fcomp
fsub
cmc
loop
shl
sti
into
out
lock
mov
in
jecxz
std
cmp
cmp
test
in
shr
hlt
ret
add
nop
loope
decb
xlat
ret
aaa
aaa
jmp
aad
out
cmc
fimuls
out
icebp
lret
shl
out
call
loopne
into
cmp
cmp
fistpll
fisttpl
ffree
aam
repnz
xor
enter
xor
clc
sbb
hlt
xlat
and
fldl
xor
stc
out
frndint
call
out
jecxz
test
fiadds
nop
xchg
xchg
enter
sti
out
call
lock
stc
xor
jmp
lret
xlat
aas
rcr
int
in
push
das
in
je
outsb
idivb
fiaddl
jle
aas
jecxz
loop
in
jmp
mov
out
adc
aaa
shl
lock
cmp
cmp
aaa
out
ret
out
sti
lret
neg
fxch
mov
out
in
mov
aad
xor
out
shr
lret
div
std
jecxz
ffreep
sti
loop
in
xchg
std
xchg
mov
rcr
enter
rcr
int
repnz
add
jecxz
jecxz
clc
ljmp
ss
cli
ljmp
enter
mov
incl
loop
leave
loope
aad
std
iret
iret
cmp
loop
cld
cmp
test
out
in
jmp
out
icebp
jmp
jmp
lock
xlat
xor
fucomip
test
mov
int3
mov
xor
sti
rcr
cmp
not
ror
adc
fcmovnb
fiadds
xlat
int3
aam
iret
cli
ljmp
int3
cmp
rol
jecxz
mov
and
icebp
out
out
xor
ss
iret
idiv
roll
xlat
into
lock
jmp
iret
jecxz
loop
loope
jmp
fnstsw
rcl
loopne
in
fcomp
fmuls
frstpm(287
sti
repnz
cs
out
aam
shl
cmp
cmp
enter
iret
mov
iret
icebp
lret
aam
aas
repnz
les
aam
ljmp
sub
rorl
xor
iret
int
lret
aad
out
std
aam
stc
incb
out
adc
loop
int
stc
stc
fstp
lock
int
into
fsub
add
fdivrs
orl
std
aam
lret
cmc
idivl
cmp
std
int3
repnz
xlat
roll
lret
in
test
xchg
test
in
fdivr
xlat
cli
cmc
fld
cmc
xlat
ds
cli
xchg
cli
int
nop
ljmp
aaa
lret
clc
xor
iret
icebp
xor
icebp
into
xor
loop
lret
mov
sti
rolb
fsub
call
fidivrs
in
aaa
cmp
stc
call
lret
iret
orb
xor
cmp
out
add
jmp
jmp
lret
fst
mov
addr16
mov
stc
jg
fiaddl
jle
sarb
cmc
ds
fsubp
addb
xchg
loope
aaa
hlt
cmp
sar
ljmp
hlt
cmp
fld1
in
clc
clc
out
fucomip
out
int
rol
fmul
in
int3
jmp
adc
xchg
fsub
hlt
lret
xlat
lea
mov
ss
lret
shr
cmp
addl
ret
orb
repz
out
xchg
div
out
xor
lock
cmp
aad
xlat
cmp
aaa
sbb
enter
test
into
iret
cld
jmp
out
aam
int3
ss
leave
ljmp
int3
std
out
fnclex
ljmp
cli
fnclex
lock
in
fcompp
rcl
into
repz
rcl
test
loopne
jecxz
shr
mov
jecxz
lock
in
ret
out
std
xlat
hlt
aas
fsubp
add
sti
shl
xchg
sbb
inc
mov
hlt
shl
hlt
ret
xor
ljmp
fucom
sar
jmp
ror
and
call
in
into
lret
xor
out
cmp
iret
out
cmp
jmp
in
mov
in
int3
xchg
xchg
vpaddq
lock
iret
iret
rol
icebp
sti
ds
ret
sti
loop
out
mov
xor
std
call
sar
in
in
rolb
jecxz
sbb
ficoms
aad
shlb
shr
icebp
shl
fcmovbe
loop
std
idiv
mov
test
shlb
aad
xlat
jmp
fnstsw
xlat
cmp
and
aad
fchs
fcomip
aas
loop
rorb
xchg
rol
lret
cld
rcl
fdivrp
repnz
test
xor
jecxz
shr
loopne
loope
mov
rcl
shr
xor
add
cmc
test
cld
mov
enter
loop
hlt
mov
jmp
div
aaa
ljmp
fxam
sbb
cli
testb
jmp
xor
sarb
call
popl
lret
into
lock
aad
clc
fcmovne
xor
fcmovbe
ror
loopne
sar
jecxz
call
hlt
les
xor
push
call
in
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
repz
jle
add
ljmp
xchg
rcl
lret
aas
shr
test
jmp
xchg
lock
in
cmp
int
repnz
fucomip
iret
sarl
mov
cmp
call
int
jmp
int
aad
xor
lock
into
jecxz
out
out
sarb
repnz
fiadds
or
xchg
bnd
lock
sarl
ret
fucomip
cld
mov
subb
jmp
xlat
fmul
out
out
repnz
mov
cld
loope
mov
in
xor
cmp
stc
aaa
xlat
loopne
out
loopne
xchg
in
call
stc
std
out
in
rol
cmp
hlt
test
xlat
neg
aam
mov
sar
std
orb
jmp
les
sti
ret
rol
in
in
xlat
cmp
fidivrs
ret
xchg
test
rol
call
das
xlat
xlat
int3
out
cli
std
clc
ss
mov
enter
call
mov
call
cmp
fmul
jmp
jecxz
out
ret
fildl
std
lea
repz
xor
rcr
shr
loope
aad
roll
in
fdivrp
ret
sti
nop
mov
shl
out
shr
int
xlat
sarl
loope
stc
clc
addb
fstl
lock
clc
aam
lock
loope
jecxz
cmp
sbb
xchg
jecxz
stc
xlat
ror
cmc
in
in
ret
cmc
int
orl
lret
xor
neg
repnz
mul
idiv
fldl2t
aam
filds
xor
pause
in
iret
lret
aaa
out
aam
cmp
ror
cmc
rol
adc
sbb
xchg
xor
lock
lret
cmp
cmp
loope
icebp
rcr
fsubr
xchg
mov
mov
loopne
rol
out
lds
ss
cmp
cld
out
ds
xlat
xlat
rorb
out
xchg
loopne
icebp
fxch
cmc
stc
lret
testl
sti
enter
fldl
int3
shll
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
aad
out
add
jg
fiaddl
jle
into
cmp
sti
cmp
cmc
adc
std
xchg
stc
mov
jmp
std
int
mov
cmp
add
int3
hlt
aam
repnz
cmp
cmp
in
in
mul
cld
icebp
mov
ljmp
aaa
xor
xlat
idiv
ss
jmp
in
hlt
neg
out
jecxz
loopne
int3
xchg
call
ret
lret
leave
shr
aas
cmp
xlat
fcmovu
xchg
jmp
cmc
mov
in
std
int
jmp
ljmp
lret
idiv
rcr
xlat
in
iret
fadd
repz
ljmp
int
loopne
shrl
in
aaa
clc
cmp
cmp
aam
not
out
jecxz
cld
call
nop
adc
shlb
fsincos
repnz
jecxz
in
testb
ljmp
int3
xor
jmp
ljmp
xchg
jecxz
xchg
shr
enter
vpxor
ss
int
enter
cmp
cmp
mov
popl
out
shlb
jecxz
int
shr
shr
std
jmp
xor
into
hlt
fsub
int3
cmp
shl
clc
cmc
iret
repz
out
sbb
mov
in
xchg
call
icebp
xor
call
int3
cmp
xor
in
xlat
repz
lret
sub
mov
enter
aam
imul
int
repz
jmp
std
clc
cmp
lret
mov
out
fiadds
rcl
xor
xlat
lret
in
in
icebp
ds
aaa
jecxz
aam
aad
stc
fxtract
movb
rolb
cmc
xor
xor
sarl
sti
faddp
int
xor
xchg
fucomip
jecxz
add
xchg
loop
xor
ljmp
loopne
shl
cmc
xchg
in
mov
into
in
in
cmp
ror
addb
xchg
fcmovb
fucom
into
out
fucom
cmc
lret
ret
xor
out
repz
sarb
lock
idivb
fscale
std
jecxz
int3
xchg
aam
aad
ss
jmp
loop
cmp
aam
fcomp
aad
mov
cld
rorb
mov
mov
jmp
leave
aas
ret
vpcmpeqw
aaa
add
jg
fiaddl
jle
int
hlt
xlat
fst
leave
sti
sar
cmp
fcom
xchg
fcomi
ror
lock
in
int3
stc
repz
idiv
in
into
cmc
fstp
xchg
enter
xlat
fiadds
out
in
ss
cmp
iret
ror
fldz
cmp
addb
mov
aam
stc
int3
hlt
xor
in
stc
fidivrs
fcmovu
sar
fcmovnbe
cmp
out
add
jmp
loope
test
jecxz
out
cmp
lock
lock
test
loop
xchg
out
in
cmp
aam
xlat
loope
lock
mul
sti
not
mov
lock
aam
divb
into
cmp
in
cmp
lock
fsubr
jmp
leave
lret
orl
int3
hlt
imul
int3
stc
lock
in
aam
mov
mov
addb
cmc
ret
int
repnz
aad
sbb
sar
testl
xchg
xchg
loopne
hlt
out
aaa
aam
cld
sar
cmp
fld
aad
aad
stc
rclb
out
lds
hlt
out
cli
int
repz
test
aas
roll
fdivrp
xchg
loop
sar
icebp
leave
out
out
aaa
shl
imul
lret
cmp
sbb
push
out
mov
in
ror
stc
xlat
fdivr
cmp
in
ret
clc
mov
ret
mov
sti
lret
mov
ss
faddp
xor
cmp
in
out
out
cmc
mov
ret
test
lret
iret
xchg
enter
xchg
out
shrl
shl
test
out
adc
out
stc
imul
jmp
fnstsw
in
loope
lret
cmc
lret
jmp
cmc
repz
cmc
cld
inc
loope
fcmovnu
xchg
lret
out
shrb
les
repnz
cmp
loop
std
out
mov
mov
loopne
cmp
in
divb
cmp
lock
aam
roll
xlat
mov
into
fcmovb
lret
fsubp
lock
stc
iret
xlat
xlat
int3
fcom
in
in
ds
fxam
lret
in
sti
xor
add
add
ret
lret
ret
int
int3
int
adc
in
mov
add
cld
nop
mov
int3
fprem1
aaa
in
not
into
loop
lock
xchg
test
out
ds
movb
mov
cmc
das
xor
shl
lret
lock
cmp
rcr
aas
ret
out
fsub
jecxz
std
cld
xchg
ret
shr
aaa
jmp
sar
iret
aam
out
xchg
jmp
int
xchg
jecxz
xor
sar
icebp
sti
not
aam
cmp
xabort
ret
mov
jmp
out
xor
lret
fcomip
clc
loope
out
fiadds
test
out
mov
repz
shll
leave
aaa
sti
aas
in
repz
clc
cmp
fcmovnu
sti
lret
nop
out
std
test
xor
xlat
lret
in
lret
out
int3
lock
xor
in
repz
aas
cli
rcr
in
loop
enter
loop
mov
sti
cmp
out
cmp
xchg
call
out
call
rcl
not
fiaddl
cmc
jecxz
mov
jecxz
icebp
loop
repz
cmp
jmp
out
cmp
xor
out
test
inc
loopne
mov
into
fdivp
enter
in
stc
enter
ret
int
loopne
testb
loopne
repz
int3
mov
aaa
in
out
shr
fsub
hlt
ljmp
rcl
test
test
enter
xchg
xchg
out
ljmp
fpatan
cmc
sti
cmc
into
idiv
fdivr
test
loopne
lret
shl
clc
rcl
lret
fdiv
lock
int3
and
in
incl
loope
xchg
test
xor
cmp
adc
out
fucom
ljmp
loopne
xchg
aam
enter
cld
sar
call
icebp
cli
rcr
xchg
idiv
cli
stc
out
ret
ror
jecxz
in
in
out
xor
into
clc
xor
repnz
repz
repnz
ljmp
out
xor
mul
xor
fistpll
iret
cld
cmp
cli
ds
cmc
neg
lds
xchg
lock
fincstp
enter
aad
cld
lock
in
sar
cmc
cli
fimuls
pop
in
je
add
ror
aas
roll
ljmp
test
fiaddl
jle
mov
std
lock
aaa
aam
iret
xlat
fnstsw
call
aas
cmp
jecxz
int3
test
orl
xor
rcl
loope
fcom
fcomp
div
out
cmp
clc
enter
into
xchg
orb
cmp
lock
sarl
adc
in
aam
repnz
jmp
fucomp
out
repz
cli
ret
cmc
dec
fcmovbe
into
icebp
into
icebp
loopne
jmp
fcmovb
lret
out
sbb
xor
ret
in
cmp
clc
fdivr
in
fiadds
xlat
loope
stc
nop
ret
lret
shl
hlt
ss
repnz
cmp
in
out
shlb
out
cld
xor
loop
jmp
hlt
jecxz
aam
aaa
clc
cmp
cli
cmp
cmc
shl
cmc
clc
xor
iret
jmp
int
xchg
loope
jmp
aad
jmp
std
sarl
test
loope
testb
in
rcr
enter
out
out
cmp
ds
mov
mov
ret
xchg
icebp
in
xlat
out
lret
out
ljmp
sub
ret
out
mov
shr
orb
shl
out
xor
out
rcr
fsub
cli
aad
sti
int3
adcl
xor
call
into
rcl
rol
mul
fcmovbe
ret
stc
iret
in
ret
fiaddl
stc
loop
fcmovnbe
enter
shl
cmp
out
and
call
icebp
lret
jmp
fdivp
loope
or
cli
mul
mov
in
lea
aaa
jecxz
jecxz
ror
repnz
jecxz,pt
in
cld
out
loope
mov
xlat
and
loopne
in
clc
xor
sub
fidivrl
repz
sti
stc
mul
clc
iret
fcmovu
call
out
in
cli
sar
mov
out
ss
sarb
aaa
aaa
cld
int3
leave
xlat
int3
hlt
stc
rcr
sti
add
mov
out
inc
loop
cmc
aam
lock
shrl
shll
shlb
not
decb
test
lret
leave
out
and
shl
clc
lret
xlat
std
ss
int
std
loopne
mov
mov
mov
jmp
into
aam
fmul
dec
cmp
jle
xchg
fiaddl
jle
aad
ffree
mov
pause
int
xchg
loop
xor
lret
icebp
shr
sar
repz
xchg
fld
xchg
nop
xchg
enter
xchg
loope
repz
cmc
fsubr
aam
repz
aas
out
enter
adcl
aad
in
jecxz
ds
out
ret
lds
lock
xlat
cmc
in
lock
cmp
cli
cmp
cmpl
jmp
loopne
in
lock
loope
cmp
lret
cmc
int
into
cmp
loop
addl
iret
lock
into
iret
in
sub
fidivrl
lret
cmc
aaa
iret
repnz
std
xchg
cli
std
in
cli
repnz
xchg
adcl
into
enter
aas
cli
jecxz
div
fiadds
in
jmp
into
idivb
fnsave
into
sarl
fcmovnbe
lock
lret
fcmovnu
mov
ret
call
int3
xor
xor
fstp
ljmp
ror
shl
aad
xlat
in
aam
repz
sti
repnz
repnz
int
lret
xchg
loopne
shrb
stc
sti
neg
test
std
iret
loope
loop
fsubp
in
lock
xlat
fdivs
jmp
icebp
stc
cli
xlat
stc
sarl
sar
or
stc
mov
repz
out
int
aam
aaa
sar
cmp
loop
rol
repz
fadd
in
test
enter
fucom
jmp
test
cmp
in
cmp
push
in
in
addb
mov
test
out
jmp
cmp
aaa
int
rolb
sti
fst
fcmovnb
hlt
cli
into
int
mov
xor
in
xor
vaddsubps
out
cmp
roll
out
iret
fucomi
in
in
stc
xor
xor
sti
stc
cmp
loopne
aas
fdiv
call
lret
leave
repnz
in
shrl
out
xor
out
stc
shr
mov
mov
leave
cmc
out
aam
test
into
stc
xor
fucomip
ds
clc
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
in
dec
mov
fiaddl
jle
testb
mov
jmp
in
shl
cmp
das
cmp
cmp
ror
into
div
in
neg
sub
test
int3
out
stc
clc
lock
int3
out
in
enter
loop
xchg
mov
mov
stc
xor
cmp
ror
int3
cmp
out
xlat
neg
out
into
rcll
in
in
call
fcmovnbe
clc
fldl
testl
std
test
xor
in
fldl2t
aaa
sar
cmp
xchg
loop
mov
jecxz
loope
xchg
test
in
xchg
loop
jmp
cli
cmc
jecxz
out
xor
ror
out
lret
testb
lret
leave
xchg
call
adcb
enter
fsubr
int3
fdiv
rcl
xlat
xchg
in
mov
adcl
out
xor
repnz
loope
cld
cmp
fdivrp
stc
xchg
hlt
mov
cmc
jecxz
aad
out
ds
cmp
xor
jmp
std
fisttps
xchg
in
call
cmc
cmp
lock
int3
fsubr
fists
aad
icebp
cmp
cli
aaa
lock
filds
in
icebp
test
sti
lret
in
into
les
fcomp
aad
shl
rcr
xor
ret
aam
mov
or
int
fdivp
aad
shr
shl
int
int
into
int3
fcmovnu
faddl
cli
loopne
lock
icebp
int
cmp
sub
lret
cmp
cmp
out
cli
cmp
xchg
std
ficoms
repz
idiv
rcr
fucomi
loop
test
enter
jmp
fsqrt
out
in
aam
out
neg
fcmovbe
fcomp
jmp
cli
cli
into
in
xchg
rorl
xchg
hlt
iret
xlat
lret
fidivs
jmp
out
ds
fmul
jecxz
cld
xchg
sbb
iret
xchg
into
fxch
lock
lock
cmc
enter
cmp
sti
std
cld
in
mov
call
xchg
repz
loopne
lock
aam
roll
in
jmp
ror
rcl
stos
sub
insl
in
adc
sub
jle
sbb
flds
enter
enter
xchg
in
ljmp
in
neg
aam
cmp
not
loopne
test
mov
adcb
clc
cld
enter
loopne
int
cmc
les
mov
clc
lret
aad
jmp
in
jecxz
lret
mov
vcvttsd2si
lret
loopne
leave
cld
std
fmul
sar
cmp
ret
stc
lock
loop
jmp
dec
fnstcw
cmc
loopne
cmp
lock
loopne
faddl
in
ffreep
fmul
sarb
ss
std
leave
loopne
pushl
sar
rol
cmc
fadds
fcoml
lret
lock
cld
xlat
in
aad
hlt
test
xchg
add
fdivrp
test
loopne
xor
int3
xlat
stc
ror
icebp
cmp
clc
aam
out
or
testb
call
xor
int3
cmp
jmp
xor
stc
fiadds
and
hlt
into
sub
cmc
cmp
aam
shl
call
cld
cmpb
call
fadd
in
out
test
sar
cmp
leave
cmp
aam
fdiv
aam
test
out
loope
mov
enter
xchg
mov
shl
fdiv
enter
icebp
loopne
fxch
std
fcmovbe
aad
cli
sti
cli
std
testl
fcmove
icebp
in
aam
cmp
ret
xchg
cli
bnd
or
int
test
test
enter
sar
ds
test
lock
out
in
ret
loop
ret
lret
fisttps
cli
shl
out
idivb
jmp
testl
stc
nop
jmp
jmp
fnstcw
std
ret
clc
rcr
test
jmp
xchg
loop
icebp
loope
cmp
cld
jmp
shl
out
adc
in
aad
enter
lock
lock
hlt
lret
fcomip
fucomp
in
repnz
cld
cmp
leave
lea
hlt
shl
in
ljmp
int
loop
aas
shl
test
xchg
sub
jmp
cs
lret
mov
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
sti
std
lret
aad
fst
loopne
xlat
ljmp
std
loop
in
int
repnz
lock
repz
loopne
aas
repnz
cmp
mul
out
mov
mov
sub
aaa
lret
repnz
cmp
leave
in
in
clc
loopne
vpmuludq
loope
icebp
rcl
jmp
int3
iret
cmp
jmp
ds
cmp
sti
rcr
cld
or
nop
lret
int3
fcomip
xchg
ljmp
rcr
aam
testl
jecxz
fimull
not
aad
xor
div
cmp
fiadds
xlat
test
les
jmp
xchg
mov
lret
fsub
in
repz
clc
fucom
shl
clc
orb
out
loopne
iret
int
out
leave
into
cmp
sar
cmp
clc
aad
cmc
test
out
into
shr
xchg
mov
out
leave
in
iret
ds
call
idivl
fisttpl
enter
mov
shr
shlb
jecxz
fmul
icebp
not
sti
sarb
stc
cmp
cmp
clc
jmp
icebp
call
xchg
loope
in
jmp
loopne
shl
test
int
orb
int3
xor
into
sti
neg
iret
rol
testb
cld
mov
loopne
rcl
int
xor
cmp
lock
aam
in
in
hlt
lea
xchg
hlt
jmp
repnz
ljmp
jecxz
stc
loope
ret
in
decl
xchg
xchg
call
aaa
xor
xor
out
icebp
faddp
fcmovnu
lret
sti
int
leave
lea
out
loop
aam
ror
cli
incl
shl
ror
cmc
mov
xchg
in
test
stc
rcr
int
xor
sbb
ror
loope
fxch
hlt
test
jecxz
loop
loopne
sti
in
jmp
xor
xor
idiv
jmp
aam
fiaddl
cmp
ret
iret
xchg
nop
ljmp
call
in
shl
int
iret
jmp
out
dec
addl
shr
imul
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
test
nop
jg
fiaddl
jle
fcomp
out
in
enter
int
rcl
fyl2x
mov
jecxz
jecxz
call
icebp
jmp
cmp
lret
icebp
in
idivl
fcmovnu
call
leave
int
stc
loope
cmc
shl
enter
in
out
out
leave
rcr
in
in
sbb
loop
orl
mov
sub
out
ret
int
xor
shl
loopne
cmp
fcmovu
filds
mov
sub
int3
lret
fsubp
icebp
fdivrl
fldz
cmp
aad
out
in
cli
int3
out
std
xchg
ljmp
aaa
fcomi
jmp
jmp
xor
jecxz
in
aam
in
std
addb
mov
int3
rcr
lock
shl
cmp
cmp
jecxz
xlat
ret
loope
lret
iret
fsubr
out
rcr
xlat
idiv
rcl
into
incl
repnz
loope
mov
xchg
in
xchg
leave
lret
iret
adc
sti
flds
loop
test
rcll
les
jmp
shl
fnstcw
repz
cmp
lret
aad
xchg
in
sti
out
jmp
out
xor
in
aaa
lret
ds
cmp
int
repz
out
not
mov
fucomi
sti
incb
out
out
fcmovne
xor
cmp
xlat
rcr
in
fchs
aad
std
orb
ret
ror
xor
cmp
cmp
aam
test
fucomp
lock
sub
out
xchg
rcr
int3
aad
sti
cmp
repz
sti
shl
aas
lret
rcr
aam
clc
fiaddl
in
fsubp
fcmovne
mov
xor
xlat
out
aad
loope
fdivr
test
aam
orl
mov
aam
jmp
rcl
clc
ds
rol
cli
addb
xchg
lret
lret
adcl
clc
int3
icebp
in
fdiv
test
loopne
ffreep
fucomp
ret
incb
std
mov
out
loop
xlat
into
idiv
clc
call
int
in
adc
std
fsubp
nop
sti
lea
hlt
xor
idivb
int
sbb
fcom
repz
test
lret
nop
ljmp
je
add
enter
fcmovne
fst
or
pop
xchg
pop
int
ds
jg
fiaddl
jle
aaa
fld
iret
aad
icebp
out
jmp
sti
ret
shl
loope
in
test
stc
out
mov
aam
rcr
in
int3
idivb
shl
hlt
in
fistpll
incl
cld
icebp
in
or
idivb
aam
sub
sti
repz
int
cmp
fndisi(8087
std
hlt
fcom
aas
clc
mov
int
loop
clc
clc
xor
into
cmp
shl
rol
out
fiaddl
repz
call
sub
out
fstp
in
fcmovne
rol
ds
bnd
cmc
in
into
in
ljmp
xor
rcr
cmp
rcl
ds
repnz
stc
icebp
fnstsw
call
fadds
rorl
shll
jmp
repz
cmp
out
in
cmp
fsubr
mov
xchg
lret
xchg
mov
xchg
vpsrlw
icebp
neg
cli
xor
fcmovnbe
xchg
cmp
fcmovnu
in
in
mov
ljmp
cld
rcr
cmp
fisttpl
jmp
out
decl
cmp
sarl
cmp
out
lock
out
shl
idivl
leave
fucompp
cmp
mov
jmp
ror
div
ret
into
xlat
stc
fdiv
rol
cmp
enter
mov
rolb
fists
xor
iret
into
in
rcr
addb
clc
mov
and
iret
adc
sub
leave
ror
lret
out
in
fsubrp
shll
aam
test
cmc
xchg
xchg
loope
aas
clc
f2xm1
xor
rcr
fldz
clc
sti
roll
shl
incb
loop
fiadds
repnz
out
cld
out
ds
lock
sar
xchg
pop
in
fucom
shr
in
call
ljmp
fucom
fcomip
shl
rcr
xchg
cli
clc
loop
jmp
in
mov
rcl
vaddsubps
cmp
in
int
sar
cmp
ror
repnz
mov
out
xor
cli
bnd
call
neg
cli
ret
sbb
mov
xchg
mov
loop
xor
in
out
cmp
out
loope
std
jmp
fsub
mov
loop
add
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
adc
add
out
orb
jecxz
out
fdiv
out
fdivrp
fdivrp
sar
mov
mov
mov
lret
int
std
in
out
xor
xor
rcr
aad
roll
movb
fdivrp
hlt
adcl
aas
icebp
cmp
xor
in
loopne
xlat
fdivr
enter
xchg
jmp
xlat
ljmp
in
cmp
cld
rcr
stc
loopne
out
in
ljmp
ljmp
in
loop
fdiv
xchg
cli
orl
loop
ret
jmp
cmp
hlt
call
lock
test
lret
loope
nop
cmp
push
repnz
out
ret
in
cmp
fucomip
xlat
aas
repnz
sarb
loop
xchg
std
int3
loope
jmp
int3
or
stc
call
cld
fdivp
in
in
ror
cli
mov
ffreep
out
xchg
shl
stc
into
shl
cmp
out
into
fsubr
in
loop
xchg
enter
fdivr
in
loop
loop
in
ss
ljmp
rol
rcr
test
out
int3
icebp
in
rorb
cli
lret
sti
xor
loope
hlt
loopne
ljmp
leave
leave
in
repz
out
enter
fdiv
xor
imul
cmp
loop
rcr
sbb
int
mov
in
fimuls
repnz
in
lock
lock
cmp
aam
stc
mov
nop
orl
xor
into
fcmovnbe
lock
shr
loope
fstpt
mov
fisttpll
loopne
repnz
repz
in
std
into
leave
shl
xor
ss
cmp
ffreep
out
out
shl
jmp
rol
icebp
icebp
stc
shr
ror
ss
ret
cmp
jmp
shl
jmp
aam
sti
ljmp
in
fucom
out
icebp
hlt
test
fiadds
int
xor
fsubrp
repz
lret
hlt
clc
into
ds
cmp
xchg
loopne
fsubrp
enter
iret
ret
aad
cmp
enter
sarb
cmc
icebp
fdiv
cmp
mov
add
cli
jbe
mov
mov
jmp
rcl
into
test
mov
pop
adc
jg
fiaddl
jle
lret
loop
mov
cmc
ficoms
fmul
cli
ss
cli
repz
loopne
ljmp
shl
aaa
out
lret
sti
repz
sti
aad
fcmovnu
cmc
clc
fldl
decb
sub
aam
aam
loope
out
cli
fiaddl
test
mov
loop
lock
out
jmp
rcl
rcl
ret
out
aas
in
sub
add
not
out
cmp
xor
repnz
cmp
roll
fucom
icebp
fisttps
fdiv
xor
aam
enter
aas
hlt
fadd
test
fldl2t
mov
jmp
xchg
ret
loopne
roll
enter
lock
in
not
out
mov
cmpl
xchg
xchg
repnz
aam
fstp
lret
cld
or
div
repz
out
std
out
lock
in
ljmp
lret
cmp
shr
cld
in
out
faddp
shl
movb
hlt
mov
jmp
leave
hlt
stc
repz
ds
jecxz
loop
ffreep
mov
cmp
addl
xchg
ss
call
cld
cmp
fiaddl
enter
out
out
ljmp
neg
repz
cld
hlt
loopne
fdivrl
fcmovbe
fdivp
lret
int3
aas
fucomp
popl
in
in
fadd
lret
cmp
cmp
rcr
sbb
call
mov
ficoms
out
hlt
jecxz
enter
aaa
into
ret
fdivr
fadds
neg
mov
mov
leave
in
jmp
icebp
xlat
aam
fucomip
sar
clc
faddp
fcmovb
in
jmp
addb
jecxz
xor
adc
add
fsubp
leave
cmp
mov
test
incl
cli
int
out
xor
shr
ffree
enter
in
jmp
std
mov
repnz
jmp
shlb
lret
fucomp
icebp
repz
fdivrp
fdiv
push
les
cld
loope
sbb
nop
loopne
loope
xor
repz
cmp
aam
repnz
orb
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
mov
jg
fiaddl
jle
ret
xlat
fmull
ret
out
icebp
lret
aaa
sar
loopne
fstp
rol
ret
movb
fsubrs
ror
cmp
in
cld
shr
xlat
fcmovu
cli
fsub
in
out
orb
and
cli
stc
in
out
shr
clc
ret
loope
xchg
mov
mov
test
ss
repnz
jmp
in
enter
fcmovnu
cmp
test
rorb
cmp
cli
xor
icebp
ds
into
cli
xchg
fildl
stc
sti
mov
call
xlat
fdiv
jmp
imul
aas
clc
ror
in
mul
fadd
orl
icebp
cmp
out
out
iret
xlat
in
loopne
cld
shl
mov
test
out
neg
fcomip
aaa
ljmp
icebp
xchg
jecxz
fsubrp
fmul
rorb
int3
loopne
leave
aaa
cmp
out
jmp
aaa
rol
out
test
out
mov
sti
lret
xchg
mov
into
imul
loope
jmp
sar
shl
into
cmp
repz
stc
in
movl
xchg
xor
in
into
aad
cmp
out
test
ffree
clc
int
xchg
call
xchg
shll
out
out
repnz
ss
in
clc
lret
in
aaa
xor
out
ljmp
jecxz
imul
cs
jmp
ror
and
addl
mov
fcmovnu
cld
loopne
orb
int
lret
std
xlat
cmp
stc
rcr
in
fdiv
lret
mov
idiv
icebp
or
neg
jmp
out
ss
cmp
loopne
xchg
repnz
into
loope
out
loop
int
lret
rcr
rcr
idiv
xchg
out
xchg
loop
into
addb
xor
imul
fcmove
jecxz
cld
aam
xchg
rolb
out
lret
lock
in
cmp
lret
fsubr
shl
aas
lds
std
std
in
out
out
out
fists
sub
in
fsqrt
in
fdivrp
filds
add
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
and
jg
fiaddl
jle
shr
jmp
ljmp
loop
fcmove
out
out
xlat
ds
in
fidivrs
icebp
loope
add
cli
out
mov
nop
in
orb
icebp
cmc
out
cmp
iret
idiv
idiv
aas
fadd
cmp
loope
ljmp
mov
jmp
cmc
shr
fcompp
lret
iret
repz
test
out
idiv
out
incb
xor
sti
xor
sarb
out
rcr
xor
cmc
aas
fst
rcr
xor
int3
cli
jecxz
sar
shr
into
sarl
out
test
ss
cmp
cld
in
mul
aas
sarb
test
mov
lret
aaa
ljmp
aaa
repnz
stc
cmc
stc
incb
nop
lret
sbb
fidivrl
xor
repz
out
cmp
fstp
fiaddl
fucomp
call
lret
out
aas
cmp
aaa
stc
out
xor
ljmp
in
in
out
test
testb
jecxz
in
ret
fdivrl
int3
xor
aas
cmc
test
cli
test
incl
in
int
xor
jmp
fcmove
cmc
inc
test
fdivrp
test
ds
jmp
lret
ljmp
fcmove
cmc
loope
std
aas
ret
ret
ret
jmp
out
sub
int
imul
iret
jmp
int
in
in
ds
addl
lret
in
cld
std
ror
enter
cmc
enter
ss
aam
stc
ret
cld
not
xlat
enter
in
test
out
repnz
lock
cmp
test
lret
lea
mov
xor
iret
jecxz
repnz
aam
xlat
idiv
push
in
jecxz
jmp
fldpi
int
les
cmc
cmp
lret
int3
lock
lret
test
rolb
in
out
int3
out
leave
in
enter
xor
shll
flds
out
cmp
lds
in
call
jmp
sarb
stc
addl
incb
lea
in
out
cmp
sarb
xor
jmp
iret
ret
rcr
fxch
in
incl
into
rorb
lahf
jg
fiaddl
jle
xor
sarb
in
in
test
mov
int3
in
call
cmp
std
rcl
cmc
enter
loop
repnz
xchg
xchg
xchg
out
ror
leave
fmul
lret
loope
ret
iret
test
ret
cmp
out
ret
loop
xchg
orl
sti
std
stc
lock
sar
and
enter
add
mov
lret
or
std
repnz
repnz
in
ljmp
ret
loop
fldl
out
enter
jecxz
xor
lock
cld
in
int
div
aad
fstp
rol
sar
fcomi
jmp
ret
jecxz
rolb
fdivl
in
idiv
ror
loope
sti
rol
fidivrl
std
out
les
jmp
lret
cs
repnz
iret
loopne
jecxz
cld
hlt
xchg
fsub
cld
mov
decb
call
int
cmp
aas
repz
out
fcmovu
rcr
call
xchg
xchg
shl
aaa
repz
xor
sti
shl
cmp
iret
div
test
cld
addb
loop
in
lock
out
fcomip
std
cmp
repz
call
in
mov
lret
xchg
mov
ljmp
sti
repz
cld
cmp
lret
aad
nop
mov
jecxz
rcl
aad
out
cmc
xor
stc
in
icebp
faddl
in
rorl
jmp
ljmp
repnz
out
add
cmc
stc
out
lock
std
mov
mov
in
int3
call
hlt
repnz
loop
lock
xlat
xchg
in
test
lret
mov
ror
int3
rcl
xor
cmp
hlt
out
sub
fcmovne
test
call
fidivl
jmp
hlt
idiv
cmp
aad
hlt
sti
fcmovbe
repnz
mov
sti
mov
repnz
sub
in
xlat
shl
into
ss
and
in
jecxz
clc
loopne
clc
icebp
in
lea
out
sub
cmp
cmp
push
rcr
fcomip
loope
ds
ret
ret
out
lret
sub
lock
shl
iret
lock
xlat
mov
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
iret
cmp
loope
cli
xchg
out
addb
in
loope
ss
sti
sar
jmp
out
aas
ret
roll
test
in
icebp
jecxz
hlt
xchg
jmp
int3
ror
lret
aaa
in
rcr
aaa
fistpll
orb
xlat
or
and
int3
lret
jecxz
xor
xor
aam
loop
fidivrl
roll
in
test
cmc
sub
in
loop
cld
lock
fldl
test
inc
iret
sub
xchg
cmc
hlt
mov
out
hlt
enter
in
ror
lret
fcomp
aad
fildl
out
loop
ror
xchg
xchg
fsubp
shll
in
mul
call
aad
fstp
repnz
fldl
test
faddl
fsub
into
fld1
out
icebp
mul
adc
loopne
out
aad
cmc
mov
xchg
rcr
iret
shlb
repz
repnz
out
fstp
incl
xlat
xlat
xchg
in
xchg
xor
out
lock
stc
cmp
sti
xchg
xchg
in
repz
sub
ror
aas
int3
repz
jecxz
cmp
repnz
or
in
icebp
loopne
aam
mov
cmp
xor
cmp
std
fxch
test
iret
addl
mov
fucom
fsubrp
adc
mul
iret
xor
out
rcl
cmp
sti
lds
flds
xchg
or
xor
neg
shl
rol
mov
xchg
fiadds
mov
repz
mov
loop
xlat
lock
not
adc
fildl
in
lret
nop
lret
loop
inc
das
shl
leave
out
fdiv
stc
cmp
cmc
add
and
leave
movl
aaa
cld
in
repz
cmp
repz
loop
cmpb
cmp
xchg
loop
xchg
mov
cmp
out
leave
aaa
int
cmc
rcl
jmp
xchg
loopne
fmull
int3
iret
sub
in
jmp
aad
dec
xlat
ret
shl
sar
fadds
fisttps
iret
clc
hlt
fsqrt
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
popa
sbb
inc
mov
jle
sub
rcl
cmp
ret
loope
fisttpll
mov
out
in
sti
out
cmp
int
clc
in
test
aas
call
mov
repnz
sarl
cmp
aad
cmp
int
shl
aas
fadds
in
fmulp
icebp
mov
jecxz
out
lret
call
lret
shr
repnz
xchg
and
fimuls
fadd
enter
in
iret
out
cmp
aad
cld
loopne
ror
in
mov
ret
ljmp
out
xor
int
int3
add
cmp
enter
test
mov
test
icebp
mov
into
aad
cmp
in
aas
in
rcl
jecxz
incb
test
test
shr
std
sti
ds
stc
testb
mov
notl
out
into
aam
cs
aad
cmp
repz
cmp
shr
fcom
jmp
lret
adcb
div
ret
rol
aad
ss
std
iret
fidivrl
repnz
sti
in
xlat
call
in
jmp
in
stc
rol
repz
fdivrs
div
out
clc
jecxz
fneni(8087
fldl
xor
out
das
ds
ror
out
cmp
aam
fcmovnb
ds
fdivr
lret
into
out
xchg
shl
imul
call
cmp
iret
fildl
mov
in
int
hlt
xchg
lock
aad
jmp
in
fdivrl
fsincos
fucom
ret
testb
fimuls
hlt
jecxz
cmp
ror
repz
xlat
cmp
call
test
xchg
in
cli
rorb
div
out
in
cmp
clc
repz
lret
adc
rolb
fdecstp
mov
jmp
std
lock
into
cli
clc
in
call
repnz
repnz
in
cmc
in
leave
in
in
jmp
xchg
cmc
neg
stc
fsubr
ds
cmp
fiadds
lds
in
rcll
cmp
jmp
lret
std
stc
into
idiv
lds
sbb
out
roll
jmp
rcl
iret
aam
aad
sarl
cmp
cwtl
push
cmpsb
jg
fiaddl
jle
out
iret
div
jmp
fcom
cmp
shl
std
cmp
sti
loop
cli
ljmp
cmc
test
out
rol
int3
fadds
vpand
flds
shr
xor
in
repz
in
ds
rcr
cli
fdiv
icebp
add
leave
movb
repz
std
std
filds
sarb
fmulp
fcmovnbe
loope
incb
das
fcom
lds
hlt
fcmovu
xlat
cmp
rorl
into
f2xm1
sti
out
std
out
mov
xor
repnz
int3
ds
sar
rcr
rcr
cli
les
xchg
icebp
xchg
in
loop
fcmovb
cmp
std
out
cmp
in
rcr
cmp
idivl
fucomi
call
hlt
ror
iret
aad
xor
dec
repz
testb
fcmovnu
test
ljmp
out
jecxz
jmp
repz
cmp
cmc
shl
ljmp
out
mov
jmp
aad
jecxz
cmp
cld
cld
leave
not
icebp
fadd
stc
in
lret
fstpt
fsub
shl
into
in
sub
hlt
cmp
aam
lock
loope
test
repnz
in
fcmovnb
xchg
leave
jmp
fsubr
cmp
lock
in
fiaddl
into
test
ret
cmp
xor
cmp
fidivrs
repz
ret
mul
fiaddl
test
loop
shl
div
cld
in
fsubr
cmp
fildl
aam
cmp
ret
ffreep
adcb
cli
aaa
f2xm1
cmpl
int3
testl
ret
in
repz
cld
in
sti
rcl
cmc
stc
loope
cld
hlt
sar
out
lock
test
ret
jmp
repz
repnz
cli
aam
fbstp
cmp
roll
loop
mov
decb
sti
in
jmp
fcomip
loop
cmp
lret
mov
call
adcl
sti
jmp
sub
testl
cli
int3
xchg
mov
mov
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
test
mov
fiaddl
jle
test
xchg
jecxz
ljmp
cmp
ror
iret
bnd
sti
fmull
adcl
clc
fcmovnbe
lret
cmp
rcl
aas
in
mov
neg
fstp
loope
filds
stc
loop
icebp
xor
rcr
not
addl
xlat
out
in
stc
cld
leave
xchg
loope
divl
aaa
in
jmp
in
stc
int
fcmovnbe
repnz
in
in
in
in
mov
loope
in
clc
in
cmp
in
stc
in
cmp
ret
cmp
clc
cmp
stc
cld
enter
jmp
leave
test
mov
in
iret
loope
fadd
std
ret
cmc
sar
sti
clc
nop
fxch
in
xchg
repz
ror
cmp
jmp
cmp
cmpb
mul
enter
xchg
cmc
mov
int3
neg
out
enter
out
shlb
icebp
inc
repnz
ret
in
test
test
out
in
jmp
xor
lret
jmp
iret
into
cmp
int
jmp
jmp
add
aam
cmp
cli
idiv
into
out
fmul
faddl
mov
ljmp
xor
cmp
cmp
aas
loope
clc
mul
lret
ljmp
jmp
cs
lock
aaa
rcr
stc
aas
call
add
cli
jecxz
out
test
mov
icebp
repnz
hlt
lret
jmp
ss
cmp
adc
lret
xlat
in
mov
aam
cmp
cmp
lret
cmp
xor
loope
fisttps
lret
std
mov
hlt
loopne
das
loope
clc
fsub
xlat
lret
cmp
cld
mov
icebp
in
test
fnstenv
out
jmp
shl
ss
cmc
fiadds
lock
jmp
out
xchg
repz
into
sarb
fldpi
into
cmp
int
in
loopne
fucom
mov
add
call
out
loop
xor
cmp
fmul
clc
loopne
out
int
sti
loopne
in
lret
lret
dec
fadds
loop
repnz
xlat
aad
jmp
cmp
adc
sti
test
leave
test
jecxz
scas
shr
je
add
rol
lret
ror
int
aam
out
and
push
stos
jg
fiaddl
jle
loop
in
in
xchg
into
jmp
fdivrs
out
loopne
jecxz
or
fiaddl
mov
xchg
loop
rcr
cli
stc
neg
fadds
faddl
loop
test
fsub
fisttpll
in
ret
xor
xor
jmp
stc
lds
aad
xchg
and
fisttpll
sti
xor
cmp
cmc
cmp
icebp
shl
rcl
in
fcmovnbe
lret
in
jecxz
frndint
icebp
out
cmp
aaa
rcl
cmp
aam
lret
aas
out
xlat
mov
mov
movb
repz
jecxz
aam
aaa
call
ret
sarb
xlat
fucomp
out
into
xchg
repz
aad
rol
hlt
repnz
aaa
stc
rcl
loope
lock
loopne
mov
mov
int
into
xor
cmc
lock
int
aad
in
xor
int
out
clc
out
fisttpl
repz
int
xor
xor
ds
std
sar
repnz
xor
test
call
out
int
aam
xor
cmp
repz
xlat
aas
in
ret
cli
test
fnstcw
ftst
enter
out
jecxz
decb
ljmp
sar
loop
in
faddp
repz
std
mov
loop
loopne
jmp
aam
leave
aaa
ss
call
loopne
cmp
cmp
div
testb
icebp
aam
rol
ret
div
fcomp
dec
xlat
lock
out
fadds
fucomp
in
out
shl
fiadds
fadd
repnz
lret
icebp
in
cli
shl
cld
div
test
iret
fisttpll
lret
xlat
icebp
xor
icebp
cld
aam
inc
xchg
fcomip
cli
and
xchg
loopne
icebp
mov
fcmovne
aad
cmp
ret
cmp
call
ret
int
out
mov
out
int
icebp
and
sti
cmp
lret
ror
out
fcmovbe
jecxz
mov
sub
lock
stc
loop
iret
fdivr
cmp
ss
cli
lds
enter
int
int3
int
loop
xchg
rcl
repnz
in
sarl
cmc
cmp
int3
shl
xchg
rorl
mov
jmp
int
lret
lret
int
mov
pop
mov
fiaddl
jle
ljmp
iret
mov
xchg
ret
xor
call
rcl
xlat
clc
loopne
stc
orl
and
xor
cld
cli
addl
in
sti
mov
out
int
xor
das
int
xor
jmp
sar
enter
adc
leave
cld
and
into
shl
aad
aam
testb
shl
incb
out
xchg
loopne
out
shr
into
jecxz
ror
aas
idivb
fdivr
rolb
out
out
cli
ret
adcb
int
xor
shr
cld
cmp
rcl
sti
loope
in
leave
push
loop
mov
jmp
lret
int
icebp
xchg
out
jmp
icebp
lret
aad
xlat
stc
in
ffree
leave
mov
cli
mov
mov
std
call
shl
into
cmc
fcmove
hlt
xor
repnz
repnz
imul
int3
or
lret
jmp
divb
sub
in
call
jmp
leave
rorl
sub
in
fmul
out
sti
icebp
sarl
cmp
decb
xchg
lret
shr
sarb
out
shl
repnz
aam
div
test
cmc
cli
orl
cld
shl
divb
xlat
in
cmp
cmp
out
xlat
clc
ret
lock
in
into
out
test
das
int3
shl
test
repz
out
cmc
cld
xlat
ret
xor
into
repz
xor
call
shr
loopne
test
hlt
roll
into
call
nop
iret
out
jmp
fsubrp
rcl
int
rol
ffree
ret
fsubr
cmp
loop
out
in
out
fcmovb
in
icebp
ljmp
xlat
shr
shl
not
inc
into
enter
into
hlt
into
xchg
das
div
idiv
fadd
cli
cmp
or
sti
loope
filds
testb
into
lock
cmc
out
xor
ds
fdivp
adc
cmp
int
in
ljmp
xor
lock
aam
cmp
jmp
ror
ror
aad
inc
push
add
aad
rol
jmp
rcr
leave
into
jmp
iret
not
int3
sti
cmp
icebp
std
faddp
aad
hlt
in
movl
ret
fcomi
in
div
lret
adc
cmp
cmc
sti
sti
lret
or
in
xor
in
aam
lret
hlt
cli
iret
in
ret
ret
fcmovu
clc
cmc
hlt
fcmovbe
fldlg2
call
xor
ljmp
rcr
cmc
testl
cld
leave
loop
incl
loope
icebp
fsubr
int3
repnz
xlat
xorl
mul
ret
movb
ljmp
shl
cmp
cmp
stc
cmc
rol
loope
les
call
lret
out
xor
shl
loopne
aad
sar
xchg
jecxz
test
fmull
xchg
in
shll
lock
repnz
test
ret
jecxz
fiaddl
std
std
fninit
xchg
out
hlt
in
into
repnz
in
cmp
iret
cmp
loopne
aam
xchg
out
test
clc
mov
xchg
lds
rcl
lock
fbstp
shl
loope
out
fadd
mov
out
int
out
xchg
jmp
int
xor
shr
fsubrp
shl
mul
out
cld
cmp
rorb
xchg
xor
enter
fdivp
cmp
iret
int
xchg
loop
neg
mov
in
fsubr
ret
call
shrb
ror
ljmp
sti
aam
ds
fneni(8087
in
mov
lock
loopne
out
out
clc
aaa
repnz
lret
ss
lock
dec
test
xor
aam
mov
fcmovu
shl
mov
ljmp
repnz
lret
cli
ret
cld
faddp
jmp
jmp
jmp
repnz
lret
jmp
xor
icebp
sti
cld
cli
test
fimuls
std
mov
xor
enter
out
fucomi
frndint
cmp
rolb
ljmp
jmp
divb
out
jmp
fcmovnbe
out
out
iret
repnz
aad
in
enter
jmp
fmuls
in
call
xor
in
aaa
loopne
fldl
add
in
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
in
mov
jg
pop
add
ret
loopne
cld
aad
test
div
out
out
out
sti
std
xchg
lock
ss
shr
call
jmp
jecxz
aam
sti
cli
aam
in
int
loop
or
test
in
imul
ds
hlt
cmp
in
aas
loop
call
fcmovu
xchg
into
xchg
xchg
loopne
jecxz
call
shr
rol
hlt
fcomip
xchg
fdivrp
or
mov
div
in
cmc
sar
div
shr
aas
xor
cld
in
fdivr
repnz
hlt
jmp
orl
xor
sarl
cmp
shr
fadd
cmp
mov
call
enter
aam
int
lock
loop
fadds
fiadds
icebp
and
in
aam
fcmovnb
xor
loope
sti
movl
les
mul
rol
repz
loopne
cmc
and
cld
cli
aad
push
leave
fcmovnu
out
addb
hlt
cmp
lock
sarl
fcomip
xlat
cld
jmp
in
sti
xlat
testl
in
lds
shl
ss
les
aad
in
lret
ljmp
int3
out
ret
aaa
in
std
fcom
ljmp
cmc
fdivr
jmp
fmul
and
cmp
repz
enter
f2xm1
test
or
xlat
lret
xchg
nop
out
jecxz
xchg
hlt
jecxz
shr
lret
xlat
fucomi
shl
ror
jmp
xchg
loop
out
into
ret
out
neg
iret
faddp
cmp
ds
fcmovu
fcmovu
fdivrp
xchg
out
out
and
xor
int
fnstcw
aam
hlt
cmp
repz
rcr
jecxz
movl
shr
repnz
out
int
div
out
xlat
repnz
add
addl
out
enter
jecxz
cli
jmp
std
fdiv
shl
loopne
sti
stc
cmc
fildl
loope
nop
loopne
aad
in
cmp
ds
shl
faddl
loop
std
or
xchg
loope
repz
hlt
xchg
aaa
lock
lret
shl
xlat
jmp
cmp
fucom
fdiv
std
jecxz
enter
std
cli
xchg
out
out
sar
into
hlt
fidivrl
leave
cmp
test
in
xchg
nop
sub
icebp
xchg
int
iret
in
out
mul
hlt
repnz
clc
not
testb
lret
sti
fsubp
xor
repnz
repnz
in
fnstenv
loope
repz
hlt
sti
sti
rol
mov
xlat
stc
out
enter
aam
int3
fxch
xor
cli
fcoml
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
mov
mov
jle
add
cli
shl
iret
ret
lock
in
idiv
sti
jecxz
loopne
jecxz
int
test
sarb
aad
neg
idiv
jecxz
inc
call
lret
iret
in
xchg
call
repz
call
sarl
fabs
fcmovbe
clc
mov
test
out
loopne
ret
ljmp
fucomp
push
incb
fadds
mov
mul
icebp
xor
enter
loopne
out
ret
xchg
cli
stc
jmp
in
mov
aaa
cmp
div
out
int
sti
ljmp
lock
test
in
testl
int3
aaa
cmp
cmc
in
xor
incl
add
fsubp
out
out
incl
int
icebp
in
leave
imul
lret
ds
roll
call
icebp
mov
lock
fxch
in
fcmovnbe
cmp
clc
ss
fnstcw
sar
out
aad
loopne
imul
lret
jmp
mov
fldcw
xor
fcmovbe
in
ljmp
fscale
loopne
call
loopne
ljmp
ror
cmp
ss
stc
in
test
ffree
fmuls
jmp
rcr
ret
clc
xor
fdivrp
lock
in
cmp
jmp
aas
nop
cli
out
fsubrp
repz
lock
ljmp
clc
sarl
fstpt
out
repnz
out
fucom
jmp
mov
out
out
das
out
neg
loope
out
fst
ret
lock
fucom
in
in
cli
out
lock
mov
and
loop
rcr
ror
or
in
jecxz
ljmp
out
ljmp
fmul
fcmovbe
cmp
cli
mul
mov
orl
in
loop
in
aam
sub
clc
aaa
repz
cli
fcmovu
lret
sti
fstp
xlat
enter
sub
lret
lock
lock
in
in
cmp
cmc
sti
aam
faddl
int
into
mov
out
out
mov
aaa
xor
ret
rcr
in
aas
cmp
fdivr
test
clc
mov
lret
adc
imul
into
sti
cmp
mul
repnz
leave
call
out
leave
mov
orb
lret
shl
out
adc
shl
in
loope
shl
enter
xchg
mov
in
cmc
ss
loop
out
icebp
enter
rcr
sarl
lock
mov
xchg
repnz
aam
shr
enter
stc
fstpt
stc
aam
clc
lret
in
leave
call
out
repnz
rcr
xor
xor
cmc
add
add
iret
xlat
ffree
fst
loope
sub
shrl
dec
movsb
mov
jle
add
clc
int
cmp
imul
loop
aad
movb
int3
lret
loopne
int
lock
cmp
cli
mul
test
ret
out
add
test
xlat
jecxz
xchg
aaa
repz
not
shr
loopne
int
roll
lea
int
in
loopne
xor
ret
int3
xor
int
ret
lock
mov
mul
mov
lret
int3
fimull
aad
aam
ror
xor
repz
out
aad
idiv
fadd
test
xchg
mov
mov
fsubr
xor
fdiv
call
fst
xlat
shl
div
movb
nop
lock
out
lret
cmp
fstpt
lret
shl
xlat
testl
int3
fstp
xchg
test
out
cld
cmp
sar
fst
sar
and
leave
xchg
in
cmc
in
cmp
cld
aas
call
aas
out
aad
or
jmp
mov
int3
xor
in
xor
icebp
cmc
in
cmpb
loope,pt
int
call
cs
xor
call
hlt
rcl
addl
out
sub
rorl
sub
out
in
std
shr
cmp
imul
in
repnz
xchg
out
fisttpll
out
lret
ss
aad
cli
fidivl
aad
cli
fnsave
fcmovnu
rcr
cmp
aad
in
mov
and
mov
nop
xor
xor
repnz
out
aaa
sarb
sarl
repz
rolb
lret
ficoml
xor
xor
fxch
lret
fistpll
idiv
xlat
xlat
ljmp
addl
cmc
jmp
fcmovne
cmc
aam
rcr
adc
jmp
lock
in
out
ljmp
fstpt
cmp
aad
shlb
cli
loope
ret
in
ret
enter
enter
out
fldz
ljmp
sub
fdiv
cmc
add
int3
in
int
mov
loopne
icebp
add
repnz
repnz
fcmove
std
rcl
cli
fnstsw
xlat
shl
test
enter
xchg
shl
out
in
lret
lock
cmp
int
loopne
dec
xor
std
mov
icebp
and
test
mov
in
cmp
cmp
out
cmp
int
int
xor
xchg
fucomi
enter
neg
stc
xor
fsubr
icebp
repz
std
hlt
loop
out
lds
ret
or
mov
sarl
fnsave
cli
cmpb
ret
in
loop
roll
mov
icebp
rolb
mov
push
not
jmp
ret
ror
aad
and
mov
jg
pop
add
iret
xlat
fcom
fst
not
sar
fsubp
std
sti
xchg
mov
fst
xchg
fmulp
ret
shlb
ljmp
cmp
repnz
out
jecxz
ljmp
int
xor
fmul
leave
fcomp
xor
les
test
call
enter
mov
fadd
fcmovu
fdiv
adc
in
out
cli
movb
fcmovnb
mov
lock
ror
xor
fdivr
fdivr
ljmp
aas
rolb
xchg
xchg
sar
jmp
fmul
ss
lock
imul
out
loop
ror
adc
clc
sbb
mov
mov
std
ljmp
fcmovne
ror
int3
fnstsw
jmp
loope
cli
shl
loope
out
ret
fucomip
in
cli
mov
sub
call
leave
f2xm1
test
fistpll
loopne
ret
std
lret
nop
orl
into
divl
jmp
rol
shl
repz
idiv
faddl
cld
mov
in
int
rcl
enter
or
in
cli
aad
lret
fldl
loopne
icebp
lret
jmp
xor
in
repz
not
iret
idiv
out
test
call
out
lds
test
jmp
lock
test
fildl
mov
fmulp
int3
loop
xchg
hlt
ljmp
cmp
jmp
addb
test
rcr
lret
mov
hlt
in
call
xor
neg
lret
in
xlat
sar
test
in
in
loop
loop
test
xor
cld
xor
lret
repz
ffree
cmp
loop
into
shl
out
fiadds
in
rcl
fcomp
cmp
xor
in
idiv
sbb
fisttps
out
mov
aam
lock
call
out
shl
loopne
loop
out
fadd
flds
jecxz
int
int3
nop
xor
xor
lret
lret
stc
vpmaxub
int
mov
ret
out
out
jmp
in
leave
aad
loopne
ret
adc
fsubp
fiadds
lret
aam
lret
in
xor
cmp
aas
hlt
cmp
xlat
rcr
in
fsub
orl
xor
int
repnz
xchg
fsubr
lret
cld
xchg
out
in
xlat
out
cmp
repz
std
std
in
jecxz
call
in
testb
loop
call
hlt
out
call
stc
cmp
cli
aas
hlt
xlat
aad
addb
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
adc
outsl
rcr
mov
jle
xlat
clc
fcom
enter
cmp
sar
icebp
test
orb
orl
xor
not
aam
ror
fdivr
in
loop
cli
cmp
testb
jmp
jecxz
xor
cmp
call
cmp
cld
cli
lret
sti
ljmp
shl
jmp
stc
fdivs
lock
ret
mov
sbb
push
icebp
in
ret
fcmovnbe
aaa
xor
into
jmp
lock
out
fcmovnu
xchg
enter
mov
lock
fcmovbe
hlt
cmp
cmp
into
ffree
rol
sub
test
lock
fsubr
xor
out
cmpl
icebp
mov
loope
in
repnz
in
in
mov
vpsrad
xor
leave
lock
lret
jecxz
in
jmp
repz
repz
lock
int3
loopne
loopne
loopne
rolb
neg
mov
ljmp
imull
ret
clc
in
out
aam
or
in
test
loopne
in
dec
jecxz
mov
fcmovnbe
call
jmp
icebp
call
cli
ret
in
fsub
cli
ljmp
test
out
hlt
neg
aaa
rcr
stc
divl
cmp
enter
aad
lds
lock
and
ret
fxtract
out
lret
fnstsw
int
jecxz
mov
xlat
fstpt
call
int
loop
in
out
jmp
in
out
cmp
not
cmpl
jmp
in
test
xor
aad
out
fscale
cmp
jmp
faddl
filds
ret
lret
out
in
fscale
shl
aas
fsubp
sbb
fcmovnbe
out
jecxz
in
xchg
lock
xchg
nop
loopne
xor
stc
in
call
test
xchg
rcr
neg
in
rolb
mov
in
cmp
xor
iret
int3
ds
into
testl
loopne
iret
rorb
xlat
iret
jecxz
in
lret
iret
cmp
loope
fcom
cmp
loopne
cld
call
fcoml
in
cmp
idivl
cli
rcr
stc
cli
fdivp
in
loope
adc
in
xchg
loope
xor
jecxz
enter
cmc
lret
ss
in
test
ljmp
notb
xor
shr
aaa
jmp
fdivrp
std
orl
ret
in
repnz
repz
repz
cld
fdivrl
lock
into
rcl
xchg
test
repz
int
jecxz
cmp
movl
jmp
aas
aam
aas
aad
iret
aam
adc
mov
inc
jg
pop
add
test
out
aaa
cmp
cmp
clc
cmc
adc
cmp
cmp
loope
decl
cmc
jmp
jmp
sarl
shl
test
cmp
loopne
out
fisttpll
hlt
lock
sar
xlat
xchg
repnz
in
out
dec
faddl
shr
imul
aad
aam
xor
test
aas
test
fdivrp
test
out
enter
dec
shr
shr
fadds
aas
cmc
cmp
mov
mov
mov
hlt
xor
icebp
dec
loope
fstp
testb
imul
in
int
jmp
xchg
int
rcl
ljmp
int
into
cmp
aam
aad
in
jmp
xchg
lock
rol
leave
lock
fcmovne
loopne
cld
fcmovnbe
aad
adc
mov
sbb
xor
ror
out
loope
in
out
out
int3
ds
cmc
xor
test
adc
mov
call
jmp
stc
lret
call
sub
shl
sbb
xor
mov
test
xchg
fsub
div
xor
shl
jmp
ret
shl
hlt
mov
mov
lret
xrelease
cmp
int3
lret
cmp
in
xor
sbb
sbb
test
movb
mov
hlt
icebp
clc
fdiv
xor
fucomip
push
cmp
rorl
std
mov
out
loope
loope
xchg
dec
out
int3
into
in
out
aaa
jmp
repnz
xlat
out
sar
decl
in
loope
out
aam
cmp
test
lret
ds
int3
aad
ret
fildl
xchg
in
test
ljmp
into
sti
repnz
addb
aas
in
out
int3
shl
jecxz
xor
aad
cli
ljmp
iret
test
sar
lret
out
jecxz
in
out
into
cmc
mul
xor
les
lret
lock
fcmovnbe
fdivr
sti
clc
enter
out
iret
out
in
xchg
mov
aaa
jmp
jmp
out
xor
aam
aas
lret
stc
int
out
jmp
repz
icebp
fsubrp
repz
cmp
shl
ljmp
lret
lret
out
ljmp
neg
shl
ds
fld
or
or
jmp
xchg
jmp
xor
hlt
repz
loop
and
repz
std
repz
rorb
out
imul
cmc
out
into
fbstp
cmp
jecxz
fisttpll
test
inc
cld
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
fnclex
mov
lret
xor
fnstsw
aas
aaa
cmp
inc
in
out
in
int
shl
mov
out
aaa
in
aaa
fsubrp
loopne,pt
cmp
shl
in
ljmp
xchg
ljmp
sti
lock
icebp
fdivr
fiadds
testb
cmp
in
icebp
out
aam
call
test
xchg
ret
testl
xchg
das
loop
lret
xor
div
loopne
xor
ror
loopne
out
cmp
fmull
in
repz
out
repnz
lock
fucomip
cld
fcomi
cmp
out
sti
fcmovb
cmc
jecxz
or
out
mov
ljmp
jmp
into
fmul
cmp
lock
loop
addb
out
enter
mov
test
xor
idivb
cmp
cmp
lock
add
loopne
cli
fucomip
test
lret
jmp
call
into
clc
faddp
in
std
mov
lret
hlt
in
jmp
cli
sar
cmp
ror
fcomp
ret
out
out
test
test
shr
std
mov
xor
repz
fdivrp
int
loop
ret
test
loopne
in
mov
jecxz
mov
aad
shr
cmp
icebp
rcr
in
test
fcmovnu
loope
mov
aaa
ljmp
sarl
cmp
cmc
leave
cmc
in
lds
mov
fsubr
sti
int
int3
lret
push
shl
jmp
loopne
in
jmp
out
xor
fcomp
jecxz
hlt
int
hlt
rcr
repz
lds
lret
out
hlt
fcomip
fld
out
shl
clc
cmp
iret
sarl
loopne
sar
les
fdivr
jmp
out
ret
hlt
call
idiv
in
in
inc
sti
jmp
mov
in
loopne
hlt
jmp
in
iret
enter
fcmovnbe
aaa
rol
sbb
ds
loop
fadd
in
fimuls
rcll
repnz
std
enter
mul
loopne
mov
cmp
jmp
repz
shl
clc
fcmove
out
loopne
loopne
clc
addb
fcomip
mov
cld
test
xchg
in
jecxz
out
repnz
sar
cmp
cld
out
loopne
mov
xchg
in
sub
xor
fnstsw
jmp
cmp
test
ljmp
addl
ljmp
icebp
repnz
ret
clc
ror
call
inc
cld
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
xchg
iret
aam
out
cmp
int
cmp
aaa
div
lock
cli
repnz
enter
enter
cld
xchg
out
jmp
out
cmp
cld
lret
and
movl
std
mov
repz
int
in
shlb
cmp
leave
inc
in
mov
adcb
lret
iret
cmp
in
fsub
int
cmp
sarl
stc
cli
jmp
lds
aam
lret
shl
vpsubw
in
call
loope
cmp
leave
std
int
lret
hlt
out
cs
imul
clc
lock
div
int3
addb
lret
out
loop
repnz
icebp
in
hlt
shll
enter
out
jmp
out
sti
lock
xchg
idiv
loop
cmp
shl
repz
sti
ss
shl
cli
out
ss
ret
fdiv
out
jmp
rorb
xor
lret
lret
ljmp
fildl
cmc
in
test
loopne
fxch
std
lret
call
int
rcr
sti
lret
incb
rcll
cmp
cmp
cmp
loop
xor
loopne
repnz
jmp
xchg
lock
out
ss
out
sar
cmp
out
filds
or
orb
lret
int
fcmovnbe
sbb
fsqrt
jmp
filds
lret
mov
div
lret
fidivrl
fldl2t
fucomi
cli
ds
sub
ljmp
loop
out
int
out
mul
xlat
sti
aaa
lock
fstpt
roll
fdivp
mov
out
aam
cmp
cli
cmp
stc
cld
not
std
shl
mov
out
fldlg2
out
test
out
orl
xlat
xlat
out
cld
repz
hlt
fdivr
mov
fadd
jmp
out
sub
int
out
lret
cld
fstp
ffreep
fcmovnb
lret
adc
sar
out
fcmovnu
test
lret
jmp
out
call
ret
xor
ljmp
repz
call
leave
xor
lock
dec
dec
test
xchg
jecxz
test
mov
xchg
repnz
lret
out
in
jmp
hlt
aas
ror
test
fcmovnbe
fiaddl
mov
jecxz
mov
sub
out
cmp
in
int3
aam
neg
cmp
ds
call
out
out
mov
in
ljmp
xor
fdivrs
cmp
repnz
sar
clc
pushl
mov
jmp
rcl
int3
lret
fst
fstl
in
mov
pop
add
cld
mov
test
int
cld
in
mov
xor
iret
cmp
fucomp
cmp
hlt
rorb
out
mov
leave
enter
mov
xor
sar
shl
clc
idiv
cmpl
testl
mov
fcmovnbe
hlt
mov
lret
clc
shr
cmp
fdivp
cmc
cmp
xlat
rol
in
jecxz
mov
in
enter
fisttpl
ret
xor
not
cmc
std
call
fcmovnbe
sti
cli
aad
jmp
xchg
repnz
out
cmp
div
int
fnstenv
loope
ljmp
rorl
cmp
fsubr
cmp
out
iret
roll
sbb
nop
sti
xchg
int3
icebp
ret
aaa
aad
not
fidivl
cmp
fldl
enter
addl
ret
xor
sub
cmp
fimull
in
test
xchg
xchg
repnz
cmp
frndint
jmp
lret
fiaddl
xchg
testb
xchg
push
xchg
ret
ljmp
fdivrs
fcmovnu
fadd
icebp
sbb
jmp
int3
mov
jmp
lock
std
in
int
in
ret
mov
fimuls
fmull
in
ss
ret
leave
lret
call
fdivr
int
vpavgb
jmp
mov
xlat
orl
rol
leave
test
aaa
int3
cli
idivb
in
loop
mov
cmc
int3
xchg
shr
call
lock
xor
cli
loope
aad
mov
addl
in
mov
mov
loopne
das
shl
out
not
leave
shl
into
fmul
loop
lock
aas
fsub
add
xchg
out
lret
out
shl
rol
xor
aaa
neg
fst
dec
les
fcmovb
out
std
lret
in
xchg
in
lds
jecxz
in
xor
xor
in
hlt
fldl
fisttpl
rcl
in
xlat
fxch
enter
out
or
testb
mov
clc
jecxz
in
leave
xchg
xchg
repnz
in
cli
clc
out
in
cmp
hlt
shr
aas
loop
fdivrl
jecxz
hlt
add
cld
movl
lret
leave
cmp
int
cmp
icebp
sti
add
clc
ljmp
in
in
in
cmp
add
hlt
out
movb
enter
adc
cmc
loop
in
fcomp
repz
rcl
add
xchg
sti
test
int
fimull
loope
vcvttss2si
enter
aam
int
sar
bnd
jmp
aad
fnstsw
repz
cmp
scas
dec
jg
pop
add
ffreep
hlt
test
test
nop
test
in
ss
call
in
repnz
sbb
in
stc
cmc
in
nop
fdivp
jecxz
rcr
iret
lret
cmp
clc
ss
int
in
icebp
hlt
hlt
mov
mov
mov
in
out
leave
in
stc
iret
lock
iret
xor
ds
jmp
test
mov
jmp
icebp
xor
lret
fbstp
aad
idivl
in
les
aam
enter
in
roll
ror
fdiv
icebp
aaa
stc
hlt
sarl
cld
shl
orl
mov
lret
ss
out
aaa
iret
aad
addb
repz
lea
shl
lret
enter
ret
ljmp
hlt
iret
jecxz
aas
mov
fucomip
jmp
dec
adcb
repz
int
lret
aas
cmp
in
incb
mov
repz
ss
cmp
not
jecxz
movl
out
in
jmp
hlt
in
icebp
cmc
fmul
iret
adc
testl
out
out
call
shrl
ss
aas
std
cmp
cmp
fldln2
in
leave
repnz
rclb
jmp
cmp
in
int3
fstp
cmp
out
rolb
out
into
mov
enter
call
fnstenv
lock
shl
addl
addl
jmp
call
hlt
lret
out
out
fldl
in
mov
rol
jecxz
in
stc
hlt
aad
rcr
icebp
ret
ret
mov
shl
imul
orb
hlt
lret
loop
clc
jmp
std
shl
rcl
rol
mov
addl
div
call
fst
lock
lret
loopne
fcmovnb
aam
out
ljmp
jmp
out
xlat
ret
fnstenv
rcr
cmp
aam
in
cmp
aas
div
sti
cli
std
out
jmp
test
sub
jmp
testb
jecxz
shl
hlt
mov
lret
in
ret
loopne
divb
cmp
aam
or
into
rorl
loop
fldl2e
mov
test
cmp
std
fcmovu
ss
mov
lret
call
fmulp
fld
xor
rcl
fmul
cmp
sar
clc
enter
call
aam
enter
fcmovu
sar
faddp
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
xchg
or
jg
pop
add
cmc
in
aam
ljmp
shrl
fsubr
xor
clc
in
cmc
cld
jecxz
aad
rol
movb
xchg
lea
fdivr
cmp
fstp
out
repz
xchg
test
into
xchg
jmp
aaa
imul
fdivl
sarb
fxch
repz
clc
test
jmp
loopne
fsubr
rolb
xor
xor
jecxz
fildl
or
enter
int
cmp
lock
jmp
ljmp
cmp
shl
lret
mov
icebp
int
ljmp
xor
leave
cmp
mul
xor
fcmovu
call
ror
into
xor
xor
ljmp
loopne
rcr
shl
enter
enter
xchg
out
rcl
loop
lock
xlat
aam
aas
rcl
cmc
rcl
ret
xchg
leave
jmp
lret
out
shr
loopne
aad
shr
lock
std
in
not
rcr
cmp
rcl
sbb
mov
sti
popl
test
iret
ljmp
roll
rcl
cld
mov
sti
dec
fucomip
lret
mov
xchg
xor
icebp
shr
aas
ror
aad
cmp
stc
decl
mov
out
xor
in
leave
xor
icebp
fsubr
ret
cmc
shr
stc
in
enter
popl
mov
hlt
cmp
cmp
fst
shl
stc
jmp
int
jecxz
lock
int
xor
aad
fdivr
cmp
fcomp
testl
leave
mov
loop
icebp
shll
lret
repz
cmp
in
loope
iret
cmc
faddl
sti
lret
xchg
fdivp
out
jmp
fucomip
ror
std
std
sti
ffreep
movl
loop
out
or
out
rol
neg
sti
in
clc
hlt
cmp
icebp
test
xlat
fisttpl
xchg
aaa
cmp
shr
mov
jmp
lock
out
loopne
out
xchg
fdivp
jmp
cld
fsubr
fnstcw
shr
ret
call
lret
in
mov
repnz
repnz
out
aad
lret
leave
enter
in
cld
not
fld
jmp
rcl
loopne
bnd
cmp
cmp
cmp
icebp
xchg
fxch
jecxz
repz
notb
ljmp
ljmp
lds
hlt
test
enter
int
out
repz
cmp
xor
test
orl
inc
clc
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
mov
jle
add
fcmovb
cmc
xlat
loop
ret
ret
ret
ret
cmc
fiaddl
out
shl
idivb
shr
into
fistpll
cmp
fucomi
jecxz
into
and
out
loope
fildl
xor
repz
out
out
ljmp
out
ret
les
sti
lds
cmc
aam
xor
fcmovu
cmp
out
fnstsw
xchg
fimull
sti
adcl
out
loopne
stc
loopne
clc
std
shl
mov
mov
ret
ljmp
loop
cld
cmp
in
cld
stc
sbb
in
faddl
flds
call
in
shl
out
in
in
cmp
out
in
xlat
out
out
test
test
out
in
rolb
stc
lret
in
call
into
out
sar
std
call
stc
fimuls
aam
rcl
lret
ret
ror
cmp
ss
loop
cmp
out
fldl
std
call
lock
lret
ss
cmc
sti
or
fcmovnbe
roll
test
cmc
iret
aaa
cmc
fcmovne
shr
cmp
xlat
shl
stc
rcr
fdivr
loope
std
sti
jmp
test
cs
clc
std
mul
out
aam
out
loope
enter
jmp
enter
mov
sar
fcomp
rol
cmp
loop
out
in
cmp
out
lret
ljmp
lock
shrl
sar
into
icebp
test
fstp
cli
leave
jmp
mov
test
fcmove
std
nop
orl
aaa
fucomp
cmp
int
xlat
test
std
xchg
sti
out
fucomp
mov
ss
leave
out
aas
aad
test
lock
out
leave
sti
call
icebp
cmc
jecxz
xor
xor
idiv
mul
in
cmp
mov
in
mov
xchg
xor
not
cmp
iret
sti
add
cmp
rol
ret
sti
ljmp
out
out
neg
repnz
icebp
xor
call
sti
icebp
in
xlat
fdivr
sbb
lret
std
xchg
cs
call
faddl
xchg
jecxz
loope
loopne
test
shl
out
in
sub
clc
cli
jmp
cmp
lret
sarb
std
mul
ljmp
in
lock
in
xor
cli
jmp
xor
and
in
ds
test
stc
mov
fsubr
xlat
lret
lock
fucom
leave
rol
ss
cmp
repz
icebp
fdivrp
out
xchg
ljmp
rol
in
not
rol
sub
dec
adc
cmc
add
add
ror
fst
mov
push
push
push
jg
pop
add
stc
int
or
aaa
icebp
icebp
fcomp
mov
leave
xchg
std
rcll
ror
ffree
jmp
test
sarl
out
in
cli
test
ss
rcl
hlt
cmc
fdivr
iret
sarb
aad
fmul
out
out
xchg
testb
call
hlt
aam
in
ret
jmp
fldl
repz
sub
loop
in
cli
aad
aam
cmp
cmp
inc
loop
fcmovne
mov
out
xchg
mov
rol
in
call
jmp
repnz
stc
repz
ljmp
lret
out
sar
enter
sti
hlt
rcl
aas
out
jmp
jmp
in
test
cli
ljmp
lret
fistpll
aas
fidivrl
movb
cmp
out
cmc
fdivs
lret
out
fsubr
in
lret
cmp
fninit
xlat
jecxz
repnz
loopne
loopne
enter
icebp
jecxz
int3
int
in
std
cmc
lret
xor
jmp
aad
loopne
std
les
jmp
loopne
out
in
clc
in
f2xm1
call
rcl
out
rol
call
iret
fneni(8087
loopne
fucomip
ret
xor
cmc
ds
stc
aaa
lds
sbb
loopne
enter
not
out
test
cmp
into
leave
addb
fst
in
fsub
fmul
int3
test
xchg
test
sub
lret
cmp
out
call
rol
not
in
rcr
testl
in
cs
leave
repnz
cld
sar
sti
in
test
loop
rcr
out
in
ljmp
cmc
mov
xor
fsubr
shl
jmp
xrelease
xchg
jecxz
out
xchg
xchg
lock
shll
repz
rcl
rcr
sbb
mov
out
rcl
xchg
xor
xlat
fxch
fmul
cmp
in
add
neg
out
fdiv
jecxz
in
out
shr
call
hlt
cmp
shl
int
mov
xchg
fsub
into
out
xorb
iret
shlb
cmp
sbb
std
rol
lds
cld
lret
int3
test
ror
jmp
std
lret
fadds
aad
in
div
fisttpl
iret
xor
out
rcr
loop
iret
aad
out
sub
in
fucom
enter
repnz
rol
ror
out
fcmovu
lock
xlat
ljmp
mul
aam
ljmp
sub
xor
movl
test
or
add
cmc
add
add
aad
aad
int
jge
in
and
push
jg
pop
add
sar
cmp
cmc
sarl
out
int
cmp
test
loope
jecxz
fsubrp
fsub
repnz
out
aam
fdivr
in
cmc
jecxz,pt
repnz
les
ret
call
std
out
in
int3
cmc
shrb
into
sti
cld
lock
lret
cmp
lock
in
ret
xchg
sti
rclb
out
out
aad
icebp
cmp
cmp
ret
fcomip
loopne
test
ds
in
ljmp
das
cmp
jmp
int
rcr
iret
xchg
test
out
mul
int
icebp
call
lock
ss
aas
cmp
loop
cli
out
xchg
roll
xchg
out
out
xor
xor
testl
incb
out
int3
jmp
in
repnz
leave
enter
div
ret
cmp
fadd
test
test
in
in
mov
in
aad
fdivrs
rcr
clc
loopne
xchg
neg
xchg
mov
xchg
test
fst
rcr
shl
std
fiadds
xchg
aas
xchg
fptan
in
leave
mov
cmc
out
cmp
push
cli
repnz
fchs
neg
cmp
int3
clc
test
jmp
iret
ret
cmp
fidivrl
cmp
cmp
cld
call
add
mov
in
loopne
out
loop
shl
lock
iret
lret
std
sti
fsubp
rcr
loopne
fcmove
test
in
mov
addb
iret
xor
xor
shlb
hlt
rcl
repz
icebp
xchg
incb
loop
mov
cmp
fcmovne
pushl
ds
ds
ds
shl
mov
leave
fmul
mov
sub
fdiv
int3
jmp
loopne
repnz
ss
in
mov
adc
cmc
aad
xlat
sarb
clc
fcmove
call
repnz
test
idiv
clc
jmp
in
mov
sti
fsubr
enter
ret
xor
out
fdivr
leave
clc
xor
repz
in
loopne
int3
lret
fldl
in
sub
vpmulhuw
call
fidivrl
in
in
test
addl
fadd
lock
loope
iret
cs
loop
fnstsw
into
cmp
ret
sti
addl
in
lret
out
out
lret
jecxz
out
xor
fld
fdivs
aas
sti
fucomip
xor
sar
in
cli
jmp
iret
out
loope
ror
out
into
cmp
sar
ret
in
enter
loope
cmp
test
xchg
fadd
xor
sti
xlat
ror
adc
addb
mov
loop
leave
in
shr
adcb
xor
jmp
ret
les
je
push
imulb
jg
pop
add
aad
out
out
leave
cmp
jmp
fsub
test
clc
ljmp
out
in
repz
in
iret
in
leave
cmp
shr
dec
ds
call
xlat
leave
cli
lret
call
std
test
cmp
cli
stc
aam
in
std
icebp
fsubr
cmp
repz
stc
aam
cmp
mov
or
fdivr
mov
in
xor
out
cmp
sarl
rol
fninit
inc
and
int3
enter
cli
rcl
iret
test
ret
divb
stc
out
clc
sti
addb
ret
fcoml
in
int
out
in
sar
stc
sti
cmp
aas
call
repnz
out
fadd
int3
int3
in
fsub
mov
ret
sar
shl
aam
fidivrl
loope
into
in
and
sbb
fadd
cmp
and
rcr
cmp
std
int
lret
rcl
loopne
addl
mov
ljmp
out
cmp
aaa
repz
fldl
cmpb
loopne
fucom
lret
lock
aam
mov
rcl
int
in
fnstsw
fistpll
fdivrl
les
aad
orl
xor
enter
xor
icebp
cmp
shl
fcmovb
leave
mov
ljmp
mov
icebp
repnz
xor
leave
sti
int
fcompp
hlt
fdivrs
out
xor
mov
lret
leave
repnz
out
icebp
out
sar
leave
cmp
aad
fdiv
cld
stc
rcr
iret
testl
cld
in
xchg
int
leave
in
out
in
cli
aad
cmp
ds
test
clc
enter
fsubp
sub
rcr
fdivr
cmp
xor
shl
aam
out
fcomp
add
int3
out
into
in
clc
iret
out
xor
enter
iret
lret
out
fcmovu
sti
or
xlat
loop
fdivp
cld
hlt
rorl
shl
vshufps
rol
filds
fadd
frndint
iret
shl
test
xchg
jecxz
call
fcom
icebp
aam
cmp
cld
test
test
call
xor
cmp
cmp
loope
mov
mov
jecxz
leave
ljmp
cmp
cmp
aaa
cli
sti
repz
jecxz
jmp
lock
aam
in
cli
call
lret
loop
sar
jecxz
loop
mul
mov
orl
test
lock
lret
enter
loopne
xor
and
aas
call
out
ljmp
hlt
lds
vmovq
div
ss
dec
and
enter
in
in
fisttpll
mov
mov
jmp
rol
rol
rcl
aad
add
mov
jg
pop
add
aam
aaa
aam
out
shl
ljmp
add
out
fiaddl
loop
sub
rol
int3
cmp
out
test
in
repz
mov
jmp
cld
call
xor
aad
xor
cmpb
flds
jmp
out
mov
jecxz
sub
imul
xor
cmp
jmp
popl
decl
iret
ss
aaa
fsub
xor
mov
xchg
loope
int
test
repnz
hlt
jmp
cmc
cs
out
fnstcw
add
shl
test
fiadds
jmp
out
iret
cmp
rcl
loopne
les
sti
in
mov
nop
not
icebp
ljmp
out
sbb
mov
in
loopne
rorb
into
in
ret
iret
xor
loope
rcl
fdivr
in
fsubr
int
fcoml
mov
jmp
out
out
fdivr
aad
cmp
test
fcmovne
test
mov
lret
mov
stc
jmp
rcl
cmp
cmp
lret
stc
icebp
adc
loopne
lds
jmp
jecxz
ror
aam
aam
out
in
clc
in
rol
in
xchg
loopne
leave
jecxz
hlt
in
lock
aam
aam
cmp
iret
aad
std
lret
dec
sub
lret
and
ss
lret
sarl
jmp
cmc
not
out
mov
stc
sub
lock
jecxz
repnz
ror
cli
xor
cmp
cmp
lret
lds
xchg
test
loopne
iret
icebp
ss
clc
aas
lret
call
fidivrs
xor
cmp
stc
in
fmul
mov
and
lret
jecxz
out
cmp
cmp
stc
hlt
cmp
repnz
incl
xlat
ljmp
out
leave
std
cmp
enter
mov
fmuls
mov
call
lret
xor
sub
aam
rcr
ds
addl
xchg
subl
clc
aad
hlt
loope
fcmovnu
test
icebp
xchg
adc
xor
ljmp
lret
repnz
cmp
dec
cmc
loopne
mul
ret
sar
shl
call
sarl
loopne
rcr
std
idivl
mov
jmp
ljmp
out
hlt
cs
fdiv
idivb
ret
test
out
int3
loop
ret
xor
add
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
rorb
dec
mov
add
sub
jmp
cmc
out
in
out
or
lock
in
rcr
add
mov
call
mov
int
sar
lret
out
cmp
aas
cmp
test
jecxz
jmp
xchg
jmp
jecxz
ret
in
cmp
sarl
icebp
out
fcmovb
mov
sti
int
in
call
xor
int
ss
rcl
aas
repz
test
orb
xchg
fcomip
aam
cs
sub
fld
cmp
jmp
repz
jecxz
ret
mov
jmp
icebp
in
fcomip
std
rcl
int3
lret
fcmovu
fstpt
ljmp
rcr
fcom
loope
stc
mov
clc
lea
aad
xbegin
divb
loope
cmp
cli
mov
loop
fsubr
call
shrb
xlat
ret
cmp
cld
xor
ret
ret
lock
sti
stc
ds
lret
jmp
xlat
clc
stc
hlt
aam
rcl
cli
int
in
cmpl
call
xchg
aad
fcmovbe
ret
sarl
cmp
lret
int3
xor
testl
mov
ret
rorb
rcr
cmc
jmp
cmp
fdivr
shl
fucomip
test
idiv
mov
out
shl
fcomi
neg
hlt
iret
fsubrp
rcl
loopne
lock
loope
ret
loop
mov
jecxz
aaa
aam
icebp
in
repnz
sti
lock
idiv
repz
lock
aad
xchg
fcmovnbe
int3
int3
leave
in
xchg
xchg
test
call
cmp
cmp
repz
out
stc
ds
fcomp
lea
loop
test
enter
lock
sti
stc
cli
jecxz
aam
cld
enter
ret
jecxz
in
xchg
hlt
xchg
subl
sarb
rcl
enter
cmc
repz
ror
mov
mov
mov
cli
call
xlat
xor
leave
xor
xor
cmp
repz
mov
mov
cld
int
loop
mov
loopne
xor
ret
call
cld
fdivs
fcmovbe
fcmovnbe
cmc
shl
ret
xchg
in
test
int
xchg
iret
ror
fdivrs
repz
jecxz
cmp
test
in
fstp
xlat
repnz
jmp
jmp
lret
jmp
aam
cmp
icebp
xlat
cld
lock
icebp
clc
fcomip
enter
fcomip
fdivr
fildl
in
stc
in
cmc
lock
std
sti
lret
out
jmp
addb
xlat
aad
sub
test
repz
cli
cmp
shl
lret
iret
xor
fimuls
rcr
out
xchg
add
sti
out
sarb
out
aaa
sti
in
xchg
xor
jmp
xlat
ror
fld
and
test
setle
cmp
pop
add
in
out
shr
call
cli
sub
fdivrp
repz
jecxz
sar
xlat
rol
leave
rorl
rol
xor
hlt
xor
shr
sti
fdivp
ds
cmpb
loope
xor
jmp
mov
repz
roll
in
lock
hlt
out
fcmovb
flds
xor
clc
int3
dec
rcr
xlat
in
cmp
ret
clc
add
hlt
ret
enter
nop
mov
loop
jmp
lock
sti
leave
out
fld
shl
movb
mov
in
addb
fadd
repnz
leave
cmp
aas
cli
cmc
or
mov
xchg
call
xchg
in
jmp
not
out
xlat
lock
cmp
repz
repz
incl
int3
into
into
xor
shr
test
dec
cmp
ds
aad
int3
in
rorb
sub
xor
aam
lret
fcompp
ds
ds
rcl
rolb
call
in
ret
call
not
fnstcw
repz
fdiv
rol
lds
in
test
int3
cmc
clc
rcr
rcr
enter
sarl
xchg
fimuls
fcmove
flds
shlb
repnz
cmp
fcomp
fnsave
les
clc
enter
ljmp
xchg
xor
iret
fmulp
icebp
int
cld
cmpb
sti
rol
call
jmp
icebp
xchg
loop
int
ljmp
inc
cmp
ffreep
mov
les
lock
aad
xor
shl
clc
std
ss
sar
aam
cmp
sar
xlat
repz
fildl
mov
lret
mov
xchg
aam
int
xlat
repz
into
sbb
cmpl
mov
test
lret
shl
aad
test
int3
fcmove
clc
icebp
lock
fdivr
or
lret
test
mov
fldl
sti
jmp
cmp
lock
lock
mov
xchg
in
stc
loope
test
xchg
vpxor
jmp
icebp
iret
cmp
ljmp
icebp
loopne
jmp
loop
out
in
jecxz
jmp
hlt
stc
repnz
cmp
into
cli
shl
xchg
cli
out
xchg
int
in
sub
cmp
hlt
cli
repz
out
iret
cmp
rolb
aad
std
out
repnz
mov
mov
xor
cmc
cld
fsubr
fmul
int3
out
clc
test
aam
in
clc
sbb
clc
loop
call
hlt
aam
into
leave
out
ljmp
loopne
lock
enter
pop
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
pop
add
jle
add
fadd
mov
lret
rclb
aaa
shr
idivl
xor
lock
cli
ret
lret
fldl2e
jecxz
jmp
jmp
shr
fstpt
lret
lret
out
and
icebp
rol
in
sti
loopne
mov
out
xchg
icebp
int
sub
in
stc
fdivrl
cmp
jecxz
mov
lock
ljmp
sub
aaa
aad
int
adc
sti
xlat
mov
xchg
ret
orb
ljmp
into
stc
xlat
loop
test
hlt
in
int
mov
repz
ret
lret
xor
in
cmp
faddp
aad
sbb
cmp
cmp
or
faddp
loope
out
ljmp
fdivr
in
aam
xor
addb
sti
test
iret
out
nop
or
icebp
in
test
sarb
fidivrl
repnz
div
cli
aad
ret
testb
mov
lret
sti
cmp
cmc
out
in
in
lret
hlt
iret
fadds
mov
stc
out
loopne
ljmp
sarl
out
xlat
out
aam
lret
addb
test
sub
ljmp
fistpll
incb
filds
in
aam
ss
out
cs
lock
icebp
cmp
cmc
shl
ljmp
jmp
xlat
call
xor
xor
loopne
idiv
testl
loopne
in
in
repnz
out
rcr
leave
rcl
repz
adc
fcmovnu
hlt
and
xchg
loop
ror
mov
repnz
fcmovne
call
test
rcr
fcomi
or
jmp
rcl
out
into
iret
sub
sar
lret
cli
out
stc
cld
jecxz
orl
out
test
out
sub
loop
ss
call
or
div
rorb
fmulp
ficoml
fsubr
enter
cmp
stc
aas
cli
cmc
ret
aam
cli
repz
leave
int
cmp
xlat
in
cmp
stc
iret
stc
cmp
xlat
stc
iret
inc
stc
out
fcmovu
xchg
mov
ss
cld
stc
sti
ror
cmp
cmp
cmp
xchg
mov
iret
fcmovne
or
xchg
out
call
repz
out
loope
mov
jmp
mov
fsubr
das
fcom
clc
aam
aad
out
cmp
xlat
cli
loop
int3
in
in
ljmp
lock
cmp
clc
shr
call
rcl
rcrb
or
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
push
jle
lret
mov
xchg
incl
in
ret
iret
cmp
shl
aam
out
aad
loop
fucomi
loope
jecxz
mov
iret
xchg
ljmp
fdiv
xor
xor
clc
lret
cmp
fdiv
add
leave
in
lret
rolb
xor
fcmovnbe
in
lret
clc
cmp
orb
cmp
out
into
in
mov
in
ss
xor
loope
sarb
jmp
adcb
int3
jmp
hlt
jmp
iret
shl
in
shl
in
aam
mul
mov
mov
xorl
ret
ljmp
cmp
iret
ffreep
imul
cmp
rcl
ret
jecxz
mov
adc
div
jmp
call
clc
sarb
out
sar
xor
ret
mov
cld
fucom
out
fcomip
jmp
shr
rcr
cld
adc
fdiv
ret
stc
mov
jecxz
jecxz
out
in
adcl
div
shlb
std
jmp
icebp
lock
cld
out
out
sbb
fmulp
mov
lock
xchg
ret
icebp
cli
aam
enter
std
leave
icebp
ds
ret
loop
aad
jmp
nop
decb
sarl
rol
lret
cmp
ror
fistpll
std
shl
out
fldlg2
aas
mov
ret
mov
nop
cmc
int3
loop
sarb
into
aaa
sar
cmp
fiaddl
ffree
sti
int3
out
fsubr
int
ljmp
repz
jmp
ret
iret
loope
repnz
aam
cld
jecxz
jmp
lock
xchg
bnd
ret
lret
fdivr
xlat
stc
or
in
out
hlt
out
test
xchg
iret
jmp
aad
icebp
cld
call
shll
lock
ret
mov
fdivrp
in
out
test
nop
rcl
in
in
in
aam
cmc
repz
fdivrp
faddp
and
out
into
and
aam
jmp
lret
lret
icebp
cli
cmp
xlat
cmpb
add
dec
pop
add
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
xlat
add
push
jle
add
les
leave
or
mov
mov
mov
sti
repnz
xor
loop
aad
ret
int
jecxz
rorb
xor
shl
cmp
xorb
stc
loope
out
loope
ljmp
jmp
incb
xor
loopne
rcl
adc
cmp
out
in
fmull
shl
repz
cmp
aam
into
incb
shl
in
fincstp
leave
mov
test
loopne
out
hlt
das
repnz
cmp
jmp
iret
in
loop
in
mov
cmp
fisttpll
hlt
fmul
xor
xor
fcomp
xor
lock
cli
ret
stc
repnz
ljmp
out
testb
hlt
leave
bnd
lock
shl
aam
cmp
loope
int
xchg
test
aas
into
aam
repz
cmp
leave
aas
lock
cli
aas
cmc
enter
fiadds
jmp
cmc
icebp
lret
call
repnz
fcomp
cmp
fildl
in
loopne
test
lret
mov
loope
repz
int3
xor
cmc
jmp
rcr
into
fcmovnbe
rorl
mov
jmp
xchg
mov
mov
lret
in
in
lret
sbb
repnz
cmp
aad
call
fcmovnu
lret
jmp
ljmp
jmp
cmp
into
into
roll
sti
int
mov
icebp
hlt
loopne
loope
xor
hlt
fmul
cld
lret
xor
fsubr
into
xchg
cli
xchg
filds
lret
std
iret
mov
xlat
xor
into
int3
into
ljmp
in
add
cmp
hlt
cld
out
fucom
xchg
jmp
fstp
mov
lock
lret
cmp
fcomp
xlat
fcomp
jmp
std
out
stc
out
repnz
clc
test
fcomp
fmul
div
test
loopne
fcom
cli
loop
test
lret
lock
repz
int3
jmp
aam
repz
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
push
dec
mov
sbb
jle
ror
fld
xor
jecxz
out
into
xchg
mov
jecxz
aad
sar
int3
clc
cmp
ss
div
repnz
loope
leave
leave
into
lock
jmp
out
lock
sti
xlat
div
rcr
fldln2
rol
and
loopne
fcmovu
leave
loopne
xor
out
iret
xor
ss
fnstcw
cld
cmp
stc
fadds
xlat
test
loopne
loopne
in
fnstenv
aad
shl
clc
leave
repnz
shl
repnz
filds
out
xchg
xchg
subl
clc
div
icebp
call
aas
fcomip
rol
sarl
loop
ds
shl
loop
out
addb
rol
ss
out
xor
std
out
repnz
mov
std
lea
shr
xchg
iret
lock
lret
fistpll
iret
int
std
movl
jmp
mul
iret
cli
xor
clc
cmp
loope
fstp
repnz
mov
jmp
rcr
iret
ljmp
shl
fdivr
into
div
rol
adc
fadd
ret
test
sub
in
ss
jmp
cmp
sbb
in
sbb
mov
jmp
loope
out
std
in
out
fdiv
cmp
in
std
out
sar
fucomp
out
lret
ljmp
iret
int3
out
out
xlat
in
cmp
xor
cmp
lock
jmp
fists
lret
out
jmp
imul
iret
int
fistpll
aad
xlat
rolb
ljmp
lea
ret
cmp
shl
repnz
rol
cmc
sar
in
in
in
jmp
lock
and
leave
cmp
enter
int3
leave
aam
hlt
std
out
loope
enter
aas
xchg
lock
jmp
aaa
xor
ss
xor
out
rcl
faddp
clc
xchg
orb
in
idivl
repz
fimull
add
add
int
aas
int
int
jbe
repnz
ret
movsl
outsb
jg
sbb
jle
repz
shl
cli
loopne
aas
jmp
out
in
test
xchg
test
aad
call
cmp
rol
jecxz
cmp
sti
ljmp
rorl
lret
jmp
icebp
icebp
repz
cmpl
aam
ljmp
int
in
stc
xor
int3
stc
fdivrp
and
cmp
loope
fadd
faddl
fmull
ss
xor
out
out
aam
in
hlt
stc
sti
test
cld
stc
in
incb
in
in
lret
call
cmp
jmp
repnz
std
rol
fst
out
loopne
orl
loop
enter
sarl
cmc
cmp
out
jecxz
faddl
xchg
ret
hlt
loope
rcl
ss
out
fidivrl
rol
call
int
out
into
xchg
icebp
cli
jmp
sti
cmp
lret
int
rorl
loope
in
mov
in
in
adc
sub
leave
iret
lock
std
int3
in
cmp
std
aas
repz
test
enter
fmulp
loopne
int3
ss
cmp
sti
out
adc
fcom
out
test
aad
leave
addl
xchg
xor
ljmp
lock
repz
cli
test
jmp
out
cld
and
mov
repnz
cmp
out
rcr
cmp
lock
into
sti
fcmovbe
mov
in
test
out
call
ret
jecxz
call
cli
rcr
in
fldl
mov
shll
xor
in
int3
icebp
fbstp
cmp
addb
xchg
mov
loope
xor
jmp
cmp
stc
hlt
in
incb
in
vpaddusw
fsubr
sub
ss
ror
in
out
lret
loop
aaa
fadds
sti
mov
loope
into
sub
hlt
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
xor
fucom
cmc
sti
out
cmp
out
and
addb
repnz
xchg
sar
cli
repnz
cmp
aam
test
call
fucomi
icebp
addb
iret
xlat
lds
jmp
fdivrp
repz
sti
rcl
out
movl
cli
int
xlat
fnsave
std
cmp
mov
stc
jmp
loopne
jecxz
fxch
int
iret
lock
xchg
loope
fidivrl
vpsubd
loopne
and
out
fadd
aam
fmul
loopne
cmp
xchg
call
mov
into
ficoml
lret
rol
das
fsqrt
sbb
out
or
repnz
out
jecxz
repnz
testb
xor
aad
aaa
lock
stc
sbb
mov
pop
jecxz
jmp
test
aad
aaa
aaa
cmp
cmp
iret
shr
cmp
fcomi
jecxz
jmp
jecxz
in
xchg
xlat
call
in
cmp
sti
cmp
sarb
call
fucom
int3
out
lret
xchg
rcr
out
in
out
fcmovbe
clc
fld
int
xlat
xchg
jmp
fildl
shr
mov
repz
int
sti
xor
lock
int3
aas
test
sub
in
call
lret
jmp
cmp
cmp
fldl
xchg
fmuls
jmp
in
call
loopne
cmc
xor
repz
aad
in
fcmovb
jmp
out
cmp
call
clc
xor
loop
sti
enter
loopne
int
ret
shl
add
mov
rorl
idiv
aaa
jmp
int3
cmp
xlat
repz
testb
leave
repnz
lock
fnstcw
fdivr
idivl
ds
leave
test
fsubr
out
hlt
ss
sar
fptan
cmc
fcmovu
loopne
fstpt
movb
mov
nop
and
int
xchg
lret
ror
cmp
cmp
cld
testl
into
sti
xchg
clc
cli
xor
jmp
sarb
rcr
xchg
sar
aad
addb
xchg
xor
fucomi
fdivr
clc
ljmp
enter
in
fdivrp
lret
jecxz
jmp
sub
cmp
xlat
xor
test
shl
repz
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
dec
push
out
lock
jle
add
rorl
out
lret
in
int3
jecxz
clc
iret
lret
enter
clc
int
repnz
std
sub
loope
xlat
iret
loopne
mov
repnz
cmc
test
jmp
iret
loop
out
aad
cmc
testl
loop
in
cmp
xor
lret
lret
sti
test
cmp
mov
call
and
mov
shr
cmp
cs
rcr
cmc
cmp
ss
out
call
fadd
mov
test
call
xlat
iret
iret
int3
cmp
test
cmp
cmp
loopne
fiadds
iret
in
jmp
fdiv
cmp
cmp
xlat
clc
test
xlat
fmull
into
mov
shl
imul
sar
cmp
loopne
cmp
std
fcomp
fcmovnbe
or
mov
clc
xor
mov
fdivrs
lds
into
out
fsubrp
aas
fistpll
out
std
hlt
cmc
fmul
jmp
mov
test
fstl
das
cmp
repnz
loope
jmp
out
in
jmp
cld
loopne
int
mov
mov
in
int
les
jmp
fldl
jmp
std
ret
mov
lret
fdiv
idivb
out
out
xlat
ljmp
bnd
aad
test
repz
test
sti
vpminsw
shr
in
mov
sti
aaa
aaa
leave
std
hlt
jmp
in
loopne
cld
leave
mov
add
fndisi(8087
out
xchg
in
in
xor
leave
in
aaa
test
cli
icebp
fisttpl
addl
ljmp
rcr
fdiv
leave
div
iret
ret
loopne
xchg
out
orl
fdiv
repnz
fsubrp
cs
ret
fdivrl
out
sub
in
aam
test
cld
dec
mov
mov
cmp
xlat
enter
aad
repz
sbb
iret
sti
xchg
roll
sti
rol
nop
loop
xor
jmp
xor
out
cmc
xor
sti
faddp
test
sti
jmp
test
cli
cmp
out
call
fsub
in
shl
sub
out
xchg
popl
enter
cmp
or
test
in
in
orl
fidivs
ror
xor
into
jmp
iret
out
repnz
cmc
les
clc
jmp
shl
mov
je
or
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
mov
clc
jg
jbe
jle
add
int
jmp
fnstsw
iret
repnz
aam
jecxz
out
std
cmc
loop
test
repz
fincstp
jmp
sti
aam
in
test
clc
jmp
cli
call
xchg
sub
lret
iret
rol
cli
int
idiv
int
int3
cmp
fldl
sub
mov
in
jmp
fdivrl
cld
jmp
ret
loopne
cmp
sub
push
ljmp
stc
cmp
fcmovnbe
in
test
aam
fsubp
clc
stc
lret
orl
in
into
out
iret
cli
call
out
ffree
movb
orl
hlt
cmc
ror
test
int3
sarb
fdiv
cmp
xlat
cmp
jmp
int3
in
mov
fisttpll
div
cmc
repnz
cmp
test
jecxz
jecxz
mov
sti
xchg
dec
std
icebp
fstp
mov
mul
aad
ss
out
stc
sar
roll
jecxz
addl
xor
out
xor
aam
aad
icebp
cld
idivb
test
cli
loopne
leave
int3
clc
jmp
fcomi
mov
xor
icebp
rcl
fcomp
repz
repz
xchg
ljmp
out
out
shl
xor
cmp
fstp
in
ljmp
out
fsub
mov
in
frndint
std
rcr
xchg
shlb
ss
stc
out
repz
cmp
out
fucomi
cli
nop
int3
jmp
shrl
sarb
shl
enter
fmulp
lock
rolb
fmul
leave
iret
jecxz
addb
icebp
les
fidivl
jmp
cmp
aad
lret
lret
xchg
fcomip
out
hlt
aam
out
ss
ds
ds
lock
loopne
xchg
out
call
in
fcmovnu
aas
cmp
lret
inc
stc
aam
fucom
test
shr
call
mov
aad
repz
jmp
lock
ret
fucomip
lret
mov
std
addl
cld
fscale
repz
aad
call
loope
in
out
lret
ror
icebp
xchg
aad
xor
aam
rcr
ljmp
mov
enter
xchg
cmc
out
mov
xlat
enter
rcr
ss
aad
jmp
fcomi
movb
mov
test
nop
fcmovne
incl
cmc
out
in
div
jmp
icebp
in
cmc
xor
jmp
lret
aam
aam
pop
les
lods
add
rol
out
hlt
call
mov
adcl
cmp
fcomip
cmp
cld
fst
fucomi
hlt
xchg
loop
test
cli
mov
call
jmp
test
in
cmp
ds
xchg
cld
mov
std
adcb
out
clc
aam
rcl
int
in
out
rolb
in
in
in
mov
aam
ljmp
divb
cli
repz
int
ret
cli
mov
decl
fst
lret
rclb
jmp
repz
hlt
idivb
sbb
xchg
out
loopne
orb
std
jmp
lock
fcmovu
rolb
in
testb
xchg
iret
lret
in
aaa
cmp
aam
ret
rol
sar
fadds
lea
hlt
xor
cmp
shr
lock
cmc
rcr
in
movl
in
repnz
shll
int
ljmp
cmc
repz
fdiv
shl
mov
std
fcmovnb
into
mov
incb
sar
in
in
cmp
fdivrs
push
into
fadd
jmp
loop
fiadds
jmp
xor
xor
sub
cmp
fdivrp
ljmp
movb
lret
loope
sti
out
aaa
std
fadd
jmp
in
aad
out
fcmovb
idiv
ret
test
aad
xor
xor
lret
out
out
shlb
in
xlat
aas
frndint
mov
cli
loopne
jmp
repz
jmp
out
aad
clc
fnstsw
loope
jmp
into
fld
enter
fxch
sbb
leave
jmp
xchg
out
hlt
sar
std
int
jmp
ror
int3
int3
ret
rolb
fisttpll
nop
mov
fld1
shll
xlat
xor
inc
iret
cli
vpsubusb
xchg
enter
mov
test
into
in
out
aam
or
test
clc
fadd
loopne
xlat
out
ret
add
out
lock
iret
fcmovu
xor
loope
cmp
cld
loope
mov
fld
ffree
sti
in
repnz
xor
fsubr
out
sub
sti
shl
fsubr
in
repz
aad
repz
testl
mov
in
shlb
rolb
hlt
out
sbb
fdivr
mov
loopne
or
out
icebp
lret
aaa
shl
std
aad
sarl
hlt
std
in
mov
stc
out
jmp
icebp
orl
add
add
add
add
movl
enter
int
lds
bound
lods
add
jmp
in
call
fmulp
iret
out
rcl
not
mov
aam
aam
out
loopne
int
decl
fsubr
shl
fcmovbe
ljmp
fdiv
stc
testb
loopne
fstl
fld
fxch
lret
cmp
in
xor
in
xlat
fiadds
enter
out
jecxz
in
into
in
out
les
into
jmp
cmp
fstpt
out
in
idiv
lret
in
fxch
mov
out
orb
cmp
cld
idivl
lret
out
int3
fdivp
cld
aad
fscale
sbb
test
aad
rcl
in
jmp
out
shr
int3
jmp
repz
not
jecxz
ret
jmp
xchg
imul
cli
enter
out
aam
shr
test
jecxz
jmp
cld
in
in
test
int
out
lret
lret
call
aad
rcl
aad
ds
iret
leave
in
leave
fdiv
in
bnd
out
fdivp
cmp
shl
fdiv
faddl
nop
fsubp
xchg
mov
enter
fcompp
adc
int
shl
aam
fdivp
in
faddl
lock
divl
out
out
cmc
cli
fcmovnbe
adc
and
jmp
lret
into
in
xchg
xlat
in
cmp
cmp
xlat
lret
fidivrl
cmp
rcl
dec
xlat
lret
xchg
int3
loop
out
ret
out
test
hlt
lret
lock
fcmovnb
cmp
in
fstp
mov
mov
out
adc
out
call
imul
aad
aas
cld
ds
aas
fsub
icebp
icebp
fucomip
inc
fmul
into
fsubp
in
nop
out
xor
fcomi
fsub
fsubr
xlat
jmp
hlt
lret
out
mov
fucomip
test
idiv
out
leave
fdiv
fldl
aas
shl
lret
and
std
sti
fucomp
jmp
xor
hlt
out
ror
add
sti
fcomip
jmp
fcmove
xchg
jecxz
cs
xor
out
cmp
sar
cld
test
in
xchg
shl
int3
ljmp
repnz
int3
hlt
repz
cmc
loopne
xchg
out
loopne
mov
jmp
cmp
fxch
fiadds
jmp
orl
shr
sti
in
repnz
clc
cmp
ret
stc
imul
sub
in
in
xor
out
leave
not
fcomi
jmp
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
pop
jmp
lea
add
add
aam
in
fdecstp
stc
mov
test
jmp
fcmovne
xor
icebp
clc
ret
xor
fadd
cmp
int
in
in
ljmp
leave
in
int
std
lret
leave
aas
fsubrp
in
fdivp
xchg
std
mov
mov
xchg
xchg
mov
in
cmc
icebp
sti
fpatan
fldl2t
rcr
std
icebp
in
in
jmp
int
ljmp
xor
in
fdivs
aad
int
in
xlat
loopne
ret
into
sti
mov
call
int3
divb
std
idiv
cli
int
lock
faddp
xchg
sub
lock
repnz
xor
ljmp
shl
fiadds
sti
cmc
fmuls
lret
in
int3
shl
enter
sarl
loope
loope
hlt
repnz
into
sbb
std
int3
into
xchg
lock
sarl
rcl
cmp
fldl2t
loop
cmp
fucomi
in
xlat
xchg
mov
jmp
jmp
lret
rcl
shl
loop
stc
mov
out
jmp
xor
jmp
int3
rcl
test
sti
repnz
ror
cmp
mov
lret
lds
shr
shlb
in
sti
ret
not
stc
cmp
cmp
sbb
fstp
jmp
sti
repz
mov
iret
cmp
cli
cld
out
out
loopne
sti
test
loope
testl
jmp
in
div
xlat
repz
enter
lret
ror
or
faddp
repnz
icebp
out
lret
stc
cmp
ror
shr
cld
ds
incl
test
subl
iret
ss
aam
into
cmp
iret
clc
mul
out
loopne
decb
repz
mov
fcmovb
int
in
cmp
cmp
fst
clc
cmc
cld
jmp
std
in
out
repnz
cmc
or
hlt
fsubr
xor
repz
cmp
jmp
mov
xlat
leave
enter
sarb
ds
push
xchg
in
loopne
out
jmp
iret
loope
loop
fxch
out
fdivrl
neg
adc
cli
cmp
stc
fucom
in
fmulp
fdivp
repnz
hlt
xor
cmp
fdivl
shl
ljmp
std
test
fstp
fucomi
out
test
icebp
mul
ret
stc
imul
roll
test
cmp
int3
xor
jmp
aad
lret
enter
fcmovnu
push
icebp
ret
push
xor
add
add
addl
ds
fistpll
aad
fld
rol
fsubr
fsubr
test
call
xor
iret
int
lret
fcmovnu
hlt
std
ret
cli
repnz
loopne
jmp
das
enter
sarl
test
repnz
fcmovnbe
aas
sbb
fdivr
testb
rolb
ret
aaa
xor
cmp
aas
lret
cmp
aam
aad
loop
lret
xchg
lock
xchg
nop
xor
hlt
in
out
mul
lock
fcmovu
sti
idivl
xlat
xchg
std
fimuls
sti
iret
mov
ss
xlat
test
lret
cmp
clc
out
fdivrl
clc
loopne
loope
sar
out
leave
test
out
jecxz
xchg
jmp
lock
enter
repnz
aam
aad
cli
enter
lret
lea
xor
aaa
aam
jmp
ret
repz
fsub
fcmovbe
clc
test
int
out
into
repz
shl
int
fmul
int3
idiv
cmp
rcl
fiadds
cli
mov
xchg
in
rcr
not
repz
int3
int3
aad
sti
fisttpll
addl
in
loope
sub
jmp
cmp
shl
lock
loopne
repz
fld
imul
fmul
jmp
repz
int
jecxz
icebp
repz
xlat
fcmovnbe
int3
ret
out
xlat
out
ffreep
mul
faddp
jmp
xchg
xorb
xor
jmp
dec
aas
aas
fadds
in
call
loopne
mov
loop
cli
xor
leave
cld
loopne
fnstsw
int3
sar
in
or
int3
call
mov
xchg
incl
ljmp
stc
int3
fidivrl
xchg
cli
out
in
sti
lret
jmp
lock
in
ret
aaa
jmp
fistpll
cmp
icebp
loopne
ds
clc
add
in
mov
xchg
std
repnz
lock
repz
into
icebp
out
cmp
cmp
sti
fsubrp
enter
test
icebp
dec
iret
in
call
xor
ss
idiv
shl
shl
stc
sbb
in
fsub
ret
icebp
xchg
in
out
xor
sti
jmp
int
ds
ror
loope
jmp
out
rcl
mov
out
rol
xlat
call
loope
ret
orl
mov
std
ret
out
call
idivl
fsub
xor
ds
aad
ret
loopne
test
jmp
shr
enter
iret
fcmovu
fcomi
jmp
mov
mov
xor
jmp
enter
int
enter
push
add
add
jle
add
fcomp
xchg
cld
repz
fcmovb
jmp
call
xchg
out
cmc
fcmovnbe
xlat
clc
fiadds
in
lds
fdivrp
fsubr
out
in
in
aad
aaa
ss
stc
sti
xlat
cld
lret
in
int
lock
add
fld
jecxz
idiv
call
mov
int3
leave
ds
cmp
fdivrl
ds
mov
out
loopne
out
or
out
rol
ret
jmp
cmp
out
loop
repz
icebp
cmp
in
xlat
ret
test
jmp
ror
lock
lock
xchg
cmp
mov
in
ljmp
call
cmp
hlt
roll
fcmovb
aad
out
test
int3
out
test
mov
in
fistpll
ss
idivl
cmc
test
call
out
call
cmp
repz
in
fadds
iret
xlat
shr
fadd
xchg
xchg
sub
in
cmp
sar
hlt
cmp
shl
into
loopne
in
std
jmp
jmp
leave
nop
lret
iret
mov
int3
fnstenv
in
out
jmp
div
rorl
jecxz
fsubrp
enter
fldl
cld
leave
enter
lock
sar
fadd
out
filds
out
out
loope
clc
jmp
xor
repz
fdiv
fucomp
les
jmp
fsubp
incl
shr
fcmovnbe
xor
lock
fcmovbe
sarb
ret
cmp
fcmovne
dec
out
fadds
shl
repz
enter
shl
cmc
rcl
and
fcmovu
jmp
flds
int
int
fptan
int3
repnz
out
aaa
adc
aam
stc
call
leave
xchg
call
out
test
rolb
movl
lock
rcl
cmp
leave
shl
xor
fdiv
int3
fdiv
xchg
in
xchg
mov
mov
hlt
rol
leave
jmp
lret
test
cld
in
int3
neg
enter
shl
or
out
aaa
fstpt
rolb
loopne
add
incb
mov
rcl
into
hlt
ror
fidivrs
aam
repnz
aas
loop
fmull
fxch
mov
mul
fdivr
shr
lds
fidivrl
iret
cmp
xlat
jmp
ret
mov
lret
loopne
lock
aas
lret
fcmovnu
xlat
aad
jno
dec
xchg
jecxz
cmp
add
add
loope
aam
mov
iret
div
xor
clc
in
hlt
in
xlat
loope
rolb
fmuls
int
fucomip
aaa
xor
in
lret
aaa
in
cmp
cld
shl
orb
fsub
cli
test
mov
sti
cmp
aad
out
loop
iret
fucomi
aad
cld
loope
lret
iret
int3
std
in
mov
xor
repnz
cmc
ds
faddl
flds
mov
xchg
ljmp
sarl
std
cmp
flds
fxch
call
loopne
das
call
aam
bnd
test
cmp
fld
xlat
in
lock
mov
cli
repz
jecxz
sbb
out
and
in
std
loop
in
xor
aaa
fcmovnbe
cmp
test
loope
test
orb
aaa
fcmovu
in
sti
repnz
cmp
test
fucom
addl
call
ret
fsubr
aam
rcl
roll
fdiv
aad
out
fmuls
aam
lret
jmp
ror
cmp
cli
cmc
addl
lret
jecxz
xchg
fst
mov
aaa
out
int
in
into
lock
sar
stc
stc
in
loop
fst
xchg
and
xor
xor
cli
fcomp
ss
stc
loopne
add
ljmp
ljmp
xor
iret
clc
xlat
lret
sti
cmp
fiaddl
leave
std
in
jmp
mov
out
jmp
cs
cmp
repnz
shl
shl
rol
mov
test
iret
mov
fsubr
cmp
in
cmc
ds
fildl
and
in
in
mov
subb
enter
fsubrp
cmp
lret
fxch
cmp
shl
fninit
ret
in
sti
out
xor
nop
mov
ret
iret
out
cli
fsincos
cmp
rcl
xchg
mov
fdivr
loop
mov
xor
leave
divl
cmp
cmc
loop
std
fmul
shl
cmc
lds
out
in
lock
mov
xor
out
clc
ds
xor
rol
rolb
lret
adcl
into
fucomi
shr
or
test
fld
lret
xchg
fdivp
out
call
repz
cmp
mov
mov
jmp
into
enter
int3
fwait
outsb
mov
mov
in
push
add
repz
fnstcw
out
xchg
loop
out
fsubr
out
hlt
stc
lock
fdiv
cmp
aad
aas
loope
mul
fimuls
xchg
rorb
repz
lock
int
shl
cmp
in
fcmovu
fiadds
iret
out
call
aad
fdivr
cmp
clc
hlt
aas
and
out
in
jmp
fadds
jmp
call
lock
cli
jecxz
repnz
jecxz
in
mov
out
jecxz
in
xor
cli
leave
fsubr
aaa
fldlg2
shl
lock
cmp
xor
mov
mov
loopne
loope
xor
out
neg
iret
in
idiv
loopne
repnz
stc
sti
out
fcmovne
loop
enter
xchg
xlat
rol
ret
sar
jmp
aas
std
icebp
test
aam
shl
aad
orb
out
int3
aaa
xor
fcomi
in
cld
xlat
sub
jmp
in
out
call
shl
enter
cmc
ror
int
sti
faddp
loopne
jecxz
mov
jmp
rolb
rcl
xor
test
cmc
in
out
into
shl
clc
neg
out
fisttpll
call
lock
out
repnz
aam
iret
sar
out
fdivr
ffreep
les
mov
leave
repnz
std
xchg
xchg
fdivs
aad
lret
cmp
icebp
cmp
fcomip
xlat
call
incb
in
call
loope
test
aam
in
icebp
adc
fucomp
idivb
add
fisttpl
mov
fnstenv
lret
cmp
cmp
jmp
sti
movl
loop
in
xor
enter
fcomp
loope
roll
cmpb
idiv
out
in
in
out
lret
loopne
xor
cmp
lock
test
ret
cld
shr
incl
jmp
int3
xchg
cmc
jmp
int3
lret
fcmovne
int3
out
fcmovbe
int
std
jmp
loop
sub
int
stc
jecxz
std
dec
cs
sub
clc
shl
repz
fcmovu
cli
adc
test
in
xchg
mov
in
repnz
lret
aad
test
test
in
cmp
or
jecxz
fmul
lret
lock
lret
aad
mov
fcmovb
jmp
out
cld
lret
xor
out
lret
xlat
into
test
aad
cmp
aas
xchg
jmp
mov
fcmovnb
cld
out
inc
cmp
movl
int3
into
fstp
pushf
mov
fwait
seta
add
add
int3
cli
sar
in
call
repz
ror
xor
cmp
sti
xlat
inc
in
lret
sti
xor
out
out
aas
repz
stc
leave
xor
int
loope
and
fcmovnbe
loope
out
fldlg2
addl
aad
ds
cmp
jmp
fucomi
cld
cld
fld
mul
xor
cld
fsub
int
shl
xchg
jmp
icebp
jecxz
aam
sarb
aam
not
repnz
test
cmc
fildl
call
adcb
fcmove
xor
cmp
lret
rcl
ret
mov
repz
repnz
loopne
xor
xor
xor
iret
in
test
out
ret
jmp
jmp
mov
loopne
repz
xor
jmp
int
fnstsw
xor
test
ljmp
in
jecxz
shr
jmp
call
sar
repnz
sti
call
int
jmp
dec
ljmp
fstpt
cmc
lret
cli
aam
fcmovnbe
xlat
aad
loopne
loopne
clc
cld
fucomi
cld
fdivp
sub
aaa
ror
enter
xlat
cli
jecxz
add
in
mov
jmp
lret
shl
aad
jmp
cld
fadd
cli
roll
jmp
fucomip
ljmp
jmp
call
cmp
fcmovnb
into
cmp
testl
fcomp
test
call
mov
loope
clc
ss
int
aaa
lret
cli
in
clc
not
loop
int3
mul
loope
jecxz
xchg
lret
lock
in
fcmovnbe
jmp
jmp
div
call
jmp
incb
mov
aam
loop
in
into
out
out
loopne
xor
test
out
test
fmul
mov
mov
jecxz
hlt
aaa
rol
lret
icebp
xor
aam
in
fchs
fst
out
enter
in
loop
shl
cmp
ret
xor
repz
idivl
fistpll
std
fucomp
test
fcom
xlat
loop
leave
test
fucom
fists
cmp
into
lock
fucomi
iret
in
sti
cmp
fimull
cld
xchg
aad
out
ss
idiv
aad
sti
shl
loope
in
movb
out
fmul
aaa
out
aam
sarb
int
aas
imul
cmc
mov
faddl
jecxz
loop
repnz
stc
int
cmp
cli
cmc
fistpll
iret
aam
xchg
lea
lret
hlt
mov
enter
ljmp
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
adc
push
add
add
hlt
fcomi
cli
xor
aam
fcmovnb
aad
in
addl
ror
cld
neg
xor
aaa
out
ds
lds
fnsetpm(287
out
mov
nop
mov
in
in
fxch
in
cmp
cmp
leave
shl
loopne
fucom
shr
dec
cld
sti
mov
faddl
in
ret
cmp
fstp
xor
jecxz
jmp
int
loope
in
ljmp
sti
fsubr
xlat
loopne
cmp
fscale
cld
loop
fcomi
aad
mov
fmull
xor
ljmp
lret
lret
cmc
in
out
sti
fdivr
enter
loope
out
call
loope
shlb
aad
fidivrs
cmc
xor
std
ds
jecxz
fadds
in
loop
mul
fnstenv
fsubr
jmp
rcl
lret
cmp
sbb
xchg
cli
mov
call
in
fdivr
xor
shl
cmp
and
stc
in
loop
xchg
lock
enter
enter
cmp
loop
sub
test
cmp
in
rcr
xchg
repnz
icebp
cmp
cmp
aas
adc
flds
cld
sbb
test
cmc
aad
int3
jmp
sub
fcmovnbe
adc
iret
out
out
mov
orl
xchg
shl
loopne
lock
cmp
lret
rol
fnstsw
xlat
xchg
fimull
mov
xchg
enter
ljmp
rcr
std
cld
test
xchg
ror
xchg
loope
cli
ror
repz
out
aam
int
fcmovu
roll
int3
in
out
iret
in
xchg
xchg
nop
hlt
lock
jmp
rcl
enter
fsub
test
ffreep
clc
hlt
int
clc
in
hlt
xchg
xor
clc
ret
fadd
stc
leave
decl
out
rclb
cmp
hlt
in
not
sarl
icebp
not
sarb
loopne
fcmove
out
jecxz
mov
loopne
xchg
iret
clc
aam
in
sti
cmp
ret
ret
test
xchg
jmp
hlt
lock
stc
rcr
aam
fildl
incb
loope
int3
out
nop
xlat
cmc
shr
in
cmp
ret
div
aad
shl
aam
mov
in
out
sub
ss
ret
iret
fmul
jmp
in
ffree
imul
in
lret
test
add
add
lret
iret
into
aad
leave
fnsave
cmp
mov
adc
jle
add
cmp
xchg
in
xor
fsub
in
lret
iret
hlt
aas
loopne
cmc
out
stc
iret
incb
enter
ror
in
in
cmp
into
out
cld
in
xor
out
not
fcmovnbe
std
aad
enter
jmp
mov
ljmp
fsubr
fnstcw
shlb
push
div
fisttpll
jmp
jmp
loope
lret
out
xor
cli
out
cmp
cli
loopne
cmp
int3
stc
out
enter
not
into
jmp
incb
int
rcl
bnd
aas
xor
out
test
ret
roll
mov
nop
nop
xchg
ret
out
loope
jmp
fadd
enter
hlt
fdecstp
icebp
ds
jmp
call
shr
incl
fsincos
rcl
xlat
fld
add
icebp
addb
in
mov
idiv
int3
repnz
xor
icebp
cmp
aas
xlat
jecxz
icebp
mov
jmp
mov
int
enter
xor
aaa
ljmp
xor
loop
add
mov
xchg
in
out
xor
repz
rcl
cmp
fcom
stc
std
xchg
sub
fcoms
aad
xor
aaa
test
fst
std
loope
sar
fcomip
mul
in
mov
in
rorb
vpsubusw
icebp
cmp
int
incl
mov
mov
fiaddl
call
lret
repnz
das
fdivp
jmp
fdiv
fiadds
in
mov
in
in
rcl
mul
out
stc
clc
int
ret
cli
repnz
aam
sbb
out
int
iret
nop
xchg
sarl
in
idivl
enter
jmp
cmp
xlat
shl
jmp
or
nop
cli
fcomi
shl
divb
aaa
xor
lock
clc
sub
jecxz
fldl
out
repnz
div
in
fstpt
in
into
out
fnstenv
lock
clc
addl
cli
xchg
jmp
call
int3
aaa
rcr
ss
xlat
into
aaa
ds
and
cli
out
xchg
call
aas
xor
cmp
ss
ds
loopne
loop
rol
hlt
ds
addl
xor
cmp
clc
in
in
xor
out
iret
test
mov
addl
mul
fcmovbe
xor
rcr
ljmp
aad
and
stc
enter
not
hlt
hlt
int
test
je
jmp
mov
int
sub
movsb
adc
jle
add
div
shl
shl
repnz
cmp
fptan
fucom
ljmp
loope
xchg
cmc
xor
iret
xor
lret
clc
in
div
sar
test
test
mov
in
in
lret
in
iret
loope
int3
int
rcl
jmp
in
cmp
fsub
cli
fucomi
jecxz
shr
std
in
xor
int3
fucomi
iret
clc
stc
lret
aam
ret
leave
fiadds
mov
jmp
fcmovu
out
cmp
dec
int3
aad
loopne
div
repnz
cld
xlat
out
shr
loop
repnz
mov
hlt
in
fsub
loope
test
std
xlat
rol
roll
in
loope
repnz
in
icebp
sbb
loope,pt
ret
std
xlat
leave
adc
decb
filds
int3
xlat
cmp
lret
cld
fsubr
sti
sar
inc
fcmovu
loop
in
in
call
lret
ljmp
clc
hlt
fcomp
rcl
sub
out
jmp
repnz
xchg
shl
xlat
lret
icebp
cmp
xor
rol
ds
mov
out
xchg
in
lock
cmp
fucomip
icebp
rol
sarb
loop
fcmovu
fmulp
enter
sti
nop
test
repnz
cmc
sub
out
sar
repnz
aas
loope
aam
loopne
lret
jmp
ljmp
repz
iret
enter
cmp
ret
fcmove
loopne
aam
clc
sub
sti
cmp
repz
repnz
vpsubsw
cli
iret
loopne
fdivr
out
xchg
mov
aad
aad
jecxz
loope
fmull
int3
iret
vpaddsw
loop
sbb
fcmovnbe
test
sti
mov
mov
xor
cli
xor
repz
loope
cmp
ds
aad
ror
aad
xor
lret
xor
fucomp
cmp
cld
lret
out
in
repz
les
test
sti
in
xchg
mul
rol
xor
lock
filds
fmul
rol
call
lret
stc
adc
rol
out
rol
fcmovu
xor
flds
std
cli
neg
testl
ret
fcmovbe
lret
fcmovnu
faddp
repz
aam
std
cld
aad
int
fisttpl
divb
into
lock
sti
call
fiaddl
sti
in
lock
fyl2xp1
in
ss
xor
cmc
pushl
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
dec
push
jle
add
xchg
mov
fsubp
ret
repnz
aaa
cmc
shr
stc
iret
cmp
out
std
cmp
fdiv
sti
fucomp
in
jmp
sub
stc
out
idivb
ljmp
clc
loop
incl
icebp
enter
xchg
in
iret
in
leave
xor
cmc
ds
cmp
ret
addl
cmc
mov
ljmp
out
cmp
in
aam
fadds
ffreep
fcomip
mov
mul
in
xchg
test
cmc
ljmp
fsub
into
fcmovnu
rcl
faddp
jmp
out
in
out
rcr
out
int3
sub
out
sti
into
fdiv
out
cli
leave
dec
repnz
ds
in
enter
leave
out
enter
neg
fdivrs
sarl
cmc
aad
into
sar
addl
sti
sti
mov
loopne
std
bnd
in
int
out
hlt
aas
lret
shl
sti
fdiv
mov
leave
fisttpl
mov
lock
shr
std
fcos
roll
lret
in
into
cli
jecxz
test
adcb
in
ds
cmp
fildl
testb
lret
iret
rorb
in
ljmp
into
repnz
icebp
test
loopne
fdiv
vpaddusw
out
jecxz
lock
xor
out
jmp
cmp
out
incb
lock
mov
ss
int
fcmovb
test
rcr
lock
loope
out
in
jmp
into
clc
xor
cmp
loope
into
cmc
iret
icebp
ds
cld
mov
aad
xchg
xchg
in
repz
mov
aam
in
hlt
out
xor
test
cmp
iret
repz
xor
leave
sub
ret
cli
cmp
icebp
fmulp
dec
shl
loopne
in
and
jmp
out
rorl
mul
clc
xor
xor
fbstp
ror
fcom
aas
jecxz
or
fcmovu
std
icebp
aad
enter
ljmp
ret
decb
orl
repz
into
fbstp
test
jecxz
hlt
in
cli
call
call
xchg
loope
rcl
vpaddusw
cmp
add
fmuls
test
jmp
cmp
cli
cli
aaa
jmp
stc
xchg
loope
sar
leave
std
call
fsubp
int3
nop
cs
xlat
mov
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
mov
jle
add
into
cs
imul
fyl2xp1
aam
ret
iret
aas
rcr
ljmp
mov
cs
repz
ss
cmp
cmc
cmp
std
int3
ds
ds
loopne
test
cld
sti
clc
xchg
loope
repnz
aad
out
xor
jmp
shl
out
in
ljmp
in
test
mov
ret
cmc
fld
lret
aad
fcom
test
xchg
hlt
int3
lret
out
sti
mov
ljmp
repz
iret
aaa
out
shr
out
aam
stc
test
mov
in
xchg
cli
in
hlt
aad
ret
fcmovb
rcl
rol
jmp
loope
loop
loope
or
mov
in
xchg
out
shlb
xor
rcl
sti
in
repz
fisttpll
xchg
leave
ljmp
repz
int
aam
repz
hlt
out
sti
rcl
in
fcmovnbe
ljmp
lret
loope
iret
fsubr
iret
icebp
cmp
cmc
pushl
jecxz
jecxz
in
leave
test
ror
movb
cmp
ds
cmp
jecxz
xchg
fadd
xlat
lret
nop
out
mov
ror
ss
cmp
push
lock
fsubp
addl
and
mov
bnd
lret
xor
ror
sbb
clc
lds
les
cmc
rcll
jecxz
ror
in
std
sar
fldln2
out
imul
not
leave
aad
cmp
jmp
or
xor
ret
cli
fdiv
jmp
cmp
out
mov
aad
addb
icebp
mov
clc
lock
fsubr
loopne
les
loopne
sti
lret
in
mov
stc
leave
test
aad
enter
ljmp
rcl
aad
call
loope
xchg
shl
xchg
nop
xchg
jmp
shl
clc
div
into
repnz
out
xchg
iret
fsub
ret
out
mov
xchg
roll
lret
cmp
call
rcr
test
cmp
testl
subl
jmp
rcl
enter
fldl
push
xchg
sub
add
add
adc
ret
in
clc
cli
cld
icebp
int3
cmp
add
loope
add
mov
test
loopne
aad
jecxz
idivl
icebp
into
les
in
out
sti
mov
icebp
repz
divb
ds
in
fsubr
out
lock
xlat
enter
int3
rcll
cli
fstpt
fucomip
jmp
call
loop
out
fcmovb
lret
fpatan
ljmp
aas
idivb
hlt
cmpl
xchg
fucomi
and
test
int3
lret
in
xor
out
lock
xor
hlt
loope
fdivp
in
fstp
loop
loope
faddp
mov
cld
loope
iret
in
std
rcl
xor
int
cmp
rcr
iret
cmp
sar
rolb
out
out
int
rcl
aam
ljmp
fcmovb
hlt
clc
faddl
mov
ffree
std
orl
into
in
in
lret
cmp
rcr
in
out
sti
in
mov
xchg
loop
xor
ss
lock
cmp
fstpt
lret
in
call
xchg
imul
sub
cli
xor
int
test
rcr
std
clc
fcomp
in
test
out
mov
ljmp
cli
xor
stc
cmp
fst
out
stc
xlat
test
aam
call
mov
in
xlat
sub
icebp
fcmovb
cmc
repnz
xlat
repz
les
orl
xchg
rclb
hlt
repz
idiv
loope
std
aad
sti
repz
inc
sti
in
mov
fiadds
repnz
aaa
shr
cmp
test
xlat
in
shl
sbb
enter
icebp
xchg
addl
aam
int3
hlt
fsub
fdiv
shl
aam
sbb
ljmp
test
out
fildll
in
enter
aam
fcmovnu
lret
aam
out
rcl
out
shr
mov
xchg
ljmp
stc
fcmove
aas
in
loopne
out
hlt
ffreep
in
mov
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
inc
int3
push
pop
negb
jle
test
xor
ljmp
lock
shl
ds
fdivr
loopne
leave
jecxz
call
in
xchg
rorb
call
icebp
lock
rcr
out
fnstcw
call
ds
int3
nop
iret
ss
clc
jecxz
faddp
shl
in
shr
sti
ret
idiv
fisttps
lret
rorl
fdivs
stc
out
xor
ror
repnz
aaa
into
test
aad
ljmp
and
xchg
repz
out
out
jmp
cmp
idivb
fcmovnu
repnz
aad
in
orl
shr
ret
int
cmp
rolb
cmp
aas
fxch
loop
rcr
xchg
fsubp
cs
lret
loopne
sti
add
cld
aam
in
fst
cli
call
shl
in
clc
cli
xor
int3
iret
out
lret
int
addb
enter
in
cmp
mov
in
int
fcos
fsubr
into
rcl
jecxz
addl
cld
clc
mov
fsubp
incl
aaa
jmp
int3
enter
frndint
xlat
fincstp
sar
decb
stc
xchg
loop
sarl
out
xor
cmp
call
test
loop
stc
in
repz
in
orl
repz
in
shl
out
cmp
shl
bnd
icebp
addb
std
loope
repnz
xchg
aaa
jmp
jmp
out
ss
ljmp
out
in
rcr
mov
shl
xchg
xchg
std
xchg
xor
cli
fcmove
icebp
cmp
int3
fdivp
cmp
and
in
adc
sti
mov
loopne
xor
aad
sti
repz
fildl
fmul
idiv
fstp
in
repz
in
repz
fdecstp
aad
leave
repz
sarb
not
aad
fstp
xchg
mov
lret
ror
stc
fmul
icebp
loopne
cmp
out
sarb
repz
mov
xchg
fcmove
hlt
jmp
out
iret
xor
fstp
out
hlt
ds
idivb
xlat
test
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
fsub
fadd
test
jmp
cmp
fnstenv
shr
cmp
sti
flds
jmp
cmc
rorl
cmp
ljmp
idiv
fdivp
fxch
decl
ljmp
ljmp
xor
fcomi
jecxz
aad
loopne
mov
shll
repnz
in
ss
sar
sarl
fnsetpm(287
std
fimuls
fcoml
ljmp
loopne
rcl
adc
mov
xchg
dec
lret
aad
xor
call
shl
test
jmp
mov
mov
enter
jmp
cli
vpminsw
cmp
loope
ds
loop
roll
mov
test
repz
out
out
fadd
in
fadd
loop
xchg
testb
out
loope
loopne
lret
rcl
ds
cmp
rcr
out
mov
testl
cmp
enter
sti
clc
cld
ror
aas
xor
cmp
fcmovb
and
mov
out
ss
fsubrp
lock
std
loop
aam
neg
and
fcmovne
jmp
loope
xor
repnz
in
jmp
stc
cmp
shr
xlat
in
test
fadds
cmc
test
out
aam
xor
clc
in
cmp
loop
out
in
fld1
out
lds
fadd
cmp
shl
in
cmp
xor
lock
cmp
inc
lret
fldz
mov
xchg
cld
ljmp
out
cmp
cmp
stc
fildl
leave
into
nop
repnz
in
int
xor
fdivr
cmp
hlt
int3
mul
clc
fprem
test
xchg
lock
incb
int
ss
cmp
neg
neg
in
cmp
xchg
sbb
cmp
nop
call
out
jecxz
leave
fmul
repz
out
mov
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
imul
push
add
add
icebp
rol
fcmovnu
std
jmp
ret
mov
mov
nop
in
xor
aad
ror
enter
div
mul
enter
mov
in
mov
ret
fisttps
out
ret
sar
sub
ds
div
ljmp
xchg
in
faddl
hlt
aad
aad
cli
int3
aaa
aaa
int
cli
hlt
ds
add
call
out
into
icebp
cmc
jecxz
std
into
shl
fidivrs
int
loopne
loop
xlat
adc
fcmovnb
cld
and
mov
xlat
cmp
int
faddp
ror
jmp
cmc
cmc
fiadds
test
test
stc
test
shl
fcmovu
icebp
ds
aam
addb
jecxz
int
int3
cli
ss
repz
jecxz
and
fmul
fst
lock
cld
rclb
clc
repz
stc
out
fdivrp
ret
mov
out
int
mov
int
xor
icebp
ror
sti
aam
shlb
repz
fdivr
xlat
mov
in
repnz
shl
cmc
lret
hlt
aaa
dec
loopne
idivb
out
test
flds
lea
iret
iret
out
aaa
out
xor
hlt
xor
into
fnstcw
cld
fsub
fucom
in
ljmp
int3
rol
int
xor
cmc
and
ret
jecxz
lret
icebp
fucom
in
rorb
out
stc
sti
enter
dec
clc
clc
addl
test
out
test
rorl
lret
repnz
lock
in
int
out
fcmovnb
lea
xchg
call
jmp
xlat
in
aad
testl
std
mov
fadd
das
in
clc
hlt
sarl
lret
loope
ror
stc
jecxz
fyl2x
cld
out
out
nop
xor
xor
idivb
ds
hlt
xlat
fiadds
fcmovnu
clc
lret
xchg
lret
xchg
jmp
iret
shl
cmp
push
adc
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
fmulp
leave
ss
sarb
cmp
std
cmp
in
or
loop
lret
cli
xor
int
jmp
fdivrs
fcmovnu
loop
rcr
cli
rclb
loope
int
xlat
out
aad
cmp
sarb
int
aaa
clc
hlt
sti
sar
aad
out
int
mov
jmp
rcr
aaa
iret
repz
xor
cmp
test
leave
fcomi
fcmovb
jmp
out
fsub
lock
sti
int3
int3
cmp
inc
test
cmp
jecxz
test
and
in
fucomi
mov
icebp
repnz
aad
cmp
fdivr
test
fstp
mov
rolb
aad
ror
iret
fsin
loopne
testl
out
stc
ljmp
cmp
into
aaa
leave
int3
into
pushl
clc
repnz
fxch
call
cld
loopne
testb
into
imul
fcmovnb
int3
into
addb
addl
icebp
ror
shl
in
shl
sti
lock
std
xchg
icebp
ds
enter
sti
adcl
ret
cmp
cmp
in
icebp
test
shl
ret
int3
clc
jmp
test
in
out
ror
cli
in
cmp
sti
cmp
idivb
cmp
cmc
fcmovb
mov
out
and
mov
fucomi
aam
loop
in
aas
loope,pt
fucomi
addl
lock
out
ss
ljmp
test
ljmp
incl
xor
int
xor
iret
ljmp
xchg
loope
loope
call
loope
test
leave
leave
ljmp
aad
loope
in
test
fldl
in
sti
jecxz
mov
xchg
ror
aam
stc
out
into
into
jecxz
ss
cmp
mov
iret
call
std
in
int
fsub
leave
cmp
fcomi
fsubr
aam
sar
hlt
dec
jecxz
cld
jmp
xchg
xchg
cmc
xchg
add
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
mov
add
add
out
lock
xor
sarb
cmp
aam
in
rorb
cli
in
enter
xchg
out
ljmp
fsubrp
out
ljmp
sar
lret
fcmove
mov
int3
int
in
not
clc
loope
rcl
not
lret
in
ret
in
faddl
cmp
ljmp
fdiv
hlt
xor
ljmp
xchg
fsubr
sbb
out
cmp
iret
lock
test
cmc
cld
fdiv
fdivrp
fldl
mov
out
xor
int
div
sar
cmc
cmc
in
rcr
repz
mov
jmp
cli
fucom
leave
out
xchg
leave
out
lds
test
rcl
fcmovbe
testb
testb
loope
int
xchg
cmc
iret
ss
clc
int
fdiv
lret
xchg
loop
test
fsub
hlt
xchg
adc
loope
jmp
ror
lret
fmul
loop
cmp
sbb
in
fucom
shrb
lds
out
in
ret
sbb
fucomip
clc
ljmp
in
sar
jmp
in
loopne
cmp
shl
rcl
call
mov
xchg
orb
fidivl
out
sti
aas
cli
sti
loopne
cld
aas
loop
incb
nop
lret
cld
out
mov
loop
in
in
aad
loopne
fld
loop
cmp
in
stc
xlat
vpaddsw
fisttps
clc
ret
in
leave
in
enter
cmp
ret
loope
ret
ffree
xchg
out
loope
fimuls
xor
rcr
jmp
aaa
lret
fchs
fst
jecxz
imul
mov
and
nop
lock
in
in
ss
ss
shll
lret
cli
ret
fdivr
les
fldz
loopne
hlt
xchg
hlt
xor
sti
into
call
adc
clc
out
fcmovne
sbb
out
leave
mov
aad
xlat
cmp
fdivr
cmp
clc
fdivp
fdivr
fld
test
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
mov
sub
jle
add
lret
in
repnz
jmp
repnz
fcomi
cli
ret
test
xor
lock
lret
repnz
fsubr
int3
aad
cmp
enter
in
jecxz
xlat
leave
cli
out
lds
call
stc
in
fidivs
and
call
int3
xchg
test
aad
shl
mul
enter
hlt
std
in
xchg
ror
jmp
sti
icebp
jmp
sti
fmul
clc
fdivrp
into
out
fildl
decl
xchg
in
mov
sub
out
lret
fdivr
aas
cmp
in
cli
in
rcr
ret
out
sub
fcmovnbe
xchg
xchg
in
aaa
xor
std
cmp
sarl
cli
aaa
repz
in
aad
std
or
rolb
xor
aam
idiv
cld
fnstenv
loop
test
cli
sbb
cld
in
into
addb
cmp
int3
aad
cmp
out
cmp
cmp
shl
inc
testl
nop
ljmp
aam
cmp
loopne
and
div
out
aad
mov
xchg
mov
in
out
fucomp
rol
aad
out
leave
into
out
leave
xchg
out
mov
out
repnz
shr
adc
adc
loope
enter
mov
fdiv
test
stc
cs
ljmp
fsubr
test
filds
lret
lret
aas
xor
stc
lret
ljmp
test
fdivr
mov
xchg
xor
imul
fcmove
fst
cmp
clc
jecxz
in
fdiv
mov
xlat
out
xchg
xchg
jecxz
ret
lret
enter
cmp
aaa
into
out
idiv
stc
test
iret
and
iret
neg
icebp
repnz
neg
fyl2xp1
fucomp
stc
cli
sbb
shl
jecxz
repnz
testb
test
xor
fsub
lret
in
iret
aam
leave
std
sarb
imul
mov
int
lret
xchg
xchg
loopne
cld
aaa
lock
std
shl
ds
std
fstp
cmp
testb
mov
xor
add
jmp
rcl
int
ffree
fstpl
int3
mov
add
add
std
out
in
lea
jmp
lret
not
cmp
lock
call
ret
out
lret
loope
int
out
out
cli
int
neg
int3
into
fildl
clc
cmp
call
clc
ljmp
cmc
fdiv
std
out
cmc
sub
loope
loop
xchg
jmp
in
in
hlt
div
cli
idiv
shl
not
std
aad
loope
out
or
sub
mov
xlat
jmp
rcr
out
xor
fsub
into
fisttpl
ffreep
das
xor
lret
xor
fidivrl
flds
fsubr
addl
xor
rcr
shl
fsub
std
repz
ret
ds
jmp
shr
out
aas
cs
in
ljmp
shr
out
rcr
aam
fcmovb
in
test
int3
lock
repnz
cmp
in
leave
cmp
cmp
out
jmp
int
xchg
mov
xor
clc
clc
lret
in
call
ror
out
loop
ljmp
out
lea
repz
cli
hlt
in
aad
call
rcr
fdivrp
testb
xchg
hlt
in
repnz
out
int
in
in
fucomi
out
xor
cld
loopne
or
mov
in
lock
sub
iret
cmc
in
fadd
aaa
cmpl
idiv
enter
fcoms
fsubrp
xlat
sar
clc
aad
std
cmp
out
cmpb
test
mul
in
in
sti
test
xchg
in
enter
fsubr
rcl
cmp
cmc
out
aam
sti
jmp
test
nop
aam
aam
call
iret
repnz
rol
lock
in
clc
cmpl
and
int
into
test
aaa
in
ror
fucomi
std
fcom
xor
cmc
faddl
repz
xor
lret
cli
out
in
add
repz
call
cmp
cmp
enter
adc
in
mov
jmp
int3
aas
rol
fst
fadd
ljmp
sub
jle
ret
test
ret
out
clc
lret
test
loop
ljmp
fdiv
rcl
not
ds
test
ror
aam
filds
xchg
xchg
shll
rcl
lret
std
repz
ds
std
ljmp
test
sti
add
out
repz
clc
jmp
shl
rcl
stc
cld
fiadds
in
xchg
shr
in
aad
ljmp
rcr
icebp
int
cmp
and
cld
and
mov
loop
lret
fstpt
clc
cmp
fstp
not
repz
jmp
in
jecxz
sub
ljmp
cmp
leave
out
loope
ret
ret
aad
in
fmul
fcmove
int3
mov
icebp
std
call
out
cmp
cmp
lock
aam
xlat
imul
orl
lock
aas
in
fcmovnbe
cld
int3
into
cli
repz
repz
leave
xor
jecxz
nop
int
imul
cmp
out
std
rolb
xchg
call
in
das
xlat
lock
xor
fld
int3
cmp
cmp
jecxz
fnstsw
in
xchg
in
fucomip
mov
in
jmp
rol
rcl
fcmovnbe
fbstp
sub
ds
ror
cli
fsubp
mov
out
xchg
xchg
in
jmp
cmp
enter
leave
cmp
loope
hlt
repz
fdivrp
loopne
mov
jmp
xor
fdiv
out
jmp
ds
xor
cmp
hlt
fdivrs
mov
lea
loope
loope
lock
push
lock
in
fimull
mov
or
lret
in
in
lret
ljmp
cmpb
jecxz
ffreep
test
shl
lret
repz
xor
imulb
xor
f2xm1
neg
xlat
out
rorb
popl
repnz
call
clc
aaa
cld
hlt
fcmovnb
aam
decl
testb
in
shl
fidivrl
stc
sar
iret
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
mov
das
add
add
cmc
fyl2xp1
rcr
loopne
test
mov
out
call
fstl
iret
jmp
fmul
repnz
loop
loopne
ret
loope
enter
out
lock
iret
iret
in
lret
out
repz
repnz
sar
stc
cld
loope
cld
clc
mov
loopne
jmp
int3
mov
cmc
shll
cmc
xlat
shl
loopne
xchg
ret
neg
or
nop
lret
mov
out
xor
shr
lret
cmp
out
cld
aad
repnz
mov
out
stc
int3
out
leave
jmp
cmp
adc
aam
out
mov
mov
jmp
xchg
mov
icebp
lock
sub
shr
cld
cmp
ds
adc
sar
shl
jecxz
jecxz
fcmovne
loope
call
call
jmp
fstp
ss
and
in
in
frstpm(287
shr
mov
shlb
rcl
divb
fidivs
sbb
repz
fucompp
lock
mov
les
ss
cmc
cld
stc
fucomi
aad
out
stc
in
idiv
loope
mov
loope
xchg
xchg
ss
ljmp
lock
cmp
aam
fcmovnu
hlt
loopne
jecxz
int3
test
xor
out
iret
cli
hlt
aaa
fsubr
sar
cli
vpmullw
ret
out
lret
jmp
out
fbstp
divl
lock
and
into
fdivrl
repz
cld
loopne
jecxz
addb
out
sub
fidivrl
sti
xchg
in
hlt
ds
rorb
out
loop
cs
fdivrp
rcl
ds
aas
fldl
sti
loopne
leave
int
or
ret
int3
fmul
in
rcl
sarb
test
in
out
mov
out
out
test
mov
lret
cmp
cmp
cmp
xor
call
enter
call
xor
fcmovnbe
cmp
aas
and
out
or
lret
loope
out
iret
xchg
fmuls
add
add
xlat
xlat
rcl
ror
fld
cs
and
dec
pop
mov
xor
jle
add
in
leave
icebp
repz
ljmp
loop
fadd
jmp
jecxz
iret
jecxz
and
call
fsubr
cld
cld
repnz
jecxz
repz
rcr
stc
loop
ljmp
cli
ret
int3
cmc
ds
fidivrl
cmp
idiv
not
rol
decl
out
xchg
mov
xor
jmp
sar
not
fcomp
ds
cld
jecxz
mul
aas
fimull
fmull
int3
xor
xor
int
rol
stc
rcl
std
fdiv
in
in
mov
shl
cmc
in
lret
sbb
cmc
mov
cmc
cli
cmp
in
sti
xchg
lret
call
int
cmp
ds
out
mul
orl
fucom
int
lret
out
enter
fcmovu
xlat
in
into
aas
xchg
hlt
loop
hlt
call
loop
sar
cmp
cs
iret
fsub
imul
rcr
idivb
fdivp
xchg
sti
sti
out
mov
out
xor
out
into
repz
loope,pt
in
loope
ret
leave
ret
repnz
in
ljmp
clc
aam
shl
dec
fadds
ljmp
mov
iret
nop
repz
xor
jecxz
aad
hlt
stc
fcmovu
sub
fildl
call
lock
in
leave
xor
aaa
cld
xor
into
clc
aas
aam
int
sbb
jecxz
addb
cmc
out
fincstp
out
stc
push
enter
rol
out
aas
mov
cli
fadd
ret
cli
int
loope
out
faddp
loopne
cmc
leave
ss
cld
sti
repz
aas
loope
shr
fincstp
ds
fcoms
lret
aam
out
call
cmp
in
icebp
cmc
clc
enter
fcmovne
orl
or
in
into
cmp
cmc
int
xor
std
lock
loopne
testl
icebp
in
xchg
xchg
clc
ss
lret
lret
cmp
cmp
cmp
cmpl
sti
clc
and
fucomip
loope
or
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
je
xor
jle
add
lds
jecxz
xor
fcmovbe
fucomip
jecxz
out
xlat
iret
mov
jecxz
fmuls
in
cmc
loop
lret
in
lret
cmp
loopne
test
into
repnz
repz
test
ret
div
in
in
cmp
lock
rolb
shl
cmc
loopne
test
ret
loop
xchg
icebp
lret
fidivl
lret
int3
shr
aad
ret
in
neg
rol
fiadds
cli
test
in
mov
icebp
jecxz
cmc
iret
sar
mul
repnz
xor
movb
clc
rol
leave
loope
jmp
icebp
jecxz
in
in
out
clc
aam
icebp
aam
ds
fdiv
out
leave
stc
lret
repnz
loopne
ljmp
iret
ss
lds
fmuls
cld
out
test
lret
xor
idiv
in
cmp
xlat
xor
out
xlat
out
enter
sti
fisttpl
xbegin
out
repz
sub
clc
repz
sti
addb
out
jmp
repnz
aad
loopne
xlat
ret
rcl
lock
aad
loopne
fisttpll
test
stc
xor
int3
aad
cmp
iret
ret
ret
aam
xchg
in
loopne
lret
xchg
loope
lret
sti
out
repz
div
cli
rolb
cmc
xlat
loopne
ror
int
aam
lret
cli
sub
aas
cmp
cmc
xlat
clc
xchg
cmp
incl
mov
rolb
shl
out
cmp
cmp
cmp
inc
cmp
orb
xchg
leave
shl
ret
std
hlt
cld
aaa
idiv
iret
clc
sar
fcom
mov
and
add
into
ljmp
loope
sar
xlat
int3
sbb
icebp
neg
cmp
cmp
not
test
out
in
mov
xor
in
leave
cmp
div
cmc
fst
iret
loopne
aam
xlat
and
mov
imulb
shl
aad
ror
hlt
fadd
shl
cmc
hlt
out
and
inc
clc
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
jmp
xor
jle
les
popl
cmp
call
out
lret
incb
fdivr
movb
icebp
iret
xchg
imulb
clc
iret
jmp
ljmp
cli
xchg
fmul
in
iret
fistl
clc
fxch
jecxz
std
xor
aad
into
iret
cld
jmp
lret
into
jecxz
int
xchg
in
xor
cmp
int
in
cmp
repnz
xchg
enter
lret
xchg
movl
out
xor
aaa
out
aaa
fst
repz
shl
cld
repz
in
mov
fisttpl
icebp
repz
fmul
aad
aas
fistpll
out
loop
repnz
ret
out
xchg
cld
xchg
xor
lret
not
int3
xlat
fcomp
mul
mul
ret
lret
leave
and
leave
out
lock
fcomi
stc
fucomi
xlat
loopne
cmp
icebp
repnz
rol
in
mov
loopne
xchg
loop
test
xor
ss
sar
cmp
loop
jecxz
ret
sbb
loope
xor
ret
loope
jecxz
cmp
fsubr
cmp
incl
hlt
loop
sti
clc
in
out
in
ljmp
aaa
hlt
repz
cmp
shl
mov
in
cmp
test
int3
cmc
xchg
jecxz
out
f2xm1
iret
xor
into
fadds
in
faddp
jmp
in
call
int3
lret
sarb
ror
roll
int3
pop
lret
repnz
shlb
les
out
into
cmp
rolb
roll
lock
in
cmc
loopne
aaa
jmp
repz
int3
loopne
int
loopne
rcr
out
loopne
cld
icebp
nop
xchg
shr
int3
aam
repz
leave
sar
fsincos
aam
into
in
ret
aas
roll
out
xchg
mov
incb
aam
xor
out
cmp
sarb
sbb
shl
adc
loop
mul
in
sti
out
in
cs
out
shl
std
xor
clc
stc
repz
jmp
vshufpd
ror
adc
push
xchg
sbb
jle
add
addb
in
loop
out
loopne
aam
xlat
in
int3
aam
rcl
cmp
lock
fnclex
clc
addl
loope
in
adc
out
fdiv
xor
hlt
stc
cli
in
call
cld
enter
dec
lock
shl
xor
hlt
jmp
lret
repnz
imul
loope
int3
mov
lock
iret
out
enter
in
in
div
in
hlt
int
xor
aad
fcmove
in
test
fld
sar
in
cmp
loopne
lock
loopne
out
rcl
aad
nop
sub
in
mov
mov
xor
stc
xor
clc
out
loope
sarb
stc
ret
jmp
out
call
not
cmc
in
cmp
fsubr
lock
fdivr
shl
sbb
int3
mov
nop
cmc
std
hlt
shl
jecxz
xor
idiv
shl
xor
sti
add
mov
call
lea
shll
std
cmp
ljmp
cmp
out
mov
leave
aam
test
cmp
fidivl
int3
adc
test
orb
xchg
repnz
icebp
ljmp
repnz
out
ret
rcl
mul
call
jecxz
xor
rorl
cmc
repnz
faddl
cmc
cld
div
fincstp
in
loopne
lock
in
test
xchg
testb
int
not
cld
xlat
xlat
sti
ret
cmp
cmp
in
call
cld
decb
clc
imul
in
lock
rolb
ljmp
lret
mov
xor
call
out
fdivrs
aaa
idiv
aam
mov
orl
in
mov
ss
into
shlb
shl
cli
test
stc
fimull
ljmp
int3
xchg
shl
hlt
ljmp
cmp
cli
int3
clc
aad
out
in
int3
xchg
icebp
in
out
mov
cmc
lret
out
cmp
xor
jmp
int3
aas
ret
sbb
roll
and
cmp
jle
add
sar
clc
int
std
shr
ret
cld
cli
imul
testl
cmp
cld
shr
out
jmp
shl
test
std
loop
jmp
xor
aaa
leave
in
in
ljmp
lds
fimull
test
mov
test
shr
jmp
hlt
shr
cli
sar
cmpb
ljmp
mov
in
jmp
aaa
cmp
int3
xor
lret
cld
repnz
cmc
fcmovu
jecxz
fcmovne
mov
loop
mov
inc
cmc
lret
in
aad
sti
xlat
ljmp
loope
mov
test
fsub
mov
into
std
jmp
lock
xor
jmp
lret
out
int
std
jmp
std
cld
lret
cld
out
xchg
xchg
in
jmp
int3
fdiv
out
cmc
cld
in
cmc
stc
shl
xchg
loopne
call
ljmp
in
cmp
fcom
cmp
sti
testl
in
int3
rcr
into
rolb
repnz
icebp
fucomp
repz
icebp
repz
out
sbb
mov
loopne
fstp
mov
shll
lret
ds
int3
aam
out
xchg
enter
lret
faddl
in
fdiv
out
sub
fprem1
cmp
cmp
ljmp
std
testb
out
mov
xor
out
fldln2
int3
out
cmp
std
in
sti
repnz
test
in
jmp
lock
fcmovbe
icebp
cmp
lock
lret
jmp
roll
std
and
mov
leave
enter
in
aaa
call
fcmovu
neg
cmp
lret
leave
or
loop
out
loope
out
cmp
clc
in
std
cmp
fsubrp
test
loope
std
xchg
sub
fmulp
into
in
xor
shr
ds
aas
loopne
repnz
fdivrl
mov
into
fmul
int
aam
xlat
aaa
jmp
cld
int3
cmp
cmp
loop
out
ljmp
fiadds
in
rol
add
cmp
jmp
rol
rcl
rol
aad
sahf
xor
out
cmp
mov
add
cmc
out
cmp
jmp
frstpm(287
fdivrp
shl
sar
incl
fsubr
call
lock
repz
loopne
sti
test
sarb
ret
sbb
std
mov
jmp
int3
test
jmp
call
lock
xlat
stc
aam
fdivp
ret
mov
int
test
lds
xor
int
sar
fdivrl
xchg
loope
jmp
adc
mov
out
iret
jecxz
cmc
out
lret
aaa
xor
test
flds
mov
mov
xor
fcmovu
call
aam
cmp
stc
in
out
xlat
xlat
nop
test
xchg
rclb
int
cli
cmc
int
ljmp
hlt
fcmovb
cmp
jmp
out
lret
call
cmp
leave
enter
int
out
into
hlt
out
aam
mov
loopne
cld
in
ljmp
stc
clc
lret
in
xlat
cmp
aad
vpsllq
cmc
fadd
cli
loopne
jecxz
lds
shll
cmp
enter
in
repz
aad
loop
out
out
icebp
xchg
xchg
mov
sub
repz
in
aaa
ljmp
std
sbb
shl
loopne
ret
mov
mov
ljmp
ror
shl
fldl
fucomip
ret
leave
addl
loop
out
repnz
fidivrl
rcl
xlat
xor
hlt
sbb
neg
aas
rorl
jecxz
fcmovnbe
aaa
std
jmp
jmp
fsub
in
fst
lds
xchg
fists
out
neg
out
xlat
fsubp
loopne
fprem
shl
jecxz
jmp
lret
out
loop
into
enter
aam
into
cmp
rcr
out
cmp
aaa
aad
cmp
stc
addl
call
jecxz
jecxz
in
repz
jmp
loopne
loope
xor
fidivl
sti
xor
int3
cmp
loop
sbb
roll
jecxz
mov
xchg
test
add
push
add
add
ret
mov
mov
mov
negl
jle
add
into
xchg
lret
xlat
in
cmp
aad
into
repz
loopne
out
xchg
leave
mov
loope
mul
in
xor
xor
in
push
test
ret
xlat
in
cli
std
loop
ljmp
ret
cmp
cmp
aad
iret
ret
cmc
addl
in
out
int
iret
mov
lock
divb
fnsave
fdivrs
lret
ret
rcr
xlat
rcr
clc
jmp
loop
xchg
out
xor
int
rol
cmp
shr
cmp
test
jecxz
enter
loopne
out
xchg
fdivp
xor
lret
fstp
fstpt
fdivrl
loope,pt
rcr
aad
mov
lea
into
rcl
fcmove
out
cmp
cmc
aaa
rolb
out
leave
ljmp
std
std
loopne
out
shr
lret
out
xlat
aad
into
shr
cli
repnz
test
std
call
mov
xchg
in
jecxz
loop
into
xor
cli
fcomi
cmp
aam
std
out
cld
xlat
out
in
lret
lret
loop
repz
ret
fxch
in
rcl
rcl
cmp
cmp
rolb
mov
std
xchg
jecxz
fmul
cmp
stc
call
loop
icebp
fstpt
in
fdivrp
xchg
addb
shr
enter
cmp
int
std
shl
sbb
jmp
incb
aam
ror
ror
leave
out
xlat
fldl
fcmovb
jecxz
fsub
in
xlat
incl
loop
cld
jmp
shl
fucomi
sar
add
mov
mov
enter
cli
xchg
rorl
xor
cmp
xlat
clc
repz
ds
test
orl
jmp
in
and
out
xor
xlat
sar
xor
cmp
into
ds
fsub
xor
idiv
loop
jecxz
xchg
in
shr
leave
int3
idivl
repnz
jmp
cmp
idivb
sti
cli
loope
hlt
fcmovb
xlat
loop
cld
sar
repnz
ret
enter
icebp
rcr
div
aas
hlt
clc
cmp
out
mov
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
adc
cmp
cmp
jle
iret
lret
xchg
icebp
icebp
lock
lret
aam
clc
out
ds
in
ror
ret
fiaddl
int3
sub
into
sti
sar
out
fdivr
rcl
repz
rol
xlat
aad
test
les
jecxz
shr
cmp
sarb
into
lret
cmp
cmc
leave
cmc
neg
xchg
stc
repnz
hlt
iret
jecxz
jecxz
sub
cmp
cmp
cli
ret
xlat
sbb
in
call
loope
xchg
cld
xchg
enter
jecxz
fcmovnbe
imul
in
std
lret
fdivr
idiv
in
fsubr
loop
out
into
mov
lret
fucom
fst
repz
repz
xor
lret
hlt
in
sar
xlat
fmul
aad
jecxz
mov
fisttps
les
xor
shr
aas
std
fidivrl
fiadds
ljmp
leave
or
int3
sti
shl
fidivl
jmp
rol
aas
call
sti
nop
leave
call
rcl
out
call
adc
cmp
sti
loope
mov
mov
cs
enter
in
aas
clc
icebp
int
cmp
loopne
cmc
jecxz
loope
jecxz
into
out
test
out
out
out
jmp
ds
fsub
fstpt
or
int
cld
fscale
test
ror
lret
hlt
call
jmp
fsin
sub
in
fdivrl
int
cld
sti
out
in
mov
cli
out
leave
cmp
cmp
fdivr
out
test
addb
fmuls
xchg
cmp
in
xlat
repnz
ffreep
hlt
fnstcw
ret
call
loop
iret
test
das
in
enter
fcom
xlat
cli
shl
fidivrl
lds
fdivrp
sti
iret
jmp
aam
out
lret
cmp
std
leave
iret
jmp
fdiv
fcompp
hlt
cmp
fildl
incl
xor
int3
hlt
in
int
shr
fiaddl
std
std
stc
or
in
icebp
cmc
out
ret
loop
in
cmp
addl
dec
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
inc
inc
and
ret
add
add
cmc
sbb
roll
clc
cmp
cmp
loope
repnz
fadd
lret
loopne
jmp
in
mov
test
call
xor
into
cld
icebp
fdiv
adc
clc
ret
ret
shl
leave
out
in
call
in
fucomip
aam
icebp
into
ds
mov
lret
movb
rcr
idivl
cli
jmp
cmp
fprem1
out
ret
ffree
jmp
xchg
repnz
jecxz,pn
aaa
in
cli
out
div
clc
ret
ret
icebp
testl
sti
int
lret
test
cmc
xlat
in
cld
xor
clc
stc
and
out
fstp
cli
add
mov
mov
imul
xor
jmp
cli
xor
stc
cmp
test
rcl
lret
leave
jecxz
out
fucom
mov
mov
jecxz
rcl
out
ss
cli
loop
ret
clc
ret
hlt
idiv
in
ds
xchg
loope
sar
call
in
call
fucom
xlat
aas
into
aad
xchg
cmp
out
xchg
repnz
out
aad
shr
iret
xlat
cmp
cld
cmp
ret
test
and
aad
in
ret
in
in
in
test
in
int3
jmp
xor
in
testb
cmp
test
fstl
cmp
ror
repnz
std
ffreep
loope
leave
dec
xchg
clc
shl
into
out
sarl
sbb
ds
adc
cmc
fdivr
fst
cld
in
mov
into
icebp
mov
nop
repnz
sti
ret
idivl
aas
ds
flds
loope
testb
aad
shl
out
iret
div
idiv
int
fidivrs
idiv
jmp
ret
shl
leave
fisttpl
lock
icebp
shl
faddl
shl
mov
aas
loope
jecxz
mov
cli
loopne
xchg
int3
lock
mul
cmp
out
out
out
repz
div
into
out
ret
mov
int
nop
repz
imul
loope
int3
jmp
in
clc
xlat
sarl
pop
xchg
jmp
aas
int3
mov
std
int
pushf
movlps
mov
add
add
icebp
rcr
cmp
and
mov
xchg
out
call
div
enter
sti
cld
lret
cld
add
test
ror
in
out
mov
fdivs
cli
movl
cld
rcr
lret
cmc
jmp
out
jmp
loop
fcomp
call
aas
ret
iret
std
loop
in
and
int
xchg
int3
lea
xor
cli
cmp
into
loopne
out
xchg
mul
xor
loope
fmulp
out
hlt
std
shl
mul
in
stc
cmp
call
fcomi
aas
std
sar
xor
mov
loopne
das
loop
shll
lret
cmp
lock
into
cmp
out
fcmovb
stc
addb
lock
sub
lret
cmp
int3
cmp
jmp
int
mov
in
cmc
aad
xor
fnstsw
incl
test
leave
loope
in
cld
out
sar
jecxz
shl
not
ss
dec
xor
sub
shl
call
flds
in
shrb
in
jecxz
jmp
fnstsw
inc
jecxz
in
mov
xchg
jmp
jmp
cmp
int
fcomip
cmc
neg
iret
iret
int
cld
in
xchg
lret
xchg
loopne
int3
ljmp
sti
lock
icebp
cmc
out
incb
mov
int3
popl
aam
xor
fdivs
mov
enter
mov
lret
cmc
call
jmp
imul
lret
fcomi
in
sti
xchg
clc
clc
in
mov
incl
sarl
std
rcr
cmp
jecxz
aam
loope
in
stc
out
addb
out
aam
shr
jmp
in
jmp
ret
aad
sbb
orl
test
jmp
int3
clc
rol
fnsave
ror
xlat
fld
mul
mov
mov
nop
fistl
cmp
xor
sub
xchg
dec
jmp
lret
int3
fcmovnu
mov
cltd
fldt
inc
movl
jle
cmp
leave
xlat
cmp
aas
fcom
testl
hlt
xchg
or
in
not
xor
icebp
dec
cli
aad
jmp
ret
out
in
loopne
fucomi
lret
sub
clc
jecxz
ss
in
xor
fdivp
in
cmp
out
fcompp
loope
int
call
xor
xor
idiv
leave
imul
sarl
rcr
rolb
stc
idiv
test
mov
loop
call
loopne
icebp
fst
fstp
jecxz
stc
test
mov
out
mov
adcb
aaa
in
xlat
aad
aaa
repnz
test
shl
fimuls
mov
in
icebp
lea
aaa
cmc
cmp
stc
fstpt
aad
div
idiv
cmc
out
fdivr
fimull
rclb
xor
cmp
bnd
shr
or
hlt
rcl
repz
lret
decl
xor
xlat
fcmovnbe
in
aad
iret
xlat
clc
call
ljmp
call
aad
icebp
std
in
fstp
imul
int
out
add
aad
mov
fdiv
xchg
xchg
xor
fnsetpm(287
leave
icebp
cmp
int
idiv
ss
stc
sti
leave
test
mov
ljmp
out
lock
out
call
jmp
rol
loop
mov
neg
mov
rcr
in
fiadds
jecxz
in
xor
in
fsin
idiv
cmc
int
div
call
iret
fsubrp
sub
int
test
cld
clc
fadd
idivl
loop
icebp
loope
cld
cli
or
out
xchg
jecxz
aad
xor
aad
ljmp
repnz
rcl
fxch
mov
aad
in
into
xlat
imul
cmp
std
iret
in
out
xchg
ret
mov
hlt
test
repnz
ret
in
shll
ljmp
out
aad
or
out
icebp
ret
jmp
neg
jmp
ljmp
int
out
enter
loopne
lret
fisttpll
inc
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
jne
jmp
jle
add
add
in
xor
repz
cmp
cmp
ds
out
repnz
or
jmp
fstl
fpatan
cs
faddp
ret
icebp
fucompp
inc
into
xchg
call
sarb
lret
cmp
addl
jmp
clc
neg
loope
xchg
sub
mov
aaa
out
hlt
in
fdivp
int
jecxz
fcmovnbe
testl
out
xchg
lock
icebp
cmp
repnz
xlat
aas
loope
shl
sti
fcmovne
fdivr
cmp
xchg
test
loop
out
jmp
ret
cmp
out
cli
lret
icebp
iret
rcr
loopne
enter
jmp
int3
in
mov
fdivrs
int3
mul
lock
ds
cmp
icebp
ds
loop
sti
jecxz
out
leave
mov
lret
leave
xchg
xchg
int
xor
xor
xor
repz
cmp
shl
loope
sti
loope
mov
sti
out
adcb
icebp
lret
cld
fst
clc
idivb
adc
sub
in
sbb
in
jmp
xor
repz
cmp
aaa
cmp
ss
fildl
in
ffree
dec
enter
mov
in
xor
ljmp
divb
ret
fcomi
lea
adc
out
enter
iret
aam
in
hlt
stc
test
out
fstp
idiv
ret
test
loope
fucomip
das
jmp
aam
fdivr
loop
shl
fsubp
in
int3
in
int
lock
test
imul
fidivl
cmp
jmp
out
sbb
hlt
sti
mov
xchg
xchg
out
cs
ret
aad
cmp
int
fdiv
out
dec
leave
lds
hlt
xchg
xchg
aam
lock
int3
cld
rcl
cmc
loope
std
cld
cli
sbb
fisttps
jmp
xchg
ret
out
rol
in
out
repz
sarl
rcl
rol
jecxz
xchg
jmp
loop
lret
loopne
loope
xchg
ss
shl
test
cmp
sarl
ret
fisttpl
imul
mov
jmp
aam
int
int
aam
xchg
inc
lret
rcrb
cmp
add
add
orb
int3
ret
test
out
cmp
rolb
out
dec
mov
xchg
icebp
xchg
aad
ror
icebp
iret
not
ds
cmp
xor
out
std
cmp
xchg
mov
sti
fneni(8087
xchg
sar
cmc
hlt
iret
xor
ss
aam
in
neg
sti
int
sar
xlat
int
fdivr
out
lock
jmp
enter
jmp
loopne
xchg
add
in
mov
int
mov
clc
aam
aam
cmp
flds
call
in
fsubr
xchg
icebp
mov
xor
cli
jmp
aad
fxch
hlt
rcl
sarb
aad
test
icebp
in
in
repnz
xlat
xlat
xor
call
bnd
stc
aaa
stc
std
ds
lret
jmp
sub
out
mov
aam
cli
int3
into
out
cld
call
sti
fsubp
xchg
jmp
ret
filds
div
xor
aam
cmp
sar
cmp
cmp
not
add
cli
lret
xchg
xchg
lock
cmp
fdivr
call
stc
clc
cmc
fdiv
fcmovb
mov
out
ljmp
xorl
int3
cli
ret
cmp
test
hlt
std
stc
aas
fimull
out
rol
cmc
jmp
hlt
shlb
in
fcmovb
incb
lock
icebp
jecxz
call
rcr
rol
and
ljmp
test
in
iret
icebp
shlb
imul
jmp
add
loopne
repz
cli
imul
fsub
cmc
in
shl
shr
rcl
cmp
int
xchg
neg
fcmovnbe
cli
into
clc
rcr
xchg
jmp
xor
stc
repz
jmp
loop
repnz
leave
in
rcll
lret
lock
ds
shl
cmp
iret
ds
in
int
rol
in
sti
loope
xchg
xor
lret
hlt
rcr
icebp
jmp
cmp
loopne
in
rorl
or
push
add
add
ror
rcr
int
stos
outsl
int3
nop
loope
imul
cmp
jmp
fisttpll
call
cli
cld
icebp
sar
cld
into
in
cmp
cmp
sti
cli
call
shll
xor
out
out
in
int
rolb
testl
in
repnz
xchg
in
into
jmp
lock
hlt
ret
add
or
fucomi
loope
mov
jmp
shr
sti
bnd
in
cmpl
adc
xlat
add
cld
call
das
jecxz
loopne
xor
xor
out
out
std
repz
jmp
in
sub
cli
loope
adcl
xor
cmp
vpsrlq
loop
out
lret
in
enter
jmp
lret
in
call
in
test
fsubp
ret
clc
jecxz
out
nop
out
xchg
incb
lock
shl
not
lock
cmp
in
lds
mov
iret
jecxz
rcl
cmp
aaa
rcl
stc
loope
in
sarb
loop,pt
out
cli
xlat
stc
fprem
mov
rol
repz
fdivl
into
lret
repnz
mul
iret
test
shl
stc
stc
hlt
in
mov
mov
jmp
int
jmp
int3
idiv
aad
cmp
sti
leave
into
lret
loopne
dec
aad
in
icebp
hlt
enter
div
addb
orl
mov
jecxz
in
sarl
aad
cmp
aas
in
loopne
vshufpd
test
decl
int3
xchg
xchg
loop
ret
xlat
repz
xor
int3
xlat
xor
cld
ljmp
in
sbb
xor
stc
into
ds
aas
int3
repz
sti
ret
call
out
call
test
xor
fdivp
sti
cmp
in
test
lret
shl
xchg
mov
jecxz
in
in
sti
shl
out
clc
xor
roll
filds
into
int3
fdivp
hlt
int
out
hlt
aaa
cmp
out
in
out
cli
add
add
add
xlat
fmul
fmul
rcr
test
leave
jne
lods
rolb
jle
add
repnz
cmpb
addb
cld
in
shr
enter
jecxz
xor
loop
rcl
fcmovnb
fucom
mov
jmp
leave
int3
xor
in
lock
incb
sar
fcmovnb
in
fdivp
cli
loopne
mov
xor
jmp
int3
cmp
out
cmp
in
cli
ljmp
add
cmc
out
sar
not
fld
test
fdivrp
mov
clc
out
mov
call
out
out
filds
ret
repnz
loop
int3
faddp
jecxz
jmp
repnz
out
ljmp
lret
aaa
aam
into
clc
test
enter
int3
loopne
enter
cmc
shrl
in
out
fmulp
neg
out
ds
in
aad
and
call
into
xchg
hlt
loop
in
in
std
in
sarb
leave
xlat
loope,pt
into
cmp
idiv
fstp
ljmp
in
loope
sti
xlat
sti
cmp
clc
out
ret
fcmovnbe
loopne
out
xchg
test
orb
jmp
in
jmp
enter
shl
out
in
testl
xchg
mov
loop
in
int3
jmp
in
fcomp
in
cmp
out
cmp
lret
orl
aad
fcmovnbe
ss
enter
cmp
fiaddl
in
fcomip
orb
clc
out
icebp
sarb
jmp
int
xchg
ds
xlat
jmp
and
xchg
std
shl
clc
in
call
loop
loopne
cmc
sbb
repz
ffreep
std
lds
ror
xor
in
ljmp
cmp
ljmp
in
xchg
add
cmp
fcmovnbe
xlat
out
aam
sbb
ret
and
xchg
idiv
std
test
mov
ljmp
cli
cli
in
loopne
fcomip
clc
jmp
out
out
bnd
aam
clc
xor
test
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
fldcw
dec
data16
jle
add
clc
cmp
fdivr
cld
sar
mov
stc
test
repz
jmp
mov
in
jmp
out
int3
ljmp
test
or
lret
lea
cmc
shl
out
cmc
aad
xor
loop
test
mul
cld
fsubrp
ljmp
shl
ljmp
lret
adc
ds
aas
not
les
rclb
in
repnz
rcl
repz
out
lock
ret
cli
ljmp
out
or
out
lret
stc
hlt
fxtract
xlat
lret
and
add
loope
enter
fdivrp
loopne
shl
repz
lret
clc
fucom
pushl
fcmovne
cmp
roll
ljmp
cmc
loopne
out
leave
in
out
sar
xlat
loop
loop
add
out
cli
lret
int3
repnz
jecxz
xor
xlat
loop
int
stc
cmp
in
cli
test
lret
loope
rcll
cmc
xor
cmp
sti
imul
cli
in
sar
out
test
loopne
les
loope
call
lret
rcl
int3
cmp
cmp
rcl
rcl
aam
xlat
in
loop
fcmovu
std
ljmp
cmp
cmp
ljmp
faddp
sti
loope
stc
in
fdivr
fdivr
ljmp
xor
jmp
shl
test
xchg
fcomp
dec
mov
out
das
jmp
cmc
cmp
loopne
sar
fst
ret
cmc
mov
ret
fadds
lea
imul
std
xlat
ljmp
loop
rol
xchg
mov
xchg
jmp
mov
xchg
fucomp
lock
int3
out
in
aaa
fchs
cmpl
sti
in
loop
call
mov
repnz
test
test
sub
xor
repz
aad
aas
stc
int3
loopne
in
out
in
rorl
aam
fscale
jmp
out
out
repz
in
out
xlat
int
xchg
icebp
leave
jmp
in
stc
mov
mov
mov
jmp
lret
ror
fstp
ffree
pop
fiadds
push
and
add
add
in
iret
int
xor
jmp
neg
int
in
xlat
cmc
in
loopne
into
loop
aam
test
xor
cmp
fidivrl
fld
aad
rcr
ds
in
aad
div
in
loop
fcomip
cmc
adcb
int
fstpt
jmp
cmp
loop
les
add
mov
xor
in
rcl
repz
fcmovnbe
cmp
fdiv
sti
mov
out
cli
jmp
xlat
aad
aam
test
sbb
xchg
fdivp
xchg
enter
cmp
icebp
out
int
cmp
cmp
rcl
xchg
ret
ret
out
clc
nop
loop
in
divl
call
leave
fdivrp
cmp
rolb
cld
stc
nop
fmull
cli
out
not
ljmp
aaa
add
out
aam
std
lret
lret
lock
lret
aam
loope
in
cmc
repz
cmc
jmp
cld
test
rol
cmc
ret
out
mov
add
loope
test
xor
xor
fidivrs
cli
shl
hlt
fucomp
flds
ljmp
fisttpll
fcmovnu
cmp
fsub
lret
cmp
int
cmc
cld
out
ret
hlt
loop
push
leave
in
cld
ljmp
rcl
xor
jmp
shl
loope
rcr
stc
rcl
faddp
fcom
int
mov
out
jmp
test
ss
sar
cmp
fdivr
repz
sub
testl
iret
lock
int
lret
lock
cmc
loop
loopne
add
cmc
and
in
loop
in
jmp
xchg
xchg
sub
lock
enter
lret
rol
loop
shl
aam
xlat
fcmovnu
mov
mov
sar
mov
xor
ljmp
cmp
fcmovnbe
call
fucomi
sar
std
xchg
repnz
sub
in
aad
lret
lret
cli
ds
int3
in
lock
xlat
test
sub
in
iret
nop
bnd
imul
xor
test
shl
sub
ret
jmp
loope
mov
jmp
enter
int3
aam
pop
adc
into
shrb
rcr
xlat
add
add
mov
orb
rcl
jmp
clc
cmp
repnz
fcomip
repz
fmull
cmc
in
int
stc
int3
clc
cmp
loopne
shll
ret
jmp
loope
sti
xchg
xchg
icebp
jmp
hlt
cmc
cmc
cld
lock
shr
ss
fsubrp
test
add
xchg
icebp
std
out
icebp
call
int3
jmp
stc
cmp
fcmovu
lock
fsubrp
cli
aad
fsubp
in
lock
out
shlb
iret
iret
fcomp
cmp
cli
aad
fisttpl
stc
jecxz
sti
xchg
roll
in
in
xor
hlt
shl
mov
lret
mov
xor
rcll
out
lret
rcr
xlat
fsubp
ret
ret
rcl
fdivrp
in
enter
mov
lock
cmp
lock
fldlg2
sar
ret
test
mov
xchg
jmp
enter
cmp
leave
rcr
cmp
into
rolb
lret
enter
lret
xchg
rcr
cmp
call
repnz
repz
and
cmp
out
in
mov
mov
sub
divb
loopne
ljmp
fcmovu
lret
aas
mov
in
in
out
aam
loope
repz
cli
aad
iret
jmp
fcomip
cmc
inc
xchg
xchg
adcl
clc
out
enter
jmp
test
enter
movl
xor
lret
in
ss
lret
std
rcr
int
out
aad
faddp
jecxz
test
fisttps
xlat
fmul
rcl
cmpb
hlt
loope
dec
mul
mov
mov
jmp
call
cmc
roll
cld
rcl
xchg
fcoml
loopne
mov
lret
into
shl
cmc
out
stc
out
cmpb
out
loop
call
filds
ss
rcl
int3
cmp
cmp
std
aad
loope
clc
aad
lret
lret
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
out
jmp
repnz
sub
cmc
fdivr
ljmp
sarb
decb
call
mov
in
enter
fcmovnb
fidivrl
loope
loop
in
xchg
call
sub
xor
ljmp
stc
sar
repnz
hlt
ror
ljmp
mov
std
out
int
not
fxch
enter
cmp
cmp
loop
cld
leave
mov
mov
out
sub
ljmp
cmp
cmp
fnsetpm(287
mov
mul
lea
hlt
ss
fdiv
out
fcom
aas
sar
cmc
loopne
fcmovu
mov
jmp
loop
xchg
xchg
mov
jmp
fnsave
std
cmp
cli
shl
rcl
fcomi
mov
std
lret
not
fsub
stc
into
lret
hlt
xor
rcr
icebp
cld
mov
ds
leave
jmp
lret
hlt
aaa
aam
repnz
fstp
rcr
xor
cmp
not
test
mov
jmp
leave
mov
repnz
call
ret
sti
fneni(8087
fcom
hlt
shl
call
nop
orb
in
call
fldl
std
aas
clc
or
stc
call
icebp
into
sub
clc
shlb
in
cmp
into
aaa
fsubrp
sti
out
out
fld
ljmp
adc
divb
std
into
in
call
sar
out
flds
test
lea
clc
jmp
lock
cmp
leave
sbb
std
cld
xchg
in
repnz
shr
xor
repnz
cmp
cmc
lock
out
ret
cli
fsubr
lret
jmp
cmp
xchg
lock
cli
cmp
xor
lret
aas
in
stc
cmp
stc
test
cmp
xchg
lret
aad
shr
hlt
cli
ljmp
cmp
cld
ret
jmp
shl
rcl
iret
out
ror
sar
jmp
shl
xchg
stc
mov
add
jmp
aas
push
mov
adc
shlb
jle
add
std
fld
out
lret
cli
out
in
rclb
xor
shl
aad
in
fistpll
lock
ljmp
lock
out
and
loope
fcmovb
lret
int3
aas
fyl2x
fstpt
test
test
in
mov
lock
lds
out
shl
cmp
in
aas
rcr
lds
mov
int
loopne
xor
xor
sti
fdivs
fidivrl
aad
neg
cld
cli
clc
out
fdiv
out
vcmpss
iret
ljmp
lret
cmp
jmp
fmul
test
ljmp
icebp
sar
in
ror
ss
cmp
repnz
iret
incl
fld
test
fsubr
xrelease
clc
xor
sarl
aad
int3
jmp
cli
loopne
rolb
call
fadd
stc
ret
cmp
lds
cmp
int
shl
xchg
sti
clc
ret
in
fucomi
cli
jmp
xlat
cmc
int
xlat
in
cmp
cmp
aam
fdiv
out
sti
xchg
xlat
xchg
fcompp
sti
sti
flds
in
int3
div
div
fucomp
std
fdivp
rol
fcmovu
jmp
xchg
into
loopne
loop
aam
fld1
cmp
int
sti
xor
cmp
mov
fcmovnb
in
fstl
mov
cmc
xor
in
fcmovnb
out
cmc
repnz
mov
call
icebp
xchg
xor
sub
call
ror
adc
out
xlat
jmp
loopne
mov
mov
fdivr
ss
xlat
aas
cmp
out
orl
shr
into
aad
rcl
repnz
lret
aam
in
out
xlat
clc
loope
out
clc
faddl
sub
in
in
out
clc
repz
hlt
aam
in
out
in
clc
mov
xchg
repnz
loope
cmp
fdiv
roll
cmp
lret
mov
mov
xchg
decb
jmp
into
out
div
mov
jmp
enter
lret
jno
sbb
les
dec
or
add
add
repnz
fdivrs
jecxz
fadds
fdivr
int3
xchg
ljmp
fcmovnbe
xor
ror
in
cmp
test
call
call
xor
in
repnz
shl
and
fld
sti
loope
enter
cli
sti
out
lret
icebp
xchg
xchg
cmp
fxch
testl
out
xlat
mov
lock
lret
nop
cmc
lret
fmulp
leave
xor
icebp
sti
cmp
adc
idiv
ds
into
mov
in
out
mov
iret
std
mov
das
jmp
fstp
sti
icebp
lret
addb
faddp
jecxz
ljmp
out
ljmp
hlt
loopne
icebp
jmp
addb
aad
stc
test
fsts
out
cmc
fmul
ss
int3
adc
incb
ret
jmp
xchg
incb
repnz
sti
out
cld
fcmovnu
cmpl
cmp
shl
inc
out
fcmovnb
jmp
out
mov
into
mov
xor
cld
stc
leave
cli
into
cmp
cld
repnz
fucomp
mov
nop
jecxz
xchg
xchg
xchg
loop
rol
fdivrl
ss
aam
cld
sar
fyl2x
cmp
ljmp
out
ror
xchg
in
clc
xor
aam
cmp
cmc
repz
std
stc
ljmp
xor
repz
in
out
aad
cmp
dec
into
xor
sbb
rol
xchg
std
cli
loope
sar
icebp
nop
hlt
out
test
in
repz
stc
aaa
leave
fcmovnu
aas
idiv
clc
fadd
test
fdivr
sti
loop
mov
clc
out
aad
fmulp
hlt
in
sbb
ffreep
xlat
sti
cmc
loopne
leave
mov
mov
and
in
fnstenv
idivb
xor
jmp
fildl
cld
xchg
out
out
into
jmp
jecxz
test
out
ret
std
fnstsw
adc
ret
loop
jmp
fisttps
repnz
xor
lret
out
hlt
cmp
rcr
out
iret
call
fmul
out
sub
mov
ror
out
loope
xor
jmp
int
rol
fcmovu
fstps
outsl
inc
rol
mov
loopne
jle
add
in
jmp
sar
adc
cld
xchg
repz
mov
test
fyl2x
in
lret
rcl
ds
in
fst
aad
test
and
fucomp
lea
in
lret
hlt
cmp
icebp
out
lret
sarl
int
cmp
cld
aad
jecxz
clc
out
call
in
incb
lock
cmp
rcr
jmp
aam
cld
call
in
popl
hlt
das
xor
ret
fsub
shr
sti
in
clc
xlat
sti
shl
in
out
out
mov
cli
lea
rcl
lds
std
out
adc
repz
int
test
rcr
cld
mov
sar
mov
lret
jecxz
xor
sti
bnd
ret
sbb
mov
xor
in
xchg
jecxz
lret
iret
out
cli
leave
loopne
ds
and
in
test
fildl
out
and
into
aad
imulb
ss
aaa
cmp
cmp
sbb
mul
sbb
sbb
std
mov
in
xor
hlt
stc
aas
in
sti
hlt
lock
cmp
ffreep
loop
out
lock
loop
in
into
in
int
iret
cmc
out
leave
sti
aaa
jecxz
in
std
hlt
std
out
xchg
in
vpminub
mov
rorl
in
cli
int3
fcmovnu
in
adc
shl
enter
jecxz
sti
sti
jmp
iret
into
ret
aad
leave
ror
cmp
in
cmpl
sti
xchg
repnz
loop
fisttps
out
cmc
jmp
std
xlat
loopne
fdivr
icebp
mov
enter
mov
test
lea
int3
cmp
xor
loopne
lret
cld
xlat
lret
jmp
xchg
fmull
test
clc
jmp
imul
sbb
cli
addb
fisttps
aaa
hlt
iret
ss
out
rcl
loop
flds
cli
mov
out
out
jmp
xor
jmp
jmp
repz
aad
idiv
stc
std
std
mul
xchg
fsubr
fildl
xchg
jb
add
fmull
call
rorl
add
call
add
ret
rcl
fcmovbe
lret
shll
in
push
xorl
jle
mov
in
fmul
xor
aaa
rcl
dec
fucom
std
jmp
loopne
icebp
out
std
call
xor
cmp
neg
out
shl
xchg
lret
in
hlt
out
iret
out
xor
repnz
leave
hlt
rcl
jecxz
not
testb
loop
loop
decb
xor
cli
stc
cld
hlt
aam
loop
ret
xlat
repz
ret
mov
into
lea
call
sti
shl
out
ret
in
sub
in
call
test
ret
repz
icebp
out
shr
addb
test
idiv
aad
in
stc
orl
ljmp
loope
cmc
sar
shl
shl
jmp
leave
xchg
leave
into
jecxz
adc
loope
in
out
icebp
cld
enter
ss
cld
cld
enter
xchg
jmp
iret
nop
rclb
leave
leave
cmp
fdivr
cmp
clc
rolb
mov
enter
jecxz
leave
xlat
in
cmp
sti
stc
loopne
into
jmp
loop
cmc
in
fisttpl
mov
xchg
repnz
ret
sarb
out
jmp
aam
loop
roll
cld
mov
into
int3
xchg
cmc
ljmp
out
cmp
incb
fadds
stc
in
cld
rorl
lret
out
lret
repnz
in
int3
in
out
cmp
sar
test
loope
ret
int3
test
mov
lret
lret
aam
aad
cmp
repz
into
lock
jecxz
jecxz
in
ret
and
fcmovne
out
xchg
int3
enter
out
cmp
leave
clc
into
repz
or
shr
fcomip
jmp
jmp
enter
stc
cmp
cmp
xchg
test
xchg
jmp
fucomp
loope
rcr
lret
xlat
cli
cmp
cmp
out
mov
and
addl
sub
ljmp
ror
fdivr
loopne
std
out
xchg
push
add
add
mov
ret
fstp
fcoml
mov
add
add
mov
out
faddl
in
xor
cld
cmp
jmp
in
fcom
ret
rcr
test
test
jmp
into
test
fsubp
test
int
shr
icebp
das
cmp
out
shl
rolb
mov
ljmp
xor
fcmovnbe
cmp
xor
cmp
sar
fucomi
xabort
mov
jecxz
repnz
xor
call
lock
test
test
in
xchg
mov
int3
int
xor
shl
fucomip
ss
cmp
cld
shl
mov
jmp
rorl
sub
flds
sti
sar
cli
stc
repz
loop
inc
rol
lock
sar
hlt
fsub
ffree
xchg
jmp
sti
in
int
xchg
addb
lret
repz
clc
iret
cmp
sar
repz
test
call
mov
repz
iret
idiv
std
testb
adc
ret
ljmp
jecxz
mov
sub
aaa
sti
iret
iret
fsubp
out
sbb
xchg
faddl
fimuls
xchg
out
ret
clc
lret
incl
fcmovnu
lret
mov
loope
in
lret
call
fcmovbe
xchg
roll
mov
in
out
out
mov
cmp
sti
into
out
sti
xor
fnclex
xchg
jmp
clc
stc
out
mov
cld
rcl
shrb
out
lret
shl
in
lock
fcmovnb
mov
xchg
xchg
in
ret
fadd
fdivs
cmp
ror
iret
rcr
loop
cmp
in
les
iret
ficoml
ljmp
in
cli
aad
cmp
aad
cli
cli
out
fadd
test
mov
sar
iret
loope
shl
lret
leave
in
shl
lock
out
rol
fsubp
repz
mov
jmp
testl
int3
hlt
imul
aas
jmp
cmp
iret
test
roll
jmp
ret
enter
int3
or
test
jo
add
add
cmp
roll
std
roll
xor
cmc
leave
jmp
stc
stc
rcl
out
cmc
fmuls
mov
sti
fcmovbe
cmp
icebp
loop
cmp
clc
out
leave
ffree
imul
ds
aas
aam
cld
clc
test
enter
sub
lret
divl
xor
xlat
aaa
imul
fiaddl
out
repz
mov
xlat
lret
xchg
jmp
xchg
lds
jmp
shl
rcl
lret
repz
cmp
cmc
icebp
fst
fcomp
cli
in
fcmovnu
ffreep
xchg
rcr
out
in
out
cmp
aaa
shlb
filds
jecxz
rolb
in
sub
fstp
idivl
rcr
into
testl
in
int3
add
mov
xlat
hlt
repz
sarb
int3
iret
jecxz,pt
aad
sarb
sbb
fdivrp
loopne
xchg
in
call
fdiv
ror
cmp
rcr
enter
in
fdivrp
jmp
iret
xchg
aaa
shl
enter
int3
aad
sar
ds
cli
cli
faddp
leave
mov
xchg
xlat
fldl2e
mov
cmc
fmul
cmc
repz
bnd
in
ret
std
mov
inc
fsubr
test
ret
xchg
out
aad
clc
loop
cmp
into
cmp
loopne
sar
into
ror
roll
fdivrp
ljmp
lret
sub
fsubr
cld
cmp
jmp
push
fptan
sbb
in
sbb
call
ljmp
cmp
out
ljmp
rcl
repz
mov
icebp
out
fisttpll
xlat
ret
aaa
xor
repnz
rolb
repz
xchg
stc
mov
icebp
xchg
out
xchg
lret
das
repz
aad
cmc
in
cmp
xchg
enter
mov
rcr
in
call
clc
hlt
ljmp
filds
sti
fld
int
out
repnz
in
aam
in
repz
int
shl
stc
mul
fadds
hlt
rolb
out
enter
xchg
in
lret
fidivrs
fistpll
xor
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
or
je
jmp
jle
jecxz
cmp
lock
int3
mov
lret
mov
xor
cmp
xor
repnz
test
aam
fcmove
enter
mov
cli
dec
mov
sti
cli
call
test
shl
repnz
jecxz
lret
out
test
popl
xor
out
jmp
rcr
int3
cmp
out
hlt
aad
hlt
std
lock
jmp
in
aad
int3
fcmove
cmp
adc
mov
in
decb
xchg
test
icebp
xlat
xor
repnz
cmp
fincstp
in
and
lret
lret
mov
int
jecxz
repnz
cli
out
cmp
clc
aam
not
in
rol
in
clc
cmc
mul
loope
in
fst
cmpb
call
sarb
shl
ret
repz
cmp
shl
enter
sti
out
lret
jecxz
sar
jmp
cmp
fsubp
fcos
out
hlt
in
mov
xchg
xchg
xchg
jmp
cmc
imul
jmp
fdivr
aaa
leave
icebp
loopne
test
in
lock
shr
xchg
repnz
icebp
lret
cmp
cmc
xor
in
ret
repnz
std
cld
xlat
aad
int3
int
test
rcr
lret
xchg
rol
xor
in
stc
out
test
std
cmpl
repz
loope
lock
iret
adc
xor
repnz
icebp
lret
fcomi
fiadds
rcr
cld
mov
out
ljmp
lret
idiv
lret
ret
sti
lock
faddp
flds
cld
xchg
out
in
in
aad
xlat
aam
aam
call
hlt
repnz
fisttpll
addb
test
test
xor
test
aad
cld
fdiv
repz
incb
in
int
in
fmull
in
ss
out
sti
fdivrp
lret
cmp
loop
test
out
lret
jecxz
cs
cmp
out
fst
sarb
jecxz
xchg
sbb
call
rorl
cmc
shr
lock
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
into
fcmovnbe
cmp
in
loopne
jmp
inc
xchg
xchg
mov
lret
icebp
loop
xchg
adcb
cs
xor
fildl
loopne
aam
test
mov
std
xlat
lret
loope
in
into
rol
fdivs
cmp
cld
in
jmp
filds
aad
sti
enter
std
xchg
mov
xor
enter
aaa
iret
fstp
ss
cli
sti
xlat
out
jmp
test
out
xor
ftst
cmp
sti
lock
stc
into
cmp
clc
loopne
xchg
xchg
test
lret
sar
ds
icebp
inc
decl
int3
jecxz
xchg
mov
loopne
jecxz
aad
ds
hlt
cmp
testb
test
ret
cli
addb
int
ret
lret
cmpb
cld
icebp
and
clc
enter
leave
cli
nop
out
in
xchg
shl
xor
int3
leave
rcr
fiadds
std
ftst
aam
sbb
nop
out
loopne
out
xor
xor
cmp
bnd
rol
mov
repz
leave
ljmp
xor
out
lret
fincstp
xor
addb
jmp
mov
out
in
into
nop
adc
sti
in
cmp
cld
neg
cli
icebp
rcl
out
ret
sti
call
in
in
leave
icebp
into
xlat
icebp
stc
cmp
in
loope
out
orb
call
out
shll
xor
adc
rol
cmp
xchg
std
fucom
cld
push
loop
les
xor
xor
int
cmp
xlat
ret
fistpll
shl
fmull
icebp
out
orl
aaa
in
div
cmp
out
repnz
ljmp
ret
divl
clc
in
int
aam
loope
cmp
fmuls
lret
into
out
lret
frndint
loop
repnz
cmp
int
div
xor
roll
ret
lret
jmp
fdivp
mov
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
lret
sahf
in
add
add
les
fdivrp
and
xchg
ljmp
std
adcb
int
into
fdivr
fadd
ljmp
stc
mov
call
lret
shr
aad
in
clc
loop
fdiv
xor
fcomi
in
std
mul
idivl
repnz
cmc
in
cli
int
lret
call
into
fcom
in
jmp
stc
out
hlt
aad
fcmovnb
in
cld
xchg
fldl2e
out
test
mov
decl
icebp
in
repnz
hlt
out
int
int
cmp
jmp
cld
mov
std
mov
xchg
leave
loop
out
rol
in
icebp
stc
aas
aas
stc
sbb
out
addl
shr
fmulp
loope
into
divl
xor
icebp
jmp
fst
out
loopne
ret
sti
xlat
in
xchg
std
faddl
fdivs
in
ljmp
out
out
stc
jmp
icebp
clc
cmp
jmp
mov
out
ror
sti
in
mov
xlat
fcomp
repnz
addl
fmull
bnd
rcl
iret
out
lret
ljmp
cmp
ret
xchg
icebp
cli
decb
xor
fsincos
ss
out
aad
xor
clc
aad
sbb
enter
xchg
rol
leave
out
in
xor
out
ret
and
out
in
aad
test
sti
int3
out
loope
jmp
jmp
lret
cli
idivl
cmp
test
fsubrp
jmp
mov
jmp
test
lret
hlt
out
in
jmp
xor
ror
xchg
jecxz
shl
std
mov
repz
ret
in
hlt
into
out
shr
mul
in
xlat
rolb
lret
fimuls
repz
ret
repz
aaa
lret
shr
lock
sbb
lret
faddp
orb
jecxz
cs
enter
cmp
int
clc
int
xchg
ret
rcl
push
jmp
lret
mov
mul
out
out
xor
not
loopne
cmp
cmp
leave
addb
add
iret
rcl
fcomp
aad
mov
jae
pop
out
add
add
cli
std
leave
test
leave
xor
shl
call
cmp
xlat
loop
out
adc
int3
mov
repz
out
into
lock
sar
fnstsw
out
test
leave
imul
or
in
flds
rol
cmp
in
xor
fucomip
aas
test
test
in
fcmovu
mov
shl
in
out
cmc
int3
sar
enter
rcl
cmp
call
lret
shr
adc
mov
in
jmp
lock
int
hlt
incl
xlat
loopne
repz
int
cmp
jmp
xorb
int3
int
lock
aad
mul
lea
int
in
icebp
shl
cmp
lock
out
icebp
jmp
into
lock
cli
out
xlat
ret
out
sbb
aam
enter
xor
loop
fdivrp
fstpt
aad
filds
test
mov
out
iret
iret
ret
stc
out
in
lock
cmp
xlat
aas
fcmovne
cmp
fucomp
mov
clc
jmp
rcl
xchg
fmulp
xchg
not
iret
leave
cmp
sar
aad
cmp
addl
lret
out
sub
lret
xchg
out
rol
in
clc
ror
iret
icebp
hlt
adc
aaa
repz
stc
in
xchg
test
jecxz
mov
das
out
xlat
hlt
aad
hlt
aam
fsub
ror
xor
aad
mov
shl
hlt
out
out
vpminsw
iret
xlat
repnz
iret
xor
jmp
in
cld
orb
xor
fidivrs
cli
div
ljmp
leave
mov
cmp
loope
mov
loopne
call
into
cmp
loop
fidivrs
in
and
fimuls
aam
ss
int3
fcomi
icebp
rcl
fnclex
aad
repnz
call
cmp
mov
mov
loop
int
fsubr
shr
sti
cmp
xor
clc
stc
fucomip
out
cld
std
mov
out
sti
xchg
into
mov
les
ret
repz
into
iret
fildl
fdivr
rcr
mov
roll
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
mov
cmp
adc
add
add
fisttps
flds
lret
aam
icebp
loope
shl
lds
sti
call
ljmp
icebp
lock
xor
repz
fdivr
adc
std
jmp
repz
xor
lret
repz
jmp
lret
ss
out
rcl
xlat
jmp
repz
subl
int
fyl2xp1
out
lock
lock
rol
out
xchg
cli
loopne
lea
shrb
cmp
ds
xlat
addl
fsubr
fyl2xp1
test
out
xor
rcl
out
enter
into
cmp
xlat
aam
std
mov
mov
xchg
jmp
hlt
xor
iret
cli
divb
test
out
int
shl
or
test
enter
in
xchg
xchg
mov
clc
out
icebp
stc
int3
cmp
fstp
cli
fnstcw
icebp
sarb
xchg
mov
loope
sar
ljmp
loope
ret
fdivr
jecxz
rorl
jecxz
cld
test
xor
vcvttpd2dq
ds
rcr
cmp
cli
xchg
out
in
xchg
fmul
cli
into
lret
into
out
int
ret
fstpt
aad
cli
fcmovnbe
int3
ss
aam
mul
out
int3
test
xchg
mov
sbb
lock
imul
repz
repnz
loopne
faddp
jecxz
aad
ret
fcomi
call
repz
ljmp
fcomp
rcr
out
fmulp
ror
cmc
std
rcr
test
loope
lock
shl
aaa
xlat
int3
int
sarb
fdiv
in
out
out
sar
or
in
aam
jecxz
aaa
hlt
cli
in
xlat
sbb
sarl
aas
mov
in
fsubr
sti
call
mov
loope
aam
aaa
sarl
xor
clc
fnstsw
fsub
ds
vpminub
jmp
loope
into
lret
cmp
fmul
stc
aaa
fsubrp
aam
test
orl
addl
xor
cli
shl
cmpb
cmp
rclb
fisttpl
sbb
dec
jmp
int
ret
lret
aad
int
jmp
lods
stos
mov
hlt
add
add
ret
addl
out
or
xchg
xchg
lds
sarb
lock
cmp
out
cmp
jecxz
xchg
out
mov
int
int3
in
std
mov
xor
aaa
xor
xor
out
icebp
ljmp
rcl
rcr
int3
fdiv
int
xchg
fucomp
xchg
stc
xor
aaa
std
fsub
ds
rol
xlat
shl
clc
leave
loopne
mov
sbb
iret
jecxz
repnz
xlat
jecxz
sar
sti
div
int3
lock
or
aas
hlt
fcmovnu
shl
out
icebp
xchg
cmc
ret
fsubrp
int3
shl
ret
cmc
fadds
loopne
mov
mov
lret
cmc
in
lret
into
out
clc
roll
aas
ds
lea
out
xchg
test
loop
lret
clc
xor
testb
xor
enter
in
out
in
mov
mov
stc
aad
fcomp
call
cli
rolb
fadds
mov
xor
ret
call
cmpb
xor
hlt
out
shr
stc
in
in
flds
xor
in
shr
shl
std
in
fiaddl
loop
out
mov
loope
ficoms
out
into
in
fcmovb
hlt
xor
jmp
aas
stc
aam
out
fadd
out
cli
testl
call
shlb
fidivrl
repz
shl
aam
out
ffreep
loopne
loope
int
in
into
in
stc
into
out
cmp
cmc
rol
aas
div
cmp
cmc
cmp
in
out
and
test
sarl
lock
clc
clc
icebp
cmp
icebp
cld
clc
in
jmp
mov
in
and
ds
sarb
aad
in
cmp
addl
cli
leave
xlat
divl
fsubr
xlat
repnz
mul
mov
shl
into
xchg
shlb
xor
out
fucomi
out
fucomi
xor
lock
cmc
loope
push
clc
fnstsw
stc
cli
std
out
in
adc
loopne
ss
cmp
xor
add
pop
mov
pop
pop
pop
leave
ret
