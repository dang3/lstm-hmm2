push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
jne
addl
push
push
call
test
jne
addl
push
sbbl
push
adcl
push
call
xorl
test
movl
jne
push
andl
push
adcl
push
sbbl
call
sbbl
test
jne
addl
push
push
call
orl
test
jne
andl
push
subl
push
call
xorl
test
movl
je
sbbl
xor
movl
jmp
movl
dec
mov
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
decl
mov
movl
not
lea
sbbl
mov
mov
add
mov
lea
inc
mov
adc
mov
and
mov
mov
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
movzwl
add
xor
movzbl
xor
mov
subl
add
movl
mov
mov
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
adc
add
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
add
xor
movzwl
or
add
adcl
mov
and
mov
mov
orl
mov
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
mov
neg
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
sbb
mov
movzbl
add
mov
mov
xor
mov
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
sub
mov
xor
subl
add
movl
jmp
mov
mov
xor
andl
lea
push
mov
orl
xor
orl
lea
push
mov
addl
pushl
subl
call
and
mov
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
lea
sub
mov
mov
movl
xor
addl
xor
add
sbbl
mov
adcl
xor
lea
movl
mov
cmp
jbe
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
mov
mov
sub
movl
mov
mov
sbb
mov
push
adc
mov
xor
mov
andl
push
or
mov
sbbl
add
movl
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sub
mov
xorl
mov
jmp
inc
stos
pop
mov
mov
mov
jp
add
jp
sub
cmp
popa
cmp
xor
push
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
or
xor
lcall
shrl
sub
mov
cwtl
iret
xor
dec
inc
icebp
xlat
pushf
cs
and
inc
inc
pop
inc
xor
jp
outsb
mov
call
jmp
xor
call
lret
je
or
clc
insb
xchg
dec
add
shrb
push
adc
data16
inc
shrb
vxorps
sub
je
scas
jecxz
or
cwtl
dec
testl
adc
push
cmp
dec
bound
add
negl
add
js
inc
clc
mov
out
je
sbb
stos
ds
ja
sbb
fs
stc
clc
xchg
test
jae
xchg
add
mov
push
fidivs
ficomps
or
ds
in
pop
lcall
cltd
hlt
adc
fldt
dec
dec
idiv
mov
pop
jae
xchg
insb
or
sub
mov
jno
cmp
jle
sahf
pop
xor
inc
or
js
mov
mov
pop
push
sbb
add
popa
push
xchg
push
jge
mov
push
or
enter
push
adc
enter
scas
divl
inc
out
jle
mov
and
mov
pusha
mov
jmp
in
jecxz
xor
jle
sub
mov
addr16
add
and
fwait
adc
xchg
and
mov
ljmp
jmp
fmul
mov
lea
call
and
mov
pop
pop
jle
popf
lods
mov
sarb
fcmovnbe
stc
mov
mov
cmp
pop
movsb
sbb
insb
push
testl
push
sub
idiv
bound
add
and
out
fiadds
dec
mov
stc
add
cli
inc
pop
je
in
out
push
les
or
mov
push
add
mov
dec
push
dec
jg
pop
mov
stos
adc
mov
out
aad
add
mov
xor
push
imul
aam
or
aaa
test
sub
xor
cmc
adc
mov
and
jp
cmp
xchg
mov
repz
out
dec
xchg
sbb
push
mov
icebp
test
lods
mov
outsb
ja
push
int
test
movsl
in
xor
cmp
pop
inc
push
iret
cli
push
and
inc
pop
test
jb
mov
dec
imul
int
into
sub
imul
xchg
imul
insl
std
ss
mov
sbb
nop
or
lods
mov
inc
inc
aad
mov
add
es
xchg
out
cmp
or
test
sub
insb
jne
jbe
js
cmp
dec
jb
lds
mov
xchg
xor
or
mov
test
nop
sbb
lods
mov
pop
pop
push
push
sub
add
xchg
jg
cmp
stos
mov
mov
les
mov
dec
inc
xor
and
jns
neg
sub
push
das
fiadds
and
mov
xor
test
xchg
sbb
popa
mov
jae
xchg
insb
sub
sbb
or
scas
stos
mov
push
je
add
cld
lret
addr16
addr16
sti
lods
mov
jne
nop
rcr
pop
pushf
rclb
cld
fiaddl
popa
adc
inc
sbb
and
jg
mov
pusha
in
add
and
mov
cld
je
lea
pop
mov
enter
mov
stos
mov
jle
sbb
movsb
xchg
or
test
and
push
es
inc
push
mov
es
movsb
ret
xchg
jb
lahf
outsl
add
out
addl
ret
cmp
add
test
gs
and
aad
call
xchg
data16
pop
cmp
in
inc
ljmp
mov
mov
adc
bound
cmp
push
xchg
xchg
add
adc
les
jne
jno
sub
sub
mov
jns
fldcw
push
xor
popa
sub
or
loopne
cmc
movsl
push
and
fistps
js
filds
cli
adc
sub
fwait
int
jecxz
ljmp
adc
jp
out
popf
rcll
loope
inc
clc
push
les
stos
pop
jb
mov
aad
ud1
mov
xchg
inc
mov
mov
test
ja
sub
and
add
add
popa
in
xchg
push
xor
in
pop
mov
clc
sub
pop
adc
int3
sbb
scas
and
jmp
pop
in
push
cli
jae
dec
add
adc
fimull
aad
pop
jge
sub
mov
push
xchg
push
mov
cltd
mov
lcall
lods
adc
lret
xor
pop
push
cli
roll
xchg
aaa
adc
addr16
mov
adc
roll
xchg
inc
pop
das
fidivs
or
pop
inc
adc
les
mov
jl
dec
or
sbb
insb
mov
pop
xor
sub
or
mov
aaa
cwtl
lret
int3
push
inc
imul
dec
jb
lods
imull
or
xor
jg
das
pushf
out
pushf
das
daa
sub
pop
pop
sahf
lds
shl
xor
jmp
sub
push
test
in
mov
imul
xorl
xlat
add
cwtl
push
adc
add
dec
xchg
rcrl
adc
jle
and
pop
out
inc
mov
dec
pop
inc
lret
push
fsubrp
data16
jge
rorl
mov
scas
push
andb
mov
mov
pop
ret
adc
aam
push
rclb
mov
jp
cmpsl
stc
test
pop
mov
pop
pop
bound
mov
push
movsl
int3
mov
aam
push
adcb
push
divl
negl
push
jno
adc
lret
inc
pop
sahf
xchg
push
mov
cmp
adc
int3
mov
cmp
sub
cmp
pop
popf
dec
fs
pop
cs
insb
add
jg
xchg
fdivs
mov
dec
lret
mov
add
mov
or
jne
dec
hlt
inc
adc
sbb
push
hlt
fcoml
movsl
lds
test
and
test
jne
fnstenv
inc
pushl
sub
loope
shl
test
jno
dec
pusha
test
pop
xchg
mov
lods
xchg
inc
jnp
pop
cmc
inc
call
int3
mov
adc
imul
int
mov
mov
mov
push
cmc
pop
lods
push
pop
jle
fisubrl
fdivrs
push
mov
lods
push
in
pop
ljmp
movsb
pop
dec
dec
adc
lret
sub
push
sbb
test
pop
add
jmp
inc
sbb
out
pop
stos
mov
in
or
dec
lret
aaa
or
cld
push
inc
add
push
xor
pushf
add
sub
xor
or
testb
sbb
jmp
loopne
arpl
or
mov
adc
test
adc
gs
adc
adc
mov
fcomi
ja
loop
mov
rcll
cmp
adcb
pop
test
push
lods
xlat
jl
aaa
lea
xchg
push
ret
call
pop
fwait
push
cld
int
add
mov
push
test
jbe
scas
mov
adc
nop
inc
and
movsb
mov
leave
xorl
pushf
push
lods
loopne
in
jo
pop
rorl
inc
inc
and
sub
xchg
cmpsl
push
push
data16
dec
mov
sub
or
int3
das
das
repnz
pushw
push
inc
in
stos
clts
adc
lods
mov
ret
dec
pop
pop
mov
pop
dec
fisttps
cltd
xor
js
sub
repnz
fildll
push
lret
cmp
std
imulb
xchg
lret
movsb
mov
popf
cmp
cwtl
mov
sbb
test
push
or
call
out
adc
fwait
movsl
jae
movsb
mov
sub
fnsave
inc
jg
cmp
sub
loopne
or
or
mov
sbb
loopne
in
cltd
in
js
sub
hlt
addr16
mov
xor
lods
xchg
out
dec
add
mov
call
and
jo
in
jp
sub
mov
rorl
jb
sti
les
ret
cmc
xor
std
push
jge
int
out
xor
ficoml
fisubrs
jecxz
enter
insb
hlt
push
jno
jle
cmp
roll
mov
lea
in
inc
js
add
mov
lahf
lcall
mov
xchg
pusha
icebp
xor
popf
notl
jo
out
je
lock
adc
mov
dec
cmp
bound
hlt
test
cmpb
shl
mov
jecxz
filds
mov
cmp
pop
xor
gs
out
push
adc
outsl
aam
cmc
xchg
xchg
stos
cmp
es
icebp
cvtps2pd
mov
sar
push
mov
imul
jecxz
shlb
xchg
aam
popa
roll
mov
push
pushf
pop
pop
mov
pop
mov
add
call
test
jb
adc
sub
adc
push
and
imul
sub
sub
cmp
scas
sbb
pop
add
jecxz
std
xchg
iret
mov
repnz
in
or
jg
cmpsl
orb
imul
out
je
into
xor
insl
fdivrl
sub
rorb
jno
imul
int3
mov
shlb
push
ret
adc
mov
adc
push
xchg
mov
push
aad
or
cmc
mov
inc
mov
roll
aaa
test
js
jl
push
jns
rorb
lret
add
inc
outsl
cwtl
mov
bound
mov
fdivrl
pop
stos
push
sub
fcompl
std
mov
leave
push
dec
mov
enter
add
lods
mov
cmpsb
mov
cmp
xor
adc
mov
dec
pop
and
mov
fidivrl
fidivs
jnp
nop
xor
ja
push
pop
cmpl
mov
popf
jmp
movsl
ret
mov
push
mov
sub
repnz
and
add
int
sub
in
cmp
rcll
cmp
add
mov
mov
jnp
dec
mov
add
fnstsw
in
popa
dec
dec
dec
popa
roll
sub
pop
cmp
xlat
loopne,pn
and
pop
test
or
jbe
xor
fcoms
fwait
jge
enter
sub
les
mov
pop
mov
push
add
mov
xor
mov
je
cmp
inc
fimull
mov
or
mov
pop
imul
xor
pop
lods
imul
inc
aas
mov
jo
dec
cli
mov
jmp
pushf
add
pop
jnp
push
test
mov
cld
test
mov
orb
cs
add
adc
mov
ljmp
movsb
sbb
out
mov
jl
xor
sub
lods
mov
pushf
pop
pop
push
jnp
push
jl
mov
jb
repz
jae
xor
test
xchg
cmpsl
inc
push
out
mov
in
sbb
mov
nop
dec
mov
add
push
pop
jbe
xchg
dec
push
push
jb
ret
adc
loop
scas
gs
aad
inc
push
push
aaa
xor
jmp
popf
int3
mov
sub
add
inc
cli
out
push
cmp
push
inc
cld
aas
and
xchg
jno
sub
cmp
adc
popa
jns
dec
dec
xor
xchg
fadd
out
into
pop
jle
repnz
pop
or
push
rolb
mov
fnstsw
xorl
mov
repz
xchg
test
clc
mov
sub
std
or
xchg
cmp
push
call
aad
leave
popa
mov
cmpsb
mov
inc
xchg
fcoms
xor
jnp
test
dec
xchg
or
and
jp
cmpsl
inc
inc
imul
test
cld
mulb
and
or
xchg
or
mov
jle
inc
and
or
push
xchg
cmp
sbb
loop
mov
dec
cs
out
cli
jns
lods
in
rolb
aam
push
pop
aas
stos
add
repnz
rclb
adc
insb
aas
mov
pop
lcall
leave
adc
std
mov
jl
loope
addl
xchg
and
dec
sbb
shll
cmp
sahf
jge
pusha
mov
ret
and
xchg
idiv
rcr
cmc
sbb
add
hlt
rorl
arpl
mov
and
aaa
divl
out
cmc
adc
mov
jecxz
adc
xor
aaa
gs
cs
jbe
jp
sub
movsb
shr
enter
xor
and
jb
imul
lds
lahf
arpl
push
das
insl
sub
cmp
push
dec
fwait
xor
mov
mov
jns
scas
adc
push
repz
dec
dec
inc
cli
adc
jnp
ror
mov
xor
aas
sub
insl
cmc
push
nop
inc
lods
popf
adc
cltd
aas
lret
fsubr
push
iret
stc
shlb
fldenv
fnstcw
loopne
mov
xlat
aad
mov
lret
scas
outsl
cmp
popa
mov
int
insb
dec
ljmp
cmp
cli
lahf
inc
sbb
or
pop
test
hlt
test
std
or
pop
sbb
sub
jns
loope
jmp
jbe
or
loope
xchg
scas
mov
outsl
or
jb
pop
pop
jo
jbe
fdivrs
aas
aad
dec
cwtl
das
cmp
fistps
testl
imul
aam
es
adc
push
mov
js
mov
in
mov
lahf
cmp
push
push
mov
popl
xchg
jmp
repz
pop
fs
movsb
mov
xlat
cmp
mov
nop
mov
fwait
aam
mov
enter
add
push
fs
inc
sbb
or
pusha
mov
dec
ja
call
daa
adc
jno
jmp
inc
insb
iret
ret
stos
pop
frstor
fdivs
in
fsubs
mov
in
test
cld
iret
push
in
push
loopne
add
loopne
or
iret
es
sbb
xchg
jl,pn
xchg
and
ret
cwtl
movsb
pop
imul
scas
push
push
jnp
push
aam
movsb
dec
pop
adc
push
add
dec
fwait
push
mov
jmp
sub
jnp
es
xchg
lcall
pop
adc
gs
mov
fimuls
adc
stc
aad
push
xor
in
push
inc
icebp
push
jmp
mov
cmovl
aas
push
dec
add
push
or
sub
and
out
ljmp
xchg
fldl
orb
loop
imul
loop
sbb
das
cmp
pop
mov
inc
sarb
pop
cmp
pop
lea
lods
xchg
push
sub
insl
sbb
adc
jo
dec
fistps
dec
inc
or
in
xchg
dec
fnstsw
sbb
out
jge
pusha
cltd
out
fs
fucomp
pushf
cmp
mov
cmp
sub
bswap
pop
pop
not
fdivrs
xchg
sbb
and
nop
lret
pop
mov
xchg
ffree
pusha
push
dec
mov
sar
mov
popl
mov
inc
imulb
push
outsl
call
adc
and
test
jnp
stos
movsl
into
adc
lea
push
push
stc
mov
shlb
push
mov
xchg
push
jp
int3
push
mov
fmul
push
rcl
push
repnz
push
adc
test
mov
aad
bound
inc
orl
xchg
mov
clc
jbe
xor
popf
call
mov
push
test
pushf
daa
pop
into
mov
lret
lea
fidivrs
inc
add
and
jo
ret
cs
mov
inc
enter
not
mov
lods
sub
sbb
xchg
js
gs
mov
mov
add
mov
sahf
sti
xor
lret
jmp
cmp
loop
stos
push
xchg
mov
xor
mov
iret
sbb
popf
push
arpl
add
out
push
fbld
pop
repnz
cmp
rclb
je
dec
mov
xor
les
je
ja
push
repz
mov
dec
mov
nop
dec
push
js
or
sbb
cmp
test
xchg
and
mov
mov
movsl
jmp
mov
stos
inc
aad
adc
fisubrs
pop
cmp
rolb
cmp
jno
imul
lahf
mov
jmp
mov
scas
xchg
xor
pop
icebp
dec
out
push
cmpsb
jge
mov
in
nop
cli
push
sbb
ret
dec
roll
mov
ss
rclb
mov
push
gs
pop
jae
cwtl
mov
fdecstp
inc
outsb
mov
sbb
lock
pop
mov
shll
icebp
xor
mov
mov
gs
sub
scas
sbb
sub
mov
lcall
xor
shrl
mov
shl
add
cmpsb
das
mov
popa
in
loope
or
fnstcw
push
xlat
out
into
dec
or
cmpsb
push
jecxz
or
stos
in
inc
sub
leave
popa
shlb
iret
inc
leave
pop
xchg
xchg
das
dec
push
adc
fsubrl
sub
sub
or
shrl
jecxz
popf
jle
xchg
call
add
dec
xor
jns
mov
xchg
loope
aam
fs
outsb
push
out
pop
jl
dec
xchg
mov
or
test
jo
ljmp
jno
mov
insl
push
pop
cld
pop
mov
mov
in
mov
daa
jo
mov
cmp
mov
loopne
push
clc
scas
aaa
sbb
dec
movsb
popa
lahf
mov
jbe
mov
mov
or
mov
stos
and
xor
jae
xor
jle
mov
das
pop
out
ret
loope
jecxz
je
cwtl
cmpsl
mov
push
fsubrp
stos
movsb
stos
xchg
ljmp
push
cmp
shlb
insb
mov
test
mov
pop
jns
pop
std
jns
cwtl
in
addb
and
sub
pop
push
lahf
xchg
mov
fcompl
fldenv
or
mov
mov
pop
lock
mov
sub
fsubrp
out
aam
fsubrs
cmp
in
xor
push
subb
mov
xor
into
data16
cmp
aam
les
sub
push
jnp
fildll
mov
sub
mov
jbe
or
in
adc
dec
jge
xor
jnp
cmp
inc
add
daa
mov
lcall
out
aad
not
jmp
xchg
inc
cmpsb
pop
mov
dec
das
mov
sbb
lcall
mov
mov
addr16
push
lret
dec
imulb
lret
es
das
aam
dec
inc
ja
stos
or
xchg
scas
mov
jg
stc
mov
imul
mov
sub
je
shlb
mov
xor
jno
lock
mov
pop
cmp
mov
cli
mov
in
lods
or
add
test
outsl
push
scas
mov
fucomi
pop
pop
ss
in
jns
imul
jmp
sbb
dec
mov
aas
stos
xor
js
xlat
adc
push
movsl
in
pop
and
lcall
mov
rolb
filds
loop
xchg
push
dec
in
xor
mov
movsl
sti
inc
mov
cli
cmp
push
adc
add
notl
aas
mov
push
in
cli
fwait
dec
cwtl
sahf
jp
jnp
pushf
arpl
repz
outsb
insb
fistpl
inc
movsl
mov
xor
adc
adc
xor
push
cmc
mov
or
push
mov
aaa
movups
mov
jmp
jmp
xor
mov
aaa
fwait
ja
fnstsw
push
das
mov
into
jnp
and
push
jae
js
lods
aam
pop
dec
or
xchg
jnp
pop
std
add
push
aas
cmc
popa
ret
pop
insl
sbb
jl
out
insb
lods
and
push
inc
mov
sarb
mov
clc
xor
ret
mov
dec
ljmp
mov
mov
jo
call
insl
inc
mov
sbb
in
out
push
mov
mov
xchg
sub
and
mov
adc
push
add
pushf
test
stos
push
and
push
push
bound
xchg
lret
cwtl
data16
enter
push
in
xchg
fs
scas
cli
sub
fldenv
addr16
pop
jg
int3
in
movsb
inc
and
pop
adc
mov
jmp
sti
stc
lods
jl
call
jp
imul
fdiv
daa
xor
push
lds
add
stos
loop
push
movsl
ss
std
mov
pusha
aam
mov
into
dec
cmc
call
jae
xlat
pop
sub
inc
dec
outsb
insb
lock
out
push
sarb
add
in
into
mov
or
hlt
shll
test
adc
and
mov
mov
popa
popa
aad
push
out
or
push
mov
repz
gs
cmp
cltd
lods
jo
pop
decl
pop
or
aad
sahf
mov
fs
add
adc
add
hlt
pushf
bound
imul
cmp
mov
xchg
or
mov
cmp
push
ljmp
aad
jo
subb
rcrb
mov
lcall
cmp
dec
pusha
iret
fidivrs
inc
fwait
call
cld
dec
inc
pop
test
outsl
pop
movsb
xchg
push
arpl
idivb
jp
cmc
jae
mov
cmp
into
call
add
fwait
ljmp
in
sbb
loop
call
int
mov
push
sbb
and
cmc
jns
test
loop
and
sub
mov
mov
popf
xor
pop
add
enter
push
xchg
mov
lods
inc
jbe
movsb
imul
scas
and
insb
pop
xchg
mov
fisubs
mov
mov
adc
stos
and
mov
adcl
xlat
orb
outsb
dec
in
adcb
jecxz
sbb
rclb
push
or
xchg
test
cltd
adc
imul
push
pop
lret
loopne
mov
push
repz
rcrl
out
mov
cli
iret
mov
pop
pop
incb
daa
push
xchg
sbb
loop
adcl
or
adc
popf
into
dec
je
inc
push
lods
icebp
pop
xlat
adc
jns
cmp
add
stc
jmp
mov
or
addr16
hlt
mov
scas
jecxz
std
add
push
mov
test
inc
and
loop
jns
mov
std
ret
mov
jbe
int
mov
test
pop
mov
inc
mov
sar
mov
lea
dec
movsl
popf
or
add
pop
inc
nop
js
testl
aad
jle
jmp
arpl
test
and
push
ja
xchg
addl
mov
or
mov
push
test
addl
pushf
iret
jp
add
xor
and
addr16
out
outsl
xor
test
xchg
push
inc
or
jl
imul
add
push
sti
jl
stos
inc
popf
sbb
hlt
iret
ds
sbb
dec
sbb
icebp
xlat
push
push
in
in
adcl
aam
cli
out
adc
xchg
xor
mov
push
mull
repnz
pop
es
rcrb
jp
jnp
inc
scas
lods
ja
js
stos
test
test
or
icebp
xchg
mov
shrb
mov
ss
add
ret
sbb
push
aam
sbb
scas
mov
dec
adc
ret
fnsave
cmpb
gs
xor
arpl
or
addl
pop
es
xchg
and
cmp
test
or
stos
movsb
jae
inc
test
loop
xlat
scas
xor
js
sub
fildl
mov
jbe
dec
jo
fwait
cmp
xor
lods
in
jge
popf
and
clc
dec
mov
mov
imul
ja
mov
push
fnstsw
inc
mov
aam
notl
xorb
adc
pop
fsubrl
daa
pop
clc
scas
pop
imul
push
fistpl
mov
adc
sbb
or
sub
pusha
pop
lret
mov
out
mov
frstor
mov
sub
cmpsl
xor
imul
dec
lock
pop
sub
sub
push
mov
outsl
sub
jns
sub
adc
or
sub
fwait
enter
inc
mov
lret
imul
pop
popf
cli
add
push
mov
jns
incb
test
add
xchg
imull
push
sub
adc
inc
push
ret
mov
mov
pop
mov
inc
fidivs
pop
aad
push
imul
adc
call
sub
ljmp
call
jnp
or
test
xlat
adc
or
mov
stos
mov
out
ljmp
dec
repz
rolb
shr
data16
popf
arpl
lock
ja
or
lret
scas
mov
icebp
sub
mov
stos
pop
inc
lret
iret
or
lea
inc
push
pop
jg
dec
xchg
lds
cmpsb
or
call
sub
push
insb
ss
mov
mov
in
test
in
cld
jno
insl
inc
stos
or
add
sub
dec
mov
inc
push
mov
push
les
dec
pop
aas
jbe
mov
jns
and
frstor
test
and
xchg
cwtl
adc
mov
loopne
push
xchg
sahf
push
jne
sub
cmp
mov
test
mov
mov
push
add
outsl
xchg
pushf
cmc
in
push
nop
jge
pop
leave
push
xchg
push
loop
xchg
cmp
les
in
jbe
jp
decl
xchg
aaa
aas
mov
cmp
sub
les
test
leave
add
jp
push
lds
adc
dec
jg
mov
sbb
cs
jmp
xchg
aam
out
pushf
lahf
cmp
sbb
std
int3
mov
test
xor
rolb
fimull
movsl
stc
sub
inc
xchg
movb
ror
dec
sbbb
addb
add
sbb
sti
xchg
mov
ret
dec
rolb
mov
jbe
cmp
arpl
rorl
pop
pop
addr16
lahf
dec
inc
and
pop
pusha
jae
inc
sbb
or
jp
jmp
out
addr16
insl
sbb
mul
mov
lea
dec
add
sbb
mov
sbb
clc
dec
loop
lock
addr16
dec
xchg
das
repnz
dec
xor
test
das
jo
lds
iret
pop
mov
dec
push
frstor
adc
xchg
xor
fwait
das
mov
cmp
insb
and
hlt
dec
mov
xor
push
xchg
mov
cwtl
fs
in
lock
push
mov
xchg
bound
and
xchg
add
std
lods
pushfw
mov
jne
add
xor
in
add
pop
cmp
ficoml
xor
pushf
dec
cmpsb
jb
mov
hlt
cmp
cmp
xor
in
loop
mov
push
sub
sub
test
es
mov
ds
stos
push
sbb
arpl
test
push
push
push
dec
inc
mov
sbb
xchg
nop
sub
cld
inc
cmp
fstps
push
mov
lret
xchg
lret
sbb
mov
mov
mov
jl
ret
jno
andb
sub
fld
or
inc
icebp
setl
aaa
cli
push
xor
outsb
insl
cli
pop
lret
fs
pop
movsb
add
test
cltd
cmpb
mov
xor
iret
cmp
push
adc
psllw
push
push
xchg
pop
out
or
inc
fldt
outsl
test
jno
and
rcl
mov
out
mov
sub
lods
xor
sub
shl
ds
inc
ret
popf
push
mov
rol
lret
shl
adc
arpl
lods
rep
dec
inc
out
mov
iret
imull
in
xor
int3
fmuls
mov
sbb
aad
ja
and
ret
scas
push
or
stos
faddl
stos
lcall
call
dec
mov
fmuls
movsl
in
jb
test
test
sbb
jp
push
fiadds
inc
add
aad
and
pop
cmp
and
jle
movsb
push
push
mov
aad
sbb
sbb
cwtl
data16
mov
mov
decl
sub
push
and
adc
cli
mov
fists
sbb
ljmp
push
mov
popa
testb
jl
iret
mov
adc
flds
addr16
dec
rcll
push
or
and
subb
cmp
nop
sub
cmp
out
std
lret
push
and
roll
sbb
in
jae
adc
hlt
push
mov
cmpb
dec
pop
aam
mov
jge
mov
mov
lock
pushf
int
out
adc
loope
stos
jle
push
inc
mov
sub
stos
adc
data16
jbe
in
sbb
or
shrb
add
cmp
scas
add
sbb
and
ret
test
mov
lcall
movsl
out
and
and
cs
cwtl
jo
out
xchg
push
ror
mov
pop
jb
scas
shr
mov
mov
mov
sbb
xlat
test
scas
ljmp
or
ds
ret
xor
pushf
rcll
push
sbb
sbb
je
movsb
mov
fwait
mov
cmpsb
je
cmp
cmp
in
sub
dec
frstor
mov
loop
or
cmp
aam
pop
nop
cwtl
mov
mov
dec
fldl
addr16
int3
test
das
ds
and
je
ret
jmp
jg
test
adc
and
adc
clc
js
fdivs
rolb
add
inc
add
lret
adc
inc
add
into
add
movl
adc
andl
xor
mov
push
add
xor
xor
sbb
mov
add
movl
adc
xor
orl
xor
movl
cmp
jne
cmp
je
jmp
or
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
subl
push
movl
push
addl
lea
push
subl
lea
addl
push
call
xorl
push
sbbl
jmp
push
xorb
es
and
insl
aaa
add
jp
pop
jp
and
hlt
add
xlat
sub
jl
adc
loopne
dec
push
cmp
xor
into
lret
jnp
imul
mov
out
sbb
jmp
cwtl
in
test
iret
push
adc
jmp
sbb
pop
sbb
cmc
lret
and
mov
mov
dec
mov
mov
cwtl
aad
and
stos
xchg
add
cli
movsb
mov
xchg
cmp
shlb
inc
adc
fadds
mov
lock
aad
xor
lret
cmp
dec
mov
icebp
je
popf
loop
pop
add
jne
shrl
in
aam
and
repz
mov
not
sub
rcl
iret
in
jg
lcall
xchg
push
mov
or
xlat
ret
inc
adc
fistpll
pop
cld
bound
call
mov
popa
or
leave
lret
test
adc
call
popf
int
jbe
xchg
jmp
nop
jl
or
aad
pushf
sub
mov
repnz
inc
repz
cmpb
mov
sbb
add
fs
pop
es
clc
fidivrl
dec
jp
scas
mov
std
pop
xor
shrl
mov
imul
cmp
or
lock
jl
leave
aas
rol
sbb
jmp
jge
dec
popa
fnstenv
xor
and
xchg
lahf
jbe
movsl
adc
mov
test
cmp
lea
fsubs
inc
movsb
push
cmp
push
cltd
mov
xor
sbb
sub
fwait
inc
mov
sub
frstor
scas
add
push
lcall
test
inc
sub
mov
lcall
js
cwtl
sub
lahf
dec
xchg
lea
pop
sub
mov
ljmp
test
mov
xlat
xchg
add
shlb
std
test
setb
jno
fwait
imul
in
adc
mov
out
dec
sub
cmp
nop
pop
fcomps
ljmp
xchg
and
adc
mov
mov
xchg
jns
mov
test
mov
lret
sbb
mov
push
sbb
clc
imul
imul
ret
out
xor
mov
sub
int3
fdiv
pop
cmpsl
dec
imul
push
pop
fsubs
pop
push
pop
pop
lods
dec
sub
inc
aaa
decb
jnp
fistpll
mov
movsl
add
adc
lods
jmp
adc
imul
sahf
inc
test
mov
lcall
xchg
cmpl
cmpsb
clc
inc
mov
fisttpll
rorb
cmp
sub
mov
pop
or
fidivrl
mov
fmul
or
mov
test
push
pop
adc
dec
rcl
push
sub
push
out
jne
mov
insb
xor
push
rcrl
mov
out
cltd
sub
sti
faddl
pextrw
xor
add
push
ja
lret
mov
mov
mov
jae
test
adc
jp
jnp
cmc
pop
lock
adc
jo
jae
mov
dec
fldt
into
scas
jmp
or
fisttps
dec
jg
data16
gs
or
and
cltd
mov
adc
xchg
pop
movsl
xorl
test
push
add
ret
hlt
ljmp
xlat
test
rorl
cli
adc
add
and
pusha
push
inc
in
pop
call
sti
idiv
out
pop
push
ss
or
std
stc
jmp
fstl
dec
clc
nop
inc
inc
jl
popf
std
outsb
jle
and
add
aaa
int
lret
mov
pop
rep
sbb
mov
scas
pop
pop
sbb
xor
pop
test
fs
cmp
inc
bound
push
inc
nop
and
mov
ffreep
push
sub
imul
push
jp
fimuls
adc
bound
addr16
pop
stos
mov
mov
aas
loopne
sub
ja
mov
xchg
xlat
clc
lods
loope
dec
mov
push
cmp
mov
jp
jecxz
sbb
addl
inc
icebp
aaa
jae
adc
cwtl
mov
stos
sbb
jno
dec
mov
sbb
test
fdivrp
xchg
lods
mov
lock
jo
xchg
cmpsb
out
pop
stc
imul
push
mov
mov
xlat
or
cltd
jno
lds
push
mov
inc
xchg
pop
mov
rclb
and
call
mov
mov
push
mov
adc
fcmovne
aas
int
sti
aaa
sarb
jge
mov
popf
aad
sbb
mov
inc
pop
mov
inc
mov
fsubl
push
push
leave
mov
loopne
movsl
lods
ds
adc
sub
xchg
out
push
in
xchg
pop
gs
mov
cmpsb
add
lds
pop
test
mov
testb
dec
sahf
mov
std
dec
push
or
and
push
adc
sub
pop
cmpsl
or
pop
test
test
sbbl
movb
cmc
sbb
cmc
dec
addr16
mov
fnstcw
cwtl
mov
pusha
push
inc
lds
mov
push
stos
hlt
cmp
jp
and
adcl
add
or
pop
loope
in
aaa
rolb
cltd
dec
sbbb
fwait
adc
add
mov
xchg
pop
shrb
add
daa
pop
out
push
cmp
cmp
test
loopne
int
test
push
sbb
mov
dec
or
adc
inc
popf
je
lcall
loop
gs
popfw
lock
mov
mov
and
inc
sti
pop
aaa
push
cmpb
jge
cld
aad
or
mov
inc
push
pop
xor
hlt
aaa
arpl
pushf
repnz
jecxz
std
push
xor
lcall
fbstp
xchg
cmp
cmc
or
hlt
push
and
cmc
xchg
xor
dec
inc
aas
sbb
pop
addr16
jns
ret
pop
fcom
sbb
ja
adc
jge
inc
js
in
sbb
xchg
xor
in
es
adc
shlb
mov
test
xchg
mov
add
scas
cwtl
cmp
loope
lods
stc
rolb
imul
cmpsl
fs
cmp
sub
mov
in
or
sbb
add
mov
push
mov
fsub
push
push
out
jbe
hlt
sbb
mov
iret
cmp
gs
or
lods
cmp
inc
mov
popa
mov
jmp
mov
fidivrl
inc
or
lret
inc
mov
mov
mov
jp
lcall
inc
mov
insl
xor
and
lock
rcl
mov
je
jno
mov
daa
pop
lcall
mov
mov
xor
imul
push
repnz
push
mov
add
and
in
gs
push
sub
arpl
int3
and
cmp
aam
push
mov
call
pop
daa
xor
push
jg
ja
inc
aaa
add
mov
sbb
xchg
pusha
pop
addr16
xchg
nop
testl
aaa
cmp
gs
or
adc
add
lods
or
mov
pusha
inc
lea
cli
sub
xchg
push
out
int
imul
sarl
pop
inc
mov
cmpb
sahf
repz
sahf
jmp
mov
sahf
popa
adc
jnp
test
jbe
pop
xchg
sbb
ss
pop
sbb
jnp
mov
jl
mov
inc
jo
adc
jbe
test
lock
das
jge
pop
jp
scas
adc
dec
push
gs
sar
sbb
xchg
out
leave
mov
int3
and
shrl
movb
popa
mov
jle
pop
int
movsb
fisttpl
push
sub
adc
push
into
pop
push
inc
xchg
aad
adcl
cmpsb
inc
fisubrs
mov
mov
pop
pop
and
inc
adc
mov
shlb
data16
sbb
mov
aas
cmp
fsubs
xchg
notb
das
arpl
mov
add
stos
aas
iret
pop
incl
icebp
dec
inc
or
sub
loop
aad
testl
mov
pop
out
xchg
adc
mov
bound
add
cmpb
mov
push
js
scas
cmp
sbb
mov
xchg
test
mov
and
daa
leave
ja
xchg
scas
push
or
cmc
loopne
pushf
dec
insb
push
sbb
mov
xor
mov
bnd
and
fimuls
shll
les
jg
lock
inc
cld
sbb
mov
add
mov
and
out
loope
loope
add
out
jge
pop
lds
xor
lahf
fwait
pop
push
movsl
sub
js
jg
adc
int
sub
jo
sub
loop
dec
mov
int
add
jnp
out
aaa
xor
xchg
adc
mov
shl
jp
lahf
loop
push
xor
cmp
pop
mov
cmp
xchg
add
data16
mov
jmp
mov
push
int
daa
push
push
adc
add
inc
in
movsb
cmc
das
rclb
fisttpl
lahf
cmp
or
cmp
push
push
icebp
cmp
in
sub
int
iret
testl
push
or
stc
int
js
roll
adc
pop
xchg
xor
aam
add
ljmp
pop
mov
sub
lods
adc
xchg
out
mov
cli
icebp
cmp
jns
sub
cmp
cmp
stos
sbb
pop
call
outsb
aad
mov
loop
and
push
mov
and
xchg
ret
lock
and
and
mov
cmpb
pop
sbb
adc
out
les
xchg
mov
cmpb
cltd
sbb
imul
rorb
not
mov
nop
adc
dec
xchg
aam
cwtl
data16
gs
cld
les
pop
jb
add
cwtl
jne
movsb
lret
outsl
jecxz
xor
push
mov
jae
cs
xor
fadds
jmp
add
xchg
mov
stos
add
sbb
sahf
mov
mov
mov
dec
pusha
inc
ficoml
fs
arpl
xchg
jae
inc
xchg
jns
div
int
aam
jo
cwtl
mov
jecxz
ret
sbb
lcall
int3
test
imul
lcall
mov
add
movsb
daa
push
add
cmp
sbb
aaa
mov
inc
notl
sub
mov
xor
int3
andb
outsb
push
clc
pop
iret
jmp
pop
cld
stos
jecxz
stos
mov
rolb
dec
sbb
cmpsb
int3
xor
in
add
fxch
sub
lahf
xchg
add
mov
push
pusha
repz
xchg
mov
push
nop
ss
inc
pushf
stos
out
out
dec
pushf
xchg
jl
mov
ret
sahf
cmc
jnp
lock
ljmp
les
aas
sbb
push
add
or
movsb
out
dec
pop
pop
add
sbb
loopne
mov
les
fidivl
aad
gs
jmp
jmp
les
dec
mov
mov
dec
arpl
popa
mov
add
ljmp
pop
iret
add
lret
sti
lods
aam
int
ja
pusha
cmp
out
push
lahf
nop
cmp
push
xchg
cmp
push
and
inc
cmp
ret
mov
mov
xlat
sti
or
pop
push
and
push
dec
adc
inc
imull
xor
dec
aaa
sti
test
dec
xor
loopne
cwtl
addr16
je
ss
xchg
cwtl
cmp
imul
sbb
out
loop
aas
mov
cli
bound
xor
out
pop
fwait
ja
push
adc
mov
or
jg
sub
daa
jne
flds
int3
imul
mov
add
hlt
pop
sti
hlt
movl
inc
fs
xor
lea
sahf
mov
fiadds
daa
sub
sbb
addr16
push
mov
std
mov
scas
fisttps
ret
in
sbb
ret
cld
mov
mov
mov
mov
aaa
aaa
sub
mov
sub
xchg
pop
cltd
aam
xor
pop
jecxz
xor
in
adc
repnz
es
cmpsb
fisubrl
pop
sbb
lret
cmp
cmpsb
test
std
adc
lahf
insl
faddl
mov
sbb
inc
les
lea
andl
and
cwtl
cmp
outsb
mov
push
mov
sbb
jge
mov
lea
ds
popf
std
adc
mov
dec
push
daa
jecxz
xchg
add
out
imul
jns
call
mov
lock
fmuls
jb
adc
pop
jo
leave
clc
xchg
ds
push
xchg
scas
icebp
jno
lret
lock
mov
push
pop
and
sub
fstp
jmp
cmpsl
pop
adc
xchg
aad
fldl
jae
imul
stos
pop
push
mov
stos
daa
and
adc
fdivs
fdivr
and
pop
cmpsb
mov
test
jb
ret
pushf
inc
and
xor
mov
xchg
fsubrl
test
push
js
pop
das
lahf
fcmovnbe
cmc
and
xchg
and
dec
cmpsl
mov
cmp
xchg
sbb
mov
enter
xchg
stos
outsb
xor
in
inc
cld
shl
enter
jecxz
leave
inc
sbb
std
sbb
sub
loopne
add
ss
inc
into
lods
bound
icebp
mov
lock
adc
dec
jecxz
cmp
push
pop
aam
shrb
outsl
jmp
mov
orb
inc
lea
adc
push
dec
pusha
xor
push
rcll
mov
add
cs
sarb
mov
pop
das
sub
xor
sbb
iret
push
and
inc
mov
dec
out
bound
pop
loop
and
sub
mov
sbb
jae
mov
repnz
jb
sbb
adc
pop
clc
call
cltd
dec
movsl
fs
movsl
cltd
xor
nop
fbld
movsb
pop
cld
jns
xor
cmc
jp
rorl
lods
or
jmp
stos
mov
jnp
test
sub
xor
rcll
dec
in
mov
sarb
push
adc
jnp
js
or
push
cwtl
jne
mov
adc
mov
insb
sbb
out
lret
push
out
je
lret
mov
fdivl
inc
pop
and
das
fadds
mov
js
in
mov
mov
dec
sub
mov
cs
inc
xchg
imul
ljmp
outsb
cltd
fisubrl
mov
mov
and
and
jp
xor
inc
pop
lcall
insb
xchg
mov
push
clc
iret
xor
out
lret
cmp
adc
into
dec
insl
and
int
dec
jp
sub
ss
shrb
xor
ret
xor
lcall
xchg
xor
ljmp
outsb
xchg
call
int3
dec
stos
cmp
mov
or
mov
mov
loop
xchg
cmp
enter
int
cmp
cmpsb
add
push
inc
lods
xchg
loope
adc
lea
sbb
xor
mov
pop
jg
rorb
fs
insl
xchg
cltd
pop
cli
pop
in
repz
sbb
push
push
loop
mov
aad
loopne
jns
jnp
imul
and
cltd
push
loopne
pop
and
mov
mov
mov
movsb
or
nop
mov
sub
lods
add
dec
xchg
outsl
addr16
fdivp
cmp
push
xchg
dec
orb
mov
int3
leave
test
shlb
inc
or
cmp
or
jle
fwait
push
iret
out
pop
fs
xchg
repnz
icebp
lock
xchg
jl
dec
mov
sbb
push
jae
sub
scas
pop
xor
test
ds
cmp
aaa
cmpsb
pop
sti
in
inc
cmp
in
pop
dec
movsb
jns
jl
adc
into
jbe
mov
cmp
push
mov
mov
mov
cmp
inc
aas
cmpsl
and
xor
insl
sbb
adc
push
das
xor
dec
cld
xchg
out
leave
pop
dec
cld
xor
ds
cli
aam
lods
sub
push
jns
xchg
jb
jb
shll
fwait
xchg
mov
mov
fnstenv
jae
mov
jne
add
addr16
scas
mov
mov
lods
or
into
mov
lahf
lods
sub
stc
lcall
ds
cld
imul
jne
into
and
call
or
mov
adc
dec
xchg
cmp
fbld
movl
in
xchg
daa
repnz
push
lahf
add
movsl
dec
rcr
imul
in
push
inc
or
mov
jg
sar
or
inc
mov
inc
jp
scas
lds
in
mov
sub
cmp
pushf
mov
insl
jmp
xchg
dec
in
jae
test
xchg
insb
cmp
pop
push
xchg
cmp
jnp
sbb
clc
imul
rcr
mov
sub
into
and
testb
fwait
and
dec
out
pop
push
int
lods
ret
sbb
sub
pop
dec
pop
push
adc
icebp
stos
sbb
roll
dec
adc
cltd
mov
ds
mov
into
hlt
enter
add
mov
jbe
mov
sbb
adc
ret
sbb
das
sahf
mov
add
fiadds
xor
ljmp
cmp
cs
hlt
lea
push
inc
adc
pcmpeqb
daa
cwtl
xchg
pusha
repz
cmpsb
xorb
sarl
ljmp
adc
pop
jle
ret
outsb
outsl
dec
pushf
xchg
mov
xchg
in
pop
jmp
jecxz
outsb
xchg
aad
sbb
mov
mov
add
xor
outsl
movsl
push
cmp
sub
mov
push
cmp
inc
and
or
or
in
inc
push
in
pop
pop
imul
imul
and
enter
iret
sub
dec
lock
cmp
xor
test
fdivl
push
in
and
and
js
adc
les
int
cmp
icebp
ja
dec
in
xchg
sbb
push
push
int3
or
push
xchg
cltd
mov
sbb
cltd
fcos
andb
push
lahf
fnstcw
mov
test
push
adc
popa
sub
xor
sarb
push
scas
into
sub
mov
pop
call
jge
dec
inc
cmpsl
cltd
and
sub
and
cmpsw
dec
or
jno
xchg
dec
cmp
iret
aaa
and
sub
sbb
xor
mov
adcb
mov
movsl
inc
pop
xchg
dec
out
push
push
mov
mov
cli
test
mov
gs
das
mov
push
ret
mov
push
ljmp
in
les
mov
cmp
ret
sbb
dec
add
push
push
out
in
mov
jmp
in
popf
les
mov
enter
sub
hlt
or
cli
mov
rorl
lcall
in
sbb
pop
ss
xchg
in
add
test
or
popf
jne
mov
lea
imul
pop
rol
ja
mov
testb
or
jge
mov
shl
xor
xchg
inc
icebp
neg
push
add
nop
jno
jb
jns
shrl
push
cmp
test
or
adc
pop
in
push
rep
xor
sti
mov
cmp
aaa
dec
and
pop
mov
jl
sarl
icebp
aaa
int3
pop
push
adc
inc
and
ljmp
and
push
mov
lock
scas
mov
insb
pop
fimull
repz
jnp
add
stos
repnz
gs
jmp
jno
int
das
lret
insb
negl
pop
pop
stos
mov
prefetch
stc
inc
xlat
mov
jmp
xor
call
inc
fisubl
pop
in
out
addr16
push
cmp
movl
push
xchg
mov
jg
arpl
adc
push
pop
call
les
std
out
in
xchg
mov
jo
js
ja,pn
or
sbb
and
mov
jecxz
rorb
push
iret
add
nop
mov
sub
movsl
lret
inc
sub
push
aad
mov
dec
adc
sbb
or
mov
movb
imul
shlb
jmp
int
push
in
fnstcw
mov
and
and
adc
aam
sbb
inc
nop
jo
mov
shll
cmp
xor
call
stos
inc
aad
das
xor
mov
pop
lret
xorb
dec
dec
incl
fisttpl
push
sbb
aad
jnp
push
pop
mov
add
xor
sbb
data16
popa
dec
jecxz
xor
jnp
cmp
xchg
sti
or
lret
sbb
into
loop
mov
adc
inc
mov
adc
ds
mov
rol
push
aam
int3
fisubl
call
testb
inc
xor
aas
mov
lds
adc
flds
test
sub
lods
fwait
test
ja
ljmp
push
mov
mov
sbb
xlat
das
push
enter
inc
jl
or
xchg
fidivrl
push
mov
movsb
pop
jp
lcall
inc
cmpb
jnp
out
hlt
lods
push
push
das
and
mov
push
inc
sarl
lret
xor
inc
lahf
daa
fwait
add
lock
mov
cmpsl
lea
and
lods
xchg
andb
inc
lods
sbb
xchg
xchg
mul
ja
inc
and
push
mov
call
jmp
mov
fisubrl
icebp
test
cs
iret
int3
imul
mov
pop
and
inc
push
ret
xor
cld
pop
adc
cmpsl
dec
pop
frstor
mov
sbb
sub
mov
hlt
addr16
call
les
sbb
xor
fdivp
pop
cmc
and
cmp
mov
pop
ja
cmpsb
push
popa
add
push
lahf
pop
and
inc
jmp
cmp
lds
sti
cmp
out
jge
arpl
aas
or
and
jbe
into
xor
sub
lods
xor
leave
ss
mov
and
in
clc
push
mov
xchg
add
adc
push
or
out
gs
mov
push
sahf
adc
js
push
int3
cmp
lock
aad
sub
inc
fldenv
subb
stc
mov
lea
aas
aaa
add
lods
lret
and
test
xchg
mov
cmp
pop
dec
jns
in
mov
mov
xor
loope
fstpt
aas
xchg
jo
stos
fidivl
add
mov
sahf
pop
push
mov
test
lods
loop
push
add
cld
or
mov
add
xchg
mov
xchg
xchg
fs
mov
fs
lds
dec
dec
rcrl
or
add
mov
jle
jmp
push
ss
in
or
cmpsl
lret
sahf
cs
iret
pop
jle,pt
adc
aad
unpcklps
dec
xor
xlat
sub
mov
mov
cmpsl
js
xor
add
mov
mov
loopne
mov
fsubrl
and
dec
cltd
inc
mov
and
xlat
mov
mov
dec
mov
xchg
cmpl
adcb
pushf
mov
shl
imul
repz
mov
or
icebp
in
dec
daa
mov
fldenv
aad
jecxz
stc
push
insl
test
cmp
and
daa
in
cmpsl
in
popf
in
pop
je
mov
jl
out
pop
jle
adc
div
aas
and
push
leave
jmp
fstpt
cmc
gs
movsb
jge
ret
mov
ret
jno
int
pop
popa
xchg
movsb
jns
in
xor
sbb
xchg
sub
aaa
push
cwtl
js
dec
scas
roll
adc
scas
and
into
cmc
jmp
pop
jnp
inc
xchg
add
lods
jl
cmc
fdivrl
adc
es
scas
subl
sbb
push
push
add
pop
cmp
cmp
inc
shlb
stc
inc
in
lret
jle
cmp
loop
mov
nop
push
ret
ret
pushf
sbb
stc
push
lods
add
push
out
arpl
sub
or
xchg
pop
icebp
sub
adc
and
cmp
dec
cltd
das
stos
sub
and
mov
cs
inc
les
or
sbb
int
mov
jnp
push
mov
pop
cmp
dec
push
mov
cmp
pop
sbb
lcall
cmc
loopne
ret
add
xchg
adc
adc
das
mov
in
aad
or
pop
mov
negb
aas
sbb
pop
push
fidivl
add
test
push
mov
cmpsb
dec
idiv
int3
xor
jle
cli
jns
scas
jbe
jecxz
ja
int3
ret
sub
push
outsl
push
pop
pop
jbe
push
mov
mov
rclb
cli
xorb
mov
xor
xor
jo
sbb
ficoml
push
jbe
dec
out
imul
lcall
fdivs
push
jbe
sub
out
stos
pusha
sub
cmp
mov
push
fimull
pop
or
mov
dec
jae
mov
mov
fimull
and
lods
push
mov
and
aaa
push
sbb
xchg
shlb
sbb
test
iret
dec
enter
xorl
mov
jecxz
inc
push
mov
int
and
and
cltd
arpl
mov
lock
shll
mov
mov
fistpl
sbb
xor
sbb
push
add
inc
sbb
cmp
push
out
mov
and
cmp
mov
out
sbb
insb
mov
jp
inc
xchg
mov
and
push
jnp
pop
shrb
mov
mov
call
js
or
shrb
push
fcmovnu
push
mov
daa
pop
aas
dec
adcl
bound
movsl
push
pop
in
mov
popf
mov
push
jg
insb
gs
jmp
nop
push
and
mov
ss
rorb
out
pop
aad
xlat
ss
in
movsl
rep
cmp
leave
int
add
mov
shlb
and
shrb
jmp
lcall
iret
push
mov
stc
mov
outsb
sbb
xchg
std
push
sbb
mov
adc
pop
shl
test
dec
fisubrl
lea
lahf
sub
cmp
and
es
icebp
jae
add
adc
cmp
in
scas
xor
inc
idivb
and
sbbl
xlat
orb
nop
ss
sub
mov
insb
pop
ljmp
test
fdivs
test
cmp
jl
adc
test
fst
gs
xor
inc
adc
push
pop
subb
pop
lret
mov
or
jae
pop
repnz
lock
aaa
out
or
insl
mov
mov
iret
or
mov
mov
mov
das
push
outsl
scas
imul
mov
enter
cli
cltd
das
adc
xchg
lods
out
in
mov
push
push
test
enter
sbb
add
fisubrl
fistps
sar
icebp
sub
mov
xlat
inc
iret
push
mov
jns
or
xor
mov
and
lcall
xor
js
and
ret
pop
js
sub
lret
sub
movl
sub
pop
fsubr
inc
and
sbb
scas
test
ja
fs
int3
std
adc
lock
jnp
test
lahf
repz
xchg
sti
addr16
ffree
jg
jg
dec
test
cld
push
push
dec
das
frstor
das
je
jae
es
sbb
fldt
cwtl
in
lock
addl
ret
in
push
bound
cmpb
sahf
jnp
or
and
lahf
mov
repz
mov
xor
add
insl
jne
pop
cmp
dec
pop
hlt
sbb
xchg
jmp
pop
stos
xor
mov
lods
and
jno
mov
scas
std
lret
lock
xor
pop
mov
add
aaa
je
repz
add
stos
push
sub
imul
fsubs
inc
nop
leave
flds
xor
imul
xchg
je
ret
dec
sub
loopne
mov
arpl
xchg
and
int
jnp
bound
stos
mov
cmp
inc
enter
mov
jne
popa
push
stos
inc
out
scas
inc
pmaddwd
pushf
outsb
dec
loope
repnz
rorb
xchg
cwtl
dec
mov
es
nop
add
test
test
xlat
test
mov
or
stos
pop
cmpsb
mov
fisubrl
fst
test
cld
mov
dec
gs
fldt
jno
pop
push
nop
les
xlat
int
icebp
pop
icebp
push
sbb
and
lret
rorb
mov
int
fildl
inc
pop
push
dec
xor
ret
mov
adc
cld
fstpl
cmp
jecxz
int
cmpsb
js
mov
mov
stc
outsb
daa
and
mov
mov
mov
fcmovne
jg
add
xchg
test
or
inc
mov
int3
xchg
pop
xor
in
inc
cmp
subl
cs
leave
add
pop
push
mov
pop
ja
sub
jae
aaa
aaa
pop
mov
push
dec
repnz
add
cmpsb
js
jmp
out
scas
lret
sub
xchg
jge
xchg
mov
adc
out
jbe
addl
mov
xchg
mov
ss
rorl
xchg
sbb
cmp
insl
xchg
mov
rolb
adc
mov
fcoml
lahf
or
inc
outsl
xchg
jne
xchg
pop
lahf
dec
enter
idiv
dec
lock
aam
addb
and
mov
test
insl
stos
jae
sahf
sub
and
mov
mov
hlt
lds
push
mov
rorl
jecxz
push
fcompl
xor
jno
ret
sub
lea
mov
dec
pop
sbb
movsb
fiaddl
fucomp
dec
jne
push
sbb
movsb
popa
mov
aaa
fisttpll
imul
loopne
mov
adc
pop
add
pop
inc
repz
test
or
mov
gs
adcb
push
iret
mov
ret
lcall
cmp
pop
cmc
sub
jbe
and
push
sub
add
mov
mov
sahf
jo
push
push
and
fisubl
push
mov
js
out
mov
add
clc
lock
leave
js
jnp
rorb
mov
outsb
in
das
arpl
fimull
xchg
shrw
sbb
xor
add
orl
push
call
adc
movl
addl
movl
neg
mov
mov
decl
xor
and
mov
andl
add
mov
sub
mov
test
je
and
mov
movzbl
sub
mov
mov
mov
mov
xorl
xor
dec
add
sbb
mov
xor
mov
neg
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
adc
xor
add
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
sbb
add
mov
addl
sub
lea
addl
xor
xorl
xor
movl
cmp
movl
je
mov
mov
adc
mov
adcl
xor
adcl
add
cmp
movl
jne
subl
pushl
xorl
call
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
xor
decl
add
cmp
je
andl
pushl
pushl
xorl
call
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
xor
mov
mov
mov
mov
sub
and
mov
mov
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
andl
mov
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
jmp
icebp
pop
call
das
sbb
mov
mov
jp
add
jp
mov
imul
lock
push
dec
mov
int
mov
insb
or
mov
dec
in
or
xchg
add
aas
arpl
xchg
cmpsl
mov
fmuls
mov
daa
xchg
mov
decl
sbb
inc
xor
out
or
jae
fimull
dec
rorb
loopne
xor
xchg
loope
into
mov
stos
pop
roll
popa
mov
ljmp
rol
sub
cmpsb
lret
ret
dec
addr16
adc
pop
mov
fmull
bound
orb
inc
jmp
and
dec
fdivl
mov
loop
jecxz
mov
jl
mov
cmp
lods
shll
cld
lods
cmp
jl
clc
jb
xchg
les
sub
xchg
xchg
sti
mov
divb
xchg
mov
outsl
add
rcr
push
jae
je
pop
mov
and
popa
call
pushf
xchg
mov
mov
xchg
lods
test
popf
icebp
clc
mov
xor
gs
mov
fistl
cmp
pop
xor
xchg
and
xchg
rorb
stc
sbb
jp
je
sbb
pusha
pop
stos
lock
xor
pop
push
movsl
inc
xchg
orl
bound
push
pusha
mov
int
inc
not
inc
inc
fwait
jno
mov
cwtl
ret
jmp
or
shll
mov
xor
jle
xchg
daa
lock
xor
test
out
jno
xor
cmc
pop
ljmp
cmp
sub
aad
dec
dec
mov
xchg
cmp
lods
sbb
aas
mov
nop
cmp
pop
sub
jge
jb
fs
lea
adc
arpl
gs
mov
shlb
push
mov
xor
leave
outsb
or
xor
out
cmp
adc
push
mov
adc
sbb
pushf
xlat
mov
push
orl
cmpsl
movsl
in
stos
fwait
or
sbb
sub
and
adc
sti
pop
pop
cmp
jns
xchg
es
sbb
sbb
xor
sbb
shrl
cmpsl
sbb
sahf
addr16
push
fidivrs
arpl
xchg
subb
pop
icebp
pop
mov
cwtl
repz
js
dec
push
and
outsl
fs
add
cmp
arpl
add
jmp
int3
jo
stc
insb
jg
sbb
ret
mov
mov
push
cmp
pop
sub
call
arpl
test
push
mov
test
ds
lods
cmp
fidivrl
scas
fnstenv
add
pop
ret
and
aam
arpl
sbb
sbb
push
in
pop
or
or
dec
push
ret
in
and
mov
testl
iret
pop
or
neg
push
inc
xor
push
push
fs
add
shl
les
mov
mov
out
adc
clc
mov
jecxz
xchg
add
jmp
bnd
bound
add
cmpsb
std
sbb
mov
pusha
fstpl
cmp
js
or
and
incb
jne
inc
adc
enter
or
gs
mov
mov
lods
push
or
leave
test
addb
xchg
aaa
sbb
mov
push
fnstcw
and
fwait
cmp
int
ss
shll
adc
enter
adc
mov
outsb
push
ret
pop
mov
sti
mov
sub
or
movsb
sub
iret
and
adc
repnz
pop
mov
popf
out
dec
rorb
cmp
and
in
mov
adc
jmp
int3
push
popa
mov
fadd
das
xor
adc
fnsave
cmpsb
add
notb
sarl
or
data16
and
loopne
mov
filds
nop
jne
mov
cmpsl
add
and
ret
lds
insl
out
in
imul
ja
or
decl
repz
mov
movsl
popa
les
insl
fsubs
mov
cld
cmpsl
mov
add
pop
aas
dec
icebp
ret
push
add
into
mov
rcrl
int3
fwait
adcb
in
push
inc
pop
mov
les
push
push
push
sarl
test
sub
nop
xor
orb
push
sub
popa
mov
jge
sbb
insb
pop
loop
mov
cmpsl
test
inc
xchg
dec
jg
push
rclb
xor
jge
std
push
mov
les
jbe
jge
adc
push
dec
fmul
jb
maskmovq
xchg
push
pushf
arpl
push
ljmp
inc
addl
push
sarl
hlt
cli
shrl
or
xchg
insl
jmp
das
insb
popa
push
add
divl
fcoml
outsb
pop
sub
and
push
jnp
mov
test
add
out
dec
fs
out
jge
pop
or
cwtl
rcr
movsb
scas
in
sub
rcrb
xlat
xchg
push
mov
fs
insb
ss
jno
js
test
in
pop
jg
cs
shl
fs
call
outsl
xchg
fwait
icebp
stc
movsb
sbb
mov
jmp
popl
xor
fadds
ret
push
lods
sub
cwtl
xchg
les
cli
or
mov
push
data16
das
sbb
out
cmp
rcrb
mov
push
cld
inc
jns
arpl
jl
push
repnz
and
cmc
out
push
xchg
push
jmp
dec
mov
lock
push
xor
dec
fnstenv
movsl
jae
mov
xchg
outsb
dec
popf
push
jecxz
or
dec
mov
mov
sub
iret
mov
daa
sbb
daa
sub
repz
in
sub
mov
cmpsl
adc
push
cs
push
into
pop
mov
xor
jecxz
fsubrs
push
sub
sub
les
adc
inc
sahf
sti
mov
aad
sahf
in
or
jne
gs
jnp
insl
mov
scas
and
add
sahf
mov
fs
je
mov
jne
or
outsb
lret
lret
add
sub
outsl
xor
imul
mov
xchg
div
mov
mov
fs
mov
add
cmp
jl
outsl
push
mov
js
and
lds
data16
mov
loope
mov
sub
sbb
in
jg
sbb
aaa
jmp
rcrb
or
xlat
pop
jbe
sub
dec
out
pop
int3
data16
push
push
jns
leave
and
rolb
dec
pop
clc
adc
pop
movsl
mov
pusha
push
pop
lods
scas
add
fsubs
mov
movsl
inc
jl
ficompl
cbtw
or
mov
xchg
je
dec
mov
test
out
fs
hlt
adc
in
insl
enter
ss
hlt
inc
je
pop
cmp
repz
ret
imul
cltd
popa
lcall
and
dec
cmpsb
stos
jp
imul
cltd
sub
into
pop
in
pop
std
lahf
sbb
mov
mov
xchg
stos
ds
jne
and
sbb
and
cmp
into
jnp
xchg
xchg
xchg
sbb
xorb
jns
cli
mulb
scas
xlat
aaa
outsb
sahf
adc
stos
pusha
lods
add
and
fldenv
sub
or
loop
and
inc
fdivrl
push
les
push
mov
xchg
adc
lcall
enter
lea
xchg
lcall
jae
fstpl
aam
enter
pop
popf
fbstp
fwait
ss
or
test
fldt
inc
mov
xor
pop
xor
or
shrl
cmc
lret
popa
pop
outsl
pop
aad
aas
cmp
int
js
test
xor
mov
add
push
fidivrl
cmp
jno
and
xor
aam
add
and
pop
adc
mov
rol
fstl
add
inc
adc
inc
cmp
mov
xchg
scas
sbb
adc
cwtl
dec
sbb
xor
inc
call
loopne
push
in
dec
mov
push
dec
or
sbb
es
xor
fisttps
mov
mov
dec
or
mov
dec
xor
or
jg
pop
leave
iret
xchg
dec
xor
mov
in
xchg
pop
insl
jp
in
cmp
fisubrl
pop
mov
dec
push
push
out
mov
inc
xor
add
shlb
cmp
ja
pop
pop
das
aam
cmpsb
sbb
dec
sti
xchg
jl
sub
sbb
sub
push
jl
jne
incb
imul
pushf
push
push
test
mov
inc
push
push
pushl
sahf
movsl
je
xchg
adc
jbe
mov
jae
ljmp
fsubs
fcoml
inc
out
or
or
mov
sbb
fldcw
fstp
sar
nop
pop
push
xor
cld
clc
dec
std
and
push
mov
fidivl
fs
mov
rorb
stos
test
mov
push
pop
jbe
mov
inc
lock
add
pop
xchg
mov
sub
push
sub
mov
fwait
mov
xchg
gs
aaa
push
push
mov
loop
mov
hlt
xchg
add
pusha
xchg
push
lods
cs
mov
stos
jb
jecxz
sbb
sbb
es
mov
mov
mov
filds
test
mov
push
shrb
lahf
sbb
xor
and
out
dec
pusha
iret
jg
imul
or
jbe
sub
mov
dec
xchg
fstl
ficoml
repz
mov
xor
push
jl
hlt
outsl
decb
jge
and
xchg
xor
subl
out
mov
xor
xchg
push
inc
leave
xchg
imul
fs
imul
cmpb
shrb
bound
ljmp
push
mov
in
test
mov
inc
inc
mov
imul
cmp
leave
sub
push
xchg
stos
sbb
cmpsb
xor
add
push
fildll
arpl
push
repnz
ja
pusha
mov
and
fnsave
or
mov
and
adc
push
mulb
sbb
jp
xchg
test
sbbb
in
gs
dec
popa
mov
fiadds
jecxz
mov
sbb
je
pushf
daa
and
sub
popl
adc
cld
jbe
dec
push
aaa
sbb
mov
arpl
data16
sub
jns
ret
sbb
pop
fwait
xlat
mov
mov
rcll
sahf
cwtl
je
idiv
test
inc
sti
cmpsb
push
mov
sbb
mov
sahf
sahf
cli
cmp
adc
jl
movsb
dec
pop
mov
movsb
add
sbb
mov
pop
push
pushl
cmpb
je
loopne
sub
lds
cld
lret
lds
mov
adc
sbb
and
test
inc
adc
xchg
iret
push
rclb
movsb
mov
and
inc
test
push
xchg
arpl
sbb
sbbb
dec
mov
testl
cltd
inc
dec
lcall
xor
fistl
and
daa
loopne
lcall
test
repz
jne
sub
mov
pop
xor
pop
lods
or
clc
out
pop
jo
pop
add
jmp
jecxz
loopne
shl
into
into
fs
cmp
daa
push
jecxz
sub
jecxz
pop
fmul
loope
ds
mov
outsl
mov
imul
loop
call
popa
inc
add
bt
test
pusha
aad
aaa
ja
lods
sbb
inc
jo
pmuludq
jmp
in
push
lret
cmpsl
lods
add
or
imul
mov
leave
and
outsb
nop
fsts
xchg
mov
leave
imul
jo
in
imul
pop
lahf
mov
or
jmp
and
cmp
add
and
adc
and
insl
in
lret
xor
in
and
sub
pop
push
imul
adc
add
mov
fxch
push
xchg
pop
sub
rolb
imulb
subb
inc
test
sbb
loopne
sarb
inc
mov
lret
sbb
xchg
gs
mov
inc
cmp
jmp
lock
fimuls
cld
int3
subb
mov
or
in
adc
subl
jno
sub
popf
imul
inc
not
xchg
jg
push
leave
pop
andl
and
xorb
pop
rcrb
mov
push
fdivl
arpl
nop
and
outsl
sub
loopne
scas
push
stos
jg
mov
stos
gs
add
pop
sbb
test
movsl
sub
or
cmp
icebp
arpl
in
vcvtps2pd
add
leave
and
in
mov
imul
sbb
xor
movsb
ja
es
gs
xor
popa
incb
push
xchg
sbb
and
pop
mov
fistps
ret
cmp
insb
adc
inc
inc
xor
jne
inc
cmpsl
and
and
iret
mov
jl
pcmpeqb
lock
pop
push
xor
movsb
dec
rorb
or
daa
inc
inc
ss
mov
push
or
out
sub
jae,pn
mov
pop
push
cmp
or
arpl
and
sub
push
ror
or
movsl
aas
std
cltd
add
dec
daa
and
cmp
push
or
cmpsl
je
iret
jb
push
pop
or
lret
pop
dec
mov
push
fs
decb
push
jo
cmpsb
dec
add
dec
jl
push
inc
in
cmp
or
mov
and
lea
push
movl
dec
popa
rolb
cli
rol
roll
or
sub
int3
stos
inc
or
dec
bound
pcmpgtw
lock
push
and
xchg
repz
mov
adc
or
leave
mov
cmc
dec
ljmp
pop
fdivl
lcall
lods
push
jle
lret
std
jnp
xchg
adc
mov
or
mov
js
jae
jns
xchg
sbb
es
push
pop
pop
jo
ja
or
adc
imul
add
test
pop
fmuls
adc
add
js
jle
sbb
lret
std
cmpb
xchg
xchg
mulb
mov
sarl
mov
xor
loopne
sti
adc
xchg
adc
push
inc
cmp
loop
cmpsb
ja
je
aam
mov
shrb
mov
xor
jns
lods
cmc
roll
ja
xchg
incb
xlat
mov
xor
jae
div
or
fidivl
and
loope
dec
pop
pop
or
fimuls
and
xor
cmp
cmc
jge
cs
sbb
sub
js
adc
mov
cmc
or
imul
dec
push
sub
push
mov
sahf
mov
test
xchg
test
data16
fstps
faddl
sbb
inc
lods
mov
xchg
mov
es
scas
jns
adc
or
sub
or
xor
mov
data16
jne
add
imul
xchg
popa
xchg
data16
shrl
sbb
push
dec
pop
push
and
loop
int3
bound
pop
jp
dec
daa
ss
adc
adc
pop
addr16
jo
or
mov
mov
fidivs
lock
aaa
jg
lret
inc
cmp
loope
and
and
push
mov
xor
and
aam
sub
xor
push
sub
jle
movsb
mov
das
inc
mov
out
sub
leave
mov
inc
movsb
cmp
je
add
jl
dec
jbe
pop
mov
outsl
jg
inc
cmc
cmp
jno
mov
push
dec
pop
sbb
pop
and
push
lods
subl
jae
dec
mov
or
inc
pop
pop
sbb
aas
jle
xchg
push
inc
push
mov
mov
aam
xor
movsb
into
or
xor
rorl
adc
mov
cwtl
add
pop
sarl
push
aad
add
jle
ds
stc
xor
push
cltd
lret
xchg
adc
sar
ret
xor
lret
mov
aaa
sub
cltd
lods
pop
mov
push
sti
push
lds
jl
push
inc
sbb
sti
jbe
fsubs
or
inc
insl
adc
push
aam
cmc
xchg
dec
and
imul
in
pushf
rorl
int3
cs
push
aad
mov
aam
adc
andl
inc
leave
test
mov
and
mov
jle
xor
push
rcrb
popa
mov
ret
fdivrs
dec
fistl
mov
and
xchg
mov
pop
xor
xor
cwtl
pop
dec
mov
imul
rcrl
incl
pop
and
sub
shrl
adc
mov
mov
test
push
out
fs
scas
sub
fbstp
and
jecxz
test
mov
or
cmp
scas
int3
test
jp
xor
rcr
test
add
sub
mov
xchg
cmpb
mov
xchg
xchg
add
fstpl
or
and
dec
xor
aaa
mov
out
mov
outsb
cs
xor
adc
push
sub
or
cmp
lock
or
mov
xor
mov
or
mov
test
stos
dec
mull
jg
inc
rcrb
lods
leave
or
jmp
les
sub
fidivs
mov
cmc
in
pusha
lds
mov
pop
push
sub
movsl
mov
out
mov
filds
jnp
out
imul
cltd
xor
fldl
inc
xor
test
push
ja
add
dec
sbb
lea
or
pop
fiadds
mov
xchg
mov
sub
daa
aad
pusha
fstpl
gs
pushf
outsb
lcall
or
lcall
fwait
aam
rcll
sbb
cmp
insb
loope
cmc
cmc
mov
fldl
dec
mov
cmpsl
sub
xchg
aaa
adc
popa
stmxcsr
cmp
sub
or
sub
leave
cli
mov
outsb
add
push
daa
adc
in
inc
mov
sub
call
jecxz
inc
pushf
xor
lods
div
push
xchg
test
xor
mov
jnp
or
outsb
jp
test
cmp
lret
mov
push
in
pop
daa
push
cli
mov
pop
mov
mov
pop
push
pop
icebp
cmp
ja
fisubrl
test
inc
xchg
jno
inc
xchg
inc
mov
mov
jb
and
ja
push
clc
call
jae
add
cmp
dec
cmp
in
cmp
jae
xchg
xchg
insb
pop
rclb
in
adc
int3
mov
sti
movsl
mov
int3
pop
lods
mov
insl
and
or
jmp
cs
adc
jmp
pop
inc
es
cmp
pop
rol
sub
in
xchg
clc
movsl
lret
movsl
ret
jle
aam
mov
fs
repnz
xchg
rcr
mov
ret
adc
je
loop
xor
sarl
xor
sub
mov
mov
push
scas
lea
lds
sbb
mov
inc
pop
cmp
add
lcall
cld
xor
and
adc
sub
cld
inc
movsb
pushf
aad
add
clc
sbb
pushf
pop
pop
and
lcall
xchg
jno
out
jmp
sbb
mov
lea
cmpsb
mov
addr16
pushl
jg
pushf
paddusb
pop
addb
test
lret
lds
mov
in
nop
sub
or
pop
mov
or
ret
hlt
sahf
pop
mov
add
fs
inc
arpl
mov
sub
xchg
pop
mov
lods
mov
pusha
inc
xchg
push
test
adc
nop
mov
push
sbb
push
xchg
and
mov
add
mov
pop
xor
jb
push
jge
jne
dec
dec
ja
push
dec
sbbl
cmp
icebp
xchg
xchg
mov
andl
es
mov
aad
mov
pop
xorl
mov
out
push
jle
out
mov
jae
out
sub
add
cmp
rcrb
ret
mov
adc
inc
push
lahf
push
test
call
in
jg
lret
notb
sbb
outsl
sbb
jg
push
test
mov
dec
xchg
sub
enter
xchg
lods
rcll
fstl
sub
scas
mov
pop
int
test
int3
push
mov
add
mov
jnp
scas
in
dec
dec
or
scas
sub
sbb
jbe
jmp
sub
cmp
cwtl
adc
loopne
outsb
lods
shll
jns
mov
movsb
sub
dec
iret
scas
jns
andb
imul
sub
jl
std
push
lcall
insl
outsl
push
in
es
xor
fidivs
lds
cld
pop
mov
mov
dec
inc
sub
inc
movsl
insb
ret
add
pop
scas
adc
ds
jb
test
dec
cli
jg
ja
or
scas
popa
pushf
cld
or
mov
clc
jge
popf
sahf
inc
ja
xor
ja
cs
adc
xlat
mov
pop
addr16
imul
aas
push
inc
jl
subl
inc
ss
out
add
push
mov
sbb
mov
movsb
js
xor
mov
mov
mov
jl
or
enter
pop
mov
fsubrl
aaa
xchg
je
enter
push
sub
out
push
sub
xor
push
adc
add
mov
jle
cmp
dec
or
ds
jo
mov
dec
js
xchg
cli
mov
cmc
mov
mov
inc
sarb
adc
and
mov
add
cmpsb
fcompl
das
jl
push
ja
mov
movsb
push
out
inc
lods
jnp
je
fadds
mov
xchg
fldt
jo
int3
aas
leave
lods
push
in
mov
dec
push
cmp
xchg
clc
push
push
adc
xchg
push
loopne
fsubl
outsl
sub
jmp
mov
std
daa
out
cmp
xchg
jge
pusha
and
ss
adc
xchg
cs
xor
pusha
sub
fwait
inc
adc
and
mov
popf
test
push
dec
cwtl
fisttps
jle
dec
adc
dec
push
sub
add
xor
in
sub
in
xor
adc
jmp
frstor
mov
push
test
mov
int3
cmc
fadd
sub
fdivrl
ss
sbb
mov
jns
push
insb
cmpsb
sub
adc
leave
js
cli
mov
out
in
mov
stos
jns
lock
xlat
loope
pushl
in
mov
dec
or
inc
ret
test
test
fwait
inc
inc
dec
out
xor
push
push
and
sub
iret
inc
cmp
ljmp
bound
xor
arpl
mov
add
add
addb
and
and
orb
sarb
jg
nop
divl
mov
sti
stos
mov
movsb
lods
cmc
stos
in
out
fs
lds
cmpsb
dec
popa
rorb
andb
sbb
mov
lcall
cmpsb
pop
pop
test
jnp
jns
jae
ds
pop
outsl
mov
or
xchg
scas
sbb
out
cs
inc
dec
jno
xchg
xchg
mov
stos
add
clc
dec
inc
sahf
add
shll
imul
or
mov
fdivr
stos
adc
or
mov
ret
push
outsl
and
add
dec
test
test
cpuid
fcoms
mov
add
std
cwtl
mov
or
push
jle
push
fidivs
loop
mov
xor
pop
lret
sar
and
pop
test
mov
pop
hlt
sbb
mov
insl
mov
jo
mov
jmp
das
add
out
cld
mov
jecxz
inc
out
add
push
clc
test
mov
mov
sbb
std
nop
sub
xchg
es
fiadds
xchg
leave
xchg
inc
test
jno
out
dec
push
leave
std
loop
mov
std
outsl
rcll
pop
and
sub
or
add
orb
faddl
mov
push
data16
loopne
mov
in
hlt
mov
mov
test
push
stc
cmpsb
sbb
hlt
dec
mov
iret
fs
bound
fdivrp
vmwrite
loopne
leave
cmc
jecxz
fcompl
inc
push
mov
ret
div
mov
sbb
out
pop
das
hlt
cmp
cmp
je
xchg
loopne
cmp
stos
pop
ds
lods
leave
repnz
out
shll
fimull
push
push
mov
jbe
aaa
push
mov
nop
push
notb
lret
movl
int3
jne
dec
adc
mov
fs
jmp
pop
shll
jg
cmp
xchg
ss
jmp
jmp
mov
mov
xorb
out
repz
push
sti
mov
sahf
cmpsb
sahf
nop
arpl
ss
or
mov
nop
scas
out
jno
shl
loopne
dec
dec
or
sar
cmp
lahf
inc
jne
outsl
out
dec
test
out
push
ljmp
pushf
ja
call
sub
or
js
pop
adc
mov
rcll
or
push
and
or
scas
data16
out
or
mov
or
lds
sub
push
add
pop
xchg
pop
rcr
stc
mov
cltd
ljmp
pop
sub
movsb
aas
addr16
clc
adc
push
stos
loopne
xor
bound
stos
push
xchg
clc
shrl
andb
inc
mov
mov
adc
stos
stos
adc
scas
jecxz
jns
sub
sar
decl
sarb
ret
sub
push
jne
arpl
mov
cli
xor
jne
cmpsb
adc
jmp
jge
push
lods
nop
dec
int
add
nop
lods
enter
or
pusha
std
in
scas
data16
aad
push
movsb
push
cmpsl
xor
pop
dec
mov
xorl
into
xchg
or
clc
arpl
jae
mov
dec
xchg
mov
jmp
cmp
xor
lret
cmp
mov
sbb
nop
jae
pop
rolb
sahf
inc
or
and
pop
sbb
add
or
jge
testl
sarl
mov
cmp
jbe
xlat
push
mov
mov
rcrl
and
jmp
add
test
or
push
inc
push
out
cmp
outsb
ret
add
gs
xchg
out
dec
test
cmp
pushf
mov
add
jle
mov
inc
mov
mov
push
mov
xor
fcompp
push
dec
aas
cmp
fcompl
jecxz
xchg
add
inc
andl
inc
and
leave
sbb
clc
cwtd
rorl
sbb
outsl
inc
out
rcrb
pop
test
out
mov
into
scas
push
xchg
mov
xchg
int
xorb
xor
sahf
pop
dec
cmc
sbb
pop
cmp
mov
repnz
mov
mov
xchg
mov
loop
popa
es
rorl
adcl
adc
out
mov
add
adc
nop
andb
adc
sbb
sbb
pop
inc
push
pop
pop
sub
or
inc
sbb
dec
mov
push
push
jge
dec
imul
inc
movhps
fstl
mov
mov
inc
pop
cmpb
sbb
das
jns
dec
lret
fisubl
std
lret
pop
sub
push
and
mov
xchg
xchg
cltd
add
push
add
fidivrs
repz
mov
push
add
or
cli
lods
cltd
and
mov
fdivs
ret
mov
ret
mov
lods
outsb
push
ret
inc
jb
dec
push
sbb
sub
pop
sarl
std
icebp
sub
pop
jne
mov
dec
sahf
xchg
std
mov
cs
push
out
xchg
scas
jg
pop
ja
fwait
sahf
jnp
je
outsl
jb
push
in
xor
xchg
xlat
test
mov
aas
in
add
lods
xor
insb
inc
sarb
inc
sub
jae
fistps
std
dec
adc
jecxz
push
cmp
lret
xor
cltd
cli
lcall
sub
lods
adc
les
or
into
adcb
testl
xor
xchg
push
dec
dec
insb
adc
jo
leave
sub
mov
pop
push
out
cs
movl
scas
out
xor
loope
shlb
int3
push
fdivrp
lods
jle
lret
jmp
fwait
cmp
xor
in
gs
rorb
and
in
cltd
in
fcoms
dec
cmp
arpl
and
out
jg
or
sahf
jg
dec
xor
es
sub
jae
cmp
mov
mov
lea
insb
popf
inc
mov
ficomps
icebp
ja
movsl
enter
aad
xchg
lret
lea
add
inc
and
and
or
inc
push
fs
mov
jge
adc
ljmp
loope
push
popa
sub
xlat
cld
lds
pop
mov
mov
xchg
xchg
dec
sub
ficompl
jno
in
outsb
aaa
mov
jns
enter
push
enter
xchg
sub
push
or
sti
aas
pushw
adc
fidivrs
push
push
xor
aam
xor
sti
mov
push
mov
or
pop
and
inc
push
mov
cs
inc
or
xchg
cmp
xchg
gs
fwait
repz
mov
insl
lret
lods
js
mov
push
or
pop
jle
mov
and
xor
repz
scas
sub
mov
jo
daa
rclb
addr16
cld
xlat
das
adc
mov
mov
decb
pop
cmp
sub
loop
push
mov
shlb
push
push
dec
fwait
ljmp
fcompl
cmpsl
mov
mov
lea
jne
mov
adc
lods
imul
pushf
loopne
and
or
movsb
stos
ja
hlt
movsb
imul
das
xchg
mov
push
sbb
push
jle
cli
mulb
mov
enter
push
repz
std
pop
loope
dec
shlb
movb
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
jmp
incl
je
fs
loop
add
add
jp
mov
enter
pop
adc
dec
es
and
sbb
fadds
lods
mulb
mov
popa
pop
sbb
and
es
pop
mov
inc
push
inc
ret
test
rorl
subb
ja
inc
std
cmc
xchg
in
sbb
fsts
adc
ljmp
roll
popf
cmp
out
adc
movsl
inc
sbb
seto
inc
fdivs
push
cmpsb
out
mov
or
popf
cmpsb
mov
jl
sti
test
lods
mov
jae
push
mov
jmp
pop
or
sarb
int
andl
mov
punpckhdq
mov
xchg
or
inc
sbb
jns
dec
cs
xchg
std
mov
filds
insl
fmul
dec
push
mov
mov
cld
fmul
fwait
mov
xorb
jl
aaa
or
mov
rclb
test
jg
mov
push
cmp
sbb
std
loope
sub
adc
iret
push
in
add
out
fldt
mov
dec
or
repnz
outsl
data16
das
sbb
stos
cmp
test
es
mov
mov
xchg
and
jno
lea
add
stos
push
sbb
mov
and
data16
adc
sahf
shll
aam
adc
pop
lods
cmp
mov
dec
or
sub
xchg
sub
es
push
scas
inc
mov
mov
lret
ljmp
pusha
iret
mov
jns
or
cmp
jnp
shr
xchg
mov
sub
arpl
clc
scas
pop
jmp
stc
xchg
inc
sbb
arpl
mov
pop
mov
movsb
loop
mull
sub
gs
cmc
subb
testl
mov
fcmovnu
add
lahf
and
mov
xor
daa
sbbb
jmp
jmp
xor
push
in
or
dec
inc
jl
adc
sub
push
loop
inc
push
fstpl
fstp
dec
addr16
add
out
mov
sbb
sbbb
loop
inc
lock
dec
es
mov
lock
mov
fstpt
dec
bound
out
adc
sub
dec
aam
mov
add
dec
in
stos
jle
dec
fcmovnbe
dec
cmp
aas
dec
imul
jno
push
ds
pushw
gs
lahf
das
sar
push
mov
in
adc
mov
push
loop
inc
mov
mov
jecxz
ret
loopne
jb
jo
loopne
loopne
loop
in
outsb
jmp
sti
testb
std
mov
mov
fimull
stc
test
mov
dec
mov
add
out
stos
xchg
js
rol
aad
subb
test
adc
mov
test
les
push
and
cmc
fs
cmpsb
data16
mov
outsl
es
pop
outsb
out
fcoms
sbb
cmp
loope
test
mov
rcrl
cmp
ret
or
out
dec
cmp
adc
mov
shlb
repnz
pop
sbb
push
lret
mov
sti
sahf
sbb
scas
dec
adc
sbb
test
sub
or
sub
mov
maxps
imull
cltd
mov
sbb
cmc
ja
mull
dec
mov
xchg
xchg
or
cmpsl
add
xchg
push
sbb
ja
cmp
sbb
pop
hlt
and
add
xor
gs
or
aam
repz
hlt
sub
jb
lret
add
xchg
movsl
loope
dec
arpl
sahf
pop
test
insl
bound
mov
fsubrs
mov
popa
xchg
sti
adc
sarl
fwait
arpl
fadds
rcll
sahf
addr16
jae
imul
sbb
lret
scas
mov
pop
jle
pushf
inc
push
in
mov
mov
shll
jnp
xchg
push
xchg
insb
sbb
in
push
or
jne
loopne
jo
shlb
test
daa
or
ja
inc
test
aas
lahf
icebp
loopne
test
fistpll
pusha
pop
loop
enter
push
std
sbb
insl
pop
adc
push
inc
rclb
out
movsb
pusha
inc
in
in
cmpsl
dec
mov
movsl
sub
xchg
out
shrb
test
in
pop
pop
aam
push
mov
loope
and
fmul
push
pop
into
cmp
ret
push
call
imul
out
js
sbb
lret
or
jno
ret
fwait
shlb
or
ljmp
imul
push
ljmp
mov
mov
mov
jp
mov
or
daa
lds
add
sub
inc
and
jmp
push
stos
dec
nop
add
dec
cmp
mov
in
sahf
ja
pop
cmc
jecxz
movsl
enter
test
xorl
imul
sbb
push
push
lret
dec
mov
iret
cmp
mov
out
fildl
out
sub
shrl
and
pop
jno
xchg
ljmp
cmp
es
sbb
test
cli
sti
xchg
inc
cmpsb
jg
fcompl
mov
lcall
and
aaa
jmp
addr16
adc
adc
dec
movsl
cmp
sbb
pop
pop
mov
mov
dec
jae
imul
call
bsf
jp
out
flds
int3
mov
inc
inc
pop
lods
ret
jl
std
cmc
lret
and
xor
mov
jb
jbe
push
push
std
push
adc
daa
pop
mov
cs
xlat
lea
inc
faddl
lret
js
ja
or
cmp
mov
ret
movsb
push
js
test
jae
mov
mov
mov
cmp
ds
mov
paddusb
stc
sbb
cmpsb
lcall
dec
pop
sbb
adc
sub
subb
pop
vmovntps
cmp
inc
mov
mov
push
mov
fimuls
test
mov
dec
inc
lds
popa
dec
xor
push
jecxz
cmp
ret
subl
xchg
lock
inc
fs
inc
lret
jo
faddl
cmp
sbb
inc
jae
cmc
xlat
jg
sub
arpl
int
cltd
inc
lods
rcrl
mov
leave
imul
iret
mov
paddsb
mov
not
cli
in
or
cmpsl
daa
cmpsb
push
stos
cmc
call
ret
out
les
add
loopne
fisttpll
sbb
test
test
xor
jne
fsubrl
cli
and
dec
push
aas
mov
movsl
xchg
popf
lds
mov
mov
adc
inc
popf
sbb
mov
es
das
jecxz
lock
popf
enter
jmp
shl
je
adc
adc
xor
test
or
call
pop
mov
test
mov
dec
bound
bound
les
shlb
xchg
mov
notl
daa
xor
int3
or
inc
push
mov
pop
jns
jle
jnp
cmpsb
add
lods
mov
dec
ja
pop
push
dec
out
shlb
dec
cmp
xchg
fsubr
add
bound
adc
fisubs
inc
cmp
jecxz
lret
pop
mov
in
pop
in
adc
mov
inc
test
arpl
leave
stc
lods
movb
xchg
addb
xor
cmp
pushf
push
cmpsl
pushf
jp
leave
inc
mov
jae
push
or
stos
sarl
lods
mov
es
sub
mov
jmp
mov
mov
cmp
aam
jbe
mov
js
sahf
lea
xlat
inc
andb
std
daa
lret
jbe
and
cmp
jno
pop
cwtl
mov
es
adc
push
inc
inc
mov
imul
and
loop
mov
mov
adc
sti
stc
nop
int
fnstenv
and
loope
fdivrl
rolb
insb
call
sbb
imul
es
decl
push
xor
lods
push
call
mov
sub
sar
rcll
pop
test
adc
out
fists
jmp
in
pop
add
jnp
pop
mov
xchg
dec
jmp
int
jg
lods
push
jge
mov
idivl
sbbl
int
ja
jg
test
pushf
push
xor
sbb
dec
sahf
dec
mov
int
lock
pop
sti
fnstsw
frstor
pop
popf
add
adc
and
pusha
or
test
mov
jmp
out
outsl
nop
sahf
xor
cmpsl
ret
enter
xchg
jae
mov
enter
dec
faddl
mov
in
jae
push
andb
cltd
mov
sti
cmp
lahf
pop
mov
jg
scas
stos
pop
sub
cmp
loope
jno
mov
pop
add
arpl
jno
inc
sbb
stos
movsb
xchg
inc
xchg
addr16
sti
stc
divl
loopne
sbb
xchg
insb
cmc
push
je
fistps
jbe
push
stc
push
xor
shlb
or
lds
mov
hlt
insl
sbbl
popf
cmpsb
dec
sub
mov
pushf
loope
loope
sbb
test
add
cltd
and
mov
clc
or
mov
inc
xlat
xor
and
xchg
push
push
adc
mov
icebp
xchg
xchg
and
pop
cmp
xchg
loop
mov
dec
fistps
cmp
xchg
jo
mov
jge
paddsw
and
xchg
xchg
lods
sub
cwtl
jae
inc
add
or
xchg
lods
or
sub
push
flds
mov
loop
cli
adcb
push
pop
icebp
jb
cmp
cld
mov
in
push
call
fadds
xor
add
jns
cld
pop
cli
mov
or
es
leave
mov
nop
xchg
fisubs
out
xchg
loopne
jnp
aas
lock
lcall
aas
add
cwtl
mov
jo
pusha
aad
testl
cmp
not
push
push
xchg
jnp
stc
or
inc
test
add
mov
jmp
mov
push
out
dec
jmp
adc
popf
cli
pop
mov
pop
scas
inc
jno
add
push
ret
fdivl
adc
imul
jo
shlb
mov
insb
mov
pop
aad
fdivrl
movsb
xlat
xchg
mov
xchg
dec
int
es
push
mov
xor
push
iret
sub
ja
or
cmp
inc
bound
and
call
xchg
ds
fisttps
add
cmp
mov
loope
insb
mov
pop
roll
cli
inc
jmp
mov
loop
in
sub
pop
cmpsl
shlb
in
xor
aas
mov
dec
in
imul
es
mov
jp
or
outsl
mov
iret
bound
adcl
cmc
call
out
mov
in
gs
insl
shrb
adc
jle
mov
mov
ret
xchg
out
and
xor
negb
jecxz
jbe
out
jecxz
rorl
cli
mov
sub
pop
jae
shll
adc
cmp
out
arpl
dec
inc
mov
loope
hlt
sbb
mov
outsb
sub
mov
repnz
lock
mov
mov
movsl
xchg
frstor
mov
sbb
pushf
jl
push
js
inc
inc
sub
sbb
xchg
mov
mov
je
popa
subb
aad
sbb
sub
jg
iret
adc
push
data16
push
int
inc
test
stc
xor
outsl
and
jmp
xchg
mov
call
push
adc
jle
aad
incl
mov
aaa
dec
mov
sbb
push
or
and
jmp
sub
gs
add
xchg
mov
inc
stos
mov
mov
sar
lods
add
xchg
push
push
and
ret
sahf
sbb
bound
stos
gs
jne
aad
mov
mov
cwtl
cmp
idivl
es
loopne
cli
clc
dec
and
aas
fmul
movl
push
xchg
sub
mov
sti
add
ret
outsl
iret
mov
sub
lret
mov
sbbb
add
mov
inc
pop
pusha
pushf
je
xorl
mov
sub
movsb
sbb
push
pusha
pop
cwtl
push
dec
daa
lds
or
fmulp
push
movsl
stos
fdivs
push
fs
inc
add
aas
pusha
and
aad
xor
lcall
push
add
adc
repnz
add
pop
das
cwtl
out
cmp
mov
jbe
stos
sub
inc
xchg
mov
aad
jecxz
mov
xor
mov
fcoml
mov
loopne
fcmove
stc
xor
lock
xchg
sbb
push
mov
loopne
mov
ret
sbb
mov
outsl
in
push
movsb
lret
push
sbb
and
pop
outsb
jecxz
pusha
push
adc
mov
push
push
cmp
cmpsl
xchg
xchg
in
push
inc
lock
sahf
int3
mov
cmp
xchg
inc
cwtl
mov
subb
out
push
mov
test
rolb
imul
xlat
fs
push
xchg
lods
xchg
or
test
mov
adc
into
dec
jns
pop
inc
daa
sub
cmp
stc
fisttpll
add
mov
arpl
inc
sar
mov
push
adcb
inc
mov
jo
adc
enter
stc
ljmp
out
das
popf
and
add
mov
rcr
cmpsl
add
mov
aaa
nop
btr
mov
out
in
pop
xor
mov
stos
shl
dec
ja
xchg
aad
add
ljmp
ret
mull
jg
out
sbb
shll
mov
fsubl
mov
jg
and
cmp
sarb
sub
enter
mov
test
jl
sub
adcb
pop
sbb
orl
adc
xchg
add
jg
dec
mov
pop
mov
mulb
jbe
adc
push
push
dec
or
mov
mov
push
xorb
xor
adc
jae
pop
sbb
mov
jp
mov
out
popa
xchg
xor
in
adc
cmp
pop
xchg
in
and
in
repnz
lock
and
add
lret
push
lods
push
jno
fcmovbe
mov
cmpsb
cmp
xor
cmp
addr16
std
xchg
mov
pop
rcrb
adc
insl
movsb
jl
aam
je
or
fwait
ja
or
enter
pop
dec
xor
push
stos
push
popa
aad
xor
xor
lock
or
push
inc
xchg
mov
mov
loop
shlb
cmpb
jno
mov
in
pop
icebp
mov
bound
int3
mov
shr
push
aas
push
push
mov
adc
ja
xlat
cmp
divb
rcll
mov
jp
test
js
stos
mov
stc
or
enter
iret
or
loopne
or
imulb
mov
pop
sub
xchg
jne
movb
mov
sbb
stos
pop
push
cmp
aas
mov
lods
jnp
pop
sbb
mov
pop
xchg
orl
inc
inc
adc
mov
adc
rcll
or
xchg
aam
jecxz,pn
and
mov
xor
mov
rolb
jno
ljmp
into
mov
or
xlat
ret
inc
push
jnp
into
ss
pop
lahf
pop
xor
add
push
shlb
loopne
add
loope
add
rclb
push
cmp
jo
xchg
inc
cs
mov
dec
inc
iret
or
into
mov
mov
cmp
sti
arpl
aam
sbb
and
in
xor
addr16
ja
xor
jnp
push
ret
pushf
repnz
pop
mov
scas
roll
repnz
push
add
fidivrs
mov
sbb
pop
fisttpl
stos
cli
fstps
testb
mov
mov
adc
push
inc
insb
scas
mov
mov
inc
add
add
aaa
mov
arpl
cmp
sti
xchg
stos
lret
popa
stos
mov
inc
push
movl
out
and
dec
adc
fnstcw
std
stos
aas
sti
jb
inc
xlat
clc
lahf
add
and
cmpsl
sub
push
arpl
pop
insb
out
loop
mov
je
push
inc
decl
repz
stc
in
dec
aaa
cmp
test
ss
cmp
push
inc
xchg
xchg
sarl
test
or
fstpt
fistpl
nop
sar
xchg
das
lock
test
clc
and
xchg
scas
push
not
call
inc
call
je
mov
pop
add
dec
out
jb
sub
xchg
ljmp
test
incl
cmc
iret
cwtl
add
les
jbe
adc
jnp
loopne
popa
sub
mov
lcall
test
sub
fwait
jo
cmpsl
and
fstpt
pop
mov
jecxz
push
cmp
adc
lods
cli
inc
les
cmc
dec
xchg
mov
ret
sub
dec
test
sbb
pushf
push
into
mov
jp
outsl
pushf
lods
jae
les
adc
jmp
icebp
fs
mov
jp
pop
adc
cwtl
push
jmp
jg
inc
mov
aas
and
jg
mov
pop
add
aas
adc
and
xchg
aam
faddl
jb
cli
lods
fnstenv
adc
xchg
mov
in
mov
sub
popl
jbe
lods
stc
sahf
add
push
lock
lret
cmc
or
push
sahf
into
ret
mov
ljmp
iret
jecxz
in
loope
or
mov
imul
or
sbbl
divb
mov
xchg
pushf
mov
mov
out
movb
xchg
xor
adc
inc
lds
addb
jae
add
test
leave
orb
mov
int
mov
mov
cmp
repz
push
js
fcoml
fidivl
flds
push
outsb
sarb
sbb
dec
push
ret
pop
adc
notl
stc
xchg
lahf
xchg
jno
lahf
cmpsl
sti
sbb
sbb
aad
out
xchg
aaa
sub
imul
mov
test
in
mov
aam
in
adc
push
cltd
jecxz
sbb
test
mov
jg
ja
out
xchg
sub
orl
shll
fisubs
push
push
outsl
lock
ja
stos
push
cmpsl
pop
outsl
shr
out
add
mov
or
mov
ret
mov
aas
daa
sti
fs
stos
xchg
push
in
mov
int3
adc
pop
or
push
push
cmpsb
lcallw
push
xchg
iret
insl
xchg
ret
xor
rcrb
cmp
loope
or
fcoml
repnz
push
hlt
movsl
outsb
lahf
jp
dec
mov
dec
test
and
jb
pop
mov
mov
jns
xor
mov
insb
imul
and
inc
fbstp
cmp
lret
or
sub
or
cwtl
into
add
xchg
ret
aad
sub
push
push
add
leave
push
pop
cltd
push
dec
mov
jb
mov
mov
cmpl
or
ljmp
lahf
mov
mov
pushf
and
xchg
inc
push
fucomip
sbbb
cwtl
dec
hlt
repnz
sbb
jg
shlb
aaa
clc
dec
fs
sarl
mov
loop
mov
lods
inc
lahf
shrb
push
lock
insb
pop
dec
ret
push
dec
add
ret
movsl
mov
cmp
inc
push
test
popa
cmp
and
in
or
je
jle
mov
xor
adc
cmp
ret
popf
repz
mov
lods
cmp
jg
scas
push
insb
mov
push
xor
addr16
dec
adcb
dec
leave
enter
pushf
mov
jle
and
out
packsswb
aad
mov
jns
sbb
cmp
lcall
enter
sarb
jae
xchg
push
ja
xor
in
mov
iret
lods
mov
movsl
shll
sub
idivb
std
fmulp
inc
stos
pop
adc
cmp
rclb
aas
adc
ss
leave
sub
popf
jbe
insb
jbe
cli
test
cmp
jne
fadds
insl
cmp
sbb
aam
int
xchg
sub
inc
rclb
push
out
aam
iret
and
sbb
and
push
xchg
inc
cmpsb
pop
xchg
inc
fimull
jne
mov
addr16
pop
cmp
xor
lahf
inc
movsb
sahf
imul
inc
or
jo
push
sub
lahf
or
sbb
or
fadd
cmc
push
iret
test
sub
test
addr16
insl
sti
xchg
pop
mov
int3
int3
fldt
xchg
cmpsb
dec
dec
jl
and
pop
movsl
divl
mov
les
push
std
fidivs
mov
mull
sti
dec
push
into
mov
jns
jmp
subb
call
add
mov
les
xor
sahf
movsb
push
mov
sbb
int
xor
cmpb
cld
and
mov
repz
dec
jecxz
fnstcw
xchg
xchg
cmp
out
stc
jle
pop
loopne
cmp
mov
xchg
cmp
in
je
sbb
dec
dec
jb
sbb
stos
cmp
jb
addl
pushl
insb
cltd
adc
movsb
negb
mov
jmp
mov
fstl
lahf
icebp
dec
adc
or
mov
nop
test
push
jmp
ret
imul
mov
daa
jmp
out
pop
jbe
cmp
les
mov
addr16
mov
dec
loop
pop
mov
sbb
outsl
fnstcw
push
push
roll
les
mov
dec
cmp
adc
xlat
push
sub
sbb
nop
iret
jnp
aaa
or
loope
inc
je
pop
icebp
pop
mov
fcoms
stos
lods
loop
push
pop
xchg
adcl
pusha
jns
cltd
jns
add
and
mov
movsb
shrl
lock
cmp
cmpsb
out
push
clc
mov
aaa
jns
fwait
and
mov
iret
aas
dec
and
data16
insb
loope
sub
shr
cmp
icebp
jecxz
mov
xorb
mov
cmp
shrd
scas
push
mov
xor
and
pop
sbb
dec
in
push
shlb
movsb
jg
call
out
faddl
test
push
dec
jo
sarb
dec
adc
mov
movsb
xor
pop
mov
mov
sbb
mov
jns
pop
movsl
cli
adc
pop
loope
dec
push
add
sub
stc
jnp
mov
jmp
xchg
and
xor
icebp
push
cmp
leave
call
std
pushf
xlat
push
xor
mov
push
sbbb
push
pop
cmpsb
push
imul
inc
jns
jmp
mov
pop
lret
jae
push
mov
push
jge
pop
call
and
insl
imul
jo
lods
das
gs
repz
xor
ss
jne
push
add
jo
filds
ja
xchg
outsb
fisubrs
loope
into
imul
sbb
inc
enter
leave
mov
xor
cld
add
mov
int3
into
push
test
out
mov
lcall
movsb
lret
or
mov
add
adc
loope
fstl
lock
pushf
fidivl
add
lcall
jns
xor
mov
or
cli
in
mov
outsl
xchg
leave
mov
push
jp
sub
sub
inc
aam
jmp
cltd
bound
outsb
fcmovu
inc
dec
fadds
pop
adc
test
sbb
cmp
sub
xchg
or
mov
mov
xchg
loopne
push
subb
pop
fmulp
jg,pt
scas
dec
add
pushf
in
mov
and
mov
outsl
cmp
popa
out
or
inc
and
subb
std
pop
cwtl
rcl
inc
pop
rolb
fldenv
jb
jecxz
fchs
fidivl
test
and
push
adc
sbb
xor
jmp
int
pop
xchg
xor
xor
lods
pop
push
into
in
aad
cltd
cs
stos
mov
clc
fadd
xchg
xor
ret
stos
lcall
insb
cli
rcll
sahf
in
jbe
cli
cmpsl
cmp
subb
fs
or
rolb
jl
in
mov
xor
sti
xchg
and
out
ljmp
mov
je
push
je
stos
dec
add
int3
jecxz
sarl
and
mov
lods
and
in
iret
jb
cs
js
dec
and
xchg
rorl
mov
in
mov
mov
movsb
pop
mov
xchg
add
and
fisubs
in
mov
scas
enter
incl
lds
dec
out
fdivrs
test
push
xchg
out
int
sbb
and
lahf
adc
cmp
pop
sbb
stos
jmp
clc
mov
incb
add
or
xor
shrb
fists
add
mov
push
icebp
jno
pop
sbb
jb
mov
stc
sub
xchg
shrb
icebp
popa
gs
fcoml
daa
xor
fsubrl
add
and
inc
andl
test
xchg
adc
call
push
xor
pop
into
insb
mov
adc
pop
insb
pop
lods
call
dec
jo
mov
mov
imul
dec
jb,pt
mov
cmp
jg
push
jle
cmp
icebp
xchg
mov
pop
push
dec
inc
imul
jbe
add
xor
out
lret
negb
sti
fimull
lock
nop
decb
scas
mov
inc
hlt
push
xchg
jb
pop
mov
mov
int3
sbb
adc
mov
cli
sub
adc
xchg
call
lret
aad
lock
aas
pop
mov
jo
imul
and
data16
jl
stc
je
mov
fsubs
jle
inc
jmp
cmp
or
push
data16
jmp
mov
mov
adc
pop
scas
pop
inc
sub
into
mov
scas
rol
mov
mov
sarb
imul
sub
sub
sub
lods
xchg
je
mov
repnz
lahf
popf
pop
jne
mov
jnp
sub
push
test
mov
test
fistpll
mov
fisubs
scas
jl
sahf
fs
fdivrl
scas
mov
fldenv
fcompl
subl
dec
fnstsw
dec
in
jp
test
mov
sbbb
adc
jae
andb
mov
add
jb
in
xor
inc
aam
int3
cmp
insl
dec
xchg
cld
xchg
iret
outsl
in
inc
mov
clc
xchg
rcrl
mov
fbld
or
cmp
and
test
ja
mov
mov
int3
in
aam
jp
xor
shrl
call
arpl
mov
push
jecxz
sbb
cmp
ja
push
sahf
sbb
sub
push
mov
pop
cltd
dec
xor
arpl
and
mov
cmp
in
xchg
xor
lcall
xchg
out
sbb
movsb
add
mov
lds
scas
pushl
and
mov
mov
xchg
stc
int3
mov
cmc
fildll
adc
into
mov
stc
jmp
dec
lods
rcll
or
insl
push
mov
test
inc
lahf
icebp
js
xlat
pop
nop
xchg
test
sbb
std
sbb
int
les
mov
add
mov
arpl
sbb
pusha
in
push
jne
aad
sbbb
lahf
ljmp
sbb
popl
mov
sbb
push
xchg
dec
push
sub
and
jo
aam
int
push
lods
jno
pop
xchg
mov
adc
es
push
inc
jmp
ret
xchg
or
lret
jl
outsb
or
xor
cmp
sbb
dec
in
mov
mov
out
jle
mov
in
jbe
out
repz
lar
cmp
stos
mov
adc
mov
jno
movsb
pop
sub
in
out
rcrb
in
add
jl
mov
add
sub
adc
les
lret
int
nop
adc
dec
push
adc
mov
add
pop
jae
dec
lods
rcrl
xor
adc
test
or
mov
sbb
insb
lcall
add
scas
mov
cltd
mov
int3
xchg
push
cmp
cmp
icebp
xchg
sub
pop
cmpsb
scas
mov
mov
addl
int
jbe
fnstenv
pop
mov
xchg
adcl
jecxz
inc
movsl
test
add
mov
fwait
jo
cmp
lret
bound
or
fsub
pusha
push
sub
xchg
mov
mov
lahf
cltd
sahf
jge
pop
call
rolb
jecxz
jbe
scas
sbb
adc
dec
fwait
pop
pop
ret
push
lods
jle
dec
or
out
and
out
scas
cmp
jbe
mov
adc
mov
mov
push
mov
ja
dec
adc
xchg
and
adc
pop
hlt
test
inc
out
xchg
cmp
mov
dec
ss
mov
test
daa
sub
das
inc
jae
lods
fistpll
and
pushl
aam
cmp
mov
lock
stos
stos
adc
or
das
sbb
xchg
adc
dec
aaa
adc
cwtl
jne
xor
daa
adc
inc
daa
sar
and
popf
aam
inc
mov
paddd
lods
push
pop
insl
mov
xlat
pop
stos
xorl
push
add
jge
icebp
jne
sbb
pop
enter
pop
stc
push
mov
jne
enter
jg
add
pop
sbb
mov
lock
push
mov
fistpll
or
lcall
xor
sti
mov
nop
js
notl
mov
adc
ret
push
add
mov
loopne
fiadds
cmpsw
dec
test
mov
push
fists
seto
call
xor
mov
push
xchg
jle
or
mov
std
dec
dec
xchg
mov
cltd
fsubrs
adc
xchg
loop
lahf
and
jp
mov
push
or
sar
xor
and
add
stos
fsubrs
xchg
mov
dec
pop
lahf
cmpsl
add
scas
aaa
and
add
movb
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
push
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
andl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jb
xor
mov
mov
and
sub
sub
mov
xorl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
sub
mov
sbb
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
adc
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
dec
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
adc
mov
lea
sbb
mov
xor
or
mov
adc
mov
addl
mov
mov
xor
sbbl
add
xorl
mov
orl
mov
mov
mov
sbbl
add
dec
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
or
mov
adc
mov
mov
xor
mov
subl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
add
mov
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
not
mov
sub
mov
mov
or
mov
xor
add
adcl
imul
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
add
cmp
movl
mov
movl
push
movl
je
sub
mov
add
dec
mov
mov
adcl
xor
addl
add
subl
imul
movl
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
jmp
xchg
rolb
jae
fs
movsb
repz
jp
in
jp
aas
mov
cmpsl
fisttpll
rcll
add
cs
fs
jbe
sbb
and
inc
adc
jb
lretw
loope
popf
fimull
int3
jbe
and
sahf
sbb
or
sti
push
cmp
xchg
pop
sbb
dec
fiaddl
inc
cmpsl
or
push
imul
bound
push
adc
fisttpll
stos
daa
pop
aam
jge
or
pop
ret
sub
in
push
lock
pop
fwait
les
lods
cld
xchg
adc
and
decl
out
cmp
pop
inc
xchg
movsb
mov
dec
inc
cmpsl
loopne
cmpsb
xchg
pop
fnstsw
pop
aas
or
push
lahf
or
bound
fisubl
pop
xlat
xchg
andl
fmulp
lret
xchg
cmp
setae
cli
inc
negb
mov
jecxz
out
add
scas
call
cmp
mov
pop
decl
cwtl
das
test
mov
jae
mov
stos
pop
inc
push
add
popa
and
shrb
dec
out
aas
sbb
shrl
cmp
push
data16
add
push
hlt
je
mov
adc
jb
movsl
mov
sar
mov
add
addr16
comiss
add
push
rorl
mov
push
jne
sub
or
push
jecxz
imul
jp
movsl
or
dec
or
cs
dec
sub
daa
cmc
scas
es
cmp
mov
add
pop
pop
cld
ret
push
dec
pop
mov
push
test
and
stos
pop
push
inc
out
fidivs
jae
dec
in
gs
xor
gs
cmp
jp
inc
sub
fwait
loope
lret
aaa
popa
ja
pop
aam
fwait
mov
push
inc
sub
les
movsl
and
popf
incl
in
sub
vpcomud
xorb
cmp
or
adc
pusha
mov
test
pop
mov
jecxz
and
addl
ds
mov
gs
in
mov
cmpsb
push
aam
lock
nop/reserved
cmc
fistpll
sub
xchg
ret
xor
loopne
rorl
and
lods
push
jmp
pusha
lods
cmpsl
in
and
jle
aam
add
sahf
xlat
dec
add
cs
or
dec
pop
insl
pop
fisubrl
fucomi
inc
fdivrs
pop
test
xor
push
out
enter
cmpsl
jmp
fcomps
mov
jbe
cmpsl
lods
ja
push
pop
lret
dec
fsubs
rcrb
inc
sub
mov
mov
mov
inc
xchg
cs
adc
gs
loop
mov
rorl
xor
insb
addb
je
pop
mov
ret
mov
mov
push
shrl
in
mov
sbb
inc
or
and
ljmp
xchg
imul
mov
cltd
cmp
cmp
lahf
fstl
jl
and
sahf
mov
push
mov
loop
fwait
sbb
mov
cmpsl
pop
sbb
es
add
inc
popa
sub
sbb
cmp
sub
xor
dec
es
out
and
clc
or
leave
add
imull
mov
daa
sbbb
movsl
cmc
and
ljmp
mov
mov
xchg
mov
rorl
lds
mov
push
je
cmc
data16
jbe
es
jb
pop
jae
mov
and
cmp
jecxz
ret
iret
stos
xchg
iret
cmp
dec
mov
or
inc
mov
dec
cmp
outsl
xchg
add
ret
lahf
jle
push
dec
repnz
arpl
mov
push
test
xchg
stos
fs
dec
in
addb
imul
popa
pop
sub
adc
inc
inc
cmp
inc
xor
call
jl
or
daa
aad
jmp
pop
ret
out
mov
sub
pusha
sti
cmp
addl
cmp
push
stc
cmp
imul
jnp
xor
rorl
mov
loope
dec
lods
dec
cmp
sub
pop
aas
pop
fdivrl
cmpsl
lret
and
adc
xchg
jp
aaa
mov
cld
jno
or
adc
adc
mov
bound
jge
dec
xchg
call
inc
sub
pop
pop
test
pop
fstpl
les
out
lcall
fnstsw
pop
add
push
daa
out
add
jo
cltd
cmp
push
xor
jg
push
movnti
lcall
lds
ret
dec
push
xchg
mov
subl
or
leave
loop
je
pop
shll
pop
pop
push
inc
aam
inc
add
rolb
clc
dec
xorl
adc
mov
push
xchg
jne
add
cmp
lock
ds
sbb
xchg
cmp
jp
fs
push
add
push
mov
insl
inc
imul
paddw
lahf
in
clc
sub
sbb
adc
mov
stos
pop
mov
gs
add
add
sub
mov
andl
cmp
push
push
or
pop
cmp
or
stos
fnstcw
fistps
dec
stos
mov
xchg
jbe
mov
aas
dec
loope
cli
push
xchg
xchg
scas
sarl
ja
daa
jbe
jbe
sti
out
inc
aam
enter
ror
dec
add
pop
cmpsb
fimull
inc
xchg
or
pop
test
sbbl
nop
sbb
aad
mov
push
sti
cmpsl
lods
cmp
fcomi
aad
cmp
mov
or
inc
pop
es
add
sub
sub
loope
mov
sbb
mov
jge
push
push
shlb
packuswb
xchg
jecxz
jo
repnz
mov
cwtl
hlt
sbb
insl
adc
mov
pop
or
xchg
rcrl
dec
insb
or
push
add
js
sub
cs
popa
and
in
aas
lahf
add
or
and
shrb
shll
jle
mov
call
xchg
push
adc
dec
jo
pop
cmc
push
das
adc
dec
adc
leave
sub
test
out
jne
dec
push
stc
sub
push
jb
je
outsl
mov
xor
push
fcomip
int
and
or
leave
xor
jae
inc
lods
ficoml
leave
bound
add
jecxz
adc
js
les
add
mov
nop
cmpsb
stos
leave
dec
lcall
xchg
xor
jmp
xor
cmp
jp
xchg
push
insl
mov
cmp
sbb
scas
add
sbb
insb
inc
rcll
stos
pushf
ljmp
pushf
and
inc
test
test
cmp
adc
xor
lock
lock
movsb
cmpsl
ja
jns
scas
pop
flds
mov
outsl
test
mov
in
mov
pop
lea
adc
sub
movsb
add
cmp
fmull
pop
fmull
fildl
jl
adc
jmp
xor
stos
popa
jp
out
sbb
or
loop
inc
pop
mov
jne
clc
ja
pop
xchg
lds
push
sub
jne
mov
out
cmpsl
add
xchg
shlb
imul
sbb
and
jecxz
cmp
cmp
sti
mov
int3
aad
mov
mov
or
mov
jo
sub
outsl
inc
inc
cmp
int
ljmp
mov
or
pushf
sub
imul
mov
xchg
and
lahf
js
loop
push
dec
jle
cwtl
push
and
inc
fidivrl
and
jle
ret
jno
dec
xlat
popf
adc
and
pop
lods
mov
or
sub
xor
pop
sub
sbb
push
fldcw
jp
mov
inc
cmp
dec
jg
adc
int3
insl
rcll
and
icebp
mov
pop
pop
lods
adc
jecxz
mov
arpl
add
cld
ret
mov
jns
xchg
push
or
mov
xchg
dec
dec
addr16
adc
out
pushf
lods
ret
cmp
or
movsb
push
jo
lar
mov
mov
sbb
and
out
cwtl
push
mov
int
orl
pop
pusha
pushf
add
std
dec
cltd
stos
lods
add
rorb
or
mov
lcall
out
movsb
mov
dec
and
gs
jae
andl
mov
sub
cmp
jecxz
sar
out
jecxz
jle
iret
ret
xchg
push
insl
addl
stc
push
adc
pop
cmp
in
pushf
sub
mov
rcll
out
std
out
lea
dec
cmp
and
and
addr16
fwait
stc
dec
or
pop
pop
sbb
push
dec
test
mov
cmp
pop
cwtl
sbb
ja
push
faddp
mov
lods
or
mov
leave
negb
fisubrl
mul
mov
arpl
push
in
mov
cmp
jecxz
jbe
iret
xchg
lods
lcall
mov
movsb
lods
loopne
ja
jl
inc
cmpsb
sahf
fwait
adc
xchg
cmc
mov
flds
xor
inc
mov
pop
shrl
xchg
data16
lret
cltd
push
js
mov
sahf
adc
sbb
sbbb
dec
push
hlt
sarl
jmp
js
repnz
sbb
iret
jne
jae
imul
or
inc
in
pusha
test
pop
sub
jle
enter
nop
out
push
stc
leave
test
add
mov
sub
sbb
push
inc
daa
add
dec
lret
nop
fwait
inc
lods
add
popa
rorb
add
icebp
cmp
lods
sub
arpl
push
mov
loope
push
or
movsb
nop
shlb
sub
push
fdiv
pop
or
or
inc
cli
mov
leave
addr16
lds
sbb
or
mov
cmp
add
sub
cmc
dec
cli
dec
adc
pop
pop
sahf
dec
cmpsb
sub
out
cmpsl
out
fcoml
cwtl
data16
mov
dec
outsb
dec
mov
scas
xchg
or
in
cmp
hlt
mov
ret
aaa
pop
xchg
adc
mov
sub
cs
sbb
or
pushf
loope
test
cwtl
pop
scas
add
lods
rolb
bound
mov
jecxz
lea
cmpl
or
inc
sbb
rcll
sub
pusha
adc
popa
data16
jne
ds
mov
xor
fmulp
push
jmp
push
mov
sbb
shrl
dec
mov
shll
inc
mov
jge
sbb
cmp
imul
les
out
jl
jle,pn
jne
inc
inc
jp
negl
lds
popf
icebp
fdivrl
int
push
divb
decl
add
push
jecxz
aad
mov
mov
adc
sbb
and
ja
pop
mov
inc
add
ret
adc
dec
lcall
xor
shrl
xchg
das
mov
pop
fistpll
lret
xor
jns
add
sbb
push
cli
sarl
and
push
adc
or
add
je
push
js
mov
addr16
es
xchg
aam
out
mov
repnz
icebp
sbb
lock
xor
je
es
xor
jbe
jno
fs
call
cmp
fucomp
pop
in
cmp
jmp
xchg
or
or
cld
jmp
sub
fdivrp
xor
out
mov
mov
mov
pop
push
out
mov
mov
ss
xlat
xchg
add
xchg
or
cmpl
pop
pop
mov
inc
inc
jb
add
inc
mov
cmc
movsb
add
shll
jmp
pop
xor
fcmovnu
aaa
mov
bound
fs
popa
and
negb
loopne
sbb
sbb
movsb
push
or
xor
cmpsb
xchg
push
add
pop
fidivl
popf
rcll
add
pop
in
arpl
in
mov
dec
mov
shlb
shrl
mov
aad
cmp
rolb
out
cmc
sbb
icebp
das
sub
jmp
aas
adc
and
pop
adc
or
or
aad
pop
stos
cmc
repz
mov
movsb
test
hlt
sub
jnp
mov
scas
imul
pop
push
test
or
ja
jno
lds
xchg
pusha
and
xor
jmp
cmpsb
aaa
es
outsb
jb
rorl
inc
leave
ljmp
add
sti
mov
hlt
pop
cmp
inc
out
adc
xor
push
mov
loope
jp
ffree
dec
jl
dec
repnz
push
jp
mov
xlat
cmp
mov
outsb
enter
inc
pop
and
dec
adc
js
insb
outsl
je
inc
imul
inc
loop
jle
or
lea
mov
test
loop
aad
xchg
popf
lea
mov
outsb
ret
cmp
aaa
push
loopne
xor
les
mov
into
pop
std
sahf
shl
and
jmp
pushf
test
stos
mov
jb
push
out
aad
or
aad
int3
enter
dec
fs
adc
mov
popa
sbb
int
lods
lods
dec
jbe
xchg
ja
les
data16
stos
mov
pushf
cmpl
xor
and
jg
pop
jns
or
loopne
mov
xchg
movsb
out
xchg
adc
lock
icebp
add
push
sbb
xchg
adc
inc
add
mov
stc
push
and
dec
rcrb
adc
inc
pop
in
in
pop
or
push
sahf
mov
sahf
dec
mov
lea
push
push
out
lret
out
mov
adc
pop
inc
stos
aas
movsl
std
in
mov
adc
fnstenv
cli
pushf
repz
mov
push
sarb
loop
mov
shrb
pop
pop
mov
pop
fcomip
pop
pop
cmp
sbb
mov
pushf
popf
jne
jae
rolb
sub
fs
lahf
pop
or
push
push
lock
inc
pop
pop
or
pop
or
push
add
jb
push
aas
xchg
mov
out
sbb
scas
add
add
xor
addl
fwait
xchg
int3
and
inc
cmp
xor
dec
push
test
jnp
push
fisubrs
stos
into
push
loope
clc
inc
mulb
jmp
daa
inc
stc
je
push
push
sub
ror
xorl
insb
rcll
and
pop
aas
lret
jmp
dec
std
add
sub
xor
pusha
stc
sbb
xchg
xor
sbb
add
fstl
pusha
out
mov
movsb
inc
dec
enter
mov
fwait
sbb
cmpsb
mov
dec
sbb
mov
mov
adc
inc
into
mov
push
pop
sbb
out
popa
sub
inc
pop
movsl
adc
rol
inc
test
push
sub
sbb
jecxz
dec
shrb
xlat
sbb
xchg
loope
or
pushl
mov
adc
jne
pop
nop
int
daa
faddp
pop
mov
das
les
inc
ja
jmp
fwait
imulb
stc
jp
outsl
lahf
cld
rolb
xlat
mov
test
es
lret
push
or
lods
inc
jbe
jno
popa
add
repz
jne
pop
inc
out
bnd
das
icebp
test
pop
xor
xchg
ficomps
loope
imul
in
push
sub
or
mov
ljmp
fadd
mov
arpl
lcall
pop
shll
repz
enter
jp
xor
mov
das
push
xchg
adc
repnz
fimuls
push
jg
lods
pop
xchg
stos
subb
pop
sub
gs
or
inc
inc
mov
out
fistps
xchg
arpl
xor
xchg
jmp
gs
inc
imul
push
jecxz
lcall
data16
xchg
aas
cmpsb
repnz
inc
in
jns
hlt
es
xchg
pop
dec
cmp
std
leave
bound
cs
out
and
out
pop
gs
inc
bound
dec
push
mov
jp
pop
mov
xlat
or
xlat
pushf
inc
pop
mov
mov
cmpb
xor
jno
inc
push
and
mov
xchg
cmpsb
gs
aas
pop
xlat
push
pop
adc
mov
popf
dec
adc
cmpsb
enter
fs
ljmp
jecxz
or
mov
sbb
inc
mov
mov
xchg
xchg
push
adc
daa
cwtl
int
mov
std
rcll
add
xor
mov
int3
inc
sbb
jg
mov
mov
mov
xchg
fnstenv
jne
inc
push
dec
inc
out
inc
arpl
dec
std
mov
daa
daa
adc
xchg
mov
popf
mov
std
mov
add
leave
aad
test
cmp
adc
push
mov
xor
icebp
push
repz
sbbb
icebp
and
or
dec
movsb
das
out
sbb
movsb
shll
aaa
inc
inc
icebp
pusha
loope
cltd
adc
stos
push
cmp
or
test
inc
mov
adc
xor
cmp
out
frstor
je
jle
lret
push
insb
pushf
sub
cmpl
adc
push
call
repz
pop
mov
clc
in
mov
jb
or
mov
mov
and
push
call
xchg
cwtl
and
pop
and
push
xor
push
mov
mov
push
dec
sub
test
jp
ret
pop
lods
jno
and
sbb
jae
lods
or
xor
test
jge
fucomi
daa
loope
mov
int
scas
sub
mov
jae
lcall
mov
sbb
js
jbe
movsl
xchg
lret
loopne
fidivl
and
mov
jbe
leave
les
mov
push
enter
in
arpl
sbb
cmc
pop
outsb
adc
imul
scas
push
xchg
xor
mov
test
das
in
arpl
stos
push
xor
xchg
sub
push
fdivp
es
test
imul
lret
outsb
lret
xchg
xchg
cmp
jbe
fnstsw
fnsave
add
dec
stos
aaa
add
pop
nop
int3
fimuls
sub
repnz
fldcw
aaa
ljmp
sub
cwtl
cmp
ret
jmp
push
shrl
sbb
xchg
aaa
lock
mov
cmp
lds
mov
jmp
call
add
dec
inc
out
mov
xchg
jno
outsb
adc
cmp
js
adc
out
insl
inc
adcb
adcl
add
call
adc
shll
adc
les
aas
sub
std
ffree
fldcw
js
adc
insb
push
mov
mov
sbb
push
xlat
bound
mov
shrl
mov
out
add
sbbl
jno
pop
and
sbb
movsb
aam
pop
jmp
roll
stc
sbb
sub
movsb
or
scas
outsl
mov
push
les
cwtl
push
add
dec
cmp
rcl
and
pop
sub
dec
add
or
out
lcall
pop
mov
and
push
fs
inc
imul
nop
inc
out
rolb
dec
push
push
ja
cs
out
lods
js
fwait
mov
xchg
sarl
and
cltd
sub
pop
cli
stc
xchg
mov
jo
int
mov
movsl
sbb
jl
mov
and
jl
lcall
cli
inc
cltd
sub
adc
ss
mov
push
out
sub
out
jb
inc
add
adcb
mov
test
cld
sbb
sbbb
cmp
push
std
pop
mov
ja
fsubp
movsb
cmpsb
out
and
cmp
clc
int
dec
addl
stos
outsb
mov
cmp
dec
in
jns
das
mov
data16
testl
push
in
lret
stos
test
dec
pop
inc
xor
mov
fwait
inc
mov
add
sub
mov
insb
je
dec
repz
mov
mov
adcl
push
popa
fcomps
jbe
adc
pop
popf
mov
stc
in
dec
negb
or
push
movb
cmp
xchg
aam
std
add
xchg
mov
push
sarb
inc
out
cmpsl
cmp
jp
jb
aad
mov
mov
mov
gs
mov
push
pushf
fsubrl
and
sbb
or
out
outsl
call
pop
sbb
aas
jge
jmp
leave
pushf
mov
stos
test
add
icebp
xor
jb
mov
inc
or
pop
cmp
enter
xlat
pop
scas
dec
xchg
and
movsb
gs
gs
xchg
shrb
cmp
jge
pop
dec
sub
jecxz
inc
cltd
pop
mov
daa
pop
pop
jp
xchg
clc
pop
push
mov
mov
pop
std
jmp
cltd
mov
jnp
sub
mov
xor
test
icebp
mov
adc
push
aam
pop
ret
dec
adc
daa
cli
dec
push
lcall
dec
in
in
mov
lahf
sbb
xor
sub
cmpsb
ljmp
push
cmp
jne
mov
clc
xor
mov
sbb
push
jne
cmp
movsb
aam
imul
mov
sbb
hlt
in
cmpl
sti
sub
fsubrl
pop
movsb
popf
lahf
mov
daa
xor
jle
mov
aas
mov
or
mov
and
mov
push
ss
dec
push
nop
dec
ja
int
imul
ret
inc
xor
call
lea
out
repnz
cmp
sbbb
loopne
sti
fucomp
notb
fs
std
pop
lods
inc
pusha
and
push
xor
stos
sbb
mov
into
cs
popa
aad
adc
pop
mov
push
fcoml
testl
and
sti
cs
jmp
mov
mov
aas
les
lods
mov
cmp
push
mov
jne
lret
xchg
fistps
mov
das
mov
test
xchg
mov
test
sbb
xchg
push
mov
lea
idivb
sbb
adc
xor
push
push
jo
jecxz
lahf
addr16
add
push
cmp
out
movsb
gs
xor
mov
pop
jmp
addr16
adc
int3
pop
adc
shlb
jbe
prefetch
or
push
je
jo
and
fsts
sub
mov
mov
out
mov
jmp
ficoms
icebp
cmp
lock
add
in
dec
push
in
das
cld
aam
pop
shl
stc
ret
jnp
ja
mov
lock
js
fs
pop
or
xchg
orb
inc
fnstsw
stos
xor
cmp
cmp
adc
out
xlat
fcmovnu
lret
stos
aaa
xchg
pop
xchg
mov
cltd
cmc
mov
jb
jle
scas
fcoms
rol
mov
out
jge
xchg
outsb
pop
mov
mov
pop
les
adc
pusha
imul
out
sub
pop
xor
or
xor
icebp
jmp
push
loopne
dec
adc
movsl
int3
addr16
mov
sub
sbbb
std
out
andl
xor
mov
test
fildll
bound
add
xchg
pop
mov
add
mov
inc
dec
inc
sbb
xor
xorl
aas
push
adc
call
fstps
and
lods
das
fidivrs
je
xchg
ret
js
fildll
ds
sbb
int
aam
mov
jne
cmpsl
dec
mov
ljmp
xorb
lods
sti
jmp
sbb
xchg
cmpsl
shlb
or
sub
sahf
lea
sub
push
and
push
jle
mov
push
mov
mov
inc
mov
cld
lods
xor
daa
mov
aad
mov
loop
in
lret
out
lods
fidivl
loope
push
inc
sbb
loopne
shr
sti
call
xor
scas
or
out
hlt
push
and
lock
sahf
jg
xor
fisttps
or
mov
addb
mov
jmp
cmp
bound
push
mov
and
icebp
cmpsl
gs
test
outsb
mov
hlt
sub
icebp
lahf
fs
pop
inc
mov
mov
out
xchg
add
les
push
xchg
bound
ret
push
dec
cld
xchg
stos
pop
sahf
pop
fstpl
push
mov
xchg
xchg
jnp
xchg
jg
jle
insb
mov
cmp
mov
das
inc
mov
and
outsl
mov
xor
jbe
mov
sub
cmp
and
inc
mov
aas
cmp
imul
sub
gs
loope
mov
out
aam
and
loop
ds
lods
jnp
ret
and
sarb
rcrb
push
dec
ret
sub
xchg
pushf
and
adc
insb
mov
cmpsl
fbld
dec
sub
ror
cmp
sti
scas
lahf
push
arpl
daa
xor
outsb
movsl
jp
dec
mov
push
or
aad
jno
push
insb
xor
divl
imul
arpl
setb
arpl
pop
mov
or
fwait
in
scas
inc
adc
sub
jle
push
push
int3
call
xchg
fwait
popf
pop
pop
fidivs
jb
cmp
xchg
mov
ja
pop
xorl
mov
popf
sahf
jnp
out
hlt
push
mov
mov
pop
dec
pop
call
pop
xchg
pop
jno
push
add
mov
push
fcomps
test
pop
ss
fisubl
mov
dec
xor
xchg
xchg
outsb
into
test
loope
jno
ret
mov
aas
inc
jnp
aas
add
inc
arpl
cmc
and
push
pmaxsw
test
stos
dec
fcoml
je
cli
ja
pop
push
lods
arpl
dec
xchg
mov
jg
cwtl
lahf
test
leave
iret
dec
cmp
cmc
sti
dec
scas
jne
push
and
sub
dec
xor
xchg
mov
cmp
mov
fisubrs
push
sub
pop
inc
cmp
mov
imul
daa
aam
les
hlt
sarb
js
xchg
testb
lock
imul
adc
iret
std
popf
out
inc
xchg
cmp
add
mov
in
lods
mov
cltd
mov
push
pop
jnp
xchg
push
cmp
and
nop
ret
ret
jb
mov
cmpsb
mov
cmpsl
xlat
jle
mov
mov
call
mov
pop
or
insl
push
mov
xchg
mov
ds
xchg
insb
popf
push
pop
cmpsl
rolb
push
or
inc
jae
sbb
add
rcrl
dec
sub
in
and
push
sub
leave
arpl
aas
xor
ret
cs
dec
mov
es
stos
inc
dec
jb
lret
dec
add
sub
lds
divb
push
push
int
les
pop
pop
pusha
dec
call
fadd
aaa
adc
cmc
mov
stos
adcb
cmp
inc
in
in
test
or
push
in
lods
out
sub
xor
sbb
dec
mov
mov
or
add
int
loop
movsb
xchg
dec
dec
in
imul
jmp
scas
loop
lea
cmp
movsl
lret
and
jo
rcrb
lahf
pop
outsb
xchg
in
dec
dec
lcall
or
sbb
cmpsl
lea
push
call
aas
mov
insb
dec
sbb
sub
fidivs
push
mov
jmp
inc
add
mov
pop
shrb
ret
addr16
loop
push
inc
jmp
sahf
sti
jmp
addr16
rolb
imul
pop
stos
movsb
popa
cmp
add
cltd
je
outsb
pop
fwait
mov
push
dec
or
je
loop
add
pop
nop
sahf
into
mov
loopne
jb
push
xor
lods
stc
add
imul
pop
incl
dec
and
and
sarl
iret
pop
aad
xlat
imul
or
mov
dec
movsl
mov
or
popa
lock
xchg
inc
mov
or
pushl
cmp
in
call
or
pop
rcrb
lds
out
and
jno
rorl
jnp,pt
inc
sbb
ret
inc
out
add
in
fcoms
popa
xchg
mov
rcll
jge
pushf
mov
inc
cmpsl
les
int
mov
cmp
jo
cmpsb
fnsave
mov
pop
push
pop
mov
pushf
mov
popf
lods
jo
adc
cmpsb
xor
pop
xchg
adc
jne
in
mov
cmp
cmp
or
lahf
add
mov
xor
pop
push
cmpsl
sub
pusha
ret
pop
and
xor
stos
dec
push
or
int3
sub
out
add
into
inc
cld
enter
jl
insl
mov
mov
icebp
push
lds
mov
fstl
outsb
lcall
out
je
rcr
dec
and
push
cltd
fbstp
aad
dec
jb
mov
add
outsl
mov
outsb
mov
xor
push
mov
loopne
inc
clc
fdivrs
mov
mov
mov
add
int
aad
or
inc
and
pop
inc
add
lea
push
lea
inc
pop
push
int3
cmp
aas
mov
cmp
adc
ljmp
dec
mov
fwait
fwait
rclb
sbb
xchg
imul
push
in
popa
movsb
dec
dec
pop
and
loope
outsl
pop
lret
nop
dec
fcompl
mov
lods
xchg
test
test
movsb
repz
stc
mov
push
cld
cmp
push
outsl
call
jno
mov
sub
mov
jns
mov
xchg
add
xchg
addr16
jbe
push
sahf
xorl
icebp
stc
push
aas
pop
sahf
test
pop
cwtl
xor
inc
pop
add
add
aaa
mov
flds
ret
mov
ja
adc
ret
cwtl
pop
fsubl
fldcw
rclb
jge
inc
mov
mov
std
and
mov
jmp
outsb
and
xchg
std
dec
or
inc
push
and
cmp
test
fwait
test
xor
cld
ret
and
lahf
lods
mov
jo
out
lar
outsl
pop
dec
mov
pop
lods
add
mov
insb
decl
std
adc
jne
sti
testb
leave
subb
addr16
xchg
shll
bnd
sub
push
xor
pop
loop
jg
iret
out
rcll
insb
xchg
and
xchg
mov
and
dec
js
xchg
sbb
icebp
std
daa
lds
fcomp
movsl
cmc
push
push
sbb
sbb
cmpsb
fcmovbe
aaa
ret
sub
or
mov
mov
div
clc
push
outsl
jnp
mov
cmc
fsubrl
add
and
mov
mov
and
pop
cltd
gs
out
test
scas
dec
hlt
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
xor
push
mov
mov
sub
add
mov
addl
mov
movl
push
or
mov
mov
xor
mov
mov
mov
incl
xor
movzwl
adc
mov
xor
mov
andl
add
add
imul
movzwl
mov
cmp
movl
je
mov
sub
mov
xor
add
adc
mov
xor
addl
lea
xorl
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
add
imul
mov
cmp
je
jmp
xor
aaa
fwait
mov
test
jp
inc
pop
jp
movsl
add
adc
das
adc
dec
inc
mov
push
mov
icebp
mov
lods
fnstsw
jns
into
adc
jg
ret
icebp
and
test
out
cmp
cltd
push
or
mov
pop
mov
loop
mov
or
loop
xorb
adc
mov
mov
aaa
std
icebp
add
pop
stos
push
dec
inc
mov
lret
mov
mov
xchg
in
loope
lret
fidivs
sbb
jmp
cmp
inc
adc
fwait
xlat
ret
xchg
lcall
mov
inc
or
test
pusha
mov
enter
arpl
fs
pop
inc
inc
jae
int3
aad
jae
mov
popf
jle
sub
xor
sub
cmp
pop
xchg
add
xchg
adc
inc
adc
mov
shrb
sub
pop
add
sbb
mov
andb
loop
test
test
cli
bound
pop
cmp
pop
push
add
out
inc
push
ret
inc
push
mov
sbb
pop
adc
adc
roll
sahf
fsubrs
sub
mov
jo
je
lahf
mov
xchg
mov
loope
jmp
daa
lock
mov
shrb
sti
push
pop
inc
movsb
sbb
or
mov
je
outsb
scas
pop
add
test
daa
cmp
lock
mov
mov
push
nop
test
js
int3
adc
jae
sahf
div
push
lods
lods
mov
pop
popa
lods
pop
jns
push
dec
fcoml
inc
sbb
jnp
xchg
jnp
jae
xor
sub
pop
mov
fstpl
dec
mov
das
jl
test
inc
lahf
xchg
mov
sti
daa
arpl
sbb
in
sub
jnp
loopne
lret
pop
cmp
in
mov
xchg
add
sub
push
sub
int
jbe
in
in
inc
mov
jbe
mov
xor
pop
test
call
int
push
lds
mov
and
insl
ret
add
movsb
mov
outsb
xor
push
inc
lret
lret
dec
popf
aas
lods
test
mov
cmp
mov
icebp
xor
ret
push
jl
mov
lds
scas
sahf
aam
repz
int3
xchg
in
xchg
cltd
imul
fistpll
outsl
inc
or
dec
push
mov
rol
imul
adc
cmp
xlat
push
repnz
xor
pop
sub
push
test
test
add
std
sti
jge
jg
push
gs
xchg
in
inc
cmp
mov
sahf
ljmp
aad
js
mov
add
sub
or
js
lds
mov
inc
adc
dec
popf
call
cmp
push
mov
pop
lahf
and
xchg
jae
xchg
pop
mov
daa
mov
ret
aas
and
les
sbb
mov
dec
mov
adc
shlb
dec
sti
fisubs
lock
sub
lcall
iret
arpl
cmp
adc
mov
push
xchg
mov
xor
lahf
ffreep
dec
sbb
shlb
sbb
std
punpckhbw
jp
ds
lds
push
jg
pushf
ret
jno
add
mov
shrl
cmp
js
jno
js
pop
xor
leave
test
inc
xchg
adc
gs
popf
js
xchg
arpl
insl
mov
adc
movsl
movhps
sub
popa
je
rcrb
idivl
mov
mov
inc
mov
icebp
sub
cmpsb
pushf
aas
jge
xor
jns
and
in
cmc
loope
fildll
sbb
dec
mov
call
popf
add
insb
sbb
call
sbb
loopne
scas
inc
pop
mov
out
jle
into
jle
mov
cmp
rorb
mov
sub
jae
jb
mov
pop
mov
aas
pop
inc
insl
divb
ja
cli
push
pushf
mov
inc
into
xor
rclb
fcompl
outsb
cmpsb
adc
jo
jl
pop
pop
xor
enter
mov
addr16
push
cmp
mov
out
leave
out
ds
xor
dec
mov
out
sti
cmpl
and
push
pop
cs
xchg
mov
cmpsl
push
dec
cmc
cmp
loop
or
nop
mov
jo
sub
dec
lock
rcr
das
jmp
cmp
sysret
xorl
into
or
pushf
movsl
nop
xchg
inc
push
imul
iret
pop
inc
bound
jo
pop
mov
and
cmp
adc
or
jge
push
jg
jne
aaa
cli
xor
lret
rol
sbb
or
xor
cmc
jl
les
xchg
pop
cmpsl
in
pop
mov
push
and
jp
loope
sub
fisttps
in
dec
lods
adc
and
adc
sbb
xlat
push
mov
mov
lds
bnd
xor
mov
cmp
jmp
addr16
or
xor
push
push
into
sub
fwait
pop
stc
hlt
out
sbb
sub
xchg
sub
pop
push
mov
mov
mov
imul
sbb
imul
xchg
into
bound
xor
lret
jae
or
dec
cs
push
push
add
mov
jns
stc
sbb
xor
sarb
pushf
int
adc
cmpsl
jmp
popa
shl
sbb
dec
inc
imul
sub
in
repz
out
dec
xchg
insl
iret
jmp
jo
xchg
cmp
icebp
and
or
fnstcw
jecxz
or
jmp
stos
sti
out
out
bound
cmp
mov
mov
or
fistl
mov
and
int3
add
fwait
testl
imul
test
out
or
stos
in
xlat
fnstcw
enter
out
aad
ljmp
xor
and
push
xchg
test
shll
mov
orl
rcrl
xchg
es
fimuls
das
or
cmp
sbb
das
adc
outsl
mov
jnp
nop
mov
jne
mov
cmc
out
out
xorl
add
and
inc
and
stos
cmp
pusha
inc
push
sub
mov
add
cmp
out
adc
mov
mov
or
aad
stos
ljmp
icebp
pop
jno
popa
enter
add
int3
lea
mov
aam
xchg
mov
jae
xor
sarl
mov
sub
sahf
jge
inc
xchg
lret
lods
ss
mov
and
test
loop
nop
hlt
cmp
adc
mov
imul
mov
popf
arpl
gs
or
jmp
pop
mov
lods
and
shr
cmp
jp
pop
xchg
xor
jns
add
mov
push
fldt
cmp
dec
adc
icebp
xor
pusha
push
jp
arpl
loope
mov
in
push
test
mov
cli
sub
scas
pop
ljmp
mov
cmp
add
or
fnstcw
mov
cs
adc
mov
loope
push
dec
mov
enter
dec
ljmp
xchg
mov
add
loope
xchg
out
shlb
stos
sub
leave
xor
cwtl
incl
cli
neg
pop
pop
mov
pop
and
dec
stc
pop
xor
cwtl
mov
push
jns
insl
adc
pop
inc
sahf
hlt
pop
out
mov
cwtl
mov
loope
jno
call
ja
arpl
cld
test
and
lea
xor
xor
loop
xor
dec
out
cmp
xor
gs
loopne
movsb
into
std
shrb
and
or
jae
adc
lcall
adc
push
jge
xchg
daa
xor
or
push
sbb
sbb
sub
mov
and
insb
jb
mov
mov
out
dec
sub
pop
jmp
mov
cltd
orb
loope
xchg
xchg
nop
xchg
fsubr
test
loopne
daa
fwait
dec
shrl
cli
sbb
ds
jle
mov
or
mov
xchg
loopne
addr16
mov
icebp
or
popf
int
or
inc
cli
test
bound
lods
lcall
mov
lcall
xchg
lds
jmp
pop
lods
mov
pushf
cmc
ljmp
jo
test
adc
cmp
pop
fwait
cmpsb
mov
fisubrs
popf
xchg
xchg
pushf
hlt
mov
ror
push
test
arpl
pushf
test
lret
stc
rclb
mov
test
jmp
scas
jne
jle
clc
cmp
adc
movsb
cmp
test
inc
pop
mov
lahf
cwtl
xor
lea
daa
in
adc
jo
ret
fdivrs
ds
into
std
push
ljmp
lahf
es
push
mov
sub
rcll
jb
hlt
pop
loope
mulb
fimull
jnp
int
shrb
popf
das
data16
dec
and
cmp
cmpsl
dec
roll
xchg
pop
imul
hlt
int3
sub
dec
or
nop
jmp
inc
mov
fs
aas
fs
gs
pusha
jo
ret
mov
jnp
inc
mov
sti
jle
fwait
inc
inc
mov
push
add
mov
in
mov
icebp
dec
stos
aaa
pop
fdivs
add
call
out
loopne
pop
pop
outsb
out
sbb
push
pop
lcall
dec
cmc
xchg
ljmp
mov
add
mov
jo
stos
std
mov
jnp
pop
test
dec
xchg
dec
jbe
dec
or
and
push
gs
clc
xor
mov
pop
and
aaa
inc
pop
lods
icebp
mov
jmp
frstor
aaa
push
in
add
pop
loopne
xor
push
and
in
sbb
dec
inc
pusha
out
fdivs
jb
mov
in
and
sub
mov
push
mov
and
xor
xchg
lret
lret
rcrb
mov
lock
xchg
sbb
rcl
loopne
xor
jns
in
aam
push
clc
into
dec
mov
add
into
push
mov
out
xchg
test
sbb
pop
xor
ja
xor
mov
enter
enter
ja
lahf
fwait
lcall
pop
xchg
push
notl
sub
sub
loopne
xor
inc
mov
sbb
aas
std
xchg
inc
sub
xor
and
add
or
std
mov
jo
jecxz
push
mov
cmp
jmp
jp
or
out
les
scas
fmul
mov
pop
cmc
push
cli
push
les
scas
je
popf
cs
clc
imul
xor
sub
sbb
sbb
adc
loopne
fldenv
sub
inc
insl
dec
or
mov
ficomps
outsl
pop
iret
sub
in
arpl
icebp
and
ffree
pop
dec
fstp
mov
sbb
jge
ds
fwait
out
xor
adc
inc
andl
lret
dec
cli
mov
xor
mov
xlat
sbb
ljmp
repz
inc
jecxz
add
out
fcmovbe
lcall
xchg
xchg
mov
std
cmc
sbb
pop
inc
in
xchg
shl
or
in
mov
sbb
or
mov
pop
cmc
fsubrp
or
xchg
mov
fnstenv
out
adc
push
mov
sub
xor
clc
mov
pop
scas
add
sbb
in
jnp
enter
lods
xchg
lods
mov
lods
dec
sub
adc
push
in
call
mov
mov
mov
sbbb
lret
push
pop
or
push
cmp
call
imul
daa
cmp
loope
mov
dec
mov
lcall
lods
fidivs
xchg
repnz
fwait
out
adc
push
adc
pop
lret
xchg
xchg
mov
xor
mov
cs
xchg
sub
sar
dec
insl
xchg
sarb
bound
imul
push
fmuls
mov
lret
push
popf
pop
scas
jns
mov
repnz
push
jecxz
fcmovu
xor
enter
push
pop
shrb
shll
push
fxam
mov
subb
fidivl
sbb
pop
mov
movsb
repnz
xor
mov
mov
mov
jnp
mov
mov
movsl
xchg
sub
out
sti
inc
dec
dec
mov
fcoms
mov
jbe
test
mov
sbbl
iret
jne
shrl
xchg
inc
shl
mov
or
add
cmp
cmp
ficoms
int3
inc
xchg
mov
adc
movsb
pop
fstpt
xchg
cmp
insb
cwtl
or
in
into
mov
loopne
outsb
out
cli
clc
jecxz
ja
sbb
pop
inc
lods
je
ret
push
mov
push
sub
scas
out
bound
add
repnz
cmp
insb
pop
mulb
cmp
in
inc
push
jmp
jno
ds
dec
mov
add
cld
js
mov
scas
cmpsb
cmp
out
pop
aad
and
outsb
cmp
sub
pop
pop
in
out
cmc
rol
roll
repz
jle
sbb
scas
mov
outsl
inc
mov
addr16
pop
mov
test
mov
sahf
lahf
stc
ljmp
add
fwait
inc
sbb
in
jae
movl
int3
and
das
mov
cwtl
pop
dec
lret
cmpsl
mov
mov
lcall
xlat
sub
cmp
hlt
popa
les
and
lret
adc
cmpsl
push
jp
cmp
idivb
dec
imul
sbb
sbb
das
repz
jmp
adc
bound
notb
mov
fdivs
add
iret
mov
lock
insb
aaa
sub
fsubs
loope
decl
xchg
mov
test
adc
rol
ret
lods
add
mov
mov
fisubl
push
jmp
adc
and
push
les
add
fldt
pop
push
mov
pop
mov
fsubrs
mov
add
and
fldl
fsubs
xchg
push
mov
adc
inc
call
in
pop
sub
inc
adc
xor
mov
jb
mov
mov
lds
fldl
lret
and
outsb
pop
test
jb
mov
aad
pop
xchg
pop
jp
stos
fs
sarl
aaa
adc
inc
mov
mov
add
or
insl
jg
bound
push
mov
mov
adc
cld
lret
adc
cld
mov
jne
test
stos
mov
or
testl
sti
xchg
push
clc
pusha
mov
xor
aam
leave
pop
imul
loop
ljmp
jae
adc
cwtl
mov
mov
mov
mov
add
mov
xchg
scas
ljmp
sub
shlb
mov
test
inc
xchg
mov
lret
sub
int3
jb
cmp
push
and
push
outsl
stos
cmp
mov
ss
inc
rclb
xchg
clts
or
pop
lcall
jb
xchg
aam
lds
nop
pop
sti
jle
out
cmpsb
ljmp
cmp
bound
mov
inc
sub
sub
pop
adc
stos
shrl
fwait
dec
adc
adc
mov
and
push
dec
inc
pushf
leave
call
sbb
xchg
mov
adc
xchg
aas
adc
and
insl
mov
jno
lcall
jns
mov
arpl
mov
cmp
mov
outsb
pop
push
or
arpl
stos
jbe
push
fbld
add
repnz
mov
xor
mov
cmp
in
rcr
adc
dec
out
mov
sbb
mov
pop
mov
pop
fwait
mov
and
iret
inc
dec
pusha
fimuls
repz
rcr
inc
pop
and
xchg
push
repz
dec
mov
mov
mov
sarl
mov
mov
push
iret
pop
imul
sub
xor
out
sbb
adc
fdivrl
test
insb
push
aad
cmp
inc
cmp
adc
dec
pop
inc
xchg
adc
xor
push
clc
ljmp
test
pop
cmpsl
mov
repnz
and
icebp
jecxz
push
mov
aad
movsb
xor
leave
pop
adc
push
repnz
pop
test
sti
adc
dec
mov
inc
dec
and
ret
pop
fimuls
aad
cli
adc
je
outsb
lods
xchg
mov
loope
push
xor
test
sub
push
cmp
mov
arpl
add
inc
loopne
push
scas
cltd
push
push
mov
cmp
cwtl
push
leave
cmp
fldt
cmp
dec
push
out
int
xor
xor
lods
adc
sbb
in
dec
shll
popf
in
pop
in
mov
std
js
mov
mov
mov
jle,pn
insb
mov
pop
imul
sbb
fs
mov
pop
cmp
cwtl
xchg
lds
movsb
pop
stc
push
jne
xor
mov
into
xor
xor
stos
sbb
fstps
test
mov
repz
jmp
push
inc
cmpsl
and
pop
out
mov
cmp
pusha
push
hlt
adc
add
fists
jnp
xchg
cmc
mov
xchg
inc
xchg
sub
pop
lods
daa
in
cltd
pop
jb
gs
xchg
mov
xor
xchg
pop
imul
xor
gs
dec
xlat
fwait
in
xchg
stos
add
rclb
jecxz
popf
out
insb
cmp
bound
jae
xchg
or
and
fwait
cmp
shrl
and
fidivrl
jnp
fwait
stos
cmp
aam
inc
push
movsl
jg
cmc
push
lea
pop
out
in
jae
dec
mov
je
mov
outsb
dec
sbb
cmp
push
push
test
out
jge
jb
push
cmp
addr16
stos
loop
clc
popf
pop
pop
jp
and
push
aad
arpl
scas
xchg
cmp
aaa
or
mov
mov
or
mov
pop
mov
sub
jg
jg
pushf
repz
or
aam
jns
xchg
popa
cmp
repnz
jmp
lret
repz
arpl
ljmp
xor
push
out
enter
iret
mov
test
lea
xchg
and
pop
sbb
dec
adc
pcmpeqw
not
xor
rcl
mov
add
mov
mov
insb
or
sahf
ret
xchg
outsl
sbb
in
fnsave
pop
fwait
ret
xchg
sbb
pop
icebp
and
xchg
mov
imul
pop
cmp
cmp
and
scas
push
out
ss
mull
andb
cltd
jne
int3
arpl
lret
mov
inc
stos
adc
adc
sbb
pusha
stos
scas
mov
sbb
cmpl
or
inc
cwtl
sbb
aaa
call
repz
or
les
mov
ss
xchg
cltd
rcr
jns
aas
loop
outsl
out
rorl
bound
scas
popa
pusha
push
cmp
sub
and
mov
test
xchg
or
inc
add
hlt
gs
xchg
in
scas
ja
cmp
movsb
mov
fwait
popa
push
or
adc
out
je
mov
or
enter
lret
push
pop
imul
push
insl
xor
and
xor
clc
lock
cmp
fsubr
mov
loop
add
or
mov
test
sbb
jg
push
in
int3
mov
lock
and
mov
btr
int
mov
mov
sub
insb
and
bswap
sbb
testl
mov
out
lock
ljmp
jne
dec
push
out
sub
mov
sub
cmp
mov
push
int
popfw
cmpsl
addr16
pop
lds
clc
adc
lahf
cld
jmp
int
pop
inc
sahf
cmp
sbb
push
rol
mov
enter
addr16
jnp
xchg
pop
jp
push
rcrb
push
icebp
push
shll
lea
pushf
cmp
adc
mov
mov
sub
outsb
movsb
mov
mov
push
outsb
add
lds
add
mov
mov
movsl
sbb
loope
pop
jg
cmpsl
add
mov
sti
fsubs
into
fcoml
cmpsb
sub
ficompl
dec
gs
lcall
jbe
jo
mov
mov
pop
addl
movsb
add
lret
sub
push
cld
dec
inc
fdivs
fs
jmp
push
adc
mov
stos
sub
fcoms
and
pop
fstl
pop
jle
sti
push
ficoms
mov
push
aas
sbb
fcoms
cmp
es
pop
cld
sub
push
xlat
pop
jle
lods
inc
aas
xor
mov
aad
jmp
jecxz
dec
hlt
add
jb
bound
mov
insl
and
pop
loop
ss
jecxz
jnp
mov
mov
jg
enter
xor
add
push
mov
roll
and
movl
data16
out
and
adcl
fs
imul
and
lcall
in
xchg
adc
aad
adc
outsb
dec
push
mov
mov
mov
aaa
xchg
mov
cld
fnsave
imul
mov
clc
xorb
jg
lds
pop
lea
pop
mov
dec
sbbl
push
ljmp
jnp
fistl
out
in
xchg
ret
iret
jns
push
testb
fiadds
cmc
pushf
and
dec
cmp
repz
cmp
insl
es
call
aad
enter
sub
push
jnp
push
repnz
xchg
mov
nop
xchg
and
cli
adc
xor
std
mov
mov
jo
das
mov
iret
pop
dec
dec
push
ror
ficoms
test
add
jne
lock
clc
dec
shll
out
jnp
jg
and
daa
imul
mov
push
ds
and
mov
xchg
enter
test
sub
cmp
xchg
xchg
test
hlt
je
leave
sbb
mov
stos
lock
out
rorl
xor
mov
cmc
in
pop
xor
dec
mov
ret
bound
sub
mov
jecxz
mov
insl
rolb
mov
adc
ja
or
sub
xor
int3
test
mov
mov
inc
roll
es
out
pop
xlat
sbb
pop
adc
sbb
imul
xchg
dec
or
cmp
aaa
xchg
arpl
adc
outsb
sbb
cwtl
push
loopne
test
bound
mov
adc
cs
dec
sub
pusha
push
adc
adc
xor
jg
sbb
xor
loop
xor
stc
or
push
push
xchg
loopne
out
sbb
mov
imul
dec
pop
enter
mov
lret
test
mov
std
test
mov
mov
add
dec
mov
sbb
pusha
push
push
sub
daa
stc
jnp
pop
dec
mov
jle
int
rcrb
or
adc
inc
data16
pop
cli
cld
push
inc
xor
in
outsl
mov
jmp
xchg
mov
xchg
or
sub
flds
test
and
shll
add
cmp
int
lahf
mov
ja
mov
dec
sbb
adc
and
cld
jo
jbe
mov
js
push
pushf
lods
add
or
sub
mov
jle
and
in
xchg
cld
dec
sahf
nop
fildll
faddl
test
jmp
fsubl
dec
fimuls
lret
lret
lahf
jb
push
inc
jecxz
cld
cmpsb
scas
push
out
adc
cmp
jns
pop
testl
call
inc
adc
lock
push
push
push
lea
fwait
mov
in
jb
jmp
dec
cmp
out
addr16
int3
push
xor
fwait
dec
cld
into
push
add
dec
stos
inc
push
cmp
les
add
push
in
cwtl
cwtl
jp
scas
pop
mov
mov
test
je
sarb
adc
push
sub
pop
imul
push
ds
icebp
sub
insb
rcl
xchg
sahf
inc
or
int
aad
cmpsb
ja
jge
gs
in
dec
xchg
pop
outsb
or
pushf
sub
ds
push
shrb
jb
sarl
jb
pop
aas
jecxz
mov
inc
pop
arpl
pop
mov
add
dec
xchg
push
ret
mov
mov
cmp
jp
ret
or
mov
lds
out
aad
add
jae
inc
mov
cmp
adc
into
and
lret
cmp
ror
scas
out
stc
or
cmpsl
jp
pushf
int
adc
iret
mov
inc
mov
sbb
mov
pop
and
xchg
jbe
sbb
sbb
add
mov
shrb
ret
cltd
mov
xchg
mov
cmpsl
jmp
mov
add
inc
jo
pop
cmpsl
leave
sbb
inc
inc
inc
jbe
cmp
ret
outsl
cmp
push
sbb
inc
jae
adc
adc
loope
adc
mov
fwait
or
scas
and
push
movl
sahf
fdivr
pop
int3
cli
jno
or
aaa
xor
lods
pop
add
sbb
pop
sbb
out
test
cwtl
outsl
or
push
dec
mov
fstl
pop
sbb
mov
pop
mov
mov
jne
push
mov
jge
mov
jne
and
push
aam
xor
lcall
dec
fldcw
cmc
call
dec
daa
mov
andl
icebp
mov
out
es
push
xor
mov
push
in
cmp
js
inc
cmpsb
and
pop
repz
imul
inc
adc
xor
mov
pop
dec
xor
frstor
mov
push
imul
repnz
ljmp
and
jns
pop
sbb
and
jne
and
inc
shlb
lret
xchg
cwtl
mov
insl
pop
push
popf
push
and
cltd
pop
bound
mov
xchg
lds
sbb
xchg
out
inc
push
fbld
xchg
arpl
cwtl
sub
cmpsb
int3
jle
lret
mov
cli
mov
rcrl
fcomi
out
or
pop
andb
inc
negl
and
ret
pop
pop
xchg
inc
mov
xchg
test
jle
mov
shrb
xor
stc
jne
repnz
cmp
rcll
cmp
ret
xor
imul
imul
ss
fst
movsl
jmp
out
lret
in
sub
push
sub
paddb
mov
ret
mov
out
stc
mov
lret
out
jl
ljmp
sbb
data16
ja
adc
inc
push
lret
hlt
mov
mov
in
stos
std
ret
mov
dec
cmpl
pop
sub
inc
test
in
mov
dec
dec
mov
cmp
mov
and
in
pop
jp
push
xchg
xor
shrb
inc
jp
mov
fs
loopne
add
push
decb
bound
fs
mov
sti
push
popf
push
inc
jb
leave
fs
and
cmp
push
sub
cmp
xchg
and
adc
shr
add
test
sahf
dec
lods
hlt
subb
pop
arpl
sub
xor
cmpb
cltd
je
stos
insb
and
adc
jno
xor
push
push
imul
lret
ret
lahf
push
sub
std
sbb
sub
lods
or
sbbb
mov
popa
mov
mov
out
xchg
mov
add
test
rcrl
xchg
pop
pop
push
nop
jge
adcb
sub
out
imull
or
fs
fbld
sub
jp
xchg
pop
icebp
sti
addl
cmp
cmp
mov
push
inc
call
lock
sub
dec
pushf
pop
adc
call
push
inc
mov
xchg
movsb
mov
hlt
pop
jnp
add
mov
cmp
test
movsl
loope
push
and
sub
add
in
pop
sub
jns
mov
imul
cmp
push
pop
neg
pop
lcall
or
fldt
sub
xchg
sub
cltd
inc
inc
add
mov
sbb
jnp
ljmp
and
sub
ljmp
in
sbb
pop
scas
pop
je
push
stos
xor
adc
imul
inc
xchg
and
sahf
in
inc
adc
sbb
int3
ret
push
clc
mov
sarl
sub
dec
push
push
push
pop
mov
jne
cld
lock
gs
test
in
repz
in
push
xchg
mov
mov
and
mov
notb
xor
call
sbb
imul
xor
pushf
frstor
mov
lahf
ficoms
fdivrs
xor
jne
mov
xchg
lahf
lret
sub
add
repnz
add
sti
cmpsb
mov
icebp
adc
mov
sub
sub
enter
and
cmpsl
dec
cmp
add
mov
and
mov
cmpl
bound
mov
sbb
jmp
dec
ja
ja
jp
out
test
inc
jae
pop
cmp
repnz
inc
in
xchg
pop
mov
imul
fimuls
ds
cmp
leave
and
add
test
xor
das
sahf
dec
pop
movsb
xor
push
and
inc
mov
adc
inc
push
stos
mov
mov
sub
call
adc
add
or
outsl
decb
gs
or
ss
add
rcr
mov
outsl
out
mov
inc
mov
ds
out
push
or
mov
movsb
mov
adc
mov
test
or
and
loope
pop
mov
push
pop
rep
repz
inc
cmp
dec
xchg
sub
xlat
xchg
add
mov
lods
dec
add
addr16
pop
dec
push
pop
repz
pop
mov
push
push
mov
into
daa
stos
pop
mov
add
test
mov
push
insl
sub
ret
jmp
lods
push
jmp
pop
mov
ret
cmc
outsb
movsl
add
insl
icebp
xchg
push
jnp
adc
js
cli
lcall
mov
xor
push
out
add
ds
dec
enter
cld
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
adcl
mov
xor
sbbl
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
add
mov
movzbl
adc
mov
adcl
xor
mov
orl
add
xorl
movzwl
mov
movb
adc
lea
mov
sub
mov
orl
mov
andl
xor
orl
sub
orl
mov
andl
movl
xor
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
addl
push
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
xor
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
push
add
movl
jmp
mov
movl
mov
movl
inc
movl
cmp
jb
mov
addl
xor
adcl
add
movl
jmp
mov
movzwl
sub
mov
mov
decl
xor
mov
andl
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzwl
orl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
movl
mov
mov
adc
xor
sbb
add
or
mov
movl
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
movl
mov
or
mov
mov
xor
add
add
movl
mov
mov
mov
je
mov
mov
jmp
mov
pshufw
or
jp
pop
jp
xchg
mov
jnp
scas
fdivs
jne
js
leave
lods
pop
movsl
mov
mov
cmpsb
ljmp
mov
sub
mov
mov
test
arpl
jmp
sbb
mov
xchg
icebp
movb
and
mov
insl
mov
addr16
into
sub
mov
out
fwait
sub
aas
ficoml
mov
and
push
jp
fstps
loop
sub
add
sti
sbb
mov
push
jg
iret
clc
mov
cmp
xchg
mov
aaa
jp
pop
and
mov
in
adc
movsl
cli
adcl
aam
add
pop
int
cmc
and
sub
jle
imul
pop
daa
lods
jbe
mov
dec
push
mov
mov
fs
mov
sub
mov
stos
adc
fs
in
sub
test
sub
mov
addb
test
and
xchg
add
shrb
inc
pop
jmp
mov
pop
xchg
fldcw
repz
test
popa
xchg
xor
psubw
hlt
jl
int
sti
sbb
inc
or
mov
sub
leave
mov
and
daa
pop
out
popa
scas
in
pop
xor
cmp
adc
sbb
add
xchg
orps
mov
in
dec
sahf
fisttpl
je
sub
jmp
inc
mov
dec
cmc
out
pop
daa
xchg
out
call
lea
cmp
sub
lds
mov
pop
adc
add
call
arpl
stos
mov
adc
mov
testl
sarb
cmp
and
jg
xor
inc
and
out
ror
adc
popf
pushf
dec
and
xlat
sbb
sbb
fcmovu
dec
dec
aad
fisttpl
mov
lods
mov
or
lods
sub
or
xor
push
jnp
inc
rcrl
pop
pop
xchg
test
jns
fwait
xlat
in
je
xchg
jno
stos
jecxz
addb
add
iret
clc
aaa
pusha
lahf
jecxz
out
lret
xchg
ja
and
push
jle,pt
mov
and
mov
popa
mov
ret
jb
fldt
and
sbb
mov
pop
mov
sub
jle
ret
cmp
in
in
xchg
lock
and
adc
push
sbb
cmpsb
test
push
sbb
dec
scas
adc
inc
adc
clc
mov
scas
adc
rolb
xchg
popf
and
mov
add
xchg
sub
mov
mov
incb
adc
inc
xor
sbb
inc
imul
cmp
pop
adc
test
out
lods
loope
btr
lahf
test
daa
sarb
ja
negb
sahf
mov
out
or
cmc
sbb
mov
push
fbld
scas
inc
fldt
rcl
adcl
fcmovnbe
ret
push
call
into
mov
outsl
dec
cmp
mov
imul
nop
popf
xor
fildll
mov
xlat
loop
push
fimuls
aam
jo
out
hlt
dec
mov
loopne
insb
outsl
sbb
pop
cmp
push
adc
movsl
inc
loope
pop
jecxz
fistpll
add
xor
cmpsb
inc
or
and
add
rcrb
outsl
mov
pop
repz
pop
mov
das
insb
mov
sub
cmpsl
lahf
mov
cs
inc
es
call
jb
cld
leave
imul
add
mov
add
cmp
and
andb
and
movsb
or
add
or
cmpsl
jl
in
lret
dec
mov
mov
imul
fmul
add
lock
lret
xlat
mov
mov
jle
inc
and
add
jae
out
xor
imul
cmovbe
sub
sahf
dec
add
cmp
mov
repz
push
xchg
and
cld
and
mov
in
xchg
movsb
xchg
xor
stos
int3
pushf
xchg
push
sbb
xchg
push
push
shrb
insb
fcoml
cmp
sbb
ss
rcrb
jbe
into
push
testb
jb
lret
push
and
movsl
push
aaa
enter
cmp
jp
imul
imul
jbe
or
mov
lahf
push
jne
or
imul
pop
and
sbb
and
data16
jge
enter
adc
inc
pop
mov
xor
mov
mov
xor
test
cmp
mov
test
cli
mov
addl
incb
outsb
jbe
jo
dec
test
stc
data16
outsl
xchg
outsl
iret
adc
stos
mov
lods
jns
mov
stos
sbb
jb
inc
push
sub
adc
iret
add
cmc
ljmp
aas
js
dec
inc
or
rcl
lea
hlt
xchg
js
loop
mov
push
jp
jle
scas
mov
xor
push
xor
js
dec
jbe
sbb
cmp
mov
out
out
mov
in
or
adc
xchg
pop
mull
scas
into
mov
inc
in
push
jl
mov
aam
dec
mov
ret
aas
incl
sub
mov
stos
cwtl
mov
lods
inc
xchg
dec
es
dec
test
mov
in
mov
or
loop
cltd
push
xchg
push
inc
gs
push
inc
xor
jae
lcall
add
push
xchg
movsb
test
ror
mov
mov
or
mov
and
cmc
shr
jl
sti
mov
sub
mov
mov
adc
loopne
int3
hlt
pop
adc
push
jno
fs
push
aam
push
clc
scas
ret
imul
mov
dec
jnp
inc
mov
mov
gs
orb
call
xor
lcall
sub
fs
xor
adc
or
cli
sbb
negl
inc
lods
ja
aas
add
mov
and
jmp
pop
ret
mov
scas
daa
cmpl
nop
les
test
and
cmp
dec
andb
ret
sub
adcb
add
out
jno
dec
daa
pusha
mov
jns
insb
lds
jmp
pop
fidivrs
fwait
dec
arpl
mulb
sar
in
loope
jb
xchg
mov
and
movb
mov
or
popf
insb
cld
push
dec
cmp
into
fdivs
sub
pushf
mov
jl
fstl
adc
push
enter
movsb
aad
es
push
lods
imul
push
fists
in
jmp
shrl
rcr
adc
jnp
xchg
pusha
jne
inc
xchg
movsb
xchg
lret
fs
push
aad
inc
xchg
lock
pushf
and
not
stc
das
fidivrl
inc
pop
push
pop
push
sbbb
repz
scas
pop
jns
movsl
or
sbb
lret
test
rolb
out
mov
popa
pop
mov
sub
jno
add
in
jg
mov
cmp
ds
xchg
push
sub
bound
fsubr
add
subl
shr
push
pop
adc
xlat
xorb
hlt
ja
cmpsl
pop
or
jno
frstor
pushf
enter
int3
push
lret
and
mov
loop
stos
cli
pop
inc
sahf
test
shl
jb
cmp
cwtl
hlt
loopne
test
mov
neg
adc
dec
xlat
das
insb
mov
xchg
movsb
loop
mov
sub
jle
dec
sahf
xchg
jo
pop
jne
cwtl
in
aaa
mov
push
in
mov
add
inc
push
out
pop
or
lret
pop
es
out
mov
push
imul
xchg
push
ljmp
loope
addb
incb
jnp
cmpsb
cld
dec
ficompl
lock
sub
jg
xor
js
jno
les
out
loopne
jo
xor
mov
fadds
or
leave
jae
ret
push
sub
add
adc
cmpsb
and
and
sub
mov
or
aaa
adc
addl
adc
sub
arpl
int3
cltd
scas
xor
retw
pop
inc
xor
lds
repnz
jecxz
mov
rcll
insl
add
addl
inc
inc
in
sbb
sbb
sub
xor
inc
jo
popa
stos
mov
pmaxub
ret
mov
loopne
xchg
fisubrs
pushf
mov
push
push
sbb
jns
and
mov
cmp
dec
push
pop
xchg
testl
xchg
mov
or
xchg
mov
ficomps
push
jmp
call
jmp
jns
fcoml
cmp
fst
push
fstpl
ss
and
mov
inc
in
jp
out
imul
jp
xor
xchg
cs
jecxz
pop
lcall
iret
sub
nop
mov
push
lcall
xchg
lcall
inc
push
cmp
sub
out
fdiv
mov
fwait
push
mov
mov
stc
or
aas
bound
jecxz
pop
jns
ss
xchg
idivb
imul
jmp
das
xchg
mov
in
jbe
out
das
sub
inc
xchg
add
shl
push
sub
in
sbb
pop
in
cmp
ljmp
jne
leave
ror
and
adc
cmp
jnp
and
js
sbb
dec
aad
daa
test
dec
sbbb
mov
dec
out
or
shl
and
hlt
outsl
inc
stos
xchg
xchg
sbb
inc
jnp
xor
imulb
test
push
out
insb
cmpsl
sub
cld
adc
cmp
push
outsl
push
jg
es
int3
mov
cmc
lods
pop
jno
sbb
repz
sbb
xchg
fmull
lods
push
push
cmp
and
adc
andb
stos
xor
addr16
fwait
mov
insl
xor
fbstp
cmp
pop
pop
mov
sahf
jg
bound
pop
push
aad
pop
mov
sub
fs
mov
shrb
xchg
mov
xlat
fdivrs
inc
mov
mov
repnz
push
dec
popa
daa
pop
adc
pop
add
push
ret
push
sbb
dec
jl
mov
loopne
lret
mov
aaa
scas
adc
out
bswap
and
xlat
xor
daa
out
decl
fisubl
jge
and
and
mov
adc
pop
ficompl
and
aad
into
fcompp
pop
repz
sub
stos
inc
or
mov
pop
enter
mov
rolb
xchg
enter
fstpt
fisubs
xor
ljmp
mov
sub
sbb
xor
add
lds
pushl
jge
jb
push
rcrl
mov
stos
and
je
mov
mov
add
imul
mov
fldl
cmc
xchg
and
pusha
mov
loope
adc
mov
movsb
call
xchg
xor
sbb
scas
pop
add
xor
into
xchg
dec
js
mov
or
lods
jge,pt
and
jl
mov
dec
aas
icebp
mov
les
adc
call
sub
push
jne
lock
inc
int3
pop
ja
add
mov
aaa
lea
fldt
movsl
imul
jae
and
pop
ljmp
add
adc
sub
pop
stos
fcompl
mov
rol
iret
dec
imulb
daa
push
stos
adc
movl
mov
imul
and
mov
cs
stc
sbb
int
iret
insb
cltd
jge
outsb
fwait
sub
adc
xchg
or
ljmp
fsubp
mov
mov
pop
out
movl
leave
cmp
in
jns
clc
inc
jle
test
mov
out
and
loope
icebp
pop
mov
cmp
mov
jmp
mull
and
cmp
mov
aas
mov
or
cld
push
jmp
adc
sub
xor
sbb
iret
pushf
addb
jnp
aad
stc
ja
sbb
out
ljmp
cwtl
pop
sub
add
mov
lock
leave
or
sub
loop
dec
sbb
fldt
inc
sub
sbb
xchg
push
cwtl
cmc
sbb
mov
and
scas
dec
pop
jno
mov
repnz
mov
dec
clc
test
fdivrl
enter
add
testb
or
mov
adcb
pop
mov
cld
stos
jecxz
ret
jmp
mov
mov
cmpsl
mov
dec
movsb
add
xor
std
mov
sub
xchg
dec
lds
mov
or
or
pop
or
mov
in
xchg
insl
jl
cmp
mov
cld
dec
mov
xchg
and
mov
adcl
cli
pop
inc
dec
shll
cmpl
lret
adc
push
inc
push
out
cmpsb
pop
cmpsl
push
jo
mov
mull
sub
jecxz
mov
scas
fmuls
ja
mov
roll
repnz
xchg
push
lahf
fcmovne
outsl
pop
clc
mov
lahf
push
jle
imul
jns
dec
test
adc
sahf
sbb
mov
adcb
jl
int3
sbb
and
inc
cvtpi2ps
or
sub
add
mov
adc
fstpl
pop
sti
faddp
add
pop
loopne
cmc
or
cmp
test
and
push
out
repz
aaa
mov
js
and
fadd
mov
pop
int3
pop
aas
jmp
out
and
out
cmp
rolb
xchg
or
fcmovnu
lcall
push
int
into
jns
mov
mov
sti
pop
notb
out
or
sub
xchg
rol
mov
aaa
lcall
push
jge
hlt
lret
adc
mov
lcall
outsl
imull
popa
mov
fimull
push
mov
lcall
jb
jmp
push
xchg
push
mov
mov
sub
clc
pop
outsb
push
push
movsl
or
xchg
pop
bound
and
into
mul
pop
lret
sub
mov
loopne
out
push
out
mov
inc
cmp
imul
fstps
pusha
pop
decb
push
xchg
dec
mov
adc
imul
stos
in
lds
cld
push
enter
shll
sub
jp
mov
adc
sbbb
xor
fwait
dec
fildl
shlb
mov
movsb
fnstcw
sbb
idivl
adc
xor
xor
lock
adc
sbb
ss
jno
adc
jne
inc
inc
test
int
call
or
cwtl
sbb
xchg
push
lods
mov
add
xchg
mov
stos
flds
adc
pusha
test
fdivrs
cs
add
int
mov
dec
lahf
and
sbb
loope
lods
jns
jb
imul
jmp
push
push
fisubrs
mov
mov
lds
jge
mov
clc
sub
stos
mov
fwait
incl
dec
test
scas
stc
dec
and
ret
test
int
jns
je
sub
mov
mov
out
leave
xchg
lods
test
jg
sbb
cmp
push
daa
insl
stos
stc
pop
push
sub
push
mov
push
imul
flds
stos
add
gs
ja
icebp
add
pop
out
inc
lock
sbb
arpl
push
and
out
lret
inc
mov
mov
lea
cmpsb
cs
sub
jns
mov
and
cmc
mov
stc
mov
pop
xor
sbb
enter
add
jmpw
fcomp
bound
sub
iret
lock
mov
pop
les
add
xchg
xchg
sub
in
fidivrs
jne
and
pop
inc
pop
jl
jbe
mov
or
lcall
movsl
cmp
in
enter
or
jae
adc
mov
out
sub
dec
mov
sub
cmp
dec
negl
jbe
xchg
bound
mov
xor
scas
dec
sbb
mov
sbb
xchg
adc
jp
jbe
les
jmp
dec
insb
cli
add
data16
fimull
pop
sbb
shlb
pop
sbb
test
sbb
mov
test
insb
adc
ds
shl
cld
push
pop
loop
emms
rcr
mov
inc
sahf
sub
and
ljmp
pushl
inc
filds
sbb
scas
cld
daa
mov
mov
xchg
sbb
pop
test
mov
lret
cmpsb
or
rol
idivb
cltd
pop
dec
hlt
add
std
cmp
and
xor
fisttpl
adc
call
scas
sub
jecxz
int
push
xchg
mov
aam
daa
mov
xor
loope
inc
sbb
fildl
or
out
pop
repz
jae
cmp
mov
cltd
pop
or
out
mov
clc
test
ds
or
test
fdivrp
add
pusha
cmp
pop
push
mov
lret
fists
mov
adc
dec
mov
or
xchg
cmpl
cmp
loopne
jno
rorb
mulb
xchg
hlt
pop
decb
cmp
lea
je
xor
imul
dec
xchg
jo
mov
out
and
clc
push
dec
xchg
cmp
and
rcr
ljmp
sub
xchg
inc
inc
popf
ljmp
xchg
or
mov
mov
out
push
sbb
add
sbb
test
sub
out
orb
test
pop
sbb
cmp
lods
pop
fwait
shll
xchg
mov
jns
test
jno
xor
add
mov
mov
loop
testb
xor
mov
sbb
xchg
jbe
pop
repz
mov
je
mov
daa
dec
or
mov
bnd
fisttpll
jb
insb
scas
fmull
jo
mov
out
push
sub
xor
dec
int3
mov
sub
xchg
sbb
stos
pop
or
push
pushl
mov
lret
lret
arpl
in
sbbb
jo
or
jne
adc
sbb
pop
xchg
jns
sbb
cs
jp
popa
jg
sbb
pop
inc
mov
fidivl
shlb
inc
push
int3
jle
outsl
sbb
das
pcmpeqb
or
les
movsl
pop
and
loopne
jo
sub
dec
cmp
scas
mov
xor
aam
and
inc
mov
and
mov
pop
cld
add
pop
mov
out
ja
cwtl
movsl
fiaddl
cld
or
cmpsl
call
inc
in
in
inc
popa
jne
fisttpl
imul
jle
inc
add
fisttpll
dec
test
xchg
xchg
int
pop
int3
negl
fnstsw
add
add
jno
mov
arpl
dec
cltd
mov
pop
mov
mov
pop
cmp
into
or
xchg
cmpsl
add
movsl
sbb
mov
jbe
pop
iret
filds
icebp
pop
loop
add
fcompl
lods
jne
dec
mov
fmul
xlat
scas
stc
std
in
xchg
flds
lods
rcr
ret
ret
shr
lods
pop
jmp
push
loopne
int3
fidivs
popl
lods
or
jne
push
call
xchg
sbb
das
cmp
adc
push
jnp
mov
dec
and
inc
sahf
into
dec
inc
std
out
push
loope
mov
and
xor
lock
movsb
and
inc
daa
adc
or
mov
pop
sbb
xorl
sub
jae
lret
push
mov
jl
aam
mov
dec
cmp
fsubrl
sbb
jns
ret
lret
ja
or
data16
jae
and
pop
stc
pop
cmp
addr16
mov
cmp
roll
sbb
add
add
push
cmp
out
hlt
idiv
sbb
jle
test
roll
xor
lcall
xchg
mov
push
inc
icebp
into
pop
cmp
fiaddl
adcb
loope
test
push
xchg
jo
sbbb
mov
adc
repz
out
cmp
leave
mov
movsb
and
or
cwtl
ficoml
fs
push
repz
sub
ficompl
xchg
fsts
cmpsl
mov
pop
jns
or
rcrb
jecxz
call
lcall
divl
lret
in
inc
mov
mov
mov
scas
and
rol
xor
push
popa
mov
xchg
lods
ljmp
inc
mov
push
sahf
dec
xor
roll
imul
and
pop
xor
add
nop
negl
add
pop
cmp
out
in
xchg
sbb
or
or
xor
sub
inc
mov
push
mov
dec
jnp
cmp
push
push
imul
mov
inc
ret
pop
cmp
inc
int
arpl
mov
push
or
ljmp
ror
add
jno
cmc
push
mov
pop
ret
mov
movsb
inc
pop
sub
imul
outsb
in
std
pop
xchg
pop
ja
outsb
xchg
xor
icebp
jge
adcl
es
loop
jno
pop
mov
popf
push
dec
stos
pop
mov
mov
adc
out
add
iret
and
xchg
mov
mov
in
adc
jbe
dec
daa
enter
sub
sahf
negb
xor
cmp
inc
jns
arpl
repnz
aas
adc
xor
aam
mov
xchg
mov
adc
clc
jne
mov
xor
xor
xchg
push
mov
jle
inc
cmp
je
lods
test
dec
shl
les
xchg
add
popf
leave
inc
sbb
sub
test
faddl
idivl
scas
mov
cmc
stos
in
stos
outsl
xchg
push
cmp
add
pop
nop
in
mov
cmp
out
mov
inc
push
adc
and
mov
xchg
lods
adc
jmp
scas
ds
adc
add
test
dec
sub
fs
add
pop
shl
xchg
insb
xchg
idivb
or
mov
push
fldcw
and
ret
aaa
call
aad
add
add
jb
in
repz
gs
dec
lods
jbe
inc
shrb
xor
mov
jno
je
in
dec
dec
int
push
mov
jno
xor
xor
jecxz
cli
out
and
mov
mov
cmp
popf
scas
lret
out
cmpsb
mov
rcrl
mov
mov
sbb
xor
nop
cmp
cld
iret
mov
ds
jg
les
iret
sub
xor
jns
adc
test
aaa
mov
push
adc
jle
stos
dec
out
pop
push
or
subb
adc
and
outsb
adc
ljmp
dec
sub
or
push
cmpsl
pushl
pop
sbb
les
scas
loop
addr16
cmpsl
sub
test
movsb
test
popf
rcl
sahf
push
cltd
mov
sub
and
dec
orb
mov
dec
dec
jle
jmp
jle
xchg
lods
adc
or
mov
xchg
xor
dec
xor
xchg
xor
fisubrl
pop
and
or
push
mov
lret
das
mov
inc
add
cmp
shl
xor
call
dec
cmp
rorb
arpl
data16
orb
dec
lods
pop
dec
fcmovu
test
or
and
cmpsb
ja
andb
mov
xor
nop
fs
sub
adc
gs
xor
fisubs
jmp
hlt
cmp
lods
dec
sbb
arpl
cs
and
scas
incb
jne
movsl
push
mov
mov
inc
push
rcrb
jmp
fcoms
daa
cmp
out
adc
sbb
cld
xchg
sbb
je
addr16
xchg
clc
rcrl
add
ljmp
sub
mov
dec
rcrb
vmovdqa
mov
push
jl
mov
sub
mov
imul
in
orl
pusha
sub
stc
xchg
mov
scas
ret
or
pop
push
mov
lock
lds
pop
mov
xchg
jo
in
mov
orl
mov
fidivs
in
mov
lods
stos
jbe
xor
push
cmp
in
out
ja
push
add
sbb
mov
pop
push
call
movsl
pusha
jp
lods
mov
xchg
mov
push
push
xlat
mov
jae
lds
mov
add
ds
test
jg
arpl
cltd
mov
push
lret
xor
dec
jo
cld
push
push
int
cmp
pop
xlat
mov
aas
add
xor
js
mov
mov
xor
cld
out
mov
std
pusha
pop
cmp
fidivs
aad
xlat
daa
test
andb
xchg
and
push
mov
mov
ljmp
call
xor
cmp
inc
scas
jecxz
cmp
jp
enter
xor
add
push
mov
xor
out
imul
push
xchg
mov
in
add
sub
roll
fimuls
shll
lret
push
addb
push
or
pushf
stc
test
sub
xor
mov
cs
fimuls
push
in
mov
pop
cmp
mov
dec
jl
sub
add
push
inc
insb
int
sbbb
in
mov
movsl
imul
cmp
test
or
sarl
ja
or
fsubrl
jecxz
movsl
xor
inc
cmp
xor
shl
inc
add
stos
jl
mov
and
add
stc
shlb
ljmp
popa
pop
in
lds
lock
fsubrp
xchg
lods
inc
jno
jbe
cwtl
outsl
bound
lods
xor
pcmpgtb
and
out
jne
sbb
xchg
jno
xchg
std
insb
mov
sbb
xchg
arpl
and
lods
test
mov
or
xchg
fnstsw
or
and
lods
fdiv
sti
ljmp
jb
shufps
mov
scas
jp
jbe
push
sbb
xlat
pusha
sub
inc
ljmp
pop
data16
push
jno
iret
data16
scas
sub
or
push
pop
inc
mov
push
rcl
pop
outsl
cmp
and
addl
jo
mov
loop
and
and
andb
mov
xorb
xchg
and
fwait
xchg
call
xor
fistps
sub
xchg
xchg
orl
dec
rcr
push
mov
cmp
cmp
xor
dec
jle
in
xchg
fdivrl
xchg
gs
sti
mov
outsb
jno
jnp
sti
adc
dec
fcomps
xor
push
shlb
daa
mov
subl
cltd
and
jo
nop
lret
lods
xchg
sub
das
mov
sti
aad
push
dec
mov
xchg
cmpl
js
mov
loopne,pn
stc
sahf
mov
mov
icebp
jl
aas
add
dec
shll
je
in
xchg
inc
sbb
test
lcall
push
ds
das
jne
inc
pop
cmpsb
out
lds
push
lahf
xchg
aam
inc
repz
or
xchg
add
rcll
sahf
sub
adc
jo
lret
inc
dec
pop
mov
mov
shr
push
cmp
push
dec
mov
push
lods
mov
outsl
decl
sbb
or
sub
inc
pop
or
aaa
xchg
adc
cmp
jmp
adc
sub
dec
cs
dec
cmp
es
push
xchg
adc
movl
jae
cmp
in
cs
ret
das
cld
sbb
and
sti
xor
in
aad
mov
add
mov
daa
xchg
inc
push
aaa
mov
js
xchg
lret
lret
aam
mov
add
jmp
or
stos
xlat
enter
and
iret
stos
mov
adc
pop
xchg
mov
mov
roll
mov
cli
or
push
idiv
mov
push
push
pop
xor
into
in
fs
dec
addl
inc
push
xor
xlat
rclb
cltd
movsb
std
inc
aad
fcomip
aad
cmp
jns
push
mov
xchg
xorb
xchg
ret
cmc
aam
mov
push
pop
push
jns
dec
lcall
stc
aaa
adc
push
lods
pop
xor
mov
test
cmp
jns
adc
outsb
inc
cltd
dec
dec
and
mov
test
xor
dec
pop
insl
mov
pop
mov
inc
fimull
mov
or
loope
pushaw
int
mov
lcall
gs
sbb
mov
imul
and
cmpsb
popa
pop
subb
xchg
or
test
xchg
aaa
jno
out
xlat
sahf
xchg
call
push
cltd
loope
sarb
or
add
ret
xchg
lea
in
pop
jne
dec
and
push
shlb
jns
jno
adc
pop
in
push
pop
or
cmpsl
push
jl
insb
incl
jne
mov
outsl
inc
pushf
out
repnz
dec
imul
pop
jo
jmp
adc
push
xchg
jbe
movsb
mov
sbb
push
outsl
movb
pop
inc
mov
jns
mov
iret
inc
ret
sub
arpl
inc
int3
filds
jno
add
jmp
in
adc
int3
or
ror
testb
pop
or
in
aaa
sar
outsb
data16
cmp
push
and
js
xchg
dec
inc
hlt
fisttps
cmp
aaa
mov
cmpsl
nop
jle
lock
sbbb
or
lcall
aam
sbb
push
inc
add
sti
sbb
aaa
sbb
stc
sbb
sbb
out
sbb
inc
jmp
mov
sub
jns
subl
enter
das
ja
loop
fcompl
cmc
pop
int
sub
sbbl
shr
lock
add
inc
pop
jno
and
pop
out
xchg
mov
push
loope
push
cmp
dec
pop
ss
xor
mov
cmp
insl
push
cmp
pop
mov
cmp
pushf
push
imul
pop
mov
cmc
sub
out
pop
fsts
lahf
mov
fldenv
stos
in
cli
les
ja
aaa
test
shlb
sarb
out
mov
shlb
pop
sahf
push
add
lods
push
xchg
inc
dec
mov
mov
xchg
mov
adc
lret
out
inc
fnstenv
stos
popf
subl
shlb
roll
and
sub
xchg
repz
pop
cmp
mov
bound
in
aas
push
xchg
adc
xchg
data16
dec
popf
jp
orl
shlb
fadds
add
inc
add
rol
add
jg
add
sub
or
xor
movl
mov
mov
mov
add
orl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movzbl
or
mov
movl
mov
addl
add
xorl
or
mov
not
mov
mov
add
xor
adcl
mov
mov
not
mov
subl
add
subl
and
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
movl
lea
andl
mov
mov
mov
sub
add
subl
mov
mov
orl
xor
add
movl
jne
movl
jmp
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
xor
mov
sub
mov
sbbl
mov
incl
xor
addl
xor
movl
sub
subl
sub
xor
movl
mov
mov
movl
mov
jmp
mov
neg
mov
xorl
xor
addl
xor
sub
and
sub
xor
mov
mov
adc
mov
xor
xor
adc
mov
mov
xorl
add
imul
xor
or
add
mov
mov
mov
sbb
mov
xor
xor
add
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
jmp
sub
jg
imul
stc
nop
inc
sub
xchg
adc
jp
fcomps
jp
pop
imul
lahf
add
and
ret
call
andl
shll
sub
add
loopne
dec
adc
out
mov
outsb
dec
push
sahf
add
adc
push
mov
sar
mov
lods
fcoml
sbb
daa
fs
adcb
int
shr
cld
addr16
ffree
mov
call
add
subb
cmp
iret
lock
pop
sub
test
jecxz
call
adc
mov
and
scas
ds
flds
shrb
aaa
xor
je
data16
mov
mov
pop
adc
lret
cmp
in
jge
pop
fildll
push
cmp
dec
mov
bound
mov
sub
pop
or
mov
addl
mov
sub
mov
xchg
sub
jge
jne
adc
mov
sbb
and
and
lret
ja
xchg
inc
inc
push
arpl
inc
cmp
fucom
int
inc
cli
jmp
je
mov
dec
cmpsl
negb
clc
out
test
or
lods
mov
mov
mov
or
xchg
push
xchg
call
stos
sub
jno
fisttps
push
aas
jg
mov
aas
es
das
je
sub
sub
js
imul
jl
adcb
push
int
and
pop
orl
std
and
int3
cmpsl
or
mov
mov
dec
xor
add
out
xor
pop
divl
jbe
out
sbbb
mov
into
subb
xor
or
xor
test
cmp
fistl
mov
mov
testb
fld1
dec
test
enter
jb
cmp
scas
enter
sarb
inc
pop
jnp
cmc
dec
dec
fsubl
cmpb
mov
add
mov
sub
sub
add
lret
hlt
mov
lds
enter
mov
jle
dec
mov
cmp
add
push
inc
in
jle
hlt
out
xor
test
aad
push
fdivrl
pop
sbb
adc
mov
add
push
mov
popf
or
add
jb
leave
xchg
xchg
pop
sbb
popf
and
rcrl
out
adcl
sbb
or
sub
iret
lods
cmp
add
or
fcomip
lods
jnp
mov
and
pop
bound
aas
out
jp
cmp
lahf
add
addr16
fcomps
dec
mov
loopne
mov
je
in
add
xchg
add
rol
push
pop
fstpl
jp
mov
cli
cs
mov
adc
jnp
loopne
adc
add
pop
dec
xchg
dec
mov
push
lock
mov
lret
or
xor
lods
adc
test
mov
scas
stos
and
pusha
jp
out
hlt
mov
repnz
out
push
js
das
xor
cmp
ret
ljmp
leave
mov
jg
push
lret
sub
inc
in
jge
jmp
lods
movsl
inc
pop
in
shrb
insl
pop
sub
sbb
sbb
or
lahf
test
stc
cli
sub
test
stos
add
jne
sarb
out
ret
xchg
addr16
push
pop
push
jmp
clc
iret
hlt
xchg
jno
mov
fs
adc
pop
pop
nop
mov
dec
scas
aas
shl
pop
je
aad
sahf
mov
popa
jp
repz
jne
movsl
ret
mov
add
pop
out
test
outsb
push
mov
or
je
in
je
xor
mov
push
lahf
xlat
scas
stc
mov
out
push
fsubrl
imul
mov
mov
dec
mov
or
popl
xchg
pop
mull
mov
sbb
xchg
mov
out
les
inc
into
push
xor
cmp
sub
movsb
aam
sub
iret
add
push
mov
push
cmp
mov
xchg
mov
mov
js
popf
add
cmpsb
mov
andb
lds
push
dec
pop
jne
dec
xor
movb
mov
imul
xor
test
js
xchg
fidivs
hlt
dec
lret
loop
inc
cmpsb
inc
nop
rolb
mov
xchg
xchg
loope
cwtl
lock
or
js
xlat
outsb
adc
in
and
add
mov
inc
subb
adc
add
icebp
shlb
ss
mov
daa
dec
daa
roll
and
fbstp
pop
stos
lcall
ret
notl
test
fsub
add
shrb
fisttpl
arpl
inc
movsl
jmp
inc
rcrb
lret
fdivl
dec
mov
jecxz
insl
in
inc
inc
inc
fdivrl
lret
mov
add
or
outsl
inc
jg
mov
mov
out
push
enter
loope
lds
jne
xchg
and
mov
lds
aaa
or
dec
cmpsb
popf
dec
mov
jnp
nop
add
xchg
hlt
mov
adc
jecxz
cmpl
fwait
sub
xchg
test
icebp
test
dec
or
je
pop
aaa
cld
dec
leave
xor
outsb
pop
addb
out
cs
sti
sbb
data16
lahf
jmp
jle
or
test
shl
and
add
inc
adcl
jo
jge
cmp
fdivs
rcll
and
mov
pop
fisubs
xchg
clc
xor
dec
xchg
push
inc
jl
cmp
sub
bound
pop
in
jecxz
inc
clc
inc
cmc
je
cmp
cmp
xchg
pop
in
or
jae
adc
push
mov
aas
sbb
popa
in
js
pop
push
mov
dec
aad
outsl
and
imul
fwait
and
mov
or
mov
in
xchg
or
or
fnstcw
mov
popa
lahf
repz
mov
test
pop
enter
inc
leave
loop
cmpsl
in
cmp
leave
fisttpll
lahf
add
fwait
push
jb
pop
mov
mov
push
pop
in
adc
repnz
add
sub
lds
sbbl
xor
mov
stos
and
cmp
mov
cwtl
mov
stos
int
movsb
mov
cmp
xor
ret
fistpl
cltd
bound
pop
add
in
fs
adc
pop
lahf
movsb
lods
cmp
addb
or
inc
das
int3
fsubp
push
in
mov
jg
call
mov
lret
sbb
sub
pop
push
hlt
cltd
fwait
lret
aam
ss
xchg
rcl
mov
xchg
aad
mov
arpl
addr16
es
pop
pop
roll
or
and
cmp
mov
or
cwtl
stos
sbb
in
into
push
add
jmp
frstor
out
sbbb
cmc
push
outsl
jmp
daa
sub
iret
into
lcall
outsb
mov
cmp
inc
pop
and
test
leave
sub
out
push
xor
mov
mov
iret
rorl
mov
push
in
outsb
jnp
and
lods
faddp
xor
adc
pop
jno
flds
and
rcl
out
in
dec
mov
lods
rcll
fwait
xor
xchg
jp
cmp
jg
push
dec
sarl
cmp
ljmp
js
jbe
sahf
sbb
xchg
and
ret
gs
xlat
xchg
int
mov
lock
fsubp
push
adc
in
or
xchg
ljmp
jecxz
push
gs
and
jbe
sbb
lods
popf
or
mov
data16
es
cmpsl
mov
mov
subb
repnz
cmp
mov
loop
js
leave
je
push
mov
mov
add
dec
adc
xlat
jmp
pop
ja
in
mov
mov
sbb
mov
push
xor
arpl
sbbb
iret
cwtl
cs
pushf
push
ss
sub
xchg
xor
dec
jno
xchg
in
and
xor
lcall
out
popf
lods
inc
mov
enter
fiadds
adc
push
lods
xchg
xchg
and
dec
add
fstp
inc
mov
loop
hlt
cld
add
mov
loop
mov
lods
push
or
xor
inc
sbb
arpl
out
dec
xchg
jge
mov
sbb
xchg
mov
dec
jne
ds
fcoml
js
std
cs
and
scas
lock
mov
jg
inc
fdivl
andb
nop
jno
dec
das
mov
pop
mov
lods
cmp
out
xor
dec
test
cmp
lods
nop
imul
mov
cmp
jg
xor
xor
daa
jmp
jle
xor
xchg
test
movsb
adc
out
cmp
je
stos
orl
jge
cltd
cwtl
adc
jle
movb
fistpll
sub
inc
cmp
mov
scas
jle
rcl
adc
cmp
sub
lret
mov
cmp
push
and
fstp
mov
mov
push
notb
movsb
cmpsb
leave
repnz
mov
mull
xchg
mov
adc
ljmp
cmp
xlat
mov
or
data16
pop
xor
ljmp
shll
adcl
mov
out
dec
cmpsl
lret
dec
push
imul
and
pop
shll
mov
jp
push
test
mov
push
gs
mov
mov
popa
push
jle
mov
jbe
adc
mov
rcll
dec
enter
fsubrl
fldenv
jo
and
mov
fldenv
cmpsb
lea
adc
enter
mov
or
test
clc
in
pop
rorb
xchg
adc
cmp
pop
lods
add
ret
sbb
push
outsl
popf
add
push
xchg
test
aad
lahf
pusha
mov
cmp
icebp
mov
fisubrl
mov
push
lahf
and
push
pop
test
rcrb
jnp
cs
push
pop
xor
es
pusha
testl
das
andb
push
lcall
mov
push
pushf
ss
push
scas
jno
ss
imul
aaa
mov
popf
lods
fcompl
cmp
pop
imul
xchg
cltd
lods
sub
insb
int
outsl
repz
mov
xchg
dec
idivb
mov
shlb
or
and
add
adc
add
cmp
and
jg
insb
int3
pushf
add
out
mov
out
inc
jl
dec
lea
mov
jmp
cld
popa
int3
repz
or
add
ja
pusha
ret
cmp
outsl
cwtl
mov
jns
imul
mov
dec
bound
aam
popa
orl
stos
lods
aad
pop
and
and
repz
inc
and
fsts
cmc
push
leave
xchg
lods
xchg
inc
lea
ja
gs
fwait
lock
orl
aad
pop
adc
imul
mov
jmp
ret
mov
push
daa
popa
fdiv
cmp
jle
jmp
mov
fwait
in
outsl
daa
lret
nop
mov
inc
repnz
add
imul
mov
mov
in
fiadds
adcb
xchg
aad
mov
hlt
stc
pushf
mov
ja
mov
out
push
and
inc
xchg
xlat
cltd
and
sub
jg
rcrl
sarb
lock
lock
adc
mov
aaa
mov
ret
out
insb
enter
sbb
mov
jmp
sub
shll
jne
add
lret
bound
cmp
ja
movl
les
sbb
fisttpll
lret
and
xchg
sbb
mov
or
mov
jno
jbe
nop
sbb
cli
xor
ret
mov
mov
fidivrl
sarl
xor
fbld
push
aam
sub
jne
inc
shlb
lds
jmp
jae
int3
adc
push
in
mov
inc
xchg
pop
es
jecxz
sub
ljmp
ficomps
out
dec
or
sbbb
mov
out
push
push
mov
into
icebp
push
and
cmpsb
push
adcb
push
icebp
inc
es
hlt
std
fiadds
pop
in
pop
mov
out
ret
adc
repnz
test
decl
out
and
shl
or
fldl
in
subb
clc
inc
or
mov
gs
lock
imul
mov
das
js
xchg
daa
fwait
mov
push
js
ss
outsl
mov
lret
jge
int3
mov
inc
daa
fldt
push
jecxz
enter
inc
scas
movsb
rorl
test
xchg
nop
mov
enter
sbb
lds
xor
xor
lods
push
pop
loop
subb
mov
rorl
lock
stos
shlb
dec
inc
jp
mov
mov
frstor
adc
je
lea
xchg
scas
outsb
mov
inc
lahf
icebp
enter
leave
popa
mov
sub
mov
popf
or
popa
cmc
enter
je
push
repz
cmp
mov
cmp
push
pop
mov
inc
sub
and
xor
or
or
and
xchg
inc
arpl
mov
push
xor
aaa
lock
cmp
push
fcmovb
inc
lret
insl
jp
pop
jge
icebp
xchg
fdivrs
pop
sti
inc
lret
cmp
sahf
xchg
ficomps
daa
cmp
outsb
and
bound
out
int
lcall
in
pusha
xchg
push
pop
gs
cs
loop
das
jp
xchg
or
xor
dec
or
push
inc
mov
dec
and
adc
dec
vmwrite
adc
mov
mov
dec
sbb
or
outsl
jno
arpl
cltd
cmp
addr16
cld
popa
jae
cmp
add
mov
cmp
and
orb
pop
xchg
cmc
into
sub
scas
add
mov
dec
hlt
or
jle,pt
jo
loope
push
sbb
dec
mov
popf
rolb
rcr
lea
cltd
inc
scas
inc
iret
sub
inc
insb
add
push
pop
jmp
jbe
daa
stos
insb
mov
lds
jmp
cli
pop
insb
inc
test
push
push
mov
pop
fnstcw
negl
inc
in
aam
adc
out
subb
out
ss
shlb
sub
dec
pop
xchg
mov
mov
sti
aam
loope
insb
out
aad
cmpsl
addr16
mov
das
mov
and
xor
inc
add
das
cmp
shlb
sub
movd
xchg
mov
sbb
pop
mov
xchg
inc
mov
aaa
mov
ja
jle
bound
in
xor
andb
inc
aad
cli
out
test
mov
inc
dec
inc
dec
cmp
mov
push
sahf
jmp
cli
adc
xor
cmp
movsb
ficoms
out
ret
movsb
loop
and
pop
icebp
std
lahf
or
bound
mov
mov
mov
push
mov
fists
loop
insl
fs
jle
xor
notb
lods
loope
dec
loope
subl
hlt
orb
xor
loopne
mov
add
sbb
push
test
xchg
outsl
cmpsl
ret
outsb
aam
lds
xor
cvttps2pi
adc
dec
jo
and
mov
mov
xchg
js
icebp
je
clc
push
jle
cmpsb
mov
fadd
sub
pusha
lods
repz
mov
jnp
sub
cmpsl
je
push
dec
js
jp
scas
lds
mov
add
bound
mov
sub
mov
inc
addr16
push
mov
fdiv
loop
jno
sub
xor
call
push
cmp
mov
test
mov
rcll
fwait
or
fnstenv
dec
rol
hlt
stos
adc
stos
adc
sub
mov
sbb
movsl
test
pop
xchg
sbb
xchg
mov
adcl
mov
fstl
test
arpl
fisttpl
ret
jb
jnp
jge
cmp
gs
or
mov
aaa
stos
hlt
out
xchg
dec
int
add
outsb
or
shl
filds
negl
ret
dec
lds
mov
andb
dec
lret
xchg
lods
or
xchg
outsb
loop
sarl
clc
mov
call
imul
insb
enter
frstor
push
mov
sub
mov
mov
sbb
test
imul
out
aam
lea
ss
test
scas
and
dec
das
ja
sub
clc
jp
mov
mov
jns
dec
adc
xlat
mov
aaa
loopne
and
jo
out
es
xor
in
xchg
sub
outsb
push
and
rol
dec
jl
or
pop
sahf
xchg
std
dec
pop
add
jae
mov
fdivs
lret
push
ret
mov
or
push
pop
rcl
ja
and
mov
punpckhwd
vxorps
mov
fcmovnb
jecxz
xor
fdivrs
lods
popf
inc
les
cmp
xchg
stos
bound
jno
in
pusha
in
ds
imul
clc
and
icebp
cs
push
lcall
loop
fidivrl
lret
in
scas
cmp
loopne
ds
stc
cwtl
lock
cmp
dec
add
movsl
test
arpl
xor
lret
lret
lcall
stos
sbb
enter
jmp
jnp
imul
enter
mov
enter
mov
addr16
push
and
test
out
or
data16
push
mov
mul
xchg
hlt
pop
cltd
dec
sub
cld
cmpsb
pop
popf
mov
lock
cmpl
mov
add
orl
lret
jae
or
insl
ficoml
adc
and
out
sti
ds
dec
shll
movsl
scas
cmc
jp
jns
scas
out
mov
adc
or
adc
aam
mov
dec
gs
imul
cmp
xor
pop
in
ljmp
push
push
out
pushf
jmp
ljmp
push
mov
add
xchg
rcrb
in
inc
sub
jb
pop
mov
or
xchg
fdivl
std
xor
mov
outsb
lret
fidivs
pop
cmp
sbbl
push
sbb
cs
and
push
ja
xchg
sbb
ljmp
inc
sbb
inc
push
outsl
aam
stos
pusha
and
xor
jle
movsl
adc
in
insb
es
push
jmp
lret
sub
fsub
jl
mov
lock
fcomip
mov
mov
add
pop
inc
push
and
aam
xor
lods
out
mov
jns
test
ret
imul
add
in
nop
push
es
mov
divl
aaa
insb
loop
and
dec
icebp
sbb
and
call
adc
mov
xor
sbb
xor
arpl
add
stos
lock
xor
mov
mov
add
dec
push
and
insl
mov
dec
mov
lds
das
or
xchg
enter
repz
xor
mov
pop
xchg
or
popa
shll
pop
mov
adc
pop
or
mov
cmp
dec
lea
pushf
push
sub
mov
stos
cmp
push
mov
cwtl
adc
push
xor
adc
aaa
mov
outsb
jb
in
inc
out
subl
jnp
aas
push
pop
das
add
adc
iret
adc
sub
aad
sub
or
outsb
mull
repz
mov
jbe
add
mov
int
mov
dec
xor
push
cmpsl
popf
pop
mov
dec
cmp
sub
dec
rcr
out
aas
aad
pop
arpl
icebp
dec
push
cmp
dec
xor
loop
add
sarb
lods
scas
sbb
push
mov
push
sbb
mov
test
add
sub
fwait
adc
je
nop
stc
jge
repz
ret
adc
xor
pop
lea
mov
xor
mov
loop
dec
bound
mov
in
mov
jns
jbe
js
out
inc
mov
imul
mov
dec
clc
enter
imul
je
add
ds
scas
mov
roll
cmp
mov
outsb
setge
push
dec
cs
fldt
sbb
add
cmp
loop
mov
ret
mov
aad
stc
push
fcoml
xchg
cwtl
xchg
lret
pop
sub
pop
mov
imul
jno
and
xchg
out
lret
push
movsb
sub
icebp
cmp
aas
pushf
jo
sbb
out
sbb
gs
pop
cmp
push
pop
hlt
sbb
cmc
xchg
dec
loope
mov
xlat
pop
xor
push
or
fnsave
into
icebp
jg
cmp
inc
orb
sub
add
div
sub
jae
adc
jge
clc
inc
and
mov
sbb
adc
dec
sarb
add
popf
mov
test
jl
cmp
jns
lcall
sbb
mov
sbb
into
arpl
add
pop
mov
fdivp
pop
xor
in
inc
idivb
adc
and
cltd
jo
inc
out
sub
clc
cmpsb
mov
aas
icebp
outsb
loopne
iret
divl
sbb
push
add
sti
out
sbb
inc
fwait
je
mov
subl
pop
es
testl
mov
jge
mov
lods
dec
or
and
sub
mov
cmc
mov
pop
pop
push
push
sub
dec
or
cmc
push
icebp
add
and
cmp
adc
pop
mov
jmp
mov
lret
mov
sbb
cs
popf
push
negl
stos
popf
pop
mov
inc
icebp
jno
pop
inc
inc
xchg
mov
adc
xchg
cmp
jg
fnstsw
xchg
inc
dec
push
adcl
cmpl
arpl
or
push
xchg
dec
xchg
cmp
mov
push
js
pop
adc
in
roll
sbb
bound
in
lcall
add
sahf
gs
loop
push
scas
aam
lods
sbb
inc
push
scas
push
lock
jmp
leave
mov
adc
pop
repnz
lahf
popf
js
nop
mov
xor
adc
cltd
enter
popl
fldln2
or
cmc
adc
cmovp
jns
sub
xchg
sub
cmp
push
push
adc
mov
mov
frstpm(287
sbb
mov
in
mov
jno
mov
inc
inc
sbb
imulb
ja
mov
sahf
dec
loope
sub
sbb
adc
xor
sbbb
xchg
repnz
test
dec
xchg
andl
cltd
mov
push
adc
dec
nop
ja
xchg
mov
adc
int3
cmp
push
call
stos
mov
jns
das
adc
ljmp
ds
fbstp
gs
mov
sbb
adcb
dec
cmp
or
push
push
mov
movsb
enter
add
call
and
cmp
xor
outsl
add
mov
shrb
ja
dec
in
fdivrl
ss
cmp
pusha
cmp
lahf
sub
adc
roll
data16
or
xchg
add
sarb
xchg
pop
sbb
and
dec
mov
cmp
cli
stos
cs
xor
mov
fwait
out
pop
mov
shlb
daa
sbb
sub
xchg
add
inc
inc
loope
gs
or
fdivrs
dec
adc
call
loop
fcmovu
xchg
ja
jle
lret
ret
in
addl
lea
push
sub
imul
lcall
dec
imulb
shll
dec
sub
ret
sub
div
fs
dec
xchg
inc
xchg
retw
rcl
lods
mov
cmc
test
or
mov
pop
cs
fucomip
push
cmp
pop
mov
sti
sub
movsl
inc
fwait
cmpsl
xor
test
enter
test
or
jo
dec
aas
cmpsb
bound
sub
pop
xchg
hlt
jmp
in
push
addb
adc
icebp
jnp
and
sub
xor
lock
xor
pop
jb
mov
notb
mov
adcl
add
fbld
mov
ja
inc
roll
sub
lret
xor
fwait
push
into
les
xorb
push
mov
fisttpl
push
adc
sahf
or
scas
and
adc
xor
mov
cmp
lock
and
aam
popl
sarl
std
add
test
pop
imul
pop
fs
push
rcrl
push
jne
sbb
mov
inc
mov
jp
imul
lret
dec
scas
jno
std
fs
xchg
pop
jbe
inc
pop
adc
cmp
inc
add
sbb
xchg
mov
add
dec
lcall
sbb
into
clc
repnz
sub
lcall
out
arpl
mov
pop
imul
icebp
iret
adc
pop
test
sub
fisttps
pushf
pop
leave
add
cmpsl
into
push
dec
movsl
jl
and
cmp
push
pop
aas
push
lcall
cli
roll
sahf
outsb
sbb
xchg
hlt
and
jle
lods
jbe
mov
repnz
loopne
std
pop
mov
aaa
int3
push
ljmp
mov
xor
adc
sbb
lods
pop
cwtl
ljmp
lods
into
int3
aad
das
clc
ret
ja
ret
mov
addr16
test
sub
shlb
movsl
jmp
pop
dec
movsl
sub
cmp
sti
pop
push
sti
cmpps
sti
push
and
lods
call
pop
les
inc
and
adc
inc
or
cmp
aaa
aas
pop
rcl
cmpsb
inc
and
dec
movsl
push
out
lret
roll
pop
cmc
loop
pop
rorl
jae
loope
push
ljmp
popl
inc
movsb
cmp
jl
test
pop
jmp
mov
je
jae
cmc
fisubs
inc
fs
mov
jne
or
adc
ret
sbb
lods
mov
jle
fwait
and
xchg
fmulp
movsl
adc
xchg
iret
xchg
dec
loopne
cmp
mov
jge
bound
add
jmp
inc
mov
ret
push
mov
cmp
leave
cmc
add
or
ds
fwait
inc
jle
fisubrl
cltd
jp
daa
dec
cwtl
inc
mov
push
jbe
jmp
push
xchg
lock
push
arpl
cmc
cmpsl
in
cmc
sbb
ljmp
sbb
jl
adc
testb
push
fildll
fdivrs
add
inc
mov
leave
out
imulb
sub
inc
fwait
lods
iret
push
pop
bound
test
cmp
ficomps
dec
shl
das
push
nop
mov
mov
in
pop
xor
cmp
out
pushl
jecxz
xchg
ds
aam
lods
inc
hlt
es
test
imul
push
fcomps
cmp
les
add
mov
mov
rcr
arpl
cmp
repz
push
shrb
scas
mov
fwait
addb
je
lods
lea
jmp
cmp
sti
enter
or
mov
fsts
xchg
shll
push
es
lahf
mov
inc
xorl
inc
popa
outsb
out
cltd
or
push
mov
adc
xlat
ds
sbb
push
xchg
sbb
jno
mov
or
mov
scas
mov
fwait
mull
in
mov
dec
dec
xor
in
jns
ljmp
pop
adc
imul
push
jns
mov
dec
xor
xchg
mov
lcall
pop
mov
cmp
mov
popf
leave
pop
iret
lock
outsb
call
xchg
fsubs
xchg
roll
sbb
in
add
in
fidivs
mov
cmp
jno
pop
and
lods
push
hlt
xchg
fwait
mov
cmc
rcrb
fnsetpm(287
pop
sbb
cmp
mov
push
daa
mov
test
fisubl
pop
cmp
xlat
or
sahf
adc
or
out
sbb
popf
cmp
sbb
push
push
xchg
cmp
and
mov
in
push
shlb
inc
ret
aaa
pop
jno
fwait
es
add
xor
ds
sub
dec
aad
ret
leave
mov
nop
loop
dec
adc
addl
dec
jnp
pop
loopne
pop
inc
lahf
or
andl
lods
xchg
addl
sarb
sub
imul
jmp
dec
pop
iret
pop
fisubrs
lcall
adc
in
and
pop
push
mov
xlat
jae
scas
hlt
js
add
aas
inc
lea
mov
dec
adc
cmpsb
popa
cmp
add
mov
imulb
jge
jne
hlt
jae
push
dec
inc
jg
movsl
push
test
mov
and
or
jno
mov
mov
fistps
lock
lods
cmp
push
sahf
jne
jle
subl
add
add
gs
cmp
and
sub
mov
gs
sbb
sbb
stc
xor
stos
mov
cli
jb
pop
inc
inc
out
push
pop
mov
stos
xchg
xchg
loopne
cli
int3
call
jle
fists
out
sub
sbb
or
ja
inc
xchg
js
add
ficomps
inc
add
outsl
stos
dec
cltd
inc
xor
cmpsl
cmp
addr16
jmp
testb
fcomps
or
es
daa
cli
xchg
and
out
inc
jmp
push
adc
mov
inc
into
ret
pop
jo
fsubl
cmp
pop
dec
lret
pop
mov
jmp
pop
mov
out
xor
mov
leave
sbb
sbb
stc
pop
cmp
test
xchg
int
mov
into
dec
push
jb
push
ret
in
and
jno
popa
movsb
int3
mov
bound
in
pop
pop
sbb
and
fldt
dec
add
xchg
pop
lea
xor
push
daa
mov
scas
adc
sbb
mov
and
into
or
cmp
pop
and
xchg
stos
adc
xor
xchg
push
xchg
js
test
out
out
rorl
hlt
sub
shrl
or
mov
fnstcw
mov
fsts
popf
les
adc
bound
das
addb
out
push
jb
nop
fbstp
hlt
aaa
imul
mov
ja
jnp
arpl
dec
mov
jp
sbb
mov
push
adc
sbb
mov
sbb
cmp
cmp
enter
cmpsb
xchg
jp
inc
mov
xchg
scas
fucomi
outsl
fidivs
push
or
mov
das
iret
and
in
mov
inc
movsl
cmp
clc
jo
push
hlt
test
add
adc
arpl
mov
mov
test
in
mov
inc
dec
and
loop
pop
cli
sub
add
mov
mov
xor
add
jmp
clc
fsub
mov
mov
mov
cmp
push
jns
fcomps
jp
adc
std
loope
pop
shlb
dec
arpl
sub
or
add
lahf
mov
xor
sub
repnz
testb
ret
or
sub
in
enter
test
mov
int
sub
xchg
dec
ds
out
loop
adc
sub
or
cmp
in
jmp
cmc
sbb
or
mov
dec
bound
inc
xor
and
std
test
enter
js
inc
stos
mov
ret
loop
arpl
outsl
sub
sub
dec
movsl
aad
xchg
sub
inc
inc
stos
sbb
call
pop
es
js
jbe
ds
or
xchg
clc
jp
mov
cmp
das
xchg
imul
call
loopne
mov
loop
jne
pop
movsb
inc
ljmp
test
in
mov
xor
xchg
sbb
stos
sbb
lcall
stc
xchg
adcl
xor
enter
mov
dec
in
pop
fneni(8087
pop
mov
or
aaa
mov
push
addr16
int
xchg
out
mov
fsts
mov
sbbl
ret
sub
stc
jecxz
add
shrl
pcmpeqd
dec
rcll
pop
mov
xor
inc
lret
arpl
lcall
adc
mov
stc
jp
das
pop
lret
stos
or
test
mov
mov
add
lods
mov
icebp
mov
sub
iret
adc
into
leave
mov
lcall
push
push
out
sub
mov
enter
cwtl
mov
cmpsl
sbb
cmp
jecxz
jmp
ja
pusha
stos
inc
and
mov
test
ja
mov
cwtl
js
jnp
mov
mov
call
mov
mulb
add
aam
pop
xchg
xor
mov
inc
icebp
in
lea
insb
or
mov
jb
jl
cmpsb
mov
push
jecxz
add
cmpsb
fisttpll
fs
hlt
imul
test
das
xor
lea
xor
je
shrl
and
jne
in
inc
jae
das
mov
dec
in
rcrl
adc
pop
divb
inc
mov
std
cmp
mov
scas
in
pop
imulb
inc
gs
pop
xchg
xor
int
out
adc
jmp
test
sbb
stc
mov
sub
sbbb
mov
mov
mov
mov
std
inc
lds
addr16
cltd
pushf
pusha
mov
adc
push
push
pop
pop
je
mov
lods
cmp
dec
mov
stos
movsb
xorl
imull
movsl
movsb
jns
les
ret
jp
mov
xchg
or
das
mov
mov
fsts
jmp
pusha
ficoml
sub
adc
or
mov
sub
es
adc
push
dec
ret
shl
xor
xchg
dec
int
pop
fildl
popa
push
xchg
or
mov
jo
rcrl
and
sbb
sub
jp
xchg
add
ret
inc
in
inc
std
ljmp
stc
rcl
lods
jle
jb
or
push
test
stos
xchg
push
cld
es
push
mov
adc
push
fs
je
jo
iret
stos
inc
test
repnz
loop
sub
repnz
mov
or
pop
add
data16
sti
mov
out
add
stos
popa
pop
in
xchg
psraw
push
mov
fadds
sbb
in
sbb
pop
jl
les
cmp
mov
test
cld
shll
lock
repz
sbb
popa
je
mov
cmp
ss
inc
dec
xor
cld
mov
add
ds
movsb
out
leave
cli
mov
fwait
inc
xchg
add
inc
icebp
popaw
mov
inc
sub
pop
mov
fisubrl
pop
sti
insl
mov
sahf
and
push
mov
push
or
add
mov
jecxz
dec
mov
les
xor
mov
push
fidivrl
pop
shl
mov
jns
ret
lahf
and
lods
je
xchg
jbe
xchg
jmp
cmp
sub
mov
test
imul
pop
in
lret
lcall
lods
mov
sbb
jge
push
test
lods
push
pop
xchg
sbb
cmp
or
nop
sub
push
push
int
lock
inc
pop
jb
add
lret
jne
imul
add
rcrl
dec
fcmovu
adcb
stos
mov
jg
cs
mov
mov
dec
pop
jle
and
xor
pusha
push
nop
repz
push
sbb
mov
das
insb
icebp
shrb
js
mov
sbb
imul
mov
and
pop
sub
lock
and
jnp
lret
in
xchg
ret
dec
je
xor
dec
pop
adc
sbb
push
loopne
add
adc
add
int
or
in
dec
outsb
int
fisttpl
dec
cld
loopne
mov
fs
enter
setns
xchg
fdiv
push
jnp
adc
sub
sub
outsl
xchg
cmp
jne
repz
xchg
cmc
addr16
cmp
pop
fsubrs
add
std
incl
lods
push
fs
cltd
inc
cs
cmpb
repz
mov
iret
sub
sbb
and
icebp
and
jge
ret
sub
ss
and
aad
addr16
fstpt
pop
push
outsb
shll
inc
enter
div
pop
aas
sbb
icebp
imul
pop
pop
cmpb
leave
in
xor
pop
cmp
nop
adc
add
cmp
lds
or
int
jle
or
add
stos
lahf
lds
int
shll
idiv
test
das
cld
mov
and
arpl
int
shlb
add
pushf
mov
mov
xchg
sub
sub
xor
add
daa
sbb
inc
cmpl
mov
mov
xchg
cmp
std
add
xor
mov
in
in
add
in
aaa
enter
and
lret
imul
sbb
push
aas
jecxz
xchg
int
add
inc
and
sub
out
mov
xchg
cld
xchg
dec
sbb
cli
mov
xchg
imulb
daa
enter
mov
xchg
pop
fists
fisubrs
mov
mov
dec
jno
jg
int
popa
icebp
cmp
xor
jb
shlb
jno
push
push
lcall
enter
pop
or
std
inc
xchg
mov
adc
aas
lods
out
scas
fidivrs
xchg
adc
test
xchg
mov
or
mov
xchg
insb
subl
daa
sbb
movl
fdiv
pop
ds
jp
cmc
lcall
popf
test
xor
lcall
stos
shl
sbb
sub
int
pop
add
sbb
rcrl
xor
loope
inc
jne
subb
and
mov
stc
cmpsl
cmp
iret
test
cli
into
jle
and
out
sahf
scas
rclb
fadd
xchg
gs
pop
inc
pop
cmp
jns
lret
and
stc
sub
push
mov
inc
xchg
sbb
jge
in
jle
push
inc
sub
inc
xor
mov
pop
sarb
push
xchg
cwtl
imulb
add
test
or
adc
cli
mov
push
ds
or
xlat
fbld
scas
sub
fsts
ret
xchg
dec
push
aas
in
inc
popf
std
hlt
in
dec
data16
mov
xchg
insl
inc
jecxz
dec
mov
fisttpl
shll
js
sub
jmp
inc
stos
sub
sub
sbb
imul
dec
cli
cmp
cli
sbb
push
dec
rorl
push
pmulhw
aad
stos
std
sbb
xchg
js
adc
in
jb
repz
mov
rol
cmp
jmp
push
lea
sub
add
stos
or
dec
mov
movsb
out
jl
mov
addb
inc
pop
inc
add
sbb
fs
aas
xor
cltd
aas
cmp
jno
adcb
out
ljmp
or
add
cmpsb
adc
push
clc
xor
aaa
jecxz
xchg
jge
sub
push
sbb
icebp
push
mov
pop
jmp
notb
sub
push
adc
iret
xchg
push
or
loopne
aas
imul
dec
or
pop
jp
inc
dec
sarl
mov
lcall
add
aas
mov
loop
mov
cwtl
popf
das
mov
pushf
pop
mov
mov
xchg
subb
pop
out
or
mov
loop
fldenv
adc
arpl
cmp
push
adc
inc
into
xchg
add
ficompl
mov
pop
inc
sub
cmpsb
aas
insl
cmp
js
jno
mov
jmp
addr16
std
xor
jp
cmp
dec
mov
repz
bound
addr16
mov
xchg
mov
cmc
shll
lret
cmpsb
jae
jg
inc
mov
xchg
stc
and
push
sub
cli
mov
fstps
push
int
lods
insb
jp
pop
dec
mov
das
dec
icebp
rcl
fnstenv
in
push
iret
je
fstpl
cmpsb
xchg
into
or
add
mov
fidivs
test
imul
hlt
stc
fcomi
lds
mov
xchg
pop
push
xchg
int
mov
xor
fs
in
adc
call
in
mov
push
cld
int
mov
movsb
lahf
cli
das
push
lds
and
mov
fidivs
add
negl
xchg
sub
jo
shll
pop
cmp
mov
mov
cmp
mov
add
and
inc
ja
pop
dec
or
out
test
mov
mov
inc
xor
cmpsl
push
sub
std
arpl
and
pop
icebp
aad
outsl
pop
jne
fwait
iret
sub
ds
push
cld
or
into
ds
add
push
mov
fnstenv
lods
sbb
cmp
int
jle
inc
daa
or
sahf
inc
arpl
xlat
cmp
aad
cmp
pusha
push
mov
stc
sbb
cld
fildll
mov
add
loope
popf
mov
cmp
xchg
mov
adc
cmp
xchg
push
shlb
mov
out
popa
cmp
movsl
aam
ds
inc
popf
adc
paddsw
movsb
rcrl
rolb
and
test
inc
test
and
jge
es
ret
stc
jmp
imul
into
je
call
push
in
insb
jmp
loop
inc
dec
mov
std
mov
negl
nop
adc
pop
dec
sbb
adc
repz
inc
add
add
fldcw
fs
fldcw
mov
dec
push
gs
in
cli
xor
xchg
xor
mov
aam
cmpsb
je
or
mov
jp
add
js
lret
and
fwait
dec
es
stos
xchg
push
repnz
push
adc
push
das
test
xlat
cmc
inc
push
jmp
outsb
and
movsl
add
mov
aas
outsb
mov
lds
pusha
outsb
repz
pusha
test
jb
nop
test
outsl
and
sbb
scas
mov
repnz
sbb
lods
inc
or
xchg
lret
out
adc
add
push
push
lods
dec
out
push
popa
idivl
loopne
dec
xchg
js
out
sbb
dec
insb
pop
addr16
push
ret
int3
pop
jp
fucomp
sbb
push
xchg
popf
xchg
stos
js
icebp
xor
xchg
shll
mov
test
test
cmp
es
test
dec
jmp
dec
adcl
cld
mov
sub
scas
adc
sar
shl
sbb
mov
rclb
sub
cmpsl
mov
jne
or
ljmp
in
mov
mov
inc
cmpsl
and
inc
cmpsl
mov
std
add
xchg
cmc
sahf
pop
nop
or
push
xchg
inc
cwtl
cmp
hlt
fwait
cwtl
mov
cmc
sbb
inc
jo
rcr
insb
repz
in
outsl
fsubrs
push
push
xchg
hlt
aam
xlat
jbe
inc
into
dec
or
negl
sub
mov
mov
sahf
sub
dec
clc
lds
add
or
repnz
jo
mov
fcom
movsl
push
sbb
inc
outsl
jp
push
sub
dec
add
jb
cmc
xchg
cmp
fists
lcall
cmpsb
daa
pop
test
ja
popf
pop
xchg
or
jne
lock
cmpsl
dec
mov
mov
jle
inc
shll
or
inc
test
repz
mov
cmp
movsl
or
filds
sbb
mov
aaa
add
std
adc
lea
pushf
pusha
push
add
cmc
je
cld
add
push
dec
cmp
sub
jge
outsl
aam
cmpsb
jl
xor
inc
fidivs
sti
adc
push
movb
or
dec
fcomps
aam
mov
jnp
movsb
hlt
aaa
mov
mov
adc
pusha
sbb
dec
sahf
fdivl
lret
cmp
dec
jbe
pusha
pop
cwtl
or
outsb
rcrl
or
js
sarl
pop
movsl
add
xor
ffreep
mov
adc
push
add
scas
xchg
sahf
test
inc
scas
cmp
lret
and
sti
or
testl
dec
or
insb
pop
nop
or
and
pop
lret
jle
es
add
mov
xchg
stc
enter
xor
mov
pop
filds
fadds
out
jns
push
cmp
outsb
xor
xor
push
mov
ja
push
xor
testb
ja
push
push
mov
cld
sub
daa
rcl
and
mov
dec
jg
mov
es
stos
mov
jp
jno
push
jnp
in
push
mov
adc
push
or
ja
loope
cltd
hlt
jae
aas
cmp
lcall
lahf
mov
daa
xchg
mov
mov
inc
push
call
mov
xchg
push
add
imul
jbe
inc
jb
mov
dec
fsubr
xchg
dec
stos
dec
sub
sahf
mov
jg
xor
jl
dec
xorb
xchg
fnstenv
or
cmpb
daa
sbb
bound
fs
jns
jle
ret
fimull
aas
out
jl
inc
test
nop
in
pop
push
inc
or
push
cmp
call
inc
bound
adc
loope
add
cwtl
xchg
or
mov
loopne
insl
cmpsl
cltd
adc
xchg
push
cli
push
mov
mov
dec
test
std
xchg
out
ja
mov
push
and
cmp
je
add
push
shr
rorl
aad
xchg
mov
imul
repz
into
lock
jecxz
inc
cmpsb
nop
test
xor
rcll
cli
insl
test
dec
addl
nop
add
movsl
das
iret
mov
cmp
mov
or
enter
lods
sbb
mov
pusha
xchg
dec
pop
shlb
mov
loope
les
lret
dec
mov
jo
or
jns
push
mov
sub
xor
jmp
hlt
jecxz
arpl
and
cmp
scas
into
fists
pop
sbb
jmp
xchg
fisubrl
dec
test
adc
cmp
jbe
aas
jb
xchg
out
xchg
ret
stos
je
sahf
sbb
cmp
lret
or
cmp
ja
push
std
stc
push
mov
push
loope
inc
sbb
popf
cmp
push
jo
xor
mov
faddl
sbb
mov
add
repz
sarb
stos
clc
int
mul
ss
push
sub
mov
sbb
pop
sbb
lock
adc
shll
xlat
mov
into
aad
rorb
ret
mov
add
cmpsl
loope
adc
pop
jns
call
mov
push
insl
lock
xor
push
test
xor
lret
out
negl
test
push
in
cld
fldl
pop
cli
out
fisubrl
stc
push
es
cmp
fistpl
and
lcall
mov
xchg
dec
lods
cmp
mov
sbb
fdivrl
daa
jg
out
hlt
mov
pop
mov
jle
leave
je
cwtl
ds
and
and
add
repnz
jecxz
sbb
jb
iret
mov
xor
shl
fbstp
pop
mov
rolb
arpl
pop
and
fadd
sbb
dec
pop
lock
insl
jecxz
lret
jmp
leave
rcrl
ret
adc
mov
add
jp
rolb
cmp
ret
lahf
inc
outsl
roll
push
imul
mov
jl
ja
add
aaa
dec
cmpsl
xchg
leave
cmc
dec
lods
mov
aas
daa
arpl
out
cltd
enter
out
xchg
mov
mov
sub
mov
sub
cmp
xlat
inc
leave
mov
push
xchg
fisttpll
adc
jecxz
iret
cltd
mov
hlt
in
push
mov
data16
inc
pushf
cld
mov
sahf
jbe
mov
js
fwait
or
shrb
mov
or
das
mov
jbe
and
jbe
push
js
mov
jno
jne
add
aam
ds
mov
push
lods
jnp
std
push
and
push
push
movsb
inc
jo
mov
inc
jmp
xchg
adc
pop
xchg
int
cwtl
movsl
xchg
out
js
pop
pop
mov
pop
ljmp
clc
cmp
rorb
pop
adc
mov
cmpsl
add
jge
push
cmp
jae
xor
in
inc
ljmp
clc
or
xor
or
mov
shrl
inc
xchg
jmp
rorb
add
mov
popa
xchg
sub
js
push
cmp
insl
in
sti
ja
lods
jle
fildl
imul
mov
mov
loop
mov
sub
out
xchg
xchg
rcr
sub
sti
dec
jae
imul
int
sarl
mov
mov
dec
cltd
pop
cmp
pop
test
mov
ret
mov
adc
pop
shlb
das
xor
gs
stos
inc
rorb
cld
into
adc
cmp
push
xor
adc
repz
das
andl
arpl
sub
int
adcb
mov
dec
hlt
lahf
pop
pop
xor
push
loopne
cmp
ret
cmp
cmc
sti
and
movsl
fcmovnb
loop
icebp
pop
subl
jge
loop
out
xor
repnz
mov
mov
test
jp
and
pop
aad
mov
adc
mov
lods
test
loop
in
xor
jmp
mov
imul
jl
ret
mov
aad
cwtl
shl
xchg
mov
xlat
or
dec
ja
pop
leave
xor
fmull
cmc
mov
js
outsb
iret
lods
mov
fidivrs
sub
push
gs
aaa
pop
inc
xchg
stc
cmpsl
xchg
sti
int
pop
icebp
push
fsubrs
out
out
out
rclb
out
xor
rorl
repnz
mov
nop
push
sub
ds
lea
cli
mov
arpl
out
ja
sub
xor
out
cmp
mov
mov
cmpsl
loop
mov
lret
ficoml
pop
mov
jg
push
andb
inc
jnp
dec
sbb
mov
sub
stos
inc
test
addb
adc
xchg
mov
sub
cli
cmp
mov
popa
jbe
fwait
add
push
push
inc
jb
ja
aad
mov
xchg
int3
xchg
jl
movsb
popa
call
leave
jnp
jecxz
lods
mov
addr16
xchg
nop
xor
sub
mov
fsts
cli
inc
sahf
inc
lcall
push
xlat
pop
pop
mov
insb
ja
repnz
aad
or
into
push
adc
inc
gs
into
cmc
test
mov
dec
xor
mov
cmpsb
mov
mov
jg
cmc
lock
stos
rcrb
jo
add
sbb
stc
aas
andb
subb
inc
aas
dec
adcl
pop
jnp
xor
gs
lret
and
jae
sarb
mov
cli
mov
and
scas
add
pop
fwait
sahf
push
in
pop
enter
jb
sub
pop
mov
jecxz
out
cmpsb
lock
mov
sbbl
add
loope
jbe
rcrb
jecxz
pop
mov
rcrl
and
popa
subb
add
inc
adc
push
push
xor
call
repnz
push
aas
repnz
inc
test
lahf
insb
scas
push
cld
jl
push
mov
sbb
mov
mov
jae
bound
xchg
cltd
mov
out
dec
or
adc
xchg
xchg
sarb
lahf
or
loop
incl
pop
mov
addr16
into
inc
dec
dec
xchg
lock
add
mov
push
repz
lods
dec
testl
push
cmpsl
out
push
jp
or
add
pop
shlb
and
cmpsl
xchg
sbb
sbb
adc
rcrl
test
xchg
push
mov
fcomi
adc
test
mov
add
inc
in
xchg
jne
push
push
fadds
daa
cmp
pop
push
push
sub
mov
ret
decb
jae
xor
jg
cmp
push
mov
pop
xorl
dec
mov
mov
pop
xor
js
dec
jle
mov
ljmp
inc
clc
xchg
jp
cmpsb
xchg
ljmp
pop
clc
inc
out
xor
iret
adc
pop
dec
ds
ljmp
mov
fstps
daa
mov
or
cmpsl
adc
sahf
sbb
sub
out
mov
mov
outsb
jg
sbb
in
mov
jbe
push
and
inc
mov
arpl
popl
mov
cmpb
xor
inc
cltd
not
outsb
xchg
loope
test
jb
fwait
push
dec
push
cmpb
xlat
cwtl
lret
cwtl
out
push
and
movsb
out
dec
dec
xlat
in
adc
mov
mov
outsb
mov
stos
jge
fnstsw
mov
stc
cltd
addb
sub
jnp
fcomip
js
into
fadds
js
sbb
out
xchg
xor
incl
pushf
or
mov
xor
sbb
repz
cmp
pop
adc
inc
push
push
jo
stos
push
or
sti
rcr
inc
icebp
push
call
inc
loopne
mov
push
xorl
mov
pop
out
rcl
and
aad
lock
xlat
imul
mov
xchg
jns
stos
and
dec
in
xchg
push
divl
cmp
fninit
dec
xchg
cmp
pushf
mov
pop
xor
sbb
popa
xor
sub
aad
xchg
or
mov
or
add
mov
std
scas
das
std
repz
hlt
pushf
test
mov
inc
notl
inc
or
test
push
cmp
sarb
call
subb
daa
fcoms
inc
iret
inc
ljmp
aaa
lods
jbe
add
cs
sub
inc
or
cld
inc
in
jbe
sarb
jae
pop
lea
adc
std
jo
add
pop
sbb
mov
pop
les
sbb
mov
xlat
inc
xchg
cltd
jnp
cltd
shrb
jecxz
mov
mov
mov
xlat
cmpsl
out
cmp
jae
mov
add
daa
mov
call
rolb
dec
cmp
pusha
addr16
imul
pop
subb
adc
push
and
loop
scas
out
inc
cmp
pop
add
pop
pop
or
xor
inc
mov
pop
add
adc
xor
js
ficomps
es
xchg
xchg
jno
fisttpll
mov
pop
pop
jo
add
push
cmp
ds
dec
pop
cmp
jecxz
push
sbbb
dec
sti
inc
shrb
ja
leave
pop
jmp
test
xchg
enter
call
stos
aas
jno
push
aaa
mov
mov
xchg
lods
dec
movsl
mov
les
pushf
mov
repnz
mov
testl
in
push
enter
lea
int
mov
inc
fidivl
jle
test
add
lret
jecxz
call
and
inc
int
push
add
jle
stos
mov
out
js
pop
outsb
cmp
and
inc
adc
pop
xor
sub
cwtl
out
lahf
dec
lds
sbb
imul
mov
insl
mov
movsl
in
je
mov
and
mov
add
outsl
push
push
sub
stc
mov
cld
lock
dec
sub
stos
and
je
hlt
rcll
cmp
das
in
outsb
push
xchg
jp
leave
dec
fwait
int
inc
xor
push
adc
xchg
outsl
iret
xchg
cmp
fcoml
fadd
loope
cmp
jb
gs
repz
sarb
sbb
arpl
pop
inc
sub
mov
adc
push
ljmp
pop
repz
xchg
cld
stos
out
clc
daa
fmuls
repnz
or
and
jg
jg
add
and
mov
clc
sbb
add
add
cmp
mov
fiadds
mov
xchg
cmp
test
dec
shrl
imul
push
xchg
scas
mov
cmp
add
rol
cmpsb
push
push
sbb
ja
stos
push
jb
pop
arpl
mov
cmp
out
sbb
push
xchg
jmp
out
mov
ret
mov
add
push
pop
aad
jb
jns
push
inc
mov
repnz
cwtl
dec
fs
es
lahf
insb
loop
or
enter
xchg
jmp
nop
icebp
pinsrw
loop
dec
sub
sbb
lcall
dec
je
rcr
mov
mov
insl
dec
sbb
xlat
pushf
imul
add
or
enter
pop
xor
or
sub
and
mov
js
lcall
repz
mov
sbbb
repz
mov
dec
loopne
outsb
sbb
aad
fstpt
test
aam
or
or
in
pop
adc
push
insb
mov
add
jp
jg
sub
mov
jg
cmp
dec
cmp
pop
lret
mov
repnz
dec
xchg
aad
aaa
js
ret
jae
jnp
push
sbb
jbe
mov
insb
arpl
lret
sub
fwait
loopne
sbb
jno
cmpsl
mov
xchg
adc
xchg
jb
cmp
mov
adc
movsb
pop
js
jp
mov
mov
pop
push
in
jo
inc
mov
and
out
pop
lcall
or
movsl
xchg
repnz
xor
in
aam
daa
sub
xlat
or
cmp
mov
popf
into
rorl
sub
or
push
rorb
aaa
jae
dec
icebp
pop
stos
inc
jp
arpl
push
pop
xor
cmpsl
test
sub
ljmp
mov
rolb
loope
mov
iret
lods
std
cld
xchg
aad
cmp
push
lcall
add
pop
sbb
mov
out
xchg
and
adc
incb
jo
aas
xlat
dec
arpl
int
mov
xchg
push
mov
push
test
aam
cld
dec
dec
or
repnz
xchg
dec
nop
incb
std
dec
cmp
cmpsl
stos
add
popf
sbb
into
lret
cmpsl
aaa
sti
cmp
xor
sub
mov
inc
lods
xor
stos
adc
or
testb
adc
mov
dec
arpl
sub
call
sti
outsl
push
lret
sahf
in
jg
fcompl
divb
jns
lea
movb
jecxz
in
mov
dec
cltd
add
and
out
call
push
or
adcb
test
stc
jo
mov
pop
stos
aad
and
pop
rcrl
mov
adc
sarl
adc
xor
jp
imull
ret
inc
mov
dec
gs
adc
cmp
mov
xor
sbb
and
inc
add
mov
sahf
mov
xor
jmp
into
sub
jb
inc
xchg
es
xchg
jecxz
mov
mov
icebp
pop
testl
adc
mov
dec
cmp
movsb
mov
sub
call
out
and
mov
daa
divl
mov
jno
mov
xor
adc
in
aaa
pusha
lcall
cli
aaa
adc
repnz
daa
test
add
lcall
aam
mov
popa
clc
iret
test
mov
mov
iret
lahf
int
mov
adc
push
adc
repnz
pop
dec
dec
cwtl
ret
mov
fwait
cwtl
mov
in
scas
or
rorb
adc
popf
add
or
popf
lea
aaa
jecxz
push
mov
sbb
mov
imul
jae
outsl
in
adc
push
mov
jecxz
hlt
dec
or
push
xchg
cmp
mov
and
push
dec
pop
add
cltd
out
hlt
in
popa
lret
xchg
jne
push
xor
out
ds
push
jb
loopne
repz
push
push
and
sub
or
xchg
icebp
sub
movsl
and
lret
loope
les
and
jns
lock
xlat
mov
test
outsb
fcompl
add
cmp
sbb
dec
adc
xor
out
adc
pop
adc
cmp
fcmovb
mov
xor
jl
enter
jl
imul
or
pushf
mov
dec
mov
jno
leave
test
aas
mov
push
ss
adc
cs
adc
shl
cmpsl
xlat
aaa
xor
push
mov
vmovaps
xchg
lock
dec
push
std
fnstcw
xchg
push
and
lahf
addr16
adc
pop
dec
cmp
push
outsl
dec
mov
sbb
mov
js
daa
jb
addr16
imulb
lret
and
sar
sbb
mov
mov
stc
xchg
bound
dec
sbb
lods
mov
mov
add
mov
int
xor
andl
add
xor
mov
dec
pop
lods
fimuls
xor
mov
aas
sub
cs
xor
jmp
cmp
decl
pop
dec
scas
daa
or
clc
ja
cs
in
or
outsl
pop
nop
mov
mov
dec
ret
dec
out
int3
sbb
xor
scas
mov
fnsave
dec
lcall
int3
repz
mov
std
xchg
jne
jns
push
cwtl
enter
push
xlat
xchg
add
movb
lret
divl
js
sti
mov
jl
sub
fwait
stc
add
inc
fmul
adc
fidivrs
sbb
adc
adc
inc
cmp
lret
push
mov
movsl
test
lea
mov
mov
sub
lock
jg
inc
push
cs
orb
popa
sbb
push
loop
out
rcrb
cld
jle
hlt
xchg
adc
ds
das
pop
lods
cli
lods
hlt
xchg
sbb
stc
jg
out
icebp
push
dec
mov
adc
aad
lcall
test
mov
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
sub
pop
dec
add
add
add
add
cmp
popl
add
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
clc
mov
add
mov
add
popl
add
sub
add
popl
add
add
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
clc
into
inc
sub
test
dec
mov
mov
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
pusha
ds
add
add
add
stos
leave
enter
daa
es
push
test
and
xor
xorl
sbb
rol
xchg
cmpsb
cmc
insl
sbb
in
mov
push
adc
adc
in
addr16
testb
adc
sub
into
imul
fisubl
movaps
xor
dec
out
test
ret
cmp
ja
lret
mov
inc
sub
xor
cmp
inc
loopne
jae
lods
stos
mov
outsb
incb
mov
fst
les
inc
stos
movsl
rol
imul
es
sub
push
lods
xor
repnz
fcomps
aam
push
fs
add
stc
testb
stc
pop
adc
xchg
stos
mov
sub
lret
out
inc
imul
enter
lock
mov
test
dec
lcall
sub
cmp
mov
icebp
inc
mov
xchg
adc
ds
repz
stc
xlat
add
int
jg
loop
insl
mov
push
mov
xor
add
mov
sbb
out
lret
in
cmp
lahf
out
or
adc
sbb
cld
sbb
stos
fldenv
mov
jge
add
cmpsl
int3
sarl
ljmp
push
test
and
xlat
dec
fiaddl
jbe
ljmp
repz
inc
jo
aas
into
test
lock
dec
xchg
cld
fstpl
out
mov
outsb
push
and
jno
inc
fisubs
lahf
daa
cmp
cmp
mov
popf
xor
jae
cmpsb
jge
sbbb
les
in
fsubs
push
xchg
scas
add
js
and
sub
sub
ss
dec
mov
pop
adc
xor
mov
shlb
push
adc
inc
jo
fsubrs
imul
stc
push
mov
xor
cmp
jb,pt
mov
aad
daa
popf
imul
xor
sbb
stos
dec
or
mov
cwtl
loopne
scas
sbb
vmovsd
ja
jle
push
clc
xchg
jno
cmp
mov
lcall
int
out
ret
adc
push
push
push
into
mov
daa
popf
ljmp
sub
inc
cwtl
xchg
xchg
movsb
inc
test
pusha
jle
jo
mov
push
jl
test
dec
shrb
popa
in
add
test
in
add
mov
test
insl
mov
jecxz
mov
js
outsb
mov
in
leave
stos
popa
mov
or
in
das
scas
adc
clc
adc
mov
rcl
xor
add
idiv
jg
mov
mov
jp
fs
add
add
add
cmp
mov
jecxz
popf
add
or
test
sahf
xchg
or
jge
lcall
push
scas
jns
pop
xlat
out
es
fidivl
cmp
pusha
out
jmp
cmp
add
adc
in
xor
pop
sbb
sub
jns
loope
int3
lea
sbb
xor
movsb
leave
push
fistpl
add
xchg
dec
sub
push
icebp
mov
movsl
dec
fs
mov
push
loopne
repz
jno
iret
insb
addr16
out
push
mulb
xchg
push
xchg
cmpsl
test
mov
icebp
fwait
xlat
outsb
adc
jmp
sarb
lahf
mov
sub
cmp
daa
addr16
in
cmp
repz
inc
push
mov
in
loopne
psrad
aam
mov
pop
pop
lds
mov
bound
pop
pop
dec
rcrb
pop
jae
add
cwtl
test
push
xor
loop
add
out
ret
enter
add
jno
inc
sub
mov
stos
inc
jno
int
sub
in
jb
xor
push
pop
push
jb
mov
xchg
xchg
and
cmpsb
mov
mov
sbb
mov
mov
add
inc
jns
mov
lahf
jmp
mov
pop
sbb
inc
inc
popf
insl
mov
lret
inc
adcl
addl
scas
cmpsl
fdiv
dec
ud0
pop
mov
inc
js
enter
push
mov
and
cmp
push
adc
or
jecxz
sub
js
push
sti
into
pop
pusha
dec
jge
cmp
mov
jbe
aad
rcll
jb
mov
mov
pop
fimuls
ret
mov
scas
aaa
ss
lret
or
movl
in
add
mov
sub
fisttpll
or
jnp
test
test
ljmp
scas
jmp
sbb
xor
add
xchg
jmp
add
mov
das
fdivl
out
cmp
in
imul
and
dec
jge
orb
lock
icebp
loop,pt
mov
ds
test
fiadds
orl
push
pop
mov
mov
jno
cmp
mov
or
pop
jae,pt
xchg
cwtl
or
movsl
jns
movsl
pusha
shll
gs
xchg
fisttpl
cmp
int3
jns
cmp
adc
cmc
int
xchg
sbb
mov
aad
cmc
ret
cld
mov
mov
sbb
xchg
sahf
inc
gs
in
jecxz
enter
push
push
clc
mov
mov
push
es
push
lcall
repnz
jge
fisttpll
lock
fcompl
cmpsb
jb
mov
clc
mov
xchg
repnz
and
pop
mov
cmc
xor
inc
out
pop
xchg
insl
mov
ret
adc
push
das
faddl
or
js
add
sbb
pop
xchg
mov
movsl
mov
add
add
add
inc
pop
cmp
out
sbb
sbb
xor
inc
push
sub
icebp
ss
mov
push
aam
pop
cmpb
pop
inc
gs
gs
je
jo
mov
roll
mov
jnp
pop
sub
xchg
sub
sti
mov
sbb
scas
out
aaa
aas
mov
xlat
cmpsb
push
lret
pop
push
jmp
out
shl
cmp
pop
adcb
dec
ret
sbb
xlat
call
test
jbe
and
imul
idivl
rcrb
mov
outsb
int
scas
fnstsw
mov
jmp
test
test
mov
loopne
adc
mov
das
xor
jecxz
pop
mov
pop
pushf
nop
adc
gs
int3
subb
lcall
cwtl
xchg
mov
imul
insb
or
xchg
xchg
sub
ss
push
cld
xor
dec
adc
push
push
stc
ror
push
shlb
inc
imul
dec
jecxz
xchg
cwtl
sub
addl
roll
std
add
push
cltd
sub
cmp
inc
dec
jp
hlt
les
in
clc
aad
into
or
ja
negl
sbb
dec
movsb
cmp
jg
inc
push
jg
or
push
mov
fcom
jmp
mulb
adc
mov
dec
mov
push
pop
push
xchg
aaa
inc
mov
cwtl
xchg
sbb
out
sahf
fwait
mov
inc
mov
pop
inc
rcr
adc
int
dec
in
jbe
test
cmp
nop
mov
cmp
nop
sahf
inc
dec
ficomps
jb
or
fisttpll
add
mov
xchg
mov
sub
int
dec
rorb
xchg
lods
pop
aaa
outsb
xor
fisttps
call
sbb
pusha
call
jmp
jne
mov
mov
mov
cmp
add
mov
int
mov
push
mov
stos
loopne
jbe
mov
or
out
stc
sbb
dec
sub
inc
outsb
mov
in
xchg
in
mov
mov
aas
addr16
pop
inc
mov
adc
int3
xor
mov
pop
ss
xor
cmp
iret
dec
lods
in
jno
add
xor
or
or
rclb
mov
and
xlat
and
ror
pop
daa
rolb
stos
cmp
stos
lret
scas
cmp
pop
add
push
mov
lock
dec
rcr
test
xchg
xchg
adc
fwait
rorb
and
fsubs
das
mov
mov
pop
ss
xor
xor
mov
je
dec
push
sbb
ja
and
pop
mov
aad
mov
movsb
stos
loop
bound
xchg
pop
add
fldt
mov
leave
scas
pop
daa
cmp
outsl
xchg
mull
data16
cld
call
orl
in
sbb
pop
push
test
xchg
frstor
xorb
add
cmpsl
mov
jp
push
pop
dec
stos
pop
mov
add
add
add
xlat
dec
call
and
mov
adc
mov
hlt
pop
fdivs
mulb
push
movsb
ficomps
in
add
xchg
out
push
add
adc
cmp
push
out
jle
sbb
in
inc
lock
and
pop
sbb
sti
mov
xchg
rclb
in
add
imul
cmp
mov
adc
jle
xchg
lret
into
imul
subl
test
scas
les
inc
jb
addr16
adc
dec
hlt
outsl
xor
push
adc
pop
je
xchg
add
jp
jecxz
pop
mov
mov
cmp
out
fs
mov
dec
cmp
xchg
pop
out
shl
insb
pop
andl
outsl
out
movsl
adc
pop
pop
lcall
iret
inc
ret
xchg
xor
fbld
and
mov
mov
fadds
sub
mov
cwtl
pop
xchg
stos
and
mov
aas
cmp
insl
mov
js
add
add
out
jns
frstor
test
jp
jecxz
pop
pop
sub
aaa
mov
stos
sub
and
cmp
jne
sbb
or
fxch
fbld
cmc
push
mov
test
mov
dec
fsubs
cmp
push
out
push
sub
xor
lret
pop
jbe
hlt
je
mov
hlt
xchg
outsb
sbb
pop
out
and
jno
dec
sub
mov
mov
ficompl
dec
lds
pop
popa
stos
mov
shr
add
clc
sbb
xchg
test
movsb
pop
shr
pop
jbe
jne
iret
dec
pop
les
mov
lea
inc
adcl
cmp
sbb
and
fcom
fdivs
inc
js
pop
jns
scas
push
lcall
hlt
in
rol
pop
dec
jmp
in
jns
inc
adc
mov
xchg
fcomps
mov
add
mov
shlb
push
push
mov
rcrb
xchg
fiaddl
ljmp
pop
sbb
inc
mov
or
push
fs
jae
dec
add
pop
insb
dec
pop
jns
jle
push
add
inc
out
xadd
sahf
test
push
push
js
mov
mov
xchg
inc
pop
mov
cli
lods
das
xchg
pop
mov
cmc
orb
es
sub
adc
gs
nop
mov
push
cmp
sub
add
gs
movsl
adc
ds
mov
pusha
in
xchg
push
ret
push
push
add
and
dec
insl
mov
icebp
and
pusha
pop
add
mov
mov
and
insl
xchg
jg
xchg
cltd
inc
push
leave
mov
jne
mov
repnz
rolb
fmull
hlt
cld
jmp
in
add
mov
mov
std
jl
dec
pop
cmp
shrb
add
add
add
notb
test
fs
add
pop
imul
outsb
or
dec
push
cmc
outsl
inc
aas
add
sub
int3
ja
mov
sahf
pop
out
sub
icebp
jp
sbb
aad
xchg
pop
pop
daa
fs
jmp
adc
sahf
add
sbbl
sbb
mov
jnp
xchg
sahf
dec
sahf
sub
pop
mov
sbb
mov
sbb
fwait
sub
mov
stos
arpl
cmpsl
xchg
mov
mov
lahf
or
repz
arpl
mov
xor
insb
pop
andb
les
lret
push
and
clc
inc
jbe
hlt
int3
xchg
jbe
xlat
ficompl
sbb
rorb
push
push
fwait
les
sbb
adc
pushf
shlb
adc
bound
push
cmp
fstps
out
cwtl
aaa
cwtl
mov
mov
sbb
arpl
clc
add
insb
fs
pop
imul
push
loop
in
xchg
jl
xchg
fstl
mov
cwtl
sbb
xchg
cmp
cld
leave
test
cs
sbb
mov
inc
test
jg
gs
add
loope
leave
in
out
in
daa
iret
movsb
xorps
cld
jae
mov
add
push
pop
loopne
pop
out
add
push
jns
ljmp
xor
in
dec
mov
push
jne
in
loop
repnz
popa
mov
cwtl
jle
dec
orb
push
mov
cmp
mov
add
es
xchg
lods
out
dec
ret
xor
mov
push
loope
mov
mov
sarl
notb
scas
aas
icebp
stc
jmp
call
loop
fdivrl
lea
addb
mov
adcl
jl
push
add
cmp
and
out
iret
add
out
in
enter
cmc
test
fsts
inc
scas
mov
mov
mov
mov
bound
gs
shlb
cmp
decl
lea
inc
mov
mov
pop
int3
mov
test
jb
ds
je
xchg
xorb
andl
mov
mov
jnp
push
xor
pop
xchg
bswap
xlat
mov
push
cmp
cli
jns
sahf
mov
xor
inc
test
cmpsl
sbb
ljmp
sahf
sbb
xchg
dec
iret
ja
jle
or
test
cld
stos
leave
cwtl
daa
lods
sbb
inc
cld
gs
insl
push
lret
aas
sub
sahf
pop
cwtl
or
push
in
andl
popf
lock
xor
push
dec
clc
subb
fwait
cwtl
bound
lea
test
pop
pop
pop
jg
xlat
cmp
inc
in
ret
and
lahf
adc
mov
jle
mov
push
jno,pt
add
pushf
sub
push
xchg
loopne
pushw
repz
sbb
xchg
test
jb
add
imul
fdivrl
lret
mov
inc
cld
dec
add
add
add
test
js
fbld
lock
test
clc
pushf
inc
fists
int
pop
insb
lods
cwtl
pop
out
xchg
dec
ja
adc
adc
in
xchg
lock
imul
mov
xor
pop
out
pop
aaa
int
lock
fmull
xchg
push
or
and
dec
mov
aad
int3
es
or
sahf
sbb
addr16
shll
dec
lock
loope
push
andl
add
test
cli
roll
outsl
leave
jbe
cmpsl
call
jecxz
xchg
xor
into
fsubr
inc
mov
push
adc
popf
sahf
mov
push
xchg
ficoml
scas
sbb
mov
or
adc
shr
mov
rorl
dec
out
out
or
ja
sbb
jle
aad
stc
scas
dec
pop
xchg
dec
pop
mov
jge
xchg
iret
repz
mov
inc
ja
ficomps
or
adc
orl
in
mov
aas
jmp
movsb
and
jne
es
ret
sbb
shrb
or
inc
jns
dec
xchg
gs
mov
or
push
sti
jle
jne
and
gs
mov
ja
fucomp
ret
sbb
pop
test
jge
cltd
out
or
jp
fidivrs
inc
mov
fs
push
adc
xor
jnp
dec
add
pop
and
or
jae
mov
movsb
js
sub
and
movsb
xchg
push
jl
insl
push
mov
test
sub
addr16
xchg
or
popl
pop
mov
xor
and
and
sub
hlt
inc
sysexit
adc
and
imul
and
aad
nop
in
movsl
adc
dec
xor
mov
and
sub
loopne
mov
pop
add
sub
push
pushf
icebp
sbb
inc
int3
cmp
mov
cmp
aas
sub
pop
loopne
inc
loope
and
clc
in
imul
push
adc
icebp
loopne
xchg
leave
cmp
shlb
pop
push
jge
adc
xchg
aas
jne
or
mov
cltd
lock
hlt
mov
xchg
push
and
or
addb
mov
aam
ss
adc
jbe
sbb
jae
in
push
in
imul
push
sbb
iret
mov
out
in
ljmp
jne
fists
mov
aaa
sahf
stc
mov
pop
call
gs
lea
push
pop
loop
ja
add
jecxz
mov
pop
cld
inc
sub
lahf
testb
andb
mov
lret
adc
sarl
fcoms
in
sub
push
dec
scas
adc
hlt
hlt
cmp
xor
inc
jecxz
xchg
sbb
and
jb
adcl
dec
cmc
mov
ljmp
or
ret
jns
sahf
jbe
mov
xor
jns
testl
fidivrl
pop
aad
mov
mov
add
add
add
mov
rorb
pop
xchg
push
dec
cmp
loopne
inc
mov
imul
test
mov
jne
in
cmc
sbbb
pop
add
sti
xchg
incl
inc
or
mov
fiadds
fmull
mov
push
ds
mov
fsub
ror
daa
rcr
lahf
xchg
stos
sbb
push
in
push
push
dec
shlb
xchg
and
xchg
push
xlat
clc
jne
in
cmp
cmp
jmp
insb
icebp
pop
push
dec
pop
mov
into
pop
sub
movsl
popa
insb
cmp
imul
jns
fnsave
push
fisubl
pop
push
mov
in
inc
test
or
insl
mov
adc
enter
jecxz
pop
out
mov
inc
iret
cmp
push
push
cltd
dec
imull
lcall
out
nop
fstl
mov
bnd
xor
out
movsl
and
aaa
xchg
in
or
cmc
das
push
ljmp
mov
mov
mov
sbb
fstl
add
mov
clc
jge
addr16
cmc
dec
cmp
iret
push
out
and
inc
lret
test
loope
loop
enter
mov
and
xchg
pop
ret
sbb
loopne
cltd
fisttpl
cmpsb
push
in
add
lea
repnz
outsb
jns,pt
stos
mov
mov
mov
cmp
or
aaa
in
addr16
leave
int
shlb
cltd
repz
in
bound
xchg
pushf
adc
pop
fs
fisubl
mov
mov
sbb
fisttpll
adc
je
loopne
mov
imul
mov
pop
fnstenv
mov
and
mov
test
das
imul
cmp
decb
or
clc
mov
mov
mov
push
outsb
pop
inc
xchg
and
push
push
fcmovnbe
mov
test
push
hlt
icebp
std
jbe
and
jmp
xchg
icebp
sbb
pop
xorl
ljmp
rclb
adc
pop
insb
out
inc
sbb
out
add
mov
shlb
movsl
int3
cmpsb
lret
dec
js
jp
sbb
jle
cltd
incb
jb
int3
mov
loopne
sub
mov
add
xchg
ss
mov
cmpsl
sbb
das
incb
jae
inc
cmp
cs
fdivs
testb
inc
int3
mov
popa
adc
push
jbe
sahf
ja
adc
cmp
leave
mov
adc
jmp
test
or
lcall
mov
gs
aam
push
incl
aad
mov
mov
decl
dec
aad
cmpsl
add
dec
cmp
cmp
sub
mov
cwtl
mov
add
popf
paddd
cmpsl
mov
sub
roll
push
add
add
add
push
arpl
stos
xlat
not
jae,pn
dec
mov
mov
sub
int
sbb
mov
sbb
mov
or
pop
xchg
shl
call
bound
jo
gs
pop
out
sbb
lds
sub
inc
sbb
outsb
inc
addb
push
pop
jge
lret
xchg
loopne
or
gs
push
lret
cwtl
leave
pop
and
lods
ds
pop
mov
push
lock
push
xor
jecxz
mov
and
out
push
in
jecxz
addr16
shlb
sub
mov
inc
mov
jge
jo
stos
repz
hlt
outsb
cs
fdivrl
mov
sahf
sub
add
push
xor
daa
pop
flds
sbb
add
push
out
int
loop
push
xor
pop
bnd
in
or
test
out
pop
pop
dec
hlt
jmp
or
adc
pop
and
int3
test
add
aaa
inc
push
mov
mov
sbb
out
lds
jp
lds
inc
call
pop
jb
aaa
jne
movsb
and
cwtl
cmp
lret
out
and
lret
and
call
in
sbb
mov
sub
cltd
enter
mov
fisubs
mov
sub
mov
jl
enter
icebp
test
mov
add
repz
pop
pop
aam
cltd
push
mov
jns
sbb
nop
cli
fdivl
fs
and
mov
mov
xor
adc
addb
add
push
mov
jle
imul
lea
xchg
gs
mov
or
loop
daa
pop
xor
arpl
dec
lock
mov
push
or
and
inc
push
ja
mov
adc
adc
test
fsubrl
jo
mov
popa
in
push
jle
lds
ret
js
pop
adcl
sub
int
jns
loope
leave
in
mov
outsl
jae
xchg
shlb
cs
nop
push
cmc
in
cmp
sub
jp
pop
sbb
scas
jno
cmpsw
pop
outsl
mov
insb
daa
adc
test
decl
pusha
add
cmpsb
dec
or
shlb
nop
xor
sub
mov
popa
mov
sbb
push
cmp
cmp
mov
push
sbb
adc
mov
scas
sbb
mov
cmpsb
enter
pusha
and
into
shll
fisubl
xchg
jno
mov
mov
loope
fstpt
add
rorb
aam
mov
xorl
outsb
xor
dec
movsl
clc
inc
movsb
cwtl
add
and
movsb
lea
lods
and
xchg
fcomp
arpl
add
add
add
nop
pop
pop
jb
fcomip
aaa
dec
xchg
adc
xchg
dec
mov
lcall
jo
int3
andb
dec
shll
or
push
shrb
daa
sbb
mov
push
or
cld
xor
cli
mov
xchg
ds
out
call
dec
cwtl
fdivrs
sbb
dec
fisubrl
int
adc
subl
add
mov
mov
jo
mov
repz
xchg
cld
shl
xlat
and
int
push
fidivl
adc
cli
pusha
mov
pop
pop
call
inc
loope
shlb
adc
pop
pop
scas
adc
xlat
lret
repnz
jecxz
iret
shll
sub
sbb
pop
sarl
bnd
ljmp
lods
cmp
and
jmp
and
loop
jmp
ja
inc
mulb
xchg
xchg
dec
mov
mov
push
and
jo
lahf
mov
sarb
andps
pop
out
pushf
cmp
mov
adc
jne
popf
push
adc
cli
jmp
add
ljmp
push
inc
cld
or
lret
imul
outsl
or
jne
das
xchg
cmpsl
loop
lods
mov
aaa
mov
nop
xchg
pop
loopne
leave
ret
pop
out
cmp
sub
cwtl
imul
adc
adc
mov
ss
mov
int
test
mov
push
cmp
push
imul
iret
clc
jecxz
jno
pop
mov
mov
adc
pop
shrb
movsl
enter
pop
popa
and
mov
sbb
imul
test
enter
sub
mov
pop
and
push
mov
xchg
test
xchg
outsl
mov
pop
jmp
and
xchg
push
sub
leave
scas
add
sub
add
cmp
push
inc
insb
ja
adc
ljmp
add
cmc
test
cmp
ja
push
jg
movsb
in
dec
pop
cs
lret
ret
cmp
xor
mov
push
mov
insl
xor
xor
mov
loope
into
mov
nop
test
mov
not
iret
mov
mov
mov
inc
lea
subl
lahf
mulb
lea
mov
imul
in
aad
sbb
sbb
add
ja
test
aad
pop
add
dec
dec
cltd
xchg
add
daa
xchg
xchg
add
lahf
mov
loopne
scas
data16
loope
sub
or
cmp
out
fildl
push
inc
mov
cli
rolb
in
mov
mov
mov
push
pusha
or
mov
adc
stos
jb
stos
cwtl
adc
and
mov
in
addr16
xor
push
int
xor
push
popf
lods
push
mov
cmp
addr16
jo
xor
mov
or
add
test
mov
rclb
add
in
sbb
js
fisttps
inc
aam
dec
les
jmp
xor
push
mov
cmp
lods
rcrb
and
xor
sbb
push
xchg
xchg
and
test
cltd
sbb
jns
push
mov
push
outsl
jne
leave
fsubrs
pop
add
insb
and
sbb
mov
out
push
ret
mov
std
rolb
insb
inc
sbb
test
xlat
ficompl
clc
addr16
mov
lcall
stos
int
loop
sub
es
iret
adc
es
cmpsb
mov
pop
jnp
mov
cmpsl
fisttpll
mov
pop
inc
sbbb
repz
inc
cmp
rcll
dec
jae
pusha
mov
ds
push
push
xor
jae
mov
ds
fs
sub
cmp
xor
pusha
jbe
jge
fiaddl
iret
pop
dec
stc
cli
push
pushf
cmpsb
sbb
xchg
ret
mov
dec
lock
int3
jmp
nop
lahf
jb
sarl
xor
into
push
in
jbe
lcall
test
dec
or
dec
jo
mov
sub
mov
mov
sub
clc
mov
ret
mov
int
sahf
insl
dec
loopne
in
out
jmp
shrb
data16
xchg
lret
lahf
outsl
cmpsl
call
or
int
lahf
jo
ljmp
test
and
popf
fcmovne
cltd
and
ds
adc
movsb
daa
push
dec
sub
testb
or
rcr
pop
mov
popa
out
sbb
call
insb
daa
push
push
mov
xor
adc
adc
cmp
and
stos
clc
movsb
push
daa
inc
jmp
xchg
and
jbe
mov
xor
out
sub
mov
ret
inc
sub
xchg
stos
popf
mov
push
adc
aad
icebp
pop
outsb
data16
ds
sbb
and
loopne
mov
scas
or
push
push
add
add
int
jne
fcmovnb
adcl
cmpsl
cli
inc
decb
mov
dec
adc
mov
xchg
pusha
mov
sbb
ret
mov
nop
negl
jle
jl
lods
xchg
add
and
pop
lods
ret
add
repnz
push
inc
roll
aad
ss
inc
inc
dec
mov
push
jecxz
mov
push
xor
dec
sbb
mov
dec
aad
adc
mov
lret
clc
push
push
into
nop
mov
adc
in
mov
negb
sbb
jge
mov
mov
jle
mov
nop
sahf
pop
push
in
test
test
loop
pushf
xchg
les
loop
pusha
push
pop
mov
xchg
inc
push
pop
mov
mov
pusha
ljmp
and
andb
sub
and
pop
add
not
cwtl
das
add
test
xchg
std
jg
in
pop
mov
shlb
pop
add
add
add
aad
or
jbe
inc
hlt
xor
sbb
push
lahf
mov
popa
int
mov
rcrl
sbb
and
ss
mov
dec
test
mov
push
mov
jl
xchg
push
inc
inc
incl
repz
mov
cmp
ss
push
add
adc
mov
aam
push
fildll
pop
repz
pop
stc
clc
fsubrl
mov
pushf
xchg
inc
xor
push
fiaddl
sti
sbb
pop
insb
pop
in
paddusb
sbb
lret
jo
out
xchg
mov
adc
xor
aas
xchg
enter
movsl
lock
mov
dec
lods
ja
inc
hlt
lret
jl
ds
fxch
pop
sub
ds
pop
push
shr
xor
xchg
insb
pop
jne
dec
push
nop
movsl
xor
out
cmp
jns
lcall
lahf
jmp
jp
pop
sub
inc
and
dec
mov
mov
jne
fiadds
js
mov
repnz
movsb
cwtl
and
data16
ljmp
push
call
stos
push
in
pop
xlat
in
mov
add
jle
dec
cmpsb
and
movsb
das
int3
ja
push
mov
jle
jns
dec
sub
mov
cmpsb
cmpsb
or
iret
xchg
lcall
jp
imul
sarl
fisubl
cmpsl
push
dec
pop
pop
repz
jle
sbbl
adc
and
movsb
dec
sub
lds
xchg
sbb
imul
jae
aas
shlb
xor
cmp
cwtl
xchg
push
pop
pushf
insb
mov
repnz
pop
arpl
xchg
in
insl
movsl
cmp
nop
clc
xchg
mov
pop
fists
cli
lods
cmp
adc
stos
mov
cmp
jne
dec
inc
dec
mov
jbe
or
dec
add
das
movl
pusha
test
loopne
stos
xchg
and
xchg
sub
jno
cltd
add
lea
xchg
jge
mov
dec
inc
xchg
mov
jnp
jno
insl
inc
sub
out
iret
push
xchg
cmp
data16
xchg
movb
shl
inc
aam
xstore-rng
cmpsl
inc
pop
or
loop
repz
push
jg
mov
cmpsl
popw
push
push
cmpsb
adc
cmpsb
jno
insl
aas
jecxz
jno
pushf
in
jle
mov
cli
pop
mov
sar
mov
sub
cmc
fcompl
int
xchg
pop
mov
lods
cmp
sub
inc
pop
xor
leave
dec
sar
fistpl
pop
into
pop
fldenv
insl
aad
aas
jne
mov
mov
imul
nop
ret
xchg
xchg
fmuls
mov
and
in
mov
xor
stos
iret
xchg
out
mov
mov
pop
xor
add
fwait
or
ret
subl
inc
inc
addb
mov
rcl
cltd
jge
popf
fisttpl
movsl
dec
rcl
jo
xor
mov
jmp
mov
scas
xlat
sub
add
idiv
iret
std
mov
push
add
add
dec
fwait
and
cs
ficomps
out
das
imul
add
jecxz
and
test
jmp
imul
push
fldcw
inc
movsl
cmpsb
jns
add
push
mov
sbb
lcall
or
cltd
jo
adc
pop
xchg
jae
adc
mov
sti
sub
push
les
out
ljmp
mov
lret
dec
loop
xchg
mov
jg
aam
test
jecxz
mov
inc
fistpll
mov
decb
or
add
gs
add
xor
fidivrs
lcall
int3
pushf
cs
cmpsl
sarb
pop
sub
push
mov
lods
in
call
mov
stos
push
push
sti
cmp
sbb
cmp
xchg
and
ds
mov
loope
aad
push
xor
ds
mov
sbb
out
in
clc
mov
dec
sbb
pushf
scas
fmull
xor
lods
scas
shl
add
jp
arpl
rcr
mov
push
add
sbb
jnp
call
push
loopne
mov
sub
lock
sub
int3
push
jb
mov
push
ret
pusha
fldt
aad
repnz
add
and
sarl
and
sbb
inc
fiadds
jle
lahf
push
mov
push
out
popl
mov
pop
dec
subl
pop
imul
add
xchg
mov
stos
negl
sub
fisubrs
popa
add
je
loopne
push
fidivrl
lret
pop
mov
and
xchg
dec
xor
idivl
test
or
or
repnz
je
or
push
inc
scas
enter
xor
pop
lcall
push
pop
pop
ja
fwait
cmpsb
scas
push
inc
fwait
es
leave
push
adc
xchg
mov
jns
jmp
mov
sbbb
xlat
stos
fdivs
inc
stc
jmp
mov
lds
in
push
jnp
imulb
movsl
push
in
mov
mov
out
insb
scas
nop
push
insl
add
imull
insb
fimull
out
push
fsubp
test
outsl
inc
cs
jnp
fnstsw
inc
fwait
mov
imul
xchg
addl
dec
jge
out
mov
sub
insb
xchg
xchg
outsl
in
dec
xor
jmp
clc
mov
repnz
add
loope
jp
jbe
mov
push
and
addr16
bnd
jb
or
xchg
aas
stc
xor
jge
xor
hlt
add
in
stos
popa
lret
pop
out
push
es
inc
aad
and
fnstsw
mov
mov
dec
pushf
hlt
add
shlb
jmp
aam
xor
repz
push
cmpsb
movsb
and
sbb
adc
test
pusha
pop
loop
ss
in
add
out
ret
mov
out
mov
and
add
add
add
lcall
movsl
sub
xchg
jne
xor
and
xor
jae
loope
xor
cmp
ja
xor
sub
jmp
pop
in
pop
pop
mov
aaa
cmp
sub
dec
adc
sbb
dec
xor
stos
les
scas
xor
xor
xchg
shrb
and
lods
lock
repz
les
mov
ljmp
shll
decl
jmp
sbb
sahf
xor
or
aam
and
cld
sub
dec
shlb
mov
stc
push
fadds
mov
cmp
sbb
ret
cli
xchg
jno
test
popf
push
scas
sub
es
inc
mov
inc
pop
dec
shll
fmul
pushf
js
cmp
or
sbb
in
jecxz
lahf
add
inc
mov
ficompl
enter
mov
xor
test
sbb
bnd
adc
mov
jno
orb
fisttpll
push
xchg
mov
in
xchg
fisttpll
pop
test
push
lods
es
paddq
leave
movsl
subl
ljmp
xchg
jno
repz
subl
push
jne
jl
lret
xchg
pop
cmp
mov
mov
mov
and
jo
xchg
or
or
jae
sbb
lahf
adc
fstl
sbb
int
pusha
movsb
bound
inc
push
jg
stos
outsb
lods
imul
adc
ret
int
xor
jl
fistl
pop
ret
insb
xchg
lds
jb
iret
in
jns
and
inc
dec
imull
das
jle
ja
repz
push
in
cmp
imulb
stos
call
imul
scas
or
fwait
pop
ret
inc
xchg
stos
push
xchg
mov
mov
pushf
xor
xor
pop
jns
int3
inc
inc
hlt
dec
and
mov
mov
ret
mov
lods
sbb
jg
sbb
mov
mov
and
ror
popa
arpl
push
cs
jne
pop
pop
test
adc
jo
mov
hlt
pop
decl
das
mulb
sub
xchg
or
loope
ljmp
jmp
in
ja
out
inc
sbb
in
aad
sbb
popa
movsb
nop
sub
jmp
cmp
jnp
add
test
xchg
pop
stos
shlb
add
rorb
xlat
and
cmpsl
inc
adc
pop
ret
popl
jle
xchg
outsl
movsb
lcall
and
aam
sub
sar
vrcpps
cmpl
pop
inc
xchg
lcall
dec
jo
add
push
push
jle
xlat
outsl
mov
lcall
add
add
add
lsl
adc
mov
inc
cmp
jae
ror
bound
notb
test
les
movb
push
int
adc
cmpsl
pop
xchg
scas
enter
add
orl
into
lahf
jno
cmp
mov
push
sub
push
fisubrl
das
jp
loopne
sub
addr16
fstps
lods
jae
lret
inc
std
xor
add
pop
sub
je
iret
cmp
popa
dec
insl
adc
addr16
sub
cmpsl
cmpb
cs
xchg
mov
mov
imul
filds
pushf
cmp
mov
xchg
addr16
mul
sbb
outsl
xchg
pop
sahf
sbb
and
das
sbb
inc
aaa
adc
in
popa
jnp
ficomps
sbb
int
loop
ljmp
ret
jo
push
aam
add
jle
test
pop
in
or
hlt
cmp
sub
xchg
and
popf
xchg
inc
jo
pop
stos
pushf
out
mov
mov
into
mov
inc
loop
lock
sbb
jo
fsubs
or
and
sarb
imul
test
lea
ljmp
mov
sbb
sub
lods
sbb
pop
pop
inc
push
push
pushf
mov
push
cmp
outsl
xor
outsb
sub
push
add
in
mov
mov
inc
xorl
mov
mov
out
jae
std
or
ret
out
pop
xor
bound
push
dec
pushl
outsl
jge
gs
jle
mov
cli
icebp
fldl
ds
mov
insb
mov
xor
inc
sub
daa
jo
out
inc
cmp
out
nop
xlat
stos
dec
pusha
xchg
jne
dec
adc
out
into
xchg
pop
add
mov
movsl
push
popa
popa
and
icebp
daa
inc
out
jle
jmp
icebp
addr16
pushf
int
and
adc
subl
push
add
cltd
ds
cmpsl
mov
mov
xchg
inc
or
and
rcr
aam
daa
mov
pop
mov
mov
mov
mov
cmp
inc
mov
mov
mov
cwtl
inc
sahf
dec
jge
pushf
xchg
inc
mov
push
push
loopne
sub
mov
call
sub
hlt
dec
movsl
movsb
repnz
loopne
push
pusha
xor
jae
pushf
push
faddp
fcmovne
and
cmp
arpl
lock
cwtl
cltd
mov
ljmp
pop
push
ds
xor
inc
cmp
push
push
jno
lret
pop
cmp
xchg
fs
xchg
mov
shr
es
add
dec
jecxz
in
movsb
dec
inc
sti
lea
std
add
sbb
bound
mov
or
pop
out
repz
sbb
push
imul
add
add
mov
jb
mov
and
mov
jg
lock
movsl
inc
or
and
dec
push
hlt
xchg
jle
pop
inc
jl
mov
lods
adc
enter
fucomip
dec
repz
xchg
ds
in
cmp
sub
jno
inc
mov
aam
outsb
testl
pop
scas
add
ffreep
je
push
flds
in
or
stc
jo
xor
cli
xchg
sbb
mov
mov
mov
pop
xor
sub
and
sbb
rorb
inc
pop
outsb
xlat
xchg
repnz
in
xchg
xchg
sub
stos
sbb
xor
fucomi
rcrb
cmp
xchg
rcll
jecxz
xor
pusha
adcb
mov
pop
out
fiaddl
roll
sbb
fisttpl
stos
xchg
dec
fsubrs
fcmovnu
xchg
mov
cmc
dec
into
fisttpll
imul
pop
mov
js
out
or
rcrb
jbe
inc
popl
out
sbb
lret
rorb
dec
mov
enter
sub
push
int3
xor
ret
sub
lds
add
rorl
pop
xor
pushf
adc
inc
cmp
divb
dec
popa
out
cmc
sbb
xchg
mov
loopne
or
push
mov
mov
push
or
mov
nop
xor
dec
imul
pop
aam
sub
cltd
fisttpl
and
xchg
test
out
test
dec
cltd
pop
shrl
arpl
popf
andl
jns
lcall
push
movsb
pop
pop
imul
fisttpll
and
push
add
mov
push
inc
aam
xchg
mov
dec
ficomps
rorb
push
sar
idivl
cmc
pop
jne
cs
xchg
fwait
je
push
pop
mov
lods
repz
mov
mov
jb
add
fidivrl
insl
inc
stc
sub
fs
out
dec
fildl
js
int3
sub
push
inc
mov
jg
jb
fwait
push
jb
les
cmpsl
movsl
ds
cmp
mov
fnstsw
fists
adcb
pop
mov
cltd
cmpxchg
insl
adc
or
push
sbb
out
pop
lods
inc
es
loopne
sbb
enter
cmp
daa
mov
icebp
lods
sbb
push
xchg
lret
mov
jb
enter
jp
sbbl
ret
mov
add
or
mul
dec
daa
mov
dec
mov
jns
rolb
xchg
popf
out
movsl
sub
repz
in
cs
mov
xor
fbld
pop
popf
xchg
push
movsb
adc
jne
rcr
test
sub
stc
popa
cmp
addr16
inc
pushf
xor
ss
xchg
cmc
adcb
mov
aam
inc
fsubrs
aas
js
add
add
add
mov
pop
loope
aas
lods
arpl
subb
dec
out
in
aam
pop
sbb
adc
inc
and
mov
push
xor
push
push
sub
mov
dec
push
lret
push
jae
xor
mov
iret
pop
push
imulb
mov
loopne
jb
leave
cmc
xchg
out
mov
std
jns
dec
mov
cltd
add
cmp
imul
rol
push
jae
add
enter
sub
mov
sub
push
lret
dec
mov
rorl
sti
push
int3
mov
jns
and
notb
aas
push
sti
data16
lea
xchg
xor
das
scas
mov
push
mov
ds
mov
icebp
jne
fnsave
pushf
imul
dec
lret
or
out
add
lahf
sti
mov
pop
mov
dec
loopne
push
xchg
sub
imul
les
in
cmp
repz
adc
pushf
jle
jge
insl
ljmp
jno
lods
sub
lds
call
add
inc
add
inc
cmp
jl
mov
out
jecxz
jno
fisubrs
fimull
nop
sbb
aaa
std
out
adc
pop
inc
cmp
je
sbb
cmc
mov
pop
rcrl
xor
popa
arpl
push
sbb
pop
cwtl
sub
jbe
out
inc
cmp
cwtl
xor
repz
push
cmp
insl
fmulp
mov
mull
sbb
cwtl
repnz
imul
into
imul
sub
mov
mov
je
xchg
pop
mov
sti
psrlw
out
xchg
iret
push
outsl
orl
and
push
jge
dec
fwait
jl
adc
push
add
lret
inc
cmp
cmc
out
call
or
into
orl
mov
jo
test
xchg
es
cmp
or
jl
xlat
sub
outsl
mov
sbb
nop
dec
pop
push
mov
lock
inc
or
dec
push
popa
outsb
xor
les
lret
clc
push
sti
dec
add
mov
out
cmp
scas
pop
int3
outsb
pop
mov
add
roll
jbe
mov
pop
in
sub
jno
dec
or
inc
neg
pop
mov
mov
adc
inc
xor
pop
dec
xor
xor
jecxz
adc
idivb
lcall
xor
mov
add
mov
or
out
hlt
or
jge
clc
mov
lret
cmc
stos
adc
popf
ds
adc
adc
jg
jge
cmp
enter
cmp
clc
inc
loopne
cmp
out
inc
fists
inc
ja
pop
add
shll
pop
add
add
pop
pop
mov
inc
xchg
ret
in
and
add
ja
idiv
pop
out
dec
mulb
sub
mov
jno
add
add
add
pop
jno
arpl
sub
fists
sbb
leave
lahf
xchg
test
mov
mov
scas
xchg
ss
mov
unpcklps
ret
addr16
aaa
jmpw
in
inc
adc
lock
loope
out
jg
sub
cmc
data16
stos
inc
sub
fstps
ja
movsb
push
xchg
and
pop
adc
mov
inc
ret
mov
jp
sbb
mov
fcoml
push
xchg
mov
pusha
inc
shll
je
arpl
xlat
add
mov
cmpsb
repz
mov
dec
add
int3
sbb
xchg
pop
mov
divb
lds
add
lcall
cmp
or
repz
es
lods
lret
test
ret
jle
adc
or
dec
out
pushl
cmp
push
xor
or
pop
adc
dec
push
hlt
jne
push
inc
jbe
iret
mov
inc
insl
inc
push
mov
push
push
and
jle
mov
negl
adc
or
shlb
movsl
idiv
push
fwait
lods
in
jg
cmp
mov
cmp
push
lcall
pop
jbe
pop
es
pop
popa
xor
jle
stos
or
jl
data16
push
xor
ja
ficompl
inc
adc
call
rcrl
shrb
or
or
add
cmp
in
pop
xor
mov
fildl
sbb
push
int3
sahf
inc
call
iret
push
xchg
sub
and
push
mov
inc
pop
lret
sbb
int
test
cli
outsl
pop
rcll
out
sbb
insl
mov
jp
mov
mov
mov
xor
cwtl
repnz
gs
out
outsb
andl
add
ja
mov
inc
rcrl
mov
gs
loopne
add
sub
add
repz
or
aad
stos
pop
sbb
jnp
fisttpl
sbb
xchg
mov
outsl
lods
ret
xchg
add
mov
loope
inc
xchg
jmp
icebp
icebp
cld
pop
loope
sbb
mov
and
xor
dec
pcmpeqb
fisttpl
sbb
dec
push
daa
jmp
cmpsl
jns
pusha
fbstp
jne
sub
or
mov
adc
out
cmp
or
dec
fistl
movsl
nop
sbb
ret
lret
inc
movsb
and
push
adc
arpl
in
mov
xchg
rorb
mov
andl
xchg
dec
pop
rol
inc
dec
push
xchg
mov
and
seta
dec
rcrb
xchg
dec
pop
ffreep
mov
add
adcl
dec
or
or
sbb
xor
jmp
mov
mov
jne
cmpsb
ja
mov
cmp
int
fdivrl
add
adc
ret
add
add
sti
mov
test
out
jg
je
add
add
add
cmp
repnz
xor
mov
pop
int
lret
mov
loope
lret
lods
xchg
outsl
jmp
add
in
cmp
cmp
add
mov
in
mov
arpl
cld
cmp
clc
js
sub
rorl
rcll
push
dec
or
lods
sbb
cli
andl
imul
fsub
enter
adcl
js
call
rep
es
add
xchg
daa
adc
mov
xor
mov
movsl
mov
lahf
into
loope
test
mov
inc
mov
add
cli
push
jae
mov
push
mov
rcll
sub
lods
std
aaa
dec
xor
mov
std
cmp
ljmp
dec
test
push
out
pushf
js
repz
fs
push
lods
mov
sub
push
add
cltd
mov
mov
call
push
add
dec
loope
xor
clc
cmpl
pusha
inc
popa
xchg
dec
push
xchg
clc
dec
ljmp
pop
cmp
xor
adc
push
inc
iret
pop
fwait
cltd
add
xlat
mov
xchg
in
ja
lea
jmp
xchg
std
sbb
and
ss
das
add
add
xlat
pop
int
adc
push
and
arpl
add
loope
sub
sbb
shrl
mov
shl
sbb
rcr
ss
std
leave
mov
xchg
cmpsl
movsl
int3
loop
jns
test
jge
jne
rorl
mov
xchg
cli
sub
test
movsb
bound
hlt
arpl
lock
cmpsl
test
insb
cmpsb
test
cmp
sub
lcall
in
mov
pop
mov
mov
aam
andl
sub
push
flds
xor
adc
sarl
in
dec
nop
addl
adc
dec
imul
sbb
and
push
movsl
out
mov
sbb
cmc
cmp
ds
jmp
stos
and
jp
or
pop
fbstp
int3
and
ret
xchg
xchg
addb
mov
cmp
dec
hlt
shlb
lea
mov
push
and
sbb
sub
mov
lret
jmp
fwait
mov
xchg
popf
inc
stos
add
mov
lock
push
jno
pop
andl
and
xor
testl
pop
dec
xor
aam
inc
gs
clc
ljmp
cmp
xlat
push
ja
sub
adc
cltd
cli
mov
sbb
push
sahf
xchg
push
in
jnp
dec
xor
mov
addr16
adc
sbb
sbb
jg
pop
aad
cmp
mov
and
jecxz
cmp
push
push
mov
call
sub
add
add
add
fwait
cmpsb
cmp
pop
adc
add
push
pop
test
gs
imul
cmp
lods
pop
daa
xchg
ljmp
xorb
sub
hlt
shrl
xor
jmp
cmc
inc
sub
cs
pop
push
pop
xchg
fisttpl
cmc
mov
jbe
imul
movsb
mov
mov
mov
push
aas
scas
es
mov
out
xchg
push
sbb
mov
lea
ja
shlb
sub
jmp
cli
dec
mov
and
mov
xor
xchg
push
gs
clc
or
pop
bound
mov
out
xor
mov
adc
xchg
enter
mov
xchg
mov
cmp
mov
mov
cwtl
or
rcrl
and
dec
imul
jb
out
inc
roll
inc
fisubrs
sub
pop
xor
xor
addr16
jae
sbb
shrb
jb
test
add
inc
lret
xor
cmp
imul
pop
mov
mov
and
cmp
fldenv
shlb
rorl
cltd
push
cmp
iret
push
je,pn
push
push
cmp
xor
in
repnz
dec
rol
sbb
ds
pop
stos
pop
dec
imul
mov
jle
sarb
jecxz
std
fs
daa
outsl
jno
movsl
out
add
pop
xor
and
scas
push
gs
sub
cmp
cmpl
and
js
jns
add
ret
outsl
stc
imul
and
xor
cmp
pop
push
or
pop
xchg
xlat
inc
jae
add
shl
sub
lods
sbb
call
inc
lret
mov
xchg
inc
or
or
dec
xchg
ljmp
cmp
lock
scas
clc
inc
cltd
je
cld
dec
push
lds
or
and
mov
dec
lcall
mov
shll
cwtl
outsl
nop
xlat
cmpb
jl
jecxz
out
imul
dec
idivl
fildl
lock
jb
rolb
sub
imul
loope,pt
sub
dec
insb
roll
and
add
sub
mov
cwtl
cmp
push
pusha
pop
mov
xlat
ret
mov
sub
popf
int
cmc
mov
pop
fstps
xor
addr16
mov
mov
inc
pop
pop
fsubl
adc
je
js
push
cmp
dec
repz
mov
lret
pop
jmp
push
out
or
aaa
sub
mov
jo
jo
orl
mov
int3
loope
mov
fsubs
fmulp
js
adc
lahf
push
out
adc
stc
std
in
mov
mov
std
pop
xor
mov
and
jnp
add
add
add
imul
pop
push
sbb
mov
repz
nop
out
sub
cmp
lea
into
inc
test
jo
pushf
fwait
clc
les
cmpb
adc
xor
jnp
andl
fcomps
mov
pop
fnstcw
fscale
mov
push
mov
xor
cmp
and
aad
xlat
jp
push
and
std
and
cmp
push
popa
stos
xor
movb
into
cmp
or
rclb
loop
lea
aas
push
add
lock
and
stos
popf
sbb
inc
je
push
cmpsb
fdivrs
shrl
stc
test
loopne
sbb
pop
mov
aas
loop
repz
rep
jecxz
xchg
jne
mov
mov
call
pop
roll
jne
xor
dec
mov
fdivr
cld
faddp
jae
bound
shrb
push
jbe
test
jmp
mov
push
ja
mov
pop
lcall
jae
mov
sbb
insl
adc
pushf
outsb
in
sbb
xor
dec
ffree
and
add
adc
pop
jb
and
or
and
pop
push
xchg
cmp
push
sahf
xchg
mov
pop
in
xor
arpl
and
pop
add
and
test
xchg
mov
push
sbb
inc
sbb
push
cwtl
jmp
sbb
adc
sub
in
push
and
sbb
xchg
hlt
jmp
jg
in
xor
xor
sbb
sub
sbb
xor
push
mov
dec
stos
dec
and
sbb
or
xchg
sbb
dec
arpl
or
sbb
sub
mov
mov
jge
push
jnp
mov
push
mov
pop
cmp
jge
imul
out
sbb
je
jno
mov
pushf
and
popf
jns
jmp
push
pop
jne
sbb
adc
inc
push
push
cmpsb
adc
add
adc
stos
into
pop
sbb
jle
add
test
sub
scas
mov
arpl
pop
add
inc
fldt
mov
fdivl
rcr
push
fdivs
sarb
dec
inc
inc
inc
jae
mov
arpl
pop
cli
dec
jns
imul
adc
loop
sub
stos
xor
out
aad
stc
sbb
rolb
ss
insb
lods
lea
mov
scas
adc
xor
mov
sub
lret
sbb
nop
lret
jno
and
pop
ja
adc
xchg
mov
and
push
lds
mov
shlb
fistpll
aaa
outsb
ret
pushf
aaa
dec
pop
mov
mov
ljmp
hlt
push
cmp
and
add
gs
in
andl
or
jmp
imul
pop
lods
subb
pushf
iret
xor
mov
ja
ror
aam
adc
jmp
add
rolb
out
sub
psraw
add
add
add
inc
mov
xchg
lods
cmpsb
mov
sub
inc
xlat
and
mov
adc
dec
xchg
push
stos
in
jg
or
inc
sarb
ja
pop
xchg
lods
jmp
outsb
into
shlb
mov
push
and
ds
jge
in
sub
xchg
and
daa
bound
xor
push
cltd
mov
fdivs
cmp
fsts
daa
pop
mov
orl
ret
fdivl
or
jnp
aam
stos
call
add
sbb
mov
jge
jae
test
push
in
lds
lret
jne
test
pusha
inc
xlat
addr16
mov
push
jo
jecxz
sbb
scas
xchg
mov
cli
in
mov
or
and
cmpsb
loopne
aam
xor
std
mov
fldcw
adc
push
or
out
leave
xchg
cld
pop
pusha
nopl
lods
cmc
jae
clc
xor
jb
je
inc
jp
shr
int
xchg
dec
subl
adc
adc
jmp
cmpsl
pop
jl
scas
lods
inc
aad
xor
cltd
mov
mov
cmp
jo
push
push
lds
cmp
fwait
xchg
xchg
add
leave
and
pop
clc
sbb
inc
repz
xchg
lods
mov
sar
fistpll
notl
std
push
add
imul
aaa
and
lock
jge
xor
repnz
iret
popf
dec
js
popa
inc
and
pop
dec
shr
push
loopne
test
and
sub
sub
inc
outsb
mov
push
je
std
mov
stc
mov
jg
fs
xchg
adc
push
push
lret
mov
mov
push
imul
push
mov
movsb
test
cmpl
lods
xchg
jle
dec
out
movsl
out
sar
sbb
add
pop
lods
push
in
shll
andl
mov
test
sub
test
jae
jns
mov
jnp
dec
cld
xor
jae
int
inc
cmp
lcall
push
xor
pushl
pop
scas
fildll
call
push
in
dec
rcrb
jmp
pop
fimull
xor
dec
cmpsb
add
cltd
and
pop
xor
into
into
adc
inc
xlat
imul
gs
and
xor
mov
enter
sub
sub
ljmp
cwtl
push
push
popa
mov
push
sub
addb
pop
out
dec
mov
enter
fcmovu
in
xor
repz
jmp
scas
mov
inc
imul
dec
push
and
mov
pop
push
jle
pop
imul
xor
ficoms
cmp
xor
in
test
add
xchg
push
scas
add
mov
cs
lret
inc
inc
popa
data16
rcrl
xor
inc
xor
pop
addl
add
mov
cld
in
or
hlt
or
fmulp
fsubs
dec
outsb
jecxz
mov
sar
adc
dec
add
pushf
xchg
movsl
sti
sbb
xchg
in
loopne
xor
fcmovnb
sbb
push
xor
mov
stos
push
stos
mov
ret
adc
jno
fidivrs
sbb
and
sub
and
stos
icebp
mov
xor
mov
out
and
enter
cld
xor
mov
aaa
or
mov
test
adc
stos
jne
dec
or
pushf
call
mov
addr16
pop
and
insb
push
addr16
ljmp
push
aaa
dec
adc
push
push
sbb
movsb
mov
in
fcompl
enter
inc
mov
out
addb
push
scas
add
add
insl
rcl
mov
mov
lahf
sub
loopne
mov
testl
popa
popa
jle
push
xchg
xchg
sub
sbb
add
rorb
test
or
adc
lahf
fs
or
jnp
pop
inc
fcoml
lcall
pusha
mov
shll
das
clc
ret
lods
dec
push
lret
hlt
pmullw
mov
and
and
and
mov
adc
movsb
xchg
int3
xor
out
test
int3
lret
rorb
loope
sbb
jp
dec
mov
cmpsb
or
xchg
xchg
js
lcall
mov
sbb
inc
inc
cmc
xor
call
or
loopne
add
jge
add
stos
stc
add
adc
cmp
or
mov
push
movsb
mov
push
repz
cmp
jmp
mov
add
or
jl
bound
mov
cli
push
jp
jmp
mov
push
dec
sub
push
scas
mov
rcrl
movsb
mov
sahf
cmp
cmpl
cltd
aas
sahf
add
sahf
jne
outsl
mov
ficompl
inc
jne
inc
stos
cltd
cmp
or
mov
aas
test
nop
jae
cli
sub
mov
lret
data16
inc
shrb
or
lahf
icebp
xchg
rclb
js
add
xchg
sub
pushf
adc
fs
pop
es
jl
jl
lock
loopne
cmpsl
aaa
inc
movsl
imul
cmp
insb
jbe
bound
lods
mov
ret
jl
sub
ljmp
mov
jbe
push
add
std
shl
xor
and
insb
jne
shl
mov
int3
cs
leave
shrb
outsb
cmc
adc
cltd
lods
add
addb
xor
test
jg
out
cli
imul
scas
js
andb
mov
outsl
dec
and
jnp
mov
add
cmp
cli
in
jg
loopne
cli
scas
jb
test
add
add
add
das
in
and
xlat
xor
or
and
outsb
jmp
imul
loope
lock
testl
dec
sbb
int3
iret
mov
push
mov
mov
mov
rolb
iret
stos
std
jecxz
fidivl
xchg
aam
cld
inc
clc
pop
pop
mov
inc
mov
in
dec
in
addr16
push
xchg
ds
dec
popa
xor
stc
dec
cmp
jmp
adc
mov
sub
cmp
mov
lret
pop
mov
cmpb
jmp
xchg
aam
xchg
sub
mov
mov
jnp
lods
jno
push
dec
leave
jo
test
inc
push
sbb
sbb
xchg
scas
lret
ljmp
lock
add
imul
push
mov
leave
add
in
out
xchg
jg
and
pop
sarb
cli
mov
jmp
sbb
pop
jecxz
or
adc
jl
je
adc
push
cmp
in
test
cmp
cmpsb
mov
xchg
add
pop
sbb
arpl
loopne
cmp
pop
enter
adc
mov
dec
pop
or
imul
xor
pop
push
cmp
xor
jl
dec
or
outsb
lret
adc
inc
xlat
cltd
mov
cmp
stos
insl
sub
add
lea
loope
adc
cwtl
lahf
mov
jno
idivl
sbbl
inc
hlt
push
xor
pop
insb
and
push
mov
rcll
sub
xchg
adc
mov
mov
mov
in
fisubrl
adc
minps
frstor
repz
sarl
mov
xor
add
mov
jge
fcoms
ja
adc
lea
add
pop
pop
sbb
mov
mov
cmc
xchg
mov
iret
or
sub
cli
xor
sbb
dec
inc
jns
mov
sbb
rcll
xlat
lahf
test
cmp
stc
and
test
jno
xor
mov
adc
or
pop
sub
in
int3
sbb
pop
sarl
bound
iret
das
mov
lods
mov
xlat
stos
mov
fs
pop
xlat
and
xlat
aaa
inc
add
cmp
aaa
push
xor
add
cmp
or
aas
cld
lods
repnz
enter
rcrb
nop
gs
xchg
ja
das
test
nop
xchg
cmpsl
lock
xor
dec
pop
in
ror
jns
adc
lea
xchg
mov
adc
inc
orl
cwtl
mov
push
lods
cmp
sarl
push
jnp
loope
mov
jne
jecxz
sbb
lods
dec
loopne
call
fdivrs
movsb
data16
shlb
xchg
lcall
cmpsb
and
aam
xchg
add
add
add
ja
pop
adc
add
in
add
lcall
pop
push
movzbl
shl
sbb
hlt
jnp
mov
scas
and
cmp
mov
mov
xor
in
or
es
ss
xor
nop
xchg
fcmovbe
jno
mov
fldenv
sub
aad
lret
push
pop
loopne
mov
xchg
or
lahf
gs
pop
dec
test
leave
xor
xchg
data16
dec
data16
push
aad
movsb
add
pop
rclb
mov
mov
stos
imul
xlat
dec
xchg
push
popa
ret
jno
arpl
mov
shl
push
repz
dec
mov
dec
sbb
cmp
les
sub
or
fs
negb
sbbl
sub
inc
fdivrs
sbb
not
or
mov
orl
cmp
pop
adc
mov
mov
js
jp
add
push
push
push
stos
add
test
js
xor
idivl
push
cs
in
xchg
lods
mov
inc
jae
leave
popf
lods
popa
add
fdivl
test
gs
data16
fldl
daa
into
inc
xor
dec
cmpb
lock
adc
jge
push
xchg
cmp
pop
mov
add
ljmp
loopne
mov
shll
es
clc
inc
imul
inc
jecxz
cmp
fstpl
loope
mov
xor
jne
addr16
lret
add
adc
lods
jle
adc
mov
inc
adc
xlat
jb
adc
cmp
sub
pusha
cmp
inc
cmpsb
stos
xchg
test
das
push
jo
test
jae
cmp
mov
push
add
fnstcw
xlat
imul
jnp
mov
adc
sub
mov
jecxz
jecxz
fldcw
push
sbb
jne
arpl
sahf
popf
sbb
pop
mulb
xchg
cmp
dec
xchg
popa
lea
test
adcl
xchg
adc
push
ds
push
xchg
push
inc
cmp
outsb
jbe
ret
inc
push
fwait
out
call
sarl
aad
test
sub
inc
jnp
jl
sbb
cli
adc
orb
push
mov
fistps
ficompl
adc
daa
testl
dec
cs
cmp
pop
mov
and
daa
test
fmul
mov
or
jle
sbb
pop
inc
push
sbb
adcl
adc
sarb
xchg
aad
or
lret
jecxz
insb
popa
fstpl
xor
sbb
sub
test
sti
add
fnstsw
mov
add
and
into
mov
add
add
add
or
pop
movsb
into
fsub
or
leave
ss
movsb
stos
inc
inc
xlat
pop
sub
iret
movsl
test
jae
jecxz
mov
mov
lods
dec
cmp
dec
and
mov
and
push
inc
or
add
icebp
in
sbb
sbb
cmp
je
xchg
in
adc
addr16
out
mov
push
fs
js
mov
aas
push
pop
imul
ret
mov
out
out
gs
adc
dec
adc
dec
push
jne
stos
fcmovu
ret
das
fmuls
push
adc
vprotq
cwtl
adc
aas
je
ljmp
cli
lds
xchg
sub
dec
aaa
mov
or
les
add
movsbl
iret
int3
pushf
jne
call
cmp
cld
adc
arpl
jo
ss
fwait
punpckhwd
sub
aad
fstpt
pop
cmpsl
ljmp
jne
aaa
cmp
sbb
bound
cmp
sub
in
push
lret
push
xchg
mov
pop
xchg
bound
lret
aad
popa
xchg
xchg
adc
mov
or
pop
in
mov
test
and
fs
jno
out
sbb
xchg
pop
xlat
popf
repnz
popa
loope
adc
and
inc
push
popf
mov
mov
xchg
cmpsb
test
cmp
ror
and
sarl
arpl
xchg
push
int
in
test
mov
ret
push
xor
fadds
inc
push
loopne
mov
enter
xchg
dec
xor
add
mov
mov
cmp
jl
push
idivl
pusha
pop
inc
lds
jno
in
iret
add
andb
push
mov
xchg
push
jne
ja
mov
mov
mov
and
xchg
insl
xchg
pop
push
mov
andl
or
jbe
pushf
aas
push
cmp
sub
push
dec
fcoml
fiaddl
fisubl
dec
xor
out
aas
inc
push
stos
mov
jmp
cmpsb
and
test
adc
lds
jl
scas
or
fildll
mov
in
bound
dec
sub
add
push
ret
inc
dec
daa
push
loope
mov
pop
in
fnstenv
sbb
test
pusha
in
clc
dec
aam
push
call
and
icebp
jno
aad
iret
sbb
fisubl
jge
mov
nop
or
push
push
iret
xchg
sahf
push
push
into
sub
bound
mov
sbb
xor
mov
outsl
inc
mov
lcall
xor
imull
cmpsl
add
push
inc
dec
ret
aam
orl
out
lods
sbb
rolb
call
inc
mov
push
inc
in
ret
xchg
jge
call
mov
jmp
add
dec
dec
mov
mov
sbb
xchg
stos
or
add
inc
mov
and
hlt
lea
add
add
add
lret
cs
ds
lds
dec
aam
es
xor
pop
setbe
sbb
adc
jle
cmp
jae
mov
mov
out
dec
sub
and
adc
data16
dec
divl
mov
sbb
xchg
rcrb
sub
jp
or
cwtl
inc
pop
clc
sti
or
mov
imul
dec
inc
sub
das
lret
sbb
push
fldl
lcall
xchg
adc
fsubrs
scas
fcmovu
inc
inc
addr16
mov
mov
xor
jmp
push
leave
in
xchg
push
add
loop
ficomps
mov
cmp
sbb
xor
adc
out
push
fiaddl
adc
pop
dec
lea
sti
jo
lods
jle
jbe
xchg
ret
and
mov
out
xchg
jo
sldt
xchg
and
ljmp
xor
lret
popa
or
push
mov
imul
and
loop
adc
inc
pop
cmpsl
ret
hlt
sub
das
xchg
mov
mov
enter
cmp
inc
xlat
dec
sub
jle
ja
mov
aam
adcb
xchg
mov
sub
sub
fwait
clc
sub
bound
xchg
rolb
mov
in
sub
sbbb
sar
cmp
fwait
mov
imul
stos
jp
xlat
subb
call
ss
inc
stc
mov
les
fdivl
stc
xchg
enter
cs
je
mov
cmp
xchg
fidivrs
adc
mov
inc
inc
fiadds
jns
or
cs
xor
fmuls
je
mov
inc
mov
fsubrp
push
sbb
jecxz
dec
or
jns
fnstcw
gs
pop
daa
push
enter
jo
movl
pop
call
and
test
mov
insb
xchg
push
movl
ss
cmpsl
ja
notl
add
call
sbb
mov
int
add
cmp
pushf
sub
ss
mov
or
add
sbb
mov
nop
xchg
sbb
stc
mov
rorl
es
cmp
xchg
cmp
mov
jae
add
jne
xchg
hlt
push
js
dec
push
mov
lods
jge
push
dec
xchg
out
or
imul
inc
xor
mov
out
sub
cmp
mov
mov
cmp
jns
xchg
jmp
mov
mov
dec
rcll
fxch
inc
jecxz
inc
in
rcrl
xchg
fildll
or
aaa
sarb
dec
mov
lea
xlat
repz
lcall
scas
shl
clc
leave
fsts
das
add
shll
xchg
hlt
dec
popf
mov
mov
mov
les
sbb
add
mov
cmp
jle
xor
jl
mov
xchg
add
add
add
fcmovnu
mov
mov
das
js
pop
pop
ret
mov
mov
fiadds
dec
bound
lcall
jle
lea
popf
outsb
fwait
inc
mov
subl
and
and
xchg
rclb
popa
in
push
mov
jns
loopne
cmpsb
push
xor
push
or
sbb
xor
pop
pop
xor
lods
push
lods
sbb
add
jle
mov
sbbb
incb
xor
js
push
jns
sti
icebp
add
cmp
rorb
arpl
sbb
and
nop
pop
mov
in
and
mov
push
scas
aam
in
mov
xor
mov
mov
sahf
or
or
out
iret
xor
push
or
xchg
push
dec
popa
sub
xchg
aad
push
cmp
adc
pop
jo
push
sub
add
adc
mov
jno
or
xor
outsl
fiadds
das
and
out
jno
ret
cltd
dec
push
data16
movsb
loop
mov
call
pushf
mov
adc
imul
rolb
add
shll
lods
aaa
imul
fadds
mov
add
or
movsl
jae
bound
push
in
mov
push
negl
dec
mov
jle
xchg
out
inc
ss
out
cmp
jg
xchg
cmp
push
stos
lret
call
nop
sahf
std
mov
or
or
daa
mov
xchg
in
aad
and
adc
mov
cmc
repnz
loopne
inc
push
in
lds
insl
cmpsl
imul
mov
mov
or
jle
dec
out
test
je
loope
pop
push
in
inc
xchg
pop
mov
mov
lcall
pusha
aad
xchg
rorb
data16
mov
fcomi
test
sub
sub
cld
shlb
outsl
lods
mov
pop
fsubrs
and
ds
jno
adc
stos
xchg
mov
mov
push
jne
loop
cltd
inc
add
or
push
mov
into
xor
mov
sbb
in
inc
shll
push
mov
or
xor
push
shll
out
cld
addb
lret
movsl
aas
mov
sub
fiadds
fwait
adc
int3
mov
movsb
pop
add
add
mov
add
cwtl
daa
jl
mov
cli
push
mov
pop
outsl
cmp
dec
jno
inc
pushf
fildl
mov
mov
std
pushf
mov
lret
pop
mov
xor
xor
scas
test
adc
sbb
rcrl
jp
cmp
and
add
jp
mov
cli
sub
stos
mov
in
scas
stc
jg
xor
fs
jno
mov
push
sbb
add
cmp
out
idivl
mov
subl
add
add
jl
dec
and
cmpsb
iret
mov
adc
mov
stc
cmpsb
jo
pop
into
cmpsb
test
push
inc
mov
je
imul
push
sbb
dec
popf
mov
pop
push
push
icebp
icebp
and
cs
fld
fnstcw
leave
lock
adc
jmp
fimull
jno
and
dec
jne
pusha
inc
add
dec
js
dec
dec
scas
test
inc
xchg
pop
fimull
xchg
les
gs
push
pop
fwait
insb
pushf
jl
mov
arpl
inc
xchg
shl
pop
mov
mov
pop
pop
xlat
inc
xchg
js
sahf
push
pop
adc
in
sub
dec
jmp
pop
in
call
ss
stc
dec
out
mov
dec
stos
and
mov
adc
in
adc
enter
mov
mov
jg
js
ss
fistps
ss
iret
inc
inc
xchg
mov
mov
xchg
jle
sub
ljmp
int3
push
and
xor
jno
push
cltd
push
xchg
shr
enter
mov
mov
jp
inc
imul
mov
imul
cmpsb
xor
lock
pop
stos
clc
dec
sub
or
inc
pop
fstl
or
movsb
cmpsl
repnz
sbb
popl
lcall
lcall
xchg
push
or
into
fldenv
sbb
adc
pop
xor
pop
cmp
decb
adc
cmp
and
xchg
fisubrs
bound
scas
jecxz
push
mov
cmp
pop
test
push
fnstenv
pop
mov
je
mov
fcmovnu
inc
mov
cs
aam
push
scas
stos
inc
add
pop
fdiv
std
adc
fidivrs
lods
sub
cmovbe
popa
adc
cmp
ja
test
mov
and
pop
data16
cld
in
inc
ret
xor
inc
sbb
xor
repnz
adc
push
xchg
ret
ficomps
pop
push
and
aas
pop
dec
xchg
outsl
lcall
mov
je
in
jge
mov
enter
aaa
add
aas
fs
into
outsb
enter
in
dec
aad
mov
repnz
lcall
test
test
add
cmp
cmp
adc
lock
loope
inc
nop
mov
sub
pop
popl
lds
ret
inc
lea
sbb
sti
and
sub
in
xchg
ljmp
pop
les
inc
push
fadd
stc
std
push
jle
outsb
and
mov
adc
add
test
cs
leave
pop
out
inc
pop
ljmp
shlb
sahf
loopne
rcrl
cmp
repz
inc
repz
rolb
icebp
adc
sbb
jns
ret
pop
mov
pop
xchg
std
imul
lret
pop
movsb
xor
pushf
cltd
jbe
xor
sti
mov
ss
sub
ljmp
sbb
fsin
out
gs
testb
cmp
xchg
add
add
add
jae
inc
dec
mov
add
pushf
mov
jae
iret
orl
and
sub
out
mov
subb
iret
test
xchg
int3
fsubrs
pop
pop
xchg
das
sbb
je
dec
pop
push
aas
pop
xlat
test
push
scas
push
xchg
ret
jg
sbb
out
dec
add
mov
push
cltd
pminub
fucom
push
test
mov
inc
sbb
mov
loop
fmull
adc
cmp
add
push
mov
dec
cmp
dec
xchg
sahf
das
std
ja
mov
pop
jno
adc
std
push
fs
out
sahf
and
mov
pop
dec
pop
insb
js
dec
dec
pop
int3
pushf
jl
mov
mov
cmp
xchg
popf
rorb
mov
mov
pop
shl
iret
popa
mov
popa
test
enter
fs
cmp
mov
andl
and
roll
loopne
cmp
ret
push
xor
js
mov
add
jg
int3
pusha
mov
jge
aas
rcll
lock
push
dec
push
xor
xchg
pop
pop
jnp
mov
mov
push
popf
addr16
inc
sti
push
dec
pop
adc
push
sti
and
lds
enter
push
int3
in
jo
cmc
shrl
pop
pop
jl
mov
pop
push
stc
inc
stos
xlat
add
pop
inc
adc
leave
adc
scas
scas
stos
lahf
arpl
icebp
data16
jns
test
dec
imul
gs
push
jecxz
push
jne
xor
pop
dec
push
adc
sbb
popa
jecxz
jp
clc
shlb
std
jo
test
jge
cwtl
lock
push
dec
mov
jmp
ja
fisubl
mov
outsb
fcompl
roll
out
in
pop
jo
jmp
test
xchg
in
mov
sti
adc
dec
ficoml
xchg
xchg
out
leave
hlt
int3
cmp
imul
mov
les
pushf
jl
sub
jg
insb
mov
in
mov
les
xor
cmp
cmpsl
fbstp
xlat
mov
push
sub
cld
push
lock
in
shll
stos
add
lahf
mov
fcoms
mov
mov
mov
lods
insb
popa
das
inc
daa
jge
push
inc
mov
push
mov
dec
das
mov
icebp
xchg
int
inc
scas
mov
repz
inc
testb
mov
aam
cmc
mov
in
cmp
addb
movl
mov
popf
xchg
adc
js
roll
and
add
call
out
xchg
loope
push
lock
adc
cmpsl
jecxz
push
jns
xor
adc
push
paddusb
jle
lock
aad
sub
into
pop
std
clc
int
dec
dec
rol
cmpsl
add
adc
arpl
sti
adc
sub
out
out
mov
add
or
inc
icebp
push
stos
sub
push
mov
cmpsb
pop
stos
sbb
imul
add
inc
pop
repz
mov
gs
pusha
pop
filds
pusha
mov
outsl
insb
add
cmpsl
sbb
notb
repnz
repz
sbb
fnstenv
cmp
cmp
add
daa
leave
xor
repnz
inc
cmpl
xor
pop
pusha
ret
out
or
jo
int
es
add
xchg
or
add
test
jmp
stc
leave
mov
sbb
pop
aad
mov
mov
ds
imul
dec
scas
cmpb
xchg
out
jmp
out
loopne
dec
rcl
xlat
mov
pop
add
jo
ret
cmovp
dec
jbe
xor
lods
push
sub
or
adc
or
insb
aam
clc
jae
ror
adc
inc
mov
mov
adc
jo
mov
sahf
mov
adc
ljmp
cwtl
mov
test
inc
mov
lcall
repz
in
lea
scas
or
xchg
call
adc
xchg
add
test
mov
jecxz
arpl
cmp
insb
sbb
mov
popf
mov
jecxz
sbb
xlat
cmp
sub
repz
mov
push
xchg
scas
loope
adc
xor
sbb
xchg
sbb
mov
stos
mov
lds
pop
ret
mov
add
not
xor
dec
lods
popf
loop
xor
int
fnsave
in
adc
add
sub
shll
mov
data16
loop
out
ds
and
pop
movsl
jae
sahf
mov
add
rolb
btc
call
lahf
aad
sbb
not
addr16
lcall
adc
add
mov
ret
sahf
sbb
aam
adc
ds
sub
shll
repnz
sbb
js
xchg
adc
add
sub
js
jecxz
or
jmp
ficoml
jle
lods
scas
adc
inc
mov
popa
aad
cmp
mov
cltd
pushf
mov
stc
and
lret
lcall
loope
add
scas
iret
mov
adc
fdivs
shll
mov
mov
sbb
mov
clc
jae
lock
pop
mov
stos
aam
lret
adc
adc
and
pop
pop
push
adc
pop
cmpsb
mov
cmp
push
cmp
dec
loopne
mov
sub
out
mov
call
lods
mov
push
jnp
std
movsb
dec
out
adc
fistpl
in
mov
or
push
repnz
std
add
push
and
xor
inc
add
mov
add
add
add
jecxz
cmp
or
push
push
cmp
add
shlb
pop
leave
popf
mov
imul
adc
outsb
lds
into
cltd
or
and
gs
shll
cmp
jp
mov
adc
adc
clc
jnp
popa
inc
fs
and
or
mov
jmp
jno
sbb
add
fwait
mov
xlat
or
push
enter
inc
cli
sub
push
xor
sbb
imul
sbb
mov
add
mov
cmpsl
xor
push
sub
xchg
es
xor
sti
add
push
mov
insb
cmp
or
mov
cmpsb
aaa
cltd
lds
pop
inc
clc
sub
or
sub
mov
aas
andl
jmp
mov
out
xchg
das
cmp
decl
pop
jno
mov
push
pop
pop
mov
and
push
jge
mov
insb
sbb
push
test
xorb
adc
xchg
xchg
xchg
push
test
add
jno
push
insl
out
mov
loop
mov
fwait
push
add
cmp
stos
xlat
inc
adc
mov
jmp
xchg
push
adc
mov
and
aad
test
mov
adc
xorl
mov
xor
aaa
les
xor
mov
pop
xor
das
adcl
push
divl
imul
call
jb
jecxz
pushf
push
pop
cli
aam
pcmpgtw
popa
fdivr
and
jne
scas
mov
cmp
or
fwait
push
lahf
xor
push
mov
insl
test
arpl
and
mov
daa
xchg
arpl
xchg
xor
dec
push
pop
ret
loop
je
ret
add
gs
cmc
repz
pop
stos
inc
lods
ljmp
repnz
xor
mov
subb
sbb
jp
xchg
rcll
lret
sar
pop
gs
mov
jb
in
pop
and
mov
pop
push
mov
adc
sbb
mov
mov
dec
jns
in
int3
cmc
aas
xor
dec
push
insb
insl
xchg
sub
popf
push
mov
add
orl
leave
je
mov
sub
jmp
mov
gs
test
jle
sbb
mov
dec
cmpsl
mov
jns
jb
ja
fmulp
popa
subl
out
adc
add
lahf
cmc
pop
xchg
mov
push
push
sub
iret
stos
pop
jg
test
lahf
or
xchg
daa
sub
movsl
addr16
std
inc
adc
jo
push
adc
pop
cmpsb
cmpl
fildl
jmp
lret
pop
in
pop
xchg
rol
sub
data16
xchg
leave
dec
xor
outsb
push
scas
xchg
mov
cmp
arpl
fdivrl
popa
hlt
mov
arpl
mov
add
cmp
sahf
into
adc
out
or
movsl
cld
sub
je
pop
roll
push
rcr
push
data16
rolb
xor
jno
mov
not
mov
clc
xchg
or
add
dec
ss
cmpl
imul
jae
or
les
mov
cltd
dec
cmp
add
dec
stos
outsb
mov
std
add
push
mov
sbbl
add
sbb
mov
mov
test
sahf
dec
ja
scas
mov
outsl
pop
cmp
jnp
cmp
sub
addb
lods
cmpsb
cmp
pop
fidivl
bound
sub
fistpl
insb
scas
sub
out
push
pop
cmp
mov
mov
call
cmc
ja
xchg
rcrl
or
in
pop
out
fwait
cmp
and
int
cmp
loopne
adc
jno
in
or
popf
cmpsl
push
loopne
aad
adc
loopne
mov
pushf
and
mov
sub
stos
adc
aam
imul
cmp
inc
imul
sub
dec
jae
xor
popa
cmpsb
sbb
cmp
dec
mov
insb
loope
jecxz
pop
push
insb
clc
pop
aaa
out
fs
insl
lea
pop
and
leave
ja
xlat
dec
cli
insb
xchg
dec
mov
or
scas
push
xor
pushf
lds
fsubr
aas
mov
jbe
or
pop
sarb
sub
add
sbb
es
sub
sarl
jecxz
dec
xor
call
pop
cmp
les
mov
push
dec
mov
cmpsb
mov
aad
inc
inc
sarl
shl
or
jnp
push
sbb
push
adc
dec
jns
cmpsl
hlt
fildl
sbb
adc
add
cmp
arpl
outsl
int
loop
mov
loop
in
rclb
or
mov
mov
sub
pushf
or
inc
dec
test
pusha
pop
lea
jnp
mov
mov
call
cmp
in
sub
dec
stos
mov
add
xor
sbb
cli
inc
test
dec
jae
fbstp
or
and
cmp
fs
pushf
xchg
outsl
mov
push
pop
or
jle
insl
daa
addr16
bound
sub
inc
adc
cmpsl
add
into
movsl
scas
inc
and
lods
popa
adc
fisubs
out
adc
out
inc
lds
rol
or
fstpt
jmp
dec
xlat
roll
pusha
cs
mov
pop
pop
fisubrl
imul
mov
decl
incb
mov
jbe
test
dec
test
mov
push
pusha
jbe
out
fnstsw
and
add
add
add
mov
lret
mov
xchg
xlat
jbe
rcll
xchg
jae
and
fcomps
mov
push
sbb
jno
pop
push
sub
xlat
subb
aam
sbb
adc
mov
pop
pop
sti
pop
and
mov
fidivs
cmp
jg
xchg
fcomps
rcl
adc
jae
xor
in
into
mov
mov
sbb
xor
lods
or
xor
mov
mov
dec
jecxz
fisttps
pop
fsubrl
add
jecxz
icebp
jle
mov
stos
jle
out
lock
adc
fmuls
stc
xor
es
add
orb
cwtl
xchg
add
dec
push
sub
out
mov
in
push
and
add
xchg
push
xchg
test
mov
dec
rolb
or
mov
cmp
out
fwait
add
cmp
mov
xor
dec
ret
or
in
pop
pop
cltd
cmp
xor
popa
out
fidivrs
outsl
cmp
jmp
mov
jmp
fbld
incb
xor
pushf
mov
notb
pop
pop
mov
lods
mov
or
cmp
and
lret
dec
mov
addr16
cltd
arpl
aas
loopne
xchg
xor
or
inc
je
stos
daa
int3
xor
adc
in
imul
addr16
hlt
mov
jbe
and
mov
or
pusha
stc
push
shll
jo
mov
sbb
mov
dec
inc
sub
arpl
data16
xor
add
jl
stos
jno
test
xchg
or
bound
sub
aaa
push
mov
xchg
je
pop
in
sub
enter
lds
pusha
nop
adc
sub
xchg
adc
div
jo
movsl
push
shrl
cmp
stos
add
add
clc
fwait
repnz
out
cmp
jge
sbb
scas
dec
adc
mov
mov
in
sti
jno
outsb
xlat
divl
mov
lock
dec
int
mov
ss
push
lcall
gs
push
sbbb
or
enter
inc
icebp
jnp
jmp
in
imul
lds
cmp
test
incl
cmp
sub
adc
push
les
push
or
pop
vunpckhps
sbb
pop
mov
push
ljmp
jno
out
cmpsl
jg
gs
pop
push
pop
in
pop
int
aam
leave
int3
sub
mov
mov
ss
xor
mov
daa
lahf
and
outsb
push
cmpsl
cmp
je
nop
ja
mov
cltd
stc
inc
dec
dec
xchg
push
mov
pop
jp
repz
adc
pop
add
push
sub
fucomip
ficoms
adc
and
and
add
add
add
shrb
cmp
mov
sbb
xchg
lea
rcrb
mov
js
xchg
push
test
fcom
add
dec
xchg
xlat
xor
inc
in
sahf
push
aad
ror
push
mov
arpl
mov
dec
cltd
sub
jl
sbb
jge
pop
flds
jbe
pop
xchg
pop
pop
xor
pop
or
mov
outsb
stc
xor
leave
and
out
jnp
jbe
xor
in
pop
xchg
and
sbb
cmp
frstor
pop
aaa
mov
inc
pop
or
pop
test
mov
out
fadds
daa
xchg
test
pop
xor
push
mov
jmp
push
aas
xchg
lret
or
or
or
aaa
test
stos
jp
stos
dec
sbb
rcrl
cmc
push
pushf
push
mov
loope
xchg
push
mov
addr16
cmp
pop
xchg
mov
ss
jmp
mov
rcl
aam
sbbb
and
icebp
lock
stc
cs
inc
nop
sub
jno
bound
mov
fiaddl
cmp
mov
mov
jle
test
in
jle
mov
mov
fsubl
daa
pop
ret
shll
push
lret
je
adc
aas
sarl
and
leave
mov
es
rorl
lret
fmul
pop
inc
addb
lret
mov
inc
mov
sbb
jecxz
ss
loope
xchg
mov
and
loop
dec
nop
dec
aam
daa
lock
outsl
sbb
ss
lret
inc
std
inc
mov
pop
jns
daa
sbb
push
xor
inc
add
cs
sbb
jne
faddl
xchg
mov
in
jb
mov
out
dec
mov
cmp
dec
nop
xor
rcll
test
cmp
push
mov
push
inc
jns
inc
push
sub
mov
push
call
lret
jb
dec
push
push
jne
pop
je
fisubrl
jmp
dec
sub
sbb
mov
or
ret
shlb
xchg
fwait
ret
gs
int3
loopne
setae
repz
mov
repz
in
test
add
aaa
aad
fld
into
ds
mov
jle
idiv
loopne
adc
aad
mov
mov
sbb
xor
lods
scas
in
fidivrl
push
insb
jo
sbb
gs
cld
inc
mov
mov
imul
xchg
stos
push
push
sub
bound
and
pop
fs
pusha
jp
push
mov
mov
inc
aam
dec
jecxz
sbb
push
fdivs
mov
inc
add
cld
mov
subl
cmp
fwait
push
scas
out
rclb
sbb
sub
into
out
cli
addr16
fnsave
mov
testb
stc
pop
movsb
inc
arpl
cmpl
subl
outsl
daa
insl
push
push
stos
adc
pop
cld
dec
stos
add
add
add
add
pushf
or
test
or
jns
bound
sbb
cmc
xchg
or
daa
jl
dec
xchg
addr16
cmp
bnd
int3
xchg
mov
sub
and
dec
lods
in
xchg
out
mov
pop
sbb
mov
shrb
mov
jecxz
and
jb
xchg
mov
jp
mov
stc
xchg
cli
cmp
push
lahf
mov
mov
dec
and
xchg
jns
push
test
push
insb
scas
mov
call
adc
lods
rolb
cmp
mov
and
mov
ret
inc
mov
push
ljmp
out
sub
imul
pop
inc
xchg
int
cld
popa
xor
clc
mov
insl
xor
test
sbb
jp
pop
mov
fnstenv
mov
xchg
pop
cmp
ljmp
orl
out
xor
ffree
enter
test
ds
mov
mov
lcall
cld
clc
or
xchg
pop
cmpsb
ljmp
jne
stos
loopne
leave
adc
rorb
divb
cmp
call
cmp
pop
enter
mov
xchg
iret
mov
bound
lret
adc
mov
lods
mov
mov
mov
loopne
pop
fs
leave
xor
test
dec
sbb
push
es
aad
mov
mov
adc
repnz
sahf
repz
in
ret
inc
js
cmpsb
fwait
mov
mov
inc
gs
std
or
pop
sub
gs
mov
lcall
adcl
aam
popa
sub
cltd
pop
mov
and
icebp
imul
arpl
call
pop
mov
dec
clc
and
pop
inc
nop
pop
call
outsl
pop
leave
inc
idiv
icebp
je
jnp
mov
jle
add
sbb
xchg
pop
push
clc
push
sbb
add
fnstenv
adc
mov
daa
popa
push
pop
dec
dec
cmp
je
das
fwait
imull
lcall
push
pop
or
jp
or
incb
xchg
imul
imul
insb
aam
mov
jae
rcl
mov
loop
push
push
pop
adcb
and
jecxz
push
adc
adc
int
outsl
adc
dec
mov
dec
jp
hlt
inc
push
push
dec
out
lahf
and
lcall
inc
faddl
hlt
out
in
pop
outsl
lcall
jge
fcmovb
cs
xchg
xchg
jmp
cmp
aad
mov
sbb
sahf
xchg
cmp
icebp
in
mov
inc
cwtl
mov
push
jo
out
popa
fstps
lea
and
mov
out
add
test
lods
add
add
add
push
test
ret
xchg
pop
pushf
inc
or
or
sbb
fwait
cli
jne
push
inc
cmpsl
add
mov
clc
mov
xchg
dec
cltd
inc
push
mov
sub
mov
adc
sbb
out
adc
add
adc
cmp
sarb
push
sbb
adc
scas
rorl
out
sbb
mov
lods
insb
jp
iret
and
push
imul
enter
popf
sarl
jmp
fwait
sahf
insb
push
inc
mov
dec
fneni(8087
jb
shll
mov
sub
fs
cmp
xchg
pop
mov
addr16
cmp
loopne
push
movsb
pop
adc
jp
shl
clc
push
arpl
lock
shr
fcmovnu
sar
into
pop
repnz
in
insl
loop
jno
xchg
sti
out
enter
cs
mov
sbb
mov
or
insb
push
and
xchg
mov
jno
cld
divb
jge
jl
jns,pt
mov
and
sti
jb
stc
ljmp
inc
pop
jo
mov
aas
xchg
test
data16
jl
add
add
or
adc
mov
or
inc
xchg
sub
dec
and
push
scas
enter
dec
arpl
inc
aad
sbbl
std
jp
in
out
leave
fwait
lahf
mov
or
or
out
dec
inc
loop
xchg
jmp
cmpsb
inc
out
push
xor
dec
mov
push
fistps
push
mov
mov
stc
clc
xchg
cltd
push
lcall
dec
push
mov
pushf
push
add
out
xchg
jecxz
mov
push
lods
mov
out
hlt
out
dec
lods
shll
loopne
call
jo
or
push
sti
xchg
dec
leave
lock
pop
jne
or
cltd
testl
enter
leave
dec
cs
inc
sub
ljmp
cmp
sbb
out
mov
test
call
outsl
popf
imul
test
and
lea
or
mov
pusha
lret
aad
sbb
psrad
xor
lea
sar
or
cmp
pop
cli
loopne
dec
cmp
aad
lea
push
fisttpl
inc
sbb
mov
imul
push
dec
push
push
mov
inc
jo
cmp
es
sub
add
insb
popa
repnz
xor
jecxz
faddl
stc
aaa
inc
mov
push
or
mov
aas
jns
adc
nop
in
adc
sti
pop
and
fsubr
xor
test
mov
or
mov
iret
jnp
enter
fldl
out
sub
and
sub
mov
inc
xor
jmp
mov
test
push
add
popa
mov
lea
jno
test
add
cmp
mov
mov
fucomp
xchg
mov
add
add
add
cs
ficomps
inc
jbe
pop
cmp
add
mov
mov
and
test
cmpsl
arpl
lock
pop
cmp
cwtl
stos
adc
mov
mov
sub
adc
mov
dec
adc
inc
movsl
loopne
data16
mov
outsb
pop
mov
or
xchg
cmpsl
into
aaa
loopne
int3
jne
mov
cmp
adc
jmp
fwait
das
stos
fadds
mov
insb
clc
pop
jno
adc
lcall
ret
jns
or
lods
push
ss
mov
ret
mov
xchg
and
mov
xorl
shlb
int3
mov
cmp
in
cmp
aam
les
jle
pop
xchg
and
jbe,pn
jg
shrl
inc
inc
or
adc
xchg
xchg
sbb
mov
test
filds
pusha
dec
xchg
jge
adc
pop
addl
pop
test
cs
or
mov
fisttps
inc
test
sahf
inc
lods
sub
rolb
xchg
mov
daa
jl
and
cmpsb
or
nop
in
xor
mov
adc
pop
std
lret
lahf
xor
jp
lods
cmp
mov
sbb
jae
hlt
add
mov
cmpsb
xchg
xor
inc
test
adc
xor
push
jo
and
cld
mov
adc
outsl
push
cmp
fs
test
xchg
les
sbb
rorl
mov
inc
lods
cmp
cmp
fstl
cmpsb
add
pop
cmp
mov
pusha
ret
sub
int
or
mov
sbb
mov
fdivl
int
pop
push
ret
jge
jge
and
arpl
adc
xor
pop
mov
insb
cmp
mov
in
push
movsl
sti
fnstsw
xchg
cmpl
aas
cbtw
mov
xchg
pop
push
sbb
lock
adc
test
inc
es
ficompl
into
dec
add
test
mov
jb
roll
repnz
out
test
arpl
cmp
sbb
adc
pop
js
xor
cld
pop
push
iret
dec
into
call
std
pop
sarl
pop
aam
stos
cltd
sub
adc
int3
mov
shr
adc
add
sbb
pop
fwait
test
or
ss
aam
mov
sbb
nop
in
or
push
or
shlb
inc
dec
pop
and
test
test
xor
add
or
pop
into
sub
cmp
rorl
cld
push
outsl
add
mov
push
inc
aad
scas
dec
and
cmp
mov
pop
sub
lock
ss
pop
push
repz
pop
addl
in
add
push
ds
outsb
sbb
mov
cltd
daa
mov
add
add
add
xorb
cmpsl
cmp
fbld
and
rcl
add
lcall
add
pop
sbb
push
pop
or
pop
and
bound
outsl
jns
adc
ficompl
leave
leave
xlat
les
xchg
stc
cmp
ret
xlat
imul
loop
lds
cwtl
std
jmp
enter
insb
dec
ret
stos
pop
lods
rcrb
out
add
xor
lea
into
lcall
and
pushf
test
es
inc
xchg
sti
js
mov
pushf
sbb
cmp
mov
sbb
mov
jl
pop
mov
ret
xor
sbb
icebp
data16
es
cmp
mov
imul
notb
and
dec
fnstcw
or
add
rcrb
cmp
fildl
incl
cmpl
aad
xchg
xchg
dec
jns
jecxz
push
repnz
pop
or
fcmovnb
es
xor
imul
sti
aad
loop
cltd
adc
push
out
call
sbb
lret
jmp
pop
mov
jl
adc
jb
popf
int
mov
fs
loopne
or
std
repz
lea
and
loope
xor
jno
xchg
jns
fnsetpm(287
lret
push
pop
dec
sbb
in
lock
sti
pop
push
adc
inc
jecxz
mov
jl
inc
push
jnp
jns
test
loope
add
outsl
cmp
mov
movsl
sbb
hlt
add
sarl
pop
stos
not
dec
cld
xor
inc
std
mov
mov
ret
nop
cmp
and
mov
pop
int
movsb
dec
xabort
sbb
mov
sbb
iret
push
mov
mov
icebp
stos
lret
imul
insl
int3
mov
cmpsb
dec
cmp
and
mov
and
jno
leave
ljmp
addr16
inc
clc
arpl
pushf
out
rcl
xchg
lea
xorl
or
push
movsl
pop
pop
dec
inc
push
push
aad
xchg
insl
fbstp
jecxz
xlat
int3
and
lcall
out
jmp
int
xor
popl
adc
xor
cmpsl
fildll
lods
inc
mov
cltd
sub
into
bound
dec
repz
push
sbb
out
add
addr16
leave
push
inc
cmc
std
cmp
push
sti
xor
jb
lcall
stc
push
xchg
mov
cmpsb
mov
mov
xchg
imul
and
iret
xchg
movsb
jne
lahf
pop
adc
and
sbb
int3
and
cld
cltd
cmpsb
pop
mov
jns
and
stos
icebp
stos
push
repnz
sbb
inc
push
jmp
and
pop
scas
popa
out
fcmove
jb
mov
xor
xor
xchg
cli
scas
testb
mov
sub
add
mov
mov
xor
icebp
dec
loop
add
add
add
push
mov
add
push
push
in
or
lret
dec
subl
out
xchg
fbld
sub
shl
adc
cmp
aad
xchg
mov
scas
mov
stc
mov
mov
popf
insb
mov
rol
ljmp
daa
inc
inc
ja
push
sbb
pop
ljmp
lods
sub
mov
push
pop
mov
sub
xorl
ds
mov
jnp
das
mov
sub
mov
rol
push
or
js
cmpsl
pop
or
std
adc
cmp
sbb
dec
lret
lods
into
mov
cmp
inc
inc
jo
push
rcll
rorb
lds
sarb
mov
mov
sub
push
loopne
pop
lds
imul
pusha
cs
sub
pop
jb
fists
lock
fidivl
test
iret
nop
sti
push
xor
push
add
enter
mov
test
insl
sbb
lds
ja
mov
lea
jle
or
mov
mov
out
gs
mov
mov
cmpsl
mov
or
cmp
iret
lock
or
xchg
mov
sub
sbb
pop
stos
pop
jae
stc
in
das
push
pop
rep
arpl
hlt
inc
cltd
push
call
addb
mov
fwait
in
stc
leave
aaa
fisttps
sbb
mov
jg
sub
push
xchg
into
sbb
leave
lahf
inc
clc
outsl
fisubs
pop
cmp
insb
push
push
mov
cwtl
stos
mov
mov
les
iret
out
jns
inc
or
add
pop
xchg
adc
std
mov
lahf
mov
pop
xchg
lcall
push
push
cmp
mov
lock
mov
sub
xor
jns
imul
mov
ret
es
or
or
xor
aad
scas
pusha
out
es
inc
mov
dec
outsl
ljmp
pop
scas
and
mov
cmpl
arpl
sub
loop
and
jmp
scas
ret
or
xlat
lods
stos
das
lahf
out
mov
cld
stc
sub
pop
bound
adc
push
sbb
add
or
jecxz
add
lret
sub
fidivrl
leave
movsb
outsl
xchg
jmp
xchg
adc
mov
sbb
dec
rcrl
mov
mov
cmpsb
dec
cltd
adc
dec
mov
aas
or
mov
xlat
inc
pop
neg
xchg
fcoms
inc
xor
pop
testl
cmp
or
movb
arpl
clc
push
add
mov
stos
cld
push
out
loope
mov
adc
and
ret
test
scas
aam
daa
push
mov
jge
scas
loopne
add
dec
inc
mov
in
stos
clc
adc
aad
movsl
or
add
pushf
adc
out
cmp
mov
mov
lods
sbbl
jnp
jmp
and
mov
fnstenv
stos
into
movsb
out
pop
sbb
push
inc
and
xor
arpl
jl
cmp
mov
sub
fldl
aad
mov
jle
push
stos
or
cld
outsl
inc
ljmp
lret
adc
jmp
jnp
jns
in
sub
cmpsl
andb
add
lahf
pop
adc
sar
jle
je
repz
ret
cld
push
or
mov
divb
push
pusha
adc
dec
sbbb
xchg
fmuls
add
inc
rorl
mov
jmp
jp
adc
fwait
iret
sbb
arpl
jge
push
pop
pop
sub
jae
or
push
ja
push
ljmp
sub
lea
push
jns
mov
sahf
pop
inc
js
dec
sub
mov
add
and
loop
ds
jmp
int3
mov
testl
adc
sbb
lret
aad
imulb
cltd
lods
jb
sbb
in
cmp
jbe
cltd
mov
stos
shlb
lret
xor
xchg
rcl
addb
ljmp
loopne
inc
fsubl
add
mov
sub
mov
aaa
cmp
icebp
outsb
movsb
add
ja
jmp
aad
push
lds
mov
ror
movsl
jle
cltd
inc
mov
pop
push
sub
cli
xchg
fistpll
mov
inc
rol
ja
pop
add
fisubl
call
loope
adc
icebp
inc
mov
std
push
in
adc
aad
lds
adc
icebp
add
mov
in
inc
fwait
sub
push
rep
daa
push
push
jno
pop
enter
subb
sbb
cmp
fstps
stos
mov
popf
loope
xchg
xor
loop
shlb
xor
add
outsb
pop
insl
sbb
cwtl
adc
lahf
pop
cmp
test
push
leave
mov
or
lcall
int
dec
sti
and
adc
mov
cmpsb
and
inc
test
dec
sub
jge
ljmpw
fldt
and
mov
das
fxch
sub
leave
call
jge
dec
or
sub
and
movsb
imul
inc
pop
pushf
mov
push
add
fldl
insl
add
xchg
add
and
fistpll
jb
lea
dec
scas
sbb
call
gs
dec
loopne
jo
push
mov
fidivl
je
dec
push
dec
push
cmp
pusha
cltd
mov
pop
es
mov
jge
ja
lea
and
dec
xchg
test
push
lea
mov
mov
push
enter
mov
sete
fiaddl
stos
jo
dec
cli
fldcw
loopne
mov
add
add
add
pop
imul
xchg
cmpsb
cmp
cmpsl
mov
ds
jbe
ret
adc
cwtl
bnd
mov
ss
and
xor
xlat
je
jmp
daa
xor
dec
mov
mov
std
inc
test
shll
imul
popa
imul
jo
fisttps
rcr
decb
cltd
add
iret
adc
sbb
mov
lock
in
xchg
mov
adc
inc
and
sbb
sub
int3
out
or
xchg
lods
or
icebp
adc
aas
out
bswap
adc
push
jnp
outsl
lret
xchg
sub
add
push
mov
imul
xor
jg
xor
js
cmpsl
push
ret
scas
inc
add
cmp
fcmovnb
sub
lds
or
or
sub
int3
add
and
add
ljmp
fsubl
lcall
movsl
fsubrs
xchg
pushw
jl
sub
mov
fbld
ret
addl
ss
ret
bound
push
sti
xlat
mov
or
mov
mov
push
jne
push
cltd
xor
cmp
inc
mov
idivb
dec
cld
or
stc
fwait
xchg
adc
mov
push
in
leave
cs
cli
push
mov
mov
test
inc
call
inc
sarb
lret
subl
aad
pop
stc
push
inc
ds
inc
out
out
push
mov
mov
aad
sub
xchg
ret
mov
push
mov
sub
mov
dec
push
mov
in
scas
and
and
scas
inc
out
push
jp
out
sbb
pop
out
jb
int
inc
ret
in
mov
mov
sbb
sub
fistpl
xlat
and
daa
xor
int3
in
fdivrs
es
push
mov
cmpsb
mov
mov
mov
negl
fs
rclb
pop
add
cmpsl
sbb
cmpsl
add
daa
data16
mov
mov
fisubs
and
add
lcall
mov
cmp
insb
out
in
cli
test
scas
cmpsl
add
cmpsl
hlt
data16
in
dec
pushf
int3
das
mov
lock
in
cmp
neg
jle
xor
leave
nop
add
jmp
int3
sarl
mov
outsl
xchg
fwait
xor
sub
nop
and
out
push
sbb
push
repnz
addr16
xor
xchg
or
jo
mov
sbb
push
pop
mov
add
lret
mov
imul
sub
sbb
inc
and
fdivl
push
xor
jp
out
pop
adc
ss
call
sbb
cld
outsb
mov
and
repnz
movsb
out
inc
adc
inc
mov
les
jl
or
xor
inc
add
dec
xchg
pop
xchg
js
mov
push
rolb
add
add
bound
push
mov
sti
mov
add
rolb
push
add
clc
leave
xor
stos
ret
pop
cmpsb
pop
bound
stos
mov
mov
fdivr
push
cmpsl
pop
jle
sbb
dec
cli
fstps
in
mov
and
jl
hlt
leave
cmp
icebp
adc
aas
in
pop
sub
cltd
sbb
cltd
dec
sub
out
xorb
je
rolb
ss
leave
xor
jne
sub
int
lods
add
cld
jae
jg
sbb
mov
mov
pop
or
sub
and
cli
jg
shll
mov
or
popa
push
inc
data16
jp
xor
lret
sub
test
xchg
fstps
sbb
pushf
add
and
out
ja
or
cmc
add
lahf
adc
imul
lahf
test
jl
sarb
rclb
xchg
std
dec
mov
sub
sbb
push
dec
or
das
xchg
dec
cmp
arpl
mov
int3
and
test
out
mov
cmp
es
sub
lods
push
sub
mov
les
jns
sbb
in
sub
mov
leave
popa
fisubl
out
pop
call
mov
idivl
cmp
test
mov
jno
bound
popf
mov
shlb
leave
lea
mov
cmpsb
out
pop
inc
jmp
adc
inc
or
push
fstps
lahf
ror
xchg
push
cmp
movsl
nop
mov
dec
pop
fsubrs
mov
cmp
push
les
pusha
je
sbb
imul
adc
push
test
dec
xchg
and
dec
jb
mov
sub
je
out
imul
scas
bnd
pop
cltd
negb
sub
or
rcrl
push
fdivrs
adc
dec
xchg
test
shll
cmpsl
inc
testb
lret
push
xor
shl
fstpt
inc
mov
sbb
iret
fcomp
lcall
xchg
nop
out
mov
lcall
mov
test
mov
mov
mov
outsl
cmp
cmp
out
dec
pop
push
and
jb
pop
push
mov
xchg
mov
fidivl
jmp
xor
sub
sub
std
and
rcll
cmpsb
dec
outsb
out
fs
movsl
pusha
in
mov
adc
xchg
addr16
xor
lcall
mov
or
xchg
cmpb
rorl
sub
fbstp
mov
dec
pushf
xchg
xchg
cmp
lret
popa
adc
sbb
into
rol
insl
inc
daa
mov
sub
in
cwtl
mov
mov
inc
aam
xchg
xchg
into
test
cmp
mov
ficomps
lock
or
dec
mov
jo
lea
adc
jp
add
add
add
rol
adc
enter
push
mov
add
sub
outsl
out
icebp
lods
push
sarl
and
fstpl
out
arpl
movsb
dec
jle
loopne
push
mov
sbb
das
adc
mov
fprem1
or
lcall
je
inc
dec
add
in
jl
xor
movsl
fwait
push
in
mov
and
std
ss
and
sti
mov
psrad
dec
sub
mov
sbb
cmpsb
fcmovne
aam
xor
mov
cli
in
ja
add
scas
jmp
sub
sbb
in
addr16
rcl
xor
loop
fdivrp
jbe
adc
and
jno
and
cld
cmp
fldenv
mov
adc
adc
out
add
mov
jbe
andl
lock
xor
fistpll
jae
pop
jge
iret
imul
scas
mov
inc
mov
roll
push
xchg
jg
pop
or
aam
out
in
test
sbb
add
xchg
outsb
push
mov
fcmovbe
lds
testb
cs
mov
xor
ficoml
jecxz
mov
push
push
jae
adc
add
lahf
shll
cwtl
sub
loopne
div
loope
push
jp
push
test
and
fldenv
and
add
rorb
test
mov
lea
pop
shlb
leave
jne
leave
pop
mov
add
mov
mov
cmp
jge
fsubl
mov
xor
dec
enter
loop
out
ret
jo
sti
xor
pop
popf
mov
clc
sbb
cmp
sbb
pop
mov
insb
mov
sbb
jl
aaa
or
adc
dec
cmp
dec
xchg
cld
rorl
ret
nop
je
aam
loope
push
pusha
adc
rcll
les
fildl
mov
stos
jg
gs
mov
testl
adc
or
dec
xor
pop
int
fstl
inc
dec
pusha
pop
arpl
insl
cwtl
nop
stos
or
mov
add
xchg
pop
shrb
cld
pop
jbe
int3
cmp
mov
inc
shll
rclb
jne
mov
mov
cmp
pop
test
sbb
shlb
inc
mov
addr16
mov
sbb
and
sti
push
jne
xchg
or
pop
sub
mov
imul
jp
xor
mov
lds
adc
rolb
in
adc
dec
mov
pop
xor
sub
ds
outsb
hlt
xchg
sbb
out
in
test
xor
push
mov
addl
mov
xlat
push
and
test
scas
jno
loopne
xchg
int3
push
sbb
sbb
les
fldt
mov
cli
imul
add
ret
and
dec
repz
fldt
in
iret
and
add
add
aad
jmp
leave
cmp
enter
xorb
add
jne
add
xor
sti
inc
adc
outsl
lods
ljmp
fwait
xor
in
cld
movsb
std
inc
dec
sbbl
mov
dec
jnp
cmpsl
xor
pop
dec
add
xchg
divb
push
fists
mov
sbb
sbb
iret
repnz
mov
leave
imul
test
or
xchg
jnp
mov
xlat
test
or
adc
dec
pop
cmpsl
in
inc
push
or
aad
in
orl
fnsave
dec
jge
insl
jl
and
cwtl
mov
sarb
mov
movsl
mov
imul
mov
into
xorb
add
dec
ss
shll
cmovl
pop
xlat
pop
jg
pop
jmp
cmpsb
ja
out
xor
es
mov
fsubr
mov
cmp
sti
mov
pop
jno
adc
into
repnz
or
xor
movsb
frstor
xor
pop
es
pop
adc
ret
sbb
fnstcw
js
mov
push
ljmp
adc
mov
rclb
push
lea
insb
dec
push
mov
ss
push
sti
xor
adc
cmp
push
add
clc
adc
push
sub
imul
mov
test
inc
rolb
mov
test
das
xorb
jb
jle
fimuls
jmp
into
in
or
or
setae
and
insl
pop
adc
sbb
clc
push
mov
or
dec
sub
cpuid
cli
cmp
movsl
push
test
xchg
inc
lahf
jns
pop
pop
push
lods
lcall
popf
adc
mov
pop
add
mov
jb
cmp
mov
pop
xor
or
push
popf
je
leave
test
outsb
int3
inc
xchg
data16
fwait
and
dec
push
push
cmc
push
and
add
lods
xchg
insl
aam
cmc
cmp
ret
sbb
xchg
cmpsl
cmp
xchg
fdivrl
out
andb
loop
sbb
cs
pop
xchg
inc
and
inc
in
jp
cs
inc
mov
pop
js
xchg
sti
cmpsb
fsubs
push
icebp
push
insl
data16
test
mov
lcall
mov
je
mov
sbb
roll
iret
mov
pop
imul
push
es
push
imul
sub
and
dec
mov
add
out
pop
sub
ret
xchg
xchg
inc
jns
mov
mov
mov
data16
or
xchg
fildll
cld
mov
pop
xchg
push
and
scas
add
and
addr16
mov
pop
cmpb
lcall
jnp
pop
pop
mov
and
leave
add
add
add
lret
sub
mov
rcrb
imul
sub
pop
mov
xor
and
xor
adc
scas
xchg
lea
add
jle
mov
xchg
xor
in
ljmp
frstor
aas
push
mov
out
push
push
sbbl
lea
inc
jae
mov
rorb
lret
addl
imul
lcall
xor
stos
stos
nop
ja
mov
loop
ja
dec
adc
cwtl
roll
mov
or
aam
loope
inc
lods
sahf
into
jb
and
loope
sbb
repz
ds
popf
sub
addr16
adc
out
packsswb
add
repz
dec
ffreep
cwtl
xchg
repz
dec
add
fucomi
pop
loope
xchg
mov
test
out
repnz
repnz
fistpll
push
stos
notl
jmp
adc
out
pop
aad
inc
pusha
mov
sub
push
mov
push
xchg
test
je
das
mov
and
dec
mulb
stos
or
les
or
in
add
jle
xor
ficomps
dec
xor
add
mov
loope
cs
mov
loop
xchg
out
cli
leave
sbb
mov
mov
popa
ret
mov
gs
mov
enter
sbb
inc
bound
ret
inc
loop
popa
dec
push
fnstenv
repnz
rol
cmpsb
mov
lods
jecxz
mov
pop
fdivs
bswap
inc
mov
push
inc
jno,pn
sub
jno
imul
adc
aad
fcomp
adc
sahf
and
adc
cmp
cmp
imull
in
int
lock
stos
sub
mov
add
mov
icebp
je
dec
cli
push
mov
xlat
shlb
lret
push
cltd
xchg
adc
pusha
daa
adc
or
out
mov
subl
mov
out
push
adc
mov
and
fstl
push
int
iret
int
push
testl
add
mov
push
jmp
dec
pop
fnsave
push
jnp
out
push
jecxz
cltd
shll
cltd
dec
cmc
or
out
mov
add
jo
push
enter
dec
ds
fdivr
push
fildll
jge
mov
gs
cmpl
pop
mov
inc
mov
jmp
fmuls
mov
outsl
les
mov
inc
pop
inc
loop
jg
in
cmp
rorl
sbb
dec
adc
pop
shrb
inc
fwait
pushf
lcall
xchg
icebp
pop
arpl
addl
jne
pop
add
in
ret
mov
es
cmp
xlat
xor
arpl
das
sarb
add
rolb
dec
idivl
ja
pop
in
int3
add
add
add
int3
inc
loopne
and
aaa
fistpl
xor
adc
out
mulb
jno
xchg
xor
aad
mov
cmp
mov
leave
mov
stos
sub
add
movsl
mov
xchg
inc
xchg
fidivs
mov
aam
cld
sub
jnp
mov
cmpsl
aad
test
in
lea
dec
jns
add
subl
imull
cmp
pusha
mov
fwait
mov
icebp
out
xchg
fs
pop
pop
repnz
sbb
sbb
sub
sub
sbb
fs
xchg
push
aas
testl
or
out
add
or
pop
fisttps
lahf
fimull
cwtl
inc
inc
rcrb
dec
pop
mov
adc
out
push
lock
pop
xor
ljmp
lret
xchg
lock
cmpsb
leave
popf
add
sbb
outsb
sub
or
cmp
cmp
nop
xlat
aas
mov
adc
mov
xchg
sahf
cmp
rcrb
fimull
xchg
sub
mov
or
rolb
mov
xor
addr16
dec
cmp
lahf
lcall
fiaddl
or
pop
fdivs
aaa
or
jbe
fwait
xchg
mov
xchg
adc
add
test
sbb
jne
decl
or
stos
mov
inc
rcr
jmp
add
push
pop
xor
outsl
roll
or
pop
inc
insl
in
inc
pop
jl
movsl
rcrl
das
mov
jge
cs
inc
outsb
pop
inc
fs
test
fmull
xor
mov
jae
push
mov
mov
je
lea
mov
lods
jno
pop
and
xchg
xchg
dec
cmp
jp
pop
add
xchg
jo
popa
outsl
xor
mov
cmc
testl
sub
sbb
subb
xchg
jl
nop
sub
test
lahf
adcl
dec
ss
jg
xor
mov
repnz
jnp
jb
cmc
and
xchg
adcl
cmpsl
lock
xor
jae
stos
add
shll
ljmp
stos
ja
ret
ja
mov
mov
mov
xlat
scas
mov
cli
imul
insb
stos
mov
push
jge
dec
or
or
dec
dec
jne
mov
xchg
cmp
sub
lahf
imul
jno
mov
dec
aam
xor
inc
enter
fadds
jge
sub
ljmp
nop
nop
sub
orl
imul
dec
sbb
sub
inc
dec
outsl
sbb
aaa
mov
fcompl
mov
jp
jg
sbb
mov
lods
dec
cmp
cwtl
ljmp
lret
pop
sbb
iret
xor
test
popa
add
mov
call
mov
iret
ljmp
add
add
aam
pop
dec
sub
loopne
pop
imul
jo
xchg
aam
repz
sti
or
inc
push
imulb
call
cld
jns
jle
stos
aam
and
xor
in
mov
in
ret
mov
push
arpl
lret
mov
ret
bound
xchg
stos
adc
or
outsl
fsubrl
std
shll
mov
imul
adc
std
aam
jp
mov
jb
imul
adc
leave
cmpsb
mov
xor
and
push
push
vpaddsw
dec
in
xchg
sarb
dec
dec
cmc
cltd
movsl
inc
test
jns
push
mov
mov
je
lahf
mov
cmpsl
jmp
jmp
mov
je
ret
jnp
xchg
jnp
repz
fidivrl
mov
xor
push
fisubrs
inc
fadds
shl
xchg
push
pop
and
push
ss
cltd
notl
xchg
push
add
notl
inc
nop
fwait
xchg
lret
mov
mov
lods
cs
pop
sbb
dec
or
cmp
push
inc
sbb
jp
fwait
mov
test
ljmp
ret
mov
jp
scas
mov
popa
rcr
xor
jmp
jl
test
leave
rcrl
dec
cmp
push
lcall
and
sub
mov
dec
stos
pop
and
mov
jae
fs
xor
adc
cmpsl
push
cli
div
mov
dec
sbb
push
sbb
push
sti
arpl
dec
add
pop
add
lcall
add
inc
sbb
jo
sub
mov
int3
cmp
jo
xor
push
lret
stos
insl
lods
pop
pop
sbb
mov
jle
dec
mov
std
jmp
cwtl
jp
lock
mov
and
cmpsb
xchg
jle,pt
mov
adc
cmpsl
push
and
outsl
test
cli
lcall
xor
out
outsl
inc
mov
insl
sti
fdivl
or
movb
sbb
jnp
pop
xchg
pop
lods
or
lea
sub
jb
jle
andl
vmwrite
nop
pop
pop
push
not
jne
loope
pusha
scas
dec
add
in
test
mov
ds
cs
call
add
fisubl
loopne
push
lahf
push
shlb
lcall
aam
outsl
or
cmp
push
mov
adc
xchg
not
mov
xchg
mov
int3
in
jle
or
sarb
inc
xchg
xchg
movsl
push
dec
mov
push
loope
mov
ss
xchg
loopne
pop
adc
negb
inc
pop
pop
bound
fmull
out
dec
nop
mov
and
sub
adc
repnz
sarl
mov
mov
mov
fcmovb
ficompl
mov
add
stos
cmp
add
add
add
mov
pushf
xchg
dec
andl
xlat
cwtl
inc
sar
dec
mov
mov
adc
insl
ret
fsub
fwait
rolb
ss
mov
fildl
cmpsl
rorl
dec
dec
fildl
and
pushf
addr16
cmp
sbb
and
dec
and
cmp
dec
or
ficoms
or
xchg
in
pop
mov
pop
sti
into
aas
pop
popa
fwait
outsl
out
mov
adc
pop
addr16
mov
xor
ss
imul
mov
mov
jo
pop
insl
jg
sbb
inc
adc
mov
imul
test
jae
int
mov
movsl
outsb
mov
jle
push
inc
mov
stc
add
jae
adc
lahf
rcrl
scas
and
das
pop
jne
rcrl
mov
rcrb
cli
push
add
mov
add
rcrl
mov
dec
xchg
adc
es
ljmp
fwait
mov
daa
dec
jmp
inc
jle
cmp
lcall
push
scas
sub
jae
std
mov
pop
idiv
dec
adc
jp
ret
xchg
xor
xchg
pop
push
cmpsb
dec
popf
adc
js
sub
insb
jle
adc
jb
fwait
xor
popf
insb
stos
sarl
pop
jl
xor
sahf
pop
xor
mov
xor
or
mov
outsb
or
icebp
mov
jl
add
xor
push
shl
sbb
out
jp
ret
imul
pop
stos
xlat
adc
cmp
inc
xor
xor
mov
push
push
fcomp
push
movsb
and
test
dec
test
xlat
push
xor
pop
fadd
out
jecxz
lret
ljmp
fistps
mov
jo
jmp
std
add
sub
repnz
push
xor
sti
inc
and
mov
jmp
pop
insb
mov
adc
push
enter
sarb
daa
aad
and
test
out
aam
test
inc
dec
add
jecxz
int
imul
push
movsl
dec
dec
iret
and
ja
stos
pop
mov
sbb
xchg
lahf
rcrl
mov
faddl
cmpsl
shl
xchg
dec
mov
addl
jo
xor
pop
aaa
idivb
push
ficomps
rcl
movntq
insl
push
and
push
pop
or
xchg
adc
sub
data16
sub
shlb
mov
inc
jnp
xchg
sbb
dec
xor
pop
ljmp
pusha
mov
in
mov
in
mov
add
sar
adc
out
add
stos
mov
in
add
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
pop
add
add
add
or
fldenv
dec
imul
xchg
in
xchg
fidivl
sbb
fildll
mov
es
aad
xchg
out
and
sbb
add
fs
xor
aas
imul
cmp
mov
lret
sub
mov
subb
insl
mov
shrl
in
andl
sub
cmpsl
pop
sub
fidivrs
add
push
loop
sbb
jp
leave
sti
insl
aam
fdivl
mov
or
mov
or
sub
or
nop
push
or
mov
sbbb
adc
or
inc
int
stos
iret
rorb
xor
addr16
mov
cs
imul
mov
dec
mov
jb
cwtl
xchg
xchg
jne
call
rcll
rcrb
fwait
mov
xor
mov
movsl
jno
inc
inc
cmc
or
out
cmpsl
adc
fnstenv
and
sbb
mov
gs
pop
pop
outsl
call
je
add
mov
sahf
cmpsl
insl
adc
sarb
imul
mov
mov
xchg
push
mov
pop
out
push
sbb
lds
and
inc
clc
lret
lret
xchg
lock
inc
out
or
mov
je
sarl
sti
xchg
xor
mov
pusha
cs
xchg
add
inc
lock
dec
fistpl
icebp
jne
cli
dec
pop
push
and
insb
xchg
loope
adc
inc
add
xor
div
imul
push
push
xor
ja
adc
and
dec
xchg
sarl
add
and
outsb
lods
sbb
adc
inc
ljmp
cmc
repnz
cmp
dec
xchg
gs
out
push
xor
outsb
jo
xor
jg
test
or
mov
sub
mov
nop
add
dec
pop
ffree
jmp
insl
call
sub
pop
pop
fidivs
jecxz
repz
ds
xchg
push
test
pusha
jp
mov
mov
aaa
inc
in
jl
xor
add
push
cmp
xchg
testl
sbb
test
jae
in
out
mov
inc
adc
rorb
inc
dec
stc
rolb
sbb
subl
fwait
xchg
add
fstl
fimull
push
jle
cmp
push
insb
shll
sub
pop
mov
and
or
movsb
shl
lret
test
mov
pop
mov
shlb
in
mov
push
inc
lret
jg
scas
sub
jge
dec
pop
adcb
and
dec
fcom
cmp
sub
mov
leave
lcall
shlb
sbb
inc
aas
ret
pop
push
adc
xor
stos
hlt
mov
arpl
in
mov
loopne
jg
and
lock
mov
xlat
push
xlat
ja
out
ss
mov
test
add
add
add
into
std
adc
and
xor
dec
mov
pop
pop
mov
shll
in
arpl
cmp
lds
fsubl
mov
les
aam
ret
or
fs
outsl
insb
mov
enter
movsl
add
lods
or
subl
jb
sbb
pop
cld
push
inc
jge
jo
mov
mov
xorl
lahf
icebp
pop
aaa
adc
addr16
pop
mov
push
lods
fucomip
pop
cmp
inc
into
push
ss
aas
dec
adcw
cmpsb
hlt
adc
jecxz
pop
out
jge
adc
cmp
imul
xlat
push
enter
and
imul
sub
cmp
adc
scas
mov
ljmp
and
hlt
mov
nop
mov
aaa
xlat
mov
mov
cmp
push
push
inc
lahf
les
sbb
cld
repz
inc
push
insb
scas
mov
popa
popf
cli
dec
loop
cmp
xchg
jg
mov
jns
inc
cs
lock
jmp
adc
cmpb
aaa
mov
jbe
cmp
sub
adc
push
pop
inc
orb
pop
xchg
push
fnsave
call
mov
jns
xchg
push
push
es
push
cmpsl
mov
sti
pop
cli
adc
push
movsb
roll
inc
xor
aas
dec
sub
mov
inc
shrl
mov
cmc
pop
or
das
jae
cltd
adc
or
mov
push
pop
mov
sub
jge
clc
pop
sub
jnp
popf
or
fcmovu
movsb
xchg
adc
pop
dec
aaa
sbb
ljmp
lods
lea
jbe
adc
fildll
shll
and
les
sti
inc
jmp
pop
push
and
mov
inc
outsl
dec
pop
addr16
add
pop
add
pop
repnz
pop
lock
jne
orl
idivb
cmp
jns
push
mov
sub
jge
push
loop
adc
ret
aam
fstl
into
ret
cmp
push
add
sbb
mov
mov
out
mov
or
or
clc
sub
cmp
movsb
jp
and
inc
jp
test
out
xor
mov
scas
fs
inc
push
inc
add
xchg
shrb
mov
adcl
cld
ficoms
scas
add
lock
sti
mov
add
sbb
cltd
push
pop
addr16
pop
repnz
in
int3
es
cmp
push
cmp
mov
adc
les
dec
add
sbb
adc
daa
das
jg
lret
sub
ja
aaa
mov
mov
push
fwait
cmp
mov
notl
paddd
hlt
add
mov
movsb
dec
imul
in
add
rcll
pushl
xchg
sub
add
add
and
mov
xor
add
cmp
push
mov
adc
aad
and
add
cld
and
cmc
and
mov
repz
fistl
ret
cmpsl
out
mov
cmp
stos
xchg
aad
mov
xor
xchg
adc
sti
sub
stc
in
aas
arpl
or
jae
out
fxtract
inc
push
adc
lods
mov
or
mov
or
or
fscale
fdivp
push
xor
sbb
cmp
rcrb
divb
mov
lcall
mull
je
jg
cmp
mov
rep
pop
mov
cld
aas
out
jecxz
cwtl
test
das
stc
mov
xchg
ret
xchg
xor
iret
adc
daa
push
sub
pop
hlt
cmp
rclb
stos
dec
rolb
jle
roll
push
lret
gs
or
sahf
mov
ljmp
push
add
subl
pop
push
imul
or
inc
add
sbb
pop
inc
push
sbb
and
cmpsl
testl
jle
test
data16
inc
and
add
cmp
fsubrs
cmp
insb
in
int3
xor
cwtl
push
xchg
or
inc
push
test
mov
ds
adc
mov
inc
mov
xorl
out
test
push
xor
cmpsb
mov
lahf
ret
enter
inc
test
pop
and
or
dec
loopne
push
pop
push
pusha
sub
or
mov
pop
dec
pop
jns
fcomps
pop
xor
fwait
sbb
dec
and
fadds
je
mov
mov
mov
jo
dec
cmpsb
jmp
and
call
pop
inc
xor
jb
inc
js
jae
inc
sbb
subl
adc
mov
cmp
andb
cltd
mov
test
fwait
je
inc
jl
jns
xchg
dec
cli
pop
xlat
insl
pop
repz
dec
ds
into
mov
sbb
aas
sub
sub
jmp
jbe
movsb
and
call
mov
mov
push
xchg
jae
inc
mov
jns
pop
cmp
enter
cmp
int3
xchg
mov
es
das
mov
push
loop
sbb
clc
stos
mov
les
loopne
dec
sbb
push
ficompl
cmp
mov
sub
cmpl
jg
cltd
scas
and
mov
daa
cs
push
push
pushf
imull
mov
addr16
repz
cmp
aam
lcall
sahf
cs
adc
test
rolb
sub
cmpsb
ss
sti
sub
push
in
aad
cli
jle
leave
adc
add
negb
out
lods
push
dec
std
sbb
filds
add
add
add
push
push
lods
add
or
loope
pop
push
sub
mov
jl
xchg
dec
push
les
or
stos
push
movsl
xchg
mov
xchg
data16
or
cmp
jmp
jb
pop
or
pop
xchg
leave
aaa
call
jnp
dec
aad
sti
sbb
cmp
mov
mov
movb
fnstenv
mov
add
add
out
out
dec
inc
dec
jge
cld
aaa
push
xor
adc
popa
nop
mov
repnz
inc
insl
mov
fidivs
subl
dec
push
pop
addr16
dec
fs
xchg
ljmp
adc
ss
ja
pop
repnz
mov
dec
das
into
out
mov
aaa
jecxz
push
inc
arpl
rorl
stos
mov
push
call
subb
xor
or
cltd
pop
xchg
push
mov
inc
push
es
xorb
mov
pop
sub
or
fldt
dec
sbb
mov
or
clc
dec
int
testl
cmp
ror
ljmp
push
dec
add
call
mov
shlb
fsubr
loope
dec
cmp
and
dec
mov
jge
inc
sti
roll
insb
lods
push
ja
mov
mov
in
icebp
je
out
mov
mov
movl
cwtl
sti
dec
cmpsl
faddp
je
pop
dec
adc
or
shrb
icebp
sbb
xor
test
std
in
xchg
jb
orl
push
pusha
into
lcall
xchg
cmc
shll
xchg
ret
mov
ljmp
add
pop
adc
sbb
mov
das
mov
loop
std
inc
stos
inc
xchg
push
sub
dec
imulb
js
cs
movsb
sub
cwtl
imul
fsubrp
xchg
ret
movsb
dec
test
ljmp
es
xchg
adc
iret
mov
insb
test
imul
mov
dec
jne
cwtl
jno
icebp
sub
test
movsb
loope
stc
lock
push
mov
mov
xchg
mov
xchg
xor
leave
outsl
out
pop
push
inc
leave
lock
cmp
rcl
outsb
aas
inc
add
incb
and
cmp
add
mov
cli
or
mov
mov
mov
pusha
mov
sbb
push
mov
pop
aam
loopne
jns
outsl
mov
pop
pop
sub
into
insl
test
test
sub
lods
addr16
je
nop
pop
mov
cli
xchg
push
and
arpl
inc
add
addl
int
xor
cmp
cmp
jo
lret
andl
xor
cmpl
clc
addl
and
outsl
into
movsl
push
iret
and
add
push
push
jnp
fisubs
inc
cmp
loop
add
add
add
adc
pusha
shl
and
ds
fs
jle
les
jne
mov
shl
outsb
mov
push
mov
adc
pop
adc
sub
ljmp
std
xchg
cmp
enter
xchg
dec
pop
mov
pop
test
movsl
mov
cmc
dec
imul
ret
das
fildl
mov
pusha
fimuls
pop
xor
sbb
ljmp
mov
inc
mov
imul
nop
lods
xchg
or
adc
mov
sarb
add
add
icebp
sub
lret
pop
scas
out
xchg
push
and
dec
jnp
pop
fs
adcb
mov
push
push
jecxz
jecxz
rolb
shr
arpl
js
cmp
out
dec
jb
xchg
xchg
push
scas
push
outsl
loope
pop
xor
jns
lret
pop
std
ljmp
std
test
dec
and
sub
xor
dec
hlt
jecxz
adc
fistpll
test
adc
imul
add
and
push
in
rcll
xchg
or
bnd
push
ss
push
mov
fwait
rcl
imul
xor
cli
rol
cmp
lret
push
in
filds
int3
mov
cmpl
jno
mov
and
mov
dec
ljmp
xchg
cltd
jae
xchg
sti
add
xlat
cmp
push
or
addr16
js
mov
pop
push
shrl
sbb
mov
add
aas
mov
cli
mov
cltd
imul
shll
pop
rcl
ret
adc
pop
sub
inc
loop
jecxz
pop
pop
iret
mov
ds
mov
daa
sub
cmpsl
push
outsl
mov
mov
xor
aam
roll
xchg
push
mov
jl
cmp
ja
mov
xchg
and
aas
imul
mov
xor
iret
mov
mov
es
lea
jl
in
cmc
aas
push
adc
mov
repnz
cs
sar
cmp
push
pushf
mov
lret
xor
adc
xor
in
sbb
adc
shrb
xchg
pop
shll
in
test
shl
scas
push
stos
fldcw
mov
leave
cmp
mov
arpl
sub
mov
push
jge
pop
cli
mov
lds
mov
adc
inc
in
jne
jne
push
push
mov
sbb
mov
insl
test
out
ljmp
inc
aas
icebp
cmp
ficoms
or
inc
push
pop
sbb
lret
cli
push
xor
jmp
cltd
xor
inc
push
sbb
lahf
mov
pop
sbb
mov
xlat
iret
sti
cmpsl
xor
pop
xchg
popa
scas
mov
imul
adc
mov
add
dec
jmp
jbe
pop
lret
xchg
dec
mov
pop
adc
clc
lahf
stc
mov
push
outsb
je
or
add
add
add
leave
push
lea
pop
inc
push
inc
sbb
xchg
cmp
call
mov
mov
in
jns
lds
xchg
mov
stc
stos
cmp
adcl
lret
sahf
je
mov
add
lods
add
jno
pop
pop
pusha
push
cmp
cs
and
movsb
add
and
ja
jecxz
stos
ficomps
mov
mov
cmp
mov
pop
cwtl
jae
mov
mov
mov
loope
ds
lret
sub
cs
dec
test
insl
cmpsb
js
sbb
xor
mov
jo,pn
sub
push
test
fcomps
jo
hlt
jno
cli
and
inc
out
pop
push
and
dec
dec
mov
jbe
shll
inc
or
push
add
ds
hlt
iret
pusha
roll
mov
out
dec
jbe
aad
cmp
test
mov
cwtl
mov
out
mov
insb
aam
xchg
or
jp
lods
sub
loope
fwait
mov
mov
lds
jae
xchg
xlat
arpl
lock
adc
jmp
filds
aas
adc
jle
mov
add
mov
adc
cwtl
lea
fidivrl
ja
lock
pop
pop
cld
push
cmpsb
std
jmp
push
cmp
add
jp
and
es
fldenv
xchg
int
lock
es
aam
mov
adcl
mov
pop
mov
cltd
or
in
xchg
fwait
sub
cmp
test
push
dec
into
cmp
mov
xor
adc
stos
add
xchg
xchg
test
aas
iret
push
adc
dec
loope
fstps
scas
stos
mov
aad
ss
aam
sub
icebp
pusha
mov
and
cmpsb
adc
jl
adc
and
xchg
in
xchg
xchg
dec
fwait
or
stc
ss
or
xor
sub
test
popa
std
xchg
sbb
lea
dec
push
notb
mov
adc
mov
push
mov
jnp
pop
enter
popa
dec
ljmp
xor
and
xchg
sub
dec
and
xchg
ficomps
mov
adc
lahf
rorl
cmp
int
ds
bound
xchg
jl
scas
push
mov
push
inc
inc
or
pushf
repnz
ds
and
js
cli
sbb
lea
cs
ja
addl
gs
mov
fstpt
pop
inc
adc
push
mov
jge
inc
jb
out
inc
loopne
icebp
rcrb
fwait
mov
imul
xlat
inc
repz
enter
mov
es
pop
loop
rcl
outsl
adc
sbb
dec
loopne,pt
mov
test
push
test
das
fs
sbb
int
xchg
add
jns
sbb
jge
int3
outsb
xchg
test
jmp
add
leave
mov
fildll
scas
into
adc
popf
outsl
pop
adc
shrb
mov
lcall
mov
cmp
pop
data16
push
push
clc
jecxz
cmp
nop
fmuls
sub
inc
inc
mov
scas
insb
loopne
nop
push
pop
mov
cmp
jmp
ljmp
xchg
mov
jl
int3
dec
xchg
jns
sub
outsl
out
ja
mov
push
imul
adc
add
push
and
test
lods
loope
inc
cmc
cmpsl
iret
inc
inc
jecxz
push
push
loope
sahf
stos
in
sbb
cltd
into
cmp
imul
in
add
pop
imul
and
enter
call
ror
add
mov
adc
repz
adc
repz
sti
cmp
dec
popf
pop
imul
xor
fdivr
fwait
enter
sub
sub
lret
mov
inc
sbb
sub
out
or
add
xchg
fadd
movd
aad
rcr
jne
jne
jmp
pop
push
test
into
sub
ja
or
mov
in
pop
xchg
jae
xor
dec
add
ss
cmp
std
mov
mov
into
fs
pop
out
add
push
movsb
adc
ja
dec
xor
sub
sub
jl
xor
fidivrl
xchg
sti
imul
loope
sahf
je
das
jae
inc
inc
pop
xchg
pop
pop
xor
cmp
xchg
mov
jbe
mov
dec
or
add
bound
shll
cmpsl
popa
xor
cmp
cmp
or
mov
in
jns
dec
dec
sbb
xor
push
or
jp
dec
jbe
lea
jbe
inc
push
push
or
or
push
sbb
aaa
cmp
imul
lods
aam
popa
ds
mov
fbstp
inc
out
push
jp
inc
imul
mov
cmc
xchg
adc
out
icebp
jecxz
lods
and
inc
mov
icebp
jne
arpl
pop
lods
mov
xor
mov
mov
jecxz
cmp
ss
pushf
lock
mov
jno
stc
lods
imul
icebp
xor
aad
push
adc
scas
loopne
jmp
int3
loop
jo
test
sub
push
int
enter
jmp
mov
cltd
nop
cmpsl
test
jnp
in
repnz
xchg
movsl
daa
ja
sarl
sbb
and
mov
daa
iret
mov
stos
mov
clc
sub
dec
cwtl
jo
inc
add
clc
repnz
cmp
stos
rcrl
fisubs
mov
shlb
cwtl
lret
cmp
jl
in
in
ret
inc
cs
in
xor
sbb
subb
sahf
mov
xchg
cmp
jmp
pop
lea
add
roll
pop
sub
rcrl
add
add
add
lds
xchg
rorl
or
mov
jg
bound
dec
ja
rcl
addr16
inc
sub
mov
xacquire
and
icebp
dec
cltd
imul
fadds
jne
sbb
aas
cs
xor
sahf
dec
xchg
nop
inc
pop
mov
dec
aad
mov
pop
xor
or
or
test
jae
stc
dec
iret
out
test
mov
sub
mov
adc
leave
out
notb
fstl
cmp
bound
sbb
inc
inc
cmpsb
pop
push
add
mov
mov
mull
xor
negb
hlt
pop
pop
fdivl
fsubrs
sti
and
pop
fnstenv
push
sub
test
cmp
xor
xchg
into
jno
inc
loope
je
test
jnp
push
inc
mov
clc
pop
mov
jo
mov
je
orb
pop
imul
mov
push
mov
std
xchg
mov
cli
popf
mov
or
push
iret
mov
mov
out
inc
je
mov
nop
dec
iret
push
sbb
cmp
mov
cmp
mov
sbb
dec
gs
test
mov
outsb
adc
dec
cmp
xchg
int3
mov
fldenv
and
lahf
xor
fdivl
cmp
js
mov
add
push
repz
test
sub
inc
xchg
adc
pop
dec
dec
mov
test
ffree
fcmovnbe
pop
mov
ret
aas
in
adc
repz
in
inc
mov
dec
push
mov
push
or
mov
in
lret
sbb
icebp
or
sbb
rcr
addl
insl
cmp
mov
mov
rorl
insb
mov
cmpsl
add
outsl
stos
ret
loope
mov
pop
dec
dec
pop
xchg
inc
in
into
repz
rorb
ja
add
and
pop
test
push
stos
rcrb
adc
jecxz
in
and
idivb
fsub
mov
xor
aaa
mov
sub
movsb
xor
int
fs
sahf
inc
enter
jle
dec
das
and
jle
inc
call
pop
idivl
jl
or
sub
mov
dec
and
pop
out
fnsave
mov
notb
jp
scas
pushf
or
fwait
mov
or
cli
and
mov
pop
je
xor
call
int
jne
jns
cs
mov
adc
aam
push
pop
add
clc
lcall
dec
sbb
enter
or
call
sbb
add
loopne
call
dec
imul
xchg
lds
into
lret
repz
ret
inc
repz
mov
inc
adc
jmp
je
test
sub
repnz
rorl
pop
leave
popa
jne
popf
add
mov
gs
mov
arpl
sbb
sbb
sbb
pushf
cli
mov
scas
aad
shlb
add
add
add
mov
ds
decb
fidivl
in
scas
inc
pop
jbe
jecxz
cmp
dec
jne
lcall
adc
sbb
call
addr16
aad
hlt
jo
cwtl
or
sbb
ret
into
mov
testl
add
hlt
aad
or
xchg
add
imul
aam
inc
xlat
aam
cmp
hlt
movsb
and
test
jb
add
adc
xchg
repz
jg
mov
push
push
cmp
xor
xchg
jg
inc
loop
arpl
int
pop
jg
fcomip
add
push
inc
pop
cmp
nop
xchg
inc
mov
sti
ljmp
je
shrb
lods
mov
mov
jb
divl
jecxz
insl
popa
dec
jle
cmp
mov
shll
imul
cmc
fcom
xor
scas
ss
clc
fstp
cmp
in
jl
dec
pop
adcl
fstpl
sbb
mov
jne
adc
and
xchg
or
adc
adc
mov
adc
stos
andps
inc
adc
stc
les
mov
mov
test
xor
lds
jno
jbe
dec
andb
dec
sub
push
or
out
rcrl
ja
inc
pop
xchg
lret
sub
or
dec
int
pop
lea
jbe
stos
cmc
movsb
cmpb
divb
mov
lock
adc
adc
mov
test
push
xor
ret
dec
adc
fs
mov
cltd
cmpsb
cmpb
inc
stos
sub
pop
ljmp
in
sub
add
out
iret
fcmovnbe
or
ffreep
xor
add
sbb
sub
lcall
subl
jns
mov
nop
cmp
sbb
ja
or
loop
adc
enter
mov
xchg
xor
into
sbb
inc
inc
test
ficomps
roll
call
aam
mov
into
or
cld
cmpsl
sub
ret
scas
in
lret
xor
jb
sbb
and
sub
js
dec
ret
shl
mov
add
add
push
in
xchg
push
mov
xor
push
clc
clc
fwait
xor
repnz
js
lods
lods
shrb
ja
fistpl
mov
and
push
bound
adc
imull
or
pusha
out
addr16
arpl
xchg
stos
pop
cmp
jne
cmpsl
mov
divl
xlat
gs
mov
cs
push
mov
pop
mov
sbb
out
mov
ja
xor
jmp
xor
leave
sub
xchg
fisttpll
outsb
mov
mov
inc
mov
mov
add
in
in
sub
je
jb
ljmp
mov
inc
add
lcall
bound
and
mov
add
add
add
fwait
mov
andl
es
mov
sub
mov
les
sbb
mov
and
cltd
jb
add
flds
lcall
shl
push
sbb
mov
xor
xor
rcrb
push
adc
inc
lret
pushf
push
imul
mov
pop
aas
sub
mov
cmpsb
push
and
pop
push
fdivrl
cli
idivb
and
bound
adc
in
push
addr16
in
clc
je
add
out
shl
xchg
xor
add
inc
fcmovb
call
es
insl
inc
jl
lds
das
mov
cwtl
and
rorb
rcrl
shlb
scas
mov
int3
inc
mov
mov
mov
push
cmp
dec
loop
test
mov
mov
jp
sbb
mov
mov
dec
jecxz
mov
jmp
xchg
mul
mov
mov
dec
mov
or
test
xor
jmp
outsl
inc
das
jl
mov
shrl
push
into
xchg
ss
dec
out
iret
inc
adc
push
and
xchg
sti
daa
sarl
enter
cld
jo
jb
into
frstor
leave
sbb
cmp
push
fcmovnbe
insb
movsl
ljmp
push
sub
mov
jno
cli
mov
mov
daa
sub
mov
push
pop
jo
repnz
ljmp
mov
mov
data16
fdivp
cmpsb
mov
shlb
gs
push
shrl
cmp
std
mov
xor
sbb
add
dec
mov
dec
leave
dec
xchg
rolb
pop
in
test
cmpl
fiadds
mov
adc
popf
scas
mov
cmp
push
xor
dec
jbe
push
hlt
mov
xor
mov
dec
or
cmp
xor
push
push
mov
mov
cli
mov
mov
test
imul
push
push
jbe
xchg
iret
cs
das
dec
pop
mov
inc
jne
mov
jecxz
sbb
lods
iret
cmp
adcl
jmp
inc
xchg
xchg
cs
mov
mov
xchg
cmp
cs
ss
orl
pop
dec
test
dec
loop
stos
jno
pop
stos
xchg
lcall
sbb
xor
int3
out
dec
jmp
or
imul
fsts
pop
adc
ret
jno
push
into
mov
sub
mov
enter
icebp
xchg
subl
sti
sub
aad
in
mov
arpl
sbb
repnz
pop
out
out
xchg
lret
pop
add
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
mov
add
add
add
sahf
das
xor
inc
or
sub
mov
adc
mov
and
clc
jno
mov
insl
pushf
int
frstor
sbb
mov
loopne
push
pop
test
lods
mov
push
dec
jecxz
mov
mov
and
sahf
andb
lods
sub
or
fisubrs
rorb
push
test
pop
xor
pushf
dec
mov
mov
xchg
pop
sub
fdivrl
scas
ffreep
cmp
mov
jbe
out
cmp
mov
aam
adc
pop
add
in
pop
lods
and
push
lock
cmpsl
and
lret
test
lods
test
inc
arpl
je
pop
sub
xchg
dec
inc
mov
pop
loope
leave
lock
js
idivb
cmc
call
pop
mov
cmp
cli
jge
fstpt
cmp
cmp
xor
mov
mov
sbb
hlt
test
testb
insl
push
or
lods
cmp
mov
inc
jb
mov
pop
xor
mov
xchg
push
test
rcrl
popf
sbb
aas
mov
mov
sub
clc
aad
push
cli
loop
jns
cmp
popa
movsb
mov
jno
lahf
icebp
cmpl
jecxz
adc
int
test
push
push
scas
clc
sub
int3
cmpsb
pushf
fisttpl
adc
lret
jne
fs
push
mov
lods
xchg
jno
xchg
icebp
mov
lahf
or
aam
in
add
dec
cld
jae
dec
sbb
bound
xchg
lcall
mov
and
out
add
dec
loopne
fiadds
cli
and
sub
pop
jge
aad
dec
sbb
jbe
stos
jmp
and
shrl
addr16
adc
andl
sarl
sub
sti
mov
pop
pusha
jo
sub
sbb
jns
jae
cs
sbb
pop
pop
jg
test
loop
iret
cld
test
lret
arpl
push
xchg
out
mov
aam
lret
loop
sbb
add
cmp
mov
pop
imul
mov
ret
jl
daa
xchg
add
aas
hlt
adc
ficoms
push
sub
jo
cwtl
or
push
jae
mov
mov
sub
sub
ret
shlb
std
scas
push
xchg
sti
inc
aas
push
in
gs
add
js
sub
insl
addr16
xchg
dec
pop
imul
fnstenv
aaa
sub
outsl
mov
xor
inc
scas
xchg
daa
mov
mov
mov
cs
cli
lods
sbb
mov
cwtl
mov
out
lret
scas
push
dec
pop
sbb
setae
mov
inc
cld
lods
mov
test
int
mov
push
push
dec
lock
or
push
cli
pop
mov
std
cmp
stc
int
xor
lret
jno
xor
stc
add
add
add
test
jae
scas
gs
sub
pop
fwait
test
fwait
loope
lds
outsb
out
jno
jbe
es
jp
inc
cmp
lcall
ds
sbb
or
inc
add
xor
mov
out
cli
lret
adc
or
xchg
movsl
leave
fisubs
and
sbb
mov
lahf
les
dec
cmp
dec
or
cltd
fstpt
cmpb
sbb
mov
lret
or
int3
dec
cwtl
mov
aaa
xchg
int3
stc
les
cld
sahf
nop
imul
orl
inc
xor
cmp
sub
jae
call
out
popa
xchg
aaa
stos
mov
pop
test
into
push
push
dec
pop
aam
mov
sahf
dec
add
add
daa
aad
xrelease
into
sahf
pop
test
fildll
js
ds
sarb
lods
stc
jno
jo
ret
dec
sbb
andl
fmull
xchg
or
inc
dec
jbe
pop
mov
fists
mov
out
loopne
lea
jae
mov
shrl
sub
divb
faddp
jbe
xchg
mov
adc
jle
adc
jnp
mov
jl
and
rcrb
out
pop
mov
inc
jmp
adc
mov
pop
pop
js
mov
lods
xchg
aam
and
sub
or
xchg
scas
lret
lcall
mov
jb
fiaddl
add
fwait
nop
scas
lods
pusha
xor
mov
push
cmp
inc
sbb
pusha
pop
and
cmpl
into
call
andl
repnz
and
packsswb
in
jbe
adcl
repnz
mov
xchg
fisubrs
dec
sahf
cmp
arpl
xor
push
and
hlt
sarb
rcrl
sub
pushf
cmpsl
xchg
pop
pop
pop
out
xchg
inc
cmp
movsl
scas
xchg
and
cltd
pusha
inc
test
pop
daa
xor
inc
lret
sbb
mov
test
adc
in
adc
and
adc
mov
subl
pop
aad
mov
cs
outsl
push
cmp
xor
rol
lcall
lahf
mov
hlt
pop
cs
mov
fildll
dec
jnp
sti
pop
push
xchg
mov
jge
push
aaa
or
test
or
mov
outsb
loope
sbb
ja
sahf
movsb
das
aad
stos
mov
adc
mov
adc
jmp
lods
int
test
inc
fbstp
push
loopne
mov
es
pop
js
cmpsl
sbb
inc
adc
out
fidivl
cmpsb
xchg
fcmovbe
addr16
test
inc
leave
arpl
pop
add
test
cmp
mov
mov
cld
add
adc
and
push
shlb
notb
jg
mov
fistpl
add
