push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
int3
pop
sub
bound
pop
bound
xor
cmp
jns
jbe
xor
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
int3
shl
or
mov
xchg
adc
mov
dec
push
clc
scas
jge
dec
lahf
lretw
enter
js
stos
mov
cli
sbb
ds
add
std
mov
mov
test
outsl
scas
adc
loopne
cmpsb
loopne
mov
fwait
shll
sub
outsb
xor
cld
ja
mov
jo
hlt
jp
mov
mov
or
or
pop
loope
scas
nop
fwait
sub
or
out
les
mov
sbb
pop
dec
sbb
fistps
xor
stc
inc
or
add
jb
push
add
out
mov
or
or
ja
aam
inc
sub
push
inc
xor
cmp
out
cmp
mov
mov
clc
xor
jl
pushl
jne
in
rorb
cmp
and
inc
xchg
xchg
add
mov
jbe
pop
push
clc
sub
jns
mov
dec
xchg
jl
insb
vcvttpd2dqx
fildll
mov
cmp
cwtl
mov
inc
cmp
push
pop
cmpb
pop
xor
lds
daa
cwtl
aad
fnstcw
or
jmp
cli
lret
js
xor
add
push
decl
cli
dec
and
or
lahf
xchg
adc
jle
mov
clc
loope
add
add
popa
scas
sbbl
mov
cmpsb
scas
inc
fcomip
data16
inc
cmp
jnp
jl
or
popa
fstl
xchg
addr16
ret
repz
xor
adc
or
xor
xchg
rep
lds
mov
mov
shrb
sub
loope
push
das
ljmp
mov
in
pushf
les
mov
xor
sub
out
dec
push
pop
inc
xchg
sti
outsl
jo
dec
push
stos
push
fstl
add
xor
sbb
sub
addr16
jg
xchg
pop
fs
sbb
lret
sbb
test
ja
aad
cmpsb
pop
xor
data16
stc
test
repz
push
out
inc
cmp
movsl
mov
lods
xchg
mov
jb
aas
or
pop
mov
push
pop
lods
sub
and
ja
sub
pop
xchg
or
ds
fnstsw
mov
scas
lods
mov
stos
xchg
jp
jmp
cs
ret
fstps
cmp
jo
ret
into
inc
push
lock
repz
sub
cmpsb
jmp
cmp
cmp
inc
mov
dec
jno
imulb
enter
or
test
sub
or
mov
mov
jge
inc
das
mov
push
jno
xor
jo
dec
aad
push
xchg
cmc
cmp
std
push
gs
pop
orb
fldl
int
std
mov
ss
jo
lret
outsl
incl
xchg
jecxz
pop
test
imul
fstps
ja
inc
aaa
testb
or
mulb
pushf
cmpsl
ljmp
pop
pop
pop
lds
es
scas
inc
inc
push
adc
jmp
ljmp
mov
mov
jns
addl
dec
cmp
jmp
mov
jp
and
aas
add
pop
iret
pushf
inc
cmc
pushf
cld
pop
out
enter
pop
test
cmp
aam
les
icebp
arpl
cmp
inc
inc
lock
add
out
sbb
jo
push
in
xor
jge
push
cmp
lods
test
rolb
adcw
add
loop,pn
add
ret
dec
sub
shlb
fidivl
add
add
orl
xchg
jnp
or
pop
sahf
aaa
movsb
test
push
jo
ret
sar
sbb
sub
lahf
outsb
aaa
sti
cwtl
and
imul
out
cld
adc
outsb
js
adc
ss
jecxz
hlt
xchg
cltd
sub
lods
loopne
lahf
out
nop
jne
add
mov
nop
repz
sub
lret
jb
ud1
rclb
mov
and
sahf
sbb
cli
pop
pop
or
std
jns
or
mov
mov
pop
in
inc
pop
add
xchg
je
imul
mov
xor
mov
push
pusha
push
out
popf
ljmp
or
or
aas
or
cmp
adc
bts
popa
xchg
fwait
dec
and
jg
dec
pop
rol
test
mov
pop
fcmovbe
sub
and
loopne
sub
mov
es
add
push
xor
sub
lea
test
push
pop
js
mov
inc
pop
ss
movsl
xor
jmp
inc
mov
imul
dec
adc
jge
push
cmp
lods
movsl
inc
inc
or
xor
divb
popf
mov
jo
icebp
mov
loop
sbb
mov
jbe
add
add
pop
xchg
push
repnz
pop
cli
aam
rolb
mov
test
mov
xchg
fsubl
dec
jbe
or
or
lcall
mov
ljmp
mov
push
mov
subl
jb
or
sbb
cmpsb
push
arpl
pop
mov
stc
sub
mov
xchg
xor
push
fnstcw
clc
push
js
insb
push
lods
push
lahf
xchg
xchg
fcmovnb
jae
mov
jmp
lods
cmpsl
lds
js
loope
xor
inc
push
xchg
cld
adc
mov
xor
pop
jp
pop
jecxz
not
out
fdivr
sbb
inc
js
xor
test
cmp
mov
mov
imul
and
pop
fidivrs
lcall
ja
movsl
pop
lret
out
fsubs
in
shl
aad
dec
push
and
adc
bound
xor
sbb
aas
mov
xor
lods
lahf
dec
les
jb
dec
mov
pop
bound
adc
inc
mov
jg
lret
std
outsl
push
add
int
into
and
add
jg
mov
pop
fsubrs
arpl
add
mov
xchg
inc
insb
sarb
outsb
lods
out
mov
mov
sahf
sbb
sub
jae
sbb
iret
pop
jmp
imul
adc
push
add
scas
pop
push
pop
pop
fbstp
xor
inc
cmp
rcll
lret
cmp
arpl
sbb
pop
stc
push
mov
scas
adc
outsb
clc
popa
sarl
aaa
pop
das
in
hlt
jno
cmpsl
sahf
loop
sbb
xor
test
daa
aas
jae
jnp
aam
mov
stc
or
stos
pop
popa
push
mov
stos
jo
loop
ds
in
das
add
mov
lret
push
push
popf
scas
or
inc
enter
jb
es
inc
cmpsb
icebp
push
mov
dec
icebp
stc
aam
nop
pop
shl
aam
cmp
ret
push
repz
xlat
imul
cmp
je
push
jle
idiv
scas
mov
ljmp
fxch
pop
lahf
fildl
push
repz
enter
je
pop
dec
adc
shll
nop
cmp
xchg
cmp
jp
jmp
fs
xchg
adc
jge
or
jb
and
leave
out
push
mov
pusha
test
sub
lahf
or
hlt
data16
jae
adc
cmpsb
aam
sub
fwait
mov
adc
xchg
pop
sbb
cmpsl
dec
mov
bound
mov
mov
into
lock
xor
pop
push
movsl
mov
or
mov
lds
imul
je
mov
ret
or
out
stos
mov
movsl
cmp
sub
scas
ss
cmp
scas
imul
aas
xor
sbb
out
repnz
mov
push
gs
push
pop
adc
pop
ret
pop
mov
dec
inc
push
jp
das
or
sub
sti
push
add
fisubrl
aaa
mov
notb
shll
jecxz
subl
sbb
or
xor
hlt
push
repz
xchg
outsl
mov
adc
mov
xor
adc
pop
fs
lahf
jmp
add
xor
push
jecxz
xchg
int3
cmp
mov
push
arpl
or
leave
xchg
lret
cli
add
inc
idivb
xchg
fdivl
bound
push
mov
xor
neg
push
movsl
mov
inc
jmp
fwait
dec
fwait
out
mov
das
and
std
add
mov
xor
inc
cmp
push
mov
pusha
xchg
inc
mov
add
mov
or
sbb
orb
xchg
push
xchg
jno
mov
and
popa
mov
fisttpll
cltd
sub
popa
popa
mov
in
and
outsl
jb
sbbb
jb
imull
mov
stc
dec
dec
fdivl
or
ljmp
adc
rcrl
mov
cmp
pop
sbb
imul
repnz
pop
mov
aas
data16
gs
push
xchg
in
jge
xorb
mov
jmp
sbb
mov
aaa
in
arpl
add
or
lcall
sbb
outsl
pop
cwtl
cmpsb
das
lret
dec
lahf
inc
cld
mov
cmp
mov
adc
jg
xor
neg
cltd
mov
cmp
in
or
lcall
aam
pop
sub
push
cmp
or
fwait
jge
clc
adc
sar
or
pop
in
xchg
lahf
test
out
cmp
outsl
and
xchg
hlt
add
cmp
ret
xchg
sbb
sbb
and
inc
fdivl
movsb
xchg
pop
adc
movsb
cmp
mov
dec
and
adc
dec
mov
ljmp
dec
push
gs
dec
inc
mov
push
dec
test
dec
repnz
xchg
insl
jmp
stos
sbb
sub
sub
imull
leave
xor
fsubrp
fiaddl
inc
mov
dec
inc
mov
lcall
sbb
out
lods
jge
jg
cmpsb
insl
add
mov
pop
inc
js
lcall
mov
add
imull
ret
pop
add
in
shll
stc
push
addr16
mov
sbb
fnstcw
sub
jp
cmpsl
xchg
repnz
xchg
xchg
fsubl
and
aam
cli
jl
insl
ret
test
mov
test
imul
cld
ljmp
push
bound
pop
les
pop
nop
incb
push
jbe
test
les
mov
jge
inc
je
mov
aas
inc
mov
xor
movsl
fbstp
cmp
imul
cmpsb
mov
testb
push
pop
insl
sub
or
nop
mov
mov
mov
rolb
push
add
pop
and
cltd
fistl
mov
ljmp
adc
cs
jae
insb
fcoml
xor
xor
mov
fsubl
mov
push
inc
sub
sub
shlb
mov
sub
dec
xchg
movsl
mov
fimull
xor
aam
fmuls
xchg
jne
dec
push
jg
scas
inc
call
jns
int
daa
dec
aas
movsb
jl
test
push
dec
hlt
sbb
sbb
jne
lock
cmp
cltd
push
sbb
test
lock
ret
pusha
push
push
add
xor
lret
jge
inc
mov
sti
sub
jo
pusha
movsl
sahf
mov
pop
scas
and
jmp
into
lds
push
lea
out
in
test
imul
shr
xchg
mov
sub
sub
sub
pop
dec
xchg
ret
mov
xor
int
mov
push
xchg
fcompl
xchg
cltd
adc
sub
in
push
test
push
dec
push
cmpsl
in
arpl
push
mov
pop
push
pop
in
rol
inc
dec
sbb
dec
mov
in
call
lret
lock
pop
in
jl
push
push
jge
xchg
mov
nop
dec
or
stc
inc
xor
es
and
sti
push
inc
push
sbb
rclb
adc
outsb
fldcw
fistpl
pop
lret
cli
or
add
inc
push
adc
imul
dec
adc
push
iret
cmp
inc
aas
add
orb
scas
pop
outsl
jne
imulb
push
jns
aad
jl
push
dec
xor
jae
call
lock
add
mov
fs
xchg
aam
pop
jp
pop
pop
add
mov
notb
les
test
icebp
jne
test
int3
cmc
push
xlat
int3
sub
pop
ret
inc
mov
mov
lahf
arpl
pop
jae
xchg
push
out
xor
xchg
cltd
out
mov
push
clc
lods
and
fists
cmp
mov
dec
inc
out
ficomps
mov
cmp
sbb
arpl
or
xchg
add
daa
pop
ja
mov
mov
andl
cld
mov
call
cmp
cmp
stos
jnp
shl
in
arpl
adc
cmpsl
rclb
inc
cmp
push
rolb
xor
xchg
mov
xchg
shrl
ficompl
out
arpl
push
aad
mov
mov
pop
loope
addr16
out
sti
shl
aad
sub
lea
cmp
jmp
je
les
repnz
mov
cld
jno
xchg
into
andl
rolb
xlat
pop
jmp
jl
lret
pop
shll
pop
loope
add
out
enter
shlb
hlt
jle
call
xchg
movsl
and
sbb
mov
mov
jns
pop
jge
nop
scas
lock
lret
in
lcall
pop
lods
xor
add
out
jl
into
dec
rcr
gs
pop
repz
in
ds
lcall
push
stos
call
inc
sub
adc
adc
imul
xchg
inc
repnz
out
mov
outsb
xor
imul
data16
jne
add
push
in
mov
fidivs
lods
cmp
in
dec
mov
push
aam
lahf
jne
and
or
dec
pop
push
add
aas
fdivrs
lods
les
pop
cltd
push
cmc
cmp
fwait
mov
sub
jno
in
orl
movsb
or
popa
xchg
adc
bound
stos
out
xchg
push
or
adc
pop
in
inc
std
pop
shll
add
or
sbb
xor
mov
inc
gs
fucom
inc
inc
adc
aad
imul
inc
mov
outsl
mov
pusha
mov
lcall
pop
std
xchg
jns
int
out
sub
push
out
xor
cld
add
aam
push
insb
jp
and
pop
cmp
fadds
pop
pop
jmp
into
adc
jnp
rclb
sbb
packuswb
mov
adc
push
imul
xor
dec
mov
jg
cmpsb
hlt
add
negb
ljmp
sub
dec
mov
jmp
imul
xchg
das
jge
out
pop
and
jbe
mov
scas
or
bound
xor
es
mov
inc
das
fdivrs
sub
xchg
xor
sub
xor
popa
cmc
push
jge
mov
sub
stos
aas
in
lret
push
jmp
stc
scas
xchg
test
pop
fnstenv
sbb
ret
push
mov
xlat
shll
lods
cmpsl
mov
fisttpl
outsl
mov
inc
jle
test
sbb
rcrb
sub
mov
test
arpl
push
rcll
outsb
out
jns
pusha
hlt
xchg
inc
decb
mov
movsb
pop
cmp
jg
cwtl
sub
adc
ror
int3
push
push
xchg
pop
pop
je
mov
jecxz
xchg
mov
lock
dec
sbb
loopne
adc
xor
daa
mov
adc
les
in
cld
sub
push
jae
mov
push
pushf
out
sub
pop
les
pushf
cltd
cwtl
add
call
cmp
xor
fadds
sub
dec
test
push
inc
in
add
cld
inc
adc
sub
mov
adcl
fidivrl
lods
and
xor
shlb
sub
ds
int
ljmp
inc
mov
aas
cmc
sub
inc
cmp
shll
inc
mov
repz
mov
iret
leave
jg
pusha
or
sahf
mov
jb
popf
nop
xor
sar
fcompl
cmp
in
sub
stos
dec
lret
shlb
ret
sub
sbb
inc
pop
hlt
add
push
dec
pop
xor
push
push
xchg
mov
stos
mov
stos
push
iret
jnp
jno
or
stos
cmc
pop
and
repz
and
testb
lcall
push
pop
xchg
adc
loopne
loope
pop
addr16
inc
call
mov
xchg
notb
push
rcrl
push
repnz
pop
mov
in
fisubs
xlat
ret
fstps
lret
mov
fcomp
in
xchg
pop
adc
mov
sub
gs
repz
and
pop
sahf
or
call
pop
mov
orb
or
xor
mov
ljmp
cmpl
ficoms
cmp
lods
fstpt
pop
sbb
fwait
iret
rclb
lds
pushf
sbb
mov
lods
pop
stos
rcll
inc
sub
arpl
xchg
in
les
notb
sbb
cmpsl
jge
or
idivl
and
jbe
adc
and
je
ljmp
inc
fs
pop
test
adc
cmp
pcmpgtd
jge
add
fwait
es
andl
pop
shl
js
inc
subb
rcl
in
sarb
or
mov
sub
mov
mov
loop
push
lock
mov
mov
nop
jl
in
add
adc
pop
mov
sbb
lods
aam
ret
add
sbb
push
minps
cmpl
cmp
imul
sub
push
loopne
pop
stc
ret
in
add
int
pop
mov
mov
xchg
xchg
lods
sarl
push
sbb
loopne
hlt
or
xchg
mov
jno
sbb
jg
mov
sub
mov
out
ljmp
sbb
mov
cmp
sub
clc
rorb
iret
rol
js
sti
pushf
in
ja
sti
sbb
jo
xor
mov
adc
jg
dec
xchg
hlt
xchg
dec
sbb
xchg
cwtl
jle
pushf
sbb
lcall
xor
sub
and
test
mov
clc
mov
xor
cmp
jbe
pop
test
jno
int
int3
push
xchg
adc
mov
or
xchg
jb
in
xlat
movsb
lahf
push
ss
mov
scas
in
push
orb
sbb
mov
push
fdivr
jns
xchg
mov
mov
cs
pop
jne
jbe
xchg
inc
mov
xchg
gs
pop
fcmovu
popf
mov
test
in
xchg
fdivrp
push
negb
shr
ret
hlt
subps
test
outsb
xchg
jge
dec
je
insl
cmp
popf
and
test
cmp
mov
addr16
mov
add
xchg
rorl
fldcw
inc
mov
pop
repz
add
lea
movsb
inc
sbb
insb
mov
in
mov
repz
jne
shr
push
mov
fisubrs
xchg
fs
mov
into
repnz
inc
and
mov
out
jp
out
icebp
insl
add
sub
dec
cmp
out
into
fldlg2
pop
out
test
add
sub
fildll
push
hlt
es
and
addr16
pop
dec
or
es
push
xchg
cmp
repz
jmp
ja
jecxz
push
xor
mov
xchg
fsubrs
lods
test
xor
bound
outsl
rclb
cmp
aad
or
es
pop
call
inc
pusha
sub
std
pop
insl
push
mov
jne
in
das
adc
sub
fsubrp
push
cmp
jns
xlat
adc
scas
push
inc
xchg
daa
add
lcall
sbb
inc
int3
fdivr
lods
sbb
adc
add
xor
dec
jbe
inc
dec
add
mov
gs
xchg
dec
das
pop
les
xor
scas
jge
je
repz
cmp
jb
pusha
mov
adcb
inc
mov
fmull
ljmp
inc
imul
out
inc
add
in
addr16
mov
popf
push
and
loopne
cmc
das
inc
imul
cld
mov
jg
or
call
lret
insl
and
jae
loopne
push
and
sbb
pop
icebp
mov
add
or
sbb
xor
lea
lea
jne
inc
or
mov
cld
inc
cmpsb
sbb
shlb
pop
dec
int
sub
adc
aad
int
mov
mov
lods
out
sub
fsubrl
jp
pop
std
add
in
hlt
xor
lods
hlt
dec
xlat
pop
mov
into
inc
imul
sbbb
pushf
jecxz
mov
push
pop
adcl
inc
lods
popl
and
sub
xchg
arpl
sub
pop
cmpsb
insb
sbb
nop
mov
out
aam
shrl
pop
sbb
cli
imul
ss
push
pushf
push
mov
push
leave
std
sbb
push
out
push
xchg
les
and
pop
out
inc
mov
addb
mov
push
adc
xor
fbstp
pop
xor
mov
das
je
dec
inc
shl
cli
gs
or
mov
test
int
xchg
lds
outsb
orb
add
jl
jp
push
jl
mov
mov
pop
add
scas
lods
adc
arpl
mov
cmp
fcomps
pushf
mov
and
neg
xor
gs
sarb
sbb
or
iret
addr16
mov
scas
icebp
and
mov
pop
jnp
fnsave
inc
cs
mov
push
ret
pop
mov
push
in
or
pop
push
mov
nop
add
aaa
pop
std
pop
in
mov
adc
add
addb
xchg
out
jae
xchg
add
mov
into
clc
loope
scas
xor
mov
pop
fucom
mov
jmp
inc
dec
jge
out
lahf
sti
insl
cs
aas
cmp
repnz
je
sbb
jb
or
jnp
adc
lds
cmp
sti
push
mov
sbb
lret
data16
subl
mov
add
stc
push
sbb
cmp
jo
and
lret
adc
pushl
and
dec
clc
xor
xchg
xor
and
push
mov
cmpsl
xor
or
movsl
mov
jmp
xor
push
test
or
leave
insb
xor
dec
mov
mov
xchg
or
pop
pop
leave
cli
gs
push
test
out
jns
or
das
jmp
leave
cwtl
xchg
nop
adc
jge
mov
les
mov
repnz
fst
andb
xor
add
xchg
mov
out
xchg
ret
fwait
or
push
xor
push
decl
in
sti
inc
dec
xchg
repz
jno
jae,pt
cmpb
fadds
pop
imul
sbb
outsl
sub
inc
or
aas
mov
int3
daa
outsb
push
cmpsb
fcoms
popa
shr
aas
ret
jp
incl
pop
fstps
adc
jnp
das
mov
lret
inc
sub
insl
mov
rorl
ja
imul
inc
loopne
pop
xor
scas
lcall
sbb
or
cmp
push
cmp
pop
test
adc
int
aad
mov
pop
pop
daa
out
mov
push
cmp
jl
mov
icebp
cmp
lds
imul
in
dec
xchg
nop
jge
push
lods
adc
push
imul
dec
roll
insb
mov
sub
mov
sbb
and
sbb
ja
add
loope
aad
inc
ret
mov
jmp
push
and
cmp
lock
sarb
cli
test
and
cld
xor
out
cmpsl
dec
hlt
roll
fisubrs
pop
pop
xchg
pop
shr
add
out
test
xor
imul
mov
mov
pop
push
outsb
xor
dec
clc
sub
jle
mov
xor
xchg
mov
add
sahf
jmp
push
xchg
sbb
jp
enter
dec
and
jns
mov
sub
fbld
movsl
fistl
cmp
pop
jecxz
jmp
frstor
insb
negb
add
mov
les
inc
xor
lret
sub
ljmp
add
sti
sti
cmpb
mov
mov
jmp
scas
xchg
dec
int3
out
xchg
xchg
ds
cmpsb
xchg
inc
ret
lds
adc
idivl
xchg
add
sbb
mov
cmp
pop
adc
in
mov
std
dec
repz
or
add
mov
push
xorb
js
mov
sarl
inc
fimull
adcb
dec
mov
mov
lcall
xchg
sbb
rcl
test
ficompl
scas
jecxz
lahf
mov
cmp
and
in
and
mov
mov
sarb
or
inc
fnstcw
es
fistpll
and
xchg
adc
and
jg
test
dec
and
add
add
dec
sub
xor
fnsave
test
addr16
xor
mov
add
mov
iret
sti
or
sbb
cmp
shrd
push
addl
sub
stos
mov
cmp
movsl
xor
xor
push
pop
jbe
add
and
pusha
pushf
sbb
xchg
cld
loop
bound
stc
push
dec
xacquire
xor
mov
sbb
jge
sub
iretw
dec
test
xor
inc
mov
adc
sarl
add
cmc
cltd
cwtl
bound
jno
hlt
sub
inc
mov
sub
ret
jle
dec
push
push
fcmovnu
loop
sub
push
scas
data16
cmc
pop
repnz
mov
dec
dec
cltd
loopne
popf
mov
pop
arpl
call
xchg
jecxz
stos
andb
pop
sub
dec
inc
xchg
cmp
lods
or
imul
icebp
xor
bound
pop
test
dec
lahf
jne
mov
cmp
inc
aaa
bound
add
pop
pop
mov
mov
daa
mov
xchg
push
push
arpl
lock
pop
aas
inc
test
mov
int3
push
sti
popf
aad
ficoml
inc
movsl
or
adc
roll
cltd
aaa
mov
cmp
adc
loop
lds
sub
sti
push
testb
sbb
shrl
mov
dec
repz
int
mov
pop
sbb
push
insl
ja
shr
addb
dec
jnp
sbb
orb
rcll
repnz
adc
inc
fcmove
xor
cmp
inc
or
cmpl
xchg
pop
add
pop
std
sbb
mov
mov
add
in
nop
xchg
lods
jb
jns
out
je
outsl
int
fs
mov
rclb
ret
xor
or
gs
mov
dec
imul
ss
jns
mov
pusha
fistpll
pushl
mov
xchg
cmpsb
fs
mov
jp
ljmp
clc
mov
sbb
cmp
lret
push
mov
or
adc
cmpsl
sub
cmp
push
inc
push
scas
jle
lods
cmp
pop
sahf
repnz
nop
jae
gs
adc
in
push
in
or
sbb
xor
sbbb
call
int
sub
aaa
xor
push
cmp
es
lods
jp
subl
test
neg
mov
xchg
or
mov
jb
mov
es
rol
adc
scas
lods
lret
stos
test
in
cs
sub
adc
mov
xor
cmp
pushf
jl,pn
mov
mov
mov
pop
nop
orl
iret
outsb
rcrb
xorb
mov
xchg
gs
int3
mov
inc
adc
xor
mov
fsubrl
mov
jnp
js
adc
jb
fsubp
cmp
pop
jl
inc
cmp
mov
aad
call
ds
jnp
mov
test
inc
call
ljmp
pop
arpl
push
int
xor
rclb
andl
dec
jl
ss
mov
enter
shll
int
out
popl
sub
and
rcll
mov
dec
inc
cld
lret
mov
xorl
jne
mov
mov
sub
lret
loope
dec
sbb
sbb
or
movsb
fs
lcall
cmp
cmp
push
inc
rcr
adc
lret
fnsave
cmp
shrb
lahf
xchg
bound
mov
jle
push
jecxz
pusha
pop
xor
por
or
mov
adc
xor
inc
push
ficoml
out
xor
out
cmp
fdivl
jns
mov
mov
xor
xchg
repz
les
xchg
jo
dec
shlb
daa
jle
mov
es
inc
and
xor
cs
mov
jg
add
mov
cld
pop
mov
ljmp
sbb
adc
lods
inc
fidivrl
outsb
arpl
pop
and
or
lock
mov
adc
pushf
xchg
es
loopne
rcrl
stos
push
ss
add
stos
pop
mov
cs
and
nop
add
fwait
pop
push
adcb
fcmovbe
mov
aam
cltd
sub
push
mov
fldt
push
imul
in
jp
and
mov
fdivrl
pop
lds
js
pop
outsl
inc
je
jmp
mov
aas
adc
sti
push
scas
loopne
mov
lret
loop
cmc
xchg
pop
xacquire
in
aam
fwait
sar
push
mov
stc
stos
mov
or
xchg
aaa
ss
mov
sub
mov
ret
pop
and
pop
and
in
adc
sbb
sbb
cmp
dec
xchg
ljmp
push
cmp
rcrl
jnp
call
push
cs
test
cs
ljmp
gs
jns
mov
cltd
ret
or
cmpsl
cld
icebp
dec
movsb
nop
pop
in
dec
mov
jnp
cmc
enter
mov
stc
jbe
scas
mov
int
loope
outsb
pop
sub
in
into
cli
add
enter
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
loop
pop
sbb
bound
pop
bound
add
dec
cmpsl
jle
xchg
into
aam
movsl
mov
sub
jg
pop
std
fisubrl
lret
pop
and
mov
es
ret
jno
inc
add
xor
jecxz
mov
mov
jecxz
sub
lea
ds
les
lods
push
pop
cmpl
arpl
cmp
stc
fistl
cli
fstpl
rorb
data16
pop
or
shrb
test
cmp
test
stc
loope
testl
aas
dec
or
or
push
popa
dec
mov
pop
jmp
int
jge
outsl
inc
fsubrp
jne
ficoms
sti
lret
sbb
sbb
aas
ret
push
jo
enter
fistps
xor
mov
data16
mov
test
xchg
pop
inc
jae
or
cmp
sub
add
xor
out
adc
je
jg
adc
ljmp
jb
call
outsb
pop
rclb
hlt
add
lret
inc
out
in
jecxz
cmp
loop,pt
sbb
sbb
add
inc
jo
call
lds
je
xor
pusha
sub
les
popa
scas
mov
fwait
adc
add
xor
inc
mov
sbb
stos
mov
xchg
mov
sbb
fs
stc
icebp
jecxz
adc
aad
movsl
into
or
mov
out
sarb
rcrb
flds
testb
dec
fidivs
dec
je
push
pop
mov
sbb
ffree
add
jbe
add
fwait
xchg
mov
push
roll
gs
loopne
pop
sub
in
pop
jnp
cmp
mov
mov
int3
mov
pusha
aad
dec
imul
add
bound
pop
insl
xchg
mov
lea
les
fnstsw
int3
fwait
ss
pop
cmp
pop
mov
cmp
push
ds
or
movl
or
lea
loopne
pop
jnp
adc
xchg
rolb
rcrb
aas
push
pusha
movsl
ret
in
bound
push
pop
xor
adc
xor
sbb
adcl
into
mov
push
cmp
add
fsubrl
out
adc
pop
xchg
rcrb
roll
loopne
shll
cmp
pop
ret
push
imul
or
scas
je
in
or
fiadds
jl
or
sub
cli
fisttps
add
rcll
mov
mov
fisubs
testb
mov
dec
rolb
faddp
cwtl
cmp
nop
ss
jle
test
jge
xchg
push
push
test
push
inc
movsl
inc
push
dec
sbb
xorl
cmp
mov
daa
mov
and
lret
jl
enter
sub
hlt
movsl
jns
cmp
xor
int
popf
clc
ljmp
clc
mov
int3
pusha
xor
add
mov
sti
scas
pop
dec
std
push
mov
notb
jmp
insl
clc
jb
or
into
loope
mov
dec
xchg
pop
pop
stc
in
mov
lds
cmpsb
cmp
mov
iret
pop
sar
mov
push
xchg
outsb
inc
jge
imul
jmp
pop
mov
mov
inc
les
adc
aam
data16
andl
es
sub
mov
add
xchg
jne
adc
sbb
sub
dec
jmp
mov
pop
ljmp
stos
xchg
arpl
fsts
push
sbb
shl
imul
push
rcll
test
inc
cmpsb
fbstp
dec
lods
test
and
fwait
mov
or
lds
sarl
pop
push
cmp
ss
shll
pop
push
pop
arpl
xor
lret
push
in
insl
loop
mov
adc
cmpsb
add
adc
pop
push
sbb
into
push
xchg
daa
ljmp
ljmp
xchg
inc
popa
mov
mov
sub
movsl
cmp
push
mov
popa
mov
jnp
imul
sahf
jo
lahf
pop
outsb
and
loop
jbe
pop
add
xchg
jns
lods
push
rorl
repz
imul
mov
and
gs
push
jmp
repnz
dec
mov
lret
cmp
gs
mov
leave
lea
pop
adcb
pop
repnz
lret
adc
clc
jo
add
mov
mov
lret
cmpsb
lret
push
adc
cmp
xor
and
test
or
mov
mov
jmp
pop
fcoms
xor
add
push
repz
dec
ret
mov
push
mov
adc
mov
inc
cmp
ret
xchg
jne
mov
push
popa
sub
leave
mov
stos
mov
outsl
lcall
jecxz
dec
mov
push
into
cmpsb
in
mov
push
mov
inc
adc
nop
add
push
insl
loop
cmp
xor
cmc
jnp
and
dec
adc
mov
mov
and
pop
imulb
loopne
or
adc
push
xor
aaa
dec
ret
stos
shll
in
lds
add
scas
pop
iret
dec
pop
push
scas
aad
xchg
sub
cmpsb
cmp
xchg
fsubrl
in
insb
inc
mov
lret
mov
push
dec
mov
fbstp
cmpsb
repz
cmc
ja
test
into
jbe
ja
fadds
std
pop
cmp
stos
mov
pop
std
aas
fcoms
cwtl
dec
jge
jl
and
and
xchg
rcrb
push
cmp
sbb
adc
jmp
fsubrp
and
sub
lods
rcrl
cmpl
mov
mov
cld
inc
or
cwtl
lock
sbb
ja
cmc
movsl
das
mov
or
fldenv
cmpsb
xchg
xchg
rcrb
das
mov
sub
sub
add
inc
aas
lgs
dec
push
push
das
ret
add
shll
jne
mov
daa
test
cmovo
push
dec
dec
pushf
fsubl
jbe
mov
movsb
incb
push
call
adc
mov
arpl
cmp
daa
imul
sub
adc
jle
bound
jno
incb
inc
mov
cmc
cmpsl
js
mov
in
pop
xor
xor
jns
sub
xchg
ds
add
xor
gs
mov
dec
add
popa
lods
adc
das
ljmp
mov
sub
add
cmpl
mov
mov
mov
pop
jb
push
mov
dec
orb
dec
pop
cltd
in
xchg
pop
mov
mov
out
jns
jecxz
outsb
cs
fdivp
push
imul
add
lcall
add
adc
ds
mov
jo
lods
dec
sarb
push
call
sbb
enter
jbe
fadds
adc
add
movsb
mov
jbe
or
arpl
sbbl
ja
dec
les
xor
sti
inc
negl
lret
push
shlb
cmp
mov
repnz
ficompl
cmp
jg
mov
mov
push
mov
cmp
xchg
adc
ret
notl
nop
lret
pop
cmpl
push
sbb
imul
test
outsl
pop
mov
imul
mov
push
fcmovnb
jnp
push
xchg
inc
out
hlt
in
sbb
xchg
cmp
xor
xorl
xchg
aad
mov
insl
or
xchg
jns
dec
insl
mov
dec
aad
test
jbe
cs
adc
mov
push
movsb
imul
ljmp
jne
dec
std
sub
cmc
jmp
xchg
and
mov
lods
loope
iret
and
loopne
mov
adc
dec
mov
inc
push
sub
dec
pop
orl
pusha
add
decb
scas
lcall
loopne
ljmp
xor
fs
repz
jg
add
mov
insb
out
scas
sti
and
movsl
es
mov
das
ja
dec
mov
sti
sbb
call
pop
or
cmpsl
gs
push
pop
outsb
mov
sub
sbb
imul
jbe
nop
rcrb
ret
popa
testb
icebp
push
out
loopne
loopne
pop
push
imul
or
lcall
mov
xlat
outsl
dec
sub
jmp
outsl
lcall
aad
imul
repz
jno
outsb
mov
jmp
out
out
add
or
fnstcw
cld
fidivrl
xor
xchg
push
cmpsb
mov
push
cmp
loop
pop
xchg
mov
inc
inc
pop
xchg
inc
add
aaa
push
sbb
mov
subl
test
lea
push
cli
push
imul
pusha
addb
icebp
dec
xchg
iret
mov
pusha
inc
add
inc
mov
mov
inc
inc
push
mov
mov
stos
shrb
push
adc
mov
or
fs
enter
lret
insl
jl
pop
cltd
sarl
and
fcmovu
fnsave
or
insb
dec
fsubl
xor
mov
stos
xchg
pop
sbb
mov
leave
xchg
add
pop
mov
lods
dec
fst
shll
aas
dec
rorl
cld
sbb
out
out
dec
mov
pop
mov
mov
dec
scas
add
mov
outsb
adc
cmpsl
jno
loop
in
push
in
or
sbb
movsl
lea
fdivrs
sbbl
cmp
bound
out
mov
fs
out
fdivrs
aam
or
sbb
add
push
xor
in
jge
push
in
push
cmp
dec
jbe
test
loop
addr16
pop
xchg
xor
int3
xor
cmp
lds
movsb
jmp
and
mov
les
and
ret
clc
push
in
sbb
roll
js
xor
dec
nop
loope
or
adc
pop
mov
movsl
cmp
or
mov
and
dec
les
add
shrb
fildll
add
push
sar
dec
sbb
mov
cmp
inc
movsb
mov
mov
jbe
ja
in
xor
ret
test
add
clc
fistpll
outsb
ret
cli
mov
xchg
mov
jmp
lock
or
out
insl
rcrb
pop
ret
cmova
fwait
int
adcb
out
dec
xchg
pop
xchg
mov
push
mov
cmpsl
imul
cmp
adc
lds
add
lock
aam
or
adc
add
ss
pusha
inc
adc
movsl
add
sbb
int
dec
test
cwtl
mov
pop
or
mov
lcall
mov
sbb
and
cwtl
pop
dec
arpl
push
insb
and
loope
out
les
pop
dec
pusha
jbe
mov
and
leave
call
dec
fistps
testb
mov
addb
dec
test
jns
lcall
xor
cli
cmc
std
jl
jbe
jns
rorl
sbb
es
subb
adc
mov
dec
or
or
sbb
das
aaa
dec
and
call
lret
mov
xchg
bound
cmp
and
xchg
cmp
jg
cmc
add
fs
and
inc
mov
cmp
or
cmp
sbb
pusha
cmc
cld
imul
pop
imul
lods
pop
mov
clc
mov
imul
xor
orl
out
and
ja
orl
lcall
push
js
jle
inc
inc
int
mov
sub
addr16
inc
nop
mov
inc
inc
imul
pop
dec
mov
and
dec
fnsave
nop
sub
sti
xchg
test
mov
sbb
pop
jns
aam
enter
and
movsb
sub
stos
add
cld
mov
or
repz
mov
fiadds
mov
ds
insb
imul
adc
lahf
cwtl
sub
dec
add
push
je
sbb
mov
xchg
call
jmp
repz
pop
imul
lret
fstl
push
pop
adc
or
cmpl
push
push
insb
rolb
or
xor
mov
sub
mov
cmp
out
fs
in
fwait
xorb
lret
xchg
mov
aam
out
or
xchg
sub
add
dec
dec
call
push
enter
mov
in
sbb
xchg
xor
xchg
xchg
mov
icebp
push
xchg
push
cmpsb
scas
push
pop
jb
mov
dec
cs
jle
mov
add
ret
test
ret
mov
xor
jb
xor
sbb
imul
xor
or
sub
clc
sbb
mov
cs
fwait
mov
or
sti
xchg
jnp
fwait
xor
inc
jecxz
je
dec
adc
test
and
aas
sahf
pop
loop
jae
push
ljmp
addl
jb
dec
mov
push
fbld
test
pushf
adc
pop
insb
dec
movsb
inc
outsl
add
fsub
insb
pop
xor
repz
dec
cmpsb
jecxz
imul
daa
fsubr
lret
call
lds
add
xchg
mov
xchg
out
in
ret
sbbb
into
xchg
push
std
xorl
jns
jge
push
mov
mov
je
std
movsb
xchg
leave
pop
lea
dec
gs
pop
jg
push
mov
and
lods
jecxz
jecxz
xor
cmp
ret
sbb
cmp
js
fsts
mov
jnp
fildll
cmp
testl
dec
or
frstor
bound
mov
jp
pop
sub
pop
cltd
notl
jb
mov
stos
inc
push
int
int3
sbb
cltd
enter
mov
cmp
sahf
jp
out
pop
cmp
into
jnp
mov
js
fsub
adc
sbb
adc
ret
aam
mov
fadds
sbb
sar
and
mov
xchg
inc
rcl
adcb
std
inc
push
cli
xchg
xor
jle
scas
mov
mov
dec
outsl
lcall
popa
mov
adc
sti
stc
insl
add
movsb
out
rcll
daa
fstpl
lock
push
mov
and
or
or
div
push
dec
mov
icebp
cld
movsb
or
outsl
jl
scas
or
xchg
xchg
and
lods
and
shlb
jecxz
sbb
pop
mov
in
adc
gs
and
sub
xor
aaa
or
jp
faddl
out
sahf
sar
ret
test
mov
loope
cmp
mov
lret
in
popa
and
push
loopne
in
or
mov
sub
subl
sub
adc
bound
repz
insl
mov
lea
adc
or
scas
iret
xchg
jp
int
and
addr16
stos
cwtl
ljmp
outsl
in
or
jp
daa
mov
dec
andl
xor
mov
mov
mov
jno
imul
leave
aas
cltd
adc
and
in
cltd
mov
adc
and
jecxz
adc
sub
add
outsb
aam
xor
dec
push
gs
jae
loopne
incl
movsl
add
xor
xor
pop
add
and
push
pop
icebp
adc
inc
sub
out
cmp
sbb
xchg
cwtl
in
cli
out
pop
xor
xor
loope
out
jmp
xorl
arpl
pop
xchg
sub
jne
mov
stc
adc
adc
and
jne
mov
jmp
repz
mov
popf
mov
jge
push
push
mov
ret
mov
jne
xor
cmpsl
lahf
xchg
add
inc
rolb
mov
test
in
shld
or
cmp
dec
std
clc
fidivrl
sub
lret
xchg
adcb
notb
and
lock
in
out
pop
js
mov
xorb
jg
cltd
lods
ficompl
and
repz
inc
inc
enter
incb
dec
mov
cmp
ficoms
fs
mov
lret
inc
ret
lcall
jl
adc
das
jmp
inc
addb
push
pop
xchg
jmp
inc
dec
pop
mov
sub
popf
sbb
ss
xor
and
arpl
jmp
dec
mov
fs
add
inc
and
cwtl
mov
push
fstps
xchg
mov
adc
pop
inc
lock
push
sub
insb
pop
fimuls
jg
jp
in
xlat
sub
jno
push
dec
js
mov
insl
dec
xor
jbe
clc
enter
sahf
loopne
outsl
inc
adc
mov
jo
xor
or
sbb
out
shlb
push
add
xlat
pop
sub
mov
xchg
mov
xorl
pop
xchg
call
add
pop
xchg
jbe
cmpsb
je
sub
test
addl
inc
or
mov
gs
add
mov
andl
sub
mov
xchg
inc
les
popf
mov
or
adc
je
push
testb
sbb
scas
lock
jl
xor
daa
sub
push
in
out
dec
sahf
gs
in
xor
sub
sub
loop
sub
push
jmp
or
dec
inc
cmp
sbb
adc
loop,pn
sub
xchg
push
jecxz
or
or
inc
adc
shrb
lea
js
inc
inc
jmp
add
mov
dec
movsl
inc
rcr
hlt
push
add
out
or
sbb
adc
xchg
inc
dec
adc
mov
hlt
adc
fisttps
inc
rol
insl
nop
push
aad
xchg
inc
movsb
push
or
xchg
cmc
das
int
lods
scas
cmpl
jns
and
xchg
cltd
mov
int
dec
mov
movsb
sub
mov
insl
jae
xchg
jge
dec
or
cmp
and
fldl
cmp
xchg
lret
sbb
fstpl
ret
pusha
mov
jecxz
inc
test
pushf
nopl
add
sub
inc
cmp
shrb
into
fisttpll
pop
aas
mov
aaa
jae
sub
imul
mov
mov
cmp
pop
jno
add
cmovle
movsb
leave
pushf
push
pop
jo
int
cmp
mov
dec
push
jnp
jl
xor
mov
lret
inc
es
mov
fcom
cmp
sti
mov
pop
xchg
movsb
in
or
push
add
test
or
jns
cwtl
mov
cld
mov
imul
jp
lahf
mov
lods
mov
dec
icebp
cmpl
push
inc
push
pop
mov
dec
inc
sbb
lret
sbb
mov
and
insl
mov
xchg
outsl
sbb
into
imul
in
dec
pop
stc
xor
cmpsb
fwait
adc
or
in
sarb
cltd
sbb
pop
js
xor
lret
cmp
repz
xchg
std
js
into
add
jle
and
lret
icebp
outsl
psubd
jne
outsb
push
sbbb
push
clc
call
sub
lods
pusha
aam
call
dec
xor
and
inc
cmpsb
xchg
jmp
negl
cmp
testl
es
cltd
jmp
add
adc
mov
daa
out
leave
enter
cltd
stos
push
dec
mov
out
add
loopne
cwtl
movsl
std
xchg
adc
div
fcomps
xor
stos
adc
fcom
sar
xor
sbb
lds
mov
dec
mov
push
in
add
inc
dec
clc
mov
icebp
jge
xchg
or
loop
outsl
xchg
pop
sbb
sbb
adc
fcomp
int3
jecxz
cmp
push
inc
sub
popf
sbb
ljmp
test
fisubl
lret
bound
out
lock
fs
and
push
leave
inc
inc
add
pop
fs
sbb
stc
sbb
les
rol
jl
jne
or
or
jnp
out
mov
fisubrs
mov
rolb
pop
inc
cmp
sub
jmp
push
cmp
sbb
sub
add
push
xchg
ja
xchg
xor
dec
mov
inc
es
dec
repnz
sbb
fsubl
insl
fs
and
cwtl
pop
in
out
lahf
imul
sti
xor
negb
cmc
xor
push
xor
xor
aam
cmc
mov
cltd
jae
xor
lcall
subb
shll
mov
stos
pop
hlt
sahf
xorb
icebp
mov
add
push
fldenv
sub
rcrb
xchg
xchg
aas
mov
sarb
mov
inc
sub
pop
cmp
dec
mov
and
mov
dec
pop
das
push
in
sbb
cwtl
push
shlb
cwtl
dec
xor
push
addr16
add
sub
add
sub
cmp
push
xchg
fs
dec
movsl
idivl
jbe
cmp
hlt
into
iret
int3
pop
inc
push
into
lcall
aas
test
and
cmpsl
mov
jmp
mov
xchg
stc
mov
xchg
or
fdiv
hlt
mov
addr16
sub
rcll
mov
rcll
pop
popf
std
jmp
rcrb
and
in
test
imulb
addr16
shlb
nop
cltd
mov
cmp
or
push
addr16
retw
sbb
pop
int3
jnp
mov
aam
push
adc
or
int
and
jno
dec
into
mov
roll
stos
mov
sti
add
and
adc
jo,pn
repz
jno
jno
lds
adc
in
mov
push
mov
filds
adc
jg
jae
lret
stos
in
jl
add
stc
xchg
mov
lret
sbb
loopne
test
btc
in
rorb
cmp
popf
adc
mov
jo
cmp
mov
popf
pop
cmpsl
xchg
fiaddl
add
pusha
fnstenv
mov
stos
lock
addr16
ja
dec
ss
push
mov
dec
cmp
adcl
out
ljmp
or
mov
mov
es
gs
pop
gs
mov
in
pop
pusha
mov
aam
xchg
test
iret
pop
sbb
and
jnp
adc
push
dec
mov
xor
or
push
sti
xchg
jb
sub
push
les
repz
cmovle
psrlq
sub
push
pop
sbb
test
push
xchg
pushl
rol
mov
arpl
fisttpl
and
cmpsb
fimull
andb
addb
push
mov
lahf
fmuls
push
push
push
scas
pop
add
lods
mov
movsb
filds
loop
xor
je
or
pop
loop
fstpl
dec
sub
lods
das
mov
xor
scas
push
int
popf
cli
sbb
inc
xchg
or
sti
pusha
loop
push
pop
aas
daa
xor
fwait
jle
bound
push
rorl
xchg
into
dec
sub
mov
lods
inc
dec
mov
rcrb
inc
jo
andb
inc
jae
out
sub
mov
inc
dec
xchg
cwtl
sbb
lret
inc
addr16
ds
fucom
xchg
jno
iret
icebp
inc
bound
ret
jae
les
add
push
pop
aaa
dec
rorb
dec
loop
mov
cmc
xchg
mov
insb
sub
mov
push
repz
dec
loop
xchg
mov
dec
sar
mov
cmp
push
mov
add
movsb
ret
rcl
aam
or
inc
dec
pop
call
dec
gs
scas
in
xor
in
data16
aas
inc
nop
decl
sub
enter
ret
out
adc
sub
push
sub
imull
jge
add
addr16
leave
inc
cmpsb
inc
popf
push
jle
push
loopne
aaa
xchg
and
lret
mov
fs
mov
pop
hlt
dec
mov
lds
add
cmovb
push
sbb
popa
jle
pop
pop
mov
aas
dec
push
sbb
outsl
mov
in
and
sbb
shrl
shr
pop
lahf
jnp
lahf
xchg
cmp
mov
mov
test
xor
xor
cmp
dec
fbld
xlat
or
add
ret
notb
mov
mov
test
es
or
loop
nop
pop
push
push
imulb
jno
push
mov
sub
lahf
rcr
dec
lcall
punpcklbw
lods
pop
xchg
andb
mov
add
mov
mov
mov
leave
frstor
out
push
ja
pop
push
insb
xor
xchg
push
fdivs
jns
push
cwtl
cltd
jp
mov
xchg
and
pop
popa
jecxz
push
lret
jb
notl
outsb
lods
das
das
mov
adc
push
jmp
das
xlat
in
push
push
pusha
mov
or
in
gs
decb
jl
ja
jmp
mov
inc
pop
fiadds
jne
inc
adc
cmp
mov
or
mov
jge
dec
sbb
sub
mov
in
adc
adc
rcl
and
pop
lock
das
pop
jmp
stos
xlat
sar
mov
cmpsl
mov
lods
psubusw
das
or
arpl
popa
jle
mov
fnsave
fs
mov
xor
in
adc
fdivs
pushf
sbb
add
xorl
mov
mov
das
shr
jmp
fsubr
test
aaa
sub
push
stos
and
xor
jae
fsubrl
fdivr
jae
inc
push
mov
jg
repnz
cs
imul
inc
outsb
jb
test
cmp
mov
rol
mov
sub
jl
aaa
cmp
adc
jle
lret
mov
inc
fmull
mov
insl
leave
mov
mov
xchg
sbb
add
rcll
loopne
rorb
notl
sub
xchg
comiss
and
lret
ficoms
fwait
mov
jle
inc
mov
outsb
push
pushf
push
not
jl
stc
sarb
lock
imul
cmp
aas
adcl
dec
inc
push
leave
jbe
and
int3
test
jae
mov
decb
scas
push
mov
jno
ljmp
sub
cmc
inc
cld
adc
mov
int3
dec
sbb
pop
cmp
and
or
fwait
adc
lods
andl
stos
aaa
nop
jge
int3
cmp
mov
imulb
movsb
mov
stos
adc
pop
mov
mov
lea
les
lds
icebp
and
cmp
push
add
mov
lods
adc
movsl
pop
cmpsl
dec
adc
scas
mull
mov
stos
cltd
mov
ss
push
push
aam
lods
fsubs
insb
and
jb
xchg
xchg
or
add
repz
out
xchg
lcall
nop
xor
fcompl
jle
dec
jg
fsubl
mov
jmp
sub
int
sbb
dec
into
in
push
loop
imul
ds
movsl
cs
mov
pop
inc
mov
out
in
scas
sbb
or
in
into
cmp
faddl
lahf
ds
mov
xor
cld
sub
cltd
call
out
arpl
adc
mov
add
sub
mov
or
lock
jnp
insb
loop
xor
sbb
inc
shlb
outsl
mov
stc
jo
mov
lods
pop
lahf
add
icebp
xorl
xor
push
pop
sub
mov
das
mov
jle
pusha
mov
rcll
mov
push
les
sbb
outsl
rcrb
ss
inc
outsl
and
enter
mov
repz
push
add
xchg
aam
or
ja
cmc
mov
sub
das
cmpsl
push
mov
adc
and
cli
out
loop
and
inc
mov
mov
in
dec
in
add
aas
sub
insb
mov
es
xor
xchg
es
mov
lcall
movsb
pop
and
lods
into
fbld
loopne
jmp
mov
mov
mov
out
insl
stos
adc
cli
or
cwtl
mov
std
stc
popw
xchg
sbb
and
mov
popa
lret
lock
pushf
int3
das
push
outsb
mov
out
mov
js
mov
sahf
lods
adc
rolb
xorl
xchg
rolb
inc
pushf
adc
dec
push
inc
push
mov
jg
pop
leave
bound
icebp
into
outsl
push
imul
sub
dec
adc
pop
adcl
data16
mov
xchg
jne
ljmp
and
cmpsb
loope
jg
add
fisubs
lret
cmc
xchg
and
repz
jmp
dec
jnp
push
insl
add
leave
mov
mov
cmp
movsb
dec
adc
addr16
or
lcall
dec
stos
dec
push
xchg
mov
cmc
das
mov
and
jge
inc
mov
es
hlt
mov
je
inc
jp
std
ret
push
dec
in
in
cwtl
and
out
pop
das
mov
mov
adc
lret
inc
dec
cmp
jb
sahf
sub
sub
movsb
insl
repnz
xchg
lfs
sbb
in
fs
dec
testb
push
add
scas
mov
or
sub
cmp
inc
add
mov
mov
cs
xor
out
sarl
cmp
outsl
and
mov
mov
out
xor
mov
mov
imul
and
hlt
arpl
repnz
mov
enter
sub
lods
adc
cli
faddl
fs
dec
push
std
fldz
adc
sbb
xchg
add
stos
cmpb
pop
imull
int
test
test
or
in
leave
mov
mov
dec
cmp
push
in
adc
pop
dec
pop
and
jecxz
nop
rcll
inc
xor
daa
pop
mov
aaa
ret
jecxz
xchg
cmp
outsb
inc
pop
loope
out
ret
sahf
jp
dec
or
mov
mov
pop
dec
mov
push
lret
cmc
pop
jo
out
fsubrs
mov
jp
out
push
xchg
out
sbb
inc
or
shlb
cmpsl
jge
xor
into
inc
lds
mov
jo
or
push
mov
sbbl
out
or
and
clc
inc
jo
sub
xchg
ja
pop
cmp
cmp
stc
inc
in
jae
inc
sub
or
add
test
inc
or
push
jp
mov
incb
cmc
rol
int
dec
insl
das
aad
popf
jl
in
sarl
and
jno
sbb
imul
jg
cmpsb
call
inc
jmp
push
loopne
jne
movsl
fisubl
fmull
incl
add
inc
add
lret
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
cltd
mov
cmp
bound
pop
bound
int3
xchg
stos
dec
in
je
pop
add
mov
ror
xchg
inc
clc
ret
mov
jecxz
shll
insb
ss
scas
mov
jp
and
cs
shl
or
sti
scas
mov
test
or
or
sbb
les
into
xor
pusha
andb
pop
and
add
mov
lret
std
dec
gs
dec
mov
fdivl
insb
mov
sbb
rcll
popl
arpl
sbb
mov
pop
xchg
addl
pop
insl
arpl
mov
fdivrs
outsl
push
scas
dec
mull
fistps
sbb
outsl
lods
cmp
jo
xor
addr16
xchg
sub
mov
hlt
pusha
push
andb
mov
xor
pop
lret
lds
icebp
adcl
cmpl
stc
aam
cmp
jle
inc
cmp
inc
sub
jnp
inc
mov
shrl
fwait
call
outsl
mov
aas
scas
pop
mov
push
fisubrs
leave
mov
pushf
rcrb
sub
cmc
lods
aam
pushf
pop
mov
dec
push
stos
push
or
loope
add
mov
lret
xor
addl
aas
mov
mov
shrb
sub
jmp
mov
dec
adc
xchg
clc
fdiv
insb
ss
or
in
pop
cltd
icebp
movsl
out
pop
fildl
mov
and
inc
push
mov
mov
scas
mov
ficoms
rorb
sbb
mov
mov
mov
inc
and
sub
fcoms
jmp
js
dec
push
repnz
js
push
int
inc
mov
inc
in
inc
mov
jmp
cwtl
test
sub
fdiv
les
enter
inc
cli
movsb
leave
jp
dec
cwtl
iret
xlat
and
jecxz
sub
pop
arpl
fisubrs
insb
jnp
xchg
sbb
stos
or
popf
test
in
test
mov
mov
pusha
fidivrs
add
notb
imul
sbb
insb
into
jl
scas
push
jecxz
adc
inc
sbb
negb
int
push
test
int
notb
xchg
mov
sbb
xor
xchg
lods
jo
sbb
stos
xchg
incl
test
dec
call
cwtl
lea
fimull
adc
jno
mov
xor
idivl
imul
movsl
pop
or
pop
dec
fists
lds
ljmp
push
adc
sbb
cmp
mov
stos
nop
and
cmp
test
jge
sbb
out
xor
inc
or
addr16
jle
gs
sti
into
lcall
mov
cmp
mov
pop
dec
out
add
and
mov
fsts
mov
pop
js
lds
push
out
dec
cmp
aam
jnp
mov
inc
sub
mov
out
cli
in
popw
das
clc
outsl
sbb
aaa
sub
sbb
pusha
jg
addr16
and
cmp
iret
mov
sbb
xor
movsl
cmc
mov
jl
int3
and
pop
into
ss
push
pop
dec
xchg
nop
js
cmp
das
loope
push
ss
mov
popa
jno
mov
xor
and
ljmp
mov
rolb
inc
fstp
push
mov
fwait
andb
aaa
sub
scas
jp
imull
or
inc
subl
pushf
inc
jb
dec
mov
sbb
shll
scas
subl
xchg
cli
dec
scas
sbb
push
jp
inc
aad
xor
and
sub
sahf
pusha
fstps
fadds
push
jnp,pt
xor
sub
je
inc
ja
cmp
jbe
std
int3
psubsw
insl
mov
filds
mov
jnp
mov
addb
movsb
pop
cmpl
je
test
leave
call
sarl
ret
or
mov
std
push
dec
adc
and
fdivrp
mov
lds
out
icebp
dec
ret
ss
out
es
aam
sbb
out
outsb
ja
cmp
inc
dec
out
mov
aad
and
xor
add
add
inc
aad
mov
dec
or
ja
xchg
inc
mov
push
sbb
mov
sub
mov
or
subb
add
jae
jae
or
in
lods
and
and
jo
add
lods
adc
cltd
insb
into
jmp
sub
movsb
in
into
sbb
pop
cmp
pop
sbb
popaw
out
sar
adc
jge
ret
loop
jb
aas
mov
ss
adc
sub
inc
mov
and
test
dec
pop
inc
or
push
imul
mov
je
pop
ss
and
xorl
jmp
jge
out
push
ret
jae
lea
pop
bound
jp
loopne
sahf
dec
sbb
out
cmp
mov
stos
out
jnp
xlat
xchg
enter
jp
ja
xlat
jl
pop
orl
aad
adc
mov
xor
nop
pusha
fdivrs
mov
rorl
cmp
in
loope
adc
sbb
adc
mov
pop
ss
mov
xlat
mov
sub
aaa
xchg
cmpsl
xor
imul
pop
clc
in
aad
jo
fwait
out
push
cli
enter
xor
mov
mov
jns
fadds
fsubrp
sahf
pop
xor
adc
call
xor
ret
jp
or
xchg
lcall
lock
mov
enter
rcrl
pop
mov
imul
mov
arpl
sub
sub
inc
jns
cmp
or
lret
in
rol
roll
and
or
mov
xchg
push
push
nop
movsl
rclb
sbb
test
arpl
arpl
jnp
loopne
jp
xor
and
inc
call
les
add
mov
leave
imul
inc
loop
aas
xorl
push
inc
fistl
pushf
call
cltd
fwait
stos
lea
pop
adcb
push
cmpsb
xor
xlat
sbb
inc
lret
sbb
sub
imul
cs
ret
imul
mov
lds
ljmp
lcall
repz
popf
clc
add
sub
fstpt
push
pusha
cmp
popa
dec
cmc
psrad
inc
ljmp
xchg
mov
scas
cli
cmp
push
xchg
push
sub
popf
gs
add
clc
ds
scas
or
and
dec
inc
mov
les
dec
aas
cld
sahf
pop
cmc
js
mov
inc
dec
stos
cmp
or
sub
subb
call
dec
jno
mov
mov
jecxz
push
cmp
xchg
inc
xor
xchg
sti
cmp
or
out
add
add
inc
insb
xlat
lods
cmc
cmp
std
sub
aad
shl
push
xchg
and
mov
popa
dec
sub
fisttpl
movsl
ficoms
fdiv
inc
rorb
aam
insl
mov
push
lcall
lods
mov
jo
popf
aas
or
fwait
mov
lods
push
mov
adc
lret
pop
sbb
xchg
insb
xor
inc
aas
popf
cmpsl
inc
gs
adcl
and
cmc
jmp
and
leave
mov
mov
stc
mov
xchg
dec
lret
mov
sahf
pop
je
cmp
ja
add
cwtl
cmp
bound
outsb
cmp
loopne
movsl
stc
mov
out
sub
push
jne
jge
xor
add
jmp
and
insl
divb
pop
jno
pop
pushf
pusha
rolb
xchg
leave
mov
jb
lcall
fildl
xor
movsl
mov
mov
leave
and
sub
or
sbb
shlb
cmpsl
test
aam
push
push
mov
movsb
cwtl
jo
jbe
dec
xchg
cld
or
push
lock
mov
or
sbbb
std
jns
and
jb
repz
push
inc
std
push
fldl2e
aas
sub
jle
cld
daa
dec
xchg
dec
out
addb
adc
int
sub
shlb
jo
cmp
movsb
in
and
inc
lret
or
add
shlb
cltd
iret
stos
cmp
inc
mov
outsb
andb
push
jbe
pop
pushf
stc
inc
ret
xchg
or
icebp
cmp
mov
push
sub
enter
push
sahf
cmc
xchg
dec
pop
add
and
jns
xor
push
fimuls
loop
xor
ret
sbb
push
push
xchg
out
int
cmp
jge
cli
lret
jmp
pop
pop
mov
mov
adc
pusha
push
add
into
loop
mul
sti
cmp
adc
push
push
fsts
inc
data16
imul
mov
fistl
jecxz
aaa
scas
push
or
jge
cwtl
mov
add
cwtl
fwait
pop
jnp
xorb
inc
mov
jb
leave
mov
inc
mov
mov
xor
aad
xor
outsb
mov
push
fdiv
orb
sbb
lea
push
add
arpl
lahf
in
push
adc
loopne
sahf
mov
test
test
bnd
adc
pop
and
push
stos
inc
jl
jns
jl
sahf
fs
jp
sbb
fucompp
dec
rclb
es
mov
pop
push
push
mov
test
and
mov
repz
orl
lea
pop
fs
iret
mov
out
push
loop
mov
dec
sbb
addr16
cli
xor
inc
icebp
movsl
or
pop
xchg
adcl
int3
mov
jle
mov
inc
mov
idivb
sbb
das
daa
jecxz
lock
int3
inc
inc
mov
xchg
test
push
divb
and
les
mov
push
in
jl
jmp
xchg
std
sti
xchg
sbb
xlat
cmp
repnz
mov
xchg
loopne
cmpsb
hlt
ret
sub
sbb
xor
aam
aas
call
ds
mov
fmulp
jle
xchg
push
pop
sbb
int
xchg
mov
fwait
pop
in
shrl
jns
adc
or
xor
sbb
imul
adc
pop
sbb
sarl
dec
or
popf
ret
mov
mov
sub
insb
xor
fdivrs
or
sbb
sarl
cwtl
push
cmp
sbb
push
adc
adc
subl
dec
sahf
sbb
jbe
sahf
adc
adcl
mov
xchg
inc
inc
ret
ds
in
xor
inc
dec
push
mov
xor
inc
push
lea
or
mov
rcr
mov
test
pop
mov
ljmp
popf
mov
cmp
xor
pusha
xor
fs
xor
imul
into
popa
clc
and
addr16
push
dec
xor
ds
sub
xchg
sub
push
sub
repnz
sbb
sar
cmpsl
xchg
std
mov
insb
mov
xor
repz
dec
cmp
movsl
jo
jp
push
outsl
push
gs
jecxz
mov
mov
jns
out
cmp
jge
adc
cmpsl
stos
ss
movsl
pop
bsr
aam
mov
enter
mov
fwait
inc
stos
mov
enter
rcrl
mov
sarl
push
lods
cwtl
add
pop
mov
dec
out
enter
adc
cmp
testb
decl
orl
adc
sti
add
dec
push
leave
in
je
jmp
adc
mov
int
mov
or
stc
dec
lods
ja
and
outsl
pop
fwait
push
cmp
jmp
incl
aaa
fdivr
sub
aad
jbe
pop
xor
push
arpl
xor
loop
mov
out
ret
xor
aam
pusha
cmp
into
test
int
xor
jae
leave
and
testl
dec
jns
sti
pop
ret
enter
and
or
test
in
negl
sbbb
aaa
mov
sahf
adc
pop
pushf
pop
mov
xchg
mov
repz
xchg
shll
lcall
cwtl
out
xchg
inc
imul
mov
mov
jbe
rol
xchg
fwait
repnz
cmp
xlat
jmp
frstor
stos
jo
jne
mov
adc
lods
cltd
sub
jnp
in
jb
repz
mov
and
sub
popf
xor
dec
test
push
pop
mov
or
mov
dec
lods
push
stos
cmp
rcl
loope
push
lret
sbb
cltd
inc
cmpsl
scas
mov
sahf
sbb
inc
ss
test
mov
adc
jge
pushf
imul
cli
pop
or
xchg
cli
out
clc
mov
mov
xchg
and
sbb
jns
adc
psllq
imul
sub
ss
pop
cmc
sub
fisubs
add
xor
mov
cld
test
pop
fidivl
xchg
sahf
push
adc
dec
in
cli
test
mov
ficoml
imul
cmp
test
xchg
add
cmpsb
cmp
daa
ja
sbb
sarl
jne
cmp
mov
dec
sbb
test
clc
xchg
aad
mov
dec
xor
pop
es
lret
jne
faddl
aam
jle
ret
mov
sub
loope
movsb
sbb
pop
lret
push
ljmp
dec
stc
xor
sbb
in
mov
jp
movsb
add
xchg
pusha
and
pop
mov
subl
sub
out
mov
cmp
add
test
inc
scas
shlb
mov
dec
or
mov
fs
test
movsl
stos
test
shrl
icebp
cmp
add
repnz
test
test
mov
sbb
je
or
les
adc
cmp
mov
mov
push
mov
outsl
sub
pop
push
cmp
jmp
lret
and
ret
icebp
fs
push
sarb
mov
xor
lock
iret
adc
mov
gs
shll
adc
out
push
dec
jbe
cmp
shrb
inc
mov
xchg
mov
stos
sahf
scas
mov
movsl
orb
mov
jo
xchg
ds
fwait
xchg
sub
testb
jmp
enter
ljmp
xor
adc
mov
cmp
jle
int3
ljmp
jmp
cmpsl
cmp
sbb
lods
pop
cmp
hlt
lcall
aam
shl
inc
notb
daa
insl
xchg
and
out
jnp
push
in
in
lcall
fcmovbe
jo
xchg
and
jmp
or
mov
jae
lea
inc
movsl
aam
push
imul
cmpsb
testb
inc
gs
daa
in
push
sub
lret
lods
fisubrl
fisubs
pop
mov
push
pusha
daa
jle
or
or
inc
adc
inc
xchg
int3
and
pop
cmp
push
enter
aad
mov
sbb
pop
and
outsb
mov
push
jns
lea
dec
nop
outsl
pop
leave
fs
jb
pop
push
sub
jg
cmp
aaa
mov
stos
fidivs
inc
mov
xlat
push
xchg
inc
pop
cmp
rolb
adc
out
mov
in
pop
lods
jecxz
mov
aam
out
xchg
and
insb
jo
pop
push
mov
in
or
out
pop
ss
adc
sub
jle
or
ljmp
xchg
cmp
loop
lods
pop
mov
lock
mov
sub
imul
cmpsb
mov
jge
xchg
push
ss
popf
sahf
inc
add
int3
mov
cmp
dec
dec
push
fldt
out
das
clc
xor
dec
sbb
ret
fsubs
jbe
clc
outsl
push
out
pop
stc
lods
push
popa
push
mov
mov
idivl
fsts
cmpsl
push
inc
inc
jbe
mov
int
push
sub
mov
pop
cld
sbb
movsl
xchg
xchg
add
in
iret
adcl
push
scas
mov
mov
mov
jl
push
mov
push
loop
inc
or
pusha
xor
das
ret
mov
or
and
push
jmp
or
bound
js
jo
dec
out
repz
dec
cwtl
pop
push
mov
push
adc
addr16
mov
pop
mov
mov
dec
mov
loope
ror
or
inc
inc
test
repnz
sub
jg
fcomp
aam
je
push
xchg
lock
or
movb
mov
push
cli
xchg
fsubr
insl
mov
stos
aam
sub
mov
mov
lahf
inc
ss
mov
ds
pop
pop
cwtl
adc
jmp
mov
clc
int3
and
pop
inc
xchg
insl
push
repnz
and
inc
lret
shlb
sbb
test
pop
in
arpl
sub
ds
add
xchg
std
in
mov
and
xor
mov
sti
inc
pop
ja
pop
bound
dec
mov
test
sarb
mov
xchg
cmp
jnp
shl
dec
dec
add
push
and
adc
leave
mov
lds
cmp
xchg
pop
mov
cmp
daa
push
add
ljmp
cmc
pop
sbb
xchg
or
aad
and
stos
inc
push
into
fsub
fnstenv
jae
insb
lret
std
inc
cmc
mov
fisttpl
lret
jbe
jmp
in
inc
imul
and
mov
fcomps
push
aam
pop
xchg
lods
insb
mov
imul
icebp
clc
outsb
jecxz
push
cmp
decl
sub
push
push
shlb
faddl
jae
adc
mov
inc
pop
movsb
icebp
int3
mov
push
shll
mov
xchg
fldenv
adc
jge
mov
add
cmp
add
jo
pop
jmp
lret
enter
aaa
aad
addr16
scas
sbb
adc
dec
dec
mov
push
loop
icebp
popa
and
sub
cmp
push
lcall
movsl
push
mov
and
xlat
icebp
dec
stos
fldcw
sbb
inc
mov
cmp
imul
repnz
daa
aaa
arpl
fnstcw
add
cmp
xor
dec
xorl
ret
scas
filds
outsl
pop
fcmovnbe
sbb
gs
mov
mov
inc
fwait
repnz
jo
outsl
push
xor
pop
aaa
mov
adc
stos
push
jge
out
add
out
shll
clc
aad
out
jne
sbb
cli
out
stc
sub
jns
xchg
fldcw
insb
pop
mov
adc
push
jo
notl
dec
je
addr16
sbb
imul
or
pop
add
and
sub
sbb
mov
mov
mov
adc
fwait
mov
xchg
iret
loopne
jo
add
mov
add
loopne
fisttps
mov
ja
fnstsw
pop
shlb
adcb
cmp
outsb
add
rol
int
mov
adc
mov
ljmp
mov
popa
push
mov
jbe
setne
pop
je
jne
arpl
add
push
dec
ror
sbb
sub
hlt
jg
fstpl
push
add
sbb
xor
xor
mov
sub
cli
loop
jb
mov
inc
addr16
pop
cmpsb
fimull
inc
add
lahf
jnp
clc
mov
jle
repnz
push
cmp
imul
movsb
loope
cmp
jo
repnz
insb
ret
mov
iret
pop
pop
aas
add
fwait
and
jg
stos
sbb
adcl
lret
shrl
dec
mov
jg
orl
pop
dec
jnp
mov
and
int
jl
cli
adc
xchg
sbb
mov
test
mulb
je
cmp
mov
out
push
outsl
add
dec
nop
aam
dec
inc
fcomps
mov
push
mov
aam
int3
stc
negl
rcrl
inc
mov
xchg
movl
add
sarl
enter
es
mov
fisttps
rcll
ret
ljmp
jnp
pop
mov
xlat
inc
push
sahf
pop
in
pop
in
shlb
mov
pusha
sub
in
sbb
dec
dec
pushf
lahf
adcb
cmpsb
mov
cmp
xchg
test
xchg
push
xchg
loopne
out
pop
outsl
adc
and
sbbl
test
insb
xor
xchg
mov
fidivl
outsb
mov
dec
pop
xchg
push
mov
out
jns
xorb
mov
loop
ljmp
lods
push
repnz
jae
iret
lret
mov
push
int
ja
or
adc
push
sbb
stos
mov
mov
xchg
inc
jp
les
mov
test
mov
mov
loop
insl
adc
fdivl
pop
ja
jb
stos
daa
outsl
pop
adc
cmp
jecxz
pushw
scas
ret
cltd
lds
sub
sbb
pusha
test
les
lret
test
outsb
pop
jl
pop
xchg
pop
insl
inc
xchg
xchg
inc
lds
out
cmp
or
popa
mov
fnstenv
cld
fists
sub
out
fisubl
mov
lock
push
or
addr16
and
push
shr
push
loopne
jb
enter
sbb
sti
adc
pop
int3
sub
or
out
dec
popf
insl
int
mov
mov
adc
sbb
arpl
pop
and
add
push
or
push
divb
rcrb
and
mov
mov
xor
std
aad
xor
jl
and
std
aam
push
fldcw
mov
cmp
and
jle
out
repnz
xchg
in
fs
fnop
push
ds
inc
mov
push
sarb
outsb
and
call
ja
aam
ss
loop
mov
adc
in
mov
sarb
and
push
sbb
lods
gs
xchg
call
xchg
cmc
lods
sbb
je
imul
sub
loop
push
arpl
mov
mov
adc
not
fwait
sarb
into
fldenv
jmp
in
pusha
push
cmp
mov
adc
xchg
add
mov
into
and
lahf
sub
jp
push
dec
aam
and
test
jle
sbb
repnz
xchg
ret
mov
pop
es
rcrl
scas
dec
add
shrl
cmp
and
xchg
dec
mov
adc
mov
leave
sub
jne
jecxz
or
and
mov
mov
lods
sbb
adc
ja
push
test
loope
cs
or
jbe
scas
xor
sahf
loop
mov
xchg
mov
jg
clc
int
and
shlb
cmpsb
mov
stos
fstpl
shrb
aas
lret
sbb
pop
and
pop
push
loop
movsl
pop
mov
ret
mov
dec
mov
pop
cmpb
lahf
loop
je
pop
dec
xlat
dec
ret
das
rolb
sbb
movsl
or
out
lret
gs
xchg
mov
bound
sbb
sahf
sahf
sbb
mov
or
dec
mov
cmp
push
and
aam
shlb
and
je
je
into
loope,pt
dec
mov
mov
dec
dec
repnz
jae
or
push
in
jmp
fmull
push
movl
xchg
push
and
ja
sbb
nop
outsb
test
dec
mov
aaa
jle
mov
aaa
xor
dec
cmp
pushf
dec
mov
ret
imul
add
bound
pushf
mov
sbbb
hlt
call
sub
pusha
ljmp
or
cmpsl
in
loope
movsb
and
clc
jge
dec
sahf
fsubp
lods
xchg
cmp
xchg
xlat
xor
jg
pop
in
adc
adc
lea
loopne
and
jnp
push
dec
adc
push
or
aad
pop
lods
push
or
repnz
add
push
jg
dec
in
call
mov
inc
stos
iret
loop
cmp
testl
mov
idivb
loopne
mov
das
outsb
gs
mov
pop
ret
push
push
daa
mov
subb
pop
xchg
jne
cltd
out
lcall
and
dec
ret
jns
fyl2x
sub
sbb
xchg
mov
add
jne
xchg
jp
out
mov
mov
loopne
mov
dec
ret
pop
out
out
ret
add
jle
in
aas
in
or
stos
pop
or
xchg
mov
adc
cli
xchg
ja
jp
iret
inc
sbb
push
jl
or
fiadds
dec
mov
call
ret
xlat
out
fsubp
shr
lahf
sub
out
pop
imul
mov
pop
jo
jb
adc
in
mov
movsb
lahf
daa
lahf
push
push
dec
sbb
mov
xchg
nop
outsb
mov
push
stos
push
testb
jnp
dec
jmp
in
add
adc
mov
sti
shll
stos
push
push
sbb
lcall
imull
lret
inc
fdivrl
pop
dec
js
xchg
loope
lret
mov
das
mov
jns
jle
mov
shlb
and
sbb
dec
mov
xchg
repnz
cmpsb
cmp
xlat
fildll
or
dec
mov
pop
add
jns
gs
sbb
cltd
inc
cmc
xor
adc
mov
ja
xor
adc
test
movb
adc
fsts
aad
pop
xor
push
jl
addb
mov
sti
es
jb
jp
xor
loopne
pop
fld
inc
dec
xor
outsl
mov
repz
pop
outsb
stos
lea
out
xchg
sub
mov
stos
xchg
iret
cltd
ds
scas
stos
fwait
loopne
ds
xchg
cs
jecxz
pop
jno
stc
cltd
sbb
cmp
enter
pop
dec
mov
jno
or
inc
inc
das
sub
mov
in
sbb
add
aaa
xchg
les
mov
fwait
push
or
cmp
test
data16
mov
shl
push
jp
cmc
leave
dec
addr16
mov
pop
mov
mov
loope
les
loope
nop
inc
and
movsb
shrl
mov
leave
push
insb
fcomip
push
ds
pushf
push
in
jns
dec
xchg
push
pop
sbb
sbb
push
fcoms
rol
cmpsl
lahf
flds
int
xchg
add
mov
jecxz
push
push
push
sub
inc
jbe
rorb
inc
repz
lock
ja
mov
rcrl
mov
cmp
xchg
adc
cwtl
imull
aam
jnp
popf
xchg
mov
jo
sub
xchg
mov
add
mov
cli
xchg
mov
aas
addr16
sbb
lods
lock
test
fildl
mov
leave
push
or
mov
aaa
in
xor
je
iret
ds
inc
stc
outsl
test
in
mov
sbb
xor
and
sbbl
dec
add
pop
in
cmp
dec
icebp
mov
aam
sub
addl
pop
nop
icebp
dec
pop
je
pop
push
jbe
or
fnstcw
mov
leave
jl
push
or
into
int3
je
inc
and
xorl
and
cs
dec
enter
and
int3
push
mov
inc
dec
daa
scas
sub
lret
xchg
pop
jmp
lret
cli
cli
andl
xor
jae
lock
sub
cmpsb
inc
lods
inc
mov
add
test
jge
pop
dec
shlw
cmc
xchg
aaa
pop
aaa
add
arpl
inc
js
adc
movsb
lret
dec
mov
push
mov
mov
imul
test
jno
into
lds
inc
mov
jecxz
push
xor
jmp
and
pop
push
lcall
xchg
test
stos
enter
nop
test
mov
enter
mov
mov
xchg
into
mov
push
pop
pop
rcr
aam
mov
out
popf
addl
das
mov
loop
ds
jae
clc
sbb
xchg
pop
enter
cmc
aaa
ja
ret
out
xor
cmp
movsl
and
repnz
mov
pop
in
add
sub
shrl
pusha
jl
fwait
test
pop
cmp
pop
adc
push
mov
add
setp
fisubl
xor
mov
dec
clc
cli
pop
jno
push
xchg
and
scas
mov
xchg
xchg
jne
scas
aam
pop
sbb
push
xchg
data16
and
xor
jne
es
add
jb
mov
jg
sub
arpl
mov
push
mov
fwait
mov
decb
xor
inc
dec
jnp
lcall
push
outsb
inc
xchg
aaa
cmp
or
bound
cmpb
call
and
mov
dec
mov
or
jo
call
cmpsb
cmpxchg
cmpsb
xor
jne
sbbl
mov
lods
mov
mov
mov
enter
popa
fs
cwtl
mov
dec
push
jb
inc
mov
mov
out
fistl
jg
fimuls
jno
sub
ljmp
add
push
push
push
cwtl
enter
or
cmp
dec
ret
loope
je
mull
ret
fwait
test
jnp
jnp
mov
rcrb
and
push
sub
daa
lods
data16
loope
pop
xor
or
pop
pop
out
std
pushf
js
roll
movsb
dec
mov
mov
fwait
outsl
mov
mov
mov
add
dec
pop
or
dec
addr16
iret
push
sub
paddd
sub
jl
pop
incb
daa
mov
adc
fmul
add
fisttpll
sbb
dec
pop
cli
dec
xchg
mov
fdivrs
xor
shlb
adc
or
pop
rcpss
stos
mov
sub
in
subb
inc
fiadds
mov
mov
xlat
imul
dec
cltd
sbb
fwait
jno
mov
in
mov
xchg
push
sbb
push
fstpl
mov
mov
mov
roll
or
popa
test
repz
lods
jg
sub
cmpsl
leave
push
daa
aad
popa
in
push
inc
rorb
arpl
lahf
pop
mov
jae
and
dec
and
cmp
push
mov
std
ds
push
pop
icebp
roll
repz
popa
pusha
jecxz
jl
stc
xchg
xchg
pop
repz
push
inc
inc
and
pop
adc
mov
and
dec
sbb
pop
data16
jno
fwait
je
xchg
xor
push
and
mov
ja
in
sub
fsub
xchg
fsts
shlb
inc
push
pusha
mov
mov
jge
xchg
pop
mov
stos
xchg
loopne
sub
test
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
lock
mov
bound
pop
bound
out
push
xchg
pop
sbb
das
xchg
enter
jp
fldt
mov
jmp
in
icebp
push
jbe
or
hlt
fs
ds
rcrl
jnp
inc
and
push
insb
les
ret
dec
test
push
adc
ljmp
xor
mov
movsb
outsb
mov
jbe
xchg
push
aam
mov
mov
mov
and
push
into
out
fmull
jmp
add
mov
movsb
cs
int
push
xchg
in
and
popf
adc
jbe
ljmp
fbld
aaa
add
lods
or
dec
cwtl
sub
lret
lock
ficomps
sub
xchg
add
mov
push
lock
jmp
push
adc
xchg
iret
stos
cld
ror
push
cmp
jmp
xor
lcall
pop
jns
pop
into
cmp
sbb
mov
adc
add
out
aaa
test
scas
adc
mov
sub
insertq
mov
mov
mov
into
xor
and
pop
cmp
rclb
push
and
mov
iret
aaa
pop
push
push
fsubrl
ficoml
fisttpl
pop
mov
xor
or
dec
add
xchg
push
mov
mov
sahf
jle
ja
cmp
dec
xor
test
and
icebp
bound
out
out
aad
in
mov
mov
sarl
jmp
xlat
sub
lods
mov
test
mov
lret
xor
mov
cmovge
xchg
mov
mov
sub
aad
test
push
jno
mul
daa
popf
cmpsb
stos
in
add
inc
jg
push
fwait
int3
lock
pop
jne
lods
int
add
mov
sbbb
dec
xor
pop
adcb
jp
cmp
std
out
pop
cmp
addr16
addr16
ljmp
cmp
add
adc
inc
xor
and
bound
cmp
cwtl
inc
xor
and
dec
cltd
out
dec
popf
sbb
or
pop
xchg
inc
movsl
data16
mov
xlat
mov
pop
and
cmp
into
movsb
inc
mov
ja
mov
push
aaa
inc
and
pop
rorl
cwtl
or
and
into
xchg
xchg
pop
xor
inc
out
mov
popl
stc
pop
xchg
sbb
sub
jae
rorl
mov
mov
add
and
dec
dec
pop
or
ret
into
popf
pop
fildl
addr16
mov
stc
and
je
mov
in
fwait
sbb
mov
push
in
mov
mov
mov
pop
imul
test
mov
aam
sub
movsl
push
aam
mov
lods
imul
and
test
and
pop
popf
cmp
and
rclb
out
sahf
or
test
sbb
xor
xor
dec
or
pushf
mov
loop
push
pop
repnz
aam
sub
leave
call
stos
jb
cmp
cs
inc
or
mov
mov
mov
sti
jmp
lret
push
addr16
das
mov
sbb
xlat
jno
and
xchg
lahf
pusha
test
shlb
xchg
and
add
movb
test
push
xchg
sti
aas
sbb
add
mov
adc
or
testl
test
adc
sub
lret
movl
in
push
mov
fldcw
outsl
sub
sub
xchg
pop
mov
pop
stc
sub
cld
cmpsl
sti
add
out
mov
dec
jo
sti
ja
inc
mov
pushf
insb
sub
xchg
mov
mov
xlat
imul
sbb
pop
loop
inc
shl
pop
mov
mulb
fwait
std
jae
jg
bound
ret
lret
pop
rclb
outsb
shlb
pop
lock
push
je
xchg
mov
std
fldt
mov
and
xor
push
jno
push
shlb
lahf
cmc
lods
push
xor
lcall
daa
nop
scas
aam
jmp
rcrb
jbe
sbb
inc
sti
mov
adc
jl
mov
push
loope
int
call
pop
mov
daa
shrb
mov
jp
adc
dec
notl
loop
mov
psllw
lods
and
js
movsl
and
std
imul
add
mov
xchg
pop
lods
add
fdivl
pop
aaa
xchg
fidivl
fldt
and
push
dec
push
jb
xchg
jo
xor
xchg
out
mov
out
mov
inc
xchg
xlat
add
cmp
loope
inc
loop
fwait
inc
jno
inc
jns
arpl
push
ret
dec
into
mov
xchg
ja
push
dec
js
pop
popa
test
dec
sahf
and
pop
insl
int
xor
xchg
bound
mov
jnp
push
adc
inc
out
push
addb
jo
hlt
push
cmpl
mov
lock
lods
int3
jg
ret
sub
push
dec
fcoms
or
lea
push
sti
rolb
shlb
inc
mov
jg
add
cltd
mov
sbb
adc
sbb
sub
stos
adc
xchg
test
push
xor
inc
out
xchg
fistpl
push
xor
stos
lret
sbb
cmpsb
aad
stos
pop
pusha
pop
rorb
push
push
psrld
adc
lret
leave
xor
pop
addr16
jecxz
inc
pop
dec
cwtl
pop
sbb
les
jne
add
pop
push
aam
test
sbb
aad
cmpb
mov
add
xchg
pop
inc
jne
out
fcompl
and
icebp
xchg
lods
add
mov
test
popf
test
jle
xor
xchg
jns
mov
jl
cmp
cwtl
popf
lods
into
outsl
out
arpl
push
cmp
push
push
mov
and
or
add
cld
adc
inc
xor
and
pop
arpl
inc
into
inc
fildl
jl
fsub
xchg
stc
xchg
dec
fptan
lds
mov
xor
sbb
xor
mov
mov
jne
insb
sub
inc
dec
mov
cmp
gs
cld
int3
aam
inc
or
ja
popf
mov
sub
test
jl
shll
dec
add
loopne
out
les
lods
push
stc
pop
out
jbe
adc
pop
ffree
movsb
arpl
daa
xchg
enter
mov
xchg
jmp
pop
adc
in
test
adc
mov
fwait
aaa
push
jbe
in
xchg
lods
out
stc
iret
repnz
sarb
pop
pop
ret
push
shll
repz
add
cmpsb
icebp
xchg
stos
dec
mov
cltd
divl
je
or
add
fs
mov
lock
fsubs
inc
add
pop
xchg
adc
outsb
enter
xchg
ljmp
xor
mov
int3
bound
fildl
inc
psllq
insl
cmp
sbb
test
mov
rcr
cltd
mull
insl
cltd
test
pusha
pop
imul
cmp
movsl
mov
in
jl
repnz
rcll
adc
mov
mov
pop
inc
mov
or
and
stos
sub
push
clc
mov
lret
mov
int
or
cmp
sbb
lcall
mov
sar
call
adc
and
cmpsl
shrl
popf
lcall
push
repz
xor
xchg
xchg
mov
jbe
pop
cmp
lret
jno
xchg
push
dec
mov
xor
jge
cmp
out
pushf
sbb
xchg
jo
lcall
daa
mov
add
and
jp
jno
cmpsb
mov
push
lods
dec
xor
aaa
jle
push
add
mov
sbb
roll
bound
mov
mov
adc
mov
cmp
leave
sahf
btc
sub
sub
xchg
inc
push
lods
aad
dec
lock
int3
imull
leave
sub
xor
sbb
and
insl
mov
xlat
leave
jle
call
mov
aam
int3
cmp
cli
mov
jecxz
sbb
repz
cmp
xchg
fildll
loope
inc
mov
pusha
out
inc
nop
or
rcrl
sub
out
jecxz
inc
out
cmp
push
fmull
sub
sbb
fs
jo
add
scas
test
movb
stos
ror
idiv
xchg
xor
in
inc
cmc
pop
aam
add
call
pop
test
mov
sahf
loop
subb
dec
and
std
xchg
add
fwait
push
aam
fnstcw
call
adc
xor
xchg
fs
lds
mov
rorb
push
adc
inc
mov
pop
jbe
cwtl
mov
mov
mov
adc
stos
popf
adc
pop
pusha
cmpsl
sub
sbb
dec
pusha
mov
pop
fldcw
out
adc
fldl
mov
jb
out
jb
adc
mov
or
mov
or
in
sub
adc
aad
cmpl
mov
ficoms
movsb
dec
push
and
push
mov
or
je
fidivrl
sbb
enter
aad
mov
lcall
mov
in
es
or
cmpsb
push
or
cmp
into
repnz
cmpsb
add
sbb
lds
faddp
dec
sahf
daa
pushf
push
jl
testl
and
dec
sub
inc
sub
repz
fadds
cmpsb
adcl
in
fnsave
dec
inc
out
mov
or
and
push
test
cld
aam
mov
insl
mov
iret
inc
push
ret
dec
aaa
bound
xor
bnd
cli
and
jnp
push
cmpb
in
pushf
enter
frstor
pop
xlat
sub
mov
push
dec
mov
mov
gs
add
lret
add
push
inc
out
fsubrs
mov
gs
push
rcrb
and
push
xchg
shl
sub
sbb
and
cmp
arpl
sbb
fldcw
sub
test
lods
dec
push
cmp
mov
cmc
cltd
add
repnz
lds
or
daa
adc
mov
inc
or
mov
imul
add
mov
inc
adc
rclb
sub
sub
lods
cmpsb
push
nop
cmp
fdivrp
inc
js
das
jnp
andps
int3
xchg
into
push
aaa
jbe
test
out
icebp
cmpsb
jle
or
daa
jne
push
sbb
inc
in
mov
sbb
pop
imul
inc
popa
and
aaa
das
push
not
and
out
dec
push
pop
popa
fsubl
imul
scas
cmp
gs
jno
mov
fisubs
push
ljmp
mov
mov
adc
cmp
fisttps
lds
sub
push
jmp
and
fwait
push
in
test
adc
pop
mov
mov
cld
loopne
fidivrs
test
ljmp
jg
out
lea
push
movsb
and
adc
or
xchg
ret
ss
jl
das
cld
test
push
lds
xor
stc
pop
icebp
int
rcr
mov
cmp
mov
or
sti
movsb
outsl
int
iret
popa
dec
mov
cld
cs
add
xchg
negb
mov
je
lcall
xchg
es
jne
sbb
out
stos
aaa
mov
stos
push
push
ljmp
daa
and
ret
pushf
mov
sub
into
dec
xor
xor
mov
xchg
in
dec
push
pop
ljmp
rcrb
insb
daa
dec
and
and
in
fiadds
clc
cmpsl
in
xor
mov
cld
insl
push
push
test
mov
bound
mov
jne
jno
xor
xchg
or
jo
int3
cmp
cmp
mov
outsb
push
xor
mov
add
js
sti
pop
dec
xchg
aam
sub
into
lds
push
xchg
mov
cmc
je,pt
in
nop
lock
shrl
insl
or
sahf
mov
cld
lock
adc
cmp
loop
cs
jmp
in
sub
mov
xorl
cmp
cmpsb
popa
lock
sbb
cli
in
xchg
rcl
cmp
mov
cmp
shr
sub
bound
les
roll
mov
ret
push
push
out
and
dec
mov
loopne
and
inc
mov
shl
xchg
pop
or
sbb
push
mov
out
out
jno
inc
das
adc
xchg
xchg
repz
in
jg
cs
jne
xchg
lcall
ljmp
fsubl
inc
loop
xlat
sbb
pop
cmp
test
mov
mov
pop
leave
sti
pop
fsub
in
dec
push
cmp
stos
push
pop
push
xor
data16
and
push
adc
imul
jg
cmpsl
mov
mov
lret
insb
jno
sub
divl
daa
add
jnp
push
sbb
stos
icebp
push
push
adc
mov
pop
add
jmp
aad
lret
loop
xchg
and
push
or
fxch
sub
bound
and
push
sub
pop
or
loope
xchg
test
pop
jp
jmp
fnstenv
aas
mov
cmp
or
xchg
mov
jl
sahf
lods
lods
sbb
xor
aam
outsl
testl
xor
or
add
shlb
push
je
mov
adc
in
xchg
fdivl
adc
shrl
sbb
inc
lock
shl
mov
xchg
jle
mov
stc
lods
add
push
xor
jnp
cmpsl
mov
icebp
cmp
dec
leave
cmp
popf
mov
mov
jmp
mov
inc
shlb
mov
aad
push
jecxz
mov
mov
mov
imul
push
push
hlt
pop
scas
xor
jne
and
cmp
cmpl
push
ljmp
das
call
mov
rcrl
call
int3
orb
jns
bound
addr16
push
jge
repz
ljmp
bound
jle
xchg
test
adc
out
pop
dec
cld
jle
aas
int3
inc
sub
out
int3
outsl
stos
ljmp
mov
pop
idivl
xchg
out
jge
push
getsec
and
addr16
popf
pop
mov
dec
pop
out
dec
or
pop
sbb
add
push
mov
push
or
xchg
push
or
shr
mov
dec
dec
jbe
leave
mov
xorb
ljmp
ret
mov
push
jmp
jp
inc
in
fxch
icebp
test
lods
dec
push
in
sahf
push
sub
add
out
jle
xchg
adc
jle
add
mov
cmpxchg
sub
loope
inc
push
lock
and
and
outsb
mov
sti
sub
add
lcall
or
movsl
inc
pop
cmp
inc
pop
sahf
lds
sbb
mov
jnp
dec
in
in
scas
cld
stc
sbb
testb
mov
stc
out
ds
pop
cmp
add
mov
addl
mov
or
data16
xor
jge
outsb
xchg
cmp
test
mov
nop
shr
icebp
bound
pop
popa
pop
jge
scas
lods
add
xchg
mov
aas
add
xchg
lretw
jl
push
fstl
xchg
lds
imul
sarb
push
mov
aam
dec
inc
lods
aaa
std
inc
popf
jne
sahf
sub
lcall
mov
mov
fstpt
sbb
push
movb
lahf
jbe
inc
lret
cmp
mov
adc
sahf
sti
jle
inc
sti
les
in
jns
cli
and
push
cmpsb
xlat
sub
jae
jns
stos
jne
jns
xlat
hlt
and
dec
daa
aad
inc
sahf
or
sbb
lock
mov
xor
mov
cltd
stc
sbb
dec
cmp
or
pop
pushf
sti
or
loope
ret
xchg
lock
adc
xchg
pop
adc
mov
pop
sbb
mov
mov
add
and
lret
sbb
movsb
jmp
jae,pn
pop
sbb
out
xor
jns
cmp
repz
hlt
std
or
mov
xchg
dec
mov
imul
adc
lret
popa
inc
sarb
bnd
adc
jbe
insb
lret
mov
repz
dec
xor
mov
inc
ret
sbb
fistl
and
pop
out
dec
insl
and
push
aaa
push
loop
hlt
mov
rclb
or
aam
das
pop
dec
rorb
cmpsl
push
adc
mov
mov
sarb
rcl
insb
and
icebp
push
mov
popf
clc
mov
sarb
pop
or
insl
rcll
test
and
mov
xchg
loop
insb
movsl
pop
push
test
lea
dec
cmpsb
jmp
bound
push
imul
scas
mov
cwtl
push
add
xchg
mov
mov
xlat
out
cld
mov
call
out
ret
sub
jecxz
cmp
jno
loop
les
sub
ja
in
or
les
and
cmp
scas
xchg
cli
xor
popf
outsb
addb
and
test
in
sti
nop
scas
adc
in
or
daa
dec
xor
xlat
cld
adc
dec
in
ss
pop
in
clc
lcall
dec
or
jmp
pop
mov
gs
lods
addr16
rorl
fldl
jbe
push
jbe
mov
push
jno
arpl
pop
pusha
dec
int
adc
out
es
add
gs
stos
mov
xor
adc
sbb
aad
daa
or
or
xor
dec
and
sbb
xor
push
mov
jne
pop
testb
scas
stc
push
add
add
ja
xor
repz
out
mov
xor
xchg
int
icebp
lret
jae
push
mov
mov
cmp
aaa
inc
and
dec
pushf
stos
and
out
cmp
movd
jno
fwait
in
divl
loopne
inc
clc
jne
dec
int3
inc
repnz
sbb
enter
daa
fisttps
dec
pop
xchg
pusha
jmp
xchg
bound
std
test
pop
aas
loopne
dec
scas
jg
sbb
push
cmp
jmp
inc
das
dec
pop
aam
dec
and
cwtl
xchg
push
pop
push
xchg
jecxz
push
mov
xchg
xor
mov
inc
pmaddwd
int
pop
xchg
cmp
cmp
cmp
js
fisttpl
data16
cmp
mov
out
adc
ret
mov
roll
mov
xor
mov
push
mov
mov
or
in
pop
inc
jle
cmp
ljmp
xor
mov
mov
jno
idivl
orl
pop
and
test
and
jbe
sub
sbb
xor
push
aaa
sbb
xor
and
dec
orb
mov
js
mov
inc
lods
and
xchg
jge
aad
xchg
mov
lods
ret
cs
mov
popl
jae
std
out
nop
cmc
repz
xchg
push
mov
popa
lock
xchg
mov
xor
and
push
inc
ficoms
xchg
negb
scas
rorl
push
jns
imul
in
mov
jmp
push
mov
imul
lcall
xchg
cmp
mov
inc
jno
push
stos
inc
mov
test
rcl
adc
repz
pop
push
in
jnp
stos
xor
add
xor
fnstsw
je
in
sti
sbb
popf
loop
out
cmp
lcall
mov
jnp
adc
clc
mov
sarb
mov
fldt
mov
in
xchg
aad
repz
loop
rcll
fsubs
xchg
nop
ret
gs
push
sbb
fstpl
lods
jecxz
ret
mov
mov
fstps
jp
scas
adc
cmp
jne
ss
dec
xchg
ss
cmc
adc
shr
pop
icebp
dec
jmp
sub
mov
cmp
clc
xor
jns
ds
inc
pop
or
dec
fimull
addr16
sbb
xchg
mov
sub
cmp
dec
insb
xchg
push
sbb
jae
pushl
out
in
push
lds
dec
pop
pop
cmp
jmp
jecxz
or
xchg
adc
addr16
fmuls
sub
xchg
adcl
sahf
mov
outsb
jns
mov
rclb
jg
push
inc
xor
adc
sahf
int
cmp
pushf
fldln2
pop
mov
cli
int
xor
pop
jmp
movsl
sbb
fst
cmc
xchg
repz
sub
xor
aaa
nop
xor
xchg
pop
jbe
ficoms
cltd
xchg
add
int
xlat
mov
pop
aaa
jne
test
push
scas
inc
pop
js
pop
in
push
xor
xor
mov
inc
push
scas
jnp
mov
jge
mov
push
pop
pop
jmp
ficompl
jae
mov
dec
dec
push
xchg
xchg
cmpsl
xchg
xor
ds
push
sbb
xchg
jmp
xchg
stos
shll
xchg
inc
add
adc
push
adc
and
adc
dec
rcrb
fidivl
lock
jecxz
mov
pop
sbb
cld
fucomi
pop
push
movsl
xlat
ds
nop
dec
cltd
sub
dec
pop
xchg
and
data16
clc
cli
push
mov
in
fldz
sub
data16
test
pop
out
hlt
movsb
mov
cltd
push
in
xchg
out
fimull
into
cmp
dec
mov
mov
cmp
int3
dec
ja
sbbb
or
into
mov
ja
pop
imulb
outsb
fsubr
mov
or
fisttpl
std
iret
inc
test
sub
pop
ljmp
push
insb
or
icebp
inc
in
push
test
adc
push
andb
inc
dec
xor
or
pusha
imul
out
ficomps
mov
mov
inc
mov
test
incb
out
inc
outsl
push
inc
adc
jno
adc
xchg
mov
xchg
cmp
sbb
mov
cld
and
ret
sub
push
add
push
xlat
out
std
shlb
push
in
std
jne
push
fdivrl
sbb
add
mov
cmpsb
pop
shrb
jge
inc
das
sbb
sbb
dec
pop
les
movzbl
inc
hlt
bnd
and
lret
sub
sub
mov
loopne
inc
daa
movups
fildll
mov
or
push
push
fcmovnb
imul
and
into
jg
push
and
es
push
pop
hlt
ja
adc
mov
sarl
ja
push
sbb
leave
outsl
ss
ds
insb
sub
xchg
lahf
in
push
xchg
int3
cmp
aad
cmp
imul
mov
xchg
js
loopne
movsl
mov
cmp
jle
inc
lret
cli
stc
stc
mov
adc
mov
inc
movsb
xor
push
out
jg
jp
hlt
jge
out
ret
fwait
sub
add
push
jnp
les
cmp
mov
sarl
xchg
daa
pop
gs
xchg
mov
mov
in
xchg
mov
out
fbld
xchg
xchg
test
pushf
jl
mov
mov
bound
lock
ja
fsubrl
push
rorb
push
out
dec
stos
imul
and
push
or
inc
jp
dec
jmp
fmull
cmp
jbe
sbb
inc
pop
aas
inc
jmp
sbb
cmp
mov
jp
out
outsl
scas
xor
dec
xlat
cmp
mov
movsl
mov
enter
leave
push
movsb
jnp
or
jns
arpl
popf
outsl
or
add
mov
stc
xor
jae
and
scas
fcmovne
pop
das
or
pop
sarb
or
stc
dec
mov
test
cmp
cmp
xchg
insb
mov
push
mov
ds
fwait
pusha
fisttps
out
dec
inc
call
hlt
inc
aaa
xchg
cmp
mov
ret
daa
pop
lret
nop
push
std
xchg
fisttps
pop
leave
dec
lods
jns
and
xor
loope
push
cs
sbbb
dec
popa
cmp
mov
popl
jge
inc
les
adc
filds
lea
lret
push
push
mov
jge
imul
sbb
or
insl
sbb
jmp
inc
insb
dec
xchg
jecxz
aad
aaa
pushf
push
mov
push
push
mov
pop
imul
mov
rorb
mov
push
pusha
icebp
loopne
insb
sbb
jl
subl
movsl
inc
out
cmp
xor
push
bound
xor
or
dec
hlt
stos
out
add
lret
fstp
lea
jg
add
or
sub
fsts
loop
jbe
push
aad
adc
es
insb
mov
jae
xchg
sub
mov
out
lret
xchg
je
mov
push
aaa
mov
jl
js
in
pop
stos
lds
in
in
stos
and
ds
scas
cmp
mov
ds
int
fbld
xchg
loop
xor
fisttpl
sbb
cmc
mov
adc
aas
xorl
mov
lret
mov
cmpsb
push
data16
vunpckhps
dec
pop
popf
stos
idiv
out
push
insb
ja
in
lret
pop
cs
fadd
mov
mov
xchg
ss
pop
ljmp
pop
test
or
dec
outsl
test
jg
adc
and
out
pop
daa
or
lret
test
das
movsl
pop
jns
dec
lret
ja
or
pop
adc
das
loop
test
mov
dec
mov
pop
mov
es
cmp
iret
inc
test
fcompl
lds
mov
pop
jg
addr16
out
pop
lds
hlt
and
in
xor
int
xorb
mov
les
dec
dec
inc
js
fincstp
xor
cltd
or
out
push
test
in
adc
xchg
insl
imull
lock
bnd
leave
push
repz
jnp
jo
mov
xor
loop
aad
popa
stc
in
push
xor
mov
cmp
jge
shll
sbb
push
imul
fnstenv
push
test
out
cmp
mov
cmpsl
jmp
iret
and
mov
in
lea
fdiv
ficomps
mov
cmp
xorl
push
cs
sbbb
mov
push
or
push
lds
repnz
test
or
fldcw
xchg
movsb
inc
xchg
and
inc
cmovae
pusha
arpl
daa
lock
sbb
and
popf
jl
add
neg
sub
into
test
xlat
cmp
test
cmp
enter
pop
test
xchg
push
mov
mov
jg
dec
shrl
pop
and
imulb
ss
testl
popa
flds
dec
xlat
fdivrs
lcall
mov
or
xchg
xor
rorb
aaa
push
lahf
orb
sub
sub
loopne
push
dec
xlat
je
or
in
cmp
xor
push
lea
jno
rolb
sub
fwait
call
ljmpw
pop
out
ret
or
dec
sti
adc
jecxz
in
xchg
pushw
enter
stos
stc
fcmove
out
dec
pusha
out
sub
imul
loopne
adc
cmp
sub
dec
xchg
pop
loope
push
aas
mov
imul
js
scas
test
je
pop
pop
ja
add
insl
inc
or
dec
loopne
jp
lcall
sbb
or
leave
aas
icebp
sub
mov
sahf
clc
mov
sti
out
jl
jne
in
dec
xchg
xchg
aaa
cmp
lret
popf
or
iret
stos
dec
xchg
adc
decl
cmpb
mov
jge
jge
int
jb
cmpsl
cs
push
sbb
stos
in
cmpl
shld
test
adc
sbb
pop
push
rorb
mov
xadd
cmpsl
inc
rcr
jmp
push
sbb
in
icebp
fcomip
push
cwtl
dec
out
or
loope
ds
sub
cmp
loope
pushl
and
push
sub
movsl
cmp
mov
insl
test
dec
clc
es
jae
loope
std
int3
and
pop
pop
and
aaa
lret
jge
push
fsubs
rolb
xchg
push
sbb
xchg
add
mov
loopne
push
lahf
std
aaa
sbb
ljmp
sub
outsl
pop
fmull
add
fcoml
cmp
dec
xchg
pop
cmpsl
cmp
aad
insl
add
mov
sub
pop
and
jmp
or
xchg
out
insl
idivl
clc
or
sub
dec
mov
das
and
push
jmp
data16
sahf
lahf
jne
lea
mov
pop
lds
sbb
and
in
fldcw
or
and
mov
push
scas
clc
cmp
jl
add
aam
push
in
subb
les
ds
mov
or
or
xchg
je
xchg
fnstenv
jg
or
cmp
add
adc
xchg
test
pop
sbb
daa
int3
lods
addr16
mov
push
data16
mov
mov
sarl
and
push
testl
mov
pop
jge
and
iret
jp
mov
sub
sbb
pop
stos
ja
jbe
xor
imul
rclb
scas
lret
mov
je
pop
mov
sti
lret
imul
lea
sbb
ss
cmp
pop
imul
imul
mov
arpl
sub
mov
or
pop
sub
cmpsb
arpl
cmpsb
xchg
out
mov
sbb
pop
imul
mov
jp
add
jb
inc
testb
test
cs
movsl
fs
xchg
outsl
rcl
push
loopne
push
inc
arpl
jne
lods
sub
cld
push
arpl
dec
xchg
xchg
xor
cli
out
sbb
div
pop
repnz
fisttps
mov
jmp
push
push
cltd
subb
pushf
pop
arpl
mov
xchg
or
lret
adc
std
test
scas
sahf
and
inc
and
sub
stos
dec
xchg
sar
xchg
sbb
and
call
adc
jl
or
inc
push
mov
sub
lret
ffreep
in
xchg
cmp
dec
jnp
enter
iret
add
loopne
loopne
imul
xchg
jge
fucomi
add
jg
or
pop
stc
mov
mov
jle
dec
mov
cwtl
pop
in
pop
and
arpl
mov
fldenv
sbb
out
je
mov
leave
mov
inc
lahf
sub
call
add
jno
or
ret
dec
add
in
fs
and
cltd
aas
dec
xorb
pusha
mov
cli
push
lcall
icebp
loop
or
cmp
and
and
inc
repz
cmpsl
add
mov
xor
pop
aam
movsl
push
fisttps
adc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
inc
inc
data16
scas
lret
enter
jecxz
ds
iret
sub
enter
or
shll
dec
jb
inc
sbb
and
ss
stc
sub
mov
sub
ret
in
enter
ss
jo
out
push
mov
pusha
push
sbb
inc
je
push
sub
and
mov
loop
cwtl
movl
and
sbb
and
push
lds
xchg
cmpsb
pusha
and
inc
es
out
jo
push
dec
inc
xchg
repnz
add
jge
hlt
cmpsb
stos
push
sti
pop
popa
mov
pop
inc
sub
adc
inc
push
sub
or
sub
or
push
mov
dec
mov
pop
stos
dec
inc
jl
xor
xchg
stos
scas
icebp
sbb
pusha
jae
aas
or
std
fs
scas
mov
fistpl
fbstp
push
push
cmp
cmp
aas
js
inc
jbe
out
cmp
pop
test
mov
das
dec
out
add
popa
fmul
and
pop
cmp
ret
push
mov
icebp
mov
xchg
lret
jo
add
jns
pop
xchg
insb
dec
mov
stos
mov
push
pop
in
outsb
out
repz
push
psraw
dec
fsts
mulb
add
sysenter
add
ljmp
mov
jne
ljmp
cs
jge
mov
sbb
jecxz
aad
js
pop
scas
arpl
push
adcb
in
mov
mov
jge
hlt
mov
out
dec
inc
imul
popa
bound
flds
in
mov
xor
add
jno
hlt
pop
aas
mov
mov
jns
cmpsl
repnz
repnz
adc
stos
mov
in
cmp
sbb
cmpsb
xchg
dec
adc
mov
sub
popa
xchg
mov
test
iret
add
mov
dec
or
roll
jl
fistpl
arpl
fpatan
mov
push
shl
loopne
pop
jp
loop
xor
mov
push
sahf
sbb
mov
clc
sub
xor
out
sar
fstpt
xchg
les
call
and
int3
mov
dec
pop
xchg
push
loope
in
mov
int3
cmpsb
mov
notb
gs
mov
fsubs
sub
adc
jge
imul
cmpsb
das
imul
fisttpll
pop
pop
icebp
insl
xchg
jge
je
gs
mov
pop
pop
sub
je
rcrl
mov
cmpsb
xor
mov
xchg
js
jbe
inc
add
jmp
icebp
mov
add
and
inc
sbb
sahf
inc
xor
fs
mov
mov
lret
mov
sar
sti
daa
rcr
lret
dec
loope
addl
and
popa
adc
sbb
int3
arpl
fwait
dec
cmp
das
sub
jns
insb
call
xor
fwait
and
push
push
popf
cmp
cld
mulb
xchg
xor
pop
cmpsl
xchg
insl
jp
ss
jp
mov
push
mov
jp
jge
stos
add
inc
loop
hlt
fwait
cmpsb
adc
fwait
xchg
ss
stos
jo
cmp
repz
lock
xchg
fsubs
sbb
cmpsl
inc
or
scas
test
in
mov
ljmp
dec
and
xor
push
cmp
mov
jle
movsl
push
push
and
cmp
mov
jbe
mulb
loopne
push
subb
xchg
xchg
cmpsl
mov
push
add
push
or
pop
or
shrl
mov
xor
dec
inc
push
int
into
push
cmp
jp
je
mov
jne
sub
xchg
jae
add
repnz
loopne
dec
and
rclb
sbb
imul
sbb
lods
adc
or
sahf
cmp
iret
arpl
pop
aad
sahf
pop
push
or
push
jbe
les
or
idiv
out
sarw
add
fisttpll
scas
xchg
mov
mov
lret
insl
add
jne
dec
into
fildll
xor
stos
repnz
lret
sub
rclb
sub
je
test
rol
xor
and
mov
inc
test
pop
sbb
xor
repz
lret
mov
jbe
mov
mov
push
lret
mov
xchg
add
xor
imul
sarb
aaa
ret
mov
test
adc
negl
and
daa
mov
jmp
mov
es
arpl
adc
rorb
and
or
push
into
mov
aas
fnstcw
push
mov
sbb
xchg
insl
sub
movsb
and
fs
inc
sbb
idivb
xor
outsb
jno
stos
lcall
sub
out
mov
mov
gs
mov
rorl
pop
pop
in
sub
lds
sub
das
out
fsts
adc
xchg
or
mov
inc
sub
push
or
jno
lahf
push
jp
lds
es
insl
clc
sub
roll
jg
stos
imul
mov
mov
sbb
lret
jl
lds
lahf
push
arpl
xor
std
or
or
cwtl
ss
jne
out
adc
into
xor
jp
jmp
push
out
ret
ret
gs
xchg
xor
pop
movsb
aam
push
in
dec
add
cmpsb
outsl
aas
mov
cmp
dec
jo
cltd
repnz
cmp
or
cmp
gs
xchg
mov
dec
push
inc
lahf
int
sub
cmp
mov
mov
je
das
and
mov
mov
add
ret
insl
xor
inc
inc
mov
push
dec
and
bound
test
cmp
out
stos
and
adc
add
pop
mov
push
inc
ficomps
loope
dec
mov
jmp
lea
push
dec
imul
dec
jge
mov
push
aam
cli
movsb
fldl
loopne
ret
cmp
add
int
out
cltd
cld
adc
xor
loope
push
movsl
or
sub
push
xor
loop
icebp
fdivl
les
in
or
adc
xchg
mov
in
dec
or
and
incl
test
mov
orl
lret
lcall
jle
sbbb
dec
push
adc
test
pop
js
xchg
leave
cmp
inc
or
xchg
insb
loopne
repz
out
pop
aaa
dec
xorl
imul
stos
test
xchg
and
hlt
push
idivb
daa
or
cmp
bound
adcb
daa
fmull
repnz
mov
push
in
mov
xchg
sub
in
push
xchg
test
rorl
adc
xchg
rcrb
sub
loop
mov
adc
add
push
jmp
and
ficomps
nop
mov
and
jae
adc
cmpsl
and
sahf
add
shlb
pop
adc
sahf
xchg
ljmp
mov
es
xchg
daa
add
pop
mov
add
shl
jp
xor
out
and
addr16
mov
sar
add
dec
mov
push
or
and
cmp
push
push
leave
jmp
mov
inc
push
ss
push
inc
test
fwait
rcl
sbb
sub
sub
pop
cltd
or
aam
shlb
fmul
in
out
cli
xor
ds
push
push
leave
xchg
shl
pop
outsb
push
dec
das
int3
push
icebp
in
out
mov
fldl
sub
pop
sahf
jne
js
xchg
rsqrtps
jge
les
pop
sarl
pop
sbb
movsb
or
jo
mov
or
int3
imul
or
push
bound
jg
bound
test
jg
movsl
jge
sbb
pushf
mov
sarl
pop
mov
sub
jne
jmp
dec
mov
pushf
sbb
dec
mov
cmpsb
or
cmp
or
popf
popa
rcl
sahf
mov
outsl
sbb
out
jp
pushf
push
or
xchg
in
add
or
fdivs
pop
inc
inc
xchg
jae
or
adc
cmp
mov
push
dec
testl
pop
or
dec
xor
xchg
std
pop
or
sahf
and
icebp
std
sahf
cmp
sbb
ljmp
mov
imul
das
shlb
inc
xchg
loop
jnp
jnp
jne
inc
xchg
add
push
push
aam
pop
pushf
or
sbb
sbb
push
and
and
add
inc
jmp
dec
movsl
aaa
inc
add
imul
mov
lods
add
stc
call
and
lds
ljmp
aas
leave
insb
int3
dec
leave
xor
out
jp
mov
or
cmc
or
pusha
jae
adcb
xchg
adc
das
xchg
jl
mov
xchg
xchg
mov
pop
sub
movsb
clc
pop
sbb
ret
iret
icebp
sub
xor
mov
test
mov
aaa
mov
mov
dec
mov
push
cmp
pop
popf
imul
jmp
push
clc
lret
loope
ret
lods
negb
fidivl
test
out
xorb
into
push
sbb
add
addb
imul
iret
cltd
mov
fildl
push
shl
push
test
xchg
jl
jg
xchg
mov
jge
mov
mov
inc
cmpsb
iret
jno
sub
xor
pop
cmp
inc
leave
jp
ror
subl
les
add
sub
loop
mov
aaa
cmpb
adc
mov
jg
jb
push
xchg
cwtl
or
sti
jo
lods
aad
std
adcl
lcall
punpckhdq
jb
add
ss
movsb
cltd
je
mov
inc
inc
push
mov
fwait
xchg
xor
sbb
pop
popa
sbb
lret
in
dec
ljmp
lock
mov
sbb
jo
jbe
outsl
dec
sahf
movsl
clc
pop
test
xchg
fcmovnbe
jmp
insl
popa
das
mov
mov
adc
loop
test
mov
mov
ret
mov
sbb
push
sbb
rclb
fisubl
loopne
cld
sbb
je
or
mov
ljmp
xchg
push
and
fisttpl
je
push
cmpsw
ja
inc
jno
pop
sti
mov
mov
mov
outsb
adc
inc
lcall
scas
cmp
dec
scas
incb
cmp
mov
push
cmc
rorb
nop
jle
mov
and
fstps
sub
hlt
and
inc
outsl
aas
int3
ljmp
out
dec
fdivrs
xchg
sbb
aam
xchg
cltd
xchg
pop
fwait
rolb
rcll
push
inc
add
mov
cmp
jl
es
movsb
mov
inc
imul
sbb
lds
int3
sbb
adc
xchg
mov
or
add
jmp
leave
or
stos
dec
out
xchg
adcb
jno
bnd
out
xor
pop
es
jle
std
stc
push
arpl
cmp
mov
ds
rcr
mov
xchg
stos
mov
or
mov
adc
fs
jp
daa
femms
mov
movsl
or
xchg
push
mov
cmp
cmp
adc
cli
stos
aam
loopne
jnp
mov
subl
les
out
or
mov
inc
mov
dec
mov
dec
mov
pop
addr16
rcll
shrb
push
xlat
sub
arpl
add
or
push
cltd
sarb
test
pusha
inc
icebp
push
jb
push
adc
imulb
lcall
pusha
sbb
stos
frstor
cld
or
imul
or
pop
fadd
adc
jp
aad
adc
push
popf
mov
pop
push
add
in
mov
jne
outsl
xchg
xchg
outsl
loop
in
inc
int3
adc
jb
in
dec
xchg
jp
out
shlb
xchg
mov
addr16
push
adc
xor
rcl
push
je
les
or
sbb
sbb
sub
flds
mov
mov
bound
aas
out
ret
mov
out
iret
xlat
enter
out
xor
mov
push
sbb
in
ret
push
push
cld
stos
push
sbb
mov
in
inc
dec
int
xor
or
dec
jmp
mov
push
jo
cmp
int3
int3
popf
into
les
popf
insl
xor
mov
icebp
dec
fdivr
leave
cmp
fisubrl
push
or
push
cmp
xor
jmp
fcmovbe
aaa
or
mov
fstl
or
and
aam
pop
scas
xor
outsb
mov
fisubrl
lods
insl
shrl
push
fstps
pop
jnp
movsb
cmp
pusha
bsr
pushf
rol
pop
mov
enter
push
pop
mov
lods
sbbl
dec
add
add
or
sub
mov
lds
mov
pop
adc
leave
jns
mov
jecxz
push
iret
xchg
jae
xchg
call
movl
mov
xor
or
jmp
cmpsl
add
mov
imul
rcr
popa
inc
mov
sub
jnp
call
fs
dec
inc
dec
jae
mov
roll
ret
int
dec
aas
fisubrl
mov
dec
push
xchg
dec
fmul
xor
dec
pushf
pop
jne
in
out
movsl
lods
out
fwait
or
jns
je
fldt
sahf
pop
stos
rcrl
dec
push
insb
mov
pusha
scas
stos
repz
mov
xchg
sub
js
rolb
shrl
mov
pop
repz
imulb
loopne
fadd
push
fildll
mov
mov
lcall
sarl
int3
enter
cmpsl
or
xor
and
sbb
lret
js
mov
das
es
mov
push
push
xchg
aaa
add
push
jae
adcl
loop
fldcw
enter
fbstp
shrl
stc
xchg
dec
add
fcoml
cmp
movsl
hlt
add
mov
adc
mov
aas
push
inc
pop
push
and
sbb
push
sub
int3
mov
sub
push
movsl
test
push
mov
pop
nop
jne
mov
push
lock
jne
ror
add
fcoms
lods
inc
inc
popa
push
cltd
add
push
aam
rcrb
jne
jl
js
clc
subl
rcl
int
lods
fnstenv
adcb
sbb
push
push
stos
sarl
mov
cli
rorl
or
adc
adc
cmp
imul
mov
cmp
xchg
xor
jns
jb
add
aam
cmp
fbstp
push
idivb
add
ret
cld
fdivrl
adc
nop
cmp
aad
jae,pt
inc
mov
aad
add
popf
pushf
jns
and
adc
test
cld
and
dec
xor
inc
cmp
jo
push
arpl
cmp
icebp
push
xchg
pop
test
andl
outsb
add
shll
xchg
push
lcall
and
ss
lahf
loope
sarb
jno
sbb
add
or
mov
arpl
jns
in
xchg
xchg
dec
popf
xchg
adc
imulb
ret
inc
ja
int
adcl
sbb
inc
enter
pusha
mov
pop
dec
cli
stc
cwtl
clc
jnp
xchg
sub
mov
pop
pushl
mov
sbb
cmp
xor
push
shll
mov
lahf
add
ftst
push
mov
and
cwtl
xlat
ds
fistpll
adc
ret
add
mov
xor
fisttpll
fistps
push
mov
fidivl
mov
adc
xchg
add
testb
xor
pop
sub
push
dec
sbb
icebp
and
loop
fwait
mov
xor
repnz
and
or
shr
pop
aaa
dec
ffreep
rcrl
dec
popf
in
int3
fcmovu
or
mov
pop
push
or
or
xorb
pop
scas
mov
dec
enter
pop
jl
daa
lea
inc
lcall
dec
cmp
cld
pushf
lahf
sbb
rclb
and
lds
mov
idivb
enter
or
rclb
out
inc
scas
mov
scas
daa
pop
mov
testb
add
fiaddl
sti
subl
push
fnstcw
test
cmp
mov
repnz
pop
push
js
jmp
jle
psraw
jg
stc
and
xchg
nop
push
xchg
xor
push
pminub
lods
xor
pop
clc
test
jo
push
addr16
push
push
shrl
shl
das
pop
xchg
stc
call
std
out
in
fwait
jl
jmp
stos
rcl
add
jae
jae
lahf
jno
aam
cmp
movsl
test
mov
jne
lret
in
jmp
lods
int
pushf
mov
xchg
clc
mov
sub
test
mov
mov
adc
mov
cmp
test
xor
out
xchg
jnp
ficoml
arpl
in
push
inc
bound
rcrb
insb
xor
mov
pop
cmp
lods
adc
xor
int
jb
enter
push
mov
mov
and
test
rorb
jnp
and
stos
shlb
ltr
mov
and
fisttps
sub
test
fwait
test
lahf
push
xchg
push
add
or
dec
add
dec
jo
push
push
mov
mov
jns
xlat
mov
sub
lock
hlt
inc
cmpsl
stos
sbb
lea
push
cwtl
xor
cmp
jecxz
addr16
sub
enter
dec
xor
fdivs
into
hlt
dec
mov
and
dec
jne
inc
inc
pop
add
je
adc
fstpl
cmp
dec
inc
lods
mov
mov
lahf
sbb
rcrl
mov
idivb
mov
loope
pop
inc
cmpl
cmp
pop
test
lcall
incb
sar
cmp
mov
xchg
sbb
test
data16
dec
pop
scas
out
repnz
mov
adc
push
lock
or
std
jmp
mov
out
inc
or
jns
inc
and
mov
test
enter
pop
jl
jl
dec
jae
insl
add
inc
fisttpl
movsl
cmpb
loop
andb
enter
xchg
pop
daa
jns
sbb
hlt
mov
sbb
jns
xchg
outsl
adc
push
inc
insl
in
int3
outsl
das
push
push
fst
push
cmpsl
loop
add
mov
dec
das
sub
cli
push
xchg
pop
es
pushl
sub
dec
inc
out
mov
jmp
fsubrl
out
divl
stos
adc
movsl
mov
adc
cmp
xchg
xor
ds
arpl
inc
xchg
or
lret
jne
push
stos
mov
shl
xchg
gs
outsl
xorl
sub
sbb
clc
cld
in
xor
inc
sbb
aad
les
decl
pop
int
mov
sub
push
and
icebp
inc
push
pop
pop
mov
aas
pop
bound
out
mov
mov
push
dec
lahf
dec
lods
jns
outsl
push
mov
jb
cmpsl
arpl
xchg
pop
add
mov
inc
and
mov
sub
jmp
ja
adc
aas
mov
lcall
mov
dec
xchg
jl
cmpsl
js
lret
jmp
fistpl
dec
add
inc
stc
jle
out
lds
sahf
and
lds
adc
icebp
movb
push
inc
cwtl
or
cwtl
popa
cmp
iret
stos
or
dec
sbb
xor
mov
xchg
test
rcrb
cmc
ja
repz
shll
inc
xor
jmp
imul
inc
inc
cmp
or
fcoml
pop
dec
push
cmp
fstps
mov
push
bnd
mov
sahf
aaa
scas
xchg
ja
dec
lret
fists
pop
subl
decl
inc
add
or
and
sub
dec
negl
ficompl
cmp
cmpsb
push
cmp
loop
not
je
mov
pop
dec
or
sarl
pushf
popa
pop
adc
dec
int3
inc
outsb
stos
inc
cmp
pop
sbb
test
or
pop
insb
push
sub
bound
jecxz
sti
push
faddl
push
push
adc
mov
push
out
daa
mov
and
imul
mov
sub
pop
cmp
addr16
mov
mov
ret
mov
mov
jmp
pop
xor
ret
adc
loopne
movsl
test
mov
out
ret
cmp
out
cmp
lods
adc
mov
sti
sub
ds
aas
push
jno
fwait
mov
fs
cmp
dec
ss
push
test
cmp
repnz
dec
rcll
lds
inc
imul
xor
fistps
icebp
ss
lock
mov
jmp
stos
xor
sbb
inc
pop
test
add
sahf
das
outsb
push
and
outsl
addb
andl
xchg
lods
fcmovnu
cwtl
mov
repnz
jl
dec
pop
stc
add
inc
stc
insb
inc
sbb
fdivrp
mov
jne
or
push
xor
dec
mov
jne
insb
or
neg
stos
jle
dec
push
xorl
mov
outsl
or
xor
stos
out
jge
icebp
sbb
jno
jecxz
cmc
cmp
mov
mov
mov
dec
sub
gs
test
jmp
or
popf
out
push
ds
icebp
mov
cmp
in
push
mov
sbb
lea
xchg
xor
pop
mov
or
imul
jg
clc
jb
mov
or
cmpsl
mov
cwtl
mov
inc
mov
xor
xor
mov
mov
or
testb
loopne
es
adc
aam
pop
push
stc
push
and
mov
ds
paddq
mov
outsb
mov
mov
mov
push
add
cli
dec
out
mov
sub
hlt
xchg
cli
cmp
push
mov
inc
sbb
pop
addr16
insb
or
xor
xchg
cmp
xor
or
dec
mov
dec
jb
mov
imul
xchg
push
fs
adc
push
sbb
es
js
lds
pop
inc
adc
dec
add
pop
js
rolb
xor
sbb
dec
xchg
jmp
push
sub
pop
and
push
in
mov
das
mov
pusha
in
inc
mov
inc
inc
sbb
mov
adcl
xchg
movsb
jo
ret
push
test
push
lods
push
dec
outsl
jl
fistps
xchg
repz
mov
jno
adc
daa
mov
jb
mov
adc
jl
ret
inc
lods
jno
and
icebp
data16
push
in
sti
out
jb
test
or
add
jecxz
lods
mov
mov
cmp
sbb
or
lds
cmp
add
xchg
fwait
not
jl
push
push
sbb
add
mov
sahf
push
in
pop
xchg
jl
stc
xor
pop
in
sahf
push
shrl
fdivs
add
sti
or
mov
sar
dec
data16
popaw
and
mov
inc
xor
sbb
mov
into
shl
jb
xor
mov
test
add
cmp
mov
xchg
push
sbb
std
sub
gs
popa
adc
out
scas
imul
rorl
and
inc
scas
push
mov
inc
movsb
adc
je
es
ja
mov
lock
push
mov
mov
fistpll
jg
ja
repnz
outsb
fwait
push
mull
mov
ret
lods
mov
int3
push
dec
ror
jg
mov
xor
mov
mov
xchg
adc
std
and
mov
or
loopne
aas
imul
cli
push
scas
push
and
pusha
imul
xchg
mov
fistps
adc
sub
pop
add
sti
mov
cmp
dec
mov
imul
mov
test
ja
push
sbb
out
lock
mov
push
ljmp
scas
roll
push
push
or
test
fcomp
sub
inc
rcl
clc
std
push
stc
mov
dec
out
ret
sub
aad
xchg
or
sbb
aad
or
out
sub
cmp
pusha
push
cmc
enter
push
jp
popl
loope
sub
jl
pop
cmp
mov
push
aad
imul
shlb
cld
vmovups
subb
xor
mov
scas
data16
add
adc
or
lret
inc
and
ret
xchg
xchg
ljmp
cs
aam
ds
push
mov
push
xchg
or
xor
add
pop
imul
mov
scas
push
mov
sahf
insl
test
mov
je
push
pop
and
xchg
and
outsl
std
mov
pushf
dec
or
stos
shr
les
loopne
mov
ret
in
mov
fcompl
pop
xchg
push
adc
cmp
and
pop
xor
sub
insw
jle
xor
sbb
adc
add
gs
ret
movsl
adc
mov
pop
add
inc
cld
xor
push
stos
fcompl
ja
cmp
jle
or
loop
mov
lods
sbb
sbb
mov
out
mov
inc
xor
mov
ret
cld
shl
or
and
sbb
out
dec
adc
int3
xchg
dec
inc
pusha
mov
xor
test
jb,pt
dec
bound
sub
jmp
jecxz
ljmp
jb
push
lods
and
dec
hlt
adc
adc
adc
mov
sahf
jbe
cmpsl
mov
add
adc
inc
fldt
aaa
lret
out
outsb
in
leave
xchg
icebp
jp,pn
jns
lcall
adc
lock
and
scas
repz
mov
sub
jp
mov
out
movsl
in
push
push
add
lods
jne
stos
jp
inc
ljmp
sub
hlt
fs
into
into
outsb
adc
push
xchg
shrl
push
shrl
mov
sahf
in
xchg
in
sub
aas
adc
outsb
cld
ss
xchg
data16
jne
fildl
cmpb
out
repnz
jbe
ret
sbb
je
int
push
xchg
into
push
sbb
in
shl
pop
clc
rcrb
mov
in
adc
je
fcoml
mov
dec
adc
mov
in
mov
inc
jns
xchg
mov
xchg
in
mov
cmp
daa
fiadds
sti
mov
arpl
jae
sub
stos
pop
mov
fdiv
test
cmp
or
inc
mov
cmp
cmovs
scas
aaa
dec
outsb
dec
mov
xchg
add
sahf
xchg
stos
icebp
jns
outsl
addb
test
cmpsl
adc
inc
dec
pop
dec
test
add
cwtl
popa
lahf
testb
data16
fdivrs
fistps
cltd
and
ljmp
dec
jge
icebp
add
sbb
mov
add
push
xchg
fucomip
fisubrl
adc
loopne
dec
jb
inc
sbb
push
testl
or
sbb
xchg
lea
mov
fisubl
jl
fdivl
aad
out
jge
pushw
enter
imul
into
fimull
add
mov
jg
inc
sahf
cld
pmaxsw
mov
das
sub
adc
repz
mov
bound
inc
xchg
xchg
or
cmpsb
jge
sub
jecxz
rcll
stc
sbb
ss
mov
dec
push
lcall
mov
jmp
daa
shlb
jecxz
mov
mov
andb
mov
ds
cmc
add
cltd
pop
out
ret
test
lahf
push
jp
add
sub
pop
adc
scas
repnz
push
dec
jb
out
jge
gs
lcall
and
stos
jl
push
add
push
sbb
xchg
jecxz
lcall
jne
scas
rol
jmp
pop
mov
pop
popf
into
dec
sub
xor
rolb
loope
mov
pop
out
dec
xor
and
mov
push
loop
jmp
cmp
in
pop
add
or
mov
cmp
jle
mov
ljmp
mov
push
xchg
cmc
out
fsubrs
xchg
jmp
xor
jno
std
or
pop
mov
cli
xchg
add
push
adc
adc
inc
mov
jae
pop
movsl
inc
test
jae
aas
inc
subl
cwtl
stos
test
cmpsl
out
cmc
inc
ret
push
push
scas
push
dec
test
sbb
insb
test
xor
mov
push
inc
inc
xor
shrb
negb
xor
js
leave
cmp
das
inc
cmp
jb
fmuls
adc
cld
mov
addr16
loope
testb
inc
aad
mov
inc
rclb
adc
push
nop
ss
mov
dec
add
inc
inc
push
fstps
aas
lods
lea
add
shlb
movsb
adc
movsb
pop
mov
cmp
cmp
jg
test
sarb
mov
faddl
inc
mov
fidivs
je
mov
sub
jo
inc
dec
push
jnp
pop
mov
push
jg
orb
pop
mov
push
loope
mov
std
in
cmp
cmc
mov
rorb
xchg
xor
sbb
jmp
pop
pop
add
stos
fldt
repz
int
movsl
mov
pop
stos
cmp
stos
mov
cmp
sbb
sub
aaa
aam
int3
cmpsl
xor
test
push
inc
fimuls
scas
jl
mov
aaa
cmp
adc
add
add
data16
fs
les
aaa
mov
mov
sbb
hlt
mov
xchg
arpl
push
mov
or
pop
inc
sbb
dec
rorb
add
sub
jno
loop
jecxz
popa
out
or
insb
pop
inc
add
popa
pushf
dec
xor
lods
cmpsb
cmp
mov
ds
mov
and
scas
pop
rolb
jbe
mov
out
fcoml
mov
push
stc
cmp
cltd
das
mov
popa
repnz
insb
iret
hlt
out
mov
mov
dec
and
pop
test
in
mull
add
cmc
push
add
xchg
jo
movsl
mov
cmp
das
xchg
push
mov
jmp
pop
mov
sub
adc
push
ret
test
in
cmp
in
fxch
sub
lea
jns
jns
or
sub
pop
loop
push
xchg
inc
xchg
out
movsb
lock
mov
jns
mov
and
cli
push
pushf
dec
jb
or
jnp
scas
jmp
cmp
mov
jae
lret
jl
lret
push
or
addr16
add
lret
das
sbb
mov
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
push
shlb
hlt
pop
bound
sub
inc
xchg
push
lods
inc
call
fcoms
mov
sub
imul
aad
sahf
inc
push
mov
mov
push
sub
xchg
adc
sub
dec
clc
outsl
inc
mov
adc
sbb
jp
insl
add
loop
jecxz
sti
cmpb
xor
lcall
arpl
pop
sub
int3
stc
scas
shrb
adc
adc
cltd
mov
nop
mov
mov
jae
sbb
mov
mov
test
cmp
rclb
outsl
ret
daa
popa
dec
nop
jbe
sbb
jge
mov
xchg
mov
fistpl
mov
icebp
testl
aaa
mov
adc
or
mov
ds
fldt
xor
jmp
xor
mov
push
pop
mov
jg
repz
dec
ja
and
xor
adc
sbb
mov
or
mov
mull
pushf
test
cwtl
jmp
stc
call
inc
xorl
test
test
loopne
mov
loop
xchg
lahf
xor
insl
dec
rcrb
jp
adc
mov
inc
hlt
adc
clc
add
inc
sbb
add
cld
lcall
cmp
fcoms
rorb
das
pop
inc
cmpsb
ss
cwtl
add
sub
outsl
adc
pop
das
sub
das
or
addb
jo
aaa
xchg
pop
loope
cmc
dec
in
movsb
inc
icebp
jb
int3
dec
inc
cs
ret
mov
add
enter
pop
shr
or
push
orb
or
sub
or
dec
fdiv
int3
pop
push
and
aad
xor
add
in
push
mov
sub
adc
inc
test
and
pop
hlt
pop
push
push
dec
ds
lock
mov
mov
push
lods
out
jecxz
pop
faddp
cmpl
movsl
mov
jbe
xchg
mov
notb
sub
mov
sbb
push
push
jge
push
push
cwtl
shlb
cld
stos
repz
in
mov
ret
sub
dec
push
dec
sbb
jecxz
pop
mov
adc
mov
bound
push
mov
das
leave
xchg
popf
mull
or
sub
jne
jb
xor
pop
repz
loop
shl
jmp
sbb
repz
mov
std
xor
pop
or
cs
cmp
shrl
scas
and
rclb
stos
fwait
sub
and
xchg
xchg
loop
dec
loope
int3
adc
dec
stos
or
sub
shll
pop
das
sbb
jl
push
das
dec
in
xchg
sub
mov
movsb
movsl
or
addl
xorl
and
out
push
mov
mov
fmuls
loopw
dec
cs
or
mov
pop
fildl
ja
ret
lea
adc
lock
jle
mov
mov
test
sbb
das
and
jecxz
mov
adc
idivl
pop
and
mov
pop
popf
add
int
xchg
dec
jno
xor
xor
jo
add
andb
mov
fcomps
xor
aas
iret
pop
fadd
jmp
out
or
sbb
cwtl
pop
shr
jne
mov
fcomps
jns
repnz
cs
jle
mov
vpsubusw
push
mov
sub
xchg
or
mov
call
sub
pop
cmp
int
sub
ljmp
ja
fwait
nop
adc
nop
ret
nop
mov
je
gs
mov
and
jo
icebp
int3
jne
and
mov
mov
clc
aas
adc
sti
loopne
loop
sbbl
movsb
push
int3
pusha
sti
cmc
popa
inc
add
mov
mov
sub
add
or
icebp
adc
pop
loope
divl
jg
pop
pop
or
add
adc
xlat
nop
es
inc
sbb
sub
xchg
cmpsl
call
mov
stos
sub
jae
daa
setnp
cs
test
push
inc
mov
lds
mov
push
mov
das
xchg
xor
pop
and
movsl
and
push
push
xchg
sbb
aas
xor
jg
notl
sbb
mov
in
mov
or
ja
rcrb
dec
into
mull
mov
imulb
sub
mov
or
cmpsb
jnp
fldcw
push
mov
cmpsb
add
mov
out
adc
inc
cmc
shrb
shrb
vmulsd
sarb
lea
or
adc
inc
lret
out
jbe
mov
xlat
cs
in
pop
int3
inc
out
test
mov
or
fstps
mov
repnz
mov
inc
test
pop
movsl
xchg
loope
cwtl
inc
dec
mov
inc
add
test
jmp
shlb
test
adcb
jne
lds
js
into
inc
mov
and
cmc
or
sahf
test
push
pop
or
dec
lcall
mov
into
cmpl
jns
in
sub
adc
mov
add
mov
shlb
outsb
xchg
inc
mov
xchg
ja
es
mov
faddp
mov
push
fs
fildl
movsl
pop
or
lret
insl
out
mov
cmp
jae
cmc
lahf
mov
mov
je
or
es
jl
mov
pop
fidivrs
ljmp
mov
dec
push
jne
ja
add
add
mov
in
in
or
shlb
pop
lret
out
add
sti
out
push
into
inc
lahf
in
lods
cs
rcrl
stos
or
iret
mov
iret
leave
lea
mov
cmp
mov
add
mov
mov
outsl
sahf
sub
inc
leave
push
push
outsb
lret
cltd
xchg
rcl
bound
or
ret
shrl
cmp
aad
pop
out
jae
testb
das
fisttpll
orl
add
xchg
sti
enter
sbb
sbb
outsl
fadds
dec
les
daa
dec
xchg
xchg
xor
adc
sub
sbb
mov
mov
mov
mov
dec
mov
sbbb
xchg
imul
push
inc
adc
jecxz
pop
loope
or
fnsave
xchg
adc
sub
rol
pushf
fwait
mov
scas
fcoml
insw
mov
clc
pop
lcall
fcmovnu
xchg
adc
add
sbb
xor
mov
lret
sub
mov
xchg
fwait
or
xchg
sti
jns
enterw
and
aam
fisubs
sub
or
or
cmp
push
cmpsl
mov
xchg
ret
lock
push
addr16
lods
popa
inc
cmp
test
outsl
xchg
fists
push
sub
in
out
xchg
cltd
jne
xorps
test
in
cmp
mov
in
push
pusha
addr16
inc
icebp
popa
inc
xor
push
mov
jae
lods
paddusw
movsl
mov
inc
orl
or
adc
ficompl
dec
inc
jp
jne
jmp
cmp
call
pop
mov
test
push
jnp
xor
imul
cmpsl
push
mov
or
mov
das
imul
cld
push
es
enter
ljmp
or
jecxz
adc
cltd
sbb
rorb
push
fdivs
add
dec
test
and
lcall
push
xor
sbb
mov
mov
shll
mov
dec
adc
sub
and
movsl
call
outsl
push
nop
xor
push
es
mov
cmp
data16
jne
sub
adc
jnp
loopne
addr16
out
outsl
cli
cmp
das
pop
fstps
adc
fucomp
in
sti
loope
inc
dec
sbbb
popa
mov
ss
mov
xor
ror
jbe
in
rol
in
push
pushf
xchg
call
dec
sub
lods
and
daa
rclb
ficoms
sbb
inc
mov
test
pop
enter
and
inc
es
sbb
cs
testl
push
xlat
pop
sub
adc
or
pop
insb
pusha
jmp
stos
adc
inc
xchg
mov
inc
loop
loope
loopne
adc
mov
aaa
mov
inc
and
shlb
insb
xor
inc
stos
pop
cmp
addr16
or
ret
mov
cmp
cmp
push
movsl
mov
ds
repnz
fdivp
rcr
jns
pop
push
or
cwtl
push
xchg
jl
std
enter
sbb
in
cmpsl
adc
sub
addr16
mov
and
mov
inc
cmp
xor
push
cmp
mov
in
add
mov
fisttpl
loopne
lret
call
add
xchg
cmp
push
sub
dec
daa
daa
shl
inc
xor
dec
loop
jns
mov
out
adc
pop
adc
arpl
movsl
daa
ficomps
cli
cmp
aas
inc
iret
scas
pop
adc
fcmovnb
pusha
nop
sbb
inc
push
sti
dec
pop
dec
jecxz
xor
cmp
mov
dec
stc
enter
sbb
cwtl
cmpsl
lods
sahf
sub
stos
sbb
mov
pop
sbb
xchg
xchg
cmpsl
adc
push
or
inc
jbe
ljmp
pop
stos
adcl
repz
cmp
pop
fs
and
into
dec
and
stos
pusha
popf
lock
mov
daa
lcall
mov
mov
aaa
jecxz
or
stos
popf
fwait
jb
mov
incl
out
jnp
add
aad
or
sbb
push
mov
mov
scas
xor
pop
or
or
adc
jg
xchg
into
cld
pushf
push
push
add
jns
stos
mov
and
mov
xor
xlat
xchg
es
outsb
inc
pop
movsl
pop
pop
sub
subb
fstpl
movsl
adc
dec
lret
gs
test
andb
in
sbb
push
pop
mov
stc
stos
xor
popa
adc
fstps
xor
ret
cwtl
adc
cmpsl
sbb
in
aaa
pop
out
lods
in
inc
jp
lods
cmp
lods
out
cmp
js
sub
out
fld
iret
ss
leave
xchg
mov
out
sqrtps
int3
mov
and
or
mov
jmp
lea
push
dec
add
orb
lahf
cli
and
add
mov
std
dec
insl
push
mov
mov
shrl
pop
mov
outsb
pinsrw
ss
sbb
ds
cmp
lods
popf
sbb
dec
ss
lock
cltd
nop
hlt
sub
cmp
fdivrs
nop
pop
insb
xchg
push
and
xlat
pushf
lcall
ficomps
add
pop
push
faddl
push
or
mov
sub
ficoml
mov
popw
fistpl
and
in
aaa
inc
negb
jbe
jnp
test
xchg
and
xor
es
lahf
clc
jp
jne
pushf
mov
sub
mov
mov
addb
repnz
cld
jbe
dec
movsl
push
and
sbb
cmp
aas
xchg
mov
add
jle
xor
in
outsl
cmpsb
pop
mov
mov
loop
cs
xchg
xchg
add
sbb
and
jmp
fcom
mov
jae
push
mov
stc
push
out
movsb
fxch
add
fldenv
icebp
xor
cltd
xchg
arpl
loopne
xchg
mov
adc
out
scas
xorl
add
dec
adc
call
mov
lahf
clc
lock
adc
sub
insl
rol
adc
xchg
inc
pop
out
stc
mov
mov
repnz
rcll
out
xor
jmp
addr16
push
in
pop
ja
sahf
stos
inc
ret
push
std
mov
adc
mov
fists
adc
les
push
xchg
xor
aad
loopne
pushf
push
lret
les
xlat
in
and
shr
lock
and
and
jae
iret
or
pushf
and
pop
inc
in
pop
andl
aad
push
cmp
test
imul
adc
mov
push
f2xm1
mov
sti
popf
lock
clc
jne
out
mov
movl
repz
call
mov
xor
mov
push
and
ja
inc
jne
lret
inc
push
mov
pop
mov
or
subl
adc
es
sub
stos
enter
cmp
jmp
pop
cwtl
mov
push
int
sub
sbbb
xchg
sbb
ja
mov
repnz
mov
fincstp
bound
inc
cld
call
adc
sbb
adc
or
je
stc
stos
enter
out
jmp
add
adc
js
int
ret
sub
dec
fstl
divl
les
les
arpl
or
fsts
je
or
imul
xchg
xchg
sub
add
sub
sbb
fimuls
loop
push
xor
enter
push
lods
iret
test
fmull
daa
mov
adc
gs
mov
repz
sbb
dec
push
movsl
xchg
lretw
push
in
jb,pn
shll
test
cmp
ds
xor
xchg
cld
and
mov
int
rorb
lret
js
pop
sbb
mov
mov
xor
int3
push
xor
lods
stc
mov
fnsave
add
xchg
inc
ljmp
es
fidivs
add
mov
in
mov
sarb
jbe
dec
mov
push
icebp
sbb
hlt
sub
xchg
lods
sti
outsl
cmc
pop
int
sarl
push
or
inc
xchg
pop
in
inc
push
call
cmp
xor
push
clc
pop
cs
xor
scas
je,pt
mov
pushf
pop
mov
cmpsb
mov
xor
rcrl
adc
mov
ljmp
sti
movsb
sub
xchg
mov
incl
cmp
pop
out
jne
ss
adc
sub
mov
rcrl
mov
sbb
js
ss
lds
out
gs
and
in
lea
das
sahf
aad
add
dec
lahf
mov
jne
sbb
sbb
fwait
push
fcomps
xor
pop
mov
inc
mov
sbb
mov
nop
les
out
pop
fbld
and
mov
loopne
cs
mov
stc
dec
sub
xor
push
arpl
mov
sub
dec
xor
stos
jp
in
jmp
dec
in
or
mov
ret
and
mov
dec
inc
fsubrl
fwait
mov
jge
loope
ds
iret
jl
call
cld
jae
pop
insb
push
inc
adc
sub
lods
mov
mov
lock
pop
in
nop
rcll
pop
push
push
hlt
pcmpgtb
mov
ficoms
nop
and
inc
scas
adc
mov
aas
or
dec
cld
push
in
lahf
fwait
push
mov
ljmp
or
push
pusha
dec
cmp
mov
add
push
adc
jecxz
and
inc
movsb
sub
das
and
push
movsb
sbb
jle
movb
outsl
xor
leave
or
lret
pop
mov
xchg
and
enter
jbe
xchg
in
imulb
sti
out
inc
mov
push
sbb
mov
adc
aam
cmc
iret
out
sbb
test
xor
xchg
iret
adcb
shlb
rclb
into
sub
mov
push
inc
jno
mov
mov
inc
hlt
fadd
cmp
in
xor
cmp
and
or
insl
loope
pushf
sub
aas
push
jge
or
add
sbb
xor
jl
or
mov
xor
xchg
lret
aam
mov
movsb
inc
jmp
int3
push
mov
sahf
enter
add
mov
outsb
push
cvtpi2ps
mov
shlb
xchg
xor
jle
daa
insl
push
dec
pop
push
jae
mov
mov
repnz
andl
sub
jecxz
push
ds
xchg
cmpsb
sbb
hlt
movsb
sub
jge
jmp
adc
jno
xchg
stos
incb
jmp
jge
mov
cmp
adc
jno
mov
xchg
fistl
jno
ljmp
pop
mov
clc
lea
aaa
ret
mov
add
xchg
adc
and
gs
inc
inc
movsl
inc
ja
sbb
adc
push
je
ds
popf
pop
lods
mov
lret
sbb
adc
mov
add
int
mov
imul
cmp
cmpsl
xchg
ror
ja
fs
popf
pop
cli
xchg
pmaddwd
and
leave
sarl
cmp
popa
push
pop
jmp
sarb
jbe
ss
lods
lods
mov
cmp
leave
adc
pop
testl
clc
ret
push
mov
lea
orb
jge
ficoms
bswap
sub
mov
mov
push
in
dec
xor
jo
pop
pop
cmp
aas
dec
add
lock
cmpsl
dec
punpckhdq
jg
mov
and
ljmp
xchg
xchg
data16
mov
mov
loop
aam
xor
cwtl
cmc
mov
xlat
add
leave
fisttpll
shll
xor
sbb
cs
ds
int
lods
insb
ja
fs
push
mov
stc
sbb
and
pop
pop
lahf
or
jg
es
add
cmp
les
adc
out
and
add
sub
dec
bound
nop
outsb
inc
fidivrs
xchg
out
mov
xor
adc
mov
loop
xchg
lea
daa
les
sbb
mov
pop
cmpsl
ficompl
push
in
pop
or
push
cmp
pop
adc
xor
in
and
rcll
fsubs
in
lahf
and
adc
cmpsb
sarl
pop
negb
loope
lock
fmuls
jo
dec
adc
test
fs
push
clc
mov
cmpsb
lock
shll
add
nop
jb
jns
cmp
xchg
fcompl
mov
mov
lcall
ret
cmpsl
mov
cmp
mov
cld
andl
fs
and
sub
or
int3
mov
or
test
inc
test
push
loop
ret
cpuid
sub
xchg
mov
push
std
sbb
jo
jne
lods
pusha
incl
add
mov
rolb
movb
cmp
push
popf
sub
mov
push
test
mov
inc
add
fadd
cmpsb
jb
gs
mov
in
test
shr
pop
frstor
pop
test
and
in
fdiv
pop
mov
mov
dec
add
jmp
mov
xchg
sub
add
aam
cmpb
into
fcomp
push
pop
jl
jbe
xor
hlt
lods
push
popa
mov
cmp
lods
xchg
faddl
out
insb
xchg
sub
cmpsl
cmp
mov
jl
fcomps
aam
movsl
dec
add
and
fs
push
pop
pop
sbb
iret
mov
sub
xchg
dec
in
xchg
jge
mov
aam
icebp
fwait
jae
jno
mov
xchg
repnz
or
lds
test
imul
xchg
jmp
push
mov
push
sahf
push
lods
push
int
mov
stos
xor
pop
xlat
inc
fisttpl
icebp
or
rcl
je
xchg
sbb
int
cmp
shl
fwait
adc
ds
or
pop
inc
cmp
fistpll
mov
fmuls
or
stos
and
int
sub
jl
mov
or
or
in
xor
push
arpl
adc
push
iret
mov
lods
lahf
xchg
aaa
in
call
push
popa
sbb
andl
outsl
mov
push
jns
repnz
inc
outsl
add
call
movsl
lods
sbb
mov
inc
mov
push
pushf
xor
jl
pop
sbb
mov
dec
cld
jne
adc
or
inc
lods
popa
xor
xchg
xor
in
fwait
sti
out
popf
mov
push
sub
test
pusha
mov
cmpsb
stos
shl
jns
or
notl
add
stos
js
insl
dec
sub
lods
rcrb
jb
popl
push
dec
pop
xor
pushf
lahf
inc
pop
std
lods
cmp
push
enter
dec
mov
dec
iret
and
mov
pop
lock
aad
pop
orb
jae
dec
mov
xchg
dec
and
mov
pop
push
int
sub
cltd
icebp
add
pop
jmp
das
addr16
dec
sti
jb
test
aas
add
mov
icebp
int
push
mov
scas
cmp
ror
cld
and
cmp
xchg
shrl
mov
pop
aad
and
subl
aas
jns
sub
jno
cmp
xchg
or
lret
xchg
mov
and
mov
add
mov
enter
sub
add
jo
cmp
inc
push
mov
and
mov
testb
jp
aad
cwtl
scas
lahf
adc
faddl
sbb
cmpsl
xor
inc
nop
sub
jmp
js
lcall
jae
sbb
fdivs
or
sub
ret
lods
rcrl
lahf
inc
xchg
mov
jae
and
pop
mov
clc
lds
test
rcrl
xchg
inc
cwtl
dec
enter
sbb
and
xchg
dec
es
bound
nop
lret
mov
and
dec
cmp
dec
pop
pop
pop
jne
push
repnz
loop
shlb
into
int3
push
dec
jmp
push
lock
ja
lret
sub
aad
fistps
decb
pop
cmp
sbb
mov
inc
rcrl
fwait
pushf
data16
loopne
addr16
stc
lods
or
in
mov
cmpsb
fldl
inc
pop
nop
sbb
pushf
lods
jns
test
arpl
call
in
sub
stc
add
imul
cltd
xlat
xchg
dec
add
mov
ja
insl
rcr
cmp
daa
test
pop
fs
adc
or
inc
fimull
add
lock
test
mov
add
mov
push
lods
imul
scas
adc
std
inc
pop
fcompl
or
test
and
fidivl
pop
scas
fwait
push
mov
or
leave
enter
jae
inc
add
stc
xlat
inc
push
dec
pop
int
sbb
mov
mov
outsb
jnp
lcall
or
rcll
sub
fcmovb
push
outsl
aam
enter
pop
data16
shrb
pop
sbb
pop
test
adc
fwait
shrb
add
ds
inc
push
push
dec
pop
fidivl
imul
data16
cmp
mov
lods
push
adc
xchg
mov
xchg
sub
lock
inc
sbb
add
rorb
aam
mov
lahf
or
ud1
cmp
dec
push
push
shrl
addb
das
and
fdivl
loope
pop
incb
lea
shlb
mov
xlat
adc
xchg
cltd
cld
sahf
mov
add
stos
adc
ret
push
shr
xchg
fsubs
xor
jl
icebp
mov
dec
jbe
pop
mov
ja
sub
incb
add
faddp
push
cmp
add
popa
push
test
in
or
in
ret
and
push
sahf
mov
mov
pushf
lea
data16
cld
rcll
iret
pop
xor
movsb
loope
pop
stos
notb
fcompl
sbb
add
and
lret
aad
cmp
andb
pushf
fldcw
sub
fbstp
jae
xchg
dec
lock
jl
in
loopne
lcall
mov
mov
and
andl
push
lret
sbb
xchg
rclb
nop
movsb
cmp
xchg
aaa
xor
and
pop
fsts
cs
cmpsb
cmp
inc
fdivs
or
xor
adc
das
loopne
dec
inc
adcb
ljmp
mov
dec
add
pushf
jecxz
xor
jmp
int3
stc
loop
jb
xor
or
adc
push
arpl
pop
mov
fimull
out
mov
jne
mov
sub
mov
arpl
gs
jg
lahf
pop
pop
push
in
aas
jg
jmp
push
test
scas
mov
dec
outsb
adc
pop
cli
ror
dec
into
and
push
data16
pushf
dec
imul
sub
cmc
add
outsl
xchg
adc
mov
pushl
psubsw
ret
jo
and
sbb
ds
out
sub
sub
mov
mov
fdivr
outsb
pusha
aad
mov
imul
aaa
lds
push
inc
fcoml
add
out
cld
sbb
xchg
repnz
test
add
xchg
add
mov
xchg
add
pop
dec
shl
or
das
orb
subb
add
cmp
mov
hlt
fucomi
scas
scas
loope
jle
mov
push
sahf
and
xor
push
push
test
xchg
fcoms
fistps
sub
jae
ret
jmp
sbb
inc
lret
rcr
add
test
les
movaps
mov
xor
jb
xchg
sarl
dec
mov
mov
out
fdivrl
or
imul
mov
push
dec
jmp
cmp
sbb
cmp
sub
and
inc
pop
mov
rorb
mov
leave
inc
sbb
push
or
cld
in
push
push
loop
leave
scas
hlt
dec
jecxz
sbb
add
mov
mov
or
sub
xchg
sub
bound
push
leave
fcmovnb
xchg
lcall
jge
daa
test
imul
mov
cmp
pop
mov
cmpsb
mov
loope
call
or
pop
pop
loop
xchg
lret
pop
mov
sub
sub
mov
stos
mov
xchg
shll
adc
mov
fdivrs
jmp
mov
test
and
jle
jmp
addb
pop
jmp
add
add
sub
ljmp
ljmp
dec
mov
popa
or
push
cmp
and
fildl
sub
test
inc
negl
or
lret
and
mov
and
mov
fwait
lods
clc
fldt
sbb
movb
add
adc
cli
and
mov
xchg
xor
stos
fldl
fstpt
flds
test
xor
out
lahf
sub
jbe
in
and
and
and
shr
mov
call
dec
xchg
pop
sub
ss
cmpsl
xor
jo
ret
add
and
cmc
mov
push
lds
nop
or
aam
cwtl
movsl
mov
test
in
push
inc
adc
xchg
cmp
in
cmpl
xchg
lds
cwtl
mov
xorl
add
icebp
adc
lods
dec
xor
sbb
shlb
mov
ss
add
and
lcall
mov
outsl
push
cld
fs
mov
inc
ret
sub
rcr
mov
sar
pop
test
ficoml
movsb
jnp
jae
sti
add
mov
sar
mov
adc
jbe
add
jl
mov
dec
mov
icebp
dec
pop
mov
xlat
arpl
rcll
mov
ds
cmpsl
jnp
fwait
cmc
in
fsubs
and
hlt
pop
ds
icebp
dec
push
push
xchg
and
int
leave
xchg
sub
addr16
scas
push
cli
bound
out
xorb
xchg
or
mov
sub
pop
dec
aad
jbe
je
push
sbb
fucomi
cmp
fldl
popa
mov
jecxz
or
int3
and
cmp
mov
call
test
rcrl
inc
ljmp
subl
stos
xor
mov
mov
jo
lds
iret
stc
fidivrl
mov
ret
lret
or
xlat
std
mov
mov
aad
out
scas
push
fisubl
pop
into
inc
jnp
aas
stos
inc
mov
aam
mov
mov
jle
inc
es
outsb
jle
ret
inc
add
and
or
inc
adc
push
jnp
aam
ret
and
nop
data16
and
test
mov
push
jg
les
cmp
jmp
test
sub
fnsave
addr16
ror
inc
xchg
jge
shl
mov
adc
pop
cltd
pop
rcrb
inc
push
or
push
mov
enter
loopne
mov
ret
movsb
mov
je
sbb
lret
fisttps
insb
sbb
mov
iret
loop
sub
xlat
and
out
outsl
je
lcall
insl
jmp
subb
in
jl
mov
fcom
add
push
lods
pop
inc
dec
xchg
inc
cmp
jmp
es
filds
outsl
pop
mov
mov
mov
in
les
or
jbe,pn
dec
ror
cvtpi2ps
imul
ja
shl
lcall
push
xchg
sub
imulb
out
pop
hlt
out
jp
ret
lcall
gs
nop
adc
cli
xchg
xchg
stc
dec
scas
inc
bound
push
mov
mov
or
add
sub
jle
lret
jmp
sub
mov
mov
pusha
ret
ljmp
fs
pusha
pushf
inc
mov
and
inc
lea
or
sti
fdivrp
push
mov
orb
mov
es
mov
lock
int
push
mov
out
movsb
decl
pop
loope
test
adc
adc
xchg
fists
push
pop
push
inc
push
push
jae
rol
ds
push
sbb
imul
jl
insl
push
inc
stc
adc
in
fisttps
pop
mov
inc
scas
mov
jae
adc
loop
mov
bound
push
jecxz
fs
lea
or
lahf
mov
pop
push
std
sahf
adc
mov
push
and
leave
or
sbb
fisubrs
xchg
ds
sbb
stc
scas
push
or
insb
int3
outsl
mov
pop
rcl
cld
jne
cmpsl
je
cs
sub
inc
or
popl
das
inc
xchg
push
ljmp
in
in
adc
dec
lea
xchg
test
jg
add
push
and
fidivrl
adc
pop
dec
ss
sahf
adc
lret
rolb
mov
stos
mov
push
inc
fisubs
movsb
xchg
lret
cmp
loopne
pop
repz
subb
jbe
jl
mov
xor
pop
mov
insl
or
addr16
adc
fistpl
xchg
or
aaa
push
cmp
inc
lock
shl
test
out
and
rcl
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
inc
push
mov
int
bound
xchg
subl
loop
xchg
int
or
insb
mov
shr
imul
in
fs
outsb
push
rcrb
in
outsl
mov
xchg
add
imul
and
jp
test
push
adc
test
jns
fwait
push
cs
mov
ret
mov
js
repz
mov
outsl
loope
xor
fs
mov
scas
or
cmp
sbb
xchg
xor
xchg
mov
jge
int
cmc
dec
iret
push
ss
fwait
xchg
jne
add
sti
mov
sub
jl
xchg
push
dec
fcmovbe
leave
add
loopne
xor
imul
shll
fs
adc
push
inc
mov
jne
jo
sub
mov
sbb
rcr
iret
daa
cwtl
sbb
lea
add
repnz
jmp
call
das
inc
je
jge
sbb
addr16
lock
xchg
faddp
fidivs
popf
out
lds
lods
arpl
pusha
shlb
dec
call
out
das
repnz
ja
cs
mov
stos
cli
xchg
add
lods
xchg
mov
jbe
push
mov
jl
add
sbb
shlb
add
and
in
xchg
add
lods
dec
faddl
loopne
cld
test
scas
addr16
cmp
push
mov
push
mov
ficoml
fsub
lcall
inc
xchg
and
out
inc
lret
insb
scas
aad
and
fmuls
jne
mov
sub
iret
cwtl
mov
jae
dec
test
jmp
ss
in
push
loop
sbb
mov
outsb
adc
sub
mov
repz
lcall
mov
es
jle
les
push
xchg
popfw
pop
in
mov
aam
mov
std
inc
lahf
jmp
shlb
sub
adc
and
outsb
orl
and
pop
inc
pop
rcr
mov
cwtl
mulb
enter
orb
inc
or
or
mov
mov
sbb
int
decb
push
add
hlt
loopne
push
cs
std
imul
out
push
or
mov
pop
shlb
dec
pop
stos
cmpsl
lcall
xor
pop
in
dec
inc
jbe
sti
add
enter
jnp
cld
sbbb
pop
mov
mov
sbb
lcall
int3
lahf
mov
push
push
jge
or
add
xor
stc
sub
bound
or
dec
mov
out
mov
cld
cmc
clc
ficomps
mov
aas
xchg
push
daa
icebp
and
inc
lds
cmp
out
daa
mov
mov
sbb
sub
mov
dec
sub
ret
dec
fadd
movsl
cld
out
sub
stc
inc
in
inc
insb
stos
lret
hlt
cmp
movsb
ja
jp
outsb
arpl
cmp
jle
xor
mov
out
dec
pop
cmp
mov
and
pop
xor
add
lret
js
jb
inc
add
adc
sub
aad
outsl
in
dec
aad
cmp
sbb
lock
mov
push
cmc
mov
fstpt
adc
out
pop
int
movsl
insb
out
adc
imul
xor
add
test
lods
pushf
mulb
push
xchg
es
push
loop
sub
push
lock
and
adc
inc
fisubs
das
das
xchg
popf
xor
cmp
mov
push
mov
lcall
pop
inc
imul
dec
push
push
cld
sahf
loopne
lahf
inc
cwtl
lret
dec
lcall
sub
pop
lret
sbb
lret
add
lods
mov
movb
scas
jno
leave
xor
mov
ljmp
or
mov
movsb
fstl
inc
add
jge
dec
sti
mov
je
arpl
movsl
mov
jg
adc
xorl
fs
or
cltd
jb
push
adc
push
cmpsb
imulb
push
jmp
jp
rcrb
sbb
sub
mov
in
jae
pop
sti
test
and
xor
push
stos
lahf
fnstsw
mov
xchg
jae
icebp
das
mov
mov
push
push
ss
sbbb
dec
xor
mov
pop
xchg
mov
mov
sub
mov
lret
lods
call
mov
push
dec
pusha
or
cmp
push
push
add
aad
lret
mov
out
jno
mov
lock
bound
lahf
js
lahf
hlt
jge
lods
mov
popa
and
inc
cmp
jno
loopne
repz
mov
mov
mov
xchg
cmp
jmp
adc
fcomps
add
xor
iret
mov
cwtl
inc
stc
push
xchg
adc
or
jl
out
subl
arpl
dec
inc
lahf
push
mov
stos
cwtl
fcomp
inc
les
mov
pop
xor
pop
sub
inc
sbb
sub
push
adc
insb
in
in
sbb
fmuls
cwtl
ret
notb
aam
mov
popf
xchg
mov
and
loopne
jne
lahf
mov
push
insl
jns
jno
sbb
add
imul
daa
repz
xor
and
cwtl
je
sub
jmp
adc
ljmp
arpl
in
movsb
xlat
pop
pop
xchg
ret
pop
and
or
add
test
push
dec
pop
inc
push
aad
mov
inc
xorl
cmpsl
and
lea
inc
jo
push
mov
xchg
push
sub
lds
cmpsb
xor
test
pop
push
mov
into
in
repnz
call
rcr
lret
push
or
and
lcall
mov
mov
scas
lea
jl
xor
pop
push
sbbb
xchg
xchg
sti
imul
bound
movsb
inc
cmpsb
push
add
mov
mov
scas
adc
jb
push
lret
jnp
movsb
outsl
ds
ficoms
cmp
jbe
lods
jle
adc
pop
incl
stc
mov
outsl
mov
outsb
jo
pop
stc
lahf
in
inc
inc
inc
pop
push
rorl
gs
xchg
mov
sbb
adc
mov
aam
mov
ret
loopne
inc
add
xorl
dec
or
and
lret
loop
gs
inc
sub
xor
nop
imul
or
xor
je
mov
imul
es
xor
std
xchg
xchg
mov
fcmovnb
dec
add
and
in
sbb
and
lods
inc
cmpsb
push
outsl
push
cli
sub
xor
lahf
loope
mov
or
out
in
js
test
jo
lods
dec
mov
xchg
xor
mov
xor
mov
mov
stc
faddl
push
mov
jmp
sbb
lahf
test
dec
or
pop
decl
push
mov
mov
negl
ret
cmp
ret
daa
jecxz
ja
sub
xor
jp
mov
sahf
div
jnp
sbb
jl
rol
pop
and
subl
jae
or
lock
sbb
mov
inc
or
test
divl
and
repnz
jge
pusha
daa
pop
cld
shll
icebp
cltd
cmp
cmp
mov
mov
jp
dec
sub
push
fwait
dec
mov
cmpsl
imul
ret
lock
dec
mov
pop
sbb
pop
mov
or
sub
push
loopne
mov
jbe
adcl
dec
inc
sub
push
insb
fsubrl
rcrb
mov
add
adc
push
cli
adc
fsubl
add
out
out
inc
shl
stos
int
js
aaa
js
test
pop
sub
cmp
ljmp
dec
mov
push
sub
cltd
jb
push
outsb
cmp
insb
out
sbb
hlt
lods
sysret
pusha
and
add
mov
sbb
lods
pop
mov
pop
out
or
jp
and
nop
nop
cmpl
adc
js
scas
in
pop
or
stc
in
or
rolb
add
jecxz
pop
sbb
xchg
inc
jecxz
pop
xchg
add
sti
mov
xchg
test
test
aam
xor
clc
mov
xor
push
push
sbb
incl
and
jbe
movl
push
in
sbb
add
xchg
inc
inc
xlat
and
outsl
ret
inc
cmp
fldenv
cmpsl
mov
movsl
or
add
enter
loope
lret
loopne
insb
jns
popw
jmp
cmp
pop
push
lods
cltd
xchg
mov
fcompl
jo
or
dec
cmp
jne
push
cmc
xchg
add
and
cli
lahf
movsb
sbb
fldcw
inc
adc
cld
data16
jl
mov
andl
shrl
notb
jp
jge
sub
call
rorb
mov
dec
nop
daa
xchg
jp
sub
mov
mov
cli
ja
int3
pop
scas
and
shrb
or
xor
sbb
dec
cli
xchg
jecxz
mov
sub
jle
imul
dec
rol
mov
fnstsw
outsb
outsl
adcl
js
or
in
inc
add
cwtl
cmp
imul
les
test
lcall
mov
xor
push
sub
inc
gs
ret
sbb
sbb
add
pop
dec
xchg
test
mov
test
bound
test
add
in
rorb
stos
movsl
imul
rcrl
fiaddl
out
and
js
push
shlb
repz
inc
lret
pop
inc
or
mov
sub
cld
sarl
iret
test
fldln2
inc
mov
jne
notb
es
and
push
imull
orb
sbb
xor
faddp
aaa
push
sub
in
daa
cmp
dec
adc
pop
testb
ljmp
cs
xor
xchg
adc
into
scas
mov
leave
lds
int3
jle
repnz
push
out
popf
daa
cmc
nop
xchg
incl
dec
sysret
pop
add
gs
in
xchg
int3
stos
arpl
es
adcb
lcall
test
test
in
cmpb
jne
lahf
or
cld
push
and
cmp
xchg
movzbl
out
xor
cmpsb
imul
xchg
jmp
out
cld
mov
cmp
mov
aas
into
adc
cmp
inc
test
ret
jg
fs
and
pop
adcl
mov
outsl
outsl
jl
in
fimull
test
pop
mov
cld
adc
dec
mov
pop
outsb
mov
inc
push
mov
push
sub
sti
or
aam
hlt
xor
ret
dec
fsts
mov
cmp
lahf
pusha
bound
push
and
das
dec
sbb
scas
into
fs
mov
and
and
shlb
ljmp
push
aaa
in
xor
fidivl
xor
inc
pop
inc
jge
adc
mov
sub
icebp
and
xor
daa
outsb
lret
incl
dec
dec
mov
or
jo
or
in
adc
stos
and
sub
pop
call
mov
push
lret
sarl
xlat
sub
in
sahf
rolb
push
push
testl
xlat
mov
es
test
mov
cmpsl
dec
or
inc
movsb
lea
mov
sbb
and
mov
and
out
lret
lea
scas
mov
fsubrs
xlat
adc
push
stos
stc
ljmp
dec
cmp
sbb
pop
xchg
jl
add
jne
xor
lret
mov
insb
sbb
pop
cmp
and
mov
xchg
out
hlt
add
or
xor
push
fmuls
xor
aam
inc
mov
js
adc
rcr
sbb
jnp
cltd
mov
adc
iret
add
pop
lea
popa
xor
xor
std
aas
movsb
loope
mov
lock
sbb
sub
and
adc
add
push
stos
outsb
stos
fcompl
pop
xchg
nop
scas
inc
push
dec
hlt
inc
mov
inc
cmc
int3
pop
sbb
shrb
inc
and
cltd
or
dec
dec
xchg
pop
call
fisubl
imul
cmp
shl
ja
movsl
xchg
push
test
jecxz
sbbb
mov
subl
xchg
jns
jae
xchg
xor
xor
mov
xchg
xchg
fstpl
and
or
int
and
and
sarl
in
loopne
dec
clc
sti
pop
mov
push
sbb
hlt
or
sbb
lock
pop
icebp
push
fidivl
sbb
dec
imul
and
mov
push
jbe
rcll
adc
cld
jecxz
stos
or
pop
out
aaa
xchg
xchg
lret
cmp
movsb
pop
cmp
insb
test
mov
push
pop
pop
jne
hlt
arpl
dec
push
sbb
shll
insb
mov
ss
aaa
sbb
add
push
es
gs
jne
xchg
imul
and
push
outsb
fildl
stos
incb
int
add
mov
xchg
sbb
fwait
sub
mov
test
das
push
mov
sub
cld
lret
testb
push
fst
cmp
push
out
aad
out
and
jae
ds
insb
into
test
mov
mov
std
popa
fcom
pop
sub
fimuls
nop
dec
add
aam
sbb
cmp
ja
inc
stc
mov
sub
sahf
pusha
dec
icebp
icebp
das
in
add
dec
or
popa
mov
std
mov
push
jge
xchg
xchg
loope
fldt
pop
adc
stc
cmp
jns
mov
or
dec
or
ficomps
inc
mov
hlt
adc
dec
or
jae
enter
inc
rorb
lea
adc
ss
sbb
outsl
leave
sub
jnp
add
orb
rcll
jmp
imul
mov
mov
push
lcall
and
test
je
dec
stos
or
pop
sahf
mov
adc
dec
cmc
jmp
dec
test
stos
clc
dec
sbb
ffree
fs
inc
loop
dec
xchg
ljmpw
in
sti
adc
mov
xor
cs
jg
or
jg
in
add
scas
push
mov
out
or
inc
imul
sub
xchg
mov
pusha
adc
inc
andb
std
sub
lahf
pop
mov
test
fbld
adc
pop
xchg
rorb
or
cmp
sbb
in
mov
rolb
jl
leave
xor
movsl
pushf
ja
xchg
mov
jl
mov
push
shrl
xor
jne
mov
inc
pandn
inc
dec
out
xchg
in
dec
jbe
push
xor
adcl
mov
or
popa
add
icebp
mov
push
int3
shlb
test
push
mov
subb
je
mov
inc
rep
and
rolb
dec
popf
or
jbe
add
insb
ret
repz
push
xchg
push
pop
int3
je
pop
dec
cltd
push
leave
add
shll
push
push
pop
and
pop
iret
xchg
pop
jg
scas
loope
inc
bound
adc
xor
ret
cmc
out
inc
leave
cmp
scas
das
jmp
inc
outsb
cwtl
ds
jmp
jne
xchg
out
xlat
mov
mov
mov
push
sti
arpl
and
pop
js
pop
xor
push
lret
adc
sub
fiadds
out
cmp
xor
fcmovnbe
sbb
rol
xchg
push
lock
cmp
shll
xchg
sbb
stos
das
data16
clc
subl
mov
inc
stos
pop
mov
mov
cmc
aad
shrb
cmp
out
pop
int
and
and
or
sbb
xchg
icebp
mull
out
xor
int
push
sbb
das
or
arpl
ret
or
cs
subl
out
and
leave
outsb
cwtl
mov
or
int3
cli
cld
pop
loope
cmp
push
fdivrp
pop
das
fdivl
or
insb
stos
adc
xchg
cmp
jae
aam
xor
cld
sbb
jp
bound
cmp
dec
out
sbb
inc
ja
mov
jae
xchg
add
xchg
pop
shll
fdivs
xlat
lds
mov
pop
xchg
pop
sbb
inc
jp
je
sub
mov
lcall
int3
jnp
icebp
mov
add
cld
in
inc
pop
add
lock
xchg
cmpsb
pop
out
cmp
cmpsb
lahf
jbe
cmp
roll
in
mov
mov
mov
jmp
imul
mov
sbb
xor
jns
mov
cld
mov
lret
xchg
sbb
iret
xlat
das
sub
adc
and
jno
mov
test
pusha
push
adc
fwait
aad
adc
pop
js
cmp
mov
cmp
xor
adc
xor
adc
insl
adc
jp
push
cwtl
mov
in
pop
in
stos
cmp
xchg
inc
ret
and
cmp
lea
in
int
sarb
sub
popf
push
inc
aad
xchg
dec
dec
cwtl
test
mov
fsubr
push
arpl
xor
gs
pop
xchg
xor
and
insl
stos
xchg
pop
fldl
jbe
and
jg
pop
push
or
lds
outsb
add
or
pop
hlt
jmp
mov
adc
jno
ficompl
pop
adc
mov
in
xchg
adc
inc
popf
push
adc
pop
rcr
pop
repnz
cmpsb
push
sub
lods
stos
popf
inc
adc
sbb
cmp
dec
aaa
inc
dec
cmpsb
cld
inc
xchg
mov
cmc
push
fcomps
mov
int
pop
mov
jmp
ret
in
loopne
cmp
or
hlt
aam
and
add
cmp
aaa
cwtl
jbe
imul
pop
sti
push
or
insb
xor
outsl
lahf
pop
jo
scas
jl,pt
rolb
push
xchg
pushf
pop
cltd
in
adc
fstpt
out
pop
mov
mov
jg
cmp
imul
push
iret
sbb
adc
add
arpl
xchg
das
sti
stc
jecxz
cli
adc
sub
pop
add
scas
stc
sub
clc
std
out
ss
cs
push
loope
pop
sub
test
aam
mov
mov
mov
mov
push
dec
in
leave
sbb
mov
insl
sub
fs
inc
push
sbb
aas
mov
add
jg
mov
jno
pop
std
lret
imul
movsl
roll
subb
jae
xor
or
or
jp
adc
mov
xchg
add
dec
inc
xchg
adc
xchg
mov
inc
xchg
mov
jmp
popf
xchg
xchg
fmuls
or
rol
scas
xchg
cmp
lahf
notl
aad
mov
xchg
insb
add
inc
daa
dec
pop
shll
fdivr
xlat
das
loop
or
decl
ds
pop
xchg
stc
mov
call
ret
mov
orb
idivb
cmp
hlt
in
xor
shlb
imul
push
xchg
aad
pop
inc
fucomip
arpl
loope
pusha
ret
idiv
scas
inc
in
sar
cli
pop
addr16
jle
addl
arpl
cmpl
stos
pop
xor
jmp
in
or
rolb
mov
fstpl
cltd
push
mov
and
mov
in
dec
fadds
fisubs
push
icebp
push
call
pop
aaa
sbb
pop
jecxz
cmp
jmp
fistps
arpl
cmp
pushf
stos
jne
sbb
hlt
mov
push
mov
das
ljmp
out
push
and
and
dec
movsl
js
cld
into
lock
sbb
dec
xlat
mov
sub
xchg
push
dec
arpl
lods
or
sbb
sbb
mov
inc
adc
scas
cmp
pop
cli
or
mov
inc
adcl
mov
sbb
js
xchg
jle
inc
push
sbb
movsl
fisttpl
iret
adc
data16
push
xchg
outsl
dec
mov
and
jne
pop
adc
inc
mov
movaps
lcall
inc
mov
loop
subl
xor
xor
push
inc
lahf
btcl
lock
sub
push
jl
mov
mov
xor
pushf
lea
mov
fucomip
pushf
cmpsb
pop
enter
jns
pop
jno
imul
cwtl
fdivs
push
add
push
sub
or
in
mov
sub
mov
mov
std
mov
xchg
test
cmp
sub
dec
xor
rorb
sub
jae
aam
icebp
mov
cmp
fcmovu
jns
imul
in
push
mov
je
adc
ret
pushf
dec
dec
or
frstpm(287
xlat
ljmp
jg
in
cli
cmp
icebp
cs
pop
inc
das
xor
dec
jb
mov
arpl
add
repnz
pushf
pop
pusha
test
adc
xlat
sub
jno
jecxz
inc
mov
push
xor
movsl
shl
xor
cmp
cmp
lds
jnp
push
cmp
cmp
test
repz
jmp
xchg
pop
aam
jnp
jl
outsb
out
fidivrs
jns
pop
sub
jae
push
sbb
sub
daa
add
add
or
pop
fs
pop
std
jmp
jecxz
testl
lock
scas
mov
pusha
ficompl
mov
pop
or
mov
gs
xor
mov
js
aad
sub
sahf
dec
mov
xchg
iret
enter
jns
movsl
loope
and
adc
bnd
stos
ljmp
stos
jae
mov
bound
jbe
mov
xor
cli
movsb
jmp
outsl
in
jnp
jb
outsl
xor
cs
xor
push
push
or
xchg
insl
adcl
in
ljmp
popf
ljmp
dec
movsb
sbb
mov
or
jmp
jne
xchg
mov
lret
enter
push
fisubs
dec
push
pop
cmp
mov
adc
in
or
pop
jbe
pcmpgtd
std
cltd
pop
xor
popf
fistl
push
sub
movsl
inc
ret
cmp
pop
cmp
lods
popa
in
in
lret
mov
sub
inc
inc
addb
out
fucomip
fwait
xchg
stos
or
mov
mov
mov
jo
in
sub
inc
cwtl
xchg
das
popf
lahf
mov
inc
jno
out
fwait
cs
push
mov
fisttpll
sbb
mov
mov
pop
dec
ret
call
das
test
and
lods
or
dec
data16
not
sarl
fidivrl
dec
loope
jg
fldenv
pusha
inc
shrl
test
push
mov
mov
fisubrs
push
pop
xchg
adc
sub
mov
arpl
mov
out
cmp
in
sbb
cld
or
inc
scas
negl
cld
dec
mov
es
or
and
jmp
sub
aaa
and
xor
stos
cmp
push
filds
sbb
fisttps
add
jle
cmp
or
shlb
call
mov
xchg
mov
ret
jnp
cmp
loopne
and
push
ret
adc
outsb
xor
dec
shll
cmp
xchg
push
loop
sub
lods
data16
mov
cmp
mov
inc
popa
mov
aad
into
push
fdivs
jnp
cmp
xor
ja
xchg
xchg
dec
push
test
gs
add
scas
lea
out
mov
call
jp
in
mov
xor
xor
jbe
xor
arpl
xor
xchg
push
scas
clc
cmpsb
insb
jg
imul
mov
mov
pop
push
iret
cltd
push
sub
inc
bound
or
inc
dec
sub
out
or
push
mov
ficomps
xorl
or
cmp
cmp
leave
out
loopne
or
jg
pusha
fucomi
outsl
ficomps
push
and
and
and
lods
sub
scas
xchg
jae
and
inc
lcall
mov
inc
sahf
jl
das
mov
gs
fstpl
push
mov
insb
int3
xchg
add
inc
sbb
lcall
cmp
lret
sbb
push
fadds
inc
shlb
add
stos
push
icebp
mov
rorb
adc
sub
rclb
ss
movsl
imul
test
mov
out
xchg
mov
popa
push
fdiv
add
jnp
mov
or
rcrb
add
in
stc
cmpsl
add
sbb
in
stos
mov
mov
shl
out
sub
mov
sti
nop
stos
sahf
lahf
dec
pop
add
sbb
xchg
sti
xchg
divl
inc
mov
lcall
dec
pop
out
rorl
xchg
ret
bound
push
lods
jmp
jbe
insb
out
mov
arpl
xor
cmp
incl
inc
gs
pop
addr16
out
fs
cs
mov
lods
mov
sti
cmpsb
shlb
dec
sub
sarl
mov
pop
push
scas
mov
sub
in
hlt
push
cmc
or
cmp
mov
sti
popf
jno
xchg
push
push
xchg
add
aam
filds
add
bound
pop
cmpl
xlat
pop
hlt
xor
lea
mov
fxch
stos
shll
int3
add
lcall
add
xor
es
or
pop
jbe
and
sub
aas
out
rorl
data16
inc
lcall
adc
sub
test
xchg
adc
sarb
popa
push
inc
pop
aam
daa
jl
push
sbb
outsb
aas
add
and
mov
and
or
ret
xlat
or
cmp
std
mov
dec
loope
push
sbb
loopne
sub
in
mov
jne
aam
scas
fcomps
dec
les
push
data16
or
xlat
in
fidivl
hlt
jbe
xchg
pop
xchg
mov
aas
pop
pop
cmp
add
sbb
imul
mov
mov
jns
mov
push
rclb
adc
dec
aad
std
jge
loop
call
inc
loop
push
inc
cmc
lahf
cmpsb
cmp
orb
xchg
sar
mov
mov
ds
jno
in
inc
fwait
sbb
push
mov
cs
cmpsb
cmpsl
insb
stc
sub
xchg
gs
jge
sbb
adc
xor
sarb
mov
icebp
jne
sahf
lods
imul
or
xchg
ds
xchg
and
pop
fisubs
inc
repz
lock
in
pop
lods
mov
dec
push
and
mov
popa
ret
mov
dec
outsb
and
movsl
jl
pop
sarl
ret
aaa
iret
arpl
cmp
repz
mov
outsl
xchg
cmp
aas
mov
add
xchg
adc
cmpsl
mov
jae
and
fisttps
push
push
cmp
shl
ret
mov
push
into
xchg
mov
push
mov
sbb
das
mov
mov
in
push
ja
mov
mov
push
mov
inc
pushf
jne
mov
inc
js
sbb
loop
jg
cmp
pop
push
jno
xchg
xor
inc
sar
inc
nop
test
push
pop
lods
in
push
sub
pop
hlt
dec
test
pop
imul
push
cmp
sbb
cwtl
push
in
jbe
pusha
rclb
xlat
inc
cli
cltd
sbb
jecxz
mov
mov
lds
loop
hlt
mov
cmp
mov
pop
sub
ljmp
cmp
cli
pushf
int3
jno
cmpb
les
scas
fstp
les
lahf
mov
js
or
push
push
jbe
xor
mov
jae
mov
icebp
add
imul
stc
sbb
pop
cmc
or
std
imulb
loopne
pop
mov
outsb
xor
adc
decb
xchg
pop
xchg
pop
xor
ja
leave
mov
or
add
xchg
mov
jbe
or
sub
bound
rolb
mov
push
icebp
fs
icebp
xchg
in
out
ret
popa
outsb
jmp
lret
in
sbb
lds
enter
std
push
test
sbbl
or
aas
pop
xchg
push
in
add
cmpsb
mov
lcall
xchg
test
std
mov
fsub
and
sbb
push
push
jle
dec
test
jmp
mov
inc
xchg
stc
enter
and
or
cmpsl
pushl
push
fs
jmp
xor
addr16
cmp
gs
ja
xchg
in
mov
dec
outsb
lret
jle
ds
mov
test
and
fldcw
ficomps
fcmovb
or
mov
pop
in
and
sahf
and
sti
xchg
sub
or
shlb
test
jne
scas
mov
mov
scas
mov
int
fscale
adc
jb
sbb
dec
fsub
mov
jbe
cmp
adc
lahf
push
subl
sbb
pop
cmpsb
repnz
sub
mov
repnz
lahf
sub
push
in
xchg
and
dec
sbb
mov
dec
cmc
idivl
xor
sarl
std
clc
fisttps
mov
mov
out
mov
cmp
push
fwait
mov
push
imul
jo
mov
mov
xchg
rolb
mov
ja
pusha
sbb
push
or
mov
and
pop
roll
imul
or
aam
outsb
lahf
call
xor
les
pop
dec
xor
cmp
xchg
sbb
out
mov
popf
shr
int
push
jecxz
je
dec
jbe
ja
mov
loop
scas
loopne
mulb
rorb
lods
xchg
sub
popf
scas
into
xchg
pop
and
ficoms
pop
popa
pop
into
lea
fs
insb
xor
loop
incb
ret
jb
movsb
stc
pushf
and
fisttps
movsl
cmpsl
add
test
iret
pop
fdiv
enter
add
or
imul
jmp
dec
mov
add
mov
mov
dec
inc
in
jmp
add
add
dec
add
lret
lret
xchg
popl
mov
mov
adc
and
fwait
shll
cmpsl
cltd
setbe
clc
movsb
imul
fldl
pop
rcll
and
movsl
mov
or
into
negb
mov
scas
push
jp
shl
pop
aam
ljmp
jno
ljmp
lds
stos
pop
cmpsl
jb
lods
mov
sahf
roll
push
mov
sbb
repz
dec
cmp
mov
mov
xor
push
cli
sub
add
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
andl
mov
pop
bound
gs
inc
cmp
das
ret
xlat
dec
jne
jno
pop
push
mov
dec
mov
cmp
cmp
fwait
push
mov
roll
dec
mov
pop
les
xchg
xor
ret
popf
inc
xor
xor
aaa
xor
xor
mov
or
add
add
out
arpl
cmp
mov
pusha
sub
sbb
xchg
pushf
xchg
std
lret
repz
xchg
jl
lods
in
lret
xor
mov
out
inc
iret
mov
and
aas
shll
nop
push
cmc
inc
or
jnp
scas
loopnew
mov
fstpt
jnp
dec
shrl
icebp
enter
and
scas
fmuls
ja
jmp
and
dec
adc
dec
and
fwait
sub
mov
movsb
push
movsl
gs
cld
out
popa
jbe
jl
fstpt
push
xor
gs
cmp
jle
add
rcrl
jl
sbb
loope
mov
push
call
inc
push
xor
icebp
subb
fnstsw
daa
imul
mov
adc
stos
sbb
lea
js
xor
out
clc
xor
ds
jg
cli
xor
hlt
and
push
xchg
xchg
jae
mov
xor
dec
loop
xchg
in
shr
rcrl
mov
adc
sbb
enter
cmp
les
cwtl
add
adc
lds
imul
sub
into
dec
jecxz
shll
popf
inc
or
push
jg
xchg
push
sub
jmp
adc
test
out
or
pop
dec
and
out
insl
lret
add
jle
shl
dec
xchg
clc
cmp
or
push
ds
adc
cmp
mov
addb
out
xorl
xchg
mov
jbe
shl
cmpsb
repnz
dec
movsl
jno
inc
sub
adc
inc
fwait
push
jno
mov
das
iret
cmpsb
adc
fidivrs
mov
add
sti
and
mov
cld
icebp
inc
data16
ss
mov
int3
aam
push
add
adc
mov
jle
push
clc
mov
cmpsl
xor
push
lds
ss
loopne
inc
outsl
sub
shll
xchg
ret
test
mov
jl
sub
xchg
cmpb
mov
sub
nop
and
jge
enter
imul
pop
ret
sbb
fwait
or
or
cli
push
fcomps
inc
ret
and
dec
push
jg
pop
faddp
pop
dec
sbb
lods
cltd
jp
outsb
pusha
cwtl
push
push
xchg
cltd
mov
and
cmpsl
sbb
add
imul
push
push
mov
mov
out
inc
sbb
shl
xchg
out
shll
mov
call
pop
lret
and
andl
fwait
mov
cmp
mov
xchg
jg
inc
stos
xchg
cmp
mov
mov
test
push
addr16
pop
fs
jbe
xchg
mov
cmp
and
addr16
cwtl
or
dec
popf
fadds
mov
sub
sub
or
cmpsb
inc
pop
sbb
lahf
mov
das
pop
in
mov
insb
daa
dec
sahf
mov
jno
mov
cltd
test
cli
adc
pusha
ljmp
mov
std
sub
leave
scas
mov
imul
mov
sarb
jge
icebp
jle
cld
xlat
and
mov
xchg
pop
ret
xchg
dec
scas
pop
ja
push
jns
mov
stc
pop
loopne
loope
out
pop
adc
mov
or
xor
fstps
inc
mov
push
cmp
insl
inc
mov
sbb
push
mov
cmp
andb
lods
lds
or
xchg
out
sub
lcall
lcall
bound
add
je
and
xchg
jl
mov
arpl
aaa
pop
and
in
or
lahf
jl
xor
fstpl
and
inc
mov
leave
sbb
cmp
idivl
std
mov
incb
cmp
xchg
mov
mov
ljmp
jae
mov
int3
xchg
cmp
pop
cwtl
push
pop
mov
insl
in
dec
mov
cli
gs
inc
and
movsl
testb
sub
xlat
mov
lahf
sub
mov
fdivr
dec
xor
sbb
cmp
pop
bound
cmc
add
stos
loop
xlat
jge
adc
mov
cmc
adc
push
imul
sbb
add
sbb
ret
jno
icebp
lea
mov
ds
mov
sub
cmpb
pop
or
mov
jae
add
imul
ret
xchg
and
cmc
mov
adc
pop
loop
hlt
ljmp
cwtl
sbb
cmp
pop
repnz
popa
mov
repz
rclb
add
adc
addr16
dec
jae
jno
mov
iret
mov
loop
pop
les
test
rol
mov
jmp
xchg
aad
test
movsbl
imul
lret
push
xor
sbb
sub
mov
dec
sbb
adc
cs
adcl
adc
sbb
add
or
push
dec
loopne
icebp
fsubrl
cmp
inc
std
jne
cwtl
dec
pusha
mov
lock
mov
or
jns
sti
jmp
lds
cmp
je
push
mov
fnsave
fcmovbe
mov
aad
sbb
dec
sub
clc
push
fisttpll
pop
out
mov
xlat
repnz
push
fs
stc
stos
test
fildll
cli
test
out
in
jo
dec
aaa
stos
add
push
xchg
inc
aam
or
push
test
iret
orps
jp
xchg
fisttpl
fimull
ds
mov
nop
popa
es
sbb
mov
fistpl
jns
inc
in
les
cs
inc
out
jae
push
pop
push
fbstp
fdivs
test
xor
inc
test
pop
shr
dec
les
mov
cmp
adc
mov
lret
xor
jo
aam
xor
popa
mov
sub
sub
clc
imul
std
int3
push
stos
out
fmuls
je
lcall
out
into
icebp
scas
push
xchg
adc
cmpsb
cmp
add
in
and
xor
loopne
pushf
ljmp
test
cwtl
movsb
sti
jb
pop
aad
in
adc
fidivrs
ja,pt
mov
stos
mov
aaa
pushf
jecxz
mov
cmp
jb
push
xchg
xor
or
xlat
jno
dec
rolb
cmpsl
sbb
push
cld
lret
imul
cmp
jecxz
sub
testb
data16
aaa
pushf
add
and
test
lret
inc
jl
imul
xchg
and
mov
add
sbb
push
jno
movsl
xchg
dec
xchg
f2xm1
cmc
cld
and
mov
dec
rclb
or
jae
add
pusha
ret
aaa
jbe
pop
out
je
inc
ret
xchg
dec
push
xchg
and
or
inc
cmpsb
js
sub
jmp
insl
push
iret
adc
pop
in
or
pop
mov
and
inc
mov
mov
xchg
sub
sub
xor
and
mov
or
fstpl
pop
fldlg2
push
mov
fdivl
scas
vphaddudq
mov
pop
pop
adc
mov
cmpsl
dec
adc
gs
sbb
jb
imul
pop
shlb
jns
pop
je
out
icebp
clc
pop
jp
mov
fwait
imul
imul
js
loop
ljmp
in
xor
sub
in
and
mulb
sbb
jg
out
inc
ja
lret
call
pop
addr16
call
push
jmp
cmc
sub
and
cmp
pop
sbb
testb
push
lahf
xlat
out
addr16
int3
loop
lret
sbb
call
push
imul
jle
mov
test
push
adc
xor
test
push
add
and
adc
insb
mov
mov
add
and
iret
push
into
pop
cmp
sub
lods
repnz
sarl
add
scas
nop
dec
jnp
mov
test
lcall
out
dec
pop
fdivr
cs
in
int3
hlt
negb
adc
les
shr
mov
fmuls
cmc
jbe
repz
add
fs
cmp
adc
xor
inc
subb
outsb
mov
adc
fildll
adc
jmp
jb,pn
iret
dec
inc
scas
jl
cmp
arpl
ja
loopw
mov
sub
sbb
sbb
test
xorl
clc
sbb
jp
lods
in
lahf
sub
int3
pusha
mov
adc
jmp
in
and
call
int
lock
push
rcll
movsb
dec
ret
dec
mov
pop
sub
call
scas
sbb
icebp
dec
mov
fcmovnu
push
out
scas
pop
stos
ficomps
mov
cwtl
xchg
cmpl
sbb
xchg
jge
push
cs
inc
push
sub
sbb
pop
mov
cli
idivl
loope
popa
pop
sbb
dec
test
test
sbb
xor
scas
nop
mov
test
les
jg
add
lods
iret
sarb
mov
dec
in
icebp
push
fsts
inc
inc
xor
mov
div
sub
popf
rcll
mov
into
xor
mov
shlb
adc
mov
cmp
mov
jmp
enter
sub
clc
mov
jg
push
pop
popa
xchg
mov
test
rcrb
test
fldenv
inc
lahf
shl
jecxz
adc
into
jle
je
and
xor
dec
mov
cwtl
insl
or
adc
jp
adc
sbb
sub
movsl
cmp
adc
add
dec
cwtl
movsl
pop
push
les
push
pop
sbbb
adc
rcr
stos
pop
test
mov
cmpsb
xor
shlb
jmp
std
jae
pop
push
addr16
inc
jge
insl
iret
or
cmp
movsb
testl
enter
in
je
sbb
adc
stos
and
in
js
cs
push
inc
fisttpll
loope
dec
mov
mov
add
sti
clc
es
out
mov
cmp
push
adc
ss
jbe
and
pop
mov
int
jl
inc
movsb
pop
jno
notb
ret
xor
jecxz
add
jg
ljmp
mov
jne
int3
dec
fwait
push
push
fmuls
pop
pop
jle,pn
lea
ljmp
imull
add
repz
push
repnz
fxch
pushl
addr16
push
lcall
ret
std
mov
js
arpl
lock
int
add
jo
test
dec
dec
xor
stos
xchg
xchg
jne
sbb
scas
pop
imul
mov
inc
jmp
cmc
sbb
or
and
jmp
clts
incb
pop
mov
mov
mov
nop
out
fistpl
loop
lahf
mov
or
add
dec
mov
sbbl
mov
in
adc
aad
xchg
adc
into
fisubrs
jnp
jmp
sub
sbb
outsl
lock
lea
or
dec
out
movsl
inc
xlat
sbb
jo
xchg
ljmp
or
fs
pop
sub
movsb
cltd
and
jecxz
cmp
push
das
inc
out
or
jmp
cmp
adc
jnp
pop
cmp
aas
icebp
fsubr
or
out
inc
cwtl
xchg
lahf
mov
rolb
or
sbb
loop
stos
popf
lds
rcrb
xchg
cmp
outsl
sbb
xchg
and
sub
and
add
mov
mov
bound
sbb
pop
adc
xor
cmpsl
and
pop
rcrl
pop
or
mov
clc
jp
push
lahf
mov
ror
loopne
sahf
lahf
push
xchg
xchg
out
js
fsubs
enter
mov
je
test
mov
ljmp
pop
mov
lret
mov
jmp
test
jp
call
dec
mov
jg
scas
sbb
mov
lods
ret
ljmp
pop
push
sahf
fldl
sub
sub
lahf
das
js
jae
popa
mov
daa
mov
and
leave
mov
mov
addb
js
cli
xchg
add
push
dec
push
data16
pop
out
sbb
repz
mov
loope
add
gs
mov
vpshab
mov
es
jno
mov
fidivs
pop
pusha
lcall
adc
xor
pop
add
inc
sub
flds
mov
and
in
sub
jle
out
sub
xchg
stos
add
aas
push
subb
jno
pop
jmp
imul
fmuls
and
in
mov
mov
scas
sub
sub
mov
mov
imul
lods
sbb
mov
push
add
xor
and
movsb
rolb
mov
sub
cmp
dec
fs
notl
and
pop
cmp
mov
dec
mov
cmp
shrb
enter
lea
iret
xor
shll
xchg
mov
jecxz
cmpsb
adc
jle
and
mov
les
mov
sub
jo
int
pushf
lret
sub
jp
add
lock
push
jo
inc
lea
das
pop
inc
addl
xchg
fs
aam
test
aam
mov
cmp
add
mov
and
icebp
jge
ds
sbb
mov
jle
dec
rcrb
push
inc
xchg
jmp
cmpsl
and
dec
mov
push
xchg
pop
stos
dec
lods
fbld
fisttpl
cmpsb
imul
xchg
and
pop
leave
iret
arpl
dec
cmp
dec
and
scas
lea
xchg
inc
hlt
push
push
cmp
dec
adc
sbb
jnp
inc
sbb
sbb
mov
and
xchg
fisttpll
cmp
lock
stc
pop
loop
pusha
xchg
subb
scas
cmc
jns
xchg
rcrl
jmp
pop
cltd
stos
add
push
imul
or
roll
dec
test
inc
fsubp
clc
movsl
push
mov
xor
push
dec
inc
lahf
jp
mov
sbb
inc
and
scas
xchg
out
add
out
mov
mov
mov
push
fnstcw
push
ret
cmp
pop
push
sti
xor
shl
pop
popa
pop
arpl
xchg
xchg
notb
ljmp
movsl
jns
xchg
into
daa
pinsrw
mov
data16
mov
jns
jecxz
sub
dec
push
or
adc
pop
rol
add
arpl
fsts
cwtl
sbb
inc
out
and
mov
stos
cld
xchg
arpl
cmpsl
jbe
mov
inc
mov
aaa
sbb
sub
dec
lret
mov
or
stc
xor
data16
and
pop
rolb
data16
cld
push
out
mov
or
or
fildll
adc
or
mov
mov
popa
jns
jmp
xorb
jns
mov
sbb
lds
jmp
and
cmp
loope
scas
out
fildll
mov
in
or
sub
dec
and
push
cmc
jp
sbb
addr16
xor
rcrl
decb
in
das
rcll
pop
and
and
xlat
push
pop
cwtl
xchg
mov
mov
mov
xchg
sbb
push
add
sti
xchg
in
out
xor
hlt
sbb
xor
outsb
loop
jp
adcb
xchg
cwtl
mov
and
aad
bound
cwtl
sbb
or
xchg
adc
sub
nop
add
cwtl
push
fdivrs
ds
mov
xor
mov
pushf
and
sbb
aaa
loop
mov
mov
push
rcrl
inc
mov
add
outsb
mov
xchg
insb
sahf
cmpsl
jge
dec
adc
out
mov
inc
add
aas
sbb
lea
arpl
and
pop
mov
icebp
push
jns
mov
scas
jne
inc
movsb
pop
aas
or
sub
dec
xchg
aad
pushw
cmpsb
push
pop
add
dec
dec
out
sub
and
and
adc
ret
ja
lret
std
ret
cmp
rcrb
dec
sbb
out
jnp
sub
mov
sbb
push
mov
stc
pop
lret
add
xchg
xchg
dec
inc
cmpl
cmp
mov
xchg
add
or
sahf
ljmp
aam
int3
les
leave
mov
fiaddl
push
mov
jnp
es
push
leave
pop
inc
les
and
and
sub
je
xor
xor
push
cs
cmp
dec
pop
stos
out
adc
xor
or
inc
push
push
jb
sub
in
mov
and
xor
pop
test
adc
mov
pop
out
and
or
imul
dec
or
repz
push
xor
subl
into
jo
bound
adc
adcl
xchg
fildll
movl
mov
lcall
scas
fwait
test
dec
sbb
jno
cltd
xor
xor
rcll
dec
outsb
mov
fwait
jle
arpl
stos
pop
sbbb
rorl
mov
jecxz
dec
and
pop
test
sahf
xchg
push
arpl
test
arpl
pusha
mov
sbb
in
inc
aad
push
test
cmc
enter
lcall
jnp
xor
fisttpl
sub
push
cli
sub
pop
push
in
test
jecxz
push
and
nop
rolb
lret
lods
adc
insl
jbe
je
cmp
mov
orb
out
sub
xor
cmp
pop
xor
int
jl
and
or
out
insb
pop
aas
arpl
adc
jno
loope
pop
pop
sub
lea
addb
mov
and
popf
adc
cmp
bnd
dec
pop
filds
and
push
inc
adc
stos
sbb
pop
or
sub
out
push
and
fadds
jo
fisubs
stc
and
shlb
or
cmp
jg
mov
pop
dec
lahf
push
les
insb
test
push
jb
roll
push
popf
scas
cmpsb
pusha
shll
dec
jl
sti
xlat
insl
fstl
inc
out
arpl
mov
jl
sbb
sub
in
mov
ljmp
daa
ss
lods
adc
jns
xchg
or
test
clc
iret
jmp
lcall
dec
jl
push
ljmp
sbb
sbb
scas
mov
leave
repz
stos
mov
fs
pop
ficomps
and
shl
repz
sub
xor
sahf
mov
lret
pop
xchg
inc
and
jge
dec
sub
mov
mov
adc
cmpsl
out
jl
and
int
mov
inc
movsl
movsl
gs
cs
mov
fidivs
les
push
inc
lods
push
dec
cmc
dec
pop
or
adcl
mov
pop
add
jge
hlt
imul
dec
ljmp
enter
popw
leave
js
and
inc
out
dec
xchg
pop
cmp
cmp
roll
push
jb
insl
cli
cmp
dec
cmp
lods
xor
stos
sbb
test
int3
jb
cwtl
fldt
or
hlt
sub
call
jp
shrl
ds
dec
rcrb
in
mov
or
sbb
xchg
sub
mov
xchg
pusha
cli
ret
icebp
cwtl
fldl
and
mov
ret
adc
dec
ja
cli
or
fs
push
daa
mov
xor
push
sbb
sar
push
ss
dec
lock
sbb
mov
push
xor
sub
cwtl
mov
out
scas
cwtl
sbb
sub
cmc
shl
fcompl
adc
xor
mov
decl
shr
lods
sti
ret
dec
jno
addr16
pop
xlat
fiaddl
loop
lock
push
push
mov
aas
pushf
xor
mov
pusha
loopne
jmp
std
dec
dec
push
xchg
add
mov
test
cmp
bound
in
xchg
mov
test
add
adc
incb
sub
jp
mov
xchg
cld
xchg
hlt
arpl
lahf
std
mov
jmp
je
add
mov
aas
pushf
in
pop
xchg
cmp
adc
loop
lcall
jne
test
shl
push
mov
pop
pop
lahf
rorb
jle
pop
daa
xchg
cs
add
sbb
addr16
push
pop
jecxz
push
fdivrl
pop
pop
flds
cmpb
add
mov
xorl
fldcw
fldt
jo
fcoml
xchg
stos
sub
in
cmpsl
mov
mov
inc
cmp
insl
or
pop
xchg
add
push
sub
repnz
cli
push
cmp
add
lds
sbb
xchg
xor
pushf
pop
movsl
xor
sbb
add
adc
aas
add
push
jno
jnp
repnz
sbb
or
loop
mov
cmpsb
sbb
jg
sbb
out
jo
mov
addr16
mov
aaa
push
movsl
fs
hlt
outsl
xchg
or
xchg
inc
fcmovu
fildl
dec
and
push
ret
pop
inc
int3
dec
sub
scas
test
pop
mov
js
push
push
adc
fsubs
jge
mov
push
jb
and
shl
pop
fiadds
pop
dec
inc
fcmovb
inc
and
lret
cltd
in
cmp
hlt
cli
lods
xchg
cmp
dec
xor
adc
psraw
roll
ja
or
fwait
les
push
xchg
push
scas
pusha
stos
xchg
cmp
ss
pop
ja
add
movsl
mov
jo
lea
in
jno
insl
xor
ljmp
add
ret
xchg
pop
mov
cwtl
lret
xor
lock
into
mov
xchg
rorb
inc
ljmp
call
pop
push
lds
ljmp
adc
leave
rclb
jbe
lcall
jno
jl
ficompl
pop
ljmp
roll
ljmp
outsl
out
maxps
pop
xchg
lea
lock
adc
mov
jp
clc
ud0
pop
jmp
repnz
xor
fildl
cmp
lea
push
xorb
inc
das
repnz
aam
xchg
push
test
in
gs
insb
mov
out
xchg
jne
fnstcw
aad
xor
lds
fistps
cmp
pusha
sub
rclb
and
inc
mov
cmc
sti
fnstenv
ja
les
adc
movsb
dec
cmpsb
dec
jg
daa
or
pop
je
clc
inc
out
lret
rolb
aaa
and
je
lret
xchg
sbb
mov
sahf
mov
testl
cmp
cwtl
xchg
cmc
cmp
pushw
ljmp
dec
push
popa
xchg
ret
jmp
fstpl
int
mov
out
mov
es
mov
addr16
dec
add
shl
sub
mov
mulb
adcb
cwtl
mov
sahf
cld
cld
adc
push
push
inc
lret
arpl
inc
sbb
imul
inc
jg
movsl
push
push
loopne
push
and
mov
mov
mov
xchg
xchg
fcomip
sbbl
adc
mov
imull
subl
pop
in
clc
movsbl
push
orl
and
pusha
mov
mov
int3
jp
xchg
cltd
dec
add
and
mov
push
or
jle
add
or
aam
pop
clc
ficompl
mov
sub
add
imul
pop
or
popa
sub
addr16
push
mov
lds
into
hlt
add
dec
push
repz
push
xchg
lcall
loopne
mov
push
aas
dec
or
fldl
or
push
loop
clc
mov
pusha
inc
testl
cmpsl
sbb
sub
mov
add
cmpsb
push
push
in
xchg
xchg
movsb
in
fnstenv
sub
jbe
jbe
mov
notl
pop
int
rorb
jb
pusha
add
enter
push
mov
or
add
addb
lods
test
mov
inc
in
out
mov
sub
movsb
int3
sub
mov
leave
or
pop
sub
xchg
mov
mov
mov
mov
repz
stos
dec
inc
add
movsl
mov
inc
lds
cs
subb
out
sub
push
rorb
arpl
int3
xorl
jl
jg
int
sar
rcll
cmp
mov
add
add
lock
adc
mull
cmp
int3
out
cmc
insb
cmp
pushf
push
out
jecxz
out
mov
jae
push
enter
mov
sbb
dec
pop
dec
enter
fidivrs
fwait
test
add
push
daa
mov
cmp
rorl
mov
mov
jg
jmp
inc
fcoml
and
rcrl
aaa
shlb
pop
cltd
jmp
jo
xor
push
stos
fwait
into
gs
cmc
push
icebp
lret
or
mull
hlt
scas
jo
cs
mov
shll
or
loope
mov
or
shrb
add
stc
daa
jg
call
lods
aas
loop
and
push
aam
lds
jl
shlb
insl
xchg
gs
rcrl
mov
das
mov
lods
and
addb
xchg
in
popf
dec
xchg
lret
int3
negl
in
push
mov
sub
sbb
mov
add
rcr
mov
sbb
sti
in
std
in
push
xor
pop
fsubl
call
inc
sbbl
scas
jne
add
ss
cmc
lret
imul
sbb
imul
push
in
mov
cs
mov
pop
rorl
ret
or
push
cmp
sbb
int
mov
lcall
ret
mov
mov
mov
dec
adc
ja
mov
test
lods
outsb
sub
mov
cmp
ret
aad
ja
loope
mov
dec
mov
js
mov
xchg
cld
mov
ja
adc
sub
pop
and
bound
xor
inc
xchg
or
fbstp
es
adc
icebp
and
test
repnz
das
roll
cmp
sbb
push
fstps
and
mov
lds
and
xchg
adc
sbb
notl
cmp
dec
sub
inc
sbb
addr16
and
mov
and
push
cld
dec
rcll
cltd
sub
xor
lcall
mov
cmp
inc
add
cwtl
xor
pop
fcompl
mov
mov
stc
lea
push
pop
movsb
movsl
movsb
sti
pop
ljmp
inc
jbe
cld
adc
ret
loop
movsl
pop
sub
jecxz
rorb
aam
adc
outsb
sub
lcall
xchg
or
add
shll
mov
jle
fstl
sub
push
mov
rolb
mov
inc
push
add
jae
enter
and
call
xchg
fnstenv
add
call
xchg
lods
sub
mov
jno
cmp
pop
popf
cmpsl
push
cmp
shll
scas
cli
add
pop
jb
jmp
gs
sahf
sahf
scas
pushl
loop
pop
fld
test
imulb
jnp
mov
cvtps2pi
dec
xor
movsl
sub
out
fisubrl
dec
insb
dec
sbb
icebp
add
aad
cmpsb
fists
mov
mov
and
jae
cmp
add
js
pusha
inc
dec
xor
cmpsb
sub
or
cmp
sbb
mov
out
cmc
stc
mov
push
test
xchg
daa
das
movsl
mov
cmpsl
int3
adc
dec
inc
sub
cmp
popa
push
inc
push
and
mov
shrl
mov
mov
lock
pop
aam
add
pop
xchg
mov
hlt
cs
pushf
inc
add
in
adc
adc
cmp
xorb
mov
imul
adc
cmp
dec
jb
jbe
xor
jo
cmpsl
mov
lea
mov
addr16
cmp
push
hlt
cmp
sub
leave
xor
push
push
add
push
jns
or
jg
popa
or
add
imul
dec
inc
and
jns
pop
imul
loope
xor
mov
ret
xlat
out
outsl
test
int
push
sar
xchg
repnz
add
ret
dec
ljmp
add
add
mov
adc
in
shlb
jne
cli
push
decb
sub
inc
cwtl
fs
fldcw
push
jge
sbb
repz
fcoml
lods
aas
cmc
out
jl
cmp
outsb
push
ss
es
push
jecxz
jp
dec
clc
popf
push
bound
in
sub
shrb
dec
dec
out
xorl
in
jae
push
fwait
dec
lret
ficomps
mov
mov
movl
mov
das
loop
ret
mov
cmp
aaa
movsl
xchg
jnp
inc
rcll
pusha
test
hlt
sbb
fistpll
iret
and
cmp
sbb
ss
rcrb
lds
cwtl
fldl
mov
push
xchg
add
mov
xor
lret
imul
xchg
sub
cli
pop
ljmp
sbb
test
daa
ror
scas
add
mov
lret
pop
pop
dec
out
test
pop
push
cmp
mov
clc
insb
push
sub
int
lods
stos
cmp
cmp
repz
mov
push
mov
jl
insb
and
mov
fistl
add
cmpsb
pop
movsb
popa
mulb
movsl
les
ss
sub
pop
pop
add
mov
je
dec
adc
hlt
pop
xorb
outsb
lahf
ret
mov
movlps
pushf
push
or
mov
xchg
cltd
sub
cmp
sub
pushf
rcr
mov
mov
fistl
stos
push
fldenv
ds
and
andl
push
pop
push
int3
xorb
sti
jmp
mov
fbstp
in
pop
mov
mull
or
pop
shlb
cmp
and
pop
mov
in
mov
or
or
lea
jge
js
mov
es
ficompl
fistpl
repnz
and
mov
cmp
cs
rorl
ret
clc
std
insl
mov
fdivl
dec
mov
out
insb
inc
adc
scas
inc
stos
add
xor
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
lock
or
pop
bound
nop
lock
cs
jno
dec
jne
lret
aad
adc
lods
cmp
mov
dec
mov
xor
sub
add
mov
stc
scas
xor
jecxz
jmp
sub
inc
fcmovnbe
add
inc
mull
aam
out
or
addr16
je
mov
pop
adc
xchg
leave
push
and
rorl
adc
xor
jecxz
into
xchg
xchg
adc
aam
xor
adc
inc
mov
bound
int
ret
imul
cwtl
rorb
pusha
fwait
add
add
inc
movsl
mov
inc
sbb
or
push
ljmp
outsb
mov
jle
sub
jno
stos
stos
loope
mov
or
pop
inc
inc
jnp
leave
sub
stos
je
xchg
push
repnz
pusha
mov
mov
pop
or
inc
bound
rclb
dec
loop
leave
jne
bound
mov
mov
pop
cmp
repz
cmp
gs
std
add
aaa
push
sti
fs
jbe
les
rorl
loop
push
cli
mov
dec
fistpl
lock
rorb
cmp
push
int
fsubrl
popf
out
mov
pop
jp
cmp
mov
clc
and
xchg
xor
inc
jp
xor
xchg
popf
hlt
lahf
mov
cli
jns
cmpsb
xor
aaa
call
fsubr
leave
fdivrl
mov
mov
stc
add
sbb
mov
push
mov
jecxz
call
mov
stc
xchg
in
dec
popf
les
mov
push
fcomps
icebp
mov
imul
push
outsb
dec
push
les
lcall
in
shlb
jg
fdivp
outsl
dec
fs
pop
fdivs
xchg
jne
pop
fstps
mov
dec
cmp
aas
lods
pop
je
cmp
mull
icebp
mov
cmp
fisubs
mov
pushf
movsb
subb
call
scas
pop
je
movsb
add
push
jae
jne
and
lcall
xor
adcb
adc
dec
cltd
mov
mov
fsts
movb
clc
jmp
in
cltd
or
in
jmp
pushf
add
fmull
stos
dec
mov
or
stc
sbb
adc
adc
ljmp
frstpm(287
addl
into
fwait
call
sub
cmpsb
lret
mov
outsb
push
repnz
xchg
out
sahf
pop
mov
mov
adc
sbb
rcll
xchg
dec
dec
dec
inc
mulb
push
iret
and
stos
sahf
clc
xchg
mov
in
xchg
fs
dec
and
adc
stos
in
mov
and
jbe
fistl
jmp
jecxz
jle
loop
pop
popa
call
icebp
popf
jge
fincstp
xlat
hlt
js
fmuls
pop
and
cld
out
pop
test
in
fisttpll
sbb
fwait
push
lret
rorl
jnp
movsb
lahf
or
xor
pop
push
mov
xchg
fildll
shll
shll
mov
sarb
xchg
sbb
cmp
movsl
xchg
mov
sahf
loop
add
xlat
pushf
jns
pop
roll
iret
xor
xor
js
mov
push
add
subb
lods
pop
scas
sub
xor
xchg
call
pop
insl
mov
pop
sbb
xlat
sbb
or
or
cltd
fcomps
cld
mov
cld
and
lret
cmp
inc
in
jle
lea
out
stos
daa
push
call
push
dec
imul
stos
cmp
mov
add
cmc
les
lods
out
scas
push
sub
pushf
mov
iret
je
out
and
jnp
mov
push
jecxz
and
mov
xor
out
cmp
mov
pop
les
icebp
sbb
sub
jecxz
fdivrl
stos
out
in
stos
pushf
inc
push
mov
in
xchg
jns
and
mov
scas
fsub
mov
out
or
mov
and
lret
dec
push
mov
lds
mulb
test
mov
jmp
or
movsb
mov
outsl
loopne
mov
in
sbb
jb
push
aas
dec
loopne
adc
int
jnp
bnd
jecxz
cmp
scas
pop
dec
jecxz
pop
xchg
and
out
inc
dec
cmp
insb
mull
clc
pop
jae
divl
int3
add
jle
mov
mov
daa
push
sbb
jne
rcl
or
jl
imul
push
decl
imul
repz
jle
jno
out
or
lea
mov
lock
call
imul
aas
gs
outsb
and
fbstp
jbe
and
sub
popa
xor
shlb
push
cmp
mov
push
mov
push
inc
mov
iret
shll
andb
cmp
addr16
ret
xchg
dec
fcoms
addb
ja
int3
adc
js
jge
rcrl
jmp
sub
in
into
adc
inc
jae
pop
stc
jbe
add
sbb
and
loop
push
jle
jecxz
cmp
insb
push
add
in
fs
movsb
cli
cmp
inc
arpl
push
mov
cli
mov
mov
clc
movsb
inc
je
sub
cltd
dec
insb
push
cmp
stc
pushf
in
dec
sub
xor
fisttpll
dec
dec
lea
adc
int
loope
lret
shrl
push
pop
test
stc
das
mov
imul
add
jnp
mov
mov
mov
mov
repz
inc
mov
add
inc
or
xchg
daa
movsb
lods
popa
adc
ja
xchg
push
xchg
subl
mov
inc
sub
pop
lods
incb
xorl
fdivrl
or
pop
pop
inc
movsl
je
mov
cld
pop
jmp
pushf
fmuls
std
shlb
in
imul
scas
cmpsb
lods
and
mov
icebp
out
call
push
lds
cli
xchg
jb
in
and
cmp
cmc
mov
xor
jo
mov
xor
mov
or
stos
lods
lahf
sbbb
data16
mov
pop
jg
push
sahf
xchg
fcmovnb
aaa
jecxz
and
and
es
rorb
test
push
pop
pop
push
data16
fisttps
xchg
in
or
dec
cmp
aad
lret
dec
sbb
adc
mov
fs
cmp
cmp
cmp
mov
pop
imul
adc
adc
clc
add
fstpt
add
jle
add
aad
shll
call
mov
into
divl
inc
ljmp
pop
sbb
lcall
fisubrl
addr16
or
jmp
mov
mov
jl
jl
mov
mov
aad
int
pop
push
lahf
add
xor
into
negl
pop
jno
inc
pop
cmpsl
out
int
movsb
cmp
sbb
lea
dec
jbe
add
jmp
or
outsb
push
xlat
mov
push
dec
lcall
ss
ja
das
das
stos
lret
or
arpl
loope
loope
inc
ljmp
xor
inc
xchg
adc
mov
xchg
add
cwtl
inc
adc
nop
and
sbb
xor
outsl
clc
push
popf
push
daa
leave
jl
cmpsl
leave
pop
add
sbb
xor
adc
sub
rcr
stc
loopne
outsl
cs
popa
mov
nop
xchg
ja
jg
clc
sub
pusha
jnp
imul
int
test
repnz
add
lahf
ret
mov
mov
xor
xchg
gs
jae
inc
pop
jne
and
xor
iret
jae
pop
mov
jg
les
out
ret
push
or
scas
hlt
inc
cmp
sbb
mov
pop
xor
push
out
out
fwait
mov
shrl
dec
dec
xor
pop
mov
pop
cmp
mov
movsl
rcr
pop
mov
add
xor
repz
jecxz
pushf
inc
test
cli
jno
cli
int3
jle
jg
sbb
js
and
mov
in
mov
stos
cltd
pusha
xor
call
popf
cmpsb
mov
int3
push
inc
out
adc
sub
lret
lds
andb
push
test
lods
aas
rcr
cmp
inc
lret
add
xchg
sbb
adc
cmp
pop
push
enter
repz
shrb
out
out
lock
jge
ds
in
mov
mov
scas
sub
call
push
mov
sub
lret
ss
pop
jg
mov
xchg
gs
sbb
sub
push
ljmp
lcall
iret
sahf
sbb
mov
mov
sbb
add
mov
insl
sub
cmp
dec
add
and
insb
mov
ret
iret
cmp
movsb
adc
icebp
cld
mov
clc
cmp
mov
lret
data16
data16
or
rorl
mov
ljmp
sub
or
mov
cmp
sub
and
mov
and
sahf
mov
sbb
popa
shrl
mov
fstps
push
xor
cmp
adc
inc
xchg
mov
cmp
int
fdivp
cmp
test
ret
mov
call
mov
or
xchg
ja
cmp
loop
popf
and
push
mov
pop
addl
jmp
add
test
lret
or
dec
jns
addr16
mov
push
cmp
mov
jno
inc
enter
fwait
in
int
push
add
push
jnp
and
dec
sub
pop
test
mov
gs
mov
and
dec
bound
inc
inc
and
aad
sbb
xor
mov
pusha
movsl
popf
hlt
dec
shlb
mov
mov
sub
inc
popa
mov
pop
gs
push
mov
adc
repz
sti
inc
xor
icebp
xchg
and
cmp
dec
xchg
xor
jge
cs
loop
call
sysenter
or
sbb
add
sub
jp
out
push
cmpsl
xor
mov
mov
sbb
call
cs
pop
mov
das
push
rolb
stos
test
loope
dec
or
xor
adc
std
push
fnstsw
ja
mov
push
and
mov
jge
and
lods
shlb
pop
xor
lcall
in
rorl
mov
inc
sub
in
xchg
xlat
add
jle
test
push
push
cmp
cmp
inc
sbb
std
mov
outsb
push
dec
sbb
addr16
lods
popf
loopne
or
adc
outsb
jecxz
leave
loop
mov
adc
push
jns
out
jle
mov
mov
roll
inc
out
add
push
mov
je
xlat
cmp
mov
lret
jnp
ret
dec
dec
or
popf
sti
cmp
lods
fnstenv
dec
mov
mov
sub
aaa
push
sahf
pop
jmp
adc
pop
js
jb
std
xchg
mov
inc
and
dec
xor
fistps
sbb
mov
push
dec
sahf
fmuls
mulb
nop
scas
cmp
ud2
xchg
lahf
in
xchg
xor
xchg
loope
decl
dec
xor
aad
sub
mov
pop
mov
mov
mov
out
jno
ds
push
pop
sub
in
lock
jge
sub
sbbl
loop
xchg
add
adc
loopne
mov
mov
inc
mov
dec
dec
test
mov
lret
int
sbb
jo
repz
jae
sub
adc
test
sub
into
push
and
push
pop
xchg
ret
jb
adc
jnp
test
pop
sti
mov
je
cmp
neg
mov
xor
lcall
jmp
mov
mov
cmp
flds
and
and
inc
mov
pop
sbb
dec
gs
adc
xchg
ret
pop
mov
rcll
lahf
adc
popf
sub
dec
imul
fsubl
cmp
or
push
jg
enter
popf
adc
ja
sti
loop
mov
sub
cmp
or
xchg
outsl
sbb
daa
test
arpl
pop
std
push
lcall
cwtl
sar
xchg
lea
lock
and
loope
ds
aam
popf
lods
outsb
test
test
or
lret
xor
ficoml
and
jecxz
inc
dec
pusha
jo
stos
xchg
push
ret
scas
lods
jns
inc
mov
jnp
mov
mov
scas
lods
fwait
dec
pop
sub
sbb
jecxz
mov
es
incb
loope
iret
adc
cmp
cmp
adc
enter
dec
je
enter
cltd
aas
sti
shl
mov
or
shl
fldcw
fstp
lock
jl
adc
outsb
jnp
or
mov
lods
frstor
cmp
mov
stos
mov
outsb
cmpsl
orb
call
adcb
orb
jne
call
cmp
dec
lcall
xchg
movsb
mov
sbb
jnp
data16
mov
or
xor
jp
or
jle
xchg
dec
mov
push
dec
push
push
pop
loop
dec
inc
and
jne
xchg
push
inc
pop
pop
jae
lret
idivl
clc
sarl
and
jle
ficompl
xor
insb
ret
xchg
fdivr
mov
shl
mov
popa
or
mov
pop
mov
jecxz
ret
push
fiadds
sub
jae
popf
sub
shlb
aaa
filds
lods
notb
mov
loope
dec
mov
mov
jg
xchg
cmp
jg
sbb
ljmp
in
or
fildl
adc
test
popa
mov
adc
mov
sub
push
das
push
dec
jae
fiaddl
cmc
sbb
cmp
add
aas
les
mov
push
inc
jns
pop
loope
cld
mov
xchg
outsl
aaa
cmpsb
jb
add
out
dec
mov
pop
dec
cmp
push
sub
in
jle
nop
aam
dec
mov
adc
push
cmp
rcl
stos
mov
aas
mov
ficoml
pop
xchg
rcrb
mov
movsb
sub
test
ss
push
mov
bound
adc
xchg
insb
ret
push
or
sub
movsb
xor
into
pop
movsl
dec
push
lret
nop
add
shll
dec
or
movsb
push
das
dec
pusha
xchg
mov
leave
xlat
push
dec
ret
and
insb
clc
xchg
fistps
hlt
movsl
rorl
bound
test
add
push
cmpsl
adc
lods
or
fmull
mov
notb
mov
push
lret
dec
sub
movsb
inc
stc
inc
test
stos
add
mov
mov
pop
bound
jmp
in
fpatan
pusha
repnz
cmc
mov
shrb
insl
or
add
into
pop
in
jecxz
es
inc
ljmp
call
nop
cmpsb
nop
outsb
lock
dec
jns
xor
daa
pop
inc
xchg
lret
imulb
aas
mov
xchg
shl
mov
idiv
add
rclb
mov
push
push
arpl
inc
xchg
leave
loopne
popf
sbb
sub
cmp
rorb
dec
jecxz
xor
repnz
inc
popf
adc
mov
cli
ljmp
popa
out
je
faddl
cltd
rcrl
push
jae
clc
xchg
xchg
ficoms
pop
mov
les
jae
cmpsb
test
mov
test
icebp
cmp
adc
int
loop
rcrb
pop
int3
mov
xchg
test
pop
aam
popa
mov
and
xor
loope
pop
inc
inc
repnz
inc
loopne
and
pop
cmp
test
fsubs
lods
and
mov
mov
xor
std
roll
add
int
xchg
std
out
pop
ficoms
jae
or
scas
and
loopne
jo
jnp
jg
pop
out
arpl
test
cmp
adc
jp
aaa
xchg
dec
inc
mov
sub
nop
ds
cmp
or
xchg
adc
xchg
cmp
fs
mov
popl
enter
test
icebp
pop
xchg
push
adc
jmp
scas
repz
lret
pop
sbb
popa
ret
push
sub
stos
popf
loop
mov
daa
inc
jmp
mov
mov
adc
lods
fsubl
rorb
mov
push
fbld
push
int3
fs
or
divb
lret
cwtl
in
subl
mov
test
dec
mulb
sbb
jmp
aas
stos
jge
imul
aad
mov
add
xor
xchg
xchg
mov
test
das
sub
cld
and
inc
push
jecxz
lea
pushf
sbb
cmp
fs
push
lea
fwait
sbb
insb
and
or
in
pop
push
das
pop
xchg
mul
cmpb
cltd
xchg
dec
aaa
xor
roll
add
push
mov
in
mov
push
rcrl
fucomi
fnstcw
aas
into
push
cli
inc
mov
dec
in
lcall
inc
mov
mov
cmc
or
mov
enter
mov
movsb
push
fildll
jmp
cmp
stos
and
clc
out
or
lret
or
sub
push
pop
fstl
test
ret
imul
or
mov
push
inc
push
mov
ljmp
negb
in
xor
sbb
xor
cmpsl
mov
cmp
push
add
jmp
das
cmpsb
sub
sbb
aas
popa
call
inc
out
lret
and
push
xchg
jns
xchg
sub
cmc
mov
and
adc
pop
push
out
idivb
gs
xor
and
mov
in
shll
dec
fldenv
inc
int
nop
dec
es
jns
pop
fwait
pusha
add
xor
mov
les
push
dec
sub
xlat
and
adc
data16
loop
gs
xor
jbe
mov
mov
pushf
jle
bound
xor
sbb
mov
je
cmp
leave
mov
sub
rcrb
add
mov
popf
sub
cmp
ret
mov
jmp
mov
loopne
outsl
es
fimull
and
ret
test
xchg
mov
pop
iret
mov
fistps
iret
xorl
xor
int3
test
fbld
add
add
divb
jae
dec
sti
xchg
push
xchg
jne
dec
cmpl
sbb
jmp
insb
out
cmp
arpl
imul
cli
cmp
imul
inc
popf
add
or
cmp
and
addr16
fmul
xchg
movsb
cmp
inc
xlat
ljmp
pop
aam
sbb
js
andl
adc
push
mov
push
repnz
dec
popf
inc
xor
rol
lret
daa
leave
arpl
subl
call
mov
pop
ret
loopne
jp
jl
lret
mov
dec
jne
or
out
das
push
xchg
cmpl
add
mov
int
mov
je
jmp
addr16
adc
popf
mov
jg
nop
je
and
imul
sti
jl
and
jmp
decl
add
mov
in
jbe
mov
or
inc
imul
or
jp
cmpsl
jg
lds
add
in
dec
xchg
pop
dec
push
push
jp
inc
dec
dec
popa
jge
mov
push
outsl
cld
pusha
aad
adc
and
cld
mov
call
mov
mov
xchg
flds
iret
inc
stos
lds
or
clc
dec
stc
xchg
ret
repnz
divl
jbe
fwait
push
jnp
add
push
pushf
push
les
inc
fsub
into
sub
dec
mov
sub
int3
xor
xchg
popl
xchg
cmc
in
ljmp
pop
ret
or
or
test
aas
or
stos
sub
mov
push
adcl
inc
cmpsb
dec
outsb
mov
mov
and
cltd
pop
push
pop
mov
add
daa
mov
adc
mov
outsl
push
mov
iret
pop
sub
out
push
pop
add
push
lock
pop
lds
xor
scas
fbld
pop
push
sub
popf
sub
loopne
sub
out
xlat
std
gs
jl
fs
cwtl
adc
and
lahf
cmp
movsl
sub
cmpsb
ja
test
mov
out
jbe
lcall
adc
cmc
add
cmpsl
sub
pop
out
mov
movsl
imul
and
mov
adc
mov
or
aaa
sbb
adc
jge
jl
sub
fsubl
dec
xchg
and
adcl
scas
outsb
ljmp
aaa
pop
in
sar
int3
les
pop
flds
mov
xor
mov
fnstenv
pop
push
jnp
cmp
push
cmpsb
cmp
sub
daa
sbb
stc
sbb
insb
cmpsl
fsqrt
push
clc
dec
dec
dec
stos
ds
mov
push
xchg
mov
sbb
int3
mov
sub
std
js
test
ret
sbb
sahf
sbb
shll
gs
arpl
sbb
fs
dec
pop
dec
test
insl
out
and
or
ja
adc
xor
push
mov
in
jne
or
fwait
gs
pop
xor
and
fnsave
rorb
push
mov
or
mov
jp
dec
pop
stc
cmp
imul
loop
sub
iret
testl
jp
xor
push
js
jbe
mov
mov
repz
test
aas
add
imul
ret
push
sbb
fiadds
and
mov
jp
enter
xchg
stos
adc
lahf
data16
jnp
decl
mov
push
jno
jp
xor
flds
cmp
dec
and
fsubp
popf
scas
roll
les
jo
mov
pop
movsb
stos
xchg
test
jmp
adc
dec
push
jp
xor
push
jg
xor
xorl
pop
cmpsl
pop
pop
push
adcl
sahf
xor
aaa
cld
xadd
arpl
mov
jns
je
rorl
insl
scas
xor
ret
xchg
cmp
mov
std
orb
xchg
js
imul
jmp
jnp
popa
fdiv
outsl
fstp
leave
cmpsl
rorb
cmp
shlb
push
pop
push
push
into
xchg
inc
lds
mov
mov
lcall
jp
add
mov
mov
lcall
fdivp
inc
dec
mov
js
test
sbb
loopne
ret
xchg
push
sbb
fcoms
mov
mov
cs
mov
sbb
or
xorb
mov
lahf
xchg
push
or
cli
or
jecxz
imul
xchg
aaa
and
addr16
rcrl
leave
or
xchg
stos
mov
push
repz
negl
sbb
stos
push
fiadds
and
aaa
out
enter
push
std
aas
sbb
mov
cmp
mov
test
subl
mov
mov
cltd
fwait
movsb
mov
cltd
cmp
call
or
test
lahf
add
inc
lcall
ja
mov
jp
xchg
clc
cmp
jecxz
jne
ficomps
add
lret
stos
xchg
mov
out
and
aas
dec
cs
out
adc
xor
jp
insl
jae
jo
ffree
pop
int
ret
push
and
xchg
add
jb
lds
jmp
orl
sbb
inc
shll
and
incb
loope
inc
adc
test
pusha
jo
cmp
clc
fs
scas
lret
mov
xlat
addr16
xchg
enter
inc
repz
mov
mov
fisubl
addr16
xchg
jmp
add
shll
add
popf
lcall
pop
mov
test
je
dec
aas
loopne
addr16
xchg
iret
jne
lock
cmp
stos
imul
ficomps
incl
dec
pusha
adc
es
lods
loop
cmp
or
mov
adc
insl
stc
popf
popa
fbstp
sbb
jbe
add
stos
push
shlb
mov
std
lock
and
jb
inc
sub
lods
push
pop
or
fxch
add
repz
movl
or
stos
sbb
cmp
mov
sti
add
ds
out
pop
xchg
add
sub
and
add
rcrb
and
jmp
mov
stc
scas
mov
xchg
xor
test
xchg
sub
pop
in
dec
sbb
mov
in
aaa
jne
ja
sbb
fdiv
or
js
sbb
pop
add
or
jb
dec
add
shlb
add
out
cli
testb
and
sbb
mov
dec
sbb
mov
mov
out
idivb
lret
adc
rcll
cld
fdivrl
inc
jno
sub
rorb
fdiv
jae
scas
stos
imul
jbe
mov
or
cmp
xor
mov
in
pop
push
push
bound
or
scas
add
push
mov
jns
mov
nop
cmpsb
ret
js
sub
pushf
pop
push
jb
das
mov
add
mov
jae
jmp
xchg
add
es
jb
mov
mov
or
jae
das
mov
mov
add
jl
dec
and
push
jmp
es
xchg
inc
mov
jno
mov
mov
fwait
test
inc
push
jle
aas
aaa
jne
pop
and
pop
pop
or
shll
mov
fnstcw
jle
in
out
inc
xor
ljmp
sbb
push
push
or
cmp
mov
hlt
cmp
mov
mov
sub
in
int3
lcall
adc
mov
mov
fmul
adcb
xor
psllw
dec
and
out
sbb
mov
adc
ficomps
jnp
adc
loop
fistps
je
ja
stos
pop
cmp
xlat
pop
jecxz
xchg
dec
xor
xchg
xor
nop
imul
loopne
push
jnp
sub
bnd
ret
jp
mov
xchg
push
mov
pushf
cwtl
cld
add
shlb
es
fildll
sbb
notl
cwtl
rcrb
mov
addr16
lds
inc
adc
mov
sbb
inc
xchg
mov
and
lods
nop
or
cmp
cmp
mov
mov
int3
and
push
shrl
cmp
stc
inc
aaa
in
jl
push
out
call
fwait
inc
addr16
or
dec
xchg
dec
dec
sbbl
pop
fisttpl
into
pop
lret
sbb
sbb
fwait
test
cmpsl
sbb
xor
sbb
pop
mov
mov
mov
jno
in
repnz
mov
call
inc
mov
adc
and
fnstsw
mov
sub
shrl
mov
or
add
call
insb
cmp
xor
xor
inc
mov
fwait
aad
fld
pop
inc
cmp
xchg
jle
push
mov
mov
pop
pushf
les
mov
sbb
mov
dec
xchg
push
test
inc
fidivrl
jmp
fcomp
pop
cwtl
mov
das
mov
mov
dec
jg
xchg
mov
jg
notb
in
mov
loope
aas
addr16
sbb
push
or
inc
or
cld
insl
ret
xchg
icebp
orb
pop
mov
hlt
sbb
xchg
faddl
xchg
incl
pop
leave
call
adc
push
sbb
ss
pusha
sbb
jp
scas
fwait
cmp
xlat
sub
lea
orb
mov
inc
or
daa
stc
addr16
adc
daa
cmp
cmp
ljmp
mov
add
adc
jle
cmpsl
or
cmpsl
in
test
dec
pop
push
mov
push
stos
dec
and
ljmp
jns
xor
push
cmp
fscale
js
jl
daa
subb
mov
or
les
or
stos
xchg
inc
test
jo
sbb
dec
mov
xchg
fisttps
fcoml
outsb
jp
popa
cmpsb
out
pop
cmp
test
lds
les
out
test
cmp
lods
pop
test
nop
inc
cwtl
jle
loope
pop
add
cmp
push
mov
popf
jecxz
adc
fstpl
xchg
adc
cs
fiadds
mov
pop
mov
xchg
sbb
insl
and
enter
mov
xchg
sub
pushf
jmp
ljmp
cwtl
cmpsl
addr16
add
xor
test
test
insl
add
jb
jge
dec
mov
inc
pop
jp
and
mov
xchg
inc
mov
sarb
adc
repnz
cmp
mov
mov
arpl
cld
push
mov
jnp
rorl
je
cmp
lds
test
xchg
ds
outsb
jp
imulb
sbb
out
xor
pop
and
pop
sar
cmp
dec
sub
push
negb
ljmp
call
inc
cwtl
std
adc
fcoml
push
push
ljmp
nop
mov
xchg
add
imul
add
pop
out
mov
sub
lods
cmp
dec
enter
out
scas
push
rorl
sub
roll
pop
out
add
xlat
int3
push
inc
das
inc
pop
movsl
test
push
jno
jns
ja
mov
scas
in
fsubrl
rclb
jg
mov
jp,pn
inc
jge
ds
daa
mov
or
sarb
mov
lock
xor
insb
cli
cmp
fst
cmpsb
adc
xchg
add
jns
inc
in
add
push
lahf
mov
scas
pusha
fdivrl
loop
mov
cmp
ret
orb
scas
xchg
scas
inc
mov
sub
outsb
cmp
xchg
ja
pop
push
lret
fs
jge
or
cmpsb
or
stc
mov
fcoml
pop
inc
lds
and
mov
cmp
lahf
gs
and
mov
subb
enter
aam
mov
enter
sub
and
ljmp
loop
sbb
mov
mov
int
stos
rcl
mov
mov
jg
cmp
dec
lea
mov
sbb
js
pop
cmc
xchg
test
loope
shrl
sbb
mov
xorb
mov
add
dec
and
add
inc
add
inc
add
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
adc
iret
and
and
int
bound
mov
and
mov
adc
test
sub
in
int3
lods
xchg
mov
jne
jne
loopne
jno
fnsave
scas
jbe
jbe
add
loop
fsub
icebp
lods
cmpsb
jp
stc
sub
pop
fpatan
mov
scas
lcall
adc
sub
daa
or
cmc
xchg
push
in
pop
dec
jbe
or
out
adc
sub
cs
ds
popf
xchg
xchg
gs
pop
xor
mov
outsl
and
jb
pusha
mov
cmp
cs
cmp
int3
out
mov
mov
fcoml
iret
mov
scas
lock
inc
ja
aam
mov
scas
out
nop
repz
mov
loopne
fidivl
xor
stos
mov
and
les
dec
mov
int
gs
rcrl
pusha
aas
jecxz
jmp
cmpsb
jmp
shl
jb
mov
rorl
jge
cmpsl
ss
sbbb
inc
xor
inc
arpl
lock
jle
pop
les
lods
xchg
filds
rol
push
and
push
adc
or
xchg
imul
sub
sbb
mov
addr16
or
loopne
pop
int
jbe
push
mov
in
sahf
cmpsb
pushf
and
mov
pop
push
ds
add
out
and
pusha
lret
clc
xchg
or
sub
js
ljmp
xlat
movsb
cwtl
fisubrs
adc
jb
or
adc
mov
mov
push
add
or
insl
push
sub
in
push
mov
fs
ljmp
mov
test
insl
cmp
lcall
jp
sbb
mov
sub
test
push
cld
mov
cmp
aam
sub
dec
pop
pop
movsb
lods
std
sarl
add
jbe
push
lret
scas
xor
dec
xor
sbb
fisttpl
sbb
xchg
std
cmp
bound
test
and
jb
cmpsb
cmp
cmp
and
xchg
xchg
cmp
cmc
push
sbb
push
arpl
jecxz
and
dec
jnp
dec
incl
sar
push
xorb
jmp
mov
inc
and
aas
xor
pop
sbb
fistps
into
mov
in
push
adc
dec
xor
jmp
shll
mov
in
test
jg
outsl
push
xor
lahf
push
and
test
and
ret
mov
cmp
aaa
and
xchg
cmpl
rolb
push
mov
roll
pop
imul
mov
sti
and
sub
adc
sub
fstpl
mov
add
and
and
dec
pop
loop
add
and
cltd
decl
jp
mov
or
loop
loopne
bound
jg
rolb
add
pop
imul
cmp
lods
mov
cmpsl
fwait
add
arpl
stc
ret
dec
es
and
xchg
jl
stos
inc
jo
shlb
sub
dec
lret
repnz
pusha
add
call
aad
sbb
mov
loope
cmpb
jle
jle
pushf
sub
gs
dec
xchg
adc
fmul
icebp
cwtl
add
jns
popf
movb
add
push
pushf
push
mov
jae
mov
jno
and
mov
test
ffree
imull
sbb
jns
pusha
jp
hlt
inc
add
inc
jno
sti
lods
je
inc
jl
inc
fldenv
xchg
lcall
cmpsl
cwtl
fimuls
leave
loop
hlt
jmp
push
cmp
out
mov
sbb
into
xor
int3
inc
mov
pop
push
jb
clc
cmpsl
data16
mov
stos
pop
pop
xchg
sbb
leave
icebp
xor
scas
pop
in
js
mov
jbe
fcom
lcall
fistpl
mov
lock
lret
outsb
rcl
lock
adc
xchg
ret
dec
xor
daa
pop
and
in
mov
sti
mov
push
lods
and
das
in
dec
addl
mov
dec
rolb
data16
popa
adc
mov
or
xor
int
pop
sbb
xchg
in
out
cmp
jp
pop
push
and
popf
shrb
add
fstl
loop
mov
fbstp
pop
das
sub
dec
sbb
sbb
sub
loope
roll
pop
mov
push
hlt
mov
sbb
popa
jle
pop
xchg
arpl
shll
pusha
xor
ljmp
bound
test
cld
cmp
jb
push
adc
sub
inc
add
push
xor
ret
adc
clc
xor
mov
je
adcb
push
xchg
cmp
call
xchg
pop
sti
mov
neg
cmp
data16
popf
jmp
gs
ds
dec
sarb
lods
mov
sbb
mov
and
push
add
or
andb
fisttpll
dec
jmp
pop
ljmp
jg
push
sti
das
test
cmpsb
push
fistps
or
mov
xchg
jmp
lds
mov
sahf
lcall
outsl
leave
push
xorl
mov
cltd
mov
mov
addr16
push
inc
int
jns
push
mov
je
das
pop
fidivrs
dec
push
adc
fwait
xchg
lods
cmp
mov
jne
xchg
aam
inc
cmp
mov
inc
sub
inc
fstl
ljmp
out
add
std
repz
adc
jp
test
das
shrb
test
cmp
inc
mov
adc
or
xchg
add
inc
sbb
add
xor
lret
mov
in
arpl
into
jecxz
out
cmpsl
es
mov
nop
out
out
leave
hlt
inc
addb
pop
daa
sarb
xor
adc
sub
mov
sti
callw
cmp
mov
jns
test
xor
out
inc
andb
inc
pop
or
frstor
and
stos
dec
arpl
jg
and
imul
jnp
inc
xor
mov
xchg
int
add
sub
cli
push
inc
fnstcw
gs
sub
in
scas
roll
and
iret
adc
mov
ss
aad
xchg
stos
loop
lods
jb
out
xor
das
cmp
dec
xor
imul
call
enter
cld
inc
xor
inc
mov
push
out
add
out
out
test
cmc
jnp
movsl
pop
push
in
cmp
inc
shl
mov
sbbl
and
mov
out
mov
cmpsb
iret
fsubs
hlt
loop
ret
sbb
outsl
sub
push
cs
or
rcll
and
pop
xor
mov
sub
push
pop
push
add
clc
pop
bnd
jo
and
sarl
imul
mov
js
mov
jl
imul
sbb
in
and
data16
jo
ja
cmp
jmp
test
mov
test
and
aad
aas
flds
ja
push
pop
js
mov
cltd
and
jge
sub
and
inc
inc
lock
cwtl
hlt
mov
jb
jg
or
mov
jmp
push
mov
js
xchg
or
sub
fstps
adc
ljmp
fisttpl
pop
ja
inc
pop
les
lcall
cld
sub
and
fildll
jecxz
push
std
sti
sbb
push
pop
jl
lret
xor
mov
nop
push
adc
nop
inc
mov
cli
je
mov
nop
jo
adc
lahf
jne
xor
xchg
pop
push
xor
mov
pushl
aas
mulb
dec
fnstenv
cltd
xor
mov
mov
mov
push
ret
inc
loop
shl
sub
xor
jl
outsb
sbb
into
jo
and
cmp
cmp
es
xchg
or
cli
and
inc
jmp
jae
push
mov
pushf
dec
sub
xchg
adc
ret
and
pushf
mov
xchg
stc
xor
jp
out
mov
arpl
cltd
mov
inc
in
mov
and
push
out
hlt
dec
lods
xchg
leave
lods
pop
ljmp
push
push
outsl
gs
xchg
inc
sub
pop
scas
dec
cmpb
or
xchg
into
loop
lock
fwait
pop
mov
and
mov
test
or
xchg
ja
add
into
add
jle
aam
dec
dec
je
mov
xlat
nop
int3
push
aas
xchg
mov
andl
mov
dec
inc
loop
mov
xor
cmp
arpl
sbb
inc
mov
or
add
hlt
xor
adc
fsubs
adc
xchg
xchg
repnz
out
je
pslld
daa
xchg
popf
lret
out
stc
repz
es
sub
dec
and
out
xchg
mov
mov
mov
jns
or
push
jns
popf
fs
xchg
sti
mov
shlb
es
xchg
push
sti
mov
inc
imul
jae
in
aas
pop
pop
xchg
ret
rcll
leave
cld
fidivs
push
dec
pop
and
enter
mov
cmpsb
shll
cwtl
lods
orl
jl
lahf
fcmovnbe
push
inc
push
mov
or
dec
in
test
inc
outsl
cld
pushf
add
fs
or
sbbl
sbb
jbe
mov
out
aam
cwtl
jns
mov
lret
frstor
mov
scas
aam
pushf
into
fistl
mov
and
mov
pop
out
insl
scas
dec
xchg
mov
cltd
add
xchg
loop
repnz
jo
cmp
fndisi(8087
mov
jl
cmc
fs
orl
add
jge
sub
adc
aad
nop
or
daa
pop
add
loope
jl
jno
lods
add
push
ret
mov
js
fmuls
and
sbb
imul
sbb
inc
jne
jo
mov
aaa
ss
pop
rclb
fdivrl
sbb
mov
in
rcrl
lock
mov
cmp
aas
popf
push
and
sub
mov
xchg
outsb
xor
je
nop
lret
mov
punpcklwd
mov
jb
pushf
dec
int3
or
jge
add
jbe
pcmpgtw
xlat
std
shrb
js
out
pop
dec
js
push
jl
push
lods
gs
pop
shlb
mov
out
mov
inc
push
rep
lcall
ror
mov
into
mov
dec
mov
cmc
xor
test
sub
fmul
pushf
sub
push
mov
das
pop
push
je
leave
and
jmp
repz
out
test
out
mov
mov
or
jne
mov
pop
shlb
pop
pushf
pop
xor
ja
xor
mov
adcb
xchg
cmc
cmpl
lods
sarl
jecxz
xor
cld
dec
shr
sbb
mov
in
mov
and
je
mov
pop
and
dec
push
not
mov
mov
pusha
mov
adc
sbb
arpl
in
xor
add
and
xor
xchg
and
clc
jg
push
mov
cmp
enter
jo
dec
les
pop
jb
cmp
dec
cmp
arpl
out
sbb
jo
mov
push
dec
lods
cli
add
xchg
into
mov
xchg
dec
xlat
test
adc
and
pusha
aam
sysexit
push
push
mov
into
push
daa
xor
in
jecxz
mov
or
mov
add
cmp
jnp
test
ljmp
call
ficoms
clc
mov
in
push
sbb
test
push
mov
lahf
lea
mov
xchg
cmp
lods
cwtl
iret
adcb
insb
mov
cmp
push
sub
clc
gs
pop
xor
repnz
cmp
bound
xor
lcall
arpl
mov
lods
mov
fnstcw
das
pop
jns
insb
lret
xchg
xchg
call
into
pop
in
push
mov
pop
ret
stc
cltd
jp
scas
pusha
sbbb
call
or
xchg
xlat
cwtl
xor
mov
add
pop
push
out
imul
shrl
ja
daa
and
lcall
out
mov
loop
mov
shll
lcall
or
xchg
xor
aam
into
pop
loopne
or
push
insb
jns
movl
jg
cmpsl
js
mov
add
xchg
xor
jb
lret
mov
xchg
cmpsl
loope
arpl
push
cmp
jae
inc
shll
push
pop
push
cmc
pop
ret
xchg
inc
pop
push
dec
mov
mov
mov
cmp
hlt
test
fists
sub
adc
popf
mov
push
insb
xchg
push
jns
les
inc
sbb
addr16
or
fsubrp
leave
sub
dec
inc
fsubrs
and
test
leave
in
mov
and
cmp
test
mov
and
das
cwtl
out
sub
xchg
push
adc
mov
add
inc
push
xchg
or
and
jno
sbb
push
int
mov
jmp
rcrl
dec
ret
xchg
push
ret
and
ret
pop
add
mov
cld
inc
jno
xor
and
movsb
xor
dec
pop
push
lods
and
jae
sti
mov
shrb
mov
cmp
cmp
icebp
push
mov
clc
movsb
out
insl
jl
jg
or
jmp
or
inc
adc
fiadds
clc
cld
jge
iret
sti
out
in
mov
or
pop
scas
mov
or
andb
cmp
stc
das
clc
push
jg
enter
shr
popf
push
mov
gs
jp
aam
mov
push
in
leave
adc
lds
into
sbb
jne
mov
movsb
out
mov
imul
iret
mov
sub
sbb
jp
dec
pop
ret
cltd
in
xor
mov
jmp
dec
push
sbb
aaa
xchg
dec
pop
pop
shrl
sbb
mov
push
mov
mov
jg
pop
fdivrp
mov
mov
or
jae
push
pop
pop
lahf
sbb
xchg
jo
adc
call
shlb
std
xor
push
add
pop
into
pop
sahf
push
icebp
jecxz
adc
jp
jecxz
inc
rdtsc
es
dec
sub
xchg
mov
test
lret
clc
push
mov
arpl
lock
push
aam
sub
push
outsl
lret
mov
imull
push
push
in
cmpsb
cmp
mov
add
hlt
in
fs
sub
and
mov
repz
xchg
or
dec
stos
lret
out
es
daa
sbb
xchg
fdivr
xor
jo
cmc
adc
cmp
out
push
mov
mov
dec
repnz
testb
notl
inc
fwait
loope
cmp
pop
lret
je
pop
add
mov
aad
aas
in
or
mov
pop
addr16
mov
push
bound
push
xchg
lds
aad
mov
out
mov
jbe
mov
xor
call
cmp
mov
divl
arpl
add
test
in
mov
mov
ffree
dec
pop
cmc
les
inc
ret
enter
movsl
xchg
add
jno
push
scas
iret
in
and
jb
xchg
add
xchg
in
cltd
inc
mov
inc
fwait
cmp
push
out
dec
add
lret
test
test
mov
jo
add
jg
jmp
ss
pop
out
cltd
mov
out
scas
stos
dec
gs
cmp
mov
mov
cmp
mov
ss
mov
sub
imul
in
cld
popa
add
imul
icebp
mov
sti
fs
repnz
cmp
stos
sbb
cmp
push
inc
inc
cmp
movsl
lcall
dec
and
or
inc
add
push
lsl
and
into
icebp
push
cmp
insl
xchg
data16
sub
xchg
sbb
sub
call
popf
lcall
leave
nop
loop
hlt
cld
mov
push
mov
loop
idivl
mov
jne
pushf
daa
push
pusha
ss
add
loopne
jecxz
fstpt
dec
in
mov
or
mov
mov
insb
add
xor
push
jbe
loop
or
gs
int
call
nop
pop
cmp
xchg
xor
rcrb
jmp
xorl
dec
call
in
icebp
iret
es
mov
xlat
stc
adc
sarb
sub
pusha
lahf
jg
add
sub
flds
shll
push
mov
gs
aam
lds
aaa
ret
iret
ja
adc
push
shll
xchg
jo
imul
sub
pop
jno
imul
lret
inc
fsubrl
and
inc
mov
mov
iret
mov
test
mov
dec
mov
sub
je
pop
divb
js
dec
test
loopne
enter
push
mov
cli
push
push
sub
int
dec
in
test
aaa
imul
daa
std
sbb
xchg
aad
mov
and
leave
inc
gs
xchg
mov
pop
jge
add
cltd
ret
mov
stos
adc
or
xlat
dec
lods
cmp
or
xchg
inc
xchg
andb
mov
push
in
inc
sti
or
out
cmp
adc
es
sub
aas
xchg
cmp
dec
sub
inc
icebp
sbb
js
sub
pop
cwtl
push
jge
ja
mov
imul
js
jl
sub
sbb
mov
repnz
in
inc
insl
adc
cmp
mov
mov
add
es
ficoms
xor
xchg
sub
aaa
mov
and
inc
subl
adc
fisttps
rorb
repnz
outsl
xor
mov
pushaw
jb
mov
xchg
aam
push
push
sti
cltd
sub
push
outsb
mov
push
rcrb
scas
push
add
and
cld
cmp
loop
jmp
xchg
enter
xor
xchg
mov
pop
in
add
inc
movsb
adc
dec
int3
add
aam
xchg
mov
mov
in
lods
sub
lds
adc
inc
adc
cmp
mov
sbb
jns
jl
adc
ret
js
in
xor
popa
int3
and
inc
push
sbb
adc
lret
fisubrs
jnp
pop
stos
sbb
repz
mov
movsb
ret
dec
das
push
inc
lock
arpl
lods
cmp
dec
roll
sub
in
mov
mov
xor
cwtl
sbb
imul
push
cmc
insb
nop
dec
in
mov
jmp
int
data16
out
adc
icebp
in
mov
sbb
loope
jg
aam
into
das
xor
cmp
outsl
mov
xor
cmp
xor
addl
scas
addr16
add
cwtl
test
sahf
jp
loop
xor
add
insb
xor
ret
pop
mov
adc
pop
test
out
push
sbb
nop
hlt
fdivrs
lahf
adc
test
pop
mov
xchg
cmp
pusha
test
out
shll
test
aam
sahf
mov
stc
movsl
add
inc
cwtl
push
aam
mov
enter
lret
hlt
popf
inc
mov
es
sub
xor
xlat
jecxz
mov
xor
dec
call
add
mov
out
aas
jp
xchg
jbe
mov
pushf
pusha
orb
insb
and
and
push
sbb
test
add
imul
es
adc
xor
fwait
push
xor
movsl
pop
mov
and
rclb
jns
ljmp
sub
rorb
xchg
sbbl
nop
roll
jb
cmpsb
lods
in
int
push
outsl
rcrl
sbb
rorb
sub
sar
adc
notl
pushf
xor
jae
xchg
add
xor
and
dec
outsb
iret
loopne
adc
cmp
inc
repnz
cwtl
sub
xchg
movsb
dec
add
push
adc
test
mov
mov
xchg
dec
jmp
pop
nop
in
xchg
scas
fs
push
adc
js
mov
dec
cmp
sti
cmp
pop
mov
pusha
lods
gs
sahf
aas
in
xchg
adc
cmc
pop
iret
adc
xchg
mov
cltd
add
cmp
data16
dec
icebp
xchg
ret
add
mov
fcomp
mov
jnp
les
jb
lock
lods
xor
fs
test
xchg
in
lods
mov
dec
sbbb
pusha
cmpsl
daa
stos
pop
stos
xchg
mov
sbb
dec
xchg
or
popf
rcrl
clc
in
mov
xchg
push
int
lea
adc
lock
dec
insb
rcll
lea
pushf
dec
hlt
addr16
xchg
clc
mov
pop
pop
leave
jmp
pop
cmp
add
outsb
sbb
cmpsl
adc
xlat
int
addr16
mov
popa
push
mov
cvtdq2ps
or
imul
adc
loope
push
outsl
jne
jl
movsb
test
mov
sbb
mov
rcl
or
or
test
add
rcrb
nop
mov
cmpsl
sbb
xlat
out
insl
scas
add
jae
fldenv
push
sbb
out
out
sub
das
mov
inc
add
sub
mov
daa
push
cwtl
imul
call
push
aam
imul
dec
bound
pop
fs
adc
sbb
mov
dec
roll
lods
xchg
mov
fisubs
dec
or
mov
gs
lods
fistl
scas
sub
cmp
jb
fmull
ss
mov
sbb
shl
xchg
in
shlb
mov
dec
test
idivb
push
stos
decl
ds
pop
sbb
outsl
aad
pop
mov
mov
sub
fnstenv
sub
rol
mov
push
inc
aam
mov
lahf
movsb
pop
in
insb
pop
mov
outsl
ja
rorb
xor
mov
iret
dec
daa
add
test
pusha
in
xor
xchg
arpl
push
test
lods
mov
or
sahf
insl
lea
in
jecxz
mov
mov
pop
les
movsl
out
or
sub
orb
xchg
arpl
adc
xchg
sub
xor
icebp
mov
inc
ret
jo
jae
adc
push
add
xchg
sub
lret
xchg
xchg
mov
ret
out
add
or
mov
repnz
mov
jne
inc
ljmp
xor
add
sub
stos
mov
jno
sahf
sahf
icebp
out
pop
loopne
push
push
sub
add
inc
xchg
test
cmc
lret
sub
cmp
add
test
sub
mov
leave
ret
mov
mov
adc
mov
inc
cwtl
jae
inc
insl
cmp
inc
popa
incb
je
fwait
or
adc
xlat
jns
mov
or
aam
inc
inc
shrb
cltd
dec
xchg
loopne
cli
mov
sub
pop
push
iret
sub
test
mov
pop
rorl
cld
jl
mov
sub
das
cmpsl
pop
iret
outsl
mov
xchg
adc
popf
inc
xor
fisubl
inc
or
cmpsl
fcmovnb
je
push
lods
loope
sub
xchg
cmc
faddp
add
inc
inc
jbe
or
cmp
xchg
jg
and
dec
jge
jb
push
dec
lods
add
sti
push
out
and
push
xor
test
mov
adc
adc
pop
mov
lcall
or
es
and
cltd
out
cmc
jmp
test
ds
imul
ret
pop
mov
and
pop
xchg
mov
push
outsl
xchg
bnd
imulb
jbe
aaa
or
or
ficomps
mov
add
lcall
dec
fidivrs
add
jg
ss
inc
cli
or
movsl
inc
cmp
test
inc
ret
sub
sbb
into
shlb
cmp
daa
push
je
adc
push
leave
jge
pop
cltd
pop
push
or
test
xchg
in
out
nop
mov
jp
out
adc
imul
lret
sarb
mov
roll
push
push
in
cmp
lcall
mov
push
repz
pop
mov
in
adc
adc
xor
dec
out
xor
int3
adc
idivl
inc
jmp
adc
mov
movsl
xor
sbb
in
es
adc
push
xchg
jmp
xor
lret
ljmp
ja
push
and
js
inc
xlat
daa
and
inc
push
insl
aas
ljmp
mov
popf
mov
jp
ljmp
jbe
inc
jne
inc
sub
in
jbe
adc
mov
xchg
notb
out
aam
xchg
cmp
inc
rclb
push
pop
mov
gs
xchg
sub
or
divb
sub
adc
popf
jle
and
fmul
je
jge
dec
jecxz
test
xor
sbb
add
pop
jp
sbb
xor
hlt
enter
in
in
mov
inc
into
out
inc
adc
cld
imulb
jp
xchg
cltd
into
mov
push
aad
mov
sub
test
je
in
fisubrl
add
and
lds
jl
mov
adc
mov
inc
aaa
inc
sbb
add
inc
adc
xor
pop
adcb
mov
xchg
insb
test
jmp
popa
push
ret
mov
jns
mov
mov
jns
push
cld
sub
mov
movsb
xlat
out
cltd
jae
jb
imul
jne
cwtl
hlt
out
sbb
and
out
jo
stc
fdivrl
sti
je
sub
iret
pop
faddl
ja
and
mov
xor
enter
and
and
frstor
out
mov
mov
add
pop
sbb
sub
mov
xor
loopne
scas
and
shrl
add
adc
and
test
into
mov
or
cmp
stc
scas
push
test
insl
fs
movd
mov
mov
adc
cs
loop
fbstp
xor
fwait
xchg
int3
cwtl
sub
leave
pop
or
xor
ds
sarb
idivb
or
dec
iret
imul
push
xlat
jle
xchg
aam
and
mov
sbb
cmp
or
daa
pop
push
sbb
aaa
pusha
push
stos
stos
cmp
jmp
jno
mov
mov
push
sub
push
jge
adcl
push
cmp
notb
data16
mov
xchg
add
pop
jne
add
outsb
daa
push
pop
iret
pop
aas
loop
ss
movsl
call
pop
xor
imul
and
mov
fs
movsl
lock
xchg
imul
add
mov
mov
sbb
insl
jl
push
gs
adc
inc
jmp
and
enter
push
jmp
out
mov
xlat
mov
and
inc
loope
out
negl
pop
inc
inc
iret
jae
mov
and
lods
xor
mov
aad
cmp
std
cld
xor
mov
push
lret
ret
and
sub
adc
scas
xchg
imul
mov
adc
sbb
sbb
fmulp
fstl
lods
loopne
test
push
push
cmp
dec
add
ss
push
cmp
push
in
pop
xlat
movsl
ljmp
hlt
notb
leave
stos
xchg
sahf
add
in
lahf
xor
xchg
jge
dec
les
mov
lods
jne
pop
testb
cs
stos
xor
cltd
mov
popa
add
push
xor
ficoml
lahf
gs
mov
xor
sub
mov
sti
sbb
les
pop
test
out
mov
mov
add
sahf
lds
jns
sar
decl
xor
jp
pusha
pop
cmp
push
xor
dec
bound
push
out
test
daa
shl
mov
sbb
sbb
inc
jg
fisttps
shrb
loopne
out
repz
cli
inc
jmp
lret
sti
out
out
insl
add
push
js
test
xorl
and
adc
mov
in
cli
clc
shl
into
adc
pop
or
mov
mov
test
pop
out
lahf
dec
push
push
inc
sub
and
out
lret
daa
fldenv
lds
pop
lock
sub
addr16
dec
push
std
jp
inc
push
jp
lods
jns
sbb
int3
fists
dec
test
aam
cs
addr16
sub
inc
jbe
pop
adc
daa
mov
jb
mov
icebp
loop
push
mov
fs
jl
in
stos
testb
mov
sub
and
cmc
out
push
pop
or
aam
stos
lods
dec
mov
stc
imul
aaa
sub
inc
aam
sub
mov
stos
xchg
test
adc
bnd
das
mov
sub
sbb
mov
lahf
fisubrl
lahf
adcl
pop
cwtl
push
mov
addl
andb
cmp
mov
jecxz
push
jle
or
dec
mov
and
sub
fnstsw
xchg
mov
push
or
popf
arpl
and
imul
jb
push
xchg
ljmp
mov
lahf
cld
push
or
adc
push
xlat
in
adc
orl
cwtl
add
xchg
imul
test
jbe
pop
mov
sub
in
or
in
pop
xor
cmp
add
cmp
cmpsl
int
lock
inc
or
sahf
daa
or
xlat
mov
je
roll
divb
fcmovb
data16
push
jecxz
xchg
push
push
push
sub
fcompl
clc
outsl
lock
int
inc
mov
inc
hlt
jl
and
fstpt
aas
push
adc
jg
sti
adcl
jno
cli
iret
jne
inc
push
lea
inc
push
addl
orb
cmp
sbb
add
jo
push
push
ret
pop
cmpsl
out
mov
mov
and
and
lods
popf
stos
cmp
push
fnstsw
xchg
inc
lcall
sarl
and
inc
add
repnz
dec
arpl
and
xchg
enter
test
adc
jo,pn
in
pop
add
mov
pop
adc
ret
jnp
dec
int3
xchg
cmp
ficomps
inc
or
outsb
push
rcrb
push
and
icebp
cmp
fstpl
testb
xorb
cli
bnd
dec
xor
aaa
int3
lea
jl
cmpsl
sub
mov
jns
sbb
fcompl
fsub
and
gs
ss
xchg
pop
mov
mov
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
jecxz
add
int
bound
clc
sub
fldt
loopne
call
xchg
sbb
inc
int
loope
or
pop
sbb
std
out
sub
loop
xchg
in
enter
mov
cltd
cmpsl
jno
loope
lret
mov
xchg
rol
mov
jo
sbb
push
and
ret
mov
shl
jmp
stc
pusha
sub
inc
inc
inc
dec
adc
insb
adc
xchg
icebp
cmp
xchg
fs
mov
xchg
insb
xchg
inc
push
push
mov
fisubrl
test
sub
push
xchg
mov
cmp
pushf
adc
gs
test
fs
test
pop
add
test
xor
xchg
inc
or
pop
sub
mov
or
pop
and
rorb
rcll
in
stc
jno
clc
mov
dec
movsl
ret
shll
lock
shr
jle
movsl
add
xor
xor
in
jbe
pushf
jo
dec
sub
jbe
xchg
mov
outsl
pop
pop
and
jle
adc
aam
mov
mov
dec
jle
icebp
faddp
jge
xchg
aad
mov
clc
fldl
arpl
push
mov
jno
mov
dec
call
fildll
push
sbb
in
arpl
gs
mov
xor
xchg
imul
insl
inc
outsl
rol
leave
xorl
sti
inc
sub
jae
aam
stos
xor
jmp
push
dec
aad
mov
shrl
inc
jle
mov
stc
in
inc
xchg
add
dec
jbe
mov
mov
add
cli
push
hlt
pushf
mov
out
mov
test
sbb
mov
sti
push
dec
int3
js
fwait
push
lea
jns
pop
cld
lea
out
cs
jns
mov
push
das
or
int
mov
or
sub
outsl
sbb
divl
sub
dec
mov
cli
mov
mov
add
add
and
sub
cwtl
xchg
xchg
int3
clc
sub
idivl
movsl
sbb
or
xor
mov
dec
ret
mov
xor
push
cmp
mov
and
in
jne
ja
movsb
stos
mov
xchg
loop
in
pop
popa
in
pop
scas
iret
jo
aas
sbb
int
std
iret
icebp
dec
adc
push
repnz
cmp
adc
push
inc
pop
into
xor
sub
mov
mov
leave
rclb
jns
gs
je
dec
and
mov
add
mov
xchg
push
pop
outsb
jns
in
loopne
shrb
repz
mov
sub
data16
out
rcll
push
dec
das
xor
sub
dec
add
mov
jae
test
in
jb
xchg
mov
sub
pop
imul
fstl
int3
and
xchg
add
add
repz
add
mov
in
sub
inc
sub
pop
dec
adc
inc
jns
xchg
mov
or
sarb
xchg
jmp
dec
fidivl
in
mov
insl
adc
mov
mov
insb
jecxz
cs
jg
sub
mov
scas
mov
mov
in
repnz
stos
into
mov
shlb
and
lret
xor
sub
jne
push
mov
adc
arpl
mov
mov
test
lret
mov
mov
ficompl
push
imul
push
mov
mov
into
jmpw
leave
mov
jae
or
repnz
lcall
adc
lea
jg
mov
shrl
cmp
fs
leave
js
bnd
push
adc
mov
imul
icebp
pop
sti
cli
mov
das
sti
add
sti
les
sbb
mov
out
rolb
or
jp
pop
adc
repz
arpl
sahf
daa
ret
mov
mov
es
cmp
add
scas
and
cmp
ljmp
jnp
jp
or
push
stos
scas
inc
ljmp
sbb
jge
sub
ret
stos
ja
iret
mov
in
fidivs
and
inc
bound
sub
insl
adc
fs
inc
popa
aaa
ret
fsts
inc
jmp
xor
xlat
xchg
jnp
rclw
inc
mov
mov
add
jb
call
pop
fsubrs
int
ja
lds
into
add
jp
out
stc
int3
mov
adc
jb
pop
jp
sbb
clc
loop
mov
sahf
xchg
js
sbb
push
les
jp
add
mov
push
loop
lea
sbb
daa
leave
jmp
add
jmp
push
andl
push
jno
stos
rcll
arpl
mov
lds
scas
imul
cltd
pop
movsl
xchg
loopne
jae
or
xchg
loop
inc
xchg
into
cmp
push
scas
mov
mov
push
stc
cmp
xlat
dec
lret
xchg
and
push
fdivrp
mov
fscale
pop
mov
mov
icebp
dec
loop
and
jno
mov
sbb
xor
jp
pop
scas
or
and
xchg
test
sub
les
test
or
shll
aaa
mov
testl
mov
pop
shr
lock
xchg
jmp
out
sbb
xchg
or
and
cmovae
ja
jne
xchg
dec
movswl
cmpsl
jb
js
fucom
fwait
inc
imul
dec
test
sbb
repnz
push
and
cmp
scas
sub
call
outsb
xor
into
add
fsubl
imul
pop
je
fwait
in
jnp
out
leave
push
shll
outsl
lock
push
repnz
pfmax
ret
pop
leave
xor
pop
inc
mov
outsb
push
stc
lcall
mov
imul
or
cltd
iret
jo
movsb
adc
push
lds
sbb
sub
jmp
push
mov
outsb
test
xchg
cmpb
xchg
call
and
mov
mov
push
push
sub
push
mov
in
mov
ret
inc
dec
push
cmpsl
jp
mov
push
cmp
add
adc
xor
mov
xor
or
repz
jnp
std
aas
push
mov
mov
lods
push
lret
int3
lock
cli
or
stos
cs
scas
add
imul
add
mov
pop
lcall
movsl
xchg
push
gs
pop
push
mul
sub
push
insl
lret
adc
fadds
push
mov
add
aad
push
mov
int3
and
mov
xor
mov
add
in
sub
and
push
repnz
pop
cmpsl
aas
sbb
sub
ss
dec
rol
ficomps
jae
lcall
shlb
loope
mov
out
maskmovq
testl
pop
lcall
mov
xlat
jo
jnp
xor
rorl
shr
jge
je
imul
mov
ljmp
into
lods
jne
shlb
and
jecxz
jne
lods
mov
data16
int3
ret
lret
daa
inc
pushf
lret
shll
mov
out
pop
imul
testb
fists
mov
hlt
or
scas
jae
dec
and
jmp
jle
es
xchg
je
mov
pusha
push
push
jge,pt
out
scas
sbb
sub
jp
orb
jmp
lods
mov
mov
enter
adc
or
xor
outsl
test
ret
xchg
shll
inc
pusha
inc
sub
fadds
push
cld
mov
pop
jbe
push
or
fmul
add
mov
push
cmp
inc
xchg
cmp
sbb
inc
outsl
mov
sbb
stos
inc
jge
je
sub
mov
sbb
scas
adc
cld
outsb
popl
xchg
in
sahf
mov
lods
ret
pop
push
mov
ss
std
add
movsl
mov
data16
xchg
lock
sub
inc
xchg
iret
mov
insb
fldl
das
cwtl
mov
mov
mov
add
fwait
int3
or
push
pop
lock
inc
inc
stos
mov
add
in
xchg
stos
mov
mov
xchg
sub
push
cmp
fbstp
sub
jbe
nop
aas
test
sbb
mov
popf
fs
call
jae
std
jns
push
jns
cli
or
data16
lods
movsb
sub
into
jle
repz
fsubp
add
sbb
lcall
add
inc
pop
lcall
cs
or
jbe
adc
lock
ljmp
in
and
sub
fsubs
pop
gs
push
pop
pop
xchg
cmpsb
xchg
sbb
stc
gs
jg
stos
sbb
push
outsb
addl
lods
loop
xlat
jae
and
mov
add
loope
into
push
and
hlt
jmp
push
ja
cs
mov
jmp
sub
sarb
out
jne
in
test
push
int3
hlt
in
mov
jge
les
mov
cmp
dec
stos
daa
fsubl
adc
in
insl
ss
xor
lods
add
pushf
je
mov
mov
inc
mov
xchg
sub
sbb
aam
fistps
pop
sbb
out
lcall
out
mov
decl
push
repnz
sub
sub
lea
inc
mov
mov
loop
rolb
test
addr16
add
mov
inc
cwtl
cmp
jecxz
add
jmp
cmp
and
xchg
jo
and
jb
jns
inc
mov
jg
dec
or
test
ss
sub
mov
lret
insb
sub
daa
aaa
lcall
sahf
mov
aam
push
jno
fistps
fcomps
mov
mov
or
sbb
jo
roll
push
jb
push
pop
mov
mov
pop
sub
push
addr16
fwait
cmp
xorb
in
std
or
rol
test
jge
lods
add
jmp
das
fsts
in
bound
les
int
push
out
ss
xor
mull
hlt
pop
xchg
lds
mov
imul
mov
idiv
or
rcrl
loopne
mov
pop
dec
adc
jle
or
pop
adc
mov
hlt
cmp
pop
xor
loop
inc
addr16
test
repz
repnz
inc
cmc
cmp
insl
rolb
mov
cmp
xchg
push
shll
mov
jo
aad
jb
ds
push
pop
pop
push
adcl
fs
incl
cs
or
rcll
push
es
jno
loopne
xor
call
mov
pop
add
arpl
pop
sub
cmpsb
fcomps
iret
lock
sub
inc
stos
mov
add
into
lret
dec
or
inc
dec
cmp
push
out
test
adc
ljmp
mov
fiadds
ds
fidivrs
rcrb
movsl
je
add
pop
adc
mov
xor
pop
nop
pop
lcall
daa
xchg
jge
addr16
jge
int3
std
dec
lods
pop
rclb
mov
mov
div
in
fldl
xchg
icebp
jle
mov
sahf
es
xchg
sti
push
xchg
icebp
std
cmp
imul
insb
push
jbe
enter
push
bound
pushf
inc
mov
loope
outsl
scas
push
mov
jge
xor
push
sbb
ret
icebp
mov
and
pop
mov
jns
movsl
xchg
fisubrl
cmp
mov
xchg
add
fcomip
sub
or
test
mov
pop
out
jno
cli
push
popa
jge
cmp
xchg
jl
xor
ficoml
or
sbbl
dec
movsl
jg
int
mov
out
out
xchg
sti
dec
inc
jne
fimull
add
sbb
sub
dec
and
push
pop
cmp
push
sbb
stos
outsl
data16
out
mov
ljmp
loop
and
jno
jmp
aad
or
mov
mov
push
or
loop
addr16
sbb
or
fcmovnbe
push
inc
mov
add
push
lea
loop
outsb
aam
xor
mov
pop
ret
dec
repnz
jbe
insb
or
fwait
mov
jmp
shlw
mov
fisubrl
sub
jmp
gs
jno
inc
movsl
jp
push
push
inc
stos
mov
and
jp
lds
in
js
pop
mov
pop
and
sbb
int3
and
mov
aaa
test
mov
out
add
jp
shlb
mov
or
mov
cmc
loopne
neg
inc
adc
and
les
lea
aas
sbb
sahf
jmp
rcrl
ljmp
xor
mov
cmp
stos
mov
popf
dec
sbb
popf
mov
cmp
ja
pop
mov
jae
popa
sbb
fcmovnb
inc
insl
movaps
les
fs
inc
and
cwtl
mov
stc
mov
sbb
push
popf
movsb
nop
ljmp
les
loop
or
mov
fisubl
movsb
pop
pop
rolb
mov
fiadds
fs
xchg
shrl
add
mov
pop
mov
inc
adc
pop
leave
jo
inc
ja
stos
cmp
pop
or
imul
loopne
sub
call
mov
mov
push
cld
xchg
cmp
out
in
icebp
out
pusha
cmpsl
aaa
xor
push
dec
cmpsl
adc
inc
jb,pt
mov
loop
call
pushl
in
mov
mov
les
je
aaa
pop
sbbl
push
mov
lock
jnp
insb
imull
cs
sub
mov
lods
mov
jae
adc
push
dec
nop
aas
nop
pop
adc
and
std
push
push
ds
sub
push
stc
cmpsl
aas
xor
fnstenv
or
jmp
scas
lods
sbb
movsl
sub
mov
fwait
add
rcrl
popa
dec
jg
jp
push
xor
popf
mov
inc
and
cmpsl
shll
stos
mov
ret
xchg
mov
in
sub
push
sbb
ja
jae
cs
inc
dec
jbe
and
mov
stos
fistpll
sub
notl
rolb
adc
xor
fnstenv
in
xlat
mov
iret
mov
mov
cmp
in
mov
mov
mov
ss
jecxz
in
jns
jg
mov
es
stc
cltd
shlb
cmp
inc
mov
sub
xchg
push
or
stc
or
pop
mov
or
mov
mov
int3
addr16
cmp
push
mov
fs
out
shlb
adc
sbb
loope
aad
add
lock
les
lods
cmp
or
movsl
addr16
push
push
lods
mov
mov
cmp
movsb
insl
or
push
ljmp
cmp
gs
daa
push
sub
inc
push
push
jl
mov
push
mov
fstp
cmc
pop
inc
sbb
arpl
lods
outsl
or
xor
rorl
lds
jb
mov
enter
push
imul
pop
gs
subb
lock
xchg
cmp
mov
mov
shl
xchg
addr16
fmuls
fucomi
test
adc
mov
adc
xchg
inc
jnp
pop
lods
or
jl
sahf
mov
pop
inc
mov
in
sub
cmp
mov
or
pop
stos
inc
es
pop
or
enter
xlat
insb
sub
and
cli
ljmp
lods
in
and
push
cmp
adc
rcr
or
fcomps
mov
push
cmpsl
xor
push
out
adc
xor
or
pop
mov
ljmp
jmp
cmpsb
mov
xlat
mov
movb
repz
je
pusha
ret
subl
insb
mov
xchg
int
xchg
ficompl
daa
inc
ljmp
divl
call
cmpb
out
pusha
inc
cwtl
sbb
sahf
mov
push
insl
insl
xor
rclb
cmp
bound
xor
enter
push
out
ds
outsl
pop
popa
pop
mov
lcall
add
fwait
dec
pop
sti
inc
pop
pop
insl
mov
subb
pop
in
xor
sbb
and
lods
dec
inc
ret
dec
into
insl
sbb
xlat
faddl
dec
lahf
je
lret
fmul
xchg
add
cmc
and
les
adc
stos
dec
or
shl
ret
dec
mov
sbb
jns
sub
or
int
inc
inc
pop
nop
repnz
mov
popa
loope
dec
hlt
xor
xchg
cmp
xchg
xor
adc
mov
lahf
add
scas
aad
sbb
fisubs
pop
jnp
ljmp
stos
in
addr16
fs
ficompl
jo
xchg
rolb
jno
hlt
xchg
imul
ljmp
pop
aaa
adc
rcll
mov
lahf
jle
pop
lock
ljmp
out
lea
jecxz
cmp
push
shr
shrl
test
sbb
push
jns
fistl
rolb
loope
xchg
clc
fisttpl
inc
jb
push
fdivrs
mov
divb
add
dec
jbe
dec
iret
inc
in
insb
cmpb
out
jp
pop
and
pop
flds
add
pop
rcr
fstl
push
in
or
mov
daa
add
sbb
xchg
or
ds
push
sbb
add
sub
push
jmp
lahf
inc
mov
imul
mov
dec
sahf
bound
sub
push
pushf
jp
int
rcll
rorb
mov
sbb
fisttpl
pop
stos
mov
xor
adc
cli
scas
icebp
roll
or
shlb
jnp
cmpsb
xchg
lods
pop
pop
fdivrs
inc
pop
jle
daa
pop
mov
fbld
jmp
gs
pop
pop
addr16
movb
sub
icebp
jo
pusha
in
inc
adc
jno
ljmp
inc
fsts
sub
jno
into
pusha
scas
adc
cmpsb
push
lods
outsb
inc
cs
jae
adc
insb
outsb
iret
rorl
xchg
inc
cmp
dec
aam
xchg
sub
sub
adc
fcmovnu
pusha
filds
rcrb
aas
aaa
movsb
push
ret
mov
movsb
adc
fisubrl
cmpsl
jae
roll
add
lock
jl
mov
shrl
loop
or
mov
arpl
sarb
adc
sets
mov
rcl
sbb
and
addr16
test
dec
sbb
pop
inc
cmc
orps
cmc
xorl
and
mov
lea
sbb
adc
or
xor
stos
ja
cld
ljmp
mov
lock
test
sarb
or
cwtl
xchg
push
in
scas
popa
jb
jl
adc
addr16
pop
call
xor
mov
jno
cmp
jge
adc
jmp
loopne
pop
repnz
push
jecxz
cmp
ja
out
ret
pusha
cwtl
mov
jge
nop
xor
out
imul
cmp
or
icebp
cmpl
loope
movsl
jg
adc
in
mov
pusha
stos
jecxz
sbb
sbb
xlat
dec
dec
xchg
jb
xor
mov
lahf
js
mov
in
push
aad
mov
jae
clc
leave
dec
mov
icebp
hlt
jecxz
xor
add
enter
lock
test
sar
jbe
mov
lods
add
push
pusha
imull
jecxz
xchg
cmp
and
dec
sub
out
outsb
adc
dec
out
push
inc
xor
hlt
flds
aaa
add
mov
mov
mov
xchg
test
les
ljmp
cmp
jl
fwait
inc
outsb
xchg
aam
aaa
sub
cs
lret
cmp
das
pop
inc
pop
imul
sub
fcom
inc
and
cli
jno
gs
loopne
or
push
cwtl
mov
cwtl
mov
cmp
mov
sti
lret
push
push
in
gs
mov
push
push
icebp
addr16
xor
clc
adc
fcoms
imul
out
aam
and
jbe
sarl
int3
mov
dec
jne
mov
xchg
mov
mov
int3
lcall
mov
jo
cltd
fldl
jae
inc
jge
pop
adc
push
or
gs
jg
mov
inc
ret
xchg
aam
sub
mov
sahf
jbe
inc
mov
mov
icebp
xor
aas
pusha
int
fldcw
ret
neg
and
xchg
arpl
cmp
stc
mov
jae
push
sbb
cmp
nop
push
aam
les
fcmovnbe
push
jmp
ror
jge
inc
sbb
xor
fwait
xor
loope
scas
outsb
jg
int3
push
mov
jb
test
aad
lock
inc
sahf
test
dec
jmp
hlt
test
mov
cmp
in
lock
mov
insl
sub
push
mov
lds
jae
inc
mov
out
repz
es
pop
pop
notb
jmp
rcll
mov
outsb
clc
std
fdivp
cli
jecxz
test
outsb
mov
mov
mov
mov
in
add
lret
mov
jb
daa
ficoms
and
enter
mov
clc
aam
iret
mov
loop
aaa
fildl
arpl
mov
adc
daa
mov
sti
lret
jmp
iret
xor
xor
push
mov
jns
or
test
lcall
inc
in
insb
adc
in
stc
or
sub
lods
inc
fincstp
sbb
xor
cmp
ss
notl
cmp
aas
enter
pop
inc
lea
mov
cmp
dec
stc
mov
ret
jb
roll
je
and
mov
or
dec
or
rolb
lcall
adc
rcrb
aad
mov
inc
jnp
test
push
xor
jns
inc
loope
cltd
in
inc
cltd
das
shlb
push
push
test
ret
jp
add
xor
icebp
fisubs
roll
mov
out
cmp
pop
jle
xchg
imul
out
mov
jb
shrb
pop
movsl
insl
pop
scas
ja
jecxz
jo
sbb
movlps
arpl
shll
cmpl
lods
test
dec
clc
xor
jle
inc
sbb
add
imulb
pusha
cwtl
mov
ds
pop
dec
fwait
mov
rolb
gs
push
fidivl
or
mov
sub
cmp
mov
push
inc
xchg
icebp
adc
in
cmp
mov
inc
adc
sub
pop
xchg
add
cmp
je
jns
sub
aaa
push
loopne
xorl
or
daa
add
ficoml
sub
or
mov
mov
mov
or
daa
jae
or
mov
add
sub
repz
in
xor
mov
pushf
or
inc
fidivl
inc
and
mov
dec
mov
loopne
pop
inc
mov
outsl
and
inc
movl
or
arpl
shrb
loop
mov
loopne
clc
sti
jecxz
movsl
jns,pn
aam
adc
sbb
nop
push
xor
push
js
insb
jmp
std
xor
push
xchg
push
fs
push
lret
xor
jns
sub
jnp
cmpb
in
sbb
filds
jb
xor
stc
inc
testl
inc
pop
int
xchg
adc
xor
add
adc
shlb
push
rorb
jecxz
mov
ljmp
pop
fnsave
dec
dec
mov
adc
jl
loope
dec
pop
scas
daa
inc
cmp
jne
or
pop
out
das
lret
ret
stos
xchg
jmp
shrl
mov
push
sbb
push
sahf
ja
or
mov
stos
inc
fidivrs
dec
and
mov
sub
sbb
ret
mov
jl
mov
jmp
xorb
leave
mov
insl
test
sahf
xor
sti
xor
fnstcw
lea
adcb
pop
pop
push
lea
rep
or
test
lods
mov
daa
jb
loope
jnp
mov
adc
fwait
xchg
decb
jmp
roll
mov
push
push
cmp
stos
push
mov
dec
push
or
xchg
sbb
test
sbb
loope
jle
enter
sbb
adc
lret
out
shlb
sub
dec
and
cwtl
sbb
push
pop
xchg
lahf
lret
push
outsl
mov
mov
adc
test
stc
mov
pop
and
pusha
bound
and
es
scas
jne
sub
shlb
xlat
and
subl
lea
xchg
repz
fs
loope
das
pop
dec
shll
js
addl
sbb
mov
popa
jle
or
aad
fidivrs
cmp
adc
add
and
mov
rorl
mov
mov
add
inc
sub
outsb
imul
nop
leave
jns
sub
cwtl
sarb
stos
aaa
fstps
std
sbb
sahf
pop
ja
push
add
dec
lcall
int3
stos
pop
xor
imul
movsb
add
xorb
cwtl
push
pop
out
push
int
sbb
push
cwtl
pop
in
scas
lock
mov
inc
iret
xchg
cmp
cs
jae
or
int3
mov
imul
fwait
mov
push
adc
mov
inc
loope
loop
shl
jb
push
lret
jmp
daa
push
mov
aad
scas
jo
hlt
cltd
jns
in
neg
ficoms
daa
adc
pop
pop
sub
mov
mov
test
outsl
cmp
in
scas
pushf
push
jns
and
or
rolb
pop
mov
jecxz
pop
aaa
aam
xor
std
jns
ljmp
jnp
aam
outsb
ficoms
jle
stc
pop
mov
dec
jae
iret
mov
je
jno
cmp
and
fwait
mov
cli
repnz
inc
jle
sarl
rorb
push
mov
adc
xlat
loopne
jge
ja
out
xor
adc
push
pop
pop
stos
push
add
lea
push
jecxz
mov
sbb
and
aas
or
mov
bound
clc
shl
imul
imul
lret
testb
dec
outsb
dec
repz
xor
ret
xor
xor
loop
sub
mov
adcl
aam
in
lahf
sbbb
imul
lcall
clc
sbb
in
xor
pop
sub
fwait
xor
cltd
fs
push
in
stos
iret
jnp
jns
test
mov
push
push
test
mov
push
test
sub
mov
xchg
mov
rcrl
xor
xor
subb
ja
adc
mov
std
push
pushf
or
adc
adc
push
jl
and
add
cwtl
jle
sub
push
or
out
sbb
sub
jmp
inc
in
cmp
inc
mov
adc
adc
sub
jnp
cmpsb
pop
cmpb
mov
sbb
das
or
and
jecxz
cmc
mov
dec
out
mov
inc
dec
sub
insl
mov
sahf
sub
ss
aas
push
push
nop
negl
movsl
pushf
out
ret
imul
icebp
mov
sbb
mov
shl
lods
into
bound
cmp
jmp
xor
mov
iret
adc
scas
adc
imul
pop
repnz
scas
or
adc
mov
and
mov
stos
mov
in
sbb
lret
mov
cs
aam
je
dec
mov
into
or
jg
xchg
hlt
call
lahf
mov
sub
and
shl
xchg
xlat
pop
je
fildll
lahf
mov
pop
or
lret
jmp
aad
fidivl
pop
test
inc
cmpl
jp
xor
insb
sub
ret
insl
mull
push
fiaddl
insb
cli
or
sbb
adc
das
jecxz
inc
into
in
lret
inc
jg
nop
dec
out
xchg
cmp
gs
sahf
jecxz
jge
mov
popf
mov
rolb
cmp
out
xchg
lcall
out
loope
push
and
dec
sbb
or
jmp
lock
bswap
test
pop
insl
roll
icebp
sbb
loope
xchg
aaa
data16
add
push
cmpsb
pop
lret
and
lret
mov
js
sbb
sub
jge
shl
fldenv
pop
cs
daa
cmpsb
dec
jge
xchg
adc
mov
mov
cmp
arpl
fwait
out
inc
mov
sub
test
cmp
aad
dec
pop
test
enter
pop
dec
test
cltd
mov
sbb
mov
movl
pop
mov
in
inc
out
sti
push
mov
sahf
aas
sbb
js
ficoml
sub
clc
push
cmp
bound
jne
icebp
push
cmp
sti
mov
les
or
sub
cmp
mov
sub
js
xor
in
test
mov
insb
cmpsl
enter
sub
mov
aas
pop
mov
or
lret
lea
hlt
daa
and
sbb
fsubp
dec
and
push
sbb
fcoml
and
andb
and
mull
std
xchg
aaa
cltd
cs
ds
addr16
mov
xchg
hlt
ja
mov
and
or
push
xorl
xor
xchg
mov
jecxz
fucomi
nop
jecxz
popa
cmp
repz
es
dec
xchg
pop
das
inc
stc
push
aaa
popl
cltd
push
jbe
mull
push
push
and
cmp
sub
lods
in
dec
mov
arpl
negb
jmp
push
imul
inc
sbb
arpl
sbb
or
gs
sbb
xor
mov
xor
sbb
inc
inc
and
push
add
dec
mov
shrb
jbe
loop
adc
and
js
movb
and
push
mov
mov
out
pop
roll
inc
mov
mov
inc
lahf
outsl
jo
mov
lret
addr16
sarl
and
out
push
out
scas
or
inc
pop
gs
mov
jo
ds
cs
jbe
inc
and
mov
decb
test
adc
inc
int3
add
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
push
scas
test
add
repnz
adc
sarl
jne
mov
lock
js
xor
cmp
xchg
ljmp
data16
lea
xchg
push
jg
and
sbb
mov
xchg
jge
test
test
dec
push
and
or
xor
out
jecxz
mov
sti
cld
pop
sbb
les
mov
stc
mov
inc
lret
mov
iret
stos
mov
imul
xchg
aam
arpl
or
stc
inc
insb
gs
mov
push
push
pop
ret
icebp
aad
int
fwait
lods
pop
xchg
shlb
cmpb
add
shrl
adc
cmp
out
pop
xchg
push
pop
xchg
add
mov
and
pushw
dec
popf
or
sub
adc
push
xor
xchg
mov
mov
in
adc
cld
and
adc
hlt
jmp
mov
inc
push
push
rcrb
es
loop
xchg
mov
loopne
sti
stos
jno
jnp
dec
jno
xchg
arpl
ret
xchg
adc
adc
loop
scas
inc
mov
xor
push
test
dec
mov
jns
push
hlt
outsl
stos
jb
cmp
enter
bound
adc
cli
fisubl
or
mov
aam
mov
add
pop
dec
in
fwait
adc
mov
add
add
add
add
sub
sub
addb
xchg
add
mov
lcall
lcall
lods
xlat
das
cli
inc
popf
shrb
lcall
add
imul
in
xor
pop
jae
xor
stos
gs
enter
cwtl
pop
xchg
push
xchg
aam
aaa
sub
cmp
adc
test
or
adc
push
pop
bound
lods
xlat
in
inc
cmp
pop
pushf
and
dec
xchg
cmp
or
or
adc
call
and
add
mov
jbe
outsb
movl
xchg
cli
mov
inc
push
mov
imul
add
add
add
das
and
aam
aam
ljmp
je
or
repz
mov
add
lods
add
add
negb
aad
inc
sbb
hlt
outsl
les
push
int3
cs
mov
testb
out
xorb
js
sbb
jnp
in
leave
lock
pop
jle,pn
pop
mov
in
adc
mov
aas
mov
outsl
adc
jno
cs
mov
pusha
pop
mov
push
mov
adc
ficoml
mov
mov
pop
fstpl
or
push
xlat
mov
push
inc
shrb
mov
fwait
adc
rcrb
dec
pop
jnp,pt
push
sub
push
test
xchg
cmpsb
mov
clc
inc
roll
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
arpl
add
xor
pop
pop
in
adc
fsubrs
out
jns
loop
int3
add
sti
sbb
or
stos
inc
adc
int3
inc
dec
cmp
js
inc
mov
cmp
pushf
mov
sub
adc
cli
jns
jmp
aaa
test
dec
mov
mov
pop
hlt
sbb
sbb
cmpsb
push
int
cmpsb
fstpl
pop
mov
aas
loope
push
stos
pop
lods
inc
dec
popf
jle
add
cmp
rcl
decb
int
sub
sti
mov
out
adcl
sub
inc
ds
or
xchg
mov
loope
add
sub
add
add
out
lods
cmp
stc
stc
mov
mov
add
adc
mov
clc
xorl
mov
cmc
or
mov
mov
stc
inc
xlat
and
pusha
insb
xchg
test
loopne
xlat
lock
nop
addr16
and
xor
mov
adcl
int3
dec
dec
or
into
cld
jns
cmpl
sbb
cmc
out
imul
xchg
mov
outsb
dec
fdivl
pop
cmp
cwtl
xchg
mov
jecxz
jmp
and
inc
jns
mov
shll
jne
in
lcall
jmp
scas
imul
loop
lahf
inc
ret
iret
add
add
inc
gs
aaa
push
stc
in
mov
add
add
push
inc
call
daa
jmp
or
outsb
cwtl
cmp
ret
push
dec
clc
cmpsb
and
test
fisttpl
fisttpl
sub
sub
test
dec
adc
jns
les
test
jns
stos
mov
fisubrs
rorl
sbb
repnz
cmp
subl
scas
iret
mov
mov
mov
dec
adc
or
inc
mov
repnz
cmpb
mov
push
scas
out
push
mov
mov
dec
xor
add
nopl
sti
lret
or
and
ss
sub
nop
xchg
pop
stos
leave
sti
es
add
add
sub
das
jle
jg
imul
in
xchg
movb
add
int3
test
mov
ret
cmc
xor
or
jp
adc
push
lcall
call
pushf
mov
orl
arpl
outsl
cmp
roll
push
push
jp
in
jp
jno
hlt
push
pop
push
or
xor
push
lcall
es
jmp
jg
mov
pop
mov
outsl
mov
sub
scas
adc
adc
outsb
inc
fmuls
fnstsw
repz
in
adc
push
popf
or
cli
mov
stos
cmp
mov
mov
lret
adc
add
addr16
and
mov
mov
jae
xor
add
lods
add
add
mov
arpl
mov
insl
cwtl
repnz
xchg
xor
fldenv
lahf
sahf
faddl
ret
mov
mov
xor
cli
jg
pop
jns
xchg
mov
push
sbb
sahf
addr16
fwait
ret
adc
jmp
lds
sbbl
adc
sub
adc
in
into
out
arpl
scas
mov
dec
sbb
pop
fs
lcall
push
cmp
cmpsl
outsl
and
rcrl
std
mov
or
dec
push
out
cmp
insb
adc
add
add
add
add
or
ret
lods
sub
mov
stos
loope
add
lods
add
add
or
sub
pop
pushw
outsb
add
mov
call
push
arpl
adcb
mov
fisttpll
mov
xchg
outsb
lahf
popl
cmp
mov
rclb
add
mov
loopne
mov
mov
sbb
mov
sbb
jecxz
cmp
clc
mov
sub
pop
imul
mov
pop
in
sbb
fmul
stos
cmc
mov
ret
adc
mov
movsl
imul
xchg
addr16
lahf
mov
xor
xlat
mov
inc
into
lahf
cld
push
into
push
rcll
add
add
add
add
ret
pop
iret
fst
enter
lret
in
popf
bound
add
add
bound
scas
stos
stos
adc
ja
cmp
pop
push
data16
leave
pop
or
adc
adc
ljmp
dec
lock
scas
mov
jp
mov
jge
es
dec
cmp
mov
inc
js
mov
das
ret
pop
adc
in
movsb
adc
leave
mov
jnp
inc
cmp
pusha
cmp
or
out
popa
aas
add
out
mov
loope
add
add
cmp
rolb
push
add
sub
dec
sahf
jg
cmpl
stc
adc
rolb
push
fs
or
mov
lahf
in
add
add
lock
out
repz
mov
ret
in
fldcw
jb
cmp
add
xchg
pop
mov
xor
cmp
addb
mov
arpl
adc
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
inc
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
rolb
pop
aam
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
aad
add
or
subl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
push
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
dec
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
xor
xchg
add
lods
add
add
fmuls
dec
fucomp
hlt
fimuls
in
imul
mov
cmpl
or
and
or
mov
roll
push
std
jecxz
mov
loope
ret
adc
xor
dec
mov
ds
adc
repnz
pop
imul
dec
inc
mov
adc
push
mov
rcll
push
lcall
daa
aad
rclb
mov
fisubs
mov
dec
mov
mov
dec
lea
mov
mov
dec
popf
add
add
mov
push
mov
xlat
push
decl
lret
add
lods
add
add
loop
loopne
or
xorl
hlt
pop
shlb
sub
cld
adc
nop
sahf
fimuls
popa
les
push
or
cltd
inc
out
xlat
sbb
loop
into
mov
aad
out
push
dec
lds
outsb
loopne
or
adc
andl
addr16
fcomip
cmp
mov
and
fdivr
dec
jp,pn
mov
xlat
aaa
xor
add
pop
push
mov
jp
cwtl
lcall
pop
dec
mov
loope
xchg
add
xchg
divb
inc
outsl
mov
add
add
stos
pushl
xchg
push
inc
out
xchg
add
lods
add
add
mov
inc
jno
repnz
add
xlat
movsb
xchg
je
or
jp
decb
xchg
xchg
sarb
test
mov
add
int3
sbb
je
ret
out
or
cltd
imul
push
leave
std
jp
ljmp
cmc
or
jb
cwtl
fdivrs
popa
sti
xor
push
push
clc
sahf
pop
cmc
and
sti
pop
jne
in
pcmpgtd
lds
add
cli
adc
mov
jp
and
jne
adc
lods
jg
mov
lret
push
arpl
in
xchg
jmp
mov
add
add
add
add
cmp
in
fimuls
dec
jne
fwait
cwtl
add
lods
add
add
arpl
dec
cmpsb
jne
ret
push
aam
into
and
mov
dec
gs
xchg
into
cmp
mov
cltd
arpl
mov
mov
inc
enter
inc
or
int3
mov
mov
push
notl
sbb
mov
out
jmp
mov
pop
inc
inc
sti
mov
in
clc
jns
in
inc
roll
std
fbld
sbbl
jb
daa
sti
or
pop
sub
pop
sahf
insl
test
cmpsl
add
ret
in
inc
dec
into
xchg
push
stc
fisubs
inc
dec
fs
jae
jno
sbb
jno
mov
cmp
add
mov
sbb
std
negb
sub
mov
cltd
add
lods
add
add
mov
subb
pop
sub
xchg
sbbb
lock
inc
call
mov
cltd
lahf
pushf
jl
insb
popl
jnp
or
inc
inc
or
std
push
cmp
scas
data16
aam
xor
lret
fidivrs
mov
mov
or
push
push
fnstsw
call
jno
mov
ds
adc
fsubrl
push
mov
popa
popa
mov
pop
mov
insb
lahf
int
lret
fsubl
sbb
in
push
sub
in
add
iret
aas
xor
cmp
fidivl
xchg
mov
scas
fbstp
inc
mov
dec
cmc
cltd
add
lods
add
add
loop
jnp
lcall
mov
mov
cltd
pop
push
or
outsl
out
push
xor
fsubr
scas
dec
inc
and
pop
ja
inc
sti
push
fistps
xorl
mov
xor
imul
aas
dec
xchg
lods
mov
fldt
loope
dec
ss
call
les
mov
lahf
and
sub
push
jno
cld
imul
or
aad
jbe
rdpmc
add
rolb
mov
mov
jne
test
in
add
add
add
pop
sub
lret
add
lods
add
add
mov
inc
repnz
pop
sbb
jmp
xchg
test
insb
jbe,pn
xchg
cmp
jb
hlt
lea
pop
stos
cmp
jne
sti
test
add
jle
mov
push
fidivs
inc
hlt
ret
rcr
dec
cmp
aad
gs
les
jae
xchg
xor
jecxz
adc
mov
pop
inc
lcall
dec
pusha
shll
in
ds
and
push
out
mov
or
mov
mov
pushf
int3
sub
das
mov
bound
rcl
leave
adc
into
cwtl
cwtl
xor
push
cltd
cli
sub
add
mov
aam
xor
and
dec
fwait
add
lods
add
add
xlat
pushf
in
push
stos
dec
lahf
xchg
int3
and
inc
mov
lods
adc
outsb
out
cmp
jnp
int3
lahf
mov
adc
jle
in
imul
sub
loope
cmp
ljmp
call
pop
rorl
fs
fcoms
ja
hlt
ljmp
inc
mov
aas
sahf
out
popf
dec
mov
fists
out
outsb
jnp
jp
mov
sbb
lods
push
xor
inc
adc
cltd
hlt
filds
ja
push
mov
pop
adc
mov
leave
andl
pop
sub
imul
int3
stos
lret
add
add
push
add
mov
out
jb
cld
fwait
add
lods
add
add
push
inc
pop
adc
andb
mov
or
jns
lcall
fs
in
sub
pop
decb
adc
je
lcall
mov
fwait
and
mov
jnp
hlt
scas
nop
call
mov
aas
icebp
jg
push
inc
in
dec
in
xor
inc
stc
sti
leave
adc
xchg
mov
cmp
popf
bound
arpl
mov
inc
add
lret
stc
loop
push
mov
sub
dec
ljmp
fimull
cltd
push
xlat
xchg
mov
add
jmp
repz
fimull
pop
mov
fisubrl
add
add
or
jmp
rcr
push
std
movsb
loope
orb
and
inc
ja
sub
or
mov
fwait
push
les
notb
scas
popf
lret
cwtl
mov
js
fdivl
push
leave
in
rorl
inc
or
sbb
insb
fsubrs
loop
mov
xchg
sub
jns
mov
and
subl
ds
mov
jg
into
adc
jp
or
add
out
imul
or
shl
sbbb
mov
pop
inc
pop
iret
pop
aad
ss
dec
or
adc
add
lods
add
add
xchg
lds
xchg
loop
mov
cmp
in
mov
mov
dec
mov
scas
fidivs
fdivs
lcall
inc
push
mov
cmpl
xor
cmp
dec
mov
outsl
or
cmp
lret
jb
or
xor
cmpsl
dec
mov
or
inc
inc
cmp
mov
sub
xchg
and
mov
shrl
adc
fsub
cmp
xchg
mov
mov
pop
testb
lea
adc
jg
mov
add
add
cld
xor
and
add
in
mov
dec
and
cwtl
in
dec
test
fdivrs
nop
enter
pop
movzwl
dec
fisubs
or
clc
mov
dec
dec
jbe
xchg
cmp
xchg
cmp
mov
fsubs
jo
pop
mov
cli
fdivrs
and
mov
cmpsb
cmc
movsl
cmp
or
nop
iret
lret
imul
mov
ret
es
xchg
ja
clc
call
jns
jge
push
add
sbb
shrb
mov
sahf
and
pop
imul
mov
pop
jle
sbb
cld
xor
add
outsb
jae
lret
jle
repz
aaa
pop
mov
add
lods
add
add
aam
in
orl
popf
bound
mov
inc
cmp
jne
cltd
xchg
gs
aam
xor
scas
xchg
mov
jbe
popf
cmp
rolb
ret
dec
lock
mov
inc
jmp
sbb
or
dec
movsb
pop
xor
pusha
xchg
mov
fs
mov
scas
sbb
xchg
dec
ja
and
mov
or
sbb
jmp
sarb
jno
fs
xchg
int
shll
cmp
xchg
cld
push
mov
daa
adc
add
jle
cmpsb
jno
jle
or
mov
sub
add
cmc
adc
adc
mov
lds
pop
lahf
add
lods
add
add
sbb
cmpsb
gs
shll
jmp
outsb
pop
shlb
daa
aad
inc
out
or
notl
xor
imul
out
in
or
stc
jg
xchg
sbb
mov
xor
ljmp
jge
sub
shlb
sbb
hlt
andb
nop
mov
jge
bound
js
mov
out
inc
fcoml
out
jne
jne
and
sub
cmp
mov
stc
fcmovu
in
in
mov
xchg
or
fwait
adc
popf
cwtl
leave
lahf
push
and
add
add
mov
lock
mov
shlb
or
add
fsubs
mov
jle
push
push
repz
orl
xchg
loope
aaa
and
mov
stos
jae
pop
dec
jns
iret
repnz
mov
sbb
dec
dec
and
fisttpll
insb
jecxz
jne
int3
scas
sub
ds
xor
sub
sub
jo
cmp
push
xchg
jge
mov
mov
jnp
inc
adc
adc
stos
add
cmp
cmp
ds
lret
lret
jmp
xor
ret
inc
pop
jp
call
repnz
lcall
and
sub
lods
jo
add
aam
push
lock
cmc
das
sbb
xchg
iret
add
add
lods
add
add
scas
jns
js
lahf
enter
mov
sbb
dec
scas
addr16
add
sahf
fsubl
jge
bswap
cmpsb
scas
push
push
or
out
push
packsswb
rcl
data16
pop
or
imul
lods
lea
outsb
iret
or
xchg
mov
xor
imul
dec
call
subb
cmp
insb
or
hlt
adc
xchg
push
cmp
cmp
lds
push
cmp
in
sub
cmp
into
mov
dec
movsb
test
aaa
insl
sarl
push
or
dec
push
inc
pop
shll
fmuls
add
add
sub
fildll
mov
mov
add
xchg
sbb
sbb
jl
subl
add
and
jg
popf
mov
and
shr
js
push
ljmp
xor
lods
mov
into
mov
cltd
mov
sbb
fstpl
int3
inc
dec
sti
movq
dec
pusha
dec
cmp
pop
sub
cmp
jmp
xlat
push
out
xchg
dec
out
imul
rol
pop
mov
insb
decb
lds
bound
mov
pushf
mov
out
fiaddl
pop
bound
mov
pushf
sbb
cli
fwait
add
add
fs
testl
pop
pop
adc
add
lahf
test
stc
movl
cmp
sub
push
jmp
dec
lock
mov
fisubrl
jbe
add
int
push
adc
sub
jae
pop
and
xchg
bound
adcb
sbb
xchg
jae
xor
jb
mov
pop
adc
sub
cmpl
test
xor
push
xor
jb
xor
inc
aaa
lods
insb
sbb
repz
pop
stos
inc
mov
gs
jae
or
fwait
cwtl
sarl
pop
loopne
add
add
push
imul
aam
cmc
loope
mov
add
pusha
in
jns
mov
xchg
pop
nop
dec
mov
bound
faddl
dec
repnz
out
mov
jnp
call
sbb
movsl
adc
sub
mov
popf
out
mov
cmc
sub
cmp
dec
in
fdivrp
xor
pop
jecxz
mov
mov
push
pop
jle
iret
dec
leave
call
pop
daa
cmp
repz
mov
int
negl
inc
test
sub
out
jmp
int3
add
pop
gs
add
adc
add
pop
add
test
xor
add
add
jne
jg
clc
cs
push
push
add
lods
add
add
or
adc
jle
imul
js
pusha
out
js
push
add
mov
icebp
pop
arpl
mov
popl
mov
sub
mov
popa
mov
mov
frstor
dec
add
adc
divb
and
nop
dec
out
aam
js
fidivs
xchg
les
pop
shrl
sub
or
inc
jno
dec
outsb
pop
pop
xor
outsb
add
sbb
dec
jb
jmp
dec
inc
sbb
add
sub
pusha
aad
das
push
scas
pop
add
xor
add
add
mov
cmp
sti
dec
mov
je
lcall
add
lods
add
add
sbb
pop
test
or
and
push
push
mov
inc
int
and
in
jle
roll
pop
mov
xor
and
filds
fisubrs
sub
sbb
and
or
push
xchg
andb
ss
mov
dec
inc
and
pop
inc
mov
xchg
stos
pushf
dec
hlt
test
repz
inc
mov
cwtl
lock
mov
pushl
jle
push
pop
jno
push
movsl
push
cli
sbb
mov
aaa
xchg
xor
and
pop
add
add
push
mov
mov
xchg
adc
mov
and
mov
add
push
mov
cmp
addr16
cmp
repz
push
es
bound
adc
repnz
dec
mov
std
repnz
fsubs
sbb
jle
push
leave
mov
dec
lea
clc
clc
nop
jnp
repz
add
xor
and
push
push
adcb
push
icebp
clc
sub
in
rolb
jnp
and
icebp
jnp
and
inc
mov
cmp
mov
lds
fs
mov
cmp
xor
and
push
and
test
jmp
cmp
add
add
fisttps
push
out
dec
icebp
dec
jno
add
lods
add
add
pop
sbb
mov
push
dec
mov
sbb
push
adc
adc
xor
pusha
push
xchg
add
or
pop
pop
and
outsb
push
push
or
add
cmpsl
out
mov
test
int
loope
ret
icebp
ljmp
pop
lcall
lcall
jnp
push
sub
sarb
out
adc
aaa
mov
movsb
dec
mov
mov
or
push
mov
jp
call
add
cmp
add
xor
add
lahf
arpl
std
jle
out
sbb
mov
lea
add
jne
test
ss
cs
loop
popa
pop
cli
or
xchg
jg
loop
push
ror
xchg
gs
inc
xor
cmp
jecxz
les
stos
repz
xchg
xlat
adc
xor
mov
scas
or
jmp
xor
jle
loope
test
mov
cmp
fdivrs
test
push
mov
popa
add
mov
dec
jmp
mov
inc
jo
adc
sti
pop
lcall
ljmp
fsub
addr16
sub
pop
add
add
and
cmp
das
outsb
cmp
lea
add
add
loop
gs
fmul
inc
cld
divb
daa
ds
data16
jns
negl
hlt
mov
loope
xor
nop
push
mov
pop
gs
ret
movsb
repnz
call
outsb
icebp
xor
xor
xchg
aad
in
lret
xchg
lahf
push
out
nop
mov
cmp
ss
dec
mov
roll
jmp
sub
in
adcl
icebp
testl
cmp
and
popa
adc
fisubl
outsb
lret
in
movsl
shll
xor
lea
xchg
nop
ffree
popf
aam
ds
cltd
js
add
lods
add
add
les
xor
icebp
mov
pusha
or
cmp
mov
lea
insl
je
pop
mov
sbb
lcall
mov
xchg
xchg
pop
ret
mov
pop
sar
test
or
pushf
cmp
cmc
and
movsb
lret
inc
mov
mov
push
jae
std
movsl
es
clc
fisttpl
dec
fwait
xor
mov
sub
dec
pop
mov
or
das
fstl
lret
out
jle
or
sbb
push
add
mov
lahf
int3
int
and
dec
xchg
push
mov
xchg
add
hlt
mov
jbe
hlt
mov
and
cmpsb
pop
inc
ret
popl
add
shr
scas
lret
lcall
mov
movsl
or
add
dec
cmpsl
cli
jl
cmc
mov
xor
ds
sbb
xor
push
dec
push
push
popa
rolb
flds
icebp
and
aad
int3
icebp
mov
inc
stc
lds
inc
inc
xor
or
and
jnp
cmc
mov
ret
cmp
push
sub
mov
fstl
out
ret
adc
xlat
out
fldcw
mov
mov
push
adc
popa
std
cmp
cmp
lds
mov
scas
cltd
mov
xor
cmp
add
xor
into
mov
sub
out
adc
add
lods
add
add
xchg
into
pop
fadds
clc
sbb
inc
stos
icebp
das
and
stos
out
rcl
loop
loopne
add
jl
aas
lahf
cmc
sbb
test
and
xchg
add
mov
sbb
dec
pop
mov
jmp
into
mov
or
jmp
mov
js
ja
ret
or
mov
xchg
mov
mov
cmp
ja
jns
and
jo
loopne
xlat
inc
mov
or
mov
mov
movsb
imul
push
sqrtps
xchg
outsb
dec
fisttpll
xor
lcall
mov
add
fucomi
outsb
and
pop
mov
jg
add
lods
add
add
adcb
jo
sbb
jb
inc
add
xchg
add
adc
aaa
jns
out
add
ss
xchg
sbb
cld
bound
mov
pop
aam
inc
add
mov
xchg
popa
lea
pop
or
xor
aas
stos
xchg
jle
add
shll
sbb
push
mov
sbb
mov
int3
in
jg
imul
outsl
lods
pushf
lods
js
xchg
out
movsb
push
inc
ja
repz
adc
adcl
adc
and
push
jecxz
and
push
std
pop
add
add
mov
and
or
lods
add
add
jo
inc
adc
jbe
dec
fimull
outsl
movsl
call
int
cmp
fnstenv
xchg
pusha
cld
sub
outsb
std
and
shlb
stos
dec
dec
xchg
insl
xor
adc
push
je
inc
in
sub
xchg
or
lahf
inc
rcrl
adc
mov
mov
ret
roll
add
inc
notl
pop
ss
pop
in
mov
loop
js
adc
xchg
in
inc
xchg
jne
outsl
add
mov
insl
loope
into
dec
pop
fs
cmpsl
cmpb
ja
out
push
insb
pop
pop
push
mov
add
stc
call
into
inc
mov
js
inc
mov
xchg
add
lods
add
add
mov
addb
add
or
inc
mov
imul
lods
movsb
sub
pushf
dec
movsl
orb
mov
mov
lds
cmp
jns
sti
dec
add
sbb
mov
mov
leave
and
pop
int
xor
jnp
lods
xor
jbe,pn
cmp
or
mov
xchg
mov
xor
lret
sbb
inc
push
out
nop
xor
inc
push
hlt
sbb
or
fmuls
push
mov
sti
ja
mov
sub
gs
jg
stos
call
popf
add
add
add
fisubrs
cwtl
sar
repz
nop
push
dec
inc
xchg
add
push
adc
cmp
movsb
inc
imul
add
cmp
test
mov
add
imul
jp
out
inc
ljmp
ljmp
leave
push
inc
ljmp
xor
mov
cmp
stc
test
add
out
dec
and
stc
jbe
divl
cld
xchg
sbb
mov
insl
xchg
cmpl
jno
and
sub
sub
mov
mov
jl
cmp
push
enter
sbb
add
int3
sbb
out
loopne
lods
ljmp
add
and
jae
jmp
xor
xchg
cmp
pop
std
cltd
and
mov
fistl
cwtl
push
xor
mov
mov
mov
sub
aam
cmp
add
test
xor
xchg
and
or
addb
int
fdiv
fs
mov
dec
std
mov
rol
jmp
xchg
dec
mov
test
sbb
fs
pop
ret
pushf
push
adc
push
sub
xchg
les
imul
lcall
push
in
stc
loope
or
push
fwait
inc
fwait
add
add
test
fildll
sub
pop
loopne
add
lods
add
add
mov
leave
and
test
adc
std
enter
push
sbb
in
ljmp
arpl
inc
pushf
es
or
lea
mov
in
inc
cmpl
dec
cmp
jmp
push
loope
rcll
fistl
cltd
popf
int
mov
outsl
js
jo
push
or
nop
in
add
sub
or
or
xchg
xchg
shl
leave
popf
mov
lret
les
icebp
cmp
out
inc
jbe
mov
rorb
fisttpll
outsb
lret
and
inc
aaa
jp
aas
orl
add
fwait
loope
sub
sarb
add
sbb
fisttps
add
add
in
adc
mov
adc
std
es
mov
xchg
mov
mov
mov
scas
loopne
test
push
xchg
adc
or
test
aaa
mov
sbb
mov
or
scas
sar
jae
lock
cld
xor
pop
lahf
cld
imul
out
or
and
mov
data16
test
dec
mov
aas
or
push
cmp
sbb
add
and
fwait
sarl
fs
xorb
fucomp
push
mov
lcall
push
jno
jae
les
add
or
ja
dec
cmp
dec
imul
add
int
insb
repz
in
movsl
push
pop
ret
or
dec
dec
lea
enter
mov
rorl
jg
lods
shlb
test
xor
push
cmp
popf
fstpl
fdivrs
std
into
mov
cmc
les
sbb
sub
push
test
mov
out
mov
mov
xchg
push
xchg
popa
rolb
xchg
pop
jge
rcll
inc
imul
xchg
mov
out
shlb
push
push
pushf
lock
aad
push
mov
sbb
popf
mov
lret
sub
je
sbb
cmp
lds
lcall
dec
cwtl
adc
add
add
arpl
jge
mov
daa
push
mov
add
lods
add
add
lahf
add
mov
push
out
in
or
xor
mov
add
cld
lods
sub
bound
inc
pop
rcrl
or
fisubrl
mov
inc
cmp
int
jns
sub
mov
loopne
mov
adcb
fbstp
icebp
lds
rcll
mov
jno
xchg
movsb
jp
mov
bound
adc
adc
jbe
xchg
cmc
mov
movsb
pop
in
aas
pop
rcrl
mov
push
iret
push
fimuls
shl
cmp
push
pop
pop
imul
xchg
lret
cmp
js
add
daa
ss
xor
and
jp
imul
add
fisubs
xchg
fdivrs
mov
insl
ds
xchg
mov
andb
add
push
sub
in
insb
aad
xchg
fiadds
iret
popf
mov
jl
in
call
xchg
repnz
xchg
mov
aas
and
pop
mov
mov
sub
cmp
lcall
mov
xor
and
inc
mov
cli
mov
mov
jecxz
cs
push
clc
mov
jg
arpl
and
int
lods
sub
lods
mov
scas
lea
std
cli
jae
add
push
dec
sub
lds
ljmp
aaa
out
mul
aaa
cmc
xchg
lcall
sbb
add
adc
mov
mov
leave
out
xchg
mov
idivb
nop
ret
clc
sahf
je
cltd
cmp
loope
inc
into
dec
iret
xor
adc
xchg
pop
test
jg
jo
js
loopne
mov
mov
pop
add
xchg
inc
inc
mov
bound
shr
mov
sub
call
cmpsl
cmpsl
add
jg
inc
clc
enter
xchg
aas
nop
fdivp
or
inc
or
jne,pn
dec
mov
push
rcrb
fs
mov
mov
jb
and
cmp
movntps
mov
add
push
aad
out
fucomip
ss
cmp
push
add
pop
lcall
cmp
mov
repnz
popf
shrb
xor
test
and
leave
sahf
aad
aaa
mov
xchg
test
in
lcall
and
iret
xchg
lcall
fidivrl
push
push
mov
inc
dec
ljmp
cmpsl
or
setge
dec
inc
xor
and
repz
out
add
add
jo
je,pt
mov
je
cs
pushf
mov
sub
add
mov
adc
inc
or
cmc
xor
mov
push
nop
outsl
aaa
das
pop
add
add
in
cld
fisubrl
sbb
js
jb
add
lods
add
add
and
xchg
dec
mov
inc
mov
sbb
xchg
dec
insb
xchg
dec
sbb
and
mov
sahf
nop
jge
pop
dec
and
je
test
jg
mov
movsb
shrb
jno
xchg
stos
mov
lock
pop
mov
mov
xchg
in
and
and
mul
jo
fstpl
test
rclb
mov
das
cmp
ds
push
pushf
call
lds
sbb
add
outsb
xchg
cmpsb
cmp
mov
fld
mov
adc
jle
add
add
push
les
in
lahf
sti
ja
rcll
sbb
lods
add
add
jbe
push
and
pop
stos
cld
aaa
gs
leave
jae
rep
ror
push
sub
mov
mov
or
lods
sahf
xchg
mov
jns
sbb
lock
lea
iret
sbb
and
adc
gs
inc
fdivrl
sbb
jno
mov
roll
rolb
ficompl
lahf
mov
or
loopne
sub
xchg
sub
sbb
call
cmp
outsl
scas
mov
sar
pusha
sbb
inc
mov
jge
push
cmp
fildl
ss
jmp
add
xchg
cmpl
push
loopne
lcall
add
lods
add
add
jo
aad
xchg
push
pop
daa
mov
dec
daa
mov
inc
subl
loope
or
mov
fadds
stc
test
std
pop
mov
icebp
mov
aas
aaa
in
mulb
inc
pop
popf
das
in
loope
repnz
sub
xchg
fnstenv
decl
lret
push
leave
sbb
flds
xchg
ret
jae
add
cmp
adc
bound
xor
in
rol
aam
and
xchg
mov
sbb
in
pop
cld
mov
mov
add
fincstp
shl
frstor
pop
dec
aad
sar
jns
add
lods
add
add
pop
std
jl
mov
pop
cs
pop
add
cltd
insl
mov
sahf
popa
and
in
pop
add
cld
dec
dec
in
movsl
popf
nop
sti
cs
and
fcmovu
push
push
xchg
sub
dec
stos
int
call
test
into
lret
and
or
into
sbb
and
jae
jmp
inc
enter
aam
daa
jno
aas
leave
std
clc
jnp
jge
popf
push
lea
test
repz
test
dec
fiaddl
push
lods
xor
ds
xchg
inc
push
leave
push
dec
in
lret
or
fisttpl
inc
jne
sub
sub
cmp
je
daa
add
add
aam
fnstsw
out
fcmovu
in
js
inc
es
add
adc
nop
into
sbb
rep
fsubr
mov
dec
jbe
in
sbb
nop
lret
xchg
push
pushf
je
add
dec
xor
rolb
xchg
shr
cltd
pop
push
sbb
lods
lahf
sub
xor
mov
fildll
movsb
dec
add
and
mov
mov
cmc
inc
lahf
dec
roll
sub
das
sbb
sahf
add
scas
mov
jp
add
xor
repnz
xchg
push
cs
mov
gs
test
mov
add
sbb
inc
jecxz
mov
loop
jle
shrl
add
cmpsb
lret
inc
xchg
fistps
and
rcr
adc
ja
mov
imul
test
push
or
cmpl
adc
push
pusha
xlat
loopne
lret
push
stos
test
inc
sbb
xchg
mov
stos
inc
fldcw
dec
nop
imul
jl
stc
ja
neg
je
adc
push
mov
mov
enter
mov
mov
rorl
int
push
in
inc
cmp
mov
popa
inc
daa
adc
add
test
jecxz
adc
pop
arpl
mov
in
pop
nop
push
cwtl
add
add
add
add
add
mov
icebp
and
jae
subb
add
rcll
jl
dec
cmp
push
and
sbb
and
or
xchg
sub
popl
cmp
out
leave
addr16
lcall
pop
cmp
aam
shl
int3
fisubs
push
sbbl
pop
mov
cmp
popf
sub
push
inc
pop
mov
decl
jl
ret
ss
sbb
push
or
lret
mov
push
into
or
aaa
mov
repz
pminsw
jno
shll
iret
push
add
pushf
push
sbb
pop
add
adc
pop
and
jno
add
adc
repz
das
cli
fists
dec
es
add
push
sub
add
add
push
filds
fwait
in
inc
in
xorb
shrb
sbb
inc
or
xchg
dec
addb
mov
and
mov
fwait
jg
hlt
lret
jmp
mov
xchg
fsubs
push
mov
sub
sahf
sub
sbb
cs
pop
or
repz
mov
fstenv
lods
call
mov
inc
cmp
add
mov
sbb
and
push
jg
setns
in
aam
sub
pop
decb
shr
xor
lock
sub
mov
add
add
mov
push
adc
cwtl
out
pop
xlat
mov
fisubrl
add
push
push
addr16
jnp
hlt
ja
aad
adc
xor
fnstcw
mov
aad
and
mov
es
mov
popf
int3
xchg
aad
imul
frstor
les
mov
out
mov
pop
icebp
gs
sbbb
ret
push
pop
addr16
in
call
outsl
popf
inc
inc
adc
dec
enter
aad
cmp
bound
cmpsb
sti
and
repnz
push
hlt
dec
add
loopne
repz
sbb
daa
test
xlat
in
stos
pusha
jecxz
sub
add
push
push
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
