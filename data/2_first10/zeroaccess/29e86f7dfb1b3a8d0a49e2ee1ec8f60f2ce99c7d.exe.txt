push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
push
insb
insb
adc
adc
int
adc
loop
leave
das
fisttpl
lds
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
pop
mov
testl
imul
pop
jmp
jno
jmp
push
test
decl
push
jg
xchg
inc
cmp
mov
sub
and
and
mov
mov
push
inc
cmp
fwait
adc
jae
into
leave
mov
loope
push
lcall
mov
xlat
ret
idivb
jae
je
mov
mov
jl
mov
jge
and
mov
cmpsl
xchg
ret
adcl
inc
test
mov
outsb
sub
sub
int
ficoml
mov
pusha
dec
sbb
add
cmc
mov
xorl
ja
rclb
mov
out
jo
mov
push
pop
xchg
pop
jne
idivb
dec
cltd
mov
test
sub
movsl
stos
ja
jl
shrb
mov
cmp
sub
and
arpl
push
test
add
sub
or
mov
fidivs
xchg
dec
fisubrl
adc
sub
mov
xchg
shll
pusha
mov
rclb
mov
lea
scas
add
xchg
daa
ja
sti
fsts
or
popa
xchg
enter
xchg
popa
sahf
std
jne
sbb
jnp
mov
cmp
rol
cmovns
push
cmp
rcrl
mov
test
lcall
std
mov
xchg
xchg
and
or
pop
cmc
push
cmpsl
push
cmpsl
ss
dec
shrl
loope
test
or
div
mov
push
loope
jp
sub
or
pop
out
mov
mov
sub
int
push
or
int
outsl
movsb
imul
roll
xchg
pop
icebp
sub
cs
cmp
inc
outsl
insl
ret
adc
inc
jecxz
in
cli
adc
lahf
mov
sbb
xchg
jns
xchg
inc
jl
cld
aam
adc
or
cltd
sub
push
sub
adc
mov
mov
movsl
cs
pop
ljmp
lods
jo
in
ds
pusha
les
pop
repz
xlat
push
jb
xchg
inc
loop
inc
loopne
jmp
mov
sub
xlat
daa
cwtl
adc
aam
mov
lahf
dec
jle
loop
lods
xchg
fldl
add
dec
xor
loope
hlt
or
aad
inc
cmp
fiadds
lods
gs
sub
sbb
ja
leave
popa
jns
mov
ja
and
xchg
inc
loop
lret
xor
dec
mov
add
loope
rclb
fwait
in
lea
data16
dec
pop
dec
push
insb
cltd
movsb
out
pushf
push
rorl
jg
out
sbb
icebp
les
outsl
add
jmp
and
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
jae
push
adc
adc
adc
adc
xor
or
imul
iret
push
fldenv
inc
jge
push
jns
mov
pop
xor
leave
mov
lods
cmp
nop
sub
xchg
pusha
mov
xor
xor
arpl
inc
mov
mov
cmp
inc
test
adcl
std
je
scas
in
test
hlt
mov
mov
cmp
pop
sahf
mov
sti
in
or
cs
jle
ljmp
dec
aas
leave
clc
mov
dec
sub
fistpl
jno
gs
mov
enter
cltd
sbb
nop
mov
test
es
xor
sbbl
notl
hlt
ljmp
jno
sbb
xor
xchg
loopne
outsl
push
iret
mov
push
sub
mov
inc
test
mov
mov
add
out
push
mov
aaa
jmp
lds
in
lcall
cmp
cmp
test
and
cmpl
cmc
es
push
push
lahf
daa
jge
mov
xchg
jno
xchg
sbb
mov
push
lods
mov
nop
imull
les
xor
pop
repz
sbb
mov
popa
xor
xor
jp
adc
adc
popaw
mov
sbb
outsl
push
pop
cmp
enter
pusha
dec
mull
shlb
into
xchg
mov
aam
aas
mov
test
mov
sub
pushf
jecxz
fdivs
das
sub
mov
stc
dec
pop
subb
push
push
lret
xchg
int3
or
push
push
loope
mov
cs
outsl
les
adc
inc
and
add
jge
ljmp
lret
out
sub
cmp
xchg
addr16
dec
lahf
inc
xor
fbstp
fcoml
mov
jbe
loopne
hlt
decb
inc
ret
in
add
jb
lods
mov
imul
outsb
mov
dec
mov
les
dec
mov
in
pop
loope
pop
xchg
arpl
aas
adc
add
jecxz
push
adc
jbe
sbb
ret
pop
out
sbb
sbb
xchg
mulb
or
jb
rolb
sub
adc
sub
and
clc
out
pop
andb
call
arpl
mov
push
inc
jae
sbb
dec
mov
xor
cs
push
cmp
jns
jecxz
lock
jnp
cmp
push
es
xorb
insl
inc
xchg
mov
loope
cs
lahf
mov
or
cmp
nop
push
sub
ret
lods
add
adc
popf
ja
sub
and
xor
push
add
into
pop
cltd
hlt
frstpm(287
in
xchg
rorb
ja
mov
mov
and
ds
imul
pusha
test
or
add
dec
mov
ljmp
pop
call
cmp
adc
add
mov
push
aas
xchg
add
push
andl
out
aam
or
or
out
mov
dec
pop
sbb
mov
adc
and
jp
loope
imul
adc
loope
add
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
mov
into
lods
orb
adc
adc
adc
notb
int3
sbb
mov
sub
out
and
shr
push
inc
fcomi
dec
mov
fincstp
add
les
notl
adc
pop
xchg
outsl
and
mov
lret
popa
pop
popa
xchg
xchg
mov
mov
dec
insl
mov
push
dec
inc
nop
xchg
sub
mov
shrb
jecxz
inc
xlat
cltd
testl
mov
outsb
fsubrl
arpl
andl
xchg
mov
push
imul
mov
int3
push
cmpsb
test
mov
out
lea
dec
out
aam
mov
aam
pop
cmp
mov
fistpll
sti
cmp
cmp
inc
or
jl
sub
and
jl
negb
rorb
into
push
repnz
xor
ljmp
je
ds
push
inc
adcb
sahf
aad
inc
lret
or
cmpsl
push
repnz
mov
popf
push
into
hlt
fstpt
cmpsl
or
cli
loopne
cmp
add
out
mov
dec
and
bound
adc
pop
cltd
add
jo
bound
sub
in
cltd
sbbb
jne
je
xchg
adc
test
dec
jp
pop
outsl
subb
stc
pop
scas
fistl
dec
sbb
leave
push
mov
xchg
mov
lock
or
fwait
mov
jl
aas
mov
sbb
aam
adc
sti
imul
jle
xchg
addb
or
ret
scas
test
stc
and
je
pop
jo
sub
inc
das
mov
lret
xchg
dec
lds
xor
sbb
add
jno
adc
lahf
out
int3
xor
imul
sub
add
insl
dec
mov
or
mov
shll
jbe
or
mov
ljmp
jne
call
mov
popa
sub
test
aas
push
cli
pop
sbb
adc
xchg
push
push
sub
test
mov
add
push
test
out
inc
inc
xor
fmul
push
or
inc
pop
fstps
xor
hlt
repz
add
xor
jo
xchg
scas
push
push
outsl
hlt
adc
push
int3
push
xchg
rolb
pusha
scas
dec
das
push
jmp
pop
incb
and
mov
or
or
aas
jecxz
mov
inc
jne
cmpsb
inc
lret
mov
stos
dec
xor
insl
inc
lret
jecxz
cli
icebp
lret
hlt
dec
inc
mov
out
enter
out
nop
jmp
das
jecxz
fnstsw
ret
push
dec
lods
pop
adc
push
into
and
insb
bnd
repz
call
dec
mov
sub
xor
pusha
addr16
adc
je
popf
shl
addr16
inc
int
sub
std
sti
dec
xchg
gs
test
icebp
jecxz
in
and
in
push
mov
inc
mov
clc
out
jo
jmp
cli
cmpsb
inc
imul
jns
sbb
popl
add
xor
jmp
cltd
fstp
mov
sub
movb
rorb
pop
sub
cmp
in
xlat
and
pop
mov
push
sub
into
jmp
test
mov
mov
iret
mov
popa
push
into
mov
testl
in
or
dec
jno
add
add
add
lret
jo
add
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
mov
sbb
dec
mov
sbb
jp
jmp
jno
add
lock
push
add
xor
rcrl
or
pop
pop
and
cmp
fwait
insl
pop
repz
jnp
pop
or
jnp
mov
dec
or
xchg
int3
in
in
gs
insb
fwait
aam
jecxz
out
xlat
mov
jge
sti
and
mov
nop
push
lea
cmpsl
inc
dec
jno
fsubs
dec
inc
movsb
and
addl
jbe
or
add
shlb
call
in
lret
push
nop
pushf
dec
adc
add
mov
int3
sti
movsb
cmp
stos
fldt
or
adc
mov
aad
or
lods
xchg
sbb
jg
and
pushl
arpl
mov
dec
leave
hlt
pushf
jmp
mov
ffree
shl
cli
les
out
imul
pusha
ja
stos
add
xlat
out
je
adc
negl
adc
cmp
xor
fldpi
push
mov
dec
test
adc
pop
stos
adc
pop
clc
rcl
add
jl
sub
sbb
inc
xchg
iret
mov
sti
out
je
js
inc
nop
mov
and
xchg
cs
push
sbb
xor
or
cmpsb
pop
pusha
and
jl
adc
or
imul
inc
or
jmp
pop
xchg
xor
dec
jmp
jno
jg
xlat
cmovb
imul
fildl
outsl
xorps
jmp
divb
mov
out
and
jbe
push
cmp
cwtl
mov
jne,pt
lock
icebp
and
pop
and
loope
scas
adc
mov
notl
adc
mov
stos
adc
ja
ss
iret
dec
into
push
dec
stos
mov
sahf
mov
cltd
imul
sub
call
xlat
addl
and
push
inc
cs
sub
push
repz
sub
pop
cwtl
and
test
xchg
or
clc
pushf
cltd
cli
add
pop
jge
fistps
in
test
and
mov
mov
adcb
cmp
mov
repnz
sahf
popa
rolb
mov
push
ss
mov
fstps
adc
adc
xchg
lret
xchg
fucomip
insl
mov
or
mov
loopne
cmp
adc
adc
sbb
mov
pusha
into
xchg
out
mov
cmp
sub
pop
adc
mov
jle
jno
xor
jle
cmc
cltd
or
je
inc
in
cwtl
ror
cmp
xchg
add
ds
cmc
mov
add
and
and
loopne
test
test
hlt
xor
fstpl
ljmp
mov
js
cltd
jns
out
pushl
jo
xor
testb
push
test
mov
inc
pop
jmp
jns
hlt
jmp
clc
dec
scas
adc
fdivr
add
mov
push
adc
ret
pop
stc
loop
sarb
insb
xchg
mov
push
inc
mov
push
mov
scas
mov
arpl
push
mov
or
scas
lret
inc
in
pop
xchg
stos
frstor
movsb
adc
outsb
add
out
adc
push
sbb
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
subb
int
adc
andb
inc
sub
xchg
dec
xchg
cmpsl
xchg
xor
pop
xor
mov
mov
dec
mov
dec
inc
or
add
clc
popf
push
pop
cltd
js
iret
pop
sbb
inc
pop
loop
pusha
xchg
xchg
dec
dec
rdmsr
outsb
adc
fcmove
push
add
inc
es
or
jmp
dec
call
push
repnz
mov
push
andb
fwait
in
inc
xor
inc
stc
push
add
and
lods
mov
cmp
fildl
test
repnz
imul
mov
sbb
in
stos
cmp
sbb
shlw
pop
dec
outsl
scas
sbb
adc
sbb
leave
jne
lcall
sub
xor
cmp
pop
sbb
enter
xor
in
lods
adc
dec
sub
rolb
push
pop
popa
vpandn
ljmp
lods
andb
fsubrl
iret
ljmp
push
stos
lcall
fwait
cmp
or
daa
scas
sti
xlat
jg
out
mov
adc
clc
mov
pop
nop
int
pop
popf
add
inc
push
jns
test
mov
mov
cmp
imull
mov
and
in
push
rorb
and
test
xor
das
jae
cltd
adc
int
dec
adc
mov
sub
xor
addr16
pop
pop
xor
sub
outsl
adc
notl
hlt
push
fimuls
sub
cmp
dec
cld
shlb
outsl
xor
cwtl
bound
repnz
std
lea
mov
andl
push
pop
and
cwtl
insb
jmp
ljmp
add
daa
jno
fldl
jmp
inc
or
adc
movsb
mov
mov
rolb
xchg
bound
adc
xchg
bound
sarl
js
in
add
addr16
test
pop
inc
xchg
push
or
jl
mov
scas
sbb
pop
jne
out
push
int3
out
pop
out
xlat
xlat
test
dec
clc
push
ficoms
ljmp
out
jmp
push
enter
lcall
xchg
fimuls
fistps
in
cmp
std
cmp
jnp
xchg
loope
dec
std
add
adc
popf
mov
lret
test
mov
into
addr16
pop
rcrl
divl
stc
ljmp
pop
pop
outsl
add
dec
repnz
pop
xchg
popa
idivb
cld
jg
xchg
push
dec
mov
push
out
movsl
cmpsb
cmp
enter
loope
loop
loopne
dec
mov
jmp
sbb
mov
xchg
lods
push
push
mov
rcrl
cmp
insl
or
jnp
stos
inc
inc
rcll
iret
push
adc
fisubrs
dec
pop
add
inc
mov
push
fsubrs
pop
cld
enter
push
imull
inc
clc
xchg
cmp
pop
jb
inc
lods
pop
repz
xor
enter
out
sub
push
sar
pusha
jmp
scas
xor
xlat
enter
dec
sbb
inc
xchg
xor
mov
dec
push
xchg
push
call
push
xor
xor
movsb
popf
add
stos
and
cltd
mov
idivl
sbb
push
gs
add
or
sub
jbe
movsb
stos
enter
mov
xchg
or
call
xchg
mov
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
cmp
adc
int
adc
enter
bt
inc
mov
enter
add
jle
push
sub
xor
sbb
xor
add
fcmovnb
fistps
xor
xor
mov
xor
pop
fiadds
int
sub
adc
in
dec
cs
cs
iret
adcb
bound
int3
xchg
pop
sti
cmp
mull
pop
jg
pop
aas
jg
mov
cmp
xchg
sbbb
repz
es
pop
lods
pop
call
sub
lret
or
out
in
cmp
fs
sbbl
xor
adc
lock
loopne
aam
add
std
mov
test
cld
aaa
inc
rolb
lds
sar
cltd
xchg
lock
dec
xchg
sbb
sbbb
les
in
arpl
clc
mov
or
mov
rcrl
aaa
dec
or
cmp
sbb
xor
xchg
fwait
fwait
in
jecxz
sahf
aas
stos
ds
push
push
xchg
pushf
pop
mov
mov
inc
sub
sbb
mov
push
stos
and
test
sbb
cmp
aas
jb
ret
and
pop
pop
jmp
pop
sbb
aad
sub
imul
movsl
addl
fdivrl
mov
dec
icebp
stos
xchg
fwait
push
ja
or
test
int
fwait
inc
scas
jne
mov
push
inc
fucom
cltd
shrl
adc
aaa
mov
adc
push
inc
ds
cmp
xchg
inc
negl
cmp
int3
sbb
pop
js
sub
push
mov
mov
jecxz
and
add
push
cmp
nop
scas
adc
outsl
push
jns
inc
adc
mov
xchg
popf
bound
xor
cmpsb
cli
xchg
xchg
pop
aas
lods
loop
adc
pop
push
rclb
push
adc
out
ss
test
xchg
xchg
xchg
ja
xchg
fidivs
popf
push
mov
test
mov
repz
shlb
gs
nop
mov
push
cld
aad
cmp
or
fcmovu
cmc
lods
mov
sub
ds
sbb
sbb
push
lods
add
push
add
sub
repnz
mov
daa
iret
call
dec
or
sbb
aad
mov
iret
mov
mov
ror
and
push
xor
mov
mov
test
out
div
ret
imul
test
push
adc
arpl
in
jno
sahf
adc
dec
jl
sbb
or
cmp
std
and
mov
adc
movsl
fwait
mov
pop
ret
push
dec
dec
gs
xchg
stc
stos
call
hlt
bound
xchg
add
ret
mov
test
xor
or
jp
movsl
push
scas
int
int3
mov
rclb
xchg
adc
mov
jo
cmp
push
flds
out
je
dec
pop
xor
inc
icebp
jle
int
xchg
add
adc
arpl
adc
add
repz
push
aam
mov
add
jbe
and
test
xor
dec
fsubrp
jle
pop
xchg
scas
and
insb
dec
sbb
jecxz
adc
inc
adc
cmp
dec
test
lcall
pop
cmp
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
sete
stos
push
in
adc
int
adc
out
imul
mov
and
push
repnz
pusha
cli
addr16
and
pushf
dec
dec
push
addr16
cmp
shr
sbb
push
test
into
xchg
cmc
cmp
jbe
lods
movsb
sub
sahf
fisubrl
pop
jae
xchg
adc
inc
loop
adc
jo
bnd
inc
pop
imul
or
or
pop
mov
jecxz
add
dec
and
mov
mov
or
push
ret
push
pop
or
mov
ss
lds
movsb
or
shll
lea
mov
daa
pop
mov
push
int3
cmp
sub
mov
add
cmc
fnstenv
mov
pop
inc
jp
out
pop
shrl
adc
lods
lods
repnz
scas
popf
loop
jg
dec
xchg
mov
mov
adcb
mov
sub
out
cmpsl
cltd
jo
mov
sub
jb
cmc
mov
mov
icebp
inc
movl
add
imul
mov
add
popa
lds
cmp
adc
in
stos
adc
push
xchg
inc
push
cmpsl
es
insb
mov
fs
mov
movsb
pushf
js
aaa
rol
adc
or
inc
xor
js
xchg
mov
jne
popa
insb
inc
dec
sbb
in
ret
hlt
add
stos
xor
stos
into
push
cmp
roll
dec
cmp
adc
shrb
or
aam
addr16
adc
push
repz
and
xor
cmp
and
subl
leave
repnz
out
mov
push
pushf
and
les
scas
xchg
mov
cmp
sti
xchg
mov
insl
std
inc
sub
cld
pop
mov
push
pop
pop
aaa
lahf
xor
bound
dec
sbb
popa
lahf
into
out
push
test
xchg
xor
inc
lret
ljmp
fstps
xor
fdivrs
xchg
push
xchg
inc
add
dec
loope
les
les
js
push
fnsave
repz
xor
jge
mov
js
pusha
popf
cmc
loope
sti
mov
mov
lods
arpl
in
imul
cmp
leave
dec
mov
xor
repz
ret
test
inc
xchg
ret
push
ss
xchg
inc
mov
stos
sbb
nop
dec
mov
repnz
jo
iret
mov
mov
xchg
stc
xchg
out
subl
iret
pushf
mov
adc
daa
in
push
in
movsb
ljmp
sbb
jl
loop,pt
in
inc
adcb
or
and
sub
mov
dec
test
dec
dec
lcall
dec
mov
mov
mov
mov
xor
push
ljmp
std
lret
mov
imul
jmp
out
add
mov
dec
adc
mov
xor
jg
jecxz
decl
roll
rcrl
sti
xchg
pop
adc
mov
jnp
in
xchg
cmp
cwtl
xorl
cmp
xchg
movsl
sub
sub
or
sbb
daa
ljmp
mov
xchg
mov
sub
push
mov
cwtl
or
sbb
into
mov
div
popf
jl
adc
insl
sub
adc
cmp
ja
inc
bound
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
adc
xor
int
adc
lock
movsl
out
push
pop
popa
popf
and
add
push
add
mov
std
mov
test
aaa
rcr
aas
and
sbbb
shlb
jge
scas
jne
outsb
leave
jge
mov
push
stos
push
sbb
repnz
jb
inc
lahf
mov
pop
and
je
popa
or
fistpll
fwait
and
or
sti
icebp
push
cltd
iret
outsb
xchg
push
and
jbe
sub
and
cmp
daa
push
lret
lret
jge
dec
lods
daa
jecxz
sub
mov
lahf
add
jecxz
fildl
lcall
lea
push
fistl
out
mov
loop
xchg
cmpsl
dec
arpl
push
and
cmpsl
cs
xchg
popf
idivl
xchg
mov
mov
cli
sbb
dec
rol
xchg
mov
fcompl
xchg
cmpsl
subb
xor
or
stc
pop
add
and
mov
lahf
adc
out
clc
push
adc
lret
pushf
stos
add
and
adcl
clc
popf
sub
dec
xchg
push
mov
ficoml
push
dec
add
cmp
push
jmp
jg
insb
rep
mov
push
add
jnp
aam
pop
or
popf
inc
inc
bswap
call
fdivs
pusha
test
fmuls
test
movsb
shrb
fists
loopne
das
jg
shlb
adc
xchg
cld
pop
cmc
repnz
lahf
mov
or
xchg
outsl
lods
iret
insb
mov
xchg
lea
cli
pop
mov
inc
lcall
mov
jmp
push
or
xor
imul
imul
movsb
mov
pop
jns
fiadds
jae
loop
scas
add
ljmp
mov
mov
or
shlb
add
fcomp
js
test
push
stc
xchg
das
enter
es
je
mov
in
negl
popf
sbbb
jno
add
in
mov
fisubrs
fdivs
xor
and
cmp
ds
add
jno
or
pop
jp
adc
dec
aad
add
test
hlt
jno
insl
stc
push
rorb
and
and
orb
and
push
add
pusha
popa
push
pop
adc
add
pop
nop
cld
dec
jno
popf
pop
add
adc
push
mov
mov
addr16
mov
cs
inc
push
jl
ret
sub
xlat
aam
fisubrs
cs
mov
push
hlt
cmp
daa
pop
addr16
add
mov
adc
inc
lret
repnz
add
add
jnp
jecxz
in
jg
aaa
mov
xchg
cmc
sbb
push
paddw
ja
pop
cmpsb
sub
insb
iret
dec
out
outsb
mov
push
and
dec
stc
xchg
leave
cmpsb
imul
push
idivl
cmp
inc
mov
push
movsl
aam
mov
add
sahf
mov
mov
roll
mov
sbb
sub
insb
mov
shrb
or
in
mov
pop
pop
daa
daa
or
and
in
push
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
mov
mov
int
adc
adc
or
dec
aaa
sahf
push
lea
pop
negb
xchg
pop
je
adc
dec
push
or
aad
ret
ret
int
scas
xchg
mov
jb
dec
out
leave
lods
xchg
fwait
mov
lock
or
test
shld
mov
inc
mov
es
or
insb
dec
les
fcos
and
jns
insl
cmpsb
cmc
cmc
jno
fildl
adc
xchg
lret
sub
push
mov
dec
and
fcmovnb
stos
jmp
push
or
adc
pushf
out
fistpl
dec
filds
cmp
xchg
add
sub
fimuls
push
test
jo
loope
negb
or
jns
mov
mov
and
mov
lock
ret
adc
push
dec
mov
out
pop
icebp
jge
pop
icebp
mov
mov
dec
dec
lea
mov
test
push
pop
fmuls
cmc
cld
pushf
mov
xchg
leave
clc
mov
test
sahf
shrl
popf
imul
enter
dec
dec
scas
pop
jb
into
jae
mov
movsl
lock
nop
outsl
clc
lret
iret
ljmp
lods
nop
dec
mov
and
ret
imul
insb
sbb
int3
lret
ficoms
inc
pop
mov
dec
mov
sub
xlat
xor
inc
cmp
inc
mov
ret
je
xor
and
xchg
and
sbb
lds
out
int
stos
mov
test
dec
notl
inc
and
jge
xchg
sti
leave
test
push
mov
xor
sbb
adc
cmpl
pop
lods
jae
dec
xor
mov
shlb
roll
push
jl
clc
hlt
pusha
sbb
pop
adc
lods
push
sub
in
cld
stc
jno
add
fcomip
dec
sahf
ja
mov
lret
xchg
rol
clc
cmp
or
test
andb
xchg
test
cli
jb
insb
das
bound
pop
sub
and
fidivrs
mov
fsubrl
xor
jg
or
call
and
xchg
adc
xchg
mov
xor
arpl
adc
push
add
xchg
push
xchg
imul
mov
insb
inc
or
frstor
stc
andb
jecxz
push
add
or
scas
pop
lahf
hlt
lods
pop
pop
mov
fdivl
lods
ret
jo
pop
pop
and
pop
inc
lods
pushf
inc
aam
divb
in
js
add
pop
aam
add
aas
xor
mov
cmpsb
push
adc
movsb
mov
mov
xchg
push
sub
pop
sub
xor
aam
and
add
jno
int3
ret
faddl
repnz
ret
cmp
aaa
dec
mov
push
cmpsl
mov
es
jnp
enter
xchg
xchg
pop
jmp
xchg
pop
cmp
jo
test
loope
cmpsl
jbe
mov
jle
popf
fnsave
int
sub
push
out
adc
filds
out
push
xchg
cld
and
lret
inc
dec
pop
out
inc
shr
cmc
out
push
inc
xor
dec
sub
xchg
fisubrl
stos
add
inc
outsl
inc
xchg
sbb
ret
dec
inc
sahf
movsl
das
imul
fiaddl
shr
mov
mov
shl
jmp
fmuls
sbb
repnz
mov
int
adc
outsl
jmp
loop
add
lock
int3
enter
test
dec
mov
imul
js
sti
pusha
fs
pop
and
f2xm1
negl
sub
mov
popf
ret
aam
and
hlt
add
stos
adc
jl
and
xchg
jb
push
popa
out
mov
add
ret
popa
push
or
in
jp
xchg
mov
cmp
mov
pop
pop
sub
jle
fcmovu
aas
pop
lods
jmp
adcb
aas
cld
sbb
xor
in
push
mov
mov
add
jmp
pop
inc
adc
adc
in
addr16
mov
test
inc
into
mov
je
in
push
sub
xchg
stos
mov
adc
and
cmp
cs
jmp
sub
cmp
movsl
mov
mov
fidivrl
dec
jg
dec
xor
shlb
cmp
js
in
loope
outsb
dec
mov
scas
sbbb
sbb
mov
in
lods
push
cmpsb
xorl
or
aaa
xor
or
dec
jno
adc
popfw
adc
push
lcall
sbb
push
mov
mov
clc
jge
sbb
pop
daa
test
xor
mov
lret
dec
dec
decl
cmp
cmpsb
fisubl
test
out
jbe
push
jo
sub
fsubl
xor
xor
test
sub
inc
orl
out
sub
inc
adc
mov
punpckhdq
push
xor
cmp
out
aaa
add
dec
xor
ret
stc
mov
test
cmp
mov
imul
inc
jns
xor
popf
sub
lret
xchg
and
in
in
pushf
out
in
aaa
pop
adc
ret
jbe
ja
orl
push
push
xchg
insb
pop
lods
mov
mov
cli
inc
pop
and
mov
pop
stc
jg
dec
dec
sbb
test
sbb
push
jle
jle
dec
scas
pop
test
shrb
pop
ljmp
xchg
sbb
or
negl
cmpsl
scas
mov
cli
stos
xor
and
ja
lcall
jle
in
xor
jne
adc
dec
push
dec
mov
pop
inc
cmpsb
imulb
stos
push
xor
and
repnz
push
dec
pop
inc
in
sbb
jb
push
xor
cmp
cmp
xchg
mov
loopne
iret
ret
push
cmpsl
fisttpll
repnz
clc
cmc
dec
scas
pop
xchg
adc
fnsave
cmp
push
in
xlat
pop
lret
xchg
stc
xchg
popf
mov
andb
sbb
pushl
mul
inc
shl
shll
pop
std
sub
mov
stos
lret
mov
mov
rclb
test
aad
out
inc
or
push
mov
sbb
loopne
add
sbb
xor
and
xor
sahf
fisubl
jno
repz
cmp
movsl
add
xor
pop
mov
fwait
pop
popa
and
in
push
addr16
cmp
fimuls
call
stos
sbb
repz
push
cmpb
test
clc
push
les
adc
rol
js
dec
xchg
lret
dec
jg
aas
fcom
mov
rcl
push
daa
jbe
and
push
std
mov
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
pop
jg
mov
int
adc
dec
lods
jbe
push
sub
popa
pop
pop
pop
sbb
sbb
dec
sbb
addr16
dec
sbb
out
sub
mov
stos
inc
push
dec
mov
mov
or
jb
mov
mov
sbb
jmp
lods
pop
mov
outsl
out
sahf
rcl
hlt
add
lcall
call
test
imul
daa
stos
xlat
pop
dec
test
fsubrl
xor
cmp
fmuls
pop
and
dec
pop
out
jmp
jo
popa
pop
or
ret
rcl
call
mov
inc
es
insl
jp
dec
push
xchg
lods
mov
add
sub
std
cld
jle
cmc
ret
xor
xchg
adc
mov
mov
test
dec
xor
cmp
dec
adc
fistl
push
pop
inc
cmc
inc
out
fs
shlb
mov
xor
dec
cmp
rcll
int3
mov
pop
aas
int
cli
pop
orl
sahf
pop
inc
jae
in
shrl
in
maxps
orl
sub
cli
sbb
divl
insl
fwait
push
add
mul
shll
xchg
loope
xor
add
pop
cmpsl
mov
cmp
gs
mov
insl
jp
ljmp
sub
fdivrl
mov
aad
adc
rcll
sbbl
stc
adc
je
mov
mov
cmp
xchg
test
nop
test
inc
xchg
inc
or
fcompl
xchg
sub
fcmovnb
fildll
pusha
popf
enter
insb
sub
xchg
pop
stos
or
fwait
pop
sub
aaa
mov
sbb
fisubrl
shlb
pop
mov
aad
push
sbb
dec
sbb
mov
jne
loope
and
and
sub
outsl
add
shll
les
inc
outsb
mov
sub
cmpsb
add
std
and
mov
cmc
dec
sub
mov
insl
popa
mov
mov
jg
or
ss
push
jno
push
inc
mov
lea
out
into
jae
imul
aam
add
ljmp
jmp
cmp
daa
daa
bound
xor
rcll
adc
out
push
lahf
imul
xor
jae
mov
rcr
pusha
lret
lretw
cmp
hlt
repz
sub
fwait
sbb
sub
andl
mov
and
xor
dec
sub
dec
cltd
xor
inc
adc
push
fidivs
jae
ret
mov
sbb
sub
in
adc
inc
mov
scas
lret
xchg
iret
cmpsl
push
push
xor
lods
ja
out
stos
jne
aam
std
in
lods
mov
sbb
cmp
in
cmp
jnp
imul
scas
mov
jmp
fisttps
lahf
out
jecxz
fstpl
sarb
jmp
push
mov
push
jnp
ss
mov
lret
aam
daa
fistl
adc
mov
mov
and
mov
push
lret
cmc
mov
xchg
xchg
gs
lea
xchg
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
dec
add
js
les
adc
adc
adc
cltd
hlt
filds
add
rol
lock
pop
xor
mov
fimull
lods
mov
xchg
sbb
xor
sbb
into
js
sub
xchg
clc
xor
repnz
loop
std
push
mov
xchg
call
mov
pop
lods
lods
daa
push
mov
mov
in
cld
insb
xchg
mov
sub
insb
inc
rolb
mov
lahf
fmull
int
mov
sub
adc
int
movsl
js
cld
push
jo
daa
cmp
fwait
enter
adc
mov
int3
xchg
js
outsl
push
mov
mov
jmp
addr16
cmp
imul
lret
sti
dec
cwtl
and
push
das
fldenv
jo
jno
jnp
dec
adc
out
movsl
sbb
imul
in
iret
in
out
sub
popl
dec
xchg
push
ljmp
xchg
fdivr
jns
mov
xor
push
add
or
cli
lods
rorl
cld
or
int3
or
push
lods
scas
lret
cwtl
in
fs
pop
sbbl
jge
fbstp
rcrl
cmp
repz
sub
rorb
lods
shll
fcomi
jmp
fcomps
bound
in
pop
arpl
pop
adc
pop
lock
out
fsubs
xchg
add
mov
test
rcrb
inc
jno
fldcw
mov
aam
push
xlat
dec
fisubs
push
add
addr16
mov
xchg
repnz
stc
addr16
jmp
inc
fsubp
push
stos
mov
adc
sub
inc
aaa
roll
andb
xchg
test
mov
mov
sub
dec
rorb
pop
call
sahf
subb
mov
stc
es
mov
jle
imul
and
inc
testb
icebp
addr16
outsb
stc
outsl
fidivrl
sbb
comiss
inc
sti
loope
lods
dec
pop
push
fsubrs
js
and
and
dec
inc
ss
addr16
push
test
ss
dec
pop
rcrb
lret
pushf
add
push
je
lret
call
add
push
mov
stc
fwait
js
jne
cmp
pop
fldenv
sub
add
pop
xchg
movsl
mov
or
icebp
inc
cmpl
fwait
ds
adc
sbb
sahf
inc
cmp
loop
pushf
mov
scas
cmp
push
lock
ja
inc
enter
push
pop
adc
aas
test
int3
std
jecxz
push
xchg
or
xchg
add
dec
sub
ss
jne
pop
cld
insb
js
adc
xchg
mov
int
sub
sbb
aaa
sbb
rorl
pop
fs
lods
or
add
addr16
out
loope
test
bound
js
ljmp
jns
imul
and
mov
fsubrs
mov
adc
mov
dec
push
add
fsubrs
mov
dec
jl
ja
cmc
pushf
das
imul
adc
stos
hlt
imul
outsl
insl
jno
or
roll
shlb
mov
inc
mov
rol
pop
les
dec
mov
aas
push
push
or
ja
push
push
int3
mov
xlat
les
outsl
repz
pop
or
adc
push
gs
mov
push
push
aam
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
mov
test
fwait
ret
int
adc
pop
mov
jecxz
fidivs
or
dec
fmuls
mov
push
pop
test
jo
mov
and
repz
adc
mov
mov
lods
push
cltd
inc
and
xor
jle
add
iret
add
stos
add
ds
dec
gs
pop
sarl
cmp
repnz
mov
js
lcall
sub
out
mov
outsl
dec
adc
add
icebp
sbb
cmp
fidivl
jae
xor
mov
in
gs
test
mov
andb
adc
out
dec
stc
inc
xchg
jg
cmp
sbb
mov
dec
jg
pop
add
insb
lods
ret
sub
cmp
jecxz
sbb
mov
test
fwait
mov
cli
rcll
sub
ss
aad
mov
adc
inc
fsubs
jge
aas
into
xchg
insl
or
movsl
cmp
fcoms
pop
int3
pop
lds
sbb
jg
insl
sub
out
je
mov
pop
push
dec
lods
ret
movsl
es
pusha
scas
cmp
sub
movsl
leave
or
mov
and
arpl
xor
or
xor
mov
sub
inc
push
inc
sahf
push
out
mov
sbb
jmp
cmp
push
pop
mov
mov
sbb
daa
push
stos
sahf
pop
jb
pop
add
xchg
or
pop
dec
jg
mov
lock
or
jb
add
pop
lret
mov
sub
cmp
ds
int3
inc
shlb
movsb
bound
mov
add
arpl
jbe
das
sbb
cs
xor
and
xorb
popf
ret
mov
cmp
mov
scas
shr
repnz
mov
pop
js
xor
jg
lret
shrl
std
movsb
pop
mov
into
inc
imul
or
adc
lock
loope
sbb
mov
call
inc
cli
stc
sbb
ds
push
ja
fwait
push
jbe
out
mov
shrl
stc
inc
adc
imul
adc
inc
sub
jge
and
add
pop
pop
pop
jecxz
or
daa
or
xor
ret
and
xor
daa
stos
shl
sbb
pop
mov
pop
xor
and
sub
cmp
jnp
popa
or
jg
xor
and
lret
cmp
dec
xchg
pusha
xor
shll
mov
or
shlb
mov
mov
inc
xchg
pusha
pop
and
jecxz
dec
dec
add
divl
fs
mov
movsl
or
dec
push
lods
mov
inc
imul
sbb
stos
aad
cmpsl
lds
arpl
mov
xor
dec
orb
in
test
mov
cmp
test
cltd
cmp
lcall
es
loop
inc
das
roll
pop
lods
mov
pop
lods
push
inc
mov
sar
xor
inc
arpl
loop
mov
adc
dec
push
push
mov
sahf
push
ja
dec
xor
repnz
cmp
jno
addr16
popf
jge
mov
fiaddl
loope
mov
dec
sbb
int
rorl
sbb
dec
insb
push
mov
scas
add
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
stos
fdivrs
int
adc
test
cld
ljmp
insl
or
loopne
fs
daa
add
pop
ss
hlt
je
mov
stc
mov
xchg
inc
push
jno
adc
xchg
pop
outsl
testb
lock
xorb
insl
out
lock
arpl
bound
pop
sub
movsl
andl
cmp
sarl
cmp
push
lds
out
xchg
repnz
cmp
jbe
lds
pop
rolb
insl
rorb
sub
mov
sub
pop
xor
in
xchg
lds
lds
dec
pop
rcrl
add
inc
aas
loopne
mov
cmpl
imul
and
rclb
lods
mov
jmp
out
mov
jno
push
cmp
sbb
mov
mov
pop
sub
fs
mov
push
nop
shrb
and
dec
adc
mov
mov
sbb
test
pop
ja
jne
out
rcl
xchg
outsb
sub
cli
rcll
dec
push
ret
mov
jo
sahf
js
mov
inc
cmp
cmpsb
mov
push
sub
mov
aaa
pop
test
stos
and
cmpsl
push
fwait
dec
cwtl
cmp
cs
arpl
push
cmp
or
and
mov
mov
data16
fistl
add
push
sbb
sub
mov
sarl
leave
outsb
out
push
mov
mov
mov
std
rclb
and
in
push
sub
repnz
or
xchg
dec
out
push
jbe
jp
scas
je
dec
aas
push
adc
js
loopne
push
pop
arpl
cmpsl
mov
jg
shrl
xor
mov
and
adc
aaa
jne
xchg
adc
fdiv
push
pop
mov
pop
or
mov
sbbb
imul
dec
das
outsl
sbb
ss
or
in
cld
mov
adc
mov
pushf
xlat
jp
push
mov
fiaddl
jl
loope
and
pextrw
cmp
mov
pop
mov
mov
cmovge
add
in
jo
ja
jp
lahf
outsb
mov
stc
mov
cs
pop
lods
add
xor
sbb
scas
xor
cli
mov
imul
mov
mov
jb
popa
jge
adc
adc
jp
cwtl
out
xor
out
imul
sub
jns
add
or
mov
xor
insl
add
leave
hlt
mov
cmpsb
out
ds
leave
cvtpi2ps
or
lret
test
ret
insl
lahf
les
xchg
mov
jge
and
cmp
insl
push
push
bound
dec
filds
pushf
imul
popa
mov
dec
ds
cmp
sbb
or
je
testl
cmpsl
mov
xor
xchg
dec
lret
scas
cmp
test
sbb
pop
mov
dec
sub
xchg
int
mov
mov
jne
pop
push
cmp
push
repnz
iret
sbb
fs
ret
push
jbe
adc
mov
mov
fnstenv
xchg
push
xor
push
mov
es
push
dec
cmp
movsb
adc
test
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
nop
push
jle,pn
mov
adc
adc
adc
inc
shl
sub
loopne
repnz
add
sbb
sub
and
mov
mov
ljmp
icebp
fsubs
mov
xor
xchg
sub
add
xlat
scas
in
and
adc
pop
jg
out
pmaddwd
in
cmc
test
xchg
incl
xchg
ds
xor
add
jb
xor
jno
cmp
push
jb
sbb
inc
xlat
adc
add
out
idivb
repnz
clc
mov
xlat
xchg
ja
mov
ljmp
mov
test
xadd
cli
xchg
or
mov
adc
jmp
xchg
insb
pushf
adc
adc
loope
std
cmp
loop
push
es
negl
adc
dec
mov
lret
in
add
data16
cmp
pop
cmp
mov
pop
loop
popf
add
xor
xchg
in
les
push
xor
jns
roll
push
dec
xor
inc
cmp
ja
stos
mov
daa
jle
hlt
mov
or
sbb
adc
pop
jp
rcrb
out
mov
out
mov
xlat
push
sub
movsl
in
xchg
and
mov
enter
imul
inc
dec
inc
and
mov
mov
xchg
les
inc
sub
pop
dec
mov
and
insl
jp
fdivs
and
stos
xor
xchg
aam
push
sti
mov
inc
jnp
push
xchg
andb
out
sti
add
xchg
scas
adc
mov
mov
fisubrs
jmp
push
enter
int
cwtl
jecxz
enter
test
out
repnz
sub
pop
inc
sti
add
imul
pop
inc
ss
adcl
and
shrl
and
andl
lcall
jp
rdmsr
test
mov
jmp
out
sbb
xlat
lcall
inc
and
xlat
adc
jnp
shll
dec
notb
into
test
clc
mov
jae
xor
lcall
fcmovnb
add
pop
call
sub
push
mov
sbb
mov
sub
dec
jecxz
sbb
push
jno
mov
sbb
fstp
inc
mov
xor
shll
mov
stos
enter
test
nop
adc
xchg
add
outsb
push
enter
jnp
lods
mov
mov
pop
les
aad
cld
loopne
sbbl
cs
push
roll
lods
push
out
into
xor
xchg
fbstp
hlt
mov
fnstsw
ficoml
sub
std
push
imul
hlt
and
lods
cmp
rol
xor
cld
mov
jecxz
outsl
adc
xchg
leave
adc
cmp
push
adc
incb
popa
pop
jno
push
jno
xchg
dec
dec
ljmp
mov
xor
jae
mov
mov
sub
or
mov
and
sub
seta
je
push
loope
popfw
outsb
test
mov
daa
cmp
dec
jb
jbe
and
cwtl
add
imul
sahf
inc
xchg
cwtl
popf
sub
mov
push
ds
sbbl
mov
lods
loope
nop
add
addr16
fisubrl
or
inc
cwtl
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
push
lods
shrl
adc
xchg
adc
xchg
mov
arpl
imul
mov
nop
sub
mov
in
xlat
aaa
cmp
leave
mov
and
std
or
pushf
xor
cmp
shlw
or
imul
out
and
inc
fisubs
mov
inc
dec
xchg
inc
shlb
adc
cmp
mov
inc
push
mov
lods
inc
inc
add
mov
adc
cwtl
inc
pushf
mov
ja
mov
push
out
mov
xor
in
cmpsl
sub
push
or
jns
push
aad
bound
lea
xchg
sbb
orb
aad
stos
popf
popa
pusha
push
inc
fistps
stos
pusha
jnp
loope
stos
add
pop
fldl
push
addb
std
mov
mov
jns
xlat
xchg
mov
out
pop
dec
std
aas
loop
mov
cli
iret
iret
sbb
push
clc
xchg
pop
mov
lods
test
push
dec
mov
jo
jmp
pushf
xorl
mov
inc
jne
sbbb
sub
ss
enter
and
je
adc
cmp
lret
xor
mov
popf
or
imul
clc
lods
leave
mov
std
xlat
inc
out
pop
xor
or
adc
out
add
inc
hlt
cmp
push
lret
shlb
leave
inc
lret
xor
inc
mov
aaa
xor
and
sbb
cmp
sbb
popf
xorl
mov
sbb
pushf
in
nop
rorb
xchg
pop
dec
and
jl
hlt
pop
lahf
stos
lret
mov
sbb
cmpsb
addr16
int3
push
pop
push
sbb
pop
mov
int
jae
adc
test
jecxz
dec
or
xlat
xchg
jno
cmp
adc
mov
cmp
ss
divl
pop
cli
lods
inc
mov
jmp
mov
xchg
fs
inc
push
imulb
mov
add
push
sbb
lret
mov
and
or
insl
movsb
out
sub
fdivrs
es
fiadds
popa
jg
in
add
ds
cmpsb
movsb
mov
mov
movsb
ret
xor
enter
aas
dec
das
jle
movsl
sbb
lea
inc
dec
and
mov
jae
adcl
cmovne
sbb
je
xlat
sarb
sbb
mov
sub
movsl
adc
adc
sbbl
les
dec
loope
sub
jnp
push
cs
incb
jp
cmp
mov
dec
les
dec
lods
cmpsb
je
mov
adc
stos
mov
mov
inc
pushf
cmpsl
mov
pusha
fwait
popf
rcl
out
jge
push
bound
gs
lret
call
pop
xchg
and
shlb
shlb
in
pop
jns
nop
outsl
fwait
jns
sbb
jae
jg
clc
cmp
pop
movsb
js
jmp
lret
lea
push
cmpsb
dec
daa
out
test
popf
repnz
mov
filds
xchg
jb
mov
pop
stos
lds
cmp
std
push
jg
xlat
jo
sub
fldcw
test
test
mov
movsl
mov
shll
into
cli
jge
mov
jb
rcll
imul
dec
jg
mov
mov
xor
cmp
in
xor
pop
test
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
push
mov
adc
mov
mov
cmpsl
xchg
cmpsl
jle
mov
ds
les
sti
adc
int
icebp
rorl
dec
inc
int
pop
mov
inc
testb
mov
jp
dec
push
aad
aaa
and
fs
cmp
in
sarl
imul
jb
sub
or
js
lret
mov
pop
mov
mov
andl
mov
jl
jecxz
insl
xlat
outsl
cmp
mulb
sub
jbe
movb
mov
jge
and
in
popl
cmpsb
movsl
mov
leave
fildll
xor
or
test
scas
aad
mov
fadds
mov
fnsave
inc
pop
pop
dec
sti
xchg
popf
popf
ja
rcll
roll
push
mov
aad
push
rcl
inc
sbb
mov
cs
nop
inc
mov
push
out
popa
loopne
in
inc
outsl
sbb
mov
dec
cmp
cmp
lcall
add
cmp
lahf
stos
inc
push
xchg
iret
sarl
mov
mov
adcl
xchg
cmp
cmpl
adc
sub
cld
enter
clc
cmp
stos
push
inc
inc
movsl
popa
cmc
sub
pushf
cmp
clc
and
cmp
adc
cltd
push
popa
cli
push
sbb
in
jle
mov
call
pop
mov
cmp
mov
stos
jl
ret
cmp
xor
test
push
inc
loop
add
mov
insb
jge
fildl
jecxz
sbb
sbb
dec
cmp
and
inc
into
dec
xchg
inc
add
jecxz
dec
loopne
fadds
push
popa
imul
sbb
testl
mov
roll
jbe
orl
test
lcall
xor
outsb
std
adc
jp
pop
pop
call
add
lret
cmp
mov
cli
push
cmp
add
sahf
cld
jle
les
daa
push
dec
xchg
sbb
fistl
pop
mov
cmp
aas
pop
xchg
sub
inc
mov
inc
add
pop
rolb
and
test
insl
test
xchg
xchg
hlt
lret
xor
and
sub
mov
cwtl
dec
lahf
loop
xchg
daa
mov
loopne
dec
or
jo
je
xor
out
fistl
or
mov
int
imull
inc
pop
dec
les
ficoml
ds
adc
shrl
fsubl
orl
ficomps
mov
inc
inc
cmp
jae
cwtl
sbb
call
cltd
seta
lds
pop
mov
or
dec
inc
mov
out
mov
ds
mov
jae
sti
out
ja
arpl
sahf
pop
sbb
mov
jl
subb
push
and
or
jmp
jmp
add
jecxz
xor
mov
insb
fmull
xchg
or
les
mov
push
mull
pop
addl
dec
dec
xchg
test
loop
add
shll
cmp
in
xlat
in
scas
adc
jge
push
addr16
jnp
cmp
add
pop
inc
cwtl
lcall
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
je
mov
int
adc
aaa
pop
jb
push
pop
sbb
dec
push
mov
mov
add
sarb
mull
mov
fsubs
xchg
sti
cld
es
xor
in
cmp
aas
int
mov
add
fs
sub
rcr
lea
sub
mov
sbb
add
push
scas
out
jmp
fisttpl
aaa
jno
das
sbb
rcll
xchg
nop
mov
insb
outsl
daa
repnz
lds
sbb
jle
scas
icebp
dec
pop
jp
hlt
mov
aad
and
and
xor
or
push
fwait
sbb
xchg
adc
cwtl
jg
adc
sbb
js
cmpsb
mov
loope
imul
lahf
jbe
pop
test
mov
fimuls
mov
in
add
adc
mov
adc
shrb
and
movsl
inc
ret
adc
testl
loope
pop
ja
add
jmp
pop
jecxz
data16
sbb
sbb
jns
outsb
cld
pop
jmp
sbb
es
loopne
sub
in
pop
pop
sub
cmp
movsl
cld
les
or
lods
int
dec
scas
shl
movsb
mov
sub
jne
scas
aas
sti
or
jne
cmp
inc
subl
push
jg
stos
lock
add
fsubr
clc
dec
outsl
in
das
scas
dec
lret
fnstenv
push
std
mov
sbb
hlt
imul
mov
fidivs
inc
add
test
enter
call
insl
push
fistps
mov
loop,pt
decb
jecxz
cmp
in
xlat
adc
dec
ror
mov
mov
mov
push
sahf
add
cmp
sub
aam
xchg
push
cld
out
int
fwait
jo
xchg
imul
stc
negb
jecxz
aas
mov
pop
arpl
cmc
and
je
ljmp
imul
hlt
mov
jns
ss
std
push
and
mov
mov
pop
inc
sahf
decb
inc
inc
dec
popa
call
ret
outsb
mov
sub
xchg
sbb
cmp
lret
sbb
mov
decl
xchg
sbb
xchg
dec
test
pop
test
push
aam
xchg
jo
imul
std
hlt
sbb
mov
push
inc
mov
sub
dec
negb
in
stos
adc
pushf
mov
xchg
xchg
addr16
adc
push
add
xor
sbb
aad
arpl
adc
stc
sub
cmp
filds
jno
cmpsb
push
ret
jo
repnz
insl
fbld
jp
pop
mov
mov
aas
inc
sbb
daa
mov
scas
jl
sbb
push
sub
andl
xor
aas
pusha
xchg
add
sti
outsl
pop
nop
xor
sahf
insb
mov
jge
lea
pop
mov
push
out
mov
pop
inc
adc
push
in
xchg
pop
push
adc
push
fsubs
pop
imul
dec
scas
scas
dec
pop
mov
and
push
mov
pushf
sbb
mov
mov
repz
sbb
loopne
and
dec
mov
leave
xor
add
xor
fdivrs
subl
jp
andb
sarl
test
adc
or
xor
sub
pop
pop
cld
imul
xchg
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
pop
push
xorb
ljmp
loope
dec
insb
icebp
xchg
aad
out
das
xchg
fsubr
inc
pop
sti
add
sub
pop
int
fstpt
enter
scas
icebp
sbb
add
stos
lea
sbbb
xchg
cmp
pop
jge
add
pop
push
frstor
pop
mov
jbe
add
push
push
adc
sti
jnp
popf
lahf
xchg
cmpsl
jb
scas
js
jmp
jmp
stos
insl
pop
jmp
aaa
pop
test
das
int3
push
daa
lds
xor
mov
js
sbb
scas
fstl
cmpsb
syscall
lods
cmc
out
ss
das
int3
xchg
mov
sub
cmp
cmp
mov
push
sbb
sbb
and
out
xor
cmp
push
mov
push
scas
dec
in
jne
xlat
inc
leave
sti
lods
test
jnp
cs
arpl
push
popa
cmp
push
push
and
mov
and
mov
lret
sub
jne
shlb
cmp
xor
add
ljmp
rcll
push
mov
dec
daa
sub
xor
xchg
mov
ja
cmp
inc
push
rol
xchg
shlb
xor
out
outsl
lods
sahf
es
imulb
test
or
insb
incb
mov
insb
jnp
sahf
inc
cli
mov
xchg
add
cmp
dec
shl
sar
rorb
and
adc
xor
mov
mov
gs
push
scas
or
add
xchg
lret
and
and
vprotd
rcr
sbb
test
mov
mov
ja
pop
cmpsb
sub
lea
mov
les
sbb
cmp
lods
jnp
inc
stc
pop
and
enter
imul
cmc
outsl
jbe
xor
lods
icebp
insl
sub
sbbb
sbb
leavew
dec
or
add
fbstp
mov
mov
inc
rolb
test
popa
dec
decb
mov
cmc
inc
ret
dec
and
cld
iret
mov
or
xor
dec
jle
xor
xchg
jns
xchg
jne
mov
lahf
xor
mov
xchg
sbb
in
add
xorb
pop
xchg
jmp
leave
lds
rorl
shrb
ss
test
or
addb
adc
outsb
xor
pop
mov
cmpb
mov
dec
inc
jbe
in
bound
sub
lock
or
mov
jno
cmp
aas
mov
xchg
dec
add
or
loope
cmp
adc
fsubrl
fdivrs
lods
add
movsb
movsb
faddp
dec
scas
pushf
dec
pop
test
xchg
adc
movd
mov
pop
std
clc
push
popf
adc
jle
push
call
movsl
in
pop
pop
ja
stos
inc
adc
push
rcl
mov
rol
fldl
add
adc
inc
add
outsl
jge
lahf
and
fistps
stc
push
cmpsb
lods
test
mov
fists
inc
cltd
loopne
xchg
pop
mov
push
sub
in
jne
out
jae
les
cltd
jmp
inc
mov
aad
sub
out
dec
mov
shrl
cmp
mov
mov
push
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
icebp
stos
lcall
adc
push
mov
std
loopne
xorb
xchg
aad
cs
mov
pop
movsl
pop
dec
sub
subl
jg
repnz
call
or
popf
popa
loope
lcall
lahf
add
mov
inc
repz
mov
scas
mov
es
xor
or
xorb
divb
pop
cli
dec
cmp
sbb
out
ret
sbb
daa
ret
in
aaa
mov
or
loop
cmp
pop
push
lret
lcall
pop
test
leave
inc
mov
sub
sub
in
dec
lret
adc
mov
dec
fdivrl
and
leave
repnz
sub
xchg
int
aam
outsl
gs
outsb
inc
ss
and
out
or
and
out
lods
pop
out
out
or
push
inc
popf
out
loope
cli
xor
daa
xchg
fnclex
sti
jmp
dec
in
std
cltd
jp
dec
push
icebp
xchg
cmp
xchg
or
pop
jae
lret
iret
outsb
stos
sahf
or
cwtl
inc
cmpsl
push
out
dec
jle
fs
jge
dec
jae
sti
aam
imul
push
fwait
loop
adc
add
dec
nop
xor
jmp
stos
lods
lock
and
movsb
inc
in
pop
int
pop
stos
aas
push
nop
cmp
xchg
loop
mov
addr16
jns
cwtl
pusha
fadd
idivb
out
and
push
hlt
adc
adc
push
mov
push
inc
fldenv
fsubrs
push
cltd
and
mov
mov
pop
test
fst
mov
cltd
mov
sub
xor
mov
mov
jbe
xor
push
mov
cltd
loope
inc
jbe
sti
mov
ret
movsb
enter
fcomps
icebp
adc
mov
push
lea
jno
cmpb
pop
cwtl
sbb
pop
repnz
lea
inc
inc
fstpt
mov
pop
aad
int
ja
scas
cmp
xor
mov
shl
cli
mov
and
smsw
fldt
push
dec
aas
lahf
and
js,pt
inc
outsl
mov
insb
loop
xchg
push
icebp
mov
xor
icebp
aad
mov
nop
push
sub
nop
fcompl
push
lods
loopne
sti
and
sub
mov
jmp
jnp
out
aam
rcl
aaa
mov
dec
call
xor
movsb
xchg
add
push
ljmp
jne
inc
or
lock
pop
ja
iret
in
decl
ds
in
test
jb
decb
cltd
push
fld
push
mov
ljmp
mov
roll
push
fistpll
lret
es
pop
push
jp
jge
inc
loop
and
inc
inc
cli
ret
js
push
dec
sti
push
mov
xchg
and
push
xor
sub
push
sbb
jg
sti
inc
out
sbb
imul
push
or
push
popf
cmp
enter
push
jmp
cld
mov
xchg
fisubl
mov
xchg
nop
rorl
loop
int3
cmp
js
pop
adc
sbb
sti
lcall
pop
in
jge
mov
mov
rcrb
movsb
aaa
dec
out
pop
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
subl
dec
test
adc
adc
adc
cld
outsl
outsb
cmp
insl
in
cli
test
rorl
jge
scas
xor
sub
dec
repz
ds
sbb
xchg
adc
popa
jge
aas
add
sub
sbb
icebp
pop
sub
and
dec
mov
fdivrl
add
push
cmpsl
icebp
mov
fwait
das
jmp
and
aad
in
bound
out
aam
arpl
inc
mov
std
xchg
das
fcompl
pop
hlt
push
pop
push
ss
sub
loop
in
lret
jle
in
stos
dec
sub
xlat
aas
add
push
xor
inc
aaa
mov
or
test
sub
mov
outsb
mov
or
outsb
adcl
push
sbb
dec
inc
mov
das
sbb
pop
in
push
sbb
jno
in
lcall
mov
jge
adc
cs
test
test
shl
mov
shrb
dec
inc
dec
cmpsb
xchg
cld
aaa
or
loope
test
fistps
jb
push
cmpsb
dec
push
rcrl
lds
mov
jge
sbb
mov
inc
leave
mov
aam
in
orl
pop
or
mov
in
dec
mov
mov
pop
mov
mov
rcl
cmpsl
pop
dec
jmp
inc
mov
dec
sub
xor
divl
cs
subl
scas
xchg
repnz
mov
pop
js
add
dec
xchg
push
lea
xor
icebp
fwait
leave
or
jno
push
dec
or
sbb
push
pop
ja
pop
inc
inc
aaa
imul
aam
inc
sub
add
subl
jg
pop
dec
jb
shlb
loop
and
jmp
xchg
push
jns
test
mov
inc
pop
scas
sbb
inc
sbb
fistps
aaa
aas
xlat
in
cmpsb
rol
sub
push
in
xor
add
xlat
test
jno
jp
pop
rolb
jb
dec
inc
and
add
in
jmp
bound
jo
fistps
xor
sub
mov
cmp
mov
sbb
push
movsl
icebp
mov
loopne
sbb
pusha
pop
mov
jne
imull
and
enter
mov
ds
ficoms
cmp
and
mov
fcoml
dec
sti
cmp
repz
testb
aam
cmpsb
adc
jne
roll
rorl
push
mull
ret
sbb
cmp
aaa
mov
lea
mov
cltd
aad
xor
notl
mov
mov
xchg
mov
and
popl
aad
cmpsl
add
add
jns
cmp
loop
rcl
repnz
mov
std
or
xorb
cld
xlat
repnz
cmp
jle
jmp
addr16
insb
hlt
xlat
push
xchg
xor
and
mov
or
frstor
mov
in
mov
popf
xchg
sbbl
mov
test
mov
ret
cs
xchg
mov
stos
pop
push
add
loop
loope
inc
bound
add
adc
adc
xor
mov
into
rcll
mov
ret
mov
cwtl
mov
shl
jge
clc
fcoms
cmp
sub
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
cmp
cmpb
adc
adc
out
or
mov
int
popf
mov
ja
cmp
insb
push
popa
lds
inc
pop
imul
jo
push
xor
dec
and
dec
les
mov
sub
cmpsb
test
xor
lds
push
mov
adc
and
xor
xchg
mov
cwtl
mov
mov
cmp
insl
mov
mov
ljmp
in
lods
or
xor
mov
sub
jle
in
jle
inc
sub
ficompl
cwtl
in
pop
add
out
and
std
xor
js
fistps
in
subb
xchg
idivl
push
or
outsb
and
mov
fsubrp
pop
dec
es
and
inc
rcrl
imul
jae
mov
jge
icebp
repz
clc
into
inc
into
out
arpl
sub
mov
inc
es
lret
sub
cmpsl
shrl
mov
pmaxub
rcl
inc
lea
enter
call
enter
iret
cmp
mov
mov
ss
mov
add
aaa
movsl
xchg
cwtl
adc
pop
adc
mov
xchg
mov
and
adc
js
ljmp
sarb
add
xchg
out
push
xor
data16
inc
outsb
cld
mov
xchg
icebp
pop
fdivrs
push
call
aaa
sbb
or
sbb
pop
jle
cmpsl
fnstcw
dec
sarb
sbb
dec
add
mov
sbb
sti
stos
cli
pop
js
inc
inc
pop
jp
inc
dec
mov
jl
adc
pop
ljmp
push
dec
cld
and
stos
push
mov
jbe
adc
fldenv
push
fs
push
sbb
pop
dec
das
bound
or
jae
mov
in
and
push
cmp
popl
jo
adc
loope
xor
out
cmp
aam
sbb
add
fidivl
cli
fiaddl
mov
js
ret
pop
push
jns
pop
js
pop
jae
xchg
sbb
shll
imul
cli
addr16
jecxz
or
sbb
sbb
aas
inc
js
xchg
test
ss
sub
leave
fbstp
push
xor
imul
mov
ret
repnz
shll
xchg
xchg
popl
jb
lahf
sbb
sub
mov
sbb
adc
bound
into
mov
jmp
jae
movsl
xorb
adc
insb
ss
insb
add
stos
lea
fs
popa
stos
lret
cmc
scas
xchg
xchg
in
popa
imul
popa
xchg
pop
inc
push
sbb
mov
sub
mov
loop
es
cmp
mov
jg
sar
frstor
cmpsl
xor
mov
adcl
dec
in
xor
roll
pop
scas
xchg
add
test
mov
inc
ljmp
lret
icebp
jl
add
mov
lock
test
push
push
sub
std
push
mov
mov
shl
call
stos
popa
xchg
xor
icebp
inc
pop
in
rclb
add
inc
orl
outsb
sub
xor
inc
sub
sub
cmp
inc
add
inc
call
xchg
cmpsb
ja
leave
mov
sub
push
mov
pop
xchg
nop
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
cs
ss
mov
adc
adc
add
push
xchg
repz
sbb
mov
dec
jle
ret
outsb
ja
dec
ret
xchg
mov
hlt
jno
push
rolb
jns
push
xchg
pop
add
xchg
pusha
xor
faddl
loopne
cmpsl
jecxz
jb
mov
cmpsb
mov
adc
inc
jne
inc
out
aas
out
in
xlat
fnstcw
inc
loopne
mov
pusha
push
lret
dec
in
in
addr16
mov
loope
repnz
pop
sbb
xor
aam
aaa
rcrl
fbstp
adc
and
pop
sbbl
fs
xor
inc
loope
loopne
mov
push
aaa
mov
ret
add
add
divl
adc
mov
mov
jg
stc
adc
pop
fsubr
sbb
xchg
lret
idiv
pop
push
stc
jbe
hlt
pop
cltd
stc
addr16
jmp
fnstcw
lods
mov
dec
repz
lret
imul
mov
pop
inc
dec
data16
mov
std
dec
xchg
xor
inc
sarl
loopne
push
push
movsb
andl
lahf
js
pop
jmp
cmp
pop
xor
adc
daa
lods
pop
mov
int3
cs
xchg
loopne
cld
fs
push
pop
xchg
jo
gs
and
mov
inc
enter
js
int
jns
sarl
jp
xchg
out
out
cmp
and
imul
dec
adc
shl
ljmp
dec
mov
or
sbb
int
insb
adc
jl
clc
mov
test
sub
adc
push
sahf
sahf
fildl
shlb
data16
mov
add
add
push
imulb
scas
sub
mov
es
ss
or
pop
outsb
imul
lds
sarl
rclb
out
jge
ret
sub
orl
add
addl
inc
ret
in
inc
outsl
dec
sub
addr16
push
hlt
inc
jae
iret
outsb
rcrb
daa
dec
jmp
loopne
cmp
inc
jg
jge
hlt
sahf
mov
mov
movsb
add
cmp
popf
mov
icebp
add
cmpsl
out
outsb
repnz
lret
mov
jl
jne
xchg
in
stos
nop
out
sahf
jb
lcall
and
sub
mov
cmp
das
in
mov
pop
daa
sbb
mov
add
test
pop
loop
inc
stos
fimuls
mov
stos
leave
lock
mov
std
movsb
loop
stos
popa
sahf
xlat
mov
je
lret
lods
or
scas
jo
daa
fld1
cmp
jno
icebp
lsl
or
lahf
gs
and
popf
lcall
sub
mov
pop
push
mov
call
add
mov
push
stos
jg
scas
sti
cmp
add
dec
cltd
push
ss
je
flds
adc
cmovp
sbb
shr
insb
sti
shlb
pop
cli
aaa
into
data16
stc
outsl
out
insl
dec
sub
cld
mov
test
fsubp
aas
xor
aaa
mov
xor
jne
iret
xchg
lea
inc
test
or
inc
add
fstpt
sahf
push
mov
add
stos
int3
xorl
inc
ds
push
sbb
mov
pop
adc
adc
and
add
test
dec
sbb
clc
arpl
in
mov
add
int3
xor
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
jge
push
jno
adc
int
adc
shrl
mov
push
fdivs
sbb
in
test
rdmsr
pop
rorb
mov
shlb
insl
rcl
mov
sbb
rcr
dec
adc
ss
pop
mov
push
cmc
mov
dec
jo
mov
or
shlb
shld
insb
jne
xchg
adc
test
mov
scas
add
outsl
mov
mov
int
pop
push
shll
pusha
pop
arpl
js
add
bound
fnstenv
pop
jne
daa
bound
add
std
pusha
dec
and
xor
mov
cwtl
lods
mov
jg
xchg
test
mov
in
shr
dec
mov
aas
cmp
or
sbb
or
imul
mov
fldenv
pop
xlat
pop
or
test
sbb
mov
mov
sub
popf
mov
incl
subw
mov
outsb
lds
iret
addl
push
xchg
sub
push
adc
int
lods
fadd
adc
iret
test
add
bnd
test
mov
sbbl
pop
xchg
adc
loop
loopne
cmpl
xchg
mov
adc
enter
mov
xorl
xchg
pop
jb
xchg
mov
lret
aaa
dec
outsl
pop
pop
xor
cmpsb
mov
mov
push
movsl
les
cli
out
pop
inc
test
mov
pop
cs
lret
leave
pop
pop
jbe
mov
gs
das
fs
inc
cld
pop
es
imul
hlt
mov
insb
mov
push
dec
dec
and
xchg
rclb
mov
popa
cmpsb
push
pop
mov
cwtl
aaa
or
sbb
daa
xor
and
call
xchg
movb
psllw
adc
or
in
int3
test
xchg
stos
adc
and
cwtl
xor
add
xchg
xchg
mov
fists
mov
sbb
jle
shrb
mov
das
cmp
int
and
mov
jns
cmpsl
mov
pusha
pop
add
gs
lret
out
adc
mov
cmp
stc
sbb
lods
dec
sub
mov
movsl
mov
sbbl
imul
test
imul
cmp
jle
or
xor
push
cmp
ss
loope
aaa
cwtl
test
mov
iret
popl
mov
repz
jb
test
aad
xor
mov
jb
je
adc
jg
and
int
jb
sub
leave
ret
decl
jp
pop
sub
shll
push
add
negb
lea
lock
cwtl
lahf
mov
pusha
pop
outsl
das
xchg
add
cmpsl
aad
daa
pop
aaa
mov
sub
inc
scas
cmp
xchg
xchg
pop
pop
push
ljmp
xchg
xor
xchg
dec
daa
les
insl
adc
xchg
cmp
dec
adc
inc
mov
sub
or
aas
test
insl
pop
lods
into
add
push
xor
and
andl
inc
rcrb
push
or
xor
ret
sbb
xchg
sti
movsl
test
popa
add
mov
rcr
test
movl
mov
leave
lcall
call
mov
mov
pop
xchg
lea
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
hlt
pop
pusha
js
push
adc
adc
adc
fstp
leave
fistl
stos
dec
mov
shlb
cmp
mov
mov
into
push
push
into
jb
and
adc
int3
inc
and
pop
cld
xor
js
subl
fs
xor
imul
mov
push
inc
sub
fwait
les
or
in
fs
orb
mov
xor
push
into
lods
into
xor
sbb
mov
xlat
mov
add
sar
jecxz
in
mov
ficompl
cmpsb
fnstsw
ja
xor
loopne
data16
mov
jle
pop
mov
stos
aaa
dec
inc
or
int3
call
mov
fsubrl
dec
mov
dec
push
repz
ret
pop
and
push
xchg
xor
mov
add
cmpl
gs
ja
pop
and
dec
addr16
dec
xchg
or
arpl
and
fs
mov
and
mov
sti
push
lcall
and
xchg
or
mov
add
xchg
rcrl
mov
mov
xor
sbb
jne
pop
fcomps
mov
jle
roll
arpl
imul
inc
int
jl
ss
xchg
sub
sbb
push
into
push
in
cmp
out
clc
mov
loopne
and
inc
sub
leave
adc
fisubrs
in
and
jo
rorb
out
cs
cmp
dec
dec
subl
out
iret
adcb
mov
mov
add
rcrl
cwtl
lods
stos
and
adc
xchg
scas
jg
leave
icebp
add
or
pop
sub
dec
pop
repnz
or
pop
notb
xchg
sti
pop
push
add
lods
add
mov
mov
arpl
or
mov
jle
xchg
mov
lea
jg,pt
sub
xor
subl
xchg
gs
enter
pushf
mov
xor
lcall
fs
movsl
inc
movl
inc
into
fildl
push
lahf
out
sbb
cmp
push
divb
stos
outsl
xchg
fldt
outsb
call
sub
nop
dec
pop
jecxz
sub
pcmpeqb
iret
mov
enter
xchg
lods
xchg
lcall
sub
inc
lahf
mov
aas
dec
add
push
xchg
aam
aaa
or
mov
stos
add
call
inc
scas
fsubs
das
or
sub
push
push
popa
stc
push
data16
xchg
mov
addr16
fldl
xlat
les
lret
lcall
jns
xor
pop
insl
jns
mov
and
dec
stc
filds
mov
repz
or
shrb
pop
xchg
dec
lcall
sbb
les
sbbb
jmp
jns
inc
adc
jl
repz
cwtl
mov
ljmp
push
push
or
pop
xchg
adc
mov
outsb
add
push
push
cltd
xchg
jle
mov
jo
cmc
test
popa
cmp
sub
cmp
test
out
imul
dec
dec
and
jns
out
jo
jo
aas
incl
jb
sbb
fidivs
mov
inc
jle
test
loopne
scas
fs
inc
adc
je
jmp
in
or
sbb
dec
jg
ss
sub
test
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
pop
sub
adc
adc
dec
jle
sbb
popa
add
in
fstl
mov
imul
lret
xchg
mov
inc
lods
adc
xchg
xchg
es
ss
jecxz
hlt
inc
cld
shrl
psrlw
and
sub
insb
jae
ljmp
dec
or
xor
pusha
test
stc
and
icebp
jo
dec
mov
je
sub
je
push
sti
cmp
mov
sbb
cmp
out
movsl
icebp
out
sub
dec
shll
call
xor
test
cmc
xor
lahf
stos
jg
outsl
std
loop
push
pop
and
je
scas
hlt
or
or
dec
dec
fdivr
outsb
xchg
gs
bound
inc
int3
daa
or
xchg
ret
pushf
push
out
adc
stos
push
jp
popa
jmp
or
out
xchg
mov
jnp
inc
mov
pushf
jbe
push
xchg
and
mov
gs
pop
lods
scas
sti
push
aad
lods
sub
int3
je
jno
ljmp
dec
dec
sti
and
test
dec
pop
adc
jmp
mov
fwait
sub
push
cld
call
cmp
pop
filds
aam
fcomps
pop
xor
fwait
mov
add
mov
jl
jne
ja
jns
js
jge
adc
ja
adc
jle
jecxz
adc
das
fwait
repz
mov
push
hlt
mov
test
fldcw
je
xchg
push
mov
dec
add
push
and
subl
mov
mov
or
sub
lret
sbb
loop
cmp
xchg
and
jp
and
inc
jmp
mov
outsb
mov
and
dec
mov
cmp
cmp
xchg
add
sub
daa
push
bound
mov
mov
fmuls
cmp
adc
lods
ljmp
imul
mov
add
sub
pop
movsb
jne
mov
scas
add
mov
push
das
shl
push
mov
inc
nop
push
or
inc
fsubs
jecxz
add
imul
lods
jnp
dec
sub
les
scas
out
add
xlat
mov
cld
xchg
pop
add
in
mov
shl
pop
cmp
push
nopl
sahf
sub
icebp
xchg
mov
push
xchg
mov
inc
jnp
and
movsl
inc
mov
add
inc
fsubrl
pop
push
mov
jmp
lock
scas
cmp
lret
clc
repz
push
outsb
sbb
lea
sub
nop
mov
cmc
ljmp
add
gs
loop
idivl
mov
jge
xchg
outsb
sbb
iret
sbb
or
shl
movsl
sbb
mov
sbb
or
imul
sbb
jnp
call
ljmp
or
xlat
mov
and
rcrb
inc
test
fstpl
jne
data16
cmovl
pop
add
xchg
mov
sbb
pop
mov
inc
mov
dec
cmp
pop
out
dec
xor
test
sub
in
nop
cmp
push
pop
sbb
aad
out
ret
int
jbe
cmp
dec
into
addr16
dec
push
mov
sbb
xor
nop
cs
xchg
add
sbb
jl
ds
scas
test
add
sub
popa
lret
arpl
lds
xchg
mov
jp
repnz
or
lret
pop
push
mov
jb
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
fsubs
adc
xor
adc
dec
and
xchg
popf
out
syscall
add
fcoms
dec
mov
cld
fistps
mov
imul
loop
mov
adc
sub
jecxz
inc
push
shll
cmpsb
ss
jmp
filds
mov
lea
loop
mov
shll
dec
enter
inc
sub
mov
outsl
sub
push
shrb
pop
jle
add
pop
push
mov
loop
add
or
int3
fldt
and
push
out
push
adc
jg
mov
hlt
ja
int
or
sub
mov
cmp
pop
xor
out
adc
mov
or
mov
adc
andl
jbe
add
aad
pop
shrl
mov
enter
mov
and
and
enter
fnstcw
dec
mov
in
mov
rcll
mov
mov
daa
insb
ja
jb
xchg
sbb
mov
in
sub
mov
scas
fimuls
test
mov
push
add
pextrw
sahf
push
fwait
imul
movsl
push
loope
add
loope
mov
mov
jb
fistpl
mov
loope
scas
lds
aas
test
int3
push
xlat
scas
rcrb
or
out
stos
jbe
and
dec
and
pop
cld
dec
adc
xchg
inc
les
inc
or
nop
pop
test
aad
push
mov
insl
loop
movl
scas
test
cmp
cwtl
shr
and
and
mov
in
movsl
jg
mov
cld
inc
pop
xchg
sti
sub
and
cmp
cmp
mov
xcrypt-ofb
cmpsl
test
sti
lods
xchg
movsb
test
xor
fists
push
out
adc
jmp
ljmp
pop
int3
outsb
ds
mov
dec
jo
out
push
dec
jcxz
ds
jae
add
jmp
xor
xchg
cmpl
or
cs
adc
jbe
aad
dec
pop
enter
stos
aam
scas
push
lret
cmc
cmp
push
stos
fldenv
movsl
out
mov
push
cmp
in
mov
or
push
sbb
leave
sub
mov
lea
cmp
ja
xor
mov
pop
enter
add
pop
push
call
movswl
repnz
andl
pop
sahf
push
push
sub
sti
pop
push
cltd
sbb
cli
inc
sbb
cld
pop
xor
push
jmp
xlat
push
push
xorl
rcl
cmpb
sarb
add
dec
dec
lods
dec
mov
and
sarb
jo
insl
ret
test
addb
and
in
sbb
repnz
jb
jl
sbb
ja
and
ret
cwtl
mov
jmp
jno
mov
pusha
lds
aas
and
adc
hlt
cmpsl
xchg
fmull
xchg
sbb
xchg
mov
dec
or
sbbl
fs
xor
sbb
dec
ljmp
push
pop
mov
dec
mov
or
or
xor
sub
arpl
inc
inc
mov
pushf
jmp
test
mov
push
dec
mov
sar
adc
call
pop
std
add
js
arpl
shrb
mov
xchg
dec
jae
pop
push
xchg
fstpt
std
sbb
sub
test
xchg
in
subb
bnd
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
and
adc
adc
adc
xor
loop
shr
or
jecxz
mov
cmpsl
add
and
insb
inc
je
and
mov
jnp
rcl
pop
push
jg
adc
fistpl
aaa
movsb
cltd
imul
jp
cld
mov
push
pop
sti
lcall
sar
nop
cmp
dec
sbb
int3
push
cmp
mov
shrl
mov
test
jecxz
fisttpll
mov
popa
mov
int3
mov
add
xchg
stos
xchg
adc
dec
and
mov
ljmp
fcoml
test
and
lea
test
add
inc
pusha
push
or
mov
in
xchg
shll
jnp
mov
inc
daa
mov
jmp
inc
cmc
ret
push
push
sbb
popa
and
pop
ds
mov
lea
sub
sti
sti
ss
sbb
xchg
into
jmp
jns
cmp
lock
adc
in
mov
and
mov
sbb
or
mov
jg
jo
rorb
push
je
adc
lcall
cmp
dec
and
cmp
push
mov
icebp
mov
lret
rorl
push
adc
push
push
ss
xlat
and
cltd
mov
adc
cld
cli
repnz
imul
jbe
repz
mov
out
ljmp
lods
lea
inc
in
aam
push
inc
push
xchg
stos
leave
pop
cmp
add
sbb
pop
add
dec
mull
dec
add
negb
outsb
add
lret
push
and
xchg
push
xlat
rol
push
add
and
xlat
fldcw
incb
into
xor
pop
stos
in
inc
out
aas
sbb
in
gs
addr16
mov
pop
mov
push
dec
incb
adc
inc
mov
jg
ret
sub
mov
and
pop
enter
adc
add
push
mov
out
sub
fidivs
xchg
pop
int
and
fcoml
cmpsl
cltd
loope,pt
test
aaa
mov
xor
mov
adc
jg
fdivp
pusha
cltd
into
jle
paddusb
xchg
icebp
aam
push
test
jno
and
xchg
jmp
pop
dec
fs
pop
sbb
xchg
mov
mov
cld
cli
pop
in
mov
or
push
inc
adc
sbb
xchg
adc
nop
into
mov
push
add
pop
push
notb
pop
daa
mov
inc
nop
inc
xchg
mov
rclb
adc
lahf
nop
xor
pushf
jge
das
test
add
inc
xor
add
cmpb
adc
cwtl
push
js
sahf
inc
mov
inc
push
adc
add
dec
jne
dec
icebp
out
jg
popa
ss
adc
addr16
vpcmpgtb
xchg
jmp
add
jl
pop
fstl
cmp
add
push
cli
mov
cmc
arpl
pop
mov
and
aam
adc
sbb
push
sbb
or
sti
fiaddl
fildl
mov
xchg
out
inc
xchg
pop
xor
enter
adc
cmpsb
inc
push
add
xchg
jbe
out
push
shl
push
outsb
daa
clc
fst
mov
adc
aaa
scas
es
dec
xor
pop
mov
lods
jp
ss
sti
push
movsb
das
push
test
pop
cltd
sti
mov
mov
xchg
call
sbb
jmp
xchg
ficoml
inc
aam
adc
std
daa
and
imul
aaa
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
add
adc
adc
adc
shlb
xor
pop
cmp
mov
daa
push
mov
cmp
out
or
cltd
repz
aad
add
pop
imul
sub
jecxz
lds
scas
cmp
adc
outsb
xor
adc
test
enter
arpl
dec
mov
inc
sub
rcrl
jg
pop
outsl
cmp
xchg
mov
mov
pushf
test
dec
or
or
movsb
inc
mov
test
mov
jp
insb
pop
out
jno
dec
nop
enter
scas
adcl
jp
and
fcmovbe
test
cmp
mov
add
or
xchg
sub
jno
jmp
jae
ds
jns
insb
lds
adc
fimull
push
adc
or
stos
idivb
jecxz
lods
mov
mov
and
mov
repz
sbb
je
dec
jp,pn
and
xchg
ja
mov
jg
mov
cmp
mov
lods
sti
lods
mov
imul
jns
sbb
push
repz
js
fwait
ret
mov
punpckhdq
test
popa
or
test
rol
cmp
rorb
sub
pusha
inc
sub
push
fadds
rcrl
imul
sub
stos
loopne
mov
add
xchg
mov
jl
xchg
out
mov
in
jge
jmp
lret
bound
fsubr
or
jnp
sub
mov
mov
pop
cwtl
loopne
mov
stc
push
add
pop
or
cmp
ret
xchg
test
orl
pop
push
ret
inc
mov
jno
cli
or
sbb
wbinvd
bound
stc
dec
das
mov
aaa
pop
pop
xchg
testl
loopne
shrb
push
fcoml
imul
test
xchg
mov
pop
stc
repnz
pop
cld
imul
mov
addl
add
add
push
aad
dec
psrlw
sbb
inc
nop
dec
or
js
aaa
cmp
mov
mov
jae
sub
cmp
fwait
test
mov
lea
cwtl
call
hlt
sub
push
leave
mov
jns
jmp
insl
add
pop
mov
int
mov
mov
lock
sbb
cmp
rol
fildll
inc
repz
and
stos
pop
sub
and
es
ficoms
and
fadds
jl
call
push
mov
popa
mov
stos
inc
inc
subb
push
into
leave
pushf
cld
jo
mov
xchg
fdivl
lahf
jge
pop
fdivs
push
stos
in
ret
jge
in
ja
pop
cmpl
popa
test
sub
xchg
pop
movsl
in
scas
add
cmp
inc
jecxz
fsubr
jp
adc
cmpsl
adc
out
por
hlt
out
mov
addl
xchg
ficompl
mov
in
ficoms
adc
or
ret
pop
mov
xchg
ss
ret
test
sbb
inc
cld
cltd
sub
sbb
xor
and
mov
push
enter
aas
orb
jmp
popa
outsb
int
in
mov
sub
fdivl
pop
cwtl
pop
rcrb
jmp
mov
push
sahf
std
int
dec
mov
pusha
sub
inc
daa
xchg
add
cmp
popw
in
xchg
pop
int3
ret
add
iret
fdiv
idivb
test
insl
orl
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
mov
negb
mov
jno
or
and
add
cmp
cmp
inc
ret
xlat
inc
mov
hlt
mov
dec
mov
xor
adc
push
lods
addl
jno
push
in
pop
aaa
mov
mov
imulb
test
jnp
xor
arpl
mov
loop
icebp
and
adc
xchg
ds
jne
pop
mov
scas
cmpsb
pop
xchg
mov
out
movsl
sahf
aas
in
hlt
frstor
xchg
cmp
jne
lahf
imulb
push
pop
xchg
scas
leave
insl
mov
mull
push
ljmp
inc
popa
inc
push
mov
mov
push
sbb
push
inc
pop
mov
jge
rorb
scas
mov
outsb
mov
mov
imul
fnstsw
scas
out
test
xchg
pop
mov
dec
cmp
cmp
std
mov
xchg
add
fwait
clc
mov
or
pop
and
mov
or
inc
adc
scas
sub
imul
scas
cmp
jecxz
test
adc
push
sbbl
andb
pusha
lret
scas
or
add
inc
cwtl
stos
or
loopne
add
sub
xorl
xlat
lea
int3
je
in
xchg
xor
mov
outsb
jge
hlt
fisubrl
lcall
add
xchg
jl
jnp
sbbb
mov
dec
mov
scas
scas
cltd
mov
sbb
adcl
pop
jbe
jg
ss
shr
daa
inc
imul
pop
cmc
mov
push
ret
dec
lods
pop
adc
and
jge
es
add
inc
xchg
jne
mov
pop
inc
jecxz
cmp
aam
jae
dec
fstp
jb
add
sti
leave
add
or
mov
lds
shll
push
out
or
mov
and
repz
imul
pop
cmp
clc
inc
jl
inc
enter
incl
divb
adc
inc
bound
ja
imul
in
inc
icebp
sub
add
adc
repnz
fnsave
sbb
add
loopne
jnp
xchg
js
or
scas
cmp
mov
mov
and
aaa
mov
cmp
dec
mov
sub
in
mov
and
or
inc
mov
pop
outsl
movsl
pop
cmp
xchg
sub
ss
out
dec
repz
pop
mov
dec
jae
jp
add
outsl
mov
mov
cmpsb
movsb
stos
mov
stc
jnp
or
cmp
dec
pop
xor
and
in
rclb
movsl
jl
sbbb
mov
addr16
ss
xor
push
fidivrl
ljmp
inc
fidivl
mov
and
shll
sub
xchg
fnstcw
ret
call
pop
dec
loopne
pop
movb
repnz
inc
insl
stos
mov
ja
cmp
mov
jmp
jmp
or
mov
push
mov
add
jnp
cmpb
jle,pt
divb
mov
and
and
pop
or
lock
shll
inc
jae
testb
fmuls
mov
inc
gs
and
add
testl
xchg
ss
not
ret
jnp
sbb
pop
insl
sub
xor
popf
gs
xchg
out
cmpsb
shl
cmp
xchg
notb
mov
add
cmpsl
idivl
pop
stos
mov
pop
test
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
dec
mov
xor
adc
and
push
call
jl
pop
ss
rcrl
jno
or
into
mov
insb
lret
xlat
sahf
adc
je
data16
aaa
dec
pop
lret
sbb
add
scas
xchg
fidivl
sbb
ret
cli
js
mov
xchg
mov
inc
outsb
jno
enter
pushf
loope
add
jnp
ret
mov
cmp
scas
xchg
dec
mov
and
ficoms
push
lret
jo
jne
or
inc
cmpsl
cs
insb
int3
int
or
and
adc
andl
fcompp
lret
shl
jo
insb
cltd
adc
mov
ljmp
mov
aaa
imul
in
jge,pt
add
scas
pop
roll
pop
icebp
sub
out
pop
popl
mov
out
rcll
pop
pop
pusha
cs
das
add
repz
into
push
sub
inc
pcmpeqb
add
or
pop
inc
jb
paddusb
cmp
sbb
inc
push
test
and
cmc
sub
mov
inc
test
xor
jbe
cmpsb
sar
cli
or
ret
ljmp
es
xchg
scas
roll
pop
pop
loop
fstpl
mov
aad
jl
inc
mov
ret
lods
xchg
sub
add
mov
xor
push
imul
rcrl
pop
push
out
inc
scas
push
pusha
cmpsb
mov
xchg
or
js
adc
xor
fmulp
mov
mov
pop
jl
inc
xchg
mov
xchg
cmp
cwtl
shr
lahf
outsl
or
sbb
ds
lods
add
add
jl
adc
dec
repz
popa
movsb
daa
insl
movsl
add
ffreep
or
cmp
inc
jp
mov
mov
and
jl
mov
mov
push
and
arpl
lret
lods
repnz
adc
and
das
xchg
enter
cld
pop
fldenv
mov
dec
iret
mov
sub
sub
ret
jae
inc
adc
rcrb
ljmp
mov
daa
outsl
repnz
sbb
xor
jnp
cwtl
cmpsl
ds
sub
test
fistl
push
fldlg2
imul
cltd
test
or
sahf
andl
jbe
es
pop
ds
out
test
cmpsb
mov
sub
mov
mov
rcr
fcomp
into
sahf
mov
fwait
push
stos
pushf
mov
out
dec
push
jp
jb
insl
and
pinsrw
mov
xchg
sbb
push
and
mov
adc
fsubrl
subb
mov
mov
popa
xor
imul
scas
lahf
ds
popf
push
stc
xchg
inc
inc
test
sbb
adc
rcll
inc
jmp
xchg
xchg
das
jnp
mov
dec
mov
xchg
xor
cld
test
and
cmpsl
iret
ret
push
xor
and
aam
lcall
ficoml
and
out
aaa
jno
or
push
pop
daa
inc
xchg
sahf
xorb
roll
add
adcl
in
push
and
xor
pop
lods
pop
insl
and
jge
mov
fs
mov
and
mov
pop
push
or
mov
or
out
cmp
cmp
mov
jae
push
dec
and
sub
mov
lahf
dec
xor
sarl
jecxz
push
rcrb
js
cli
lret
and
loop
fwait
cld
incb
sbb
jne
es
pop
int3
movsl
cmc
xor
or
push
incl
ret
std
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
and
push
sub
pop
lods
jnp
btr
js
fmull
ds
scas
sub
int3
sub
add
pop
lods
jne
loope
das
orb
add
push
ffreep
push
pop
mov
sub
push
mov
mov
dec
add
push
outsb
in
orl
clc
xchg
loopne
leave
sbbb
mov
inc
scas
push
aam
push
sbb
xchg
lods
push
test
add
mov
repnz
sub
shrl
sahf
xchg
mov
ret
or
jo
into
cltd
mov
mov
mov
xchg
mov
ds
mov
or
pop
mov
test
or
xor
scas
pop
ljmp
mov
adc
xor
sub
and
jg
pop
push
push
jae
inc
pushf
sub
push
sub
sub
and
rclb
sti
lock
dec
or
enter
push
lods
or
ss
fldenv
adcl
pop
js
adc
sub
fwait
xchg
insb
ficomps
mov
jmp
mov
popf
jbe
add
mov
inc
cli
ja
fistl
jge
sbb
adc
pop
fucomp
hlt
sub
xlat
mov
jecxz
call
fs
addr16
subb
push
stos
sub
hlt
jo
sub
mov
mov
pusha
jmp
inc
mov
fwait
jo
inc
ret
sbb
push
pop
jp
dec
and
addr16
sub
or
xchg
test
imul
inc
cmc
and
and
dec
inc
mov
addr16
xchg
and
repz
loop
pop
pop
push
cmp
push
shll
push
add
mov
notl
aaa
fnstcw
mov
and
bound
push
rolb
imul
jmp
loop
inc
ljmp
popa
dec
adc
int3
bound
icebp
leave
ret
inc
xor
jmp
pop
mulb
pop
imul
add
pop
adc
ret
std
into
inc
inc
loopne
inc
dec
cmp
mulb
mov
divl
inc
mov
sub
fiaddl
repz
pop
testb
pcmpgtd
mov
dec
jp
test
mov
stos
lock
xchg
jb
rolb
shl
test
in
in
stos
sub
stc
sub
dec
loop
add
sbb
sub
or
stos
int
outsl
lods
stc
add
lds
add
xchg
cs
mov
rclb
jb
cmp
pop
cld
push
push
fs
lret
rcl
xchg
pop
lret
adc
cwtl
push
scas
adc
dec
push
and
jns
pop
insl
adc
push
pop
lea
daa
sbb
xchg
test
cmp
loop
repnz
mov
xchg
loope
out
cmp
add
add
addr16
mov
cmpsb
dec
popa
fs
dec
push
ljmp
fisubl
je
out
out
mov
les
push
dec
out
cmc
cmpsl
push
mov
push
inc
mov
rorl
sub
leave
scas
jge
imul
push
jnp
xor
out
dec
sub
mov
push
std
fildl
dec
jo
xor
mov
ds
bound
testb
mov
or
lahf
cmpsl
icebp
jns
adc
shrl
pop
repz
pop
data16
gs
jne
leave
dec
aas
scas
stos
lcall
js
push
sarb
mov
mov
push
mov
shrd
xor
jmp
mov
popa
lcall
outsl
xchg
js
sub
adc
adc
adc
addr16
dec
fistpl
pop
sbb
push
jecxz
lcall
call
sub
push
dec
lcall
addr16
lods
repnz
push
int3
sub
mov
inc
xlat
or
inc
xor
addl
and
cmc
cmp
aas
sub
mov
pop
mov
inc
ficoml
xchg
jae
test
dec
cwtl
sub
lock
add
aaa
shl
jnp
push
mov
dec
cmp
sub
shr
leave
mov
mov
jb
into
push
outsb
fidivl
fisubrl
loop
mov
push
add
add
and
lds
mov
inc
inc
shll
xchg
cmp
loope
insl
repnz
mov
pushf
loope
les
enter
xchg
lahf
in
dec
jmp
movb
arpl
gs
and
fs
xchg
jle
test
out
mov
xchg
insb
stc
inc
mov
sub
jns
jp
cli
filds
mov
clc
adc
dec
int
push
lcall
mov
sbb
jle
xor
mov
imul
add
orl
sbb
sub
mov
mov
and
rolb
mov
psubusw
pop
or
mov
lret
jno,pt
lock
in
cmp
jmp
push
mov
in
dec
mov
or
fisubs
or
addr16
adc
push
dec
test
mov
xchg
fsubp
sbb
jne
shl
clc
cmp
pop
sti
aas
lds
jnp
repnz
inc
adc
jbe
test
push
in
loopew
enter
loopne
rorl
leave
test
dec
or
sti
dec
fmuls
pop
ds
pusha
and
imul
push
ljmp
fcmovnbe
xchg
aad
xor
push
or
dec
jecxz
popa
dec
or
imul
out
test
rcl
out
inc
fwait
iret
aad
outsb
outsl
pushf
add
adc
iret
mov
in
cmpb
inc
clc
xor
push
cmc
js
push
out
popa
mov
mov
add
sub
fwait
push
adc
sahf
cwtl
shlb
adc
das
call
xor
add
add
sbb
xor
pop
mov
push
xor
insl
movl
fdivrl
fs
test
imul
dec
inc
nop
mov
lods
test
divl
xchg
shlb
mov
mov
test
mov
rcrb
loopne
test
nop
cmpsl
pop
and
ds
lcall
push
fisttpl
mov
decl
mov
leave
bound
or
packssdw
mov
fnstenv
mov
test
movsl
mov
loopne
adc
cmp
push
aaa
adc
jo
and
sub
nop
push
push
pop
mov
sbb
in
call
xor
sbb
push
jg
or
inc
dec
adc
lret
xor
dec
mov
popf
rclb
push
les
sbb
in
xchg
imul
stos
xor
insb
inc
jl
repz
or
mov
pop
push
jns
aaa
inc
pop
cmp
gs
or
fcoml
les
sbb
cmp
clc
sbbl
pop
lock
sub
push
pop
rorl
outsb
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
es
mov
fmull
adc
and
sub
imulb
cltd
into
mov
sub
mov
push
aaa
xchg
mov
popf
dec
mov
push
inc
xor
bnd
or
adc
sub
cmp
ja
scas
out
imul
pushf
jge
inc
ret
add
ret
cmc
mov
adc
jo
pop
mov
mov
fidivrs
sti
push
inc
sti
mov
xchg
push
ret
insb
jbe
dec
shlb
in
xor
pop
das
mov
pop
inc
pop
repnz
das
push
pop
in
pop
mov
imul
roll
out
xchg
push
daa
repz
push
rcll
test
mov
fnstsw
xor
mov
nop
mov
mov
xchg
sub
dec
adc
cmp
dec
lds
sbb
aam
sub
or
mov
dec
xor
cwtl
push
jge
lods
cmc
inc
cmpsl
aad
sbb
xchg
es
test
mov
push
jmp
add
cmp
in
or
mov
lods
xor
out
loop
je
mov
testl
mov
add
fs
mov
mov
mov
mov
lcall
jbe
cmc
pop
icebp
bound
sub
mov
ret
data16
mov
idivb
cld
icebp
in
fcmovnu
sub
push
out
mov
pop
mov
sbb
test
push
mov
imulb
push
outsb
push
test
push
and
xor
xor
lret
fdivrl
xchg
and
or
inc
jl
adc
adc
aas
sub
sbb
push
jns
inc
or
mov
adc
cmp
jle
xchg
daa
decb
jecxz
mov
push
jg
cmpsl
aad
mov
xor
scas
sarb
mov
push
stos
mov
test
clc
xchg
xchg
cmp
xchg
jnp
mov
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
dec
adc
mov
fmull
adc
psubsw
ret
loop
jnp
add
inc
mov
js
adc
fldt
pop
out
cwtl
leave
movsb
inc
es
pop
les
lcall
sub
sbb
push
stos
mov
sbb
dec
sbb
pushf
lea
inc
test
jge
fisubs
dec
arpl
shrb
leave
ds
ljmp
in
pop
mov
jno
and
incl
add
lods
subl
movsl
out
add
hlt
das
test
and
push
fwait
cwtl
and
dec
pop
std
lods
push
sbb
inc
push
fnstenv
lods
leave
fidivs
jle
dec
adc
das
xor
pop
add
jae
push
dec
movsb
mov
mov
mov
shr
test
and
roll
mov
jecxz
stc
push
push
pop
ja
push
lods
out
outsl
mov
mov
fldcw
in
les
push
xchg
jle
push
into
adc
lea
nop
pushf
adc
test
add
ja
xchg
pop
into
inc
sbb
pop
fnsave
rclb
fildll
scas
cmp
push
and
fucomp
pop
cld
sbb
mov
fnstenv
adc
lock
inc
pop
clc
ds
lods
filds
cmp
stos
push
dec
xor
pop
bound
fucomi
das
mulb
jmp
or
inc
cmp
xlat
insl
movsl
sbb
aam
repz
mov
sbb
outsw
mov
push
inc
shrl
mov
mov
dec
xor
xor
push
in
xor
cmp
out
shll
xchg
jmp
arpl
test
xchg
outsl
sbb
jmp
testl
push
rcrb
adc
cmc
push
sbb
xchg
adc
lahf
xchg
es
inc
lcall
ret
scas
negl
cmp
push
mov
lds
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
mov
push
sbb
adc
movlps
mov
sub
stos
imul
out
test
aas
test
mov
fsubl
or
cld
fnstenv
test
inc
jmp
or
adc
jecxz
cltd
repz
inc
rcll
je
ret
pop
xchg
pop
sbb
cltd
arpl
mov
adc
xchg
mov
call
sub
xchg
cmp
inc
ret
cmc
in
mov
mov
sbb
in
lods
inc
std
in
lcall
pop
aaa
lods
pop
push
sub
popf
les
ret
in
out
inc
cltd
mov
xor
movsb
add
lret
push
or
add
daa
aas
icebp
aam
les
int3
out
and
in
call
aad
ljmp
mov
push
mov
andl
or
add
ja
imul
xor
cltd
mov
pop
lahf
lods
mov
lcall
sub
mov
test
pop
enter
popa
mov
sti
jne
loop
cmp
test
roll
test
adc
in
and
sti
outsl
subl
and
and
js
add
sub
or
cmpsb
idivl
sti
inc
lret
mov
adc
sbb
mov
xor
sbbb
popf
add
or
mov
adc
out
sub
pop
scas
jns
pusha
dec
sbb
xchg
push
xchg
jb
mov
ret
cmp
aaa
mov
fistpll
test
dec
dec
pop
add
out
pop
std
push
cld
push
xor
fwait
add
mov
mov
dec
shlb
cmp
cmp
xchg
adc
mov
xor
test
sahf
xor
and
fsubl
push
dec
std
ds
std
outsb
add
xchg
mov
and
cltd
sbb
and
movl
pop
test
insl
xor
imul
inc
hlt
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
mov
insb
and
movlps
pop
pop
js
mov
test
loope
lret
in
mov
add
pop
outsl
xchg
cmp
add
sbb
sbb
in
pusha
stos
jo
jne
enter
in
int3
pusha
or
dec
sbb
xor
je
xor
cmp
xor
add
xor
lret
loopne
in
push
in
pusha
aaa
sbb
clc
sub
or
xor
push
push
jnp
dec
inc
and
pop
add
mov
cmpsb
mov
dec
jle
aaa
int3
cmc
ss
cltd
scas
ret
xchg
sub
push
cmp
xchg
mov
xchg
sub
out
push
xor
adc
mov
mov
fwait
mov
xchg
push
pop
enter
jb
jbe
mov
xor
cs
aas
movsl
dec
xor
inc
pop
jl
adc
push
xlat
dec
xlat
icebp
sbb
int
adc
mov
andb
es
hlt
lods
fisubs
loope
lock
outsl
aas
mov
andl
repz
orb
je
pusha
adc
pop
lds
lods
xchg
adc
rcrb
sar
add
bound
imulb
gs
and
mov
sahf
jnp
lock
push
divl
arpl
jae
sbb
mov
cmpsl
xchg
in
inc
cmp
sahf
lods
push
popf
repnz
hlt
lods
mov
es
clc
sti
mov
test
jnp
ja
cltd
out
pop
test
loopne
adc
add
jmp
stos
repz
mov
pop
lods
ds
adcb
in
ret
mov
clc
aas
in
sbb
xchg
fwait
or
aad
adc
cwtl
rcrb
adc
xchg
cld
imul
dec
cmp
mov
bound
and
and
or
and
push
gs
mov
int3
incl
pusha
cmp
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
outsl
data16
adc
adc
movlps
xor
fbstp
into
pushf
out
jo
mov
jae
mov
mov
adc
jno
fwait
xchg
fildl
add
cmp
outsl
push
xor
add
daa
add
leave
pop
aam
and
dec
rcl
in
mov
stc
mov
xchg
sub
jns
mov
repnz
cs
xor
lods
into
lock
arpl
cmp
jno
cmp
dec
add
aaa
or
sbb
out
adcl
mov
stc
ljmp
mulb
sti
sbb
rorl
cld
fwait
add
je
in
sub
add
dec
jp
ror
jns
lods
xlat
inc
addl
add
sbb
cmp
mov
je
in
or
cli
in
in
and
jecxz
sti
std
out
inc
test
fwait
xchg
mov
out
jg
sub
add
mov
push
pop
mov
add
sub
aad
aam
add
insb
sub
mov
hlt
or
sub
loopne
js
xchg
inc
cmp
jl
pop
lcall
dec
dec
cs
jo
push
dec
fisubl
xchg
push
loopne
mov
or
lods
push
jle
xchg
lds
mov
gs
repnz
pop
and
jp
lcall
xchg
dec
lcall
out
push
ret
or
xor
test
and
add
js
cmc
mov
mov
cwtl
fisubs
pop
ficoms
icebp
fildll
popf
adcb
xchg
mov
ret
xchg
nop
addr16
inc
les
push
sub
dec
or
imulb
jne
mov
jg
inc
out
outsb
mov
adc
cld
ljmp
loopne
cmpsl
mov
loope
mov
inc
inc
fcomp
mov
and
js
jmp
dec
cmp
mov
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
sub
gs
lret
cmp
cs
push
test
and
mov
sub
cltd
rcrb
xor
sbb
mov
sub
roll
popa
mov
les
xor
adc
mov
xor
push
adc
push
int
lods
jmp
shll
mov
imul
pop
mov
mov
dec
pop
dec
sub
aaa
lds
xor
cld
pop
mov
sbbl
nop
scas
push
sbb
iret
icebp
and
xor
inc
dec
fisttpl
in
enter
mov
mov
into
roll
adc
inc
mov
sti
jle
push
inc
cmp
xor
ds
das
push
mov
xlat
ret
fmul
imul
add
aad
addr16
add
stc
sbb
or
push
out
pop
sahf
loope
xchg
push
pop
pusha
jl
jbe
test
pop
mov
mov
pop
jnp
call
ja
in
inc
addr16
rclb
and
push
adc
inc
dec
sbb
sub
les
das
in
iret
rclb
inc
loopne
xchg
mov
pop
mov
xchg
mov
inc
dec
xchg
mov
mov
in
cmpsl
movsb
insb
mov
dec
mov
jne
inc
mov
out
mov
stc
adc
loop
pop
xrelease
outsb
movsb
rorl
add
mov
test
bnd
aad
movsb
add
xor
and
data16
inc
pop
cli
mov
call
daa
xchg
scas
outsl
cmpsb
xchg
jecxz
sub
nop
les
int
jne
cmp
movsb
cmc
inc
lock
lea
or
iret
scas
mov
ds
push
imul
mov
loope
test
aam
test
imul
sahf
insl
into
inc
mov
in
addr16
in
repz
icebp
mov
cmpsb
sbb
nop
cmpsb
out
aas
sub
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
cmp
adc
fmull
adc
xor
xor
dec
es
xor
inc
sub
xorb
pop
loopne
inc
pop
push
mov
jae
std
jno
push
fwait
pop
out
sub
cmp
lods
mov
mov
cmpsl
sbb
repz
jl
sub
cwtl
mov
or
lds
loop
sbb
nop
mov
pop
int
push
xor
ret
sbb
mov
cmp
jo
sbb
sub
enter
mov
jle
lds
movsb
les
pop
lret
arpl
jnp
out
add
xchg
mov
scas
lret
jne
xchg
cltd
fdivrl
lcall
adc
loope
adc
sti
ret
sbb
mov
or
cmpsb
jle
or
push
popa
hlt
and
call
inc
outsb
enter
aas
pushf
cmp
cmpsl
push
lods
mov
es
mov
inc
cs
aam
clc
lcall
inc
fs
mov
mov
adc
aam
cmpsl
lods
loop
mov
iret
test
cld
movsb
pop
movsl
sbb
dec
stos
out
shrb
dec
add
push
adc
fwait
jnp
loope
mov
mov
sub
or
or
jns
xchg
lea
mov
mov
cmc
adc
pop
clc
sti
sarl
sti
push
cmp
popa
ret
je
cmpsl
push
js
rcrl
sahf
daa
xor
jb
and
popa
sub
aas
insb
sub
mov
inc
call
aad
hlt
stos
mov
inc
rcr
adc
sarb
into
lahf
pop
test
and
push
rcll
sub
mov
adc
add
and
jmp
mov
testb
jecxz
jno
cmpsl
xchg
fcoms
dec
jle
sbb
test
lds
cwtl
xor
cmp
mov
les
repz
pushf
addr16
scas
pop
jp
mov
sarb
mov
shll
xor
jb
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
jb
fistpl
xor
sbb
pop
fdivrs
outsb
cmpl
or
push
je
enter
mov
loopne
iret
movsb
test
mov
jecxz
xchg
outsl
out
dec
inc
cmp
jne
xchg
out
ret
loopne,pt
fldcw
add
addb
cmp
clc
jae
jns
push
and
cltd
jb
sub
daa
jne
in
jo
fs
cmp
rcrl
js
negl
rcr
mulb
icebp
rorl
jo
flds
jecxz
and
mov
out
inc
add
mov
jl
sub
subb
add
jne
out
movsb
insl
aam
in
lcall
fcompl
adc
das
cmpsb
push
aad
dec
mov
mov
adc
shlb
xor
cmpsb
inc
in
cmp
enter
inc
lock
push
pushf
push
adc
cs
subb
push
mov
and
mov
push
adc
sahf
out
fdivrl
pop
sbbb
scas
nop
ja
fnsave
push
dec
xchg
movb
gs
in
iret
sbb
cld
cltd
in
mov
int
das
out
sbb
mov
dec
sub
popf
sbb
mov
or
pushf
sub
and
and
pop
add
ja
shll
or
xor
cmp
insl
mov
inc
pop
xor
test
filds
and
lock
or
outsb
fisttpll
ret
mov
out
ret
and
out
lret
ja
mov
xchg
xchg
fldl2e
dec
push
add
in
and
inc
fs
cmp
push
xor
pop
xor
jmp
fildl
lahf
push
dec
jnp
push
push
enter
popf
mov
sub
mov
das
es
pop
mov
xchg
ja
add
fiadds
hlt
jo
loopne
push
outsb
mov
stos
sbb
cmp
xchg
lahf
push
pop
data16
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
stos
cmp
mov
popf
push
dec
add
frstor
dec
xchg
add
cmpsl
dec
sbb
ja
stos
into
cmc
inc
and
idivl
push
xor
jge
jb
maskmovq
in
test
dec
in
rcrb
sbb
pop
push
fucomi
mov
ret
hlt
ja
imul
inc
jne
test
mov
out
lret
nop
divl
dec
sub
in
out
pop
sti
jg
les
adc
adc
adcb
addr16
fisubs
je
jmp
in
jnp
hlt
lret
sarb
shrl
jo
data16
ja
vmaxps
push
inc
xor
cli
ret
in
xor
std
es
cld
inc
cmp
in
add
and
xchg
cmc
or
pop
sarl
int3
ret
pop
cmp
mov
shr
lcall
xor
add
or
jne
pop
outsl
pusha
icebp
jp
xchg
sub
push
ja
out
repnz
jnp
xor
add
lods
sahf
repnz
popa
scas
ljmp
xchg
popf
scas
adc
mov
and
adc
movsl
out
or
lods
add
jno
icebp
ds
add
loop
mov
stos
shrb
scas
shrl
xchg
jo
mov
std
dec
or
movsb
icebp
cmp
out
sub
adc
loopne
test
cwtl
pop
pop
lods
push
lret
sti
inc
mov
pop
loopne
rorl
popf
inc
mov
jmp
mov
jle
test
fs
xchg
stos
leave
rclb
cwtl
test
jl
imul
std
cwtl
sbb
mov
test
mov
fistpll
dec
sti
push
arpl
dec
mov
scas
sarb
fs
arpl
pop
mov
in
lock
mov
test
sahf
dec
jg
dec
add
stos
sub
inc
rorb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
or
adc
fmull
adc
mov
das
filds
sbb
gs
in
pop
ss
mov
mov
in
mov
in
cmc
loop
in
scas
push
jne
xchg
icebp
mov
sub
or
jb
cmp
mov
mov
dec
push
stos
jne
cmpsb
test
inc
mov
mov
dec
loop
je
pop
fcoml
out
stos
cmc
icebp
cmpsb
jle
rcrl
push
or
outsl
xchg
cwtl
stos
xor
arpl
ret
push
or
sarl
adc
inc
push
xor
sbb
xchg
mov
nop
sbb
dec
pop
sub
sbb
push
jmp
movsb
jbe
std
data16
mov
cmc
test
test
das
jp
jne
stc
dec
mov
mov
inc
inc
fwait
jg
cmp
push
out
add
sarl
popa
das
mov
dec
mov
test
jg
mov
pop
clc
push
jle
cld
addr16
psubw
stc
fwait
js
rcrl
ds
insb
sbb
dec
inc
mov
push
ss
mov
vcvtsd2ss
fsubrs
sahf
scas
pop
movsl
mov
xchg
shrb
xor
pop
push
cmpsb
js
out
sti
cs
aas
or
sub
xor
sti
cs
adc
imul
push
ja
mov
repz
pop
adc
dec
gs
out
push
or
lods
xchg
imul
out
cmpsb
sbb
fwait
xchg
ss
xor
rorb
jecxz
int
ljmp
js
mov
jbe
mov
pop
sub
mov
daa
push
xor
stos
clc
mov
jmp
std
movsb
sbb
mov
jle
imul
mov
dec
dec
hlt
dec
jecxz
cmp
push
or
jp
test
insb
clc
add
inc
add
push
jo
sbb
xchg
mov
nop
cmpsb
push
mov
cmpsl
lds
dec
cwtl
cmpsb
je
loopne
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
push
mov
movlps
out
push
xor
pop
push
fwait
mov
xchg
daa
xor
push
nop
jge
xchg
std
mov
pushf
mov
outsb
bound
sub
mov
sub
jmp
and
fwait
or
jecxz
ret
inc
and
dec
adc
dec
ja
orl
jmp
sbb
xor
fdivp
xchg
xchg
mov
mov
adc
inc
leave
out
mov
icebp
or
xchg
xor
push
je
je
sarb
int3
cmp
clc
cmpsb
adc
push
les
push
inc
xchg
jbe
fdiv
fwait
call
imul
lret
adc
jmp
and
jb
pop
sbb
stos
adc
es
lods
sub
pop
jle
ds
lds
lods
or
or
into
data16
cli
jb
add
jmp
cs
jne
test
mov
insl
mov
repnz
stc
in
lret
and
lods
je
clc
cs
arpl
or
sbbl
scas
cltd
jbe
ds
mov
in
aas
je
jnp
cmp
xchg
sub
in
jg
sbb
pop
stos
pop
stos
pop
dec
mov
ja
test
and
cmp
fsubrl
cli
loope
add
xor
aaa
mov
mov
mov
push
and
jecxz
sbb
test
add
sub
imul
sub
mov
xor
inc
imul
pop
jle
mov
loope
push
pop
rcrl
sub
stos
stos
mov
dec
sbb
inc
cli
jmp
sahf
sub
jg
xor
xor
cld
and
std
xor
mov
push
mov
inc
call
fistpll
sbb
std
cmpsb
sbb
and
or
mov
pop
jmp
bound
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
xorl
adc
movlps
mov
fstpl
push
mov
mov
sub
sub
mov
cld
aam
pushf
push
push
call
cltd
adc
sbb
aaa
or
lods
pop
dec
out
pop
imul
fstpt
cmpsl
int3
out
sub
pop
mov
arpl
mov
cmc
inc
lock
insb
aaa
pop
cmp
dec
mov
pop
and
cmp
cmc
mov
xor
add
test
mov
xchg
mov
pop
push
testb
mov
arpl
inc
stos
aas
dec
cmp
dec
lods
dec
and
jecxz
push
jbe
mov
popf
dec
dec
cmp
sar
mov
ret
fistps
jmp
sbb
ss
fs
dec
stos
add
dec
fimull
pop
mov
pop
push
scas
sbb
add
xchg
dec
xlat
cmp
xorl
add
inc
jecxz
les
clc
sbb
stc
jno
faddl
daa
and
push
insb
movsl
xchg
fcmove
lcall
inc
test
daa
pop
leave
and
jns
cmp
out
push
sub
add
fdivrl
pop
in
sub
mov
neg
sbb
cs
push
fnstcw
push
icebp
lds
cltd
fidivrl
xor
aas
in
lret
popa
sarb
imul
push
inc
int
ds
or
mov
lret
je
jae
sbb
cli
inc
mov
lret
fs
lock
dec
cmpsl
xchg
inc
mov
jns
pop
adc
fadds
aas
popa
nop
addr16
insb
xor
xlat
adc
rcrb
cmpl
adc
adc
daa
pop
pop
xor
rorb
cmpl
fisubrs
jge
mov
dec
mov
int
popf
push
dec
hlt
sarb
pop
inc
sarl
xchg
ljmp
je
les
cmp
sahf
lahf
xorb
les
fmuls
add
jnp
loope
std
pop
aas
xchg
cs
sub
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
ss
ljmp
or
icebp
mov
pop
lea
test
jbe
or
adc
xor
fisttps
xchg
aaa
or
jb
addr16
xor
dec
adc
outsb
mov
mov
outsb
jno
push
rcr
inc
mov
inc
dec
call
fldt
inc
cltd
pop
sbb
jnp
andb
cmpsb
call
push
xchg
or
adc
mov
pushf
jle
ss
data16
xchg
outsl
jle
push
into
sbb
movb
cwtl
out
aad
aaa
fwait
cmpsl
iret
inc
mov
adc
push
xchg
enter
inc
aaa
dec
jns
into
enter
xorb
adc
mov
sbb
lock
js
and
inc
fsts
dec
shl
dec
cmp
cmc
jl
je
sar
in
inc
fnstenv
inc
sahf
stos
out
dec
js
sahf
aas
cmp
int3
inc
dec
roll
int
xchg
pushf
clc
fiaddl
push
or
cmp
mov
dec
push
adc
mov
or
inc
orb
push
mov
xlat
stos
jo
stos
jmp
xchg
pop
mov
mov
mov
out
sbb
jo
mov
fdivrs
push
sbb
jg
mov
and
pminsw
js
adc
ret
pop
mov
cmp
into
mov
sub
ficoms
adc
iret
push
add
push
mov
out
mov
mov
cmp
jb
lea
jno
div
or
rcl
push
sahf
into
push
pop
sub
pushf
stos
inc
out
ret
negb
pop
push
dec
or
add
rorb
mov
mov
xlat
ss
test
or
or
and
adc
outsl
dec
xchg
jmp
push
add
lcall
sbb
cld
outsl
inc
inc
daa
sbb
jb
popf
sbbb
jnp
push
add
imul
jmp
pop
sub
aas
repnz
push
loope
add
mov
inc
shr
sub
mov
orl
inc
ja
pop
cwtl
inc
into
sub
fs
outsl
lds
mov
jo
xchg
sub
sbb
lahf
mov
sbb
popa
adc
les
mov
and
push
cltd
imul
sbb
nop
in
push
fdivs
jg
js
xchg
and
pop
sub
push
addb
xchg
adcl
cmp
hlt
push
xchg
dec
pop
xor
call
popf
or
xor
or
and
ljmp
cs
sysret
jecxz
cld
mov
fld
daa
aaa
in
push
movsb
or
in
lock
mov
aas
pop
outsl
xchg
push
xchg
push
in
rcrl
xchg
hlt
ljmp
in
in
out
cli
pop
loop
test
aas
pop
movsb
adc
stos
test
out
ja
push
sub
stos
adcl
dec
cmpl
mov
mov
mov
insl
fs
cwtl
fisttpl
pop
lods
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
jnp
mov
jo
adc
nop
mov
xor
mov
mov
xchg
sub
pop
inc
lods
mov
jnp
mull
jge
xor
or
pextrw
xchg
imul
sbb
in
rorl
adc
and
rorl
fwait
mov
aam
ja
pushf
add
iret
push
or
hlt
inc
jnp
add
add
in
mov
clc
popf
fcom
sub
out
push
xor
xchg
or
mov
dec
jmp
pop
xor
adc
or
lock
jnp
mov
push
add
in
test
rcrb
cli
repz
mov
insl
out
mov
mov
push
lds
pushf
jge
cmp
mov
xorb
fadds
loopne
cmp
stos
cmovae
cmpl
das
mov
std
aas
adc
mov
add
mov
xchg
xchg
inc
adc
sahf
rcrl
sahf
mov
in
pop
inc
test
ljmp
sahf
sub
adc
cmp
xor
fwait
adc
test
inc
icebp
mov
int
mov
pop
or
fisubs
icebp
mov
add
push
shrb
and
lods
sub
pusha
xchg
push
arpl
xchg
mov
scas
sbb
out
jle
roll
shr
push
add
or
dec
iret
xor
xor
sub
jo
push
inc
dec
pop
mov
lods
dec
jnp
cmp
shl
jb
stos
jl
ds
cli
scas
xchg
and
mov
mov
adc
ret
repnz
ja
outsl
test
jl
mov
aad
jbe
in
rcrb
and
imul
xor
les
jg
lahf
sub
push
lods
mov
mov
sbb
dec
xchg
arpl
push
mov
mov
in
mov
scas
xchg
in
vpsubd
cli
pop
adc
jo
jle
addr16
rolb
es
testb
mov
outsl
mov
or
imul
mov
insb
xlat
cmpl
xchg
push
push
cmovge
lock
adc
in
loop
jae
or
pop
mov
mov
mov
dec
jmp
xor
les
icebp
das
imull
mov
xchg
call
mov
inc
or
insb
cmpsl
scas
push
jecxz
out
cmc
sub
dec
enter
push
loopne
test
jnp
push
dec
xchg
and
jne
pop
and
or
push
sub
cwtl
mov
xchg
push
dec
dec
add
push
jne
push
add
sbb
ds
scas
in
adc
and
mov
fistps
cmp
pop
js
push
push
lahf
sbb
fwait
inc
arpl
js
jbe
addr16
dec
xor
js
shlb
add
inc
pop
addl
push
nop
movsl
mov
jecxz
es
pusha
push
pushf
ja
cmpsb
mov
icebp
xchg
int3
xchg
xchg
test
pop
scas
aas
push
stos
add
shlb
push
pop
sbbb
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
xchg
data16
fists
adc
adc
mov
neg
or
sti
xchg
mov
sbb
cmpsb
jecxz
loope
and
inc
xor
push
or
in
in
rclb
jle
sbb
fisttpll
fincstp
aas
lret
dec
testl
stos
cwtl
insb
jle
gs
cwtl
iret
jo
and
mov
in
cmp
stos
or
shl
int3
js
stos
cmp
adc
stos
mov
jae
mov
jae
sub
orb
and
mov
outsl
push
cwtl
cs
andb
and
push
cmp
scas
test
ret
shrl
repz
add
lds
rcll
ss
cmpsl
push
or
icebp
imul
cwtl
push
xchg
mov
ja
or
pushf
mov
jp
jecxz
add
int3
xlat
fsubs
jb
mov
dec
fildl
sbb
cmp
mov
sbb
xchg
movsl
mov
inc
js
pop
xchg
and
push
es
pop
int3
shlb
push
in
mov
popf
or
push
xchg
pop
clc
iret
fbstp
push
mov
cs
sbb
mov
jbe
sbb
in
hlt
sbb
push
call
pop
std
inc
cmpsb
adc
lods
shrb
sti
stos
dec
mov
push
gs
lcall
outsb
and
movsl
pop
pushf
out
xchg
cmc
fbld
add
imul
xchg
push
sub
ja
mov
cmp
call
push
ljmp
push
xor
lahf
iret
xor
lds
xchg
xchg
and
mov
fisubs
jle
pusha
ret
jns
dec
mov
mov
mov
and
je
adc
sbb
out
push
mov
push
popf
pusha
stos
movsl
repz
sub
sti
push
es
push
je
jno
fistpll
or
outsb
pop
jp
and
xchg
add
push
pusha
xor
or
push
shlb
adc
mov
aaa
sub
aam
xchg
inc
dec
and
mov
mov
mov
fmuls
stc
mov
cmp
or
cmp
add
jnp
mov
rorl
fdivp
xchg
mov
fisttpl
lock
mov
cmp
test
aas
aad
shl
hlt
cmpsb
mov
or
cltd
cmc
cmc
clc
shll
lret
test
stos
add
sti
sub
shr
jle
sti
dec
rolb
pop
andl
sub
cmpsb
sub
mov
pop
aas
jge
iret
mov
daa
jne
push
xor
in
xchg
aam
das
cwtl
pop
ja
and
mov
out
negb
aaa
jnp
push
and
adc
in
cmp
hlt
mov
arpl
jnp
aad
cltd
repnz
lret
cmp
jnp
movsb
add
xor
cmpsl
addr16
or
movb
push
icebp
jbe
or
and
fwait
cmp
das
negl
fisttpl
mov
inc
lods
pusha
repnz
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
int
js
fstl
adc
adc
repnz
pop
inc
mov
push
outsl
push
mov
jecxz
lea
in
or
mov
arpl
andl
jge
mov
popa
vmwrite
iret
push
adcl
bound
ds
roll
sbb
repz
ds
push
mov
xchg
movsl
ret
addr16
rcll
popf
js
hlt
inc
stos
add
aad
dec
cmp
clc
in
mov
sbb
xchg
and
insb
lea
rcl
fmull
push
mov
mov
jge
push
test
pop
call
and
jnp
xchg
sbb
pop
lret
xchg
mov
std
inc
icebp
pop
sbb
mov
mov
lret
push
push
sbb
fisttps
mov
sbb
mov
fs
xchg
imul
mov
lcall
out
push
ret
in
test
pusha
inc
popa
idivb
fs
es
aam
and
pop
pop
test
pop
jmp
jmp
or
int
sub
adc
int3
addr16
xchg
jb
adc
pop
popa
pop
lret
stc
adc
inc
aad
orl
mov
test
push
fistl
pop
movsb
fisttpll
ret
mov
dec
cmp
in
pop
das
or
out
aaa
ds
pop
lcall
dec
out
arpl
or
add
repnz
cmpsl
jbe
xlat
loope
mov
dec
loopne
and
jl
mov
xchg
pop
jge
jbe
fcmovbe
jmp
lods
cmp
mov
fldl
shl
pop
lock
fldcw
ja
out
rcrl
adc
leave
push
repz
cmp
push
mov
aad
aaa
and
lods
ss
jno
icebp
inc
ja
xchg
and
imul
in
cli
outsb
cmpsb
xchg
iret
movsb
pop
add
push
mov
in
int
dec
inc
lods
hlt
outsl
icebp
pop
jnp
sbb
lock
xchg
les
cmp
scas
push
inc
and
ss
inc
sahf
inc
into
mov
clc
ret
mov
stos
adc
sub
imul
mov
dec
pop
sbb
ret
hlt
repnz
aas
mov
mov
test
sbb
mov
in
push
push
mov
inc
lock
mov
fisttpll
push
adc
xor
or
enter
rorl
scas
pop
jle
mov
inc
mov
out
loope
sub
std
inc
fimull
loope
nop
testl
lods
mov
test
xor
jnp
inc
sbb
mov
inc
or
or
std
mov
push
icebp
das
adc
sbb
or
xchg
shr
stos
xor
jle
inc
pusha
adc
mov
push
sub
mov
xor
shlb
mov
or
outsb
jns
xlat
xchg
cli
and
or
mov
cld
addr16
pop
pop
repz
aad
mov
dec
pusha
test
negb
and
call
adc
daa
sbb
scas
lahf
test
add
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
lahf
pop
fdivrl
jo
adc
sub
or
rcl
pop
push
jb
push
mov
mov
pop
sahf
sbb
jecxz
pop
mov
push
inc
fcmovb
xchg
cld
data16
sub
dec
data16
loopne
sub
dec
shll
dec
insb
inc
cwtl
dec
mov
jle
fnstcw
add
adc
shlb
mov
jmp
ds
inc
into
out
shl
in
int
jo
pop
jle
inc
int
xchg
add
or
push
imulb
cmp
arpl
jmp
sbb
addr16
sub
int3
out
pop
xor
in
xchg
mov
pop
push
sahf
push
fdivl
push
cltd
mov
mov
pop
adc
gs
repnz
xlat
push
dec
lock
dec
in
decl
pop
xchg
sbb
sbb
lds
ja
add
shlb
lods
mov
call
shrb
sub
lea
imul
insl
in
stos
in
in
fists
cmp
and
jge
aad
gs
mov
jecxz
dec
cld
cmp
mov
dec
add
mov
into
out
add
cmp
dec
sub
inc
and
and
sub
enter
in
test
mov
jmp
add
gs
out
pop
fnstsw
sub
xchg
xor
sbb
sahf
xchg
loopne
mov
test
je
inc
sbbb
sub
adc
addl
xor
scas
jnp
sbb
adc
sub
or
test
nop
call
cmp
pop
pop
outsl
mov
lcall
stos
bound
out
das
sub
je
adc
rorl
push
dec
dec
cmc
incb
lods
adc
sbb
mov
clc
arpl
inc
nop
scas
inc
xor
int3
inc
xor
xor
mov
pop
dec
xor
push
sbb
xor
cmp
push
mov
mov
pop
out
pop
inc
add
fcom
orb
bnd
or
and
push
xorl
aaa
jg
bnd
sub
xchg
add
dec
imul
dec
imul
in
ss
mov
xor
sbb
shl
jmp
mov
in
outsb
push
mov
mov
loopne
xchg
js
decl
icebp
mov
int3
lods
add
inc
ret
sbbb
sarb
cli
andl
bound
cmp
jno
mov
sbb
xchg
fisttpll
mov
adc
insl
xor
imul
movsl
lcall
jbe
jae
das
outsl
jl
mov
push
add
out
mov
ljmp
arpl
popa
outsl
pop
mov
sbb
je
out
or
mov
sub
stos
pop
push
push
addr16
fistl
ret
sub
sbb
adc
add
lea
xor
or
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
dec
pop
lods
insb
cli
lret
adc
jo
adc
add
xor
icebp
xchg
or
in
loopne
aam
xchg
inc
rol
sub
jle
int3
loope
lret
and
stc
mov
pop
mov
ret
xchg
daa
mov
or
repz
test
push
mov
loope
mov
or
inc
push
mov
sahf
mov
pop
mov
or
lret
shr
or
push
xlat
fsubl
adc
inc
xchg
repz
les
andl
pop
jmp
sbb
xlat
test
mov
test
int
repz
mov
jns
or
mov
cmp
inc
ret
inc
cmpsl
mov
add
push
inc
insb
inc
cltd
xor
ss
jne
push
pop
cmp
pop
pop
loope
jmp
iret
loope
aam
fdiv
lahf
andb
loope
ja
aam
lcall
movsb
fildll
rclb
push
push
mov
fsubrl
or
subl
sbb
xor
mov
in
cmp
sbb
js
ret
cmp
rorb
sub
inc
and
movsb
sbb
mov
jo
shl
xchg
jae
xchg
mov
pop
arpl
jae
stos
movsb
fwait
aas
xchg
ficomps
add
mov
push
cmp
aas
sbb
aaa
in
pop
movsl
in
adc
pop
movsb
add
push
and
popa
mov
test
test
jp
or
cmpsl
iret
push
stc
inc
mov
dec
cmp
outsl
adc
popa
sub
fsubrp
inc
imul
div
loopne
and
fistpll
add
xchg
add
scas
sub
inc
movsb
sbb
pushf
lahf
imul
call
mov
cs
dec
das
cmp
mov
push
mov
lcall
gs
push
lcall
stos
push
xchg
imul
dec
add
and
inc
pop
loop
xor
xor
test
sub
lds
in
mov
inc
fidivrs
icebp
inc
stos
add
lock
arpl
aam
and
popa
or
test
inc
cmp
arpl
pop
inc
or
xor
sti
int
ret
int3
push
sub
push
sub
pop
out
push
dec
in
push
out
enter
fwait
in
test
mov
lods
leave
sbb
popa
das
sub
mov
fstpl
cmp
xchg
push
addr16
sub
adc
sbb
mov
fistpll
mov
idivb
jns
xorl
ds
sub
xchg
xor
frstpm(287
mov
sbb
mov
dec
es
test
sub
jae
pop
pushf
sub
xchg
and
add
mov
and
inc
jmp
pop
and
mov
js
push
outsb
and
loope
insl
push
test
ljmp
jmp
aas
adc
ss
adc
cmpsb
loopne
jmp
or
out
adcl
push
les
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
aam
ljmp
cmp
rol
fcoml
add
add
in
add
fiadds
fmuls
aaa
mov
sbb
mov
pop
leave
or
and
lods
jo
jp
hlt
mov
pop
jmp
cmp
jg
cmp
inc
hlt
lods
nop
test
in
or
or
dec
ljmp
shrl
mov
xchg
lret
jnp
jmp
divb
lock
sub
xor
or
imul
or
icebp
mov
sarb
xchg
ret
rclb
lock
mov
scas
jp
mov
in
mov
adc
mov
mov
dec
in
icebp
dec
loope
fsubs
repnz
rol
xor
pop
inc
add
xchg
enter
xchg
adc
and
inc
leave
mov
cmp
daa
bound
push
loopne
enter
clc
or
pop
dec
and
cmpsb
mov
jb
xchg
jne
stos
jno
call
out
imul
jmp
push
iret
loope
stc
dec
add
jmp
inc
in
pusha
popa
lahf
lret
in
andl
mov
fcoml
mov
fwait
adc
aas
jl
xor
xchg
loope
push
xorb
mov
push
xchg
lods
hlt
add
test
cmp
xchg
mov
fwait
push
add
scas
int3
outsl
push
shrb
or
mov
adc
mov
out
fisubl
mov
testl
out
inc
jge
rclb
cmp
push
adc
xchg
gs
stos
aas
shll
in
jo
inc
sahf
scas
xor
aaa
cmp
jnp
and
in
imul
mov
push
jle
leave
dec
pop
mov
lret
mov
fisubrl
imul
lret
adc
jne
jne
dec
in
mov
pop
call
pop
aad
aas
loop
negb
enter
lahf
movsb
jecxz
mov
add
adc
fstpt
lea
inc
cmp
scas
insl
inc
ficoml
mov
mov
add
push
lds
out
mov
mov
xor
sub
mov
xchg
jl
mov
xchg
mov
fisubl
popa
or
cwtl
fwait
outsb
leave
mov
add
xor
jmp
push
xlat
divl
add
add
cmp
push
mov
sub
push
jbe
adc
lret
push
ja
movl
inc
mov
xor
pop
aas
jl
fwait
inc
xchg
add
inc
dec
shll
lret
lods
int
sbb
mov
out
sub
mov
sub
insl
pop
or
mov
cld
les
inc
daa
lock
fs
ret
cmp
sbb
xchg
or
mov
adc
std
dec
jecxz
or
scas
xchg
into
push
sbb
mov
rclb
inc
xchg
mov
aas
push
jmp
imul
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
push
rcll
jo
adc
xchg
scas
sbb
or
mov
fists
addl
and
test
push
sbb
mov
rcl
xor
or
mov
les
shll
adc
pop
dec
ja
xchg
cmc
bswap
and
push
xor
decl
xchg
cmp
add
cmp
dec
sbb
mov
out
xor
dec
xor
mov
inc
fimull
sti
inc
push
dec
adc
insb
push
mov
in
popa
push
xor
jae
xor
pmuludq
lahf
arpl
mov
adc
push
pop
lret
loope
mov
lcall
rcrl
jmp
jbe
das
in
jo,pn
lds
add
enter
jmp
cmpsl
push
xor
js
jnp
lcall
jnp
mov
pop
mov
xor
lods
stos
cli
dec
repnz
xlat
mov
mov
fsubrl
jg
xchg
test
fdivs
sub
fdivs
or
sub
je
lods
out
jbe
sbb
mov
fcmovne
das
add
inc
and
push
pop
inc
mov
pusha
loopne
xchg
adc
stc
inc
stos
lods
cmpsl
loop
test
xor
loopnew
ss
jmp
cmc
in
gs
addr16
ja
adc
sub
or
or
mov
ret
jne
mov
sbb
fwait
pop
and
fst
repz
jp
fdivrl
out
dec
or
repz
test
pop
stc
clc
and
jo
jp
out
mov
or
aas
xchg
and
les
inc
sbbb
addb
mov
mov
dec
rcrl
in
movsl
std
sbb
mov
dec
loop
daa
xor
nop
ja
dec
loop
lcall
inc
test
ss
sbb
mov
test
stos
fidivl
ret
push
push
or
mov
cmp
lcall
sub
jns
bound
iret
dec
dec
push
int3
aaa
imul
jne
popa
sbb
push
xor
std
popf
inc
sbb
lret
stos
fnsave
xchg
inc
xchg
test
imul
inc
mov
insl
lahf
pop
sti
in
add
testl
movsb
and
mov
or
icebp
pop
pop
lods
scas
outsl
outsl
sti
outsb
jl
add
dec
stc
js
jbe
mov
inc
test
and
stos
pop
push
or
and
inc
mov
jle
xchg
fyl2xp1
data16
mov
cltd
inc
push
jecxz
ds
jo
fwait
mov
or
sub
or
popf
inc
xor
fbstp
lock
mov
lock
push
cwtl
mov
in
and
push
sti
bound
ja
mov
jne
mov
loope
pcmpeqw
out
std
loopne
mov
adc
pushf
shll
fwait
lret
cli
int3
dec
sub
sbb
dec
ljmp
mov
mov
mov
pusha
and
ds
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
mov
mov
adc
adc
xor
mov
shll
xchg
sti
lods
adc
int3
mov
pop
test
xorb
cli
daa
pop
es
data16
test
mov
popa
out
push
subl
gs
test
push
mov
shrw
xchg
rcrl
std
pop
sub
cmc
js
rolb
cwtl
inc
sub
fidivs
or
fs
inc
negl
aad
jno
fldcw
shl
roll
sub
push
jno
dec
cmpsl
push
dec
mov
xchg
jp
imul
scas
xor
dec
mov
mov
addr16
fisttps
int
or
sbb
int3
fistpl
ficomps
out
iret
xchg
imul
xor
xchg
arpl
daa
lods
jbe
sbb
xlat
fildll
sbb
pusha
xchg
xor
sbb
mov
push
into
or
or
xchg
aaa
movsl
insb
pushf
sahf
xor
ret
inc
jb
inc
scas
push
xchg
shll
xchg
xchg
int3
mov
ljmp
stos
xlat
aas
jae
fmulp
push
mov
jecxz
inc
jmp
adc
and
adc
je
incb
imul
jge
in
pop
inc
lds
add
out
add
not
lret
mov
pop
notl
jns
lds
xchg
xor
hlt
cmp
jnp
sahf
or
popf
sub
test
xchg
and
mov
int3
inc
in
mov
xchg
xor
mov
das
lret
std
dec
xchg
push
jbe
dec
and
pop
fdivl
dec
mov
cmpsb
mov
jnp
mov
pop
xchg
sub
pop
cli
adc
cwtl
cmp
enter
mov
mov
lahf
subb
mov
scas
cmp
aas
in
inc
cmpsl
push
cmpsl
xchg
ss
push
icebp
pop
js
rcl
ret
pop
sbb
dec
add
push
mov
stos
sub
mov
push
mov
fwait
loopne
and
jge
xchg
pop
mull
jae
or
cltd
bound
lock
inc
aaa
sub
jne
pop
cmpsl
cmp
jmp
outsb
xor
int
pop
dec
stos
xchg
jp
sub
xor
movsl
push
ret
push
arpl
out
jae
rclb
mov
enter
lds
das
call
lcall
pop
mov
pop
adc
aaa
nop
fcomip
pop
out
jle
dec
lret
js
add
addr16
lock
xchg
les
nop
xlat
rclb
les
shr
push
xor
inc
sarl
out
rolb
dec
sbb
fistl
jmp
je
push
ss
pop
sbb
jbe
mov
pop
jp
dec
xor
cld
jno
fcomp
add
xchg
fidivrs
dec
mov
stos
push
loopne
rorl
inc
lds
dec
les
popl
xchg
ljmp
stos
cli
enter
stos
jbe
push
dec
imul
sbb
mov
mov
mov
mov
xchg
mov
iret
jns
cli
cmp
pop
push
pop
push
jo
jl
pop
ret
and
mov
inc
outsl
pushf
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
mov
into
dec
sub
imul
add
push
lods
sub
aad
add
cmp
pusha
in
sub
or
xchg
fiaddl
loope
adc
out
shlb
fsubrs
or
ljmp
fcmovnb
pop
adc
sahf
push
inc
ja
sahf
pop
pop
scas
mov
xchg
test
mov
ret
hlt
cmp
ja
mov
jmp
pop
movsb
jle
cmp
or
or
mov
push
xlat
enter
in
mov
fisubs
mov
or
pop
addr16
das
insl
repz
sbb
mov
xor
dec
mov
bound
jle
cmpsb
test
and
adc
mov
mov
or
fwait
icebp
mov
sub
in
out
inc
jmp
movsl
or
inc
and
mov
add
inc
arpl
cs
orb
mov
push
lret
xchg
add
cmc
pop
jbe
aad
gs
jo
in
out
sbb
out
xor
xor
jg
push
push
rorl
xor
lods
dec
mov
mov
push
xlat
out
inc
lahf
call
stos
mov
mov
daa
xchg
repnz
sbb
push
daa
rol
add
sub
mov
call
rolb
shrb
enter
jge
lods
push
rclb
call
or
mov
mov
sbb
lods
and
dec
xchg
lret
mov
cmp
addr16
sti
rcrl
out
dec
shll
cmp
pop
jecxz
add
daa
ja
add
test
and
inc
ss
dec
rolb
dec
loop
jle
pop
fisttpl
pop
jge
repnz
pop
inc
mov
int
adc
pop
xchg
mov
addl
rcrb
je
xor
scas
and
xchg
bound
add
in
rorl
push
add
push
jmp
push
pop
push
js
mov
adc
stos
movlps
dec
lods
push
xor
enter
fmull
cli
xor
or
sti
xchg
sub
dec
mov
stos
fmuls
or
mov
sub
push
test
jmp
aad
sub
xor
loopne
push
ds
push
pop
cmpb
int3
xchg
mov
inc
stos
rcl
xchg
shlb
movsl
cmp
or
push
dec
xchg
push
pop
mov
cmpsl
aas
repz
sbb
push
mov
fnstcw
inc
hlt
push
bnd
rcrb
mov
pushf
pop
push
mov
loope
lret
cmp
xchg
mov
cmp
xor
in
adc
pop
push
scas
jns
mov
and
sahf
xor
and
aas
inc
pop
lahf
and
fisubrs
dec
or
inc
add
or
xchg
dec
stos
and
js
mov
dec
in
xchg
test
xor
lods
popa
jnp
scas
or
incb
jg
aam
sub
imul
inc
sub
insl
pop
push
out
fidivs
jne
paddq
xor
rcrb
sbb
xchg
clc
test
arpl
inc
sahf
int3
fwait
pop
test
fstps
pop
adc
adc
aad
lock
adc
out
repnz
cmpsl
cltd
push
aam
insb
mov
push
xor
mov
stos
jns
ret
iret
cmp
pop
rcr
in
adc
push
sub
dec
add
sub
stos
leave
jb
rcrl
and
pushf
lret
popf
pusha
lret
in
jo
or
testl
fwait
xchg
mov
or
add
push
jns
inc
and
cmp
mov
adc
pop
jmp
nop
sarb
cmp
mov
andb
popa
ss
lock
and
repnz
mov
nop
jbe
stc
xor
adc
lea
out
xor
shlb
jp
and
cmp
dec
lret
fisubs
xorb
mov
cltd
dec
mov
sbb
aaa
ljmp
add
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
dec
or
adc
stc
push
ljmp
adc
lea
cmp
outsl
dec
xchg
sub
inc
cwtl
loope
sbb
ja
mov
xchg
aad
int3
mov
movsb
xchg
jmp
inc
pop
cmc
stc
sub
mov
mov
dec
jns
or
cmpb
inc
xorb
std
in
negb
jp
and
mov
insb
mov
sbb
add
ficoms
xlat
push
out
je
xchg
xchg
xchg
fmuls
or
into
repnz
out
jl
cmp
fs
xor
sti
mov
movsl
iret
sbb
nop
repz
jp
movsb
popa
push
fmuls
mov
rolb
leave
jnp
sub
dec
ret
sbb
xor
jnp
es
xchg
out
pop
cld
inc
mov
xorb
cld
addr16
stos
sahf
insb
push
vpmaxsw
in
fldl
cmp
out
sub
push
sub
jnp
pusha
dec
xchg
outsl
cmp
and
mov
aad
jl
pushf
xchg
and
adc
clc
xchg
shld
jmp
repz
xor
cld
mov
lea
call
rorl
test
testl
adc
cltd
sbbl
xchg
repnz
sub
pop
stc
xchg
cli
loop
ret
add
cmp
or
xor
pushf
in
dec
lret
sub
das
adc
sti
sbb
loope
frstor
and
inc
xor
mov
push
lock
daa
mov
adc
mov
mov
xor
mov
rolb
and
stos
movsl
cmp
sbb
rcrb
ss
jae
and
pusha
sbb
or
and
sub
cmp
sub
stc
adc
in
into
lret
sub
xlat
and
mov
adc
and
add
sbb
enter
cltd
outsl
mov
xor
pop
int
mov
jl
frstor
insb
ret
cmp
les
sarl
enter
push
pop
aad
jb
push
out
mov
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
inc
xor
mov
stos
movlps
cwtl
jbe
ljmp
jg
pusha
or
push
sbb
pop
lods
mov
adc
push
and
push
mov
jmp
or
xor
xor
or
sub
lahf
pop
aam
wrmsr
sbb
jl
push
xrelease
jne
mov
clc
xor
test
cmp
xchg
dec
lock
push
or
call
jle
aad
mov
push
xlat
push
hlt
insb
ds
jecxz
fimull
lds
out
ret
xchg
sti
pop
xchg
icebp
outsl
das
dec
add
pop
fwait
mov
ja
and
mov
enter
bound
inc
addr16
sar
fidivrs
out
stc
ret
mov
ljmp
add
pop
mov
add
push
stos
iret
sbb
push
test
dec
fisubrl
inc
outsl
xlat
adc
push
pusha
int3
fldt
cwtl
mov
sub
jmp
mov
jne
jg
jle
xchg
enter
add
and
push
enter
lods
rorb
xchg
insb
popa
pop
mov
jbe
je
icebp
mov
mov
jae
addr16
sti
dec
jno
cmp
int
sub
rcrb
addb
jbe
xor
pop
test
stc
in
das
pop
mov
flds
out
hlt
xchg
insb
sbb
cmpsb
sub
test
movsl
sub
push
lods
std
mov
pop
xchg
cld
in
sbb
out
addr16
mov
aam
call
dec
and
mov
sbb
stos
jnp
fmuls
cltd
out
mov
mov
adc
adc
cmp
ret
sbb
mov
push
subb
mov
add
adc
jns
fdivp
shr
jge
mov
jle
orl
sarl
jb
push
adc
icebp
add
into
mov
ret
xor
xchg
bound
scas
inc
pushf
ss
mov
es
test
ljmp
dec
inc
jae
dec
sarl
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
mov
pop
lods
mov
adc
stos
movlps
adc
subl
loopne
imul
jge
bound
push
mov
in
subl
sbb
xor
lock
cmpsb
loopne
call
cmp
jge
or
jecxz
and
or
push
adc
push
fiaddl
es
das
mov
pop
mov
shlb
sub
in
and
imul
mull
mov
rclb
adc
ret
add
popf
dec
sbb
imull
jl
mov
jne
xchg
mov
or
ret
lret
nop
sbb
test
std
jbe
jns
jle
fcomps
aad
xchg
inc
mov
ja
das
push
iret
shrd
and
sbb
pop
insb
mov
and
aam
mov
lcall
in
or
aam
fldcw
xchg
in
ss
xor
arpl
dec
jge
loopne
sub
insb
shrb
dec
cmp
jns
jmp
test
or
inc
jl
outsl
or
jg
jne
inc
mov
adc
push
nop
lods
adc
subl
mov
or
push
lcall
xchg
lods
cs
pop
xor
xchg
sarb
lds
fcom
rcl
dec
cmpsb
jb
test
push
pop
adc
inc
test
mov
rcrl
loop
mov
sbb
mov
jg
inc
enter
push
add
in
pop
jge
js
and
stos
mov
sahf
stos
pop
cmpsl
pop
inc
xchg
dec
mov
iret
push
jecxz
push
xor
jbe
sar
dec
push
aad
sbb
pop
xchg
push
mov
es
out
loop
rep
add
int3
loop
adc
pop
aas
mov
add
dec
lcall
clc
das
int
mov
dec
test
mov
or
sbb
sbb
xchg
add
imul
pop
repz
sbb
cmpsl
testl
xchg
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
cltd
cld
out
pop
out
xor
sbb
popf
mov
sbbl
lahf
jecxz
divb
jge
sub
aam
cmc
cmp
mov
fstl
xchg
mov
sub
inc
mov
dec
addr16
add
cwtl
dec
insb
sbb
jmp
jge
roll
cmpxchg
cs
jle
clc
xchg
lock
sbb
sbb
sbb
push
add
lcall
dec
sahf
pop
mov
cmc
int
dec
mov
roll
and
pop
or
aam
pop
stos
dec
xor
adc
icebp
jmp
xor
mov
adc
adc
or
jne
sub
jno
dec
cltd
mov
xor
add
mov
fisubrs
xchg
xchg
mov
add
add
in
mov
call
fcompl
mov
es
jge
xchg
pop
std
jp
cld
adcb
jge
lods
push
and
dec
repnz
lods
insl
pop
sub
jno
test
cmp
in
in
movsl
decb
ds
in
sub
mov
adc
jbe
inc
mov
aaa
push
sub
pop
arpl
rorl
and
dec
add
fs
fcomi
repz
dec
xor
insl
jo
push
loop
ljmp
sarb
xchg
and
outsb
lcall
loop
push
cmp
xorb
int3
jecxz
pop
rcrl
dec
lcall
adc
mov
bound
push
adc
xor
mov
and
mov
jmp
add
or
sahf
cmpsl
lret
movb
mov
clc
and
ret
std
sbb
xchg
cmp
xchg
dec
ds
and
push
sub
movb
int3
adc
pop
js
push
mov
pop
sub
cmpsb
adc
dec
sub
sub
rolb
and
popa
mov
popf
xchg
jae
sbb
add
imull
lds
jle
xchg
or
and
jp
loopne
jle
jne
mov
lret
and
inc
mov
popl
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
pop
xchg
out
inc
shll
xchg
out
cmp
mov
jbe
stc
test
pop
ja
int3
outsb
xchg
outsl
cmp
fsub
cmp
icebp
repnz
js
leave
inc
out
xor
test
mov
add
mov
sti
es
imul
sub
sbb
xchg
out
cmp
mov
stos
mov
xchg
pop
pop
mov
pop
push
adc
pop
push
mov
in
fwait
mov
pop
insb
lret
jae
inc
jae
or
xor
cmc
rorb
out
idiv
popa
cmp
es
punpckhbw
jle
insb
testb
push
aad
mov
pop
jecxz
or
fisubrl
adcl
cltd
push
lcall
pop
push
cmp
bound
adc
cld
pop
inc
arpl
cs
add
cmp
add
push
cmp
xlat
inc
js
rcll
xchg
add
pop
inc
stc
rep
lret
rorb
rcrb
mov
and
roll
insl
sbb
fdivr
into
sub
rclb
stc
sub
mov
dec
rcll
push
and
cld
inc
jl
nop
jb
mov
aaa
push
ret
dec
aad
pusha
pop
lods
pushf
fsubrs
inc
lock
lret
cmpsl
push
movsl
pop
imul
push
gs
push
leave
movsl
mov
insb
mov
pop
push
push
popl
xchg
ret
sbbl
shrb
sti
xlat
mov
mov
mov
mov
insb
jp
popa
push
inc
popa
xchg
pop
push
pop
mov
ret
fsubl
rclb
xchg
add
cmp
test
sub
adc
scas
shll
lods
push
mov
mov
mov
adc
jo
cltd
sbb
sahf
cwtl
inc
mov
test
dec
cmp
mov
cli
mov
xchg
xor
and
push
push
fnstenv
add
fistpll
sub
jns
dec
cmpsl
sti
repz
push
repz
int
mov
and
mov
mov
dec
inc
and
cli
mov
mov
dec
sub
inc
les
faddl
nop
cmpsb
sub
je
rorb
inc
adc
jb
inc
mov
or
jb
jnp
fsts
inc
aad
mov
add
or
test
jmp
jmp
out
int
pop
sbb
adc
xchg
xchg
pushf
xchg
cmpb
rcrl
lcall
dec
clc
imul
std
sub
jl
mov
push
xor
lods
scas
add
enter
popa
push
idivl
mov
xor
pop
adc
jb
leave
cmp
data16
push
repnz
push
lret
test
push
js
lds
ss
jbe
push
inc
jns
jno
mov
mov
pop
rolb
movnti
pop
sti
pop
and
lret
add
xchg
addl
or
cmp
scas
out
loop
add
add
mov
cmpsb
sbb
test
mov
add
or
test
or
pushf
data16
mov
xor
sbb
jnp
cmp
sbb
dec
cmc
gs
xor
and
or
ds
mov
and
aam
movsb
xor
es
sbb
cmpsb
cmp
outsl
mov
xchg
aad
dec
inc
ds
lods
or
add
fstpl
jnp
mov
xchg
xor
repz
ficompl
jne
adc
iret
in
mov
leave
ljmp
ss
mov
mov
iret
ljmp
sbb
lods
xchg
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
int
stos
loop
adc
pop
adc
adc
add
xchg
sbb
pushf
pop
pinsrw
xor
cltd
in
mov
inc
es
cmp
push
inc
xchg
mov
dec
lds
or
outsl
dec
test
add
rorl
xor
pop
lahf
jge
mov
jge
hlt
add
mov
lods
lcall
iret
push
out
add
push
ja
push
lcall
or
lcall
and
rclb
xor
movsl
mov
push
movsb
bound
mov
dec
xchg
seto
aaa
sbb
or
sarb
lods
mov
jns
and
or
data16
std
dec
sub
ja
mov
in
into
pushf
xchg
call
push
mov
push
ss
icebp
sbb
push
fmull
xor
mov
jecxz
inc
cmpsb
hlt
repnz
xor
fisttpll
or
adc
ror
and
mov
pop
sbb
jmp
insl
adc
int
xchg
mov
xchg
inc
mov
jbe
adc
cmp
xchg
jmp
leave
push
xchg
aad
dec
cltd
add
ret
pop
test
adc
adc
out
fisttpll
mov
dec
xor
push
xor
xlat
push
xchg
mov
dec
pop
lods
lods
xchg
jno
pop
in
add
loop
jp
lcall
sub
jb
jo
lods
xchg
ret
adc
and
out
aaa
and
arpl
pop
push
sbb
sbb
pop
lret
ret
in
pop
push
nop
pop
hlt
fcoms
sbbl
fisubl
xor
sbb
aad
dec
xchg
dec
test
sarl
cld
add
mov
mov
in
les
jns
iret
cmc
push
or
mov
jne
push
mov
jg
dec
sti
push
cmp
mov
cmpsl
in
fwait
aam
inc
sub
scas
mov
push
push
clc
cltd
cmpsb
dec
sbb
jmp
push
fldl
in
sub
stos
dec
pop
dec
and
ja
imul
add
xor
xor
push
lcall
adc
pop
sub
xchg
push
mov
mov
leave
hlt
xor
add
bound
xor
mov
insb
dec
mov
mov
pop
sbb
repnz
insl
add
bound
cmpsl
pop
neg
out
loope
sbb
addl
ret
push
sub
dec
jg
stc
es
frndint
stc
jecxz
hlt
cmpsl
mov
inc
nop
xor
aad
jmp
xorb
xchg
ljmp
push
enter
sti
in
adcb
xor
mov
cmpb
mov
not
cmpsb
jmp
repz
mov
stc
mov
xorb
test
icebp
adc
lcall
mov
adc
mov
fmuls
aam
sbbb
or
mov
lods
push
push
pop
dec
nop
pop
push
icebp
dec
dec
xor
mov
mov
ja
out
int
jle
lods
mov
neg
pop
js
jmp
pop
inc
icebp
jnp
pop
cmp
add
lahf
in
xchg
shll
sbb
ja
cmc
fisttps
push
xchg
mov
movsl
popf
sbb
je
dec
inc
jmp
mov
ds
je
and
push
push
and
outsl
stos
mov
inc
bndldx
imul
std
sti
pop
out
xchg
adc
out
mov
jnp
and
xlat
inc
shlb
sub
test
dec
fistl
test
addr16
push
adc
add
pop
mov
inc
dec
lods
cmp
xchg
nop
inc
ret
add
fbstp
in
dec
sbb
movsl
xchg
fwait
jae
jnp
xor
ja
stos
mov
insl
outsb
sbb
mov
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
mov
ljmp
and
adc
add
pop
sbb
out
and
mov
outsb
mov
cmp
ss
hlt
fisubs
addr16
and
xchg
loope
enter
lret
mov
leave
xor
mov
mov
cs
cltd
popf
jo
add
fld
inc
cmc
insl
pushf
mov
or
inc
arpl
adc
mov
and
int3
enter
enter
clc
cmpsl
sbb
push
xchg
xchg
addr16
and
rclb
or
cmp
push
dec
add
pop
cmp
das
add
cwtl
inc
mov
or
sbb
popf
push
stc
add
dec
mov
jmp
inc
add
out
mov
dec
in
movlps
inc
test
cld
jae
pop
pop
addr16
xor
mov
jnp
stc
xchg
and
mov
loop
dec
hlt
andl
movsb
rcll
in
mov
mov
fistpll
inc
push
sti
add
pop
inc
push
lea
mov
cmp
ss
aad
insl
xchg
mov
movb
push
fcomps
in
pop
shll
inc
mov
mov
xchg
ljmp
mov
fistpll
fldenv
stc
xchg
inc
cmp
xor
idivb
xor
inc
jg
sbb
mov
fucomip
sbb
dec
sub
mov
imul
cwtl
lods
add
cmp
dec
jno
scas
xchg
dec
sbb
popa
mov
das
filds
addl
hlt
pop
in
dec
insb
insb
icebp
jb
lahf
bound
insb
cmp
repz
xchg
mull
ljmp
mov
xchg
cmpsb
and
push
movsl
xor
testl
jae
sub
mov
push
xchg
es
fistpll
dec
dec
cli
and
inc
mov
add
out
add
das
mov
out
lahf
stc
inc
call
ds
jl
jo
jne
cmp
jecxz
pushf
jae
push
es
push
push
stos
dec
sbb
pop
outsb
les
inc
push
call
mov
lds
js
jne
xor
xchg
push
and
cmpsl
jp
xchg
xchg
pop
dec
jb
push
sbb
cmpsl
mov
outsb
xor
push
dec
lods
cmp
in
adc
mov
push
pop
cltd
daa
enter
xchg
pushf
mov
jae
jae
fucomp
movsb
or
mov
push
rorl
xor
aas
mov
ds
mov
mov
push
jne
push
xchg
inc
mov
daa
divl
leave
cld
mov
lret
fnstcw
push
pop
and
std
stos
cmp
inc
aaa
test
push
fwait
call
sub
inc
test
ds
cli
out
xchg
ficoms
fbld
jo
xorl
adc
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
ret
out
jno
loope
sarl
dec
not
mov
sahf
pop
movsl
cmp
mov
stos
sbb
ror
jnp
add
out
ds
push
scas
cld
pushf
insb
repz
cltd
popa
fisttps
enter
es
repnz
inc
pop
cmp
nop
push
pop
mov
out
fadds
into
and
push
fmull
fstp
lock
jp
in
repnz
add
jmp
jecxz
sti
in
inc
mov
sub
imul
out
out
fdivrs
idivb
pop
xchg
jae
or
aas
mov
jg
mov
mov
jg
dec
push
mov
mov
sub
mov
lea
pop
hlt
mov
adc
gs
push
dec
jp
push
int3
mov
xlat
xchg
out
dec
inc
or
jno
addr16
dec
in
dec
push
inc
filds
pushf
cltd
mov
jbe
and
xorb
inc
je
add
xchg
xchg
fs
inc
and
push
sbb
clc
das
mov
fsubrl
and
inc
sub
pop
dec
mov
ljmp
add
mov
addr16
mov
stos
xor
std
jp
lcall
mov
inc
ds
js
jg
push
and
not
pop
add
cmp
jp
and
inc
stc
stos
loope
cmp
sahf
sbbb
ficomps
push
add
loop
pop
dec
xor
inc
adc
pop
push
inc
addr16
jecxz
addl
sbbb
cs
dec
lods
je
pop
xchg
rol
add
inc
repnz
idivb
pop
imul
pop
jge
out
jg
adc
mov
loope
mov
sbb
scas
inc
fcoms
push
fcmovnu
xor
cwtl
cmpsl
loopne
lcall
jbe
sub
lahf
faddl
push
sti
and
stc
aad
mov
bound
insb
mov
lods
adcb
dec
movsb
lods
into
mov
adc
cmpsl
fwait
xchg
dec
or
pop
push
sbb
cs
cmpsb
mov
das
jno
test
mov
mov
pop
xchg
mov
xchg
push
data16
fisubl
aaa
filds
pop
xchg
xchg
ret
hlt
push
xchg
fsub
add
add
mov
pop
jne
add
mov
sbb
mov
lock
repz
test
pop
rclb
sbb
push
xchg
enter
jbe
or
jg
jecxz
cwtl
mov
xchg
out
ror
add
adc
add
fildl
test
jg
daa
aad
das
lret
call
outsl
and
shll
es
cmp
sbb
add
fcmovu
and
cmp
push
out
lock
aaa
mov
jbe
and
test
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
aam
add
adc
movlps
dec
fldt
loope
in
mov
test
test
repnz
sub
les
js
sbbb
shrl
sahf
fcomps
cld
adc
rcrb
cli
test
dec
lds
ret
cmp
mov
ret
or
sub
xchg
mov
orb
stos
lahf
cmpsl
movsb
out
or
fadd
dec
stos
in
repnz
push
adc
push
xchg
xchg
inc
lahf
pushl
add
enter
pushf
fs
sub
or
mov
inc
fwait
out
ja
dec
aas
mov
mov
sub
fcomi
lock
fimuls
ret
fsubl
cmp
sub
negb
pop
jl
jne
inc
rolb
dec
lds
cmc
fucom
pop
or
ss
lods
sahf
fisubrs
mov
dec
pushf
cmp
cmpsb
xchg
sbb
fildll
inc
sti
fdivrs
xchg
xchg
aad
fildl
leave
pop
fadds
jb
lret
xor
rcl
fidivs
jnp
push
cmp
inc
popa
or
xor
or
inc
cmp
mov
add
out
adc
xchg
dec
ficoms
inc
xchg
xchg
sbb
es
mov
xor
mov
arpl
inc
scas
scas
mov
mov
sbb
pop
test
sti
out
cmp
mov
lcall
push
xor
dec
inc
icebp
das
shll
int
outsl
xchg
shrl
aaa
add
jle
mov
push
daa
xchg
adc
sub
add
sbb
test
call
or
stos
xchg
and
flds
testb
jnp
mov
push
pop
mov
mov
aam
and
repz
xchg
les
cmp
repz
cwtl
fisubrs
je
xchg
cmp
movsb
addr16
adc
in
pusha
ljmp
test
enter
inc
mov
sbb
pmaxsw
mov
lcall
mov
lcall
sub
cmp
or
jae
push
cmp
cmp
inc
cmc
inc
int
mov
sbb
or
mov
sbb
nop
insl
mov
lods
dec
mov
fnstenv
push
push
pop
lock
xchg
pop
or
sub
ss
mov
int3
inc
jae
fidivl
pop
cld
subl
inc
ficompl
lcall
bound
push
pushw
adc
cmpl
out
fcmovu
insb
out
pop
pop
subl
popa
xor
jmp
pusha
test
call
in
movsl
ret
in
cmpsb
fwait
dec
push
cmc
inc
mov
fisttpl
int3
dec
pop
cmpsb
bound
repnz
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
sbb
jae
adc
mov
sub
xchg
and
cs
jno
sbb
insb
stos
cmc
cmp
lds
fbld
sub
stos
mov
dec
pop
jmp
outsb
pop
add
idivb
xor
inc
mov
aaa
push
pop
jmp
cmc
sub
addr16
loopne
inc
les
popa
push
xchg
lea
js
and
fs
lods
xor
jno
xor
pop
push
jecxz
int
out
cld
mov
or
fistl
stos
aam
inc
sbb
mov
pop
xor
std
pop
rol
sti
ljmp
and
and
iret
ja
xor
jb
stos
mov
cmpsl
in
sahf
and
rorb
pop
rorl
jae
sti
pushf
out
mov
rol
lds
ret
jecxz
ja
inc
xchg
stos
das
cmp
or
jle
iret
mov
sbb
fs
mov
insl
jno
dec
idiv
or
or
sub
stos
mov
stc
repnz
cmp
xchg
repz
dec
mov
fistl
xorl
xorl
das
sub
dec
pop
shr
cmpsb
inc
and
mov
popa
mov
push
mov
stos
out
sub
xor
popf
or
mov
push
cmp
push
add
out
ljmp
into
cmp
leave
dec
iret
js
fidivrl
mov
jle
xor
adc
pop
xor
mov
jp
sbb
pop
mov
add
adc
add
repnz
ljmp
call
cli
cli
inc
mov
and
dec
jne
xor
shlb
imul
call
jle
cmpsb
pop
unpckhps
jnp
sub
lods
or
inc
in
cmp
fisttpll
sub
lock
fsubrp
insl
dec
cmp
xchg
leave
movsl
lret
call
rclb
pop
repnz
mov
sbb
dec
add
push
mov
add
add
int3
cmp
sub
mov
cmc
insl
fcoms
pop
cmpsl
sbb
jae
mov
dec
ss
cld
jecxz
rcr
fldcw
xchg
sbb
int3
pop
cltd
or
xor
sti
lret
cmpsl
out
test
mov
mov
push
or
sub
fcomps
dec
xlat
mov
fwait
outsb
sub
jmp
test
and
sti
insl
mov
rol
mov
xlat
push
sarl
or
sub
scas
cmp
stos
jcxz
mov
loop
int
or
add
fwait
mov
xchg
int
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
jno
pop
cmc
movsb
fldl2t
mov
push
pusha
inc
mov
imul
or
add
out
mov
inc
jnp
incb
es
xchg
ds
mov
js
cmpsl
imul
and
adc
std
jo
in
sbb
imul
je
rcrl
fstpl
xchg
mov
je
orl
leave
mov
jmp
lock
es
lret
mov
lock
push
lret
std
cmp
mov
aam
sbb
ret
sbb
lods
sbb
adc
jns
jp
add
sbb
pop
mov
scas
loope
fmulp
pushf
lcall
mov
mov
mov
pop
pop
movsl
mov
stc
mov
mov
pop
xchg
adc
into
cmp
div
mov
mov
lods
jle
adc
xor
movsb
pop
xor
mov
cs
lret
sbb
int3
push
push
sarl
push
jl
dec
jp
subl
out
mov
aaa
xchg
stos
cs
pop
or
or
cmpsl
mov
lods
and
pop
cltd
mov
xchg
and
cmp
shlb
jnp
pusha
mov
mov
jns
push
nop
mov
into
adc
mov
loop
pop
lret
inc
add
inc
sub
push
xchg
and
dec
ret
cld
shll
mov
inc
sub
mov
add
into
jle
jg
or
lock
cmp
faddp
mov
lds
inc
pop
dec
loop
loop
aas
repnz
cmpb
mov
sub
dec
push
inc
and
mov
notb
jnp
jb
and
ljmp
mov
push
ds
jp
cmpsl
out
push
and
sarl
dec
cs
in
imul
xlat
std
jg
fdivr
xchg
rcl
and
add
aas
es
push
scas
leave
xchg
sbb
jmp
mov
lods
pop
fs
insl
and
sbb
stos
outsl
mov
and
cld
pop
jmp
cmp
push
iret
push
dec
sub
jle
xchg
call
fadds
in
js
jge
punpcklwd
mov
aad
dec
mov
lods
adc
mov
mov
rol
scas
les
pusha
movsl
gs
push
notb
jmp
outsb
xchg
sbb
int
xchg
dec
aam
fbstp
nop
or
orl
xchg
sbb
jle
subl
clc
and
xchg
push
cmp
jge
pop
lds
into
lock
push
call
sub
mov
mov
sub
cwtl
shr
push
mov
ss
lea
pop
loopne
cmp
in
aad
stos
clc
leave
sub
das
fistl
enter
or
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
sub
pop
lods
repz
or
xor
adc
add
jbe
dec
test
cmc
pusha
iret
xor
rcrb
pop
stos
or
sbb
jg
aam
mov
sub
enter
pop
xchg
sub
rcrb
push
int
xlat
mov
sbb
xor
xchg
out
sbb
and
int
sbb
xchg
sbb
popa
arpl
stc
mov
out
cli
bound
lods
push
cwtl
sub
in
xchg
out
sub
imull
dec
nop
scas
mov
dec
and
pop
icebp
pop
pop
das
push
stc
mov
cmc
dec
adc
fdivrs
pusha
test
fcomps
test
stos
mov
pop
adc
and
das
jmp
inc
pop
nop
push
jmp
inc
or
jecxz
movsb
divb
in
sub
cmp
imul
add
inc
push
jmp
xlat
pop
mov
xchg
cmp
and
jne
imul
popf
lret
lock
fidivs
shrb
or
adc
stc
inc
outsl
add
aaa
lods
orl
cmp
pop
pushl
iret
inc
sbb
sub
mov
or
push
into
inc
stc
stos
fisttpll
ljmp
cli
mov
lret
adc
sub
aas
adc
dec
adc
andb
stos
je
es
push
sbb
clc
rcr
lret
imul
aam
or
stc
imul
push
aad
add
sbb
lret
sarb
sub
inc
jle
repnz
leave
jbe
imul
sti
jmp
inc
sahf
dec
es
cmpsl
lods
mov
push
fcmovbe
cmp
add
test
mov
dec
inc
jbe
test
out
xchg
sbb
mov
ja
scas
inc
addr16
push
mov
cmp
xchg
jl
fidivrs
push
push
push
clc
push
fdivrs
dec
ror
adc
jns
jno
lret
inc
cmp
cmp
lods
inc
aas
fyl2xp1
mov
cmp
fdivp
cmpb
in
push
je
xor
sub
mov
cmp
dec
jp
sub
test
pop
fcom
enter
mov
mov
mov
mov
xchg
ja
or
inc
dec
orb
mov
outsl
mov
pop
lahf
mov
xchg
inc
stos
das
dec
adc
xchg
mov
mov
mov
xor
xchg
in
cld
xor
or
shrb
mov
fadds
and
add
pop
or
xor
push
cli
mov
inc
dec
dec
mov
rcll
mov
stc
add
mov
mov
mov
lock
mov
nop
and
jbe
mov
roll
add
fisubl
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
ja
sti
xor
push
xchg
inc
mov
fs
int
mov
jmp
jno
cmp
loope
or
mov
fwait
xchg
mov
jg
stc
push
sahf
sbb
mov
add
mov
fstpl
xchg
adcl
dec
mov
cmpsl
mov
xchg
pop
iret
decb
cmpsb
mov
sbb
add
in
jo
mov
ffree
int3
pop
mov
jno
mov
add
add
bound
popa
nop
hlt
mov
es
sub
pushf
cmpsl
dec
stc
inc
xor
fcompl
ret
je
test
sub
aad
in
andb
pop
leave
mov
push
fwait
gs
ljmp
pushf
in
popf
pop
jnp
jo
jg
mov
mov
sub
inc
xorl
cmp
testl
test
mov
loopne
ret
pop
inc
or
lods
mov
xor
inc
adc
cmc
cmp
fistl
inc
inc
nop
adc
dec
dec
outsl
addr16
dec
loopne
lret
imul
push
cltd
not
sub
insl
ret
xorb
shl
hlt
inc
lods
add
push
lods
lods
mov
mov
nop
imul
and
xchg
and
jne
stc
shrb
xchg
sub
inc
cmc
pusha
lret
push
leave
cmp
fistl
xor
loope
aad
mov
test
push
addr16
test
mov
in
mov
ss
jle
dec
adc
shl
js
push
in
add
xor
sbb
jnp
xchg
aas
mov
mov
sub
xor
jle
jbe
jecxz
mov
pop
and
insl
and
negb
lahf
pop
sti
jnp
push
xor
mov
scas
aam
imul
mov
lahf
and
xchg
inc
xlat
push
dec
dec
std
push
mov
cltd
inc
fisubl
xor
mulb
xchg
arpl
fisttpll
mov
sub
mov
add
jg
nop
or
pandn
xchg
jae
insl
fcmove
push
push
push
xor
inc
daa
in
stc
std
jo
jg
xchg
fbstp
push
cli
cmpsl
ljmp
inc
adc
cmpsb
insl
sbb
mov
add
xchg
ds
cmp
enter
and
ret
dec
cmp
push
lcall
jl
sub
mov
mov
stos
out
nop
movsb
aaa
cmp
fisttps
push
xorl
pop
jns
es
jecxz
loop
push
mov
jb
enter
pusha
push
data16
mov
cmp
mov
and
push
xorb
rcrl
lret
arpl
int
stos
stc
bound
and
leave
lods
sbb
jmp
out
leave
xchg
mov
test
iret
aad
das
inc
xchg
in
xchg
sub
mov
push
xchg
xchg
add
inc
bound
enter
mov
add
xchg
in
repnz
insb
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
clc
jbe
inc
pop
adc
jp
adc
das
leave
mov
sbb
js
push
sub
xor
dec
icebp
sub
cmc
imul
xchg
out
testl
dec
call
dec
adc
xchg
push
xor
cs
stc
pop
pop
pop
cli
loope
jg
dec
mov
enter
js
dec
loopne
out
ret
popw
adc
jg
sub
lods
adc
outsl
sub
cmp
jae
mov
mov
push
push
sti
xor
enter
mov
xchg
xchg
xor
fstps
rcll
aaa
cmp
xor
jmp
xchg
lods
cmpsb
and
adc
rorl
sbb
lea
pop
in
jg
push
adc
lahf
dec
cmp
adc
sub
push
adc
stos
outsb
in
or
xor
push
loop
ljmp
stos
mov
sub
adc
fstpt
pop
lret
pop
call
dec
xor
nop
inc
aad
imul
push
dec
sub
mov
lcall
mov
and
mov
and
mov
or
in
dec
mov
call
or
ja
aam
popf
fistl
cmc
cli
cmp
jb
push
push
adc
test
test
sub
std
xor
push
in
jnp
sbb
adc
inc
cmp
adc
push
jnp
cmp
push
mov
scas
jl
aad
pop
adc
or
push
mov
mov
mov
xchg
and
gs
mov
cmp
or
mov
enter
addr16
mov
mov
mov
std
xchg
aaa
sub
insl
mov
pop
outsb
in
shrb
loope
test
in
aad
add
ljmp
aaa
pop
mov
sbb
sub
adc
shl
mov
test
sbb
sub
cli
call
pop
xor
leave
fdivrs
rep
xchg
add
jae
ret
lcall
and
xchg
mov
cmp
inc
cli
sbb
outsb
div
std
and
sbb
lods
push
mov
mov
jmp
mov
dec
xorps
adc
divl
pop
cmp
dec
test
mov
loope
adc
sar
clc
cs
inc
adc
mov
movsb
loopne
iret
into
push
shlb
and
in
cmpsb
out
lea
dec
shlb
dec
pushf
xchg
aam
test
jmp
lods
inc
inc
adc
iret
push
cmp
add
inc
out
dec
pop
inc
dec
inc
cltd
mov
aaa
mov
insl
mov
cmp
lock
enter
int3
xchg
pop
mov
mov
idivl
jo
popf
add
repnz
mov
inc
jecxz
in
lds
jns
out
adc
and
fadd
ljmp
ror
inc
and
sahf
xor
aam
sahf
sbb
mov
jbe
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
arpl
adc
jp
adc
pop
xchg
std
cmpb
xchg
jecxz
mov
in
es
mov
flds
xchg
and
test
jg
adc
inc
out
cmc
jmp
lahf
mov
pusha
fiadds
fisttps
stos
cmpsl
cmp
pop
test
mov
jbe
leave
inc
fldcw
xchg
shlb
or
jecxz
jp
sub
fdivs
jbe
inc
cltd
cwtl
cmp
shl
lods
dec
cwtl
cmpsb
in
and
test
mov
jl
in
cld
call
jg
or
imul
mov
dec
adc
xchg
inc
mov
lods
aad
mov
in
push
pop
div
pop
test
ja
cmp
push
out
int3
push
mov
js
repnz
or
imul
dec
stc
xchg
jbe
mov
push
sub
dec
push
jo
popf
popa
adc
lock
int
dec
jmp
aaa
cld
cmpsb
push
sub
lret
fisttpll
sub
insb
idiv
ds
rclb
ds
cmpsb
cs
mov
xchg
jae
les
hlt
xchg
mov
push
sbb
jae
adc
pop
mov
xor
ja
mov
add
arpl
loopne
pop
mov
push
movsl
loop
loopne
mov
adc
mov
dec
daa
test
out
adc
sub
or
or
subl
sti
dec
cld
lret
or
notb
or
mov
cmp
imul
rcr
ficoms
sub
mov
and
sbb
aam
cmp
push
icebp
mov
adc
sbb
daa
add
jne
mov
push
jle
or
xchg
scas
mov
sbb
popa
xchg
sbbb
add
pop
mov
add
sti
mov
inc
push
cwtl
stc
faddp
sbb
xchg
sub
cmp
mov
xchg
inc
lock
adc
insl
lds
incl
sub
rcrl
dec
js
orl
jg
test
mov
inc
gs
dec
ss
leave
add
adc
leave
lock
mov
das
xchg
int
adc
xchg
push
mov
inc
in
push
xor
adc
sbb
cwtl
push
ret
dec
xor
fwait
jno
pop
shlb
jmp
rcrb
popa
xchg
adc
push
inc
push
mov
data16
cmpl
push
movsl
mov
and
das
pop
add
or
cmp
jns
test
and
adc
loop
std
inc
jno
mov
out
or
enter
arpl
fiaddl
xor
mov
jg
push
sub
cmp
sahf
ja
cltd
fdivrs
lret
loope
leave
jo
xchg
cmp
xor
scas
lcall
fisubl
or
fimuls
lods
sti
mov
sub
dec
mov
push
mov
scas
stos
inc
insl
scas
mul
popf
jle
pop
or
leave
out
cltd
clc
adc
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
mov
adc
adc
lcall
mov
dec
into
stc
popa
mov
dec
das
inc
or
sub
scas
xchg
mov
mov
lea
push
iret
in
lock
fs
data16
shrb
js
movsl
fildl
into
mov
cltd
mov
or
test
push
cmpsl
mov
pop
shl
in
cld
cli
add
mov
movsb
pop
in
addr16
aas
jecxz
adcl
and
js
insb
mov
xor
fiadds
mov
mov
daa
pop
mov
dec
lock
cld
inc
xchg
in
sub
aam
aam
cmp
xor
imul
mov
insb
mov
into
add
sbb
sub
inc
xorb
lret
call
push
scas
add
jge
dec
mov
hlt
xchg
push
or
es
enter
cmp
daa
test
push
jmp
jg
pop
xor
jle
rolb
mov
iret
outsb
scas
frstor
jg
call
push
testl
dec
mov
cltd
fadds
test
jecxz
call
dec
jne
and
lock
xor
mov
sbb
mov
imul
mov
inc
fsubrs
rol
xchg
mov
cmp
add
loop
movsb
pop
jae
sbb
and
hlt
dec
shlb
inc
js
dec
or
jp
mov
xchg
lcall
dec
xor
divl
daa
sub
lret
jge
adc
ret
cmp
push
movsb
addr16
push
pop
pop
push
push
loop
push
pusha
xchg
inc
cld
icebp
pop
loopne
jo
mov
ds
xchg
and
xchg
popf
sub
fstpl
sub
enter
add
fidivl
fldcw
outsb
enter
dec
andl
xor
jle
add
loop
ror
lds
movsl
les
sbb
and
or
movsl
sub
jns
inc
insb
mov
into
inc
popa
push
dec
xor
popa
add
mov
and
push
pop
xorb
jl
jecxz
pop
test
daa
cmp
add
cmp
push
sbb
decb
jmp
inc
popf
sbb
pusha
ljmp
icebp
cmp
mov
mov
sti
notb
lret
push
cld
push
cltd
and
jl
filds
add
inc
cmpsb
xor
xchg
xchg
or
mov
int
jmp
cmp
mov
sub
mov
cld
xor
pop
mov
dec
hlt
adc
push
mov
sub
xchg
lcall
ja
sub
jg
paddq
lahf
lods
xor
imul
and
hlt
rol
sbb
ljmp
add
repz
clc
push
xchg
sub
jmp
mov
mov
movhps
xor
pop
mov
lods
xchg
sbb
xlat
mov
call
in
sbb
pop
cwtl
gs
and
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
xor
push
inc
adc
lea
adc
adc
sbb
fcompl
xor
sarl
pop
imul
dec
inc
xlat
mov
xor
xchg
jle
push
sti
xchg
leave
aad
lds
jmp
xor
xchg
sub
fidivrl
mov
mov
adc
das
push
pushf
pop
push
xchg
repnz
jnp
cmpb
cmp
push
in
mov
arpl
call
les
mov
mov
test
jge
push
and
mov
xor
nop
or
out
push
orb
jno
pop
test
lret
sahf
lea
push
shll
xor
scas
fldcw
dec
dec
popa
jno
cmp
inc
orb
pop
lcall
xor
mov
jl
xchg
cld
xchg
xchg
push
sub
lret
adcl
mov
xor
pop
repz
dec
je
dec
mov
mov
xor
dec
sub
inc
dec
mov
into
jae
and
cld
pop
mov
add
xor
jl
push
movsl
std
add
fidivl
fsts
es
lock
jo
aad
mov
mov
sahf
cmpsl
dec
cmp
cmp
lea
es
cmp
mov
cmp
and
arpl
sbb
mov
stc
loopne
jle
sti
dec
fwait
scas
add
les
ljmp
call
dec
fstpl
fcmovnb
or
pop
sub
cmp
bound
das
sbb
out
add
jmp
int
scas
movb
push
repnz
int3
inc
mov
mov
push
mov
pop
or
orl
or
in
sahf
cmpsb
add
pop
inc
call
add
or
cmp
leave
lods
ficompl
mov
insl
mov
jp
lock
ret
stc
int
in
test
popa
mov
mov
cmpsl
mov
mov
faddp
sbb
int3
repnz
and
pusha
cmp
test
call
faddl
fs
mov
test
rcrb
call
bound
out
imul
or
insb
and
pop
std
fs
test
loope
movsb
btc
fisttpll
adc
daa
ljmp
push
inc
call
sbb
not
mov
mov
push
lods
mov
pop
cli
fsubr
push
inc
pop
movsl
mov
push
dec
int3
cli
sub
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
xor
jecxz
into
jecxz
pop
hlt
mov
nop
in
cmpl
andb
pop
fcomps
jl
ss
mov
popa
rcrl
lock
pop
cld
add
or
jno
int3
dec
mov
sahf
or
loope
mov
adc
cmp
push
or
cmpsl
les
stos
and
test
fmul
xor
ds
loopne
pop
clc
mov
pushf
dec
leave
icebp
lret
lahf
in
insl
or
lock
imul
push
outsb
lea
xor
inc
xchg
add
sahf
push
dec
mov
and
fwait
incl
dec
js
pop
add
enter
inc
jg
xchg
hlt
enter
ror
test
loop
in
jle
pop
mov
mov
adc
cs
into
push
mov
jp
dec
mov
pop
loop
push
mov
xor
sbb
cmpsl
inc
or
hlt
movsl
in
cltd
adc
inc
cmpsb
shll
pop
mov
loope
shlb
sbbb
stc
cmp
inc
mov
loopne
sub
mov
aas
ficoml
pop
xchg
mov
mov
add
mov
xchg
or
xlat
sbbl
arpl
sbb
pop
dec
jno
add
xchg
lahf
pop
fisttps
scas
addb
push
out
sub
lahf
cmp
movsb
imul
ja
sub
xor
pop
jg
xchg
ja
and
add
push
dec
subb
push
in
scas
sbbb
add
outsb
xor
mov
cmpsl
mov
bound
or
out
movsl
sub
loopne
push
test
mov
movsb
mov
je
or
dec
dec
mov
ja
fcomps
test
xchg
imul
add
sub
inc
xor
xchg
lds
adc
dec
aaa
test
mov
xlat
pop
in
xchg
cld
subb
ret
test
and
pop
scas
sbb
mov
fmuls
lods
int3
mov
aam
in
rcrl
filds
mov
dec
fnsave
jae
adc
pop
lock
or
or
xchg
or
and
or
sub
ret
sti
arpl
sub
adcb
cs
clc
inc
cmpb
push
jb
ret
sbb
cmp
lcall
push
xchg
addr16
and
mov
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
js
or
inc
and
xchg
gs
mov
mov
rcll
pop
clc
imul
and
xchg
aam
dec
leave
push
ud0
pop
add
clc
sub
ficomps
dec
ja
mov
dec
cmp
sub
pushf
mov
pop
stos
dec
dec
in
xchg
pushf
dec
flds
out
stc
dec
and
fldcw
fs
ss
mov
pushf
dec
cmc
push
cmp
dec
cmp
cmp
push
scas
add
adc
fincstp
dec
xchg
jbe
scas
test
pop
or
aaa
lea
sub
in
jno
cs
inc
test
outsl
std
push
push
sbb
imul
xchg
movsl
inc
pusha
pop
dec
lea
inc
cld
clc
xor
addr16
mov
dec
mov
pop
cs
call
inc
mov
cmp
ficoml
lret
stos
neg
and
das
push
jnp
sbb
fnstcw
xchg
xchg
movsl
push
leave
sbb
mov
xlat
mov
xor
lret
lock
sbb
xchg
insl
mov
sarl
icebp
jg
push
mov
testb
pop
pop
negb
pop
push
mov
mov
jae
in
or
icebp
or
je
adc
dec
cmp
arpl
cs
stos
jmp
mov
sar
push
mov
xlat
in
scas
push
aad
fcmovnu
test
pop
cli
jl
xchg
cwtl
pusha
mov
lcall
jg
inc
sbb
jge
ror
es
xlat
push
ja
repnz
das
ja
ror
mov
mov
sub
pop
and
push
push
adc
aam
dec
das
xor
insl
imulb
inc
adc
mov
jl
aaa
fldenv
outsl
and
fnstsw
jg
mov
sbb
sbb
dec
pop
lds
jbe
nop
dec
mov
mov
fbld
and
in
cmp
mov
std
pop
pop
icebp
xlat
stos
rcrb
ret
das
mov
add
xlat
sbb
scas
ss
hlt
fmull
push
add
mov
add
sbb
pop
mov
mov
mov
sub
adc
jbe
add
mov
xchg
test
jg
popl
ret
mov
dec
push
idivb
push
adcb
js
addl
xor
push
call
gs
cli
inc
or
jne
test
push
sub
test
scas
repnz
inc
aas
test
fbld
mov
stos
push
loope
adc
push
add
ds
cmpsl
imul
cld
mov
mov
out
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
xlat
mov
stos
lret
aaa
adc
lea
adc
inc
int3
jae
inc
jmp
test
addb
fstps
mov
fs
jmp
xadd
rclb
in
sarl
scas
jmp
jmp
test
and
test
cli
rcrl
jae
push
stos
jg
inc
sti
or
mov
aad
xor
shrl
jbe
sbb
sbb
insl
cld
lcall
sub
fmull
sbb
es
mov
iret
push
xchg
ljmp
push
inc
mov
adc
out
out
push
mov
push
push
mov
out
lods
addl
mov
cmp
pop
lret
lods
mov
inc
iret
or
jno
lea
rcll
fidivs
xlat
imul
push
jns
or
dec
test
sahf
and
mov
pushf
je
nop
xchg
inc
sahf
xchg
add
adc
std
sbb
daa
push
fs
out
or
dec
loope
add
sub
popa
popa
cltd
adc
clc
out
lock
sbb
fsubrl
js
jno
lret
mov
fildll
inc
leave
cmpsb
add
imul
pop
stos
jbe
jns
xchg
cltd
mov
repnz
mov
roll
ja
call
dec
or
nop
push
rorl
dec
or
push
xor
xchg
xchg
and
shlb
cmp
inc
dec
rorb
outsl
mov
fdivs
sub
mov
lods
inc
adc
and
stc
out
inc
cltd
jno
pop
call
fwait
inc
out
lds
xchg
mov
dec
inc
gs
xor
pop
cmc
stos
xchg
leave
popl
scas
mov
jle
cmc
cmp
lahf
jne
stos
mov
xor
sub
push
add
roll
leave
xor
mov
bound
xor
adc
out
xchg
push
ljmp
adc
in
adc
inc
xchg
xor
scas
xchg
mov
ret
int3
inc
cmp
ficomps
ret
pop
sub
stc
lahf
add
popa
lret
xchg
aaa
sub
imul
sub
mov
mov
jbe
add
or
loop
pushf
jnp
fsubr
divl
inc
sbb
add
add
mov
loope
cmp
xorb
adc
inc
loop
push
leave
adc
mov
inc
add
mov
scas
ficomps
into
dec
or
es
xchg
out
popw
pop
ljmp
in
es
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
mov
adc
lea
adc
xchg
sbb
int3
test
cmp
add
add
pop
xor
sbbb
xchg
nop
jo
in
xchg
imul
jae
inc
out
push
xchg
addb
sub
xchg
decl
in
mov
popf
cmp
add
mov
push
and
hlt
insl
fdivrs
js
mov
icebp
fimull
decl
movb
fisttpl
push
in
dec
sbbb
xchg
pop
faddl
xor
test
les
jl
jns
loopne
xchg
in
out
inc
pop
into
dec
ret
test
sbb
push
sbb
mov
cmp
stos
push
push
cmovs
inc
jmp
scas
lret
clc
sbb
mov
incl
daa
sub
test
rcrb
jbe
fisttpll
sarb
lods
arpl
adc
cld
sbb
fcompl
icebp
loop
lret
imul
xchg
inc
mov
xor
lds
push
and
ffreep
jo
mov
xchg
data16
mov
fists
out
inc
es
sub
pop
inc
pop
cmpsb
psubb
sbb
add
mov
jo
testl
fwait
push
imull
adc
mov
jbe
inc
cwtl
adc
or
imul
out
popf
add
popa
mov
outsl
lcall
xor
mov
jnp
adc
shlb
sub
lds
mov
cmc
sahf
sub
push
in
push
data16
clc
ret
dec
cmp
pushf
xor
inc
test
leave
std
xor
scas
adcb
pusha
sbb
or
dec
or
and
dec
xchg
pop
sarb
orb
add
push
movsb
loope
cli
aam
test
aam
daa
fdiv
mov
pushf
scas
in
push
fcomp
mov
push
roll
fs
adc
pushf
mov
xchg
cmp
stc
mov
push
or
daa
fstpt
xchg
int
pop
and
mov
mov
out
mov
insl
imul
ror
xor
mov
mov
aam
or
cmpl
movsb
push
outsb
push
and
xor
aad
inc
enter
ss
rclb
mov
jg
sub
mov
jl
in
sub
mov
xchg
into
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
cmpsb
icebp
stos
mov
movlps
call
mov
out
shll
hlt
push
cld
mov
mull
fwait
and
cmp
cmp
popa
add
vandps
mov
xchg
sbb
mov
notl
popf
ljmp
stc
push
fs
outsb
repnz
or
lds
vpminub
mov
mov
pop
lcall
push
insl
or
inc
push
inc
mov
cld
push
jmp
mov
xchg
or
mov
out
pusha
dec
iret
into
xor
mov
push
inc
adc
shlb
mov
loop
add
push
ficomps
subb
jns
and
or
jp
sub
fisubrs
xor
jne
xchg
pushf
out
fsubl
repz
jg
fmul
sti
pushf
and
xchg
fistps
stc
sub
mov
pop
rclb
dec
xor
jb
jl
xchg
and
xchg
xchg
mov
mov
push
sbb
or
leave
outsl
add
mov
or
push
stos
cmpb
les
pop
inc
xor
int3
jo
mov
fldl
sti
or
fmulp
int3
jnp
inc
cs
xor
mov
mov
and
dec
xor
es
push
push
jne
or
xchg
int
sahf
ret
push
adc
loop
push
inc
cmp
mov
mov
jae
out
jmp
mov
jge
cmp
dec
xlat
sbb
popa
int
jle,pt
mov
fistps
dec
in
sub
aam
ret
out
lods
or
inc
xchg
in
add
and
xchg
lods
push
xchg
lret
sub
jg
push
jne
adc
aas
pop
cmpb
mov
sub
ds
mov
loop
pop
xchg
adc
loop
fs
xchg
add
jb
ljmp
popa
push
sub
sub
push
test
xlat
sub
jmp
jg
mov
insl
enter
mov
and
arpl
mov
ss
aas
push
dec
sub
test
ljmp
mov
and
nop
mov
push
ss
push
clc
mov
jp
xlat
or
mov
int3
cmp
pop
or
lret
out
addr16
aas
cmpsl
sub
fsubrp
out
repnz
cmp
cmpsl
jecxz
lds
roll
cmpsb
fistps
ss
outsl
xchg
mov
adc
iret
jmp
cmp
cltd
mov
or
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
xor
mov
lea
adc
adc
loop
mov
fs
movsb
push
iret
pop
fdivrl
sub
xor
inc
lcall
pusha
xchg
jle
adc
adc
mov
pushf
xor
outsl
insb
or
or
push
xchg
xchg
jo
pop
dec
paddsb
mov
push
or
neg
jp
pop
push
pop
xorb
xchg
mov
push
dec
xor
sarb
push
pusha
loop
sub
icebp
enter
xchg
in
mov
outsl
inc
inc
jo
int
adc
xlat
in
push
push
mov
xor
aam
push
dec
sbb
mov
add
inc
xor
pop
mov
inc
mov
jnp
ljmp
nop
adc
inc
add
stos
das
sbb
scas
mov
sahf
sbb
shrl
jne
aam
lret
imul
lcall
push
push
inc
push
das
cld
mov
rcrl
mov
lds
stos
into
adc
stos
inc
daa
inc
and
scas
sbb
jg
nop
or
or
dec
xlat
scas
jg
xchg
sbb
fcomps
add
iret
mov
mov
out
and
repz
or
and
in
fucompp
in
dec
xor
int
adc
pop
mov
stos
and
stos
icebp
aaa
leave
scas
ss
mov
aas
push
push
rcl
sbb
sti
ret
stc
aaa
les
xchg
xchg
sub
sub
xchg
pushf
sbb
pop
push
jns
inc
dec
push
jle
ss
xor
mov
sbb
mov
push
jp
leave
xchg
test
inc
fidivs
insb
or
or
adc
insl
xchg
mov
ds
sar
ds
adc
divb
xchg
xor
out
std
sub
aaa
and
jl
xchg
inc
stc
and
aaa
fldenv
or
mov
popl
dec
movsb
stc
jns
mov
mov
test
pop
jbe
ja
sahf
ljmp
das
dec
out
xor
aad
push
int3
dec
sti
andb
insl
add
ret
std
jle
mov
das
cmpsb
daa
mov
xchg
dec
dec
xchg
fwait
jo
xchg
sub
das
scas
xchg
repnz
sbb
lahf
cmpsl
into
jns
adc
xor
fcoms
sub
incl
popa
pusha
jl
arpl
movsb
out
sub
push
lret
sbbb
mov
in
and
xchg
rorl
push
int
lods
stos
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
mov
sti
sub
push
add
xchg
pushf
xchg
push
adc
pop
test
xchg
cmp
dec
ret
jnp
pop
ja
lds
cmp
mov
jle
mov
das
inc
mov
pop
xor
out
insb
jno
lock
lods
or
mov
push
mov
or
xchg
inc
jo
mov
mov
out
in
cwtl
jo
testl
adc
sub
dec
out
jp
ljmp
pop
ja
dec
push
mov
popa
xchg
xchg
push
std
jbe
push
std
push
cmpsl
clc
jmp
push
jge
xchg
shlb
ds
or
test
add
xor
cmp
loop
xchg
mov
fsubs
hlt
rclb
xchg
pop
jae
fisttpl
mov
mov
push
or
sar
xchg
pop
mov
lods
fdivr
dec
mov
jp
icebp
sbb
cmp
addr16
or
dec
loop
jne
repnz
mov
lcall
mov
jle
mov
out
add
dec
int3
xchg
jp
cmp
int
inc
mov
es
cmp
pop
ror
adcl
mov
imul
fidivrs
sbb
jle
daa
mov
xchg
data16
fistps
fmull
in
add
out
jnp
pop
add
push
push
lcall
ret
xor
mov
inc
xchg
loop
push
dec
xor
add
pop
fisubs
sbb
mov
jo
call
or
fmul
outsl
inc
mov
aas
dec
test
mov
repnz
xchg
xor
lahf
cs
movsl
out
aaa
adc
test
test
jmp
mov
dec
mov
jno
mov
lret
mov
cmp
jno
test
ja
jecxz
inc
jmp
or
push
push
mov
sbb
jb
icebp
push
scas
cli
inc
sbb
pop
inc
nop
sbb
or
bound
sub
ret
sbbb
ljmp
xor
into
mov
imul
sub
leave
mov
jmp
pusha
pop
xor
pop
rcll
out
xchg
in
sti
and
insb
bnd
jg
cli
popa
lahf
push
cmpsl
push
push
pop
fisubl
aam
scas
in
jns
fucom
push
dec
push
push
test
xor
push
sbb
nop
sbb
xchg
inc
dec
insl
jbe,pt
sub
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
test
push
sbb
adc
add
cmpsb
xor
sub
jmp
mov
cmp
call
pop
in
ret
out
mov
cmp
loope
push
ljmp
xor
loopne
call
ss
pop
mov
mov
lahf
fdivl
ds
sbb
and
out
sub
roll
repz
or
add
cmc
pop
icebp
pushl
mov
popf
in
jo,pn
rcl
aas
pop
aad
sub
mov
hlt
sahf
jmp
in
sub
imul
dec
mov
ljmp
sahf
bound
dec
popf
adc
mov
and
mov
mov
popf
xchg
ret
and
stos
cltd
fincstp
mov
sbb
adc
into
cmp
adc
push
xor
push
xchg
lods
in
rorl
sub
std
mov
xchg
test
orb
gs
scas
xchg
dec
gs
inc
xchg
fsubs
mov
lods
mov
lahf
cmpsl
std
pop
loope
dec
xchg
fmull
inc
movsb
mov
push
loope
sbb
and
lcall
hlt
sub
insl
dec
aaa
sub
lods
xor
xchg
inc
adc
mov
cmp
xor
movsb
pop
inc
xor
push
fnstsw
out
adc
xchg
cmpsl
and
xchg
insb
imulb
mov
mov
push
mov
faddl
xor
js
dec
pop
movsl
pop
jns
cmp
pop
sbb
rcll
dec
btc
cwtl
pop
cwtl
xchg
dec
pop
mov
mov
xor
sub
pusha
sbb
imul
ss
push
or
sbb
mov
nop
nop
in
leave
testl
test
mov
pop
aas
test
add
in
imul
or
and
jno
sar
popl
clc
push
jmp
das
bound
out
inc
and
aas
rclb
sar
push
sub
or
imul
mov
sti
ret
cltd
pop
xchg
jge
movb
nop
testb
add
push
and
jge
xchg
or
inc
jge
pop
or
push
sbb
insb
loope
jle
cmp
orl
pushf
push
in
bound
adc
cmp
lods
push
xchg
lds
pop
test
sub
sbb
jmp
jmp
ret
mov
push
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
cs
int3
lods
nop
sbb
adc
dec
dec
xor
sub
mov
jae
mov
add
xchg
arpl
sbb
mov
pop
into
fs
sub
std
out
jg
je
dec
inc
or
cld
push
nop
pushf
aas
dec
xchg
int
add
sbbl
test
or
fwait
mov
popa
jno
ret
mov
mov
xchg
mov
and
mov
ja
movsl
sti
stos
and
ss
xchg
in
arpl
xor
popf
or
enter
or
cli
mov
sub
cs
scas
mov
stos
jne
inc
loope
popf
andb
les
test
test
aam
out
xchg
mov
aad
jne
jle
call
ss
inc
and
sbb
ja
sbb
jmp
mov
aaa
rolb
sub
sub
popa
rolb
jp
inc
pop
or
gs
adc
ja
push
mov
mov
dec
addr16
pop
leave
arpl
ss
jle,pn
sbb
in
int
int3
jns
repz
inc
cwtl
jge
pop
inc
pop
jle
adc
cmp
rcrb
std
testb
adc
cmp
icebp
push
push
and
and
lret
ret
or
pop
es
stos
or
outsl
and
xor
mov
xchg
aas
cmp
jns
adcb
cmp
pop
pusha
gs
push
xor
divl
loope
jo
sub
sbb
out
jmp
jns
in
xor
push
das
cmp
stos
mov
cmp
jl
popf
sti
cmp
push
xchg
mov
je
cmp
xchg
lahf
adc
pop
push
test
leave
loop
in
pusha
subb
xchg
lret
mov
push
add
mov
jl
movsb
lcall
or
loop
jg
movb
fsubl
add
ret
add
mov
pop
mov
pop
out
aas
inc
pop
sbb
inc
js
cltd
push
add
pushf
es
mov
in
push
jl
mov
bound
je
lods
leave
inc
sub
push
andl
repnz
mov
add
and
push
sti
arpl
ror
xor
fsubrl
sbb
push
mov
sub
outsl
add
shll
dec
mulb
push
push
xor
xchg
mov
rep
es
jns
and
out
inc
insb
notl
jecxz
jns
adc
dec
mov
and
adc
mov
mov
les
movsb
and
insb
sub
ljmp
sbbb
into
int3
mov
xchg
inc
sti
sarb
fdivrs
int3
repz
ret
or
sbbb
xor
popaw
jo
inc
outsb
pop
ret
imul
shr
add
dec
xchg
in
repnz
leave
pop
or
dec
push
pop
mov
push
mov
lock
push
clc
lods
loop
pop
mov
push
mov
lods
iret
jl
xlat
xchg
xchg
sti
into
out
mov
std
stos
rcr
in
pushf
cli
out
fsubrp
rorl
addr16
dec
stos
ljmp
stos
addr16
cs
mov
pusha
outsb
jbe
fstpl
sbb
xchg
cmp
mov
add
jge
insb
lock
cltd
mov
test
lods
clc
icebp
idivl
sbb
mov
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
inc
ljmp
mov
stos
pop
sbb
cmpsb
xchg
xchg
xchg
inc
jecxz
or
iret
push
bsr
or
imul
call
fs
clc
jge
data16
js
es
sub
outsb
mov
loopne
add
dec
xchg
xor
sbb
xor
cmp
inc
jge
mov
lods
lods
cs
and
dec
adc
fisttps
lret
jo
push
sub
mov
stos
or
inc
pop
pop
push
notb
imul
adc
xor
inc
adc
xor
pop
lds
inc
scas
js
mov
adc
test
sub
dec
jle
vmovups
shll
add
popf
mov
arpl
xor
add
lret
jae
inc
lods
icebp
sbb
mov
mov
jne
lods
fdivrl
sti
sarb
push
int3
mov
cmpb
lret
pusha
jle
xor
mov
ljmp
sbb
fldl
cld
or
inc
pmuludq
and
int
loop
stc
dec
test
loope
ja
rcrb
hlt
mov
pop
jne
sub
divl
dec
lds
mov
dec
imul
fdivr
xchg
jo
cmp
xchg
cld
and
mov
mov
aas
jnp
or
fisttpll
lcall
cmc
or
loopne
iret
mov
add
jnp
jne
gs
sbb
fscale
adc
fistpll
das
sub
mov
scas
inc
cmpsl
sub
jecxz
orl
xchg
and
mov
outsb
jnp
sbb
lock
fsub
pop
aam
notb
or
ds
mov
out
adc
std
pop
xlat
std
mov
test
cltd
popf
mov
stos
clc
mov
add
mov
test
push
inc
cltd
or
dec
mov
pop
add
push
mov
lods
insl
and
fwait
jae
mov
and
push
xchg
out
mov
repnz
mov
push
push
sarl
jo
push
pop
cli
mov
popa
subb
stos
inc
jno
xchg
jae
nop
lds
arpl
sahf
cld
push
mov
inc
aad
lds
enter
dec
push
push
cs
pop
aad
xor
gs
test
mov
or
mov
mov
mov
les
aas
test
cmp
cmpsl
mov
inc
cmp
lods
sub
pusha
push
js
icebp
lret
repz
sub
bound
inc
mov
lods
clc
xchg
lahf
loopne
ret
adc
and
fdivr
add
add
repnz
cmp
mov
das
cli
add
arpl
icebp
xchg
cltd
xor
xchg
loope
insl
or
mov
push
xor
fstl
int
xor
andb
es
fwait
repnz
sti
ds
jmp
mov
inc
add
adc
cmp
inc
mov
rcll
or
pop
cmpsb
retw
or
sub
or
dec
pop
mull
inc
sub
dec
cmp
ss
pushf
ds
pop
out
scas
imul
mov
jle
mov
pop
scas
rcrl
xor
movsl
dec
aaa
dec
ret
add
std
loope
std
inc
icebp
push
mov
push
orl
decl
inc
lock
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
insb
filds
adc
adc
das
rcrb
jnp
cmp
push
sub
sti
or
rcrl
shl
clc
pusha
push
sbb
lods
pop
loop
loop
enter
xchg
cmpsb
mov
mov
mov
addr16
out
iret
jmp
ss
jge
jmp
loop
push
daa
es
xchg
outsl
push
mov
pop
fs
aas
lods
adc
or
or
sub
push
xor
je
fnstenv
cmp
cmc
inc
inc
std
pop
add
or
and
sub
fbld
pop
inc
sub
repz
out
xor
sbb
aaa
xor
pop
jl
adc
js
jl
loop
mov
repnz
outsb
out
pushf
inc
mov
push
pop
gs
rclb
rclb
aaa
stos
mov
push
pop
xchg
stos
cli
dec
mov
mov
and
rcrb
push
aaa
insl
mov
push
fnstcw
sbb
xchg
insb
sbb
pop
inc
in
enter
pusha
mov
add
xchg
stos
nop
in
aam
and
lods
test
pushf
adc
testb
mov
inc
fnstsw
inc
fwait
xchg
shr
inc
lret
cmp
pushf
push
mov
sub
outsb
sub
lcall
inc
mov
pop
out
mov
ror
lods
addr16
dec
pop
test
cmp
xor
xor
test
fwait
int3
inc
ja
mov
fstps
outsl
jmp
pushf
jns
insl
loopne
std
scas
xchg
pushf
inc
xchg
cwtl
lcall
dec
jns
out
sbbl
fiadds
adc
jle
xor
in
pushf
sub
mov
shl
pop
ss
test
or
dec
imul
stos
movsb
push
stos
push
jns
mov
push
jns
pop
push
dec
inc
shrl
mov
movsl
stos
mov
mov
into
dec
addr16
sub
sub
lea
adc
aam
pop
mov
sbb
into
add
pop
jge
push
lahf
xchg
mov
cmp
data16
inc
shll
inc
out
sbb
inc
int3
aaa
jae
std
and
outsl
rclb
mov
cwtl
jbe
in
rcll
mov
mov
fisubs
mov
push
add
cmp
es
xor
push
stos
int
add
and
repz
dec
cmp
or
sbb
sbb
adc
ljmp
xor
or
push
jne
mov
mov
add
sub
jecxz
adcl
daa
add
aaa
push
ds
mov
dec
cmp
test
sti
je
ds
jb
cmpsb
pushf
mov
mov
or
loopne
cmp
ljmp
ljmp
jnp
rorl
loop
sbb
pop
jmp
cmp
flds
pop
test
gs
xchg
or
fldenv
out
sbb
sbb
add
mov
push
mov
stos
insl
xchg
jb
sahf
int
aas
xor
mov
out
outsl
shl
push
push
sarl
dec
push
lds
pop
popf
cmp
sarb
cmpsb
mov
xor
fwait
xchg
sbb
aas
dec
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
mov
call
adc
adc
push
adc
and
jge
loopnew
ret
outsl
ror
enter
lea
or
dec
add
cmpsb
mov
adc
push
push
scas
add
sbb
adc
icebp
adc
jnp
pop
lahf
pop
movsb
mov
xor
sbb
sub
push
shrl
shr
and
mov
sbb
mov
xor
rcr
out
ret
mov
idiv
sbb
push
mov
int
dec
movsl
cmpsb
popa
mov
loope
cmp
movsl
jno
push
mov
push
loope
jae
clc
leave
addr16
and
and
push
out
pop
dec
mov
pop
test
mov
or
aaa
dec
add
ds
sub
sub
mov
js
jae
fdivr
fdiv
pop
loop
xsaveopt
pop
scas
fimull
adc
sti
loope
int
int
jecxz
sub
add
mov
or
mov
push
add
sbb
repnz
mov
jo
test
and
sub
adcl
lcall
push
cmp
ret
sbb
xchg
or
dec
hlt
jg
gs
inc
mov
sbb
mull
stc
jo
pop
dec
push
pop
mov
jecxz
add
pop
xchg
mov
sti
fdivrl
insl
push
aam
mov
xchg
pop
psadbw
enter
paddsb
xchg
adc
sub
jne
popf
lret
mov
jg
fwait
mov
sbb
lods
mov
lret
sub
adc
repnz
and
sub
das
rcl
or
sub
cmp
insb
adc
xor
mov
cs
nop
aaa
adc
lahf
mov
ljmp
rol
push
mov
xorb
ret
mov
daa
jle
js
sbb
fstpl
aas
mov
imul
ret
pop
mov
int3
roll
das
mov
inc
test
cmp
into
int3
adc
aaa
push
inc
add
int3
popa
xor
les
outsl
add
xchg
mov
xchg
xlat
test
sbb
push
es
push
adc
stos
ljmp
xor
fists
in
addr16
push
mov
dec
mov
inc
addr16
push
ljmp
xchg
in
paddusb
and
mov
push
jo
sub
xor
movq
les
arpl
pop
inc
jle
add
fdivs
lods
pusha
sti
xor
xchg
fwait
int
push
pop
arpl
push
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
sbb
push
std
adc
adc
loopne
js
sub
ss
daa
inc
test
dec
adc
push
xchg
test
test
push
xchg
cltd
nop
and
das
imul
xor
test
mov
int3
sbb
sub
sbb
inc
stos
out
outsb
mov
int
test
cmpsb
pop
ret
and
push
mov
pusha
nop
stos
ja
test
jae
add
loopne
test
or
ja
mov
dec
inc
pop
aad
ja
mov
sub
clc
xchg
mov
push
xor
stos
mov
xchg
xor
lods
stos
inc
push
cmp
outsl
pop
arpl
xor
mov
pop
jnp
lds
fsubrl
mov
loopne
push
stos
fs
jge
cmp
inc
pop
add
pop
loop
cmpsb
arpl
cltd
xorl
scas
fisubl
hlt
mov
xor
push
cli
insl
xor
dec
push
sbb
ret
jp
sbb
adc
gs
in
inc
fs
dec
pop
bound
pop
pop
sub
push
pop
lret
mov
or
jbe
repz
popa
inc
inc
fsubs
xchg
jp
fidivs
sahf
and
pop
mov
sub
jl
or
movsb
add
enter
inc
js
sbb
loop
icebp
lea
xor
or
idivb
rorb
repnz
mov
mov
add
lret
sbb
mov
xchg
jb
pop
pop
in
lahf
cmc
lahf
outsb
mov
mov
sbb
inc
in
and
lock
mov
data16
push
lods
lret
movsb
cmpsl
xor
mov
clc
mov
sbbl
add
cmp
and
pop
rcr
loop
hlt
jle
lea
test
sub
mov
add
xchg
jmp
jmp
rcrb
mov
repz
lock
popf
mov
inc
push
cmpsb
je
lods
add
pop
pop
stos
mov
test
mov
jo
cmc
ljmp
push
lock
clc
push
scas
pop
sbb
sub
stos
cmpsl
cmp
dec
out
std
sti
ljmp
pop
inc
neg
sub
enter
sbb
mov
mov
gs
arpl
sub
pop
inc
loop
inc
add
or
pop
pushf
xchg
cmpsb
inc
or
and
dec
mov
mov
pop
xchg
cld
ficoml
jl
nop
sub
out
add
mov
add
lds
jecxz
xor
stos
jnp
xchg
lods
dec
mov
push
mov
cmp
inc
xor
add
rol
jne
inc
add
add
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
xor
stos
cmp
adc
push
xor
movsl
mov
insl
dec
mov
inc
jbe
cmp
inc
or
jb
das
xchg
mov
add
jl
int
pop
jns
sti
dec
xor
inc
mov
mov
outsl
lcall
loop
push
or
sub
xor
push
pop
leave
lock
test
je
out
addb
xchg
sbbl
pop
cmp
jmp
or
loop
inc
cmpsl
cld
pop
pop
push
fcmovu
dec
xchg
inc
pop
loop
sbb
stos
clc
mov
jge
xor
movsb
inc
clc
mov
mov
popa
mov
xor
pop
adc
aam
movsl
mov
cmp
push
mov
fsubl
lret
xor
test
call
push
mov
xor
and
xchg
pop
jecxz
ds
cmp
out
inc
scas
ja
mov
xor
jo
xor
ljmp
inc
sahf
mov
and
and
pop
add
in
adc
imull
sub
nop
xor
ret
ljmp
jmp
test
xchg
inc
pop
cmp
or
mov
out
xchg
jo
cmc
jno
jmp
insb
or
lods
int3
jge
int
lods
or
movsl
inc
fidivrs
test
cmpsb
jb
or
add
std
outsb
add
mov
lds
cmp
in
repnz
mov
cmp
mov
cmpsl
repz
stos
das
ljmp
outsb
add
xchg
and
jbe
mov
xchg
sub
lods
inc
adc
sbb
insl
icebp
hlt
cmp
add
enter
cli
and
jge
mov
or
lret
jnp
stc
iret
inc
test
mov
loopne
imul
and
add
test
jns
xchg
int
test
mov
xchg
test
negb
pop
lods
and
jecxz
outsl
pop
push
mov
dec
bound
mov
cs
mov
and
xor
cmp
push
sbb
aas
cmpsl
les
cli
fsub
jge
jg
loope
fwait
add
sub
testl
loopne
xchg
jle
mov
jns
movl
adc
pop
mov
das
pushl
inc
out
mov
mov
lret
or
std
add
inc
repnz
rclb
mov
out
xchg
xchg
shl
adc
fcomps
insl
out
inc
cmpsb
mov
sbb
sub
ja
xor
movlps
cmc
and
mov
and
fdivrs
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
ss
lods
push
out
adc
adc
push
xor
mov
mov
push
movsb
outsl
sub
xchg
lahf
jl
fidivs
mov
jb
jnp
out
mov
lret
dec
into
test
ror
mov
jo
mov
sbb
imul
add
ret
mov
cmp
add
or
rcr
inc
jo
mov
and
dec
ja
fistpll
mov
pusha
xchg
or
xor
inc
and
je
lods
xor
mov
ret
or
hlt
hlt
xchg
call
push
rcrb
jle
fwait
out
add
sub
jae
dec
or
popa
insl
fnstsw
lds
mov
cmc
cmpsl
inc
cmp
adc
pop
rorl
in
jl
movsl
adc
aaa
shl
push
test
fldenv
sub
push
and
and
adc
scas
xor
dec
das
pop
stos
xor
inc
stos
push
push
aam
dec
arpl
mov
jecxz
ret
xlat
fnstsw
mov
jb
ret
dec
mov
cmp
and
iret
sbb
xor
pop
daa
jle
xorl
pop
sub
gs
mov
cmc
fbstp
pop
inc
int3
xchg
pop
insl
xor
inc
or
cmc
push
jmp
cwtl
xor
xor
jo
dec
add
push
and
xor
pop
xchg
lret
ds
inc
push
and
fdivs
out
mov
inc
mov
test
stos
push
sub
decl
dec
adc
std
imul
inc
fistps
mov
push
addl
pop
sub
arpl
outsb
inc
jo
and
adc
sbb
lret
sub
std
jmp
mov
inc
push
iret
insl
sahf
xchg
repz
stos
xchg
lret
ss
inc
mov
cmp
or
pop
adc
aaa
mov
mov
or
lds
add
popa
or
cltd
outsb
push
xchg
rorl
cmp
jmp
loopne
push
xchg
jns
xor
mov
sub
xchg
scas
je
icebp
imul
mov
jl
stos
mov
lods
sub
gs
and
mov
aaa
fscale
stos
xchg
fwait
xor
dec
adc
push
ja
lods
andb
inc
outsl
push
xchg
xchg
jbe
push
sub
dec
push
hlt
inc
aaa
popf
adc
xor
sbb
add
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
imul
adc
adc
out
mov
test
mov
inc
dec
dec
pop
xchg
jb
dec
lds
pop
push
mov
insb
in
and
sahf
mov
shrb
repz
inc
jae
xorl
in
push
data16
or
testb
or
gs
mov
mov
sbb
les
fwait
lret
bnd
mov
push
inc
mov
sbb
mov
movsl
testl
js
add
adc
aad
stc
stos
pop
cld
dec
jno
adc
xor
icebp
roll
jb
popa
pop
inc
inc
incl
outsl
jmp
cmpsl
rolb
dec
or
ljmp
mov
iret
mov
inc
scas
fists
jp
push
jnp
loopne
outsb
xchg
pop
xor
gs
cltd
add
push
sbb
xor
popf
lahf
test
pop
push
enter
sbb
and
mull
jne
pop
enter
sbb
icebp
jbe
inc
or
and
xchg
push
push
iret
rcrb
xorl
cmpb
push
mov
dec
imul
mov
dec
sbb
dec
cmpsb
leave
mov
pop
ficomps
sahf
or
arpl
ss
movsb
cmp
call
jne
xchg
xchg
adc
jle
je
mov
adc
data16
and
and
out
xchg
sbb
mov
xchg
mov
es
mov
pop
lods
aam
add
int3
out
and
inc
cmp
iret
pop
dec
push
or
xor
xchg
xchg
mov
cmp
cmp
push
mov
cmp
push
push
inc
and
inc
mov
cmp
jns
cmp
sbb
jbe
icebp
pop
jmp
fsubrs
scas
sti
xor
outsb
xor
sarb
in
add
fadd
push
mov
mov
insl
pop
push
cmpsl
enter
adc
mov
jno
fs
jmp
int
leave
push
xor
xchg
stc
pop
pusha
mov
jge
lcall
sub
es
jnp
mov
mov
jmp
inc
add
scas
fwait
gs
mov
int3
setp
adc
sbb
jns
sbb
mov
mulb
jns
loop
out
lea
adc
std
into
dec
fsubrs
lea
adc
sbb
mov
lock
aad
fs
aam
or
call
pop
je
cmp
pop
sarb
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
js
push
adc
jp
das
pop
sub
pop
lods
lcall
jecxz
insl
outsl
mov
sbb
jns
hlt
sub
bound
sub
mov
add
mov
outsb
sbb
inc
rcl
push
xchg
jae
pop
cmc
cmp
pushf
ret
jp
xchg
je
dec
adc
inc
mov
mov
gs
inc
mov
mov
loopne
ljmp
aam
clc
outsb
or
push
pop
xchg
leave
shrl
rep
data16
arpl
xchg
arpl
jo
repz
inc
int3
xlat
fs
dec
xchg
inc
fldenv
cld
sbbb
add
push
imul
jge
mov
and
lahf
bound
insb
fldenv
jp
daa
roll
add
pop
lahf
out
sub
add
or
mov
adc
dec
frstor
int3
aas
pop
push
sbb
cmp
pop
lret
mov
inc
into
ds
jae
scas
mov
jne
push
test
cmc
test
sbb
loope
rolb
dec
mov
hlt
outsl
call
xor
sub
pop
mov
scas
mov
jl
sbb
sbb
mov
loopne
dec
adc
enter
inc
inc
cmp
xchg
fwait
js
test
jp
rorb
mov
mov
pushf
enter
into
in
out
imul
inc
lcall
add
cmp
push
stos
lock
push
mov
pusha
and
imul
stos
jg
mov
inc
mov
icebp
jno
add
xchg
push
cmp
push
repnz
dec
mov
loop
dec
dec
test
loop
movsb
and
fistpll
data16
jp
jbe
imul
int3
shll
mov
test
jge
or
push
lcall
test
push
xchg
and
push
xlat
and
and
inc
insb
and
mov
add
xor
ljmp
add
inc
cmp
cs
pop
pop
jne
loop
and
incb
mov
mov
ljmp
movsl
push
mov
sbb
mov
cs
ja
mov
xchg
outsb
stos
lahf
daa
mov
cmp
xor
sahf
ret
jbe
std
les
push
xchg
inc
cmp
cld
mov
incl
add
sub
and
loop
sbb
scas
das
jmp
mov
loop
inc
and
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
test
adc
adc
mov
pop
inc
adc
adc
neg
repnz
mov
inc
pop
pop
outsb
mov
pop
or
dec
mov
testl
mov
movsb
and
out
sbb
jns
int
mov
push
ret
jnp
rclb
imul
mov
xor
inc
rclb
rorb
mov
xchg
cltd
pop
jns
in
dec
je
inc
push
jno
and
inc
adc
mov
xor
push
repz
aam
xlat
jge
leave
mov
adc
jno
outsl
mov
dec
add
push
and
push
push
xor
std
pusha
test
stos
push
mov
lods
sbb
pop
test
mov
popf
testl
pop
fsubr
dec
mov
lock
cmp
jae
insl
jno
cwtl
push
jge
test
mov
push
pop
repz
mov
xchg
inc
cmc
mov
pop
cltd
fcom
lea
aas
push
cmp
in
mov
arpl
aad
pop
fidivrs
and
cwtl
cmp
pushf
push
jle
jg
mov
aad
mov
ljmp
loopne
lods
pop
sub
ja
mov
pop
mov
fistpl
out
push
mov
or
loope
xchg
roll
sbb
sbb
addl
xor
pop
ja
inc
sub
int
pop
adc
mov
mov
sarl
jge
sbb
lret
mov
arpl
or
adc
lcall
xor
pop
aas
xchg
sti
pop
jge
rolb
dec
jmp
jmp
adc
pop
scas
pop
es
in
jl
mov
dec
lods
cs
adc
xor
rorl
std
xchg
mov
test
lret
andl
out
adc
daa
ficomps
inc
add
sbb
das
xor
movl
stos
xor
push
popa
jne
mov
pushf
mov
mov
test
mov
sub
dec
ret
pop
jmp
arpl
dec
dec
mov
pop
mov
arpl
shlb
inc
push
pop
adc
iret
cmp
rcrb
movsb
inc
rcll
sub
stos
imul
jecxz
push
push
mov
mov
jp
data16
enter
lock
xchg
xchg
sub
cmp
xchg
pop
cwtl
sbb
in
nop
lahf
and
repz
jp
scas
fdivrp
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
push
ficoms
adc
test
repz
pop
ja
dec
iret
cmpsb
iret
cmp
lcall
pusha
hlt
dec
cmp
and
mov
fildl
shl
enter
cmp
loop
adcb
cmp
jae
xor
aas
and
jge
mov
je
mov
mov
jl
cmp
xlat
push
cmp
in
aaa
js
add
in
add
mov
xchg
clc
cli
push
cmpsl
adc
cmpsb
lods
mov
push
xchg
inc
pushf
cmp
dec
mov
xor
movsb
push
push
xchg
sbb
push
in
mov
popf
movsl
adc
leave
pop
addr16
dec
dec
insl
in
outsb
sub
bound
inc
popf
lcall
inc
jnp
mov
mov
sub
sub
lea
in
enter
cli
into
sub
popf
or
fbld
cmp
xor
dec
xchg
inc
popl
out
sbbl
aas
push
mov
sahf
jge
mov
xor
mov
xchg
rcll
add
aam
and
insb
js
mov
adc
ljmp
lods
push
cmp
rcr
clc
sub
push
sti
cmp
lret
roll
mov
iret
adc
jl
xchg
pop
push
mov
imul
test
in
lret
arpl
inc
pop
dec
pop
pop
cmc
cmpl
inc
les
mov
loop
loop
mov
ljmp
sahf
dec
push
divl
dec
sub
rorb
mov
mov
out
arpl
out
mov
dec
stc
sbb
clc
sti
cmpsb
cmpsb
xor
jb
or
cmp
bound
test
mov
or
jecxz
mov
sub
and
shrl
inc
push
jae
inc
inc
push
scas
xor
lahf
cmp
les
jg
xor
lods
aas
cmp
fnstsw
pop
andl
xchg
dec
xchg
dec
and
push
clc
jne
jno
add
xchg
orl
push
adc
int3
pop
out
testl
adc
pop
cmpsl
cmp
dec
int
sbb
push
mov
push
loop
ja
push
push
test
pop
jno
cwtl
insb
mov
cmp
inc
fiadds
int
test
push
inc
shll
js
inc
sbb
shrl
push
sbb
xlat
lahf
hlt
daa
jge
or
xchg
or
pop
sub
cmp
jne
pop
sub
fstpl
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
add
scas
insb
js
adc
adc
nop
call
and
daa
inc
ljmp
filds
movsb
lds
or
cmp
pop
adc
loope
adc
loopne
adc
scas
call
js
lret
mov
cmpsl
shlb
inc
cmc
out
lods
xchg
dec
int3
xor
in
xchg
out
or
gs
ss
dec
out
pop
das
mov
out
aad
mov
jbe
pop
sub
js
pop
inc
daa
je
stos
xor
pop
in
sbbb
push
push
enter
bound
adc
jno
dec
cltd
loope
jbe
sbb
insl
inc
adc
mov
fldt
pusha
test
adc
cld
xor
insl
ja
mov
in
jge
into
sahf
mov
jbe
lret
push
push
xlat
stos
sar
ja
fcmovnb
mov
out
shrl
pop
adc
scas
sbb
push
pop
xlat
movsl
cwtl
enter
rolb
scas
push
mov
inc
cmp
xchg
int3
into
aad
push
push
lds
jmp
sbb
pop
inc
mov
outsl
or
imul
lea
popa
scas
mov
imul
pop
scas
lods
imul
fistps
jmp
xchg
mov
or
cmp
cltd
icebp
xchg
jae
add
call
dec
dec
lcall
das
mov
cltd
stos
cmp
cwtl
pop
rcll
clc
and
pop
sbb
sub
pusha
pop
cmpsl
jmp
mov
aad
leave
sub
or
leave
lret
rcrl
xor
adc
loopne
mov
nop
push
test
sub
cwtl
cmpsb
xor
dec
arpl
iret
test
mov
sub
aaa
lods
dec
ret
dec
sub
cmp
stos
movsl
xchg
sbb
push
push
add
incl
pop
mov
fadd
ljmp
jp
sub
dec
xor
and
je
hlt
mov
lock
inc
xchg
lods
push
outsl
inc
int
sub
inc
lcall
sbb
loopne
int
sbb
push
fldl
xor
add
mov
push
add
arpl
jbe
sub
hlt
lds
dec
cmp
cmp
mov
mov
into
inc
sub
mov
push
lahf
xor
stc
pop
xor
cmc
lds
addb
aam
cwtl
add
test
adc
sahf
or
ud0
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
int3
data16
pminub
xor
sbb
stos
inc
add
mov
inc
mov
mov
mov
out
cmp
aas
stc
pop
arpl
dec
xchg
sub
in
push
sub
iret
xchg
or
mov
cwtl
pop
sub
nop
loope
pop
mov
xchg
push
shll
pop
test
or
fs
push
add
bnd
mov
mov
jge,pn
lret
in
sub
push
pop
or
dec
lcall
addb
dec
ret
mov
movsl
into
stc
or
lds
pop
jbe
lret
lret
test
push
fnstcw
sub
cmp
mov
nop
xchg
mov
daa
pop
fidivrs
test
subb
mov
pop
xor
mov
and
rorb
sbb
or
dec
or
dec
mov
mov
popf
dec
dec
imul
arpl
out
das
mov
repnz
push
cmp
lahf
push
int
pop
inc
scas
aas
mov
loope
shl
inc
aad
and
fldl
push
addl
int3
lock
adc
mov
addr16
cmpsl
pop
mov
push
pop
fildl
xchg
ljmp
sahf
sbb
pop
loop
push
ljmp
cwtl
xor
mov
xchg
mov
mov
aad
xor
pop
test
mov
jmp
xor
dec
rclb
inc
or
dec
ficompl
mov
in
roll
mov
scas
xchg
fdivrs
dec
jae
rcrb
cltd
or
mov
outsb
test
nop
addl
xchg
jno
stc
bound
adc
sub
inc
sarl
sub
dec
test
push
pop
shll
xchg
rcrl
xor
cmp
jp
test
ss
xchg
fiadds
pushf
add
leave
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
xchg
enter
lret
fcomip
jnp
mov
push
pop
sbb
push
fwait
shl
or
mov
test
shrb
add
and
mov
daa
addr16
je
mov
pop
js
add
outsl
int3
dec
das
arpl
shrb
sti
pop
jnp
inc
add
fwait
push
test
sub
mov
sarl
fmul
scas
jmp
loopw
xchg
push
push
pop
sub
lret
and
adc
pop
cmpsb
push
pop
or
lods
cmp
sbb
sbb
cli
fcmovb
mov
jle
jo
mov
jg
test
xor
jne
rcrl
sahf
jge
sti
loop
xor
sbb
pop
outsb
pop
xor
orb
mov
lahf
pushf
xchg
mov
cmp
cli
add
push
cmc
xorl
jne
jg
int
mov
js
ds
mov
shlb
inc
int
jecxz
pushf
les
inc
shll
xchg
sub
mov
sub
test
cwtl
add
ja
mov
jo
sub
push
mov
clc
cmpsb
or
xor
mov
lock
xchg
lods
int3
loopne
ror
fsubrl
mov
dec
cbtw
lahf
cwtl
add
inc
dec
mov
lds
xor
pop
jno
push
and
jp
fcmovbe
lea
jne
pop
inc
lock
pop
loop
adc
xor
leave
dec
je
jmp
pop
cld
adc
xchg
and
jle
jb
pusha
sbb
sub
jl
jo
add
dec
gs
insl
test
mov
push
int3
push
pop
aaa
and
jae
leave
push
inc
xchg
jp
scas
mov
fs
add
pusha
cmp
mov
fdiv
cmp
or
aad
mov
xor
mov
lods
lret
dec
repnz
jecxz
cld
rorb
xchg
sbb
mov
lahf
jp
popf
push
push
sub
cmp
xchg
dec
mov
mov
cmp
or
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
sub
adc
adc
rorl
mov
adc
mov
lods
adc
je
and
jnp
in
sbb
sti
sub
loop
cmp
mov
and
mov
clc
cmp
push
lahf
test
sbb
imul
lock
and
inc
jmp
jecxz
or
mov
add
dec
push
and
mov
push
add
mov
int
popa
nop
xchg
test
and
and
mov
clc
fiadds
loope
dec
mov
in
repz
pop
out
outsl
xchg
js
mov
sbbb
aaa
pusha
fdivs
aas
es
out
push
ret
jno
pusha
clc
cli
je
jg
cmp
mov
dec
addr16
pusha
pop
repz
xlat
cmc
mov
cli
and
xchg
xor
cmpsl
lcall
lds
mov
sub
cs
mov
inc
cmp
pop
pop
cmp
pcmpeqb
mov
xlat
nop
jge
push
mov
push
lret
sbb
scas
cmc
stos
lret
divb
sub
cmp
test
add
adc
jge
jae
lret
mov
popa
popa
repnz
pop
mov
les
cmpsl
addr16
dec
sbb
loop
sub
scas
mov
sub
add
or
sub
cmp
cmp
add
std
xchg
popf
pop
insb
adc
mov
out
pop
fisubrl
test
ficomps
pop
shrd
xlat
hlt
repnz
faddl
bnd
xorl
and
fists
add
cmpl
mov
jae
jecxz
cmp
sub
inc
je
sub
test
in
addb
dec
mov
in
jg
or
cmp
iret
dec
xor
rcrl
jp
int
mov
jno
loopne
out
jge
rcl
ljmp
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
stos
push
adc
adc
das
mov
pushf
jnp
testl
fwait
cli
adc
daa
push
je
loope
cmpsb
cmp
adcb
loope
outsl
sub
lahf
clc
or
jns
es
push
jle
jbe
xor
xchg
xchg
fldenv
and
cmp
stc
push
idivl
ds
xlat
lods
loop
cmp
shll
fldenv
push
cmc
xchg
fcompl
or
std
icebp
dec
sti
and
outsb
mov
mov
inc
dec
notb
data16
popa
add
or
mov
xchg
pop
nop
ficomps
hlt
test
out
jmp
sub
push
fmuls
mov
lock
xchg
inc
sbb
and
mov
push
mov
mov
xor
jbe
sti
and
fstpl
adc
popa
xchg
je
cmp
aam
dec
mov
mov
lods
inc
jno
leave
cltd
dec
xchg
xchg
push
add
popa
sbb
adc
xchg
add
xor
es
mov
leave
shl
xor
lea
mov
shll
jge
shll
jmp
pop
and
jb
mov
insl
sub
js
lods
ds
lahf
push
pop
jnp
xchg
dec
insl
cmp
test
cltd
insb
pop
pop
xlat
es
and
hlt
mov
pop
xor
dec
ret
mov
fisubrs
repnz
xchg
and
xchg
ds
sbb
cmp
data16
ja
imul
mov
out
fisttpll
inc
imul
sbbl
ljmp
rorl
mov
jge
je
out
xchg
jp
sahf
xchg
mov
sub
pop
jge
rolb
insb
aas
inc
dec
outsb
or
test
adc
ss
outsb
mov
enter
or
xchg
push
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
pusha
push
mov
enter
outsl
sub
call
sub
fildl
jecxz
stos
or
sub
xor
pop
mov
jb
test
int3
in
mov
mov
es
inc
roll
arpl
sti
adc
jecxz
pop
xchg
loopne
jg
lock
dec
add
sti
js
sahf
je
imull
mov
test
xchg
mov
lahf
sub
popf
sbb
arpl
jo
movb
sub
mov
mov
dec
xchg
test
xor
inc
mov
cltd
imul
es
mov
in
sub
hlt
fisttps
or
sarl
jnp
dec
push
leave
xchg
andl
pop
cmp
pop
lret
ret
loopne
and
std
lods
push
enter
aad
adc
mov
ja
mov
pop
mov
adc
xor
je
pop
adc
mov
push
mov
or
add
push
scas
jmp
roll
pop
shl
push
xor
inc
xor
push
fs
add
outsl
push
adc
arpl
pop
in
pushf
mov
xchg
shll
imul
iret
testb
movsl
mov
and
jle
cmp
pop
sbbb
inc
push
add
or
xor
sbb
cmpsl
cmp
inc
icebp
in
pop
ret
xchg
sahf
xchg
mov
es
test
out
hlt
pushf
xor
inc
mov
mov
pop
mov
inc
insb
pop
dec
or
ja
cmpsl
out
mov
aas
xorl
nop
push
test
mov
sbb
enter
sbbl
shl
inc
mov
out
add
repnz
mov
xchg
xchg
cli
ss
mov
in
call
in
hlt
push
sub
xchg
shlb
jnp
out
imull
xor
add
ds
in
movsl
scas
mov
cmp
inc
push
dec
and
lods
sub
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
stos
lcall
movlps
rclb
lcall
and
and
cmc
mov
push
xchg
jne
test
enter
sbb
fstl
out
stc
jnp
xchg
lret
mov
ds
mov
gs
lods
sahf
sub
adc
test
adc
sbb
dec
xor
add
shrb
mov
out
les
jns
jg
enter
lret
ret
mov
nop
mov
inc
sub
sbb
dec
pushf
insl
sub
loopne
call
add
daa
lcall
sub
daa
insb
sbb
ja
test
js
jecxz
sbb
ret
imulb
popa
or
adc
xor
mov
fmuls
mov
or
push
and
lds
fdivr
mov
inc
fldln2
in
and
dec
dec
mov
push
decl
cmpb
add
out
int
sub
fwait
aam
int3
rcrb
xchg
inc
scas
push
cltd
push
push
in
and
mov
repz
xlat
jns
mov
cld
loope
mov
outsl
push
out
cli
adc
nop
pop
pop
dec
arpl
popf
lcall
xor
rcrb
sub
push
jae
pop
out
stc
pusha
stc
aam
xor
mov
inc
fists
xchg
arpl
std
jae
inc
pop
mov
das
mov
sbb
dec
push
insb
sbb
push
inc
mov
xor
clc
fwait
sub
imull
cmp
jg
push
shlb
mov
inc
leave
lcall
pop
mov
icebp
inc
xchg
js
adc
loop
das
cltd
insb
mov
outsb
scas
pushf
push
cmp
shr
dec
scas
xchg
push
adc
movsb
movsb
and
sbb
adc
outsl
loop
cmp
xchg
push
insb
cld
jecxz
scas
jp
xchg
gs
outsl
mov
jne
cltd
lods
jbe
dec
sbb
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
jb
xor
adc
aas
cmp
push
lods
push
inc
sti
clc
int3
jbe
push
adc
pop
push
push
fidivrl
imul
sub
clc
jae
es
mov
rolb
ss
pop
lods
sbb
push
test
scas
push
or
mov
sub
nop
lcall
sub
loop
test
xor
out
jg
sti
fcmovnu
sti
movsb
xchg
inc
aaa
ds
inc
nop
mov
nop
icebp
cmp
xchg
xlat
jnp
sbb
out
into
pop
mov
popf
xorb
lock
pop
or
fistl
scas
inc
cmp
insb
xchg
fs
push
jecxz
inc
cwtl
lret
scas
sbb
inc
inc
sub
pop
or
and
in
loop
test
jns
push
mov
fisubrs
bswap
loope
push
in
mov
nop
fsts
cmp
iret
lret
mov
in
xor
decb
mov
scas
mov
mov
mov
aam
sbb
in
mov
fcmovnbe
nop
sbb
mov
aad
adc
pop
cltd
pop
xchg
insb
xor
adc
pop
or
mov
clc
sbb
mov
mov
lahf
or
addl
lahf
jae
lds
out
sub
jnp
insl
xor
inc
jb
insl
popf
pop
fwait
jecxz
sub
push
fmuls
pusha
cmpsb
mov
inc
sub
ret
shrd
xchg
or
xchg
mov
lock
imul
mov
cmp
add
pop
lods
fidivrl
xchg
mov
adc
dec
imul
test
inc
mov
loopne
xchg
mov
pop
ss
dec
or
inc
addl
les
inc
mov
repnz
es
mov
sbb
test
jle
fnstcw
dec
pop
dec
add
xchg
adc
inc
jns
push
cmp
mov
sub
mov
mov
or
outsl
hlt
mov
out
mov
in
fstpt
lods
int3
repnz
pusha
push
push
jmp
jmp
mulb
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
inc
pop
mov
enter
rcrb
mov
les
or
xor
pop
enter
xchg
divl
negb
inc
testb
mov
mov
div
fs
adc
daa
and
cmpsb
andl
push
sbb
fcoml
nop
stos
shl
sahf
je
hlt
pushf
or
inc
xor
push
and
leave
cmc
pop
xchg
xchg
loope
es
cmp
dec
popa
fisttpll
ljmp
inc
jne
dec
daa
pop
mov
mov
cmp
push
mov
add
cmp
mov
je
jl
gs
addr16
std
outsl
lret
shlb
jne
repnz
or
push
lods
popf
fistpl
cltd
ds
xchg
adc
enter
adcl
fdivl
fimull
adc
mov
ret
leave
es
mov
pop
hlt
jnp
add
inc
inc
call
add
std
movsb
data16
dec
and
dec
inc
cmp
dec
jg
xor
ss
inc
loope
cmpb
adc
xor
mov
int3
stos
inc
je
inc
add
test
ds
xchg
or
movsl
inc
xor
ja
int
ret
mov
mov
dec
jmp
popf
push
imul
adc
lods
fisubrl
push
cmpsl
in
mov
pop
inc
lret
jmp
xor
fistpll
xor
aas
cmpsb
push
cmpl
push
outsl
mov
test
adcl
mov
and
add
cmpsb
xor
or
push
and
add
push
lret
dec
push
jo
dec
xchg
xor
cwtl
sub
xchg
movsl
in
fs
or
mov
iret
or
adc
xchg
mov
dec
outsl
and
out
push
es
std
fsubl
lcall
cld
insl
mov
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
sbb
adc
adc
push
mov
and
mov
jnp
pop
das
outsl
mov
pushf
icebp
mov
sub
cs
repnz
push
dec
mov
hlt
movsb
dec
adc
xchg
arpl
test
rorl
sub
cld
jae
loope
mov
hlt
xor
les
scas
xchg
xchg
cmpsl
bound
lcall
adc
icebp
in
aam
sub
push
out
notb
nop
and
pop
js
mov
dec
cwtl
sbb
pop
pop
xchg
inc
dec
xlat
sbb
in
sbb
jl
jmp
or
cld
or
rcll
in
or
pushf
inc
in
repnz
xchg
lahf
stos
xor
or
aam
mov
xchg
aad
add
xor
fmull
fstl
lock
daa
xchg
inc
or
sub
stos
sbb
mov
xchg
xor
bound
stc
pop
cmc
imul
or
repnz
arpl
mov
add
hlt
test
inc
push
or
cmc
jo
pop
push
cmp
not
cs
popa
cld
push
adc
jp
jo
stc
mov
scas
cld
or
cld
cmp
pop
cmp
adc
cmpl
std
push
sbb
popa
out
scas
or
sbb
push
lds
out
daa
inc
jl
loopne
ds
jecxz
adc
fdiv
aam
enter
test
arpl
push
sar
mov
mov
push
das
dec
mov
pop
cmp
cmp
jb
lods
pop
jmp
push
mov
cmp
sub
jg
aam
push
mov
fwait
add
sub
imul
xchg
xlat
push
pop
fisttpl
jl
arpl
inc
subb
lahf
clc
adc
ficomps
daa
mov
jl,pn
pushf
inc
push
sub
inc
push
cs
and
out
in
sub
lret
cmp
jo
mov
sub
sub
mov
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
int3
lods
dec
test
adc
movlps
aas
sti
dec
xor
push
movsb
cmp
inc
aam
test
scas
sub
push
mov
rclb
xlat
mov
lods
in
adc
cwtl
xchg
or
insb
rorl
push
mov
fdivl
jnp
jecxz
push
mov
rorb
and
mov
movsb
inc
inc
push
pop
dec
mov
ljmp
mov
int
or
lret
shll
adc
popa
scas
ret
imul
mov
test
dec
popa
int
ds
rcl
mov
shll
mov
pop
test
xor
and
xlat
out
outsl
mov
sbb
rorb
or
ficompl
push
mov
fists
sbb
dec
mov
fnstenv
imul
in
test
idivb
outsb
mov
popa
pop
mov
ja
cli
fadds
push
push
inc
je
add
testl
or
lock
pop
adc
and
pop
sub
test
clc
rcll
dec
dec
cld
mov
and
mov
hlt
dec
sahf
ret
out
dec
push
loop
std
pop
lahf
add
xlat
sub
push
sahf
mov
ja
jle
sub
addr16
or
je
icebp
mov
mov
push
jno
pop
mov
mov
lret
inc
add
pop
rorl
mov
xchg
repz
inc
xchg
push
das
jle
jge
cmpsl
loopne
imul
dec
pop
stc
sbb
iret
movsb
pusha
jne
xchg
pop
or
dec
pushf
and
mov
stc
fcompl
js
jmp
ficoml
xchg
push
jmp
sub
and
sub
push
div
fimull
mov
imul
mov
push
dec
in
push
mov
in
push
pusha
sub
push
sbb
inc
fiadds
aad
mov
clc
cmp
popf
push
fldenv
and
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
out
stos
add
adc
mov
cmp
movsb
fwait
push
popf
insb
push
jg
ds
xchg
or
push
inc
test
insb
loop
cmpsw
mov
adc
fimuls
and
xor
popf
in
xor
dec
daa
xor
cmpsb
sub
data16
xchg
jmp
fistps
and
mov
cwtl
loopne
add
cmpsb
das
mov
cmp
mov
scas
gs
and
inc
addr16
push
ds
popa
and
je
test
lods
fisubl
aaa
add
xlat
nop
xchg
sti
xchg
stc
sub
xchg
es
xor
and
xchg
psubb
mov
daa
dec
dec
adc
test
mov
stc
sti
mov
mov
xlat
pop
push
push
or
sarl
mov
jmp
xor
mov
push
cld
rcrl
push
cld
cld
push
int3
rolb
div
lods
mov
sbb
call
shrb
sub
dec
data16
scas
cmpsl
push
stc
xchg
fisttpl
sahf
pop
push
cli
insl
pop
insb
inc
mov
cltd
jno
into
pop
pushw
out
sub
stos
outsb
int
mov
xchg
movsl
jge
mov
jle
fwait
jno
lods
xor
fs
xchg
addr16
adc
movb
lea
adc
mov
pop
std
and
test
lods
pop
aad
xlat
add
mov
loope
xchg
ret
pop
inc
cmpsl
push
out
out
fcmovnu
sbb
scas
push
outsl
inc
ljmp
and
cmp
bound
and
sub
xorl
dec
inc
pop
dec
sbb
mov
outsb
xor
sti
add
sub
and
stos
pushf
dec
inc
call
pop
mov
xchg
adc
les
movsb
jge
je
mov
jno
roll
mov
imul
pop
mov
mov
xorl
daa
sbb
push
fcompl
loopne
repz
xchg
mov
fsubr
lcall
add
push
jbe
in
pcmpeqb
rcr
jmp
dec
leave
in
fldl
scas
jno
lret
ret
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
inc
punpckhdq
movlps
and
sbb
cmpsl
sar
stos
mov
repnz
loop
ds
pop
jmp
insb
mov
movsl
je
push
adc
leave
loop
mov
movsl
cmc
or
push
clc
or
xchg
les
mov
dec
mov
sbb
cmpsl
fadd
out
sub
push
test
xor
sub
ret
cld
push
pop
lret
jne
rcrl
mov
fnstcw
push
adc
jle
je
lea
nop
notl
sti
adc
jg
sbb
push
rcr
mov
fsts
xchg
mov
daa
dec
xor
push
mov
mov
imul
fwait
sti
cli
outsb
xchg
das
mov
mov
loope
in
and
cld
mov
test
jp
jle
and
push
mov
test
sbb
adc
push
pop
add
dec
cmp
repnz
xchg
pop
lock
sub
std
fiadds
push
xor
mov
adc
icebp
xchg
or
sub
cs
psubusb
leave
lock
jle
dec
fisttpll
clc
mov
jae
and
stc
std
or
popa
mov
scas
add
push
pop
test
xchg
mov
arpl
ds
pushf
mov
fistpll
adc
lahf
push
out
pop
push
mov
ljmp
out
test
xor
xor
add
mov
in
mov
xor
mov
sbb
pop
jl
push
pop
mov
mov
ss
cmp
mulb
jnp
out
outsb
pop
sbb
mov
inc
and
jl
mov
leave
loop
fldenv
iret
pop
cmp
in
nop
sarb
negb
repz
xchg
gs
rcrl
push
out
inc
and
pop
sub
in
int3
mov
mov
sti
pop
cmc
pop
inc
jns
test
test
or
lahf
cmp
je
lahf
mov
cmc
sbb
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
aaa
pushf
arpl
adc
lcall
rcll
sub
add
inc
loopne,pn
cmpsb
into
add
mov
test
pop
push
pop
insl
cmp
int3
inc
stc
mov
inc
push
sbbl
sub
pop
xchg
push
add
int
mov
dec
jo
lret
xor
push
add
inc
je
xor
inc
das
inc
sbb
enter
ds
roll
dec
mov
lea
int3
mov
stos
inc
out
loopne
out
roll
dec
push
fdivrs
in
lret
repz
je
xchg
stos
or
imul
addr16
cs
mov
cmp
ficoml
ja
mov
fldt
pusha
mov
push
cmpsb
mov
aad
imulb
mov
adc
orl
pop
cmp
pop
cmp
dec
int3
clc
mov
std
adc
or
popa
xor
enter
jns
cmp
jle
cwtl
and
es
mov
out
popa
push
and
sub
js
cmp
pop
or
mov
push
je
int
mov
jmp
xchg
fildl
test
sbb
add
sbb
xor
adc
ljmp
sbbb
and
and
xchg
mov
repnz
icebp
jle
mov
or
jge
xor
ljmp
mov
sarb
ljmp
mov
cmp
je
mov
sub
shlb
add
inc
and
pop
sbb
ret
aad
cmc
cmp
cmp
jmp
push
inc
sbb
add
fidivrl
fsubs
loope
jnp
scas
lret
stos
scas
cwtl
pop
in
out
pop
pop
gs
cmp
xor
mov
insl
imul
mov
mov
out
mov
andl
xchg
cmp
xchg
gs
imul
cmpsl
and
notl
imul
cli
pop
addr16
loop
mov
call
movsb
or
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
sti
fdivrs
enter
outsl
mov
xor
inc
cmp
mov
incb
and
pop
scas
jo
mov
pop
aam
add
out
or
negb
push
mov
fldln2
mov
push
popa
dec
addr16
pushf
pusha
mov
adc
sti
cli
xchg
stc
xchg
mov
je
jecxz
aam
jge
or
sbb
push
add
orl
mov
add
xor
imul
aaa
dec
sub
add
pop
out
lods
testl
addr16
gs
dec
call
daa
mov
popa
sarb
push
lcall
mov
inc
jl
test
les
mov
mov
les
dec
or
cmpsb
mov
xor
or
orb
ret
sub
push
into
lret
push
es
pop
lods
addl
or
lcall
add
pop
adc
pop
cmp
xchg
shl
mov
insl
mov
lods
lsl
dec
loope
mov
jnp
mov
fs
imul
movsl
mov
cmp
and
jae
aaa
dec
pushf
aad
sbbl
ljmp
sbb
dec
outsl
sbb
sti
xor
cmc
mov
andl
lahf
movsb
mov
mov
je
vfnmaddpd
ret
jns
in
aad
sub
flds
sub
or
lods
dec
fstl
mov
popa
shll
xchg
mov
adc
mov
mov
nop
int
fcmovnu
add
les
je
xor
gs
xchg
addr16
mov
fnstsw
mov
bound
cmp
imul
pop
mov
dec
cs
cs
pop
jo,pt
dec
adc
jbe
sahf
mov
sub
test
flds
push
test
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
out
je
rclb
adc
cwtl
imul
jp
xor
int
jmp
ficompl
inc
loopne
push
pop
icebp
fwait
mov
mov
cli
mov
adc
popf
in
push
movsl
cmpb
jl
cld
sahf
cmp
mov
fsubrl
push
andl
rolb
pushf
add
mov
in
outsb
inc
fnstenv
stos
xchg
aaa
dec
push
insl
lret
xchg
sub
mov
xchg
mov
cltd
mov
xorl
lahf
inc
dec
adc
ja
push
aas
repz
lret
jb
test
loop
adcb
pop
push
push
movsb
xchg
adc
loope
push
xor
inc
test
arpl
push
test
cs
cmc
ss
xor
icebp
es
xor
js
pop
insl
cmp
xlat
loope
into
inc
in
mov
loopne
add
xchg
push
aas
xchg
je
xorl
dec
arpl
pop
jg
adc
js
orb
sbb
push
icebp
mov
mov
mov
lea
cmp
lret
outsb
cmpsb
ret
call
push
fisttps
cmp
or
add
cmpsl
jo
movsb
jo
sbb
out
lret
mov
jp
movq
or
mov
std
inc
lock
xor
mov
xchg
shlb
add
aaa
mov
jns
ljmp
divl
jne
pusha
daa
sub
mov
cs
ljmp
in
fimuls
imul
jns
adc
dec
imul
test
insl
movsl
aad
sarb
cmp
cld
mov
or
pop
popf
or
gs
add
sbb
js
stos
push
lods
sub
inc
xchg
stos
int
cmpb
fdivrl
pop
int
cmp
cmp
les
lock
sub
mov
out
mov
les
adc
pop
shll
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
in
push
xchg
adc
adc
and
std
adc
sub
xor
fisubrl
es
repnz
lahf
cli
dec
and
pusha
push
fnsave
jns
sahf
adc
xor
out
fmuls
push
xor
in
xor
cmpsb
imul
mov
pop
or
and
fcom
dec
and
mov
dec
loop
mov
add
push
in
ds
jns
jl
sbb
lods
popf
mov
mov
shll
ret
push
rorb
pop
pop
scas
pop
jle
xchg
int
dec
aaa
ljmp
mulb
or
sbb
repz
pusha
fadds
mov
push
adc
fldl
add
insb
mov
mov
mov
and
mov
test
and
repnz
and
pop
std
xor
out
mov
push
andb
pop
scas
inc
mov
call
pop
and
or
clc
jo
lret
add
sub
inc
call
test
mov
int
jp
mov
jmp
pop
mov
mov
in
mov
xor
addr16
push
add
lods
dec
out
iret
pop
daa
std
xor
cmpsl
and
inc
scas
mov
nop/reserved
pop
mov
mov
lcall
lods
lods
movntq
out
add
jl
cli
jnp
adc
sub
mov
mov
out
pusha
or
mov
nop
insl
sbb
aas
xchg
pop
leave
pop
les
cli
push
test
arpl
xor
fcompl
sub
xor
sub
mov
lods
repnz
sti
sbb
cmpsl
movsb
push
sub
sub
stos
sbb
cmpsl
sub
js
add
pop
mov
add
cmc
outsl
mov
ds
mov
jno
sbb
inc
dec
fildl
ss
pop
arpl
xchg
mov
xor
dec
aas
adc
dec
lret
cmp
mov
int3
leave
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
cmpsl
push
mov
enter
mov
mov
xchg
fbld
cwtl
out
fidivrl
cwtl
gs
or
add
add
mov
in
and
das
add
in
out
loop
sbb
xchg
ja
in
jno
or
pop
shrb
sub
mov
cmpsl
jbe
fcoms
pop
popa
and
and
loope
inc
sti
inc
cwtl
inc
lahf
or
sbb
test
scas
sub
jmp
cmp
xchg
cmp
push
mov
popa
cld
sti
js
test
pop
cmp
test
or
fcoml
fnstcw
pop
push
dec
insl
sub
ret
adc
lea
cwtl
pop
out
push
cmp
icebp
js
popf
inc
cli
faddl
test
dec
out
jg
dec
or
ficompl
jno
dec
cli
daa
scas
cmpsb
fstp
imul
or
xchg
push
into
adc
sbb
push
icebp
pop
jg
repnz
mov
or
cmpsb
sahf
loopne
or
les
pop
neg
push
sub
xchg
test
jecxz
in
push
in
mov
pop
stos
outsl
push
loop
jmp
mov
stos
es
and
inc
in
and
rcll
scas
arpl
cltd
scas
leave
or
loope
lret
mov
popf
int3
cmp
and
insb
sti
mov
mov
push
test
xchg
dec
icebp
std
in
mov
pop
jno
lret
bound
jae
pop
inc
mov
test
xchg
xchg
xor
ja
mov
loop
dec
subb
lods
aam
mov
cmp
xor
jl
xor
in
out
add
mov
adcl
mov
rcrl
cld
and
bound
sti
adc
shrl
mov
push
fisubl
les
push
cld
and
repz
sbb
iret
into
push
lret
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
and
cmp
mov
pop
xlat
jecxz
or
lds
mov
ret
or
sbb
xlat
push
mov
dec
sbb
outsl
inc
sbb
das
or
dec
adc
sub
sub
pop
sbb
pop
cmpl
jne
push
popf
nop
fwait
xor
in
mov
ss
aam
sbb
mov
jbe
sti
lock
enter
mov
inc
cwtl
std
notl
mov
xchg
inc
jmp
cmp
sbb
call
enter
test
or
loopne
and
hlt
jo
pop
cs
cwtl
mov
sbb
xchg
lcall
mov
repz
add
lds
sahf
add
ffreep
pop
iret
es
into
mov
test
in
test
add
scas
ds
lods
je
pop
and
cmp
jle
iret
orb
ds
jae
jp
shll
pop
xor
imul
andb
in
movsb
loope
iret
lahf
movsl
jbe
in
or
lock
arpl
jno
rcrb
push
fs
out
push
jl
fwait
loopne
xchg
add
inc
push
mov
rcl
xlat
aaa
adc
jne
push
add
gs
mov
or
mov
xlat
jne
mov
fwait
mov
mov
dec
push
inc
popf
out
cmp
xor
sbb
dec
cmp
or
out
mov
shr
in
inc
adc
or
scas
or
addr16
frstor
mov
xchg
insb
push
ret
jg
rcll
sub
xor
out
jbe
repz
xchg
aaa
inc
or
in
mov
add
fisubrs
adc
add
in
xchg
push
aaa
sub
fwait
cmpsb
dec
scas
dec
mov
dec
or
sub
jne
push
dec
or
adc
rcrl
xor
jo
fstps
jle
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
adc
xchg
adc
das
cmpsb
sbb
cltd
sub
mov
xchg
mov
cmp
in
clc
and
and
sahf
pushf
adc
pushf
mov
idivb
into
mov
dec
into
pop
lds
add
jecxz
je
sbbb
sub
sub
and
stos
sbb
ficoml
aas
cmp
imul
adc
jp
ljmp
xchg
mov
jecxz
nop
and
dec
jnp
push
jbe
xchg
mov
sub
imul
add
jne,pt
repnz
sbbl
mov
lcall
sub
xchg
adc
sbb
out
arpl
mov
cmp
push
cmp
sub
mov
mov
ret
aaa
sub
sti
push
je
or
shr
negb
inc
ja
ror
dec
test
popa
out
out
adc
test
inc
pop
pop
mov
and
dec
ficoms
out
push
mov
lods
fmulp
xor
xor
inc
fwait
or
lahf
mov
scas
aad
pop
nop
xchg
lret
adc
daa
enter
push
insl
xor
or
pop
xor
sti
cmp
mov
pop
ret
fcompl
sbb
cli
iret
cltd
cmpsl
or
sbb
inc
stos
fistps
push
xor
ret
or
add
cli
jb
pop
adc
sbb
outsb
xchg
or
rcll
rorb
mov
xchg
sbb
mov
movsl
xor
dec
loop
stos
inc
inc
and
sbbb
sub
and
and
je
mov
adc
std
popa
pop
fs
fnclex
mov
xor
ret
xor
sbb
sub
dec
mov
clc
addr16
test
cld
sbb
or
dec
mov
add
stc
mov
loop
adc
je
ret
lret
xchg
test
in
and
adc
push
jb
jp
jae
fcomp
sbb
and
mov
xchg
in
or
imul
pop
mov
push
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
jae
lods
push
adcb
minps
xor
pop
clc
and
rcrb
enter
mov
adc
icebp
cli
inc
arpl
fsubl
push
test
or
icebp
insl
aad
sbb
mov
mov
or
cmp
es
xchg
cltd
cmpb
xchg
pop
addr16
push
imul
lds
fucomp
js
pop
fcomps
stos
cld
es
in
push
sahf
sub
jnp
in
inc
rcr
mov
inc
xor
sbb
setl
jmp
aaa
pop
cmp
cld
xor
dec
inc
mov
daa
das
sub
jo
loope
push
mov
push
arpl
xchg
cmpsl
or
ja
hlt
fwait
aam
pop
fcoms
out
and
and
mov
insb
ss
data16
inc
sub
push
mov
gs
mov
dec
je
cmp
jae
xchg
das
mov
adc
sub
xlat
lods
pop
pushf
movsl
in
sub
jle
loope
lods
xor
addr16
inc
rclb
and
push
int3
jbe
push
xchg
out
lahf
sahf
mov
mov
fs
jne
pop
push
cmovge
enter
fadds
fnstsw
mov
fsub
xlat
jmp
add
lret
call
rorl
and
arpl
dec
cs
mov
inc
icebp
sahf
pusha
es
cmp
jnp
adc
inc
movsb
mov
pop
push
jecxz
mov
movsl
scas
inc
iret
or
push
jg
cmp
pop
mov
and
mov
adc
sbb
or
stos
pop
rcll
lods
cmp
xor
popa
sub
push
adc
mov
xchg
gs
lock
sbb
jno
and
pop
adc
sti
push
arpl
scas
mov
inc
hlt
pushf
dec
mov
pushf
add
data16
addb
fwait
cmp
mov
add
inc
out
pusha
xchg
lea
mov
cld
addb
mov
cmpb
mov
aam
aad
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
test
adc
adc
jg
push
mov
sbb
pop
popa
lods
xor
imul
fiaddl
mov
xor
icebp
adc
out
mov
inc
test
fs
add
jmp
dec
sbb
imul
inc
in
shlb
or
std
rcrl
push
fcomps
pushf
push
cmc
inc
mov
cmp
sarl
lods
ss
sbb
sbb
inc
mov
in
mov
and
movsb
jbe
mov
pop
dec
or
mov
sarb
pop
test
les
das
pop
js,pn
addr16
pop
popa
adcb
popa
adc
pop
adc
jno
fnstenv
and
fwait
nop
adc
sbbl
mov
or
mov
mov
fsts
test
pop
cmp
jp
or
clc
leave
pop
push
xchg
pop
sbb
movsl
xchg
cmp
and
mov
cld
fsubrs
in
push
lret
rorb
sbb
add
dec
push
mov
sub
das
fiaddl
cwtl
fldl
xor
push
push
push
imul
lahf
lods
xor
mov
mov
jecxz
xchg
ficoms
lcall
sarl
add
cwtl
xor
inc
clc
cwtl
push
xor
or
adc
add
pop
pusha
inc
je
outsb
sbb
test
sub
inc
jno
dec
mov
stos
repz
mov
sbb
in
inc
jno
add
jl
ret
test
nop
cmp
shrb
jp
out
popf
pop
ret
mov
sbb
clc
ret
scas
mov
pop
xor
je
push
pop
test
pop
inc
mov
mov
shll
mov
cs
adc
add
das
mov
fcomip
ja
sbb
and
or
push
pop
dec
cmp
jecxz
push
push
leave
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
lds
adc
movlps
lret
xor
flds
inc
sarb
cmp
stc
sti
cmp
clc
dec
cmc
stc
jbe
and
int3
and
jae
es
xor
inc
mov
cmp
cmp
cmp
fldenv
je
pslld
jp
ss
sbb
mov
xor
test
in
mov
inc
inc
jbe
push
jp
mov
xchg
xchg
in
test
roll
mov
adc
push
outsl
push
mov
mov
jg
std
sbbb
outsb
or
stos
mov
popa
rcll
and
fdivs
adc
in
mov
shlb
inc
ret
pop
out
aas
adc
xchg
mov
inc
adcb
adc
lock
push
in
ret
sarb
out
sbb
int3
iret
xor
xchg
mov
out
sbb
out
sbb
addr16
movsl
add
dec
push
jle
orl
mov
mov
sbb
dec
jge
mov
jns
repnz
sbb
mov
inc
repz
pop
xchg
inc
stos
or
inc
jae
pop
aam
cmp
add
pop
sub
xor
jmp
lahf
sahf
movsb
sub
mov
and
jp
bound
push
add
jno
add
test
xor
xchg
xor
and
sahf
stos
xor
in
out
sbb
xchg
lret
ds
negb
mov
sbb
xchg
adc
sub
mov
icebp
int
jb
outsb
and
mov
mov
sahf
mov
mov
jb
jmp
pop
into
add
sbb
dec
or
mov
roll
je
push
add
xor
loope
cli
ds
iret
adc
jne
repz
cmp
lods
lock
jno
jp
daa
stc
rcrb
adc
push
xchg
and
daa
mov
insl
xchg
test
pop
jl
cmpsl
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
into
jp
jb
adc
adc
jp
jae
cltd
outsb
stos
add
mov
jbe
pop
push
and
mov
repnz
imul
les
push
jno
pop
cwtl
loop
lret
ljmp
test
push
negb
sub
in
out
sahf
cmp
mov
mulb
bswap
push
insl
push
pop
ret
add
loope
xchg
dec
addr16
jl
stos
sbb
mov
js
jp
add
scas
mov
int3
push
add
addr16
mov
pop
mov
insb
ss
xchg
sbb
insb
sub
sub
imul
xor
cli
mov
mov
xchg
nop
iret
addr16
call
mov
add
and
inc
mov
pusha
sbb
stc
mov
cmp
push
mov
add
mov
mov
and
mov
repz
push
rorl
cmp
imul
mov
ljmp
addl
jge
outsl
add
movsl
outsl
jl
push
incl
test
xchg
lcallw
arpl
mov
mov
ficompl
loop
mov
xchg
int
or
xor
mov
jb
dec
test
lods
les
out
in
mov
stos
scas
dec
mov
nop
or
cmpsb
mov
out
xlat
mov
rol
dec
js
out
stos
fists
enter
mov
rorb
mov
dec
lods
pop
pop
call
xor
pop
and
das
test
cs
or
jecxz
jge
lahf
bound
jb
dec
mov
movsb
lods
inc
xor
ljmp
cmp
es
mov
adc
out
stos
je
arpl
adc
or
or
lahf
orl
ss
leave
mov
shrb
and
sarb
push
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
bnd
aam
es
adc
adc
sub
into
lods
pop
jp
mov
or
cmpsl
inc
dec
sbb
iret
fwait
in
cmpl
shrb
imul
cmp
cmp
movsb
sahf
xchg
sub
dec
pusha
stc
mov
mov
jno
dec
mov
shl
fyl2x
xchg
lret
jmp
hlt
les
mov
pop
loopne
loope
xchg
sbb
into
push
dec
ret
sbb
out
das
xchg
pop
and
jns
cmp
loop
mov
jno
aam
jp
pop
mov
loope
dec
xchg
jl
mov
jae
movsl
lods
mov
int3
sbb
sub
xchg
sahf
fsubrs
out
xchg
popf
push
aaa
sbb
loopne
jg
imul
shrb
cmp
jno
test
pop
cmc
inc
and
mov
imul
bound
sub
ret
pop
jl
sbb
ss
adc
sbbl
jo
mov
aas
mov
inc
pop
jns
pop
imul
inc
ret
or
inc
or
cmpl
lods
add
out
lret
jo
push
xlat
lods
or
xorb
icebp
cmp
clc
icebp
fsubl
push
inc
sti
inc
imul
mov
scas
adc
jbe
inc
call
xor
inc
dec
movl
enter
nop
mov
ficompl
xor
push
cmp
adc
pop
mov
sub
inc
mov
sub
xor
out
pop
imul
cmp
sub
xchg
daa
mov
sbb
repnz
mov
js
xchg
push
fadd
sub
sti
lea
cmp
insl
inc
pop
xchg
sub
push
mov
cmp
mov
in
jo
sahf
hlt
dec
enter
jecxz
sti
idivb
and
inc
test
sbbl
dec
sti
iret
mov
loopne
dec
sub
jne
lcall
push
rcrl
jmp
leave
mov
test
mov
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
adc
inc
stos
fldcw
adc
movlps
xlat
sub
sbb
aaa
clc
inc
cmp
imul
dec
ss
add
lahf
add
ret
mov
iret
repz
push
mov
inc
insl
roll
jecxz
aam
leave
xchg
adc
mov
push
fmuls
ds
repz
mov
jbe
js
es
das
stos
imul
dec
xchg
daa
mov
or
hlt
sbb
mov
mov
gs
fwait
sbb
pusha
adc
push
jo
fnstenv
aam
push
pop
and
call
push
scas
push
mov
popf
inc
push
out
fcomps
dec
add
cs
daa
adc
pop
addb
lea
pop
inc
or
mov
mov
adc
nop
push
cwtl
repz
or
enter
jnp
or
ss
jns
push
rol
arpl
push
dec
mov
dec
nop
loopne
or
add
std
or
xor
push
sub
jg
lcall
movsl
mov
mov
fisubrl
rcrl
push
sbbl
and
std
pop
push
sub
ret
push
inc
mov
test
andl
sahf
sub
mov
mov
mov
es
sahf
mov
inc
insl
in
xor
lahf
sub
hlt
jle
or
loopne
jo
sub
insb
lods
xchg
sub
xor
and
repz
cmp
je
pusha
jmp
mov
cmp
or
nop
sbb
sahf
int
enter
or
rcr
push
jne
ja
fwait
negl
outsb
xor
dec
xchg
jecxz
xchg
imul
sti
sarl
ret
xchg
inc
cmp
rolb
mov
xchg
mov
sbb
inc
mov
dec
sbb
cmc
lret
ss
pop
int
gs
inc
adc
ds
sub
mov
add
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
mov
lea
enter
inc
mov
out
aam
xor
andl
pop
cmc
std
pusha
xor
inc
addr16
mov
jle
mov
adc
rcrb
xchg
xor
mov
out
maskmovq
divl
fimull
and
or
and
test
mov
test
es
out
sbb
xor
mov
jbe
aam
add
enter
mov
sub
aad
repnz
les
enter
dec
movsl
adc
push
xor
cmp
icebp
xchg
push
pop
jne
stos
add
in
shlb
mov
negb
or
mov
sbb
or
addr16
sti
int3
aaa
add
ss
cs
dec
cmp
test
mov
pop
mov
repz
in
xchg
out
pushf
xlat
cmpsb
push
movsb
enter
cmp
cmp
sub
lock
in
dec
fldt
icebp
or
xor
add
stc
test
dec
adc
pop
dec
sub
sahf
cmpsl
dec
insl
pop
add
outsl
mov
push
push
in
ficompl
cmpl
xor
pusha
roll
aaa
stc
jg
dec
cmpsb
fcompl
jb
ljmp
jg
repz
sar
negl
dec
cltd
cmp
in
outsb
push
cs
das
push
dec
mov
jecxz
add
js
js
std
out
mov
shr
add
or
mov
mov
xchg
or
jle
push
and
fsubs
jle
xchg
imul
out
ss
dec
in
movsb
xlat
pop
sbb
test
mov
jmp
addr16
movsb
stos
adc
cmc
std
lret
out
outsb
outsb
inc
mov
xchg
testb
sbb
pop
lods
and
mov
in
push
sbb
jne
mov
pop
cmp
popa
dec
mov
jno
rolb
out
int
pop
daa
mov
fistps
add
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
pop
sbb
xor
xchg
jnp
jle
dec
ds
adc
cli
jb
aam
lret
ror
push
scas
jmp
sub
jl
aad
int3
gs
pop
rcrb
fistl
push
fs
xor
cvtdq2ps
aaa
movsl
jnp
xor
pop
xchg
dec
rcrl
out
push
sahf
xchg
mov
xchg
mov
ret
andb
out
add
cmp
mov
cmpl
or
and
dec
test
mov
inc
sub
cmpsl
jmp
mov
mov
add
cmpsb
fsubrs
daa
imul
fmuls
adc
lock
push
xchg
mov
mov
sti
mov
adc
popf
aad
lock
and
adcb
xchg
call
push
lea
imul
hlt
jae
or
and
mov
mov
add
cltd
lret
lret
outsl
rcrl
ret
push
adc
mov
sbb
fwait
mov
push
dec
jns
aam
shll
lock
cli
rorb
push
add
sahf
repnz
push
sub
jb
cmp
mov
dec
scas
jb
gs
bound
mov
mov
sub
dec
mov
xor
je
lds
jns
enter
enter
mov
das
dec
loop
sub
sbb
lahf
pop
xchg
iret
mov
retw
adc
outsl
pop
sbb
jp
dec
imul
or
xor
xchg
repnz
cmp
jmp
sti
mov
in
xor
aaa
push
scas
mov
sbbb
das
repz
inc
dec
push
jecxz
and
lret
dec
imul
pushf
jle
xlat
push
cmp
mov
call
in
sahf
sub
fwait
and
jne
pop
cwtl
imul
xor
inc
dec
add
xchg
mov
iret
lock
rorb
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
add
adc
adc
les
popa
push
and
repz
cmp
sbb
xor
mov
dec
fidivl
mov
adc
cltd
mov
in
call
push
sub
push
in
mov
add
test
lock
scas
pop
arpl
xchg
mov
pop
sbb
loope
lahf
mov
clc
inc
leave
sub
movsl
mov
dec
xchg
dec
cli
aas
dec
pop
into
lods
rcrl
mov
inc
push
ss
pop
loop
jmp
xchg
shlb
xchg
sub
sub
pop
movsl
inc
sbb
int3
jmp
cmc
dec
pop
mov
shrb
and
imul
movsl
pop
aad
mov
dec
js
pop
mov
xchg
mov
cmp
xchg
das
js
mov
xor
push
jbe
fxch
mov
push
stos
aad
or
sti
adc
fstpt
psubb
daa
pop
int3
sbb
add
xor
inc
and
clc
mov
arpl
xchg
inc
push
ljmp
fcomps
movsb
cmpsb
push
xor
pop
imul
repnz
aas
imul
sub
mov
pop
in
jno
xchg
inc
movsl
dec
rol
mov
sbb
xor
mov
lcall
fisubrs
mov
pop
and
and
fnsave
xor
test
mov
jle
and
icebp
push
push
jns
negb
push
or
roll
sub
fstl
les
daa
pop
pushf
shlb
jnp
leave
xchg
in
mov
xor
mov
gs
mov
fs
outsb
and
mov
sahf
in
push
repnz
pop
jmp
addr16
mov
not
pop
addb
movsl
ds
enter
mov
inc
jno
imul
dec
in
ljmp
and
sub
sbb
mov
pop
jo
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
dec
fisubs
push
pop
adc
adc
inc
out
pop
mov
lods
dec
and
adc
cmp
jb
scas
adc
adc
lret
or
into
jns
aas
jmp
aam
fcompl
push
fildll
xchg
adc
int
jns
ds
mov
sbb
aaa
adc
jge
jnp
fs
lds
mov
mov
add
dec
repnz
out
add
mov
fstp
jge
inc
xchg
cmp
mov
adc
xchg
fmul
stos
insl
mov
mov
dec
imul
mov
nop
sahf
sbb
orb
sub
icebp
mov
jle
imul
popa
popa
jno
xchg
xor
test
sub
popf
and
inc
cmp
mov
cmp
stc
sub
loope
fwait
mov
adc
jo
mov
ret
faddl
push
outsl
push
scas
jnp
sub
testb
je
adc
pop
mov
je
insl
je
ret
shll
mov
aaa
arpl
sbb
mov
imul
repnz
fwait
add
cmp
dec
bnd
imul
cmp
jg
sub
sub
mov
cld
gs
inc
mov
loopne
add
push
and
scas
dec
jns
mov
pop
int3
add
adc
std
xchg
in
fiadds
pop
sti
cmpsb
fstp
cmpsb
jno
ret
cmpb
jnp
mov
js
adc
outsb
notl
mov
repz
lock
hlt
push
icebp
sahf
hlt
leave
pop
mov
fsts
gs
push
imul
mov
xor
popf
mov
sub
add
mov
addr16
aad
dec
mov
mov
addl
xchg
ret
dec
xchg
and
add
mov
mov
imul
push
rcrl
fsubp
jl
adc
fs
imul
adc
adc
add
pop
xchg
mov
mov
les
inc
adc
aaa
stc
in
cmpsb
test
cld
addb
lret
mov
nop
jg
in
push
adc
leave
in
adc
sub
das
cmp
out
xchg
mov
ret
pop
pop
pop
imul
and
mov
repz
ja
test
cmpsb
sub
ds
roll
into
roll
mov
mov
add
mov
mov
xchg
mov
iret
inc
hlt
movsb
adc
ss
xor
push
mul
sbb
adc
stos
mov
push
jg
xor
int
mov
xchg
movsb
movsb
mov
push
xor
sar
mov
jbe
imul
sti
cmp
in
dec
pop
icebp
push
js
lret
jbe
jecxz
pushf
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
mov
adc
adc
shl
andb
sub
jo
cs
lret
mov
push
lods
push
fwait
pmaxub
jb
pop
aaa
sbb
jo
mov
imul
mov
mov
add
sub
jp
rorl
and
push
repz
dec
and
aaa
mov
sub
dec
fbld
push
mov
aaa
lcall
lret
jmp
pop
clc
sbb
outsl
lock
sarl
daa
mov
pop
mov
mov
pop
lret
js
lahf
outsb
ret
sarl
das
sub
mov
fdivl
xchg
movq
sbb
jg
inc
shl
popfw
push
mov
jle
jg
loopne
test
push
mov
stc
inc
xchg
fdivrs
adc
sti
outsl
movb
cmp
lahf
inc
ja
inc
mov
in
aad
pop
cmc
call
adc
cmp
pop
into
dec
mov
loopne
or
xchg
add
idivl
movsl
lahf
inc
idiv
and
jne
rcll
cmpsb
cmp
add
cmp
add
lcall
jge
mov
inc
fsub
loope
or
pop
dec
mov
shlb
mov
fs
xor
iret
dec
mov
push
aas
jmp
add
dec
pop
fs
std
test
adc
dec
mov
pop
pop
ljmp
sbb
js
daa
jmp
bound
sbb
jmp
xorb
cmp
pop
dec
push
sbb
xchg
mov
xor
push
ss
hlt
jns
sub
call
dec
aam
cmc
push
stos
dec
adc
shrl
adc
dec
dec
inc
push
repz
loopne
jge
add
mov
inc
xchg
pop
popa
xchg
aaa
repz
test
rcrl
sbb
lock
into
pop
cmp
ljmp
ret
inc
dec
repnz
and
cmpsl
cmp
mov
mov
mov
ret
jne
jns
push
out
jnp
xor
jbe
add
and
sub
lods
adc
pop
ljmp
sbb
and
enter
outsl
lret
rorb
popf
add
sti
insl
shl
je
stos
mov
mov
dec
pusha
adc
pushf
fs
mov
test
rolb
outsb
fcoml
ret
stos
call
popf
rorl
sbb
movsb
inc
cmc
cmp
add
rorl
sbbl
pop
shll
or
test
or
loopne
cltd
sbb
cmp
sbb
pop
add
rorb
push
xchg
pop
inc
or
inc
jno
lods
lds
jne
inc
jg
or
mov
lea
add
xor
lret
dec
cli
mov
iret
mov
pop
pop
stos
xchg
mov
mov
hlt
test
mov
cmpsb
test
out
popa
cmp
cld
pop
js
adc
mov
cmpsl
hlt
mov
arpl
cmpsl
push
xchg
sahf
mov
sbb
xchg
inc
dec
arpl
xchg
mov
adc
test
popa
das
sub
pushf
dec
sahf
test
cltd
scas
idivb
int3
adc
push
mov
cs
bound
pop
inc
fs
loop
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
