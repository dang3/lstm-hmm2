push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
push
mov
sbbl
xor
andl
mov
mov
sbb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
jmp
scas
cltd
and
add
cwtl
int
shrl
addl
andl
je,pn
jo
pop
jno
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
nop
sahf
mov
cld
nop
jl
jmp
xchg
and
xchg
sbb
mov
and
xlat
or
lret
adc
outsl
mov
pop
in
jne
ficoms
jp
lods
inc
mov
rcr
mov
stos
inc
push
jne
std
or
sub
popa
jno
lock
fidivrs
popf
jle
xchg
ficoms
pop
sti
frstor
jl
add
popa
xchg
lods
xchg
push
cmp
mov
pop
lods
mov
inc
push
lret
jl
cmp
pop
mov
cmp
xchg
inc
movsb
cld
dec
push
push
enter
push
sbb
dec
jnp
std
ret
xor
stos
jns
nop
cmp
push
xlat
cld
mov
jo
dec
addr16
pop
idivl
xor
cmp
cld
inc
stos
ja
in
xchg
out
sub
ja
pop
lock
xor
addr16
imul
push
cld
mov
pop
pushf
pop
xchg
addr16
dec
data16
adc
in
add
jge
pop
and
and
cmp
call
pop
shll
fwait
mov
sti
pop
or
cwtl
test
jno
insb
fmuls
pop
iret
adcl
lods
fidivrl
in
mov
lahf
cmp
je
cmpb
lcall
or
jl
mov
sbb
int3
sub
sarb
icebp
negl
xchg
es
imul
lret
aaa
xchg
xchg
push
jl
repnz
in
sub
ret
call
dec
aaa
push
dec
call
cmc
or
popf
enter
xchg
pusha
out
adc
mov
cmp
dec
jns
jl
call
adc
cmp
nop
aaa
mov
push
shll
cmp
dec
mov
lock
jge
mov
fists
movq
mov
iret
adc
mul
lea
adc
std
pop
cmp
ret
cmpsl
leave
xor
negb
cld
testb
enter
push
inc
or
pop
stos
push
fnstcw
das
leave
jecxz
cmp
and
aad
cmp
xor
clc
xchg
nop
ds
push
ja
int
pop
inc
lret
arpl
pop
outsb
pop
test
mov
jo
das
push
insl
jo
mov
or
xchg
lret
xchg
lods
movsb
enter
and
loopne
pop
aas
cwtl
stos
push
test
jl
sbb
sbb
cltd
mov
nop
mov
cmp
or
mov
push
test
shl
scas
jne
mov
xor
add
push
dec
lea
in
push
cmp
test
cltd
lock
sbb
fs
bound
jg
imulb
out
mov
push
cli
push
mov
add
sub
dec
and
adc
or
pop
mov
add
pop
push
add
cmp
outsb
mov
xchg
xor
subl
sub
fistpll
inc
sbb
inc
data16
psubb
mov
add
jmp
nop
mov
call
cld
mov
andb
sar
mov
xor
lea
gs
sbb
lahf
and
mov
bound
in
out
push
fadd
sub
pop
add
test
out
std
ljmp
lock
cwtl
and
loopne
adc
cmpsb
inc
fiaddl
or
sub
fidivrl
cli
lods
or
push
push
je
jp
scas
mov
mov
jb
push
push
push
inc
sub
lock
call
shlb
push
das
inc
hlt
iret
nop
dec
mov
adc
xor
bnd
and
loop
or
add
das
les
lock
cmp
pop
cmp
xlat
shll
pop
in
outsb
pop
repz
cltd
or
js
lea
data16
jns
data16
xor
add
fs
outsl
mov
and
pop
shl
lock
rorb
push
jecxz
mov
jg
cmc
sub
pop
inc
arpl
dec
mov
shlb
inc
fisttpll
aad
xorb
insb
add
cld
add
ficomps
add
sbb
sbb
pop
rorl
sti
sti
and
pop
adc
test
fbstp
call
or
rcrb
and
mov
jle
dec
ret
jno
fmul
xchg
fmull
scas
std
mov
or
mov
dec
inc
jbe
ret
pop
sub
push
push
jecxz
shrb
shl
stos
call
in
pop
sti
mov
test
mov
test
lds
cmp
out
les
test
adc
stos
imul
pushf
jle
pop
stos
sub
lahf
notl
mov
or
cmovns
data16
mov
inc
mov
xchg
inc
fucompp
sub
xor
in
inc
sbb
cmp
bound
fdivrs
fmuls
xor
push
mov
push
dec
cmpsl
mov
cmp
in
cmc
ret
je
lods
mov
pop
pop
icebp
or
and
or
add
adc
or
out
xchg
std
sub
push
out
xchg
xor
ljmp
pop
rcrb
pop
inc
push
imul
js
mov
xor
or
push
add
cli
xor
leave
lock
xor
loopne
and
std
mov
dec
and
jg
repz
int
mov
daa
mov
pop
icebp
mov
cld
data16
lods
cmpsl
in
adc
cmpsl
adc
and
mov
dec
lock
or
scas
cs
vpunpcklbw
sbb
jl
sub
cmp
mov
mov
dec
push
filds
sbb
sarb
jp
sarl
stc
shrl
mov
insb
lods
push
shlb
faddl
in
lcall
insl
mov
or
fistl
mov
xlat
mov
insb
fistpl
adc
hlt
daa
dec
nop
aad
inc
jg
ja
adc
fldcw
xor
stc
les
idivb
mov
push
push
adc
or
inc
daa
rorb
ljmp
pop
out
add
daa
out
inc
inc
jae
bound
stos
daa
arpl
sub
sahf
jmp
test
scas
rorb
stos
repz
mov
xchg
scas
dec
popa
inc
loop
aad
lock
rcrb
mov
loopne
jns
pop
addr16
sbb
loope
inc
sbb
xchg
pop
add
mov
aaa
aam
cli
out
sub
mov
sbb
std
pop
mov
mov
aad
into
negb
imul
mov
jb
jne
and
hlt
push
fbld
or
outsl
mov
pop
dec
xor
testl
repnz
mov
or
arpl
outsb
repnz
push
or
test
pop
mov
xor
dec
popf
les
out
int3
loopne
xchg
scas
jp
cmp
mov
lds
in
mov
call
scas
mov
stc
dec
mov
xor
xor
shlb
xchg
mov
mov
jae
mov
cmp
ss
mov
jg
les
aad
push
imul
in
cmp
xor
test
popa
dec
jno
jge
sub
andl
jmp
fcomps
mov
jecxz
sbb
jne
lcall
pop
jns
int3
mov
pop
jecxz
pushf
push
lahf
lock
or
imul
testl
in
fcmovnu
int3
jo
or
xor
cli
std
sbb
inc
xchg
jl
jne
test
aam
movsb
lock
fsubrs
stc
or
adc
stos
stc
xlat
xchg
in
loope
mov
aad
das
mov
xor
je
test
xor
cmp
add
ljmp
cmp
mov
out
jl
cmp
jle
xchg
test
loope
mov
cli
mov
mov
mov
pop
sbb
xor
push
clc
inc
mov
jns
std
jle
bound
mov
jo
and
xchg
call
sbb
stos
roll
int
sbb
sbb
test
lret
push
decb
push
pop
add
dec
xlat
loopne
shl
js
inc
scas
daa
insl
fnstenv
test
insb
inc
xchg
icebp
out
xchg
xchg
repnz
ds
fs
mov
mov
andl
iret
icebp
add
lret
mov
out
jb
xchg
dec
mov
xchg
adc
jl
add
pop
mov
loope
dec
inc
sbb
mov
stc
pop
mov
out
mov
inc
or
std
sub
rolb
into
jmp
push
mov
xchg
mov
fcomip
push
add
orl
jp
cmp
out
mov
xlat
pop
pop
lods
cltd
test
sub
push
data16
mov
cmpsb
inc
movb
ret
push
cli
push
mov
push
push
popa
je
fdivs
jp
mov
inc
or
dec
xchg
mov
rorl
lcall
ja
out
cmp
and
adc
jg
rorl
cmp
mov
test
enter
xchg
lods
out
xchg
sub
repnz
repz
cmp
push
rclb
in
lods
mov
loope
sbb
mov
push
mov
lock
fsubrs
jbe
cs
lds
ja
test
fstps
mov
pop
cmc
mov
sub
inc
lock
xchg
dec
mov
lret
out
cmpsb
sahf
sbb
dec
scas
cmpsb
dec
mov
cmp
rcll
or
adc
leave
aaa
rolb
or
mov
push
leave
dec
aam
add
mov
outsb
das
inc
sbb
in
bound
popa
cltd
sub
jno
mov
cmp
jecxz
scas
xchg
add
and
sbb
jbe
cmpsb
icebp
ss
push
sahf
adc
ljmp
add
mov
push
sbb
int3
mov
add
sub
mov
rolb
dec
stos
test
sbb
andl
cmovp
pop
fstpt
dec
jo
cmp
xchg
or
adc
addr16
enter
jae
mov
push
les
inc
pusha
sti
sub
mov
push
das
jno
jns
lcall
pop
int3
and
mov
mov
cmp
xchg
add
or
fwait
adc
hlt
xchg
mov
dec
scas
pop
add
mov
add
push
aad
iret
cltd
push
nop
dec
jge
xchg
or
sbb
push
idiv
cmc
jge
lret
daa
push
sub
push
cmc
push
sbb
inc
or
std
xor
jns
lahf
call
out
cmp
rclb
push
sub
dec
mov
call
sbb
adc
and
stos
call
in
xchg
or
inc
int
mov
sbb
xchg
mov
dec
sub
inc
fldenv
test
shlb
xchg
std
inc
adc
mov
sub
and
cwtl
sub
jnp
jns
loopne
test
jmp
jg
in
int3
inc
jmp
hlt
std
xchg
ret
insb
mov
xor
mov
jp
pop
pop
or
and
sub
aam
sbb
stos
aaa
sbb
cmc
out
xchg
xor
push
fcmovu
mov
mov
movsl
movsb
push
fsubrs
push
cmp
aam
ret
or
ss
xchg
push
orb
xor
in
xchg
js
dec
pusha
dec
mov
cmpsl
xor
dec
fdivrl
lcall
sti
in
jp
popf
out
icebp
pusha
or
jecxz
mov
pop
dec
inc
adc
push
adc
scas
mov
fdivl
inc
xchg
movsb
sti
ljmp
mov
and
mov
mov
and
gs
repz
fisttpl
scas
pop
cs
cmpsb
rcrl
decl
mov
jecxz
fnsave
out
xor
mov
sbb
orb
lahf
outsl
mov
js
cmc
jmp
cld
lcall
imul
popa
inc
mov
movsb
mov
dec
mov
negl
shlb
jbe
xchg
cwtl
lods
sbb
pop
andl
arpl
or
mov
jnp
fiadds
sbb
jnp
fldcw
jle
pop
unpckhps
insb
push
push
shrl
sbb
sbb
inc
pop
push
inc
sti
pop
out
inc
das
hlt
push
or
js
mov
sbb
and
jns
jecxz
cmp
incb
push
pop
repnz
xor
xchg
or
mov
out
cli
shrb
sti
in
cmp
pusha
jmp
dec
pushl
jbe
rorb
scas
cld
cmpsb
or
aam
xor
lea
aas
xor
pop
or
fidivrl
fidivs
arpl
lcall
and
dec
data16
lcall
cld
and
ss
adc
mov
xor
jge
adc
loopne
mov
out
in
dec
fwait
inc
movsl
push
call
xor
push
das
cli
add
clc
adc
repz
aas
stos
sbb
mov
adc
sub
jbe
sub
and
inc
subl
jno
aaa
push
inc
testb
xorb
ja
test
push
lahf
mov
je
fldt
scas
add
adcb
sbb
sti
xchg
sbb
data16
insl
jmp
mov
push
imul
outsb
idiv
or
in
mov
jmp
dec
ficoml
sbb
or
incb
aas
fcmovbe
cmp
mov
insl
sbb
fnstsw
outsb
fldcw
xor
out
dec
push
fistpll
outsl
pushf
std
adc
push
lahf
out
and
jnp
fnsave
shll
outsl
stc
xchg
pop
push
sbb
sti
loop
aam
cmp
scas
iret
enter
mov
jl
mov
jo
sbb
jne
push
mov
jl
int
jbe
dec
inc
je
jle
jecxz
mov
fst
les
addr16
icebp
mov
push
das
sbb
or
ja
pop
jb
or
mov
xor
cmpsb
sub
test
pusha
out
gs
aad
sub
xchg
pushl
lret
mov
adc
leave
mov
mov
add
push
mov
inc
xor
add
mov
jae
and
ror
cmpl
adc
outsb
or
scas
add
push
bnd
jp
imul
ja
xor
mov
mov
lock
in
mov
mov
js
ds
xor
aam
movsl
stos
push
stos
les
dec
cltd
pop
dec
xchg
repz
xchg
les
and
cmpl
sti
mov
xchg
mov
cmp
call
sti
xchg
mov
sub
imul
addr16
inc
sub
sub
ret
ds
shlb
push
jae
les
xchg
cld
sub
dec
enter
mov
movb
je
mov
jns
dec
sbb
nop
xor
jmp
loop
mov
outsb
out
repz
adc
xor
std
mov
stos
xor
lret
outsb
scas
jno
add
mov
fstl
push
adc
push
or
test
mov
sbb
js
fisubl
cwtl
test
adc
push
addr16
add
pop
dec
inc
fiaddl
add
out
les
sbb
ds
xchg
ja
sub
test
call
cwtl
pop
js
stos
cmpb
pop
mov
and
test
cwtl
mov
daa
lret
add
mov
mov
les
sar
jns
loop
cmpsb
push
sub
ja
fcoml
ljmp
xchg
sub
xchg
dec
out
enter
dec
lods
cmpl
sbb
or
lahf
ds
hlt
cs
vunpcklps
icebp
rcr
scas
stc
test
inc
push
push
test
es
pusha
mov
fs
data16
scas
jmp
cmp
sbb
push
js
hlt
xchg
sub
dec
xchg
inc
popf
std
mov
or
push
dec
mov
nop
jae
mov
cmp
mov
pop
test
cwtl
jnp
test
int3
push
ffree
imul
fisubs
inc
mov
shrb
or
jb
mov
incb
cltd
push
int3
clc
cmp
push
xor
add
mov
mov
scas
sbb
dec
arpl
mov
or
js
adc
xchg
arpl
pushf
jne
sbb
add
add
popf
push
ss
mov
dec
cmp
repnz
jb
divl
mov
push
loope
mov
cmp
pop
inc
sbb
aam
xchg
daa
inc
addr16
pop
hlt
imul
inc
out
xchg
mov
sbb
scas
adc
fsub
call
inc
inc
fmuls
daa
dec
pop
popf
add
stos
mov
rcll
add
xchg
or
inc
mov
sbb
mull
aad
mov
dec
adc
pop
add
icebp
pusha
add
into
or
cltd
ja
insl
sub
ss
frstor
outsb
ss
scas
addr16
das
nop
pop
mov
loope
ds
pop
aad
imul
pop
add
jecxz
popa
jp
jno
iret
cltd
dec
sbb
sahf
xchg
or
dec
and
xchg
shl
movsb
mov
repnz
outsb
rorl
pop
push
cmp
je
mov
mov
xor
cli
lea
cwtl
or
idiv
in
mov
das
ja
pop
cltd
jmp
fldcw
enter
or
out
jmp
xchg
jne
ficoml
dec
shlb
dec
in
ljmp
xor
scas
in
sbb
imul
pop
iret
leave
repz
xor
cwtl
or
xlat
aaa
inc
mov
ret
out
push
xchg
js
shl
xchg
insl
ds
push
and
flds
sbb
in
xor
pop
fisttpl
xchg
lds
or
xchg
flds
idivb
ret
sbb
mov
sub
xor
or
xchg
adc
test
fsubrl
ja
fadds
push
and
pusha
loop
rcrb
pushf
mov
mov
pop
int
xchg
or
sub
aad
mov
je
pop
xabort
mov
dec
push
adc
xchg
dec
insb
sub
and
pop
add
test
lds
aam
mov
enter
inc
sub
mov
loopne
dec
inc
push
movsb
xlat
push
jg
dec
mov
mov
cltd
adc
in
jmp
cmc
aam
lea
adc
mov
cmpl
pop
sarl
xchg
lds
dec
push
popa
cld
jle
xlat
or
aaa
mov
push
dec
lcall
fxam
call
dec
mov
sub
xchg
jecxz
sub
imul
inc
gs
or
mov
cmp
mov
pop
leave
je
push
adc
in
push
fsts
mov
push
imul
nop
and
cmp
or
push
rcrl
mov
fidivl
ss
push
pop
inc
dec
or
shll
enter
call
adc
arpl
out
inc
xlat
in
pop
pusha
and
ret
nop
push
enter
adc
mov
pop
xchg
je
mov
inc
dec
xchg
or
movsb
repz
sahf
sub
sbb
iret
sub
jns
aas
xchg
hlt
mov
sbb
cmp
stc
xadd
jb
push
imul
bound
add
sahf
cmpsl
and
sbb
lret
dec
aas
xlat
shrl
cmc
push
mov
scas
lcall
nop
cmp
sub
sbb
int3
cmc
arpl
xchg
jno
popa
mov
dec
jbe
adc
pop
int
add
mov
jnp
icebp
inc
push
loopne
and
jg
dec
jl
icebp
sarl
in
sub
movsl
js
mov
mov
xor
icebp
cmp
xchg
aad
jne
lret
shlb
add
push
inc
divb
xor
aam
pop
dec
test
fidivs
fists
dec
test
iret
insl
xchg
outsb
dec
lret
adc
loop
inc
inc
or
push
pop
dec
imulb
insb
and
xor
ret
jne
adc
and
sbb
les
cs
daa
bnd
les
mov
test
data16
mov
dec
pop
ss
out
outsl
out
mov
fwait
cmp
outsl
push
or
push
in
xor
ds
mov
or
cmp
xchg
pop
lret
clc
push
fisubrl
sub
adc
push
ljmp
or
mov
popa
mov
mov
fstpt
bound
gs
sub
mov
sbb
inc
idivb
cmp
lods
enter
push
sahf
mov
or
mov
sbb
mov
bound
in
icebp
xor
mov
add
insb
pop
ret
adc
pusha
call
es
inc
inc
popf
std
dec
xchg
mov
std
dec
int
hlt
inc
push
adc
mov
xor
int
addr16
int3
xchg
enter
dec
in
mov
inc
popf
jl
fs
mov
pop
fs
bound
mov
xchg
cmpsb
add
pcmpgtd
mov
adc
lahf
mov
lret
push
xor
rcl
adc
ljmp
pop
daa
jne
push
stc
or
sbb
or
in
mov
mov
lahf
push
add
addl
inc
and
mov
add
scas
daa
fwait
xlat
mov
mov
test
dec
push
loopne
and
mov
xlat
shlb
scas
xchg
fldt
push
sbb
movsb
sbb
sub
imul
inc
adc
dec
into
push
add
int
xchg
aaa
cmpsl
mov
movsl
mov
add
push
dec
lock
int3
xlat
mov
jge
test
dec
or
and
xchg
ss
add
dec
ds
pop
inc
cmp
shlb
and
xorb
inc
xchg
in
int3
cli
pop
faddl
push
js
mov
sub
ret
pop
sahf
mov
xchg
xor
xor
jae
test
push
stos
call
int
ja
cmp
xor
cli
ficomps
outsl
xlat
jg
imul
push
pop
idivb
cltd
xor
xor
mov
adc
ret
test
add
inc
add
adc
pusha
and
cmp
xor
cmpl
jns
jp
add
push
roll
pop
rcrl
cmpsb
dec
mov
fimuls
les
mov
repz
call
mov
add
scas
movsb
mov
ljmp
mov
roll
fcoms
int3
test
shl
popa
lods
roll
sbb
and
stos
shlb
popa
leave
add
xor
test
jo
push
and
jne
lret
lcall
test
mov
pop
clc
pop
je
cmp
pop
leave
mov
roll
jb
xchg
adc
xchg
xchg
pop
cmp
out
push
sub
adc
mov
sahf
mov
pop
xchg
dec
call
testb
push
mov
xchg
xor
iret
push
jmp
mov
adc
cmp
inc
pop
bound
incl
ret
jg
int3
lcall
sbb
adc
xchg
out
add
je
mov
and
in
test
adc
fistpl
inc
pushfw
cmovae
shrl
ficoml
int
sub
sbb
cs
in
movsb
mov
fdiv
cmp
sub
ljmp
mov
scas
in
pushf
mov
iret
lock
push
cmp
jns
xchg
clc
aam
rcll
xchg
shr
repnz
aam
mov
out
loop
jno
add
sbb
sahf
cmp
into
loop
jno
sahf
hlt
and
sub
sub
decl
mov
aam
lret
sbb
xrelease
pop
rorl
out
inc
lock
add
out
pop
lahf
lea
scas
bound
ja
jo
out
fwait
shrl
adc
or
subb
adc
leave
leave
icebp
aaa
sub
or
inc
es
adc
cmp
jp
rcrb
dec
jae
mov
mov
std
mov
xchg
sub
mov
mov
cmp
loop
xlat
gs
push
and
jo
mov
push
push
ret
and
pushf
ljmp
push
add
sar
add
bound
sbbl
sub
nop
xchg
js
jp
int
cmpsl
push
loopne
cmc
xchg
int
xorb
mov
out
jbe
jmp
dec
or
inc
jae
add
aam
jae
leave
jecxz
aad
pop
in
adc
enter
or
add
imul
and
fnstcw
xchg
cli
xor
push
mov
std
mov
mov
dec
mov
mov
xchg
push
push
jae
xchg
outsb
movsl
mov
dec
pop
inc
mov
movsl
mov
cmpsl
or
xchg
cmp
in
test
mov
mov
push
imul
push
test
addb
or
in
or
mov
dec
repnz
push
xchg
arpl
inc
test
imul
test
mov
adc
push
insl
outsb
push
sub
cmp
adc
shll
call
jo
fwait
into
jns
out
adc
lahf
dec
orl
pop
int3
fcomps
js
sbb
daa
push
jg
out
movsb
pop
cli
push
ficompl
jo,pn
pop
insb
xor
lock
sahf
mov
dec
js
jb
push
stc
jae
div
cmp
pushf
jnp
or
fists
sbb
popa
jmp
fcmovu
shl
call
insb
or
jns
decb
pushf
fildl
pop
int
int3
lods
in
test
mov
ret
jecxz
nop
movsl
call
add
insl
add
shl
inc
jns
push
imul
hlt
push
nop
dec
loop
mov
cmpsb
movsl
jge
sub
pop
adc
idivb
gs
push
inc
insb
loopne
mov
arpl
lret
cmp
fdivrs
pop
frstor
shl
xorb
cmc
ret
cmp
push
std
test
add
inc
sub
sbb
iret
frstor
subl
pop
pop
outsl
stos
mov
push
mov
enter
fstpt
mov
and
xchg
dec
sbb
or
sub
pop
pusha
divl
shr
inc
movsl
inc
dec
xor
cmp
cld
sub
lds
sbb
add
jp
or
or
inc
inc
push
test
fidivrs
mov
stos
sbb
pusha
xchg
or
adcb
out
xchg
inc
pop
test
in
notl
pop
in
popa
mov
inc
les
scas
cmpsb
push
enter
fnstcw
lock
jne
pushf
lods
mov
push
sbb
adc
mov
mov
push
negl
mov
jecxz
ret
and
adcb
ret
ja
ds
cmpsl
pop
cmpsl
jecxz
and
insl
jo
or
movsl
int
inc
push
push
and
sbb
or
jnp
inc
xchg
lock
frstor
xchg
mov
test
dec
incl
insb
scas
lods
fxch
jne
adc
out
mov
ret
or
xchg
daa
or
jle
adc
sbb
sub
xor
xor
mov
or
xor
adc
cwtl
dec
add
aas
loope
xchg
scas
scas
outsb
mov
cmpsl
fsubrl
sbb
popf
adcl
out
mov
int3
mov
inc
outsb
imul
pop
sbb
aam
push
rorl
push
sub
andl
insb
rcl
daa
mov
or
ljmp
cli
sub
out
xor
dec
mov
mov
pushf
fcomps
xor
int
xchg
out
insb
cmp
aas
ss
imul
repnz
in
loope
push
lea
mov
mov
xchg
cld
aad
call
rolb
enter
loop
mov
incb
mov
jbe
ficompl
mov
mov
repz
xor
adc
in
lods
sub
mov
inc
push
loope
inc
push
push
clc
cltd
sub
push
adc
ja
or
enter
js
in
inc
movsl
mov
and
ja
push
repnz
xlat
test
dec
push
mov
inc
jo
pop
xor
ret
mov
mov
sbb
test
popf
add
test
sti
mov
mov
jmp
outsl
pusha
xor
or
arpl
dec
mov
xchg
loopne
mov
jl
xor
xchg
cmc
incb
push
jb
xor
pusha
xchg
movsl
loopne
loopne
mov
enter
movb
in
and
mov
movsl
xor
scas
lods
xchg
iret
repz
add
or
xchg
mov
test
mov
pop
f2xm1
movntq
mov
out
lret
xor
sub
push
int
incl
bound
enter
out
xor
xchg
mov
or
lock
pusha
xor
ret
insl
lahf
mov
imul
jbe
shl
sbb
xchg
popa
xchg
jle
imul
jg
into
mov
cwtl
hlt
andl
sbb
jns
outsb
sub
dec
cwtl
xor
outsl
out
insl
dec
dec
sbb
inc
dec
cmpsb
cmp
push
mov
insb
and
cwtl
and
fists
adc
or
ror
sub
sub
xor
push
mul
or
mov
inc
lds
mov
sbb
mov
movsb
in
aam
and
pushf
push
adc
js
cld
add
popf
mov
aas
int
mov
mov
xchg
stos
or
int3
out
cmp
adc
pop
imull
cltd
xchg
pop
xchg
and
inc
loopne
lods
int3
sbb
stos
cmp
outsl
push
les
das
pop
mov
jg
sub
rorl
pop
jbe
xchg
push
adc
fidivrs
or
bound
jne
cwtl
leave
mov
cmc
xchg
cli
xchg
cmp
cmp
mov
cwtl
cmp
gs
lods
incb
pop
xchg
cwtl
jmp
leave
or
dec
mov
mov
push
xchg
imul
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
negl
mov
xor
or
xor
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
jmp
or
inc
mov
insl
mov
inc
pop
addl
push
mov
jae
mov
loop
stos
and
arpl
jnp
push
cmc
cmp
mov
sbb
mov
mov
lods
arpl
loope
js
dec
pop
in
mov
pop
incl
mov
push
or
testl
lcall
aad
je
js
lret
dec
cmp
add
xchg
cmp
repnz
jge
xchg
add
clc
test
fsubr
jno
mov
stos
adc
add
aam
jns
xchg
fdivrs
xchg
cmc
dec
aam
push
xchg
pop
outsb
jae
mov
pop
popa
lods
movsl
jg
pop
sub
loop
aad
jnp
and
inc
or
cmp
mov
fsubr
sub
xchg
enter
movsl
int
bound
add
out
dec
mov
push
aam
jae
jmp
hlt
ss
xchg
popf
push
cmp
movsb
mov
fnsave
xchg
mov
pop
cmp
fldt
shlb
subl
mov
inc
jo
insb
xchg
outsl
push
sti
insl
fwait
mov
movsl
repnz
rclb
fmulp
pop
sbb
cmp
lret
in
call
scas
scas
scas
lret
dec
push
ret
int
pop
int
jns
and
push
adc
hlt
cmp
jl
push
cmp
hlt
mov
adc
mov
bound
scas
mov
pop
add
inc
dec
inc
cmp
movsb
jge
outsb
leave
pop
out
outsl
jbe
sub
adc
jecxz
jb
outsl
cmp
sbb
mov
dec
push
sbb
sahf
xchg
fcoml
ficomps
fnstcw
jnp
push
movsb
in
xchg
cmp
mov
stos
mov
mov
jg
call
pop
jp
or
cwtl
add
stos
jp
inc
mov
dec
scas
mov
jne
sbb
movsb
shl
clc
stos
loope
add
or
nop
lds
cmpsb
jne
pushf
mov
out
push
xchg
in
movsb
nop
jbe
xchg
mov
add
sbbl
pop
imull
iret
add
cmp
test
jmp
or
jae
xchg
loopne
pop
sbb
adc
jp
push
loope
pop
test
dec
push
frstor
aaa
sub
pop
cmpsl
andb
subb
dec
je
aaa
and
jbe
adc
ret
or
jo
xchg
pop
and
jb
add
seto
fmul
xor
xor
data16
mov
and
add
clc
dec
dec
xor
and
pop
insl
icebp
xchg
mov
push
imul
pushf
inc
lret
repz
sbb
fwait
shrb
sbb
mov
repnz
fstps
jnp
cmp
test
dec
cmp
mov
ja
scas
stos
loope
cmp
or
mov
push
dec
cmp
mov
fcmove
pop
jg
push
pusha
sti
hlt
es
stc
xor
add
mov
mov
bound
fcmove
out
ret
and
sub
call
pop
cmpsl
cmc
in
loop
cwtl
shll
cmp
rcll
sub
ljmp
add
divl
inc
dec
mov
sbbb
aas
mov
out
nop
and
xor
or
dec
mov
inc
stos
lods
or
cmc
cmp
cmp
sbb
inc
into
lret
cltd
xchg
mov
dec
or
add
test
rcrl
lcall
mov
scas
aaa
addr16
jns
aaa
adc
mov
paddsb
adc
cli
call
sub
jb
or
call
mov
mov
icebp
ret
dec
gs
cmp
aam
sti
sbb
daa
pop
popa
fadds
xchg
xchg
mov
movsb
or
gs
dec
repz
add
dec
negl
fldl
sub
xchg
sbb
jge
xchg
in
xchg
sahf
lahf
mov
push
loopne
pop
xchg
or
dec
jp
mov
lods
sub
dec
cld
inc
inc
dec
pop
mov
stos
push
insb
stos
int3
jnp
xchg
jnp
hlt
add
xchg
or
iret
push
pop
push
iret
sub
dec
ret
ror
insl
inc
cwtl
dec
lahf
push
fildl
ss
jle,pt
imul
sbb
nop
jg
movsb
inc
popa
rorb
in
sbb
add
fisubs
dec
loop
xor
aas
jl
pop
fidivs
fimull
adcl
fdivrl
xlat
ficoms
or
inc
jnp
shl
inc
adc
js
fldenv
jecxz,pt
push
xchg
jo
aam
andl
and
lea
adc
xchg
xor
jo
loopne
xor
mov
ja
lock
adc
adc
movsb
ja
fistpl
xchg
mov
mov
hlt
idiv
pusha
repz
mov
lock
dec
sub
xchg
inc
lcall
aam
or
orb
dec
push
push
xor
jmp
xlat
jne
sub
push
xor
add
and
lds
mov
sbb
push
jmp
mov
add
sbb
xchg
push
jle
cmc
sbb
sarb
push
loopne
ficoms
mov
outsl
shll
jge
cs
push
cwtl
repnz
push
iret
lods
subl
inc
mov
dec
int3
clc
pop
sahf
cmp
imul
orl
fbld
icebp
inc
leave
pop
leave
inc
pop
js
arpl
ss
movsb
sbb
aaa
jae
mov
dec
mov
rorb
xor
out
jb
jne
inc
or
in
test
and
pop
cmp
sub
jmp
repz
dec
jne
pop
fidivs
cmpsl
stos
add
and
ja
adcb
and
mov
pusha
adc
cltd
or
push
pop
add
sub
insl
dec
scas
jae
mov
mov
push
jo
fwait
or
lock
inc
or
jb
push
aam
inc
fidivl
enter
hlt
pop
mov
orl
rclb
movsb
leave
das
test
mov
fwait
push
outsb
adc
sub
mov
aaa
mov
jecxz
stos
jecxz
dec
adc
dec
xor
mov
daa
jb
je
cmp
and
pop
xchg
pop
test
xchg
push
xlat
xchg
in
jnp
leave
mov
mov
inc
xchg
and
mov
in
push
jle
add
xor
repnz
jb
out
rclb
mov
imul
out
mov
xor
mov
xor
pusha
jecxz
outsb
pop
inc
jb
ss
clc
jno
and
jae
notb
data16
add
aam
cli
adcl
mov
mov
fdivl
in
inc
call
outsl
ficomps
jno
mov
dec
orl
int3
adc
stc
sub
inc
xorb
les
mov
adc
gs
xchg
cmp
bound
cmp
int3
ret
out
cs
loopne
mov
sbb
gs
jecxz
inc
and
cli
cld
add
leave
jp
ds
out
out
mov
jmp
mov
or
mov
rorl
mov
xor
std
add
lock
inc
adc
jb
dec
repnz
push
orb
or
xchg
rcl
and
stc
adc
mov
lcall
sbb
ljmp
jb
pop
mov
sarl
mov
sahf
jnp
push
mulps
adc
sbb
adcb
cmc
pop
adc
repz
insl
inc
push
mov
andl
sbb
sbb
sti
out
xchg
sub
call
insl
stc
sbb
test
dec
outsb
and
inc
adc
ret
jl
and
xchg
mov
sub
in
stc
xchg
pavgw
mov
nop
pop
aaa
or
jne
dec
insl
fildll
mov
in
and
sbbb
or
jp
push
insl
aad
mov
stos
stos
cwtl
pop
hlt
dec
ret
loope
rcrl
mov
loop
bound
lods
lret
xchg
mov
mov
jp
popa
push
xor
push
mov
xchg
insb
sub
add
cmp
repnz
fimull
xchg
sub
insl
rolb
mov
sbb
and
push
and
inc
leave
xor
pushf
xor
fnstsw
jge
ljmp
inc
and
sbb
and
insb
or
adc
fistl
decb
adc
fwait
mov
pop
mov
push
mov
scas
outsl
jnp
popa
loop
sbb
sbb
push
adcb
into
xchg
push
jb
jb
xor
xor
scas
js
sbb
push
xor
ljmp
adc
subb
xchg
std
arpl
mov
pushf
push
ja
sbb
and
pop
sub
sbb
lar
stc
dec
addr16
adc
sub
inc
and
mov
jb
jle
adc
jmp
mov
xor
mov
pop
sbb
outsb
cld
pop
mov
pop
mov
scas
scas
or
sbb
sahf
lock
dec
pop
jbe
cli
shll
fcoml
jae
lret
leave
dec
sub
aam
jbe
pushf
cltd
test
cmc
ret
mov
mov
stc
pusha
das
xor
lods
jbe
and
and
hlt
mov
insl
jb
andl
adc
jnp
in
aas
push
fstl
and
test
push
mov
sti
sub
sub
lcall
sbb
call
jb
xchg
cwtl
scas
add
sub
ret
test
jge
les
adc
mov
adc
sbbl
cmp
mov
xchg
stos
loopne
jno
leave
inc
and
push
jecxz
dec
dec
sarb
xchg
jl
cmp
mov
cmc
std
mov
mov
and
adc
sbb
push
outsl
mov
mov
lock
pop
mov
out
iret
outsb
sub
or
pop
and
das
movsl
fisubrs
lds
jmp
sahf
ret
jmp
fistpl
jb
das
in
push
stos
negb
out
ret
arpl
push
push
jmp
dec
xchg
mov
in
inc
adc
pop
xchg
pop
pop
dec
xor
xchg
mov
les
outsl
loopne
divl
xor
sub
lods
lds
out
pop
das
pop
push
pop
and
inc
les
cltd
and
daa
add
or
jmp
adc
lret
mov
cwtl
inc
inc
rorl
jl
mov
or
pop
imul
mov
xor
in
js
fstl
add
sub
pop
sbb
mov
lods
popf
in
push
shll
cwtl
inc
push
xchg
inc
mov
dec
inc
fwait
rep
pop
xchg
hlt
sbb
cmc
push
insl
cltd
mov
inc
adc
cmp
xor
xchg
es
mov
jle
pop
movsb
push
mov
fwait
ljmp
rclb
hlt
or
inc
inc
push
push
jo
clc
sbbl
subl
hlt
add
daa
and
aaa
inc
pusha
xor
inc
pop
repnz
push
push
push
mov
in
addr16
inc
jb
fs
pusha
mov
add
outsb
iret
cmp
leave
push
lock
icebp
in
mov
xchg
sbb
rol
ss
divl
adc
and
aad
cltd
cs
sbb
jbe
dec
ror
fisttps
lods
or
mov
dec
jmp
test
pop
mov
lods
jne
addr16
dec
test
hlt
scas
xlat
lods
test
push
stos
mov
lret
ljmp
popa
idivl
fistps
pop
mov
xor
das
cwtl
or
cmpsb
pop
add
rclb
push
and
inc
out
mov
subb
or
add
cmpsb
sub
mov
push
adcl
fwait
cmp
ja
lock
and
push
dec
outsb
rorb
and
inc
cld
add
das
rcrb
lret
bound
movsb
xlat
jnp
mov
jg
repnz
ja
orl
jne
adc
lods
clc
daa
push
jo
bnd
imul
add
or
xchg
push
in
xlat
dec
loope
aas
and
jecxz
aam
subb
jge
lock
sarb
and
mov
pop
sar
imul
sub
lcall
lret
into
push
or
fnstenv
push
test
jecxz
notb
icebp
test
xlat
aaa
xchg
pop
sub
xor
fsubp
pop
or
mov
aaa
push
es
out
pop
pop
les
int3
inc
and
arpl
dec
add
and
jecxz
mov
int3
push
mov
outsl
add
test
fcoms
sub
inc
lahf
ret
jecxz
shll
sbb
jg
jg
lret
or
adc
pop
daa
and
mov
push
adc
jb
add
adc
mov
test
test
loopne
xchg
ja
mov
jge
cmp
mulb
icebp
push
cltd
fstpl
int
mov
cmpsb
mov
mov
push
mov
dec
lea
and
rcl
jnp
mov
and
jmp
subl
ja
add
mov
push
clc
bswap
dec
pop
repnz
jbe
imul
lods
hlt
sahf
loopne
notb
out
inc
lahf
decl
cli
sbb
and
movsl
or
lods
sub
pop
hlt
add
dec
cli
add
push
clc
sbb
out
and
inc
adc
into
orb
and
sti
jg
add
sub
inc
mov
out
pop
mov
pop
aaa
cmpsb
xchg
aad
insb
push
xchg
ss
imul
stos
in
mov
andl
cmpsb
outsl
popf
cltd
sbb
sbb
pop
adc
dec
mov
push
aas
mov
ficoml
xor
xchg
mov
test
pop
inc
or
push
ss
gs
adc
insb
shrb
push
mov
repnz
inc
in
add
aaa
shrb
push
jp
mov
test
push
int3
jae
sub
ljmp
adc
faddl
push
pushl
loopne
lret
js
shll
xchg
xchg
cmpl
adc
pop
inc
xchg
je
xchg
fsubs
lahf
ficoml
int
jecxz
jns
add
shll
stos
test
push
lret
adc
out
xor
nop
nop
sti
mov
mov
sub
xchg
cmp
mov
mov
cmp
inc
push
inc
in
sub
pop
push
inc
lods
daa
add
sbb
cmpsl
jle
sti
ljmp
imulb
shlb
das
pop
xchg
lcall
inc
lahf
dec
jb
movsb
repnz
pop
aas
clc
outsl
mov
pop
loopne
jmp
insb
add
or
test
popa
xchg
xlat
mov
sub
cmp
nop
cmp
fwait
loopne
dec
cmp
pop
jae
dec
aaa
and
scas
movsb
sub
sub
mov
cmpsb
lock
push
jb
dec
cs
cld
das
adc
shlb
scas
mov
fwait
test
xchg
cld
shll
and
fldenv
insl
fwait
daa
lods
shll
pop
jae
push
repnz
push
out
in
sbb
lahf
or
xor
pop
ljmpw
fnstcw
cmpsb
inc
sub
sub
lock
clc
mov
lods
nop
xlat
out
pop
in
xchg
fdivs
enter
inc
ret
jmp
pop
cmc
dec
cs
jge
push
mov
add
pop
std
or
cmc
sub
and
mov
sub
adc
mov
movsl
jp
jns
out
or
xchg
xchg
adcl
jae
mov
dec
pushf
and
pop
xchg
shll
xchg
faddl
enter
pushf
inc
insb
xor
out
sub
add
inc
ret
mov
lods
sbb
cmp
sbb
jo
je
jp
test
inc
sti
pop
mov
xor
mov
aam
xchg
jecxz
rcr
inc
cmp
sub
jo
sti
neg
mov
cltd
and
or
out
cmp
std
cs
cli
mov
fwait
jns
xlat
mov
or
adc
popf
repz
mov
sbb
adc
push
push
pop
pop
jge
call
push
andl
shlb
cltd
or
mov
or
xchg
bound
push
sub
sub
xchg
data16
push
jo
fdivs
jmp
scas
stc
ja
outsb
add
scas
ds
adc
dec
xchg
mov
mov
mov
adc
ss
in
ja
arpl
cmp
cmp
fsts
pop
popa
loopne
or
dec
dec
loope
sbb
or
push
mov
sbb
loopne
inc
xchg
xchg
lods
pop
pop
icebp
push
mov
inc
cmp
xchg
jecxz
insl
int3
cmp
cli
lds
mov
push
mov
fwait
in
clc
push
andl
mov
push
inc
xchg
xchg
inc
sbbl
les
cmp
push
mov
loop
add
ds
sahf
add
icebp
sti
mov
cwtl
leave
pop
fbstp
and
mov
lds
pop
std
jo
inc
jge
mov
xor
sbb
arpl
cmp
cmp
aaa
dec
je
out
push
addr16
jecxz
rol
cmp
xor
ljmp
xchg
gs
outsb
imul
add
dec
dec
sub
out
sbb
xchg
decb
stc
sti
pop
add
sub
cwtl
lret
lods
out
push
iret
add
imul
mov
push
xchg
mov
std
mov
fldl
pusha
out
jge
mov
mov
js
xchg
stc
out
rorl
dec
mov
add
push
ljmp
lcall
adc
in
xor
sti
cmpsb
ss
mov
or
fstl
stc
push
mov
xchg
pop
aam
jecxz
pop
mov
push
cmp
push
rol
and
loope
mov
mov
adc
push
imul
je
ret
rcr
out
or
sub
inc
fistl
adc
pop
enter
xchg
loope
into
mov
aaa
xor
das
dec
xor
xchg
mov
or
scas
mov
jae
xor
insb
dec
in
jnp
or
stos
js
cmp
jbe
fcomps
mov
mov
sbb
jp
les
mov
outsl
aaa
in
inc
lods
mov
rolb
mull
cmp
inc
fistpl
xlat
inc
idiv
outsl
and
cld
push
add
push
xchg
or
cmpsb
test
push
repnz
rcl
xor
loopne
lret
inc
push
mov
jb
cmp
repnz
push
popa
jmp
ret
jecxz
incl
clc
jg
in
rorb
call
push
insb
call
ret
dec
dec
popa
mov
adc
mov
inc
jns
add
std
xchg
adc
pop
loop
or
adc
pop
int3
outsb
cmp
cmp
sahf
push
popf
dec
xchg
lods
dec
in
mov
fld
add
testl
inc
pop
fistpll
insl
dec
add
cmp
jge
orl
les
icebp
nop
cltd
daa
stc
loopne
fisttpll
mov
or
lods
push
dec
inc
jbe
rorb
xlat
xchg
repnz
push
or
cmp
and
js
ret
inc
lea
mov
test
add
mov
out
xchg
push
push
add
hlt
adc
call
jns
push
es
aam
das
mov
and
jg
mov
add
hlt
inc
mov
jl
sub
ljmp
out
or
mov
cld
jle
sub
xchg
les
ficompl
jno
jnp
push
mov
jmp
sbb
add
mov
lock
jge
sbb
js
add
clc
iret
aas
ja
jle
es
add
fisttpl
shl
xor
or
aas
outsl
out
push
in
push
push
mov
iret
mov
mov
inc
mov
pop
or
cvtpi2ps
adc
test
mov
roll
mov
cld
sbb
mov
mov
sahf
lahf
push
push
mov
gs
pusha
popf
inc
mov
fwait
outsl
xchg
and
jg
mov
cmpsb
das
cmp
shrb
sub
push
xchg
add
xchg
das
lret
stos
mov
ss
out
jno
inc
inc
int3
adc
cmp
mov
jb
push
jg
cld
push
pop
shrb
sub
aaa
hlt
jno
repnz
and
mov
mov
jo
sub
sete
and
add
mov
inc
cltd
or
in
rcll
inc
stos
jecxz
int3
or
add
mov
cmp
pusha
loope
stos
lcall
lcall
addl
popa
mov
lahf
sbb
pop
mov
out
adc
or
jo
int3
sbb
imul
push
icebp
jl
imul
mov
pushf
xor
jbe
les
or
inc
push
jne
daa
xchg
pop
int
out
lea
lcall
push
mov
mov
loope
cli
outsb
loop
push
push
pop
stc
lds
movsb
or
pop
jns
mov
mov
lret
int3
cmpsl
lods
shrb
fwait
push
pop
in
push
movsb
or
push
out
cwtl
arpl
ret
push
call
out
decl
mov
addb
nop
mov
sub
xlat
cmp
sub
pop
xor
call
lods
out
pop
push
mov
insb
jge
jle
and
not
jmp
jg
lea
xor
fbstp
dec
sbb
xchg
pusha
fldl2e
mov
test
arpl
cmc
push
ja
call
cmp
lret
sbbl
es
and
push
mov
dec
push
mov
dec
adc
loopne
fwait
adc
push
mov
aaa
xchg
mov
inc
test
sub
sbb
mov
mov
xchg
jle
call
xor
arpl
mov
and
ficompl
push
or
sub
pop
or
gs
push
cmpsb
inc
jne
repz
pop
fisttps
fwait
dec
aas
es
jo
sub
ret
ret
cli
and
movsb
jge
cmpsb
mov
xchg
dec
dec
nop
and
mov
jle
lods
mov
fmull
adc
ds
inc
pop
std
in
jne
xchg
cmp
adc
pop
jecxz
int
outsl
push
js
shr
mov
xchg
sarl
cltd
cmp
out
fiadds
cmp
jge
xor
push
insl
mov
mov
fcomip
test
adc
ret
lods
ja
xchg
cs
mov
push
mov
jb
pop
pop
and
and
test
pop
xchg
or
mov
loope
or
leave
fadd
dec
jmp
ret
push
push
into
popa
push
xchg
loop
lcall
mov
add
ja
xchg
add
loope
clc
insb
and
rcll
in
or
stos
fldl
call
push
fistpl
lret
pop
iret
mov
mov
xor
add
fisttpll
in
inc
flds
adcl
cmp
and
in
leave
cmp
and
mov
push
xor
roll
push
push
movsl
mov
lea
sar
mov
lds
das
mov
insl
xor
jle
xchg
mov
sbb
insb
cli
jmp
imull
push
in
cmp
xchg
push
in
js
test
movsb
jge
repnz
cld
mov
outsb
fistps
popa
or
int3
inc
sbb
pop
xchg
push
push
xor
ja
inc
pop
mov
lea
iret
or
popa
push
sbb
ds
mov
stos
or
shrl
jmp
add
cmc
and
or
push
push
icebp
in
int3
in
xchg
lods
mov
loop
into
inc
popa
sbb
ds
xchg
bnd
mov
loop
js
and
and
lret
jp
push
add
mov
scas
jle
mov
arpl
cmpsl
icebp
dec
mov
mov
icebp
adc
loopne
adc
push
mov
jne
insl
cld
cmpsl
jge
push
push
in
icebp
das
test
xchg
add
pop
jne
add
add
clc
xchg
adc
mov
lock
mov
push
gs
jp
mov
or
jb
test
bound
fst
sub
fisttps
and
mov
mov
aam
rolb
push
dec
out
arpl
addr16
mov
movsl
and
pop
sbbb
je
clc
gs
pop
lret
xorb
in
movsl
dec
aad
mov
mov
gs
sbb
aas
cmp
sahf
in
inc
cmp
outsl
sub
mov
jecxz
aad
std
hlt
test
mov
xchg
sub
xchg
test
sti
in
mov
leave
sbbb
sbb
fistpl
adc
xchg
or
pop
mov
rcll
cmp
jbe
inc
negl
cld
push
add
push
xchg
roll
jl
sub
in
mov
shl
pop
push
xchg
or
mov
loop
inc
insl
inc
mov
clc
ja
aad
stos
pop
jo
out
sub
xorb
inc
mov
dec
insb
pusha
popa
std
or
test
mov
aas
outsl
es
sub
pop
dec
lea
mov
or
jne
dec
dec
inc
lock
mov
jno
mov
stc
mov
lods
xchg
mov
mov
daa
cmp
outsl
adc
test
in
and
sbb
push
sbb
int3
sub
adc
sbb
sahf
icebp
pop
add
fisubrs
jl
and
stc
sbb
ficoms
in
mov
xchg
add
cld
out
ret
jo
sbb
or
addr16
lods
scas
sar
add
xchg
pop
iret
and
lds
sahf
mov
ficoml
stc
mov
hlt
inc
mov
int
inc
imul
test
mov
add
jb
jl
adc
fnstenv
stos
lea
jmp
inc
leave
inc
mov
rcr
int
xchg
scas
cld
add
cmpsl
adc
push
sub
or
pop
inc
lock
lods
and
and
xlat
inc
mov
ds
dec
mov
addb
mov
xchg
jnp
jnp
cld
aas
filds
pop
or
scas
test
push
xchg
std
sub
mull
movsb
add
ret
into
adc
loopne
push
aam
cltd
xorl
outsl
lahf
sub
mov
cmp
push
and
nop
movntps
dec
pop
or
sbb
inc
stc
cmp
pushf
pop
shlb
pop
out
inc
icebp
rol
push
mov
rorb
pushf
andb
sub
or
adc
in
mov
push
nop
dec
fnsave
or
data16
mov
xlat
adc
or
mov
ja
hlt
mov
push
adc
or
fistl
lea
std
add
outsl
sbb
and
adc
frstor
push
xor
jo
ljmp
and
rorl
jmp
xchg
je
jmp
jl
mov
jg
lret
in
lret
dec
fnstenv
ret
push
lds
loopne
mov
xor
lock
rclb
aad
jo
loope
mov
mov
mov
dec
fidivl
pushf
out
ret
xchg
les
lock
jne
pop
jle
dec
jmp
cwtl
sbb
cltd
fadds
cmp
mov
inc
xlat
and
int
jp
out
repnz
mov
bound
nop
imul
aaa
shll
jns
mov
enter
aad
push
cmp
cmp
or
mov
and
jne
in
push
adc
adc
insb
stos
xchg
scas
pop
out
mov
fiadds
rclb
cmpsl
sub
stos
aas
adc
cmp
mov
loopne
and
sub
faddl
xchg
out
ljmp
xor
mov
cmp
pusha
shr
push
decb
stos
lret
nop
dec
gs
subb
add
xor
hlt
and
inc
ror
mov
cmpsl
or
and
sbb
fwait
or
xchg
cmpsb
das
popf
inc
pop
jmp
mov
inc
fistpll
aad
into
jmp
inc
or
loopne
aaa
push
jle
mov
jmp
mov
and
in
jl
ret
inc
xchg
lret
fmuls
into
pop
rcr
xor
sahf
push
out
jl
sbb
mov
leave
outsl
bound
lret
mov
xorl
adc
pop
std
sub
xor
mov
jns
int
cltd
mov
leave
jae
shll
pop
mov
inc
popl
mov
fadd
jne
lods
mov
mov
leave
lcall
mov
sbb
pop
push
testb
xor
data16
cwtl
mov
or
mov
ja
mov
mov
jbe
cmpb
jae
pop
je
inc
mov
imul
addr16
subb
test
ja
jbe
mov
cld
pop
ljmp
mov
es
movsb
icebp
jno
hlt
in
aad
inc
lds
and
in
jo
pushl
pop
add
mov
sub
adc
push
in
push
mov
ds
in
dec
add
cltd
andl
cltd
test
pop
and
jae
lds
in
inc
adc
push
mov
icebp
xorb
mov
les
pusha
and
or
or
aam
js
lods
ljmp
or
test
sub
cmp
xchg
ret
and
add
test
push
outsl
mov
mov
add
push
out
sub
lea
jmp
adc
adc
pusha
dec
adc
jg
jb
mov
xor
iret
sbb
divb
cmp
test
movsb
sub
or
or
adc
cmpsl
xchg
inc
mov
movl
add
lock
push
push
cmp
jnp
mov
cmp
sbb
cltd
cmp
pop
fwait
push
pop
push
xchg
leave
mov
xor
mov
lret
repz
fs
dec
jo
add
lock
add
sbbb
ja
dec
lock
dec
or
xor
or
push
nop
je
arpl
dec
test
xchg
in
lcall
add
fnstsw
pop
xor
dec
out
pop
enter
int3
icebp
clc
arpl
lahf
dec
jge
movsb
aam
adc
gs
xor
insb
cmpsb
popa
xchg
mov
dec
lret
icebp
shrl
test
adc
call
push
out
nop
jno
adc
jecxz
pop
adc
pop
cmp
inc
sub
xchg
pop
adcb
shll
scas
fiadds
das
cmp
data16
inc
add
movb
cmp
add
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jmp
mov
loope
addb
es
cmp
xor
in
outsl
lds
mov
test
aad
mov
mov
jge
mov
ret
dec
outsb
pop
es
ret
fldcw
dec
mov
mov
pop
gs
dec
and
pop
clc
cwtl
xchg
nop
test
pushf
lret
mov
insb
mov
iret
insb
dec
inc
mov
xor
push
subb
aas
in
mov
push
clc
cmpsb
out
push
push
and
orb
inc
dec
insb
hlt
xor
lods
mov
rcrb
xlat
push
mov
jge
into
jge
stc
int3
inc
in
adcb
inc
mov
pop
sub
clc
xchg
xchg
jbe
fsubrs
data16
enter
out
fucomip
into
lretw
pusha
adcl
lods
hlt
sbb
movsl
push
pushf
pop
pusha
mov
andl
mov
insb
pop
cmpsb
push
cld
pop
ret
xorl
fsubl
or
push
mov
and
jno
xchg
adc
das
pop
in
insl
cmp
and
aas
lahf
das
push
mov
outsl
daa
inc
mov
rcll
cmp
jnp
in
jae
xor
out
dec
addr16
rclb
xor
mov
xchg
cwtl
cmp
cld
dec
hlt
xor
aaa
mov
das
dec
sbbl
sbb
add
jge
xor
xchg
jmp
xlat
jmp
inc
dec
xchg
out
inc
adc
sbb
sbb
popf
test
pop
mov
das
jne
xchg
clc
inc
aad
fiaddl
xchg
clc
mov
inc
repnz
pop
adc
test
fcmovbe
test
sti
add
lret
cmp
js
push
sbb
mov
mov
hlt
aad
out
push
sti
repz
mov
inc
gs
mov
ds
or
adc
push
pop
pop
jno
lcall
pop
jmp
xchg
icebp
add
fnstcw
dec
push
fs
out
fstps
lret
std
into
inc
cmp
cmpsb
jl
xchg
and
cmp
pop
rolb
cmpsb
dec
or
in
mov
nop
and
popf
sub
dec
xchg
inc
mov
testb
xchg
out
mov
aam
push
imul
jno
xchg
push
lds
mov
dec
mov
test
out
stos
add
add
sbb
push
add
iret
aaa
aam
loop
dec
int
movsb
jno
cmpb
mov
mov
jns
pop
movsl
xchg
iret
xor
addr16
sahf
or
push
sbb
shll
hlt
mov
add
jo
outsl
mov
test
pop
inc
mov
mov
jmp
push
sbb
xor
pop
out
mov
lahf
fsubrl
imul
aaa
pop
and
xchg
or
mov
test
dec
mov
dec
lret
dec
aad
adc
bound
sbb
lods
ss
das
lods
mov
push
adc
sarb
test
out
add
jle
ds
les
xchg
xor
ja
or
inc
cwtl
sub
mov
jno
popf
out
movsl
jae
lret
subl
pmaddwd
mov
xor
mov
cmc
das
insb
out
jbe
lods
and
shr
gs
add
mov
mov
xchg
pop
mov
repnz
stos
push
sbb
ret
test
js
divl
mov
push
or
or
push
int
sub
pop
popa
xor
cwtl
xchg
cli
xchg
mov
cmpsb
imul
jge
inc
sahf
cs
push
mov
pop
cmp
push
ds
gs
adc
addr16
xchg
xchg
aas
xchg
and
sbb
loope
int
aad
mov
out
daa
push
xchg
stc
xor
cld
inc
lods
adc
lret
rcll
add
xor
iret
push
push
aas
jns
sub
jmp
dec
sbb
cmpsb
jle
pop
cld
mov
in
stos
lods
pop
ficompl
aaa
daa
jne
fs
adc
pop
jns
cltd
lds
arpl
lahf
xchg
or
xlat
xchg
repz
sti
xchg
xor
cmp
xchg
shlb
push
lahf
inc
decb
add
dec
and
loopne
shrl
pop
sub
or
or
cmpsb
adc
sbb
mov
movsl
and
cmp
or
push
lcall
mov
pop
es
inc
xchg
adc
fdivs
fwait
sub
mov
push
cld
mov
imul
pop
and
insb
sbb
popf
dec
pop
sbb
arpl
pop
mov
into
imul
pop
call
dec
stos
cmpsb
dec
pop
in
js
push
xchg
inc
dec
or
cmp
xor
and
loop
pushf
leave
aad
dec
faddl
jbe
jo
dec
adc
mov
scas
sub
mov
mov
pop
ret
cmp
push
dec
sbb
dec
es
daa
inc
inc
jno
aad
and
adc
cmp
lcall
clc
ja
movsb
dec
mov
xchg
fmull
cmp
xchg
jns
push
dec
movsl
inc
ds
mov
movsb
stos
loope
xchg
mov
movups
icebp
fildll
mov
add
shll
test
push
int
inc
adc
pop
shrl
sub
add
push
mov
push
iret
fwait
addr16
hlt
mov
dec
push
lahf
jge
scas
jbe
sbb
dec
ja
mov
incl
mov
loop
dec
mov
je
mov
mov
mov
mov
loopne
push
test
push
sbb
scas
sti
insb
pop
dec
mov
stos
loop
in
jecxz
out
inc
adc
pop
ss
inc
or
aas
lds
rcll
xor
repz
in
xchg
mov
imul
sbb
mov
pop
movsb
test
sti
pop
mov
cwtl
mov
out
mov
outsb
subl
je
ljmp
mov
xlat
subl
into
mov
fimull
adc
ja
pop
push
jno
xchg
mov
aas
cmpsl
int3
imul
jge
out
push
jmp
sbb
push
dec
fs
xchg
xor
jae
stos
fnstenv
cmc
hlt
cs
mov
cmp
push
mov
xchg
icebp
mov
jp
xchg
js
push
jge
fdivrs
and
pushf
inc
xchg
xchg
insl
jno
jbe
insb
sub
adc
mov
mov
or
pop
dec
sub
jmp
fcompl
mov
ds
subb
mov
push
ss
inc
ja
testb
sub
fsts
scas
jb
loope
sbb
and
cmovno
imul
sub
xchg
xchg
cltd
dec
sbb
mov
add
pop
sbb
push
add
pop
jl
xchg
xchg
push
xor
xor
shrl
push
out
loopne
sar
dec
test
mov
mov
mov
cmc
push
cwtl
dec
dec
out
mov
fldt
pop
jge
mov
popa
mov
sbb
inc
test
push
dec
jns
and
sbb
std
xor
jo
and
jge
adc
shl
adc
in
stos
sbb
pminsw
imul
jle
push
sub
or
mov
pop
lret
sub
aas
mov
outsb
dec
add
fldl
aam
xchg
fs
sbb
lods
pop
push
cmp
dec
scas
sub
push
push
jecxz
mov
jne
jno
cmp
das
sahf
sarl
int
adc
mov
or
pop
cmp
dec
xchg
dec
add
pop
mov
sbb
or
imul
pop
inc
pop
pop
cs
push
getsec
scas
aas
fsubl
out
pop
lods
aaa
mov
repnz
ljmp
xchg
cli
fwait
push
into
aam
aad
lock
pop
js
test
pushf
adc
and
and
inc
mov
scas
sti
xchg
aas
sbb
jg
pop
in
xor
out
push
add
sbb
xor
sqrtps
enter
shrb
imul
cli
xchg
mov
add
mov
ljmp
es
mov
sti
mov
es
cmpsl
addr16
push
mov
push
stos
add
cmp
cltd
aaa
adc
test
jo
pop
mov
imul
aad
adc
cli
mov
inc
insl
test
push
and
push
movsl
ret
jle
jbe
lods
and
mull
in
loopne
stos
lods
ss
mov
enter
adc
lods
cmpsb
and
xchg
insl
or
pop
lds
adc
cmpsb
sbb
jg
mov
ss
xchg
scas
out
push
addl
pop
js
data16
loopne
or
sub
cmp
cld
pop
xchg
mov
mov
stos
dec
cmc
sub
or
push
loopne
out
dec
testl
int3
lcall
jmp
dec
je
push
mov
iret
mov
add
scas
roll
fadd
or
xchg
adc
outsb
add
dec
and
sub
sub
mov
mov
pop
mov
mov
inc
imul
mov
inc
jns
insl
push
or
cmp
mov
xchg
mov
xchg
sub
andl
xchg
ret
inc
xor
add
fnstcw
mov
int
out
ret
icebp
fdivl
out
mov
cmp
lods
mov
mov
loope
push
scas
lret
bswap
mov
push
sub
les
push
shr
mov
lods
hlt
sbb
int
rcll
dec
xor
jae
jne
out
pop
mov
and
stos
xor
mov
popf
stos
cs
repnz
icebp
sbb
push
out
and
imul
lahf
popa
test
adc
pop
inc
in
in
fwait
sub
hlt
inc
ret
adc
rclb
push
pop
jno
leave
imul
push
mov
shll
add
mov
xchg
xor
sub
stos
add
lds
test
test
sbb
int3
push
popa
jmp
lcall
sti
jg
adc
inc
push
leave
adc
cmp
loopne
jae
sahf
mov
call
popf
pop
das
add
mov
sbb
js
push
in
dec
in
cld
aaa
cs
mov
es
sbb
and
xor
lods
in
or
lods
nop
fists
sub
rep
outsl
and
je
ret
mov
xchg
jecxz
pop
andl
mov
xrelease
push
cld
sbb
fs
jp
push
out
push
push
jmp
pop
cli
jo
fwait
in
mull
into
insb
es
std
mov
xor
xor
out
sub
pusha
movsl
outsl
ja
arpl
repz
pop
in
mov
xchg
push
mov
pop
outsb
pop
lcall
cmpsl
push
loopne
add
lock
mov
fildl
faddp
fs
sbb
add
jo
or
cmp
mov
xchg
stos
add
jb
xchg
das
mov
xchg
imul
cmc
push
mov
leave
addl
mov
test
mov
mov
push
jle,pt
push
addr16
test
push
sbb
mov
in
lcall
mov
jbe
mov
xchg
jecxz
std
adc
pop
jp
cli
jne
outsb
or
js
cmp
xchg
jmp
xor
lock
sbb
push
scas
lods
push
push
inc
cmp
iret
add
mulb
subb
insl
mov
or
xor
loop
js
orl
pop
mov
subl
mov
jp
insl
xchg
test
outsb
cmp
decl
inc
jecxz
push
dec
or
mov
cmp
fcmove
jae
mov
ret
aad
add
dec
rep
jbe
hlt
xorl
shlb
and
cld
sub
aas
jnp
mov
xchg
adc
cmpxchg
add
add
cmpsb
pop
test
sbb
xor
add
loope
push
lods
iret
dec
xchg
cwtl
jno
jle
cmpsb
dec
lods
or
je
shlb
pop
in
xchg
call
and
aad
push
xchg
add
dec
push
adc
xlat
pop
xchg
xchg
ja
pop
and
pop
sbb
mov
pop
movl
jno
mov
pop
jmp
cmpl
inc
or
call
xor
out
xchg
jns
mov
movsb
push
add
jmp
xchg
sbb
cld
fdiv
scas
pop
xchg
lds
cltd
and
lahf
cmp
mov
sub
addl
ficompl
xchg
push
repz
push
sub
js
xchg
push
xchg
jnp
or
bound
stc
add
and
sbb
lahf
inc
ss
mov
jge
imul
bound
pusha
aad
xlat
rcl
popf
aas
in
ret
cs
nop
mov
cld
repnz
lcall
loopne
push
push
cmpsb
lds
stos
rcrl
cs
adcb
sbb
fwait
cltd
std
call
push
fisubl
jl
xor
dec
idivl
stos
cltd
dec
leave
adc
dec
dec
repnz
sub
fldenv
shlb
dec
lcall
lea
cmpb
pop
fsubrs
push
add
or
adc
mov
fsts
inc
cmp
sbb
mov
into
loope
jecxz
xchg
xor
sub
pop
pop
cltd
lret
adc
sub
into
ds
lds
mov
mov
lcall
jmp
pop
push
xchg
add
pop
minps
jb
adc
sbbl
mov
orl
add
fwait
lret
arpl
pop
xchg
subl
int
and
sbb
pop
push
cmp
pop
mov
jbe
adc
mov
maskmovq
pop
aas
mov
dec
cwtl
jmp
mov
js
mov
jbe
outsl
dec
push
bound
fisttpll
jmp
movsl
stos
in
ds
lret
and
rcrl
jecxz
enter
or
and
stc
xor
cmc
xchg
push
jl
sarb
add
es
xchg
in
hlt
and
imul
lods
loopne
sbb
sub
push
mov
int3
ja
js
repnz
movl
add
inc
cmp
cmpsl
test
dec
cmp
loop
mov
lock
dec
loop
sti
dec
and
add
das
xor
sub
imul
add
push
mov
jmp
out
and
incl
mov
daa
xor
bound
or
mov
jns
fcomps
fcompl
arpl
pop
ror
and
mov
sbb
mov
loope
add
ds
adc
addb
fiaddl
dec
xlat
leave
push
jno
or
sbb
dec
insb
lahf
jl
sub
frstor
in
inc
xor
push
rorl
pop
pop
push
sbb
cld
mov
and
cs
cltd
sub
dec
ljmp
mov
int
jmp
shlb
jnp
sub
cwtl
adc
leave
lock
orl
popa
repz
xchg
ror
ja
adc
push
fwait
push
xor
fs
cmp
std
jno
xchg
imul
js
test
sbb
int3
fimuls
test
dec
xor
sbb
ljmp
mov
or
push
xchg
repnz
jno
xor
aaa
addr16
pop
pop
fcompl
cwtl
shlb
je
shl
xchg
push
push
and
mov
bound
mov
cmp
pop
push
push
or
fsubrs
mov
sbbb
inc
sbb
mov
or
ret
arpl
ss
fistpll
mov
stc
adc
mov
jo
stos
cmp
scas
pop
sbb
push
enter
and
repnz
call
xchg
and
mov
ljmp
lret
xchg
dec
inc
rcl
sub
add
out
cltd
pop
xchg
int
xor
hlt
inc
cmp
pop
jne
and
mov
dec
loopne
les
shr
or
sbb
les
addr16
mov
fldt
rol
cmpsl
les
nop
mov
mov
jno
dec
les
mov
clc
aad
pop
mov
xchg
mov
icebp
pop
xlat
movsb
pop
adcl
lds
call
lods
or
ja
add
call
xchg
xchg
mov
jne
inc
xchg
mov
lret
fs
mov
adc
push
sub
icebp
clc
daa
xchg
pop
inc
xchg
jge
out
aad
lcall
xlat
push
rorl
mov
pushf
pushf
sub
outsl
mov
pusha
sbb
and
adc
imul
scas
xchg
inc
mov
mov
push
enter
adc
inc
dec
aaa
test
cmp
jl
pop
popf
mov
cmp
pop
loope
outsl
dec
loopne
xchg
sub
inc
nop
inc
fistps
mov
test
int3
ss
movsb
inc
mov
ljmp
shlb
push
mov
jg
rol
lock
pop
out
lea
fldz
mov
aam
add
aas
or
rcrl
mov
pop
or
dec
sub
dec
jo
jae
xor
push
and
push
xor
add
imul
imul
ret
stos
adc
push
jae
test
test
mov
push
aam
out
mov
inc
push
jno
add
xor
push
mov
push
mov
sbb
cli
lds
bound
mov
popf
and
and
sub
cs
and
scas
lods
repnz
hlt
push
xchg
gs
pxor
jle
cmp
movsb
lds
jl
test
and
xchg
jmp
xlat
pop
jae
jl
adc
aam
daa
cmc
insb
aas
xchg
jb
xor
lock
cmp
mov
insb
pushf
or
xchg
cltd
mov
xchg
jge
addb
dec
sbb
push
jecxz
jg
add
adc
xchg
ja
ja
cmp
loope
clc
push
mov
cld
sub
or
sub
xor
nop
pushf
mov
sahf
popa
dec
or
shrb
push
loope
mov
mov
add
push
sbb
xchg
mov
out
cmp
sub
sti
movsl
fstpt
jo
xor
push
out
cltd
mov
xchg
int
mov
and
pop
outsl
std
and
pop
mov
nop
test
divb
cwtl
sbb
and
lahf
mov
xchg
sbb
adc
xchg
mov
xor
out
mov
add
or
push
lret
mov
test
mov
test
xor
and
pextrw
push
xor
sbb
cmp
sbb
dec
scas
adc
repz
lea
xchg
pop
mov
pusha
mov
sub
cltd
data16
cmc
loope
lcall
sbb
jl
in
add
outsl
jne
and
leave
arpl
incb
mov
in
popf
stos
sub
inc
test
xchg
push
dec
data16
cld
push
in
push
xor
loopne
gs
pop
cltd
add
cltd
in
imul
push
push
sbb
and
fildl
push
les
inc
in
pop
xchg
cmpsb
xchg
shrl
repz
adc
cld
out
stos
jns
mov
in
fwait
push
imul
mov
jnp
cmp
lret
ss
clc
add
aam
push
cmc
insb
idiv
pop
js
iret
aas
adc
mov
mov
test
push
xlat
mov
cmpsb
inc
fists
cwtl
int3
test
jecxz
rorb
or
adc
mov
lret
aaa
sbb
stos
or
int3
stos
push
lea
aaa
push
stc
sahf
ds
mov
sbb
push
or
pop
jle
lret
adc
popf
inc
cmp
fs
fmul
aad
dec
cs
adc
mov
fdivrs
xchg
xchg
out
inc
and
das
add
and
pop
or
test
push
jo
enter
dec
ret
push
mov
rclb
lods
in
jns
popa
sub
push
cmp
add
mov
inc
pop
push
lahf
push
pop
sbb
jp
xchg
and
shll
sbb
jb
shl
scas
cmpsl
mov
out
mov
mov
popf
jb
push
faddl
inc
xlat
jno
fwait
iret
addr16
loopne
ja
xchg
add
out
pop
je
std
dec
jge
lahf
out
dec
cmp
and
mov
ljmp
push
push
fadd
sbb
addr16
xor
or
je
movsl
daa
hlt
stc
enter
cltd
jo
jmp
movsb
push
imul
loop
jb
ret
push
mov
and
test
fldt
in
inc
call
mov
jecxz
lods
leave
dec
pushf
aam
lods
dec
cmp
es
ljmp
inc
into
orl
or
in
pusha
icebp
test
mov
or
fs
int3
dec
in
mov
xchg
jmp
insb
mov
inc
pop
mov
pop
test
out
out
test
sar
push
call
cmp
mov
pop
shlb
mov
addr16
xor
or
out
pop
fcompl
int3
xchg
push
sub
cmp
scas
mov
test
xlat
int
push
jp
mov
mov
inc
stos
bound
and
jg
add
dec
fimuls
cmp
test
add
mov
js
shll
add
mov
daa
enter
mov
xchg
iret
xor
in
push
jge
mov
inc
cmp
pop
jno
gs
cmpsb
cmp
sub
lods
xchg
xchg
mov
push
aaa
into
popf
arpl
mov
int3
cmp
pop
mov
or
repz
mov
inc
xor
movsl
aam
adc
ss
xchg
repz
pop
movsl
daa
mov
jge
and
shrl
lahf
adc
mov
stos
jbe
cmpsl
int
cli
rcrb
jle
xchg
cli
jbe
fcomps
fbld
stos
mov
jbe
jle
push
notb
rolb
int
or
or
xor
dec
and
push
sub
xchg
arpl
movsb
cmp
add
inc
in
pop
rorl
and
jb
fs
mov
mov
cmpsl
daa
xchg
scas
fiadds
pop
add
mov
mov
mov
leave
xor
sahf
or
ds
sbb
out
fs
loopne
pop
subb
xchg
pop
pusha
and
push
push
jl
dec
enter
mov
jecxz
fnstenv
cld
std
cmc
xchg
push
inc
inc
cmp
inc
jns
pop
dec
push
les
fwait
mov
pusha
push
scas
les
dec
cltd
roll
sbb
call
jne
movsl
add
sar
test
sub
xchg
pop
lods
lods
call
mov
scas
jge
icebp
xchg
push
addr16
lret
jg
mov
in
imul
push
dec
sahf
leave
push
repnz
jmp
mov
and
aad
inc
dec
inc
jb
imul
cld
orb
and
insl
testl
adc
pop
iret
imul
fcoms
lds
popa
repz
dec
or
xchg
stos
scas
inc
inc
cld
iret
mov
mov
mov
add
sub
loope
and
adc
push
sub
scas
movsl
adc
lods
xchg
pop
rcll
ds
jmp
ja
out
sarl
push
jne
sub
xchg
mov
jnp
imul
aad
es
shrb
pushf
in
sbb
jo
out
loope,pn
enter
adc
inc
bound
xchg
pop
orb
push
xor
inc
dec
mov
add
out
pop
mov
mov
js
mulb
ret
add
jmp
pop
test
mov
jno
lcall
adc
in
loope
adc
stos
sub
outsb
js
xor
outsl
dec
icebp
adc
cmp
xchg
adc
mov
jo
orb
subb
mov
sbb
cmp
int3
hlt
ret
fimuls
xchg
or
xor
inc
adc
aad
adc
stos
lret
ss
cmp
fdivs
mov
lret
imulb
adc
dec
sbb
pop
les
js
ror
inc
push
add
loopne
fistl
mov
and
dec
addb
mov
hlt
add
xchg
xchg
mov
call
pop
mov
mov
aam
mov
mov
jo
mov
mov
add
lahf
pusha
adc
adc
add
shlb
push
jae
jecxz
mov
inc
andl
adc
loop
xor
movsb
or
out
and
add
ficompl
cmp
pop
xchg
out
das
out
mov
add
in
pop
adc
aas
in
lcall
jg,pt
cmp
add
pusha
out
sbb
or
lret
fs
ja
sarb
out
mov
loop
lcall
std
je
cmp
add
mov
or
xor
popa
adc
sbb
xchg
dec
incl
fwait
and
enter
push
pushf
js
js
and
fwait
int
sub
jne
mov
cmp
mov
inc
jae
repnz
data16
jl
movsl
rcrl
inc
adc
aas
js
sahf
pop
gs
xor
dec
mov
inc
sub
test
test
pushf
cmpb
pushf
pop
daa
ja
xor
sbb
in
jae
pcmpeqw
xor
pop
out
cli
lahf
sub
imul
rclb
jp
ljmp
or
icebp
mov
lock
imul
cmpsb
je
sub
xchg
imulb
mov
test
jge
popf
add
push
or
inc
gs
xchg
xchg
in
stc
ds
insl
jnp
ds
add
test
movsb
dec
adc
leave
rolb
addr16
andl
mov
adc
and
sbb
fwait
mov
cmp
stos
cmp
repz
es
cmp
mov
aam
hlt
adc
fimuls
inc
pop
or
xorl
cmp
lcall
lcall
loop
and
adc
inc
mov
ss
push
mov
xchg
out
shlb
fucomip
in
pop
pop
inc
movsl
lea
inc
fisubl
sub
pop
cli
sbb
subl
sbb
andl
inc
clc
jne
mov
adc
add
pushf
outsl
out
mov
shl
fmul
sub
in
adc
pop
in
jne
xlat
into
jecxz
sub
addr16
imul
lds
imul
xor
fsubrp
pop
pop
mov
sub
sahf
lods
mov
mov
popa
lods
cmp
jecxz
inc
xor
cmp
out
pusha
call
mov
rcl
hlt
inc
ja
loopne
or
cltd
pop
xchg
sbb
inc
sbb
stc
mov
and
sahf
test
push
jg
in
jle
lret
fwait
mov
lret
jecxz
pop
ds
jns
outsb
rcr
jae
sub
sbb
shlb
jns
cmp
adc
sub
mov
daa
cmc
clc
inc
mov
lock
mov
addl
cmpsl
pop
lret
mov
inc
popf
ret
pop
fs
or
cmp
in
sbb
lods
add
out
mov
push
cmp
sbb
xor
xchg
fnstenv
je
adc
adc
aaa
movsb
movsl
test
ss
mov
push
dec
xor
xchg
rclb
ds
stos
and
inc
sbb
sub
mov
add
and
scas
ficomps
std
push
lods
xchg
imul
fldl
lea
scas
iret
divl
cmpsb
or
repz
in
pop
jb
xchg
es
pusha
mov
pop
jmp
adc
dec
daa
sub
mov
add
imul
mov
inc
pop
mov
jbe
sbb
pop
aad
movsb
inc
push
inc
repz
fidivrl
push
aas
notl
mov
scas
stos
out
lret
pop
push
pop
fcoms
adc
jno
cmp
in
icebp
add
sub
enter
mov
inc
nop
xor
loopne
rorl
push
cltd
adc
push
dec
adc
notl
into
mov
subb
pop
dec
dec
adc
lret
fidivrs
adc
xor
add
xor
dec
adc
movsl
shr
sbb
or
push
adc
leave
imul
rorl
insl
stc
lds
mov
jbe
cmp
cmp
scas
addl
jo
push
fs
sub
mov
lock
and
mov
cltd
sub
dec
lods
jb
mov
mov
xor
mov
dec
cmp
push
or
push
mov
imul
jl
in
loope
outsl
sub
push
push
jmp
mov
mov
xor
mull
xlat
popa
and
loopne
subl
fsubp
js
and
push
insb
push
mov
fwait
test
fstpt
ss
or
in
and
popf
dec
pcmpgtw
fwait
push
mov
fnsave
orb
mov
in
or
adc
stc
sbb
push
loop
sbb
jne
push
addr16
faddl
mov
sub
loopne
ret
cmp
or
call
jge
test
imul
ljmp
incl
loop
rolb
cltd
call
bound
testb
jp
push
add
and
jl
repz
cmp
xor
mov
dec
mov
sbb
jbe
lcall
fldt
test
in
jae
cmc
dec
jge
push
add
lcall
inc
inc
ss
mov
jg
jmp
roll
fsubrl
and
and
jle
retw
ss
cld
out
cmp
push
sub
rcll
dec
scas
xchg
in
shr
xchg
cld
dec
dec
ljmp
lcall
cmpsb
in
cmp
inc
or
enter
jg
pop
idivb
insb
addr16
adc
movsl
dec
sbb
dec
fsubl
mov
pop
dec
movsb
dec
or
scas
je
sub
or
aaa
cmp
pusha
jl
sbbl
sub
sbb
xor
and
xor
iret
movsl
inc
call
mov
shl
nop
or
adc
bound
andb
push
ret
shr
sbb
sbb
adc
jecxz
push
mov
xchg
lahf
das
stos
shll
jmp
dec
sbb
sub
mov
xor
sub
sbb
outsl
nop
mov
std
add
inc
es
dec
out
loopne
dec
and
cmp
lret
fstl
dec
andb
mov
or
dec
xchg
ds
adc
add
jne
mov
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
mov
xorl
sub
add
mov
xorl
xor
xorl
sub
addl
ror
sub
xor
xorl
mov
decl
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jb
mov
xor
mov
subl
sub
andl
xor
movl
cmp
movl
jne
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
movl
push
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
and
mov
push
mov
subl
xor
push
mov
add
addl
mov
mov
xorl
test
je
mov
adcl
mov
mov
mov
and
mov
xor
adcl
add
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
lea
xor
sbbl
jmp
inc
arpl
and
xchg
sahf
pushf
ja
stc
enter
adc
orl
andl
sti
iret
pushfw
sbb
jp
nop
nop
xchg
dec
in
cmpsl
sahf
adc
mov
fisubs
popf
popf
fstpt
pop
pop
dec
sti
mov
push
mov
xor
stc
lods
psllq
push
xor
inc
mov
pushf
dec
es
orl
icebp
pop
lea
jmp
gs
inc
inc
in
test
cld
aam
or
nop
mov
movsb
iret
and
test
mov
jo
jecxz
pop
icebp
add
out
push
rorl
adc
sbb
movsl
in
or
ds
movsl
daa
pushl
call
adc
jno
movl
inc
jle
idiv
insb
cld
adc
rolb
push
adc
and
adc
jg
jae
arpl
insb
lahf
lret
popa
jecxz
mov
mov
pop
clc
cmp
dec
add
cs
stos
fcoml
jge
xchg
jbe
pop
rcrb
sbb
mov
mov
stos
xchg
add
sahf
or
pop
adc
adc
int
push
dec
add
scas
pop
mov
push
sub
pop
adc
cmp
rorl
add
cs
jne
ss
fs
mov
bound
in
xchg
pop
imul
add
lods
call
test
lea
jg
test
dec
enter
cmp
and
lret
xor
vmovapd
mov
mov
sub
mov
add
and
gs
enter
insb
jne
int3
fucomp
ret
mov
xchg
fidivrl
pop
pushf
cmpsb
add
sub
fsubrl
and
cmp
mov
stos
gs
push
movsl
and
fdiv
arpl
inc
std
dec
stos
sub
jnp
adc
adcb
test
pop
jbe
cmp
sti
aam
test
push
add
mov
adc
xlat
daa
mov
rorb
or
and
test
and
popa
sbb
inc
mov
rorb
push
adc
add
mov
ss
cmp
insl
stos
arpl
aad
jnp
and
xor
test
cmpsl
idivb
or
mov
lea
mov
addr16
hlt
and
mov
cld
aaa
cmp
pop
movsb
jg
mov
add
and
adc
fistpll
mov
adc
inc
push
loopne
fwait
jbe
xchg
and
outsl
jg
insb
jae
jb
lcall
pop
xchg
push
push
loop
lahf
jle
xor
push
testb
outsb
cli
push
out
and
out
out
mov
sahf
sub
outsl
mov
push
push
test
lods
fsubr
jecxz
jge
pusha
adc
test
cwtl
ret
es
neg
xchg
lret
sub
or
jb
or
das
test
repz
xchg
aaa
cmp
loope
test
fistps
nop
inc
je
jb
xchg
cmp
and
mov
jp
imul
pop
sti
scas
pop
rdmsr
inc
vmwrite
and
add
dec
or
xor
or
cmp
fimuls
xchg
mov
mov
xchg
xor
or
je
push
push
adc
and
daa
fidivrs
dec
jecxz
mov
xchg
test
call
lea
loope
xchg
pushl
es
cmpsl
adcl
mov
and
push
mov
addr16
sbbb
sbb
and
xor
in
mov
push
push
stc
mov
cmc
dec
shl
or
push
mov
ds
xorl
xchg
rcll
pop
shll
pop
notl
push
shlb
jns
sub
movsl
xlat
dec
push
or
jmp
sbb
in
adc
cmp
jnp
ret
mov
lret
dec
xchg
in
sub
and
outsb
sub
push
push
pop
cwtl
jns
mov
or
in
imul
mov
test
push
xor
mov
jb
push
je
ss
fcompl
fcomps
mov
push
shrl
sub
add
cmp
add
mov
rorl
mov
das
jns
xor
mov
adc
lock
outsb
xor
iret
ret
mov
mov
sub
push
shll
cmpsb
push
psubw
dec
and
mov
cmp
cmp
cmp
cld
cmp
out
outsl
push
mov
cwtl
fs
jnp
or
pop
or
out
xchg
call
sbb
mull
or
cmc
sahf
dec
popf
mov
arpl
adc
push
rclb
cwtl
ljmp
jge
lea
push
jae
dec
call
cli
das
dec
and
mov
loope
pop
push
xchg
add
fbstp
aad
inc
and
int3
mov
mov
xor
mov
aad
push
inc
fwait
push
push
mov
xchg
fucom
hlt
dec
push
pop
pop
jg
jns
push
icebp
adc
call
or
add
push
lret
je
leave
repz
and
inc
test
sub
testb
int3
pop
jne
mov
mov
mov
add
je
enter
into
movsb
sub
daa
aaa
xchg
mov
or
xchg
xor
outsb
add
movsb
push
inc
lock
push
mov
fistps
sbb
xchg
addr16
movsl
cmp
int
xchg
test
mov
lods
ud2
mov
xor
cmpsb
lods
pop
dec
pop
insl
jns
sarl
mov
mov
dec
and
in
push
mov
adc
xchg
push
in
jmp
add
pop
xchg
jge
mov
dec
inc
sbb
xor
inc
jp
testl
adc
stc
mov
adc
ljmp
mov
cli
or
scas
mov
pop
shrb
in
frstor
test
rorl
mov
inc
daa
mov
shl
pop
inc
mov
sbb
loope
pop
dec
jmp
pop
es
testl
test
xchg
popf
pop
jno
imul
mov
dec
out
lods
mov
sbb
push
pop
out
and
cmpsl
mov
dec
mov
mov
fs
xor
cmc
sbb
hlt
dec
cs
scas
insb
xchg
fisubrs
add
inc
insb
cmp
jl
inc
lret
sbb
jns
mov
enter
dec
cmp
mov
cwtl
das
dec
and
int
sbb
jmp
popl
and
addl
cmp
mov
insl
stc
out
cmp
push
aad
sti
fcmovne
subl
lods
clc
or
xor
addr16
data16
xchg
or
mov
jae
orb
imul
mov
enter
jbe
jecxz
aad
jae
movsb
jp
test
inc
pop
aam
int
je
mov
movsb
mov
ss
fs
lahf
dec
lahf
inc
pop
cs
scas
pushf
cmp
sub
adc
jecxz
imul
cmp
inc
test
adc
adc
inc
out
mov
mov
pop
add
rcrl
cmp
lods
dec
movsb
and
xor
or
inc
mov
out
shr
xchg
push
jo
shl
mov
fisttps
adc
push
sarb
mov
cmpsl
mov
cltd
sbb
adc
push
mov
rcr
xor
leave
rcrb
shlb
push
jg
jecxz
sti
mov
add
int
int
mov
fwait
mov
cmp
sbb
jl
popf
mov
mov
xor
pushf
das
hlt
out
sub
pop
lret
int
sub
mov
xchg
inc
mov
adc
cmp
pop
dec
fnstenv
cmp
orl
push
jg
es
push
std
xchg
sub
into
je
add
leave
sbb
pavgb
sbb
xlat
add
inc
jmp
es
dec
sarl
pusha
stos
fnstcw
icebp
mov
xor
fcmovnbe
ret
sbb
mov
xchg
fst
xchg
fwait
test
push
jno
imul
outsl
fcmove
mov
pop
or
cmp
negb
in
repnz
loopne
andl
jno
cli
pusha
clc
les
rol
mov
pop
out
xchg
out
or
xor
xchg
inc
js
ja
imul
pop
and
xor
loope
mov
fsubrs
sarl
shl
mov
push
xlat
jnp
push
into
inc
loop
insb
push
add
push
popf
jb
ud0
leave
xor
popa
shlb
adc
ja
fldenv
popa
push
push
xchg
and
push
adc
adc
mov
cli
leave
pushf
je
dec
lods
add
clc
dec
sbb
and
xchg
xor
lods
xor
dec
inc
lods
add
dec
inc
mov
or
cltd
lods
xchg
add
push
cmpsl
and
ss
cmp
pop
adc
sahf
mov
xchg
aaa
repnz
test
mov
push
roll
mov
cmp
cltd
push
pop
iret
out
mov
xor
xchg
and
fdivs
jl
pop
cmp
test
ret
pop
mov
int3
orb
jmp
repz
into
repnz
add
inc
pusha
push
mov
aad
in
aam
push
xchg
mov
jp
push
stos
aaa
cmp
scas
pop
mov
mov
inc
lcall
adc
ljmp
inc
test
dec
out
adc
movsb
clc
outsb
ja
fwait
int3
cmp
into
mov
in
clc
or
mov
scas
scas
jo
enter
in
sub
xlat
push
and
ficomps
xchg
loopne
adc
popl
mov
out
iret
imul
add
leave
cmp
or
repz
testb
mov
stos
cmpsl
jp
or
sub
test
push
push
lahf
jmp
pop
dec
fwait
mov
loopne
shll
or
push
enter
sbb
imul
jo
leave
dec
bound
cmp
jge
inc
shlb
stos
push
dec
lea
hlt
xchg
dec
orb
jne
fwait
aaa
jecxz
push
inc
jmp
cltd
ljmp
dec
ss
dec
jecxz
stos
out
es
mov
daa
stos
js
mov
jecxz
pop
sbb
iret
push
in
pop
imul
mov
jecxz
hlt
rorl
lods
xchg
imul
xchg
out
dec
push
push
add
cmp
mov
fildl
cld
cmpsl
mov
cmpsl
cs
sub
jae
mov
add
fwait
or
cmpsl
cmp
dec
popf
aas
popf
jg
jecxz
xor
fldt
add
daa
ret
jl
mov
xchg
pusha
push
lods
cmp
xor
push
loopne
sbb
ds
shrb
cmc
push
push
repz
or
in
fadds
imull
cmp
fcompl
clc
mov
lds
std
call
hlt
cmp
dec
bnd
cmp
or
and
mov
fistpll
lahf
mov
sub
pop
and
ficoml
bound
xchg
push
jnp
sub
xchg
or
adc
cmp
xchg
add
adc
dec
or
push
adc
mov
cld
repz
imul
cmp
inc
mov
imul
jle
push
xor
daa
mov
test
pop
ja
fwait
xor
xadd
out
xor
popa
arpl
inc
or
mov
stos
aaa
xor
push
push
mov
test
lahf
loop
lods
mov
lods
lar
xchg
mov
jae
lds
js
mov
add
stos
xchg
add
xor
cltd
inc
lcall
pop
nop
mov
mov
ja
out
cmp
mov
jae
aas
ficompl
pop
dec
shrb
or
int3
push
shlb
cmp
pop
jnp
pop
xor
in
dec
fyl2x
mov
je
adc
pushf
ja
adc
or
xchg
hlt
jmp
sub
stc
into
scas
add
shlb
push
cmpsb
mov
and
inc
xchg
xor
jne
out
lret
sub
dec
pop
loop
data16
iret
out
mov
push
int3
dec
xchg
adc
lcall
sbb
inc
sbb
outsb
jl
adc
adc
mov
sbb
mov
xchg
lret
xor
int3
movsl
movsb
mov
and
lret
aaa
cltd
nop
mov
cmp
jae
fdivrs
test
lds
push
sti
push
sbb
xor
mov
mov
xorl
popa
enter
insb
aad
in
mov
mov
js
mov
push
aam
pop
leave
pushf
push
cli
inc
fisttpll
andl
in
xchg
ds
mov
or
sbb
outsb
xchg
pop
bound
push
sbb
ficompl
in
ficoms
xchg
xchg
sbb
push
cmpsl
outsl
test
xchg
nop
hlt
jl
add
adc
loopne
add
repnz
aas
jae
push
sti
dec
cmp
cltd
jo
pop
daa
push
repz
cmp
addr16
push
mov
lock
or
pop
movsb
in
subb
inc
adc
mov
pop
pop
push
push
or
leave
cmp
ret
and
and
mov
and
dec
add
movsb
leave
or
xor
jbe
cmpb
mov
les
lods
es
jnp
in
push
in
sub
arpl
push
adc
inc
mov
mov
test
pusha
xchg
adc
push
xlat
filds
fmul
cs
adc
in
fdivrl
add
xchg
or
testl
mov
sbb
xchg
push
arpl
jo
jge
lahf
xchg
std
jecxz
jp
mov
jl
inc
xchg
xchg
outsl
add
inc
or
cmpsl
jmp
div
pop
jle
movsb
mov
inc
push
movsb
push
or
pop
sahf
xchg
cwtl
sbb
pop
lcall
notb
cwtl
mov
dec
push
xor
or
inc
cli
and
and
cltd
mov
xchg
pop
sahf
xor
call
or
jbe
out
xchg
scas
lds
and
ret
push
add
mov
mov
cltd
xchg
mov
jae
gs
lcall
pusha
pop
xor
xchg
and
inc
mov
testl
das
push
adc
xchg
lock
adc
pop
jno
adc
ja
mov
cltd
mov
stos
and
jmp
cmp
or
mov
call
dec
imul
fiadds
in
jl
lret
add
add
fisttpll
repz
cmpsb
mov
in
popf
xor
sbb
test
repnz
push
bound
aad
and
push
sarb
adc
adc
sbb
add
sbb
cmpsb
sti
add
std
mov
mov
out
pop
dec
leave
insb
popf
push
faddl
push
mov
shll
ljmp
xchg
dec
jo
stc
mov
and
xchg
jg
daa
dec
lahf
imul
pop
jb
pushf
inc
inc
jo
scas
cmc
add
sub
lock
in
push
data16
lods
sub
sub
mov
sbbb
sti
xchg
hlt
pushl
shlb
inc
push
mov
inc
mov
dec
into
push
xor
enter
xor
mov
inc
jo
jnp
jmp
ficoms
cli
adc
and
adc
pop
popf
mov
aam
cmpl
sub
mov
fdivl
mov
call
mov
sub
test
push
push
les
xlat
mov
xchg
mov
jbe
pusha
pop
pop
out
jns
push
testb
mov
dec
mov
inc
int
or
add
movsb
outsl
jno
fst
das
fidivrs
or
fcoms
fisubrl
xchg
repnz
xor
and
pusha
or
mov
test
cmp
or
negl
and
jb
fistpll
movl
test
lahf
sub
pop
dec
scas
cli
aaa
mov
imul
mov
test
adc
pop
jne
adc
cmpsl
das
shl
sub
adc
jmp
in
gs
or
xchg
sbb
mov
cli
daa
xchg
in
sub
pop
punpcklbw
jp
xchg
cmp
roll
lret
dec
fnsave
push
xchg
dec
fldenv
stos
inc
dec
mov
push
inc
int
movswl
int3
and
mov
inc
push
cmpsb
loope
sti
add
dec
scas
into
sub
fildl
scas
push
sarb
mov
pop
push
xor
and
xchg
aam
adc
jbe
out
xchg
outsl
fs
jmp
pop
aas
int
pusha
clc
dec
fs
shll
pop
repnz
ljmp
xchg
mov
sbb
iret
xlat
mov
adc
lcall
mov
es
add
lods
sbb
cmpl
dec
outsl
push
add
mov
mov
mov
in
jp
cmpsl
sbb
in
cmp
scas
shl
adc
fisttpl
pop
and
in
fbld
sub
addr16
shl
mov
sbbb
cmp
or
stos
push
dec
test
mov
cwtl
add
pop
and
jecxz
xchg
cltd
cld
fidivrl
inc
es
or
repnz
dec
ss
jns
cmc
jnp
or
je
and
cmc
es
pop
in
loope
out
sbb
data16
xor
dec
inc
xchg
mov
mov
add
imul
adc
pop
or
or
dec
sub
sbb
inc
sbb
jmp
insl
repnz
mov
add
hlt
or
leave
pop
mov
inc
cwtl
push
iret
mov
lea
pop
popf
inc
mov
push
sbb
scas
mov
sub
fistl
shll
into
inc
inc
and
dec
addr16
loopne
lods
pop
pop
jnp
adc
iret
adc
stos
adc
aaa
mov
popf
mov
pop
mov
jecxz
push
pop
or
sahf
mov
fsubl
push
sahf
sub
fidivrs
imul
loopne
fisubrs
fsubl
loop
mov
popf
mov
jp
outsb
xor
sbb
dec
mov
or
fwait
daa
pop
mov
fisubrl
xor
shrl
add
scas
dec
mov
repnz
je
cmp
lret
mov
mov
lahf
fstps
clc
aad
inc
cli
push
scas
out
xor
cmp
mov
pushf
inc
or
dec
mov
dec
rolb
daa
push
jne
fiadds
fisubrl
pop
xchg
push
xchg
mov
scas
jb
jmp
pushf
ret
lret
jno
repz
out
cmc
ljmp
jecxz
scas
outsb
mov
in
cmp
add
cmp
es
fmul
cmp
int3
cmpsl
insb
cld
pop
ds
in
sbb
outsl
and
xchg
jbe
add
cltd
lcall
sub
push
and
aaa
popa
divl
adc
push
and
mov
and
loop
push
xchg
dec
and
popa
dec
clc
mov
lcall
jmp
clc
xor
pusha
pusha
inc
and
add
es
mov
xor
mov
mov
sub
lahf
add
pop
hlt
pop
fs
xchg
adcb
scas
sbb
test
mov
mov
jne
mov
out
fistl
lret
adc
lcall
adc
sub
test
int
or
mov
mov
aam
icebp
dec
outsl
push
jb
insl
loop
jp
mov
mov
mov
inc
sub
dec
std
fisttpl
mov
adc
jecxz
test
xor
daa
sub
sbb
ss
imul
push
jo
ljmp
pop
sbb
push
add
mov
add
xchg
xor
push
mov
pushf
stos
xchg
sbb
mov
dec
adc
or
pop
adc
or
cmp
push
mov
or
push
decl
jmp
js
adc
mov
cli
mov
jb
adc
inc
push
xor
arpl
lods
cmp
aas
cmp
stos
nop
xchg
lods
xchg
cmp
adc
mov
adc
push
or
inc
addr16
cmp
loope
mov
out
sub
adc
in
pop
jmp
jo
das
insl
enter
push
push
and
aam
mov
cs
imul
jbe
mov
xchg
and
sub
mov
sub
insl
xchg
add
jmp
ret
push
lcall
fiadds
nop
adc
aaa
clc
xchg
ret
insl
and
daa
pop
push
inc
aad
sbb
mov
test
and
rolb
movsb
stos
xor
xchg
mov
dec
mov
sub
pop
mov
or
push
xchg
pop
push
adc
add
dec
sbb
aam
jae
scas
cs
js
push
dec
mov
inc
mov
addr16
mov
negb
dec
add
aam
inc
imul
into
xchg
leave
xchg
sbb
inc
or
popf
sub
popf
sbb
shll
out
aam
out
out
test
adc
in
shlb
dec
xchg
jle
minps
push
push
adc
imul
in
into
push
and
mov
dec
mov
cmp
movsl
ljmp
pop
or
push
add
cltd
idivb
push
test
xlat
xorb
outsl
icebp
clc
add
or
pop
aad
cmp
mov
sahf
mov
orb
pop
mov
lahf
mov
popa
into
cltd
sbb
outsl
sbb
lcall
push
dec
ror
add
inc
sub
leave
shr
stc
loope
stos
xchg
ds
sbb
mov
adcl
sub
insb
jecxz
jge
add
sub
or
cwtl
jle
icebp
cmp
lea
adc
sub
arpl
push
jno
mov
outsl
cmpsl
mov
rcrb
pushw
mov
xchg
xchg
add
ret
movsl
mov
push
xchg
push
jl
cmp
jmp
mov
push
outsb
push
cld
leave
insl
and
add
push
or
enter
mov
mov
in
or
and
sub
push
add
clc
push
andl
in
repnz
add
imul
fists
cmp
mov
mov
outsl
fdivp
icebp
das
mov
popa
sbb
xlat
mov
push
scas
aaa
mov
cmp
sbb
xchg
rcrl
jne
xchg
lcall
push
fbld
dec
in
outsb
mov
mov
adc
pop
cmp
loop
lahf
adcb
mov
mov
or
pop
mov
in
fiaddl
mov
mov
add
or
ds
inc
sbb
push
sub
pop
pop
inc
negb
adc
lret
xchg
subl
xor
scas
vsqrtss
adc
dec
dec
sub
sub
push
or
movsb
push
out
or
xchg
mov
das
jg
adc
mov
outsw
dec
je
sahf
loopne
xor
aad
cmp
inc
xor
cmpsl
pop
imull
cmp
jns
sub
inc
pop
sub
imul
cmp
jg
push
adc
cmp
testl
xor
mov
push
add
dec
sarl
ficoms
mov
and
adc
adc
xchg
xchg
xlat
inc
xor
add
adc
sbb
jle
and
mov
xor
dec
add
pop
xchg
pop
and
daa
push
daa
jne
and
sbb
lcall
cwtl
xor
xor
adc
push
mov
or
jno
out
jmp
mov
stc
pop
adc
pushl
movsl
test
sbb
sahf
push
cmp
iret
hlt
loope
push
push
inc
lcall
push
aaa
sahf
mov
jno
scas
jnp
push
mov
cmp
cmp
jb
or
les
insl
cmpsl
mov
pop
push
fdivp
cmpsb
pop
mov
cmc
ss
xor
jecxz
jmp
pop
adc
xchg
sar
xchg
scas
in
jle
push
and
ret
inc
cmc
push
andl
jo
cmp
mov
adc
out
iret
stc
insl
imul
jbe
xchg
mov
adc
dec
insl
pop
enter
jg
addr16
push
fcomps
adc
ds
push
int
jge
sbb
cmp
jl
nop
insb
movsb
clc
test
jno
lods
or
movsl
lcall
pop
inc
or
sbb
shll
sbb
movsb
inc
jbe
in
sub
jp
arpl
out
adc
xlat
and
jmp
inc
in
leave
popa
sub
movl
jae
sub
xchg
rclb
cmp
int3
ja
mov
xor
adc
push
push
dec
sbb
and
sahf
call
add
jbe
pop
dec
outsb
sub
fwait
cwtl
aad
push
xchg
lea
jmp
aas
mov
jne
and
xor
mov
sub
inc
pop
movsl
ss
jbe
jnp
adc
mov
into
or
adc
mov
push
cld
insl
add
pop
mov
adc
sbb
out
cmc
fndisi(8087
es
call
or
dec
mov
movsl
loop
inc
dec
xchg
subb
data16
mov
cmp
mov
sar
lret
cld
subb
pop
mov
inc
data16
jmp
mov
dec
mov
cmc
cli
es
sub
lret
ret
jmp
xor
xor
loopne
ja
inc
push
xor
loope
mov
nop
xor
sbbb
call
dec
testl
mov
out
inc
dec
subb
out
stos
push
mov
scas
addr16
aas
call
sub
pop
dec
das
mov
clc
mov
mov
dec
inc
mov
or
mov
xor
jge
and
cmp
or
fdecstp
enter
outsb
pop
add
pushf
sbbb
dec
enter
int3
add
gs
popf
mov
sbbl
iret
dec
ret
test
push
jge
scas
sbbb
xchg
pop
or
jmp
decl
inc
clc
xchg
popf
pop
dec
ljmp
testl
xor
xchg
movsl
gs
lods
stos
pusha
les
mov
cs
jmp
xor
jge
and
jno
mov
xor
call
fnstcw
aad
or
cmpb
ret
movsl
lcall
push
stos
jbe
mov
and
push
out
mov
and
int3
loopne
or
sbb
rsm
and
jp
xchg
orl
jp
out
pop
xchg
mov
sbb
jp
loop
and
shld
jo
test
aad
in
popa
shll
adc
add
test
fldcw
arpl
cmc
mov
push
pop
popf
lods
mov
push
mov
xor
push
pop
push
mov
dec
pop
pusha
adc
mov
mov
mov
outsb
add
in
push
cmp
test
test
xchg
jns
js
mov
lock
bound
dec
inc
jmp
push
jmp
lahf
dec
push
xchg
ss
ret
pop
and
jge
loope
lret
mov
mov
pop
sub
mov
push
or
xchg
hlt
lods
xchg
cli
push
sti
adc
ret
icebp
mov
out
shll
cmp
in
add
lea
inc
pushf
inc
inc
add
call
mov
in
cmp
mov
movl
mov
push
jle
add
cmpsl
inc
sub
mov
fistpll
cmp
iret
ljmp
inc
je
xchg
outsl
dec
out
mov
mov
push
inc
push
ret
sub
mov
mov
aam
pop
jne
adc
out
or
push
mov
into
inc
in
or
pop
sbb
and
dec
and
mov
or
cwtl
or
subl
dec
inc
std
imull
push
fidivrl
popf
cmc
ljmp
fwait
jne
mov
mov
jp
cmp
mov
mov
popa
out
idivb
sub
push
inc
and
popf
cld
mov
subl
xor
loopne
leave
popf
js
ret
hlt
mov
or
movsb
cltd
sub
jecxz
ss
repz
pop
push
and
std
pop
add
testb
shl
pop
repz
sbb
push
in
push
mov
enter
outsl
imul
add
inc
int3
popf
sbb
shlb
and
test
jb
mov
push
loop
cmp
sti
shrb
jbe
in
cmc
in
xchg
mov
std
out
mov
shl
ss
data16
xchg
popf
insb
cmp
xlat
stos
sub
popf
cmpsl
faddl
fldenv
insb
imul
and
adc
xchg
popa
test
pop
js
ficoml
daa
inc
cmp
out
mov
cmp
lcall
mov
dec
sbb
bound
sbb
mull
jbe
movl
sub
xorb
rcrl
inc
sbb
and
push
test
and
mov
inc
je
dec
jge
les
outsb
idivb
fsts
push
xchg
and
mov
sub
sahf
jbe
fst
mov
jecxz
je
cli
inc
pop
je
xor
aas
out
add
sub
scas
dec
xor
mov
daa
fstpl
mov
rol
mov
mov
int3
cmp
cli
jb
xchg
lret
jl
jnp
scas
lret
jno
sahf
cwtl
sbb
aaa
out
hlt
dec
scas
ficoml
push
push
stos
dec
repz
lcall
dec
xchg
mov
lcall
add
jg
cmp
xchg
adc
fwait
cld
fwait
xchg
cld
jge
into
int3
out
jecxz
dec
xchg
cs
sbb
data16
adc
xchg
push
imul
sub
xchg
adc
mov
xchg
movhlps
inc
xchg
inc
jo
inc
loop
ja
cmc
add
jp
xchg
pop
rcrl
loope
scas
adc
lret
sahf
xlat
aam
pushf
hlt
stc
xor
jge
xchg
sub
cmp
lret
testb
xchg
adc
loopne
sub
sbb
call
das
mov
lahf
imull
jb
xchg
dec
stos
jle
aas
push
adc
fcmove
and
data16
jecxz
inc
inc
nop
mov
xchg
hlt
sbb
test
mov
mov
add
or
jecxz
dec
leave
jl
add
loop
add
loop,pt
gs
adc
pop
scas
mull
push
in
inc
sbb
repz
push
and
and
push
fs
scas
push
out
pop
or
daa
lods
sbb
mov
fdiv
outsl
shlb
orb
aas
in
mov
fnsave
pushf
cld
out
notl
shll
inc
and
mov
ja
fdiv
xchg
dec
shrb
fidivrs
fwait
outsl
sub
lcall
inc
add
add
enter
and
cld
andl
xor
addl
add
cmp
movl
jne
xorl
pushl
call
and
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
add
movzbl
adc
mov
adc
mov
sbb
jmp
test
pop
sahf
andl
xlat
inc
xor
pop
lock
icebp
sbb
pop
pusha
jae
jmp
dec
pop
cwtl
pop
cmpsb
das
paddw
add
jne
jge
mov
int
stc
jno
lods
nop
sti
inc
mov
mov
into
mov
sbb
mov
aam
mov
mov
addr16
mov
and
sbb
mov
fnstcw
and
stc
adc
xor
ret
cltd
lock
jp
and
sbb
leave
fs
int3
out
sbb
fists
lahf
sub
addr16
sarb
lcall
mov
lahf
inc
divl
lods
fwait
sub
call
push
jnp
and
mov
pop
shl
mov
sbb
push
xor
xor
lret
sub
jmp
and
scas
nop
cmp
push
insl
lds
cld
push
and
jle
lods
pop
aaa
push
mov
lods
jmp
adc
adc
in
rclb
adc
scas
outsl
push
loopne
sbb
sub
mov
repz
test
stc
call
xchg
mov
mov
jb
and
sub
mov
push
fwait
loope
jns
add
cmpsl
out
stc
cli
std
pop
sub
inc
popa
cmp
fldt
rcl
xor
or
fs
xchg
adc
pop
fisubs
out
fists
jl
pop
fadds
bound
shrl
stos
jecxz
add
bound
fmull
cmpsl
jge
bound
adc
fiaddl
lret
push
into
repz
jecxz
or
dec
out
insb
jb
and
sub
lods
fnop
les
aam
in
mov
outsl
dec
mov
iret
aam
or
ret
es
bound
push
outsl
mov
sti
scas
out
pop
fdivs
jbe
dec
fldl
jo
push
es
push
int
incl
or
xchg
lods
decb
daa
cli
mov
lods
inc
and
sti
incb
dec
adc
in
mov
adc
lahf
mov
lsl
hlt
pop
and
cld
mov
stos
xor
and
movsb
scas
subl
ds
imul
inc
and
out
je
pop
stos
mov
sbb
pop
loop
fwait
push
push
and
sbb
jo
push
pop
lret
insl
adc
inc
push
push
pop
mov
fs
dec
lods
mov
sbb
fcompl
push
dec
mov
call
jl
enter
fdivrl
ss
out
xchg
mov
push
add
movsl
cmpl
lds
mov
aad
push
pop
jmp
mov
sub
mov
aad
mov
test
xchg
pop
test
cmp
or
pop
sbb
in
cmp
repnz
xlat
repnz
cmpsl
incl
mov
and
bnd
les
fisttpl
sub
jge
or
roll
lds
cmp
arpl
sbb
aaa
or
mov
adc
cli
push
stos
push
gs
rcr
jae
scas
iret
jg
out
stos
xor
iret
cli
mov
pop
leave
dec
cmp
out
pop
lock
fisttpll
repnz
hlt
mov
rclb
or
jp
pop
stc
or
sbb
es
mov
outsl
xor
ret
stos
mov
shl
imul
jge
std
sbb
xor
or
pop
test
cmp
insb
jnp
inc
push
xchg
xchg
xor
fnstsw
mov
xor
or
push
lods
push
imul
add
outsb
bound
xlat
in
ja
mov
sbb
mov
jle
mov
in
xor
mov
shr
mov
or
mov
mov
pop
sub
ljmp
jbe
loope
xchg
scas
push
pop
hlt
xchg
pop
mov
jg
fwait
sub
scas
push
lds
arpl
insl
psubusw
dec
sbb
jmp
rorb
dec
repnz
cmp
push
xchg
xor
ds
dec
lock
mov
repnz
mov
fdivrl
and
mov
xchg
jmp
cld
push
fbstp
sahf
jl
test
push
lds
out
and
test
mov
and
fdivl
ja
loope
mov
push
imul
jbe
pusha
xor
sar
cmp
xchg
gs
lock
je
out
test
pop
add
mov
sbb
daa
scas
or
mov
xchg
jns
or
jae
into
sahf
cmpsb
fcomps
and
fmuls
std
jne
jnp
add
test
push
mov
out
clc
cwtl
fstl
mov
push
out
mov
fs
xchg
stos
mov
outsb
sub
or
dec
scas
sbb
out
test
mov
sub
mov
and
dec
sbb
xchg
mov
ja,pn
int3
test
mov
cmpl
mov
negb
or
stos
mov
push
push
scas
xor
sahf
dec
push
ja
testb
xor
call
mov
cmp
jg
in
push
mov
pop
mov
sub
cltd
inc
xlat
adc
mov
add
xchg
imul
add
mov
sbbb
out
cs
repnz
push
add
stos
sbb
mov
or
lret
push
test
adc
nop
jp
push
insl
int3
mov
fcmove
pop
pushf
ret
daa
lds
call
ljmp
push
cmp
sbb
sbb
ds
out
call
out
push
loope
push
ja
jle
loope
movsb
mov
jns
cmp
notl
pop
mov
cmp
pop
dec
cmp
pusha
xchg
jecxz
sbb
push
and
lcall
lret
dec
cmpsl
jno
cmp
je
push
xor
out
test
sarl
cmpsl
test
sub
jno
push
out
je
sbb
mov
repz
cmpsl
inc
push
sarb
xchg
ljmp
cmp
sbb
std
addl
outsb
std
mov
or
ror
adc
xor
or
pop
fnstsw
sbb
cmp
mov
jmp
mov
mov
jno
ror
xor
pop
fiadds
jno
cwtl
jns
adc
pop
fistl
jmp
push
dec
pop
add
adc
orb
inc
mov
call
add
call
aaa
mov
enter
jp
lds
xlat
and
mov
adc
adc
fidivl
mov
xchg
loop
pop
cmp
repz
es
sub
dec
std
jb
inc
push
jbe
xorb
pop
jne
or
cs
loop
fwait
iret
sub
out
add
arpl
stos
cs
push
cmp
xor
inc
rorb
sub
cmp
subb
cmc
test
pop
test
pop
pop
insb
pop
bound
rorl
pop
icebp
and
gs
mov
inc
xchg
push
xchg
xor
cld
sub
lret
or
push
test
jb
lcall
ljmp
adc
jecxz
add
pop
add
sub
push
mov
sbb
pop
repnz
mov
jecxz
stos
popa
pop
lcall
lea
mov
repz
cld
ja
call
aad
fisubl
ret
not
popf
stos
jne
add
lods
andb
sub
push
ret
or
cmp
mov
adc
lds
imul
push
in
pusha
jne
lea
and
xchg
nop
push
ret
lea
out
aad
filds
insb
pop
jge
je
mov
jb
mov
stos
lods
or
and
jno
dec
mov
push
js
mov
imul
rorb
push
enter
pop
sbb
mov
mov
add
lea
and
mov
push
insb
xlat
mov
test
jbe
rorb
cmpb
out
jecxz
add
loop
sub
loop
cmp
aad
out
xor
fadds
and
sti
sub
ret
hlt
push
xchg
ret
xchg
icebp
out
cmp
data16
cmp
or
in
xchg
jecxz
sub
dec
fcomps
adcb
lods
fwait
pushw
rclb
lcall
mov
dec
and
out
lds
enter
lock
aaa
jge
dec
sbb
jmp
popa
sub
pop
fnstcw
sbb
mov
push
or
sub
loope
push
test
fistl
decb
inc
subl
or
push
pop
dec
nop
cs
push
sti
xor
fimull
mov
push
cmpsl
loopne
jbe
out
jae
pop
cmp
pop
js
sbb
push
hlt
mov
adc
ss
sbb
sbb
sbb
or
add
xchg
cmp
fidivrl
and
jns
mov
mov
add
jo
xor
push
out
or
lret
mov
stc
es
xor
movsb
pop
or
out
mov
int3
mov
das
aad
xor
lods
call
js
sti
sub
jne
lea
hlt
fdivr
ds
pop
fistps
ss
fwait
int
jge
into
cmp
idiv
stos
imul
adc
or
mov
dec
outsl
daa
xchg
inc
adc
popa
dec
cmp
fs
insl
ja
pop
add
in
inc
or
jbe
jnp
jo
stos
lea
or
cmpsb
cmpsl
shl
pushl
pop
jmp
sbb
jp
rorb
mov
mov
pushf
ret
hlt
movsb
ljmp
dec
or
negl
cmc
xorl
xchg
sbb
aaa
in
gs
pop
stos
int
cs
shrl
inc
and
test
mov
xchg
pop
inc
mov
les
ljmp
or
and
pop
pusha
lock
xor
push
jne
push
push
or
sbb
outsl
in
or
arpl
dec
fiadds
mov
mov
add
mov
cmpsb
mov
inc
dec
adc
and
movsb
xor
sbb
lods
pop
dec
jnp,pt
push
mov
adc
mov
mov
iret
insl
and
hlt
dec
add
add
push
cs
dec
push
cltd
nop
inc
hlt
ret
jne
mov
inc
mov
ljmp
icebp
fidivs
ljmp
jle
pop
cmpsl
lds
lret
in
std
xchg
pop
xor
xchg
lods
js
add
adc
test
insb
sbb
out
iret
lock
xorl
pop
lahf
jns
lret
lock
arpl
pop
fidivl
dec
adc
adc
mov
add
push
jb
xchg
xor
mov
add
mov
dec
push
pushf
cmp
xor
imul
std
mov
fsubs
aaa
push
xchg
movsl
inc
insl
je
and
cmp
in
inc
repnz
andl
pop
xchg
pop
jg
loopne
xchg
xor
jae
mov
in
sub
ret
inc
mov
mov
sbb
push
xchg
cwtl
sub
sub
mov
or
push
lea
and
in
rcrl
call
nop
das
in
aaa
jae
outsb
push
dec
sbb
hlt
rclb
fsubp
lods
push
and
sub
dec
mov
cmpsb
shr
dec
enter
ds
jmp
jle
mov
into
or
fdivs
jne
int
push
push
lret
loop
pop
sub
push
fistps
sbb
aad
aaa
cmp
hlt
rorl
pop
push
pop
pop
pop
push
cmpsl
icebp
test
jnp
xor
pop
jae
mov
mov
stos
testb
mov
rep
push
inc
mov
shrl
ljmp
cmp
mov
xor
std
data16
mov
out
inc
test
pop
int3
or
js
sbb
xchg
mov
cmp
or
adc
out
in
popf
pop
inc
lahf
adc
mov
push
adc
lds
xchg
push
push
mov
out
pop
int
adc
aaa
push
out
sub
ret
aad
fcomps
adc
stos
cmc
or
imull
cltd
jp
les
stos
insl
fldenv
mov
jge
xchg
repnz
mov
mov
cmpb
jb
jo
jno
push
fs
in
and
push
pop
mov
lret
sub
jmp
stos
and
mov
out
lds
stos
push
sub
push
popa
dec
or
ror
and
or
cwtl
cmpsb
fmull
sbb
pop
xlat
lods
insb
movsb
lret
jno
aad
dec
test
lods
ja
mov
idivb
push
pop
add
add
push
shll
mov
mov
ds
bound
cld
les
cmp
sti
cld
arpl
ss
add
fldl
pop
and
aam
rorl
push
cmp
fs
decl
pop
push
into
jge
repnz
xbegin
mov
in
outsl
jno
enter
add
imul
aas
and
jne
mov
pop
add
loopne
lea
xor
add
hlt
insl
pop
out
pop
ss
dec
push
cwtl
mov
and
ljmp
or
inc
jbe
push
push
lock
add
xchg
fwait
add
inc
icebp
int
jg
pop
mov
jbe
fdiv
add
mov
inc
jbe
cmc
sbb
jne
movb
cld
inc
jge
pop
mov
mov
das
mov
xchg
sarl
jle
adc
ja
lret
jb
mov
sub
or
insb
xor
ds
sbb
pop
je
push
daa
hlt
dec
cmpsl
fisubl
push
stc
outsb
mov
jp
std
into
push
icebp
inc
lods
jmp
cmp
fwait
mov
nop
int3
lret
dec
inc
sbb
repz
iret
pop
jns
lret
push
enter
mov
cmp
sahf
inc
nop
push
cltd
xor
mov
mov
pop
mov
mov
push
add
pop
aam
push
mov
stos
push
movb
lea
arpl
negb
mov
pop
scas
cmpsl
lea
or
or
adcl
cmp
mov
push
cmp
push
xchg
in
xlat
roll
lea
mov
mov
int
add
lret
mov
push
pop
jmp
and
stos
push
lret
out
subl
popf
jg
clc
push
push
cmpsb
lea
shr
xchg
adc
sbb
xor
mov
and
js
psrad
adc
xor
jnp,pt
xchg
int
sub
pop
mov
incb
das
ss
enter
imul
nop
cmp
mov
cltd
data16
push
mov
shl
lods
fsubrl
test
ljmp
or
cmpsl
mov
js
xor
scas
stc
inc
shl
inc
test
xchg
cmpsb
mov
dec
push
mov
cmp
test
test
out
iret
aam
jp
adc
mov
cmp
imul
dec
arpl
jnp
inc
lods
cmp
test
push
mov
push
aad
pop
or
inc
loopne
add
dec
pop
xchg
stos
lock
adc
inc
jl
jecxz
and
call
int
sub
and
dec
sti
cwtl
jbe
sbb
fsubl
idivl
aad
cmp
pop
lods
pushf
rcll
std
pop
and
fisubs
popa
ret
or
les
test
dec
cmpsl
inc
repz
cmpsb
fs
das
gs
xchg
push
dec
cli
orl
sub
push
int3
inc
fldenv
add
xchg
sti
int
push
mov
inc
or
and
sub
dec
adc
mov
insb
fcom
xchg
mov
clc
bound
repnz
and
testl
mov
scas
pop
imul
jno
stos
loopne
mov
enter
aad
outsb
add
mov
sahf
pop
mov
xlat
clc
inc
cltd
js
mov
xor
fldenv
adc
push
sbb
mov
xchg
enter
cwtl
jno
xchg
cs
aad
int
out
in
mov
js
out
loopnew
inc
insb
stos
xor
js
test
stos
pop
push
out
jmp
out
fucomi
sub
outsl
or
maxps
inc
stc
dec
adc
jl
fidivrl
insb
popa
shrb
cmp
fcompl
dec
movsb
dec
insb
sbb
aaa
out
in
xchg
cwtl
pop
push
push
fcoms
shl
popa
xchg
js
in
mov
out
xchg
xor
insl
fmul
jge
popf
iret
movsl
test
ljmp
mov
cmp
mov
adc
fmul
fsub
mov
andl
or
push
addl
or
pop
nop
shrb
adc
ret
xor
jmp
xchg
mov
popf
divl
xchg
sub
pop
icebp
rcll
into
sbb
cltd
fstpt
stos
stos
push
mov
mov
adc
idivb
shl
jmp
inc
fstp
push
lods
jae
fistpll
cmpsb
imul
xchg
lds
mov
push
in
dec
lea
mov
xchg
ror
dec
ljmp
sub
dec
test
lea
adc
hlt
push
fcoml
xor
jbe
int3
mov
frstor
std
xor
add
lods
and
pop
pop
pop
ret
test
leave
mov
test
out
jg
pop
fisttpll
lret
mov
adc
les
pop
cmp
fsubr
pop
rclb
cmp
and
nop
jnp
dec
and
jne
lahf
xchg
test
mov
aam
sbb
cmp
xchg
dec
sbb
pop
dec
clc
pop
roll
imul
add
push
add
adc
adc
test
mov
mov
push
xor
rcll
cmc
add
lcall
sub
push
jae
inc
stos
in
sbb
ja
movsb
mov
and
or
ret
adc
fimull
mov
sti
into
scas
pusha
inc
nop
out
iret
adc
mov
andl
aaa
fisttps
xor
dec
js
and
inc
adc
std
push
ljmp
mov
daa
pop
sar
insl
test
scas
fistl
dec
push
mov
loopne
js
int3
sub
out
push
push
testl
shlb
mov
inc
dec
xor
pop
iret
in
subl
inc
sahf
jge
cmp
or
dec
push
inc
jmp
loopne
sub
sub
leave
sbb
test
jp
mov
pushf
int3
xchg
mov
xorl
imull
cmp
andl
sub
loopne
sbb
mov
addr16
mov
xchg
xchg
jb
add
xlat
pop
push
and
fsubl
fbld
pushf
loopne
ljmp
imul
loope
push
jmp
pop
lds
neg
aas
scas
ficompl
xor
pop
icebp
push
sbb
sbb
xchg
movsb
mov
ret
pop
adc
fs
nop
loop
fidivrl
loope
add
adc
mov
sarl
aad
cmp
xchg
lock
jo
pop
xchg
mov
mov
cmp
jno
adc
cmp
lret
add
stos
fidivrs
lahf
push
mov
push
cmp
sub
ljmp
scas
scas
test
mov
lea
jb
mov
push
jae
lods
dec
xor
add
cli
addl
sbb
nop
jg
sbb
xor
push
sahf
fistpll
cld
aam
cs
xchg
xor
inc
mov
cmp
mov
mov
mov
imul
push
fwait
mov
inc
fdiv
add
jmp
orl
das
xor
push
loopne
cli
in
mov
hlt
cld
andb
scas
cld
push
imul
inc
imul
imul
gs
dec
vmwrite
pushf
cld
rorl
push
lahf
inc
xchg
nop
push
pop
jmp
sahf
mov
stc
pop
jmp
add
xchg
xor
ret
mov
fsts
adc
cs
jno
clc
push
and
jge
push
mov
icebp
aas
xchg
cmpsb
jbe
jb
arpl
sarb
inc
cmp
inc
push
repnz
cmpsb
push
push
mov
arpl
into
inc
mov
adc
jge
sub
les
mov
movsb
movsl
cli
add
in
push
in
or
mov
dec
test
inc
mov
add
mov
out
leave
push
jnp
cwtl
add
dec
andps
mov
lods
jmp
lea
push
fisttpll
pop
ret
imul
ret
mov
sub
fidivrs
out
bound
dec
push
jle
hlt
repnz
cmc
fidivrl
aas
es
jns
dec
pusha
roll
dec
xchg
mov
add
add
fdivp
mov
sbb
test
inc
lahf
jg
sbb
xchg
test
outsl
outsb
inc
repz
pop
xchg
in
cmp
std
scas
test
pusha
xchg
adcl
test
dec
mov
xchg
add
int
dec
push
mov
in
ja
push
in
xchg
inc
out
push
jl
sub
filds
inc
shl
sbb
out
cmp
pop
jp
ljmp
and
imul
pushf
jle
xor
add
and
jl
and
stc
pushf
adc
mov
je
daa
pop
mov
cld
cltd
out
push
scas
mov
push
mov
in
dec
or
adc
lahf
subb
mov
mov
adcl
xor
pop
jo
divl
dec
hlt
ret
or
mov
fdivs
rorl
mov
push
daa
stc
jecxz
ljmp
int3
push
and
xor
mov
xchg
in
mov
aas
ret
fs
or
rcrl
pop
cmp
outsb
je
push
add
and
imull
push
lea
adc
paddq
sbb
jns
lcall
xchg
outsb
xor
xchg
outsb
mov
les
pushf
and
repz
push
out
nop
mov
jnp
inc
ret
int
sbbl
je
aam
cmp
mov
add
testl
xor
cmc
jle
sub
les
fs
mov
pop
mov
add
add
xor
jge
rcll
mov
gs
gs
leave
rcrb
adc
ror
xor
nop
cmp
cmp
and
lods
callw
dec
stc
cwtl
pop
xor
mov
jge
insb
cmp
lret
in
sub
aaa
scas
dec
inc
push
xor
jo
or
imul
ds
vpsubsw
cwtl
adcb
mov
pop
test
push
mov
cmp
insl
into
icebp
loop
cmp
scas
mov
xor
pop
cmp
stc
mov
xor
in
xchg
push
sar
call
push
test
jp
ss
and
sar
pop
scas
lcall
and
jmp
add
or
add
dec
sti
mov
lea
push
push
shlb
and
sbb
and
push
pop
adc
popa
dec
dec
adc
and
inc
leave
dec
popf
sbb
xchg
in
rolb
jnp
jnp
jbe
icebp
add
push
push
test
and
and
dec
call
fldcw
adc
xor
in
jg
mov
add
insb
imul
adc
mov
mov
orl
inc
mov
pop
rcrb
mov
xchg
aas
add
setge
xchg
sub
test
add
xchg
push
int3
and
mov
out
inc
jg
sub
lret
js
rol
add
orb
rcrl
shr
pop
jae
push
int
mov
cmp
pop
insb
lock
mov
scas
push
loopne
xchg
xchg
rolb
lock
cmc
sbb
daa
into
ficomps
insl
add
rcrl
test
push
mov
incl
clc
sti
or
jg
rcrl
cli
sub
pop
leave
mov
push
leave
movsb
jge
dec
cs
fwait
cli
xor
xchg
divb
adc
sbb
xlat
and
xor
lds
dec
cmp
dec
adcb
std
sbb
dec
adc
pop
imul
xor
lods
insb
pop
push
jmp
dec
decb
xlat
rcl
xchg
cmp
jb
jecxz
jae
cmp
pop
shrl
xchg
fsubrl
and
imul
and
cltd
or
icebp
sub
push
imul
dec
mov
popf
or
add
lds
stos
insb
enter
xor
mov
subb
cmpsb
and
mov
cmc
adc
gs
sub
pop
xchg
cmp
push
add
push
call
dec
mov
dec
jo
push
repz
out
pop
dec
and
cmpsl
lods
aam
adc
cmp
je
insb
push
push
dec
inc
pusha
pop
dec
mov
xor
lret
aas
mov
popf
rcll
fwait
mov
sub
xacquire
push
push
inc
loopne
loop
pop
sbb
cmp
scas
cmpsb
bound
jae
mov
or
smsw
mov
js
fsubr
dec
leave
lods
test
push
stc
rolb
lret
mov
mov
je
sub
cmp
or
sbb
inc
add
fneni(8087
rol
pushf
dec
mov
xchg
scas
mov
sub
pusha
xor
cmp
pop
jae
jnp
pop
rolb
test
imul
fnstsw
cmp
ss
add
ficoml
loope
cs
cmp
rorb
xchg
mov
arpl
jns
nop
lcall
push
scas
sub
repnz
int
inc
mov
arpl
xchg
push
jns
jl
push
mov
or
xlat
test
jne
lcall
ret
pop
enter
ljmp
dec
sub
xchg
stos
hlt
mov
fcoms
pop
and
add
cmp
adc
sbb
xor
pushf
cwtl
or
lods
arpl
dec
mov
loop
lret
outsl
inc
dec
dec
mov
pop
popf
roll
sbb
fsubrl
notl
lahf
or
rcrl
push
push
stos
data16
into
or
imul
or
adc
and
inc
push
dec
inc
xchg
dec
pop
sbb
sub
mov
bound
les
cmpsl
nop
sbb
loope
out
fwait
dec
pop
icebp
pop
sbbl
rol
mov
cmpsb
sbb
testl
pushf
xchg
cmpsb
int
sbb
iret
data16
in
add
js
jno
rclb
sahf
vcmpsd
ret
xor
jg
into
mov
daa
dec
push
mov
push
loop
sbb
fbstp
sub
loop,pt
adc
mov
cmp
inc
jp
ds
mov
xchg
lds
xchg
or
sub
and
lods
lds
inc
inc
mov
hlt
out
and
test
frstor
jno
push
mov
movsl
or
sbb
mov
les
pop
out
rcrb
xor
inc
mov
jo
jg
add
jg
mov
rcrb
lcall
add
cwtl
pop
jp
das
and
push
sbb
jl
aas
mov
dec
lret
pop
shl
aam
pop
pop
sub
dec
cmpsl
or
mov
adc
xor
and
out
mov
sbb
mov
test
out
fimull
or
xor
mov
or
data16
jl
imul
es
mov
mov
mov
pop
adc
cmc
test
dec
hlt
mov
or
flds
xor
popa
leave
or
outsb
pop
out
mov
adc
and
repz
xor
xor
pushf
shr
jge
lret
dec
cmp
nop
mov
adc
and
xchg
aaa
xlat
lahf
mov
inc
loop
lretw
add
jge
mov
cltd
jno
xchg
mov
clc
adc
movsl
push
jns
push
int3
mov
fldl
mov
lods
inc
mov
pop
out
cmpsb
or
cmp
stc
xchg
xor
rorb
pop
pop
and
mov
aad
jp
xor
cmc
mov
add
jne
sbb
outsl
and
lea
lock
jae
pop
pop
mov
out
inc
ffree
les
push
cmp
mov
movl
jno
dec
call
adc
shlb
imul
adc
ja
sub
jmp
cmp
push
les
adc
push
sbb
int
in
sbb
fcmovu
cmpsl
push
xchg
mov
mov
out
aam
sub
sub
cs
cmp
repz
repz
and
in
mov
push
dec
add
mov
iret
cmpsb
mulb
jns
push
ret
pop
cmp
jecxz
xchg
cmpsl
cmc
mov
inc
imul
dec
and
mov
jo
in
jne
push
je
cmpsl
aas
test
subl
sub
lcall
mov
mov
cs
ds
mov
jge
pop
into
fldcw
dec
orl
or
dec
out
sbb
dec
jmp
xchg
push
push
sahf
data16
or
aas
push
mov
sub
and
jnp
mov
sub
addr16
dec
or
or
cmp
and
pop
fisubl
pop
mov
jl
mov
xlat
sbb
rcr
sbb
xor
sbb
aas
sbb
das
and
mov
bound
adc
mov
jmp
lods
mov
dec
mov
ret
lea
fdivrl
hlt
enter
mov
mov
lcall
pop
arpl
push
jae
test
cwtl
sub
lahf
or
xor
adc
adc
mov
and
or
mov
fildl
ret
fidivl
mov
ds
rcll
ret
mov
aam
jo
add
clc
jge
je
sub
in
test
inc
andl
xor
mov
notb
pop
or
insb
push
hlt
fisubrl
push
js
adc
xchg
movsb
sbb
pop
sub
popa
cld
xor
jno
sbb
std
mov
mov
scas
xchg
sbb
sbb
int
daa
push
movsl
xor
mov
testb
push
mov
dec
add
outsl
pop
nop
loope
push
push
les
lcall
jmp
mov
and
aam
xor
xor
out
push
sahf
gs
iret
cmp
repz
out
push
adc
mov
add
sbb
mov
testl
xchg
mov
inc
jno
movsl
or
fisubrl
shlb
bound
fs
fdivl
hlt
inc
jecxz
arpl
cmp
inc
sbb
mov
int3
imul
lods
pop
int3
cmp
rcrb
lods
hlt
mov
mov
mulb
mov
pop
dec
sub
clc
out
ret
mov
ds
mov
out
and
mov
in
jae
push
loop
xchg
scas
mov
sbbl
add
andl
mov
mov
mov
addl
add
movl
mov
movl
jmp
or
mov
xor
mov
adcl
add
mov
xor
mov
mov
xor
andl
add
movl
cmp
movl
je
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
adc
jl
mov
bound
pop
das
hlt
jmp
pop
addl
ret
dec
push
lock
inc
stos
js
imul
in
ret
mov
mov
mov
lcall
addr16
rcrb
imul
xchg
sub
lods
add
jb
ja
sub
test
sarl
daa
mov
add
outsb
push
jmp
lret
jp
int3
popl
sbb
xchg
push
gs
adc
jnp
mov
fnsave
out
xor
dec
xchg
mov
mov
mov
sub
arpl
add
repz
lea
dec
shr
fs
jns
dec
test
icebp
arpl
js
mov
push
test
jl
lods
in
mov
xchg
stc
out
sti
andb
mov
jge
adc
ficoml
mov
subl
sub
and
xlat
inc
push
scas
mov
fdivs
cmc
ljmp
aad
add
lret
ret
mov
ljmp
orb
add
jno
int
mov
stos
inc
test
fistps
mov
arpl
xor
and
leave
notl
jle
mov
dec
int
fstl
jg
movsl
xor
es
pop
lods
or
test
das
stos
out
cmpb
mov
nop
shld
hlt
sarl
push
jbe
loope
cltd
sti
add
lods
mov
or
int3
push
add
mov
cmp
cmp
mov
push
mov
aaa
movsl
fcomip
repnz
je
xor
adc
jae
pop
insb
inc
jns
cmpsb
pop
popa
mov
cmp
mov
pop
pop
bound
shr
push
adc
shlb
clc
pop
in
aas
inc
icebp
push
push
es
jl
sub
shl
rcrl
rcrb
repz
js
orb
and
repnz
xor
mov
addl
pop
xchg
and
std
xor
mov
pop
das
add
xor
js
clc
negb
pop
dec
mov
pop
push
adc
pop
jae
xchg
add
pop
clc
ror
shl
sub
stos
lds
lods
test
cmp
test
pusha
and
lret
ja
pop
sub
cmp
packuswb
jbe
and
in
pop
xlat
stos
add
int
scas
sahf
fucomp
sub
cmp
ret
test
scas
test
imul
cmp
xor
pop
jecxz
inc
test
push
ljmp
es
xchg
fs
xchg
inc
test
movsb
lds
and
stc
dec
scas
inc
add
cmp
inc
lret
push
add
repnz
fsts
cmp
pusha
pop
das
xor
jne
clc
or
add
mov
aam
sub
scas
adc
sti
or
pop
rclb
ss
or
lret
loop
cmp
lock
loopne
cmpsb
cwtl
jb
cld
pusha
inc
aas
sbb
in
sbb
test
mov
rorl
cli
add
imul
mov
bound
sub
inc
dec
dec
mov
jo
adcb
or
dec
mov
xlat
mov
and
stc
push
push
push
pop
and
mov
out
sub
xchg
popf
mov
inc
outsb
cmp
push
inc
jmp
mov
or
xchg
or
jnp
and
sbb
lahf
or
incb
mov
jle
cmp
shl
inc
hlt
adc
and
xor
mov
std
pop
mov
ret
pop
jae
mov
ror
jecxz
sub
sub
push
mov
and
into
ffree
mov
mov
mov
nop
cmpsl
repz
push
aaa
mov
clc
sbb
xchg
outsb
setp
mov
push
and
xchg
stos
es
in
jo
nop
mov
or
dec
or
repz
lea
xchg
mov
dec
xor
ja
push
push
sbbb
or
insb
cmp
sub
shrl
std
jmp
fisubl
into
je
add
pop
scas
pop
inc
mov
sahf
in
push
xchg
push
mov
pop
lods
in
jge
sti
push
rcrb
popa
adc
sub
dec
xchg
das
push
ss
daa
push
loope
aam
or
int3
or
mov
popf
jmp
movsl
cmpsl
sti
dec
ds
hlt
sub
sbb
push
leave
add
cmpb
pusha
enter
mov
arpl
fcompl
stos
movsl
dec
cmp
aas
sub
push
or
scas
jmp
push
sub
xor
add
cmc
je
mov
sbb
jae
cmp
iret
mov
faddl
aaa
sbb
into
divb
adc
lods
push
test
lods
flds
fstpl
jnp
xchg
sahf
out
rcr
inc
push
or
mov
outsl
jb
mov
and
inc
push
into
fmull
call
adc
das
packssdw
daa
imul
push
pop
xchg
pop
rcl
stos
outsb
dec
push
addr16
scas
adc
xchg
cmp
add
xchg
add
adc
inc
sub
mov
inc
insb
in
inc
fsubl
mov
enter
repz
leave
or
sbbl
xchg
repnz
and
shll
mov
inc
test
pop
lods
test
push
sub
push
push
out
fwait
inc
xor
xchg
lods
lret
jge
sub
in
push
sub
shl
xchg
test
sbb
data16
lods
adc
jp
cmpb
in
daa
mov
lcall
cmpsb
stos
das
add
cmp
and
jbe
cmpsb
pop
jne
fists
test
push
in
pop
int3
lea
dec
xchg
mov
idivb
push
lds
lahf
adc
fists
sbb
xor
fwait
fwait
and
pop
test
inc
inc
ja
sarb
orb
cmp
test
sub
mov
popa
cmpsb
cmpsb
or
push
decl
adc
lret
scas
adc
and
test
cld
cmp
movsl
sbb
jmp
imul
icebp
jae
inc
ret
call
lods
das
popf
jne
or
aad
js
loope
aad
push
lret
lahf
fistps
xchg
xchg
inc
adc
and
lahf
lods
fcomps
std
mov
push
stos
sbb
dec
rol
xlat
arpl
mov
stos
cwtl
jmp
xchg
sub
test
sbb
inc
mov
jo
loopne
push
mov
sub
ja
pop
adc
xchg
xor
cmp
les
cmpsb
pusha
lods
js
ljmp
pop
stc
push
add
in
mov
xorb
mov
subl
inc
rclb
in
dec
dec
sbbl
lcall
int
jb
jb
mov
mov
adc
sbb
popf
movsb
out
xchg
stos
jb
in
xchg
movsb
adc
jg
and
sub
bound
test
out
lcall
push
loop
lock
push
inc
lods
xor
sub
negl
test
push
push
xor
fisubl
cli
stos
repnz
mov
jge
inc
test
dec
test
mov
shlb
mov
and
sbb
insl
and
mov
jl
mov
cmc
lret
pop
mov
mov
xchg
xorb
add
mov
call
push
dec
inc
inc
pop
add
rclb
aas
jae
clc
add
into
xchg
or
or
mov
or
jb
enter
outsl
push
out
xchg
inc
xchg
addl
addb
ficompl
dec
lahf
or
jp
xor
ja
push
push
ret
mov
pop
push
dec
call
mov
adc
fidivrl
orl
adc
es
push
push
jns
or
mov
pop
icebp
pop
and
out
mov
xchg
mov
push
movsb
leave
icebp
xor
and
dec
or
mov
out
dec
add
pop
in
pop
sub
sbb
and
mov
fsubrs
rorb
xchg
loop
dec
cltd
xchg
dec
mov
pop
pushf
adc
and
adc
jge
jb
inc
and
jae
ljmp
mov
arpl
adc
cs
ljmp
push
std
fistpll
aas
mov
sub
inc
inc
insl
pop
cld
loopne
sahf
fcmovnbe
lret
outsb
push
cld
jmp
cmp
lods
lds
lahf
cwtl
out
leave
leave
repz
adc
das
mov
inc
and
and
loop
dec
xchg
push
cmp
ljmp
js
mov
add
or
mov
add
out
push
cmp
adc
rcrl
mov
int
mov
jge
mov
std
sbb
cld
dec
cmp
xor
popa
out
mov
call
data16
test
adc
gs
bswap
fimuls
push
popa
xchg
sub
dec
addr16
sbb
ljmp
dec
sarb
pop
xchg
mov
xor
mov
inc
mov
push
loope
or
pop
jbe
out
lahf
ljmp
push
xchg
aas
and
lahf
or
aad
insl
sbb
push
mov
cmp
cmp
pop
mov
aam
iret
mov
loopne
pop
stos
add
adc
icebp
inc
dec
xchg
mov
por
push
mov
sbb
out
xor
ljmp
popa
outsb
and
mov
sti
push
push
inc
add
aad
push
fcoms
push
jge
aam
jle
sub
push
sbb
xchg
ss
sub
les
test
popf
imul
pop
or
xchg
icebp
adc
xor
loop
movsb
sub
cmc
mov
xchg
leave
mov
cs
and
cltd
sahf
add
les
sbb
xchg
pop
dec
sub
inc
xchg
call
and
cmp
mov
repz
fsubrs
insl
mov
mul
inc
mov
in
cmp
mov
aam
mov
test
imul
sbb
js
xchg
jecxz
and
insl
cs
test
dec
pop
adc
je
sbb
or
push
xor
mov
mov
jecxz
push
push
jle
adc
jecxz
call
mov
sbbb
xor
and
or
push
add
dec
cli
aam
push
cmp
mov
mov
mov
fs
ss
shll
sub
lock
push
xchg
orl
mov
cld
cmp
aas
sarb
pop
push
lods
ret
pop
mov
cmpsb
out
out
dec
jmp
mov
mov
popa
adc
std
dec
test
cmpsb
lahf
lret
out
pop
jp
das
push
jbe
rcr
in
mov
inc
mov
leave
int3
add
clc
inc
push
loope
dec
test
and
fnstsw
arpl
and
mov
jle
add
rorb
push
imul
dec
movsl
outsb
ljmp
sbb
xchg
daa
loope
adc
xchg
sbb
pop
inc
aad
pop
sub
stos
cmp
out
sub
enter
ss
icebp
addr16
jl
push
mov
imull
aas
inc
aas
cltd
jg
int3
fwait
rcl
mov
and
js
or
sbb
mov
xchg
sbb
adc
mov
fwait
jp
dec
cmp
cltd
nop
sbb
ret
xchg
in
pop
sbb
push
pushf
jae
xor
xchg
into
cmp
inc
loopne
cmp
jbe
cmpsl
mov
int
xlat
sbbl
addb
aam
lods
addl
cmp
lret
pop
addl
int3
out
leave
pop
xor
pop
mov
hlt
lcall
adc
cwtl
inc
rcrl
sbb
cmpsb
cvtps2pd
ss
mov
ds
arpl
lcall
sbb
arpl
jns
mov
insb
sub
and
cmp
loop
jmp
lret
pusha
mov
pop
lret
push
push
add
mov
add
arpl
pusha
lea
jle
sbb
ss
or
lret
sbb
xor
cmp
mulb
xchg
push
lds
daa
mov
xchg
mov
jp
adc
fs
in
inc
mov
dec
popf
cltd
or
cwtl
pop
popf
sub
shll
les
sbb
lea
scas
daa
ljmp
ret
pusha
jecxz
mov
test
sub
add
mov
orb
insb
adc
loopne
lds
xor
das
cwtl
push
sbb
jnp
add
add
pop
push
stc
lds
cmp
xchg
push
mov
fcoml
lods
jno
sub
js
and
pop
jbe
and
or
arpl
fidivl
push
sar
cltd
ja
pop
adc
inc
popf
dec
cmp
push
xor
insl
mov
xor
outsl
stos
jmp
mov
negl
lods
jno
addl
add
cwtl
inc
clc
mov
adc
stc
adc
repnz
dec
popf
mov
test
cmp
out
fs
pop
test
or
mov
sub
lods
adc
ficoms
sub
sbbl
stc
xchg
fwait
rorl
xchg
negl
inc
ficoms
xor
lea
out
cmp
testl
pop
cmp
loop
and
push
sub
das
jnp
cmp
xlat
add
dec
or
jmp
repz
arpl
pop
in
inc
in
aam
push
jecxz
test
push
pop
outsb
je
outsl
mov
shlb
add
dec
and
das
aam
sub
pusha
add
jp
pop
and
push
xor
jo
lods
or
lcall
lret
inc
mov
imul
lret
loope
push
gs
ret
mov
mov
insl
cmp
mov
and
jg
inc
jl
cmp
jo
mov
jbe
add
pop
mov
sahf
sub
push
mull
mov
dec
adc
fimull
icebp
dec
das
push
into
dec
cmp
out
pushf
adc
test
fisttps
ds
es
mov
and
orb
adc
adc
movsb
sbb
mov
xchg
aam
jle
pop
outsb
mov
cmpsl
out
imull
sbb
test
pusha
out
cmp
into
shrl
bound
add
out
leave
sub
and
pop
mov
outsb
and
mov
add
xchg
lds
in
mov
xor
call
cmpsb
lock
movsl
mov
mov
mov
mov
mov
jge
and
or
xchg
sbb
xchg
lds
and
adc
dec
pop
lods
push
inc
lds
push
mov
dec
repz
lock
xchg
push
data16
jp
rcrl
hlt
jle
xor
jmp
rolb
pop
dec
jecxz
jnp
push
lds
pusha
out
movsb
repnz
cmp
jmp
sub
sbb
pop
test
mov
cmc
sbb
push
das
jp
push
xor
fistps
push
add
jne
jmp
mov
int3
mov
cmc
cmpsb
stos
jmp
pop
pop
push
test
dec
cs
ret
xorb
lods
mov
jo
ror
lds
repz
flds
out
fnstsw
inc
out
push
subl
pop
in
sarl
mov
fisttps
pushf
pop
dec
xor
rorb
stc
xorl
sbb
inc
jne
shll
jne
nop
add
xorl
enter
pop
mov
adc
adc
sbbl
jl
sti
mov
adc
cmc
sahf
push
jecxz
jnp
hlt
fdivrp
fimull
lret
pop
mov
int
enter
sub
test
inc
inc
or
or
bound
aad
mov
ret
mov
pop
and
sub
les
pushf
xchg
enter
jae
in
inc
arpl
imul
mov
imul
nop
pop
lret
addl
sti
sub
fs
push
cli
mov
pop
push
xchg
call
rcrb
mov
rcr
scas
mov
in
push
cltd
xor
jmp
scas
js
bnd
add
adc
ficoms
repnz
scas
xchg
je
xor
jle
cld
xchg
mov
mov
iret
rcrl
fisubrs
cmp
out
or
push
imul
enter
cmp
in
and
int
nop
and
adc
cmpsl
jp
mov
inc
or
mov
insl
jnp
int
mov
jbe
je
push
pop
inc
std
mov
and
pushf
cmp
popa
sbb
movsl
xor
mov
dec
aas
push
cmp
popf
mov
shrl
inc
aad
push
push
into
lods
mov
jo
sarl
iret
fidivl
adc
fs
dec
mov
pop
cmp
jp
xor
jne
stos
aas
ds
xchg
pusha
xchg
fucom
stos
std
in
inc
mov
popa
mov
adc
jle
mov
dec
movsb
push
shr
cmp
enter
call
dec
stos
mov
sti
dec
imul
mov
push
push
les
cs
inc
iret
jne
inc
mov
into
pop
jl
mov
lods
xor
and
jecxz
insb
inc
pop
jb
loopne
xchg
shl
mov
aam
loope
gs
or
jns
cmp
sbb
xchg
adc
call
sbb
xchg
mov
addr16
mov
sub
dec
aaa
out
incb
xchg
cmc
je
jno
sti
or
rcr
jnp
rorb
cmpsb
lret
std
xchg
add
gs
mov
in
in
ficomps
sbb
mov
inc
pop
mov
into
sbb
mov
outsl
add
fs
ss
popf
push
stc
lret
inc
push
xchg
jo
mov
mov
jmp
fdivrs
sub
or
imul
inc
leave
jnp
fwait
ret
sbb
dec
mov
jbe
out
shll
dec
mov
cmp
jo
and
mov
mov
add
pop
pop
jns
scas
xlat
dec
movsl
ficomps
sub
and
and
add
aad
jle
pop
xor
fistps
stc
mov
aas
cmp
rorl
mov
cmp
test
orb
adc
or
cmp
inc
pop
pop
lret
fidivrl
inc
bound
rclb
mov
fmul
push
inc
orb
addl
shlb
jns
ja
pop
jns
sub
in
data16
and
xchg
dec
je
loopne
inc
mov
or
dec
mov
int3
pop
push
daa
clc
mov
or
push
bound
push
adc
inc
mov
jle
fnstenv
xlat
pop
cmpsb
cmp
cmp
sub
add
gs
bound
sub
cltd
call
inc
mov
lock
xchg
adcb
ret
cmc
in
xor
ficompl
cmpl
ret
js
popf
or
in
mov
pop
xlat
out
out
xor
mov
xor
xchg
lcall
push
fstpt
std
xchg
inc
daa
repz
clc
cmpsl
push
cmpb
loopne
int
into
or
insb
mov
cmpsl
ss
bound
movntq
lods
and
dec
js
push
sbb
dec
xchg
jno
mov
loopne
shlb
xchg
jne
rcrb
popl
sarb
lcall
mov
sarb
push
xor
clc
ret
adc
stc
sti
xor
push
sbb
push
scas
cmp
hlt
jmp
imul
jo
cmc
and
addr16
push
mov
jge
sbb
xchg
enter
sub
aad
adc
lahf
xchg
pop
inc
sbb
cmp
mov
mov
xchg
cmp
call
xchg
xor
push
push
jg
loopne
pop
call
mov
adc
fstl
mov
push
gs
insl
das
lret
dec
jne
sbb
mov
cmp
nop
jne
mov
jle
out
popa
dec
je
mov
adc
mov
aad
imulb
sub
pop
lods
ret
outsl
mov
lods
ja
jo
insl
test
dec
xchg
int3
lods
jno
iret
hlt
shll
sub
and
mov
cmp
in
dec
fwait
xchg
inc
test
sub
rcll
dec
xlat
sar
push
jecxz
leave
dec
dec
insl
mov
imul
data16
dec
or
xchg
clc
xchg
xor
lods
mov
jmp
bound
hlt
xchg
dec
divb
into
mov
jle
inc
das
cltd
dec
push
and
adc
jb
push
jp
out
ss
std
pop
lods
xchg
stos
mov
pop
or
xchg
scas
mov
add
ljmp
icebp
mov
popa
lcall
repnz
imul
divb
fcmovne
in
lret
lods
inc
je
sahf
cmp
pop
ds
add
pop
or
clc
dec
movsb
and
loope
xchg
push
out
pop
hlt
movsl
sbb
sbb
add
popf
cmp
push
jp
leave
cli
sub
sbb
call
iret
faddl
test
lock
sub
ds
xchg
mov
inc
jne
iret
push
das
ret
jg
dec
shrl
in
rcr
popa
mov
ds
outsb
xchg
ret
or
dec
daa
jo
and
lods
clc
aas
les
adc
je
daa
xchg
push
mov
or
rdtsc
aaa
adc
repnz
jmp
cld
pushl
jo
xlat
dec
inc
mov
dec
xorb
push
xor
sub
mov
dec
lds
lcall
imul
mov
sbb
gs
dec
dec
cmp
cmpsl
pop
outsl
insl
into
inc
shrl
dec
cmp
push
jne
jae
adc
shlb
dec
jnp
iret
stos
sbb
pop
test
mulb
cmp
aaa
inc
xor
pop
push
xchg
sahf
lret
dec
mov
jl
aaa
ret
nop
and
mov
dec
and
lods
jne
lcall
mov
das
outsl
xchg
adc
dec
dec
jbe
jno
xor
dec
or
adc
sub
std
cmpsb
inc
mov
int
inc
outsb
std
and
fwait
mov
adc
mov
out
movsl
in
stos
icebp
add
cmp
inc
cmp
pop
out
push
jb
add
sub
add
jo
pop
outsb
addr16
mov
imul
or
inc
or
imul
cmp
test
dec
adc
andb
call
mov
or
hlt
pop
int3
adc
sub
jns
mov
sbb
aas
mov
mov
enter
shrb
pop
xchg
dec
mov
fidivrl
lock
icebp
and
cmp
inc
mov
js
cmp
in
out
jecxz
aas
fnstcw
cltd
and
cmp
push
cmpsb
inc
lret
xlat
cmp
pop
scas
gs
test
adc
xor
sti
mov
or
imul
cwtl
lret
fbstp
nopl
mov
cwtl
sub
test
daa
and
sbb
mov
and
xchg
mov
jnp
mov
shrb
xor
dec
adc
add
jl
cmp
int
and
dec
mov
call
sub
mov
out
cmp
in
data16
insl
push
add
rcl
adc
call
gs
cmc
orb
xchg
push
xchg
adc
lock
pop
repz
pop
bnd
jae
adc
stos
xchg
xor
hlt
ret
loope
jl
daa
aad
pop
jl
add
imul
movsl
sub
test
fcmovb
push
jge
xchg
mov
add
xchg
jge
jns
cmpsb
or
rclb
enter
jnp
mov
mov
mov
inc
std
mov
divl
in
test
popa
and
jmp
mov
sub
jnp
insl
jno
mov
inc
sub
jne
jne
push
mov
pop
loopne
sahf
popa
lods
lret
sbb
iret
sbb
fildll
add
fs
shr
mov
xchg
mov
scas
pop
inc
out
lea
push
in
cmpsl
inc
mov
or
data16
arpl
push
cmp
jns
adc
dec
sub
popa
push
insl
cld
loope
movsb
sarb
clc
sar
sub
cltd
jmp
xor
imul
movsb
outsb
mov
adc
sbb
das
fxch
cmp
or
cmp
xor
enter
sub
adc
ss
mov
aam
dec
mov
aam
pop
pop
mov
shl
dec
jp
out
mov
out
sbb
pop
rcrb
mov
fsubp
add
push
fnstcw
ja
or
xchg
add
or
adc
or
daa
psubusw
pop
or
jae
pusha
insb
xchg
stos
mov
fs
loop
pop
add
es
push
outsb
push
mov
rcll
ficompl
xlat
lahf
xchg
iret
jnp
ret
pushf
jg
xchg
mov
sub
roll
mov
arpl
mov
sbb
aas
repnz
cmp
sub
int
fsubrs
dec
xor
mov
outsl
inc
jnp
pop
push
push
testl
mov
jne
test
adc
lock
push
inc
sarl
xchg
fcmovu
mov
lea
dec
subb
out
and
add
xchg
cvttps2pi
mov
ss
jecxz
sbb
add
ljmp
ljmp
or
dec
mov
out
fs
out
es
cli
fbld
xchg
lret
mov
enter
dec
xor
mov
add
lock
int3
ljmp
ds
pop
nop
fwait
add
sub
push
or
push
and
mov
movsb
imul
js
or
jnp
jno
jbe
or
popa
adc
scas
inc
mov
dec
fistps
fisttps
and
iret
in
frstor
mov
push
test
lea
out
xchg
jnp
sbb
add
repnz
pop
dec
xor
mov
xchg
sbb
loopne
adc
push
or
xor
jle
ja
pop
daa
out
aad
arpl
push
adc
jns
mov
sbb
mov
mov
mov
scas
lcall
lock
ss
icebp
inc
lods
push
stos
cmp
stc
in
sbb
push
jno
jb
stc
sbb
pop
and
mov
loope
pop
stc
xor
sbb
mulb
cmp
sbb
cmpsl
and
mov
addr16
mov
dec
pop
inc
aam
mov
divl
and
ret
mov
inc
mov
loop
xchg
std
arpl
xor
cmp
mov
jne
lahf
incl
inc
scas
or
inc
addr16
pop
inc
out
fcompl
mov
adc
stc
fwait
imul
push
sahf
fcomp
inc
xchg
fwait
add
xlat
scas
or
and
cmp
test
rclb
bound
cmp
xchg
testb
sub
movsb
sub
add
fisttpl
xor
jno
mov
call
pop
cs
push
mov
bound
dec
jl
ret
outsl
jmp
es
fxch
call
ficomps
dec
add
mov
mov
subps
ret
or
lret
out
cli
xchg
imul
push
std
add
dec
and
loope
popa
fldenv
adc
cmp
iret
aam
lds
ret
jo
mov
dec
sbb
shrl
sar
gs
addr16
cmpsb
xchg
outsb
jne
fwait
xchg
adc
mov
push
sbb
lahf
mov
pop
cmp
dec
jecxz
nop
int
std
fstps
dec
mov
clc
jb
jbe
mov
dec
data16
xor
sarb
pop
add
sbb
adc
sbb
nop
push
lahf
ja
outsl
div
dec
add
test
adc
dec
xchg
out
popf
mov
xchg
scas
cmc
inc
js
scas
mov
cmp
or
xor
jmp
pop
push
xchg
xchg
mov
fimuls
in
sbb
xor
push
sbb
dec
sbb
fldenv
xor
xchg
std
add
dec
or
and
insl
mov
addr16
add
cmp
mov
cmp
fcmovnb
adc
cmpsl
jp
xchg
add
je
ret
scas
pop
cli
mov
add
orl
sbb
jae
shr
std
xor
inc
shl
and
lret
pop
pushf
mov
scas
sbb
imul
int3
or
dec
out
push
push
pushf
aam
insb
in
aas
xlat
fcompl
ljmp
mov
adc
fwait
inc
cs
clc
stc
inc
xchg
xchg
jecxz
cld
lods
lods
cmp
fistpll
or
cmp
sub
jg
imul
cmp
orb
jmp
fildl
or
xchg
and
jmp
or
insb
repz
jnp
dec
xchg
in
pop
mov
add
adc
push
cltd
xorb
fcom
dec
inc
jg
int3
lea
or
and
adc
stc
jo
aam
lahf
pop
lahf
in
int3
lret
xchg
std
mov
lret
mov
adc
test
pushf
sub
push
mov
fs
lods
rcrb
and
inc
add
call
insl
pop
or
outsb
mov
inc
mov
loopne
data16
clc
mov
rdrand
jp
mov
je
es
pop
incl
xor
loopne
idiv
cmp
bound
sbb
into
sbb
into
and
push
mov
xchg
mov
sbb
sub
sti
xchg
and
jne
xor
inc
adc
std
div
data16
cmc
addr16
idivb
insb
or
loope
cwtl
add
scas
shr
pop
sub
aam
mov
xor
fldt
notb
dec
push
test
int
dec
xor
shlb
pop
and
mov
mov
xchg
arpl
and
jl
in
mulb
fildll
and
inc
les
mov
pusha
daa
dec
push
adc
sub
jo
mov
cmp
enter
adc
insb
ja
clc
dec
mov
xchg
insl
outsl
mov
dec
out
std
sbb
jle
mov
andl
arpl
test
cmpsl
popf
mov
repz
jno
pop
js
xor
sbb
pop
je
test
aaa
bound
fdivrs
ja
arpl
cmpsb
or
pop
mov
daa
inc
out
mov
fnstcw
pop
addb
cwtl
cmp
or
inc
mov
dec
ja
out
xchg
mov
std
sub
adc
in
pusha
pushf
add
bswap
cmpsl
adc
pop
xchg
aad
imul
sub
movl
fwait
push
pop
fsubp
pop
jae
in
adc
sbb
jae
pop
adcl
scas
add
lods
pop
jmp
xchg
mov
add
ja
std
bound
push
xlat
jo
scas
fcoms
and
lods
and
mov
into
sbbl
xchg
mov
repnz
fdivrl
xlat
clc
xchg
mov
aaa
and
inc
xchg
ficoms
jmp
movl
adc
add
inc
iret
shrl
test
icebp
jb
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
jmp
test
jl
out
mov
sti
loopne
pop
out
jp
addl
test
dec
inc
pop
imul
nop
pushl
icebp
out
mov
add
cltd
mov
push
dec
ja
movsl
pushf
mov
adcl
adc
neg
lret
mov
les
rcrl
pop
or
mov
call
sub
adc
mov
ret
flds
js
or
sub
fxtract
fs
sbb
cli
test
aaa
cmp
or
sub
test
lods
mov
pop
test
mov
loopne
xchg
jne
mov
pop
imul
rcll
out
or
enter
sbb
sbb
int
add
movsb
and
shlb
adc
int
gs
test
add
inc
push
movsl
jecxz
lock
test
mov
pop
mov
xchg
add
enter
adc
and
in
push
mov
fninit
xor
jno
clc
dec
inc
push
adc
aad
sub
jmp
dec
mov
cmp
add
mov
popf
sbb
ret
mov
xor
fwait
cs
push
ss
fldt
lods
daa
test
imul
cmp
je
push
inc
sub
jbe
and
lods
inc
jle
jmp
fdivr
mov
pop
repz
inc
movl
in
mov
loopne
mov
testb
inc
sbb
lahf
xor
xor
icebp
xor
hlt
xchg
cmpsb
out
fcoms
xchg
push
into
imul
inc
scas
xchg
and
aaa
mov
negl
jmp
jecxz
pop
loopne
aad
jecxz
sub
in
or
shlb
push
inc
gs
negl
mov
lret
scas
sbb
dec
ljmp
stos
aaa
sbb
push
gs
dec
sti
pop
mov
push
dec
pop
test
mov
jl
cmpb
jno
xchg
adc
insb
imul
pop
or
ss
aaa
ficompl
cmpsl
imul
jnp
dec
mov
stos
out
testb
jno
dec
out
sub
jmp
repz
xchg
call
mov
push
jb
adc
test
mov
fpatan
out
cmp
mov
push
jns
leave
add
pop
fildl
loop
js
sub
comiss
rcrl
pusha
fistpl
push
inc
or
add
pop
jmp
adc
into
inc
xchg
pop
sbb
std
iret
dec
fsubrs
sbb
fwait
imul
pop
lea
add
das
paddsw
fwait
scas
test
or
sbb
xchg
out
jbe
imul
and
sub
popf
out
xor
mov
je
dec
inc
dec
or
push
jg
push
xchg
ds
dec
stc
mov
lret
jg
mov
lods
iret
jnp
jns
dec
leave
pop
out
imul
xchg
jp
stos
fildll
mov
cmp
jns
scas
fsubrl
inc
cmp
adc
cs
cwtl
test
jb
int3
stos
pop
ss
lret
mov
into
sbb
and
mov
add
inc
pop
lcall
push
mov
xor
mov
xchg
fdivs
or
cmp
jb
or
cmp
push
rorb
movsb
pop
add
pushf
scas
mov
pop
fdivrs
imul
inc
cmp
shrl
or
sub
in
inc
add
ss
push
pop
jae
jl
lret
cmp
xchg
sbb
adc
aaa
jp
cli
dec
repz
mov
ret
and
mov
xchg
push
ffreep
sahf
add
jmp
push
dec
push
hlt
jmp
sub
xor
cmp
mov
inc
aas
addr16
enter
xor
lcall
sbb
xlat
jp
inc
std
test
cmp
xorl
ss
out
loope
sbb
xchg
or
movl
dec
ss
pop
out
fwait
adcl
adc
xor
and
pushf
mov
and
inc
lods
adc
sahf
dec
cwtl
test
pop
adc
and
jge
ja
arpl
cmp
cld
push
jne
ljmp
cmp
idivb
pop
push
ret
mov
push
mov
dec
shr
fsub
cmpsb
sti
push
lods
arpl
daa
jp
enterw
mov
push
icebp
xchg
xchg
jge
dec
push
imul
jle
pmulhw
scas
cmpb
inc
add
dec
lods
dec
pop
sub
mov
out
or
mov
stos
and
xor
ret
push
mov
cmp
add
loopne
push
lods
ret
subb
sar
int
out
repnz
insb
sbb
jns
rcrb
sarl
or
jge
notl
jbe
xor
cmp
aaa
xchg
mov
or
das
pusha
faddl
std
jno
pop
aam
inc
dec
ficompl
loop
imul
pop
test
or
inc
popa
mov
or
mov
imul
xchg
test
jmp
in
mov
imul
push
or
stc
call
sbb
inc
push
lcall
aam
push
or
orl
sahf
add
mov
add
enter
stos
pop
enter
lcall
cmp
jno
push
mov
jno
or
or
lds
cwtl
fisttpll
gs
xlat
or
subl
mov
adc
push
xchg
sub
fwait
daa
xchg
js
pusha
inc
and
cmc
popa
je
lret
pop
test
loopne
cwtl
push
nop
push
mov
jp
dec
outsb
add
aam
and
xchg
sti
cmpsb
nop
mov
int3
pop
ljmp
mov
dec
and
js
movsl
sub
scas
cwtl
outsl
rcll
sub
ret
xor
adc
inc
rorb
mov
cmp
adc
push
stos
out
aam
or
nop
shlb
push
icebp
ret
enter
sbb
add
insl
add
call
les
xor
stos
or
dec
cli
das
jle
dec
pop
js
std
das
fistps
das
sarl
sbb
cmc
add
scas
popa
xor
sarl
mov
aad
scas
es
int3
mov
sub
mov
aad
out
dec
iret
test
inc
cmpsb
ljmp
mov
aad
cmp
stc
dec
daa
stos
rol
sub
xchg
out
mov
call
je
mov
push
mov
repnz
dec
add
jbe
rcrb
xchg
sbb
repnz
add
inc
dec
outsb
cmpsl
pop
pushf
loop
cmpsl
pop
cs
push
imul
xchg
aas
push
mov
dec
jnp
fucomi
adc
hlt
outsb
jns
jo
cmp
lret
sub
sub
mov
push
into
pmulhw
xchg
add
loope
mov
out
adc
sarb
clc
mov
aas
and
mov
push
xchg
mov
adc
jp
cmp
xor
movsb
and
push
aas
sbbl
sbb
das
xlat
leave
inc
lcall
or
test
dec
mov
and
push
aaa
pop
or
cmp
cwtl
dec
pop
pop
lret
nop
add
mov
jno
cmpsl
sbb
std
pop
inc
int3
pop
std
mull
or
pop
dec
push
add
jp
out
cmp
cmp
les
cmpsb
lahf
lret
cmp
daa
gs
and
sub
cmp
xchg
ja
sub
addr16
jne
mov
jge
pop
xchg
sbb
enter
or
adcb
xor
mov
pushf
in
mov
movsb
es
push
icebp
cmp
js
nopl
jp
fwait
es
pop
stos
dec
or
xor
lea
mov
fsubr
jae
jp
fildl
scas
mov
dec
jb
pop
jno
xchg
in
fstps
inc
loope
imul
and
sub
xor
pop
pop
jae
pop
jl
and
xor
push
int
cmpsl
mov
ds
pop
pop
pusha
mov
loopne
push
push
bound
lods
xchg
jg
mov
sarb
adc
dec
outsb
std
sbb
add
sbb
notl
add
mov
stos
lret
sbb
push
xchg
jp
adc
push
add
pop
sahf
jmp
mov
mov
mov
fdiv
in
stc
pop
test
repnz
jne
lahf
jp
into
jne
jmp
out
loopne
gs
jle
outsb
sahf
add
int
and
mov
in
push
imulb
jecxz
arpl
push
pop
sub
fs
mov
sub
add
mov
inc
cld
movsl
pusha
cmp
dec
jb
out
sbb
jmp
gs
push
movsb
out
sbb
push
cld
lcall
sar
shl
jnp
mov
xchg
pop
and
sbb
insb
aad
add
clc
std
xor
sti
push
sbb
mov
xchg
mov
stos
inc
mov
xchg
test
push
sbb
dec
scas
mov
into
ja
jecxz
dec
into
dec
mov
lods
sbb
std
cmp
cmp
outsb
mov
mov
pushf
aad
adc
and
xchg
pop
leave
in
adc
inc
popa
outsl
fs
outsb
add
sub
jp
cmc
call
mov
in
cmp
divb
ja
jbe
in
mov
mov
scas
leave
inc
jl
cmp
shrb
ret
mov
and
mov
pop
jns
int3
fdivrl
push
mov
jecxz
rcrb
mov
add
sbb
flds
testl
out
rorb
sub
pop
pop
jnp
mov
iret
add
adc
gs
push
cmc
jns
inc
jge
jl
jecxz
add
mov
mov
push
loope
jmp
dec
mov
mov
ja
das
clc
stos
and
mov
cmp
movsl
push
fidivs
push
dec
push
or
mov
sbb
jns
pop
cmpsb
or
cmp
add
or
pop
in
repz
adc
call
outsb
ljmp
mov
cld
and
mov
mov
bndstx
outsl
mov
dec
mov
xor
mov
add
jmp
pop
push
movsb
cltd
cmp
stos
not
xor
loopne
jl
jnp
push
cmpsl
xlat
test
test
mov
mov
nop
lock
jmp
iret
out
add
cs
push
push
into
sub
jno
push
adc
mov
jne
pop
inc
int
mov
inc
mov
fwait
push
flds
out
mov
lret
into
mov
cmc
sahf
push
cmp
dec
mov
mov
sbb
sbb
jl
dec
in
int
mov
xchg
into
shl
add
in
in
xlat
andb
sub
push
inc
nop
and
or
push
ret
inc
add
sti
into
and
or
cmp
aad
cmpsb
out
mov
sub
daa
jg
fcomi
add
pop
sbb
push
jbe
push
aas
rol
xchg
lret
stos
rcr
popf
cmp
fs
sub
or
inc
inc
lods
jp
aas
or
cmp
inc
xchg
jg
movl
cld
cmp
sbb
or
or
push
iret
inc
push
dec
xchg
inc
outsl
cli
lods
cmp
cmpsb
cmp
jp
xor
mov
fs
stos
pop
mov
inc
insl
mov
mov
sbb
mov
popa
push
popa
or
and
xchg
inc
call
popa
mov
add
jno
xchg
jl
push
pop
mov
sub
nop
fs
xor
jo
sbb
jb
push
xchg
xchg
dec
outsb
aas
adc
ja
or
inc
push
aad
cmpsl
inc
mov
lods
and
xchg
sub
xlat
imul
pushf
outsb
fimuls
and
cmpsl
adc
das
mov
insl
push
fcmovnu
mov
and
add
push
cld
loope
popa
std
lods
jmp
inc
sbbb
clc
in
jmp
xchg
push
je
pop
subl
push
add
lea
lcall
das
out
sbb
daa
je
test
pop
nop
jo
jnp
cmp
or
repz
or
pop
jae
std
nop
popf
lock
adc
mov
pop
lods
loope
leave
ja
or
and
filds
jo
imul
stc
add
xor
cwtl
sahf
cld
adc
xchg
popf
xchg
and
adcl
lret
adc
pushf
or
jns
in
pop
scas
fisubs
shlb
push
push
test
data16
loope
dec
repnz
movsb
outsl
pop
cmc
fcomps
jp
aad
dec
lahf
lcall
subl
sbb
iret
xchg
das
ljmp
jecxz
cmc
jg
subb
pop
pop
imul
or
mov
rolb
lock
movsl
adc
cld
cmp
add
in
mov
sahf
jne
dec
mov
jo,pn
pusha
scas
and
lods
aad
cmp
fdivrs
or
pop
dec
ja
sub
mov
je
xor
pop
jns
push
mov
popl
jg
adc
fwait
test
adc
jnp
jle
lea
pop
sbb
lods
jmp
scas
pop
xchg
lock
mov
inc
adc
xchg
push
mov
sub
cmp
into
inc
inc
loopne
inc
jl
or
push
mov
dec
rcrb
jb
aas
push
mov
push
mov
inc
sbb
mov
jnp
mov
lahf
inc
rorb
push
insl
push
cs
insl
loope
mov
mov
dec
icebp
icebp
pop
push
addb
push
push
dec
dec
daa
shll
fs
out
mov
fmuls
inc
mov
add
loop
insl
xchg
or
push
stos
jecxz
sbb
test
mov
lcall
dec
push
cmp
xlat
add
addr16
iret
sbb
cmpsl
sub
push
nop
rorl
and
cmp
clc
mov
inc
push
sub
test
imul
sub
mov
ret
sbb
adc
pop
or
lods
ja
fsubl
push
dec
sbb
aam
push
aas
stc
popf
push
out
ret
xchg
inc
mov
mov
pop
aaa
push
sub
jp
clc
insb
arpl
mov
sub
fnstsw
push
xor
mov
or
sahf
aaa
cmp
sbb
and
pop
insl
into
fsubrl
je
push
out
stos
mov
and
out
mov
cwtl
orl
xchg
pop
cmpsl
xlat
rclb
in
and
mov
xor
and
sbb
cwtl
sub
pop
out
into
int
pop
test
jbe
or
cmp
xor
testl
mov
rol
lahf
int3
cwtl
out
ja
jnp
sbb
push
pushf
inc
sbbl
xchg
push
push
ds
notl
mov
int3
xchg
es
scas
mov
out
icebp
adc
loop
inc
scas
cmp
repz
cmpsl
imul
push
imul
jle
inc
or
adc
stc
add
add
jle
dec
std
sub
push
int
cs
xchg
andb
std
cltd
test
loop
mov
insb
arpl
aam
outsl
mov
jge
lcall
mov
cmp
loopne
sahf
or
add
jnp
xchg
xor
sahf
jecxz
mov
jmp
and
ficomps
mov
je
insb
nop
inc
sbbb
and
adcb
hlt
sbb
outsb
dec
sbb
out
xor
lea
or
leave
pop
enter
sar
pusha
in
inc
mov
shrl
jecxz
inc
mov
push
loopne
lret
sarl
inc
dec
hlt
fildll
mov
fwait
jae
sbb
and
ret
xchg
leave
add
je
cmp
sbb
sbb
loopne
scas
loope
mov
xchg
and
mov
mov
fsubs
dec
orl
pop
xor
arpl
enter
imul
das
xchg
mov
hlt
cmp
dec
mov
cs
ret
xor
inc
and
fsubs
add
inc
addr16
lds
pop
sarb
imul
or
cmc
cmp
jg
mov
sub
pop
scas
mov
or
and
jns
ss
lret
add
mov
adc
loopne
xor
and
mov
sti
scas
add
stos
dec
test
sub
xor
in
sbb
add
stos
jl
mov
popf
jg
mov
stos
mov
stos
mov
push
dec
in
out
pop
insl
xor
movsl
sbb
cld
ljmp
int
mov
mov
xchg
cmp
or
das
push
xchg
insl
leave
repnz
adc
xchg
or
loopne
mov
adc
mov
ds
mov
jge
mov
xor
lcall
mov
sbb
nop
scas
lods
fisubrl
dec
xchg
out
sub
je
test
enter
jns
pop
and
in
cmp
in
scas
push
jmp
and
dec
push
sub
ret
xchg
pop
inc
stos
dec
sbb
stc
movsb
ret
jo
sbb
sub
inc
xchg
roll
cmp
sbb
lds
cmp
and
mov
call
xor
jno
aas
cmp
add
ret
or
imul
fdiv
push
pop
xor
ret
xchg
mov
mov
dec
pop
pop
push
cmc
xlat
mov
cmc
add
decl
or
adc
cmp
sub
aas
push
loope
lods
insl
es
xor
js
mov
fcomps
jmp
popl
jecxz
or
test
out
jl
lret
outsb
mov
test
sbb
fadds
bound
mov
popa
loop
out
jecxz
xchg
sub
test
nop
cmp
cwtl
fidivs
jns
lea
pop
lret
inc
test
ret
aad
lahf
add
pusha
setl
sub
jecxz
mov
test
push
test
sbb
dec
xor
jge
mov
or
out
cmpsl
xor
add
mov
cmp
std
dec
lahf
jo
icebp
int
xchg
loope
orl
pushf
cltd
lods
sarb
or
mov
sbb
mov
lea
fcoms
aam
adc
scas
out
push
out
dec
loop
xor
out
dec
lret
jle
pushf
pop
push
xchg
push
std
stos
jno
rcll
xchg
sub
mov
mov
adc
dec
push
jle
insb
sub
nop
mov
fcoms
xchg
mov
xchg
cmp
mov
inc
aaa
push
or
mov
insl
jl
and
mov
adc
push
xchg
dec
pop
or
js
dec
hlt
rolb
insb
sub
mov
dec
dec
sub
inc
shrb
mov
jb
int3
test
xor
and
adc
jge
imul
add
mov
hlt
cmp
cmc
std
jp
jo
and
jo
mov
hlt
nop
pop
pop
xor
call
cmpsl
mov
jns
lods
out
fisttpll
xchg
in
or
add
sub
xchg
xchg
xchg
outsl
xchg
das
lods
cmp
pop
popf
pop
adc
dec
lods
movsb
xchg
or
gs
shrb
out
iret
xchg
or
pop
push
shl
popf
rorb
xchg
pop
pop
jb
aas
nop
test
xchg
decl
mov
cwtl
jp
sub
and
cmp
repz
push
or
js
jo
sub
ja
adc
add
vpmacsdqh
and
pop
fidivrs
or
inc
mov
pop
cmp
jno
enter
repnz
sub
push
dec
xlat
icebp
movsl
dec
pop
mov
stos
les
dec
add
int3
dec
adc
sarb
mov
test
clc
clc
mov
dec
inc
cwtl
data16
into
int
cmp
lea
stos
and
push
mov
jmp
sbb
sbb
mov
pop
jmp
cld
dec
push
mov
fwait
test
xchg
popf
or
es
jo
xor
mov
aaa
fwait
xchg
ja
and
cmpsb
in
scas
sub
mov
in
inc
sbb
pop
inc
pop
mov
push
test
sub
outsb
sub
out
jg
test
lret
imul
push
loop
shr
jo
lahf
ja
cmp
mov
mov
push
jnp
rorl
scas
inc
cld
stos
push
pop
push
bound
cli
sbb
cmpsb
in
mov
dec
and
inc
mov
es
dec
add
mov
adc
sbb
push
and
sbbl
add
adc
xchg
ret
sub
mov
pop
dec
hlt
orb
lret
lock
jnp
std
in
cld
aaa
rclb
xchg
mov
and
sti
xchg
out
mov
pop
cmpb
and
xor
in
lods
js
in
or
cmc
cld
loop
rolb
stc
lcall
or
int
pop
jnp
lahf
mov
mov
les
add
insl
roll
sbb
fsts
add
jne
imul
imul
cmp
add
cmp
xchg
pop
cmp
mov
iret
sarb
ss
fisttps
cmp
scas
dec
shll
bound
loop
pop
pop
std
push
sbb
iret
dec
popa
sub
or
cmpsb
jmp
cli
rorb
pop
int
stos
push
sbb
jl
and
ja
mov
rcrl
cmp
jb
inc
adc
xorl
aaa
cmp
mov
push
inc
and
adc
push
jmp
add
loopne
jle
addb
xchg
out
sub
mov
in
or
outsl
xor
push
repnz
mov
and
vpsubsw
sub
lahf
sub
push
mov
and
push
jmp
mov
push
in
sbb
or
jp,pt
cld
fs
mov
add
cmpb
mov
jmp
xchg
ljmp
loope
imul
fcompl
fisttps
push
xlat
js
js
je
jmp
jmp
push
push
mov
mov
jne
ds
cld
test
jae
popa
xor
dec
jg
mov
sub
add
test
sub
jne
pop
xor
cld
aaa
iret
pop
xchg
shrb
leave
cmc
movsb
rclb
adc
cmpsl
add
jle
pop
loope
dec
scas
pmaxub
xor
xchg
jno
stos
inc
loope
pop
and
test
xor
mov
mov
inc
pop
adc
cmp
imul
dec
icebp
mov
add
mov
and
ljmp
sub
and
xchg
jle
rol
nop
pop
xchg
add
aaa
test
ret
xchg
xor
xchg
dec
push
xchg
lods
or
call
mov
rorl
xchg
imul
daa
cmp
or
psubsb
jne
cs
std
xor
test
dec
imul
leave
dec
lcall
leave
mov
push
lods
cmp
inc
inc
and
inc
call
cmp
add
inc
xchg
mov
and
fimull
sub
ss
jo
into
or
cld
pop
push
repz
js
iret
in
inc
lods
mov
adc
cs
pusha
cwtl
jecxz
add
loopne
pop
popa
icebp
sti
int
pop
pop
or
push
fcoms
aad
mov
xchg
or
orb
xor
les
jns
icebp
jge
test
lahf
fcmove
cmp
jge
mov
push
stos
ljmp
leave
rolb
pop
sub
daa
in
and
shrl
push
dec
dec
add
xchg
lds
les
shl
repz
dec
es
sbb
sbb
xchg
in
jge
fcmovu
xor
fidivrl
sub
rcr
inc
xor
push
mov
and
cvtpi2ps
or
xchg
sbb
stos
inc
scas
aaa
frstor
cmp
lods
jg
and
and
inc
push
movsl
or
test
ret
dec
mov
xchg
int
cmc
mov
mov
lcall
push
sub
addr16
aaa
mov
sti
xchg
xchg
pop
sbb
mov
xor
lock
xor
dec
test
mov
nop
mov
mov
out
pop
jbe
mov
dec
fwait
cmp
sub
out
mov
pop
xchg
cli
out
idivb
bound
mov
das
movsl
out
push
cli
test
xchg
daa
sbb
add
cmpsb
dec
outsb
notb
je
and
hlt
push
sbb
xchg
imul
nop
lods
iret
rclb
mov
jl
mov
fidivrl
xchg
jmp
fsubrs
sti
jecxz
movsb
lods
in
outsl
jp
cmp
fprem1
lods
xchg
imul
cmp
xchg
or
sarl
adc
and
lcall
lods
mov
and
xchg
ds
stc
div
retw
into
add
ss
movsl
out
cltd
out
sub
mov
adc
aam
push
xchg
shld
aad
inc
test
ljmp
sahf
fdivrl
mov
xlat
jp
push
call
and
ja
dec
jns
xchg
lcall
imul
int3
leave
pop
rolb
insb
xchg
notl
or
push
mov
jmp
shl
dec
aam
xchg
cmp
pop
sahf
mov
es
xor
adc
mov
xchg
in
fcmovbe
fs
jae
jp
decb
bnd
jge
test
mov
jae
jns
xor
xor
pusha
dec
cs
pusha
fs
data16
inc
in
jp
push
or
jae
mov
pusha
mov
mov
push
test
mov
loop
loopne
xor
scas
shlb
mov
and
aas
sbb
push
xchg
sub
jg
mov
mov
popf
inc
and
inc
movsb
pop
lods
jae
cltd
xchg
push
push
push
cmp
nop
dec
addr16
fcom
jno
outsb
dec
cmpsb
mov
mov
dec
call
in
movzwl
add
pop
das
xchg
data16
push
in
pop
dec
and
mov
push
pop
stc
shlb
mov
or
or
push
hlt
mov
cmp
cmpsl
pop
les
cltd
and
push
mov
or
pop
mov
cmp
sub
pop
inc
xor
mov
pop
lahf
js
lock
loopne
mov
mov
mov
sti
fisttpll
mov
mov
sbb
outsl
clc
sahf
std
outsb
jae
jns
loopne
out
call
mov
stos
add
sub
cs
push
ljmp
jae
fidivs
js
add
fs
add
cltd
insl
daa
push
push
mov
mov
dec
jno
mov
testb
dec
lahf
xchg
inc
loop
scas
xchg
lock
fildll
jle
push
cmpsb
sbb
ret
or
adc
push
pop
test
mov
mov
sbb
inc
add
mov
js
out
loop
in
cmp
xor
jno
mov
fldt
xchg
out
jp
ret
adc
aam
sbb
mov
or
xlat
and
sbb
jp
stos
adc
test
inc
enter
jnp
sahf
sub
add
xor
xchg
mov
sarl
push
sahf
imul
in
mov
sub
inc
cmpsl
rclb
mov
pop
cmp
pop
xchg
test
inc
cmc
inc
scas
stos
jmp
dec
pop
adc
or
add
jp
push
ds
js
pop
mov
call
mov
in
mov
lock
ret
pop
add
fdivs
cltd
cli
pusha
sarl
shrb
test
push
insl
xchg
outsb
out
test
xchg
sbb
mov
mov
pop
and
and
lea
mov
pushf
jp
sahf
mov
insb
enter
int
xor
adc
out
movsl
cwtl
xchg
add
sbb
scas
cmp
add
sub
fdivrs
pop
movsb
dec
hlt
lahf
mov
adc
adc
mov
popa
mov
jno
dec
adc
fwait
lahf
xchg
mov
das
ret
ljmp
or
fsubrs
and
addr16
inc
pop
cmpsl
iret
andl
lret
inc
or
cwtl
xor
dec
mov
negb
mov
js
sub
push
movsb
lods
movntq
out
mov
insb
sbb
mov
mov
das
in
inc
adc
aad
cmp
adc
and
stos
push
dec
das
dec
lock
stos
ljmp
xor
cmpsl
inc
fistpll
jl,pt
mov
xchg
ret
insl
dec
in
xor
adc
jge
loop
rclb
sub
lods
arpl
nop
in
mov
push
scas
xchg
adc
adc
jp
call
pop
dec
cli
outsl
push
int
div
lret
xor
insb
mov
jecxz
lahf
mov
sub
dec
loopne
xchg
std
push
jno
sti
jbe
fsubs
cmp
fcom
xchg
mull
arpl
dec
adcl
or
movsl
fwait
movsl
loopne
dec
add
int
cmp
loop
je
lret
dec
imul
inc
arpl
jne
cmpsb
jbe
pusha
dec
mov
bound
insb
stos
adc
sub
mov
jl
lods
push
dec
ds
jnp
mov
insb
inc
int3
sbb
aaa
adc
pop
stos
xor
rorb
lret
xor
mov
stc
sbb
mov
cmp
sbb
ret
in
lea
dec
mov
jnp
mov
sub
clc
push
fstp
popa
jno
adc
cmpsl
cli
cmp
and
test
add
call
mov
add
das
das
rcl
icebp
ds
sub
divl
mov
jbe
test
cmp
add
ds
add
aad
mov
sbb
jmp
push
jp
out
lret
aam
lock
pop
add
test
popf
scas
cmp
arpl
fisttpll
xor
imul
push
fnsave
mov
movsb
pushf
mov
inc
jnp
mov
lds
aaa
mov
cmp
jnp
jge
in
mov
add
mov
imul
imul
push
mov
out
jbe
or
orb
push
and
scas
push
mov
sbb
xchg
fbstp
movsl
xor
dec
sbb
mov
cmp
sahf
adc
lods
pop
jle
push
mov
cmp
shl
adc
cmpsb
xchg
push
xor
or
cmp
xchg
cwtl
outsl
add
fwait
std
cli
pop
ja
lret
xchg
cmc
jnp
jl
popf
ret
clc
rol
popa
repnz
jge
outsb
jp
cmp
inc
aad
test
pop
push
js
jge
adc
enter
mov
adc
fiadds
mov
out
push
pop
inc
xchg
jmp
popf
add
xchg
adc
pop
in
leave
les
addl
bound
mov
mov
stos
jo
insl
imul
arpl
sar
sarb
faddl
inc
pop
push
xlat
dec
int
cmp
test
fdivrs
mov
jl
cld
or
adc
pushf
jbe
fsubl
std
mov
roll
or
and
in
hlt
std
bound
add
xchg
lret
push
sbb
leave
mov
insl
jp
push
popa
mov
fldenv
or
jmp
jb
aad
jmp
mov
shlb
ljmp
mov
call
push
movsb
aaa
stos
outsb
xchg
xor
jle
dec
sbb
repz
cmp
pop
call
xchg
aaa
mov
cmc
mov
fwait
mov
fildl
outsb
imul
ljmp
repnz
aad
ret
lock
mov
lret
es
out
aaa
bound
dec
pop
cltd
or
test
xchg
lcall
les
repz
lds
push
jp
in
stc
enter
je
in
push
out
loop
mov
dec
clc
mov
repz
cmp
pusha
ret
mov
iret
scas
jnp
test
jae
xlat
and
jne
cld
stos
data16
xlat
clc
bound
pop
cmp
dec
xchg
inc
inc
pop
sti
sbb
xor
add
idivb
mov
test
and
add
jnp
or
mov
mov
sub
dec
std
pusha
into
adc
lock
dec
jl
leave
or
mov
in
adc
fadd
jns
aas
inc
mov
js
and
add
call
insb
inc
out
rolb
test
sub
push
xchg
fsubrl
mov
fnsave
push
scas
shr
nop
sub
aas
adc
mov
iret
sub
or
fistpl
or
inc
adc
cli
clc
jl
rorb
js
shlb
fucomip
or
das
icebp
pop
in
sbb
push
dec
jnp
cmpl
push
mov
mov
sbb
jp
xchg
iret
icebp
mov
sbb
shrl
sub
mov
mov
mov
imul
cmp
lahf
xor
std
xchg
outsb
xchg
test
nop
sub
lret
popa
fwait
sbb
int3
cpuid
outsb
jmp
outsb
daa
inc
mov
cmpsl
js
add
jnp
xchg
dec
int
pop
dec
fsub
rcll
dec
pop
push
sub
sbb
push
imul
push
cld
and
mov
dec
out
add
sub
mov
imul
push
xchg
mov
pop
inc
pop
sahf
xchg
mov
stos
ret
dec
jg
jl
adc
push
call
xchg
xchg
dec
sub
jl
mov
sbb
push
sub
push
xchg
xchg
adc
inc
cs
testl
sti
sbb
fsubrs
push
push
pop
pop
test
or
dec
lods
cmp
in
mov
or
xor
in
cwtl
lock
sbb
cmp
ss
mov
inc
adc
imul
imul
jns
mov
cmpsl
xchg
outsl
sub
push
test
ficomps
sahf
popf
hlt
cmp
subb
inc
sub
jo
aam
mov
push
pop
mov
inc
jne
add
call
jge
mov
dec
dec
and
push
ds
fs
mov
dec
mov
dec
imul
add
cmpsb
sub
stos
or
sub
adc
popl
cmpsb
mov
add
mov
in
movsb
fisttps
cli
loop
loope
cwtl
dec
ljmp
xlat
mov
mov
mov
pop
imul
mov
push
cld
cmpsb
add
xlat
cmp
lret
aam
jns
inc
dec
mov
adcb
dec
add
dec
test
jne
lret
sbb
sbb
leave
sbb
mov
sub
add
into
out
mov
outsl
pushf
add
sub
jp
and
jbe
or
xchg
clc
mov
push
out
test
negl
jns
popa
scas
cmp
inc
sbb
in
sub
mov
sbb
or
filds
mov
jecxz
ss
cs
adc
pop
loopne
dec
and
leave
pop
mov
movsl
xor
fistl
adc
mov
cmp
sub
pop
pop
mov
gs
xchg
addl
mov
cwtl
fisubl
test
cmp
cmpsl
mov
sub
xchg
lret
dec
adc
pop
xchg
outsb
xor
ficompl
mov
lret
adc
ret
and
das
popf
and
or
loop
adc
rorl
cmpsb
or
aaa
inc
xlat
dec
mov
dec
mov
adc
and
call
lret
out
jl
sbb
xchg
jnp
cld
push
pop
jl
aas
ja
pop
xor
dec
add
fs
leave
rcrb
push
aam
nopl
scas
mov
or
cs
and
scas
mov
cwtl
pop
out
mov
iret
cmp
pop
sub
mov
outsb
shr
lcall
dec
or
ja
mov
popf
aaa
insb
cli
mov
add
fs
lret
pop
cmp
sahf
cmpsl
sub
rolb
jle
pop
cmc
or
or
insb
pop
ss
lods
loopne
stos
imul
fcmovnu
stc
inc
cmp
add
outsb
mov
dec
sub
insb
push
mov
mov
jne
loop
push
imul
mov
arpl
push
jbe
out
in
sbb
test
sub
aaa
out
sub
in
movsb
push
test
xor
xor
sbb
sahf
in
icebp
stos
int
lods
popf
ret
mov
orl
sti
rcrb
jge
and
insl
and
inc
push
xchg
push
outsb
nop
or
xor
jecxz
fldl
jne
xchg
dec
ret
or
pushf
push
push
xor
dec
mov
or
mov
cmp
pusha
sbb
xchg
cmp
and
or
push
mov
lahf
bound
pop
jno
shrl
shlb
mov
es
cltd
sub
divl
inc
and
aaa
je
in
add
push
xchg
sub
movsb
dec
out
inc
dec
inc
jl
aam
adc
lcall
or
test
test
push
pop
dec
scas
jbe
mov
add
cmp
jmp
adcl
test
mov
test
cltd
xchg
pop
js
cmp
mov
add
jbe
dec
push
mov
adcb
inc
and
je
or
shll
out
add
dec
and
adc
cltd
and
sub
add
xor
push
inc
arpl
sbb
jno
adc
popf
add
sub
mov
test
nop
mov
pop
add
mov
fwait
jbe
dec
pushl
outsb
lock
mov
mov
or
jge
cmp
cmp
ret
fld
sti
idivl
jmp
dec
dec
inc
aam
jb
and
shlb
sub
mov
sbb
xchg
jo
inc
pop
dec
jbe
sahf
fidivrl
mov
enter
xchg
mov
xor
push
aad
out
inc
stos
loopne
call
mov
and
xchg
lock
fmuls
loope
dec
loop
int3
xchg
mov
scas
sub
inc
fisubrs
dec
dec
stc
mov
sbb
push
mov
rcl
sbb
inc
sbb
push
shlb
xchg
xchg
sbb
mov
imul
in
and
in
xor
adcb
and
pop
movsl
insl
jb
mov
enter
pop
xchg
pop
mov
mov
addr16
adc
mov
xor
mov
sub
ds
mov
mov
iret
outsb
jge
xor
or
sarb
lock
addr16
stos
addb
popf
out
js
call
dec
pop
add
cmc
scas
push
test
filds
sub
dec
cmp
repnz
sub
or
cmp
and
and
repz
jl
fldl
add
inc
bound
loope
gs
inc
ffreep
push
aam
lds
icebp
and
dec
jnp
dec
leave
loope
xchg
mov
daa
aaa
shl
leave
sahf
jge
mov
dec
aad
and
push
mov
sbb
cmpsb
dec
inc
iret
bound
inc
enter
adc
push
sarl
bound
stos
cmc
lret
iret
hlt
mov
pop
int
xchg
clc
cli
jno
gs
loopne
jle
xor
test
jne
push
sahf
jnp
xor
jle
jmp
and
rol
pop
jno
push
stc
test
pop
out
mov
xchg
iret
out
lahf
inc
outsl
mov
cmp
addb
addr16
pop
sbb
dec
mov
mulb
outsl
int
mov
arpl
stos
or
aam
fldl
xor
loop
loopne
in
jb
mov
adc
adc
xchg
mov
data16
int3
and
mov
jecxz
sahf
lods
add
out
dec
or
sub
add
and
scas
mov
lds
ja
jecxz
mov
pop
pop
add
in
push
mov
repnz
in
dec
fists
inc
fisubl
push
dec
enter
mov
mov
sbb
sub
ss
xchg
pop
adc
lret
int
js
jne
pop
stc
sbb
repz
mov
dec
in
mov
aad
popa
cmovno
adcl
xorb
call
and
mulb
notl
cmp
cwtl
mulb
mov
xchg
in
mov
pop
ret
mov
in
xorl
cmp
inc
subb
leave
xrelease
xchg
jns
sub
arpl
lods
hlt
push
popf
and
sub
xor
movsl
lds
adc
cmp
xchg
in
jns
push
and
dec
fadd
mov
sarl
movsl
adc
sub
js
enter
mov
jne
bound
cmp
in
nop
cmp
je
mov
fxch
sbb
sbb
je
cli
inc
repnz
sbb
dec
sub
pop
inc
sar
mov
hlt
inc
jo
jo
add
nop
test
lret
pop
push
in
jbe
xlat
xor
mov
inc
add
jge
data16
mov
repnz
cmpsb
cmpsb
in
add
cmp
out
xor
movsl
add
nop
sbb
gs
imul
xor
push
cli
cli
insb
and
and
in
jbe
or
fsubs
mov
push
push
int
add
and
xchg
or
insl
jns
jne
addr16
inc
cmpsb
and
and
cld
adc
in
mov
scas
inc
or
mov
ret
xchg
inc
pop
push
jge
mov
test
add
sbb
mov
and
loopne
inc
int3
mov
or
xor
aaa
adc
sbb
bound
fstpl
adc
int
lahf
inc
fcomps
jecxz
jb
in
stos
lock
push
pop
rcrl
xchg
sub
sub
imul
cli
mov
pop
cmp
das
lods
cmp
jl
cmc
imul
push
jmp
push
movsb
lock
sub
add
int3
xor
mov
and
ljmp
dec
movsb
jmp
sub
and
jecxz
lcall
and
lods
ds
sub
xlat
or
lret
adc
mov
adc
mov
xchg
add
stos
xchg
data16
jp
adc
ds
sub
fdivs
lcall
cmpsb
push
push
into
insb
add
push
inc
xor
sahf
pop
push
and
clc
pushw
lret
mov
mov
lahf
rolb
adc
enter
dec
lods
mov
inc
pop
inc
or
jne
lret
jae
or
movsl
fld
push
push
sahf
xor
push
scas
dec
scas
mov
mov
iret
and
popa
aam
fld
ds
push
dec
test
add
inc
fcomi
icebp
sub
cmp
js
lds
or
sysenter
adc
pop
gs
xchg
mov
rcrb
stos
fiaddl
test
mov
jecxz
inc
imul
dec
fwait
test
push
jno
xchg
cmpsb
lea
icebp
mov
xor
xchg
icebp
push
xchg
outsl
push
sub
pushf
shl
in
in
xor
push
add
jo
cs
jb
cmp
addb
lahf
mov
lahf
scas
mov
xchg
pop
pop
jecxz
lahf
mov
mov
sbb
cmp
bound
jno
sub
jb
idivb
push
jp
mov
loopne
test
push
inc
sbb
push
add
sbb
push
add
mov
mov
inc
fwait
push
and
mov
sbb
or
ficompl
mov
jl
jae
or
push
nop
pop
push
adc
shr
data16
outsb
insb
int3
incl
xchg
jmp
jno
cmp
lds
pop
xlat
mov
sar
jbe
xor
outsl
mov
iret
nop
lods
arpl
mov
lock
xor
add
or
sbb
push
pusha
push
out
inc
adc
add
in
adc
divb
lea
sub
ret
and
xor
ficompl
dec
cwtl
mov
stc
xchg
mov
dec
jbe
in
les
and
push
fsub
and
or
cmc
bound
mov
and
sti
jg
jle
mov
push
arpl
ret
inc
or
out
pop
jg
stc
xor
push
mov
addl
push
push
jg
add
in
ret
movsl
into
mov
fcmovnu
push
lds
iret
je
outsl
cmp
sbb
leave
cmpsl
repnz
arpl
sbb
add
mov
cld
push
cwtl
pop
loop
xchg
mov
pop
out
jl
repnz
cmc
xchg
inc
xor
test
sub
lock
or
jns
lret
jns
sbb
add
mov
sbb
xor
movsl
aam
cmpb
xchg
xchg
es
inc
mov
rolb
mov
push
clc
xor
inc
dec
sub
scas
fwait
mov
test
inc
dec
movsb
inc
push
in
lea
mov
cmp
inc
cmpsl
in
test
push
scas
das
mov
sub
cmp
nop
inc
fsubl
dec
cmp
jmp
sahf
xlat
mov
and
jecxz
test
flds
or
dec
cwtl
jnp
imul
dec
incl
mov
mov
loop
pop
enter
inc
loopne
stc
xor
test
test
aas
jo
sarl
out
xchg
fstl
mov
push
push
dec
cmpsb
mov
jg
xor
push
fdivr
imul
sbb
xor
loopne
loopne
or
sbb
mov
mov
loop
cmp
adc
push
sub
or
add
adc
ja
pop
cs
or
stos
jg
and
mov
add
jp
call
fldt
loope
insb
xor
enter
loopne
sbb
pop
popf
fimuls
dec
mov
enter
lcall
je
push
repz
aaa
pop
ficompl
inc
jns
stos
sub
xor
sti
mov
jle
fldcw
jmp
and
sub
test
mov
mov
outsl
mov
jmp
dec
jb
sub
mov
in
ja
xor
sbb
adc
cmc
stos
js
jb
in
pop
xorb
in
leave
push
push
mov
ljmp
and
pop
sbb
push
pop
shrb
das
sbbb
stc
faddp
lcall
or
mov
push
ds
pop
les
fsubrs
fidivrl
xchg
test
mov
sub
push
popf
fadds
push
push
imul
mov
xlat
int
scas
push
jae
xor
pusha
mov
leave
adc
sub
loope
mov
mov
mov
jg
cmp
mov
inc
insb
mov
mov
scas
and
push
std
xor
fs
fstps
add
movsl
or
jns
aam
movsl
xchg
sbb
les
inc
cmp
push
popa
mov
addb
jge
or
sub
addb
sbb
sahf
lret
cltd
shl
lret
xchg
and
adc
lret
cs
add
or
fdiv
jge
xor
cld
pop
cmp
bound
inc
loop
div
and
les
lret
cs
dec
or
mov
out
xchg
enter
aas
ret
mov
lock
cs
loop
or
imul
inc
and
ror
cmp
jnp
push
shll
popf
mov
mov
daa
xchg
sbb
pop
xchg
xchg
fistpl
popf
pop
sbb
enter
rcr
hlt
mov
addr16
std
test
lods
pop
mov
adc
popa
adc
aad
jnp
hlt
rcrb
mov
mov
or
ds
xchg
dec
out
xchg
stc
je
mov
mov
mov
pop
xchg
jecxz
loopne
push
inc
insb
push
add
xorb
scas
push
fildll
pop
jne
push
xchg
xor
cmpb
xor
sub
cmp
ja
sbb
pop
daa
fsts
outsl
mov
sub
movsl
cmc
scas
and
pop
test
push
cmp
aam
aaa
sbb
xchg
mov
leave
xlat
cmp
mov
mov
ds
push
clc
push
stos
sbb
lds
xchg
push
push
mov
clc
repz
push
dec
ror
mov
push
daa
xor
pop
in
mov
push
aas
in
mov
push
or
push
enter
movsl
inc
dec
test
jno
repnz
add
fwait
jmp
xor
scas
jo
or
adc
stc
orl
mov
mov
inc
addr16
adc
subl
cmpsb
and
cmpl
jne
xorb
inc
loop
ret
mov
stc
push
adc
icebp
push
jnp
mov
xor
sarb
aad
push
push
mov
lcall
enter
xchg
xchg
push
mov
mov
loopne
call
repz
scas
orb
mov
loop
jo
std
cmp
mov
mov
outsb
clc
jg
and
push
and
fstpt
push
stc
aam
imul
fisubrl
lock
in
sub
sarl
lret
hlt
jo
popf
jle
clc
insb
push
test
mov
cmp
out
jecxz
leave
mov
sub
lret
add
fdivl
xor
cmpsl
cmp
mov
jg
xor
in
push
andb
lds
test
mov
gs
or
jp
popf
mov
jg
andb
xor
pop
cli
shlb
adc
or
mov
adc
xchg
mov
add
add
xchg
cmpsb
sti
rcl
mov
xchg
jmp
adc
pop
jns
cmpsb
push
pop
int3
push
addr16
fidivs
push
add
jbe
out
fwait
mov
popf
loopne
add
shl
pop
outsb
jl
data16
clc
sub
shll
or
cmp
jbe
addb
mov
mov
sbb
add
jae
in
cmpsl
xchg
add
sbbb
mov
xor
xchg
push
push
cmpsb
pop
xchg
push
pusha
cld
into
test
in
cmp
mov
lods
data16
loope
cmp
dec
mov
das
stc
ror
jecxz
int3
call
cmp
gs
pop
clc
jnp
xor
je
mov
mov
loopne
js
xor
xor
ljmp
dec
xlat
aam
jb
xchg
xchg
adcb
mov
pop
xchg
or
rcrb
sbb
stos
xchg
mov
sbb
out
inc
xor
or
out
sbb
xchg
fnsave
cmp
sub
jmp
add
jne
fstpl
outsl
xor
or
test
das
jnp
into
jecxz
pop
pop
addb
cltd
xor
adcl
loopne
leave
scas
mov
xchg
or
add
xchg
jno
pop
imul
pop
push
gs
cmpsb
jo
test
push
or
jl
lahf
sub
out
inc
pop
out
mov
jb
stos
xor
sbb
cmp
in
xor
and
js
gs
js
cld
xchg
mov
jns
mov
or
jne
test
mov
mov
inc
dec
and
cmp
popf
jg
mov
jge
gs
cmpsl
jnp
fnsave
sub
and
xchg
pop
jbe
popf
jae
add
nop
sar
lret
add
add
inc
imul
dec
push
dec
ds
dec
rcll
popf
jmp
xor
in
scas
adc
fs
dec
flds
push
xchg
sub
push
cmp
push
flds
sbb
shlb
and
lock
or
lods
pop
push
mov
xchg
pop
mov
lret
cmc
popf
xchg
stc
pusha
mov
mov
test
das
xor
adc
imul
popa
popf
adc
ds
push
sub
lret
loopne
sub
daa
lds
xor
inc
inc
aam
stos
fst
jbe
out
in
mov
xchg
jmp
cmp
sub
or
test
jp
mov
inc
pop
jg
pop
cs
fs
int
xchg
out
mov
cli
out
repz
push
adc
mov
push
mov
test
test
lahf
iret
mov
push
adc
mov
adc
dec
dec
xor
aam
repz
in
stc
outsl
jbe
pop
pop
es
and
mov
inc
sub
mov
out
push
fbld
xchg
cmpsb
mov
mov
dec
mov
aad
pop
lret
jnp
xchg
cld
sbb
and
out
andb
xchg
fwait
add
jg
aaa
repnz
lea
data16
shl
xchg
sarl
xchg
xor
mov
inc
pop
sbb
mov
jecxz
mov
push
dec
sbb
or
pop
and
inc
inc
mov
push
xor
adc
push
fadds
shlb
jmp
ficoms
in
loop
out
jmp
push
mov
mov
jb
cmpsb
sarl
cmp
cmpsl
int3
or
addb
cltd
and
push
xchg
in
lcall
or
insl
popa
xor
cmp
jg
cltd
cmp
jno
fistpll
hlt
addl
cmp
mov
pop
mov
cmp
adc
sbb
push
mov
orb
aam
dec
pop
sbb
daa
jo
repz
xor
pop
leave
jmp
outsb
mov
cmp
mov
subb
pop
pop
je
dec
push
push
popf
cmc
lahf
shll
jecxz
xlat
stc
push
jg
mov
iret
sbb
lret
inc
xor
rolb
sti
jg
adc
pop
cltd
lret
mov
pop
das
outsb
or
cmp
inc
sub
lods
fwait
lret
cli
das
sub
cld
lock
insb
mov
pop
sbb
andb
cmp
pop
cmp
lret
lock
sub
dec
enter
insl
push
xor
sbb
insl
and
lods
jecxz
addb
sarb
mov
adc
and
inc
test
into
fdiv
in
lret
mov
push
ret
mov
push
loope
cmp
cmp
lret
imul
and
push
fidivl
push
or
test
adc
mov
mov
cld
cli
jmp
jns
fcomps
push
cli
je
fcomip
jne
inc
out
mov
fcomi
cmp
cmc
xchg
cmp
sbb
pop
inc
push
dec
cmpsl
add
cmpsl
popl
nop
stc
jns
popf
es
push
out
cmp
clc
mov
lods
notl
dec
mov
arpl
push
pop
pop
xor
mov
jge
push
loop
popa
lods
test
pop
push
pop
and
sub
pop
mov
stos
cmpsl
jae
sub
mov
hlt
cmp
mov
lret
shll
push
test
loopne
dec
jg
mov
sbb
lret
and
in
mov
cmp
lahf
inc
xor
xchg
pop
inc
out
scas
xchg
mov
jnp
and
dec
int3
insl
fwait
stos
cmc
clc
jecxz
rclb
std
inc
xor
dec
int3
xor
inc
loopne
call
imul
bnd
in
push
pop
scas
cli
inc
push
ljmp
adc
push
fldcw
jge
and
outsl
out
adc
and
dec
std
mov
inc
push
outsl
jle
cmp
adc
adc
xor
leave
scas
mov
pop
dec
mov
add
nop
jo
sbb
aam
or
icebp
arpl
adc
js
orl
sbb
mov
fdivl
jecxz
gs
and
cs
scas
fstl
loopne
movl
mov
mov
repnz
and
jns
test
insb
inc
clc
loopne
sbb
shlb
pop
jbe
andb
jle
or
rorl
push
mov
xchg
mov
in
cs
pop
mov
lret
insb
xor
adc
stc
xchg
pop
stos
out
test
dec
adc
mov
iret
pop
scas
scas
cwtl
sub
mov
pop
or
jno
push
movsb
push
and
inc
ja
enter
loopne
jl
pop
jnp
jecxz
jle
cmp
out
xor
mulb
mov
sub
in
enter
cltd
je
sarl
pusha
andl
mov
mov
cs
dec
mov
xor
cmp
imul
enter
xor
push
sbb
pslld
add
push
mov
mov
jno
mov
cli
scas
ljmp
xchg
mov
pop
xchg
fimull
lcall
xor
gs
sbb
repz
add
jmp
call
icebp
mov
sbb
cmp
mov
sub
insb
cs
pop
sbb
xor
fmulp
xchg
sub
xor
add
in
xor
cmp
adc
inc
notb
std
sub
xchg
out
inc
test
loope
je
or
data16
sub
adc
jo
out
xchg
adc
sbbb
and
daa
sub
or
in
lods
in
jge
in
stos
mov
pop
ljmp
push
dec
and
push
aas
test
fwait
cmpsl
gs
ja
xor
jp
imul
adc
jmp
push
xor
out
aaa
sbb
pop
cmp
popf
pop
les
enter
les
mov
hlt
int3
push
pushf
jno
pushf
ret
push
pop
cmp
jae
out
sub
mov
xor
mov
adc
pop
loop
add
cmpsl
ficompl
xchg
dec
mov
aaa
in
add
add
gs
jle
pop
add
movsb
les
stos
adc
mov
add
js
adc
jne
ljmp
sti
scas
mov
push
jp
mov
lods
or
or
add
mov
adc
mov
pop
lret
fs
dec
out
sbb
xor
pop
aad
xchg
shlb
int3
pop
mov
push
shrb
sub
cmp
out
icebp
popa
push
jns
cld
jge
push
es
jg
add
lea
pop
mov
pop
lea
pop
mov
sahf
scas
dec
js
mov
cs
inc
jmp
ret
int
loopne
imul
imul
popa
aad
scas
rcrl
cld
aam
jbe
push
add
cmp
js
sbb
sbb
cmp
lea
test
ret
scas
mov
mov
jns
inc
and
jns
mov
xchg
test
mov
lcall
dec
xchg
movsl
rolb
mov
push
mov
adc
int
adc
arpl
pop
sub
pop
out
jmp
fmuls
cld
ljmp
and
and
xlat
cmpb
je
enter
movsb
sbb
mov
add
jp
stos
add
and
sub
movsl
pop
test
cmp
andb
and
outsb
lret
imul
or
mov
xor
and
jmp
push
jns
lcall
xchg
mov
jmp
aaa
fcmovbe
cmc
outsl
test
cmp
ss
imull
stos
ret
cmp
fcomip
mov
imul
dec
ret
hlt
jmp
add
or
leave
cmc
call
jae
push
int
sahf
mov
xor
pop
cmp
or
jg
mov
into
scas
mov
and
sub
mov
lahf
js
inc
insl
in
xorl
lea
mov
push
ja
in
cwtl
xchg
mov
lret
sub
push
clc
jle
push
out
pop
in
sbb
lock
inc
mov
sub
bound
add
xchg
dec
push
jle
xchg
and
daa
sub
mov
push
mov
mov
popa
add
inc
sub
arpl
push
adc
mov
and
cld
inc
in
mov
push
cmc
leave
jle
fiadds
lods
add
inc
add
shll
rorl
pusha
cmp
clc
in
adc
adc
and
push
or
xor
mov
xchg
inc
push
test
push
enter
jecxz
in
loop
mov
xor
push
sbb
cmpsb
and
dec
in
add
pop
cld
stos
in
sub
fs
inc
popf
mov
into
add
repz
fs
mov
dec
xchg
inc
or
fwait
jg
cli
pop
sbb
mov
imul
jbe
pop
add
sbb
inc
clc
imul
push
mov
dec
fdivrl
cli
aad
rolb
sub
fwait
clc
and
out
shlb
cmc
repnz
pop
xchg
jno
repnz
neg
std
mov
pop
add
sahf
xor
jbe
faddp
xor
dec
out
inc
adc
pop
lahf
inc
cmpsb
mov
outsl
out
push
and
int
fdivl
loopne
push
add
sub
mov
xchg
das
inc
fdiv
lea
popa
fnsave
mov
out
dec
test
cmp
pop
and
test
lods
ficomps
push
cltd
cltd
js
jg
insb
xor
arpl
pop
inc
inc
shrb
mov
in
mov
ficoml
enter
push
xchg
mov
mov
mov
xchg
sbb
sarl
dec
pusha
jne
xchg
fsubrs
cmp
sbb
mov
cmp
loopne
sbb
shl
add
inc
and
cmp
push
popa
and
inc
adc
outsb
test
mov
inc
loope
mov
jecxz
add
insl
shlb
mov
and
or
mov
popf
xchg
mov
add
adc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbbl
add
xorl
mov
mov
and
xor
and
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
push
push
or
xchg
lret
xchg
mov
xchg
gs
jmp
addl
sub
jmp
lcall
aas
xor
push
int3
movsb
inc
mov
sti
sahf
sbb
jl
lods
cmc
ljmp
cli
xchg
repz
sti
mov
cltd
lods
bound
sti
mov
mov
xchg
inc
pop
je
mov
cwtl
inc
and
push
jp
stos
jp
inc
dec
push
adc
dec
push
sub
cli
dec
cltd
push
mov
sbb
in
idiv
xor
pushf
jg
sbb
call
test
scas
xor
movl
jle
stc
lahf
out
add
clc
jecxz
popa
and
xchg
inc
push
fadds
mov
int
add
into
add
pop
or
test
xchg
xorl
pop
outsb
roll
in
pop
repz
out
dec
sub
pusha
add
sti
pusha
push
cmp
lahf
out
imul
aad
adc
inc
cmp
insl
imul
arpl
mov
push
push
adc
ficompl
jbe
ds
jmp
mov
and
push
adc
sbb
pop
incb
pushf
inc
and
loopne
sbb
jb
ss
mov
out
jnp
int3
out
in
nop
popa
inc
jno
adc
les
outsl
out
pop
jp
ja
ljmp
jp
mov
inc
jae
lds
pop
push
repz
sub
xchg
popa
sbb
es
sti
int3
cld
aas
scas
cmp
add
jns
movsl
pop
xchg
adc
jne
sub
int3
adc
dec
cmp
call
xchg
pop
pop
fildl
adc
bound
stos
xor
leave
std
xlat
iret
das
lds
in
mov
add
cli
out
call
popa
mov
sar
sbb
mov
fdiv
jle
mov
sti
fwait
addb
adc
sub
dec
or
jnp
aam
dec
fcomi
lea
cmpsl
ret
push
sub
dec
fildl
es
push
test
and
mov
outsb
mov
and
lcall
ret
test
pop
cs
sbb
mov
scas
pop
in
jl
dec
dec
mov
lock
pop
cld
xor
add
inc
cwtl
popf
loope
flds
inc
push
fisttps
ss
dec
aad
adc
or
or
sbb
fdivr
cld
movsb
or
rorl
mov
xchg
clc
jae
incl
std
mov
or
adc
ffree
mov
aad
ror
icebp
mov
loopne
adc
ret
sub
inc
sub
add
and
mov
or
fxch
fisubs
addr16
mov
xlat
mov
lret
das
pop
mov
fcomps
and
jnp
cmp
je
mov
xor
mov
xor
sub
cmp
mov
xchg
daa
jno
fiaddl
xor
loope
dec
loope
insl
data16
sub
jno
cmp
xor
fmul
push
mov
cmpl
dec
ljmp
data16
out
in
mov
mov
ds
lcall
dec
mov
dec
repnz
xchg
sti
loope
xor
push
fcoml
mov
mov
scas
test
fmull
fstpl
cli
mov
mov
pop
fnstsw
inc
jo
jp
shrl
dec
mov
fstl
sarl
fisttps
insl
dec
jecxz
push
shlb
mov
or
mov
or
rol
test
add
push
push
out
in
stos
addr16
inc
sbb
inc
daa
nop
sbb
std
in
add
pop
inc
nop
push
inc
mov
inc
sub
loopne
lret
scas
in
out
cmp
jp
testb
xor
or
sub
cmp
lds
mov
add
sub
into
pop
insb
sbb
mov
ljmp
sub
mov
push
movsl
sub
sub
sbb
sub
ret
or
call
pop
mov
mov
push
xchg
cmpsb
repz
inc
jb
addr16
xlat
or
add
mov
push
mov
or
sbb
add
xchg
mov
imul
rorb
imul
cmpsl
inc
sbb
jmp
cld
inc
pusha
xor
cmp
or
dec
gs
mull
xor
push
push
enter
push
push
and
sub
out
cmp
mov
mov
lret
outsl
call
mov
lret
adc
xchg
pop
sub
inc
test
push
lods
sub
pop
imul
rcrb
or
dec
movsb
std
inc
mov
xchg
or
enter
xchg
pushf
add
call
inc
mov
nop
inc
push
sub
orl
jecxz
adc
decb
stc
jnp
xchg
imul
sub
mov
xchg
hlt
sbb
lret
mov
jmp
dec
pop
mov
pop
xchg
int
ds
dec
out
aad
or
mov
loop
add
ds
jmp
sub
and
repz
jae
mov
aad
push
mov
out
lcall
pop
enter
cmpsb
je
mov
movl
and
scas
movsl
pop
rorb
and
pop
cmp
cld
insl
sub
fisubrs
negl
jmp
inc
repz
sbb
outsl
pop
icebp
subl
pop
jge
xchg
mov
and
test
jbe
shll
xchg
rolb
mov
int
cmp
dec
adc
pop
incb
rol
imul
mov
lret
xor
xchg
mov
in
cwtl
out
mov
lods
add
xchg
icebp
out
or
adc
mov
lock
test
add
data16
xlat
lods
cmp
unpckhps
stos
dec
xor
and
mov
lock
and
sub
divb
jae
aaa
xchg
mov
addl
les
xchg
mov
movsb
jbe
stos
arpl
gs
ret
lods
xchg
mov
dec
cli
loop
clc
sub
mov
pop
adc
sub
sub
push
pop
sbb
scas
and
ds
nop
push
fwait
jb
or
cld
test
cwtl
inc
jmp
scas
sub
aam
xchg
imul
iret
into
sti
cmp
or
xor
fistl
jle
fdivrs
fwait
push
popf
dec
cmp
add
xchg
add
pop
and
addb
lods
shll
jecxz
repnz
mov
bound
icebp
mov
pusha
push
sti
stos
cmp
leave
pop
sbb
scas
js
enter
jmp
mov
xchg
xlat
test
int3
mov
mov
inc
fsubp
enter
pop
test
icebp
jno
std
jge
mov
jnp
inc
sub
inc
iret
jmp
dec
rcrb
adcb
sbb
sahf
sar
push
mov
stos
and
ss
sbb
loopne
push
popf
pop
icebp
and
cmp
sbb
sti
xor
lods
jmp
jl
loope
clc
clc
std
adc
stos
or
adc
call
filds
mov
mov
mov
sbb
sti
insl
mov
pop
shll
je
das
push
add
lret
lcall
fnstcw
pushf
in
xchg
mov
add
lret
mov
adc
daa
mov
fs
adc
fiadds
pushf
xor
add
ljmp
clc
fcom
test
cmpsl
bound
in
rcrb
fmuls
sub
ds
xlat
jbe
data16
and
pop
int3
or
xchg
push
adc
shl
and
out
and
or
lds
out
add
jmp
repz
cmp
push
leave
fdivrs
cmpsl
pop
idivb
out
pop
aas
cmp
sub
dec
mov
pop
sbb
mov
cmp
push
data16
lahf
ja
jnp
xchg
mov
dec
ja,pn
push
icebp
push
jno
fs
fs
dec
mov
cld
jne
add
xor
cmpsb
and
inc
pop
sarb
or
rcl
call
decb
jmp
bound
push
and
scas
mov
push
stos
pusha
and
mov
loope
mov
rorl
imul
lret
stc
loop
test
cli
push
lods
fwait
outsb
jmp
sarl
jno
dec
outsb
jl
adc
call
stos
adc
xchg
jnp
cmp
xchg
test
repnz
push
or
pusha
pushw
dec
jne
rcll
outsl
mov
out
sahf
xchg
cmp
mull
fisttps
xor
jmp
gs
js
rclb
adc
in
pop
scas
dec
jno
sbb
in
mov
lahf
jecxz
inc
jg
mov
cmp
jbe
test
or
dec
dec
or
mov
cmp
mov
outsb
jle
cli
jp
dec
sub
and
jg
push
subl
and
lret
xchg
xchg
and
loopne
cs
xchg
icebp
xchg
mov
cmp
adc
push
addr16
stc
pop
mov
push
iret
mov
outsb
sbb
mov
and
in
je
cltd
sahf
pushf
xor
mov
dec
mov
add
adcb
or
inc
dec
jb
pop
inc
aad
sbb
js
xchg
imul
xor
out
out
loope
jmp
rcr
push
mov
test
shll
pushf
int3
xor
or
cmpsb
mov
out
sti
cli
cs
push
mov
xchg
xor
add
mov
push
js
push
mov
push
cld
sub
pop
xor
mov
test
cmp
mov
fs
push
flds
mov
adc
fiadds
gs
push
pop
setns
jge
int3
add
xor
addl
xor
jl
add
cli
inc
jp
outsl
cmp
jl
loop
cmp
xorb
push
je
xchg
ljmp
je
das
push
mov
outsb
enter
cmc
int3
call
pop
or
inc
mov
popf
jbe
xor
xchg
mov
sbb
pop
insl
lods
cmpsb
lock
xchg
inc
lcall
mov
enter
jbe
and
inc
dec
mov
imul
pop
dec
and
rolb
mov
jno
sbb
aaa
or
and
insb
mov
jl
xor
and
aas
popf
scas
scas
ljmp
mov
xchg
les
cmp
sub
iret
push
inc
mov
aad
pop
pop
scas
popf
and
jle
arpl
loop
gs
add
loopne
flds
cs
or
jns
sub
shlb
sahf
ljmp
iret
mov
sbb
push
jb
or
add
test
dec
pop
push
or
or
sarl
xchg
cwtl
stc
mov
xorl
call
repnz
inc
and
js
and
adc
mov
sahf
call
push
fcomps
jecxz
xor
test
fwait
inc
outsl
andl
mov
test
mov
outsl
sar
pop
lea
cmp
outsl
mov
add
add
clc
push
mov
add
mov
push
fisubs
dec
mov
cmpsl
adc
cmp
jge
insl
add
jle
lea
sbb
fldenv
adc
insl
xor
mov
lahf
dec
jg
cmp
adc
mov
xor
mov
hlt
repnz
sbb
mov
imul
inc
in
loop
leave
pop
insl
sub
xor
out
js
add
in
ja
adc
jmp
or
and
aad
mov
arpl
xchg
adc
xchg
push
cmpsb
cmp
ja
mov
imul
or
mov
insl
daa
sbb
mov
adcb
lds
rclb
xchg
push
mov
mov
in
divl
loop
in
xor
jp
shll
jbe
sti
inc
hlt
repnz
fstps
xchg
inc
outsb
stc
dec
mov
fdiv
inc
shlb
in
fucomi
divl
dec
pop
sbb
inc
push
mov
or
loope
or
jae
push
pop
push
sub
shll
push
movsb
push
xor
xchg
jmp
mov
and
sbb
int
daa
fwait
sbb
addb
jmp
faddp
out
sbb
cmc
mov
andl
cmp
pushf
lods
mov
rcll
cli
ficoms
sbb
mov
ret
imul
lods
scas
in
aad
gs
ret
or
shrb
movsb
call
mov
shrb
xchg
jg
cmp
xchg
add
ja
sub
push
adcl
cmp
lods
push
in
xchg
scas
mov
jle
ja
and
or
pop
adc
sub
nop
int
fadd
leave
inc
mov
jo
mov
mov
pop
and
shll
std
rolb
mov
cli
cmp
movsb
fidivrs
jmp
dec
scas
loopnew
adc
bound
xor
add
out
inc
mov
aam
adc
lds
aam
std
enter
or
sub
mov
jp
das
fistpll
aad
test
jmp
pop
jle
mov
mov
jl
fbld
int3
test
xchg
icebp
and
xchg
pusha
lret
std
les
and
mov
hlt
inc
popa
lret
ljmp
fmull
push
lret
add
es
xor
push
aad
popf
xchg
xchg
jg
sub
xchg
cwtl
daa
rolb
sbb
adc
cwtl
adc
sub
pop
movsl
loope
or
push
jb
push
imul
jo
lds
and
ja
sub
aam
out
adc
jmp
adcl
inc
mov
mov
imul
add
xor
or
aam
jmp
idiv
in
sbb
fisubs
test
jno
jns
es
inc
pop
je
repnz
jo
mov
or
push
aam
adc
jl
lret
fcmovne
lock
cmpsb
movb
fs
imul
mov
jle
sbb
fs
shlb
ds
xor
rolb
stos
faddl
popf
cwtl
lock
jmp
inc
adc
notb
dec
xor
loopne
outsb
icebp
push
movl
das
cmp
rcl
sub
insb
mov
xlat
test
fwait
adc
push
scas
aad
movsb
inc
sbb
xor
inc
popa
add
sti
adc
adc
ljmp
mov
fs
scas
adc
outsl
ljmp
inc
stos
jp
iret
pushf
shr
or
pop
push
and
cltd
mov
mov
pop
rorl
push
pop
js
inc
and
movsb
out
dec
dec
hlt
xor
lret
adc
add
rcl
sbb
jo
mov
sbb
in
jb
out
mov
inc
xchg
cli
sub
gs
aaa
mov
mov
mov
aad
out
ret
xchg
inc
jne
repz
mov
sub
sarl
jl
push
repz
jb
sub
xor
addr16
scas
xadd
pop
sub
cmpsl
cmpsl
shrl
mov
pop
aad
jns
lock
inc
testl
push
cs
aad
dec
mov
in
nop
mov
movsl
insb
cmc
jae
mov
test
mov
or
mov
mulb
int
jl
dec
int3
sub
je
das
addl
and
push
hlt
data16
push
outsb
leave
jg
jne
sbbb
or
fcmovne
lret
std
mov
jg
call
std
loope
scas
add
cmp
xchg
pop
mov
shlb
mov
stc
add
pop
xor
push
mov
jecxz
mov
sahf
out
jo
ja
and
push
lret
push
in
les
insl
jg
lcall
mov
lea
cmp
xor
mov
push
add
enter
mov
cmp
dec
adc
ret
dec
adc
xchg
jb
xchg
inc
pop
pop
cwtl
imul
sub
dec
fld1
mov
aad
xchg
sbb
test
adc
xchg
in
leave
mov
xchg
hlt
cmp
inc
pop
js
jg
xchg
pushf
sbb
push
dec
test
lock
pop
push
inc
mov
xchg
out
cmpsl
rorl
mov
dec
push
sbb
test
fldl
jl
mov
ret
sub
stc
xchg
mov
adc
inc
push
inc
push
data16
adc
ja
cld
xchg
adc
adc
or
pop
fldcw
inc
sub
shlb
notl
jmp
xchg
push
dec
adc
xchg
dec
aaa
test
push
jmp
bound
stos
imul
or
mov
ficoms
add
shlb
mov
pop
push
push
std
fstp
stos
or
pop
jge
mov
add
subb
ficompl
xor
add
cmp
dec
add
and
jmp
rcrl
add
jecxz
inc
or
add
mov
sub
push
dec
mov
pop
add
bound
add
xor
mov
mov
adc
jns
fwait
mov
cld
lahf
inc
inc
dec
ss
stos
jb
ds
icebp
jbe
mov
int3
inc
das
cmp
mov
adc
mov
fiaddl
xor
push
subb
or
sbb
adc
inc
adc
nop
ficompl
sbb
mov
jnp
out
sbb
mov
into
out
jno
shl
adc
push
cmp
dec
push
inc
add
mov
sbbl
mov
mov
adc
push
adc
loopne
sbb
inc
mov
cmp
mov
push
mov
arpl
fimuls
sub
jle
test
movsb
mov
lods
and
jns
daa
sub
cwtl
or
lds
mov
mov
arpl
ret
lods
adc
divb
repz
xchg
imul
inc
jl
adc
outsb
adc
and
xchg
sub
ss
fisttpl
enter
adc
push
test
cli
dec
pop
xchg
inc
mov
int
addr16
adc
jmp
movsl
sahf
sbb
out
je
cmpsb
dec
neg
outsb
addl
es
sub
sub
std
in
out
jns
xchg
jl
cmp
jb
cmp
mov
nop
outsb
les
sub
mov
push
ds
stos
popa
mov
inc
ja
push
imul
jo
cli
dec
pop
mov
and
push
ret
mov
fsubs
imul
out
fadds
out
pushf
loope
sahf
pop
aas
lret
pop
jb
lret
push
dec
dec
pop
popf
dec
hlt
dec
bound
push
jo
imul
mov
mov
mov
loopne
add
push
rcrl
or
cvtpi2ps
enter
jb
mov
jmp
pop
int3
xchg
mov
fistpl
insb
push
test
cli
test
lret
lcall
addr16
mov
enter
add
mov
rcl
outsb
outsl
xchg
repnz
jnp
add
sub
gs
pop
and
push
popf
push
xlat
dec
pop
pop
dec
jge
aad
shlb
and
decl
shlb
test
out
repnz
cmp
xchg
pop
out
sbb
loopne
adcl
aas
and
stos
jge
push
mov
pop
cmp
js
das
and
mov
xor
pushf
push
repnz
cmpsl
lea
push
fists
and
int3
push
aad
imul
lock
mov
addb
popf
jmp
jg
sbb
bound
mov
movsb
ret
jne
out
xor
stc
or
mov
call
xor
jns
pusha
push
lock
push
xchg
xchg
push
pop
add
aad
dec
call
xor
cmp
clc
int
cmc
lock
aad
aam
sbb
test
scas
jecxz,pn
sbb
dec
loope
sub
add
xchg
or
fs
sbb
outsb
sbb
jno
push
sbb
test
in
adc
fnstcw
mov
adc
mov
xchg
adc
add
push
movsl
pop
cmp
xchg
cmc
jno
mulb
mov
js
jbe
push
sti
pushf
stc
mov
cwtl
rclb
cli
in
daa
mov
mov
sti
ja
sahf
xor
repnz
andl
repnz
xchg
fnsave
adc
xor
push
daa
mov
out
rol
sbb
xchg
push
int3
pop
sbb
fwait
pop
pop
in
repz
inc
xorl
pop
add
push
jmp
push
ljmp
jle
fcoms
push
call
pop
push
sub
clc
xchg
js
lea
pop
lock
sub
push
xchg
mov
xchg
fdiv
lret
cmp
lcall
push
pusha
shrl
mov
fucomp
lods
andb
cmp
sbbb
cmp
xchg
mov
push
xor
jnp
adc
stos
xor
cmpsl
pop
scas
je
out
movsl
and
loope
sbb
stos
bound
cmp
gs
xor
xor
pop
pusha
filds
xchg
sti
sti
fwait
bound
lods
loope
iret
push
adc
in
lcall
fs
insb
pop
cwtl
repz
sbb
inc
stos
and
sbb
cltd
jecxz
lods
sbb
shrl
sbb
aam
mov
dec
lea
loopne
cltd
xchg
xchg
in
cmp
mov
sub
inc
shrl
mov
or
or
imul
or
mov
insb
movsl
sti
les
pop
adc
fucomp
dec
jbe
fiaddl
inc
mov
test
lret
in
push
mov
add
sub
mov
jp
test
push
and
mov
jno
test
dec
xchg
loope
inc
inc
sbb
loopne
jl
sti
mov
inc
and
or
xor
jle
pop
xor
test
sub
cmc
dec
pop
or
add
pop
cmp
pop
pusha
lods
xor
push
iret
pop
sbb
mov
stos
pop
hlt
les
xchg
xchg
push
or
iret
xchg
jp
into
imul
add
cmpsl
jb
je
mov
push
or
sbb
jb
xchg
nop
push
cmp
mov
fidivrl
sbb
ret
adc
sbb
and
subl
fisttpll
mov
sub
loop
push
xchg
imul
faddl
notl
bnd
nop
adc
and
xlat
xlat
aad
sbb
push
out
insl
xchg
inc
mov
rcrl
push
xor
repz
insl
in
jae
pop
test
repz
mov
fs
mov
icebp
sahf
push
jo
push
leave
jle
insl
movsb
jno
fistps
push
lcall
pop
cmp
mov
sub
inc
mov
dec
add
testb
aas
and
cwtl
mov
subl
mov
mov
jle
clc
lods
xor
push
adc
leave
rolb
or
fs
lret
mov
cmp
adc
sahf
mov
subb
in
js
mov
sbb
lret
imull
mov
push
dec
cmc
into
push
xor
pop
add
pop
add
cli
pop
lcall
mov
out
sbb
sbb
sbb
xor
lds
mov
stos
or
sbb
out
loop
or
add
daa
mov
ss
scas
xor
in
mov
movsb
ljmp
and
pop
sbb
mov
dec
mov
scas
imul
int3
loope
daa
pushf
mov
in
adc
pusha
and
call
stc
movsl
jbe
pop
inc
xor
xchg
push
xlat
insb
insb
jecxz
ret
sub
into
mov
les
test
out
xchg
add
testb
je
test
or
inc
inc
lock
movsl
mov
add
cmpsl
pop
xor
dec
repnz
and
jae
lea
adc
jne
and
pop
aam
xor
lret
cs
pop
bound
xchg
negl
xchg
decl
mov
sbb
mov
mov
sub
test
ljmp
out
pop
adc
repz
add
jl
pop
push
lock
sbb
lret
xor
bound
test
fidivrs
xchg
jne
push
jnp
jns
scas
xor
mov
cmp
push
adc
xor
dec
push
inc
ror
rol
cmp
pushf
sbb
push
outsl
adc
shl
into
cld
pop
fcomp
mov
cmp
jg
inc
adc
shrl
cmpsb
lcall
mov
cmp
int
and
xor
jae
xlat
xor
imul
testb
mov
mov
mov
jmp
testb
lea
sbb
jle
xor
mulb
jecxz
inc
loope
sbb
jbe
mov
mov
daa
xor
aad
mov
inc
imul
push
in
pop
pop
testb
and
cmp
xorb
jae
xor
test
cmpsl
or
adc
mov
dec
push
mov
cwtl
sub
mov
stos
adc
mov
add
adcb
jle
sub
dec
fcomps
push
sub
aam
cmp
push
stos
mov
cltd
inc
jmp
xchg
lret
popf
in
mov
test
subl
aaa
push
jge
cmpsl
pop
mov
xlat
mov
jb
pop
dec
lcall
inc
and
stos
test
into
andl
adc
pop
fsubp
push
shl
les
push
out
out
cs
push
cltd
inc
rorb
insb
in
arpl
push
mov
adc
pop
mov
mov
mov
cwtl
ljmp
adc
fcoml
xchg
or
adc
mov
jl
xor
pop
in
pushw
shll
out
js
lahf
push
loope
jg,pn
stos
sbb
sub
sbb
repnz
ljmp
and
and
data16
outsl
push
out
movsb
mov
into
inc
aam
push
push
jbe
and
icebp
and
fnstcw
push
inc
sub
push
and
push
cld
out
cmp
out
sbb
dec
sahf
xor
add
mov
mov
ret
or
stc
xchg
cmp
mov
xor
push
mov
jl
mov
int
dec
lods
fwait
dec
int3
das
orl
fbld
scas
push
test
pop
scas
xchg
inc
xchg
sub
andl
les
mov
mov
movsb
push
pop
lahf
int
xchg
ret
push
call
push
leave
jo
in
hlt
dec
ss
add
xor
xchg
add
fwait
push
cmp
inc
imul
and
cmp
and
and
cmp
inc
insb
xchg
or
cmp
or
cltd
jg,pt
xchg
out
push
push
movsb
xchg
sub
push
sub
add
rcll
cmp
lock
xchg
out
cmp
jno
loop
fs
lods
fs
adcb
xlat
jecxz
rolb
ja
and
rcrb
hlt
dec
xchg
je
mov
push
loope
adc
rolb
xchg
pop
jo
popa
std
out
and
xchg
andb
sarb
scas
jp,pn
dec
cmpsb
and
jae
out
xchg
jns
jmp
jl
pop
insb
fs
xchg
shl
je
mov
movsb
or
mov
sbb
add
mov
clc
lret
aas
pop
pusha
into
pop
in
jo
jae
sbb
cltd
mov
stc
push
adc
mov
cmp
jae
lea
adc
jge
lock
push
lods
push
inc
movsl
out
xchg
adc
out
jns
jbe
xchg
incb
mov
pop
push
jns
dec
int
or
xchg
inc
sub
ret
pop
sub
test
fiaddl
mov
gs
cmp
sbb
jmp
insl
mov
and
sub
shl
cld
xchg
jns
dec
and
rcll
scas
jns
outsb
jecxz
sti
or
adc
xorb
cmp
stos
lods
pushf
subl
pop
js
jg
outsb
inc
push
dec
pop
push
fwait
movsb
aad
ljmp
aam
dec
push
push
cmp
jne
pop
mov
xor
inc
mov
adc
cmp
pop
push
xchg
ljmp
adc
stos
stc
insb
ret
fldcw
xchg
jle
pop
add
push
mov
adc
mov
aas
or
pop
dec
inc
and
rcrb
sub
mov
mov
es
or
xchg
inc
js
inc
mov
sti
mov
add
xchg
push
mov
mov
mov
popa
mov
test
xchg
xchg
dec
mov
in
ljmp
popf
push
dec
or
scas
les
xlat
jae
dec
add
fs
sub
xchg
jg
and
hlt
call
mov
cmp
dec
mov
adc
ja
jle
js
push
pop
jp
jge
cmp
dec
jg
out
add
mov
push
cld
loopne
test
mov
lcall
mov
fadds
testb
push
lods
fwait
dec
fld
test
out
cltd
loop
call
test
test
cmp
in
lds
mov
cmpsl
fs
and
pop
aas
in
nop
mov
ljmp
jecxz
lock
adc
les
pop
out
loopne
mov
les
push
or
pop
and
xchg
pop
sub
fcmovnbe
int
rol
mov
insb
scas
or
mov
dec
imul
inc
iret
lret
daa
dec
add
pop
lds
iret
cmp
push
ret
rcl
xlat
sub
pop
shl
leave
cmpsb
dec
in
loope
add
cmpl
and
mov
cli
mov
mov
inc
imulb
sbb
outsb
test
mov
push
ss
jbe
xor
out
adc
jbe
inc
mull
dec
xlat
mov
cmp
cmp
adc
out
inc
rol
or
xchg
dec
mov
push
adc
inc
data16
dec
cmp
je
cli
imul
es
out
xchg
push
nop
fwait
jge
in
push
xor
pop
add
pop
addl
cmp
sub
ret
in
xchg
stos
mov
push
mov
add
mov
mov
aaa
test
stos
xor
push
lret
jo
fwait
in
movsl
mov
jo
push
mov
clc
lcall
inc
rcll
clc
cwtl
cmp
lds
mov
divl
xchg
test
imul
pop
jb
sbb
sub
out
fmul
fists
and
jae
jne
push
repnz
into
lret
fiaddl
adc
insb
push
pop
dec
lcall
cwtl
call
sub
repnz
fucomp
push
pop
stc
icebp
pop
cmp
ret
jmp
mov
lahf
imul
pop
into
imul
sbb
push
mov
sub
or
mov
adcl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
sbb
movzwl
sbb
mov
movb
and
lea
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jge
jmp
call
cmpl
jb
mov
xor
movl
inc
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
mov
push
orl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
addl
add
sbbl
movzwl
andl
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jb
mov
movl
movzwl
xor
add
movl
mov
mov
mov
inc
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
jmp
mov
xlat
and
mov
js
cli
adc
cld
inc
jl
inc
pop
addl
sub
jne
mov
leave
jae
sbb
mov
pop
pop
int3
jecxz
push
out
loope
mov
and
lcall
je
sub
push
out
inc
subb
fsubr
test
mov
mov
push
xchg
mov
scas
int3
mov
mov
dec
mov
jl
adcl
popf
lds
pop
cwtl
add
mov
push
cmpsl
fstpt
mov
xchg
sti
push
leave
xor
sti
mulb
sbb
xor
bound
jns
sub
scas
gs
shll
push
dec
sub
fidivrs
push
mov
or
mov
call
sbb
out
inc
aaa
insb
add
mov
push
mov
mov
jno
sub
outsb
les
inc
ffree
push
mov
xor
sbb
loop
lea
imul
lock
jbe
sbb
out
in
pushf
mov
mov
sbb
adc
roll
dec
ret
push
inc
xlat
das
add
lret
push
adc
adc
xchg
xchg
call
pushf
stos
dec
or
pop
lock
pop
ljmp
dec
xor
adc
adc
pusha
and
aas
movl
fsubp
insb
push
and
mov
icebp
jne
dec
sub
xor
jae
movsl
inc
not
cmp
jae
scas
xor
loope
ds
cmpsl
cs
pop
jecxz
mov
sub
mov
cmp
mov
ds
pusha
dec
mov
out
mov
rcll
mov
xor
xchg
or
mov
loope
adc
push
daa
cmp
jle
jecxz
jle
dec
pop
inc
popa
sub
cmpsl
test
loope
push
stos
outsb
neg
iret
mov
pop
xor
sub
ficomps
lret
test
test
pop
inc
pop
jb
loope
mov
add
popa
rorb
test
xchg
cli
dec
xor
jle
dec
or
mov
outsl
shrl
das
data16
stc
mov
and
or
mov
sbb
subb
in
push
sub
in
pop
insl
mov
sahf
test
ret
sbb
out
mov
es
f2xm1
test
mov
mov
or
je
xor
sbb
and
dec
push
jae
ret
mov
sti
pusha
repnz
das
icebp
xchg
jne
imul
push
push
adc
in
roll
movsb
inc
adc
cmp
rcrb
xchg
mov
nopl
cmp
aaa
scas
leave
jae
mov
dec
arpl
test
push
inc
xor
lock
mov
mov
test
mov
loop
xchg
mov
neg
mov
xor
call
sub
stos
cmc
lea
pminsw
inc
sub
sub
mov
test
and
arpl
xchg
cld
or
pop
push
lock
push
xchg
fnsetpm(287
or
test
add
push
stos
xor
xchg
push
aad
fmuls
mov
pop
fnstenv
loop
andl
movsb
cmc
shl
shrb
add
pop
ret
add
jl
or
xor
fs
lahf
or
add
xor
pop
ret
mov
dec
dec
rorb
rolb
xlat
jl
std
cmpsb
mov
add
or
jg
xor
std
push
mov
nop
es
adc
les
or
iret
xlat
jae
inc
clc
xchg
mov
and
imul
mulb
mov
movsl
and
icebp
push
hlt
add
mov
cltd
dec
imul
add
sti
xchg
mov
sbb
ret
push
gs
shll
adc
sar
sbb
js
or
mov
loop
sbb
call
aam
or
test
out
out
xchg
jbe
enter
lret
cmp
cwtl
cmp
add
imulb
hlt
and
xorb
dec
mov
in
add
and
leave
mov
jge
movsb
jl
and
enter
sub
cmp
lock
jecxz
stos
cmpsl
mov
dec
in
in
pusha
je
in
pop
inc
shl
insl
pop
jne
add
dec
and
data16
mov
pop
adc
fcomps
inc
push
mov
jp
mov
cs
fwait
cli
cmc
dec
mov
repnz
shll
mov
hlt
pop
pop
sti
or
test
mov
icebp
aam
loopne
mov
pop
xlat
jg
nop
flds
dec
pop
adc
mov
dec
mov
sub
pop
pop
xchg
fst
ds
insl
aam
sti
pop
sbb
fiaddl
mov
adcl
out
test
jne
and
fstps
xchg
movsl
or
dec
in
inc
and
push
sbb
xorb
mov
cmpl
xchg
push
jge
and
mov
out
jns
insl
dec
inc
adc
repnz
cmc
cs
roll
mov
test
fsubr
insb
mov
add
push
sti
pop
fisttpll
pop
pop
mov
out
cmc
sahf
bound
push
inc
jo
int3
test
loop
gs
inc
outsl
in
jo
or
ss
inc
es
loope
sbb
or
daa
std
xor
das
sub
mov
jge
push
cltd
sbb
push
add
stc
xor
dec
sbb
xchg
into
cmp
lret
pushf
sub
mov
xor
dec
xor
xor
test
mov
add
bound
push
sub
inc
pop
sub
jne
xchg
sub
or
add
dec
repnz
gs
movsb
stos
sbb
mov
mov
rcrl
test
fdivrs
sub
les
dec
int
push
lret
mov
iret
shlb
xchg
cmp
adc
xchg
stos
sub
lea
jno
ror
jg
packsswb
mov
jge
js
push
xor
fcomp
adc
cs
ljmp
add
leave
and
sbb
xor
movsl
push
xor
imul
fistpll
sub
test
aad
insl
jbe
mov
andb
out
mov
inc
loope
sub
decl
pushf
pushf
push
mov
lret
enter
mov
sbb
cmp
js
xorl
mov
ljmp
roll
sbb
cmp
lods
pop
dec
push
sbb
cmp
fldt
add
cwtl
insb
rcrl
jmp
lret
andl
inc
jle
scas
xor
sub
fs
mov
repz
fldl
mov
sbb
sahf
fs
mov
int
imul
lret
fadd
pop
adc
jns
xor
int
insb
add
rorl
mov
xchg
icebp
ss
adc
xor
rclb
xchg
xchg
pop
hlt
xlat
rorl
pop
mov
stos
inc
push
into
frstor
cwtl
mov
jecxz
aas
or
in
dec
push
push
dec
pop
in
xchg
enter
cwtl
ret
pop
aad
aad
lret
jmp
outsb
daa
lret
and
xor
xchg
add
xor
dec
ror
sti
enter
lea
mov
xchg
ret
mov
xchg
inc
pop
sbb
xchg
jnp
or
pusha
xchg
adc
xor
push
ss
mov
sti
dec
insl
dec
movsb
dec
sbb
mov
mov
cwtl
or
shrl
inc
fstl
xchg
and
je
scas
push
add
dec
push
xor
push
movsl
aas
add
stos
and
ret
or
int
xchg
dec
pop
movsl
outsb
mov
jp
jg
lret
adc
adc
xchg
lret
push
aas
fbld
mov
jle
and
mov
fmuls
adc
cmp
movb
add
inc
rcll
fcmovnb
adc
and
mov
push
js
sti
lock
xchg
push
inc
push
ljmp
leave
push
sbb
add
push
pop
inc
mov
xor
scas
mov
aad
lds
jns
mov
xorb
cmc
fiaddl
cmp
push
dec
movsl
orb
jb
pop
testb
mov
add
jnp
push
pop
mov
xchg
and
imul
lea
push
sub
fidivs
fimull
icebp
fcmovu
add
ds
stos
mov
popa
mov
mov
stc
inc
jle
sub
jge
sarl
mov
jnp
mov
cltd
das
or
add
hlt
ja
jbe
fsubl
cmc
pop
popa
test
pushf
ret
repz
sub
rclb
fwait
jmp
fidivrs
outsb
sub
aaa
and
jo
outsl
xchg
xchg
rcll
or
and
lock
cmp
movsb
sbb
xchg
rcrb
push
and
sahf
push
test
scas
imul
fisubs
pop
outsl
jbe
add
xor
mov
fwait
mov
aas
shl
sbb
iret
outsb
jle
je
sub
nop
scas
push
fldt
and
pop
in
sbb
sti
mov
mov
or
push
mov
or
push
iret
xor
in
lds
pop
rorb
enter
add
jae
rclb
sbb
test
inc
scas
push
dec
lret
in
push
pop
test
icebp
mov
mov
mov
or
popa
ret
inc
loope
adc
cmp
sbb
xlat
inc
push
xor
sbb
dec
sub
cld
mov
cmc
orl
dec
xor
xlat
push
adc
fldt
xlat
fwait
jmp
mov
mov
fcoms
jmp
jmp
mov
sub
iret
push
icebp
or
gs
and
cwtl
mov
lret
data16
adc
jae
adcb
es
mov
les
mov
and
test
ja
or
insl
in
scas
adc
adc
inc
jge
subb
addb
mov
jns
xor
icebp
clc
cmp
jmp
mov
sbb
inc
int3
jns,pt
push
dec
xor
js
ljmp
ds
aam
mov
into
sub
mov
cwtl
addr16
out
add
xor
sub
pop
subl
xchg
xor
cwtl
mov
mov
jb
pop
push
push
sbb
frstor
out
adc
add
leave
stc
shrl
jnp
push
and
jle
or
xor
cmpsl
loope
and
in
mov
lods
mov
xchg
or
inc
cli
mov
fidivrl
sti
xor
jbe
insb
imul
sbb
or
stos
lret
cmc
lret
mov
xor
pop
jmp
neg
cmp
pusha
inc
mov
out
xor
testb
out
xor
mov
sbb
fnstenv
ljmp
cli
es
pop
jbe
pop
ficoml
jecxz
sbb
xorl
repz
in
loop
movsl
mov
add
int3
jg
dec
mov
mov
pop
push
xchg
mov
out
mov
and
adc
pop
fdiv
adc
test
movsl
mov
stos
ret
movl
cltd
and
add
ret
jmp
or
sbb
xor
adc
cmp
rorb
imul
mov
movsb
lods
lods
xchg
xor
mov
cmp
mov
and
inc
les
dec
xchg
pop
aam
mov
push
negb
cmpsl
mov
sbb
xor
inc
insl
xor
adc
mov
outsl
lcall
dec
aam
stc
call
push
daa
aad
popa
pop
adc
mov
push
fsubs
aam
jle
fwait
lcall
adc
jae
xlat
mov
insb
xchg
mov
cli
add
xchg
cmpsb
incb
ss
aam
ret
out
mov
sub
test
xchg
jne
mov
pop
push
arpl
sbbb
int
jg
sarl
jl
pop
mov
cmp
add
sbb
call
fstps
jne
adc
xchg
mov
scas
aaa
insb
nop
mov
push
out
out
mov
sti
jmp
add
icebp
lock
add
insb
cmp
pop
lods
adc
bound
dec
js
dec
stc
fdivl
jnp
aaa
sub
sahf
rcll
add
mov
ds
das
mov
shll
or
and
insb
inc
mov
repz
ret
jno
ret
jno
push
mov
or
scas
sub
pop
mov
es
dec
outsb
sahf
pusha
and
rcll
adc
and
rep
push
fucomp
inc
sarl
mov
dec
loope
in
and
cmp
out
popa
jecxz
nop
xor
mov
inc
and
or
mov
arpl
cs
inc
insb
das
adc
movl
and
sub
out
mov
inc
jb
xlat
dec
stc
pop
lret
mov
xchg
cmp
lret
popa
movsb
out
aaa
enter
repz
add
test
xor
or
push
imul
dec
jb
or
and
imul
push
imul
les
lds
imul
adcb
call
test
pop
mov
pushf
xor
mov
shr
sub
aaa
mov
scas
cmp
mov
int3
cmp
inc
xor
xor
les
and
xlat
sahf
int
xor
sub
mov
xchg
les
jmp
mov
shll
orl
gs
sbb
test
fwait
fs
pop
loop
push
mov
sbb
mov
repnz
mov
sub
fcmovnbe
arpl
mov
mov
das
inc
test
cld
lea
pop
cmp
rorb
mov
xchg
dec
mov
insl
mov
mov
lock
scas
push
stc
test
push
cmp
or
call
pushf
stos
mov
mov
xor
dec
ljmp
push
push
pop
ja
push
jns
mov
sbb
push
fistps
jge
push
or
sbb
jns
mov
stc
aaa
jmp
fwait
xchg
jecxz
jl
mov
mov
xor
mov
xor
push
xchg
jl
inc
fsubrp
push
inc
jne
in
mov
dec
aad
rolb
mov
xchg
int3
or
push
push
iret
cmpsb
jmp
fcoml
into
dec
adc
orb
push
mov
hlt
loope
and
xchg
icebp
xor
sub
or
pmulhuw
and
inc
mov
sub
popf
jne
in
xor
mov
nop
mov
cmpsb
dec
xor
xchg
mov
test
push
lea
sbb
loope
insl
add
adc
mov
jbe
jl
mov
lret
push
or
adc
fiaddl
sti
jp
icebp
sub
add
in
decl
fimuls
xlat
jno
cmp
mov
cmpsl
shll
repz
xor
pop
push
sub
daa
nop
mov
lret
vsqrtps
and
xor
mov
js
push
push
leave
aas
add
ret
inc
jno
bound
adc
xor
cmp
sub
xchg
stos
lahf
push
mov
stos
mov
add
add
jbe
in
push
outsl
xchg
movsl
mov
lret
xor
sub
vpaddsw
popl
mov
cmpsl
iret
or
pushf
insl
in
inc
loope
lret
loopne
mov
pop
mov
inc
pushf
jae
jp
test
fildl
xchg
adc
xor
mov
mov
inc
scas
sub
and
test
test
cmp
push
pop
pop
jecxz
test
and
aas
mov
fsin
stos
imul
fstpt
jle
sub
push
mov
push
stos
outsb
cmc
sbb
out
adc
xor
and
js
loope
cmpsl
xchg
push
mov
jmp
mov
sbb
clc
scas
sahf
movsl
jecxz
and
mov
lds
or
insl
ss
mov
je
inc
cmp
jmp
std
aaa
movsb
inc
dec
out
xchg
imul
cmpsl
add
adc
jl
cmp
cmpsl
cmp
sub
imul
in
add
mov
adc
js
rcrl
scas
push
les
lods
jne
mov
ffreep
dec
cmp
test
pop
js
lret
je
rcrb
sbb
loopne
rcrb
xor
push
xchg
lret
jae
insb
add
mov
stc
sub
pop
xor
hlt
das
icebp
inc
mov
push
out
loope
rcr
hlt
xor
inc
je
pop
fiaddl
push
sub
cmp
addr16
jns
xchg
fldenv
and
dec
jle
sbb
ljmp
adc
push
loopne
cmc
jne
add
outsb
mov
cmpsl
imul
jns
stos
loope
insb
pop
mov
and
mov
les
or
inc
pop
cmp
adc
mov
jno
mov
push
mov
repz
out
cs
sbb
sbb
rcrl
xor
bound
mov
push
repz
jl
loopne
scas
xchg
int3
rcll
enter
and
xchg
lods
aad
adcl
sbbb
xchg
ret
int
mov
int
mulb
pop
pop
notl
push
add
lds
lret
fs
daa
mov
add
int3
js
or
ja
cmc
inc
ror
adc
into
jg
dec
or
outsl
fldl2e
lods
dec
dec
cltd
out
or
lcall
notb
popa
js
loope
inc
jmp
push
inc
add
outsl
xchg
push
pop
stos
ljmp
addr16
lret
push
push
repz
jg
dec
jno
inc
addr16
xchg
inc
add
xchg
dec
ljmp
dec
sub
jl
xlat
adc
adc
and
lea
xor
lods
mov
pop
cmp
sarb
xor
inc
cmpsl
lret
inc
into
into
in
dec
xchg
out
sahf
repnz
cmp
shrb
mov
fisttpl
or
mov
lds
lret
adc
mov
cmpsb
popf
mov
or
xchg
push
repz
xor
out
testb
sti
out
inc
sahf
and
push
adc
add
add
lret
jmp
mov
pop
out
xchg
lea
xor
repz
cmp
xor
jmp
jecxz,pt
divb
xchg
outsb
or
and
in
pushl
and
test
jmp
mov
inc
lea
das
cmpb
push
pop
ret
les
sub
xor
aam
dec
mov
inc
push
sbb
out
lea
dec
into
iret
push
mov
cmp
sub
mov
stos
and
jmp
jle
push
xor
inc
cwtl
cli
mov
loop
and
sub
fisttpll
pop
jge
add
pop
xchg
subl
and
add
mov
add
or
in
ja
sbb
inc
addr16
stos
ds
or
sbb
clc
xchg
sub
push
and
or
push
xor
xchg
cltd
inc
pop
mov
inc
adc
call
cmpsl
push
in
dec
xlat
pop
push
dec
ja
shlb
or
int
pop
scas
inc
push
arpl
and
cwtl
xor
mov
jb
call
jbe
cs
jb
loopne
sub
shlb
sub
inc
or
cmp
hlt
lret
enter
sub
lock
pusha
clc
xor
mov
inc
xchg
daa
mov
jl
dec
mov
cld
push
dec
push
push
cmp
xchg
mov
pop
inc
jge
hlt
shll
xor
xchg
mov
testb
and
mov
fidivrl
addr16
lods
dec
inc
push
inc
xorl
xchg
xor
daa
stos
mov
es
push
mov
mov
sbb
in
bound
popf
int
adc
enter
or
jns
jb
insb
scas
lcall
inc
sarl
hlt
int
imul
add
in
sarb
fldenv
popf
or
sub
mov
repnz
jbe
pop
mov
ret
pop
mov
mov
fwait
and
repz
inc
test
stos
jno
sahf
in
clc
or
imul
mov
mov
lcall
sbb
cmp
nop
xchg
mov
jo
xchg
lods
insl
xlat
cmp
test
pushf
jnp
sbb
and
aas
jp
das
mov
cmc
mov
aad
jb
pop
xchg
lods
cmp
xlat
mov
sbbb
jecxz
scas
dec
or
sbb
les
push
pusha
leave
adc
shl
js
xchg
mov
xlat
sub
add
jmp
jne
das
cld
xchg
outsl
mov
clc
inc
repz
fsubrl
movsb
add
xchg
cmpsl
add
mov
and
enter
xchg
dec
and
lea
mov
lcall
sub
xchg
outsb
xchg
sti
jne
out
sbb
movsb
cli
dec
mov
or
pop
aad
push
rcrb
xchg
fyl2xp1
inc
mov
add
push
test
add
mov
rcl
push
ljmp
inc
shl
sub
add
or
push
mov
adcl
jbe
xor
fisttpll
mov
xor
data16
mov
inc
xchg
inc
mov
jnp
mov
jl
adc
xchg
xor
imull
inc
xor
and
mov
sti
ret
mov
dec
hlt
enter
aad
outsl
add
loope
mov
pop
xor
stos
int3
cmpsl
dec
cmpl
int
mov
push
shll
sbb
adc
xor
pusha
pop
pop
xlat
pusha
add
pop
sti
inc
js
add
bound
xchg
mov
mov
sub
mov
inc
jne
mov
fwait
daa
sub
xor
scas
dec
std
xor
jo
gs
dec
cmp
js
jne
sub
ret
or
push
mov
mov
lea
jns
test
jb
jns
pop
sbb
mov
jl
int
mov
jl
xor
movsb
lret
insb
jbe
loopne
pop
mov
pop
aad
int3
inc
fiadds
jg
jge
jge
or
jp
mov
push
enter
lds
data16
xchg
inc
cmp
push
cld
jne
fildl
xchg
imul
push
bound
ret
iret
push
jp
or
mov
ret
popf
xchg
test
into
mov
cmp
enter
mov
and
pop
fbstp
and
dec
mov
push
mov
mov
xor
mov
pop
sub
and
ret
cmp
mov
loopne
and
fimuls
pop
fnstenv
and
pop
sbb
xchg
and
in
mov
xor
mov
pop
xor
loope
mov
jo
imul
ljmp
mov
clc
pop
mull
lods
in
lret
ret
sti
push
mov
and
mov
mov
loop
mov
jg
lret
and
leave
js
hlt
add
or
cmp
xor
pop
int3
cmp
push
inc
push
mov
mov
add
mov
nop
rcrl
xchg
out
adc
sub
lock
in
mov
mov
sub
pop
sub
or
cmp
cmp
sub
cli
in
mov
imul
out
push
adc
scas
cwtl
mov
stos
xchg
insl
cmp
push
sbb
int3
mov
xchg
mov
ljmp
cltd
and
out
pmaddwd
mov
in
dec
testb
cmpsl
je
mov
sbb
incb
outsl
xchg
cmp
ljmp
sbb
outsb
dec
rorl
push
jl
cmc
jle
dec
test
into
xor
outsl
scas
clc
inc
jns
adc
fdivrp
ficompl
jge
xchg
jecxz
sub
hlt
jae
mov
mov
cmc
test
std
add
sbb
cmc
ss
vandps
addr16
xchg
lea
lock
pop
sub
add
popa
stc
pop
aam
mov
repnz
filds
adc
inc
stos
jg
into
movsl
mov
mov
sti
jp
cs
push
lock
call
loop
fcoms
dec
push
or
cmp
movsl
push
dec
outsl
pcmpeqw
push
xchg
cld
test
mov
push
xchg
out
mov
and
push
xchg
es
pop
scas
imul
into
add
dec
lods
aad
pushf
mov
push
push
int3
mov
scas
pusha
jns
cmp
fsubrl
push
pop
push
xor
ret
mov
cmp
in
mov
push
xor
stos
out
sub
in
dec
sbb
jae
in
aas
push
inc
test
xchg
or
push
inc
mov
test
gs
sbb
adc
repnz
cmp
mov
outsl
dec
jno
mov
ret
scas
mov
roll
decl
in
and
lock
xchg
nop
fbstp
dec
pop
sub
dec
cmp
addr16
outsb
aas
jmp
dec
ljmp
jo
clc
in
cs
imul
pop
jne
data16
iret
fists
insl
adc
jle
cmc
pop
push
mov
arpl
clc
sbb
cmpsb
xchg
outsb
cmpsl
fiaddl
xchg
mov
iret
test
out
pop
mov
or
xchg
mov
lock
mov
bound
or
out
fucomp
shrl
or
cwtl
bnd
or
mov
imul
add
sarl
ss
jb
lret
mov
push
fwait
stc
pop
sub
jo
adc
aad
ret
test
jbe
fwait
sub
addr16
data16
inc
sbb
data16
mov
jecxz
cld
jo
mov
sub
jmp
xor
pop
sbb
sahf
out
lock
dec
fmull
outsb
cmpsl
scas
or
stc
mov
pop
lcall
jle
or
sbbb
inc
mov
stos
fwait
popa
testb
lret
cvtps2pd
rorl
fcmove
cld
xchg
sbb
movsl
notb
test
lahf
repnz
push
pusha
out
loopne
rcr
in
inc
insb
push
fisttpl
cli
cmp
lcall
jge
int3
push
fcomps
insb
dec
jne
icebp
arpl
filds
and
out
lret
push
sbb
and
mov
ret
sbb
push
ja
push
sbb
sub
clc
adc
xchg
test
mov
pop
cmp
aaa
pop
pop
vmovdqu
inc
mov
int3
mov
call
pushf
ds
sahf
push
jle
pop
mov
cmp
and
cwtl
push
sub
fucomip
jg
mov
xor
frstor
inc
mov
lds
and
add
jg
dec
test
enter
popf
out
inc
cmp
pop
int3
mov
xchg
push
andb
mov
fmuls
xor
out
inc
fsincos
xlat
sbb
mov
mov
mov
xchg
pop
fs
xchg
dec
mov
int3
cmp
push
and
jp
mov
adc
shrl
dec
jbe
jmp
addb
pop
stos
repz
adc
mov
mov
fimull
xor
ret
sub
pop
sub
shll
and
fadds
push
xor
cli
insl
mov
shlb
ja
and
jbe
add
adc
lea
mov
add
push
jge
cli
fmull
cmpsb
or
jmp
clc
popf
sbb
lds
sbb
xor
dec
push
push
nop
dec
push
dec
or
and
adc
orl
or
add
into
test
notl
mov
push
push
or
into
push
idivl
pop
addr16
fstps
outsl
pop
inc
orb
movsl
aaa
aad
addr16
mov
mov
mov
mov
sbb
arpl
cld
pop
divb
push
push
xlat
and
insb
push
pop
jge
dec
sbb
mov
clc
arpl
daa
mov
jns
jae
xchg
aaa
dec
inc
adc
push
jmp
inc
jmp
inc
cwtl
das
sbb
in
adc
movl
add
shll
sarl
nop
shlb
mov
jo
test
shrl
mov
leave
loopne
cmc
subb
pop
cmpsl
js
scas
fsubs
fsubr
rcrl
lds
repnz
fwait
sub
pop
jecxz
sub
push
leave
dec
pop
mov
jns
sar
ljmp
int3
push
stos
stos
or
mov
out
mov
out
nop
adc
test
shlb
les
leave
dec
mov
fidivs
jno
or
add
add
jg
mov
xchg
push
mov
arpl
rcll
pushf
ja
xor
loop
lcall
stos
xorl
movsl
roll
jo
dec
mov
rorb
xchg
mov
mov
xor
push
adc
sub
xor
xabort
stos
sbb
or
dec
test
in
movsb
or
xorb
pop
push
das
arpl
jbe
sahf
les
add
pop
pushf
hlt
or
xor
xchg
test
into
dec
int
adcl
xchg
insb
add
movsb
lahf
outsb
clc
stos
outsb
jle
xor
inc
out
mov
mov
jnp
push
or
dec
ds
out
fnstcw
mov
pop
xlat
sti
pop
mov
test
inc
inc
sub
adc
outsl
push
add
jmp
dec
pop
dec
shrl
xchg
data16
pop
in
or
fcmovbe
and
mov
xor
out
scas
xor
or
rcrb
sub
cs
ficoms
inc
or
fs
pushf
push
scas
sti
cmp
leave
or
fwait
dec
push
fcom
outsl
fisubrl
insb
dec
mov
js
mov
jae
push
leave
pop
ss
out
pushf
adc
mov
dec
fwait
dec
mov
dec
pop
nop
pop
sub
dec
cmp
push
data16
iret
enter
inc
xor
inc
fmuls
push
xchg
lock
jmp
cmp
int
pop
xchg
nop
shrl
cmp
pop
testb
push
js
notb
mov
and
addr16
ret
push
test
mov
insb
sbb
sbb
or
xchg
adc
pop
mov
dec
mov
scas
test
out
aam
fwait
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
mov
xor
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
add
mov
mov
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
sub
sub
sub
sub
xor
adc
mov
adc
jmp
add
testb
and
cwtl
inc
mov
sbb
addl
orl
rcrl
outsb
lahf
pop
repnz
mov
jg
mov
scas
imul
xchg
and
loopne
mov
and
lods
imul
rorl
data16
int
adc
cs
jne
mov
inc
cmpsl
clc
add
adc
decb
sub
outsl
cmovg
fiadds
add
mov
lahf
lods
loope
pop
pop
lea
pop
xchg
fucomi
stc
jmp
aaa
cmpsb
mov
in
iret
sarb
loop
or
aad
gs
nop
mov
jnp
test
shr
in
jmp
pop
add
sub
aaa
add
in
xlat
addl
cli
pop
push
bound
push
add
push
cmp
movsb
inc
mov
int
jbe
cmpsl
jbe
xor
sti
xor
dec
lods
sahf
mov
xor
outsl
push
xchg
mov
test
stc
stos
decl
or
aas
cbtw
mov
pop
sub
loop
leave
push
imul
rep
mov
xchg
and
xchg
cltd
das
or
mov
mov
cltd
mov
xrelease
in
dec
out
aam
mov
out
xchg
sub
test
je
jp
add
xor
test
or
popa
out
repz
sub
xor
ret
jl
js
jecxz
fistpl
mov
sar
mov
lea
iret
xor
icebp
jae
dec
dec
cmovp
add
icebp
add
and
xor
add
push
sbb
mov
int3
inc
lcall
inc
mov
lret
mov
out
add
andl
mov
adc
adc
aad
xor
ss
stos
das
lret
je
nop
add
sub
xchg
data16
or
subl
jge
sbb
test
icebp
adc
mov
subl
out
sbb
push
jl
xchg
stos
int
mov
xchg
add
mov
ds
addr16
inc
outsb
xchg
push
xchg
addb
fmuls
pushf
mov
test
cmp
cli
or
imul
and
sub
loop
mov
cltd
outsl
fs
hlt
in
es
data16
insb
por
inc
add
mov
pop
adc
test
xor
cli
mov
dec
ret
pop
mov
data16
mov
filds
std
adc
jle
add
add
push
ror
push
es
daa
addr16
lret
mov
icebp
mov
dec
and
gs
test
es
clc
pop
pop
rcrb
in
jl
daa
imul
inc
scas
int3
adc
pop
hlt
jo
xchg
popa
jl
dec
sub
jb
dec
push
ds
and
inc
mov
fsubrs
ret
daa
xchg
and
sbb
sbb
sub
jnp
inc
enter
shlb
dec
mov
movsb
int
sub
mov
add
sahf
cmp
jg
jae
pop
jge
shrb
add
add
xchg
cmp
add
out
ret
push
aaa
mov
pop
ficompl
adcb
movsl
xor
mov
andb
imul
cmp
rol
js
mov
xlat
shrb
fsubs
fidivs
movsb
pusha
cmc
inc
xlat
cmc
push
cmp
add
icebp
xchg
movsb
mov
mov
pop
lcall
pop
inc
test
xchg
in
jno
loopne
fnstsw
je
in
cmp
pop
sahf
ljmp
data16
jno
rol
lret
mov
xor
or
aaa
inc
lea
movsl
ljmp
aad
xchg
xchg
jb
lcall
and
or
lahf
test
pop
stc
sbb
sub
jbe
fistps
pop
pop
bnd
adc
popf
push
mov
in
dec
cmp
xchg
out
out
cmp
pop
popf
nop
imul
push
inc
xchg
test
test
sarl
rcll
fsubrl
mov
imul
xor
xor
cmp
xlat
pop
inc
insl
cmc
std
addr16
adc
push
inc
repz
pop
and
shlb
lods
add
clc
cltd
stos
and
cmpsl
and
and
xchg
mov
ja
stc
dec
and
xchg
sbb
lea
mov
and
cltd
mov
les
cld
ret
push
mov
fs
add
stc
scas
pop
mov
out
and
mov
div
or
dec
add
outsl
repnz
mov
stos
mov
rcrb
cmpsb
pop
mov
xor
call
mov
leave
out
adc
inc
xlat
inc
cmp
sbb
movl
and
jecxz
pop
aaa
jns
movsl
jns
sbb
cmc
mov
and
and
or
mov
lahf
jno
adc
and
shrl
rclb
push
and
xchg
cwtl
xor
add
inc
mov
sub
out
idivl
xchg
xor
xor
cld
jnp
mov
daa
test
cmp
push
and
add
ret
push
icebp
pop
pop
ret
iret
or
in
sub
out
ret
negb
xlat
push
sti
imul
in
test
imul
out
mov
xchg
in
xchg
loop
xor
ret
aas
and
dec
fcompl
into
inc
and
gs
mov
dec
push
pop
cmp
xchg
rolb
mov
pop
lea
xorl
add
add
jmp
mov
pop
sahf
stos
js
test
cmpsb
ret
in
shll
dec
adc
lea
xchg
ficoms
fnstenv
pop
mov
xor
cmp
stos
orb
pop
xchg
push
iret
xchg
sub
lods
pop
test
cmc
and
cmpsb
sahf
mov
lods
adcb
xchg
js
aad
pusha
int3
and
xchg
leave
pusha
xor
test
mov
dec
into
sub
scas
mov
mov
mov
cmpl
dec
mov
or
jl
bound
push
jne
movsb
and
adc
es
mov
stc
test
lock
inc
scas
pop
or
xchg
ret
js
jle
aam
mov
inc
out
fucomp
push
stc
push
dec
mov
jnp
int3
mov
sub
sahf
or
adc
jae
xchg
cs
jp
inc
push
xchg
js
gs
sub
jl
and
push
adc
xor
sub
fwait
push
outsl
xchg
add
adc
cmpsl
call
jns
imul
leave
mov
xor
filds
pop
lods
and
iret
and
hlt
fistpl
inc
jo
out
mov
sbb
cmpsb
fcoms
mov
and
cmp
inc
shll
mov
mov
xor
jo
lret
and
xor
push
adc
andl
mov
std
mov
cmp
sar
or
adc
xchg
push
test
lcall
fldt
mov
xlat
dec
stos
xor
je
sbb
lods
cmp
movsb
scas
pop
sti
outsb
cwtl
fistps
and
in
lret
push
adcl
int
lods
rorb
mov
fwait
rcll
adc
adcl
daa
outsb
inc
xor
in
xchg
jecxz
sub
cmc
mov
jp
or
fwait
ljmp
rcr
push
repz
fwait
lcall
pushf
jno
mov
jno
xchg
insb
jle
mov
loope
fbstp
add
xor
ds
leave
add
imul
xchg
orl
or
das
loop
mov
add
add
xchg
cmp
adc
data16
addr16
jbe
insl
push
lahf
lret
jb
insl
lock
shrb
rcrb
adc
sahf
loope
lock
addr16
fisubs
or
jnp
in
cmp
mov
xor
mov
pushf
jo
mov
cltd
aas
aad
test
push
aad
lahf
mov
scas
inc
add
repz
ret
lods
cmpsb
push
outsb
rcr
shl
adc
iret
adc
cmp
xchg
cltd
les
pop
outsl
fwait
and
ret
in
outsl
outsb
lret
lret
mov
dec
push
dec
jae
sub
dec
scas
test
sub
stos
test
jb
jge
pop
jmp
xchg
mov
or
enter
mov
push
lods
out
popf
leave
iret
push
push
mov
mov
fcmovne
insb
mov
cmpsl
inc
dec
stos
movsl
cwtl
aaa
mov
lahf
xor
lcall
lret
fsubs
push
gs
or
jecxz
sbb
movsb
and
sbb
cmp
cmp
dec
xchg
sti
pop
pop
jne
cmp
pop
dec
sub
push
push
in
mov
xchg
xor
or
or
mov
test
sub
mov
lea
out
loop
test
scas
mov
mov
pop
jecxz
pop
mov
addb
and
mov
lret
out
enter
push
jb
ss
xchg
or
or
int
ss
lock
and
decb
xor
mov
push
sub
xchg
lcall
movsb
mov
adc
outsb
inc
inc
pop
mov
nop
dec
sbb
scas
mov
push
stc
movsb
in
aad
fisubs
ljmp
arpl
mov
push
push
mov
into
arpl
sbbb
mov
mov
outsb
or
xor
call
outsb
inc
mov
jbe
lock
jb
jae
aas
sub
add
cmp
pusha
pop
xor
adc
popa
pop
push
sahf
dec
push
xor
pop
arpl
xlat
bound
sub
inc
in
aam
xor
daa
mov
lretw
push
sbb
mov
mov
pop
jmp
insl
pusha
daa
adc
jnp
repnz
add
jb
fldenv
xor
cmp
mov
sub
jnp
jp
lds
dec
lahf
lret
xchg
addl
pop
test
nop
mov
cmp
and
mov
outsl
mov
test
popa
out
or
add
hlt
dec
inc
cmc
mov
xor
loop
adc
pop
not
mov
mov
adc
adc
mov
std
leave
sub
pusha
dec
jecxz
adc
rclb
pushw
and
jbe
loope
insl
frstor
jg
dec
xchg
sti
rclb
das
shrl
jg
aad
cmpsl
pop
mov
lahf
mov
dec
push
xchg
dec
and
cld
xor
shlb
outsb
push
pushf
mov
push
cmpsb
into
or
js
sahf
add
fdivl
push
jmp
xor
mull
inc
jl
inc
ds
jae
bound
mov
inc
fstpt
xor
push
mov
shlb
xlat
push
icebp
mov
add
jecxz
popa
test
pusha
sbb
and
mov
cs
test
push
jae
hlt
aaa
insb
sbb
jns
xchg
jnp
dec
mov
insl
inc
outsl
xor
jge
insb
fucomp
cmp
adc
mov
insb
repnz
movsl
jge
jbe
ja
inc
pop
jbe
fstpl
sub
scas
push
aad
lret
cmp
or
pop
sub
cmp
mov
jecxz
cmpsb
sub
adc
clc
add
dec
fwait
or
sahf
stos
sbb
out
lret
pop
jge
mov
mov
scas
sbb
rolb
mov
outsl
faddl
push
outsl
mov
sbbl
iret
or
int
sbb
mov
push
shll
call
pop
xchg
pop
xchg
and
add
dec
call
cs
mov
mov
push
sbb
add
add
ss
je
pop
mov
mov
pop
jecxz
imul
jmp
shll
aad
mov
jno,pt
cmc
leave
les
inc
dec
stos
push
adc
sub
xchg
cmc
ficompl
xchg
push
add
cmc
shrb
seto
inc
sub
dec
cltd
inc
fstpl
and
add
sbb
enter
cmp
add
cmp
mov
rclb
lods
fcomps
xchg
ret
orb
icebp
aad
xor
movsb
in
mov
xchg
hlt
int3
outsb
js
mov
mov
mov
jns
mov
adc
xor
movsb
out
xchg
lea
xor
repnz
insl
jbe
cmpsb
adc
test
sbb
stc
lret
jecxz
adc
pop
std
movsb
shr
xor
cmp
notb
inc
mov
cmp
and
sahf
fwait
arpl
arpl
jg
test
fdivl
test
pop
das
rolb
cmp
repnz
mov
push
xor
outsb
xchg
and
pop
bnd
ret
nopl
pop
xchg
mov
je
pop
pusha
cwtl
sub
stos
xor
xchg
popf
xor
ljmp
pop
pop
mov
inc
or
adc
xchg
mov
dec
das
les
cmc
mov
inc
mov
rcrb
in
js
fiaddl
fstpt
iret
jmp
les
xor
and
fwait
test
and
pop
aad
je
mov
repnz
mov
and
inc
adc
xor
push
push
repz
insb
outsb
lahf
repz
loop
xor
lea
pop
out
jp
xchg
push
cmp
pusha
roll
xor
lahf
into
aas
add
rcrl
insl
int
xchg
mov
cmp
inc
stc
mov
shlb
ja
mov
movb
das
je
fs
cmp
scas
pop
or
fdivrs
out
adc
shlb
popf
xchg
sub
fistpll
roll
push
xchg
leave
cltd
lock
push
outsb
dec
pop
sbb
inc
jge
cmp
lret
add
jno
in
fcmovnb
add
or
cwtl
rcll
outsl
ficoms
sahf
mov
mov
pop
adc
xchg
in
repnz
sub
roll
subb
stos
leave
mov
jnp
xor
xchg
inc
fisubl
adc
orb
mov
fisubs
scas
es
pop
adc
adc
cs
insb
in
bound
cltd
mov
dec
mov
mov
das
add
pop
adc
jle
adc
adc
mov
mov
mov
daa
cmp
cmc
mov
push
jae
popl
xlat
mov
push
mov
push
cmpsl
push
adc
cmc
mov
mov
cmp
movsb
inc
push
sbbb
shll
jnp
rcr
loop
cmp
adc
push
in
jno
sub
lcall
adc
insl
pop
int
xchg
stc
out
xor
cmp
out
pop
repz
insl
jo
mov
cmc
popa
or
mov
add
es
loope
xor
cwtl
add
insb
shrb
mov
sbb
ds
jge
jbe
and
cmpsb
and
lret
jl
jmp
mov
stos
sbb
cs
movb
xchg
lahf
cmp
test
pusha
pop
insl
je
lea
sbb
push
add
jbe
mov
dec
push
iret
jno
arpl
pop
test
jmp
imul
mov
daa
adc
sbb
mov
mov
fisubs
cmp
inc
mov
bound
es
and
fwait
or
mov
pop
movsl
sar
adc
push
mov
pop
fistpll
mov
push
fs
add
xchg
push
sub
rolb
cmp
jmp
ret
jbe
out
xchg
pop
inc
sbb
cmp
fdivrs
es
dec
insb
pop
push
ds
loopne
mov
les
pushf
dec
rclb
movsl
aad
dec
mov
mov
jo
call
mov
cmp
rcrb
movsb
addr16
mov
aaa
sbb
inc
jl
add
dec
push
push
xchg
sbb
jmp
add
dec
je
sub
clc
std
add
xchg
rep
js
pop
mov
ja
mov
xor
mov
jle
mov
call
push
pop
andl
lcall
push
xchg
ss
mov
add
xor
xchg
in
dec
js
pop
xor
fidivrs
ret
imul
imul
sub
add
jle
push
push
jg,pn
cmp
pop
in
sub
cwtl
mov
push
cmp
outsl
lods
negl
inc
adc
stc
sarb
jno
inc
pop
addl
push
xor
aas
imul
jp
pop
inc
je
cmpl
sbbb
xchg
fwait
ret
dec
add
cmp
mov
dec
lods
jge
sub
loop
fistpl
aaa
fidivl
or
jo
repz
xchg
out
inc
repz
push
inc
xlat
jl
or
push
sbb
sub
inc
iret
repz
loope
mul
jecxz
pop
bound
cmc
cwtl
or
mul
or
mov
mov
loop
or
test
push
and
hlt
fisttps
xchg
in
repz
mov
sbb
adc
xor
add
xor
loopne
sbb
cld
adc
cli
stos
out
call
mov
cmpsb
push
leave
dec
mov
push
jo
sub
nop
sub
out
sbb
cmp
mov
fwait
sbb
push
out
mov
fs
sarl
xchg
mov
pop
movsl
mov
jno
adc
mov
in
test
or
std
mov
pushf
xchg
or
in
jb
je
sbb
out
notb
clc
test
mov
xchg
enter
dec
xor
jb
in
mov
inc
and
xchg
lret
pop
push
sub
pop
xchg
adc
cld
mov
push
lods
sti
ss
push
addr16
xchg
repnz
pushf
icebp
dec
loope
push
out
and
and
dec
cmp
add
and
push
mov
push
and
int
sahf
xchg
imul
cmp
jl
out
cmp
in
div
push
inc
into
mov
lods
mov
mov
lret
xchg
cs
fstpl
call
dec
push
jnp
or
arpl
cli
ret
inc
notl
and
jl
mov
pop
imull
enter
sub
xchg
stos
sbb
jp
lea
aad
out
jae
fsts
adc
mov
shlb
mov
cld
adc
rorl
mov
mov
sti
jp
adc
push
ret
pop
sbb
cvtps2pi
push
cmc
mov
pop
bound
scas
lock
fistpl
cmpsb
imul
xchg
pop
pop
xchg
mov
pop
pushf
repz
mov
cmp
cmp
aas
gs
jecxz
fldcw
ret
jb
mov
mov
jp
xchg
cmp
sub
sub
ret
sub
dec
fdivrs
push
repnz
sahf
leave
cmpl
sbb
push
ljmp
jb
push
and
lret
jae
sahf
jmp
dec
lret
mov
push
jae
xchg
test
lods
loopne
es
and
shlb
movsl
push
add
test
push
sbb
mov
cs
push
enter
inc
ja
mov
into
sbb
and
ret
fdivrs
jo
inc
inc
cli
cmp
sub
xchg
aaa
btc
add
popa
or
sti
jl
and
mov
adc
mov
clc
and
popa
lret
aam
iret
stos
aaa
jg
xor
js
into
inc
ja
adc
xchg
and
push
pushf
sahf
stc
push
xor
mov
dec
testb
xchg
data16
ljmp
sub
push
push
cmp
mov
mov
cli
rcl
ja
sahf
mov
and
flds
into
pop
sbb
adc
fiaddl
add
pminsw
sub
inc
pop
fistl
insl
cmp
xchg
and
in
lret
test
jle
lea
and
imulb
lahf
push
das
js
imul
sub
sbbb
loop
insb
xchg
pop
jmp
cs
repnz
xchg
cmpb
mov
out
lods
jl
mov
cmp
add
mov
add
or
mov
mov
testb
add
push
mov
xor
testb
sbb
outsl
adc
aaa
add
popf
sub
xlat
fnstenv
and
hlt
lods
jnp
push
cmp
or
dec
stos
sbb
mov
cmp
jle
or
jg
icebp
lock
add
dec
popa
repnz
inc
xchg
imul
ffreep
shll
and
insl
clc
scas
lcall
adc
xchg
out
cwtl
sti
rorb
cmpsb
mov
in
ja
gs
pop
ret
adc
pushf
pop
inc
inc
movsl
pop
rcl
movsl
pop
fildl
in
imul
and
and
mov
not
leave
cwtl
mov
aaa
mov
shrb
or
and
xlat
hlt
xchg
hlt
mov
or
jo
sbb
shrl
jae
gs
push
data16
xor
out
dec
sarl
inc
repnz
push
cli
and
xchg
push
mov
add
cmpsb
ja
dec
and
loop
out
pop
lahf
outsb
lret
dec
jae
mov
xor
sub
push
jae
insl
in
arpl
sub
lods
inc
push
mov
dec
enter
lahf
in
xchg
pop
test
addr16
adc
xchg
rclb
fbstp
pop
icebp
jp
sbb
ja
and
shll
mov
js
sub
cmpsl
dec
ret
fs
xchg
xor
sbb
adc
js
testl
cmc
lock
mov
ss
sbb
inc
add
mov
stc
stc
cmp
or
xchg
pop
push
mov
push
dec
int3
and
andl
stc
jg
movsl
lods
adc
add
faddl
mov
push
cmp
sbb
push
decl
enter
aas
movsl
jnp
mov
jg
cli
fsubrs
dec
out
push
add
inc
mov
cmp
testb
mov
mov
bound
ss
mov
dec
mov
test
mov
imul
cmp
mov
jecxz
xor
jns
into
enter
in
leave
imul
or
jle
lds
popf
push
xchg
imul
nop
inc
outsl
jns
cli
adc
fcomps
mov
clc
mov
inc
mov
add
mov
push
and
repz
in
add
sbbl
popf
mov
mov
pop
arpl
mov
push
add
adc
sub
sbb
jo
xchg
sbb
add
fmul
in
jno
mov
in
test
stos
cmp
jle
mov
mov
js
inc
jne
or
cmc
scas
pop
nop
push
dec
aam
test
iret
insl
cmp
addr16
scas
jno
sbb
xor
mov
adc
cmp
aam
xor
mov
mov
dec
sub
sbb
mov
ds
subl
mov
test
out
std
shrl
inc
sbb
sbb
scas
rorl
pop
out
push
ds
cmpsb
adc
mov
jbe
xchg
pop
test
push
cmp
pop
mov
mov
cmpsb
js
cli
loopne
sbbl
outsl
aam
mov
cltd
mov
xchg
xchg
fistl
inc
sti
rcrl
icebp
or
cs
pop
pop
mov
xchg
nop
sub
pop
push
stc
nop
jecxz
imul
inc
imull
cltd
rcll
aam
out
test
cmp
jg
outsl
pop
call
push
rclb
inc
dec
sub
int3
lahf
mov
std
call
jae
pop
fsubl
mov
push
jp
inc
rcrb
fistl
daa
ds
fwait
push
inc
cmp
ret
jns
dec
pop
dec
daa
xchg
mov
sub
mov
stos
jecxz
inc
enter
outsb
ds
mov
lods
icebp
out
sahf
add
pop
pop
or
push
je
test
mov
dec
dec
sub
dec
mov
mov
pop
mov
lret
pop
cmp
insl
sahf
push
in
mov
fcomp
xchg
mul
aas
sbb
fs
and
mulb
jecxz
pop
addr16
sub
shr
push
mov
pop
fnstsw
mov
lds
fs
xchg
jo
dec
or
jno
arpl
lods
adc
cmc
ja
cmpsb
loope
sub
ljmp
std
js
inc
jnp
mov
adc
mov
in
push
dec
mov
jne
mov
inc
lret
insl
test
and
mov
push
pop
push
lods
rorl
gs
push
testb
loopne
push
dec
inc
or
orb
lcall
ljmp
divb
aaa
jl
xchg
std
aas
sti
mov
mov
or
enter
or
sbb
jg
pop
mov
xchg
sbb
xchg
cmp
popf
sti
cmp
jecxz
pop
insl
jle
in
xor
mov
mov
shrb
scas
push
pop
and
jl
adc
shr
out
dec
add
inc
xchg
cs
jne
jge
lods
sbb
movsl
cmpb
out
cs
mov
pop
loope
xchg
mov
and
pop
add
cmp
xchg
test
aas
arpl
sbb
fistpll
mov
dec
sub
adc
xchg
js
add
push
or
xchg
and
jno
ljmp
pop
gs
repnz
inc
push
add
pushf
xchg
in
push
test
sbb
movsb
lahf
rcrb
or
sbb
push
sbb
mov
push
cmpsb
jle
mov
imul
jle
repnz
into
pushf
repz
mov
xchg
xor
pusha
insl
sbb
hlt
cmpsb
jmp
sbb
mov
inc
call
xorb
xchg
inc
add
insb
bound
addr16
xchg
xor
into
les
xlat
data16
mov
iret
mov
dec
cmpb
cmp
cmpsb
xchg
push
mov
lahf
mov
jb
sub
sbb
test
pop
outsb
mov
xor
sti
push
jmp
mov
pusha
aam
mov
sub
push
rcl
fimull
sub
outsl
nop
in
imull
adc
decl
aam
mov
mulb
sbb
loopne
xor
fcompl
mov
test
das
inc
cld
or
sahf
xchg
std
mov
pusha
xor
mov
jno
push
adc
in
jmp
sbb
xor
sbbb
ja
ret
ja
mov
daa
fs
xchg
rcrb
ljmp
inc
jnp
popf
cmp
cmpsb
push
and
xor
pop
sbb
sarl
xor
pushf
in
cmpsl
push
lret
popa
adc
inc
xchg
push
or
mov
andl
dec
fs
xor
adc
popl
dec
jp
or
dec
loop
std
jge
sarb
sbb
pop
scas
mov
lret
or
mov
adc
mov
mov
mov
mov
ret
sbb
and
mov
addr16
je
iret
cmpsl
xlat
lret
popf
xchg
or
mov
aaa
mov
add
or
js
cmp
inc
loopne
enter
mov
arpl
cwtl
gs
cmc
jg
cmpsb
imul
imul
jmp
daa
das
jo
xor
aad
dec
dec
or
push
shrb
fcoml
and
and
je
ljmp
add
jl
push
hlt
sub
inc
ror
out
mov
movsl
mov
andl
subl
es
bound
lods
mov
and
in
xchg
das
and
int3
lahf
popa
scas
scas
mov
add
call
sub
aaa
pop
jbe
jmp
popa
scas
cmp
std
add
lea
cmpsb
dec
add
mov
fnstsw
xchg
bound
xchg
cs
mov
xchg
dec
ret
rorb
shll
adc
call
movsb
aam
jmp
adc
fsts
inc
into
mov
cmp
adc
negb
clc
scas
int
xchg
fs
movl
movsl
or
fcompl
dec
push
cmp
int3
repz
sahf
jmp
dec
sub
xchg
loope
es
imul
mov
lods
stc
dec
inc
fucom
or
lret
adc
push
cmp
pop
gs
xor
mov
jge
jl
push
mov
rclb
xchg
mov
and
fdiv
lcall
cltd
sbb
or
repnz
aaa
adcl
and
gs
cwtl
fs
repnz
adc
aam
cld
jg
int
arpl
fs
inc
cmp
insb
arpl
or
add
sbb
inc
mov
mov
inc
dec
leave
xor
sub
int
cmpsb
nop
xchg
push
xor
sub
data16
adc
leave
lock
add
ljmp
jnp
imul
loopne
mov
push
mov
cmp
ja
negl
xchg
je
adc
pushf
fs
ret
xor
cmpl
xchg
pop
dec
flds
shrl
mov
popf
sbb
adc
cmp
dec
stos
pop
stc
jle
lea
loope
pushf
loop
in
lret
out
ds
and
pop
fsubl
addr16
pop
pop
dec
lea
mov
jne
mov
adc
sbb
push
mov
ret
dec
daa
push
clc
ja
mov
out
push
inc
divb
mov
test
pusha
fwait
or
cmp
bound
jecxz
fildl
add
xor
cmp
sahf
fs
mov
sub
add
push
sti
inc
leave
mov
sbb
adc
cld
js
sbb
and
jg
cmp
out
pop
xchg
mov
sti
outsb
fwait
cwtl
fwait
adcb
and
inc
mov
xorb
xor
mov
sbb
in
outsl
xchg
dec
cmpsl
icebp
test
cmpsb
adc
xor
mov
inc
push
pop
or
push
xchg
jo
mov
enter
lods
aam
cltd
sub
sbb
mov
mov
mov
ds
loop
sbb
push
sbb
push
js
push
pop
xor
cmp
cmp
loope
sbb
xchg
cmpsb
scas
mov
inc
push
push
icebp
cmp
aam
sub
mov
popa
xor
outsl
stos
rclb
mov
push
lret
push
popl
je
push
stos
scas
pop
dec
sub
cmp
add
mov
and
jl
test
in
add
cli
outsl
arpl
gs
jnp
pop
xchg
inc
or
les
sbb
mov
out
xchg
inc
adc
or
inc
jns
inc
out
mov
adc
dec
pop
addb
adc
fildll
pop
sarb
inc
out
fisttpl
cld
mov
rcrb
test
inc
movsb
ror
pop
xor
pop
push
lds
pusha
push
call
pop
inc
sbb
aad
in
data16
adc
inc
jg
icebp
mov
jne
outsb
ljmp
je
ds
icebp
xor
sbb
mov
ret
sbb
aas
mov
loop
ror
cwtl
nop
outsb
in
and
push
mov
jb
mov
sub
mov
subl
add
imul
sbb
mov
orl
mov
sub
mov
add
orl
or
mov
mov
sbb
mov
movzwl
sub
mov
xor
mov
adcl
add
sbbl
xor
or
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
jmp
xchg
jmp
addl
mov
jl
inc
pop
addl
xchg
cmc
outsl
push
pop
test
shll
fcompl
push
insb
popf
jmp
jle
or
jmp
pop
test
add
cmc
cwtl
fwait
movsb
aam
popa
sub
push
popa
push
repnz
fidivs
sub
mov
xlat
in
cmp
imul
std
fdivl
jno
lea
ficomps
enter
shrb
xor
rol
or
loope
sub
movsb
call
inc
sub
sbb
cmp
js
cwtl
and
push
sti
or
cmc
jle
pop
sbb
repnz
imul
pop
das
enter
mov
out
and
jecxz
mov
int3
xchg
cmp
mov
and
test
cmc
dec
js
popa
mov
push
push
enter
imul
lahf
mov
mov
scas
cmp
fisttpl
xchg
loop
adc
inc
movsb
fldt
dec
xchg
dec
inc
lods
jbe
fs
sub
push
fwait
sub
imul
xor
shlb
jb
outsb
dec
or
cmp
fwait
subb
or
movsb
sbb
cmp
fsubs
imul
addb
mov
cwtl
fucomp
cmp
xchg
ds
hlt
pop
scas
cwtl
shll
outsl
and
ficoms
mov
sub
sbb
pushf
jne
testb
shl
sub
dec
jg
push
scas
sti
cmp
out
les
loopne
jmp
std
and
cwtl
jp
sahf
push
aad
mov
sub
rolb
adc
pushf
xor
sbb
ficompl
lahf
mov
hlt
dec
sub
add
sahf
push
lahf
cmp
in
sti
punpckhbw
mov
mov
jb
lock
negb
xchg
ret
fnstcw
fstl
pusha
or
sbb
and
sbb
cmp
inc
mov
xchg
cmp
les
idivl
test
xchg
stc
add
icebp
push
sub
pop
push
aas
pushl
mov
shrb
shrl
lahf
fsubl
xchg
jmp
icebp
stc
test
jae
loopne
or
dec
mov
jbe
insl
outsb
stos
loopne
mov
jp
or
xchg
nop
stos
dec
lea
scas
inc
cmp
in
arpl
jle
inc
mov
and
sbb
mov
dec
aaa
xor
pop
out
into
insb
inc
cmp
jge
xchg
mov
dec
and
fucom
mov
push
mov
loopne
inc
mov
xorl
nop
lret
int3
jne
lcall
or
jle
mov
clc
xor
jmp
cmp
out
xlat
clc
rcll
jle
or
pop
inc
sbb
sub
icebp
lods
gs
icebp
stos
mov
iret
push
pop
mov
inc
je
pop
jbe
adc
jg
shll
jecxz
stos
aad
push
repnz
fbstp
rclb
stos
in
jbe
mov
adc
out
outsl
call
jmp
popw
xchg
mov
shll
xchg
cltd
jbe
mov
data16
insb
sbb
lahf
nop
xchg
mov
rcl
sbb
cmc
jmp
sbb
test
dec
xlat
adc
xor
xor
fstps
push
adc
sbb
out
dec
rolb
xchg
push
shll
aas
cmp
daa
xchg
push
icebp
mov
sbb
test
out
lds
xchg
stc
subb
sub
cmc
mov
fwait
stc
ljmp
mov
xchg
sbb
movsb
aaa
inc
mov
popa
aas
push
sub
adc
daa
xor
push
rclb
cmp
xor
mov
inc
and
cmp
adc
mov
in
lods
or
mov
push
jb
arpl
xlat
mov
xor
js
push
add
jb
jmp
loope
dec
loope
lret
pop
es
jge
jecxz
incb
inc
jbe
cmpsb
shll
ss
jecxz
sbb
jo
inc
mov
rorb
ds
out
sub
test
push
mov
test
push
stos
nop
jnp
insb
test
cmp
pop
cmp
inc
cmp
and
dec
sub
pusha
subb
outsl
rsqrtps
into
lods
hlt
aam
xor
dec
stos
push
sahf
mov
movsb
push
lock
es
jmp
dec
cld
add
pop
add
rorl
data16
mov
ljmp
jo
jmp
fcmovnbe
add
jae
fs
sbb
jge
pushf
mov
lret
mov
lods
cmp
push
mov
pushf
sarb
or
sub
fcoml
push
mov
fs
cmp
shl
or
push
xor
enter
pop
fmull
xor
test
hlt
cmpsb
push
dec
dec
mov
push
or
movsl
shlb
inc
ja
jl
cwtl
sub
es
mov
mov
test
mov
xor
out
push
clc
jl
loopne
mov
icebp
scas
sbb
add
dec
adc
ret
xchg
jne
js
xchg
or
aas
mov
mov
shrl
and
cli
test
xchg
dec
dec
jg
xlat
mov
jle
repz
in
jnp
stc
or
iret
fdivrs
rcrb
xchg
out
dec
lret
xchg
push
iret
xor
mov
sub
shll
xchg
and
mov
hlt
sub
and
out
sbb
cmpsb
call
jmp
jae
ficoml
mov
dec
inc
mov
aam
dec
stos
push
and
nop
cmp
inc
rcrb
insb
aad
jae
aad
pop
lods
xor
adc
call
mov
ja
outsl
push
add
or
fstpl
fs
fsts
fcomps
insl
hlt
ja
xor
jmp
xor
xchg
mov
jbe
cmp
or
orb
daa
xchg
scas
jo
sarb
mov
int3
popa
dec
push
loopne
and
stos
jp
jle
mov
popl
mov
adc
jle
int
dec
and
leave
push
cmp
mov
test
mov
outsl
jno
mov
pusha
test
adc
sbb
leave
cs
push
mov
out
xor
lock
mov
mov
dec
mov
jge
add
int3
inc
cmp
xor
dec
loop
hlt
mov
push
xchg
ret
popa
cmp
sti
xor
push
std
adc
cmpsl
ret
or
lods
sbb
gs
sub
daa
lods
mov
les
mov
iret
bound
pop
push
cld
pop
cmp
push
stos
sbb
push
dec
jl
push
mov
lds
or
inc
das
dec
insl
sub
add
popa
inc
sbb
scas
int
or
adc
cs
int
adc
stos
jnp
out
imul
xor
icebp
dec
xor
mov
inc
insl
adc
jmp
lds
adc
add
test
pop
sub
mov
jnp
test
cs
add
dec
and
adc
insb
fcompl
in
mov
popf
mov
jb
xchg
movsl
pop
fdivl
pop
andb
mov
pop
popf
mov
sahf
xor
std
xchg
pusha
lcall
cmp
fidivrl
in
sub
ljmp
mov
inc
sub
mov
test
dec
lret
clc
cmp
imul
and
enter
or
and
lea
mov
aas
push
loope
or
movsl
or
popf
mov
push
sub
jecxz
cli
int3
in
push
mov
imulb
mov
icebp
push
decl
mov
iret
jbe
vpsrlw
mov
mov
inc
jp
xor
js
stc
jp
push
stos
or
ret
and
aad
mov
xchg
pop
mov
ret
rorl
sbb
into
pusha
pop
sahf
in
fisttpll
fiadds
inc
out
inc
or
mov
add
inc
rorl
push
fnstsw
fs
icebp
inc
and
scas
mov
std
jb
sub
ret
insb
cmp
ss
and
cwtl
cltd
xchg
jp
loopne
imul
dec
ljmp
fldl
jmp
or
pusha
pop
andb
aad
arpl
int
icebp
pop
rcrl
lcall
inc
push
test
in
push
xlat
or
test
repz
insl
test
push
in
mov
arpl
int
sahf
adc
outsb
js
xchg
mov
insb
das
jle
sub
inc
adc
pop
test
ja
dec
jg
xchg
cmp
mov
jmp
lea
xchg
pop
mov
cwtl
shrl
lcall
in
add
test
fs
push
jg
jb
xchg
sbb
in
outsb
mov
inc
xchg
sahf
js
and
repz
pop
es
xor
add
scas
inc
and
aad
fisttpl
pop
cli
jno
xchg
adc
sbb
mov
dec
and
push
push
jmp
xor
add
mov
shlb
pop
loopne
lahf
std
jnp
ljmp
lret
loopne
cwtl
inc
enter
ds
adc
sbb
and
jb
mov
add
je
imul
es
jg
jg
ljmp
push
in
push
aad
inc
iret
xor
rorl
pop
xlat
xor
inc
pop
or
xchg
dec
sti
jl
in
jno
int
fidivl
cmp
out
pushl
lds
or
mov
add
mov
pop
or
jno
push
test
inc
rorl
in
mov
inc
inc
inc
flds
jecxz
push
mov
jecxz
lret
in
ljmp
cli
pushf
lcall
lcall
add
popa
imul
cld
mov
ret
jne
lahf
test
jecxz
repz
add
adc
cmp
insb
jge
test
or
inc
fcmovnb
ja,pn
push
lods
nop
dec
bound
mov
add
adc
std
or
lcall
ror
push
xchg
xor
in
fisttps
add
sub
dec
cwtl
or
xor
pop
fwait
and
int
or
sub
jb
out
jmp
mov
outsb
fs
mov
fcmovnu
cli
fmull
dec
sbb
and
adcl
icebp
add
insl
gs
xor
mov
icebp
xor
or
and
xchg
lock
mov
push
and
adc
hlt
sub
jns
push
ffree
pop
imul
cmp
adc
cmpsl
sub
mov
mov
mov
lds
push
jg
mov
and
adc
pop
rorl
push
aaa
mov
scas
mov
jecxz
cmc
sbb
push
mov
mov
dec
outsb
inc
xchg
stc
setae
inc
out
cmp
sub
mov
cmp
sbb
mov
scas
or
sub
daa
add
rcll
mov
bound
fs
xor
rclb
jg
adc
xchg
std
insb
and
sbb
jl
arpl
push
push
mov
adc
push
js
mov
es
mov
imul
pop
movb
mov
xchg
outsb
sub
test
mov
mov
adc
notb
push
jge
adc
mov
fwait
push
repnz
lods
pop
std
add
popa
mov
out
repz
into
nop
push
or
outsb
data16
shll
sub
push
fsts
test
jg
loope
and
mov
push
xchg
add
dec
ds
pop
popa
dec
or
pop
repz
test
bswap
imul
pop
lahf
xchg
lock
sbb
jbe
cmp
xchg
inc
sarb
cld
pop
cmp
jl
adc
iret
mov
movsl
jl
mov
aad
pop
mov
jle
dec
test
fists
sub
mov
pop
pop
and
fidivrs
push
insb
jns
jge
jp
ljmp
int
mov
outsb
clc
inc
inc
add
xorl
mov
sbb
dec
std
iret
cwtl
ret
jnp
in
xorl
cmp
mov
or
mov
cld
push
sub
outsb
sub
cmp
lods
cltd
inc
mov
repnz
and
dec
and
pop
dec
or
xchg
pop
xchg
repnz
mov
mov
rolb
test
jp
push
mov
xor
adc
loop
sti
push
stos
xchg
mov
test
adc
push
stos
out
adc
clc
inc
pop
lcall
outsl
dec
jo
adc
popf
add
push
sbb
add
sti
mov
cltd
sub
imul
mov
add
iret
dec
xchg
add
mov
mov
or
or
notb
aam
pop
aaa
xchg
out
adcb
jbe
inc
inc
cmp
mov
mov
cmp
xchg
int3
repnz
inc
jg
int
insb
fisttpll
pop
test
xorb
clc
cmp
cmp
mov
push
popa
int
mov
cmp
jl
push
inc
ja
xor
push
in
add
test
adc
pop
lock
jns
sub
push
movsl
xor
loope
icebp
xor
fdivs
and
outsb
test
aad
dec
sub
sbb
repnz
fistpll
arpl
rol
enter
pop
push
ror
dec
jb
arpl
aas
xor
inc
dec
cmp
imul
daa
mov
leave
xchg
lahf
inc
in
in
rcl
mov
cwtl
or
push
sub
mov
test
and
jle
subl
xor
pop
imul
je
fadd
mov
in
inc
inc
pop
add
xchg
xor
xchg
cmc
hlt
and
movsl
xchg
and
cmp
xchg
je
rorl
push
lret
xlat
cmp
cmpsl
push
pop
mov
test
je
fnstsw
jno
divb
mov
insb
mov
dec
lds
ficoml
jns
sbb
rolb
iret
stc
test
pop
cmp
jae
std
inc
sarb
xchg
or
xchg
adc
mov
push
pop
clc
insl
jmp
adc
dec
and
inc
xchg
fistpll
out
push
jp
cmpsl
lods
cwtl
adc
or
xchg
lahf
dec
mov
cmpsb
jo
in
in
enter
inc
movsl
sub
xor
pop
pusha
cmp
jle
cmp
hlt
cmp
pop
inc
bound
movl
ret
int
leave
std
clc
and
out
push
inc
or
xchg
adc
xchg
and
add
and
or
jecxz
rcrl
sahf
cmp
mov
mov
daa
fsubrs
lahf
cmp
clc
ficoms
fnstcw
mov
setnp
iret
addr16
imulb
test
jecxz
mov
into
mov
add
fdivrp
push
sbb
inc
cwtl
xorb
sbb
aad
pop
repnz
xorb
int
js
mov
insb
cmpsb
xor
dec
popa
gs
mull
jg
pop
mov
cmc
loope
and
push
mov
mov
adc
callw
repz
gs
shrb
push
sbb
cmc
xlat
add
lock
dec
push
cmpsb
dec
test
mov
insb
movsl
push
jae
add
jae
cmpsl
ja
push
sbb
pusha
sub
lret
jbe
pop
xor
pop
adc
xchg
jmp
mov
rolb
push
bound
push
xrelease
add
jl
mov
dec
xchg
push
fldt
ss
lods
lcall
xchg
sbb
test
shl
mov
mov
hlt
insb
es
dec
dec
inc
jmp
sub
jp
adc
les
push
pop
les
mov
xlat
xchg
adc
mov
xchg
es
arpl
dec
push
leave
mov
loop
jb
stos
aaa
pusha
push
xlat
xor
push
dec
pop
jg
shr
jb
xchg
xchg
mov
shll
mov
mov
push
adc
test
arpl
andl
rclb
ret
inc
rcll
and
sbb
pop
pop
leave
push
cmpsb
cmp
out
mov
xchg
outsb
pop
xor
or
jbe
pop
int
nop
jnp
cmpsl
lods
and
sub
cld
loope
jo
addb
divb
push
or
push
ja
xchg
and
dec
fistps
cmp
mov
sti
cmp
mov
scas
pop
pop
std
inc
cmp
and
fs
ficoml
in
das
inc
mov
mov
and
push
and
in
stos
sub
dec
xor
mov
es
cmpsb
mov
jecxz
cmp
push
adc
sahf
xor
outsl
ficoml
scas
xlat
pop
test
xlat
scas
fucom
cmp
jle
and
shll
push
aad
int
cmp
and
xlat
sbb
jge
clc
ljmp
add
push
arpl
lds
icebp
xor
xchg
mov
call
aam
insw
pusha
pop
pushf
mov
cmp
dec
pop
dec
pop
ja
popf
test
mov
mov
cs
xor
mov
pop
push
xchg
mov
in
sbb
hlt
imul
shl
adc
es
cld
push
mov
mov
dec
xchg
mov
imul
pop
test
inc
pushf
loop
fldcw
sbb
out
xchg
push
jo
add
cmpsb
jp
iret
and
xor
xor
mov
in
stc
enter
scas
xor
outsl
or
rclb
fnstcw
sahf
fiadds
or
xor
adc
add
xchg
bound
outsl
rorb
sbb
aas
test
rcrl
mov
fwait
pop
in
xchg
sbb
daa
test
add
adcl
fcompl
push
cwtl
dec
fldl
cwtl
sub
ret
inc
pop
insb
mov
out
mov
dec
je
rcl
push
pop
jae
outsl
cmp
jae
cmp
sub
sbb
in
mov
scas
dec
push
and
imul
mov
mov
mov
test
addb
pusha
push
xchg
shll
xor
mov
add
ret
mov
out
and
insl
mov
cli
mov
outsl
jno
shlb
jle
xchg
cld
mov
mov
and
push
jg
sbb
fisttpll
sbb
push
or
add
cld
aas
jno
fnstsw
push
lahf
lods
mov
scas
pop
adc
jns
xchg
rcl
mov
or
mov
mov
sbb
adc
fbstp
movsb
outsl
ret
clc
int
fcoml
jmp
and
loop
pop
inc
sub
push
in
or
dec
lcall
xor
sub
hlt
pop
dec
dec
and
mov
push
jae
cmc
sbb
xadd
and
and
rcrb
push
loopne
decl
add
lods
int3
cs
adc
arpl
mov
inc
fldcw
test
push
fstpt
cmp
xchg
mov
mov
or
push
adc
jnp
push
dec
jo
jbe
pushf
bound
jno
mov
aam
push
fisubrl
mov
inc
int3
mov
test
lods
jp
jno
mov
pop
mov
mov
mov
push
or
or
aaa
std
xchg
fcoms
inc
adc
inc
ror
xchg
inc
mov
aad
mov
jmp
out
dec
xchg
mov
cld
std
clc
enter
push
mov
sbb
xchg
cli
adc
sub
xor
sub
cltd
mov
mov
pop
inc
inc
std
pop
icebp
and
mov
push
sub
mov
add
cld
ss
test
jp
push
outsb
push
stc
jge
das
int
dec
xor
dec
or
daa
leave
lahf
xor
orb
or
push
idiv
mov
pop
jmp
sub
iret
xchg
jp
xchg
jbe
or
dec
sbb
sub
inc
mov
jge
xchg
inc
ret
ret
fsubl
fxch
inc
enter
dec
das
push
add
mov
rol
popa
or
je
sbb
mov
xor
into
dec
push
repz
or
or
push
adc
mov
add
or
stos
mov
into
or
xchg
pop
lcall
inc
sbb
stc
lahf
sahf
lahf
push
cmp
jnp
xchg
flds
sbb
xchg
inc
stos
sbb
fildl
fsincos
pop
ret
faddl
cmp
xchg
outsl
jl
shlb
xor
adc
aam
test
jge
mov
out
data16
and
repz
mov
rcl
pop
adc
pop
pop
mov
fcoms
popa
cli
sub
cli
leave
mov
pushf
ss
add
push
movlps
jnp
and
push
cmp
out
scas
mov
repz
pop
add
fwait
xchg
iret
sub
mov
lods
test
flds
sub
into
mov
jle
jbe
xor
in
mov
inc
push
sub
adc
out
shlb
lahf
mov
cmp
stc
push
out
loop
xor
js
cwtl
imul
adc
sub
loope
insb
mov
aas
xchg
in
or
addr16
dec
xor
mov
pop
dec
mov
xchg
dec
sbb
cwtl
lods
cmc
xchg
adc
add
ret
divb
adc
sbb
std
fwait
pop
jp
mov
insl
repnz
fadd
aad
cmp
mov
mov
addr16
aam
sub
add
inc
mov
adc
in
add
scas
dec
xchg
cmp
in
mov
add
lret
data16
add
dec
inc
inc
mov
aaa
ret
add
sti
cmpsl
int3
insl
adc
xchg
pop
pop
pandn
int3
cmp
add
mov
movsl
sti
sarl
sti
jmp
movsb
jge
inc
pmulhuw
push
in
mov
mov
lods
scas
adcl
fisubs
cmp
in
incb
mov
hlt
inc
mov
cltd
add
jne
sub
add
push
popa
outsb
xor
gs
in
lods
mov
incl
stc
adc
sbb
fxch
sbb
enter
jo
imul
cmp
mov
cmpsl
fldl
inc
movsb
push
sub
testb
or
adc
adc
fisubrl
sub
aas
pop
and
mov
daa
outsb
sbb
int
es
adc
sti
repz
xchg
pop
pop
xchg
fwait
sahf
fldt
aam
cmp
pop
jg
lock
repnz
shll
std
hlt
add
push
jnp
aam
icebp
jne
cld
je
cmpsl
xor
movb
out
or
push
insb
lods
scas
out
arpl
pop
data16
out
out
fcmovnu
pop
fs
outsb
jbe
and
pop
mov
insl
loop
mov
sbbb
push
cmpsb
iret
fdivr
ja
fisttpll
bound
lods
pop
push
adc
cmp
mov
mov
enter
jecxz
cwtl
ds
jae
and
fldpi
and
add
daa
mov
ljmp
out
shl
fcmove
fwait
outsl
out
stc
insb
jecxz
and
pop
enter
cmpb
gs
adc
dec
pop
pop
dec
lock
sti
and
adc
inc
icebp
jg
sbb
sbb
inc
xor
pop
loopne
push
xchg
insb
jl
xchg
dec
inc
lret
xchg
sub
fsubrl
mov
inc
and
in
fcmovu
push
fcmovb
cli
mov
orb
insb
jbe
dec
loop
xor
nop
mov
mov
out
and
fsubrs
dec
out
je
jno
out
enter
pop
cmpsl
ds
cld
dec
fists
jne
jnp
inc
mov
push
mov
mov
pusha
push
out
test
rorb
adc
aam
out
jns
bound
xor
mov
into
sub
or
dec
mov
add
push
call
lock
push
and
pop
mov
stc
sbb
rcr
es
ja
sbb
jmp
mov
push
rcr
jae
pop
or
cmp
jecxz
add
loop
out
mov
jb
adc
jge
imul
pop
das
mov
xchg
mov
pop
dec
jmp
cmpsl
dec
adc
pop
sahf
lcall
mov
push
xchg
insb
inc
mov
mov
insb
pushf
sbb
aam
push
adc
jae
push
sub
or
imul
arpl
jl
gs
pop
xchg
jnp
aam
push
popf
out
ljmp
sahf
push
loopne
xor
and
xchg
dec
scas
lock
iret
loope
es
and
add
xchg
cli
add
shrl
xchg
adc
inc
jle
add
shlb
sbb
push
sub
pop
out
xor
idivl
jne
idivb
in
mov
adc
xor
ret
inc
dec
xchg
push
iret
cmpsb
inc
mov
mov
imul
aas
hlt
xorl
enter
xchg
xchg
cmp
jnp
cwtl
vaddps
pop
aaa
dec
push
cmp
pop
shll
mov
dec
pop
dec
sahf
adc
jo
lock
leave
xchg
mov
stos
out
jp
std
inc
lods
lahf
out
fists
mov
inc
mov
adc
adc
inc
rclb
sbb
and
popa
cli
or
mov
or
cmc
sub
adc
cmp
into
pop
inc
sarl
xchg
jne
popf
clc
ret
sbb
lods
jle
xor
icebp
xchg
addl
iret
and
mov
testb
push
idiv
sahf
jmp
repz
out
inc
hlt
les
push
or
mov
ret
xor
mov
sbb
test
fidivrl
mov
lods
mov
outsb
xchg
inc
fidivrl
clc
dec
scas
sahf
and
pop
jecxz
sub
mov
add
andl
scas
sub
hlt
or
mov
test
inc
jmp
adc
lea
je
dec
popa
fstpl
rorl
loope
mov
dec
lcall
aad
pop
roll
outsl
loop
repnz
xchg
aas
mov
pop
rcrb
cmp
push
out
fists
jp
sub
add
les
pop
xor
stos
aad
cmpsl
adc
ds
jns
pop
add
int
daa
fldenv
aam
inc
sub
adc
fcmovnb
out
mov
or
cmp
or
test
jnp
clc
aam
inc
roll
push
test
adc
lahf
scas
out
or
out
call
push
adc
insb
pop
stc
cltd
xor
stc
popf
mov
xor
or
in
and
test
sbb
loop
and
sbb
xor
data16
test
and
mov
or
and
sbb
dec
sbb
adc
xor
inc
sahf
push
enter
daa
mov
int
jno
in
test
xchg
test
cmp
push
xchg
popf
dec
mov
sbb
mov
int
pop
in
arpl
cmp
mov
bound
lret
mov
insl
fucom
cmp
data16
lods
mov
cmp
sub
push
sbb
pop
movsl
push
loope
jmp
pop
adc
testb
lock
pushf
mov
fs
call
cmp
call
push
insl
cli
jle
push
mov
pusha
dec
inc
jbe
adc
addr16
test
add
ret
idivl
lock
adc
cli
and
sti
iret
pop
mov
ds
sti
ficoms
adc
jb
inc
stos
xor
out
div
xchg
dec
dec
js
pusha
pop
fwait
mov
ss
das
mov
cmovp
cmp
push
cld
push
sub
cmpb
adc
cmp
sub
cmp
mov
lods
pop
mov
stos
repz
lret
or
sub
fldl
or
xlat
and
hlt
out
push
into
jecxz
jmp
adc
mov
jns
insb
lods
loop
mov
pop
lods
lds
sbb
xor
push
inc
mov
push
out
je
push
and
jb
xchg
adc
orb
test
inc
mov
shlb
xchg
jge
ss
daa
add
xchg
js
pop
imul
cmp
xchg
or
loopne
ss
xchg
mov
jo
jp
mov
mov
fstpt
pop
lea
sub
das
sbb
je
mov
in
or
jg
out
mov
mov
push
inc
test
mov
adc
stos
adc
enter
pop
gs
mov
mov
add
insb
mov
pop
cmp
push
test
lock
ret
sbb
dec
in
sub
xrelease
fists
test
flds
fnstenv
cld
cmp
adc
ds
pop
dec
pop
mov
aas
adc
fistpl
sbb
mov
mov
and
sub
popa
scas
adc
push
call
adc
aas
or
stos
or
ret
pop
cli
mov
or
inc
mov
or
mov
jecxz
pop
test
negl
and
cli
stos
aam
in
mov
stos
jecxz
pop
cmp
and
mov
in
lret
in
popa
rcll
addr16
xchg
aam
sbb
or
test
adc
hlt
xchg
xchg
adc
mov
mov
and
jb
insl
lcall
sbb
faddl
push
pop
sub
cmp
int3
mov
lcall
fisubs
xor
xlat
adc
add
jge
mov
xchg
lea
push
jno
test
inc
sub
xor
sub
fisubs
pushf
pop
das
std
dec
rcpps
jge
mov
pop
out
stos
inc
inc
jae
dec
bound
mov
call
cmp
sbb
push
lods
and
fs
sahf
xchg
fidivrl
dec
dec
mov
cwtl
test
jns
push
push
outsl
es
pop
sub
push
sbbl
lds
inc
pop
dec
pop
and
inc
test
fimull
cmp
mov
roll
mov
scas
int
sbb
dec
sub
ss
adc
and
stc
addr16
jecxz
inc
jle
negb
sbb
ficoms
movsl
xchg
aas
cmp
xor
jbe
aas
inc
xchg
fidivs
int
push
add
inc
pop
jns
sbb
or
xor
mul
sbb
in
in
popa
movsb
push
push
xchg
ja
stc
scas
loopne
jp
out
aad
sbb
or
dec
call
jmp
inc
push
mov
ljmp
sbb
mov
jl
popf
mov
cmpsb
cmp
in
addr16
push
test
inc
gs
xchg
push
insl
es
mov
loop
jae
sahf
test
mov
jmp
in
insl
jmp
js
lahf
out
mov
mov
popf
pop
pop
enter
ljmp
repnz
scas
in
jl
xor
bswap
cmp
out
int
aad
mov
and
mov
xorl
mov
mov
lea
mov
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
and
mov
mov
subl
xor
adcl
add
movl
jne
jmp
adc
mov
subl
sub
xor
sbbl
mov
decl
mov
xorl
mov
andl
xor
xor
addl
sub
sub
xor
mov
mov
mov
jmp
sbb
mov
sbb
mov
xor
xor
orl
sub
movzbl
sbb
mov
sub
xor
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
imul
mov
mov
mov
add
or
mov
jmp
in
in
xchg
lret
clc
lret
fwait
dec
fstpt
pop
addl
mov
outsb
incl
stos
in
dec
add
enter
rol
je
mov
sub
inc
idivl
inc
dec
out
mov
sar
testl
int
out
movl
lods
sahf
jb
daa
pop
lret
jg
stos
lods
ljmp
inc
jge
push
daa
jns
insb
clc
rdmsr
push
mov
mov
dec
shrb
mov
aad
out
sub
or
aam
mov
pop
movsb
mov
add
inc
push
cltd
fildll
push
mov
xchg
int3
dec
jno
outsb
push
ljmp
fpatan
dec
xchg
loope
add
adc
fimuls
in
mov
aaa
push
mov
or
stc
pop
pushf
lret
xchg
mov
xchg
iret
repz
inc
lods
xchg
push
pop
pop
inc
subl
notl
sbb
inc
mov
scas
out
out
loop
roll
jns
repz
lcall
movsl
cmc
xchg
xchg
pushf
adc
repz
pop
test
pushf
jnp
sarb
xor
into
int
jne
xchg
sahf
and
pop
std
sbb
adc
out
or
mov
popa
lahf
mov
mov
rcrb
add
loopne
add
in
lea
shlb
dec
adc
xchg
push
mov
mov
scas
push
push
iret
sbb
pop
enter
pop
pop
aaa
les
int
sub
and
push
in
mov
test
mov
dec
aad
pop
mov
and
dec
sub
outsb
inc
and
cmp
in
and
popa
stos
and
fbld
cmp
cmp
lahf
xchg
test
in
out
pop
pusha
lahf
inc
add
and
or
xchg
fsubrl
pop
and
xchg
inc
sahf
sub
je
pusha
fsubs
mov
xor
out
jnp
clc
std
add
sbb
aam
mov
mov
data16
mov
xchg
in
push
stc
dec
xchg
xor
add
jae
inc
lods
icebp
inc
aad
xor
test
and
adcb
frstor
cmp
pop
push
sbb
mov
stc
test
fnstcw
cmpsl
mov
jl
or
push
decb
repnz
fiadds
mov
divl
sub
jnp
push
xor
icebp
sbb
mov
push
call
mov
xchg
hlt
fisttpl
in
cmp
sub
push
daa
cwtl
lea
push
out
inc
leave
jae
fwait
adc
sbb
dec
inc
mov
mov
inc
or
mov
push
jecxz
ljmp
xchg
mov
movsl
imul
rep
clc
sti
in
subl
cmpb
lahf
mov
aas
dec
into
push
les
dec
xor
pop
daa
das
push
test
mov
ss
mov
lahf
cli
stc
hlt
loopne
leave
fsub
jg
loopne
mov
dec
or
pop
stos
xor
mov
loop
shrb
mov
push
sbb
mov
xor
mov
xchg
mov
mov
iret
sub
pop
push
and
inc
push
sbb
loopne
jb
mov
nop
mov
xchg
xchg
xor
xchg
mov
mov
dec
lds
lret
and
cmpsb
rorl
or
dec
js
push
jge
jo
adc
mov
rcll
fstl
cwtl
add
adc
js
nopl
lcall
or
xlat
push
mov
sub
xchg
sbb
add
scas
call
fmuls
add
adc
xor
add
movl
repz
dec
int3
fincstp
inc
jge
xor
loop
cli
nop
incb
int3
pop
cmovp
repz
dec
xchg
add
out
pop
sbb
and
loopne
out
outsb
fistpll
adc
and
mov
inc
ljmp
inc
dec
xor
leave
mov
add
lret
add
inc
fdivrs
shll
leave
and
call
jg
lock
cmp
lret
pop
addr16
xor
push
xor
adc
mov
fistpl
sarl
push
add
hlt
aam
cmp
aas
popf
inc
jp
rcl
icebp
stos
jnp
test
jmp
inc
das
push
dec
ret
mov
nop
cmc
dec
popa
mov
jns
xchg
xchg
std
mov
jmp
jo
loope
push
stos
cltd
ret
push
test
cmp
xchg
ds
sub
js
pop
les
sbb
int
in
mov
xchg
add
mov
shll
dec
mul
cmpb
mov
test
pop
orl
arpl
aad
repnz
xchg
adc
sbb
subb
push
push
sbb
inc
sub
ret
test
and
fisubs
mov
lcall
pusha
or
lret
out
xchg
jl
fsub
xchg
imul
sub
dec
lret
mov
stos
push
and
or
mov
loopne
gs
mov
cs
popa
sub
addl
sbb
mov
js
jb
addr16
das
push
cli
and
pop
mov
adc
push
sbb
push
divl
jl
mov
fwait
xchg
call
test
lret
dec
pushf
shrb
test
xchg
or
cld
lods
in
and
nop
ss
shlb
in
ljmp
fidivrs
adc
cmpsl
dec
cli
cmc
fucomi
fs
mov
jbe
mov
loopne
sub
sarl
loopne,pn
outsb
push
jmp
jae
lret
sahf
push
mov
xchg
cmc
cmp
in
xchg
jge
stos
mov
sub
mov
dec
mov
xchg
mov
sub
xchg
sbb
scas
enter
inc
cmp
mov
pop
push
shl
pop
not
mov
gs
sub
rcll
push
lret
mov
jne
xchg
mov
hlt
es
sub
sahf
mov
sub
outsb
jnp
pusha
mov
mov
sbb
xchg
push
and
rcrl
dec
mov
add
adcb
and
dec
and
sub
popa
daa
add
mov
repz
adc
movsl
cmpsb
mov
dec
and
and
aam
jns
cli
sbb
orb
mov
xor
imul
stos
mov
mov
cmp
dec
pop
mulb
push
testb
dec
adc
insb
push
mov
mov
fildl
sbb
mov
jo
out
add
or
lret
je
mov
lods
ljmp
dec
xchg
stos
fwait
repz
push
mov
jle
dec
mov
sub
cmpsl
test
mov
mov
mov
push
and
add
leave
out
mov
dec
mov
das
rolb
shll
mov
pushf
inc
popa
cmpsl
aam
inc
jo
inc
enter
adc
xchg
inc
pop
andl
ret
cmpsl
xchg
incl
mov
mov
sub
mov
rcr
or
or
ljmp
mov
cmpsl
xchg
xor
bound
orb
ds
cmp
arpl
jle
mov
push
push
dec
sbb
popa
stos
int3
iret
das
imul
xchg
fisttpll
xchg
in
mov
ja
and
aad
enter
sbbl
and
or
adc
push
mov
xchg
fcomi
js
pop
decl
aaa
loope
or
add
repz
in
ficoms
cmp
les
push
adc
mov
lahf
mov
jmp
aad
pop
cmpsl
cmc
test
loopne
or
mov
iret
pushf
lret
inc
dec
mov
inc
xchg
test
int3
imul
mov
inc
lcall
mov
pop
mov
enter
pop
sbb
mov
jbe
inc
mov
cmp
sbb
mov
push
std
in
ds
sbb
inc
or
imul
les
popf
stos
push
jb
mov
arpl
inc
mov
test
push
jo
flds
sti
xchg
and
test
pop
adc
sbb
aam
sub
in
int
push
aaa
outsl
popa
je
or
rsm
ds
or
call
pop
test
xor
dec
dec
flds
outsl
and
dec
or
scas
mov
inc
xchg
pop
lahf
cmp
xor
xchg
cmp
leave
mov
out
pop
aam
mov
and
movsl
addr16
fdivrl
out
push
xchg
sbb
lret
cmpsl
pop
add
repz
jecxz
push
adc
jbe
bound
push
push
add
ficoms
push
gs
jmp
sarb
data16
jge
std
push
rclb
outsb
jb
pusha
inc
push
mov
ret
pop
loop
sbb
mov
in
sbb
sti
lds
or
jbe
lret
loop
cmpsb
add
movsb
jns
sbb
ficoml
and
push
rcll
xchg
pop
inc
mov
push
dec
jbe
cltd
scas
push
lret
lds
pushf
push
xor
decb
adc
jnp
cmc
imulb
repnz
cmc
insl
adc
sub
inc
adc
and
into
mov
loope
push
subb
movsl
aaa
inc
pusha
adc
push
jg
test
mov
and
movaps
mov
mov
and
or
fistps
orl
add
pop
mov
outsb
mov
xorb
shrb
jno
sbb
jno
clc
xor
push
mov
int
inc
jns
mov
int
sub
xchg
loopne
mov
out
pop
adc
xchg
dec
movl
dec
pop
in
inc
mov
loope
lds
loope
jg
xor
stos
aaa
jnp
xorb
inc
cmpsb
aad
inc
pop
sbb
xor
ja
sbb
cmp
add
pop
push
mov
push
and
fwait
jns
sti
jmp
push
inc
jge
sbb
jecxz
jns
push
dec
aam
jnp
jmp
scas
in
pop
das
pop
lds
es
cmpl
jo
fisttpl
xor
push
aad
out
and
ja
lret
mov
dec
xor
cwtl
test
sbb
inc
push
push
push
ja
mov
in
lahf
shll
push
mov
and
mov
inc
ret
dec
xchg
int
fmuls
lret
call
xchg
jecxz
xor
lret
adc
mov
movsl
je
xor
int3
fdivs
dec
stc
data16
sub
xchg
int3
shr
cmp
mov
sbb
cmc
ja
xor
cmc
insb
xor
fucomip
mov
cmp
int3
in
or
lods
loop
cmp
and
adc
mov
xor
cmp
inc
outsb
mov
hlt
push
fwait
pop
sbb
xor
ret
add
imul
adc
pusha
int3
hlt
dec
or
repz
and
fidivrs
int3
xchg
jle
ret
ret
shrl
mov
mov
pushf
jp
xchg
or
in
lods
or
push
push
pusha
cmpb
dec
or
scas
lret
fdivrs
jle
push
icebp
xchg
xchg
pushf
pop
pop
outsl
mov
push
or
pop
popa
sub
ret
test
sub
sbb
or
dec
lds
cmp
push
pop
insb
cld
mov
lahf
dec
sbb
data16
in
sbb
ja
push
in
and
xor
pop
jbe
push
jns
sub
sub
jmp
jmp
mov
lcall
mov
cltd
xchg
enter
hlt
xor
in
xchg
cltd
in
sbb
add
fwait
sti
cmp
adc
icebp
pop
divl
nop
mov
negb
xor
lret
stc
cli
sbb
arpl
cmp
dec
push
mov
mov
mov
sbb
xor
popa
fptan
lret
pop
fmull
adc
xchg
jnp
dec
movsb
inc
inc
mov
dec
ja
sbbb
inc
cmp
inc
mov
and
or
jge
push
dec
add
and
sbb
cmc
add
fmuls
mov
jns
adc
mov
mov
out
cmp
cmc
mov
cmp
shlb
push
mov
cwtl
mov
or
andb
loop
mov
sti
enter
std
jno
jg
fildll
xor
inc
push
add
and
push
std
out
pop
sub
xor
inc
xchg
inc
jnp
mov
jne
lods
fs
add
in
inc
push
in
bnd
pop
loopne
in
xchg
jno
leave
fldl
iret
andb
xor
sbb
dec
iret
push
aaa
cmp
pop
lret
cmp
mov
xor
fdivs
in
out
fs
repz
iret
ret
push
or
push
hlt
in
rcrl
flds
sub
bound
adc
pop
adc
jl
call
in
mulb
jb
mov
jmp
push
xor
idivl
xor
movsb
lods
pop
lcall
push
and
push
pop
inc
aas
jle
fdivrs
int3
dec
adc
inc
jecxz
psrld
mov
and
lret
mov
in
in
jg
movsl
lds
mov
fs
or
push
xchg
jnp
add
mov
cmc
sub
lret
or
mov
xlat
cli
mov
mov
mov
outsb
test
jae
arpl
mov
fidivrl
push
mov
xchg
lret
cmp
xor
jb
ljmp
mov
jmp
fsts
test
dec
lods
fwait
out
insb
negl
xchg
stos
add
fistpll
fsubrp
xor
push
mov
fnsave
sbbl
pop
dec
jno
jno
mov
lea
push
dec
lds
push
xor
jb
subb
testb
xor
and
mov
mov
lahf
inc
sub
out
je
mov
outsl
add
ficoms
mov
add
mov
mov
shrb
pop
add
sti
stos
out
out
aam
pop
imul
insb
mov
pop
rcl
push
test
mov
je
xor
test
fcomi
dec
dec
xchg
or
cltd
js
sbb
or
jb
dec
popf
inc
push
stos
or
loopne
cmpsl
dec
fwait
ret
test
cmpsb
in
add
icebp
mov
jp
jmp
xchg
call
sub
xor
xchg
shlb
xor
add
push
push
inc
push
push
mov
add
dec
adc
pop
sbb
js
jb
clc
pop
mov
fidivs
lea
xlat
mov
jmp
inc
movsl
or
mov
lock
dec
inc
xor
push
push
jle
xchg
out
xlat
mov
out
clc
and
jl
enter
int3
es
lock
cmova
inc
lret
fisubrl
mov
xchg
loop
jecxz
jns
cli
call
cmp
inc
test
fbld
pushf
sahf
mov
imul
dec
jno
les
add
xchg
dec
pop
and
pop
or
ss
into
inc
mov
or
push
lods
jg
ljmp
bound
aaa
je
add
ljmp
mov
stos
int
neg
js
xor
sar
mov
insl
and
adc
mov
jle
sbb
jnp
push
mov
hlt
jge
ja
mov
sahf
inc
bound
gs
aam
sbb
or
aaa
sub
lcall
stos
test
and
movsl
cmpsl
lahf
call
pop
js
lahf
cmp
lahf
jns
fisubl
mov
dec
jo
out
inc
jmp
negb
pop
sbb
inc
xchg
in
shl
adc
add
push
or
lods
adc
and
add
fisttps
mov
cmpsb
add
add
pop
dec
int3
cmp
cltd
leave
xchg
mov
aaa
test
inc
lds
add
mov
inc
inc
outsb
mov
popa
pop
push
stos
jl
mov
scas
inc
and
daa
dec
lret
cli
scas
add
out
add
jle
cld
lret
aam
inc
push
xchg
mov
xchg
jl
mov
mov
jns
test
inc
xchg
dec
out
sbb
les
loopne
neg
inc
cmpb
roll
inc
lods
scas
inc
push
pushf
sub
xchg
dec
inc
inc
mov
xchg
and
cmp
iret
testb
call
sbb
frstor
loopne
jo
insl
movsl
aad
andb
in
imul
pop
divl
fwait
pop
push
push
fsubrs
popf
jnp
jbe
mov
arpl
jb
mov
test
inc
mov
mov
cmp
adc
sub
sarb
mov
xchg
lock
sarl
mov
ds
bound
in
ljmp
and
push
imul
jmp
stos
clc
scas
push
clc
mov
out
test
mov
mov
fmuls
pusha
fistpll
imul
mov
dec
adc
mov
mov
sbb
rcll
jnp
dec
in
dec
loope
fidivl
hlt
jo
lahf
adc
pop
bound
rclb
lret
push
xchg
mov
dec
sbb
lret
jne
cmp
inc
dec
outsb
lock
push
out
push
mov
js
pop
cli
push
out
rolb
adc
in
leave
dec
add
shrb
adc
adc
inc
out
rorb
bound
xor
jl
in
dec
imul
cld
jnp
mov
adc
test
enter
addb
xchg
and
xor
sub
jmp
or
mov
outsb
inc
lret
sbb
insb
mov
cltd
add
dec
fmuls
fldt
mov
fcoml
shlb
test
ret
in
fbld
fsubrs
or
fnstenv
mov
mov
mov
aam
scas
cltd
jl
push
adc
lret
push
jb
sbb
sbb
insb
out
test
or
add
mov
add
aaa
jecxz
scas
popf
xor
dec
popf
pop
pop
faddl
adc
rcrb
rcrb
aaa
dec
mov
imul
aaa
xor
and
aam
xchg
mov
xor
xor
out
adc
shll
ss
nop
cmp
negb
jg
pusha
dec
shrb
jecxz
adc
in
stos
jge
mov
jp
jg
lahf
lock
pop
push
mull
mov
out
jmp
jns
mov
cli
sbb
imul
or
in
pop
les
outsl
ljmp
lea
test
push
inc
push
scas
insl
inc
aas
xchg
sahf
in
lea
les
es
push
sbb
push
sbbl
hlt
call
mov
pop
into
ret
push
aam
sub
leave
mov
insl
fidivrl
dec
xchg
lods
mov
adc
push
mov
repnz
mov
inc
and
jecxz
in
inc
cmp
adc
jnp
jae
dec
inc
fldl
mov
inc
enter
mov
pop
inc
scas
sarl
arpl
and
imul
fidivrl
add
mov
jb
inc
lea
adc
sub
repnz
cwtl
ror
push
js
adc
mov
mov
sub
mov
mov
testb
aas
inc
pop
mov
imul
mov
rcrl
jp
adc
adc
mov
mov
mov
aas
sub
pop
xchg
dec
xchg
mov
es
mov
jb
and
fimull
aad
insl
jecxz
dec
fisttps
dec
jmp
mov
xchg
ror
pop
xor
adc
hlt
mov
hlt
shl
hlt
adc
int
mov
pop
enter
sub
addr16
decb
rolb
push
enter
rcrl
std
ret
popa
gs
add
dec
adc
adc
scas
jecxz
adc
jmp
dec
mov
pop
sub
gs
ss
stos
and
dec
jno
push
sbb
cmc
adc
aas
data16
add
int3
fadds
fs
cmp
in
stos
and
xchg
cmp
pop
lods
xor
cmp
pop
sbb
or
push
outsb
popf
xor
mov
repnz
ljmp
movsb
popf
les
cltd
sbb
dec
xorb
xchg
leave
xor
mov
and
ret
popa
in
sub
lds
adc
ja
dec
cmp
mov
mov
dec
push
sub
inc
stos
jne
or
lods
inc
cmpsb
cmc
dec
loope
arpl
push
scas
cmp
dec
orl
popa
fistpl
and
jmp
shll
push
dec
mov
or
sub
mov
lret
fistpl
and
xor
jb
dec
mov
mov
jae
loope
cmc
lea
mov
cmp
scas
xchg
fwait
es
and
je
push
xor
mov
lret
and
sbb
push
mov
sbb
add
js
sub
push
icebp
push
push
sbb
ja
sub
inc
je
mov
bound
arpl
adcb
jle
int3
dec
stos
testb
cmp
loopne
mov
mov
fs
pusha
dec
test
or
fdivs
inc
jns
jg
lods
sbb
mov
les
xor
push
mov
loope
xchg
mov
cmpsb
sarb
sbb
jno
mov
bound
dec
sub
xchg
movsb
movsl
mov
pushf
int
out
jnp
rclb
dec
fnstenv
push
and
cwtl
in
lret
xchg
fmull
pop
stos
mov
aam
pusha
mov
push
fldenv
dec
popa
xor
inc
push
adc
xor
insb
adc
inc
add
jne
adc
push
mov
ljmp
push
jns
or
addr16
stos
lahf
jbe
sahf
icebp
push
mov
leave
mov
and
inc
adc
mov
je
test
xchg
add
cmp
ljmp
lcall
push
popf
repnz
insl
ds
jns
sbb
push
pop
data16
fcomi
loope
xchg
mov
mov
adc
daa
rcr
les
cmpsl
es
cmpsl
mov
pop
aam
adcl
jnp
or
filds
cs
sub
cmp
mov
mov
inc
arpl
pusha
inc
sub
xchg
pop
mov
in
stos
nop
nop
js
jns
rolb
js
push
cmc
sbb
imul
subb
pop
rcrl
insl
adc
sahf
lods
jbe
xchg
pop
dec
sbb
out
add
pop
or
nop
dec
cwtl
xorl
insl
mov
cmp
cmp
jbe
leave
dec
cmp
aas
popf
jl
enter
or
pop
and
jne
sbb
ja
xchg
shr
adcb
dec
daa
mov
sub
mov
mov
leave
imul
inc
daa
btr
sti
jo
dec
ljmp
cmp
insb
je
jbe
add
or
xor
pop
rorb
ljmp
notb
ficoml
rcrb
push
inc
aas
cld
test
lahf
adc
pop
dec
stos
data16
fcompl
shlb
loop
lret
inc
rcrb
xlat
std
iret
or
cmpsl
mov
lea
jbe
jbe
mov
cmp
imul
push
sub
or
rcrl
adc
lods
lret
push
push
and
movsl
fcoms
aad
call
enter
pop
add
pop
inc
cli
mov
test
mov
pop
dec
daa
xchg
out
xor
int3
into
or
aam
xchg
xchg
sahf
fbld
aad
and
pop
adc
mov
xchg
retw
cmpsl
jle
sub
push
cmpb
cmovae
sahf
orl
or
dec
push
ljmp
xor
cwtl
mov
pop
or
jge
adc
xchg
mov
ficompl
icebp
mov
test
inc
cmp
mov
popl
in
cltd
mov
data16
movsl
mov
add
int3
inc
jmp
clc
cmp
pop
cmpsb
or
inc
push
aaa
fdivs
in
gs
dec
dec
orl
xlat
jb
rorb
hlt
pusha
jge
test
sub
int
jb
out
push
push
lret
mov
ljmp
mov
loope
mov
pop
cmc
or
in
mov
dec
or
jle
add
test
in
cs
cltd
repz
jnp
jl
mov
inc
test
adc
lock
mov
mov
repz
mov
xor
pop
xor
push
add
sbb
mov
lods
es
dec
mov
sahf
mov
xor
scas
outsl
lret
jno
stc
xor
pop
in
cld
lret
xchg
mov
xorl
xor
fst
out
jmp
hlt
pop
into
sbb
shl
inc
pop
dec
push
loope
dec
mov
jne
dec
mov
xor
fwait
xlat
adc
cmp
inc
xchg
mov
jg
sbb
enter
mov
in
inc
add
or
xor
jbe
arpl
lcall
inc
cmpsb
pop
or
ret
jns
xchg
dec
xchg
sub
xchg
decl
xor
nop
and
push
hlt
and
mov
call
push
mov
mov
xchg
sbb
sbb
xorb
and
rorb
aas
lea
cmpsl
mov
movsl
int3
add
xchg
inc
mov
and
mov
push
daa
xchg
cmpsb
insl
je
rorb
xchg
imul
sbb
aad
test
push
int
cmp
cmc
shll
push
mov
mov
dec
adc
mov
cwtl
outsl
mov
mov
pushf
mov
insb
aad
dec
popa
test
inc
inc
inc
mov
sbb
call
fstpl
cmp
push
push
sbb
push
test
jecxz
cmc
dec
cmp
push
or
outsb
test
jno
pop
adc
pop
out
push
pusha
mov
scas
sbb
int3
leave
div
push
xchg
ljmp
int3
push
add
mov
es
ljmp
movsl
pop
add
imul
fimuls
sbb
cs
data16
shlb
sbb
icebp
sbb
fcomps
mov
out
mov
aas
ds
xchg
fwait
mov
sbb
dec
out
sahf
pusha
data16
cltd
adc
jb
fmuls
add
arpl
mov
lea
add
into
arpl
sbb
pusha
scas
aam
fmuls
cmp
leave
repnz
pushf
ss
dec
sarb
and
cmp
imul
rcl
inc
sbb
xchg
mov
jl
arpl
mov
mov
and
roll
cmpsb
out
in
xor
xchg
pop
test
fdiv
lcall
mov
in
mov
mov
ret
mov
mov
std
adc
addb
xchg
mov
add
jge
push
in
add
inc
cs
fstpt
jp
jp
mov
sbb
out
in
jne
test
dec
jle
outsb
gs
xor
mov
mov
leave
jnp
jnp
xlat
das
mov
scas
aas
mov
repz
inc
lret
das
and
add
mov
or
jle
call
lods
inc
mov
xor
mov
mov
xor
loope
lds
stos
lea
dec
xchg
rcll
scas
mov
adc
mov
inc
xchg
into
fidivrs
mov
mov
ds
iret
inc
xchg
push
xor
and
iret
stos
in
fimuls
test
push
mov
or
pop
test
rorl
and
lcall
loop
cmc
or
mov
jb
pop
dec
int3
adc
xor
push
mov
dec
mov
out
arpl
outsl
jne
shl
jge
fstpl
getsec
lods
aad
mov
and
add
dec
or
xchg
data16
sub
adc
or
aad
movntps
push
cmp
inc
xorb
inc
dec
popf
xor
mov
inc
xchg
push
xor
mov
mov
cmp
mov
aad
pop
or
fmuls
inc
mov
fldl
jae
push
movsl
mov
push
leave
xchg
das
dec
or
popf
cmpsb
inc
les
bound
pop
mov
mov
mov
lret
fisttps
mov
ret
pop
outsb
sbb
std
jne
sub
dec
inc
hlt
test
push
push
and
pop
push
or
mov
mov
pusha
add
out
cmp
mov
fisubl
xchg
mov
fistl
jecxz
enter
jns
inc
cs
adcb
mov
out
fcmovnu
push
aad
add
incb
insb
stc
xchg
cmp
dec
inc
scas
adc
cmpsl
inc
jl
test
ds
pop
jne
mov
repnz
push
sub
hlt
adc
xor
aaa
insl
and
shl
leave
sbb
jmp
rcll
cmp
aas
dec
ret
testl
fwait
test
lret
test
hlt
mov
pop
inc
pop
xor
std
mov
inc
sub
xchg
insb
movsb
mov
pop
xor
scas
or
mulb
push
sub
jno
and
cmp
std
out
nop
sub
dec
xchg
mov
fwait
push
fwait
popf
out
adc
aad
xchg
iret
arpl
cld
imul
push
test
fsubs
xchg
sbb
and
xchg
ret
push
das
push
std
cmc
jl
inc
enter
insl
mov
pop
ret
push
pop
test
ficoms
push
push
add
sahf
adc
mov
enter
bound
pop
enter
sti
aad
push
inc
and
mov
jg
push
add
dec
ret
inc
jecxz
mov
mov
push
mov
add
add
xor
pop
fs
daa
lcall
xor
mov
sub
pop
aas
cld
xchg
xchg
hlt
jecxz
or
out
xchg
dec
test
rorl
mov
imul
xor
inc
dec
jg
test
lahf
popf
add
js
adc
sbb
jne
test
test
sar
and
std
lea
popf
pusha
std
inc
xor
movsb
sbb
dec
jb
xchg
xchg
xchg
jb
mov
pop
cmp
idivl
call
jmp
mov
dec
cs
inc
or
cmpsb
sbb
xor
mov
push
imul
mov
outsl
sbb
mull
adc
jg
outsb
pop
cmp
add
sub
inc
jg
jge
in
push
adc
xchg
rorb
mov
fidivrs
fcom
sbb
testl
mov
lods
js
in
ret
sbb
mov
add
xchg
adc
das
jle
ljmp
js
aam
and
incl
cmp
shrl
std
sub
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
jmp
and
mov
jmp
adc
addl
lds
leave
call
adc
sub
cmc
jecxz
fmull
jne
cmp
shll
mov
int3
and
xor
push
sarb
popf
ret
mov
sub
jns
ljmp
adc
dec
dec
dec
cmp
pop
arpl
sub
andl
movsb
sbb
out
fisttps
out
ret
push
sbb
fidivs
fiadds
pop
push
ja
xor
xor
daa
jno
nop
mov
nop
rol
mov
pop
fisttps
icebp
push
filds
fmuls
jecxz
mov
outsb
mov
push
lret
pushf
icebp
fldenv
jmp
nop
jae
add
dec
mov
lret
scas
mov
or
and
ret
popa
scas
aaa
adc
lods
sub
aaa
movl
jle
mov
mov
inc
xchg
cmp
icebp
jge
cli
cmpsl
into
xlat
push
add
pushf
jns
or
adc
mov
sarl
or
mov
cmp
push
fidivl
push
xchg
mov
dec
movb
cli
mov
dec
daa
inc
dec
imul
and
pushl
add
fwait
or
cli
aam
jae
outsb
xchg
ja
mov
mov
mov
lds
shlb
ljmp
mov
sub
popa
mov
call
xor
jp
cmp
mov
pop
pop
mov
mov
in
pop
xchg
cli
fmuls
xchg
jns
leave
hlt
push
ret
arpl
xor
ja
cmp
or
pop
sbb
cmp
mov
ds
shrb
mov
pop
push
in
or
movsb
cmpsb
nop
push
adcb
adc
or
sub
popf
xlat
rcrb
testl
ljmp
push
cmpl
loop
or
sahf
xor
nop
push
mov
stos
test
in
ficomps
xchg
ja
mov
es
jb
push
lods
sub
movsl
pop
sarl
clc
jp
repz
or
dec
je
mov
dec
test
orl
push
cmp
mov
cmpb
in
fidivrl
adc
nop
xchg
out
push
loopne
xor
push
mov
sti
les
sub
mov
sub
dec
es
mov
push
inc
xor
dec
pop
jo
fimuls
mov
ljmp
jecxz
xchg
pop
or
fdivrp
pop
popf
out
fcomps
cmp
shll
stos
lcall
xor
hlt
fs
cli
jge
repz
out
icebp
outsb
dec
lds
inc
leave
add
inc
out
push
in
dec
mov
push
sldt
mov
pop
and
push
cmp
pop
push
pop
mov
xchg
mov
addr16
pushf
popf
adc
add
sbb
jnp
dec
jmp
push
fistps
pop
push
sub
insb
jl
inc
inc
sarl
push
push
mov
mov
in
xchg
sbb
xor
jecxz
packsswb
enter
inc
dec
ds
stc
icebp
sub
mov
adc
iret
pop
dec
or
loopne
stos
popa
mov
outsb
push
sub
adc
in
xchg
jb
das
jmp
push
cmp
pop
mov
cmp
pushf
sub
mov
cmp
inc
sbb
pop
pusha
mov
or
popf
inc
and
fstps
dec
les
imul
add
and
push
push
cwtl
sbb
adc
jae
aaa
ja
push
cmp
lock
and
std
ljmp
sbb
xor
add
hlt
cmp
xchg
ret
jae
or
sbb
daa
loopne
int
xorb
std
jge
arpl
pop
ret
lds
pushf
adc
dec
pop
mov
xchg
jg
mov
hlt
inc
mov
shll
pop
in
jle
cmpsl
cmp
stos
cmp
dec
bound
lea
sub
repnz
fisttps
mov
inc
cmp
jno
outsb
push
pushf
mov
rcrb
jle
aam
mov
cmp
lret
outsb
push
lret
mov
hlt
nop
rol
mov
and
cmpsl
hlt
mov
clc
mov
outsb
outsb
mov
add
out
mov
sarb
ja
cmp
fcoml
push
das
ret
mov
rcr
loop
push
emms
push
ljmp
mov
and
sub
sbb
pusha
iret
out
inc
and
sub
insl
into
daa
or
push
test
lret
or
bound
jns
cmp
jno
imul
cmpsl
jnp
xchg
cwtl
das
add
sbbb
and
push
jmp
sbb
popf
mov
repnz
daa
rcll
js
sbb
mov
push
mov
in
in
js
adc
jle
pop
pop
dec
push
bound
add
mov
cmpb
scas
adc
pop
ljmp
add
out
lock
int
nop
cltd
out
das
push
iret
lods
adc
sbbb
dec
add
push
inc
aad
lcall
sbb
xor
mov
xchg
leave
mov
imul
neg
aas
xchg
lods
or
ret
push
rcll
pop
rclb
and
sbb
mov
subl
push
outsl
jbe
push
sbbb
arpl
jp
stos
cmpsl
pop
push
jae
cmp
push
mov
xchg
inc
add
daa
int
mov
mov
outsb
cli
js
mov
testb
and
dec
xor
call
add
push
pop
and
jg
mov
add
test
sbb
mov
mov
std
and
inc
fsts
sub
stc
fucomp
pop
mov
fdivrs
fs
dec
xchg
insl
xchg
inc
or
ljmp
push
mov
or
sbb
data16
xchg
les
repz
xor
test
into
or
or
adc
adc
loop
jo
xchg
iret
push
adc
addr16
xor
lcall
pop
scas
bound
loope
scas
mov
xor
ret
insl
and
jle
mov
dec
add
fldcw
punpcklbw
mov
sub
es
in
into
mov
fbld
cmp
xchg
jae
sub
push
mov
cmp
xchg
dec
fimull
pop
dec
sbb
addr16
push
dec
cmp
mov
test
cmp
adc
outsl
pop
cmp
aaa
rcrb
cmpl
es
mov
or
ficoml
frstor
mov
sti
jno
jb
hlt
jl
iret
outsb
rcrl
adc
cmp
inc
jl
pop
add
js
dec
inc
mov
out
push
mov
sbb
xchg
lods
mov
loope
lds
ja
dec
adc
inc
movsl
stc
jmp
test
xor
inc
fwait
iret
lds
jmp
inc
jg
gs
das
mov
das
insl
loop
add
xor
sbb
insl
sub
andb
mov
xchg
leave
mov
aas
cmp
inc
sbb
mov
lret
inc
pushf
lea
test
xorb
push
adc
inc
dec
test
pushw
cmp
insl
out
aad
add
icebp
and
xchg
cld
pop
pop
jecxz
xchg
inc
xor
out
js
mov
insb
and
into
inc
push
out
mov
xchg
scas
jns
mov
jl
rol
mov
cli
sub
pop
mov
push
pause
push
xlat
sub
xchg
xor
out
xor
inc
fs
rorl
cmpsb
fdivs
fdivl
xchg
pop
div
pop
push
adc
pop
mov
ss
jle
pop
es
call
mov
ljmp
xchg
addr16
sub
fdivrp
mov
popf
scas
clc
inc
cmpsl
pusha
and
add
jl
out
dec
inc
xor
add
dec
adc
lods
lea
out
and
lea
push
jmp
icebp
sbb
mov
pop
std
idivb
cmp
test
xchg
jne
mov
insb
cwtl
iret
xchg
outsl
adc
cmp
les
std
insb
adc
cwtl
dec
xchg
jmp
dec
out
cmp
shrd
shlb
push
mov
jae
sub
test
cmp
sbb
popf
outsl
sub
xor
push
stos
sbb
push
mov
into
jmp
and
shll
pop
adc
ja
in
jl
xchg
sti
pushf
adc
add
imul
stos
dec
xchg
push
and
and
add
mov
call
jne
fsub
out
sub
xor
stc
inc
jmp
lock
in
pop
shlb
repz
and
lds
movsb
dec
xchg
pop
jl
cmp
scas
fsubrl
cmp
repnz
xlat
mov
xchg
insb
lods
imul
pop
imul
jbe
adc
cmpsl
xchg
ret
jb
and
les
fildll
into
mov
pushf
sbb
sbbl
push
or
inc
mov
scas
into
pop
adc
lock
js
call
call
test
test
adc
in
and
and
and
ret
lock
and
jg
nop
and
mov
xchg
xchg
jg
mov
inc
lods
mov
and
xchg
icebp
adc
and
sub
mov
ja
sub
push
nop
mov
xor
and
inc
arpl
sti
cmpsl
ret
xchg
cmp
sbb
and
es
movsb
es
imul
call
add
xchg
aam
xor
mov
xchg
mov
mov
xor
out
into
inc
dec
aas
nop
add
addr16
mov
movsb
push
pop
and
sub
loope
and
xchg
imulb
mov
orl
sub
insb
sbb
dec
adc
shlb
lret
mov
and
out
xchg
out
adc
hlt
inc
add
lahf
push
shlb
mov
lret
aam
pop
xor
rclb
rcl
ficoml
pop
mov
mov
sub
lds
outsl
jmp
pop
mov
enter
dec
pusha
jg
out
iret
pop
xor
jnp
addr16
pop
xchg
jl
mov
dec
fists
enter
mov
push
add
push
mov
arpl
adc
repnz
mov
addr16
mov
xchg
add
mov
adc
or
repz
cli
pusha
dec
or
popf
sbb
xchg
cmp
call
daa
push
aad
jbe
jg
push
rorl
out
push
fisubs
push
mov
dec
popa
addb
fld
xchg
push
dec
push
mov
shrl
adc
lahf
jo
outsb
xchg
aaa
mov
add
sbb
filds
dec
and
cmp
sbb
sbb
rolb
lret
mov
jbe
inc
sub
sub
sbb
out
cmc
ja
aas
popf
test
push
out
mov
leave
jns
adc
cltd
mov
jle
jae
pop
xor
pop
ja
aas
fisubl
cmp
loop
push
mov
xor
inc
rolb
mov
jnp
xor
and
dec
xchg
xor
and
push
lock
cmpsl
add
jne
les
inc
into
aad
adc
imul
or
mov
scas
out
mov
into
xor
jb
cltd
push
or
jg
sub
es
into
imul
or
inc
ja
push
out
js
fimuls
push
test
fsubrp
add
fwait
jb
iret
shll
xor
inc
sub
cwtl
xchg
pop
out
add
in
pop
mov
mov
add
mov
inc
lods
jge
enter
js
daa
outsb
aaa
cmp
add
movsb
cmp
jne
push
inc
test
pusha
pop
inc
sbbl
ret
mov
jnp
push
lret
aam
push
push
inc
lea
fldenv
shll
push
imul
add
mul
cmpsb
cmpsl
inc
sub
bound
js
lahf
rcl
cmp
fiadds
sub
jb
mov
inc
push
cld
test
pop
jo
lret
repnz
das
icebp
test
scas
lahf
xor
sbbb
mov
sbb
jb
sub
xor
mov
lea
sbb
push
or
int
addr16
sbb
inc
sub
push
mov
pop
popa
inc
mov
das
in
addr16
rep
ljmp
xor
inc
cmpl
popf
int
pop
rclb
xor
pop
into
call
adc
jecxz
ja
pop
loopne
or
gs
inc
int3
rcr
repnz
inc
add
js
dec
jp
out
push
adc
pushf
leave
push
add
fwait
xchg
test
lfs
dec
out
adc
or
mov
aaa
xchg
fadds
mov
andl
dec
xchg
xchg
cmp
inc
mov
movb
xchg
push
addr16
outsb
adc
fsubr
and
jno
sahf
push
ljmp
fdivrl
fstl
xor
in
adc
cmpsl
addl
sahf
mov
jb
cmp
es
popa
jle
xchg
nop
out
daa
sbb
lcall
pushf
add
cs
in
xor
out
add
daa
dec
imul
xchg
or
push
xorl
xor
push
cli
jge
ja
mov
push
test
mov
sub
jmp
ds
test
mov
das
dec
int
jl
cmp
orb
add
push
pop
and
fs
aaa
pop
stos
mov
testl
mov
mov
dec
or
mov
fs
mov
push
xchg
push
lret
xchg
mov
test
shlb
cli
cmpsl
js
adc
movb
int3
fstl
in
addb
enter
call
lds
inc
rorb
int
push
inc
xchg
movsw
dec
mov
push
adc
push
rclb
mov
fwait
cwtl
arpl
gs
xor
push
mov
mov
jle
sar
adc
pop
out
aaa
scas
iret
les
or
and
insl
push
cmc
cwtl
pop
scas
fisubrl
pop
test
mov
shrb
mov
xlat
mov
push
inc
fstpt
fldcw
and
aas
jae
inc
mov
sbb
mov
mov
mov
push
dec
int
mov
divb
mov
ret
inc
out
cmp
jo
movsl
ds
cmc
pushf
mov
ss
icebp
je
test
js
loop
xchg
sub
dec
dec
pop
jo
rolb
mov
push
loopne
or
xor
lock
mov
arpl
adc
push
popa
mov
in
imul
leave
pop
shll
or
icebp
xchg
add
or
into
jno
call
mov
addr16
jp
sbb
mov
imul
leave
aaa
xchg
jmp
dec
fnstenv
es
lods
sahf
ss
add
rol
adc
inc
gs
mov
add
aam
mov
leave
hlt
push
mov
push
or
push
test
push
test
sbb
aas
sub
dec
lods
pop
cld
sbb
negb
push
inc
popa
loope
fdivr
arpl
std
repz
sub
xchg
add
loope
ds
cmpsw
adc
out
mov
mov
xchg
lock
je
imul
mov
das
dec
test
mov
mov
cmpsb
div
mov
pop
mov
xchg
push
mov
inc
aaa
or
iret
stos
ds
and
inc
insb
pop
hlt
mov
cmp
ja
push
mov
mov
data16
cwtl
mov
xchg
and
imul
mov
add
lock
lahf
push
xchg
adc
push
jmp
mov
push
and
dec
hlt
adc
out
xchg
push
jp
fsts
push
roll
mov
jno
inc
ljmp
int
sbb
inc
mov
sub
int
mov
pop
movsb
fdivl
imul
xlat
jns
sbbb
aad
les
pop
movsl
pop
sbb
jmp
fisubrs
dec
fdivl
inc
fnstsw
hlt
push
hlt
cmp
test
icebp
clc
test
push
rolb
testl
jle
cs
fcoml
xchg
sbb
nop
pavgb
jne
and
popf
test
inc
test
cmp
lahf
jmp
xchg
jecxz
xorl
cld
lahf
arpl
call
inc
mov
push
fimuls
xchg
cmc
gs
das
imul
xchg
sbb
pop
dec
jo
pop
loopne
xchg
inc
jmp
in
lods
add
movsb
push
frstor
xchg
leave
in
lcall
jnp
sbb
test
iret
rorb
outsl
add
push
loopne
hlt
lcall
mov
mov
dec
dec
lret
push
sbb
pushf
scas
roll
xor
fwait
jne
rcll
sub
clc
movsl
imulb
cmpsl
sub
adc
iret
mov
mov
and
orb
mov
std
test
jle
pop
aaa
sub
cmp
cmp
cltd
les
mov
push
sbb
or
mov
ret
pop
mov
xchg
lods
and
scas
inc
lahf
sbb
jbe
push
test
arpl
rolb
aas
scas
mov
push
mov
pop
jl
mov
adc
icebp
es
push
inc
ret
mov
jle
lret
push
cmp
divl
adc
adc
fidivrs
call
add
inc
ss
call
and
scas
sub
popf
jb
sti
loop
ds
fcmovb
popf
jl
ss
cmp
dec
adc
inc
neg
push
sub
dec
dec
fiadds
adc
inc
int
fwait
jg
inc
pop
js
insb
fstpl
xchg
fcos
bswap
sub
and
cld
cmp
ret
push
pusha
mov
xor
cmpsb
jb
sbbl
mov
pop
cld
stos
or
jl
pop
inc
adc
cmp
pop
mov
es
mov
add
lret
push
mov
aam
inc
pop
inc
int
mov
imull
cmpsl
mov
mov
mov
pop
jmp
jne
mov
call
sahf
dec
dec
sahf
pop
push
jecxz
pop
sub
pop
xchg
sub
lock
jmp
clc
mov
jbe
push
or
lock
pusha
xchg
lds
push
ret
fwait
inc
imul
rcll
out
or
pop
lods
leave
in
push
mov
sub
cmp
jnp
or
mov
in
ja
xchg
adc
fwait
mov
out
inc
das
adc
xchg
lcall
fs
popa
xlat
xor
fidivrs
xchg
or
sbbl
push
cmpsl
int
pop
push
jecxz
inc
icebp
mov
shl
int3
into
loop
mov
xor
aaa
pop
aam
sub
dec
sbb
sbb
mov
jb
rcrl
push
les
cmpsb
add
mov
jae
add
rolb
ret
cltd
or
inc
iret
nop
data16
adc
inc
loop
jmp
xchg
dec
jb
push
jnp
pop
xlat
cwtl
push
insl
stos
popf
or
dec
sbb
sti
es
cmp
mov
pushf
aas
inc
mov
xorb
dec
xor
mov
testb
mov
sbb
xorl
inc
subl
imul
mov
xchg
xchg
divl
xlat
jecxz
pop
fcoms
bound
pop
mov
ss
mov
fmul
push
mov
mov
test
xor
les
jecxz
mov
lcall
xor
gs
cmp
push
les
fcmovb
dec
add
lea
pop
xchg
mov
pop
sbb
push
cmc
cmpsb
push
inc
cmp
lock
pop
mull
mov
pop
mov
sub
es
cmpb
loop
out
scas
sbb
sbb
hlt
sbb
clc
jbe
sar
je
insl
pop
push
inc
lds
xchg
xchg
lret
push
xchg
aam
movsb
sbb
movsb
cmpsb
xchg
sub
fcoml
xchg
fdivl
sbb
gs
adc
push
inc
push
mov
sti
ja
clc
pop
jbe
loop
mov
jne
mov
xor
lea
sub
leave
and
jp
jg
pop
fcoml
jo
push
rclb
dec
push
jmp
push
das
pop
imul
stos
pop
adc
mov
xor
cli
lret
adc
je
in
pop
hlt
addr16
lods
enter
or
testb
and
sbb
out
lods
aam
mov
xchg
mov
cs
jecxz
jb
xor
mov
pop
push
pop
loop
cs
mov
xchg
jb
cs
out
ljmp
ret
xlat
mov
cwtl
lods
push
or
jl
mov
xor
sbb
dec
cmp
jae
pusha
mov
cmpb
lcall
push
repz
and
and
pop
lcall
add
ret
or
lea
xor
movl
loope
xchg
loopne
jnp
imul
mov
cwtl
pop
xchg
in
test
dec
push
in
mov
mov
sub
jno
jle
aad
arpl
jmp
pop
or
dec
sub
pop
sub
jbe
jp
inc
cmp
push
int3
subb
outsb
loopne
add
or
sub
shlb
and
inc
jl
jns
jmp
mov
out
mov
add
lock
inc
repz
cs
inc
sub
jg
cmp
out
ljmp
adc
xchg
cmpb
fdivl
out
push
insb
outsb
sub
mov
mov
fidivl
repz
mov
shufps
sub
xlat
sub
movsl
dec
cmp
cmpsb
add
push
arpl
mov
lret
sub
cmpsb
sub
divl
ja
push
ret
test
popf
push
scas
or
ds
xor
fnstcw
lret
push
pusha
mov
popf
mov
mov
adc
test
fidivl
andl
mov
xchg
rorl
sub
xlat
jne
movsl
cmpsl
imul
pop
jnp
jp
dec
ret
sub
cmp
in
mov
dec
es
cmpsb
cmp
lods
xchg
inc
pop
or
push
mov
add
divb
shrb
out
sbb
cmpsb
jmp
push
xchg
mov
fwait
xor
rcll
sbb
mov
fildll
hlt
adc
scas
loope
not
push
das
mov
add
loope
fidivs
mov
shll
lods
pop
xchg
pop
dec
popa
test
xchg
mov
ficomps
push
jmp
xor
mov
mov
aam
fcmovnu
mov
aam
jecxz
jg
mov
adc
fdivs
push
jmp
add
add
or
jns
mov
and
repz
inc
xchg
pop
out
fsubrs
and
jg
jg
aam
add
mov
cmp
mov
push
xchg
sahf
bound
jp
xchg
sub
xchg
or
addr16
xchg
inc
sub
les
punpckhbw
cltd
dec
test
out
sub
push
daa
xchg
cwtl
ljmp
mov
imul
subl
xor
cs
loope
and
imul
xchg
push
add
nop
not
adc
mov
dec
rcll
jg
cmp
xor
xchg
cmpsb
mov
or
mov
cli
add
add
mov
fdivl
mov
ljmp
mov
sarl
jne
fidivrs
mov
add
cmp
dec
adcl
jnp
jns
cs
push
aas
push
jnp
daa
push
into
sub
in
std
and
testl
mov
adc
and
sub
lds
cmp
dec
sub
xor
pop
jo
adc
std
sbb
aas
jae
loop
or
cmp
mov
jg
lahf
andb
call
and
call
cmp
mov
outsb
leave
push
pushf
aas
push
enter
cltd
lods
dec
int3
unpcklps
mov
sbb
arpl
fs
lea
cmpsb
test
adc
inc
ljmp
add
pushf
arpl
dec
sub
sbb
mov
shll
test
jns
aam
scas
xor
and
adc
push
cmpsl
inc
sbb
fs
push
add
push
push
test
or
mov
call
or
in
stc
push
jbe
popf
jmp
push
xor
in
add
push
add
test
pop
pop
jae
push
mov
hlt
int
ljmp
lds
out
cmp
fnstenv
or
call
test
cmpb
daa
outsb
ret
sbb
fwait
enter
mov
sub
sbb
ss
cmp
ja
lahf
push
jl
adc
inc
lods
sub
cltd
fs
aam
mov
lods
adc
pop
js
mov
push
das
insl
dec
bound
mov
lods
mov
dec
bound
roll
cmpsl
je
dec
rcrl
cmp
xchg
iret
dec
fbstp
icebp
adc
fisubrl
sub
lcall
bound
sub
push
leave
iret
jecxz
and
dec
xchg
pusha
gs
pushf
fs
test
test
lods
mov
mov
mov
mov
jmp
mov
movsb
sub
jecxz
add
test
inc
and
push
mov
mov
rorl
jbe
cmp
inc
and
outsl
pop
popf
add
or
xor
sbb
out
sub
sub
mov
jne
fidivrl
clc
outsl
or
mov
pop
gs
leave
push
xchg
mov
cli
mov
adc
aaa
loopne
adc
sub
mov
lds
jo
dec
sub
cmpsb
hlt
out
push
dec
aas
pop
loopne
sub
popa
int3
cmpsb
xchg
xchg
inc
mov
in
sub
or
xor
aam
je
clc
es
nop
sbb
test
stc
mov
das
fsubr
ljmp
adc
mov
stc
test
mov
push
or
and
in
sbbb
es
std
aad
mov
das
adc
cmp
push
clc
mov
push
arpl
sbb
or
clc
or
imulb
and
xor
out
mov
arpl
nop
push
aam
push
fsts
sbb
pop
loopne
scas
inc
xchg
popf
and
mov
push
xorb
xor
mov
jo
enter
out
mov
sub
lret
adc
add
inc
mov
mov
jno
push
jle
push
push
aad
lods
mov
pop
jp
lret
xlat
mov
popf
cli
push
popf
xchg
cmp
inc
pop
xchg
and
in
lcall
push
ret
push
fwait
add
fiadds
or
adc
xor
mov
mov
out
lret
out
inc
jno
adc
mov
mov
in
jae
aad
add
movsb
jge
or
outsb
xchg
testb
xchg
cli
xchg
inc
nop
sub
jae
in
mov
cmc
out
lea
into
loopne
outsb
push
sbb
std
into
mov
mov
jl
repnz
or
rclb
xor
rcrl
fdivrs
mov
mov
lea
aad
jne
lahf
ja
sti
mov
jmp
mov
mov
push
outsl
xor
dec
aaa
ss
mov
out
cmpsl
inc
dec
mov
inc
push
scas
cwtl
scas
jmp
dec
test
fdivrl
lcall
xchg
daa
push
inc
movsl
in
ret
jmp
xor
xlat
scas
aas
jecxz
aaa
mov
mov
testb
add
push
mov
adc
ret
and
xor
nop
or
add
into
cmp
pop
lret
cmpb
mulb
clc
mov
lods
xchg
shl
lods
pop
cmp
dec
mov
fnstsw
cli
lahf
jmp
inc
jecxz
dec
faddl
sub
and
cltd
js
insl
enter
icebp
push
mov
rol
xor
xchg
inc
insl
jge
les
adc
lcall
push
mov
sbbl
add
jl
sbb
xlat
push
stos
or
sub
dec
jbe
sbb
divl
pop
or
xchg
aam
lods
stc
outsb
je
dec
mov
sub
cwtl
mov
fdivrs
mov
sbb
xor
mov
sti
adc
leave
divb
mov
adc
cld
lret
repz
cmp
sbb
xchg
dec
clc
loopne
ficompl
mov
push
shll
adc
dec
mov
aaa
jp
fdivrp
lcall
pop
int3
shlb
xchg
add
push
test
xchg
shlb
je
in
stc
pop
dec
mov
popa
dec
jno
in
jl
stos
sub
jb
inc
popf
cs
bound
push
inc
dec
push
and
and
or
or
js
loop
stos
sub
outsl
mov
mov
sbb
xor
sbb
fs
mov
jg
dec
xchg
sbb
push
lret
pop
int
int3
inc
mov
loop
pop
dec
stc
jnp
inc
mov
push
daa
scas
outsb
sbb
in
mov
fucomi
cwtl
aad
jno
push
and
and
pop
mov
cld
mov
jns
jg
fistpl
mov
int3
xor
sbb
jecxz
mov
lods
fdivrl
adcl
es
xlat
cmp
bound
or
test
jmp
dec
outsb
iret
stos
not
dec
mov
pop
fsts
sbb
shr
cmp
pop
dec
popa
mov
pop
hlt
out
cld
lret
ja
fildl
jnp
dec
mov
subb
mov
mov
shr
movsb
xor
daa
jno
loop
xchg
adc
loope
aaa
mov
push
stc
mov
xor
bound
jp,pn
pop
push
fsubl
stos
out
mov
stc
or
ljmp
pop
loopne
dec
add
out
into
inc
lret
cli
leave
nop
sbb
call
mov
sbb
jl
xlat
add
ficomps
movl
or
sbb
sbb
test
scas
cmp
dec
rorl
sbb
pop
add
in
dec
mov
mov
daa
or
dec
addr16
push
xor
and
pop
adc
xlat
test
mov
in
outsl
iret
gs
sbb
enter
and
xor
jecxz
fmuls
in
fisttpll
loop
pop
js
pop
xorb
cld
mov
pop
ss
lods
sub
xchg
fsubl
out
inc
les
push
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
jmp
sbb
aam
mov
cltd
push
inc
popa
xor
fistl
addl
mov
das
fs
mov
jnp
and
sahf
and
nop
loopne
lds
outsb
fcom
push
inc
ljmp
lds
aaa
ljmp
jns
add
pop
sahf
or
sub
test
or
push
fwait
sub
sub
cmp
dec
lock
mov
push
js
jb
and
and
in
jl
xchg
or
pusha
dec
test
or
stos
out
add
add
aas
test
es
pop
rcl
lret
pusha
xchg
pop
xchg
xchg
in
add
testl
inc
sahf
fistl
dec
mov
or
leave
daa
inc
push
arpl
popf
into
jo
call
les
dec
scas
cli
rcrl
push
mov
ja
or
push
xchg
shrb
outsl
xor
gs
and
push
inc
outsb
in
dec
test
cmp
jnp
inc
mov
sbb
jg
cmp
repnz
mov
outsb
push
mov
lods
adc
and
push
stc
push
scas
jbe
jo
inc
mov
rorb
jno
ds
jl
mov
add
sbb
sub
das
int
or
jae
xor
jo
divb
cmp
lret
sub
cmpsb
jge
cmpl
wrmsr
fists
dec
mov
ljmp
lods
jg
xchg
dec
aas
sbb
stos
mov
in
je
aaa
sti
sbb
fwait
mov
mov
mov
dec
test
idivl
stc
jp
bound
pop
adc
sub
lods
mov
rclb
jmp
movsb
add
inc
jb
rcr
js
add
dec
jge
dec
movsl
cmpsl
jnp
xchg
nop
adc
mov
adc
jb
adc
out
aaa
repz
icebp
je
jne
cs
ret
xchg
push
sub
fisubl
scas
pop
sbb
movsl
leave
xchg
and
shlb
test
xchg
push
in
sub
pop
fwait
cmp
pop
pop
xchg
fucomp
mov
dec
and
adc
sbb
mov
fdiv
sbb
cmpsl
ds
mov
and
jb
mov
xchg
jg
je
pusha
js
into
lock
mov
dec
pop
inc
jno
stos
out
push
fwait
xchg
cmpsl
mov
data16
push
sub
push
jo
mov
push
jns
push
cmp
mov
push
xor
addr16
push
fcoms
ret
repnz
pop
lcall
push
fstl
popa
fs
ja
int3
jne
fs
jb
mov
leave
jb
gs
mov
sbb
xor
ret
cltd
jle
fstp
and
xor
leave
cmp
idiv
int3
push
jo
movsl
jae
into
imul
arpl
mov
rorl
push
fcompl
test
fucomp
sub
cmpl
adc
sbb
and
pop
xchg
outsl
mov
andps
pop
mov
inc
repnz
je
push
mov
jns
lods
aas
test
adc
in
pop
data16
jne
sub
jle
loop
sbb
idivl
sbb
xchg
std
xor
daa
inc
mov
mov
cmp
push
mov
and
aad
sub
daa
cmpsl
ret
or
hlt
adc
mov
sbb
and
push
pop
insl
je
bnd
enter
or
jnp
bound
cld
mov
xor
mov
into
insb
dec
loop
push
lock
and
mov
lods
rcrb
pop
push
into
out
jmp
push
cmpb
movsl
mov
mov
icebp
btr
xor
dec
decl
sbb
rclb
movsl
mov
dec
fisttps
ret
test
cmp
or
rcrb
jno
mov
xchg
pop
jnp
jecxz
xor
mov
fldl
mov
inc
cmp
xor
pop
cmp
rorl
xor
cwtl
cmc
stos
es
dec
inc
cmpsl
push
insb
cltd
jb
int
pop
push
lret
jbe
insl
cmp
testl
int
sbb
stos
or
mov
outsl
ja
mov
hlt
push
pop
push
sbb
je
loope
pop
dec
jge
and
scas
stos
or
cmc
arpl
sub
cmp
mov
cmpsl
xchg
repz
push
sub
repnz
insl
inc
gs
add
lahf
jnp
sub
adc
loop
fs
shlb
bound
pop
js
adc
aad
jecxz
inc
and
add
mov
bswap
shlb
mov
push
push
pop
ret
in
loope
cmp
jb
mov
and
pushf
inc
int
subw
pop
out
cwtl
inc
lret
jp
xor
push
ds
dec
data16
cmpsb
int
test
fs
jge
pop
sarb
data16
mov
push
xor
pop
test
mov
repz
rcrl
cmpsb
mov
mov
std
xor
lret
xor
adc
aaa
int3
fs
dec
inc
jl
aad
inc
push
out
adc
call
loope,pt
outsb
sub
push
xchg
mov
mov
ffree
lea
pop
outsb
push
sub
add
fcomip
insb
cmpsb
mov
push
dec
push
xchg
aam
mov
ljmp
or
lret
xor
inc
sub
dec
sbb
loop
insl
cs
in
aas
sarl
bound
xchg
push
mov
cmp
call
push
xchg
fstps
pop
fidivl
sub
pop
sbb
xchg
jl
arpl
adc
sub
mov
xchg
lods
pop
popf
imul
in
adc
sbb
xlat
cmp
in
clc
mov
aaa
or
imul
loop
jne
ja
pop
cwtl
aas
sub
xchg
les
jnp,pt
mov
movsb
mov
mov
push
inc
pop
xchg
popa
add
out
push
cld
sbb
jnp
add
cmp
mov
add
sub
popa
es
fstp
sub
cli
jecxz
inc
push
mov
mov
mov
stc
adc
mov
ss
add
call
out
xor
mov
xchg
or
sbb
and
inc
call
sbb
cs
into
add
xchg
xor
mov
adc
flds
std
xor
loop
inc
pusha
push
xchg
in
mov
aas
out
jg
sarl
in
mov
daa
loope
xchg
test
divb
cmpsl
fstl
lods
mov
into
sbb
cmpsl
out
cmpsb
ds
rol
lea
inc
inc
inc
in
or
in
outsl
xchg
movsl
cwtl
popf
arpl
stos
xlat
subb
mov
arpl
sub
dec
add
movl
mov
mov
jae
jmp
fwait
push
gs
dec
outsb
jle
lcall
adc
dec
pop
mov
fwait
lds
pushf
fnsave
test
loop
dec
sbb
mov
lds
outsb
imul
fwait
ret
add
or
lock
push
hlt
in
jl
dec
mov
das
inc
jb,pt
xor
mov
xchg
sub
mov
mov
insb
mov
adc
inc
mov
mov
js
inc
stos
cwtl
cmpsb
pop
scas
cmp
pop
arpl
popl
out
movsb
int3
loop
cltd
push
mov
loop
lods
test
in
pushf
shrl
lods
in
mov
out
popa
mov
nop
nop
push
mov
xchg
lret
cmp
sbb
fistps
push
and
pop
jns
jns
or
dec
mov
mov
movsb
ja
mov
pop
and
push
adc
adc
or
insl
mov
cmpl
rclb
ret
mov
adc
das
stos
cmpb
scas
lods
mov
inc
sbb
insb
or
mov
push
repz
out
cmp
enter
pop
lcall
mov
inc
or
cli
or
inc
or
lods
xor
cmp
or
pop
ds
idivb
jp
xchg
sahf
mov
sbb
add
incb
mov
ljmp
repz
jb
or
push
mov
dec
insb
mov
cmp
dec
xor
rcl
aaa
and
inc
sbb
mov
dec
and
pop
or
push
aas
ss
mov
call
or
pop
and
cmp
push
adc
dec
lahf
sbb
cltd
gs
lret
xrelease
mov
loopne
jne
jmp
sub
leave
jne
add
push
xlat
sub
adc
mov
orb
into
out
sub
mov
aaa
mov
push
outsl
dec
adc
or
mov
xor
inc
dec
test
and
pop
stos
inc
sbb
cmc
data16
addb
aam
sete
jns
cmp
decl
lds
push
inc
push
jmp
xor
adc
pop
xchg
cmpsb
lds
cmpsl
mov
or
fsubs
add
sar
movsb
and
add
mov
inc
pop
sbb
xor
jb
mov
jmp
xchg
jecxz
xchg
cld
sti
mov
dec
pop
fdiv
mov
sub
adc
out
ds
adc
fnstcw
mov
lcall
jno
data16
dec
fdiv
ret
iret
rcr
or
popf
mov
imul
loopne
sbb
ss
insb
shr
ja
lret
or
or
cli
push
jno
cwtl
mov
xchg
pushf
mov
sarl
aam
imul
jns
pop
mov
inc
mov
mov
ret
cld
sarb
mov
daa
insl
push
ret
xor
negb
les
pop
xchg
lahf
pop
jg
popl
leave
loop
addr16
lret
mov
int3
loope
pop
out
mov
loop
push
cmpsl
add
xchg
lret
or
push
cmp
mov
pop
and
iret
stc
and
popa
or
mov
mov
gs
mov
sbb
jl
sub
mov
inc
cmc
jge
les
lock
sbb
movsl
and
mov
pop
xchg
frstor
or
js
mov
mov
inc
rol
in
mov
adc
xchg
sbb
lods
sbbl
repz
push
pop
cmc
mov
inc
shll
test
pop
xor
push
sbb
loop
mov
mov
or
adc
loop
cmpl
push
cmp
popa
les
and
ss
add
xlat
ret
aas
outsl
or
mov
sahf
add
xchg
dec
jbe
movl
fidivs
lcall
xchg
adc
pop
cmp
mov
in
mov
inc
mov
out
les
ja
cmp
sub
cmp
xchg
mov
push
bound
cli
aaa
pop
jg
lock
and
out
mov
std
movsb
pop
mov
std
fidivrl
testb
mov
repnz
idivb
test
or
into
pop
stos
fdivrp
sti
and
into
xchg
call
mov
push
jecxz
sub
lahf
divb
push
int
jae
inc
enter
mov
enter
lods
aas
cltd
cmpsl
mov
mov
in
sti
xchg
sub
ljmp
movsl
and
mov
mov
inc
add
jne
add
pop
loop
adc
inc
stos
imull
mov
test
or
sbb
std
and
addr16
lods
in
in
das
daa
fnstcw
fidivs
cmp
adc
sbb
cwtl
xorb
and
in
insb
out
mov
and
and
loope
push
nop
sti
subl
inc
sub
push
imul
lock
stos
cmp
fbld
or
push
adc
orl
jbe
pop
test
mov
call
std
enter
sbb
int3
movups
ja
addr16
push
mov
jns
sbb
fwait
or
push
out
pop
mov
push
inc
ss
and
and
or
in
push
incb
cwtl
xchg
cmp
jmp
movsl
push
add
mov
and
add
mov
push
add
sbb
mov
sbb
shll
mov
rcl
cmpsb
xor
stos
in
mov
dec
sub
jecxz
addr16
inc
and
insl
jp
mov
sbb
out
mov
xchg
cmp
dec
xchg
fstl
bound
lahf
pop
out
sbb
or
mov
lcall
test
rcrl
mov
call
xchg
xor
cmp
das
imul
adc
mov
cmp
cmp
nop
dec
pushf
cmp
sbb
dec
lds
je
test
test
lahf
xor
scas
test
push
test
push
push
outsl
or
lea
or
mov
aad
fsubr
pop
cltd
jae
iret
gs
jle
lahf
inc
sbb
add
lahf
stos
dec
adc
or
xchg
mov
stos
mov
and
xchg
mov
xchg
leave
mov
fldcw
imul
pop
and
std
sti
ret
mov
repnz
lods
xor
and
jp
xchg
jae
fisubrl
pop
test
push
mov
dec
cmp
pop
push
es
test
xor
and
mov
pop
jnp
push
dec
pop
xorb
pop
or
fnstcw
cmpsl
mov
sub
adc
mov
imul
mov
mov
mov
aaa
add
loopne
xchg
jecxz
sbb
icebp
adc
add
add
push
jno
idivb
ret
stos
xor
out
jge
xor
push
int
jmp
fs
inc
inc
arpl
xchg
fdivrs
mov
ljmp
xchg
pushf
aas
push
jb
sub
mov
das
and
in
fcompl
xchg
lret
lret
mov
adc
mov
inc
mov
test
in
mov
adc
pmullw
pop
or
jle
mov
dec
shlb
adc
mov
mov
pop
inc
pop
in
cmp
adc
xor
cmp
pushl
xchg
mov
clc
mov
mov
outsb
push
sbb
add
shrl
icebp
arpl
popa
dec
sub
ret
xor
cld
sub
je
sahf
aad
and
cmpsb
ds
nop
clc
mov
pop
addr16
mov
or
and
sbb
mov
dec
pop
jmp
and
jae
sbb
rcll
fiadds
fcompl
pop
adc
mov
hlt
inc
push
ss
mov
pop
std
jne
ds
pop
jecxz
imulb
sbb
fbld
or
sbb
xor
inc
fidivs
stc
inc
insl
mov
inc
int3
inc
out
dec
mov
scas
cs
addr16
adc
mov
out
push
mov
xor
mov
setne
jae
sbb
arpl
aas
and
mov
inc
pop
add
cs
nop
and
scas
dec
shlb
popa
add
and
sub
push
mov
nop
testb
scas
sahf
sub
pop
insl
jbe
xor
mov
and
outsl
pusha
cmpsl
xor
mov
notb
mov
or
inc
cmp
ja
cld
mov
scas
add
stos
aaa
pop
mov
ret
cld
test
es
pop
dec
pop
jno
mov
xor
enter
stos
jp
iret
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
sbb
push
adc
mov
incl
mov
movl
mov
inc
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jg
jmp
call
xor
add
dec
mov
jmp
movl
mov
mov
xor
xor
xor
sub
or
mov
xorl
addl
mov
sbbl
mov
addl
sub
adc
mov
add
orl
adcl
mov
adc
mov
sub
xorl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
adc
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
movl
sbb
lea
sub
mov
movl
andl
lea
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
neg
mov
xor
orl
add
mov
xor
xor
xor
or
sub
sub
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
mov
dec
mov
jmp
mov
adcl
mov
andl
add
push
mov
andl
mov
mov
sbb
mov
xor
neg
mov
add
movl
cmp
je
movl
mov
movl
jmp
sbb
mov
xor
adcl
push
add
add
xor
mov
xor
mov
adcl
add
movl
push
movl
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
xor
mov
andl
xor
add
subl
xor
orl
add
movl
adc
notl
xor
xor
cmp
jne
cmp
jne
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
mov
dec
mov
jmp
add
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
jmp
mov
mov
xor
notl
add
imul
dec
mov
xor
add
cmp
mov
movl
je
mov
add
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
movl
sub
movl
push
push
adcl
push
xor
orl
push
call
addl
mov
sbbl
lea
push
sbbl
push
orl
call
movl
cmp
movl
je
xor
movl
jmp
movl
mov
push
lea
xorl
push
push
push
xorl
push
call
imul
cmp
jne
subl
lea
adcl
push
push
call
movl
cmp
movl
jne
andl
pushl
push
call
addl
mov
or
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
adc
lea
mov
or
mov
lea
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
addl
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
mov
negl
mov
xor
xor
xor
mov
mov
mov
mov
andl
mov
subl
movl
adcl
mov
xor
movl
mov
addl
xor
subl
add
movl
jmp
lea
push
decl
push
adcl
call
movl
cmp
jne
addl
push
andl
lea
push
push
push
push
call
orl
imul
movl
cmp
movl
jne
orl
lea
push
push
addl
call
movl
cmp
movl
jne
xorl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
adcl
xor
lea
push
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbbl
xor
lea
push
mov
pushl
subl
call
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
lea
movzwl
xor
mov
mov
adcl
xor
xor
add
mov
xor
lea
movl
mov
movl
cmp
jbe
or
mov
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
xor
mov
and
mov
addl
sub
adcl
xor
subl
mov
andl
lea
mov
lea
mov
xorl
lea
subl
push
push
subl
call
movl
cmp
jne
push
lea
push
andl
push
subl
push
adcl
push
addl
call
xorl
imul
cmp
movl
jne
lea
adcl
push
andl
push
xorl
call
cmp
movl
jne
sbbl
lea
push
push
call
cmp
movl
jne
adcl
push
andl
lea
xorl
push
subl
push
push
push
sbbl
call
imul
cmp
movl
jne
andl
lea
negl
push
push
xorl
call
movl
cmp
jne
lea
xorl
push
andl
push
subl
call
movl
cmp
movl
jne
adcl
push
lea
push
adcl
push
subl
push
subl
push
adcl
call
imul
cmp
movl
jne
subl
lea
push
adcl
push
xorl
call
movl
cmp
jne
xorl
lea
push
push
andl
call
movl
cmp
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
imul
cmp
movl
jne
xorl
lea
push
orl
push
call
cmp
movl
jne
subl
lea
addl
push
push
adcl
call
cmp
jne
orl
push
orl
lea
push
adcl
push
andl
push
push
call
orl
imul
movl
cmp
movl
jne
adcl
lea
push
andl
push
subl
call
movl
cmp
jne
adcl
lea
push
sbbl
push
adcl
call
cmp
jne
push
movl
lea
addl
push
notl
push
push
orl
push
call
imul
cmp
jne
lea
push
push
xorl
call
cmp
jne
xorl
lea
andl
push
push
decl
call
movl
cmp
movl
jne
xorl
push
addl
lea
push
push
andl
push
push
call
imul
cmp
movl
jne
sbbl
lea
xorl
push
push
orl
call
movl
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
xor
mov
sub
add
movl
mov
mov
sub
or
mov
push
mov
movzbl
add
xor
mov
xorl
push
sbbl
mov
add
cmp
movl
je
mov
and
mov
addl
xor
xorl
xor
sbbl
add
adcl
add
adc
movl
xor
sbbl
mov
incl
push
xor
xor
neg
xor
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
orl
mov
xor
add
mov
sub
sub
movsbl
mov
sub
movzbl
or
mov
andl
xor
cmp
movl
jne
xor
xor
xor
mov
movl
push
mov
adc
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
sub
mov
andl
mov
movl
and
push
mov
or
mov
add
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
push
push
inc
push
inc
jg
and
pcmpeqb
cs
sbb
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
