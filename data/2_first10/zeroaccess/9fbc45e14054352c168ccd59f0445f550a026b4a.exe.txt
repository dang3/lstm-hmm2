push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
sbb
jl
pop
jl
adc
and
popa
pusha
mull
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
jg
or
ljmp
xor
ljmp
adc
insl
loope
adc
popf
inc
fisubs
shrb
test
mov
mov
rorl
inc
test
mov
push
test
dec
xchg
andb
or
sti
or
pop
pop
imul
sbb
push
fisubrl
mov
sbb
rcrb
sti
outsb
cmp
add
sub
mov
ficoml
movsl
mov
xor
fldenv
push
mov
xchg
push
or
ljmp
jae
push
test
push
stos
sbb
popf
pushf
sub
jp
cmc
ret
fcompl
sub
add
pop
xchg
inc
outsb
pop
jnp
push
lcall
push
cltd
mov
jge
stc
addr16
dec
mov
sbb
adc
pop
inc
sti
cmp
inc
jp
dec
cmp
sub
pop
sbb
fldt
aam
lea
sahf
mov
xor
xchg
into
ljmp
mov
mov
or
mov
insb
pushf
dec
ss
fcom
out
adc
sbb
pushf
sahf
nop
es
andl
in
jae
jbe
repz
bound
fimuls
out
daa
cmc
test
int
mov
popa
ret
push
into
mov
shlb
lock
mov
xor
jl
add
fisttps
pusha
mov
mov
stc
jmp
jge
stc
out
scas
subb
mov
scas
arpl
jl
popa
fwait
push
cmpsl
cmc
lea
in
sahf
mov
roll
and
imul
adc
adc
jle
xchg
jmp
in
push
notb
subl
pop
dec
mov
jbe
inc
cmp
out
mov
in
test
fisttpll
xor
mov
les
arpl
fldl
ficoml
jecxz
movsb
nop
cli
repz
rcl
adc
es
repnz
and
in
arpl
and
cli
mov
push
lret
call
jno
xor
add
scas
imul
mov
inc
ds
jb
and
jno
int3
outsb
sbb
jge
das
dec
cmc
mov
mov
pop
das
fnstcw
rcrb
dec
lret
ss
fucomp
int3
mov
lret
pop
adc
adc
adc
push
cmpsb
pusha
adc
mov
add
adc
lods
mov
mov
std
jno
stos
imul
imul
or
mov
in
push
popf
xchg
cld
imul
test
lock
sbb
mov
dec
popa
and
fidivs
sahf
adc
jmp
repz
sub
jmp
xorl
clc
inc
add
jl
ja
cld
ret
mov
int
pop
das
imul
sub
xchg
mov
cmp
sbb
jnp
aad
mov
inc
add
int3
dec
xchg
lcall
or
loope
mov
mov
mov
outsb
mov
inc
hlt
shll
fildl
push
loopne
push
push
out
sub
push
out
idivl
fldt
pop
pop
ror
fbstp
mov
movsl
and
dec
fisubs
cmp
adc
sbb
bound
mov
fimull
push
sbb
in
loop
aad
call
sbb
push
jo
popf
xorb
inc
lret
or
imul
cld
cli
repnz
mov
add
sub
arpl
js
push
mov
pop
pand
pushf
out
inc
mov
mov
ret
jge
nop
push
stos
add
xor
adc
sbb
lret
inc
imul
cmc
sbb
sti
mov
lea
pop
hlt
mov
add
popa
sti
and
lret
sbb
push
negl
je
test
sbb
aad
cwtl
lcall
mov
ret
jbe
les
dec
mov
rclb
jg
pop
jno
add
pop
popa
stc
test
mov
mov
sub
fidivrs
push
cmp
in
in
jbe
inc
inc
and
push
jmp
imul
mov
pusha
mov
pop
inc
jl
cmp
jae
inc
add
or
xor
lea
mov
imul
or
add
cmpb
ja
scas
jle
cmp
sub
cmp
jle
outsb
jge
fwait
and
cmp
mov
mov
sub
dec
pop
jae
sbb
lret
xorl
mov
int
jno
lahf
dec
leave
cmp
int3
adc
pop
push
test
sahf
xchg
int
fwait
sub
dec
cmp
pop
pop
pop
pop
mov
add
push
test
mov
cmpsb
xor
les
rcrl
mov
jno
decl
dec
or
subl
mov
cmpsb
stos
sub
fildl
shlb
mov
inc
je
inc
fisubrs
stos
test
or
mov
adc
xchg
dec
imul
lds
icebp
sbb
adc
add
or
mov
pop
test
dec
xor
adc
push
inc
push
dec
push
mov
inc
int
mov
adc
and
nop
sti
add
out
adcl
imul
jle
shr
mov
lds
and
rcll
jmp
and
dec
mov
push
push
stos
push
rol
movsb
jp
lds
cwtl
addr16
xchg
xor
das
fildll
adc
inc
push
inc
js
and
in
mov
sbb
sbb
pop
jl
clc
mov
mov
ljmp
loopne,pt
repnz
and
adcb
fiaddl
outsb
mov
cmp
push
stc
aaa
ret
icebp
aas
dec
loopne
int
or
mov
ret
lret
mov
pop
adc
sub
movsl
adc
adc
and
and
or
dec
test
pop
jb
and
mov
push
fwait
cmpsb
cltd
mul
and
mov
div
mov
mov
inc
xor
ss
dec
mov
loopne
test
leave
cmpsl
adcb
xchg
cmp
cmp
das
enter
push
or
stos
pop
fcompl
neg
dec
fisubrs
fsub
pop
scas
adc
clc
jle
or
sbb
mov
xchg
gs
inc
out
std
jl
addr16
pop
push
add
sub
gs
scas
aaa
mov
fidivs
aaa
dec
popa
and
or
push
sbbb
les
sarb
in
push
push
rcr
mov
scas
cld
xacquire
and
jbe
or
cmp
pop
ja
out
lods
and
js
or
and
mov
push
mov
sub
test
sub
ja
adc
mov
add
sub
dec
jb
pop
imul
jbe
jno
xlat
lret
dec
fidivl
inc
test
rcrb
mov
lret
and
inc
dec
cmc
das
lea
xchg
inc
adc
popf
xor
add
mov
fsubl
sarl
fadd
cmp
xor
repnz
dec
scas
sti
repnz
test
dec
shlb
cmp
mov
shl
out
decb
mov
sbb
stos
ret
test
xlat
arpl
xchg
pop
xchg
jle
js
fdivl
lds
scas
xchg
or
push
mov
rclb
outsb
pop
outsb
fisttpl
or
adc
in
mov
imul
jne
pop
pop
pop
pop
mov
push
jmp
pop
insb
push
mov
hlt
test
xor
in
aad
es
repnz
into
add
xor
aad
lds
xchg
mov
hlt
xchg
mov
and
inc
sub
rcll
into
jbe
call
xchg
inc
mov
cmpsb
push
call
shr
push
outsl
out
in
xchg
jnp
inc
stc
inc
insl
sub
jecxz
stc
sarb
addr16
ret
add
jecxz
dec
xchg
xchg
imul
inc
push
inc
pop
push
data16
imulb
daa
std
adc
cmp
aas
inc
or
mov
adc
mov
test
sbb
mov
clc
or
ss
call
jnp
das
mov
out
pusha
xor
clc
dec
aam
push
sarl
ja
mov
inc
movsl
lods
push
je
popf
sahf
ret
lods
cmpsl
out
push
aas
in
jle
push
xchg
pop
pushf
adc
mov
dec
in
pushf
lods
jno
cmp
sbb
sbb
icebp
sub
cld
notb
shll
lods
cmp
movsb
aad
repnz
inc
pop
mov
jo
js
les
ss
or
insl
mov
inc
mov
insl
jb
in
sti
push
das
cwtl
frstor
pop
arpl
sbb
push
addl
jns
out
add
mov
sub
ficoms
call
sbb
insl
pop
and
mov
fiaddl
loope
mov
std
mov
jg
sti
in
out
xchg
mov
xlat
sbb
add
adc
inc
outsb
xor
mov
sub
xor
jecxz
xlat
mov
imul
and
gs
adcl
add
rorb
cltd
xor
cmp
xor
dec
xchg
cmpsl
jne
dec
xor
iret
movsb
mov
or
mov
xchg
scas
mov
mov
int3
push
mov
loopne
xchg
test
into
mov
sub
fldenv
xchg
shlb
pop
add
sbb
lds
push
dec
lock
ljmp
xor
xacquire
cmp
sub
sub
mov
inc
gs
pop
cmpsb
fimuls
dec
out
and
xorb
test
and
jb
push
or
nop
xor
pop
xchg
inc
arpl
pop
xor
cmp
jne,pn
fcomps
fs
adc
sub
cltd
mov
add
cltd
inc
cmp
stos
ret
pop
xchg
jg
mov
cmpsl
enter
jle
jno
rcpps
adc
out
cmpsb
inc
je
in
xor
cmp
test
push
push
stos
jmp
js
ljmp
shrl
lea
stos
aaa
fdivrs
push
xor
sub
lods
xor
dec
outsl
lock
sub
xchg
test
mov
dec
call
pop
adc
popf
and
pushf
mov
pop
mov
mov
jbe
cmp
mov
decb
jo
repz
adc
leave
add
pushf
aam
call
jo
cmc
je
rcr
fisttps
push
fdiv
mov
dec
mov
cmpsl
mov
sub
push
push
cmp
pop
jno
iret
jne
dec
inc
mov
push
xor
or
sti
mov
lea
jp
and
lret
pop
call
mov
test
lods
jp
ss
xchg
mov
notb
lahf
mov
gs
mov
pop
fdivl
int3
ljmp
loopne
mov
xchg
mov
jle
addr16
adc
mov
pop
push
pop
das
sti
push
jp
sarb
inc
push
mov
mov
rorl
push
ljmp
pop
lahf
xchg
sbb
dec
sbb
out
cmp
daa
cmpsb
cmp
adc
push
add
dec
pop
test
leave
cmp
int
mov
lds
fs
add
in
or
sbb
mov
ret
pushf
inc
mov
push
sub
cs
idivl
or
push
mov
shll
and
in
cmc
or
push
push
xlat
dec
adc
mov
fldt
hlt
or
inc
push
cld
pop
xchg
push
jne
stos
inc
xchg
push
jg
pop
sbb
adc
lea
clc
test
jb
mov
push
adc
repz
inc
mov
jns
and
call
inc
dec
cmpl
dec
inc
xchg
ljmp
push
mov
mov
pop
push
adc
call
loope
sti
push
inc
ftst
rol
scas
pop
sub
cmpsb
cmp
ja
ret
and
popw
adc
fmull
repnz
pop
sbb
pop
sbb
inc
inc
pop
xchg
jnp
mov
mov
add
sbb
add
shll
pop
popf
in
clc
cmp
and
cmc
sub
lds
sarl
mov
xchg
mov
shll
mov
or
adc
sbb
inc
daa
fwait
xchg
test
popf
sub
and
les
aam
imul
mov
std
pop
dec
jno
sub
inc
inc
adc
test
xchg
fbstp
and
loope
push
sbb
xor
dec
stos
loope
xchg
inc
stos
shll
xor
sbb
lcall
popa
cmpsb
xchg
xchg
jae
jb
jno
xchg
cltd
jo
repnz
dec
dec
lret
movsb
xor
fwait
in
xor
cli
movsb
xchg
pop
dec
subb
fs
sbb
sub
int3
xchg
movsl
xor
mov
mov
jmp
mov
jo
inc
in
push
mov
sub
in
andl
ds
testl
cmp
adc
push
out
lahf
dec
movsb
cmp
and
sbb
inc
push
pop
fbld
movsb
fwait
cld
loop
or
popa
fcmovu
push
insb
or
sbb
sub
int3
pop
jno
in
mov
in
lock
push
ds
dec
push
scas
jae
lahf
xchg
pop
pusha
cli
xchg
jecxz
add
mov
mov
lret
or
scas
jge
scas
jo
adc
dec
in
and
jne
sbb
stos
ja
mov
adc
add
sbb
dec
dec
enter
ror
fsubrl
pop
sahf
scas
inc
sar
jecxz
inc
cli
faddl
lods
mov
mov
loopne
test
xchg
lcall
and
mov
mov
push
dec
push
nop
fisttps
aam
fdivrl
call
add
lock
lds
mov
mov
aad
cmp
xor
jae
fsqrt
xchg
jl
pusha
addr16
add
dec
and
sub
sub
sub
scas
std
mov
insb
mov
pop
jno
mov
jle
sbb
add
les
push
icebp
add
pop
ret
pop
dec
push
movsl
sbb
push
add
jnp
pop
pop
mov
mov
lcall
lret
dec
jg
in
leave
xchg
fisttpll
push
movsl
xchg
out
insl
xchg
adc
test
mov
call
fsubrs
repz
mov
add
dec
dec
cld
in
pop
push
jo
jg
or
cltd
movsl
sahf
out
nop
jp
in
push
sarb
xor
xor
test
mov
stos
pop
arpl
jnp
jp
add
mov
cli
sbb
out
aam
sub
cmp
jmp
mov
vphaddwq
lods
sbb
rcrb
dec
mov
jae
cmpl
lcall
loope
cmp
adc
into
insb
xchg
je
cltd
std
push
cltd
outsb
jnp
push
adc
popa
jecxz
jmp
pop
push
and
fcmovnbe
aad
xchg
dec
inc
or
mov
jle
dec
jb
and
fwait
xor
xchg
push
nop
loop
neg
gs
jnp
insl
lds
dec
cmpsb
ljmp
lret
adc
push
pop
xchg
adc
inc
ja
sbb
jb
test
inc
xchg
inc
mov
stc
lods
jg
jmp
iret
adc
ljmp
and
aaa
adc
mov
mov
cmp
jle
pop
loope
fcompl
addr16
leave
cli
push
mov
cmpsl
jle
jecxz
pop
cmpsb
inc
cltd
xchg
xchg
cmp
and
fdivrl
xchg
adc
out
sub
add
les
and
mov
lods
inc
jmp
xor
add
push
mov
movsb
loope
mov
mov
lret
pushl
sbb
pop
rdmsr
pop
in
jno
cmp
dec
ret
das
sub
lea
xor
leave
add
mov
in
out
inc
push
mov
andl
or
push
stos
inc
adc
jbe
test
push
mov
daa
repnz
fs
add
hlt
aam
pop
in
dec
mov
in
mov
inc
bnd
test
aad
jnp
mov
scas
dec
int3
jb
bound
clc
rol
or
cli
cltd
and
std
shrb
jmp
aas
dec
test
jno
nop
jl
jb
inc
sbb
add
lods
push
leave
sbb
adc
mov
mov
std
fimull
int
pop
add
enter
push
pop
ds
leave
loopne
and
or
idivb
mov
and
insb
pop
xchg
cmp
mov
fucomi
jno
nop
clc
xor
int3
sbbl
mov
in
add
mov
shrl
jb
lahf
mov
pushf
dec
aam
lds
sbb
fsts
mov
push
sub
es
sub
hlt
cld
negb
mov
hlt
sbbb
sahf
aaa
dec
pushl
cmp
inc
inc
fistpl
xor
and
and
cmp
les
jns
adc
or
inc
ud0
ja
push
orl
adc
sbb
sub
cmpl
fildl
jge
lods
pop
pop
xor
pushf
fwait
aad
into
or
fld
mov
aam
cmpsl
adc
xor
cwtl
divb
filds
jp
push
inc
arpl
rolb
dec
sub
adc
lock
aam
adc
pop
lods
fsts
cmp
mov
call
gs
mov
or
xchg
and
test
shlb
mov
push
sub
or
adc
outsb
sbb
mov
pop
out
xchg
jle
xchg
cmp
aam
xorb
sahf
js
repnz
dec
or
mov
dec
or
andb
xchg
in
add
movsb
add
add
addr16
stos
das
xchg
data16
lahf
js
xchg
add
rolb
cwtl
js
dec
es
mov
je
popa
or
pop
stos
lahf
sub
inc
xor
stos
push
cwtl
push
sbbb
pushf
lods
sub
inc
jbe
shll
push
dec
add
stc
nop
dec
in
or
jge
dec
test
mov
mov
push
je
or
xchg
js
dec
lahf
xlat
xchg
mov
pop
loope
push
jmp
sub
shrb
leave
pop
daa
ficomps
fs
mov
mov
jmp
pop
sti
add
sbb
ss
sti
sbb
bound
mov
aad
mov
add
test
aaa
xor
in
das
dec
aad
push
aas
mov
jl
jnp
sbb
fistl
xchg
enter
xor
xchg
lahf
stos
cltd
xor
cmpsb
mov
and
push
mov
repz
hlt
cwtl
add
xor
insb
sbb
ds
xchg
adc
mov
sbb
mov
iret
mov
pop
cmpl
loopne
outsb
dec
lret
xor
xor
dec
lcall
xor
sub
dec
ds
dec
cmp
push
xor
insb
jnp
and
adc
sub
adc
std
dec
call
push
sahf
dec
mov
daa
loope
and
dec
add
aas
lcall
sti
dec
adc
notl
movsl
dec
movsb
mov
jp
das
lcall
jne
adc
movsb
out
fwait
mov
fsubrs
bound
les
rcll
pop
movsl
fmuls
faddp
mov
mov
jg
nop
add
mov
sti
cmp
mov
and
cmp
jle
sarb
pop
cmp
jnp
mov
or
and
cmpsb
jg
fiadds
repnz
cmpsl
bound
pop
pushf
xor
jne
xlat
adc
mov
clc
lock
mov
and
dec
inc
adc
push
jne
aam
jecxz
and
scas
pop
dec
mov
cmc
cltd
mov
push
pop
and
bound
or
aas
scas
cmp
movb
xor
sbb
flds
push
adc
notl
jne
mov
add
rcrl
dec
into
mov
adc
cmc
roll
mov
arpl
repnz
mov
fwait
lock
lahf
loop
das
ret
push
mov
xor
leave
sbb
mov
inc
xor
rcrl
sub
or
jmp
mov
dec
mov
aam
xchg
mov
push
fistpl
inc
fmuls
adc
xchg
into
xchg
pop
mov
daa
jb
sub
jge
nopl
bound
ds
cmpsb
push
std
dec
iret
sbb
push
push
out
mov
arpl
mov
iret
inc
dec
adc
dec
mov
inc
mov
and
pop
bound
push
add
mov
scas
cwtl
mov
ja
sbb
cltd
mov
into
inc
dec
dec
inc
leave
and
aam
stos
add
xchg
in
enter
les
out
sahf
xchg
push
repz
cli
cltd
shl
std
outsb
jl
leave
pop
insl
bound
call
into
jne
pusha
mov
adc
out
push
inc
fldl2t
mov
dec
outsl
clc
cmpsl
lahf
cli
add
lret
sub
sbb
push
movsl
pop
js
bound
pop
push
cmp
mov
sahf
gs
scas
repz
cmp
mov
cmp
out
dec
movsb
or
mov
add
cwtl
or
sbb
inc
sahf
and
les
mov
cmp
mov
dec
cltd
jbe
popl
and
mov
mov
mov
push
xor
cmpl
sti
sahf
inc
cmp
dec
jge
fldt
add
pop
leave
iret
sbb
dec
fldt
pop
mov
dec
in
ja
lds
or
rcrb
jle
sub
jo
mov
mov
mov
fstl
dec
adc
movsl
cmpsl
cmpsl
aaa
xchg
cs
outsl
push
neg
in
fnstcw
mov
gs
fldt
xor
jnp
mov
cmpsb
inc
adc
sbb
lock
andb
popa
dec
sbb
dec
sar
or
inc
adc
movsl
mov
mov
mov
jne
inc
jg
adc
lods
dec
pop
push
mov
mov
xlat
out
loope
adc
dec
dec
cmp
mov
inc
testb
test
std
popfw
xchg
fmul
shrb
imul
sbb
fsubr
notl
fiaddl
es
rcr
fwait
or
push
ret
xchg
jmp
adc
push
unpckhps
fisttpll
sbb
push
orl
jae
cmpb
mov
inc
pop
cmp
mov
or
cmp
enter
adc
test
scas
aam
mov
fwait
jbe
mov
in
xor
inc
sbb
cmp
xchg
dec
sarb
and
add
daa
or
fnstcw
lahf
mov
shl
cltd
sub
icebp
icebp
call
and
push
and
or
cli
sub
add
roll
js
psadbw
fwait
or
xlat
ret
sti
sbb
and
scas
fidivrs
lea
inc
xlat
adc
dec
fcomps
outsl
scas
push
push
mov
into
cwtl
cmp
fdivrl
adc
ret
jns
pushf
pop
loope
in
cld
dec
xchg
inc
jnp
inc
push
in
mov
sti
dec
xchg
xor
rcrl
mov
lods
lcall
insl
sbb
pop
jp
gs
pusha
inc
nop
pop
and
and
outsb
jbe
xchg
bound
mov
loopne
repz
mov
in
pop
nop
adcl
cld
inc
xchg
jge
mov
es
sbb
and
mov
xor
adc
dec
es
and
mov
pop
jmp
shll
sub
sbb
mov
pop
push
test
sbb
movsb
dec
es
add
gs
jmp
hlt
imul
sub
jno
daa
leave
inc
outsl
daa
scas
int
or
loope
pop
repnz
add
mov
and
ds
xchg
or
fnsetpm(287
mov
jnp
lea
xor
dec
add
bound
jbe
fmul
jp
lods
fsts
movsl
imul
push
or
rorb
mov
adc
inc
clc
cmp
in
pop
out
cmpsl
mov
les
inc
in
inc
fistps
adc
out
lahf
inc
add
ljmp
lods
adc
adc
add
cmc
xor
das
mov
fs
jle
incb
sbb
dec
outsl
sbb
xor
jb
lods
mov
and
lock
fdivrp
in
ds
ds
ret
outsb
pop
xchg
js
subb
shlb
xchg
adc
pop
lods
fwait
dec
mov
xchg
addb
xchg
and
inc
sub
out
stos
pop
cmc
xchg
xchg
sub
imul
cwtl
inc
push
out
sub
cmc
or
dec
out
mov
rcrb
xchg
fnstcw
loope
imul
test
mov
sti
in
inc
mov
out
or
stos
dec
fists
xor
xor
jp
cltd
sub
dec
and
sbb
pop
or
sub
out
cld
cltd
fiaddl
orl
xchg
pop
sbb
xchg
dec
pushf
add
inc
daa
ljmp
xchg
xlat
jmp
imul
jno
ret
push
lret
cmp
xor
andl
fsubrs
fsubr
dec
fwait
mov
sub
mov
ret
or
jle
arpl
outsl
cmp
mov
test
xor
xchg
cmp
mov
scas
push
xor
add
sbb
fistl
add
arpl
ljmp
lahf
sbb
xchg
ss
pop
push
test
push
push
rcrl
mov
jno
cmpsb
mov
clc
out
push
jne
cmp
cmp
movb
adc
movsb
stos
scas
add
xchg
and
mov
enter
data16
les
sbb
fistl
jae
out
mul
leave
popa
negb
fprem1
ljmp
sub
cmp
cs
mov
outsb
sub
mov
and
push
or
lods
lahf
push
pop
mov
sub
xor
popf
pop
pop
out
aad
sysret
faddl
pushf
lret
pop
jnp
jl
outsl
cwtl
cmp
rolb
jecxz
mov
jb
jbe
test
mov
adc
add
pop
daa
fs
mov
in
inc
dec
cmc
pop
mov
ja
pop
adc
jne
movsl
into
sub
gs
xor
jmp
out
fidivs
sub
mov
or
push
jb
pop
scas
movsb
lea
lods
and
inc
rcl
ss
and
sbb
xchg
sbb
jmp
outsl
mov
or
cmc
fcoms
popa
or
push
arpl
pusha
fs
xchg
fnsave
mov
pop
shl
sbb
lahf
stos
push
pop
pop
loope
rorl
out
sbb
sub
dec
adc
push
nop
rorb
int3
xchg
cs
push
xchg
inc
sti
and
mov
inc
js
push
iret
lds
xchg
clc
popa
insb
and
popa
cmp
insl
push
in
xor
bound
sbb
je
sub
mov
and
js
jle
lods
ds
gs
mov
subl
cmp
xchg
enter
sbb
dec
shrl
add
sub
ret
push
adcb
and
dec
or
mov
cs
or
mov
ja
enter
mov
in
testb
hlt
xor
jbe
push
mov
lock
mov
sub
sub
stos
rol
jne
sbb
cli
push
dec
arpl
or
and
int
xlat
loopne
pop
sti
sbb
fildl
icebp
add
push
xor
jg
dec
mov
out
xchg
inc
lret
xchg
xor
pop
jo
add
xchg
icebp
mov
shll
cwtl
push
fwait
or
sub
cmp
sahf
mov
and
and
inc
push
mov
inc
sub
rcrl
inc
jge
or
xor
in
leave
or
sti
sbb
pop
inc
mov
lret
cmp
stos
movsl
adc
jecxz
push
in
sbb
mov
in
pusha
xor
and
movsb
add
lock
jo
sub
adc
xchg
hlt
dec
movsl
sahf
xor
clc
jne
or
jge
addr16
or
mov
pop
lods
insb
inc
jne
mov
push
adc
data16
rcrb
dec
mov
fcompl
ljmp
pop
xlat
ljmp
dec
stos
lea
adc
dec
push
cmpsb
pop
mov
test
dec
and
push
stos
fcompl
lret
jp
inc
sub
or
test
scas
shl
sub
xorb
push
cltd
adc
xchg
mov
inc
sbb
in
inc
xchg
push
sub
popf
push
loop
movsl
cltd
sahf
adc
sar
xlat
xor
push
imul
test
xchg
push
cmp
leave
jmp
sahf
lock
xor
ds
pop
cmc
sub
inc
andl
sbb
aad
cmp
icebp
movsl
inc
xor
cmpsl
mov
movsb
stc
sub
xor
dec
or
or
in
cmpsl
pop
cmp
dec
scas
loopne
int
pop
cmp
add
add
adc
or
daa
in
pop
fcmove
nopl
mov
inc
cltd
aaa
jae
ret
shr
movsl
jmp
push
mov
inc
xor
in
fistpl
xchg
or
fwait
sbb
xchg
pop
push
out
jle
pop
jge
xor
std
daa
push
push
mov
push
leave
jmp
stos
cmp
ffree
lock
push
adcb
stc
cwtl
adc
mov
enter
cs
sbb
imul
lds
inc
sbb
aas
and
lods
cwtl
mov
push
cmpsl
or
push
in
je
adc
adc
aam
xor
hlt
lcall
sub
shl
and
fucom
xchg
ljmp
jno
adc
in
sahf
jp
mov
sarl
cltd
scas
mov
sub
jbe
xchg
sbb
jo
aam
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
shlb
jl
dec
pop
jl
in
inc
mov
orb
adc
flds
sbb
push
xchg
sbb
notl
adc
fstp
scas
leave
mov
stc
insl
dec
xchg
sbb
in
dec
inc
sbb
adc
testb
aaa
mov
and
fidivl
sub
adc
xchg
mov
add
inc
movsl
jno
jbe
aad
cmp
xchg
mov
mulb
enter
stos
mov
out
outsb
rcl
pop
sbb
inc
lcall
jecxz
push
lds
and
adcl
pop
add
pop
repz
xchg
ss
movsl
jno
lcall
xchg
orb
cwtl
dec
es
add
inc
mov
mov
cmpsb
xor
xor
inc
jmp
push
aaa
into
loop
mov
aas
jl
xchg
xchg
aam
filds
xchg
fucomip
xchg
pushf
add
lods
cmp
int3
push
mulb
sub
push
adc
rcll
test
je
xlat
idiv
pop
cltd
das
jnp
pop
xlat
lret
mov
fldenv
mov
push
and
inc
inc
int3
xchg
cld
mov
cmp
adc
andl
outsb
mov
adc
jno
cmpl
inc
push
imul
cwtl
sbb
lcall
xor
or
pop
sub
xchg
add
ss
insl
sub
inc
wbinvd
xor
cli
repz
movsb
dec
pop
pop
xor
or
stc
pop
push
pop
in
loopne
test
into
in
pop
into
inc
mov
ljmp
jl
mov
in
scas
xchg
jp
mov
lock
xlat
cmp
cmp
pop
out
pop
ja
icebp
lcall
mov
mov
cwtl
mov
push
repnz
fcos
imul
xchg
jo
mov
sti
mov
xchg
shl
and
cltd
mov
mov
addl
rorb
call
pop
movsb
lahf
jns
nop
add
cwtl
push
sti
leave
pop
jnp
sub
add
cmpsl
push
insl
add
ss
inc
add
mov
mov
shlb
out
sarb
inc
xchg
pop
je
mov
shl
vpmovzxwq
mov
mov
call
lea
ret
out
mov
xchg
jb
push
vminpd
fs
jno
fistl
es
mov
mov
popa
and
jmp
les
inc
mov
out
sub
das
in
jae
popa
fsubp
lods
mov
mov
pop
insb
mov
popf
dec
je
jge
fdivl
loopne
fimuls
fdivrl
cli
pop
popf
jle
dec
xor
fs
stc
dec
jmp
addr16
dec
fwait
icebp
loop
out
incb
test
pusha
xor
and
icebp
stc
adc
adc
cmp
xor
push
cwtl
dec
adc
inc
popa
xchg
in
enter
jae
loope
mov
mov
inc
cmpsl
xor
in
mov
test
out
pop
sahf
jbe
fdivl
adc
movsl
lcall
cli
push
idiv
pop
push
lcall
roll
filds
cli
cmp
insb
sub
stc
es
push
lret
pop
dec
cmp
mov
je
xchg
push
out
cltd
and
jl
cmp
xor
shlb
mov
arpl
es
cmp
idiv
pop
mov
enter
xchg
mov
inc
inc
dec
pop
outsl
pop
dec
sbb
dec
inc
adc
addb
jb
clc
and
sub
jb
jo
int
inc
dec
iret
inc
pop
divl
jne
sarb
and
dec
and
rcl
scas
scas
and
sbb
and
std
pop
sbb
call
cmp
lret
std
setle
pop
dec
sbb
ljmp
lahf
pop
es
and
or
insb
cmc
mov
daa
shlb
outsl
bound
inc
fucomp
push
adc
dec
andb
jno
pop
lods
push
adc
fsubs
fwait
pop
sbb
fdivp
outsl
dec
inc
mov
in
lahf
add
mov
or
sub
fidivl
mov
jb
mul
inc
repnz
hlt
es
jae
and
andb
lods
lcall
clc
cs
stos
xchg
aad
int
jb
add
jo
roll
jle
mov
jno
push
push
pushf
repnz
lock
mov
fnstsw
neg
insb
adc
lcall
dec
pop
out
sbb
into
mov
cltd
jp
out
xor
fnstsw
inc
push
mov
push
pop
out
ja
insb
arpl
comiss
mov
xor
inc
insl
sub
add
mov
xor
arpl
cmp
push
mulb
mov
loopne
dec
stos
pop
mov
int
pop
loope
add
arpl
test
mov
repz
jnp
cli
or
sub
cmpsb
jmp
cmp
aam
ret
rcl
cmc
jne
pop
mov
jo
xor
mov
jge
ret
and
ret
jbe
mov
mov
xchg
dec
cmp
xor
jae
inc
popa
jb
ret
movsb
nop
mov
jecxz
popa
sbb
mov
aas
fiadds
push
ficoms
inc
aad
add
jp
es
sub
or
andl
sub
xchg
ja
hlt
dec
pop
dec
mov
es
mov
mov
cmp
adc
jb
mov
cmc
out
dec
add
add
xchg
xchg
outsb
inc
imul
aaa
repnz
pop
out
shl
sbb
or
ret
adcl
sbb
mov
mov
mov
movsl
xor
xor
inc
cmpsb
mov
inc
pop
outsb
cld
outsl
sub
mov
push
or
in
and
mov
mov
mov
in
sub
mov
mov
xchg
fs
xlat
and
loope
lods
mov
lahf
fsubrs
repz
inc
add
je
insl
cwtl
and
mov
xor
xchg
outsl
sti
aas
mov
scas
sub
aas
mov
add
ds
sti
fbstp
jo
jae
push
aas
dec
addr16
mov
xor
aaa
inc
xchg
inc
fstl
sub
sub
fs
mov
add
lods
pop
mov
jmp
ret
jo
mov
sti
mov
jne
cmpsl
xor
mov
jb
dec
aas
popf
fistps
mov
inc
test
and
lds
jbe
stos
mov
in
sub
push
les
push
jl
pop
stos
imul
int3
sub
mov
pushf
xor
cmp
or
test
sub
cmp
je
sbb
cmpsl
push
xor
push
popf
push
enter
mov
sahf
inc
inc
lods
jmp
pop
stos
loopne
movsb
imulb
adc
test
adc
imul
and
jne
push
in
adc
xchg
mov
ljmp
jnp
lds
call
inc
inc
mov
push
cltd
mov
repz
ret
dec
or
mov
or
lods
sti
xor
shl
jge
lcall
ret
test
mov
adc
mov
inc
out
xor
sti
jo
je
push
inc
std
or
lds
inc
in
inc
dec
insb
notl
xchg
popf
push
mov
int
loope
popa
pop
mov
lahf
frstor
lahf
and
fildll
repz
adc
mov
adc
test
adc
mov
add
scas
jmp
or
test
adc
loopne
fs
andl
mov
lcall
ss
lret
and
ljmp
push
dec
sbb
mov
out
pop
dec
pusha
xchg
mov
add
xor
aad
lret
xchg
mov
jg
in
jg
lds
lds
orl
push
mov
push
out
cmpsb
mov
pop
inc
push
cmp
push
dec
loope
ret
loopne
add
enter
and
ja
sbb
xchg
adc
leave
dec
jbe
loope
mov
pop
xlat
xor
xor
adc
test
sarb
lret
and
mov
ret
add
push
sbb
adc
xchg
fisubrl
outsl
cmp
push
fwait
add
movsb
int3
addb
cmpsb
xchg
js
pop
mov
je
mov
and
or
xchg
push
adc
mov
lret
jae
fcoml
add
xor
cld
fidivrl
dec
jge
std
push
jl
jbe
adc
pop
das
lock
adc
loop
call
push
pop
movsl
fcoml
xchg
push
jo
dec
push
aad
mov
lret
push
lds
xor
and
pop
adc
pop
stos
mov
in
xchg
xchg
push
in
mov
ds
iret
inc
sub
rclb
cltd
mov
mov
jae
xchg
and
loopne
hlt
or
sbb
hlt
push
jge
lret
stos
sub
xor
mov
fdivrs
rcl
out
sahf
idivb
inc
adcl
mov
movsl
mov
out
mov
enter
call
sub
inc
cmc
mov
out
int3
sti
das
aad
xor
xchg
jmp
jbe
test
add
mov
ja
fidivrs
cmpsb
jmp
hlt
shrb
icebp
mov
mov
mov
cmpsl
movsl
pop
jmp
adc
call
inc
mov
popf
das
stos
daa
lods
push
mov
lcall
pop
xor
and
dec
in
and
out
or
xor
mov
call
fldl
push
aad
testb
add
mov
xorl
jb
cmp
push
popa
popw
shrb
inc
icebp
jg
push
lea
cmp
cmp
cmc
add
sar
and
dec
js
aam
ds
mov
xchg
fistpll
sub
lods
sub
mov
int3
lods
lods
rclb
or
wrmsr
push
int
sbb
push
jb
stos
xor
outsb
add
pop
inc
push
out
push
jbe
dec
shrl
lds
cmpsl
add
and
fwait
test
aam
mov
jmp
stos
iret
pop
jp
cmp
add
in
popa
rcl
jae
outsb
cmp
or
or
hlt
fnstenv
pop
jno
xorb
or
sbb
jg
dec
add
daa
imul
cmpxchg
adc
mov
jle
fiaddl
and
xor
inc
xchg
jno
imul
in
jl
stos
jae
xor
pusha
pop
or
sub
mov
ja
ss
pop
mov
es
mov
pop
jg
push
lock
xor
xchg
das
popf
sub
xchg
fldenv
popf
movsl
push
scas
push
call
xchg
sarb
je
lea
in
or
cmp
xor
sub
push
xchg
mov
jmp
dec
repz
fiaddl
dec
push
fbstp
mov
fs
in
xor
fnsave
lock
inc
inc
loop
sbb
inc
lcall
pop
adc
arpl
ret
ja
std
push
mov
and
pop
sbb
int3
sbbb
fwait
xchg
xchg
sahf
or
test
ss
sbb
aam
testl
stc
dec
dec
or
lret
add
and
jge
out
cmp
jp
inc
ret
mov
into
push
xchg
int3
out
cmp
hlt
les
and
call
cmpsb
push
cmpsl
sbb
sbbb
push
xchg
adc
ds
push
dec
lret
insb
sub
push
adc
ss
mov
xchg
daa
pop
jle
inc
lods
xor
scas
dec
rcl
jmp
xor
icebp
fld
push
mov
jbe
cmp
push
xchg
stos
test
ret
or
sbb
fidivs
test
popa
adc
sub
xchg
mov
jg
adc
aas
cwtl
push
sub
into
nop
and
xor
jae
imul
sbb
fists
gs
mov
mov
test
jae
faddl
test
mov
inc
dec
pop
xor
inc
mov
test
pop
loopne
xor
int
cmp
rcrb
cwtl
fistps
cmp
out
jl
mov
pop
dec
mov
xorb
cwtl
pop
clc
imul
jb
sbb
dec
mov
adc
je
mov
jne
out
and
fdiv
xchg
sub
shrl
jbe
push
xor
int3
sbb
ja
js
lret
mov
ja
scas
icebp
ljmp
dec
mov
adc
mov
cmpsl
xlat
sub
in
inc
rorl
test
pop
mov
sbb
sbb
adc
cmp
test
lahf
pop
in
dec
push
sub
push
cmp
adc
popf
rcrb
jne
test
popf
or
jno
int
or
ljmp
inc
adc
mov
das
out
jae
icebp
mov
out
sbb
dec
fsubr
cmc
fnstsw
movsb
nop
xchg
fisubrl
pop
cmp
dec
icebp
fldcw
jge
shl
and
xor
nop
hlt
or
loopne
popa
lea
icebp
and
cs
push
jo
test
xchg
jno
pop
punpckhbw
les
push
jg
aas
lcall
xchg
jbe
mov
leave
es
fisttpll
mov
in
pop
push
scas
test
and
lods
sti
pop
jnp
test
and
fildll
pop
cmc
push
repnz
loope
xchg
inc
ljmp
sbb
cltd
ret
cmpsb
fsubs
ds
or
push
xlat
dec
jae
pop
dec
outsb
aas
sub
iret
stos
mov
inc
jbe
xchg
mov
minps
into
dec
or
cltd
scas
leave
dec
pop
lcall
sbb
inc
lds
and
nop
loopw
in
dec
cs
ror
sarb
nop
mov
cld
les
inc
add
mov
mov
xlat
in
push
or
shrb
jo
cmc
xor
xchg
bound
ds
cwtl
sub
mov
filds
in
repnz
lahf
mov
and
add
scas
adc
or
cmpsl
mov
xchg
sub
cmp
mov
scas
into
es
sarb
adc
cwtl
shll
sub
popf
inc
shlb
bound
les
test
cmp
mov
out
or
flds
jns
xchg
xlat
jge
or
xor
xor
cmp
rcrl
cmp
dec
jbe
mov
movsl
data16
call
mov
xor
orl
pop
pop
pusha
pop
xlat
fdivl
dec
pop
ret
insl
repz
in
fdivs
or
loop
adc
xchg
lods
gs
bound
mov
call
pop
testb
bound
enter
jae
xlat
xlat
push
xchg
sub
aad
inc
stc
xchg
xor
pop
push
lahf
jbe
aas
jnp
les
xchg
lcall
xchg
dec
cmp
imul
fidivrs
dec
or
xor
into
mov
movsl
and
fwait
jns
dec
mov
dec
loopne
mov
mov
mov
enter
pop
popf
add
ds
fnstenv
mov
enter
int3
stos
scas
xor
in
pop
mov
mov
push
js
ror
mov
arpl
fidivrs
sbb
cmpsb
lods
pushf
push
pop
sub
or
daa
jbe
roll
xor
jns
mov
xchg
repz
pop
ja
pop
adc
xchg
js
daa
and
lock
gs
jne
insb
js
sbb
cmp
out
lret
xlat
movsl
stos
push
decl
in
loop
aaa
xchg
dec
fdivrl
aas
push
ret
addr16
mov
cltd
hlt
jae
cs
mov
std
dec
push
and
subb
dec
pop
or
dec
insb
xchg
mov
jns
sub
fmuls
xchg
call
iret
jo
scas
add
jo
out
sub
loope
jmp
fisttpll
jno
mov
bound
jbe
out
fildll
clc
daa
inc
dec
ljmp
xlat
jl
adc
dec
cli
shlb
jle
jge
xor
and
jne
push
xor
pop
sub
mov
push
lret
pop
pushf
jbe
sbbl
shll
cwtl
or
pop
cmp
data16
in
pop
lret
push
ljmp
std
cli
std
lods
mov
push
or
xchg
fwait
pop
sbb
hlt
cmp
or
xchg
fcoms
sub
outsl
stc
add
sahf
ret
push
lret
out
mov
lret
add
pop
lock
lock
sbb
push
pop
aad
and
cltd
ljmp
mov
mov
stos
jne
push
stc
fisttpl
mov
mov
adc
dec
mov
xchg
adc
push
sbb
inc
mov
push
stc
mov
mov
add
lock
test
je
mov
cwtl
push
fldt
xor
movb
sub
mov
out
inc
icebp
adc
dec
imulb
out
push
jno
popl
push
jecxz
popf
cmpsb
push
and
pop
out
test
mov
rcll
inc
xor
xchg
outsl
test
fincstp
lret
xchg
jle
sbb
cli
jl
test
out
inc
out
repz
cs
adc
or
loop
dec
test
dec
mov
inc
mov
jge
int
adc
add
clc
xchg
add
shrl
loope
pop
arpl
aas
and
inc
in
test
cld
fistpll
outsb
pop
test
out
dec
jmp
test
push
add
push
stc
push
mov
xchg
mov
pushf
fsub
mov
and
xchg
mov
popf
rcrl
or
mov
test
mov
mov
sub
loopne
push
sar
add
dec
mov
pop
jg
stos
mov
imul
fmuls
push
add
bound
movsl
jns
fcompl
loop
out
in
aad
sub
sub
pop
and
add
xchg
inc
or
jecxz
pop
pop
mov
mov
add
dec
adc
pop
hlt
adcl
aad
dec
adc
stos
xor
sub
cmp
in
mov
in
in
add
cwtl
xor
inc
ljmp
insl
push
fs
sub
push
lea
xor
adc
loopne
cmp
pop
imul
mov
sbb
into
mov
loop
rcrb
scas
jae
xchg
insl
xor
cwtl
into
out
dec
pop
mov
pop
in
adc
mov
sahf
push
dec
daa
adc
mov
int
roll
inc
nop
lcall
int
sbb
sti
test
loope
inc
and
js
push
dec
sahf
xchg
sbb
stos
fmuls
bound
sub
testl
sti
cmpsb
xchg
test
aaa
in
lock
stos
push
sbb
rclb
and
mov
mov
push
cmp
insb
int
bound
adc
xchg
fidivs
lea
pop
jp
pop
sub
sbb
adcb
out
xlat
popa
pusha
and
xor
adc
lret
negl
in
enter
addl
outsl
es
jmp
or
mov
dec
rcrb
sti
in
add
cwtl
xor
xchg
ljmp
test
jp
cmp
sahf
insb
pop
inc
aad
popl
dec
ret
lods
scas
mov
xchg
push
sbb
fnstsw
out
mov
dec
push
and
aas
jg
pop
rol
jecxz
cs
dec
or
stos
mov
mov
xor
push
paddsw
in
push
imul
aam
dec
pop
call
xchg
sti
cmpsl
xor
lea
pusha
imul
test
pop
jmp
fstpl
pop
sub
sub
xor
or
test
lret
es
bound
in
loope
subl
xor
push
jge
lods
dec
mov
jne
iret
testl
call
in
add
mov
mov
xor
xor
decb
out
xor
outsb
jg
mulb
xchg
push
add
dec
push
fs
hlt
adc
lcall
push
adc
or
mov
mov
lret
push
cmp
xlat
repz
jns
or
out
cmp
lea
jo
pop
rcr
in
divl
jo
imul
jle
add
cs
jae
ret
test
insl
pcmpeqw
dec
sti
scas
pop
jp
cli
dec
mov
rorb
push
cwtl
and
mov
mov
pop
fwait
cmp
loopne
ficoms
sbb
lret
outsl
xor
insb
call
pop
into
rcll
and
push
push
cwtl
xchg
mov
ljmp
dec
cmp
cmp
push
loopne
sub
pop
xchg
sbb
movsb
sub
aad
mov
ss
lea
sbb
inc
div
xlat
dec
stos
insb
mov
sbb
add
dec
fidivrl
mov
dec
pop
fildl
cmpsb
imul
push
inc
mov
or
mov
lret
insl
xchg
addb
xchg
or
imul
cmc
jo
out
insl
cltd
nop
jb
imul
movsb
sub
mov
ja
ljmp
jne
pop
dec
jnp
mov
rcrb
cs
push
xchg
inc
cmp
sbb
scas
into
mov
xchg
out
adc
xor
leave
movsb
aas
dec
lcall
or
arpl
push
test
mov
add
mov
xchg
fnstenv
sbbb
inc
push
and
sbbl
popf
test
sbb
shlb
sub
in
pusha
push
cltd
lret
inc
popa
inc
inc
rorl
jns
ret
mov
pop
push
sub
adc
imul
inc
push
gs
jge
neg
frstor
fnstsw
cmpsb
sbb
jp
inc
sbb
mov
das
push
push
call
jo
scas
xor
inc
inc
into
pop
mov
pop
push
cmpsb
mov
addr16
and
pop
jns
idiv
pop
xor
ficoms
in
mov
mov
and
fcoms
jo
mov
out
sbb
nop
out
mov
cwtl
xchg
or
dec
bound
cmpsl
mov
lahf
fistpll
in
and
xor
xchg
lcall
lcall
pop
cmpsl
lahf
mov
cwtl
cld
aaa
sub
cmp
lea
jno
add
push
dec
jb
daa
repnz
ja
ljmp
inc
pop
gs
mov
cmpsb
movsl
push
mov
sbb
aad
ret
push
jne
fs
fimuls
fcoms
cmp
inc
mov
pushf
repz
fsqrt
clc
adc
xor
mov
divb
mov
test
xchg
aad
or
cli
cmp
mov
in
or
add
pop
xchg
fidivrl
or
hlt
mov
loopne
test
call
mov
adcl
sub
mov
add
jg
adc
jbe
add
pop
out
psrlw
pop
push
or
xor
sub
sub
aam
xor
xor
bound
bound
cld
and
outsl
mov
test
es
add
or
stos
xor
shlb
pop
subl
movsb
mov
data16
mov
and
pop
mov
daa
inc
cltd
mull
push
push
adc
cmp
mov
andl
mov
jbe
pop
sub
bound
test
jns
mov
adc
mov
sbb
ret
push
mov
jle
lahf
add
test
mov
addl
mov
in
push
mov
pop
cmp
push
rorl
repz
mov
imul
ficomps
jne
shl
shlb
add
test
fildll
xchg
lea
xchg
xor
ja
dec
mov
dec
ret
push
std
js
mov
shlb
sbb
or
pop
push
sub
xchg
pop
push
push
pop
add
push
int
iret
loope
ret
test
dec
lret
lods
jno
and
sub
push
scas
or
inc
mov
jl
xor
lea
divb
mov
jo
ret
scas
xor
pop
aas
inc
lahf
add
cmpsl
ret
lds
push
inc
fiaddl
jl
jnp
and
mulb
lods
mov
xor
xor
push
enter
and
pop
test
insb
imul
adc
aam
sbb
push
xchg
add
pop
inc
call
mov
test
push
aas
cmp
into
imul
outsb
sbb
and
ljmp
mov
push
and
add
or
adc
fucomi
lds
mov
push
dec
pop
ja
sti
std
pop
jmp
mov
cwtl
inc
or
pushf
jno
jmp
inc
mov
pop
jmp
mov
jl
push
push
cmp
dec
xchg
inc
outsb
ja
push
sbb
aam
pop
mov
lahf
or
loopne
sahf
repnz
push
arpl
mov
sbb
std
jge
outsl
inc
xchg
dec
fcmovb
xchg
dec
or
test
mov
adc
outsb
neg
mov
add
shll
fsts
loope
sub
push
out
mov
sti
cltd
xor
mov
pop
and
jae
dec
xlat
cmp
inc
sub
xchg
mov
fimuls
lcall
mov
rorb
enter
jg
pop
pop
and
or
scas
cli
push
cmc
add
je
pop
cmpsb
jle
iretw
repz
mov
scas
push
clc
xchg
int3
cmp
xchg
or
aad
jb
int
sbb
or
or
add
mov
ljmp
test
xor
xor
fdivrs
pop
cmp
lods
das
xchg
adc
nop
imul
adc
xchg
adc
xor
int
test
xchg
icebp
movsb
inc
test
mov
repnz
mov
xchg
mov
mov
push
push
xchg
xor
mov
pop
cltd
cmp
xchg
push
cmpsl
shll
mov
lahf
push
les
test
add
out
call
or
jl
mov
mov
adc
repz
mov
pop
mov
sub
loope
xlat
test
mov
push
or
adc
pop
inc
push
ret
das
pop
lods
adc
dec
lock
sub
in
pop
fdivl
shll
xchg
test
jb
shl
clc
sbb
xchg
xor
xchg
jbe
xchg
hlt
popf
jae
cwtl
sahf
addb
mov
fistpl
mov
js
and
lods
fisubs
inc
cmp
jge
daa
arpl
xchg
pop
lds
insl
add
icebp
xchg
jnp
rolb
jmp
out
bound
xor
pop
cli
lret
repz
jnp
es
sti
lret
inc
cld
jae
int
movsl
push
adc
push
rcrl
sahf
xor
inc
pop
jae
sub
imul
and
xlat
std
cld
shll
leave
rorl
mov
jle
ljmp
bound
ret
push
les
rcl
xchg
test
lock
rcll
iret
stc
iret
loope
push
fiaddl
les
sub
and
enter
fsubs
mov
lds
and
or
xchg
jg,pn
mov
cmp
decb
mov
and
fidivs
jbe
imul
inc
push
jecxz
add
fnstcw
push
and
out
mov
lret
sbb
fcoms
cmc
jp
xchg
inc
inc
jae
fiaddl
lahf
xor
xchg
push
xchg
loopne
cmp
mov
xchg
repnz
int
push
sbbb
cmp
sub
pushf
mov
insb
sub
movsl
mov
aaa
xchg
mov
fsubrs
stc
bound
in
lcall
ja
mov
mov
repnz
ja
jo
das
xchg
sti
pop
lods
cld
lret
insb
andb
insb
mov
xchg
pop
int
repz
and
lret
stos
xlat
imul
add
incb
out
mov
push
fwait
jo
sbb
jno
sub
pop
clc
dec
jmp
stos
add
jecxz
xchg
or
inc
pop
arpl
arpl
aad
xchg
xor
or
adc
sbb
cmp
mov
and
or
sbb
loopne
ret
jbe
in
pop
adc
in
into
xchg
outsl
stos
xor
test
adc
enter
into
dec
cmp
fbld
into
xchg
pop
pop
jmp
fs
pusha
icebp
lock
arpl
outsb
inc
into
enter
test
jmp
ja
repz
lock
and
pusha
dec
jb
sbb
std
xchg
xchg
xchg
movsb
push
aas
xor
popa
stc
cmc
push
hlt
mov
push
cmc
mov
inc
push
lea
fdiv
fisubl
cmp
sbb
gs
lret
out
sub
sbb
into
fisubrl
inc
cmp
dec
sub
dec
into
movsl
inc
jo
cmp
mov
or
scas
in
pop
call
mov
std
jg
rorl
shll
lcall
addb
cs
or
jb
inc
add
lret
ss
mov
mov
es
gs
mov
jbe
xchg
mov
dec
fcmovnbe
xchg
mov
mov
jle
mov
or
or
mov
jo
repz
dec
xchg
xor
jno
push
sti
sbb
jge
lahf
sub
bound
xchg
add
test
std
test
mov
adc
lods
fistps
mov
out
inc
xchg
dec
es
push
inc
mov
xlat
jge
test
push
pop
inc
inc
add
sub
xchg
cli
push
pop
and
sahf
dec
or
pusha
xchg
pop
push
mov
fistpll
aad
lods
inc
mov
loope
subb
pop
push
mov
push
push
sbb
cmp
adc
inc
mov
adc
fdivrs
or
std
movsl
movsb
lds
pop
add
test
cs
insb
mov
rol
dec
out
or
inc
sub
sub
iret
imul
or
sarl
addb
cmc
mov
test
loopne
lea
leave
outsl
mov
pusha
inc
outsl
cwtl
cmpb
cmpsb
adc
test
and
jo
cli
cltd
mov
add
call
sbb
jo
arpl
xor
pushf
and
xchg
lea
adc
ficoml
push
fldenv
dec
jmp
mov
cmp
mov
sbb
daa
push
cmp
pop
jl
sbb
cmp
in
lahf
lock
and
jne
cld
pop
mov
sbb
clc
lret
int3
push
jbe
lcall
notl
lods
sbbb
imul
movsl
fsubr
and
ret
sub
xor
stc
add
push
xor
icebp
mov
xor
std
sub
and
mov
scas
jmp
out
cmp
pop
mov
cltd
loopne
cmc
mov
push
cmp
mov
cmc
addl
xchg
jb
mov
jo
push
pop
les
gs
ljmp
add
sbb
sti
inc
mov
fsubl
sarb
leave
mov
xchg
adc
adc
pop
dec
dec
out
addr16
in
test
lds
jb
lret
mov
mov
xor
test
int3
mov
outsb
scas
das
lret
mov
inc
fnstsw
mov
ret
inc
ljmp
iret
jne
add
addb
inc
cs
inc
add
gs
mov
or
sub
dec
inc
mov
dec
jns
incl
and
jb
mov
ja
jmp
test
sub
icebp
scas
mov
nop
xchg
and
push
add
adc
jb
cltd
add
pop
and
and
adc
lcall
shrb
pop
xor
push
lahf
or
mov
jnp
out
xor
adc
das
inc
cli
faddl
hlt
push
xlat
and
scas
adc
daa
dec
stc
cltd
or
sbb
out
adc
nop
push
ret
arpl
pop
cwtl
add
adc
jne
push
or
testl
inc
insl
mov
push
mov
imull
dec
dec
inc
int3
xchg
mov
adc
inc
cli
pop
notb
imul
fldl
inc
pushf
jl
pop
neg
cmp
aas
pusha
push
jecxz
xchg
dec
push
sub
add
ds
mov
adc
push
test
inc
cmpsl
ljmp
cwtl
pop
loopne
mov
addr16
loopne
adc
fisubl
push
ss
pop
and
xchg
movsb
sub
mov
in
stos
mov
das
xlat
sub
sub
loop
mov
sbb
in
push
add
cmp
mov
or
ret
mulb
xchg
fcoms
adc
mov
pop
test
popf
or
push
jge
clc
or
pop
dec
dec
xchg
jmp
xchg
int
sub
inc
ret
mov
adc
mov
loope
and
mov
xchg
sbb
adc
insl
xchg
add
retw
sub
pushf
adc
xchg
mov
pop
xorb
adc
mov
loope
call
xchg
push
fnstenv
inc
cmpsl
fdiv
ret
sti
inc
mov
insb
cmp
push
popa
enter
fst
or
mov
cmp
pop
jb
pop
outsb
iret
out
xchg
jmp
cmp
dec
fistps
imul
push
jmp
jbe
xlat
out
mov
add
push
in
xchg
inc
jmp
inc
divb
pop
adc
inc
fidivs
enter
lahf
fxch
mov
and
bound
pop
data16
sbb
testl
and
mov
inc
and
push
sbb
testl
lea
in
adc
stos
mov
ret
fdivrl
mov
ss
jp
test
pop
mov
fstl
sub
jne
jno
cmp
add
mov
iret
push
and
jecxz
mov
aas
ja
leave
adc
jmp
sub
imul
mov
and
or
mov
scas
sub
ret
imul
test
in
vpcmpgtd
pop
imul
mov
fsubr
adc
add
xchg
adc
cwtl
fsubrs
push
stos
fnsave
shl
mov
shl
lcall
lahf
ds
notb
rorl
and
hlt
je
pop
leave
test
in
cmp
fidivrs
adc
daa
push
dec
cltd
pushf
lcall
bound
xchg
cmp
mov
loope
and
repnz
cmp
mov
push
in
push
push
xchg
stos
sti
fidivs
imul
pop
sub
or
add
test
mov
jae
push
pop
xchg
daa
jae
xchg
sbb
or
cmp
stc
xor
xor
sub
jg
data16
dec
ljmp
ds
shlb
ficompl
push
sbb
jle
aaa
das
sahf
in
cli
outsl
push
ror
adc
fimuls
pop
das
scas
js
cmpsb
daa
int3
dec
outsb
icebp
bound
cwtl
data16
or
jae
sub
mov
mov
std
stos
ss
repnz
inc
arpl
orl
xchg
popa
mov
cmpsb
and
fnstcw
sub
lea
dec
mov
hlt
dec
cwtl
subl
pop
insl
mov
ds
rorb
data16
mov
jns
mov
out
sub
ds
xor
or
jecxz
pop
pop
dec
popa
sbb
dec
sbb
stc
mov
cli
jne
xchg
insl
and
jns
jne
pop
cs
and
je
ja
out
ljmp
lret
dec
lret
mov
adc
out
mov
add
loopne
lds
nop
jl
jnp
mov
sbb
xor
pop
sbb
mov
push
sarl
xchg
add
push
push
clc
cs
fincstp
repnz
cmp
leave
popa
addr16
cmp
ret
mov
das
pop
fildl
jnp
mov
add
flds
or
leave
dec
sbb
mov
add
sarb
lock
push
cmp
pushf
movb
ficoml
addr16
fadd
or
jne
and
cmp
mov
and
fsubr
jge
int
jecxz
in
insl
data16
std
inc
mov
mov
les
or
dec
nop
mov
fisubs
scas
push
xchg
jne
lret
jmp
mov
cmp
jp
test
ja
sub
pop
jmp
push
dec
pop
fcomps
out
inc
nop
loop
aaa
sub
outsl
data16
cmp
or
out
dec
lret
xor
and
iret
xor
xchg
icebp
xor
cmp
dec
fcmovb
pop
and
daa
andb
inc
data16
sub
fisttpl
cs
jns
push
and
adc
test
scas
cwtl
push
inc
aaa
repnz
xchg
jb
dec
cltd
lahf
es
push
imul
inc
mov
outsl
jecxz
dec
or
insb
or
xor
shlb
mov
mov
sbb
mov
fmuls
mov
insb
pop
lret
aaa
addr16
cmpsb
pop
and
xlat
enter
cmpsl
add
mov
xchg
sar
jns
rol
aas
cli
out
lock
jmp
inc
ret
jb
test
int
jns
roll
xor
shl
sbb
mov
adc
cmp
jge
sti
insb
jne
das
fucomp
nop
xchg
leave
ret
adc
sbb
inc
push
rcrl
push
out
test
or
xor
and
fsubl
neg
addl
mov
frstor
push
scas
pop
insb
out
sub
fisttps
xlat
add
xchg
adc
jle
pop
fwait
xor
mov
mulb
xchg
into
jg
popa
je,pn
cmp
cmp
data16
mov
ret
das
jge
dec
insl
loope
pop
stc
insb
jecxz
stos
repnz
dec
pop
xchg
fs
lret
ds
sub
movsl
in
xlat
mov
les
fcomps
icebp
in
test
lret
arpl
push
shll
cmpsl
lock
push
sbb
mov
lret
cld
inc
or
out
xlat
xchg
cli
dec
push
mov
inc
test
jae
mov
pop
mov
fmull
xchg
push
add
outsb
ss
mov
mov
cmpsb
cmc
cmp
addl
mov
sahf
mov
mov
inc
push
ja
xchg
jae
push
movsl
dec
dec
repz
mov
pop
xchg
fsub
ret
pop
dec
lret
js
js
and
sbb
loope
in
mov
repnz
push
addb
mov
jb
insl
ja
mov
dec
out
sub
rolb
ds
jmp
insb
in
loope
jb
ds
cmp
add
push
sarb
aam
int
aam
fistpll
lret
xchg
xchg
nop
xchg
shrl
dec
loope
ja
jne
fisubs
sub
jmp
outsb
mov
sti
popf
aas
xchg
or
push
lods
clc
push
adc
clc
mov
pop
fisubl
xchg
mov
lds
cmp
xor
sbbl
sbb
mov
mov
xor
lahf
lahf
jp
addr16
adc
push
push
imul
andl
adc
sbb
add
rcrl
orb
sbb
ljmp
sti
jno
inc
push
iret
mov
add
out
cmp
adc
and
pop
inc
nop
lret
adc
mov
pusha
int
dec
test
lahf
test
push
sbb
mov
xor
mov
std
jmp
pop
cmp
rcr
xlat
dec
outsl
xor
pop
inc
inc
imul
or
cltd
jge
push
test
loopne
es
in
faddl
cs
pop
dec
push
insb
adc
dec
inc
adc
push
cwtl
repz
mov
call
mov
aam
imul
sahf
cmp
fists
aaa
movsb
addr16
mov
aad
test
outsl
push
into
stc
loopne
push
dec
pop
mov
cmp
clc
sbb
sub
jno
xor
daa
data16
sbb
sbb
cmp
pusha
xchg
fcmovnb
add
sub
sub
inc
inc
bswap
adc
mov
mov
pop
push
adc
mov
lcall
imull
movsl
mov
lds
sub
ja
inc
test
cwtl
outsl
and
push
subb
push
pop
pop
jp
add
or
stos
daa
loop
repz
loope
push
sub
js
xchg
adc
daa
cmp
cwtl
dec
pop
jnp
fisubl
pop
pushf
cmp
and
orl
loopne
shlb
mov
adc
fcompl
andl
ret
cltd
bound
push
dec
ss
nop
pop
adc
cli
mov
mov
stos
psubsb
imull
out
mov
cld
xor
pop
xchg
add
outsl
xchg
lahf
inc
cmp
and
jae
mov
pop
sbb
inc
lea
jmp
test
mov
adc
add
adc
xchg
arpl
fistpl
adc
fdivrp
pop
xchg
sbb
cmpsl
in
int
js
add
ret
pop
pop
push
mov
clc
fistps
mov
outsb
shl
mov
jle
insl
push
and
addl
sub
fs
mov
push
adc
rcll
in
jp
and
movsb
cli
cmp
lcall
popa
adc
leave
sbb
inc
aam
or
les
loopne
test
dec
dec
lret
cltd
les
popf
inc
push
push
add
adc
insl
movsl
and
fisubrl
ja
adc
dec
inc
ret
xor
aam
xchg
xchg
adcb
cmpb
ljmp
repnz
mov
fsub
xorps
cmp
xchg
dec
inc
cld
and
fildl
stos
jne
cmpsl
pop
add
ficoml
jbe
inc
mov
je
mov
popf
xchg
add
xchg
loope
adc
push
pop
xlat
jne
pop
mov
sub
inc
scas
push
shll
mov
lret
arpl
xlat
pop
mov
outsb
dec
mov
sub
ret
xchg
daa
adc
xor
jae
outsl
mov
jae
in
frstor
and
dec
xchg
jns
push
sub
nop
fldt
and
sub
pop
inc
mov
mov
call
sbb
sbb
push
fimull
sub
jo
adc
jmp
sbb
push
mov
bound
call
aam
lods
daa
dec
repz
repz
jl
add
xor
mov
mov
cmpsl
or
movsl
icebp
xor
mov
sub
sbb
das
lock
test
loopne
pop
shll
stos
aad
aas
ficoml
xchg
xchg
dec
fsub
mov
hlt
xor
push
negl
mov
aad
fistpl
mov
hlt
jge
stc
sbb
inc
cmc
inc
movsl
cld
cwtl
cmpl
xor
xor
cmova
lret
dec
stos
scas
movsl
mov
dec
in
ret
xor
cmp
inc
incb
cwtl
dec
outsb
std
mov
call
ljmp
ds
pop
sarl
push
repnz
cmc
repz
adcl
iret
xorl
mov
add
inc
lods
xor
sahf
sub
std
aam
mov
insl
inc
iret
mov
or
and
sbb
scas
cmpsl
and
push
iret
mov
sbb
jp
jle
mov
fbld
inc
mov
xchg
push
fisttpll
pop
lret
pop
push
std
movsb
fisubl
xchg
adc
inc
into
ds
fsubl
ljmp
pop
xor
rorl
idivl
divl
xor
jg
mov
imul
jmp
or
loop
mov
idivb
lahf
sub
jge
loopne
push
sbb
ljmp
lcall
add
aad
push
xchg
ss
arpl
scas
ror
into
dec
in
jg
jmp
inc
adc
dec
gs
xor
sub
jb
push
sbbb
fisubrl
cmp
adc
jle
std
push
mov
mov
mov
jae
lret
fucom
divl
sub
addr16
hlt
xor
stos
stos
push
mov
jmp
out
push
mov
lret
mov
pusha
cwtl
push
fcmovnu
cld
mov
xchg
mov
lea
loopne
sbb
loope
push
mov
notb
fbld
jge
xchg
mov
or
loope
scas
pop
insl
xchg
fldt
mov
cmp
dec
mov
rolb
mov
repnz
in
sbb
hlt
aas
mov
pop
mov
js
imul
xorl
fsubl
arpl
sub
out
out
add
inc
dec
inc
clc
add
fnstsw
inc
out
pop
adc
mov
out
and
adc
iret
test
jnp
cmp
add
popl
push
jnp
and
mov
ret
and
sub
add
hlt
cmp
fidivs
jnp
cmp
cld
and
outsl
push
cmp
out
sbb
jg
popa
push
jl
or
outsl
jle
or
cmpsb
gs
divl
mov
sbbb
push
lcall
rcl
jbe
cltd
fdivl
aam
jns
mov
popa
and
outsl
sbb
addr16
mov
sub
adc
mov
inc
sub
mov
sbb
xor
jg
rorb
xor
orl
enter
cmp
cmp
cld
add
mov
inc
and
ret
sbb
in
inc
test
lcall
push
push
add
xor
call
outsl
ret
dec
into
in
aas
call
gs
xchg
mov
cmp
inc
jle
push
push
add
or
mov
sbb
push
es
fsubrs
or
and
rclb
mov
mov
inc
cmp
outsl
outsb
cld
inc
xor
addr16
ds
pop
js
cld
xchg
idivb
inc
mov
sbb
ret
pusha
push
aad
stc
stc
scas
clc
sbb
popa
js
pop
jge
add
aaa
popf
sbb
add
sub
push
xchg
and
je
das
add
bnd
mov
sbb
cmpsl
or
std
lcall
bound
lahf
inc
inc
clc
mov
es
push
mov
fsub
mov
and
andb
inc
push
lret
jle
cltd
xchg
adc
push
movsl
mov
cwtl
jbe
mov
cmpsb
push
push
outsb
jbe
add
int3
cmp
ljmp
movsl
pop
mov
pop
loope
sbb
notb
push
mov
fwait
fildl
mov
mov
cmc
and
xor
lea
mov
les
pop
xlat
fcmovnb
or
psraw
sbb
leave
xor
push
daa
cmc
dec
outsl
bsf
push
jmp
data16
cmp
cmp
push
aaa
xor
aaa
daa
mov
mov
lahf
pop
jo
sub
push
pop
adc
scas
addr16
or
pop
cmp
leave
lcall
or
bound
mov
shl
loop
mov
cli
pop
imul
sbb
dec
pop
push
sbb
das
pop
mov
mov
fldl
mov
out
and
mov
pop
cli
pop
xchg
xchg
bnd
mov
test
scas
arpl
shll
dec
inc
push
out
xchg
arpl
roll
mov
dec
fldenv
jg
cmp
lods
out
jns
jno
or
add
pop
and
sarl
dec
repnz
adc
push
jge
cwtl
mov
push
repz
pop
mov
sub
movsl
dec
lret
pop
xor
push
leave
das
flds
int3
ds
dec
imul
jno
push
pusha
jl
das
dec
dec
enter
sub
sub
mov
stos
pop
mov
mov
jb
lods
shll
aam
cmpsb
sbbb
inc
insl
data16
cmp
in
xor
dec
jo
and
aaa
xchg
add
rcrb
dec
adc
fisubrl
dec
xlat
dec
cmp
repnz
pop
inc
xor
call
cmpsl
sub
jae
sub
in
xchg
xor
ret
aam
inc
and
mov
adc
insl
nop
lea
arpl
inc
dec
out
xchg
out
mov
push
jo
adc
out
hlt
lds
test
pop
shlb
cmp
mov
adc
xor
mov
mov
dec
or
js
sarb
in
and
sahf
and
lock
add
add
lods
fsub
dec
out
cmp
cmp
lahf
push
lcall
mov
repnz
jmp
adc
jns
in
mov
mov
das
pop
inc
push
addr16
mov
dec
jns
ljmp
fiadds
daa
popa
ja
jg
adc
ds
inc
xchg
mov
dec
push
xor
pop
add
cmp
loopne
shll
fdivrs
jge
movsl
add
jl
jbe
lds
push
or
mov
insl
add
mov
mov
js
xorl
mov
lds
and
sbb
sbb
out
inc
adc
inc
ret
sub
cld
out
hlt
jnp
pop
mov
pop
lods
mov
stc
or
shr
cmp
add
xchg
js
push
pop
js
push
aaa
push
test
push
popl
pop
stc
dec
pop
sbb
scas
pop
mov
sbb
icebp
lds
pop
out
jmp
jno
xchg
dec
les
int
stc
or
push
lds
dec
add
adc
movb
jle
popa
sub
jmp
sbb
push
pop
arpl
push
mov
rorb
inc
nop
xchg
cmp
movsb
jo
popf
or
jecxz
xor
cmp
das
xlat
jnp
stos
repnz
xor
in
mov
out
repz
movsl
inc
dec
outsb
repz
xor
sub
sub
inc
push
jle
mov
adc
rcl
insb
mov
mov
inc
jae
add
pop
push
dec
or
loope
and
jmp
jae
adc
data16
sqrtps
pusha
and
addr16
cmpsb
xchg
je
sub
pushf
pop
es
insl
push
push
or
ja
jbe
in
add
fidivrs
adc
inc
xchg
aas
comiss
xor
movsl
lds
sbbb
add
mov
xor
jb
pop
fmuls
dec
sbb
jp
mov
stos
fadd
dec
and
add
xor
cmp
mov
mov
js
xchg
je
xchg
divl
xor
pop
enter
sbb
sahf
adc
aad
xor
mov
push
ret
adc
cli
data16
xchg
dec
loop
aam
pop
pop
insb
mov
or
int3
and
jne
pop
inc
out
aam
popa
shll
fwait
sub
mov
mov
push
push
xchg
push
cmpsl
cmp
lods
push
scas
pop
sub
and
ja
imul
insl
int
mov
xchg
ja
sbb
mov
jle
jo
out
ljmp
popf
jmp
and
or
das
mov
push
jmp
sarl
cmp
aaa
add
orb
pop
and
dec
mov
inc
mov
adc
or
push
es
push
imul
testb
mov
outsb
stos
pop
shrb
add
cmp
arpl
dec
data16
js
in
ja
mov
ja
or
fcoml
rolb
in
int3
cmp
xchg
dec
out
aas
insl
sub
arpl
enter
cltd
and
push
push
cmp
xlat
sub
xorb
fidivl
xchg
hlt
insl
stos
pop
cld
lds
and
push
outsl
aad
fcomps
mov
add
mov
lcall
adc
clc
mov
lods
rclb
adcb
xor
fstpt
inc
leave
push
into
cmpsl
and
outsb
xchg
scas
pushf
ret
rep
rcrl
stos
push
inc
mov
loopne
inc
push
xor
dec
adc
movsb
push
dec
hlt
cmpsl
lahf
mov
or
xchg
aam
xor
jo
xchg
xor
push
cmp
lods
xor
pop
pop
call
sbb
push
rcll
sti
lcall
mov
adc
sbb
pop
fmuls
or
add
ds
cmovl
jbe
xchg
sbb
mov
lret
out
pop
or
js
mov
js
jae
out
popa
mov
push
iret
les
in
loopne
fstpt
inc
int
mov
mov
das
adc
nop
sahf
in
pop
int
inc
iret
mov
cmpsb
xor
sub
je
cmp
pop
xorl
js
jbe
sahf
loopne
jne
xor
lret
nop
push
loopne
or
lret
inc
js
mov
loope
add
xor
jmp
adc
jo
jae
stos
in
pop
shll
pushf
mov
mov
cmp
hlt
mov
in
mov
shll
pusha
in
and
and
xchg
xchg
into
loope
cltd
lret
mov
inc
rolb
jmp
stc
aam
sar
add
sbbb
push
pop
cltd
leave
faddl
and
arpl
hlt
and
or
add
pushl
jmp
lcall
out
mov
xor
dec
dec
lret
imul
add
adc
push
adcb
mov
mov
sbb
adc
movb
cs
sub
fildll
sbb
adc
adc
sarb
cmp
xchg
icebp
cmpsb
adc
mov
push
mov
out
push
in
pushl
mov
addr16
das
test
scas
jle
mov
test
daa
loop
and
shlb
inc
mov
lods
repz
lea
outsb
imul
fisttps
add
enter
mov
mov
dec
mov
mov
lcall
fwait
loop
push
cmp
sub
bound
aam
sbb
and
inc
adc
aam
add
sub
in
sbb
lcall
cli
sbb
pop
scas
mov
adcl
inc
int
roll
dec
les
fwait
enter
cmp
cmp
hlt
sahf
imulb
inc
cmpsb
add
pop
or
aam
aam
push
and
lahf
outsb
push
sbb
shll
xchg
jecxz
divb
mov
movsl
xor
pusha
xor
fsubp
sub
pop
xor
pushf
add
dec
mov
sbb
and
lcall
test
add
sub
lret
push
incb
jnp
rcrb
dec
xchg
outsl
mov
test
jle
push
sbb
or
rorl
shll
add
into
sub
bound
cli
popf
push
jg
mov
subb
loopne
insl
xor
adc
mov
outsl
add
lcall
mov
clc
add
jno
inc
push
fstl
inc
mov
sub
jg
xchg
push
lahf
pop
jo
mov
add
enter
fs
nop
jae
out
scas
in
outsl
int
or
cmpsl
and
xchg
mov
fisttpll
orb
mov
loope
pop
push
pop
jl
pop
call
jp
mov
xchg
cli
add
sub
sbb
js
or
xchg
push
push
jg
stc
sub
stc
xchg
mov
lahf
fsubrs
ret
scas
and
call
jmp
popf
cmp
dec
jge
jns
jno
mov
or
or
jo
rcl
cmp
lea
sub
sbb
dec
add
loope
sbb
jne
in
test
jns
adc
xchg
nop
jae
jl
sub
out
pop
loopne
xor
cmp
sub
rclb
int3
cwtl
shl
imul
inc
jno
mov
repnz
fs
sbb
mov
mov
add
pusha
push
and
xor
clc
inc
gs
fldenv
ljmp
mov
xor
push
jb
imul
shrl
adc
iret
int3
or
ret
pop
sub
sub
xor
or
nop
cmp
sbb
nopl
outsb
fst
jns
mov
cld
jmp
jmp
es
sbb
cmp
mov
pop
dec
sub
in
ret
movsb
nop
push
xchg
pop
inc
xor
fists
lea
mov
add
inc
outsb
sub
or
pop
mov
lret
movsw
xchg
xor
aam
cmp
lcall
stos
test
add
lret
sub
in
pop
sub
int3
mov
mov
jmp
jecxz
xchg
jecxz
lods
push
mov
int
jno
adc
nop
fists
icebp
rcrb
sub
outsl
daa
jne
push
pop
pop
icebp
xor
mov
inc
je
mov
xor
cwtl
lret
aad
clc
rorl
std
inc
mov
dec
jge
fdivrl
push
ficoms
cli
push
mov
mov
xchg
fwait
lods
jns
repz
jp
outsb
bound
sbb
pop
into
cmpb
push
mov
es
sbb
jecxz
shrb
lret
pop
out
out
push
popa
mov
lahf
lds
lods
add
rcr
pop
sub
inc
push
add
inc
out
push
enter
push
aaa
imul
iret
fwait
scas
push
xorb
cmp
and
mov
xchg
pop
in
and
mov
test
adc
mov
inc
push
jno
pusha
xchg
ja
jbe
nop
cmp
out
dec
lret
pop
movsl
mov
addr16
mov
sahf
lods
imull
pop
scas
adc
roll
jbe
xchg
pop
mov
sarb
mov
xor
and
fistpll
dec
mov
push
scas
pop
and
out
jmp
cmpb
sbb
jl
daa
jl
pusha
sub
ljmp
mov
loope
jmp
push
jle
adc
xlat
push
popf
clc
pop
mov
sub
inc
mov
aas
push
shr
push
xor
sahf
cli
push
jle
ljmp
les
pop
and
mov
push
ljmp
mov
dec
jmp
xchg
inc
cmc
pusha
mov
or
mov
mov
sbb
sti
pop
xor
lea
mov
sub
fxch
nop
adc
xor
pop
mov
and
popa
cmpsb
adc
cmpsb
in
sti
push
xchg
cmpsb
mov
dec
mov
aam
mov
les
test
mov
jp
adc
movl
cmpsl
pop
cmc
mov
lock
ds
cmp
add
push
mov
test
cmpl
xor
aaa
cmp
lea
out
outsl
xchg
ret
pop
arpl
dec
adc
in
iret
inc
hlt
xor
pushf
jnp
xchg
push
pop
sahf
lcall
inc
lea
cli
daa
cmp
das
push
outsb
jl
fsubrl
or
push
xchg
out
cld
mov
pop
imul
xor
jl
xor
rcrb
inc
lea
jne
or
adc
jge
hlt
test
pop
jnp
ja
pop
mov
ds
inc
cld
in
out
cli
and
mov
jnp
jp
xchg
ja
sub
mov
repnz
bound
mov
mov
inc
sub
mov
iret
add
ret
nop
aaa
xlat
and
xchg
mov
adc
in
jae
enter
dec
loope
sub
es
ljmp
sub
pop
push
cwtl
or
mov
mov
sbb
out
and
test
pop
mov
jmp
sub
lahf
jle
inc
push
sti
xchg
dec
mov
out
ret
stos
add
jge
jae
cli
mov
dec
sub
ds
js
or
fcmovne
pop
or
ljmp
xor
sbb
arpl
adc
xchg
fcmovu
mov
push
cli
push
lds
push
inc
xchg
mov
adc
out
outsb
stos
cld
add
sbb
cmp
ret
out
xchg
xchg
jp
mov
xor
jae
mov
xchg
fbstp
test
dec
add
jmp
in
adcb
ja
or
mov
dec
les
pop
out
aam
jo
mov
scas
jge
push
loopne
inc
push
notl
fdivrs
imul
popa
mov
std
inc
cli
cltd
jge
cmp
in
pop
adc
lret
outsl
cmpsb
call
adc
les
cld
push
ret
and
sub
inc
jmp
clc
ja
jle
subl
inc
and
cwtl
jae
add
sbb
xor
ja
add
xlat
rol
clc
adc
stos
pop
sub
xchg
ficomps
xor
aam
imul
ljmp
mov
cmc
sbb
sbb
inc
sub
imul
mov
mov
cli
adc
and
mov
es
sbbb
out
add
mov
pusha
lea
cwtl
stc
xor
movsl
inc
jg
pop
inc
nop
push
pop
add
jns
inc
mulb
mov
cmp
jl
lcall
dec
or
inc
adc
sub
mov
mov
cwtl
and
repz
jle
xchg
sbb
lods
mov
push
sbb
test
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
dec
dec
cwtl
rolb
jl
mov
mov
jge
sbbl
pop
cli
mov
cmp
add
add
repz
push
xor
fsubrl
jge
mov
std
mov
sub
jp
fwait
sbb
cld
ljmp
test
mov
sub
mov
pop
cmp
jns
jbe
jl
push
das
pop
or
cmp
aam
sub
int
adcl
mov
push
dec
fsub
mov
mov
gs
cs
jle
test
int
mov
sub
rolb
ja
jg
adc
sti
das
cmp
mov
lret
cmpsl
shll
addr16
das
ds
jecxz
and
ret
xor
dec
mov
sbb
mov
scas
lds
cld
mov
test
ret
movb
ret
xchg
stos
pop
mov
mov
jnp
sbb
xchg
jmp
shlb
mov
push
cmp
or
cs
movsl
or
adc
adc
jecxz
lret
xchg
mov
jge
xor
por
bound
cwtl
in
add
inc
pushf
scas
sarl
daa
pop
arpl
mov
je
stos
ja
jge
out
adc
mov
int3
and
inc
inc
insl
cld
add
add
mov
jmp
daa
mov
and
into
insb
dec
inc
push
add
push
or
add
test
pop
jns
mul
int3
push
pop
shll
pusha
pusha
aad
ja
xorb
xchg
cmp
inc
dec
imul
sbbl
jge
lahf
cmp
stos
pop
jns
jns
lahf
sbb
popa
add
dec
fcompl
push
lods
lret
xchg
lds
scas
loope
pushf
outsb
lock
sub
mov
xchg
and
out
dec
cmp
inc
arpl
inc
sbb
xchg
loopne
sbb
mov
in
jnp
pop
pushf
xchg
data16
ljmp
int
stos
jb,pt
sub
push
sub
out
mov
out
ja
jo
ljmp
mov
sahf
movsb
jl
aas
ja
or
in
mov
mov
in
and
xlat
into
addr16
jp
popa
fwait
mov
and
mov
jb
cmp
mov
ss
test
out
lcall
xchg
inc
incl
loope
cmp
push
push
ljmp
ret
and
aas
pop
lock
and
mov
addr16
sar
push
cmp
sbb
loop
or
dec
orl
inc
jg
cmp
jb
mov
adc
fldenv
mov
es
sahf
test
xor
mov
cmp
frstor
mov
std
cltd
rcr
xor
cwtl
xchg
xchg
push
enter
out
jnp
inc
fs
in
inc
xchg
cmp
mov
pop
pop
bound
icebp
cwtl
mov
sub
add
xor
in
insb
daa
stos
inc
pop
mov
sub
les
xchg
enter
lcall
push
xor
cmpsb
inc
inc
or
idivb
es
mov
mov
pop
jno
push
ja
pop
mov
subb
and
jno
pop
push
scas
shll
jne
sub
int
hlt
push
xor
jns
jno
jne
and
cmp
out
addr16
push
sub
mov
and
out
sub
pop
nop
aam
adc
pop
call
lds
int3
lret
lret
adc
mov
data16
push
inc
dec
out
jecxz
or
mov
mov
cmpl
out
and
lea
lds
sbb
jne
notl
iret
mov
add
lcall
mov
je
push
mov
add
push
leave
outsl
aam
imul
jae
pop
sub
sbb
sbb
cmp
cmp
jmp
inc
sahf
sbb
jmp
int3
sbb
and
cmp
lahf
pop
loope
mov
cmp
psubsw
cwtl
sbb
xchg
cli
sarl
out
or
dec
sahf
mov
mov
movsl
sub
xchg
push
inc
cli
xchg
mov
sbb
xchg
aad
and
aad
add
adc
pushf
push
and
jnp
xor
jg,pn
ret
out
mov
add
inc
add
int
sbb
dec
pop
cmp
lea
add
sbb
cmp
jg
lods
jns
fsubr
insl
ret
jne
cmpsb
mov
aas
adc
mov
arpl
push
or
add
fsubs
push
inc
fstps
mov
or
movsb
jl
or
in
test
push
fiaddl
push
or
or
jbe
sub
xlat
adc
cmp
add
mov
fsts
lea
mov
mov
mov
mov
sti
aad
dec
repz
fcmovb
das
pop
xor
out
sub
notl
stos
cmpsb
or
test
pop
or
arpl
stc
lods
pop
dec
std
add
lret
out
add
adc
push
jbe
int3
icebp
mov
push
ja
pop
sahf
in
push
sets
filds
mov
mov
cmp
mov
fwait
jg
xchg
mov
cmpsl
mov
clc
or
xchg
cmc
mov
les
push
fwait
mov
cmp
subb
xchg
and
mov
flds
add
cltd
ja
cmp
jb
ficoml
cmp
fisubs
sbb
shll
mov
jnp
jo
xchg
cmp
call
out
mov
fsts
xchg
and
inc
add
out
dec
fnsave
xor
or
lahf
test
ja
je
fdivrs
mov
cmp
lcall
lea
xchg
scas
rol
mov
psraw
pusha
cmp
pop
rol
push
xchg
sbb
test
mov
lret
push
cmc
inc
stos
lods
xor
sbb
lock
test
mov
sub
push
jle
dec
xchg
xor
pop
lret
xor
daa
sbb
loopne
pop
and
xchg
fcomp
mov
add
rorl
rclb
xor
cli
lahf
cmp
sub
xchg
pop
outsb
adc
fwait
dec
in
repnz
std
loopne
xchg
outsb
sti
xor
testb
mov
or
mov
mov
jae
jmp
divb
xor
fcom
xchg
xor
adc
inc
xor
mov
and
rcrl
mov
ja
push
mov
clc
pushf
mov
mov
nop
faddl
js
xchg
mov
xchg
lods
imul
cmp
out
test
dec
mov
dec
inc
sub
inc
fildl
arpl
icebp
ljmp
pop
sub
and
cmp
xchg
cmp
imul
hlt
jl
mov
popa
cld
bound
fnstsw
outsb
repnz
or
rcrb
push
imul
mov
lret
outsb
jne
std
std
and
fs
ja
out
xchg
mov
pop
movsl
stc
mov
sbb
dec
sbb
dec
mov
cmc
dec
and
mov
xorl
mov
xlat
mov
or
je
and
popa
out
insl
cmc
inc
stc
xchg
gs
cmp
imul
adc
pop
or
adc
mov
add
xor
or
push
aam
scas
hlt
scas
sub
loopne
mov
xor
dec
fisubl
mov
ds
divb
fstpt
mov
dec
stc
rcr
push
inc
adc
mull
adc
xor
repz
mov
out
and
ret
stos
push
lods
orl
mov
xor
jecxz
rorb
mov
xor
mov
inc
jecxz
sbb
xchg
cmp
mov
leave
cs
mull
imul
sbb
leave
xor
sbb
or
ret
ljmp
imull
adc
loope
data16
jg
das
fbld
dec
push
push
shr
rcll
es
insb
test
xchg
push
jbe,pn
ljmp
mov
ds
out
xor
mov
cs
jb
lock
pop
fdiv
out
sbb
xor
cs
dec
sub
psubusb
sbb
jno
jns
and
shlb
xchg
adc
lods
sbb
jne
mov
and
rcr
cli
pop
fisttpll
aad
popa
loope
aad
xchg
jge
icebp
cmpsl
movsl
xchg
cltd
mov
or
in
xchg
stos
or
lahf
lock
mov
aaa
push
jle
int
int3
cs
mov
dec
rcll
and
repz
syscall
jo
mov
sub
pop
jecxz
repnz
pushl
rolb
nop
mov
mov
sbb
and
push
stos
pop
xchg
inc
xchg
aaa
insb
aam
cmc
push
add
shrb
adc
shl
call
push
jle
pop
xchg
mov
add
out
bound
push
sbb
cmpsb
mov
mov
sbb
int
je
sar
push
mov
hlt
and
jmp
pop
dec
cmp
xchg
dec
les
jl
vxorps
pop
push
aaa
sarb
repnz
sub
xchg
aas
xchg
and
pop
loope
fwait
lods
popf
xor
in
push
scas
cmp
femms
push
int3
jmp
lods
mov
cmp
adc
cmpb
mov
xchg
pusha
fimull
xor
jg
call
dec
mov
inc
gs
inc
sub
mov
and
sarb
int3
mov
mov
mov
lea
test
fldl
mov
movsl
stos
push
out
loopne
sub
mov
pop
inc
xor
xchg
inc
jmp
lret
mov
mov
ror
adc
jle
repz
adcb
shrl
ret
xor
jmp
int3
or
sub
fdivl
pop
iret
add
cmc
sti
cmp
lret
mov
adc
push
leave
push
leave
jne
xchg
pusha
mov
add
cli
sub
outsb
jo
dec
out
fmull
std
mov
push
dec
push
outsl
inc
sti
negb
cmp
lcall
xchg
mov
push
insl
adc
sub
add
push
push
add
adc
push
fistpl
jp
std
outsl
xchg
jp
mov
dec
vpsubq
lock
rcrb
shrb
push
jmp
mov
mov
pop
or
mov
lret
pop
adc
fisttps
add
addr16
dec
enter
pushf
jne
lods
adc
mov
sbb
or
adc
push
jg
xchg
outsb
push
sahf
out
push
sub
adc
arpl
rolb
sub
push
and
xchg
daa
movsb
dec
pusha
push
jecxz
ret
es
scas
mov
inc
jnp
pushf
lods
xchg
xor
xchg
and
outsb
push
aas
sub
inc
xor
dec
sub
cmp
cld
sahf
ljmp
cs
out
jge
or
idivl
cmpsb
fisubs
add
sub
sub
out
mov
pop
stos
cmpsb
pop
scas
test
repz
inc
and
jle
dec
fcoms
call
ret
mov
push
add
test
cmp
and
sub
in
mov
mov
add
sarb
adc
fldcw
arpl
bound
dec
add
adc
pushf
xor
push
adc
loop
ljmp
mov
adc
jne
es
cmp
es
inc
lds
rcr
out
leave
loopne
std
and
stos
push
subb
fcomps
rcl
arpl
adc
lret
pop
loopne
std
mov
jecxz
pop
lock
xor
imul
lea
inc
sbb
pop
inc
jne
test
cmpsb
push
insb
add
xor
mov
lret
movsl
add
icebp
repz
mov
or
jle
mov
popa
sub
ja
incl
or
fidivs
sub
jg
mov
shrl
xchg
push
pop
ja
mov
loop
cmp
add
cli
sbb
subb
aaa
sbb
xchg
mov
addr16
jle
mov
cs
mov
inc
popf
pop
mov
xorb
adc
dec
mov
push
loope
push
push
add
incl
and
aam
pop
dec
mov
icebp
and
and
test
sub
daa
leave
out
sahf
mov
mov
mov
ljmp
inc
insb
stc
jo
add
jno
fwait
push
pop
or
push
fdivs
leave
xchg
jae
rcr
fwait
addr16
mov
mov
int
int
jns
fldcw
mov
xor
sub
test
sub
dec
mov
jo
fsubrs
inc
pop
pop
cltd
insb
cwtl
mov
mov
sti
lods
jbe
xchg
nop
xor
inc
out
int3
call
shlb
fisttps
lret
ficoml
shl
mov
jmp
push
cmp
mov
fs
rclb
mov
mov
push
dec
jle
jmp
cmp
sub
xchg
cmp
aaa
hlt
sbb
mov
jne
mov
loope
ss
mov
popa
stc
pop
ret
stos
sub
push
test
in
fwait
pop
stos
invlpg
dec
stos
mov
mov
test
aam
in
cmp
shll
pop
inc
sbb
mov
mov
inc
jbe
mov
fdivs
mov
mov
lds
stc
shlb
mov
add
inc
dec
lods
cmp
push
aas
mov
cmp
adc
pop
sbb
mulb
and
pop
lret
mov
mov
test
stos
push
imulb
ret
ss
sbb
mov
in
call
pusha
inc
into
in
mov
cmc
xchg
popa
xor
in
adc
jle
imul
movsb
out
ficoms
mov
inc
fs
add
push
das
sbb
mov
mov
fisttpll
call
aad
ret
gs
push
fiaddl
andb
mov
lcall
inc
pushfw
sub
mov
mov
jl
mov
cmp
mov
dec
jne
pop
xor
jnp
mov
lret
test
fnstcw
and
out
mov
clc
addr16
stos
adc
adcb
fisubl
test
movsl
jp
mov
js
adc
push
pop
push
inc
inc
mov
cmpsb
cmp
ret
pop
push
loope
sar
sub
inc
addr16
xchg
addr16
sbb
pop
xchg
lds
inc
push
or
sub
movsl
push
repnz
mov
clc
mov
jbe
mov
push
pop
pop
push
ds
mov
je
idivl
popf
mov
jmp
xchg
icebp
outsb
dec
sbb
and
dec
loopne
hlt
ret
pop
mov
pop
xchg
insb
cmp
and
xor
fmuls
inc
fdivr
sti
xor
and
sahf
ljmp
pop
pop
in
jns
imul
sub
stos
das
pop
subb
cmpb
imul
aaa
fst
out
stos
add
mov
mov
push
mov
mov
popf
mov
xchg
cmp
roll
mov
lock
add
inc
pop
lret
les
or
fcomip
pop
adc
mov
loope
cmp
cmpsb
jnp
test
outsb
sbb
enter
mov
in
mov
adc
ja
ss
xchg
pushf
lds
or
cmpsl
or
nop
fcompl
mov
dec
mov
popa
negl
aaa
pushf
fistl
push
adc
fs
xor
adc
mov
leave
in
fucom
fnstsw
fildl
mov
icebp
ficoms
adc
or
stos
fimuls
xor
and
adc
inc
cmp
sbb
mov
mov
rcrb
mov
inc
and
cld
xchg
inc
mov
pop
test
jne
bound
inc
or
pushf
push
cmp
cltd
push
sub
outsb
inc
add
cmp
cmp
push
cmpsb
and
pop
xchg
push
pop
adc
fmuls
pop
pop
xor
jns,pt
out
loope
int
nop
imul
xchg
lea
hlt
mov
pop
sti
out
adc
inc
dec
ret
test
mov
dec
cwtl
popf
movsb
pop
pop
int
cmpsb
push
movsl
cmc
repnz
out
mov
adc
add
mov
xor
imul
orl
sahf
mov
or
pop
test
xchg
clc
je
cld
lds
push
cmc
mov
fdivrp
xor
or
inc
mov
out
bnd
dec
scas
push
or
jmp
pop
sub
xchg
jbe
mov
enter
sahf
jo
mov
mov
mov
enter
mov
scas
cltd
hlt
xor
mov
pop
mov
out
adc
aam
inc
hlt
mov
imul
xor
mov
xchg
ja
hlt
jnp
mov
pop
fiaddl
sub
mov
in
fidivs
xchg
es
out
mov
mov
leave
dec
pop
lcall
xor
cmpsl
cli
aaa
sub
icebp
mov
lds
into
mov
shll
imul
lcall
jo
dec
inc
cld
sahf
xor
dec
mov
dec
mov
cmpb
cmp
inc
lret
mov
mov
pop
into
mov
cwtl
stc
xor
mov
xor
dec
fucom
insb
in
int3
out
stos
xor
pop
cmp
bound
ja
pop
aaa
jb
jae
xchg
xor
mov
shlb
jno
pop
imul
cwtl
push
add
movsl
repnz
mov
in
push
loop
ret
mov
repnz
stos
inc
test
xchg
dec
mov
popa
popa
pop
jle
mov
cmp
into
stos
orb
pop
arpl
push
mov
jne
pop
mov
loop
test
xorb
pop
leave
mov
mov
fstps
test
mov
mov
fwait
orl
pushf
es
loope
sub
addr16
fbld
mov
addr16
ret
dec
scas
flds
std
scas
mov
insl
dec
jbe
sarl
rol
sbb
inc
mov
insb
push
push
loope
cmpsl
pop
jno
jno
push
pop
subb
hlt
xor
pop
out
aaa
pusha
cwtl
xlat
dec
data16
cwtl
adc
in
lahf
jno
or
push
dec
push
push
enter
push
outsl
out
test
xchg
cmpl
adc
call
xor
sub
shufps
sbb
shlb
pop
movsb
rolb
xchg
test
bound
cmp
xchg
or
jl
inc
test
inc
dec
insb
dec
push
aam
cs
jmp
es
mov
sahf
mov
mov
lret
jne
lea
mov
xlat
daa
xor
decb
ljmp
fbld
inc
fistps
push
inc
jno
push
mov
cmp
jns
gs
shl
test
cmp
nop
sbb
cmp
loope
inc
cmp
movsl
mov
aad
fidivl
incl
mov
outsl
mov
sub
xchg
jo
cmp
jg
pop
and
jg
pop
pop
daa
imul
jmp
sbb
push
mov
push
dec
jns
out
sbb
cli
dec
mov
jno
je
adc
or
cmp
stos
gs
xor
adc
mov
jecxz
pop
lea
lcall
icebp
mov
xor
stos
stc
jns
xchg
jb
xchg
xchg
inc
sub
mov
cmc
cwtl
ss
mov
jo
in
pop
push
ja,pt
and
negl
add
jmp
popf
out
mov
jge
inc
xor
sahf
xor
inc
sub
leave
dec
testl
popa
gs
cmp
fstl
fimuls
jmp
shr
orl
pop
shll
fs
mov
mov
xchg
push
ja
xor
pop
ret
mov
js
mov
mov
enter
cmp
xchg
sub
in
add
popa
cmp
and
mov
adc
mov
test
dec
jmp
or
lock
ss
sbb
mov
sub
inc
das
lcall
shll
dec
mov
push
stos
cmp
imul
push
and
jge
add
dec
in
dec
mov
hlt
push
loop
shrb
mov
xor
ret
iret
add
inc
int
out
pop
mov
xor
mov
push
out
jnp
enter
stc
inc
mov
add
pop
push
jge
jecxz
jmp
push
int3
insl
movswl
test
inc
sbb
mov
test
sub
dec
ret
test
imul
stc
stos
aaa
xlat
mov
lcallw
jne
mov
in
in
sub
dec
into
mov
push
lods
imul
ret
outsl
fiaddl
in
repnz
or
flds
xchg
hlt
in
test
movsl
dec
sti
lcall
gs
or
xchg
std
lcall
add
pop
inc
mov
dec
hlt
or
mov
dec
repz
cli
add
fwait
sbb
cmp
sub
pop
inc
arpl
add
mov
aam
jp
out
cmp
sti
mov
mov
or
xchg
sbb
adc
inc
mov
xor
xor
or
addr16
testl
cwtl
push
xchg
dec
push
test
pop
xchg
icebp
sbb
jne
pusha
lds
mov
mov
cmpsl
mov
dec
loopne
test
bound
js
mov
jbe
pop
xor
sti
dec
mov
xchg
push
iret
sti
sbb
shl
scas
xchg
push
xchg
fs
loopne
int3
repnz
or
xchg
dec
xchg
pop
jnp
rsqrtps
addl
inc
out
scas
inc
out
repz
sti
push
iret
cmp
dec
mov
in
mov
insb
in
pop
pop
dec
adc
outsl
mov
pushf
dec
dec
xchg
addb
lret
sbb
out
popa
ficomps
insb
jno
xchg
mov
xchg
lds
xor
or
ret
or
int3
xchg
ror
dec
arpl
or
mov
xchg
sub
xlat
jmp
sbb
or
xor
out
std
pusha
add
enter
cld
dec
push
pop
ret
adc
push
jmp
cmp
mov
sahf
mov
pushf
and
call
and
fwait
fwait
xlat
xor
xchg
dec
mov
sbb
adc
jle
cmp
daa
mov
or
iret
arpl
clc
test
shld
cmpsl
push
or
leave
mov
or
les
fmull
lock
fisubs
jp
dec
add
fmull
stos
push
data16
add
pusha
or
dec
mov
cmpsl
in
dec
jbe
popl
mov
test
movsl
call
fwait
mov
jno
outsl
or
pop
xor
pop
mov
je
push
sub
stos
cli
addr16
xchg
ss
lret
mov
dec
test
sbb
sar
imul
xor
sub
or
push
clc
paddq
xor
xor
gs
cli
imulb
pop
popa
scas
cmp
and
pop
and
xchg
nop
ror
andl
adc
sbb
lret
mov
aad
in
les
push
scas
add
mov
mov
repz
jp
mov
dec
sar
cmc
pop
stos
adc
xchg
fwait
ljmp
jle
out
cmp
mov
xor
nop
fwait
and
pop
sbb
pushf
iret
pop
fs
fsubr
mov
lea
arpl
adcl
fdivs
aad
sti
inc
test
fisttpll
cmc
mov
xlat
out
cmp
push
out
loopne
lock
push
outsl
repz
int
inc
pop
into
inc
and
cmp
mov
sti
jne
rclb
add
jecxz
ret
pop
outsb
aaa
or
das
ficoml
or
fs
add
mov
bound
int3
pop
push
cmp
sbb
dec
push
and
mov
inc
leave
cmp
inc
lock
xchg
push
and
mov
mov
cli
scas
aam
cmp
cmc
adc
mov
xchg
mov
inc
dec
mov
and
sub
cmpsb
jl
aas
outsl
ljmp
xor
adc
jne
jmp
push
and
pop
lods
cmp
jns
addl
cmp
test
cltd
fs
outsb
hlt
cmp
sub
add
sti
push
shll
aam
imull
sub
insl
test
test
pop
or
dec
and
stc
sbb
bound
mov
push
mov
outsl
push
mov
inc
clc
sbb
push
ds
cli
or
mov
mov
xor
test
pop
or
mov
push
mov
and
inc
pusha
adc
rcrl
sti
cmpsb
and
mov
imul
lret
js
js,pt
enter
push
bswap
loope
push
pushf
dec
ljmp
mov
cmp
adc
and
adc
mov
jmp
push
nop
or
in
xlat
daa
or
in
test
mov
dec
popf
xlat
sti
lret
scas
repnz
sub
stos
repnz
mov
xlat
xlat
mov
aad
add
pop
insb
xor
mov
pop
addb
or
push
in
outsl
idivb
jge
adcl
push
mov
arpl
in
inc
xchg
cwtl
pop
and
loope
jecxz
pop
push
ja
xchg
ljmp
mov
ja
mov
dec
loop
loop
in
mov
shrb
push
sbb
jno
ret
sub
push
cld
jb
icebp
adc
mov
cmp
xor
pop
mov
mov
mov
dec
dec
mov
out
mov
cmc
pushf
mov
das
out
fstp
in
movsl
mov
lods
push
mov
push
ja
xlat
adc
xchg
js
xlat
xchg
jbe
stc
push
push
les
adc
mov
in
stos
cs
mov
mov
cmp
mov
xorl
add
push
dec
int
rcrb
dec
cmpsl
mov
pusha
stos
and
jo
push
jne
sub
cmc
mov
dec
inc
repz
cltd
jmp
push
xorl
sarl
push
subb
mov
out
mov
cmp
outsl
imul
and
mov
xchg
adc
lea
rorl
cmp
mov
push
jmp
addb
jge
loop
cmp
arpl
in
or
and
and
sub
mov
sbbl
cltd
dec
pop
ficoml
mov
inc
pop
test
and
jns
pusha
or
shl
adc
adc
aaa
pop
lods
test
inc
and
mov
ret
test
pop
call
in
push
bound
mov
cmpsl
xchg
lods
imul
pop
adc
fucom
mov
out
aas
pop
jno
inc
dec
push
clc
adc
cmpsb
cmp
adc
xor
xchg
mov
and
int3
push
xchg
xor
cld
inc
push
imull
daa
inc
js
sbb
outsl
sub
cmp
outsb
mov
insb
or
push
dec
xlat
mov
lock
xor
fs
jp
jmp
pop
inc
fwait
sbb
xchg
mov
push
mov
loop
and
mov
sbb
and
and
inc
mov
sbb
adc
or
out
jo
popa
cmp
dec
adc
pop
sti
or
rcl
addr16
jecxz
add
cmp
mov
popa
jmp
stos
dec
cli
daa
jmp
jns
cmp
cmp
pusha
and
mov
adc
cmpsl
xchg
add
mov
fcmovnbe
pop
mov
fiaddl
inc
test
daa
insl
and
stos
aas
sbb
leave
mov
adc
sub
cmp
or
inc
cwtl
in
inc
adc
or
mov
push
rolb
inc
sbb
lret
repz
cld
add
mov
and
inc
ret
sbb
call
enter
xor
xchg
sbb
repz
loope
popa
add
rclb
push
cld
and
mov
std
rclb
stc
int
sub
push
or
mov
jmp
inc
sbb
and
jne
push
call
inc
lcall
test
mov
call
mov
xchg
xor
jle
jp
cmpsb
xchg
cmp
jbe
sub
imul
mov
loopne
dec
icebp
xchg
sbbl
dec
mov
pop
lret
in
jae
push
xor
push
push
pand
dec
and
sti
push
out
or
jmp
mov
pop
cld
dec
cmc
mov
or
shlb
inc
cmp
insb
sub
pop
scas
dec
fdivs
inc
xchg
add
ljmp
xor
nop
xchg
cs
and
mov
incl
xchg
popf
pushf
mov
into
mov
mov
xorl
or
cmp
mov
jle
or
std
shl
loop
push
jg
inc
and
inc
iret
jnp
cmp
dec
and
pusha
jbe
pop
data16
and
or
xchg
je
mov
jp
ret
adc
inc
js
out
xchg
push
fsubrl
adc
rorl
mov
mov
popf
test
push
into
shlb
shl
push
jg
xchg
lods
push
je
xor
dec
lcall
xor
and
ss
clc
stc
push
cmpsl
imul
pusha
pinsrw
xor
test
and
outsb
loop
xor
test
add
aaa
mov
add
ja
dec
xorb
jle
xchg
fmulp
scas
test
cld
push
or
sbb
xlat
imul
sub
cmp
dec
icebp
or
cmc
mov
push
sub
in
mov
cwtl
sub
in
shrb
imul
int3
nop
cmp
and
xchg
pop
inc
into
and
jl
int
stc
jb
pop
adc
cmpsl
xchg
and
filds
gs
or
sub
inc
les
cwtd
or
gs
cmp
inc
and
xchg
pushl
adc
pop
pop
aaa
xor
rorb
and
jnp
pushf
jge
push
mov
pushf
fwait
and
fwait
sbb
mov
ficoml
aad
out
repnz
ljmp
fsubrl
leave
je
push
das
into
cmp
and
lret
cs
lcall
fwait
jnp
jo
xlat
pop
out
sub
adc
xor
dec
xchg
or
mov
inc
in
or
insb
add
sub
das
cmp
inc
mov
mov
ljmp
scas
test
pop
testb
dec
sub
sub
subl
jns
dec
testl
mov
add
jno
add
divl
or
mov
fwait
pop
int3
stos
ret
lock
sub
sub
movsb
jmp
out
dec
add
adc
push
adc
xchg
psubd
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
mov
sahf
mov
pop
jl
out
cmp
and
pop
pop
or
and
xchg
cltd
pop
cmp
xchg
mov
test
pop
xchg
add
jns
add
lds
ja
xchg
lret
lcall
lret
into
into
add
iret
cmp
leave
movsb
jmp
ja
test
mov
mov
aas
pop
lods
push
xchg
push
and
pop
mov
dec
mov
pop
call
add
adc
xchg
mov
lret
push
push
js
ljmp
adc
enter
jne
add
cmc
jecxz
pop
dec
loope
or
sub
push
add
or
dec
mov
add
cmpb
jbe
sub
scas
dec
pop
xor
int
push
mov
inc
mov
mov
scas
pushf
ret
lods
sbb
pop
lods
fadd
call
lea
add
or
mov
lahf
and
xchg
sbb
mov
data16
dec
cmp
or
mov
ljmp
push
in
cmpl
push
sub
sub
pop
cmp
push
jl
cmpsb
cld
xchg
hlt
out
mov
jnp
cmc
mov
xor
and
mov
sti
or
andb
arpl
cmp
or
ror
pop
cs
in
lahf
pop
or
jnp
cld
cmpsb
pop
into
mov
mov
cmpsl
pop
int
sbbl
or
outsl
inc
stos
adcb
test
sub
pop
dec
lahf
mov
and
mov
xchg
lcall
mov
mov
rep
pop
addr16
add
outsb
dec
mov
push
sbb
mov
inc
dec
imul
add
sub
sbb
cltd
lret
pop
xor
and
mov
pop
pop
cmc
xchg
out
mov
inc
sbb
outsb
pop
les
call
scas
push
xchg
lock
xchg
mov
ffree
in
sbb
jo
push
sub
pop
popf
inc
aam
into
push
addr16
add
cltd
mov
aad
sar
jne
fwait
adc
rcrl
sbb
push
or
leave
sbb
lahf
sbb
aad
inc
es
inc
cwtl
cmp
cmp
hlt
data16
cs
xchg
adc
enter
and
aas
rcr
rorl
lret
bnd
inc
aaa
arpl
xchg
outsb
pop
mov
inc
jo
push
aad
aas
or
stos
lret
dec
mov
xchg
lods
fsubrl
xor
test
arpl
insl
imul
fildll
xchg
nop
scas
inc
repz
push
inc
test
cltd
jae
mov
rcl
push
shlb
pop
inc
aad
shl
xor
push
inc
xor
insb
sbb
jns
icebp
fs
outsb
add
jo
call
clc
mov
xchg
push
scas
outsb
dec
adc
call
mov
int3
inc
mov
pop
fwait
pop
jecxz
jp
lcall
jmp
mov
mov
xor
sbb
mov
sub
jo,pt
cmc
jg
mov
loop
lcall
incl
push
loope
sbb
cmp
mov
add
sbb
fcmovbe
and
push
add
or
in
fmuls
dec
adc
lahf
icebp
inc
dec
aas
sub
jmp
inc
inc
adc
pushf
inc
enter
scas
cmp
aaa
mov
lahf
pusha
xchg
push
dec
test
movsl
push
sub
lahf
leave
in
dec
cwtl
xchg
lods
lock
push
fdivrl
sub
mov
jmp
xor
jmp
push
leave
enter
imul
jle
lahf
in
mov
idivl
in
int
xor
pop
and
clc
jno
add
and
scas
xchg
dec
notb
movsl
cmpsl
mov
mov
gs
sub
lods
loopne
pop
cld
mov
jmp
frstor
cmp
sahf
imul
mov
xchg
pop
add
push
dec
loopne
mov
dec
clc
fmul
out
dec
mov
in
daa
xchg
testl
jo
scas
push
xchg
orl
cmpsl
popa
clc
clc
xchg
jge
imul
shrb
cld
mov
or
into
jecxz
jb
stos
mov
fwait
popa
mov
sub
cli
add
pusha
cmpsb
pop
pop
sbb
neg
ret
pop
cmp
xchg
icebp
insl
xor
mov
movsl
mov
xchg
rolb
insl
jns,pn
add
mov
negl
adc
fst
and
test
lret
cmc
push
hlt
xchg
fs
adc
cltd
sub
mov
fmull
inc
fisttpll
test
inc
insb
ror
inc
mov
cmp
mov
cmpsl
adcb
icebp
out
dec
adc
pushf
loope
ja
lret
mov
cld
ds
data16
pop
lret
or
insb
and
sbb
xchg
insb
push
mov
sti
add
cmp
add
xlat
pop
hlt
push
xlat
mov
pop
in
mov
mov
push
frstor
sbb
div
in
aam
add
repz
or
mov
fnstsw
jb
jmp
mov
in
ror
cmp
mov
test
imul
mov
dec
fwait
vminsd
xchg
mov
push
mov
adc
xor
xchg
sbb
dec
and
mov
pusha
out
cmp
insb
jg
movsl
fldl
inc
sub
stos
cmp
inc
xlat
sub
clc
popa
pop
sub
fdivrl
mov
jmp
cmpsb
fsubp
jg
pop
pusha
xor
or
inc
icebp
enter
mov
divb
mov
and
rorb
mov
mov
jge
rorl
pop
jbe
mov
bound
or
adc
test
aad
cltd
mov
out
push
icebp
xor
je
pop
jae
or
imul
orb
cld
push
dec
sub
cld
mov
lret
rcrb
aaa
divl
mov
test
and
mov
test
int
push
pop
inc
push
jae
push
dec
cli
in
and
mov
pushf
inc
and
mov
je
enter
dec
xchg
movsb
mov
stc
mov
push
lahf
insb
mov
repz
push
xchg
ja
cmpsb
cwtl
adc
jns
sbbl
cld
lahf
pushf
lret
adc
mov
stos
mov
jns
mov
fcmovu
mov
dec
push
dec
andb
jnp
pop
adc
ffree
andb
pop
aaa
out
mov
mov
data16
inc
dec
insl
inc
sbb
enter
inc
cmp
xchg
sub
and
and
imul
shl
fs
mov
mov
inc
repz
jge
xchg
push
outsb
rorl
xchg
pop
dec
pushf
mov
cmp
ror
test
lods
mov
inc
faddl
jmp
and
mov
pop
lret
inc
outsl
stos
into
pop
aad
sub
out
sbb
xlat
scas
sahf
add
inc
mov
jnp
jo
popa
add
cwtl
jns
lea
push
stos
pop
rol
xchg
enter
mov
in
lcall
cmp
pop
sub
push
inc
outsb
mov
add
xchg
insl
jg
sarb
push
int
fcoml
push
stos
lods
cmp
push
xor
test
or
lods
out
adc
pop
into
lods
xchg
repnz
cwtl
stc
ja
lcall
pop
sub
dec
jnp
add
sub
das
repnz
andb
out
mov
push
add
jae
sbbl
jb
xchg
jge
fists
jge
or
mov
add
pop
cs
mov
jb
das
neg
and
cmpsl
out
in
addb
mov
mov
orb
js
mov
jno
push
push
popa
xchg
filds
add
mov
fidivrl
into
movsl
leave
sub
scas
movsb
mov
cltd
lods
cld
pop
mov
fs
mov
pop
stos
inc
daa
lods
jmp
pushf
mov
neg
cmpsl
aaa
dec
test
shlb
shll
and
iret
and
test
outsl
xchg
lods
insl
arpl
call
cmp
in
getsec
loop
xchg
orb
subl
popf
in
push
adc
inc
mull
add
fistpll
mov
mov
filds
pop
sbb
pop
sub
clc
fldenv
push
aam
call
enter
inc
pop
mov
pop
lcall
mov
xchg
es
fistl
addr16
add
push
fs
adc
fisubl
arpl
pop
push
push
push
pop
repnz
mov
lods
xchg
int3
mov
inc
stc
movsb
dec
insb
cmp
mov
push
mov
cld
insb
cwtl
adc
faddl
out
adc
repz
mov
cmp
xchg
js
cld
mov
sbb
mov
inc
cmc
in
mov
pop
push
xchg
lret
out
push
rcll
ret
jo
xor
pop
adc
sub
int
sub
add
stos
pop
ret
sbb
shr
xor
bound
pop
inc
int
fdivl
insb
push
lock
into
push
fs
jns
bound
sub
divl
adc
cmovae
cld
sub
xchg
mov
inc
push
mov
shrl
shll
ret
test
sub
fdivl
popa
aas
ljmp
cwtl
dec
aam
in
loop
imul
jmp
dec
sub
cmpsl
push
jae
push
inc
fisubrl
sbb
and
ss
leave
cmp
mov
or
sbb
bound
ret
inc
js
add
in
jle
ss
outsl
hlt
sub
mov
gs
and
insl
scas
mov
sti
push
jle
jbe
fs
push
inc
stos
stc
or
cmp
and
out
icebp
data16
jbe
ljmp
stos
mov
push
xchg
popl
loop
pop
cmp
test
stos
pop
jmp
cmp
das
and
cmp
xor
xlat
arpl
cmpsl
jl
jns
insb
fpatan
iret
dec
imull
add
pop
rorl
cmp
cmp
cmp
xchg
das
imul
test
jns
pop
cmpsb
pop
iret
cwtl
xor
inc
add
clc
dec
mov
aaa
mov
push
pop
jnp
mov
mov
and
dec
jle
pop
mov
mov
sti
in
adc
cs
je
enter
outsl
xchg
adcb
mov
sti
mov
mov
dec
cltd
mov
test
addr16
pushf
adc
das
mov
repz
ss
sbb
flds
jge
lods
sbb
push
and
arpl
int
cmp
add
pop
xchg
pop
ja
mov
pop
mov
aas
and
pop
pop
pop
movsb
clc
lock
jmp
ds
xlat
bound
xchg
cmp
cmp
int3
cltd
dec
adc
shlb
enter
jg
insb
repz
insl
pop
roll
dec
xor
dec
xchg
stc
cmp
test
lds
sub
popf
mov
push
cmpsb
push
sbb
adc
cmp
and
inc
lahf
jne
and
or
ja
insl
xor
push
icebp
ljmp
and
or
ljmp
ret
xor
mov
sub
xchg
shlb
lods
mov
call
dec
lahf
stc
sub
mov
lock
pop
inc
gs
cmc
imul
mov
mov
jbe
dec
ret
dec
ljmp
lcall
lahf
adc
inc
lret
add
push
imul
jge
adc
in
in
sbb
mov
xchg
jmp
data16
mov
loope
pop
mov
push
cwtl
negl
pop
je
sbb
gs
ja
mov
add
popf
push
add
and
shlb
xor
scas
adc
pop
or
xor
push
inc
adc
mov
std
repz
adcl
sub
rolb
inc
out
loop
jg
sbb
jp
and
pusha
push
adc
insl
xchg
pop
dec
sahf
adc
popl
xchg
xchg
mov
js
xor
add
cltd
icebp
mov
push
mov
arpl
mov
lods
aas
xor
sub
or
jns
sbb
sub
aas
xor
cmp
cmp
cmp
rcrb
fstl
ret
insl
xchg
aad
in
mov
sbb
repnz
test
repz
mov
lahf
xchg
push
fsubrs
adc
ret
pop
into
arpl
jecxz
jo
icebp
pop
mov
xchg
into
jp
push
popa
stos
pop
add
dec
ja
test
add
push
xchg
out
pop
jp
mov
leave
push
push
pop
aam
fcomps
sub
ret
xor
push
popf
adc
sub
aad
dec
movsb
cmp
inc
out
out
fisubs
sub
mov
jle
mov
and
nop
xchg
lahf
sbb
sub
cmpsl
cmpsb
jns
adc
es
mov
adc
scas
shl
loop
xchg
xchg
ljmp
xchg
idivl
push
xor
ret
bound
scas
stos
shrb
fisttps
cmp
lea
mov
mov
loope
jmp
ja
sub
sub
jp
pop
hlt
push
adc
dec
in
mov
lret
cmpsl
xchg
cltd
scas
jae
sub
ds
aas
outsb
arpl
cmc
pop
jp
pop
cmp
out
sahf
push
and
or
aad
cmc
cs
sub
and
jbe
add
xchg
shrl
cmp
andb
imul
cmp
fdivrs
pop
mov
insb
lods
xor
in
mov
cld
ljmp
mov
mov
or
pop
xor
lcall
pop
inc
int
jg
dec
cmpb
cmpsl
and
cs
and
and
mov
cmp
xor
xchg
cmp
idivl
dec
xor
aad
roll
jnp
enter
dec
div
out
xchg
sahf
fisubs
out
adc
or
mov
leave
insl
sub
push
push
mov
dec
sbb
in
in
iret
in
jb
pop
daa
adc
pop
fbstp
test
mov
rorl
add
lds
push
adc
adc
push
jp
fisttpll
mov
lret
push
push
push
repnz
imul
xchg
rcrb
mov
addr16
not
jecxz
das
mov
sub
jecxz
and
add
or
pop
mov
push
and
sub
ja
pop
jnp
call
out
pop
fstpt
cs
daa
aas
adc
push
sbb
add
push
jne
pop
dec
jmp
xchg
jno
cmc
or
out
stos
xor
les
fimuls
shlb
and
loope
xchg
int3
jmp
pop
cmpsl
cltd
es
mov
jmp
fnsave
and
push
or
pop
andl
out
xchg
mov
iret
sbb
cmpsb
fst
mov
mov
pop
scas
outsb
cmp
xlat
aas
decl
xor
or
sbb
leave
clc
pushf
iret
in
xchg
cmp
push
jbe
pop
jmp
xor
out
push
mov
rclb
ret
xchg
inc
cmp
sub
scas
fcmovb
push
out
pop
movsb
ds
fildll
jle
inc
test
shll
and
xchg
pop
add
cld
mov
push
and
xchg
sbb
rol
jo
push
cmpsb
jo
mov
adc
lcall
lds
inc
xor
lcall
imul
or
dec
dec
or
pop
mov
int
dec
mov
cwtl
jns
ficomps
inc
push
sub
pop
dec
xchg
mov
sti
test
ficoml
lods
loopne,pt
and
dec
dec
and
pop
orl
test
pop
cltd
jl
mov
pushf
daa
mov
int3
push
cmpsl
jmp
pop
scas
enter
aas
mov
push
nop
movsb
xchg
test
or
jne
or
hlt
xchg
fidivl
test
push
test
inc
fisubl
dec
mov
cltd
test
fidivrl
loopne
mov
scas
pushf
repz
fidivl
mov
mov
lahf
and
jo
or
movsl
pop
test
jge
jns
out
fs
les
fnstcw
xor
icebp
jl
push
bound
inc
mov
add
fistpll
push
sbb
movsl
push
int
jmp
test
stos
xor
aas
cli
repz
cs
call
xchg
testl
add
fdivrp
pop
js
jb
fsubs
xchg
inc
dec
repz
or
ficoms
mov
lods
popf
mov
scas
push
xchg
sti
push
xchg
pop
imul
aam
dec
std
dec
das
int3
je
mov
out
ljmp
and
cmpsb
roll
ja
mov
mov
ds
lret
lcall
cs
iret
push
xchg
movsl
xor
in
punpckhwd
add
test
mov
scas
aas
imul
push
jns
xchg
fldl
jne
aas
push
or
cmp
or
movsl
or
push
aad
mov
cld
pop
outsl
mov
out
inc
mov
sub
pop
and
sbb
out
testb
sbb
and
leave
or
xchg
call
addr16
pop
xchg
fidivl
push
mov
cmp
out
sbbl
lahf
negb
push
jle
es
dec
hlt
in
push
mov
outsl
push
cltd
mov
push
fsubrl
cwtl
notb
repz
mov
push
xchg
inc
ficoml
int
imul
arpl
rcrb
gs
add
cmp
aad
bound
stos
test
lock
icebp
cmpsl
and
scas
cwtl
fsubrs
outsb
frstor
jbe
xchg
push
adc
sbb
popa
mov
jne
lock
xchg
pop
pop
dec
in
inc
sbb
pop
or
in
and
jne
loopne
xor
cmpsb
mov
push
outsb
cmc
lds
sub
je
cmp
dec
or
pop
mov
xchg
mov
fadds
inc
dec
adcl
add
les
pop
jecxz
add
and
iret
je
add
dec
test
cmp
xor
inc
arpl
divb
xchg
enter
hlt
gs
cmp
xor
fdivl
add
sbb
push
leave
mov
and
dec
outsl
push
pop
iret
push
push
and
fisubs
filds
push
mov
push
rcrl
insl
sub
insl
sbbl
push
stos
das
mov
mov
mov
jnp
out
jg
repnz
js
int
pop
ss
pop
imull
enter
pop
xchg
fisttps
inc
shll
pop
mov
ret
loope
loop
add
out
test
jmp
enter
mov
data16
sahf
filds
sub
or
loope
cs
int3
mov
inc
xchg
push
pop
jae,pt
lret
sbb
sub
push
loope
sarb
sub
inc
mov
mov
cmp
dec
idivl
xchg
out
sbb
sub
jns
dec
loopne
pusha
nop
pop
xor
out
mov
xchg
pop
mov
or
adc
cwtl
pop
mov
cmp
inc
cmp
fcompl
jge
rcr
xor
rcll
into
divl
fcomps
dec
aas
out
pmuludq
enter
push
mov
scas
adc
push
je
push
mov
mov
data16
sub
lahf
adc
and
loope
jnp
dec
pop
sub
mov
mov
xor
sub
dec
mov
scas
xchg
lock
rclb
repnz
fldl
cmp
dec
test
mov
es
pop
in
shll
stc
dec
adc
pop
fistl
pop
nopl
adc
mov
ljmp
or
or
adc
aad
inc
push
mov
sar
rolb
cs
cld
jp
andl
push
lock
mov
sar
mov
xor
mov
cli
cltd
sarb
inc
orb
ds
cmp
ret
mov
and
pop
imul
popf
jmp
lret
pop
or
mov
outsb
mov
xor
adc
shrb
test
lret
jp
lods
addr16
xor
lock
dec
roll
jmp
std
xchg
pop
nop
test
sbb
mov
ret
xor
arpl
fistpll
xchg
mov
add
pop
aad
int
loope
stos
lods
lcall
inc
das
ds
jp
gs
mov
stos
and
sti
sti
inc
daa
cmp
push
fwait
mov
jbe
ret
out
jmp
jo
scas
dec
sbbl
fnsave
jnp
pop
loopne
test
loope
cmpsb
and
and
xor
test
dec
xchg
rcrb
xor
or
pop
push
add
dec
stc
aad
or
mov
mov
jg
std
inc
out
loopne
loopne
pop
ljmp
imul
cmp
repnz
xor
fnstsw
push
sbb
adc
mov
dec
fisttpll
jl
jecxz
mov
xchg
flds
cmp
sbb
inc
add
fs
cmp
pop
pusha
jmp
es
fists
sarb
mov
inc
loope
sar
sbb
adc
sbb
popf
pop
movl
adc
xor
data16
or
xor
jle
jb
popf
ficomps
arpl
dec
dec
std
out
test
dec
cmp
inc
cwtl
mov
call
dec
in
leave
lods
add
xor
fcmovu
xor
in
jp
arpl
std
xor
mov
sahf
fwait
popa
mov
pop
rolb
mov
xor
loope
cld
loopne
shll
mov
loope
cwtl
push
outsb
repnz
xor
jae
in
pop
jae
sub
sbb
cwtl
jo
hlt
adc
mov
dec
xchg
cmp
int3
aaa
mov
aam
fidivs
jg
hlt
mov
gs
push
push
cld
jmp
mov
mov
aas
inc
mov
xchg
ret
mov
cmp
repz
das
adc
cmp
pop
pop
imul
pusha
adc
push
adc
mov
outsl
adc
arpl
mov
and
sbb
jl
gs
je
push
loop
push
aaa
nop
mov
jnp
mov
stos
das
sbb
inc
adc
mov
fmuls
test
sbb
shrb
inc
mov
mov
push
and
aad
scas
cmp
int3
mov
in
xor
pop
xor
cmp
sub
jl
movsl
and
mov
push
xor
das
mov
pop
test
push
popf
pushf
or
ret
mov
roll
and
cmpsb
add
dec
sub
mov
pop
add
fcmovbe
pop
and
xchg
imul
mov
dec
jmp
les
mov
hlt
pop
divb
into
nop
shl
mov
pop
aad
cld
out
inc
xchg
popf
xchg
in
xlat
or
mov
mov
inc
pop
push
cmpsl
push
lds
dec
xchg
jmp
orb
jae
sahf
test
lcall
add
popl
adc
stos
mov
loopne,pt
adcb
mov
daa
sub
mov
popa
xor
xor
xor
icebp
aad
addr16
sbb
and
sub
jbe
mov
push
mov
lea
pushl
jmp
jecxz
cmp
gs
adc
sti
jecxz
movb
push
clc
in
mov
add
aam
add
in
in
cmpsb
and
and
fcomp
sub
push
insl
xchg
popa
inc
lahf
sub
dec
push
into
mov
ret
out
and
add
rolb
xchg
jmp
mov
iret
adc
mov
inc
adc
mov
sub
jns
adc
inc
mov
push
push
inc
push
sub
popa
sub
cmp
pop
fsubrp
push
dec
or
pop
sbb
cmpsb
int
and
loopne
mov
out
int
jne
and
popf
daa
out
repnz
push
inc
in
stos
ret
bound
popa
out
inc
pop
stos
push
and
inc
mov
inc
data16
incl
imul
stos
mov
dec
outsb
mov
push
outsb
or
mov
push
inc
push
inc
fildl
add
mov
xorl
push
imul
mov
movsb
push
xchg
ret
or
rol
pushf
xor
inc
loopne
push
das
cmpb
je
outsb
sub
mov
xor
scas
lods
cwtl
dec
popa
dec
iret
push
test
jp
pop
add
jg
xchg
jge
dec
push
imull
lock
ljmp
dec
shrb
cmp
cmpsl
adc
xorb
imul
pop
jbe
sub
imul
cwtl
lea
aaa
sub
cmp
je
push
in
sub
popa
decb
inc
xorl
mov
mov
xchg
inc
cli
je
mov
mov
adc
pop
cmpsb
in
mov
imul
mov
fdivp
into
imul
mov
cwtl
xchg
mov
jle
push
mov
das
pushf
je
xorl
test
jmp
and
fisubrs
incl
int3
stos
int
cmp
data16
or
and
mov
les
outsb
xlat
add
outsl
push
and
pop
mov
or
adc
stos
or
mov
xor
pop
ds
fsubrp
addr16
mov
adc
adc
mov
cs
jb
jmp
in
xor
adc
xchg
nop
lret
arpl
push
iret
add
inc
stos
jle
sbb
movsb
cmpxchg
pop
xchg
or
push
push
mov
jb
lahf
divl
hlt
sti
gs
daa
mul
xor
sub
movsb
nop
fisttpll
shrb
out
and
dec
shll
mov
dec
push
movl
and
cmpsl
cmp
cltd
jle
sbb
in
scas
cmp
ds
int
notl
xor
xchg
inc
test
inc
cltd
push
mov
cli
int
jne
lea
shl
adc
dec
jo
rcr
jno
dec
jae
mov
sbb
outsb
or
mov
ss
and
mov
sbb
pop
in
scas
int3
int
imul
xchg
mov
test
push
scas
call
inc
xlat
push
inc
bound
push
sub
mov
jae
dec
popf
inc
insb
out
sti
push
sbb
pop
fs
roll
jns
sbb
mov
aam
pop
adc
xchg
xchg
mov
cmp
xchg
idivl
sub
jge
in
or
aaa
test
pop
pop
jnp
inc
mov
and
les
popa
add
cmp
in
and
aam
dec
in
enter
or
cltd
or
pop
pop
mov
mov
ret
loop
xor
push
sbb
push
mov
jnp
jg
sub
ret
icebp
mov
dec
jbe
bnd
filds
jns
push
or
mov
ljmp
inc
imul
stc
lret
sub
lods
cli
ljmp
test
arpl
ror
enter
mov
sub
pop
scas
mov
mov
sub
dec
or
icebp
pop
cmpsb
and
push
stos
test
dec
cltd
gs
hlt
jbe
cltd
pop
mov
xlat
or
les
roll
xchg
and
dec
sti
sarb
sbb
clc
or
das
out
and
call
lret
mov
cli
xchg
or
fisttpl
pop
lds
inc
adcl
dec
xchg
pop
shrl
xchg
and
repnz
into
and
test
push
or
push
jno
insb
dec
repz
mov
cli
inc
arpl
clc
rcrb
movsb
mov
jb
out
adc
inc
jmp
pop
sbb
ret
loope
cmp
outsl
pop
insb
jns
test
mov
dec
movd
mov
or
mov
loopne
jg
mov
fdiv
fsubp
xorb
imul
adc
cmp
adc
mov
and
fdivl
rcrl
sarl
test
stos
aam
sub
and
es
pop
popl
scas
shll
lock
or
inc
jb
cmpsl
fnstenv
xor
lcall
jecxz
lret
xlat
pop
inc
xchg
cmp
jno
sub
cmpl
push
mov
pop
add
xlat
sbb
or
xor
dec
sbb
faddp
iret
push
cmc
mulb
andb
adc
push
imul
xchg
int3
nop
dec
lock
lock
mov
stos
push
into
lahf
sarl
and
push
leave
cmp
pop
cmp
sbb
pop
imul
mov
call
ds
xchg
push
adc
mov
jns
lahf
sbb
in
and
in
stos
xchg
inc
cltd
jae
xchg
out
dec
ja
cmp
enter
cs
cmpsb
mov
add
dec
adc
sub
or
lods
mov
xchg
out
hlt
leave
adc
aad
mov
add
mov
xchg
bound
mov
push
fnsave
jmp
cwtl
mov
call
xor
mov
mov
out
sbb
mov
jno
call
mov
add
adc
jecxz
popf
imul
rcll
lea
push
push
rcll
sub
push
push
mov
mov
cmp
fnstcw
inc
push
js
pop
inc
in
mov
aam
jns
pop
out
xchg
adc
imul
pop
test
xor
mov
jmp
hlt
pusha
adc
inc
ret
loop
pop
xor
popa
xor
inc
fisubs
arpl
cli
repnz
jg
jae
lods
and
adc
add
pop
sbb
xor
push
push
jg
add
div
rcrl
jne
pop
imul
add
scas
std
mov
mov
and
mov
push
xor
aam
nop
push
cwtl
stos
out
in
movl
xor
call
push
xchg
jge
shlb
add
mov
ss
into
mov
mov
lock
out
mov
lahf
jb
mov
add
xor
dec
jns
lods
mov
push
lods
outsl
in
mov
xchg
mov
mov
jge
sbb
adc
sub
lods
ret
les
sbb
and
test
fdivrl
push
push
aas
add
aam
add
insl
add
int3
je
daa
jge
popa
inc
std
sbb
adc
std
sarb
clc
add
pushf
js
loopne
pop
popf
fdivl
xor
dec
or
adc
jno
js
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
lock
ret
jl
jl
inc
pop
jl
push
adc
and
push
movsl
and
push
mov
inc
xor
xor
sub
sbb
pop
mov
arpl
pop
fmull
inc
mov
mov
andb
xchg
arpl
int3
pop
or
sbb
mov
add
js
fsubl
aas
aas
push
push
cld
push
cwtl
in
push
dec
fdivs
lods
test
dec
daa
addr16
cli
adc
popl
aaa
or
push
sbb
mov
or
jecxz
aam
les
push
push
sbb
iret
imulb
mov
and
sbb
cmp
jle
fcmovb
sub
and
or
nop
fsubrs
or
or
jmp
mov
adc
test
add
inc
mov
pop
pushf
divb
inc
jge
push
sar
repz
add
adc
mov
inc
popf
shl
xchg
out
insl
popf
mov
shlb
shrl
adc
lea
aaa
insl
mov
pop
add
pushf
sub
pop
add
fldt
lods
pop
pop
imul
mov
dec
pop
xchg
sub
ret
test
pop
jecxz
lret
mov
xchg
nop
mov
or
pop
sbb
push
pop
imul
push
jp
rorl
jo
dec
push
mov
mov
pop
fwait
mov
loope
in
push
sahf
out
jl
int3
inc
adc
pop
lret
fildl
xor
mov
cmp
push
mov
pop
scas
lock
xor
sbb
add
rcr
bnd
movsb
arpl
mov
jle
aas
insb
xchg
sub
xor
push
ret
or
and
mov
xor
fwait
int
mov
sbb
arpl
flds
and
or
or
cmp
inc
dec
add
loopne
mov
cwtl
sahf
mov
ss
lret
mov
jo
fbld
mov
or
xor
jno
iret
ffree
lds
into
pop
mov
adc
xlat
sahf
and
lahf
andl
dec
cmp
mov
imul
lea
jmp
rcll
filds
pop
ds
out
sub
xchg
mov
lcall
ret
pop
adc
pop
cmp
leave
mov
cltd
fucomip
cmp
mov
jmp
xor
dec
adc
sub
pop
out
sbb
fs
aam
sub
lahf
sbb
outsl
loopne
pop
loopne
mov
mulb
mov
dec
cmpsl
ret
scas
add
scas
sbb
psraw
out
ss
jae
ljmp
jle
cli
pop
sub
or
ds
add
jg
dec
in
and
jmp
inc
sbb
or
xor
dec
pop
inc
sub
push
jo
hlt
pop
cmp
and
pushf
cmp
daa
push
les
imul
sbb
push
and
push
js
enter
ljmp
xor
pop
xchg
fnstenv
enter
push
cld
xchg
lods
in
xor
sahf
xor
gs
xchg
or
sbb
std
subl
push
mov
testb
pop
je
lcall
add
sbb
jbe
int3
testl
sub
cmp
rclb
inc
xor
push
shlb
mov
fld
lahf
es
jne
adcl
cmp
int3
enter
loopne
xor
mov
mov
jns
mov
add
pushf
repz
inc
dec
xor
pop
dec
lret
lock
js
into
inc
push
aad
pop
or
dec
mov
sub
aaa
fwait
mov
push
adc
sbb
or
out
hlt
fsubrl
sbb
dec
out
or
out
popf
lock
lret
mov
xchg
je
lock
pop
push
daa
insl
imul
lahf
or
cmpsb
notl
dec
idivb
push
adc
push
loope
out
loop
sub
sbb
add
cld
popa
stos
mov
into
fldcw
in
popf
cmp
adc
pop
call
test
or
aas
hlt
mov
fs
add
push
xchg
mov
inc
pushf
fadd
adc
mov
push
sub
sbb
mov
mov
or
mov
xorl
test
lods
dec
mov
push
mov
sub
out
lcall
sbb
pop
mov
loope
inc
cs
mov
jecxz
fstp
mov
in
pushf
popf
scas
in
lret
inc
jge
cmp
insl
pop
xchg
xchg
inc
pusha
outsb
push
cmp
pop
cs
test
mov
in
inc
sub
sarl
mov
fwait
xchg
pop
push
or
pushf
cmc
int3
and
or
mov
ja
sbb
cmp
lods
inc
fidivrl
or
in
push
inc
jns
fadd
jb
aaa
faddl
mov
arpl
sbb
cld
addr16
jns
cmp
pop
push
daa
int3
rcl
jg
or
dec
pop
test
pop
adc
xchg
adc
push
movsl
inc
mov
lods
cmpsb
rcl
test
jg
repnz
pop
mov
stc
pop
loope
xchg
push
mov
gs
cmp
popa
jae
mov
sub
jnp
cmpsb
pop
iret
push
fs
test
cli
xor
decl
loop
pop
lcall
imul
mov
pop
and
pop
xor
xor
jge
movsl
sub
jp
in
cmpl
out
sbb
movsl
aas
cmp
insb
ret
and
lds
mov
scas
sbb
fnstcw
push
ljmp
cmp
adc
or
loopne
popf
es
cld
or
jno
dec
jbe
and
decl
shrl
mov
loop
scas
adc
pop
imul
jle
or
cld
adc
scas
jp
bound
clc
shll
push
inc
andb
rol
ljmp
fwait
cmpsb
pop
ljmp
loop
cmpsl
mov
add
aas
nop
pop
dec
sub
repnz
cmp
push
movsb
adc
daa
inc
mov
xchg
adc
lods
fimull
enter
mov
popa
and
loope
cwtl
fbld
jp
stc
pop
shll
or
rcl
inc
popa
adc
pop
mov
and
pop
and
ret
xchg
push
dec
lods
ljmp
mov
sbb
out
xchg
xchg
int
test
jbe
sub
int3
imull
or
movsb
and
mov
add
scas
cwtl
bound
xchg
sub
mov
int
rolb
push
jnp
cmp
lcall
imul
imul
rorb
or
arpl
jl
xchg
xchg
outsl
pop
sti
in
xchg
clc
push
push
std
jne
xchg
mov
pop
push
ljmp
sub
pop
mov
sub
fs
or
mov
sbb
mov
mov
mov
cmpsl
mov
hlt
fstpl
jecxz
loop
cmpsb
push
adcb
adc
push
add
cmp
xor
jne
add
outsl
aas
and
es
lea
sbb
mov
test
iret
pop
xor
popf
or
sub
jno
insb
push
add
xchg
pusha
ret
sbb
adc
into
fsubrs
les
pop
and
adc
add
gs
push
dec
inc
xor
in
stos
push
enter
or
icebp
fistpl
adcb
dec
fcmovnbe
push
inc
sub
cmpsl
push
push
inc
loopne
fisubl
lcall
fbstp
cmp
sbb
xchg
push
out
xlat
jl
mov
rcll
je
xchg
mov
mov
jo
aaa
movsb
lret
jae
sahf
and
xor
add
adc
mov
sub
sarb
mov
inc
outsb
add
jmp
xchg
repz
movsl
fldenv
ja
xchg
loopne
fwait
or
xchg
leave
cmc
add
shll
inc
lods
gs
test
ss
test
aas
sub
xchg
mov
mov
aaa
lea
sarb
movsl
insb
mov
aam
in
sarb
je
test
jnp
sub
popa
outsl
fildll
push
leave
fstl
stc
lea
push
fs
loope
xor
dec
sub
sarl
fst
jmp
jo
jnp
cmpsb
sbb
add
push
or
push
push
scas
outsb
fimull
xchg
jl
les
aas
sub
mov
sub
jno
jae
notb
movsl
ljmp
ret
push
into
push
out
jb
cld
xchg
movb
sbb
iret
call
or
mov
stc
inc
jmp
or
mov
adc
pop
js
ret
pop
mov
mov
mov
fiaddl
ds
out
popf
nop
pop
leave
push
xorb
cmp
stos
loopne
push
cmp
idivl
push
shlb
sub
jle
xor
stos
gs
and
imul
out
ss
sbb
lock
repz
iret
inc
cmp
and
into
aaa
xchg
jo
lods
inc
rorb
push
mov
jge
dec
add
stos
mov
popf
cltd
arpl
pushf
fistl
dec
ja
call
loop
xorb
or
adc
lods
fstpl
add
push
and
sbb
jmp
jns
aaa
xor
imul
icebp
fdiv
jo
rol
jg
sti
fmuls
xchg
adc
cmp
or
sbb
mov
jecxz
xchg
mov
mov
pop
pcmpeqw
mov
test
inc
ret
es
mov
fucomip
test
xor
mov
sub
movsb
testb
mov
add
sbb
hlt
push
cmp
jne
pop
fs
sti
push
aad
cmp
jl
hlt
repnz
outsl
cwtl
ret
clc
dec
popf
sub
cltd
push
test
popa
cmpl
jmp
push
add
or
sahf
mov
jge
nopl
sub
mov
movsb
rclb
lea
inc
push
adc
mov
std
push
insb
es
and
ret
jne
and
loop
daa
and
cld
cltd
enter
or
and
cmp
out
addr16
or
dec
sbb
pop
loopne
pop
mov
xor
dec
hlt
imul
mov
and
mov
ss
dec
or
push
cmp
mov
icebp
pushf
mov
adc
adc
nop
sub
arpl
inc
cmp
repnz
inc
loop
inc
dec
lock
inc
mov
add
or
into
test
adcb
sbb
ffree
dec
jbe
daa
in
negl
test
xor
xor
sbb
mov
cmp
sub
inc
hlt
xor
in
sbb
adc
mov
mov
pop
mov
sahf
dec
lret
add
sti
sahf
data16
xor
mov
add
addr16
mov
cmpb
cmp
xchg
daa
pop
pop
ret
or
faddl
int3
icebp
jnp
push
stos
xchg
dec
xchg
sub
xchg
mov
je
jb
and
add
mov
sbb
cmpsl
jae
xchg
std
mov
call
xchg
bound
and
ja
insb
fcoms
fs
mov
xor
push
sub
aas
pop
popl
repnz
scas
push
jo
sub
scas
in
sbb
and
inc
cltd
add
fdivrs
je
and
mov
mov
fwait
hlt
fwait
hlt
lcall
icebp
fldt
pminsw
and
cmpsb
sbb
push
mov
dec
in
arpl
push
push
sub
leave
jmp
popa
mov
sbb
push
imul
dec
jne
sbb
movsb
jno
out
movsw
out
ret
fnop
pop
repz
push
cmpsb
sar
sub
jl
inc
cwtl
mull
ds
xchg
movsl
lods
sub
adc
or
adcl
iret
subl
mov
push
data16
pop
outsl
jle
dec
cmpsb
fcoms
jg
mov
test
dec
imul
mov
mov
push
data16
lds
push
xchg
xchg
xor
ret
push
pop
or
das
jecxz
mov
add
xlat
mov
into
pop
sbb
fistl
ret
pop
and
ret
iret
or
outsb
fistps
movsb
cmp
mov
loop
sbb
and
idivl
ret
jecxz
dec
push
pop
mov
mov
cmp
nop
roll
lods
xor
adc
ret
pop
popa
shr
pop
shll
addr16
ljmp
stc
fwait
iret
popa
xlat
sub
xlat
pop
add
dec
dec
and
mov
sbb
jge
push
inc
out
xor
addr16
dec
mull
in
outsl
fldl
fstpt
jle
adcb
sbb
ljmp
cli
adc
xchg
je
rcl
dec
js
adc
mov
add
push
fldenv
aad
roll
ficomps
pop
lods
xor
roll
out
pop
pop
dec
or
sub
xchg
out
sar
sbb
imul
pop
mov
and
std
mov
or
sbb
fwait
push
cmc
loopne
pop
stc
adc
test
pop
mov
jno
inc
hlt
in
push
sub
lock
mov
push
mov
rcll
shll
inc
cmp
or
je
loope
push
jle
pop
sub
mov
inc
pop
pushf
mov
pushw
mov
xor
pop
xchg
and
dec
add
rcl
lret
out
inc
dec
sbb
mov
add
jnp
test
and
mov
fdivs
add
lock
sub
cmp
sahf
jecxz
cmpsl
scas
popa
push
or
in
sub
push
inc
test
nop
inc
adc
sbb
sub
mov
test
fs
jmp
or
sbb
xchg
mov
dec
das
rcll
mov
xchg
inc
cmp
or
test
sarb
imul
leave
mov
xchg
pcmpeqb
lcall
hlt
mov
das
pop
fcmovu
outsb
test
jg
scas
addr16
aas
sbb
daa
pop
mov
adc
int
pop
ja
pop
ss
adc
scas
jns
aam
lret
fs
push
inc
or
and
subl
dec
iret
shl
dec
in
xor
ret
dec
sbb
es
ljmp
inc
adc
ljmp
mov
imul
in
out
xchg
sbb
inc
jno
pop
jg
xchg
sbb
fcomps
adc
lcall
mov
lcall
xor
mov
daa
push
mov
test
sbb
js
enter
jmp
cmp
push
mov
outsb
stos
lret
inc
std
xor
xor
fistpl
pop
sub
mov
inc
or
pusha
stc
add
sbbb
popf
mov
mov
bnd
out
mov
mov
xor
adc
add
lods
xchg
repnz
dec
jle
repz
mov
jmp
inc
ret
fsubr
adc
ret
mov
insl
jns
mov
lea
sbb
sub
inc
mov
int3
cltd
mov
test
xor
stos
xchg
dec
adc
repnz
xor
je
outsl
and
popl
adc
icebp
adc
or
xchg
lods
clc
pop
dec
lcall
in
insl
movsb
clc
call
jo
or
and
stos
xchg
sbb
xchg
sub
shlb
lea
iret
lds
js
pop
rcrl
nop
dec
fisubrs
jl
bound
fidivrl
mov
jne
nop
sbb
or
mov
pop
xchg
int3
leave
out
xchg
es
sbb
subb
hlt
mov
or
sub
xchg
repnz
call
jg
lcall
push
dec
std
pusha
les
mov
inc
cli
pop
add
add
cltd
cmp
adc
mov
mov
pushf
xor
sahf
sub
mov
enter
loop
or
push
popa
add
movsb
dec
sub
ljmp
mov
in
imul
pop
cmp
jnp
out
pop
and
orl
pop
iret
push
mov
pop
cmp
insb
addr16
jno
xchg
mov
cmp
cmp
stos
jecxz
jg
testl
lods
sbbl
lret
aad
mov
sub
add
sbb
dec
dec
aad
xlat
sahf
xchg
add
and
or
shrb
lret
movsb
add
pop
add
pop
adc
sub
cmp
jo
jo
cmp
sbb
iret
fstpt
shll
mov
shlb
movsl
scas
iret
mov
movsl
enter
xorl
popa
cmp
dec
lds
mov
bound
into
adc
lock
repz
dec
sub
push
ficomps
mov
popa
jecxz
push
test
popa
andl
jge
fisttps
in
adc
repz
js
push
sbb
add
mov
lods
jb
icebp
mov
lods
cmp
stos
orl
lret
lock
popf
popf
sbb
popf
sub
pop
mov
hlt
outsb
cs
loope
fcomp
pop
icebp
mov
mov
xchg
sbb
sahf
cltd
xchg
test
fadds
out
dec
cmpsb
in
out
inc
xor
addr16
inc
xchg
inc
aaa
ret
movsl
shr
gs
shrb
cmpsl
shll
pop
fs
cmp
out
jg
inc
mov
repz
push
sbb
filds
add
or
jb
arpl
pop
int3
sub
jl
dec
fadd
mov
sbb
scas
xchg
cwtl
mov
cmp
jle
std
rcrl
jb
repnz
or
xor
xchg
pusha
int
mov
or
mov
insb
mov
cld
jns
push
insl
leave
push
inc
and
push
sbb
push
jb
mov
pop
ss
shlb
scas
push
in
ja
in
pop
stos
pushf
sbb
or
mov
out
mov
fildll
xchg
cwtl
push
mov
outsl
hlt
mov
aaa
lcall
or
scas
push
jnp
out
and
test
pop
lods
adc
test
xor
mov
push
or
sbb
jmp
mov
add
cmp
mov
jns
and
add
pop
scas
inc
shl
fnstsw
fisubrl
xor
into
xor
mov
out
into
sbb
icebp
inc
mov
popf
mov
or
arpl
mov
stos
aaa
iret
jnp
add
test
xchg
mov
add
add
mov
pop
out
ja
jmp
fwait
les
pop
mov
cli
icebp
or
push
dec
popf
inc
add
ret
pusha
pop
push
gs
sub
pop
xor
add
popa
add
js
nop
outsl
in
sti
cmp
inc
lahf
out
rorb
xchg
adc
push
cmp
sub
or
stos
cltd
dec
mov
out
mov
lret
inc
xchg
sarb
rcl
mov
test
cmc
jle,pn
aaa
cmp
push
in
sbbb
out
sub
jnp
mov
clc
das
push
clc
adc
or
cmpsb
mov
cmpsb
data16
stos
idiv
test
mov
sbb
push
aaa
fiadds
pop
jecxz
adc
enter
xor
mov
jae
das
jns
out
scas
stos
test
push
jnp
fisttps
cmp
jne
je
in
rcrb
std
std
pushf
cwtl
inc
mov
xor
mov
orb
mov
out
pop
cwtl
repz
and
or
cmpl
ljmp
subb
xchg
popf
push
mov
mov
pop
pop
cmp
pushf
push
or
movsl
loopne
aam
outsl
push
mov
imul
lcall
xor
or
cmpsl
fiadds
or
inc
jg
sub
gs
iret
sub
pop
push
jbe
add
cld
pop
shrl
pusha
fcom
test
mov
dec
ret
std
adc
mov
sub
das
mov
cmp
out
mov
sbb
and
jo
jmp
fisubl
int
jg
xlat
jmp
xor
test
pop
pusha
xor
pop
push
icebp
jp
and
dec
mov
int3
pandn
pop
adc
xchg
ret
cs
sti
mov
xor
mov
xchg
cltd
lahf
inc
pusha
add
jecxz
pusha
adc
adc
shrl
mov
cmpsb
int
mov
fs
pop
repnz
out
mov
movsb
es
sub
aaa
cmp
add
jl
sub
cmp
xchg
dec
and
push
push
mov
not
xchg
cmp
stos
jecxz
pop
xchg
movsl
sbb
mov
add
adc
adc
add
sub
bound
sub
adc
and
loop
pusha
sti
dec
popf
push
cli
out
imul
jo
aaa
sbb
in
lret
mov
in
scas
and
xor
adc
into
cmp
arpl
aad
mov
jb
insb
mov
scas
sbb
xor
mov
or
out
add
mov
popa
data16
cmp
add
xchg
mov
jle
fnsave
lds
mov
push
mov
jg
jne
cmp
mov
mov
stc
xor
lea
adc
xchg
sbb
sbb
in
mov
sub
nop
xor
test
loopne
xchg
jmp
mov
xchg
inc
jecxz
scas
pop
push
out
jg
jmp
shlb
imul
and
data16
aaa
gs
push
dec
push
mov
fnstenv
and
ds
jb
test
mov
les
insb
icebp
sub
dec
xor
mov
xchg
and
cmpsl
aaa
mov
cs
ds
mov
jecxz
jmp
mov
add
jp
or
jge
jne
jge
std
or
jbe
fadds
ds
mov
inc
dec
rcrl
xchg
and
sub
dec
imull
push
push
les
mov
xor
inc
xchg
mov
dec
dec
sti
insb
pop
inc
shll
lock
xor
mov
mov
testl
sahf
das
arpl
xchg
mov
push
mov
xlat
sub
sbb
imul
in
add
out
and
rcrl
shrb
sti
mov
cmp
daa
faddp
mov
jge
adc
adc
adc
test
sub
sahf
out
enter
loopne
sti
sahf
pmuludq
push
mov
adc
and
jbe
jmp
or
mov
daa
imul
inc
jbe
or
add
pop
mov
jmp
jns
cmp
test
lret
movsl
adc
cmp
inc
cmp
cmpsb
ret
and
stc
cmpl
push
in
adc
aam
icebp
xor
adc
xchg
xchg
push
ret
xor
aas
add
or
jno
lods
movsl
or
push
mov
ret
icebp
orl
cmc
mov
jle
push
jbe
mov
out
icebp
adc
jno
nop
ss
pop
sub
sbb
fisubl
aam
sahf
jno
ret
cmp
jle
cwtl
or
lds
stos
lods
sbb
ss
lret
and
paddsw
jbe
mov
call
or
mov
fwait
lods
sub
wrmsr
push
cmpsl
mov
jge
sbb
adc
lods
pop
rcr
push
das
xorb
jne
insb
inc
mov
adcl
push
loope
mov
std
mov
inc
fucom
stos
xchg
cmp
cld
rsm
mov
insb
ljmp
jmp
leave
stc
cli
xchg
mov
xchg
push
sbb
popw
fsubrl
pop
or
aaa
cmp
cs
mov
inc
mov
std
popa
jb
jge
test
mov
mov
pop
fidivl
sub
insb
xchg
mov
aam
push
dec
mov
lret
jmp
mov
pop
orl
loop
dec
mov
or
inc
push
mov
negl
pop
pop
in
lds
add
pop
imul
push
cmpsl
add
add
mov
cmpsl
jp
mov
push
lods
pop
pop
mov
ja
out
jg
sahf
xor
aas
loope
orl
mov
out
push
jge
sbb
pop
mov
iret
and
jns
xchg
push
jbe
pop
or
xchg
mov
in
mov
mov
xor
sub
dec
add
add
xchg
outsb
lds
enter
dec
add
mov
shrl
mov
jp
or
rclb
mov
add
enter
pusha
ret
jns
in
gs
push
mov
add
out
push
clc
or
xor
pop
pusha
sub
ret
inc
adc
pop
mov
push
fidivl
iret
pop
dec
movsl
xchg
and
int
addb
mov
test
jecxz
push
aas
fstpt
xchg
add
xchg
mov
fsub
mov
xchg
daa
filds
mov
movl
add
pop
in
dec
mov
add
leave
cmpsl
xchg
pop
push
jg
mov
out
dec
xchg
test
xor
pop
notb
sub
add
hlt
in
out
mov
mov
and
fsubrs
movsb
sub
enter
xor
add
mov
push
aaa
loopne
lds
xchg
adc
adc
sahf
lea
add
add
xchg
hlt
cmp
mov
xor
jae
imul
jo
mov
mov
scas
in
jle
mov
loope
cwtl
add
pop
sbb
add
sbb
js
mov
in
add
jecxz
mov
bound
sarb
insb
dec
rcrl
fstl
loop
mov
decl
add
push
incb
sbb
mov
lea
or
fcompl
outsl
mulb
xorb
push
data16
cli
cli
mov
bound
pushf
and
loopne
inc
jge
imul
jge
fstpl
lret
xchg
or
inc
adc
popa
add
cs
push
and
repz
xchg
dec
pop
pop
jg
sub
mov
mov
js
sub
lods
xor
xor
mov
imul
pop
lea
cmp
mov
fldenv
mov
push
imul
push
or
test
xchg
loop
fstpt
adc
repnz
adc
mov
sbb
inc
jno
add
mov
sbb
in
push
sub
pop
xor
sbb
bound
lea
dec
xor
pop
ja
cmp
jns
stos
cmc
repz
int3
loopne
fwait
mov
movl
push
xchg
fwait
outsl
cli
cltd
inc
lock
mov
mov
dec
nop
int
sbb
jmp
mov
ss
je
dec
out
pop
cmp
jae
pusha
jl
lea
jnp
adc
adc
or
inc
xor
jno
mov
cwtl
in
jg
fldenv
out
and
das
push
push
and
jg
mov
and
cli
in
shr
test
inc
and
add
lock
sub
out
push
jl
or
lcall
dec
jne
cltd
je
dec
hlt
pop
sbb
arpl
icebp
sti
jp
into
in
cwtl
jmp
dec
push
sahf
sub
and
mulb
test
repnz
mov
sbb
push
lods
fwait
das
add
or
push
loope
ljmp
stos
mov
inc
popf
iret
mov
stos
pusha
cmp
shr
sub
ret
lods
pop
and
int3
out
cmpsb
stos
fucomip
add
jmp
push
out
aaa
xchg
jg
xchg
dec
addr16
cmp
sbb
imul
lods
out
ret
clc
sbb
lahf
push
fadds
setle
imul
inc
testl
or
sahf
add
ret
xchg
mov
mov
movsb
loopne
inc
sbb
pop
push
push
sbb
shr
add
sbb
push
adc
lods
sbb
lods
jnp
lods
push
adc
inc
dec
fndisi(8087
stc
inc
cli
rol
xchg
pop
movsl
adc
sbb
jae
xlat
repnz
adc
andb
cmp
enter
jne
mov
lahf
fs
and
clc
f2xm1
and
xchg
sbb
push
dec
dec
sub
xor
aam
rol
or
or
ret
or
aaa
mov
cwtl
aaa
fsts
xorb
in
sti
test
andb
add
and
addb
or
arpl
lods
lds
sub
jbe
in
push
loopne
mov
mov
gs
and
imul
movsb
cmp
jge
sahf
insb
xlat
dec
inc
fmul
inc
sub
sbb
shll
mov
adc
jbe
jno
push
scas
jl
lea
jp
ljmp
and
jno
les
push
or
jbe
mov
test
mov
xorl
add
jnp
pop
mov
jno
or
cmp
cmp
in
iret
xchg
pop
mov
push
xchg
aam
xor
scas
cmp
insl
pop
inc
out
push
and
xchg
movsl
pop
mov
xchg
movsb
fadd
push
jns
jnp
push
sub
inc
cltd
mov
movsb
mov
jns
data16
sti
scas
jge
lea
out
out
inc
mov
pop
movsl
lds
das
aas
dec
pushf
mov
xchg
sub
push
inc
dec
pop
mov
mov
push
loop
xor
mov
fisubl
daa
jecxz
out
movsb
mov
push
int
ljmp
and
mov
enter
outsb
aaa
lods
jmp
jae
mov
jne
push
pop
and
mov
stc
jbe
mov
rclb
stos
cmp
pop
aad
add
add
add
out
inc
int3
repnz
add
insl
lahf
sub
push
call
imul
jae
lds
jge
orl
pop
aas
cmp
mov
out
inc
mov
push
outsb
push
dec
shrb
jo
mov
mov
dec
fidivrl
hlt
push
mov
mov
cmp
nop
adc
das
add
adc
adc
push
jmp
push
xchg
push
xor
pop
pusha
xchg
cltd
leave
add
jmp
dec
and
fisttps
jb
sbb
mov
cmp
mov
dec
clc
mov
push
lret
sbb
adc
data16
lcall
popl
and
mov
mov
lret
mov
in
adc
pushf
dec
sub
jecxz
cmp
rcl
test
out
and
xor
mov
imul
lea
xor
mov
insb
pop
mov
nop
adcl
sub
pop
jae
and
dec
mov
jge
subb
push
ret
test
mov
jmp
push
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
out
inc
push
inc
scas
jl
inc
pop
jl
rol
inc
jp
cmc
das
mov
mov
adc
xchg
inc
fisttpll
nop
jae
je
popf
lds
mov
adc
scas
or
xor
fldenv
xchg
pushf
sbb
jecxz
mov
fidivrl
neg
and
repnz
pop
in
inc
es
fucom
add
and
sub
pop
daa
jbe
push
mov
stc
add
das
mov
lahf
sub
les
scas
enter
sbb
mov
fidivrl
popf
lret
jmp
iret
adc
popa
test
addb
addr16
incb
and
add
push
inc
push
fidivl
subb
ja
ret
bound
xor
pop
gs
rorl
stos
fldl
or
cmp
push
and
lods
movsl
or
dec
out
lock
repz
movl
xchg
fldl
test
repnz
mov
cmp
xchg
adc
stos
inc
or
jp
mov
lock
sti
fisttps
in
mov
mov
pop
es
jbe
lock
sbb
mov
xchg
sub
std
icebp
inc
ds
jmp
cmp
das
xchg
jg
push
pushf
cli
fs
mov
sub
push
sbb
jb
lret
pusha
or
xlat
jo
mov
sub
stos
mov
nop
jo
xor
test
fsub
stos
out
aaa
inc
mov
daa
jge
lods
sub
insl
test
lret
pushf
lcall
lock
xor
mov
call
or
jp
imul
call
enter
push
xchg
mov
xchg
imul
js
iret
lahf
clc
imul
fisubrl
inc
sub
sahf
mov
dec
xchg
dec
mov
dec
mov
lcall
pop
shl
leave
mov
dec
dec
cmp
mov
pop
ja
jge
out
inc
push
or
xchg
push
xor
fs
push
loope
dec
cmc
icebp
jecxz
jle
mov
in
mov
jno,pt
inc
les
es
mov
sbb
lods
in
xchg
xor
lods
pop
mov
inc
mov
push
mov
jb
xchg
mov
lds
jg
sub
xlat
push
mov
or
out
rcl
cwtl
mov
pop
add
dec
test
rolb
lahf
mov
push
data16
mov
sarl
or
es
mov
outsl
pop
mov
jp
cmpsl
dec
xchg
pop
outsl
pop
mov
pop
xchg
xor
nopl
out
loope
scas
out
shrb
cmpsl
inc
popa
jae
hlt
xor
adc
shl
add
bound
inc
in
hlt
outsb
imull
adc
lcall
enter
nop
fildl
cmp
xorb
faddl
cltd
movsl
xchg
and
mull
inc
mov
lods
sub
mov
icebp
std
pop
rcrb
mov
jb
and
iret
lods
aas
mov
stos
rolb
mov
jb
pusha
in
mov
fmulp
and
stos
scas
cli
in
push
test
rcll
cltd
pop
or
or
adc
pop
mov
fists
mov
lods
pop
in
mov
rol
jecxz
push
xchg
sub
lock
hlt
hlt
push
add
mov
cmpb
shrb
jb
imul
sbb
adc
pop
jecxz,pn
adc
aam
jb
jecxz
outsl
xchg
push
stc
shlb
xor
pushf
addr16
sbbl
out
jb
pushf
sbb
sti
cltd
sub
cli
sbb
pop
gs
repnz
movsl
mov
pop
stos
cmp
inc
outsb
stos
xchg
add
les
mov
lea
pop
mov
and
cltd
or
dec
pop
xchg
inc
xchg
mov
rclb
rcrb
int3
es
pop
sar
jne
fnsave
data16
sbb
test
pop
cli
sahf
pop
mov
inc
adc
scas
sub
push
push
mov
test
aad
push
push
push
add
cltd
adc
and
jo
rcrl
adc
adc
cmp
push
cmpsl
push
pop
mov
pop
nop
jo
or
js
aas
and
xor
adc
mov
int3
dec
ret
and
ljmp
arpl
push
cmc
gs
hlt
shl
ljmp
xor
sbb
push
inc
stc
pushf
cmpsb
adc
and
stos
inc
les
icebp
inc
adc
pop
dec
lret
adc
faddp
add
xchg
imul
lcall
out
pop
cld
popa
out
dec
outsb
push
push
scas
dec
add
aad
xchg
stos
xchg
test
or
cltd
jl
push
scas
push
adc
lock
push
scas
insl
and
adc
push
bound
sub
adc
adc
and
in
lret
sbb
or
pop
inc
mov
xor
mov
dec
dec
jecxz
cmp
xchg
insb
sbb
clc
push
fcoml
ficoml
push
call
jg
sbb
aas
aad
xchg
ja
xor
mov
int
jnp
jecxz
jle
or
mov
lds
cmpb
lcall
jge
out
mov
lcall
sub
and
lcall
pop
pop
cmp
mov
jmp
in
es
fidivrs
imul
andl
jne
fdivs
add
std
fstps
roll
push
and
mov
cmp
push
cwtl
sub
jb
scas
mov
out
push
mov
add
jmp
push
pop
push
adc
adc
dec
jmp
jmp
push
cs
es
mov
mov
lret
cmp
dec
jbe
push
aas
sbb
loope
stc
cmp
test
inc
test
stos
and
in
mov
sbb
pop
mov
mov
push
mov
cmpb
imul
shlb
mov
or
add
sub
lds
push
sbb
pop
lods
mov
divb
cmpsb
inc
icebp
jae
fwait
cli
cld
popf
bound
sti
imul
and
mov
lret
push
pop
cld
add
dec
sar
shll
push
add
aas
les
and
add
jne
add
or
mov
in
sti
mov
int3
or
add
lret
mov
dec
ret
sbb
in
lock
or
jnp
and
aas
sub
or
ljmp
iret
cmp
jns
mull
out
and
inc
test
xlat
mov
push
mov
mov
mov
mov
movsb
arpl
mov
xor
or
js
or
int
out
rorl
push
xor
push
sti
push
add
js
jno
xchg
hlt
mov
adc
mov
xor
sbb
rorb
imul
cmp
lock
or
les
inc
jno
insb
test
or
jl
mov
xchg
sbb
sti
xchg
cmp
add
jp
addr16
insb
jle
xchg
jp
out
fwait
pop
and
cs
or
and
sbb
lods
es
iret
sub
mov
or
rorb
out
pop
or
stos
gs
push
mov
xchg
in
cmp
sbb
cwtl
jb
dec
hlt
mov
jl
fnstcw
lods
fists
mov
lods
lahf
pop
mov
iret
hlt
xchg
mov
jnp
mov
push
push
jae
sahf
outsb
cmp
jbe
xchg
pop
xor
dec
sbb
popf
xchg
xor
jge
shlb
mov
jle
mov
imul
aam
add
xchg
popf
xlat
andb
inc
popa
jge
pop
popf
inc
mov
cmp
sbb
dec
mov
jae
adc
xor
out
jge
and
jl
inc
add
int3
andb
pop
pop
bound
add
popf
adc
je
jg
cwtl
cmc
lret
lret
add
or
fs
push
aaa
notl
inc
sub
xor
lds
mov
pop
call
cltd
pop
jo
out
pop
mov
dec
push
xor
mov
jne
enter
shll
les
call
notb
adc
xchg
and
ja
mov
sti
std
and
dec
paddusb
adc
fisttps
cmc
std
lea
std
push
dec
pop
mov
push
or
rcrl
jmp
sar
jo
mov
dec
inc
push
cmp
out
insb
fwait
iret
xchg
int3
cltd
inc
xor
jl
lea
fnstsw
ds
shlb
repz
jno
pop
mulb
call
cs
nop
lcall
jnp
add
mov
lret
xor
add
ljmp
and
adc
mov
mov
ds
lcall
xor
cmp
shl
push
insl
or
jns
dec
std
push
push
loopne
loope
hlt
jo
into
mov
daa
addr16
or
jmp
fdivrl
xchg
push
push
in
xor
psraw
rorl
xchg
pop
inc
imul
arpl
sub
xchg
sti
cmc
call
add
andl
sbb
shlb
aam
out
or
pop
push
out
push
mov
xchg
mov
dec
sub
test
int3
pinsrw
add
or
aam
cmp
cs
lahf
or
mov
push
mov
popf
bound
cmp
add
sbb
pop
adc
cs
inc
cmpsl
or
enter
iret
les
xor
dec
adcl
divb
pop
dec
rcr
imul
inc
mov
cmp
push
nop
or
inc
movsl
sub
push
outsl
sahf
shll
adc
pop
shrl
add
add
mov
adc
test
xchg
cltd
pushf
add
loopne
fnsave
scas
rcl
andb
aad
imul
mov
dec
lea
arpl
rcrl
adc
mov
je
ret
adcb
adcb
inc
jge
stc
jb
ret
push
shrl
mov
das
pop
add
lcall
jmp
dec
insb
jb
inc
or
ret
pusha
dec
lods
jle
mov
repz
lret
aad
sbbb
pop
scas
cmpl
pop
add
test
js
jno
adc
xchg
stc
push
stos
popa
jns
lods
into
lods
fstp
ficomps
dec
cs
mov
lds
sub
mov
pop
sub
push
cwtl
mov
outsl
sbb
sbb
fs
xchg
adc
enter
movsl
cs
adc
pop
mov
jb
xchg
mov
std
stos
sub
out
dec
sbb
clc
jg
xor
adc
jo
loope
outsb
dec
xor
out
mov
std
sub
cltd
mov
mov
fcmove
adcl
push
fwait
pop
adc
push
and
cmpsl
mov
lret
jle
xor
popf
cmc
loopne
in
adc
cmp
loope
cld
xchg
jmp
fnstenv
xchg
in
ja
sbb
cs
or
and
mov
das
pusha
insb
or
fidivs
sbb
int3
in
adc
je
fcom
repnz
cwtl
cwtl
mov
outsb
ljmp
ja
push
mov
xor
xor
repnz
pushf
out
int3
test
jae
gs
xchg
popf
cmp
sbb
pop
add
out
out
stc
cs
dec
lea
hlt
add
popf
mov
out
out
xor
cmp
jg
pop
aas
sbb
sbb
xor
icebp
aam
arpl
mov
mov
cwtl
pop
jns
inc
movsb
inc
push
sbb
in
lret
pop
pop
push
or
test
pop
add
xchg
pop
rcrb
pop
adc
push
and
lret
push
in
lret
mov
push
push
shrl
push
not
and
sbb
sarl
add
test
and
push
mov
scas
adc
stos
adc
inc
shlb
fstpl
std
mov
xchg
sub
insb
xchg
dec
jne
in
dec
test
and
inc
jae
mov
jne
jb
fisubl
mov
imul
iret
adc
jb
js
loope
lret
dec
jecxz
inc
and
pushf
pop
stos
test
lods
sub
pop
subb
movaps
jns
mov
pop
popa
jmp
cld
cltd
sub
fldl
cmp
pop
xchg
cmp
dec
jbe
fs
out
xchg
rcrl
cmpb
dec
pop
or
repnz
popf
mov
mov
inc
xchg
das
push
push
aas
cli
adc
pushf
aam
outsl
xchg
out
inc
dec
leave
inc
or
sbb
xor
in
jno
mov
in
inc
cmp
xor
mov
lcall
ret
xchg
adc
jno
rcrb
ret
or
mov
push
fs
enter
xor
iret
inc
pushf
cmp
dec
in
cld
and
mov
jecxz
cmpl
push
cmp
xor
gs
ds
mov
lock
pushf
movsl
aas
mov
out
xchg
int
add
in
cmp
enter
dec
out
nop
jae
ret
jns
int
inc
ljmp
or
jmp
xor
insl
mov
and
or
jge
gs
sub
mov
push
pop
flds
in
insl
das
or
jo
jl
icebp
mov
in
pop
ja
push
inc
push
mov
cld
in
dec
inc
dec
xor
dec
xor
lret
dec
mov
inc
mov
ret
je
mov
and
jae
dec
inc
mov
ja
into
popf
xchg
aaa
popa
divb
loop
fwait
repnz
inc
cmp
lods
mov
jae
dec
popa
arpl
xorb
imul
or
rcrl
adc
mov
iret
leave
das
fcoml
pop
sbb
cmpsb
push
jp
push
mov
push
aas
xchg
test
push
popf
ss
mov
gs
cli
or
outsl
push
dec
outsb
imul
inc
lcall
out
fdivl
xor
mov
mov
mov
test
cld
lock
loop
mov
fdivl
imul
bound
xor
inc
jo
xorl
xchg
insb
dec
jp
popf
inc
xchg
ljmp
pop
push
lds
das
ljmp
aad
mov
mov
std
aaa
push
ds
sub
xor
imul
pop
lods
imul
push
xchg
xor
mov
xchg
inc
arpl
int
jb
cld
inc
dec
gs
and
xor
xchg
jmp
dec
push
stos
mov
in
repz
out
ja
jno
int3
jae
divl
and
in
lds
hlt
shr
inc
mov
pop
jnp
fiaddl
xchg
subl
in
arpl
outsb
popa
push
icebp
xchg
dec
dec
jmp
imul
xor
and
cwtl
push
pop
mov
xor
cs
push
push
fwait
jnp
jecxz
jno
push
loopne
xor
sarb
push
fstps
cwtl
xchg
push
les
adc
cmp
jb
cmc
stos
pushf
into
inc
movsl
lret
stos
and
out
xor
and
pop
or
pop
mov
out
mov
dec
pusha
gs
push
and
cmp
sbb
cwtl
das
dec
scas
xchg
cmp
pop
leave
loope
inc
jp
jge
dec
sub
data16
sbb
repz
inc
sbb
mov
shrl
mov
mov
mov
lret
cmp
insl
fstpt
push
adc
push
push
sar
xchg
cmp
or
das
and
push
mov
cmp
ret
cmpsl
test
test
in
or
addr16
sub
xor
imul
jg
out
and
out
testl
shlb
pop
ret
clc
adc
jne
xchg
push
sub
das
xchg
clc
jno
rcll
xchg
shll
testl
bound
or
xlat
jns
dec
lock
dec
mov
mov
jns
mov
mov
mov
mov
int
cld
std
cmp
or
cmp
test
adc
cmpsb
das
lea
jo
dec
sti
add
mov
or
test
jge
mov
and
ljmp
dec
xor
adc
adc
sbb
cmc
movsl
jmp
ret
and
mov
jg
pusha
or
ds
push
aad
insb
rcll
inc
pop
push
fwait
loop
or
sub
push
push
cmpsb
loop
dec
pushf
stc
or
in
insl
xor
or
pop
jns
sbb
outsb
arpl
xor
xor
mov
movsl
dec
xchg
psubw
jmp
jno
mov
inc
xchg
loope
xor
xchg
cwtl
mov
sub
in
insl
push
jo
push
sub
fmull
dec
cltd
loop
pusha
xchg
aad
push
add
cs
ljmp
cmp
lcall
clc
lea
mov
dec
ret
lret
in
ds
cltd
mov
lret
xor
sti
iret
lret
jl
sti
test
jmp
xor
stc
enter
lds
add
scas
adc
movsb
pop
cli
test
adcb
insb
das
ret
in
lcall
mov
fdivl
fisttpll
sbb
xor
sbb
lds
pop
shlb
sbb
fdivp
stos
cmp
iret
jno
push
std
ljmp
shl
cmp
in
xchg
enter
mov
ja
push
fildll
sub
js
adc
xchg
sub
repz
loopne
stos
dec
js
and
fcoms
dec
dec
sub
popa
scas
aas
push
int3
pushf
push
push
mov
xor
shlb
and
rcl
mov
xchg
and
loopne
insl
lret
add
mov
int3
in
les
mov
ljmp
cmp
and
push
push
out
loopne
xchg
mov
out
adc
hlt
sub
and
mov
push
aad
or
ret
add
test
xlat
gs
cmp
insb
sbb
jo
xor
mov
push
jne
ret
sub
scas
dec
popf
shl
push
mull
push
shr
xor
adc
sahf
sti
xor
xor
cltd
ds
jae
fsubl
shl
imul
ficoms
sbb
aaa
sub
test
sti
and
sub
ljmp
jp
jo
xchg
pop
repnz
mov
xchg
jno,pt
lock
xchg
in
addr16
gs
enter
cmp
scas
movsl
inc
out
push
notl
in
push
xchg
sbb
xchg
out
inc
jb
insb
or
cmp
xorb
cwtl
and
sub
fnstenv
je
push
xchg
ss
sub
xchg
cmpsl
mov
mov
jp
xor
mov
outsb
lret
and
inc
xor
mov
push
add
and
mov
or
aas
aas
inc
cmp
pop
pop
pop
mov
jne
sbb
jbe
mov
aad
in
int3
mov
push
pop
jle
or
mov
dec
sarb
movsb
shll
shll
lret
jnp
xchg
sarl
jge
scas
shlb
cmp
loop
test
ljmp
enter
adc
lcall
fmuls
sub
cmpsb
adc
jl
lea
xchg
jbe
xchg
cltd
movsl
out
inc
xor
fsubrs
idivb
ljmp
inc
cwtl
sahf
xchg
inc
gs
ja
jg
cmc
jge
fs
and
call
jge
push
inc
imul
fwait
and
dec
pop
fsubr
xor
and
out
jbe
inc
mov
mov
sbb
inc
and
sbb
add
adc
fimull
test
in
jl
fsubl
rorb
inc
push
mov
mov
cmp
call
in
popa
out
enter
aaa
jmp
xlat
cmp
ds
add
inc
xchg
xor
xchg
iret
adc
mov
inc
nop
adcb
sub
jp
xchg
sahf
xchg
cs
pop
pop
inc
test
push
lea
or
nop
inc
sub
lods
mov
push
adc
fildll
push
pop
dec
shr
lret
pushf
clc
mov
hlt
lahf
xchg
es
movsl
scas
xor
inc
push
pop
aad
loopne
cmp
test
lods
add
fmuls
clc
sub
sub
lock
ret
sub
dec
fld
sbb
xor
and
cmpsb
dec
mov
inc
ss
push
js
pushf
mov
adc
lret
hlt
sub
mov
mov
xchg
adc
lds
or
push
sub
fwait
lods
repz
or
int3
pop
push
aad
dec
adc
and
adc
iret
rcrb
imul
sbb
jl
clc
les
inc
loopne
notl
pop
andl
add
add
xchg
in
lods
push
mov
and
mov
inc
lret
push
pushf
movsl
mov
movsb
xor
jge
in
movsl
test
xor
daa
les
nop
cwtl
js
sti
imul
push
xor
push
mov
cmpsb
adc
xchg
testb
push
in
mov
mov
xor
cmc
imul
xchg
and
mov
test
mov
lahf
xchg
insb
cmp
xchg
int3
lds
sbb
ret
arpl
hlt
ja
fwait
daa
pop
push
mov
push
in
xor
mov
mov
pop
cmp
movsb
loop
popf
fbld
mov
dec
pusha
pop
mov
mov
jg
into
cmp
xor
dec
cmp
subl
cmpsb
rclb
jb
xchg
mov
inc
sbb
stos
cmp
adc
loopne
mov
stc
sbb
or
je
push
in
inc
inc
out
in
sbb
cmp
push
mov
sti
cmp
pop
mov
inc
mov
jbe
xor
sbb
push
bnd
xchg
and
addb
mov
jnp
cli
push
shlb
aaa
xlat
jge
sbb
aaa
adc
sub
push
iret
bound
cmp
sbb
sarl
ljmp
int3
add
fwait
or
insb
imul
int3
xchg
jmp
nop
leave
jecxz
fmull
enter
popf
jns
int
fbld
outsb
xor
sti
test
bound
repnz
jno
and
int
scas
xchg
xchg
mov
shlb
ret
repz
ljmp
stos
scas
xchg
rol
std
cwtl
sbb
imul
jns
jnp
aad
mov
fldcw
rorl
cli
push
mov
aad
mov
mov
repz
add
mov
push
test
je
jg
enter
inc
cld
shl
jb
mov
outsl
mov
imul
jbe
outsb
lods
sbb
fprem1
insl
iret
push
push
pop
roll
fucomp
sbbl
jmp
into
sub
push
in
inc
inc
jo
outsl
int
mov
inc
xchg
lret
inc
fs
mov
sti
jae
jg
sub
push
sub
mov
int3
cmp
xor
dec
rcrb
shl
push
and
stos
or
pop
cmp
cwtl
call
mov
les
xchg
and
pop
cmp
cmpsb
inc
subl
les
jge
jbe,pt
jb
and
xorb
or
xor
fwait
hlt
adc
add
or
into
adc
push
or
xor
into
ret
leave
scas
sbb
addr16
bound
xlat
out
pop
ljmp
mov
mov
mov
pop
push
popa
jne
loopne
fs
stos
jp
cmp
mov
or
add
adc
and
jae
xor
lret
loop
jne
test
dec
fcompl
push
insb
orb
rorb
out
dec
dec
movzwl
rol
inc
dec
jmp
cmp
jo
or
int3
aam
test
ja
lea
inc
jnp
mov
int3
jbe
in
lea
icebp
data16
or
aad
movsw
sbb
aaa
mov
add
fwait
adc
sahf
push
out
cmp
nop
and
mov
frstor
sbb
enter
adcl
std
jmp
lods
xchg
mov
adc
push
push
stc
js
sti
inc
adc
or
sub
jnp
lods
cltd
nop
arpl
pop
and
inc
movsb
loopne
adc
cld
aad
inc
js
xor
or
hlt
in
mov
lahf
push
sub
pop
cmp
arpl
ret
or
lret
xor
lods
out
mov
lea
or
mov
xchg
mov
or
popf
jne
in
mov
sarl
lret
inc
push
add
daa
insb
adc
lds
pop
dec
push
movsb
js
fisubrs
test
sub
fcmovnb
xor
out
cs
loop
mov
pop
daa
push
inc
stc
loope
and
imul
sbb
ja
pushf
negb
jge
xchg
jge
js
xchg
mov
push
cmpsb
aam
dec
mov
push
mov
ss
inc
and
cmp
ljmp
mov
outsb
and
es
mov
lret
inc
or
push
mov
cmp
pop
imul
je
std
andl
cmp
xchg
test
leave
and
push
fisubs
js
mov
sub
ficoml
adc
test
jbe
mov
cmp
aas
push
sbb
and
dec
inc
dec
adc
adc
jg
inc
push
fsubp
dec
xchg
in
push
loopne
mov
out
mov
icebp
sti
lret
inc
and
or
mov
test
mov
fs
into
mov
jp
cmp
lock
imul
test
cwtl
sbb
sbb
cli
sub
pop
sub
and
push
adc
arpl
mov
mov
and
sbb
pop
stos
loopne
inc
cmp
push
stc
mov
mov
sub
mov
rclb
ficoml
out
push
adc
loopne
fs
cmp
mov
fcoms
dec
sbb
movsl
aam
sub
lock
and
sbb
push
mov
frstor
lods
cmp
pushf
jl
mov
lret
leave
mov
xchg
sub
push
test
mov
scas
sub
out
sub
add
mov
xor
xor
jg
addl
pop
cmpsl
or
lea
stos
test
or
mov
lds
or
cs
xlat
or
test
out
inc
pusha
pop
jg
push
push
sub
js
push
in
mov
adc
sahf
lret
mov
scas
scas
les
fildll
nop
or
pop
push
out
dec
xchg
adc
mov
xchg
out
inc
in
insl
xor
adc
addr16
call
pop
cmp
sub
sub
inc
out
push
out
sbb
cwtl
push
sub
push
pop
leave
cmp
and
sahf
adc
xchg
pop
pop
mov
or
or
pop
inc
hlt
loopne
shlb
out
mov
fwait
repnz
lods
ror
mov
push
es
mov
std
pop
adc
xor
scas
das
dec
test
mov
or
mov
ret
jb
jbe
inc
lods
scas
fcoms
push
push
add
cs
xchg
clc
filds
ja
push
inc
mov
ficoml
inc
fwait
xor
mov
or
rol
hlt
rorl
addr16
aas
mov
jnp
jecxz
xor
lret
aam
mov
loop
or
pop
fnclex
mov
test
mov
sub
xchg
mov
mov
fldt
jmp
jae
xchg
cs
mov
adc
add
clc
sub
int3
lods
sub
pop
shlb
or
leave
arpl
cmp
inc
push
mov
dec
jmp
sbb
pop
hlt
insl
cmp
lahf
rorb
xor
xor
mov
aad
jecxz
jle
cmp
adc
cltd
xchg
sub
jne
fldcw
mov
scas
int
mov
call
sub
xchg
jle
out
mov
jae
add
sti
add
mov
xchg
aad
arpl
fcoms
fwait
iret
sbb
xchg
cmpsl
mov
mov
mov
jbe
and
and
sub
push
and
loop
addr16
xlat
inc
xchg
out
sti
ret
inc
sbb
push
rclb
mov
fsubrs
cmp
ret
push
scas
mov
xor
lds
xchg
push
mov
push
repz
or
lcall
and
pop
out
cli
shlb
xchg
out
loope
idivb
rcl
xor
mov
lcall
mov
cmpl
mov
das
repz
and
pop
mov
ljmp
push
mov
dec
pop
sbb
ror
fnsave
test
scas
or
popa
xchg
mov
loope
cs
in
movsl
sub
decl
lods
adc
repz
in
xlat
addr16
fisubs
push
roll
cltd
mov
nop
popf
xor
jne
fimuls
sub
mov
pusha
adc
xor
aaa
mov
sbb
scas
loope
out
sub
js
sub
xchg
adc
mov
pop
cmpsl
and
testl
add
pop
dec
adc
fisttpll
push
xor
std
pop
js
sar
cwtl
mov
mov
xor
fst
es
fstpl
xor
add
mov
jb
test
imul
mov
push
xchg
sub
addr16
jecxz
sbb
imul
sub
stos
sbb
cmp
xor
mov
lods
add
jle
dec
das
shll
mov
xchg
sub
stc
xchg
lods
subb
cs
dec
and
sarl
add
or
stos
movsl
lds
daa
push
and
jecxz
popa
call
xchg
fisubs
dec
scas
and
and
mov
imul
loopne
lret
shll
outsl
mov
mov
insb
cmp
arpl
loop
sub
xchg
mov
dec
enter
and
shrl
rcrb
test
mov
cmp
jne
nop
sar
dec
xor
cwtl
mov
icebp
lahf
shl
mov
sbb
dec
es
dec
popa
cmp
push
push
adc
cmc
je
aaa
mov
andb
cli
jl
sti
jecxz
repnz
xchg
adc
ret
pusha
inc
imul
testl
inc
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
xor
push
adc
jl
inc
pop
jl
shrb
loope
mov
ja
or
xchg
into
or
or
push
iret
mov
movsb
xchg
cld
jg
insb
lods
aam
and
rol
enter
push
sti
pop
jne
aam
mov
cltd
out
xlat
mov
push
pop
and
mov
or
fsubl
and
add
test
ds
or
test
add
lcall
xchg
push
daa
fmulp
inc
xchg
adc
mov
out
cmp
adc
cli
fimull
and
add
lock
push
cld
pop
fsubrl
pop
in
inc
imul
lcall
inc
push
push
popa
nop
lock
pop
test
pop
ss
fadd
fildll
sbb
xchg
sub
dec
push
shrb
inc
jbe
jne
clc
shlb
xlat
je
mov
xchg
adc
cmp
fsts
or
mov
mov
and
push
jmp
mov
push
and
xlat
xlat
sub
xchg
sbb
sahf
int
out
clc
out
dec
inc
mov
add
addr16
xchg
xlat
lret
test
push
or
ret
mov
jle
jmp
les
cvtpi2ps
lods
stos
xchg
xchg
imul
fmull
adc
mov
mov
mov
daa
lds
fisubrl
inc
in
and
pop
push
xor
inc
imul
rcr
push
pop
lea
in
sub
sub
stos
add
inc
stc
mov
aaa
sbb
addr16
cmp
cld
clc
add
pop
es
cli
add
int
not
lods
pop
adc
jne
adc
pop
mov
loope
inc
mov
gs
sti
test
push
insb
loopne
jle
mov
cwtl
pop
fsubs
cli
xchg
adc
push
outsl
sti
hlt
and
push
out
xchg
fsubl
mov
fwait
sbb
lods
loopne
inc
sub
jecxz
jo
lcall
stos
inc
pushf
shrl
aad
lcall
fcoms
rcl
mov
incl
in
bound
sub
scas
loop
dec
outsb
clc
inc
mov
out
dec
dec
ja
jnp
aad
inc
pop
and
cmc
jmp
mov
movsl
scas
outsl
rolb
jne
push
add
jae
mov
lret
je
pop
jnp
sbb
jbe
lahf
movsb
mov
out
cmp
daa
into
add
lds
xchg
sti
imulb
out
insl
xchg
testl
add
cli
aam
or
sub
lahf
mov
mov
pop
mov
push
fsubrl
or
add
add
inc
mov
jae
fildll
and
inc
xchg
pop
popa
test
sub
adc
jne
push
jp
inc
orb
push
call
jo
jecxz
std
into
dec
inc
popf
mov
std
hlt
sbb
scas
inc
nop
dec
mov
pushf
lods
xor
cld
stos
xchg
mov
icebp
out
test
and
mov
stos
cmp
jge
shlb
dec
ljmp
dec
divb
dec
push
das
sub
dec
negb
bound
inc
dec
mov
sub
sbb
in
loope
cltd
and
clc
or
arpl
push
das
mov
in
enter
shlb
outsb
iretw
jge
and
lea
js
test
cld
or
call
int
lahf
mov
scas
cmc
mov
lock
loopne
pop
leave
sub
add
mov
int
and
cmp
mov
xor
rorl
cmc
xor
adc
sbb
or
and
movsl
sub
es
lcall
xlat
ret
stos
fdivrl
cld
mov
int
push
nop
outsb
or
push
xchg
jge
pop
stos
fs
ljmp
out
ljmp
cmp
pop
cltd
and
hlt
push
pop
es
jae
loop
and
ja
jbe
pop
pushf
xchg
outsl
add
shr
lods
push
filds
testl
imul
mov
mov
aaa
cmpsl
sbb
subl
hlt
ja
out
push
sarb
jbe
push
lds
int
je
push
and
icebp
les
xchg
jecxz
xlat
jbe
ja
into
sub
push
inc
sbb
jno
ljmp
cltd
sbb
mov
push
xchg
pop
xor
test
fstpt
sub
hlt
dec
out
mov
mov
stos
and
testl
negl
sub
inc
lcall
mov
cmp
or
addr16
xor
out
xchg
sahf
out
fcompl
sarb
sti
mov
push
sahf
mov
mov
test
je
fdivp
imul
and
jno
fbld
dec
fisubrl
popa
int3
jo
adc
xorl
mov
sbb
dec
jp
or
into
out
int
adc
mov
xor
adcl
and
sbb
lods
rcl
dec
aam
xchg
lods
sar
lcall
push
xchg
push
jecxz
arpl
out
ror
mov
xchg
jg
insl
push
xor
add
loope
in
cmp
pop
push
inc
dec
test
mov
test
mov
xchg
test
insl
pop
insb
jl
pop
js
sub
add
insb
and
dec
inc
or
cmp
xor
enter
adc
clc
loopne
jae
sti
jmp
jl
mov
jmpw
sub
fistl
insb
fildl
cmp
in
inc
jns
push
jno
lds
mov
fisttpll
push
repnz
jecxz
in
push
or
fwait
pop
push
imul
ret
and
icebp
stc
push
scas
add
push
xchg
imul
push
addb
enter
rolb
test
push
xadd
or
sub
sub
fcomps
cmp
sbb
push
into
data16
jp
int3
repnz
mov
mov
add
aad
or
loopne
and
aad
mov
leave
dec
jge
inc
or
ljmp
mov
loop
jmp
fwait
jnp
arpl
sbb
mov
icebp
sbb
xor
fidivl
gs
pop
jne
push
inc
adc
cmp
jecxz
mov
sub
or
cmpsb
xchg
sbb
pop
int
mov
stos
lds
xor
imul
dec
scas
repnz
add
dec
pop
mov
xor
in
das
and
xor
push
sbbb
pop
xchg
cmc
popf
jmp
cmp
daa
sbb
pop
push
int
fists
mov
cmp
mov
ret
in
js
clc
inc
cwtl
xlat
adc
out
imul
lock
jge
mov
aad
fnsave
movsb
adc
mov
and
gs
push
jl
sbb
adc
pop
mov
popf
clc
cli
dec
cs
adc
es
and
repz
repz
in
pop
xor
jmp
loop
inc
stos
pop
jl
popa
jns
loopne
cs
clc
mov
in
mov
mov
jge
ret
sub
call
pop
fwait
loopne
test
int3
mov
popf
xchg
push
imul
cmp
add
sbb
jns
loop
sbb
pop
cmpb
xchg
sbb
mov
xor
jno
addr16
jb
dec
dec
sti
out
mov
lahf
loop
adc
in
inc
lods
xor
cld
cmc
bextr
push
ds
cmp
popf
dec
aad
jle
test
mov
xchg
in
cmp
jle
aam
ret
es
inc
cld
xorb
lods
push
pusha
loope
scas
and
insl
jmp
cwtl
mov
lret
xchg
out
sub
cwtl
and
inc
push
cmp
cs
jecxz
pop
inc
xchg
sbb
add
cmp
fisubrl
aaa
aam
mov
xor
sbb
cmp
cmc
imul
das
mov
xor
dec
cmp
jle
jl
stos
jo
hlt
std
dec
cmp
dec
mov
xor
out
lahf
cld
fnsave
and
in
or
pop
sbbb
xchg
cmpl
dec
inc
add
inc
leave
mov
cli
cmc
aam
gs
test
nop
dec
aaa
dec
lods
jmp
xchg
lret
aas
imul
mov
or
cltd
pop
bsf
cmp
loopne
push
mov
and
cmp
test
pop
daa
pusha
shrl
aam
cmp
call
mov
or
sub
mov
cwtl
xchg
xor
push
push
call
push
dec
ret
js
outsb
mov
cmpsb
lcall
in
aam
jo
push
lods
dec
mov
xchg
stos
jecxz
xor
pop
addl
sub
test
sbb
pop
shr
adc
fdiv
stos
cmpsb
dec
shl
daa
lods
stc
mov
pusha
inc
mov
xchg
clc
fstl
inc
push
test
jno
je
mov
pop
stc
rcr
out
xchg
aaa
jb
pop
xchg
or
jp
xor
stos
mov
lret
ss
mov
mov
and
xor
dec
fdivs
push
int
popa
loopne
in
data16
lds
inc
pop
jns
push
das
enter
jae
cld
cltd
andb
imul
add
or
pop
jmp
into
es
cmp
sahf
lds
and
sti
movsl
mov
add
mov
pop
jns
in
and
fcmovbe
jns
outsl
or
flds
mov
xchg
mov
mov
add
jmp
mov
popa
sbb
xor
push
sbb
push
movsb
loopne
ficoml
sub
mov
mov
repz
out
inc
movsb
adc
or
mov
adc
mov
sub
lea
sub
mov
pop
int
stos
cld
sbb
and
adc
adc
add
mov
fdivs
rolb
pop
movsl
int
lea
jno
ret
arpl
push
mov
scas
mov
mov
fwait
pop
pop
xlat
nop
cltd
scas
fsubrs
cli
inc
push
push
pop
popf
sub
jo
rcll
imul
ss
insb
scas
lcall
xchg
mov
pusha
jle
daa
jmp
fildll
mov
jnp
xchg
sbb
loop
sbb
enter
rcrl
dec
adc
push
sub
cmp
and
loope
fnstenv
adc
js
cmc
jle
adc
icebp
dec
outsb
pop
jmp
fs
cmp
lahf
or
rcrl
pop
mov
sbb
push
jg
test
push
sarw
pop
jmp
lods
fwait
cmp
outsl
sub
push
mov
pop
mov
adc
cld
push
mov
es
cmpsl
sbb
pop
loop
fadd
movsl
xchg
fsincos
mov
cmp
add
pop
icebp
push
lahf
mov
lods
in
popa
clc
xor
jmp
pop
and
or
mov
into
imul
push
in
fs
xlat
add
addr16
pop
dec
insl
gs
mov
adc
cmp
and
loope
test
jns
hlt
in
xchg
and
inc
pushf
loop
cltd
mov
out
inc
mov
lret
mov
mov
jg
push
lahf
lds
inc
or
icebp
sbb
sub
and
xor
mov
iret
xchg
loop
rcr
lods
mov
dec
bound
test
out
fildll
jl,pt
lds
mov
daa
push
mov
nop
mov
mov
add
mov
aaa
cmp
les
cmp
stos
dec
jns
adc
or
pop
fwait
push
in
popa
into
leave
imulb
scas
scas
cmp
sbb
push
pushaw
hlt
popa
and
cmp
or
nop
ljmp
xor
pop
fwait
dec
mov
mov
add
mov
jecxz
push
add
push
push
push
xchg
sub
inc
enter
pop
push
jne
jl
popf
scas
mov
lods
imul
dec
in
cli
jmp
ret
mov
sahf
xchg
enter
jge
scas
les
jmp
pop
and
insb
pop
vmaxss
lret
push
out
mov
add
les
mov
scas
mov
cwtl
rorl
sub
push
adc
orb
xchg
or
stos
ja
mov
jg
xchg
jmp
mov
arpl
jnp
jnp
or
mov
cmp
scas
add
add
test
sahf
lds
and
pop
pop
pop
push
xlat
ficoml
leave
mov
pop
imul
jo
das
mov
repz
xor
inc
adc
ret
aas
leave
mov
arpl
in
fnstsw
daa
cmp
xor
sbb
adc
lds
cmp
push
mov
sti
ja
push
minps
push
sbb
sbb
sub
pushf
addr16
mov
std
sti
mov
pop
sbb
inc
inc
data16
push
add
fcompl
ret
int
repz
lock
cltd
inc
add
xor
clc
sub
or
mov
push
jbe
bound
and
lcall
and
pop
xor
mov
pop
add
stos
jp
jns
test
dec
std
test
in
enter
mov
inc
push
bound
add
dec
iret
mov
movsl
stc
xor
repz
mov
dec
out
and
jge
test
push
mov
inc
int
or
and
cmp
stos
pusha
inc
xlat
jns
lcall
jle
sbb
insb
add
pop
in
out
out
fcoml
icebp
xor
imul
fs
cmp
push
jg
push
jecxz
mov
mov
lds
nop
lahf
adc
ret
mov
and
xor
dec
jl
pop
pop
in
lods
loope
popl
outsb
jecxz
add
push
call
iret
add
jle
out
popa
mov
pushf
fisubl
test
inc
mov
lds
movsb
fmuls
add
std
and
addr16
jne
testl
es
outsb
imul
jo
enter
sti
loope
enter
xlat
or
cmp
in
cli
jl
and
movsb
xor
outsb
push
repz
iret
xchg
sarb
jno
xor
out
lahf
clc
and
in
sti
cwtl
es
mov
pop
daa
push
or
xor
xor
jmp
sbb
add
pop
sbb
cmp
movsl
push
pushl
mov
push
pop
stos
enter
dec
cmpsb
pop
push
fld
outsl
ljmp
fbld
cmpsb
inc
adc
imul
mov
hlt
mov
rcrb
dec
fisttpll
stc
mov
int
xor
and
mov
xchg
popl
repz
adc
mov
rorb
mov
and
sysret
mov
dec
sub
and
add
aaa
adc
dec
pop
and
push
jnp
lret
fdivr
popf
lcall
add
and
notb
sbb
push
test
add
mov
rcrl
outsl
les
rcrb
dec
into
loope
mov
orl
fldt
adc
push
mov
shll
imulb
sbb
dec
lea
movsl
scas
lods
mov
mov
add
pmaxsw
or
mov
sbb
pusha
fdivs
mov
adc
xchg
jp
xor
fsub
les
push
dec
vminpd
dec
pop
sbb
xlat
loopne
shll
fcompl
test
xchg
ret
push
mov
mov
dec
fadds
addr16
repz
cmp
sub
mov
loop
jne
mov
divb
imul
fisttpl
scas
sbb
icebp
pop
rolb
test
scas
les
xchg
push
cmp
jle
xor
pop
push
jno
and
dec
scas
shrb
pop
and
insb
ja
jl
adc
lret
jns
test
nop
je
scas
inc
adcb
fidivl
or
call
sbb
mov
mov
in
in
cltd
mov
test
cs
sbb
push
inc
cld
pop
dec
jnp
nop
cltd
dec
cmp
xchg
lock
flds
jge
jp
and
and
jbe
mov
xchg
xchg
ret
icebp
pop
in
or
daa
push
add
lock
lds
aaa
sub
push
stos
leave
mov
xor
xor
outsl
aaa
pop
xlat
js
subl
popf
lock
mov
sbb
mov
aaa
jge
mov
sub
repnz
push
push
push
xchg
fwait
pop
mov
dec
jno
aaa
ret
dec
sbb
mov
add
dec
test
aam
mov
cmp
cmp
out
and
push
inc
mov
and
ds
fld
fucomip
add
cmc
out
leave
insl
sarl
push
jns
lahf
jne
test
ror
aam
jl
lret
sbb
rcrl
mov
das
pop
adc
loopne
sub
popa
xchg
sti
push
adc
nop
mov
sahf
outsb
cli
cwtl
pmaxub
dec
sti
aam
or
inc
cmp
cmp
inc
or
lahf
or
iret
mov
mov
dec
add
inc
or
mov
testb
mov
scas
adc
sub
sub
ret
hlt
fistpl
test
pop
das
jle
mov
lea
sub
mov
jb
test
dec
or
sub
sub
push
xor
ret
xchg
imul
pop
jbe
inc
loop
cmp
add
mov
mov
scas
jb
or
daa
pushl
mov
cwtl
sub
icebp
cli
into
popa
inc
loope
arpl
ja
pop
das
fimuls
jne
lods
cmp
dec
add
push
sub
dec
jmp
jl
dec
sub
sbb
rol
adc
pop
push
xchg
mov
xor
int
loope
mov
pushf
jo
loop
push
xor
or
shll
mov
jnp
aas
sub
and
pop
cmpsl
sub
sbbb
pop
and
and
pop
scas
iret
sbb
aaa
ret
stos
xchg
in
sarb
fcoml
nop
adc
pop
dec
mov
dec
shrl
jmp
mov
or
lock
mov
je
jae
or
out
jg
dec
xor
push
sub
cli
rcr
fildl
stc
cld
imul
adcl
mov
cmc
popf
xor
shll
xchg
sbb
jge
in
jbe
push
sar
mov
jp
mov
movsl
bound
xchg
adcb
sub
daa
loope
push
repz
pushf
mov
sbb
cmp
inc
jo
xor
out
stos
xchg
pushl
xor
push
and
pop
mov
pop
or
lcall
and
imul
sub
sbb
adc
je
test
mov
cmpsl
and
fidivrl
aas
repz
or
mov
nop
dec
xchg
insb
int
jnp
cmp
lret
push
out
mov
ja
inc
aas
add
adc
lock
push
fdivrl
sub
or
adc
cmp
add
cs
stos
push
es
inc
xchg
bound
and
fld
ljmp
aam
pop
mov
push
repz
or
aad
fmuls
ret
shll
fucomip
arpl
mov
push
or
push
xor
mov
loop
insb
add
pop
add
and
push
dec
sarl
les
les
push
cmp
or
shrl
aas
add
rol
scas
scas
inc
push
cli
mov
imull
adc
ja
dec
mov
scas
bound
mov
sub
mov
jmp
lret
inc
iret
out
xlat
cmp
jae,pt
mov
imul
sbb
inc
leave
outsl
in
jbe
out
lahf
xchg
test
push
adc
xchg
sarl
sub
jns
mov
jae
or
shrb
push
cmp
ds
mov
pop
cld
pop
les
mov
sarl
fadds
add
std
lret
cmpsb
jbe
push
mov
cmp
je
inc
sub
lods
or
mov
sarb
mov
or
sbbl
cld
xchg
stc
add
cmp
and
xchg
mov
lods
shlb
cwtl
cltd
xor
mov
daa
andb
and
mov
cmp
ret
hlt
cmp
daa
pop
iret
push
popa
xchg
inc
pop
loopne
test
aad
mov
xor
stc
adc
cmp
bound
dec
sbb
notl
jecxz
push
push
fdivl
icebp
mov
inc
push
push
fwait
sti
inc
sub
add
or
xchg
movsb
and
ja
insb
sbb
ret
jno
dec
xchg
test
push
xchg
jl
sbb
in
pop
sbb
cmp
mov
stos
xor
jecxz
scas
lods
loop
jl
pop
in
sub
into
cmc
cmp
aam
pop
inc
in
pop
xor
xchg
insb
int
lcall
mov
mov
adc
push
cmp
popa
sbb
sub
push
fsubrl
sub
pop
jl
sti
fs
lods
fsubs
sbb
sahf
ljmp
push
stc
stos
xchg
xor
mov
in
movsb
inc
out
mov
imul
fistpll
xor
rolb
mov
es
movsb
push
xchg
xchg
dec
pop
fdivrs
sbb
call
sbb
adc
push
and
pop
or
inc
hlt
mov
out
in
ja
or
sahf
pop
xchg
inc
mov
insl
xor
mov
inc
rol
dec
sarb
or
shlb
into
cli
mov
push
mov
outsl
dec
orl
push
add
fildl
adc
in
cmpl
test
aas
push
stc
pop
xchg
fs
xchg
pop
jmp
in
adc
mov
push
xchg
jo
in
insb
stc
cwtl
fs
fdivrs
push
xor
and
pop
sbb
movsl
push
cmp
pop
out
sbb
faddl
in
fadd
rorb
mov
into
out
pop
jo
pop
ror
shl
lds
imul
test
cmp
ret
pop
lods
in
jb
mov
test
lods
mov
sub
daa
int3
jae
cmpsb
stos
das
sub
dec
push
adc
push
fsubrl
rcrb
shrl
inc
mov
mov
imul
and
cmp
jo
std
mov
in
insb
fwait
sub
push
mov
push
fstpl
mov
stc
xchg
fwait
push
and
outsl
call
push
cli
jp
bound
mov
enter
xlat
cli
pop
out
mov
xlat
clc
out
add
fs
mov
xlat
outsl
sbb
imul
into
pop
mov
fldenv
and
jmp
mov
enter
sbb
stos
mov
lods
inc
xor
dec
lahf
xor
cmp
stos
jno
push
lcall
add
sarl
sub
sub
mov
mov
imul
cmpsb
stc
pop
lock
inc
sbb
mov
mov
mov
jbe
outsb
rol
adc
fbld
jg
cmp
loopne
outsl
pop
inc
ljmp
cmp
or
xlat
cmpsb
and
sub
imul
and
jae
fdivrs
testl
xchg
ja
xchg
jns
in
adc
add
in
fnstenv
fidivrs
mov
rcrl
je
push
jno
add
sbb
inc
hlt
inc
mov
add
cmp
or
xorl
subl
jl
and
pop
sbb
imul
not
scas
xchg
enter
jmp
and
fs
insb
sahf
or
cmp
lea
xor
test
xchg
sbb
outsb
pop
in
psubsb
jne
lret
and
jb
xchg
fsubs
stc
lock
int3
pushf
push
jmp
cmp
stos
imull
inc
dec
sub
cmp
outsb
orb
hlt
xorb
shrl
lahf
lcall
fstpt
sub
jbe
push
inc
adc
pusha
jecxz
mov
pop
cld
ljmp
pop
adc
sbb
cmp
push
mov
cmp
pop
repnz
dec
jecxz
mov
jmp
in
xor
lock
xchg
ret
mov
repnz
shll
push
aas
xchg
mov
mov
js
movsb
clc
in
in
push
sahf
loope
sub
sub
or
cltd
cli
int3
and
mov
pusha
push
cmpl
adc
or
mov
arpl
cmp
or
mov
xor
inc
xor
call
or
jo
mov
add
test
fcomps
jb
movsb
lods
push
cmpsl
lock
sbb
fwait
insb
inc
dec
adc
iret
cmpl
icebp
or
push
ljmp
adc
lcall
jmp
mov
mov
jne
out
iret
adc
and
inc
enter
and
jge
hlt
aad
out
mov
mov
rorb
ret
cld
mov
jge
cli
sub
xor
int
jnp
mov
loop
sub
les
mov
inc
rcrl
dec
mov
das
sub
jne
push
jnp
inc
dec
in
jne
mov
repnz
push
int3
cmc
adc
les
or
sbb
mov
test
insl
loop
xchg
mov
je
lods
clc
loope
or
mov
mov
xchg
nop
or
ljmp
shlb
vpsllw
jp
cmp
sub
push
mov
iret
or
fcoml
jb
and
shrl
ficoml
sbb
inc
xor
cmpsl
dec
mov
pop
popa
xchg
div
imul
es
mov
std
cmpsb
mov
aam
negb
lret
pushf
lock
call
cltd
xchg
xchg
pop
mov
ljmp
fnstcw
xor
movsb
clc
xchg
jbe
jnp
mov
enter
pop
adc
jg
in
lret
insb
mov
mov
outsl
cmpsb
lods
sbb
pop
jg
cld
test
sbb
add
arpl
pop
sbb
mov
sub
or
add
popa
or
and
fbld
add
add
xchg
cli
mov
sub
popa
mov
pop
inc
mov
adc
push
outsl
pop
sbb
sub
out
mov
xchg
daa
xor
out
stc
jmp
and
xchg
cmp
cmpsl
mov
popf
push
fisubl
mov
cwtl
inc
jl
adcb
mov
in
xlat
daa
push
out
jno
leave
jo
mov
xor
hlt
lds
dec
mov
mov
adc
push
pop
outsb
mov
test
push
cmp
movsl
out
clc
lock
xor
mov
inc
adc
xchg
xchg
xchg
xchg
jnp
mov
inc
int3
or
jb
pop
addb
mov
cmp
ljmp
jmp
insl
imul
jecxz
jns
aas
lods
pop
pop
inc
jb
in
pop
xlat
push
aas
cmp
fneni(8087
cli
cmp
ficoms
js
cmp
cmp
jp
pop
push
mov
in
add
clc
loop
in
push
addr16
add
incb
aad
sub
cwtl
jmp
and
or
int3
lret
lcall
int3
inc
add
fisubs
add
push
popa
dec
cmp
enter
nop
push
mov
pusha
out
mov
and
dec
dec
je
repz
inc
jecxz
call
push
push
imul
mov
fwait
mov
pop
pop
arpl
mov
cwtl
popf
xchg
sbb
adc
adc
stos
mov
popa
mov
and
adc
mov
push
adc
clc
dec
clc
push
cli
push
ffree
rcrb
xlat
xchg
push
xchg
push
mov
aad
fsub
cld
mov
mov
xorl
or
xchg
int
xchg
mov
adc
cmp
je
in
int3
pop
popa
adc
fs
ficoml
sbbl
roll
lahf
jns
inc
mov
pop
shl
sbb
test
lds
mov
jmp
hlt
es
nop
jb
xchg
and
push
loopne
scas
inc
or
fdivrs
enter
or
outsl
rcrb
add
cmp
in
lea
fcoml
cmp
jo
xchg
xchg
lods
xchg
idivl
or
inc
aam
jg
shll
dec
jge
and
icebp
xlat
lods
es
dec
lds
ljmp
dec
cmpsb
xchg
stc
mov
lods
mov
inc
cmp
sbb
scas
iret
shr
fwait
cmpsb
int3
fistps
jnp
ja
sti
add
dec
inc
mov
xor
fwait
inc
inc
jmp
nop
lods
popa
loop
sub
xor
leave
enter
leave
popa
xchg
ss
add
inc
lods
divl
push
in
nop
dec
push
push
daa
icebp
mov
add
or
push
sbb
jb
lds
pop
sub
push
stc
push
call
loope
push
pop
xor
movsb
cs
mov
lret
test
test
or
or
mov
xor
sahf
xchg
lods
clc
ja
cmp
cld
les
pop
mov
mov
jle
push
rolb
lret
lds
jb
jne
rol
sarl
insb
in
cmpsb
fildl
xorl
mov
rol
sub
pop
loopne
scas
pop
push
add
pop
pop
jle
je
sarl
aad
shr
rorl
mov
xchg
in
push
pop
jge
jae
in
dec
or
cmpsl
mov
dec
repnz
out
in
rcl
push
leave
push
add
test
pop
bnd
sbb
xchg
cmp
fdivs
divb
pop
pop
cmpsl
orb
push
jg
lds
insl
add
pop
jg
lahf
into
inc
ljmp
sti
fisubs
jae
or
call
sahf
lock
xchg
cmp
and
ret
lods
push
into
jle
xor
sti
cld
push
ljmp
sbb
aad
xor
mov
xor
ret
mov
mov
pop
xor
xlat
gs
movsb
jge
prefetcht1
das
push
mov
jg
mov
cmp
and
push
sahf
fcomp
jb
jo
ss
push
push
push
or
lds
mov
mov
and
or
pop
jne
mov
xlat
inc
dec
lret
outsl
lea
xchg
lcall
fsubl
mov
adc
fdivr
push
or
lods
dec
jl
psadbw
xchg
xlat
cmc
add
and
bound
xchg
jl
sub
sbb
sub
insl
sub
andl
jg
inc
daa
icebp
xchg
sub
aaa
push
outsb
mov
popf
mov
push
les
lock
mulb
out
out
in
sub
xor
push
push
sub
fildl
mov
mov
xchg
cmpsb
jae
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
insb
in
adc
sub
arpl
lods
stc
or
loop
popf
or
fs
lock
jbe
sahf
adc
mov
jp
mov
mov
mov
mov
jmp
dec
mov
mov
cld
sub
xchg
jmp
lods
fld
cmp
fcoml
repnz
cs
aaa
loopne
and
mov
cmp
and
fsubp
xchg
mov
adc
cli
mov
ss
or
out
jae
xchg
xor
jno
mov
ja
iret
inc
push
push
pop
cld
into
and
cmpsb
popa
jnp
xchg
rcrb
cmpsl
mov
int3
cmp
add
mov
mov
and
cmp
ret
pushf
mov
sahf
stc
mov
mov
adc
push
in
mov
shll
adc
xchg
loop
lea
sbb
push
je
and
imul
scas
arpl
dec
test
in
and
data16
lahf
out
std
jmp
arpl
cmp
xchg
mov
out
insb
lret
or
stc
dec
jp
and
test
push
pop
or
or
insl
pop
adc
cmc
ja
jmp
push
nop
xlat
repz
jae
sahf
xchg
add
movsl
mov
adcb
pusha
lahf
test
cwtl
test
mov
shll
es
shrl
jg
fimuls
mov
dec
adc
rolb
cltd
mov
sahf
push
mov
or
and
lret
clc
imul
out
sub
ret
and
and
mov
adc
mov
popa
scas
mov
adc
push
push
stc
ljmp
je
es
adc
sbb
pop
dec
inc
out
cmpb
scas
enter
cwtl
mov
into
in
sti
adc
repz
jb
sub
sbb
hlt
ljmp
xor
sub
sbb
pop
pop
and
hlt
or
pusha
lea
mov
mov
cmp
push
popf
adc
mov
cli
mov
adc
int
or
mov
cwtl
aaa
pop
call
and
push
out
fistl
into
jnp
fstl
ljmp
fmul
and
mov
sarb
push
jb
dec
movsb
xchg
mov
hlt
mov
xchg
cmpsl
sar
rcl
xchg
imulb
ljmp
clc
mov
mov
popa
sbb
bound
repz
cmp
jp
ror
loope
clc
and
xchg
push
mov
stos
adc
add
mov
inc
xor
iret
js
xor
mov
imul
jns
xlat
pop
lahf
and
jnp
sub
add
lods
inc
movsl
stc
lcall
adc
xor
orl
jmp
xchg
xchg
stc
or
lcall
and
cmc
adc
sbb
cmp
xor
cmpsb
jl
mov
out
testl
fidivl
das
inc
mov
xchg
outsl
jl
or
imul
int3
call
mov
dec
mov
imul
mov
fstpt
and
pop
cmpsb
les
and
adc
pop
mov
inc
and
lahf
cmp
loop
int3
adc
mov
mov
xchg
andl
in
cmp
dec
and
or
bound
and
mov
add
mov
mov
lock
pop
cwtl
jo
jg
lds
dec
jns
push
add
inc
inc
mov
outsb
scas
push
shlb
inc
pop
mov
mov
loopne
cltd
adc
fidivs
add
push
call
push
lcall
repnz
ja
or
mov
mov
xlat
loopne
inc
push
sub
xchg
cmpsb
xchg
mov
cmc
jnp
dec
add
sti
mov
ficoml
sub
enter
inc
pushf
test
jle
cmp
or
cmc
lahf
in
mov
in
xchg
jge
les
and
or
fcoms
fdivs
push
test
or
std
outsb
and
and
enter
fistps
xor
pop
add
orl
lcall
ljmp
jae
push
cmc
sub
sbb
jl
aas
stos
adc
adc
std
cs
xor
out
jae
imul
pop
cmp
push
xchg
cmpsb
imul
pop
sbb
je
adc
jno
pop
mull
push
adc
dec
jg
sub
push
pop
sbb
and
jo
roll
push
test
das
fs
fldt
xchg
fdivrs
or
movsl
dec
mov
das
popf
cltd
cmp
lcall
outsl
dec
ret
pop
decb
pop
add
lea
adc
les
inc
jle
daa
jnp
cs
lcall
sub
inc
ja
enter
imul
outsl
insl
xlat
pop
push
xchg
xor
inc
sbb
cmc
loopne
js
pushf
jl
pushf
mov
and
xchg
imul
and
jae
insb
xor
pop
insb
inc
or
mov
xchg
adc
mov
fwait
mov
cli
mov
dec
in
gs
sub
adc
sbb
int3
push
sub
xchg
lock
push
xchg
push
dec
mov
jp
lahf
inc
jg
add
mov
ret
mov
mov
jns
das
or
jmp
cwtl
dec
cli
cmp
outsb
pop
add
gs
ljmp
outsb
xchg
adc
lret
or
push
dec
xchg
shl
push
or
fcmovnu
mov
lock
jae
mov
and
jb
dec
filds
cmp
dec
test
xchg
dec
movb
aad
test
sub
cmp
xor
fxch
dec
dec
push
test
inc
and
fisubrl
lahf
addr16
sbb
lea
dec
pop
mov
test
or
mov
cwtl
repz
mov
jge
pop
cmp
cmp
dec
nop
push
mov
out
add
sub
mov
inc
dec
stos
sub
dec
inc
mov
sub
shll
cwtl
adc
icebp
and
data16
xchg
dec
popf
ret
push
in
out
xor
pop
js
cmp
mov
jge
mov
ret
stc
push
dec
sbb
sbb
or
out
sbb
fdiv
shlb
hlt
pop
daa
mov
aam
repz
xor
add
sti
in
lret
adc
push
push
inc
addr16
dec
and
cmp
outsb
repnz
push
jb,pn
push
out
dec
repz
sbb
xchg
sub
popf
lea
insl
jp
mov
test
jbe
out
addr16
mov
xlat
xor
sub
add
repnz
push
shlb
mov
jne
mov
xor
stc
les
mov
setno
into
inc
xchg
or
jnp
sbb
repz
or
mov
je
test
or
jns
lods
out
test
pop
ret
lods
mov
fwait
xor
loopne
call
test
arpl
lock
pop
bound
imul
std
out
jecxz,pn
loop
pop
add
pop
adc
dec
fnstenv
inc
out
lea
adc
scas
sbb
mov
jle
je
inc
xchg
sbb
mov
xchg
les
imul
iret
adc
or
dec
adc
adc
pushf
xchg
push
xlat
loop
sub
fsubs
daa
push
mov
es
xlat
jle
aam
out
lock
mov
jo
add
adc
nop
xor
jl
pushf
cmp
scas
jl
pusha
sub
jmp
out
add
pop
cmp
in
mov
in
decb
test
movsl
testb
push
fnstenv
lock
pop
mov
xor
mov
jle
mov
mov
std
xor
out
mov
inc
mov
jmp
lahf
out
out
dec
mov
push
cmpsb
sub
pop
and
sahf
pop
mov
push
mov
enter
sub
or
or
mov
mov
shll
test
enter
xchg
adc
xchg
test
inc
lret
fs
nop
jge
push
aad
test
sarb
pop
pop
pushf
data16
rcr
push
adc
dec
push
inc
mov
in
test
test
xor
bound
loop
inc
and
push
ret
in
pop
or
cmp
pop
xor
cmpsl
xchg
test
mov
push
sub
jl
xor
jl
xchg
push
sbb
push
pop
call
loopne
adc
mov
int
jno
leave
sub
les
fs
mov
mov
or
xor
sahf
dec
jno
and
fisubs
push
mov
adc
cs
lods
cmp
and
and
lods
ret
aas
movsl
rolb
fiadds
icebp
inc
sbb
clc
add
test
xor
ror
in
mov
and
cmp
out
cmpl
lds
les
ja
or
bnd
adc
pop
test
mov
sub
dec
add
mov
add
and
xchg
push
imul
jl
and
xchg
or
nop
and
sub
sbb
xchg
icebp
popw
mov
lods
fwait
negl
in
add
lds
pop
lahf
out
out
xchg
mov
mov
mov
cmc
test
pop
jl
mov
adc
outsb
pop
loope
sar
sbb
pusha
add
mov
mov
shlb
call
sbb
je
idivb
mov
pusha
push
jno
cmp
xor
pop
cmp
test
xchg
or
call
sbb
js
push
out
loope
add
mov
lcall
inc
cmp
adc
leave
in
jae
rcr
and
push
popf
movsl
lret
xor
jecxz
push
mov
push
mov
cltd
negb
repz
xchg
fsubrl
mov
ret
push
loopne
cli
mov
std
orl
sbb
inc
cmp
push
gs
sarl
inc
lods
fildl
mov
into
jo
loop
aam
jb
ret
and
into
sub
das
imul
add
icebp
ret
pop
sub
mov
jo
cwtl
push
mov
mov
test
inc
push
push
add
inc
and
bound
mov
dec
mov
mov
lods
call
or
adc
cwtl
js
imul
jle
mov
mov
fildll
or
mov
das
das
push
mov
out
sahf
loope
cmp
in
lods
xor
lret
and
test
lret
jecxz
jae
push
lcall
sub
inc
lock
subb
and
jbe
pop
subb
pop
decb
shrb
popa
sbb
pop
fisttps
jle
mov
in
enter
pop
pop
mov
fsubrl
or
leave
aad
inc
mov
fdivp
rclb
push
mov
xchg
xor
jge,pt
sti
adc
repz
cmpsl
cmc
imul
cwtl
cmp
xchg
fcompl
in
sub
xchg
cld
outsb
sbb
negl
movsl
test
pop
dec
aam
sarl
repnz
jge
loop
xchg
fwait
cmp
push
push
push
xchg
pusha
mov
ss
sub
jne
imulb
pop
mov
sarl
xlat
adc
mov
sub
ss
jp
push
mov
xchg
daa
mov
out
lcall
inc
mov
jo
xor
push
and
enter
mov
sub
cmp
cli
call
dec
inc
mov
xor
shr
push
push
jo
lahf
cmp
mov
push
inc
enterw
std
loopne
push
pop
mov
pop
or
jae
sub
jb
andl
cmpsl
xchg
mov
sbb
xorl
adc
and
pop
lds
in
dec
adc
jnp
inc
sbb
negb
xchg
jle
scas
mov
movsb
shlb
lds
aad
rcrl
mov
call
add
xchg
pop
inc
out
lods
dec
int3
out
adc
cmp
jp
jo
jbe
cwtl
ss
out
sub
cs
inc
sahf
data16
inc
cld
add
mov
scas
mov
cmc
and
push
pop
push
mov
mov
scas
jmp
stos
mov
cli
imul
nop
lcall
xor
inc
stos
pop
push
shll
jb
fstps
jno
jns
push
in
mov
xor
sti
imul
out
inc
mov
cmp
push
push
push
js
pop
jmp
sub
in
insb
pushf
cmp
xchg
rolb
and
adc
jne
xlat
lret
lods
cmp
out
stc
xor
loop
rcrl
mov
sahf
scas
push
adc
add
sbb
pusha
rcl
adc
xor
outsb
mov
dec
notl
mov
inc
mov
rcrb
cmpsb
sbb
jl
arpl
cltd
mov
cmp
dec
lahf
cwtl
enter
dec
sti
imul
mov
not
and
nop
int
test
divb
mov
add
fsubrl
sbb
mov
ljmp
test
lret
push
and
inc
and
push
imul
jl
imul
jp
jl
leave
mov
jns
mov
and
inc
jecxz
fmul
test
ret
in
cmovo
push
inc
mov
test
mov
push
cmp
lods
int
aaa
sbb
clts
jmp
mov
testb
adc
inc
das
mov
push
dec
or
jg
pusha
mulb
inc
mov
call
cmp
fld
push
adc
int
inc
mov
add
aad
pop
sub
fistps
lds
dec
adc
xor
sbb
xchg
lock
lods
insb
and
pop
testl
xchg
aad
js
ljmp
xchg
test
ficoms
sub
push
mov
pop
inc
jb
dec
jb
cmp
icebp
in
insl
cmp
mov
daa
xchg
cmpsl
pop
mov
pop
inc
int3
mov
dec
or
fwait
popa
mov
mov
jbe
mov
ret
fisubs
test
adc
stos
mov
jnp
lret
adc
mov
movsb
dec
insb
addr16
mov
ret
subl
into
leave
push
inc
xchg
add
js
ret
push
into
imul
pop
test
jecxz
mov
inc
inc
lret
mov
cmp
jnp
push
aas
sub
mov
xchg
out
int3
ss
jp
out
mov
jno
lds
add
mov
aas
sub
and
mov
loope
out
pushf
loopne
cmp
mov
dec
and
movsb
and
gs
icebp
mov
mov
lahf
mov
dec
mov
aad
cli
and
jecxz
outsl
xchg
fwait
sbb
popa
das
lods
std
jle
notl
ljmp
mov
pop
mov
pop
or
sub
fdivr
popf
or
mov
nop
push
inc
dec
stc
cmp
out
adc
jb
bound
cmp
jnp
dec
mov
int3
cmp
mov
aam
aad
inc
scas
push
repz
or
je
push
inc
fdivl
out
add
inc
add
fcomps
adc
data16
sub
xchg
or
push
shlb
jmp
lods
loopne
test
movsl
imul
pop
cli
cmc
negl
cld
loop
xor
dec
or
ret
fisubrs
fdiv
xchg
add
jp
int
mov
xor
stos
jb
stos
hlt
std
lahf
xchg
in
loop
arpl
stc
cmc
xchg
xor
push
or
loop
inc
add
cli
and
jmp
lds
jns
nopl
outsl
inc
rclb
inc
fmull
adc
pop
mov
pop
or
test
push
lds
dec
imul
xor
repz
xchg
shrb
fisubl
xor
inc
out
push
pop
push
push
addr16
cwtl
pop
dec
inc
clc
cmp
xchg
std
inc
imul
sbb
cltd
inc
lods
push
mov
divb
shll
cmpsl
outsl
lods
and
pop
mov
mov
test
lods
push
jmp
mov
call
push
xor
testb
dec
jb
jno
cmp
leave
mov
inc
add
adc
lret
push
mov
inc
cmp
repz
adcl
mov
stc
dec
jns
stos
mov
stos
dec
jae
mov
outsb
in
inc
cmp
pushf
pop
dec
loopne
jle
cmp
dec
jecxz
sub
lods
ret
aas
adc
xchg
shrl
xchg
mov
andl
sub
lds
mov
jl
das
pop
in
arpl
mov
aas
mov
lods
xchg
xor
dec
push
jle
adc
orl
cmp
enter
add
addr16
gs
pop
insl
stc
adc
jp
popa
xchg
inc
mov
out
sbb
xchg
xor
int3
loope
jo
pop
xchg
fcomip
enter
cmc
push
add
iret
out
in
mov
jp
scas
dec
jo
test
xor
fsubl
lret
clc
xchg
mov
cmpsl
popa
cs
hlt
push
je
int
mov
sbb
mov
and
push
inc
testl
fists
lods
leave
pop
push
sub
fbld
aaa
pop
adc
mov
and
push
pop
and
jbe
xlat
add
lds
cmp
into
imul
lcall
loope
push
repz
jmp
aad
or
rclb
mov
push
fwait
pop
fs
fcmove
in
cli
adc
cmp
inc
push
sbb
mov
mov
push
rcr
adc
fisttps
push
adc
imul
cmpsb
push
dec
lcall
mov
bound
sbb
xchg
and
inc
xorb
xlat
push
mov
loopne
in
or
mov
aam
leave
mov
loopne
or
sbb
adc
in
mov
add
lret
pop
cmpsb
fadds
aas
filds
cmp
or
xlat
add
rcrl
xchg
lcall
repnz
imul
pop
ss
scas
or
loop
xchg
pushf
mov
push
subl
movd
lods
rolb
jo
and
mov
pop
dec
je
push
or
pop
jge
jbe
sbb
push
shll
std
inc
or
adc
andl
or
sub
hlt
and
cwtl
cmp
ret
dec
add
lret
repz
repnz
lcall
fwait
mov
adc
pop
mov
jle
pop
icebp
rcrl
ficompl
pop
andl
fimull
mov
lods
fstl
das
jae
dec
add
jno
sbb
test
js
inc
outsl
lcall
cmp
loope
popf
or
rcl
shl
out
sbb
lea
aaa
mov
lahf
and
ficompl
enter
dec
cs
rcrb
addr16
rcr
mov
sub
and
pop
xor
dec
push
mov
iret
cltd
xchg
movb
sub
and
std
sbb
hlt
sub
popa
xchg
ss
xchg
scas
pushf
lods
lock
jp
sarb
int3
nop
nop
add
test
rep
mov
xchg
cmp
jnp
mov
sbb
jle
ficoms
into
out
cmp
test
shl
push
mov
jmp
bswap
jo
je
adc
jle
push
add
lret
mov
sbb
daa
sbbl
insl
dec
call
adc
xchg
orb
and
mov
cmp
fsubs
ds
ljmp
fbld
jae
scas
mov
inc
mov
mov
push
ljmp
jp
adc
inc
out
insb
cld
test
push
jne
push
loop
and
out
pop
lods
outsb
in
enter
popa
jbe
mov
push
cmpsl
aas
stos
aaa
add
mov
aad
adc
sti
out
adc
loope
or
in
cmp
cmp
sbb
arpl
aas
cmc
sub
je
mov
pop
mov
fidivl
dec
or
sbb
inc
pop
and
fldt
cltd
out
pop
xchg
or
loop
dec
jae
andb
mov
mov
or
push
sbb
out
enter
stc
or
inc
loope
into
mov
inc
mov
scas
mov
insl
ficompl
push
test
add
cwtl
fidivrs
mov
in
in
test
scas
jp
mov
jl
lret
loop
test
mov
outsl
cltd
call
or
add
rcll
lret
outsb
sbb
mov
dec
mov
fisubrl
xchg
outsl
imul
jmp
cmp
or
pop
test
mov
xor
lret
leave
add
ja
imul
cmpsb
mov
sbb
ficomps
push
lods
dec
les
push
sti
mov
mov
dec
mov
sub
enter
xchg
sbb
pop
jnp
pushf
lahf
cmp
test
sbb
push
cmp
mov
fsubrs
pop
call
push
xchg
sbbb
xchg
out
jae
adc
dec
test
push
fisttpll
pusha
mov
or
mov
push
daa
outsb
outsl
movlps
dec
mov
dec
inc
insl
pop
outsl
sub
data16
stc
in
out
and
js
push
fwait
sub
cmp
sub
push
loopne
loopne
mov
std
inc
lret
outsb
pop
shll
into
mov
cmp
xchg
mov
mov
cmp
mov
out
jo
push
scas
push
cmp
cmp
cmc
adc
mov
mov
mov
mov
xor
xchg
in
xor
mov
fidivl
in
and
inc
adc
pop
push
mov
in
arpl
leave
insb
mov
add
sbb
shll
mov
fcomip
sub
push
mov
hlt
mov
gs
sarb
jmp
repnz
adcl
insl
sbb
sbb
jl
mov
popa
in
outsb
jecxz
scas
and
inc
aam
shll
out
sbb
inc
fstl
sarb
incl
out
xchg
mov
in
aas
mov
sbb
push
mov
xchg
imul
fsub
into
cli
xchg
adc
sbb
daa
lock
sbbb
sarb
cmpsl
jmp
jne
push
dec
xor
pop
mov
lret
mov
xor
leave
iret
jnp
pop
sbb
cltd
sbb
movsl
pop
scas
pop
push
arpl
js
xchg
dec
mov
mov
sti
pop
das
push
div
decl
sbb
sarl
and
mov
sar
imul
nop
add
sbb
addr16
daa
dec
fstpl
or
jl
scas
xor
sbb
xor
in
or
mov
xor
outsl
cmpl
pushf
xchg
push
mov
cmpsl
push
adc
sbb
movsl
mov
xchg
outsl
rolb
loope
add
fucomip
je
mov
sbb
es
nop
ffree
rcrb
xor
sbb
push
pop
add
mov
mov
mov
or
fwait
inc
add
dec
inc
mov
repz
inc
xor
pop
pop
loopne
mov
inc
ss
inc
push
jns
cmp
sahf
dec
push
dec
pop
idivl
cmp
adc
adc
test
jnp
xorl
fs
repz
les
adcb
cmpsl
push
imul
outsl
add
mov
jo
dec
cltd
push
fstps
mov
cwtl
loopne
inc
pop
add
fistpl
mov
sub
cltd
push
inc
clc
fwait
gs
andl
push
jl
or
jmp
adc
push
cmp
push
aaa
xor
push
mov
push
pop
aam
call
push
iret
xchg
imul
les
cmpsl
pop
cld
mov
or
popa
xchg
cmp
cmpsl
pop
sub
sahf
mov
mov
ffree
bound
pop
inc
fadd
cmp
inc
xchg
int3
adc
mov
lds
mov
xor
ret
sbb
dec
add
mov
mov
pop
data16
daa
scas
mov
ds
mov
scas
mov
das
lds
aas
mov
lds
jg
jge
in
lahf
jo
sub
pcmpgtw
mov
sbb
imul
out
call
fs
push
adcl
inc
nop
test
ja
jno
insb
inc
or
push
out
push
add
sti
push
or
movsb
movb
push
dec
and
enter
jecxz
mov
icebp
add
cmpsl
insl
sbb
sbb
popa
xor
sub
test
repz
ret
sti
lods
xchg
int
test
lods
jnp
pop
ret
mov
xchg
and
sbb
pop
test
mov
adc
out
ss
jns
cmp
jp
iret
jo
leave
ss
sar
lcall
push
inc
mov
jmp
jle
xchg
sti
sub
sub
outsl
bound
ljmp
cmp
adc
jo
pop
shlb
xor
push
je
fidivs
cmpsl
aas
rolb
outsl
jle
mov
inc
pop
scas
fcos
mov
sbb
pop
lods
dec
aas
sub
jae
bound
push
push
mov
push
loopne
or
es
and
jecxz
lods
cmp
xchg
stc
sub
insl
in
ds
mov
mov
fs
ds
test
xor
daa
sub
cmp
lcall
fildl
and
nop
les
movsb
popf
insl
test
dec
jns
data16
and
pop
jbe
add
adc
pop
scas
loope
or
mov
cmp
and
and
lcall
not
aaa
loope
ja
daa
mov
pop
add
mov
das
or
xchg
dec
cli
cmp
mov
mov
jg
sbb
adc
mov
xor
loope
insl
subl
mov
sbb
ds
fsts
mov
mov
and
xchg
mov
dec
xchg
call
dec
ds
movups
push
sbb
sbb
push
daa
js
push
xor
fwait
addr16
jnp
inc
lea
fbld
lret
mov
adc
xchg
repz
mov
add
sub
fwait
scas
lock
test
xor
adc
pop
gs
lods
int
push
lods
xlat
pop
or
ja
inc
xchg
ror
mov
addr16
enter
cmpsl
fsubrl
inc
xchg
add
fadd
xor
repz
ja
sbb
mov
hlt
and
xlat
leave
nop
xchg
push
inc
rorb
pop
or
dec
mov
or
add
lret
jne
bound
and
out
adc
dec
repnz
js
jmp
push
pop
xor
cs
in
notrack
rcrl
imul
pop
and
inc
or
aas
aam
outsb
clc
shlb
fdivrl
inc
pusha
repnz
xchg
adc
fidivl
test
xor
out
es
mov
mov
dec
rolb
mov
js
cmp
leave
xchg
mov
jb
jo
mov
test
cmc
sti
mov
and
loope
sub
jge
dec
xor
xor
push
std
cmp
jb
xlat
popa
sbb
xchg
pop
dec
pop
mov
cmp
adc
sarl
pusha
aas
jns
lods
push
popa
dec
mov
mov
shll
mov
ljmp
mov
push
mov
ja
bound
fisubl
mov
jle
mov
addr16
push
mov
inc
sub
js
sub
mov
jae
imull
pop
cmp
aas
add
xchg
mov
inc
push
mov
mov
jns
or
jecxz
dec
rorb
pushf
mov
stc
pop
xchg
aad
jne
fcmovnbe
sbb
movsl
jge
mov
loop
jns
pop
jae,pn
lret
fidivrl
adc
hlt
push
fsubrl
data16
cvtps2pi
sub
xchg
push
scas
inc
ror
mov
xor
push
mov
jbe
or
into
adc
push
outsl
lock
popf
mov
fxch
inc
jnp
xor
lcall
xchg
mov
sbb
or
mov
mov
pop
cs
xchg
sahf
jnp
inc
lret
je
cmp
repnz
sub
xor
or
bound
cmp
aaa
mov
cmp
add
sub
es
sbb
pop
mov
std
adc
adc
sbb
adc
and
mov
mov
mov
adc
loop
enter
jecxz
in
in
sbb
xlat
and
test
dec
movsb
stc
outsb
repnz
pushf
in
or
into
icebp
ss
ret
cmc
adcb
adc
inc
inc
and
js
jns
sbb
pop
rcl
push
fcmove
push
jns
cmpl
es
xor
xlat
mov
fs
fmuls
dec
loopne
test
sub
fcmovnb
mov
jnp,pn
or
shlb
jl
lahf
mov
inc
xor
outsl
loopne
push
lds
mov
je
clc
push
dec
and
bound
pop
cmpsl
xchg
fs
neg
push
and
subb
clc
mov
loopne
xor
mul
pushf
ljmp
test
cld
sbb
sbb
fmull
movsl
pushf
push
out
shl
jne
shrb
sbb
sbb
aad
int3
push
mov
in
inc
or
cmp
sti
dec
add
fistpl
gs
fwait
or
cmovle
push
adc
mov
pop
into
ja
mov
pop
nop
and
inc
stos
arpl
mov
mov
adc
into
sbb
loopew
dec
inc
cmpsb
aas
and
inc
jnp
xchg
test
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
fcmovnu
stos
loopne
xor
inc
pop
jl
lock
in
sub
add
fldl
sti
rcrl
xor
lock
ret
clc
xchg
shll
loop
pop
addl
cmp
pop
or
out
jnp
outsb
mov
or
arpl
xchg
stos
mov
jp
xchg
shlb
aaa
insl
shrl
xchg
pop
and
mov
mov
pusha
pop
add
push
sbb
lds
popa
pop
mov
inc
sbb
add
test
ja
mov
or
push
rcrl
mov
ss
jne
sbb
cmpsb
nop
jae
mov
or
pop
add
imul
sbb
push
cmpl
cwtl
push
outsb
test
lcall
and
test
aad
sahf
push
insl
outsb
shrl
or
mov
aaa
dec
sub
int
insb
mov
mov
push
icebp
push
jle
es
shll
mov
mov
jecxz
out
gs
stos
sub
mov
imul
mov
test
mov
jno
loopne
inc
mov
push
xchg
inc
mov
push
xchg
and
das
sti
rcrl
fmul
mov
push
sbb
adc
inc
ret
adc
sub
fimull
aaa
xor
addr16
inc
stc
aam
or
and
push
sarb
btc
in
mov
repz
jae
jg
mov
push
push
mov
and
pop
jge
pushf
mov
add
es
fistpll
cmp
mov
inc
pop
bound
stos
inc
ds
call
lods
fsubrs
mov
ljmp
add
loop
inc
or
outsl
add
xchg
cmc
mov
cmp
sbb
push
xor
inc
ljmp
adc
loope
movsb
lods
movsl
dec
icebp
adc
mov
push
dec
jns
ljmpw
mov
mov
add
xchg
xcrypt-ecb
cmpsl
dec
xor
scas
xor
cli
scas
pop
jl
insb
cltd
pop
cmpsl
sahf
and
dec
repz
mov
xchg
addl
mov
push
xor
sub
ficoms
jmp
lret
cmp
mov
xchg
js
add
pop
and
fcomp
inc
aam
xchg
dec
and
out
mov
sbb
fsubrp
mov
int3
pop
stc
mov
loope
pushl
xchg
dec
sub
js
cmp
icebp
lcall
push
call
adc
pop
mov
pop
mov
roll
adc
orl
icebp
outsb
addr16
es
rclb
mov
std
push
dec
mov
jge
mov
add
cltd
and
shll
mov
icebp
dec
jae
mov
mov
mov
mov
pop
pop
lcall
imul
mov
xchg
iret
sahf
sbb
push
jmp
dec
lahf
gs
loop,pt
and
inc
mov
outsb
enter
call
dec
pop
mov
or
sub
jbe
pusha
jno
mov
add
add
mov
sub
lcall
jle
mov
negl
aas
imul
sub
test
xor
mov
mov
hlt
stos
jae
call
mov
shl
mov
fldenv
sbbl
push
mov
popa
cmp
mov
rolb
in
inc
call
bound
xor
xor
mov
pop
jle
mov
les
xorl
push
mov
dec
sbb
fs
push
sbb
pop
pop
daa
cmp
orb
jg
adc
inc
cmp
sbb
sahf
loope
loope
rorb
fcompl
sub
das
aad
dec
jnp
jle
scas
sidtl
and
addl
xor
sbb
dec
mov
push
sbbl
add
sbb
out
push
xchg
push
inc
cmp
inc
pop
mov
jg
popa
pop
or
dec
inc
inc
ss
xor
loope
jb
dec
pop
testl
inc
jle
lcall
xchg
inc
fbld
xor
fwait
or
or
and
or
and
repz
push
vmovd
jg
mov
cmp
lea
inc
adc
jno
mov
outsl
shrl
test
cld
pop
jns
xor
pop
cltd
jbe
mov
sbb
inc
in
test
mov
ss
jno
mov
cmp
pop
adc
mov
jg
scas
pusha
fsts
sbb
jns
shlb
push
push
sub
movsl
sub
fbstp
sbb
adc
dec
cli
add
mov
cmpb
push
in
lea
cltd
xlat
push
sti
pop
fdivl
testl
movsb
xchg
push
mov
outsb
outsl
or
nop
ds
mov
cli
or
inc
loopne
push
xlat
adc
pop
cs
mov
test
push
pop
mov
sub
pop
loope
push
inc
movsl
cltd
mov
in
in
nop
ficoms
movsl
mov
ret
pop
push
fs
subb
jp
jge
iret
rcr
jns
jle
add
int3
adc
jl
gs
mov
pop
inc
push
xchg
js
sub
scas
insb
data16
cvtps2pi
jbe
sub
sub
jp
iret
cmp
mov
push
add
cmp
ds
and
repz
jb
jno
jmp
xchg
mov
mov
mov
mov
mov
imull
jp
dec
movsl
and
mov
outsl
xchg
jle
mov
test
fs
sub
xlat
sbb
mov
insb
test
mov
jg
es
std
push
adc
cmp
lods
pop
stos
mov
inc
push
xchg
jmp
jnp
add
mov
pop
mov
jns
shll
dec
xchg
jo
mov
sbb
movsb
aam
push
push
rolb
insb
inc
sub
mov
cli
les
adc
loope
lods
push
ret
sbb
jmp
mov
es
add
scas
push
lds
int3
or
ja
push
xor
subl
jg
outsb
insb
xchg
mov
sbb
in
jg
mov
mov
lret
cmpsb
and
sbb
jno
je
cld
inc
mov
das
jp
neg
pop
ljmp
addr16
lcall
adc
call
jp
imul
pop
xor
test
das
sbb
cli
int
push
cmpsl
push
jl
imul
and
out
or
push
push
jb
jae
or
pushf
mov
stos
inc
arpl
pop
inc
sub
test
lock
sti
in
arpl
insl
xchg
push
lret
and
adc
enter
in
inc
int3
mov
inc
sub
dec
cmc
pop
push
pop
inc
push
imul
push
xor
in
jae
and
or
cmp
sub
or
pop
hlt
inc
mov
dec
push
pop
mov
out
aad
jmp
popa
mov
addl
dec
and
mov
fnstsw
rcrl
jb
mov
or
or
and
cli
pusha
addr16
sbb
jl
daa
mov
xchg
mov
gs
in
cmc
aad
dec
and
push
ret
fsubrl
mov
and
je
in
test
and
add
mov
movl
inc
push
mov
cltd
shr
sub
movsb
push
mov
into
gs
push
xchg
sub
cmpsl
in
aaa
add
aas
xchg
pop
scas
testl
jne
sub
sub
dec
ja
loopne
sbb
addr16
mov
stc
xchg
frstor
cmp
xchg
daa
mov
jo
jne
pushf
cmp
imul
mov
xor
pushf
push
or
push
push
repnz
jno
xchg
in
mov
push
outsl
cmpsb
out
das
cmpsl
andl
pop
js
daa
pop
lds
jno
mov
adc
and
dec
cwtl
cmp
es
aas
xchg
nop
and
push
mov
inc
inc
pusha
jbe
mov
loopne
lret
sbb
aad
mov
pop
add
xrelease
mov
sub
mov
xor
shll
into
and
mov
mov
xor
and
mov
or
scas
or
push
setl
push
ficoml
jmp
jmp
movsb
mov
xor
jle
pop
dec
clc
mov
cmpsb
aas
scas
pop
sbb
pop
sbb
lcall
test
jge
dec
jno
out
addr16
mov
push
push
mov
inc
sub
int3
sbb
mov
gs
dec
loop
inc
rcr
ret
jbe
mov
daa
dec
ja
mov
imul
in
jns
stos
repz
dec
pop
insl
cmp
pop
lods
fisubrl
jmp
dec
mov
ds
das
cli
fbstp
jmp
dec
mov
outsb
shlb
inc
leave
cmp
sahf
pop
cmp
testb
xor
xor
pop
cmp
inc
dec
adc
xchg
in
jb
sbb
push
popa
pop
mov
add
jp
test
lock
es
popf
cmpsl
adc
add
int3
sbb
lock
and
mov
add
stos
les
lods
arpl
into
and
mov
xor
mov
dec
out
push
enter
outsl
pop
ret
jb
lods
jbe
sbb
mov
sahf
xchg
jle
add
lret
addr16
int
daa
movsl
xchg
jl
or
sbb
push
hlt
scas
cmp
pop
push
rcll
mov
fadds
les
xlat
scas
jno
vmaskmovdqu
fincstp
push
ficomps
push
fucom
jmp
xor
xchg
mov
sbb
xchg
cld
xor
mov
sbb
in
dec
pop
mov
sub
jne
pop
mov
inc
lods
sbb
lret
cmp
xlat
xor
adc
mov
jnp
cmp
add
int3
fndisi(8087
and
iret
fsubs
in
aas
dec
pop
inc
je
adc
out
dec
daa
insl
test
loop
bswap
add
cli
push
mov
je
test
into
loope
mov
jns
scas
int
xor
mov
adcl
testb
inc
xchg
adc
or
jle
fcmovnu
lcall
sbb
mov
outsl
fsub
inc
stc
je
je
aas
adc
fmull
lcall
mov
mov
insb
jmp
pusha
push
or
lods
and
call
pop
mov
scas
fnop
leave
rorb
push
adc
cmpsb
mov
cmp
mov
jo
adc
jmp
in
jo
fcoms
in
mov
cmp
mov
add
and
sbb
xlat
jae
sub
test
jl
inc
dec
js
push
inc
in
loop
xchg
mov
movsl
jns
push
fisttps
mov
or
rcl
fs
loop
cmp
scas
jl
int3
inc
outsb
mov
lods
test
push
pop
jge
mov
insb
out
dec
insb
movsb
mov
inc
test
iret
dec
enter
and
cld
stos
lea
jae
and
rolb
inc
pop
les
push
add
je
inc
dec
pop
ljmp
pop
jnp
sbb
pop
pmaddwd
dec
in
iret
lods
cmp
jmp
sbb
adc
push
jne
mov
bts
push
shl
add
cmpsl
pop
mov
mov
pop
lock
fldcw
repz
mov
das
ret
pop
and
fs
inc
cli
jl
shrb
divb
mov
clc
push
das
rcr
cmp
in
sar
jg
jbe
push
and
mov
mov
jecxz
aaa
nop
in
cltd
mov
lret
insl
add
adc
in
imul
pop
or
je
fsubs
mov
and
sub
cmc
js
insb
je
adc
ds
mov
cmp
xor
cmpsl
mov
pop
push
mov
ror
lea
push
push
push
mov
ret
enter
aas
push
add
insl
out
jecxz
cmp
mov
jmp
leave
push
xor
lds
ljmp
pop
scas
lds
add
out
xchg
sbb
lds
mov
pop
add
or
add
lea
cmpps
lods
mov
ja
out
cli
push
xchg
out
xor
mov
in
jmp
pop
faddl
popa
fsubl
pop
aam
xor
outsl
stc
in
ficomps
cmp
int3
pusha
cltd
popf
xchg
movsb
or
sub
mov
mov
pop
fnsetpm(287
pop
fistps
sbb
int
stos
in
test
and
psubq
mov
push
stos
ret
cmp
lahf
testb
je
pop
leave
pop
dec
js
cwtl
mov
mov
jp
and
jge
dec
jl
mov
fldcw
dec
cli
adc
std
stos
mov
test
xor
inc
mov
jl
les
test
mov
lods
rcll
mov
fimuls
mov
sar
aaa
ss
fnstsw
mov
ret
sbb
inc
mov
cmp
ja
cmpsl
hlt
lods
inc
or
pop
jp
pop
mov
sub
add
xor
lea
mov
gs
adc
jg
lods
mov
xor
aas
jnp
xchg
push
dec
fnstsw
cltd
sub
inc
sbb
notl
pop
jl,pt
aam
js
imul
cmpsl
dec
add
cmp
sbb
or
xchg
cmp
xchg
scas
dec
mov
push
sub
sbb
mov
pop
incl
out
adc
cmpsl
pop
push
inc
out
jle
stos
mov
sub
sub
repnz
bound
sub
jns
ret
fimuls
dec
jb
test
fdivrs
mov
xorb
nop
cmp
ja
sbb
fcmovu
insb
mov
movsl
cmp
in
adc
dec
mov
je
adc
jmp
jne
pushl
lret
add
fstl
xlat
stos
mov
ss
insb
pop
fs
movsb
mov
fwait
pusha
arpl
fcmovne
add
mov
push
push
cmp
js
nop
adc
mov
push
mov
lds
pop
scas
out
adcb
cmpsl
mov
pop
push
mov
ljmp
push
fdivrs
lret
lahf
push
mov
mov
mov
and
negb
adc
cmp
and
mov
out
add
nop
and
nop
mov
loope
clc
mov
stc
inc
cwtl
std
pop
shlb
xchg
sub
and
dec
dec
push
mov
jae
xchg
push
push
add
adc
jmp
jbe
push
leave
aam
sub
hlt
xchg
lock
out
pop
and
stos
mov
lods
or
orl
cmp
mov
cmp
rolb
aam
addb
push
outsb
pop
cmp
adc
sub
sub
jbe
xchg
into
fildll
sub
pop
notb
adc
adcb
pop
js
es
arpl
out
pushf
dec
jbe
push
data16
movl
lds
add
pop
xchg
aas
jmp
lods
cmp
int3
push
lahf
xchg
inc
adc
xchg
lods
outsl
fnsave
out
call
imul
push
bound
dec
repz
add
loop
inc
or
in
insb
aaa
mov
cwtl
sub
and
xor
jbe
add
sbb
js
test
loope,pn
mov
fisubrl
adc
mov
setno
lret
xchg
jle
or
pop
cwtl
and
mov
push
jae
and
mov
sub
mov
mov
and
sahf
mov
imul
xor
push
push
jae,pt
daa
js
sbb
inc
daa
jmp
es
xor
add
dec
lods
push
or
dec
ljmp
xchg
sbb
movb
push
pop
adc
adc
mov
push
jae
cmc
fwait
sbb
add
jo
cli
xchg
lds
movsl
jle
pop
shlb
stos
jg
xlat
xorl
out
pop
stos
or
push
cli
pusha
cld
adc
test
loopne
dec
mov
and
fnop
jo
ds
imul
aad
dec
lods
clc
or
pop
add
cmp
sub
sub
stos
push
scas
jge
cmpsb
xchg
xor
das
xchg
aas
call
mov
sbb
mov
pop
jmp
sbb
add
xchg
movsb
dec
mov
shr
cmp
rol
or
inc
pusha
insl
cmp
es
stos
test
lret
adc
mov
push
daa
adc
test
mov
jle
ret
xadd
ss
inc
clc
mov
jecxz
jmp
and
lret
jns
sbb
cmp
ja
std
fincstp
dec
out
xchg
int3
mov
lcall
dec
je
dec
pop
das
pop
mov
idivb
jno
mov
xor
xor
ljmp
adc
dec
adc
push
sub
cmp
stc
rcll
ficompl
outsb
int3
mov
lock
addr16
fsubrl
inc
in
or
neg
frstor
jns
arpl
mov
pop
cltd
jmp
sub
test
incl
in
mov
xor
pushf
mov
fnstenv
popf
mov
inc
out
add
mov
cld
hlt
cli
ljmp
scas
xor
push
testb
lahf
lds
call
dec
jbe
bound
pop
add
out
mov
mov
add
enter
int3
imul
jbe
cmc
aaa
out
jp
repz
jno
or
jne
fsubrp
test
ljmp
outsb
cmp
pop
lret
push
cmp
mov
add
insl
mov
incb
iret
pop
shlb
scas
xchg
mov
or
add
and
cmp
xor
or
cmpsb
loope
add
scas
sbb
cwtl
cmp
jl
popf
cli
push
das
and
loope
imul
popf
fdivs
in
add
and
imull
jnp
mov
sub
adc
pop
fsts
push
fsubr
push
mov
lods
cltd
mov
fdivrs
lea
inc
or
dec
stc
mov
outsb
in
pop
pop
mov
mov
icebp
xchg
add
addr16
push
nop
mov
mov
xchg
or
cwtl
mov
add
add
aaa
jnp
push
pop
fidivrl
ficoms
mov
push
js
sbb
sub
out
jl
cmp
push
roll
xchg
adc
push
push
xor
and
dec
dec
sti
int3
pusha
pop
test
pop
addr16
rcll
and
add
cmp
insb
mov
cmpsl
stos
push
mov
lds
jo
pop
add
ficoml
repnz
push
adc
and
jp
outsb
jb
jnp
add
notb
cmp
ljmp
fdivr
fdivrl
push
dec
pop
lods
jbe
add
in
dec
adc
add
sbb
push
lods
xchg
pop
shlb
das
clc
push
mov
sbb
sarb
sub
pop
psllq
scas
dec
sbb
or
xchg
push
ljmp
cmpsl
arpl
pop
aad
nop
pop
mov
test
rsm
loope
mov
in
mov
or
aas
mov
mov
and
mov
out
mov
push
xchg
std
leave
add
xor
inc
loopne
gs
inc
xor
test
xlat
or
lods
and
movsl
mov
cmp
ss
lock
sub
and
in
mov
cmpsl
into
pop
lock
add
mov
iret
mov
lahf
jle
jne
cmp
jnp
outsb
mov
js
arpl
sahf
xor
and
pop
inc
lret
dec
movsb
adc
mov
fs
pop
arpl
cmpsl
push
mov
cmp
inc
mov
jns
lods
std
xor
xchg
shlb
int
stc
lret
dec
mov
aam
push
fstpt
dec
stos
dec
cltd
xorb
fsubrl
addr16
es
mov
out
mov
jbe
in
clc
xchg
in
cmp
ret
xchg
jmp
ret
ret
fsubrl
dec
adc
push
pop
pop
add
cmpsl
jb
jp
test
xor
jg
inc
enter
ljmp
pusha
cmp
lock
xor
int
insb
jle
jmp
pop
enter
jp
dec
fldt
aam
lahf
mov
hlt
cmp
arpl
nop
add
cmp
negb
out
cmpsb
dec
jge
xchg
add
xor
xchg
xor
mov
idiv
xlat
mov
or
and
inc
shll
push
or
movsl
lcall
jecxz
enter
lds
call
mov
sbb
push
xor
int3
xchg
out
int
fisttps
adc
mov
inc
jg
or
push
mov
stos
jmp
int
bound
insb
jmp
aas
or
loopne
adc
mov
leave
ret
sbb
mov
mov
fcmovb
cmp
andb
in
or
jne
out
test
cmpsb
iret
test
sar
mov
or
and
mov
outsl
xor
loopne
push
dec
mov
sti
and
lods
stos
and
cmp
ljmp
loope
xor
fstps
ss
sti
fsubrs
test
cmp
lods
fwait
repz
push
mov
adc
sub
data16
inc
push
pop
rcrl
and
call
mov
mov
pop
enter
push
inc
int3
sbb
jns
dec
imul
sbb
jp
inc
mov
adc
sub
rorl
sbb
dec
rorl
mov
shl
mov
arpl
mov
test
shl
aad
adc
sub
cs
sbb
mov
xchg
mov
imul
sbb
daa
xchg
pop
adc
shrl
adcl
imul
scas
int
icebp
jae
and
inc
and
hlt
lret
stos
test
cld
xchg
insl
lret
adc
cmp
and
aad
scas
xchg
rcrb
imul
sbb
pop
fsubrs
inc
mov
push
mov
push
cmp
stc
fstpt
add
mov
fidivrs
aam
sub
add
xchg
xor
xor
pop
inc
notb
add
js
dec
ljmp
jg
cmp
stc
sbb
mov
and
mov
pushf
and
aaa
pop
or
std
inc
sahf
jmp
xlat
aad
sub
cmp
add
stos
inc
mov
xor
xchg
mov
and
xchg
movb
adc
xchg
aaa
aad
mov
jnp
out
jns
js
pop
dec
push
dec
push
inc
adc
aam
dec
adc
mull
push
mov
xor
scas
push
cmp
popf
pop
push
pop
loope
and
movsb
es
stos
sbb
pop
lock
sbb
das
sub
xor
add
js
adc
ja
dec
in
jae
push
mov
aaa
adc
mov
aas
xor
pusha
outsl
or
lahf
jecxz
andl
cmpl
pop
popf
dec
testb
or
fcompl
jmp
xorl
mov
dec
repnz
pusha
call
sbb
add
testb
mov
add
inc
repz
xchg
mov
gs
add
lods
jne
cmp
push
aad
mov
push
push
sti
sbb
in
fsub
inc
lcall
cld
iret
cmp
push
cld
add
movsb
mov
or
mov
aad
pop
mov
mov
add
ret
sbb
sbb
out
in
aam
lock
push
sbb
xchg
aas
push
lods
and
pmulhw
test
pop
fstps
das
bound
leave
mov
scas
xchg
or
xor
test
lock
push
in
movsb
ret
bound
in
mov
and
jmp
inc
adc
arpl
mov
jmp
dec
pop
shll
out
add
sbb
jno
xor
pop
dec
mov
inc
data16
stos
js
jnp
insl
aad
test
jo
cmc
jnp
stos
scas
lock
adc
xchg
ja
adc
cmc
aaa
jbe
xchg
jle
pop
pop
jge
inc
out
cmp
mov
xchg
test
push
dec
test
or
pop
and
pop
sub
jnp
lods
iret
mov
pop
jg
or
fisubrl
imul
loope
and
adc
fcomi
daa
dec
add
sbb
rorb
xchg
loopne
addl
int
addb
loope
xor
pop
mov
sub
js
pusha
or
add
aas
push
sbb
sub
jle
inc
les
sbb
mov
and
sbb
daa
iret
insb
shlb
imul
cltd
sbb
popf
xor
das
lods
cmpsb
lock
fadd
push
jno
cmc
sbb
lods
decb
mov
lds
xor
xor
xor
test
scas
mov
fisubrl
lds
mov
jp
lret
insl
arpl
jp
sbb
pop
clc
xchg
es
stos
aad
andb
mov
and
repnz
mov
dec
fwait
push
loop
dec
push
push
int
and
jecxz
leave
pusha
stos
xor
sbb
push
pusha
adc
mov
dec
fs
mov
pop
inc
xchg
bound
mov
pusha
in
pusha
cmp
adc
inc
cmp
pop
insb
fsts
out
int3
xchg
in
push
mov
mov
or
fs
push
push
xchg
bound
pop
mov
jmp
xchg
pop
pop
cmpsl
lcall
and
jge
mov
mov
push
decb
lea
cld
sbb
fists
shl
inc
inc
mov
jle
hlt
in
mov
mov
setnp
inc
pusha
adc
testl
xor
jne
pop
push
rclb
push
ret
call
fisttps
out
cli
adc
out
rclb
cmp
adc
in
dec
stos
xor
cmp
ffree
loope
push
call
call
mov
push
xchg
mov
inc
and
dec
testb
es
cmp
ficoml
sbb
enter
dec
mov
adcb
aam
popa
aaa
xor
sub
addr16
cli
fists
xor
mov
into
inc
pop
inc
mov
repz
xchg
aam
fiaddl
les
mov
outsl
inc
stos
scas
jnp
adc
insb
pop
and
int3
aam
imul
pop
test
jmp
lock
data16
ret
sbb
jno
mov
pop
loope
and
int3
fxch
dec
mov
cmp
xor
jo
scas
or
fld
mov
jl
imul
ret
imul
cwtl
mov
adc
bound
insl
fnstsw
push
dec
jo
cmc
pop
dec
inc
insb
ds
xor
cltd
add
les
scas
push
in
dec
and
jle
mov
outsb
iret
mov
pop
int
insl
mov
packssdw
sarl
cmp
aas
jb
ds
call
fimuls
push
mov
jg
cli
loop
fwait
push
repz
adc
sbb
xchg
js
iret
cmp
stos
mov
add
mov
jg
adcb
out
js
ljmp
push
insb
mov
jno
fidivl
stos
aaa
mov
jmp
js
pop
add
loope
xor
push
sub
imul
dec
cli
jno
iret
xor
sbb
sbb
and
xchg
or
and
add
movsb
cltd
sub
or
in
or
and
out
out
xor
mov
mov
pop
fdivrl
pop
div
fwait
in
sbb
jbe
mov
sub
cmp
mov
push
jmp
inc
test
or
lahf
pop
icebp
and
ficoms
cmp
mov
popf
sub
dec
mov
out
mov
in
mov
sbb
cmp
adcb
jno
cld
or
mov
mov
jle
add
sbb
js
jmp
leave
xor
imul
mov
dec
xchg
rcrb
push
rol
mov
out
pop
inc
mov
rclb
push
mov
rcll
mov
sub
ja
mov
and
pop
sahf
je
outsb
or
pop
test
sub
movsl
xchg
inc
pop
adcl
das
lahf
shll
std
xchg
fs
ljmp
mov
fistpll
stc
jns
fidivrs
push
pushf
jp
inc
pop
xor
aas
fistpll
xchg
arpl
cltd
gs
das
mov
in
and
add
pop
sbb
popa
xor
adc
ja
and
or
sbb
pusha
and
pop
mov
popf
lods
int3
inc
icebp
push
adc
out
mov
sbb
fldenv
jne
std
push
adc
mov
dec
dec
xchg
pop
test
and
out
insl
ljmp
arpl
xor
bound
jmp
je
xor
call
dec
dec
adc
mov
add
arpl
sarb
jp
bound
lds
adc
mov
ss
cmp
and
xchg
mov
fs
cmc
out
fists
sbb
mov
dec
push
mov
jecxz
movsb
adc
xor
test
sub
mov
add
mov
sub
sbb
hlt
push
idivl
mov
mov
testb
mov
mov
nop
in
movsb
sti
data16
sub
aas
orl
imul
jbe
mov
hlt
js
cmp
popa
xchg
or
and
add
sti
xchg
pop
push
xchg
stc
pop
lods
inc
popf
adc
pop
jnp
movsb
push
mov
mov
sahf
js
ret
retw
lahf
mov
sbb
xchg
test
or
mov
mov
mov
leave
aaa
lahf
fistl
in
adc
sarb
addl
jg
dec
jp
mov
dec
push
scas
add
and
sbb
and
mov
stos
mov
xor
cli
hlt
xor
mov
jecxz
lock
and
mov
dec
xor
lock
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
addr16
adc
inc
pop
jl
cmp
loop
and
xchg
cli
adc
xchg
arpl
hlt
ficomps
or
jns
inc
int
lock
insb
cmp
notl
push
lret
pop
ret
lods
pop
adc
add
jecxz
mov
sub
ds
adc
and
and
pop
call
dec
mov
dec
aam
fnstsw
pop
mov
mov
xor
mov
stos
mov
pop
mov
fildl
push
jmp
mov
pop
outsl
enter
pushf
dec
cmp
mov
xor
xchg
adc
popl
add
outsb
lock
in
xor
cmc
mov
aad
sbb
cmp
fmuls
pop
dec
es
out
mov
pop
arpl
push
test
div
das
jmp
imul
movsb
out
popl
mov
rcrl
insl
repz
mov
gs
or
in
int
and
aam
lods
inc
jnp
shrl
out
fists
shll
rcrl
call
pop
icebp
cmp
push
stc
inc
loop
cmpsb
sbb
push
aas
imul
or
cmp
dec
fcmovu
mov
leave
xor
jns
adc
jnp
push
pop
in
into
pop
movsb
aad
lods
loop
andl
sub
sbb
cmp
sarl
mov
orb
loopne
mov
clc
push
cmp
mov
and
xlat
loopne
push
dec
adc
rcrb
stos
repnz
leave
dec
mov
loopne
cld
adc
xor
sbbl
push
add
xorl
pushf
and
xor
add
jle
in
add
ss
xor
dec
aam
xchg
in
cmp
je
inc
popa
insb
push
inc
fistl
mov
and
rorl
xchg
ja
nop
cld
xchg
pop
cmc
jmp
jge
cmc
inc
adcb
pop
xchg
arpl
push
loope
jno
fdivs
jle
sbb
push
inc
or
popf
dec
add
clc
fnstsw
dec
jecxz
jb
xchg
mov
add
movsl
cld
xlat
xchg
outsb
stos
adc
xor
pop
adc
mov
mov
dec
mov
pushf
add
imul
add
pop
xor
imul
push
incb
jecxz
imul
push
jb
lods
xor
push
and
and
push
pop
sub
xchg
data16
xor
dec
sbb
dec
clc
xchg
xor
xor
dec
ss
int3
aad
lahf
sub
dec
ja
jnp
nop
mov
add
inc
sub
sub
sbb
mov
mov
jle
sbb
clc
mov
aas
jne
xchg
insb
inc
mov
test
stos
out
adc
sbb
xchg
inc
mov
jg
sbb
jno
outsb
cld
xor
fbstp
jl
shl
cmp
jo
xchg
and
push
int3
nop
shrl
hlt
inc
mov
cmp
movsb
jp
enter
shl
cmp
mov
inc
push
repz
cmp
clc
test
popa
inc
adc
push
mov
andb
sub
mov
iret
add
sbb
adc
ret
mov
push
cmp
mov
aad
mov
cwtl
repz
inc
cmp
jne
pop
add
jge
or
dec
cmp
push
outsb
leave
inc
ret
cmp
jne
lret
mov
mov
mov
loop
repz
jmp
adc
mov
insl
adc
outsl
aas
add
gs
popa
ja
dec
jge
inc
jp
jbe,pn
xchg
and
je
movsl
sub
cld
cli
mov
inc
frstor
test
sahf
call
std
sbb
push
shr
les
lock
out
xchg
and
or
xchg
or
sahf
icebp
loop
neg
jb
cmp
outsb
add
pop
shlb
and
inc
es
fnsave
shrb
mov
js
jl
sbb
sub
sub
pop
mov
loope
leave
and
and
push
push
sbb
push
and
stc
cltd
dec
aaa
imul
mov
jmp
jo
adc
push
lods
sbb
sub
loopne
mov
jno
cs
aas
mov
pop
scas
fstl
shlb
mov
jne
insl
mov
sub
add
jae
fidivs
je
inc
rorb
stos
lret
pop
stos
in
iret
data16
xor
adc
cld
int3
testl
sbbl
jmp
gs
loop
in
aad
sbbl
xor
into
shlb
inc
xor
sbb
fwait
dec
loopne
aad
sub
dec
cmp
inc
lahf
mov
cmp
ret
cs
adc
test
and
push
sti
repnz
mov
and
jo
xchg
xchg
lcall
mov
cmp
xlat
adc
inc
hlt
inc
icebp
outsb
push
adc
xchg
lods
push
adc
outsl
mov
loop
sarl
add
cltd
mov
mov
repnz
cld
int3
lea
fs
mov
fs
loope
and
adc
mov
int3
xchg
inc
dec
movsb
add
pushf
lahf
push
cmpsl
ljmp
mov
cmpb
sub
fwait
add
mov
cltd
nop
dec
rcrb
popa
aaa
push
insl
insb
imul
je
fidivs
push
fldl
jne
pop
dec
adc
fdivrl
adc
or
xchg
xchg
mov
lahf
sbb
cli
adc
dec
xchg
xor
in
jg
push
jnp
or
movb
lods
jle
inc
movsb
cltd
loopne
fdivl
mov
mov
and
pop
mov
fcompl
add
jne
fwait
popa
push
dec
cmpsl
movsb
mov
fistpll
cmpsb
mov
dec
ret
test
lret
sub
inc
je
fwait
push
adc
and
lahf
or
icebp
xchg
enter
inc
mulb
loop
ljmp
mov
add
outsb
add
sahf
mov
iret
xchg
xchg
ffreep
sub
sbb
or
rep
lret
cwtl
dec
iret
mov
daa
je
jbe
mov
xor
sti
mov
bound
pop
hlt
sbb
xor
or
mov
mov
nop
cmpsl
xor
mov
lahf
test
mov
pop
rep
lret
in
dec
add
inc
aaa
pop
jne
inc
stos
out
sbb
stos
pop
lret
cmp
push
ds
and
inc
scas
fcoms
mov
ljmp
out
insl
mov
mov
push
push
nop
and
int3
xchg
push
inc
out
arpl
mov
rolb
adc
div
andb
rolb
adc
aaa
adc
push
fcomps
or
je
xchg
or
jae
xor
jne
fsub
sub
or
fisubrs
xor
mov
jo
or
mov
enter
add
sub
mov
cltd
lock
xchg
movsl
cmp
insb
and
sbb
mov
inc
xor
js
out
pop
push
or
and
rcr
jo
fucomp
or
std
pop
and
jb
dec
in
out
jmp
xchg
fnsave
in
push
pop
gs
mov
rolb
mov
mov
lret
xchg
scas
inc
stos
xchg
xchg
push
mov
pop
mov
in
jbe
mov
cli
shll
sub
jns
pushf
hlt
add
jnp
xchg
iret
jp
xor
outsb
mov
int
xor
movsb
in
addb
lret
movl
divb
mov
and
sub
push
call
insl
insb
mov
adc
cmp
call
pusha
test
cltd
inc
insl
sar
dec
inc
ds
add
inc
xor
mov
or
arpl
mov
jbe
xor
xor
je
jp
mov
sub
hlt
popf
and
or
xchg
cs
dec
rolb
divl
lds
lret
jnp
movsb
sub
icebp
sbb
sti
mov
push
shll
push
push
adc
int
int3
mov
xor
cmp
mov
ret
dec
pop
outsb
xor
lock
pop
bound
popa
jnp
outsb
sbb
iret
in
inc
mov
lcall
popa
lods
in
dec
sub
mov
mov
mov
ljmp
fsin
roll
jnp
sahf
mov
frstor
in
mov
pop
fs
in
rcr
andl
movsb
leave
lds
mov
or
mov
push
inc
and
aaa
out
lods
fs
and
inc
stc
mov
fildl
xchg
cmp
mov
test
orb
and
mov
outsb
test
lea
or
inc
sub
sbb
out
popa
mov
sbb
shrb
bound
push
mov
adc
jbe
cltd
insb
mov
jo
or
jnp
je
nop
call
loope
into
out
xor
push
sbb
xchg
or
outsb
pop
adc
shrb
pop
or
gs
aaa
cmp
in
fsubl
jecxz
testl
or
inc
mov
xchg
and
push
addr16
fidivrl
out
dec
insb
push
daa
arpl
icebp
mov
arpl
xor
pushf
jne
mov
sub
ret
dec
lods
inc
mov
sti
jnp
adc
sbb
lea
ss
sbb
mov
imul
xchg
mov
xor
or
loopne
xchg
dec
lret
lea
pop
cmp
mov
or
int3
push
daa
aad
fwait
aam
mov
push
adc
jmp
jmp
les
pusha
sbb
scas
dec
ja
push
loope
mov
or
out
lea
xchg
cmpb
sub
push
and
dec
push
cmp
subb
test
mov
es
lcall
xlat
sbb
fdivr
and
mov
push
inc
mov
fnsave
scas
and
mov
fldt
lods
xlat
sti
push
cmp
pop
cwtl
lcall
xor
mov
lcall
out
adc
add
dec
xlat
cmp
sbb
dec
cs
cmp
das
pop
repz
sahf
mov
test
add
lret
insb
cwtl
arpl
jb
std
pop
adcl
xor
fidivl
enter
cli
js
sbbl
fimuls
lret
dec
dec
mov
jg
sahf
or
cmp
mov
or
mov
adc
mov
dec
or
lcall
nop
add
fsubr
or
std
add
fcmovb
inc
cmp
outsl
es
add
les
in
xor
icebp
push
xor
jl
xchg
mov
jno
dec
mov
test
loop
inc
in
icebp
rorl
xchg
lods
add
fistpl
jns
mov
jle
jns
aam
jbe
xchg
jge
and
fcomi
mov
sysenter
imul
push
imul
jmp
std
out
sti
dec
xchg
inc
and
outsl
xchg
mov
and
add
dec
stc
pop
adc
int3
fs
std
ss
cmpsl
outsb
fidivs
cmpsb
lds
test
hlt
cmp
mov
add
mov
lahf
data16
xor
ja
pushf
cmp
inc
xchg
mov
outsb
cmp
mov
ja
pop
gs
cmp
xchg
mov
movsb
sbb
std
sub
cmp
imul
xlat
push
scas
pop
shll
pop
mov
xchg
cmp
test
lret
in
jns
das
pop
in
xchg
stc
mov
insb
fisubs
adc
jl
pop
or
inc
jno
repnz
imul
fidivrs
or
push
push
xchg
leave
jmp
and
xchg
pop
rcrb
inc
cmpsl
xor
lahf
jl
popa
in
fwait
xor
icebp
fidivrl
push
fistpl
adc
jb
je
jmp
cmp
pop
popa
into
aas
mov
sarb
mov
pushf
jno
cmp
enter
inc
jmp
push
mov
cmc
shr
and
pusha
push
sub
mov
mov
adc
iret
mov
repnz
or
xchg
dec
push
out
adc
push
sbbb
je
sub
int
cs
cmp
push
or
in
divb
jns
cmp
daa
cmpsl
pop
pop
int3
sub
in
fcoms
dec
rcll
sub
add
xor
cwtl
cmp
cmpsl
push
mov
inc
sub
loopne
mov
ret
out
sar
xchg
std
lds
movsb
fsubrs
ret
lea
push
push
sbb
xchg
cli
arpl
scas
outsl
out
in
sti
jae
jg
or
push
push
mov
outsl
inc
pop
testb
add
fsubrl
scas
rcl
mov
adc
dec
push
aas
leave
repz
xchg
inc
lock
mull
xor
lret
movl
jnp
adc
iret
dec
stos
lock
inc
xchg
add
push
inc
mov
repnz
movb
pusha
mov
pop
je
shrb
outsl
ss
mov
ret
xor
cmp
inc
cmpsb
push
xor
in
loopne
sbb
cmp
sbb
das
mov
jg
mov
push
xchg
xor
xchg
mov
and
pop
imul
mov
ja
dec
inc
das
mov
shl
or
mov
or
push
mov
mov
xchg
inc
and
push
jg
pop
xor
fsubl
roll
mov
das
shl
xor
sahf
adc
pop
scas
mov
cli
push
jo
pusha
cs
cmp
sub
mov
hlt
bnd
movsl
xlat
xchg
jmp
fmuls
xchg
fadd
rol
xor
inc
mov
push
das
inc
mov
adc
mov
jp
add
in
mov
xchg
jae
jno
repz
mov
sbb
or
test
adc
adc
pushf
dec
cmp
ja
pop
mov
stos
xchg
mov
add
push
sub
adcl
arpl
cmp
sbb
xlat
test
mov
repz
pop
jne
jmp
jmp
add
stos
jle
cmp
ret
stc
test
repnz
jg
cs
jmp
repnz
dec
jne
xor
ret
daa
fldenv
xchg
ret
adc
xchg
jle
roll
push
rolb
pop
lock
sbb
mov
add
push
lret
jne
adc
sub
popa
rcrb
ffree
sbb
cmp
sti
out
repnz
adc
mov
stc
jae
mov
mov
repnz
cmp
mov
pop
pop
mov
sub
insl
mov
lods
pop
test
loop
aaa
jmp
push
sbb
inc
mov
lret
aas
adc
das
and
jmp
mov
jbe
cmc
mov
mov
lahf
inc
xor
inc
sti
dec
adc
mov
jmp
cs
outsl
sub
xchg
and
in
push
inc
inc
icebp
dec
pop
jp
bound
xchg
shlb
popa
dec
cmp
jp
fwait
adc
sub
push
call
pop
jno
hlt
jp
test
jbe
add
lea
daa
loope
cmpl
adc
sarl
dec
ret
pop
jb
mov
jecxz
mov
stos
pop
jmp
push
pop
inc
sbb
xchg
inc
pop
add
mov
dec
rcr
inc
xchg
xor
push
fwait
mov
add
inc
iret
das
jge
dec
jnp
fldt
sub
jmp
daa
aaa
mov
mov
mov
shlb
xor
jno
adc
in
cmp
cmp
dec
subl
je
outsb
in
je
das
loop
push
pop
mov
dec
lea
sub
inc
aam
loope
adc
mov
pop
or
jg
test
or
dec
adc
adc
dec
jecxz
hlt
xchg
adc
in
mov
mov
lahf
inc
shl
xchg
xor
adc
xor
inc
je
ja
out
dec
or
nop
jnp
movsbl
add
aam
sbb
fists
rcll
sbbl
movsb
rcl
pop
repz
std
mov
movb
xchg
cmpsl
jo
rorb
popa
mov
or
xchg
cmp
mov
pop
and
enter
dec
loopne
in
jo
fildl
pop
push
xlat
mov
inc
cmova
pop
mov
fcmove
out
jmp
mov
xor
or
fnstenv
dec
pop
ljmp
pop
rcrl
les
add
mov
repnz
fimull
scas
les
xchg
mov
pop
adc
adc
xchg
int
je
mov
mov
repnz
inc
inc
out
enter
int3
inc
jmp
lret
jl
fisttps
fwait
dec
jecxz
and
scas
xchg
cmp
pop
or
and
cmp
stos
inc
inc
aad
sbb
cli
jne
push
xor
sar
in
imul
decb
fs
fcompl
sub
or
addr16
rcrb
add
push
cmpl
outsl
dec
sbb
out
stc
jmp
mov
enter
fwait
insl
lahf
sarb
lahf
adc
xchg
jp
adc
cltd
rcll
out
sbb
xlat
inc
or
adc
xlat
insb
mov
sub
xchg
mov
push
jp
pop
repnz
xor
push
daa
stos
dec
push
imul
mov
mov
cmp
icebp
xor
notb
mov
repz
jmp
cmp
popf
push
mov
mov
popf
pushf
xchg
lods
dec
out
mov
inc
pop
inc
add
insb
and
add
out
jne
ficoms
pop
xchg
xchg
dec
lods
rorb
sub
arpl
and
pop
loopne
fcmovbe
mov
push
mov
fistpll
cwtl
pop
imul
js
rcrb
dec
aaa
jbe
enter
repnz
dec
dec
aam
lret
stos
sbbb
sahf
pop
out
pop
lret
mov
lret
cmp
dec
pop
mov
leave
add
in
pop
mov
xor
ja
scas
insl
loope
js
push
mov
insb
ds
pop
sbb
repnz
sbbb
jmp
jl
lcall
int3
clc
pop
pop
add
daa
scas
dec
fs
mov
jns
aas
and
cmp
aas
adc
xchg
mov
pushf
dec
iret
xor
imul
rolb
mov
loopne
movsb
sti
push
sbb
ja
add
sub
push
xchg
mov
cli
mov
xorb
fldz
push
cwtl
mov
call
in
pop
add
pusha
sbb
push
rep
cmp
or
xchg
movsl
arpl
or
xchg
pop
mov
in
adc
fisubrl
xorb
sub
fidivrs
out
add
cmp
insl
jns
dec
mov
xor
shll
xchg
popa
outsb
iret
test
pushf
fwait
aas
lock
repz
push
cmpsb
hlt
pop
hlt
xchg
das
rcrl
mov
fsub
adc
cmp
fisubrl
mov
fcmovnu
mov
icebp
data16
and
and
jp
notrack
test
sub
or
push
inc
je
fiadds
sub
inc
es
jnp
iret
inc
es
and
mov
push
imulb
mov
rcl
pop
and
mov
mov
push
or
cld
inc
or
test
sarb
andl
push
popf
outsl
fldcw
into
lcall
xor
xchg
push
and
xor
xor
test
pop
pop
inc
sub
idivb
cmp
hlt
rcrl
dec
push
sub
in
inc
fdivr
out
jp
inc
clc
dec
adc
cmp
adc
aas
sub
outsb
insl
mov
or
xor
ret
dec
or
sub
ja
iret
sahf
fs
mov
pop
iret
fmuls
mov
jl
xorl
cmp
jp
sub
test
xchg
and
inc
bound
mov
jo
outsb
or
inc
hlt
push
mov
nop
out
dec
or
bound
lcall
aad
pusha
jge,pn
std
and
sahf
jbe
add
sbb
mov
jle
das
hlt
repz
add
lcall
call
push
adc
push
mov
pop
jbe
mov
dec
jle
lods
push
hlt
push
rorl
out
lods
mov
fwait
dec
aam
sbb
scas
sahf
aad
xchg
xchg
ret
xchg
inc
jmp
repz
jne
iret
mov
arpl
ja
dec
enter
aaa
mulb
push
lods
mov
sub
fildl
sbb
in
ja
jg
jbe
xor
mov
cmp
adc
dec
dec
jecxz
cmp
xor
xchg
pop
lods
push
in
pop
in
sbb
cli
or
mov
mov
fistps
pop
test
cmc
cmp
arpl
in
dec
cmpb
mov
test
cwtl
in
cmp
add
cmpsl
es
in
into
xor
mov
jg
ss
fistpl
mov
pop
rcr
bndstx
ds
insb
add
xchg
push
fdivrl
xchg
lret
scas
mov
push
and
ficomps
stc
imul
test
xchg
popf
add
xchg
stos
sti
adc
int3
les
mov
imul
cmpsb
jecxz
pop
mov
or
dec
add
inc
pop
cmpsb
jecxz
sbb
aas
aad
jl
fisttpl
sub
mov
outsb
adcb
mov
fs
push
pop
jl
jmp
inc
add
stos
mov
cwtl
fisubrs
jl
movsl
dec
clc
cld
aas
sub
repz
xchg
jp
xor
pop
lock
push
sbb
insw
int
test
pusha
sub
jo
inc
stc
movsb
dec
iret
or
dec
xor
clc
lods
imul
repnz
in
inc
push
jo
mov
xor
inc
fisttpll
add
pop
loopne
pushf
dec
pop
push
shlb
daa
popf
cld
push
scas
jne
cmp
out
pop
cmpsb
and
pop
outsb
mov
add
pop
sub
xchg
cli
mov
or
shll
mov
in
fsubrs
sbb
outsl
push
sub
dec
mov
movsb
rorl
jne
and
popf
and
imulb
fisubs
nop
sub
gs
mov
cmp
mov
dec
pushl
lcall
addr16
jnp
pop
jp,pt
inc
aas
mov
fsubrl
mov
adc
and
add
add
test
in
pop
inc
out
cmc
adc
scas
addr16
xlat
push
loop
jo
mov
daa
mov
cmpsb
insb
pop
cmp
in
inc
cld
mov
sbb
mov
xlat
fiaddl
pop
ret
mov
adc
hlt
mov
push
rcrl
push
sub
leave
cli
or
data16
cmpsb
cld
pop
xchg
sub
or
je
popf
adc
mov
scas
aas
adc
insl
fdivs
sbb
pop
sbb
pop
mov
shll
sbb
pop
out
jg
jnp
cmp
fidivs
shlb
ret
pop
shr
addl
push
and
fcoms
loopne
add
jns
adc
sub
aam
mov
les
push
mov
in
loope
add
sbb
adc
sub
stos
dec
inc
adc
test
fwait
dec
mov
dec
push
push
gs
shl
dec
push
addl
add
add
cmpsl
xchg
xchg
aas
inc
fstpl
dec
xlat
js
mov
js
or
mov
or
cmc
aam
out
fcoml
jne
mul
sub
xchg
mulb
shlb
sbb
cli
imul
stc
out
shrl
cmpl
sbb
push
xchg
out
inc
or
or
adc
test
jle
sub
jae
adc
divb
imul
pop
out
lock
cmp
dec
bound
pushf
stc
dec
xlat
adc
mov
adc
loope
pop
adc
push
cltd
dec
imul
cmp
comiss
jecxz
inc
sbb
into
lahf
push
dec
pusha
add
cld
es
or
scas
lods
cmpsl
jne
adc
inc
add
out
bound
icebp
lods
jbe
pop
jle
or
stc
jnp
jg
into
jmp
mov
in
sbb
stc
aas
jb
mov
repz
aaa
mov
add
dec
test
lcall
sbb
cwtl
insb
push
fwait
or
ljmp
cmc
pop
mov
or
fmul
sub
cmc
stos
jnp
sbb
dec
mov
sub
scas
sbb
pop
jbe
cli
jle
push
xchg
add
and
mov
or
mov
mov
mov
pusha
mov
fcmovne
mov
pushf
out
lds
xchg
stos
add
cmp
ret
xchg
cmp
mov
into
mov
cmp
push
dec
mov
xor
mov
sbb
pop
cld
into
sub
sbb
ret
lret
adc
jg
in
xchg
xorb
mov
or
mov
cwtl
cmpsl
pop
adc
sbb
mov
bound
popa
std
add
cmpsb
xchg
dec
inc
popl
movsl
adc
mov
lods
fs
fstpt
lcall
cld
lock
inc
gs
and
mov
dec
inc
loop
xor
dec
push
pop
js
out
push
cmp
aad
je
pop
mov
nop
data16
mov
mov
add
ja
test
or
fcomps
xor
sar
xchg
inc
pop
enter
ja
pop
push
adcl
rorl
xchg
xor
fnstsw
in
aam
xchg
inc
movaps
cmp
mov
cmp
pop
fwait
loopne
dec
scas
popa
adc
test
push
mov
enter
sub
push
dec
xchg
ljmp
jecxz
into
icebp
js
inc
addr16
xor
adc
and
cld
rolb
outsb
push
add
mov
out
ljmpw
mov
xor
cltd
aas
push
jb
arpl
xchg
outsl
loop
and
aas
leave
cmp
add
mov
cmp
adc
push
in
sarl
mul
or
xorl
mov
je
sbb
sbb
test
xchg
mov
and
mov
cmp
xor
hlt
or
jae
movsl
out
mov
into
push
mov
mov
add
sbb
xchg
jecxz
mov
mov
inc
xchg
fiadds
pop
mov
nop
stos
xor
in
out
inc
std
jno
mov
popf
rcr
das
test
sbb
cmp
pop
int3
jnp
or
int
int3
pop
and
lods
in
push
inc
inc
jbe
adc
xor
or
fisubs
cld
in
mov
adc
sbb
sub
cltd
mov
ds
jbe
adc
es
int
stos
out
daa
cltd
jno
ljmp
mov
cmc
jmp
rcll
rol
int
xor
mov
fdivl
movsb
mov
xchg
inc
test
enter
xchg
jns
dec
xchg
ret
cmp
mov
push
mov
es
mov
jnp
pop
adc
xor
adc
pushf
mov
gs
mov
js
and
push
out
pop
movb
clc
test
push
jecxz
jp
xchg
icebp
test
sbb
mov
fistpll
mov
daa
mov
jb
pop
pushf
and
pushf
clc
pop
lods
ret
mov
sti
jmp
out
push
scas
sbb
push
repz
sti
insb
pop
jmp
inc
mov
adc
popf
and
cwtl
in
push
pop
lods
cltd
iret
test
pop
sbb
jle
lahf
dec
scas
scas
push
mov
iret
mov
aaa
pop
cmp
inc
sub
mov
aas
sub
mov
xor
lcall
mov
int3
xor
push
pop
stos
rolb
push
sub
out
sbb
shrb
lcall
loop
bound
jne
xchg
repz
ds
loop
mov
or
push
xor
pop
cmp
add
xor
ja
adc
jmp
jle
lcall
leave
repz
xchg
mov
stos
dec
push
push
xor
icebp
call
addr16
push
mov
inc
movsl
xchg
sbbb
mov
inc
jne
sti
mov
pushf
in
pop
cmp
inc
imul
sbb
scas
enter
push
popa
ljmp
in
add
testl
mov
out
jbe
add
add
pop
mov
sub
cmp
pop
out
bnd
mov
or
icebp
ljmp
jne
mov
dec
mov
fwait
into
jge
cmp
push
popf
mov
int3
push
lret
out
out
repz
fldl
xor
into
xor
pop
mov
fldenv
sbb
rol
sbb
int3
in
jmp
mov
fsub
jne
loop
addr16
pop
mov
in
inc
xlat
add
jne
inc
cld
fcmovu
lea
mov
push
sahf
dec
lods
ljmp
shll
out
pushf
dec
mov
aam
xchg
adc
xor
movsl
cmp
icebp
sub
sbb
gs
adc
pop
add
std
fidivs
scas
in
popf
clc
mov
stos
aaa
push
mov
repnz
repnz
inc
cmp
or
andb
fiadds
in
scas
psadbw
pop
leave
mov
add
testl
repnz
adcb
pop
movsb
add
scas
jg
mov
jnp
idivl
inc
sarl
clc
mov
repnz
mov
or
xchg
outsb
dec
jbe
cli
push
mov
xor
jge
into
push
mov
mov
psubq
and
push
rorb
mov
mov
int
jp
idivb
jmp
add
imul
call
jp
add
clc
mov
js
adc
xchg
lods
rcr
out
jge
aas
addr16
movsb
sub
aad
loope
add
scas
out
mov
bound
out
rcr
nop
jns
lcall
jmp
inc
xor
and
test
cmp
aad
fmull
mov
push
cmp
xor
jecxz
insb
je
and
adc
iret
dec
jle
scas
imul
push
sub
mov
int3
lods
clc
out
jecxz
sbb
call
mov
cmpsb
pop
mov
xor
sub
sub
mov
mov
xchg
outsl
lods
and
sbb
icebp
add
cs
cmp
test
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
stos
mov
push
dec
mov
dec
jg
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
data16
pusha
sub
addl
incb
add
mov
flds
negl
aam
cmpsb
inc
adc
loopne
mov
mov
insl
out
leave
je
pop
push
cmpsb
lock
je
mov
xchg
popf
in
popf
stos
cltd
mov
mov
mov
lcall
rcrl
dec
sub
ljmp
in
add
jmp
xor
insb
pop
dec
push
outsl
add
inc
in
xchg
idivb
mov
pop
jbe
inc
and
mov
lret
pop
loopne
mov
lret
add
and
sbb
adc
add
arpl
shl
xor
fwait
bound
sub
mov
icebp
iret
test
test
xor
lahf
inc
out
in
sub
clc
adc
xchg
lcall
pop
jmp
cli
push
leave
das
adc
sub
add
fdiv
mov
xchg
scas
rcr
shr
mov
jae
in
jp
xor
rep
mov
or
pop
cmpl
addr16
mov
jp
pop
jne
jg
je
mov
or
shl
add
movsl
pop
inc
imul
out
nop
jmp
int3
fnstsw
lret
mov
ret
pusha
jnp
testb
sub
adc
fwait
pop
jns
mov
out
mov
fnsave
xchg
into
mov
repz
pop
enter
pop
and
pop
mov
sub
hlt
and
sar
sahf
flds
adc
push
imul
xor
sub
mov
repnz
jo
imul
dec
sub
aad
pop
sti
ja
push
mov
push
jo
dec
mov
cld
nop
lea
push
ret
lret
inc
pop
mov
push
pop
insl
lds
add
mov
lcall
dec
in
incb
add
idiv
jg
mulb
out
popf
push
test
add
add
add
pop
insb
cmpsb
jp
xor
int
mov
jle
lea
inc
mov
enter
arpl
jns
sub
jbe
lds
sub
rorl
movsl
cs
scas
pop
jno
pop
aas
sbb
sub
push
add
mov
call
fcomi
adc
adc
add
push
nop
push
fldenv
jge
gs
or
stos
add
test
ror
cwtl
aam
repz
cwtl
mov
sub
dec
push
dec
jmp
jno
xlat
jnp
aas
sub
in
cmp
cld
mov
adc
ret
js
test
fidivs
insb
mov
lods
mov
jg
xor
pusha
loopne
outsl
fwait
jge
xchg
nop
jno
xor
test
mov
xor
loope
or
add
bound
dec
addr16
xchg
push
fimuls
ret
std
repnz
divb
ret
js
ret
jne
into
ljmp
adc
xchg
int
aam
cmpsl
sub
sub
pushf
mov
xor
cmc
andb
loop
dec
jo
xorl
loopne
daa
sbb
in
mov
push
xlat
js
les
jmp
inc
mov
ss
les
testl
out
lret
leave
jge
push
in
aad
sti
pop
dec
ja
lea
sti
pushf
mov
test
sub
pushf
fimuls
inc
jnp
xchg
push
and
mov
mov
pop
push
or
jnp
mov
pop
mov
je
jl
repnz
andb
popf
push
shlb
clc
imul
frstor
jl
das
mov
jge
out
cmp
stc
mov
sub
xchg
cmp
imul
mov
out
adc
cmp
add
push
nop
xchg
out
outsb
add
pop
sbb
pop
std
jg
in
push
filds
add
incb
add
pop
adc
mov
test
shll
adc
or
scas
ret
repnz
shl
jle
insl
out
dec
mov
mov
push
lods
lcall
je
cmp
cmp
push
int3
insb
xor
jecxz
inc
jb
pop
movsl
rclb
and
sti
push
sbb
lods
imul
mov
or
imul
sbbb
inc
das
mov
movsb
and
sbb
jb
mov
loopne
sahf
insl
xchg
dec
and
cmp
mov
and
andl
mov
xchg
inc
out
aad
inc
pushf
lods
mov
dec
or
xchg
jg
push
leave
je
loope
bound
pop
dec
and
in
inc
aad
mov
lahf
ss
and
int3
out
push
sti
and
sbb
dec
mov
mov
leave
xchg
mov
mov
pop
and
insl
lret
movsb
or
cmp
jnp
scas
xor
icebp
aam
sub
inc
push
pop
ds
cwtl
mov
jl
and
pop
jae
je
push
loope
pop
sub
fstpl
mov
rcrl
add
in
lea
in
adc
cli
pop
fwait
sub
rolb
dec
and
popa
cld
call
sbb
xchg
and
pop
insl
loope
push
test
push
mov
cmp
inc
cmp
dec
aaa
mov
cmp
mov
stos
xor
es
outsb
pop
out
popa
dec
cmp
hlt
iret
lods
cmpsl
inc
iret
cli
push
mov
out
jnp
pop
push
test
jno
and
and
lret
mov
jns
jge
jle
push
jo
or
push
call
cmp
sbb
fisubrs
insl
iret
or
std
jne
sbb
inc
add
push
add
mov
int
mov
rcrb
mov
add
add
add
mov
iret
mov
add
insb
mov
cwtl
sub
lods
ja
dec
add
sahf
add
stc
xchg
int
jmp
xchg
pusha
insl
jae
or
adc
xor
jmp
sub
add
ss
lret
ret
inc
stos
sbb
loop
in
xchg
push
jnp
xor
repz
call
inc
aas
or
hlt
ljmp
inc
fcoms
ret
fs
stos
divl
subb
stos
mov
pop
or
mov
xor
cmp
popa
jnp
push
test
sub
push
mov
dec
fwait
mov
pop
iret
js
and
mov
sub
push
jl
xlat
ret
or
outsb
sbb
aas
cmp
rorl
rolb
fcompl
mov
and
pusha
and
mov
add
mov
sbb
es
jmp
push
adc
xor
jmp
repnz
lods
sub
sub
xor
pop
test
adc
nop
imul
out
add
rcr
lea
mov
mov
fstps
push
test
mov
cmp
or
out
loop
cmp
scas
outsl
jg
imul
or
fdivrl
pop
insb
mov
cli
push
stos
loopne
imul
push
lock
pushf
cs
ds
xor
int
mov
or
ss
pop
cs
jne
shll
js
xchg
aam
stos
cmp
pop
push
add
mov
sub
shl
cwtl
inc
fidivs
xchg
rclb
mov
xor
and
test
inc
cltd
cmc
call
hlt
xchg
mov
adc
jmp
mov
push
testl
add
add
add
add
hlt
mov
std
jl
xor
jg
sbb
add
add
sub
mov
cs
mov
jl
mov
imul
mov
aad
xor
xor
pushf
sub
cmpsb
xchg
xchg
push
pop
orb
movsl
adc
incb
test
cmpsl
or
ja
and
mov
sub
or
jg
pop
iret
cmp
sbb
outsl
xlat
in
enter
lods
ret
lret
loopne
imul
imul
pop
fiaddl
pop
fsubs
cmp
dec
sub
ja
les
add
mov
lret
daa
dec
push
inc
test
sub
push
adcl
ja
pop
mov
pushf
std
mov
dec
mov
out
xchg
adc
loope
stos
cmc
sbb
ja
das
outsl
sbb
mov
test
pop
popa
mov
sub
loope
pusha
popf
xchg
std
pop
jg
jmp
outsb
ret
mov
nop
out
adc
rcll
jmp
pop
xchg
push
test
lods
push
sub
push
out
pop
inc
loop
pop
mov
cs
sub
inc
adc
arpl
das
hlt
into
jno
out
outsl
rorl
jb
or
push
sub
in
mov
mov
cmpsl
test
jg
adc
xchg
lcall
xchg
lret
addr16
pop
or
in
insl
jno
push
and
cwtl
inc
cmp
adc
cltd
add
sbb
inc
addr16
lock
add
add
jno
imul
cmpsb
add
aaa
movsl
dec
pop
push
sub
dec
stc
test
leave
into
jno
dec
sbb
sbb
push
xor
sub
mov
mov
aam
push
fisubs
dec
pop
mov
sub
subl
dec
lcall
out
stc
ss
repnz
sahf
aad
fldl
fsubrp
test
add
add
add
add
imul
fdivrl
xor
sub
incb
add
notb
jge
ds
pop
cmp
rcrl
jmp
testl
cmp
mov
lcall
or
sahf
pop
fwait
addr16
mov
das
cli
xor
sbb
pop
sbb
cmp
xor
fcomps
dec
inc
pop
enter
cmp
xor
outsl
imul
fdivs
sbb
fistpl
mov
lods
insl
add
jns
int
shrl
sbb
sbb
jbe
fistpl
dec
xchg
push
or
lret
xchg
and
leave
out
adc
shl
imul
xlat
push
loop
in
fs
adc
inc
mov
mov
ds
jnp
push
pushf
enter
stc
inc
push
not
inc
aad
jmp
mov
adc
and
jmp
cwtl
cmp
push
mov
repz
lods
inc
and
mov
pop
fldt
std
add
fstpl
icebp
out
icebp
aam
push
pop
cmp
xor
xchg
lods
mov
sbb
fisubrs
ret
xor
cmp
pop
dec
or
out
movsb
aaa
xor
jae
mov
aaa
xchg
sub
add
das
fnstenv
pop
stos
mov
or
dec
jno
cli
orl
shl
popa
sub
pop
jbe
inc
push
loope
fsub
and
cltd
push
and
and
inc
mov
sub
lret
xlat
outsb
push
jge
cmpsb
das
jle
mov
xchg
push
movsb
sub
lcall
out
fucom
mov
cs
add
mov
xor
testl
mov
inc
movsl
mov
push
adc
mov
jns
push
fs
xchg
push
insb
dec
dec
pop
call
mov
cmp
out
cmpsb
icebp
fadd
call
ja
shrb
fadds
add
jg
pop
fstps
cld
mov
add
add
add
cmp
jp
fwait
dec
inc
enter
fisubrs
mov
nop
js
adc
lds
in
pop
mov
mov
or
test
into
lcall
adc
daa
xchg
and
sbb
xchg
loop
ss
inc
xlat
inc
jl
loopne
and
mov
dec
and
jnp
jle
mov
sub
aaa
mov
lcall
and
inc
jle
ret
mov
cld
mov
and
je
add
dec
push
movsl
push
mov
or
test
je
idivl
out
jecxz
cmp
cld
test
xor
sub
in
inc
rclb
adc
jle
ja
loope
loop
test
mov
xor
mov
aaa
xchg
mov
mov
int
mov
inc
mov
pop
sub
shl
pop
inc
in
xchg
negl
pop
jecxz
jge
test
scas
xor
jae
out
ja
mov
mov
add
test
sahf
mov
in
nop
pop
int3
mov
xor
fwait
xchg
imul
sbb
aas
nop
lock
sub
sbb
pop
xor
js
dec
xor
pop
jno
xor
dec
xor
pop
and
mov
xor
inc
pop
aaa
cmp
inc
push
fisttpl
push
out
les
dec
das
stos
jo
push
mov
inc
cmc
arpl
outsl
mov
outsl
lret
shrl
fdivrl
test
sbb
test
and
jns
outsl
cmp
xor
fs
mov
outsb
fwait
or
movsl
sarl
push
add
clc
mov
adc
in
inc
adc
xor
out
jo
adc
xor
in
lcall
push
sub
add
cmc
fistpll
movsb
fidivl
into
sbb
xor
nop
add
incb
add
xchg
push
and
cmp
push
dec
mov
loope
lock
xchg
outsl
xchg
jecxz
jge
cmp
jb
shrb
lds
das
lcall
fildll
cs
cs
sub
jns
jno
adc
and
aaa
outsb
xor
xor
pop
test
jmp
pop
add
add
sub
jmp
aaa
sbb
adc
mov
popf
mov
shl
and
cwtl
cs
ss
cmp
pop
or
scas
xor
mov
fidivrl
lret
sbb
adc
hlt
cwtl
pop
pop
ret
call
adc
adc
fmuls
lret
loop
pop
push
push
out
sahf
les
movsl
inc
cwtl
in
fisttps
xor
divb
mov
loope
cli
and
das
sbb
fptan
push
out
outsl
cmp
dec
and
lock
fwait
out
movsl
nop
or
push
mov
jbe
xchg
fnstcw
ret
mov
adc
shl
bnd
xor
test
cli
ja
sub
fisttps
pop
xor
push
dec
mov
xchg
retw
or
js
sub
fists
jecxz
sbb
ljmp
cmp
andl
mov
mov
jle
stc
add
std
pop
push
lcall
mov
sti
inc
push
daa
dec
mov
or
xor
mov
adc
adc
or
pushf
mov
aaa
in
dec
out
mov
mov
mov
push
mov
sbb
jo
loope
sub
fildll
repnz
fcmovb
adc
jle
inc
sti
in
inc
lods
jmp
mov
xchg
adc
nop
stos
les
sbb
mov
mov
insl
outsl
xchg
lods
inc
cs
enter
add
and
movsb
lea
sub
idiv
adc
clc
xchg
add
incb
add
shlb
int
and
push
push
mov
xchg
mov
xor
lods
rcrb
in
cmp
mov
cmpl
mov
cltd
fildll
cld
rcrb
push
mov
leave
es
jecxz
or
sbb
cltd
clc
rorl
push
xor
out
cmp
mov
in
mov
push
scas
jl
fidivrl
test
xor
cmp
hlt
xchg
pusha
sbb
push
les
push
mov
push
jecxz
inc
mov
dec
xchg
testb
lahf
inc
lds
call
aaa
xchg
ret
punpckhbw
ljmp
enter
pop
cmp
lods
lret
test
out
daa
stc
sbb
notl
adc
lock
xchg
inc
xor
cld
mulb
cld
jl
cs
dec
loope
mov
ret
xorl
movb
xchg
fstpl
inc
popf
adc
xor
movsb
sub
ss
mov
out
aaa
test
repz
push
xor
mov
pop
jmp
js
scas
in
je
xor
mov
push
test
adc
mov
xchg
arpl
idivb
scas
fildll
push
aaa
push
std
or
sbb
jge
test
bound
dec
or
add
or
rol
push
sbb
or
pop
dec
dec
push
pop
dec
in
lcall
add
sbb
mov
cmpsl
add
adc
shrb
jp
push
in
pop
cs
mov
inc
xchg
sbb
daa
bound
sub
arpl
pop
mov
sti
int
xchg
and
loopne
pop
dec
add
xchg
nop
roll
call
xorl
sbb
or
sbb
inc
push
push
inc
sbb
push
and
loop
cmp
and
pop
cld
outsb
rcrl
xchg
add
mov
cmp
popl
mov
cmc
push
mov
xchg
add
incb
add
es
xchg
sti
or
mov
out
test
icebp
sub
xchg
dec
aas
rolb
xchg
push
lods
dec
in
adc
sub
clc
sbb
lods
mov
mov
mov
jmp
lds
adc
mov
push
mov
aas
and
mov
mov
xor
push
xchg
test
mov
push
rcrl
test
in
icebp
in
pminsw
sub
jno
sbbb
hlt
mov
les
daa
sbb
mov
imul
mov
div
sti
mov
ss
out
icebp
xor
stc
fstpt
mov
push
or
push
sahf
cmp
test
test
mov
xor
sahf
int3
jl
xchg
or
idivb
mov
pushf
das
mov
movsl
outsl
or
scas
mov
push
add
dec
jmp
lods
adc
sub
out
int3
and
mov
or
mov
clc
movsl
aaa
mov
add
xorl
fnstcw
mov
dec
mov
mov
inc
jbe
mov
mov
xchg
divb
pop
cmpsl
cmp
adc
sbb
sti
mov
call
lcall
out
jo,pn
out
inc
jecxz
insl
fwait
lds
cmp
scas
xor
lea
into
arpl
xlat
fidivl
jecxz
out
cld
nop
imul
adc
lret
mov
mov
push
pusha
mov
in
jp
mov
fcoml
adc
lret
add
es
jns
test
ljmp
sbb
xchg
push
inc
adc
ss
fwait
rcll
xor
push
pop
add
sbb
test
and
xor
inc
aad
adc
imul
pop
popf
lds
aad
and
shlb
call
add
xchg
std
jg
mov
clc
mov
incb
add
pop
mov
lret
insl
add
pop
gs
xchg
fildl
dec
mov
bound
out
xor
pop
xchg
xor
mov
movsl
jecxz
adc
add
popf
iret
aad
daa
mov
push
aaa
je
fisubs
fadds
sbb
inc
sub
mov
lds
in
jg
pop
and
cmp
fisttps
or
mov
cwtl
sub
and
mov
test
loopne
dec
fucomi
push
call
out
mov
push
xchg
adc
sbb
test
xchg
jge
push
sub
fidivl
pop
adc
inc
add
aam
aas
cmp
or
lods
cmp
xor
pop
xchg
aas
repnz
dec
leave
xor
push
aas
cwtl
and
into
push
dec
roll
popf
repnz
mov
mov
push
into
imul
mov
test
xchg
add
out
shlb
jle
shl
std
ret
clc
add
dec
in
xor
ret
lcall
outsb
nop
mov
adc
mov
fnstcw
dec
dec
cmpsb
addl
lret
call
jge
insb
push
mov
or
and
mov
lret
data16
clc
adc
inc
and
enter
test
idivl
dec
std
loopne
sbbb
inc
sbb
stos
insb
or
dec
adc
bound
subb
or
adc
inc
add
cmp
add
xor
mov
aaa
add
repnz
arpl
jns
rcr
movb
dec
push
int3
scas
xlat
jb
sar
leave
mov
icebp
leave
stos
popa
popf
push
imul
or
mov
pop
js
psubusb
sub
je
jle
push
into
push
push
xchg
fidivs
add
idiv
iret
rorl
loope
mov
add
add
add
add
scas
push
xor
and
cld
push
or
stc
fisubl
ret
inc
fdivrl
stos
cmp
jns
add
popf
daa
enter
pop
xchg
fiadds
xchg
dec
xchg
shl
test
jne
subl
mov
dec
jns
mov
bound
sarb
repnz
jle
pop
fsubrl
adc
pop
vucomiss
int
dec
lcall
cmp
rcrl
or
jge
pop
jge
xchg
out
sub
mov
or
mull
sbbb
and
aaa
pop
push
adc
adc
shr
mov
ss
cmpsb
test
mov
outsb
push
adc
subl
test
movsb
sub
daa
inc
insl
mov
std
sub
ljmp
sbb
jnp
xchg
ret
mov
jne
xlat
sbb
data16
in
inc
xlat
pushf
mov
push
call
fwait
cmp
das
pop
andb
sub
adc
xor
lea
cvtps2pd
cmpsl
insb
subb
mov
outsl
cwtl
repz
lcall
lahf
mov
gs
mov
out
sbb
andb
push
adc
dec
mov
adc
cltd
ror
xchg
jl
xchg
cmp
mov
rorb
scas
mov
pop
stos
or
out
cmpb
hlt
or
enter
je
repz
scas
movsl
pushf
lea
imul
mov
add
inc
shll
jnp
jge
out
nop
pop
popf
lods
and
mov
addb
insb
jb
cmc
decl
mov
sti
out
and
fmull
in
insb
xor
out
stc
add
pop
je
outsl
dec
pop
add
cmp
idivl
add
out
ret
mov
ja
or
add
incb
add
scas
jbe
aad
sarb
lret
push
pushf
test
push
mov
lahf
fiadds
pop
sbb
mov
fidivrl
daa
test
loopne
jb
jae
and
inc
clc
in
out
fisubrl
cld
aam
shrb
pop
cmp
mov
add
ja
lcall
cli
les
int3
fwait
pop
jecxz
mov
call
shll
jmp
cmp
insb
pop
xchg
push
ret
mov
std
loop
jp
push
cmp
mov
roll
fwait
test
hlt
push
mov
adc
pop
js
clc
xchg
aad
in
xor
sub
xchg
arpl
fistpll
push
aad
jb
icebp
adc
in
push
pop
rorl
fildll
and
dec
inc
inc
in
jo
popf
mov
outsl
xorl
xor
xor
and
add
cmp
call
bound
popa
out
sub
push
loopew
dec
mov
leave
shrl
movsb
jb
imul
push
jp
push
xchg
pop
cmp
pop
ljmp
xor
fcmovnbe
cld
arpl
pop
push
mov
mov
sub
roll
movsb
jb
ljmp
sbb
ljmp
out
imul
xchg
mov
and
add
sbb
cmpsl
add
inc
xchg
fsubs
shll
cs
loop
jno
inc
cmpsl
iret
jge
lods
and
jae
pushf
std
fwait
sahf
dec
lock
xchg
cmp
or
int
inc
movsl
addr16
mov
fldenv
mov
call
cmp
sub
test
push
mov
sub
sbb
xchg
jne
dec
cmp
pusha
movsb
or
mov
add
push
push
jle
xlat
lret
push
testl
pushf
add
incb
add
and
dec
clc
sub
xor
xchg
cmp
int
insl
mov
push
cmpsb
iret
frstor
aad
loope
fwait
inc
xor
mov
repz
push
mov
xchg
jecxz
ret
push
mov
xlat
repz
or
jo
mov
pop
mov
xor
cmp
xor
mov
daa
rcrl
xlat
fwait
popf
push
imul
jbe
pop
adc
fucomip
jb
lahf
mov
stc
pop
mov
and
dec
cmc
fcomps
fisubl
sbb
push
int3
insl
xchg
adc
mov
jae
pop
mov
adc
leave
rcrb
pop
lcall
mov
pop
jo
mov
outsl
cltd
fs
xchg
mov
xor
fs
sar
addr16
fsubrs
inc
lock
loopne
rcll
inc
pop
or
dec
ja
push
inc
xlat
mov
or
xlat
cli
inc
xchg
daa
sahf
mov
in
add
or
sub
xchg
or
aas
cmp
adc
xor
or
mov
or
xchg
pusha
mov
fisubl
mov
and
jbe
xchg
loope
ret
out
jle
pop
daa
jecxz
stos
aas
mov
arpl
mov
movsl
js
mov
inc
xchg
lods
push
aam
shl
xchg
inc
dec
cmc
pop
sub
adc
sbb
inc
jecxz
add
je
pop
lods
faddl
xchg
mov
ret
jg
jne
adc
dec
enter
lock
jp
or
loope
sub
and
or
mov
jo
gs
cmc
pop
outsl
int3
cmp
or
sub
pop
stos
dec
mov
add
addb
enter
or
lret
fcmovb
sahf
adc
pop
ja
cmpsb
sub
out
mov
push
sahf
ss
icebp
jno
and
fdiv
add
adc
or
pop
out
repz
fucomp
inc
jl
into
in
sahf
add
incb
add
data16
ljmp
mov
pop
cltd
mov
and
insb
dec
test
lcall
cmp
jo
jmp
mov
lcall
dec
xor
gs
dec
xor
sbb
mov
xor
push
sbb
or
jb
popf
mov
push
dec
xchg
cmp
cltd
dec
or
fists
add
fninit
pop
mov
ja
jae
fistpl
mov
xor
aad
int
cmpsb
dec
mov
mov
es
arpl
shrl
aad
adc
fbstp
cwtl
jmp
jge
inc
insl
sbb
scas
mov
xchg
aam
xorl
aaa
adc
jbe
push
cmp
in
add
cmp
push
sub
lds
mov
cmp
jae
daa
ret
ds
cmp
sti
jecxz
fnstsw
lret
cmovg
aaa
xchg
cmp
mov
cmpsl
stos
insl
or
and
sahf
pop
imul
xchg
or
adc
in
shrl
lcall
idivl
xchg
test
jno
push
gs
scas
jne
jmp
aad
or
push
dec
cmpsl
sub
pusha
cmp
push
xor
or
mov
loop
or
lea
push
or
sbb
repnz
stos
xlat
lods
int
iret
xorl
xchg
out
movsb
pop
xchg
iret
seto
fadds
out
push
mov
jecxz
xchg
aam
add
jns
jo
sub
mov
jae
mov
sbb
scas
cmp
push
lds
shrl
das
shl
jb
add
lds
push
pop
dec
add
and
sub
in
jbe
out
and
sahf
lods
fimuls
add
mov
cmp
sti
xor
mov
add
or
cmpsl
adc
sbb
add
xchg
insl
mov
out
nop
sbb
mov
add
fcomps
xor
inc
mov
cmp
mov
daa
push
rolb
adcb
rorb
gs
push
adcl
enter
xlat
mov
jb
repnz
out
pop
xor
mov
and
arpl
mov
cmp
mov
inc
sarl
cli
loope
xchg
int
ret
imul
push
nop
push
arpl
ljmp
movsl
cmp
or
stos
sbb
xor
mov
push
dec
mov
push
adc
mov
iret
dec
jns
movsb
popl
in
add
stos
mov
adc
jecxz
data16
movsl
mov
ror
dec
sbb
inc
mov
stos
mov
scas
inc
aad
mov
popa
jge
imul
mov
push
push
mov
movsb
ja
jmp
addr16
fwait
loopne
dec
dec
bound
fistpll
adc
lcall
jb
fwait
scas
ss
mov
imul
cmpsl
hlt
test
xorl
hlt
jge,pn
ret
dec
test
sub
push
es
mov
scas
int
mov
mov
sub
mov
sbb
mov
push
in
fnstsw
lock
dec
pop
mov
cltd
fucomip
mov
packssdw
stc
cmp
mov
dec
clc
cmpsl
mov
sub
and
call
adc
leave
test
and
ret
inc
push
lret
mov
insb
mov
mov
mov
pop
jne
scas
mov
add
sbb
xor
sahf
gs
je
jle
push
mov
jp
push
xchg
mov
adc
add
gs
ljmp
inc
jb
aam
lock
push
inc
iret
add
dec
out
ja
idiv
pop
out
cmp
sub
call
add
add
imul
mov
pop
dec
cs
scas
lret
nop
or
pop
mov
out
mov
rolb
lock
mov
imul
lock
sub
xchg
repnz
dec
movsb
jp
gs
push
sbb
sbb
mov
cmp
mov
adc
dec
and
cs
adc
cltd
adc
xchg
add
mov
mov
and
ljmp
push
lds
dec
push
lods
out
fldcw
jae
rorb
mov
fldt
and
push
or
xor
enter
pop
das
push
push
out
push
push
and
icebp
xchg
push
push
lret
lret
push
arpl
jae
jo
dec
iret
lea
pop
mov
sbb
lret
fnstsw
aas
sbb
pop
jmp
dec
push
and
jno
push
shr
inc
movsl
roll
cltd
ja
add
nop
inc
cmp
jp
sub
adc
sti
call
jge
dec
mov
setnp
fisubl
int3
sub
adc
or
outsb
cmp
inc
mov
jo
jecxz
or
test
adc
cmpsl
dec
mov
je
jno
hlt
cld
shlb
in
pop
pop
or
cmp
adc
mov
insl
testl
cmp
xor
sarl
dec
xor
imul
loope
xor
sti
movl
cmp
ja
ret
pop
cli
add
and
leave
mov
mov
mov
sub
jns
scas
mov
mov
cwtl
jne
out
lods
add
or
imul
mov
mov
or
je
jbe
dec
xor
cmp
pop
cmpsb
dec
push
add
nop
jle
sbb
movb
push
jns
addr16
cmc
add
mov
pop
jecxz
sti
mov
inc
repnz
mov
incb
add
cli
sbb
ret
adc
xor
sqrtps
sub
cmp
jl
fs
push
mov
push
mov
push
icebp
pop
xrstors
xchg
jmp
int
jmp
push
push
inc
lea
repz
mov
loop
adc
ss
add
jge
pop
mov
mov
lea
pop
cld
jb
mov
mov
adc
inc
ret
bnd
dec
pop
es
jnp
mulb
cld
lret
xor
sbb
cmp
dec
mov
leave
lea
jge
neg
and
pop
outsb
mov
inc
xor
fnsave
sub
mov
inc
shll
out
aad
popa
sbb
mov
inc
das
jmp
xlat
cs
cs
imul
inc
mov
je
ficompl
shl
sub
mov
iret
xor
cltd
ja
sbb
int3
inc
pop
lods
cwtl
int3
push
loop
insl
jnp
rolb
mov
mov
or
icebp
fld
shrl
pop
push
mov
mov
push
adc
sbb
scas
mov
inc
jg
and
scas
hlt
adc
rorb
mov
inc
mov
pushf
and
mov
mov
pop
xor
dec
xchg
xor
xlat
add
push
or
add
stos
call
fcoml
pop
mov
or
iret
sbb
xor
push
aaa
cs
clc
pop
jle
xchg
xchg
cmp
ret
xchg
jp
mov
repz
mov
mov
adc
out
pop
xchg
dec
lods
cmp
fdiv
ds
mov
movb
call
mov
or
mov
or
out
jg
ret
cmp
add
sahf
xor
sub
lea
mov
cmpsb
add
incb
add
mov
mov
lahf
cmpsl
movsl
push
xchg
mov
test
cmc
mov
enter
pop
dec
push
scas
adc
call
fsts
jp
aaa
scas
call
mov
jno
cmp
cld
sbb
mov
or
ret
adc
inc
insb
cmp
leave
enter
mov
mov
test
fs
xchg
daa
cmp
test
nop
cmp
jge
push
arpl
out
sbb
das
outsb
out
inc
fdivrs
aas
addr16
sahf
push
xor
in
jno
pop
repnz
gs
jae
imul
mov
jg
push
mov
xchg
les
cmp
scas
stc
sub
in
push
push
push
dec
ljmp
push
popa
fwait
sbb
or
mov
cmc
int3
jmp
jge
xorl
sub
jecxz
rol
sbb
test
rcrb
fsubs
adc
loope
cvtps2pd
cld
fidivl
inc
mov
mov
repz
loope
pop
or
les
int
jecxz
push
add
or
add
addr16
dec
out
cmp
push
mov
jp
bnd
cmp
inc
inc
mov
inc
rorl
fimuls
lods
cmp
jno
popf
pop
xor
xor
mov
arpl
mov
xor
shll
xorl
add
insl
not
enter
icebp
nop
in
jmp
or
mov
push
das
push
adc
bound
dec
in
movsb
leave
adc
jbe
push
imul
sar
or
add
and
lret
mov
sbb
popf
or
std
jmp
mulb
sub
sub
movl
scas
ret
push
mov
jno
out
lret
stc
std
in
mov
mov
std
cmp
repz
test
add
add
add
addr16
cwtl
cmpsl
xchg
mov
dec
enter
add
xchg
sbb
and
movsb
rcrb
mov
or
and
lret
sti
out
cmp
int3
sub
rcrb
pop
les
or
adc
sbb
and
xchg
push
push
push
arpl
xchg
das
popa
notb
xchg
jbe
add
mov
testb
mov
cmp
mov
test
aas
inc
cmp
cmc
pop
cmpsl
cmc
pop
cmp
mov
push
iret
sub
clc
aad
mov
xchg
push
push
mov
and
mov
rol
fisttps
fildll
jl
dec
pop
cmp
iret
pusha
mov
jo
push
dec
loopne
cmp
fs
lods
dec
jmp
mov
aas
push
push
bound
dec
xchg
mov
cld
faddl
loope
push
mov
sub
dec
pushf
sahf
or
mov
jb
cmpl
inc
inc
insb
loop
dec
mov
movsl
sahf
cmpsb
test
lcall
add
sub
fs
pop
dec
aaa
push
dec
es
or
bound
subb
stc
cmp
into
push
pop
js
je
vmovd
cmp
push
stos
jmp
movsb
xor
arpl
into
popa
pop
inc
pop
out
fsub
aad
fbstp
adc
mov
sub
jnp
insl
dec
cmc
pop
push
fdivr
xchg
pusha
jg
test
cmp
in
ljmp
scas
xchg
hlt
jns
pop
imul
cmpsl
mov
sbb
or
sbb
add
sbb
mov
stos
mov
sub
test
cmc
ss
add
icebp
lcall
push
push
js
sbb
out
jp
icebp
ret
sbb
out
mov
sub
push
cmpsb
push
mov
add
add
add
repnz
testb
inc
addr16
dec
mov
incb
add
sbb
mov
push
rorl
imul
outsl
movl
int3
outsl
add
leave
call
lcall
sbb
xor
lret
mov
sub
or
jbe
jne
imull
jbe
xchg
lcall
popf
jo
xchg
adc
mov
cmp
das
in
popa
jecxz
mov
push
or
in
mov
xorl
cmpsl
sub
jae
dec
inc
pop
pop
lret
and
into
imul
jns
push
lea
fimull
jge
push
or
fdiv
sbb
xchg
mov
mov
iret
imul
orb
xlat
fiaddl
adc
movsb
es
push
mov
pop
nop
fstpl
int3
das
movsb
fisubrl
fnstcw
jg
add
adc
nop
and
mov
xchg
std
ja
mov
gs
push
jl
push
leave
sbb
popl
dec
lret
andl
xor
fistps
aas
mov
cwtl
mov
loopne
xchg
clc
mov
xor
aad
lea
push
inc
incl
nop
sbb
rcrb
out
xchg
cmp
in
inc
fstpt
loop
jg
out
dec
dec
pop
and
fdivrs
cwtl
mov
sahf
cmp
outsb
mov
aas
or
adc
sbb
jns
or
xor
or
mov
out
inc
or
loope
scas
add
stos
mov
adc
data16
ja
mov
movsl
ljmp
jno
out
push
pop
xchg
andb
lahf
sbb
mov
mov
jg
imul
dec
testl
mov
dec
int3
data16
add
jl
jecxz
test
dec
cmp
add
inc
inc
popa
data16
gs
mov
cli
xchg
fisubrs
add
jp
sbb
sbb
fistl
push
push
fadds
aam
push
sub
jbe
es
and
xchg
push
jnp
adc
or
and
sbb
rolb
jg,pn
incl
scas
jae
cmp
addr16
cli
xchg
cli
xor
aad
fnstenv
sbb
in
fld
stc
mov
push
pop
icebp
aam
mov
sbb
out
insl
mov
in
out
dec
fwait
lret
stc
jle
cmp
imul
std
cmp
loope
xchg
dec
fs
addl
cmp
mov
rclb
xor
cwtl
add
inc
mov
or
cmp
adc
adc
dec
stc
mov
hlt
test
cmc
test
push
xor
jbe
into
mov
adc
sbb
pop
sahf
xchg
cmpl
mov
rcpps
xor
cmp
es
xchg
mov
jmp
inc
repz
ret
lock
mov
mov
popa
mov
sahf
jbe
cltd
into
sub
push
jl
iret
cs
xor
mov
aaa
jp
xchg
pop
clc
pop
mov
in
fldl2e
mov
xchg
out
repnz
dec
pushf
test
cmp
shl
mov
xor
pop
hlt
inc
repz
lret
jo
ds
insb
dec
test
cld
mov
xor
or
test
pop
insb
cmpsb
cmp
rorl
andb
jns
xor
das
mov
xchg
sahf
test
arpl
fwait
mov
nop
push
mov
push
int
pop
int3
dec
scas
or
iret
out
rcll
mov
inc
data16
pop
dec
dec
mov
iret
inc
mov
cmp
out
jno
mov
stos
xchg
mov
pop
dec
fwait
sbb
outsl
in
test
push
insb
xor
pop
lret
ja
xlat
xchg
add
mov
rcrl
repz
cli
cmp
adc
pop
das
mov
fsubrl
add
frstor
push
lret
fsubr
loopne
aad
clc
repz
je
cwtl
inc
lds
scas
stos
inc
repnz
and
int
xchg
xorb
jle
jnp
imul
dec
imul
inc
stos
jle
mov
in
push
adcl
xchg
lock
lea
aaa
mov
in
jne
cmp
sub
dec
sub
cmovp
sbb
js
pop
xchg
dec
test
xchg
insl
in
cs
xor
pop
ds
jae
cli
jmp
les
fnstcw
or
decb
jmp
inc
push
jae
push
into
clc
mov
adc
ficoms
insl
jb
xor
clc
repz
dec
lret
jnp
adc
xor
rcrl
push
fnstcw
inc
ss
lods
je
js
xchg
mov
sbb
mov
loopne
xor
xor
jg
aas
es
mov
mov
pop
adc
adc
jns
movsb
in
sbb
aad
or
and
shrl
dec
cmp
lcall
mov
inc
in
jb
addr16
sub
in
scas
sbb
pop
adc
mov
fwait
imul
xchg
sbb
sbb
out
pop
adc
xor
ret
rorb
repz
mov
rcrl
add
jnp
lods
arpl
addl
cmp
pop
mov
and
out
push
xchg
shrd
add
insb
add
cmp
dec
data16
jle
ds
cltd
mov
data16
mov
cmp
and
in
inc
jnp
dec
aas
out
cwtl
jns
iret
aas
mov
xchg
xchg
movsl
js
std
test
dec
jecxz
popf
pusha
sub
je
outsl
imul
push
sub
xchg
inc
mov
add
add
add
shlb
xchg
lcall
cmp
push
adc
incb
add
and
mov
mov
insb
jno
adc
cli
lahf
push
mov
and
aaa
imul
xchg
pop
fbld
pop
push
in
mov
outsl
or
jae
ja
and
sbb
repnz
fstpl
inc
add
mov
push
dec
xor
add
cmp
xor
in
or
mov
pushf
dec
jmp
and
shll
adc
pop
xor
rolb
jg
cld
outsl
sub
mov
sbb
loop
lcall
or
or
arpl
jle
mov
arpl
in
les
mov
int3
cmc
test
sbb
test
sbb
movsb
mov
fstp
cmp
ret
loop
jmp
push
and
push
push
mov
xchg
movsl
push
inc
adc
xchg
xor
dec
inc
add
jp
and
aad
and
cmp
dec
andb
popa
pop
sti
push
jp
imul
sbb
loopne
fld
cmp
call
outsb
pop
rorl
and
and
xchg
into
ret
cltd
pop
sbb
frstor
and
jmp
loop
sub
pusha
sbb
nop
push
roll
iret
add
fimuls
cmpsb
xor
sub
pop
and
mov
mull
stc
jns
or
ret
ja
push
cmp
cmp
mov
sbb
jge
sbb
add
push
mov
xlat
out
testl
ficomps
mov
or
xor
incl
xlat
add
pop
fiaddl
insb
test
stos
push
xor
sbb
fidivl
outsb
fwait
adc
mov
call
and
jb
add
fnstsw
mov
in
outsb
fs
mov
mov
add
add
add
es
sbb
cld
dec
mov
sbb
mov
sub
fsubs
or
mov
xor
mov
cmpsb
arpl
jle
cld
push
mov
movl
or
sahf
inc
outsb
mov
cli
sarb
ja
jnp
sti
sbb
mov
inc
into
lods
cmp
leave
lahf
mov
ss
repz
iret
jo
jne
add
ret
in
loop
testb
ret
test
add
xor
and
or
arpl
fbld
stos
push
mov
cltd
pop
push
mov
test
repnz
xchg
inc
imul
jmp
inc
rcl
push
lds
stc
pop
or
icebp
popa
mov
adc
sbb
ret
and
mov
jbe
push
aaa
ljmp
or
lds
out
cmpsb
sbbb
xchg
mov
pop
pop
mov
inc
sarb
cltd
repnz
shll
jmp
fsub
lea
sti
inc
seto
xlat
xor
popf
mov
sbb
sub
cwtl
and
popl
in
inc
push
sbb
out
aas
add
xchg
push
and
mov
sbb
push
sbbb
lods
jbe
and
test
xor
sub
xor
cmp
lock
stos
ja
cmpb
mov
xlat
icebp
jp
push
jno
jg
or
scas
and
addr16
sbb
cmp
push
shrb
sub
sarl
xlat
movsl
cwtl
leave
push
mov
in
into
jge
stos
mov
es
adc
into
or
jae
sbb
dec
clc
call
xchg
das
inc
lds
push
add
mov
fwait
add
inc
mov
jb
cmp
or
mov
add
add
add
dec
jg
rcrb
es
sbb
mov
aas
dec
test
aaa
lahf
repz
push
ret
and
and
xchg
fwait
cmpsl
lret
mov
jo
out
sbbb
and
pop
pop
clc
sbb
dec
jmp
sahf
sti
sti
ljmp
aaa
dec
pop
outsw
iret
scas
mov
ficompl
aad
pop
sbb
mov
mov
ffreep
adc
into
xchg
pop
out
popa
fmuls
pop
sub
icebp
dec
cmp
ret
call
jge
pop
scas
mov
std
mov
repnz
or
sbb
mov
cmpsb
jnp
inc
int3
adc
lock
xchg
push
adc
outsb
lahf
mov
jbe
fcmovnb
cmpsl
mov
ret
mov
fld
rsqrtps
test
mov
out
mov
mov
subl
dec
shrb
test
jns
adc
popf
imul
mov
xlat
dec
add
imul
mov
or
mov
lcall
lock
cmp
cmp
jns
jp
mulb
mov
repnz
fs
or
movsb
pop
loop
inc
ret
add
or
or
sub
adc
sub
mov
mov
sub
mov
mov
sbb
in
mov
xchg
iret
or
push
in
test
movsl
xchg
mov
xchg
dec
sub
das
mov
filds
mov
lods
inc
loop
jae
test
movsl
mov
popa
repnz
add
mov
imul
aaa
cmp
or
push
lds
imul
xor
sub
imul
inc
mov
cli
or
mov
in
mov
clc
add
clc
mov
cmp
mov
push
push
cltd
aam
add
incb
add
cwtl
xor
mov
enter
xor
ret
push
and
clc
cmp
add
pop
aad
sbbl
inc
insb
out
inc
sahf
jb
push
adc
or
xor
pushf
lret
subl
pushf
mov
mov
icebp
sub
mov
dec
or
outsb
xchg
rol
and
outsl
mov
hlt
enter
pop
mov
cmp
sahf
flds
jmp
mov
mov
shrl
add
or
sti
dec
pop
data16
nop
mov
push
int
mov
jbe
inc
in
scas
in
fmul
inc
test
xor
lret
pop
cmp
add
xchg
js
xchg
imul
test
lock
lds
nop
daa
movsb
xorl
mov
or
jmp
cmp
and
push
popa
mov
mov
add
je
xchg
lahf
jne
mov
inc
pop
sub
insb
inc
repz
or
sbb
mov
xor
ret
imul
mov
pop
and
mov
inc
cwtl
mov
jl
pop
mov
js
shr
insb
xchg
push
xlat
aas
mov
xchg
movsl
push
adcb
jmp
cs
sbb
sbb
call
mov
je
dec
xchg
push
mov
out
mov
and
push
lods
mov
cld
js
ffree
dec
pop
daa
add
psubb
pop
mov
dec
mov
sub
das
addb
pusha
or
fiadds
ret
nop
std
and
jl
adc
add
shlb
pop
mov
ds
mov
cli
cmp
faddl
add
sbb
out
idivl
test
js
jge
mov
add
fsubl
mov
xchg
stos
mov
or
pop
adcb
xor
adc
ror
jge
jp
adc
add
fdivs
es
mov
test
fcoms
lcall
pusha
pop
xlat
cmp
mov
or
mov
jo
shrl
adc
ss
sub
fsubrp
das
or
mov
jmp
inc
leave
repz
jl
andl
int3
outsl
ret
cmc
lock
pop
out
ljmp
cld
push
dec
inc
xor
shlb
sub
add
movsl
insb
inc
push
cs
loopne
cmc
mov
and
movb
sahf
jno
cmp
push
jecxz
lods
jl
pop
jl
imul
mov
test
and
into
jo
inc
cmp
fsubr
and
push
call
jl
cvtps2pi
jo
sbb
popa
xchg
in
orl
insl
sbb
dec
lret
xchg
jae
jne
stos
jmp
inc
aad
push
nop
in
sub
add
loope
dec
adc
nop
mov
arpl
clc
add
fstpt
cmp
les
cli
mov
jne
pop
pop
add
jge
stos
test
pop
jmp
cmpsl
inc
xchg
push
es
aad
jbe
rsqrtps
adc
or
ss
mov
shrd
jo
lcall
je
mov
sub
rcll
inc
inc
decb
dec
push
ret
fs
jb
and
mov
sbb
xor
dec
pop
jnp
xor
das
arpl
mov
shlb
push
cmp
push
enter
out
jnp
lret
outsb
pop
cwtl
push
inc
xchg
push
xor
jecxz
xchg
sub
mov
jbe
sub
or
xchg
sti
and
cmpsl
sub
in
insl
fiadds
add
sbb
fsin
out
fs
popf
outsb
mov
mov
add
and
and
add
daa
inc
test
repnz
data16
arpl
xor
xchg
sbb
adc
ret
jmp
jns
pop
adc
outsl
scas
loop
pop
fmuls
jo
test
sbb
out
clc
and
sti
mov
decb
xor
pop
xchg
dec
mov
outsl
cmp
sub
sbb
xor
fiadds
sub
inc
leave
xor
and
rcrl
roll
mov
icebp
mov
add
les
sbb
addr16
movsl
sbb
dec
inc
mov
push
mov
mov
dec
popf
mov
mov
sti
and
decb
mov
or
mov
mov
push
rcl
nop
xor
mov
or
lret
add
or
cld
mov
dec
subb
sub
and
aad
testl
shlb
je
xchg
rcr
ret
lods
pop
dec
push
jae
cmpsb
cmc
jbe
inc
mov
push
fistps
js
jp
inc
sbb
xor
jae
nop
rorl
int
jmp
cmc
inc
push
inc
lcall
icebp
das
or
out
pop
stos
mov
stos
rcll
cli
add
fimuls
xchg
test
nop
and
stos
popa
test
inc
mov
xchg
lock
fistl
dec
xor
or
mov
pop
mov
lcall
or
lret
add
xchg
fists
lds
mov
icebp
iret
lahf
hlt
outsl
addr16
hlt
xchg
or
imul
mov
mov
mov
shlb
inc
in
into
or
leave
loopne
jno
pop
cmp
push
in
rol
inc
test
adc
arpl
sti
adc
jl
dec
dec
and
inc
and
incb
add
xor
xchg
mov
cltd
push
xor
fsts
flds
in
cltd
mov
ret
xchg
and
xchg
scas
fs
cmp
fildl
sub
and
push
stc
push
insl
cmpsl
rcrb
push
jno
jp
xchg
xor
sbb
sbbl
xchg
negl
jg
pop
popf
pop
sub
es
data16
cmpsb
scas
fmuls
rcl
leave
add
ftst
cmpsl
mov
sub
ljmp
mov
movsb
push
pusha
inc
cli
jne
into
mov
dec
adc
fstps
xchg
push
add
push
out
lods
and
adc
cs
fildl
cmovne
ja
stos
xor
push
push
shlb
jmp
pop
test
dec
mov
imul
jmp
jle
jo
mov
fstps
stc
adc
das
lahf
mov
add
cmp
or
aas
test
mov
cmp
mov
repz
lret
mov
rorb
ljmp
jae
inc
and
add
xchg
cli
mov
sbb
decb
loopne
jae
outsl
xorl
jns
adc
push
add
cmpsl
push
mov
call
fdivs
mov
dec
jno
hlt
out
cmp
mov
pop
mov
mov
stos
lock
es
mov
push
xor
dec
cmc
xchg
cmp
cltd
loopne
xor
cli
incl
mov
xchg
shll
ret
jg
test
xchg
cmpsl
mov
aas
test
sbb
sbb
lcall
sbb
and
cpuid
xlat
jns
sbb
bound
xchg
mov
scas
push
loope
mov
add
add
add
add
and
xor
sub
xchg
int3
mov
add
hlt
sbb
inc
mov
pop
xchg
outsl
popa
test
mov
in
fists
xchg
pop
push
cmp
outsl
cmpsb
jmp
aas
in
fmull
scas
cltd
sar
mov
jb
adc
jnp
shll
and
ds
dec
jl
fisttpll
pop
pop
pop
and
mov
dec
fisttpl
jl
loop
nop
lahf
mov
in
or
adc
sbb
movsl
mov
subl
adc
insl
or
sub
sti
shll
popa
loop
int3
int
mov
jp
iret
and
mov
shlb
das
xor
add
es
add
and
popf
xchg
xor
cs
ljmp
pop
shll
pusha
stos
fcomip
mov
dec
mov
push
jbe
adcb
push
arpl
push
hlt
jo
loopne
jmp
fs
mov
stos
inc
shll
mov
inc
xchg
mov
icebp
adc
rcl
jmp
and
stc
sbb
xchg
aad
pop
rorb
mov
mov
andb
cwtl
fwait
int
add
xchg
hlt
mov
push
sub
fdecstp
imul
pop
out
fwait
js
das
xchg
adc
xchg
jecxz
ss
jne
iret
cmp
fdivrl
sbb
sub
pop
aas
push
push
ror
fdivrs
and
adc
aad
pop
xor
dec
and
cld
inc
imul
xor
mov
out
adc
aaa
jl
pop
das
adc
push
fdivrs
int
ret
jecxz
mov
pop
sbb
sbb
outsb
or
mov
sub
jmp
fistl
mov
outsb
jp
inc
movsl
add
pop
mov
jg
data16
sbb
and
add
add
add
lcall
or
daa
pop
jecxz
imul
aad
push
push
cmp
mov
pop
fdivs
mov
and
xchg
or
pop
aad
mov
pop
pushl
inc
pop
cs
cmc
out
cld
mov
popa
and
push
into
sub
or
shlb
inc
pop
xchg
jo
fs
sub
rclb
add
mov
xchg
adc
inc
xor
leave
pushf
rorl
dec
out
leave
fwait
fdivrl
sub
arpl
xchg
fldpi
inc
scas
and
push
xchg
push
xchg
cmc
jge
mov
fldl
mov
fsts
mov
pop
xchg
je
pop
push
int
and
xchg
pop
rcrl
xor
call
push
cwtl
pop
push
dec
add
cmp
stc
jg
mov
daa
sub
xchg
lret
add
leave
lods
scas
mov
les
mov
lock
lods
or
and
test
mov
stos
sub
cwtl
mov
and
imul
adcb
xchg
push
test
in
xchg
dec
sub
cmpsl
mov
dec
ffreep
gs
push
pusha
or
inc
test
sbb
lock
hlt
imul
mov
sub
ret
es
int
jmp
outsb
out
shl
pushf
or
xlat
sbbb
mov
dec
into
imul
das
sti
pop
addl
cmp
call
xor
ljmp
out
dec
jb
lahf
mov
faddl
cmp
js
andb
jl
daa
and
push
jno
cmp
dec
rcrl
pop
aad
pop
test
ljmp
fidivrs
pop
push
fwait
imul
add
add
add
add
pusha
jbe
out
test
stos
cmp
add
add
add
mov
push
jp
sub
and
or
bsf
sahf
insl
lods
mov
cmpsl
jae
cmc
pop
data16
idiv
add
mov
cli
mov
or
lock
stc
xchg
inc
mov
in
test
adcb
pop
push
jg
out
and
push
inc
or
inc
inc
xor
inc
jge
xor
xor
mov
or
rcl
shl
add
push
cmp
pop
into
adcb
test
jl
jmp
jae
mov
orb
call
push
repz
jnp
lret
cmpsb
jge
rcr
daa
ss
cltd
and
jecxz
push
iret
daa
mov
pop
xor
ja
fisubrs
leave
cwtl
cmpsl
sub
sbb
push
cld
adc
cmp
ds
dec
mov
jnp
call
mov
mov
sub
adcl
cld
add
ja,pt
sub
jae
out
shlb
inc
adc
sbb
sbb
add
stos
push
adc
pop
push
sub
jecxz
hlt
shr
cmp
mov
dec
sub
fisttpl
into
pop
movsb
sub
pop
jo
inc
jmp
icebp
daa
daa
pushf
jbe
iret
xchg
fsubl
and
loope
cmpsb
mov
push
push
std
pop
dec
mov
dec
bound
cmpb
xor
cltd
xlat
xchg
push
lahf
int
clc
push
mov
enter
pop
popa
mov
sbb
sbb
push
add
jne
mov
jno
mov
pop
mov
pop
call
pushf
cmc
out
in
mov
movsl
sbb
loopne
sarl
inc
inc
xor
mov
mov
adc
jecxz
sbb
and
push
add
push
sub
fucomip
addr16
lods
xlat
mov
add
add
add
lcall
xchg
push
aas
jp
ljmp
cs
xchg
outsl
mov
addr16
out
repz
in
jbe
sbb
fs
ljmp
cmp
cld
mov
dec
clc
aas
push
cmpsl
mov
jb
inc
xchg
and
mov
jae
pop
pop
push
push
push
push
decl
adc
sub
rcl
push
mov
xchg
jnp
ret
pop
imul
adc
mov
jle
pop
push
lret
fs
jb
push
jns
pop
es
dec
inc
dec
mov
pop
jns
mov
jl
stc
jp
cmp
ja
xchg
les
insb
stc
mov
ds
mov
lcall
loop
cmp
xlat
into
xchg
nop
outsb
lea
mov
cmpsb
lods
push
push
sub
arpl
mov
mov
bnd
sub
mov
mov
pop
loopne
add
cld
mov
es
movsl
pop
mov
or
lret
pop
arpl
dec
rol
out
mov
mov
mov
pop
push
imul
push
push
or
leave
mov
test
in
test
sahf
inc
xchg
cwtl
jne
lret
leave
movsbl
scas
lods
inc
imul
mov
jmp
mov
mov
repnz
andl
lods
test
inc
adc
and
mov
std
popa
lcall
pop
pop
pop
lds
pop
arpl
shll
cwtl
mov
movsb
cltd
adc
inc
icebp
mov
cmpl
ret
jge
rcrb
xchg
sbb
outsl
dec
insl
aam
out
popa
cltd
adc
push
or
mov
lahf
shl
adc
es
bound
repnz
add
insb
sub
outsl
daa
insl
push
addb
aas
push
pusha
adc
movb
incb
add
mov
cltd
jb
mov
inc
dec
mov
xchg
idivl
in
or
mov
mov
jmp
fisubrl
mov
pop
imul
push
dec
hlt
fcomip
loope
inc
mov
xor
notl
ss
inc
mov
fldcw
lods
in
jg
or
add
ret
or
sarl
hlt
mov
add
movsb
ds
hlt
imul
popa
jne
pushf
arpl
es
sti
mov
pop
mov
call
pop
incl
jne
mov
mov
jg
and
pop
sbb
pop
jns
sbb
adc
std
sbb
arpl
into
cmp
add
outsl
int
pop
subb
test
mov
xor
mov
in
lds
aam
icebp
jge
test
add
cld
cld
mov
jmp
ds
mov
pop
fildl
mov
push
enter
mov
adc
sub
and
mov
adc
insb
and
push
repnz
mov
in
cld
sub
aad
pop
out
pop
jge
inc
and
xchg
stc
sub
sarb
aam
and
cmp
icebp
idivl
sbb
lods
call
and
dec
lret
mov
mov
loop
cwtl
pop
test
shrb
or
mov
int
sbb
jle
mov
loopne
shl
addr16
lcall
rclb
cli
xchg
inc
in
jno
lock
mov
cmp
mov
lcall
mov
adc
jbe
jge
push
nop
rcrb
sub
fcomi
jp
sub
ds
call
cmpsb
ss
sbb
cmp
mov
xchg
jl
loope
sbb
mov
dec
stos
jne
mov
add
add
add
inc
lea
and
mov
out
leave
enter
xchg
ret
fs
add
add
add
fiaddl
sti
sbb
cmp
mov
mov
ja
in
xor
cmp
out
mov
shl
mov
xorb
testb
pop
sahf
fsubrs
outsb
dec
adc
sbbl
int3
pushf
je
jb
mov
repz
aas
adc
insl
cmp
test
xchg
dec
and
jge
ljmp
xor
mov
jo
stos
dec
jae
xchg
out
add
dec
push
pop
push
dec
adc
jnp
bound
aam
xchg
arpl
pop
or
and
scas
xchg
dec
jge
test
fcoms
insl
xor
stos
jns
mov
daa
mov
jg
in
adc
and
mov
test
imulb
addr16
insb
cld
rol
loope
pop
bound
sub
in
popf
sbb
add
rcll
fmuls
pop
push
mov
or
or
int
aas
mov
enter
psrld
jb
jae
lods
or
test
ret
cmp
cmp
outsb
cmp
cli
std
mov
inc
addb
mov
jb
cld
xchg
cli
stos
das
imul
xchg
and
pxor
xor
out
xor
pcmpeqb
adc
lret
je
outsb
dec
and
scas
nop
mov
test
cld
adc
das
jmp
in
xchg
fcoml
push
lret
int3
test
push
cmp
mov
lea
push
lea
xchg
and
popa
mov
cmc
aas
jo
mov
pop
adc
das
aas
xor
mov
mov
call
scas
pop
dec
leave
aad
movsl
sbb
outsl
nop
inc
mov
cmp
dec
lods
addr16
insb
cmc
jp
aaa
shlb
jbe
push
test
jl
outsl
and
lret
push
fcompl
pop
ret
jne
jo
sbb
cmp
add
hlt
cmp
mov
or
inc
ror
add
add
add
stc
push
stc
push
add
outsl
sbbb
mov
iret
add
adc
and
inc
lea
cwtl
mov
imul
or
mov
sub
cmp
and
das
pop
jno
jne
push
dec
xchg
ret
pushf
cmp
jle
outsl
clc
repnz
out
pop
add
inc
cld
mov
xorl
sbb
and
aas
scas
sub
shl
and
sbbb
pop
inc
push
mov
xchg
das
aam
ljmp
outsl
xor
sub
pop
jge,pn
xor
scas
into
add
push
or
fimuls
lea
rclb
or
mov
cli
testb
or
fistl
dec
ret
dec
je
and
dec
or
dec
fcmove
jge
and
push
das
sbb
adc
xchg
mov
mov
push
mov
cmp
add
loope
or
xchg
push
add
xchg
stos
out
xlat
addr16
into
js
pop
mov
out
insl
pop
mov
cs
or
daa
es
mov
addr16
jp
push
mov
imul
fdiv
cmp
mov
cli
loope
mov
add
cmp
cmp
jle
adc
mov
js
and
inc
ss
addr16
ss
movsb
and
inc
aam
pop
lret
test
movsl
repnz
mov
xor
pusha
iret
mov
jb
xchg
fsubrl
cwtl
outsb
push
cmp
inc
mov
cltd
sahf
outsl
adc
lods
jge
mov
imul
fidivs
pusha
and
push
xor
push
xor
xchg
inc
lods
divl
in
testb
xchg
add
push
ds
outsb
sbb
aam
dec
idiv
nop
xor
add
add
in
cmp
xor
imul
std
xor
sub
ss
jp
inc
imul
adc
sbb
dec
loop
frstpm(287
ret
and
inc
shl
mov
inc
imul
xor
xorb
sbb
inc
and
jle
and
inc
xchg
ss
sbb
jns
push
fucomip
push
push
addb
lds
lock
scas
lcall
dec
inc
add
mov
pop
xchg
xchg
adc
jle
jle
or
mov
sbb
cmpsb
cmp
insb
fcomp
sub
es
fdivs
add
lret
and
add
dec
add
int
in
fmull
xor
insl
lock
loopne
cmp
cmp
xchg
insl
fists
cwtl
shl
lret
or
pop
adc
loope
add
adc
rorl
mov
lret
stos
adc
sbb
sbb
gs
pop
mov
jg
jmp
mov
xchg
mov
in
inc
jnp
lret
out
and
push
ret
or
adc
faddl
pusha
jmp
jmp
movsl
or
push
mov
decl
and
sti
je
popf
sbb
sti
popa
xor
pop
mov
mov
mov
das
test
int
xor
dec
xor
inc
or
xor
sub
sbb
test
leave
filds
std
ss
xor
inc
xchg
dec
mov
mov
testl
jmp
cmpsb
push
xor
rolb
dec
call
mov
sbb
add
jle
ja
inc
dec
je
outsb
adc
push
pusha
cmp
lret
das
pop
outsl
pop
loopne
roll
add
mov
nop
xchg
addr16
add
add
add
sbb
adc
inc
dec
leave
adc
pop
inc
xchg
mov
and
pop
pop
push
je
pop
adc
mov
popl
push
adc
mov
or
shlb
mov
cmp
sbb
arpl
mov
xchg
jmp
jmp
pop
xchg
sub
loopne
mov
xor
lret
les
std
aaa
push
mov
bound
jg
shl
mov
cld
stos
push
ret
repz
sbb
lcall
xchg
das
adc
pop
jno
adc
mov
fsubs
fs
loope
je
fidivl
repz
call
jle
mov
mov
orl
ss
lahf
aaa
mov
inc
fstpt
pop
lea
xchg
pusha
jmp
and
xchg
dec
or
dec
das
das
or
and
pop
xor
dec
cmc
sbb
xor
and
xchg
mov
sub
push
loope
fldl
and
and
cmp
int
repnz
inc
inc
les
dec
mov
mov
or
pop
pop
sbb
aad
xor
nop
lea
cmp
repnz
or
ljmp
pop
xor
sub
xchg
jp
sbb
stos
sbb
or
in
cmp
out
pusha
jge
adc
push
dec
cmp
loop
icebp
cld
lods
push
push
jp
clc
jnp
mov
movl
ljmp
int
pop
pop
add
imul
xor
aaa
pop
pop
mov
sbb
mov
jge
pop
iret
ficoms
clc
or
adc
test
subl
in
in
jo
dec
dec
fs
repz
call
nop
sub
add
add
add
add
mov
in
dec
cmp
dec
fidivl
mov
incb
add
jb
scas
cld
sti
into
mov
push
jb
pop
and
push
xchg
mov
push
mov
or
and
in
cmpsb
push
popf
mov
lods
daa
xchg
jno
loopne
mov
dec
dec
int
ds
lods
pop
das
lcall
mov
mov
gs
push
lret
icebp
push
sub
lock
lret
shlb
imul
aam
out
jle
enter
scas
add
adc
ds
jne
rcrl
cld
adc
inc
xchg
sub
add
inc
add
sub
adc
sbb
mov
mov
cmp
mov
jno
loop
fcomps
mov
xor
test
jge
jno
xlat
push
loope
fisttpl
jmp
shl
stos
push
fs
xor
sbb
je
iret
sbb
sub
sbb
cmp
jg
leave
jle
insb
push
mov
lret
mov
sbb
adc
pop
fcomip
pop
sbb
arpl
or
insb
shll
test
lock
fisubrl
sub
or
adc
sub
jmp
cmpsl
jae
lahf
lods
sbb
cmp
push
push
lahf
in
mov
jne
inc
rclb
call
mov
imul
xchg
test
js
adc
mov
push
xor
data16
mov
add
icebp
mov
int
data16
outsb
ret
jns
xor
mov
addb
mov
mov
scas
mov
test
mov
repz
jle
ds
fcomps
js
inc
jbe
adc
arpl
ja
sbb
or
imul
push
jge
out
sbb
jnp
outsb
iret
lcall
inc
ret
push
dec
pop
pop
adc
xchg
jno
jp
mov
aaa
test
add
fldcw
sub
pop
mov
incb
add
mov
sahf
popf
xlat
stos
aad
xor
and
mov
aas
sarb
xchg
mov
mov
dec
push
mov
mov
mov
movsl
jp
stc
inc
xchg
lds
xor
add
dec
test
and
into
bound
mov
cmc
add
or
or
pop
push
jge
dec
sbb
test
in
push
stc
pop
sbb
lock
lahf
aad
sub
in
or
cmp
sbb
ljmp
mov
push
aaa
mov
push
mov
mov
movsb
cltd
pop
push
into
test
repz
aaa
xchg
mov
mov
lahf
insl
jno
ss
stos
int3
inc
enter
add
lea
shl
xor
push
adc
dec
out
lret
int3
mov
imul
rcrb
aam
sub
add
jle
push
mov
cmpb
jmp
fdivp
mov
inc
or
ds
fstps
cmp
sbb
xchg
jne
sub
std
inc
xchg
in
lods
stos
push
adc
mov
mov
je
outsl
add
xchg
lret
cltd
jmp
mov
jb
stos
lret
jnp
xchg
in
popa
ret
in
sbb
imul
inc
push
iret
cmp
mov
dec
aaa
jle
mov
jbe
dec
push
dec
dec
bound
xchg
add
fbld
sahf
andl
ss
inc
cmp
jecxz
jg
les
push
sub
test
mov
or
ja
outsl
fs
push
ficomps
data16
xor
sbb
adc
push
mov
xchg
pushf
js
ds
ljmp
jp
jbe
mov
push
adcb
jecxz
arpl
mov
lret
mov
dec
inc
lods
repnz
mov
push
std
call
fisttps
or
add
push
dec
pop
xchg
pusha
jmp
mov
add
incb
add
pusha
mov
stc
ret
repz
jg
dec
adc
xor
mov
or
mov
scas
jl
mov
dec
mov
pop
dec
adc
sbb
addr16
mov
test
mov
push
fnsave
scas
cmp
pop
sub
decl
insl
loope
aam
ss
test
mov
mov
xor
shlb
push
call
mov
cmp
pusha
cmpsl
subb
push
das
and
int
and
push
sbb
xorl
mov
jp
je
inc
xor
std
sti
stc
sbb
or
insb
add
mov
out
leave
cmpsl
mov
cltd
test
jecxz
xchg
pop
out
inc
shrl
lods
cwtl
add
je
sti
or
dec
pop
sahf
mov
pop
sti
xchg
filds
insb
test
cmp
divl
adc
in
and
xchg
test
xchg
negl
dec
out
inc
jo
out
jp
jne
stos
ss
adc
sub
icebp
and
call
mov
xor
mov
push
arpl
add
in
push
negl
mov
jo
iret
lret
dec
mov
mov
cmp
sub
cs
mov
pop
addb
test
push
das
popf
imul
mov
and
in
in
imul
xchg
fs
clc
sti
outsl
loope
push
dec
push
notl
pop
fildl
push
pop
bound
cld
and
mov
pop
lds
ret
stos
into
or
dec
xor
jno
xor
rcrb
fldenv
push
and
cmp
stos
stc
enter
push
pop
addr16
jge
add
or
dec
mov
sub
sub
or
mov
add
incb
add
push
jbe
pop
sub
jae
xor
call
pop
scas
xor
and
jno
aad
cmc
je
popf
js
out
add
fbld
movsl
and
jle
pop
in
push
mulb
idiv
std
fmuls
mov
jo
mov
movl
mov
lods
or
in
adc
or
mov
sbb
cld
and
add
ret
sbbl
stos
push
jo
leave
and
movsl
xchg
sbbb
lret
out
adc
fmuls
ficoms
sbb
xor
mov
shll
or
xchg
sbb
sbb
push
xchg
adc
mov
out
fwait
add
call
xchg
xor
les
cmpsl
xchg
mov
ja
in
pop
mov
in
cmpsb
lds
pop
and
inc
xor
cmp
dec
and
mov
mov
jns
pop
sub
jecxz
in
scas
mov
fists
adc
mov
sub
ficoml
sbb
aaa
test
out
dec
cli
dec
in
je
sub
dec
push
sub
xchg
loopne
xchg
fnstsw
aad
das
fwait
adc
insb
cwtl
mov
lods
lcall
insl
jge
mov
test
int
and
pop
fcomip
and
cmp
mov
cmpsl
cmp
jne
hlt
hlt
int
or
dec
or
addb
clc
dec
mov
adc
mov
js
stc
loop
mov
fsubs
inc
ficomps
pop
mov
imul
cmp
jb
mov
mov
aaa
popf
push
ret
push
dec
lds
jnp
push
mulb
mov
push
call
add
int
pop
inc
mov
add
ret
and
dec
repz
fldt
jb
mov
add
add
add
lahf
js
es
mov
dec
movsl
lods
shll
filds
and
pusha
sahf
shlb
xchg
xchg
ss
mov
test
repz
mov
dec
ljmp
or
xchg
jae
inc
lods
or
xor
imul
maxps
jno
cmpsb
in
lahf
push
xchg
ljmp
sbb
or
adc
push
lock
sub
fisttpll
leave
push
jo
xbegin
lods
pop
xor
or
cltd
gs
jp
loopne
sahf
or
fucom
fdivrs
aas
fidivs
gs
dec
push
cwtl
and
iret
jae
inc
inc
lcall
clc
add
into
mov
stos
mov
xor
out
mov
pop
inc
sahf
adc
mov
loope
or
int3
adc
icebp
cmpsl
into
or
jne
or
pushf
and
dec
cmp
popa
mov
negb
and
lods
out
lret
out
inc
ljmp
or
push
xor
jb
mov
adc
mov
mov
std
add
dec
repnz
pop
loopne
leave
pop
adc
aam
cmp
cmp
sti
jno
dec
pop
push
inc
in
jge
cld
dec
inc
mov
notb
movsl
shr
mov
dec
inc
add
add
sbbb
sbb
inc
shl
mov
pop
mov
sbb
popa
pop
sub
pusha
mov
dec
gs
push
xor
out
pop
aam
jbe
dec
cmpsl
cltd
test
faddl
cli
in
aas
adc
std
push
sub
les
cmp
jmp
scas
mov
jmp
insl
add
movsl
cmc
pop
ret
adc
sbb
out
stos
shlb
inc
daa
lods
add
lcall
jnp
push
mov
fdivrs
mov
add
incb
add
pandn
pop
imul
test
xchg
push
pushf
or
int
loope
add
sahf
les
pop
loopne
jb
xor
lcall
nop
sub
cmp
call
ja
sub
mov
in
js
test
cmp
mov
sarb
xor
out
xor
ficomps
dec
pop
cmovp
test
les
repnz
shll
daa
sbb
jg
cmp
clc
pop
je
fwait
fwait
dec
shl
js
jl
inc
dec
mov
push
mov
inc
mov
mov
sti
gs
adc
cmp
stos
fnstsw
push
ljmp
xor
loopne
mov
ljmp
jno
pop
rcrl
mov
fwait
inc
jb
push
invd
xchg
inc
xchg
jg
je
daa
stos
in
mov
vmovdqu
mov
fldenv
mov
pop
rcll
mov
sbb
sbb
ret
pop
jp
lret
insb
ss
pop
rorb
scas
mov
lock
aam
and
in
jno
dec
xor
add
and
dec
cmp
mov
pop
andl
xchg
in
out
and
push
fwait
mov
pop
push
fldl
sbb
pop
sub
fdiv
or
out
nop
ja
mov
aaa
mov
mov
mov
rolb
jns
icebp
int3
out
daa
mov
dec
lock
dec
jne
out
cmpsl
sbb
jno
xlat
js
rolb
cltd
pop
push
push
loop,pn
jp
adc
mov
dec
dec
in
test
shrb
pushf
mov
adc
out
ret
fimull
fsub
lods
jnp
xchg
add
or
adc
call
jns
lahf
mov
add
cmp
mov
lcall
add
add
add
rolb
dec
idivl
jg
xor
sbb
incb
add
dec
cld
mov
dec
mov
shr
leave
sbb
inc
ljmp
mov
aaa
lock
popaw
push
xor
outsb
xchg
lock
int3
xor
movsl
cltd
cmp
sub
mov
fs
adc
arpl
push
or
test
inc
dec
ret
sbb
dec
mov
sarl
lcall
inc
add
or
negb
lock
push
and
ror
mov
pop
ret
adc
mov
mov
lcall
mov
push
inc
call
icebp
pop
xor
shl
hlt
test
sub
sbb
xor
or
jecxz
leave
or
lods
js
mov
mov
dec
xchg
inc
pop
add
lea
jnp
or
fwait
xor
jg
push
pop
jb
les
fisttps
sub
scas
xchg
pop
cmp
dec
jg
cmp
mov
outsl
add
push
out
xchg
jle
or
stos
xor
ja
mov
jae
pcmpeqw
pop
or
xlat
cli
cmpsb
ss
xor
in
aas
lds
cmc
testl
imul
and
or
xor
fisttps
std
or
inc
or
loop
insl
test
cmp
xchg
push
fisubl
cld
mov
xchg
loop
aaa
scas
fisttps
mov
test
dec
dec
mov
mov
jae
loop
nop
js
movsb
aas
rolb
sub
repz
jge
jp
test
push
imul
sbb
jle
sub
push
fcoms
mov
fwait
dec
push
add
mov
ljmp
jbe
mov
inc
jecxz
xchg
xorl
int
out
cmp
pushf
or
lea
and
in
jb
sbb
pop
mov
mov
pop
push
jg
in
add
mov
call
mov
rorb
lods
fiadds
add
add
add
popl
mov
stc
popa
lahf
das
dec
mov
jo
jp
nop
bound
sub
xor
iret
sub
pop
nop
cmpsl
lea
fstpt
xchg
nop
jo
incl
pop
and
mov
push
mov
cmpsb
or
mov
sbb
cmp
xor
pop
xchg
loope
adc
pop
cmp
cmp
sarb
xlat
stc
lods
pop
jb
daa
js
fldl
pop
hlt
aam
shll
xor
dec
add
std
cmp
out
and
cld
push
jb
enter
lods
test
out
lret
subb
cmp
out
xor
pop
cld
gs
sub
lret
shll
fiaddl
in
xchg
mov
push
mov
push
mov
pop
inc
addr16
mov
ror
js
add
lods
xor
addr16
das
repz
mov
mov
rclb
or
push
pop
or
or
je
mov
and
cmp
cmp
je
push
push
cltd
push
adc
adcb
arpl
fidivrs
leave
pop
and
ja
pop
pop
leave
enter
sub
fisubl
stc
subb
notb
push
xchg
xor
xchg
mov
out
lds
pop
jo
sub
push
sbb
aam
cmp
mov
test
jnp
fdivrs
pop
outsl
aaa
flds
imul
es
aas
sbb
out
test
pop
mov
shll
out
mov
loop
movsl
mov
aaa
repz
repnz
xor
mov
out
push
repz
sub
sub
add
xor
jge
loopne
mov
push
movsb
and
mov
push
inc
ljmp
add
add
add
add
ficompl
mov
loopne
add
add
add
fnstenv
pop
xchg
sbb
mov
test
add
adc
jmp
and
ljmp
xchg
mov
dec
punpckhdq
cs
les
xchg
cltd
add
mov
jmp
daa
sti
gs
dec
jne
lods
dec
dec
inc
lret
xchg
jnp
cmc
jns
sbb
test
or
sub
cmp
imul
stos
mov
jae
clc
pop
sbb
cmpsl
lock
xchg
add
and
aas
popf
jg
push
adc
adc
xchg
movsl
sub
jle
rcrb
aas
mov
out
sti
xchg
and
jmp
jle
test
and
add
repz
testb
sahf
lcall
jne
add
sub
sub
or
stos
pop
negl
out
test
stos
and
mov
inc
lret
imul
ljmp
and
and
add
out
sti
cltd
push
negl
out
test
mov
push
dec
xchg
test
lods
aaa
insb
jbe
les
fisubl
mov
lea
test
inc
sub
mov
stos
jmp
stc
xchg
and
push
or
and
fwait
notl
movsb
leave
add
or
push
adc
mov
lods
stos
or
inc
cmp
push
mov
addr16
xchg
negb
jo
and
jl
in
hlt
or
jo
jg
in
xchg
mov
or
adc
add
mov
insb
xchg
pop
pop
les
out
shll
out
dec
lods
sbb
pushf
jo
pushf
testl
push
paddb
mov
nop
lahf
adc
in
xchg
push
jbe
mov
pop
pop
sbbb
sti
mov
sub
add
inc
stos
pop
sbb
cli
inc
cli
mov
mov
test
add
incb
add
pop
inc
add
std
mov
call
clc
sub
xchg
pushf
jge
push
sbb
pusha
fscale
fistps
cmp
inc
sbbl
fimuls
xchg
fwait
movsl
mov
lds
fadds
cmp
int3
add
js
and
mov
sarb
jns
aad
gs
cwtl
jnp
fs
scas
test
js
fiadds
xchg
xlat
das
out
xor
mov
clc
inc
pop
daa
mov
daa
and
mov
pop
fiaddl
dec
push
ret
xchg
push
enter
sbb
xchg
rolb
aam
idivl
xlat
mov
and
mov
push
mov
leave
xor
loop
out
cmp
and
das
jns
dec
lahf
out
push
scas
and
into
adc
push
xchg
inc
stos
cmp
sub
mov
adc
outsl
lcall
fisubs
icebp
mov
jp
imul
push
mov
sub
lods
out
outsb
gs
inc
xchg
and
inc
mov
mov
push
add
arpl
mov
nop
mov
mov
gs
sbb
xchg
repz
add
xchg
mov
cmp
insl
sbb
call
rcrb
push
mov
jns
mov
and
jmp
inc
daa
or
lret
adc
mov
enter
fcoml
inc
jge
push
sahf
and
sub
cmp
push
jl
or
adc
push
daa
xor
mov
jge
shr
pusha
pop
stos
popa
enter
ljmp
mov
mov
add
sub
pop
push
dec
xchg
dec
or
out
jecxz
pop
adc
push
test
cmp
add
mov
xlat
push
xlat
ja
out
push
lahf
push
mul
call
incb
add
push
or
mov
loope
mov
or
shll
push
outsb
ficoms
jne
popf
das
orb
sti
cmc
iret
aad
mov
jno
mov
push
cmpsl
and
test
jmp
scas
jae
in
out
sahf
mov
push
adc
in
and
lret
popa
push
cltd
or
int3
mov
popa
lds
or
ret
rcll
xor
arpl
push
mov
and
xlat
loopne
and
out
lods
repz
jne
iret
push
or
xor
jp
scas
in
cmpsb
aam
and
in
xor
cmp
cmp
cs
insb
dec
push
xor
pushf
jmp
xorb
mov
jne
arpl
aaa
movsb
shlb
adc
flds
adcb
and
jae
pop
outsb
out
mov
lods
sub
imul
stos
push
nopl
push
cmp
sbb
icebp
inc
lret
lahf
mov
je
or
mov
inc
js
dec
fld
pop
inc
mov
push
loop
xchg
add
push
add
jecxz
pusha
push
or
rolb
shlb
xor
imul
adc
lds
jge
shll
and
mov
jne
cmpb
mov
pop
sub
push
int
sub
loope
jmp
jo
jmp
adc
xchg
xor
enter
rorb
adc
sbb
or
push
cld
jae
stc
push
std
lock
and
xchg
pop
fmuls
dec
bswap
gs
pop
xor
subb
ret
popa
das
dec
andb
test
add
cltd
inc
cmp
movsb
mov
sub
cmp
out
subl
in
inc
ss
nop
outsb
push
cwtl
and
jne
jbe
cmovo
scas
mov
add
add
add
add
rcll
jmp
inc
clc
xchg
movsb
out
add
add
add
mov
pop
out
add
jmp
adc
cmc
std
enter
mov
stc
cmp
sbb
jo
loop
cltd
stos
insl
push
fnstenv
dec
dec
adc
rclb
dec
xchg
sub
loopne
insl
mov
mov
cmc
pop
sub
shll
bound
mov
jnp
push
fs
dec
insb
and
loop
lods
jb
push
aad
in
push
cmp
xchg
ljmp
and
mov
lret
mov
jmp
sub
push
inc
push
inc
adc
and
test
sub
sub
push
out
sub
mov
sub
fsubrs
xchg
test
push
popa
outsb
or
adc
imul
loopne
mov
dec
es
mov
mov
int
fldcw
mov
xchg
push
mov
sbb
sbb
lods
movsb
jg
pop
mov
repnz
pop
js
jp
fdivrs
mov
jp
testl
sub
test
mov
mov
push
mov
fdivs
insl
inc
in
sbb
push
push
cmp
lret
sub
fadds
int3
and
mov
flds
add
cmp
cmp
xchg
pop
cmp
adc
in
xlat
jns
push
xor
fs
test
lods
add
jb
aas
ficomps
pushf
addr16
loop
ret
and
into
mov
outsl
cmpsl
jle
loop
loope
cmp
in
xor
mov
add
dec
pop
out
jo
xchg
jo
dec
push
mov
pop
mov
aaa
push
ret
jo
mov
daa
hlt
inc
cld
clc
scas
lcall
adc
add
nop
sbb
sahf
mov
and
mov
and
loop
xor
arpl
in
inc
lcall
add
negb
mov
outsb
stc
dec
mov
add
add
popf
or
mov
rorb
cmp
lcall
in
dec
popf
leave
xlat
mov
aas
jge
sub
adc
sbb
pop
mov
mov
ret
sub
mov
in
fwait
scas
stos
lods
pusha
scas
movsl
jge
dec
mov
and
rcl
stos
enter
test
sub
fwait
jo
in
fldcw
and
fcoml
fwait
or
jg
sbb
jb
enter
lcall
cwtl
aas
fists
jle
test
hlt
sahf
idivl
cltd
sbb
jb
rclb
aas
xorl
hlt
mov
shl
std
test
mov
call
mov
pop
sbb
cmp
xchg
sbb
repnz
scas
xchg
leave
test
inc
loope
lahf
sub
in
sbb
sub
ss
and
mov
nop
inc
mov
daa
lcall
imul
or
jnp
enter
je
dec
jb
mov
decb
je
jge
mov
xor
idivl
xchg
out
pop
mov
ds
int
fcmove
lcall
pop
pop
push
xchg
imul
mov
inc
push
jl
icebp
xor
cmc
adc
xchg
mov
push
outsb
pushf
mov
mov
movsl
mov
gs
add
aad
inc
imul
cwtl
inc
insb
out
aad
test
pushf
orl
mov
lret
xlat
dec
lea
jns
movsl
mov
shrl
scas
or
fists
mov
aam
push
movsl
scas
cwtl
cmpsl
clc
jge
cmp
popf
push
cmpsl
or
int
xchg
lock
testb
fisubrl
dec
sbb
stos
fldt
ljmp
loopne
adc
inc
icebp
in
mov
sbb
add
push
push
jnp
outsl
jno
dec
jmp
ljmp
inc
stos
fldl
pop
pop
js
mov
xor
jmp
aaa
mov
mov
add
icebp
lea
out
jl
stos
sbb
xorb
or
mov
fstl
pop
paddq
push
cmp
iret
and
mov
xchg
sub
stos
adc
jns
cltd
loope
ret
push
in
clc
jnp
or
mov
lods
hlt
faddl
push
stos
ss
das
imul
sbb
cmpsb
inc
cwtl
sub
sbb
scas
pop
lds
jp
mov
jbe
inc
dec
lret
and
test
lods
popf
test
int
mov
ljmp
test
ljmp
fsubrs
mov
in
lret
or
sub
mov
decl
ljmp
inc
scas
outsl
push
mov
adc
ret
fwait
xlat
ja
sbb
lret
sub
sub
shll
add
out
les
inc
mov
das
or
pushf
xor
fimuls
xchg
mov
insl
in
push
push
cmpsb
dec
nop
push
int3
push
aad
pop
and
or
mov
aam
xor
add
xor
scas
loopne
out
jae
inc
es
movsl
in
mov
and
jecxz
or
in
jns
push
call
in
adc
mov
xor
loop
push
aad
xor
inc
or
adc
and
in
xorl
push
enter
or
cmp
pop
xchg
ljmp
xchg
xchg
outsl
insb
push
and
adc
cmc
imul
and
push
arpl
in
mov
push
stc
mov
xchg
mov
inc
push
xor
ja
xor
jl
mull
cltd
enter
mov
stc
popf
jne
xchg
inc
sahf
in
add
incb
add
int
pop
stc
jle
fsubrs
add
xchg
ss
adc
icebp
ja
add
jbe
ja
or
pop
pop
outsl
cmp
std
xor
dec
rcrb
popf
push
push
lods
fs
dec
lret
and
jle
mov
aas
jbe
sahf
insb
cmp
inc
orl
xchg
xor
cmc
mov
and
fstl
test
or
dec
out
add
push
mov
loop
sub
out
je
test
mov
scas
dec
out
fisubl
outsl
scas
jnp
fiadds
mov
jle
fimuls
cmp
sub
andb
scas
mov
add
push
cltd
inc
mov
dec
ret
and
jp
pop
pop
cmp
pop
data16
int
cmp
mov
inc
mov
or
in
or
les
lret
outsb
sbb
jb
lock
out
int
jae
jecxz
data16
or
inc
jmp
rep
or
scas
cs
movsl
imull
xchg
lret
push
ficomps
adc
insb
cmpsl
and
add
xor
mov
dec
jae
inc
mull
mov
loop
dec
xor
xor
pop
push
jae
push
outsl
mov
adc
hlt
push
xor
pop
jl
test
adc
hlt
cmc
sahf
outsb
or
xchg
lds
outsl
push
pop
aad
movsb
xor
or
mov
inc
inc
mov
jmp
insb
push
jl
pop
mov
in
mov
mov
daa
mov
push
mov
pop
enter
mov
lcall
pop
push
cmp
inc
roll
fs
sub
inc
fiaddl
xchg
cli
inc
fildl
push
jbe
mov
push
cltd
mov
sub
enter
inc
movsl
out
fmuls
imul
or
push
rcrl
jns
sbb
jge
and
dec
xor
pushf
negb
add
add
jo
pop
xor
stc
into
jno
mov
out
sub
ret
cli
and
mov
mov
in
pop
ret
sbb
sbb
js
imul
movsb
mov
js
or
xchg
mov
paddq
jno
mov
fisubs
sub
jbe
fs
rcr
mov
notl
ds
inc
cltd
and
mov
add
xor
and
cmp
mov
sti
pop
dec
xchg
aad
dec
jl
add
mov
daa
or
cmp
and
and
addr16
subb
cmp
dec
pop
imul
push
mov
and
xchg
and
sbb
xchg
loope
pop
inc
movsl
mov
mov
mov
cmc
mov
scas
adc
mov
jno
dec
xor
popf
pop
adc
lahf
jbe
mov
add
repnz
lods
push
rcrl
add
jnp
xchg
dec
data16
fistl
ljmp
popf
clc
push
insl
dec
and
sbb
out
cmp
test
mov
and
outsb
fistpl
jne
inc
cmpsl
ret
gs
sub
inc
jb
outsl
js
mov
and
jle
fldenv
in
push
out
push
or
sbb
cld
jnp
sub
sarl
sub
push
adc
std
cmp
gs
cmpsb
jge
xchg
pop
add
mov
outsl
push
rclb
pop
mov
inc
inc
loopne
add
dec
mov
cmp
push
jo
fwait
jo
std
xchg
jl
out
jb
icebp
sub
adc
or
push
dec
pop
lret
pushf
add
rorb
aam
scas
inc
jle
xchg
lock
mov
push
lret
add
add
roll
pop
arpl
pop
int
lock
incb
add
mov
in
add
lahf
popa
xchg
in
f2xm1
cmpsl
aaa
leave
jo
fdivrl
adc
pop
rcr
sub
and
aad
loopne
sahf
pop
fisubs
dec
inc
int3
cmp
lds
mov
cmp
and
ret
pop
fidivl
push
push
xchg
iret
aam
add
insb
jno
lock
sti
add
mov
test
mov
jle
sub
mov
shll
xchg
js
stc
and
mov
xchg
in
loope
xchg
fsubrl
cmpsl
dec
mov
jno
aas
cmp
int3
mov
lahf
mov
repnz
pop
and
push
pop
mov
xchg
mov
mov
shrl
xchg
jb
mov
movsl
jne
push
jae
in
lds
vphaddubw
mov
pop
mov
outsl
jecxz
inc
sbb
lods
push
add
adcb
xor
adc
xchg
hlt
test
fisttpl
mov
adc
outsb
out
mov
pop
data16
pushf
adc
xor
fsubrl
xor
ret
lock
push
jae
lods
dec
dec
xor
test
push
into
add
xchg
xlat
call
cwtl
ror
pop
push
xor
pop
pusha
repnz
aaa
out
cmp
movsl
cmpsl
xor
push
sbb
xor
and
add
in
dec
imul
pop
adc
cmp
mov
xchg
lret
xchg
ret
or
shll
int3
fisttps
stos
imul
dec
sub
mov
mov
sbb
push
insb
jae
sbb
out
loopne
in
push
mov
movsl
push
into
and
addb
sbb
pushf
cli
mov
xchg
out
cltd
push
in
dec
movsb
cwtl
repnz
incb
add
xor
repnz
inc
and
in
push
insb
xchg
dec
test
lods
mov
lds
fcomi
inc
into
mov
jmp
xchg
cli
cmp
xchg
orb
lock
stos
mov
mov
fs
out
cmp
push
cmp
fcoms
push
mov
sbb
dec
mov
push
cmp
mov
repz
mov
dec
add
loope
dec
mov
arpl
sub
shl
and
mov
pop
aam
push
es
push
inc
sbb
pop
mov
mov
lods
sbb
xor
nop
add
loope
push
xorl
insb
adc
es
push
sub
ds
ret
cmp
mov
jno
sbb
dec
movsl
cmpsl
sub
mov
clc
or
pop
adc
sbb
out
push
popa
push
mov
inc
pusha
imul
out
xchg
xor
outsb
pop
lcall
fdivl
orl
push
cmpsl
push
lret
push
test
jmp
or
or
mov
insl
mov
mov
sub
and
movl
loope
pop
adc
jnp
inc
lahf
add
mov
jmp
add
idivb
sub
arpl
fists
addr16
cmp
inc
fcmovnb
sub
add
cmc
loop
fsubrp
xor
nop
shr
insl
xchg
push
popf
mov
ret
in
sbb
lods
push
push
out
mov
or
add
scas
cmp
outsb
xchg
idiv
jae
rorl
aas
sub
loopne
add
call
and
stos
iret
lret
dec
or
jb
test
ljmp
js
ljmp
mov
stc
add
lcall
leavew
and
insb
dec
test
incb
add
pop
push
cmc
pop
addb
mov
test
popf
sub
and
ret
arpl
or
outsl
and
cmpsb
lret
cld
jge
fcomps
xchg
cmp
inc
sbb
or
ljmp
jo
idivl
and
pop
xchg
je
push
and
fldenv
inc
mov
movq
lcall
ret
pusha
and
aam
in
inc
test
mov
clc
and
imul
pop
lcall
and
rclb
lcall
pop
and
push
adc
push
cmpsb
sub
sub
pop
hlt
insl
cmpsb
push
xchg
ja
cli
pop
and
and
out
sahf
mov
push
les
insl
mov
xor
out
sarb
adc
and
sub
bound
mov
jb
cmp
push
out
sbb
repz
imul
repnz
movsb
add
bswap
insb
pop
les
test
and
mov
cmpsl
and
dec
mov
mov
sbb
jl
gs
out
sbb
outsb
adc
loop
inc
push
out
scas
push
cs
shlb
test
add
cmpb
dec
mov
add
icebp
xchg
fst
stc
dec
xor
loope
lahf
in
in
or
shll
ror
fs
mov
xchg
adcb
ja
test
xchg
out
xor
mov
pop
sbbb
loope
sub
mov
aad
in
jbe
add
icebp
mov
je
pusha
adc
das
pop
or
push
mov
mov
xchg
ja
dec
cli
mov
sti
inc
into
ret
jb
jp
xor
mov
inc
sbb
insl
adc
dec
jo
mov
fcoms
add
add
add
add
iret
cmc
sti
pushf
and
push
dec
sbb
lea
add
pop
int
andl
sub
push
imul
sahf
xchg
sarl
mov
sbb
sbb
mov
lods
dec
testb
scas
aas
pusha
xchg
push
push
pusha
xor
xchg
test
or
leave
rolb
add
dec
dec
lods
push
rcr
lock
xor
std
dec
shll
lcall
mov
or
andps
pop
repz
sub
xor
arpl
mov
mov
movsb
pop
or
and
push
push
pop
mov
popa
and
out
and
hlt
push
cmp
ret
stos
mov
add
dec
scas
push
xor
push
pop
pop
mov
shl
movsb
inc
xlat
ja
mov
lea
inc
xchg
mov
inc
ret
fsts
xchg
jge
cmpsb
xchg
add
push
pushf
sbb
cmp
mov
fstl
inc
adc
pop
mov
mov
ja
shlb
cs
dec
inc
xchg
xor
aad
and
test
add
fsubrl
dec
mov
aad
and
idiv
repz
std
bound
cli
hlt
inc
mov
pusha
loopne
xor
pushf
cli
or
mov
ficoml
rol
push
or
dec
xlat
jmp
mov
dec
cmp
shlb
lcall
sar
xchg
add
sub
ror
popf
sti
cmpsl
sbb
sub
or
lods
aas
gs
xchg
sti
add
movsl
jg
out
jbe
stc
lds
sub
sahf
pop
inc
arpl
rorl
test
mov
les
sbb
lret
test
testb
jg
push
clc
add
inc
ret
cli
in
aad
fisubrl
jge
mov
in
ds
inc
mov
shrb
jae
lahf
sbb
fildll
out
mov
shlb
add
std
cmp
stc
jl
stc
jne
inc
sub
add
add
add
das
rorb
add
out
or
cmpsl
enter
insl
xor
hlt
jp
test
lods
mov
adc
pop
aad
push
repz
add
mov
aad
xor
cmp
and
test
int3
sti
jmp
sti
xor
push
pushf
push
clc
and
es
mov
sahf
push
adc
sub
mov
lahf
jmp
in
clc
scas
inc
or
push
aam
sub
int3
loop
insl
add
xchg
in
cs
sti
mov
std
sti
or
fdivr
outsl
sub
bound
push
loop
pushf
pop
dec
loop
ljmp
cmp
lahf
xor
insb
enter
jnp
and
cld
negl
pop
test
jns
cmpsl
std
jle
mov
xchg
dec
jbe
nop
cmp
cmp
sbb
rclb
out
xor
adc
push
nop
inc
daa
and
das
mov
pop
push
sbb
fdivp
mov
push
mov
push
decb
sbb
mov
sbb
jo
sbb
cmc
pushf
fsts
scas
inc
pop
stos
jecxz
mov
outsl
mov
add
push
ja
xchg
cmp
out
jnp
sbb
sbb
or
fcoms
dec
sub
dec
and
aad
pop
sub
ret
dec
dec
int3
mov
jne
mov
fstpl
aaa
push
jmp
cmc
les
lcall
pop
rolb
mov
repnz
mov
xor
xor
repz
div
mov
cld
adcb
mov
inc
stos
jo
subl
andl
