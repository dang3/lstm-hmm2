push
mov
sub
movl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
push
push
mov
mov
xor
or
sub
or
mov
lea
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
sbb
xor
or
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
mov
adc
mov
movl
movzwl
sub
mov
or
movl
subl
mov
mov
sbb
mov
xor
inc
mov
orl
add
movzwl
xor
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
xor
orl
add
movl
jmp
mov
mov
mov
mov
movl
inc
movl
cmp
movl
jb
mov
addl
mov
adcl
xor
orl
add
jmp
add
mov
not
mov
addl
xor
sub
mov
add
movzwl
mov
mov
movzwl
mov
xor
add
mov
jmp
mov
je
je
leave
imul
jnp
jnp
cwtl
jnp
ror
sarb
add
xchg
mov
decb
dec
jge
xchg
sub
pusha
ja
stos
js
insl
inc
js
inc
mov
clc
xchg
sti
mov
or
int3
pop
fs
call
lock
loope
out
sti
aad
jmp
dec
int3
sahf
loop
clc
push
cmpsb
les
and
jne
jl
push
cwtl
fs
arpl
insb
in
lret
mov
xchg
cld
sub
sub
mov
mov
in
mov
dec
movsb
sub
sbb
xchg
inc
testb
or
test
cmp
mov
in
test
mov
popa
jle
inc
aad
mov
jae
aas
jmp
sub
push
xlat
jp
inc
or
ficoml
mov
push
in
inc
call
inc
mov
fwait
mov
lds
cli
dec
in
xor
leave
cli
add
int
aaa
pop
cmp
movsb
ljmp
es
leave
jbe
sahf
pop
imul
sub
fimuls
mov
loopne
lock
in
push
adc
and
xchg
js
mov
das
lret
lret
sbb
pusha
mov
mov
and
inc
scas
in
movsl
push
movsl
cmp
das
testb
push
adc
scas
mov
test
jg
mov
mov
rclb
je
addr16
adc
inc
adc
es
mov
add
mov
xchg
inc
scas
hlt
xor
add
dec
lea
lock
out
aad
repnz
xor
ja
push
imul
or
sbb
xchg
popa
jbe
out
pop
insl
dec
movsb
es
nop
in
ret
outsl
jge
adc
jns
jae
fwait
dec
add
out
push
aaa
xor
loop
out
cli
pop
pop
lock
mov
cmp
xorl
std
jns
das
push
pop
xor
aas
or
jns,pn
stos
add
rcrb
pop
inc
in
inc
cli
adc
mov
clc
pushf
fwait
push
mov
pop
pop
fildll
fs
jle
mov
jbe
mov
sbbb
sbb
mov
popa
clc
fsubs
nopl
mov
std
fpatan
or
nop
push
inc
xchg
push
insl
add
add
sbbl
xchg
mov
or
loope
cmp
int3
xchg
sahf
mov
mov
aaa
in
cmpsl
lcall
jge
int3
stos
fwait
sbb
mov
out
xlat
pop
fucomi
pop
xchg
cmpsb
or
adc
stc
adc
push
std
sbb
xchg
xorb
rcrl
sub
mov
and
mov
aam
mov
mov
push
jge
cmpsl
mov
mov
scas
rcll
pop
mov
mov
sub
sbb
das
adc
pop
es
dec
ss
or
and
shl
mov
push
push
sbb
jnp
or
add
rol
icebp
jb
mov
inc
sti
repz
add
pop
lock
es
adc
pushf
scas
shlb
pop
lds
xchg
push
scas
int
cli
push
mov
inc
sarb
stos
into
sub
loop
call
or
add
sub
push
sub
dec
adcl
pushf
loopne
ret
dec
mov
jl
pushf
xor
dec
in
negl
mov
orl
sti
cmpsl
push
rcrl
pop
dec
sbb
or
jl
rol
stc
leave
pop
shll
mov
rcl
cmc
sar
xor
aam
in
mov
jl
jnp
sbb
push
pushl
ljmp
cltd
pop
mov
cld
xlat
ljmp
add
arpl
sbbl
mov
aad
mov
leave
scas
push
cmp
call
inc
fdivs
push
aas
orb
mov
ss
je
fstl
outsl
adc
lds
push
in
inc
fisubs
aam
andl
dec
jle
lcall
inc
adc
sub
psubw
dec
loope
cmp
lret
dec
sti
loope
in
ja
ds
das
inc
pop
test
int3
xchg
adc
dec
sub
loop
cltd
xchg
push
lcall
push
subl
sysret
sbb
inc
movsl
jle
setp
in
cwtl
sbb
sti
insb
and
add
aas
and
cld
jecxz
xchg
imul
pop
jl
add
popa
inc
hlt
push
mov
fadds
mov
jg
out
outsl
sbb
xor
mov
mov
cmp
repz
inc
jp
ds
rep
cmp
push
xor
xchg
xor
and
inc
pop
lock
add
jne
jge
add
aas
or
sbb
outsl
lcall
mov
mov
xor
and
xchg
sbb
ret
lock
daa
js
mov
stc
xchg
adc
sbb
sbb
leave
andb
mov
mov
xchg
add
mov
push
mov
inc
jp
rcrl
xorl
push
mov
sbbl
or
mov
lods
fiaddl
push
fstps
xchg
in
push
ljmp
jb
lret
dec
jnp
data16
sub
enter
clc
insb
cmp
inc
dec
inc
xor
test
inc
rclb
jl
dec
xor
scas
cmpsl
out
push
xor
adc
push
fldl
jne
sarb
dec
iret
sbb
adc
enter
mov
ret
mov
push
xor
imul
dec
fadds
mov
lds
jae
rcrl
xchg
mov
repnz
fwait
cmpsl
inc
iret
call
outsb
sti
in
push
and
xor
fst
es
push
shr
mov
or
dec
daa
std
cld
jg
icebp
adc
sarb
push
mov
ljmp
nop
cmp
imul
ljmp
inc
fldt
mov
ror
adc
xchg
mov
xchg
pop
xchg
fcoml
sbb
jae
bound
loope
fstpt
add
nop
inc
imul
jbe
pop
xor
lds
ds
xchg
jne
int
inc
movsb
int3
add
mov
cmp
dec
ror
jecxz
mov
or
adc
or
int3
es
adc
lret
sub
add
adc
and
inc
xlat
cmpsl
lret
and
mov
daa
jbe
mov
les
sub
add
je
xchg
and
ss
cmpsl
aam
sbb
loopne
aaa
out
and
pusha
dec
mov
rolb
scas
insl
aam
dec
add
lret
subb
cmp
ret
inc
dec
pop
es
outsb
sub
ret
mov
in
jo
cmpsl
cwtl
dec
mov
movsb
nop
sub
xchg
stc
decb
iret
fxch
lods
push
sbb
mov
cmp
push
jecxz
mov
add
lahf
fsqrt
testl
jns
rcl
pop
leave
dec
add
outsb
xchg
push
mov
or
pop
cwtl
les
fcoml
mov
pop
and
sti
inc
testl
int3
subl
fwait
test
iret
cmpsl
clc
lcall
push
or
add
push
and
xchg
aas
sbb
xor
dec
dec
das
out
sub
daa
xor
pop
jl
sbb
pop
lahf
call
xorb
loopne
xchg
out
repz
andb
fcmovb
jecxz
testl
std
jg
out
inc
ret
outsb
scas
test
mov
insl
mov
or
lea
enter
sub
cli
pop
aam
cld
loop
outsl
int
or
pop
test
jae
cld
xchg
jge
cmp
rorl
sbb
jge
sub
inc
pop
add
inc
adc
pop
xchg
sbb
insl
mov
fwait
stos
push
bound
jno
cli
push
andl
cmp
sbb
mov
and
dec
imul
daa
leave
icebp
or
not
movsl
sbb
dec
loop
pop
sbb
sbbl
cmp
movsb
les
jbe
es
fimull
dec
and
jmp
insl
dec
fstpt
mov
jge
aam
lret
push
test
adc
adc
xchg
add
mov
sbb
adc
inc
lahf
insb
out
stos
bound
push
push
shlb
or
dec
roll
cmp
jle
push
lahf
push
cli
xchg
arpl
fs
je
out
push
imul
out
xchg
push
outsl
fstl
xor
or
xor
test
adc
pop
xchg
mov
jae
cmc
hlt
pop
xor
or
push
sbb
adc
mov
xor
cmpsb
insb
mov
jnp
and
xchg
dec
dec
test
test
pop
mov
sbb
mov
dec
or
inc
cli
mov
jg
fsubp
stos
sbb
lret
andb
movb
daa
in
sahf
jbe
dec
mov
inc
pop
int
cli
lods
sub
inc
in
in
dec
in
pop
cmp
cmp
xor
inc
mov
xchg
and
inc
add
ret
lahf
push
adc
mov
lcall
stos
inc
ret
and
out
cmp
mov
clc
rcrb
xor
jbe
movsb
pop
mov
push
or
add
inc
lds
jp
jb
and
cmp
ds
jge
cmp
fsubr
lcall
stos
xor
loop
mov
or
xchg
mov
pop
int
mov
push
mov
fcoml
jo
cltd
fists
adc
and
xor
push
push
sbb
inc
cmp
aam
fisubrs
adc
pop
sbbb
int
subb
icebp
es
outsl
lods
testb
testb
xchg
jb,pt
mov
js
ret
insl
inc
mov
or
xor
js
shlb
lcall
adc
xor
mov
rolb
lret
test
stos
ficoms
push
mov
cmpsb
inc
dec
xor
pushf
lds
lods
je
sbb
jp
roll
test
idiv
std
popa
ja
or
pop
out
pop
cmp
iret
sarb
push
mov
inc
repz
loopne
xchg
cmp
cmp
inc
lds
pop
faddl
xchg
stos
jo
mov
mov
lcall
or
movsb
rep
cmp
in
repnz
outsl
add
cmp
or
and
mov
testl
movsb
mov
push
fildll
ja
xor
pop
dec
mov
out
test
mov
mov
lret
call
cmp
lods
jmp
cmpsl
inc
mov
int3
clc
cs
jle
pop
adc
repnz
mov
sarb
inc
pop
aaa
xchg
fwait
xchg
push
std
adc
or
jbe
icebp
clc
push
scas
mov
lods
leave
add
xchg
pop
popl
mov
push
and
aaa
add
dec
cmpsl
fwait
mov
xchg
out
sub
jecxz
jl
inc
push
cmpsl
cmp
mov
xchg
adc
xchg
ficoml
hlt
xchg
aas
mov
out
addr16
jbe
enter
push
lret
insb
xlat
out
mov
mov
xor
inc
rcll
out
int3
sar
push
or
xor
jns
insb
insb
clc
mov
or
pop
and
pop
fxch
sbb
mul
dec
xchg
xchg
cwtl
mov
adc
lret
clc
test
fisubrl
gs
mov
mov
add
pop
jo
push
mov
cli
push
lret
cmp
push
in
inc
int
push
cwtl
aaa
leave
cli
lds
das
loope
push
cmp
stos
cmp
enter
pusha
ret
mov
out
adc
into
lock
mov
and
mov
sbb
dec
jg
fwait
inc
xor
jns
dec
push
lcall
fildl
jle
xor
js
das
fsubrp
jg
inc
popa
mov
aas
imul
jae
cs
loopne
stos
lock
xchg
jge
cli
or
lret
shl
popa
dec
movsb
addr16
xlat
movsl
adc
mov
loope
sbbb
sbb
pop
xor
test
gs
rcl
mov
sub
shl
movsl
xor
inc
xchg
aad
inc
xchg
stos
ret
js
adc
in
ret
jae
ss
pop
push
movsb
pusha
lods
cmp
gs
pop
repnz
or
stos
jmp
and
in
sub
cmc
loope
mov
push
add
pop
and
cmp
call
dec
xchg
inc
jmp
sub
jbe
movb
pushf
repnz
fsubrs
addr16
jmp
or
sub
jae
xchg
or
inc
or
lods
enter
jo
xchg
dec
sbb
ljmp
pop
addr16
incb
test
push
pop
es
shlb
adc
lea
xor
jle
push
push
dec
fwait
data16
leave
jns
mulb
or
or
adc
adc
inc
jge
cmc
dec
dec
pop
stos
test
out
sbb
out
jbe
das
cmp
or
and
or
and
add
fstl
inc
push
add
out
ret
xlat
mov
mov
push
adc
mov
xchg
inc
push
in
into
mov
adc
cltd
and
lcall
adc
and
addr16
jns
pushf
pop
fdivs
mov
cwtl
repz
dec
cmovle
jne
out
sahf
cmp
inc
sbb
test
les
or
xor
shlb
sti
inc
pushf
push
xchg
inc
loope
mov
ja
push
cmp
pushl
sub
jnp
sbb
hlt
and
inc
xor
scas
insb
lret
pushf
jb
mov
mov
in
mov
and
jno
leave
idivl
dec
repz
mov
adc
aaa
fpatan
cmp
and
dec
fwait
jmp
or
ret
mov
gs
or
add
adc
ret
cld
imul
int3
js
dec
mov
xchg
push
ds
sub
mov
push
or
js
es
fnstsw
pop
int
sbb
or
pop
cmpsb
add
jnp
pop
add
ja
or
jge
sbb
xchg
hlt
sbb
sbb
pop
sbb
push
adc
jg
sbb
call
lods
pop
sbb
popa
inc
cmp
test
roll
std
aas
mov
bound
dec
shrb
lret
mov
mov
fwait
lds
cltd
outsb
mov
stos
sub
dec
lods
push
outsl
cmp
sbb
cmp
mov
loope
mov
and
pop
cbtw
cmp
add
adc
xlat
sub
popf
xchg
test
loop
cmp
mov
mov
lods
jle
inc
js
lcall
inc
mov
xchg
lcall
in
stos
dec
in
or
testw
add
inc
mov
daa
cwtl
icebp
xchg
aad
js
cs
inc
loop
sbb
sub
jnp
adc
push
fists
mov
inc
adc
nop
gs
pop
xor
fcoml
and
or
lret
jge
scas
test
xchg
inc
les
add
pop
cli
push
xchg
popa
sbb
mov
jecxz
pop
pop
xchg
lods
out
cmp
dec
cmp
or
mov
xchg
add
and
ret
cmp
pop
or
jae
outsb
jne
lret
xchg
adc
aam
xor
inc
jle
inc
add
nop
mov
fmul
add
sbb
xchg
mov
mov
dec
and
icebp
push
inc
cmp
push
gs
popa
movsb
xor
jecxz
pop
rolb
hlt
cmpl
lock
in
cmp
sub
std
out
loopw
out
jl
xchg
xorb
popa
dec
pop
push
and
mov
push
fildll
aam
xor
jae
pushf
jp
jb
lds
gs
ret
popf
or
cwtl
arpl
add
js
in
pop
dec
scas
jmp
and
loope
sbb
dec
imul
gs
xor
mov
xchg
bound
insb
push
test
pop
cwtl
sti
cmp
xor
lea
add
pusha
and
cmp
mov
shll
stc
loopne
loope
push
aaa
jae
lock
insb
loope
lcall
mov
inc
inc
push
mov
les
clc
dec
xorb
repz
addps
cmp
xchg
rorb
fs
push
and
lret
adc
nop
pop
stos
push
sub
jno
test
xchg
scas
mov
inc
jo
clc
popa
andl
ret
sub
jae
pop
por
mov
sbb
adcl
push
lock
rorl
dec
idivb
jmp
fcomps
sbb
ss
mov
xchg
add
inc
xor
xchg
nop
pop
sbb
pop
fidivs
push
hlt
scas
insl
sub
aaa
pop
mov
sbb
insl
jb
jl
xor
push
add
mov
out
jl
cmp
fsubs
shll
sti
sbb
cmpsb
xlat
fsubrl
clc
loopne
dec
push
mov
jo
sahf
or
and
fdivl
cltd
xchg
or
out
lods
pop
in
cmpb
mov
inc
sahf
mov
mov
and
fists
or
loopne
sbb
push
xchg
cltd
int
iret
push
lret
loop
pcmpeqw
xor
mov
mov
iret
pop
mov
adc
loope
sbb
adc
stos
dec
jb
stos
fs
and
dec
or
clc
nop
and
push
movsl
scas
and
add
dec
and
or
bound
xchg
orl
addr16
cmp
jge
mov
loop
lea
js
aaa
lret
movsl
cli
pop
and
addr16
adc
stc
sbb
sbb
xchg
shlb
mov
cmp
mov
add
cmp
sub
jg
push
jg
shrb
mov
stc
sbb
addl
dec
pusha
jle
lock
clc
ret
popf
jbe
nop
and
or
sub
mov
xlat
fidivs
mov
ljmp
pmulhw
dec
and
loop
fsubrs
mull
or
daa
push
mov
dec
sbb
sbb
pop
jmp
aas
mov
or
jg
push
cmc
rorb
fistps
inc
cmc
cmp
mov
popa
out
ficoms
xchg
sbb
mov
rcr
and
jge
xchg
aam
lret
mov
xchg
inc
adc
jnp
into
fsub
inc
dec
cld
mov
pop
and
jle
sub
movsl
mov
add
pop
xor
push
sub
xchg
push
jno
xchg
sub
and
scas
mov
jbe
pop
push
pop
sahf
jmp
test
add
or
mov
out
mov
mov
xlat
mov
leave
fcoms
das
cli
jecxz
leave
xor
jns
lcall
mov
mov
repnz
sbb
jl
jge
rep
movaps
jmp
cmp
pusha
pop
fwait
add
pop
loope
out
ficoms
inc
addb
sarb
xchg
dec
add
ret
sbb
push
and
or
out
jne
xchg
mov
das
test
or
jbe
mov
mov
cmpb
cwtl
test
outsl
and
test
fisttpl
iret
inc
sub
aad
jge
xlat
push
les
push
jge
imul
enter
cmp
sti
sbb
mov
insb
ret
sub
les
mov
sbb
sub
cltd
fmul
out
add
out
and
sahf
in
sbb
dec
push
pop
inc
arpl
and
pop
into
ret
out
or
jo
icebp
gs
mov
jl
leave
add
dec
push
pop
dec
add
mov
out
lock
xor
lods
inc
mov
stos
mov
adc
in
subl
adc
inc
or
hlt
adc
jg
jp
mov
nop
sub
pop
insl
int
dec
sub
icebp
int3
aas
icebp
stos
xchg
mov
int
xor
adc
rolb
das
inc
mov
and
pop
push
fstp
test
inc
inc
add
xor
fisubl
push
push
jb
ss
mov
in
in
call
pop
cs
cmp
fstpt
xchg
mov
inc
xor
xchg
xor
jp
inc
xorb
notb
outsl
push
jb
jbe
inc
outsl
sub
lds
lcall
ja
scas
mov
dec
dec
pusha
cmp
imul
mov
or
rcrl
dec
mov
lock
and
dec
xor
popf
lret
cmpsb
aas
clc
repnz
dec
test
stc
xor
push
or
insl
jecxz
fisttpll
adc
xchg
xchg
and
imull
xor
adc
sarl
push
jmp
in
push
lods
mov
sub
xchg
dec
in
je
test
pop
pop
imul
add
adc
mov
ror
gs
outsl
inc
xchg
mov
adc
add
and
sti
ss
ja
call
lret
pop
arpl
rorl
mov
imul
mov
pop
push
rclb
and
jo
jl
rcll
or
insb
movsb
addb
into
pop
push
shl
mov
clc
hlt
rorb
clc
sbb
loop
cmp
push
xor
lods
jecxz,pn
dec
mov
sar
fisttpll
push
mov
mov
push
mov
sub
jno
add
andl
popf
adcb
dec
push
stos
out
sub
xchg
jae
testb
cmpsb
dec
mov
es
push
and
inc
pop
popf
dec
xchg
lea
jg
in
out
mov
aaa
dec
sbb
inc
inc
jge
add
dec
leave
and
xchg
test
dec
mov
adc
cltd
fcomp
xchg
ss
lret
arpl
sub
out
push
or
cmp
cld
ljmp
ret
aas
into
jp
rolb
hlt
leave
mov
bound
insb
cmp
orl
push
push
movsb
inc
xor
push
aad
jmp
sub
jp
imul
jnp
insl
lods
mov
incb
xchg
xchg
in
mov
test
add
clc
xchg
mov
jo
clc
mov
sbb
jmp
or
je
sahf
lea
mov
out
sarl
jl
sti
pushf
sbb
jb
cs
xchg
sbb
push
scas
adc
mov
pop
fisubrl
fstpl
cld
fisttpll
inc
out
mov
push
test
xchg
pop
imul
adc
into
adc
in
test
xor
aam
outsb
dec
or
stos
ljmp
pop
fdiv
scas
mov
lds
fsubrl
stc
scas
push
stos
xor
std
stos
clc
lea
cmc
or
cmp
inc
icebp
adc
outsl
popa
rcrb
sti
xor
jg
fdivrl
stc
je
mov
mull
push
repnz
shl
fisttpl
mov
stos
mov
jae
or
and
mov
sub
in
jns
jp
aaa
into
outsl
popa
adc
jo
sbb
sahf
xlat
sub
outsl
aam
out
jo
pop
aam
int
xor
pop
lcall
cld
dec
xchg
inc
add
fcmovnu
push
fcom
lds
mov
push
push
bnd
mov
imul
shlb
inc
mov
fs
gs
pop
xor
cli
sbb
jnp
adc
cwtl
inc
iret
in
cli
and
scas
or
out
cmp
clc
in
andb
mov
scas
dec
outsl
popa
test
ss
aas
sbb
shll
mov
cmp
scas
cwtl
jmp
jnp
cmp
xchg
xchg
sub
push
cmp
pop
popf
inc
stos
les
sub
rcrb
outsl
push
mov
stc
xchg
aaa
adc
mov
cmp
lock
inc
jge
and
gs
ja
jp
movsb
dec
outsb
cmpsl
aaa
iret
sub
test
or
leave
loopne
xchg
pop
cmp
fdivrl
repz
xlat
add
cmp
xchg
jmp
cltd
scas
pop
mov
movsl
nop
loopw
clc
out
aas
cwtl
shlb
clc
and
int3
loop
adc
jae
shl
out
mov
mov
sar
jecxz
dec
bound
fisttpl
mov
lea
repnz
cmpb
cmp
or
scas
lret
test
daa
rolb
xor
mov
cld
aad
cmpb
hlt
icebp
into
js
insl
in
negb
mov
cmc
jo
iret
push
xlat
xchg
jle
stc
cmpb
dec
adc
in
and
sub
stc
add
mov
test
cmp
lods
add
in
mov
inc
xchg
popf
jnp
sbb
scas
mov
cmpsb
repnz
outsb
cmp
aam
mov
shll
sub
ret
fyl2x
dec
das
sbb
inc
sbb
iret
test
push
rorb
shll
inc
push
roll
or
daa
add
mov
loope
mov
mov
and
dec
fs
cmpb
shlb
scas
dec
and
mov
mov
fisubrl
push
push
sahf
jp
mov
cmpsb
mov
fwait
addr16
out
push
shrl
pop
loopne
test
xlat
adc
pop
fs
ret
cld
xlat
cwtl
mov
lds
jge
stc
inc
push
inc
insb
dec
dec
pop
sbb
add
add
clc
dec
lds
mov
push
in
stc
rcrb
leave
pushf
inc
mov
add
fwait
xor
leave
in
pop
fldt
movd
push
jmp
insb
fdivrs
pop
xchg
add
dec
add
and
sti
xchg
loop
and
repnz
movsb
dec
dec
imul
pop
es
pop
push
mov
ljmp
mov
push
jae
insl
sub
sarb
adc
pushl
fcoms
inc
notl
sub
jle
ja
or
mulb
xor
int
lcall
stos
mov
pop
and
mov
cltd
inc
testl
into
shrb
scas
es
aam
lods
aam
inc
fiadds
rclb
fwait
leave
imul
rorl
pop
xchg
mov
mov
loope
lret
cmp
pop
aam
cmp
sarb
hlt
pusha
test
dec
jl
leave
loop
fcompl
or
jp
and
xchg
inc
xchg
out
ja
lret
sahf
decl
mov
aas
imul
dec
xor
into
and
inc
mov
addr16
jnp
dec
fcomps
xchg
jl
xor
shr
pop
push
and
lcall
cld
notb
out
xchg
and
sbb
shll
les
jno
xchg
imul
xchg
jns
mov
mov
add
das
inc
jl
mov
cltd
pop
movsl
ljmp
push
cmp
cmpsl
push
mov
cmc
out
ret
mov
jp
push
ficoml
adc
and
jle
inc
dec
lret
cmp
call
sbb
mov
xchg
insl
dec
pushf
pushf
lods
outsl
dec
xchg
loope
mov
jb
subl
adc
xchg
pop
ds
daa
xchg
cmp
cmp
xchg
push
jge
out
cmpsl
mov
pop
jo
call
add
xor
dec
and
inc
or
jbe
loope
outsb
sbb
pop
cmpsl
dec
and
roll
pop
xor
and
mov
inc
arpl
ret
or
lret
in
out
in
sub
pop
ljmp
jg
mov
jmp
mov
cmpsb
pop
std
xchg
roll
mov
xor
xlat
pusha
les
push
mov
pop
add
inc
inc
push
and
std
mov
adc
clc
add
push
dec
insb
push
mov
add
adcl
push
sbb
jmp
lods
lret
ja
inc
in
ret
icebp
mov
pop
sub
xchg
dec
mov
push
push
sbb
xchg
xchg
rorb
nop
arpl
lret
mov
inc
and
sub
jns
shr
imul
out
add
inc
pop
add
mov
jno
cmp
lahf
adc
js
pop
cld
pop
decb
insb
push
xlat
cmp
xor
xchg
push
xchg
or
jmp
je
jbe
daa
dec
mov
mov
xchg
push
dec
in
xchg
pop
push
adc
mov
daa
mov
mov
mov
fsubl
mov
xchg
out
mov
pop
cltd
xchg
sbbl
xchg
das
sarb
mov
sbb
push
xchg
bound
movsb
cmp
inc
push
nop
dec
cltd
popf
lock
cmp
mov
pusha
aam
lods
pop
aaa
push
notl
adcb
pop
cmpsl
push
loop
mov
sahf
push
cmp
pop
les
and
push
in
pop
xor
sub
into
das
call
jnp
shrl
xchg
lret
lret
push
insb
pop
lods
push
out
inc
rol
dec
test
jns
add
mov
imul
inc
enter
push
inc
sahf
movsl
popf
sub
bound
shlb
pop
xor
cld
jnp
loop
test
push
xlat
ds
mov
out
mov
inc
and
dec
lea
rorl
mov
inc
js
jo
mov
lods
sti
add
adc
push
addr16
push
mov
loop
arpl
pop
pusha
lahf
lret
lods
or
pop
xchg
cmp
int
sahf
shll
sub
jae
inc
sbb
cmc
xchg
out
mov
popa
xchg
test
jns
cwtl
imul
mov
leave
add
push
mov
mov
rol
loope
add
mov
outsl
fisubl
pop
mov
test
cs
jnp
mov
inc
test
sti
fdivl
lret
lods
jmp
cmp
push
ja
icebp
movsl
and
pusha
sbbb
or
lods
jae
jbe
dec
xor
stc
inc
hlt
stos
addr16
sub
cltd
out
dec
and
dec
mov
xor
iret
mov
sbb
xchg
mov
cmpsl
or
lret
frstor
jl
jl
sbb
out
pop
adc
std
mov
add
xchg
mov
add
or
xor
repz
mov
ljmp
loope
jb
mov
mov
jne
loop
mov
jg
push
sub
out
xchg
inc
call
out
int
lret
sbb
sub
data16
enter
scas
psrlw
hlt
insb
sahf
adc
mov
ds
and
ret
lcall
mov
sbb
push
das
add
adc
add
push
std
scas
out
loopne
mov
nop
das
cmpsl
jmp
orb
and
mov
pop
popf
aas
outsl
mov
out
std
xor
or
sbb
jecxz
aaa
lret
or
or
xor
dec
mov
inc
push
xchg
mov
sub
enter
or
xor
movlps
push
daa
push
push
sbb
jge
mov
inc
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
mov
jmp
mov
sub
xor
mov
mov
mov
xor
mov
mov
xor
xor
xor
sub
sbb
add
adc
xor
mov
mov
xor
mov
mov
mov
mov
mov
cmp
je
jmp
and
and
popf
sub
jnp
cwtl
jnp
xor
push
jl
shlb
jo
push
xchg
push
and
pushf
hlt
sub
iret
xor
outsl
cmp
imul
xor
repz
mov
nop
daa
inc
jge
or
fsubrs
inc
dec
pop
fwait
nop
sar
test
inc
pop
dec
inc
sarb
movsl
jmp
bound
add
pop
xlat
xchg
in
mull
pop
or
cmp
fst
adc
sbb
and
jns
test
push
and
inc
push
les
pop
mov
mov
outsl
dec
cltd
pop
sti
sbb
bound
inc
jle
push
fs
and
das
inc
mov
sbb
mov
jg
out
sub
xchg
je
fdivr
dec
hlt
dec
and
push
or
xchg
mov
ja
mov
sbb
std
pop
pop
jns
mov
call
cmc
test
pop
rcll
cmpsl
mov
push
cmc
push
imul
rolb
std
cmp
jb
push
add
loope
out
out
lock
or
stc
leave
mov
xchg
lds
add
jg
push
int
fldcw
xor
out
pminub
lcall
mov
mov
jns
outsl
mov
mov
mov
in
xor
aaa
iret
fistl
or
push
xor
insl
dec
in
adc
pop
push
pop
mov
sub
frstor
popf
add
mov
outsb
lcall
or
ret
out
push
aam
cwtl
push
in
ret
push
pop
xchg
sub
jns
mov
stos
xchg
fdivp
mov
jae
sub
ret
mov
xor
add
popf
adc
cwtl
mov
daa
mov
mov
leave
in
adc
push
shlb
inc
rclb
sbb
int
xchg
iret
stos
sbb
pop
push
jae
mov
ljmp
xlat
jmp
adc
stos
cwtl
es
sti
int3
inc
and
test
nop
stc
mov
and
jo
std
ja
sub
lock
rcll
mov
sbb
fcmovne
cs
iret
push
test
mov
xor
clc
dec
xchg
adc
les
add
hlt
rcll
mov
ljmp
adc
ljmp
adc
xchg
inc
sub
xor
xor
gs
jns
cmp
cld
in
into
aaa
xchg
jbe
mov
aas
jb
xor
sbb
mov
sbb
out
imul
daa
xchg
mov
jns
cli
clc
jl
dec
cmc
lds
push
scas
inc
in
stc
mov
fwait
cmpsb
push
inc
lods
shlb
push
jecxz
sarb
xlat
rdmsr
sbb
cmp
ja
sub
pop
stc
jmp
sbb
cld
push
std
rcll
aad
ljmp
xchg
push
dec
sahf
loop
mov
lret
int
test
ljmp
in
or
lcall
les
dec
pop
xchg
sarb
xor
lock
pushf
rcrb
adc
cmc
fcomps
add
mov
xchg
fdivrl
jns
push
mov
mov
insb
push
shll
cmpsb
inc
or
mov
jmp
pop
xor
into
dec
push
outsb
addr16
out
hlt
bound
xor
jmp
rorl
and
hlt
adc
subb
addr16
inc
icebp
int3
ljmp
fxch
sbb
cmp
in
jg
loope
insl
sti
push
pop
in
and
mov
lahf
es
xchg
inc
mov
lret
ret
repnz
in
pop
js
js
mov
lds
inc
pop
pop
popf
bnd
pop
es
or
mov
mov
push
aas
arpl
pushf
cld
mov
loope
test
sarb
ss
mov
loope
rol
pop
inc
fmuls
fldenv
pushf
movsb
in
xchg
jns
int
xchg
or
sbb
imul
mulb
sbb
cs
in
imul
shlb
and
push
push
stos
fnstsw
or
rcr
sub
pop
mov
or
xchg
sub
lods
mov
adc
bound
popf
ja
adc
pusha
mov
imul
pusha
jge
and
sub
in
sbb
aaa
jge
xor
xor
lds
add
enter
pushf
or
call
mov
mov
lods
xor
push
ljmp
xchg
sahf
xor
fistl
outsl
test
xchg
gs
and
and
jmp
pop
jne
leave
insb
into
mov
lahf
movsl
xor
in
aaa
or
insb
cmpsl
and
jg
and
adc
repnz
jge
lea
xchg
movsb
int
jno
into
subb
cmp
fidivrs
xchg
add
out
sbb
xchg
jbe
sbb
xchg
pop
push
inc
lods
into
mov
mov
divb
mov
sub
push
pop
addl
sub
push
cmp
dec
js
cmp
lahf
add
lock
movsb
iret
nop
add
cs
ret
jo
mov
mov
mov
lods
shrb
ja
push
xor
mov
push
and
pop
add
xchg
rorb
faddl
cs
das
inc
out
cmc
jge
sub
add
xchg
fildl
xchg
idiv
sub
dec
mov
pop
or
push
sbb
jmp
pop
jge
dec
bound
jmp
add
aas
xor
mov
mov
pop
scas
in
mov
xchg
cmp
mov
scas
std
dec
test
loope
loop
xchg
pop
xor
mov
pop
call
pop
push
jle
inc
mov
inc
mov
fmull
dec
iretw
inc
aad
insb
shll
xor
in
mov
popa
enter
pusha
add
jb
pop
outsb
addb
jecxz
pop
mov
pop
lcall
fs
adc
cmp
sar
decb
arpl
and
pop
dec
fstps
xor
add
cmpps
push
pop
or
scas
push
dec
movb
cmc
loope
and
jb
and
sbb
pushf
jo
gs
push
stc
icebp
dec
dec
adc
or
push
jno
mov
cmpl
fcmove
sti
push
sub
cltd
mov
ficoml
enter
xor
inc
mov
stc
in
aaa
cmc
mov
in
dec
stos
mov
jb
icebp
push
aas
in
push
cwtl
leave
mov
push
mov
and
in
xor
mov
sub
xor
mov
enter
cld
adc
fnstcw
in
add
rclb
push
clc
push
sar
aaa
adc
int3
clc
in
push
add
jle
adc
mov
cmp
and
hlt
repz
sbb
sub
repz
cmp
cmp
fcom
fs
dec
jecxz
xor
jne
iret
out
cmp
add
mov
insb
or
in
jnp
pop
mov
hlt
lea
pushf
jge
dec
loope
jbe
jmp
cmp
sub
jecxz
and
mov
rcrl
in
cmp
das
shrb
fbld
pop
mov
sbb
add
fmul
ds
subb
pop
rolb
adc
jle
and
sbb
cmp
cmpsl
enter
xor
cmp
lock
insl
es
xor
loope
jecxz
das
rclb
out
cmp
shrl
rcl
or
fmuls
push
pop
or
jnp
shll
pusha
sbb
daa
popf
call
addl
push
jb
jmp
repz
inc
pop
mov
add
cmp
mov
dec
stos
mov
jbe
bound
mov
mov
or
jnp,pt
ret
ret
std
xchg
cli
test
push
lea
mov
push
or
or
arpl
or
int3
jne
inc
jo
dec
bound
je
push
push
dec
nop
and
push
std
movsb
add
mov
dec
lock
mov
pop
jp
pop
aad
stc
push
dec
outsb
push
imul
daa
xchg
cmp
sbb
jmp
push
fnstsw
in
pop
mov
sbb
sbb
je
mov
fsub
dec
push
push
lret
push
cltd
icebp
mov
into
in
stc
fsub
adc
cld
and
notl
xor
lret
imull
jnp
sub
stc
imul
xchg
cmp
andl
int
out
pop
lret
out
push
cs
adc
ss
fcomp
shll
fxch
sub
add
dec
mov
repz
fstl
jne
fdiv
nop
cmp
mov
jmp
mov
xor
or
sahf
sahf
std
push
push
cmpsl
fs
pop
int
mov
out
add
loopne
push
and
aaa
mov
movsl
loop
rorb
enter
shl
xchg
lods
jle
cld
fs
push
xchg
repz
or
xor
dec
jae
popa
ret
or
rcr
mov
fiaddl
mov
in
jbe
push
scas
jo
hlt
xor
push
or
or
scas
rcrl
push
xchg
xchg
push
jns
dec
jb
push
push
in
mov
adc
sub
sub
inc
mov
imul
dec
mov
xor
mov
adc
cmpsb
ret
inc
mov
stos
shlb
nop
les
pop
rorb
sahf
jno
lods
pop
mov
push
pop
xchg
rcll
hlt
stos
fistl
mov
mov
and
lock
sti
mov
sahf
sahf
fistpl
push
adc
out
push
in
bound
dec
sbb
xor
out
jbe
movsb
cmpsb
pop
lods
sub
or
mov
mov
sar
push
push
cmpsb
xchg
out
fstps
decl
rcll
mov
adc
jns
jmp
popa
sbb
push
cmp
mov
xchg
jle
aad
fimuls
loope
subb
idivb
movsb
out
into
ljmp
jno
mov
dec
jg
push
inc
cmp
cltd
addr16
mov
lret
adc
je
adc
mov
test
ja
inc
lock
xlat
or
pop
xor
or
rclb
adc
fsubs
out
jmp
dec
jl
int3
pop
ret
xor
lods
arpl
mov
lret
mov
or
sbb
repnz
push
add
push
mov
arpl
sub
mov
adc
mov
out
push
mov
cmp
adc
mov
cmp
sub
fiadds
xchg
xor
addl
ljmp
andl
cmp
mov
jb
xor
add
mov
in
mov
xchg
push
and
out
pushf
dec
sub
test
add
enter
out
inc
and
loopne
outsl
jmp
dec
and
cmp
sbb
jecxz
loope
mov
pop
roll
int3
mov
cld
sbb
idivb
cli
xor
mov
jge
mov
dec
inc
mov
bound
cmp
inc
les
xchg
mov
or
insl
dec
lret
inc
cwtl
test
popa
fists
lahf
fidivs
jbe
das
mov
and
cld
rolb
arpl
xor
fcos
in
mov
mov
pop
mov
shll
cmp
adc
subl
int
in
popf
jo
xchg
mov
adc
cwtl
or
or
pushf
mov
xor
pop
aaa
add
popf
out
inc
imul
pop
inc
pop
loopne
leave
test
ss
jge
inc
dec
xor
mov
mov
sti
add
pop
jp
xchg
or
mov
jmp
gs
cltd
leave
inc
pop
std
dec
cmp
sub
nop
adc
je
cmp
out
mov
xchg
enter
ja
loope
mov
sti
lret
mov
sbb
push
sbb
shrb
add
mov
std
fstl
outsb
arpl
out
adc
aas
push
pmaxsw
not
call
pushl
mov
dec
repz
dec
pop
jmp
ficoms
imul
cmp
xchg
adc
loopne
pop
inc
mov
leave
mov
mov
mov
add
call
inc
xchg
add
nop
xchg
xor
cmp
scas
in
aad
dec
dec
xor
xor
loope
sub
push
jo
add
cmp
sahf
mov
aam
std
cmp
jne
fimuls
aaa
add
lods
cmp
leave
sahf
loope
jge
lcall
idivl
pop
je
test
in
dec
dec
add
jne
mov
testl
xor
fisubl
repz
es
callw
pop
sub
int
gs
jae
in
xchg
cld
mov
lock
mov
mov
fnstcw
add
jo
leave
pushf
xchg
xchg
sub
pop
mov
mov
aas
cmp
lds
mov
stos
dec
sarl
js
xor
mov
cmp
ret
das
lods
sbb
fwait
in
orl
dec
push
cmpl
js
mov
call
out
mov
lcall
jbe
push
fistpll
test
movsb
pop
fsubrl
shll
sub
fstps
scas
mov
adc
lds
fisttpl
out
test
jnp
sbb
mov
and
arpl
jno
shlb
xchg
daa
ds
add
push
pop
pushl
dec
mov
mov
pop
add
xor
out
mulb
add
outsl
push
movsb
mov
cs
movsl
cmpsl
jno
mov
push
sub
mov
pop
jg
scas
mov
shll
into
in
shlb
mov
in
sub
je
jl
fs
mov
addb
mov
mov
daa
jmp
out
aas
inc
mov
mov
add
or
in
lret
out
dec
adc
enter
push
jne
or
stos
xchg
jle
orl
in
fildl
add
xchg
push
push
add
push
cmp
cs
pop
std
adc
movsl
stc
mov
ss
dec
jb
pop
push
and
jle
das
or
outsb
shr
push
test
lods
mov
jno
push
test
call
jecxz
push
xchg
dec
push
rolb
and
imul
rclb
xchg
xorb
cli
push
mov
xchg
jecxz
ficoms
fwait
mov
lret
lods
int
das
xchg
sub
icebp
cltd
leave
fdiv
into
in
push
push
mov
sti
repz
push
loope
flds
or
mov
movsl
movsb
jnp
ja
inc
outsl
and
add
sti
pop
cltd
push
lcall
cmp
pop
xor
or
mov
mov
lahf
push
xor
arpl
out
sub
loopne
sbb
push
xchg
xchg
cmpsl
stos
sub
cld
or
jg
out
testb
and
adc
dec
ret
xchg
push
out
je
js
add
divb
popf
cwtl
xchg
mov
fidivrs
out
sub
mov
xchg
hlt
fistpll
lcall
sbb
call
xor
mov
outsl
dec
hlt
and
or
dec
mov
movsb
enter
push
or
aad
mov
test
xchg
mov
mov
jb
mov
add
dec
andl
pop
ret
xorl
scas
add
aad
lea
daa
rcrb
adc
add
jns
push
push
xchg
jnp
pop
xor
cmc
cwtl
lea
clc
and
mov
mov
jnp
pop
aaa
and
ret
sbb
cmp
jne
jns
mov
mov
push
lret
sbbb
icebp
in
insb
int
ret
or
pop
xchg
jg
cmpsl
dec
cs
push
out
lock
add
cs
push
mov
sbb
ds
fisttps
push
gs
out
adc
fbstp
test
hlt
push
and
popa
out
sti
push
fstps
test
sub
sub
mull
clc
js
movsl
aaa
mov
xchg
mov
shll
data16
and
or
scas
idivb
cltd
sbb
pop
add
cltd
sti
mov
out
adc
out
sub
sbb
jne
or
out
add
lret
mov
subl
lods
enter
cs
pop
imul
jb
push
lods
sbb
inc
cli
cmpsl
ja
mov
ljmp
xchg
cld
xchg
stos
movsl
push
xchg
cld
loope
jl
stos
inc
fidivl
mov
and
push
ret
das
xor
repz
cwtl
dec
cs
or
adc
pusha
dec
int
fiaddl
cltd
mov
jecxz
jno
mov
sti
pop
xor
iret
rcll
clc
out
jb
xchg
or
daa
in
loop
aam
sub
sbb
adc
cmp
and
sub
xor
into
lcall
inc
es
push
fsts
xchg
jo
fsub
and
or
sbb
xor
xchg
jecxz
mov
xchg
sbb
xchg
adc
adc
lods
je
cli
ss
cltd
lds
jge
inc
pop
sarb
call
push
push
add
xor
insl
cli
mov
shll
std
jl
xorb
inc
aam
cli
pop
sarb
jb
adc
xor
xor
or
jecxz
ror
aaa
aas
xor
push
out
pop
leave
pop
fisttpl
cld
notl
pop
rclb
jg
mov
mov
push
or
push
xchg
adc
repz
fnstenv
cwtl
and
fwait
xor
sbb
mov
push
fdivs
mov
or
inc
push
xchg
lret
gs
scas
jecxz
test
push
cmpsl
popf
sti
in
out
xchg
fwait
mov
jbe
and
sahf
and
mov
mov
loopw
gs
cli
sbb
sub
fiadds
loopne
insb
int3
xchg
and
shr
insb
int3
fistl
inc
inc
push
xlat
fisubrs
idivl
inc
push
aad
dec
test
out
int
xlat
aam
leave
xor
mov
pop
movsb
sbb
add
mov
mov
and
push
movsb
inc
mov
add
stos
or
dec
cmp
mov
lcall
int
xor
lods
ljmp
je
cmc
mov
jns
and
sti
fs
cmp
stc
imul
dec
ds
xchg
adc
mov
mov
imul
mov
cmpsb
push
xchg
adc
dec
aad
popa
ds
scas
mov
int3
jecxz
push
sbb
les
inc
jp
sbb
ja
adc
repnz
ja
pop
popf
cmp
mov
dec
out
adc
xchg
mov
adc
pop
xchg
push
jge
outsb
out
cli
inc
push
test
cmp
cmpsb
imul
jne
mov
jnp
stos
in
push
cmp
push
sbb
xlat
and
dec
hlt
sahf
push
in
xchg
and
movsl
jecxz
data16
movsl
and
pop
stos
mov
or
or
mov
sbb
jae
mov
adc
cmp
adc
icebp
mov
or
cmpsl
lods
and
lahf
int3
ror
jg
dec
xchg
idivb
addr16
jmp
cmp
andb
push
add
inc
cmc
loope
lock
jp
xchg
mov
xorb
push
xchg
pop
ja
or
dec
pop
push
hlt
jmp
sbb
insl
cmc
dec
hlt
stc
push
out
insl
fidivrs
mov
sbb
push
add
sarl
lock
mov
pop
les
lods
movsb
test
sub
outsl
aam
pop
scas
push
rcr
jno
fidivl
cmp
ss
ljmp
mov
sti
stos
mov
shrl
dec
or
ret
adcb
push
andl
mov
js
scas
xchg
and
mov
push
push
dec
push
adc
mov
and
in
bound
call
lods
push
fidivrl
mov
fildl
mov
jmp
das
cmpsb
dec
rcrl
ja
xchg
or
xor
push
mov
jne
mov
xchg
lds
clc
js
xchg
dec
push
aas
jp
les
jbe
shll
outsb
shrl
negl
push
xchg
ljmp
sub
sbb
mov
sub
movsl
rorl
add
jne
push
mov
xchg
ret
xor
cli
fistpll
mov
movsl
js
jo
mov
leave
lret
loope
inc
cld
or
push
cltd
mov
pop
stc
lds
fdivrl
push
jbe
cwtl
adc
fstpl
in
cltd
cmp
int
cmp
out
popa
sub
fdivl
dec
mov
fldt
and
xor
mov
cmc
dec
stc
lods
insl
icebp
rorb
nop
cmp
lret
xchg
stc
ds
push
mov
movsb
in
mov
sbb
enter
dec
dec
cwtl
push
push
mov
out
push
cmp
test
sub
sub
rclb
pop
inc
xor
pop
xchg
or
or
repnz
in
sub
jb
pop
inc
pop
movl
hlt
imulb
xchg
insl
and
cld
cmp
in
dec
leave
in
jmp
out
xchg
push
ret
pop
xchg
popa
sub
sub
repz
outsl
mov
bound
cmc
mov
pop
mov
mulb
aaa
push
adc
out
dec
cmp
mov
inc
push
sub
adc
aam
or
inc
and
ja
test
hlt
pop
cwtd
jg
outsb
cmp
js
pop
cs
push
push
lods
sub
test
js
push
xchg
out
sbbl
mov
out
dec
mov
fidivl
ds
test
arpl
in
in
pusha
adc
idivb
std
mov
imul
and
mov
dec
out
lock
popf
or
sarl
mov
add
push
movsb
mov
gs
or
orb
cmpsl
divl
andl
cmp
add
lea
dec
and
pop
push
ss
es
adc
leave
mov
add
cmpsb
push
xlat
clc
inc
test
dec
bound
mov
call
mov
sub
popf
mov
dec
push
inc
adc
xchg
into
push
xchg
pusha
ljmp
push
cmp
push
pop
mov
das
jge
xor
mov
call
mov
stos
mov
xchg
jbe
pop
and
div
cmpl
mov
daa
test
mov
add
mov
test
xor
das
cmc
jl
and
mov
fstpt
icebp
stc
dec
out
push
filds
xchg
jg
into
or
cmpsb
lds
and
add
sbb
mov
insb
or
lret
ljmp
mov
pusha
add
insb
pop
jnp
or
jp
mov
loope
in
jnp
xor
sbb
inc
fistpl
test
cmp
adc
jle
sub
lods
cmpb
or
mov
repz
sub
xchg
mov
xlat
ret
call
cmp
pop
clc
orl
mov
stc
xor
dec
jb
aas
popa
ret
popa
movsb
and
sbb
aad
pusha
mull
jmp
lods
inc
lds
sub
add
mov
push
adc
push
xchg
aam
add
add
data16
repz
dec
xchg
stos
dec
daa
lret
arpl
mov
and
vpsubq
bound
cltd
loopne
aas
ljmp
jge
xlat
sub
adc
dec
pop
inc
vmread
push
les
fdivr
sub
xchg
dec
inc
push
cmpsl
inc
leave
jmp
dec
gs
in
mov
sub
jl
mov
cmp
add
xor
sbb
cmp
fwait
nop
sbb
aam
or
push
pop
adc
dec
out
in
test
int
dec
out
adc
dec
jne
pop
and
mov
lret
ss
jo
jbe
test
aas
xor
aas
popf
lea
popf
inc
xchg
int
out
inc
rcrb
int3
stos
add
pop
mov
lret
and
or
aaa
or
loopne
jnp
push
jecxz
push
addl
test
fisubrl
mov
inc
jle
push
push
cs
adc
cmp
addr16
out
adc
add
pushf
int3
rep
jg
fdivl
arpl
lods
pop
and
pop
sbb
movhps
add
je
jo
pushf
cmpsb
push
clc
lock
test
outsl
std
dec
cli
outsl
mov
adc
jg
outsb
pop
insl
shrl
cmpsb
jle
xchg
xor
cmpsb
enter
jl
rclb
xlat
pop
ss
mov
test
push
aas
popf
test
xor
sbb
push
xchg
stos
scas
inc
jmp
xchg
inc
testb
xchg
dec
nop
cmp
sub
daa
popa
xchg
adc
xor
int
std
xor
mov
dec
cltd
pusha
lea
pusha
stos
inc
push
push
jle
sbb
das
outsb
push
imul
and
xchg
shlb
jns
push
push
out
inc
sub
stc
push
dec
sbb
pop
cs
inc
xchg
lock
sub
ja
inc
data16
loopne
lock
aaa
lret
cmp
mov
cmp
inc
cmp
pop
clc
mov
jecxz
dec
xor
jo
and
xor
and
mov
pop
pushf
testl
mov
mov
or
test
sub
lea
out
nop
dec
cwtl
fwait
mov
add
push
ret
inc
mov
dec
adc
into
out
push
imul
push
test
fsubs
into
nop
into
push
in
mov
scas
fbld
jle
pop
push
sub
push
xor
fistpll
stos
adc
dec
aad
mov
ljmp
test
rorb
jo
popa
adc
pop
mov
push
adc
shrl
fs
mov
in
pop
cli
ds
loopne
in
aas
mov
cwtl
cli
dec
mov
insb
pop
add
aad
divl
push
fwait
mov
dec
aaa
pushf
or
push
mov
inc
pop
mov
movsb
add
jl
enter
testb
roll
pop
dec
lock
pop
mov
push
mov
stos
adc
pop
pop
call
adc
add
xchg
push
inc
push
inc
pop
sahf
outsl
js
mov
sarb
ja
cltd
sub
ficompl
pushf
out
nop
push
sub
fistl
addl
push
sub
pusha
mov
inc
inc
inc
bound
sub
or
adc
push
imul
pushf
dec
sub
cmpsb
les
inc
sbbl
and
repnz
aas
or
cmp
push
mov
dec
xchg
cmp
push
jmp
dec
adc
lds
out
sbb
setns
aad
sub
lea
ret
jns
pop
popa
decl
nop
push
mov
and
ret
hlt
in
mov
xor
cmp
mov
mov
adcb
mov
clc
adc
jge
nop
pop
pop
or
movsb
xchg
minps
fwait
hlt
mov
push
aad
rol
cli
jo
or
pop
sub
iret
test
mov
jp
stos
call
out
pushf
loopne
mov
cmpsb
je
les
arpl
and
or
pop
pop
sti
ljmp
dec
outsl
aas
adc
jecxz
sar
imulb
fsubrl
imul
loope
adc
rol
cmp
add
mov
pop
or
imul
lahf
in
cs
adc
or
mov
mov
adcl
lds
mov
stos
add
xor
ss
xor
mov
aas
leave
loopne
dec
sbb
inc
std
sub
lock
out
sti
push
bound
add
repnz
test
testb
inc
xlat
jo
punpckldq
mov
icebp
pushl
push
movlps
sbb
cmp
and
push
xor
mov
adc
push
add
push
sbb
fistps
push
sbb
aaa
mov
cli
sub
mov
push
or
or
sbb
sarl
lock
jo
lret
or
imul
inc
dec
mov
cli
cli
mov
addr16
les
push
lcall
and
cmp
bound
lds
xor
test
dec
mov
mov
dec
xchg
jns
in
push
imul
imul
dec
cld
mov
into
fdivr
pop
lods
push
adc
cwtl
inc
lahf
cli
pusha
jbe
arpl
sahf
les
mov
mov
arpl
dec
jge
pop
bound
add
jb
fs
gs
and
das
xor
push
test
xor
imul
xchg
mov
stc
and
fidivrs
ss
xchg
push
fdivrs
setbe
call
into
add
clc
imul
stos
gs
out
flds
mov
push
clc
mov
paddusw
mov
or
xor
cmp
lcall
xor
jl
daa
mov
fstps
ljmp
cmpsb
cwtl
scas
sti
inc
sbbb
imul
add
dec
xor
mov
movsl
aas
xchg
aam
adc
add
push
aas
enter
sub
add
dec
shrb
fstpl
sbb
pusha
mov
dec
xlat
jno
adcb
mov
pop
int3
icebp
int3
loope
and
mov
push
add
add
xor
and
cmpsb
sbb
fldcw
jae
pop
cmp
lcall
add
pop
daa
sbb
lds
jle
sbb
xchg
push
or
sahf
popf
dec
negb
ret
jl
frstpm(287
mov
clc
or
mov
mov
add
mov
cmp
rcrl
xor
sub
add
lret
xorb
sar
and
jo
push
xlat
mov
adc
lock
adc
jae
imul
xchg
iret
lods
cld
dec
jne
mov
mov
mov
xor
cltd
out
jle
adc
test
lods
jle
sbb
in
rorl
test
cmpsb
cmp
jno
scas
dec
jnp
iret
inc
mov
fsubrs
add
sahf
sti
inc
out
into
hlt
sahf
mov
scas
jg
aam
mov
add
dec
cwtl
sub
sbb
jbe
mov
adc
pop
and
jle
cmp
mov
push
pusha
cmp
rorb
loop
push
mov
ljmp
fsubrl
popa
fisubrl
in
cmpsl
jmp
mov
cmpsl
jnp
aas
add
aad
sahf
outsb
sub
outsb
int
ret
mov
xchg
fiaddl
shlb
mov
sbb
adc
mov
pop
hlt
jge
xor
mov
push
add
sarl
int
sbb
hlt
mov
insb
xchg
cs
mov
enter
jno
cmc
test
pop
adcl
mull
adc
inc
cmpsb
and
ds
lods
repnz
lret
hlt
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
add
adc
or
jne
mov
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
mov
mov
ret
mov
jmp
ljmp
hlt
out
adc
subl
cwtl
jnp
inc
fimull
sub
clc
cmp
insl
pop
push
pop
or
xchg
pop
out
sahf
fwait
add
jl
shrl
xor
jle
xchg
cmp
sbb
mov
cmp
and
jb
xor
sub
push
jbe
rorb
aas
mov
insb
mov
loop
xchg
push
xchg
mov
push
das
repnz
push
mov
insw
les
ljmp
cmp
pop
pop
mov
nop
add
loope
das
insl
cmp
push
outsb
sbb
out
je
mov
mov
arpl
stos
in
fst
ds
sub
sbb
push
cmpsl
mov
loop
jl
cmp
cmp
imul
popa
jae
test
mov
jne
insl
fs
data16
cli
cmp
cmp
pop
push
ret
mov
cmp
sahf
inc
in
movsl
insb
movsb
cmpsl
test
dec
pop
jp
or
push
mov
inc
in
xchg
scas
fdivs
pushf
jae
out
out
pop
cs
insb
cmpsb
sub
and
sbb
aam
aad
aaa
test
packssdw
shlb
jge
out
jmp
inc
mov
xor
sbb
or
fdiv
xchg
xchg
insb
rcrb
imul
and
test
shrl
lahf
pop
adc
push
mov
addr16
dec
xchg
mov
fldenv
jnp
lcall
and
jnp
scas
xchg
in
dec
mov
imul
loopne
scas
xchg
rorb
test
in
adc
inc
xchg
aaa
enter
mov
dec
mov
dec
sti
out
mov
push
enter
cwtl
sbbl
out
jnp
loopne
lods
push
sub
xchg
jns
hlt
and
pop
lea
aaa
movsl
dec
lret
insb
cmp
lret
cwtl
sub
call
in
int3
sahf
cmp
nop
dec
cmpsb
lods
mov
xchg
fldz
mov
iret
mov
mov
push
pushf
fwait
int3
jbe
test
lahf
fnstcw
inc
jl
aas
ret
or
scas
jp
cmp
mov
insl
dec
popf
pop
popa
call
jg
dec
dec
inc
push
loope
sub
mov
inc
and
cmp
or
in
pusha
or
adc
xchg
lret
push
adc
or
mov
inc
cmp
xchg
mov
neg
push
mov
mov
lds
test
test
aam
pushf
sbb
or
push
call
lock
fisubrs
ljmp
out
in
mov
and
repz
es
xor
in
sbb
add
xchg
sbb
jo
shlb
insl
jg
ret
lock
aad
addb
inc
jns
fwait
pop
xor
in
sbb
dec
leave
dec
cmp
lret
or
pop
jne
cmp
push
add
pop
mov
dec
in
imul
sahf
sar
jns
push
inc
pop
movsl
xchg
fcoml
push
add
repnz
push
push
add
jle,pt
ljmp
jbe
dec
add
push
repz
mov
lds
mov
add
scas
inc
fiaddl
insw
test
imul
mull
dec
shrb
or
pop
cli
xchg
and
sub
push
sbb
test
sbb
push
mov
std
jns
shll
data16
sti
push
pop
jbe
scas
lods
movsl
sbb
mov
loop
jo
sbb
das
in
and
push
jle
sbb
loopne
and
lds
aaa
sarl
mov
push
push
cmp
rol
aad
inc
jb
shll
addb
cwtl
dec
dec
les
sbb
test
in
test
inc
sub
pop
mov
div
sub
dec
and
sub
rcrb
sub
cs
iret
push
mov
ja
int3
fsubrl
fisttpll
pop
mov
sbb
jb
stos
imul
sbb
dec
mov
mov
mov
stos
addr16
mov
jle
jp
push
jge
inc
stc
add
lcall
ret
mov
adc
lods
sub
stos
add
pop
add
pop
rorl
push
push
push
ret
add
mov
or
adc
testl
pop
xor
imul
push
sub
xor
testl
pop
js
and
adc
jp
adc
popf
pop
xchg
mov
shrb
enter
shrb
fs
cld
and
dec
inc
sub
mov
shll
int
pop
pusha
popa
cmpsb
mov
add
cld
outsb
jo
or
pop
in
pminub
inc
addr16
sbbl
and
roll
loop
insl
lods
cmp
pop
inc
ja
out
nop
sti
jae
pop
aam
leave
dec
pop
js
cmpsb
cld
dec
dec
test
hlt
pop
push
lcall
jmp
fidivs
mov
enter
push
xor
inc
jge
mov
stos
dec
shlb
xor
pop
pushf
push
fbld
js
test
movsb
xchg
sub
call
mov
out
adcb
in
cmp
mov
in
ds
push
mov
mov
ljmp
xor
xor
mov
lret
adcl
cmp
subl
pop
loope
xlat
insl
push
jno
pop
mov
xlat
out
dec
mov
fcompl
ljmp
sub
mov
xor
lods
mov
rcrl
les
add
pop
cmp
xor
xor
sar
and
add
mov
mov
mov
dec
outsb
notl
sbb
mov
xor
add
mov
push
testb
aaa
shll
test
jnp
pop
pop
fdivr
mov
jp
das
dec
sbb
pop
xor
call
movl
pop
jp
pop
std
outsl
dec
lods
fisubrs
inc
fisttpll
sbb
insb
xor
push
jo
pushl
xchg
enterw
sbb
in
popa
hlt
or
xor
daa
push
ljmp
xchg
inc
pushf
push
cmpsb
sbb
into
adc
repnz
js
scas
push
add
pminsw
enter
xorl
jp
xor
pushf
loope
cltd
pop
adc
enter
clc
fwait
sbb
call
and
jecxz
xchg
and
in
dec
pop
fcoms
mov
push
rorb
lea
and
mov
inc
pushf
lock
adc
js
cmp
or
xor
out
int3
inc
sbb
mov
xor
lret
xor
jge
out
in
scas
clc
mov
adc
and
test
xor
sbb
mov
sub
cltd
jno
cld
push
xchg
scas
daa
mov
and
loopne
stos
loop
pop
out
mov
insl
jb
xchg
jbe
aam
sbb
mov
ds
or
sub
sbb
add
jl
into
int3
add
cmp
repnz
and
stos
es
dec
fidivrs
cmpsb
popa
std
push
or
fisubrl
xor
adc
cmp
fxch
cmp
pop
fwait
test
xor
jnp
dec
xor
cmp
pop
xor
and
js
cmp
xchg
ror
jge
fidivrs
and
xor
imul
pop
mov
inc
movsl
popl
mov
cmp
out
fbstp
cmp
je
movsl
ror
push
cmp
pop
cmpb
cmp
inc
inc
jmp
or
ljmp
push
shl
stos
in
insl
cld
orl
or
or
lcallw
adc
or
ret
out
jns
jae
pop
and
aad
pop
sarb
fldt
mov
push
loope
call
fdivl
mov
loope
sbb
imul
sbbb
aad
insb
push
xor
inc
scas
outsb
push
inc
movsl
or
sbb
daa
insb
sbb
and
es
hlt
daa
and
enter
arpl
testb
lcall
mov
negl
test
and
sbb
cmpb
je,pn
bound
add
adc
jecxz
aas
int3
sub
in
je
es
cmp
mov
jbe
lea
test
jb
pop
dec
add
test
clc
rcl
lods
and
jns
sbb
aas
mov
add
add
mov
adc
xor
test
pop
in
mov
sbb
mov
fistps
sub
jno
adc
stos
scas
and
jge
mov
ficomps
xchg
pop
xchg
jp
pop
push
lret
out
addr16
sbb
mov
daa
aam
inc
leave
movsb
mov
lcall
sbb
das
cmp
iret
loope
enter
ds
pusha
xchg
sub
pop
pop
push
sub
and
fstpt
add
pop
sbb
sahf
cmp
cmpsl
mulb
mov
in
sbb
push
das
xchg
rolb
mov
add
add
test
mov
inc
add
and
inc
insl
fmulp
and
xchg
jnp
pop
pop
inc
int3
mov
rcrb
enter
fmulp
inc
test
insl
mov
lods
fcoms
cmp
xor
imul
mov
fs
cmpsb
stc
enter
mov
in
aas
mov
jmp
cmp
lock
push
pushf
push
test
aas
adc
jp
int3
xchg
push
sbb
imul
lret
clc
outsl
push
add
push
arpl
repz
cmp
jno
xor
push
cmp
mov
xorl
out
ss
jo
push
cmp
ljmp
fldl
inc
adc
in
adc
adc
inc
imul
adc
add
jecxz
sub
nop
xchg
jo
leave
fadd
aaa
mov
sbb
test
mov
dec
sbb
jns
je
jp
mov
das
cmp
mov
icebp
andl
xchg
or
shl
mov
shl
sub
cs
mov
xchg
dec
pop
jae
xchg
stc
add
nop
adc
in
xor
cmp
imul
pop
and
clc
xor
pusha
stos
xlat
es
mov
push
inc
dec
push
lahf
mov
ficoml
hlt
in
rorb
jg
lcall
repz
fistpll
ds
test
shl
loope
imul
inc
add
loope
ljmp
jb
fcoml
jmp
xlat
jp
push
mov
xor
lret
inc
push
test
add
pusha
mov
push
xor
sub
fs
scas
jmp
fisttpll
out
mov
adc
std
bound
push
and
lods
pusha
push
imul
adc
dec
add
daa
mov
pusha
jnp
push
je
loop
push
call
adc
push
jg
rclb
mov
data16
jae
sub
pop
pop
push
imul
jecxz
cmp
loopne
jnp
jae
dec
cmp
cmp
dec
dec
add
inc
push
fimull
out
mov
mov
jge
aad
fnstcw
mov
mov
test
lahf
push
fcomps
arpl
mov
out
xor
xchg
fcoms
mov
xchg
mov
in
lock
lock
adc
adc
bnd
pushf
loop
xor
mov
push
jb
pop
inc
push
mov
and
dec
fidivl
pop
lock
leave
xor
inc
inc
pop
lea
lods
mov
pusha
gs
stos
jno
arpl
mov
mov
mull
and
inc
fstpt
les
sub
hlt
lahf
std
adc
lcall
mov
cwtl
mov
addr16
sbb
or
insb
test
pop
jne
xor
push
mov
les
cld
loop
xor
lods
test
jl
jl
inc
nop
xor
inc
rorl
ljmp
and
sub
xor
daa
cwtl
arpl
and
sbbl
xchg
mov
out
dec
movsl
push
lods
add
mov
cmp
adc
lea
fldenv
adc
out
xchg
bnd
pop
iret
pop
stos
mov
out
cmp
sbbl
cmp
or
or
arpl
jecxz
aas
shll
bound
inc
test
or
sub
and
sbb
in
jns
cs
mov
sti
aad
mov
adc
sbb
lret
cli
cltd
aaa
push
dec
xchg
mov
sbb
push
pop
shl
fmull
push
cwtl
sub
arpl
lods
xchg
push
iret
xchg
push
sbb
lret
cmp
push
cmp
push
test
add
jge
lret
inc
inc
ss
jo
insl
int
imul
push
mov
xor
jb
ja
cmp
xor
in
out
mov
cmpsl
push
mov
and
xchg
ret
pop
xor
cli
sub
add
xchg
mov
lock
and
insl
push
fdivs
sbb
xchg
js
insl
jmp
out
jl
push
fdiv
mov
out
mov
sbb
je
mov
sbb
jl
mov
inc
xchg
clc
call
hlt
out
cld
cmp
es
jns
fmuls
insb
push
inc
inc
leave
test
in
inc
into
pop
out
ds
sbb
push
inc
test
iretw
cmc
movsb
push
fs
sbb
cli
stc
push
negb
mov
mov
popa
push
imul
cmp
pop
nop
sub
rorb
xor
repz
insl
jp
xchg
mov
push
test
addr16
dec
xor
push
ss
mov
and
mov
and
mov
je
outsl
xor
stos
xlat
fidivl
mov
jae
test
outsb
mov
daa
mov
and
or
ljmp
lock
mov
push
sbb
and
or
mov
cwtl
pushf
push
mov
outsl
dec
push
dec
fldcw
punpcklbw
sub
inc
jbe
gs
fbld
sub
fadds
dec
push
ljmp
xor
jl
xchg
add
mov
test
rorl
jle
sarb
or
subl
mov
jmp
in
jno
and
leave
xor
in
adc
orb
and
mov
adcb
je
sub
test
iret
mov
aaa
sub
sbb
sub
xor
pop
and
mov
aaa
and
nop
lds
out
inc
dec
rclb
rcrb
xchg
jg
jmp
ljmp
aad
push
inc
nop
cwtl
xor
add
push
cs
in
push
pop
xchg
popa
fs
pop
stos
fs
sbbl
out
jb
dec
dec
add
add
mov
cltd
dec
stos
aaa
nop
ljmp
ja
rolb
mov
pop
jecxz
rol
sub
icebp
mov
pop
mov
mov
mov
add
popf
mov
jle
add
push
je
mov
cs
and
inc
outsl
into
fcmove
pop
sarb
cmpsl
cmp
pop
xchg
push
fistpll
mov
pop
and
orl
test
insl
adc
inc
roll
jae
data16
mov
mov
adc
lret
and
xor
dec
sub
int
sbb
push
xor
popf
adc
sub
daa
idiv
imul
gs
and
gs
in
xchg
leave
leave
lret
cmp
add
int3
mov
sub
mov
pop
outsl
xor
cmpsl
push
xchg
pop
and
lahf
pop
scas
jmp
fisttps
jge
sahf
pop
sbb
jecxz
shll
sar
sbb
mov
pop
sbb
or
test
jle
push
pop
mov
insb
cltd
and
repnz
push
shl
pop
push
or
mov
sub
inc
in
sahf
dec
cmp
rcrl
in
inc
inc
xor
pop
pop
push
mov
cmpsl
aad
xchg
adc
jp
jle
pushf
push
enter
lock
mov
mov
fcomp
add
add
cmp
ja
subl
sbb
fmuls
cmp
in
sub
sub
inc
or
into
mov
cltd
stc
push
pop
pop
cld
push
aad
sbb
out
push
ss
sbb
js
or
xor
dec
xchg
jmp
das
dec
cmpsl
test
in
rolb
adc
cmp
adc
xor
sub
sbb
loope
je
out
push
xchg
lds
push
add
inc
jb
and
fwait
mov
and
dec
jge
dec
rorb
sbb
xchg
data16
mov
outsl
pop
or
inc
lret
pop
add
xor
sti
ret
mov
js
pop
jnp
xchg
and
mov
xchg
sub
call
es
mov
xchg
std
or
or
lret
jns
sub
fsubrs
dec
mov
cli
pop
shrb
lods
cltd
dec
jno
ret
imul
out
or
adc
adc
rcll
or
jno
cld
inc
lret
out
rclb
outsb
test
popf
mov
mov
in
lcall
jne
jp
sbb
lcall
fisttpll
and
xchg
cmpsb
sub
cmpl
sahf
mov
in
inc
cwtl
stc
popf
pop
pushf
mov
div
jge
mov
leave
inc
outsb
sub
mov
std
das
imul
ret
je
and
test
push
cmp
dec
xor
mov
ret
and
dec
out
jo
xchg
popa
jmp
xchg
cs
shlb
cmp
cli
das
inc
out
je
test
sti
loopne
pop
jo
adc
rol
sub
xor
xchg
dec
mov
pop
mov
cld
xchg
ds
jmp
add
lea
mov
clc
sub
jle
add
jge
jnp
mov
dec
gs
js
jmp
push
jmp
mov
pop
adc
lock
aam
leave
mov
jne
sub
mov
insb
lea
pop
jae
adc
pop
outsb
add
fs
movsb
adc
jle
mov
aas
xor
sub
sub
xchg
sbb
push
std
mov
mov
jno
inc
bound
mov
or
lcall
scas
ds
add
clc
mov
xchg
dec
xor
ret
js
adc
cmp
fldt
aad
shlb
adc
aas
jl
cmp
lea
test
das
ljmp
lods
and
fmuls
test
jmp
dec
xlat
das
dec
push
adc
icebp
mov
pop
add
dec
nop
addl
call
decl
clc
sbb
xchg
out
xchg
push
fldl
cltd
out
sti
cmp
mov
hlt
pop
push
xchg
lods
add
push
ds
in
lods
xlat
inc
fisubrs
mov
ja
jb
aaa
jl
adc
pop
xor
je
fsts
int3
leave
imul
or
push
jno
pop
movsb
aaa
xchg
and
test
push
jnp
addr16
cltd
shrb
jecxz
and
rorb
stos
iret
loopne
and
popf
sbb
jl
je
loope
sub
mov
sub
jnp
jmp
imul
clc
repz
in
lahf
fnstcw
xchg
outsb
lds
sub
pop
dec
std
shll
xor
cmp
dec
sub
sub
in
sbb
inc
out
push
rorb
test
popf
mov
hlt
insb
adc
aas
test
fildl
in
xor
cld
add
jmp
jbe
sbb
dec
imul
dec
jecxz
bound
jne
jp
repz
test
inc
push
xor
add
mov
insl
lock
pop
sbb
mov
sub
daa
sub
stos
sub
lret
fcmovne
push
ret
xor
insl
insl
lods
stos
xchg
xor
test
jae
xchg
inc
adc
pop
out
xchg
mov
push
ljmp
enter
cli
xchg
dec
mov
jb
adc
addr16
mov
fwait
push
or
lods
xor
xchg
jne
out
push
xor
jge
sbb
jno
repnz
xchg
xchg
scas
repnz
mov
or
mov
sbb
and
test
jp
in
lcall
adc
jmp
into
lea
test
dec
daa
push
cld
adc
sti
push
sbb
or
adc
dec
mov
ljmp
mov
xchg
cs
fisubrl
test
insb
sub
mov
lods
enter
pop
or
push
xchg
out
push
jo
pop
sbb
lock
or
or
cmpsl
or
sbb
div
ss
xor
fcomps
cmp
je
mov
cmp
sbb
ret
push
sbb
sbb
stos
mov
mov
mov
sub
mov
cld
lods
mov
fldt
mov
dec
icebp
adc
shr
mov
or
jl
in
add
shrl
mov
adcb
xor
dec
outsl
xchg
cltd
jp
pop
push
mov
add
mov
lock
xor
jecxz
in
push
cmp
fists
lcall
mov
inc
cmpsl
enter
cld
pop
mov
mov
push
cltd
add
les
lea
adc
test
add
xor
add
inc
test
pop
outsl
push
cmp
adc
fldenv
xchg
aad
test
pop
cmp
sub
xchg
cmp
in
push
pop
push
mov
pop
pop
inc
push
mov
cmp
subb
adc
lret
or
pop
pop
lret
xor
and
pop
mov
inc
cmp
mov
jp
pop
shll
pop
and
jp
sbb
movsl
pop
std
xchg
ret
lret
sub
add
cld
movsl
mov
dec
sarl
scas
cltd
mov
mov
sub
or
into
inc
push
and
dec
addr16
in
scas
icebp
aas
aaa
mov
jge
lret
add
fidivrs
lods
int3
xchg
icebp
les
daa
jbe
jae
cmpsb
mov
test
push
add
sbb
push
lea
mov
add
sahf
pop
cmp
xor
lcall
std
mov
cmpsb
ret
out
testl
lret
call
jmp
incl
jae
push
out
xchg
popa
dec
aaa
push
fs
jb
movsb
jmp
mov
mov
mov
jno
dec
pop
inc
negl
into
mov
add
or
aas
or
jbe
sub
scas
fsubrl
imul
cmp
stos
mov
mov
mov
xchg
sub
xorl
subl
adc
mov
push
data16
fcoms
int3
sub
sbb
jp
xchg
pop
push
sahf
mov
imul
add
xor
pusha
in
mov
xlat
mov
cmp
jp
mov
pop
or
iret
dec
and
sbb
sti
jne
inc
push
jbe
dec
jnp
adc
sbb
jae
adc
pop
inc
mov
fs
pop
stc
mov
scas
aas
dec
enter
mov
and
jg
pop
ljmp
out
es
adc
xchg
or
push
push
mov
push
ss
movsb
jmp
enter
negl
out
sub
les
cmpsl
mov
jge
pop
push
and
fmuls
xchg
ds
lods
imul
ljmp
shr
pushl
aaa
test
inc
sahf
and
cmc
enter
std
out
pop
rcrl
adc
out
mov
adc
ja
mov
test
xor
mov
push
movl
inc
shrl
lea
mov
enter
fdiv
push
mov
xchg
inc
aad
adcb
mov
mov
sub
aam
std
pop
pop
sub
cld
inc
outsb
sbb
xchg
xchg
aam
push
jb
mov
lret
popa
pop
ret
jmp
adc
adc
pushf
fldl
or
or
jl
jb
and
shll
cmc
ret
push
mov
or
inc
insl
sbb
les
cmp
sub
xchg
outsb
hlt
fnstsw
imul
scas
inc
cmp
jae
inc
mov
jno
cmp
pop
push
das
int3
sub
das
insb
sub
lds
loop
inc
rcl
test
or
popf
jae
xchg
stos
mov
jae
and
mov
or
jns
add
pop
dec
cmpl
bound
jecxz
stc
jbe
jmp
int3
popa
dec
adc
pop
mov
loop
xor
repz
mov
cs
cld
xchg
push
inc
and
and
push
push
push
popa
add
iret
dec
xchg
pop
stos
aad
iret
dec
mov
xchg
ja
mov
xor
stos
imul
pusha
and
call
arpl
cmp
xchg
test
cs
inc
sub
in
sarb
stos
add
mov
sbb
push
or
insb
xchg
pop
scas
ds
mov
ret
push
pop
leave
out
jmp
jmp
pop
lret
jg
lods
jge
jge
leave
les
and
orb
jl
fiadds
rorl
pop
in
aad
cmp
sbb
cmp
stos
pop
imul
mov
xor
add
cs
scas
insb
repz
cmpsl
pop
jne
add
mov
enter
repnz
out
jne
inc
and
pop
insb
iret
lods
outsb
add
push
call
add
push
cmp
adc
scas
or
cmp
stos
mov
imul
rcrl
fidivrs
sbb
push
inc
xor
incl
lds
repnz
sbb
lock
and
in
in
mov
adc
xor
jge
mov
ffree
int
xor
jle
test
pop
push
xchg
sub
shl
jle
fwait
push
jp
pop
movsl
xor
roll
dec
mov
jg
shl
or
hlt
mov
and
xchg
sub
jne
mov
in
out
test
in
jmp
sbb
scas
lahf
movsl
cwtl
dec
xlat
mov
jge
xor
imul
mov
es
in
push
and
leave
out
or
mov
cmp
mov
shlb
sbb
sub
lcall
pop
lahf
movsb
inc
jno
mov
jae
and
adc
shlb
iret
mov
nop
loope
push
xlat
insb
jg
pop
cmp
fsts
mov
mov
pop
roll
test
inc
adc
adc
test
mov
divl
lret
cwtl
cmp
sbb
xchg
idivl
lahf
loopne
mov
mov
shlb
dec
imul
flds
push
rolb
xchg
jne
inc
adc
jbe
push
add
jns
popa
fnsave
inc
stc
add
pop
cmc
mov
cmc
sbb
and
or
mov
aas
mov
repnz
out
filds
add
push
pop
fs
lea
into
dec
add
mov
mov
stos
and
add
popa
in
pop
lods
nop
push
sbb
or
jbe
fcompl
xchg
stos
inc
add
sbbl
add
push
add
pusha
stos
les
nop
arpl
nop
and
popa
push
pop
jne
dec
mov
cmpsb
and
dec
cmpsb
flds
lea
dec
gs
arpl
adc
je
jae
gs
outsb
gs
loop
inc
cmpsl
mov
xor
mov
mov
aas
jle
test
addr16
push
jl
adc
mov
jnp
pop
xor
mov
add
and
push
or
hlt
inc
or
fimuls
add
lods
pop
xchg
pop
and
sbb
mov
nop
push
mov
jbe
mov
mov
add
div
add
loop
cwtl
int
lods
lahf
sub
sahf
lods
in
rclb
inc
rorb
push
imul
or
jmp
mov
sahf
daa
jnp
leave
inc
dec
push
mov
dec
push
sub
in
sbb
inc
test
stc
ret
scas
pusha
pusha
in
arpl
jg
cmpsl
inc
mov
xor
mov
loopne
enter
lcall
in
or
out
stos
cmp
xchg
and
fs
call
xchg
in
repz
imul
stos
pop
cltd
pop
in
shrb
xchg
xchg
je
sbb
cmp
ffree
addb
and
fmulp
sbb
cli
fsubr
inc
jp
out
into
les
in
adc
mov
je
and
mov
clc
adc
lods
in
cmp
int
inc
test
inc
xor
pop
add
clc
outsb
lcall
and
push
enter
inc
jno
arpl
jae
out
xchg
mov
mov
dec
bound
jno
lahf
mov
mov
mov
xor
lock
loop
sub
adc
bound
sti
repnz
mov
outsb
sbb
decb
scas
add
mov
cltd
sahf
mov
and
lahf
imul
pop
sbb
arpl
pusha
lods
jae
cmpsl
scas
dec
repnz
mov
mov
cmc
mov
test
icebp
repnz
xchg
fistpl
inc
sti
shll
shr
push
mov
shrl
cmp
adc
loope
sub
scas
arpl
xor
sbb
cli
jg
imul
lds
cmp
lds
inc
mov
push
or
xlat
in
sub
mov
pop
or
imul
cmc
lret
cmpsl
add
and
aaa
sahf
shr
cmp
sbb
sbb
cs
adc
cmp
push
mov
inc
cmpsb
call
sbb
daa
push
and
in
adc
xchg
ja
inc
inc
aaa
and
inc
lock
lock
push
push
xchg
lret
jp
dec
lds
sbb
cli
cld
jp
adc
push
cmpsl
loop
adcl
inc
jg
pop
mov
mov
daa
test
xor
cmp
fwait
sub
jge
jb
ret
enter
push
fcmove
dec
ficompl
into
idivl
mov
out
fildl
jecxz
jns
in
rorb
jg
sub
mov
pop
hlt
mov
neg
movsl
mov
fucomip
adc
imul
adc
rcrl
out
fldcw
outsb
xchg
or
sub
xchg
push
orb
or
and
pop
mov
ret
push
mov
sub
xor
push
mov
mov
sub
add
movl
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
push
sub
mov
negl
mov
sbbl
xor
push
mov
add
mov
mov
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
mov
xor
xorl
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
xor
movl
mov
movl
cmp
jne
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
andl
mov
xor
add
add
mov
mov
adc
xor
mov
mov
andl
xor
mov
mov
add
jmp
xchg
popa
in
jne
jbe
in
sbb
cld
xchg
in
mov
jnp
scas
cwtl
jnp
addr16
cmp
xor
mov
mov
dec
or
test
or
push
dec
arpl
fidivrs
sub
xor
call
adc
cmpsb
sbb
fcmovne
icebp
inc
push
and
xor
lret
xor
xchg
test
fildl
das
ja
lea
and
inc
jle
pushf
xchg
or
mov
xchg
decb
ja
movsb
popa
add
mov
push
xorl
int
popl
cltd
adc
in
lock
mov
jo
bound
cmp
sbb
xor
jle
cmp
lcall
test
cwtl
cltd
arpl
or
add
mov
in
xchg
loope
js
lret
loopne
sub
in
test
in
fucom
ja
cwtl
fisubrs
xchg
push
clc
pusha
negl
mov
fwait
jne
mov
sub
stc
jge
andl
jg
sti
pop
cmp
cmp
mov
push
push
mov
popf
cli
pop
stos
scas
int
cmp
cmp
and
adc
jbe
test
adc
mov
sub
mov
cld
ss
outsl
dec
mov
add
add
cmp
or
adc
and
pop
push
rorb
stos
loope
incl
sub
sbb
push
dec
fsubs
cld
cmp
push
scas
repz
fadds
pop
cmpl
loopne
add
xor
pushf
jmp
inc
mov
push
push
sub
mov
sub
cmpsb
adc
mov
fwait
mov
push
leave
enter
aaa
pop
cmp
adc
sbb
test
jecxz
add
movsb
test
sahf
pop
sub
std
or
test
aad
insb
push
cmpsl
adc
lahf
dec
daa
and
sbb
mov
dec
jbe
pushf
in
sub
les
fiadds
daa
push
aad
outsb
sbb
popa
mov
jge
jmp
es
sahf
lcall
mov
aad
pop
and
sbb
in
test
push
mov
sbb
out
push
lea
insb
mov
ror
js
push
aad
dec
add
in
sahf
cmpsb
sub
leave
daa
les
adc
jbe
or
movsb
mov
dec
dec
and
sub
out
cld
mov
xor
scas
add
pop
insb
test
adc
mov
arpl
xor
loopne
push
add
in
rcr
mov
incb
or
ljmp
ljmp
scas
mov
jns
or
imul
sbb
cmp
test
lcall
pop
loopne
loopne
aaa
push
push
xchg
jge
andb
mov
sar
push
movsl
outsl
aad
in
nop
mov
stc
dec
pushl
rorl
je
xor
dec
xorl
jne
cmc
pop
insb
push
inc
fcomip
out
dec
rorl
jmp
dec
push
sub
enter
jg
ret
sbb
mov
cs
cmp
test
test
or
mov
mov
movsb
je
jae
xlat
dec
push
adc
ds
adc
shll
xchg
jnp
jge
add
jge
rclb
negb
sub
jg
or
mov
out
sbb
nop
sti
sti
sbb
imul
sub
jno
sub
das
sub
add
lahf
dec
insb
lcall
push
cs
xor
scas
stos
or
xlat
and
in
xor
arpl
shrb
mov
mov
fs
dec
int
movsb
add
loop
inc
out
jp
mov
loop
stos
adc
cwtl
and
add
test
inc
cltd
xor
sti
in
ds
out
fnsave
pop
mov
sbb
sbb
and
pop
repz
test
mov
xchg
mov
imul
iret
aas
mov
dec
ret
jge
mov
outsl
add
pushf
loopne
cmp
mov
xchg
jae
cld
mov
jle
lods
jp
sbb
insb
sub
pop
incb
ja
jb
imul
or
inc
cmpsl
xchg
lret
mov
out
xchg
mov
cld
mov
bound
data16
mov
stos
adc
pushf
adc
sbb
icebp
pop
adc
bound
push
loope
outsb
movsb
daa
aas
in
les
adc
sbb
fimull
divl
and
add
adc
lea
cmc
jle
jae
push
das
int
loopne
inc
insl
stos
shll
subb
dec
clc
mov
ret
jle
mov
and
push
insb
dec
jne
mov
push
dec
jle
cmpsl
dec
stos
mov
pop
int3
jbe
mov
jbe
imul
insl
cwtl
add
adc
fwait
jne
aas
ds
add
cmp
iret
add
pop
jp
in
shrl
cmp
jl
jmp
sti
xorb
xchg
jl
divl
xchg
das
fwait
mov
jmp
fwait
movsl
mov
lcall
add
scas
push
mov
loop
xchg
push
nop
clc
xchg
scas
in
dec
ret
movl
aam
push
les
adc
hlt
adc
xchg
jb
and
adc
or
add
push
adc
fistl
adc
repz
repz
sbb
mov
cs
cwtl
out
insb
mov
ss
repnz
call
rorb
inc
mov
pop
and
fmull
xor
pushf
pop
jle
pusha
inc
scas
push
inc
subb
test
call
cmpsb
and
cltd
jecxz
and
pop
outsb
sbb
inc
mov
fidivl
loop
into
sbb
sbbl
popf
sarb
popf
sti
cmp
inc
addr16
ds
add
nop
or
sbb
dec
mov
push
inc
fsubp
movl
jne
jp
imul
jp
or
bound
lods
imulb
adc
jg
xchg
or
test
xor
sbb
leave
sbb
enter
aas
sub
dec
ret
pop
enter
xchg
inc
push
mov
xchg
hlt
mov
or
mov
addb
int
and
fnstenv
addr16
dec
bound
xor
in
mov
test
loopne
dec
xor
aaa
dec
inc
in
xor
mov
mov
inc
and
fidivl
jae
add
sbb
inc
xor
fisubrl
sub
loop
lods
mov
sub
aas
scas
mov
in
jae
aaa
sub
jmp
push
test
inc
int3
outsl
push
mov
sahf
xchg
push
loopne
pop
mov
test
loope
fcomi
fld
xchg
repz
popf
out
mov
out
in
je
mov
sbb
xchg
mov
repz
sub
jo
outsb
push
xor
adc
ret
sahf
xchg
sub
fstpl
mov
mov
inc
pop
adc
lret
mov
jmp
lahf
aaa
jmp
mov
jbe
adc
sub
push
subl
jmp
jle
mov
inc
jp
push
dec
jmp
dec
xor
jp
test
mov
popa
mov
mov
ret
shrl
mov
les
in
rol
out
jmp
and
fisubs
lods
mov
stos
fldenv
pop
cs
push
out
inc
fs
xor
sti
out
lods
lods
push
mov
pop
flds
jmp
shrl
sbb
mov
sbb
ljmp
call
cmp
cltd
mov
ds
pop
shlb
xchg
lret
or
jmp
jg
int3
push
rcrb
mov
cli
lock
adc
jnp
das
pop
mov
icebp
sbb
rcl
dec
call
cld
jne
pop
stc
dec
test
lcall
inc
mov
push
fdivrl
inc
mov
cmp
and
xchg
xchg
xlat
dec
dec
push
vdivps
mov
mov
jae
xchg
aad
filds
lods
mov
pop
dec
loope
push
cmp
std
iret
es
xor
xchg
xchg
xor
outsl
pop
inc
jne
mov
dec
ret
scas
ficoml
hlt
in
loopne
mov
or
xor
imul
loopne
jb
mov
dec
xor
test
add
add
in
push
iret
imul
mov
inc
inc
push
adc
out
or
lods
lock
and
inc
or
rcrl
or
popa
popa
jmp
insb
and
imul
push
jnp
adc
cs
aad
jnp
jg
movsb
mov
std
lret
dec
leave
in
mov
xor
loope
and
mov
mov
les
add
ja
repz
add
bound
jp
stc
mov
adc
push
scas
out
inc
adc
xlat
sbb
in
cwtl
lret
aam
cmpb
ja
shrb
out
jl
out
push
fimuls
jmp
adc
sub
mov
xor
xor
mov
pop
repnz
loope,pt
fidivs
movsl
std
cwtl
call
cmp
dec
movsl
js
cmc
inc
or
out
cld
je
mov
es
dec
xor
xchg
loop
popa
mov
jb
mov
push
fsubrs
enter
add
in
pop
jecxz
gs
and
mov
cs
inc
pop
adc
inc
in
sbb
push
sar
xchg
jnp
pop
jp
adc
inc
mov
jle
sbb
adc
stos
push
daa
add
daa
fcmovbe
or
and
rorl
cs
popa
sub
pusha
out
movsl
dec
iret
div
into
jo
aaa
sub
sub
inc
mov
mov
cs
testl
and
int
cmpsl
scas
mov
pop
out
mov
dec
mov
pop
sbb
jle
pop
addr16
addr16
fmul
sbb
sub
sbb
cld
stc
negb
jl
std
cltd
jno
popf
fcomp
jbe,pt
addr16
clc
js
mov
shlb
and
mov
adcb
mov
lock
aam
js
sbb
mov
leave
dec
cwtl
mov
cmp
cld
fs
or
outsb
cmpsl
xchg
adc
sbb
sub
loope
outsb
xorb
roll
mov
inc
add
jns
out
dec
dec
jae
outsl
mov
add
stc
enter
add
and
rcr
jnp
dec
es
sub
subl
xchg
adc
push
or
in
push
cli
mov
hlt
add
dec
fistl
adc
movsl
subb
lcall
push
neg
icebp
arpl
add
lock
ret
xchg
rcll
faddl
pop
jle
loope
pop
arpl
mov
push
stos
pop
mov
pushl
repnz
push
fldl
add
dec
bswap
and
push
lcall
and
xchg
ret
aaa
adc
repz
out
fidivrs
xchg
leave
psubb
mov
in
mov
pop
sbb
cmp
adc
mov
sbb
in
pop
outsl
insb
ja
lods
das
xchg
mov
call
inc
gs
js
mov
pop
cltd
add
mov
mov
jae
pop
out
pusha
rclb
insl
mov
mov
in
mov
sti
call
mov
sti
ss
dec
fnstcw
jg
data16
sub
mov
dec
mov
and
std
cs
xchg
inc
or
adc
jae
lahf
mov
stos
xchg
pop
adc
or
jmp
in
stos
push
movsl
jae
cmp
mov
fidivrl
ja
mov
sub
and
mov
jle
cmp
sub
cld
inc
cltd
pop
push
scas
mov
call
xchg
rorb
add
test
or
movb
dec
call
loope
mov
sub
dec
adc
inc
push
push
fistpl
pop
sbb
sbb
int
addr16
mov
push
xlat
cmpsb
mov
repnz
push
jg
sbb
dec
lock
jg
fisubl
test
push
call
lcall
ret
fisubs
adc
fstpt
inc
sahf
pop
inc
jbe
xor
aam
jecxz
mov
out
and
mov
dec
cmc
pop
sub
int
leave
push
stos
outsb
lods
cmp
sbb
popf
sbb
lds
lret
and
inc
push
test
and
in
cmp
outsl
cmpsl
addr16
jae
xchg
xor
xchg
add
js
scas
cs
and
mov
lock
or
add
and
or
push
jmp
pop
imul
popf
sub
imul
ret
enter
fcoms
lea
ljmp
aam
xchg
dec
xchg
adc
xchg
nop
push
push
std
push
mov
imul
cmpsl
shlb
int3
call
mov
cmc
sub
sahf
xchg
sub
xor
adc
shrl
fs
cwtl
mov
xor
sub
xchg
cmp
leave
mov
cwtl
movsl
pop
into
popf
lret
jno
out
ret
sbb
jne
mov
add
out
mov
mov
mov
xor
je
fwait
movb
adc
fisttpl
out
vrcpps
add
sahf
jl
cmp
mov
push
mov
jo
movsl
subl
jle
int3
adc
mov
mov
fucomi
adcl
stos
sub
mov
xor
jae
sub
jae
sub
cmp
add
aaa
or
lret
ret
xor
int
and
fcomps
push
loopne
orl
std
pop
pop
adc
call
rcr
rorb
jb
xor
aad
lock
pop
cmp
jo
push
out
inc
es
int3
jmp
ds
in
jno
inc
rcrb
clc
lret
cltd
mov
call
dec
aaa
add
push
out
mov
fwait
insl
fst
out
adc
xor
outsb
dec
sbb
std
jbe
push
insl
pop
xchg
in
sti
ss
scas
iret
pop
inc
inc
les
dec
std
xlat
push
sbb
xor
or
addr16
movsb
and
lcall
popa
mov
push
mov
pop
mov
repz
and
ror
fistps
or
and
mov
xor
insl
fidivrl
mov
sbb
sbb
sub
push
inc
insb
in
sub
repz
xchg
pop
xorb
push
fistpll
mov
xchg
bound
xchg
xchg
xchg
pop
repz
pop
or
aaa
mov
fisubs
add
jbe
movsb
ss
mov
cmpsb
and
nop
inc
ja
mov
cmp
sub
imul
clc
push
and
sbb
mov
pop
or
loop
jo
xchg
lcall
je
sub
lret
aad
movb
mov
mov
repnz
cmp
pop
icebp
enter
dec
lahf
sbb
mov
fwait
add
roll
mov
push
cmc
sbb
mov
ss
jecxz
xlat
cmp
out
or
xchg
jl
movsb
sbb
mov
adcl
daa
enter
and
mov
adc
and
int
pop
stos
adc
or
fs
mov
and
js
mov
xchg
outsl
cli
stc
or
fnclex
pop
cwtl
push
cmp
dec
in
pushf
stos
ficompl
jge
inc
mov
add
ror
or
mov
inc
ds
call
scas
mov
popl
mov
sub
ja
adc
push
aad
cmp
out
loope
andb
mov
cld
add
sbb
mov
dec
dec
push
std
dec
dec
repz
test
loop
pop
out
imul
or
hlt
xchg
loop
outsb
xchg
sub
cmp
sti
loope
pop
push
dec
lds
nop
jmp
enter
mov
stos
push
mov
sahf
xor
test
movsl
xchg
xor
filds
cli
push
ficompl
cmp
aas
fs
mov
cmc
imul
mul
stc
and
in
test
xchg
push
adc
sbb
sub
shlb
ljmp
inc
push
lret
jp
pop
cmc
xchg
pop
sub
lods
mov
xor
xchg
shrl
mov
push
adc
cmpsb
add
push
sbb
fsubrl
xchg
inc
push
rcll
jne
ja
js
sbb
rorb
shl
mov
mov
ja
adc
repz
and
jp
cwtl
test
stc
aad
lret
loop
faddp
inc
lcall
sbb
jno
and
fwait
add
inc
sbb
addr16
sbb
mov
mov
mov
fmul
push
gs
aaa
dec
xchg
push
xlat
cmpsb
mov
pop
stc
mov
sbb
jge
push
out
add
leave
adc
lods
or
je
addr16
mov
ret
push
and
les
lret
lret
cmp
fwait
inc
orb
inc
push
leave
fs
pop
movsb
cmc
jg
push
shrl
scas
cld
xchg
push
sbb
pop
push
mov
sbb
aaa
cmp
dec
cmp
cltd
cs
xor
test
push
xor
fisubs
or
mov
cld
pop
imull
es
mov
mov
push
sbb
lock
jmp
add
jmp
xchg
jecxz
shlb
xor
inc
or
jne
and
pop
adc
mov
dec
nop
mov
lds
adc
mov
ss
iret
jle
mov
sarl
jge
mov
push
out
add
pop
pop
inc
xor
and
jnp
jecxz
mov
stc
xchg
mov
insl
js
je
sbb
pop
repnz
fcoml
test
dec
enter
adc
cmp
xchg
inc
cmp
aas
lahf
jecxz
and
cmp
enter
inc
jno
neg
sub
xor
mov
pop
imul
dec
mov
pop
ret
repnz
popa
dec
sub
lods
ret
gs
xor
popa
xor
rcrb
add
pop
pop
adc
sbb
insl
jmp
and
or
std
sub
enter
pusha
jb
stos
imul
jl
pop
xchg
dec
inc
aad
sbbb
in
test
dec
mov
adc
fs
inc
mov
or
mov
pop
push
xchg
sti
mov
cmpb
rcl
scas
xchg
aas
std
out
gs
fwait
xchg
mov
iret
fwait
mov
scas
cli
push
fistpl
roll
ljmp
or
push
fwait
pop
adc
daa
jl
out
pop
lahf
xchg
aam
test
test
xor
lea
dec
cmp
cmp
adc
movsb
insb
pushf
insb
pop
adc
mov
cld
xchg
mov
sbb
push
addr16
add
dec
pop
out
repnz
ficoms
hlt
push
dec
push
cs
stc
loopne
push
jb
inc
int3
adc
mov
std
mov
or
fsubrs
stos
dec
lret
jecxz
movsb
ret
and
dec
data16
nop
or
jnp
xor
scas
pop
dec
ss
cmp
mov
sub
notl
xor
shll
in
loope
pop
rclb
dec
inc
shrd
xor
lcall
xorb
shl
xchg
loope
xchg
fs
pop
push
push
test
push
pop
xorb
or
and
fcompl
fisttpll
add
lcall
or
xor
xchg
movsl
or
lcall
mov
repz
jl
mov
out
negl
sbb
aaa
imul
out
imul
daa
pusha
inc
xchg
jge
xchg
ja
sbb
xchg
mov
adc
push
test
cmc
mov
xchg
mov
cli
movntq
mov
sub
pop
jge
gs
dec
pop
jb
push
out
addr16
jo
sub
push
sbb
icebp
rorb
xor
jno
scas
out
loopne
cmpsl
test
daa
push
fucom
jae
jge
out
pop
ss
xchg
jnp
stos
decb
push
mov
mov
out
lahf
jmp
inc
cmp
inc
test
je
addl
pop
lret
cmp
addr16
add
aam
push
and
or
mov
sbb
xlat
std
adc
repz
and
add
test
mov
insb
je
popf
icebp
jle
aas
xchg
mov
jbe
adc
lret
mov
mov
or
sub
cld
jmp
test
out
fninit
pop
int
or
push
pop
xlat
sub
nop
mov
jo
out
into
fisubl
push
icebp
paddq
int
aas
xchg
mov
jecxz
pusha
dec
push
lea
testl
mov
movsl
subl
mov
adc
ret
inc
bound
ficomps
push
lea
xchg
pop
mov
push
hlt
sub
cmp
inc
in
inc
test
sub
divb
bswap
clc
cmp
scas
and
adc
sbb
aad
aaa
cmp
xor
push
dec
call
jle
mov
dec
sbb
nop
fwait
jae
enter
popf
inc
xor
dec
dec
sub
cmp
popf
shrl
jge
add
lea
sti
xlat
shr
dec
movsb
clc
inc
aad
mov
test
adc
sub
fnsave
cld
push
mov
test
stos
orb
cmp
insl
mov
jle
lea
shrl
lret
mov
lock
pop
outsb
das
mov
sub
push
ret
pusha
nop
movsl
jbe
adcb
sbb
inc
aas
jb
mov
pop
and
and
mov
mov
loope
mov
cmpsl
out
les
ljmp
aaa
mov
or
scas
jbe
sub
inc
cli
out
inc
ss
dec
ljmp
dec
mov
cmp
push
into
es
outsb
outsb
jne
lahf
arpl
push
dec
adc
cmp
call
ret
std
cmpsb
imul
movsb
arpl
arpl
ficoms
sbb
jl
enter
sub
cs
mov
inc
push
inc
sub
movb
or
jmp
sbb
mov
jb
push
cmp
mov
mov
inc
pusha
repz
movsl
xchg
push
data16
push
test
test
test
leave
xchg
loope
mull
shlb
int3
xor
inc
clc
xor
and
pop
cmp
sbb
jo
or
mov
testl
jno
jge
lea
mov
test
fcoml
fadd
and
out
in
add
ljmp
je
in
lret
rep
mov
cmp
sbb
jle
jnp
hlt
mov
clc
mov
rcll
xchg
and
mov
into
mov
subl
in
sub
dec
ljmp
aaa
jmp
pop
fsts
xchg
pop
sub
test
insl
movsl
test
xor
or
out
fidivrs
sub
mov
loop
and
add
dec
adc
push
iret
xchg
dec
fs
pushf
cmpsb
lods
clc
cmpsb
sbb
shlb
mov
add
push
or
xchg
lock
fcmovbe
data16
out
arpl
sahf
mov
andl
addr16
shrb
mov
clc
in
aaa
hlt
mov
push
ja
push
dec
add
pop
popf
push
xlat
shrd
sbb
mov
repnz
dec
pop
push
popl
adc
fadds
and
fsts
push
lds
jp
ret
cmp
mov
and
fcompl
or
sub
dec
mov
push
and
insb
xchg
or
lsl
es
mov
out
mov
adc
mov
cs
in
nop
jbe
inc
idivl
hlt
sub
icebp
movsl
xlat
adc
mov
add
aad
pop
imul
xchg
xchg
hlt
aaa
es
pop
sub
stos
jmp
imul
outsl
or
xor
add
mov
inc
cmp
mov
mov
int3
push
int
jno
cltd
jp
cwtl
mov
adcl
push
paddq
sub
sub
pop
push
dec
cld
jg
mov
push
or
jle
insb
xchg
scas
push
adc
jb
imul
hlt
pop
cmpsl
fdivl
in
or
jb
sub
mov
mov
testl
lods
cli
mov
add
jg
and
xchg
je
dec
sti
insb
int
cmp
in
aam
lea
in
xor
pop
mov
inc
leave
in
aam
push
adc
inc
pop
mov
lret
mov
jne
inc
pushf
stc
push
subb
xchg
mov
out
dec
jo
dec
sub
inc
add
ror
push
dec
scas
testb
adc
or
mov
sbb
jp
push
lods
das
pop
cmp
dec
sahf
mov
cmp
fisubrl
adc
xchg
mov
dec
and
or
fbstp
roll
or
xor
sbb
xchg
add
mov
adc
and
sbb
xchg
pop
push
stos
and
into
push
xchg
enter
rol
mov
insb
or
mov
inc
xor
inc
loop
repnz
cmp
push
dec
cmp
xor
sub
xor
loope
push
jecxz
lds
or
lret
movb
lret
push
mov
sarl
cltd
sub
xor
fdivs
call
xor
btc
jmp
dec
lock
mov
sub
jb
mov
sbb
pop
outsb
and
cmp
ret
addb
xchg
xor
out
xor
mov
xchg
jnp
push
int
pop
fisubrl
pop
jmp
inc
ret
mov
xchg
into
sub
cmp
loopne
jb
mov
aas
lock
test
js
jne
loopne
xchg
inc
rorl
lret
push
inc
inc
cmp
test
movsl
jmp
dec
lock
pop
push
mov
mov
out
inc
test
cmp
dec
test
jle
psubusw
jne
popa
call
in
jne
cwtl
jp
inc
sub
mov
aas
cwtl
push
movsb
and
dec
and
outsb
mov
add
add
cmp
inc
jmp
xchg
repnz
gs
pop
cmc
inc
sbb
pop
xchg
mov
lcall
aaa
mov
sbb
or
fcmovne
sahf
cs
cs
loopne
ja
mov
ficomps
ss
jge
mov
cmp
lret
pushf
pop
ss
clc
adc
cmp
sub
ror
pop
mov
je
lock
push
sub
ret
stc
cmp
pop
sarb
test
ja
lahf
sbb
or
fnstsw
push
inc
and
fs
mov
fwait
xor
xchg
testl
jmp
fwait
orb
cmp
inc
pop
push
rol
pop
cmp
mov
pop
in
mov
xor
enter
mov
ret
mov
pop
pop
fs
cmp
insl
adc
mov
outsb
cmp
adcb
lret
cs
out
loopne
dec
jno
ret
jnp
inc
repz
roll
sbb
test
or
cmp
aaa
xlat
xchg
scas
add
mov
pop
loopne
pop
xor
pushf
cld
lcall
popa
adcl
aad
lcall
mov
cmpsl
fwait
xchg
addr16
and
sbb
call
es
ljmp
xchg
fnsave
cmpsb
mov
xchg
mov
cmpsl
stos
ret
push
xor
xchg
push
jbe
repnz
in
mov
push
int3
pop
sub
lret
aas
test
and
xchg
arpl
test
pop
lret
and
jno
sub
and
and
test
pop
mov
aaa
rcrb
mov
sarl
push
leave
shll
test
jbe
repnz
xchg
push
loope
out
cwtl
jle
xor
pop
inc
sahf
or
push
fcoml
pop
ficompl
mov
mov
shrb
sbb
mov
sub
pop
cmp
adc
jnp
lods
mov
sub
and
jecxz
jle
dec
adc
xchg
mov
outsl
or
lods
mov
jmp
dec
loop
sarl
mov
push
mov
mov
sbb
int3
nop
movsl
imul
adc
push
loopne
outsl
insl
ret
and
jbe
add
jnp
and
loope
subl
inc
jbe
pop
sbb
orb
inc
scas
ret
and
jbe
mov
les
xchg
daa
xchg
testl
notl
cmpsb
mov
mov
pop
push
adc
nop
movsb
push
cld
call
leave
adc
and
clc
gs
push
subl
sbb
clc
jo
jecxz
mov
and
stos
adc
rcrb
sbb
add
test
jns
gs
pop
repz
pop
dec
dec
pop
add
jmp
ljmp
jnp
stos
cmp
jl
lcall
mov
fdivl
out
xlat
sbb
or
xchg
add
insl
xchg
adc
ds
inc
xor
out
xchg
cmpsl
inc
or
or
add
repz
xorb
jb
adc
loopne
pop
hlt
js
test
movsb
cmpsb
push
sub
fisubrs
dec
loop
sti
mov
adc
lahf
gs
stc
lds
dec
mov
push
mov
mov
cmp
into
mov
test
sbb
sbb
or
mov
sarl
push
jp
lods
out
outsb
hlt
xchg
jecxz
push
push
or
dec
sbbl
pop
rorb
lret
pop
call
mov
sub
jmp
sub
xchg
adc
add
movsl
push
adc
aam
ret
ret
loopne
sarb
ret
push
pushl
push
adc
lea
je
jbe
cli
xor
push
fsubrs
xchg
xor
and
test
test
lods
add
mov
mov
lods
cmc
sbb
inc
pop
gs
push
lcall
pusha
fldl
push
and
test
enter
negl
or
test
in
push
std
push
lea
adc
loop
in
shlb
cwtl
imul
in
adc
and
mov
sbb
and
push
inc
mov
cmp
mov
jbe
mov
pop
and
stos
pop
ljmp
imul
aaa
cmp
adc
jmp
jmp
add
adc
jb
mov
adc
jmp
push
jnp
scas
cwtl
jnp
sbb
and
push
adc
jno
pusha
push
sti
adc
xchg
addb
add
adcl
sbb
jns
data16
cmpl
push
lret
cmpsb
cmp
mov
or
jecxz
inc
shr
sbb
cmp
enter
cmovp
loope
adc
fists
out
sub
fs
jae
or
aas
add
loope
out
mov
mov
jecxz
addr16
leave
or
push
push
push
mov
adc
iret
fsubrs
mov
movsl
fisubl
sub
add
jmp
aaa
stos
mov
jle
movsl
inc
ds
lods
mov
push
sub
jmp
int
push
movsb
jecxz
jecxz
mov
out
xor
cld
stc
cmp
pushf
aad
testb
mov
pop
outsb
mov
clc
pop
leave
pop
lret
js
int
inc
sti
or
jb
imul
fs
popf
dec
lcall
int3
fs
mov
xchg
xchg
fcoml
les
cmp
dec
leave
call
test
cmp
jl
lret
rorb
sbb
stos
sub
mov
mov
rcrb
mov
lret
adcl
or
push
sahf
movl
add
jno
je
pop
outsb
sub
or
andl
inc
dec
pusha
rcll
push
lret
mov
mov
out
sub
shr
sbb
sahf
mov
push
add
and
enter
pop
sbb
ja
pop
xchg
pop
xor
jp
mov
subb
sub
push
jp
and
lcall
cmp
pushf
aam
xchg
lcall
sbb
adc
lods
pusha
xchg
mov
into
icebp
loopne
xchg
mov
add
xchg
jmp
or
fldt
inc
rdpmc
sub
pop
jmp
xchg
add
outsb
hlt
dec
loope
jo
cmpsb
jo
adc
hlt
int
xchg
inc
push
xor
pop
mov
adc
nop
inc
repz
imul
sbb
mov
jmp
fildl
mov
fbld
int3
iret
sub
imul
icebp
dec
push
and
into
loope
fsubs
xor
jns
add
xchg
sbb
stc
inc
aas
addb
stos
cmc
mov
sub
lahf
icebp
pushf
mov
les
lea
xor
mov
xchg
sbb
xor
lcall
sbb
and
out
loopne
aaa
push
outsl
cli
add
nop
shr
lcall
cmpl
fsubl
nop
ffree
js
stc
imul
rclb
cmp
mov
adc
mov
inc
shlb
in
adc
dec
cmp
jmp
int3
inc
sbb
add
inc
in
test
cli
loope
mov
movb
mov
mov
clc
sbb
and
scas
js
adc
mov
addl
pop
fdivrs
push
xchg
aaa
sub
or
mov
inc
or
inc
pop
rcll
cmp
xor
insl
pop
xor
pop
insl
xor
in
pushf
or
xchg
das
ret
test
fucom
scas
pop
pop
bound
outsb
adc
repnz
xor
push
adc
dec
into
out
mov
fstps
cmp
add
int3
jmp
mov
xor
bound
mov
fiaddl
or
cltd
out
mov
add
stos
call
mov
cs
aad
jo
sbb
lret
faddl
stos
jl
pop
dec
dec
mov
sub
cmc
lea
clc
pushf
xor
push
ljmp
jbe
lock
dec
std
inc
adc
inc
pop
das
cmp
cmp
add
jmp
jae
mov
mov
push
pop
cmp
addr16
subb
mov
jl
lcall
mov
jle
aad
je
scas
push
or
idivb
andb
dec
dec
jne
das
or
out
cmpsb
xor
pop
aam
in
xor
clc
sub
pop
mov
rcr
sub
xchg
push
mov
stos
in
addr16
cmpsb
mov
xchg
jg
dec
push
es
dec
aas
or
mov
push
add
and
ljmp
out
pop
mov
dec
xor
inc
add
clc
sbb
lret
negl
addr16
ljmp
adc
in
loope
cwtl
sbb
adc
xchg
or
fbld
jg
xchg
push
fwait
xor
lods
adc
rolb
int
clc
dec
push
mov
jno
cmp
xchg
lds
or
sbb
lret
loopne
scas
sarb
fs
lods
adc
inc
stc
ret
mov
mov
inc
js
push
sti
andb
and
mov
mov
dec
inc
push
mov
push
or
add
out
add
insl
xor
out
add
hlt
stc
js
mov
fs
push
shlb
mov
repz
rcl
sbb
push
push
fisttpll
xchg
loop
insb
das
out
lods
mov
cltd
popf
daa
push
adc
push
inc
xor
pop
fistpll
adc
dec
movsb
popa
jmp
cmp
sar
dec
mov
pop
cmp
add
movsl
test
push
xchg
jecxz
push
inc
aas
sub
dec
aam
stc
rsqrtps
or
in
addl
adc
push
or
sub
jns
mov
inc
loop
popf
shl
sub
cmp
cmp
cmc
xor
adc
or
xlat
insb
inc
mov
mov
dec
adc
icebp
mov
mov
fcoml
imul
mov
movsl
stos
cmp
and
inc
add
push
or
dec
sub
aam
loop
push
addr16
fcomps
pushl
mov
cwtl
call
mov
inc
cmp
sub
push
cs
icebp
cld
xor
inc
xlat
jmp
pushf
jae
sbb
dec
xchg
inc
into
shlb
stc
mov
mov
mov
push
sub
jmp
insb
test
lods
sbb
push
cs
orb
dec
fistl
clc
push
xor
lods
lock
xchg
pusha
xchg
clc
ret
xor
insb
ja
push
int
dec
cmp
inc
aam
or
fwait
pop
sub
adc
or
push
mov
fsubp
test
in
out
cmp
cmp
push
or
int
sbb
in
xchg
dec
lcall
xchg
icebp
in
lret
dec
scas
jbe
into
bound
sub
stos
jae
je
add
bound
and
mov
test
inc
lret
and
cwtl
pusha
mov
cwtl
ret
repz
fsubl
iret
mov
clc
cmp
jmp
test
in
add
push
mov
pusha
inc
lcall
jae
in
ljmp
leave
push
inc
outsl
jb
shl
test
dec
lcall
ret
xor
jno
std
mov
mov
cmp
cmpsb
imul
stos
sbb
xchg
into
mov
jne
sbb
scas
and
pop
sbb
or
sub
pusha
mov
push
out
mov
inc
dec
xor
mov
std
xchg
fsubrl
xchg
inc
push
mov
pop
testb
mov
mov
rcll
xor
and
pop
push
ret
mov
aas
nop
xor
repz
cmp
sbb
shll
cld
imul
pop
jnp
sahf
add
xchg
repz
adc
aam
jmp
or
pop
mov
or
inc
push
xor
jp
scas
push
popa
jbe,pt
cmp
ss
cmp
inc
mov
jns
not
test
add
out
dec
push
push
int
inc
pop
ss
pop
aaa
bound
dec
xchg
lock
pushf
in
add
xor
outsl
fwait
and
sub
mov
xchg
dec
testl
bound
out
sbb
pop
xor
xor
ret
hlt
jmp
cmp
xor
in
daa
xchg
gs
xchg
int3
aas
jne
mov
test
adc
lret
sub
add
and
inc
loopne
iret
lahf
int3
jg
fildl
push
pop
push
jge
arpl
addr16
jl
addr16
adc
gs
xor
repnz
mov
dec
in
and
inc
mov
test
and
popf
dec
shll
pop
mov
mov
fcmove
cs
push
sub
cld
mov
add
ret
sahf
adc
lods
arpl
jne
aaa
inc
sub
popf
fsubrs
inc
filds
cmp
out
mov
fwait
ret
lea
xchg
movl
mov
cmp
lock
jno
dec
add
xchg
arpl
mov
xor
or
and
nop
mov
lea
out
cmp
lods
shrb
and
cmc
inc
xor
sahf
call
popf
mov
aam
sbb
push
test
mov
ret
sti
rcrb
rep
ficoms
inc
mov
ficompl
mov
fcoml
or
dec
ss
mov
enter
sbb
adc
sub
cmp
xchg
aam
out
lock
push
jle
jns
das
pop
mov
popl
test
aas
cmpsl
call
rolb
mov
mov
jl
and
mov
lea
add
mov
inc
inc
jle
data16
inc
push
and
sbb
push
cmp
push
dec
mov
mov
ficomps
cmp
loopne
xchg
jbe
rcll
dec
rcr
notb
movsl
push
fdivrl
push
xor
fnsave
addr16
sbb
into
sbb
mov
js
stos
sub
push
jo
dec
sbb
jb
fisttpll
cmp
aaa
inc
xchg
ja
aaa
inc
jo
sub
sbb
decl
mov
xchg
lea
sub
das
lcall
add
int3
add
repz
jl
mov
add
xor
aas
add
sbb
jecxz
repnz
stc
adc
and
jne
and
dec
cmp
xor
mov
stos
dec
sbb
imul
pop
inc
bound
out
sbb
lock
cmpsb
mov
inc
out
and
andb
cmp
inc
lds
inc
jmp
and
jp
mov
pop
mov
pop
pop
mov
add
icebp
iret
out
fstl
inc
hlt
movsl
rolb
clc
jmp
in
fs
out
subl
mov
lods
pop
daa
adc
movsb
sub
jge
sbb
or
or
xchg
push
leave
nopl
test
fs
inc
in
sub
jb
cmp
das
frstor
mov
or
jl
pop
insb
mov
jmp
out
arpl
notl
fstps
fwait
xor
popa
pop
leave
bound
xor
cmp
inc
adc
aas
xchg
dec
aam
in
pop
jecxz
push
outsl
imul
aaa
test
dec
into
add
aas
movsl
xorl
mov
pop
dec
xorb
loop
lods
jae
int3
imul
out
loope
dec
pop
pop
cmp
lea
mov
or
lds
insl
in
sarl
pop
push
jnp
insb
cld
pop
arpl
mov
and
ljmp
arpl
jl
mov
sahf
dec
ficoml
mov
out
stos
call
xor
lret
fs
aad
stos
int
or
into
ss
xchg
mov
jo
insb
xor
lea
push
pop
lret
push
xchg
in
movsl
xchg
push
popa
les
sti
ss
aas
dec
cmpb
loopne
sbb
push
cmp
shrb
test
mov
add
or
mov
sub
into
in
jge
es
mov
das
test
pushf
mov
lods
jecxz
ljmp
outsl
mov
push
pusha
fwait
push
cwtl
ret
outsl
xlat
sbb
cmp
push
mov
jmp
ljmp
jb
cmpsb
jle
scas
cmp
mov
jne
out
lods
es
or
andl
sbb
and
add
and
sbb
xchg
icebp
xor
nop
dec
test
dec
mov
inc
fldenv
popa
and
ror
addb
inc
sbb
sahf
xor
cwtl
les
push
adc
and
or
add
mov
cs
repz
lods
xor
jne
add
or
and
setl
xchg
jmp
arpl
sbb
push
insb
push
arpl
inc
cmpb
ret
mov
xchg
insb
push
jnp
cmp
jg
xchg
jbe
or
lods
mov
lea
and
hlt
push
out
xorb
mov
out
nop
push
or
jl
push
andl
mov
jno
mov
add
mov
sub
add
out
push
cmpsl
adc
adc
test
bound
icebp
mov
stc
scas
sbb
clc
jge
xor
cltd
xchg
ss
push
test
pop
rcll
inc
lods
add
icebp
mov
mov
xchg
and
scas
xor
loopne
push
fisttpll
push
jnp
add
inc
sbb
mov
test
xchg
out
cmc
pop
add
orl
cmovl
inc
adc
and
fcoms
imulb
ljmp
cmp
in
push
sti
adc
or
mov
lcall
or
mov
ljmp
mov
mov
fcmovne
push
dec
sub
jo
or
jge
xchg
cmpsb
add
popf
mov
bound
hlt
jmp
call
in
test
incl
lds
push
pop
mov
inc
cli
ds
xor
inc
mov
mov
pop
jno
popf
lret
lods
into
xchg
sub
shlb
lea
inc
adc
cmp
mov
jnp,pt
inc
test
mov
stos
add
jge
jo
sbb
xor
in
or
cltd
popf
dec
mov
pop
stc
add
mov
xchg
mov
mov
in
ret
pop
jecxz
sub
push
cld
lcall
lret
test
repnz
arpl
sbb
aam
dec
jge
sub
mov
jg
mov
sbb
fwait
mov
sbb
rclb
add
lret
sbb
mov
lret
adc
xor
pop
push
popa
enter
add
push
jne
xor
lea
les
hlt
test
incb
sarl
inc
adc
ss
test
pop
cmp
mov
lock
and
add
test
sbb
in
out
push
loopne
add
adc
cmp
inc
xchg
aas
jg
lods
gs
out
add
mov
add
imul
sbb
mov
inc
jbe
sti
add
xor
insb
addr16
add
mov
adc
mov
jno
es
pop
das
pop
jbe
sub
mov
ret
insl
mov
dec
mov
and
jbe
mov
cmp
xchg
pop
into
sub
mov
push
mov
imul
cmpsb
out
pop
mov
insb
in
sbb
sbb
xchg
jle
mov
jbe
mov
adc
into
xchg
dec
stc
jg
mov
daa
and
ficoml
sti
lock
pop
les
mov
and
dec
out
imul
aad
es
test
std
mov
orl
fs
fsubrs
cld
in
out
cmp
js
std
cs
xor
shlb
fwait
addr16
push
fsts
cli
arpl
mov
pop
insb
mov
leave
loopne
pop
enter
iret
repnz
push
add
push
out
fcomi
mov
adc
roll
xchg
clc
ftst
stos
pushf
ss
hlt
sti
mov
adc
jnp
pop
xchg
das
mov
mov
pop
push
in
adc
cmp
enter
cmc
imul
repnz
add
pop
repnz
and
jb
mov
and
pop
testl
sbb
adc
jmp
jg
pusha
fdivs
aaa
roll
jge
faddl
mov
das
cmp
mov
mov
adc
add
dec
int3
outsb
jp
mov
cltd
inc
jg
enter
or
adc
imul
and
xorb
movsl
and
fcomip
mov
or
pusha
mov
into
fstpl
fwait
inc
pop
repnz
pushf
in
fidivl
lcall
stos
int3
cld
test
jo
addr16
loop
cmc
test
mov
or
mov
icebp
sbb
lods
inc
iret
pop
xlat
lds
adc
mov
mov
or
js
or
clc
and
pop
int
pop
lret
gs
inc
fadds
lret
add
out
les
inc
out
adc
cmpb
mov
movsl
repnz
popa
pop
pop
mov
sti
scas
ret
jo
pop
jg
mov
fldenv
jp
pop
push
jge
mov
jecxz
lock
jl
insb
cmp
sub
mov
enter
dec
push
dec
mov
cmp
sbb
dec
add
dec
push
dec
adc
cmc
push
xor
cmpsb
and
fsubrp
bt
jp
dec
bound
insb
in
pushl
lahf
data16
in
ljmp
cmpsl
ret
jbe
push
push
sbb
cmp
add
mov
mov
sbb
push
sbbl
bnd
mov
roll
jl
cs
das
xchg
jbe
ds
jl
cld
imull
jnp
lods
fdivs
ret
std
and
daa
mov
add
scas
inc
mov
mov
cli
notl
push
xchg
out
sahf
sbb
std
out
cmp
mov
test
pop
pop
xchg
sub
notb
mov
cmpsb
addr16
dec
loopne
adcb
lods
dec
mov
pop
mov
mov
call
mov
int3
in
add
push
shr
mov
adc
mov
popf
push
in
lret
inc
mull
inc
sub
dec
bound
loop
push
sub
inc
cmpsl
rorl
fs
lds
sub
into
pop
pop
dec
pop
jmp
mov
push
cmp
pop
jecxz
cmc
data16
jbe
test
pop
outsb
or
and
stos
int
or
test
add
roll
ret
lret
sub
push
movsl
lcall
fucompp
cmp
jp
and
xchg
ja
loope
push
and
add
orl
cmp
mov
mov
out
scas
xor
pop
in
aam
loope
in
nop
std
push
add
inc
arpl
sub
lea
test
rclb
loop
inc
shlb
loope
mov
js
aas
pop
cmc
mov
pop
dec
cmp
dec
xor
int
fwait
sbb
jg
mov
imul
xchg
fidivrl
aas
xchg
stc
mov
ret
sub
pop
fistps
mov
add
andb
test
inc
add
pop
and
add
cwtl
mov
sbb
adc
sbb
jno
test
adc
sub
adc
lds
push
shlb
add
pop
jne
mov
js
ljmp
pusha
mov
fsubs
addr16
dec
adc
sub
aaa
and
xchg
jg
inc
fidivrl
mov
jmp
lods
xchg
sarb
push
leave
inc
int3
in
cmpb
je
test
cwtl
lds
lods
and
pop
in
sub
jle
adc
test
pop
lcall
out
loope
lods
rol
sub
push
jae
clc
xchg
inc
ljmp
mov
xchg
out
or
out
cli
xor
cmp
subb
mov
sub
negl
pop
mov
sub
dec
push
xor
push
push
je
lret
out
mov
andl
aad
shlb
neg
dec
mov
call
jno
mov
stos
fstl
sub
sbb
inc
or
into
nop
dec
bound
fmull
inc
addl
sub
adc
pop
test
jle
sub
mov
mov
aam
outsb
jb
adc
mov
nop
jns
adc
adc
ljmp
aaa
iret
xor
stc
loop
addb
int
lret
jno
repz
jmp
mov
push
ret
mov
add
lcall
fnstsw
cmpsl
or
in
or
outsl
mov
sbb
adcl
or
sbb
imul
loop
push
ja
leave
pop
jns
pop
sbb
push
or
in
push
mov
test
pop
mov
mov
cmc
add
cli
pop
cli
aas
adc
mov
push
inc
ljmp
cmp
jo
insl
xor
movsl
pop
mov
std
dec
xor
fadds
pushf
stos
dec
hlt
aam
scas
out
cld
insb
pop
sbbb
sbb
or
pop
xorb
js
pop
fsts
fildl
push
in
jno
pop
dec
call
xor
out
mov
push
out
cmp
shl
mov
and
int3
aas
pop
jns
xor
les
iret
inc
add
loopne
out
push
jnp
xor
in
fwait
or
es
inc
cmp
jae
leave
fs
lret
add
mov
adc
ja
mov
mov
cmp
xorb
mov
dec
sbb
cmp
in
mov
add
pop
or
xor
jae
or
cmp
pop
or
call
push
in
scas
jg
repz
int3
sbb
aas
xchg
push
jae
inc
and
xor
sbb
js
movsb
repnz
inc
and
clc
jae
notl
pop
jmp
cmp
sub
push
imul
cmc
jp
mov
cmpsl
lret
fs
and
jl
cld
cli
xlat
sub
ret
repz
fidivs
out
push
pop
lret
cwtl
stc
lret
daa
cmp
cmp
jmp
mov
adc
std
gs
insb
mov
cmp
cmp
add
dec
pop
jne
xor
jns
hlt
cmp
xchg
add
int
dec
ds
sbb
mov
ret
sahf
sub
add
imul
frstor
popa
lcall
jp
addl
mov
pop
cld
and
mov
scas
cmp
shl
stos
xchg
mov
out
gs
lahf
cmc
dec
adc
xchg
stc
xor
das
pop
test
lret
mov
mov
lea
mov
mov
sbb
insb
lcall
lods
sub
or
xchg
cs
mov
pop
imul
clc
push
iret
rolb
sbb
and
imul
lock
bound
fprem1
rcrb
lret
sub
repz
shlb
add
nop
sub
cli
orb
adc
out
int3
iret
movd
jo
stc
mov
into
mov
mov
jmp
popa
jmp
mov
fsubrs
test
cmpsb
mov
jno
sub
mov
mov
xchg
lock
adcb
mov
ret
mov
lods
push
pop
sub
cmp
push
nop
icebp
xor
int
bound
jo
inc
dec
mov
sbb
call
scas
je
movsb
xchg
or
stos
push
orps
lock
bound
aaa
not
addr16
xchg
fidivl
shr
jl
mov
pop
arpl
jl
cmp
inc
lcall
adc
inc
mov
aaa
xor
das
leave
aaa
std
sbb
lds
mov
fs
mov
add
pop
mov
inc
mov
cmc
sahf
xchg
loope
scas
pop
sbb
jge
dec
pop
push
mov
inc
int
xor
push
rcrb
daa
adc
pushf
es
pop
in
pop
pop
pushf
and
notb
cwtl
lret
scas
jg
loopne
ljmp
cwtl
stos
test
and
outsb
xor
mov
notb
ds
int
adc
insl
clc
dec
adc
add
jmp
xor
cmp
cmpsl
lret
in
loopne
insl
adc
dec
aas
mov
inc
loopne
adc
in
pop
push
ficoml
and
push
insb
and
xchg
arpl
loop
dec
xor
pop
call
shll
addr16
dec
dec
loopne
test
xor
arpl
shrb
movsl
test
daa
add
dec
xchg
lea
stos
faddl
aas
and
sarl
jecxz
pop
add
repz
mov
and
in
push
jae
xchg
data16
test
xchg
jo
mov
gs
adc
cmp
test
mov
je
push
out
fmul
mov
test
pop
push
jbe
jns
cmpsb
mov
mov
and
imull
jne
dec
jge
mov
push
inc
andl
xor
mov
std
popa
mov
push
aas
sbb
in
adc
lods
mov
jg
sub
add
dec
aad
lea
cmp
cld
iret
in
int
notl
mov
dec
aas
xchg
out
test
lea
xchg
mov
mov
pop
icebp
lds
pushf
jle
ficompl
in
mov
dec
inc
xor
iret
xor
cmp
inc
addr16
mov
pop
lea
mov
dec
fadds
shll
adc
sahf
adc
fs
sbb
xchg
add
mov
pop
sarb
xchg
cmpsl
cmp
daa
jmp
add
test
xlat
mov
pop
ja
adc
cld
sti
mov
lods
jnp
mov
xor
cmp
add
or
mov
pop
enter
mov
jge
cmp
popf
gs
je
dec
add
sar
pop
rcrb
mov
je
inc
movsb
clc
int3
out
and
in
aad
or
movsb
stc
xor
inc
mov
hlt
in
inc
repz
jo
pop
fcomi
mov
pop
imulb
cld
outsl
stos
or
mov
aas
cmpsb
sub
jl
subl
in
in
push
pop
sbb
sbb
scas
pushf
or
mov
bnd
nop
sahf
call
imul
and
pop
pusha
dec
fnstenv
dec
and
fisubrs
xchg
mov
das
sbb
cmp
jmp
int3
cmp
test
mov
sub
mov
subl
sub
dec
xor
dec
es
lahf
mov
lods
iret
mov
shrb
cli
dec
cmpsl
push
and
push
pop
xor
pop
pop
daa
imul
notb
dec
mov
push
mov
dec
ljmp
int
and
xlat
xchg
xchg
in
push
sbb
scas
in
clc
or
loope
push
push
sub
mov
xor
mov
das
daa
pop
mov
outsl
cmp
aaa
sahf
pusha
jno
loope
fbstp
xchg
shll
xchg
add
and
push
fwait
inc
hlt
push
aaa
sbb
lock
push
inc
jg
mov
mov
dec
into
popa
sub
xor
sbb
sbb
fndisi(8087
inc
push
push
cmp
mov
int
aam
jb
repz
mov
cmp
in
xchg
mov
jae
fs
sub
fistpll
data16
and
ja
mov
cmp
sbb
imul
mov
and
push
pusha
shrb
cmp
mov
pop
sub
repnz
das
repz
fcomps
lahf
pop
shrl
xchg
ret
out
add
iret
lcall
push
jge
sub
je
outsl
mov
and
jbe
imulb
dec
inc
jmp
inc
lea
sub
jns
loop
mov
or
cmp
mov
pushl
pop
push
dec
and
outsl
jge
call
int
mov
push
pop
mov
mov
adc
jno
cmp
jne
jbe
cmp
cli
mov
mov
test
mov
and
xchg
cltd
lret
out
popa
mov
test
int3
lock
insb
adc
scas
les
jb
in
or
push
hlt
lahf
and
out
out
ss
sbb
mov
nop
adcl
mov
repnz
nop
and
push
adcl
mov
cmpsl
and
lods
cmp
xor
idivb
imul
jne
shrl
sti
mov
aam
jp
sti
mov
jo
push
or
mov
mov
xchg
rclb
dec
xor
sub
sahf
and
into
pop
push
sbb
mov
inc
xchg
push
adc
cmp
dec
adc
es
aaa
fidivrs
ret
pop
cmp
int
xchg
pusha
loope
cltd
movsl
or
mov
mov
out
lret
dec
cmp
xchg
push
pop
ret
push
xor
fs
outsl
mov
aaa
adc
xchg
or
addr16
mov
leave
mov
push
mov
cmp
call
pusha
shll
inc
in
loop
mov
cs
aam
pushf
push
xor
cmp
mov
mov
mov
lret
pop
jne
xchg
mov
xchg
jl
jno
inc
pop
test
test
sahf
cs
sbb
xchg
loop
jecxz
repnz
mov
push
cltd
mov
rcll
xchg
dec
lock
sbb
lock
lahf
sbb
or
fisubrs
cmp
adc
mov
leave
popa
and
shlb
xchg
lods
call
mov
ds
sbb
rcrb
popl
mov
pop
xorb
sub
pushf
jge
ljmp
loopne
testb
stc
cmc
das
gs
fs
sbb
bnd
std
ja
adc
lock
cwtl
aas
adc
jno
iret
pop
fmull
ljmp
pop
jnp
push
push
mov
mov
in
add
imul
push
add
ret
or
inc
sub
popa
outsb
adc
dec
push
push
mov
sub
or
mov
push
sub
mov
fisubs
pop
sbb
in
pop
js
push
je
xchg
scas
cli
adc
movsl
pop
loop
mov
sub
insb
jbe
push
outsl
clc
js
mov
xor
add
cmp
bswap
fadds
pusha
sar
stc
es
mov
std
or
out
pop
cmp
mov
sub
cmp
popa
sti
sti
mov
xchg
mov
mov
aaa
clc
into
movsb
and
pop
xor
xchg
test
aaa
xor
nop
jb
fnsave
fdivs
stc
mov
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
or
movl
mov
mov
add
movl
neg
mov
mov
mov
sub
and
mov
mov
andl
push
xorl
push
movzwl
xor
mov
xor
push
mov
subl
add
addl
mov
orl
mov
test
movl
je
movzbl
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
xor
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
dec
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
add
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
mov
mov
or
xor
add
or
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
mov
dec
mov
jmp
sub
add
mov
subl
jmp
into
in
push
mov
push
in
imul
mov
jnp
cwtl
jnp
mov
roll
mov
insl
pop
sbb
sub
jmp
push
and
fldenv
mov
lea
push
push
dec
test
xor
out
ss
xchg
imul
xchg
jecxz
sub
push
dec
mov
add
lcall
inc
xchg
dec
and
dec
jmp
int3
xchg
sbb
mov
lahf
arpl
test
mov
inc
out
imul
cwtl
and
push
push
adc
insl
jb
bound
std
outsb
mov
in
add
or
sbb
and
xchg
loop
push
cmp
aad
flds
xchg
sub
sbb
sbb
roll
push
insb
in
xlat
ds
fwait
test
enter
in
ficomps
aaa
mov
leave
xchg
scas
mull
xor
jo
mov
mov
xchg
adc
push
mov
and
adcb
mov
dec
dec
mov
insb
rorl
mov
cmp
ret
jmp
inc
into
cmp
mov
sub
repnz
and
push
je
rol
sahf
or
cmpsl
xor
scas
xchg
lods
inc
stos
aaa
cmp
lods
push
test
rclb
das
ret
hlt
jle
out
sub
adc
imul
pop
arpl
jnp
shr
push
js
fwait
ljmp
rcr
lret
sahf
test
sub
loope
cmp
or
sbb
test
jnp
or
movsb
sbb
in
add
inc
push
ljmp
pushf
lret
fistps
cmp
or
inc
xor
movsb
mov
scas
int
insb
mov
iret
cmp
mov
xor
ds
imul
outsl
pop
and
pushf
dec
or
leave
insl
fs
leave
lods
lahf
orb
aad
dec
sti
ss
cmp
cs
pop
test
and
int
adcl
arpl
insb
nop
mov
sub
xchg
pop
mov
cmp
cmovne
addr16
mov
repz
and
stc
mov
aas
std
iret
lcall
aas
pop
cmp
roll
xor
ljmp
sarl
js
add
sarb
out
fstl
push
cmp
int
inc
sbb
adc
int
mov
fs
pop
mov
and
test
push
decl
fs
cmp
push
cltd
push
sub
and
sbb
fisubl
mov
loop
jb
dec
cld
mov
push
nop
pushf
stc
sbb
xor
lcall
dec
stos
clc
or
push
mov
xlat
sbb
cmc
stc
inc
cwtl
mov
cmp
arpl
dec
fwait
and
xor
rcll
jecxz
loopne
cmc
js
add
outsl
xor
loop
arpl
aam
dec
mov
sahf
cmp
movsl
pushf
sub
push
int3
andb
cli
das
popl
xchg
sahf
mov
in
test
adcb
pusha
mov
insl
or
into
and
into
pop
add
cmpsl
lahf
push
mov
mov
cmp
movsb
push
shl
mov
push
dec
lods
xchg
xchg
and
stos
aam
and
arpl
push
cmpsb
jo
add
mov
decb
orl
icebp
out
jl
and
add
jb
mov
pop
stc
pop
pop
pop
adc
cmpsl
add
mov
out
pop
jg
and
out
lods
outsb
push
fwait
xchg
push
cmc
aas
dec
jns
mov
pop
les
or
out
sbb
imul
lods
xchg
pop
and
imul
xor
pusha
js
jnp
inc
int3
repz
sar
je
popf
lds
inc
mov
dec
jns
mov
push
pop
adc
movsb
push
int3
or
add
test
sub
sub
ja
or
mov
scas
cwtl
cmp
push
adcl
jmp
and
pop
mov
xchg
decb
fadds
jne
sahf
cmc
cmpsb
loopne
sbb
mov
lods
inc
mov
xchg
ljmp
in
js
fisttps
cmp
mulb
rclb
add
lret
inc
dec
cmp
pop
lret
outsb
lret
pop
xor
out
mov
mov
out
push
sbb
popf
or
lock
push
hlt
pop
dec
sub
fistps
ffree
leave
sti
push
inc
push
add
loope
mov
push
addl
mov
aaa
cmp
cmp
out
jmp
mov
jg
mov
fnstenv
push
in
pop
mov
sarb
sub
or
sbb
lods
push
sarb
addb
sti
jmp
xlat
notb
jmp
ja
mov
push
mov
arpl
inc
rorl
jecxz
shlb
cmp
repz
add
or
xor
mov
and
mov
stos
shlb
jo
pop
xor
ret
out
pop
mov
xor
loop
dec
mov
pop
fimuls
jg
lea
jle
and
xchg
push
xor
or
mov
push
pop
je
pop
sbb
daa
out
mov
pop
xor
test
pop
cmp
xchg
jge
jg
into
push
and
mov
xchg
or
in
ds
mov
xor
outsl
fnstenv
ljmp
mov
add
mov
out
dec
push
lock
jno
or
xchg
outsl
mov
sbb
mov
or
mov
movsl
jb
sub
ljmp
lea
jo
jp
ja
arpl
repz
adc
mov
sbb
cmp
popf
jb
sbb
leave
in
arpl
push
cmp
jecxz
hlt
xlat
cs
jae
sbb
outsl
dec
loop
pop
xchg
out
repnz
mov
sub
imul
mov
adc
xor
cmpsl
pushf
ret
and
add
mul
or
loopne
repnz
sbb
insb
mov
testb
sti
movsl
scas
xchg
xor
rol
lds
mov
adc
xchg
enter
cltd
pop
mov
xchg
sub
dec
push
dec
loop
out
dec
nop
repnz
and
pop
xor
movsb
mov
cld
push
add
mov
add
mov
dec
pop
dec
and
mov
pop
les
add
loopne
cltd
repz
rorb
or
ljmp
outsb
xchg
mov
ret
enter
add
mov
js
add
push
jo
arpl
ficompl
cltd
adc
or
cmp
fcmovbe
sub
leave
cmp
out
rorb
cwtl
adc
push
dec
int3
pop
js
addr16
lret
in
shrb
clc
jne
test
pop
pop
xchg
adc
and
pop
jb
and
inc
ja
imulb
sub
in
xchg
jle
ja
roll
or
jle
rorl
insb
push
add
fucom
fnsave
daa
inc
pop
test
mov
nop
push
loopne
data16
inc
pop
dec
lret
xchg
fsubl
int3
mov
cmp
mov
stos
ss
mov
out
fdivp
xchg
jno
cmp
and
mov
cmc
jle
out
mov
sbb
push
jo
insw
je
mov
cli
std
cltd
stos
scas
mov
fs
daa
cmp
cmp
mov
idivl
inc
enter
cmp
rcrb
add
push
mov
std
dec
sahf
xchg
jge
mov
daa
mov
mov
pop
mov
data16
jg
movsl
nop
daa
cmpsl
push
mov
arpl
xchg
iret
mov
inc
shll
inc
or
lret
sbb
push
sbb
repz
jne
pop
in
ja
iret
icebp
andb
and
or
and
jecxz
popf
sub
rorl
cld
mov
nop
fcom
pop
stos
mov
push
scas
js
and
mov
cwtl
in
jg
adc
inc
push
sbb
jmp
jnp
jp
popa
mov
into
sbb
addr16
mov
xor
and
test
mov
rorl
call
cmpsl
pop
push
push
scas
adc
repz
pop
xchg
xchg
jne
std
push
enter
testb
mov
inc
inc
push
pop
jbe
adc
mov
lret
xchg
push
sbb
mov
cmp
clc
cmp
mov
popa
add
lock
dec
jbe
pop
push
mov
mov
jb
jae
into
test
sbb
loopne
mov
rcrb
cmp
or
xchg
lods
or
cld
rolb
popf
xchg
fwait
ret
mov
pop
scas
in
aas
xor
sbb
and
add
push
shl
cmpsb
inc
das
dec
sbb
mov
add
push
lahf
adc
cltd
sub
push
add
lret
daa
xchg
outsb
push
je
shrb
and
sbb
sbb
cmc
adc
dec
cmc
inc
test
dec
test
push
add
push
ror
xor
cwtl
mov
jmp
sbb
es
sub
dec
add
loope
add
stc
jg
add
or
ss
fs
fbld
dec
add
cld
sbb
in
imull
mov
cmp
inc
jmp
push
popf
xchg
les
mov
dec
cli
sub
cli
jno
xor
lock
xchg
xor
jle
xlat
cmp
adc
test
push
insb
into
test
lds
sub
xchg
push
jmp
movsl
sbb
mov
aam
ds
test
dec
pop
cwtl
jae
mov
pop
daa
xor
cmpsl
xor
fisttps
pop
in
push
push
sbb
cmc
mov
mov
aaa
xchg
in
addb
push
movb
cmp
add
push
inc
lret
inc
daa
mov
and
mov
dec
ljmp
pop
leave
enter
cmpsb
pop
cmp
dec
cmp
sbb
jns
jo
fwait
shl
mov
mov
hlt
adc
mov
data16
mov
aaa
cmp
fsts
pop
int
nop
fdivrs
js
lds
sbb
test
and
mov
pop
push
insb
cli
sub
add
std
sahf
sub
push
cs
sub
xor
xchg
fdivrl
icebp
ret
fwait
cld
lea
jl
inc
mov
mov
pop
stc
outsb
into
adc
jge
into
in
mov
xchg
jg
fsubl
popf
es
lods
push
lds
and
ret
sti
jo
lds
push
adc
or
shll
add
lcall
hlt
lret
stos
sub
es
daa
sbb
push
dec
test
jb
push
jb
and
clc
in
out
je
mov
jle
mov
xchg
push
lahf
dec
es
or
xor
mov
push
int3
aad
jecxz
cwtl
sub
dec
cmp
addb
hlt
in
xchg
cmp
pop
pop
lods
push
pop
push
aam
out
cltd
mov
iret
pop
sbb
jecxz
stc
outsb
mov
cmp
xlat
adc
push
pusha
xchg
fwait
pushf
ret
pop
mov
outsb
and
aad
mov
or
jp
push
in
mov
dec
test
shlb
addr16
pop
pop
mov
sbb
pop
push
pop
adc
pop
inc
cmp
clc
ja
mov
movsb
mov
push
push
cltd
rorl
jbe
scas
xor
inc
jg
das
neg
dec
jo
sarb
repnz
in
jmp
mov
psrad
cmp
mov
dec
sbb
stos
mov
loop
lret
test
sub
out
mov
lods
je
xchg
lahf
mov
dec
sbb
inc
fs
dec
fnsave
and
mov
xchg
xor
push
cltd
mov
icebp
push
jo
imul
sub
push
scas
sbb
mov
out
mov
loopne
rclb
mov
inc
jp
mov
gs
pushf
sub
jge
mov
jae
xchg
stos
jecxz
pop
fs
lret
into
adc
loopne
push
inc
lods
outsb
add
jmp
ficomps
js
cmp
pop
std
out
cmp
dec
scas
pusha
cwtl
push
push
xor
popa
addr16
rcrl
jae
insb
jns
ret
or
pop
or
add
jne
jnp
or
sar
movsl
aaa
cmc
call
je
outsb
dec
push
inc
cmp
jmp
icebp
comiss
pusha
std
inc
dec
gs
sub
jp
cmp
push
imul
xor
mov
movsb
inc
rorb
push
addl
xchg
add
dec
add
pop
scas
int3
dec
insb
push
pop
bound
cli
cmpsl
mov
cltd
jge
jg
icebp
and
inc
scas
fnsave
shr
cmp
insl
rcrb
imul
ret
rolb
dec
xchg
cmp
fistl
dec
sub
in
sbb
stc
pushf
xor
jge
arpl
inc
add
dec
nop
inc
jnp
push
shll
scas
pop
insb
das
push
dec
dec
adc
jp
jp
lods
cmpsb
fiaddl
cmpsb
rorl
outsl
repnz
push
enter
pop
popa
xor
jge
mov
and
out
pop
shlb
xchg
ja
jns
sbb
test
enter
push
arpl
cmp
mov
xchg
fidivrl
push
adc
popa
daa
lods
rcrb
fistpll
aas
dec
ud2
jecxz
or
or
xor
cmc
call
gs
add
xchg
dec
pop
hlt
test
jp
jge
fldcw
lock
dec
mov
aaa
adc
jnp
add
add
cmc
push
movsb
jecxz
fiadds
clts
sub
inc
inc
stos
stos
pusha
mov
xchg
mov
sub
les
add
cmp
lcall
jb
mov
mov
mov
fst
cmp
lds
cmpsl
mov
add
call
fmuls
cmp
and
negb
add
lret
lahf
rdmsr
shll
std
or
data16
jns
cwtl
mov
loope
frstor
sbb
pop
mov
adc
ljmp
sub
mov
mov
inc
jmp
sbb
lock
pop
int3
rcll
fcoms
add
addl
shll
inc
aaa
fistps
pop
xor
dec
mov
xor
rcrb
xchg
sbb
jns
mov
cmp
jmp
mov
xor
loop
subl
stc
inc
addl
hlt
push
lods
pushl
and
xchg
push
inc
pop
pushf
cmc
cmp
bound
nop
fsubs
addr16
fwait
dec
xchg
xchg
mov
popf
mov
mov
loop
cmpsb
cmp
xchg
lahf
jge
repz
jl
fnstenv
xor
rorl
or
in
gs
lods
and
add
les
lods
movzwl
or
jmp
mov
mov
repnz
fildll
iret
pusha
mov
jg
mov
das
clc
pusha
jg
xor
sbb
add
loop
xor
aam
inc
xor
cmp
ljmp
push
or
add
or
fmull
ljmp
mov
sub
adc
clc
stos
lea
sub
and
mov
adc
rcrl
scas
adc
dec
sub
pop
dec
out
movq
sub
jmp
ds
dec
in
std
sti
sbb
divl
gs
outsl
enter
insb
rolb
xor
or
mov
lret
inc
enter
cmp
xor
jns
cmc
rorl
mov
sub
outsl
xor
psrld
pop
sbb
fwait
cld
dec
pushf
push
mov
js
jne
ud1
xchg
fcompl
mov
fs
xor
sub
and
cmpsl
scas
les
ljmp
pop
jbe
into
jg
cmp
pop
mov
or
fsubs
or
ret
in
pop
ljmp
arpl
out
xor
mov
or
jno
dec
inc
inc
arpl
pop
loopne
pop
jge
insb
orl
divb
in
add
fisubl
sbb
out
fmull
push
stos
sub
push
jo
pop
adc
mov
ds
mov
push
inc
sbb
fs
popf
sub
lods
xchg
sbb
enter
scas
les
je
and
cs
adc
jns
push
aaa
out
jns
adc
ret
aad
orl
fistps
jge
or
jae
cli
out
sub
jecxz
lea
int
and
js
outsl
add
push
fwait
outsl
inc
jo
or
stc
pop
inc
cmp
popa
lods
jmp
lock
lret
js
mov
cmp
call
pop
andw
jo
xchg
mov
sbb
dec
ss
aam
lods
sbb
xor
pop
xor
sbb
pop
sub
ja
lret
and
xchg
inc
popa
sbb
jp
cmp
pop
out
add
xchg
or
mov
and
or
stos
xchg
push
dec
repz
in
mov
jmp
add
cld
leave
icebp
test
add
adc
xchg
mov
dec
pop
push
mov
inc
mov
inc
push
sbb
cmp
lea
and
sub
incl
pop
push
inc
mov
xchg
xchg
dec
out
cwtl
movsb
mov
lcall
jp
sub
ljmp
jecxz
sahf
pop
fcomi
inc
fwait
lock
fistps
repnz
or
addr16
mov
outsl
outsl
and
test
mov
loopne
jbe
sub
dec
addr16
jge
sbb
sbb
hlt
add
adc
lret
cmc
mov
sbb
inc
repz
add
sbb
mov
loope
nop
cmp
lahf
mov
or
inc
cmp
fcmovbe
add
das
in
mov
push
inc
adc
pop
add
pop
mov
sbb
mov
push
je
xor
lods
cwtl
push
jl
mov
call
mov
inc
adc
adc
test
std
in
fstps
push
inc
hlt
fidivrl
inc
loop
sub
insb
sbb
stos
dec
adc
adc
push
shlb
xchg
cli
mov
out
mov
jecxz
xchg
data16
int
dec
loop
pop
clc
out
in
stos
push
ret
rorb
cs
testb
sbb
scas
push
std
add
add
lods
pop
rcll
or
insl
mov
das
pusha
enter
xchg
test
daa
pop
jg
xor
jae
lret
cmp
test
sub
loope
movsl
outsb
dec
jg
shll
in
test
pop
or
sub
das
fsubl
out
dec
dec
mov
stos
pop
nop
push
or
cmp
jecxz
xchg
jo
push
pop
aad
inc
cmp
sub
pushf
les
push
add
popf
pop
mov
mov
lea
push
ret
gs
mov
pop
and
je
mov
xor
cmpsl
rorb
xchg
jo
jbe
inc
fucomp
push
fstl
je
and
xchg
out
arpl
jb
sbb
aam
sbb
mov
std
fdivl
push
fdiv
insl
push
pop
test
sub
mov
ja
mov
cmp
cli
push
sbb
hlt
add
pop
outsb
pop
idiv
sbb
and
cmpsl
das
fwait
sub
mov
mov
iret
es
jb
fistps
fldt
sbb
inc
jle
dec
lods
test
and
and
and
mov
jp,pn
cld
dec
call
iret
rcll
je
arpl
cmp
out
adc
mov
orb
orb
mov
push
adc
out
lds
js
or
jno
subb
test
loopne
aas
sti
ret
adc
and
pop
add
hlt
sar
fmulp
and
flds
cltd
sub
sub
and
sbb
rorl
into
mov
or
daa
or
les
pop
popw
or
jecxz
popa
sub
push
fstpl
push
mov
cwtl
adcb
into
jge
jb
push
xor
or
pop
add
into
pop
lcall
aaa
jg
js
mov
fisubs
icebp
arpl
xchg
jnp
mov
xor
sti
pop
lahf
cld
dec
mov
mov
xchg
test
mov
cmp
imul
mov
subl
mov
mov
notb
sbb
lcall
out
rcll
enter
pushf
es
int3
xor
ljmp
sub
in
cwtl
xchg
ret
or
sub
push
ss
clc
out
cmp
jne
sbb
loopne
xor
push
xor
inc
lret
decb
xor
or
or
gs
fscale
xor
mov
mov
mov
icebp
cmp
dec
insl
cmp
jno
enter
fimull
adc
ljmp
mov
mov
push
ds
push
jmp
lods
dec
ljmp
xchg
leave
add
pop
cmpsb
mov
test
xor
and
and
mov
lret
movl
in
pop
lea
inc
les
jmp
push
scas
push
xchg
insb
dec
cmc
loopne
jp
xchg
add
jnp
lock
lret
mov
ds
pop
push
inc
cmp
jp
pop
aam
and
mov
movsb
jmp
xor
adc
cli
js
lahf
cmp
dec
test
ss
ret
xchg
mov
int
xchg
and
jnp
or
hlt
aam
sbb
dec
cli
push
js
pop
ficomps
sub
mov
mov
cmp
jl
pushf
out
enter
sub
lock
fwait
sub
ds
jae
and
aad
aaa
cmp
stc
or
call
jno
and
repnz
mov
lds
cs
int3
dec
mov
lea
shl
adc
mov
pop
scas
stos
or
clc
inc
fldcw
sub
sub
mov
rorb
xchg
mov
movsl
fcmovnu
pusha
and
push
mov
jl
dec
lock
adc
pop
pop
fmul
dec
aam
stos
jmp
pop
icebp
test
sbb
insl
scas
lock
and
subl
ret
dec
sbb
sti
fwait
mov
xor
mov
cltd
pusha
mov
iret
dec
mov
mov
dec
push
push
rorl
imul
xor
mov
mov
dec
push
mov
cmc
int
push
out
jne
ja
ret
cwtl
jmp
xor
xor
sub
stc
xor
add
das
push
add
sbb
mov
mov
adc
aas
push
icebp
xor
int
shrb
insl
aad
scas
cs
push
lret
adc
inc
dec
rolb
sbb
rol
pop
test
add
sub
dec
pop
sbb
adc
or
jae
sbb
and
cmp
mov
sti
inc
or
loopne
mov
sbb
es
jecxz
inc
xchg
or
push
sub
sub
pop
and
mov
dec
push
mov
nop
dec
xchg
shl
inc
daa
stos
mov
jb
xor
jge
and
mov
xchg
jbe
or
int3
xchg
mov
sbb
rcrl
cmp
daa
adcl
xor
cs
adcl
push
xchg
or
out
dec
pextrw
sbb
cs
imul
mov
push
daa
pop
jae
shrl
icebp
mov
xor
out
jne
pusha
cwtl
pop
imul
jno
xchg
mov
xor
mov
and
adc
push
aas
repnz
sbb
mov
pop
in
psubusb
popa
cmp
decl
loopne
bound
push
adc
loopne
subb
in
adc
inc
jge
inc
lret
ret
lahf
mov
cmpsl
mov
xor
imul
fldl
icebp
arpl
fldenv
mov
subb
pop
out
loopne
adc
xor
add
dec
xorb
scas
fsts
test
push
popf
push
jge
xchg
aad
push
and
or
dec
jmp
xchg
xlat
mov
xchg
pop
insl
pusha
dec
pop
repnz
and
loopne,pt
fucom
mov
orl
fsub
movsb
or
dec
dec
jmp
push
or
aas
dec
sbb
cmp
test
icebp
mov
mov
std
mov
popf
out
cmp
pushf
cmp
cmpxchg
xchg
je
push
cld
pop
jmp
inc
push
push
lret
or
movsb
xor
ret
or
push
shlb
scas
dec
dec
adc
jecxz
aaa
cmp
jb
mov
popa
imul
adc
xor
stos
mov
jne
ret
mov
mov
pop
jno
xchg
setbe
pop
inc
inc
es
or
rol
imul
pop
add
mov
stc
mov
push
sbb
out
dec
pop
jb
xorl
pop
stos
xchg
jnp
mov
ret
adc
lds
dec
repnz
cwtl
xchg
xchg
movb
mov
push
jmp
scas
jbe
mov
mov
pop
popa
inc
or
decb
mov
in
scas
mov
add
cmc
lods
lods
xor
jb
jge
xor
movsl
repz
dec
mov
mov
mov
test
gs
mov
fs
add
addr16
cld
imul
lods
aaa
or
mov
bound
mov
pop
cltd
xor
ret
dec
out
enter
or
arpl
out
add
aam
enter
clc
loop
mov
cmp
xlat
push
scas
daa
lret
sbb
jp
jmp
movsl
es
in
pusha
icebp
and
aad
cli
mov
test
out
xchg
shrl
xchg
xchg
divb
and
add
push
jne
in
aad
jge
cmp
icebp
in
dec
popa
dec
ljmp
push
pop
mov
mov
push
and
mov
mov
pop
fs
subl
aas
dec
inc
push
das
arpl
sti
in
mov
int
inc
pop
fcomip
ret
and
jno
cmc
xor
pushf
push
adc
sahf
popf
and
lret
inc
sub
ja
cltd
xchg
arpl
fmul
scas
add
nop
outsl
sbb
aaa
mov
or
jg
lods
sub
jae
sti
xchg
js
pop
pop
pop
inc
out
sub
mov
dec
fs
arpl
repnz
pop
add
push
adc
imul
or
mov
fs
jno
imulb
xchg
xchg
jle
or
mov
aad
adc
dec
sub
cs
dec
adc
inc
sub
add
push
es
pop
xlat
xchg
and
jns
popa
xor
push
rcrb
sbb
pop
push
hlt
shlb
clc
cmc
mov
or
out
insb
xor
xor
rorb
shrb
div
sti
cmpsl
jle
pop
pop
cmpsb
xor
inc
sub
sbb
and
fildll
aam
pop
out
sbb
cmp
fists
cli
push
das
add
sub
or
mov
mov
pmaxub
dec
mov
outsl
scas
loop
jecxz
cmp
test
lods
fsubrs
push
movl
xchg
std
pop
into
in
push
aad
sbb
testl
and
sbb
mov
lea
jle
jmp
jle
fsubs
sub
mov
sti
xchg
push
aam
pop
inc
mov
adc
pushf
push
sub
addb
lret
xchg
mov
pop
rcrb
xor
loopne
hlt
movsb
pop
ljmp
fwait
sub
xchg
cli
test
push
addr16
sub
inc
push
mov
jl
ret
std
mov
xorb
cmp
ret
push
cli
pop
sahf
sbb
cmpsl
cmp
pop
iret
mov
xchg
imul
fisttps
ret
leave
jge,pn
adc
dec
popf
push
enter
push
addb
aad
pop
fwait
hlt
jae
mov
neg
enter
push
scas
push
iret
push
cli
jb
inc
sbb
cltd
aas
popf
in
imul
jb
das
insl
mov
jno
inc
push
dec
push
stos
icebp
mov
fwait
inc
xchg
cltd
pop
xlat
ds
fptan
cmc
mov
popa
pusha
arpl
push
in
pop
adc
outsl
xchg
ja
ds
sub
orb
stos
pop
ljmp
jmp
je
jecxz
xor
mov
pop
sbb
pop
loope
xchg
xor
inc
xchg
aaa
repnz
cli
sbb
sbb
jle
test
ret
test
fwait
ja
add
inc
leave
and
fcmove
aaa
int
push
fucomi
dec
mov
xor
lret
cltd
lods
loopne
arpl
pop
fwait
das
xchg
andl
cmpsb
je
xorb
aam
insb
movb
mov
sbb
sub
clc
movsb
xor
sub
js
call
inc
add
pop
dec
test
jno
push
data16
push
lahf
push
arpl
sbb
scas
mov
sbb
jp
mov
dec
lahf
mov
mov
push
aas
out
push
sbb
cmp
mov
add
mov
fdivr
mov
jle
ja
vucomiss
or
daa
rcr
sbbl
pushf
xchg
sahf
mov
mov
sbb
scas
fisttps
sbb
mov
sti
inc
inc
jno
popa
xchg
imul
xlat
push
ret
scas
dec
adc
inc
fsub
ficomps
jecxz
xor
jecxz
lods
xchg
pop
sbb
hlt
fidivrl
fsubrs
out
or
sti
cmpsb
js
test
sub
mov
adc
dec
cmp
pusha
les
int
aam
lods
xor
xor
ret
xor
jecxz
gs
inc
or
js
xchg
inc
xchg
addr16
mov
insb
adc
nop
mov
adc
sbb
adc
cmp
lods
sbb
subl
push
mov
cmp
xor
hlt
dec
gs
jl
fstl
call
inc
adc
mov
pop
mov
shrl
push
mov
mov
aas
ret
mov
push
fnstcw
sub
ja
mov
icebp
pop
frstor
jl
push
int3
stos
movsl
fs
xchg
xor
ret
push
mov
jb
aad
insl
test
mov
pop
ds
dec
cmp
jns
xor
push
jl
rol
jnp
xchg
cltd
outsl
pop
clc
and
fidivl
aaa
adc
call
mov
mov
ret
cli
mov
sbb
xor
outsb
xor
mov
cmc
pop
fs
inc
mov
out
popa
pop
dec
pop
sub
imul
xor
repnz
out
rorl
mov
jne
inc
rorl
js
roll
xor
fistpl
outsl
pop
xchg
xor
mov
fldt
inc
pop
mov
aam
insb
mov
push
mov
sbb
xchg
add
xor
and
inc
add
enter
add
int
add
cmp
movl
je
xor
or
add
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
xorl
xor
add
cmp
movl
jne
pushl
call
mov
mov
adcl
mov
mov
addl
xor
sbbl
add
cmp
movl
je
pushl
pushl
addl
call
sub
mov
decl
mov
mov
or
mov
xor
andl
add
movl
cmp
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
xor
add
cmp
mov
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
mov
xor
lea
jmp
mov
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
add
jmp
mov
mov
mov
mov
mov
xor
xor
add
div
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
jmp
cmpsb
daa
arpl
push
mov
adc
cmp
dec
jnp
repnz
jnp
inc
sub
fnsave
clc
and
testb
addr16
dec
cltd
ror
jne
cmp
sub
lds
jg
jp
pop
rclb
andb
pop
xor
enter
fisubrl
test
divl
cmp
xchg
dec
push
pop
mov
sub
cmc
es
inc
in
dec
dec
aam
jge
ds
sbb
xchg
mov
lret
push
loopne
sub
xchg
or
and
mov
out
imul
ret
stos
mov
inc
add
dec
movsb
in
adc
int
lods
outsb
pop
cmp
jbe
pop
or
cmpsl
jp
or
jb
js
imul
xor
fisttpll
sbb
loopne
cmpsl
pop
loop
cltd
inc
push
in
jmp
loopne
inc
inc
stos
mov
lcall
mov
pop
mov
jns
mov
mov
jb
faddl
inc
or
push
cmp
cmp
dec
fisubs
mov
sbb
inc
mov
adc
stc
pop
dec
icebp
mov
pop
in
orb
mov
test
pop
and
insb
xor
pusha
orb
mov
pop
sbbl
dec
sbb
inc
in
pop
int3
cmp
fidivrs
iret
mov
jne
inc
orb
mov
or
cwtl
sub
bound
repz
jno
int3
push
popa
sbb
mov
out
in
sti
jbe
dec
fs
dec
sub
ror
add
mov
lods
das
in
push
aaa
daa
xchg
cltd
fnstcw
sbb
mov
xchg
dec
fwait
vpunpckhqdq
pop
and
xchg
movb
cwtl
clc
sbb
lods
mov
sbb
xchg
mov
scas
dec
bound
leave
orb
cltd
mov
add
repz
mov
iret
mov
sub
and
pusha
dec
clc
int3
sub
push
dec
sub
xchg
shlb
jg
or
pop
cmpsl
cli
iret
cmpsb
jo
sub
popa
aaa
push
mov
xor
aas
or
data16
fisubrs
movsb
dec
inc
jae
insb
lds
shrb
loope
pop
inc
lods
cmp
leave
sete
subl
inc
mov
xchg
xor
cmpsl
lds
xor
sub
dec
sbb
addr16
or
fbstp
ret
int3
push
lock
add
mov
jb
and
mov
mov
mov
aas
cs
cmc
imull
call
mov
mov
cmp
pop
or
iret
jb
test
mov
fdivrl
inc
lcall
xor
sbb
push
clc
push
adcb
jno
into
mov
jle
push
mov
lock
xor
add
jbe
and
test
enter
leave
jne
fdivr
xchg
das
loopne
addr16
push
insb
mov
inc
cmc
stos
sarl
fldcw
inc
mov
mov
jmp
and
sar
aas
and
pop
adc
xchg
hlt
push
stos
ret
pop
cld
cmc
rorl
push
jmp
cmpl
addl
pop
loop
dec
mov
dec
call
add
insb
and
xchg
ss
cs
ret
sahf
jo
test
xchg
mov
xchg
xor
aaa
or
inc
js
jmp
in
sub
cmp
mov
imul
adc
sbb
inc
mov
xor
insl
inc
sbb
sar
jo
dec
xor
inc
adc
divl
mov
jp
cmp
aaa
inc
aas
jbe
and
dec
push
xchg
adc
mov
cltd
dec
les
call
cmp
jo
push
xchg
mov
lret
jmp
clc
cmp
sti
aam
data16
sbb
sbb
cmp
insb
aam
sub
mov
iret
movsl
std
pop
icebp
jg
std
xchg
test
stos
mov
adc
or
outsl
shlb
xchg
jl,pt
jnp
bswap
fldl
stos
out
cld
adc
xchg
fwait
repz
gs
das
rorb
lahf
mov
insl
sarb
xchg
pop
adc
inc
mov
fsubrl
or
outsl
pop
inc
sbb
add
ds
insb
daa
adc
xlat
aas
and
out
jecxz
xchg
ja
stc
dec
outsl
push
xor
in
add
into
stos
or
cmpsl
lds
pop
hlt
mov
push
nop
mov
xor
add
mov
loope
sbb
add
stos
cmp
cli
jo
mov
mov
xchg
jl
cltd
lods
adc
insl
sti
mov
ds
push
xor
and
pushf
push
sub
pop
push
push
lret
addr16
ss
mov
test
and
pop
xor
mov
lret
xchg
lahf
in
sub
cli
mov
and
pop
inc
mov
dec
in
pushf
mov
xchg
and
das
loope
mov
cmp
enter
xchg
cmp
inc
xchg
inc
inc
add
lock
pop
icebp
lcall
out
pop
pop
test
sbb
jnp
aam
jae
aad
cmp
lea
lcall
ficoml
out
shll
mov
mov
and
call
mov
lret
xor
mov
mov
test
aaa
xor
fnsave
cmpsl
push
lock
in
xor
fxch
mov
jmp
int3
and
fisubrl
cmp
push
inc
lret
xchg
jbe
mov
push
clc
mov
adc
mov
inc
mov
xlat
fistpl
dec
pop
push
dec
subl
gs
nop
inc
test
xchg
or
sub
adc
or
pop
fisubs
loope
pop
ss
push
xor
jge
scas
jl
nop
and
xor
or
xlat
aas
xorl
retw
xlat
lret
pop
xchg
or
in
xlat
ror
jge
stc
push
sub
fadds
mov
xor
loopne
flds
push
push
cwtl
jp
sub
pop
movsl
cmp
pop
mov
fldenv
imul
and
ret
sub
loop
fwait
ljmp
adcl
scas
sub
dec
pop
jbe
movsl
dec
pop
test
jb
pop
out
pushf
inc
icebp
cmpsb
fdivr
andl
add
mov
xor
getsec
sub
cli
test
sti
sbb
xor
inc
pop
mov
xor
daa
lods
std
sub
rcll
mov
aam
insl
push
xchg
mov
out
fidivrl
xor
xlat
xlat
rcr
arpl
mov
ljmp
jg
sub
sahf
sbb
mov
popf
xor
xchg
push
push
fisttpl
movsl
dec
fsubrs
dec
stos
xor
push
cli
je
xor
mov
fidivs
repz
cmp
data16
sbb
pop
lret
popa
cmp
sbb
test
minps
shlb
xchg
in
dec
jns
adc
pop
cmp
sub
mov
mov
repnz
dec
jnp
xchg
in
cs
add
lret
imul
lds
jbe
lahf
movsb
inc
test
sub
loopne
mov
cmp
cli
fwait
and
jo
sub
inc
pop
inc
outsl
imul
rolb
and
inc
lds
pop
outsb
xor
test
inc
mov
fldt
movl
aas
or
mov
rcrl
pop
fcoms
pop
movsl
jmp
enter
push
test
adc
rolb
pop
cwtl
into
push
lret
sahf
xlat
sahf
mov
pop
pop
inc
test
or
jmp
test
mov
je
hlt
daa
loopne
imul
fstp
jb
test
jae
xchg
mov
and
push
lods
dec
leave
jecxz
sub
dec
cld
fdiv
shrb
loop
cwtl
sub
or
stc
xchg
pop
imul
mov
imul
ss
call
mov
cmp
out
inc
int
jns
adc
test
ljmp
jmp
push
cmp
jl
inc
xchg
mov
fs
adc
jne
sbb
mov
xchg
cmpsl
jge
lret
add
add
in
je
xchg
repz
call
sub
jns
popl
jp
xor
mov
cmp
pop
fwait
lcall
daa
dec
mov
jnp
sti
arpl
enter
sub
xchg
loopne
das
popl
inc
mov
mov
fmull
sbb
scas
fcomp
cmp
aad
or
ss
push
lret
push
xor
shlb
cmp
outsb
adc
pop
mov
or
call
outsb
lock
or
add
sub
cltd
mov
mov
xchg
pop
ficoml
mov
and
ss
pop
mov
cwtl
jp
int3
xchg
pop
test
mov
dec
jmp
dec
cld
or
jp
popa
inc
movsl
sub
xchg
mov
add
xor
jp
lret
aaa
and
adc
pop
pushf
je
inc
or
arpl
inc
lea
std
jnp
clc
decl
add
or
xor
xchg
xchg
jns
pop
xchg
aas
pop
pop
and
lods
mov
aam
sbb
xchg
pop
cmp
loop
cmpsb
pop
lods
cmp
mov
ret
pop
mov
xor
andl
sarl
std
sub
mov
pop
adc
add
mov
jmp
and
fiaddl
cwtl
xlat
mov
jmp
and
subl
notl
fadds
flds
xor
and
es
add
cmp
mov
sbb
sbb
les
mov
xchg
push
mov
mov
cs
shr
pop
out
xlat
je
sub
push
roll
in
arpl
pushf
bound
xor
shrb
xchg
mov
mov
rcrl
ret
pop
and
xor
adc
inc
push
adc
imul
cwtl
cmp
leave
mov
cltd
je
aad
mov
daa
sbb
mov
into
fstpt
into
in
cmpsl
mov
jb
imul
xor
in
and
rcll
xor
and
sub
rorl
pop
mov
push
in
test
adcb
mov
outsl
mov
pop
jns
div
ljmp
pop
xchg
inc
iret
xchg
pop
fisttps
arpl
loope
lods
adc
arpl
aam
pushf
lods
cmp
gs
xchg
dec
inc
test
insb
ss
xchg
xor
imul
aaa
and
or
repnz
adc
push
push
dec
dec
cmp
cmp
addr16
dec
insb
dec
pop
aaa
in
loope
dec
cmpsl
xchg
xchg
push
mov
xchg
lods
dec
xor
ds
icebp
and
gs
pop
xor
push
push
add
test
mov
mov
call
in
cmp
addb
pop
add
add
mov
jg
pop
lods
mov
ret
imul
mov
scas
adc
sbb
mov
pop
or
fisttpl
rcrl
and
mov
add
and
jmp
out
dec
fsubl
cmp
iret
popf
pop
jo
pop
subl
mov
xchg
mov
xchg
push
out
xchg
in
pop
fcmove
cmp
std
test
cli
cmp
or
cmp
fidivrl
add
sbb
mov
push
pop
cltd
lods
cmpsl
pop
stos
or
fimuls
inc
sbb
dec
out
aad
imul
dec
out
push
push
xor
lea
in
fcmove
adc
sbb
out
ret
inc
jl
cs
mov
add
insb
shrl
add
nop
or
adc
dec
push
mov
or
fdiv
jae
cmp
inc
pop
and
xchg
leave
xchg
dec
and
or
adc
fiaddl
mov
pop
xchg
ret
in
mov
xor
xor
and
jecxz
ret
dec
cmp
roll
push
push
rolb
pushf
lahf
sub
jnp
fdivr
push
mov
jecxz
and
out
adc
enter
fistpll
or
dec
mov
aad
push
jno
clc
mov
cmpsl
imul
xlat
mov
or
cmp
cmp
jmp
icebp
cltd
lret
dec
and
mov
xor
rcll
nop
mov
mov
mov
sub
notb
shlb
jle
or
jns
xchg
jle
adc
in
sub
push
jb
xor
and
stos
adc
arpl
sub
stos
mov
lods
cmc
add
cmpb
std
jne
push
repnz
mov
push
insl
sti
aas
dec
int3
ficompl
cmp
mov
js
insb
shrb
iret
xchg
out
fbld
cs
pop
cmp
in
adc
out
shll
jg
sbb
pop
ja
pop
xchg
popa
nop
inc
cmp
daa
add
lods
pushf
cmp
push
fidivl
cmp
movsl
popf
rclb
push
xor
xor
fmul
pause
sbb
out
mov
add
push
add
inc
and
repnz
inc
test
adc
ljmp
cmpsb
cs
or
push
sub
or
mov
lods
fisttpll
data16
mov
pusha
imul
js
rorb
mov
xchg
insb
cmpsl
bound
repnz
adcl
movl
mov
jne
pusha
sub
jge
and
xchg
push
push
sub
mov
fwait
sbb
cltd
mov
cs
jg
leave
and
stos
scas
sub
pop
and
inc
ja
adc
and
mov
sub
pop
push
cmp
push
out
fiaddl
fdecstp
dec
bound
xchg
popa
add
addr16
movsb
sub
sti
pop
lcall
mov
frstor
scas
icebp
lods
lcall
adc
sbb
fsts
add
mov
scas
test
push
xchg
push
push
adc
imul
inc
out
and
and
add
xchg
rclb
cld
cmpsl
or
shlb
push
fstpt
mov
mov
je
sub
push
add
jg
push
lods
pop
pop
insb
add
pop
push
lea
cld
insl
or
aaa
mov
jb
lods
pop
mov
lcall
out
and
iret
cmpsl
sub
add
lret
lret
push
sbb
es
shrl
push
test
test
push
jne
aaa
adc
lds
fistps
scas
or
xor
hlt
push
jecxz
mov
ret
scas
pop
shrl
pop
xchg
add
sbbl
jnp
adc
sbb
add
int
push
and
sub
stos
push
subb
test
lahf
push
ljmp
dec
cli
jg
jb
xorb
scas
adc
je
xor
je
sti
sarl
or
mov
lret
push
imulb
insb
inc
mov
hlt
jb
sub
jg
add
inc
adcl
jo
mov
mov
addr16
cltd
jns
mov
sbb
mov
fimull
add
std
andb
gs
test
lods
sub
test
push
aaa
add
ljmp
push
andl
lahf
pop
mov
mov
fidivl
sarb
adc
popl
push
lret
fmull
in
inc
mov
test
lds
icebp
daa
rclb
icebp
inc
fcmovbe
pop
sbb
lahf
mov
xchg
rolb
cmp
cmpsl
jp
je
sbb
aad
xor
inc
and
sti
cld
fucomip
mov
lock
adc
pop
xchg
imul
cmp
dec
enter
mov
arpl
int3
and
or
sub
adc
adc
into
cmc
jae
lea
mov
fcompl
adc
mov
repnz
imul
inc
ror
mov
fisttpl
lods
loope
mov
xchg
cld
push
fcomip
shll
mov
xor
sbb
clc
mov
clc
inc
sarb
mov
adc
mov
repz
lahf
test
xchg
mov
inc
arpl
pusha
sub
fcoml
adcl
cmp
push
xchg
mov
call
scas
mov
mov
int3
scas
cmpsb
imul
popa
jno
pushl
cwtl
rorb
jno
and
pop
adc
add
mov
js
cmp
clc
dec
dec
mov
popf
inc
test
repz
push
aad
inc
xchg
xor
lds
loop
xlat
and
mov
out
mov
imul
stc
clc
xchg
jg
dec
pop
dec
fs
bound
enter
cmp
icebp
shll
out
mov
ja
jp
shr
pop
mov
jno
sbb
shr
inc
je
xor
ret
insb
std
and
loopne
sbb
pop
jno
pop
out
mov
ss
fisttpll
inc
inc
mov
push
sbb
lds
mov
dec
lock
cmpsl
sbb
cmp
cmp
jne
jmp
xlat
fsubl
out
jg
or
or
sbb
nop
aaa
sub
and
mov
test
sbb
testl
cli
ficoms
xorb
fisttpl
xchg
clc
adc
mov
sbb
mov
mov
adc
lods
add
mov
xchg
enter
push
in
stc
les
xchg
pop
inc
imul
leave
dec
insl
xchg
cmp
dec
movsl
inc
ret
mov
movsl
jmp
lds
or
lcall
push
cmpb
or
or
mov
adc
sbb
jo
ljmp
mov
pop
int3
je
xorl
mov
xchg
mov
aam
pop
int
scas
rclb
sbb
negb
ret
popa
cmp
jl
in
or
push
jb
iret
fisubs
or
add
add
push
hlt
out
nop
and
mov
push
daa
call
mov
or
stc
in
out
push
nop
iret
jmp
sbb
xor
addb
sub
jmp
inc
xchg
les
das
sti
roll
call
mov
adc
cwtl
mov
xchg
lret
insb
loop
xchg
scas
mov
fstl
sarb
enter
inc
mov
mov
sub
push
xor
ror
mov
cmc
xor
dec
test
or
mov
cmp
ljmp
and
je
lcall
int
repnz
or
cli
and
dec
clts
cmp
xor
aaa
adc
lahf
mov
cltd
cmp
jns
jge
es
mov
mov
dec
test
cltd
int3
lcall
icebp
jmp
sub
cs
icebp
mov
aad
ds
inc
das
pop
adc
cld
and
repnz
adc
inc
inc
mov
loop
cmp
decl
sahf
inc
push
xlat
mov
xor
adc
mov
push
or
cmp
add
bound
lcall
clc
pop
and
sti
push
mov
in
lcall
stc
cs
inc
push
cmpsl
cmp
push
cwtl
stos
shrl
sbb
popw
and
outsb
mov
mulps
inc
test
push
mov
cmpsl
pop
and
and
mov
sub
xor
sub
adc
add
jge
mov
test
jmp
push
sbb
dec
or
ljmp
out
imul
ret
push
popl
bnd
lea
push
mov
mov
mov
push
push
and
je
push
lcall
or
adc
ds
xchg
es
imul
mov
js
lods
xchg
cmpsl
and
lcall
add
and
shll
mov
pop
push
es
stos
push
mov
xor
or
push
jge
or
jb
mov
and
pusha
jnp
ret
ret
cwtl
and
bound
xchg
push
jg
in
and
cmp
fnsave
fs
stc
in
pop
push
rclb
das
roll
stos
loopne,pt
sbb
pushf
cmp
popa
xlat
add
sub
dec
sub
sub
lea
imul
pop
xor
out
inc
leave
mov
cmp
push
xchg
daa
sub
fisubrs
push
shrb
popa
cmp
pop
xor
loopne
jge
push
lock
dec
in
add
jmp
dec
scas
xchg
rcll
paddb
cmpsb
xchg
fdivrs
dec
decl
xchg
out
mov
imul
adcb
fsub
loope
jg
js
ja
inc
iret
outsb
sti
jno
xchg
xchg
aaa
xchg
imul
in
lods
add
mov
pop
mov
jmp
or
xchg
sbb
cmp
aam
aas
and
pop
imul
nop
xchg
sbb
or
cmpsl
shll
mov
shlb
jo
in
test
jp
rorb
xchg
xor
call
std
inc
add
test
movsb
mov
and
rep
cmp
repnz
add
dec
fistps
ror
orl
sub
pop
cmp
push
imul
rorb
mov
push
fwait
popa
test
outsb
pop
decl
lods
addr16
push
fisttpl
mov
xor
ret
ffree
ds
xchg
jo
xor
inc
mov
push
movsl
rorb
leave
add
pop
xor
cli
mov
mov
jp
mov
mul
pop
lret
sarl
leave
dec
pop
dec
jg
jbe
incb
inc
sbb
test
add
dec
shll
inc
test
incb
fiadds
mov
ja
jo
inc
cmp
add
mov
add
or
jbe
and
and
mov
sbb
mov
sub
loopne
jecxz
sub
sbb
insb
lahf
cmpsl
mov
aaa
pop
rorl
das
cmp
test
call
add
sti
add
scas
cmp
fmul
lea
ja
add
inc
push
mov
mov
xor
es
mov
and
ret
repz
sbb
and
loope
ja
fdiv
rol
xchg
test
xchg
pop
and
inc
jmp
mov
sahf
ret
push
mov
jns
fidivl
jp
fdivrs
pop
pop
xchg
add
pushf
mov
push
stos
in
push
rcr
sub
jbe
mov
repz
ss
enter
ret
add
lea
or
mov
adc
sbb
aas
js
icebp
popa
sbb
cs
lods
lahf
jle
in
jmp
in
daa
fldt
mov
dec
fsubl
adc
pop
mull
push
repnz
jb
add
push
hlt
adc
xor
cmp
or
jae
pop
mov
lods
pop
shll
pop
mov
mov
cmc
hlt
or
ss
adc
imul
cmp
xchg
push
ja
mov
jae
add
popf
cmp
sbb
dec
push
clc
rcr
mov
add
fs
popf
push
push
insb
inc
adc
xchg
or
nop
int
push
ljmp
rcrb
out
aad
mov
lods
push
mov
lret
aad
stos
mov
inc
lret
add
shrl
cmp
inc
or
inc
dec
mov
sub
iret
sub
add
pop
cwtl
xchg
push
lea
push
fdivs
dec
pushf
add
loopne
mov
fcomps
aam
mov
push
pusha
in
test
inc
cvttps2pi
out
sbb
cmp
jg
xchg
insb
sub
inc
adc
xchg
sub
push
aad
push
ljmp
xchg
add
out
mov
push
sub
fstl
pop
cmp
lcall
mov
push
push
mov
fistl
test
shrb
sbb
stos
mov
out
sahf
outsb
sub
add
jge
sub
arpl
cltd
pop
loope
adc
testl
sub
loop
pushl
loop
stos
ficoml
popf
mov
fidivl
xlat
pop
ret
gs
aaa
xlat
stos
fs
mov
stc
sarb
jle
mov
not
sub
push
mov
int3
sub
push
xor
pop
out
mov
mov
dec
outsl
mov
adc
cmp
sti
stos
imul
je
cmp
lret
jecxz,pn
stos
xor
cmpsb
mov
scas
les
mov
pop
imul
gs
sahf
daa
or
aaa
dec
mov
sbb
push
pushf
idivb
add
jno
inc
jecxz
lods
dec
inc
mov
xchg
cmp
clc
mov
mov
call
push
add
cmpl
sti
mov
inc
icebp
js
dec
sbb
or
add
lea
fwait
jb
dec
push
inc
daa
popf
cmpsb
in
inc
ja
sbb
insb
jmp
data16
jle
and
insl
mov
aam
cmpsb
imul
div
dec
testb
pop
ss
sti
repz
inc
mov
dec
jmp
inc
loop
hlt
mov
andl
push
aam
and
stos
test
add
int3
js
leave
divb
clc
sub
fsub
xchg
inc
stos
enter
or
jmp
imul
inc
cltd
add
imul
cmp
xchg
push
pop
movsb
adc
sub
mov
aam
sbb
dec
cmp
repz
lea
cmpsb
xor
icebp
or
xchg
je
outsl
ss
imul
push
loope
imul
xor
xchg
movsl
xchg
lret
push
test
add
dec
sbb
push
rorb
sbb
push
jl
loopne
jo
in
imul
sbb
jbe
addb
aad
lea
out
mov
popa
pop
and
std
scas
outsb
jne
sti
and
mov
xlat
stos
out
arpl
leave
cmp
shrb
or
or
fbld
or
test
mov
pushf
xlat
jnp
imul
or
mov
jmp
loopne
pop
ds
test
imul
xorl
lods
pop
pushf
stc
mov
add
inc
cli
ja
jecxz
jmp
or
fwait
sbb
loop
add
test
dec
xchg
in
pop
test
adc
or
mov
xchg
pop
mov
jno
les
decb
sub
hlt
dec
pop
out
or
xor
in
cmpsb
sahf
push
xor
and
in
in
inc
lahf
in
adc
or
mov
ret
shl
sub
in
dec
xchg
loop
and
cmpb
pop
fldl
jae
fsubl
jbe
insl
mov
fsub
fnsave
outsb
repz
hlt
lods
lock
sub
outsl
or
test
push
sub
scas
sub
loopne
shr
xchg
loopne
inc
mov
mov
addr16
daa
or
in
sub
mov
popl
stos
aas
ret
rep
push
bound
jl
jbe
fmuls
mov
fs
rcrb
sub
xchg
cwtl
aad
inc
sub
sub
ja
rorb
xchg
cs
in
out
mov
add
xor
repnz
rorl
add
stos
pop
fwait
clc
push
shl
xlat
ja
mov
fcomi
js
mov
and
fldenv
insl
ffree
addr16
fs
rcll
or
mov
fisubs
sbb
test
adc
test
mov
incb
lahf
sub
sahf
inc
xor
xchg
xor
jge
stos
adc
shlb
sub
push
push
daa
inc
mov
mov
cmp
loop
adc
inc
popa
in
inc
dec
dec
in
pop
dec
add
test
popa
or
ret
sub
sbb
sub
xor
jbe
cwtl
in
into
ljmp
lcall
scas
into
and
pop
push
pop
xchg
cmp
iret
jge
jnp
leave
in
mov
add
js
imul
cmc
jp
mov
mov
sbbl
pusha
mov
dec
or
add
dec
jnp
or
cmp
mov
xchg
clc
out
mov
iret
fwait
lods
in
in
fimull
sti
jecxz
push
cmp
or
pop
fwait
ja
subl
and
inc
sbb
pop
fucomp
add
cmp
pushf
cmpsb
push
xchg
mov
ret
dec
jmp
pusha
push
neg
aad
std
inc
shll
mov
cmpsl
jmp
xlat
mov
pop
push
cwtl
ret
stc
imul
xor
push
push
gs
or
notb
lret
adc
and
adc
jl
sbb
ficompl
sub
ljmp
call
adc
stos
orb
js
mov
jg
and
inc
mov
pop
cmc
xchg
lea
loop
xor
xor
jae
sbb
push
sub
mov
out
push
jns
dec
fsub
mov
or
lods
dec
dec
inc
jae
pop
and
add
pop
aas
mov
outsb
mov
cmpsl
popf
add
add
testl
mov
je
xchg
fwait
ret
pop
push
je
or
xor
cltd
jae
test
clc
sub
leave
xor
cmp
sbb
sbb
iret
jne
mov
adc
jecxz
in
fsubrl
inc
in
jmp
sub
xchg
cmpsb
jno
movsb
es
cmc
dec
cli
cmc
adc
and
out
mov
inc
sahf
mov
jnp
jne
mov
mov
es
into
pop
mov
push
fwait
lcall
inc
pop
or
imul
aas
mov
leave
and
pusha
loope
adc
mov
outsb
mov
pop
fldenv
movsb
rcrl
rorb
jmp
insb
int3
inc
pop
mov
out
adc
sub
mov
mov
jmp
clc
mov
xchg
or
or
out
shlb
pop
jno
call
jo
iret
push
out
into
inc
out
xor
xchg
mov
mov
adc
fisubs
mov
cmc
lcall
testl
into
mov
xor
jo
jmp
jecxz
shlb
fisubs
out
movsl
or
dec
pop
mov
mov
sbb
mov
cmc
and
pop
pop
and
pop
push
xor
xor
decb
pop
mov
mov
es
xchg
push
ret
jl
jge
rolb
fsubrs
test
divl
stos
pop
sub
cmpsl
push
mov
and
adc
sbb
sub
fdivr
stos
addr16
inc
iret
fdiv
xchg
xor
test
andl
pop
lock
clc
jmp
add
or
adc
jge
jno
loop
stos
pop
sbb
mov
aas
shll
xchg
mov
movb
imul
mov
mov
mov
xor
lea
cmp
jne
mov
mov
xor
add
mov
and
xor
xchg
xor
push
mov
jmp
cli
test
pop
jo
inc
add
mov
ss
insb
jnp
repnz
jnp
cmp
scas
inc
lret
xchg
das
call
jmp
mov
mov
dec
popf
jns
push
std
nop
mov
xor
aas
adc
das
lret
push
mov
mov
mov
data16
in
mov
push
and
stos
mov
add
test
into
mov
inc
inc
aas
xor
or
in
pop
xor
ret
xchg
jg
jmp
shrb
adc
xchg
fyl2x
pop
or
pop
cmp
popf
imul
xor
mov
push
pop
lret
js
and
cmp
cmp
lcall
xor
xchg
or
cmp
mov
pop
imul
xchg
dec
mov
addl
and
les
adc
repz
xor
lret
in
sbb
cmpb
mov
pop
lret
jmp
push
hlt
cmp
sbb
mov
pop
xor
popf
dec
lods
enter
call
xchg
sbb
jp
test
ljmp
mov
pop
sbb
jl
aad
int3
mov
xor
and
div
shll
mov
js
push
add
jne
jno
mov
mov
lods
lock
cmp
pop
outsb
divb
xor
pushf
inc
out
into
lahf
js
test
pop
andl
out
iret
or
das
cmpsl
add
push
mov
cmp
lret
aaa
mov
jl
and
adc
adc
inc
test
sub
hlt
das
push
std
lock
out
int3
sbb
mov
rorl
rclb
in
cs
dec
push
das
or
sub
push
mov
sub
movsl
or
nop
test
repz
aad
out
data16
fnsave
fs
insb
dec
xchg
std
stos
adc
rol
pop
inc
sbb
jnp
cmp
movsl
inc
in
jne
add
mov
hlt
cmp
jo
aam
xor
xor
and
shrb
pop
sub
mov
aam
lods
mov
sarl
pop
push
mov
mov
call
dec
sahf
add
pop
mov
lcall
aas
fimuls
jb
mov
lea
mov
mov
insl
je
out
in
lret
push
xchg
jg
ret
jns
shll
cmp
repnz
and
in
inc
dec
lret
loope
xor
lds
cmovg
pop
daa
lret
dec
push
jo
movsb
mov
add
xchg
xchg
sbb
mov
testb
inc
hlt
fsubs
out
pop
pushf
and
and
sub
or
loopne
dec
push
mov
movsb
fsubs
push
divb
jno
and
insb
dec
ficoml
mov
movsb
xchg
cmc
push
cld
mov
xor
sarl
and
sub
push
sub
xchg
addr16
test
mov
jns
jne
add
loope
cmp
insb
ja
iret
lea
scas
sar
fisubs
cs
push
and
arpl
testb
ret
and
sbb
adc
mov
mov
lret
int
inc
jb
jecxz
fadd
mov
icebp
bound
lods
mov
movmskps
mov
loope
dec
xchg
cwtl
and
and
sub
mov
mov
push
scas
aad
pop
daa
sahf
bound
cmp
cmpl
insl
xor
inc
roll
pop
andl
ret
fildll
mov
leave
orl
cmpsb
jg
push
xchg
aaa
mov
clc
pop
add
sbb
inc
dec
into
gs
pop
loope
adc
popf
lret
in
push
iret
jnp
test
mov
xor
into
fcoml
popa
sub
outsl
jmp
push
stos
sahf
add
push
addr16
xlat
je
in
xchg
out
jg
jns
mov
xchg
xchg
push
sub
pushf
int3
xor
or
xchg
mov
cwtl
outsl
shrb
stc
mov
fidivl
xchg
loope
jo
in
scas
out
jne
xor
rorl
cmp
js
xchg
xchg
xlat
and
xchg
adc
pop
test
outsb
sarb
loope
xchg
mov
and
jge
mov
sub
inc
sub
and
fcomip
dec
fmuls
stos
inc
push
mov
mov
and
xchg
fisttpl
lds
jo
add
inc
cmpsb
xchg
mov
je
xchg
xor
dec
pop
pop
lods
jp
mov
xorl
pop
jmp
mov
sbb
stc
loopne
sbb
or
std
inc
inc
fiaddl
lods
sbb
xchg
loopne
dec
aas
push
jl
sbbl
adc
dec
or
sub
into
adc
add
sub
mov
or
divb
loope
push
ss
popa
stos
jp
mov
lods
lcall
mov
outsb
pop
or
jge
out
divl
je
pusha
sub
add
cmpl
push
push
add
lods
iret
cltd
in
pop
xchg
pop
xor
fadds
cmp
or
or
jbe
push
shrb
adc
hlt
adc
xchg
inc
cmp
push
in
stos
xor
pusha
fcmovnbe
push
fbstp
scas
mov
xor
mov
jp
xchg
fsubp
mov
push
jae
imul
push
nop
lds
cmp
cli
rorl
push
sahf
push
and
ffree
in
repnz
adc
inc
ret
add
and
es
xchg
aad
xor
movsl
lds
incl
xchg
stos
lret
cmp
push
add
xchg
jne
outsb
mov
mov
fwait
inc
jg
mov
pop
leave
ljmp
lret
inc
mov
mov
lret
lea
dec
dec
decb
adc
je
popa
push
daa
jno
enter
and
push
movsl
popf
jle
mov
and
test
xchg
lcall
ficompl
fimull
stos
mov
sar
xchg
das
add
iret
xor
cli
pop
mov
xor
jge
scas
inc
jmp
scas
clc
jmp
repz
outsb
ljmp
jo
fistpll
repz
sub
pop
or
pop
xchg
je
popf
and
in
rcr
mov
imul
push
or
mov
xor
aam
add
decb
pop
adc
loop
mov
inc
clc
dec
ja
push
je
popa
movsb
insl
cwtl
scas
sub
xchg
lret
fsubrl
pushf
fistl
insl
mov
pop
jmp
aas
or
enter
outsb
mov
fistps
push
and
mov
pop
and
lret
in
jp
push
cmp
add
in
or
pop
mov
dec
sbb
mov
aas
inc
in
cmpsb
insb
aas
in
xchg
aam
push
sbb
rcrb
fbstp
adc
mov
cltd
push
js
scas
inc
dec
adc
cmp
adc
sub
adc
insb
pminub
add
call
inc
and
adc
imul
push
cmpsb
js
gs
cmc
lahf
lret
mov
pop
and
xor
fnstenv
adc
popa
push
dec
arpl
in
subb
adc
lcall
and
pop
pusha
pop
sub
or
mov
shll
clc
repz
inc
arpl
ljmp
sub
mov
enter
jae
jmp
testb
out
outsb
mov
lret
cmpsl
push
dec
loop
sbb
lret
xor
cs
les
ljmp
movsb
out
cltd
aam
pusha
shll
lea
jo
xlat
int
push
jl
fisubrl
inc
pop
fs
lds
mov
out
scas
mov
lcall
fbstp
mov
lret
ljmp
rcl
lret
mov
es
sub
enter
jecxz
outsb
pop
add
push
xchg
inc
sti
jmp
out
scas
jmp
cli
mov
lcall
push
mov
ret
aad
cmpsl
loope
clc
out
out
push
push
and
add
xlat
mov
addl
call
xchg
sub
lcall
dec
cmp
into
pop
mov
add
inc
dec
xor
subb
popf
mov
push
fs
stc
dec
test
sbb
or
add
xor
lcall
push
das
ret
popf
cmp
jge
fildll
daa
sbb
jle
jns
fbstp
lods
push
repz
sbb
sbb
pop
push
push
fmull
or
bound
or
push
js
xor
repnz
ret
dec
imulb
mov
push
bound
mov
sbb
imul
inc
test
pushl
xlat
sbb
aad
adc
test
shl
pop
out
dec
cmp
repnz
scas
lret
out
and
hlt
xorl
inc
repz
repz
ja
jb
sahf
push
je
mov
or
test
jns
in
cmpsb
fstl
daa
sti
mov
adc
adc
test
fxch
push
int3
cmpsb
in
mov
add
gs
sub
xchg
pop
imul
push
mov
lret
gs
sub
cs
adc
lret
stos
imul
adc
mov
pop
and
ja
pop
sbb
and
cmp
mov
cmc
mov
out
mov
or
and
inc
in
or
mull
nop
jecxz
lret
jns
inc
jbe
pop
mov
dec
adc
icebp
mov
push
leave
push
mov
sub
or
leave
ljmp
gs
xor
movsb
cmp
cmp
sbb
push
mov
mov
sbb
ljmp
xor
fldenv
fnstenv
or
push
dec
lock
pop
arpl
popa
sbb
sub
repz
popa
ret
lds
imul
cmpsb
xchg
xchg
jno
mov
jg
insb
hlt
stos
cmp
mov
xchg
cmp
pop
loopne
dec
pushf
pop
iret
fildll
or
repz
sbb
mov
rcr
imul
jmp
rcr
aaa
mov
mov
or
jge
jo
out
or
cmp
shlb
add
xor
ret
sbb
or
and
movl
xor
xchg
cmp
jle
sbb
dec
icebp
aaa
shl
xor
sub
ss
and
movsl
xor
cmp
push
lods
and
les
jle
stos
das
nop
xchg
repnz
das
inc
xchg
faddl
pop
cs
ret
sti
lock
into
sub
bound
pop
mov
push
xchg
adc
push
push
cmp
pop
jno
jge
addr16
sti
pop
sti
xlat
stc
inc
push
xor
rclb
mov
xor
aam
pushf
rolb
xchg
pop
idivl
fwait
jbe
cld
mov
clc
ja
push
movsl
aas
xchg
or
addr16
aam
xor
or
stos
aad
adc
xchg
outsb
fsts
jne
sub
add
hlt
sbb
loop
pop
add
ds
inc
outsl
dec
mov
pusha
sarb
mov
add
sub
les
fsubl
pop
xchg
adc
push
push
ja
mov
stc
je
sub
mov
sub
std
or
scas
dec
pop
xchg
daa
hlt
xchg
enter
xlat
inc
mov
mov
outsl
jo
jbe
jb
nop
and
xor
pop
les
rclb
push
or
divl
es
jns
nop
addr16
sbb
mov
jne
pop
aaa
aaa
ror
xchg
pop
loop
popa
push
adc
fisubs
ljmp
cli
mov
out
xchg
cli
jge
test
inc
adc
imul
xchg
pop
mov
adc
icebp
hlt
pop
shlb
ds
insb
sub
push
movsl
loopne
jnp
insl
mov
in
cmpsb
in
pop
stos
mov
cmpsl
push
aam
mov
jb
push
add
imul
sbb
mov
or
mov
xchg
cmp
fistl
dec
lret
sub
push
and
sbb
adc
cld
call
dec
xlat
cs
jne
inc
shlb
arpl
ss
push
cmp
arpl
jmp
cld
call
xchg
mov
stos
insb
std
jge
sub
jmp
sahf
mov
xorl
lea
pushf
cmp
mov
cmp
mov
jb
adc
push
iret
add
mov
rol
push
fiadds
dec
rorl
cld
jno
mov
filds
xchg
mov
push
xor
mov
push
icebp
test
pop
push
cld
push
pushf
sub
mov
clc
cmp
xlat
in
xchg
inc
adc
jle
mov
xchg
inc
dec
or
jnp
outsb
or
mov
popf
popf
ljmp
fs
repz
repnz
out
or
pop
xchg
pop
std
mov
pusha
sbb
sub
inc
hlt
sbb
aam
lods
cmp
mov
xchg
stos
mov
mov
dec
mov
pop
lret
adc
push
mov
pop
cwtl
stos
push
pop
std
pusha
clc
ret
add
dec
push
mov
sub
mov
test
add
int
mov
cli
movb
jne
mov
out
push
in
mov
das
sbb
mov
and
mov
cmpsb
test
inc
icebp
sahf
and
jmp
inc
pop
xor
jg
mov
xchg
gs
int3
repnz
enter
dec
jg
mov
mov
xor
test
jle
pop
and
adc
cmpsl
dec
adc
in
mov
je
push
lods
push
mov
cmp
testl
dec
shlb
cmp
aad
adc
or
inc
jecxz
ret
mov
sbb
push
clc
roll
rolb
and
adc
outsb
aaa
sbb
lcall
add
jb
adc
mov
push
add
pop
mov
sahf
ljmp
in
sbb
out
inc
lret
orb
mov
inc
xor
out
mov
adc
leave
xor
add
iret
outsb
sbb
inc
inc
dec
jmp
cmc
mov
xchg
in
push
insl
je
adc
pop
xchg
scas
xlat
sahf
lret
xchg
jbe
mov
into
inc
fcmovbe
aas
push
inc
stos
mov
xor
rcll
mov
dec
pushf
ja
les
les
xchg
jbe,pn
stos
fs
jnp
jmp
mov
inc
bound
xor
xchg
ja
adc
leave
adc
adc
rcrl
dec
mov
insb
mov
mov
xor
hlt
scas
pusha
dec
lds
cmp
andps
or
dec
pop
pop
mov
addr16
jp
xchg
add
inc
push
fmull
push
xchg
push
subl
ss
or
push
xor
popa
test
pop
stos
fists
add
mov
xor
lea
dec
xchg
fldenv
shl
les
adc
loope
rcl
or
mov
jo
sub
add
jp
push
fsubl
inc
loop
daa
dec
add
mov
cli
sub
inc
jo
out
in
dec
cld
out
test
leave
fidivrl
loope
ret
test
lcall
test
xor
scas
mov
leave
mov
push
inc
enter
xlat
lret
and
add
sbb
sbbl
cli
xor
push
mov
jo
ja
aas
in
cld
xor
dec
call
ret
fs
inc
inc
dec
sub
mov
popf
gs
maskmovq
imull
jb
daa
jle
mov
enter
push
insb
mov
outsl
call
int3
jg
inc
sbb
jg
adc
inc
push
pop
rclb
or
sbb
xor
cmp
or
sub
and
xlat
lret
and
fiadds
enter
add
imul
inc
add
mov
scas
and
xchg
jnp
sar
lods
repz
push
add
idivb
or
pop
jbe
mov
push
lock
jge
cmp
loope
aad
leave
stos
push
mov
push
push
cli
out
jbe
jg
inc
xor
insl
sub
xchg
push
pusha
je
pop
xchg
es
sbb
dec
dec
or
aaa
sbb
pop
shrb
adc
mov
push
hlt
mov
icebp
inc
adc
lea
and
sub
jnp
loop
adc
adc
outsl
ja
mov
xchg
faddl
mov
aaa
stc
dec
popa
ss
sbb
int3
cmpsl
mov
cmp
call
xchg
pop
bound
mov
movsb
inc
outsl
test
out
xchg
andb
shll
arpl
std
cmp
rcll
mov
rcrb
stos
mov
lret
jnp
dec
sub
sub
sub
mov
sahf
xlat
mov
add
jno
jnp
dec
adc
mov
push
pop
dec
out
inc
adc
mov
xlat
orb
mov
testl
sub
xor
incb
dec
pop
testb
aad
into
rcr
movsl
aam
shr
push
insl
movq
daa
nop
divb
add
sbb
sar
mov
cmp
mov
dec
adc
shlb
fwait
in
inc
mov
ja
gs
in
ljmp
pop
inc
xchg
jo
scas
lods
sti
rcrl
leave
arpl
stos
jno
xor
sbb
sub
adc
xchg
fnstcw
lds
inc
ffree
push
test
rol
jp
cmpsl
inc
leave
lock
shll
mov
pop
cmpsb
jo
movsl
xchg
push
ja,pt
jno
shrl
mov
add
cmpl
fcompl
lds
dec
pop
inc
xorl
scas
push
mov
sub
mov
push
rcr
mov
shrb
sbb
je
jnp
pop
mov
mov
mov
sub
mov
insb
or
xor
arpl
dec
or
int3
sbb
pop
fsubs
pop
or
daa
sbb
call
jge
adc
inc
shlb
dec
cmp
fs
mov
stc
cmp
push
pushf
xchg
pop
arpl
daa
fwait
loop
jmp
sti
in
xor
sub
scas
adc
and
test
push
dec
add
repz
xchg
cmpsl
outsb
xor
sbb
cmpsb
sbb
jae
push
cmpsl
sub
jo
xor
nop
adc
push
fcompl
std
divb
aad
outsb
sbb
mov
mov
or
pusha
popf
pop
inc
sub
in
xor
arpl
iret
not
fisttps
rorl
cmp
inc
leave
mov
lahf
outsb
iret
sbb
sahf
loopne
fistpll
into
jae
ret
mov
mov
sbb
sbb
mov
jecxz
dec
es
jecxz
ja
decb
out
insb
subl
mov
xor
rolb
xchg
mov
lret
test
fs
xor
pop
pop
add
push
lcall
cmpl
movsb
out
jae
cmp
dec
add
enter
mov
cmp
mov
iret
fcomps
mov
repz
cmp
scas
in
cld
lds
and
adc
jmp
mov
pop
scas
dec
aam
es
mov
aam
std
popf
or
mov
inc
mov
les
sti
adc
cwtd
inc
xchg
imul
xor
pop
cli
mov
sub
push
das
dec
jg
mov
sti
in
lds
ja
into
cmp
repnz
jp
rorl
sbb
pop
inc
xor
pop
mov
push
lcall
hlt
arpl
mov
cmc
inc
arpl
out
test
lds
dec
popf
call
jb
shl
adc
test
cmp
mov
or
imull
mov
xchg
pop
dec
mov
outsl
sarl
pop
jae
sbb
push
cmpsl
les
pavgw
test
leave
push
not
loop
lock
cmp
fnstsw
fsubr
ds
dec
ss
je
mov
clc
push
or
or
out
push
jecxz
lds
sub
pusha
mov
xchg
aas
aad
mov
dec
push
jle
lods
pop
insl
dec
pop
cmp
loop
mov
xor
mov
sub
cld
or
sahf
jbe
lret
stos
lea
orb
xlat
arpl
test
out
mov
push
ljmp
mov
jecxz
loopne
mov
xchg
xchg
jne
mov
pop
fwait
lds
ret
push
fdivrl
lret
xor
ret
mov
xchg
add
gs
sub
or
ljmp
mov
mov
cmp
stos
xrelease
or
mov
and
xor
cltd
xchg
inc
pop
stos
add
add
mov
mov
or
sbb
xchg
inc
pop
mov
outsl
cmp
lds
jb
icebp
xchg
jbe
sub
jecxz
jmp
into
hlt
lods
dec
les
sub
mov
inc
paddd
imul
sub
inc
pop
ss
mov
pop
sarl
jbe
aad
dec
jg
leave
cmp
nop
dec
in
push
insl
ljmp
sarb
cwtl
push
xlat
test
lahf
daa
lret
stc
ret
cmp
mov
rclb
adc
or
pop
and
arpl
mov
outsb
das
xchg
inc
inc
insb
into
mov
xlat
test
fstpt
inc
enter
jbe
sub
cmpsl
dec
ret
dec
push
js
lods
mov
add
jbe
rcrl
outsb
fwait
cli
daa
cld
jns
push
insb
enter
lds
push
inc
sub
insl
and
nop
mov
sbb
lret
cmpsb
test
insb
jne
push
dec
sub
roll
xchg
fisttps
sub
and
ds
lea
and
shl
jg
jg
in
in
sub
ds
loop
or
xchg
cmp
sbb
ss
pop
xor
or
or
inc
cmpltps
ja
cwtl
fmul
push
es
std
inc
and
xlat
pop
and
lods
dec
inc
negl
jg
shll
lcall
jmp
arpl
xchg
xchg
movsb
mov
xor
nop
ret
ds
mov
fsub
ds
dec
fisubrs
call
movsl
mov
lss
ret
mov
xor
mov
incl
mov
xchg
shll
push
push
insl
and
mov
ja
mov
sbb
sbb
xchg
mov
fldcw
sbb
push
stc
in
mov
cli
out
xor
mov
push
hlt
divl
jne
js
mov
and
lods
test
jnp
and
fs
mov
incb
lds
ret
mov
and
out
adc
adc
xchg
test
imul
and
out
cltd
jmp
lods
pop
push
leave
xor
mov
pop
out
decw
mov
sub
out
cmp
dec
gs
fistpll
mov
push
xchg
dec
cmp
in
inc
popa
sti
adc
repz
push
xor
push
mov
aad
leave
imul
cmp
out
jno
mov
jno
lods
inc
xor
in
sti
das
inc
xchg
test
int
inc
xchg
cld
mov
jmp
lock
push
xor
pop
dec
mov
dec
push
es
adc
xor
hlt
in
insb
add
cs
imull
enter
sub
popf
out
push
or
fisubrl
fs
jp
inc
fbstp
lods
and
sub
sahf
dec
fsubr
mov
iret
jae
pop
pop
mov
mov
pop
dec
sbb
lods
dec
jae
inc
mov
pop
mov
add
pop
or
cltd
push
sbb
rorl
sbb
test
xlat
scas
lds
xor
adc
and
mov
push
inc
push
jnp
push
out
loop
popa
push
lahf
sub
pop
stc
and
jge
dec
sbb
pushf
fdivrl
sub
push
mov
mov
aam
push
add
leave
sbb
inc
add
adc
incb
inc
inc
loope
pusha
sub
sub
xchg
push
leave
popa
mov
pop
dec
mov
movsl
pop
mov
stos
mov
call
lods
out
jle
ljmp
loop
arpl
xchg
xor
arpl
mov
icebp
mov
out
imul
fisubl
fbld
push
mov
hlt
adc
lret
sbb
cmp
ret
jp
xor
mov
add
fucom
mov
jge
jecxz
adc
and
pop
sahf
push
subb
dec
cmpsl
nop
and
dec
es
rorb
inc
fidivl
jp
jmp
arpl
iret
mov
jne
ljmp
add
adc
mov
push
inc
xchg
nop
xchg
sbb
fwait
ds
lods
sbb
adc
gs
mov
out
ret
outsb
mov
dec
or
addr16
test
mov
int3
xchg
mov
shlb
add
cld
imull
mov
mov
test
xchg
cmp
cmp
pop
push
and
dec
inc
mov
adc
aad
sub
arpl
mov
xchg
xor
stc
xchg
push
mov
jns
shll
dec
dec
xor
xchg
stc
dec
jno
add
mov
ret
and
rcrb
icebp
adc
in
pop
mov
add
sub
push
stos
or
into
sub
cmp
push
nop
cmp
cltd
shrb
push
xor
mov
ja
mov
dec
mov
xchg
out
sahf
push
subl
add
sbb
pushf
lods
cs
test
sbb
or
mov
jnp
mov
out
mov
mov
add
xor
push
push
fwait
cwtl
lahf
mov
cmp
jb
xor
fsts
loopne
sub
mov
pop
gs
mov
mov
push
sbb
rclb
jmp
rorl
mov
ss
inc
rolb
jnp
leave
aad
cmpsl
jo
pusha
xor
cmpsl
cltd
hlt
dec
ret
iret
loop
cs
push
lods
xchg
stos
inc
sbb
dec
outsb
insb
cmp
cltd
loope
sbb
dec
mov
fisubrl
idivl
add
jmp
dec
inc
xchg
sub
sub
shrb
add
dec
icebp
jno
jne
jmp
sbb
pop
into
inc
clc
or
int3
adc
lods
mov
shlb
inc
fwait
pop
rcrl
mov
ret
addr16
popa
add
ljmp
dec
add
push
cmp
mov
jno
data16
dec
out
outsb
or
enter
in
dec
repnz
fwait
dec
cmp
test
jae
out
insl
jns
cmp
addl
movsl
push
mov
xchg
inc
adc
add
jb
jae
xor
std
xlat
outsl
push
enter
aaa
push
arpl
ljmp
jge
movsl
mov
adc
ficoms
es
icebp
cmp
test
xor
cwtl
enter
inc
push
add
ja
out
xchg
js
dec
nop
lcall
lods
leave
rcll
sahf
jne
adc
aas
xchg
outsl
sbb
pop
repz
fs
xlat
mov
push
sahf
xor
lods
fadds
xchg
push
xchg
push
daa
and
cmpl
jp
xchg
fs
mov
xchg
ds
test
aaa
adc
sbb
cmp
add
xor
out
inc
popf
int
leave
push
aas
cmpl
cmp
sbb
shll
pop
lods
mov
stc
in
jl
sbb
sti
nop
popf
in
in
push
aad
cmp
sbb
sbb
lret
fs
pushf
ret
mov
or
sub
push
mov
pusha
out
out
call
pop
cmp
inc
push
xlat
insb
sbb
data16
jl
hlt
enter
dec
xchg
cwtl
push
outsl
push
push
jecxz
icebp
push
or
mov
movsb
shl
jle
and
cwtd
push
xchg
call
lret
cld
into
jne
adc
inc
rorl
ret
jmp
imul
mov
mov
clc
mov
sub
add
mov
in
and
iret
jmp
andl
mov
mov
cmp
scas
mov
xchg
xor
dec
movsb
push
sub
jle
jns
leave
test
iret
pop
mov
xchg
add
mov
out
loop
loop
jmp
xchg
pop
dec
int3
push
push
ficoml
fwait
jp
push
mov
nop
lret
add
aam
push
xchg
mov
out
xor
xor
push
cmp
aam
adc
imulb
sbb
scas
fs
bound
test
or
call
lods
movsb
pop
movsb
popa
iret
jne
and
pop
cmp
repz
pop
jnp
ss
fsubrl
test
xchg
gs
and
jbe
cs
inc
mov
popa
or
mov
ret
je
add
sbb
sbb
fbstp
test
xchg
inc
fld
mov
lret
leave
xchg
push
fwait
rcl
insb
mov
aad
lret
cmp
jns
or
pusha
fwait
push
dec
cmp
imul
mov
shll
fwait
sbb
imul
jne
adc
mov
xor
xchg
rorl
mov
cmc
outsb
in
aam
lods
xor
pop
test
test
cmpsl
xlat
std
cld
sbb
xor
xlat
push
insb
mov
outsl
enter
leave
inc
ret
les
add
push
pop
jmp
inc
cmp
cmp
sbb
jne
lods
fsubrs
fstpt
fadd
dec
addb
mov
xchg
pop
xor
or
xchg
jge
jle
lods
or
ljmp
dec
in
imul
cmpsb
jl
sub
jge
cltd
mov
and
jp
loopne
mov
dec
sub
ja
dec
shr
push
cmpsb
les
nop
shll
in
add
outsl
clc
fcomip
jmp
loop
lods
inc
cwtl
xchg
movsb
push
shl
lds
inc
rcrb
mov
fs
or
pop
lds
rcr
cmp
das
dec
scas
sub
jne
xor
inc
std
negb
pop
stos
xchg
leave
jle
or
ljmp
loop
rorl
push
outsb
fisttpl
pop
loope
shrb
in
or
scas
xchg
push
data16
nop
dec
lahf
xchg
stos
pop
push
outsb
sbb
dec
pop
ret
jo
outsb
fsub
rcl
mov
fcompl
repz
fidivrs
and
pushf
cmpsb
testl
outsl
mov
add
shlb
loop
lea
fwait
add
lret
mov
dec
inc
insb
push
dec
xchg
add
xchg
clc
ror
mov
hlt
mov
jmp
pop
jge
ret
stos
leave
jmp
mov
push
adc
add
sub
adc
cmp
pop
sub
inc
sub
rol
push
loope
hlt
pop
dec
pushf
push
in
push
fs
dec
xor
xchg
xor
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
jmp
lea
sub
insb
int
xchg
mov
fcomi
pmaddwd
jp
repnz
jnp
dec
mov
imul
mov
loope
js
sbb
dec
aas
pop
rorl
imul
xchg
push
mov
jp
mov
jno
ja
test
leave
mov
xchg
fisubs
pop
addr16
or
sub
movsb
repnz
daa
iret
fdivs
xchg
sbb
loopne
scas
cs
iret
sbb
sahf
andl
ds
sbb
les
push
and
sub
and
out
lret
je
sub
sub
mov
add
ja
fildll
xor
mov
into
sbb
movsb
in
push
jmp
fs
out
inc
mov
xchg
push
xchg
push
xchg
lds
adc
or
adc
adc
jg
call
push
dec
or
mov
es
cmpsb
mov
mov
jns
mov
jns
or
dec
rolb
or
add
xchg
aad
loop
sbb
mov
xor
and
dec
xor
sub
mov
push
lahf
fnstcw
stos
lahf
jnp
pop
bound
std
bnd
pop
mov
push
adc
or
pop
pop
push
les
jge
dec
mov
mov
add
cmp
and
arpl
inc
rcrb
out
enter
aas
xor
stc
pop
fidivrs
shlb
lods
mov
cld
into
ljmp
pusha
test
outsl
add
xor
sbb
or
mov
adc
jp
mov
jge
or
fidivrs
cmpsb
inc
jb
in
xchg
mov
out
into
add
sbb
xor
dec
lahf
mov
or
fdivrs
mov
sbb
mov
pop
pop
push
inc
out
ret
or
add
mov
test
filds
lahf
daa
cmc
add
inc
aam
mov
shr
pop
mov
cmpsl
push
mov
lock
or
xor
jae
leave
xor
push
ret
inc
mov
pop
lcall
out
insb
addr16
dec
push
stos
dec
adc
xchg
push
xchg
push
or
add
mul
loop
mov
inc
movsl
sub
pop
test
xchg
imul
fwait
xchg
ja
push
mov
sub
ds
xor
ret
cmc
pop
cmpsl
clc
pop
xchg
stc
imul
cmp
gs
push
adc
mov
int3
loope
xchg
in
xlat
cmp
sbb
daa
test
xor
lcall
repnz
dec
std
dec
push
sbb
add
push
jb
cltd
jns
inc
jmp
scas
cld
scas
movsb
sbb
lea
aam
mov
push
xor
and
dec
enter
add
mov
add
outsb
sub
push
xchg
and
out
jmp
mov
add
fld
in
test
int3
jge
data16
out
jbe
jnp
rcrl
testl
push
outsl
adcl
pop
sbb
or
jecxz
fildll
cmpsl
sahf
push
push
cmp
xchg
jecxz
cmc
loope
jge
adc
cmc
hlt
jb
sub
icebp
and
sarb
sub
psubusb
ret
test
jle
push
cli
add
sub
scas
jle
stos
dec
in
lock
outsb
sub
push
xlat
mov
ljmp
mov
push
int
sbb
lahf
mov
inc
iret
push
fsubrs
jmp
pop
dec
xlat
dec
inc
jo
loopne
ret
lods
and
cmp
jle
cmp
clc
out
lret
jb
ds
out
adc
inc
mov
aad
loope
gs
and
jl
ja
lahf
cwtl
shl
out
insl
fimull
aad
outsl
mov
inc
pop
outsb
in
gs
mov
push
aad
sub
or
loope
mov
jbe
pop
mov
in
inc
jno
inc
jp
cmp
mov
cmpsb
aad
pop
mov
scas
dec
outsb
sub
mov
addl
in
mov
mov
int3
sbbl
xor
push
dec
cltd
fdiv
xor
idivb
sbb
pop
insl
pop
fwait
movsb
sbb
rcll
adc
push
inc
add
out
sbb
loop
ret
outsb
add
adc
outsb
cli
mov
test
mov
jnp
fwait
adc
jno
fsts
xchg
pop
lcall
sbb
dec
movsl
xchg
pop
push
into
jle,pn
jbe
or
jmp
lods
adc
sbb
xor
loop
mov
imul
mov
pop
mov
repz
dec
cld
fistl
add
mov
pop
mov
mov
mov
mov
movsb
and
inc
shll
add
arpl
xlat
ror
inc
cltd
xor
dec
mov
mov
jmp
mov
lret
lods
adc
push
or
cmpb
mov
lods
enter
pushl
bound
pop
xorl
js
push
rcll
jge
jne
xchg
cmp
and
adc
mov
or
jns
dec
xchg
movsb
adc
inc
mov
sub
mov
or
sub
or
shrl
roll
out
and
and
movl
test
cmpsl
in
fsub
push
incl
dec
aam
jg
ret
addr16
pop
ficompl
jmp
xchg
lods
gs
lds
xchg
jle
inc
inc
mov
push
inc
jmp
fcmovnu
dec
shl
cmp
cmpsl
and
mov
fdivs
stc
adc
sbb
sbb
push
mov
loopne
adc
cs
inc
jge
dec
pusha
loope
sti
out
sbb
jae
xchg
cmp
shll
jbe
jb
cmpsl
pusha
inc
or
popfw
pop
aaa
jne
pop
inc
cmp
adcb
mov
shll
sbb
pop
add
jnp
adc
sbb
and
sub
push
mov
filds
icebp
push
out
inc
xchg
adc
imul
arpl
in
in
dec
sti
or
enter
scas
lea
scas
sub
ljmp
call
loope
adc
pop
stos
or
std
in
nop
fwait
pushf
push
xchg
scas
mov
push
shl
mov
push
xchg
arpl
nop
lds
sub
adc
out
mov
sar
call
in
int3
fldcw
test
jns
jo
push
and
push
sub
push
mov
pop
dec
in
sub
mov
scas
xchg
scas
ja
push
stos
add
push
add
mov
push
mov
fldenv
cld
dec
mov
fstpl
sub
dec
out
call
xor
in
push
pop
in
into
pop
mov
cwtl
push
adc
xor
cltd
arpl
jnp
and
adc
rorb
in
cmp
push
jb
and
mov
loop
inc
icebp
cli
iret
jmp
jp
mov
mov
int3
mov
add
mov
xor
push
movsb
insl
movsb
xchg
call
fadd
or
mov
dec
xor
mov
call
push
dec
stc
stos
lock
jge
mov
mov
push
xlat
push
andb
sub
cs
jmp
jbe
push
and
adc
pop
mov
jae
pop
cmpsb
dec
pushf
clc
popf
gs
imul
outsl
into
les
jg
hlt
inc
and
push
data16
xlat
and
rcll
xchg
mov
sbb
jbe
jo
les
xor
sub
lock
mov
mov
add
cld
rcrb
outsb
mov
inc
push
push
loope
imull
addr16
test
mov
xchg
sbb
jnp
js
insb
repnz
mov
xor
inc
aaa
hlt
pop
fwait
push
dec
iret
fistpl
popa
or
bound
cmp
sti
test
movsl
dec
scas
rcll
or
mov
or
out
leave
mov
je
jp
cmp
cmc
or
or
dec
add
push
roll
loopne
test
jno
adc
popa
ljmp
aam
jae
mov
mov
sti
and
int3
push
add
icebp
jg
jp
out
mov
shll
out
nop
mov
jge,pt
lahf
xor
fidivrl
mov
cmpsb
in
sbb
lods
sbb
popf
lcall
dec
cmpb
jg
aam
jnp
fwait
out
xor
icebp
daa
jmp
mov
jmp
jle
adc
test
out
jbe
idivl
js
fidivs
inc
int
mov
and
popa
sti
pop
enter
mov
aam
sub
bound
scas
sub
sbb
xor
aad
mov
lahf
out
pop
and
or
fwait
inc
dec
add
cwtl
test
mov
xchg
test
sti
xchg
lock
leave
lods
mov
out
aas
sub
cmp
or
xchg
sub
push
lahf
sbb
enter
out
push
cmpb
mov
pop
xor
push
mov
ds
dec
icebp
icebp
loopne
loop
int3
scas
or
repnz
pop
rcll
xchg
outsl
popf
jle
adc
rorl
pop
mov
ficompl
jmp
out
adc
and
insw
test
in
inc
sub
cmp
xchg
out
shrb
mov
jne
andl
inc
lock
fwait
in
mov
negb
int
add
xchg
xchg
mov
mov
mov
cli
sahf
leave
rorl
inc
stos
xor
test
add
sbb
int3
fadd
cmp
fsts
xchg
aaa
adc
aas
dec
nop
ja
add
sbb
addb
testb
and
pop
pop
daa
push
xor
fs
xchg
in
sub
loop
mov
push
into
and
mov
push
loope
lret
push
inc
imulb
iret
pusha
dec
add
sbb
mov
push
add
movsb
and
sub
pushf
lret
out
nop
adc
lcall
int
cltd
pop
xchg
aaa
xchg
push
addb
popf
pop
jae
add
je
pop
mov
fisttpll
pop
fdivrs
out
jecxz
mov
inc
inc
mov
mov
mov
hlt
sbb
cwtl
pop
pusha
add
add
push
hlt
fistl
jnp
nop
or
mov
daa
aad
xor
sub
pop
dec
push
inc
adc
cmp
imul
and
push
testl
pop
and
fwait
loope
ret
or
call
cmc
cmp
jns
cmpsl
mov
lret
or
repnz
sbb
or
clc
insb
cmp
clc
cmp
test
nop
fistpl
loop
add
sub
push
int3
out
xchg
repz
sub
aad
aad
test
add
sub
mov
jp
test
push
inc
std
sub
push
or
mov
les
sub
xchg
cli
pop
incb
fcmovu
and
add
nop
and
ret
fisubs
call
sub
imul
xor
into
dec
outsl
icebp
dec
scas
lods
insb
je
cmpsb
daa
pop
das
adc
fcoms
and
mov
into
jecxz
test
insb
jns
mov
pop
testb
xchg
cmp
popa
cmp
xchg
add
inc
pop
add
pop
jae
loope
bound
mov
add
pop
push
mov
push
mov
inc
iret
int
repz
jno
push
and
or
out
dec
xor
pop
sbb
inc
add
mov
mov
mov
xchg
insb
test
ds
lods
push
sbb
mov
mov
cmp
xchg
push
iret
test
mov
push
andl
ss
movsb
gs
sbb
push
or
es
cmp
jno
insb
lcall
call
xchg
push
adc
stos
or
insb
push
xor
push
insl
in
jl
outsl
aam
in
clc
je
dec
outsl
and
icebp
mov
and
aas
pop
gs
sbb
adc
and
xor
add
mov
and
cmpb
jne
adc
mov
js
hlt
sub
cmpsb
dec
and
pop
pop
cld
jnp
push
fs
jmp
loope
add
scas
out
cmp
cmpsb
adc
mov
and
sub
push
jp
aas
push
add
ret
or
sbb
add
mov
or
lcall
je
cmp
cli
out
into
ja
popf
or
pop
pop
push
mov
repz
icebp
test
out
lahf
adc
xor
mov
outsl
mov
je
out
cli
add
gs
or
inc
mov
fildl
cmpsl
fdivl
add
cmp
loopne
mov
popa
sub
mov
sbb
push
adc
or
nop
lock
push
cltd
adc
inc
popf
pop
gs
inc
inc
aad
jg
clc
mov
xchg
imul
sub
push
loopne
add
das
sbb
fadds
stos
int3
out
push
mov
push
out
push
pop
mov
pop
fdivl
mov
in
bound
jb
push
cmp
lcall
int
push
out
mov
jae
ficoml
push
pop
in
xchg
mov
and
mov
xor
cmpsb
xor
sub
mov
mov
push
push
xchg
adc
bound
sahf
add
jbe
out
cmp
lock
lods
push
js
fistps
mov
dec
fistpl
out
push
call
and
xchg
ljmp
shl
or
push
and
sbb
jns
loop
pop
mov
es
shrl
dec
mov
and
pop
or
test
mov
cmpsb
mov
and
adc
xor
enter
inc
pop
cmp
inc
fcmovu
push
jl
out
sub
fucomip
scas
jl
dec
pop
jmp
pop
jb
cmp
pop
and
mov
mov
pop
pop
push
cmp
lret
out
xor
xor
add
data16
iretw
popa
lock
sti
cmc
stos
pop
or
push
jg
add
add
sub
mov
jge
mov
dec
fdivs
jno
pop
jmp
js
mov
push
pop
insl
mov
pushf
mov
jle
clc
dec
fadd
cwtl
icebp
xchg
push
lret
outsb
into
iret
out
push
rorb
cmc
dec
xchg
dec
pop
mov
xor
fcoms
push
stc
inc
sub
xor
mov
push
ret
mov
adc
pusha
pushf
add
adc
insl
xchg
push
mov
adc
mov
sbb
mov
mov
xorl
scas
int3
imul
add
lret
lret
mov
fwait
adc
movsl
cmp
inc
lods
pop
sub
enter
insb
mov
push
cmp
xchg
or
pop
pop
inc
xorl
jno
mov
pushf
cmpsb
fwait
adc
push
add
jecxz
aaa
xlat
testl
fcomps
out
xchg
out
jmp
gs
pop
xlat
xchg
subb
jmp
int3
cmpsb
movsl
push
lea
and
fsubrl
jge
sbb
std
mov
call
mov
mov
bound
cld
xchg
add
mov
lods
pop
adc
xor
or
js
shll
pop
add
jne
loopne
sbb
repnz
in
and
int3
push
lcall
addr16
sub
inc
sahf
in
mov
repz
in
dec
scas
and
inc
bound
bound
mov
stos
rcr
xchg
jns
fwait
lret
push
out
sti
or
add
fs
sub
ljmp
push
test
dec
pop
jb
ret
mov
leave
in
lock
add
int
iret
ret
repz
dec
loop
sbb
insb
ret
xor
insl
ss
inc
cmc
cs
jne
jge
loopne
jmp
pop
loopne
in
mov
popf
pushf
pusha
jne
xchg
lahf
lock
out
xchg
or
pop
leave
sbb
cs
xchg
lods
mov
loop
mov
into
push
or
ds
jle
sbb
adc
jno
dec
dec
pop
es
rcrl
ret
mov
int3
mov
cmp
divl
adc
into
mov
adc
fidivrl
js
xchg
xchg
iret
and
sbb
popa
mov
inc
and
sub
cmp
loope
jle
adcb
pop
sbb
fildll
or
dec
stos
cmp
fwait
jns
ret
mov
pop
or
std
lret
repnz
add
mov
push
xor
mov
lea
inc
sub
loopne
jns
xchg
push
dec
mov
and
jmp
add
out
addl
push
test
mov
xor
adcb
in
inc
in
psubusb
mov
push
push
pop
cmpsl
frstor
sbb
push
jo
jne
iret
scas
inc
mov
jle
js
daa
add
push
adc
mov
int3
clc
jge
stos
negl
xor
subl
and
cwtl
cmpsl
xchg
sub
in
aam
sbb
xchg
test
sbb
fisttps
mov
sbb
out
and
adc
shrb
push
push
adc
sbb
xorl
jns
arpl
jne
jbe
leave
xchg
cli
jl
mov
jge
jbe
lret
inc
jecxz
xor
fs
push
bound
mov
fiadds
scas
fistpll
inc
add
jge
sbb
ret
cmpsl
mov
pop
mov
adc
sbb
sub
nop
rcll
clc
fstpt
or
or
fcomp
sbb
xor
mov
in
lea
push
aaa
ret
outsb
adc
xor
xchg
jl
loopne
push
inc
xlat
les
dec
jbe
sbb
aaa
daa
and
xor
int
addl
push
lods
dec
enter
fwait
mov
das
and
or
testb
jge
mov
sub
xchg
jl
fstpl
jns
mov
xor
pushf
jle
mov
jbe
aam
cli
jb
cmp
fisubrl
lods
mov
pop
sub
or
xchg
das
sbb
subb
jmp
adc
cltd
cmc
jp
and
in
in
fs
shr
inc
pushf
or
or
and
mov
stc
dec
adc
mov
dec
popl
add
or
jecxz
adc
popf
insl
inc
popa
mov
fs
or
mov
rcrb
push
cmp
jmp
mov
cmpsl
and
das
sub
insl
push
divb
imul
inc
pushf
ljmp
sbb
adc
icebp
or
cli
adc
mov
fs
adc
pop
stos
xor
add
sbb
inc
in
lea
mov
pusha
ds
sbb
cmp
in
xlat
std
into
dec
fbld
mov
lcall
and
cmpsb
fiaddl
xchg
sbb
mov
inc
lods
popa
pop
pop
rclb
cmpsl
insb
pop
movsl
push
inc
lret
or
dec
jb
cmpsb
inc
loop
ficoml
or
sbb
fwait
jle
mov
mov
divl
jmp
or
xor
sub
ja
xchg
lods
psubq
dec
mov
inc
mov
mov
xor
push
imul
cmp
stos
mov
scas
icebp
aam
fildl
popa
test
or
sbb
neg
fcomps
fbld
in
cmpsl
sub
fisubl
pop
sub
bound
push
jg
movsl
imul
sub
xchg
in
gs
mov
mov
dec
mov
je
out
push
nop
nop
mov
xlat
mov
xchg
inc
fistpll
jle
pop
mov
xchg
scas
jmp
fisubl
ja
iret
mov
popf
out
andb
fisttpl
mov
test
xchg
cmc
jp
and
or
fstpl
fsubrp
sub
pop
xchg
sahf
jb
lcall
mov
add
mov
pop
int
inc
mov
dec
fisubrs
out
add
in
rcll
mov
nop
sub
push
movsl
je
arpl
pop
jg
sub
xor
scas
sbb
xchg
push
imul
adc
mov
xchg
add
mov
push
add
pop
inc
inc
sbb
test
pop
sbb
dec
in
xor
mov
fdivs
cmp
pusha
mov
jno
mov
fs
pop
xchg
out
inc
iret
movsb
lea
xor
push
pop
sub
sbb
arpl
add
icebp
inc
xchg
aas
sbb
loop
adc
lds
outsl
loope,pn
jp
sub
mov
or
or
or
outsb
adc
popa
mov
and
aad
pop
jg
push
loope
in
xorl
into
inc
das
jbe
pop
scas
xchg
imul
sub
mov
inc
xor
lods
popa
insl
xor
push
icebp
notl
inc
movsb
mov
xor
dec
outsl
js
or
xchg
shl
lods
jp
mov
jge
dec
mov
inc
divb
bound
icebp
ret
xchg
pop
bnd
inc
fnstenv
nop
imul
inc
sbb
outsb
cmpsl
sub
or
cmp
imul
add
stos
pop
push
cmpsb
mov
inc
jne
cmp
fiadds
mov
sub
test
and
rol
icebp
dec
pop
push
mov
sub
inc
jp
addr16
leave
add
inc
sub
scas
test
js
leave
gs
sbb
nop
mov
jl
inc
cmpsl
lea
push
inc
negb
xchg
pusha
rcll
sbb
lret
mov
adc
jg
loope
rcll
in
cmp
cwtl
jns
mov
in
cmp
stos
push
jl
loope
cmpsl
arpl
mov
into
mov
fisubrs
movsl
movl
pop
cmpsl
dec
loopne
or
mov
repnz
fists
sbb
mov
inc
pop
test
lea
cmp
int3
jge
ret
mov
data16
mov
jne
les
popa
xor
xor
ret
outsb
cmpsl
les
sti
cmp
aam
imul
ss
cmp
push
pop
push
mov
stos
and
lret
das
pushf
adc
out
shrb
sahf
in
mov
filds
sarl
ficoms
and
or
divl
cmp
xchg
mov
shrl
jnp
lock
nop
and
je
psllq
in
mov
enter
cmpsl
jecxz
push
dec
xchg
or
sbb
sub
push
cmp
inc
jno
inc
xlat
insb
and
jp
fwait
out
cld
cld
insl
leave
adc
cmpsb
ret
jle
sbb
outsb
rcrl
aam
aad
hlt
push
jle
jo
int3
xchg
lcall
incb
fs
inc
sarl
pop
sbb
adc
mov
cmp
ljmp
cmpsb
pop
ja
fsubrs
popf
mov
mov
jg
cmp
inc
dec
bound
sub
and
cmpsb
mov
daa
sbb
xor
cmp
pop
sarb
call
push
dec
push
fisubl
sub
push
xchg
ret
or
fimull
xor
sbbl
movsb
add
repnz
or
loop
jb
mov
sbb
frstor
jbe
mov
inc
leave
lock
fwait
pop
cmp
insl
ret
rcrl
mov
mov
shll
repnz
xchg
add
nop
mov
ret
imul
pop
lds
ss
testl
inc
dec
clc
mov
mov
sub
leave
data16
ss
enter
out
dec
in
or
mov
in
mov
and
sub
cmp
cmpsb
incl
int
cmp
bnd
cli
and
mov
out
test
int3
jns
mov
lahf
adc
mov
push
pop
or
pop
sbb
mov
lahf
push
int3
xchg
data16
pop
mov
jg
jo
jb
dec
mov
or
popf
std
std
xor
lret
xchg
stos
inc
popf
cmp
ljmp
addr16
cmpsl
scas
daa
cmpsb
mov
movl
repz
cmp
sbb
shll
push
nop
loope
int3
aam
addr16
ror
ret
fldpi
fcomp
popf
sbbl
or
inc
lcall
outsb
aad
push
xchg
mov
fs
pop
or
out
arpl
xchg
outsl
sahf
fisubl
xor
mov
cmpsb
or
xchg
aam
pop
mov
lods
es
push
pop
pop
jmp
xor
fbstp
mov
mov
frstor
jbe
adc
and
call
pushf
enter
mov
adc
push
and
sbbl
gs
into
or
and
sar
or
pop
ret
scas
jmp
pop
rorb
xchg
std
jbe
xchg
push
cmp
inc
pop
cmp
shll
mov
inc
dec
add
mov
lock
mov
pop
ljmp
xor
inc
jne
push
popa
adc
cli
xchg
xchg
ljmp
add
push
adc
cli
cmp
xor
fldl
addr16
jns
data16
jo
inc
in
add
stos
out
xor
les
cmp
add
gs
gs
lock
enter
cmpsl
push
loop
push
inc
add
jb
movsb
push
dec
dec
ja
lods
xlat
loope
leave
int3
jle
mov
mov
xchg
cmp
inc
cmpsb
in
mov
aam
stos
or
mov
jp
cli
add
mov
jl
add
in
push
sub
pop
cmpsl
mov
jb
dec
sbb
int3
add
insb
inc
fstpl
in
arpl
sbb
push
sarb
daa
dec
lock
push
outsl
mov
or
or
lock
bound
and
std
call
out
jmp
adcb
in
jae
es
aam
jne
xlat
fwait
push
sbb
mov
mov
cmc
jb
rclb
push
cld
and
dec
pop
andl
shl
addr16
jne
dec
decb
mov
sti
stc
inc
scas
inc
fnstcw
adc
enter
jae
dec
cli
into
repnz
push
add
scas
movsb
stc
lret
loopne
sub
movsb
stos
push
sub
pop
add
mov
jno
arpl
mov
sbb
dec
xlat
dec
neg
lea
fdivrl
mov
inc
mov
inc
inc
sub
fidivrs
cmpsl
sbb
and
or
out
mov
lahf
leave
lds
jo
cltd
xchg
pusha
ret
into
push
add
cli
jmp
inc
pop
lock
into
dec
mov
lret
xor
dec
dec
jle
aad
test
stc
sub
inc
cmp
loope
jae
movsb
sbb
ja
stos
addr16
cmp
aas
addr16
mov
mov
jae
mov
faddl
cmp
jnp
and
pop
sub
push
push
arpl
roll
mov
ret
adc
call
iret
std
xchg
adcb
es
gs
cmp
adc
inc
dec
int3
cmp
jb
mov
mov
add
inc
pop
lcall
and
lcall
xor
and
scas
into
xchg
push
test
push
sarl
rolb
mov
out
cmp
push
push
sbbb
sub
add
leave
aas
push
insb
movsb
idivb
cmp
repnz
fstps
popa
sbb
push
sub
jmp
mov
icebp
std
gs
into
lcall
and
in
cld
mov
sub
pop
cmpsl
push
aam
cwtl
xchg
inc
cli
adc
push
fdiv
mov
mov
mov
stos
notl
mov
pop
dec
mov
cmp
daa
lods
xor
mov
add
xor
rorb
shl
push
test
inc
out
sbb
pop
lret
out
popf
mov
push
icebp
cmp
daa
xor
in
xor
sub
sbb
nop
sbb
sbb
mov
divl
ret
jge
mov
inc
cmp
mov
int3
pop
sarb
push
lahf
dec
cltd
or
sbb
mov
fcompl
into
xor
into
call
nop
add
fcmove
cmp
jns
lods
push
xchg
or
pop
inc
mov
xor
dec
call
int
lds
pop
ficompl
insl
in
out
popl
outsb
roll
fnstsw
jmp
arpl
xor
xchg
stc
push
mov
ret
xor
jmp
adc
xor
mov
out
addr16
pop
mov
daa
adc
aaa
scas
and
mov
adcl
mov
jo
or
cli
lcall
out
add
aad
out
dec
das
rolb
cwtd
leave
sub
ds
inc
push
push
leave
mov
cli
dec
push
jne
fwait
jp
scas
mov
inc
mov
jle
xor
jnp
into
xor
add
mov
cld
hlt
in
imul
xchg
add
shl
mov
aas
pusha
or
xchg
xchg
xor
push
imul
pop
pop
loope,pn
repnz
mov
fists
movsb
and
aas
icebp
fwait
mulb
or
adc
push
lods
pop
or
pop
lret
add
push
bound
cmp
imull
js
xlat
popa
jno
xor
adc
mov
jmp
rorl
lahf
stos
shr
push
gs
and
inc
fidivl
sbb
ljmp
and
test
insl
loope
or
and
stos
pop
inc
sarb
sub
mov
aas
dec
repnz
std
or
push
jp
lods
xchg
nop
pop
cltd
lods
iret
inc
mov
fcmovnu
mov
adc
pop
mov
mov
out
adc
cmpsl
test
jno
and
mov
add
ja
or
xorl
lock
adc
out
push
cmp
mov
in
outsb
mov
je
and
mov
push
lret
xor
mov
jae
aad
mov
inc
imul
popa
outsl
icebp
xor
inc
add
mov
fdivs
leave
aaa
lods
push
jbe
jecxz
insb
hlt
and
test
cli
inc
inc
and
mov
jno
aas
scas
pop
addl
out
mov
ret
std
lock
xchg
and
std
lret
out
sahf
inc
mov
xchg
jp
lret
inc
hlt
inc
pushf
mov
mov
push
add
in
push
dec
sub
sub
pop
out
mov
les
or
xchg
dec
bound
mov
cmp
insl
ljmp
insb
sub
dec
into
cmp
add
aad
arpl
add
inc
cmp
xchg
pop
pop
mov
adc
scas
setns
in
xchg
decb
jb
push
ja
sub
and
and
adc
gs
and
pop
pop
push
movswl
pop
lea
jns
add
cmp
pushf
xor
sbb
mov
out
add
mov
daa
stc
ljmp
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
jmp
mov
je
fs
stc
cmp
popa
iret
adcl
mov
jnp
cwtl
jnp
ds
push
push
imul
mov
xchg
arpl
aad
stos
es
push
data16
pop
cmp
inc
ret
mov
and
mov
jb
outsl
lret
sarb
pusha
xchg
cs
mov
push
fistl
leave
pop
mov
add
pop
jmp
push
inc
loope
push
mov
jns
shlb
adc
in
jmp
or
pop
sbb
xor
and
fcoms
mov
imul
adc
sub
xchg
mov
es
xor
popf
cld
divl
mov
pusha
xchg
lds
jecxz
imul
loopne
sub
std
xchg
imul
popf
ret
mov
inc
fwait
cmp
cmp
jl
mov
sbb
jecxz
mov
cmp
and
inc
ret
dec
shl
xchg
pop
stc
mov
fiadds
pop
rorb
pop
jge
mov
sbb
aaa
xlat
mov
push
sahf
pop
or
iret
and
and
jmp
int3
cmc
jl
mov
scas
adc
stos
mov
dec
inc
jmp
in
mov
aaa
ffreep
fcmovne
xor
int
imul
aam
shrb
mov
xorb
inc
xchg
lret
mov
popa
in
inc
or
sti
jg
sub
adc
xor
adc
mov
and
negb
mov
std
mov
jnp
pop
lahf
call
aaa
fnstsw
test
outsl
sahf
cmp
ds
imul
sbb
or
lods
loop
lods
xor
inc
sbbb
push
testl
jle
pop
fwait
mov
add
aad
jmp
lods
test
repz
push
fwait
dec
leave
stos
xchg
rcrl
sbb
scas
xchg
sbb
popa
imul
dec
mov
scas
fcmove
outsb
or
insl
data16
cmpsb
mov
mov
sub
and
jns
adc
jl
push
outsl
orl
outsb
ja
dec
in
je
push
je
mov
adc
xchg
or
pop
mov
sti
sub
sbb
xlat
in
inc
xchg
jle
inc
adc
mov
push
mov
js
pop
xlat
sarb
shlb
ret
pop
popa
inc
jne
jmp
rcr
shrl
pop
cmp
xor
bound
and
mov
mov
lret
mov
adc
sub
jmp
sahf
js
sbb
data16
sti
xor
jl
stc
cmpsl
cmp
cmp
movsl
jmp
cmp
jge
inc
xchg
add
jmp
mov
les
jo
dec
xchg
outsb
cld
dec
dec
xor
jnp
fdivs
sbb
fldcw
xchg
dec
dec
lea
lcall
data16
fistpl
fadd
lea
out
in
mov
imulb
daa
add
jle
lock
mov
xchg
inc
testb
cmp
lock
mov
arpl
imul
loope
lds
mov
and
daa
push
out
pop
cmp
js
xchg
mov
mov
cmpsl
mov
int3
mov
inc
xor
jge
das
ljmp
out
sbb
mov
push
dec
testb
outsl
mov
pop
sbbb
inc
loope
fistps
or
jge
xor
std
jg
fidivrl
or
adc
mov
movsb
pop
jae
cmpsl
loope
std
ja
hlt
inc
xor
jg
xchg
rcll
lret
mov
mov
scas
xchg
out
jg
inc
sub
sbb
js
cmp
out
jge
das
in
or
popf
insl
call
push
sbb
and
andb
dec
mov
mov
jp
mov
lock
mov
aaa
inc
cmp
adc
lret
jnp
dec
fldenv
loope
jns
jle
ljmp
cmp
mov
dec
jmp
jb
lds
pop
jne
cs
add
cmp
fcomip
mov
jl
dec
pop
movsl
popa
xor
outsb
or
mov
xchg
nop
in
push
loope
xchg
mov
mov
je
jae
xlat
jle
xchg
cs
cmc
out
cli
pop
sbb
cs
ss
imul
push
shl
add
ja
add
push
and
mov
cmp
aam
insl
insl
int
sub
xchg
jne
ret
loope
out
mov
xchg
cmp
and
pusha
mov
adc
stc
divb
mov
repz
mov
lahf
lret
call
out
jmp
and
xor
ficoml
icebp
xchg
outsb
push
pop
js
gs
jge
in
push
ljmp
sbb
pop
repnz
adc
or
dec
std
xchg
rcrl
flds
mov
lea
and
test
adc
xchg
ss
jmp
dec
jnp
xor
dec
rcll
bnd
stos
and
or
pop
xchg
cli
pop
cmp
nop
sub
ja
daa
mov
add
test
fwait
sub
in
xchg
shr
lret
ffree
test
fisttps
imul
mov
cmp
leave
push
fcompl
negl
pop
mov
sbb
lods
ljmp
iret
dec
add
lods
pop
lock
pushf
out
push
xchg
movsl
inc
into
push
or
int
frstor
pop
sub
dec
jle
sub
jecxz
loopne
mov
insb
inc
test
cmp
push
jl
popf
xor
dec
sbb
in
hlt
push
mov
fs
ljmp
inc
roll
pop
loope,pn
pop
sbb
les
int
push
push
dec
cld
inc
mov
ds
push
repz
leave
sub
mov
insb
repz
dec
pop
cmp
lcall
mov
lock
call
push
js
pushf
cwtl
xchg
cmp
stos
lods
adc
jae
movsl
js
xor
mov
ss
xor
push
or
adc
xor
mov
loop
jle
dec
mov
fisubs
cmp
lret
in
enter
out
cs
sub
pop
mov
xchg
push
test
div
popa
sub
ss
insb
push
aas
in
jge
add
sti
add
out
lea
jge
pusha
das
movsw
dec
lods
jbe
sub
sub
test
rorb
sub
add
repz
push
loopne
cli
scas
movsb
lods
inc
sub
sarb
xor
int
ja
jno
fldenv
push
push
sbb
sub
fildll
clc
lahf
pop
mov
pop
xchg
pushf
addr16
lret
jmp
int3
dec
jp
sbb
imul
or
ja
call
push
addr16
inc
imul
scas
lahf
nop
dec
pop
xor
ljmp
call
mov
xor
push
orb
inc
stos
mov
sarl
xchg
pushf
imul
pop
daa
cltd
sub
fsub
adc
test
push
aaa
nop
es
adc
cli
pushf
xchg
int3
out
pushf
lods
inc
lahf
mov
dec
push
mov
lods
aad
dec
adc
aad
scas
in
mov
mov
jne
jp
repnz
jg
in
js
dec
shll
push
add
in
push
jmp
sbb
or
jne
jp
add
or
dec
sarb
xor
jb
jb
in
aas
mov
nop
sub
inc
cmp
out
jo
push
in
out
jo
mov
imull
cmp
pop
pop
xchg
adc
fwait
inc
stos
dec
fwait
add
sbb
jmp
push
daa
cmp
pop
push
bound
push
mov
or
out
adc
test
adc
cmp
je
test
jnp
mov
call
sbb
push
stos
stc
in
sub
push
push
mov
dec
and
imul
mov
loope
fstpt
and
js
pop
inc
and
sbb
mov
in
fsts
and
mov
push
inc
lods
fs
lcall
add
cltd
bswap
scas
outsl
add
es
or
pop
xchg
xor
into
add
or
lcall
bound
push
xchg
flds
xchg
call
mov
add
cmp
cmpsb
call
mov
mov
cmpsl
inc
sub
sub
xorl
xor
xchg
jne
lods
lahf
int
test
pusha
adc
sub
in
xchg
xchg
mov
xchg
sti
test
pusha
movsb
jbe
dec
cmp
or
jno
adc
and
aaa
mov
movsb
xor
adc
out
sub
inc
sub
lcall
ret
sub
imul
shlb
mov
mov
mov
add
jl
ret
testl
test
or
imul
icebp
push
lret
xlat
adc
shlb
dec
jbe
imul
add
stc
push
and
clc
aas
fiaddl
sub
pop
neg
mov
enter
push
das
and
adc
cltd
sbb
pop
dec
inc
sahf
stc
pusha
cmp
movsl
and
iret
sub
inc
ja
push
icebp
sub
movsb
push
test
mov
mov
outsl
loope
outsl
push
out
lods
sbb
or
lret
cwtl
dec
push
push
clc
fwait
mov
and
lahf
mov
push
add
popf
and
push
jmp
cmpsl
hlt
mov
push
inc
lock
in
and
push
pop
movsb
movb
jns
test
sbb
loop
sbb
cmp
popf
cmpsl
inc
arpl
lret
subl
push
movsb
ljmp
and
jecxz
pusha
out
mov
fsubrl
fucomip
inc
arpl
fsub
rcl
ret
cltd
dec
in
sbb
scas
adcl
cld
cmc
push
aaa
aam
lret
xor
inc
popf
xchg
or
fwait
pop
std
in
cs
mov
cmp
rcrb
adcb
push
lcall
popf
or
rorb
aas
lds
mov
shl
or
xor
sbb
stos
jp
pusha
jbe
push
sbbl
shlb
xchg
shr
push
add
fldl
hlt
loopne
xor
jp
out
aaa
xor
loope
xchg
daa
test
insb
outsl
bound
xorb
into
jns
sub
cmp
movsl
jle
daa
aad
cmpps
xor
arpl
push
mov
mov
add
cmpsl
divl
push
cld
sbb
les
test
inc
cmp
gs
ljmp
and
or
or
into
call
jmp
in
movsl
inc
pop
outsb
inc
lock
imul
inc
xor
dec
in
inc
lods
add
mov
cld
js
fistpl
dec
mov
dec
mov
aam
jge
cmc
sbb
aas
rcl
cmp
mov
push
adc
mov
icebp
jecxz
inc
xor
or
jae
pop
mov
ss
inc
push
fstps
dec
ret
test
icebp
clc
subb
dec
cltd
sarl
and
inc
cltd
xchg
call
aam
dec
nop
gs
mov
popf
push
cwtl
popl
inc
sbb
mov
call
jmp
pop
test
ljmp
roll
xor
xor
mov
push
test
push
xor
mov
fwait
mov
push
test
mov
mov
ret
or
ret
sub
or
and
repz
dec
mov
pop
ror
push
pop
jmp
jmp
fs
inc
pop
xchg
pop
ret
push
xor
xchg
and
outsl
data16
xor
inc
out
arpl
adc
dec
cmp
cmp
fwait
add
and
es
pop
mov
jno
dec
sub
mov
fstps
xor
nop
xchg
inc
inc
fisttps
jb
xchg
in
fsubr
daa
cmp
cmp
add
and
popf
mov
jne
xor
jmp
dec
jae
arpl
lret
pop
ret
jno
clc
inc
jnp
cmp
pause
cmc
adc
lods
fimull
in
ret
je
iret
mov
pop
push
push
jl
lods
dec
out
mov
out
aad
data16
popa
scas
or
inc
mov
dec
inc
cmc
shl
loope
insl
pop
sbb
sbb
mov
sbb
lods
push
cmp
or
adc
and
sub
cmp
jo
pop
aaa
test
and
leave
orb
push
xchg
fisubl
xchg
scas
add
repnz
mov
push
xlat
inc
jmp
jbe
shll
clc
cld
pop
mov
push
and
lods
ja
ss
mov
ret
sbb
jge
sub
in
add
out
add
mov
mov
test
jb
xlat
xchg
xor
aad
in
iret
inc
lret
inc
ja
inc
push
cmp
loop
cli
popa
sbb
test
scas
sahf
ficompl
sub
jmp
mov
rolb
or
sarb
imul
lods
divl
and
xor
sbb
hlt
and
and
out
test
test
cmp
cmp
stos
cmpsb
popa
aas
stos
fnstenv
jnp
popf
mov
stc
add
mov
push
orb
aaa
insl
sub
testb
test
push
loopne
in
addr16
jg
or
xor
es
subl
les
pop
push
push
insb
mov
and
push
jnp
pop
jno
mov
dec
dec
sub
into
hlt
cmc
jbe
sub
mov
sti
or
pushf
out
hlt
in
dec
cmp
aas
data16
ja
mov
pop
loope
aad
iret
lret
and
call
clc
mov
or
xorb
mov
cmp
das
or
and
cmp
repnz
test
ret
jae
mov
out
adc
mov
and
repz
xchg
jae
dec
or
lock
aad
mov
dec
scas
daa
es
fcmovne
loope
jl
test
shlb
pop
inc
cmp
jb
les
adc
sub
loope
dec
mov
test
xor
repnz
inc
inc
sub
jnp
test
xor
test
jmp
xchg
jmp
mov
test
out
sbb
cmp
test
shlb
insl
mov
pop
divb
jns
js
jle
sbb
or
mov
cmp
xchg
cmp
cmc
jg
fnstcw
das
aad
add
cmp
ljmp
gs
int
push
aam
cmpsb
inc
fdivs
inc
push
inc
inc
dec
xor
mov
dec
scas
cld
adc
inc
orl
pop
iret
inc
add
outsb
mov
jg
xchg
shrb
inc
je
mov
xchg
out
scas
int
pop
jecxz
into
push
icebp
or
adc
lcall
rcrb
ja
in
adc
mov
lock
loopne
les
imul
or
lret
inc
fdivr
mov
iret
rcrl
pop
pop
fnsetpm(287
jae
mov
ds
mov
add
out
sub
pusha
add
lods
push
cs
cmpsb
jne
cld
daa
mov
xchg
ret
shll
push
gs
stc
out
fnsave
push
inc
dec
jmp
call
cmp
pop
ficoml
dec
cmp
xor
leave
repnz
cld
dec
push
imul
inc
leave
xchg
mov
and
adc
cmp
mov
rcl
mov
add
add
sarl
jecxz
or
test
dec
in
mov
mov
call
push
in
int3
ds
sahf
jmp
pop
xchg
push
mov
insl
hlt
mov
test
std
inc
jg
push
loop
enter
pop
mov
test
pop
dec
insl
dec
mov
ljmp
mov
jmp
mulb
movsb
enter
repnz
sti
lret
negl
shll
lahf
xor
cs
sbb
bound
mov
jnp
std
push
nop
cbtw
shlb
into
and
push
push
pop
dec
sub
ret
test
xchg
adc
movb
int3
push
push
push
add
movsb
loope
std
fcoml
add
jmp
mov
outsl
jne
rdpmc
sub
xchg
iret
pop
mov
adc
call
inc
repnz
lds
xor
inc
pop
sahf
mov
notl
ja
xchg
jns
xchg
xor
xchg
sbb
ljmp
xchg
stos
mov
push
jle
lea
ror
aaa
rorb
ret
incb
xor
pop
pop
aam
push
aam
fstl
mov
pop
mov
push
xor
repnz
push
mov
jecxz
aas
add
arpl
stos
sub
cmpsb
lea
xor
lret
xlat
ds
cmp
ficoml
sbb
aaa
test
shlb
sbb
repnz
adc
mov
jbe
rep
sub
sbb
fwait
outsl
xor
fidivl
cs
xor
lds
ss
cwtl
mov
pop
push
icebp
insb
xchg
in
pop
test
pusha
mov
test
mov
mov
int3
stos
adc
and
push
ret
push
cmp
movsl
lcall
bound
insb
js
gs
jno
mov
jns
lcall
or
in
add
lea
ret
mov
jge
xor
sbb
pop
loop
fwait
mov
xor
enter
test
test
pop
lods
mov
out
nop
xor
xlat
lcall
aam
and
xchg
dec
cli
cli
loopne
jp
movsl
hlt
jecxz
rcrb
repz
shlb
sbb
sbb
pop
xor
lods
loopne
dec
shrl
or
fisubrl
testb
arpl
mov
xchg
cmpb
fimull
lods
sbb
mov
jno
in
and
or
out
loopne
jbe
icebp
lock
cmp
add
inc
pop
xor
aad
xor
add
fdivp
mov
cltd
inc
cmp
sbb
mov
push
lea
add
iret
xchg
cmp
inc
xchg
sarb
mov
std
mov
cwtl
insl
add
ret
push
or
sahf
pushl
arpl
mov
and
icebp
xor
add
es
or
dec
cmp
xlat
scas
jbe
dec
pop
mov
cmp
fwait
dec
cmpsl
inc
cmp
xchg
jecxz
cwtl
pop
pop
scas
call
ficoms
shrb
sbb
rolb
mov
jb
mov
xchg
mov
lods
int
insl
pushf
fcmovnbe
shlb
xchg
mov
dec
inc
cmp
xor
pushf
jns
fstps
push
xchg
jb
not
scas
push
xlat
dec
sbbl
xchg
fists
lret
jns
cmpsb
mov
cli
bound
lock
inc
in
leave
sbb
mulb
sub
dec
int3
rol
lret
lret
add
cli
jg
lods
mov
push
das
fwait
rcr
popa
insl
leave
cwtl
popa
inc
shrb
mov
stos
cmp
fistpll
daa
mov
and
pop
jg
std
jb
cmp
in
xchg
data16
jmp
outsl
add
jmp
fstl
bound
mov
stos
fwait
and
add
sbb
adc
popa
into
fists
in
mov
mov
popa
sbb
push
aas
or
cmp
fs
loope
push
clc
insl
outsb
and
scas
addr16
jecxz
add
xor
mov
lods
sarb
sub
pop
jmp
inc
adc
dec
and
outsl
xchg
mov
push
stos
mov
xor
jns
int3
outsb
stos
adc
dec
pop
mov
xchg
data16
pop
ret
aaa
xor
ljmp
ljmp
mov
mov
xchg
pop
pop
dec
dec
mov
and
inc
fstl
stos
sbb
cwtl
call
xchg
adc
hlt
pop
idivl
xorb
mov
or
add
cld
sub
sub
stos
xchg
mov
add
out
xchg
lret
out
sbb
rcrb
dec
push
sbb
orl
int
mov
mov
sbb
loope
xlat
and
inc
mov
js
pop
dec
popa
lcall
push
pop
sub
jge
sub
call
xor
cmp
lret
cmp
add
cmpsb
jmp
push
out
fwait
adc
or
mov
pushf
imul
mov
lret
inc
inc
in
push
cwtl
mov
push
jns
mov
in
arpl
jl
repz
mov
mov
fcoml
add
repnz
sbb
aad
adc
insl
outsl
pop
negl
sbb
dec
mov
ret
shll
sbb
enter
jge
xchg
aam
sbb
int
iret
push
out
out
sub
cmpsl
hlt
jo
inc
je
stos
jl
icebp
lods
insl
iret
xchg
out
sub
fisubl
leave
ja
ficoml
sub
mov
mov
push
inc
mov
sub
xor
insl
adc
in
movsl
or
fldl
add
dec
outsl
test
rclb
lret
adc
xchg
cmp
add
xchg
add
jmp
popf
xchg
adc
cmp
dec
jg
shrb
imul
jno
pop
dec
push
fld
int3
aaa
pop
inc
jae
pusha
xchg
mov
imul
pop
xchg
cmp
jp
inc
jecxz
cwtl
call
je
in
repz
xchg
inc
icebp
cld
sbb
dec
inc
push
pop
add
test
stos
xlat
ds
dec
xchg
notb
pop
int3
test
out
mov
sti
movsb
aaa
mov
jmp
outsl
cmc
imul
hlt
or
fs
fdiv
or
jge
ja
mov
leave
fwait
or
sbb
popa
test
xchg
stos
mov
or
xchg
pusha
je
shll
lcall
sub
and
in
in
insl
push
jle
jnp
ss
xchg
xor
push
fstps
xor
popa
lods
push
inc
mov
call
and
aaa
popf
lcall
jl
push
imul
lret
pop
mov
out
add
sbbl
arpl
jecxz
push
lock
mov
sub
pop
int3
popl
sarb
pop
xor
cld
push
das
outsl
pushf
aam
add
pop
or
adc
mov
inc
mov
lods
rolb
sbb
jmp
das
push
mov
xchg
mov
cmp
push
ljmp
mov
cld
push
repz
jmp
push
rcl
inc
jo
lock
inc
add
in
lods
jne
mov
mov
mov
or
push
roll
pushf
push
ret
ljmp
dec
jb
sbb
xorl
mov
push
ret
push
jp
pop
addr16
ror
sub
das
or
xchg
outsl
push
push
dec
mov
push
jle
push
cli
inc
lock
jg
mov
push
leave
mov
and
push
cmpsl
aad
mov
pop
movsb
xchg
pop
iret
loope
sbb
cmp
or
pushf
test
sub
outsb
repz
lds
sbb
mov
nop
jae
add
sarl
stos
ja
loopne
nop
ret
cmp
cmp
mov
repnz
mov
and
mov
out
mov
out
repz
leave
pop
scas
mov
inc
out
mov
cmpsb
pop
pop
jno
dec
insl
and
mov
add
in
pop
ror
imul
sub
sbb
call
test
inc
and
popa
mov
pop
sbb
dec
xchg
cld
sub
jp
adc
mov
in
cmp
aaa
movsb
fstl
jl
pushl
dec
xchg
xchg
mov
into
imul
xor
inc
sarb
inc
mov
mov
pop
lods
mov
or
sbb
jb
dec
lods
jecxz
pand
mov
aas
jl
sub
int3
shrl
xchg
shrl
inc
pop
andl
dec
cli
dec
cltd
lds
subb
pop
push
dec
mov
out
sti
rolb
ret
bound
imul
sahf
push
shll
push
aam
adc
mov
test
stos
movsl
stos
push
cmp
addl
leave
adc
pop
mov
xchg
shrl
pop
push
add
add
mov
sbb
adc
data16
jnp
mov
iret
and
mov
test
sub
xor
mov
jb
push
iret
push
dec
mov
mov
je
stos
sub
cld
dec
xor
sahf
imul
adc
sub
test
int
fcompl
cs
adc
push
and
or
push
mov
pop
cmp
out
push
inc
lods
inc
cwtl
adc
in
bound
mov
gs
xor
ljmp
lret
and
or
jne
repz
inc
cmp
push
push
lods
mov
std
insb
sbb
inc
xor
jae
sub
xchg
inc
fildl
fsubrl
mov
jne
addr16
or
pusha
jp
dec
adc
pop
test
cmp
dec
aad
mov
pop
mov
push
push
dec
arpl
movsb
xorl
aam
fstpl
rorb
cmp
dec
inc
mov
lret
xchg
jmp
sbb
and
fstps
inc
sub
sub
gs
or
shrl
sti
or
push
nop
nop
xor
xchg
dec
out
dec
or
sbb
std
inc
jno
dec
mov
les
or
jge
in
jp
loope
jne
stos
sub
js
inc
pusha
cmp
sub
add
adc
inc
insb
sub
sub
jle
pop
mulb
push
and
mov
jae
fistps
pop
sti
cmovb
xchg
outsl
pop
mov
mov
adc
lock
fisttps
lds
or
popa
in
or
add
cmc
sub
ja
push
sub
into
fldenv
adc
push
cmp
xchg
leave
xchg
jmp
shll
jg
shlb
inc
sbb
dec
cmovle
and
xchg
push
test
xor
aaa
jne
sar
xchg
sbb
cmpsl
jnp
aam
mov
loopne
pop
jns
adc
mov
insl
lret
or
mov
int
mov
dec
xlat
stc
cli
push
adc
jno
sahf
jmp
ja
andl
scas
or
pop
mov
push
sbb
flds
sbb
ficompl
movsb
idivb
mov
mov
push
cmp
pop
pop
jge
loopne
rcrl
lcall
and
popf
push
test
int3
jg
insl
jmp
inc
andl
mov
addr16
push
cld
xor
push
mov
mov
test
mov
in
dec
dec
jo
jns
arpl
rcl
jmp
push
vmread
cmp
dec
and
adc
js
cli
or
ds
jl
sbb
mov
cli
stos
mov
sbb
test
pop
insl
lret
mov
mov
leave
jo
mov
lods
hlt
pop
lea
pop
das
cld
mov
cltd
add
je
sub
sub
pop
xor
push
dec
rol
adcl
repz
mov
add
cmpl
loopne
sbb
jecxz
xor
mov
gs
lods
and
pop
in
test
and
mov
push
jno
jge
xor
jmp
jg
cmp
pop
push
cld
mov
push
sahf
or
xchg
jne
pop
ss
clc
sub
out
pushf
jge
push
xchg
sub
pusha
test
pop
inc
dec
stos
adcb
lret
cmp
pop
in
out
add
jns
lcall
xchg
fildl
lret
outsb
push
and
xor
adc
sbb
mov
mov
push
ds
xchg
sub
dec
lods
inc
xchg
push
dec
jl
jge
adc
lret
mov
xchg
rolb
push
add
mov
and
cmp
cmp
mov
push
shl
lds
pop
mov
pop
pop
mov
nop
popa
out
pop
sub
jp
std
push
jecxz
inc
std
out
int3
sarl
negb
std
scas
fists
push
sub
adc
negl
stos
dec
jp
in
icebp
push
fcom
popa
sub
lods
mov
in
outsl
lahf
ret
stos
lods
aaa
lea
int
jmp
dec
mov
fsts
adc
nop
mov
add
dec
mov
fdiv
mov
leave
inc
ds
bound
jecxz
xor
shll
daa
mov
fwait
xor
out
xlat
dec
sbb
ja
jp
jo
cmp
hlt
mov
adc
cmp
mov
fildl
pop
sbb
and
dec
push
lods
pop
shrb
mov
inc
ret
cmp
dec
jmp
inc
aas
mov
and
push
cmp
mov
dec
popa
scas
insl
mov
ret
jne
std
mov
or
cld
pop
cli
in
fsubrl
add
sbb
mov
cli
or
sub
repz
shrl
or
jge
add
xor
inc
xor
das
pop
jl
jecxz
mov
mov
push
iret
adc
mov
sbb
push
cld
mov
push
or
popf
icebp
out
aam
push
sub
cmp
daa
sbb
pusha
xchg
addr16
sbb
sbb
pusha
push
or
jno
jl
mov
or
int
jne
xchg
mov
inc
adc
mov
xor
mov
test
push
push
inc
aaa
out
pop
jg
jno
sbb
mov
adc
pushf
cmp
scas
fidivs
jmp
icebp
insb
mov
push
movsb
call
sub
stos
xchg
out
mov
insl
out
jecxz
leave
sbb
in
lds
pop
xor
sub
mov
cmp
pop
shrb
std
jmp
fldenv
pop
adc
cwtl
push
cmp
mov
push
les
mov
mov
test
lahf
xchg
mov
outsb
jg
mov
sub
mov
dec
cmp
pop
int
aam
inc
add
pusha
mov
mov
cwtl
mov
imul
jecxz
ss
add
lock
xor
inc
xchg
adc
pusha
in
lods
data16
xchg
xchg
dec
dec
push
mov
dec
add
push
mov
and
es
cmp
push
push
imul
push
fwait
or
cwtl
es
mov
and
dec
js
push
loop
mov
andl
pop
dec
daa
inc
or
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
mov
mov
movzbl
and
mov
mov
xorl
mov
adc
sub
decl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
push
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
xor
xorl
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
sub
push
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
adc
mov
subl
mov
adc
mov
mov
not
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
push
add
push
inc
mov
movl
adc
xor
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
mov
xor
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
movl
mov
mov
cmp
jne
cmp
jne
mov
mov
xor
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
mov
adc
mov
mov
mov
jmp
pop
aad
dec
xor
insb
hlt
xchg
das
mov
call
shlb
push
fidivrl
rcrb
loop
mov
pop
sub
imul
xor
sub
aaa
adc
jae
pop
int3
scas
decl
out
lret
lods
loope
shll
push
data16
pop
adc
test
stc
xchg
sahf
add
popf
shr
imul
clc
das
cmpb
stos
fildl
hlt
lret
std
into
push
scas
dec
imul
out
cmpsl
mov
mov
mov
push
ja
in
subl
pop
adc
xchg
stc
push
iret
loope
js
stos
dec
jp
push
mov
and
jbe
pop
add
cmp
sub
lret
adc
pushf
into
nop
lret
xchg
enter
imul
bound
xchg
fdivs
pop
xchg
mov
shl
jmp
mov
lret
jae
mov
nop
mov
in
xchg
sbb
cld
sub
mov
sub
mov
cmpsl
les
xchg
aad
lret
pushl
outsb
push
xor
fcmovnbe
rolb
in
sub
jno
sar
xor
xor
jecxz
hlt
push
adcl
jle
add
adc
pop
insl
pop
mov
lret
cmc
out
insb
inc
scas
xchg
iret
loope
pop
lds
mov
cltd
imul
xchg
sbb
fimull
int
aam
aam
and
push
aas
sub
sbb
mov
add
mov
outsl
cmp
pop
mov
xchg
fbld
test
fidivl
es
cld
lret
sub
push
jnp
rcr
arpl
mov
jg
cmp
lods
mov
pop
push
sub
ffree
dec
jle
push
push
outsl
mov
imul
test
aas
pop
stos
and
data16
daa
and
insb
scas
popf
imul
cmp
jne
test
rorb
mov
lret
jb
gs
orb
xor
ljmp
into
or
add
xor
vdivpd
stos
outsl
sahf
inc
add
notl
cmovno
push
sbb
push
insb
xor
adc
lcall
jg
out
pop
popa
aam
out
fsubl
pop
aaa
popa
sbb
xchg
fdivp
mov
popa
dec
test
push
ds
std
xor
mov
outsl
add
mov
in
out
sub
adc
xchg
mov
mov
push
inc
out
ss
insl
insb
push
push
fidivl
cmc
xchg
sub
or
adc
or
cmp
push
stos
cmp
ljmp
inc
xchg
adc
in
push
imul
in
cmc
lcall
push
fsubrl
adc
ficomps
mov
push
or
sbb
add
mov
shll
hlt
daa
pusha
cmpsl
mov
inc
xchg
fimull
sahf
fidivl
mov
jmp
rolb
inc
mov
sbb
xchg
dec
inc
les
add
fisubs
xor
scas
loopnew
mov
and
dec
ror
push
out
push
fwait
rclb
push
inc
pop
or
bound
nop/reserved
push
das
cs
das
add
ss
sbb
xor
or
lods
or
subb
cs
shl
xorb
sub
xor
jl
mov
inc
stos
js
dec
xchg
xor
sub
pop
hlt
repz
cmc
add
jne
sub
jle
ja
jecxz
test
xor
adc
std
cmp
insb
or
cmp
dec
sbbl
jle
negb
xchg
adc
lea
dec
clc
mov
pop
jge
fldenv
mov
push
jmp
cli
cmpb
mov
int
xor
test
call
fstpl
cmp
out
pop
inc
jecxz
stos
mov
test
je
or
ja
cmc
and
es
or
push
mov
popa
cmp
sbb
aad
shll
outsl
bnd
fnsetpm(287
sti
in
push
aaa
nopl
sti
xor
inc
loope
nop
adc
repnz
cwtl
mov
loopne
pop
push
cld
jmp
sahf
jne
push
sub
arpl
pop
or
mov
popf
pop
lods
jns
dec
push
stos
imul
imul
ds
or
lock
or
int
cld
mov
adc
and
cmc
sahf
inc
lahf
cmpsl
daa
inc
sub
or
add
pop
jge
imul
cmpsb
jb
aas
arpl
popf
andb
mov
add
lfs
adc
sub
iret
loope
outsb
mov
inc
add
sbb
add
incb
shlb
repz
fists
gs
fnstenv
dec
jbe
sub
arpl
xstore-rng
cmpsl
inc
in
pop
push
pop
pop
pop
xchg
push
iret
fs
sbb
sub
cmp
xor
push
jb
xchg
notl
shlb
scas
loopne
push
add
push
aad
icebp
push
test
loope
ss
movsb
and
push
lcall
ret
mov
cltd
stos
iret
call
push
rclb
mov
sbb
mov
movsl
sbb
rorl
dec
stc
inc
loop
and
lea
inc
imul
neg
je
insb
xchg
sahf
ja
push
je
out
jb
dec
ljmp
fistl
out
cltd
out
and
mov
add
sbb
aam
fs
and
sbb
int3
pusha
inc
popf
sarl
xchg
pop
stos
lret
and
mov
movsl
shrb
dec
mov
push
cwtl
imul
mov
mov
mov
rcll
roll
cmp
popa
xlat
jmp
adc
sti
repz
iret
inc
mov
jge
out
jnp
call
adcb
mov
jl
fistps
xchg
pop
and
ror
ds
jle
xor
lock
pop
sbb
test
xor
mov
stos
rolb
sub
lods
loope
mov
lea
or
iret
push
or
lds
stos
imul
movsl
in
xorb
ljmp
mov
mov
movsl
test
inc
fisubs
jo
loope
loopne
add
mov
jmp
adc
in
data16
stos
mov
sbb
stc
leave
jnp
idivb
mov
gs
dec
inc
subb
mov
lods
mov
sub
dec
add
jge
mov
daa
add
ds
lock
mov
das
dec
and
fimull
inc
ficoms
or
mov
adc
push
ret
pop
call
sub
dec
cmp
mov
scas
xchg
fdiv
jne
nop
dec
sub
or
xor
jne
dec
dec
jmp
and
and
jb
xchg
cmpsl
inc
movsb
loope,pt
pop
push
aas
aam
scas
mov
sub
dec
sub
js
fimuls
xchg
jo
ret
bound
cs
mov
stos
xchg
add
aam
out
leave
in
dec
out
mov
ja
psubsw
mov
jbe
loopne
push
pop
dec
and
and
test
movsb
test
dec
in
out
iret
pop
or
inc
sti
sub
dec
xor
jno
repnz
int3
mov
ret
sbb
inc
xorl
lds
sbb
aaa
xchg
stos
dec
push
js
mov
or
paddb
mov
fdivs
pop
push
rcrb
adc
pop
push
add
inc
int3
jmp
push
sub
imul
add
add
jp
inc
ja
mov
ret
je
orl
xlat
adc
pop
int
jle
mov
xchg
int
and
and
or
ds
push
bound
das
mov
mov
js
push
inc
mov
pop
and
pop
sbb
xor
mov
xor
or
cmpsl
ret
stos
fildll
mov
jbe
mov
mov
fcoml
jge
push
pusha
or
sub
loop
fldt
add
outsb
lcall
insl
add
sbb
adc
inc
imul
fdivrl
icebp
cmp
ror
pop
shl
pop
imul
add
or
sbb
rorl
mov
xlat
scas
xchg
test
or
xor
aad
xor
sbb
cmp
adc
inc
sub
leave
out
pop
cmc
mov
sbb
pop
xor
cmp
cmp
ret
arpl
rcrb
jns
cld
push
push
es
xchg
testb
pop
xchg
cs
pop
les
arpl
int
xchg
xor
lret
fldl2t
pop
xchg
pop
push
iret
cmp
mov
out
lea
or
fildll
dec
das
stc
fstps
jp
in
push
xor
dec
imull
mov
pop
jmp
push
jmp
and
fisubrl
mov
scas
in
sub
sbbl
cwtl
cmp
mov
sbb
push
sbb
loope
xchg
dec
cmp
jno
fldenv
xor
aaa
fld
jl
add
out
jae
mov
aad
jae
push
repnz
adc
lcall
in
clc
sti
imul
das
cmp
cmpsl
xor
xchg
cmp
fcompl
cmc
test
dec
and
lds
in
clc
daa
xchg
testl
xchg
adcb
sub
jle
jge
mov
outsb
mov
roll
gs
lds
aam
add
es
mov
cmp
mov
loop
out
xchg
lock
xchg
outsl
clc
xor
out
ja
scas
inc
movsl
adc
out
sub
je
lods
inc
or
shl
paddsb
ret
push
jae
rorl
pop
dec
push
and
jb
dec
fsubrl
test
jbe
std
cld
add
push
mov
jnp
or
movhps
lea
dec
call
adc
xor
jle
mov
adc
mov
mov
pop
scas
mov
ret
mov
test
inc
imul
adc
xor
pushf
pop
loope
popf
and
sbb
nop
inc
arpl
std
push
dec
cs
pop
repz
push
sti
pusha
cmpsl
jno
stc
fmul
cmpsb
cmp
insb
addr16
out
push
es
or
push
xchg
push
cmp
rorl
mov
xchg
xchg
mov
push
fwait
inc
mov
adc
lahf
pop
adc
or
aam
pop
jp
and
outsl
ja
stos
push
lea
lock
mov
jle
push
sub
mov
xor
xor
sahf
push
inc
sub
adc
mov
outsb
enter
imul
rclb
pop
push
in
adc
std
mov
mov
mov
cmp
mov
out
das
test
and
mov
ja
mov
js
scas
xchg
jbe
pop
sub
inc
or
mov
mov
push
je
rcrb
add
sarb
jmp
push
fs
push
xorl
into
sbb
out
and
loop
cmp
jb
mov
stos
aas
pop
cs
push
rorb
je
add
outsb
into
or
sub
mov
xor
daa
outsb
sbb
dec
push
lea
aaa
adc
outsb
cmpsb
dec
push
cwtl
sub
cltd
inc
xlat
mov
aas
add
divl
fs
or
inc
data16
in
dec
xor
movsb
xchg
mov
ss
pop
dec
sub
and
inc
sbb
cltd
jns
inc
cli
test
xchg
sbbl
call
aam
sbb
mov
lcall
popf
decl
lea
dec
das
push
divb
push
dec
xor
cmp
pop
pop
nop
dec
shlb
xchg
jbe
xor
fs
sub
dec
add
xchg
movsl
jle
cmp
test
jmp
push
push
outsb
push
pop
xlat
out
pop
leave
xchg
fstl
and
scas
enter
sbb
aad
outsb
xchg
add
stos
scas
mov
cmp
clc
popa
pop
sbbl
inc
pushf
pop
fisttpl
inc
and
jl
aad
mov
outsl
jl
fsts
dec
mov
xchg
fucom
jae
popl
popf
arpl
add
pop
jbe
mov
in
or
or
loopne
mov
sub
mov
cwtl
aad
jo
add
adc
mov
aad
jo
cltd
cltd
push
inc
lcall
shrb
sub
pop
shlb
je
mov
ja
jg
loope
scas
shll
pop
jp
add
adc
lods
fxtract
hlt
cmc
mov
dec
ret
mov
fs
inc
fistl
pop
jle
repz
arpl
test
xchg
push
adc
dec
and
test
lds
xchg
pop
test
cmp
add
roll
dec
jnp
add
outsb
xchg
dec
pop
inc
add
cwtl
lret
mov
xchg
xchg
loopne
adc
call
rol
incl
add
mov
aas
fwait
stc
inc
mov
adc
fmuls
or
insl
and
xor
add
outsb
in
xchg
sbb
stos
add
out
aad
jecxz
movsl
xchg
xchg
push
dec
decb
movl
mov
loopne
pushl
cmp
push
mov
das
mov
push
addr16
insl
xchg
scas
xchg
mov
das
fists
out
lret
inc
inc
pop
adc
dec
imul
rorb
int
jbe
cmp
aaa
xlat
mov
clc
pop
jne
sti
sub
push
ror
jbe
push
xor
or
dec
cmc
pop
xchg
lahf
addr16
xchg
adc
push
add
rcrl
out
ret
sbb
or
cltd
add
and
test
push
mov
in
out
pop
or
xorb
in
xchg
aad
adc
loopne
mulb
dec
jmp
push
pop
nop
push
out
jb
loope
movsl
in
push
gs
cmp
mov
rcrl
jno
loopne
fisubs
mov
cld
dec
xchg
sub
clc
lods
dec
iret
mov
in
dec
mov
inc
sbb
xorl
mov
and
data16
call
stos
popf
adc
jb
xor
data16
decb
adc
gs
jecxz
and
dec
test
test
xor
mov
or
out
fwait
aam
xchg
aad
push
mov
sub
outsl
or
dec
data16
sti
ljmp
jmp
xchg
es
add
xchg
push
rcr
mov
jbe
test
xchg
stos
lock
rcl
xor
sbb
xor
out
and
leave
icebp
push
mov
mov
push
jae
mov
popf
addb
mov
cmp
in
pusha
add
leave
xchg
fwait
add
push
in
xchg
push
dec
or
xor
jo
mov
jl
inc
mov
sbb
lea
ja
or
or
ljmp
pusha
sub
mov
jb
dec
sbb
jno
lret
js
xchg
aaa
cmpsb
sbb
or
stc
negl
xor
inc
mov
adc
mov
int
fucomip
dec
push
push
int
sub
xor
cmp
mov
fbstp
push
mov
push
aaa
outsb
mov
leave
loop
loop
jg
lea
clc
faddl
jo
xlat
cwtl
mov
imul
aam
fwait
mov
jns
fstp
pop
xchg
mov
int
dec
fsubrl
movsl
xlat
stc
test
divl
ss
scas
es
jo
lret
fistpl
xchg
fdivrs
vpacksswb
fbld
aad
cmpsb
out
int
xchg
push
cmp
insb
inc
orl
pop
push
inc
es
imul
orl
xchg
out
inc
push
xchg
imul
adcl
ss
dec
mov
or
sub
xor
mov
addr16
imul
movsb
jno
dec
inc
shll
shlb
xchg
xor
mov
pusha
loopne
insl
add
jb
daa
movsl
in
lock
xchg
cwtl
test
inc
cmp
in
xor
add
sahf
dec
mov
sbb
test
and
push
mov
push
dec
stc
mov
or
xchg
ret
dec
mov
fs
xchg
rorl
xchg
fdivrs
inc
cwtl
jmp
lret
pop
fnstenv
push
popf
add
mov
test
call
sub
testb
sbb
int3
addr16
sbbb
jg
mov
mov
sbb
sub
mov
mov
rol
add
dec
cli
dec
loope
adc
scas
data16
inc
lret
loope
vpaddsb
cld
sti
fcmovu
jmp
adc
jmp
rcl
xchg
adc
dec
rcrl
ret
je
jae
mov
loope
xor
cmp
push
adc
lock
mov
jae
notl
mov
aas
ja
lret
rorb
push
stos
add
xchg
lahf
imulb
leave
clc
fisttpl
mov
in
cli
popf
dec
insb
or
gs
dec
mov
arpl
lcall
xor
stos
sbb
push
or
out
out
lret
push
outsb
leave
imul
fs
int3
lea
cmpsb
test
mov
out
imul
into
xchg
arpl
pop
inc
ja
cs
jle
push
lea
lods
subl
in
aam
jecxz
inc
out
movhlps
xchg
in
xor
xlat
ss
mov
shll
pop
pushf
test
daa
mov
pop
test
dec
fmuls
aad
dec
iret
out
jae
cmpl
rclb
movsl
shll
call
subb
imul
push
lcall
cmp
mov
mov
mov
in
in
lahf
or
sbb
mov
lret
enter
rorb
jmp
sbb
shrb
insb
fldenv
fs
xor
stc
jo
adc
sbb
or
push
mov
jmp
outsl
mov
inc
or
lds
adcb
dec
pop
push
inc
xor
sub
pop
stos
les
mov
inc
das
inc
push
cwtl
stc
mov
push
jns
movsl
fsubrl
lods
inc
adc
push
pushf
in
mov
idivl
add
or
lea
out
jns
cmc
sbb
imul
add
fisubrl
mov
sbb
lock
mov
sbb
lods
pop
xlat
jnp
repz
stos
ss
loop
stc
xlat
adc
push
loop
mov
loop
xchg
or
pop
frstor
into
outsl
pop
xchg
xor
mov
sbb
add
add
fwait
or
add
adc
sub
dec
cmp
outsl
in
xor
push
adcb
sbb
rcrl
leave
jo
or
fs
add
scas
iret
sbb
popa
rcll
xchg
mov
sbb
je
inc
adc
cmp
push
test
and
ds
enter
std
fcoms
mov
lcall
loop
gs
sub
sti
add
mov
dec
push
jmp
push
adc
push
inc
fstpl
mulps
aas
xchg
int
out
dec
cmp
sbb
sbb
xchg
add
cmp
fs
outsl
ret
bound
push
dec
jecxz
dec
push
popf
repz
inc
loopne
ret
or
jns
push
pop
imul
xor
int3
adc
fisubrl
pusha
mov
in
sub
jmp
adc
mov
push
cwtl
add
inc
lds
jecxz
pushf
scas
push
ja
cmp
pop
inc
in
add
repz
cmpsl
or
sbb
mov
adc
and
bound
cmp
and
mov
cmp
push
iret
xchg
cmp
faddl
arpl
xchg
mov
push
lods
std
scas
ds
shlb
push
adc
xorl
sub
adc
xchg
stos
sub
add
sarb
sbb
addb
ret
leave
jb
add
inc
jl
and
sti
push
mov
les
ret
and
mov
xchg
mov
dec
inc
loopne
pushf
cmp
je
dec
mov
iret
dec
fisubl
test
in
shrl
jne
adc
std
insl
xchg
ret
leave
and
xchg
sub
sbb
cmp
data16
push
in
call
std
pop
cltd
inc
sbb
jl
ja
push
push
pop
rcrb
xchg
popa
cwtl
sub
mov
sahf
mov
xchg
lret
adc
add
in
xor
jmp
loop
mov
imul
add
ljmpw
mov
adc
out
mov
and
clc
jg
insb
pop
sub
push
imul
jns
mov
push
add
aaa
xchg
les
in
pop
test
subl
fists
push
bound
in
fs
mov
fmull
and
movsl
test
stos
add
aas
jns
jns
idiv
pop
push
les
jp
add
rcrb
and
adc
mov
push
lret
daa
xlat
into
cmp
inc
push
add
sub
sti
push
mov
inc
loopne
jnp
inc
mov
pop
and
push
jge
inc
call
sub
gs
jecxz
dec
incb
mov
lcall
mov
imul
add
test
push
les
cmc
test
rorb
ja
sbb
dec
test
fistps
test
cmp
jg
add
cmp
mov
imul
dec
iret
push
repnz
sahf
or
or
into
mov
fwait
push
add
pop
movsl
leave
mov
sahf
cli
loop
adc
xchg
sbb
push
js
mov
xchg
push
pop
mov
add
xchg
loope
bound
into
mov
and
fcmovbe
xchg
cltd
aas
cltd
mov
test
inc
jns
outsl
xchg
mov
outsl
aaa
dec
xor
push
and
movsl
and
aam
and
mov
sub
aad
pop
dec
fadd
stos
imulb
dec
pop
push
mov
jecxz
or
jae
cmc
pop
mov
insl
popa
or
aad
fiaddl
outsb
int3
mov
cmpsb
rcrb
or
sbb
or
pop
inc
scas
mov
clc
fwait
pop
call
add
xchg
addb
lret
or
arpl
outsb
stc
sbb
xchg
push
lret
iret
cmpsl
dec
mov
notl
sub
pusha
jne
cmpsl
pop
or
jecxz
mov
mov
push
pop
pop
pop
int3
outsl
in
xor
add
pop
pushf
int3
test
push
insb
mov
and
xor
les
mov
inc
sub
xor
mov
dec
lret
mov
test
gs
sub
mov
and
push
add
adc
pop
rol
out
or
or
push
test
cmp
mov
lret
or
mov
scas
popa
xor
ret
daa
dec
pop
mov
sub
fimuls
mov
icebp
mov
lock
jnp
jp
pop
popa
mov
or
pusha
packsswb
inc
and
push
aad
popa
mov
pop
loope
mov
jns
jp
push
ja
cs
pop
mov
lcall
fadd
dec
addr16
rorl
pop
mov
idivl
lock
neg
lcall
jle
sbb
negl
pop
sub
repnz
arpl
jge
sahf
jae
push
data16
pop
cmpsb
aas
jmp
lcall
insb
vmwrite
jo
cmp
xchg
xor
or
cmp
and
jns
push
movsb
sbb
dec
inc
sub
call
push
pop
dec
mov
popf
sbb
popf
xchg
rclb
pop
aam
iret
cmp
cwtl
adc
pop
aaa
mov
sub
mov
jb
inc
in
arpl
jbe
movl
inc
ja
jge
adc
in
shrb
sti
cmpsl
sbb
cmp
mov
dec
add
fcmove
sbb
cmpsb
sahf
insb
or
dec
jmp
xchg
jnp
mov
in
xor
sbb
scas
push
mov
jle
adc
push
pop
cmc
das
outsl
adc
shrb
sbb
addb
call
out
cmpsb
jae
rorb
cmp
xorl
jb
pushf
icebp
sub
jno
sub
jge
arpl
lcall
negb
sub
out
push
push
xlat
fmuls
in
cmp
lods
cli
inc
add
sub
cmp
test
push
sahf
sub
lret
mov
inc
mov
mov
movb
jb
pop
add
add
sarl
add
jns
popl
ds
es
jne
push
push
mov
movsl
jne
push
cltd
gs
out
xchg
int
fsubl
xchg
stos
int
pop
xchg
aam
add
cmovs
xchg
fistpl
cs
hlt
clc
call
pop
sbb
cwtl
pushl
mov
inc
add
clc
shrb
or
gs
sbb
pop
jp
dec
sbb
push
std
adc
fnstenv
out
into
or
adc
je
aad
xchg
xor
shr
sub
xchg
mulb
scas
dec
or
iret
add
lods
ret
and
pop
xchg
mov
in
sub
cmp
push
sahf
mov
lcall
dec
xchg
push
dec
stos
xor
xor
push
mov
and
fbstp
cmc
sub
rcll
sub
imul
push
loope
lods
fucom
inc
xchg
sahf
add
icebp
rclb
xchg
lret
xorl
mov
xchg
cmp
test
xor
lock
mov
fnstsw
out
pop
movsb
mov
jne
or
jne
mov
repz
inc
in
push
xlat
pop
pop
lock
xchg
sub
pop
cli
jbe
cwtl
das
rcl
push
rcrl
mov
push
psrlw
sarl
adc
fadds
pop
mov
dec
push
pop
in
and
lds
mov
in
adc
mov
outsl
ficomps
dec
inc
jmp
xor
push
pop
scas
shl
or
mov
xchg
in
daa
das
lcall
xchg
mov
ljmp
ficomps
inc
adc
fsubp
iret
sti
je
fstpl
hlt
and
pop
movb
xchg
leave
cmp
adc
arpl
ss
gs
stc
add
das
adc
iret
and
insb
lds
loop
mov
insl
add
stc
lahf
push
int3
sti
pop
jns
outsl
cltd
adc
sub
cmp
dec
xor
rclb
insb
les
std
loope
mov
cmp
idivl
pop
mov
fwait
scas
cli
inc
loop
add
cmpsb
fistpl
enter
imul
jl
mov
lds
test
ss
dec
xchg
sub
out
insl
nop
inc
sbb
fwait
and
sub
in
aas
int3
dec
cmp
cmp
push
jns
movl
popa
jne
jle
lret
inc
icebp
sti
repz
and
add
popa
ja
sti
push
or
es
xor
orl
mov
popa
jle
pop
mov
xchg
adc
push
je
andl
pop
push
repz
and
ret
dec
mov
cmpsl
cmpsl
cmp
fdivrs
inc
in
cmp
cli
ds
mov
mov
xchg
les
das
mov
shll
cmpb
fdivs
adc
cmpsb
adc
mov
sti
pop
dec
mull
push
arpl
mov
test
jb
pop
sub
in
push
xchg
aas
movl
jl
movzbl
lahf
sub
dec
mov
jne
pop
push
aas
mov
loope
mov
js
xor
xchg
punpcklwd
les
aaa
sarb
mov
popf
ja
cmpsb
cmp
mov
mov
push
mov
mov
lods
push
inc
sarb
fistpll
push
push
fs
xor
ret
sub
pusha
mov
fstpl
or
adc
loopne
icebp
es
sub
les
daa
leave
out
jo
pop
or
ja
ljmp
or
inc
mov
loope
lods
jno
push
xor
xor
lods
inc
xchg
dec
jg
or
ret
ret
xor
jbe
rorl
jae
mov
addr16
xor
add
hlt
add
scas
mov
popf
jae
push
xchg
orl
scas
jns
xchg
rorb
and
outsb
add
ret
imul
andb
stos
pop
sub
popa
mov
pop
and
out
pushf
into
div
and
shl
fsub
fdivs
dec
shr
xchg
fisttpll
lock
xchg
test
bound
xlat
jp
and
jg
xor
adc
roll
mov
popf
test
inc
jmp
sahf
lahf
std
leave
hlt
sbb
ret
pop
or
aad
addr16
shll
dec
dec
out
in
pushf
es
gs
ret
mov
jge
adc
or
xor
cli
cwtl
adc
jns
fmull
mov
and
mov
pop
stc
sub
push
add
mov
sub
mov
pop
sbbb
rclb
scas
add
jle
rcrl
cmpsl
ss
adc
fs
loope
inc
iret
inc
icebp
sub
push
mov
push
gs
sarb
cli
push
sub
in
psubusw
jmp
sbb
and
xlat
iret
notl
cli
mov
out
int
push
cmp
mov
pop
pusha
sbb
orb
and
bound
loope
pop
scas
mov
adc
into
mov
enter
clc
jo,pt
clc
nop
int
adc
push
repz
push
mov
xchg
jmp
out
add
nop
iret
ret
dec
mov
ret
mov
aas
lods
dec
inc
shll
pop
or
dec
adc
out
arpl
inc
shlb
dec
jae
push
out
into
lods
sbb
push
insb
lock
push
lods
outsb
andl
jp
shlb
push
add
adc
int
sbb
xor
test
mov
shll
rorb
mov
lds
test
daa
sbb
mov
lods
pop
pop
xchg
mov
mov
ret
clc
loopne
jno
mov
push
mov
frstor
cmp
in
aad
sub
push
xor
lods
pop
orb
movsl
cltd
cwtl
xchg
cmp
sahf
jbe
dec
push
jne
or
stos
jns
mov
dec
rorb
les
push
into
lods
inc
sub
pop
and
jb
call
andl
push
sbbl
pop
pop
fdivrl
jo
mov
lods
rorl
and
lea
ret
fistps
lahf
imul
sbb
adc
mov
mov
push
adc
movl
add
mov
subl
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
push
movl
and
mov
push
xor
mov
or
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
pushl
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
xor
mov
sub
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzbl
add
mov
orl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
mov
mov
sub
mov
xor
mov
and
orl
adc
mov
sub
mov
xor
or
mov
sub
imul
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
mov
xor
mov
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
call
test
je
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
sub
xor
mov
cmp
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
jmp
mov
into
gs
mov
jp
rcrb
or
rorl
fmul
test
pop
pop
jg
cmp
test
paddb
fdivrl
cwtl
aad
dec
fcompl
mov
push
mov
push
fs
mov
mov
mov
or
insb
dec
mov
push
int
jecxz
adc
adc
mov
sbb
movsb
xchg
mov
out
out
pop
cmpb
testl
pop
jp
movsl
shrb
xchg
out
push
sub
jl
mov
xor
out
stos
lods
xchg
popa
cmp
jno
sti
adc
add
lcall
mov
out
es
js
test
daa
mov
dec
addr16
fcmovnu
js
adc
je
or
mov
xchg
add
hlt
pop
int3
pop
aas
mov
or
inc
sub
and
nop
test
sbbb
pop
and
shlb
push
fwait
and
enter
adc
cmpsb
addr16
scas
mov
mov
out
or
adc
jp
nop
cmp
jno
dec
hlt
mov
lea
pop
ss
push
ret
mov
cmp
cltd
adc
xor
outsb
int3
repnz
add
and
shrl
add
sub
mov
mov
movsl
mov
xchg
insl
les
arpl
pushf
adc
xor
aam
in
loop
arpl
jns
hlt
jo
push
in
sbb
push
sti
aad
or
jno
push
mov
pusha
icebp
nop
es
vmovhps
outsl
enter
push
pop
mov
pop
adc
xchg
es
cmp
or
stc
inc
add
xlat
push
dec
ljmp
mov
in
mov
sub
sahf
les
mov
xlat
jnp
shll
xor
inc
sub
xchg
inc
aad
loopne
dec
cli
test
jmp
loop
cmp
insl
call
pop
ljmp
push
mov
dec
loopne
in
cld
adc
adc
add
lret
cmp
fsubrp
push
mov
push
lds
xor
les
dec
data16
int3
or
xchg
jg
lret
jg
ret
jge
insb
ds
aam
mov
or
bound
xchg
les
jecxz
pop
xchg
pop
cwtl
pop
inc
dec
push
insl
sbb
and
pop
subl
push
push
mov
and
enter
lock
jge
xor
test
jp
cmpsb
or
pcmpeqb
imul
cmpsl
and
inc
xchg
cmpsb
lcall
mov
daa
pop
arpl
pop
nop
cmpsb
clc
hlt
pop
dec
pushf
or
fisttpll
jecxz
dec
mov
lock
roll
lock
pop
pop
pandn
jle
aam
lret
ljmp
aad
and
xchg
daa
mov
shrb
sub
xchg
scas
cmp
adc
jecxz
nop
imul
orb
push
dec
sub
sbb
test
or
jae
cs
add
fstps
aam
movsl
test
ret
ds
jo
ss
push
dec
cmpsl
add
push
sub
push
cmp
xchg
mov
repz
or
push
clc
cmp
add
jg
sub
sub
mov
rcll
jl
rorl
lock
pusha
jge
inc
mov
pop
push
out
cltd
pop
xor
adc
lods
sub
je
das
dec
inc
ret
imul
dec
mov
int3
icebp
add
les
jge
xor
lcall
sbb
cs
jg
icebp
inc
push
enter
or
push
sbb
sbb
lcall
add
cs
xor
xor
cmpsl
mov
sbb
adc
sub
pop
xor
sbb
or
cmpsl
add
fistps
ficoms
jnp
push
push
fildl
dec
mov
in
in
sbb
addr16
xor
ret
fwait
mov
push
js
enter
pop
dec
xchg
cmp
punpcklwd
test
xchg
lods
mov
out
popf
ret
mov
setbe
and
xlat
fsts
push
mov
jge
vmptrst
push
icebp
movsb
test
lahf
xchg
and
call
xor
js
scas
inc
inc
aam
inc
ret
ror
dec
add
ret
pop
jo
pop
mov
ret
push
test
cld
lds
int3
movsb
xor
shl
jge
std
sub
enter
sub
or
push
test
cmpsb
jge
scas
imul
out
mov
ret
mov
mov
or
les
fnstenv
cmc
mov
daa
ss
fldcw
imul
sbbb
adc
cmp
sub
dec
dec
add
popf
and
ljmp
hlt
cmp
repz
sub
mov
dec
in
mulb
mov
and
or
or
scas
test
mov
jecxz
pop
shlb
pop
fwait
lea
push
lods
sbb
xor
dec
sbb
popa
cmp
outsl
inc
and
std
jg
mull
xchg
shll
xchg
xor
pushf
shr
jmp
sub
cmp
sar
jp
sub
jo
xor
push
sub
add
sbb
xlat
pop
mov
not
cwtl
in
dec
clc
daa
pop
xchg
fldl
dec
loopne
stc
in
and
negl
es
xchg
popf
mov
cmp
sbb
movhlps
sub
and
push
sahf
jg
ror
jb
jmp
lea
loopne
test
je
popf
pop
jmp
shll
ljmp
inc
into
test
inc
div
jne
pushf
dec
push
xorl
push
faddl
pop
mov
mov
xchg
push
rclb
lret
insb
mov
lcall
lods
jp
and
cwtl
inc
mov
mov
push
aaa
aam
in
jp
les
cwtl
sub
and
mov
mov
jae
mov
js
push
push
pop
inc
xor
aam
sub
mov
mulb
xchg
jno
gs
shrb
lahf
cmpsb
mov
dec
loop
and
push
leave
lds
and
or
pop
mov
cmp
sub
pop
out
jbe
pusha
pop
popa
push
mov
maskmovq
notl
mov
pusha
sbb
out
sbb
mov
pop
out
mov
or
test
lahf
ret
popf
adc
pop
pop
jnp
jbe
sbb
jae
add
ror
cltd
inc
jge
sub
push
fiadds
outsl
rcrl
or
dec
lcall
push
and
jnp
push
mov
ficoml
or
and
js
pushf
lcall
cmp
popa
outsb
movsb
lods
and
fs
enter
in
ret
call
or
cli
pop
outsb
lods
into
dec
rcrl
test
movsb
sub
scas
adc
dec
pop
orl
mov
das
mov
rcl
mov
pushf
daa
jg
cmp
inc
push
xchg
cmp
xchg
lea
stc
sahf
inc
mov
mov
push
xchg
mov
ja
cwtl
shll
pop
icebp
add
add
dec
sahf
js
mov
fs
pop
xlat
test
test
fldt
mov
das
sti
pop
sahf
jmp
sbb
and
jbe
inc
cmp
roll
out
clc
sub
mov
test
and
test
stos
cmpsb
aad
mov
xchg
subl
leave
lcall
dec
popf
mov
add
pop
jne
lret
lock
lret
push
push
sbb
out
je
cmp
fildl
mov
jne
xor
sti
dec
aaa
cmp
pop
dec
cmpl
in
pop
popa
and
out
int3
stc
pop
shll
aad
or
aam
sbb
fcoml
repnz
arpl
add
fnstcw
jnp
rclb
notl
pop
add
ss
idivl
push
and
dec
shll
aaa
pmaddwd
add
jo
add
mov
pop
cmp
and
dec
cmp
loope
push
and
out
les
mov
push
fsubs
hlt
push
popa
mov
jp
jg
cmpsl
sbb
addr16
jno
pop
adc
shr
out
add
fstps
js
push
shlb
cltd
mov
ja
push
push
pop
pop
aas
fwait
sbb
mov
sbbb
push
cmpsl
shrb
in
jg
mov
ljmp
jo
repnz
mov
scas
push
push
test
inc
addr16
add
fs
aaa
js
arpl
push
icebp
scas
xor
cmp
sub
xchg
idivl
pop
outsb
aad
iret
pushf
je
pop
in
cmp
push
loop
push
loopne
add
sbb
sti
add
pop
test
sbb
inc
rcr
shlb
sub
int
xchg
cld
imul
movsl
mov
push
test
jmp
push
in
arpl
mov
decb
outsl
ds
adc
mov
xchg
fildll
ds
lcall
mov
sub
push
test
stos
xor
loopne
or
data16
dec
or
push
stc
repz
push
out
xor
pop
insb
fildl
pop
scas
jb
out
push
ficompl
inc
mov
or
sub
cltd
fldt
inc
mov
shll
popw
movsb
or
icebp
push
addr16
mov
subl
arpl
test
xchg
inc
ja
std
and
scas
xchg
into
sub
sbb
add
cmp
mov
shlb
cmpsb
sub
pop
out
sbb
ja
fwait
jg
repz
and
inc
cmpsl
dec
push
or
cmp
jnp
cmpsl
jecxz
pusha
fldt
stos
orl
daa
jns
js
cld
out
roll
fndisi(8087
inc
pop
pop
jbe
rcl
mov
shl
xor
pop
cmp
pop
xchg
mov
sahf
sub
and
add
into
dec
push
lret
pop
jge
lods
cs
mov
sarb
sbb
fstps
sbb
xchg
dec
notl
in
jae
xor
gs
popf
loop
mov
lds
data16
mov
mov
sub
mov
aam
mov
enter
mov
lret
mov
hlt
inc
pop
test
lds
jge
and
dec
add
jns
pusha
test
lret
decl
loopew
loop
cmp
stc
adc
lahf
adc
xchg
arpl
shrb
cmp
popf
std
add
adc
inc
mov
ja
int3
loop
popa
lds
dec
aaa
xor
test
jg
mov
mov
sbb
mov
jnp
js
test
push
call
cwtl
lea
mov
rol
lock
push
ret
les
inc
aam
pop
cwtl
dec
dec
into
mov
dec
fsubs
jmp
push
sbbb
push
xchg
sbb
jns
jnp
sbb
adc
mov
fildl
fsubrs
cwtl
inc
aaa
sub
popf
ss
mov
jns
cmpb
imul
cmpl
sti
fdivrl
adc
sub
mov
nop
push
mov
repz
sub
or
and
mov
inc
shlb
mov
stc
leave
in
cwtl
sarb
xchg
mov
lcall
arpl
sarl
mov
in
and
clc
adc
pusha
mov
fcomps
push
dec
or
in
out
sub
adc
cmp
cs
and
mov
mov
lods
or
sbb
cltd
mov
jecxz
pop
and
cmc
in
jb
inc
cmpsl
mov
ror
xlat
jmp
clc
movsb
inc
cmpsl
leave
ret
xor
ljmp
fs
pop
xor
aad
cmp
pushf
mov
lock
adc
push
fildll
fcmove
or
or
jae
popf
rcr
cwtl
ss
pop
repnz
lcall
sbb
inc
or
add
aas
inc
fiadds
mov
loope
mov
push
repz
mov
push
pop
sahf
fldl
int
ret
sbb
mov
jns
bound
sbb
icebp
lret
pusha
cmp
and
fistl
dec
pop
call
adc
or
jbe
dec
xchg
mov
pop
mov
aad
cmp
xchg
mov
push
je
in
and
lods
mov
faddp
jnp
xchg
into
push
cmc
lea
pop
inc
jnp
xchg
fidivrl
add
pop
ret
fs
dec
xchg
sbb
popf
cltd
xchg
loopne
push
mov
cmp
je
pushf
clc
sbb
inc
xor
push
fsubs
cmp
dec
and
daa
fisubl
cmpsl
lss
movsl
mov
ds
add
es
in
push
or
jmp
push
push
inc
inc
mov
scas
cmp
and
jmp
pop
dec
add
pop
enter
cs
leave
or
inc
lcall
jecxz
add
outsb
mov
push
fistps
adc
fcoml
cmpsl
xchg
ds
cmc
loopne
lret
push
sti
and
ret
dec
insl
adc
fcmovne
sub
cmc
push
sbb
add
xor
repnz
inc
add
push
inc
or
adc
sarb
aas
bound
xor
mull
cmpsb
push
fwait
sub
xlat
jno
and
push
stos
std
pop
sub
pop
scas
fisubrl
rcll
and
add
inc
adc
lret
das
loope
push
mov
mov
aas
and
sub
es
stc
lods
mov
lahf
or
out
out
push
popa
lock
jno
add
les
mov
mov
dec
ret
xor
xchg
jo
insb
dec
inc
mov
in
cmp
ret
mov
xor
push
mov
xor
lret
mov
ja
cmp
xlat
test
in
pop
ret
push
into
imul
mov
jo
push
bswap
mov
mov
cmpsl
mov
push
shll
call
repz
pop
pop
in
test
xorb
mov
jnp
xchg
arpl
cltd
jmp
xor
test
mov
das
pop
jp
fcomps
or
xchg
inc
adc
imul
into
pop
fildll
push
loope
loope
sbb
enter
pop
push
int
je
cmp
repz
decb
scas
adcb
lcall
fldcw
dec
int
inc
pop
xor
in
call
jno
sub
in
cmc
dec
mov
icebp
inc
in
mov
aaa
fwait
fs
push
mov
cmpsl
mov
pop
pop
pushf
js
rorl
or
push
jo
loop
adc
rcrb
xor
pop
dec
add
mov
adc
jnp
lahf
add
adc
mov
lcall
push
xchg
sbbl
arpl
lahf
rcr
repz
fwait
xor
insl
subl
stos
or
int
and
sahf
hlt
cmp
js
loop
out
inc
push
loop
repz
xchg
adc
inc
mov
pop
test
lods
fistpl
je,pt
jg
cmp
adc
test
inc
push
dec
jg
push
add
in
scas
sbb
addr16
mov
sbb
aaa
dec
add
mov
pushf
lahf
add
aam
loope
hlt
int3
popf
rorl
std
inc
loopne
out
adc
ret
fwait
imul
lahf
dec
push
dec
xor
clc
xor
or
push
cmp
or
jo
test
cmp
mov
cld
jno
sub
sti
outsl
xor
add
fcoml
mov
pop
xchg
stc
and
push
fldcw
sub
rol
pop
mov
jnp
mov
addb
stos
cmp
ds
pop
out
ret
push
mov
adc
or
nop
lods
or
sub
push
fimuls
xchg
icebp
mov
lahf
push
mov
push
cmp
in
jno
clc
dec
bound
rorb
enter
testl
out
push
fwait
xchg
not
jge
es
sbb
jg
sbb
in
popl
ret
fisttpll
popa
loop
jmp
or
inc
repnz
sbb
js
mov
xchg
adc
lds
cltd
bound
rcll
mov
lods
ret
pop
mov
push
mov
push
cltd
pop
stos
sub
sub
jg
and
stc
ficomps
push
adc
fiaddl
mov
add
andb
add
dec
inc
adc
or
outsl
lcall
and
fisubl
mov
push
push
gs
adc
mov
fs
xchg
sub
imul
or
fs
insb
int
call
jb
les
mov
push
push
fidivl
dec
int3
push
sbb
pop
mov
inc
stc
inc
aad
loop
inc
push
popa
push
mov
mov
xor
imul
cwtl
lcall
out
es
sbb
lahf
jbe
rcrb
inc
imul
jae
aad
jmp
xchg
incb
mov
lret
inc
insb
ds
sbbl
inc
push
inc
std
in
sub
xor
mov
add
jns
fwait
mov
sub
jns
cmp
sub
dec
nop
rcrl
jmp
pop
jno
pop
push
jp
nop
lahf
pop
sub
lods
pop
jns
xchg
jns
inc
pop
pop
call
add
repnz
adc
dec
mov
out
dec
mov
xorb
je
mov
fistps
and
es
mov
or
or
movsb
cmp
mov
addr16
leave
cmp
pop
push
and
pop
mov
lahf
xchg
inc
stc
xchg
inc
xor
sbb
mov
fistl
sti
insl
lock
pop
xor
test
xor
mov
adc
aas
ja
xchg
pop
insl
xor
in
pop
cltd
dec
cmp
adc
pop
cmp
cli
or
insl
rcl
es
and
mov
jmp
xor
dec
cmp
cld
repz
jbe
xor
xchg
sub
pop
pop
ljmp
xchg
fnstenv
fiadds
jbe
jp
jl
jl
jae
imulb
cmp
xchg
je
dec
out
rclb
mov
dec
add
xchg
xor
sub
adc
mov
loopne
sar
ja
call
js
movsb
xor
testb
and
jp
jl
lock
sub
aad
arpl
jne
push
test
mov
bnd
push
outsl
stos
mov
cmp
lcall
xor
and
movsl
std
mov
popf
or
pop
je
xchg
push
das
aas
adc
mov
lods
hlt
dec
mov
sti
cmpsb
shrb
call
sub
mov
cmpsl
out
jge
xchg
sbb
pusha
int3
mov
test
imul
or
fucomp
adc
iret
ret
add
jbe
fcoml
lock
int
xchg
pop
sti
mov
xchg
out
inc
rcrb
bound
sbb
xchg
roll
int3
bound
add
sbb
imul
xor
jge
mov
add
cmpsb
and
xor
push
xchg
mull
xchg
add
aaa
and
adc
push
add
adc
testl
fs
adc
sub
inc
addr16
adc
mov
mov
insb
int3
rcll
pop
inc
mov
lcall
aas
mov
pop
adc
fsubs
and
jl
aad
fimull
cwtl
xor
jnp
loopne
enter
in
outsl
iret
imul
sbb
pop
addr16
mov
dec
std
mov
fidivs
sbb
ret
xchg
lods
dec
push
outsl
int
push
dec
insl
mov
repz
jmp
cs
lds
mov
jg
divl
pushl
jns
scas
pop
mov
lods
inc
adc
shlb
or
xchg
push
xor
fsubl
lahf
adc
lret
xchg
pop
pop
loope
inc
or
mov
inc
cltd
push
in
into
and
idivl
fimuls
mov
orb
or
imul
imul
pop
mov
jle
fs
into
jbe
out
push
inc
add
and
cld
add
fsubrs
in
hlt
fimuls
fwait
jne
mull
lcall
les
add
inc
pushf
jae
outsb
fucomi
xchg
cmpl
repnz
sbb
lds
add
and
movsb
mov
mov
push
in
add
xchg
daa
outsb
outsl
inc
xchg
imul
sbb
jl
ficomps
jle
dec
xchg
sub
lret
cmp
fsubl
pop
rcr
adc
loop
sbb
in
int3
sub
lcall
xor
fldl
fwait
into
pop
sub
and
push
dec
pop
outsl
popf
cwtl
pop
scas
movsb
inc
xor
adc
adc
popf
insl
fcmovnb
lret
mov
sbb
mov
subl
and
into
or
xor
or
push
scas
xlat
mov
cltd
cmpl
addb
lock
and
aam
push
inc
outsl
mov
pop
cmc
stc
popf
dec
clc
daa
add
in
inc
inc
enter
rcll
aam
xchg
xlat
or
mov
xchg
push
movl
int
mov
pop
jg
sbb
push
push
incb
add
sub
pop
scas
jns
xchg
pop
bound
bound
push
push
rorb
push
out
dec
scas
xor
inc
inc
movsb
push
inc
xchg
or
pop
sub
mov
xor
xchg
cmp
aas
fcoml
mov
je
dec
test
pop
je
fstps
stos
jb
or
push
mov
and
scas
push
mov
sti
jbe
pushf
push
dec
pop
int3
repnz
jae
jb
push
in
mov
cmp
sub
push
loop
int3
dec
sbb
shl
mov
xchg
and
sbb
pop
imulb
adc
loop
xchg
pop
pop
xor
dec
xor
cmpsl
jbe
cmp
adcb
loop,pn
lcall
adc
ret
sbb
cs
jp
mov
inc
shll
pshufw
sub
dec
adc
mov
sub
add
test
sahf
cs
jg
arpl
cmp
fwait
xlat
ss
je
ljmp
xchg
je
or
add
das
je
adc
aaa
push
fcoms
xchg
jo
bound
aaa
push
push
nop
jp
out
ds
sbb
stos
dec
mov
lcall
int3
and
into
test
in
fstps
rorl
inc
ljmp
nop
xchg
jbe
push
outsl
daa
cmpsb
sbb
pop
mov
stos
rcrl
mov
cmp
xchg
fcomi
mov
add
test
mov
fildll
in
jbe
outsb
xor
pushf
stos
idiv
push
mov
xor
loope
sbb
daa
cmp
lret
andb
adc
in
cmp
mov
sbb
js
mov
pop
pop
push
push
adc
test
out
lea
rorl
loope
mul
add
leave
push
fidivs
dec
inc
xor
mov
js
mov
pop
test
fstpl
mov
lahf
jo
ss
cmp
arpl
or
or
adcl
push
loope
and
mov
ret
and
into
rcl
es
push
outsl
stos
shr
mul
fs
mov
mov
xchg
mov
ss
lcall
push
mov
shrb
lock
mov
mov
subl
loope
xchg
sbbl
ret
mov
mov
or
add
cmp
sbb
les
push
push
adcb
in
mov
repnz
mov
mov
test
int
xchg
enter
hlt
xchg
scas
fwait
cmp
cmc
ljmp
push
aaa
into
hlt
push
rcrb
adc
fld
dec
js
arpl
pop
mov
movsb
mov
aas
xor
jb
mov
out
jmp
pop
aam
add
out
pop
xchg
sahf
lret
in
xchg
jecxz
add
mov
mov
sahf
mov
sbb
xchg
jbe
movsb
iret
push
jmp
jl
cmp
mov
cmpsl
lea
push
decb
adc
fidivs
lret
jle
aam
mov
sahf
lock
cwtl
xchg
push
adcl
movsl
dec
popf
ds
push
ficomps
outsl
aas
dec
hlt
add
mov
cmpsl
mov
xchg
cmp
xchg
popf
inc
lcall
sub
incl
sbb
mov
or
loop
in
call
mov
inc
sub
popa
dec
xchg
sub
in
popf
inc
dec
mov
adc
adc
jbe
imul
shr
sbb
int3
jecxz
leave
dec
sub
es
cld
push
sbb
and
push
out
or
mov
fdivs
clc
out
test
sbb
or
xchg
xor
mov
gs
out
sbb
dec
add
dec
dec
mov
arpl
pop
inc
and
call
seto
rclb
mov
or
fidivl
inc
mov
popf
cmpsb
adc
outsl
mov
jne
mov
sahf
call
add
loope
xlat
add
mul
sbb
lea
ret
dec
jnp
add
sbb
arpl
lods
dec
enter
scas
incl
dec
movl
push
iret
push
push
push
and
ds
out
aam
hlt
dec
fadds
cmc
pop
mov
pushf
mov
push
sub
rdpmc
std
fldz
sub
push
repz
stos
jmp
mov
pushf
cs
jb
dec
mov
fdivs
add
xor
test
inc
lea
pop
inc
lds
dec
test
bound
insl
jmp
in
mov
push
pop
les
out
xchg
in
pop
sbb
xchg
jb
fidivs
out
jecxz
dec
cmp
mov
xchg
sbb
fdivr
adc
fistpll
addb
cltd
jb
shrb
cmpsb
inc
scas
mov
xor
rcrl
mov
ja
icebp
lret
les
mov
inc
jmp
and
mov
sub
fists
dec
or
fadds
pop
cli
mov
fucomp
imul
sbb
out
mov
jl
sbb
or
pop
push
and
or
fmuls
hlt
idiv
imul
imul
and
jo
mov
pop
jge
push
mov
lods
cltd
lods
push
cmp
shll
dec
xor
icebp
rolb
cmp
xor
aad
lods
and
mov
pusha
xchg
mov
sti
jmp
xor
or
sub
jae
add
or
jns
add
negl
push
mov
adc
xor
paddusw
fsubr
pop
xor
ret
loop
mov
je
pop
enter
mov
sub
les
dec
or
push
ret
cmp
lahf
pushl
insl
sbb
inc
lret
push
inc
jecxz
lret
mov
call
sar
fwait
sbb
rcrl
xchg
push
popf
cmp
cmp
dec
mov
mov
leave
into
in
cwtl
mov
push
cld
jns
xor
daa
btc
push
sub
mov
push
mov
jnp
imul
movsb
dec
inc
mov
cmp
sarb
cs
and
insb
sbb
jg
pop
cmp
sub
push
mov
pusha
mov
sbb
call
cwtl
test
mov
mov
pusha
test
mov
loopne
fimuls
mov
mov
rorb
movsb
cmp
sub
jg
mov
add
js
sbb
lret
and
mov
sbb
dec
pusha
dec
mov
pop
mov
mov
pop
stos
leave
mov
cmc
sub
or
shlb
cmp
inc
jle
mov
lret
mov
sbb
cld
inc
mov
xchg
scas
push
lods
rcrb
xchg
jae
xchg
fsin
mov
leave
or
mov
dec
pop
daa
fidivrs
shlb
outsl
xlat
fstpt
cwtl
mov
push
adc
and
hlt
je
pop
inc
cltd
inc
les
lret
adc
inc
orl
lods
dec
mov
psadbw
push
and
test
dec
daa
jns
or
cmp
jge
mov
jnp
aam
mov
ss
test
popa
js
and
inc
or
out
cmp
pusha
lret
clc
in
or
mov
mov
aas
pop
add
fildll
xchg
xor
fisubs
mov
test
loop
mov
dec
insl
cmpb
xchg
mov
inc
enter
stos
lock
loop
mov
adc
ret
jnp
mov
bound
or
jl
jno
test
je
push
dec
xchg
or
cmp
fucomp
das
sbb
and
pop
cltd
sub
push
hlt
test
pop
dec
push
fmuls
dec
sbb
xor
outsl
add
push
dec
aas
dec
dec
loopne
popa
mov
pop
lea
fstpl
pop
shr
pop
ja
nop
push
imul
insb
test
lods
imul
jnp
cwtl
dec
adc
jle
loop
test
loop
stos
sub
test
loopne
jno
xorb
ret
adc
xor
aaa
or
pop
aas
loopne
push
fs
or
popa
sbb
xor
dec
test
testb
inc
enter
mov
xchg
dec
cmp
sbb
xchg
cltd
pusha
xor
dec
mov
test
sbb
in
adc
and
out
stos
aam
icebp
shlb
in
jns
in
in
test
mov
popf
ljmp
mov
pop
loop
in
fiadds
cmp
mov
aad
mov
insb
mov
int3
mov
push
nop
sbb
jnp
mov
adc
ljmp
pop
xor
xor
xor
icebp
sub
adc
lods
xchg
sub
fs
imull
stos
popa
sarl
jno
fdivrl
outsb
pop
push
cmp
push
push
cltd
mov
inc
lret
nop
iret
cmc
cmp
xor
add
xchg
iret
in
insl
jb
pop
outsb
xchg
xor
outsb
loope
mov
mov
pop
sti
aad
sarl
outsl
cmp
adc
es
shll
sbb
jbe
stos
and
push
js
jecxz
jmp
lret
imul
lret
and
sbb
mov
test
inc
pop
cld
adc
xor
xor
pop
jne
popa
pop
mov
andl
imul
scas
jmp
or
cmp
fucom
enter
cld
mov
movl
movl
jmp
sahf
aas
mov
je
movsb
dec
sbb
mov
jnp
cwtl
jnp
pop
in
sbb
int
inc
or
push
call
inc
call
aam
mov
test
sbb
imul
jns
loope
test
or
adc
shrl
sub
xchg
xor
aas
xor
xor
mov
or
int
and
inc
inc
sub
arpl
jg
xchg
push
mov
mov
and
jge
insb
mov
jbe
leave
js
sti
and
or
mov
loope
aaa
lahf
xchg
push
push
jnp
lret
outsl
movsl
xchg
dec
mov
js
mov
pusha
popa
ds
pop
fdiv
and
je
add
ss
mov
movsl
sbb
scas
add
jge
adc
cmp
cmp
cmp
jecxz
imul
or
loope
mov
sahf
sahf
icebp
test
push
test
adc
jne
mov
loopne
and
pop
idiv
rcrl
stos
lock
cld
ja
cmp
adc
xor
test
push
out
cli
sbb
and
push
jbe
cltd
addr16
mov
or
loope
movsl
or
adcb
sbb
pop
dec
push
loope
clc
sbb
icebp
stos
shlb
mov
add
pop
cmpl
xchg
aas
sbb
pushf
and
shll
dec
mov
or
jno
pusha
xchg
pop
sarl
inc
add
mov
rolb
jb
jl
push
dec
in
mov
xor
aas
out
jl
mov
stos
lea
addr16
push
cmp
dec
jns
mov
insb
leave
xchg
movsl
or
cmc
sub
mov
out
pusha
notl
push
xor
outsl
mov
sbb
lahf
int3
mov
inc
cmc
push
out
outsb
mov
jb
cmovne
dec
fcmovnb
and
and
test
popa
push
test
xor
out
mov
cmc
scas
and
pop
shrb
por
scas
dec
push
mov
cmpsl
push
xor
jecxz
jmp
xchg
or
cmc
or
push
stc
aaa
mov
out
je
push
cltd
aas
xor
jmp
in
imul
cwtl
data16
daa
into
fdivs
outsl
xor
mov
mov
jae
mov
dec
es
rorl
loop
pop
jl
sti
and
out
mov
aad
and
xor
aaa
push
mov
push
cli
jmp
add
sbb
test
fwait
jne
lods
push
cli
sbb
mov
loopw
or
inc
mov
pop
into
addr16
insb
add
add
std
pop
int3
add
stc
pusha
cmpsb
bound
jae
add
and
mov
xchg
xor
movsl
and
dec
xor
fstpl
rolb
add
xor
mov
movsb
adc
into
mov
or
cmp
roll
lea
in
jl
sub
sub
fwait
test
or
cwtl
fidivrs
lret
push
mov
push
and
loopne
int3
xchg
enter
jbe
sti
je
cmp
repz
out
stos
mov
les
js
mov
add
xor
mov
jnp
push
jg
or
subl
or
sbb
mov
stos
push
inc
mov
mov
xor
inc
dec
or
xor
ds
mov
ret
stos
stc
rcrb
pop
and
add
mov
and
ljmp
sub
jmp
cmpsb
popl
pop
xchg
xchg
lret
push
xchg
test
dec
or
popa
icebp
nop
adc
aad
xor
iret
or
mov
andb
add
push
xchg
cmp
pop
div
loop
inc
and
sbb
pop
xlat
sahf
pop
cmp
or
add
movsl
fdivs
test
fdivrs
js
mov
addb
sub
push
jo
pop
xchg
adcl
push
das
iret
test
and
mov
jb
xchg
lahf
arpl
pop
dec
sbb
push
cmpb
nop
mov
cli
and
cs
enter
icebp
cmpsl
rcrb
mov
cmp
test
in
mov
test
jmp
addr16
pop
jno
mov
out
sti
imul
int
mov
cmp
xchg
hlt
clc
in
test
push
adcb
pushf
mov
fs
xor
xor
mov
dec
outsl
mov
lea
dec
popa
sbb
fcmove
pushf
pop
jns
xchg
sti
rcl
inc
and
mov
fbstp
cmc
imul
stc
dec
jbe
lock
mov
test
repz
push
loopne
and
adc
jl
cs
fs
mov
fs
je
repz
fucomip
inc
mov
jl
pushf
sbb
std
int
insb
inc
jo
pop
imul
pop
jns
out
ja
inc
popf
lods
pop
mov
sbb
in
andl
adc
repz
movsl
mov
inc
paddd
aas
and
jb
pop
sbbl
xchg
jecxz
shl
xchg
add
inc
inc
jg
jae
stos
push
into
cmp
inc
jne
mov
push
mov
xlat
push
nopl
sub
scas
dec
data16
pop
cmp
jle
sbb
arpl
loope
sub
pusha
out
test
ljmp
lods
movsb
jmp
sbb
repz
pop
pop
bound
js
addr16
jle
sub
inc
sarl
dec
xchg
mov
and
fwait
sbb
rclb
fnstsw
mov
sbb
std
push
data16
cmp
nop
roll
je
and
mov
mov
ja
ljmp
push
lds
insl
decb
out
je
iret
jmp
mov
sub
or
mov
push
cmpsb
cmp
xchg
add
push
jno
cli
sbb
xchg
push
out
xchg
notb
sub
repz
mov
jl
inc
in
jmp
pop
dec
mov
sbb
inc
sbb
and
daa
inc
imulb
or
pop
xchg
xor
mov
cmp
jnp
hlt
and
hlt
hlt
mov
lret
jne
mov
out
sbb
scas
adcl
mov
inc
mov
cmp
adc
in
out
push
add
dec
call
insl
js
lret
mov
xchg
outsb
int
xchg
int
xadd
cld
push
pop
ror
mov
or
aad
add
inc
fwait
in
push
jns
xchg
jo
repz
js
nop
push
xchg
aad
mov
push
inc
xchg
and
mov
lret
jbe
ja
roll
scas
test
lret
inc
ss
scas
inc
sahf
jb
dec
push
sub
sub
sub
repnz
leave
rol
dec
pause
outsl
push
mov
addl
nop
mov
div
sub
dec
push
movsb
ss
push
mov
lahf
ficoms
add
adc
inc
sub
xor
pop
loop
mov
mov
dec
pop
inc
cmpsl
mov
xlat
pop
movsl
jbe
addb
jl
fnstcw
insb
push
clc
push
cmp
sub
scas
lret
mov
imul
sbb
cwtl
aad
stos
icebp
push
inc
mov
aaa
push
call
stc
xchg
sbb
mov
fs
jle
mov
call
pop
and
cmp
in
ror
jl
bound
jp
pusha
adc
mov
bound
nop
jnp
ss
xchg
push
fisubrl
dec
ret
imul
xor
loopne
add
imul
push
ds
mov
cld
mov
ljmp
mov
fcmovbe
mov
add
cmp
sbb
mov
pop
mov
ret
mov
and
mov
adc
or
cmp
push
mov
sub
push
loopne
fnstenv
bound
cmp
lret
or
test
fnsave
dec
ja
cltd
mov
sahf
flds
nop
scas
lea
aas
sub
aam
xor
and
jge
push
insb
dec
jmp
push
xchg
pop
outsl
ljmp
std
jmp
sbb
pop
dec
mov
jno
movsl
in
outsb
cmp
ss
orb
decl
out
loopne
sub
cmpsl
dec
fwait
sbb
cld
xchg
into
xchg
sub
or
add
gs
mov
pop
jg
dec
or
lock
add
mov
cltd
cld
nop
inc
push
lcall
cmpsb
push
icebp
push
mov
add
mov
out
pop
daa
cltd
xorb
mov
jb
in
mov
gs
mov
push
add
lock
add
imul
int
xor
pop
mov
inc
dec
pop
pop
mov
scas
out
cmp
inc
mov
push
pop
aas
das
loopne
fs
xchg
sub
cmc
jge
push
jmp
pushf
fimull
test
imul
lds
movsb
dec
stc
pop
testb
or
vshufpd
adc
test
std
and
add
add
cmc
inc
mov
dec
fbld
lods
mov
xchg
adc
adc
inc
ficomps
les
adc
inc
jnp
out
or
pop
jbe
push
mov
insl
mov
xchg
mov
mov
aam
loope
xor
adc
sbb
xchg
addb
jp
mov
xchg
pusha
xor
into
mov
arpl
test
mov
sbb
mov
shl
inc
pop
sbb
xor
pop
sti
push
aas
ret
cmc
out
jb
xchg
jnp
and
fwait
adc
mov
das
lcall
pop
xlat
add
shrb
jle
bound
and
pop
mov
clc
jge
fidivrs
add
test
insl
cld
adc
and
int3
mov
mov
mov
insb
bsf
hlt
dec
sbb
inc
xor
fwait
or
scas
and
pop
inc
movsl
mov
dec
addr16
into
xchg
jp
mov
push
mov
icebp
dec
test
mov
daa
loop
xor
daa
add
mov
cmp
sub
inc
nop
lock
push
in
mov
xchg
push
cpuid
into
lds
les
jae
iret
mov
and
out
mov
or
add
mov
int
test
mov
jl
test
mov
scas
shlb
iret
add
aas
inc
sub
fsubs
xchg
loope
mov
loope
outsl
loope
stc
pop
dec
push
jne
adc
bound
in
sarb
add
jmp
push
xlat
mov
xchg
xchg
ret
lret
adc
idivb
sbb
movsb
sbb
cmp
inc
loope
enter
add
xchg
adc
pop
xchg
pop
xor
mov
cmp
scas
cmp
loopne
xor
xchg
dec
int3
jge
ss
data16
ret
pop
cmp
testl
dec
and
ret
jnp
xchg
xor
mov
jge
adc
scas
out
daa
icebp
xor
mov
test
in
cltd
and
out
pop
cmp
and
outsb
and
popf
cmpsl
xor
mov
loope
push
test
lds
in
out
fcmovb
shl
or
test
inc
mov
mov
or
mov
gs
cmpl
fldcw
cmp
sbb
in
loopne
or
sbb
adc
dec
lcall
ljmp
and
sbb
inc
xlat
xor
imul
push
sbb
fisubl
stos
and
push
pop
rcr
stc
outsb
jo
aas
push
or
add
push
dec
aam
pop
je
xor
xchg
popf
psrlw
inc
inc
mov
int3
int
pop
inc
jmp
into
add
rcll
xlat
sbb
mov
xchg
jno
daa
test
mov
aas
lahf
sub
outsb
jmp
mov
jmp
cld
enter
jbe
xchg
push
mov
push
testb
filds
sbb
sbb
aad
js
add
rorl
rcll
xchg
sbb
mov
repz
jne
loope
add
pusha
cmpl
dec
push
cltd
mov
js
lahf
nop
and
pop
arpl
int3
lcall
insl
mov
pop
sub
insb
outsb
lcall
mov
in
les
jmp
es
outsb
lock
mov
jns
imul
mov
push
jb
test
dec
ja
xchg
sbb
and
push
les
data16
loopne
insb
mov
loope
xlat
mov
jnp
out
add
pop
mov
sub
popa
push
push
push
mov
jb
sbb
mov
inc
shrl
xor
mov
mov
ds
testb
push
mov
test
jge
jae
push
add
scas
aad
mov
pop
leave
dec
pop
div
sub
shl
push
stc
addb
pop
loopne
jb
inc
clc
adc
pop
adc
call
push
push
adc
sub
jmp
stos
xchg
hlt
push
cli
sub
xchg
cmp
jb
outsb
fdivrl
or
mov
aam
mov
xchg
aam
stc
jno
jbe
jecxz
sub
or
inc
cli
inc
mov
sarl
dec
fdivl
mov
adc
fdivrs
add
ss
push
lods
xchg
mov
repnz
push
or
arpl
pusha
ds
stc
lcall
jbe
push
xchg
xchg
adc
cmp
cli
push
cmp
inc
push
xchg
loop
out
cmpsl
insl
pusha
lcall
andl
jnp
jl
mov
clc
inc
idivb
addr16
test
jnp
mov
loop
mov
dec
enter
sbb
dec
mov
add
clc
mov
sub
pop
mov
mov
fidivrs
xorl
mov
repnz
cmp
mov
popf
fisttpll
adc
outsb
clc
lret
lret
in
fists
popf
jecxz
daa
inc
xchg
or
xchg
hlt
or
cmp
jbe
xor
sarl
push
dec
lea
add
pop
xor
push
inc
adc
sbb
push
cmp
xchg
repz
mov
fcmovbe
fisubrs
sbb
xchg
loopne
dec
stos
outsl
cmp
aam
movsb
lret
test
xor
sub
mov
add
lahf
inc
mov
or
xchg
fwait
stos
xor
sbb
sbb
xchg
adcl
loope
jge
notb
jl
in
xchg
dec
dec
inc
test
jle
cmp
and
leave
jne
pop
push
push
cltd
pop
mov
lcall
ret
add
push
scas
fmuls
andb
jp
loopne
popf
aam
adc
in
mov
sbb
sub
mov
pop
jne
pop
sub
sbb
or
shll
and
notrack
sub
sysenter
and
push
adc
addr16
adc
pop
gs
jmp
imull
mov
sbb
sahf
imul
or
xor
inc
fstpt
cld
mov
fdivrl
pop
adc
pop
sub
cmc
xor
jle
xor
inc
cmpsb
movb
or
mov
loop
out
fstpt
ja
xor
mov
pop
enter
jge
je
pop
das
test
xchg
cmp
adc
or
jno
test
add
in
xchg
xor
push
mov
pop
sbb
inc
xor
push
loop
aas
mov
ss
jne
cltd
clc
mov
stos
jp
cld
ficomps
idivb
cmc
aaa
into
cmpsb
decb
aad
inc
or
or
mov
test
stos
mov
js
lret
fwait
ja
lds
xor
xchg
mov
insb
ficompl
fdivr
dec
addl
mov
cltd
push
push
push
xchg
std
mov
pop
into
cwtl
cs
push
pop
dec
mov
and
pop
inc
mov
cmp
xchg
enter
in
orb
xchg
ja
das
pop
outsl
xchg
xchg
lahf
in
in
pushw
push
sub
outsb
out
inc
sarb
xchg
ja
jns
mov
sar
call
cmp
push
imul
jae
bound
add
lods
pop
mov
push
push
popf
das
sahf
in
insb
fcoms
pop
sub
mov
push
daa
sub
das
cmp
insb
lea
mov
ljmp
movl
jle
push
mov
mov
xor
popf
xor
cwtl
xchg
jmp
sbb
pop
dec
js
mov
add
sbb
xor
je
stc
inc
ss
popa
add
dec
idivl
xor
mov
lock
cltd
push
jecxz
and
pop
outsl
mov
pop
or
mov
sub
add
stc
scas
dec
xorb
push
pop
push
jp
xchg
cmp
mov
jg
cmpsl
bound
cld
or
push
pop
adc
bound
mov
orb
icebp
addb
popf
xor
faddl
js
mov
inc
clc
jnp
insl
popf
mov
icebp
mov
in
lock
decb
or
lret
xchg
test
stc
mov
int
jge
mov
mov
insl
daa
out
jp
sahf
into
xchg
cmpsb
dec
xor
nop
mov
adc
xchg
sbb
inc
inc
outsl
sub
jno
mov
and
fwait
jp
arpl
lcall
in
add
xchg
pushf
mov
dec
xchg
push
sahf
insl
and
fdivrl
jns
lahf
das
rolb
into
xchg
stos
sbb
push
in
xor
outsl
mov
std
inc
rcll
imulb
mov
xchg
push
adc
mov
stos
movl
dec
icebp
mov
pop
and
mov
inc
or
lcall
idivl
adc
out
dec
cmp
bound
dec
push
lods
int3
push
push
cmp
sub
inc
mov
nop
mov
pop
repz
xchg
jmp
ficoml
sbb
pop
imul
or
sub
jl
stos
mov
xchg
test
lahf
fcoms
mov
cmpsb
mov
cmpsb
in
sub
mov
addr16
psubusw
jo
hlt
add
rcrl
sub
push
add
in
lods
or
dec
aad
out
mov
mov
mov
cmp
xchg
dec
pop
lahf
in
and
cld
ljmp
addr16
stos
dec
jg
push
mov
mov
aas
pop
aam
push
aas
in
mov
test
clc
jo
das
jge
cld
sub
into
cwtl
pop
mov
cmp
sti
mov
and
js
outsb
sar
xlat
cmpps
and
notl
sahf
push
ss
mov
ss
in
mov
sbb
sbb
je
imul
push
ret
mov
stos
mov
in
dec
sbb
adc
jbe
mov
ret
call
mov
fisubrl
lods
aad
ds
adc
aaa
test
sbb
add
xchg
enter
aas
fwait
mov
subl
lahf
cmp
jge
or
adc
addr16
push
cld
jbe
popa
and
repnz
adc
adc
fwait
data16
loop
inc
lods
aas
lods
cmp
mov
aas
gs
outsl
cmp
cli
inc
loope
push
mov
pop
rorb
test
cli
mov
sahf
les
add
sub
int3
hlt
pop
testb
dec
jbe
xor
js
mov
or
jg
ds
dec
or
fnsave
fidivrl
ss
call
stos
pop
jmp
xchg
les
in
push
sub
jb
mov
adc
stc
inc
xchg
sar
and
movsl
in
jbe
ds
or
es
insb
fildll
movlps
dec
loopne
out
cmp
rorl
in
push
or
cmpsb
lcall
sbb
mov
add
and
lahf
xor
inc
lret
inc
adc
cli
lahf
inc
daa
out
mov
xor
cwtl
mov
cmp
loopne
dec
cmp
push
xchg
out
daa
outsl
lods
sub
popa
cld
push
bound
mov
sub
push
sbb
out
jl
sbb
in
xor
es
inc
bound
ret
aam
mul
call
std
cmp
push
jge
xchg
pop
negb
imul
cmp
mov
insl
loopne
jno
cmp
push
jnp
and
mov
arpl
xor
aam
mov
repz
sti
xchg
adc
es
xchg
lock
mov
inc
ss
cmpsb
sti
push
cs
cli
adc
fcoml
inc
inc
lods
arpl
or
mov
mov
fldcw
mov
int3
in
icebp
sbb
scas
add
xchg
je
mov
je
movsb
dec
inc
inc
out
pop
stos
xor
maskmovq
aaa
fadds
jmp
cmp
shll
ja
in
fidivl
mov
mov
mov
inc
mov
jle
dec
add
test
dec
in
sbb
imul
stos
and
int3
dec
mov
mov
shrl
sub
mov
push
rolb
test
aam
xor
inc
loop
js
dec
repnz
xadd
mov
pop
cmp
mov
mov
sbb
push
mov
push
int
pop
out
push
movsl
je
jae
and
xor
mov
xlat
inc
enter
xchg
loope
out
mov
jb
lods
xlat
adc
xchg
or
dec
sbb
mov
jbe
cs
mov
dec
jns
test
mov
pop
mov
lock
jmp
ret
std
xor
or
pop
or
addr16
loope
push
mov
aaa
sub
xor
shrl
daa
mov
xor
adc
mov
jbe
jl
pop
insl
or
inc
inc
mov
mov
adc
lods
cwtl
fdivrp
fisubs
mov
inc
cmpsl
add
mov
into
testl
cmp
and
or
test
xor
bound
int3
sub
out
test
sahf
lret
and
filds
jae
lds
inc
fstpt
mov
mov
aam
out
or
mov
and
cmp
pop
jecxz
xchg
mov
adc
jecxz
lods
jbe
sahf
inc
enter
push
loope
aad
jecxz
leave
mov
iret
push
sbb
loopne
mov
mov
jo
rcl
roll
inc
pop
xlat
out
in
mov
fldcw
out
loope
addr16
lahf
pop
and
cmp
cld
test
pop
cmp
insb
pop
xor
lds
call
in
cmpsb
mul
aaa
sub
push
sub
mov
in
pop
ret
in
in
push
int3
fs
sub
icebp
imul
or
dec
out
jmp
add
ss
fmull
jbe
cltd
jmp
hlt
outsl
xor
jo
mov
adc
je
fnstcw
lahf
dec
mov
jmp
xor
stos
les
and
jns
decb
mov
fwait
nop
adc
repz
lcall
xchg
mov
and
les
mov
inc
arpl
mov
mov
cltd
sub
inc
test
adc
addb
lods
lahf
xchg
xchg
push
xlat
xchg
push
lods
xor
add
gs
adc
push
sub
pop
psllq
int3
shll
fldl
rcrb
ret
mov
adc
inc
pop
or
adc
push
shr
mov
stos
dec
out
addr16
push
popf
lahf
ljmp
test
jle
mov
sub
clc
lods
int3
mov
adc
xchg
ljmp
mov
in
clc
aam
or
xchg
test
scas
imulb
mov
and
push
mov
sbb
ds
pop
insb
pop
scas
cmp
xor
js
mov
mov
in
gs
cmc
and
mov
cmpsl
mov
pop
imul
repz
and
scas
fcmovbe
xor
xchg
bound
or
pop
push
rorb
fnstenv
aam
xor
adc
xchg
add
cwtl
fnop
insl
fildll
jp
add
add
std
adc
inc
push
push
cwtl
imul
pop
cmpb
and
test
adc
and
jecxz
sbb
push
aaa
jnp
cmp
and
mov
out
xor
lods
loopne
jle
sbb
inc
out
pushf
adc
push
push
loopne
fdivrs
addl
outsb
push
scas
shrl
test
popf
lahf
xor
loope
cmp
out
inc
shl
xlat
es
iret
mov
lock
cmp
sub
mov
imul
or
addr16
adc
adc
push
inc
gs
sbb
gs
popf
xchg
mov
repnz
mov
loop
inc
mov
add
repnz
mov
stos
bound
mov
pop
jno
fwait
or
jl
je
sub
xor
pop
mov
dec
cmp
push
sbb
mov
insb
mov
xor
push
jge
enter
pop
rorb
xchg
mov
insl
mov
cmpsb
int
pop
cmp
mov
addl
lds
insl
cli
push
cmp
addb
stc
mov
mov
add
sub
xchg
dec
pop
sbb
jp
insb
lods
stos
fsts
adc
adc
test
ljmp
xor
mov
xor
fistpl
ret
cmp
add
mov
add
aaa
call
rcll
sub
cmpb
sbb
pop
add
jns
popf
lret
lahf
fsubrs
sub
and
lea
addl
pop
jge
rorl
and
sarb
mov
mov
lods
test
int3
lcall
scas
rcpps
sub
xchg
pop
js
mov
les
xchg
cmpsl
pop
js
aad
pushf
xor
test
jg
jo
imul
es
dec
inc
xor
nop
rcrb
jmp
repnz
ja
xchg
or
dec
das
xor
lret
cmpl
adc
loope
push
pop
ljmp
clc
scas
cmp
and
cmp
push
jge
sbb
xchg
push
adc
or
lds
push
mov
nop
sbb
xchg
aad
ja
fucomp
lret
mov
mov
xchg
or
fs
aaa
mov
or
les
jno
idivl
sbb
mov
rcrl
in
and
mov
pop
jo
push
add
dec
pop
push
rcr
testb
divb
stos
inc
inc
jle
lahf
xchg
in
cmp
jne
sti
or
or
adc
es
jns
and
mov
or
jmp
dec
shl
xor
sbbl
pop
bound
dec
jmp
push
adc
imul
adc
mov
imul
repnz
call
pushf
push
push
popf
sbb
fdivs
xchg
push
es
mov
dec
test
and
ja
ds
notl
or
in
mov
rol
push
fucomp
repz
jge
sub
pop
or
lret
pop
sbb
and
shrb
push
stc
sub
jmp
ja
gs
popa
inc
clc
push
and
in
test
mov
arpl
mov
nop
mov
and
lds
dec
outsb
pop
out
ja
pop
ss
or
mov
push
lds
call
xchg
push
xor
mov
mov
scas
sub
push
loope
sbb
mov
adc
inc
aaa
xorl
mov
add
loop
nop
movsb
push
clc
adc
mov
push
pop
mov
imull
int
cmp
adc
mov
lret
jle
cmp
mov
enter
subl
stos
push
sub
es
and
jle
sub
pop
repz
mov
xchg
xor
sahf
xor
xor
enter
repnz
jg
push
dec
xor
and
out
std
icebp
dec
push
xchg
inc
ss
cmp
jbe
loop
stos
fnstsw
dec
mov
cmpsb
aad
pop
out
popf
scas
dec
add
repnz
push
out
fninit
dec
sbb
fiadds
nop
xlat
and
pop
and
scas
or
cwtl
push
mov
inc
xor
int
and
add
aam
clc
addr16
lods
stos
mov
adc
cmp
dec
xor
jmp
inc
jo
ret
add
mov
adc
xlat
outsl
testl
out
je
dec
sub
sub
lcall
jmp
xor
push
pop
in
add
inc
test
ljmp
cmpsb
and
and
jecxz
jno
mov
pop
pop
jmp
or
jp
adc
in
out
out
sub
dec
sub
mov
test
std
test
push
arpl
sbb
cmp
aaa
or
xchg
das
fs
push
push
icebp
testl
mov
imul
jp
imul
or
andl
test
adc
mov
sub
fdivrl
mov
dec
or
lods
mov
adc
in
xchg
fxam
shl
sbb
dec
fs
addb
std
jnp
sbb
pop
out
mov
push
mov
jbe
outsl
test
add
mov
sub
pop
pop
lret
aas
aam
mov
movsl
mov
sti
sti
inc
mov
mov
cmpsb
dec
cmp
rorl
adcb
pop
adc
test
pop
sbb
xlat
mov
sbb
insl
mov
cmpsl
cmp
push
inc
icebp
icebp
cwtl
outsl
cmpsb
movsl
lcall
mov
call
and
mov
cmpl
xor
jns
xchg
mov
mov
jmp
test
imul
and
shrl
fildl
or
xchg
stos
jo
testl
pop
mov
idiv
fs
push
xchg
nop
je
mov
cld
in
dec
in
mov
inc
pop
aas
out
enter
push
adcl
iret
and
adc
ret
xor
fstpt
scas
jge
or
sub
xchg
mov
xchg
sub
je
iret
ficoms
adc
iret
lret
jnp
lcall
dec
insl
cmp
insl
inc
fnstenv
mov
int
cmp
pop
xchg
jmp
faddl
pop
push
lods
mov
repnz
mov
cmp
dec
je
inc
add
jge
dec
cmpsb
cmc
xlat
xchg
jne,pn
sub
pop
dec
popa
sbb
es
mov
loopne
fildl
adc
mov
push
and
clc
mov
lcall
jns
imul
xor
push
in
pushl
mov
mov
pushl
pushl
pushl
pushl
mov
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
movl
xor
lea
andl
mov
adc
movl
lea
xor
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
push
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
add
dec
mov
jmp
mov
andl
push
adcl
xor
subl
push
add
push
mov
xor
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
jmp
cmp
xor
insl
or
sub
jp
xlat
cwtl
jnp
cmc
sub
jno
xchg
sub
int
rcrb
mov
mov
dec
dec
lcall
rorb
std
jle
push
subb
mov
mov
inc
cmp
mov
mov
mov
enter
addr16
sub
add
xchg
into
pop
js
xor
mov
or
and
adc
hlt
push
nop
jl
pop
pop
xchg
or
and
push
adc
fdiv
movsb
xchg
sub
test
stc
mov
inc
dec
sbb
addb
mov
test
lods
pop
or
in
xchg
mov
and
cltd
pusha
fdiv
sub
add
bound
btc
push
imul
lods
incl
xchg
in
lret
mov
cmp
mov
jno
clc
and
adc
insl
aam
sbb
je
fisubrs
or
mov
adc
cmp
pop
push
or
push
jb
mov
in
lahf
mov
inc
push
xchg
mov
inc
in
jmp
cld
andl
test
stos
outsb
lcall
icebp
inc
mov
and
loop
pop
mov
pusha
nop
sbb
stos
push
push
fdivrl
daa
xchg
lods
pop
out
mov
or
jecxz
xor
insl
cld
cmp
dec
jecxz
push
inc
xor
mov
ret
cmpsl
mov
shll
cld
sbb
xchg
adcl
mov
nop
adc
ds
adc
and
jnp
cmp
in
push
pop
xchg
insb
shlb
xor
cmp
xchg
clc
pop
jbe,pt
imul
adc
rorl
jl
xchg
rcll
movsl
cmp
jae
jae
jae
mov
jns
sbb
pop
mov
mov
ss
in
and
test
aam
dec
aaa
xor
inc
sub
cld
addl
xchg
push
fcoml
or
xchg
sbb
loopne
sub
xchg
fnstenv
and
scas
jmp
popf
sbb
cmp
cwtl
rsqrtps
lahf
leave
mov
add
dec
clc
stc
leave
imul
add
xchg
mov
sub
mov
push
int3
mov
jbe
daa
addr16
fnstenv
es
sbb
pusha
sbb
fimuls
dec
mov
in
push
bound
ja
push
xchg
cs
hlt
adc
mov
cmp
push
lret
mov
shl
cmp
mov
imul
mov
inc
push
mov
stos
in
xchg
dec
cli
stos
pop
add
mov
xchg
push
mov
aaa
mov
fstpl
cmp
jmp
out
shlb
roll
jne
in
add
std
lcall
imul
or
xchg
loop
fmulp
out
sbb
cli
dec
fwait
mov
fistpll
mov
shrl
popf
es
sti
outsl
js
cmp
movsl
sub
push
push
sub
adcb
clc
stos
enter
insl
inc
mov
sbb
jnp
jno
out
popa
add
fwait
gs
mov
pop
lods
xchg
pop
in
outsl
sub
push
xor
jg
flds
xchg
popf
hlt
dec
arpl
xchg
add
cmpsl
mov
mov
mov
testb
mov
cmp
sti
shrb
int3
aaa
jb
das
cmc
inc
sbb
xchg
mov
movsb
jne
cmp
outsb
in
mov
loopne
jb
fildl
mov
test
sub
push
loop
aam
out
shll
aam
das
adc
data16
popf
xchg
std
dec
mov
lahf
stos
mov
mov
fisubl
int
or
orb
or
rclb
xchg
cmpsl
sbb
lret
call
push
shll
in
inc
lods
mov
xchg
shr
jl
xchg
popf
es
dec
fwait
es
es
cwtl
adc
int
cmp
test
adc
dec
lds
fistpl
iret
call
xorb
push
add
es
mov
xor
fidivl
xchg
adc
data16
add
push
imulb
lea
cbtw
dec
cmp
and
add
in
jnp
xchg
cmpsb
sahf
inc
fsubrs
in
arpl
adc
cmp
lahf
sahf
in
jns
and
lret
les
mov
inc
out
out
notb
sti
imul
pop
cld
sub
add
mov
jbe,pn
cmp
pop
sarb
cli
pop
push
jo
add
adc
stc
je
shl
lds
xor
shll
cmc
xor
sbb
in
lods
and
push
sbb
enter
xchg
gs
out
mov
imul
add
cwtl
fisubl
or
inc
clc
cmp
jg
je,pn
in
ds
xor
mov
or
xor
test
sub
xchg
xor
inc
xchg
sub
push
mov
xchg
xor
out
daa
jle
inc
jl
dec
mov
xor
mov
fwait
inc
add
push
in
lock
push
and
rcll
push
push
xchg
push
adcb
js
xchg
testl
mov
imul
cmp
or
lods
jno
pop
sahf
add
jne
pop
sbb
xor
push
rcl
or
shrb
mulb
jl
push
inc
scas
xchg
dec
ss
inc
jb
ljmp
adc
ficompl
mov
std
mov
roll
addr16
and
call
pop
imul
jae
lds
andl
ja
add
clc
fidivs
jnp
mov
iret
sbb
pushf
dec
mov
push
push
lret
stos
mov
std
sbb
jle
xchg
fnstcw
dec
mov
in
sbb
dec
scas
xchg
icebp
iret
test
loope
aas
dec
cmpsl
in
test
cs
cmp
sti
out
cli
out
or
sti
xchg
repnz
push
or
cs
hlt
or
sbb
sbb
pop
mov
decl
push
add
push
dec
adc
popf
scas
mov
imul
cmp
pop
sbb
cmpsb
inc
notl
lods
mov
out
jne
lock
mov
add
lods
into
xchg
and
jne
lcall
adc
adc
js
push
jge
mov
loopne
cmpsb
clc
adc
jnp
jge,pn
orl
in
and
cwtl
mov
push
leave
mov
lret
add
push
scas
jbe
icebp
out
dec
mov
cmp
imul
adc
fwait
lret
pop
push
mov
fninit
imull
jmp
ljmp
push
cmp
xor
test
sar
push
or
dec
sub
xor
mov
lock
xchg
jl
addr16
mov
xchg
dec
pop
cltd
mov
sub
xor
add
pop
lds
jl
out
jecxz
adc
xchg
fisubrs
lds
hlt
ret
push
test
setg
adc
arpl
inc
inc
mov
xor
push
inc
adc
sub
cli
or
mov
or
mov
cmpsb
pop
out
lcall
or
outsb
sbb
mov
inc
bound
out
jge
mov
sub
or
mov
push
out
mov
in
in
pop
test
inc
xchg
iret
jnp
pop
repnz
sbb
mov
cmp
pop
xor
mov
xchg
dec
jnp
jmp
push
mov
aam
mov
xchg
sub
or
or
in
push
and
test
repz
push
or
data16
sub
push
jnp
xchg
cmpsb
jg
add
stc
icebp
push
fstps
mov
out
out
aas
jecxz
repz
fmull
cmp
or
mov
cld
mov
xor
mov
out
mov
loopne
mov
push
addb
jbe
jno
mov
sub
ljmpw
sub
test
dec
int
lahf
inc
xor
sbb
xor
or
mov
mov
or
xlat
test
inc
std
dec
dec
fidivl
ret
cmp
dec
repz
out
inc
xchg
and
into
pop
jge
jo
imul
pop
mov
pop
std
xchg
out
and
hlt
inc
push
filds
jmp
and
xchg
mov
dec
lret
jle
std
xchg
pop
mov
and
jecxz
leave
aad
mov
jns
mov
xchg
xor
pop
inc
pushf
add
mov
dec
sub
add
xor
jmp
test
lahf
xor
xchg
cli
sbb
dec
push
lock
inc
imul
push
sbb
lret
mov
pop
push
loope
xchg
or
icebp
sub
adc
sbb
cmp
pop
lcall
lock
push
push
lret
mov
mov
aas
push
mov
and
xchg
mov
cmpl
pop
sub
fcomip
xor
jae
aas
push
aaa
dec
xor
xchg
adc
mov
sbb
mov
fisttps
sub
sub
test
add
sub
or
jp
fs
cli
mov
cs
adc
mov
sbb
add
mov
iret
es
jp
xorl
in
inc
and
scas
jg
push
icebp
imul
ja
and
dec
mov
lcall
ficoms
ret
push
adc
and
jecxz
mov
cmpsl
dec
popa
mov
pop
iret
cs
jl
arpl
es
mulb
xor
nop
sti
fistpl
in
add
pop
sbb
fmul
gs
mov
mov
xchg
pop
loope
add
mov
sarl
out
stc
iret
addr16
sbb
cmp
pop
or
cmp
repnz
push
je
nop
sar
push
xor
dec
mov
dec
inc
xchg
je
pop
lea
jb
add
aam
push
cmp
and
shll
js
inc
loopne
jp
mov
test
xor
xor
ja
movsl
cmp
xor
in
jno
inc
test
push
in
and
sub
cmc
pop
test
jne
fldl
or
bound
push
out
dec
or
or
mov
inc
and
fcmovu
int
push
sub
sub
push
scas
lock
or
lds
lods
xchg
pop
jb
jge
lea
and
fsubl
enter
add
and
aaa
and
pushw
pop
rcl
rolb
sbb
fsubrl
mov
shrl
imul
test
dec
add
divl
arpl
push
pop
or
adc
inc
enter
cld
ror
push
leave
test
xchg
add
adc
push
xor
push
mov
sbb
cmpb
or
dec
out
dec
ss
jle
outsl
xor
xor
faddl
and
gs
xlat
cmpsb
mov
mov
xchg
inc
das
pusha
pop
sti
sub
addr16
and
pop
idivl
leave
pop
and
or
sbb
ss
dec
lret
rcr
or
pop
add
or
xchg
cltd
cmp
mov
outsb
or
je
mov
stc
arpl
fs
cmp
test
lods
xchg
rcll
out
pop
cmp
adc
call
test
aaa
aad
lods
lea
and
dec
push
inc
pop
arpl
nop
lret
dec
and
push
in
xor
xlat
xor
or
inc
add
jne
adcl
movsl
mov
repz
je
sub
lea
nop
sti
ficoml
add
fiadds
mov
sbb
sbb
aam
jns
mulb
mov
sahf
add
fdivrs
iret
sub
push
push
gs
push
fisttpl
shlb
dec
push
dec
fs
stos
add
ds
int
dec
inc
mov
mov
lods
aas
xor
pushf
push
jno
cld
mov
insb
imul
sbb
sahf
or
mov
sub
add
enter
outsb
mov
mov
jg
adc
push
push
jp
xchg
and
push
mov
jecxz
jl
mov
fyl2xp1
adc
sahf
addr16
lods
adc
out
cmpb
push
dec
in
add
cmpsb
jae
xor
mov
and
push
repz
fidivl
call
push
mov
imul
xchg
divb
in
lret
imulb
mov
cltd
sbb
es
cli
jo
mov
sbb
fs
mov
test
sarb
cwtl
xor
jecxz
stos
cmp
lret
dec
mov
sbb
stc
xor
mov
imul
mov
mov
sub
adc
pop
dec
lods
cmpsb
imul
insl
lock
jmp
in
adc
jl
add
cmpsb
sbb
mov
adc
push
int3
cmp
ds
in
movsb
inc
js
insl
aaa
cmp
icebp
mov
push
jmp
and
inc
lret
jnp
xchg
scas
rcll
mov
push
clc
jne
aaa
xchg
pop
xor
add
mov
test
inc
sbb
lret
sbb
xor
les
loopne
xor
je
inc
pop
leavew
jge
jno
pop
ljmp
out
add
out
pop
mov
or
aaa
jecxz
gs
jp
sbb
sub
ret
mov
jae
add
sarl
cmp
or
aad
xchg
addb
rcll
cmp
mov
mov
sub
push
pop
mov
hlt
mov
dec
push
and
cltd
xchg
nop
mov
in
mov
idivl
lret
adc
add
inc
xlat
pop
dec
fsubs
adc
sbb
enter
shl
adc
div
pop
mov
mov
int3
int3
popf
in
cmpsl
fsubs
mov
add
add
jecxz
xor
je
cmp
icebp
scas
mov
jae
or
das
shl
pop
addr16
stos
cmpsb
sbb
sbb
mov
shll
add
in
inc
popf
adc
imul
jns
pop
inc
ret
scas
lods
pop
push
fmulp
xchg
je
scas
xor
jl
lret
and
rcrb
sar
int3
xor
aam
push
lds
inc
add
pop
lea
not
and
cld
lods
push
std
or
or
add
pop
in
add
sbb
and
cmp
test
push
sub
lods
xchg
mov
mov
mov
lods
leave
push
sbb
mov
loopne
lods
jns
filds
xor
imul
lock
or
or
push
mov
rcrl
mov
push
or
or
adc
outsb
out
or
dec
in
scas
sub
int3
popa
adc
push
stos
mov
inc
out
lret
pop
out
mov
orl
adc
daa
jmp
aas
ss
pop
jge
repnz
subb
stos
leave
imul
jbe
push
push
jns
jae
jo
jp
adc
mov
cmpl
sub
insl
inc
scas
lds
clc
jmp
mov
jl
mov
aam
cmpsb
mov
mov
roll
cmpsl
test
pop
int
jecxz
fs
mov
jle
out
dec
imul
aam
xchg
outsb
loop
inc
mov
shll
add
jbe
pop
and
pop
add
push
lret
jl
mov
mov
xchg
mov
push
out
fbld
jno
xor
cmc
lods
cld
push
dec
xchg
movsl
leave
cwtl
jge
pusha
jle
dec
les
insb
mov
mov
mov
andb
scas
subb
in
out
xchg
js
leave
pop
cmp
xor
or
jns
adc
xor
int3
jbe
adc
or
outsl
aaa
jg
mov
cs
push
cmc
repnz
push
add
xchg
sbb
sarb
or
or
movsb
mov
in
daa
imul
or
pop
inc
nop
cmp
lea
inc
or
rclb
mov
loopne
mov
push
push
inc
sbb
mov
xorl
add
dec
add
cmp
xor
xchg
paddd
popl
ret
insl
shll
pop
mov
pop
bound
out
insl
call
stos
std
pop
adc
sub
xor
lea
xchg
sub
mov
fldt
rorw
in
pop
sbb
scas
push
cltd
dec
je
jle
jno
ret
push
fisttpll
mov
lea
push
jne
shll
fnstcw
lock
push
adc
pusha
into
adc
cs
loope
fwait
add
or
les
sahf
sbb
pop
loopne
mov
cwtl
cwtl
xchg
mov
add
out
lods
fisubrl
adc
jp
pop
or
fdivrl
mov
js
inc
add
movsb
cmp
add
int
dec
mov
lds
jbe
add
daa
jg
fistpll
jo
and
pop
sbb
jl
add
sbb
inc
mov
xchg
pop
in
rcrl
mov
imul
or
mov
lret
fisttps
sub
push
stos
inc
dec
aaa
adc
gs
hlt
aaa
sub
rcll
sub
loop
xor
ret
push
inc
jle
jmp
mov
stos
xor
xor
imul
dec
dec
mov
js
and
jae
pop
je
das
pop
or
inc
or
orb
xchg
xlat
push
mov
inc
imul
loop
pop
stos
push
aam
mov
leave
cs
cmpsl
cmpsb
xchg
and
ret
iret
inc
or
loopne
xor
imul
jae
ss
push
xchg
ljmp
pop
cmp
sub
fisttpll
dec
jno
js
sbb
cmp
out
clc
in
or
xorl
xchg
test
cmp
mov
fsubrl
push
cmp
sarb
popa
outsl
adc
sbb
xchg
mov
int3
jle
or
arpl
dec
pop
cmpsb
fiaddl
dec
icebp
stos
adc
mov
jb
or
orl
gs
ljmp
jae
jns
pop
push
push
gs
xchg
aam
sub
sub
lret
adc
cmpsb
pop
xor
movsl
lods
xchg
repz
repz
pop
in
and
cmpsb
ror
push
popa
push
les
pop
arpl
out
push
and
xor
mov
sub
les
adc
js
push
and
adc
into
lret
ret
xchg
insl
mov
das
or
int
lods
pop
fists
icebp
inc
stos
jmp
fnstenv
movsl
insb
fadd
and
js
or
adc
arpl
sbb
jl
sti
inc
or
adc
cld
in
cmpsb
add
add
inc
add
dec
or
cmc
and
gs
enter
in
daa
lret
dec
or
pushf
int
xchg
add
nop
push
lcall
sti
jmp
mov
call
and
xor
sub
mov
pop
xchg
xchg
mov
lods
orb
sahf
push
pop
jp
jp
sub
ljmp
aam
lret
push
mov
sbb
push
popf
jmp
dec
xor
ja
jno
push
and
push
push
xor
outsl
xor
popa
popf
cmp
aad
stc
aam
sbb
push
mov
cmp
and
pusha
insb
xchg
xchg
xlat
test
inc
inc
into
xchg
adc
inc
push
xor
shr
shll
mov
mov
es
out
jmp
jle
arpl
clc
inc
negl
repnz
mul
mov
push
xor
jae
mov
sbbl
movsb
sub
push
dec
int
adc
sgdtl
lcall
jne
arpl
dec
mov
dec
jns
xchg
mov
leave
jbe
lret
stc
push
mov
stos
pop
sbb
fisubl
mov
mov
mov
jnp
xor
rorb
fdiv
dec
push
jae
mov
or
mov
and
push
scas
mov
jmp
push
push
dec
in
insl
addb
jge
fwait
sbb
cltd
jle
lock
xlat
or
enter
sub
push
lods
dec
fists
add
shlb
sub
add
adc
cltd
or
aam
or
inc
sti
into
cmp
fstps
test
sub
push
inc
sbb
mov
jg
lahf
pop
fistpll
sbb
bound
fidivl
cmpsb
cmp
or
xchg
cmp
push
cltd
sub
cmpl
or
imul
mov
mov
ja
in
xor
xchg
xlat
out
inc
and
pop
mov
jecxz
popl
cmp
inc
enter
aam
sub
and
cmp
fs
hlt
andl
adc
pop
inc
push
or
dec
fsubp
roll
lods
dec
or
aam
push
push
outsl
fsincos
dec
std
dec
push
and
dec
mov
ret
ljmp
es
bound
or
ljmp
stc
in
aam
mov
jne
adc
gs
mov
std
jge
push
dec
add
pop
or
loop
dec
sbb
mov
pop
cmp
icebp
inc
repnz
mov
adc
xor
arpl
dec
xchg
push
incl
test
mov
cmp
outsl
rolb
js
lds
pop
mov
and
shr
push
push
int3
inc
out
bound
ja
mov
pop
stos
dec
shlb
adc
jmp
jne
or
adc
sahf
lcall
clc
xlat
and
cmpsb
mov
scas
lret
ljmp
sbb
jp
or
xchg
dec
push
add
jno
outsb
call
dec
push
xor
test
bound
pop
popa
dec
fidivs
aas
adc
into
sbb
scas
add
mov
jle
mov
dec
jg
shlb
int
imul
inc
aad
das
test
in
pop
imul
popf
jno
mov
negb
adc
int3
mov
push
pop
adc
add
dec
inc
outsl
mov
xchg
mov
fnstsw
outsl
dec
and
xchg
sub
in
jbe
adcb
jns
fwait
sub
push
push
popf
mov
outsb
or
fwait
in
adc
ljmp
xchg
loopne
stos
les
call
mov
xor
test
cmp
or
icebp
mov
cmpsb
xor
inc
pop
sub
fwait
jnp
fsub
inc
call
inc
add
dec
mov
loope
stos
gs
cmp
jae
rol
scas
jns
call
push
jns
mov
push
addr16
dec
inc
mov
dec
mov
jb
jae
mov
aam
cltd
out
or
xchg
add
imul
lods
in
or
mov
mov
dec
jmp
inc
sbb
orl
xchg
fisubrs
push
jns
fnstcw
in
aam
mov
out
stos
dec
mov
or
or
loopne
aad
mov
add
ficoml
cmp
loopne
fidivs
dec
arpl
push
add
sub
sbb
xor
and
jbe
adc
sbb
sub
rclb
hlt
lahf
or
clc
lahf
jl
popa
shlb
xchg
pop
xchg
xchg
dec
dec
lret
repnz
push
cli
xor
scas
pop
jg
cwtl
lahf
xchg
in
lds
mov
outsl
mov
cli
or
mov
inc
jle
and
or
popf
and
xchg
int
pop
jmp
sbb
jbe
mov
push
mov
mov
es
cmp
jno
dec
pop
pop
bound
cmp
ljmp
inc
xchg
xchg
jnp
iret
in
mov
add
dec
pop
test
push
cmp
ja
xor
sbb
imul
adc
test
enter
das
orb
dec
push
push
xchg
mov
cmpsb
sub
inc
xchg
add
dec
adc
add
and
aaa
data16
shlb
lahf
pop
add
pop
xlat
je
cmpb
mov
inc
insl
mov
mov
xchg
sub
pusha
inc
pop
jmp
pushf
jae
mov
jge
insb
push
fsubrs
sub
mov
out
sbb
cmp
cltd
and
push
mov
jno
jg
pop
add
aas
and
xchg
rol
hlt
in
mov
out
sbb
int3
pop
stc
xor
dec
push
pop
ficompl
pop
xchg
inc
cmp
pop
xor
insb
xchg
out
xchg
push
ja
mov
and
imul
fsubs
cmp
dec
mov
jns
adc
mov
pusha
insl
mov
inc
ss
inc
add
xor
inc
pop
xor
aas
pop
add
add
jbe
push
adc
jmp
adc
cmpsl
bound
in
fcompl
add
dec
xchg
aas
pusha
inc
mov
cmc
sub
add
scas
or
inc
in
inc
pop
xchg
imul
ret
jo
scas
ss
repz
or
lahf
sub
mov
lret
int
iret
mov
xchg
and
push
jge
imul
xor
cwtl
scas
fsubs
mov
bnd
call
lock
sbb
pushf
cmpsl
mov
std
push
int
add
ja
inc
mov
shll
lret
lds
xor
pop
out
or
div
and
inc
aad
stos
xor
dec
out
bound
sub
push
pushf
mov
mov
mov
cmpsb
adc
hlt
call
sub
push
aaa
jno
pop
xchg
das
dec
ja
xlat
fwait
push
cmpsb
mov
inc
cld
lea
jle
test
mov
add
xor
cmp
popf
in
rcr
xor
sub
lahf
out
outsb
ret
fs
push
orb
scas
and
lea
fwait
imul
cmpsb
cld
daa
sbb
and
mov
pop
jae
mov
xchg
mov
fisubs
iret
mov
jecxz
and
cmpsb
xor
dec
fidivl
out
out
cmpsl
add
fsubp
push
cmp
xchg
outsb
in
stos
data16
mov
movsl
push
stos
xchg
ja
js
or
arpl
cmp
mov
mov
pop
sub
jle
or
mov
cmp
js
jae
ret
cmpsl
fnsave
mov
push
lret
mov
out
cmc
les
popf
insl
in
cmp
clc
jg
je
inc
jb
xlat
adc
xor
sbb
inc
shll
jl
xchg
jmp
sbbl
xchg
mov
je
add
testb
aad
or
test
mov
rcl
pop
sti
cmp
dec
cld
xchg
out
xor
sbb
pop
aam
add
xchg
cmc
fcmovbe
inc
push
repz
shr
sarb
xlat
mov
push
mov
stc
sub
push
xchg
push
lret
pop
sub
or
ljmp
xchg
push
mov
jp
jno
std
cli
out
and
mov
lret
inc
cmp
adc
dec
push
lods
sbbb
sbb
negb
xor
int
fdivrs
push
rcrl
adc
lods
js
pop
inc
scas
mov
imul
ret
mov
test
data16
fs
fnstenv
adc
xchg
mov
mov
mov
fisttpl
movb
int3
add
loope
cmc
outsl
out
dec
inc
jno
dec
addr16
sbb
pop
pop
and
jg
ss
lcall
aas
jle
fcom
jb
scas
nop
insb
sahf
loope
cli
ja
xor
aas
or
loope
loop
jae
jb
out
and
fwait
and
push
aam
mov
pop
mov
mov
cwtl
in
ljmp
push
lea
cld
cmp
mov
les
xchg
xor
cmp
cld
sbb
xor
xchg
xchg
cmpsl
push
jl
movsl
out
adc
cmc
cmc
nop
out
lcall
adc
sub
clc
mov
out
hlt
loopne
lcall
imul
sbb
ret
call
inc
fstpt
leave
push
push
mov
pusha
pop
jl
ljmp
cmp
xor
mov
cmp
sub
sbb
add
sbb
fisttpl
inc
mov
inc
or
lret
push
inc
aaa
xchg
mov
rol
mov
or
dec
push
addr16
sbb
into
sbb
xorl
ja
negl
or
popa
aas
out
je
pop
lock
repz
mov
lea
push
inc
jmp
sbb
stos
sub
sbb
call
int3
add
jmp
call
xor
adc
test
push
repnz
mov
lret
lret
mov
cs
in
out
out
inc
and
push
insl
pop
jne
dec
mov
pop
shlb
mov
lods
inc
mov
fcomps
pop
test
loope
leave
outsl
sbb
sub
fimuls
ret
aaa
sub
aam
aam
pop
push
push
dec
or
jl
ja
xor
pop
lods
cmc
popa
mov
mov
inc
test
das
jl
or
sbb
sbb
xchg
repz
mov
mov
aas
cmp
sbb
aad
notb
mov
or
mov
xlat
cmp
movsl
lock
mov
dec
pop
pop
jne
add
lret
popl
in
subl
dec
lret
add
jbe
cmpsl
sbb
jmp
sbb
rolb
mov
jno
add
adc
or
loopne
and
or
scas
sti
mov
jmp
dec
push
test
lods
pop
xchg
push
mulb
inc
nop
das
popa
sub
xchg
pop
inc
test
ficomps
dec
leave
out
ljmp
add
aam
lock
xor
sti
enter
std
xchg
mov
xor
imul
les
mov
insl
cltd
jbe
ror
mov
push
fsubrl
jo
adcl
mov
jle
xchg
sbb
rcrl
std
pop
jns
notb
je
int3
mov
sti
pop
out
pusha
sbb
imul
mov
fcoms
xchg
mov
loopne
test
xchg
inc
adcb
movsl
sbb
push
shl
scas
or
inc
and
call
mov
sti
sub
out
inc
mov
or
mov
repz
cwtl
scas
xchg
and
xchg
jno
test
mov
xor
scas
fcoms
mov
iret
and
lock
mov
outsb
pop
mov
mov
out
mov
in
lret
xchg
cmp
jmp
or
add
push
outsl
scas
add
out
std
xchg
dec
adc
jmp
cmc
loopne
inc
aam
xor
mov
mov
icebp
sub
dec
cmpsb
out
or
negb
dec
fldl
pop
imul
push
or
cmp
sbb
mov
sub
mov
xor
add
movl
cmp
movl
jne
movl
jmp
dec
cmc
pushf
adc
je
mov
popf
push
roll
jnp
xchg
jnp
lret
repz
mov
and
outsb
in
cmc
and
cwtl
cmc
out
add
inc
dec
sub
rcrl
mov
cmp
lods
daa
imul
pop
mov
xlat
adc
mov
xor
clc
add
loope
in
inc
pop
pop
mov
aas
pop
shlb
and
pop
movsb
mov
jnp
or
in
lea
sbb
fwait
mov
jl
dec
stc
pop
add
popa
shrb
inc
or
cs
add
mov
mov
arpl
in
lret
and
stos
into
or
push
imul
rorb
add
inc
in
inc
dec
mov
out
and
pushf
sbb
mov
mov
repnz
outsb
pop
mov
push
jp
or
xor
fsub
mov
cld
repz
sbb
xor
rcr
push
pop
out
outsl
out
lods
sub
scas
negl
shlb
push
clc
sbbb
shll
mov
push
adcb
loop
push
scas
cmp
pop
into
jbe
cmp
xchg
imul
ljmp
iret
test
adc
lret
fs
insl
aaa
push
inc
negl
loop
scas
aad
pop
rcll
jbe
and
in
lods
int3
cmp
shll
loopne
mov
inc
mov
cmp
flds
shr
xor
or
dec
dec
movsb
rorl
mov
inc
incl
xchg
add
xor
xlat
add
fwait
sbb
pop
inc
sbb
leave
inc
pop
in
sarb
xor
hlt
sbb
adc
stc
xchg
push
in
sub
sbb
loope
test
jb
hlt
mov
jl
inc
cmp
pop
daa
fisttpll
jnp
mov
dec
or
pusha
xchg
mov
repz
mov
mov
cmc
fnstenv
cmpsl
xchg
xchg
ficoms
enter
dec
or
iret
push
jbe
mov
or
pop
jle
push
xor
sub
fidivrs
ffreep
ret
nop
inc
scas
inc
out
loope
xor
ret
cld
clc
mov
pop
inc
xchg
mov
mov
dec
mov
adc
inc
dec
lds
xor
inc
sbb
sbb
loop
push
movl
xchg
xchg
sbb
outsb
sahf
rolb
iret
in
add
push
mov
sub
sbb
in
movsl
xchg
shr
sbb
sub
sbb
iret
movsb
sub
idivb
rol
loop
xchg
test
cmpsl
dec
cmp
movsb
mov
mov
nop
sub
xor
pop
mov
mov
arpl
xor
xchg
sbb
test
push
inc
jp
sbb
in
and
popf
lods
cli
cmc
mulb
cmp
movsb
sub
dec
jmp
push
out
enter
add
jle
mov
test
cmp
xor
add
stc
and
faddl
arpl
mov
xor
es
push
cmp
je
sbb
sub
cmp
repz
dec
dec
xchg
loope
loopne
dec
fs
fimuls
adc
ljmp
lea
pusha
std
aas
popf
mov
push
mov
xrelease
and
lret
xchg
pop
iret
flds
imul
cmp
arpl
cmp
jb
mov
push
add
sbb
adc
inc
ljmp
insl
mov
xor
dec
jns
lods
sbb
xor
fstl
loope
add
movsl
push
sub
fidivl
jg
push
bound
pop
cmp
adcl
mov
xchg
and
sub
icebp
xchg
dec
xchg
shrb
pop
js
clc
jno
add
and
sub
push
test
int3
fnstenv
pop
out
and
push
pop
adc
push
movsl
add
sbb
dec
mov
pop
inc
and
cmpsl
sbb
jns
xchg
leave
daa
xchg
test
pop
fdivr
ds
mov
shll
push
lahf
jnp
dec
inc
lea
push
add
dec
lcall
xlat
mov
xchg
sbb
stc
lret
push
lock
xchg
cmp
loopne
jbe
mov
jmp
add
mov
mov
xor
enter
negb
pop
pop
mov
fs
push
sbb
addr16
test
add
and
inc
cmp
in
enter
jge
pop
out
push
and
mov
mov
sbb
or
lods
xchg
pusha
mov
fimull
sub
pop
inc
xor
pushf
movsl
mov
mov
insl
shl
mov
scas
cmp
hlt
fcmovb
shlb
sbb
mov
push
add
aad
insb
cmp
testl
fwait
xor
adc
and
push
push
sbb
ljmp
jp
mov
jmp
mov
cmpsb
jp
cmp
lock
in
ficoms
dec
or
test
xchg
xchg
mov
dec
cmpsl
lret
sbb
adc
cmc
aas
inc
cwtl
out
aas
cmpsb
lret
jo
jg
sarb
and
insb
xor
sub
cli
mov
sub
pop
push
jmp
inc
push
cmp
ficomps
cli
inc
ja
dec
out
jle
enter
mov
push
pop
cmp
cmp
and
mov
mov
stc
enter
xorl
mov
or
jl
js
pop
cmp
jno
or
xchg
xchg
popf
mov
imul
push
aad
pop
insb
fiaddl
mov
sbb
mov
pop
mov
pushf
adc
ret
and
lahf
mov
and
loopne
mov
pop
inc
in
aad
mov
sbb
xor
addr16
jb
int3
pusha
push
push
push
dec
pop
pop
lock
bndldx
bt
ljmp
ret
pop
push
push
xchg
ljmp
loopne
pop
jno
pop
xlat
test
sub
aam
fbld
push
enter
jne
inc
inc
push
jle
adc
inc
cli
cmpsb
adc
sbb
mov
sbb
push
xchg
dec
scas
jns
lret
push
insb
push
inc
icebp
dec
enter
jno
push
fidivs
cmp
leave
or
cmp
subl
sbb
sub
call
jmp
sbb
mov
test
sub
loop
lcall
cmp
pop
inc
inc
or
mov
dec
sahf
adc
test
out
out
add
popaw
push
or
push
dec
jne
sub
push
inc
ja
add
lods
xchg
ret
add
int3
aad
dec
jl
xor
into
mov
cmpsl
in
mov
ret
rcrl
aas
adc
xchg
ret
add
in
xchg
and
sahf
push
notl
gs
in
inc
push
lcall
sub
adc
ret
inc
cld
filds
dec
lods
and
mov
imul
xchg
adc
lcall
loope
jge
mov
leave
fcmovnb
jne
xlat
and
xor
fildl
mov
popf
and
imul
sbb
stos
fabs
xor
inc
cmp
push
add
mov
imul
pop
sub
out
imul
add
dec
les
fwait
or
or
loop
fstps
daa
dec
shr
xor
push
xor
or
test
je
cmp
aas
sbb
jne
push
hlt
mov
clc
mov
adc
sbb
pushf
mov
lahf
adc
sbb
inc
xchg
inc
xchg
out
dec
adc
test
repnz
xorl
nop
jp
lcall
int3
sbb
loopne
cs
lret
push
jp
mov
jnp
leave
fdivl
cwtl
lds
xchg
fs
jge
add
pop
pop
jae
pop
enter
or
rcrl
rorl
mov
add
ficomps
add
scas
inc
shrb
pop
mov
xchg
fidivl
mov
in
popa
cltd
inc
pop
lret
aam
jbe
inc
pop
mov
mov
mov
cmp
xor
mov
aad
mov
es
xlat
sbb
xchg
fwait
test
dec
mov
cmp
push
cs
jg
or
inc
bound
lcall
xor
fists
dec
ret
int
int3
insl
leave
adc
jbe
into
insl
mov
insb
push
movsb
pop
mov
push
push
pop
xchg
or
and
xchg
or
jae
nop
mov
inc
in
and
repz
lcall
xchg
ja
adc
orl
mov
pop
push
adc
cli
mov
arpl
and
scas
bound
mov
jbe
inc
mov
nop
icebp
cld
cmp
xchg
lea
scas
out
xor
lea
iret
cmc
repz
push
fisubrl
test
and
shr
popf
shl
xor
push
add
and
mov
jmp
stos
cmp
in
mov
fbstp
xlat
shlb
das
cmp
push
sarb
lods
js
and
cmp
dec
xor
xchg
push
cmc
mov
or
test
cmp
sub
jl
mov
xor
fistpll
repz
sub
scas
sub
cwtl
sbb
enter
lds
ret
imul
mov
dec
push
lcall
sub
mov
push
cmc
jmp
or
shrl
repz
ss
out
dec
ret
lahf
scas
pop
adc
mov
mov
aam
adc
lock
push
xchg
jg
fstpt
dec
into
mov
push
sub
xchg
mov
mov
jecxz
or
and
imul
push
sbb
divl
jnp
imul
or
jno
ljmp
aas
sarb
pop
out
jp
xor
pop
in
jmp
pop
inc
and
pushf
fcomi
leave
sub
stos
mov
push
dec
testl
pop
into
mov
mov
push
push
dec
jmp
push
dec
push
dec
fs
fs
sbb
and
dec
sub
dec
ja
jne
jmp
fcoml
out
mov
dec
stos
jecxz
mov
test
xchg
mov
and
xor
imul
push
nop
mov
mov
cmc
mov
push
fmull
sti
mov
mov
and
ljmp
int
rcr
or
fidivs
xor
loope
lret
jl
pop
mov
ret
insl
lea
jecxz
xchg
sarb
jnp
xchg
lcall
push
mov
jne
movsl
jbe
dec
sbb
inc
xor
aaa
dec
xchg
notl
inc
leave
and
adc
into
dec
test
les
pop
xchg
enter
xchg
dec
lods
out
adc
int3
dec
add
out
sti
inc
lret
push
mov
xor
add
mov
dec
sub
add
leave
jno
ja
cmp
jg
cmpsb
inc
fistl
popf
call
dec
lods
xor
jae
mov
sub
pop
and
int3
inc
lods
mov
add
scas
mov
add
or
xchg
mov
sub
and
std
lret
push
jecxz
push
fldcw
jle
inc
mov
in
outsb
ret
stos
movsb
pop
mov
push
fildll
inc
inc
mov
fildl
inc
movsl
fidivs
test
xchg
pushf
xchg
dec
dec
cmp
test
inc
or
fs
push
sub
in
push
mov
pop
les
and
pop
mov
jl
into
mov
imul
scas
pop
pop
popa
and
push
cltd
pop
dec
pushf
data16
jle
mov
cmpsb
into
dec
adc
cld
cli
mov
fsts
push
sbbl
dec
lea
mov
cmp
cmp
mov
ja
sbb
xchg
shr
fiaddl
push
fmuls
mov
iret
push
scas
pop
pop
fstps
xchg
jp
xor
fsubr
jmp
rcl
push
out
data16
xorb
movsl
movsl
cld
js
jo
cli
mov
pop
pop
push
adc
gs
cmpsl
xchg
inc
fisttpl
sti
mov
mov
cmp
addb
add
hlt
sbb
xlat
pushf
push
test
push
gs
and
aaa
gs
xor
lret
mov
mov
ss
or
in
pop
add
mov
jp
jb
sarl
fidivl
xchg
lahf
cli
mov
add
or
jns
popa
adc
lret
ljmp
in
out
test
repnz
lods
sub
out
add
popf
mov
or
jge
and
sbb
xchg
add
pusha
or
daa
or
gs
cmp
ret
lods
dec
jns
dec
mov
pop
push
mov
xchg
inc
jae
or
xchg
gs
popa
mov
dec
shll
jp
test
out
pop
out
hlt
push
insb
mov
in
filds
lahf
icebp
jl
xlat
fldcw
pop
cmp
aad
fnstcw
cwtl
aas
push
mov
push
push
sbb
loope
sub
dec
mov
fsubl
jnp
or
jg
mov
xchg
jae
into
cmp
cmp
jp
pop
dec
inc
cmp
shrl
notb
jmp
mov
cld
lea
push
sbb
ror
inc
push
call
int
fs
les
adc
lods
lock
inc
addr16
mov
aad
std
sub
sti
mov
pop
sbb
add
push
pushf
bound
out
out
cmp
adc
std
lea
loopne
fcmovu
adc
ljmp
adcb
and
test
and
jge
mov
mov
or
cmc
mov
stos
sub
jmp
int
mov
mov
or
rsqrtps
mov
rcrb
ss
cmp
pop
das
lods
sub
ss
mov
dec
mov
xchg
out
inc
dec
inc
or
test
mov
lods
xchg
aad
jbe
xor
pop
mov
into
ret
pop
filds
call
cli
sbb
push
cmc
and
fldl
in
test
sub
jecxz
test
or
lods
push
jne
add
cmp
je
push
test
add
and
les
add
std
test
int
mov
imul
in
hlt
mov
out
aas
cli
insl
and
xor
in
fmull
mov
push
lret
push
jmp
or
hlt
lret
iret
add
add
ljmp
sbb
cltd
mov
test
inc
ds
pop
push
aaa
mov
xor
aas
or
roll
lcall
cmp
int
adc
jmp
lahf
lahf
push
pushf
call
shlb
or
call
mov
das
push
jecxz
sub
idivl
cli
fsts
sbb
sbb
leave
aaa
inc
inc
das
xchg
cltd
sub
bound
jbe
test
ds
sarb
or
xor
mov
or
loop
lock
daa
inc
cmp
or
movb
hlt
xchg
lock
mov
cld
out
xchg
xor
push
add
aad
pop
mov
repnz
aad
std
jge
into
rcr
or
adc
ds
jl
xchg
scas
stos
lret
add
jg
jmp
fmul
sub
insl
mov
sbb
jmp
jp
notl
test
sub
popa
cmpsb
sbb
iret
f2xm1
xchg
imul
pop
es
push
mov
mov
inc
cmp
adc
xchg
mov
inc
mov
popa
xchg
aas
mov
xor
jmp
lret
idivl
in
xor
sub
xchg
lcall
aaa
jmp
inc
add
stc
add
lret
sbb
xchg
jl
loope
mov
faddp
aad
adc
scas
lods
mov
xchg
hlt
dec
enter
sub
add
mov
mov
cli
fwait
andb
in
sub
mov
int
leave
sub
cmpsl
jecxz
inc
inc
adc
sub
push
mov
dec
xchg
test
adc
sub
jns
inc
push
jae
adc
jl
add
pop
sub
mov
aaa
mov
push
mov
mov
iret
sbb
loop
push
pop
mov
outsl
js
or
xor
and
jbe
es
sbb
xchg
shlb
xor
int
clc
or
adc
icebp
add
sub
xchg
sub
imul
test
push
in
pushf
push
or
sub
mov
push
mov
sbb
pop
lea
mov
fs
xor
mov
push
xchg
xor
test
dec
or
movsl
inc
test
mov
imul
pop
sub
adc
addr16
test
inc
sbb
aas
hlt
pop
ljmp
pop
xchg
rcll
xchg
push
dec
stos
mov
sbb
cltd
sbb
test
out
clc
ss
arpl
es
cmp
mov
sbb
scas
dec
sti
ja
xor
mov
roll
sbb
mov
cmpsl
or
cmp
stc
subl
dec
pop
xlat
xor
rorl
pop
push
scas
sub
loope
sbb
jb
insl
mov
fisubrl
addr16
add
adc
xor
xor
leave
jmp
pusha
inc
lods
cld
jb
adc
jno
xor
push
push
fists
sub
push
lahf
or
xchg
icebp
pop
das
dec
ja
mov
push
push
jae
mov
mov
push
icebp
iret
xchg
pmullw
lds
adc
mov
add
push
sbbl
and
test
cld
daa
mov
dec
push
int
mov
fidivl
xor
jp
loopne
fwait
insl
and
lret
push
jb
daa
std
ds
cmp
fmuls
or
cmpsb
mov
pop
sti
mov
jae
test
notb
fsubs
in
popf
adc
push
clc
lds
xorb
jg
jecxz
mov
loope
pop
negb
lods
call
pop
push
adc
sbb
das
out
cs
std
ds
das
cs
fnstcw
lds
loop
xor
fdivp
jecxz
pop
cmpsb
mov
xchg
xchg
mov
xchg
dec
push
jae
xchg
inc
xor
pop
pop
in
aas
scas
lds
dec
gs
bound
jne
sbb
int
jb
xchg
repz
aas
mov
mov
test
pushf
ss
xchg
ss
dec
or
call
xor
push
jnp
js
aaa
dec
inc
aad
and
mov
mov
add
add
popf
fbstp
sub
daa
in
dec
mov
movups
xchg
rcrb
or
inc
sbb
mov
aam
ja
push
cs
inc
pop
repz
cmpl
dec
push
dec
mov
add
cmp
xchg
and
outsb
hlt
in
test
dec
xchg
sub
nop
jmp
xlat
das
adc
cltd
xchg
sbb
dec
dec
cmp
mov
ss
jae
aas
cmp
xlat
enter
pop
enterw
gs
mov
add
xchg
jmp
push
sbb
mov
mov
jl
repz
enter
aad
push
pop
aad
mov
adc
aam
mov
sub
dec
dec
xchg
call
fidivrl
push
lcall
xchg
sbb
mov
in
push
or
xor
push
jl
daa
in
add
and
inc
cmp
ss
cmp
mov
mov
cmpsb
push
cmp
stc
addb
lret
sti
popf
sub
je
adc
xchg
fucomp
pop
lcall
loop
mov
sbb
enter
mov
mov
sub
jns
gs
sub
popa
sub
xorl
push
pop
pop
add
jne
rorb
push
iret
and
mov
jle
testb
xor
movsb
sub
xor
inc
pushf
insl
mov
sub
xchg
pushf
adc
add
in
test
std
stc
clc
push
repnz
xchg
imul
lea
fwait
sahf
call
pop
add
js
loop
jnp
and
orb
std
pusha
or
jl
jne
sti
cmp
push
xor
js
stos
call
push
aas
fimull
sub
dec
in
xor
insl
pusha
lock
jp
jge
or
imul
jecxz
gs
ljmp
pop
in
fsubrp
cld
adc
cmp
push
adcb
pop
jge
addb
sub
sub
adc
dec
sbb
cmp
mov
push
fldenv
sub
cmp
movsb
sbb
jl
cmp
cmpsb
inc
enter
movsl
lds
lock
fs
jb
dec
subb
lods
dec
out
sub
ljmp
mov
jle
push
sub
sbb
jmp
cmp
sbb
add
jns
pop
cltd
sub
or
in
inc
mov
js
int3
inc
inc
or
test
push
repz
rorl
cld
cmp
jecxz
cmp
cmp
mov
std
lea
mov
xchg
mov
popa
and
lcall
xchg
xor
mov
sub
stos
fwait
and
pop
lea
jne
pop
lock
cmpsl
pop
cmpsb
adc
outsl
mov
mov
or
ds
dec
loope
mov
jnp
push
clc
push
mov
mov
pop
pusha
pusha
mov
loop
enter
aaa
imul
pop
sub
adc
pop
ss
loop,pt
pop
aad
fisttpl
sub
inc
div
mov
pop
mov
std
inc
leave
xor
mov
repnz
mov
not
mov
movzwl
mov
mov
mov
movl
cmp
jne
cmp
je
mov
xor
or
add
mov
mov
mov
or
mov
sbb
xor
xorl
add
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
call
jmp
mov
xor
notl
add
movl
cmp
mov
je
mov
add
or
mov
mov
mov
xor
add
sbbl
imul
movl
mov
jmp
adc
mov
sbb
xor
mov
mov
xor
mov
sub
add
mov
mov
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
mov
xor
add
imul
mov
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
jmp
mov
xor
mov
sub
add
movl
mov
mov
movl
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
push
addl
push
andl
push
orl
xor
addl
push
push
push
addl
push
orl
push
addl
push
orl
push
call
movl
cmp
movl
je
andl
xor
movl
jmp
subl
push
call
addl
test
movl
jne
xorl
push
call
adcl
test
movl
jne
movl
mov
or
mov
xor
movl
mov
and
lea
mov
movzwl
xor
lea
movl
cmpl
je
cmpl
ja
jmp
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
add
mov
sbb
xor
mov
add
mov
mov
mov
mov
cmp
jne
sbb
mov
neg
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
call
jmp
xor
notl
mov
subl
add
xorl
mov
sub
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
add
and
mov
mov
mov
and
mov
movzwl
or
mov
andl
xor
movl
add
movl
mov
jmp
sbb
mov
add
mov
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
and
mov
mov
mov
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
push
push
pushl
push
call
mov
dec
mov
jmp
movl
xor
or
and
mov
mov
mov
and
mov
orl
mov
movl
mov
mov
addl
mov
xor
add
jmp
dec
mov
mov
or
mov
xor
lea
mov
adc
mov
push
mov
add
mov
xor
sbbl
lea
push
sbb
mov
sbbl
pushl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
xor
lea
mov
or
mov
and
mov
or
mov
mov
movl
xor
xor
add
xor
or
mov
add
mov
add
mov
sbbl
xor
lea
movl
cmp
jbe
sbb
mov
mov
xor
subl
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
xor
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
sub
mov
xor
mov
lea
mov
lea
mov
mov
xor
add
xor
add
mov
adc
mov
xor
xor
cmp
jne
cmp
je
mov
mov
cltd
add
adc
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
mov
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
jmp
mov
xor
add
adc
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
xor
add
push
push
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
mov
mov
xor
add
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
xor
xor
add
adc
xor
cmp
jne
cmp
je
movl
movl
movl
movl
call
mov
lea
push
pushl
pushl
pushl
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
sbbl
mov
and
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzbl
and
mov
orl
mov
orl
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
adcl
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
xor
or
dec
mov
jmp
mov
adcl
xor
push
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
subl
add
push
mov
movl
adc
xor
orl
xor
movl
push
mov
notl
movl
movzwl
movl
mov
mov
cmp
movl
jne
cmp
je
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
xor
add
notl
adc
mov
sbbl
mov
negl
xor
notl
xor
movl
mov
cmp
movl
jne
movl
cmp
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
mov
mov
add
mov
mov
orl
mov
mov
mov
add
push
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
pop
xorl
sub
add
movzbl
xor
mov
mov
add
movl
xor
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
xor
sbb
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
lea
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
sbb
mov
movl
lea
push
mov
xor
or
sub
add
mov
mov
sbb
mov
mov
andl
xor
mov
add
xorl
push
push
addl
pushl
xorl
call
dec
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
lea
not
xor
mov
mov
movl
mov
movl
cmp
jne
xor
movl
jmp
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movl
movl
adcl
mov
neg
movl
dec
movl
adc
mov
adcl
mov
addl
xor
subl
sub
sub
mov
movl
movl
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzbl
xor
mov
subl
xor
xor
adcl
lea
mov
xorl
xor
adcl
div
mov
mov
sub
add
mov
xor
mov
adcl
xor
xor
andl
sub
movl
cmp
movl
jne
mov
or
mov
or
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
andl
xor
andl
xor
movl
add
sbbl
add
movl
mov
movl
cmp
jae
lea
neg
mov
incl
mov
xor
add
movl
lea
mov
mov
mov
cmp
movl
jbe
adcl
addl
jmp
decl
addl
mov
adcl
xor
inc
incl
subl
add
cmp
movl
jb
mov
add
mov
mov
add
xor
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
movl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
sbbl
xor
movl
cmp
movl
jne
sbb
mov
add
mov
xorl
xor
xor
subl
sub
mov
movl
sub
subl
xor
xorl
mov
mov
xor
xorl
sub
orl
sub
movl
jmp
mov
or
mov
xor
mov
orl
sub
add
mov
mov
movl
cmp
movl
jne
mov
or
mov
mov
subl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
add
mov
movl
movl
mov
mov
xor
sub
sub
mov
movl
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
movl
mov
dec
and
mov
mov
movl
movl
mov
movl
movl
mov
mov
xor
sub
sub
mov
movl
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
mov
mov
xor
lea
lea
xor
mov
cmp
jne
decl
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
call
mov
dec
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
mov
movsbl
cltd
add
adc
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
jmp
mov
mov
xor
add
jmp
mov
mov
xor
add
pop
leave
ret
push
mov
sub
subl
movl
mov
mov
mov
and
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adc
mov
push
mov
adc
mov
movzbl
or
mov
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
add
imul
push
mov
mov
cmp
je
movl
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
mov
xor
add
mov
imul
add
mov
mov
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
mov
add
add
add
add
add
dec
add
add
add
push
push
inc
push
lods
sub
push
dec
movsl
and
add
imul
cmp
insb
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
push
mov
add
sub
add
add
add
add
add
add
add
sbb
add
push
add
sub
add
add
push
pop
add
cmp
add
push
add
add
add
push
arpl
outsb
inc
popa
je
cs
add
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
pop
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
add
imul
add
imul
add
push
add
push
add
add
push
push
add
add
jle
add
add
add
xchg
push
add
push
add
push
add
push
add
push
add
imul
and
add
imul
inc
imul
push
imul
pusha
imul
jb
add
mov
add
add
