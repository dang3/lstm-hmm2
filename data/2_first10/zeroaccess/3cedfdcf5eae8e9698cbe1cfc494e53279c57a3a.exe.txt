mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
mov
nop
push
nopl
jmp
mov
xlat
les
adc
les
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
mov
adc
mull
lds
filds
fcomps
inc
xchg
pop
sub
ret
shrl
push
les
mov
jae
cmp
pop
and
cmc
je
testb
int
test
sbb
sti
fsubs
pushl
cli
sub
rcl
out
popf
jne
lcall
push
addr16
adc
repnz
sub
push
dec
fsubp
jo
fstpt
lret
cld
pop
clc
in
rorl
loopne
mov
mov
nop
out
push
jmp
stos
out
rorl
jo
sbb
pop
push
cmp
jle
shr
aad
pop
clc
call
mov
or
add
ljmp
jg
xor
mov
inc
sbb
xchg
dec
add
bound
mov
pop
daa
fdivs
bound
hlt
or
cwtl
add
aaa
push
push
push
dec
repnz
dec
jl
push
out
inc
lret
ljmp
dec
xor
daa
pusha
adc
sub
int
cmc
loopne
xchg
push
insl
push
into
in
dec
sbb
lret
call
cltd
int3
mov
stc
sbb
xchg
lcall
cmp
pop
in
or
push
sbb
fisubs
xlat
shl
or
push
sbb
sbb
adc
loopne
pusha
lea
mov
iret
lret
xor
ret
adc
mov
in
lock
mov
mov
push
or
dec
jecxz
jmp
jl
and
fcomps
jl
mov
xor
imul
scas
sahf
pushf
aad
sub
or
out
mov
ja
ss
jl
shlb
xchg
stos
std
enter
gs
sbb
arpl
rolb
jb
push
ss
test
adc
rorb
adc
add
dec
pushf
in
xchg
dec
xchg
movsl
jg
pop
popf
stos
decl
mov
sub
sahf
jb
loope
cwtl
das
cs
cmp
cmp
mov
fcmovne
pop
shlb
xchg
mov
sbbl
cmp
dec
test
inc
jecxz
imul
testb
and
jmp
mov
es
loopne
push
mov
sub
pop
loop
je
dec
xchg
stos
lcall
les
mov
ldmxcsr
scas
or
xchg
ss
outsb
inc
xchg
dec
test
sti
lret
dec
jmp
addr16
pop
shlb
shlb
mov
fldt
sub
inc
aam
or
stos
mov
mov
jo
xchg
stos
sbb
test
repz
mov
and
popf
call
cmp
daa
test
or
push
gs
pop
out
push
aas
mov
jle
cmpsl
stos
dec
aaa
iret
daa
clc
int3
ja
jmp
jbe
lret
add
push
or
fstl
pushf
shrl
sub
sub
fstps
shll
scas
pop
clc
xor
mov
pop
leave
xchg
xchg
pop
sbb
mov
pop
pop
pop
stc
mov
popf
rcrb
out
jge
daa
mov
rcrl
inc
inc
jb
addr16
sbb
pop
adc
push
jmp
mov
test
pop
inc
in
dec
xor
dec
mov
ljmp
xor
bswap
sbb
mov
dec
fisttpl
mov
xlat
cmp
outsl
adc
dec
sahf
ss
sub
mov
pop
subb
ficoms
xchg
xchg
push
lods
pop
sbb
jp
add
push
adc
xchg
jecxz
xor
mov
and
cmp
shlb
inc
xor
cltd
daa
iret
ror
insl
aad
call
data16
pop
mov
xor
pop
sub
dec
or
ja
and
nop
jl
dec
fiaddl
dec
xor
mov
sub
test
pop
adc
movb
movsl
mov
jge
and
ret
pop
xchg
and
mov
fsts
jno
cmp
leave
call
inc
mov
cmp
repnz
or
out
jge
daa
or
inc
stos
lods
or
and
push
dec
push
pop
mov
push
xchg
sbbb
pop
ficomps
outsb
fldz
jp
ror
in
addr16
push
fsubs
mov
mov
das
xor
mov
pop
jge
cwtl
stos
or
lcall
ds
pop
push
sub
fwait
lds
mov
imul
loopne
push
repnz
ret
xchg
out
test
outsl
bound
int
or
xchg
clc
sbb
mov
fisttpl
add
push
leave
push
sub
dec
xchg
push
js
jp
xor
jns
fisubl
fstpt
cmc
mov
test
xor
adc
stos
jno
mov
es
int3
lcall
movsl
cmp
outsl
scas
ljmp
xchg
sbb
xchg
xchg
cli
push
mov
lods
mov
loopne
push
and
call
int3
bound
cli
xor
mov
push
js
or
dec
sbb
mov
adc
cltd
adc
movsb
daa
les
rolb
inc
fcompl
adc
icebp
cli
dec
jno
sahf
orl
fildll
dec
icebp
mov
subl
je
mov
mov
jmp
xlat
inc
sahf
pop
mov
push
mov
inc
mov
xor
stc
aaa
outsl
rcrb
int3
loopne
adc
cld
dec
add
fwait
rolb
lods
adc
pop
cmp
shrl
inc
movl
lret
jnp
or
ror
jo
mov
and
imul
fsubl
sub
rcl
loop
adcl
cltd
xor
jmp
fwait
stos
jg
filds
or
sbb
jb
ja
dec
mov
mov
out
jg
mov
adc
decl
lods
or
shlb
pop
jmp
rclb
mov
vpsubsb
lcall
xor
enter
or
pop
pop
sub
std
and
or
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
cmpxchg
sti
mov
in
dec
rcll
fstps
lcall
outsl
std
inc
mov
xor
out
das
imul
in
ljmp
clc
fstpt
and
jno
sub
adc
adc
add
sub
cli
pop
outsb
push
adc
add
mov
push
sbb
ss
test
jo
sbb
popf
or
jae
xor
out
xchg
fcoml
das
pop
mov
lret
loopne
jp
jmp
fmull
push
sbb
mov
call
ret
rol
xor
push
mov
imul
lahf
in
pusha
mov
pop
sbb
sbb
int3
mov
mov
xchg
cwtl
test
or
and
out
insb
dec
cmp
nop
sbb
stc
xlat
mov
sbb
data16
fsubr
sbb
sub
jg
or
push
lods
lret
cmpsb
movsb
imul
pop
and
dec
dec
mov
in
ss
ljmp
repz
aad
fnstsw
jg
adc
push
arpl
sbb
mov
push
mov
jae
mov
sbb
dec
sub
ffree
lea
mov
in
inc
ss
inc
xchg
lret
xchg
push
add
pop
into
in
enter
ja
movsb
mov
pop
lret
mov
shrb
mov
jmp
in
mov
jns
mov
fsubl
scas
adc
stos
gs
add
jae
scas
adc
jne
jmp
adc
daa
insb
cld
mov
pop
fcoml
fadds
mov
sbb
jge
adc
jg
inc
cmp
lret
mov
mov
push
int3
or
jbe
ljmp
adc
add
xor
lock
xchg
mov
movsl
add
cs
rcrb
or
push
mov
mov
adc
cli
adc
lds
jno
mov
cmp
mov
mov
ja
mov
sub
lods
sbb
and
inc
xchg
call
cmp
xor
pop
cmp
mov
add
xlat
mov
jns
subl
jbe
mov
sbb
daa
ja
add
ss
pop
fstpt
xchg
sbb
lods
mov
push
into
mov
add
das
loop
jp
and
lret
jne
subl
dec
setnp
cld
push
adc
aam
mov
xor
addr16
mov
lret
loopne
xor
fstpt
push
xchg
rorb
sbb
rclb
dec
inc
in
cmp
pop
jl
clc
and
mov
push
mov
fbld
rcll
or
xor
shlb
mov
stos
mov
push
inc
fwait
add
adc
cmc
xchg
into
mov
outsb
dec
add
push
out
or
testl
test
ja
stos
leave
loop
test
scas
mov
fs
cmp
pop
bound
xchg
adc
jnp
pop
outsl
loope
cld
movsl
push
test
cmp
mov
ds
cltd
pop
inc
adc
lret
cmp
sbb
in
mov
and
mov
dec
bound
ret
mov
cmp
adc
es
or
push
sbb
cmp
mov
sbb
je
sbb
daa
and
push
and
inc
mov
inc
push
fsubrl
cmp
lea
dec
mov
loop
push
insl
dec
addr16
sti
mov
test
test
sbb
add
test
data16
stos
repnz
cltd
andl
mov
stos
xor
rolb
mov
scas
or
roll
pop
sub
jg
pop
ret
int3
mov
aam
in
push
mov
or
sbb
pop
xor
nop
sbb
lods
hlt
push
outsl
xor
add
jmp
push
mov
cmpsb
nop
cmp
jbe
mov
arpl
dec
mov
cmp
xlat
jle
mov
fldcw
inc
gs
or
movsb
repz
or
ficoms
cld
xchg
test
adc
movsl
out
roll
adcb
test
ss
sbb
popf
bound
mov
mov
and
lcall
adcb
sarb
and
mov
add
je
jno
sub
inc
xlat
or
das
out
int
push
mov
leave
dec
cmp
rcr
xor
enter
or
cmpsb
add
loopne
push
sbb
call
scas
and
in
push
jns
inc
dec
or
mov
push
out
sub
mov
jnp
test
xlat
ror
lret
and
insb
cmc
bound
xchg
and
pop
jmp
cmp
lcall
cmp
sahf
shr
or
jne
cmp
mov
xchg
cltd
loop
xchg
cmp
add
pop
sbb
aaa
call
sarl
aam
mov
aas
and
rcl
aas
fadd
push
sti
insb
cmpsb
dec
scas
insb
sahf
scas
scas
sbb
shlb
lret
mov
enter
adc
sbb
pusha
push
fcom
mov
lods
fimuls
sti
sbb
pushf
jp
and
jbe
test
in
dec
out
nop
adc
out
mov
add
outsb
ss
lods
lret
dec
inc
pusha
pop
inc
cli
xchg
mov
movsb
inc
adc
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
das
hlt
jo
jbe
sub
jb
sbb
jns
sbb
loope
mov
test
xlat
sub
mov
add
xchg
addr16
addr16
push
in
lods
pushl
shl
jp
pusha
jns
and
lret
sub
push
xor
sbb
in
repz
push
jge
sub
push
lock
adc
cmpsb
push
inc
jle
add
loope,pt
mov
outsb
inc
or
push
mov
imul
inc
imul
push
jns
cmp
cmp
sahf
inc
mov
mov
testl
jb
shlb
pop
scas
rcl
mov
jmp
pop
mov
adc
xor
inc
sub
enter
lret
and
and
mov
xor
stos
jbe
movsb
loopne
jmpw
add
xchg
sbb
lcall
repz
jmp
sbb
xor
mov
mov
adc
cltd
add
jmp
push
add
popa
mov
xor
mov
inc
xchg
ljmp
sbb
fldt
pusha
cmpsb
nop
pop
inc
push
mov
mov
mov
dec
or
test
jmp
daa
mov
bound
mov
int3
or
ds
lcall
cmp
cmp
in
cli
push
dec
add
cltd
adc
lahf
or
add
sub
stc
sbbb
out
leave
imul
dec
pop
fstpl
pop
ja
jp
jno
sub
or
sbb
pop
jl
mov
data16
mov
sbb
arpl
outsl
sbb
mov
mov
mov
mov
fs
lea
push
sbb
jb
movsl
es
jbe
es
fs
lods
stos
fwait
sbb
ds
movsb
lret
push
push
gs
add
ja
jb
sbb
mov
pushf
ja
push
jne
adc
dec
mov
mov
sbb
scas
push
int3
push
lcall
bound
adc
cmpsb
sbb
xchg
cli
inc
sbb
sbb
enter
mov
js
xor
cmp
mov
insb
mov
push
inc
fdivr
push
cmp
leave
test
aad
shl
in
ret
scas
xchg
fidivrl
pop
push
test
fstpt
jo
movsb
fmull
lea
int
or
das
inc
sub
sbbb
dec
lds
cmc
ret
xchg
sbbb
push
out
xchg
aad
push
cs
pop
mov
xchg
fsubrl
sub
sti
mov
sbb
adc
shll
fdivl
mov
mov
or
sub
hlt
inc
dec
sahf
je
fwait
in
jecxz
xchg
hlt
pop
sti
xor
cmp
push
leave
insb
inc
iret
dec
sbb
sti
and
xchg
mov
mov
pop
hlt
mov
shrd
ss
or
les
loop
cmc
sbb
hlt
xorb
xchg
bound
mov
iret
out
or
test
and
push
adc
inc
xchg
je
adc
push
sbb
jp
mov
in
add
mov
loope
test
pop
inc
xchg
jbe
adc
push
test
fsub
add
add
les
mov
mov
adc
jo
daa
xor
jl
dec
inc
sub
jl
inc
cld
jbe
outsl
clc
or
push
inc
scas
sub
mov
roll
in
aam
cli
cltd
pusha
push
mov
and
into
lea
jecxz
xor
fistl
push
xor
lret
xor
cmp
mov
mov
inc
nop
mov
fwait
mov
push
fnstcw
and
enter
outsl
dec
in
movlps
jg
pop
adcb
xor
and
inc
mov
in
jne
outsl
dec
pop
sbb
push
bound
mov
in
shrl
dec
inc
aad
cmp
xor
pop
mov
nop
or
in
push
dec
icebp
mov
rcl
jno
xchg
loope
pop
icebp
push
pusha
imul
pop
adc
pop
push
movsl
xchg
je
sub
and
add
jp
mov
arpl
or
jnp
cli
inc
pop
imul
mov
cmp
rol
cmp
aas
mov
push
sti
divps
and
out
mov
xchg
jge
jnp
inc
pusha
mov
sti
jns
and
or
stos
daa
les
mov
fstps
or
xchg
cmp
inc
add
sub
pop
rcrb
sub
fadds
mov
xchg
sub
jmp
inc
xchg
xchg
fstps
push
scas
fstpt
scas
ljmp
add
cmp
lret
popa
jo
out
mov
push
cli
pop
aaa
movsl
inc
mov
jp
pop
lahf
cmp
xor
aad
add
xchg
popf
mov
and
jae
sbb
shlb
out
pop
mov
mov
xor
inc
sahf
imul
and
mov
add
mov
mov
pop
adc
cli
adc
pushf
dec
mov
ljmp
stos
sbb
xor
sub
enter
mov
dec
cmp
icebp
xchg
mov
or
idivb
dec
mov
jbe
mov
iret
push
jne
mov
push
icebp
imull
push
das
ds
imul
xor
jp
xchg
shrb
test
jg
cli
or
mov
cmp
inc
sub
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
fidivs
xchg
fimuls
pinsrw
paddw
push
ss
enter
push
loop
jno
dec
xchg
mov
and
or
test
out
or
es
sub
pusha
dec
lret
loopne
pop
pop
or
mov
arpl
pop
jo
push
ds
jg
pop
mov
pop
lcall
and
inc
push
cmc
cli
sub
push
cmp
scas
mov
int
or
inc
sub
xor
or
inc
out
imul
xchg
out
xlat
xor
mov
xor
lds
ds
iret
sbb
xor
cltd
fisttpll
je
mov
jne
mov
mov
data16
sub
inc
in
std
sbb
test
cmp
es
lret
cmc
xor
dec
les
icebp
fsub
stc
push
sbb
pop
movsl
fmuls
and
daa
repz
rcll
adc
xchg
stos
jmp
pop
nop
sub
xor
dec
sahf
mov
rol
inc
sub
out
jns
or
push
jmp
jb
mov
xchg
mov
or
jmp
bound
adc
jp
mov
addb
xor
int
shrl
sbb
subb
daa
xchg
xchg
lock
in
inc
add
mov
adc
sbb
mov
mov
pop
out
shrb
dec
insl
daa
ret
jge
nop
jno
add
fldenv
pop
lods
fldl2e
insb
xchg
xor
adc
inc
sbb
cmpsl
and
xchg
xchg
push
lahf
and
mov
inc
xchg
pop
in
pop
or
insb
pop
dec
lock
negb
xchg
jo
call
sub
jb
gs
mov
add
jg
addr16
jmp
loopne
lahf
sub
sub
cmp
insl
jle
hlt
std
dec
lock
imul
add
mov
jbe
inc
sub
aas
inc
loopne
and
mov
jmp
or
lcall
jg
sub
sub
clc
sbb
jecxz
arpl
mov
mov
shl
faddl
repz
cmpl
pop
mov
arpl
push
hlt
ret
ss
or
das
daa
in
dec
xchg
mov
mov
mov
icebp
rol
call
and
rorb
dec
mov
mov
inc
movsl
sub
cmp
cmp
outsb
jne
fst
jnp
lods
mov
cli
dec
pushf
in
pushf
lret
dec
push
cld
test
dec
sbb
addr16
sub
mov
lods
mov
jne
ja
jle
ret
jbe
frstor
mov
or
push
or
xchg
fs
ljmp
dec
xor
bound
cmp
xchg
cltd
sbb
inc
or
outsb
pop
dec
mov
cmpsb
and
mov
leave
and
push
adc
xor
or
rcll
jo
in
and
fists
aad
inc
lret
jl
fimull
and
xchg
mov
mov
outsb
subl
dec
mov
lds
push
js
daa
das
jle
dec
dec
and
jae
add
jp
xor
xchg
insb
and
and
adc
in
xchg
add
or
pop
pop
dec
in
dec
xchg
jmp
fimull
aas
adc
push
mov
mov
fs
lcall
mov
jnp
sahf
lods
in
add
test
aas
or
add
mov
subb
lahf
addr16
rcrl
push
test
add
adc
xchg
adc
and
jns
pop
call
lcall
movsl
test
arpl
push
rolb
adc
mov
nop
mov
ds
xor
sub
popf
cmp
mov
pusha
inc
push
xchg
call
jp
mov
push
pop
lods
icebp
movsl
mov
push
ja
stc
shrl
jge
lea
scas
sub
xchg
fistpll
or
pop
mov
mov
ja
or
add
insb
sub
rcrl
or
int
rcll
sbb
cwtl
adc
add
out
cmp
mov
jp
pushf
pop
in
sub
clc
call
push
fisttps
xor
int
push
and
lds
inc
ss
jno
xor
mov
faddl
in
xchg
inc
push
xlat
repz
mov
cmpsl
and
dec
scas
or
cmp
popf
push
pop
adc
and
out
popa
jle
subb
cmp
and
test
cmp
ljmp
movsl
sub
xlat
dec
pop
and
or
xor
add
push
pop
and
mov
add
push
mov
xchg
imul
sbb
push
addr16
mov
notb
fcompl
push
gs
inc
adc
or
push
ss
xor
and
add
cmpsb
mov
mov
xor
cmp
jg
out
sbb
loope
dec
and
popf
fdivp
outsl
pop
clc
mov
stc
push
sti
push
dec
mov
xor
dec
out
and
push
clc
cmp
xor
mov
cld
sbb
iret
xchg
pop
sahf
xor
sarb
ret
mov
std
into
loopne
aaa
mov
jnp
pop
sub
jnp
cmp
dec
push
dec
xchg
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
or
cmp
pinsrw
psubsw
test
stc
cmp
test
cmp
ret
mov
hlt
hlt
inc
loop
shll
xchg
out
aad
out
jmp
test
xor
cli
sub
ja
fnstsw
mov
cli
dec
lea
testb
jmp
dec
call
sub
xchg
pop
inc
inc
stos
or
push
push
in
and
mov
adc
inc
adc
popa
and
xchg
test
cmp
push
test
lret
cli
adc
cli
dec
sbbl
aaa
add
cmp
xchg
repnz
icebp
int3
nop
pop
stos
cmp
repz
pushf
add
or
pop
lods
push
movsl
cltd
subl
adc
mov
js
mov
push
aam
cmp
adc
cmc
adc
aas
jle
xchg
pop
jae
mov
rolb
sar
fcomps
ss
mov
mov
std
jl
pop
stos
leave
mov
test
outsb
lods
jp
aaa
inc
push
test
rclb
push
sbb
mov
ljmp
jecxz
test
div
lahf
mov
aaa
jle
adc
cmc
lcall
lock
in
dec
pop
in
ror
sub
mov
sahf
inc
in
imull
xchg
icebp
loope
adc
ret
mov
mov
jae
outsb
mov
add
test
out
pop
loopne
hlt
in
add
insl
movsl
stos
dec
mov
jne
popf
daa
inc
jne
cmp
mov
mov
outsl
sub
cmp
or
shl
pop
les
or
mov
xchg
pop
sbb
fs
shlb
cmpl
adc
mov
cmpl
stos
scas
imul
mov
fs
mov
movsb
fprem1
jge
mov
in
out
push
push
sbbb
and
pop
pop
mov
add
repz
push
inc
ja
ja
or
jns
js
inc
mov
das
inc
addl
das
or
dec
les
shlb
ret
loope
mov
out
popf
mov
push
fxch
add
ds
push
testb
pop
jp
jmp
cs
fldt
and
push
in
push
je
lock
pop
in
add
aaa
mov
sbb
out
xchg
cmp
cmp
cli
fistpll
je
fxch
push
jp
test
out
out
dec
or
insb
lcall
cmp
xor
add
andl
mov
dec
movsb
xor
fldl
mov
inc
dec
or
mov
mov
mov
outsb
pop
call
push
lods
xor
into
jb
cmp
pop
pop
lret
ficompl
mov
outsb
imul
scas
and
out
insl
sahf
mov
inc
into
ret
sbb
dec
test
imul
mov
pop
insb
cmp
out
adc
icebp
dec
add
or
inc
cmc
out
imul
in
cmpsl
cmp
arpl
mov
fstpt
dec
and
lcall
mov
scas
in
adc
cwtl
fdivrs
call
xlat
sub
adc
fstpt
lahf
add
cmp
aad
mov
fldenv
sub
cltd
js
test
mov
xchg
mov
jg
int3
push
movsl
idiv
subl
or
cmc
inc
nop
pop
push
cmpsl
or
hlt
stc
idivl
fsub
mov
stos
daa
xchg
xor
sub
add
int3
daa
inc
push
lret
push
pop
pop
sub
iret
jnp
cmpsb
stos
or
popa
cmc
stos
xor
inc
xchg
sbb
push
mov
in
je
mov
add
jp
ja
jge
mov
dec
test
int3
xor
mov
mov
pop
sub
jecxz
ficomps
cmp
jg
xor
or
leave
imul
loopne
loope
stos
push
fcoms
adc
jmp
fistl
mov
scas
repnz
mov
pop
inc
imul
loopne
jo
popf
shrb
dec
inc
dec
pop
or
std
sub
test
negl
pushf
mov
in
sbb
xchg
mov
dec
stos
sub
rcr
vxorps
cmpsl
sbb
cmpsb
aad
dec
adc
popl
stos
jns
adc
xchg
jle
and
push
xchg
mov
rcrb
iret
mov
xor
movsb
xor
jae
or
xor
mov
mov
pop
arpl
roll
incl
pop
ja
pop
fucomp
add
ja
call
pusha
inc
pushf
adcb
insb
push
imul
nop
mov
push
je
xchg
adcl
jno
mov
sub
cmp
inc
pop
cmpsl
cmp
push
nop
mov
test
insl
pop
aad
add
xorb
xchg
in
outsb
jmp
sahf
rcll
jno
mov
dec
insl
sub
shll
or
xor
sub
adc
adc
das
push
push
jns
pop
je
pop
outsb
out
neg
adc
jmp
ss
enter
cmpsl
push
addr16
xor
and
jbe
insl
movsl
imul
daa
shrl
adc
stos
sarb
cmp
cmp
push
aas
adc
adc
cli
adc
mov
xchg
xchg
and
out
loop
in
pop
scas
push
lds
ja
dec
xchg
sbb
fmuls
push
xchg
jl
push
clc
adc
inc
lea
and
repnz
test
clc
fdivr
lret
cmpsb
scas
sti
and
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
pushf
xchg
in
rorb
pinsrw
setp
ds
dec
or
stos
popa
inc
lahf
dec
xchg
ret
ljmp
fidivrs
jne
jle
movsb
sub
dec
jnp
mov
xchg
xor
pop
cmp
iret
shr
xchg
sub
mov
mov
imul
sti
mov
nop
sahf
cmpl
fimuls
xor
add
push
mov
fildll
adc
jb
pushf
cmc
and
pushf
xchg
jge
repz
push
adc
mov
mov
lock
in
jnp
ljmp
inc
adc
mov
in
sbb
cmp
fmul
ja
testw
rcrl
xchg
sub
cmp
xchg
jecxz
insl
ds
push
mull
or
mov
or
and
pop
pushf
xorl
adc
cmp
lods
into
lahf
cmp
popf
mov
enter
or
repz
and
loope
dec
or
add
xor
addl
rclb
pop
pop
mov
xor
mov
ljmp
insl
int3
add
addr16
loopne
mov
mov
loope
and
xchg
inc
jp
push
mov
daa
inc
mov
arpl
xchg
mov
aad
sti
daa
mov
repnz
faddl
dec
add
xchg
ret
or
ret
pop
inc
and
outsb
je
pop
jns
xor
ja
adc
out
dec
inc
stc
aaa
divl
push
movsb
lret
mov
sbb
mov
sub
xchg
or
sarl
scas
test
pop
out
popf
pop
imul
mov
orb
loop
lret
and
jbe
mov
pop
fistl
cld
sti
dec
lods
push
or
call
jo
into
or
or
push
push
cmp
mov
jbe,pn
jmp
pop
shl
mov
ljmp
push
inc
imul
pop
shl
and
push
push
insl
xlat
push
lcall
jns
dec
mov
xchg
repnz
in
or
push
cli
fistps
loopne
cmpl
call
stos
hlt
movsb
jp
mov
pop
push
xchg
aas
and
mov
push
fsubrl
mov
dec
xor
add
test
call
mov
or
xor
enter
pop
inc
mov
or
jno
push
mov
notl
jmp
mov
fcoml
add
sub
pop
fnsave
out
dec
jb
daa
jecxz
mov
filds
ljmp
push
testl
jge
ljmp
add
pop
and
mov
std
cltd
int3
fsub
and
sbb
pop
add
lods
loop
mov
icebp
xchg
mov
testl
popf
dec
adc
test
xchg
lods
mov
rol
imul
ret
bound
add
adc
mov
clc
rorb
push
add
adc
cmp
aad
mov
mov
fstps
mov
aam
insl
dec
mov
jno
cltd
jecxz
nop
cmp
push
pop
mov
or
cmpb
cld
stos
and
lahf
fildll
in
xchg
or
or
jle
add
cmpl
mov
iret
fisttps
push
mov
sbb
and
cwtl
rcr
mov
adc
out
xor
dec
or
mov
lods
fcmovnb
std
push
jp
ret
repnz
jp
andl
mov
rcll
test
lods
xchg
mov
out
adc
icebp
xlat
in
push
popa
xor
pop
cwtl
and
push
mov
jnp
push
fs
imul
lret
ret
mov
mov
scas
mov
add
or
fstl
fcmovbe
mov
dec
xchg
icebp
in
je
add
call
xor
or
jmp
or
dec
lret
inc
loope
in
push
push
lea
jecxz
aaa
jp
sub
inc
xor
and
mov
testb
adc
sbb
mov
sbb
sbb
sarb
std
mov
dec
adc
sbb
aad
dec
pop
pop
lret
mov
loopne
pop
mulb
inc
mov
or
pop
dec
jp
lea
cli
mov
test
int3
repnz
aam
inc
inc
pop
sbb
testb
push
stos
lods
ds
add
or
adc
loopne
imull
scas
push
bound
test
push
outsb
test
mov
sbb
jae
push
shrb
or
ficompl
mov
out
les
push
lret
dec
mov
data16
hlt
das
outsb
idivl
ret
sahf
rcrb
jne
and
call
inc
movsb
pop
cmp
pop
mov
cmp
fcoms
cmp
push
out
and
lcall
fwait
pop
aad
sub
test
pop
push
mov
cmpsl
xchg
mov
fldl
cwtl
mov
push
aaa
jmp
mov
addb
pop
aas
in
mov
pusha
cmp
sbb
in
jno
cs
or
test
or
repnz
inc
pop
sbb
sbb
ret
push
mov
xor
dec
pop
and
pop
fldt
dec
mov
or
add
cmp
xor
cmp
xlat
dec
pop
dec
filds
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
mov
les
pinsrw
pxor
push
outsb
xchg
jecxz
lahf
das
jmp
fwait
cs
or
jmp
and
adc
cmp
mov
daa
ja
cmpsb
cmp
scas
push
adc
dec
mov
call
imul
test
inc
sbb
outsl
inc
mov
orb
jns
dec
sbb
pop
mov
mov
xor
jle
clc
into
in
inc
lea
cld
shrb
pop
push
mov
cmc
xor
jge
mov
cltd
enter
std
fildll
es
mov
jbe
sbb
lea
cmp
and
xchg
es
gs
sbb
in
adc
dec
and
mov
and
mov
test
push
inc
cmp
xor
int
jmp
mov
or
jae
movsb
xchg
filds
popf
pushf
cmpsl
lods
dec
es
and
test
or
sti
fdiv
cs
ret
adc
scas
mov
in
lods
shll
lahf
out
mov
loopne
mov
loope
ss
jne
fiadds
cmpsb
push
movb
xor
push
out
mov
iret
and
mov
sub
mov
gs
pop
pop
inc
cwtl
jnp
jge
gs
mov
xchg
xchg
sahf
inc
mov
pmuludq
std
ss
ja
jbe
int3
aad
jge
mov
loopne
push
loope
dec
jmp
xor
xchg
mov
cmp
jecxz
and
jecxz
push
mov
jmp
movsl
outsb
mov
adc
add
addr16
cld
fidivrs
loope
mov
clc
mov
inc
lea
inc
lea
lods
xor
in
mov
call
adc
jo
cmp
outsb
inc
mov
cs
in
sar
or
notb
stos
mov
ss
inc
addr16
push
aaa
mov
push
dec
mov
sbb
out
cmp
stc
inc
adc
outsl
shr
lret
out
lahf
and
add
pushl
hlt
aad
jo
pop
addr16
inc
test
push
rorb
dec
xor
dec
cli
bound
idiv
imul
mov
mov
sub
jno
iret
incl
lock
and
shlb
dec
test
dec
je
jno
das
fadds
fdivrs
push
or
sti
js
xchg
dec
insl
movsb
inc
or
bound
xor
aam
cmp
mov
sub
in
mov
ret
mov
lods
pusha
cmp
inc
les
sub
in
add
jecxz
sti
jecxz
es
inc
icebp
lea
data16
icebp
ja
inc
adc
stos
and
dec
outsl
jb
lcall
sbb
addr16
out
ja
mov
add
in
mov
jl
loopne
pop
cwtl
ds
pop
or
jle
mov
mov
mov
loopne
call
push
pop
js
mov
mov
in
adc
pop
and
mov
sbb
sub
dec
push
mov
jle
lds
popa
mov
mov
push
pop
adc
ja
ljmp
and
push
cmp
gs
stc
mov
jo
ficompl
or
jmp
push
push
lcall
and
movsb
adc
outsl
in
jp
pop
mov
xor
mov
cmp
jge
lds
jo
imul
outsb
xor
mov
add
ja
gs
les
ret
xchg
mov
int
lods
jl
ret
sbb
push
adc
icebp
mov
sub
pop
xchg
push
imul
iret
xchg
push
lcall
loop
cmp
cld
mov
repz
push
mov
call
and
insb
shlb
mov
add
pop
add
int3
sub
sbb
daa
push
in
aad
sub
sti
xchg
mov
cmp
sbb
fmulp
inc
dec
xchg
roll
pop
xchg
xor
sub
mov
test
jg
sbb
aas
adc
addb
jne
sub
mov
repnz
leave
cmpsl
out
push
mov
fistpll
aam
cmc
mov
addr16
call
mov
pop
aam
mov
mov
out
std
loope
lret
je
mov
or
leave
dec
push
notb
or
ret
or
sbb
sbb
in
movsl
cmp
mov
xchg
neg
out
std
arpl
mov
mov
sahf
fmuls
add
fstl
mov
mov
and
jne
repnz
aaa
repnz
inc
stos
enter
nop
push
pop
adc
fnstsw
into
push
jle
cmp
add
inc
jae
enter
jp
outsl
xchg
aam
mov
jp
xor
stos
lock
jns
mov
test
pushf
leave
inc
mov
les
pop
out
testb
dec
sti
push
into
jo
mov
adc
pop
lcall
push
movsl
mov
bnd
lock
iret
mov
enter
leave
shlb
fildll
leave
movsl
cmp
dec
sar
xchg
xchg
imul
add
sub
inc
cltd
clc
jnp
negl
rol
adc
inc
mov
cmp
fcomp
dec
jecxz
mov
jae
arpl
push
lea
jo
xchg
ja
outsl
and
push
push
jecxz
shlb
jmp
addl
pop
sub
out
sub
dec
add
out
fsubr
add
stos
lret
inc
push
repnz
push
sbb
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
frndint
out
data16
pinsrw
rdmsr
mov
inc
and
or
pusha
jle
cmp
stc
pop
loope
pushf
ret
push
stos
mov
jns
scas
fbld
rcll
jle
xor
add
pop
or
pop
mov
jb
dec
inc
sti
push
in
jecxz
xor
pop
inc
sub
std
std
jecxz
ljmp
imul
push
adc
jp
in
jl
adc
divb
int3
cmp
outsb
movsb
sub
js
sub
lahf
or
mov
dec
sub
jnp
xor
jb
jle
sahf
jl
cmp
add
out
push
push
insb
cli
pop
or
cwtl
and
les
outsb
repz
or
std
dec
adc
mov
lcall
das
xor
lods
clc
mov
cmc
sbb
mov
jl
mov
fs
dec
rep
or
stc
rolb
test
mov
lds
or
xchg
mov
push
push
out
scas
xorb
add
sub
loopne
ret
lods
push
repnz
sub
inc
pop
jmp
lock
sbb
mov
lods
inc
cmp
rorl
flds
in
adc
push
mov
or
daa
mov
and
fstl
test
mov
or
sub
xor
push
sbb
cmpsb
xchg
pop
pop
cmp
jmp
and
or
fidivl
and
ds
push
sbbb
insl
xchg
mov
pop
xchg
gs
pusha
fs
fisubs
sarb
testb
mov
cmpsl
push
sub
push
add
fisubl
jnp
xchg
imul
push
pop
movsl
addr16
xlat
push
mov
mov
dec
or
and
out
cmc
out
adc
dec
jp
das
lods
fsubrl
js
int
bts
lret
jge
dec
jo
dec
ret
stos
mov
in
cmpl
int
dec
int3
mov
cmpsb
pop
daa
insb
fcomps
cmp
shrb
sub
inc
sbb
das
idivb
dec
jb
sub
sarb
outsl
stos
pop
sbb
in
in
dec
push
mov
xchg
fcomps
stc
mov
or
jo
mov
pop
xchg
or
push
pop
xchg
movsb
dec
push
inc
mov
sbb
iret
mov
inc
out
in
divl
pop
in
insb
xchg
in
inc
pop
or
push
cmp
lods
aam
sub
push
dec
in
pop
shl
add
testl
test
cltd
fnstenv
sbb
sub
cmpsb
clc
sbb
xchg
push
jne
mov
test
mov
mov
dec
cs
mov
jmp
fdivrl
sub
idivl
xchg
cmpsb
adc
cmp
xor
sbb
cli
sbbl
sub
bnd
jp
test
jp
xor
out
dec
push
inc
cmp
rcrb
push
mov
push
sub
stos
in
daa
sarb
inc
sub
mov
movsl
pop
fsts
and
popf
mov
and
pop
insl
rclb
add
ljmp
push
dec
jns
lret
push
mov
jo
test
movsl
jbe
or
movsl
jge
daa
sbb
lcall
cmp
cmpsl
add
add
cmp
rorb
mov
test
and
pop
test
inc
mov
cmp
movsb
dec
jne
stos
test
out
xor
arpl
push
adc
adc
outsl
sbb
inc
mov
popf
sbb
inc
and
aad
test
das
imul
adc
mov
jge
sti
rclb
mov
ja
sub
out
xor
rorb
sub
jle
jg
aad
xchg
stos
imul
jne
fcomps
sbb
shlb
std
out
shl
mov
call
add
mov
or
icebp
cli
xchg
cld
or
std
lret
icebp
cmp
pop
dec
cld
leave
out
inc
inc
ret
mov
outsb
xorl
add
xlat
fistpl
pop
mov
sub
clc
out
lods
sbb
xlat
push
and
andl
add
pop
leave
cmp
pop
pop
jno
or
fdivs
mov
aad
pop
cwtl
jle
scas
cmp
xchg
push
pop
das
adc
pushf
xchg
pusha
leave
sub
das
pushf
lock
loope
mov
inc
fistpl
popf
xchg
cmp
scas
cli
mov
outsl
jp
push
mov
shr
mull
ljmp
lcall
push
push
ja
fscale
adc
aaa
add
push
jbe
enter
adc
pop
psraw
and
mov
das
filds
sbb
jp
sub
and
insb
in
cmp
dec
jmp
cltd
jns
push
and
and
xchg
sarl
mov
popa
into
call
call
and
add
dec
mov
aaa
pop
and
xchg
mov
lea
jns
mov
cmpsb
cmp
loope
pop
pop
and
mov
fadd
push
push
fsubl
mov
lahf
xchg
sub
xchg
push
inc
call
cmc
pop
xchg
sbb
sbb
inc
pop
xchg
ds
mov
adc
loope
mov
jge
in
imul
pop
xchg
and
inc
or
stos
push
xchg
daa
cmpsl
es
or
jl
and
inc
push
scas
jns
inc
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
sbb
pushf
pinsrw
montmul
cmpsb
xchg
les
mov
fildl
sbb
out
test
test
xchg
adc
mov
or
aas
sbb
popf
mov
enter
int3
lret
dec
sub
es
incb
jns
mov
add
dec
iret
stos
movsb
dec
shll
and
popa
mov
xchg
loopne
add
pop
in
push
nop
addl
jmp
pop
test
bound
mov
cmp
decl
inc
push
and
into
inc
int
rcr
lock
aas
and
xor
add
ss
or
xchg
outsl
pop
mov
lods
xlat
mov
add
sbb
cli
ss
shrl
fadds
or
jecxz
bound
mov
pushf
pop
in
cwtl
inc
xorb
in
lods
inc
cs
sbb
mov
inc
lret
movsb
add
fistpll
mov
mov
out
cmc
out
mov
push
jmp
xchg
cmp
xor
jl
andl
test
ret
popf
adc
pop
cmp
aam
mov
pop
fisttps
mov
cmpsb
dec
sbb
pop
push
stc
gs
fiadds
adc
pop
lods
mov
push
addb
sbb
xchg
out
cld
rcl
icebp
push
mov
in
and
xor
in
std
sub
lahf
add
jge
push
idivb
adc
cli
aaa
stos
test
repnz
cli
jp
cltd
fistl
adc
movsl
fsub
and
xchg
cs
mov
ret
mov
je
in
lcall
mov
inc
adc
pop
mov
cltd
popa
mov
sar
andb
dec
and
imul
mov
rcll
jno
adc
add
ss
sub
push
pushf
xlat
add
mov
sbb
push
inc
pop
in
out
lcall
daa
jns
sti
mov
repnz
inc
jo
mov
xor
sub
or
mov
movsl
aad
sub
jmp
xor
adc
sbb
shrl
mov
jnp
mov
xchg
push
pop
cld
sbb
cmpsl
lods
test
ljmp
push
sbb
maskmovq
loopne
pop
push
imul
orb
add
cmp
pop
mov
inc
mov
sti
pop
cld
inc
jge
subl
mov
filds
enter
cli
xor
and
pop
and
add
imul
dec
dec
in
xchg
outsl
mov
leave
xchg
jl
popf
sbb
jle
xchg
xlat
jecxz
leave
mov
icebp
xor
fcmove
aas
adc
aad
inc
cli
push
jp
outsb
iret
rorb
cmpb
mov
enter
lods
cmp
shrb
adc
mov
or
test
mov
cmp
adc
inc
movsb
inc
dec
sbb
icebp
sub
fldenv
or
mov
add
and
je
mov
xchg
jo
sub
scas
cmp
pop
loope
jp
dec
mov
std
cld
adc
and
sbb
or
pop
cs
cmp
mov
mov
inc
insl
lods
data16
pusha
lret
adc
fldcw
fisttpll
add
into
ljmp
lret
xchg
xchg
pop
jbe
pop
dec
push
fisttpll
pop
adcb
and
clc
lahf
daa
lcall
jecxz
loop
sub
dec
jne
es
xor
iret
insl
jo
or
sub
jecxz
addr16
imul
jne
cwtl
fwait
adc
mov
loopne
cmp
mov
outsl
sub
sbb
mov
dec
insb
flds
lahf
daa
fsub
push
cs
fdivs
frstor
sub
xchg
jns
insl
or
xchg
inc
ds
jle
repnz
sub
loopne
fisubrl
rcrl
sub
mov
cmp
sbb
xchg
lock
xchg
add
shll
cmp
outsl
jnp
inc
leave
aad
pop
mov
aaa
mov
insb
pop
mov
in
jl
jl
lock
mov
jns
mov
test
mov
xor
xor
pop
add
add
sbb
movsl
fiaddl
in
xor
leave
test
std
inc
cmpsb
cmp
inc
mov
movsb
adc
inc
or
call
push
pop
xor
xor
or
mov
add
cld
pop
pop
mov
nop
popa
les
inc
mov
sub
lret
push
mov
dec
dec
adc
xor
mov
insl
clc
data16
ljmp
incl
pop
sub
lods
ja
xchg
es
push
repnz
sub
imul
lret
loop
sti
fstps
dec
or
mov
jb
mov
rcrb
sbbb
call
pop
cli
faddp
lea
fs
outsl
es
xlat
dec
mov
mov
mov
jae
mov
mov
add
push
push
xchg
mov
mov
push
sti
aam
cmp
jno
push
mov
scas
inc
jbe
test
or
inc
push
stos
mov
and
mov
pop
addr16
ja
pop
jo
or
mov
pushf
mov
loope
fnstenv
jmp
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
imul
mov
add
seta
clc
cmp
sahf
cmp
and
sbbb
xchg
inc
push
outsl
push
sbb
push
xor
ret
add
and
pop
xchg
add
mov
mov
xlat
rcr
daa
lret
pop
arpl
mov
jb
jo
dec
cmpb
ficoml
ja
rcr
sbbb
mov
inc
push
push
jge
or
insl
or
cmp
in
jno
scas
sbb
lds
ret
flds
xchg
icebp
jns
mov
add
lret
or
hlt
leave
lea
ss
ds
sub
sbb
sbb
and
sti
fisttpl
sub
add
jecxz
pusha
jl
inc
and
and
xor
mov
adc
sbb
loopne
or
imul
mov
lods
dec
ljmp
enter
mov
sar
pop
jmp
rolb
jnp
jnp
mov
adc
pop
jne
cwtl
call
cmp
sub
je
xchg
jae
pop
xchg
mov
aam
test
sbb
mov
arpl
mov
sbb
mov
ds
xor
sub
mov
push
add
cmp
stos
sti
dec
les
mov
pop
addr16
fwait
in
add
call
popa
mov
pop
lods
scas
mov
pop
mov
xchg
fs
ret
or
xchg
xor
mov
fnstsw
jnp
arpl
pop
es
mov
sahf
jge
pop
add
xchg
jb
leave
push
xor
adc
mov
push
lret
movsb
addl
add
cli
aas
mov
mov
sbb
rclb
cmp
sbb
jnp
bound
push
pop
ret
inc
xor
inc
inc
xor
lret
stos
scas
mov
jp
jg
fldcw
sbb
and
push
sbb
leave
in
in
mov
shr
pop
int3
test
mov
test
xchg
cmp
pop
insb
cmp
das
jo
xchg
inc
mov
inc
sub
add
lcall
xor
xchg
and
mov
insl
sub
fimuls
fmull
test
arpl
cmc
or
shr
jmp
sub
xor
flds
inc
jle
test
xchg
movsb
and
jl,pt
ret
jnp
inc
sbb
scas
test
imulb
sub
movsl
fistps
fcoms
aaa
fsubrl
push
aaa
enter
cmc
jge
xchg
outsl
scas
add
mov
or
cmp
cmpsl
xchg
movsb
loopne
xchg
jnp
and
xor
adc
enter
imul
out
jo
shr
xchg
stos
fs
nop
mov
lock
push
xchg
ret
mov
lods
test
xchg
lock
inc
dec
xor
lea
scas
or
cld
mov
fistl
xchg
mov
popa
inc
mov
push
cwtl
dec
mov
sahf
mov
ss
leave
lahf
or
insb
adc
popa
or
adc
adc
insl
ror
and
ja
jo
xor
sub
mov
xchg
mov
lea
lock
pop
popf
in
xor
rcrl
pop
or
clc
lret
cmp
stos
scas
jne
mov
cmp
mov
jecxz
insb
push
add
lods
mov
push
cmp
in
dec
stos
rclb
xor
lret
adc
fldl
cltd
out
inc
sbb
dec
filds
fdivr
sub
pop
xchg
movsb
push
lea
in
aad
arpl
shrl
cltd
lret
jl
js
cmc
lds
stc
push
jge
adc
sbb
adc
mov
int
testl
mov
inc
clc
push
jne
cli
push
bound
mov
dec
call
pop
lock
jns
shl
or
sub
jne
imul
cli
popl
jns
dec
arpl
std
pop
mov
push
movsl
cmpsl
ficomps
pop
mov
push
push
mov
movsl
lahf
cmp
pop
roll
and
xchg
inc
inc
loop
add
ds
and
mov
in
cli
mov
or
or
out
clc
aad
lahf
das
mov
xchg
fs
sub
pushf
std
notb
xchg
or
rcl
pop
je
mov
andb
icebp
mov
pop
pop
add
xor
lret
dec
xor
push
ljmp
jno
out
faddl
dec
lcall
movsb
insl
sub
and
jnp
cmpsl
aas
hlt
cmp
out
leave
in
sub
push
xor
shrl
mov
subb
adc
or
pop
ds
imul
int
jns
jb
and
mov
xor
es
pop
cmp
std
popf
mov
sub
inc
addr16
mov
sbb
jbe
andl
sub
pop
pop
fnstsw
dec
test
aam
and
or
cmp
xchg
pop
jle
xchg
jns
arpl
enter
pop
imul
iret
fcom
dec
pop
lahf
inc
inc
push
mov
or
pop
les
cmp
push
stos
sub
pushf
adc
adc
sbb
mov
sub
movsb
pop
add
push
inc
fcoms
xchg
add
inc
cmp
addl
arpl
jecxz
and
adc
push
fimuls
pop
int3
xchg
mov
mov
daa
xor
pop
push
fisubrl
sub
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
out
insb
xchg
adcl
inc
and
mov
aas
stc
dec
ret
loop
lock
hlt
mov
xor
pop
jae
filds
ds
insl
mov
xchg
ds
pop
std
push
scas
jl
bound
sbb
inc
les
or
xor
and
data16
enter
inc
cmp
adc
call
jno
fidivrs
xchg
fisubs
cmp
xchg
imul
jo
dec
xchg
or
fcmovnbe
outsl
iret
mov
xchg
adc
pop
popf
inc
outsl
xor
and
xchg
in
push
inc
out
pop
jne
sub
lret
nop
repnz
inc
testl
inc
in
mov
pop
cmc
jbe
mov
adc
dec
push
or
jns
mov
push
dec
xor
bound
nop
mov
in
pop
cmp
test
cmovne
int3
xchg
fstps
mov
cld
daa
jg
jns
ds
js
sbb
or
dec
fidivl
roll
or
cmpsl
adc
cli
mov
mov
jmp
into
jmp
cli
sbbb
jns
mov
push
loop
int
sub
pusha
mov
push
jp
out
sbb
ror
push
xchg
jne
repnz
fisttpll
fnstcw
mov
loope
xor
jno
sbb
jno
lock
adc
dec
jb
or
jns
push
add
nop
adc
notl
cld
adc
stos
push
icebp
sar
and
rclb
sub
insl
shr
pop
ret
xchg
cmp
jl
cmp
sbb
rcrl
or
lock
test
roll
int
hlt
shl
int
sub
arpl
mov
clc
add
add
es
aas
out
dec
jns
cmp
push
and
cmc
insb
or
lds
in
in
lahf
or
ja
xchg
xchg
lcall
repz
xchg
lret
adc
jecxz
cld
sub
add
outsb
lods
pop
jns
jns
sbb
mov
mov
lods
and
loopne
mov
leave
scas
sahf
cwtl
jnp
inc
pop
bound
mov
jae
hlt
call
cmp
scas
mov
cmp
and
jle
fdivs
dec
mov
es
push
rolb
sub
enter
push
pop
cltd
inc
loope
pop
xchg
test
push
xchg
cmpsl
sub
daa
or
cltd
in
repz
mov
iret
in
jo
incb
pop
inc
or
or
dec
rcrb
mov
push
ret
sbb
ljmp
je
push
xchg
imul
or
jno
xor
xchg
test
leave
imul
rorb
fsubl
dec
addb
inc
mov
insb
loop
and
pusha
and
pop
add
sbb
pushf
xor
sbbb
inc
fwait
int
sub
or
aas
sub
pop
push
hlt
scas
test
call
ret
push
ds
add
cmpb
mov
xchg
rcrl
idivl
hlt
data16
nop
push
xchg
pop
add
lret
adcl
aam
in
add
dec
sub
cmpsl
mov
pop
into
mov
push
pop
outsb
cmpsl
nop
mov
jp
dec
stos
inc
xor
mov
inc
fnstenv
dec
icebp
cs
imul
and
cmp
cmc
daa
clc
xor
xlat
mov
xchg
pop
and
cltd
in
inc
subb
jo
bound
mov
in
xchg
fnstenv
pop
pop
or
and
setge
mov
xor
cwtl
rcrl
sarl
es
and
push
cltd
or
and
pop
xchg
lret
pop
cmp
enter
dec
aam
dec
jmp
fcomi
or
mov
cmp
sbb
cmp
push
enter
pop
arpl
test
push
lahf
fsub
dec
jb
cmp
imul
cli
int3
test
cmpsl
push
fidivl
movsb
cmp
xor
xchg
es
jnp
mov
das
sub
add
jl
xchg
aad
into
mov
mov
jb
push
mov
mov
ss
call
sbb
js
xlat
jbe
adc
push
sbb
rclb
cmpsl
loopne
fisubs
sbb
pop
pushf
icebp
mov
push
insb
cmp
adc
pop
jne
imul
add
jne
dec
pop
das
data16
and
inc
lods
leave
lahf
or
mull
loopne
jmp
test
mov
iret
aad
imul
add
push
push
cmc
sbb
data16
sti
inc
shrl
cld
imul
pusha
cs
dec
outsb
cmp
cmpsl
int
andb
leave
and
mov
sar
addb
js
stos
jp
inc
push
imul
aas
inc
or
mov
sahf
ljmp
push
stos
hlt
cmp
cmpl
inc
das
les
fstps
jb
sbb
imul
cmp
movsl
stos
dec
sub
xor
xchg
inc
sbbl
jle
shrl
push
dec
xor
in
sbb
inc
and
jmp
push
je
hlt
js
add
and
hlt
add
jns
daa
sub
mov
dec
mov
movsl
neg
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
and
jb
xor
add
jae
add
cmp
es
cs
nop
test
push
cmp
jb
jp
or
pop
fistpll
insb
add
call
xchg
xchg
stc
stos
or
xlat
mov
ficompl
mov
xor
sbb
aas
sbb
jl
stos
mov
inc
add
std
aam
xlat
sahf
aas
mov
add
jg
clc
enter
fwait
pop
jbe
dec
jp
cmp
les
cwtl
inc
in
daa
dec
pop
and
lods
ja
mov
and
jecxz
jo
cmp
mov
daa
add
mov
push
cltd
pop
stos
sti
das
out
shrl
gs
or
std
inc
popa
cmpb
shl
inc
std
mov
loop
cld
and
pop
dec
cmpsb
xlat
stos
mov
sbb
inc
jne
sub
popf
leave
jns
dec
sbb
stc
nop
aaa
dec
dec
cmp
je
clc
lret
or
add
jbe
insb
xorl
lcall
sbbb
and
aad
scas
pop
imul
xor
sub
ljmp
inc
imul
lods
outsl
pop
xor
add
push
lret
out
out
in
call
in
mov
loope
loope
jl
fldcw
and
push
adcb
mov
mov
cmp
in
pop
orl
aad
out
push
xor
fcmovbe
outsb
cmpsb
cmp
enter
insb
lock
pop
les
ljmp
xchg
xchg
test
sbb
or
sub
cmpsb
add
lret
insb
cltd
jo
dec
inc
xchg
mov
mov
cmp
xorl
in
mov
mov
sub
nop
mov
lods
mov
mov
add
pop
scas
dec
movsb
stc
in
sbb
inc
jecxz
aad
add
scas
jns
sti
add
test
je
jb
or
inc
mov
leave
fs
pop
jae
fnstcw
jge
xchg
out
sub
jae
cmp
imul
sbb
mov
sub
mov
daa
sub
fildl
inc
push
jb
mov
push
fldcw
mov
dec
adc
or
mov
inc
lret
data16
addr16
xchg
aam
xchg
lea
add
stos
xchg
in
xor
add
test
es
popa
stos
daa
push
push
jno
dec
repz
add
sahf
inc
xor
hlt
jle
xor
pop
add
repz
aas
push
and
mov
mov
push
fldenv
lock
cmc
sbb
pop
cli
roll
sub
lea
or
sbb
leave
cwtl
mov
call
xor
jp
loopne
mov
adcb
in
fdiv
xchg
hlt
jmp
fs
shll
or
push
push
rorl
fcoml
popa
decb
fnstsw
pop
popf
or
and
pop
xchg
dec
jge
movsl
test
inc
adc
mov
fldenv
push
fidivrs
bound
xor
pusha
in
add
lds
sub
std
push
movsb
gs
cltd
jmp
or
inc
lahf
mov
mov
out
cmp
dec
push
arpl
dec
test
mov
sbb
jge
jg
dec
pop
ret
insb
daa
orl
adc
mov
orl
in
popa
in
mov
xor
je
mov
cmpsl
xchg
mov
xor
bound
jb
jne
out
pop
fldl
mov
outsl
fs
adc
and
sahf
int
mov
pop
jno
ficoml
out
xchg
mov
fdivl
sbb
xor
push
fbstp
push
int
jnp
push
popa
outsl
and
repz
pop
jb
std
push
sub
fisttpll
sarb
popa
push
pop
sti
lods
outsl
dec
adc
adc
nop
push
adcb
pop
in
xor
lret
fwait
ss
shlb
in
repz
mov
mov
insb
lret
mov
fcoms
inc
ja
inc
std
cmp
sti
adcl
jae
push
adcl
sub
jecxz
jmp
fsts
leave
iret
sti
repnz
fcmovnu
pop
aas
call
mov
inc
xchg
stos
out
inc
mov
shrl
in
stc
sahf
push
ss
mov
out
push
out
loopne
sub
lods
ss
sub
mov
mov
and
dec
shrl
scas
das
jnp
in
adc
rclb
mov
daa
pop
iret
mov
flds
sub
jge
adc
mov
loop
sbb
pushf
pop
push
xor
cmp
and
or
xor
in
dec
rclb
subl
and
ftst
clc
sbb
repz
xor
les
in
in
inc
fdivrp
cmpsb
inc
jecxz
xor
sbb
adc
in
and
fldcw
inc
loop
sti
scas
in
pop
insb
and
adcl
mov
test
jmp
mov
pop
mov
mov
outsl
pop
or
adc
ss
jl
in
jmp
sub
jns
push
or
andb
and
sub
pop
lods
sbbl
fmuls
cltd
fnsave
mov
sub
test
rcrl
movsb
orb
andb
fadds
das
mov
fsts
jecxz
arpl
push
pushf
bound
outsl
xchg
xchg
mov
jmp
mov
inc
xchg
xchg
lret
and
or
pop
mov
cmp
cmp
rcpps
xorb
shl
clc
sub
mov
or
jbe
pop
js
pop
mov
dec
sbb
pop
in
icebp
push
pop
lds
addl
cmp
bnd
xchg
inc
cmp
test
mov
inc
xlat
dec
jne
in
gs
or
pop
and
pop
cli
cmpsl
push
shrl
mov
mov
shl
mov
xlat
ja
xorb
jmp
cs
dec
adc
and
fsub
inc
shlb
fcomps
push
out
add
adc
lock
mov
int
fsts
aad
or
cmpsb
jle
gs
lahf
pop
pop
data16
cmpsb
and
cwtl
daa
scas
arpl
andl
nop
popa
push
push
adc
xchg
testl
xchg
sub
dec
lods
in
xor
insl
out
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
xchg
repz
pfmax
imul
out
ret
rolb
xchg
mov
push
nop
cli
fsubl
testl
mov
gs
sbb
and
scas
sbb
movsb
jecxz
imul
cmp
out
sahf
mov
xor
jmp
les
sahf
xor
push
popa
ret
push
bound
sbb
mulb
lcall
dec
or
lds
cmc
add
imull
std
ja
mov
hlt
iret
out
into
mov
stos
add
lcall
dec
popf
fidivl
mov
inc
xor
imul
int3
jno
aas
pop
popf
add
mov
pop
push
xor
scas
jo
lods
jge
adc
xchg
fdivs
ds
subl
cmc
dec
test
test
mov
dec
popa
sti
aad
xor
pop
inc
arpl
and
lret
add
sbb
cmp
pushf
lock
and
jb
xchg
das
xor
jne
ud1
mov
out
xchg
inc
test
sbb
push
push
pop
mov
les
enter
xor
add
push
std
mov
cli
push
pusha
andb
jb
test
inc
lret
jle
dec
add
mov
xchg
lahf
shlb
push
dec
xchg
hlt
ffree
std
push
sub
cli
dec
repnz
cwtl
adc
cmp
into
loop
mov
pop
dec
fmull
mov
adcb
pop
rcr
int
int
mov
dec
mov
dec
fistpll
out
add
pop
stos
lret
or
mov
jle
jae
cmp
xchg
cld
mov
loopne
dec
cmp
mulb
nop
push
push
div
lods
adc
xchg
mov
and
jo
insl
sahf
or
pop
mov
cmp
adc
fisttpll
fadds
pop
ss
int3
jle
adc
adc
lods
scas
and
mov
data16
mov
add
jmp
fimuls
scas
lods
stos
jnp
outsl
mov
push
icebp
lret
rcr
leave
je
aas
into
pop
adc
outsl
daa
ja
mov
ja
imull
pop
divb
push
nop
mov
mov
mov
into
mov
jne
adc
sub
jno
add
push
cmpsl
shlb
and
mov
and
out
add
lea
inc
xor
jmp
and
jmp
push
sbb
mov
xchg
dec
sti
adc
enter
pop
push
or
push
ret
lods
rolb
and
movsl
dec
in
cmp
call
jecxz
cli
mov
xchg
fucom
aas
ja
mov
repnz
inc
fcompl
mov
test
aas
push
sbb
or
cs
mov
jbe
jo
dec
jle
or
or
rclb
shlb
fs
pop
scas
repz
push
add
hlt
jbe
cltd
adcb
loopne
cs
imulb
mov
gs
jbe
cmp
inc
aas
cmp
mov
jecxz
xchg
rcr
mov
cwtl
cmp
mov
int
fildl
add
cmovle
pop
stos
cli
push
dec
cmp
mov
adc
xor
push
jne
test
pop
sub
cmp
repz
arpl
inc
lret
mov
mov
xor
das
bnd
out
add
mov
dec
mov
sub
xlat
popa
mov
dec
sti
cmp
lock
aam
jecxz
outsl
movsl
xlat
cmp
popa
inc
das
enter
aam
adc
xor
test
int
push
mov
add
pusha
outsl
rolb
jnp
pop
lods
pop
dec
out
cmp
jle
or
push
dec
test
mov
repnz
inc
rcrl
push
xor
faddl
pusha
sub
es
loopne
mov
adc
sbb
dec
jle
cli
shrb
sub
in
loop
mov
dec
jmp
pusha
pop
outsb
and
mov
bnd
cmp
fs
fcomp
sub
and
ficompl
add
clc
and
stos
cmp
fcomps
mov
insl
rolb
lret
leave
cmc
test
cmp
sbb
out
or
push
jl
rorb
nop
pop
movsl
push
mull
pop
push
fidivrs
popa
cwtl
scas
and
dec
or
push
mov
shll
shr
scas
out
mov
and
push
add
mov
cmp
pop
jge
nop
jno
xor
or
mov
popf
lahf
cmpsl
ss
rep
cmp
pop
bound
mov
inc
ret
test
adc
repz
pop
daa
jbe
inc
fwait
daa
jge
in
pop
mov
xchg
jnp
in
add
xor
sbb
jp
sbb
sti
mov
movsl
lret
xchg
leave
adc
cmp
iret
push
lahf
rcll
popf
or
cmp
sbb
xlat
cmp
movsl
adc
js
adc
xchg
movsl
pop
arpl
pop
ljmp
data16
ficoml
and
fildl
pop
fisubs
jecxz
insb
jl
cwtl
pop
jno
add
fisubl
cmp
push
add
lods
add
in
mov
mov
jecxz
push
testl
pop
dec
neg
push
cmp
inc
mov
aaa
leave
cmc
sbb
add
sarl
sahf
sbb
clc
loope
in
stos
fistpl
leave
xor
inc
pop
jbe
mov
xchg
test
dec
sub
je
das
rcrl
in
jmp
fwait
push
mov
in
adc
inc
cmp
jbe
arpl
loope
mov
loope
dec
or
loop
cmc
sahf
mov
xor
xchg
xchg
sbb
mov
repz
leave
fwait
sarb
ljmp
jo
sbbb
adc
or
shr
inc
data16
sbb
stos
icebp
test
cmc
jne
pop
inc
mov
mov
adc
stos
arpl
sbb
lcall
fmuls
stos
jge
dec
mov
sub
mov
out
bound
leave
dec
or
and
xlat
cwtl
and
sahf
add
mov
addb
push
sarl
mov
push
xor
sbb
mov
lds
and
pop
dec
stos
cltd
cmp
inc
pop
xchg
add
mov
jmp
lods
arpl
adc
std
loope
stos
jmp
push
addb
out
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
test
pop
add
adc
sbb
push
jnp
aaa
mov
outsb
loopne
xor
mov
lock
out
daa
xor
pop
ljmp
xchg
fcoms
scas
add
ror
out
add
xorb
ret
inc
pop
popa
out
push
push
inc
dec
lods
pop
popf
fldt
out
dec
jl
xor
hlt
out
xlat
clc
cltd
push
test
add
ror
sbb
dec
dec
shlb
xorb
jo
jns
xchg
lods
loopne
mov
mov
mov
cld
lahf
dec
pushf
and
sbb
push
insb
sbb
xchg
out
mov
push
and
lods
je
mov
std
add
add
in
fildll
push
jne
and
mov
push
arpl
sub
sub
mov
insl
test
or
ja
loop
push
jmp
cltd
and
scas
cmp
shlb
mov
xchg
xchg
in
int3
sub
pop
in
stos
and
fwait
cmpsb
jbe
mov
scas
inc
jns
jp
sbb
push
test
add
not
mul
subl
out
leave
push
lret
test
addr16
shl
mov
xlat
push
mov
and
aad
xchg
pop
pop
pop
js
jecxz
ror
out
pop
jg
pop
mov
add
mov
fcmovnb
or
in
stc
mov
loop
shrd
fldt
mov
add
mov
sub
jne
pushf
jecxz
mov
or
fcompl
xor
sbbl
fisttps
add
bound
xchg
and
js
mov
cmp
repz
mov
cmp
addb
unpckhps
fs
and
sbb
jg
mov
and
sbb
add
enter
mov
mov
mov
jno
xchg
dec
sub
sub
cmp
xchg
adc
sub
roll
and
jnp
lds
mov
cltd
nop
xchg
mov
mov
cmp
xchg
das
adc
outsb
leave
popf
xsaveopt
adc
dec
push
jb
xor
inc
mov
sbbb
sysret
mov
lods
and
xchg
sub
xchg
imul
adc
adc
push
loop
jnp
lods
mov
jl
lret
lret
or
cmpsl
jb
adc
mov
and
notl
adc
in
outsl
push
das
insl
jb
inc
dec
xor
fistl
mov
add
out
adc
les
ret
cmp
jge
inc
sahf
dec
xchg
and
xchg
fwait
or
test
inc
mov
add
lds
fs
mov
jmp
aaa
inc
xlat
fsubrp
xchg
pop
outsb
jnp
add
mov
mov
sbb
div
pop
fadd
lret
vminsd
mov
out
cmp
mov
xchg
aad
mov
pop
mov
push
xchg
sub
add
mov
push
pop
mov
mov
scas
lret
jmp
cmp
inc
lods
int
sub
pusha
push
pop
push
nop
jb
rol
call
jp
push
test
fildl
test
xlat
ja
sbb
dec
test
xchg
icebp
xor
test
pmullw
mov
xchg
icebp
testl
das
inc
push
cmp
xlat
into
sub
iret
scas
lahf
mov
cmpsb
mov
mov
daa
xor
sbb
out
mov
dec
fistpll
cmp
daa
pop
jns
cmc
mov
psllq
xchg
adc
lods
imul
adcb
add
cmp
xor
push
cmp
jnp
or
cmp
xor
jo
movsb
repz
xor
add
dec
sahf
mov
fstpt
iret
dec
es
mov
test
or
xor
les
insb
jo
gs
js
mov
mov
xlat
pop
popa
daa
push
add
cmp
or
imul
lods
and
andb
xlat
sub
cmp
in
into
dec
into
and
sub
mov
mov
cmp
decl
xchg
push
push
push
jo
sub
shrb
outsb
sub
xlat
in
adc
adc
mov
pop
add
in
mov
ljmp
mov
mov
fcoms
fldt
cmc
icebp
roll
js
xor
add
jo
mov
mov
and
push
pop
inc
iret
andl
cld
fidivrl
aas
addl
push
and
adc
imul
fadd
or
lea
dec
sub
outsb
fcos
pop
dec
dec
and
ljmp
mov
jmp
inc
ret
jg
xchg
pop
xchg
andb
jmp
pop
test
sub
mov
push
clc
rol
add
imul
jmp
jmp
arpl
stc
push
xchg
pop
fcoml
mov
les
push
in
push
pop
jne
push
lahf
sub
insb
cmp
cmp
push
and
adc
cltd
push
and
push
js
bound
outsb
jle
or
cmp
in
push
sub
gs
fsubrl
nop
rclb
cmp
push
jmp
out
add
xor
dec
sbb
repnz
lea
mov
sub
ret
jbe
pop
xchg
or
icebp
movsl
jmp
push
outsb
mov
jne
pop
shl
pusha
adc
repnz
jl
xchg
je
jmp
dec
push
or
and
test
mov
pop
insb
dec
xchg
push
ret
gs
xorb
cmpsb
incb
iret
cmpsl
lods
xor
mov
aad
adc
jne
cmc
xchg
xor
and
xlat
mov
add
mov
stos
or
adc
mov
sbb
xchg
out
add
jb
jae
dec
outsb
mov
mov
pop
fisubrl
add
mov
pop
pop
xor
daa
xor
cmpsl
jecxz
inc
out
ss
xorb
xor
ficomps
leave
mov
dec
fstpt
or
and
leave
nop
aaa
inc
adc
fsubl
mov
cmpl
int
mov
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
stos
adc
mov
add
outsl
gs
outsl
sti
mov
and
xchg
inc
std
cld
jecxz
cmp
fiadds
xchg
out
add
sbb
movsb
decl
mov
daa
xchg
jmp
and
cmp
mov
add
stos
xchg
scas
bound
xchg
test
push
dec
cmpsl
xlat
adc
sti
push
or
or
dec
sbb
mov
subl
cwtl
les
pop
add
pushf
mov
pop
cwtl
push
push
faddl
push
in
in
xchg
mov
aaa
aas
addr16
push
jle
lock
rorl
sub
fsub
arpl
push
in
mov
out
mov
inc
xchg
sbb
push
lret
mov
push
mov
insl
jge
imul
pop
aam
dec
incl
mul
or
lret
xlat
mov
sub
out
adc
sarl
jo
push
xchg
cmp
lahf
push
sbb
arpl
out
pop
mov
xor
sbb
mov
adc
mov
dec
pusha
lods
decl
jae
loop
nop
jo
jmp
jg
aas
in
jne
lock
mov
dec
inc
je
and
add
into
inc
pop
test
repz
cmpsl
inc
scas
mov
mov
and
aad
jo
mov
cmp
jno
mov
lret
iret
icebp
lds
xlat
and
lods
mov
xor
or
mov
cld
add
in
fsubrp
iret
out
clc
mov
dec
xor
sbb
testb
xchg
subb
stos
addr16
jne
cmpsb
jp
sbb
add
rorb
std
mov
sub
adc
sarl
loope
dec
mov
xor
mov
cs
mov
inc
cltd
inc
scas
insl
test
xchg
ret
test
cltd
sbb
dec
jae
xchg
cmp
out
jecxz
mov
ja
mov
push
fisttpl
pop
xchg
stos
jne
pop
sbb
xlat
fdivl
fwait
std
push
enter
fisttps
push
push
and
jns
adc
scas
popa
xchg
fld1
mov
pop
pop
int
test
mov
aam
enter
cli
dec
repnz
cmp
stc
roll
inc
xor
fwait
loop
int
mov
lock
mul
mov
sti
in
sbb
scas
inc
je
cli
mov
ss
out
mov
gs
push
icebp
or
push
inc
jnp
sbb
fadds
inc
mov
cmpsb
call
stc
and
cmp
mov
adc
cmp
mov
push
mov
cli
shlb
and
movsl
or
lahf
xchg
adc
popf
fcompl
jbe
cli
pop
shlb
enter
and
int
jle
cmpb
scas
lods
sub
inc
dec
push
pop
gs
xor
add
leave
pop
and
pop
mov
insl
out
pop
cmpsl
mov
loop
jge
aas
inc
mov
fcomp
mov
sub
loop
jb
loope
addr16
in
ljmp
cmp
or
sub
and
push
mov
pop
outsl
aas
mov
popf
and
rclb
es
inc
ret
lret
pushf
inc
jne
push
je
adc
out
pop
or
xchg
jne
shlb
cmpsb
sti
push
push
rcl
repz
in
lods
and
test
mov
jecxz
xchg
leave
lret
jo
imul
sbb
inc
mov
pop
adc
sti
shlb
sahf
scas
sahf
adc
add
das
sbb
xor
test
pop
fnstenv
sbb
or
push
subl
pop
lock
xchg
sub
add
add
jle
outsl
mov
sbb
mov
pusha
lcall
pushf
mov
les
cmpsb
in
mov
lcall
push
jp
cld
mov
aad
popa
pusha
dec
lea
js
jge
test
push
lods
pop
mov
dec
xor
or
sti
cltd
inc
adc
es
add
into
ja
aaa
pop
lahf
pop
and
jo
sub
dec
jo
ficomps
pop
sub
in
dec
and
lods
xchg
adc
lahf
cltd
or
dec
fwait
pop
jae
or
pop
pop
dec
fldt
inc
or
pop
sar
ljmp
jp
cmp
roll
inc
push
dec
push
mov
out
cmp
add
mov
adc
shl
xchg
repnz
pop
out
out
pop
data16
aaa
xchg
jg
pop
inc
adc
cmp
pop
ds
adcl
jg
sbb
inc
popa
mov
mov
mov
xchg
js
push
push
das
adc
test
adc
fiadds
push
rorl
jle
dec
or
mov
push
mov
cmp
sub
xlat
xor
sbb
loop
test
lods
fistps
lds
aam
stos
jno
and
ja
mov
push
xorl
adc
stos
pushf
je
lret
cmp
mov
inc
rep
scas
fs
inc
lock
dec
inc
pop
push
mov
mov
dec
pop
or
inc
hlt
enter
hlt
adc
es
aad
sub
and
xchg
cltd
xchg
bound
fimull
insb
lret
inc
mov
jae
in
xor
rcr
popf
popf
sbb
mov
cmp
shll
scas
les
pop
sub
dec
add
sub
test
fiadds
shrl
aas
xor
and
in
je
sbb
stos
dec
or
cs
outsl
in
mov
test
xor
adc
aad
dec
test
or
sub
test
repz
add
clc
mov
jb
xor
adc
jbe
dec
cmp
clc
cmp
mov
adc
xlat
repz
xor
pop
scas
je
sbb
dec
inc
jp
dec
lahf
jmp
inc
cs
sub
leave
adcl
mov
adc
xlat
test
imul
ja
mov
jmp
sub
adc
push
aas
mov
xorb
mov
stos
inc
test
add
add
fldl
insl
aas
int
sbb
and
mov
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
insb
push
xchg
push
add
jns
inc
gs
lock
pop
invd
pushf
jnp
bound
pop
and
es
pop
sbb
jno
adc
lret
adc
test
dec
or
adc
inc
mov
jmp
outsl
xchg
sub
cmpsb
roll
sarl
push
test
into
movsb
mov
xor
mov
decl
add
ja
lock
fmuls
iret
rolb
les
inc
cld
sub
cmp
push
rcll
push
mov
mov
andb
aad
out
sbb
push
test
test
and
daa
jae
pop
popf
insb
shll
nop
cltd
sub
cmp
sub
add
jmp
ds
loope
pop
les
sub
stos
lds
or
psrad
lahf
adc
imul
ja
pop
pop
add
mov
ss
mov
jnp
int
adc
std
mov
inc
rclb
sub
jns
andl
ss
pusha
xchg
das
pusha
mov
xchg
jmp
inc
fnstsw
and
push
das
pop
push
pop
loop
pop
aaa
xchg
ficomps
fs
gs
hlt
push
mov
js
mov
sahf
add
sbb
add
ficomps
scas
cmpsb
adc
out
movsl
mov
pusha
movsb
test
jg
je
lock
add
jle
das
and
scas
push
lret
ss
test
push
mov
dec
popf
adc
insl
lods
jbe
sahf
mov
or
aad
dec
pop
imul
movsl
or
push
insl
mov
insl
aam
xor
cmpsl
mov
data16
mov
xor
inc
mov
cmpl
mov
fdivr
std
jae
scas
mov
push
pushf
repz
sbb
and
fwait
mov
test
ja
mov
loopne
pop
xlat
mov
mov
xchg
mov
fists
ror
adc
inc
int3
and
and
mov
fbld
test
iret
sbbl
adc
xchg
sbb
mov
pop
cmpl
cmp
pop
popa
inc
mov
or
outsl
in
outsl
in
aam
js
in
xchg
jnp
pop
mov
lret
mov
and
pusha
jne
outsb
aad
pop
repz
sahf
xor
ja,pt
insl
jp
or
jne
adc
mov
pushf
sub
loope
cmp
pop
push
dec
adc
inc
aad
mov
and
or
add
outsl
int3
inc
inc
xlat
pop
or
jnp
in
loop
pop
xor
jno
or
imul
cmpsl
daa
ret
push
sbb
into
inc
inc
cwtl
aas
sbb
xor
jno
lret
add
push
push
mov
fisubl
push
sbb
je
mov
scas
jl
add
cltd
addr16
loopne
ja
loopne
jle
adc
movsb
loopne
mov
popa
in
mov
jbe
mov
ret
imul
adc
mov
xor
outsl
jns
test
or
data16
sub
pop
ficomps
je
pop
fists
pop
pop
iret
sub
sub
cmc
movsl
loop
jo
or
push
sarb
cmp
push
lcall
cmovb
stos
fbld
add
adcl
xchg
xor
sub
pusha
jno
ds
jno
stc
popf
out
stos
jmp
ret
outsb
push
test
imul
mov
lock
testl
shl
jae
xchg
bound
lret
xchg
cmp
mov
loop
mov
inc
popa
push
pop
xchg
pushf
rorb
js
es
mov
movsb
dec
xchg
xchg
sub
pop
gs
aaa
mov
out
cmp
mov
adc
aas
enter
xor
push
xchg
push
pop
fs
stos
iret
test
scas
sbb
stos
push
ret
addr16
and
hlt
xchg
aas
ret
es
cmp
nop
fwait
je
xorb
adc
fwait
add
imul
test
jb
nop
inc
mov
ret
js
sub
loopne
adc
outsb
shl
jo
pushf
mov
sbb
in
rclb
out
dec
cld
clc
mov
inc
add
mov
ret
loop
adc
daa
jb
scas
insl
jmp
or
pop
and
in
fistl
sbb
cmpl
movsb
insb
push
xor
ficoms
ss
jae
das
jnp
push
sub
or
or
test
pushf
add
data16
jg
xchg
pop
je
lea
push
cmp
test
inc
push
cmp
mov
cli
in
xor
jp
xor
sbb
test
insl
sbb
adc
mov
push
push
call
insb
out
addl
test
xchg
or
or
xchg
fnstcw
dec
xor
loop
scas
popa
ss
dec
pop
mov
je
ja
push
bound
jmp
jecxz
int
push
sbb
mov
into
sbb
push
cmpl
imul
ja
jge
je
mov
dec
lock
push
push
int
cmc
mov
ret
in
popa
cmp
lock
or
outsb
jae
jge
inc
gs
jmp
xchg
cmpsb
cmpsl
shl
insl
pop
xlat
outsl
dec
push
movsl
and
test
inc
fldl
mov
ds
mov
and
pop
cli
sarb
jg
jge
cmp
fcomps
xchg
xchg
jle
and
cs
leave
pop
sbb
pop
sub
movsb
xchg
sub
ret
jmp
je
pushf
fucom
out
and
sbb
inc
or
lock
sbb
sbb
ss
xchg
aaa
push
xor
sarb
fstpl
dec
xchg
mov
mov
pop
mov
xor
pop
call
sbb
add
inc
fidivs
mov
xchg
push
imul
insl
bound
cmp
mov
stos
pop
jp
jbe
dec
mov
cmp
cmc
sbb
in
shlb
scas
add
mov
or
push
lret
test
and
jle
scas
movsb
into
mov
fisubrs
roll
in
movl
adc
xor
lret
inc
push
sti
xchg
ret
movsl
loope
pop
push
pop
jecxz
leave
jecxz
clc
jle
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
ret
in
inc
add
jge
fidivrs
imul
push
scas
mov
int
mov
std
movsl
int3
ds
test
sti
aaa
jle
pushf
pop
ja
and
aas
pop
orl
movsl
in
jns
push
mov
cld
xor
outsl
ret
pop
jnp
xor
aaa
test
xor
shl
insl
dec
imulb
pop
aas
repnz
pop
arpl
adc
sbb
pop
cmp
and
mov
add
insb
pop
or
ss
and
mov
add
insl
mov
mov
fidivrs
xor
xchg
lahf
add
decl
test
in
ret
rcl
enter
add
repnz
push
lods
push
jle
ja
push
mov
cmp
mov
repz
repz
and
sbb
dec
test
xchg
jmp
inc
xor
sbb
testl
lea
ss
mov
shr
mov
into
ljmp
es
in
inc
pop
sbb
inc
popa
push
push
mov
sub
jp
cmp
addl
in
mov
mov
std
int
push
das
jae
push
adc
test
jl
movsl
scas
pop
jge
js
or
loopne
jl
insl
ds
scas
les
mov
popa
jl
jge
jo
shrl
mov
dec
int3
fs
in
in
js
aad
push
flds
pop
outsl
repnz
js
cmp
adc
imul
xor
push
jecxz
cmp
in
out
sub
push
cmpsb
pop
jle
sub
pushf
dec
inc
mov
cmp
mov
in
sbb
in
xor
imul
mov
and
pop
cmovo
or
cmp
jge
lods
loope
dec
out
sub
push
mov
ficomps
test
repz
andl
fwait
add
gs
out
repz
mov
mov
ret
adc
mov
mov
cmp
test
int
lea
pop
xor
xchg
xlat
adc
and
xchg
xchg
xor
xor
aas
adc
adc
fnsave
or
imul
dec
xor
fstpt
nop
sbb
pop
mov
je
inc
jge
stos
pop
stos
pop
ja
insb
fwait
or
pop
inc
jge
leavew
jae
std
lcall
in
push
mov
inc
pop
adc
test
inc
aaa
mulb
mov
fs
mov
mov
mov
inc
xor
jnp
imul
lock
inc
jle
ret
rolb
push
or
out
push
xchg
cwtl
addr16
xchg
ficomps
sub
rolb
xchg
or
lea
and
loope
adc
sahf
les
cmp
inc
jnp
pop
mov
fwait
mov
fisubrs
and
cmp
inc
push
mov
movsl
or
lds
mov
adc
cmp
xchg
lea
fdivrl
in
xchg
xchg
lods
push
adc
push
add
cmp
out
xchg
push
inc
cli
jne
ret
adc
in
leave
shll
cmpsl
stos
push
add
inc
lock
dec
insb
dec
int3
xor
cs
and
in
and
mov
das
jo
into
les
xchg
mov
aas
sub
jl
sub
push
aas
mov
dec
jo
add
nop
jno
fstp
inc
push
enter
add
ret
fsubr
push
hlt
leave
cli
mov
insl
je
xor
ja
dec
popa
and
aam
test
mov
cmp
mov
movsl
dec
push
jp
aam
sbb
enter
out
fwait
cmp
out
pop
popf
adc
enter
jno
sbb
cmp
lcall
shrb
cltd
fprem1
call
mov
imul
sarb
cmp
jne
lret
ja
adc
dec
orb
dec
jns
loopne
cmp
mov
out
pop
mov
cmp
xor
dec
adc
repnz
cmp
xlat
lahf
or
arpl
iret
xor
mov
mov
pop
sub
arpl
or
ficoms
scas
inc
testl
jb
xor
cmp
pop
mov
or
sub
dec
jmp
movsb
adc
shl
daa
jae
jle
inc
mov
loop
fcomps
sub
mov
ret
xchg
jle
clc
fsubl
js
or
cmpsb
popf
inc
in
xchg
ret
into
xor
sub
pop
sub
inc
je
inc
jb
int
lock
inc
ficoml
cmp
mov
mov
lahf
test
mov
mov
add
in
dec
inc
negb
imul
dec
std
lock
pop
outsl
jb
pop
into
pop
jb
arpl
push
inc
sub
jmp
lahf
pop
cmp
pop
inc
inc
test
outsl
outsb
repz
xor
adc
inc
add
mov
sbb
jmp
out
push
repz
jg
mov
add
aas
xchg
or
mov
push
cli
insl
sub
add
out
into
pop
mov
mov
cmc
xor
dec
icebp
test
popa
xlat
xor
int3
adc
imul
sub
jne
loopne
push
lods
cltd
adc
icebp
sbb
flds
shll
lock
ret
sub
sbb
jge
pusha
test
cs
iret
fmulp
insl
xchg
dec
adc
int3
push
inc
loop
out
cmp
loop
cmc
pop
dec
mov
add
add
testb
lahf
cmp
out
addr16
aad
cs
push
lret
xlat
ret
repz
outsl
inc
cmp
sti
repz
sub
push
jge
test
and
mov
dec
out
dec
in
into
fistpll
dec
mov
loopne
pop
mov
add
add
das
insl
mov
cmp
movsb
cwtl
or
call
xor
adcl
scas
jge
pop
popf
jg
insl
adc
test
sub
fmul
xchg
mov
int
pop
xchg
shll
inc
xchg
xchg
cld
push
sbb
fsub
stc
loopne
in
jo
sahf
arpl
cmpsl
mov
dec
pusha
aam
xchg
lods
mov
add
mov
pop
mov
inc
jecxz
psubusb
cmp
jge
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
push
xor
shll
add
xchg
scas
push
cmpsl
inc
mov
scas
mov
dec
add
fistps
fistpl
or
jns
add
aas
sbb
iret
mov
inc
dec
sbb
mov
dec
movsl
testl
pop
add
xor
pop
xchg
push
pop
push
mov
or
aad
jb
inc
xor
test
les
stos
cwtl
loopne
fwait
push
adc
aas
xchg
call
jmp
fnstcw
dec
pop
add
mov
sahf
fwait
jne
rcr
cmpsl
push
push
int
push
push
das
outsl
mov
icebp
popf
sbb
adc
pop
adc
xchg
adc
repz
test
and
es
inc
icebp
sarb
test
dec
insb
inc
sub
add
xchg
cmp
sub
ss
mov
lods
loopne
shlb
and
ljmp
cmp
jae
stc
stc
add
shr
test
lret
jbe
out
or
xchg
shrb
lahf
xor
imul
inc
push
js
push
in
xchg
mov
sub
std
jno
and
fucom
js
lcall
test
cmp
add
sub
add
iret
mov
sub
lret
fisttpl
mov
fadds
cmp
scas
mov
mov
pop
add
add
movsb
leave
jne
stc
int
or
icebp
sub
arpl
shl
out
insb
jo
insb
pop
mov
push
xor
and
andb
in
sbb
repz
push
rcll
nop
jo
fsubr
decl
pop
addr16
outsb
por
lret
orl
jo
push
leave
sahf
je
dec
sahf
sub
das
stos
or
mov
adc
mov
push
clc
jl
into
icebp
mov
outsl
out
push
int3
mov
inc
or
pop
and
scas
jo
inc
inc
xchg
dec
or
repnz
scas
out
push
aaa
fucom
cmp
std
stos
addr16
dec
maskmovq
notl
and
xchg
or
and
rolb
sub
ret
push
pop
aaa
sbb
sahf
in
inc
inc
out
daa
aad
enter
jle
pop
push
cli
pminsw
adc
or
add
mov
loope
jb
mov
mov
lds
adc
gs
outsl
mov
mov
inc
jae
jmp
shrb
or
aaa
test
sahf
and
mov
mov
int3
pop
jg
arpl
dec
fiaddl
mov
jnp
add
pop
jle
mov
int3
sub
jne
and
sahf
std
inc
xor
movsb
out
inc
push
mov
jo
xor
pop
add
add
pop
popa
sarb
cld
push
dec
pushf
jo
xchg
or
dec
mov
test
adc
xchg
mov
out
pusha
insb
push
inc
mov
icebp
add
jecxz
movsl
mov
pushf
sbb
pop
cmc
add
cs
inc
mov
push
mov
adc
jecxz
dec
mov
fbstp
mov
or
xlat
popa
jl
or
scas
fs
dec
out
aaa
pop
adc
add
jmp
mov
dec
push
jno
mov
push
add
loop
fnstsw
push
or
cmp
loope
jb
jbe
rorb
mov
les
xor
jbe
cmp
cmpsl
inc
dec
cmpsl
leave
sub
or
jae
mov
sub
scas
and
jnp
sbb
add
repnz
sbb
sub
mov
hlt
xlat
cld
jl
add
mov
inc
outsl
into
test
ss
leave
mov
aad
cmp
out
test
xchg
stc
popf
jp
jno
jmp
js
or
cmc
xlat
xchg
fwait
loopne
insl
stc
jae
pop
in
mov
pushf
dec
and
xor
test
movsb
fadds
cwtl
jns
inc
push
cmp
mov
push
cmp
mov
aaa
test
sub
xor
stos
sbb
xor
inc
js
add
sub
pushf
loope
adcb
cmp
pop
dec
dec
push
ror
cmp
les
xchg
out
stos
es
fldenv
lcall
cmp
roll
test
jbe
fwait
cmc
and
mulb
ljmp
inc
popa
js
fisttpll
imul
lret
test
gs
mov
dec
dec
test
xlat
add
shll
jecxz
js
iret
cmp
pop
ficoms
inc
lea
cmpsb
cmpsl
ret
sahf
xchg
pop
stc
push
push
xor
mov
sub
ret
sti
xchg
out
pop
pop
xchg
inc
out
fisubl
xlat
sbb
mov
cmp
xor
adc
in
and
mov
and
loope
popa
scas
icebp
insl
test
lods
adc
xchg
rcl
lcall
insl
push
test
pop
icebp
cmp
adc
mov
or
jle
iret
jecxz
ja
cltd
fcompl
dec
rorl
sub
add
push
xchg
xor
and
pop
mov
push
mov
pop
sub
aas
pop
jb
mov
or
cmpsl
mov
xchg
mov
xchg
sub
pop
popl
cmp
add
out
lcall
push
xchg
repz
lret
dec
inc
out
mov
push
pop
lahf
mov
inc
das
dec
inc
sub
in
jns
aam
pop
mov
ss
lods
jecxz
xchg
push
mov
xor
sbb
xchg
inc
fsubrl
test
sti
ljmp
xchg
sahf
cmp
test
sub
leave
pop
push
aam
or
stc
fdivl
out
jno
divl
mov
mov
aad
daa
jns
lds
xchg
pushf
or
and
aaa
push
scas
cltd
cmpsl
or
aaa
test
mov
cmp
popa
dec
jmp
sbb
cmp
lahf
in
mov
ret
xor
pop
das
divb
or
mov
sub
push
aad
sub
daa
out
or
mov
into
pop
push
xchg
sbb
add
mov
and
call
outsb
aaa
lods
in
mov
dec
movb
ret
jmp
jmp
test
jnp
push
jl
xchg
test
xchg
pop
lods
ljmp
icebp
lds
repz
xor
rorb
push
mov
ds
scas
or
test
push
stc
xor
cwtl
test
scas
notl
leave
mov
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
call
add
cli
out
or
xor
iret
add
cmp
push
rcr
sub
jp
loope
dec
mov
cmp
scas
movsb
ljmp
outsb
nop
add
hlt
subb
mov
scas
in
loopne
imul
fisubs
mov
repnz
incb
jb
sub
mov
sahf
xchg
mov
or
cmp
jae
mov
iret
int3
repnz
leave
mov
xor
sbb
mov
jns
ret
cmpsb
push
js
cmp
sti
mov
dec
xor
popl
xlat
push
outsl
daa
add
mov
jae
in
sbb
aad
mov
insb
cmc
dec
mov
in
pusha
xchg
call
in
sarb
iret
fadds
pop
rol
paddusb
sub
xchg
sub
jg
pop
cld
cmp
mov
lds
xor
test
jae
imul
test
jle
cmp
jne
pop
add
std
in
inc
fwait
jecxz
adc
jno
inc
inc
mov
xchg
das
sbb
or
jb
adc
cmp
out
nop
fistps
pop
mov
lret
js
mov
rcrl
cltd
jmp
cld
add
push
stc
idivb
pop
test
adcl
mov
repz
cmp
xchg
dec
hlt
sub
cmp
adc
shlb
test
fisubs
mov
jmp
sbb
je
rorb
add
cmp
cmp
in
add
push
jle
ret
mov
shrb
in
xor
jecxz
adc
mov
add
hlt
sti
jbe
mov
xor
cmpsl
scas
add
repz
shlb
ret
cmpsb
cmp
sbb
iret
mov
push
inc
mov
pop
shl
inc
lods
movsb
in
je
in
push
mov
add
sahf
fcomps
aam
mov
mov
int
call
add
out
xchg
jmp
into
mov
cmpsb
sub
mov
and
fdivrs
adc
lock
int
or
arpl
aad
adc
ucomiss
imulb
into
loopne
imul
and
scas
xchg
jns
in
xchg
cmc
int3
fcoml
push
adc
ja
jmp
dec
pusha
pop
popa
cmp
std
ja
cmpsl
mov
sub
or
mov
pop
clc
mov
jno
xor
test
pop
adc
or
sti
loopne
and
shl
lcall
xchg
inc
mov
push
ss
add
xchg
es
and
lock
inc
xor
dec
xor
push
ja
sub
pop
mov
jae
imul
sbb
mov
xchg
pop
add
jmp
jmp
insb
push
xchg
imul
cmp
outsb
rcll
ja
adc
daa
pusha
stos
arpl
lahf
sbb
push
pop
subl
jmp
jne
or
loopne
cmp
lds
leave
ret
fadds
pop
fistps
xchg
inc
pop
mov
add
fwait
dec
iret
rolb
push
scas
xchg
and
rorl
sbb
ja
push
pop
hlt
add
fidivl
dec
aad
dec
cli
mov
pop
mov
mov
push
sub
push
aaa
mov
push
inc
xor
pop
push
pushf
insl
inc
jnp
jle
out
push
sbb
ret
mov
push
sbb
ds
lods
cs
cmp
int3
fs
xor
imul
and
dec
xchg
frstor
in
dec
fwait
adc
or
in
pop
jns
mov
mov
aaa
movsb
mov
roll
and
adc
fstl
push
push
adc
push
mov
rcll
adc
add
dec
adc
xchg
orb
pop
jns
mov
add
pop
shr
xchg
loop
mov
adc
cltd
push
jmp
imul
cmc
lret
ret
popa
sub
pop
mov
cmp
test
imul
lcall
stos
pop
imul
in
fwait
jae
inc
data16
mov
lock
mov
shlb
xchg
incb
daa
movl
ror
outsb
mov
adc
iret
mov
adc
sahf
call
xor
add
gs
aad
pop
sub
cmp
or
int3
fcompl
add
imull
xchg
mov
rol
ja
inc
sbb
cltd
out
and
sub
mov
clc
loopne
xor
inc
leave
imul
hlt
cmp
inc
insl
ret
mov
mov
int3
aaa
add
add
inc
test
dec
test
andl
popf
data16
or
out
pushf
sbb
cs
in
stos
call
push
icebp
adc
fdivs
pop
test
repz
je
push
out
lods
inc
ljmp
gs
fs
sub
pusha
fildll
clc
imul
cmpb
push
test
stos
sbb
sahf
scas
mov
stos
xchg
aad
mov
sub
ret
mov
outsb
mov
andl
lret
cmp
jne
sub
add
mov
scas
xor
push
popf
arpl
fsts
divb
add
sbb
xor
lret
incl
dec
add
mov
adc
sub
lods
stos
xchg
shll
movsb
rorl
push
mov
xor
xchg
and
mov
or
and
pop
cmp
sbb
and
push
inc
mov
or
enter
sub
pop
insl
mov
rorl
mov
xor
add
stc
adc
xchg
out
push
test
pop
test
xor
cmp
std
jbe
les
pusha
inc
xor
dec
jl
call
test
push
into
inc
and
push
jns
and
loope
scas
jecxz
xchg
insl
fucomip
mov
mov
data16
mov
cmp
add
sbb
lods
je
push
popa
outsb
xor
aam
mov
out
pop
jae
stc
xor
or
jo
rep
cli
ss
mov
jp
mov
xor
cmc
inc
xorl
arpl
dec
fstpl
je
out
psrlq
adcb
test
or
nop
push
or
adc
in
inc
xor
pop
cmp
jmp
xchg
daa
sbb
xor
into
fstp
jg
outsb
jno
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
dec
inc
or
add
iret
xor
jo
fsubs
test
jecxz
js
dec
cltd
push
pushf
jae
fdiv
mov
adc
adc
rclb
adcb
test
sbbl
lret
pop
les
ss
mov
clc
push
cld
add
jb
inc
sbb
mov
daa
xchg
insl
clc
shlb
movsl
mov
push
inc
into
lock
incb
ficomps
cmp
shrl
out
rorb
cli
outsl
dec
mov
mov
int
data16
in
adc
pop
sarb
sub
cmp
dec
mov
push
fld1
add
movsb
test
les
dec
aam
sbb
cmc
inc
xor
jecxz
cmc
pop
out
push
aas
addr16
into
xchg
jl
sbb
push
pop
mov
cmpsb
lret
pushf
jmp
fwait
mov
lock
mov
push
fsts
hlt
and
cmp
jl
out
xor
fidivl
lock
fidivl
mov
push
fstpl
xor
out
ret
sbb
ret
dec
push
fildll
cmpl
mov
pop
and
not
sub
rcr
push
leave
pop
push
lea
cmp
and
push
addr16
sub
sbb
sbb
dec
xchg
dec
mov
jb
inc
xchg
shlb
sub
nop
scas
push
fidivs
jmp
xchg
sbbb
clc
xchg
sahf
mov
test
lock
mov
jno
adc
mov
and
sbb
stos
faddl
loopne
mov
mov
mov
ja
adcl
rcrl
testl
pop
adc
testb
mov
adcb
popa
out
cwtl
sub
cmc
xlat
sub
push
jbe
adc
mov
push
addr16
push
aad
insl
inc
push
mov
hlt
std
mov
lret
inc
add
divl
dec
sbb
push
mov
add
push
xchg
out
in
and
push
cmc
pop
mov
dec
loopne
pop
std
mov
cltd
adc
adc
jp
orb
inc
sahf
std
rcl
add
std
or
sti
dec
loope
jne
push
and
add
push
xchg
cltd
test
into
mov
xor
mov
pop
stos
mov
push
daa
daa
fcomip
jmp
inc
cmpsl
sub
test
dec
gs
mov
js
mov
inc
mov
mov
movsb
pop
sbb
out
jo
je
ljmp
js
sti
push
inc
in
sub
dec
add
inc
xchg
mov
dec
or
sbb
pop
pop
test
pop
hlt
or
lret
ljmp
aad
sub
arpl
push
sbb
push
iret
jmp
xor
adc
xchg
lcall
test
push
jmp
cmp
stos
mov
dec
ljmp
fs
in
int
bound
ljmp
jae
mov
inc
xor
movsb
mov
or
add
idivl
adc
aam
dec
cmp
xor
and
rorb
add
xchg
idivl
add
mov
pop
cmc
jmp
enter
xor
and
inc
nop
fld
iret
sbb
aam
xchg
mov
dec
das
xor
cmc
mov
fwait
push
cmp
into
int
and
mov
sub
and
add
mov
ficomps
xchg
jo
aaa
andb
push
jns
push
add
mov
pop
mov
push
flds
pop
pop
sub
dec
ja
clc
dec
orb
andl
loop
mov
inc
stos
push
jne
test
stc
sbb
inc
lods
aas
pushf
adc
dec
int
ja
lcall
mov
push
repnz
pop
adc
mov
outsb
insl
ret
mov
clc
mov
jo
imul
sbb
dec
pop
rcll
push
mov
sbb
xchg
xchg
mov
stos
lcall
lods
fcmovu
dec
jmp
jg
cmp
xchg
dec
popf
lcall
or
fs
aam
mov
push
popf
pop
mov
pop
pop
bound
mov
cli
inc
in
cmpsl
aaa
push
in
push
sbb
cwtl
in
fcmovu
xchg
cmp
insl
arpl
lcall
insl
jo
push
push
shll
pop
repz
sbb
test
lods
test
or
mov
jo
add
popa
push
aam
pop
test
das
mov
and
cwtl
add
icebp
xchg
popa
adc
mov
subb
fidivl
xor
faddl
lock
lcall
adc
sub
dec
mov
xor
shrb
or
mov
pop
cmp
cmpl
in
insl
test
xchg
and
jle
andl
fucomp
hlt
clc
movsb
inc
jno
adc
sub
out
nop
ds
lea
adc
jbe
xchg
xchg
mull
or
or
dec
test
push
insl
jmp
addr16
imulb
imul
je
push
pop
push
mov
out
in
push
imul
out
inc
lcall
add
mov
adc
repnz
cmp
imul
adc
sbb
sbb
push
xchg
shrb
or
cmpsb
jmp
pop
loop
repnz
aam
test
pop
aam
dec
loope
mov
insb
xor
mov
adc
data16
sbbl
es
mov
testb
gs
and
repz
outsb
pushf
dec
push
cmp
call
sub
arpl
lret
jns
stc
cmp
mov
mov
sub
je
mov
in
mov
loopne
inc
sbb
nop
sar
and
xchg
and
mov
fs
lahf
add
add
dec
dec
movsb
cmc
nop
sub
nop
sbb
aam
mov
out
sbb
arpl
fimuls
inc
lock
clc
push
dec
jno
call
xor
dec
pop
outsb
mov
inc
add
lcall
dec
pop
adc
in
mov
add
sarl
dec
mov
push
xor
fdivs
xor
jmp
and
adc
fmuls
mov
gs
xor
mov
shrl
scas
inc
lret
cmpb
imulb
pop
mov
push
bound
daa
mov
jmp
inc
cmp
push
sbb
scas
xchg
mov
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
or
sbb
xor
cmp
dec
mov
hlt
outsb
lahf
mov
lds
outsb
and
scas
in
inc
jae
mov
add
lret
inc
mov
lds
and
add
mov
push
jo
pushf
out
inc
int
mov
mov
cmp
push
scas
mov
xchg
cmpb
mov
enter
out
and
pop
xchg
sbb
lds
cmp
and
popf
pop
push
inc
xchg
push
aam
push
ret
push
jb
xor
jbe
mov
lea
mov
imul
scas
xor
xchg
push
addl
inc
push
iret
iret
fcoml
inc
mov
idivb
pop
mov
shlb
mov
dec
mov
or
lret
in
cmp
adc
inc
je
push
shlb
pop
lret
out
inc
movsb
sbb
pop
xchg
jp
xchg
out
sahf
xchg
movsb
inc
or
mov
mov
testb
rorl
mov
or
xchg
outsl
insb
sub
lea
xchg
mov
adc
mov
lahf
hlt
cmpsl
in
ret
bound
icebp
in
mov
in
insb
sbb
rorb
fldl
fbld
xchg
rolb
rcrb
fistps
scas
int
xor
dec
add
lahf
mov
out
lods
enter
mov
xor
push
aad
hlt
test
mov
in
nop
test
test
arpl
aam
inc
mov
or
jle
push
lods
add
rolb
mov
xor
sbb
or
es
stc
stc
xlat
in
daa
xor
and
test
jns
adc
pop
xor
mov
not
pop
call
cld
clc
xlat
ficomps
jns
lret
cmp
aad
in
stc
inc
and
mov
and
adc
call
mov
lret
cmp
out
xlat
push
inc
xchg
sahf
sub
sti
push
jg
xor
or
adc
adc
dec
cmc
mov
pop
push
addr16
xchg
mov
gs
mov
hlt
push
mov
xchg
and
loop
jl
pop
fwait
adc
push
jnp
pop
aas
ja
jmp
les
and
lahf
adcb
push
int
dec
imul
outsl
pop
mov
jbe
out
and
or
adc
push
cld
add
jbe
adc
aaa
pop
shll
loopne
xor
or
repnz
mov
sub
das
pop
xchg
xchg
sbb
cwtl
inc
mov
in
jecxz
push
mov
pop
mov
mov
repnz
les
test
mov
fisttps
addr16
jo
loope
je
fstpt
mov
mov
push
jp
dec
rorl
xor
push
adc
popa
mov
adc
mov
pop
shld
xchg
mov
dec
popf
hlt
mov
dec
aas
and
lahf
mov
mov
test
pop
adc
mov
in
dec
sar
sbb
out
imul
push
jb
pop
ss
pop
mov
jmp
mov
jmp
cmp
lods
out
mov
daa
sahf
test
push
xchg
imul
fldl
or
or
inc
fwait
lcall
dec
adcl
mov
xchg
dec
xchg
hlt
out
testb
inc
rcr
or
sbb
adc
inc
xor
push
ffreep
and
lock
clc
fwait
xchg
outsb
and
adc
inc
inc
sub
sti
aad
sub
mov
inc
cmpb
clc
out
cmp
mov
adc
pop
sbb
fildl
lret
pop
rcll
dec
xchg
mov
imul
xchg
sbb
lret
or
call
cmp
mov
and
lcall
inc
popf
mov
fwait
cli
lock
int3
ret
and
or
lock
out
fisttpll
and
fs
xor
jl
test
dec
loop
adc
cld
xchg
mov
mov
jecxz
xor
sub
dec
mov
push
dec
pushf
sbbb
pop
sbb
pop
mov
pop
dec
mov
mov
fidivs
cmpsl
add
add
aam
call
sub
xchg
lds
mov
pushf
in
jecxz
pop
jnp
add
dec
dec
adc
sub
and
jo
shl
jne
call
inc
jl
cli
jae
or
into
fadds
fs
out
shrb
shl
clc
mov
movsl
in
jbe
jge
sub
lahf
mov
ja
jmp
lock
sarb
mov
xchg
inc
fstp
dec
xorl
cmp
xchg
jbe
lcall
jns
add
rorl
and
sbb
xchg
fiadds
rclb
enter
lea
clc
out
out
shl
add
in
dec
mov
lret
mov
jo
inc
pushf
jne
div
pop
repnz
push
adcl
enter
hlt
in
jno
std
xchg
sbb
inc
leave
test
inc
shrb
pop
enter
cmc
adc
clc
push
jb
sarb
lahf
mov
ljmp
andb
dec
adc
test
dec
js
pusha
push
jl
fsubs
mov
mov
mov
arpl
test
insl
pop
pop
andl
inc
push
pop
mov
jnp
aad
adc
ficompl
ret
cmp
or
fcmovnb
fdivrl
paddw
push
mov
sub
sub
fisubs
pop
lahf
cmp
int3
test
shrl
jnp
clc
jmp
jge
mov
mov
lcall
pushf
or
jbe
jnp
push
nop
dec
xchg
fwait
cmpsb
cmp
xor
fmull
mov
orb
mov
lret
repz
xlat
cmp
repnz
push
aad
in
pop
pop
nop
pop
xor
adc
jle
push
lds
sub
test
mov
fcoms
es
pop
call
stos
xchg
jo
sbb
push
inc
test
jnp
adc
xor
loope
insb
dec
pop
fs
rorb
push
shlb
andb
fcompl
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
dec
dec
mov
mov
add
faddl
das
call
inc
adc
cmp
dec
cmp
push
dec
nop
imul
mov
out
das
mov
xor
js
in
pop
das
ss
mov
ljmp
xor
cwtl
test
ret
mov
ret
and
jge
fwait
pop
ds
dec
xor
repnz
mov
pop
fidivl
std
outsb
stos
les
cmp
cmp
enter
mov
lods
pop
ja
mov
in
push
aaa
shll
inc
mov
adc
push
dec
cmp
mov
adc
lret
cmpsb
sbb
xchg
and
mov
das
test
stc
push
xchg
addr16
adc
push
jb
sbb
sub
mov
jbe
fmull
pop
rclb
xchg
mov
and
rcrl
xchg
xor
xchg
mov
mov
push
mov
jb
sbb
lock
cwtl
aad
lcall
inc
mov
pop
pop
pop
dec
mov
ljmp
push
or
in
lcall
roll
mov
loopne
mov
push
rcl
dec
or
call
xor
cmpsl
inc
in
mov
into
bound
cld
add
push
gs
push
out
int3
sub
xchg
mov
sahf
adc
insl
dec
cmp
xchg
imul
add
dec
cmp
fisubl
jecxz
and
sti
faddl
xor
jb
add
sub
cmp
sbb
dec
push
dec
mov
push
sbb
lea
inc
mov
insl
rcr
ljmp
mov
ljmp
fisubs
xsavec
pop
dec
sbb
lret
daa
test
fs
jne
mov
cld
lods
fmuls
mov
jbe
add
push
cmp
push
insb
dec
mov
test
cltd
cltd
push
xor
rorl
adc
outsb
cli
test
mov
mov
stos
cmc
imul
push
cmp
fcoms
pop
fildll
mov
int3
or
xchg
sub
mov
add
push
mov
pop
xchg
adc
insb
test
add
test
and
cmp
mov
out
jo
pop
mov
adc
rcr
pop
fs
shll
adc
or
or
jbe
sub
into
dec
scas
aad
or
or
lds
flds
push
jmp
or
dec
cmc
xlat
xchg
out
std
iret
jns
fidivrl
jb,pt
jge
push
lret
pop
push
lds
add
push
sbb
and
ret
xchg
dec
jae
cld
ljmp
mov
mov
dec
cmpsl
cli
mov
cwtl
repz
jns
dec
out
sub
fcmovnu
fwait
hlt
fstpl
or
cmc
mov
xchg
and
jb
mov
jp
mov
test
and
arpl
xor
cmc
xchg
testl
sti
nop
lds
inc
cs
subb
inc
pop
push
shl
jl
xor
ja
daa
popa
lcall
xchg
mov
or
fldt
push
es
mov
mov
in
sub
dec
das
jb
jmp
out
push
mov
jb
sti
js
xchg
ret
lahf
ljmp
into
mov
rorb
xchg
jnp
jecxz
or
mov
adc
pop
popa
and
push
push
data16
rcrl
aas
add
add
fidivl
and
xchg
add
sub
add
xchg
jb
gs
dec
adcb
push
jmp
fdivl
jns
stos
xor
data16
push
iret
lahf
mov
popl
bound
mov
inc
lds
imulb
xor
cmp
mov
shrb
aam
js
jne
not
jae
add
insb
cmpsl
fisttpl
jmp
adc
in
aam
shlb
scas
inc
push
add
xchg
daa
imul
jae
jb
aam
outsl
jl
out
je
and
xchg
std
push
sbb
lret
fidivrs
mov
jo
es
cld
aas
mov
mov
pushf
cmpsb
in
push
aam
inc
nop
fdivrl
xor
jo
sub
inc
lods
addl
movsb
es
push
stc
rorl
sti
xchg
xlat
mov
dec
clc
pop
fsubs
lds
cmp
sbb
push
int
in
or
sahf
clc
mov
fistl
push
inc
fxch
xchg
js
add
jae
inc
flds
add
inc
pop
lahf
imul
jle
xchg
addr16
ds
or
or
hlt
andl
shll
and
mov
into
sbb
les
adc
jae
sub
insb
mov
mov
lds
pop
test
jp
adc
mov
sub
or
mov
push
inc
test
lods
sub
mov
xor
popf
out
call
ljmp
xlat
dec
push
out
mov
jb
mov
rorl
loop
data16
cmc
xor
lock
and
stos
sub
xor
aas
lahf
xor
inc
adc
xor
lcall
dec
insb
ss
ret
sub
sbb
cmp
pop
loop
test
sar
frstor
aas
cmc
int
fs
stc
xchg
xchg
sbb
les
mov
mov
sbb
xchg
hlt
sbb
rorl
or
or
lds
filds
inc
insb
jo
pop
out
sbb
inc
loope
rorb
jecxz
add
insl
fs
mov
mov
or
cmp
dec
dec
inc
pop
shrl
jle
mov
mov
push
adc
shrb
xchg
loopne
xrelease
cmc
push
push
adc
sub
and
pop
test
jmp
and
imul
shlb
or
or
mov
inc
xchg
aas
add
aad
xor
out
push
cld
aaa
cli
push
jnp
cmp
mov
or
push
enter
into
sub
repz
popa
mov
mov
sub
jmp
rol
jecxz
inc
dec
jp
test
lret
pop
add
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
nopl
and
ds
adc
jl
or
aad
fs
inc
aam
int
pusha
adcl
aad
out
mov
arpl
adc
dec
outsb
push
enter
push
mov
rcr
mov
sahf
add
fnstcw
cmp
pushf
fadds
xchg
xchg
inc
and
pop
xchg
inc
or
cmp
sub
outsb
cltd
nop
clc
stc
inc
sahf
scas
sbb
frstor
xchg
sbb
push
gs
mov
dec
lock
mov
push
mov
sbb
hlt
gs
and
pop
loop
std
cmpsl
shlb
repz
leave
fsubr
pop
sti
cmp
sub
mov
mov
je
aam
sub
out
sbb
push
or
jmp
bound
or
mov
cmp
mov
sbb
les
das
lahf
das
mov
adc
ss
lds
in
aam
in
mov
xor
jmp
cwtl
ss
loop
bound
scas
fs
arpl
or
jae
cld
mov
mov
mov
clc
or
inc
mov
gs
icebp
cli
imul
aas
mov
mov
jp
xchg
movb
jecxz
test
dec
push
out
push
je
jnp
outsb
arpl
xor
popa
cmp
aas
mov
lods
xor
test
in
fistps
repnz
xor
mov
jns
fs
or
insl
std
sub
frstor
add
mov
sub
xchg
mov
icebp
movsl
sarb
mov
mov
sbb
jb
xchg
shll
xchg
orl
lods
lret
mov
jecxz
stos
cs
cmpsl
add
adc
leave
push
dec
adc
addr16
daa
mov
mov
sub
shll
loope
daa
cmp
mov
and
and
shlb
test
or
xchg
sbbb
dec
dec
pop
rorl
cs
sub
lods
repz
mov
call
pusha
mov
fwait
mov
mov
jmp
jp
lock
push
mov
sbbl
and
jns
in
inc
dec
outsl
aad
je
ljmp
out
jae
sub
cmp
gs
push
imul
xlat
test
inc
xchg
pushl
jl
mov
shr
lret
pop
in
adc
test
jg
imul
gs
fwait
push
je
add
xor
mov
fadds
xor
xor
popf
repz
xor
cmp
inc
iret
mov
lcall
dec
mov
nop
push
adc
lods
shl
dec
sub
push
jo
fs
pop
mov
cmp
ret
mov
adc
mov
ffree
mov
addr16
insl
mov
orb
cld
cmp
jmp
iret
ret
and
lock
pop
mov
add
sbb
jns
mov
std
ret
jg
push
cs
cli
or
push
push
fadd
sub
cmp
test
sbb
mov
sarb
push
aam
addl
and
js
mov
mov
xlat
xor
lds
std
xchg
mov
add
nop
insb
fcoml
cmpsb
adc
pop
orl
jg
mov
nop
sbb
push
dec
jp
and
ss
cmpsb
int
pop
or
add
outsl
inc
mov
lret
enter
cmp
xor
hlt
pop
push
push
inc
cmc
scas
adc
pop
out
insb
out
dec
loop
insb
pop
hlt
loop
cli
xlat
scas
shll
rcl
imul
xor
mov
sub
popa
cmp
jo
sahf
fidivrs
movsb
sub
out
dec
fdivl
inc
sbb
add
mov
ds
push
cmovp
outsb
push
repnz
adc
push
cmpsb
leave
rorb
ja
stc
imul
or
rorl
push
inc
int
pop
scas
cmp
push
jge
xchg
repnz
leave
mov
inc
cmp
scas
or
cmpb
outsl
ja
test
jb
push
lcall
push
lea
and
inc
or
ret
xor
mov
adc
pop
jmp
testl
cmp
jns
mov
mov
or
jae
loop
outsl
mov
mov
lret
mov
lcall
in
insl
inc
mov
cwtl
mov
mov
push
sbb
sub
aas
clc
test
push
mov
lahf
cltd
dec
mov
pop
pop
out
xor
jne
jb
jno
mov
and
and
jge
mov
mov
lcall
cmp
lea
sbb
pop
inc
mov
cwtl
jecxz
lret
fistpll
xchg
sub
in
sbb
adcl
pop
outsl
movsb
mov
sbb
lds
inc
lahf
leave
lahf
mov
jmp
in
pop
pop
mov
pop
ss
sub
add
mov
push
xchg
xchg
push
test
sarb
push
movsb
nop
xor
mov
jae
mov
ret
mov
xchg
jecxz
loop
and
insb
adc
xchg
dec
call
xchg
push
cmp
cmpsl
dec
insb
adc
push
cmpsb
jo
jae
jne
aas
fisubl
inc
rcrb
call
movsl
mov
xchg
icebp
jge
mov
jae
mov
int3
lods
in
pop
shr
fidivrs
imul
std
cmc
mov
es
out
imul
out
mov
or
mov
mov
push
inc
pop
adc
int3
jmp
pop
mov
sub
hlt
daa
inc
pop
bound
and
mov
and
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
jbe
adcb
pmaxub
popa
outsl
lods
jo
or
loope
bts
inc
sha1msg2
mov
ret
lea
repnz
es
jp
aas
push
out
xor
or
mov
sub
push
dec
popa
push
test
inc
into
jg
test
clc
ds
dec
loop
aad
push
popa
jae
jp
dec
add
cmpsb
mov
ret
hlt
or
mov
mov
cmc
push
repnz
xor
loopne
int
sbb
arpl
xor
icebp
outsl
cmpsl
sarl
fcmovb
jbe
int3
in
cmp
pop
pop
mov
fiadds
sbb
jp
scas
push
rol
gs
movsb
mov
cmp
pop
xor
cwtl
call
inc
aam
pop
push
and
xchg
loop
mov
sbb
pop
ja
movsl
nop
fsubl
dec
push
stos
insl
cmpsb
or
push
stos
lds
dec
loopne,pn
out
ljmp
shlb
jae
arpl
xlat
cmc
xor
xchg
call
bound
mov
dec
ret
pop
aad
popf
je
mov
lahf
xor
and
inc
pop
sub
jmp
adc
pop
mov
xchg
rorl
insb
pop
cmp
inc
jmp
out
pop
mov
lods
mov
xor
add
lods
rcll
dec
jae
inc
in
mov
lods
or
pop
pop
mov
mov
in
pop
add
adc
fistps
fcom
push
sarl
push
hlt
push
inc
in
int3
add
pop
das
lds
out
or
inc
pop
outsl
push
ljmp
inc
inc
in
jecxz
std
mov
mov
incl
gs
and
fstpl
push
inc
mov
in
inc
rcll
pop
xchg
cmpsl
pop
mov
fs
iret
sar
leave
dec
fisubrl
aas
dec
jecxz
fnsave
ret
lds
sti
or
add
sbb
fisubrs
pop
cltd
pusha
push
push
add
bound
in
push
sub
adc
add
test
pop
in
gs
rclb
xor
jmp
aad
adc
ja
adc
jnp
pop
rcll
int
mov
insl
clc
cmp
insl
int
int3
sahf
pushw
cld
in
rolb
pop
sbb
push
adc
stos
sbb
pusha
out
mov
jl
inc
sub
pop
push
mov
dec
dec
pop
jge
outsb
hlt
js
mov
iret
sti
aaa
loop
aaa
sbb
mov
mov
mov
pop
loope
insb
mov
jno
stos
jmp
mov
pop
xchg
shll
dec
sbb
sbb
imulb
pop
add
outsb
aas
jg
add
inc
xchg
add
rcll
into
sub
imul
fsub
mov
test
and
ljmp
lds
xor
rorb
jmp
loop
sbb
das
std
popf
inc
movb
subl
notl
jnp
adc
push
cmp
fsts
icebp
add
rorl
mov
and
lret
cmc
insb
dec
push
mov
das
dec
andl
pop
fisubrl
lock
repz
cmp
sbb
cmp
pop
lret
mov
mov
dec
clc
fucomip
push
xchg
mov
pop
push
lds
icebp
push
mov
pushf
jbe
ret
mov
fldenv
and
imul
outsl
dec
mov
gs
jecxz
jne
loop
mov
and
xlat
push
sti
aad
inc
ret
add
sbb
and
call
cmpsb
push
movsl
clc
push
fwait
lea
pushf
out
loope
xchg
js
das
ret
dec
out
js
xchg
fwait
jge
cwtl
cmpb
xor
sbb
dec
add
or
movl
sbb
push
mov
or
adc
jne
aam
mov
xor
jmp
inc
mov
mov
or
clc
mov
push
nop
lcall
loop
or
cmp
xchg
stos
jne
leave
notb
pop
adc
mov
xchg
bound
sub
outsl
xor
mov
or
adc
stc
xor
lahf
lods
cmp
loope
ds
loopne
push
push
test
mov
cmpl
iret
pop
lret
inc
pop
out
pop
outsb
inc
sbb
jno
icebp
fidivrs
xor
in
inc
mov
jmp
call
icebp
jge
jno
or
mov
cmc
pop
jge
or
mov
push
andb
mov
roll
cmc
lea
mov
dec
and
ret
loop
jne
inc
into
mov
stc
cmpb
fs
ljmp
push
stos
mov
js
outsb
aam
repnz
gs
repz
pop
cmp
loopne
popf
iret
cmp
imul
out
movsb
sbb
cmp
push
dec
or
fisttpl
sbb
subl
jne
dec
jmp
xor
out
repz
sbb
inc
rol
and
mov
in
fcmovbe
out
adc
jge
mov
pop
out
cmp
sub
mov
push
jecxz
dec
mov
xchg
cmp
jbe
je
dec
add
dec
lods
mov
call
inc
pop
sete
sbb
mov
enter
clc
jl
lock
or
jb
jbe
fwait
push
call
cmp
test
xchg
jle
notl
jge
mov
xchg
sahf
sbb
pushw
in
js
lock
test
jns
adc
shl
or
adc
mov
adc
xchg
lds
cmp
dec
and
mov
lods
pop
out
std
sahf
mov
ljmp
adcb
cmp
movsb
popfw
in
inc
mov
incl
add
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
icebp
mov
invd
add
xorps
pop
cmp
jmp
jne
out
pop
test
ss
test
push
jg
lods
adc
out
or
sbb
push
sbb
movsl
xchg
jl
dec
outsl
daa
je
movsl
and
shlb
jae
and
leave
or
fcomp
pcmpgtb
cmp
cld
push
es
aas
add
loope
pusha
das
das
pop
fstpt
pop
adc
sbb
imul
outsl
mov
daa
into
test
pop
pop
sbb
mov
push
add
sti
xor
filds
pop
loop
test
dec
imul
sub
ds
or
jne
mov
mov
or
push
insb
or
adcl
movsb
sbb
nop
sbb
aam
scas
jl
aaa
fists
cmp
sub
out
cmpsb
push
test
cmpsl
ficompl
sub
bnd
jle
pop
leave
scas
bound
pop
shrb
and
jecxz
dec
sub
enter
jp
daa
mov
adc
mov
and
rclb
jno
int3
fstpt
push
pop
xor
jmp
je
adcb
cli
jle
fcomp
loope
scas
pop
pop
cltd
ret
fimull
mov
push
ret
scas
pop
push
inc
fbld
mov
pop
jmp
add
jg
lods
ss
nopl
or
scas
js
jmp
aam
push
pop
sti
sbb
popf
nop
push
sbb
and
pop
test
inc
cli
in
push
sbb
cmp
mov
push
enter
sub
fadds
rcl
cltd
jl
cmp
enter
mov
lods
inc
add
stc
sbb
aam
imul
mov
pop
icebp
or
and
pop
or
cwtl
dec
inc
flds
pop
in
lcall
xor
dec
fwait
add
loopne
jns
lret
rorl
and
pop
and
cmp
cli
in
inc
pop
add
lcall
aad
stos
jno
adc
and
popf
divb
arpl
cmp
fldcw
addr16
aad
and
fisttpll
xchg
int3
mov
pop
stc
test
fsts
adcl
or
push
bound
pop
cs
into
or
sti
pop
mov
cmc
pop
mov
adc
es
and
js
bound
test
rol
or
mov
push
filds
imul
jmp
lcall
and
mov
jecxz
mov
sub
stos
mov
sbb
jl
shlb
sbb
lret
xchg
adc
jbe,pt
fwait
jno
mov
jns
cmpsl
stos
test
clc
xlat
adc
shll
push
xchg
data16
xor
sbb
dec
sub
call
and
push
ljmp
mov
sub
inc
pop
imul
or
xor
aad
repz
lods
imul
out
hlt
adc
and
ret
sub
jns
out
fcoml
inc
loope
sub
out
cmp
rcl
outsl
movsb
test
cmc
jb
or
push
bound
sti
xchg
mov
xchg
or
mov
jns
and
mov
inc
clc
pop
sub
clc
sti
or
ljmp
lret
mov
sub
inc
cmp
push
leave
cld
jb
dec
mov
mov
test
push
mov
scas
xor
fsubl
cmp
into
in
mov
mov
outsl
rcrb
push
fwait
mov
js
mov
inc
pop
stos
pop
bnd
pop
lock
inc
ficoms
fcoml
push
cmp
push
sbb
in
push
push
mov
sarb
loop
mov
jns
add
fcoml
add
push
test
add
mov
inc
pushf
ret
or
jg
xchg
inc
iret
daa
mov
xor
mov
fistl
test
xchg
xchg
xchg
cmp
outsb
jns
ja
sub
outsb
movsb
pop
or
mov
mov
pop
push
ficomps
iret
xchg
sti
pop
adc
das
cs
lds
add
addr16
scas
sub
push
mov
mov
and
adc
gs
sbbl
loop
or
into
aam
rorb
jmp
sub
xchg
repnz
mov
mov
push
rcrb
insl
mov
loopne
ja
sti
rcll
imul
mov
addr16
xor
jp
xorl
cmp
adc
xor
stos
sbb
adc
sbb
inc
inc
add
inc
mov
aad
mov
mov
imul
mov
add
jmp
aas
push
and
rcrl
inc
loop
bound
das
cmpsb
inc
mov
or
mov
lea
sub
fnstenv
adc
adc
mov
pop
add
scas
push
into
pop
mov
sub
jb
push
shll
les
and
hlt
mov
and
sarb
sbbb
push
or
ret
mov
shl
enter
xchg
adc
aaa
repz
cmp
repz
inc
jp
ficomps
shlb
dec
mov
cld
push
or
outsb
movb
lds
insb
and
ljmp
arpl
cmp
push
xor
jo
and
rcll
cli
int3
sbb
into
pop
mov
jno
xor
das
mov
les
jmp
mov
inc
lcall
fmull
mov
jne
movsb
dec
cs
mov
mov
in
icebp
ja
cmpsl
les
sti
sahf
test
mov
addl
xchg
pushf
or
clc
jmp
bound
xlat
inc
mov
or
jg
xor
loop
leave
sbb
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
punpckhwd
repz
pop
fs
push
or
push
xor
push
cmp
dec
aad
jns
lahf
push
jecxz
movsb
dec
cltd
ss
lret
out
pop
std
stos
out
jnp
or
mov
sub
fstpl
cmpsb
mov
mov
sbb
in
push
cltd
test
mov
inc
adc
add
leave
push
pop
stos
frstor
push
or
add
std
jo
mov
insb
imul
dec
xchg
pop
js
lret
ficoms
push
jo
and
repz
push
je
fadd
mov
and
sbb
push
or
xchg
jl
cmc
sahf
dec
push
in
test
outsl
lcall
fnstsw
sub
outsb
adc
ret
arpl
and
gs
or
fsubrs
inc
int3
cmp
xchg
js
dec
or
cmpsl
push
stos
sahf
add
repz
nop
aas
mov
cmp
ja
pop
sub
cmpl
int3
bound
and
jbe
sbb
mov
int3
sti
push
inc
inc
loop
pusha
je
fwait
popa
pop
ss
out
push
xorl
xchg
xor
push
dec
test
outsb
jbe
and
aad
cli
out
les
push
xchg
adc
push
or
cmp
jge
iret
lods
test
mov
inc
pop
add
loopne
lcall
les
and
cltd
cli
mov
aaa
xor
xchg
xchg
xorl
and
jecxz
jmp
sbb
and
cmp
lahf
lahf
ret
mov
sub
cmpsb
xchg
cld
or
pusha
and
incb
mov
jle
inc
in
pop
je
lcall
or
xchg
mov
push
xorb
pop
mov
jae
xchg
aam
inc
outsl
sbb
pusha
fistps
loopne
inc
imul
jns
mov
cmp
out
scas
pop
dec
lods
mov
mov
addl
xor
push
icebp
xor
rorl
mov
add
jmp
bound
clc
lods
xor
dec
ja
and
rorb
mov
lock
nop
add
push
add
loop
add
lcall
fsubrl
ret
mov
xchg
pop
movsl
xor
lds
je
sbb
pop
std
inc
popa
ljmp
lahf
inc
in
mov
test
in
lods
adc
mov
xor
sahf
mov
mov
dec
push
lret
and
pop
jmp
fbld
imul
jno
daa
imul
jb
cmp
cmc
push
lcall
dec
test
pop
inc
lods
sbb
bound
stos
pusha
inc
test
mov
push
jmp
stos
adc
sbb
and
pop
mov
xor
push
test
mov
dec
sub
xchg
hlt
mov
rcr
xchg
cs
call
pop
test
mov
mov
pop
in
or
jns
mov
iret
test
rorl
cmp
push
jbe
das
mov
dec
rol
ror
in
mov
sub
or
xor
inc
or
lds
stc
inc
mov
shl
jns
jnp
xor
out
xor
adc
aam
sahf
js
bswap
jp
sbb
iret
jl
loope
pop
repnz
jno
sbb
add
imul
xor
add
dec
dec
inc
xor
mov
int
push
mov
in
jmp
pop
xchg
lret
jno
jb
pop
xor
test
loope
ds
sub
sub
mov
sbb
push
fcoms
cvttps2pi
lock
test
cmc
cmpb
cld
sbb
xchg
push
dec
lret
imul
mov
out
fdivrl
push
jns
daa
mov
push
adc
add
loope
cmp
fnstenv
inc
mov
stos
inc
sbb
loop
hlt
pushf
push
pushf
sbb
adc
addr16
push
daa
je
lcall
mov
pop
je
pop
xchg
sbb
push
and
push
outsl
xor
daa
dec
or
jbe
dec
xchg
movsb
call
pop
add
add
pusha
jecxz
mov
pusha
push
dec
or
fwait
jmp
andb
dec
test
adc
es
cmp
cmc
jne
jb
unpcklps
jmp
rcr
sub
mov
shl
jo
inc
in
dec
jb
rcpps
fstpt
es
mov
jle
in
ljmp
pop
and
lahf
jg
mov
pop
movsl
js
data16
cli
xchg
xchg
pop
mov
addr16
bound
pop
test
xor
sub
cmpsl
and
mull
popf
hlt
inc
movsl
pop
rolb
sub
mov
insb
jle
std
dec
and
cmc
mov
inc
decb
aam
clc
je
fisttpl
scas
movsl
sahf
push
sub
bound
sar
inc
hlt
add
ljmp
mov
lock
ds
sub
inc
xchg
aaa
mov
clc
test
int
inc
icebp
xchg
dec
int3
or
push
lret
inc
pop
adc
repz
cmp
mov
fbld
movsl
adc
jp
sbbb
sub
push
ljmp
fsubl
inc
lock
sbbb
adc
fcoms
movsb
mov
cmp
fistps
leave
fcoml
inc
lcall
xchg
push
das
fdivs
jno
nop
and
inc
test
jl
lret
sarb
and
into
out
imul
push
dec
add
pop
jp
and
jb
and
inc
cwtl
mov
movsb
lea
adc
dec
imul
jg
loopne
mov
in
pop
popf
xor
sbb
push
cmp
fs
outsl
in
inc
push
into
stos
mov
mov
bnd
xchg
scas
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
fdivrl
cwtl
test
movzwl
pusha
ja
es
mov
loopne
pop
insl
pop
jb
mov
mov
cmp
ret
mov
fwait
jo
or
rolb
jp
lea
lea
inc
mov
jns
mov
stos
dec
bound
dec
imul
and
stc
loopne
es
fdivrs
hlt
xor
lcall
cli
and
sbb
lock
adc
cmpsb
add
dec
shll
cltd
icebp
iret
repnz
outsb
cmovns
dec
add
mov
into
aad
pop
mov
and
dec
dec
pop
loope
xchg
daa
notl
shl
mov
in
outsb
das
sahf
xor
sub
jae
dec
mov
int3
inc
and
sbb
jno
aaa
adc
jne
push
dec
leave
pop
and
mov
xchg
fmuls
and
jge
call
out
rorb
movsb
in
xor
sbb
xchg
fisubrs
lcall
cmpsl
add
scas
mov
sbb
cli
cli
inc
test
test
repz
adc
dec
adc
dec
sbb
jnp
inc
or
inc
sub
popf
cmp
movsb
jnp
push
lods
ret
in
js,pn
shr
dec
fmull
pop
mov
jl
ja
sbb
sub
adc
adc
jl
mov
mov
pop
insl
push
pop
push
xor
xor
inc
cmc
mov
xchg
in
adc
cmp
lock
into
test
mov
lret
cmp
test
cmp
int
adc
add
inc
sar
ss
sub
adc
pop
inc
fsubr
icebp
pop
mov
cmp
cmc
call
ljmp
movsl
lret
bound
cmp
adc
xchg
push
pop
jns
jne
in
pop
iret
or
std
mov
inc
ja
mov
push
xchg
jl
inc
jo
aad
jle
dec
cmp
cmp
loopne
sbb
jmp
push
mov
push
jl
loope
push
fstl
add
outsb
cmp
out
jg
scas
cmp
cmp
mov
sbb
adc
sbb
roll
popf
mov
fidivrl
jge
add
adc
fnstenv
push
sbb
stos
jg
jne
pop
cmc
ret
sahf
cvtdq2ps
sbb
inc
fs
sub
outsb
dec
dec
cmp
mov
pop
jb
mov
jno
pop
lds
inc
cltd
imul
xor
into
in
cmpsb
fidivs
dec
and
popa
xchg
push
cs
push
inc
mov
pop
mov
lret
push
neg
aas
iret
ljmp
dec
xchg
xchg
inc
sbb
push
shlb
push
push
cmp
js
xchg
mov
dec
xrelease
sub
mov
cld
dec
mov
or
cld
push
insl
push
and
dec
mov
mov
out
pop
flds
cmc
je
insl
mov
fistl
or
jb
cmpsl
mov
xchg
imul
pop
popf
jb
xor
xchg
out
xor
cli
sbb
ja
mov
adcl
ss
dec
lods
call
scas
sbbb
std
insb
in
addb
jmp
pop
xchg
add
xor
add
add
test
int3
pop
mov
dec
add
je
fwait
mov
lods
push
popl
cmp
aad
jl
cld
mov
mov
dec
jmp
fcomps
movsl
mov
mov
pop
out
inc
cmp
int
stos
out
mov
dec
inc
repz
or
sbb
inc
jbe
dec
jb
les
mov
adc
pusha
lds
call
stc
icebp
lahf
push
xchg
push
insb
aas
and
repz
adc
mov
jo
cmp
ud2
sbb
mov
xchg
roll
xor
repnz
push
fwait
pop
adc
gs
popf
pop
rcl
daa
test
dec
std
xchg
pop
sbb
pusha
xor
cmpsb
push
pop
mov
shlb
dec
mov
cmp
sub
je
jmp
sub
filds
sbb
out
stos
sub
sub
int
sub
push
stos
data16
fldl
and
jge
nop
mov
imul
pushf
mov
sbb
jmp
xor
inc
outsb
hlt
lea
into
out
imul
xchg
ret
cmpsl
ljmp
cmp
js
dec
int
rcrb
jmp
push
addr16
and
cmp
pop
mov
lahf
dec
sub
mov
rclb
inc
into
mov
aas
std
sub
push
mov
or
arpl
xor
add
jle
jmp
pop
xor
mov
sub
lret
xchg
sti
arpl
xor
and
mov
add
inc
dec
dec
xchg
adc
ret
jae
lock
mov
pop
ss
dec
xlat
shll
in
nop
in
cld
pusha
pop
lret
mov
push
outsb
mov
or
test
les
mov
out
xchg
ds
das
jnp
aas
cmp
cmp
inc
and
pop
pop
pop
lock
adcb
sbb
pop
daa
daa
pop
cltd
jb
mov
lcall
add
popa
push
imul
inc
xor
jl
pop
addl
lds
cld
aas
push
add
pop
lock
test
and
push
pop
cs
mov
cs
jp
stos
xchg
fimull
addr16
add
mov
inc
ret
adc
jge
add
leave
in
inc
pop
xor
push
outsl
cmp
fstp
std
cltd
pop
js
ret
std
adc
int
mov
adc
xchg
cmpsl
mov
stc
pop
lods
inc
neg
xchg
jb
test
fstps
jge
add
pop
xor
rcr
bound
push
clc
pop
and
sbb
and
mov
push
push
loope
dec
push
sbb
jns
pop
idiv
jmp
mov
xchg
mov
xor
scas
popf
invd
add
movq
rorl
fidivrl
cmpsb
push
fldenv
stos
int3
adc
xchg
imul
lods
std
jbe
inc
scas
scas
pop
mov
in
fldcw
divl
iret
inc
outsl
arpl
js
fdivr
dec
mov
rcr
out
adc
ret
cmpsb
repnz
mov
xchg
data16
lods
mov
mov
ds
jae
xchg
add
push
cld
aam
pop
and
dec
mov
cmp
cmp
in
test
add
fucomi
repnz
shlb
or
fbstp
mov
daa
aas
imul
sub
dec
cltd
jnp
popa
push
dec
stc
mov
loope
jae
mov
sbbl
cltd
add
sti
mov
mov
movsl
lret
daa
das
gs
push
adcl
add
adc
mov
inc
fs
je
stos
pop
mov
xor
movsl
movsb
test
xchg
or
cli
daa
imul
xchg
mov
dec
push
outsl
adc
and
jl
fldenv
dec
mov
stos
das
movsl
mov
mov
arpl
and
mov
fcomps
cmp
enter
lock
xor
xor
xor
adc
pop
pop
pop
sbb
ds
pusha
insl
imul
clc
es
dec
outsb
xor
popf
aas
adc
lcall
insl
push
or
addr16
add
andl
orb
sahf
mov
mov
mov
ss
mov
lods
sub
aad
mov
inc
jp
dec
dec
mov
push
push
cwtl
cs
cmp
mov
sub
sti
repz
jmp
mov
sbb
jl
lods
shrl
adc
dec
shlb
or
mov
push
jbe
dec
jae
mov
popl
stos
iret
out
mov
mov
xchg
fs
movsb
or
shl
std
and
add
push
jae
daa
cmp
std
fnsave
or
in
test
fcompl
or
imul
jmp
int3
je
std
leave
adc
fwait
shlb
xor
or
dec
iret
bound
out
xchg
scas
xor
in
pop
dec
pop
arpl
add
jne
pusha
cld
mov
insb
adc
sbb
add
cwtl
icebp
push
mov
out
mov
push
icebp
xchg
jb
mov
enter
cmpsb
popl
ss
sarb
test
push
addr16
cmp
push
cmp
sbb
mov
ret
inc
dec
movsb
mov
aam
loope
mov
mov
cmp
test
xor
clc
pop
and
nop
dec
sbb
push
mov
mov
jo
xor
adc
js
sarb
jg
xor
cmpsl
sbb
inc
scas
lcall
push
dec
testl
jl
fdivr
or
jae
add
sbb
push
jmp
bound
aaa
mov
subl
adc
cs
pop
scas
cmp
aad
ja
out
pop
add
int
mov
repnz
mov
lahf
jnp
push
jmp
cmp
ret
adc
mov
jmp
je
jmp
ss
insb
lock
jmp
dec
mov
push
inc
jnp
xor
das
out
jmp
xchg
popl
sub
or
dec
popw
cmpsl
adc
out
cmp
mov
fildl
ljmp
pop
push
sub
sub
lea
xchg
jmp
js
test
inc
push
loop
dec
inc
mov
dec
push
sub
int
jg
popf
push
popa
mov
pop
sbb
mov
setns
imul
push
call
jns,pn
mov
add
sahf
jmp
in
int3
pop
sahf
clc
popa
inc
jae
mov
cltd
push
daa
sbb
jle
loopne
jge
push
cmp
out
daa
xor
adc
sbb
fcomip
adc
stos
enter
roll
sbb
add
je
int3
xchg
dec
jl
stos
outsb
jecxz
fnsave
test
pushf
pop
add
jg
jns
cmp
rclb
nop
mov
jne
faddl
popa
mov
cmp
mov
mov
stc
add
out
repnz
repnz
push
mov
std
fidivl
cmpsb
pop
sub
ret
lahf
mov
cs
and
shlb
sub
js
shr
cmp
sahf
sbb
mov
mov
inc
movl
loop
int3
lcall
sarb
push
push
jne
imul
inc
mov
mov
pop
insb
shrb
mov
gs
mov
mov
jo
sub
or
dec
ja
jp
ja
int3
dec
jl
mov
or
outsl
es
pop
mov
push
mov
insb
cmc
pop
pusha
xchg
aam
cmp
mov
out
leave
addl
lret
xchg
and
xchg
and
push
and
sbb
or
scas
scas
jae
hlt
mov
dec
push
lcall
jl
clc
pop
test
lcall
daa
mov
fidivl
mov
arpl
xor
in
into
vaddps
sti
std
cmp
xlat
xchg
sbb
sti
lret
mov
out
lret
lea
rorl
js
push
icebp
and
add
xor
mov
scas
push
sbb
add
cld
les
mov
mov
es
iret
pop
jo
mov
and
loop
je
insl
jae
adc
stos
sub
sbb
in
push
imul
imul
and
and
sbb
jg
dec
and
les
add
mov
xchg
lret
sbb
push
mov
or
movswl
mov
cmp
js
enter
out
sbb
pusha
xor
fnsave
int3
and
xlat
cli
and
ja
scas
test
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
push
test
invd
add
psubd
inc
push
out
cmp
test
pop
and
stos
jae
cltd
lock
xchg
hlt
xchg
mov
arpl
sahf
xchg
mov
or
pop
sbb
je
shufps
aas
mov
notl
and
xlat
arpl
lds
enter
into
adc
fstpt
nop
fimull
xchg
or
dec
jae
mov
jmp
fstl
push
pop
mov
push
add
jg
loope
sti
jge
jecxz
push
xchg
loop
push
imul
movsb
or
into
aas
test
inc
pop
notb
sub
mov
rcrb
jae
loope
sbb
adc
add
pop
jmp
inc
mov
and
push
vmulpd
inc
int3
mov
mov
or
call
dec
adc
movsl
scas
es
and
push
cmp
adc
insl
leave
aad
mov
test
dec
or
imul
shlb
data16
lds
push
add
jnp
pop
sbb
cmc
pop
cmp
push
xor
mov
or
stc
andb
mov
jmp
xchg
xchg
int3
movsl
mov
or
jbe
inc
sbb
loop
cmc
dec
pusha
cmp
push
out
pop
test
adc
sub
add
jl
ss
sub
test
daa
jmp
push
sub
push
inc
pop
and
outsl
cmpsl
pop
ret
stos
outsl
pop
adc
int
movsl
jge
mov
fstpl
clc
adc
push
mov
push
dec
in
outsl
xor
add
sbb
push
add
iret
insb
adc
repnz
lcall
movsb
push
xchg
mov
ret
imul
and
cmp
jno
lds
push
jns
sub
or
andl
add
mov
imul
and
push
and
dec
dec
ret
loop
jb
push
and
mov
repnz
sub
xlat
lea
cmpsb
mov
adc
dec
mov
les
out
insb
jle
aas
insl
scas
aaa
xor
add
push
test
xchg
fdiv
fs
in
dec
out
cmpsb
out
jo
lcall
mov
inc
xchg
sub
sub
dec
cli
cmp
sbb
faddl
ret
out
and
inc
cli
inc
adc
lahf
sbb
mov
out
lcall
push
add
add
mov
ja
cmp
pop
xor
sub
call
popa
pop
pop
cmp
jle
adc
cmpb
adc
stos
and
cmp
test
push
repnz
jb
aam
cmpsb
out
xchg
ror
or
ficoml
jo
xchg
clc
pushf
cli
pop
mov
imul
mov
mov
test
xor
xchg
dec
xchg
cwtl
hlt
jecxz
push
call
mov
ds
jne
shll
lea
dec
or
and
div
push
fstl
mov
mov
lods
dec
mov
stos
mov
mov
adcl
sub
aam
loop
mov
data16
push
scas
js
sbb
lret
js
add
mov
fmul
scas
mov
mov
out
cmc
push
dec
ljmp
mov
sbb
and
hlt
mov
out
aam
push
pop
scas
mov
add
and
je
push
outsl
int3
test
imul
push
iret
lods
lcall
mov
sbb
add
add
xchg
out
xchg
imul
out
sbb
test
jg
nop
pushf
add
pop
fsubrl
mov
mov
and
cmpsl
xchg
incb
mov
pop
pop
fsts
sbb
mov
mov
mov
xlat
mov
cli
and
data16
fldl
pop
add
stos
loope
pop
pop
mov
lret
inc
cmp
mov
ret
push
mov
cmc
xor
iret
popa
js
sub
iret
fcompl
neg
test
sbb
pusha
sub
cmpsl
dec
inc
jp
bsr
pop
adc
repz
mov
xchg
aad
dec
xchg
add
js
sbb
data16
jg
aaa
pop
pop
aam
pop
sub
xchg
iret
xor
popa
mov
add
pusha
popa
dec
notl
jo
push
cmp
and
out
test
xchg
in
pop
cmpsb
or
cmp
insl
xor
add
adc
repz
std
movsb
fidivrs
mov
pushf
lock
out
lods
xor
or
fmuls
sbb
in
sahf
mov
clc
daa
inc
repnz
stc
xchg
mov
mov
in
sbb
gs
push
outsb
xchg
inc
rorb
inc
fdivr
sbb
scas
sub
and
sahf
mov
aam
in
loopne
and
pop
fildl
mov
xor
jne
std
lret
pop
xor
pop
dec
loop
js
pop
and
jmp
mov
push
popf
ds
push
scas
pop
lea
rcrb
cmp
stos
je
inc
in
mov
inc
adc
dec
pop
scas
pop
mov
repnz
lock
gs
inc
mov
leave
jb
jecxz
iret
pop
pop
outsl
movsl
xor
push
movsb
in
outsl
push
test
lret
or
or
scas
mov
mov
xchg
or
push
enter
xor
jne
lret
jle
push
sbb
adcl
or
shlb
sbb
bound
xor
repnz
pop
or
jmp
fstpl
mov
cld
mov
inc
inc
mov
jg
icebp
outsb
dec
mov
mov
lret
cmp
add
sub
out
mov
jb
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
fwait
xor
mov
add
btr
mov
inc
mov
jle
jbe
mov
inc
adc
sbb
mov
stos
xor
xchg
loop
iret
dec
aad
hlt
or
push
std
stc
subb
or
into
jmp
mov
push
mov
outsl
lea
mov
movsb
push
out
xchg
sbb
xlat
mov
psadbw
mov
sbb
daa
cld
jge
or
fcmovnu
mov
pop
rcrl
jne
fmuls
je
xchg
pop
pushf
std
int
dec
sbb
cld
jne
mov
sbb
daa
mov
lret
jle
test
rclb
jb
or
repz
or
mov
ljmp
ss
adc
lods
or
int3
dec
rorb
outsl
sbb
add
jno
push
neg
jae
in
push
pop
enter
jne
test
lock
sub
call
adc
sbb
push
jge
inc
call
imul
xorl
outsb
xor
daa
ljmp
push
inc
stos
jmp
push
cmp
adc
test
out
nop
fldenv
xchg
loopne
push
pop
pop
jbe
adc
lcall
lea
push
xor
dec
fs
add
dec
subb
int
cmpsb
sub
adc
call
pop
ljmp
ret
push
lock
push
repnz
out
adc
mov
ljmp
clc
lods
je
rclb
sahf
pop
adcb
arpl
inc
lods
cmp
add
mov
inc
in
mov
pop
mov
sub
neg
adc
jp
lods
dec
test
mov
loope
dec
fs
push
pop
sbb
enter
cmp
xor
adc
push
add
xlat
repz
and
movsl
sbb
pushf
int3
shll
frndint
std
mov
xchg
pop
shlb
ret
jp
sbb
and
je
ja
pop
pop
addr16
xor
sar
das
sub
xor
stos
sbb
aam
ficoms
hlt
mov
clc
xor
scas
out
xchg
pop
jmp
scas
push
ljmp
hlt
mov
aad
aad
add
fcoml
fmuls
lret
out
mov
add
cmp
dec
adc
shrb
jo
lret
leave
adc
stos
cmp
push
pand
loopne
aam
mov
xchg
and
dec
shl
hlt
push
xor
shll
jnp
aas
aas
jbe
dec
push
or
mov
push
sbb
sub
outsl
mov
xor
xor
je
push
cmc
subb
mov
xchg
bsf
or
inc
jbe
push
outsb
in
inc
jmp
pop
add
xchg
sub
jmp
pop
dec
pushf
push
push
sbb
push
xchg
xchg
inc
xchg
xchg
cwtl
jo
xchg
jbe
sbb
stos
lea
jmp
les
clc
test
sar
or
or
test
aad
push
pop
inc
mov
inc
inc
jmp
or
sub
cli
loope
pop
push
push
adc
jge
sbb
fsubrl
ja
sub
mov
cmp
stos
adc
jle
rorl
mov
stos
out
in
mov
jle
cld
and
stos
push
sbbb
lret
or
or
push
xor
clc
pop
mov
in
xor
jle
dec
push
out
out
inc
inc
mov
sarb
mov
test
int
int3
stos
cmp
jle
int3
shrb
inc
das
cmp
les
sbb
imul
or
mov
testl
mov
xchg
inc
lret
loopne
test
pop
xor
daa
cmp
add
repz
lcall
aas
lods
test
and
lcall
cmp
es
mov
xchg
out
push
xor
stos
xchg
mov
push
push
inc
mov
cmp
and
int3
pop
sbb
xor
bound
mov
arpl
in
lret
pop
fdivl
test
xor
jle
or
ss
ficompl
add
les
adc
jecxz
lds
scas
mov
inc
and
fstp
inc
sbb
pop
dec
xchg
test
lret
mov
push
lods
mov
loopne
push
sbb
cltd
adcb
adc
in
insl
inc
sti
xor
rcl
mov
inc
mov
pop
xchg
pop
cmp
lret
pop
insb
adcb
pop
mov
sub
add
add
cmpsl
fstpt
dec
out
cmp
pop
adc
shl
xchg
std
push
inc
cltd
pop
and
mov
mov
jno
mov
add
insl
ret
mov
lcall
pop
addr16
push
inc
mov
orb
stc
shr
pop
pop
fisubl
jae
mov
mov
jp
loopne
popa
xor
inc
lahf
gs
int3
lret
push
jb
cmp
adc
and
daa
cmc
jle
clc
jb
iret
mov
aad
xchg
pop
loopne
push
nop
imul
mov
add
jne
jle
dec
xchg
pop
adc
test
ljmp
mov
lea
lret
push
mov
xorb
mov
in
cwtl
fistl
stc
inc
adc
push
lret
mov
adc
pushf
in
jg
xchg
inc
pop
movl
incb
mov
mov
mov
mov
pop
push
ret
pushf
push
mov
repnz
add
insb
xchg
xor
xor
pusha
jb
rolb
or
popa
aad
outsl
mov
outsb
ljmp
sub
aam
out
sbb
shlb
movsb
sar
push
icebp
jae
ljmp
mov
push
push
mov
pop
aad
dec
ljmp
gs
pop
or
mov
cltd
test
in
shrb
mov
les
test
cltd
icebp
jae
push
pop
lock
insb
sbbb
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
outsb
js
mov
add
jns
push
js
ja
outsl
std
cmc
cwtl
jb
mov
aaa
test
insb
inc
test
out
fdivl
imul
cs
xchg
mov
imul
jb
in
xor
mov
fdivrs
inc
aaa
lods
jbe
out
dec
cld
ss
into
test
jns
push
sub
ja
mov
scas
shrb
fwait
push
aad
pop
or
push
pop
or
mov
fmull
fisttps
cmp
pop
mov
cmp
leave
adc
jmp
push
bound
and
lods
mov
lahf
dec
or
les
and
ss
cmp
rol
pop
mov
xchg
pop
cmp
rolb
lock
outsb
ret
sbb
rol
and
push
and
sub
out
mov
cmp
jno
mov
aaa
sbb
sub
repz
and
in
mov
incl
sahf
pop
push
fcoml
inc
mov
shll
aas
cli
push
xor
pop
or
cmp
cmpsl
xchg
jae
out
ret
mov
call
sub
in
add
js
adc
sbb
inc
mov
cmpsb
sub
pop
test
mov
dec
test
rcl
push
in
xor
cmp
mov
sti
push
je
push
stos
sbb
pop
enter
xor
cmp
cltd
push
mull
or
jns
lods
loope
xor
leave
mov
test
outsl
inc
aas
cld
sti
cs
inc
sbb
neg
std
adc
cs
push
popf
in
sbb
lea
xchg
movsb
jne
xchg
lret
aad
dec
cmpsl
jmp
pop
inc
add
test
enter
cmp
popa
sahf
sbb
cld
or
jecxz
leave
xchg
pop
scas
add
mov
mov
jnp
dec
sbb
mov
mov
or
push
mov
outsl
dec
xchg
xorl
dec
or
mov
sbb
or
seta
jnp
mov
pop
add
cmc
hlt
pushf
jge
xchg
mov
mov
test
mov
xchg
ret
mov
cs
mov
push
into
popa
outsb
ljmp
cmpl
stos
adc
imul
movsbl
lret
xchg
decl
add
jl
fidivrs
cmp
jg
jp
in
scas
lret
sub
in
push
sbb
ss
addr16
pop
xchg
sub
mov
adc
pop
leave
ds
mov
xchg
add
jecxz
das
jge
sub
sbb
std
sub
js
outsl
bound
adc
dec
int
push
xor
sbb
xor
push
inc
mov
sbb
aaa
xchg
sbb
jb
out
gs
mov
adc
loop
aad
xchg
sub
fucomi
cli
bound
cld
inc
and
mov
inc
push
xchg
mov
or
add
sub
aam
loop
mov
jmp
mov
push
js
jae
mov
sbb
dec
clc
dec
into
jns
jl
pop
push
xchg
pop
scas
or
ds
cmp
out
adc
xchg
sbbl
mov
push
jne
jbe
cmpsb
mov
shlb
std
jmp
rcrb
aaa
fdivrs
sti
sub
mov
mov
sub
jecxz
outsl
add
inc
cmp
in
mov
cmp
or
mov
repnz
pop
dec
sub
jne
dec
shl
xor
push
jne
push
adc
in
stos
sub
ds
mov
fistl
enter
mov
pusha
call
dec
inc
push
mov
rolb
insb
mov
jg
ja
les
jmp
adc
xor
fwait
nop
jmp
xchg
lret
scas
vpandn
cmpsb
cwtl
imul
adc
xchg
jg
mov
cmpsb
cmp
push
lahf
sub
xor
mov
and
and
repnz
rorb
aaa
imul
cmpsb
scas
xor
stc
jmp
cmp
dec
fimull
aas
cmp
cmp
popa
jb
fstps
sub
sbb
test
pop
mov
pop
xchg
jl
mov
jno
aas
cmp
cmp
lods
xchg
fcoml
cmpsb
lods
loopne
fcmovnb
sbb
inc
sbb
scas
push
adc
adc
inc
mov
sbb
cmpsl
mov
mov
aas
lahf
in
jg
xchg
inc
mov
int
mov
jl
mov
mov
sub
add
lcall
jecxz
fcomp
imul
push
sbb
cli
aam
inc
pop
or
cmpsb
test
je
test
jp
daa
dec
pushf
jmp
into
cwtl
rolb
stos
adc
and
and
in
test
stos
mov
sbb
lret
and
lret
fnstsw
xchg
pop
push
pushl
inc
push
xor
int
adc
mov
ret
add
fucomp
cmp
pop
and
fstps
pop
push
sahf
rolb
inc
push
xor
push
fdivrs
fnstenv
pop
mov
ja
jge
push
test
out
push
into
cmp
inc
cwtl
arpl
adc
add
or
jns
pop
push
js
fbld
adc
xor
inc
in
mov
outsb
leave
mov
inc
or
mov
lret
inc
mov
pop
imul
mov
push
pop
mov
mov
mov
push
cmc
cmp
xor
push
test
setnp
pop
mov
and
repz
push
sbb
sub
pop
nop
incl
pusha
enter
xchg
pushf
fldenv
push
mov
stos
in
inc
and
adc
in
xor
dec
bound
shll
mov
or
ret
js
jmp
andb
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
divps
shlb
jbe
in
pop
cmpb
pusha
dec
lds
jns
xor
andl
int
mov
repz
dec
inc
aam
sbb
fs
mov
fwait
cld
cmp
pop
sbb
enter
add
adc
mov
mov
aaa
xchg
push
jne
push
and
roll
cmp
sub
int
xchg
loope
push
cmp
pushf
or
fs
pop
mov
stc
mov
dec
popa
mov
push
add
shr
lret
mov
ja
rcl
dec
sarl
pop
add
mov
adc
lea
daa
push
mov
adc
xor
sbb
fldt
lods
fistpl
add
jae
inc
out
cmp
push
fs
mov
fidivrs
ja
cmp
mov
rclb
or
scas
jns
and
dec
mov
xchg
mov
int3
or
cmp
xor
xor
mov
nop
in
loopne
loop
arpl
lods
inc
fcomip
pop
push
or
xor
dec
push
dec
sub
push
push
in
ret
mov
test
cld
jmp
mov
data16
and
mov
sub
sbb
popa
outsb
lcall
pop
aam
pusha
inc
addb
cmp
lea
mov
xchg
sub
pushf
xchg
xor
cmpsb
in
out
mov
sub
mov
arpl
push
xchg
shl
fcoml
mov
mov
mov
lret
xchg
jle
sub
cmp
repnz
aam
mov
inc
popl
mov
push
pusha
xchg
mov
es
push
dec
jne
mov
add
cld
div
and
ja
test
pop
dec
int3
pop
in
sbb
or
cs
inc
mov
inc
pop
xor
mov
push
lcall
lret
out
xor
loopne
loopne
std
test
mov
repz
cmp
cmp
xorl
or
rclb
clc
xor
hlt
xchg
ds
leave
stos
fisttps
and
je
push
roll
popa
dec
adc
xlat
mov
cld
in
test
xor
push
out
add
pop
icebp
push
jecxz
mov
test
call
cmc
push
and
jae
mov
flds
fucomip
cltd
es
mov
xchg
cli
add
mov
insb
aas
push
xchg
repz
cmp
into
push
loopne
adc
or
jge
in
ja
pushf
adc
jp
setp
popa
fsubrl
inc
jns
jns
fisttpll
mov
cmp
cmpsl
lcall
mov
jae
mov
adc
shlb
test
enter
loopne
sbb
icebp
push
in
pop
mull
jmp
popf
add
mov
inc
mov
mov
lea
xchg
jb
out
fnstsw
repnz
in
movsl
mov
outsb
loop
cmp
leave
rcll
jns
pop
mov
cld
fs
inc
lea
lcall
lea
movhps
adc
cmp
xor
mov
cmp
jle
enter
jbe
pushf
lret
pop
fs
pop
xor
cld
jecxz
or
inc
iret
pop
add
scas
sub
call
aas
fldcw
cmpsb
sbb
icebp
dec
xor
cmp
inc
aaa
orl
ljmp
sbb
imul
stc
push
out
adc
push
icebp
rcl
dec
mov
ss
arpl
dec
lret
push
pop
adc
in
mov
xor
and
jecxz
pop
lock
inc
sbb
movsb
lcall
sub
mov
xor
xor
out
push
push
loope
xchg
imul
lock
imul
xchg
movsb
push
or
or
pusha
insl
jno
hlt
or
cld
pop
and
cltd
add
add
in
sbb
xor
sbb
jg
scas
cld
dec
sti
add
mov
sti
arpl
rorl
out
or
push
or
fadd
mov
incb
dec
dec
inc
pushf
or
paddd
call
pushf
fbstp
xchg
push
mov
scas
sbb
ljmp
rep
dec
call
cmp
push
push
xchg
loope
lods
les
cltd
dec
adc
fcompl
repz
xchg
das
addb
imul
dec
xchg
dec
dec
cltd
add
xchg
xchg
push
push
dec
push
cmp
fwait
cmp
xor
popa
ret
rorb
loope
mov
jle
xchg
into
sbb
inc
addl
xchg
sub
insb
push
sbb
mov
cmpsl
xor
mov
inc
add
sub
xlat
fisubl
das
aam
pop
dec
shl
test
mov
scas
mov
test
daa
push
push
adc
aam
sbbb
dec
dec
sbb
inc
cmc
pop
imul
sub
mov
add
aad
push
add
xor
inc
mov
in
addr16
inc
inc
mov
sbb
lret
jmp
and
imul
mov
inc
mov
cwtl
out
sub
mov
shll
mov
repnz
out
adc
jmp
aad
dec
or
in
movsb
int
data16
and
jg
das
sbb
stos
fcoml
outsb
mov
dec
loop
mov
mov
mov
icebp
popf
lahf
jecxz
lds
jg
push
stos
or
push
xor
adc
fisttpll
arpl
jae
mov
push
jae
jg
outsb
adc
cli
lret
into
xchg
pop
sbb
jno
insb
popf
in
pop
cld
xchg
nop
ss
push
jg,pt
dec
adc
mov
lods
dec
repz
mov
mov
mov
pop
pop
inc
xchg
into
mov
or
pushf
int3
sub
sqrtps
mov
ja
loopne
mov
and
mov
shrl
add
push
xlat
jno
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
mov
push
invd
add
psubsb
pop
inc
aad
sub
div
adc
pusha
movb
loope
xchg
rcl
jo
push
pop
sahf
pop
leave
sbb
pop
xorb
xor
testb
fs
sub
xor
aad
xor
icebp
cld
sbb
mov
in
test
inc
xor
adc
cmp
out
lret
push
and
test
mov
int
sub
sahf
push
jae
push
sub
add
into
jp
enter
mov
idivl
lahf
aad
xchg
inc
adc
jl
int3
rcll
xchg
sub
and
xor
lea
out
paddusb
in
mov
adc
out
xchg
loope
dec
sbb
das
lods
xchg
inc
push
add
data16
cmp
mov
lock
lock
xchg
mov
je
je
aad
mov
mov
rcll
subb
sbb
aam
add
sub
std
jle
das
xlat
xor
lea
lds
mov
mov
imulb
ja
mov
mov
pop
dec
mov
or
add
loop
nop
adc
push
inc
fists
ror
adc
stc
and
std
lahf
sub
cli
iret
push
scas
aas
in
push
dec
inc
bound
cmpsl
mov
xor
mov
mov
lods
pop
ret
pop
dec
fs
loope
inc
lea
adc
and
add
sbb
pop
mov
mov
out
mull
subl
sub
xor
sub
inc
dec
add
lods
pop
inc
cmc
inc
test
into
sub
add
or
mov
ret
addl
pop
ror
push
lods
mov
ret
subb
mov
repz
fstps
or
les
fs
cld
in
fidivs
lods
imul
repnz
mov
mov
adc
sbb
pop
cwtl
std
into
outsb
or
stos
push
jle
cmp
sbbb
adc
in
sbb
jp
push
lds
mov
jmp
jle
push
cmp
pop
in
cli
pop
push
or
sbb
insb
bound
mov
das
xor
icebp
mov
ret
cmpsl
jae
push
cmpsb
mov
dec
arpl
mov
pop
ss
xchg
mov
movsl
rorl
ljmp
dec
call
stos
mov
fcoms
imul
daa
jl
sbb
popa
xor
int
mov
inc
inc
add
stos
sub
add
bound
insl
lcall
je
inc
dec
jbe
mov
pusha
imul
call
dec
nop
adc
cmp
shlb
test
pop
ret
or
call
loope
shrl
xchg
push
mov
ds
jecxz
push
movsl
or
xor
xchg
insb
mov
xchg
or
add
aaa
jns
imul
mov
fdivrl
repz
pop
push
lahf
mov
cmp
lcall
dec
push
cmp
out
adc
inc
jle
ret
push
cmp
inc
push
mov
pop
inc
shrb
js
test
mov
and
mov
iret
aas
ss
mov
or
sbb
or
pop
lock
mov
sub
and
inc
hlt
add
rclb
or
out
cmpsb
add
mov
jge
repz
mov
clc
bound
xchg
or
sub
ja
xchg
pop
cmp
fwait
stc
add
test
out
in
aad
pop
mov
push
seto
and
fcoms
ds
ret
jns
mov
cmpl
mov
clc
aad
mov
jecxz
lahf
mov
test
and
int
jmp
dec
sub
fstpt
ret
fidivrl
cmp
jb
cmpsb
lea
inc
into
in
cmp
mov
pop
data16
and
adc
loopne
cmp
out
cmpsb
cs
mov
sbb
fs
or
pop
dec
andl
aad
test
popf
ss
adc
fcmovbe
mov
xlat
popa
mov
cltd
xor
xor
mov
jns
andb
xchg
pop
fld
loope
inc
xor
mov
push
push
loop
dec
xchg
daa
xor
sub
adcl
outsl
shlb
push
test
pop
sti
popa
dec
adc
repnz
adc
dec
stos
mov
lahf
pop
outsb
dec
movsb
in
push
mov
fst
in
out
adc
push
outsb
push
daa
or
pop
lcall
popa
cmp
in
mov
mov
cmpsb
xchg
cld
mov
movsl
jne
add
neg
mov
and
popf
imul
insb
stos
mov
mov
es
addb
adc
sbb
cmp
ss
adc
dec
adc
xchg
push
stos
mov
ja
nop
lock
ja
push
sub
mov
outsl
jae
dec
out
cwtl
pop
pop
fs
sbb
mov
out
ret
mov
addl
mov
and
ret
mov
sbb
push
fnstenv
or
stc
sbb
mov
mov
lock
mov
repz
test
or
pop
pop
ret
fdivr
inc
clc
pop
divl
aas
pop
pop
jo
addr16
pop
rorl
xor
mov
sbb
push
test
loopne
add
cltd
mov
test
into
and
lea
lock
sbb
or
cmp
push
pop
test
or
push
in
xchg
xor
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
mov
invd
add
cmovne
inc
out
in
cwtl
push
shlb
es
icebp
ljmp
fsubl
ds
cmp
out
repnz
sbb
ds
lods
xor
push
or
pop
fstl
adc
insb
pop
jecxz
pusha
xchg
dec
iret
jnp
add
scas
push
into
fsubs
test
aaa
nop
bound
mov
lds
test
cmp
pop
push
roll
test
or
mov
call
leave
sub
or
notb
pop
aad
sub
mov
in
into
push
and
in
and
incl
xor
xchg
cmc
fxch
inc
bnd
loopne
test
xchg
mov
xchg
cld
dec
xchg
nop
fld
or
xor
pushl
adc
or
xchg
push
rcrl
add
repnz
fbld
jne
pop
aam
shrl
sub
xchg
or
xchg
insl
mov
rorb
inc
xchg
xchg
loopne
mov
outsb
cmpsb
cmp
push
inc
inc
sbb
out
std
inc
data16
imul
push
dec
lret
mov
shlb
nop
ss
imul
jp
movsb
jno
sbb
bound
rep
jecxz
mov
or
push
outsl
in
jecxz
mov
cmp
ss
lea
out
jbe
ss
dec
push
ret
das
xchg
jne
jae
imul
dec
sbb
scas
ds
iret
cmp
jg
das
sub
sarb
movsl
jae
dec
out
push
jae
sub
test
inc
out
adc
mov
mov
cmp
mov
data16
cmp
fiadds
fsub
mov
aam
inc
imul
jge
lret
sbb
aaa
daa
pushf
ja
xchg
lahf
mov
push
add
das
test
cmp
pop
xor
je
icebp
mov
dec
call
scas
mov
jmp
dec
ljmp
cmp
push
sub
mov
insl
pop
loop
mov
js
xchg
fwait
andb
insb
inc
not
xorl
js
mov
mov
out
or
les
inc
icebp
outsb
lods
mov
gs
xor
pop
xchg
pop
les
jmp
lds
sbb
add
loopne
sbb
pop
jmp
movsb
cld
popf
mov
add
inc
xchg
adc
add
inc
pushf
popf
int3
inc
add
and
cmp
mov
jp
lods
mov
pop
je
andl
hlt
mov
scas
loope
int3
jo
pop
xchg
mov
push
xor
jno
push
and
sbb
bnd
icebp
xor
add
push
jecxz
adc
les
adc
das
cwtl
push
test
mov
jnp
icebp
ss
loopne
pop
mov
jno
outsl
add
cld
push
push
daa
xor
mov
xchg
out
aam
sti
icebp
add
mov
cmp
ret
add
add
popf
mov
mov
dec
out
mov
in
test
or
mov
imul
jmp
jg
jle
popf
sub
xchg
inc
outsl
fistps
mov
ljmp
int
ret
pop
and
pop
daa
aam
push
mov
cli
and
stos
in
and
addr16
push
jns
scas
faddp
mull
or
push
push
data16
push
push
or
fwait
mov
xor
pop
in
mov
xor
subb
shlb
roll
pusha
daa
adc
inc
cmp
xor
mov
pop
notl
popa
movsl
jp
mov
aaa
stc
movl
push
add
in
rcll
mov
add
sahf
cmpsb
popa
rcl
or
repnz
jp
idivl
lods
leave
push
rorl
aaa
mov
pop
idiv
inc
popa
stos
mov
ret
xchg
dec
sti
dec
adc
jb
xchg
je
imul
mov
push
mov
cpuid
xchg
cwtl
stos
mov
add
clc
les
out
pop
adc
mov
aaa
adc
dec
mov
mov
std
stc
dec
sub
and
mov
mov
pop
sbb
rcrl
or
inc
insb
push
lds
aas
fisttpl
push
mov
sub
arpl
cs
push
inc
xchg
add
mov
movsb
jl
pop
loopne
iret
divl
sbb
icebp
sbb
adc
mov
int
ss
jle
outsl
fisubrs
addl
pushl
cli
movsb
mov
xchg
sub
add
mov
aam
add
cmp
pop
rolb
popf
setb
test
mov
xchg
pop
lods
pop
sub
push
add
rcrb
mov
inc
std
lahf
jo
mov
pop
dec
cltd
inc
pop
in
jnp
adcl
arpl
fsts
dec
fidivs
mov
in
mov
sbb
xchg
xor
pusha
jle
xchg
inc
jnp
loope
outsl
push
orl
push
or
mov
clc
popl
mov
jle
push
add
lds
or
sbb
push
pop
jae
test
dec
pop
xchg
cmpsl
cmp
dec
push
insl
xor
js
xorb
cmc
js
sbb
adc
mov
call
ja
cmpsl
push
jmp
fisttpll
mov
mov
int3
lds
dec
xchg
mov
and
je
inc
xlat
mov
out
repz
xchg
push
jo
cld
sub
sarl
test
leave
aad
mov
aad
push
or
movd
loopne
mov
adc
movsl
mov
or
mov
outsl
push
lahf
mov
fiaddl
aaa
jne
dec
cwtl
mov
xor
mov
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
lsl
mov
jl
adc
out
insl
clc
int3
mov
inc
imul
out
push
pop
mov
adc
pop
lods
cli
scas
test
imul
mov
mov
xchg
push
cmp
add
jb
mov
inc
cmp
imul
loopne
stc
enter
clc
lret
fs
add
cmc
lahf
lret
int3
and
cmc
lret
and
inc
and
ss
arpl
or
shl
jae
fcomip
push
outsb
inc
mov
fisttpl
shll
mov
push
out
xor
sub
pop
jno
inc
sbb
xlat
or
outsl
inc
je
inc
pop
sub
add
icebp
clc
rcrb
adc
push
mov
cmp
pusha
out
stos
push
insl
and
iret
mov
jnp
add
dec
mov
push
pushf
pop
lds
sbb
push
loop
rorb
xlat
mov
lods
fwait
inc
aaa
cmp
xchg
sbb
cmp
gs
inc
pop
sbb
into
stc
push
int3
push
inc
mov
loope
mov
dec
push
and
andl
repz
movsl
xor
mov
sbb
cmpl
ret
rorb
insb
add
xchg
nop
xchg
nopl
fidivrl
fs
int3
xor
inc
call
and
push
out
push
daa
push
cs
lahf
inc
mov
pop
xchg
jg
int3
xor
cld
mov
ljmp
movb
pop
ret
pop
add
dec
pushf
fildl
sbb
std
rcrl
mov
pop
sub
cmp
jp
cmp
xor
divb
std
mov
out
sub
pop
lahf
jl
fs
out
jnp
sbb
dec
sbb
and
test
xchg
sbb
push
push
sarl
out
out
push
sbb
shl
and
scas
mov
out
cld
mov
xchg
rcrb
xchg
lock
mov
loope
lods
hlt
fldcw
xchg
cmp
orl
push
ret
jnp
and
shrb
xor
fidivrs
int3
cmpsl
mov
icebp
insb
mov
in
and
or
inc
or
lret
movsl
cmp
dec
push
notb
push
push
push
out
jns
rorl
add
popf
adc
xor
ret
pushf
sbb
fcomps
enter
idiv
lret
daa
je
mov
mov
jg
mov
push
mov
ja
in
es
xchg
and
add
pop
rorb
daa
adc
mov
ret
sbb
cmpsl
dec
cmc
add
in
cmp
adc
inc
dec
push
jb
pop
xchg
pushf
adc
pop
inc
pop
mov
daa
jmp
aad
mov
adc
cmpsl
popa
xor
mov
adc
sbb
mov
adc
or
loope
lcall
adc
xchg
clc
push
mov
mov
mov
sahf
xchg
push
mov
mov
dec
inc
mov
push
test
sbb
sub
mov
inc
in
iret
ret
mov
dec
lret
fdivrl
xchg
mov
out
lcall
mov
mov
cmc
push
and
lods
jae
lock
das
cmpsb
sysenter
push
out
mov
mov
push
pop
inc
outsb
sub
aaa
push
data16
sbb
popa
sbb
imul
arpl
or
es
and
stos
xor
out
pushf
dec
mov
mov
dec
xor
js
fdivp
jp
xchg
inc
and
inc
lret
pop
insl
into
pop
jle
insb
out
cmp
arpl
es
mov
jmp
add
jge
dec
push
pop
rcrb
aad
fsubs
cmpsb
ret
xor
mov
js
out
addr16
pop
imul
and
jo
xorb
int3
push
fbld
mov
pop
cwtl
dec
loope
jmp
jl
loop
scas
sub
inc
mov
and
mov
jp
cmc
stos
adc
push
les
jl
aad
mov
scas
inc
imul
xchg
addl
aad
cmc
mov
mov
imul
out
stos
push
pop
add
cmpsl
test
lcall
jne
mov
push
loopne
in
pop
sub
adc
jle
outsb
fnstsw
shlb
mov
out
jne
cmc
lret
in
and
adc
adc
lret
popa
mov
scas
std
sub
call
jle
or
gs
js
fwait
mov
mov
lcall
push
inc
push
pop
inc
pop
addr16
addps
fisubs
sbb
mov
push
push
sub
xchg
and
pop
aaa
dec
cwtl
cmpsl
adc
xor
inc
leave
xchg
movsb
mov
nop
pop
add
ljmp
fdivs
jb
pop
popf
outsl
and
es
xchg
push
mov
inc
mov
sub
repz
xor
je
xchg
pushl
mov
xorb
mov
xlat
loop
ffreep
ljmp
rcll
sti
lret
push
test
mov
pop
push
icebp
xlat
sti
dec
in
stos
jne
sbbb
cmp
inc
dec
cmpsl
inc
ljmp
outsl
sbb
cld
ficoms
sub
popa
inc
out
jnp
das
jbe
push
adc
lcall
inc
loopne
fwait
mov
sub
xchg
xchg
fs
xchg
cmp
jl
jp
inc
or
mulb
sub
out
inc
lcall
or
testb
cmc
sub
inc
adcb
into
pop
leave
mov
fbstp
add
inc
out
in
xor
ljmp
lcall
xor
lock
fnstenv
sti
dec
in
xchg
xor
cmpb
test
movb
mov
sbb
cmp
rolb
cwtl
jne
xchg
inc
je
das
push
sub
icebp
les
int
je
rclb
mov
push
outsb
and
inc
call
mov
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
cli
sub
mov
or
psadbw
outsl
cld
in
cli
outsb
mov
jo
jmp
insb
les
cli
cmp
test
hlt
xor
les
divb
dec
mov
mov
pop
test
xchg
outsb
inc
fwait
sbb
into
sbbl
arpl
sub
decl
xchg
jle
scas
loopne
sub
jnp
pushf
jmp
les
jecxz
mov
add
scas
xchg
or
in
pusha
into
popf
or
leave
cmc
cmpsl
adc
adc
les
outsl
popa
adc
mov
jmp
dec
and
addb
arpl
arpl
jmp
cmp
xor
cs
mov
add
movsl
sub
dec
icebp
hlt
loope
sti
mov
ja
and
imul
inc
clc
fistps
out
jnp
mov
dec
push
and
sbb
out
dec
in
popf
sti
push
das
dec
cs
rorl
cmp
adc
inc
adc
jb
sub
sub
xacquire
nop
mov
pusha
mov
pop
pop
lock
jbe
add
lods
jl
pop
mov
rorb
in
jo
add
mov
add
or
sub
loop
jmp
dec
loop
fdivl
loop
out
ljmp
aam
in
jns
dec
inc
pop
jmp
int
imul
sti
mov
in
movsl
hlt
jmp
mov
mov
clc
arpl
rolb
insb
subl
sbb
sbb
sbb
mov
xchg
cmc
pop
xor
enter
xor
out
mov
xor
jns
mov
movsb
push
lods
mov
popf
stos
lret
arpl
cmpsb
pop
lret
pop
mov
adc
mov
xor
sub
push
js
jno
cmp
out
and
cltd
jnp
repnz
jne
sub
push
fwait
mov
push
lret
dec
adcb
into
pushf
inc
sar
lcall
xor
icebp
int3
dec
cmpl
fstpl
sbb
adc
inc
and
add
push
xor
xchg
dec
or
pop
pop
mov
aad
dec
scas
adc
cmp
andl
aam
pop
xchg
lret
dec
mov
pop
sub
push
sti
push
pop
mov
mov
adc
sbb
sub
flds
leave
repz
pop
popa
out
pop
jmp
pop
test
adc
cmp
push
test
or
add
mov
pop
jg
xchg
push
add
out
loopne
fimull
sbb
cltd
imul
jo
cmpb
imul
sbb
push
xor
jb
adc
lock
mov
xchg
repz
sbbb
insl
repz
sahf
hlt
test
and
xor
pop
and
aad
imul
clc
pushf
sub
cmp
adc
inc
mov
mov
arpl
pop
leave
jb
mov
jo
hlt
outsb
sbb
aad
out
insb
int
mov
push
lcall
jno
push
mov
stc
pop
mov
outsl
jne
out
cmpsl
inc
mov
inc
ret
data16
jo
mov
jne
addr16
ds
dec
or
add
sbbb
inc
jno
imul
cwtl
xchg
loop
dec
adc
add
lock
les
es
out
cmpsb
adc
test
shr
rcrl
mov
jnp
imul
lret
and
into
scas
mov
push
xchg
mov
xor
repnz
pop
into
pop
mov
int3
jnp
xchg
cwtl
sub
cmc
jecxz
fdivrl
sbbl
enter
xchg
icebp
in
adc
movsb
orb
pminsw
or
insl
popf
adc
add
lea
ret
dec
test
lods
out
jp
mov
inc
adc
xor
sub
in
stc
addb
mov
mov
ljmp
daa
ret
dec
divl
and
sbb
scas
cmpsb
ljmp
ret
inc
negb
mov
push
jne
sti
cltd
push
lcall
cmpb
les
dec
mov
add
mov
loopne
cmp
subb
outsl
stos
cmp
push
repnz
jmp
outsb
inc
call
sarb
iret
push
adc
in
cmpsb
inc
sti
mov
rcrl
inc
out
imul
add
push
jge
xor
out
sbb
cld
add
and
loopne
xchg
pop
jmp
jbe
repz
std
mov
out
iret
insl
pop
out
test
gs
in
cld
jge
mov
out
xor
push
or
lea
out
xchg
mov
and
movsb
aas
mov
push
lods
addl
scas
test
repz
fsubl
mov
push
xchg
sub
or
out
and
inc
dec
pop
aas
hlt
sbb
dec
ljmp
js
pop
pop
and
push
lret
rcr
pop
enter
jns
fmull
movl
mov
test
mov
stos
xchg
and
adc
bnd
repnz
inc
pop
sub
dec
xchg
push
subl
stc
xchg
sti
andb
dec
pop
mov
push
sahf
hlt
add
or
das
pop
pop
xchg
push
jb
xchg
cwtl
lods
subl
scas
adc
sbb
fs
out
enter
or
jne
inc
rol
popf
pop
jb
add
push
add
imul
cmp
pop
std
xchg
mov
and
and
popa
jmp
loope
aad
mov
push
leave
sbb
notb
ja
adc
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
pusha
push
out
mov
psubb
jl
or
xchg
add
int
or
testl
dec
or
and
in
cmpsb
mov
aad
jae
sbb
outsb
int
push
sub
fbld
cld
push
arpl
lea
cltd
mov
xor
fdecstp
das
js
push
shll
inc
in
sarb
leave
dec
sub
inc
pusha
rcrb
stc
adc
sbb
cmp
and
data16
icebp
in
adc
mov
out
dec
inc
sahf
mov
repz
mov
adc
add
inc
or
or
loop
jo
cmp
pusha
jge
push
push
test
cwtl
mov
mov
adc
xchg
pop
pusha
xor
mov
movsb
jbe
or
mov
mov
mov
into
addr16
adc
xlat
or
jge
jle
push
pop
icebp
add
and
int
int3
cs
cmpsb
mov
xchg
cmp
pmaxsw
pop
jle
jo
sub
or
in
in
faddl
rcll
mov
cld
pop
pop
or
insb
jg
adc
insb
leave
cmpl
sbb
ss
sbbb
repnz
scas
andb
push
push
popa
bound
mov
sub
flds
mov
dec
int
popa
pop
xchg
or
lret
cmp
jl
cld
outsb
sbb
ds
jg
ss
jb
mov
in
insb
or
add
insb
out
stos
cs
lods
shll
xchg
dec
ror
rcr
icebp
mov
int3
sub
jg
cltd
lret
mov
icebp
cmc
movsl
jmp
cmp
cmp
sbb
sti
and
mov
pop
insb
sti
notb
inc
push
clc
push
test
inc
push
dec
cmp
mov
ja
jmp
xchg
dec
cmc
movsl
dec
lret
shrb
rclb
jl
ja
xchg
pop
scas
out
sbb
insl
sar
push
mov
jmp
inc
push
out
push
aaa
cli
xchg
add
jb
jecxz
int3
out
xor
mov
js
les
sbb
stos
and
fisubl
jae
cmp
mov
add
xchg
add
into
mov
and
pop
and
shl
mov
lds
and
bound
and
jo
das
je
jnp
rcr
xchg
gs
jnp
call
push
cmpb
shll
out
sub
iret
mov
cmp
or
mov
decb
inc
insb
jmp
add
push
adc
xchg
adc
iret
fstps
rcrl
mov
mov
sbb
adc
push
scas
jmp
cmp
jl
jp
pop
stc
test
pop
mov
test
in
add
xor
fsubp
fidivs
outsb
jb
sarb
iret
add
xlat
shlb
xchg
out
dec
add
movsb
subb
pop
hlt
cmc
test
das
sub
popa
lods
mov
lods
icebp
ljmp
movsb
rep
push
sbb
daa
mov
lea
fimuls
shll
sub
sbb
in
sar
jo
cmp
sbb
jns
adcl
orps
mov
in
ljmp
push
cwtl
sahf
and
fdiv
push
push
cmp
push
push
test
push
pop
cltd
cmc
push
xchg
data16
adc
ret
les
pop
lock
mov
adc
and
mov
pop
add
xor
xor
out
xchg
mov
inc
cmp
stos
jg
pop
mov
or
jecxz
xchg
lods
fdivl
mov
pop
jmp
jmp
mov
cmp
jge
pop
lods
mov
xchg
xor
fidivl
jg
out
cmpsl
lea
jbe
ret
mov
sbb
outsl
int3
inc
fcomi
ror
and
pop
cmp
repz
jno
inc
and
nop
cmp
cmp
cmp
jmp
stc
fisttpll
pop
sub
jg
int3
and
lea
push
stos
int3
lods
or
js
popa
mov
xchg
sbb
pop
dec
scas
popf
adc
into
stos
in
test
jae
lcall
loope
sub
mov
outsb
fnstsw
push
mov
jl
loope
push
cwtl
loope
fstpt
imull
mov
inc
sahf
aad
stos
adc
into
test
pop
cmp
xor
lods
call
mov
inc
mov
sbb
xor
sbb
pop
lods
ds
mov
aad
xchg
aam
jg
xlat
jmp
dec
ret
pop
mov
cmpl
push
arpl
fsts
cmp
in
inc
pop
add
ljmp
repnz
mov
cmp
int
pop
call
ss
adc
cmp
inc
into
mov
sbb
das
frstor
xor
or
xchg
in
xchg
xor
dec
mov
pop
lret
mov
jo
mov
inc
and
xchg
hlt
fistl
push
pop
movsb
or
add
add
or
test
mov
outsb
repnz
scas
adc
aad
mov
in
and
inc
nop
hlt
push
dec
mov
add
jmp
popa
jmp
push
cltd
mov
pop
push
test
cmpsb
xor
test
adc
mov
das
mov
jmp
out
idivb
jns
and
and
clc
in
iret
mov
test
sbb
push
or
shll
adc
cmpsb
inc
inc
lret
shrl
stos
jge
aad
sbb
lret
pushf
mov
fcoml
pop
shl
fidivrs
add
xlat
hlt
fadds
fs
adc
jge
push
mov
sbbl
enter
cwtl
call
add
stos
fs
outsl
xlat
mov
ja
mov
cmp
xchg
mov
inc
test
dec
xchg
js
into
lods
ds
push
inc
cwtl
js
dec
sti
sbb
pop
movsb
jg
or
sarl
js
test
xchg
inc
xor
push
cli
call
sahf
out
pop
adc
ss
push
jnp
loop
pop
push
xchg
enter
jle
add
push
add
fmul
jmp
mov
xchg
pop
cld
dec
bound
imul
call
add
test
pop
push
sub
es
ret
movsl
add
push
test
fiaddl
pop
cmpsb
jg
iret
mov
cmpsl
into
jb
mov
lahf
stos
xchg
add
rolb
leave
idivb
cmp
mov
test
mov
pushf
mov
pop
lods
in
inc
cmp
psubw
sbb
inc
cmc
aaa
stos
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
mov
xchg
sbb
mov
jp
stos
inc
jbe
adc
add
sbb
imul
stc
or
add
lods
lcall
dec
outsl
imul
in
shr
push
cmp
movsb
or
adc
push
jo
dec
jno
xchg
test
fsubrl
adc
cmp
in
mov
pop
lea
add
sarl
mov
push
push
insb
push
cli
xchg
notl
stc
out
inc
in
cltd
test
orb
dec
or
adc
lods
cmp
push
mov
negb
stc
insb
mov
cmp
fisubrs
lds
lock
adc
and
mov
dec
pop
js
inc
test
std
in
pop
inc
cmpsl
xchg
mov
and
xchg
ror
and
pop
pop
stc
adc
dec
inc
jl
in
out
sub
push
jecxz
aad
push
mov
inc
mov
into
push
and
shrl
outsl
test
dec
sbb
and
icebp
xchg
push
xor
hlt
ret
jl
lods
xor
andl
pop
sbb
enter
or
sub
push
or
mov
adc
nop
div
movntq
push
test
pop
imul
adcl
xchg
fldenv
je
fcomi
jnp
loope
lret
jmp
jl
mov
xor
es
ds
aad
add
and
std
cld
mov
xchg
test
xor
cmp
cld
mov
cmp
in
jnp
mov
ds
push
push
imul
jge
push
or
add
loope
xor
lahf
ret
add
addr16
test
loope
mov
ss
jnp
out
adc
fsubs
mov
fists
mov
dec
test
in
or
cmpsb
lds
adc
hlt
inc
rolb
repz
xor
orb
cltd
in
jmp
jmp
pop
xchg
jge
mov
leave
mov
or
mov
or
mov
xchg
or
sar
lea
int3
xor
repz
jp
fdivl
movsl
inc
pop
stos
mov
repz
dec
lods
mov
shll
fidivrs
filds
in
jno
das
loop
cmp
or
and
lahf
or
mov
sbb
pop
dec
das
leave
sbb
sub
daa
shll
push
imul
lcall
daa
mov
mov
jle
push
jno
int
and
lea
dec
outsb
and
adc
push
enter
loope
js
cltd
lcall
or
lgs
jge
ror
push
or
movsl
xchg
pushf
adc
push
pop
jno
or
hlt
int3
push
js
jno
loopne
call
xorb
dec
clc
testb
jecxz
jne
push
outsb
mov
or
mov
rolb
rcl
sub
pusha
imul
cltd
imul
bound
dec
mov
sub
shl
inc
aas
addr16
mov
pusha
add
jns
dec
sub
mov
leave
movsb
inc
je
jne
and
mov
mov
fstps
mov
sub
adc
mov
mov
mov
jmp
adc
mov
leave
lods
fnstcw
lret
adc
in
dec
add
cmp
fldt
rcr
sbb
jp
frstor
enter
dec
mov
in
out
push
loop
adc
sbb
push
inc
xchg
push
jl
sahf
or
lods
int3
pusha
stc
dec
test
xchg
mov
out
cld
rclb
fistps
into
jno
pusha
int
fldt
test
jmp
xor
and
jae
mov
int
roll
cld
pushf
push
push
cmc
adc
jmp
call
test
dec
or
mov
xchg
loop
cwtl
test
xor
mov
xor
and
mov
and
lcall
jns
cli
mov
mov
xor
loopne
fdivs
cmp
inc
orb
sbb
lcall
adc
andb
jmp
dec
mov
cmc
popl
ret
sub
sarb
sub
fdivrs
add
idivb
jo
fiaddl
cwtl
nop
mov
call
int3
outsb
enter
out
jl
call
jbe
int
shlb
sub
flds
shlb
adc
xchg
add
insl
xchg
imul
cwtl
mov
lds
mov
or
daa
inc
aaa
pop
out
jns
ffree
ljmp
orb
mov
pop
outsb
loop
mov
adc
arpl
aaa
and
and
rorb
inc
cld
mov
inc
and
mov
jne
ret
movsb
xor
push
mov
pop
jae
repz
insb
sahf
and
pop
clc
xchg
mov
mov
movsl
push
xchg
test
int
imul
and
fcomps
loop
les
lcall
inc
dec
cli
inc
les
bound
push
mov
js
dec
test
add
dec
leave
into
inc
jne
sub
xor
dec
hlt
loopne
pop
movsb
leave
pop
jbe
into
mov
sbb
pushf
add
es
mov
decb
pop
test
dec
jns
iret
popa
je
gs
cld
cmp
push
test
adcb
cwtl
push
mov
inc
lea
sbbb
ficoms
cmpsb
sbb
lret
fiaddl
fidivs
icebp
dec
xchg
mov
ds
ficoml
adc
push
cwtl
push
adc
dec
push
jle
inc
movsl
mov
loop
jae
xor
or
lret
fs
shll
sbb
test
pop
in
xor
out
lahf
jmp
pop
test
cmp
shrl
movsl
stc
dec
ss
aas
mov
loope
popa
leave
fwait
in
inc
inc
es
in
xor
xor
adc
popf
xlat
mov
push
mov
ljmp
jns
sub
or
mov
mov
int3
cmpsb
lds
mov
sub
push
xor
mov
in
push
sti
inc
add
cli
pop
pop
rclb
int3
adc
test
inc
stos
inc
mov
sbb
fcomip
negb
subb
adc
or
hlt
sahf
add
jne
rcr
outsl
cld
aas
lcall
mov
mov
fildl
sbb
fwait
sbb
push
lret
outsl
scas
sbb
push
mov
mov
mov
xchg
push
mov
add
xor
push
jl
add
jg
loope
jl
adc
pop
mov
or
push
in
les
fwait
pop
mov
loop
or
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
jle
xor
pop
pop
mov
mov
sub
jge
add
outsb
loop
push
jl
or
enter
jbe
into
push
push
cmpsb
lahf
int3
aaa
das
add
stos
fwait
adc
jmp
dec
shll
movsl
movsl
outsb
and
mov
pop
dec
ret
dec
xchg
dec
or
mov
imul
and
add
inc
adcl
mov
mov
aam
je
inc
call
fs
push
inc
xor
pop
sbb
mov
into
push
pop
pop
or
outsb
jo
mov
xor
push
filds
iret
jno
or
js
pop
jbe
je
repz
test
push
cmpsb
rolb
jg
sub
aam
mov
iret
add
jl
sbbl
push
popa
pop
jp
fsubrs
lock
pop
adc
push
movsb
push
out
imul
daa
sub
and
or
jne
setb
and
je
icebp
and
mov
mov
and
lea
fld
inc
dec
popf
mov
bound
mov
jecxz
inc
cs
lock
add
es
pop
aaa
cmp
ficomps
pop
dec
pop
int3
addr16
pop
inc
dec
arpl
push
mov
testb
das
pop
lea
fimull
lahf
in
or
fisubrs
cs
fidivrl
ret
sub
clc
dec
iret
insl
jl
inc
adc
cli
ss
sbb
pop
sarl
cmp
mov
cmpsl
jecxz
arpl
fisttpll
push
lahf
xchg
movsl
lods
inc
test
mov
pop
cld
xchg
pop
addr16
inc
dec
int3
pop
rcl
or
push
fiaddl
sbb
xor
push
or
stos
lods
pushf
lods
hlt
in
jmp
pop
ljmp
adc
jbe
call
enter
push
cmc
mov
jg,pn
cmpsl
imul
or
in
xchg
jo
inc
scas
in
cmp
inc
push
dec
test
sub
push
addr16
cmp
push
adc
dec
leave
movsb
jne
xor
dec
xor
maxps
xchg
mov
je
adc
outsl
shr
jp
stos
mov
faddl
nop
adc
nop
adc
pop
xor
lds
sbb
mov
inc
or
test
jp
pop
movhps
sub
xchg
pop
icebp
cwtl
push
mov
mov
mov
std
jb
outsb
je
divb
push
les
mov
inc
mov
fiaddl
call
in
fcompl
into
push
test
push
popf
xchg
mov
mov
mov
cltd
push
stos
push
in
sahf
in
imulb
add
sbb
jmp
lods
mov
ficompl
inc
pop
cltd
insl
aas
sub
mov
push
push
cld
mov
sub
std
xor
add
stos
mov
push
lret
or
jge
sub
fsubrs
mov
sbb
add
lret
stc
and
shrb
and
jle
pop
sbb
cld
or
inc
inc
xchg
int
in
lea
popf
leave
inc
aaa
push
mov
dec
and
sbb
fldcw
inc
cmp
movsb
sti
push
jbe
jle
pushf
cld
scas
pop
lahf
push
pop
fidivs
std
in
and
inc
sbbb
int3
flds
dec
push
int
cwtl
repnz
cmpsl
fld1
imull
lods
pop
test
fiadds
ret
and
je
or
jp
jae
push
sub
addr16
pop
push
dec
add
jb
aaa
pop
and
push
adc
xor
es
push
push
mov
cmp
jmp
push
insl
cmp
in
inc
pop
inc
nop
adc
xlat
dec
stos
lods
push
pop
mov
lds
add
out
leave
jno
pop
push
arpl
outsl
testl
stos
cmp
pop
push
lea
stos
jecxz
loopne
xchg
dec
in
scas
adc
sub
push
push
pop
lret
pop
jg
sbb
repz
test
sbb
jns
cmc
in
inc
fstpt
or
sub
cmpb
shlb
gs
cltd
outsb
cmp
xchg
mov
jno
cld
pop
jbe
pop
cmp
popf
jp
jne
in
mov
cmp
inc
sub
out
adc
ficompl
adc
ds
jecxz
mov
mov
dec
xor
inc
mov
push
xor
dec
xchg
or
pop
cmp
insb
pop
js
mov
inc
dec
or
dec
shlb
stos
in
push
push
mov
push
aas
sub
cmp
testb
cmp
sub
pop
std
sahf
aaa
or
dec
fstpt
mov
cmpsl
imul
lret
test
jecxz
sbb
out
push
imul
and
cs
imul
push
inc
mov
jbe
fsubr
bound
and
pop
sbb
cmpl
lea
addr16
sbb
mov
je
pop
dec
xchg
jnp,pt
fwait
push
sbb
subb
push
xchg
adc
in
mov
xor
sahf
out
ret
pop
sti
test
cmp
inc
push
mov
imul
adc
dec
ss
out
jge
add
fisubrl
xor
lret
out
or
or
adc
aam
jno
lds
das
bound
push
xchg
adc
dec
cmp
ficomps
sub
mov
add
jbe
loopne
cmp
dec
das
clc
jl
dec
in
inc
jl
test
bswap
cltd
aam
lcall
popf
and
inc
aad
mov
inc
leave
xor
sbb
or
repnz
or
aam
cs
mov
mov
loopne
sti
ficoms
or
mov
push
ret
arpl
es
fistpll
das
cmpsb
repnz
arpl
pushf
cmc
cmp
outsb
mov
pop
inc
ret
xchg
mov
push
cmpsb
daa
sub
leave
or
in
jbe
aam
enter
aaa
mov
jl
stos
cmp
test
add
ja
xor
mov
and
mov
mov
je
pop
jmp
inc
daa
adc
mov
fisttpll
mov
stos
lods
mov
ljmp
insl
inc
stos
dec
mov
in
rclb
cmp
stos
jmp
push
sbb
sub
jb
out
icebp
loopne
jmp
pushf
jg
inc
out
lods
shl
stos
mov
imul
cmpsl
inc
cmc
pop
mov
fwait
mov
inc
aam
lods
shll
dec
mov
pop
sbb
pop
adc
xchg
in
call
repnz
jmp
into
add
or
cmp
sub
sbb
adc
and
cmp
fldcw
push
xchg
lea
sub
or
pop
int3
insb
fbstp
sahf
lods
mov
out
sub
cmp
stos
xchg
mov
adc
cmp
adc
bound
jecxz
jnp
mov
xor
ret
mul
pusha
pop
hlt
or
test
dec
add
add
popa
mov
jns
div
sub
repnz
pop
aaa
ja
mov
subb
imul
lret
xchg
cmp
dec
push
or
adc
mov
arpl
inc
movsb
pop
sti
lock
xchg
cmpb
push
mov
xchg
inc
leave
out
out
test
movsl
pop
mov
bound
into
pop
cmpsb
and
test
lea
push
in
inc
add
add
and
xchg
mov
in
sub
scas
adc
cltd
jmp
cmp
xchg
insb
mov
aaa
xchg
adc
sahf
lock
pushf
pop
mov
mov
mov
outsl
movsl
adc
out
xor
lods
cmp
roll
inc
mov
or
or
clc
lea
les
or
adc
pop
jbe
push
xchg
sbb
cmpsb
or
adc
shrb
pop
sub
dec
fcoml
jp
jns
mov
gs
mov
xor
mov
xor
inc
jmp
adc
push
and
lahf
jmp
mov
and
loopne
pop
nop
dec
lods
pop
pop
xor
fcmovnb
and
add
stc
cmpb
ret
inc
cltd
lock
mov
rorl
pop
jg
pop
cld
dec
scas
cmp
dec
in
pop
repnz
arpl
out
mov
pop
mov
dec
mov
adc
andb
sbb
stos
push
mov
leave
cmp
mov
aad
mov
mov
adc
dec
inc
mov
sub
mov
jno
dec
jmp
xchg
cmp
cmp
pinsrw
ret
dec
jb
or
push
fs
sbb
sbb
push
xor
pop
gs
aaa
xchg
push
adc
adcl
cmp
jp
push
adc
fs
inc
pop
je
out
push
and
push
sub
pop
lods
nop
pop
test
mov
add
fwait
push
mov
fidivrs
sti
add
sarb
enter
dec
add
xor
mov
adc
sbbb
test
ds
cmpsl
add
sub
fbstp
imul
jl
or
add
std
rorl
test
sbb
adc
mov
jo
gs
nop
jb
daa
popf
pop
cmc
es
or
and
dec
jne
xchg
or
aas
mov
and
fldcw
jle
cmp
sub
fldlg2
sbb
fsubrl
xchg
in
pop
adc
mov
fcompl
pop
sbbb
scas
xor
rolb
and
dec
sub
xor
insl
idivb
adc
std
mov
adc
arpl
add
and
and
xchg
lahf
sub
inc
pop
pop
adc
push
inc
xchg
sti
push
lea
cmc
in
lcall
scas
pop
sbb
pop
pop
movsb
mov
test
sub
pusha
cltd
mov
ljmp
int
sbb
add
xor
mov
imul
mov
cmp
mov
push
pop
mov
in
pop
jns
pop
repnz
jg
xchg
sti
adc
aaa
jno
repnz
dec
sbb
pop
data16
xchg
js
add
and
test
push
clc
cmc
mov
sub
addr16
insl
repnz
jecxz
jns
mov
dec
pop
ret
shl
or
minps
jge
jno
or
mov
daa
push
incb
jo
leave
mov
mov
mov
adc
mov
adc
or
sbb
xchg
sti
pop
cmp
add
dec
xchg
adc
movsl
pop
xor
jbe
lock
xchg
inc
pop
int
outsl
mov
jecxz
sbb
xchg
xor
inc
add
popf
dec
scas
jle
jno
cltd
cmp
lret
and
adc
mov
push
sahf
jno
clc
nop
sub
nop
fimuls
cmp
js
insl
mov
dec
pop
mov
xor
clc
inc
stos
jne
cmp
lods
mov
je
cli
inc
mov
inc
jae
cmp
xor
sub
ja
xlat
arpl
aas
pop
dec
and
cli
dec
jb
lods
sarb
movsb
push
icebp
aaa
mov
jae
aaa
pop
insb
stos
in
sub
lods
std
add
xor
or
test
mov
dec
jp
push
mov
push
sbb
mov
lods
clc
add
test
outsl
movsb
adc
xchg
lea
mov
push
ret
push
je
fwait
jb
ljmp
pop
adc
pushf
mov
mov
test
leave
int
rorb
adc
enter
shlb
shrl
jb
in
popf
test
push
adc
xchg
fbstp
pop
pop
fidivrl
mov
mov
dec
xchg
out
push
or
rcrl
fwait
mov
jmp
mov
insl
lcall
out
outsb
ret
aad
pop
mov
lret
daa
outsl
mov
mov
outsl
mov
loop
and
push
in
dec
stos
js
add
dec
cmp
arpl
movsl
movsl
in
xor
push
repz
lahf
cmp
adc
rol
imul
loop
cmp
js
rclb
ljmp
cli
enter
insb
movsl
adc
lret
push
lret
cmpsl
orb
vcvtps2dq
iret
mov
mov
mov
fwait
cwtl
mov
insl
jmp
imul
push
mov
mov
mov
sbb
adc
push
subb
push
lds
hlt
and
mov
fsubs
pop
add
jno
sub
pop
inc
fs
sub
out
mov
xchg
jecxz
sahf
xor
shll
int
inc
or
in
fucompp
shr
mov
popf
cmp
faddl
mov
repnz
mov
jnp
pushf
mov
rcll
inc
bound
lea
jl
push
jecxz
leave
popa
dec
orl
sbb
fdivs
mov
sub
pop
clc
sbb
cmp
pop
xchg
sar
aam
fisttpll
js
in
test
mov
mov
stos
mov
mov
es
jb
fdivrl
sub
and
dec
outsb
test
mov
pop
mov
push
scas
and
jno
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
inc
add
adc
and
adc
sti
inc
shlb
push
repz
cmc
arpl
push
mov
out
fnstcw
xor
or
adc
enter
mov
lods
lock
mov
mov
adc
and
mov
push
pop
fistl
xor
push
jle
std
out
sarb
or
hlt
pop
sbb
lods
testl
cld
sbbb
hlt
push
decb
and
sti
add
sbb
mov
int
jns
inc
mov
dec
idiv
cmp
add
or
outsl
xlat
pop
push
pop
inc
mov
mov
sbb
and
cld
jno
hlt
out
test
jmp
xor
sbb
das
dec
adc
cmpsl
rolb
aaa
out
mov
jmp
ja
sub
jge
push
nop
xlat
and
dec
and
mov
clc
push
je
mov
or
pop
sbb
cmp
jg
out
into
addr16
jmp
dec
ret
sbb
mov
push
int3
jb
pusha
sub
js
arpl
mov
into
pop
mov
mov
push
inc
xor
les
cmp
add
mov
dec
cmp
sub
push
rcrb
mov
inc
les
jecxz
aas
or
not
inc
xchg
add
mov
pop
inc
test
mov
sub
fisubrs
xchg
cmp
sbb
or
xchg
adc
xchg
int
mov
mov
push
je
lahf
mov
add
shl
test
popf
push
enter
sub
out
sahf
adc
xor
nop
popa
lret
mov
aad
sti
cld
push
icebp
loopne
mov
xor
xor
loope
mov
out
das
inc
in
les
sbb
mov
dec
jnp
jl
add
sbb
cli
shl
outsl
xchg
in
cmp
js
test
stc
cmp
inc
mov
or
and
fidivs
gs
cmpsb
jl
das
push
ret
mov
xchg
mov
loope
push
xor
rcrb
ja
jbe
ret
fiaddl
add
or
add
sahf
lahf
inc
icebp
in
negb
xchg
jb
fwait
rol
les
aaa
push
mov
sbb
mov
mov
sbb
mov
enter
shll
in
cwtl
add
aas
jnp
cmpsb
mov
jae
test
ret
in
xor
xchg
dec
fcmovu
inc
cs
stc
xchg
adc
pop
mov
les
xlat
inc
mov
jae
cltd
or
xchg
mov
mov
mov
push
insb
mov
jg
in
out
cmpl
enter
fwait
int
aad
cmp
in
sbb
ljmp
xchg
xchg
mov
test
imul
bound
cmp
cmpb
mov
xchg
pop
cs
scas
aaa
pop
test
popa
stos
ret
push
mov
cmpsb
mov
pop
imul
and
cmp
inc
ret
aam
jns
jmp
das
sti
adcl
lret
and
testl
int
cwtl
imul
inc
cmp
ficomps
int
iret
cmp
or
jp
call
cmpsb
daa
sub
popf
jecxz
adc
jns
mov
rcr
shr
or
mov
mov
sahf
push
inc
and
rorl
imul
shll
lret
adc
and
jo
adc
xor
mov
xchg
ficomps
push
inc
jle
arpl
xchg
lods
inc
inc
icebp
cltd
push
cmpsb
fisttpll
xchg
pusha
enter
das
test
add
out
push
push
popa
fdivr
dec
dec
add
mov
movsb
xchg
inc
or
lret
sbb
or
xor
dec
movsl
adc
outsb
mov
sahf
cmc
dec
in
addb
inc
rcrl
in
sub
stos
insl
test
push
std
adc
fisttps
scas
xchg
xchg
arpl
int3
test
push
outsb
mov
je
in
scas
add
xchg
pop
sub
out
inc
out
loopne
call
cmc
cmc
arpl
mov
scas
mov
adc
mov
mov
push
repnz
js
inc
add
aad
lret
jns
ljmp
add
sbb
frstor
or
fucomi
mov
jge
outsb
in
ja
movb
mov
cmpsl
pop
stos
inc
subl
ss
adc
xchg
das
or
push
aas
adc
es
pop
dec
mov
fsubrl
inc
xor
push
pop
rcl
cmp
das
dec
pop
jne
ret
and
sub
shl
pop
dec
pop
test
les
lods
xor
insb
pop
sbb
cmp
addr16
sbb
dec
jg
out
mov
mov
xor
icebp
jp
outsb
xor
push
jo
je
cmc
fistps
hlt
jmp
inc
sbb
cmc
shl
iret
dec
pusha
ss
push
fs
rcr
fcmovnbe
push
aaa
rorb
inc
sahf
push
test
xchg
aaa
push
jnp
enter
popa
fwait
dec
and
sahf
add
je
mov
sbb
loopne
and
adcb
fiadds
cs
mov
int
int3
imul
pop
cmp
lret
push
hlt
cmp
inc
aaa
cmpsl
xchg
inc
nop
xlat
add
mov
rorl
or
shll
push
mov
dec
dec
sub
pop
in
clc
and
adc
cmpsl
adc
mov
mov
push
pop
pop
push
push
add
mov
sarl
cmpsb
cmp
aas
popf
inc
xchg
pop
inc
je
jne
push
ret
mov
stc
mov
add
bound
test
aam
dec
incb
mov
ja
je
xchg
pusha
lea
mov
sub
mov
sub
push
sub
popa
sub
pavgw
mov
jp
nop
mov
jbe
xchg
leave
mov
and
jecxz
adc
mov
insb
push
movsl
cmpsb
adc
push
fcompl
or
cltd
or
call
mov
adc
inc
xor
data16
inc
lods
mov
xor
push
ret
adc
jl
rep
ja
lret
jg
and
enter
cmc
fs
xor
lods
out
lea
sbb
in
pop
fnstcw
cwtl
adc
popf
lret
loop
mov
mov
xchg
cmp
fidivl
imul
jle,pn
ret
sbb
lock
loope
inc
leave
sbb
sub
push
xor
mov
pop
data16
cmp
ret
inc
xor
add
imul
jl
dec
divl
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
jno
outsb
xchg
cmp
adc
and
xchg
arpl
cltd
jae
pop
out
or
mov
test
fnsave
mov
cmc
jno
adc
std
sbb
add
inc
scas
mov
divb
mov
dec
leave
dec
dec
and
sbb
xor
cwtl
lods
jb
test
push
js
xchg
roll
cli
mov
fdivrs
pop
push
stc
divl
and
or
inc
clc
sub
add
dec
sbb
add
cmp
out
lahf
cwtl
add
cmp
mov
data16
xchg
daa
sub
mov
xor
mov
test
cmp
jnp
mov
leave
mov
xchg
xor
ficompl
shlb
push
in
lock
ret
dec
pusha
xchg
add
popf
rcrb
pusha
dec
dec
mov
into
and
aas
jecxz
or
mov
out
lahf
imul
push
sbbb
and
push
adc
lods
dec
ret
rol
daa
cli
sbb
xor
push
push
and
in
mov
in
orl
mov
jbe
lahf
mov
outsl
divl
int3
jp
das
jg
daa
dec
cmpsl
jnp
int3
test
add
test
fdivl
into
ret
xor
loopne
repnz
xchg
adc
add
in
inc
mov
lahf
mov
subb
ffreep
mov
jmp
xor
jge
push
adc
add
or
xor
inc
sub
js
cmpsl
adc
outsb
bound
fisubrs
cmp
and
xchg
test
out
xchg
push
jmp
pusha
push
repz
cli
push
inc
cmc
pusha
mov
jb
xchg
ljmp
les
add
std
sti
xchg
add
jae
das
jge
jno
sbb
repz
adc
mov
lock
test
ds
cmp
insb
push
mov
aam
fcmovu
scas
aaa
stos
or
in
and
sbb
inc
xchg
sbb
add
call
push
bound
xlat
out
jge
mov
out
lret
dec
mov
cmpsb
jge
sub
adc
add
es
xchg
jo
aam
aas
inc
je
in
in
ret
data16
shr
mov
pop
dec
push
scas
sub
add
sub
pop
and
sub
lea
mov
fdivr
mov
rcrb
stos
inc
repnz
pop
and
xchg
loop
nop
mov
pop
icebp
gs
inc
or
jns
dec
jmp
mov
mov
pop
mov
les
push
jge
jle
sbb
and
pop
mov
or
sub
push
lea
das
or
lcall
mov
loop
fdivl
mov
shr
jmp
cmc
sarl
sub
aam
jno
add
and
sub
dec
mov
mov
fsubs
cmpsl
push
dec
cltd
mov
popf
sub
lahf
stos
bound
cli
cmc
movnti
mov
push
jl
insl
jno
int
pop
or
icebp
hlt
xchg
cmp
shr
xchg
inc
cmp
xor
cmp
inc
jl
jbe
add
xchg
ficompl
pop
xchg
sbb
loope
in
jo
sbb
std
divb
push
cmp
jmp
js
inc
adc
push
lahf
add
pusha
push
call
cmp
lea
mov
out
fisubrs
jnp
into
ds
mov
aas
outsb
leave
dec
sub
xor
xchg
scas
aad
insb
jl
xchg
out
fildll
clc
fwait
sub
inc
movb
ret
das
sbb
adc
lret
imulb
and
mov
mov
into
push
test
and
in
aas
dec
fisubrs
lea
popa
fmuls
lcall
pop
movsl
pop
jmp
jb
aas
push
mov
dec
mov
jns
xchg
in
pop
sub
cmp
popa
cld
adc
jmp
mov
in
push
jae
mov
in
push
adc
push
mov
xorl
or
filds
andb
xchg
sbb
stos
test
lret
fwait
fs
and
pop
andb
jbe
mov
pop
daa
mov
and
push
jno
sahf
jg
fucom
pushf
push
pop
inc
lds
decb
or
sbb
data16
std
sub
ret
push
push
out
xchg
jge
stos
inc
imull
rolb
fs
stos
jp
or
pop
add
int
lock
ss
lret
pop
bound
pop
cmc
pop
rcr
mov
jns
and
mov
test
negl
sbbb
in
pop
inc
lods
mov
xchg
push
push
push
adc
test
jp
sbb
cmp
jbe
jns
mov
fcmovbe
outsl
les
xchg
dec
outsl
cmpsb
mov
and
cwtl
mov
mov
js
popf
sbb
sbbl
stc
cmp
pop
pop
dec
out
and
and
icebp
cmpb
or
insb
and
mov
leave
rorb
add
fnstcw
cld
mov
ret
adc
push
in
sbb
dec
cmpsb
pop
test
sbb
jp
dec
call
aaa
cmc
sub
sbb
arpl
pusha
sub
push
test
les
addr16
fdivrs
mov
xchg
mov
pop
ljmp
dec
fisttpll
mov
sbb
add
bound
je
pop
test
cmp
cmc
and
adc
enter
imul
inc
iret
xor
sub
outsl
mov
mov
ljmp
push
fisttpl
test
mov
fisubrs
mov
lock
jne
cmp
xchg
mov
repnz
lahf
lock
inc
lret
in
testl
or
jne
stos
or
jnp
cli
flds
cmpsb
mov
and
enter
cmp
shll
fsub
or
scas
dec
dec
pop
stc
imul
adc
jp
or
imul
movsl
cmpb
aaa
xchg
jb
sub
jb
add
outsb
mov
cmp
test
rcrb
jae
stos
and
xchg
andl
lret
add
pop
mov
xlat
jae
out
sbb
aam
scas
enter
test
subb
xor
push
repz
iret
pop
jo
pop
int3
lret
inc
jle
mov
jmp
lcall
js
xchg
lret
adc
mov
mov
sbb
sbb
mov
push
jo
push
addb
jb
push
jno
fmul
js
leave
out
push
decb
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
dec
mov
inc
int3
adc
and
push
inc
cli
rclb
lea
in
sbb
subb
mov
dec
cmpb
push
lret
idivl
cmp
cmp
rol
call
jmp
mov
or
sub
add
mov
mov
pop
push
inc
and
stos
je
jg
shrl
test
data16
repz
pop
nop
push
fcmovu
push
mov
mov
cmp
lahf
mov
mov
mov
cmpsb
jp
lret
ret
fs
xor
clc
sub
ss
jne
jmp
add
pop
loop
mov
cmp
push
sbb
push
int3
ror
xchg
jno
ficomps
push
adc
ror
and
pop
loope
pop
sub
sub
aas
and
lods
mov
xchg
aas
test
int
sub
mov
int
add
jmp
pop
inc
cmc
add
in
add
jbe
cli
aaa
lock
fldcw
xchg
adc
sahf
mov
aam
jge
cmp
dec
js
outsb
insl
push
sahf
jp
dec
xchg
pop
std
sbbb
xor
addr16
mov
adc
leave
mov
inc
add
dec
cmp
out
movsb
cltd
inc
jmp
push
lret
pop
add
push
stc
fmul
in
out
in
cs
fwait
xor
data16
pop
cld
sbb
dec
movq
pop
cli
mov
pushf
or
adc
bound
xor
and
sbb
popf
das
pop
xchg
jnp
and
cmpsl
into
hlt
sbb
cmpb
cmpsl
xchg
mov
subl
shrb
xor
lock
inc
xchg
in
movsb
testl
lahf
dec
mov
es
xor
mov
fcmovnb
paddd
aam
cmp
int3
andb
repz
lods
push
push
cld
outsb
in
sbb
cld
sbb
or
sbb
sbb
dec
repnz
fbld
xlat
movq
lret
adc
push
lahf
and
adc
dec
fildll
xor
cmc
scas
jne
into
dec
sub
insb
push
test
icebp
cmp
repnz
jp
xlat
js
inc
daa
cmp
and
xor
dec
sbb
mov
sbb
cwtl
dec
lods
and
sub
iret
mov
dec
push
dec
sub
imul
mov
sahf
fcoms
xchg
cld
sbb
jae
out
jae
pop
subl
gs
aas
pop
mov
push
xlat
mov
lock
imul
into
jo
lds
xor
cli
dec
mov
sbb
aas
mov
fidivrl
sbb
xchg
rclb
sbb
scas
mov
dec
loop
imul
push
je
out
fisubl
mov
jge
and
call
insb
push
jno
sub
inc
ds
out
test
cltd
pop
mov
clc
mov
sbb
in
popa
jmp
jmp
std
or
das
negl
out
inc
pop
mov
mov
mov
fs
out
push
jae
cwtl
xor
inc
sti
das
dec
dec
mov
xchg
inc
jge
add
roll
movsl
xlat
mov
je
and
and
dec
xor
les
sahf
stc
push
jmp
xchg
imul
imul
jmp
cmp
data16
out
fcoms
jnp
dec
cs
or
popf
lret
dec
sub
pop
xor
movsb
cld
jg
or
ja
jge
scas
insb
js
xchg
pop
shlb
cmp
adc
es
scas
ljmp
cmp
sub
jb
xchg
in
leave
rcl
and
jecxz
dec
sbb
mov
push
jne
fldl
xchg
dec
xor
pop
fldenv
loop
sarl
push
ss
les
sbb
mov
jne
loopne
mov
data16
inc
mov
leave
dec
in
lea
inc
mov
leave
jecxz
jmp
push
popf
jge
jne
insl
std
rcll
add
sbb
adc
mov
pusha
push
pusha
mov
pop
sub
sbb
push
arpl
fidivl
mov
btr
xchg
cmp
jbe
popf
popf
popf
fldl
mov
push
hlt
push
xchg
sti
lcall
mov
push
pop
jge
and
cmp
outsb
adc
cmp
lea
cmp
push
or
inc
push
mov
mov
mov
adc
fabs
pusha
and
push
pop
add
and
xlat
lock
insl
sub
stc
fbstp
mov
sbb
cmp
out
and
outsb
lahf
repnz
and
mov
mov
or
adcb
mov
ja
mov
sub
les
xor
hlt
test
sub
loopne
loopne
sbb
mov
orb
add
pop
loopne
into
inc
jg
lret
inc
int
pop
jg
jge
js
push
shl
add
sub
mov
mov
xor
mov
jle
dec
mov
pop
shrb
gs
cmp
rcr
xlat
and
addb
mov
cmp
dec
shlb
xchg
inc
test
scas
in
outsl
push
xchg
pop
xchg
add
adc
int3
mov
cmpsl
and
dec
in
cmp
mov
stc
mov
clc
dec
or
arpl
addr16
das
sti
leave
sub
xchg
jp
pop
nop
sbbl
aas
mov
add
lds
mov
sub
lret
jle
xchg
movsb
mov
jae
incl
jge
xchg
or
jle
loopne
cld
xlat
ss
test
lods
jmp
cli
jl
movsb
std
mov
push
adc
pop
xor
mov
cli
add
ja
fnsave
pop
enter
inc
or
pop
mov
inc
push
pop
adc
mov
sub
hlt
ja
scas
mov
mov
mov
mov
push
dec
loopne
mov
inc
les
rcrl
pop
arpl
jl
test
mov
mov
push
adcl
ljmp
jmp
test
push
jmp
aas
insb
add
out
add
loop
sbb
inc
shl
movsb
outsb
clc
cmpsl
loopne
mov
cld
mov
pop
test
jae
dec
imul
inc
adcb
add
inc
and
sbb
lret
bound
inc
and
xor
xlat
jae
cmp
ret
pop
push
cmp
loopne
ja
dec
dec
stc
popf
les
pop
icebp
movsb
and
test
fcomp
adc
idivb
cmp
push
dec
xchg
popa
incl
in
mov
insl
fwait
mov
xchg
sub
jle
adc
and
dec
mov
mov
cmpsl
fisubs
xchg
insl
push
js
xor
ror
cmp
stc
adc
shrl
or
popf
lahf
arpl
xlat
loope
xchg
jg
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
cwtl
js
mov
jns
dec
test
js
inc
mov
popa
and
jmp
or
xchg
and
cmp
adc
push
mov
leave
lret
jb
xchg
or
mov
jno
add
pop
cli
icebp
xor
mov
sbb
fcoml
lret
sbbb
jo
ljmp
push
sbb
insb
adc
pop
cwtl
mov
shll
jae
xchg
jo
or
not
or
loop
jp
adcl
mov
icebp
push
rcl
mov
filds
jl
cmp
int
mov
clc
mov
cwtl
rorl
dec
call
jns
xor
imul
addr16
sub
negl
out
xor
push
repz
cld
add
xor
add
mov
clc
jge
add
imul
mov
fwait
dec
xchg
cmp
mov
ficoms
xchg
jl
iret
add
jb
bound
dec
jle
jns
push
and
mov
out
jl
sysenter
fidivrl
mov
std
pop
or
sbb
push
test
lea
cmovl
pop
stos
mov
mov
jmp
add
repnz
pop
adc
clc
lds
cmp
sub
dec
xchg
shll
and
and
mov
shrl
pop
sub
push
adc
or
inc
test
sbb
mov
fcmove
mov
inc
inc
jg
push
push
mov
lock
ficompl
xchg
mov
std
jmp
push
push
dec
cmp
add
inc
sbb
out
jns
rolb
cmp
dec
dec
xchg
cld
inc
in
push
sub
das
pop
add
orb
jno
pusha
pusha
mov
sbb
gs
dec
fidivs
inc
jecxz
mov
movsl
dec
jae
js
adc
int3
jmp
push
ljmp
ret
ror
xor
loop
test
out
push
mov
mov
scas
push
mov
cld
cmp
ljmp
lcall
outsl
popf
sarl
pop
mov
pop
pop
or
aas
inc
les
sub
xlat
adc
faddl
dec
test
std
sub
xor
mov
mov
lahf
test
aad
sarl
add
fldl
call
aad
and
cmp
inc
xchg
dec
jnp
push
clc
out
pop
dec
sbb
lods
jns
or
add
and
dec
jmp
pop
fcomps
mov
xor
inc
add
sahf
cmp
inc
sti
xor
jns
adc
pusha
cmp
pop
icebp
cmp
jne
mov
dec
arpl
dec
bound
dec
lahf
mov
xchg
mov
lods
and
lds
sub
les
jb
mov
in
push
rcll
xchg
mov
sub
setne
sbb
adc
xor
test
jno
int3
shrl
shlb
shlb
sahf
popa
lcall
xor
out
mov
jae
fnstsw
pop
pop
inc
loopne
and
int
lret
and
psubusw
stos
lretw
dec
mov
sbb
shlb
aas
vmovntpd
clc
add
iret
xor
add
jp
outsb
cmpsl
sub
mov
adc
and
shlb
mov
mov
sub
mov
mov
stc
mov
inc
loopne
dec
mov
mov
and
es
ljmp
lea
not
sbb
push
shrl
xor
outsl
out
push
lea
push
daa
jno
dec
aam
shll
jno
repnz
lret
insl
push
aam
nop
pop
les
pop
in
and
test
lea
cmp
pushf
int3
add
imul
xchg
mov
mov
movsl
mov
aam
das
leave
mov
pop
sbb
nop
sbb
rcrl
xchg
out
mov
mov
and
outsl
jno
dec
imul
inc
lea
xor
push
push
dec
mov
sub
outsl
sub
inc
fdiv
dec
arpl
repz
xor
dec
rcll
fst
pop
std
inc
dec
xchg
dec
dec
dec
imul
js
insb
or
in
cmpsl
sub
jbe
test
lods
dec
jge
xchg
add
mul
push
lret
inc
rcr
nop
mov
inc
sbb
lods
jecxz
and
adc
dec
mov
insl
adc
adc
mov
inc
mov
inc
xchg
mov
ljmp
push
sahf
das
in
cmp
flds
stc
addr16
xchg
mov
sub
and
xchg
dec
addb
outsb
in
jae
xor
lahf
iret
fnop
je
pop
data16
sub
xor
mov
sub
dec
scas
adcb
fiadds
test
mov
lcall
arpl
fcmovbe
pop
cld
cmp
adc
push
cltd
stos
pusha
mov
shr
fbld
hlt
xor
add
lret
inc
out
xchg
repnz
pop
popa
sub
cmp
daa
ds
fildll
inc
mov
shr
dec
adc
xor
push
jno
sbb
jmp
and
lret
aam
jne
lcall
repz
push
xor
adc
fldt
xchg
mov
adc
mov
sbb
ret
push
mov
pusha
inc
pop
js
push
cmp
pop
cmpsl
push
mov
xchg
cltd
sbb
jbe
add
test
push
lods
and
pop
mov
jg
sti
cmp
xor
cmp
xchg
mov
jecxz
and
popa
dec
xlat
add
or
movsb
cltd
adc
or
sbb
xchg
mov
and
sub
adc
push
inc
jae
movsl
ror
pusha
mov
xor
xor
dec
jge
dec
in
jecxz
lock
fldt
into
pminsw
aas
pop
and
cmpl
push
mov
push
ja
std
das
arpl
ret
xchg
nop
pop
push
xchg
cmpsb
scas
addr16
sub
insb
je
mov
dec
sub
mov
cmp
or
cld
imul
lret
ss
in
rcll
sub
xchg
out
dec
jbe
aas
lock
shlb
pop
mov
jns
data16
dec
mov
jp
inc
test
jo
add
sub
sbb
mov
popa
les
ja
ljmp
arpl
rcrb
mov
aam
push
pop
inc
das
cwtl
loop
fwait
jb
push
lcall
sahf
dec
xchg
pop
add
xchg
movlhps
inc
sub
ret
jecxz
daa
test
pop
ds
shll
inc
adcl
popa
push
nop
dec
addb
jo
leave
cmp
ljmp
add
jmp
jne
add
subl
xchg
adc
pop
xchg
addr16
and
popf
rclb
pop
dec
inc
cmp
test
cwtl
dec
shlb
sbb
and
stc
jle
adc
sbb
test
adc
or
hlt
imul
sub
xchg
rep
aaa
loopne
pop
jp
push
or
fists
inc
or
sbb
sub
inc
movsl
xchg
mov
outsl
movd
mov
xchg
rep
icebp
les
xor
test
in
pop
jbe
insl
push
sbb
xchg
aaa
xchg
lock
cs
jae
push
loop
jmp
std
mov
pop
daa
mov
fists
int3
fisubs
fisttpll
xor
pop
push
sbb
mov
cmc
add
or
add
roll
into
fmull
rcl
sbbb
add
sbb
icebp
xor
cmp
hlt
push
lods
sub
dec
sbb
or
add
pop
fidivl
dec
daa
aaa
sub
out
inc
xor
mov
icebp
nop
es
xrstors
arpl
insb
les
xchg
mov
mov
js
pop
xlat
mov
out
xchg
sbb
dec
sub
dec
cld
mov
fsts
jo
mov
hlt
out
call
in
mov
nop
pop
xor
add
repnz
lods
pop
inc
cmpsb
cld
in
les
mov
dec
cwtl
gs
in
cld
lds
ret
inc
scas
cld
jo
ja
jno
mov
inc
mov
movsl
mov
adc
cmp
mov
sub
or
pop
imul
push
jnp,pt
cltd
out
add
loopne
pop
mov
jmp
mov
pop
jecxz
imul
out
inc
jno
xchg
and
cmp
pop
dec
or
mov
out
push
leave
test
cmp
jmp
push
inc
mov
loop
pushf
insl
push
mov
loope
out
ds
cmc
negl
stos
mov
inc
scas
dec
dec
mov
outsl
fxch
lahf
icebp
ljmp
add
sbb
icebp
je
mull
adc
mov
pop
mov
int3
bound
loopne
push
or
cmp
adc
movsb
mov
divb
pop
inc
mov
loop
mov
loope
sti
inc
inc
cmp
push
ja
cs
in
rorl
add
cltd
xor
notl
xor
dec
bound
or
icebp
out
into
jo
dec
add
dec
insl
mov
lret
push
mov
ds
lcall
ljmp
xchg
xchg
push
ss
mov
repnz
lods
xchg
lea
push
mov
clc
cmp
jb
daa
lods
in
adc
jmp
mov
stos
sbb
and
stos
sbbl
mov
xchg
test
into
mov
and
repnz
imul
mul
sar
dec
ljmp
ret
push
into
jae
rcrl
sbb
test
jbe
pop
lds
mov
sbb
nop
fmuls
mov
jno
adc
fcomip
push
popf
xlat
sbbb
push
je
in
cmp
in
outsb
dec
xchg
or
scas
test
out
dec
pop
std
add
cmp
mov
jge
xor
inc
pop
cmp
jle
popa
or
jbe
mov
popa
sbb
mov
xlat
fucomi
jnp
inc
cwtl
imul
push
cmp
mov
dec
mov
repz
cmc
mov
mov
sbb
xchg
add
cli
sub
lret
mov
xchg
xchg
push
push
xchg
fs
fisubrs
push
xor
lods
das
jl
mov
add
fsubs
es
pop
add
pop
and
xor
sub
iret
jo
mov
mov
mov
mov
movsl
and
ficoms
xlat
dec
and
iret
out
jae
andl
xchg
mov
cmp
jne
sbb
mov
std
push
or
rcr
inc
adc
sub
stos
in
mov
fcmovu
ja
fsubl
popa
pop
sahf
arpl
sub
or
or
test
inc
out
icebp
pusha
shlb
mov
pop
xchg
add
enter
pushf
add
cwtl
js
into
shrl
jl
stos
pop
lret
imul
out
jmp
pop
daa
pop
pop
pop
mov
icebp
imul
jp
xchg
aaa
loopne
imul
push
mov
sbb
fnstenv
fisttpl
mov
ret
test
cli
insb
or
les
mov
and
mov
cmpsl
and
cmp
or
and
jae
mov
shrb
mov
push
xchg
cmp
add
push
xor
iret
inc
or
jnp
into
stos
addr16
mov
or
dec
neg
ret
or
insl
jge
adc
dec
pusha
jmp
out
insb
dec
dec
popf
push
in
jnp
fwait
loope
fdivrl
aas
aad
mov
mov
daa
jp
imul
cmp
xlat
mov
push
cld
pandn
pusha
cmp
pop
sbb
add
stos
pop
cmc
adc
mov
fwait
cmp
ljmp
call
das
aam
add
xchg
fdivl
gs
out
mov
or
xchg
sub
add
mov
movsb
ds
xchg
loope
jmp
sahf
movsb
add
ja
push
add
movsb
stos
mov
push
jne
ja
scas
cltd
stc
fstl
push
hlt
cmp
in
mov
pop
jb
sub
out
xchg
push
sub
ror
neg
pusha
es
jp
test
outsb
cmp
insb
and
imul
sbb
push
push
pop
sahf
and
daa
repz
jnp
aas
enter
ret
jecxz
out
test
push
jno
pusha
enter
or
fsubs
cs
daa
out
clc
xchg
dec
jecxz
push
aam
fmull
mov
adc
xchg
stos
pop
dec
push
push
sbb
mov
push
sbb
push
push
mov
dec
cmp
and
repz
rcl
add
mov
pop
loope
add
pop
pushf
int3
jp
cmpsl
mov
aas
jns
xchg
xor
mov
dec
das
cli
mov
and
insb
push
add
aas
dec
jg
mov
and
ficomps
movsb
out
pop
nop
mov
pop
lret
xchg
out
xchg
arpl
xorl
stos
xchg
xor
inc
sbb
mov
inc
mov
sub
movsb
scas
mov
sbb
nop
pop
add
les
sbb
fs
xchg
xchg
aam
in
sbb
test
lods
push
pusha
mov
ss
insb
test
addr16
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
dec
add
js
adc
and
enter
sub
sbb
pop
jns
lret
popf
test
das
mov
inc
js
adc
xchg
xchg
rcrl
test
pop
call
mov
aas
jne
or
iret
fwait
or
jmp
stos
inc
cwtl
fcompl
or
loope
sub
stos
dec
test
out
sbb
pop
lods
push
mov
sarb
jmp
and
mov
inc
in
aad
dec
mov
fwait
adc
xchg
inc
xchg
jl
sub
pushf
adc
fwait
or
pop
push
loopne
pop
mov
mov
das
pushl
cmp
leave
pushf
inc
test
jae
xchg
add
lods
xor
adc
lds
jo
out
test
add
daa
jno
nop
jnp
sub
cltd
mov
mov
cmp
sbb
inc
jge
js
adc
test
iret
in
lea
dec
fsubs
jmp
inc
and
imul
ja
xchg
sarl
aam
aaa
das
pop
adc
fucom
pop
push
ret
jp
notb
inc
clc
jl
dec
and
dec
add
pop
popa
lcall
inc
cltd
cmp
xchg
sbbb
mov
inc
lret
push
xor
lahf
repnz
jle
mov
ds
jp
push
sub
or
jle
fwait
stos
lret
inc
cld
pop
pusha
out
pushf
jg
jns
push
cmp
adc
dec
jo
xchg
or
mov
xchg
jp
lods
adc
jecxz
jg
lea
add
sub
jb
out
aam
sti
shrb
jbe
fsts
in
add
xlat
and
xchg
mov
bswap
xchg
pop
xor
aaa
shrb
cmp
xor
dec
ficomps
xchg
inc
notl
mov
mov
sahf
xchg
fcmovnbe
mov
sbbb
inc
push
xchg
mov
pop
inc
push
mov
fstps
pop
xlat
jge
into
push
stos
stc
push
mov
mov
xchg
lock
sub
ja
shlb
test
xchg
mov
pop
int3
js
jns
shlb
test
fadds
rcl
es
hlt
inc
insb
lds
arpl
mov
enter
xchg
inc
aad
inc
pop
decl
adc
ja
jbe
pusha
rclb
mov
imul
pop
clc
test
sub
push
pop
mov
sbb
ja
lcall
ja
aas
int3
inc
inc
cli
cwtl
lcall
ss
sub
mov
inc
xor
xor
dec
pop
or
sub
xchg
ficomps
gs
fs
jo
or
xor
enter
cmp
in
pusha
fsubl
pop
dec
mov
and
jo
inc
cs
dec
fcomp
ljmp
mov
outsb
stos
pop
pop
adc
fs
xorl
and
mulb
ja
outsl
xchg
out
ljmp
xorb
inc
mov
cmp
jmp
into
push
out
mov
mov
sbb
xchg
call
xor
jecxz
lea
fldcw
xchg
mov
push
pop
cltd
cld
sub
outsl
inc
ficoml
das
pop
rolb
scas
fs
cmpsl
or
xchg
push
sub
loopne
push
pop
jo
mov
push
sbb
mov
ret
pop
iret
lahf
cmp
cli
out
pop
test
add
jecxz
shl
imul
add
scas
mov
sub
cld
bound
and
cwtl
int
imul
fildl
test
pop
push
in
mov
xchg
cmpsb
fiadds
inc
test
cmp
push
repnz
scas
notl
pusha
cmpsb
mov
outsb
sarb
or
ficomps
rcr
outsb
inc
sub
adc
jmp
call
fldcw
mov
push
cmp
adc
mov
mov
push
add
clc
dec
xchg
or
lds
push
push
repz
out
lcall
mov
gs
fidivrs
cs
cmp
shrl
xchg
xlat
ret
add
add
fsts
test
adc
ss
outsl
jnp
out
ss
sbb
adc
nop
pop
xchg
inc
popa
push
shl
sub
addb
sbb
dec
add
cld
push
shlb
pop
adc
pop
ja
inc
into
jbe
hlt
int3
mov
pushf
and
pop
aad
sarl
adc
pop
stc
add
std
or
fimuls
loop
push
jnp
mov
in
mov
xor
inc
or
cmp
call
push
lcall
idivb
es
xlat
xchg
inc
lcall
fs
cmpsb
xchg
sub
cmp
cmp
shlb
jecxz
inc
pop
daa
xchg
iret
mov
mov
mov
fidivrs
test
dec
jp
mov
vmovaps
push
gs
js
arpl
les
test
daa
ds
test
pop
jecxz
or
pop
out
icebp
and
out
adc
dec
xorl
pop
cmc
aas
test
inc
pop
xchg
cli
and
mov
addb
in
stos
or
movl
xor
push
bound
add
cmp
jp
add
xchg
jae
clc
je
xor
mov
mov
cmpb
cli
add
cmp
cli
mov
or
add
push
mov
stos
jne
shll
inc
subb
push
and
in
mov
add
dec
mov
mov
add
lcall
jl
aaa
sbb
jns
adc
jns
repnz
out
in
or
bound
subl
sbb
aad
daa
stos
fnstsw
mov
xchg
push
ljmp
dec
dec
sahf
cmp
sub
outsl
push
cli
sbb
int3
ja
push
xlat
fldenv
jb
cwtl
mov
cmpsb
pop
int
dec
int3
data16
fnstcw
xor
push
inc
push
adc
and
test
repnz
shll
adc
in
lahf
dec
fsubrs
and
loope
mov
gs
jmp
pusha
out
inc
nop
sub
adc
js
arpl
push
and
repnz
ljmp
in
adc
cmp
clc
mov
je
or
xchg
pop
lds
push
rorl
rolb
xchg
xor
enter
stos
and
adc
into
scas
adc
jg
cmp
xchg
fdivl
notb
insl
mov
adc
adc
arpl
cli
add
adcb
push
dec
xor
cmp
dec
push
pop
mov
test
pushf
clc
xchg
pop
cmp
ss
mov
shlb
icebp
xchg
call
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
lret
mov
pop
cmp
dec
jne
push
pop
repz
sbb
xor
jb
mov
inc
adc
vmovntpd
jle
in
stc
push
imul
mov
mov
mov
sti
push
adc
push
enter
mov
popf
and
push
lahf
nop
daa
jecxz
jp
test
lds
push
and
mov
xchg
inc
cs
lret
int3
sahf
pop
mov
clc
repz
sbb
mov
popa
pop
or
fstpl
and
jne
mov
out
shll
imul
mov
xchg
enter
and
insb
int3
add
mov
or
push
es
jno
fstpl
fs
incb
add
cmp
mov
pop
dec
icebp
pop
test
sbbb
std
test
and
mov
fdivp
mov
les
notl
mov
sbb
xchg
push
test
push
shll
add
fisubs
scas
data16
pusha
cs
mov
xor
mov
mov
xor
rcll
xor
scas
sub
cmc
inc
loop
pop
xchg
mov
xor
push
inc
movsl
pop
mov
push
into
push
sbb
sahf
inc
pop
mov
mov
out
aad
imul
mov
mov
sbb
push
ret
in
int
frstor
sbb
repz
imul
in
jmp
stc
cwtl
mov
pop
cwtl
push
adc
movsb
mov
ljmp
sahf
cltd
dec
xchg
outsl
jge
aas
push
dec
out
jecxz
fwait
adc
jmp
xor
in
inc
or
and
cmp
cmp
imul
shrb
xchg
cmpb
enter
sbb
push
enter
out
in
nop
dec
pop
mov
pop
adc
sub
popf
bound
mov
or
cltd
mov
sub
push
sbb
push
mov
popf
cmp
lahf
mov
cmp
xchg
rcll
out
shl
in
nop
das
push
sbb
std
ret
data16
testl
cwtl
repnz
outsl
shl
sbb
jbe
ljmp
jle
jp
pop
imull
cmp
xor
lret
into
xor
lahf
or
cld
push
sbb
push
push
outsl
std
sbb
cwtl
jns
out
cmp
shll
stos
cmp
sub
pop
xlat
mov
xor
cmp
pusha
repnz
fidivs
xorb
jl
fisttpl
adc
sub
xchg
ss
fisttps
shrb
pusha
mov
leave
or
cmp
adc
dec
rcl
lods
xchg
mov
jno
dec
fdivrl
into
and
pusha
mov
mov
mov
in
pop
add
lds
fstp
in
scas
push
xor
jecxz
jmp
pop
xchg
pop
mov
push
lret
cltd
and
repnz
mov
inc
mov
xchg
mov
mov
pop
pushl
out
icebp
pop
arpl
lret
daa
js
push
ret
out
mov
hlt
mov
ss
dec
add
pop
dec
cli
cmpsb
mov
nop
xchg
pop
mov
lcall
mov
scas
push
add
repnz
xor
icebp
add
les
push
cmp
imulb
dec
add
push
jb
je
or
sbb
xor
xchg
out
mov
mov
jne
push
pushf
or
add
incl
notl
cwtl
xor
ret
jecxz
imul
mov
scas
insb
lea
or
clc
add
lcall
mov
out
loopne
cmpsb
jle
loop
cmp
cmpl
add
popf
repz
lcall
inc
add
xor
testl
mov
stos
mov
ret
repz
sbb
jmp
adc
add
push
dec
repnz
inc
iret
jge
and
fs
pop
push
jb
imul
xor
negl
jo
lods
in
jl
or
arpl
dec
insl
xchg
imul
and
rcll
mov
mov
fildll
jo
insl
lahf
sbb
enter
add
adc
add
jge
arpl
nop
push
shrl
stos
icebp
or
jne
jae
xor
scas
icebp
push
rorb
jmp
push
pushf
inc
das
rolb
and
int
add
inc
push
sahf
mov
dec
fucomi
mov
icebp
dec
add
pop
and
dec
mov
loop
mov
fwait
lock
and
pop
sub
cmp
inc
mov
inc
and
adc
ror
cmpsl
rorl
mov
mull
test
popf
push
mov
gs
rcrb
sarl
lret
fldenv
es
jge
rorl
xor
fldt
push
push
flds
outsl
mov
jmp
sbb
lret
data16
jge
das
mov
or
icebp
fmul
js
push
icebp
inc
test
ja
imul
inc
fisubl
sbb
ljmp
int3
add
aad
outsb
enter
mov
xchg
mov
dec
push
mov
xchg
push
js
pop
cld
loop
mov
fbstp
xchg
mov
push
mov
adc
aaa
es
pop
pop
sarb
icebp
adc
loope
in
mov
sbb
jo
or
mov
pop
mov
ss
push
mov
lcall
fnsave
jno
addl
push
loop
dec
push
es
fwait
push
ja
sub
xchg
mov
cmp
push
mov
jle
loopne
or
pop
pop
test
test
fdivrs
cwtl
repz
mov
shll
loope
repz
loopne
xor
jg
mov
mov
adc
mov
push
push
gs
lock
test
rcrb
xchg
test
jno
mov
shlb
loopne
in
cwtl
inc
xor
fmull
std
dec
pop
lret
push
jne
inc
push
dec
dec
imul
cltd
dec
leave
outsb
out
inc
push
js
inc
in
add
mov
rorl
inc
pop
cmpsb
xor
jle
aas
mov
pop
or
sbb
inc
xor
mov
scas
inc
popf
je
scas
cmpsb
inc
cwtl
push
rolb
and
lret
data16
cltd
ja
adc
lds
cmc
push
outsb
out
sub
stos
push
push
jmp
sbb
push
adc
xchg
int3
xchg
cmp
mov
add
adc
les
jmp
mov
pop
jb
jae
jle
mov
data16
or
push
push
jp
add
fmuls
inc
lahf
shll
stos
cmp
rcrb
cli
and
pop
sbb
in
push
add
repz
push
mov
cmpsl
leave
mov
cmpb
es
xchg
dec
rcll
rcll
jp
cmp
and
mov
push
enter
cmp
cmpsb
inc
mov
and
mov
rclb
jno
decb
imul
insb
mov
inc
or
or
pop
jnp
cltd
xchg
jb
scas
data16
jl
inc
pop
and
iret
lret
jecxz
out
jg
xor
stos
add
inc
and
inc
dec
inc
fmul
out
jne
imul
pusha
stc
sarl
sahf
pusha
jg
sbb
das
jg
roll
adc
out
inc
inc
jecxz
leave
sarl
aam
pop
scas
arpl
outsb
subb
or
hlt
jge
sub
sub
push
push
fwait
cmpsl
insl
nop
pop
roll
cmp
aam
or
aad
ret
cmp
adc
xor
adc
scas
fs
sub
sub
sbb
shr
leave
pop
lods
mov
sahf
push
andl
xchg
xor
fcmovbe
ja
sub
mov
xor
push
mov
fs
push
xor
shll
in
dec
mov
subb
xor
xor
push
or
inc
out
rclb
mov
imul
sub
fcompl
ds
insb
mov
addr16
jg
in
fwait
int3
outsb
les
nop
aas
mov
sub
mov
dec
dec
shr
ljmp
mov
add
add
outsl
mov
rolb
sbb
sar
loope
shlb
inc
dec
push
mov
lea
repz
les
fwait
aad
mov
in
mov
push
imulb
push
test
addb
insb
jno
xor
aam
inc
in
push
add
movsl
je
sar
adc
lods
push
add
cwtl
pop
movsb
sub
dec
cmpsb
jg
fs
test
flds
hlt
cs
mov
cmp
lods
sub
std
and
mov
icebp
rcr
adc
or
data16
and
or
dec
fldt
addb
lcall
loope
cmp
push
sti
dec
dec
jnp
bound
or
mov
loope
out
ljmp
cmp
jb
mov
xor
inc
popf
dec
rcll
inc
frstor
insb
sub
xchg
inc
xor
insb
mov
and
mov
movsl
mov
lock
mov
test
add
mov
dec
jno
faddl
out
add
dec
fnstsw
jae
dec
je
pop
jp
sbb
jns
pop
mov
in
xchg
test
xor
lret
scas
mov
popl
xor
scas
cmc
addl
je
xchg
mov
aad
ljmp
sbb
fstps
sub
ficompl
in
iret
addr16
cltd
filds
dec
das
ljmp
or
insl
inc
sub
mov
frstor
lret
inc
sbb
inc
adc
dec
mov
cmp
mov
push
hlt
enter
add
mov
into
cmpsl
aas
and
push
push
push
push
add
test
loop
jns
test
sub
sbb
and
div
roll
pusha
xor
sub
cs
adc
xor
pop
stos
into
mov
int3
sub
mov
pcmpeqb
sbb
std
adc
dec
pop
dec
mov
inc
fnstenv
arpl
sub
pop
xchg
lret
jecxz
mov
loope
sub
dec
cmpsl
sbb
rclb
xlat
mov
mov
and
xchg
lahf
in
les
lods
out
mov
jl
ficompl
clc
pushf
add
into
call
call
cmpsb
cwtl
outsb
pop
xchg
sub
jno
xor
xor
fimull
scas
ret
fdiv
xor
fwait
mov
xchg
aas
arpl
add
cmp
jbe
subl
stos
in
lods
mov
mov
out
xlat
bound
xor
int
or
xor
addr16
movsl
je
push
ficoms
xchg
das
daa
dec
or
mov
xorl
movb
mov
pop
test
mov
xchg
jo
ljmp
cmp
rorb
cmp
sub
rorl
lcall
jo
jmp
les
mov
cld
mov
mov
pop
iret
inc
int
lea
jmp
orb
enter
add
test
xor
and
popl
xor
pop
arpl
jmp
ja
ljmp
sti
enter
sarb
inc
lret
pop
outsl
mov
mov
rol
mov
xorl
repnz
inc
mov
xchg
int3
movl
aaa
inc
out
add
iret
aas
test
cltd
and
fdivrs
sbb
mov
ror
test
add
mov
test
push
jmp
lret
fs
and
pusha
in
mov
pop
in
divb
cmp
adc
sub
jmp
add
adc
cmp
loopne
or
rcrl
adc
mov
movsl
lcall
mov
mov
jbe
lahf
jle
add
push
mov
jg
fsts
mov
std
test
adc
mov
and
jecxz
cmp
mov
ss
cmp
daa
or
pop
gs
ja
stos
dec
std
int
adc
jns
lret
adc
sbb
pop
cmc
fwait
popw
fstpl
pop
mov
inc
dec
xchg
shll
mov
cmp
pop
lods
movsl
add
xchg
popf
aam
pop
xorb
or
pop
pop
cmp
push
sub
pop
add
sahf
mov
adc
sbb
mov
lock
ljmp
in
push
movsb
jns
lods
loop
dec
je
enter
mov
xor
dec
sbb
adc
fdivrl
fldl
leave
jae
mov
inc
out
jae
in
mov
mov
lock
cmp
dec
cmpsl
adc
jp
cmpsb
pop
inc
stos
ljmp
xor
mov
push
and
xor
divl
mov
adc
pop
rcr
jns
adc
dec
add
neg
imul
pusha
scas
ret
sbb
into
and
out
bound
jbe
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
lea
push
cmpsl
xchg
jno
sub
pop
cvtdq2ps
int
mov
imul
shlb
mov
loop,pt
push
daa
notb
aam
push
es
push
div
dec
mov
pop
xor
add
mov
out
pop
inc
into
cmp
push
dec
outsb
dec
mov
xor
fdivrl
jmp
adc
mov
xchg
xchg
mov
lods
lcall
ret
push
xchg
mov
mov
enter
pop
inc
jmp
or
in
es
idivl
mov
jae
mov
pop
add
mov
repnz
arpl
pop
lahf
jns
mov
enter
mov
xchg
sub
cld
out
jg
pop
call
jbe
ds
outsb
xchg
lcall
packuswb
sub
aad
cmp
xchg
inc
out
in
jbe
rolb
testb
icebp
add
inc
clc
loope
sarb
lret
lsl
loopne
or
sti
ret
cmovne
int
or
add
bnd
cli
lds
jns
mov
fsubl
cltd
sbb
mov
stc
jno
rcr
xlat
add
mov
mov
ror
pop
jbe
sbb
icebp
pop
sbb
in
popf
mov
pop
xchg
cltd
xor
xchg
clc
jne
cmp
cltd
inc
stc
xor
pop
cmpsb
add
stos
rcl
lods
scas
ss
repnz
icebp
pop
test
mov
pop
in
jl
lods
in
into
popa
jb
mov
sbb
xor
lret
dec
movsl
lock
neg
mov
inc
add
insb
sub
imul
into
push
mov
jecxz
fisubs
lret
fisubl
lret
test
out
xchg
inc
mov
or
xor
xchg
cld
andb
xor
repnz
push
aas
push
neg
mov
mov
cmpsl
aas
pop
mov
aas
jns
loop
add
out
sti
jnp
xchg
test
sahf
sti
xor
adc
mov
fstps
lds
enter
inc
ja
hlt
imull
pop
cmp
pop
add
test
xor
shll
xor
mov
and
push
cmc
mov
jle
adc
lock
scas
int3
out
jecxz
outsb
add
ja
cli
xchg
inc
mov
mov
fisttps
insb
push
repnz
push
jbe
in
jmp
insb
repnz
outsl
lea
mov
repnz
adc
lock
inc
loope
mov
dec
mov
jnp
sarl
test
jns
inc
leave
dec
iret
outsl
mov
rorb
lock
lret
jecxz
rclb
es
sub
xchg
lea
sbb
outsb
sub
insl
mov
das
test
mov
dec
loop
gs
sub
push
push
and
adcb
sbb
mov
fstl
rorb
pop
leave
and
push
xchg
test
mov
lods
insb
sub
or
cwtl
and
stos
addr16
sahf
fdivr
jno
fwait
mov
dec
pop
mov
out
lahf
or
xorb
orl
out
jl
adc
fidivrl
pavgw
enter
lock
bound
mov
stc
mov
dec
out
mov
fsubl
mov
popa
mov
aad
mov
jecxz
in
dec
dec
sarb
movsl
mov
nop
xor
pop
mov
gs
icebp
sbb
sarl
jae
xor
mov
call
fucomp
and
inc
jmp
xor
test
xchg
pop
shl
and
fwait
imul
scas
popf
xchg
xor
movsb
test
sahf
into
add
sbb
unpckhps
movsb
cld
jl
mov
dec
jno
dec
fmul
dec
cmp
clc
pop
nop
addb
loop
mov
fnstcw
push
cs
cmpl
arpl
cmp
xor
loopne,pn
push
lods
dec
fsubs
xor
pop
cmp
mov
pop
sbb
cmp
mov
sti
jle
inc
scas
arpl
push
js
dec
jne
push
popa
ds
shl
jg
xor
inc
fs
fwait
push
roll
mov
adc
mov
enter
adc
jb
negl
lea
out
adc
stc
outsb
ret
cli
sti
mov
outsl
mov
ljmp
lods
shrl
inc
mov
sub
mov
mov
stc
fdivrs
add
add
sbb
pop
loopne
out
lods
jmp
ds
int3
ja
fbstp
inc
stos
xchg
push
sti
leave
push
icebp
in
fistps
or
xchg
addb
loopne
ret
push
leave
nop
push
or
test
aaa
aad
test
xchg
cld
or
xor
ja
pop
jb
and
je
pusha
ret
into
push
adc
test
test
pop
sub
insb
fisttpll
inc
popa
xorl
imul
mov
push
pop
pop
cmp
push
jnp
loopne
in
movsl
out
in
jle
pop
stc
mov
push
fcomip
add
xchg
nop
inc
and
or
cmp
sbb
and
inc
lods
add
stos
mov
stos
fadds
dec
jg
iret
shl
mov
sbb
mov
ja
fmul
int3
test
and
jl
xchg
stc
out
les
push
mov
inc
mov
loop
lods
sub
lcall
arpl
jbe
lret
jecxz
mov
stc
rclb
cli
cmpsl
call
and
add
clc
jl
mov
sbb
add
pop
mov
push
sbb
dec
call
ss
xchg
out
daa
je
mov
sub
mov
jl
jmp
testl
stos
shl
imul
cmp
rsm
aad
mov
xchg
push
inc
sub
std
lock
jmp
in
in
fmuls
jbe
pusha
scas
test
loopne
mov
mov
push
pop
stos
inc
aad
clc
jmp
cmp
shr
jns
mov
sub
adc
inc
lret
mov
ffreep
lods
adc
xlat
cmpsl
sahf
adc
mov
inc
jo
sub
in
popf
sub
add
pop
mov
jns
sbb
shll
sub
push
xor
ss
test
lods
inc
inc
test
pop
int
out
or
sti
jae
int3
sti
sub
movsb
dec
daa
pand
pusha
movsb
ficompl
subl
add
or
stos
sarb
pop
or
adc
into
push
lods
iret
jp
cli
adc
xchg
fnstsw
sbb
imul
adc
cwtl
loope
outsl
sti
inc
out
push
in
icebp
or
aas
jne
xchg
jns,pt
stos
xor
pop
push
fsub
push
lods
popf
cs
in
and
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
insl
pop
xchg
sbb
jno
sub
lds
ds
mov
pop
icebp
dec
mov
shr
pop
jp
mov
shr
jnp
hlt
push
andb
adc
enter
dec
jb
lock
mov
ret
xor
in
ja
out
std
and
mov
dec
add
sbb
and
addb
lock
cmp
addr16
inc
test
mov
sbb
push
or
sub
loopne
adc
mov
out
shlb
mov
push
mov
in
mov
fldl
outsb
sub
ss
das
push
in
jbe
jne
mov
mov
push
flds
cmp
shrb
dec
out
pop
ljmp
xor
xor
xor
and
aas
push
ljmp
cmc
fsubrs
sub
xor
aas
dec
mov
inc
dec
jnp
xchg
xor
pop
sub
leave
jno
adc
jmp
inc
in
insb
add
out
shlb
xchg
sub
inc
or
in
jp
push
inc
sbb
ficoms
nop
xor
in
xor
es
test
mov
rolb
push
inc
pop
out
jae
pop
push
popf
jnp
lret
fs
pop
sub
or
movsl
repnz
pop
dec
push
subb
test
js
inc
mov
push
enter
xlat
jno
stos
daa
mov
fs
sbb
mov
in
mov
daa
movsl
mov
stos
jp
xor
mov
dec
fistpll
xchg
adc
mov
cmp
mov
pop
jno
stos
cli
clc
pop
in
test
call
mov
sbb
in
pusha
xor
ds
or
sbb
out
cmp
leave
mov
adc
cmp
mov
movsl
or
test
ja
sbb
fiadds
push
inc
or
shlb
scas
cmp
das
stos
mov
cli
jmp
loop
jmp
roll
icebp
jg
jns
cmpsb
mov
lret
xchg
cmpsb
sub
cmp
pushf
test
fucompp
cmp
insb
das
test
pop
sub
mov
push
cmp
xchg
dec
xchg
fwait
aaa
sbb
pop
jbe
inc
and
cmp
adc
jmp
leave
stc
scas
loop
pop
inc
shll
repz
add
and
out
imul
loopne
jno
push
leave
mov
stos
jmp
inc
inc
outsb
lods
out
stos
push
jge
shll
xor
jle
ljmp
xchg
jo
enter
cmpb
mov
cltd
or
add
fimull
test
cmpb
ss
testl
mov
dec
jmp
push
mov
push
lcall
popf
sahf
fmull
or
add
xor
mov
nop
push
shl
icebp
sbb
jb
or
and
sbb
mov
and
push
filds
fisttpll
sti
fdiv
int3
pop
inc
lds
push
xchg
pop
mov
pushf
push
imul
mov
fwait
dec
repnz
shll
sbb
shl
jbe
arpl
sbb
adc
sub
cmpsl
fnstsw
jg
add
sub
addr16
jmp
xor
insl
xchg
push
sbb
lods
sub
das
mov
je
xchg
aam
pop
lcall
scas
cli
jl
cmc
lret
imul
mov
jo
sahf
cmpsl
jnp
dec
xor
dec
int
sbb
add
js
jns
mov
je
popw
ret
cmpsb
cmp
test
hlt
fldenv
stc
xor
cmp
sbb
inc
push
pop
in
pop
cwtl
mov
or
out
clc
test
mov
cltd
and
dec
push
notb
stos
aas
in
mov
in
call
insl
stc
scas
cwtl
push
inc
mov
push
push
sub
in
mov
jb
es
fdivrl
jo
iret
es
lcall
sub
sub
outsl
mov
cmp
pop
call
push
sub
addr16
filds
pusha
inc
shll
cmpsl
fwait
into
mov
mov
insb
add
or
dec
xchg
sti
iret
ljmp
sbb
ss
jle
mov
xchg
mov
daa
xchg
xor
test
or
addr16
xchg
mov
pop
xchg
add
cmc
push
loope
or
and
sub
push
fimuls
add
add
fsubl
out
repz
mov
imul
inc
or
popf
test
sbb
mov
outsl
sarl
je
imull
xchg
ss
jl
loopne
fsubrs
ljmp
inc
dec
lods
subl
mov
mov
xchg
out
push
mov
lcall
inc
cmpl
pop
jge
nop
movsb
dec
sbb
sbb
xchg
rcr
stos
mov
and
les
jns
or
cmp
cmc
stos
into
sbb
repz
cmp
pop
scas
out
aam
mov
outsb
add
enter
pop
out
adc
cmp
fadds
push
add
orps
inc
icebp
movsl
insb
test
arpl
rclb
call
enter
and
enter
adc
test
add
imul
and
fldt
pmaxsw
sbb
stos
adc
testl
aas
scas
aam
pop
and
stc
inc
pop
or
jp
adc
xor
in
push
push
aaa
xor
or
lods
or
add
and
mov
sub
fstl
push
xchg
pop
mov
rclb
int
jne
movsl
adc
or
cmp
xor
pop
ficompl
loopne
push
mov
mov
aad
adc
and
stc
out
dec
inc
add
xchg
and
push
xor
into
ja
and
movsl
and
aas
aam
xlat
inc
push
or
outsl
stc
imul
inc
xchg
lahf
rolb
movsl
fwait
jp
cmp
arpl
add
mov
into
jecxz
push
ficompl
inc
dec
pop
mov
xor
imul
dec
mov
sarl
pop
clc
push
out
enter
lods
push
and
jnp
nop
pop
adc
imul
add
imulb
inc
in
jo
push
mov
cmp
test
sbb
sbb
inc
jl
xor
ds
out
and
icebp
mov
lcall
mov
inc
jo
jecxz
push
pop
imul
jge
cmpsl
mov
sbb
and
insl
or
xor
push
jb
repnz
mov
lret
aam
shr
mov
pusha
xor
dec
xchg
xor
cmp
mov
xor
mov
ror
mov
mov
cmp
lret
imul
ret
cwtl
imul
pop
repnz
sbb
fstpl
sbb
repz
or
lods
add
xchg
jmp
cmp
mov
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
mov
adc
addl
or
mov
sarl
xor
das
mov
inc
mov
inc
jle
movb
push
xlat
adc
jp
int3
jb
push
sub
in
stos
mov
ja
dec
sub
lds
cmpsb
push
jae
leave
and
dec
lock
mov
idiv
dec
ret
clc
sahf
lods
and
lods
xor
iret
lods
lea
or
gs
fdivrl
pop
jns
outsb
aam
lods
repnz
ss
sbb
jp
shrl
popf
pop
xor
xchg
fstp
and
inc
xchg
add
pop
je
pop
cmp
insb
xor
scas
mov
and
das
push
dec
popf
and
call
inc
pop
dec
xor
sbb
icebp
and
mov
xor
pop
std
andl
xor
dec
adc
scas
mov
mov
lcall
test
xchg
jno
mov
mov
lahf
cltd
mov
pop
mov
push
push
and
mov
hlt
addr16
scas
mov
jge
notl
fs
fidivs
xor
push
mov
push
int
insl
cmp
mov
stos
mov
int
sub
das
pop
bnd
and
int
movsb
jno
test
adc
xor
mov
enter
mov
cmp
jp
dec
repz
cmp
inc
xchg
test
ds
movsb
in
pop
jl
inc
popa
jne
sub
sub
cmpsl
adc
jmp
jmp
mov
and
es
cmpsb
push
inc
inc
cmp
adc
fsubs
mov
cmp
testb
pop
enter
js
lock
mov
add
test
mov
sti
push
or
popf
mov
mov
into
xor
fmuls
jnp
dec
loop
dec
pop
mov
or
mov
fucom
mov
mov
ss
jne
mov
or
insb
es
aad
add
or
sub
fdivrs
pop
shl
div
fsubrp
lds
mov
jge
add
jne
mov
or
popa
pushf
insl
jns
scas
add
loopne
arpl
xor
cmp
cmpsb
jns
xor
xor
jb
xchg
sbb
sub
roll
mov
xor
ret
sub
imul
or
or
xchg
xor
fsubrs
cmp
clc
or
hlt
into
push
mov
xor
mov
cmp
cmp
sbb
mov
mov
into
cld
add
fmul
mov
mov
sbb
add
shll
sub
imul
sub
cltd
dec
sub
jmp
inc
xchg
shll
insb
and
mov
add
fst
imul
sbb
outsb
mov
add
xchg
mov
scas
inc
dec
pushf
sub
mov
mov
movsb
bound
movsb
hlt
and
leave
or
shl
pop
or
mov
push
or
fiaddl
mov
aas
cmp
mov
mov
lock
jno
add
jne
iret
or
insb
xchg
dec
int
fcmovu
xchg
pop
dec
popf
pop
add
push
fwait
ret
in
in
and
ja
add
iret
xchg
pop
add
out
cmp
or
negl
addb
jmp
stos
jb
or
shll
cmpsb
popa
add
xor
mov
pop
inc
jae
scas
mov
pop
stc
faddl
mov
adc
testb
pushf
and
inc
add
stos
ftst
sbb
dec
std
fwait
cwtl
fdivl
fidivrs
fs
popl
repnz
gs
fadd
xchg
out
filds
dec
xor
lcall
xchg
xor
adc
loope
push
dec
push
in
inc
sbb
xchg
jmp
jmp
out
idivb
mov
fisubrl
cwtl
int3
in
cmpsb
aas
mov
lret
cmpl
loopne
ret
loop
pop
movsl
jmp
cmp
pop
ret
mov
sbb
mov
and
or
and
mov
data16
adc
mov
stos
mov
jl
std
sbb
enter
xchg
lea
push
pop
in
jmp
adc
cmc
mov
icebp
xchg
mov
mov
mov
pushf
ror
mov
sbb
mov
popa
into
imul
push
cmpxchg
cmpsl
dec
or
stos
rcrb
jno
movsb
adc
push
cmp
hlt
sub
jnp
xchg
fimuls
notb
cltd
cmp
push
adc
psrld
xor
xchg
imul
xchg
lds
pusha
sub
movsb
and
mov
sti
sbb
sbb
seto
gs
loop
sahf
in
inc
incb
jae
lcall
mov
xchg
inc
ja
fimull
cld
das
lret
sub
rcl
call
adc
loop
dec
daa
pop
pop
sbb
mov
pop
repnz
lcall
jno
in
jae
mov
jp
add
pop
or
dec
cmp
lret
pop
mov
lods
ljmp
fcoms
jp
cmpsl
and
mov
imul
mov
pop
add
pop
roll
jns
inc
cltd
je
daa
inc
loop
sub
clc
xor
test
and
sub
and
mov
jmp
mov
mov
cmpsb
xchg
fiadds
insb
xor
add
xor
lea
mov
out
sbb
or
rorl
and
pop
cltd
aad
aas
cwtl
sbb
ds
dec
in
cmc
test
adc
loopne
das
or
vaddpd
es
mov
mov
cmpl
mov
jbe
jae
inc
add
loope
rcll
pushf
inc
mov
enter
xor
cli
xchg
mov
mov
mov
push
test
inc
adc
in
bound
or
sarb
mov
lock
jno
scas
les
insl
xchg
pop
xchg
or
rcrl
sub
insl
pop
jne
fildll
std
jp
call
adc
mov
pop
lahf
cwtl
insb
cmc
enter
xor
adc
jge
mov
fwait
jb
jne
std
jle
inc
je
lds
cli
ret
xor
call
cmc
pop
fs
scas
sub
mov
dec
pop
test
in
fiaddl
push
stc
sarl
xchg
xor
mov
jg
xor
mov
sarb
and
cmp
push
or
pushf
es
mov
inc
sub
push
fcoms
arpl
push
add
adc
gs
mov
jle
das
cmpsb
jle
dec
lea
jg
scas
sbb
jge
shll
adc
imul
je
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
and
add
add
mov
and
stc
dec
cmp
or
push
into
xchg
enter
std
hlt
cmp
aad
cld
xchg
lcall
push
mov
nop
or
push
push
add
sub
add
add
mov
negb
mov
jbe
inc
adc
cmc
mov
in
pusha
push
aaa
jmp
cli
adc
shlb
outsb
pop
mov
out
bound
ret
push
push
cwtl
shrb
in
lods
enter
sbb
adcb
fdivrs
das
jae
fidivl
in
mov
xor
imul
cli
stos
mov
or
lods
loope
cmp
pop
call
cmp
push
lods
in
push
subl
mov
daa
xor
pop
aam
mov
scas
filds
imul
xor
xchg
es
add
notl
xchg
push
pop
test
mov
lret
jp
inc
jne
test
sti
cs
xchg
cwtl
aam
mov
lds
jae
dec
pop
pop
cmpl
ret
pushf
fnstsw
adc
pop
mov
mov
and
stc
cli
mov
movsb
inc
imul
push
mov
mov
cmp
push
push
popf
cs
jge
cmp
rcll
mov
rolb
cmp
nop
out
xor
loope
jae
or
mov
addl
aas
lock
jmp
fsub
mov
dec
push
cmpsl
push
pushf
pop
sub
xor
xchg
mulb
mov
cmp
ss
xchg
pop
adc
xor
adc
jge
orl
stos
pop
dec
inc
pop
adcb
jne
cmp
mov
add
lret
cmp
push
sti
addl
push
cmp
fs
dec
mov
ljmp
mov
aas
ret
mov
jle
mov
push
gs
popf
loop
mov
inc
push
incl
add
and
mov
xchg
dec
fdivrl
sbb
sub
outsb
sbb
mov
sbb
push
jnp
gs
cmp
mov
mov
aas
or
jle
xorb
push
pop
jle
jg
push
bound
jnp
sahf
arpl
rolb
jp
loope
mov
sti
shrl
push
cmp
iret
and
lret
inc
aaa
xchg
lahf
in
data16
imul
dec
ljmp
call
repz
mov
add
xchg
idivb
mov
push
inc
das
out
js
push
je
and
pop
dec
jb
mov
push
sbb
shr
repz
inc
and
addr16
pop
dec
aad
mov
or
xchg
dec
out
ret
sarl
outsb
xor
loopne
add
or
lahf
hlt
push
flds
in
out
test
pop
or
pop
push
int
dec
adc
cmp
fisubrs
test
sbb
or
add
or
sbb
xchg
pop
call
fst
test
inc
or
or
inc
loopne
pop
into
jo
push
shl
xor
ss
dec
repnz
push
jmp
pop
aad
out
mov
cmc
mov
xchg
jle
push
in
rol
popa
mov
adc
add
call
inc
inc
jecxz
xchg
adc
push
and
mov
decb
dec
jmp
movsb
mov
das
mov
sbbl
dec
add
cmp
or
jmp
adc
sbb
xchg
outsl
lods
test
icebp
rolb
mov
add
inc
jmp
cmp
cmp
adc
fs
cmp
fwait
ljmp
fmull
push
test
mov
sbb
call
lret
push
or
mov
jg
jmp
outsl
add
jmp
or
dec
scas
popa
jnp
ljmp
in
push
xchg
out
push
dec
adc
mov
and
xlat
mov
icebp
movsb
and
jl
inc
int
dec
rcl
add
xchg
cmc
jle
fnstsw
adcl
xor
into
sbb
jae
ret
mov
popf
mov
add
jo
sub
pop
adc
leave
lea
aad
ret
mov
leave
out
iret
int
dec
mov
cld
adcb
cmp
cmp
dec
mov
sub
and
stc
movsb
cmovl
ud2
loopne
and
sbbb
and
jae,pt
in
pop
push
loope
xor
push
mov
bound
mov
fs
test
fadds
dec
mov
xor
pop
adc
add
pushf
fisubl
stos
jne
mov
test
cli
jl
xchg
mov
jp
dec
pop
cmp
mov
jl
or
sub
aas
aam
cmp
inc
inc
insl
test
xor
inc
cwtl
in
pop
in
pop
scas
mov
lods
sbb
push
push
and
mov
into
repnz
dec
adc
cmc
mov
jne
std
pop
mov
or
push
movsl
out
xor
jg
xchg
or
aam
loopne
sbb
roll
shlb
jne
stos
movsl
dec
sbb
ds
insl
pop
or
adc
insl
cwtl
mov
jp
jnp
pusha
sub
lahf
dec
xlat
sbb
mov
mov
xor
roll
mov
insl
insl
dec
sub
xor
int3
aas
xchg
dec
lea
sbb
jl
mov
out
fldcw
mov
lods
das
std
paddusw
xchg
movsb
das
dec
jmp
pop
adcb
mov
mov
or
imul
test
into
pop
mov
dec
and
rolb
jl
sub
adc
cmp
aaa
fistpl
push
jbe
addr16
leave
in
sbb
cmpsl
sbb
jg
ljmp
lret
std
cmp
arpl
pop
mov
in
repz
or
mov
mov
js
inc
in
fsub
mov
pop
test
pusha
int
lret
pusha
dec
orb
mov
int3
or
push
xor
in
out
push
adc
inc
in
add
in
dec
movsb
ret
fists
push
push
mov
cs
push
loop
aas
je
add
dec
shll
jb
push
adc
ss
call
ja
in
and
ja
add
neg
sub
scas
sbb
cmp
push
pop
push
and
push
sbb
out
mov
jo
jbe
pop
add
dec
int
mov
js
lret
dec
pop
icebp
ret
mov
pop
in
mov
mov
and
mov
movsb
adc
add
ret
hlt
mov
mov
sub
xchg
and
xchg
fwait
or
stc
or
imul
and
aad
push
cmc
sbb
les
push
call
dec
arpl
mov
push
loop
push
fldenv
mov
dec
mov
push
push
popf
xlat
cld
dec
jl
ficomps
sbb
and
push
imul
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
sbb
fs
jp
or
bound
cmp
xchg
in
dec
xor
pop
int
pop
scas
movsb
xchg
popa
loopne
mov
lods
xchg
dec
leave
arpl
lcall
in
adc
jle
and
lcall
lods
cmpsl
cmp
push
add
mov
adc
sub
jbe
xchg
cmp
cltd
imul
cli
adc
push
xchg
xchg
js
adc
dec
pop
in
or
outsb
inc
push
pop
scas
push
fadd
cs
rclb
call
lret
and
in
jae
inc
xchg
stc
or
insb
xchg
add
push
addr16
pcmpeqd
xor
lock
cli
movsb
add
inc
cld
adc
inc
xor
movsl
adc
fidivs
inc
and
dec
setbe
jmp
into
fucomi
sbb
mov
push
out
stc
sbb
cmp
imul
ret
push
push
lods
pushf
jle
cmp
add
pop
mov
mov
mov
les
test
pop
add
mov
pop
mov
js
insb
cmp
mov
mov
rcll
xchg
adc
pop
fstl
lret
push
fsubl
out
inc
int
sarl
les
lock
mov
nop
clc
mov
shl
sahf
sahf
xor
imul
inc
inc
jl
scas
les
cmp
jo
cmpb
pop
inc
add
mov
lock
jne
push
jg
les
js
cmp
pop
sbb
cmc
fwait
add
enter
cltd
mov
cmp
mov
xor
pop
stc
sub
andl
push
mov
repnz
cmp
ror
add
sbb
out
cmpsl
adc
push
fisubrs
xor
dec
sbb
mov
xchg
cmp
into
pop
cmc
mov
into
fbld
scas
jae
add
dec
push
sbb
pop
xor
stos
adc
push
dec
aam
std
sbb
scas
mov
shl
lea
inc
mov
loop
mov
int
push
lahf
pop
rcrl
or
inc
bound
sahf
je
enter
popa
add
ljmp
arpl
push
cltd
out
jge
xchg
roll
dec
scas
cmp
xlat
bound
out
das
push
or
sbb
mov
icebp
cmp
add
xor
ds
cld
xor
nop
mov
and
and
push
inc
push
sahf
neg
xchg
loope
mov
mov
xor
cli
loopne
push
loope
xchg
imul
push
xor
dec
movsb
mov
mov
mov
dec
cmpsl
xor
sub
aaa
jbe
lcall
scas
pop
sbb
movsb
cmp
aad
rorl
or
dec
mov
xchg
push
stc
sbb
std
or
sahf
test
sbb
int3
or
shrl
add
push
add
dec
push
mov
pop
fwait
mov
ds
push
outsb
adc
clc
mov
pop
dec
nop
fcmovu
adc
cli
inc
cmp
pop
orl
mov
scas
hlt
mov
jbe
sub
in
test
push
and
push
adc
daa
mov
scas
insb
ret
shll
jge
mov
pinsrw
mov
fnsave
push
test
filds
jbe
sub
pusha
or
cltd
sbbb
inc
sbb
push
test
mov
cmp
pop
add
fldt
push
mov
ret
out
fs
mov
sub
jle
push
dec
test
jl
insb
popa
xchg
pop
lock
pop
clc
cli
mov
mov
and
cmp
stos
mov
sub
idiv
in
or
imul
push
add
mov
xchg
jmp
ret
ss
out
mov
cmpsb
mov
cmc
cmp
adc
dec
xor
xchg
out
imul
lcall
dec
push
sub
adc
outsl
mov
adc
jbe
cmp
imul
push
testb
je
lds
dec
and
xchg
cwtl
push
jg
idivl
cs
cmp
out
push
mov
xchg
inc
dec
iret
lods
out
test
push
clc
xchg
rclb
ror
and
lock
push
and
push
cmp
out
adc
push
jg
je
pusha
jo
sbb
aam
push
fcompl
sub
cmpb
add
cmp
call
sub
data16
enter
pop
jno
or
push
mov
xor
or
test
negb
sbb
push
or
dec
add
lods
rcr
rcl
jno
xchg
ljmp
sub
cmp
push
mov
jno
inc
push
in
adc
sub
je
ficoms
cs
mov
dec
xchg
rcll
sbbb
mov
in
push
push
xor
jns,pt
icebp
mov
cwtl
imul
loopne
test
std
mov
add
add
idivb
mov
aaa
xchg
mov
pop
in
push
cmp
mov
in
xor
testl
sub
aaa
cmp
rclb
addb
int3
lea
mov
pop
mov
and
mov
push
jno
insl
insb
jl
in
push
test
xor
xor
cmp
jl
push
push
enter
loope
xor
fwait
gs
into
stos
jle
aad
gs
fwait
scas
sub
aas
leave
mov
mov
and
mov
xchg
es
js
sbb
mov
mov
dec
test
mov
inc
jl
mov
int
cmpsl
xor
adc
testl
or
ds
xchg
sbb
repnz
mov
cmpsb
lock
jbe
cmpsl
jb
and
or
aad
xchg
adc
aad
fwait
push
add
push
cmp
pop
out
out
jmp
cltd
mov
clc
repz
inc
adc
jbe
test
xor
and
ds
sbb
pop
push
jns
pushf
int
test
or
xor
xchg
add
fists
lods
or
ss
rorl
rolb
jmp
sti
and
daa
fld
inc
sti
pop
mov
popf
pop
mov
push
mov
daa
add
push
leave
xor
mov
scas
adc
adc
cmp
lahf
jno
sub
rorl
call
push
cwtl
jecxz
cmpsb
in
jno
sub
mov
int
ds
das
fwait
cmpsb
enter
fsubs
test
add
or
outsl
jns
nop
std
ret
out
mov
pop
adc
mov
jb
out
mov
xchg
ret
das
out
mov
xchg
repz
aaa
mov
mov
imul
sbb
cltd
outsl
jb
ret
addr16
enter
imul
sub
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
add
loope
adc
addl
shlb
jnp
adc
xor
dec
add
sbb
and
mov
xchg
and
jne
out
xchg
mov
sub
scas
and
hlt
xchg
cld
add
jns
mov
fbstp
push
mov
cmpl
inc
pop
or
pushf
pop
cmp
js
test
jb
xor
in
adc
fists
std
cld
adc
stos
inc
jmp
aam
sub
fists
sti
fcmovnbe
inc
loope
xor
jb
loopne
mov
in
es
mov
fisubrs
jne
aas
xor
or
in
sbb
ja
orb
xor
push
mov
cli
lock
enter
xor
xor
cmp
aam
xchg
mov
mov
jecxz
push
sub
daa
movsl
mov
dec
daa
cmp
xchg
scas
mov
outsb
cmp
dec
ljmp
ret
repnz
sbb
hlt
adcb
scas
pop
lahf
repz
cmpsl
mov
fistps
cmp
push
mov
int
mov
push
fs
shll
mov
in
xor
shll
in
dec
adc
in
sahf
jmp
das
cmc
ja
out
mov
into
sub
mov
mov
mov
jle
fbstp
test
scas
mov
lret
cwtl
cs
mov
lds
jb
enter
lret
les
pop
movsb
iret
lea
push
mov
adc
lds
add
clc
dec
and
outsl
jge
imul
cmp
fbld
leave
or
and
cmp
imul
pop
das
xorw
push
pop
xor
jbe
lock
dec
mov
cmp
or
or
cmpl
fstps
mov
pop
push
orl
cmp
ljmp
loop
pushf
mov
pop
dec
push
lret
lods
mov
pop
xchg
mov
jmp
lods
jmp
movsl
cmp
mov
mov
mov
xlat
and
xor
scas
cld
and
xchg
add
push
dec
inc
gs
loop
outsb
mov
iret
ror
lea
jb
fistpll
lahf
mov
mov
out
jmp
idivl
or
mov
jnp
cld
push
aam
push
push
adc
add
xor
adc
mov
mov
es
es
cmpsl
fcomip
hlt
inc
adc
jl
cld
fwait
mov
call
adc
movsb
pop
fistps
filds
pmullw
mov
mov
mov
push
pop
repz
and
mov
scas
lods
ds
loope
jmp
fildll
movsb
fcoms
sub
and
fldl
sbb
xchg
imul
jne
arpl
push
and
xor
aam
sub
mov
fsubl
scas
sub
leave
loopne
push
insl
aam
jg
jo
inc
cld
mov
outsl
ffreep
mov
or
jp
test
test
fiadds
jmp
inc
adc
mov
adc
cmp
inc
push
iret
leave
dec
pushf
adc
repz
hlt
mov
les
es
mov
popf
fiadds
stos
fadd
insb
fcmovnbe
mov
stos
and
mov
mov
lahf
mov
pop
cmp
fsubl
lahf
inc
je
mov
adc
pop
test
mov
push
and
iret
adc
sbb
mov
cmp
lahf
ret
jno
test
mov
push
mov
mov
and
mov
es
mov
pop
pop
mov
test
push
or
jp
hlt
mov
outsl
fisubrs
cltd
pop
jbe
and
mov
sub
loop
enter
mov
stos
fwait
or
into
dec
popf
int
pop
loope
mov
imul
push
mov
lods
popf
dec
dec
jne
inc
jl
sub
int3
jle
sbb
push
mov
enter
push
add
int
sarb
das
mov
sysexit
negl
xchg
mov
pop
pop
cli
mov
and
xchg
mov
fdivrs
jmp
ljmp
cmpsl
enter
fdivrl
or
js
mov
lds
jae
xchg
je
xor
cltd
lret
notl
cmp
ja
push
pop
lods
jb
mov
sbbl
xor
adc
aaa
push
mov
pop
jmp
repz
shlb
in
insl
mov
rclb
inc
in
mov
jno
mov
or
dec
pop
sbb
mov
lahf
iret
jle
out
adc
cld
cltd
mov
or
push
pop
mov
mov
and
ret
call
repz
mov
incl
in
pop
mov
frstor
lock
pop
jbe
rorl
adc
jae
mov
nop
cmp
jl
or
push
xor
xor
popl
sbb
or
scas
daa
dec
mov
mov
xchg
adc
ds
jle
pushf
dec
imul
clc
lret
xchg
lods
dec
xor
push
xchg
int
jle
mov
popf
jp
push
ss
shlb
push
add
aam
in
stc
add
in
repnz
fstpt
std
sub
repz
sarl
cwtl
push
shll
adc
hlt
cmp
add
dec
push
lcall
sbb
jge
sbb
cmc
jmp
xchg
push
sti
pop
inc
addr16
aas
out
fisubrl
test
sbbb
sarl
jbe
lods
int
jle
in
xchg
enter
inc
inc
push
rclb
and
jle
test
sub
xchg
sahf
and
push
sub
lea
fldcw
xchg
adc
add
push
push
push
xorb
push
xchg
aam
enter
testl
cmp
mov
jo
cmp
jl
mov
jae
int
sub
lock
test
stc
mov
xchg
fnstsw
lret
adc
test
xchg
mov
dec
js
std
popa
mov
jp
xchg
repnz
and
xor
add
mov
lods
rorl
or
aas
popf
xchg
mov
xchg
sub
sub
cmp
cmp
pushf
bound
xor
add
jmp
arpl
sbb
imul
repz
outsb
mov
aad
adc
jg
mov
mov
daa
cmp
sub
rol
push
les
cli
pop
mov
test
and
insl
dec
sbb
jl
mov
jns
ffree
dec
inc
jmp
bound
ret
stos
ljmp
and
aam
outsb
jmp
int3
repz
sbb
test
cli
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
cltd
imul
lock
cmpsb
and
jp
xchg
imul
or
sbb
sbb
mov
mov
rcl
sub
fdivs
outsb
movsl
mov
negb
test
aam
jl
or
pop
mov
mov
push
xorl
aaa
dec
sub
and
in
cwtl
test
std
test
in
loop
push
dec
jmp
les
ja
jne
lock
and
movsl
in
xor
pusha
sbb
xchg
enter
mov
repnz
inc
mov
xchg
jo
shll
addr16
and
notb
fsts
inc
dec
out
outsb
or
lods
fsubrs
jmp
add
out
std
sbb
lock
movsl
cmpsb
or
es
hlt
int
add
mov
adc
pop
jbe
cmp
adc
in
mov
fdivs
stc
sub
cmpsb
lcall
inc
push
scas
or
lahf
into
inc
mov
dec
mov
rorb
iret
pop
mov
dec
stc
in
mov
fisubs
out
dec
outsb
cmpsb
popa
mov
pop
popf
and
add
xor
andb
cmp
jnp
mov
ds
fbstp
mov
or
pop
sub
out
pop
dec
lds
popf
cli
loope
rcll
insw
jae
inc
fbstp
lock
pop
lcall
loopne
pop
inc
dec
jg
test
mov
dec
arpl
jo
xor
out
mov
cmp
xor
ds
je
jo
testl
cmp
sbb
sti
or
or
xchg
call
xor
or
aas
jo
inc
ja
leave
dec
sbb
out
pop
fcmovb
xchg
ret
push
inc
xchg
daa
das
sahf
jo
sar
fs
mov
test
jne
js
lock
clc
inc
test
jns
xchg
push
fistps
arpl
out
ret
fbstp
xor
fs
sbb
lock
pusha
push
mov
aaa
mov
xlat
scas
adc
mov
hlt
add
std
loop
jbe
fbstp
test
xchg
pop
bound
testb
mov
lret
fimuls
pusha
sub
daa
pop
daa
inc
rorl
cwtl
xchg
and
lret
into
leave
popf
sbb
out
xchg
fsubs
in
into
das
xchg
sub
mov
subb
stc
add
add
movsb
ss
pop
call
sbb
pop
pop
mov
lahf
push
jno
shl
mov
xor
addr16
lret
cmp
pop
inc
ss
mov
mov
mov
cmc
cltd
lcall
mov
aas
outsl
call
jae
lods
ret
adc
fwait
idivb
sub
aas
and
or
adc
or
rclb
out
inc
add
pop
mov
mov
push
sti
mov
bound
dec
nop
jge
pop
xchg
xlat
jns
push
movsl
test
pop
lret
mov
out
andb
jo
test
jnp
push
call
mov
push
or
mov
fsincos
add
fmull
xchg
mov
inc
test
cld
test
jb
jl
pop
push
iret
add
xor
mov
jp
jo
cld
daa
pop
pop
adc
loopne
mov
or
jbe
inc
js
gs
lret
add
cmpsb
mov
sub
mov
dec
out
mov
mov
xchg
pop
enter
leave
ret
pusha
mov
in
ljmp
sbb
push
nop
sbb
sti
mov
in
xchg
lret
inc
repnz
sub
and
cmpsl
jmp
add
xchg
cmp
loopne
xor
popa
daa
shll
push
sbb
aad
sbb
add
mov
mov
aad
pushf
test
scas
adc
scas
fs
les
or
mov
fmuls
sub
dec
sub
mov
push
outsb
outsl
cmpsb
pop
sbb
std
shlb
in
mov
leave
mov
inc
ljmp
dec
inc
sub
in
pop
subl
dec
sub
fcoms
dec
adc
xchg
lret
adc
pop
loopne
test
inc
push
dec
loopne
pop
jb
and
cmc
push
data16
jmp
arpl
jae
xchg
popf
in
mov
mov
add
xchg
icebp
push
pop
add
sahf
shll
jnp
push
outsb
push
rdtsc
adc
jge
orl
mov
roll
insl
repnz
push
aam
pop
in
int3
and
and
shll
dec
jnp
dec
incb
leave
enter
fidivl
out
inc
cltd
pop
daa
pop
outsb
cwtd
in
bnd
add
into
shrl
push
sub
cs
in
scas
sbb
outsl
add
popf
cmp
inc
loopne
mov
mov
xchg
fidivrl
inc
xor
sahf
out
idivl
popa
in
add
loope
call
add
aaa
sub
cld
dec
adc
push
gs
call
or
xchg
pushf
movsb
push
jnp
or
clc
test
jecxz
push
shrb
int3
mov
dec
cmp
imul
shl
mov
stos
inc
mov
mov
sub
sbb
and
cltd
ficoms
xor
adc
lcall
push
aad
sbbl
out
jne
push
dec
fst
sub
aad
lcall
cmp
xchg
jmp
stos
bound
stos
xor
movsl
pop
mov
in
pop
sbb
cs
orl
sbb
mov
adc
insl
aam
mov
inc
arpl
popf
add
daa
or
fildll
cmp
cmpsb
add
push
cmp
adc
add
xchg
mov
leave
pushf
pop
push
pop
rcll
negl
in
dec
sub
outsb
fstps
sbb
xlat
pop
push
xchg
mov
movsb
sub
rcrb
out
mov
pop
jp
jbe
push
adc
jge
push
ficoml
fnstsw
sub
call
test
adc
xor
lea
mov
adc
loopne
ret
jmp
movsb
push
dec
repnz
les
scas
push
adc
mul
push
push
pushf
sbb
mov
sbb
aas
cld
xor
mov
incb
mov
clc
mov
ss
cmpsb
inc
scas
or
lcall
dec
pop
loopne
mov
and
jnp
nop
xchg
inc
cmpsb
stos
mov
dec
loopne
inc
dec
cmp
pusha
andb
add
lock
sbb
dec
inc
xchg
jmp
inc
jl
ljmpw
hlt
movsl
inc
dec
stos
shr
les
cmpsl
loopne
xor
loopne
insl
jle
movsb
scas
cmp
lret
add
repnz
sub
sub
in
lods
inc
jmp
push
aas
les
popa
pop
or
mov
xor
push
scas
inc
push
inc
popl
in
mov
dec
in
cmc
xor
outsl
jo
inc
data16
sbb
jge
push
pusha
jp
or
sbb
pushf
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
xchg
or
scas
adc
jno
imul
sar
xor
adc
in
imull
add
popf
xchg
push
repz
push
xlat
loopne
int
dec
mov
ret
cli
dec
jmp
movsb
lods
add
ficoml
lds
hlt
mov
xor
test
test
jns
insl
fwait
pop
inc
add
push
mov
cmp
je
cmc
adc
fs
inc
out
in
bound
shrl
stos
stos
inc
les
scas
pop
dec
ss
int3
adc
mov
xchg
pop
test
int3
arpl
or
jge
sahf
roll
mov
dec
gs
adc
rclb
pop
out
dec
mov
mov
adc
dec
and
movsb
shr
arpl
out
push
mov
fidivs
sahf
add
js
add
sub
or
mov
popf
push
mov
int
rolb
pop
mov
fs
popf
push
mov
loopne
xchg
or
mov
dec
jo
jnp
pop
cmp
les
push
and
daa
mov
cltd
fimull
jecxz
loope
xchg
jecxz
bound
es
pop
pop
cmc
and
push
pop
or
out
mov
stos
lret
sub
lock
push
or
jmp
aas
insl
xchg
scas
lret
inc
pop
jae
gs
mov
cltd
clc
xchg
mov
add
iret
pop
jge
push
inc
aad
add
mov
rcrl
stos
and
pop
shrl
pop
inc
mov
out
test
ficompl
sbb
shl
cmp
adc
jg
sbbb
xchg
lret
add
out
es
lret
cmpsl
xchg
jmp
jmp
mov
and
mov
and
scas
xchg
fcomi
aas
aam
sbb
push
adc
or
mov
mov
mov
in
lea
dec
loop
push
aam
insb
inc
cmp
sbbb
jnp
xchg
mov
cmp
jb
dec
addb
ss
fnstenv
int
jp
pop
push
out
xor
pop
pushf
stos
xlat
push
pop
cltd
sbb
insb
xor
or
and
aad
add
jl
or
es
lahf
jecxz
enter
clc
in
jge
adc
dec
subb
and
lea
adc
sahf
addr16
add
call
or
add
xchg
inc
test
into
pop
mov
xchg
daa
fiaddl
div
addl
jno
mov
scas
cmp
sti
imul
dec
dec
push
jnp
cmp
xor
ja
xrelease
or
mov
cmp
pop
and
lock
dec
fmuls
ror
in
les
mov
pop
in
fidivrs
jo
ja
fwait
xchg
dec
cmp
push
xchg
out
fcoml
cli
lcall
lret
or
mov
stos
lcall
cmp
lahf
jns
xchg
dec
dec
lds
sbb
ljmp
mov
sbb
in
shll
xor
fbld
addr16
mov
xchg
daa
jp
xchg
stos
and
mov
adc
pop
std
pop
jnp
loope
test
xchg
lahf
mov
sub
adc
jns
xchg
dec
sub
mov
mov
insl
or
or
out
pop
adc
mov
mov
pop
dec
lds
lahf
imul
mov
push
adc
loopne
or
cmc
mov
jmp
test
sahf
push
dec
andl
stc
inc
ljmp
in
jg
rcrb
mov
inc
xchg
jno
pop
outsl
sti
data16
stos
cltd
cmp
out
aad
insb
and
push
pop
mov
push
push
adc
loope
inc
add
mov
and
push
cmpsb
scas
push
pop
je
mov
or
jg
in
inc
pop
xchg
inc
lahf
fwait
adc
sub
mov
ja
imul
jle
push
cmp
outsl
xor
or
adc
es
out
push
jo
inc
dec
in
sbb
mov
ja
mov
std
mov
shr
jo
lcall
iret
lock
stc
into
add
outsb
cmp
push
push
jg
sub
mov
out
icebp
mov
clc
aas
js
add
inc
call
cmp
push
popf
push
adc
divl
xchg
push
lahf
dec
imul
pushf
rcll
pop
jno
fucomp
push
in
jmp
cmp
into
push
ss
mov
pop
xor
ret
jge
fnsave
xchg
jmp
in
or
push
lods
addr16
lret
xchg
or
stos
scas
movl
stos
mov
scas
mov
xor
adc
jmp
pop
dec
stos
sub
aas
loop
or
inc
adc
jbe
js
xor
push
daa
loop
jnp
out
jne
cmp
dec
jne
mov
or
dec
loopne
repz
loope
std
rcr
gs
or
jecxz
inc
in
out
inc
repnz
push
repnz
enter
jp
jnp
push
add
or
mov
in
in
lret
and
xchg
sub
mov
sbb
xchg
ja
ficoml
rcll
or
xchg
sbb
ret
sahf
rorl
and
popf
ret
pushf
test
xchg
popf
not
inc
adc
or
icebp
les
mov
or
mov
scas
xorb
jle
pop
adc
ljmp
out
insb
imul
scas
sbb
adc
aaa
jp
sub
jne
daa
xchg
repz
pop
sbb
mov
scas
fs
lock
loop
cli
je
sbb
mov
cli
dec
dec
andl
rolb
jp
data16
mov
inc
adc
imul
aaa
dec
mov
les
cli
cmp
mov
aaa
push
in
inc
and
jo
mov
jne
jae
js
leave
xor
rorb
xchg
cld
pusha
and
stos
inc
repz
or
ficoml
out
dec
daa
pusha
dec
mov
movsl
leave
ljmp
repnz
mov
rclb
insb
xor
fcmovb
jno
or
mov
std
notb
sub
or
jmp
pusha
out
mov
shrb
xor
jae
and
leave
stos
xchg
mov
rep
and
mov
sahf
sbb
ljmp
mov
mov
call
dec
sahf
adc
mov
and
lahf
stos
enter
cmp
aas
add
xor
add
cmp
xor
cltd
in
push
fbld
mov
xor
inc
movsl
ficomps
ja
mov
mov
imul
or
ja
and
insb
jmp
lock
jge
iret
xorb
sarl
add
cmp
xor
jge
add
pop
jnp
sub
pop
mov
sbb
pop
clc
lock
cltd
daa
mov
icebp
sub
xchg
rcrb
dec
and
mov
inc
lahf
iret
pop
sbb
pushf
or
hlt
pop
pusha
loop
clc
or
cmc
testl
inc
inc
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
out
lret
jle
pop
cli
adc
movups
movzbl
cltd
push
les
and
jge
jg
clc
sub
adc
jge
or
dec
mov
jnp
push
xlat
pushw
jbe
nop
cmp
xlat
xchg
mov
leave
mov
dec
hlt
insl
lock
lret
add
mov
ds
push
inc
add
jb
iret
fisttpll
push
adc
jecxz
imul
jno
fmull
hlt
push
mov
push
int3
lret
push
jnp
pop
fstps
cs
xchg
ljmp
adc
daa
test
in
sti
adc
xchg
jb
and
daa
push
or
jo
out
xchg
pop
test
jl
iret
int3
shll
jbe
mov
cmpsb
pop
fs
hlt
pop
bnd
add
xor
lahf
ficomps
xchg
dec
cmp
test
scas
in
jns
gs
dec
daa
adc
add
popf
dec
cmc
iret
mov
dec
push
mov
cmp
scas
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
