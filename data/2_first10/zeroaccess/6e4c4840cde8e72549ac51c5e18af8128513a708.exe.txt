push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
or
jp
sub
and
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
push
pop
dec
andl
inc
pop
les
mov
arpl
mov
filds
test
lret
sti
dec
fnsave
aad
dec
fiaddl
add
or
inc
sub
xchg
adc
sbb
test
fsts
mov
sbb
mov
xchg
adc
lods
mov
movsl
enter
rcl
push
testl
add
mov
mov
lods
fildll
add
repz
outsl
mov
out
cmp
stos
pop
neg
mov
and
fs
xchg
gs
push
daa
sahf
test
int3
popa
pop
sub
sahf
or
fldenv
pop
xlat
pop
loope
test
mov
cmpsl
jmp
mov
jg
out
add
mov
shlb
ret
adc
sbb
cmp
ljmp
stos
mov
mov
inc
jnp
enter
outsl
out
mov
jmp
addr16
stos
push
and
jns
cmp
ds
pushf
cmc
das
sbb
mov
push
add
out
jl
xchg
testb
addr16
leave
adc
icebp
push
adc
int
js
adc
mov
dec
lret
lcall
aas
jp
cmp
sbb
enter
nop
mov
fiadds
jne
pop
sbb
push
lock
jl
ja
pop
leave
sbb
sarb
mov
and
add
in
in
inc
movsl
pop
fs
filds
or
gs
icebp
push
cmp
and
scas
roll
push
adc
push
sub
lods
xchg
sti
jbe
sahf
lods
das
jg
xchg
negb
dec
mov
sbb
inc
push
nop
cmp
mov
es
cld
es
sub
adc
jl
lahf
std
aaa
pop
or
fimull
ljmp
jbe
gs
pop
dec
pop
outsl
test
in
sub
fisubs
pop
in
rcll
testl
jne
xchg
pop
sbb
into
iret
test
dec
jp
btc
mov
jge
push
push
or
out
bound
nop
cltd
rorl
cwtl
shlb
hlt
sub
mov
mov
adc
jns
mov
xchg
xor
outsl
fmul
push
inc
imul
mov
out
test
testl
mov
jp
sbb
dec
dec
rclb
fdiv
loop
fldl
hlt
fists
pop
popa
adc
loope
mov
gs
jp
xor
sub
mov
loopne
js
lret
bound
sub
addr16
stc
int3
pop
mov
cmp
jnp
mov
insl
adc
andb
ja
inc
sbb
sub
dec
and
incb
add
mov
and
test
push
push
lcall
pop
mov
and
std
lret
imul
or
repnz
test
aaa
in
or
mov
xorb
pop
xchg
sbbl
add
adc
xchg
xchg
mov
dec
sub
sub
adc
inc
xchg
mov
aaa
add
xor
jl
sbb
imul
outsl
and
inc
push
mov
out
sub
mov
cwtl
aam
loop
xlat
add
xchg
fs
rclb
dec
push
stc
lret
push
xor
rorb
and
add
lock
loopne
mov
and
xor
push
std
and
idivb
cmp
aaa
loopne
aam
mov
cmpsb
dec
add
sbb
inc
loopne,pn
sbb
test
jl
dec
jle
movsl
push
cmp
cmp
fs
push
out
test
dec
mov
jle
pop
xor
mov
daa
insl
cmp
mov
jb
lea
xchg
cwtd
movsl
les
sarl
leave
stos
addr16
sbb
push
jbe
sub
fwait
push
pop
and
xor
pop
mov
repnz
dec
pop
ret
ret
ja
add
mov
jl
call
add
sbb
xor
sbbb
xchg
loopne
pop
jb
mov
call
mov
daa
mov
lea
sbb
pop
cmp
or
mov
xor
and
sbb
into
adc
shlb
std
in
js
hlt
push
icebp
jmp
mov
in
cmp
sbb
xchg
ret
aam
sub
rclb
mov
add
push
and
jmp
lea
in
movsb
jge
and
sub
adc
jnp
daa
xor
dec
sub
xor
add
out
pop
out
das
xchg
pop
fsubrl
shrb
or
test
ficoms
push
jl
jge
pop
movsl
xor
sbb
push
repnz
jmp
xadd
sbb
fwait
insb
cmp
xchg
jge
into
fildl
out
icebp
pop
xor
adcb
daa
in
shrl
jns
jmp
mov
repnz
mov
call
ret
fs
ljmp
jnp
aam
mov
sbb
mov
jo
outsb
pop
fdivl
adc
xor
sti
cli
aaa
fwait
test
or
adc
lret
cmp
xor
bound
jecxz
jl
arpl
cwtd
jne
in
mov
negl
mov
lahf
fwait
inc
cmp
mov
jno
lock
enter
xor
loopne
cwtl
cs
dec
push
lcall
lock
and
push
lods
shll
and
aad
test
add
mov
mov
jmp
adc
push
sbb
inc
fadds
in
loopne
inc
sarl
pop
push
mov
xchg
mov
mov
dec
ror
addl
or
sti
popl
cmp
mov
sbb
pop
pop
pop
arpl
xchg
inc
test
jmp
mov
add
dec
leave
std
gs
xor
movsl
cmp
movsl
nop
stos
cmp
cs
stos
inc
fwait
sbb
jae
add
sub
ljmp
xor
cli
pop
outsb
push
movsl
xlat
and
inc
adc
in
mov
call
pushf
mov
rorb
inc
stos
push
and
pop
rcr
xor
sti
hlt
sub
loop
outsl
loope
cs
push
push
ljmp
adc
test
movl
test
test
pop
test
leave
dec
das
lcall
sbb
inc
cmpsb
lods
mov
xor
cmp
sahf
adc
mov
icebp
int3
lock
mov
bound
inc
inc
mov
lock
loop
lods
or
fiadds
jno
add
pop
mov
jb
mov
aas
lea
fcmovnbe
ret
jne
mov
sahf
insb
mov
faddl
lahf
inc
dec
popf
sbb
lahf
sbb
lea
inc
sahf
sub
xchg
add
movsl
mov
mov
sbb
lods
add
cltd
pop
dec
sub
addr16
test
adc
jae
enter
mov
xlat
push
fdivrl
loopne
aas
sbb
sbb
pop
fsub
movsb
and
jbe
nop
test
aam
jg
cmp
jns
inc
xchg
test
movsb
fcom
mov
push
sbbl
cmp
lcall
test
or
mov
push
lcall
fisubrl
jmp
daa
sbb
mov
ljmp
cmpsb
ret
stc
fcoms
daa
pop
pop
sub
inc
ja
hlt
addr16
cmpsl
xchg
mov
insl
jp
jae
js
clc
inc
int3
outsb
or
leave
dec
loop
paddsw
test
adc
xchg
or
xor
pop
bound
push
sub
mov
in
pop
ljmp
ss
clc
mov
jl
mov
adc
sarb
in
jns
cmpl
cwtl
push
jle
and
fisubs
inc
sub
scas
in
xor
or
dec
fnstcw
andl
sub
fiadds
and
adc
cmp
call
dec
sar
mov
push
call
pop
jo
lods
mov
incb
lds
stos
stos
mov
ljmp
cld
movsb
aas
add
fwait
repnz
inc
xchg
mov
jns
rol
fwait
lods
insl
dec
cmp
iret
inc
mov
int
lds
fistps
jge
pop
loope
fiaddl
pop
mov
push
mov
xchg
pop
pop
inc
sub
insl
adc
aad
add
pop
leave
push
mov
adc
mulb
adc
and
xlat
cmp
test
movsb
push
push
movsl
lahf
xchg
cmp
cmpsl
popa
push
push
rcll
out
xor
add
xchg
testb
fwait
xor
fcomi
out
xchg
inc
mov
and
loope
cmp
jge
jnp
push
cmc
add
fidivl
incl
mov
mov
adc
out
jge
fbstp
mov
arpl
rcll
or
scas
cmc
jg
fimuls
xchg
mov
rorb
rcll
sti
cmpsb
adc
mov
aas
repz
jmp
cmp
xchg
cltd
andps
dec
std
filds
cmp
andps
dec
inc
idivl
nop
inc
shll
test
mov
sub
cltd
lcall
xchg
repnz
loop
cmp
mov
xchg
loopne
xor
mov
popf
xchg
fisttps
xchg
daa
repnz
enter
ja
jae
in
ret
xchg
int
dec
shlb
loop
jo
inc
enter
push
mov
int
mov
dec
dec
xor
test
or
jge
fimuls
out
fsubrl
or
aam
add
notb
mov
adc
ja
fidivrs
dec
pop
pop
xchg
and
push
pop
outsl
outsl
xor
xlat
xor
xor
jae
cmp
dec
out
xchg
cmp
xor
int
imul
push
psubb
mov
inc
scas
aaa
aas
push
and
sub
jbe
inc
mov
dec
and
incl
mov
push
inc
xlat
shlb
into
sbb
push
sub
out
imul
sahf
cmp
stos
test
sub
int3
repnz
pusha
lods
js
cwtl
pmulhw
mov
mov
hlt
out
popa
pop
adc
lret
lock
clc
cwtl
jl
xchg
adc
enter
out
jbe
jae
out
int3
addr16
mov
jae
sar
fwait
out
stos
pop
mov
mov
call
jmp
add
ljmp
mov
push
fisubrs
insl
fildl
ss
jge
and
out
mov
stos
xchg
jb
cs
insb
test
scas
pop
dec
les
cmp
push
clc
mov
sub
sbb
repnz
pop
jg
loope
pusha
test
cmp
ficoms
pop
or
pop
test
mov
mov
loopne
xor
sti
jecxz
iret
pop
pop
test
or
aam
cmc
adc
add
pusha
shlb
cmp
pop
mov
xor
insb
int
cmpb
lea
outsb
inc
jno
ds
orb
aas
and
adc
mov
pop
mov
mov
push
sbb
dec
pushf
sbb
xchg
dec
or
cmpsl
inc
and
sub
add
mov
push
xchg
int3
shlb
and
cmp
jne
add
bound
xchg
loop
out
es
outsb
jo
cmpsl
enter
dec
adc
and
icebp
mov
aad
adc
inc
jmp
or
in
inc
sbb
pop
sahf
adc
insl
fisubrl
leave
mov
or
or
sbb
ds
popa
mov
mov
int
jecxz
shrb
ret
dec
outsb
lea
jo
pop
ja
xor
out
inc
out
cs
ja
fdecstp
scas
add
icebp
in
or
idiv
push
sbbl
pop
ja
xor
hlt
addr16
mov
sub
xor
pop
inc
ret
pop
sub
xchg
and
sub
pop
or
push
dec
in
cmp
xchg
mov
jns
cmpsb
inc
mov
lcall
jl
js
lret
lret
inc
inc
lods
xchg
mov
aaa
mov
mov
fwait
iret
insl
filds
pop
xchg
int
iret
stc
addr16
jbe
cmpsl
out
adc
mov
and
mov
jge,pt
lahf
and
sub
push
push
leave
adc
mov
xor
and
idiv
fidivs
add
mov
mov
mov
fsub
cld
in
adc
adc
jecxz
rcrl
pop
mov
clc
imul
xor
mov
bound
data16
sbb
mov
xchg
or
xchg
cmpsl
fwait
stos
loop
dec
outsl
sarl
adc
lods
or
vmovaps
imul
ja
or
loop
in
enter
mov
cs
adc
aas
cmpsl
mov
and
rcr
stos
add
out
pop
xor
jns
aad
adc
push
jno
mov
pop
xor
inc
mov
pusha
cmp
cmpsb
xchg
xchg
lods
shll
roll
negb
mov
arpl
insb
sub
or
and
cmp
add
cmc
outsl
lret
sbb
mov
mov
out
xchg
push
inc
xor
repz
cltd
in
pop
xor
xlat
ds
sub
je
or
testb
loop
enter
cmovae
pop
out
loop
out
lock
inc
loop
mov
jne
mov
jl
cmc
add
je
mov
aaa
aad
mov
rclb
jbe
or
inc
xor
adc
dec
out
jb
mov
call
arpl
inc
int
rcr
inc
popa
mov
call
popf
sub
mov
cmc
cmpsb
sub
lods
out
jmp
xor
insl
sub
cwtl
outsl
sbb
jns
pop
scas
sub
push
or
mov
sub
aam
loope
xor
insb
fwait
inc
inc
rcl
incl
sbb
xchg
mov
loop
cltd
fcompl
iret
js
and
jno
jbe
xchg
lock
jns
push
addr16
scas
mov
xor
sti
movsl
dec
push
movsl
inc
imul
add
imul
add
fstpt
ret
mov
sbb
dec
pop
adc
fs
jle
aad
mov
je
pop
sbb
cmp
faddl
or
cmp
mov
adc
orl
std
push
out
or
in
inc
aad
lret
lods
outsb
adc
in
mov
jne
cmp
aad
ret
xor
lcall
dec
xchg
inc
lret
push
in
mov
mov
pop
inc
scas
jmp
ret
in
cmc
cli
mov
xchg
loopne
fcmovu
mov
cs
jp
cmpsb
push
jmp
stos
lahf
mov
pop
rcll
out
and
sarb
cmp
les
push
arpl
push
pop
cmp
xchg
dec
ret
cmp
or
ljmp
inc
mov
mov
adc
fisubrs
mov
fisttpll
sbb
sbb
adc
or
adc
and
nop
lea
sbb
pop
insb
pop
push
sbb
adc
cmp
orb
out
ljmp
fimuls
shlb
das
into
jp
pushf
into
clc
shll
nop
ljmp
aad
mov
mov
inc
roll
sbb
pop
xchg
sbb
stc
and
nop
scas
mov
xor
dec
pop
mov
mov
add
lret
push
push
push
loopne
push
outsl
aad
insb
and
into
sahf
loopne
repnz
cmpsl
pop
and
hlt
rol
ja
sub
movsb
cmp
mov
adc
xchg
imul
xchg
cmp
sbb
test
andl
dec
push
mov
add
add
mov
data16
arpl
jle
sub
repz
push
insl
ds
insb
les
test
lcall
inc
add
pop
in
jg
pop
enter
jbe
movsb
and
adc
push
test
dec
push
xor
sbb
jmp
outsb
mov
jle
push
dec
test
xchg
notb
xchg
or
adc
orl
inc
ret
out
cs
push
or
call
jg
dec
push
ret
je
subb
fildl
stos
das
addb
mov
mov
sbbb
push
fwait
cli
mov
sar
xchg
daa
ljmp
cmpl
inc
add
jmp
push
jo
sbb
nop
ja
popl
push
out
imul
xor
mov
dec
inc
shrl
sbbb
movl
fsubrl
sbb
jne
jge
jle
adc
push
inc
cmpsb
mov
dec
int
and
jle
mov
inc
sbb
sarl
inc
mov
repnz
ss
or
cs
movsl
xchg
in
xor
lods
xor
mov
jle
inc
lahf
lods
jns
push
into
arpl
imul
dec
ret
hlt
cmp
loope
adc
cmp
push
mov
sub
and
push
push
mov
pop
or
sbb
xlat
sub
insl
push
mov
xor
xchg
dec
lea
pop
stos
sbb
inc
cmp
inc
mov
pop
sub
outsl
lret
repz
cmpsl
mov
push
xchg
fwait
insb
rorl
incl
sbb
jns
xchg
jno
add
bswap
dec
int3
or
aam
push
xor
daa
fistpl
data16
xor
js
test
xchg
mov
loope
jns
leave
jge
xchg
jl
inc
roll
xor
in
dec
add
clc
cltd
or
xor
adc
adc
mov
cwtl
mov
and
icebp
and
loopne
lcall
fsubrl
test
add
dec
int3
arpl
fsubrl
ret
pop
mov
lahf
add
jo
das
lret
jo
out
and
daa
mov
inc
cmpl
fidivrs
jnp
aam
popa
add
cmp
push
cmpsb
adc
jbe
pushf
rcl
fildl
test
add
adc
testl
mov
jle
insb
pop
mov
lahf
adc
das
sbb
stc
stc
aam
out
or
cld
inc
aam
loop
or
ret
mov
lds
outsb
cmp
stos
push
cmp
or
scas
out
data16
push
xchg
stos
mov
lahf
test
dec
adc
outsl
dec
loop
mov
fidivrl
orl
push
inc
xchg
enter
jmp
jge
aas
dec
mov
and
movsl
das
bound
movsl
aam
mov
dec
repnz
pusha
mov
xchg
test
push
ret
cmp
lds
sub
ret
push
xor
xchg
mov
enter
mov
out
and
adc
or
scas
or
jae
xchg
and
shr
sub
je
or
inc
add
das
jb
mov
add
je
jl
jne
adc
mov
data16
mov
inc
jg
add
mov
jge
sbb
push
pop
lret
push
sbb
cmp
add
mov
fldl
negl
dec
jb
pop
test
push
ljmp
fcomp
loope
sub
imul
aaa
movsl
inc
jae
inc
popf
mov
dec
movsl
pop
or
xchg
popa
nop
iret
dec
insb
jo
popf
out
jno
orl
push
and
lock
mov
mov
pop
mov
jne
sub
sub
daa
sarb
in
xchg
or
jne
jbe
shll
mov
xchg
sub
inc
mov
out
loopne
rcrb
cli
in
arpl
push
outsb
call
jmp
jle
movsl
stos
mov
test
sbb
es
inc
jb
mov
jle
mov
sti
inc
aad
lods
loop
lods
push
sub
lds
mov
mov
out
jge
pop
in
cwtl
and
test
or
push
sub
cmp
mov
jge
xchg
jle
nop
loop
sti
into
stc
pop
fcomp
dec
clc
dec
or
add
mov
mov
push
inc
push
cld
aas
mov
pushf
arpl
movsl
lcall
fdivl
lods
rcl
ja
sbb
in
add
out
jmp
out
push
jns
xchg
mov
mov
aad
imul
test
ljmp
sbb
add
outsl
daa
mov
add
cwtl
jmp
insb
stc
ss
movsb
add
mov
rcr
xchg
sbb
jmp
sub
cmc
adc
loopne
lret
xchg
movsb
lahf
push
push
lcall
lcall
or
loopne
test
inc
movsb
mov
pushf
pop
movsbl
sbb
mov
sarb
test
shll
inc
stos
jle
ja
mov
push
leave
jne
pushf
cmp
jne
ja
cmp
jecxz
jbe
dec
add
jbe
pop
das
inc
popa
xchg
mov
and
cmc
add
xchg
lods
jge
cltd
add
fisttps
popf
int3
mov
test
add
sbb
aad
sti
or
xor
call
in
cwtl
sbb
mov
pop
push
out
imul
aas
mov
mov
popf
adc
mov
in
test
fcompl
outsb
or
js
idiv
push
or
mov
mov
pop
scas
mov
xor
imull
mov
xor
daa
inc
xor
push
stos
mov
int3
xchg
dec
pop
xor
scas
jnp
sbb
xchg
lds
xor
xor
mov
cmp
dec
loopne
out
loopne
dec
aam
or
jbe
test
mov
loope
sub
mov
add
push
cmp
xchg
push
out
fs
pop
iret
jp
cmpsb
mov
out
pop
pop
or
mov
int
add
jp
mov
push
je
jnp
es
gs
fimull
adc
mov
sbb
dec
fsubp
inc
and
lret
xor
mov
out
pop
bnd
adcl
mov
push
nop
fdivrp
adc
in
dec
int3
sbb
or
pop
or
mov
push
push
mov
push
dec
inc
stos
rcll
pusha
addr16
shr
sahf
add
rcll
cmc
call
stos
ja
pop
decb
jno
test
pop
jl
dec
sub
sub
sub
adc
std
iret
push
fnstcw
mov
and
adc
cltd
xchg
add
nop
mov
ret
push
xor
ficoml
inc
fiaddl
mov
out
movsl
jne
nop
ja
xchg
lock
mov
and
ret
xchg
adc
test
push
lret
mov
fsubrl
arpl
xchg
das
or
adc
mov
dec
or
lods
mov
clc
call
les
aam
jg
sub
std
sarb
rclb
fisttpll
arpl
in
mov
aad
icebp
data16
jb
pushf
imul
imul
outsl
stos
cwtl
arpl
pop
ljmp
push
fs
dec
pop
bound
pusha
aad
inc
fstl
into
add
out
clc
lock
xorb
aam
dec
and
hlt
or
rcrb
cli
mov
or
addr16
and
shrb
push
test
out
addb
xchg
jnp
push
and
cmp
insb
out
aas
test
js
clc
pop
ret
lods
repnz
sub
mov
sub
cmpsl
fidivl
jno
jbe
mov
roll
fists
mov
cmp
cmp
pop
mov
jo
int3
ss
lods
mov
jns
popa
inc
sbb
jne
fstpt
and
or
imul
sub
cmpsb
dec
mov
pop
or
mov
mov
xchg
pop
fisttps
push
and
fistpll
test
adc
push
jns
dec
jns
or
mov
test
lds
fstpt
pop
pop
mov
fwait
mov
pop
mov
jge
mov
shlb
js
lock
dec
and
ljmp
ss
sbbb
shlb
push
or
push
pop
inc
or
fdivl
mov
insb
inc
adc
push
and
hlt
xchg
roll
cmp
popf
xor
xor
sub
pusha
inc
adc
cs
dec
inc
stos
cmpsb
cltd
jp
push
int3
dec
test
or
push
mov
sbbb
push
dec
push
scas
jl,pt
mov
scas
int3
or
adc
orb
dec
dec
lret
jmp
inc
jbe
jge
lea
inc
mov
pushf
repz
fistpl
stc
lea
ja
xor
fxch
xchg
and
mov
push
fwait
pop
mov
xchg
into
in
ret
cld
outsb
or
sarb
stc
aad
int
mov
pop
and
sbb
movsb
mov
xchg
stc
push
dec
push
mov
pusha
xlat
lret
and
shll
jo
mov
push
mov
push
in
pop
xchg
lcall
dec
in
testb
imul
and
mov
jns
sbb
imul
or
subb
inc
add
mov
lret
fldcw
adc
xor
shrb
mov
mov
orb
jg
push
push
jo
mov
adc
push
xor
pop
or
test
ss
xorl
pop
repz
mov
and
cmc
adc
and
mov
push
out
add
je
xchg
movsl
andb
xor
testb
jle
lea
pop
sbb
aas
push
popa
fs
data16
adc
out
shl
fimull
lock
fdivl
movlps
jae
sbb
popa
dec
sub
cli
loop
or
bound
cli
dec
push
shll
lret
ret
xchg
sub
xor
fistpll
fstpt
outsl
lods
cmp
xchg
sub
dec
loopne
xor
jbe
test
pop
lahf
movsl
gs
sub
in
nopl
push
mov
dec
jg
jl
test
xor
sbb
insb
lahf
adc
jl
pop
mov
jmp
dec
aaa
js
sbbb
jl
adc
and
pop
lods
in
xor
push
outsl
or
sbb
inc
cltd
mov
and
mov
add
negb
mov
fadds
cmp
cmp
es
inc
xchg
jmp
int3
inc
dec
stos
add
dec
cmp
rorb
or
mov
ret
lret
test
mov
jg
jg
mov
out
jns,pt
xchg
cld
sbb
cmpsl
cld
push
aas
push
test
xchg
xchg
cmp
leave
sahf
hlt
xchg
cs
shll
mov
std
insl
mov
ror
out
xor
jo
lcall
push
add
bound
icebp
rcr
sti
addr16
ret
or
std
dec
jge
dec
cs
test
sbb
adc
push
in
pop
mov
mov
fucomp
imul
test
test
dec
adc
pop
lock
and
scas
or
iret
es
test
mov
aad
into
sub
mov
cs
mov
test
insl
jnp
mov
test
mov
sbb
or
pop
ficoml
mov
sbb
mov
cli
mov
out
lock
fisubrs
outsl
lahf
pop
push
das
out
int
adc
in
call
leave
iret
jle
sub
mov
lcall
std
mov
xchg
push
mov
or
xor
and
loopne
add
inc
push
test
mov
jo
aad
cmpsl
push
xchg
std
mov
fmull
mov
inc
xor
cmp
stc
cs
ret
dec
cmp
idivl
rcl
or
adc
repnz
inc
cmp
adc
mov
lock
sbb
and
bound
insl
jle
sarl
push
sbb
mov
arpl
mov
or
cmp
jge
icebp
xchg
inc
jmp
lahf
sbb
adc
shrb
xchg
xchg
fs
cmc
push
filds
into
jmp
pop
or
xor
pop
incl
and
jae
notl
push
add
fdiv
es
dec
pop
repz
cmovnp
pop
mov
and
stos
and
sbb
sub
inc
rorl
and
jo
lock
add
cwtl
or
xchg
out
push
pop
pop
mov
mov
lds
adc
pop
loopne
leave
jo
xchg
mov
push
or
pusha
test
xor
jge
jnp
xchg
call
xchg
repz
aaa
jne
push
scas
nop
and
stc
into
pop
loope
push
popa
xor
mov
jns
pusha
aam
pop
scas
popf
cwtl
shrl
mov
inc
or
and
push
mov
push
popa
into
push
outsb
xchg
imulb
out
jp
mov
mov
mov
icebp
imul
stc
data16
ret
cmpsl
sbb
int3
xchg
shll
and
icebp
subl
lcall
adc
arpl
sbb
adc
fdivrs
or
push
movsb
cmp
sbb
sbb
push
xor
mov
lods
inc
sbb
add
push
ja
std
arpl
push
jmp
popf
dec
mov
push
sub
movsb
adc
pop
rolb
push
and
sbb
lcall
cmp
adc
in
dec
mov
pop
ja
and
in
xlat
popa
mov
pushf
push
mov
jl
addr16
aam
mov
adc
repz
lcall
mov
subl
shlb
popf
int3
jg
rclb
or
xchg
pop
dec
ficoms
cmpsl
mov
mov
and
imul
xchg
cli
jmp
pop
mov
lahf
mov
xor
int
push
sarl
dec
pop
mov
mov
pop
bound
inc
sti
mov
mov
mov
xchg
les
fsubs
addr16
xchg
adc
mov
push
fdivrs
push
add
sbb
test
and
pop
mov
jns
orb
mov
faddl
ret
cmp
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
movsl
push
jp
or
jp
shlb
sbb
xchg
adc
lods
fwait
addr16
dec
adc
test
inc
out
ds
outsl
les
cmp
insl
repz
jecxz
mov
adc
rolb
out
xor
enter
and
cli
sub
lds
shl
or
mov
cltd
ljmp
daa
push
sti
ret
popf
shrl
jb
cwtl
imull
imul
mov
mov
add
mov
iret
outsb
or
pop
push
inc
sub
push
ss
int
mov
jo
out
add
xchg
lret
arpl
inc
xor
ja
fldt
jg
imulb
and
mov
pop
sbb
int
sbb
imulb
cmpb
in
scas
sub
or
dec
xchg
shl
cld
movsb
out
sti
jbe
mov
cmpl
cmc
mov
xchg
test
aaa
xor
out
add
push
int3
push
xchg
mov
adc
addr16
push
pop
adc
shl
cmp
sahf
jg
gs
jo
scas
popf
lret
xor
push
or
sahf
add
scas
cmc
es
movaps
inc
test
jp
lods
xchg
jb
jns,pt
dec
sahf
jo
sbb
in
aaa
and
mov
mov
xchg
xchg
dec
and
sahf
repnz
aam
iret
dec
jne
mov
aas
cld
repnz
jp
jb
in
mov
loopne,pt
or
or
outsl
iret
adc
imul
das
shrb
or
pop
pop
cmc
jg
jle
daa
faddl
js
cld
sahf
int3
xchg
into
scas
mov
aam
jg
ret
dec
mov
out
and
rcl
mov
dec
xchg
loopne
xchg
mov
sbb
repnz
into
and
mov
loop
xor
inc
mov
push
sbb
lret
gs
insl
xchg
lock
jb
aas
ss
adc
xchg
jg
jecxz
jb
outsl
inc
popf
adc
insl
lcall
xor
pusha
xchg
jg
test
add
inc
dec
cltd
push
xchg
int3
sub
stos
js
push
iret
out
cmp
jle
inc
repnz
and
adc
sub
test
fcoms
js
mov
jae
and
mov
push
dec
inc
sldt
push
sub
imul
rclb
mov
call
pusha
rcrb
jg
in
jae
jae
stc
mov
push
lods
inc
mov
aad
lret
cwtl
cmp
incb
cmpb
test
call
cmp
or
out
out
test
add
mov
mov
fidivl
div
mov
push
dec
adc
mov
in
sub
cltd
in
sub
scas
sbb
inc
in
dec
les
daa
jnp
cltd
inc
fisubl
push
mov
leave
sub
fcoms
fwait
stos
lret
adc
jp
or
mov
cmpb
mov
lcall
or
scas
jbe
xor
mov
inc
inc
shlb
add
add
pop
sub
and
push
aas
daa
jle
jmp
mov
mov
loop
decb
sub
adc
jl
sar
add
out
aam
je
push
push
insl
or
shlb
loope
cltd
fadds
xor
xchg
mov
filds
stc
lods
add
xor
or
xchg
inc
loope
xchg
mov
inc
das
call
cs
cmp
cmp
sub
jg
enter
test
mov
jns
or
jecxz
in
push
repz
testb
mov
mov
inc
out
xchg
or
dec
pop
or
xor
mov
and
or
insb
clc
lds
cmp
jbe
add
enter
push
adc
lods
ret
jp
ret
mov
sbb
mov
aad
mov
in
lock
and
mov
xor
mov
sub
repnz
push
test
pop
mov
arpl
sti
sub
mov
adc
jbe
ret
stos
jmp
enter
sbb
aam
mov
mov
fs
lahf
inc
imul
lahf
dec
pop
leave
loop
adc
rcrl
push
imul
ret
push
mov
jbe
adc
negl
inc
scas
inc
or
or
inc
enter
inc
subps
inc
mov
das
gs
es
or
mov
adc
cmc
pop
out
stc
lret
jge
arpl
jmp
cmpsb
popa
dec
outsb
fisttpl
or
imul
test
cli
pop
out
frstor
inc
push
add
orl
add
sbb
bound
lcall
inc
aad
fbstp
jae
cwtl
and
mov
push
repnz
es
xchg
add
outsl
mov
mov
arpl
stos
adc
jne
adc
mov
sahf
testl
mov
push
shlb
mov
loope
mov
push
or
mov
aad
mov
lret
pop
pop
sbb
jo
daa
lahf
addl
cmp
and
cmp
out
or
sub
lods
inc
mov
ret
sbb
and
push
scas
sub
mov
jg
imul
cmp
sub
lods
sbb
in
shrl
out
cmp
aas
aam
cmc
adc
xor
jae
inc
xor
test
push
jecxz
xor
data16
sub
rcl
lcall
inc
js
or
cmp
lahf
cmp
out
cmp
ljmp
dec
cmc
repnz
xor
stc
stos
call
mov
push
out
mov
int
dec
dec
mov
push
xlat
imul
fistl
cmp
cmp
movl
andl
push
pop
repz
add
xchg
push
push
pop
out
dec
and
adc
out
adc
add
fidivrl
std
pop
xlat
icebp
das
pop
jmp
sbb
sbb
icebp
xchg
mov
jmp
xchg
sarb
clc
jns
inc
shlb
dec
dec
lock
push
repnz
sbb
or
xor
rcr
add
ud1
js
not
or
aas
add
xor
sbb
mov
add
pop
lea
mov
push
clc
je
addl
jmp
cmc
mov
enter
or
push
test
cmc
aaa
xchg
sbbl
jo
adc
xchg
push
xchg
testb
dec
push
stos
sub
fistpl
ret
lea
icebp
clc
push
iret
add
push
cmp
dec
cltd
aas
push
das
mov
sbb
lods
mov
sub
and
push
cmp
xchg
push
push
jns
add
cmp
push
or
push
mov
or
xchg
imul
shrb
xchg
xor
push
movd
iret
cmp
les
test
mov
mov
pop
call
cmp
and
xlat
jp
dec
jl
outsl
imul
push
push
pop
pop
dec
or
cltd
out
add
inc
and
out
mov
mov
cwtl
popa
mov
sbb
inc
pop
sbb
xchg
icebp
sbb
mov
add
outsb
xchg
fdivl
lret
aaa
jbe
rol
fisttpl
hlt
movsb
gs
int3
jmp
pop
and
inc
inc
mov
ja
cmc
push
dec
icebp
xor
or
mov
sbb
orb
popa
pop
idiv
div
add
lcallw
and
call
add
or
sbb
in
mov
lret
xchg
sub
pop
inc
push
or
or
mov
flds
mov
pop
add
push
cld
pushf
jp
cmp
bound
pusha
mov
out
xchg
sub
sbb
dec
leave
pushf
inc
mov
js
ret
insl
orl
cmpsl
ds
outsl
pop
mov
scas
bound
inc
jae
sbb
repz
mov
fnstenv
pushf
mov
enter
arpl
push
mov
icebp
enter
outsb
mov
inc
pop
mov
scas
out
xchg
mov
cmp
aam
lds
add
or
push
fiadds
sbb
ror
adc
xor
mov
lcall
mov
addr16
scas
aam
mov
sahf
jp
test
push
push
cmc
jmp
nop
mov
and
and
leave
sti
shll
pop
mov
sbb
sub
lods
clc
cmp
cmp
mov
add
jle
jle
scas
push
shl
xchg
dec
cmpsb
in
shll
lock
imul
jne
lahf
pusha
std
jmp
cmp
stos
push
lods
int3
and
into
stc
push
aad
xor
mov
jmp
andl
imul
adc
mov
lcall
jnp
rcl
das
icebp
pop
std
test
cltd
in
int3
push
push
imulb
stos
push
cmc
sbb
call
xchg
dec
call
dec
or
jmp
ret
mov
mov
clc
dec
inc
dec
outsl
lret
nop
out
pop
inc
cs
and
decb
imul
lods
lahf
movsl
clc
or
jb
int3
aaa
mov
push
ret
jle
hlt
dec
sahf
inc
jl
adc
and
push
cmp
cs
mull
mov
xor
popa
in
sub
shl
jecxz
push
fcmovbe
sbb
sbb
leave
mov
xchg
lcall
stos
xchg
push
mov
insl
dec
jb
push
mov
jge
incb
loopne
pop
imul
jnp
cwtl
mov
mov
int3
test
xor
sub
shll
mov
mov
push
mov
inc
jns
cwtl
mov
insl
add
push
mov
or
push
jno
dec
and
je
mov
js
dec
adc
sub
dec
xchg
int3
adc
xchg
sahf
or
push
push
add
outsl
in
mov
sub
imul
add
in
push
push
sbb
adc
push
xchg
fwait
stos
inc
xor
xchg
mov
add
mov
xchg
andl
shlb
imul
or
cli
leave
cmc
push
push
sti
or
stos
fnstenv
das
lods
jecxz
fistpll
jae
or
inc
add
xor
pop
mov
outsb
mov
es
jns
adc
add
push
std
inc
shl
pop
mov
lods
mov
stos
adc
pop
adc
cld
ljmp
test
pop
pop
pop
out
mov
mov
filds
add
and
sbb
xor
in
sbb
sbb
popa
mov
out
sbb
dec
sbb
repz
lds
les
xchg
jg
bound
lods
dec
xchg
xchg
mov
xchg
xlat
push
fmulp
cmp
mull
mov
jae
gs
pop
cmp
ja
test
stos
xchg
rolb
cmc
xor
sbb
movntq
aam
jl
in
jbe
fidivrl
out
roll
add
mov
mov
and
cli
inc
shl
or
stc
sub
cmp
imul
push
movsl
stos
pusha
jnp
jl
mov
mov
pop
xchg
pop
push
testl
out
daa
push
jp
into
rorb
cmc
rorb
test
jnp
stc
push
mov
push
dec
mov
out
or
movsb
das
test
add
xor
cmp
ljmp
jle
push
pop
mov
fsubrs
scas
mov
xor
out
stos
add
xchg
cmc
xchg
mov
and
negl
int
mov
cmp
fdivrl
nop
cmpsl
jae
mov
arpl
or
daa
push
cmpsb
mov
jae
rcll
jns
out
sub
mov
lcall
mov
jp
nop
adc
sahf
cmpsb
test
push
xchg
scas
cmc
sbb
sbb
inc
mov
sbbl
mov
scas
loopne
js
xchg
and
pop
adc
or
out
dec
in
inc
fbstp
repnz
outsl
and
shrb
and
push
xor
and
dec
aaa
fwait
mov
aam
aam
or
and
stc
addl
fbstp
inc
push
jle
xorb
ja
aam
and
jo
dec
popa
xlat
cmp
sub
adc
mov
adc
aad
push
inc
cmc
mov
scas
xlat
jle
insl
push
push
call
mov
inc
push
fisttps
scas
ror
clc
xor
sbb
pmuludq
push
or
jge
loopne
loop
add
xchg
test
jp
in
cld
and
fnsave
push
mov
adc
popa
push
or
bound
addl
roll
push
shrl
std
add
push
daa
cltd
push
push
pop
xchg
add
mov
cmpsb
out
add
in
fisttpll
push
add
std
sbbb
sarb
or
pushl
popf
daa
dec
cmp
inc
fucomip
test
mov
jmp
ja
jle
ja
push
jo
xor
jnp
mov
pop
and
sbb
jne
shl
movb
ret
inc
scas
shlb
rol
push
push
xchg
filds
sbb
test
sbb
imul
cld
loope
std
sub
ffree
jmp
sub
movsb
arpl
fcoml
xchg
push
mov
jae
les
insl
lds
push
leave
cmp
int3
fmull
cmp
jp
adc
fsub
mov
jns
push
jo
push
les
and
mov
pop
aas
push
imul
cs
popa
xchg
mov
pop
jo
mov
ret
cld
out
xchg
cmp
fimuls
out
push
aas
push
jge
mov
adc
hlt
xchg
jb
js
and
scas
out
push
jge
cmp
xchg
mov
pop
fsub
pushf
cmp
addr16
pop
inc
add
ss
jno
jbe
aaa
mov
jns
test
add
sbb
outsl
dec
cmpsb
fucomi
sbb
or
loopne
in
sbb
adc
jne
scas
push
scas
jge
in
xchg
push
pop
das
mov
pop
test
cmp
in
lahf
sub
adcl
call
in
push
sbb
inc
and
fnstsw
jge
cmp
push
jbe
mov
movl
push
xchg
add
inc
mov
xor
cwtl
xchg
jmp
mov
fidivl
rorl
data16
xchg
lcall
or
clc
sub
sub
push
inc
ds
mov
fwait
add
cmp
mov
pop
adc
pushf
in
nop
xchg
cmpsb
ret
std
cmc
xchg
jae
pop
jle
mov
and
adc
out
sub
jns
or
scas
ret
adc
fnstsw
andps
call
sub
jno
xchg
mov
mov
jns
cmpsb
fldl
xchg
cltd
inc
pop
inc
pop
jnp
aas
ss
mov
or
push
and
mov
sti
push
jle
stos
mov
iret
mov
mov
int
mov
pop
add
cmp
lock
sub
xchg
inc
mov
imull
negb
push
inc
cmp
adc
push
push
sbb
inc
jbe
sbb
outsb
out
loopne
adc
jmp
lods
jg
and
addr16
mov
xlat
aam
sub
xchg
test
in
pop
jp
mov
enter
sub
sahf
rorb
push
jno
fsubs
shrb
jp
push
sbbl
mov
scas
fcompl
fwait
sbb
sub
aaa
jae
or
mov
ss
shl
cli
lods
std
jnp
mov
out
arpl
xor
dec
aaa
out
add
aam
xor
sti
push
sub
mov
sbb
mov
push
out
adc
and
add
dec
adc
sub
fldt
data16
jno
sbb
inc
daa
fistps
adc
cmpsb
in
insl
iret
leave
adc
shlb
lock
into
pop
jo
push
mov
pop
mov
rclb
xor
fwait
cmpsl
dec
adc
jbe
sbb
jp
sarl
test
and
xor
test
es
mov
lea
mov
mov
lret
rcrb
push
pop
xchg
lea
inc
das
adc
xchg
and
icebp
pop
push
aad
lods
addb
in
mov
adc
loope
ror
or
mov
pop
out
ljmp
enter
add
clc
cmpsb
xor
js
leave
sbb
pop
or
bound
jae
add
and
xor
fisttpl
jae
xor
in
sub
mov
push
sub
insl
into
jne
lret
xchg
xor
movsl
cmp
stos
iret
mov
insl
ja
les
jl
push
add
inc
fwait
mov
cwtl
imul
pop
xor
jmp
dec
fs
jp
xchg
enter
out
fiadds
and
int3
test
sbb
rcl
cmp
add
orb
sbb
or
mov
rolb
dec
xchg
mov
cwtl
repz
or
movsb
test
ja
jg
cmpsb
stos
rclb
adc
cmp
hlt
arpl
aas
in
imul
add
repnz
inc
push
sub
loop
and
sub
cwtl
cld
sbb
loop
and
fucomp
jnp
cmc
mov
lock
sub
and
mov
sahf
adc
imull
das
fcmovb
xchg
jmp
roll
ret
sbb
mov
xchg
test
xchg
cmp
repz
icebp
push
adc
lea
mov
lret
pop
dec
lret
and
int3
jmp
push
insl
pop
sub
push
loop
jbe
outsb
orb
jge
jg
dec
fs
sarb
scas
test
jecxz
xor
and
mov
mov
repnz
dec
cmp
mov
stos
mov
andnps
inc
cwtl
add
xchg
lods
data16
mov
hlt
mov
fistps
push
xchg
push
clc
push
out
cmp
je
out
popf
mov
jg
inc
cmp
sbbb
push
ficoms
cwtl
repnz
xchg
mov
mov
push
xor
sahf
cmpsb
lea
dec
pop
mov
xor
movntq
or
in
testl
and
inc
test
shrb
das
fwait
sub
xor
loopne
xchg
add
ret
dec
mov
sarl
xor
out
movsb
mov
in
push
stos
pop
sbb
and
notb
icebp
mov
jmp
cs
mov
fidivrl
mov
xor
push
inc
pushf
mov
add
lret
xchg
xchg
dec
repz
mov
scas
pop
xchg
xchg
or
or
inc
xlat
or
arpl
push
jle
pop
xlat
mov
push
iret
add
jg
stos
movsl
imul
mov
jns
inc
sbb
add
in
jl
pop
mov
icebp
into
aam
dec
sbb
mov
cmp
xlat
sbb
jg
inc
add
mov
lea
gs
mov
inc
pushf
in
cld
fnsave
aaa
and
movsb
add
cltd
inc
add
pop
cmp
ds
lcall
in
int
std
lret
dec
into
mov
jge
pop
cmp
loope
lret
pusha
cmp
inc
lcall
lods
sub
mov
sbb
or
es
repnz
adc
pop
add
ljmp
in
ds
aam
hlt
mov
inc
loop
adc
rcll
xchg
inc
fdivl
stc
test
dec
fsts
push
test
rcrb
inc
adc
push
lret
xor
sbb
test
cmpsb
je
in
push
loop
mov
ljmp
dec
repnz
ja
pop
int3
scas
mov
ftst
out
push
dec
test
clc
andb
inc
scas
xlat
add
xor
jno
sub
sbb
inc
lret
outsl
ja
pop
int3
jnp
mov
mov
cmpsl
xor
pop
stos
mov
xchg
push
insb
adc
inc
or
jge
pop
adc
loopne
inc
jle
sahf
ja
sbb
pop
cmc
xchg
jbe
pop
in
das
scas
loopne
arpl
rolb
push
ret
push
stos
add
inc
loop
leave
inc
inc
imul
js
sub
push
insb
out
and
movsl
lds
nop
adc
and
rcrb
fiadds
ss
jecxz
and
jae
fisubs
lahf
je
mov
cmp
enter
div
add
ret
mov
mov
cmp
mov
dec
shll
fisubrl
std
adc
inc
mov
shrl
bound
daa
sub
cli
inc
loope
sbb
jo
inc
in
popf
sti
mov
inc
sub
ss
adc
icebp
mov
dec
mov
adc
cmpsl
mov
outsb
xor
in
in
mov
inc
loope
fisttps
loopne
inc
popa
in
and
cld
shll
dec
mov
push
out
mov
test
add
lahf
gs
aam
iret
pop
rcll
fcompl
add
inc
ss
mov
ret
outsl
fs
inc
mov
jnp
or
jne
movsb
sbb
adc
test
mov
inc
ss
test
in
dec
daa
mov
adcb
cvtdq2ps
xor
cs
in
dec
iret
hlt
mov
pop
les
imul
inc
jb
or
lds
loope
orl
push
mov
mov
or
fldt
add
or
jl
rclb
lret
subl
mov
js
icebp
dec
mov
push
adc
mov
dec
xor
dec
jge
inc
adc
or
mov
and
and
mov
push
adc
sbb
push
and
fs
stos
mov
cmpsb
jecxz
add
lret
cmp
pop
arpl
mov
enter
fists
hlt
cmp
dec
mov
pop
imul
test
stos
pop
add
cmp
imul
loope
hlt
mov
ds
cmp
std
adc
cltd
je
imul
je
pop
jo
aaa
xchg
adc
push
dec
pop
leave
push
mov
cmp
hlt
cli
push
push
movsb
and
int
push
fs
vmovaps
in
inc
xor
push
int3
ror
pop
inc
pop
mov
and
movsb
mov
adc
jecxz
inc
test
fadds
mov
fisubrl
notb
and
arpl
mov
pushf
sub
in
mov
inc
pop
pop
loope
mov
add
xor
bound
fdivrl
aam
outsl
loope
mov
sub
dec
aaa
nop
pop
push
mov
mov
je
jo
add
cmc
add
rcll
shl
inc
jae
pop
stos
outsl
test
push
dec
int
scas
sub
inc
push
jg
scas
xchg
lds
cltd
mov
jle
fldl
sub
hlt
push
cmp
jmp
fimuls
pop
pop
mov
aaa
ljmp
xchg
lret
xor
lea
push
xor
xchg
imul
and
push
xchg
scas
adc
adc
das
jle
cmc
xorl
pop
jp
add
inc
clc
jbe
push
push
shl
jp
lods
adc
or
xchg
popa
push
outsb
dec
mov
ja
mov
pop
mov
roll
mov
mov
add
xor
add
sub
arpl
adc
bound
rorb
pop
xor
mov
iret
jo
push
scas
inc
pop
and
pop
mov
jo
cmpsb
insb
xor
mov
inc
jno
fbld
xor
add
test
lods
addr16
mov
div
xor
addr16
cld
mov
movsl
lds
cmp
adc
in
movsl
cmp
dec
jnp
push
mov
jp
insl
int3
jecxz
inc
push
je
push
stos
int3
pop
xor
xor
cmpsl
addr16
movsb
inc
repz
or
dec
xchg
mov
jg
adc
addr16
jl
add
das
lcall
inc
lock
and
xchg
fsts
in
in
pop
mov
imul
mov
push
push
cmpsb
loop
lods
imul
into
or
repz
bound
add
aas
push
imull
add
scas
push
ret
cmp
gs
pusha
push
xchg
ja
xor
hlt
insl
arpl
sahf
adcb
loop
in
lea
iret
int
out
xchg
dec
jno
jecxz
cltd
gs
mov
sbb
sbb
fbstp
repnz
les
and
cmp
mov
push
fs
int3
sub
adc
sub
testl
in
pusha
cli
mov
shll
popa
sbb
mov
cmp
sbb
xchg
pop
mov
imul
andl
int3
outsb
mov
add
clc
icebp
pop
je
dec
xchg
divb
pop
stc
pop
pop
cmp
outsb
and
sbb
ljmp
addb
or
test
out
lret
repnz
xchg
aad
lods
add
sbb
mov
mov
int
xor
cld
inc
dec
jp
mov
lea
sub
push
sti
pop
inc
nop
cs
lds
lds
add
lea
lods
dec
aam
mov
pop
cwtl
ficompl
add
movsb
pmaxub
stc
in
call
ja
cmp
xchg
movsb
fcom
add
lea
cwtl
fdivl
out
inc
or
std
sbb
mov
xchg
lret
gs
add
xor
movsl
mov
xchg
cmp
jb
lds
cs
sti
sbb
mov
cmpb
aaa
xor
imul
lret
pushf
ret
lahf
and
dec
mov
or
xchg
or
adcb
xlat
pop
ljmp
pop
mov
pop
daa
lock
cmp
sbb
movsb
icebp
je
xchg
jmp
inc
push
ficoms
jge
popa
xor
sub
dec
xchg
add
push
push
test
xchg
add
call
dec
mov
fistl
push
xchg
pop
adc
lret
arpl
pusha
ss
mov
imul
cltd
jae
sub
aam
lea
fs
inc
lret
sar
jnp
test
ljmp
add
xor
leave
outsb
arpl
arpl
jno
cli
addl
loop
adc
xor
add
mov
sbb
fmul
js
int3
int3
inc
enter
mov
adcb
and
push
push
dec
je
dec
pusha
jnp
mov
pop
fcmovbe
popa
js
xchg
stos
pop
fbld
hlt
ret
sbb
xchg
decl
adcl
mov
push
push
outsl
xor
inc
cmp
pop
rep
jge
pop
and
sub
hlt
and
int
mov
push
incl
mov
fdivl
into
das
mov
mov
mov
out
xchg
fcomi
daa
pop
cmp
test
mov
mulb
ror
out
icebp
add
mov
rclb
into
cs
mov
add
hlt
sub
cmpsl
cmp
call
jge
aas
in
fs
out
mov
push
sbb
and
push
dec
scas
test
int3
pop
cmp
adc
add
pop
pop
ss
or
mov
sbb
push
adc
jb
jecxz
or
and
xchg
adc
or
or
out
cwtl
out
add
jbe
sub
jg
jb
fstpt
pushf
lock
insl
mov
outsl
xor
hlt
lcall
xor
fnsave
inc
add
add
test
sbb
pusha
jecxz
out
icebp
cmp
gs
push
xchg
rcll
stos
inc
ds
push
aad
subl
lret
cmp
mov
dec
or
lock
xchg
add
cmpsb
add
dec
enter
out
shrb
push
cmp
loop
push
insb
mov
fisubl
mov
jle
xlat
popa
sbb
cmp
imulb
aas
jne
nop
inc
and
or
mov
inc
xchg
lret
je
mov
push
sbb
dec
and
fistl
hlt
adc
sub
cmp
push
loope
mov
fnsave
fsubrp
out
or
lret
sbb
jl
notb
mov
test
mov
mov
rcrl
dec
pop
mov
pop
sbb
insl
rolb
jp
mov
xchg
push
mov
ss
shr
out
sbb
mov
adc
jnp
inc
dec
cld
or
loope
rorl
push
xchg
sbb
pop
or
loope
jb
nop
dec
test
in
pushf
jb
out
mov
jecxz
loope
lahf
pop
pushf
loop
nop
mov
mov
pop
xor
jl
dec
pusha
pop
fildll
lea
inc
pop
lahf
mov
mov
pop
push
mov
xor
lods
inc
popa
shlb
jecxz
fdivl
push
enter
stc
cmp
aad
lods
add
insb
fisttpl
mov
sub
sbb
mov
pop
stc
in
xor
or
dec
push
fisubl
aaa
lock
mov
clc
add
sbb
inc
leave
add
adc
jb
mov
xchg
xor
mov
or
and
sub
push
cs
out
mov
out
add
rol
jbe
mov
sarl
jmp
adc
xlat
popl
cwtl
iret
xor
add
xor
sub
adc
fiaddl
sahf
popa
cmp
inc
xor
push
adc
and
xchg
outsb
stos
mov
popa
jnp
ss
cmp
cli
add
xchg
mov
cmc
or
add
sbb
jns
mov
push
cmp
popf
addl
js
mov
jmp
cmp
adc
push
sar
fsubrs
jns
pop
stc
add
and
adc
jnp
mov
ret
fucom
ret
xor
pop
jle
xor
jecxz
inc
outsb
pushf
push
add
clc
cwtl
mov
dec
cmpl
aam
sbb
xorl
push
sbb
inc
mov
fcomps
inc
mov
or
repz
dec
jbe
cmp
in
sti
mov
lock
in
sbb
or
cmp
pushf
xchg
jg
sahf
jo
ja
push
sbb
pushf
add
xchg
popa
stc
push
in
jns
sub
sub
sbb
bound
addr16
dec
sbb
lcall
ret
pop
fadd
pop
divb
xor
into
in
dec
sbb
xchg
daa
and
fnstcw
repnz
loope
xchg
mov
stos
sbb
shlb
daa
mov
mov
mulb
ds
cmpl
and
cli
adc
std
push
mov
push
addb
mov
scas
adc
jo
dec
push
mov
jl
cmp
and
fmuls
dec
jge
push
xchg
popa
inc
sub
add
lret
and
dec
and
out
sub
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
pop
push
arpl
pop
jp
pop
mov
mov
push
les
dec
shl
add
imul
imul
repz
ss
xlat
adc
sub
mov
fmuls
xchg
shrl
jne
pop
jns
jg
xchg
or
and
ds
mov
out
iret
sbb
fisubrl
xor
or
mov
mov
lods
xchg
add
dec
cmp
cmpsl
mov
daa
adc
ret
mov
mov
jmp
inc
sbb
xchg
repz
jno
inc
in
cwtl
jbe
popf
fisttps
inc
js
adc
pop
lcall
sbb
test
inc
jbe
lahf
cld
jno
lcall
push
fcompl
xor
cmp
jnp
cmp
add
fiaddl
test
sub
mov
sub
ffreep
adc
into
dec
inc
repnz
aas
leave
stos
mov
jo
xor
mov
jns
xor
cmp
sbb
movsl
outsb
shr
stc
ret
mov
and
pop
ljmp
pusha
jne
in
pop
aaa
mov
push
bound
in
add
pop
stos
into
sub
lret
and
in
roll
mov
inc
leave
shlb
stos
les
scas
mov
add
cli
fildl
lahf
push
arpl
shl
les
mov
push
pop
arpl
fmuls
adc
inc
scas
insb
fcompl
add
xor
sub
pop
les
xor
das
push
xor
pushf
mov
jmp
adc
stc
test
mov
movsb
push
mov
xchg
mov
test
mov
loop
mov
inc
cmpl
idivl
xchg
aam
mov
test
shr
mov
movsb
xchg
icebp
lods
dec
pop
into
sbb
outsb
into
pop
in
adc
jge
and
fildl
inc
popaw
mov
jne
rorb
shlb
mov
push
jecxz
outsb
pop
cmp
jl
xor
xchg
bound
aad
push
xor
dec
mov
fadd
mov
mov
ja
or
cmp
xchg
sub
xor
cmp
inc
mov
adc
std
pop
int3
xchg
dec
mov
or
inc
lods
hlt
test
movsb
imul
xor
sub
dec
das
jo
jno
sub
and
lock
mov
and
push
mov
inc
inc
xchg
sub
cli
sub
std
jnp
lcall
sbbb
add
scas
xor
jb
sbb
andl
jg
cltd
mov
idiv
sub
lds
dec
pop
jne
jmp
scas
enter
sub
stos
ficompl
mov
and
out
int3
jp
xadd
jmp
xor
loop
rolb
lahf
lret
cli
clc
mov
push
mov
mov
adc
sbb
xchg
popa
jp
mul
lret
int
mov
mov
cs
inc
orb
leave
add
fidivs
in
in
jns
mov
test
ret
pop
mov
dec
and
loope
dec
fs
jb
je
jg
or
xor
les
cmpb
jno
mov
das
sub
mov
mov
and
mov
or
mov
xchg
insl
push
or
popf
cmp
sub
arpl
das
mov
mov
jne
sti
stos
test
pop
inc
int
int
sbb
jno
fwait
push
cmp
popa
scas
call
inc
mov
or
push
mov
xchg
xor
clc
sbb
pop
enter
sub
sub
insl
aam
mov
bound
pop
loope
scas
lods
outsl
sub
mov
mov
add
xchg
lcall
stc
cwtl
mov
mov
enter
cmc
cli
adc
cwtl
fldcw
jno
xchg
movsb
aad
shr
push
movsl
adc
dec
cmp
imul
sub
push
dec
adc
xor
adc
ljmp
arpl
cmp
imul
in
mov
fwait
push
cmp
fwait
or
hlt
mov
cmpb
jecxz
pop
pusha
sbbl
xorl
or
fwait
clc
fs
lret
jge
dec
dec
in
jbe
pop
sti
inc
and
add
jnp
movsl
mov
sarl
lds
dec
pop
dec
mov
lods
jl
dec
js
push
popf
and
js
mov
adc
push
xor
in
push
test
insl
mov
xchg
lods
dec
push
xchg
push
lret
stos
push
popa
pop
or
xor
add
xor
negb
and
mov
xor
xor
sbb
xor
dec
mov
decb
fdivl
or
or
cltd
push
jae
fwait
or
push
aaa
or
fstl
daa
dec
test
mov
jmp
jge
xchg
jge
push
pop
adc
stos
subl
out
into
pop
sbb
jle
psrlw
or
mov
sub
mov
bnd
fcoms
addb
mov
mov
push
das
unpcklps
insb
push
push
sbb
int3
lea
and
and
lcall
xchg
push
cwtl
inc
jae
sub
sarb
ficompl
inc
iret
and
ljmp
repz
inc
lret
dec
fadd
fincstp
mov
ss
fstpl
add
mov
mov
add
xorb
sar
add
pop
adc
mov
scas
pop
or
dec
pop
mov
jae
decb
into
xchg
or
pop
push
or
lods
add
push
cmp
xlat
xor
sahf
cli
dec
xchg
xor
subb
dec
rcrl
mov
in
les
inc
xchg
or
xlat
xchg
incb
push
add
bswap
push
adc
insl
dec
xor
add
loop
retw
mov
data16
push
pushf
sbb
in
fsubrs
cmp
mov
lods
mull
adcl
jne
or
push
nop
cmpsl
repnz
cmp
je
stc
aas
inc
and
inc
dec
mov
pop
xor
xchg
adc
sbb
rorl
xor
or
sti
xchg
pusha
push
lds
icebp
or
mov
cmovb
sbb
or
pop
es
dec
out
xor
adc
inc
ror
add
fcoms
sbb
mov
negb
incl
push
in
loope
jb
xor
xor
push
adc
mov
xor
test
lcall
sarl
js
int
xor
lock
mov
xor
cmp
lock
cmp
push
into
out
xchg
add
mov
mov
inc
loop
and
sbb
xchg
test
es
add
xchg
adc
cmc
dec
dec
dec
mov
sbb
add
inc
je
push
pop
popa
mov
push
mov
push
cltd
stos
popf
ret
adc
xlat
xchg
xchg
pop
cs
add
dec
sbb
sbb
and
push
in
cs
cmp
mov
mov
mov
out
cmp
movsb
mov
jge
ret
pop
dec
dec
pop
fildll
scas
jmp
ja
enter
aas
ss
sbb
movsl
dec
cmovs
xor
aas
mov
imul
les
cmp
and
aaa
cli
loop
and
fs
dec
or
loop
or
imulb
push
aam
mov
add
pushl
js
jb
adc
flds
mov
xchg
pop
inc
lret
mov
mov
aam
fld
xor
cli
dec
sub
mov
repz
je
jg
fisubrs
incb
mov
xor
fwait
out
in
dec
inc
hlt
sub
test
mov
sub
pop
lods
pop
out
lret
outsb
lock
in
mov
jnp
fsubp
xchg
jns
cs
lcall
jecxz
shld
xor
lds
cmp
aam
sbb
es
lahf
repz
aam
dec
push
popf
or
inc
push
inc
leave
test
xor
jmp
mov
push
jmp
xor
push
or
pushf
mov
mov
enter
aaa
cld
push
pop
xor
test
cli
je
fwait
out
add
cmp
xchg
pop
push
cltd
stos
mov
dec
clc
test
sbb
lea
dec
pusha
xor
sbb
sbb
int3
fidivrl
in
into
lret
push
sahf
daa
jg
sbb
pop
pop
pop
cmp
xchg
rorl
fdivrl
pop
mov
fisubs
jmp
cmp
push
popa
mov
jno
scas
xor
cmp
lret
xchg
lahf
dec
cwtl
xor
mov
std
adc
das
mov
sbb
std
mov
int3
shll
or
inc
cltd
mov
push
mov
js
inc
jb
ret
pushf
aad
adc
cwtl
and
shlb
mov
cmp
hlt
sub
sub
xchg
test
add
jbe
push
push
sbb
pop
popa
cmpsb
into
cmc
and
jge
enter
add
xor
fiadds
pop
jp
lahf
lret
mov
pop
dec
cld
push
lret
and
mov
sub
adc
and
rclb
mov
dec
push
sub
loop
repnz
mov
es
pop
lcall
iret
daa
jo
push
cmpsl
add
stos
flds
testl
pop
ret
repz
roll
mov
mov
pop
stos
jmp
push
and
aad
stos
adc
adc
xchg
dec
mov
lock
pushf
loop
gs
cmc
jns
lahf
scas
sbb
movsb
stos
cmp
cmp
loopne
or
bound
out
pop
mov
sub
inc
or
mov
dec
sbbl
lcall
or
mov
push
dec
push
mov
lods
test
adc
lahf
addb
sbbl
push
fcoml
inc
lods
push
hlt
roll
xbegin
rcr
cmp
iret
mov
rcll
jae
mov
rorb
sub
pop
rorb
rcrl
mov
sbb
dec
sbb
lahf
insb
xchg
repnz
jno
shlb
ficoms
xchg
fbld
adc
call
push
sbb
addr16
mov
cmp
lcall
stos
sar
adc
iret
rcl
mov
loope
ljmp
les
enter
jle
cmpsl
sahf
jl
inc
nop
xor
pop
cmp
push
out
and
nop
into
and
js
xor
jb
jns
xchg
popa
pop
inc
inc
add
cwtl
scas
sub
lahf
test
mov
ss
jmp
addl
mov
add
je
dec
dec
dec
pushw
lea
xor
add
or
cli
mov
lret
add
mov
xchg
jp
pop
fs
or
dec
jmp
in
mov
jbe
ret
stos
nop
push
jns
jo
stc
in
lcall
inc
iret
pop
and
mov
dec
ficoml
dec
fdivs
pop
sub
mov
scas
push
andl
cmc
or
movsl
mov
xor
sbb
dec
pop
lret
ss
and
inc
addb
rcrl
rorl
mov
aam
pop
sbb
mov
fwait
inc
pop
aaa
or
lcall
int
and
scas
fucom
pop
incl
repnz
out
lret
cmpsl
std
je
mov
push
pop
mov
inc
push
adc
imul
dec
jnp,pn
lock
or
ret
das
lea
loope
mov
aaa
test
cmp
iret
jp
xchg
cmp
out
cmp
out
nop
call
dec
aas
lea
testb
outsl
jns
push
scas
jnp
mov
fcmovb
jae
push
repnz
mov
adc
stc
icebp
insl
add
movsl
push
push
or
fiaddl
pop
mov
ret
shll
xor
or
lahf
aas
loope
and
mov
rcrl
and
sub
cli
sbb
jecxz
repz
xchg
sub
cmp
lods
and
pop
push
and
int
addr16
in
xchg
outsb
cmc
cmp
sub
push
psrlq
xchg
aad
jl
mov
sub
decl
out
push
mov
mov
divb
mov
inc
or
arpl
outsl
mov
ljmp
imul
sub
xchg
mov
cmp
dec
xchg
adc
ret
insl
sbb
out
repnz
cli
popf
jno
aas
sub
push
cmp
fdivrs
mov
lods
adc
aad
xor
scas
dec
pop
fucomip
mov
jmp
add
in
lods
frstor
inc
call
and
sub
repz
push
std
lds
stos
add
add
add
lea
mov
divb
jae
ficompl
dec
clc
push
adc
inc
jne
js
xchg
std
push
pop
jecxz
outsb
andb
pop
inc
dec
scas
push
das
pop
add
ljmp
mov
fwait
mov
out
cmp
js
lret
popa
jp
out
adc
out
sbb
fcomp
incl
mov
or
mov
mov
rcrl
and
shl
aas
fidivrs
adc
lret
in
or
xchg
mov
mov
stos
cltd
in
xchg
push
push
inc
add
ja
faddp
scas
sub
fisttps
arpl
imul
test
insl
daa
inc
jmp
cmovp
call
mov
fistpl
test
pop
test
icebp
inc
add
jns
mov
push
jg
insl
imul
mov
mov
and
pop
loop
push
pushf
xor
rol
inc
push
cmp
scas
fsubrs
subb
dec
call
daa
nop
pop
mov
imul
rorl
fcmovnb
ja
ja
xchg
aas
jecxz
lock
sbb
loopne
lret
ds
cli
shl
mov
lcall
scas
scas
scas
mov
imul
loopne
pop
pop
or
add
push
xchg
movsl
mov
mov
xor
inc
sbb
imul
push
jl
mov
lds
adc
mov
dec
into
cmp
xchg
enter
ja
sbb
jecxz
mov
xor
iret
mov
sub
test
scas
fstpt
jl
mov
add
lods
std
push
loopne
scas
mov
jne
fwait
rcrb
mov
xchg
aad
xchg
in
xchg
std
imul
or
lret
mov
mov
notl
int3
test
cltd
fwait
sbb
jbe
mov
mov
inc
cmp
add
in
ret
lds
das
mov
insb
shlb
dec
inc
mov
int3
orl
popa
sbb
int
loop
inc
insl
mov
inc
xchg
dec
insb
dec
outsb
mov
xor
in
lods
test
jp
xorb
xchg
je
jecxz
fbstp
andb
aad
xorl
insb
rcrl
repnz
in
adc
or
mov
fidivrs
shlb
pop
mov
test
or
roll
fwait
push
add
lcall
inc
sub
push
sarb
mov
and
mov
push
jmp
adc
in
and
mov
dec
cs
fistpll
fwait
repz
jae
jp
testl
in
jbe
mov
mov
add
arpl
ret
outsl
pop
mov
dec
xor
jecxz
es
in
test
mov
cs
xchg
out
sub
mov
fdivrs
scas
mov
std
jle
or
icebp
scas
mov
xchg
add
das
fs
or
xor
add
mov
cs
add
jge
mov
add
xor
mov
clc
test
push
mov
dec
xor
mull
test
xchg
and
cli
inc
mov
out
mov
imul
ljmp
mov
popf
fildl
mov
xchg
popa
fldenv
mov
xor
pop
cmp
xlat
int
adc
sbb
add
imul
into
jnp
lcall
adc
mov
adc
mov
pop
mov
movsl
jg
pop
jl
fldl
mov
xorl
and
and
sarb
ljmp
push
mov
mov
hlt
cmp
xor
sbbl
sub
dec
push
xor
es
cmp
sub
sub
dec
xchg
adc
sbb
pop
sti
sub
and
inc
cmp
stos
and
fcoml
into
jmp
lods
in
lahf
iret
mov
aas
xlat
out
pusha
mov
mov
scas
stos
xor
pop
clc
pop
dec
inc
sbb
inc
shlb
mov
in
add
int
and
addr16
cmpsb
clc
push
mov
dec
xlat
fcompl
sbb
pushf
mov
push
inc
pop
lods
test
and
pushf
popa
push
nop
dec
in
xor
add
andb
push
jg
sbb
jns
xlat
shrb
adc
je
cmp
fiadds
sub
jp
jmp
pop
cld
lcall
repnz
mov
in
and
cmc
mov
lcall
sbb
scas
jl
ja
jae
cld
mov
push
lahf
cmp
mov
xchg
mov
andl
push
ret
and
adc
mov
push
add
adc
inc
das
pop
mov
mov
mov
push
fst
jo
movsl
lret
stc
pop
cmpsb
add
mov
aad
mov
sti
popf
and
pop
dec
popa
subl
sub
and
add
mov
insb
add
stos
xor
das
adc
mov
sbb
gs
loope
inc
pop
outsb
lock
arpl
push
int3
fucomi
mov
je
shll
aam
push
xchg
mov
and
or
sarb
and
mov
fnstsw
add
and
inc
jl
xor
xor
pop
daa
adc
xor
adc
jns
adc
scas
pop
xor
sub
dec
xchg
mov
sti
sti
mov
jle
mov
test
sbb
in
decb
fnsave
ds
sti
div
ds
fildll
filds
in
xchg
pop
ljmp
push
icebp
or
lock
push
in
pop
xor
loope
jns
ret
adc
dec
lods
fnstsw
mov
sbb
push
cmp
je
ret
stc
mov
es
push
leave
pop
lods
inc
pop
into
ja
lea
ljmp
pop
cmp
and
jns
mov
push
cwtl
fcmovnu
and
nop
push
push
pop
mov
mov
pusha
or
sub
mov
mov
add
xor
cli
mov
out
stc
jo
aas
fsubrs
sbb
sahf
push
movsb
jno
mov
and
jge
int3
push
dec
xor
pop
xorb
and
jae
negb
sarl
sub
mov
and
pop
mov
push
nop
push
lahf
ret
mov
out
cmp
cmp
inc
cltd
rorl
arpl
sarb
and
jp
ljmp
push
js
pusha
outsl
mov
stos
popf
xchg
mov
dec
in
test
mov
dec
sbb
push
xor
gs
inc
and
adc
jb
sbb
scas
sbb
dec
pop
sbb
sub
or
xchg
repz
sub
push
mov
cmp
dec
ds
test
sbb
jns
cld
ljmp
jg
adc
dec
ror
or
xlat
xor
push
pop
xchg
dec
push
xchg
push
mov
dec
fwait
scas
scas
out
ret
les
and
jg
inc
lahf
mov
dec
int
imul
add
rcr
xor
mov
fnclex
lea
jae
lahf
out
in
loope
or
cmp
mov
pushf
sub
xchg
jg
sbb
jnp
and
insb
int
imulb
ds
ret
fsubl
outsb
subl
pop
push
rcll
pop
mov
lods
test
mov
ljmp
cmp
cmpsb
in
mov
popa
adc
cmpsb
fidivs
cmp
push
lret
pop
orl
out
stos
sbb
and
and
pushf
subl
cs
test
jl
int3
insl
cmp
pop
pop
cmpsl
imul
lods
popf
jnp
jb
pop
into
daa
in
je
movsb
xchg
stc
pushf
mov
mov
aaa
sub
loope
ljmp
inc
mov
fdivs
and
adc
mov
and
mov
pop
mov
cwtl
cltd
inc
and
sub
inc
fs
sbb
aad
outsl
push
jne
sub
fwait
lret
hlt
aaa
or
push
inc
ss
inc
cs
mov
pushf
mull
dec
add
mov
pop
int
mov
aaa
lcall
add
in
or
test
cmp
xor
mov
int3
sahf
pextrw
xchg
pushf
incb
daa
dec
cld
sbbb
fsts
and
jp
mov
xor
adc
add
shrb
jnp
ss
rcl
add
mov
mov
mov
cltd
subb
or
out
xchg
jmp
pop
jmp
in
jns
or
cmpsl
sub
insb
stos
xchg
adc
xchg
repnz
sbb
sbb
lods
enter
mov
xor
lods
cmp
push
clc
pop
mov
jnp
xchg
fwait
dec
lds
test
jns
inc
jle
sti
dec
repz
lea
dec
sub
sub
jmp
incb
push
pop
push
mov
bound
xor
fisubrs
add
fstpl
adc
and
inc
scas
idivl
xchg
test
ja
je
addr16
repnz
popa
jb
sub
orl
adc
push
add
inc
pop
jl
in
std
mov
in
je
mov
push
fwait
jl
gs
pop
out
arpl
sti
push
jbe
push
mov
je
ret
cmp
cmpsl
cwtl
insb
mov
int3
test
pop
pusha
mov
sti
xorl
push
cwtl
sarb
ds
aaa
xchg
mov
shll
dec
sbb
xchg
cmc
ficompl
jnp
or
pop
add
test
andl
mov
mov
jae
lods
out
jge
xorb
stos
sbb
roll
ret
and
xchg
out
mov
xor
stc
pusha
xchg
jo
test
movsl
mov
push
dec
outsb
pop
jmp
mov
jne
and
dec
sbb
pop
lahf
into
pusha
push
mov
call
jae
sbb
push
loope
sub
jb
scas
out
mov
mov
arpl
popa
fwait
ss
adc
stos
insl
mov
fisttps
jno
js
sbb
push
out
loop
repnz
shrb
add
or
add
jle
mov
lret
nop
mov
jb
mov
mov
iret
xchg
out
mov
or
pop
daa
adc
lock
mov
pop
pop
jmp
mov
std
pop
sahf
adcl
xor
push
cmc
jo
test
jnp
xchg
hlt
dec
inc
pop
out
jg
fcoms
cmp
data16
lods
stos
out
outsl
addr16
mov
sub
out
mov
mov
icebp
add
and
pop
push
dec
pop
add
add
mov
fcoml
out
mov
fldenv
pop
xchg
popa
lock
cwtl
fidivrs
loope
mov
imulb
sbb
iret
adc
test
cli
cld
mov
mov
inc
adc
outsb
xchg
enter
sti
or
clc
ret
xor
push
dec
and
not
cld
std
or
aad
add
push
sub
xchg
jbe
xchg
fsubrl
test
mov
lock
cmp
in
popa
add
mov
insl
test
sub
sti
mov
loop
call
push
mull
jb
popf
xor
sbb
xchg
cmp
loopne
pop
int
push
inc
sahf
xor
mov
or
xchg
jns
dec
addr16
add
rorb
fldt
gs
nop
sbb
out
xor
fists
pop
mov
add
dec
sti
jns
pop
and
or
jle
push
loop
jae
adc
sub
ret
test
or
enter
jmp
outsl
pop
stos
inc
popl
xchg
push
dec
insl
popa
ret
adc
or
or
andb
in
fistpll
rol
jno
movsl
push
imul
mov
cwtl
and
fsubrs
test
pop
jmp
sbb
push
pop
loop
pop
dec
cmp
loop
mov
pop
xorb
jae
dec
cwtl
lcall
sub
and
std
in
add
cmp
into
mov
imul
push
ja
popf
jl
pop
lret
jl
ljmp
dec
stos
incb
loope
pop
xchg
enter
mov
loope
inc
stos
arpl
xlat
dec
fiadds
adc
mov
clc
pop
dec
jb
add
jecxz
das
ds
ret
sahf
js
std
out
in
cmpsl
stos
testl
addb
movb
cmp
inc
stc
xchg
mov
addb
mov
out
mov
cmp
sbb
out
rclb
jne
aas
push
jns
dec
or
lret
mov
and
mov
jno
jle
out
mov
notl
xor
pop
cmc
dec
pop
mov
sbb
push
aaa
sbb
adc
mov
xchg
mov
xor
ja
xlat
inc
in
movsb
sbb
add
add
enter
sbb
mov
in
cmp
push
icebp
mov
add
fs
sbb
cmpsl
jmp
scas
pop
sti
inc
xchg
cmp
inc
rol
jecxz
outsb
decl
sub
sub
or
pop
adc
cltd
frstor
pop
push
add
and
aaa
xor
sbb
jnp
jns
xchg
push
aaa
movsb
mov
and
ret
addr16
pop
add
mov
outsl
insl
sub
jnp
sbb
jbe
xchg
out
push
das
xchg
out
mov
dec
pop
mov
pushf
add
mov
loop
dec
sbb
push
inc
lret
mov
cmp
adc
xor
cmp
xor
jne
stc
pop
cltd
ret
inc
jmp
outsl
sbb
and
movsl
pop
addl
rol
gs
inc
push
lret
movsl
lea
cmp
push
je
aad
subb
add
movsl
int
daa
jecxz
push
mov
adcl
push
jl
xor
mull
xlat
iret
add
jno
rcrl
lcall
sbb
movb
fwait
cmovp
xchg
mov
jae
push
adc
push
jae
mov
fdivr
add
cmp
inc
sub
sbb
lcall
and
push
add
pop
xchg
addr16
xor
sti
jns
add
sahf
mov
cld
fildll
cli
add
insl
frstor
addb
fldt
clc
xchg
xor
je
mov
or
lds
or
popw
jge
inc
push
mov
loop
sub
mov
lds
out
mov
mov
dec
jbe
imul
or
pusha
sbb
test
cli
out
shl
out
dec
mov
add
jg
push
sbbb
addr16
test
xchg
dec
or
inc
push
cmpsb
push
mov
jle
repnz
loop
pop
mov
pop
shr
cwtl
push
lret
xchg
and
call
xor
sub
pop
addr16
popf
push
mov
roll
jbe
movb
call
adc
in
pop
cmp
sarb
popf
stc
inc
fldl
lret
add
dec
into
mov
inc
cwtl
fs
daa
ffreep
fisubrl
cmp
dec
dec
insb
pop
stc
dec
divb
in
jbe
and
subb
mov
jl
scas
js
inc
or
shl
mov
mov
sarb
in
cmovo
lods
insl
movsl
leave
push
test
push
push
jb
es
xchg
ljmp
sti
xchg
jl
jno
jl
jae
xchg
or
insb
cmpb
lds
push
mov
addr16
and
int
cmp
lea
in
cld
call
js
test
mov
stos
stc
pop
or
mov
jle
dec
imul
icebp
jmp
adc
popa
or
outsb
and
lahf
pushf
mov
sbbb
lock
mov
je
pop
xchg
jge
jp
fistps
add
cli
sub
cmc
pop
pop
push
or
es
add
lea
test
jae
fsub
mov
add
or
lods
out
cmc
mov
and
out
mov
lods
xchg
cmp
sti
pop
add
sub
idiv
and
mov
aas
pop
jns
and
nop
push
dec
sbb
ljmp
inc
push
mov
xchg
mov
fdivr
mov
mov
jo
xchg
pop
scas
dec
push
add
and
xor
inc
push
nop
lahf
test
ss
xor
adc
int3
popa
push
sub
jp
insl
mov
mov
inc
rol
mov
loopne
lock
push
sub
mov
pop
aad
out
pushf
mov
lock
mov
ljmp
push
and
mov
pop
test
ljmp
popf
out
flds
jmp
adc
pop
mov
cmp
cmc
mov
lret
sbb
sbb
out
push
adc
pop
sub
mov
movsl
inc
pop
cmp
out
aas
sahf
insb
sub
arpl
rcll
mov
inc
inc
mov
call
mov
clc
nop
pop
adc
add
jl
sbb
xchg
jb
aam
ljmp
sbb
leave
lcall
mov
push
lock
mov
es
jmp
shr
jl
fisttps
ljmp
ficomps
es
cs
mov
pop
push
icebp
loop
lret
sahf
inc
mov
sbb
pop
dec
jb
insb
mov
pusha
mov
xor
cmp
and
xor
hlt
cmp
in
push
push
loope
aam
mov
pop
inc
cli
jmp
testl
push
push
rclb
cmp
dec
dec
xor
in
lods
imul
shll
pop
mov
mov
cmc
ret
xor
push
xor
mov
and
push
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
push
andb
jp
sbb
jp
mov
test
test
jp
cwtl
xchg
mov
stos
sub
fistpl
ficompl
pop
xlat
mov
xchg
imulb
popf
add
or
hlt
dec
mov
dec
mov
push
sbb
adc
bound
icebp
push
add
adc
jmp
loop
fmull
xchg
stc
rol
cmpsl
cwtl
test
enter
cmp
add
xchg
cmp
mov
dec
shl
jge
popf
cmp
xor
pop
and
sub
cmp
fidivrl
dec
push
loopne
push
push
or
jnp
inc
push
mov
or
and
push
pop
aam
dec
xor
adc
cmp
jnp
js
mov
loopne
and
mov
mov
into
mov
outsl
sbb
mov
mov
shll
xor
lods
repnz
sub
in
sub
sahf
call
mov
xchg
jl
fstpt
pop
outsl
pop
divl
cmp
or
xchg
sbb
jmp
decl
out
fdivr
cmp
or
lea
inc
push
cmp
call
fcmovnu
fs
lods
daa
in
mov
cmpsl
stc
xlat
fdivs
pushf
pop
xchg
mov
out
inc
cmp
mov
mov
scas
xchg
xchg
mov
fildll
andl
adc
das
sbbb
pop
mov
mov
mov
sbb
mov
subb
ss
mov
enter
adcl
iret
outsb
push
sti
lea
or
jecxz
xchg
push
scas
movsb
mov
cltd
or
mov
and
ds
mov
es
sbb
and
outsl
js
iret
pop
inc
int3
xchg
ret
imul
jo
push
sub
test
inc
push
out
sbb
leave
hlt
call
ret
jae
out
add
jne
mov
xchg
jmp
sahf
dec
faddl
push
das
mov
inc
stos
jnp
push
push
icebp
arpl
cli
out
pop
psubusw
cli
adc
xchg
xor
setg
mov
mov
add
lret
or
test
dec
adc
mov
inc
ljmp
mov
fldenv
cmpsb
pop
sbb
popf
mov
shrl
xchg
xchg
xchg
or
or
lods
insb
xor
push
push
xor
pusha
inc
xor
jne
out
pop
popa
fwait
add
add
jge
sar
cmp
fdivp
scas
jno
test
or
fists
dec
ja
hlt
pop
and
dec
mov
fistpl
adc
out
xchg
pop
mov
outsl
mov
fstpl
inc
sbbl
mov
shll
and
dec
cmp
loop
xlat
mov
push
pop
test
or
jl
mov
dec
adc
stos
sub
clc
fildll
int3
leave
cli
adc
sbb
push
divl
mov
mov
dec
xlat
loop
nop
addr16
cltd
xchg
add
bound
pop
adc
xorl
add
pushf
push
int3
xor
push
mov
or
mov
icebp
imul
aaa
adc
xchg
pop
test
adc
inc
imul
or
and
repz
inc
in
subl
popf
mov
sbb
jae
cli
inc
xchg
fyl2xp1
out
leave
inc
pop
inc
jne
push
inc
pop
jecxz
shl
aas
push
lock
test
sahf
push
sub
mov
dec
das
push
add
jae
lds
js
rorl
xor
aaa
out
or
test
jnp
mov
push
addr16
xor
jle
aam
loope
shl
lock
mov
cwtl
daa
or
mulb
mov
pop
loopne
sbb
test
pop
repz
jmp
inc
les
mov
and
movsb
je
sub
ds
into
fiadds
mov
inc
xor
xchg
aaa
jnp
or
and
icebp
pop
sub
hlt
inc
xor
jge
push
cwtl
xchg
sub
mov
adc
popf
stos
mov
push
rcrb
add
cmp
xor
sbb
push
adc
or
imul
sbb
push
push
lods
inc
clc
outsl
or
aaa
push
addb
jge
cmpsb
add
push
cmc
test
pop
xchg
in
outsl
out
fsub
ss
pop
xchg
pushf
sbb
subb
stc
jno
sbb
cltd
popf
popf
dec
sbb
nop
mov
int3
lahf
dec
sbb
cmp
cmp
sub
xor
incl
adc
lods
rclb
cmp
push
and
add
or
decb
dec
xlat
std
lahf
push
and
add
in
pop
push
loope
inc
xchg
sub
jp
movsl
cmp
stos
mov
divb
test
imul
insl
es
loop
cmp
sbb
into
xlat
repz
call
mov
mov
cmc
xor
jle
mov
xchg
jb
mov
xchg
dec
addb
in
pop
or
ss
mov
mov
lock
sar
icebp
and
jg
lcall
mov
xor
out
imul
vmovsldup
add
leave
jl
les
into
sahf
and
lods
orb
sub
mov
sub
add
mov
les
mov
pusha
out
add
int3
sbb
or
ret
loopne
pop
dec
xchg
arpl
test
pop
outsl
add
add
jmp
add
lcall
lret
mov
scas
cmpl
ret
cltd
adc
cmc
adc
mov
test
or
xor
test
das
sbb
jo
repz
cmpsl
adc
pop
mov
mov
into
mov
mov
movsb
mov
rcll
dec
mov
mov
sub
popa
insl
and
xor
mov
adc
pop
daa
mov
add
in
sbbl
mov
ljmp
xchg
mov
cmpsb
jae
mov
push
lret
cmpsl
ss
mov
je
pusha
inc
dec
das
scas
sub
sarl
repz
repz
jnp
adc
inc
pop
cmp
rolb
popa
adcb
jg
push
movsl
push
lods
or
inc
jle
pop
or
or
sub
push
jb
push
or
dec
xor
add
and
pop
inc
dec
loop
mov
fdivs
xchg
or
xchg
push
adc
cmpsb
or
jo
cmp
push
adc
roll
and
in
jb
mov
sbb
jnp
pop
adc
test
jl
mov
sarl
jb
xor
scas
mov
mov
or
add
xchg
negl
pushf
mov
lock
js
dec
call
pushf
push
xchg
mov
in
pop
sbb
lock
out
cmp
and
das
cld
xor
mov
rcl
pop
pop
jmp
inc
lcall
xchg
xor
add
or
jmp
out
cld
jb
outsb
fstpt
lods
dec
ds
shll
test
xor
dec
cmp
out
and
xor
push
inc
in
xor
mov
arpl
jb
dec
notb
cmpsl
sbb
push
out
xor
sub
adc
insb
int3
or
test
test
lret
and
pusha
mov
mov
push
aam
fistps
js,pt
cmp
sti
xor
cmpsb
lea
movsb
and
call
jbe
push
adc
out
adc
inc
cltd
leave
xor
jg
mov
sbb
imul
pusha
aas
movsl
push
push
pop
js
daa
push
xor
push
or
in
mov
xchg
fisubl
testl
psllw
nop
xchg
cmp
mov
xor
nop
int
adc
pop
xor
dec
lret
pusha
push
rorl
fcoml
inc
adc
pop
out
cmp
mov
bound
mov
shrb
js
and
mov
andb
aas
or
aad
xchg
mov
pop
mov
enter
adc
and
int3
mov
add
mov
sbb
lea
rcrl
cmpsl
cltd
push
mov
or
psrlw
push
sbb
mov
and
xchg
test
dec
push
iret
jb
adcl
push
shl
jg
jp
add
loop
rcrb
xor
lea
test
jle
lret
mov
push
mov
jns
loop
sbb
cmpsb
inc
enter
lds
push
push
push
ja
and
cmp
fiaddl
jnp
sahf
and
movsl
rorb
add
push
sarl
mov
xor
fwait
jno
fstpl
iret
movsl
leave
dec
sub
in
mov
lret
mov
clc
sub
jmp
mov
push
and
and
ljmp
sbb
push
mov
xchg
inc
iret
sub
push
cmc
jae
jne
adc
pop
cmp
xchg
jl
jp
fadds
mov
sti
mov
mov
mov
inc
cs
aad
cmp
bound
and
cmpsb
jecxz
adc
popl
shrl
imul
mov
movsb
mov
lock
imul
mov
cmpsl
scas
xchg
loopne
addb
pop
jo
dec
sub
lret
jae
imul
or
mov
filds
and
out
mov
in
dec
popf
push
push
insb
fildl
mov
repz
jne
and
add
lahf
sub
addr16
lds
mov
and
mov
xor
scas
int3
into
and
dec
mov
xor
add
pop
adc
cmpsl
cmp
adc
lea
dec
daa
jmp
fists
lea
movl
outsl
jbe
jp
push
scas
pop
mov
add
add
pop
mov
aas
ror
ja
adc
mov
or
incl
jmp
or
mov
in
mov
fisttpll
push
push
xchg
aam
lahf
lock
adc
outsb
jle
mov
pop
ss
out
mov
add
in
das
movb
sub
dec
sub
lcall
mov
xchg
mov
xor
or
iret
cltd
stc
lock
leave
inc
sub
push
mov
cmpsb
mov
sub
fmuls
pop
call
inc
mov
jp
pop
mov
sahf
lret
jae
or
int3
lds
stc
int3
test
hlt
popf
jg
jae
lret
adc
cmpsl
cwtl
insl
pmuludq
scas
pop
mov
cmp
lds
cld
imul
inc
cmp
and
negb
lahf
push
imul
jmp
pop
jno
jge
inc
xor
mov
dec
andl
xor
cmpsb
shrb
in
mov
push
bound
mov
je
jp
push
mov
outsl
add
cmp
mov
out
jle
jmp
inc
and
inc
xchg
cmpsb
sbb
xor
push
push
out
push
jb
jbe
jmp
adc
hlt
mov
mov
pop
ljmp
ret
and
mov
lods
jb
inc
insb
inc
stos
mov
mov
out
jge
or
mov
ds
jbe
repz
testb
xchg
data16
or
add
mov
dec
nop
mov
sub
popf
lods
add
shll
stc
scas
icebp
and
fsts
aad
loopne
test
outsb
sbb
inc
lret
jns
jae
mov
adc
push
xchg
sbb
pop
hlt
aaa
pop
cmpsl
mov
icebp
jmp
call
xchg
lds
push
sbb
add
popf
sub
jl
stc
clc
or
arpl
out
test
dec
test
es
out
sbb
mov
sub
pop
iret
push
jge
xor
xchg
mov
cltd
or
mov
insl
aad
inc
lret
xchg
jp
clc
dec
pop
bound
ret
push
dec
lahf
xchg
addr16
lret
or
push
and
gs
add
clc
cmp
adcl
dec
in
pushf
mov
mov
aad
add
push
push
lods
xchg
sub
inc
dec
ret
pusha
pop
pop
ffree
arpl
jo
test
out
push
mov
fcoml
xchg
jo
mov
push
inc
inc
shl
sub
add
fistpll
sahf
rcrb
jno
or
sub
movsb
sub
imul
loope
sub
xchg
mov
out
sub
mov
pop
lea
cmp
cmp
mov
xor
ljmp
aaa
jmp
jo
push
out
rolb
push
outsl
inc
cmp
or
fdivr
pop
cld
xchg
pop
test
addl
pop
jl
in
pop
jmp
mov
and
dec
and
out
jb
into
lods
dec
lods
sbb
scas
or
dec
mov
jb
dec
cmpsb
dec
pusha
clc
subl
outsb
push
cmp
push
gs
or
fdivrl
fldenv
cld
mov
fstps
fmul
hlt
negl
jmp
push
sbb
lea
xchg
xchg
and
and
cmp
sub
pusha
insl
lcall
sub
cmp
dec
inc
inc
inc
mov
xchg
out
add
icebp
ret
ds
dec
mov
xchg
hlt
adc
or
or
loop
adc
xor
jg
pushw
movsl
push
mov
mov
pop
mov
xchg
mov
clc
les
push
pop
cmp
sbb
imul
std
dec
and
mull
jb
test
push
push
xchg
mov
or
sub
in
pop
mov
and
in
cmp
jno
jns
and
mov
out
dec
cs
flds
inc
cmpsb
fcomi
iret
add
lret
cli
dec
pop
outsb
adcl
or
in
pop
xchg
mov
and
xchg
mov
inc
mov
push
adc
aad
data16
lret
push
insb
and
dec
or
xchg
add
adc
adc
js
mov
les
in
daa
stos
jns
sub
pop
imul
xor
pushf
fisubs
push
fdivl
shlb
insb
and
enter
and
and
sbb
repnz
jae
mov
and
pop
inc
push
sub
dec
sti
adc
push
xor
lahf
adc
pop
test
inc
jae
mov
test
push
aaa
out
mov
mull
fst
outsl
fbld
cmp
shlb
lea
ss
in
jge
inc
roll
dec
pop
popa
jge
test
lret
test
hlt
xorl
daa
xchg
fistl
test
mov
hlt
add
adc
ret
or
mov
repnz
out
mov
sbb
out
sub
push
mov
or
add
mov
xor
sub
mov
jmp
add
cmp
pop
pop
es
dec
mov
ljmp
adc
imulb
fadds
mov
aam
ret
enter
into
dec
outsl
pop
pusha
mov
jge
test
push
jl
mov
movsl
out
jno
inc
in
ljmp
sbb
int
js
jle
aas
push
andl
inc
clc
iret
out
and
sub
jbe
inc
es
mov
mov
pop
mov
sub
pusha
inc
jle
daa
cltd
shll
sub
pop
fwait
pop
je
jo
xchg
mov
dec
pop
cli
mov
sbb
aad
stos
leave
add
js
mov
push
fsts
sbb
mov
popf
sbb
xor
jge
mov
sbb
dec
ficompl
mov
cmc
and
aaa
mov
aam
insb
loop
pop
dec
pop
pop
sbbl
adc
add
shrb
pop
fwait
pop
pop
pushf
sbb
bound
aam
jo
int
or
mov
imul
jbe
popl
std
mov
gs
xor
js
fidivs
and
sub
push
cmp
lret
push
push
sub
adc
in
xor
sahf
xchg
sahf
call
pop
add
mov
cmp
sub
mov
jp
push
lea
mov
lret
int3
pop
cmpsl
push
dec
push
call
xor
out
dec
jp
lcall
aas
mov
sbb
leave
loop
cmp
les
push
pop
shrl
mov
nop
pushf
add
and
inc
rcrb
and
ret
push
jge
mov
jo
stos
add
repz
cmpsl
data16
outsl
xor
fiadds
add
test
mov
push
xorl
xor
stos
movsb
dec
dec
jno
lods
jne
mov
jecxz
adc
ret
movsl
outsb
add
pop
int
rcl
rorb
add
cmp
push
mov
out
call
dec
jmp
push
and
dec
sub
loop
and
add
imul
sub
sbb
sbb
xchg
mov
fsubl
cmp
sub
ret
in
sti
dec
lcall
jae
jge
fmulp
add
mov
inc
mov
fwait
lret
mov
lea
jl
mov
sub
lock
pop
inc
cli
imul
xchg
cli
push
inc
pusha
pushf
leave
outsl
pop
mov
pop
lock
adc
testl
aas
push
out
mov
dec
adc
cmpsb
in
repz
mov
fisubl
mov
xchg
loop
sbb
enter
adc
sub
pop
leave
enter
inc
push
imul
xor
sbb
xorb
mov
loop
out
cmpsb
pop
call
or
xor
arpl
xchg
jne
cmp
int
je
fldcw
add
push
or
jns
das
mov
out
outsl
outsl
sbb
inc
cmp
fdivl
or
imul
add
jns
mov
loop
shlb
xchg
cmp
aaa
mov
idivl
lock
dec
mov
sub
pop
and
sbb
cmpsl
movsb
mov
adc
out
pop
inc
adc
jge
sti
push
pusha
ret
ficomps
fmul
sub
out
pop
adc
sub
arpl
jnp
mov
dec
push
pop
das
xchg
sub
pop
jp
cmpsb
popa
leave
or
pop
xchg
inc
ljmp
and
test
jae
rcrb
sbb
into
adc
int
daa
push
in
jmp
pushf
xchg
das
popf
sub
loop
xor
mov
cmp
ret
das
inc
cmp
jno
dec
mov
pop
popa
lock
cmc
rcll
lods
lret
cmp
test
or
pop
shll
pop
or
mov
add
pop
pop
cwtl
inc
push
inc
or
xor
loop
shrb
cli
jae
sbb
imul
mul
jb
fs
or
pop
push
and
rcll
and
push
faddl
lret
sarb
out
dec
mov
and
cld
dec
dec
adc
jbe
or
mov
sbb
adc
mov
pop
pop
lret
cmpsl
fdivrs
pop
fwait
je
push
out
mov
sub
movsb
pop
stos
aam
xor
cmp
and
pop
cld
out
leave
push
inc
lock
inc
int3
jae
sbb
mov
pop
enter
mov
jmp
pop
pop
jl
xchg
inc
fwait
jb
jo
movb
cmpl
insb
mov
push
adc
inc
or
mov
pop
jg
jns
mov
lret
sbb
push
ss
test
push
fucomip
repnz
and
test
xchg
int3
mov
add
pop
outsb
sarl
adc
pop
cmp
push
notrack
pop
mov
je
and
sti
int3
xchg
sub
cmp
cli
add
in
mov
int
loopne
rcrb
jae
inc
or
sub
pop
and
or
loope
mov
shlb
mov
test
or
in
adc
sbb
lcall
ret
xor
lods
test
jmp
insb
in
mov
icebp
cmp
mov
jbe
cmpsb
or
cmpsb
or
jmp
jo
testb
cltd
movsl
adc
dec
dec
pop
mov
cmc
ds
pop
leave
mov
mov
cmp
and
popa
sub
data16
fsubl
sbb
inc
in
pop
xchg
loopne
fcmovnb
jp
add
add
and
aas
test
push
xchg
ljmp
pop
pop
xchg
je
mov
mov
aaa
cmp
jne
jmp
std
push
icebp
mov
test
cmp
mov
dec
subl
je
jnp
fwait
andb
insb
sub
add
xchg
int3
rcrl
adc
add
push
rep
jecxz
mov
pop
lds
xor
pop
cli
ds
out
sbb
push
add
and
mov
test
sub
jb
sahf
ljmp
cmpsb
or
nop
mov
adc
movsb
fsub
and
adc
sbb
sbbl
loope
mov
jg
adc
xor
andb
or
push
mov
jmp
data16
mov
insl
int
jo
fsqrt
popf
pusha
mov
pop
je
mov
nop
and
jb
imul
mov
xor
mov
sbb
cwtl
jg
movsb
fcompl
push
mov
dec
jecxz
push
outsb
jns
sbb
xchg
sub
jae
in
ljmp
pusha
fwait
jl
cmp
mov
out
lahf
jb
bound
sbb
sahf
push
pop
inc
sub
jb
xchg
adc
sub
sbb
pusha
popa
jbe
aad
dec
sub
dec
cmp
daa
shl
pushf
inc
and
int
test
aad
adc
push
testl
fldenv
stos
mov
inc
rolb
sbb
or
or
insl
mov
cmpb
rclb
inc
in
mov
mov
inc
sarb
push
aam
mov
sub
mov
test
push
jmp
loope
mov
in
pop
call
ror
cmp
xor
inc
pusha
movsl
addb
dec
push
mov
and
divb
add
lock
dec
mov
fists
sti
cltd
out
xor
xor
jo
in
mov
cmp
filds
xor
adc
jg
xchg
sub
xchg
cmc
mov
add
ffreep
sahf
or
mov
dec
lock
dec
mov
pop
push
out
daa
mov
sub
fbstp
cld
cmc
movsl
test
clc
lock
sbb
and
add
call
sub
cli
out
les
jnp
shlb
stos
xchg
rorl
sub
imul
push
bound
aas
jmp
cmpsb
fiaddl
push
mov
inc
iret
imul
inc
cwtl
loope
xlat
push
adc
daa
xchg
sub
or
outsb
lods
push
and
shlb
jmp
push
andb
jg
shlb
fwait
add
mov
mov
xor
add
inc
fstl
pop
jg
add
aam
mov
mov
shlb
mov
add
jecxz
push
lret
push
gs
popa
cmp
je
push
push
imul
and
adc
inc
sub
sub
push
mov
jecxz
xor
rolb
mov
jae
pop
sub
cwtl
es
mov
rclb
in
ret
stos
fwait
ja
push
or
mov
mov
rcrb
dec
lret
pop
push
push
push
adc
add
cmp
xor
dec
roll
mov
dec
dec
icebp
dec
call
pop
aaa
adc
cmp
jne
nop
aas
fs
and
adc
int
push
cmp
inc
nop
cmp
dec
sub
and
adc
xorl
and
dec
fmul
out
pop
negb
dec
add
pop
push
or
aaa
add
fwait
push
test
shll
xchg
cmp
pusha
xchg
lock
jl
pop
push
adc
sti
xor
sub
pop
mov
dec
adc
mov
mov
pop
push
dec
jge
shlb
dec
lret
inc
and
xor
mov
sub
cmpsb
daa
sbb
sti
jle
test
lahf
push
jns
push
repnz
stos
ds
cs
sub
adc
stos
xor
pop
adc
xor
cmp
lret
mov
aaa
ret
jmp
push
lcall
les
add
add
xchg
bound
and
xor
negb
jg
sbb
cmpsl
mov
sbb
ljmp
lcall
mov
jecxz
cmpsl
fwait
int
incl
sub
lret
addr16
adc
out
sub
jo
popf
ret
xorb
int3
sbb
push
pop
iret
sbb
int
shlb
data16
push
mov
push
dec
mov
rorl
fstp
call
out
mov
mov
mov
or
jne
inc
mov
mov
cs
repnz
pop
clc
xchg
je
jmp
xor
mov
cmp
jbe
or
out
mov
adc
cmpsl
clc
out
inc
inc
fildl
sub
aad
sub
mov
sbb
repnz
mov
cmpsb
cmpsl
test
andb
xchg
int3
scas
jae
mov
lahf
sbbl
adc
addr16
push
pop
adc
add
das
cmp
sub
insb
add
mov
xchg
rol
lret
out
and
push
fidivrs
mov
lds
pushf
mov
mov
into
cmp
pop
fs
xor
outsl
bound
jb
sti
mov
subb
call
xor
adc
movsl
sahf
and
cmp
mov
mov
pushf
adc
aam
xchg
dec
dec
lock
stos
dec
fildll
mov
add
bound
or
push
push
dec
push
lea
loop
mov
pop
outsl
and
out
test
sub
mov
and
mov
jle
push
test
or
pop
daa
stos
jecxz
dec
cmp
arpl
gs
dec
sarb
lods
mov
push
adc
int3
sbb
pop
inc
jnp
in
loope
xchg
mov
sub
or
xchg
xor
xchg
addr16
cmp
jb
pop
pop
mov
out
xchg
int
xchg
ret
pop
and
inc
enter
lock
call
scas
popf
shl
cmp
or
xchg
mov
dec
loop
in
inc
add
andl
add
adc
ljmp
sbb
fdivr
sbb
out
xchg
popa
jae
leave
jp
cmp
ds
loop
push
test
ret
cltd
lret
xor
dec
nop
subb
mov
idiv
movsl
addb
cmpsb
lods
mov
sbb
loopne
lods
or
shlb
scas
mov
cmp
lock
sub
mov
pop
int
push
pop
or
cmp
mov
xchg
xor
icebp
jmp
push
out
shrb
inc
pop
inc
xor
mul
mov
in
in
imul
insb
jmp
aaa
mov
push
ss
xlat
pop
jmp
aam
aam
dec
sbb
addr16
adc
xor
test
pop
mov
xlat
leave
out
mov
mov
pop
xchg
cmpsl
lock
ret
cmp
aaa
inc
scas
xchg
imul
push
mov
ljmp
scas
mov
or
cltd
mov
mov
sbb
cmp
jecxz
mov
jmp
add
add
add
mov
jb
inc
int
adc
ficomps
sbb
mov
jge
stos
movsb
aas
bnd
bound
ja
emms
fs
inc
lods
mov
mov
or
adc
int3
arpl
lock
pop
cmp
pop
jb
sahf
push
sbb
cli
into
or
cmp
dec
pop
cld
das
jns
adc
sbb
sbbb
xchg
pop
movsb
xchg
push
test
sub
mov
jecxz,pn
je
mov
xchg
lret
jb
xchg
jg
inc
cs
xor
sbb
int3
es
or
mov
je
xchg
das
nop
inc
xchg
mov
push
dec
mov
gs
loope
addl
dec
cmpsl
push
lds
call
ja
and
push
test
mov
mov
inc
push
push
mov
pop
test
xchg
and
xchg
outsb
mov
mov
push
cmp
or
xlat
and
into
dec
imul
and
lcall
xor
inc
mov
pop
mov
das
dec
lods
push
sahf
stc
fidivl
clc
insb
jecxz
and
jb
in
add
into
xor
lret
mov
and
cmpsb
mov
jae
out
mov
xor
sub
arpl
pop
fstpt
in
leave
dec
or
test
dec
test
mov
jmp
inc
cmc
push
mov
test
shll
mov
dec
into
xchg
adc
jae
pop
push
add
push
cli
mov
push
addps
pop
imul
or
rol
push
or
jnp
mov
and
mov
in
stos
jne
inc
dec
or
sbb
add
out
ret
movl
js
arpl
xchg
push
and
mov
xchg
inc
or
sub
mov
push
dec
xlat
js
mov
mov
das
das
dec
xchg
inc
and
dec
pop
cld
sub
sbb
cmp
xor
mov
mov
dec
out
adc
hlt
adcb
loope
cmpl
les
push
aam
ret
jo
mov
inc
imul
dec
push
dec
gs
enter
mov
into
inc
cmc
sub
lret
nop
mov
cli
cmp
rclb
jmp
lods
aam
jmp
movsb
nop
jp
out
sahf
mov
push
popf
aaa
xchg
push
lock
rcrl
sbb
jo
xchg
jmp
pop
pcmpeqw
arpl
xchg
mov
sub
ds
fisubrs
jg
lcall
scas
fwait
push
push
and
jo
push
in
push
xor
nop
jmp
xor
insb
sbb
les
push
xchg
push
pcmpgtb
test
ficomps
add
or
mov
and
rolb
in
shr
xchg
add
ja
scas
mov
aam
test
aaa
xchg
adc
pop
cmpsb
lods
mov
rcrb
in
out
testb
pusha
fsubp
push
sahf
int
or
sub
mov
xlat
inc
jl
jno
mov
iret
push
in
arpl
sahf
jp
dec
insb
jae
and
test
xchg
lock
jl
mov
cwtl
push
dec
fnsave
adc
push
bound
arpl
into
out
and
cmp
sub
imul
dec
movsl
ss
jge
mov
leave
call
dec
mov
imulb
jb
daa
pop
pushf
jns
mov
addr16
mov
leave
inc
and
sub
mov
test
adc
sub
sbb
addr16
sarb
ss
xchg
js
out
mov
dec
pop
jp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
jecxz
cmpsb
sub
sbb
jp
inc
pushf
mov
loop
jns
jecxz
sbb
jp
stos
inc
clc
pop
adc
popf
sub
inc
xchg
fidivrl
pusha
jno
jnp
lock
leave
scas
adc
xor
xchg
sub
inc
popa
icebp
xchg
call
add
fbld
shrb
fsubl
and
jbe
dec
adc
out
arpl
mov
les
in
stos
cmp
das
xor
nop
push
test
push
jno
test
jl
add
cmp
push
stc
pop
sub
iret
popa
pop
mov
shr
mov
rorb
push
jecxz
into
sub
adc
push
push
dec
mov
call
add
out
xchg
enter
jecxz
dec
pop
jl
jecxz
nop
dec
inc
xchg
mov
test
jns
or
sbb
inc
std
stos
addr16
daa
cmpsl
cltd
loope
lahf
js
inc
fwait
jmp
cmp
pop
pop
lock
gs
lods
jge
ret
stos
sub
out
test
das
stos
in
sbb
aam
ret
mov
sahf
jnp
mov
sarb
jmp
cmpb
insl
fmulp
pop
xchg
cmp
data16
and
in
out
and
xlat
fmul
push
sbb
push
call
mov
pop
loopne
outsl
mov
ret
je
pop
xor
adc
jmp
mov
insl
int3
inc
aas
mov
in
mov
adc
and
mov
in
addr16
sub
xchg
jo
fistps
ds
dec
jecxz
xchg
push
inc
nop
add
sub
in
fisttpl
movsl
imull
lods
sti
ret
ret
cwtl
jmp
loop
add
in
mov
movsl
ret
in
xor
leave
stos
pop
sbb
cmp
push
loope
push
sub
cmp
xchg
mov
test
pop
mov
pop
jecxz
jecxz
sub
mov
repz
ror
mov
in
or
adc
pop
mov
mov
xor
inc
outsl
mov
out
in
xor
add
inc
enter
cld
mov
sub
cltd
aas
mov
addl
scas
cltd
fists
mov
mov
aam
out
xchg
jp
mov
jle
scas
je
aaa
loopne
cmp
jno
das
out
mov
cwtl
mov
ret
pop
sub
imul
sbb
loope
mov
jle
lret
sub
jbe
add
xchg
pop
outsb
jge
leave
xor
mov
fucom
adc
cmp
outsb
or
mov
ljmp
xchg
stc
stos
mov
pop
push
mov
mov
mov
pop
or
icebp
mov
add
ljmp
fidivs
sti
or
and
lea
es
and
lahf
sbb
inc
imul
fs
les
sub
and
sbbb
lahf
lds
cmp
loopne
or
mov
xchg
in
aas
jo
push
fisubl
mov
cmpb
cs
jno
xor
xlat
mov
insl
cmp
xor
fistl
mov
imul
and
in
pop
pop
xor
iret
ds
sub
sbb
repz
jecxz
stc
repnz
cmp
mov
jp
cli
inc
adc
ret
out
add
popa
mov
mov
shl
outsl
lret
xchg
arpl
mov
mov
outsb
std
fstl
std
leave
sub
adc
insb
sbbl
adc
lea
scas
cmc
cmp
repnz
jecxz
sub
jp
jp,pt
xchg
xchg
jg
jp
adc
lea
sub
and
add
das
idivl
jb
mov
lret
sbb
xchg
cmp
out
xchg
sub
fisttpl
fimuls
inc
pop
jne
std
or
in
xchg
xchg
cmpb
dec
dec
jmp
mov
pop
add
clc
addb
push
push
addl
xor
bound
loop
dec
jb
fcomp
push
or
pop
ret
imul
popf
adc
js
jo
mov
mov
clc
popa
add
jae
mov
dec
inc
enter
test
sbb
add
mov
mov
mov
cmp
repnz
mov
dec
mov
int3
xor
cltd
jno
nop
jno
inc
jecxz
adc
bound
mov
adc
gs
jecxz
mov
scas
cmp
add
je
clc
mov
add
sub
movsb
xlat
stc
pop
arpl
int
xchg
repnz
clc
repz
pushf
or
or
es
inc
xor
mov
push
int
loop
and
in
or
cwtl
cmc
fwait
push
test
and
lret
xorb
lods
imul
clc
mov
pop
jo
adc
fldenv
mov
mov
scas
xor
jp
mov
mov
fs
lock
out
in
aam
inc
jnp
inc
jp
sub
dec
add
or
insl
out
jge
or
js
out
outsl
or
rcl
testl
or
sahf
add
jns
mov
scas
stc
add
dec
fdiv
jb
lods
or
push
adc
sub
pushf
push
gs
xchg
mov
sub
cmp
lahf
add
leave
int
xor
push
dec
fidivs
ret
dec
repnz
adc
repnz
dec
and
cmp
xor
jle
in
or
and
ss
add
gs
cltd
jb
aaa
loope
dec
mov
inc
in
jp
mov
and
push
add
enter
mov
jno
mov
xlat
pop
fcmovbe
xor
out
sti
cmp
mov
pop
ds
rcr
mov
or
inc
pushf
cli
dec
in
add
pop
sbb
cs
cmp
adc
mov
xchg
outsl
or
repz
pop
insl
xchg
sbb
sbb
mov
mov
pop
mov
xorb
mov
adc
faddp
stos
pop
es
andb
sbb
sahf
into
cmp
pop
xchg
stos
icebp
dec
fnsave
sub
adc
or
pop
push
mov
je
jb
mov
sub
bound
dec
hlt
lret
xor
movl
ret
imul
cmp
ret
pusha
or
pop
call
mov
xlat
pop
stos
or
sbb
adc
out
sub
xchg
mov
addr16
je
popa
jge
rcr
mov
mov
loop
ljmp
cmp
daa
pop
cmp
je
jne
shll
xchg
mov
dec
dec
jbe
adc
xlat
pop
repz
outsb
fs
in
jne
mov
cmp
and
fldcw
push
mov
xchg
pop
xchg
push
push
pop
sahf
cmpsl
push
rcll
or
jp
popf
and
fwait
lods
sahf
loope
jg
jg
pop
faddl
popf
sub
test
mov
lret
divb
add
sbb
pop
dec
sbb
fsubp
pop
outsb
xor
das
lea
fdivr
cmp
mov
loop
mov
mov
jne
jle
aaa
jbe
cmp
inc
test
push
cld
cmp
insl
icebp
cmp
jbe
push
movsb
clc
xor
xchg
shll
mov
and
push
xchg
adc
lret
mov
mov
inc
dec
xchg
fstpl
mov
push
dec
push
arpl
and
jl
hlt
std
cmc
aaa
sahf
jo
movsl
mov
pop
jae
add
xchg
les
pop
int
lret
mov
jecxz
push
pop
and
imul
outsl
loopne
leave
out
add
mov
xchg
into
inc
ljmp
imul
ret
mov
insl
xor
mov
faddp
rcll
les
pop
scas
sub
nop
mov
mov
outsb
out
shll
and
ljmp
fildl
or
xor
faddp
pop
jp
mov
mov
sbb
push
call
outsb
pop
lock
cld
push
sahf
cmpsl
dec
and
and
xchg
test
rcrl
mov
cli
popl
or
movsl
enter
adc
sbb
adc
sarb
jg
adc
dec
lods
iret
xchg
or
ljmp
mov
mov
sub
mov
ljmp
xor
icebp
iret
dec
cld
pop
and
push
loop
push
dec
push
sub
mov
sub
stc
inc
cmpsl
or
in
int
sahf
insb
inc
mov
pusha
xor
shll
hlt
data16
sarl
xlat
push
mov
mulb
lods
in
push
std
xchg
dec
shll
pop
divb
jmp
cld
cmp
les
es
imul
xor
mov
sub
sub
movsl
subb
pusha
xor
cmp
pop
shl
mov
adc
push
frstor
fs
pop
sbb
cmp
pusha
divb
out
jle
or
push
jo
jbe
daa
sub
test
jl
mov
mov
add
jmp
pop
sbb
mov
shlb
ja
loop
insl
and
daa
xorl
add
mov
jecxz
xchg
leave
and
inc
insb
pop
test
jae
push
fcomps
int
in
hlt
adc
xchg
orb
rcl
popa
add
push
pop
pop
insl
iret
jnp
ljmp
dec
insl
mov
outsl
out
mov
idiv
repnz
fldl
adc
pop
loopne
add
adc
ds
xor
je
dec
into
fmull
movsl
in
sti
push
fadds
mov
push
jp
stos
nop
out
or
xchg
and
cmp
rcll
cmpsb
xor
xchg
std
pushf
mov
cwtl
into
pop
push
add
hlt
dec
in
pop
ret
aad
ja
outsb
fsub
int3
dec
inc
shll
sarl
xchg
xor
cmp
test
xchg
lods
xor
outsl
mov
mov
adcl
add
sbb
rorl
xor
pop
adc
cmpsb
in
es
mov
pop
cld
mov
or
add
jns
fstpl
in
mov
xchg
nop
sti
mov
pushf
adc
sti
jno
sub
data16
jno
or
ret
scas
jnp
outsl
jmp
adcb
stos
mov
scas
out
imul
loop
lcall
jmp
push
test
pop
pop
adc
mov
stc
xchg
dec
mov
in
aam
jle
cmp
dec
insb
pushf
pop
mov
movsb
test
xchg
adc
sbb
outsb
pop
pusha
aad
dec
or
xor
inc
std
sbb
cmp
and
inc
fsubrl
xchg
out
gs
adc
in
subl
out
nop
es
xchg
pop
test
push
ror
adcl
repz
arpl
sti
push
rcl
xor
shrl
xorl
xchg
xchg
mov
call
push
xor
jno
xchg
js
notb
push
push
sbbb
mov
xor
inc
xchg
inc
cwtl
or
xor
jo
xchg
sbb
jns
fcom
xor
mov
push
in
mov
fbstp
mov
pop
scas
and
push
jl
mov
lahf
movsl
test
xor
les
lods
cltd
and
mov
or
into
insl
fdivl
dec
ja
lret
sub
insl
sbb
jbe
test
mov
out
adc
mov
rcll
push
mov
jbe
clc
sub
cmp
add
adc
loopne
out
das
dec
jo
sbb
push
mov
popf
ds
mov
out
jl
sub
xchg
xchg
ja
cwtl
lock
add
and
nop
cmp
ret
xor
mov
push
daa
imul
ljmp
dec
and
push
test
scas
pop
mov
push
mov
cmp
or
rcrb
or
lock
xor
bound
test
inc
test
lahf
or
sbb
aad
mov
mov
cmp
ret
shrb
pop
dec
into
xor
aam
aaa
ret
popa
adc
bound
adc
push
mov
xor
out
sub
xchg
and
int3
ljmp
outsl
pop
mov
popa
das
jb
repz
cmp
aas
nop
jl
call
lds
sub
out
push
les
sbb
push
lock
fwait
vpand
mov
xor
xchg
fcoms
test
jmp
sbb
inc
mov
pop
movsb
out
dec
mov
cmp
sub
pop
test
addr16
or
mov
cmpsl
mov
int
sahf
or
in
pop
jnp
js
sbb
mov
xchg
mov
lds
adc
pop
or
xlat
sti
and
xor
hlt
inc
repz
scas
outsb
sbb
jnp
inc
fwait
mov
adc
decl
pushf
add
mov
js
inc
leave
mov
pop
fstpl
lods
mov
sub
call
fisubrl
jno
pop
data16
xchg
sahf
mov
pop
mov
pop
xor
xor
gs
hlt
shlb
fistps
push
push
mov
je
push
fsubrl
daa
mov
fcmovbe
aam
sub
inc
js
lahf
shl
sbbl
adc
push
dec
push
mov
shrb
inc
dec
nop
adc
aas
pushw
stc
cmp
fwait
outsb
sub
sahf
in
jb
aad
sub
ljmp
push
dec
ds
subl
into
movsb
hlt
add
bound
shl
mov
push
sub
push
out
loopne
mov
dec
sahf
pop
mov
out
jne
int3
stos
jp
decb
inc
ret
pop
add
cmp
inc
aaa
mov
xchg
cli
xchg
add
inc
sti
or
mov
fistpl
sub
fisubrl
fidivl
push
outsb
add
lret
cmp
stc
mov
mov
andnps
push
fsub
fbld
mov
ljmp
push
pushl
es
mov
icebp
cli
out
out
addr16
lods
mov
ret
mov
jl
sbb
mov
pop
push
jmp
shrb
xchg
inc
sub
stc
lods
jbe
push
clc
popa
cmp
add
aad
add
add
sub
adc
jbe
mov
cld
and
test
inc
out
push
dec
ret
mov
int
jmp
cmp
loope
sub
pushf
sbb
xor
cwtl
arpl
xchg
or
or
scas
jg
in
xchg
mov
cmp
leave
jmp
popa
stos
mov
cld
xchg
repnz
pop
push
or
shlb
sbb
mov
popa
repnz
mov
hlt
push
xchg
mov
dec
hlt
xor
cmc
into
lock
mov
cmc
jg
test
and
cmpb
scas
dec
sbb
stc
mov
fwait
sti
int3
fidivs
cmc
fwait
das
mov
dec
testl
sub
pushf
dec
ljmp
pop
adc
insl
cmpsl
shrb
std
push
sub
imul
and
jbe
repz
inc
popa
lods
fsubl
int
and
in
mov
mov
dec
mulb
jmp
arpl
push
xchg
pop
or
cmp
rol
xchg
lret
add
cmpb
out
mov
hlt
mov
add
lock
push
xchg
cmc
in
in
xchg
lcall
sub
xchg
int3
jb
dec
add
jnp
sbb
sar
mov
gs
imul
mov
inc
xor
std
aam
jno
rcll
lahf
mov
test
pop
add
jmp
dec
jns
pop
push
and
and
or
addl
aas
icebp
add
mov
and
mov
jp
fisubl
aaa
add
lret
sub
loop
sbb
fisttpl
imul
pop
xchg
fisubrs
or
cmp
pop
arpl
xchg
cmpl
xchg
push
sti
fstl
and
sbb
xchg
or
scas
pusha
and
push
int
push
jnp
popa
aad
mov
aas
xor
out
imul
das
mov
push
mov
and
aas
out
rorb
aas
pop
or
lret
dec
mov
daa
das
frstor
adc
adc
std
jl
mov
mov
call
sbb
dec
inc
jb
jge
je,pt
xchg
and
popa
bound
repnz
push
inc
rcr
or
mov
imul
pusha
mov
fs
or
enter
pop
icebp
aam
mov
insl
sbb
sahf
xchg
or
mov
lahf
aas
pop
push
stc
or
sbb
adc
sahf
rorl
lret
aas
lahf
jg
push
andl
xchg
jmp
or
cld
hlt
les
movsb
xor
mov
dec
outsl
out
mov
testb
push
inc
dec
ja
in
push
bound
popf
mov
leave
pushf
pop
pop
cs
fstpt
pop
testb
into
je
nop
sbb
pop
dec
icebp
push
imul
int
push
pop
notb
aas
mov
push
mov
adc
push
dec
cmp
test
mov
shrb
stc
push
mov
sbb
jbe
pop
xchg
movsl
push
sahf
push
insb
out
cmp
cmpsl
mov
xor
movsb
push
cs
fbld
xor
jg
inc
mov
scas
stc
xchg
mov
in
dec
xchg
clc
lahf
mov
js
cs
scas
sub
aam
aad
outsl
cmp
pop
mov
mov
bound
stos
inc
rcll
mov
gs
fldt
rcrb
jmp
pop
shrl
add
mov
cmc
mov
insb
aas
ja
addr16
sbb
mov
xor
mov
pop
push
mov
xor
sbb
or
pop
xlat
les
mov
sub
pop
stc
popa
out
mov
hlt
inc
add
lret
push
mov
aam
cmp
mov
enter
daa
jle
and
data16
cmpsl
push
lcall
mull
mov
das
popa
pop
mov
sub
loopne
adc
jno
sbb
leave
inc
xchg
jo
leave
push
mov
das
dec
add
ret
sub
add
popf
sarb
mov
sbb
int3
xchg
imul
add
push
enter
or
or
decb
insb
pop
inc
insb
ret
lcall
sarb
and
mov
xor
dec
and
add
sti
rcr
inc
mov
add
or
pop
decl
in
push
cmp
dec
mov
mov
scas
or
mov
rol
push
mov
xor
jns
xchg
xlat
xchg
lahf
xchg
sbb
sub
mov
jns
push
adc
and
sbb
test
push
imul
sbb
repnz
adc
fwait
in
cli
add
outsb
mov
lods
cmp
mov
pop
inc
pop
lahf
rorb
push
insl
leave
and
mov
orl
stos
mov
ja
into
add
xor
sbb
mov
push
add
imul
xor
fistpl
xchg
jae
xor
inc
test
jmp
ret
mov
jne
adcb
ret
sub
addr16
repz
cmp
mov
rcrb
hlt
mov
mov
cmp
jbe
stc
jge
mov
outsl
ficoml
mov
adc
fldl
or
fstp
pop
popf
pop
jg
mov
sub
cmp
aaa
add
or
jne
mov
lahf
dec
ja
cmpsl
xor
xchg
jecxz
sbb
cld
or
cld
sahf
lcall
push
xchg
mov
sbb
or
xchg
sbb
aam
dec
out
cltd
xchg
repz
rcrl
lahf
and
enter
nop
sub
stc
pop
cmp
lahf
fisubrl
cmc
rclb
mov
decb
mov
xchg
sub
add
arpl
sbb
cmp
add
mov
adc
add
jo
dec
jge
xor
cmp
mov
pop
les
jns
cmp
and
mov
xchg
stc
arpl
int3
adc
push
in
std
fstpt
cld
loop
les
xchg
dec
sahf
lea
adc
sbb
outsl
inc
mov
jo
dec
ret
fdivs
xchg
sub
dec
push
or
stos
or
and
dec
xchg
jmpw
cmp
cmp
dec
lahf
stos
adc
cmpsl
push
pop
in
xchg
out
enter
lcall
insb
cwtl
into
inc
sti
mov
sti
insl
adc
stos
enter
pop
ja
mov
out
sbb
add
fs
add
jb
xlat
sahf
call
sbb
cmp
dec
or
push
mov
enter
gs
pushl
mov
stos
lret
lea
push
push
cmp
dec
push
enter
inc
shrb
add
inc
and
ds
pop
pushf
pop
add
incl
fadd
mov
andb
in
inc
hlt
pop
ret
mov
push
cmp
push
mov
mov
lahf
loop
dec
inc
stos
jge
xor
push
cmp
idivl
pop
push
sbbb
lods
repz
movsl
cwtl
stos
fcmove
jp
cmp
adc
push
popa
pop
in
sti
fidivrs
push
sub
ljmp
xchg
mov
sbb
inc
mov
xchg
jle
or
test
sbb
or
orb
add
int3
stc
lcall
in
cmp
sbb
mov
xchg
or
pop
dec
mov
mov
pusha
ret
gs
push
pop
in
sbb
mov
mov
jbe
stc
addb
sub
fadds
or
sahf
jno
rorb
cmp
mov
fisttpll
or
mov
mov
or
insl
dec
mov
nop
cli
xchg
test
lds
fwait
int3
push
mov
jbe
pop
xchg
fbstp
mov
test
mov
mov
lock
imul
xchg
call
dec
imul
pop
dec
mov
imul
lock
mov
cmp
arpl
mov
dec
pop
mov
cmp
lods
pop
pop
cmp
add
add
sub
xor
mov
xchg
insb
and
sbb
jo
shlb
push
cli
fistpl
push
lahf
subb
pop
cmp
cmpsl
and
lock
ret
outsb
nop
bound
call
ror
shrb
dec
shr
push
push
imul
into
insl
xchg
mov
jne
or
adc
add
or
data16
dec
sub
in
cmp
mov
adc
cmp
lahf
test
xor
mov
mov
xchg
mov
push
dec
xchg
push
fs
rorb
stos
push
jo
fistpl
test
dec
stos
aad
jne
dec
dec
jg
dec
cwtl
push
ljmp
pusha
ret
popf
pop
adc
shl
xchg
scas
subl
inc
mov
mov
mov
xor
adc
ljmp
lret
pop
mov
sti
ja
and
xor
push
mov
mov
xchg
or
mov
cmp
xlat
cld
sbb
sbb
std
sbb
xchg
dec
push
pusha
pop
loope
lahf
insl
jg
add
jae
fadds
cmp
pushf
xchg
rcll
pop
cwtl
fwait
imul
incl
mov
aas
int3
mov
and
pop
or
adc
cmc
cmp
test
std
scas
pop
mov
lret
add
mov
mov
nop
push
or
rclb
mov
loopne
jmp
shlb
adc
cmc
mov
xlat
pop
mov
lea
lods
jmp
shl
push
or
push
push
cmp
cmp
subb
add
add
xlat
add
xchg
adc
fsubrp
dec
dec
lock
mov
xchg
pop
mov
js
sub
mov
addr16
and
push
jmp
mov
add
out
adc
mov
mov
inc
add
je
aam
pop
xor
shr
jns
jb
lret
addr16
sti
jnp
out
inc
or
fmul
dec
xorb
jnp
mov
jl
adc
popf
cmp
lds
add
add
fnsave
and
dec
inc
scas
cld
xchg
in
mov
xor
outsb
jp
pushf
xchg
cwtl
xor
ljmp
int
xchg
cli
jmp
push
push
push
dec
cmc
mov
pop
lret
push
loope
movsw
jb
or
mov
mov
lods
xchg
lock
negb
sahf
outsl
jmp
jnp
nop
mov
insl
sarb
inc
jbe
cmpsb
loope
stc
add
inc
fnstenv
xor
pop
sub
mov
xchg
gs
test
dec
stos
sub
ror
xorl
lret
pop
ret
push
shlb
repz
test
scas
cltd
mov
mov
lds
jp
cmp
sti
imulb
cmp
push
xchg
mov
and
dec
xchg
outsl
call
add
dec
je
fwait
cmp
loop
xchg
mov
imulb
movsb
xchg
push
mov
imul
ss
popa
dec
pop
xchg
rolb
lret
push
cmp
leave
fdiv
imul
stc
jecxz
cld
mov
call
and
jns
cmc
imulb
jnp
or
dec
pop
or
xchg
dec
pop
cwtl
dec
in
fwait
ds
ds
fstpl
lds
dec
jle
cmpsb
mov
stc
cmp
inc
mov
jno
mov
in
add
mov
mov
jg
aad
or
imul
out
jne
lods
inc
cli
mov
lret
dec
jg
loope
and
jo
mov
dec
nop
test
sub
lret
jo
mov
clc
mov
in
mov
pop
lret
leave
push
daa
test
or
insb
xchg
loop
lahf
in
jns
leave
fmul
clc
xor
into
lar
test
cmpsl
in
movsl
fmul
iret
cmc
cmp
iret
fscale
xor
lret
cmpsb
mov
push
pop
scas
fldenv
test
stc
adc
push
or
mov
sbb
enter
and
push
testb
rorb
lahf
adc
aad
ljmp
xor
adc
hlt
pop
popf
dec
ds
pop
mov
sbb
rorb
out
sar
mov
loopne
cmp
cmpsl
inc
out
jle
mov
and
test
add
jns
cltd
inc
sub
inc
pop
push
aad
call
lret
loope
dec
dec
ret
lret
lahf
cmc
mov
pushf
jne
bound
je
mov
lsl
sub
push
aad
add
sbb
loopne
or
imul
pushf
xchg
int
int
mov
dec
xor
fldl
inc
es
or
in
lods
aad
rclb
adc
dec
xchg
mov
test
repz
mov
leave
data16
sbb
std
jecxz
sub
and
pop
adc
lods
push
out
push
in
cmp
pop
sub
inc
xchg
je
leave
out
ret
cmp
jns
ds
clc
dec
test
xchg
ds
push
pop
roll
jp
pop
sub
das
sbb
mov
push
pop
pop
aad
mov
decl
roll
jg
cmp
call
sub
mov
insl
cmc
mov
and
adc
jp
adc
ja
in
and
dec
xchg
push
in
mov
inc
xchg
imul
int
sub
add
mov
lock
pop
or
or
mov
es
xor
lds
pop
aaa
jo
mov
lahf
test
icebp
stos
std
pusha
stos
pop
mov
rorl
pop
pop
ds
adc
push
jmp
mov
sub
mov
dec
jbe
test
sub
push
or
arpl
out
les
enter
lods
dec
pop
fdivs
ret
jl
adc
fnstenv
push
repz
sahf
push
jb
and
mov
mov
push
je
ficoml
mov
jbe
fdivs
imul
jae
popf
mov
mov
in
mov
enter
xor
sub
lock
cmp
jge
inc
and
dec
mov
aas
cmc
push
enter
pusha
mov
clc
aad
inc
stos
insl
arpl
sarl
pop
in
test
cmp
test
add
cmp
stc
inc
loopne
xchg
stos
ret
lcall
sarb
push
xchg
mov
jne
add
cmc
inc
dec
aam
fdivrs
xchg
or
lods
jge
clc
roll
and
add
loopne
mov
cs
cltd
insb
jae
aam
jno
pop
dec
or
icebp
sub
int
fdivrl
mov
xchg
pop
mov
call
pushf
leave
mov
out
jbe
mov
pop
xlat
or
and
out
lods
mov
push
loope
dec
enter
in
into
repnz
popf
adcl
push
gs
and
cmp
inc
xchg
add
push
inc
loopne
push
pop
mov
pop
fisubrl
cmp
js
jb
jmpw
jmp
push
inc
cs
dec
test
mov
cli
es
jle
xchg
xchg
xlat
popf
ljmp
pop
ss
push
loope
scas
mov
sarb
push
sti
cmpsb
or
stc
stos
add
pop
inc
cmpsl
repz
mov
popa
imul
and
mov
andb
fstpt
xlat
push
pushf
addr16
pop
pop
xor
jno
add
sub
stos
jbe
push
fldl
repnz
call
xor
mov
dec
pop
shrb
lea
fildl
pop
sbb
cs
push
stos
das
add
sub
xor
sbb
mov
xchg
sub
fldenv
sub
mov
push
inc
or
stc
dec
xor
push
out
sub
imul
jp
dec
loop
sub
stos
loope
lcall
loop
adc
sub
xchg
push
push
imul
ljmp
xchg
mov
mov
ficoml
add
add
pop
mov
mov
xlat
inc
fstpt
fstl
mov
out
dec
lahf
mov
cmp
mov
mov
mov
mov
xor
popf
ret
pop
push
sbb
add
loop
adc
hlt
dec
fbstp
and
jp
xchg
jecxz
ljmp
ret
push
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
sbb
jae
jp
sbb
jp
and
std
rclb
xchg
and
pop
and
jne
sbb
sub
xchg
cmp
inc
int3
ljmp
push
push
out
push
jp
lock
rclb
push
add
in
pushf
ja
pop
sbb
in
cmc
mov
dec
movsl
fwait
daa
mov
ret
push
lret
outsb
mov
add
jmp
push
ret
push
out
sub
sbb
and
add
inc
jl
cmc
xor
add
sar
clts
sbb
cmp
mov
imul
sbb
xchg
jo
data16
add
outsl
cmp
mov
push
xchg
int3
out
inc
sbb
popf
mov
sbb
cli
nop
in
in
push
add
mov
mov
mov
jecxz
sbb
xchg
rcrb
mov
pop
test
fistpl
jne
repz
jne
dec
gs
xor
mov
or
jecxz
pop
pusha
push
add
imull
push
movsl
cmp
aad
fwait
idivl
pushf
jno
and
cs
test
loopne
bound
sbb
push
mov
xor
je
je
sub
mov
jmp
jno
test
jp
cli
or
sub
push
je
sub
adc
clc
rolb
sbb
mov
addb
outsb
fsubr
mov
xchg
cmp
fistpl
arpl
popf
xchg
lock
mov
sbbb
xor
cwtl
jle
mov
sbb
fcmovnbe
scas
out
mov
cwtl
test
roll
ret
std
jns
fsubrp
push
mov
ja
pop
and
jle
aad
lods
arpl
out
int3
movsb
sub
mov
andb
lret
pop
test
jmp
popa
and
mov
xchg
pop
test
jno
pop
iret
adc
pop
or
pop
stos
std
out
push
xor
pusha
dec
stos
popa
gs
add
cmp
inc
mov
stos
pop
test
push
sbb
sbb
mov
and
adcb
jns
mov
gs
outsl
fisubl
sahf
xlat
je,pt
mov
jns
inc
roll
test
mov
popf
and
rolb
mov
and
push
push
icebp
iret
xlat
jl
push
sub
dec
add
rcl
rorb
stos
sub
test
cmp
mov
bound
aaa
sub
fld
or
push
mov
cmpl
mov
inc
sub
adc
xor
aaa
mov
lret
pusha
dec
jmp
xchg
sub
push
movsb
dec
les
jmp
mov
call
fs
ss
dec
jno
push
cmc
lods
xchg
sbb
push
add
sarl
lock
je
ja
call
adc
mov
testl
subb
add
fmuls
push
xchg
lcall
mov
inc
pop
inc
andl
pop
jle
pop
cmpsb
cmp
into
mov
add
aad
scas
clc
dec
imul
inc
in
xor
mov
mov
sbb
aam
mov
cmp
negb
shlb
shrb
fdivrs
inc
mov
mov
sub
test
lea
pusha
mov
jns
daa
ret
jns
test
push
inc
fstpt
or
std
add
inc
mov
fidivrs
dec
in
and
neg
mov
mov
adc
adc
nop
sub
mov
pop
rcrb
stos
cltd
jp
push
mov
xchg
fwait
rorb
mov
push
lret
inc
jne
enter
ja
jb
mov
mov
mov
xor
xchg
sbb
xor
sub
cs
push
add
push
insb
xchg
scas
jns
inc
fnsave
je
mov
sub
jne
enter
into
incl
xchg
test
pushf
pusha
push
fucom
mov
and
pxor
jae
mov
jmp
stos
popf
iret
cmp
or
aaa
push
int3
mov
cli
add
dec
inc
and
jbe
outsl
lahf
and
cmc
pop
data16
bound
xchg
dec
lods
mov
push
loopne
andb
dec
inc
test
sub
cmp
stc
pop
sbb
xchg
push
movl
jnp
mov
jg
pop
ljmp
mov
push
xor
sbb
lods
push
mov
sti
int3
in
test
sbb
jns
nop
pop
int
clc
inc
add
dec
add
cs
push
sarl
test
bound
cld
jecxz
mov
insl
xor
sub
addl
popf
or
sbb
shll
ja
fs
sbb
jmp
pusha
mov
popf
cmpl
sbb
jmp
dec
mov
jg
fs
adc
xchg
lds
jnp
mov
mull
or
adc
shrl
aam
bound
dec
sahf
fisttps
lcall
sub
push
push
jle
xchg
test
push
and
or
jmp
lfs
pop
xor
mov
sbb
inc
subl
shll
ficompl
popf
sbb
sti
xorl
fidivs
push
push
stc
adc
addr16
mov
lcall
popa
sub
inc
iret
sarb
pop
fstp
outsb
divl
cmp
add
mov
xor
call
inc
or
xchg
xor
jbe
dec
xor
int
lret
push
fwait
pop
inc
mov
mov
leave
mov
jmp
mov
mov
jno
xlat
xor
mov
cmpsb
add
dec
dec
pop
fcomps
push
cmp
mov
shl
in
adc
sub
mov
mov
mov
movsb
mov
dec
stos
mov
insb
rol
xchg
inc
test
mov
loope
mov
xor
mov
xchg
sahf
stc
negl
mov
or
rol
and
mov
adc
pop
fnstenv
mov
dec
xor
mov
xor
shll
sbbl
and
les
stos
dec
mov
mov
xchg
adc
sub
mov
pop
mov
cld
inc
pop
mov
cmpsl
sub
pop
inc
add
enter
jmp
pop
lods
jo
lods
mov
insb
loopne
add
jle
xchg
mov
into
je
xchg
jbe
ja
mov
rcll
mov
push
sub
push
jmp
lcall
sbb
test
push
pop
xlat
cli
and
sbb
inc
jns
jecxz
mov
int
std
rcr
repz
and
jle
imul
insl
dec
fdivl
cmp
mov
ret
loope
sub
xchg
pop
and
pop
inc
sub
sbb
mov
int3
jbe
pop
pop
mov
data16
dec
cmpsb
push
mov
mov
lea
out
dec
cmp
pop
add
shll
mov
mov
cmc
xorl
nop
out
fdivl
add
enter
xchg
push
cmpsl
js
lret
int
dec
dec
cmp
cwtl
aaa
fcomps
sub
push
mov
adc
les
imul
xor
xchg
cltd
push
hlt
jbe
mov
mov
mov
shl
popf
mov
inc
lods
mov
insb
lcall
xchg
inc
fdivrl
jo
xchg
cmc
lcall
or
adc
lahf
sub
insb
loope
mov
ja
sbb
repnz
repnz
mov
inc
or
out
sbb
pop
mov
dec
lret
insl
loope
or
test
or
fcomps
in
mov
mov
in
mov
xor
pop
dec
les
mov
mov
jle
jge
movsb
mov
mov
xor
push
pushf
aaa
dec
mov
out
andb
fidivs
orb
pop
dec
adc
mulb
xchg
push
out
ljmp
xor
icebp
icebp
cmp
cld
mov
orb
mov
aam
mov
mov
loopne
sub
jnp
xchg
adc
add
jb
iret
icebp
fwait
jge
sbb
insl
inc
xchg
mov
adc
out
aad
adc
jo
mov
lahf
or
sarb
xor
clc
jb
outsb
sbb
sbb
sub
mov
imul
test
rorl
jne
imul
xchg
mov
push
fisubrs
outsb
adc
imul
jo
outsl
in
sub
jnp
mov
mov
sub
dec
repz
inc
je
and
loope
cmp
adc
mov
mov
jno
mov
fdivr
mov
aam
cltd
mov
das
mov
jmp
fs
mov
fwait
mov
imul
sub
shll
jmp
push
dec
flds
ljmp
mov
mov
cmpsl
pop
sbb
mov
scas
iret
push
test
and
je
and
fldt
cld
shrl
adc
xor
into
xor
mov
add
andl
pop
fildl
inc
or
out
pop
fiadds
pop
stc
jmp
or
mov
or
inc
xchg
dec
call
mov
mov
lcall
or
lret
imul
add
test
fsubrp
cmpsl
lret
push
jno
jg,pn
lret
int3
jmp
sbb
orl
push
decb
and
imul
mov
aad
andl
repz
pushl
sub
aam
aas
inc
mov
test
fwait
adc
lret
iret
into
pop
or
mov
dec
sti
stos
outsb
mov
fdivrs
pop
xchg
push
lock
adc
aad
lds
mov
add
and
mov
push
ret
add
insb
mov
mov
cmpsb
push
jo
int3
dec
mov
popf
and
dec
outsl
mov
xchg
add
dec
or
popf
sub
sbb
dec
add
aam
xchg
cs
addr16
push
mov
mov
test
fadd
xor
cmp
mov
clc
pop
and
adc
xor
cli
lahf
inc
xchg
push
rclb
int3
mov
push
cmc
ss
cld
xchg
stc
or
notl
fists
cltd
sbb
xchg
lcall
sub
lahf
lods
sarl
pop
sbb
stc
nop
sbb
daa
lods
push
or
fsubr
dec
test
mov
fnstenv
pop
add
inc
mov
mov
js
cmpsb
adcb
dec
inc
cmp
add
jg
inc
stos
mov
loop
fistpll
or
rcr
mov
shl
jecxz
pusha
imul
aam
ficomps
lds
mov
push
ret
mov
repz
dec
inc
bound
aas
in
xorb
push
std
std
inc
xor
and
or
stos
xchg
sarl
fcomi
xchg
dec
pop
xlat
int3
int3
stos
rorl
cmpsb
adc
and
cmp
cmp
pusha
push
push
xor
clc
adc
xchg
std
and
in
adc
xor
test
or
sbb
loopne
cmp
loopne
mov
sbb
xchg
fbld
ret
sahf
sub
cmc
sti
or
pop
out
fs
ret
mov
pop
mov
push
enter
dec
rcr
push
std
sbb
lret
testl
ja
int
push
pop
out
mov
imul
xor
add
fwait
mov
pop
xor
in
in
cmpsb
insl
or
ficoms
sti
mov
ret
mov
shll
arpl
add
aam
add
popf
int3
js
arpl
adc
xchg
mov
test
jns
adc
aad
xchg
sbb
xabort
lock
sbb
dec
cmpsl
inc
pushf
lret
lods
into
in
loop
ljmp
stos
or
stc
rorb
jb
mov
loopne
sub
int
dec
adc
iret
xor
jo
mov
les
inc
and
mov
jl
dec
loop
xlat
loopne
cli
decl
cmpsl
pusha
mov
adc
inc
jb
push
and
dec
movb
incb
int3
ja
shrl
push
test
pusha
sbbb
stos
nop
cltd
in
sub
bound
test
inc
sub
mov
int3
insl
lret
add
mov
pop
mov
add
gs
dec
paddsb
pushf
mov
in
xchg
aaa
mov
test
pop
inc
adc
outsl
arpl
add
inc
cmp
cmp
insl
and
and
shl
inc
mov
add
dec
imul
add
nop
push
fbld
js
test
add
inc
sub
rcl
pushf
aaa
pop
fdivrs
cmp
aaa
adc
cmp
dec
mov
movsb
and
and
mov
out
dec
fdivs
fstpt
push
jge
dec
xlat
cmp
mov
into
push
pop
push
aad
movsb
mov
pop
cli
mov
aam
push
and
aaa
scas
and
push
push
add
jbe
pop
dec
push
insb
in
outsb
outsl
mov
or
add
jge
adc
jl
inc
cli
pop
mov
test
or
mov
inc
incb
sbb
dec
sub
push
aam
jnp
mov
cmp
mov
icebp
push
dec
mov
fs
arpl
daa
add
movsb
icebp
mov
inc
fwait
into
movsb
jge
sarl
xchg
xchg
pop
adc
jmp
lret
xchg
jmp
push
pop
lcall
out
aam
popa
jecxz
jae
pop
dec
movzwl
sub
inc
mov
lods
lock
pusha
dec
test
jecxz
icebp
or
pop
enter
cmp
or
outsl
push
cmp
mov
rcrl
push
jns
mov
adc
fidivrl
add
cmp
sbb
inc
imul
push
mov
sub
fcomi
add
dec
or
push
clc
int3
gs
push
dec
sub
flds
sub
inc
mov
mov
cmp
push
cmc
add
push
pop
fistpl
scas
add
fidivs
pop
and
nop
sbb
adcb
mov
jle
fnsave
jnp
xchg
jecxz
mov
adc
mov
add
xchg
push
cmp
and
call
cmp
fs
jmp
cli
sub
pop
loope
push
sub
adc
in
outsl
dec
inc
in
popf
lahf
inc
push
dec
out
sbb
lea
lds
xchg
and
add
arpl
mov
notb
imulb
inc
push
dec
lret
sub
push
inc
pop
xchg
jae
sub
sub
mov
arpl
xor
inc
ja
inc
pop
dec
div
jmp
or
mov
imul
lret
mov
inc
mov
cld
or
enter
cmp
mov
andnps
xchg
hlt
sub
adc
adc
stos
rclb
repz
gs
push
inc
xor
add
stos
insb
outsl
or
sti
mov
xor
ljmp
rcr
dec
mov
popf
cmp
int
pop
inc
mov
test
sub
push
std
aad
xchg
jp
add
cmp
scas
mov
mov
and
cmp
addr16
sahf
in
jo
jp
sbb
outsb
repz
pop
movsb
xor
cmp
sub
dec
lods
insb
pop
fldt
jg
icebp
cmp
jns
mov
xchg
add
jecxz
push
push
dec
adc
push
popf
mov
fwait
sub
mov
sbb
mov
pop
pop
xor
scas
dec
bnd
iret
dec
lock
cli
mov
repz
xchg
data16
clc
sub
xchg
loop
ja
and
scas
add
ret
inc
or
mov
dec
fwait
icebp
lods
pushw
imul
mov
es
cmp
mov
mov
mov
adc
add
mov
push
xor
cmp
fwait
jns
leave
jmp
adc
fwait
adc
pop
or
icebp
movsb
xchg
loope
dec
pop
aad
push
ds
aas
mov
push
shlb
iret
jo
adc
xor
and
mov
xchg
stos
pop
out
mov
dec
lds
int
push
test
fwait
sub
ret
shlb
xchg
and
faddl
sub
sub
push
mov
mov
leave
insb
push
mov
aam
sbb
cmp
inc
frstor
xchg
mull
mov
aas
add
popf
ljmp
test
mov
jae
mov
rcrb
insb
jne
out
inc
shl
jecxz
lock
sbb
ljmp
mov
dec
cltd
cwtl
cmc
pop
inc
mov
ficoml
loopne
addr16
int
dec
cmp
adc
mov
lods
jbe
jno
xchg
push
cli
push
dec
and
push
sahf
jb
adc
sbb
mov
push
mov
add
mov
loopne
mov
xchg
lods
mov
cli
add
xlat
repz
in
outsb
push
lret
ljmp
and
sbb
mov
cmp
jae
lret
pop
mov
xor
cs
push
dec
sbb
out
mov
cmc
push
decb
pop
test
sub
add
xchg
mov
mov
insb
scas
push
push
movsb
add
scas
data16
jns
mov
push
sbb
sbb
repz
ret
test
std
shl
gs
pop
insl
xor
mov
lea
sti
cwtl
mov
in
xchg
jmp
pop
lahf
pop
sub
xchg
xchg
xchg
cmc
mov
out
cmp
inc
xor
fdivs
jle
jl
out
dec
in
test
mov
sbb
insl
xor
adc
lcall
movsb
and
leave
push
sbb
sub
mov
in
test
dec
daa
aam
ljmp
sbb
pushf
stos
hlt
push
popf
inc
mov
test
push
mov
inc
aam
aad
fcoml
roll
insl
sbb
enter
and
inc
fadds
roll
cmp
int
sub
xchg
scas
fiadds
bnd
add
lods
xor
test
cli
mov
fadds
xchg
add
pusha
testb
daa
loope
xor
dec
leave
in
xchg
xchg
out
divl
cmp
jbe
xchg
ja
dec
xchg
adc
cli
jne
mov
ret
push
subl
or
mov
in
pop
aaa
push
xchg
aaa
push
dec
inc
xor
lret
mov
dec
sbb
and
sub
lods
lea
cmpl
fwait
mov
bound
pop
and
ror
pop
loop
push
int
lret
mov
xchg
or
flds
idiv
cmp
or
pushw
popf
mull
jle
cmp
in
out
xor
inc
add
ret
fsts
call
push
jecxz
pop
loope
fnsave
xor
negb
bound
setns
sbb
sbb
jbe
in
fabs
es
adc
test
jmp
mov
xor
push
es
dec
lret
adc
testb
shrb
mov
ljmp
fs
test
call
in
pop
ficomps
xchg
xor
xlat
push
push
sbb
or
je
out
repz
dec
sub
mov
mov
js
fistl
fimuls
icebp
mov
and
sbb
sbb
push
popf
lea
in
cmp
cmpsl
jns
pop
fisttpl
push
adc
ljmp
xor
ss
inc
inc
addr16
inc
js
jmp
out
int
addr16
lods
mov
and
sbb
fildl
inc
mov
ljmp
lret
push
xchg
add
clc
xchg
sub
jne
test
xor
inc
sub
fsubrp
fldt
into
jbe
fidivrs
lods
inc
dec
icebp
adc
leave
daa
mov
ret
add
adc
push
mov
dec
out
inc
jb
and
imul
and
out
jne
out
fisubrs
rolb
das
pop
jge
test
push
out
ljmp
add
add
sti
push
mov
jbe
shll
aam
lret
cld
je
inc
insb
adc
mov
outsl
lods
call
dec
cld
pop
rclb
lret
pop
fmul
stos
xor
pusha
stos
sub
jno
sub
dec
lahf
inc
mov
mov
and
mov
dec
mov
nop
mov
shl
push
pop
std
ja
push
ret
xor
sbb
ja
jno
cmp
out
enter
dec
call
sub
xor
cmp
inc
mov
out
xlat
js
jp
add
push
loope
hlt
add
popf
repnz
adcl
or
mov
push
cmpsl
scas
mov
outsl
cmpsl
mov
fisubrs
dec
dec
out
and
xchg
pop
mov
es
es
xchg
shll
or
or
mov
ss
mov
inc
or
mov
mov
or
dec
cmp
cs
inc
mov
dec
lock
xchg
xchg
jbe
and
push
mov
mov
push
imul
lods
xchg
lret
lcall
fildll
out
popa
mov
insb
push
inc
sbb
pop
pop
out
ret
jecxz
mov
test
sub
xorb
xchg
movsl
sbb
push
fdiv
add
lret
adc
aaa
rorl
cmpsl
cmp
lock
inc
cmp
mov
push
les
in
jg
shrl
enter
lods
jo
into
icebp
push
dec
jns
insl
mov
xchg
sbb
xlat
and
shll
or
xlat
fdivrs
mov
addr16
stc
push
xchg
inc
fwait
aas
pop
ljmp
or
out
or
push
lods
data16
repnz
insl
test
inc
sti
cmp
cmpsl
xchg
fs
imul
aaa
sub
jecxz
test
movsb
sub
push
mov
or
call
popa
dec
mov
fisubl
sahf
jns
cli
inc
aaa
int3
xchg
stos
push
cld
hlt
push
jl
mov
mov
arpl
stos
sbb
roll
dec
int3
sahf
dec
iret
enter
mov
ja
mov
subl
xchg
ljmp
loope
xchg
adc
loope
mov
xchg
mov
jge
cwtl
out
leave
mov
xlat
xchg
mov
fidivs
inc
sub
jb
jle
out
loop
jecxz
push
loopne
jp
stos
cmpsb
pop
rorl
sbb
testb
fisttpll
out
dec
inc
iret
repz
pop
pop
inc
sbb
aas
scas
adc
cmpsb
or
addr16
outsl
out
xor
shll
mov
xor
adc
jecxz
inc
or
repnz
and
cmpsl
dec
cltd
rep
or
movl
mull
push
jae
ret
pop
ret
cli
inc
mov
xor
outsl
cmp
mov
push
shrb
ror
shl
pop
adc
mov
pop
xorb
mov
jl
push
push
insl
dec
lods
jmp
push
stc
repnz
sbb
lret
jle
insl
xlat
lea
sbb
outsl
jecxz
inc
dec
scas
dec
inc
outsl
adc
cwtl
jmp
add
ror
shrl
mov
fcoml
add
sub
aam
hlt
imul
mov
mulb
adc
mov
rcrl
mov
and
movsb
aam
dec
dec
mov
xlat
orb
int3
repnz
push
lret
mov
sbb
and
andl
jb
or
jmp
lcall
mov
cmp
add
xchg
sbb
ja
fadds
sti
add
subb
out
push
push
cltd
pop
xchg
push
pop
bound
or
jge
dec
adc
mov
imul
fldcw
lds
ucomiss
fwait
dec
pop
jbe
cmp
xlat
js
pushf
jns
scas
mov
ret
mov
sbb
repnz
xor
pop
shlb
mov
jo
nop
aas
jnp
inc
sti
mov
push
scas
dec
icebp
xchg
push
pop
pop
mov
mov
pusha
mull
aas
dec
sub
mov
mov
dec
cmp
fucomi
mov
popf
aas
pop
mov
rcrl
ja
dec
not
pusha
xorl
adcl
and
lahf
mov
or
jno
in
popf
bound
pop
or
cmp
cmp
push
movsb
mov
sub
jge
fadds
and
fsubs
dec
lret
sub
scas
imul
ret
pop
push
add
dec
mov
adc
xchg
inc
loopne
mov
mov
bound
mov
and
es
add
add
push
sub
xchg
mov
cli
mov
inc
push
sub
bound
add
fstl
lea
inc
push
cltd
repnz
ret
jecxz
xor
int3
popa
test
push
add
arpl
outsb
loop
sbbl
push
sbb
jbe
sub
outsb
pop
push
insb
rcll
jmp
mov
es
cmc
loopne
mov
fs
psrad
in
mov
faddp
sbb
test
cmp
cmpsb
or
cmpsl
fnstsw
iret
into
icebp
cmp
das
inc
mov
inc
orb
or
adc
shll
and
sbb
dec
sub
jle
stc
pop
sarl
sub
mov
xchg
lret
cld
xor
inc
out
js
jno
cli
xchg
add
mov
mov
frstor
fdivrs
jns
pop
mov
lea
dec
out
xchg
mov
cmpsb
call
in
add
das
ja
adc
xor
and
out
shrl
push
dec
outsl
push
jne
inc
jns
xor
test
adc
jae
dec
jl
or
mov
lea
push
hlt
adc
mov
dec
cmp
ficomps
into
movsl
cmp
cwtl
jne
lret
jle
mov
iret
aas
push
js
daa
aas
sahf
scas
cmp
pop
jl
xchg
add
mov
xchg
inc
dec
arpl
add
push
scas
mov
push
ror
push
mov
xchg
pop
jle
aad
pop
inc
test
test
and
ror
lods
mov
push
pop
cmp
stos
repz
je
push
icebp
mov
push
orl
out
sbb
das
lcall
inc
inc
mov
lea
mov
es
and
dec
ficomps
cmp
mov
pop
xor
mov
sbbl
mov
fwait
ja
nop
xchg
bound
test
incl
into
rolb
mov
or
faddp
fistl
cmp
scas
cmpsb
push
pop
sahf
ror
shrl
cli
je
rcr
and
aas
sbb
jno
pushf
into
xlat
cli
into
or
loop
mov
test
test
mov
pop
sub
out
insl
cmp
mov
in
xchg
jns
push
decl
cli
push
dec
stc
int3
dec
imul
push
popf
xor
inc
lods
and
add
fmul
fnstcw
in
enter
or
idivb
sub
cmp
int
cmpsl
lock
and
fs
dec
fs
repz
push
pushf
mov
hlt
sbb
xchg
sbb
add
mov
shlb
mov
cld
xchg
push
dec
inc
mov
loop
jns
or
test
sbb
mov
mov
or
out
in
add
jne
ret
cmp
adc
cli
pop
mov
inc
cmpsb
pop
inc
scas
mov
inc
les
insb
and
andb
mov
sbb
mov
mov
mov
ret
stc
mov
cltd
orb
inc
cmp
pop
in
imul
pop
loope
test
push
loope
mov
add
add
xchg
inc
jmp
sub
mov
sub
mov
ficomps
stos
subb
stc
dec
loope
mov
push
fldcw
inc
test
lods
stos
xchg
sub
cmp
sar
fcompl
sbb
pop
dec
mov
xchg
dec
pop
xor
push
xorb
xchg
xor
jnp
jp
outsl
mov
movsb
xor
sbb
mov
fisttpll
rcl
xor
cld
pop
sahf
add
add
lods
xor
gs
std
cmpsl
int
lods
pop
adc
mov
cmp
jmp
aam
mov
in
test
into
add
cmp
out
add
pop
cmp
cmp
lcall
adc
pop
stc
sbb
and
cmpb
rclb
mov
icebp
test
push
adc
mov
or
push
mov
fcoml
ret
or
pusha
jo,pn
jae
sub
icebp
inc
js
and
xor
hlt
push
and
cmp
ss
fsubp
fxch
lods
jo
repz
dec
shll
push
inc
adc
lock
xchg
add
icebp
jmp
clc
pusha
jne
clc
jns
cmp
stos
cld
inc
or
xchg
add
jae
mov
mov
adc
sbb
enter
hlt
jg
cs
call
lods
sbb
inc
nop
mov
mov
lds
in
and
sub
dec
push
sbb
xchg
loope
cmpsl
jae
setp
mov
cmp
mov
sarb
push
and
mov
rclb
sarb
out
lahf
divl
js
cmp
int3
out
dec
adc
es
pop
les
enter
mov
pusha
jle
stos
insl
pop
mov
in
mov
prefetch
or
pop
pop
imulb
fwait
inc
xchg
cli
xchg
jge
or
sahf
xchg
mov
push
or
mov
xor
cmc
popf
cmp
xor
push
scas
mov
pop
sub
decl
xor
loop
aas
push
and
das
adc
mov
xchg
mov
and
adc
in
cmp
mov
fldcw
int3
pushf
jae
ja
inc
ds
shrb
imul
negl
jb
add
add
stc
push
cmp
lods
push
paddsb
js
sub
dec
xor
les
adc
jg
test
bound
out
iret
mov
push
add
lcall
ror
lahf
mov
adc
or
pop
xchg
test
out
stos
mov
fsin
icebp
sbb
push
leave
outsl
pop
je
int3
subb
dec
les
sub
inc
and
fcomip
sub
sti
aas
js
xor
dec
jbe
sub
adc
outsl
dec
mov
outsb
out
inc
pop
or
inc
push
push
lock
xor
jbe
jno
insl
add
cs
fidivl
std
insb
mov
gs
movb
mov
ja
pop
stos
mov
fcom
stc
add
popl
sub
cmp
add
loopne
push
cld
in
lds
xchg
adc
ficomps
ficompl
pop
push
lods
push
fs
cmp
fidivrs
mov
dec
fwait
leave
or
adc
jns
loopne
sub
sbb
pop
cmp
pushf
jnp
and
add
and
fs
sti
mov
shl
notb
ja
test
shll
mov
adc
xchg
aad
and
aaa
mov
stc
cli
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
push
cs
jp
or
jp
mov
stc
xchg
push
mov
xchg
jp
xor
or
sub
add
sub
inc
frstpm(287
js
jmp
and
pop
fimull
sub
cmp
jb
adc
stc
mov
mov
cld
ja
jmp
xor
fidivs
mov
push
inc
jp
mov
and
mov
cltd
xlat
jle
add
pusha
push
popf
pusha
pop
xlat
mov
icebp
jno
inc
ret
daa
ljmp
push
popf
in
fmul
and
cmpb
mov
mov
popf
mov
bound
mov
mov
dec
imul
xchg
pushf
rcr
mov
mov
adc
inc
mov
jns
inc
pop
pushf
int3
aam
sahf
in
and
stc
das
iret
push
mov
adc
ret
mov
lods
sarb
lods
sub
sub
pusha
mov
stos
int
or
insb
push
or
mulb
xchg
imul
test
mov
ret
stos
push
aas
sbb
mov
jge
mov
fildl
push
inc
dec
pop
inc
subb
pop
cmp
addl
add
in
add
inc
cmp
add
jno
int
inc
js
mov
mov
sahf
dec
or
nop
ret
cmpsl
lods
into
pop
sti
cli
test
xchg
lret
or
push
jl
xchg
inc
push
fwait
jg
fnstsw
sub
in
pop
jl
mov
mov
lods
inc
jno
outsl
nop
lods
jb
scas
push
pop
push
test
adc
inc
js
jmp
adc
jge
mov
or
rorb
xor
cmc
rcr
fistl
inc
xchg
push
mov
test
push
mov
inc
mov
mov
mov
and
inc
flds
outsl
pop
add
notb
inc
ds
xor
dec
jl
mov
mov
xor
loope
mov
or
sub
repnz
loope
fldt
ss
xchg
ret
lds
mov
mov
cli
std
adc
lret
sbb
fstpl
cld
xchg
add
repnz
popf
lds
ljmp
xor
int
mov
fisttpl
mov
fnstsw
aam
push
mov
add
jmp
sub
sub
pusha
test
xor
or
xor
cltd
cmp
add
imul
je
jg
ja
dec
scas
loopne
pop
sti
loope
inc
mov
lahf
mov
test
and
outsb
cwtl
jb
aas
dec
inc
lret
mov
daa
ss
ret
jne
adc
mov
dec
fldcw
mov
pop
pop
mov
or
xchg
popf
pop
lds
scas
sub
inc
sti
test
dec
dec
daa
jmp
neg
sahf
popf
lcall
pusha
arpl
aad
inc
movsb
fdivrl
hlt
fmull
insb
daa
je
out
mov
xchg
pop
clc
adc
jno
stc
inc
add
loope
pop
test
pop
pop
sub
cmp
mov
fldl
int
inc
xchg
test
call
mov
sbb
in
test
incb
shl
mov
jno
pop
xor
aad
mov
frstor
push
jge
pushf
push
dec
mov
jmp
lds
adc
push
and
outsb
or
stc
in
xor
ja
sahf
inc
adc
subb
add
push
jge
xor
daa
cwtl
sbb
dec
xor
mov
dec
pusha
cmp
dec
mov
xchg
inc
inc
jmp
lcall
cmp
mov
inc
sbb
xor
jle
lods
imull
loope
popa
xchg
int3
adc
or
scas
mov
and
mov
jae
ljmp
push
xchg
mov
jae
mov
daa
imul
cmp
sbb
push
sbbl
clc
push
push
push
pusha
push
mov
mov
repnz
inc
sub
xor
dec
out
cmc
jmp
mov
scas
mov
fldenv
rorb
movsl
subl
mov
mov
fcomi
jmp
sub
aaa
cmp
push
leave
into
subb
out
push
xor
pop
iret
mov
test
mov
xor
daa
sub
mov
in
and
sbbl
cmp
and
pop
add
scas
outsb
push
stos
xor
mov
xchg
int3
mov
stc
jmp
ret
mov
inc
jle
fdivrl
aad
inc
rorl
mov
jmp
mov
mov
or
mov
rolb
test
movntq
out
mov
mov
sbb
cmc
das
add
push
js
outsl
in
mov
out
and
xchg
pop
ja
fsubrp
insb
inc
ss
jmp
xchg
xchg
leave
add
call
insb
inc
pop
pop
inc
ret
cmp
mov
dec
dec
jbe
add
inc
shrl
inc
push
and
movsb
push
lea
pop
sbb
cwtl
xchg
xchg
xchg
push
imul
sahf
popf
pop
mov
stos
subl
inc
mov
fwait
into
imul
addb
mov
test
scas
cmp
xlat
adc
test
jmp
ljmp
sbb
fistpl
mov
fsubrl
jae
dec
xor
loop
mov
push
scas
mov
or
div
fsub
test
scas
cmp
ret
inc
dec
mov
jno
inc
jmp
cmp
and
pusha
fldt
sbb
jo
xor
mov
and
jo
xchg
out
pop
mov
lods
sub
mov
mov
cmp
sub
outsb
or
decb
pop
lcall
add
lds
or
aaa
jg
inc
dec
es
cmpsb
push
les
xor
std
mov
nop
jp
add
dec
out
or
les
cmp
rcll
cwtl
sub
sbb
sbb
ja
xor
push
cmp
idivl
ret
test
sbb
lods
stos
hlt
xor
push
jne
sbb
and
fdivrp
idivl
pop
push
in
push
bound
arpl
adc
dec
rcr
pop
in
stc
cmp
push
sbb
rep
jle
mov
and
cld
movsb
fimull
rorb
lret
test
jp
push
and
out
lock
hlt
adc
out
cmp
jl
push
stos
jg
or
sub
rorl
out
arpl
mov
xor
shlb
gs
divl
add
int
daa
mov
inc
add
cmpb
and
fwait
movsb
sub
lret
lods
pop
stos
mov
out
xchg
fcompl
in
inc
aam
add
leave
mov
out
mov
push
ret
cmc
and
mov
notb
outsb
fsubr
xor
push
sbb
mov
and
sbb
sahf
sti
outsl
mov
xchg
pop
call
cmp
mov
sbb
mov
aaa
stos
pusha
icebp
mov
pop
add
stos
push
push
addr16
lahf
mov
push
arpl
xor
scas
pop
mov
je
mov
xor
mov
test
mov
bound
shrb
xchg
test
dec
jmp
mov
pop
mov
mov
push
scas
and
pop
xchg
jbe
cmp
lock
xchg
adc
add
loope
jl
repz
cwtl
pop
ss
fidivl
sti
adc
jg
cli
cld
ss
and
shrl
dec
outsb
pop
aam
add
mov
add
add
stos
dec
adc
push
loope
lock
inc
fstpt
and
adc
stos
out
xorl
mov
rcll
mov
adc
push
test
add
or
pop
imul
mov
addr16
dec
push
xchg
mov
sub
iret
fwait
mov
xchg
or
in
ret
pop
jb
pop
xor
aam
jecxz
jg
push
mov
jns
lahf
and
pop
jnp
test
es
jo
xchg
push
or
mov
int3
push
inc
cmp
cmp
jl
fdivr
lcall
pop
leave
jns
add
call
or
xchg
sbb
dec
loop
lret
out
int
les
movsb
adc
stc
mov
dec
add
sbb
cmp
movsl
jae
push
repz
push
sub
scas
jle
push
les
adc
jnp
inc
mov
push
rcll
leave
je
jno
cmp
xlat
add
jge
mov
lock
scas
push
inc
and
mov
in
xchg
leave
pop
and
fmul
or
xor
cs
jmp
lods
shrl
dec
xchg
adc
pop
xchg
jbe
imul
repnz
add
xor
nop
inc
inc
dec
jae
and
dec
mov
data16
movsb
sbb
pushfw
out
daa
mov
xchg
adc
cmp
sbb
adc
sbb
repnz
test
cld
dec
mov
push
sub
aas
mov
fsubs
clc
out
pop
sub
daa
mov
lcall
sbb
into
push
mov
sbb
aad
jnp
leave
add
pop
ss
mov
sub
sub
repz
sbb
mov
addr16
pop
out
insl
mov
pop
arpl
jl
lds
outsl
mov
outsb
icebp
and
push
xchg
fwait
data16
cmc
cs
test
mov
add
pop
dec
repz
cmpsb
mov
stc
mov
popf
cmc
stc
repnz
call
pop
inc
lahf
add
push
into
pop
movsb
ja
cmp
test
push
pushf
cmp
scas
fs
imul
in
pushf
pop
mov
push
adc
dec
adc
jmp
xor
hlt
cmovae
and
push
push
and
cmp
jae
jge
mov
sbb
mov
loop
imul
add
cmp
push
push
adc
or
clc
add
icebp
push
mov
ficompl
jmp
jae
mov
mov
mov
out
mov
pop
xor
and
adc
mov
mov
lods
inc
mov
push
push
push
mov
fmuls
dec
arpl
cmpsl
mov
outsl
repnz
sub
push
mov
dec
ja
loope
ss
imul
ret
pop
cmp
sbb
bound
clc
lahf
es
mull
adc
outsb
jae
leave
push
sarl
pop
leave
and
dec
paddq
sbb
cltd
popf
pop
mov
inc
fisubs
sbb
inc
mov
push
pop
and
push
adc
addr16
daa
sti
pop
cmc
ss
inc
mov
scas
dec
cmp
in
scas
stos
inc
dec
sbb
pusha
pop
cs
faddl
cmp
sub
rclb
out
outsb
inc
loope
ljmp
faddl
inc
gs
in
and
es
add
push
fstpl
push
mov
sbb
scas
ja
imul
dec
or
aaa
and
bswap
add
push
test
mov
ja
push
pop
push
and
inc
je
mov
adc
bnd
jb
scas
add
sar
bound
jp
ficoms
loopne
popf
dec
jno
adc
inc
adc
vmovshdup
imul
test
or
push
call
inc
andb
mov
xchg
inc
xor
sbb
shlb
mov
lcall
xor
jae
dec
pushf
in
dec
js
push
inc
and
loop
rorb
imul
xchg
push
rclb
jp
sbb
dec
jg
adc
xchg
and
jg
stc
mov
xchg
or
in
xchg
dec
cmp
sub
lret
rcrb
push
mov
mov
pop
leave
push
dec
mov
mov
jmp
test
inc
rcrl
dec
repz
xchg
call
xorl
add
or
in
jb
orb
push
mov
mov
or
pop
mov
inc
adc
fmull
cmp
jns
cli
fldl
mov
pop
lods
jnp
push
pop
pop
js
mov
and
adc
pop
jb
mov
xor
outsb
sub
xchg
rol
hlt
stos
xor
lahf
and
mov
adc
xchg
adc
mov
jo
pusha
mov
or
xor
imul
adc
in
jg
xchg
das
movsb
int
cmp
inc
add
and
ret
pop
test
cmp
xchg
rcrl
push
loop
mov
je
inc
enter
popa
lds
cltd
xorb
cmpsb
mov
cmp
inc
pop
cmc
sti
xor
mov
pop
mov
je
dec
push
jae
xor
fbstp
pop
sbb
out
inc
push
dec
sub
add
xor
mov
push
xchg
mov
adc
jle
out
xor
add
xchg
cmp
loopne
movsb
mov
add
repz
fsubr
stos
pop
jno
imul
jbe
outsl
pop
add
ja
add
inc
ja
movsl
cmp
push
cmpl
mov
sbb
xchg
mov
add
stos
sbb
test
cmp
es
cmp
adc
test
lods
or
dec
pop
pusha
mov
sbb
loop
xchg
jg
mov
into
popa
daa
lds
jne
mov
adc
insb
inc
jne,pn
push
data16
das
lods
adc
sbb
xchg
loopne
adc
pop
cltd
enter
test
and
enter
insb
push
lods
sti
das
and
cs
pop
test
rorl
xor
push
test
pop
sbb
sbb
outsb
inc
jge
jecxz
push
xor
in
aas
dec
xchg
mov
or
xor
leave
into
add
push
fcmovnb
dec
ret
outsl
mov
mov
inc
std
in
repz
or
and
in
push
fdivrl
mov
jnp
pusha
and
mov
ljmp
xchg
lods
lea
xor
rcr
mov
xchg
cmp
cmc
flds
mov
lret
cmp
dec
xchg
sub
mov
jl
mov
or
movsb
mov
dec
test
cmp
push
xchg
sub
adc
in
and
outsb
xor
mov
imull
adc
test
rorb
in
pop
cltd
mov
add
push
cltd
outsl
ret
cmp
movsb
mov
dec
jge
daa
mov
js
xchg
fs
inc
sub
and
inc
cmp
push
xor
xor
adc
or
xchg
fcomps
lahf
sbb
lret
add
sub
jnp
sub
scas
out
sbb
fdivs
or
in
loop
add
int
or
fisubs
popf
ds
std
rol
lret
popa
sarl
lods
sbb
aam
or
xchg
in
loop
add
xchg
xchg
sbb
adc
jbe
xor
pusha
sbb
pop
orb
cs
inc
imul
mov
xchg
add
dec
enter
ja
inc
or
inc
cmp
shll
les
in
sub
nop
pop
das
cmpsb
nop
jmp
xor
fs
mov
roll
adc
jns
scas
clc
insl
je
mov
push
cmp
sbb
fldenv
sbb
daa
pop
mov
inc
test
dec
stos
pop
mov
loopne
imul
xchg
jno
gs
sbbl
and
idiv
xchg
sti
and
js
pop
mov
adc
xchg
hlt
subb
mov
mov
aas
sub
jecxz
into
cmp
fsubp
fsubl
dec
lock
pop
jp
loop
xchg
loopne
popa
lods
jae
lods
in
bnd
mov
mov
cltd
mov
loope
cmpsb
mov
jmp
rcll
sub
xchg
add
jmp
inc
push
or
cmp
test
hlt
or
mov
ljmp
jne
sbb
mov
jae
and
int3
mov
lods
mov
mov
ljmp
rorl
inc
push
aas
inc
adc
ds
pop
jmp
aas
outsl
aam
popa
insb
xchg
xchg
sbb
inc
pop
into
fnstenv
cmpl
jno
inc
mov
adc
je
fs
dec
add
inc
pop
jns
or
mov
pop
sbb
pop
and
adc
pop
std
shrl
insb
sub
jns
push
dec
sbb
jmp
sub
fsubrs
adc
mov
or
movsl
mov
nop
dec
mov
xor
imul
mov
ficomps
sub
jae
iret
jecxz
outsb
add
sbb
sub
icebp
insl
push
cli
stos
pop
insl
enter
jns
jne
push
imul
js
jecxz
bound
mov
cwtl
insl
sbbl
mov
shll
pop
addr16
fsub
sub
push
les
push
out
mov
ja
movsl
jo
xchg
mov
movsb
jp
ret
jge
pop
mov
ret
shrb
test
sub
aam
jle
fwait
push
call
mov
mov
xor
xchg
shlb
xchg
lds
out
out
mov
les
test
les
fidivrl
sub
inc
adc
add
daa
stos
mov
call
pop
fildll
repnz
mov
bound
mov
xor
imul
pop
cwtl
cmp
jno
lahf
pop
aad
jno
int3
fs
lods
cmp
xchg
jne
out
mov
inc
pop
call
ret
mov
out
jo
dec
sbb
int
ds
mov
cwtl
test
sbb
inc
push
aad
cmpsl
adc
xor
addl
insb
insb
cmp
repnz
and
xor
mov
mov
xlat
inc
inc
xchg
mov
push
mov
push
sbb
mov
lret
adc
ds
jl
in
shld
adc
int3
repz
dec
pop
imull
leave
pop
xor
xchg
imul
shll
mov
sbb
lock
lea
cmc
or
mov
rorb
mov
jbe
or
repz
mov
bound
xor
loop
inc
rcrl
popf
mov
arpl
jmp
jmp
mov
add
sbb
mov
xchg
add
mov
das
mov
repnz
lret
xchg
jmp
xchg
insb
cli
jno
add
scas
aas
sbb
mov
mov
cmp
sahf
cmp
test
mov
jne
push
loop
pop
mov
fdivrs
inc
sbb
mov
push
daa
int
dec
sub
and
xchg
jg
fsubrp
cmp
push
pusha
cwtl
lock
loope
pop
andl
testl
scas
ss
loopne
cmp
jo
test
aaa
sub
dec
and
loop
dec
stos
xor
aas
pop
frstor
push
stos
rcrb
mov
outsl
inc
insl
in
fldenv
dec
addr16
push
adc
sub
jo
mov
jb
cltd
shll
int3
subb
or
mov
jecxz
insl
imul
sti
pop
adc
jnp
cmp
into
int3
mov
ja
push
cmp
add
sahf
xchg
cmpsb
mov
ret
cmp
jp
insl
ljmp
fsubl
adc
rcrb
in
push
xlat
int3
push
jne
xchg
dec
cld
add
mov
test
aad
out
loope
in
cld
addl
icebp
test
mov
xorb
xchg
sbb
bound
pop
ja
clc
shlb
adc
add
mov
pop
enter
aad
push
arpl
stos
push
ret
filds
add
movsb
push
cmp
mov
adc
mov
adc
xor
sub
inc
or
sbb
imul
dec
mov
pop
jg
inc
addr16
pushf
sbb
fsubrl
fists
cld
fdivrs
mov
push
mov
xor
pop
add
mull
arpl
and
rorl
popa
adc
inc
cli
cld
shlb
jnp
and
sahf
popa
pop
sub
dec
out
loopne
icebp
cmp
mov
bound
mov
push
sbb
xor
in
cmp
xchg
cmp
adc
sub
imul
inc
mov
jecxz
pminsw
mov
jg
in
sbb
or
out
js
xchg
jno
inc
xchg
push
sbb
xor
mov
pop
loopne
fsubl
mov
cld
repz
jecxz
xchg
iret
test
cmpsl
lcall
pop
xchg
sbb
inc
repnz
jle
dec
xchg
icebp
push
xchg
adc
cmp
mov
sbb
lahf
mov
jmp
loopne
push
jns
xor
ljmp
jno
jecxz
aas
lock
jge
jb
xlat
cmp
out
leave
or
jno
or
imulb
bound
dec
popa
icebp
scas
outsl
ss
push
nop
mov
in
sbb
pop
xchg
popf
mov
cmp
jle
cmp
push
enter
fs
mov
in
dec
pushf
jle
mov
xor
sbb
into
jmp
mov
fwait
or
push
xchg
jle
pop
xor
add
add
inc
sbb
in
adc
mov
mov
xor
mov
and
xchg
scas
jne
addr16
cs
adc
add
aam
outsl
push
sbb
rcr
lods
push
inc
mov
repz
pand
bswap
hlt
dec
xchg
in
stc
fidivl
aad
inc
mov
and
popa
push
xchg
pop
shll
lods
dec
hlt
jno
in
in
or
pop
push
add
push
lea
gs
add
dec
int3
mov
or
cmpsb
ss
cmp
fs
out
mov
mov
mov
mov
mov
cmpsl
popf
loop
sbb
add
sbb
pusha
sahf
inc
stos
mov
loope
mov
xor
xchg
lret
adc
mov
lock
mov
stos
add
loopne
outsl
xchg
movl
je
cli
push
cmp
rcr
and
mov
pop
and
jl
push
outsl
push
push
mov
cmp
leave
int
lock
jmp
ja
rcll
push
mov
push
xor
mov
mov
addr16
xor
jb
outsl
mov
ja
adcb
mov
daa
notb
gs
jl
and
xorb
es
add
or
insl
call
fs
arpl
xor
and
outsl
cwtl
pop
adc
loopne
lret
fs
jo
xor
jecxz
mov
push
push
push
jg
add
inc
pop
pop
mov
or
movsl
lods
add
cmp
mov
out
mov
outsl
push
inc
xor
arpl
cs
out
fs
jecxz
es
vfrczps
in
cmp
test
repz
jnp
cmpb
in
mov
daa
or
into
xchg
and
jp
lret
mov
out
enter
mov
mov
rolb
scas
or
pop
cs
ds
arpl
pop
add
js
mov
out
fidivs
popf
in
ret
cmp
les
movb
mov
dec
cmp
pop
test
inc
mov
hlt
aad
sub
inc
shlb
mov
les
xor
xor
dec
mov
dec
mov
rcl
xor
cmpsb
stos
add
rcrb
jmp
jno
leave
cmp
fsubrl
loop
out
imul
jo
xchg
inc
test
loope
ret
jg
stc
icebp
sub
mov
pop
subb
dec
es
xor
mulb
std
or
push
mov
leave
or
push
repz
stos
shl
add
xchg
dec
shl
movsl
mov
int
or
xchg
loope
mov
sub
mov
hlt
repnz
mov
out
es
divl
jmp
mov
mov
fldcw
fnstsw
sub
fsts
sub
lock
push
cmp
push
lds
in
cmp
pop
and
sbb
rcrb
dec
jb
ljmp
mov
cli
arpl
imul
sbb
xchg
and
mov
fstl
adc
call
ror
jle
jmp
pop
push
mov
add
insb
dec
data16
cmp
or
jp
mov
and
xlat
and
push
aad
sbb
in
dec
imul
inc
ss
sti
push
pushf
mov
cmp
sbb
divl
movsl
scas
insl
adc
js
adc
mov
test
pop
cs
outsl
es
aas
ffree
nop
sbb
pop
addl
dec
ss
scas
arpl
aaa
stos
lret
mov
mov
jmp
testl
jg
js
push
and
test
xor
xor
push
mov
dec
sbb
dec
and
xchg
fwait
lret
into
cli
xchg
js
inc
lahf
mov
test
hlt
jecxz
xchg
loopne
addr16
sbb
fisubrs
xchg
iret
xor
sbb
adc
xor
lds
cs
fisttps
andl
jp
cwtl
in
ret
adc
mov
inc
push
scas
push
das
sbb
loop
jle
pop
xor
mov
mov
lock
or
call
popa
mov
rcr
dec
mov
data16
out
sbb
mov
jns
sbb
push
dec
push
push
outsb
mov
and
out
adc
sbb
scas
inc
rcrb
sar
push
cmp
jne
ret
filds
push
sbb
lret
movsl
mov
js
xchg
ss
xor
and
mov
jns
ss
mov
in
fcomps
out
push
fstpl
xchg
ret
fidivl
mov
lock
mov
out
std
call
lea
cld
and
xor
hlt
loope
arpl
mov
jo
movsb
lods
enter
lret
and
pop
cmp
in
jo
js
ret
jmp
mov
lods
dec
cwtl
and
insl
mov
cltd
clc
shll
jl
xchg
jae
fcoms
clc
mov
inc
dec
xchg
push
jmp
cmp
xchg
adc
inc
push
lret
negl
lods
enter
lods
test
shlb
adc
cmc
sbbl
xchg
xor
pushf
sub
enter
cmp
sbb
std
popf
pop
std
pop
mov
gs
cmp
cmp
xlat
jns
decb
push
cmp
jecxz
xchg
inc
mov
adc
fsubs
push
sub
push
repz
xchg
sub
cmpsb
add
insb
jge
and
call
rorb
push
stc
add
and
sub
lds
rcrb
jmp
mul
push
mov
insl
repnz
jns
ss
jae
sub
mov
mov
arpl
aas
inc
jg
adc
jle
sbb
and
aad
ja
mov
xchg
xor
mov
mov
mov
sbb
add
sbb
mov
lcall
adc
pop
pop
sti
clc
pop
and
ljmp
inc
xchg
sbb
add
jl
xchg
sub
pop
mov
adc
or
push
frstor
call
lods
push
xchg
lret
dec
mov
mov
and
dec
divl
mov
xor
mov
cmp
enter
mov
or
pop
pop
loope
std
push
pop
bound
pop
test
xchg
aam
adc
fwait
hlt
test
ror
pop
mov
mov
cld
repz
daa
lods
ja
xchg
and
add
push
add
xchg
ljmp
adc
loopne
mov
pop
xchg
xor
mov
inc
push
pop
dec
arpl
aad
ffree
and
add
test
insb
loope
adc
rcl
sbb
or
ret
or
jg
std
mov
mov
aam
enter
fs
jl
push
das
mov
mov
xchg
cmp
jecxz
scas
dec
popf
and
xrelease
fisttpll
push
sub
cmpsl
es
push
jg
sub
outsl
mov
sbb
xor
mov
test
test
int
popa
arpl
repz
jmp
mov
bound
pop
pop
jp
inc
outsl
and
aaa
shlb
icebp
dec
scas
sbb
sahf
les
es
pop
cmp
dec
pop
push
cmp
iret
inc
loopne
in
div
das
int
push
pop
pusha
ja
push
es
int
xor
sbb
jge
dec
push
insl
lahf
sbb
in
push
jp
sbb
js
sahf
pop
push
jnp
pop
dec
loope
daa
andb
aaa
xchg
test
mov
loop
xchg
cmp
dec
mov
into
pop
or
pop
sar
mov
insl
mov
mov
test
sbbb
movsb
xor
pop
bound
das
pushf
add
mov
hlt
aas
push
sub
mov
push
lea
das
lret
push
and
outsl
out
rcrb
push
sub
inc
out
cwtl
push
getsec
lock
push
push
int
jno
repnz
jnp
mov
xchg
aad
sahf
xchg
sbb
stc
ret
cmp
dec
push
pop
xchg
xorb
jl
sub
shrb
cwtl
pop
cmpl
cs
lcall
dec
popa
pop
cmpsb
add
cmpsb
outsl
dec
pop
call
push
pop
or
ss
lcall
xchg
and
mov
repz
sbb
fmulp
in
js
testl
pusha
sub
ret
push
pop
or
jnp
loope
mov
jg
dec
mov
jl
xchg
lods
adc
sub
sub
idivb
lock
and
mov
test
test
fbstp
xchg
cmpsb
mov
call
pop
lahf
pop
lahf
in
push
sub
fistpll
gs
mov
negl
fnstenv
xchg
push
push
xchg
shl
cmpsb
inc
popa
rcll
adc
push
inc
aaa
pusha
or
mov
dec
inc
cmp
aaa
sub
adc
int3
add
inc
lods
sub
xchg
jge
addr16
sub
mov
dec
es
pop
aaa
dec
mov
and
test
pop
cmp
cmp
das
cli
pop
sub
dec
add
jmp
add
pop
jp
cmp
xchg
test
and
push
lock
pop
cli
and
iret
aas
out
sub
orl
cmp
sub
and
mov
pop
mov
mov
jae
mov
ret
divb
sbb
xchg
repz
leave
and
out
nop
jecxz
xchg
lock
insl
pop
aad
aaa
or
inc
sarl
hlt
xchg
aas
jg
add
pop
sarb
push
in
cld
push
stos
outsl
cmp
movsl
mov
std
push
mov
ret
shll
add
sub
jg
xlat
push
mov
push
ja
negb
movsl
and
cli
jp
lahf
cmp
jno
pusha
mov
cmp
daa
sub
pop
pop
popa
adc
aad
decb
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
arpl
pop
mov
pop
jp
sbb
sbb
cmp
jo
in
out
daa
cld
loop
mov
data16
sbb
xor
pop
pop
or
insl
out
out
xchg
pop
xor
sbb
add
adc
sub
or
xor
mov
js
sti
xor
xchg
pop
insl
orb
and
pop
dec
jne
in
xchg
push
adc
sbb
jg
das
sub
cwtl
dec
push
sahf
nop
addb
pop
jg
pop
adc
lahf
pop
add
fcmovnu
or
and
ss
inc
xor
in
jp
in
mov
mov
out
sub
es
fisubrl
test
jl
pop
stos
add
xor
lret
loopne
test
sahf
in
and
dec
adc
in
fsubrl
jns
mov
xchg
push
movsb
shlb
or
loop
int3
cmp
lea
push
int
xor
jne
mov
add
ljmp
aaa
lcall
inc
dec
icebp
jge
mov
cmp
inc
mov
mov
pop
jns
insl
out
xchg
cs
nop
in
xor
inc
mov
jbe
test
cmp
pushf
notb
sbb
mov
inc
adc
push
push
inc
ja
addl
mov
push
cmp
aam
rclb
jbe
cmp
adcl
cmp
fxch
arpl
xchg
inc
or
jae
das
out
push
xchg
orl
sub
push
pop
stc
cwtl
cmp
bound
jg
and
divl
or
or
mov
xrelease
jg
test
xor
shrl
mov
mov
and
cmpsl
gs
shlb
push
cmp
mov
lods
mov
push
dec
ljmp
shlb
lods
adc
mov
push
adc
das
mov
xchg
add
aad
sbb
repnz
ds
jo
iret
call
cltd
add
fistps
lods
out
inc
mov
dec
mov
pop
and
outsb
sub
add
hlt
fucomp
fbstp
fwait
adc
shll
sbb
int3
inc
mov
out
ljmpw
lods
out
adc
cmp
xor
push
dec
nop
sbb
jbe
outsb
mov
pop
mov
das
fnstenv
into
sub
hlt
or
daa
xchg
cld
add
xchg
adc
test
mov
jp
aaa
ret
cwtl
cs
imul
inc
ret
pop
jl
gs
jl
push
je
cld
jne
sub
mov
cmp
add
out
jae
stos
and
in
inc
mov
sahf
pusha
cmp
cltd
push
in
mov
add
frstor
and
and
jno
mov
aaa
imul
daa
test
xchg
loope
loope
les
bound
not
adc
push
jg
lret
pop
addr16
clc
inc
jle
inc
sub
sbb
mov
xor
xchg
xlat
pop
gs
mov
push
insl
cli
iret
call
arpl
pushf
and
js
cmp
xchg
ljmp
nop
cmpsl
push
ds
push
xlat
gs
enter
int
mov
pusha
fs
mov
jae
fsubl
lds
or
out
stos
xchg
inc
enter
and
outsb
xlat
shll
in
or
into
xor
vandnps
das
movsl
into
out
push
loope
fnsave
loop
xor
pop
push
call
mov
add
dec
dec
in
ljmp
data16
ss
sbb
sahf
std
insb
push
mov
cmpsb
sbb
mov
cmp
fisubrl
enter
adc
push
insb
pop
lock
xchg
scas
lret
lock
sbb
cld
adc
int3
outsb
pop
ljmp
push
push
jle
es
jb
iret
mov
cmp
jnp
add
add
lcall
adc
adc
add
lods
dec
arpl
or
pop
cld
sub
inc
lods
mov
add
or
mov
jg
pop
push
and
mov
xor
mov
stc
fsubrl
hlt
dec
dec
xchg
jmp
sbb
fcomp
jge
inc
mov
lods
stos
dec
adc
inc
xchg
fsubl
jmp
jmp
inc
pop
and
lods
add
push
jne
test
sbb
pop
or
jno
push
cmp
adc
add
in
adc
rcrl
and
imul
adc
dec
outsb
push
fidivrl
mov
inc
xchg
aaa
stc
aad
add
decb
mov
enter
je
add
push
rcll
push
sub
inc
aaa
ret
sub
inc
nop
out
lcall
mov
popf
lahf
loopne
insl
lahf
fs
roll
push
xor
leave
aad
push
in
leave
popf
add
cltd
mov
sbbl
shrb
pop
pop
or
cld
cmpsl
jmp
xor
cmpsl
stc
push
push
mov
fwait
xor
mov
and
xor
data16
dec
cmp
jne
push
xchg
dec
adc
sahf
lock
xchg
xor
adc
cmpb
cmp
pop
xor
jne
pop
dec
dec
imul
shl
xchg
mov
sub
hlt
ret
add
js
inc
fxch
ljmp
inc
mov
out
stos
nop
xor
mov
rol
push
mov
adc
shll
cmp
aas
sub
push
inc
xor
fldenv
adc
push
and
or
aaa
dec
xlat
repnz
rcll
sbb
js
fnstcw
inc
out
jno
call
adc
fadd
cli
cmpb
dec
inc
pop
push
std
movsl
and
ljmp
dec
std
orb
nop
mov
mov
mov
pop
mov
mov
test
jp
rcrb
adc
or
jne
ss
pop
mov
xchg
lahf
push
fsubl
rcr
xchg
outsb
or
test
les
testb
in
scas
repnz
dec
jge
dec
or
xor
push
dec
insl
hlt
mov
mov
cmp
jb
into
lahf
xor
cmp
dec
sub
push
jmp
pop
in
mov
lcall
push
cs
shlb
faddp
das
cmp
mov
cld
sti
clc
loopne
mov
inc
loopne
and
ret
xchg
fmuls
pop
mov
cs
sub
adc
jno
xchg
rorl
cs
pop
dec
cmc
repz
filds
xor
outsl
and
add
andl
inc
outsl
xlat
jl
int
mov
sti
push
mov
mov
mov
mov
jo
data16
mov
sub
lock
mov
addr16
fwait
sbb
popa
ljmp
cli
sbb
aaa
jg
sub
enter
fsubp
insb
mov
push
dec
inc
stos
jl
mov
mov
push
aad
sub
pop
adc
bound
out
jl
dec
gs
xor
add
cmp
xchg
inc
in
test
incb
xor
xlat
stos
adc
fucomi
cwtl
pop
xor
in
loop
inc
scas
jecxz
dec
dec
les
loope
mov
xchg
jp
mov
dec
sub
add
fisubrl
dec
lock
push
jge
xor
sbb
cmpb
mov
xor
add
xor
inc
repnz
scas
ret
cmpl
push
icebp
pop
int
adc
xchg
stos
mov
mov
pop
mov
rorl
lea
lea
adc
and
cmpsl
gs
js
stos
insl
sahf
sub
jo
push
out
dec
arpl
shll
or
push
mov
jg
ret
stos
cli
fs
mov
cmpsl
or
fnstenv
mov
std
or
icebp
repz
out
js
adc
fwait
jge
scas
mov
jns
inc
insb
pop
ljmp
add
movsb
ja
push
cltd
xor
movsl
pop
pop
push
cmc
cld
shll
out
push
mov
fnop
dec
outsl
dec
xchg
pop
neg
mov
mov
pop
insb
mov
loop
xor
pop
das
push
out
int3
out
outsb
das
dec
inc
ljmp
add
rorl
cmp
adc
or
mov
insb
inc
shl
or
adc
fiaddl
out
pop
dec
cld
shll
iret
ret
stc
jmp
sahf
fdivrl
in
push
pop
rcr
sarb
add
xchg
jae
mov
rcll
bound
jno
cmc
sub
pop
adc
sti
scas
inc
push
mov
mov
faddl
out
ret
dec
mov
or
add
stos
jnp
push
repz
sti
gs
adc
hlt
xor
add
pop
std
sub
push
mov
out
notl
jmp
insl
fs
or
sub
push
jecxz
push
jnp
sbb
cltd
mov
add
in
mov
mov
repnz
jmp
iret
sbb
fs
repnz
shrl
sbb
jne
enter
mov
ds
jmp
aam
movsl
pop
dec
jne
out
or
cmpsl
and
or
dec
scas
ja
or
hlt
push
lds
fwait
jbe
xchg
and
sbb
pop
ljmp
daa
sahf
out
testb
stos
inc
pop
mov
mov
aad
or
pop
pop
and
fdiv
xchg
test
test
add
push
popf
ljmp
xchg
shl
mov
shl
dec
cmpb
insb
lods
jecxz
xchg
mov
test
hlt
out
ds
sbb
cmpl
ss
movsb
mov
pop
add
jbe
insl
push
jle
in
out
dec
stos
addr16
mov
mov
lods
pop
pop
lahf
nop
adc
and
fwait
jne
lahf
or
pop
cmp
pop
adc
nop
jno
add
in
inc
les
pop
adc
mov
int3
add
adcl
clc
jne
and
and
mov
pop
fdivl
cmp
rclb
pop
jns
arpl
push
int
repnz
dec
scas
jns
pop
fldcw
fsubrs
icebp
add
dec
in
xchg
repz
shl
lock
push
jae
xor
lods
push
cmp
fimuls
jns
or
das
fdivs
or
icebp
push
stos
mov
inc
lods
jno
dec
sbb
mov
jle
ss
sbb
mov
dec
cmpsb
jae
lcall
jl
lret
mov
sub
ret
cmp
adc
mov
clc
sub
jg
ljmp
aam
js
int
xchg
in
xor
adc
xor
dec
pop
out
mov
push
not
push
mov
xchg
inc
pop
jmp
mov
mov
push
mov
mov
pop
add
fcompl
pop
xor
fmull
push
mov
jno
js
pop
movsl
nop/reserved
cmp
lods
lret
sub
pop
sbb
ret
stos
push
lock
xor
jmp
movsl
cmp
jns
inc
lret
arpl
mov
pushf
movsl
dec
shl
aad
pop
aad
dec
fdivrs
pop
or
jcxz
dec
arpl
push
sub
das
lahf
sub
daa
movsb
and
lahf
mov
stc
pusha
sub
iret
mov
fxch
fdivrs
lea
cmp
jo
orl
dec
mov
mov
xlat
popa
aas
mov
ror
xlat
sbb
fildll
cmpsl
xchg
mov
clc
popa
lahf
sbb
mov
in
mov
in
sti
insb
in
lock
xchg
mov
xchg
outsl
in
movsl
dec
leave
jp
fadds
jnp
aas
jg
loopne
orb
xchg
sub
inc
mov
cmp
mov
add
aam
inc
or
mov
dec
and
jp
mov
add
ljmp
movsb
jg
shrb
and
dec
call
cmp
ss
mov
test
xchg
pop
xor
fsubrs
and
adc
packssdw
add
fistpll
sbb
pop
and
imul
scas
pop
in
into
test
lea
sbb
stos
jno
xlat
push
cmp
jecxz
pop
jne
sub
aaa
inc
nop
leave
movsl
cmp
jg
sub
xchg
mov
jle
pop
sbb
mov
cmp
stc
rorl
imul
aam
cltd
adc
data16
in
repnz
aad
cmp
lea
and
dec
xor
jo
nop
xchg
mov
andb
mov
push
test
mov
or
cmp
in
sar
xlat
jg
loopne
sbb
dec
das
jp
shrb
imul
sti
adc
lea
movsb
dec
mov
cmp
push
sub
dec
push
jmpw
out
outsb
rolb
xchg
cmp
sbb
lahf
sbb
loope
jge
xor
jnp
orl
mov
outsl
xchg
faddl
jle
movsb
xor
pushf
push
mov
or
adc
add
jae
push
repnz
and
js
mov
fstpl
sbb
sub
inc
ja
pop
arpl
daa
pop
mov
clc
ja
mov
lret
jo
mov
xchg
cmpsl
test
clc
add
insb
mov
jmp
in
dec
popa
jb
sub
in
jo
sub
cwtl
sbb
add
pusha
inc
ds
aaa
adc
sti
fsubr
xchg
lea
popa
dec
fsubrp
add
lock
popf
stos
cmpb
das
arpl
rorl
or
push
mov
push
jp
and
push
outsw
jecxz
inc
xor
pusha
push
or
add
fcom
mov
push
dec
addr16
mov
dec
and
clc
dec
shl
repnz
push
sub
notb
sub
mov
fdivrl
pop
aaa
mov
lret
adc
add
stos
add
inc
dec
jb
sbb
or
xchg
xchg
mov
insl
xchg
or
jb
outsl
ljmp
or
sbb
out
sub
pop
daa
mov
jns
enter
xchg
cld
out
mov
stos
pop
insl
sub
mov
push
enter
adc
in
dec
lcall
or
stos
lods
push
add
pop
mov
and
cmpsb
in
xchg
test
cmpsl
shll
clc
sub
fidivl
js
xor
push
jnp
gs
xor
sub
in
cld
js
cwtl
mov
mov
mov
fsub
lea
adc
imul
mov
in
jbe
jb
into
imul
sub
lahf
push
push
push
sbb
push
adc
sub
out
or
jae
ret
mov
add
scas
dec
mov
and
fsubrs
addb
and
nop
push
jbe
pop
js
dec
push
xchg
mov
in
mov
adcl
sub
imul
test
andl
push
es
xchg
jo
ret
mov
popf
stos
lcall
scas
dec
push
lcall
or
roll
cmp
sub
addr16
loope
cmp
push
lods
cmp
push
lret
lods
repz
rcrl
xchg
push
xlat
inc
mov
mov
out
orl
push
stc
ds
fs
fisttps
inc
cld
push
out
shlb
in
cmpl
pop
mov
in
xchg
inc
lret
fbld
fsubrs
adcl
pop
fiaddl
ret
sbb
ret
pop
mov
adc
lock
aas
pushf
ja
int
or
fldt
push
js
jmp
and
aam
cmpsb
push
test
into
xchg
or
aaa
add
sub
jno
push
clc
outsl
das
jno
stos
jl
add
pop
adc
jge
and
icebp
xchg
popf
int3
mov
jl
lock
jp
mov
inc
lods
mov
daa
mov
cli
and
ficoms
aaa
nop
add
call
push
sub
korw
repz
icebp
nop
dec
cmp
xlat
mov
aas
sbb
jl
inc
fistpll
ret
in
sbb
sub
jmp
cmp
or
sarb
sbb
mov
les
movsl
mov
into
sbb
pop
mov
push
inc
xchg
push
imul
inc
inc
dec
jmp
push
and
add
dec
xchg
enter
xchg
cmp
add
jo
sub
icebp
jge
cmpsl
out
cmpsw
push
mov
mov
xchg
jmp
sbb
jns
add
in
test
data16
cmpsl
adc
lahf
add
ljmp
add
stos
mov
dec
add
outsl
mov
adc
mov
scas
iret
sub
xchg
sub
sub
sbb
adc
imul
adc
mov
inc
pop
lods
aam
xlat
pop
xchg
ljmp
shrl
add
sbb
call
push
repnz
repnz
and
outsb
nop
xor
jp
sub
push
jcxz
icebp
sub
out
roll
cli
outsl
leave
sub
leave
mov
jae
shl
push
jbe
pop
imul
push
repnz
ret
xor
out
in
cmp
push
mov
xchg
mov
dec
pop
adc
movsb
popf
xchg
dec
int3
pop
or
sub
in
repnz
test
dec
pushf
sbb
mov
rcr
mov
test
jmp
xor
or
cmp
gs
sbb
and
mov
popa
mov
test
jno
rorb
mov
lea
ja
addr16
cmc
and
or
cmp
inc
inc
pop
push
jle
shlb
push
add
fisttpll
sbb
xchg
mov
xor
sub
xor
mov
push
pop
sbb
add
loope
and
sbb
aad
xchg
mov
mov
push
sbb
inc
jg
loop
scas
lahf
dec
lahf
cmp
enter
lahf
dec
jnp
add
xor
mov
mov
scas
or
mov
push
stos
xchg
lock
jne
xor
cmp
enter
sub
cs
push
ret
mov
mov
into
inc
insb
loope
push
xchg
and
or
fiadds
cmp
lcall
fsubl
cltd
movsl
pop
adc
dec
push
loope
mov
cli
imulb
cld
sub
into
sub
jg
sbb
rcr
sbb
call
fnstenv
jnp
mov
sbb
ja
adc
les
lcall
arpl
cmp
sbb
xchg
mov
frstor
outsb
fadd
cmpsb
mov
das
ss
adc
cmp
fwait
cmpsb
mov
mov
repz
lahf
rcrb
subb
insl
dec
aaa
lea
insl
push
iret
mov
rcll
mov
cld
scas
xchg
inc
fidivrs
and
sbb
test
mov
sysret
adc
push
fldt
push
scas
hlt
setnp
push
iret
dec
inc
cmpsb
in
sbb
popf
dec
inc
adc
push
scas
push
dec
push
call
push
fsubrl
and
xchg
int
add
shll
mov
dec
dec
cs
dec
nop
mov
xor
push
cmp
loopne,pt
int
xchg
pusha
cld
xor
sbb
push
insb
jle
xchg
jno
xchg
dec
mov
dec
outsb
jmp
or
mov
movsl
movl
in
pop
jl
pop
cmp
mov
inc
lcall
mov
mov
shr
lahf
sbb
mov
sbb
xor
fwait
or
clc
pop
xchg
push
lret
jp
mov
pop
stos
mov
cmovle
jg
lea
mov
mov
sbb
xchg
and
xchg
out
push
jle
adc
pshufw
stos
mov
fdivrl
jg
enter
push
mov
jne
rcrl
jg
int
jbe
inc
test
ret
mov
pop
out
insb
fld
inc
movsl
cmpsl
jnp
int3
push
mov
xchg
imul
inc
push
add
aaa
lods
adc
addr16
lods
or
lods
rcrl
cmp
pusha
or
mov
push
stc
add
fsubrs
xor
cld
push
imul
jmp
adc
outsb
sbb
adc
mov
xor
mov
mov
jo
aaa
cltd
enter
jbe,pn
outsb
std
cld
jns
add
cmp
dec
jbe
out
je
xchg
leave
push
mov
or
testb
mov
fwait
add
jns
xchg
lock
fisttps
psubusb
sbbb
and
jecxz
cmp
cmpsl
jge
adc
lahf
cmpsb
xchg
lret
pop
lock
and
mov
xor
das
call
jg
pop
cmpsl
pop
xor
test
loopne
imul
mov
and
sbb
pand
push
jno
push
aaa
lret
popf
rcrb
bound
in
dec
xchg
out
inc
les
in
sbb
push
into
pop
jge
sbb
push
mov
mov
pop
adc
lea
movsb
lcall
shlb
shll
and
fadd
pop
lds
xlat
xchg
ss
and
adc
xchg
cltd
cld
sti
pop
pop
xchg
adc
pop
repz
in
inc
in
cmpsl
jmp
fwait
mov
xchg
adc
mov
lods
jae
jg
add
data16
lahf
cld
mov
cmp
aaa
mov
xchg
adc
mov
ja
mov
sbb
add
mov
addl
loope
xor
pushl
dec
out
loop
pop
jo
pop
xor
push
xlat
pop
gs
fwait
hlt
xor
jl
test
out
addl
xchg
in
mov
inc
xchg
pop
aam
fwait
in
adc
jo
cmp
icebp
dec
aam
rclb
mov
imul
into
lret
dec
add
loopne
fiaddl
mov
dec
aas
xchg
std
fldenv
jne
cmp
xor
xor
test
inc
stos
stc
and
or
jbe
mov
cmp
add
js
pop
xlat
xchg
cmpb
stc
push
jbe
lods
aam
cwtl
fistpl
shlb
js
mov
loope
nop
sbb
pusha
pushf
and
fcmovbe
push
test
adc
in
lahf
and
inc
xor
test
test
and
xchg
jl
imul
ret
repz
xor
ret
xchg
and
xorl
dec
popa
xchg
xchg
arpl
les
lcall
lret
dec
cltd
mov
pop
fsubrs
gs
mov
xchg
aas
enter
dec
sbb
or
fdivrs
rcrb
jl
addr16
add
push
out
pop
push
cmp
fisubrs
or
inc
jb
hlt
fistps
subb
cmp
out
pop
jae
pop
shll
push
scas
xchg
sbb
or
imul
push
sbb
lds
movsb
xor
and
icebp
addr16
mov
mov
push
daa
adc
xor
and
sub
dec
repz
cmpsl
jecxz
std
ljmp
pop
push
push
hlt
mov
pop
arpl
mov
repz
cmp
pop
lcall
imul
sub
nop
xchg
int3
push
inc
add
inc
lcall
dec
icebp
dec
xor
cwtl
lret
enter
jo
aaa
ljmp
daa
out
and
loopne
repz
or
push
fimuls
addl
inc
loop
into
std
aas
loop
or
outsb
and
mov
mov
fisttpll
repz
cmpsb
push
insl
repnz
arpl
sub
fisttpl
pop
in
xchg
push
dec
mov
dec
push
xor
das
sbb
gs
dec
inc
push
pop
movsl
xor
fdivp
mov
shrl
jae
mov
mov
mov
jae
lret
mov
mov
sbb
mov
mov
addr16
jns
fstpl
out
movsb
std
dec
fs
push
ret
pop
pop
fbld
dec
and
sub
out
pop
dec
inc
mov
mov
lods
dec
mov
rcl
shlb
cmp
testb
jne
lods
mov
enter
insb
into
pop
and
sbb
fisttps
add
icebp
push
add
xor
inc
sarl
mov
dec
and
add
mov
push
mov
scas
xchg
mov
mov
mov
inc
inc
sub
in
gs
sbb
test
cli
daa
nop
rcrb
test
enter
mov
stos
mov
movsb
lock
icebp
cmpl
push
add
lods
xchg
xchg
sub
enter
mov
aad
in
out
hlt
cmp
lds
shlb
dec
sub
lret
dec
call
sbb
sbb
pop
js
pop
and
lock
in
xor
xchg
add
insb
mov
jns
mov
sarb
mov
cmpl
imull
bound
add
xchg
dec
rolb
stc
addr16
cs
popf
cwtl
cltd
push
cmp
cmp
dec
rcr
jmp
sbb
mov
mov
sbb
in
push
pop
les
divl
sbb
inc
adc
jmp
cmp
adc
pop
sete
push
sub
lds
repz
rcr
jle
lcall
cmp
std
adc
int
into
push
fcoml
andl
sbb
mov
xchg
inc
cmp
out
cs
push
into
cli
cltd
test
mov
enter
mov
push
jmp
inc
aam
sbb
cmp
mov
pop
lds
and
pop
xor
pop
adcb
xchg
in
pop
mov
fdivl
jbe
dec
outsb
out
bextr
sub
je
repz
inc
int
add
movsb
icebp
std
cld
sar
or
dec
ljmp
mov
cwtl
data16
ja
jmp
test
mov
in
das
mov
xchg
cmpsb
lcall
mov
push
inc
lods
in
int3
rolb
adc
xor
loopne
movl
mov
xchg
adc
ficompl
xchg
in
jae
adc
cmpsl
xchg
ret
lea
mov
clc
ret
jle
lods
je
sub
cmc
aad
std
and
pusha
icebp
push
xor
out
gs
cwtl
loope
sbb
rcll
push
mov
pop
mov
mov
flds
fimull
in
xor
ret
lahf
mov
jo
inc
fimull
xor
sarl
xchg
cltd
je
lahf
call
das
lods
je
lods
ss
inc
mov
add
jmp
aas
sahf
xchg
cmp
je
lret
adc
mov
jno
pop
scas
cs
or
xlat
sub
fdivrs
ret
mov
pop
cmp
xor
dec
jmp
adc
jb
and
jmp
fisttpll
mov
ss
in
cmp
scas
adc
popa
jmp
and
and
pop
xchg
cltd
subl
shr
mov
ret
sub
cmp
add
lahf
insb
dec
testl
lret
xchg
mov
nop
sbb
push
das
insb
les
leave
ficomps
push
xor
loope
cmpsl
pop
daa
fcompl
inc
mov
pop
clc
daa
inc
dec
push
out
push
negl
pop
insl
cmp
orb
xor
cmc
insb
push
imul
add
fwait
and
or
repnz
lock
or
xor
mov
test
adc
or
or
push
into
add
sub
xor
out
rcll
out
cmc
jecxz
loopne
xchg
cmp
imul
testb
cmp
mov
pop
inc
mov
dec
sti
sbb
das
popf
pop
mov
xor
mov
icebp
dec
mov
or
out
inc
or
jle
test
test
jbe
and
arpl
mov
add
repnz
lcall
outsb
std
or
xchg
arpl
or
into
dec
mov
sbb
in
cmp
test
ret
into
dec
cmp
imul
in
mov
cmp
std
stos
repz
cltd
call
pop
aad
sub
and
cwtl
pop
lret
mov
pop
pop
loopne
mov
lcall
imul
or
nop
ucomiss
mov
lea
inc
nop
add
cmp
xchg
sbb
clc
scas
lds
jnp
movl
flds
mov
stos
jge
jge
mov
push
shrl
push
mov
sub
sbb
stc
gs
or
in
cmpsb
push
in
test
stos
je
mov
mov
jbe
cmp
cmc
int
cmp
jbe
adc
xor
filds
fbstp
mov
outsb
sbbl
jb,pn
xchg
inc
ror
fiaddl
mov
jnp
or
sahf
add
iret
fs
out
arpl
jbe
in
inc
dec
xchg
ret
or
popf
add
pop
mov
jmp
pop
out
mov
inc
adc
addr16
jne
cld
or
mov
arpl
mov
aam
sub
mov
or
inc
cmp
mov
push
sub
inc
and
popl
inc
inc
adc
fsubrl
lods
xchg
cmpsb
repz
test
out
rolb
adc
into
sbb
push
cmp
sub
addr16
sub
cmc
mov
clc
add
ret
clc
xor
mov
jecxz
ds
icebp
cmp
xchg
movsb
or
xor
cmc
add
addr16
inc
jns
leave
shll
dec
mov
mov
and
sub
cltd
cmpsl
pop
mov
cmp
dec
fisttpll
divl
mov
pop
mov
rcrl
mov
sub
lahf
loope
pop
sub
cmc
mov
ss
add
test
push
mov
or
dec
cwtl
ficoms
inc
dec
ja
popa
bound
cli
test
add
push
inc
aas
push
popf
or
movsl
cmp
and
rorb
cmpsb
xchg
mov
popf
mov
js
mov
stc
popf
dec
pop
js
xchg
jno
fdivrs
enter
inc
sub
movsb
out
jbe
xchg
sbb
leave
lock
dec
jl
xorl
out
sti
fdivrs
lret
dec
dec
or
sub
jbe
xchg
add
sbb
int
cld
push
repnz
rcr
xor
imul
ds
mov
ljmp
cli
int3
push
das
fsubs
lods
ljmp
inc
cmp
test
repz
andb
xor
lds
sbb
rcl
or
pop
pop
mov
jle
mov
mov
popf
push
insb
xor
dec
mov
inc
cmc
movsb
imull
pop
call
push
in
andb
loop
cmp
in
mov
cmp
push
mov
xor
les
scas
cld
lea
inc
adcl
sub
push
sbb
aam
ret
cli
enter
jo
xorl
iret
subb
addr16
pop
inc
iret
enter
es
mov
and
cmp
mov
in
cli
cmp
cmp
out
cwtl
sbb
clc
fs
push
roll
ja
clc
nop
jne
arpl
fbld
cmp
cmp
rep
pop
in
add
add
or
cltd
test
push
fisttps
push
xchg
xchg
and
es
lcall
inc
mov
cmpsb
pop
mov
popf
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
or
jge
or
jp
fcompl
sub
fs
frstor
pop
sahf
dec
mov
mov
sbb
movsl
push
xchg
imul
lret
xor
insb
xchg
icebp
or
mov
faddl
pusha
mov
out
mov
mov
sbb
xchg
fldl
adc
sbb
xor
dec
push
jns
adc
pusha
ss
jno
sub
in
inc
ss
mov
das
cmp
cmp
or
dec
into
sbb
push
out
rorl
lret
std
lods
xchg
add
aaa
call
andl
mov
popa
arpl
push
dec
in
inc
or
loop
icebp
neg
dec
movsl
mov
jne
fyl2xp1
adc
push
in
add
mov
mov
fadds
adc
adc
cmp
movsb
in
mov
in
or
inc
insl
inc
add
and
out
and
mov
mov
xchg
sbb
stos
pop
pop
insl
outsb
in
pop
mov
cmp
shll
push
cli
dec
inc
movsl
loop
or
popf
js
fchs
sub
jl
mov
cmp
pop
inc
nop
scas
jmp
xchg
data16
inc
jle
stos
es
cmp
jp
cmc
or
mov
cmp
je
jmp
dec
mov
int
cmc
mov
jmp
cmc
or
and
xor
fwait
orl
and
xchg
or
loope
jmp
out
popa
leave
adc
pop
into
in
fdivs
lcall
rcrb
xchg
loope
int3
aad
icebp
dec
shrl
inc
add
ds
jne
addr16
std
lock
lahf
cmpsb
imul
das
add
pusha
ss
jbe
pop
or
stc
pop
sarb
cli
pop
push
and
and
push
adc
add
dec
sub
dec
dec
aam
call
dec
xchg
xor
mov
out
and
cli
fsub
outsb
lret
cmc
icebp
xchg
jg
shl
outsb
xor
mov
sub
nop
js
inc
mov
sub
mov
fmuls
adc
call
ss
cs
fcoms
and
jecxz
push
lret
mov
popf
pop
mov
dec
mov
int
push
jb
fcom
dec
xchg
fcomps
add
add
and
and
inc
xor
xor
pop
cmp
push
test
outsl
pop
mov
pop
mov
int
push
loope
scas
repnz
enter
roll
mov
push
jno
or
test
cli
into
inc
ret
ss
lods
push
xchg
mov
push
dec
sbb
fs
cli
ret
std
adc
test
in
cwtl
in
mov
out
mov
aas
jmp
push
xlat
jae
adc
mov
pop
dec
scas
je
and
repnz
cli
jecxz
sbb
scas
xor
inc
adcb
cld
and
mov
ret
xor
in
add
rclb
xchg
jecxz
movsl
push
stos
dec
xor
arpl
adc
mov
divl
dec
addb
xchg
aam
incl
adc
and
jbe
dec
in
push
out
adc
or
popa
orb
test
xchg
cltd
lret
jg
add
inc
xchg
loope
bound
pusha
inc
push
dec
mov
xchg
mov
push
cli
add
cmp
xchg
mov
pop
fcoml
addl
or
mov
dec
popf
dec
jge
clc
movsb
adc
iret
or
adc
fsubs
mov
adcl
insl
ret
cmpsl
in
fimull
insl
les
div
jmp
inc
inc
push
or
stos
jae
cwtl
incl
fsubl
inc
pop
shrl
push
pop
das
sahf
and
mov
mov
cltd
les
lea
sbb
mov
pxor
mov
sub
xchg
and
mov
push
dec
test
mov
ss
call
daa
mov
lea
sub
mov
mov
stos
xor
cli
pusha
adc
cmp
and
mov
pusha
mov
and
sub
jmp
xchg
insb
fs
aaa
dec
add
jo
cwtl
pop
jo
lea
out
in
dec
sub
xor
mov
sub
push
aad
adc
mov
scas
pop
push
xchg
loope
test
or
enter
adc
ret
or
jmp
arpl
dec
loop
mov
adc
test
push
xor
and
xchg
xchg
test
cmp
mov
xchg
repnz
aad
pop
push
out
je
ja
xor
mov
push
jb
jl
test
fs
aaa
push
icebp
ficomps
mov
fnstcw
sub
xor
pop
insb
fidivl
push
dec
sub
gs
add
sub
mov
aas
pop
lret
jnp
rcrl
lcall
xchg
pop
hlt
dec
inc
fcomp
add
mov
bound
call
xchg
cmp
leave
mov
cmp
jmp
insb
or
sbb
jle
mov
fimull
out
xchg
cmpsb
jne
xchg
xchg
adc
pop
cmp
mov
sbb
andb
xor
mov
mov
in
xchg
test
adc
loop
out
stos
dec
insb
addb
jb
and
mov
mov
mov
mov
je
hlt
pop
jg
lcall
fildll
bound
sbb
jle
into
fcomp
pop
bound
push
pop
cmpsl
sar
jge
cmp
push
push
push
xor
std
imul
imul
jae
es
mov
in
jp
mov
jno
xor
push
ja
inc
test
and
stos
fildl
out
jbe
adc
pop
mov
add
incb
imul
into
pop
out
jae
or
xchg
or
sub
lahf
stc
xor
imul
cmp
and
sbb
and
data16
out
ficoms
imul
sahf
fsubs
xor
adc
xor
nop
mov
pop
xchg
sbb
dec
out
insl
addb
test
fwait
sub
jmp
pop
push
push
movl
dec
aaa
fmuls
clc
shrl
ds
mov
int
movl
pop
sbb
das
cs
mov
or
cltd
jmp
or
xor
add
sahf
add
sbb
xor
es
ss
je
stos
jo
jb
imul
mov
lahf
sub
das
pop
outsl
jp
mov
and
jns
mov
arpl
or
inc
popa
mov
jg
icebp
inc
xchg
mov
mov
in
push
and
stc
push
xor
testl
mov
push
pop
popa
dec
sub
pop
lds
jge
add
adc
xchg
adc
and
movsl
pushf
inc
jno
sub
pop
aaa
pop
pop
aam
sti
mov
add
mov
jp
jl
stc
xor
imul
inc
push
fcoms
call
or
cmpsl
sbb
inc
rorl
int
int
cmc
int3
pop
add
popl
ficoms
sbb
shll
loopne
and
xchg
fdivl
or
inc
jg
mov
jne
lea
nop
pop
in
or
in
fmuls
xchg
and
jo
loop
cmpsl
push
les
push
or
icebp
and
subl
enter
mov
adc
sbb
shll
repz
and
js
jl
push
adc
lret
es
jne
adc
pop
inc
enter
pop
cltd
ret
add
xor
mov
xchg
fistl
cltd
pop
aas
cmp
into
fcomp
push
stos
pusha
inc
fs
sub
mov
add
arpl
js
inc
xor
jmp
push
fstpt
push
sub
cmp
cltd
xor
cmpl
push
mov
cmc
pushf
imul
sub
xchg
repz
addb
ss
sub
mov
movd
mov
mov
dec
mov
sahf
cmpsb
scas
or
lds
inc
cmp
cltd
sbb
in
fsubrl
inc
push
mov
push
and
xor
cld
outsl
or
add
aaa
and
fwait
lods
mov
sbb
mov
ret
push
sub
mov
repnz
xchg
lret
push
lret
fistpl
fisttpll
push
stos
insb
hlt
mov
mov
mov
pop
inc
sbb
dec
mov
xor
jo
les
pop
or
cmp
add
test
push
jge
lret
add
cltd
xchg
das
loope
xor
pop
dec
in
enter
movl
aam
mov
xlat
leave
cmp
aaa
jbe
add
mov
jmp
shlb
subl
jmp
mov
aaa
push
sbb
lret
mov
fisttpl
mov
sub
stos
je
jne
shll
fstpt
inc
xchg
add
fwait
mov
dec
mov
pop
test
mov
mov
call
loopne
inc
dec
xchg
inc
enter
sbb
cmc
sub
in
pop
add
sti
fldt
or
movsb
popf
and
cwtl
adcb
out
jnp
pop
jno
push
or
jecxz
or
movsl
cli
enter
mov
xorb
jmp
dec
push
dec
repnz
adc
out
stos
jge
or
and
sbb
adc
push
push
or
push
gs
add
mov
cld
xor
xchg
jge
pop
ss
out
inc
scas
gs
int
cmpl
sbb
sub
dec
jbe
clc
pop
jge
stc
jno
sub
int3
nop
push
int3
int3
xchg
inc
insb
fwait
or
lock
or
test
ds
jl
es
jge
imul
lea
sub
xchg
fstl
xor
sahf
lea
jmp
repnz
icebp
scas
pop
mov
call
and
lret
xchg
push
mov
icebp
aam
nop
aad
js
dec
fsubl
xor
fnsave
ja
in
jge
rcrb
mov
aad
mov
and
loope
loopne
jl
add
xlat
pop
dec
loope
and
jp
sbb
mov
sub
movsb
int3
pop
jne
mov
sub
popf
lcall
mov
mov
mov
jae
xor
daa
idivb
daa
insb
push
lret
pop
xchg
mov
les
mov
jae
jle
add
mov
and
add
popf
push
cmp
jnp
mov
jg
mov
sbb
test
aaa
jle
mov
jle
imul
inc
adc
xchg
push
sub
out
xlat
outsb
idivb
dec
push
mov
outsb
adc
aam
mov
cmp
pop
fbstp
in
lods
sub
jbe
mov
mov
cmp
or
int3
push
movsl
test
rorb
sti
scas
lahf
cli
mov
add
or
jbe
mov
repnz
jmp
rorl
cmp
fwait
push
adc
rcl
iret
or
dec
cli
popa
cli
cmp
cmp
jnp
and
pusha
in
inc
je
fldcw
shll
repnz
jle
and
push
cli
cmpsb
pushf
jns
sub
ljmp
mov
rol
xor
lock
sbb
jg
push
sbb
push
xchg
xor
jno
and
mov
insl
cmp
cmp
or
mov
shll
loope
adc
int
pop
pop
push
pop
cmp
sbb
sarl
iret
pop
imul
mov
aad
inc
jbe
loope
dec
js
add
movsl
or
lock
cli
in
sti
dec
jmp
pop
jb
inc
push
fistl
mov
cltd
pop
pop
fnsetpm(287
mov
call
add
cmpsb
ret
or
and
cmp
hlt
lret
and
adc
jmp
xchg
outsl
outsl
stos
int3
xor
lods
out
jbe
mov
sub
mov
or
sub
or
and
in
push
cli
sbb
pop
xor
aas
and
xor
mov
xchg
xor
adc
pop
push
test
dec
add
add
repnz
xlat
mov
test
mov
jne
jg
jnp
aaa
fwait
es
or
mov
push
inc
sarb
dec
rcrl
jnp
push
icebp
xchg
popl
or
jne
adc
jp
cs
jge
pop
aad
push
arpl
lret
cmpsl
push
das
in
lock
popa
jne
mov
sub
cmpsb
xor
stos
add
test
cs
pushf
test
jne
out
sarb
pusha
dec
nop
jae
roll
cmp
xchg
add
out
mov
jno
negb
cmp
pop
add
mov
dec
imul
and
push
dec
daa
xchg
loope
jbe
insl
mov
in
sub
lock
xchg
mov
pop
movsb
adc
mov
test
push
aad
push
cmp
or
add
addr16
js
xchg
roll
push
stos
xchg
inc
outsl
cli
repz
pop
or
shlb
stc
jl
notl
mov
popa
adcl
pusha
arpl
push
pop
retw
scas
fwait
loop
adc
imul
pop
xchg
pop
sub
xchg
jae
sahf
lods
and
jbe
sahf
outsl
imul
sarl
xor
sbb
rol
lock
or
leave
lds
jo
xchg
xchg
je
insb
pop
cld
adc
test
loop
push
pop
test
aas
subb
stc
adc
push
jl
out
mov
shll
stos
or
mov
jb
lds
mov
lcall
or
pop
ja
lret
lret
aas
or
ret
imul
cmp
jecxz
cltd
fstp
xor
pop
mov
mov
not
xor
mov
rcrl
inc
jge
icebp
sub
popf
stc
addr16
fstl
inc
cwtl
pop
dec
pop
push
sub
scas
loope
xchg
ljmp
fs
xlat
lahf
rcr
dec
rcrl
adc
shll
and
cmp
sbb
daa
sahf
pop
scas
insb
sub
push
loope
adc
enter
movsl
jo
or
mov
cmpsb
push
and
sub
in
xlat
in
mov
daa
add
xor
add
push
mov
pop
mov
cmpsl
pop
xchg
lret
adc
xchg
add
pop
jl
cmp
push
fsub
adc
arpl
adcl
imul
jg
jle
les
sbb
clc
and
test
add
pop
cmp
xchg
mov
mov
arpl
xor
cmp
imul
sar
cmp
inc
jno
test
fnsave
mov
stc
lahf
xor
test
dec
mov
mov
mov
adc
jo
and
mov
push
roll
call
cmp
jo
stos
incb
mov
sti
stos
fisubrs
push
rcr
ja
scas
mov
xchg
xor
mov
pop
adc
cmp
adc
andb
dec
and
xchg
imul
pushf
pop
sbb
insl
inc
rorl
add
aas
jmp
inc
ljmp
repz
dec
popf
mov
jecxz
int
dec
inc
daa
sbb
push
jecxz
movsl
add
xchg
jl
ljmp
jne
or
shrl
scas
mov
clc
cs
insl
cs
nop
push
mov
xor
push
or
xchg
jge
je
ljmp
sbb
mov
leave
sarl
or
push
mov
or
mov
insl
adcl
es
cltd
add
or
sbb
mov
push
out
mov
in
xchg
fsub
pop
and
cld
pop
je
jp
push
pusha
stc
mov
xchg
xor
dec
loope
xor
push
fsubs
test
push
adc
xor
push
scas
int
outsl
shl
add
sub
jo
mov
pop
out
pop
mov
push
sbb
xorb
pop
mov
mov
sub
dec
bnd
or
xchg
xchg
push
sub
cmp
int
fisubl
fcompl
add
into
cwtl
jne
push
or
lods
xor
loope
add
shll
shlb
adc
aaa
loopne
push
sahf
shll
xor
jecxz
mov
ss
xor
push
cmpsb
mov
pop
or
pusha
nop
pop
std
mov
ljmp
lcall
jecxz
push
hlt
xchg
addl
mov
jo
out
adc
inc
out
ret
lcall
filds
xchg
jne
aam
lock
mov
mov
js
subb
sahf
and
subl
shr
leave
and
mov
and
cwtl
pop
fwait
addr16
enter
mov
stos
jnp
ss
adc
icebp
or
fbld
adc
jb
inc
mov
jecxz
mov
pop
push
xchg
int3
dec
jmp
ja
int
std
int3
std
jle
jge
mov
adc
jg
dec
out
pushw
notl
icebp
stos
dec
les
and
fstpt
insb
add
pusha
mov
data16
ret
movsb
pop
int3
and
fucomp
xlat
outsb
cmp
insl
cmpxchg
les
sarl
es
jg
insb
mov
mov
jle
cwtl
maxps
mov
popf
lea
call
stos
xor
es
cmp
push
mov
inc
adc
mov
jle
clc
adc
sbb
add
adc
cs
cmc
rorl
cmpsl
sbb
insb
jne
addl
stos
mov
sub
or
push
mov
into
sarb
mov
lahf
pop
pushl
add
and
mov
pop
fisttps
and
push
mov
pop
mov
cmpsl
mov
imul
mov
test
cmpsb
test
lock
arpl
popa
inc
out
movsl
movsl
jns
jae
hlt
sub
mov
dec
or
popf
and
aaa
lods
jne
xchg
inc
and
fs
push
cmp
push
sub
pop
mov
xlat
mov
subb
mov
cmp
jg
xchg
and
add
mov
mov
xchg
test
and
push
dec
pop
cmp
ljmp
dec
inc
sub
insl
stos
je
or
out
mov
xor
jne
pop
pop
sahf
mov
arpl
mov
sarb
cmpb
push
orb
mov
lds
ja
test
pop
dec
jo
sbb
adc
push
fildll
test
nop
lret
out
repnz
addr16
or
inc
cs
cmpsb
icebp
lret
test
cld
xchg
fbstp
out
andb
repnz
scas
flds
mov
lcall
pop
mov
xlat
imul
pop
icebp
add
sub
cwtl
cmp
adc
aaa
mov
imul
or
int3
fildl
and
dec
repz
lret
cmp
lret
popa
dec
in
nop
mov
or
adc
cmp
ljmp
and
pop
and
push
cmp
scas
cmpsb
mov
pop
adc
inc
or
fisubrs
ret
nop
jns
mov
jno
cmpsb
roll
sub
in
adcl
jnp
test
mov
inc
aam
lods
pop
test
mov
je
gs
enter
xor
push
call
lret
mov
test
movsb
sbb
inc
hlt
ljmp
xchg
popa
push
lds
shll
sbb
ljmp
out
mov
arpl
clc
cli
sbb
addr16
mov
sbb
cmp
ds
inc
fmuls
adc
pushl
das
xchg
and
jo
roll
pop
into
or
add
cwtl
mov
enter
inc
xchg
sbb
pop
lock
into
jae
inc
andb
test
inc
cmp
stos
je
scas
or
out
and
xchg
ss
dec
fstpt
or
dec
rclb
shlb
adc
mov
mov
or
jae
dec
xlat
mov
jb
jle
xor
into
xor
pushf
pushf
dec
xchg
pop
enter
test
cmpsb
sbb
ds
loop
push
mov
mov
sbb
mov
mov
lea
inc
subb
out
xor
int3
jg
sbb
adc
pusha
sbb
adc
faddl
or
sbb
add
aad
fsubrl
xlat
bound
pop
lret
lret
xchg
jg
call
xchg
push
push
fdiv
iret
push
lods
push
test
loopne
inc
mov
dec
xor
dec
shll
add
mov
mov
out
or
loopne
jp
pop
bound
add
lods
xor
fidivl
jo
mov
inc
push
aam
arpl
xlat
roll
cmp
inc
rcr
popf
adc
lret
push
inc
inc
clc
loopne
xchg
sub
mov
sbb
sbb
call
int3
pop
inc
insl
mov
cwtl
imul
dec
sub
jle
mov
xlat
cmp
inc
cmp
mov
out
adc
in
adc
sub
mov
xchg
jno
sbb
shll
mov
adc
mov
sbb
stos
rorl
mov
cmp
mov
fbld
fstl
icebp
mov
xchg
push
push
push
shlb
sub
clc
sub
mov
js
push
push
ja
or
mov
jge
adc
mov
cmc
mov
push
lret
in
cmp
xchg
mov
pushl
mov
int
in
inc
dec
in
xchg
lret
xchg
pop
sub
or
xchg
dec
mov
pop
mov
bound
lret
adc
ret
pop
test
repz
inc
and
adc
sbb
ds
jns
rorb
enter
inc
das
jmp
rcl
and
out
mov
fisubl
notl
pop
cs
jo
lds
pop
shl
xor
pop
dec
sbb
mov
cmp
or
mov
das
mulb
dec
stc
mov
out
sti
andb
repnz
push
push
jmp
cmc
stc
mov
and
pop
outsl
or
add
outsl
outsl
pop
adc
mov
push
mov
jecxz
push
mov
push
cwtd
popa
in
sahf
xor
dec
lcall
mov
inc
movsl
into
js
lock
jp
or
xor
sti
outsl
stc
pop
and
fsub
movsb
and
mov
and
frstor
or
insb
icebp
cmp
xchg
shrb
push
pop
jno
sbb
dec
bound
fisttps
xchg
clc
in
push
xchg
fs
xchg
call
jne
xor
mov
es
mov
sbb
mov
sbb
add
int3
fildll
aam
mov
pop
lock
sarb
bound
sahf
push
xchg
repz
inc
leave
orl
fwait
rcrl
xchg
dec
scas
xor
inc
cmc
fidivrl
test
gs
dec
mov
insb
lods
outsb
cmc
or
xchg
pushfw
int3
std
jecxz
leave
loopne
jl
mov
lds
pop
cwtl
jno
test
xor
cmp
icebp
fs
pop
inc
outsb
in
adc
pop
out
bound
add
mov
adc
ret
aas
mov
jns
inc
ljmp
sub
outsb
loopne
fnstcw
imul
fidivl
fldt
push
sbb
in
mov
scas
xchg
xchg
ret
adc
sbbb
add
sub
push
fists
je
inc
fcmovu
dec
lret
jp
xor
lcall
adc
add
sbb
mov
stos
in
daa
mov
int3
push
cmp
xchg
les
or
pop
xorl
stos
jge
icebp
mov
cld
xchg
dec
and
inc
bound
xchg
shl
mov
push
sbb
sbb
insb
adc
pusha
fstpt
jae
stos
pop
mov
mov
cs
pop
pop
leave
test
test
out
jmp
popa
loop
pop
aad
add
mov
add
sahf
js
sbb
enter
call
shr
dec
xchg
rolb
loope
jno
out
add
add
adc
adc
mov
xchg
rcrl
inc
out
jecxz
sbb
loopne
cmpsl
stos
mov
aad
cld
cwtl
and
lcall
and
jo
mov
add
and
imul
mov
xor
xchg
into
std
in
jns
xchg
mov
in
xchg
or
mov
sti
lods
inc
inc
jae
orb
int
cltd
mov
push
enter
mov
and
dec
adc
fcompl
addr16
or
rcrb
jnp
cmp
jno
mov
xchg
movaps
add
mov
cmpsl
inc
mov
fimuls
mov
cs
out
cmpsl
add
xor
mov
lret
repz
fisttps
sbb
or
and
lea
mov
cmp
cwtl
subb
mov
bound
push
js
xor
mov
mov
daa
rcrb
int3
pop
or
sbb
hlt
pop
xor
lock
dec
mov
jne
ss
fsts
testb
adc
sti
repnz
test
popa
daa
in
out
mov
sub
int3
insb
jne
sbb
ret
xchg
add
sub
sbb
imul
shlb
mov
xchg
mov
inc
shl
aad
int
aas
sbb
xchg
and
mov
cmp
mov
dec
sub
push
mov
lock
push
mov
mov
repz
xlat
sarb
js
iret
sarb
mov
cmp
add
cld
pushf
push
xlat
and
pop
dec
dec
shrl
popa
pushf
sarb
pop
insb
pop
dec
aam
jge
and
adc
xchg
inc
or
and
ficoms
imul
test
push
push
sub
sbb
mov
xchg
and
push
sub
cmpsb
loop
push
jmp
xchg
add
out
pop
test
dec
push
push
test
lea
xchg
jo
sub
and
sbb
xor
scas
jo
push
pop
jnp
sbb
mov
or
add
xchg
add
outsl
stos
dec
into
dec
stos
mov
dec
in
mov
clc
mov
movsw
push
sub
sub
in
rolb
pop
push
andb
or
sub
and
xor
stos
jae
hlt
in
loopne
add
aad
cld
mov
xchg
sbb
mov
mov
imulb
push
int3
sub
mov
and
int
and
jge
inc
mov
mov
pop
mov
xor
push
movsb
je
mov
daa
jecxz
dec
es
push
mov
cmpsb
add
daa
jae
test
or
inc
fistpl
lods
pop
fwait
mov
or
test
cld
fcom
sub
out
idiv
addl
lods
sub
lods
mov
andl
cld
shl
cmove
iret
dec
cmpsl
sbb
push
fildll
aaa
dec
mov
arpl
lahf
cmp
sti
bound
in
or
xchg
out
popa
lahf
loop
rorl
fidivs
inc
mov
movsl
lret
sbb
out
loope
mov
jb
out
pop
xchg
ja
sbb
lret
mov
add
fwait
xchg
pop
push
mov
out
sub
xor
sti
out
sbb
mov
ja
aaa
out
inc
enter
push
ror
sbb
clc
sbb
fstl
inc
scas
into
mov
mov
icebp
push
cmp
inc
xor
mov
and
mov
leave
testl
stc
mov
aad
and
push
mov
xor
mov
push
push
push
xchg
sub
shl
in
jnp
repz
and
sbb
adc
lahf
xchg
sub
jg
mov
sbb
loope
out
or
mov
and
sbb
mov
int3
push
clc
insl
lock
cmp
xchg
pusha
js
dec
adc
hlt
push
cmp
imul
mov
jb
mov
test
lea
das
cmp
mov
push
imul
stc
xor
js
and
pop
das
outsb
dec
jno
mov
dec
ret
imul
pop
jmp
fadds
xorl
mov
dec
in
xor
dec
pop
mov
push
mov
mov
xchg
cmp
cmp
jl
es
stos
mov
pop
jp
pop
jecxz
mov
or
push
add
mov
jno
lret
sub
mov
adc
mov
jg
push
pop
loop
push
pop
mov
cmpsl
pop
ja
fidivrl
stos
xor
xor
xchg
test
sbb
divb
push
inc
movsl
cmp
mov
arpl
xchg
imul
xor
jae
ja
xchg
adc
out
inc
pop
mov
inc
in
sbb
std
sbb
fsubrl
jno
fistpll
pop
push
test
arpl
cmp
insl
inc
jo
cmp
sbb
pop
add
or
push
arpl
push
dec
ficomps
in
das
rorl
out
js
or
loope
add
add
mov
inc
xchg
jb
jle
sbb
scas
pop
test
ret
xlat
into
inc
fstp
inc
fimull
sub
jne
adc
add
int3
adc
daa
pop
dec
mov
add
pop
repnz
bound
sub
inc
es
imul
sub
push
and
je
iret
push
or
adc
mov
push
notl
int3
adc
dec
in
iret
js
dec
sbb
mov
lock
bound
outsl
or
mov
xchg
dec
inc
add
ja
int3
in
sub
test
rorl
xchg
mov
pop
fcompl
rcr
jecxz
jmp
mov
pusha
adc
push
nop
or
mov
jns
test
and
jns
jle
dec
insb
cli
mov
icebp
cmp
aam
imull
call
jae
dec
rcr
shrl
clc
xchg
rorl
outsb
add
jb
jmp
insl
pop
cli
xchg
mov
push
movsl
les
daa
add
mov
add
adc
scas
mov
ja
je
mov
xchg
mov
out
rcr
push
pop
movsl
je
sbb
das
out
add
adc
iret
pop
aas
adc
std
sub
out
and
dec
or
pop
mov
je
inc
repnz
mov
cmp
jns
sbb
pop
sbb
mov
xor
dec
outsb
incl
cli
sbb
pusha
int
push
jae
push
inc
sbb
mov
pop
cltd
mov
pop
push
xchg
xlat
ja
jb
xchg
sbb
mov
adc
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fxch
push
call
jp
pop
jp
mov
inc
pop
cld
ret
pop
xchg
cmp
jo
pop
add
lret
pop
mov
stos
lods
fadds
xchg
mov
adc
rcrb
xor
imul
and
jmp
out
xor
adc
pop
ret
adc
jg,pn
insl
add
mov
fldenv
test
mov
dec
je
pop
lea
pop
test
sub
sub
xor
aad
mov
and
dec
mov
cmp
or
cmpl
add
pop
movsb
lods
mov
jmp
push
outsb
test
jns
push
add
xchg
mov
in
jb
dec
mov
andl
mov
enter
pop
xor
mov
xor
mov
mov
push
mov
pop
push
mov
dec
mov
adc
test
ficoml
rcll
ja
fsubrs
call
jne
add
push
xchg
loop
jp
pop
or
outsl
add
out
inc
fs
lods
popa
repz
mov
adc
push
sahf
mov
cltd
pusha
cmp
xacquire
das
testb
sbb
pop
push
fiaddl
and
into
sbb
mov
out
and
leave
mov
push
pop
fcomps
push
xchg
xorb
or
ja
and
cmp
lock
sub
jp
movsl
cmp
adc
push
jmp
nop
xchg
mov
pop
cmp
mov
rcl
push
shr
mov
mov
popl
movsb
sub
xchg
sub
add
inc
mov
jl
dec
sbb
or
pop
jns
in
jae
cltd
add
push
cmpsl
jno
sub
pop
xchg
mov
xchg
pushf
int
push
stc
push
push
addl
mov
subl
mov
fcmove
fcom
sbb
fists
sbb
loop
rcrb
mov
push
adc
sarb
mov
in
xchg
aam
push
pop
lock
jge
and
cmp
xor
aas
xor
mov
ds
fldt
aad
stos
gs
mov
jle
cmpsl
sub
data16
cmp
and
repz
push
leave
mov
xor
fwait
loope
out
outsb
fs
pop
inc
pop
stc
loope
pusha
mov
mov
lret
js
cli
sahf
cmp
clc
mov
sbb
sbb
adc
sbb
pop
out
fnstcw
arpl
ds
nop
stos
aad
or
add
push
data16
outsl
cmpsl
cmp
test
sub
mov
rorl
xor
rorb
or
hlt
pop
int3
out
insl
dec
add
pop
ds
sbb
mov
xlat
testl
cmp
rol
dec
and
xchg
cs
sbb
ret
jo
sub
cli
dec
pusha
jnp
mov
lret
lods
lods
lcall
lea
add
ss
pop
lods
fsubr
inc
push
cmc
cli
sbb
inc
add
mov
in
mov
sub
in
xchg
push
pushf
pop
notl
adc
dec
xchg
xor
push
add
stos
int3
orl
std
dec
jp
ds
and
insl
jae
rcrb
outsb
lock
mov
sbb
cmp
xchg
test
lock
and
pop
fsubrl
push
das
dec
mov
gs
in
orl
mov
sbb
mov
mov
mov
xor
mov
call
ds
sti
cmp
jo
stos
jmp
lcall
test
lahf
mov
xor
adc
jmp
addb
divl
fimuls
or
inc
jge
add
out
dec
idivl
in
mov
sub
adc
adc
xor
mov
int3
loop
bound
dec
aad
stc
cli
sub
ds
jnp
and
clc
jb
add
repnz
push
jg
xchg
cmp
pop
leave
sub
or
push
test
xor
test
call
inc
sar
hlt
leave
pushf
add
mov
aad
ds
mov
push
dec
push
inc
fcmovnu
and
add
jg
ljmp
inc
sarb
clc
mov
jle
stc
xchg
loopne
dec
enter
mov
sbb
fs
ljmp
add
mov
sub
sar
rolb
xlat
pop
inc
insl
sbb
movsl
gs
pop
mov
mov
ljmp
and
test
rcrb
stos
int
xor
leave
and
push
and
or
aam
pop
xchg
outsl
mov
cli
mov
adc
inc
sub
movsl
push
dec
jl
add
sbb
jmp
cmp
data16
je
mov
hlt
int3
dec
ljmp
sbb
mov
mov
cld
xor
jnp
push
mov
ds
cli
pusha
mov
data16
stc
jb
outsb
out
mov
dec
jo
notb
cmp
push
hlt
lahf
test
shl
mov
into
jg
pop
mov
test
pop
das
out
arpl
jmp
mov
push
es
pop
clc
movsl
inc
push
push
pop
xchg
stc
xchg
call
ds
mov
mov
inc
push
aas
shr
mov
push
sub
loopne
out
mov
jecxz
push
scas
push
add
insl
adc
mov
sub
push
xor
adc
jecxz
and
or
and
andl
and
inc
lea
push
arpl
adc
stos
mov
ffree
push
xorb
sti
mov
sbb
das
xchg
aas
cmp
pop
sbb
std
mov
pusha
dec
gs
mov
jno
mov
pop
xor
testb
mov
adc
xor
in
push
sbbl
mov
imul
insl
xor
pop
jbe
in
mov
pop
les
jne
mov
jle
jnp
jge
push
test
and
outsb
les
aas
shlb
cli
cmp
push
jae
popf
mov
cli
jg
jg
fldcw
mov
adc
mov
insb
sbb
or
xor
cmpsl
loop
push
dec
out
addr16
cmp
lea
stos
arpl
imulb
cmp
daa
sbb
shlb
into
jae
mov
add
int3
out
test
cli
dec
dec
pop
adc
jno
insb
bound
insb
lds
jne
cli
ja
sahf
iretw
add
stc
adc
outsb
add
adcl
ja
pop
xchg
adc
int3
dec
std
pusha
cltd
out
les
pop
mov
scas
mov
sub
clc
sbb
push
and
mov
or
dec
adc
push
mov
inc
or
jle
adc
sub
jbe
xchg
cltd
jp
cs
cld
sti
xor
cmp
push
xchg
aam
mov
scas
mov
pop
inc
gs
enter
mov
inc
jns
xlat
xlat
xchg
ficompl
popf
imul
test
adcb
or
test
in
lods
aas
pop
cmp
repz
sbb
dec
sti
incb
mov
cmp
cmpsl
push
push
es
dec
orl
popa
pop
jle
popf
daa
cmp
adc
lock
pop
jnp
push
and
fcomps
xchg
cs
pop
cli
jl
push
sbb
xchg
andb
and
adc
aas
inc
insl
sub
mov
lock
push
lods
pushf
into
mov
imul
fsubrl
or
push
das
testb
and
fisubrs
jmp
and
mov
cmp
aam
adc
push
frstor
cmp
cmpsb
pop
dec
inc
imul
popa
test
jmp
stos
fs
loope
packssdw
movsb
sub
ljmp
out
out
cmc
add
pop
ret
pop
data16
fcompl
jae
lods
out
rcr
dec
bound
test
fstl
imul
lcall
xchg
adc
lcall
aas
push
shrl
add
aad
stos
adc
xlat
test
cmp
clc
pop
push
dec
loopne
dec
adc
inc
mov
lret
pushf
adc
stos
test
nop
mov
cmp
outsb
sub
lret
lea
push
imul
outsb
mov
into
dec
gs
jbe
popf
lret
gs
repz
pop
loopne
pusha
pop
in
addb
fwait
inc
sbb
jecxz
mov
lcall
mov
outsl
sub
jnp
push
jne
sbb
and
and
jbe
jge
ja
jp
cmpsl
shll
je
or
pop
pop
pop
in
dec
sbb
setle
xor
pop
adcb
push
jns
jns
cmpsl
cmp
call
push
or
imul
add
les
add
ja
mov
iret
dec
mov
add
fsts
inc
pop
inc
nop
push
push
cmp
rclb
jl
sub
mov
popa
adc
lret
roll
and
sub
ret
mov
daa
shll
insl
pop
add
xchg
xor
pop
sbb
repz
pop
dec
pop
cmc
adc
gs
and
enter
xor
add
and
add
and
mov
pop
xlat
sub
push
xor
push
dec
rorl
stc
in
lcall
cltd
xchg
xor
add
fcmove
sbb
mov
add
lret
cmp
fidivrs
lcall
loopne
jl
fs
adc
inc
mov
out
pop
adc
xchg
push
ds
push
xchg
lea
cmp
xor
pop
clc
xchg
add
cmp
shr
repz
nop
cmp
jecxz
ret
mov
sub
adc
jne
lds
dec
data16
pop
stos
in
mov
scas
pop
test
out
in
mov
sahf
sbb
sahf
mov
xchg
mov
push
shrl
inc
sub
fistl
cmp
mov
adc
ljmp
into
mov
push
jnp
cmp
mov
mov
paddsb
cmpsl
test
clc
push
mov
aad
sub
shl
mov
pop
inc
lods
sahf
notl
sbb
stos
divl
mov
xor
mov
shll
loope
idivl
scas
cmp
aaa
icebp
insb
dec
adc
sub
aam
rorl
mov
lcall
imul
movsl
sbbl
mov
inc
mov
xor
roll
or
jle
lret
imul
jne
fwait
mov
out
fwait
mov
cmpsb
xor
scas
push
adc
xchg
and
jns
dec
negl
or
cwtl
cwtl
scas
stos
pusha
fisttpll
sub
inc
xchg
ljmp
jmp
sbb
push
add
push
jne
push
in
test
ret
int3
pop
pusha
inc
adc
pop
rol
push
test
push
xlat
sub
mov
mov
pop
rolb
ficoml
sbb
xor
pop
lea
sub
mov
mov
cs
push
cli
addb
add
rorl
fmul
xor
dec
bound
and
aaa
movsb
mov
ds
add
cmpb
stc
and
mov
xchg
jge
insl
dec
cwtl
roll
repz
cmpsl
ss
fcomip
pop
fisttps
pusha
mov
mov
xchg
das
xchg
adc
in
mov
into
or
cmpsb
xchg
popf
ret
mov
cmp
out
adc
lret
data16
inc
ja
rcll
pop
inc
in
pop
sbb
mov
mov
mov
aas
inc
aaa
loope
mov
jbe
and
push
cmpsb
adc
in
das
lcall
mov
jns
mov
dec
add
int3
push
push
mov
fidivrl
ficomps
mov
fidivrl
repz
mov
mov
cmc
loope
push
in
dec
bound
xchg
sub
add
ficoml
cmp
test
sbb
insb
cltd
or
lock
addr16
and
mov
mov
sbb
jle
cmp
xchg
lret
xchg
mov
inc
push
nop
mov
pop
mov
cmpb
ljmp
sub
add
add
repnz
jne
andl
arpl
mov
idivl
in
insb
mov
inc
lods
add
adc
and
cmc
inc
dec
movsb
add
dec
and
shlb
and
adc
push
mov
mov
and
popa
adc
xchg
aam
push
shrl
test
aam
dec
mov
sarb
push
xchg
push
scas
mov
dec
add
scas
aad
xlat
xor
mov
jae
mov
rorl
test
or
std
jne
dec
add
nop
decb
xchg
hlt
pop
ficoms
pop
mov
es
cmc
fisttps
push
jne,pt
adc
je
or
mov
cmp
xor
cmp
movsb
cli
sub
arpl
data16
add
pop
xor
aaa
sbb
incl
clc
lds
add
sbb
mov
cmp
xchg
xchg
mov
mov
out
and
adc
pushl
sbb
xor
aad
movsl
adc
mov
testl
dec
ss
xchg
ljmp
sbb
je
inc
push
es
mov
jl
sbb
leave
fistpll
testl
movsb
cmp
mov
sbb
sub
loope
shlb
lds
and
sbb
scas
jp
inc
cltd
dec
out
imul
mov
inc
fiaddl
sahf
dec
mov
movsb
pop
adc
mov
dec
in
cmp
mov
imul
lods
mul
jne
subb
repz
sbb
xor
cltd
sbb
push
pop
sub
sahf
stos
xchg
lret
mov
inc
pusha
das
out
mov
xchg
inc
addr16
in
lea
dec
cmpb
pop
adc
or
sbbb
xor
jecxz
sahf
jecxz
insl
lret
jae
out
jb
jp
cmp
jno
or
psubd
es
dec
or
cmp
adc
outsb
sti
inc
cmp
dec
insl
cmp
pop
es
out
fisubrs
pop
bound
adc
jo
hlt
inc
mov
sbb
push
pop
das
decb
pop
test
xchg
sbb
jge
push
out
mov
jmp
sbb
xchg
call
hlt
add
rorb
jmp
mov
dec
jmp
push
push
xchg
in
adcb
sbb
ss
xchg
andl
xlat
out
inc
inc
and
cmp
lock
subl
cmpsl
or
jno
pop
loope
mov
fwait
jnp
sbb
sbb
add
movsl
inc
lods
xor
clc
or
call
sub
adc
jp
jg
ret
xlat
mov
or
loope
fmul
jo
mov
std
popf
dec
xor
pop
xchg
xchg
sub
cmp
insb
popa
mov
je
out
int
push
ljmp
fstpl
adc
mov
cmc
leave
xlat
std
jg
push
sub
outsb
dec
loop
lret
inc
adc
bound
fcmovnb
fsts
iret
adc
mov
jl
lahf
and
outsl
rorl
das
inc
insl
adcl
jae
sbb
mov
fidivrl
jbe
ljmp
adc
push
mov
jae
ljmp
js
pushf
mov
fldl
and
pop
jle
sub
mov
arpl
jno
sbb
xchg
call
lods
ret
in
adc
movsb
sub
or
lret
lahf
fnstsw
mov
push
pop
dec
lods
addr16
pop
add
jmp
and
daa
xchg
aad
sbb
jo
icebp
lret
pusha
call
xchg
out
lods
rolb
out
adc
sahf
andl
gs
rclb
and
dec
cltd
pusha
xlat
xchg
sub
add
fidivs
gs
cmp
add
mov
pop
addr16
scas
lods
or
push
les
push
fbstp
outsb
xchg
inc
xchg
push
xlat
add
mov
push
sbb
push
cmp
jbe
jae
jp
jmp
shll
movsb
inc
shrb
pop
gs
pop
mov
cmp
dec
cwtl
jno
lds
sub
adc
dec
dec
sub
push
lea
pop
mov
invd
xlat
lock
mov
jge
lahf
push
je
mov
xchg
mov
inc
mov
test
bound
jecxz
mov
je
sbb
sbb
enter
adc
add
jns
repnz
push
xchg
aad
xor
dec
cmp
iret
sbb
jmp
hlt
out
movsb
lea
xor
mov
ja
movsb
adc
nop
test
or
xor
std
xor
clc
inc
into
jb
daa
xchg
mov
inc
mov
sub
mov
mov
aaa
fdivs
sbb
nop
inc
xchg
scas
stos
sbb
lock
sbb
add
cwtl
push
ret
mov
dec
loope
arpl
pushl
mov
pop
pop
and
daa
jns
jbe
fstps
lahf
pop
loope
jp
lcall
aam
jge
mov
xchg
sub
mov
scas
subl
std
pop
out
add
pop
nop
push
stos
out
std
or
repnz
outsb
xor
ljmp
dec
outsl
push
jne
jo
fcoml
cmp
add
cmp
cmp
pop
sub
push
nop
mov
fsts
out
xchg
aad
loopne
jp
mov
inc
push
andb
adc
into
rorb
dec
into
inc
sub
jae
add
test
lret
out
jo
mov
dec
push
scas
lods
push
xlat
sbb
repnz
int
sbb
je
xchg
and
mov
loope
jge
lcall
xor
push
ret
jns
sbb
or
loope
push
loopne
dec
cmp
lea
stos
push
mov
aam
push
aaa
cld
mov
mov
adc
std
lcall
dec
sbb
add
stos
mov
jl
out
cmpb
setp
and
adc
aas
sbb
mov
inc
mov
dec
in
rep
fxch
sub
mov
dec
cmp
mov
sub
clc
jecxz
test
sti
cmp
sbb
adc
mov
mov
jg
cs
push
rcll
out
les
mov
push
stc
faddl
jns
xchg
cmp
ret
jp
mov
out
frstor
loope
sahf
add
mov
dec
inc
repnz
shrb
mov
mov
push
adc
nop
pusha
jmp
mov
and
xor
xchg
cmp
bnd
jmp
std
int
jne
paddusw
test
push
mov
pushf
and
sbb
or
mov
mov
in
jge
mov
lods
arpl
loope
iret
repz
aam
dec
mov
andl
hlt
push
rolb
pop
in
xchg
sub
and
adc
push
jbe
push
cmp
out
dec
inc
add
ljmp
xchg
xchg
xchg
les
pop
fiadds
jmp
xchg
jg
mov
adc
lock
cltd
jnp
sub
popa
rcl
lods
rcrl
pop
dec
xchg
test
rcl
adc
leave
add
fwait
cld
pusha
push
push
leave
or
dec
iret
in
dec
adc
jne
mov
into
pop
imul
add
scas
xchg
mov
cli
pop
push
sub
ficompl
cmc
test
fbld
xchg
pop
push
aaa
ss
adc
nop
dec
jae
push
sub
ja
pop
popa
addr16
icebp
pushf
mov
push
xlat
pop
cmp
sub
rcrb
incb
in
jg
add
call
and
insb
test
test
fdivr
mov
mov
or
and
nop
ja
pop
sub
adc
adc
in
add
sub
out
xchg
into
sub
push
sub
xchg
loop
xchg
inc
inc
adc
addr16
icebp
inc
cmp
mov
xlat
test
inc
cli
push
jno
cmp
lcall
sar
push
jecxz
iret
push
jmp
cmp
sub
pop
mov
orl
and
inc
repz
jmp
mov
sbbb
out
mov
mov
push
inc
or
jnp
jbe
loop
in
pop
lods
xchg
and
or
jl
mov
enter
sbb
out
xlat
sbb
push
cmp
cmp
mov
test
lret
jl
mov
test
sahf
scas
ja
mov
outsb
cmc
xchg
cltd
mov
rcll
push
enter
pop
movsb
or
addr16
sti
je
loope
sub
mov
mov
pushf
in
outsb
fisttpl
in
insl
fnsave
pop
clc
mov
aam
inc
rorb
xor
mov
retw
movsl
outsl
xchg
je
ljmp
inc
lods
sbbb
cmc
in
bound
mov
pop
repnz
fstps
inc
out
mov
add
add
dec
sbbl
mov
xchg
adc
icebp
int3
ljmp
sub
iret
push
stc
pop
sbb
imul
fidivrs
shl
xchg
gs
int3
or
outsb
sub
adc
insb
mov
mov
sbb
stc
mov
inc
push
adc
jnp
clc
mov
jbe
inc
les
test
mov
pop
pop
push
xchg
pushf
ds
lods
icebp
cld
xchg
mov
xor
sub
repz
lret
cmp
mov
adc
rclb
cmp
sub
cli
sub
xor
or
movq
dec
ds
int
jae
js
fldenv
xorl
add
aad
inc
mov
push
xlat
loopne
cmp
popf
in
cmp
xchg
es
mov
inc
adc
fistpll
jns
std
xchg
test
mov
cltd
add
addr16
sbb
mov
cmpsb
or
jne
icebp
fs
xor
dec
out
enter
push
aam
pop
aaa
mov
nop
je
stc
sub
clc
jb,pn
sti
mov
jne
inc
in
xchg
sarb
fcomp
jns
addr16
out
in
sbb
jle
add
dec
cpuid
mov
xor
test
add
scas
ror
mov
jecxz
incl
mov
add
cmp
aad
or
test
bound
sbb
xchg
ljmp
mov
inc
outsl
lahf
adc
scas
pop
sbb
push
addr16
jp
and
imul
jb
pop
icebp
es
stos
jbe
sahf
push
test
and
pop
sbb
movsl
pop
ss
movsl
mov
pushf
pop
jge
scas
jbe
mov
enter
xor
nop
jbe
andl
stos
nop
and
xchg
das
aas
inc
cmpsb
cs
sti
insl
lret
cmp
xchg
mov
addr16
shrb
pop
stos
imul
mov
mov
insl
gs
aad
pop
sub
out
cmp
jmp
loop
mov
daa
pusha
je
movsl
fdiv
push
push
adc
inc
mov
fcomps
sbb
jns
jecxz
adc
lods
xchg
push
es
xor
aaa
hlt
ffreep
cmp
mov
xor
arpl
ds
js
popf
idivb
paddb
jns
mov
mov
and
mov
pop
pop
jns
xchg
movsl
std
push
movsb
and
in
add
inc
mov
mov
cmp
xchg
cs
test
mov
push
xor
inc
imul
fcoms
movsb
xchg
jg
adc
mov
push
xor
aam
repz
cmp
push
stos
xchg
fcompl
jo
shrb
ja
add
aaa
dec
cltd
jb
out
jns
push
sarl
lods
jbe
inc
addr16
sbb
aad
pop
rorl
sub
das
sti
bound
lahf
leave
or
lret
sbb
sbb
test
pushf
inc
dec
jg
es
stos
lods
lret
lahf
inc
push
fdivr
jae
cltd
add
push
inc
cmpsb
xchg
mov
jmp
loope
sub
cmp
mov
jle
cmp
mov
jb
xor
sub
aaa
push
sub
dec
jns
pop
xchg
mov
xor
xchg
ja
dec
stos
orb
push
mov
jg
pop
sbb
inc
xor
outsb
or
out
or
std
mov
sbb
and
insb
mov
subl
dec
stos
mov
lds
ret
ds
inc
and
cmc
jl
pop
jo
mov
adc
jl
adc
push
rcrb
outsb
call
xlat
loopne
sub
mov
inc
mov
out
mov
int3
jl
out
pushf
cltd
enter
mov
adc
pushf
jp
lahf
inc
add
jo
add
leave
dec
xor
cmp
stos
psubd
dec
lods
jns
faddl
push
shll
sub
add
mov
sahf
cs
adc
jg
push
stos
sbb
lock
std
cmp
and
enter
repz
xorl
cmp
into
cmpsb
out
int
cmc
push
inc
fld
sub
dec
sbb
push
in
xor
push
sbbb
pop
mov
jbe
repnz
icebp
dec
mov
out
outsb
pop
sub
xchg
fwait
or
cmpsl
mov
jbe
out
xchg
mov
and
jnp
gs
iret
dec
in
cmc
jge
pop
sub
mov
dec
xchg
xchg
int3
stc
xchg
in
in
jmp
mov
icebp
faddp
sbb
push
xor
arpl
xor
cmp
outsl
fisubs
call
push
daa
cld
hlt
or
jp
dec
loopne
loopne
adc
and
sbb
cli
movsb
lret
push
subl
xlat
adc
jbe
xor
pop
inc
and
xchg
xor
fsubrs
or
cmp
mov
fwait
cli
stc
push
test
jmp
add
idivl
mov
sub
pop
rorl
xor
popf
pop
loop
cmc
iret
js
out
sbb
test
mov
fimuls
jae
test
in
ljmp
push
dec
cltd
pop
fbstp
frstor
jbe
xchg
je
adcl
dec
jo
adc
and
aaa
pop
imul
addr16
pop
fs
push
mov
and
push
ss
packuswb
adc
mov
inc
jnp
loope
add
test
cs
jno
push
adc
pop
repnz
decl
push
mov
clc
inc
sub
sbb
push
ds
mov
bound
sub
push
out
sbbb
pop
shlb
cld
pop
mov
dec
cwtl
or
sbb
mov
out
fwait
fs
add
push
jb
sub
dec
xchg
ds
xchg
xor
dec
adc
gs
dec
pop
or
fisubs
imul
sub
and
mov
xchg
les
pop
leave
pop
pop
mov
test
icebp
stc
jno
mov
xchg
jl
inc
daa
inc
mov
dec
ret
insl
scas
xor
xor
xchg
adc
cmp
fcompl
push
ficomps
lods
pop
inc
out
pop
bound
rcrb
int
push
xchg
and
scas
dec
popa
push
sub
jbe
xor
mov
dec
cmpsl
cli
jp
push
scas
xor
push
fsts
fimuls
pop
inc
mov
dec
loopne
xor
data16
push
add
rclb
and
jmp
push
sub
add
mov
test
or
mov
repnz
ret
pushf
or
mov
test
or
fwait
jne
pushf
dec
sub
sbb
xchg
fldt
jb
stc
movsb
imul
inc
aad
jmp
repz
jl
imul
test
sub
das
add
inc
mov
mov
mov
lahf
mov
ret
push
mov
mov
les
ss
xchg
sbb
test
std
out
adc
dec
xor
mov
das
cmp
mulb
jnp
jne
adc
loopne
loopne
sbb
jp
cmpsl
push
stos
das
lahf
jne
mov
lret
cmp
mov
push
xor
in
mov
lds
loope
stc
mov
ret
imul
popf
jo
call
xchg
aam
sbb
insb
sbb
pop
jo
pusha
adc
scas
ret
lods
es
mov
into
test
adc
repnz
cs
ret
out
push
pop
stc
in
out
sbb
xor
addr16
cmp
add
insl
fnstcw
shlb
inc
jbe
cmc
pop
xchg
pop
mov
lcall
inc
lea
adc
mov
hlt
jb
sub
cwtl
jmp
cmp
sti
sahf
dec
mov
push
addr16
jp
inc
or
inc
dec
mov
pushf
sbb
add
push
pop
repz
push
dec
fwait
sbb
in
les
insl
push
dec
add
nop
sti
inc
test
adc
loopne
sub
pop
push
mov
adcb
test
imul
mov
lret
xchg
push
push
jge
inc
adc
imul
decb
fldt
movl
xchg
inc
pop
mov
out
xor
popf
imulb
mov
data16
dec
and
xchg
sbb
gs
inc
jp
pop
in
xor
sarb
mov
out
add
lock
cmpsl
inc
push
fwait
lret
mov
mov
insb
mov
sbb
mov
inc
push
dec
xchg
sub
rolb
lcall
push
fs
jns
mov
clc
xor
adc
mov
add
xchg
int
xor
shll
cmpsb
lds
mov
ja
xor
add
jp
ljmp
out
jl
dec
stos
lret
fptan
jns
cs
in
movsb
cmp
adc
lret
push
xor
mov
dec
jp
cli
imul
adc
mov
xchg
jl
sub
mov
aam
call
adc
push
jg
lock
inc
movsl
rolb
inc
xchg
mov
sahf
pop
sbb
in
pop
push
fldl
stos
test
mov
mov
xlat
in
xor
add
cmp
cmpsb
data16
sbb
cltd
mov
push
roll
jne
push
and
out
jmp
mov
jno
sbb
pushf
aad
xchg
mov
mov
insl
daa
mov
cwtl
out
adc
aas
punpcklwd
mov
test
xlat
lea
mov
mov
outsl
js
fadds
dec
cmpsl
sub
dec
jmp
ss
dec
ret
fwait
stc
dec
inc
dec
push
loope
out
mov
push
adc
sti
ret
and
cs
xchg
std
dec
aaa
sub
pop
imul
mov
lods
aaa
ret
movsl
inc
pop
xchg
cmp
mov
in
dec
and
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
adcb
outsb
sbb
jp
pop
jp
inc
pop
push
pop
jp
sarb
mov
sub
mov
imul
and
push
cmp
ja
mov
xchg
movsb
repnz
mov
loop
data16
fsubrl
pop
dec
ret
sti
pop
dec
test
or
push
xor
push
sbb
or
mov
sbb
int
sbb
stc
add
movsb
cmc
into
fdivrs
push
pop
sub
or
dec
xor
inc
fld
stos
cmpsb
sbb
adc
sbb
xor
je
sarb
mov
lock
mov
mov
mov
insb
fnstsw
cmpsl
lods
fbld
insb
in
mov
cmp
rep
sbb
cwtl
jp
add
mov
pop
and
and
mov
lea
inc
lcall
jo
xor
add
or
fs
cwtl
ss
adc
in
mov
popl
mov
int3
inc
ss
nop
incb
jp
outsb
insl
ljmp
addr16
or
fdivrl
das
call
iret
mov
add
cltd
mov
fnstsw
repnz
mov
lcall
mov
imul
cmp
pop
testl
imul
pop
jl
loope
pop
imul
cmp
sti
mov
cmp
cmp
cltd
shll
mov
push
cmc
fs
sti
pop
dec
add
cli
sbb
or
cmpsl
xor
jb
movsl
mov
mov
in
popa
std
add
inc
cmp
jne
pop
neg
xlat
shll
cmpsl
cmp
shrl
mov
mov
enter
subb
sub
call
and
js
out
add
xor
imul
lahf
jno
fcmovnu
insb
fcmovne
mov
ret
stc
in
rcl
clc
lret
cmpsl
rcr
jnp
into
and
dec
movsl
cmpsl
xchg
jl
xor
or
jg
in
rorb
jp
loop
out
sti
lods
stos
mov
sbb
gs
repz
xor
dec
cmp
push
cmp
dec
or
mov
mov
fmuls
clc
popa
pop
fisttpl
jl
jae
dec
test
and
js
sub
lods
inc
push
push
imul
int3
hlt
fisubl
fldcw
mov
pop
or
imul
inc
ds
xor
jl
loope
fcmovu
jp
sbb
int
cltd
mov
sbb
sub
lret
test
pop
js
lods
pusha
inc
mov
ds
pop
iret
xor
xor
mov
test
hlt
pushf
lock
pushf
das
ja
cmpsb
inc
jmp
aad
cmpsl
stos
shl
movsb
sub
bound
xchg
divl
cmp
mov
out
jnp
loopne
in
mov
xor
insb
mov
scas
xchg
sub
mov
jns
xchg
lahf
cwtl
cld
mov
dec
es
sub
xchg
stc
xor
inc
loopne
ret
mov
popf
push
in
xchg
push
inc
dec
movsl
jmp
rep
into
xor
push
adc
push
xchg
jae
aam
leave
sarl
xor
xchg
cli
lret
xchg
pushf
scas
outsl
lea
jns
imul
ficoms
ret
rcl
loopne
mov
adc
insl
pop
andl
loop
lret
push
clc
in
out
cmp
fs
shlb
mov
subb
test
hlt
jno
sub
xlat
out
push
rep
jo
jmp
js
iret
out
jbe
adc
or
pusha
lret
mov
sbb
pop
and
js
loop
mov
inc
jecxz
cmp
loop
jns
iret
repnz
jae
pop
pop
call
daa
sbbl
pop
inc
out
push
add
icebp
push
or
repnz
cmp
adc
mov
fstpt
sub
push
scas
mov
je
mov
push
push
cmpb
and
repz
and
jmp
pushf
fsubrl
andl
stos
fistpl
add
or
and
xchg
test
fidivl
vrsqrt28sd
repnz
cmp
cmp
je
ret
or
movups
stos
xchg
repz
xchg
and
push
adc
xchg
bnd
jp
jns
pop
jne
cmc
inc
leave
cmp
xchg
clc
gs
ljmp
hlt
lret
xchg
jmp
and
push
add
inc
jne
loopne
fwait
repnz
sbb
add
orb
fdivrs
call
cmp
push
jbe
fldcw
stos
inc
shll
xor
xchg
mov
cmp
loopne
xor
fs
inc
inc
push
mov
mov
cmp
pushf
cmp
add
mov
shll
test
adc
pop
popf
xor
inc
push
pop
inc
push
xchg
jnp
inc
cltd
mov
pop
jl
in
jmp
insl
cmc
inc
repz
mov
push
push
push
dec
mov
push
pop
les
xchg
pop
push
push
adc
jmp
ljmp
fcoms
addr16
mov
ja
ja
push
sub
or
outsl
pop
mov
bnd
push
fisubrl
cmp
ds
mov
popa
xor
scas
add
test
dec
inc
fcomi
mov
adc
dec
push
xor
lods
repz
pop
add
sarb
dec
jmp
xor
shl
push
pop
push
ja
sbb
faddl
in
filds
fidivrl
push
je
fwait
out
fucomp
int3
cmpsl
js
xchg
jp
outsb
mov
inc
cmpsb
pop
lcall
arpl
and
loop
ds
xlat
insb
add
xchg
push
cld
push
or
or
dec
add
daa
scas
or
out
ds
mov
in
or
mov
outsl
xchg
mov
ljmp
sbb
dec
das
stc
jbe
addl
movsb
pop
mov
jle
mov
std
mov
sub
mov
xchg
sub
aam
push
sahf
xor
stc
cmp
dec
es
mov
mov
mov
sbb
pop
aad
movsb
jno
dec
push
mov
add
lods
mov
into
or
dec
mov
in
mov
pop
nop
mov
and
adc
sub
data16
ret
push
aaa
insb
lods
add
enter
cmp
cmp
dec
repnz
in
imul
sub
js
loopne
mov
xchg
loop
nop
lcallw
mov
jns
sub
imul
lcall
inc
daa
das
call
pop
aaa
jg
pop
adc
xor
xchg
cmp
sbb
insl
stc
mov
in
lock
lods
bound
xor
iret
data16
pop
mov
pushf
inc
mov
scas
adc
imul
hlt
sbb
mov
xorb
push
jl
dec
push
pushf
inc
lahf
mov
mov
cs
mov
sbb
pop
xchg
mov
mov
aaa
and
push
test
out
fdivl
leave
pop
cli
inc
cs
add
pop
das
aaa
inc
push
fadd
and
ljmp
in
out
das
pushf
jl
dec
stos
add
mov
push
jl
mov
jns
dec
cltd
xorb
icebp
clc
mov
pop
jbe
push
int
inc
testb
stc
inc
mov
push
cmp
sub
cmpsb
lea
mov
int
mov
fs
imul
aaa
in
mov
jno
lret
or
ja
andb
into
sub
aaa
xchg
or
movb
pop
pop
aam
push
jle
or
das
mov
orl
iret
jmp
pop
adc
push
jle
sahf
adc
aam
cmpsb
into
cmpl
pop
add
std
jne
add
orb
enter
sub
dec
and
mov
lcall
inc
loopne
mov
pop
mov
add
xor
push
or
outsb
cmp
movsb
jae
pop
push
pop
pop
in
loop
inc
jb
pop
ss
and
lock
sub
loope
push
ja
jge
cmp
fidivrs
ja
mov
jp
rol
push
leave
push
loopne
mov
jmp
jle
xchg
pop
rolb
inc
xlat
in
mov
mov
mov
in
fisubs
xchg
pop
enter
cmp
cmp
dec
dec
adc
andb
inc
xchg
cltd
test
lret
int3
lcall
je
mov
sub
popa
movsl
sbb
and
mov
push
add
push
and
rorl
gs
pusha
mov
or
push
lds
jbe
push
cmp
iret
sub
or
mov
rorl
mov
cltd
sarb
or
lahf
jns
adc
xchg
fstpl
into
daa
sbb
rcrb
movsl
in
iret
dec
xchg
xchg
push
sub
pushf
push
stos
punpckhbw
pop
aas
imul
mov
mov
mov
xlat
or
cmp
je
cltd
sub
shlb
imull
adc
scas
loop
leave
mov
lock
in
xchg
cmp
lods
mov
cmp
lret
xchg
xchg
sbb
jbe
jno
sarl
mov
mov
idivl
dec
clc
pop
xchg
stc
clc
add
std
or
imul
jne
cli
fnsave
pop
mov
and
adc
add
mov
xchg
push
adcb
out
xchg
sbb
ja
das
sahf
lock
xor
sbb
cmc
mov
adc
and
add
call
aad
cltd
mov
xor
stos
jae
lcall
inc
push
mov
inc
lret
insb
lahf
xchg
push
ret
ret
inc
mov
cmp
pop
sbb
je
dec
popf
fwait
decl
fnstenv
inc
or
out
data16
xchg
insb
sahf
push
lea
lret
xor
xchg
divl
loopne
pop
or
xchg
mov
sub
jo
jne
jle
hlt
sub
mov
les
and
je
addb
dec
aas
fwait
pop
roll
xchg
xchg
cmp
popa
in
out
and
adcb
push
int3
mov
lods
mov
and
dec
jne
cmp
mov
std
xor
mov
ss
sbb
fdivrs
jge
dec
inc
mov
scas
push
popa
mov
es
jg
xor
mov
aam
cmp
adc
pusha
jmp
dec
nop
mov
jmp
lock
outsb
into
pusha
push
mov
pop
mov
pop
push
push
fsubrs
stos
push
fistps
and
adc
cmp
inc
shlb
test
mov
add
addr16
xchg
aas
out
mov
call
cmpb
or
lcall
inc
jle
test
lods
xor
xor
addr16
loopne
in
stos
cltd
mov
or
testl
or
icebp
sbb
xchg
pop
mov
sub
out
jl
test
mov
pop
and
mov
ljmp
sbb
popf
and
sub
xchg
dec
loop
sub
mov
mov
mov
test
addr16
fmull
data16
mov
xlat
icebp
scas
in
pop
lods
pop
cmp
inc
out
mov
sub
mov
inc
std
push
sub
lods
mov
insl
mov
mov
jae
mov
aam
pop
stos
stc
in
movsb
stos
dec
mov
xchg
inc
dec
popf
dec
stos
nop
pop
sbb
mov
push
outsl
pop
jmp
repnz
incb
xchg
insb
das
cmp
lea
and
das
cmp
dec
mov
pushf
push
pop
adc
ja
data16
jbe
push
icebp
push
xchg
adc
xlat
test
adc
xchg
xchg
xchg
inc
fldt
xchg
lret
scas
ficompl
stos
fbstp
cmp
or
push
pushf
push
mov
jge
jg
loope
sub
std
in
leave
fisubrl
add
pop
shr
adc
mov
dec
shrl
pop
push
mov
sbb
or
outsl
adcl
cld
adc
cli
aad
xchg
ljmp
mov
daa
icebp
scas
fs
add
adc
xchg
sub
push
or
dec
mov
dec
mov
test
mov
in
or
cltd
lods
and
cmp
icebp
pop
gs
stc
xchg
add
sbb
test
pop
movsl
mov
leave
cld
mov
lea
gs
xchg
dec
pop
add
mov
pusha
push
cmp
mov
aas
mov
rcl
jmp
inc
jno
outsb
or
push
js
mov
xor
pop
mov
jno
xor
xor
dec
pop
mov
incb
push
pop
repnz
sbb
fldcw
inc
int
mov
cmp
rorb
or
xor
mov
notb
icebp
adc
pop
push
add
stos
sub
test
add
nop
or
dec
xchg
cmp
xor
enter
dec
out
jl
jmp
iret
cltd
ljmp
inc
xor
das
add
adc
js
mov
out
sbb
cwtl
inc
and
xchg
sbb
xor
and
out
cwtl
adc
mov
sbb
das
fistps
test
ss
jmp
jmp
push
adc
aad
arpl
mov
ret
je
pushf
mov
jmp
jp
data16
adc
xchg
xchg
test
ficoml
sub
mov
cmp
dec
scas
sahf
jae
xor
push
xchg
bound
jp
inc
cmp
dec
fistpl
push
lret
mov
sbb
ret
pop
add
xor
rcl
xor
jbe
ficomps
movsb
jge
cmp
pop
in
shlb
xchg
sbb
mov
pushf
mov
dec
xlat
mov
fnsave
adc
mov
test
loop
fstl
lcall
jp
popa
mov
sbb
mov
push
inc
imul
xchg
das
in
fwait
mov
std
rorl
add
arpl
cltd
xor
adc
add
and
xor
sar
lret
inc
enter
es
sbbl
xor
mov
pop
sbb
inc
dec
sbb
mov
js
inc
xor
jnp
outsl
adc
jge
mov
js
xchg
inc
xchg
inc
xor
test
fcmovb
rclb
and
xchg
lret
jno
je
ret
sbb
in
aas
in
nop
cmpsb
std
mov
dec
cmp
dec
mov
push
sub
jge
xchg
test
rolb
lret
sub
mov
pop
mov
pop
jns
mov
stc
cwtl
inc
out
jp
and
xchg
mov
sub
push
push
imul
mov
lret
subl
and
push
out
or
add
pop
aam
gs
inc
test
and
jns
fs
je
inc
push
int
inc
lea
xor
sub
rcrl
pop
xchg
mov
xchg
stc
lods
cmp
add
cmp
cli
sbb
outsb
xchg
add
es
lret
mov
mov
xchg
insb
mov
mulb
xorb
jae
fadds
pop
dec
scas
push
iret
out
push
les
out
add
outsb
mov
fs
or
and
mov
sub
inc
repnz
mov
cmp
loope
mov
loop
sub
sub
imul
stos
sub
jns
lahf
cmpsb
cmp
addr16
call
nop
mov
in
inc
xchg
sbb
cltd
mov
popa
fs
aas
cltd
int
lret
and
int
xchg
outsl
dec
test
jmp
fildll
mov
jge
pop
mov
fcmovbe
fiadds
int3
mov
pusha
sti
cs
not
lret
or
loop
ja
aad
ja
stc
inc
adc
stos
pop
imul
jo
and
js
sbb
inc
add
xchg
mov
fldcw
dec
rclb
cmp
xor
inc
repz
not
roll
inc
insb
loopne
sub
xchg
and
sti
nop
repz
adc
jmp
mov
gs
push
loop
std
ds
add
sbb
fbstp
out
pop
dec
jmp
roll
sub
mov
ss
lock
dec
in
dec
std
sbb
fs
movsl
stc
jl
dec
xchg
inc
push
mov
add
mov
stos
jae
shll
clc
outsb
shl
sub
sub
mov
mov
push
pusha
xor
xlat
adc
sub
dec
enter
je
xchg
je
push
inc
pop
and
sarl
and
sub
int
pop
mov
insb
shr
aas
xchg
or
mov
mov
adc
popa
mov
loop
out
aam
out
stos
sahf
or
or
cmp
lret
cmpsl
pop
mov
or
sbb
and
mov
mov
push
out
pop
sbb
fadds
divb
mov
clc
jl
inc
popf
push
popf
sahf
addl
push
dec
jmp
dec
sub
jle
jmp
dec
dec
jmp
jp
daa
mov
jle
sbb
jle
cmp
pushf
out
mov
iret
pusha
mov
sbb
mov
int3
xchg
jb
mov
aad
lcall
popf
fstpt
cmpsl
or
pushf
push
mov
iret
or
pop
mov
jns
pop
pop
sbb
dec
xchg
in
aam
shll
xorb
ds
inc
imul
mov
and
sarb
shrl
popa
shl
sub
cmp
xchg
mov
addr16
ss
cmp
adc
push
inc
dec
jmp
push
stos
daa
xor
jle
fiaddl
out
sub
daa
jbe
fnstenv
and
push
xchg
cmp
xchg
out
loopne
cmp
jmp
arpl
shll
xor
jb
push
xor
jle
mov
lcall
xor
or
out
in
cmpsl
push
jmp
loope
loopne
mov
pop
popf
addr16
out
in
aam
xor
je
imul
dec
jl
mov
and
mov
or
pop
cwtl
test
mov
mov
push
aam
daa
ja
roll
add
out
imul
xchg
mov
sbb
loopne
icebp
adc
xchg
mov
sbb
jle
mov
repz
mov
movsb
fidivl
mov
mov
xor
lock
push
cmpsb
jns
mov
cmp
jle
inc
cmp
cmp
aas
sub
stos
sarb
and
ss
push
dec
mov
mov
fidivrs
xlat
hlt
pop
sub
andb
test
push
das
or
in
push
pushf
push
dec
loop
cmp
mov
jns
ret
imull
out
lods
dec
push
mov
jecxz
mov
cs
push
or
outsl
dec
popa
sbb
enter
sub
clc
or
cmpsb
outsl
pop
int
mov
mov
loope
mov
cmpsl
cld
adc
in
into
movsl
mov
nop
jb
sub
int3
enter
out
mov
jb
test
push
pop
js
mov
sub
test
sbb
push
and
scas
cmp
push
ss
out
xor
cmp
stc
push
xlat
pop
addr16
xor
in
jmp
shr
mov
insb
lea
mov
sub
stc
das
cld
cmp
mov
stos
xchg
mov
rcl
enter
dec
imul
xchg
loope
pop
sbbb
push
and
xor
js
test
push
shrl
call
in
test
push
xchg
jnp
mov
sti
fildl
push
int
aad
jne
mov
lcall
hlt
adc
cmp
iret
movups
push
jns
shrb
ret
cld
call
sbb
push
out
loope
push
fdiv
pushf
inc
test
mov
fbstp
shrl
push
sub
repnz
stc
mov
out
sub
aaa
inc
das
pop
test
ffreep
loopne
dec
out
stos
loopne
sbbl
mov
adcl
mov
push
inc
add
loopne
fcmove
jmp
mov
jae
jo
xchg
inc
push
dec
add
cmp
in
pop
mov
and
jecxz
push
pop
stc
mov
or
xchg
jno
movsb
mov
enter
insl
stos
xor
cmc
push
add
je
adc
adc
int3
sbb
mov
imul
cmc
int3
psubusw
movsb
std
cmc
mov
mov
mov
adcl
test
mov
bound
push
mov
addl
push
popa
imul
push
aam
push
test
mov
repz
movsb
push
push
xor
je,pt
jbe
adc
jp
and
xchg
test
fcmovbe
add
adc
mov
adc
fmuls
in
push
flds
mov
jno
sbb
shlb
arpl
add
in
mov
xchg
push
jo
mov
jge
enter
jns
mov
pop
dec
mov
fisttpl
in
testl
inc
or
push
iret
fsubs
xchg
cmpsb
shlb
or
bound
in
insb
sbbb
push
jb
notl
pop
test
jmp
dec
into
mov
pusha
popf
add
dec
pop
imul
mov
mov
orb
cli
xlat
cmp
std
rcll
scas
mov
xchg
pop
ss
pop
sahf
hlt
mov
lret
sub
filds
inc
push
icebp
sub
hlt
pop
ret
pop
hlt
cmc
cmpsb
lret
cmp
xchg
pop
outsb
or
inc
jae
mov
dec
adc
xor
push
out
sarl
in
mov
xchg
dec
mov
mov
adcl
cmp
xor
leave
popa
cmpsb
pop
or
and
mov
mov
inc
das
and
cmp
jns
sbb
cmp
jbe
sarl
idiv
js
roll
int3
and
mov
idivl
insb
icebp
cld
scas
cs
es
imul
gs
addl
je
xchg
jl
jecxz
jmp
mov
fcomi
sar
je
jl
cli
in
cld
push
cmp
fisubl
sub
jle
xlat
iret
push
jns
shl
lds
xor
cs
jle
insl
xorb
or
mov
ja
mov
add
jb
add
dec
cmp
rcr
pop
cmp
fmulp
push
sbb
test
jg
sbb
lea
rcr
aam
pop
or
int
stc
cltd
arpl
or
movsl
jecxz
fisubl
clc
xchg
call
mov
pop
cwtl
call
xor
dec
mov
fisttpl
jb
daa
jle
jbe
shrb
mov
std
mov
pushf
gs
stos
mov
ficoms
fimuls
xchg
add
outsl
mov
xchg
test
scas
aaa
lahf
sbb
ret
push
xor
loope
dec
cmp
movsl
adc
pop
dec
lods
fisubrs
xor
iret
movsb
in
pop
and
and
cmp
push
jl
fdivrs
neg
pusha
mov
pop
push
jp
inc
sub
stos
in
rolb
dec
push
movsl
loopne
ja
faddl
pop
and
jae
gs
sbb
jbe
or
movsb
aas
push
int3
xor
and
or
je
sub
push
js
xor
roll
jo,pt
cli
enter
clc
dec
adc
push
repnz
lret
arpl
add
pop
xchg
adc
push
lahf
pop
mov
inc
push
mov
call
bound
gs
cmc
jnp
mov
fwait
out
idivb
test
mov
mov
je
inc
add
mov
mov
paddsw
add
jbe
inc
pushw
sbb
jno
sub
js
xor
daa
rcr
data16
xchg
push
push
push
rcrl
jg
and
pusha
sub
sub
or
cs
pusha
add
repnz
les
out
mov
fbld
xchg
xor
push
fisubs
aas
jnp
or
cli
insb
xor
cmp
inc
push
mov
std
lea
xor
fistpl
faddl
popa
in
push
shrl
out
popf
cmp
adc
test
xchg
imul
adc
cmp
xchg
pop
dec
stc
rorb
pop
rcl
test
add
orl
mov
sub
xor
mov
mov
int3
jnp
dec
mov
adc
cmp
inc
xchg
push
enter
arpl
adc
leave
xlat
out
ret
push
test
sub
les
or
insb
nop
mov
ja
jbe
jno
jne
test
ljmp
or
push
xchg
inc
es
dec
aaa
stc
pop
repz
sub
test
or
ss
push
sbb
dec
out
aam
les
adc
pusha
sbb
bound
lock
xchg
ret
test
add
lods
mov
stos
ljmp
mov
and
jmp
cmp
mov
cmp
iret
lahf
push
insl
cmp
orl
mov
or
dec
enter
call
test
call
nop
cmpl
xor
hlt
out
push
in
mov
xchg
enter
pop
pop
in
test
jp
mov
xchg
mov
jmp
add
aas
xchg
sub
test
cltd
cmp
arpl
pop
out
jg
push
leave
adc
mov
pop
add
es
bound
iret
enter
adc
push
fmuls
or
mov
mov
fcoml
inc
push
insb
sub
dec
add
lock
ljmp
arpl
pushf
jmp
jno
sbb
movsl
pop
mov
or
jge
cmp
leave
add
jns
adc
js
add
mov
cmc
and
mov
shl
adc
jl
push
mov
and
ja
int3
aad
test
mov
out
mov
fsubrs
and
stc
aad
push
mov
shrb
fwait
cmp
outsb
sub
lock
dec
or
lret
mov
out
shlb
sbb
jno
iret
fs
xchg
mov
adc
pop
mov
and
jmp
pop
mov
addr16
push
imul
jmp
pop
add
iret
iret
push
xchg
push
ret
incb
stos
or
stos
daa
aam
aaa
int
and
pushf
cmpsb
leave
sub
fcmovnb
inc
mov
pop
dec
ret
arpl
ds
test
lcall
inc
inc
ret
divl
out
fisttpl
add
das
movsb
mov
or
fs
pop
shll
jl
aas
jmp
test
stos
pop
in
movzwl
mov
push
cmp
leave
out
repnz
mov
add
loop
stos
push
push
pop
iret
je
cmp
in
push
push
xchg
rcl
mov
sbbl
or
cmp
xor
aas
out
cwtl
paddsb
sti
adc
mov
call
mov
mov
add
add
stos
sbb
cmc
lret
pop
sub
dec
or
out
push
movsb
mov
fcoml
lods
jnp
addl
mov
dec
xchg
jmp
cmpsb
inc
and
test
pop
mov
pop
lahf
mov
jbe
int
dec
dec
testb
xor
pop
push
xorb
push
xor
imul
cltd
pop
dec
mov
xlat
add
sub
inc
out
add
fcompl
inc
sbb
mov
out
mov
mov
loopne
sub
sbb
mov
mov
mov
ds
mov
icebp
int3
jo
and
test
test
insb
mov
xchg
dec
mov
mov
shl
test
mov
xor
mov
int3
jo
pusha
imul
xor
fwait
mov
ds
bound
xchg
cmp
xor
dec
into
ror
mov
testb
xchg
pop
stos
ljmp
cmp
sarl
cmp
mov
mov
push
loop
mov
adc
lcall
push
mov
xchg
roll
in
movsb
lret
cmp
mov
lods
repz
mov
imul
or
xchg
pop
je
adc
xor
ja
and
cmp
ret
es
test
and
mov
push
xor
xchg
mov
pop
cmp
mov
cmpsb
jo
test
xchg
push
cld
or
enter
xchg
inc
icebp
push
fldt
popf
xor
lahf
inc
add
cmp
push
adc
loop
pop
ret
scas
out
dec
clc
sbb
stos
mov
adc
mov
sets
mov
int
cltd
xchg
jno
fisttpl
adc
imul
xor
jge
lock
mov
shlb
push
aaa
int
jne
es
pop
fwait
rcr
and
adc
mov
sub
les
jl
ret
daa
leave
xchg
out
int
hlt
lret
sub
jmp
inc
data16
adc
fisttpl
std
sbb
subb
addr16
sbb
js
cmp
aam
scas
in
push
nop
mov
dec
popa
cmp
out
push
mov
adc
add
cwtl
dec
addb
xor
fiaddl
mov
mov
int
cmp
sub
lret
inc
add
add
pop
fwait
lock
pop
jo
ret
xor
dec
jb
add
fldl
push
mov
popf
test
xlat
or
dec
testb
fcmovu
aas
bound
jno
ljmp
dec
scas
sub
mov
popa
popa
and
negb
xor
loope
and
xor
insb
xchg
pusha
icebp
pop
je
nop
das
gs
ds
cmpsb
fiadds
adc
adcb
push
cmpsb
movsl
pushl
mov
sub
clc
incb
xor
push
ds
ja
sbb
dec
fs
or
cwtl
in
inc
xlat
and
cmpb
sbb
inc
push
cmp
pop
pop
outsb
jae
or
imul
jle
arpl
imul
and
lods
mov
cmp
pop
jmp
mov
leave
inc
test
in
das
add
scas
fisubrs
jp
iret
pop
fwait
pop
and
push
dec
xlat
push
mov
int
cltd
fdivs
mov
jno
std
mulb
iret
lods
into
sbb
insl
mov
stc
cmpsb
scas
cmc
test
xchg
sub
pop
add
adc
ret
add
sbb
fs
fsubl
in
mov
cwtl
mov
xchg
xchg
imul
xchg
cli
push
mov
pop
xchg
xchg
adc
fsubs
lret
add
mov
ss
mov
xchg
and
mov
xchg
test
mov
jle
dec
pop
add
cmp
insb
popf
dec
movsb
pop
loope
enter
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
xor
xchg
out
loope
jp
pop
jp
push
sub
mov
inc
jbe
iret
push
iret
pop
andl
fdivr
mov
sbb
inc
xchg
fstpt
sub
sub
loop
jge
lods
fisttps
mov
xor
cltd
lret
mov
dec
push
pop
dec
push
outsb
mov
push
adc
scas
mov
cmp
int3
int
ss
push
popf
push
call
cmp
cwtl
enter
mov
mov
cwtl
mov
pop
into
push
call
and
or
fcmove
sub
loopne
cmc
add
sarl
mov
mov
or
add
gs
jne
mov
loope
and
add
dec
shrl
fistl
ror
sub
insb
mov
jecxz
insl
lcall
pop
and
push
sub
sbb
xchg
sbb
mov
pop
lret
add
sbb
adc
dec
pop
test
lret
imul
sub
cmp
fldcw
adc
mov
stc
mov
xchg
xchg
movsb
stc
push
inc
shrb
pop
pop
jmp
pop
jnp
sub
add
insb
mov
mov
cmp
das
pavgw
test
xchg
js
test
lret
imul
add
mov
inc
lds
cmp
fisttpll
lods
push
int3
lret
jge
cmp
ja
loopne
jecxz
adc
lahf
lods
push
pop
lret
enter
adc
cli
stos
dec
mov
outsl
dec
jne
mov
das
jmp
nop
xchg
mov
icebp
hlt
dec
jnp
test
ret
jg
lcall
pushf
ja
shlb
into
push
xor
fistl
xor
repz
popl
add
mov
out
hlt
jo
leave
pop
cltd
mov
test
jg
push
mov
fidivrs
loopne
fnstsw
lods
dec
inc
push
or
mov
je
jo
cli
mov
pop
std
jmp
fdivr
sbb
fcomps
iret
into
fdiv
aad
mov
and
pop
mov
ljmp
sbb
cmp
xchg
and
mull
jg
jg
loopne
or
fisttpll
sbb
push
aam
popf
xchg
pop
aad
ja
popa
int
adc
inc
and
ljmp
add
adc
pop
test
mov
sti
lods
imul
outsl
pop
push
pop
subl
jecxz
add
leave
xchg
dec
pop
test
mov
cmp
inc
notb
cmpsl
sub
or
jle
or
xor
lea
inc
fs
xchg
mov
adc
outsb
nop
cmp
imul
add
push
je
pop
mov
or
or
pop
inc
std
cmpl
jl
push
xchg
xor
mov
or
popf
fnstsw
xchg
lea
shll
pop
mov
pop
jle
aad
test
fcomp
les
in
lods
inc
sub
mov
sub
int3
arpl
or
dec
jmp
lret
lods
pop
outsb
dec
daa
mov
popf
ja
jp
sbb
movsl
in
jmp
mov
cmp
mov
push
lock
les
inc
mov
cmp
fsubrs
test
mov
pop
sub
movl
mov
sub
loope
xlat
pop
hlt
push
ds
iret
push
out
xor
dec
cmp
pop
add
scas
incl
push
std
fwait
xor
or
leave
cmp
push
or
jecxz
xchg
add
neg
out
std
xor
dec
sbbl
aad
data16
and
ret
pop
adc
ret
repz
dec
jno
fadds
loopne
push
pusha
icebp
pop
test
dec
sub
and
dec
cmpsl
leave
fs
jo
daa
nop
or
mov
fwait
mov
sarb
into
pop
insl
scas
inc
mov
addb
mov
lcall
shl
out
lods
mov
jmp
push
nop
or
loopne
ds
and
ret
xor
in
jb
xchg
les
rcrb
jnp
lahf
int3
dec
and
jecxz
and
sbb
and
aam
mov
xor
call
and
mov
jmp
dec
idivl
adc
iret
fistpll
adc
lcall
mov
cltd
cmc
orb
test
ja
pop
int3
push
and
mov
arpl
mov
int3
pop
fucomp
xchg
push
inc
dec
push
jle
push
fwait
push
adc
or
out
stc
loope
jge
enter
in
or
mov
mov
cwtl
stos
or
xchg
popa
nop
or
sti
shl
aaa
mov
or
shl
xchg
adc
rolb
ret
cwtl
and
test
sbb
pop
push
mov
or
rol
mov
ds
scas
pop
xor
and
and
pushf
adc
push
test
xchg
mov
or
push
push
lahf
aas
sahf
or
sti
xor
jns
shl
jns
out
or
push
mov
call
cmp
dec
dec
xchg
divb
movsl
pop
dec
push
xor
bound
mull
imul
cwtl
bound
inc
dec
lcall
mov
cmp
bound
out
insl
lret
ljmp
cmp
xchg
in
xchg
hlt
fldenv
push
sarb
fldenv
inc
inc
sbb
adc
das
jmp
daa
adc
sar
sbb
insl
rclb
mov
pusha
or
jne
jae
xchg
loop
xchg
xchg
ret
pop
jecxz
rcr
stos
into
cmp
jge
mov
xor
mov
dec
loope
cmc
stos
pop
xchg
inc
jbe
xchg
jl
mov
scas
xchg
lahf
mov
mov
in
mov
sub
sahf
clc
inc
xor
or
dec
les
jne
outsb
and
or
in
int
jb
bound
mov
mov
lret
xchg
and
pop
lcall
push
mov
cmp
out
mov
xchg
movsl
cmp
outsb
pop
pop
dec
stc
pop
cmc
sahf
out
cmp
mov
push
rcrl
mov
cmp
and
sahf
xchg
push
lds
fdivrl
xor
hlt
pop
sub
jnp
jl
sbb
add
mov
out
push
sbb
add
sub
fwait
and
sbb
dec
mov
pushf
in
dec
cmpsb
push
pop
test
lods
push
mov
fwait
inc
sub
subb
loop
repz
jle
add
sti
pop
inc
scas
stc
and
and
shlb
sbb
insb
xcrypt-cbc
cmpsl
shll
xor
fidivl
das
xor
fcomps
cmp
mov
mov
out
dec
movsb
push
cmp
inc
dec
mov
hlt
push
mov
das
xor
lea
frstor
dec
sub
js
rcr
cltd
or
andb
adc
jbe
adc
outsl
aam
in
lcall
ret
sbb
int3
data16
nop
mov
mov
out
pusha
call
in
mov
fs
out
sub
and
lds
sub
aas
testb
gs
int3
lods
cli
push
jns
repnz
clc
out
les
lods
mov
lcall
scas
sub
scas
add
loop
test
pop
adc
icebp
jecxz
cmp
push
or
add
add
or
data16
pop
mov
mov
call
push
rolb
jns
div
movsb
push
repz
inc
adc
setge
pop
fisubrs
mov
movsb
jmp
aas
xchg
mov
push
cmp
mov
out
and
fstpt
loop
cs
sbb
lods
int3
test
push
fs
shll
std
push
movsb
add
popa
push
jmp
inc
fcomps
xchg
mov
push
addl
xchg
je
sahf
in
int3
inc
dec
adc
repz
xor
xchg
aam
inc
data16
jns
adc
dec
test
mov
xchg
jno
add
inc
push
lahf
add
sub
xchg
into
push
in
and
fs
mov
sahf
jnp
mov
scas
push
push
jb
mov
mov
enter
jecxz
fnsave
cld
sar
inc
xchg
mov
popf
shll
inc
adc
in
in
js
cmp
test
outsl
mov
push
ret
cmp
pop
mov
nop
clc
pusha
sbb
rorb
add
lods
test
aaa
mov
sbb
mov
sub
enter
pop
mov
sub
aam
add
jecxz
popf
out
add
jmp
cmp
mov
repz
mov
add
lcall
icebp
cmpsb
push
in
lret
in
adc
mov
adc
fs
int3
add
scas
repz
pushf
mov
and
push
cmp
out
push
es
push
mov
mov
lret
pop
jb
jp
cmp
dec
and
rorb
pop
cli
shufps
inc
stc
push
adc
aad
xor
mov
mov
movsl
ret
loopne
inc
bound
jne
in
movsb
test
aas
adc
aad
lcall
dec
stos
xor
imul
pop
popf
jne
xor
or
ljmp
cmp
mov
orl
imul
xor
and
cmp
stos
lahf
sarb
out
adc
xchg
xor
push
pop
int
lods
repnz
gs
sbbl
jno
sti
stos
sahf
xchg
lcall
inc
iret
into
and
mov
and
sub
testb
jl
inc
jl
repnz
pop
std
dec
jae
pop
mov
fcmovu
pop
repnz
jl
and
mov
lods
jmp
ret
loop
mov
out
shrl
iret
fdivrs
push
push
lcall
addr16
bound
sub
cmp
pop
sbb
imul
or
lret
sbb
and
or
cwtl
jecxz
dec
sub
xor
and
movsl
pop
andb
in
xchg
ljmp
in
ds
push
or
fstpt
jae
add
and
cmp
mov
mov
jo,pt
jno
pop
stc
mov
push
or
stos
mov
push
mov
jl
mov
bound
jns
rorb
mov
repz
enter
hlt
ja
dec
out
or
mov
mov
in
add
lret
pop
xor
dec
push
inc
push
mov
xchg
enter
dec
cli
mov
and
insb
mov
rcrl
mov
xchg
icebp
push
push
push
pminsw
pop
dec
or
fnsave
lds
rclb
decb
dec
or
cld
out
adc
cmp
lds
cmp
inc
xor
add
sbb
push
dec
sarb
sub
jne
frstor
pop
mov
mov
shll
mov
dec
push
inc
ret
aas
insl
jae
shrb
stos
pop
push
add
imul
movsl
andl
ljmp
mov
xor
roll
mov
int3
adc
inc
rcrb
mov
cli
call
in
ljmp
jge
je
ret
xchg
rorb
pop
fsubl
out
stos
pop
adc
and
mov
sub
cli
stos
out
loop
stos
xchg
jg
adcb
xor
stos
mov
mov
imull
adc
inc
iret
repnz
mov
decb
sbbl
inc
cmp
add
dec
sub
das
sub
movb
cmp
test
xchg
sbb
or
lods
sbbl
cwtl
fimuls
cmc
push
lock
stos
sahf
or
or
push
and
dec
fisttpll
jae
clc
mov
push
cmc
sub
dec
or
out
and
cwtl
popa
pop
jb
inc
pop
inc
pop
jge
dec
mov
fisttps
push
decl
cmp
push
push
call
lahf
mov
mov
mov
je
and
cmp
js
mov
and
xor
ret
adc
push
inc
aas
jne
xorb
mov
cmp
es
pop
mov
rcrl
nop
inc
andb
js
andl
jo
imul
jns
add
mov
aam
xchg
psubsw
arpl
xor
scas
repz
jl
aam
xor
sbb
cltd
bound
dec
add
adc
jg
pop
pop
pop
shr
ficompl
std
push
aaa
iret
push
movsl
jae
std
andb
mov
adc
or
repz
add
push
add
xchg
pop
sbb
in
insb
enter
repz
xchg
xor
and
mov
xchg
jp
push
cwtl
insl
out
pop
mov
fistl
js
jno
scas
xchg
inc
ljmp
jns
in
mov
in
push
pusha
sbb
stc
xchg
imul
inc
jg
cmp
mov
daa
and
scas
mov
je
ds
fs
adc
fildll
cmpsl
in
dec
mov
cmpsl
data16
lret
stos
xchg
mov
cmp
and
sbb
mov
jne
cmpsl
je
push
push
fdivrl
sbb
insb
add
je
xchg
jne
jae
push
cmp
inc
aas
jo
xorb
cwtl
jne
sub
mov
call
int
aas
leave
push
and
push
add
jp
dec
sbb
sbb
lahf
ds
test
adc
mov
inc
mov
xchg
inc
mov
mov
and
fs
lret
push
test
fsubrl
fcmove
mov
gs
notl
fldcw
lret
incb
cmpsb
dec
pushl
pop
mov
push
ficoms
mov
push
cmpsl
or
stos
outsb
jle
mov
sub
stos
mov
cmp
sbb
repz
xor
or
popf
aaa
adc
dec
fwait
xor
int3
jns
shll
imul
cli
dec
jmp
into
outsb
mov
daa
add
inc
or
cmp
sbb
jp
sbb
xchg
rorl
pop
stos
scas
lea
ficomps
jb
add
and
mov
xchg
arpl
in
dec
pop
leave
inc
push
push
pop
sarb
lret
or
dec
jl
sub
sbb
xchg
xlat
xchg
push
scas
or
rclb
sar
movsb
aam
jbe
push
dec
int3
dec
mov
mov
fidivl
push
cmp
les
mov
cs
dec
fwait
push
and
je
cld
mov
nop
pop
fidivrl
ret
mov
fbstp
xor
jnp
sub
adc
arpl
fistpl
and
pop
cmp
mov
push
pop
mov
in
test
cmp
mov
fistl
pop
loop
in
mov
inc
cmp
dec
lcall
xchg
leave
jge
xor
in
imul
or
push
xchg
out
int3
xlat
cmp
addr16
enter
xor
or
add
fwait
out
cmp
xor
ds
int3
jnp
shlb
push
add
pop
inc
adc
in
imul
dec
daa
xchg
dec
and
nop
leave
sahf
test
in
leave
pushf
or
pop
mov
pop
xchg
inc
scas
cld
push
pop
les
xchg
into
imul
xor
lods
mov
icebp
sahf
sub
loop
adc
call
int3
add
pop
int3
xchg
adc
jbe
imul
loopne
imull
or
and
ja
in
out
or
not
std
cmpb
sub
sub
arpl
push
cmpl
fimull
sbb
mov
nop
imul
sub
mov
jmp
sahf
test
xor
sub
rcl
xchg
pop
mov
pushf
or
mov
mov
mov
xlat
insb
adc
icebp
fwait
mov
push
jb
mov
sub
dec
into
adc
negb
push
shr
cltd
and
loop
shlb
dec
mov
cmc
lcall
outsb
or
rcrl
and
jo
ljmp
out
jl
xchg
test
stc
mov
scas
ds
and
xchg
xchg
jle
aaa
mov
sahf
add
adc
jg
mov
int
pop
outsl
movsb
xchg
pop
push
loop
movsl
jg
fdivrl
cmc
jl
ss
pop
mov
dec
xchg
repz
repz
mov
mov
push
je
addr16
or
stos
xchg
xor
test
je
mov
adc
mov
pop
fnstcw
call
leave
pop
pop
push
pop
leave
cmpsl
push
mov
mov
push
sbb
push
std
jns
mul
js
and
mov
rcr
add
cmpsl
sahf
loopne
xor
xchg
outsb
insl
outsb
mov
sub
jp
inc
cmpsl
push
je
fwait
mov
lret
gs
ret
cmp
shll
bound
sub
mov
out
fistpl
push
stc
f2xm1
icebp
fcmovu
cmp
out
add
les
xchg
int3
sub
sub
stc
sarb
add
out
mov
xchg
les
xchg
test
adc
into
nop
insl
lods
test
bound
cld
jl
jp
mull
add
push
adc
add
out
fwait
mov
sti
imulb
iret
std
cld
aas
pop
cli
sbb
and
rcrl
mov
mov
jnp
cmp
jns
into
xor
pop
pusha
sub
loopne
xor
fistpl
mov
cmp
xchg
loopne
orb
cmp
imul
cli
jmp
cli
push
cmp
mov
ret
mov
out
xchg
push
or
test
ljmp
cwtl
xchg
adc
mov
add
mov
js
jns
test
movsl
int
mov
popa
jg
mov
add
test
dec
shlb
dec
mov
icebp
pop
lock
and
mov
call
test
fstpl
jle
lret
int
repnz
push
inc
mov
aam
lock
std
ret
cs
sub
hlt
sub
push
sub
loopne
das
or
sbb
int
sbb
xor
fistps
pop
jp
shlb
movq
xchg
sbb
xor
and
dec
add
daa
pop
jge
jnp
popf
rclb
data16
ss
int
pop
daa
mov
stos
adc
cmp
xchg
jg
adc
out
sub
outsb
bound
push
lahf
enter
or
mov
aam
cld
sub
and
mov
in
cs
cmp
xor
push
cmp
or
das
repnz
in
dec
xchg
or
push
mov
loop
bound
inc
jle
mov
fildl
inc
mov
cli
mov
aad
cmpsb
and
fidivrl
cwtl
stos
dec
loop
les
xchg
popa
jmp
insl
and
add
xor
sub
mov
aaa
fucom
cmp
stos
jmp
cld
sar
mov
adc
bound
pop
and
pop
jmp
sbb
jne
fists
inc
inc
push
sbb
mov
or
inc
mov
dec
push
or
fcoms
fsubp
or
xchg
repz
ficompl
aam
je
mov
add
cmpsl
inc
xor
stc
test
fwait
test
cmp
imul
pop
dec
push
xchg
bound
adc
cld
in
xor
add
dec
pop
mov
xchg
cmp
cmp
dec
adc
cmpsb
sahf
xlat
add
mov
push
mov
aad
clc
sub
data16
dec
lcall
in
fnstenv
dec
jb
xchg
mov
dec
or
jnp
sbb
es
in
aam
mov
and
test
in
std
xor
movsb
pop
fisttps
sub
out
add
int
mov
shlb
insl
xchg
sbb
dec
and
mov
int
femms
cli
inc
jns
xor
mov
jg
pop
je
and
test
inc
mov
imul
mov
cmc
clc
frstor
push
inc
daa
sar
fmull
in
divl
dec
mov
pop
xchg
sub
add
add
rorl
cli
cmpsl
ficompl
sbb
mov
movsl
xor
xchg
lcall
and
test
ret
jmp
popa
pop
notl
hlt
xchg
sub
lahf
ja
daa
out
add
dec
pop
xor
rcrb
push
xchg
hlt
mov
out
idivl
call
mov
pop
jno
pop
pop
out
arpl
pushf
xor
rorl
and
sub
bound
popa
mov
lds
daa
scas
mov
mov
addr16
add
cmpsb
test
dec
dec
in
pushf
imul
js
lods
and
mov
mov
add
mov
mov
cmc
xchg
mov
daa
into
imulb
jnp
xor
ljmp
sarl
jb,pt
jle
shl
insl
cli
dec
cld
fxch
sub
and
pop
mov
jl
add
xchg
xchg
xor
aad
or
mov
cwtl
std
das
pop
arpl
jmp
dec
shlb
ret
mov
push
cltd
pop
in
push
stos
cmp
xor
add
or
xor
push
das
outsb
sbb
mov
sub
sub
xorb
add
clc
lock
xor
call
lahf
iret
add
add
fwait
imul
inc
jmp
cld
pushf
in
push
or
lds
repz
addps
add
pusha
lods
pop
adc
mov
inc
cmp
add
sub
sub
mov
push
adc
pop
add
jbe
mov
pop
pusha
call
das
push
lcall
sbb
js
cwtl
ljmp
xchg
adcl
pop
or
ficomps
stc
xor
leave
push
jo
sarl
push
fsubs
pop
jl
mov
fildll
jae
mov
lret
and
in
sbb
jecxz
lahf
adc
fdivr
xchg
insl
pop
lret
ret
adc
insl
or
test
xchg
in
jge
icebp
out
or
in
ret
xor
sub
into
cmp
xchg
ret
pop
push
testb
inc
jmp
shrl
ljmp
std
in
inc
sub
ljmp
iret
aam
xlat
es
stos
fidivs
popf
dec
jl
mov
mov
push
pop
sbb
aaa
test
out
cmpl
out
insl
out
push
push
lock
xchg
enter
jne
sbb
bnd
push
movsb
imul
pop
call
neg
and
nop
jns
sub
jnp
cs
fucomi
push
cmp
rcrl
hlt
mov
fcoml
stos
push
add
pop
mov
rcrl
mov
scas
lock
cli
dec
cmpsb
push
push
push
out
das
sub
lds
push
cmp
push
pop
pop
ljmp
aam
inc
lret
popf
decl
pusha
imul
aas
pop
fsts
xor
push
rcr
stc
xchg
cmp
insb
sub
aas
sub
in
hlt
addr16
cmp
add
adc
repnz
pop
jl
enter
nop
xor
or
and
dec
insl
nop
inc
add
call
cmc
mov
mov
repnz
adc
into
outsb
mov
xchg
mov
sub
xchg
scas
dec
push
add
jo
cmp
push
je
and
xor
mov
add
shl
add
stos
pop
inc
rolb
cmc
add
mov
xchg
inc
jae
cmp
aad
mov
shll
outsb
cmp
insl
nop
pop
or
clc
inc
lret
bnd
push
adc
xchg
jnp
pop
clc
mov
cltd
jo
sbb
and
cmc
mov
mov
test
mov
mov
push
jnp
lahf
fcomp
jns
push
imul
xor
in
mov
mov
or
out
and
jnp
dec
aas
stc
sbb
jge
and
mov
push
stos
in
aad
mov
mov
mov
jmp
ss
sub
roll
sbb
or
aad
loope
stc
mov
xchg
adc
xor
sub
mov
sarb
or
in
jns
fists
cmpsl
jmp
loopne
incl
xchg
mov
jno,pt
jns
shll
sub
dec
pop
mov
jns
mov
cli
sub
ss
pop
or
dec
ja
xlat
mov
inc
lahf
in
arpl
ljmp
repnz
int
push
into
call
ret
fdivl
xchg
popa
xchg
push
test
sahf
sbbb
mov
loop
lea
push
test
mov
inc
shrd
cmpsb
sub
aam
lret
pusha
out
and
xchg
pop
loop
imul
imul
add
jmp
ficomps
mov
jp
jle
lret
mov
inc
jno
fstpl
cli
push
daa
mov
inc
cmpsb
ljmp
ljmp
xor
jp
fisttps
xlat
mov
insl
rcrb
gs
insl
sbb
sbb
adc
adc
jmp
jns
mov
in
xor
mov
sbb
leave
cmp
into
or
mov
imul
dec
push
sub
cld
xchg
insb
fsubl
loop
fildl
xor
inc
xlat
aad
ljmp
movsl
dec
or
pop
and
push
pop
jo
push
in
inc
dec
dec
mov
mov
aas
comiss
add
jb
scas
loop
into
cmpsl
mov
daa
push
insb
jns
int
sub
mov
loopne
xchg
addb
lret
xor
ds
or
and
add
pop
out
outsb
xor
iret
bound
add
cmpsb
scas
xchg
add
mov
or
int3
or
lcall
mov
sbb
imul
push
fstpl
dec
inc
and
stos
inc
cld
jo
std
push
jl
mov
cmp
iret
enter
jae
mov
jge
fs
mov
fs
pop
fldl
cld
mov
adc
inc
adc
scas
repnz
ret
pop
xchg
scas
xor
jp
pop
xlat
dec
lods
add
rorl
add
test
xor
mov
mov
push
xchg
js
std
cmp
sub
test
lcall
lds
cwtl
jg
enter
inc
out
sub
and
xlat
push
dec
inc
and
movsl
add
in
lcall
push
aas
sbb
je
push
cli
add
mulb
fstpt
test
cmpsb
jg
bound
xchg
dec
iret
sub
outsb
je
fstl
cmp
stc
push
lret
insb
cmp
xor
bound
mov
mov
idivl
in
in
adc
or
aam
fs
add
sar
jmp
fs
js
xor
imul
movsl
dec
pop
lret
add
xorb
popa
xor
iret
mov
cmpsl
clc
inc
cwtl
mov
mov
jns
cld
jo
popa
mov
add
dec
cld
push
and
aam
scas
clc
stos
mov
push
imul
sbb
dec
or
pushf
int
and
mov
out
insb
or
lcall
and
sbb
mov
shl
sub
popa
mov
xchg
icebp
push
pop
cmp
mov
jl
addr16
mov
ja
mov
arpl
jmp
pop
mov
and
add
cli
inc
pop
lcall
data16
push
pop
fdivr
js
sbb
mov
mov
cmp
dec
sub
data16
insl
and
adc
into
xchg
or
fisubs
xor
les
push
rclb
sbb
sbb
enter
sbb
in
jmp
mov
test
jb
mov
addr16
cmp
pop
jo
sub
push
cmpsb
mov
test
out
cmp
dec
or
popl
mov
xchg
jo
and
mov
fimull
test
int3
shl
jne
sub
ljmp
stos
cmp
xor
jb
adc
loope
popa
mov
call
mov
cs
sti
jne
or
jp
lea
clc
rorl
out
roll
sbb
sub
sbb
pop
pop
or
lods
test
xchg
push
lcall
push
enter
xchg
adc
rolb
aaa
mov
ljmp
xlat
cltd
jbe
push
fsubrs
mov
cmp
or
lods
mov
inc
shlb
cmpsb
mov
scas
push
inc
sbb
pushw
loop
mov
sti
dec
imulb
std
loop
fnstsw
xchg
dec
or
add
and
jmp
cld
adc
fidivrs
js
clc
jle
dec
in
icebp
cmp
mov
fs
out
sub
xor
jmp
arpl
xchg
outsb
insb
lods
sti
shll
pusha
mov
adc
dec
inc
mov
xchg
pop
jne
xchg
es
leave
pusha
dec
repnz
push
xchg
jmp
add
sub
incl
mov
cmp
les
popf
mov
ret
je
lahf
push
cwtl
push
in
cltd
push
and
and
pop
sti
mov
adc
mov
js
and
mov
lret
sub
lods
ds
cmpsl
roll
mov
test
aam
push
sub
in
test
xor
and
or
sbb
pop
pusha
ds
test
push
aam
xchg
pop
testb
and
jp
mov
in
aad
jae
xor
xchg
cltd
arpl
xor
test
mov
and
popf
shrb
or
xchg
popa
lds
xchg
adc
push
or
aas
mov
adc
sti
ja
cmp
insl
loop
cwtl
pop
test
insl
imul
cmp
andl
adc
rolb
scas
dec
xlat
je
and
outsb
or
mov
scas
shrl
pop
jl
pop
fists
push
adc
std
stos
inc
xlat
cmp
xorb
cmc
sub
sbb
or
repz
scas
dec
aad
pop
ljmp
das
or
add
loop
mov
or
adc
sahf
xor
aam
ret
inc
dec
in
mov
push
inc
mov
in
jno
cmp
or
adc
testl
std
or
push
xor
inc
scas
dec
pop
addr16
test
jl
sahf
or
out
xchg
or
xlat
outsb
xchg
rcl
mov
xor
scas
hlt
jne
movsb
fnsave
dec
int
sub
gs
out
jl
push
push
les
cmc
mov
push
pop
lret
xor
cmp
insl
pop
out
xlat
test
ret
mov
sbb
stos
inc
sub
lret
jmp
rolb
into
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
jbe
fmull
pop
jp
pop
push
test
loopne
out
mov
repnz
jp
repz
mov
pop
push
xchg
jnp
loope
push
mov
add
sbb
lret
jae
les
sub
xchg
push
and
and
ret
cmc
loopne
sti
cmpsl
out
sbb
mov
push
enter
test
lret
inc
xchg
fbstp
mov
jns
orl
jp
mov
mov
stc
push
pop
push
add
xchg
popf
icebp
jns
pop
xor
xchg
icebp
pop
ret
push
xchg
repnz
cmpsl
mov
mov
jb
test
fmull
daa
loopne
adc
xor
mov
fs
xchg
lret
jo
pop
bound
mov
lds
daa
jecxz
scas
push
cmp
out
lret
in
dec
mov
jle
aad
int3
lock
nop
repnz
pop
mov
push
cs
sbb
dec
pusha
add
in
ds
xchg
or
mov
sbb
adc
or
loop
push
mov
inc
jmp
mov
aas
movsb
or
cmp
ret
pop
scas
add
dec
or
nop
sbb
xlat
xor
rcr
sbb
leave
lock
idivl
push
pop
pusha
adc
int
adc
popf
les
adc
insl
dec
inc
imul
fidivrl
clc
inc
push
push
movsl
xchg
pushf
aas
pop
sti
sahf
mov
aaa
fcomp
cmpsb
sarb
push
sub
adc
sub
sub
lahf
shll
push
push
fucomip
xchg
and
pop
and
insb
cs
aad
stc
repz
pop
xchg
mov
jmp
dec
mov
mov
xor
fs
xchg
pop
mov
das
mov
jno
testb
cmc
cmp
in
mov
lds
xchg
jecxz
inc
xchg
mov
stos
jmp
hlt
aam
push
push
push
mov
loopne
mov
cmpsl
stc
push
push
sbb
cmpb
test
cmp
xchg
movsb
fbld
cmpsl
jmp
pop
dec
test
test
insl
loop
jo
loop
cmpl
mov
psllq
mov
sbb
movb
mov
mov
mov
cmp
fiadds
test
mov
je
mov
loope
int
xor
sets
enter
addr16
leave
xlat
or
sub
add
sarb
leave
pop
add
scas
or
inc
shl
or
inc
and
adc
lds
xorl
mov
pop
jg
xor
pop
sub
pop
sub
jl
sbb
mov
les
addr16
add
push
cmp
mov
lock
add
mov
mov
loopne
adc
inc
inc
sbb
xchg
mov
mov
jae
lcall
pop
std
cmp
jle
jp
sahf
arpl
pop
pop
shrb
adc
fdivs
pop
push
sbb
insb
test
jmp
invd
xchg
pop
inc
push
xchg
shll
dec
xchg
popa
mov
xor
jle
jge
fidivrs
inc
loope
jg
add
jmp
sarb
popa
mov
cmc
cmp
pop
jns
insl
jp
cmp
aad
push
pop
xchg
mov
push
pop
lds
loopne
jg
jecxz
popa
sti
adc
les
and
out
sub
insb
pop
shl
push
sub
sbb
test
and
imul
psraw
sub
or
add
pop
dec
cli
jp
adc
pop
push
mov
dec
push
mov
sub
cmpsb
inc
lods
test
out
xlat
stc
lret
xorb
cli
mov
in
jns
or
pop
btc
sbb
shlb
mov
bnd
cmp
ret
pop
jo
push
fldl
cld
mov
mov
mov
js
or
stos
mov
jae
pop
js
mov
aas
out
pushw
add
xchg
sti
mov
fisubl
int
cmp
xchg
and
std
push
sbb
cmp
or
testl
and
cltd
add
sub
add
repnz
adc
les
pop
adc
mov
out
push
mov
xor
out
push
fmuls
lahf
addr16
cmp
dec
loope
cs
js
push
pop
dec
loope
jle
mov
inc
adc
pop
addr16
add
mov
jne
and
rclb
popa
ret
pushf
iret
cmp
mov
mov
imul
ret
insb
pop
addl
mov
mov
mov
inc
push
mov
ss
xor
dec
xor
adc
mov
ja
mov
mov
movsl
push
mov
mov
out
dec
adc
adc
jge
mov
mov
daa
sub
jle
xchg
das
jne
xchg
das
pop
xor
les
pop
adc
xor
and
jnp
stc
shr
fucom
dec
adc
jp
sub
pushf
jecxz
sahf
ss
lahf
lods
inc
popf
ja
xchg
lret
popa
out
ja
psubb
adc
mov
pop
jno
adc
adc
add
dec
sub
into
fisttpll
popl
jbe
pusha
lret
test
rclb
mov
push
adc
popf
and
sub
stos
ss
mov
cmp
fs
jmp
jno
dec
xchg
repnz
out
inc
dec
idivb
movsb
mov
adc
hlt
stc
movsb
addr16
jns
xchg
lods
stos
mov
ss
xor
call
fwait
pop
dec
mov
or
es
jmp
cli
mov
sub
xchg
jmp
call
aad
cwtl
js
inc
lock
loop
xor
adc
and
pusha
cmpsb
aas
insb
add
add
xor
mov
movsb
pop
add
es
aas
inc
push
sbb
test
push
mov
mov
jnp
push
dec
push
imul
test
movsb
clc
cmpsl
and
mov
outsb
icebp
push
cmp
add
lds
mov
mov
mov
jl
add
lds
icebp
mov
arpl
out
push
shll
cltd
jl
lret
rorb
cltd
sahf
fiadds
dec
jns
insl
stc
loopne
jae
cmp
ja
test
lods
loope
das
mov
imul
pusha
xchg
fs
lcall
ds
lds
pop
jge
jge
je
ljmp
jo
push
mov
into
jne
adc
sub
rclb
add
xor
mov
mov
outsb
push
inc
sub
push
push
frstor
cli
jmp
sbbl
jnp
sbb
mov
daa
cmp
xchg
jo
stos
push
mov
mov
into
xchg
mov
lret
aas
hlt
mov
sbb
scas
pop
push
enter
jae
push
xlat
dec
add
adc
xchg
xchg
dec
aas
sbb
push
mov
aas
sbb
lcall
push
imul
push
inc
mov
pusha
sahf
cs
jp
jp
cs
rcll
rcl
lahf
jp
cmpsb
and
mov
movsl
les
adc
inc
inc
cwtl
mov
inc
out
inc
xor
mov
dec
sub
cmp
ljmp
call
adc
add
mov
push
jnp
jg
imul
add
insl
lods
mov
stos
ljmp
sub
stos
sub
and
bnd
or
cmp
int
int
repz
into
jl
popa
cld
cwtl
jo
nopl
cmp
xchg
xor
sub
mov
fcompl
push
or
fidivrs
mov
movsl
mov
popa
push
popf
ljmp
pusha
xchg
xor
aas
ss
pop
call
sti
mov
setbe
jge
cmpsl
jmp
fs
sbb
outsb
daa
xchg
cmp
nop
ficoms
pop
pop
stos
lcall
adc
or
int
add
bnd
pusha
scas
pushf
cmpsl
adc
xor
cs
mov
jb,pn
insb
pop
push
mov
sbb
and
or
ljmp
jmp
push
add
sub
mov
push
dec
xchg
mov
in
test
jne
xor
lea
repz
out
sub
cmpsb
jecxz
cmc
cmc
cs
mov
scas
int3
pop
pop
andnps
lret
hlt
mov
cmpsb
dec
xchg
cmp
cmc
ljmp
popf
dec
add
das
mov
mov
mov
jno
mov
dec
les
xor
lock
pop
adc
repz
adc
popf
out
rcll
cmpl
cld
lahf
pop
pop
mov
add
mov
leave
shll
outsl
jmp
ror
das
ljmp
lret
in
jg
outsl
jl
inc
mulb
sub
jmp
xchg
outsl
or
mov
pop
sub
push
cwtl
inc
cmp
xor
or
and
mov
xor
or
pop
lret
pop
imul
adc
jge
cwtl
sbb
fiadds
sti
fisubl
inc
movsb
jne
rcr
jge
dec
adc
jns
aas
dec
dec
js
popf
cmp
sub
pop
sub
stos
shll
call
xor
ret
pop
ret
out
daa
jecxz
xlat
mov
add
dec
js
xor
lea
xchg
int3
call
cmp
aad
pop
shrb
lea
push
push
ret
aaa
sbb
inc
cmp
sti
mov
jge
jno
mov
xor
dec
mov
shrb
inc
aas
cmpsb
inc
test
loopne
leave
faddp
mov
lahf
data16
mov
pop
cwtl
and
push
ljmp
jg
or
push
and
das
or
stc
jle
mov
inc
xchg
mov
push
js
jo
mov
adc
sbb
int3
push
loop
push
sub
and
aas
mov
imul
nop
pop
adc
nop/reserved
aaa
sub
das
aad
mov
icebp
mov
in
lds
mov
mov
scas
dec
divb
out
mov
mov
push
adc
inc
popf
arpl
adc
loope
or
push
dec
xchg
cmp
mov
push
mov
lahf
adc
mov
add
jmp
pop
cmpsb
mov
push
mov
cli
aas
jge
fldcw
imul
mov
cltd
lret
inc
mov
add
dec
cmc
mov
xchg
adc
aam
sbb
dec
push
movsl
fidivrs
addl
pop
dec
gs
sub
or
push
mov
sub
add
test
cmpb
mov
sub
xor
cmp
shlb
mov
jmp
dec
pcmpeqw
and
sbb
add
add
jno
test
ss
jae
negl
sbb
xchg
push
lods
sub
rol
fsubl
sub
or
pop
fistl
pushf
inc
leave
mov
or
pop
pop
les
or
adc
repz
test
inc
mov
xchg
lock
sbb
sbb
push
stos
sub
out
shll
inc
push
jae
mov
lret
jno
test
and
pusha
xchg
outsl
mov
mov
ss
out
mov
sarb
ljmp
add
jp
rol
jecxz
lea
sbb
addr16
and
pop
or
int3
cmp
js
jb
mov
jb
inc
mov
push
push
sub
es
mov
sbb
imul
ljmp
jg
add
ds
insb
idivl
mov
xchg
pop
je
divb
loop
or
sarw
scas
in
jno
jne
mov
mov
fucomp
insb
push
sub
inc
push
pop
pop
push
in
stos
notl
out
pushf
iret
push
in
icebp
mov
or
aam
aaa
inc
enter
inc
mov
fs
add
jno
pop
faddl
outsl
pop
and
fwait
ss
pop
sub
xchg
fs
mov
cmp
dec
jmp
aam
jno
ret
in
sahf
ljmp
pushf
or
dec
imul
mov
bound
sahf
sti
pop
xchg
cmp
loope
xchg
adc
push
xor
fistpll
pop
es
std
jp
daa
nop
lahf
jge
cs
sub
jl
lods
dec
stos
mov
hlt
mov
dec
in
addr16
adc
xchg
pop
sub
xor
sub
add
xchg
inc
sbb
stos
and
pop
xchg
cmpsb
jle
mov
scas
loop
in
imul
mov
lea
sti
dec
inc
dec
addl
push
xchg
mov
xor
xchg
push
add
dec
cmpsl
pushf
insl
cmp
aas
or
jno
ret
inc
or
testb
jo
rcrb
lahf
out
clc
arpl
and
flds
mov
xor
xor
incb
mov
cwtl
out
pusha
dec
sbb
cmp
jns
mov
into
mov
lock
pop
test
nop
push
xchg
mov
dec
outsb
mov
fidivrs
mov
ret
xchg
pop
lahf
out
rorb
leave
adc
jle
pusha
aad
xchg
test
xchg
insb
pop
jns
int3
aas
idivl
push
daa
andl
mov
pop
shlb
in
inc
sahf
sub
push
divl
or
jb
mov
mov
mov
cmc
addr16
mov
lahf
pop
xchg
and
mov
aaa
mov
les
stc
popl
adc
sbb
jecxz
rcl
and
ja
jle
inc
mov
scas
push
inc
fcmove
and
or
sbb
outsl
xlat
fucomip
dec
mov
ret
cmp
out
lret
lahf
and
inc
aam
or
sarl
mov
add
or
adc
aad
push
aaa
icebp
xchg
inc
ficomps
dec
or
and
push
xchg
sub
mov
sub
scas
sbb
push
and
mov
add
addl
out
mov
lret
lea
mov
inc
aas
adc
aas
lods
icebp
or
dec
jmp
cwtl
and
arpl
out
stc
loope
jns
jbe
ljmp
cmpsl
lahf
in
scas
xchg
xchg
aas
sarl
or
mov
insb
rorl
in
add
lock
out
dec
mov
mov
mov
imul
pushf
lds
mov
daa
fs
sub
mov
pop
adc
jecxz
push
push
jmp
jle
dec
and
cmc
popa
pushf
mov
cld
cmp
psrld
stos
mov
sbb
and
mov
addl
pop
mov
gs
dec
or
pop
jle
xor
sbb
clc
mov
or
jp
shll
jbe
pusha
add
adc
xchg
dec
ljmp
mov
scas
and
aad
jne
sbb
sahf
cmp
je
cmc
push
xorl
inc
cmpb
xor
in
imul
and
pushf
xchg
and
insl
push
outsb
lds
adc
inc
loop
mov
sbb
or
push
add
xor
dec
fidivs
dec
cld
mov
pusha
cmp
popf
jae
sahf
cld
or
jnp
pushf
or
lock
imul
flds
fwait
or
movsb
ljmp
cltd
sbb
xchg
jl
mov
adc
or
inc
xor
sbb
mov
rcrb
shrb
xor
and
imul
test
repnz
dec
mov
enter
dec
sbb
mov
push
inc
in
daa
or
jmp
outsl
xchg
jl
jbe
dec
sbb
sbb
xchg
imul
or
add
addr16
sub
in
push
in
mov
push
nop
aas
out
lods
push
call
data16
xor
paddusb
pop
in
sar
sarl
mov
push
mov
test
mov
add
rclb
scas
stos
sub
test
cld
dec
lret
sbb
add
pop
pop
adc
dec
mov
loopne
cmpsl
mov
push
cld
sbb
cld
add
movsb
jno
popa
cmp
jo
add
push
mov
sahf
inc
sbb
or
out
in
ret
fstl
jp
ficompl
dec
mov
xchg
pop
ljmp
dec
jb
add
mov
idivl
xchg
xchg
loopne
fcmovb
jl
pop
or
aam
nop
bswap
inc
mov
mov
cmp
jo
pop
testl
sbb
cmp
fnstsw
mov
sub
cmp
fimuls
leave
neg
add
stc
push
fsubrp
and
jg
or
int
pop
mov
add
xchg
fs
inc
inc
push
jge
sahf
push
pusha
rolb
or
imul
xor
rcrl
pusha
test
stos
jmp
xchg
popl
mov
adc
inc
bound
inc
popf
fisttpl
and
xchg
rcll
out
loope
aas
pop
mov
pop
addr16
jge
data16
jp
inc
dec
push
jl
js
mov
or
fldcw
jbe
mov
cli
push
dec
loopne
mov
adc
movsb
inc
daa
mov
rol
mov
cld
in
shr
leave
insb
int
jle
sbb
jno
mov
fs
mov
gs
sbb
ret
cmp
pop
aaa
push
mov
inc
lcall
pushf
fstl
cmp
je
sahf
or
aaa
add
aam
mov
cmp
sbb
jmp
mov
jge
or
jbe
lret
in
xchg
cli
das
in
fs
lea
or
mov
pop
cld
push
test
sub
and
mov
pop
roll
mov
xchg
inc
es
movsb
cmpsl
stc
cmp
mov
sbb
lock
cmp
jl
bound
push
cmp
repnz
insb
mov
and
pop
sbb
out
cmpsl
dec
sub
por
addb
subl
in
push
adc
adc
mov
lcall
sbb
add
enter
xchg
sub
sbb
fstpt
xchg
jle
xor
cli
gs
loop
and
les
repz
leave
out
push
movb
fstps
mov
scas
pop
sub
mov
leave
outsl
pop
inc
adcl
add
inc
fs
shrb
popf
lret
xor
add
push
xor
lcall
jg
faddp
jb
addr16
movsb
data16
loope
sub
and
xor
out
and
jnp
in
xchg
push
aam
xchg
jnp
xor
mov
pop
adc
jg
inc
sub
adcl
push
or
ljmp
std
mov
cmp
xor
mov
insl
test
ss
div
cmpsb
popa
dec
dec
loopne
adc
in
mov
pop
cld
fcmovne
xor
aam
gs
in
adc
lods
sub
test
and
jle
cmp
fucomp
jge
sarb
fisubrs
cmp
adc
rcrl
fisubrs
sti
xchg
pop
hlt
dec
push
mov
scas
mov
cmp
sbb
out
lcall
fstpl
dec
ljmp
sbb
mov
inc
aam
mov
dec
jne
clc
ds
stos
push
sub
xchg
into
test
cwtl
pop
and
mov
cmc
mov
bound
xchg
push
cmpl
inc
cmpsl
in
es
rol
mov
xor
xchg
jmp
jne
in
and
rolb
ja
push
sub
ret
dec
lret
sbb
and
enter
xchg
mov
jbe
cmp
push
push
loop
or
in
adc
leave
fxch
shll
pinsrw
dec
jb
aam
sarb
adc
lds
int
jp
or
or
xor
sub
cmpb
xor
cs
les
adc
sub
je
out
in
dec
inc
test
jp
xchg
insb
mov
push
xchg
mov
xor
cmpl
nop
inc
arpl
push
rorb
push
loop
mov
dec
iret
nop
call
and
cmp
cmp
mov
dec
mov
sbb
cmpsl
mov
ja
mov
pop
imul
mov
jmp
test
hlt
jne
xlat
std
jge
ljmp
sub
aad
das
rcr
ss
jg
push
cmc
push
mov
xor
adc
xchg
pop
xchg
sbb
mov
inc
mov
stc
xlat
das
aam
cmp
push
pop
loopne
sub
in
add
xor
popf
xor
lock
jg
and
or
insl
mov
pop
ucomiss
insb
dec
insb
cld
lahf
aad
push
add
sub
dec
pushf
stos
lcall
jnp
icebp
fstl
xor
test
ret
mov
jno
xor
mov
sbb
cmp
cmp
adc
jl
xchg
mov
xor
mov
mov
lret
xorl
jle
push
aaa
adc
fdivs
push
mov
and
pop
insb
adc
mov
lea
push
mov
daa
cmp
adc
mov
shld
mov
cmp
sarb
lea
pop
inc
add
mov
mov
enter
sub
dec
rcrb
jne
push
push
pop
out
gs
mov
dec
movsb
fmuls
int
mov
and
sub
sbb
mov
sbb
inc
mov
clc
and
mov
cltd
xchg
push
lods
stos
ret
pop
mov
and
jae
add
jb
pop
test
test
inc
ds
or
repnz
out
inc
jl
add
mov
dec
xchg
sub
aaa
mov
dec
out
jmp
adc
mov
or
jno
add
sbb
xchg
jp
cmp
add
push
jl
test
mov
iret
mov
divl
pushf
mov
out
cmp
jg
fs
in
cmp
fs
push
cmpb
sahf
xor
and
or
xor
pop
pop
push
ja
out
dec
mov
mov
roll
lahf
decb
bound
xor
shrb
cmc
ret
mov
push
incl
or
and
inc
push
push
hlt
loop
test
in
das
and
decl
mov
pusha
push
mov
sbb
inc
cli
or
push
gs
xor
sbb
orl
jne
ljmp
jmp
sbb
repz
inc
scas
xchg
jb
aad
jmp
movsl
jecxz
fwait
push
sub
jecxz
adc
sub
mov
dec
push
loop
push
int
popf
in
ljmp
scas
inc
insl
mov
xchg
in
cs
pop
dec
pop
xlat
xor
clc
ljmp
lods
test
xchg
jp
fiadds
nop
gs
repz
inc
mov
out
cmp
leave
mov
leave
pop
loopne
fdivp
mov
je
insl
ret
or
popf
push
dec
lret
mov
cmp
popa
pusha
xor
add
lea
orb
push
fwait
and
fldcw
stos
sub
rcl
test
or
mov
mov
push
push
inc
movzbl
push
fdivs
fbld
fcmovu
lock
and
mov
insb
cmp
push
popa
mov
arpl
insb
repnz
in
outsb
fcmove
fsubrp
scas
sub
cmpsb
loopne
mov
mov
pusha
sub
and
call
scas
xchg
lret
cmp
sbb
bound
dec
jmp
adc
arpl
sub
pop
aam
mov
hlt
fs
addr16
mov
out
mov
dec
mov
inc
loopne
jge
or
mov
cwtl
mov
xor
pop
std
pop
push
cmp
out
call
adc
pop
icebp
loope
add
dec
dec
pusha
arpl
std
enter
pop
filds
ror
mov
xchg
jp
fdivs
push
mov
out
xchg
into
add
sbb
jmp
fs
cmpsl
aaa
jae
les
iret
or
pop
je
jmp
inc
dec
pop
loope
adc
cmc
cmp
sub
mov
mov
movsl
mov
aad
mov
sti
sbb
je
mov
push
or
jle
insl
loop
nop
jle
test
xchg
inc
add
jg
jmp
inc
sub
sbb
mov
aam
add
insb
dec
les
dec
or
xor
in
dec
mov
fcoms
aam
adc
mov
imul
pop
inc
and
or
movsb
lods
mov
push
mov
lret
mov
push
adc
fs
je
xchg
out
call
popl
jne
or
push
cmp
dec
aaa
fsts
inc
addl
pop
mov
sti
pop
rorl
and
mov
adc
mov
into
inc
or
gs
xchg
adc
jb
and
or
scas
xorb
movsl
cmpsb
xlat
mov
lahf
sub
lahf
popa
scas
cwtl
and
in
stc
push
outsb
lret
lods
xchg
pop
xchg
scas
xor
out
xor
scas
push
pop
inc
or
dec
sub
dec
mov
sahf
adc
addr16
dec
stos
in
mov
inc
push
mov
aam
xchg
insb
mov
dec
das
mov
cwtl
sub
clc
inc
fcmovbe
mov
mov
xor
addl
sbb
mov
jp
push
adc
pop
add
in
dec
dec
subl
cmp
gs
lods
mov
jnp
stos
dec
clc
dec
ss
dec
adc
fdivrl
mov
fnstsw
notl
int
dec
sbb
push
or
int3
inc
icebp
xchg
inc
rolb
cmp
push
out
and
mov
test
shll
fsts
outsl
mov
imul
push
call
cmc
dec
and
hlt
xorl
xor
inc
jp
jnp
in
jnp
addr16
das
cmp
or
and
xchg
mov
popa
out
xor
mov
sbb
xor
enter
subl
test
test
ret
ss
adc
mov
test
inc
ret
mov
xchg
inc
idivl
mov
xchg
sub
in
test
pop
xchg
je
sbb
sbb
mov
std
inc
scas
pop
xchg
cmc
das
sbb
xor
imul
dec
jb
ret
ret
orl
stos
inc
adc
nop
jle
sbb
push
outsl
ret
dec
cmp
sub
mov
int
fsub
insl
mov
dec
mov
and
aas
adc
cmp
xor
inc
xorl
inc
jmp
mov
cwtl
push
inc
lea
mov
push
xchg
xchg
sub
inc
loop
xorb
pop
subl
push
push
je
sbb
sarb
inc
scas
mov
and
mov
pop
dec
pushf
xchg
xor
adc
jno
lcall
test
loop
ds
les
dec
and
inc
xor
loopne
out
sub
lahf
xor
loop
imul
cmp
scas
sub
add
xchg
insb
add
fmulp
adc
xor
mov
jbe
pop
sub
mov
dec
lahf
push
pop
mov
add
jmp
push
push
es
sbb
pop
xor
push
aas
cmp
push
scas
out
loope
mov
or
fcoml
and
addr16
ja
and
clc
xor
sbb
jb
jb
xchg
lcall
imul
aas
cmp
lret
es
xor
push
gs
shlb
jge
pop
fcmovb
mov
movsb
push
rclb
and
mov
push
movsl
mov
cli
add
cwtl
adc
sbbb
pushf
cli
pusha
or
cmp
fmuls
lods
into
clc
test
dec
sbb
push
outsb
mov
pinsrw
fisubrl
scas
mov
addr16
xorl
lahf
stos
aad
jnp
std
jo
je
dec
xchg
in
inc
popf
and
xchg
add
insl
fs
sti
pop
push
jns
xor
adc
imul
cmpb
inc
mov
iret
mov
daa
jnp
jl
mov
ds
mov
jbe
stos
mov
mov
mov
push
pop
push
arpl
shrl
cmpsb
fdivrs
dec
push
add
mov
roll
or
divl
cmp
mov
enter
mov
jo
push
shll
stc
test
test
or
int
push
pushf
mov
mov
cltd
aaa
inc
lods
cmp
or
cmc
cmp
cmp
xchg
or
adc
xchg
xchg
test
adc
out
or
les
jo
cmpsl
addr16
push
out
cmp
push
ljmp
xor
xchg
sub
mov
jns
jne
sub
sbb
cmp
shlb
and
cld
mov
ret
xor
out
test
pop
mov
cmp
push
pop
or
test
push
scas
mov
test
out
push
pusha
pop
fwait
add
xchg
out
in
ficompl
or
add
imul
adc
shlb
xorl
sbb
cmp
sbb
dec
sub
fsub
xor
add
leave
insl
cmp
stos
lds
out
jl
dec
push
mov
in
or
movsl
loop
fnsave
dec
dec
pop
leave
push
fdivs
xor
inc
add
push
fsts
cmp
and
jbe
rolb
ss
adc
jl,pt
push
jmp
mov
leave
insl
pop
xchg
iret
testl
cmp
scas
stos
hlt
mov
dec
inc
int
push
push
adc
jo
sbb
add
mov
jl
dec
pop
shl
stc
out
mov
call
cld
fucom
xor
lock
test
cli
dec
and
arpl
or
lret
roll
pop
test
and
and
pop
mov
jg
int3
jb
orb
or
sub
and
mov
adc
enter
push
mov
or
mov
imul
subb
shrb
lcall
call
cmp
fistps
jns
cmp
sub
xor
pushf
into
push
inc
push
insb
xor
xchg
push
jmp
in
fwait
xor
jp
mov
decl
xchg
stos
sbb
pop
add
push
mov
adc
shr
dec
repnz
inc
xchg
lock
std
xlat
ljmp
push
js
xchg
test
pusha
cs
mov
test
icebp
cltd
jge
pop
pop
cltd
jb
mov
lcall
pop
int
test
add
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
lea
jno
ds
inc
xchg
mov
and
adc
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
