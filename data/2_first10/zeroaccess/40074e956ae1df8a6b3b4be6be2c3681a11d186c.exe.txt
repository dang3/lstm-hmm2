push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
mov
in
pop
adc
repz
pop
aam
and
sub
xchg
sbb
mov
mov
inc
push
mulb
xor
sbb
pop
mov
cs
xchg
decb
das
scas
mov
adc
leave
shrb
arpl
mov
pop
ss
cld
rorl
and
sub
jo
imull
clc
inc
sbb
rol
add
in
add
add
fcomip
ds
mov
pusha
ret
mov
lahf
jbe
mov
data16
mov
enter
mov
les
xor
ja
data16
inc
subb
daa
imull
pusha
pop
fistps
and
test
pop
or
or
add
jl
xor
addr16
sub
lock
aas
push
mov
push
xchg
push
cmp
fdiv
mov
inc
subb
lock
xchg
in
in
das
stos
mov
out
sub
cs
je
or
icebp
and
and
sbb
pop
idivb
push
sbb
mov
int3
ficomps
ss
stos
mov
ljmp
pusha
pop
arpl
dec
pop
enter
mov
add
and
inc
fldcw
xor
aaa
roll
pusha
loope
cmp
jecxz
pop
aas
jg
movsl
cmpb
jb
pop
mov
push
dec
inc
xorb
hlt
inc
les
cwtl
pop
and
sahf
or
dec
xor
lds
cmc
sahf
pop
call
jmp
mov
add
dec
xchg
and
cmp
fincstp
mov
movsl
rorl
cmp
call
aam
push
xchg
sub
in
aam
and
les
js
mov
cmc
cli
aaa
popf
mov
cmp
sub
xchg
ss
sbb
lods
push
cmp
jnp
inc
jmp
dec
jne
mov
inc
and
cs
andl
adc
sub
xor
mov
mov
push
loopne
sar
jb
cmp
and
data16
dec
arpl
push
jno
movsb
in
scas
test
bnd
scas
jecxz
pop
push
outsl
das
imul
into
mov
cmp
fsubs
test
jp
lds
shl
mov
mov
pop
inc
xchg
and
xchg
push
cmp
xor
call
shl
pop
bound
and
sub
add
imul
daa
nop
std
add
rcrl
aas
add
outsb
data16
loope
adc
cwtl
bound
ficoml
dec
push
dec
in
mov
pop
aaa
fldenv
rcrb
mov
andb
jb
adc
in
out
dec
pop
mov
pop
mov
dec
popa
dec
rcr
dec
int3
add
sbb
movsl
fucomp
cmpsb
sub
std
lods
xchg
leave
jmp
xorl
pop
dec
adc
lods
jmp
pop
int
pop
sub
xchg
clc
or
shll
aad
std
mov
add
mov
mov
sbb
call
rcl
mov
push
adc
add
test
repnz
stos
cmc
xchg
test
dec
dec
mov
lods
imul
call
das
loope
adc
xor
sbb
popf
jg
jbe
orl
imul
jno
sbb
mov
dec
sub
rolb
sub
inc
dec
inc
push
cli
js
out
loope
icebp
push
mov
jae
pop
outsb
push
rorl
mulb
es
cmpsl
mov
and
imul
lahf
movsb
cmp
inc
push
fistpll
shll
cmp
fs
lcall
cmp
out
shlb
daa
out
in
ds
mov
lahf
int3
stc
mov
std
imul
repz
add
pushf
dec
scas
fstl
pop
stos
repnz
mov
push
inc
ret
les
pusha
pop
outsl
cmpl
notb
ja
fstps
jmp
mov
inc
mov
pop
imul
mov
mov
aad
add
hlt
mov
imul
or
mov
data16
sti
aaa
inc
mov
js
push
xor
cmpsl
or
push
mov
push
mov
adc
in
pop
mov
cmpsb
leave
mov
stos
cmp
dec
mov
pop
cli
cmp
xor
movsl
incl
bound
aad
es
jecxz
stc
or
es
rcrb
pusha
aam
or
out
cli
inc
arpl
add
aam
inc
adc
inc
test
push
push
and
cs
sub
fcmovnbe
jb
mov
push
imul
dec
xchg
push
xchg
icebp
cmp
cs
popa
in
int3
and
dec
sub
in
inc
test
stos
push
mov
orl
cmc
out
fistpl
idivl
jae
cli
sarb
sbb
stc
iret
dec
pop
cmp
clc
sbb
cmc
inc
pop
filds
dec
add
mov
adc
pusha
les
jmp
outsb
aam
add
cmp
stos
dec
sub
jg
add
hlt
dec
dec
pushf
jg
inc
lahf
arpl
fidivrs
pop
adc
jp
in
cmp
stos
fistps
or
add
pop
pop
lret
pop
imul
jb
lock
lea
mov
icebp
mov
push
sub
pop
dec
popa
aas
icebp
inc
loop
das
jl
jns
mov
jp
jb
jo
mov
inc
pop
push
lret
stos
mov
mov
and
push
ret
or
add
pop
int3
dec
mov
mov
or
mov
xchg
sarb
mov
cmpsl
orb
mov
mulb
add
adc
lret
pop
sbb
pop
push
sahf
test
inc
sbb
test
shll
fcompl
lcall
jbe
adc
mov
fadds
cmpl
loop
pop
and
insb
mov
sahf
sub
cmp
enter
dec
adc
subb
add
push
push
inc
test
adc
sub
xchg
cmp
mov
das
and
pop
adc
icebp
repnz
dec
mov
jmp
loopne
jmp
int
popa
xor
and
es
mov
push
mov
daa
pop
push
push
pop
mov
movsb
push
sbb
rorl
hlt
rorl
divb
fcomps
jmp
sbb
inc
cmp
sbb
jo
lea
sbb
xchg
inc
daa
imul
ret
rorl
adc
pop
inc
or
cmp
add
cmc
testb
mov
adc
fsts
mov
insl
aam
je
inc
lret
inc
jmp
cli
flds
mov
dec
std
mov
in
jg
or
out
into
das
popf
sbb
stos
aas
out
cmpsl
dec
push
test
out
push
cmc
cmp
addb
test
and
xor
and
ficoml
pop
aaa
push
imul
dec
mov
or
adc
ss
sub
les
imul
ret
add
fidivrs
rcrl
shrl
xchg
mov
mov
mov
aam
aaa
loop
mov
popf
rcrb
lret
mov
insb
fmull
add
lcall
cs
push
mov
jo
nop
sub
mov
arpl
fidivs
cmovne
jbe
add
or
mov
inc
mov
xor
rol
adc
adc
stc
cld
mov
faddl
mov
into
jbe
pop
push
pop
sub
sbb
xchg
testb
cmp
push
mov
int
jns
jns
repnz
addr16
movsl
cli
xor
cmp
aad
cwtl
lcall
mov
loopne
pop
fists
std
push
mov
mov
mov
int
xor
decl
pop
rcrl
pushf
shll
loop
xchg
cmp
into
jmp
mov
jl
mov
jbe
mov
data16
add
or
xlat
repz
out
es
sahf
hlt
mov
scas
add
mov
inc
xchg
push
fcomps
test
or
ljmp
in
lock
adc
push
pop
std
in
xchg
add
ja
mov
fldl
sub
xchg
push
mov
sub
leave
loope
and
jp
aam
mov
inc
mov
mov
sbb
cmpsb
or
or
jnp
mov
or
fstps
xchg
scas
dec
aaa
stos
filds
add
adc
and
mov
shrl
cmp
jg
sbb
ret
add
sbb
cmp
mov
xor
out
and
and
aad
out
sti
adc
lods
testl
int
dec
lcall
pop
pop
std
xchg
push
pop
and
leave
ss
aas
arpl
aad
jnp
mov
xor
mov
mov
in
pusha
xchg
mov
push
xchg
fists
xchg
mov
dec
addl
push
imul
insb
bound
stos
sarl
loope
sbb
sbb
ret
mov
dec
push
pop
roll
dec
std
xlat
lret
adc
aam
movsl
mov
fwait
in
std
mov
mov
mov
imul
cmp
xor
popf
dec
aad
fistpl
mov
jl
push
imul
jp
jb
mov
sub
mov
adc
lahf
mov
cs
jbe
inc
xchg
jbe
sbb
jmp
in
add
xchg
shl
insb
dec
cltd
out
xor
lods
enter
movsl
fdivr
cmpsl
fsubl
cli
jmp
and
push
in
push
hlt
sbb
dec
xor
arpl
fistps
mov
out
repnz
daa
inc
pop
jmp
mov
push
dec
cmpsl
jle
in
ljmp
sar
jnp
adc
loopne
ss
add
jecxz
pop
enter
mov
sub
mov
xor
push
or
fidivrs
cmp
pop
arpl
inc
shll
pop
outsb
movsb
movsl
enter
cwtl
cmp
jge
adc
scas
cld
sub
and
or
lret
push
jno
leave
cli
mov
push
push
mov
mov
push
pop
jns
gs
adc
cltd
lock
push
test
pop
jno
mov
inc
ss
mov
and
fwait
addr16
sub
push
pop
xchg
clc
clc
xchg
stos
in
and
daa
sbb
ret
sbb
lds
mov
into
xchg
fwait
xchg
daa
in
enter
cmp
shll
iret
jnp
js
aam
mov
rol
in
xchg
fimuls
sbb
adc
jmp
pop
aad
pop
xchg
rorb
xor
fidivs
sar
loopne
repz
xchg
sti
pop
xor
xlat
xor
dec
insl
add
mov
cmp
in
xchg
in
fistl
lahf
jnp
cmp
cmp
cmp
call
pop
mov
sub
mov
test
ds
adc
and
jns
jae
ljmp
mov
inc
dec
dec
inc
popf
leave
cltd
je
push
adc
dec
dec
into
scas
mov
jo
xchg
pop
mov
stc
push
jae
and
pop
ja
repnz
into
sbb
push
push
sahf
ss
imul
scas
rcr
cmp
leave
cmp
insb
jne
int3
test
xchg
push
mov
lods
dec
xchg
add
out
scas
mov
mov
test
pop
popa
outsl
dec
ja
daa
sub
cmc
insl
sbb
lods
cmpsb
fistl
daa
addr16
dec
jns
aas
lahf
clc
adc
cmp
es
cmp
push
out
xor
pop
and
andl
add
imul
lret
push
pop
in
cmp
adc
jb
push
mov
into
test
dec
movsl
dec
test
in
ds
shll
xor
bound
pop
sbb
test
add
adc
or
mov
push
nop
mov
addr16
xor
inc
xor
xlat
push
mov
pop
jae
inc
push
testb
pop
test
sbb
inc
adc
inc
aaa
sbb
xorb
jnp
mov
fisubl
lods
sbb
cmp
mov
dec
imul
cmp
push
xor
xlat
pop
shll
orl
sub
or
jmp
cld
pop
loop
dec
mov
push
push
mov
ficomps
xchg
lds
xchg
pop
mov
rep
xchg
xchg
loop
fcmovbe
dec
sahf
xchg
xor
dec
clc
dec
pop
fadd
das
outsb
pushl
cmpsl
ljmp
mov
test
jmp
jl
das
adc
xor
ds
fistpl
mov
enter
jb
xor
mov
cmpsb
mov
popa
iret
out
in
or
sbb
jns
push
xlat
jl
pop
push
rol
pop
mov
rolb
js
pushf
addr16
sbb
adc
repnz
js
xchg
mov
xor
mov
and
cmp
push
enter
xor
popf
mov
mov
lock
fbstp
rcrl
pop
adc
xchg
xor
test
adc
adc
push
cmp
jne
push
push
lret
into
dec
add
inc
xor
dec
pop
hlt
lahf
mov
jne
outsb
or
add
cmpsb
and
icebp
mov
sub
pop
jbe
jo
mov
or
fcomps
lret
popa
shrl
fisttpl
push
pop
pop
dec
fbstp
cmc
jmp
dec
push
push
inc
sub
aas
dec
dec
stos
xchg
movsb
pop
jg
jg
movsb
inc
push
fistl
in
jns
jecxz
dec
and
add
cli
pusha
addr16
je
jecxz
es
ret
and
arpl
inc
pop
mov
imul
sbb
cmp
jne
sub
fwait
push
lea
lahf
test
push
and
mov
mov
jmp
test
cmp
cmp
push
iret
inc
out
loope
xor
jb
lret
and
in
rorl
sahf
aaa
insb
jmp
loope
jp
in
jle
push
test
sub
test
and
inc
add
and
lret
pop
and
mov
test
mov
xchg
hlt
jno
mov
or
shlb
inc
loop
xor
imul
cmpsb
mov
faddl
add
mov
or
lcall
pop
cmp
push
nop
cmpsl
sbb
adcb
inc
repnz
cld
sub
cmovns
std
dec
mov
es
stos
xor
dec
mov
or
out
das
jp
ja
or
decl
test
xchg
push
jbe
ds
sbb
or
dec
mov
std
lock
cltd
in
pop
lret
push
cmp
push
in
fisubrs
cmp
pop
and
jle
hlt
adc
aam
dec
mov
stc
stos
and
in
out
lcall
mov
in
xor
xor
pop
xchg
in
sbbl
inc
loope
cmpsb
sbb
and
in
cmpb
dec
cltd
inc
pop
out
fxch
mov
test
lea
mov
leave
movsb
pop
into
jle
sti
lcall
push
jge
mov
aam
les
add
lret
mov
lods
mov
xor
mov
adc
enter
data16
adc
push
adc
or
xlat
sbb
lahf
movsb
popa
or
in
cld
add
push
xchg
pop
cmpl
les
inc
dec
loope
std
fcmovu
jg
mov
les
fcomi
enter
scas
ja
cmp
lret
xchg
xchg
stc
in
or
inc
inc
pminub
xor
xchg
out
shlb
lahf
fcoms
ja
adc
lret
clc
ret
mov
mov
loope
mov
xorl
lret
xchg
push
loop
in
daa
push
cmp
test
popf
aas
movsb
push
mov
mov
push
clc
and
cltd
jle
cmp
sbb
in
mov
fcoml
mov
int3
jb
or
test
cmpsl
push
dec
lods
push
imul
bound
mov
xor
outsl
enter
inc
repz
out
fwait
mov
lret
int
sub
lahf
inc
xchg
mov
push
scas
xor
dec
into
js
and
pushf
push
fs
lock
or
ljmp
xchg
outsb
xchg
ljmp
and
or
or
cmpsl
mov
scas
adc
bound
inc
sbb
ljmp
mov
aad
notb
dec
xorl
ja
jbe
push
push
mov
and
push
pop
jb
adc
lods
call
dec
cmpb
insb
pop
xchg
cwtl
xchg
mov
hlt
mov
inc
imul
xchg
adc
in
or
aaa
mov
or
sbb
xor
int3
loope
pop
shll
leave
xor
fimuls
inc
lcall
mov
scas
inc
inc
xor
pushf
dec
mov
shlb
or
les
xchg
pop
rcrb
aad
test
cmc
je
sub
jb
mov
lcall
lret
fldl
mov
das
pop
out
cmp
fs
fiadds
lds
sahf
mov
pop
sub
dec
bound
push
jns
call
lods
inc
xchg
fdivrs
push
cwtl
mov
insl
add
outsb
lods
and
or
icebp
sti
fs
sub
xchg
add
pop
jge
sub
fildll
cmp
or
js
pop
aas
cmpsl
inc
movsl
cmp
or
inc
xchg
cmp
sti
xor
jp
add
dec
mov
cmp
jl
sub
mov
adc
xchg
mov
das
aad
les
mov
adc
lods
daa
in
sub
jecxz
push
adc
stos
daa
stc
jmp
push
inc
pop
cmp
or
jns
pop
mov
mov
mov
insb
lcall
fucom
cmp
push
pop
ret
imul
pop
lods
pop
orb
enter
xchg
push
mov
pop
pop
out
or
lds
mov
pusha
inc
inc
fmul
ds
cmpsb
outsl
scas
and
shl
xchg
ljmp
shll
js
cmpsl
negl
in
cmp
andl
add
xor
out
cs
inc
lods
xchg
inc
cld
adc
shl
sub
pop
in
jp
outsb
daa
or
jb
imul
fisttpll
mov
mov
inc
nop
mov
rcl
xchg
aas
add
push
jbe
pop
xchg
cmpsb
sub
lds
mov
mov
nop
nop
xor
adc
lcall
dec
fwait
pop
inc
lds
dec
lcall
cmp
mov
mov
inc
adc
and
out
gs
jl
fimuls
lods
ja
movsl
sbb
push
push
pushf
or
mov
rol
sub
mov
repnz
dec
and
or
inc
and
repnz
pop
sahf
imul
into
stc
lds
mov
push
sti
xor
mov
out
sti
ss
push
cmpsb
push
mov
enter
add
fld
or
cmp
aam
fwait
aad
mov
repnz
push
cltd
aas
in
shll
imul
neg
arpl
dec
xchg
cs
stos
mov
sbb
xchg
flds
test
es
mov
sub
pop
fmull
push
lahf
inc
inc
lcall
fstps
pop
fsubrl
cmc
inc
mov
addr16
lods
dec
jmp
ds
cli
sub
mov
subb
mov
jle
or
lret
scas
mov
and
into
add
adc
adc
fs
outsb
out
mov
cmp
dec
dec
inc
bound
movsb
xchg
insb
sub
push
rclb
in
test
stos
push
test
js
lret
inc
dec
dec
sbb
loope
sbb
int3
in
xor
outsl
inc
jmp
es
push
mov
inc
xor
dec
repnz
das
jnp
mov
inc
dec
insl
outsl
jno
aas
mull
loopne
add
call
fwait
mov
jns
jecxz
addr16
mov
cmp
inc
xor
sti
sub
fistps
js
aad
cmpsl
sar
adc
test
imul
add
ljmp
xor
xor
mov
jne
iret
mov
fcoml
fs
sbb
jmp
mov
scas
add
and
mull
int
imul
test
sahf
jo,pt
inc
arpl
aaa
cmp
arpl
xchg
lret
fs
shlb
movsl
in
test
jno
or
shrb
adc
xchg
stos
sbb
stc
inc
push
in
in
int3
cmpsl
cs
aaa
ss
jg
loope
pop
addr16
xchg
nop
push
push
movb
push
inc
mov
fists
iret
pop
lods
imul
xchg
xchg
sub
jae
sbb
push
adc
cs
repz
xorl
loop
sbb
sbb
xorl
in
loop
inc
mov
xchg
aas
push
sbb
push
stc
popa
fdivs
add
stos
leave
movsl
sbb
lahf
xor
shll
or
mov
jo
mov
outsl
dec
mov
imul
rorb
icebp
mov
cmp
mov
add
mov
out
out
notb
jp
iret
enter
xor
lret
inc
mov
dec
or
addr16
push
sub
mov
or
pop
mov
pop
mov
inc
push
cmp
mov
inc
jb
das
fcmove
aad
lds
lods
enter
push
mov
push
mov
in
pop
add
lods
xchg
jae
fistps
xchg
mov
insb
outsl
mov
and
mov
test
dec
pop
cmp
test
jnp
test
push
sub
mov
aaa
xorb
rclb
push
sbb
mov
cmp
xchg
adc
push
adc
pop
or
pop
sub
ja
push
popa
dec
mov
and
shll
inc
imul
mov
hlt
out
iret
icebp
inc
fisubrs
in
icebp
xchg
shlb
xchg
lea
and
lods
fcom
and
cltd
sbb
inc
lcall
outsl
mov
loopne
push
or
test
push
dec
inc
and
lods
mov
cmc
ret
shll
test
add
popa
xor
movsb
movsl
sti
lds
popa
dec
xor
imul
xchg
jmp
pop
and
jno
jno
push
sub
xor
mov
and
ret
popf
icebp
push
mov
out
in
stos
ret
lods
sbb
dec
rclb
aad
fcmovbe
lea
mov
push
popa
jae
fisubrs
neg
pop
shl
push
xor
dec
aad
pop
or
jle
icebp
or
jg
dec
lods
mov
mov
pusha
inc
jl
insl
dec
xchg
ja
mov
pop
movsb
lods
mov
add
into
les
popa
inc
push
out
inc
mov
inc
mov
in
ret
mov
iret
incl
push
cmpsb
mov
in
pop
mov
mov
adc
sub
insb
add
jae
cmc
bound
lods
mov
ficomps
pop
stc
adc
push
and
daa
fldenv
les
cs
insb
into
stc
adc
sbb
popf
xlat
adc
lds
out
or
cmp
popf
or
cmpsl
stc
jmp
lret
data16
inc
cmpsl
arpl
push
addr16
test
sarl
ljmp
into
fxch
mov
mov
mov
or
mov
rorb
pop
xor
adc
cwtl
xchg
dec
arpl
test
inc
loopne
dec
push
mov
jnp
int3
iret
cld
popf
mov
aam
mov
xlat
out
mov
test
leave
jge
scas
push
rcrb
divl
incb
push
rcl
mov
es
insl
shlb
mov
imul
js
add
adcb
std
push
inc
hlt
jno
js
cld
je
popf
xchg
mov
xlat
call
push
es
xchg
add
inc
pop
jecxz
xor
mov
add
pusha
pop
pop
addr16
push
insb
lahf
xchg
out
fsts
test
jge
sbb
or
pop
sbb
jbe
dec
cmp
fdivrl
cmp
pop
dec
rcrl
jne
mul
xlat
inc
or
insb
fisubrl
push
push
mov
leave
xor
dec
pushf
mov
dec
js
or
jp
pusha
mov
adc
xchg
xchg
enter
xor
shrb
mov
outsl
cmpsb
jnp
cltd
lods
inc
cmpsl
stos
cli
stos
adc
or
jge
in
cmpsb
negl
xchg
and
in
test
call
jno
scas
fidivl
xchg
lret
outsb
mov
fs
int
push
jg
or
and
mov
testb
pop
ja
xor
pop
gs
dec
mov
lret
mov
std
punpckhwd
rcrl
jae
fidivs
into
sub
push
xor
test
and
xor
mov
push
loope
or
sbb
cmp
imul
pop
rdtsc
sarb
push
mov
mov
jmp
fldenv
and
mov
sub
xchg
movl
adc
jmp
cli
fistl
jne
ds
in
int
cmp
or
fcmove
in
cmp
fmuls
jge
pop
jo
ds
icebp
push
jnp
mov
sub
dec
movsb
mov
jge
dec
and
ja
test
mov
movsl
je
add
subb
repz
mov
pop
sub
adc
fdivrs
pushf
xlat
push
cmp
jg
aad
or
or
cltd
push
daa
in
setbe
push
adc
mov
push
mov
ja
lods
movsb
loopnew
mov
mov
arpl
sub
and
mov
sub
add
add
push
shll
push
insb
call
cmp
repnz
add
pop
movsb
imul
roll
mov
cli
lods
add
mov
mov
fisubrl
inc
cmpsb
cmp
lods
mov
fwait
in
xchg
adc
xchg
xor
dec
xchg
jae
insl
movsl
lods
sbb
pop
push
out
inc
jmp
xchg
dec
add
sbb
out
jnp
shrb
jo
add
fcomi
push
jl
jb
packsswb
in
xor
adc
leave
xor
push
stos
or
inc
icebp
push
bound
cld
mov
shr
iret
pusha
incl
mov
push
rolb
stos
mov
xor
pop
push
jb
ret
xor
sahf
sti
ss
mov
adc
icebp
je
sub
std
mov
cld
stos
mov
aad
call
sti
cmpsb
push
inc
and
sbb
into
pop
pop
mul
mov
stos
mov
sbb
icebp
jb
ror
ss
repz
mov
xor
jae
dec
mov
sete
ret
scas
fildll
sbb
push
aad
cwtl
aad
xlat
jl
cltd
aam
cmp
aam
es
pop
jns
aam
jle
dec
loope
add
xor
lcall
fsubl
pop
push
iret
sub
mov
loopne
xchg
jbe
mov
sbb
out
xchg
cmpsl
push
and
testb
mov
fwait
adc
insl
xchg
mov
decl
xchg
aad
aas
and
push
adc
fstpl
pop
icebp
add
in
in
mov
out
fld1
les
sbb
sahf
jl
imul
jbe
fs
pusha
inc
push
xlat
push
inc
adc
outsb
dec
dec
in
mov
xchg
inc
out
and
mov
mov
es
fidivl
and
pop
or
pop
pop
adc
das
iret
lcall
xchg
or
lret
in
add
xor
mov
inc
jns
repnz
lret
cmpb
in
add
cltd
stos
sbbb
aad
cmp
xchg
ljmp
xlat
call
sahf
dec
loope
scas
adc
sti
aas
out
jp
cmp
pop
push
mov
gs
mov
lahf
cli
sbb
sbb
jmp
adc
leave
jge
mov
push
or
lahf
add
cmovb
push
out
xchg
push
outsb
pop
jmp
scas
rcl
ds
dec
aaa
test
xor
ror
scas
cmp
mov
sbb
aam
aad
push
push
add
popf
cwtl
xor
std
mov
popa
or
das
and
jp
add
lds
iret
push
inc
lret
and
push
push
fcmovne
scas
push
inc
adcl
jmp
rorl
aaa
outsl
dec
lret
push
js
leave
nop
fidivs
inc
ret
dec
mov
mov
cmpsb
inc
mov
xchg
xchg
mov
mov
mov
xor
push
outsl
mov
loopne
cmp
mov
xor
add
adc
scas
adc
in
lods
mov
push
aam
divb
or
enter
lret
dec
dec
lods
pop
nop
hlt
inc
dec
ljmp
add
dec
inc
push
inc
in
and
sti
fimull
add
adc
mov
out
out
add
mov
lock
mov
jo
fst
out
sahf
lods
scas
out
or
cmpsl
ds
push
shlb
out
aad
dec
xor
mov
test
cmp
push
adc
out
sbb
imul
jle
sub
and
leave
push
sub
adc
scas
mov
call
fwait
lods
pushf
test
jb
aam
daa
and
es
lods
mov
add
dec
inc
dec
add
cmp
jge
inc
xchg
and
xchg
dec
dec
jbe
mov
stos
je
aas
xor
scas
ja
add
fidivl
enter
and
loope
sub
mov
mov
rcrl
sti
repz
push
fucom
mov
mov
stc
nop
insb
jnp
xchg
shrb
add
or
or
pop
sub
cmp
add
pop
outsl
cld
test
sbb
fsts
je
nop
stc
rcl
dec
jge
ror
shlb
out
xchg
pop
jge
imul
leave
inc
inc
mov
or
cltd
popaw
sbb
cmp
mov
jbe
adc
in
jp
repz
test
sub
xchg
sub
or
mov
subl
aad
sub
test
fidivl
test
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
dec
popf
loopne
jl
dec
pop
jl
sti
pushf
fs
pop
pusha
out
les
or
xor
mov
repz
sub
lret
and
idivb
subl
ds
dec
sbb
movsb
rol
pop
mov
js
jnp
add
lods
xlat
mov
push
mov
inc
jno
mov
mov
inc
outsl
aas
mov
out
clc
sti
adc
ret
sub
aam
mov
and
pusha
mov
popa
mov
jae
sahf
test
je
fmuls
jno
push
mov
and
int3
cwtl
lcall
movl
mov
jb
mov
scas
cwtl
jmp
imul
sti
sbb
jl
mov
jnp
test
mov
mov
pop
jns
or
dec
pop
mov
test
mov
xor
shlb
iret
mov
mov
pop
inc
mov
dec
adc
mov
xor
cwtl
push
push
jmp
fldcw
xor
inc
mov
mov
xor
and
mov
adc
mov
stc
repnz
leave
jo
mov
test
roll
pusha
pusha
popa
add
push
xor
cltd
xchg
pop
iret
cmc
jb
mov
dec
cli
cmp
stos
push
mov
pop
fs
mov
popf
int
popa
or
push
popa
lds
movsl
in
addl
imul
xor
xchg
movsl
outsl
xchg
pop
out
xor
loope
ss
in
imul
cmp
cs
push
movsb
lret
bound
xchg
outsl
xor
scas
les
sub
xor
mov
cmp
lods
fs
add
sbb
inc
mov
lahf
shll
jmp
outsb
dec
aaa
aaa
sub
xor
fistpl
cmp
call
mov
lahf
push
jp
ds
xchg
cmp
jbe
and
inc
sbb
cmp
dec
push
jns
test
int
sbb
in
mov
or
mov
pop
jbe
xchg
out
jg
imul
stc
je
arpl
scas
dec
xchg
xchg
jbe
imul
mov
fwait
xor
int
repz
hlt
out
scas
aad
icebp
popa
add
pop
and
jmp
pop
repz
into
out
jmp
int3
fidivl
rcl
sbb
or
pop
stos
mov
scas
sub
lea
das
xchg
inc
outsb
out
mov
push
scas
in
add
insl
jmp
cmc
xchg
xchg
pop
mov
in
aam
outsb
mov
inc
or
cmc
mov
ret
ds
mov
in
pop
nop
push
mov
mov
movsb
cmp
fmull
jbe
xor
je
jns
cmp
ss
push
fs
fwait
adc
cld
inc
fwait
jne
pop
jae
aad
out
mov
lret
jae
pop
jg
mov
cmp
sub
ds
inc
mov
ja
push
jb
sub
push
dec
je
in
inc
or
ja
pop
jae
mov
jecxz
sahf
cmc
and
and
aam
cmp
mov
mov
add
orl
lods
add
ret
es
xorb
clc
repz
mov
sub
jecxz
int3
js
jbe
cmp
fdivrp
or
mov
xchg
loopne
out
scas
pop
lea
push
pop
fsin
imul
mov
sti
in
pop
xchg
dec
mov
cmpsl
sub
mov
and
push
mov
call
dec
pop
mov
xchg
aad
out
mov
sahf
inc
hlt
adc
stc
adc
pusha
fistpll
cwtl
cmp
dec
push
pop
sbb
mov
sbbl
mov
mov
mov
clc
hlt
mov
ljmp
insl
sub
clc
sbb
pop
aaa
mov
cwtl
fsubr
pop
popf
test
insb
push
jg
fwait
add
or
daa
insl
test
sbb
jae
sbb
sbb
inc
mov
mov
loopne
hlt
into
lods
cmpsl
jae
xchg
pop
and
pop
aam
scas
push
mov
loopne
jp
pop
inc
cmp
dec
faddl
bound
hlt
cmpl
inc
sub
jge
mov
mov
add
add
int
jge
sub
pop
jae
xchg
xchg
inc
arpl
iret
ja
cs
mov
or
lahf
jo
and
addr16
lods
xchg
lahf
cltd
adc
push
mov
pop
dec
adc
pop
movsb
and
filds
and
adcb
ja
std
xchg
pop
ret
ret
int3
lcall
xlat
adc
lea
add
jl
and
mov
add
push
cmp
mov
fdivrs
mov
pop
insb
in
dec
mov
out
xchg
cmp
xor
push
jmp
sti
mov
lds
cmp
or
inc
inc
sub
push
jbe
push
cs
int3
test
adc
mov
fmuls
jge
push
pop
pop
and
push
insb
sarl
push
mov
daa
push
add
out
mov
jne
lea
inc
xorl
sbb
jb
leave
movb
loopne
sahf
inc
dec
repz
stos
shlb
ds
clc
in
cs
test
fs
jl
jnp
sub
subl
int
or
lret
hlt
rcrl
std
xor
out
int3
mov
je
cmp
dec
sti
lods
ret
sub
sahf
ljmp
sbb
xlat
arpl
mov
mov
add
sti
add
mov
ret
pop
push
stos
daa
lahf
mov
cwtl
mov
lds
movsb
xor
xchg
cmovp
fadds
fdivrl
fdivr
jns
and
and
aaa
shrl
shrb
sbb
inc
mov
mov
out
ss
test
mov
loope
cmp
mov
out
lcall
lods
fmuls
adc
or
push
repz
insb
xorb
cmpb
mov
repnz
and
insb
jge
dec
jnp
repnz
mov
aad
fsubrl
bound
jge
mov
sbb
push
sbb
test
jb
mov
xchg
pop
shll
dec
adc
or
sub
movsb
mov
mov
out
shll
sbb
mov
mov
shrb
jp
inc
sub
push
hlt
dec
cmc
adc
push
jecxz
movsl
sbb
dec
and
pop
lds
jge
aad
fnstenv
mov
clc
mov
cmp
cmp
sub
jmp
ds
popa
dec
jns
push
and
fcmovnu
jp
lcall
adc
jl
imul
xchg
add
cmp
dec
sub
aam
xchg
adc
jge
insb
and
rclb
and
mov
jne
das
xor
nop
ret
lcall
xchg
sbb
sbbb
mov
inc
sub
lea
dec
popf
fwait
dec
push
push
out
js
out
jle
inc
js
rcr
push
les
push
es
push
mov
jne
cwtl
and
fldcw
pop
push
in
and
pop
lock
push
repnz
push
scas
inc
out
sbb
jp
jo
push
arpl
dec
aam
push
dec
les
mov
xchg
test
lret
pop
int3
dec
jp
mov
sahf
icebp
lods
push
je
rcl
cmp
mov
outsl
test
or
scas
testl
into
popf
shlb
iret
test
lcall
test
cmpsb
cmp
scas
xor
sbb
pop
es
or
cmp
std
aaa
jle
sbb
xor
outsl
push
jle
sbb
rcrb
mov
cltd
pusha
push
and
jmp
jne
sbb
cmp
add
out
dec
xchg
fucom
mov
fisubrs
sbb
sbb
push
and
dec
mov
jp
lret
aam
push
xor
or
or
test
ret
dec
mov
addr16
mov
jp
cs
jg
sub
movsb
fnstsw
shll
orb
jecxz
push
xorl
fimuls
pop
and
movl
add
or
mov
xorl
ja
mov
test
sub
pop
adc
fidivrs
addr16
loop
pop
dec
add
mov
and
sbb
mov
emms
jb
adc
and
jle
popf
mov
int3
and
stos
mov
es
stc
sub
jp
xor
add
cmc
and
fidivrl
sub
xchg
jne
out
cmp
mov
clc
mov
lods
xchg
mov
cmpsl
jl
cmpsl
xchg
lret
insb
sbb
test
in
add
mov
xchg
aam
cmp
push
int3
dec
sub
jmp
xchg
nop
cmp
pop
and
cmp
stos
or
lea
dec
cli
movsl
push
push
pop
pop
xchg
arpl
xor
test
add
out
mov
mov
xor
fmull
dec
cwtl
fwait
mov
js
ja
xchg
add
mov
xchg
roll
xchg
mov
push
xchg
fcomps
loopne
gs
outsl
xchg
icebp
lret
jge
xlat
sub
pop
xchg
or
mov
popa
pushf
jmp
sub
and
inc
adcl
sbb
testl
jl
adc
fwait
cld
sarl
cwtl
mov
xchg
mov
cmp
xchg
adc
inc
movsb
js
rcr
inc
jl
and
push
mov
out
hlt
lds
popa
je
push
push
mov
adc
cmp
gs
sahf
fisubl
jg
cmc
out
test
adc
xor
and
outsl
loopne
jnp
popf
je
xchg
movsl
pop
jns
xchg
or
xlat
sarl
int
rcrl
mov
popf
ret
les
in
pop
adc
jo
dec
mov
repz
pusha
je,pt
and
dec
hlt
arpl
add
dec
pop
mov
inc
test
xor
pop
popl
iret
std
push
sbb
and
add
mov
insb
mov
dec
stc
sbb
cmp
xlat
lods
jo
dec
mov
lahf
insl
lcall
xchg
dec
xchg
xorl
mov
lds
jne
int
sahf
mov
adc
pop
jg
shll
andl
jl
adc
ds
outsl
push
cmp
decl
inc
add
mov
and
gs
push
ret
jnp
adc
mov
outsl
repz
cmp
dec
inc
sti
cmp
dec
fsubrs
lahf
jno
in
mov
mov
test
dec
cmp
imul
sub
cmp
movsb
in
dec
scas
pop
shrd
aam
nop
out
scas
ret
jns
in
jno
cltd
arpl
mov
aaa
push
adcb
push
mov
jmp
pusha
mov
and
xchg
int3
or
imul
mov
aas
cmpsl
hlt
jmp
in
insb
push
mov
push
inc
and
xor
rolb
jmp
dec
jne
mov
mov
cmp
int3
ss
xchg
test
jp
and
call
dec
or
pop
cmpsl
sub
push
mov
or
je
ss
and
mov
ret
mov
mov
mov
xor
push
pop
addps
imul
jne
call
xchg
jbe
push
jno
or
std
sahf
cmpsb
xor
pop
inc
aam
aas
popf
push
rorl
mov
fistl
lock
scas
std
mov
stos
jns
sbb
out
pop
xor
mov
int
push
out
andl
xlat
cld
daa
add
inc
sub
popa
jno
dec
lock
cs
ja
add
repnz
inc
sub
mov
hlt
daa
loop
sahf
nop
or
shll
cmpsl
adc
and
frstor
imul
test
hlt
aas
and
and
clc
jbe
cmp
data16
enter
jmp
ret
in
adc
subl
jb
mov
jbe
arpl
sub
jmp
jns
xor
mov
jns
xchg
enter
adc
arpl
in
ja
cltd
dec
xor
bound
loope
hlt
push
es
imul
scas
sbb
ret
pop
loopne
sub
jmp
pop
loope
fs
xchg
sbb
adc
inc
or
jnp
aas
xchg
int3
or
xchg
outsl
icebp
stc
adc
call
fdivrl
mov
shrb
loope
inc
pop
xchg
sub
push
leave
adcb
jg
xor
popa
lods
push
dec
call
and
fcoms
in
mov
cmp
lcall
int3
out
or
scas
dec
lods
cmp
adc
fcmovb
lea
and
lret
and
fsubs
outsb
hlt
test
sub
int
adc
pop
lcall
cmp
clc
mov
adc
mov
xlat
iret
mov
or
or
pcmpgtw
xchg
or
jle
orb
ret
test
push
push
mov
inc
and
mov
add
test
daa
movsb
cld
mov
mov
mull
mov
imul
das
xchg
dec
subb
fchs
add
cmpl
cwtl
aas
and
loope
mov
fimuls
aas
jecxz
test
mov
mov
maskmovq
sub
ljmp
or
sti
outsl
imul
or
test
addr16
in
cmp
addl
lds
dec
das
xchg
cli
add
sbb
test
out
jp
repz
xchg
mov
jl
dec
dec
shl
stos
fldl
scas
out
jno
dec
inc
leave
loop
addb
mov
std
or
xor
das
or
or
das
and
rcrb
shl
adc
push
dec
andl
xor
lds
mov
jns
stc
push
cwtl
insl
cmpsl
xchg
fisubrs
pusha
cmc
jo
jns
loopne
sub
add
icebp
mov
les
out
adc
xchg
fcoms
std
inc
js
sbb
loop
lods
or
adc
mov
dec
lahf
jno
sbb
xchg
fldt
lcall
inc
dec
mov
popa
test
rcr
scas
ja
pusha
rorb
out
pop
lods
fsts
sbb
adcb
cmpsl
movsb
add
lret
cs
insb
jg
roll
jge
imul
lods
fsubp
popf
push
pop
cmp
and
sbb
mov
add
mov
stos
dec
aaa
std
lock
push
repz
mov
int
insb
mov
add
inc
inc
popf
movsl
movsl
icebp
loope
jmp
aaa
dec
test
jecxz
pusha
xchg
je
out
insb
fdivrl
mov
add
and
pushl
xor
repz
popf
repnz
outsl
scas
ret
adc
jb
add
enter
js
sbb
inc
xor
data16
mov
in
pop
jmp
in
pushf
leave
ret
push
das
dec
adc
cld
xchg
xlat
or
push
adc
mov
out
idivb
rcr
and
mov
leave
mov
sub
movsb
addr16
jno
iret
mov
mov
mov
xchg
and
mov
xchg
stc
inc
js
mov
rcll
test
xor
aam
mov
dec
inc
out
fmuls
in
inc
fnstcw
insb
cmp
dec
pusha
mov
iret
jns
jge
sub
and
call
std
jae
push
inc
out
and
test
gs
adc
pushf
add
mov
outsl
xchg
inc
mov
inc
adc
das
inc
lods
pop
fdivl
pop
mov
mov
loopne
ret
jmp
jg
sub
jl
cmpsl
cmp
loope
adc
stos
ljmp
daa
inc
lea
enter
cld
pushf
add
xchg
inc
std
cmc
mov
mov
mov
test
ficoms
popf
loope
jge
mov
push
divb
add
add
sti
notb
sbb
in
inc
xchg
cmp
fsubrs
cwtl
xchg
rorl
lcall
mov
hlt
cmp
lds
xlat
lcall
ja
popf
repnz
and
mov
lcall
popf
or
jg
fs
adc
pop
pop
aad
fwait
pop
mull
sub
rcrb
inc
cmp
fbld
sahf
adc
ret
outsl
xor
shrb
fwait
and
push
fistl
sbb
jns
call
dec
xor
push
ret
mov
push
jno
dec
push
decb
inc
mov
xor
fcompl
xlat
scas
mov
push
out
add
push
adc
scas
lock
xchg
lds
pop
or
cli
out
cmp
inc
xchg
or
ret
inc
popf
or
orb
xchg
pop
sbb
adc
lods
xchg
data16
insl
add
dec
adc
mov
ja
cmp
loop
popf
movsb
dec
cmp
lods
fists
dec
mov
mov
dec
jno
in
in
or
mov
es
mov
or
pushf
pop
mov
add
lcall
inc
ss
iret
in
cld
out
jecxz
movsl
mov
lds
mov
andb
jbe
cmp
mov
dec
inc
sub
ljmp
pop
xchg
dec
mov
orb
sarl
cmpsl
and
jbe
arpl
xchg
cmpsl
xor
xchg
xor
sbb
sub
js
pop
mov
pop
push
mov
nop
repz
add
pop
push
lods
cmovo
daa
dec
xlat
pusha
inc
loop
push
adc
pushf
adc
popl
lahf
mov
jge
test
inc
cmp
nop
mov
gs
dec
add
fstpl
js
push
test
sub
inc
mov
call
mov
jmp
int
out
sbb
pusha
xchg
dec
mov
andb
dec
add
add
repnz
jl
icebp
xor
loope
repz
pop
in
dec
and
pop
cmp
push
or
lahf
orb
gs
imul
push
cld
ja
push
jns
test
sub
loop
pop
and
jo
lods
jmp
stos
js
xchg
aas
into
int3
jne
pop
js
idivb
testb
or
out
jb
out
int3
xor
xchg
jecxz
jmp
neg
fadd
out
sub
sar
cmp
js
and
or
xchg
or
lock
sub
xchg
jl
and
out
in
push
mov
loopne
shlb
rcrl
fwait
pusha
xchg
push
push
or
bnd
xchg
add
xchg
outsl
lods
jnp
enter
inc
shr
out
lods
out
andl
cmc
xlat
sbb
ret
lds
inc
ljmp
ret
addr16
sbb
xor
fdivr
mov
addb
cmc
lock
pop
cmp
sub
out
cmp
lods
sarl
in
int
and
mov
adc
mov
std
adc
gs
cld
sub
or
pushf
mov
mov
xor
mov
mov
lock
xor
jp
mov
movl
insl
mov
icebp
cs
dec
outsl
pop
es
xchg
inc
adc
insl
jnp
daa
fdivs
xchg
fs
stos
sub
test
inc
mov
inc
sub
push
insl
iret
jp
pusha
aam
cmp
int
mull
ret
into
jo
daa
test
in
xchg
dec
mov
or
daa
or
mov
cltd
mov
and
cli
dec
lea
jmp
adc
cmp
cli
movsl
popf
mov
push
pop
cmp
jle
add
cli
xchg
test
lret
xlat
lea
fildll
mov
mov
jae
mov
shlb
sub
dec
imul
fs
push
mov
or
shrl
jo
xchg
sbb
int3
add
add
jmp
mov
mov
adc
sbb
idivl
clc
or
xchg
sbb
je
nop
sarb
es
fsub
inc
pop
ja
mov
sub
adc
and
adc
fsubp
or
shll
lea
rol
test
aad
jmp
push
dec
cmp
js
cwtl
icebp
mov
ret
loopne
int3
or
bound
lcall
xor
notb
pop
test
jae
push
mov
pop
xchg
jecxz
push
pop
cmp
xchg
pop
lock
sar
test
icebp
cmp
movsl
add
aaa
out
pop
fucomp
aaa
hlt
sti
and
push
popa
in
pop
pop
mov
push
mov
fcom
mov
dec
out
jle
push
movsl
jb
mov
inc
or
dec
push
pop
lea
out
add
and
pop
lds
push
inc
jo
or
je
or
jo
fmulp
cltd
imul
sbb
jge
cmp
jae
xor
push
fwait
fs
jno
leave
loop
dec
mov
popf
mov
cld
inc
push
fstpt
clc
mov
clc
add
repz
push
mov
xchg
sub
das
imul
nop
sub
jb
dec
push
inc
in
jmp
test
loop
sbb
adc
repz
sub
jns
in
lret
cmp
pop
shrl
add
rcr
dec
xchg
adc
xchg
out
iret
aad
gs
xchg
lret
cmpsb
cmp
pop
lock
cmp
enter
mov
xlat
dec
pop
hlt
mov
jbe
cmp
test
test
mulb
clc
sahf
push
add
notb
cli
in
loopne
xor
lret
insl
push
jle
fsubr
repz
inc
dec
xor
mov
pop
mov
es
xor
popl
sub
jne
sti
jmp
pop
dec
push
push
add
enter
push
pushf
lcall
mov
pop
and
and
test
mov
das
aam
pop
pop
into
scas
cmp
test
rcl
es
lret
ja
les
xor
lcall
pop
push
jb
dec
leave
push
cmp
cli
jo
add
fildl
dec
mov
push
cmpsl
jge
test
clc
mov
test
jno
xor
inc
and
ror
inc
enter
sbb
xor
loope
mov
stc
lods
cmp
ja
cwtl
push
jno
add
adc
lret
add
lret
xlat
cmp
or
test
mov
or
in
into
test
ljmp
adc
jle
add
xor
pop
pop
daa
ss
movsb
pusha
icebp
push
pop
dec
ret
iret
gs
sahf
mov
cwtl
repnz
sub
xor
xchg
xchg
adc
sbb
imul
push
xchg
xor
cmp
adc
lock
push
gs
dec
stos
mov
shlb
pop
add
icebp
sahf
add
or
sahf
cmpsb
fldcw
fcomps
pop
pop
jne
xor
add
mov
cmpsl
jno
fnsave
xor
in
dec
mov
lcall
addr16
daa
inc
pop
jae
mov
shr
imul
inc
cmp
add
add
into
fxch
in
mov
jmp
rcll
xlat
or
fstpt
in
dec
pushf
sbb
mov
mov
mov
mov
or
iret
mov
mov
mov
sti
rorl
insl
sarb
fistps
or
and
xchg
or
insl
jg
mov
or
adc
jecxz
push
adc
jnp
into
in
pusha
add
fs
scas
add
xchg
mov
into
in
jmp
jo
aas
mov
and
lds
test
insl
xor
mov
xchg
jns
sbb
leave
pop
aad
cmc
stos
idivb
cmpsl
mov
iret
jb
xchg
xor
push
scas
lock
pop
push
pop
mov
inc
or
gs
mov
or
adc
jnp
jns
xor
popa
mov
into
inc
daa
mov
int
js
scas
jns
enter
sbb
subl
adc
xor
roll
movsb
xor
jg
std
jge
xor
outsb
unpcklps
pop
fsts
sub
pusha
push
leave
jecxz
movsb
jl
sub
xchg
cmc
aad
jg
dec
sbb
loope
adc
jns
hlt
add
push
push
push
adc
jle
fwait
xchg
dec
inc
idivb
pop
sbb
frstor
mov
pop
xchg
mov
iret
jecxz
jmp
shrb
ja
pop
ds
frstor
divl
add
cmp
inc
pavgw
jae
adc
push
xor
mov
fcom
cltd
sub
cli
shlb
mov
test
xchg
icebp
icebp
push
push
adc
xor
lcall
cmp
nop
jo
mov
imul
cmpb
adc
dec
arpl
inc
push
dec
xchg
rol
xor
ss
jecxz
cmp
mov
cmp
add
sbb
dec
aam
pop
sbb
iret
dec
jecxz
mull
popf
push
sub
sub
jmp
pop
outsl
pop
idivb
mov
cmpsl
push
popa
scas
dec
push
and
into
imul
data16
jmp
pop
dec
aad
pop
cld
jp
enter
inc
ret
sbb
cmp
test
pop
cmp
int3
jg
pop
inc
cwtl
add
sti
mov
dec
mov
adc
scas
das
arpl
js
inc
xor
push
shrb
fcmove
dec
cmp
mov
mov
pusha
pushf
dec
xchg
xchg
pop
aad
lea
dec
push
push
xor
movsl
or
mov
notl
sbbl
mov
pop
add
xchg
jge
andb
xor
or
out
push
or
jne
loop
js
popa
mov
mov
mov
fdiv
sarl
and
cmp
cltd
out
fsubrs
repnz
dec
mov
test
jbe
fists
pop
fdivr
xchg
sub
cmc
bound
xchg
std
or
dec
cmpsb
cwtl
xor
xchg
push
lcall
or
xor
out
and
fisttpll
cmc
pop
mov
cld
decl
hlt
push
pusha
mov
jne
daa
cmpb
out
mov
jl
adc
mov
push
sbb
fdivrs
js
aas
lock
ret
adc
or
or
adc
bound
pop
mov
data16
aas
jns
ds
cmpsb
push
lahf
mov
and
dec
mov
inc
cmp
out
stos
adc
adc
push
xchg
frndint
and
push
cmpb
jl
mov
xchg
inc
jg
jl
ror
bound
lods
mov
push
or
push
inc
loopne
pop
push
adc
jo
add
ret
add
xor
orb
push
leave
ljmp
jge
cld
fwait
enter
lret
pop
pop
sbb
xchg
xor
cmpsb
adc
shrl
popf
lret
xor
xchg
jnp
jne
addl
test
jo
or
jno
and
and
mull
cmpsb
sub
insl
mov
and
test
xor
inc
popf
add
mov
lods
enter
mov
sbbl
pop
outsb
mov
adc
in
mov
dec
push
nop
addb
fidivl
ja
sbb
pop
test
pop
aaa
outsb
fdivrs
sbb
dec
test
pop
dec
push
gs
inc
push
or
pop
dec
sub
xor
ds
add
dec
leave
xchg
jo
in
fnstcw
sub
dec
fucom
sbb
pop
inc
mov
adc
in
inc
inc
xlat
daa
scas
stc
lcall
rol
in
cmpsl
mov
popa
jge
xor
in
es
movsl
stc
pop
and
sub
int3
inc
fmul
lea
movsl
jmp
hlt
jge
dec
xchg
and
rol
inc
clc
push
jne
scas
pop
jb
push
in
jp
aad
std
sbb
cli
aaa
sub
inc
call
dec
mov
push
or
xchg
shl
scas
or
xlat
xor
sti
mov
roll
lret
outsl
outsl
mov
push
mov
sub
iret
dec
dec
pop
data16
jle
movsl
arpl
rcrl
ljmp
aad
adc
lahf
sbb
icebp
lcall
mov
mov
xor
insb
std
iret
mov
mov
push
jle
aad
mov
jb
dec
inc
rclb
mov
popf
mov
fistl
shrb
xchg
cwtl
mov
mov
ficoms
lcall
jne
sbb
int
loop
adc
cli
cwtl
xor
xlat
and
je
jg
hlt
xlat
loope
fbstp
xchg
mov
mov
sbb
fs
fcomi
cmp
not
cmc
xchg
test
jae
and
in
iret
or
push
in
in
in
scas
mov
xor
cmp
movsb
insb
adc
add
lea
pop
test
insl
rcll
mov
adc
nop
fcomi
mov
lds
mov
inc
mov
jp
or
and
mov
ret
dec
out
push
cwtl
push
mov
push
lcallw
mov
sub
add
inc
fsubl
cli
adc
xor
imul
flds
dec
xlat
jl
xchg
ret
repz
jmp
inc
jbe
dec
pop
clc
mov
loope
not
or
or
call
hlt
xchg
rolb
cs
jbe
insl
xor
repnz
and
jge
dec
in
cmp
sub
jg
fs
xchg
outsb
bound
inc
pop
faddl
popa
cmp
ffree
ljmp
or
add
push
push
sarb
mov
imul
dec
lcall
mov
sub
popf
sarb
push
push
push
add
mov
jne
mov
int
rorl
out
mov
hlt
out
push
push
xor
mov
jbe
cmpsb
adc
and
cmp
dec
cmpsl
cmp
les
push
rorb
pop
push
imul
jae
xor
and
adc
inc
fnstsw
mov
and
aaa
jecxz
fstl
cltd
and
imul
and
lock
hlt
repz
movsl
mov
fsts
mov
push
pop
push
fsubl
mov
sti
mov
inc
cmp
ja
mov
jo
popf
adc
jmp
sub
xchg
mov
pusha
imul
push
nop
mov
mov
adcl
pop
ficompl
loopne
xchg
push
fcoml
shlb
ja
sub
inc
mov
pop
insb
dec
sbb
movsl
xchg
jae
add
pop
push
mov
roll
aam
jb
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
xchg
cmp
aam
jl
fisubs
xchg
adc
mov
push
lea
cli
and
or
pop
xor
mov
xchg
add
out
lret
popf
dec
es
cwtl
fs
jbe
stos
push
jbe
fwait
add
cmpb
stc
in
repz
mov
fistl
pusha
inc
popa
inc
push
mov
in
enter
jle
xor
sub
aas
loop
pop
jle
xchg
inc
je
shl
gs
into
add
jbe
gs
jmp
push
pop
in
inc
ret
xor
lret
cltd
cmp
mov
movsl
mov
mov
mov
ss
xor
mov
sub
or
insb
test
loope
add
faddp
insl
cmp
xchg
cli
dec
cld
out
fmul
or
aas
rolb
inc
mov
into
dec
jmp
fs
sbb
out
ljmp
pushf
and
stos
cmp
adc
mov
clc
fs
mov
cmpsl
fidivl
add
jne
aaa
mov
les
or
frstor
iret
lahf
fs
xor
cmpsl
jae
adc
fcoms
push
mov
popa
pop
mov
jne
test
pop
or
lea
fiaddl
aaa
sub
push
rolb
pop
xor
lds
and
mov
cmc
insl
insb
and
scas
rol
xchg
loop
lea
adc
xchg
js
mov
stos
add
gs
shl
cs
or
cwtl
mov
aam
add
add
push
mov
adcb
jmp
xchg
sub
or
cmp
pop
push
dec
jmp
and
cmp
cmp
shlb
add
sbb
jns
push
inc
stos
in
cwtl
push
xchg
mov
cmp
loopne
and
test
mov
dec
mov
cmc
mov
fs
inc
stc
arpl
pop
mov
mov
scas
sbb
add
or
fcmovu
dec
cmpsb
pop
mov
jl
sub
sbb
outsb
xchg
addr16
xchg
fcoml
jle
test
jmp
push
push
xor
cmpb
dec
mov
sbb
inc
imull
dec
dec
jnp
out
bound
das
dec
sub
int
mov
dec
add
insl
aad
shll
and
inc
in
sti
outsl
js
inc
push
xor
pop
pushf
pop
add
adc
aam
cld
mov
loopne
push
mov
test
stc
lret
aam
sti
and
cwtd
mov
psubusb
pop
in
inc
sbb
fidivrl
popf
mov
mov
ljmp
mov
test
jnp
sarb
mov
testl
sub
iret
mov
xchg
nop
scas
insb
inc
add
jae
sub
sahf
or
mov
mov
shrb
mov
insl
or
outsb
arpl
mov
outsl
cmc
cld
int
and
out
ret
xchg
call
lds
xchg
xor
mov
arpl
dec
mov
mov
cmp
and
or
outsb
lahf
and
in
decl
mov
inc
fdivrp
inc
addl
jne
mov
stc
pop
pop
xchg
sbb
jmp
xlat
dec
mov
icebp
push
jecxz
jnp
sbb
subl
jo
insl
bnd
cmp
jp
es
sahf
gs
mov
or
add
dec
out
sbb
ret
cmp
mov
xorb
mov
jg
pop
mov
push
mov
cltd
pop
and
fimuls
lods
pushf
cmp
adc
pop
stos
dec
andl
movsb
icebp
sbb
sbb
gs
pusha
push
cs
mov
and
sub
jg
inc
add
push
lock
popf
daa
and
addr16
test
mov
push
xor
out
mov
push
test
inc
jno
js
adc
pop
inc
mov
stos
mov
mov
insb
mov
xor
iretw
mov
repz
lret
xchg
gs
mov
and
adc
cmp
mov
or
xorl
dec
xor
cs
stc
rcr
add
clc
js
gs
mov
push
loop
add
mov
jbe,pt
sarb
pop
mov
mov
mov
xor
mov
inc
inc
sbb
repnz
push
int3
dec
mov
xor
or
mov
xchg
loope
mov
inc
mull
jmp
ja
dec
fdivr
fwait
ret
into
push
mov
scas
mov
pop
sub
pop
or
jle
jns
mov
in
test
ja
or
les
ficompl
ja
mov
fwait
enter
inc
or
lock
out
sub
fdivrl
dec
adc
je
in
std
dec
out
jmp
out
es
repnz
or
cwtl
lret
fists
out
mov
je
mov
mov
imul
mov
movl
in
dec
bound
inc
out
mov
jmp
dec
adc
imul
sbb
adc
je
xor
cmc
repnz
movsb
xchg
mov
cmp
je
cmp
xorl
out
dec
rcr
stc
jbe
pushf
stos
out
sbb
cmpsb
inc
lock
in
add
mov
add
add
sub
scas
pushf
sbb
jecxz
fmull
in
and
cmc
xlat
mov
test
scas
xor
js
aad
es
dec
xor
movsl
cmp
aad
sbb
xchg
push
dec
add
pop
dec
jl
cmp
pop
push
jbe
fwait
pusha
mov
adc
loop
rolb
and
dec
ror
cmp
in
stos
rcl
inc
push
or
inc
enter
jbe
xchg
add
scas
mov
cmc
cmp
test
add
iret
call
pop
jl
shll
fs
lods
xor
test
arpl
cmp
add
loopne
xchg
and
fs
fs
mov
sbb
cltd
xorb
icebp
cmp
repnz
pop
mov
and
mov
sub
push
gs
inc
pop
scas
cmp
mov
in
jbe
popa
or
push
lret
out
ret
adc
mov
mov
pop
mov
pop
add
dec
inc
pop
add
xchg
dec
loope
cld
xor
adc
cs
mov
mov
mov
cmpsl
lcall
stc
loopne
daa
and
mov
cmp
out
mov
push
nop
ret
xor
sub
sbb
pop
lret
fisubrs
arpl
mov
add
mov
pop
scas
cmp
or
fldl
mov
pop
aam
jnp
lea
sti
shr
dec
ja
imul
test
xor
stos
dec
sub
popa
je
adc
sbb
sub
ficoms
mov
cmp
nop
es
scas
xchg
popl
pop
test
lea
xor
cli
adc
inc
dec
push
xchg
mov
mov
jg
mov
pop
sub
jge
jl
decb
or
daa
hlt
and
jno
rcll
stos
fsubl
and
lret
insl
sub
lret
fdivl
pop
xchg
push
or
shl
mov
shll
push
cmpsb
mov
fidivs
mov
fimull
int
imul
jno
lods
inc
jne
push
adc
jae
push
fistl
mov
lods
out
mov
out
rorl
bound
sub
out
cmp
das
mov
sbbl
add
mov
adc
psrlq
pusha
mov
out
call
cmp
lock
lret
jl
or
hlt
sti
subb
stc
xor
lock
aam
xchg
btr
ljmp
and
icebp
xchg
xorl
xchg
es
cmpb
or
jg
add
dec
incl
push
aad
js
inc
xchg
adc
mov
inc
movsb
cmp
inc
test
xchg
mov
and
lods
lea
sub
add
mov
daa
data16
mov
mov
aad
sub
push
mov
sbb
pop
cmp
sbb
hlt
pushf
mov
lcall
or
out
lds
push
push
inc
jmp
adc
push
dec
inc
cmp
sub
pop
jbe
push
pop
mov
sbb
xor
dec
fxch
mov
mov
inc
shl
inc
data16
ss
cltd
or
dec
in
sub
cmp
mov
fldenv
push
xlat
lcall
es
inc
push
mov
and
int
ret
sbb
mov
movsb
inc
cmpsb
aaa
pushf
ret
lcall
jmp
pop
push
xchg
dec
clc
mov
push
mov
lods
nop
cmpsb
stc
mov
pop
mov
lock
test
adc
mov
mov
repz
cwtl
dec
pop
negb
xor
mov
leave
inc
jno
dec
ret
decb
inc
or
lds
das
leave
sti
cmp
iret
add
and
xor
in
shrb
sbb
out
adc
or
jg
inc
icebp
test
xor
mov
jne
shrl
xor
inc
out
je
cmp
insb
les
cmp
jmp
idivl
gs
jnp
jl
xchg
nop
fmull
and
jmp
popa
roll
call
inc
push
dec
pushf
outsb
lock
mov
out
sti
in
dec
and
pop
test
inc
xor
call
pop
pop
sub
fmull
js
jbe
xor
adc
or
cli
mov
loope
test
mov
or
mov
loope
xor
hlt
mov
mov
push
dec
and
aas
jmp
icebp
jg
sbb
or
shrb
mov
dec
xchg
inc
ljmp
std
push
push
xor
popf
jl
fisttps
hlt
inc
sbb
cmpsb
ficoml
adc
iret
rol
push
in
rol
mov
leave
xor
clc
jge
sub
cld
mov
notb
fcomi
mov
pop
jns
xchg
cwtl
aam
bound
les
jl
into
lock
sbb
inc
lea
imul
sub
ficoms
jo
cmpsl
rcrl
das
jecxz
aad
xchg
sbb
fildl
and
aaa
sub
test
loop
push
negb
inc
dec
pop
fnclex
insb
test
dec
mov
add
aad
imul
fwait
aam
icebp
dec
fiaddl
call
mov
lcall
push
ror
movsl
xchg
mov
dec
fldt
out
jae
cmc
sub
jecxz
imul
sbb
int3
test
repz
sub
mov
addr16
mov
mov
xchg
cmp
xchg
subb
pop
push
push
stc
mov
or
adc
pop
and
rolb
jne
in
and
hlt
cmpb
sbbb
es
lock
lds
sbb
inc
ljmp
xchg
sti
push
and
jl
stc
shlb
mov
pusha
ret
lds
pop
adc
dec
mov
mov
mov
lret
add
pop
out
addl
aaa
push
loope
pop
cld
mov
out
xor
jecxz
cmp
jl
movsb
fcoml
dec
fsubr
xchg
mov
mov
pop
mov
cmp
or
jl
and
fadd
xor
std
rorb
dec
mov
aam
add
shl
orl
jno
jg
pop
add
pop
out
addr16
xor
mov
xchg
into
sahf
sub
push
loop
scas
jb
idivl
inc
lea
dec
xchg
std
xchg
psllq
add
popf
insb
cmc
loopne
sub
fst
cltd
inc
ss
ret
repz
sbb
test
sub
sahf
pop
cmp
xor
jae
sbb
cmp
ret
idivb
inc
in
repnz
jecxz
sub
jbe
into
inc
lock
out
dec
inc
adc
mov
addb
mov
aam
push
movsl
dec
popa
mov
dec
iret
sub
call
adc
inc
sti
aad
pop
pop
push
cwtl
outsl
cmp
adc
sub
cmp
mov
xchg
mov
inc
mov
or
mov
pop
mov
mov
test
test
mov
js
fidivrs
and
cmp
mov
rorl
cltd
std
push
lods
add
cld
xlat
inc
dec
push
leave
ss
sub
lahf
cmp
sti
jmp
push
sti
mov
mov
dec
loope
fimull
or
sbb
dec
rcll
mov
loope
ss
call
loop
cmp
cmp
in
jo
push
daa
push
fcmovnbe
xor
sarl
popf
ret
es
outsl
in
aad
mov
fdivrs
jb
cmp
adc
nop
movsl
cmc
mov
cmpb
xor
pop
ja
fnstsw
in
mov
dec
and
out
movsl
imul
out
or
mov
mov
cld
xorl
sub
adc
scas
test
insb
clc
scas
or
ret
sub
ret
mov
incl
push
jl
sahf
add
mov
xorl
xor
stos
sbb
loop
jle
pushl
aad
mov
fisubl
std
sub
mov
inc
out
lcall
and
lods
mov
xchg
add
jbe
mov
dec
les
mov
push
mov
inc
inc
mov
je
jge
mov
jns
ret
sbb
mov
enter
sarl
mov
insl
int
je
xchg
push
cmp
das
stc
ret
das
popf
jle
enter
sbb
adc
insb
aad
add
lods
jp
push
cmp
xchg
movsb
in
lret
and
repnz
mov
mov
dec
xor
dec
test
std
adc
push
sbb
mov
fiaddl
fwait
xchg
sarb
cmp
jp
xor
dec
mov
mov
lea
mov
enter
sbb
push
xchg
jns
adc
sbb
inc
jmp
inc
leave
push
in
mov
sahf
bound
add
out
mov
lods
in
xor
cli
fmuls
xchg
or
mov
mov
enter
mov
aad
jo
dec
subl
or
adc
aad
scas
push
add
inc
cmp
xor
leave
mov
xor
pop
sti
test
and
repz
pop
les
and
adc
aad
or
loope
xor
or
movsb
dec
mov
ja
cmpb
aas
aas
outsb
lds
jp
shl
mov
outsb
add
sahf
ja
mov
mov
jle
dec
mov
xchg
dec
cmp
mov
mov
jb
stc
clc
dec
les
in
dec
mov
jne
repnz
shll
fbstp
jp
sbb
in
leave
lock
sub
adc
adc
sub
adc
dec
dec
xor
pop
dec
dec
push
insl
ljmp
cmovo
mull
mov
out
sub
addb
jbe
inc
dec
pop
push
sub
movb
and
movl
xchg
xchg
add
outsb
push
inc
das
pushf
xor
bound
jle
out
inc
sub
mov
and
cmp
xchg
aam
insb
jnp
add
fimuls
addr16
bound
outsl
lahf
sub
inc
or
sbb
lret
aas
out
xchg
pop
ficoml
rcll
shrl
mov
cmp
pop
aas
pop
stc
cld
adc
jns
push
iret
xchg
mov
scas
sub
hlt
rorb
dec
sub
mov
inc
scas
js
lahf
sub
je
jae
push
frstor
das
addr16
jmp
jecxz
inc
sarb
pop
shl
das
aam
pop
mov
leave
in
aas
int3
adc
add
addb
fnstcw
or
pop
sub
es
in
jmp
lret
popa
mov
cmp
push
sbb
jns
mov
outsb
lods
xchg
mov
mov
add
pusha
sub
jbe
ret
and
xchg
xorl
jb
push
fdivrs
dec
mov
notl
xchg
ret
and
call
inc
cltd
push
sub
or
stos
mov
lods
push
shll
lods
insb
xor
out
xor
outsb
sbb
notl
mov
popf
or
dec
mov
pop
push
fwait
mov
push
ss
mov
dec
push
aad
xor
fisubrs
ljmp
sub
mov
nop
ficoms
stc
push
mov
jl
inc
arpl
cs
cmp
cmp
addl
jge
sysret
js
repz
sbb
sub
scas
push
xchg
pop
or
dec
xor
mov
xlat
mov
int
mov
mov
mov
loope
add
pop
cli
shlb
lret
pop
sarb
nop
pop
cwtl
and
lods
xchg
inc
lock
push
sub
push
stos
pop
movsb
pop
and
xlat
xchg
adc
fs
pushf
sbb
adc
or
mov
mov
mov
test
pop
les
inc
orb
jno
cmp
icebp
mov
scas
out
lret
jb
sub
stos
mov
mov
repz
loopne
sarb
pop
xlat
mov
jae
mov
test
cld
push
inc
ss
dec
jbe
mov
leave
enter
ss
cmc
int
and
rcrb
cs
in
bound
pop
in
in
loopne
push
ss
cmp
testl
repz
jl
orb
sbb
cld
add
push
ja
lret
inc
cmp
ficomps
adc
sbb
xchg
scas
jnp
aaa
leave
pop
jge
decb
jg
sbb
pop
cmp
js
fwait
pop
cmp
pop
cld
cwtl
jg
pushf
xor
scas
push
les
dec
ljmp
addr16
jae
mov
bound
pop
imul
mov
adc
jp
mov
xchg
fisubl
mov
out
test
scas
je
adc
outsb
arpl
stc
bound
mov
pop
pushf
lock
push
movsb
pop
jle
in
rclb
jmp
push
movsl
cmc
jge
outsb
adc
shr
out
scas
jnp
ret
sbb
daa
and
jmp
addb
inc
sub
xor
push
out
jmp
dec
add
inc
out
out
push
xchg
inc
jb
mov
dec
jmp
pushf
movsl
xchg
push
jno
mov
aad
xchg
cmc
cld
out
lds
and
pop
mov
or
adc
pop
pop
mov
shrl
ret
inc
aas
jg
outsl
lods
daa
jnp
stos
pusha
pop
outsl
lahf
test
lcall
adc
xor
xor
push
or
imul
mov
mov
inc
pop
xchg
out
mov
loopne
adc
push
mov
repnz
add
arpl
lods
sbb
in
sahf
call
cmpsb
add
jl
test
in
mov
icebp
xchg
cmp
or
daa
bound
rcrb
xor
mov
out
xor
adc
dec
cwtl
or
repnz
repz
out
inc
in
loop
push
xor
imul
dec
push
mov
pop
pop
mov
xchg
push
lret
sbb
rcrl
cwtl
push
and
cwtl
mov
stos
push
adc
adc
insb
mov
xor
and
lret
jnp
xchg
xchg
jmp
imul
push
shl
and
push
mov
or
out
test
in
sbbb
stos
inc
push
mov
and
adc
or
mov
dec
pushf
mov
jl
mov
cmc
mov
addr16
test
mov
mov
push
and
mov
pusha
dec
int3
nop
fstp
inc
fs
lods
or
xchg
sbb
add
cmp
popf
aaa
out
je
in
jecxz
sub
outsb
pop
shll
mov
inc
andb
sarl
pop
xchg
pop
fdivr
push
mov
jle
cmp
arpl
push
pop
aaa
cltd
adc
sbbb
adc
mov
es
mov
int3
xchg
mov
or
xor
fsubl
dec
sbb
scas
call
add
arpl
out
xor
xchg
sub
mov
dec
gs
adc
xlat
jg
bound
movsl
in
add
push
pop
xchg
add
jp
add
mov
leave
test
ja
jo
inc
jecxz
insl
inc
sub
mov
aaa
dec
or
jge
inc
fnstsw
push
jle
sbb
cmp
sbb
jle
push
push
clc
test
cld
sbb
ja
jl
jecxz
enter
ja
inc
shrb
ret
orb
add
inc
add
ja
xchg
loopne
cmp
ja
mov
out
push
jno
dec
push
popf
push
push
sub
ret
adc
int
sbb
sbb
rcrb
test
in
mov
movsl
in
je
cli
add
ds
nop
dec
and
push
xchg
ret
js
dec
push
rcrl
popf
out
xor
lahf
ret
clc
fcom
aad
push
mov
js
cmpsb
out
jecxz
fmuls
dec
sub
out
xorb
dec
mov
sbb
pop
lods
adc
xchg
sbb
arpl
fcoml
push
in
std
push
cmp
out
hlt
xchg
mov
in
xchg
lret
mov
mov
imul
dec
jns
cmpsl
out
mov
pushw
lods
call
xchg
jo
or
aas
pop
iret
pop
push
ja
jb
mov
add
sub
jo
jne
pop
or
mov
into
push
in
sub
inc
fimull
inc
or
loopne
pop
pop
outsl
rolb
hlt
rorl
icebp
inc
movsl
subl
push
push
fcomps
cs
loop
cmp
inc
mov
dec
xorb
jns
test
and
imul
jecxz
mov
sbbb
inc
dec
mov
jle
pop
mov
rorb
inc
int
in
pop
xor
incb
jae
inc
int
jae
lret
add
bnd
inc
add
pop
inc
mov
push
mov
xchg
inc
or
mov
sahf
mov
pushf
jnp
jmp
fcmovnu
cs
ljmp
inc
je
ss
push
jle
mov
jns
dec
pusha
add
jae
iret
add
sbb
xchg
movsb
sub
mov
push
fwait
adc
inc
into
xorb
fdivl
jns
insl
and
lock
pop
imul
cld
and
fnstcw
addl
jl
pop
out
mov
inc
and
pop
aas
mov
cmp
push
or
fsub
xchg
inc
push
push
xor
fcomps
adc
xchg
xchg
sbb
test
jmp
nop
fsubrl
cmp
mov
adc
adc
xor
mov
sub
dec
movsl
divl
inc
and
push
ja
lcall
mov
outsl
out
push
sub
lret
xchg
and
push
insl
mov
sub
or
mov
xlat
push
cmpb
andl
out
jmp
pop
push
push
rorb
add
mov
arpl
lcall
pop
aaa
std
dec
cmp
inc
xchg
insb
mov
jb
mov
int
lds
scas
or
fsubrs
adc
mov
lods
imul
movsl
jae
sarl
call
or
inc
mov
mov
and
scas
adc
jo
inc
sbb
dec
push
fiaddl
daa
mov
sbb
jno
and
or
es
rcll
mov
stos
pop
stos
mov
stc
test
in
mov
xor
jge
lret
mov
scas
xor
adc
js
mov
pop
rcl
cmp
sahf
push
stos
xchg
push
repz
push
repnz
dec
ret
jns
pop
jmp
lret
sub
shrl
addr16
mov
sub
xlat
repnz
cs
int3
lret
push
adc
imul
fisubrs
xchg
in
xor
stc
pop
bound
loopne
push
lret
xor
ret
daa
or
out
lds
xchg
jl
test
fnstcw
xchg
ja
xchg
jae
rclb
and
sbb
dec
mov
mov
addr16
xchg
bound
outsb
lcall
in
sub
rorb
js
movsb
xchg
cmpsb
push
ret
cs
dec
pop
jge
dec
es
cmpsb
add
jp
int3
stc
out
pop
pop
push
push
cltd
mov
pop
sub
hlt
jno
sbb
xchg
icebp
mov
in
scas
lret
adc
shl
inc
adc
adc
mov
ja
jecxz
inc
fisubl
jge
in
inc
adc
sbb
pusha
mov
int
in
push
hlt
mov
cmc
stos
icebp
stos
dec
ljmp
in
repnz
sub
idivb
xor
add
mov
mov
fisubrl
ljmp
es
push
mov
fsubs
cmpb
mov
jl
cmp
and
addr16
cwtl
lea
add
cwtl
jl
jbe,pt
and
jle
mov
stos
in
addr16
dec
daa
iret
push
jle
int3
pop
not
sahf
mov
mov
fidivs
jbe
mov
fnstcw
push
out
add
test
sbb
incl
scas
dec
daa
loop
cld
cmc
lods
jmp
enter
or
nop
sahf
xchg
adc
in
in
popa
loopne
jecxz
rol
out
aas
sbb
fucom
orl
rcrb
bound
pop
inc
or
or
setp
xor
rorl
jecxz
mov
ljmp
xchg
fnstcw
push
xchg
add
pushl
jecxz
pushf
scas
push
add
push
mov
cmpsl
jle
push
insb
inc
loopne
xor
adc
fisubrl
shr
shll
loop
jno
mov
inc
pop
into
inc
mov
adc
mov
mov
xchg
jecxz
push
stos
repz
fsts
lds
jno
nop
cli
loop
xchg
and
ficoms
addb
out
sub
pop
enter
cmp
in
xchg
ret
cmp
pushf
pop
push
push
loope
mov
mov
jmp
stc
jb
filds
int
inc
aam
out
fs
cmp
lret
outsl
sbb
mov
aas
mov
jo
inc
jnp
call
mov
pop
stc
ja
or
in
mov
fidivl
insb
outsb
shrl
pop
jno
xchg
pop
test
sub
dec
insb
lcall
enter
push
xchg
mov
into
adc
int
insb
dec
mov
inc
fwait
pusha
mov
pop
cmp
or
sub
repnz
fimuls
loop
mov
out
addl
lods
pop
pop
int
sub
lods
lea
pop
pmaxub
test
and
pop
shll
mov
clc
cmp
iret
fsubrl
inc
push
jbe
add
xor
xchg
jae
and
arpl
rcll
daa
and
cmp
pop
xlat
xchg
jecxz
aad
jae
and
dec
jp
nop
and
fwait
ror
inc
pop
imul
test
mov
leave
jo
enter
outsl
pop
fmul
loopne
sub
faddp
in
jecxz
or
ja
stc
mov
inc
pop
mov
mov
push
jg
es
sub
stc
push
and
add
ds
iret
rol
jo
xchg
popa
sub
inc
pop
imull
sbbl
rorb
cmp
sub
xchg
data16
lock
push
xor
push
mov
out
das
push
sbbl
mov
sti
inc
ja
add
orl
arpl
iret
xchg
push
jge
repnz
inc
fwait
int3
mov
sub
adc
ja
mov
dec
addr16
loope,pt
cmpb
in
pop
push
jg
pop
lods
xchg
dec
jbe
lret
pop
pop
cmpsl
je
xchg
stos
sub
repnz
cmpsb
and
cmp
jns
aad
mov
add
outsl
cmc
push
mov
test
cmp
add
pop
out
loop
cli
adc
inc
mov
popf
aaa
cltd
add
cltd
ret
add
fwait
pop
mov
or
scas
push
dec
pop
add
or
les
mov
es
sbb
les
push
aad
cmp
hlt
inc
xchg
jmp
xlat
cmpsb
sub
cmpsl
out
jge
push
mov
shll
mov
dec
mov
inc
das
jl
mov
fiadds
in
push
xchg
sub
pop
add
shr
push
jns
shrb
cld
out
xlat
or
xor
push
lds
cmp
cmp
inc
ja
orl
jl
sahf
push
scas
jge
mov
adc
rorb
js
ret
idivb
das
es
inc
out
xchg
mov
jecxz
sbb
inc
imull
scas
inc
xchg
mov
popf
inc
sbb
sti
sbb
scas
enter
mov
aas
jne
stos
add
adc
jno
sbb
js
lret
pop
dec
push
nop
mov
int3
xor
sub
insl
cld
add
fwait
outsl
sbb
xor
jne
test
lods
stos
jbe
fldl
jne
imul
sbb
sub
fdivp
out
add
mov
hlt
push
and
cmp
repnz
movsl
and
add
in
adc
xchg
aad
leave
dec
cmpsl
jno
xchg
sub
mov
in
jmp
jo
cmp
mov
and
dec
stc
in
add
ret
lock
adc
push
sbb
mov
arpl
rorb
das
jns
and
push
aas
stos
movsb
fistps
jae
push
mov
leave
pop
call
ljmp
addr16
sbb
fbstp
mov
fsts
adc
push
sti
iret
in
in
inc
cwtl
int
nop
cwtl
lcall
sub
mov
enter
xchg
push
cmpl
fsubrs
cmp
mov
arpl
imul
rcr
mov
push
push
xchg
cmp
adc
lahf
test
lods
jae
add
sti
pop
pusha
jae
cmp
xchg
push
or
jl
or
rorb
dec
sbb
mov
inc
icebp
fistpl
cmp
add
cmpsb
fs
or
aad
mov
hlt
js
test
xor
movb
fsubrs
ja
test
cmpsl
das
mov
jmp
pushf
imul
sbb
jnp
add
movsl
mov
lods
xchg
lods
push
sub
dec
aam
push
inc
test
inc
stos
test
fsubr
je
cmp
bound
jecxz
add
mov
sub
dec
push
mov
fstps
adc
cmp
mov
jne
mov
int3
mov
movswl
iret
xchg
mov
daa
dec
mov
bound
out
inc
mov
push
jbe
push
out
mov
inc
std
push
inc
adc
adc
xor
push
mov
pusha
int
mov
sbb
mov
jae
pushf
mov
xor
aad
mov
gs
push
mov
hlt
xor
and
xor
xchg
xchg
rcr
imull
jmp
sub
xchg
ljmp
cwtl
fincstp
dec
and
lea
dec
stos
lock
test
mov
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
jmp
iret
adc
push
jl
pop
pop
jl
ja
xor
sub
push
jecxz
aad
stos
xchg
cmp
in
and
sub
add
jp
mov
mov
lret
sahf
mov
lret
dec
sbb
mov
xchg
or
adc
jmp
jmp
lret
addl
repnz
xchg
pushf
push
xchg
in
jecxz
shr
sub
adc
sub
inc
sbb
pop
les
popl
push
pop
dec
ljmp
ljmp
icebp
repnz
testb
mov
xor
push
notl
frstor
push
das
dec
bound
mov
jp
data16
jecxz
jno
push
mov
stc
fmul
push
add
cmc
icebp
or
insl
adc
and
mov
test
outsl
dec
mov
test
fs
pop
aaa
js
in
clc
sub
daa
xchg
fsubl
shrb
dec
xchg
movsl
frstor
mov
negl
jne
cs
in
iret
cmp
xchg
lcall
out
mov
mov
and
imul
andl
xchg
cmp
lcall
sub
push
popa
out
cmp
cs
fiadds
in
dec
xor
sub
cwtl
cwtl
pop
pop
in
gs
testb
xor
mov
inc
cmp
les
mov
dec
xchg
pushf
imul
ja
sub
pusha
icebp
ds
inc
std
lahf
out
test
addr16
subl
movsl
jns
aad
or
jge
imul
nop
sub
xchg
mul
and
dec
push
dec
or
jb
push
mov
inc
fdivr
pop
or
xor
pop
ljmp
pop
pop
xorl
int
cmp
out
leave
shll
mov
je
das
out
sub
mov
rorb
daa
pop
sub
dec
ror
xchg
and
cwtl
cli
lock
lock
xor
xchg
jne
xchg
pop
and
lcall
test
pop
imul
mov
ss
movsb
imul
jo
out
fmuls
pop
adc
mov
adc
and
test
or
mov
mov
or
fisubl
dec
adc
les
pop
jbe
add
cs
mov
sahf
sbb
mov
std
icebp
cmp
sbb
push
ret
pop
mov
jmp
adc
and
jp
add
dec
out
sbb
jl
xor
dec
mov
dec
mov
test
pop
in
xchg
xchg
imul
fs
or
and
rcll
outsl
pop
loope
ret
mov
adcb
sahf
ja
sbb
sub
jbe
cli
clc
adc
inc
or
mov
test
ljmp
call
adc
cmpb
pop
leave
sbb
jp
and
pushf
add
lds
cmpsb
mov
mov
test
out
movsb
sbb
add
jns,pn
push
xchg
adc
xchg
leave
push
test
inc
mov
lret
std
or
or
add
insl
xor
sahf
fistpll
daa
cmp
dec
inc
mov
jle
sub
sub
mov
and
pop
add
inc
mov
cmp
cmp
pusha
es
pusha
add
xor
mov
rclb
xor
xor
push
sahf
mov
sahf
cwtl
mov
adc
fldenv
pop
inc
push
rcl
lea
movsb
xor
rcl
movsl
jge
movl
pop
or
pop
cmp
jns
sti
pop
mov
gs
fists
fadds
cmp
frstor
std
into
lret
pop
mov
movsl
dec
mov
adc
fwait
cmp
xor
mov
aad
hlt
insb
das
cmp
lods
push
add
ror
into
pusha
sbb
repnz
adc
frstor
or
hlt
or
cltd
je
cmc
cld
or
sahf
pop
in
cbtw
sbb
jp
lock
js
adc
xor
gs
outsb
inc
stc
sti
insl
jbe
pushf
xchg
sub
testb
xchg
arpl
loop
sub
clc
clc
incl
mov
fsubl
mov
ret
js
sbb
mov
add
pop
cltd
dec
push
in
pusha
std
mov
cmp
jmp
jge
insl
add
lret
mov
sahf
sbb
out
lods
scas
mov
inc
mov
sub
fisttpl
cli
fbld
pushf
sbb
push
icebp
cmpb
inc
inc
outsl
test
loop
mov
gs
jnp
ss
and
test
mov
cmp
xor
ljmp
xor
sbb
loopne
pop
dec
sub
adc
sti
xchg
pusha
aad
movsb
stos
mov
or
pop
fs
js
adcl
adc
pop
xlat
fisubs
push
inc
test
repz
shll
xchg
out
daa
mov
cmpsb
sbb
jge
mov
clc
xor
jge
cmpl
add
js
xor
arpl
lds
addb
xor
into
enter
imul
loop
lods
inc
int
arpl
sarl
repz
scas
sub
adc
push
mov
outsb
call
mov
jo
xchg
fstps
int3
sub
mov
mov
pop
mov
jnp
mov
lret
pusha
ficoml
jnp
fsub
xchg
or
das
cwtl
xchg
aaa
mov
imul
adc
pushl
scas
pop
and
into
test
mov
sbbl
sti
inc
movsl
ret
jecxz
popf
popfw
dec
mov
jg
cltd
xor
jmp
fs
sbb
mov
mov
push
call
mov
mov
incl
rcl
stos
sahf
jp
sub
icebp
test
cmp
mov
xchg
xchg
xor
scas
pop
cld
or
loope
and
movsb
pop
jns
inc
jno
and
nop
aas
and
pushf
dec
pushf
jge
cmp
cs
in
fs
scas
filds
test
jmp
mov
push
imul
loopne
test
gs
dec
xchg
adc
cmp
lods
add
dec
inc
je
mov
test
mov
roll
ds
mov
add
jl
mov
xor
mov
test
aaa
hlt
mov
or
scas
pop
or
icebp
movsl
ja
sub
vmread
jg
jg
xor
xlat
mov
mov
xchg
notb
ds
jmp
mov
bound
jl
inc
lods
lods
xchg
cld
ja
xchg
outsb
negb
scas
daa
orl
into
int3
divl
ret
orb
xor
lock
mov
in
pop
cli
mov
xorb
pop
test
add
dec
mov
sbb
icebp
push
sbb
sbb
insl
pop
pop
mov
cmp
dec
and
fstpl
pop
sub
sahf
xchg
sbb
or
xor
cwtl
sbb
jnp
test
fnstsw
testl
adc
xor
pop
arpl
push
in
in
inc
mov
mov
nop
pusha
jle
shll
jge
sbb
cmpsb
clc
pop
pop
out
add
and
sbb
rorl
add
test
sbb
mov
movsb
xchg
jae
pushf
or
jae
fwait
cmp
imul
pusha
mov
cmp
mov
dec
xchg
int3
popa
mov
je
cmp
test
jl
pop
mov
nop
dec
jle
mov
cmc
push
cmp
xchg
and
popl
ljmp
aas
sahf
movsb
jmp
shrb
adc
pop
lea
cmpb
cmp
out
sbb
sbb
jp
mov
jnp
clc
idiv
bnd
xchg
xor
addr16
out
clc
lock
sub
imul
push
movsb
aam
jge
mov
std
ja
push
mov
adc
xchg
rcrb
cltd
mov
jae
stc
outsl
mov
mov
add
mov
xor
jne
mov
lock
repz
stos
lcall
aaa
sbb
ds
and
push
sarl
aad
sub
or
jnp
push
jae
sbb
pop
gs
mov
aad
cs
or
mov
ret
add
cli
dec
or
hlt
hlt
das
xorb
jg
loopne
jo
fs
insb
jns
mov
shl
roll
jnp
xlat
icebp
cs
lods
pop
int3
je
cmp
sarb
mov
aas
xorb
cmp
repz
bound
jnp
lds
sbb
push
shll
inc
test
sbb
data16
rcl
xor
add
dec
cmp
bound
outsl
mov
test
orl
rcr
jo
shll
push
fbld
jl
scas
pop
mov
pusha
mov
dec
jmp
in
testl
mov
jne
adc
arpl
jbe
addr16
cmp
sub
aas
in
jne
ds
push
xor
jmp
inc
push
mov
dec
daa
adc
out
pop
clc
dec
and
push
cmp
sbb
cmpsb
push
je
xchg
xchg
nop
fadds
outsb
mov
aam
lods
loope
and
xchg
or
or
adc
insb
xchg
mov
cmp
repz
pop
add
jecxz
or
fistpl
daa
or
lods
std
push
cld
aas
aad
push
dec
hlt
nop
popa
subl
subl
or
stos
jne
aaa
adc
repz
call
dec
jb
incb
test
xor
testl
cmp
cwtl
dec
push
fst
mov
repz
jnp
hlt
xor
loope
add
movl
pop
ret
vmwrite
ret
mov
cwtl
mov
shll
mov
imul
jnp
decb
xorl
mov
mov
cmp
dec
cmp
arpl
arpl
arpl
jbe
aaa
bnd
pusha
dec
xor
fisubs
mov
aaa
out
cmp
xchg
push
xchg
ficompl
pop
xchg
dec
inc
cmc
add
dec
in
aaa
in
cmpsl
int3
aam
jnp
lret
lods
xchg
inc
pop
cmpsl
aas
xchg
sbb
aad
popf
and
sub
cs
lahf
mov
pop
into
sarb
lea
js
push
xor
loopne
mov
and
lds
aas
mov
mov
lret
pop
push
jl
lods
and
xchg
inc
or
mov
push
lcall
das
aas
subb
mov
adc
mov
mov
scas
das
jnp
data16
add
sbb
sbbl
icebp
popl
daa
loopne
cmpsl
sbb
out
xchg
add
sbb
bound
stc
mov
sub
dec
mov
imul
fsts
cmp
mov
fsts
lret
push
lcall
test
mov
scas
sbb
inc
iret
arpl
ffreep
pop
repz
out
cmpsb
or
mov
ret
rorl
hlt
adc
sub
cmpb
and
mov
daa
xor
lret
mov
mov
push
bound
xchg
mov
pop
movsl
push
jmp
push
mov
jg
sbb
adc
xchg
arpl
scas
adc
imul
xorb
inc
xchg
push
mov
inc
push
push
jl
mov
jnp
lds
jb
sub
sbb
cmpsl
sub
xor
dec
inc
out
pop
pop
cmp
jg
pop
dec
push
nop
hlt
push
pop
loop
push
add
mov
psubusw
cli
inc
mov
lock
scas
dec
mov
push
mov
shl
cmp
leave
xchg
add
adc
fwait
icebp
push
jg
mov
rcrb
push
sbb
outsb
jmp
hlt
js
aad
sbb
mul
push
sbb
inc
xlat
jns
mov
mov
pop
mov
sbb
fcom
jmp
dec
mull
out
and
push
mov
into
insl
ret
popf
jg
xor
cmp
aas
xchg
cwtl
sbb
leave
pop
lcall
sub
mov
pop
sub
test
and
sti
das
daa
imul
mov
leave
adc
xor
lahf
xchg
lds
test
ss
push
shl
cld
rcrl
in
mov
mul
in
and
sarl
int
inc
and
sti
mov
lods
xchg
pushf
addb
sub
fdivrl
int
sub
inc
aaa
jno
addr16
and
outsl
lret
scas
xchg
sbb
jnp
cltd
clc
jecxz
shll
xor
cmp
cmp
sbb
cld
mov
xor
push
mov
push
dec
push
sub
mov
jg
sbb
cmpsl
inc
insb
lea
call
add
repnz
xor
sbb
sbb
jle
push
ljmp
inc
jecxz
jmp
das
repz
add
pushf
jle
mov
mov
push
loope
adc
cmp
sbb
js
loope
test
pusha
int
adc
and
push
je
loop
fs
cmp
jge
cmpsl
xlat
pop
leave
pop
xlat
cmp
into
movsl
loopne
mov
dec
or
and
pop
push
fsubrl
repz
adc
fistpl
jno
dec
pop
pop
sbb
aaa
subb
scas
xchg
stos
sub
sub
mov
jno
mov
and
push
insl
and
xchg
mov
pushl
add
dec
adc
sbb
rclb
aas
aam
pop
mov
xchg
lods
pop
mov
outsb
or
lods
pop
push
xor
mov
fwait
stc
jge
adc
mov
test
addr16
mov
jo
push
pop
stc
add
inc
or
lea
adcb
push
call
sbb
cmp
xchg
cmc
std
mov
mov
push
mov
incl
sti
push
xlat
sbb
xchg
lods
fmuls
fmuls
or
aaa
imul
jle
fistps
in
ss
lods
rcrb
hlt
push
rcll
push
mov
push
rorl
sub
cli
mov
das
imul
push
xor
add
int
int
xor
sti
push
daa
pop
sar
cmp
cmpsb
lock
dec
xchg
sti
sub
into
mov
aad
aad
cwtl
mov
mov
imul
pop
xor
cmp
mov
repnz
mov
dec
popf
mov
push
hlt
jno
mov
cmp
rclb
jb
inc
out
lds
rclb
jg
xchg
sbb
inc
push
or
punpckldq
je
xchg
lock
cmp
push
xor
dec
cmc
lahf
mov
shlb
lods
loopne
lret
xlat
fucomp
push
js
cmp
mov
aaa
das
nop
divl
push
inc
sarl
inc
mov
cmpsl
add
xchg
mov
xchg
incb
std
mov
insb
jnp
or
or
and
into
sub
out
mov
push
das
jg
stos
imul
hlt
mov
cmpsl
cmpsb
cli
loope
inc
dec
inc
cmpsl
add
or
dec
pop
xor
mov
sub
add
rclb
aad
ss
pop
daa
inc
xchg
push
pop
mov
fildl
into
add
and
mov
jl
add
je
rcrl
inc
pop
les
out
lcall
xchg
mov
arpl
repnz
ret
mov
jge
mov
jle
push
loopne
mov
rcll
lea
shrl
shll
std
out
popa
cld
ficompl
ja
outsl
and
jno
cmpsb
scas
and
jno
incb
mov
xchg
repz
sbb
fdivl
rclb
add
cs
aaa
cltd
push
fwait
subb
jp
mov
and
cmp
pop
hlt
test
dec
icebp
es
inc
xor
jo
repz
add
jp
pop
add
out
outsb
xor
inc
dec
mov
xchg
leave
je
add
addl
pusha
cmp
les
or
mov
movsl
adc
inc
adc
dec
or
sub
jp,pn
jnp
mov
inc
test
addr16
das
pop
lea
pop
adc
push
repz
push
loop
pusha
in
add
or
or
sub
js
and
push
jo
repz
jecxz
xchg
pop
in
jb
or
or
movsb
jbe
stos
push
arpl
pop
jae
jecxz
sub
mov
mov
and
jecxz
nop
enter
or
jnp
out
test
and
movzbl
sub
dec
or
mov
jb
sti
ret
int3
das
es
push
fwait
in
mov
aam
pusha
add
and
in
jg
das
pop
test
cwtl
jne
xchg
lock
pop
hlt
or
push
fcom
sub
xor
jecxz
mov
adc
or
loope
lret
sbb
repz
add
xchg
js
and
inc
mov
jg
push
or
insb
or
mov
xchg
cmpsb
icebp
cld
pop
orb
cs
das
fmuls
sarl
xor
dec
bnd
lret
xlat
repnz
mov
or
xchg
rclb
popf
xchg
or
add
adc
inc
dec
jge
lods
mov
and
cwtl
dec
rolb
lds
xchg
cwtl
cltd
sarb
mov
pop
jne
or
xor
dec
stos
push
mov
add
add
lods
in
mov
ficompl
fisubrl
mov
fcoml
jmp
lret
pop
jae
out
mov
jo
pop
jle
stc
sbb
insb
mov
in
cltd
inc
pop
sbb
cmp
pop
in
maxps
dec
cld
cmpsl
mov
or
loopne
mov
out
mov
ret
push
out
repz
xchg
inc
fwait
ja
cli
clc
pop
pop
test
jge
dec
js
and
mov
jmp
fisubs
fistpll
ss
repz
cmc
arpl
shlb
pusha
and
xchg
xor
popf
xchg
xor
cmc
mov
jp
out
adc
mov
add
cmp
inc
lahf
pop
push
aas
es
in
dec
xor
es
subl
je
jl
lods
push
pop
repz
push
sub
lds
dec
pop
cmp
into
pop
add
rcrb
mov
rcrb
adcb
jae
jmp
xor
sbb
enter
mov
lahf
lcall
mov
inc
int
xor
cmp
call
xlat
sti
jecxz
scas
enter
insl
clc
inc
push
push
sub
fsub
stc
jo
inc
sbb
or
inc
cld
imul
dec
sub
scas
enter
fwait
das
dec
sub
inc
adc
movsl
and
mov
roll
mov
arpl
fisubrl
enter
imul
jno
in
sub
bndldx
or
add
cwtl
add
mul
notb
cli
into
mov
cwtl
imul
int
dec
les
scas
push
xor
idiv
fisttpl
sub
divb
scas
xchg
aas
dec
ret
adc
pop
nop
insb
jne
std
sub
es
clc
or
dec
xchg
lock
xlat
sbb
subb
cmpsb
icebp
mov
or
mov
jp
mov
mov
cs
scas
inc
aas
dec
xchg
xchg
mov
sub
dec
outsb
jno,pn
loopne
in
gs
jp
ja
mov
es
dec
mov
dec
int3
push
mov
xchg
dec
pop
push
mulb
dec
mov
in
sub
inc
aad
cmp
jg
inc
cmp
sbb
es
mov
stos
testb
lcall
cmp
sbb
loopne
pop
loop
sbb
hlt
mov
add
push
sub
les
iret
test
in
pop
scas
xchg
dec
xchg
clc
add
pop
mov
ja
test
add
mov
aaa
add
xchg
and
lret
repz
sbb
adc
xchg
xchg
adc
movsl
inc
leave
pop
mov
mov
mov
out
addr16
stos
iret
insb
xchg
loope
mov
into
leave
ret
popa
jnp
roll
lea
pop
jns
jl
dec
dec
cltd
cltd
adc
sbb
sahf
out
push
adc
or
call
dec
sti
int
fwait
sub
pop
lea
sub
cmp
inc
out
inc
lahf
cmpsb
adc
clc
pop
rorb
rclb
ljmp
loop
mov
mov
xchg
sbb
aad
es
cmp
mov
cs
cmp
icebp
mov
or
sahf
shrw
ss
sub
xchg
push
ds
cmpsl
adc
pop
push
out
adc
or
adc
push
rorl
dec
into
mov
mov
ja
es
scas
add
jg
push
xor
pushf
sbb
in
incb
dec
xchg
dec
and
lods
mov
call
dec
pop
loopne
movsl
fldcw
and
inc
mov
push
out
mov
jmp
lock
sbb
cmp
lret
and
mov
test
dec
push
loop
repz
sub
inc
lods
pop
testb
xor
repnz
jne
sub
pop
adc
imul
inc
mov
icebp
mov
sbb
lret
push
dec
stc
or
xor
stc
jne
dec
and
adc
add
cmp
dec
movsl
sbb
dec
std
cmp
lcall
push
stc
sti
out
sahf
out
pop
and
loop
fbld
test
pushf
mov
cltd
sub
loopne
sub
cs
shrb
push
call
jns
je
seto
stos
dec
and
add
cmp
sarl
jno
jle
inc
scas
mov
scas
xchg
insl
cmp
call
or
fsub
mov
xchg
push
xchg
pop
mov
mov
adc
pop
inc
push
bound
push
pop
and
pop
xchg
loopne
push
or
lea
bound
lea
xchg
sub
mov
stos
adc
imul
shrl
cltd
pop
sbb
leave
pushf
mov
lret
fdivrl
dec
jnp
and
mov
lret
fdivrl
or
and
sbb
adc
ja
xor
cmp
sbb
pop
jecxz
jno
mov
dec
bound
xchg
mov
fdivrl
pop
negl
data16
fwait
loop
mov
popa
inc
sahf
and
pop
lods
mov
xchg
loope
and
xor
in
xor
dec
lds
rcrb
daa
sarb
adc
adc
push
data16
mov
mov
sbb
lods
cwtl
adc
hlt
aam
lea
test
mov
lret
fsubr
mov
shrb
cwtl
mov
cmp
loope
mov
sub
je
xchg
icebp
cmp
dec
or
inc
jp
lock
sub
and
dec
aas
shlb
sub
xchg
in
mov
notb
add
ss
ljmp
ret
push
or
push
inc
insl
cs
mov
jbe
xchg
out
fdivrl
mov
movsb
push
pop
div
mov
lahf
xor
lock
jmp
cwtl
sub
int3
xchg
arpl
push
fldl
sbb
repnz
jbe
repz
aam
fsubs
or
repz
sbbb
and
pop
pop
sub
aas
arpl
cmp
mov
cmp
cltd
jmp
adc
mov
dec
popa
leave
sahf
sub
loope
les
pop
inc
push
movsb
xchg
popf
addl
lcall
out
push
pop
test
hlt
ljmp
fldcw
es
popa
push
pushf
scas
rcr
repz
movsb
ret
pshufw
inc
xor
cmp
jne
xchg
loope
out
dec
insb
xchg
push
movb
inc
inc
mov
mov
enter
mov
dec
call
pop
stos
mov
testl
int
sbb
daa
movsb
int
cwtl
push
ja
cld
data16
and
mov
jle
call
ljmp
outsb
flds
dec
lret
ret
sbb
push
cmp
cmp
sub
jp
int
inc
shrl
or
lcall
sbb
cmpsl
rolb
data16
sub
aas
sub
xor
enter
mov
outsb
insb
fildl
adc
stos
jmp
orb
out
cmp
push
shrb
cwtl
js
ret
mov
ret
push
mulb
testl
jle
xchg
push
mov
push
jp
mov
aad
adc
shlb
aad
paddusw
daa
pop
inc
inc
adc
xchg
sub
push
xchg
cmp
int3
xor
pop
fstl
pop
imul
inc
btc
xchg
ficoml
jg
adc
lods
div
sbb
movsl
call
pop
pusha
xor
mov
mov
fdivp
jb
dec
sar
sti
ret
fildll
rclb
popfw
sbb
cmp
push
jne
int
push
xor
movsb
stc
dec
aaa
xchg
add
mov
sti
xchg
aad
add
les
sub
lds
jno
aad
stos
stos
stos
sbb
pop
mov
mov
add
push
out
jp
insl
insl
and
not
div
dec
cmc
pop
cmp
movb
test
enter
mov
pop
out
jmp
push
inc
add
xchg
push
orl
adc
xor
fnstsw
cmp
xor
sti
movsl
cld
xchg
into
mov
ja
xor
sbb
mov
loop
dec
pop
fcompl
out
loopw
jno
int
xchg
fdivrs
xchg
and
xchg
dec
jbe
xor
ds
sbb
pop
add
add
mov
xchg
cmp
mov
mov
mov
out
dec
aaa
sbb
imul
jns
push
in
clc
jge
mov
loop
incl
call
mov
jne
insl
mov
mov
dec
shlb
aaa
xchg
fisttps
test
pop
int3
jl
aad
fs
scas
adc
add
jle
shlb
xchg
xor
leave
cmp
xchg
inc
cmp
push
sub
lds
xchg
fstl
js
mov
cmpsl
mov
adc
andb
mov
in
or
stos
arpl
or
sub
outsb
sub
int3
cmp
mov
or
jmp
maskmovq
mull
daa
cmpsb
cmpsb
xchg
sbb
xchg
rcrb
adc
xor
pop
jle
popf
js
test
popf
mov
mov
push
add
jo
fbld
cmp
cmp
push
rolb
roll
cmp
push
mov
ret
dec
xor
je
call
adc
js
jae
fs
mov
or
pop
xor
orl
mov
pop
sbb
xor
ja
inc
loop
cmc
addl
loopne
loopne
and
aas
jmp
lahf
dec
mov
jae
lds
pushf
out
push
or
adc
bound
hlt
mov
mulb
pop
pop
ret
and
rcrb
pop
aaa
adc
lcall
fst
xchg
jb
adc
cltd
test
ret
nop
jo
ss
jl
leave
jnp
dec
xchg
fcomps
popl
or
std
lahf
lahf
rcl
lret
push
cmp
in
adc
mov
mov
jg
xchg
fsubrp
adc
inc
rolb
jle
test
repz
mov
stos
xor
or
pushf
inc
inc
push
jb
test
in
push
pop
lcall
loop
je
sub
stos
add
jle
push
in
push
lahf
xchg
jae
mov
or
dec
fwait
mov
push
int3
or
out
adc
xor
lea
sbb
std
jae
or
out
ljmp
cmp
mov
nop
js
xchg
cmp
incb
in
add
cmpsl
mov
cmc
rcr
into
pop
sub
iret
mov
mov
xor
out
add
mov
loopne
pop
cld
fstl
dec
not
scas
cmp
shl
fsubrs
push
or
mov
xchg
mov
div
jmp
imul
arpl
es
stos
push
inc
pop
mov
mov
xchg
shl
sahf
fldl
mov
mov
push
jl
int3
loopne
out
push
jl
int
pop
adc
sub
loop
push
sti
xchg
jecxz
lods
push
jnp
add
push
push
ljmp
add
xlat
adc
and
xor
mov
rorl
fldt
cmp
or
dec
in
ljmp
jmp
clc
dec
push
push
gs
or
addb
push
in
xor
push
fdivrs
mulps
push
sbb
nop
sub
mov
inc
mov
mov
lods
je
scas
ds
push
xor
pop
sti
addr16
jb
jno
cli
push
leave
jae
pop
adc
pop
divb
sub
testb
cmp
in
xlat
fsubr
loopne
sahf
sbb
add
call
mov
outsb
bound
cmpsl
xchg
mov
or
inc
lcall
cmp
xchg
dec
xchg
cld
push
mov
andl
mov
mov
and
shr
rclb
inc
jbe
sti
sbb
repz
psrlw
mov
lods
movsl
mov
push
and
fildll
jne,pn
pop
popf
adc
mov
add
adc
mov
and
xor
xor
inc
stos
ss
call
mov
xchg
aam
mov
inc
cmp
repz
or
sahf
lea
mov
jmp
ds
dec
cld
out
lods
jge
lret
das
mov
inc
ljmp
fsts
insb
loope
call
scas
daa
popf
lret
rcr
std
inc
jb
shlb
sub
dec
stc
mov
lcall
loope
loope
cmp
mov
inc
sbb
adc
lods
popf
stc
jns
repz
and
ja
push
repz
jecxz
xchg
loopne
je
push
mov
in
or
sub
add
and
mov
push
mov
lods
adc
pop
out
into
xchg
dec
mov
xchg
test
dec
hlt
dec
sahf
jecxz
cmp
push
scas
jle
add
xor
inc
and
dec
push
sbb
lods
inc
inc
dec
pop
aaa
sbb
fldt
push
push
nop
imul
fldenv
sub
out
mov
scas
jecxz
or
push
addr16
push
subb
in
scas
cmp
fistpll
or
mov
push
out
xlat
icebp
push
test
enter
popf
sub
sbb
or
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
scas
mov
jl
pop
pop
jl
js
mov
mov
inc
pop
nop
cld
jp
popa
xchg
sub
bnd
mov
xor
repz
pop
dec
mov
popl
xchg
mov
aaa
call
ja
dec
mov
cs
pushf
fisttps
jo
call
pop
das
lcall
jge
mov
ret
adc
mov
imul
ss
xor
sub
enter
popa
dec
cmp
xlat
jmp
push
mov
adc
ja
or
push
insl
dec
xor
push
cmp
xor
xor
jbe
push
xchg
xchg
insl
xor
test
outsl
repnz
cmp
std
mov
mov
shl
inc
pop
lret
popa
mov
or
sahf
and
shl
les
mov
pop
leave
aaa
push
in
scas
adc
mov
insl
mov
mov
xor
fwait
and
xchg
loop
jno
or
mov
inc
dec
outsl
xchg
or
nop
cmpb
mov
push
sub
pushf
cmp
sub
loope
pop
add
jmp
fildll
into
addl
push
ficoms
dec
add
scas
sub
adc
ljmp
dec
and
jle
daa
mov
stos
aam
test
add
push
mov
daa
popa
inc
add
add
fcmovu
xchg
fisubrs
and
push
sbb
in
repz
jb
sbb
add
je
inc
fsubrs
ds
cld
leave
xor
jnp
adc
push
test
in
shlb
push
cwtl
and
icebp
mov
xor
icebp
daa
mov
jno
mov
repz
pushl
mov
mov
aas
ds
push
xchg
dec
add
das
xchg
xchg
fdivrs
out
mov
adc
test
pmulhw
in
addr16
aas
pop
std
mov
add
cs
pop
cmpb
push
dec
add
aam
jmp
xor
shlb
icebp
arpl
mov
leave
xor
repnz
or
sbb
and
pop
mov
jg
mov
loope
out
pop
inc
cli
or
add
cli
jbe
pop
and
push
ja
cs
cmpb
add
mov
push
dec
call
out
lods
pop
cmc
andb
lcall
popa
or
leave
outsb
push
add
jg
fbld
or
popf
fwait
pusha
outsb
scas
sbb
popf
push
inc
sarl
xchg
push
nop
lcall
pop
aaa
rcr
or
adc
push
pop
dec
mov
push
xchg
mov
mov
sbbb
mov
add
xchg
jne
or
jnp
mov
adc
mov
dec
mov
xchg
adc
ror
testb
push
jg
lahf
add
push
sahf
add
rol
scas
fwait
push
cltd
pop
push
mov
mov
jbe
and
test
in
inc
jne
je
in
dec
mov
cmp
rorb
or
and
push
enter
and
loopne
xor
jmp
loopne
aas
mov
lahf
sbb
dec
xor
sahf
out
inc
or
stos
and
add
or
jg
sub
bound
ljmp
test
mov
adc
mov
mov
pop
adc
inc
sbb
pop
std
pop
mov
xchg
lods
mov
xor
bound
insb
nop
and
mov
jnp
int
lods
addb
inc
std
fdiv
xor
adc
mov
xor
in
or
mov
inc
push
pop
jle
push
in
iret
adc
call
ja
int3
in
inc
or
lret
cmpsl
cs
outsb
jnp
mov
fwait
or
xchg
mov
bound
and
mov
pusha
outsl
imul
adc
les
mov
mov
int
mov
push
xor
xor
mov
mov
mov
shrl
cmpsl
out
xchg
sti
stos
xor
sbb
ret
je
das
loopne
sub
lds
jg
cli
push
adc
loope
or
gs
push
repnz
mov
inc
pop
aaa
pop
pop
mov
sbb
xchg
ljmp
sbb
pop
and
pushf
or
adcl
jle
or
lock
jle
cmp
adc
cmp
cmpsl
xor
ud2
fistl
subb
sbb
outsl
sbb
jmp
mov
in
cmp
xchg
cli
and
add
sbb
flds
push
fnstenv
ret
mov
imul
ds
cmp
mov
sub
add
jb
mov
and
cmp
cmp
loop
dec
xor
sbb
ret
sti
inc
mov
bound
les
cld
imul
adc
insb
aad
xor
pop
leave
pop
adc
fcmove
testb
xor
adc
xchg
fldln2
hlt
inc
mov
call
push
pop
call
or
aam
lds
out
loope
fcompl
inc
gs
into
in
lods
or
cld
mov
or
lret
mov
shrb
arpl
rclb
dec
dec
loope
movsb
xchg
inc
aas
andl
sahf
data16
addr16
test
andb
pushl
or
scas
mov
cmp
adcb
fwait
and
daa
xchg
or
xchg
cmp
cmpsb
mov
test
xlat
jmp
out
xchg
sbb
subl
push
out
push
push
add
jbe
stos
sub
jns
call
bnd
dec
push
mov
sbb
ljmp
lahf
sbb
cmp
jne
imulb
and
movsl
sti
xchg
or
es
xchg
fildll
adc
pop
sbb
popf
dec
iret
fiaddl
clc
inc
push
mov
and
hlt
push
pop
xchg
leave
rolb
sub
add
lds
lock
cmp
shll
mov
mov
pop
nop
in
int3
mov
nop
movsb
outsl
sbb
hlt
pop
test
ja
pop
lahf
ret
int3
add
idivl
lods
add
pushf
lret
enter
jno
mov
xor
push
jb
shrl
repz
sarl
clc
lret
arpl
fistl
insl
mov
arpl
and
test
cmp
lds
inc
fisubrs
inc
loop
stc
xor
ljmp
hlt
xchg
mov
es
out
in
stos
mov
pop
hlt
lea
rclb
dec
scas
aad
adc
add
mov
and
sti
imul
jo
mov
mov
mov
addl
xor
stc
cwtl
mov
mov
mov
sub
or
xchg
in
inc
mov
mov
dec
fwait
lock
xor
lahf
push
jg
inc
inc
xor
xchg
xor
fldenv
mov
scas
mov
loop
test
and
and
out
push
mov
stc
jns
pop
jns
movsl
shl
push
imull
mov
lods
fcom
mov
addl
mov
pop
jne
popf
adc
int
jl
ljmp
sub
repnz
mov
in
sahf
mov
dec
pop
in
insb
sub
mov
inc
push
pop
jno
sub
or
lret
xor
mov
xchg
pop
mov
lahf
loope
fldcw
imul
lds
cmp
xor
test
mov
xor
addr16
je
daa
mov
sbb
test
sahf
mov
lods
pop
jp
and
inc
xor
out
movsl
sbb
and
mov
sub
test
cwtl
fstpl
adc
pop
mov
adc
push
adc
out
sbb
xor
add
jns
test
nop
mov
xchg
ficoml
incl
aad
jle
adc
jno
or
mov
rorb
cmp
pop
rcr
mov
imul
or
fdivl
sub
sub
push
popa
imul
shl
and
jl
or
out
cmpsl
in
fcompl
shlb
mov
xor
imul
out
xor
dec
js
xchg
or
sub
add
data16
cmp
push
mov
ret
mov
sbb
push
inc
cmp
shlb
inc
inc
sti
arpl
jl
lret
xchg
mov
jg
data16
xlat
add
stos
hlt
insl
iret
arpl
xor
fcompl
inc
adc
jmp
shrb
lods
test
repz
leave
fldl
ffreep
pop
dec
xor
je
dec
push
inc
test
mov
lcall
pop
test
scas
lcall
addb
mov
inc
aaa
js
push
push
pop
in
popf
jge
nop
add
mov
or
or
arpl
sbb
out
mov
mov
pusha
xchg
cmp
jl
mov
sub
inc
jp
inc
pop
aaa
stos
rcl
in
sub
cmp
fxch
jno
stos
jecxz
mov
jl
daa
pop
xchg
jo
push
xorb
mov
add
fxch
push
mov
mov
stos
fldt
cmp
aad
ss
lret
int
loope
xchg
mov
push
roll
xchg
mov
in
fcompl
cwtl
mov
aam
push
pop
mov
shl
mov
jnp
int
test
sbb
aad
popf
xor
cld
xor
push
xlat
jo
ret
loope
cmpsl
pop
jne
or
cmp
lcall
push
fisttpll
shrl
loop
scas
icebp
mov
test
mov
mov
call
cwtl
xchg
out
in
xor
ret
mov
add
loope
faddl
sti
ss
imul
cmp
jp
dec
ficoms
push
imulb
aaa
fisttpll
cmp
sub
sub
pushf
clc
pusha
or
addr16
push
mov
cmp
insb
pop
mov
lret
adc
pop
sahf
ret
test
mov
rcrl
xchg
test
imul
int3
add
stos
mov
xor
cli
test
bound
inc
cmp
dec
fimuls
fildll
and
lods
jbe
cmc
int3
std
mov
mull
xchg
mov
stc
cmpsl
testb
xchg
jp
daa
cld
pop
test
push
fstps
jg
cmp
push
js
dec
fmul
popa
jno
inc
in
ret
mov
mov
sbb
cmp
push
cmp
add
cmpsb
bound
xor
insb
movsl
or
mov
and
in
js
adc
popa
push
out
mov
cmp
cmp
fsubs
stc
cmp
test
loop
push
cmp
adc
cmc
scas
out
pop
into
dec
stos
sbb
push
and
xor
xor
cmp
int
push
mov
loopne
dec
sub
movsb
pop
xor
clc
jno
or
mov
mov
jmp
sbb
pop
lds
push
es
xchg
add
test
mov
lock
inc
jbe
rcll
add
daa
push
fwait
hlt
shll
jl
sub
icebp
xor
lret
lods
mov
sbb
and
mov
pop
cmpl
sub
mov
rorb
mov
faddl
push
mov
cmp
loopne
pop
and
and
pushf
sbb
stos
stos
std
sti
roll
sub
xchg
icebp
sub
fnstenv
popa
ja
or
dec
js,pt
mov
add
push
in
cmp
jo
roll
sti
sarb
adcl
fldl
in
in
jnp
xor
adc
loopne
jecxz
decl
ds
pop
fbld
sbb
dec
out
dec
inc
inc
push
addr16
shr
mov
lcall
inc
sahf
fdivp
mov
push
push
add
dec
sub
xor
xchg
aad
movsb
and
cmc
outsb
jns
add
lds
push
fsubr
pushf
inc
aam
inc
jge
lahf
ljmp
shll
fadd
mov
xor
sbb
cld
add
add
sbb
outsl
or
sbb
jmp
fisttps
xchg
inc
cwtl
fldl
repz
repz
mov
iret
arpl
push
inc
xor
iret
mov
xchg
and
leave
add
or
and
stos
test
fbld
lds
dec
adc
test
std
mov
pop
add
sahf
inc
inc
mov
bound
loope
jg
jmp
jae
xchg
dec
mov
fcoml
add
push
fwait
je
loop
pop
or
push
add
arpl
popa
daa
rcll
push
stc
add
push
stos
je
xchg
lahf
outsb
xor
neg
mov
xchg
jl
cmp
xor
gs
data16
in
mov
mov
add
lock
aam
or
enter
jecxz
in
lock
push
mov
mov
mov
in
decl
push
stc
rclb
loop
inc
test
gs
cs
or
daa
mov
xchg
cmp
push
mov
subb
imulb
je
pop
push
out
mov
stos
js
fidivs
push
add
mov
push
cmp
test
and
cmp
mov
js
shll
nop
sub
add
mov
xchg
mov
fisubl
mov
or
sti
popa
test
pop
mov
xor
push
call
and
fidivrl
push
add
cmp
push
mov
mov
sbb
inc
sbb
rorl
dec
les
mov
icebp
lret
xchg
or
rclb
das
sbb
test
add
scas
jg
add
lods
pop
jg
cmc
int3
loope
mov
xchg
pop
ljmp
xor
lock
pop
in
adc
jle
cmp
sbb
dec
jge
mov
insb
xchg
int3
lahf
push
cmp
xor
int
aaa
sti
dec
mov
xor
xchg
scas
movsl
mov
stc
test
add
das
loopne
ja
fistl
push
push
test
pop
scas
or
insb
or
movsl
mov
popf
adc
stos
pop
add
mov
pop
lcall
mov
jb
xor
mov
mov
adc
xor
outsb
mov
push
jnp
sbb
jle
out
cmpsl
or
movsb
sub
inc
adc
adc
cmp
les
fxch
ds
cmpsl
sbb
loopne
cmc
sub
push
js,pn
mov
stos
mov
movsb
cmp
pop
sub
mov
mov
mov
xchg
icebp
push
fwait
dec
scas
test
xor
inc
fisttpll
scas
sbb
xor
pop
pop
pushf
lret
pop
dec
hlt
js
std
or
xor
push
push
push
mov
sarb
xchg
add
xchg
or
push
pop
jnp
es
je
jle
push
sbb
xchg
jmp
adc
not
icebp
scas
jge,pt
sbb
and
dec
sahf
shlb
cmp
pop
mov
lea
jns
xor
cwtl
pop
fwait
popa
insb
lahf
mov
mov
mov
lret
rorb
inc
in
xchg
mov
int
inc
mov
into
push
jns
stc
es
jne
ja
fnstcw
ret
dec
cmp
pop
mov
jb
mov
mov
notl
jp
pop
mov
adc
ror
xchg
stos
push
add
jmp
jg
insl
aam
cmp
lret
fcos
es
or
fstps
stos
mov
jl
ds
jnp
add
mov
stos
js
adcl
ret
scas
out
or
sbb
dec
fwait
jb
in
in
sbb
sub
pop
lds
enter
sub
mov
push
and
jb
nop
or
mov
push
stos
mov
ss
jl
push
and
sbb
sub
fmuls
ficomps
ja
repnz
inc
or
adc
jge
or
mov
in
sub
sbb
sahf
jae
jne
sbb
push
daa
lock
shll
xor
cld
gs
or
mov
mov
add
lahf
filds
in
fsubrs
ljmp
adc
aad
clc
adc
mov
outsb
mov
in
mov
push
sub
inc
xor
pop
ret
inc
jecxz
jecxz
xchg
jle
push
cmp
jo
push
aaa
sahf
jns
sarb
nop
sahf
or
shl
bound
mov
movsb
inc
and
xchg
inc
out
nop
xor
mov
in
fwait
cmp
cwtl
push
in
subl
add
ds
stos
adc
jg
dec
pop
add
cmp
clc
aad
shlb
test
pop
mov
adc
cmp
aam
mov
cld
sub
outsb
fisttps
jne
mov
outsb
xor
push
inc
cltd
sbb
xabort
ret
popf
xlat
mov
mov
cmpsb
out
cmp
pop
push
lea
outsl
lea
in
mov
adc
out
sub
jmp
fildl
rep
or
pop
icebp
movsb
mov
fisubrs
mov
aaa
shl
xlat
xchg
mov
inc
int
ljmp
in
scas
iret
sarb
loop
imul
adc
arpl
mov
test
test
mov
push
push
aas
je
je
imul
jbe
mov
xchg
bt
mov
or
arpl
inc
inc
mov
jg
sti
mov
fadds
hlt
ljmp
xchg
and
je
adc
jl
hlt
dec
xchg
ljmp
sbb
adc
jge
addr16
jb
jmp
mov
ljmp
into
jb
push
cmp
test
jge
push
mov
lods
and
or
mov
out
std
jmp
adc
rclb
lods
and
insb
in
adcl
lock
lret
sbb
push
or
or
inc
pxor
in
in
adc
mov
adc
daa
inc
popf
fs
mov
and
clc
xor
mov
cmp
mov
xor
xchg
in
sarl
lea
add
pushf
je
mov
adc
fnsave
leave
fistps
jno
fbstp
push
mov
dec
in
cmc
fisttps
scas
pop
ret
out
les
pop
call
ret
outsl
xchg
xor
dec
inc
push
sahf
stos
leave
loopne
lahf
jnp
shlb
mov
sub
inc
outsb
fisttps
rcl
add
imul
sbb
jl
mov
jle
xor
sub
lret
dec
test
lahf
setns
mov
cmpsb
scas
fldcw
sbb
and
or
aas
mov
mov
out
add
adc
inc
gs
mov
lea
add
aaa
sbb
movsl
loop
jae
pop
int3
movsl
test
loope
and
out
out
in
fadds
adc
inc
test
loopne
sub
cmp
lock
fdivr
loopne
jp
aaa
ljmp
cmp
imul
mov
lea
jb
adc
add
imul
push
pushf
cmp
sahf
adc
stos
testb
push
je
out
pop
or
inc
in
mov
xchg
ss
cmpl
inc
xchg
xchg
insl
ss
mov
test
test
movsl
xchg
mov
in
inc
sbb
lea
cmp
pop
push
xor
xor
psrlw
lahf
adc
sarl
cmpl
mov
mov
push
cmp
pop
es
dec
rcrl
jge
stc
xlat
xchg
ds
mov
push
sub
or
repnz
or
pop
shlb
adc
jne
and
cli
jecxz
mov
mov
mov
mov
xor
or
add
fdivs
lea
push
or
jo
push
int3
xchg
shl
aaa
or
int
cmp
sub
or
jno
sbb
pop
mov
das
jns
lcall
stos
int
icebp
std
sbbl
mov
jmp
dec
sahf
cwtl
repnz
loopne
ds
mov
fistps
in
xchg
mov
testl
add
push
ljmp
add
sub
xlat
out
loop
jns
test
mov
shrl
jecxz
dec
mov
and
xchg
out
sub
test
lret
and
adc
xchg
add
push
je
rol
cs
pop
pop
xchg
jp
mov
pop
cmpsb
inc
inc
iret
or
lret
adc
fmuls
mov
jge
mov
jne
scas
or
subl
sub
and
xor
fdivrs
mov
lods
ffreep
mov
or
cmpsb
mov
mov
push
or
in
and
push
or
push
dec
leave
movsb
or
fsubl
cs
sub
out
and
mov
mov
repnz
stos
ljmp
lea
stos
aas
xchg
shlb
mov
lea
xchg
dec
iret
iret
iret
xchg
inc
insl
fimuls
test
jmp
pop
xlat
cmc
add
or
notl
push
push
xor
mov
sbb
ret
sub
mov
dec
sbb
cmp
push
and
stos
push
pusha
in
mov
mov
dec
out
inc
int
xor
sub
pop
adc
ret
inc
pop
add
lods
pop
adc
popf
cwtl
pop
inc
sbb
cld
mov
ds
cmp
repnz
icebp
sbb
mov
pop
fidivrl
jg
adc
lahf
push
push
and
or
mov
aaa
and
ds
inc
ljmp
mov
addr16
lret
xor
adc
mov
jae
es
daa
sub
outsb
cmp
and
in
mov
lds
inc
rorl
out
mov
mov
sahf
stos
iret
xchg
and
hlt
jbe
es
pop
stos
loopne
mov
jnp
cli
stc
dec
imul
imul
cmp
cmp
das
xchg
pop
leave
mov
push
pusha
mov
sub
or
pop
outsb
leave
cs
ljmp
daa
add
adc
xchg
mov
and
iret
sub
inc
outsb
mov
xchg
sub
mov
movsl
and
and
jle
arpl
int
jns
movl
and
xorl
cmp
mov
ljmp
xchg
addr16
push
mov
scas
data16
dec
nop
dec
cmp
stos
leave
fisttpl
adc
cli
movl
in
cmp
sbb
repnz
add
outsb
es
xchg
int3
test
xor
sbb
mov
adc
subl
sbb
scas
shll
mov
add
arpl
xchg
cmp
call
mov
and
insl
dec
fwait
pop
scas
iret
push
lock
xchg
xor
pop
bound
xchg
call
add
into
rcr
mov
sti
jle
push
xchg
aas
lods
mov
inc
and
rolb
push
addl
sub
dec
mov
dec
push
pop
shlb
in
sub
and
daa
out
xor
into
popaw
sbb
add
mov
movsb
sub
pop
sbb
xchg
incb
dec
xchg
sti
gs
scas
mov
jo
xor
mov
rcrb
into
mov
jbe
inc
mov
in
negb
das
ljmp
sub
in
lods
cmp
fs
repz
pop
repz
xorb
cmp
pop
jne
sti
mov
movsl
jo
mov
xchg
adc
or
xchg
mov
call
fists
add
fnsave
sbb
and
clc
xlat
shll
mov
push
push
je
cwtl
cmp
mov
ss
mov
sub
mov
pusha
add
popa
int
push
sbb
xchg
insl
mov
jns
daa
mov
mov
sub
jnp
mov
hlt
add
mov
cmp
ficompl
pop
xor
mov
daa
xor
rolb
inc
mov
dec
adc
int
std
stos
sub
cwtl
push
xchg
mov
lahf
data16
sti
movsl
loop
loop
dec
lret
xchg
jg
pop
enter
call
sti
and
dec
aad
test
pop
fsin
mov
test
sahf
mov
mov
xchg
mov
pop
arpl
lods
insb
and
negl
sbb
xor
subl
pop
adc
sbb
sar
xor
jp
out
mov
dec
or
pushf
out
mov
sbb
jae
lret
dec
test
cmp
andb
cmp
push
ret
lahf
setnp
std
divb
xorb
pop
into
outsb
nop
cmp
adc
inc
adc
jbe
pop
and
nop
jae
cmp
mov
imul
add
jno
push
mov
popf
stc
jne
or
fistl
int
popl
ret
cmp
lds
arpl
out
xor
imul
adc
pop
and
test
lods
ja
xor
loopne
fld
cmp
and
and
and
cli
jns
jb
sbb
fsts
faddl
loopne
push
cmp
push
or
cli
nop
or
xor
mov
js
sahf
mov
sbb
movsl
xor
mov
out
iret
shrl
xor
sub
rorl
shrb
outsl
popa
fwait
jns
adc
rorl
loop
mov
xlat
jbe
popf
xchg
loope
mov
push
repnz
test
repnz
fmuls
leave
mov
jmp
push
out
xor
jb
add
push
xor
ret
mov
call
es
cmp
push
mov
addb
xchg
mov
cmp
cmp
pop
popa
movb
pop
xor
cwtl
icebp
and
insb
test
adc
pop
fwait
xor
or
subb
shrl
pop
push
jnp
fcmovbe
sbb
out
cmpl
pusha
lcall
add
loope
enter
or
lret
test
lcall
cmp
cmpsl
mov
jle
enter
jnp
nop
mov
or
movsl
movsl
arpl
daa
dec
mov
cltd
sbb
cmp
push
dec
lret
popf
mov
out
and
xchg
arpl
call
pop
pop
ficoms
or
pmaddwd
sbb
sti
mov
lahf
out
ret
xor
pop
iret
lds
dec
inc
adc
xchg
inc
jb
bound
push
push
and
adc
inc
push
mov
push
test
icebp
push
call
jae
inc
or
and
out
adc
sub
and
rcll
ret
ljmp
inc
pop
sbb
mov
jmp
mov
sar
iret
inc
inc
fs
das
int3
add
stc
xlat
push
popa
fdivrp
jo
data16
out
adc
outsb
popa
enter
mov
fmull
popf
sub
insl
hlt
jp
sub
or
jle
add
loop
lods
mov
inc
or
push
add
shl
mov
or
pop
cmc
push
mov
int3
cli
lcall
mov
andl
dec
ret
jnp
dec
vandpd
and
icebp
fwait
in
aam
add
xlat
sbb
arpl
lret
push
fimull
jo,pn
or
jo
xor
sbb
sub
jae
push
nop
jae
arpl
dec
scas
arpl
push
cmp
shll
cmp
sti
xchg
sbb
mov
movsl
mov
and
and
fcoms
popa
mov
mov
nop
jbe
lods
les
xchg
or
push
and
pop
mov
pop
add
jne
or
stos
iret
mov
push
xchg
push
subl
mov
iret
sbb
cmpsb
jae
xchg
xchg
mov
mov
xchg
nop
push
test
or
push
cmc
mov
adc
insb
mov
xchg
out
inc
stos
add
pop
lods
push
addr16
sbb
inc
dec
push
cmpb
jne
inc
mov
adc
dec
out
andb
fmull
lea
xor
adc
inc
loop
xor
add
dec
ret
into
and
pop
orl
std
dec
mov
sbb
sahf
incl
stos
xor
inc
out
call
xor
sub
addr16
xor
movsb
aaa
movsb
and
cmp
jp
cmp
xchg
cmp
repz
push
aaa
add
je
scas
xor
movsb
mov
and
aad
inc
fwait
insl
in
lahf
sbb
popf
stos
mov
int3
sub
clc
mov
fbld
pop
sbb
mov
add
cmp
push
leave
sbb
push
jo
inc
mov
sub
stc
pop
or
lcall
stos
imul
mov
add
in
subb
xor
mov
sub
ret
add
xchg
std
cmp
or
add
jne
cmc
mov
inc
xlat
xor
xchg
fincstp
sub
es
pop
push
cmpsl
mov
fstps
mov
or
push
sbb
shlb
mov
jno
add
fwait
pop
sbb
jle
cmp
fs
jbe
stos
mov
into
rclb
outsb
xor
xchg
lcall
and
push
jecxz
fs
or
sbb
fcomps
mov
pop
adc
dec
insb
das
pop
call
xchg
add
push
xor
xor
inc
enter
sub
xor
out
adc
mov
cmp
ret
mov
ficoml
scas
js
xchg
adc
dec
shlb
jmp
and
in
cli
sbb
cmc
lret
cmp
icebp
jge
repnz
push
mov
xchg
push
add
jecxz
repz
inc
bsr
sub
mov
jecxz
aad
jne
mov
xacquire
xchg
push
data16
loope
mov
aas
push
in
in
pop
sbb
les
shlb
mov
divl
pop
cli
mov
mov
iret
push
test
lods
loope
fsubs
fildl
or
cmpsl
out
aas
sbbb
stc
push
push
sub
out
mov
dec
stc
in
pop
insl
shll
ror
fsub
cmpsb
add
js
hlt
mov
sub
xor
fcoml
mov
inc
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
int
xor
or
and
fndisi(8087
sub
lock
in
inc
xor
pop
pop
shll
sub
test
cli
movsl
sub
into
xor
pop
movsl
outsb
cmp
xchg
sub
stos
lock
movsb
fbstp
and
pop
or
and
xchg
dec
mov
aad
cld
and
adc
popf
inc
lds
lea
inc
dec
inc
push
pushf
sub
sbb
push
xor
mov
addr16
shrl
ja
inc
sub
pop
and
sbb
mov
fcoml
addr16
pop
and
sub
xlat
push
jb
stos
add
mov
xchg
lods
mov
pop
sub
and
push
addr16
push
shll
imul
push
jmp
psrlq
push
lahf
repz
pop
xchg
push
cmp
adc
and
dec
adc
mov
cmp
mov
dec
fists
push
stos
into
cmp
test
shlb
out
rcr
dec
lret
sahf
lea
or
xchg
pop
push
bound
mov
adcb
mov
mul
test
inc
fisubrl
bound
mov
outsl
xor
xchg
push
test
inc
imul
sbbb
xchg
lahf
cmpsl
cs
ljmp
pop
jns
insl
shll
shl
xchg
jecxz
cmc
cld
cs
mov
lock
dec
lcall
call
mov
jp
pushf
add
mov
stos
or
dec
cmp
xlat
sbb
jne
cmc
divl
and
xchg
out
pop
mov
jb
dec
ja
cli
roll
sbb
cmp
rolb
sahf
insb
cwtl
push
mov
mov
daa
pushf
test
loop
scas
cmp
iret
stos
cmc
add
loop
divl
iret
pop
push
jle
outsl
add
pop
into
fdivrs
xchg
insl
test
push
dec
lret
mov
imul
adcb
aam
insb
pushf
mov
call
into
shr
mov
lahf
lods
sub
xchg
fs
std
in
cltd
and
mov
lcall
mov
test
adc
push
fs
addr16
in
pop
add
flds
jo
dec
push
scas
xor
iret
roll
jmp
decb
rolb
jb
stos
bound
nop
repnz
int3
add
int
sub
inc
cmp
mov
loop
outsb
xor
daa
cltd
je
mov
sbb
shlb
sarb
scas
cli
adc
adc
aas
xor
sahf
or
fs
jnp
fcomps
push
pop
popa
inc
out
call
add
inc
test
mov
lret
mov
fisttpll
aaa
mov
loop
sbb
movsb
adcb
ret
std
cli
jmp
push
push
rcrl
faddp
pop
or
sub
movsb
or
pop
std
mov
test
xchg
sub
shrl
pop
push
jo
daa
push
test
test
mov
or
mov
out
lds
dec
aad
jb
adc
repz
test
stc
pop
repnz
icebp
addr16
mov
mov
inc
int
mov
mov
mov
push
cmpsb
push
test
decb
push
cwtl
ja
push
popf
pop
lahf
pop
in
in
loop
outsb
push
into
adc
rorb
loope
psrad
sbb
jns
js
xor
adc
and
out
into
scas
cmp
les
pop
xor
add
sub
mov
inc
lret
fmull
pop
repz
call
cmp
mov
std
sahf
cmp
pop
insl
pcmpgtd
mov
mov
pop
sub
jae
and
xchg
push
pop
xchg
lret
push
cmp
sub
inc
xchg
lret
xchg
cld
fnsave
mov
into
pop
call
pop
mov
pop
mov
data16
push
int
in
lock
hlt
xlat
data16
mov
repnz
fucomi
inc
push
and
ret
mov
push
or
dec
xor
nop
and
jbe
movsb
call
into
scas
or
mov
mov
in
jo
mov
xchg
pushf
mov
cmpsl
sub
adc
in
dec
outsl
cmpsl
adc
pop
jecxz
sub
into
leave
test
lock
int
jns
sahf
add
inc
adc
mov
testl
inc
cmpsb
fimull
pop
or
stc
out
enter
mov
test
test
or
insl
mov
xorb
lret
fisttps
and
push
out
or
jnp
adc
xchg
out
aam
dec
mov
cmp
cmp
fiadds
hlt
sbb
outsb
xor
add
push
jno
dec
push
dec
out
int3
shrl
sbb
add
neg
inc
adc
lcall
pop
idivl
push
cmp
cld
fnsave
sub
sbb
imul
sub
inc
or
mov
das
mov
dec
lods
subl
and
movsl
imul
movsl
adc
fists
arpl
call
sub
push
mov
xchg
lods
jno
pusha
mov
jae
add
pushf
mov
outsb
scas
sahf
pop
sub
adc
adc
add
insl
xchg
nop
insl
xorl
repnz
adc
scas
call
inc
sahf
fimull
decl
mov
in
and
dec
in
push
rorl
and
call
xchg
cmp
popf
les
cmp
xlat
or
imul
insb
xlat
pop
popf
jne,pt
xchg
xor
inc
shlb
push
loop
mov
adcb
test
mov
jle
imul
loope
in
sub
mov
ret
add
xchg
mov
stos
mov
insb
sarb
mov
iret
sbb
dec
adc
lea
mov
push
adc
push
sti
xchg
push
gs
sub
mov
pop
mov
pop
jp
jg
rclb
outsb
xchg
xor
sti
fwait
test
data16
sub
xlat
in
push
lock
lea
push
adc
nop
lcall
cmpsb
sbb
gs
mov
lret
lock
push
div
sub
mov
icebp
dec
ret
cmp
mov
popa
mov
sub
adc
cmp
mov
sarb
push
xchg
push
mov
andb
dec
push
stos
mov
pop
sub
fisubs
xor
sarb
out
add
insl
movl
lods
jecxz
dec
lock
pop
cmc
jo
inc
add
aam
popl
adc
nop
adc
ret
inc
pop
nop
movsl
pop
jne
lods
sub
jle
pop
out
clc
outsb
pop
mov
std
add
lret
adc
sahf
jae
lret
or
adc
jns
jge
aam
cs
inc
inc
in
fs
mov
jb
jns
push
sub
call
sbb
and
ja
popa
rcr
adc
shlb
subb
mov
cmp
dec
test
jecxz
hlt
hlt
icebp
mov
xlat
call
loopne
adcb
mov
dec
push
mov
out
add
iret
ret
mov
out
inc
nop
cmp
sub
cltd
sarb
adc
pop
fnstcw
jnp
pop
les
test
gs
loop
adc
jbe
lret
lods
pop
xor
and
sub
jne
ljmp
mov
scas
loopne
in
sbbl
loopne
mov
jne
orl
add
inc
push
add
push
xor
je
popf
fidivl
pop
xchg
xor
mov
xchg
cltd
xchg
inc
add
prefetcht2
jge
dec
sbb
fcomip
xor
jge
leave
clc
mov
les
sti
pop
sbb
andb
cwtl
xor
cmp
mov
dec
cmpsl
add
icebp
addr16
in
fldl
add
dec
jbe
scas
xchg
loope
adc
addr16
and
in
xchg
in
lcall
add
mov
dec
mov
add
mov
gs
mov
or
addl
orl
aaa
jno
shrb
je
nop
xchg
push
sub
mov
push
shll
or
sbb
mov
iret
mov
gs
les
insb
bt
xchg
fldl
std
add
mov
push
jb
inc
or
fidivs
cmpsl
xchg
shll
imull
add
cmp
mov
xchg
imul
ret
add
fcmovb
test
mov
stos
adc
jmp
adc
cmp
xor
add
lea
xorl
lcall
mov
add
push
outsl
sub
mov
nop
add
fs
fwait
lret
mov
clc
mov
fisttpl
sarb
in
push
fsubrs
into
clc
adc
mov
clc
cmp
es
or
adc
dec
jecxz
or
or
xchg
pop
push
mov
xchg
lcall
roll
aaa
inc
jge
cltd
jmp
sub
add
loopne
ret
sub
daa
movsl
dec
jae
in
fstps
inc
pop
ror
jnp
lret
xor
cld
imul
imul
add
addr16
sub
pop
cmp
dec
daa
in
outsl
loop
idivl
cli
xlat
mov
add
hlt
int3
mov
or
jmp
jg
xchg
add
adc
das
ss
popa
mov
xchg
ds
loope
xchg
incl
cmp
cwtl
test
or
std
cmp
sti
sbb
adc
add
push
lds
outsl
xchg
or
popf
into
cmp
add
insl
popf
cli
and
dec
sub
ja
lret
dec
adcb
jae
mov
xor
ljmp
testb
daa
iret
insl
addb
xor
in
in
add
imul
pop
stos
inc
xchg
xchg
adc
sbb
lock
add
push
iret
xor
sbb
std
popf
stos
pushf
ja
es
lds
sar
fldz
clc
or
mov
push
test
inc
ficomps
sbbb
sbb
stc
adc
push
lahf
inc
xchg
push
adc
repz
shl
sbb
stos
lods
mov
inc
add
cmp
xor
jmp
mov
lret
pop
mov
pop
jmp
rcrb
les
cmp
jo
fildl
sbb
jo
adc
repz
adc
rclb
inc
loop
sbb
icebp
xchg
lock
and
scas
push
test
sub
loop
push
ret
and
push
out
jl
sub
sub
mov
pusha
fsubl
out
sbb
mov
sarb
adc
jnp
pop
jle
add
iret
add
fnstcw
xor
cmp
mov
jle
lea
and
mov
pop
inc
enter
movsl
mov
mov
xchg
jno
inc
aam
pop
jne
mov
ja
sub
arpl
and
stos
popa
jo
pop
stos
gs
mov
jecxz
xchg
ret
sbb
addr16
mov
push
xor
test
loopne
add
add
arpl
jmp
sub
or
mov
xor
add
xchg
icebp
xchg
scas
xchg
dec
inc
jl
jl
sub
rol
jp
sub
pushf
or
mov
dec
cmpsb
adc
arpl
in
std
addb
sub
in
mov
ds
jnp
cltd
inc
in
loope
mov
jmp
popa
pop
fbld
pop
mov
xor
jle
lds
dec
ret
jle
cmpsb
sub
or
mov
lahf
or
sub
and
mov
cli
sbb
jecxz
ljmp
stc
and
adcb
push
in
mov
rcrb
push
dec
pop
loopne
lds
dec
push
mov
mov
mov
cmp
inc
xchg
outsl
mov
in
xchg
xchg
inc
push
cmpsb
mov
inc
aas
icebp
out
xchg
and
adc
sub
jbe
mov
pushl
flds
out
mov
jnp
cmp
inc
dec
mov
jns
bnd
cmp
mov
das
popa
cmp
ret
out
aaa
fcmovne
dec
ja
cbtw
enter
addb
push
test
dec
sbb
pop
mov
test
adc
sub
testl
jp
inc
mov
mov
jbe
push
in
fldt
test
push
cs
mov
sti
jne
cmp
push
add
jno
cli
outsl
xchg
cwtl
aam
inc
push
shr
fdiv
fsubr
xlat
fstl
dec
std
push
imul
and
cld
xchg
lock
ficomps
push
data16
sbb
subl
cli
popa
dec
xchg
jns
sbb
aas
rolb
mov
loop
cmp
cmp
fwait
pop
push
cmp
xchg
movsb
mov
xlat
pop
das
push
aam
add
nop
mov
and
push
and
lret
add
pop
lret
clc
sahf
push
mov
and
movsl
inc
jb
xchg
std
xchg
mov
mov
addr16
pop
mov
xchg
push
aaa
mov
les
pop
mov
inc
loopne
push
pop
adcb
dec
jne
mov
sti
inc
in
rol
aaa
enter
sbb
push
fwait
das
sub
xchg
andl
jbe
xchg
shll
sub
repnz
call
dec
xchg
aam
push
push
inc
xor
xor
lods
jae
outsb
or
in
xchg
aas
mov
mov
xor
xor
jl
add
in
loope
loop
add
test
rcrb
dec
jl
xlat
mov
lods
dec
mov
inc
repz
jb
inc
pushf
sub
add
popa
in
ss
cs
sbbb
or
sub
mov
jb
push
add
add
aaa
pop
in
adc
xor
mov
outsl
and
add
or
popa
mov
daa
repz
jnp
add
ficoml
arpl
std
sbb
dec
cmp
sbb
push
dec
out
mov
push
cltd
pop
cmpsb
std
and
imul
aas
jne
sar
or
mov
or
xchg
les
jno
mov
fs
xchg
stos
test
lods
movsl
push
shrb
add
and
push
push
insb
iret
test
mov
sbb
mov
pop
ret
out
mov
dec
lret
inc
out
cmp
xchg
out
out
call
jne
insb
ficompl
jnp
xor
and
inc
scas
dec
rol
jbe
pop
jl
pop
lret
outsl
mov
fistpll
scas
fdivrl
aas
popa
sbb
sti
icebp
mov
push
test
sbb
stos
testb
dec
jl
movsl
dec
insl
test
mov
push
sbb
test
test
mov
pop
aam
and
mov
push
in
jge
ss
mov
enter
and
inc
pop
adc
leave
divb
popa
arpl
shll
fisttpll
xor
jnp
add
inc
dec
sbb
add
or
mov
mov
or
notl
loopne
mov
scas
out
js
fcomps
cmp
mov
add
xor
dec
jnp
sarb
test
dec
movsb
xor
pop
es
lods
jp
mov
xchg
mov
dec
jmp
pop
movsb
popf
adc
mov
push
mov
stos
inc
mov
ss
mov
cmp
les
mov
jns
jp
cmp
dec
mov
xchg
sbb
dec
jne
les
push
movsb
jo
sub
daa
insb
add
mov
adc
js
testl
movntq
scas
xchg
sarb
cmpsb
xorb
mov
mov
ds
hlt
std
lahf
xor
iret
lahf
sahf
ss
add
loop
inc
sti
xor
mov
jg
adc
lcall
jbe
fcompl
aad
jo
pop
mov
daa
lock
cld
sub
sub
pop
lret
dec
out
repz
test
sbb
lcall
adc
dec
mov
adc
inc
xchg
out
sbb
test
mov
dec
push
lcall
nop
cmp
les
pop
pop
pusha
int
add
jge
dec
mov
jmp
pop
pop
pusha
jns
push
mov
xlat
cmp
cltd
iret
ror
not
push
pop
lock
and
fisttpl
out
sub
hlt
xchg
popl
or
gs
xchg
movsb
xor
rcrb
and
rorl
cmp
pop
sub
cltd
sbb
je
leave
lods
mov
jae
pusha
push
dec
mov
xchg
jno
fstl
push
enter
in
das
jb
sbb
jb
cwtl
pop
jb
movsb
jno
xor
xlat
fnstsw
cwtl
sub
test
aam
mov
inc
jmp
pop
jl
jge
mov
imul
jns
mov
into
and
fwait
lret
mov
mov
notl
xor
and
push
sub
fnstcw
inc
fimull
pop
jb
and
iret
fcom
jne
repz
pop
inc
and
imul
pop
add
sbb
xor
xchg
mov
mov
push
test
mov
shll
lea
dec
je
adcb
xchg
sub
sub
mov
mov
sahf
xchg
shl
jns
adc
push
dec
fisubs
int3
mov
sbb
mov
add
xchg
push
xchg
and
outsl
lods
xchg
shl
or
cld
ss
mov
lock
jne
jae
adc
mov
mov
dec
dec
ljmp
test
arpl
push
movaps
loope
rclb
lcall
enter
fsub
jbe
xchg
loope
push
aas
xchg
pop
scas
jmp
adc
sahf
sbb
loopne
xchg
inc
add
sub
sbb
sbb
insb
add
call
and
lods
xlat
std
ss
scas
iret
out
cltd
mov
xchg
shl
sub
and
loope
cmp
adc
jns
jmp
pop
mov
data16
jnp
lcall
push
jae
fucom
cmp
in
push
mov
pop
bound
sbb
mov
test
push
daa
and
sbb
aam
dec
pop
dec
inc
xchg
imul
push
jl
or
cmpsl
in
mov
icebp
outsb
mov
leave
push
xchg
sbb
adc
inc
fsubrp
rcll
xor
inc
stos
jae
inc
inc
hlt
ret
inc
fs
aas
xchg
out
sub
jmp
gs
mov
stc
cld
mov
outsb
push
loop
out
push
cmp
push
cmc
sbb
pop
and
dec
or
jl
dec
dec
test
aam
stc
xor
xchg
loop
xchg
mov
add
cmp
mov
out
sahf
lock
cltd
cmp
les
and
cltd
inc
cmpsb
mov
mov
sub
cmpsl
or
dec
inc
xchg
or
jecxz
mov
and
jbe
push
xchg
insl
insb
mov
push
imul
sbb
and
inc
push
loope
les
icebp
arpl
out
mov
leave
pop
insb
lock
pop
inc
shlb
push
ja
mov
repz
xchg
in
push
mov
mov
inc
dec
xchg
fdivs
lea
jbe
sbb
pop
xor
or
pop
xor
xor
bswap
mov
mov
stos
popf
cmp
mov
mov
add
repz
lods
xchg
push
adc
jmp
stc
mov
mov
dec
jle
sub
imul
add
sub
je
insl
adc
jb
mov
rol
lcall
sbb
add
data16
in
insb
int
cmp
jge
outsb
mov
cmpsb
mov
dec
iret
lret
and
mov
sti
mov
cmpsb
jns
fsubr
xchg
insb
push
cmp
inc
out
xor
jno
and
and
ret
jle
pop
leave
or
xor
mov
ss
push
mov
popa
icebp
lock
repz
out
jge
adc
or
stc
loop
pop
aad
adc
cmp
pop
outsl
test
sub
lds
push
adcb
mov
lcall
int
shr
iret
push
aaa
adc
std
cwtl
vpslld
dec
cmp
dec
mov
mov
sbb
insb
xor
scas
mov
xor
mov
xor
pop
cmp
adc
iret
pop
mov
mov
insb
or
xchg
jb
in
movsl
cmp
repnz
enter
into
cmp
pop
jmp
sbb
aas
xchg
ret
aad
sub
ja
and
ljmp
rorb
test
pop
movntq
dec
mov
stos
data16
mov
int
add
test
pushf
adc
adc
mov
outsl
sub
int3
inc
insl
push
push
cld
loop
or
adc
sahf
test
mov
loop
xchg
lock
and
xchg
inc
push
pusha
sub
enter
test
scas
aas
mov
pop
xchg
dec
jle
in
lret
inc
dec
push
mov
cli
xchg
cmp
movsl
add
or
sbb
iret
cmp
mov
jecxz
fiadds
mov
shll
sbb
inc
lock
xlat
dec
shrb
xchg
mov
hlt
or
sub
imul
sbb
ja
inc
pop
fwait
in
cmpsl
test
sbb
mov
shlb
xchg
jno
fcmovu
mov
adc
dec
pop
mov
into
lea
fwait
orl
mov
outsl
shl
push
hlt
lods
xchg
pop
mov
test
fmull
xchg
push
dec
inc
ljmp
jns
jge
loop
orb
aam
jb
in
loop
cmp
push
ret
and
movsb
bndldx
xchg
and
loop
das
fisttpl
pop
in
out
mov
popf
mov
jl
add
push
mov
or
lock
fbld
fldl
popf
sar
inc
dec
mov
leave
mov
xchg
push
lock
fwait
pop
fwait
movsl
xor
mov
xor
test
cmp
or
adc
sbb
and
xor
ljmp
inc
test
fisubl
mov
std
push
enter
dec
xchg
jno
or
out
lods
sahf
aaa
sbb
lret
adc
jp
or
push
shr
sub
jae
rorl
push
loopne
sahf
adc
mov
shrl
xchg
test
dec
mov
adc
out
imul
test
retw
adc
or
out
xor
dec
inc
add
xor
sub
xchg
adc
fs
shl
fdivrs
add
imul
mov
xchg
jl
inc
lods
stos
inc
dec
dec
sti
mov
sbb
xor
lahf
scas
mov
ret
flds
scas
mov
mov
add
adc
mov
test
jmp
cmp
pusha
adc
aam
and
out
xorb
pushf
les
push
negb
mov
icebp
or
lcall
in
int
push
cmp
shl
xor
les
mov
and
mov
push
mov
cs
movsb
cmc
mov
into
jb
pop
mov
dec
mov
inc
push
dec
icebp
aaa
testb
rcrb
repnz
or
aas
fisttpll
adc
fs
in
adc
adcl
sub
inc
aam
add
add
insb
sbb
xchg
je
xchg
ja
int
mov
hlt
jne
stc
jnp
jo
neg
xor
movsb
filds
orl
ljmp
ss
xor
pop
mov
out
arpl
cmp
push
out
mov
cmp
fsubs
xchg
push
jno
dec
add
dec
mov
stc
addr16
xchg
jno
xor
jp
or
sahf
stos
dec
fsubl
inc
lcall
mov
mov
and
test
push
gs
mull
fisttpll
and
mov
imul
or
das
divl
cld
je
pop
jae
jg
or
pop
pop
mov
jle
loopne
and
dec
insb
ret
mov
pop
xchg
aaa
stos
addb
std
les
push
movsl
push
inc
bound
fcoms
mov
outsb
mov
mov
mov
inc
mov
xchg
shll
sbb
adc
xchg
adc
push
sub
cmp
gs
jbe
bound
cmpsl
jns
aad
adc
fwait
cmp
sbb
in
sbb
cmp
lret
scas
outsb
pop
mov
loop
outsl
push
in
or
addr16
jmp
cmp
mov
dec
js
mov
pop
shlb
mov
js
cli
inc
lods
cmpsb
add
mov
outsl
popa
aas
push
mov
push
push
bound
fbstp
pop
mov
dec
cli
enter
dec
dec
insb
lods
mov
jo
and
jle
xchg
enter
stc
pop
xchg
mov
test
sbb
pop
push
pop
sub
shr
leave
mulb
xlat
cld
push
loopne
mov
dec
ljmp
imul
ret
shrb
loopne
mov
sub
enter
loope
mov
pusha
cmpsl
or
cld
pusha
sahf
sub
popa
popl
in
dec
pop
xor
mov
and
sub
mov
imul
jle
xlat
add
outsl
sbb
mov
jb
inc
xor
fs
stc
sti
mov
jmp
jg
sbb
stc
pop
pushf
pop
outsl
stc
push
fisttps
push
lcall
mov
jecxz
lret
mov
jp
fildll
les
xchg
push
addr16
inc
inc
cmp
cmpsb
mov
inc
xor
ret
clc
iret
rep
pop
adc
add
stos
dec
xchg
xchg
adc
lods
sbb
lret
decl
pusha
pop
mov
jecxz
push
dec
ret
jg
shll
add
mov
push
out
mov
push
fs
pop
xchg
popl
push
mov
or
mov
xchg
in
adc
lds
mov
jnp
fdivr
in
std
mov
sarl
mov
das
xor
rolb
out
aam
mov
xchg
sub
push
push
mov
xchg
daa
sub
cmpsl
mov
mov
jle
jmp
test
mov
stos
and
push
xchg
fstl
adc
fwait
testl
push
flds
add
pop
leave
sahf
cltd
test
dec
push
test
push
lret
sbb
xor
cmp
mov
pop
imul
sbb
fs
dec
add
gs
mov
ds
int
hlt
lret
call
jbe
lock
pop
inc
dec
cltd
or
and
and
cmp
xchg
inc
data16
cmp
fldcw
popa
xlat
cwtl
dec
mov
adc
xor
cwtl
push
mov
ds
and
jo
ret
mov
pushf
mov
pop
in
inc
mov
and
shrb
mov
cmp
jnp
mov
int3
addb
add
mov
jmp
mov
adc
jb
adc
push
xchg
cmp
popa
adc
sbb
push
xorl
push
xchg
lods
jecxz
nop
xchg
pushf
xchg
xchg
push
lahf
inc
shrb
popa
pop
int
add
testb
fdivs
stos
idivb
aaa
mov
movsb
in
ljmp
pop
xor
jne
pop
insb
inc
mov
sbbb
cmpsb
jle
shll
inc
fwait
shl
inc
inc
in
pop
insb
adc
and
fcomp
sbb
add
les
scas
enter
loop
stos
push
pushf
adc
sbb
add
addl
lret
sti
pop
fmulp
negb
stc
je
mov
jmp
and
inc
outsb
mov
outsl
mov
incl
call
inc
stos
jae
dec
push
arpl
and
add
lret
xchg
jg
ljmp
cmp
scas
sahf
ds
lds
inc
iret
lcall
xor
push
nop
pop
bound
push
mov
sub
add
jno
or
push
or
pop
mov
lcallw
jno
js
cmpb
adc
xchg
insb
mov
mov
add
pop
jb
loopne
adc
cltd
addr16
xor
sbbl
mov
lock
or
movsl
sub
out
call
mov
insl
nop
jmp
aas
mov
or
and
stos
mov
dec
mov
push
inc
bound
cmpl
jmp
mov
outsl
cmp
mov
popf
adc
nop
jae
or
fildl
pop
pop
aas
clc
adc
or
lds
sub
or
jg
fwait
mov
insl
lds
sbb
dec
je
mov
test
add
negl
stos
jb
leave
mov
jbe
pop
mov
lcall
inc
iret
pop
push
aaa
out
pop
cltd
mov
jne
dec
xor
fdivrl
xchg
inc
dec
std
in
arpl
or
mov
jo
frstor
sbb
push
mov
xlat
cmp
cmp
sub
xlat
mov
movsl
lcall
jmp
push
mov
add
daa
arpl
sbb
ljmp
int
rcll
lret
mov
loop
clc
and
lea
dec
push
cs
lahf
fisubs
fstp
fiaddl
jne
aad
sub
scas
dec
pop
pop
add
sbb
aas
loopne
mov
jmp
xor
fldl
push
add
cmp
lds
cld
sti
dec
mov
or
addr16
mov
adc
sub
mov
cmp
adc
in
xchg
cltd
fsts
sub
outsl
mov
jne
cmp
imul
xchg
mov
lods
or
cmp
test
frstor
mov
and
dec
out
or
mov
and
push
sub
test
inc
adc
imul
pop
push
stc
call
and
add
enter
repz
in
xlat
add
rclb
fmuls
jb
lret
pop
inc
sub
sbbb
sarl
js
xchg
lahf
lret
call
push
xchg
icebp
in
push
push
inc
sahf
idivb
enter
out
outsb
insb
push
and
fcompl
mov
addb
dec
and
data16
jle
inc
mov
les
xchg
imul
inc
jg
in
decb
xchg
mov
cmpsl
pushf
cmp
adc
mov
enter
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
fiaddl
jl
pop
pop
jl
test
dec
or
fdivrl
lret
xor
andb
leave
imul
movsb
xor
les
ficomps
jb
pop
gs
jl
fs
mov
jg
xchg
ret
aam
lret
iret
or
mov
daa
movsl
sbb
mov
push
subl
mov
sbb
adc
icebp
ret
inc
inc
imul
push
into
and
adc
push
gs
mov
mov
sbb
out
push
aaa
into
scas
sub
cli
jnp
mov
cld
jns
movsb
and
sti
jns
dec
cmpsb
cltd
or
repz
cmp
jnp
mov
dec
or
mov
in
sub
sahf
jo
aas
les
jmp
cmc
clc
imul
leave
jbe
out
and
cmpb
pushw
lods
sbb
push
push
jge
jl
pop
pop
out
in
mov
jmp
and
shll
insb
outsl
clc
sbb
out
sub
ret
jbe
lods
add
mov
push
and
jne
test
orl
adc
das
add
hlt
pushf
mov
fsubrl
js
cmpsl
sbb
popa
xchg
stos
ret
push
mov
test
dec
es
add
imul
cmp
bound
pop
dec
out
addr16
add
fwait
dec
imul
inc
sbb
add
mov
sub
addb
cmc
dec
xchg
shll
inc
lods
std
dec
xor
jae
fstpl
cmpsl
sbbl
lcall
and
icebp
hlt
or
or
xchg
cmpsb
aaa
movsb
dec
or
and
adc
ss
in
jbe
lcall
and
pop
and
xchg
mov
adc
out
mov
or
xchg
jb
xor
xor
je
cli
imulb
and
mov
arpl
xor
ja
mov
xchg
inc
mov
mov
repnz
add
mov
inc
in
or
mov
ret
int
lock
jae
sub
mov
test
xor
inc
mov
pop
and
mov
icebp
and
or
push
pusha
mov
dec
repnz
jns
or
frstor
stos
inc
int3
push
loope
sub
negl
or
or
lcall
dec
arpl
stos
xor
fwait
repz
pop
rcr
xchg
and
dec
scas
cmpsl
mov
mov
adc
push
xchg
cmpsb
into
mov
mov
add
push
mov
jge
xorb
xchg
inc
pusha
test
sahf
das
pop
dec
in
push
push
lods
xor
pushf
push
in
jne
sbb
or
shll
push
and
clc
xor
inc
mov
imul
jge
test
lds
cmpsl
loopne
mov
sahf
push
mov
jnp
rcll
sbb
xchg
jnp
arpl
enter
xchg
sub
cmc
pop
mov
inc
pop
imul
in
cwtl
mov
sbb
nop
add
xchg
out
loope
lock
repnz
cmp
mov
addr16
sub
cld
rolb
xlat
jl
xor
lcall
ja
nop
jne
cmpsl
lods
aad
fmuls
loopne
cmp
adc
mov
jbe
pop
xchg
jge
jo
mov
call
into
sbb
push
fdivr
jecxz
jne
xchg
test
sub
sub
ljmp
rcrl
mov
jmp
shlb
dec
mov
cltd
inc
jbe
jae
inc
inc
inc
lock
mov
mov
xchg
jnp
dec
stos
and
iret
cmpsb
jp
pop
pop
xchg
mov
std
and
and
push
sub
mov
popa
inc
cmp
sub
sub
adc
insl
lcall
push
cmp
fsub
insl
xor
bound
mov
pop
push
je
inc
mov
cmp
xchg
jg
push
xchg
test
dec
int3
or
add
sbb
cmp
sbb
cmp
dec
xor
rcrl
fs
push
jge
add
pop
scas
push
daa
mov
xchg
xor
push
bound
jne
stc
jge
xchg
mov
xchg
cmpsb
enter
sbb
ljmp
cmp
jnp
xchg
hlt
push
loop
aam
loop
inc
gs
loop
mov
and
pop
mov
sub
adc
inc
cmp
inc
js
leave
cmpsl
bnd
mov
dec
nop
pusha
aam
and
sub
je,pn
pop
notl
jge
clc
cmpl
fildll
dec
imul
fistl
lahf
cs
xchg
mov
sbb
cvtdq2ps
xchg
mov
icebp
sub
dec
xchg
imul
sbb
fiaddl
pop
or
fdivrp
daa
sub
add
mov
pop
jge
mov
add
fs
xchg
pusha
fistpl
jle
fcomp
jge
ss
adcl
pop
popa
movsl
jbe
les
or
push
aad
xchg
mov
jno
xor
movsb
cwtl
dec
repz
gs
je
xlat
loop
xor
loop
jecxz
xchg
xor
mov
pop
and
pop
pop
cmp
xchg
enter
mov
jg
cmp
movsl
adcl
mov
jne
outsl
push
sbb
lret
xor
mov
out
int3
push
sub
or
push
std
cmp
das
sub
push
xor
cmp
pop
mov
jle
jecxz
leave
mov
ror
xor
fsubrs
mov
jno
test
xor
push
mov
xchg
inc
roll
mov
or
mov
rcrl
adc
xchg
sub
adc
push
push
cmpsl
and
mov
cmp
scas
out
sbb
fwait
mov
rclb
test
push
int
inc
mov
mov
or
sub
scas
loop
aam
insb
ret
or
movb
dec
stos
sbb
call
xchg
nop
sbb
hlt
inc
sbb
popf
add
in
fisubs
jns
daa
lea
xlat
cmp
xor
xlat
scas
xchg
xor
pop
jno
shrl
loop
mov
lds
xor
mov
outsl
stos
js
pop
dec
stos
adcb
movsb
push
xchg
and
aad
sahf
cmc
mov
hlt
jb
fs
arpl
cmp
add
popf
jns,pn
mov
adc
jecxz
dec
testl
sub
sbb
scas
jnp
and
cmpsb
filds
in
call
inc
int3
sub
cmp
and
xor
aad
xchg
inc
bound
and
sbb
add
ret
mov
test
js
push
lahf
dec
lret
and
cwtl
mov
mov
adc
push
sub
out
push
cmpsl
xor
stc
adcl
shll
sbb
movsl
jecxz
sbb
jb
rcll
cmp
sub
out
mov
in
es
or
adc
out
subl
or
push
and
daa
rcrl
js
mov
adc
mov
insb
movsl
insb
mov
mov
dec
mov
sub
fadd
mov
pop
fbstp
adc
ja
cmp
xor
mov
clc
jo
jl
int
lods
fdivl
mov
xchg
add
jae
out
fnsave
or
mov
pop
addr16
inc
popf
aas
jae
inc
or
testb
xchg
dec
sbb
hlt
ja
and
adc
jmp
repnz
mov
movsl
or
mov
out
adc
mov
pop
jne
mov
cmpl
jecxz
movsb
jg
popf
loop
mov
inc
sub
mov
jnp
int
dec
notb
mov
sub
sbb
push
push
sarl
mov
aad
imul
jp
xchg
rcr
les
mov
inc
mul
test
arpl
fsubp
sbb
cmpsb
nop
orb
pop
jmp
adc
adc
mov
jecxz
icebp
in
into
stc
inc
inc
int3
mov
push
or
leave
and
in
mov
into
cmp
sahf
in
es
lcall
arpl
test
pop
movsl
mov
jb
outsl
fiaddl
iret
jns
outsl
sub
mov
dec
daa
push
mov
inc
or
or
pop
cli
push
not
lea
outsb
sbb
inc
cltd
ret
fistpll
loopne
sbb
and
mov
xchg
add
adc
in
dec
notb
mov
enter
mov
dec
outsb
and
jge
test
mov
shlb
push
fildl
xchg
xor
ja
sub
dec
add
es
jo
pusha
cmp
repz
fisubs
push
leavew
dec
scas
mov
test
or
test
ret
cmp
loop
out
inc
xchg
pop
or
cmp
in
inc
sahf
sub
add
sub
xor
loope
push
loope
sub
gs
pop
notl
lahf
icebp
add
sbb
mov
cmp
jo
or
push
mov
mov
test
cmpsb
jecxz
pop
pop
or
aam
test
stc
pop
nop
ss
test
fldt
lea
cltd
fldl
jmp
cli
sub
fidivl
push
lret
rclb
pusha
ss
xchg
js
pushf
movsl
cmp
popf
mov
scas
xchg
jmp
xchg
sub
pop
push
cmpsl
xchg
push
imul
call
inc
pushf
daa
push
jne
jae
adc
push
mov
lds
mov
insl
push
adc
ss
pop
fisttpl
xlat
out
or
inc
and
cmpsb
mov
jle
jle
inc
or
outsb
inc
cld
clc
lret
adc
rcl
jbe
stc
loope
sbbl
push
and
loopne
sub
ror
jmp
fisttps
mov
cmp
out
or
jo
cld
sub
insl
mov
jmp
ficoms
cmp
xor
gs
xor
subl
dec
stc
outsb
jmp
cmp
pop
cwtl
or
ret
jae
dec
adc
sti
pop
stos
xor
rcrl
flds
adc
psubq
sbbl
outsl
push
push
and
fwait
enter
dec
ljmp
push
mov
jge
add
js
mov
pop
inc
add
lds
add
rclb
fwait
daa
jo
and
lea
adc
insl
jnp
cmp
aad
and
sti
lds
jge
icebp
insl
cld
sub
and
mov
mov
push
ja
addr16
out
ficoms
outsb
mov
fistpll
push
cmpsl
pop
xchg
addl
mov
mov
dec
sub
jo
sub
mov
and
aas
in
jne
dec
push
out
and
bound
xchg
dec
insl
leave
mov
adc
fisubs
into
xlat
adc
xor
sti
add
cmp
pop
in
add
insl
dec
ss
push
xor
jno
icebp
mov
jg
add
shr
stos
in
inc
push
mov
fwait
out
jecxz
mov
pandn
xor
mov
xchg
pop
cmp
push
test
push
xor
and
adc
in
dec
rorl
lcall
or
mov
and
xchg
mov
jbe
popl
fadds
dec
insb
xor
ljmpw
fs
les
jnp
movsl
xor
xor
popa
imul
test
shll
xor
inc
movsb
pop
add
jl
inc
shl
push
jmp
cmp
fbld
stos
cmc
andb
mov
xor
in
std
inc
jg
nop
dec
inc
cmc
in
pop
push
mov
inc
sub
jmp
mov
jge
in
adc
xstore-rng
cmpsl
les
jmp
mov
leave
jmp
pusha
cmp
fs
testb
mov
in
stc
push
mov
xchg
add
icebp
lret
into
shlb
in
loope
or
insl
jle
out
movsl
adc
mov
scas
mov
es
xchg
cwtl
add
sub
clc
cmpsb
aas
cmp
dec
mov
cli
fisttps
test
mov
or
adc
popa
mov
int3
xlat
xor
pushf
ds
push
sbb
testb
jbe
lcall
push
in
insl
jns
pop
adc
dec
lods
push
push
or
ss
and
push
pop
mov
test
pusha
push
adc
into
enter
mov
mov
popf
xor
adc
push
lret
mov
push
push
inc
push
and
jne
cmp
lret
pop
imul
add
cmp
aaa
xor
sbb
in
shll
dec
cmp
enter
sbb
cld
das
fcomip
xor
ss
out
push
jmp
jmp
lret
aad
adc
jo
jmp
jae
cmpsb
outsb
or
insl
in
or
mov
insb
mov
cmc
sub
dec
stos
mov
fsubrl
xchg
je
not
fldcw
lahf
stos
fmull
es
jns
push
jbe
daa
push
pop
xor
fdivs
mov
mov
push
add
push
arpl
sub
test
dec
cmpsb
daa
cmc
jg
call
jl
imul
cmc
shlb
push
cmp
adc
pop
test
push
cmp
push
icebp
jno
jae
cltd
ret
fwait
test
data16
cltd
test
cwtl
je
testl
in
xchg
mov
mov
adc
test
add
ss
movsl
xchg
or
mov
mov
fcmovnb
sahf
add
shrb
sbb
addl
push
lret
or
xchg
mov
and
pop
lock
and
lret
ds
lret
sti
icebp
testb
shll
sbb
call
mov
clc
lcall
jne
add
leave
pusha
push
jmp
outsb
add
dec
and
shll
mov
inc
lock
lock
adc
nop
mov
ljmp
lret
sub
pop
jb
push
pop
stc
xorb
pop
data16
or
in
sbb
sub
fbld
mov
jmp
cltd
cs
nop
push
fisubs
cs
dec
negl
data16
ds
dec
inc
lods
mov
cmc
jb
mov
pop
ljmp
in
xor
mov
stos
dec
push
xor
lds
mov
mov
repnz
inc
jb
mov
sub
fcmovbe
sub
mov
imul
push
fs
mov
or
inc
sbb
or
inc
xchg
js
sub
sbb
mov
in
and
add
xchg
outsb
inc
stos
addl
pop
mov
adc
mov
mov
mov
adc
aaa
add
mov
mov
shlb
cld
inc
ss
ret
les
push
or
stc
movsb
imul
lea
cmp
lcall
lea
jg
popa
dec
pop
or
bound
pop
test
mov
nop
call
mov
sub
nop
repnz
and
call
jge
pop
popf
mov
fldlg2
xor
lock
xchg
divb
or
nop
dec
je
inc
or
ud2
jnp
add
shl
icebp
lds
shrl
mov
jb
daa
into
stc
shrl
mov
pop
dec
mov
inc
iret
jle
pop
xor
repnz
mov
and
out
push
cld
pop
jp
jae
xchg
fucomi
mov
aas
cmpsl
xor
inc
mov
mov
cmp
pushf
xchg
jmp
xor
jne
cmp
and
mov
inc
flds
cli
dec
enter
mov
mov
mov
scas
jecxz
or
sub
cmp
dec
pop
test
add
shll
dec
lock
jg
and
add
roll
dec
jo
sbb
lock
sub
in
and
cmp
imul
mov
jb
testb
add
int3
push
data16
inc
ds
or
sbb
mov
mov
pop
aad
ret
add
mov
pop
insl
scas
enter
xor
pop
mov
push
dec
pop
in
push
mov
lods
xchg
push
xchg
test
sub
sbb
cmpb
lds
mov
jmp
and
jp
dec
sahf
scas
insl
call
mov
test
je
negb
insl
xlat
int
cmp
xchg
mov
sarb
cld
inc
enter
and
push
add
fidivl
jg
or
dec
cmp
xlat
mov
das
xchg
xchg
fs
inc
pop
and
xchg
jbe
inc
or
and
dec
push
inc
xor
mov
xor
ret
inc
or
cmpsl
mov
push
mov
sti
ret
mov
in
sbb
out
mov
mov
jb
xor
outsl
scas
cmpsl
clc
shrl
clc
outsb
or
test
push
test
loopne
push
mov
popf
pop
lock
in
mov
cli
out
sub
mov
dec
test
lea
cmpsb
adc
cltd
test
xchg
test
push
xchg
mov
and
lock
pop
sbb
ja
lahf
mov
das
or
mov
sub
addl
jmp
int
cmpsb
mov
rcrb
jg
clc
outsb
add
xchg
clc
cmp
nop
push
xchg
pop
or
sub
xchg
loop
inc
inc
ja
inc
inc
gs
jecxz
dec
ret
out
popa
cmc
jns
mov
mov
fnstcw
and
mov
inc
and
sub
loopne
test
je
pop
cmpsl
xlat
into
pop
sti
into
push
or
test
inc
add
test
out
shrl
scas
dec
push
mov
push
enter
push
lods
xchg
mov
pop
in
shrl
xor
mov
mov
mov
adc
ds
adc
push
pop
leave
xchg
inc
pushf
inc
popf
fistps
arpl
shrb
dec
repnz
xchg
pop
in
pushf
cmpxchg
or
sti
mov
sub
xchg
jo
lea
cmp
scas
mov
aas
outsb
pop
mov
dec
mov
mov
daa
lret
cltd
push
pushf
sarb
mov
cmp
scas
jmp
divb
mov
inc
pop
push
movsl
cmc
add
loope
and
bswap
out
lods
lea
dec
fbstp
mov
cmpl
adc
cli
jnp
bnd
push
les
cltd
sub
int3
or
inc
jno
sbb
pop
test
xor
dec
repz
jle
cmp
jbe
mov
xor
mov
cmp
das
mov
test
mov
stos
push
mov
rorb
jecxz
sub
xchg
sub
stos
adc
dec
inc
jp
inc
aam
mov
fists
xor
stos
mov
and
mov
test
loopne
iret
xor
enter
cmp
filds
rorb
fldl
imul
xchg
fcoms
or
das
pop
push
cmp
push
mov
hlt
enter
xchg
ret
mov
pop
dec
inc
jb
xchg
mov
test
lds
xchg
xchg
inc
lods
sbb
add
test
repnz
negb
scas
cmp
repz
les
in
pop
xorl
movsb
dec
and
jnp
incb
insl
inc
sahf
jae
and
jo
xchg
push
mov
addr16
dec
les
xchg
cmp
stos
inc
rcrl
jecxz
ret
and
mov
jmp
mov
inc
xchg
cmc
xor
repz
popf
sub
decl
imul
xor
push
jne
fstp
and
cwtl
jne
sbb
stc
int
out
sbb
lods
ljmp
adc
mov
jae
cmc
stc
jge
adc
dec
lahf
jmp
dec
xor
aaa
mov
xlat
cld
jne
int3
jp
jl
push
jmp
std
mov
mov
xchg
mov
inc
jbe
and
mov
mov
roll
mov
ret
mov
rcrl
lock
std
cmp
jae
mov
nop
pop
mov
and
nop
ljmp
adc
push
cmp
and
ret
arpl
loope
sbb
mov
xor
fldt
jnp
in
out
repz
mov
jbe
mov
mov
and
gs
xchg
pushf
sub
scas
ljmp
fstpl
out
testl
jo
sub
sarb
sub
dec
push
or
inc
xchg
xor
mov
rcr
nop
push
mov
mov
je
xor
adc
xchg
movswl
or
inc
gs
pop
push
pop
shrd
lcall
and
jmp
sbb
xor
fdivrl
mov
iret
adc
lock
inc
movsl
cmp
xchg
movsb
add
movsl
ss
push
testb
jle
or
add
das
dec
xchg
cmpsb
pusha
mov
outsl
fcomip
or
jge
add
adc
and
cltd
xor
xor
jg
clc
mov
inc
pop
mov
ss
add
loope
fdiv
jp
lods
pushf
aas
stc
dec
pop
jo
push
leave
shll
push
sbb
in
xchg
insb
add
xchg
lds
push
sub
adc
into
xchg
imul
jle
arpl
pushf
int3
out
stos
pop
mov
adc
or
mov
test
sbb
das
xor
add
ret
fwait
mov
pop
loopne
pop
les
push
add
aam
into
jge
pusha
movsbl
mov
lea
cmpsl
adc
in
repz
cmpsb
sahf
xchg
inc
nop
xchg
jl
or
sti
dec
mov
dec
dec
pop
push
mov
push
sahf
cli
mov
pusha
pop
adc
inc
ffreep
cvtps2pi
mov
lret
ja
dec
pop
push
rcrb
add
sub
jns
loopne
xchg
int
insb
sbb
jmp
hlt
sub
outsb
testb
adc
sub
push
test
les
jmp
sub
sbb
xorb
dec
fistl
mov
lcall
and
sbb
inc
jne
push
je
sbb
mov
test
xor
js
mov
es
mov
mov
mov
push
and
xor
cmp
inc
cmp
loopne
xchg
fsubp
jmp
fnsave
gs
ljmp
lds
les
int3
mov
sub
loop
inc
bnd
imul
push
sbb
mov
or
and
test
xlat
adc
xlat
mov
dec
int3
test
pushf
mov
les
xor
or
mov
cmpsb
mov
or
xor
in
ds
jg
mov
or
jge
dec
cmpsl
jle
cmpsb
mov
aad
xchg
fs
mov
icebp
sub
stos
inc
xlat
ficompl
repz
ljmp
cmpsb
mov
je
jecxz
clc
xor
int
lcall
jg
jg
sub
stc
dec
jne
inc
jnp
je
push
out
cmc
movsb
lahf
sub
dec
enter
lods
fwait
push
xchg
loope
das
pop
sub
cmc
dec
mov
jae
divl
pusha
push
icebp
rolb
push
push
mov
sub
and
outsl
xchg
gs
in
aad
mov
int
insl
in
dec
sbb
push
cmp
ret
in
mov
ret
cld
jnp
xchg
jp
xor
loope
adc
and
dec
cltd
xor
daa
sbb
aam
loope
aas
push
sti
xchg
mov
or
jp
out
jbe
ror
sbb
aas
jnp
dec
sub
decb
pop
adcb
sbb
cmp
test
mov
sbb
ss
mov
mov
fstpl
add
hlt
mov
imul
fistpll
xor
imul
stos
or
in
or
sti
dec
sbb
jns
ficompl
ret
out
js
jnp
add
pusha
fimull
cs
xor
enter
mov
std
and
sub
sahf
mov
sub
xchg
push
fdivs
sbb
aas
mov
mov
test
sbb
mov
sub
push
add
shlw
adc
sbb
loop
xchg
mov
sbb
out
sub
es
imul
imulb
jno
lahf
or
jbe
hlt
mov
test
bound
neg
xchg
jmp
lret
mov
mov
mov
and
add
loopne
and
and
xchg
cli
hlt
fdivr
cmp
loope
fwait
sub
jae
sub
loop
popf
xchg
lods
movsb
xchg
add
mov
popf
fists
jg
ja
cwtl
ja
pop
inc
lock
mov
dec
lret
mov
cmpsb
adc
inc
das
out
sbbb
dec
enter
stos
sub
stos
iret
xchg
in
xor
fidivs
sbb
popf
lock
inc
mov
dec
sub
icebp
jo
sbb
aaa
fistpll
out
mov
test
sbb
inc
add
add
xchg
lcall
in
lods
cmpsb
bound
lods
stos
xchg
ss
mov
push
adc
xchg
cmp
loop
pop
jo
jecxz
loop
jecxz
adc
push
in
fst
or
movsl
inc
jb
pop
sbbl
jge
daa
cmp
mov
push
or
sub
ds
rolb
vpunpckhwd
pop
push
cmc
sbb
bound
insl
push
fwait
xor
lret
in
shr
push
fdiv
stc
test
mov
imulb
out
daa
bts
mov
shll
jno
ja
cmc
fs
adc
push
or
cmp
and
in
fdivs
int
les
or
fcomps
call
dec
imul
fimull
test
push
jae
sbb
daa
fstps
mov
add
call
pop
dec
jae
icebp
lahf
inc
xor
push
xor
repnz
inc
into
imul
dec
inc
xorl
repnz
mov
sti
ljmp
js
adc
lock
xor
shlb
push
sbb
mov
insl
cli
cwtl
stos
lods
cmp
iret
jge
or
repz
fiaddl
xor
add
mov
repnz
adc
enter
ds
push
sbb
nop
add
or
mov
ljmp
and
in
jb
xor
fsubl
sub
stos
sti
or
push
repz
sahf
sti
scas
insl
lret
cwtl
sbb
inc
and
aas
add
loop
mov
mov
cld
hlt
push
ret
mov
xchg
xchg
out
sbb
iret
das
sbb
adc
pop
mov
add
mov
iret
xchg
mov
cmpsb
mov
inc
push
pop
xchg
push
lds
mov
xlat
cs
mov
mov
out
daa
or
cmp
iret
mov
popf
pop
daa
pop
sub
lret
pop
inc
inc
mov
and
cmp
xchg
loope
mov
and
fld
cli
push
in
adc
and
sbb
testl
rcrb
add
orb
lahf
and
push
xchg
js
sub
in
repz
insb
clc
xor
enter
pop
adcl
sub
nop
mov
mov
pushf
rcrl
popf
repz
je
test
std
ret
leave
cmpsl
sub
or
into
push
cmpb
inc
leave
hlt
inc
hlt
push
jnp
mov
add
outsb
and
mov
dec
push
bound
mov
mov
mov
loope
cwtl
loope
ret
xchg
pusha
inc
push
lds
cmp
mov
xor
jne
cmp
fwait
pop
daa
add
mov
cmpsl
and
cmp
inc
mov
mov
sub
rcrb
sbb
int
adc
pop
cld
dec
in
in
add
dec
pop
popf
xchg
pop
jp
gs
pusha
mov
insl
jne
out
push
mov
pop
mov
lock
gs
fs
mov
adc
out
mov
loop
jl
mov
loopne
push
test
push
push
notb
out
cli
in
hlt
xlat
xor
mov
jnp
je
fidivl
cmp
lods
xorb
cmp
call
dec
and
loopne
lcall
ja
div
jl
and
jecxz
inc
test
icebp
adc
fsubl
mov
xchg
jae
sbbl
xor
push
mov
out
mov
loop
cmpsl
hlt
jle
or
insl
cmpsb
xchg
add
sbb
push
mov
arpl
jecxz
xchg
pop
mov
inc
lret
aas
cmp
jp
dec
hlt
mov
sub
mov
fs
xor
cmp
mov
shll
push
pop
outsl
int3
je
jne
sub
mov
cs
int
sti
add
jns
addl
jnp
sbb
jge
dec
in
inc
cld
inc
int
mov
jbe
and
fimuls
sub
adc
xor
aaa
xchg
sbb
jne
pop
loope
imul
pop
inc
inc
adcl
xorb
movsl
xchg
dec
ljmp
repnz
bound
cmpsb
rol
mov
sub
stc
mov
pop
hlt
adc
push
test
out
lret
gs
in
outsl
loopne
into
enter
inc
loopne
and
push
inc
jno
pop
divb
and
in
fisttpl
inc
sbb
mov
jnp
adc
cmpsb
mov
and
push
push
call
les
test
lret
add
test
add
mov
mov
push
cltd
xor
xchg
cltd
xor
dec
nop
and
mov
xor
das
ja
nop
mov
stos
hlt
lods
jnp
push
lods
data16
mov
arpl
clc
nop
not
add
das
movsb
mov
inc
mov
xchg
jecxz
pop
fucomp
subb
cmp
pcmpeqb
insb
mov
scas
jne
data16
dec
adc
nop
imul
mov
and
ret
cs
lods
sbb
les
sbb
out
xchg
incl
pop
mov
push
push
add
or
movsl
and
xor
pop
nop
addb
pushf
add
lods
repz
xchg
jecxz
loope
jno
sbb
in
rcl
test
sub
xchg
flds
sub
lds
cs
and
xchg
out
and
jge
fs
mov
sbb
int3
ljmp
inc
pop
lret
les
stos
lods
mov
or
jmp
mov
pop
sbb
cld
insb
pusha
repz
mov
fsubr
mov
pop
test
add
outsb
sub
adc
ret
pop
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
ss
jecxz
inc
mov
aaa
push
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
