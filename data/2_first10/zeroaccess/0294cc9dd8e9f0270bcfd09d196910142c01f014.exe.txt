push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
cmp
add
pop
xchg
in
jb
repnz
ret
pop
adc
pop
nop
pop
xchg
add
aad
popa
pop
or
push
daa
mov
fdivl
mov
and
and
stc
into
dec
imul
es
sbb
out
scas
add
pop
mov
cli
out
mov
sub
inc
adc
mov
movsb
mov
sub
inc
out
sub
push
out
call
xor
outsb
aaa
push
lahf
aad
mov
call
movsb
test
rolb
xchg
fstpl
pop
mov
rclb
jp
mov
cmp
leave
push
jmp
lock
out
mov
inc
push
insb
add
and
add
fiadds
push
push
add
jno
std
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
and
jg
jle
jg
jle
mov
aaa
es
int
dec
arpl
leave
pop
fimull
mov
adc
mov
mov
pop
push
clc
jb
stc
rcrl
mov
sub
adc
inc
movsb
jle
sbb
test
fsub
mov
and
dec
inc
xor
hlt
inc
xor
outsb
push
jo
insb
insl
cmpb
xor
pusha
or
cmp
mov
mov
fwait
inc
mov
or
mov
sbbb
lret
les
rcll
jle
mov
lret
pop
jp
dec
push
ficoms
cmp
cld
jb
stos
cs
repz
jmp
in
repz
and
xor
push
adc
cmp
cs
out
das
fwait
push
or
roll
scas
dec
mov
xor
xor
stos
push
xor
clc
or
sbb
out
jmp
cwtl
push
add
dec
cmpl
dec
mov
aad
pop
data16
iret
lea
stc
sbb
inc
mov
sahf
push
mov
xor
shl
xchg
cmp
xor
mov
jns
shrb
call
aaa
or
sub
dec
sahf
pop
mov
and
sbb
ljmp
ljmp
push
xor
cmp
movb
pushf
jae
mov
add
inc
sbb
jns
add
jbe
mov
or
pop
sub
mov
jecxz
aad
aas
shl
sub
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
ljmp
jle
and
repz
repz
outsl
aam
sbb
pop
nop
push
jge
pop
mov
sbb
test
lods
xchg
mov
and
sub
pop
jo
jg
jne
fidivl
sbbl
bound
sbb
rcrl
mov
orps
jle
mov
jbe
test
sbb
mov
addb
addb
adc
sub
dec
imul
aaa
dec
sub
pop
cs
mov
pushf
std
in
sub
jecxz
pop
push
push
icebp
pop
or
jbe
sub
adc
fdivs
add
push
jb
inc
add
lret
pushf
xlat
xor
dec
lahf
outsb
jns
in
rorl
jp
dec
xchg
into
push
or
jo
sarl
int
faddl
int3
fdiv
enter
incb
adc
jmp
lret
out
and
iret
push
fisttps
pop
arpl
jne
pop
sbb
inc
or
test
pop
mov
or
dec
sbb
fidivrl
cmp
lods
xor
cld
pop
or
mov
mov
xor
xlat
mov
mov
xchg
lret
or
andl
test
movsl
sub
fisubrl
xor
test
jns
pop
pop
cli
faddl
in
mov
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
push
jle
jg
jle
adc
pop
lock
ret
scas
fdivl
das
dec
pop
jo
or
add
gs
pop
dec
add
out
fdivl
sub
mov
je
gs
ja
hlt
out
les
fwait
lret
xor
addb
sbbl
stos
ud0
xlat
data16
push
scas
mov
xchg
push
mov
stc
pop
push
pop
lock
pusha
lret
pop
fildll
mov
and
inc
lods
dec
jmp
hlt
ljmp
clc
xor
adc
in
cmpb
hlt
pop
outsl
mov
mov
mov
xor
loopne
test
inc
test
dec
pop
popf
add
cmc
jecxz
mov
jo
inc
xchg
push
lahf
aas
jnp
push
jl
mov
test
mov
adc
aaa
push
push
out
inc
int
mov
iret
push
out
test
in
push
sbbb
adc
in
scas
push
int
push
mov
das
adc
push
mov
and
jae
inc
aas
mov
pop
in
jnp
mov
mov
sbb
repnz
movsl
mov
int3
orb
jae
sub
jge
cmp
ja
xchg
mov
lahf
lcall
push
mov
fidivrl
pop
sbb
push
rorb
mov
mov
sub
int
stos
jnp
mov
mov
pushf
add
add
jmp
push
dec
inc
mov
jle
cli
jg
jle
les
repz
xchg
out
jb
sbb
jae
jo
or
test
push
jle
push
pop
mov
fwait
mov
inc
dec
mov
xrelease
lret
stc
orb
sarb
loope
test
add
fsubrl
mov
je
scas
or
jp
pop
mov
out
mov
xchg
sub
cmpsl
inc
scas
or
test
pop
outsl
cli
jmp
adc
std
jne
lret
in
sub
and
add
dec
lds
add
aas
repnz
ret
jle
pop
inc
cmc
pop
jbe
cmc
mov
test
pop
stos
shl
inc
stos
sub
push
popa
cltd
daa
xchg
inc
mov
mov
xor
fisttpl
pop
std
add
ds
out
push
mov
add
cmpsl
push
inc
jb
pop
dec
add
mov
fiaddl
xor
mov
or
xchg
fsubs
sub
inc
mov
dec
test
adc
daa
push
xor
imul
loopne
das
test
and
fmull
decl
and
movsb
cmp
or
cmp
xchg
mov
outsl
imul
test
aaa
jb
stc
jmp
pop
imul
or
inc
mov
insl
xchg
outsb
xchg
mov
mov
ja
loop
push
and
fimuls
add
lock
mov
rorb
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
in
push
lcallw
cli
jg
jle
out
push
aam
adc
inc
les
pushf
mov
adc
xchg
aaa
inc
cmp
hlt
paddsw
inc
lahf
xchg
cltd
test
cwtl
xchg
lret
xor
sti
push
and
cmp
cmp
sub
shlb
lods
aam
mov
jb
stc
test
lret
pop
lret
adc
hlt
xor
es
sbb
jb
mov
fiaddl
push
jmp
sbb
cmp
sarb
jecxz
inc
add
mov
mov
push
add
cmp
pusha
jbe
pop
mov
into
lock
loop
or
sbb
add
xor
out
adc
fidivs
loopne
add
mov
cs
imul
mov
pop
adc
incl
das
clc
gs
mov
out
jp
cmp
in
dec
sub
scas
push
aad
negb
out
and
or
aad
dec
jb
test
sahf
xor
push
jns
adc
out
ret
cmp
xchg
mov
mov
adc
add
and
dec
out
jns
test
jno
std
inc
scas
push
adc
cli
dec
push
mov
pop
nop
mov
das
ret
aad
add
mov
rorb
push
xchg
scas
push
cmp
lock
xor
mov
sahf
push
out
insb
scas
and
out
inc
test
add
inc
rolb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
popf
push
pop
jle
cli
jg
jle
lods
sti
jg
push
movl
insl
pop
dec
aaa
loope
mov
push
mov
jge
notb
hlt
iret
icebp
and
stc
mov
cwtl
fistl
lret
dec
jb
int
out
pushf
stc
sub
and
nop
lret
pop
pop
cmp
cmpsl
jmp
nop
mov
push
cmpsl
insl
sbb
out
jp
inc
xchg
cltd
in
test
add
iret
aaa
adc
loope
int
fiadds
rol
xchg
bound
cld
xchg
rcr
cmp
jmp
and
push
cmp
cld
jb
divb
cmp
verw
stc
push
push
push
mov
lahf
push
hlt
push
and
in
inc
hlt
mov
lcall
andb
push
popa
xchg
dec
xchg
xchg
fs
mov
es
shrl
mov
dec
ffree
jb
fidivrl
movb
push
cmp
xchg
aad
dec
iret
scas
lea
xor
mov
roll
xlat
lock
dec
sahf
xor
imul
lods
lahf
cs
jne
xor
ficompl
mov
and
sbb
leave
mov
pop
mov
enter
pusha
inc
mov
into
in
cli
shrb
aam
outsb
pusha
inc
push
lock
cld
pop
rcrb
pop
jge
fwait
movsl
sbb
aam
test
mov
in
xor
shll
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
int3
movsb
jmp
lock
inc
inc
pop
je
loopne
mov
lds
sub
pop
out
sub
sbb
pop
xchg
jo
rcrl
stos
sbb
jbe
mov
jecxz
xchg
lret
jno
inc
ds
lret
lock
rorb
stc
leave
bound
mov
jmp
inc
push
jns
sti
push
inc
aam
sub
or
popa
icebp
int
fnstsw
and
out
push
lahf
lods
or
pop
pop
test
out
xlat
hlt
add
scas
pop
inc
roll
pop
pushf
pop
push
inc
insb
enter
mov
subb
dec
pusha
adc
inc
popa
or
cmc
cmpsb
add
testb
xor
addb
mov
lret
xor
mov
xor
mov
xchg
jge
fidivrs
mov
pop
in
dec
xchg
repz
in
jge
outsb
sub
mov
jns
repnz
cmp
loopne
inc
inc
ss
adc
mov
mov
jl
imul
mov
mov
or
fs
xchg
dec
pop
loope
inc
into
fisttpl
cmp
xchg
xchg
push
sarl
and
xchg
scas
pop
jge
jo
inc
cwtl
or
shll
movsb
pop
jge
hlt
and
int
push
in
or
std
xor
mov
add
jmp
cmc
dec
and
jno
push
mov
lea
scas
push
add
cli
jg
jle
sub
cmp
pop
stos
jle
aaa
sti
lods
shll
push
sub
adc
in
mov
cwtl
cmp
and
push
fwait
test
inc
push
and
sbb
arpl
movsb
popf
inc
ss
or
dec
jno
sbb
fstl
add
pop
shrb
adc
mov
cmp
add
mov
inc
scas
loope,pt
or
sbb
mov
shl
pop
movb
mov
add
das
push
adc
jno
pop
dec
icebp
in
push
xor
sub
movsb
enter
repz
mov
lcall
nop
clc
dec
pop
mov
adc
in
loopne
sbb
movsb
xor
inc
mov
cmp
push
imul
jmp
mov
adc
adc
push
fisubrs
add
mov
insl
loope
xchg
js
jbe
hlt
add
dec
add
aaa
push
sbb
clc
ljmp
pop
add
sub
xchg
fwait
xlat
in
rcrb
fwait
mov
cltd
add
mov
aam
adc
push
pop
adc
pop
sub
or
xchg
bound
xlat
loope
mov
push
add
and
xchg
pop
fwait
pop
int
iret
into
testb
mov
repnz
sub
lahf
fstl
mov
mov
nop
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
mov
add
cli
jg
jle
push
divb
stc
lahf
hlt
scas
rcl
push
sub
cli
jecxz
add
push
mov
push
cs
ds
outsb
insb
push
adc
out
add
sub
imul
pop
mov
dec
mov
adc
mov
or
push
sbb
adc
mov
bt
repz
or
dec
and
cwtl
divl
test
pop
shll
mov
cltd
jno
shrl
or
push
fs
sbb
call
outsb
cltd
and
pop
xchg
xor
adc
sub
and
mov
std
icebp
sub
sbb
add
xchg
add
pop
stos
scas
jb
mov
lock
jae
lds
inc
ss
sub
and
addb
mov
mov
aam
mov
js
sbb
and
sub
or
enter
add
popa
in
dec
sbb
add
mov
aam
inc
dec
and
or
and
inc
jne
jmp
pusha
mov
pop
mov
push
std
sbb
mov
ja
jno
adc
fmulp
cs
xchg
or
xor
fcmovnu
mov
es
imul
das
clc
pusha
xchg
repz
jo
mov
cmpsl
hlt
push
inc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
stos
mov
jle
cli
jg
jle
mov
imul
hlt
cmp
mov
add
clc
arpl
iret
mov
into
inc
loop
addr16
arpl
cltd
ds
lock
jb
in
nop
xchg
dec
adc
insl
jle
dec
cmp
mov
jbe
mov
aad
lahf
insb
mov
notb
fwait
dec
cld
enter
call
mov
sub
notb
loopne
stc
xlat
in
push
mov
sub
push
movsb
fistps
mov
sbb
dec
mov
ja
xorb
pop
sbb
rcpps
jne
loop
ds
mov
lahf
rcr
pop
dec
popf
or
ja
out
lret
or
out
mov
lret
inc
sbb
xchg
sbb
pop
xor
inc
movsl
sbb
jno
aam
std
adc
and
repnz
out
jl
rcrl
pop
insl
shrl
test
test
push
movb
sub
addb
inc
out
nop
repnz
daa
repnz
xchg
mov
pop
xor
xchg
mov
pop
or
fdivr
mov
in
cmpsb
mov
fnstsw
ret
mov
xchg
fiaddl
push
mov
in
sub
stc
cmp
ljmp
rcrl
fidivrl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
push
test
jle
cli
jg
jle
rcrl
popa
cmpsl
sbb
sarl
push
shl
jae
in
or
outsb
xchg
mov
jae
es
faddl
cmp
and
add
jge
and
js
into
dec
test
mov
and
movsl
pop
dec
or
sti
pushf
push
or
inc
call
cs
mov
push
cmp
shlb
iret
addr16
add
cld
cmp
or
dec
rorl
addb
sahf
mov
cmpsl
int3
fwait
mov
jbe
data16
stos
and
cmp
and
fildll
fildll
out
inc
shrl
enter
lahf
pop
or
test
hlt
aaa
test
or
fsubs
notl
mov
js
fwait
lahf
mov
les
mov
call
push
and
mov
in
dec
ds
scas
in
jle
and
adc
mov
push
sbb
leave
in
outsl
jns
scas
in
cs
xchg
test
mov
push
int
in
out
xor
ss
pop
and
xchg
fsubrl
inc
xor
cmc
cmc
sbb
insb
jle
push
mov
xchg
pop
rcll
inc
ljmp
sub
mov
push
push
daa
xchg
bnd
sbb
scas
sbb
push
cmp
dec
outsl
sbb
mov
icebp
ljmp
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
jge
pop
cs
jle
jg
jle
and
fimull
sub
mov
add
outsl
inc
mov
cmp
clc
gs
mov
nop
jecxz
xchg
ret
push
sub
ficompl
mov
jo
inc
jne
or
test
push
out
push
adc
sbb
and
out
mov
mov
je
rcrl
fidivrl
rolb
imulb
jg
lods
push
aaa
pusha
inc
jmp
gs
push
cwtl
scas
lea
fldl
xor
pop
repz
ret
pop
xor
es
xor
xor
enter
incl
sahf
push
leave
push
dec
push
pop
incl
dec
mov
cmpsl
or
sub
lods
xchg
push
xor
sahf
dec
pop
call
jns
add
push
cmp
sbb
pushf
pop
lods
mull
sub
lds
pushf
push
pushf
lcall
ret
movsl
test
jmp
pop
and
mov
sbb
adc
push
adc
jle
stos
stos
pushf
mov
adc
outsb
pop
push
aad
inc
lods
lods
mov
dec
ficompl
ret
jb
inc
sbb
mov
xchg
subb
scas
cmp
clc
pop
adc
jne
dec
adc
stos
insb
jle
dec
addr16
fwait
push
pop
push
das
sub
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
shlb
mov
jg
jle
adc
fistl
add
loop
inc
jbe
bound
aas
xchg
push
jb
dec
outsb
orb
in
les
push
push
pop
loop
cmpsl
imul
lock
dec
insl
sub
cmp
sub
cli
xor
enter
or
into
dec
xchg
and
push
pop
pop
ja
mov
cltd
inc
popa
clc
ja
pop
jg
ljmp
loop
sbb
insb
sub
loop
outsl
ljmp
push
aam
mov
or
std
daa
jl
add
lret
dec
jnp
adc
push
cmp
mov
xchg
mov
xor
ds
add
out
mov
cltd
mov
sbb
add
xlat
jnp
xor
arpl
xor
lods
mov
movsl
lods
and
xor
in
push
jno
mov
mov
cmp
xchg
add
rorb
dec
movsb
xchg
xor
jmp
addps
sti
inc
stos
aaa
fcomps
add
push
rol
fwait
xchg
xchg
popf
cmpsb
imulb
loope
sti
pushf
out
pop
push
jle
jo
and
cmp
sub
js
sbb
sub
add
mov
scas
mov
dec
jno
mov
shlb
out
sbb
movsb
ss
mov
ret
cli
dec
sbb
push
push
jae
insb
call
subl
cmp
dec
popf
push
inc
sbb
cs
sbb
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
aam
sbb
or
cli
jg
jle
cmpl
es
or
sub
pop
pop
mov
dec
add
adc
push
mov
dec
pusha
cli
or
mov
lret
inc
xchg
mov
add
sub
and
push
mov
stos
pop
daa
sub
mov
imul
loope
repnz
lret
xor
sti
pop
fistpl
xor
cwtl
jl
dec
push
jnp
xchg
lahf
add
popa
js
inc
or
jne
inc
andl
inc
xor
fsubl
lods
dec
shl
cltd
loopne
daa
pop
dec
pusha
rep
popa
les
cld
loopne
mov
or
fbstp
push
stos
jge
cmp
dec
xchg
dec
lret
inc
xchg
mov
je
movsl
mov
hlt
push
xchg
fildl
or
pop
insl
mov
sbb
jl
mov
pop
jnp
in
inc
jle
data16
cmp
adc
into
outsl
and
jp
ja
mov
cltd
sbb
add
push
mov
sarb
sbb
int
mov
jno
mov
cmp
mov
sbb
int3
pop
sub
ds
decl
out
fidivrs
nop
ret
mov
jl
out
stos
aas
xlat
mov
aam
int3
and
lahf
sbb
test
pop
divl
popf
push
fcmovu
and
call
push
ljmp
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
mov
or
cli
jg
jle
xor
dec
lock
push
jge
cltd
pushf
ja
dec
adc
xchg
std
adc
pop
outsl
das
daa
cli
outsb
bound
mov
mov
out
sub
xor
dec
rorb
fstps
xor
sbb
or
cmp
mov
inc
scas
iret
cli
xchg
scas
push
imul
add
push
inc
adc
xor
in
pop
in
xchg
popf
mov
sbb
shlb
test
test
imul
push
xchg
rorl
outsb
sub
lods
out
divb
mov
cmp
push
sub
test
cmc
aad
jae
mov
out
or
aad
lret
mov
and
jecxz
sbb
gs
or
jge
or
inc
jle
sbb
fstps
rcrb
cmpb
insl
or
xor
out
push
roll
sahf
and
test
push
mov
fs
xchg
call
or
icebp
sbb
sahf
lret
les
dec
lea
lock
mov
rol
sub
inc
scas
in
test
mov
cltd
lods
sarl
in
scas
pop
lock
insb
add
enter
pop
rorl
jg
int3
inc
adc
mov
mov
flds
xchg
mov
pop
mov
insb
xchg
sbb
into
sti
push
test
xchg
hlt
sub
sbb
test
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
loop
ds
jle
cli
jg
jle
push
inc
push
pop
fistpll
mov
cwtl
mov
mov
mov
orb
clc
adc
mov
push
add
hlt
pop
outsb
dec
xor
pop
jbe
mov
and
add
cmp
iret
les
jge
add
lcall
inc
mov
scas
dec
iret
add
mov
inc
stos
hlt
out
je
xchg
pop
add
cmpsl
arpl
pop
push
popa
cmp
ljmp
cld
stc
push
ja
mov
add
incl
pop
mov
jns
nop
loop
mov
rorl
insb
or
sub
mov
mov
and
push
in
ljmp
push
jle
inc
ret
cmp
sahf
call
bsf
call
adcb
mov
mov
int
mov
cmp
dec
mov
sub
and
jle
lds
jmp
add
fisubl
and
repnz
leave
adc
add
xor
in
test
dec
pop
sbb
mov
inc
inc
mov
push
pop
idivl
push
inc
jns
mov
clc
hlt
iret
push
push
scas
ja
sarb
push
xor
into
xchg
dec
in
int3
sbb
fwait
in
xchg
pop
mov
arpl
es
rolb
sbb
or
fistps
pop
adc
sarb
ds
push
cltd
sub
xor
insl
fcompp
int3
or
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
shll
jle
cli
jg
jle
dec
inc
push
sub
jl
aas
int
sbb
cs
push
lret
iret
fidivrs
lret
lock
cmp
ret
mov
ret
movsl
adc
xchg
ds
ljmp
xor
jp
arpl
lods
je
insb
mov
icebp
add
mov
xchg
inc
mov
scas
or
push
or
les
pop
sbb
cld
das
cmp
inc
xor
mov
sbb
push
push
sbb
jl
mov
inc
movsb
insb
mov
jecxz
xchg
mov
add
ds
daa
or
add
sbb
and
hlt
into
pushw
cmpsl
dec
popa
sbb
cltd
frstor
mov
outsl
and
xor
mov
adc
xorl
int
xchg
inc
add
test
mov
mov
inc
mov
cmp
and
lods
xor
jp
shl
pop
ficomps
mov
lret
lea
or
mov
cmp
std
pop
test
push
pop
les
xor
cmc
sbb
sbbb
negb
and
pop
fnsave
or
xchg
xor
sub
popw
addb
outsl
push
jnp
mov
dec
xchg
popf
inc
call
repnz
idivl
xchg
sub
sub
xchg
push
and
push
xor
pop
out
mov
int3
push
xchg
mov
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
mov
pop
jl
jle
dec
pop
insl
push
pop
pop
roll
shl
cmp
push
xor
jge
xchg
dec
stos
jl
mov
or
mov
out
dec
lcall
iret
jmp
enter
cmp
insb
cltd
inc
pop
push
jne
addr16
je
nop
jae
ds
mov
or
cwtl
xlat
sahf
add
out
inc
push
push
mov
out
jb
xor
lock
adc
in
mov
out
adcl
jmp
arpl
cmp
hlt
mov
ds
jb
or
insb
sbb
loop
push
cmp
jne
mov
add
or
int
rclb
mov
push
push
ds
mov
sub
fs
cmp
mov
mov
mov
repz
dec
cmp
cmpsb
jecxz
adc
out
fs
fwait
ret
adc
aaa
mov
push
adc
mov
testb
negl
call
and
jg
lret
dec
sub
sbb
push
jnp
inc
fsts
cmpb
sbb
sub
repz
xchg
scas
sbb
mov
sbb
js
push
fildll
movsl
repz
push
xor
adc
fstl
mov
rolb
inc
lock
es
scas
stos
sub
mov
xchg
pop
cmp
pusha
lods
add
add
xor
mov
gs
mov
shl
jno
movl
add
mov
cmp
aaa
xor
cwtl
ret
xor
xor
inc
inc
xchg
jl
xchg
sti
ja
lcall
jnp
inc
lock
adc
adc
dec
add
addb
push
inc
lahf
cmp
inc
stos
bnd
lods
push
push
xor
jecxz
rcl
sub
roll
xor
pop
cmp
dec
outsb
mov
icebp
jge,pt
cltd
scas
fstps
enter
sbb
sbb
das
jp
mov
adc
adc
push
das
or
cmp
add
jbe
xchg
lds
pop
mov
mov
repnz
add
dec
mov
or
and
aas
push
insb
mov
lds
das
dec
push
dec
adc
and
imul
rolb
sub
mov
inc
sbb
jl
movb
adc
jecxz
lcall
repz
gs
fistps
sub
mov
mov
fdivrl
je
cld
andl
jo
jnp
pop
jmp
jns
insl
mov
and
cmp
and
inc
les
test
inc
add
stos
aaa
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
js
jmp
pop
jl
jle
das
xchg
gs
cmp
fwait
dec
pop
cmp
lea
addl
scas
fcmovbe
xchg
sbb
ds
lock
call
rcrb
mov
adc
rclb
mov
nop
mov
popf
sub
out
and
fstpl
ret
push
add
xchg
hlt
sub
in
jecxz
stos
mov
in
out
bound
dec
scas
stc
jae
pop
jle
pop
and
movsb
push
popf
lods
jmp
ror
xchg
add
arpl
push
rorb
jno
int
jge
jmp
xlat
ror
jbe
repnz
std
mov
jno
repz
add
cmpl
lret
mov
dec
sbb
cs
pop
shr
push
repz
dec
pop
sahf
mov
jae
xor
dec
lds
cltd
lret
xor
scas
int3
push
out
or
sub
mov
dec
mov
push
int3
divb
jl
or
cmc
aas
jns
pusha
arpl
std
push
mov
mov
adc
mov
mov
icebp
xchg
lock
fs
sub
xchg
frndint
pop
dec
negb
xlat
push
cmp
mov
and
ret
out
lahf
jle
notb
sarb
cmp
cmp
inc
loopne
int3
mov
xchg
xchg
adc
jle
mov
outsb
mov
sbb
enter
xor
fisubs
mov
dec
dec
mov
jmp
jbe
cli
sub
out
das
das
mov
inc
mov
xorb
into
cltd
pop
add
adc
int3
pop
aas
cmp
arpl
xchg
sub
add
shll
xchg
data16
mov
mov
xor
jle
out
repz
jl
scas
add
hlt
push
lods
shlb
shrd
frstor
lea
test
push
push
jb
popf
mov
xchg
ret
cli
jns
and
imul
mov
cs
arpl
stos
pop
mov
out
gs
pop
jne
lods
cmp
xchg
test
test
mov
adc
shl
daa
xchg
sbb
xor
enter
sub
ret
adc
iret
daa
dec
mov
pop
pslld
inc
loopne
push
inc
xor
ret
sbb
add
pop
mov
sub
addr16
jo
push
jg
inc
inc
mov
ja
xchg
cld
xor
add
ja
cmc
mov
xor
mov
mov
and
js
add
idivb
lahf
cmp
mov
das
orl
aas
negl
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
pop
inc
jmp
pop
jle
pop
jl
jle
cld
inc
pop
xchg
add
pop
addr16
add
lret
dec
lock
cltd
cmpsb
push
xchg
push
dec
sbb
push
xchg
adc
jns
test
mov
xchg
imul
les
add
push
jbe
fimuls
mov
mov
movsl
xlat
and
lret
adc
mov
sub
jle
daa
in
add
or
gs
jb
repz
lahf
ficompl
cmpsb
push
ljmp
lods
mov
dec
add
cmp
dec
fisttpl
push
icebp
xchg
cwtl
push
dec
dec
scas
mov
dec
shl
add
dec
stc
sbb
mov
fidivrs
pop
movsl
cwtl
xchg
aam
cmp
adc
cli
jb
jne
out
xchg
cmp
sub
repz
daa
cmpb
in
adc
pop
sub
rcrb
sub
out
mov
mov
mov
cld
ss
jecxz
and
cmp
inc
xchg
sub
mov
cmp
sbb
inc
cs
fs
outsb
mov
push
adc
pop
pop
inc
cmp
inc
xor
and
jne
cwtl
test
sbb
mov
lods
mov
xchg
pop
or
mov
les
in
xor
mov
xor
shrd
push
pop
stc
sub
nop
enter
sub
popf
ss
dec
add
ret
sbb
add
push
inc
xchg
push
jnp
out
lods
jno
push
dec
gs
and
pop
addl
lock
mov
cmp
jmp
adc
out
mov
mov
jecxz
bound
imul
ret
pusha
sbb
int
ret
aaa
fstl
pop
popf
push
cmovge
addb
jmp
mov
jne
and
add
xchg
xor
dec
xchg
loope
mov
iret
mov
push
push
xchg
xchg
cmp
stos
lods
imul
bound
jecxz
xor
out
fimull
jno
outsb
mov
add
xchg
cmp
and
lea
mov
cmc
fistl
pop
xor
pop
cs
int3
inc
cmc
jno
fistl
addb
inc
test
pop
cli
push
inc
lret
jp
repz
fisubs
pop
push
mov
imul
movsb
xchg
push
and
sarl
sbb
jmp
ja
bound
jbe
xchg
sub
stos
push
push
adc
push
fisttps
pop
fnstsw
pop
in
test
ret
sarb
sbb
loope
test
ret
mov
or
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
or
jle
jl
jle
sbb
mov
out
cmp
xchg
subb
int3
mov
or
mov
mov
sbb
xchg
xchg
mov
mov
lcall
or
or
mov
inc
enter
dec
lret
xchg
xchg
mov
das
adc
in
or
out
popa
addr16
mov
aam
or
pushf
fistps
xor
cmp
adcb
dec
cltd
cmp
xor
aaa
cmp
jp
ss
ljmp
andb
pop
or
nop
loop
iret
dec
inc
inc
adc
js
sti
xor
jg
cwtl
mov
in
add
insb
out
test
setp
leave
je
dec
notb
xor
fbstp
push
faddp
xor
sub
hlt
sbb
mov
loope
xchg
pusha
pop
cmp
xchg
shrl
inc
gs
pop
jg
daa
jge
js,pt
inc
das
cmc
std
and
test
orb
stos
fstp
rorb
in
and
cmpsb
stos
into
xor
stc
sbb
ss
sbb
mov
rorl
iret
sbb
sbb
int3
popa
pop
pop
lods
dec
mov
hlt
inc
jg
dec
int
fimull
mov
xchg
dec
test
fdivrl
outsb
push
and
xlat
loope
cs
es
das
je
cmp
push
aad
adc
mov
adc
pop
mov
adcb
xchg
mov
rorl
sub
insb
jns
in
pop
xchg
js
push
add
mov
fbstp
subb
jo
add
leave
mov
cmp
fwait
aaa
inc
sbb
inc
lds
mov
call
out
push
sub
movsb
mov
xchg
sbb
es
inc
sbb
test
xor
mov
ret
or
sub
xchg
sbb
xchg
mov
bound
popa
dec
mov
mov
cmp
mov
mov
xor
cmc
xchg
add
std
jl
mov
mov
inc
out
inc
movsl
enter
scas
loopne
xchg
push
jecxz
rcll
jne
mov
clc
aas
push
push
icebp
outsl
sbb
inc
stc
hlt
subl
pushf
fsubrs
ja
xchg
nop
adc
cmpsl
push
xchg
aas
dec
mov
setp
leave
xchg
lods
push
fstpt
mov
mov
aad
pop
test
sti
adc
je
imul
push
aad
add
jg
imul
jl
push
adc
inc
leave
push
sbb
and
and
mov
cmp
clc
jmp
add
dec
popa
jno
jne
xor
jle
mov
and
pop
jl
jle
cwtl
sbb
dec
ss
dec
add
jl
xchg
enter
push
mov
mov
rcll
adc
stos
data16
mov
mov
rcl
xor
xchg
dec
stc
mov
nop
movsl
out
fisttpl
sub
jecxz
roll
adc
jl
nop
mov
mov
jne
js
and
cmp
aas
ret
jp
adc
shll
pop
mov
adc
repnz
fsubrl
add
xchg
cmpb
test
pusha
jbe
repnz
push
jle
movsb
lock
mov
cmp
jecxz
inc
push
inc
insb
shll
leave
es
loopne
out
andl
int
popf
pop
clc
stc
push
push
pop
fbstp
pop
xor
or
sub
push
insl
test
in
sub
iret
sbb
mov
inc
dec
adc
inc
movb
mov
sub
mov
cmp
clc
jle
jge
mov
js
mov
movsb
fwait
pop
ja
jmp
mov
inc
lcall
push
sbb
xor
cmpsl
inc
jecxz
mov
orb
add
fs
mov
clc
or
fsubrl
fbld
cmpl
ja
jnp
mov
movsl
fldt
jle
int
ficomps
sub
jo
mov
dec
and
fsubrs
les
dec
or
shl
out
mov
arpl
fs
mov
cmp
cwtl
addr16
add
jno
test
repz
jne
fs
es
loopne
inc
sub
popa
mov
les
popf
bound
fildll
stos
cli
aaa
adc
out
and
xor
insl
pop
inc
push
sbb
add
cmpsb
mov
or
push
adc
insl
mov
mov
adc
sbb
cmpsb
or
das
jle
and
bound
movsb
ds
sbb
clc
push
aaa
pushf
sbb
and
pop
lret
cmp
lcall
push
sbb
rolb
lea
xchg
shll
fcmovnu
fwait
popa
mov
cmp
push
adc
jg
roll
mov
mov
adc
gs
and
aam
mov
les
inc
stos
xchg
dec
push
mov
popa
inc
inc
inc
jb
repnz
cli
loop
cmp
ljmp
dec
push
mov
inc
sarb
pop
jle
fdiv
mov
dec
mov
adc
sub
leave
scas
cmp
push
out
pop
test
dec
xor
push
sarl
mov
and
sub
mov
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
aaa
es
push
pop
jl
jle
jb
mov
repnz
rcl
mov
push
add
test
mov
lret
jbe
pop
pop
je
mov
test
sub
cmp
idivl
in
lods
scas
fs
xor
pop
clc
sbb
aas
pop
andl
shrb
and
aam
mov
sbb
lods
daa
pushf
fldcw
cmc
push
dec
inc
jl
mov
or
fmuls
xchg
daa
inc
aad
cmp
inc
test
das
leave
fcoml
xor
pop
mov
jns
mov
in
ss
pop
loopne
cmp
loop
or
fmul
xchg
fwait
data16
repnz
dec
test
mov
rclb
and
pop
addr16
xlat
fcmovbe
pause
cmpsb
pop
adc
scas
sub
pop
dec
test
adc
push
mov
mov
andl
xor
nop
cli
insl
xchg
popa
outsb
inc
rcll
mov
sbbl
jmp
test
adc
jl
je
mulb
mov
pop
rcll
mov
icebp
cmpsb
or
mov
lahf
jecxz
mov
mov
fdivl
inc
inc
iret
xor
insl
xor
into
imul
je
inc
imul
arpl
pop
mov
pop
jecxz
jo
stc
push
cwtl
in
mov
fists
insb
xor
sahf
adc
add
add
mov
mov
lock
call
mov
out
adcl
cwtl
dec
jbe
add
movsb
xor
rcrl
inc
or
or
out
lea
push
sbb
xor
orl
mov
imul
add
sub
dec
jecxz
sub
lcall
push
aam
jo
inc
mov
jnp
pusha
jo
repnz
sub
loopne
shlb
cmp
loop
sbb
mov
lcall
movsl
leave
insl
add
sbb
jge
sub
subl
addb
inc
mov
je
fst
add
dec
jle
mov
mov
push
inc
pop
loop
sub
and
dec
jl
jl
inc
add
into
xchg
es
mov
sub
pop
adc
fwait
stos
cmp
push
xorl
push
pushf
int
and
mov
lods
jle
sub
lcall
mov
movsb
cwtl
sbb
push
outsl
sub
adc
xor
sbb
test
mov
repz
jmp
push
dec
stos
pop
mov
lds
sbb
and
cmpsl
ret
cmp
push
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
icebp
loop
mov
jl
jle
xchg
fwait
pop
gs
scas
pusha
jmp
mov
mov
jbe
sbb
mov
xchg
and
jmp
xor
bound
inc
adc
std
andl
inc
cmp
insb
push
mov
cld
sbb
jnp
push
mov
scas
jg
dec
stos
jmp
in
fnstsw
je
dec
cli
and
xor
mov
insb
push
arpl
jns
mov
ds
out
cmpsl
push
ljmp
pop
jne
mov
loop
jne
leave
dec
push
rcr
cmp
je
xchg
pop
mov
and
mov
out
inc
push
mov
xor
dec
pop
aad
dec
popa
lods
add
insl
divb
sub
xor
xchg
adc
dec
leave
lea
mov
sub
mov
cmc
mov
cmpsl
repz
in
sti
shlb
sub
clc
xlat
adc
je
xorl
scas
inc
mov
cmp
mov
sarb
dec
dec
fsubr
sbb
aam
push
or
mov
imul
or
arpl
mov
jmp
imul
jo
push
pop
sbb
add
push
mov
hlt
out
fmuls
ret
mov
sti
ljmp
inc
jge
inc
jg
and
enter
mov
xor
jmp
push
add
cmp
mov
mov
sub
dec
xchg
in
pop
fmul
rcr
dec
xchg
cmp
js
aaa
in
jb
cmp
jnp
push
push
repz
imul
ret
xor
arpl
gs
les
dec
mov
testb
and
addl
pop
jb
pop
inc
out
jmp
sub
sbb
push
xor
insb
sbb
pop
sub
negb
sub
test
jb
jge
xor
outsb
sti
pop
loop
or
cld
aam
xchg
xor
jo
fidivrl
dec
push
push
nop
jne
in
ret
push
cmp
ja
xor
idiv
aad
pushf
insl
das
mov
lret
jb
ds
mov
pop
mov
mov
lds
leave
stc
pop
and
push
pop
xchg
or
pop
subb
cmpsb
daa
int
insb
lea
sbb
inc
pushf
inc
mov
jns
loop
sub
stos
fucom
test
jb
cmp
scas
popf
xor
scas
jmp
mov
dec
ljmp
dec
cmpsl
mul
in
scas
xchg
pop
insb
in
mov
loopne
push
sub
push
sbb
and
mov
jmp
pop
pushl
loopne
movsb
inc
sbb
pop
pop
xchg
and
pop
aas
cmp
add
mov
scas
mov
xor
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
in
mov
pop
jl
jle
outsb
xchg
lods
cli
cmpsl
adc
xchg
jae
lods
add
mov
push
sub
cli
mov
mov
mov
nop
add
leave
in
or
sahf
das
repnz
and
xchg
icebp
bound
iret
inc
mov
mov
das
leave
or
callw
jg
icebp
push
aam
iret
fdivrs
lcall
repnz
andb
je
push
pushf
xor
dec
jo
cmp
sub
xor
xchg
lock
jg
add
sub
js
jno
shll
pop
push
int3
stos
lcall
icebp
out
push
and
mov
cmc
dec
xor
imul
xlat
dec
add
iret
daa
cltd
and
mov
mov
fcomps
xor
pop
jp
scas
xlat
mov
jno
int
andb
dec
fisubs
test
dec
dec
addb
and
imul
insb
jge
and
test
mov
fisttpll
sub
cmp
mov
xor
les
pop
and
iret
jp
push
add
xchg
out
xchg
xor
xlat
sub
shll
sahf
xchg
mov
add
sub
xchg
push
jae
mov
mov
loope
mov
inc
loope
inc
bound
flds
mov
push
jg
dec
leave
push
int3
std
sbb
rorl
adcl
aam
data16
repz
adc
adc
fpatan
adc
imul
mov
jns
jmp
inc
addr16
lret
push
mov
jge
dec
stos
push
push
test
xlat
add
sbb
jg
hlt
insb
push
out
loope
nop
movsb
cmc
adc
arpl
mov
jp
test
fistpll
addr16
jno
or
std
test
movsl
cmp
push
dec
int
insb
push
xchg
stc
in
mov
les
sub
sbb
sqrtps
cli
imul
push
inc
mov
repz
cmp
or
int3
bound
je
pop
jecxz
pusha
sbbl
sbb
sti
xor
ret
dec
subl
jp
sbb
xor
dec
aas
inc
icebp
mov
cmp
xor
jnp
es
adc
mov
fsubrl
jg
mov
dec
xor
les
fsubr
xlat
add
insl
insb
mov
fnstcw
ja
cmp
jae
sub
test
int3
fisttps
sbb
lods
adc
jmp
out
pop
xchg
imul
add
mov
inc
adc
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
sbb
dec
xchg
imulb
jle
jl
jle
lods
inc
or
or
adc
mov
arpl
mov
sahf
sbb
aaa
add
repnz
mov
push
popf
and
in
mov
add
fidivl
mov
sbb
cmp
imul
push
sub
clc
push
aas
jns
inc
cwtl
shll
and
gs
jne
xor
xor
neg
ljmp
jae
push
mov
rorb
mov
add
js
and
dec
rcrl
into
or
pop
les
cwtl
loope
enter
push
pop
fwait
fwait
dec
inc
dec
out
sbb
jle
cld
mov
mov
int
sub
popf
fidivrs
lds
xor
rorb
adc
sti
jno
and
insl
mov
inc
fwait
inc
add
xchg
test
mov
pop
jmp
dec
faddp
jl
or
ss
jne
adc
mov
cmpsb
stos
and
jge
sbb
into
ret
inc
psubw
imull
into
test
mov
out
push
rcr
subl
jmp
lret
mov
mov
fwait
push
cmp
mov
lds
or
xchg
xchg
inc
cmp
mov
cwtl
mov
cld
push
lods
xor
mov
inc
cltd
fildl
outsl
jmp
sub
adc
dec
add
jle
out
adc
div
enter
pop
clc
push
ss
sub
push
xchg
mov
outsb
jae
lea
lods
or
outsl
xor
frstor
inc
push
pushf
int
xor
xor
popf
inc
pop
cmpsb
sub
pop
mov
pop
sub
aad
nop
mov
imul
sub
or
js
adc
jbe
test
stc
pop
and
push
aam
mov
ficomps
pop
adc
or
cwtl
dec
int3
nop
xor
cmpsl
loope
cmpsl
hlt
mov
sub
ficoml
and
and
ja
hlt
mov
pop
daa
xchg
push
cld
xchg
test
jle
adc
pop
adc
and
inc
mov
pop
mov
icebp
imulb
data16
push
mov
rclb
loope
dec
and
mov
out
pop
sbb
iret
push
arpl
xor
add
inc
jecxz
mov
cmp
in
mov
popf
clc
cmp
and
push
in
sub
add
or
add
dec
cmp
push
mov
push
push
sti
movsl
and
movsb
sbb
loopne
pop
push
ds
mov
mov
add
fiaddl
test
push
idiv
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
out
shrb
jle
pop
jl
jle
sbb
and
clc
push
mov
dec
push
packsswb
push
adc
cmp
dec
pop
aas
loopne
and
dec
mov
ret
popa
lea
insl
adc
adc
xchg
push
inc
stc
pop
sub
pop
sbb
enter
lods
ja
inc
pop
push
pop
or
sahf
ljmp
int3
aas
cmp
xlat
test
sbb
scas
arpl
push
repnz
stos
xchg
andl
push
push
loop
lock
mov
jbe
sbb
mov
stos
repnz
mov
sub
cmp
orl
ficoms
mov
add
add
ret
ljmp
clc
aad
jno
aad
stc
mov
in
lods
xchg
pushf
rcrb
push
mov
adc
jns
sbb
jl
xchg
icebp
pusha
adcb
outsb
adc
push
or
mov
jno
push
jbe
ret
or
cmc
fcmovnb
fstps
mov
jmp
mov
cmpl
xchg
fs
insb
jl
xchg
and
xchg
scas
mov
mov
push
xor
sbb
in
mov
xchg
ret
pop
mov
mov
insb
xor
inc
cmpsl
shlb
mov
insl
pusha
jne
das
push
cmp
daa
stos
pop
movsl
dec
imul
xor
cmp
pop
add
lea
push
scas
jnp
add
inc
dec
sbb
test
cmpsl
add
sbb
push
lods
mov
inc
imul
iret
test
shll
cmpsl
add
in
aad
mov
inc
push
jl
adc
sub
mov
ret
gs
repz
or
bound
jns
inc
lods
jo
outsl
inc
sub
sub
lds
and
mov
adc
and
add
lahf
pop
orb
idiv
jmp
pop
mov
pop
inc
xchg
xchg
and
insb
mov
insl
lahf
bound
out
mov
iret
xchg
dec
mov
jecxz
jae
push
fistps
fcomp
mov
mov
or
std
lods
inc
popf
xchg
xor
mov
mov
jns
or
clc
jle
sbb
cwtl
xor
adc
cmp
adc
inc
fisubrl
pop
push
pusha
mov
popa
fsubs
enter
cltd
icebp
rcrl
cmp
adc
cmp
jns
das
push
or
xor
push
push
cmp
sbb
lcall
ss
jmp
ja
sbb
sarl
shrd
pop
xor
pop
mov
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
and
outsb
cmp
jle
sub
jle
daa
adc
js
sbb
pop
sub
cmc
xor
rorb
push
adc
adc
jge
test
out
stos
movsb
stos
call
nop
es
or
push
jo
xchg
jg
sbb
out
js
clc
addr16
or
pop
mov
shrl
les
pop
or
xor
sub
aad
in
hlt
sub
pop
dec
mov
clc
into
outsl
cmpb
pop
icebp
mov
xor
rorb
out
jae
test
or
xor
dec
shr
mov
jnp
out
ljmp
mov
pop
aas
jmp
andl
imul
imul
cmp
aam
xlat
xor
fisttps
data16
ljmp
mov
and
push
jl
adc
push
push
popf
jge
in
pushf
mov
sub
mov
in
fcoms
nop
jae
jb
ja
or
push
rcrb
adc
test
ficomps
add
shl
rorb
add
jl
fists
rclb
ja
or
cmp
or
sbb
xor
push
jne
repz
test
and
adc
sahf
daa
mov
aaa
test
inc
dec
and
das
int3
xlat
mov
dec
nop
lahf
dec
mov
xchg
add
stc
filds
adc
pushf
outsb
fstpl
inc
push
rclb
lods
lock
scas
insb
fimuls
xchg
lea
imull
adc
push
mov
fbld
mov
in
data16
or
and
pop
jl
stc
cmpsl
bound
adc
jns
outsb
dec
push
dec
ljmp
std
mov
rcrl
and
dec
mov
test
mov
inc
xchg
pop
sbb
xor
dec
and
mov
dec
shrl
mov
loope
icebp
fsubrl
bound
push
gs
dec
and
lock
and
jmp
adc
test
or
sbb
push
xor
sbb
xchg
mov
lcall
inc
or
aas
xor
hlt
adcb
popa
sbb
pop
push
leave
flds
fbld
loop
dec
mov
dec
mov
test
inc
sub
enter
fcoms
fmuls
repz
or
dec
rcrb
sti
add
in
add
and
xchg
mov
jae
lock
gs
rcl
out
mov
pop
loope
push
dec
adc
lcall
jae
and
std
cmpsl
add
pop
incl
das
jge
jmp
in
pushf
xor
pop
pop
divb
pop
mov
push
dec
jle
jg
xchg
cld
daa
popa
sbb
ja
pushf
rolb
hlt
push
fucomi
lahf
test
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
cmp
cmc
int3
fldz
fdivs
xor
fwait
rolb
pop
out
xor
jmp
insl
in
add
push
jne
fdiv
das
and
out
in
push
push
shr
and
popa
inc
daa
push
mov
insb
adc
fistl
ficoms
fs
mov
sbb
aas
enter
pop
pop
cmpsb
ja
aas
arpl
imul
and
sbb
pop
dec
mov
mov
pop
dec
sti
sti
or
dec
cli
lret
sub
in
fimuls
imul
and
dec
lret
aaa
int
mov
mov
mov
out
xchg
arpl
aaa
dec
in
jmp
lods
sti
and
mov
jns
push
ljmp
js
mov
push
jge
cmpsl
sahf
and
push
push
test
daa
repnz
adc
sub
cmpsb
cwtl
in
aad
jb
push
dec
sbb
cmp
in
add
js
out
cmp
cmp
adc
aam
sti
popa
dec
ret
call
out
push
add
lods
or
jae
popa
syscall
jo
aaa
lea
pop
idivb
scas
test
sub
or
xchg
aaa
mov
push
add
mov
add
inc
sarl
bound
out
cli
sbb
push
lds
loopne
dec
cli
push
cmp
mov
mov
add
in
arpl
cwtl
sbb
push
inc
fcmove
mov
add
cld
jp
loope
lock
es
lahf
adc
fwait
in
in
or
xchg
int
movsb
lods
or
inc
arpl
popa
or
imul
xor
push
cld
xor
or
aaa
pushf
push
mov
repnz
adc
rcl
sub
out
inc
dec
xor
mov
mov
sahf
jle
mov
jg
dec
cli
jno
mov
inc
jl
loopne
lcall
lcall
push
jne
and
cmp
hlt
outsl
add
pusha
icebp
jmp
cmpsl
in
sarl
and
inc
leave
test
mov
inc
adc
aad
das
pop
pinsrw
iret
pop
repnz
or
fisubrl
mov
mov
add
les
xchg
cmc
sahf
into
pop
sub
jle
stos
cmp
fisubrl
push
pusha
jnp
lret
aad
rorb
or
pop
jmp
push
sub
sub
out
cmp
cltd
and
outsb
loope
push
push
mov
or
outsl
imul
jne
pop
sub
mov
mov
in
ja
insb
dec
add
cwtl
pop
in
insl
in
mov
xchg
mulb
fisubl
sub
mov
mov
popl
cs
push
pop
cli
leave
and
push
lahf
divb
sar
or
ja
adcb
sbb
gs
push
int3
push
cmpsb
popf
or
pusha
shrb
loopne
dec
outsb
orb
xor
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
adc
mov
xchg
or
mov
fstps
and
add
xchg
push
mov
jp
jns
popa
push
xlat
fcmovb
sub
imul
and
dec
mov
rcr
sbb
or
push
pop
mov
cld
shrb
push
ret
dec
or
jg
cli
insb
dec
int
jne
push
mov
mov
ss
sub
add
lahf
adc
syscall
es
into
stos
pop
test
mov
jle
out
and
mov
ds
imul
fmul
lret
stos
fldl
cmp
imul
inc
lds
lea
xor
fwait
movsl
out
fcomps
in
outsl
sbb
popa
push
lods
adc
cmp
arpl
adc
inc
ss
scas
aad
xor
popf
xchg
hlt
push
and
jg
mov
mov
fsubrl
lods
add
clc
inc
jmp
clc
mov
mov
adc
arpl
ja,pt
popa
pop
lods
pusha
lea
mov
imul
sub
xorl
mov
scas
cmp
outsb
popa
mov
push
fistl
inc
movsb
fimull
les
repnz
stos
sbb
xchg
negb
adc
imul
outsl
dec
adc
or
fldenv
push
ljmp
push
lods
shl
lahf
rcrl
push
fimuls
loop
popf
outsl
test
push
loop
xchg
pop
loopne
out
cli
jno
mov
mov
lock
mov
enter
mull
jns
in
push
cmp
xor
imul
xor
ds
mov
mov
das
rol
push
sbb
adc
xor
dec
adc
cmp
or
or
xor
add
call
xorl
repz
xor
jle
dec
mov
notb
add
xor
arpl
and
sub
insl
fisubl
sbb
test
inc
int
orb
xchg
sub
enter
mov
leave
pop
iret
cmc
das
and
btsl
xchg
mov
shrb
jl
das
sbb
in
sub
inc
daa
jb
mov
fadd
ja
and
push
repnz
mov
or
outsl
lahf
jecxz
pop
push
cli
pop
add
std
inc
sahf
and
pusha
xchg
hlt
xchg
gs
mov
sbb
pushf
xchg
mov
lret
dec
pop
mov
push
inc
sub
leave
jp
adc
in
mov
outsb
shl
sbb
arpl
mov
test
loop
mov
adc
mov
mov
sbb
adc
neg
inc
mov
dec
mov
std
lret
out
inc
scas
inc
jno
dec
aas
or
pop
loopne
sub
mov
lds
dec
pushf
pop
adc
or
outsl
pop
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
fs
ja
push
aas
jle
sub
jle
xchg
sub
jnp
pop
stos
or
int
mov
sbb
ljmp
rcrl
fistpll
popa
mov
arpl
xor
lods
fistl
or
mov
rol
daa
adc
out
pop
les
clc
jmp
and
sub
mov
in
jno
push
sahf
push
mov
sub
cld
jp
gs
jmp
lcall
sbb
inc
fxtract
and
push
inc
mov
mov
sarb
dec
mov
daa
xor
jmp
ja
clc
jecxz
mov
shll
outsl
call
pop
xlat
dec
add
sub
pop
movb
clc
int3
adc
lea
or
loop
xchg
arpl
into
mov
repz
je
imul
adc
out
sbb
push
sbb
adc
das
xor
add
pop
fimull
std
push
jno
mov
das
divb
in
xor
scas
stos
out
xorl
mov
dec
fsubr
outsb
pop
dec
divb
int3
mov
sbb
lcall
jnp
nop
dec
add
cmc
aas
sub
into
aam
inc
pop
add
adc
shrl
lea
cmp
pop
lods
pushf
stos
enter
out
adc
add
out
jae
pop
inc
iret
push
cmp
lea
dec
dec
push
jecxz
dec
std
push
sbb
sub
mov
fwait
dec
out
jns
ficoms
outsb
bound
test
jbe
das
pop
mov
sbb
mov
cmpsl
xor
inc
fs
les
mov
aas
dec
push
outsb
lods
mov
lock
ljmp
nop
mov
jecxz
int3
mov
mov
cli
fwait
push
pop
inc
mov
insb
sbb
xor
addr16
lcall
xchg
data16
fcomps
mov
loopne
push
cmc
jne
pop
call
lods
jge
dec
mov
lret
cmp
psubsb
ljmp
sub
xor
ret
xchg
pop
push
psubw
jp
js
in
cmp
inc
xor
mov
dec
push
pop
mov
cli
mov
ret
arpl
cli
fidivrs
insb
fstpt
pushf
jecxz
pop
and
out
lods
mov
out
inc
stos
ss
ja
lcall
pop
dec
sub
dec
aam
inc
clc
jae
mov
ss
ss
or
cmp
imul
lods
fs
mov
das
sub
clc
ss
pop
or
jecxz
popa
mov
pushf
popf
ss
and
test
stos
shrb
cli
js
jbe
pop
push
cwtl
inc
mov
jecxz
jae
fsub
pop
and
and
ja
jge
xor
and
aam
movsb
js
jl
or
test
and
lods
ret
aas
inc
pop
out
jnp
mov
ds
sbb
shr
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
or
cmp
mov
lret
adc
and
jmp
push
inc
pop
cmp
xchg
jns
xor
fistps
into
cmpsb
mov
in
mov
pop
mov
mov
xor
repz
sub
add
mov
iret
mov
cmp
mov
fdivrs
mov
pusha
sbb
xchg
xlat
icebp
adc
push
jae
repnz
cmpsl
movsl
cmpb
xchg
fisttps
inc
mov
mov
outsl
xchg
lods
pop
clc
pop
cmp
mov
push
int
lret
and
jb
xor
lret
adc
sub
push
enter
shlb
adc
sub
add
push
fsubrl
jb
pop
inc
sub
jnp
xchg
scas
movb
cmpsl
xchg
sub
add
push
lods
push
mov
jle
mov
int3
loope
inc
sub
or
jae
jb
push
or
aad
inc
aam
test
xor
add
inc
sbb
add
sub
daa
aam
jge
mov
iret
cmp
cs
nop
imul
adc
xor
pop
cwtl
sbbb
add
rorl
mov
sub
or
ljmp
hlt
dec
pusha
sub
mov
sbb
and
jge
mov
adc
pop
call
loop
data16
iret
cmp
or
cmpsb
inc
dec
insl
loopne
cltd
ljmp
lret
loope
dec
ret
mov
out
adc
data16
xlat
call
cmc
lahf
pushf
fs
jecxz
aas
std
out
add
sarl
sbb
adc
inc
add
roll
push
jge
add
rolb
getsec
inc
add
fiaddl
add
cmp
es
repz
movsl
pop
xor
test
dec
inc
cmp
mov
sbb
decb
loop
and
inc
cltd
pop
or
nop
mov
fs
push
test
mov
call
leave
inc
fs
cmpsb
ljmp
dec
jb
fcoml
adc
imul
outsl
fdivrs
arpl
and
inc
testb
xor
lcall
daa
cmpsl
mov
xor
das
and
daa
or
xchg
adc
arpl
inc
out
outsb
repz
push
push
popf
movsl
mov
inc
push
jmp
jno
lahf
cmpsb
bound
ja
xchg
push
enter
les
mov
jnp
and
inc
adc
push
mov
fs
mov
or
popa
sahf
mov
xlat
cltd
out
pop
dec
js
xor
stos
cltd
push
adc
mov
jp
or
push
xchg
and
pop
aad
in
rcrl
rcrl
loop
insl
shlb
xchg
ja
pop
push
cld
sbb
inc
pop
lods
scas
jmp
jle
pop
mov
sub
pop
jp
pushf
mov
adc
cs
int
mov
stos
or
scas
clc
and
ss
ds
mov
mov
mov
add
pop
not
pop
sub
ss
add
enter
mov
inc
xlat
jmp
enter
add
sub
mov
ljmp
cmc
aas
dec
subl
leave
push
cld
call
or
add
xchg
cmpsl
jo
sbbl
mov
cld
cmp
into
notb
pop
imul
jg
rolb
add
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
shlb
sbb
iret
aam
mov
cmp
out
shl
cmp
cs
jae
jmp
mov
mov
push
clc
call
ja
jle
push
outsb
je
les
cmp
push
lret
out
call
test
lock
mov
xchg
cmpsl
sub
js
sub
addb
mov
mov
fcmovnb
in
fildll
push
test
jp
push
mul
xchg
in
aaa
adc
and
mov
les
inc
nop
pop
outsb
ljmp
dec
pop
lea
js
testl
or
mov
lods
int3
push
idivl
adc
fcomps
pop
inc
mov
dec
mov
call
xchg
xchg
push
inc
mov
jmp
sub
pop
mov
addl
sbb
push
and
pop
test
inc
push
push
aad
sub
mov
xchg
xor
jmp
inc
fsubrs
xchg
pop
mov
lock
popf
aas
out
adc
clc
or
in
or
aad
arpl
jae
fbstp
xchg
test
cs
fs
pop
jmp
lea
sbb
testl
jbe
out
jmp
das
fadds
test
inc
notl
enter
adc
lds
dec
roll
pop
xchg
cmp
pop
sbb
push
push
sub
stc
or
das
xchg
mov
das
std
pop
cmp
xchg
dec
std
je
and
pushl
call
test
jmp
and
in
popa
push
lret
xchg
imul
fmulp
les
mov
xchg
mov
popa
jp
adc
pop
push
aad
icebp
neg
in
daa
cwtl
and
adc
xor
ret
flds
lret
fistpll
cmpsb
push
or
cltd
js
clc
pop
pop
push
xchg
add
sbb
pusha
xchg
fwait
mov
inc
xchg
xor
mov
or
ss
lret
js
mov
loope
and
daa
faddp
pop
jg
mov
mov
lcall
lahf
out
fisttpll
ret
in
adc
mov
lea
stos
in
cmp
pop
cmp
mov
call
xor
lds
sub
lret
cmp
pop
adc
sbbl
push
test
push
lods
popa
jle
xchg
scas
mov
lods
insl
pop
inc
jl
enter
outsl
ret
pop
mov
mov
dec
mov
adc
cmpsb
xor
ret
push
mov
repz
xchg
dec
jp
inc
int
and
outsb
loope
test
lds
pop
aam
inc
mov
jno
rcrb
jns
lds
aaa
push
mov
jp
insb
outsb
mov
mov
and
xchg
lahf
and
push
sbb
imul
xchg
stos
sbb
inc
mov
mov
inc
push
jo
sbb
dec
dec
and
push
or
andl
xor
test
outsl
adc
enter
jbe
test
outsl
insl
loopne
and
or
jmp
shl
xor
xor
fucomi
jmp
insl
fidivs
lock
out
dec
inc
gs
cmpsb
mov
les
mov
cwtl
sbb
out
inc
mov
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
push
arpl
or
jle
add
faddl
jnp
adc
std
lds
clc
inc
push
daa
xor
repnz
sbbb
popf
imul
dec
push
push
pop
fwait
lods
xor
mov
movsb
out
test
pop
add
int
inc
pushf
psrlw
jmp
insb
addr16
push
cld
sub
push
jmp
dec
std
lcall
arpl
fdivrp
cmp
scas
dec
leave
fisttps
test
pop
mov
add
xlat
dec
push
cwtl
sub
inc
icebp
fwait
scas
lock
pop
fidivl
movsb
adc
adc
aas
xor
sti
mov
lock
dec
repz
notb
lret
and
sbbb
insb
mov
lea
add
sahf
mov
aam
push
jmp
lods
cmp
test
lahf
pop
int
jle
enter
xchg
push
pop
mov
loop
clc
cmp
and
pop
mov
jp
sub
inc
leave
lds
xchg
mov
push
push
fs
popf
push
outsl
lahf
out
sbb
lret
and
sar
in
lods
test
push
mov
hlt
and
insl
mov
or
push
stc
dec
jns
dec
icebp
cmp
xchg
or
mov
mov
lcall
insl
or
adc
rcll
mov
sti
data16
mov
push
out
add
fsubrs
xchg
xor
sbb
add
push
or
cltd
dec
into
icebp
hlt
mov
in
jno
cmpsb
pop
jle
pop
movsb
stc
test
adc
push
sbbl
pusha
cmc
sbb
jmp
mov
mov
lock
ja
rolb
xchg
out
ljmp
cmp
push
scas
out
addr16
fcmovu
inc
adc
cld
jae
es
mov
test
insb
mov
sub
jnp,pt
xchg
pop
jg
inc
fisttps
popa
lret
lret
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
jns
in
adc
jle
add
jecxz
cmc
push
push
or
jmp
aam
xchg
jb
testb
fwait
mov
insb
mov
push
or
sub
hlt
push
mov
js
mov
push
fidivrs
daa
pushf
popa
test
ds
xlat
imul
loope
in
ljmp
icebp
cmpsb
push
cmp
je,pn
incb
or
pop
cld
pushf
mov
or
xchg
and
jo
in
xor
std
push
mov
icebp
sahf
jmp
out
adc
popf
sub
sub
cmp
mov
es
mov
ret
sbb
inc
push
repz
jle
xchg
xlat
sbb
repz
and
inc
sbb
cmpsb
stos
dec
cmp
icebp
pop
aas
cmpsl
mov
add
sub
into
push
jno
jg
push
push
addl
xchg
jns
arpl
adc
sar
add
mov
cli
ljmp
loopne
jbe
pop
inc
add
xchg
jg
stos
mov
mov
xor
insl
add
ret
xchg
inc
loop
xor
lods
push
insl
icebp
enter
or
mov
std
scas
insb
inc
sub
push
or
faddl
pop
xor
lea
enter
mov
pop
popf
mov
scas
xlat
ret
lcall
pop
js
jbe
adc
jecxz
stos
rcrl
add
inc
arpl
adc
aam
jmp
cmp
jge
add
add
cs
outsl
cmpsb
shll
pusha
test
mov
out
fdivs
xchg
cmp
jno
mov
push
das
pop
push
js
aaa
fwait
mov
repz
adc
aam
aad
adc
popa
loopne
scas
out
ds
and
adc
ja
cltd
aas
jae
inc
sub
push
cltd
add
rorl
sub
mov
vandnps
dec
jle
ficoml
lods
gs
test
mov
into
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
inc
add
jle
add
inc
sbb
pushf
aad
aam
push
outsb
adc
int
das
cltd
ret
or
jg
mov
mov
inc
imul
jno
cmpsb
mov
and
in
and
stos
out
mov
adc
mov
pop
push
insl
push
les
in
cpuid
dec
outsl
mov
js
add
fldenv
lods
test
or
inc
add
push
xchg
ljmp
cwtl
gs
clc
jae
and
jle
pop
out
les
test
dec
mov
jb
dec
pop
mov
or
daa
inc
inc
xchg
push
push
fdivrl
fisubrl
iret
xchg
data16
xor
xor
or
or
jns
into
xor
push
in
add
jno
popa
daa
adc
cwtl
add
cmp
hlt
dec
push
rcr
cltd
movsl
mov
dec
add
dec
pushf
push
lods
jbe
bound
push
fisubl
cmpsb
add
mov
mov
add
ds
lds
xorl
dec
mov
inc
sub
mov
aaa
in
lret
or
ret
mov
mov
sahf
mov
rol
xor
int3
adc
jnp
push
inc
fldpi
xlat
mov
or
pop
hlt
fisubs
cmpsb
push
mov
enter
test
shrl
out
mov
iret
push
pop
pusha
push
dec
or
mov
jle
xchg
lea
dec
pushf
test
mov
jge
push
pop
pop
sahf
nop
outsb
xchg
aad
insb
movsl
int
jne
sti
ja
flds
mov
ss
sbb
test
pusha
cmpsl
clc
pop
into
add
push
lahf
sbb
std
sub
dec
pop
xchg
pop
movl
mov
or
pop
xor
in
mov
push
arpl
dec
mov
nop
jae
inc
mov
je
xchg
mov
out
stos
fs
xor
sahf
add
lock
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
sub
jle
add
jmp
mov
sbb
or
add
out
mov
cmpl
fwait
sub
bound
or
hlt
fsubl
cmp
scas
push
les
xor
adc
jg
lock
mov
push
mov
add
mov
or
mov
inc
cmp
xchg
iret
cmpsl
inc
shlb
lea
std
pop
mov
dec
nop
rorb
aam
icebp
fs
pop
cmp
pop
call
jmp
in
mov
cli
push
adc
cwtl
inc
pop
push
leave
out
out
mov
pop
in
arpl
icebp
sti
outsb
sbb
inc
shrb
dec
int3
push
mov
test
mov
mov
fists
data16
cmp
sbb
xchg
sahf
aas
jno
mov
adc
xlat
cld
aaa
sub
daa
andb
cmp
lret
jle
ss
or
mov
mov
lods
loope
sti
lods
out
cltd
incl
inc
push
push
leave
jmp
mov
adc
out
fs
ret
into
das
outsb
lods
mov
jp
mov
pop
jne
cmpb
cs
xchg
and
dec
out
test
xor
popa
mov
insl
nop
dec
xchg
and
repz
movsl
xchg
aad
or
dec
mov
popf
shrl
dec
clc
stos
test
inc
cltd
mov
jle
mov
mov
mov
jge
cmp
mov
jp
lods
lea
ud0
fidivs
dec
mov
cmpl
add
mov
jb
int
ljmp
push
repz
sub
xor
cmp
pop
mov
lret
push
aas
sub
mov
inc
push
inc
ja,pt
sbb
inc
sbb
mov
mov
inc
cmpsb
xchg
fistl
push
mov
mov
cmp
mov
or
scas
insb
adc
push
lods
jns
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
ds
and
jle
sub
addr16
mov
mov
sbb
push
and
mov
sbb
sub
xor
jns
add
xchg
addl
int3
loopne
fimull
in
and
out
js
sahf
push
inc
imul
dec
out
xlat
sbb
ret
xor
fnsave
movsb
jg
aaa
sarb
mov
lcall
daa
dec
xchg
mov
sub
push
mov
pop
jmp
dec
sbb
mov
mov
insb
popf
fxam
push
hlt
jge
roll
ja
push
mov
and
cmpsl
lock
add
mov
dec
mov
push
and
inc
outsl
pop
mov
jns
test
jne
fldt
adc
mov
and
inc
pop
inc
cld
xchg
pop
pop
mov
mov
loope
btc
or
out
je
ficomps
test
cmpxchg
dec
mov
adc
daa
inc
nop
jb
dec
movsl
mov
inc
xor
add
dec
lock
add
push
adc
fs
jge
or
or
pusha
mov
fimuls
movsb
in
in
clc
xchg
ss
mov
jecxz
mov
mov
mov
pop
shl
ss
aam
mov
fistps
mov
add
mov
push
mov
arpl
push
int3
dec
cmp
fwait
test
fsubl
inc
cmp
or
sbb
inc
jb
xor
push
push
cltd
pushf
sub
or
lret
mov
push
pop
and
jp
stos
jl
test
sub
nop
inc
jne
pop
mov
cwtl
sti
sbb
push
pushf
int3
xchg
jb,pn
xchg
pop
les
xchg
stos
loop
and
and
dec
push
xchg
iret
xchg
shll
test
fs
loopne
mov
cmp
popf
cmpsb
sbb
scas
lods
int3
and
or
and
cmpb
loope
bound
cmp
outsb
scas
pop
jge
je
jle
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
popf
arpl
and
jle
cmp
test
add
and
data16
jg
scas
adc
test
ficomps
lahf
mov
sbb
jg
movsl
sbb
mov
mov
and
and
fstl
jmp
hlt
dec
xor
mov
mov
jno
fmul
mov
push
add
scas
sbb
das
inc
push
sub
cmp
or
aad
mov
lods
daa
jbe
cmp
pop
ror
push
push
push
mov
outsl
lahf
cmp
dec
jecxz
xchg
imul
jne
test
pop
addr16
call
mov
popa
shr
or
fst
push
inc
and
std
ja
fistpll
jnp
inc
into
jno
leave
outsb
jae
xchg
cmp
mov
push
or
cltd
nop
jle
xorl
add
dec
ja
mov
and
mov
jp
fisttpl
gs
lods
and
scas
lods
cld
stos
push
jl
test
shlb
nop
cmp
sub
dec
xor
test
dec
mov
push
push
stos
dec
jne
push
add
pop
adc
or
pop
mov
jnp
pushf
aaa
push
mov
lock
icebp
test
jb
lods
adc
notb
mov
pusha
fisubs
pop
xchg
sbb
sub
addr16
idivl
add
dec
lods
cli
xor
or
ss
aad
add
adc
sub
rorl
mov
cmpsb
pop
or
mov
xchg
gs
cmp
xlat
inc
bound
xchg
aas
mov
pop
fistl
xor
aaa
fimull
xchg
inc
mov
pop
pop
scas
sbb
stos
fisubl
xchg
sbb
dec
stos
ret
in
or
movsb
jno
mov
push
jo
loop
jmp
cmp
loopne
rcrl
imul
faddl
pop
shlb
in
out
jne
pop
das
std
jns
lcall
mov
dec
mov
sub
stc
shl
push
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
cmpsl
mov
jle
and
jle
xor
arpl
stc
sahf
jbe
inc
rorb
and
es
push
mov
cmpsl
popa
and
mov
mov
push
jns
and
inc
sbb
sub
jns
dec
mov
jno
out
jecxz
sbb
loope
fdivrs
inc
push
pop
xchg
nop
es
in
mov
mov
add
cmp
mov
dec
push
mov
mov
xor
lret
daa
movsl
cmp
fsubrl
mov
stc
mov
pop
aam
cmp
sbb
dec
inc
pusha
mov
sub
fistl
loope
cltd
inc
mov
sub
sbb
sti
adc
in
loop
ficompl
jns
and
imul
xor
cmpsb
mov
ret
pop
xor
into
xor
jge
mov
and
xchg
ret
in
mov
dec
xchg
mov
sub
adc
rcrl
test
lcall
sub
lret
imul
xchg
mov
xor
xchg
mov
outsb
test
add
inc
adc
and
sbb
insb
dec
stos
push
pop
imul
push
lods
sbb
push
je
pop
shrb
sub
xchg
ds
mov
dec
leave
jle
jle
adc
lods
sub
mov
inc
fadds
mov
es
adc
pop
subb
test
add
mov
fwait
sbb
test
xchg
aad
mov
push
bnd
mov
loop
lds
sub
xchg
mov
push
mov
movsb
rcl
out
fwait
cltd
fs
insl
nop
shrb
shlb
adc
stos
popf
loop
mov
mov
sub
dec
ret
shl
outsb
sub
mov
cltd
mov
jae
or
shlb
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
fwait
mov
jle
and
jle
ss
test
pop
jl
lods
xchg
xlat
jb
jbe
or
inc
imul
in
clc
ja
pop
hlt
in
dec
lret
in
fiadds
cmp
cmp
and
fldcw
mov
push
and
push
rorl
dec
pop
and
sub
add
mov
mov
cmp
and
push
cltd
push
sahf
and
adc
inc
dec
stc
in
repz
push
inc
fnsetpm(287
cmp
jo
push
or
arpl
mov
jp
sub
test
push
repnz
les
roll
jnp
aam
lods
les
xor
xchg
jecxz
jns
stos
pusha
outsb
or
icebp
dec
sub
test
mov
aad
cmp
mov
push
mov
test
jbe
push
cmp
aad
clc
add
pop
or
iret
aam
xchg
and
jmp
jl
test
mov
andb
loope
aad
lds
inc
daa
cmp
imul
orl
cltd
loope
jno
sbb
fmulp
je
pusha
push
mov
je
je
loope
negb
insl
or
stc
mov
out
sbb
push
daa
sbb
cmpsl
jns
test
lret
mov
leave
rorl
cmpsb
push
icebp
les
sub
mov
sub
add
or
test
scas
pop
ss
aaa
shrb
and
push
aad
cmp
add
xor
pop
mov
pusha
sbb
pop
xorl
add
lock
jle
movsb
mov
inc
fsubl
daa
xchg
addr16
insb
add
jmp
push
mov
sbb
or
add
std
pusha
pop
cwtl
xor
gs
cmp
or
ss
imul
xchg
orl
add
mov
xchg
sbb
outsb
dec
mov
add
lock
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
enter
data16
and
jle
lahf
jnp
add
or
adc
dec
clc
stos
push
sbb
jnp
movsl
mov
addr16
call
mov
test
jmp
add
add
jmp
pop
mov
scas
jl
pop
iret
sti
pop
pop
rcrb
push
or
mov
jnp
mov
jnp
std
mov
lret
or
arpl
cmp
dec
scas
cmp
or
loopne
bnd
sub
popf
fidivrl
pop
cmpb
add
xor
int3
xchg
mov
mov
int
cmpsb
dec
fstps
xchg
fsubs
sarl
add
jnp
test
add
jp
mov
mov
je
jecxz
adc
mov
add
sbb
movsb
cmp
movsl
adc
xchg
mov
inc
cmpsb
jbe
aad
cmc
push
inc
push
adc
aaa
or
mov
mov
jl
rcll
xor
add
sbb
push
mov
xchg
or
aam
dec
fwait
xchg
fsubs
pop
cmc
xor
js
jne
cltd
lret
insl
adc
mov
push
aaa
sahf
imul
lea
inc
fidivs
add
popf
pop
lea
das
mov
mov
mov
jg
aad
je
sub
dec
cli
and
rol
bnd
scas
pop
mov
test
imul
push
sub
pushf
lds
rcrb
cmp
enter
xor
out
testb
pop
add
cmovl
in
jbe
repnz
loop
mov
sti
outsl
jg
inc
pop
pusha
jle
add
pop
loope
test
iret
pop
les
cmpsb
popa
push
cmp
xchg
cs
dec
addr16
fbstp
jecxz
shll
xchg
xchg
aad
mov
loopne
les
pop
rorl
fxch
or
sbb
sti
or
mov
mov
scas
cmp
ret
push
test
inc
pop
mov
in
inc
fistpl
cltd
and
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
call
mov
mov
call
in
sbb
aas
out
imul
and
inc
dec
std
mov
mov
mov
shrb
pushf
mov
repnz
adc
dec
xor
xchg
xchg
aam
add
ret
ds
js
lcall
aad
ja
pop
sarl
inc
leave
nop
inc
scas
fdivrl
aaa
bound
pop
loopne
test
jbe
cmp
das
xor
fstpl
pop
mov
dec
ljmp
data16
pop
lods
sbb
jbe
xor
xchg
mov
test
popa
adc
cmp
cmp
jbe
jno
adc
mov
mov
ret
dec
fldenv
cmpsl
fcomp
sarl
shlb
dec
repnz
aad
sbb
repnz
adc
jecxz
dec
mov
ficoms
sub
sub
inc
mov
add
fs
xor
xchg
scas
popa
pop
popf
ds
pop
cmp
lods
adc
in
cmp
mov
mov
jne
leave
arpl
jge
and
sbb
pop
out
addr16
lret
inc
fs
adc
lds
add
popf
mov
es
mov
push
es
lock
mov
cmc
jp
in
pop
sub
filds
jp
cmp
dec
push
cwtl
fistpl
pop
bound
mov
call
mov
inc
jb
iret
iret
push
cmp
xchg
mov
push
nop
cmc
push
and
pusha
aas
test
and
push
sbb
push
out
repnz
pop
add
cmp
test
iret
lcall
xor
pop
adcl
lds
ds
and
popl
ja
movsl
add
push
add
mov
cmp
push
aaa
fmuls
xchg
int3
inc
stos
xchg
jne
push
mov
xchg
es
test
mov
sub
push
mov
bnd
mov
or
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
out
jg
fistpll
and
jle
dec
cmpsl
adc
clc
cmpsb
cmp
sbb
pushf
mov
in
pop
cmpsb
scas
cmp
jmp
shrb
inc
add
and
pop
into
loop
loop
stos
inc
fldl2t
add
push
sub
dec
lret
out
insl
and
inc
pop
daa
es
mov
or
gs
rcrb
out
lock
lret
jnp
hlt
ret
mov
das
in
mov
cmc
jmp
fwait
xor
dec
inc
dec
xchg
mov
pop
mov
bound
mov
cmpsl
fs
int
std
les
nop
fisubrl
mov
pushf
test
jle
mov
jns
rcll
ret
insl
cmp
ljmp
xor
and
in
push
fldenv
sarl
jb
xlat
jns
dec
mov
xchg
xchg
pop
mov
sbb
addr16
inc
out
rolb
out
mov
loopne
in
jecxz
js
jl
js
push
rorl
mov
inc
movsl
add
es
lds
add
xor
cmp
in
imul
dec
popf
pop
mov
xlat
lock
es
pop
stc
push
and
lods
shll
push
pop
fisubrl
and
sbb
push
in
loop
sbb
xor
mov
dec
leave
mov
in
sub
cwtl
pop
stos
adc
xor
jae
sti
loop
mov
xchg
mov
xchg
in
xchg
xor
ss
adc
push
inc
xor
arpl
xor
dec
pop
xor
pop
push
or
enter
scas
push
arpl
stos
jl
dec
pop
or
mov
adc
loope
dec
enter
push
scas
stc
jne
pop
repnz
lds
mov
mov
jmp
dec
mov
pushf
jno
fildll
mov
and
frstor
jp
popf
mov
lsl
iret
lea
adc
das
je
mov
mov
cli
adc
or
or
jne
jmp
lods
mov
outsb
xorl
pop
fs
pop
fcomp
jle
and
jle
inc
sub
repz
dec
lea
jns
mov
out
xchg
xchg
dec
imul
cld
loope
pop
xchg
and
cltd
in
lock
xchg
mov
mov
push
lret
das
out
daa
lea
pop
jnp
repz
out
ds
aaa
ret
fs
mov
lea
test
inc
mov
aas
fdivs
sbb
addl
mov
push
test
mov
mov
adc
hlt
mov
pop
xchg
and
pop
pop
jp
mov
loopne
lods
jb
loope
scas
pop
sbb
stos
aad
shlb
lea
mov
les
xlat
adc
ds
jmp
daa
add
ds
push
fnsave
mov
push
cltd
and
xchg
out
call
shll
cmc
push
xor
repz
dec
push
shrb
fcmovbe
stc
push
mov
ljmp
inc
pop
mov
lods
bound
ljmp
sub
inc
insb
push
jle
xor
xchg
xlat
lea
cmp
add
ja
insl
pushf
test
lods
in
mov
insb
or
daa
push
rolb
mov
mov
or
xor
dec
ficompl
push
mov
test
fisttps
adcl
ret
outsb
lahf
adc
outsb
jge
das
mov
test
inc
pushf
test
loop
inc
into
cmc
call
inc
fistps
xorb
mov
inc
xor
rol
mov
jne
outsb
test
sub
outsb
pushf
scas
mov
lods
adc
das
inc
int
sub
pop
inc
bound
iret
jecxz
out
mov
dec
insb
aaa
lds
lret
call
mov
push
popa
pushf
or
stos
push
mov
jne
dec
imul
addr16
mov
cmpb
and
pushf
rcrb
xor
lods
cwtl
adc
cltd
outsb
pop
movsl
pop
xchg
add
ds
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
dec
mov
rorb
aaa
xchg
or
fisubrl
mov
shlb
fsts
stos
or
cli
sub
repnz
mov
fcmovnb
hlt
jecxz
sub
fcomps
jo
cmp
ret
pop
inc
pop
cs
loop
adc
movsb
mov
jmp
mov
loop
mov
jmp
cmp
cmp
fisubs
xor
nop
push
les
test
inc
add
or
stos
lea
cmp
adc
in
mov
jl
push
bnd
inc
xchg
jecxz
fidivrs
mov
add
sbb
dec
inc
testl
sbb
ljmp
lock
cwtl
ss
cs
push
jp
aas
pop
and
gs
add
mov
and
push
push
pop
loop
xchg
add
inc
inc
sahf
mov
negb
rclb
inc
add
in
out
xorb
ds
int3
inc
cmpsl
xor
push
gs
imul
mov
loope
jge
mov
das
popf
inc
pop
sub
xchg
and
add
cs
or
mov
xchg
push
and
cmpsb
sub
mov
dec
cld
lea
or
lds
sahf
xor
ja
stos
sahf
test
pop
rcrl
int3
mov
fadd
adc
repz
aas
and
push
inc
push
and
es
xrelease
aad
mov
out
xchg
call
pop
inc
sahf
xchg
shlb
jo
fistl
lock
lcall
test
and
rcl
sbb
shl
push
mov
sub
mov
ja
out
lods
mov
xlat
ret
or
push
cmp
push
xor
cmpsb
iret
mov
and
jecxz
push
xchg
int3
hlt
lahf
pop
outsb
jb
push
xor
out
push
mov
push
dec
fistpl
outsl
pushf
lret
rorb
lret
dec
pop
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
mov
fnstcw
cmp
cmpsl
mov
dec
jb
addb
dec
adc
push
mov
sub
jge
add
fdivrl
mov
inc
ja
ret
fcmovu
adc
das
aam
leave
mov
clc
mov
shlb
xchg
and
pop
in
aad
or
inc
in
xchg
lock
lret
pusha
lret
int
fisubl
push
lcall
dec
ss
cmp
call
loop
leave
das
incl
push
enter
popl
push
out
dec
xchg
jns
out
out
mov
clc
das
xor
adc
push
pop
mov
fldcw
jae,pn
sub
push
stos
add
push
ds
call
cmpsl
insb
fbstp
push
sub
pushf
mov
jns
dec
les
dec
into
popa
jmp
jmp
sub
pop
arpl
mov
xchg
jae
sahf
enter
and
call
popf
mov
pop
clc
pop
int3
sbb
inc
push
xchg
jl
jle
pop
loop
dec
ficomps
js
adcb
push
adc
loopne
sbb
sub
lock
lret
sbb
mov
sub
fucomp
out
sbb
ret
negl
mov
mov
cmp
pop
cmc
imul
scas
and
and
mov
jne
gs
mov
test
repz
cmc
push
out
mov
add
sbbb
lods
addl
mov
inc
ds
decl
push
arpl
jle
xlat
sub
add
jns
icebp
pop
jg
mov
pushf
cmp
pop
rolb
dec
jmp
cmc
or
xor
sub
sahf
test
ja
jbe
mov
ret
call
pop
outsb
jmp
pushf
repnz
sub
testb
loopne
addr16
mov
and
adc
jns
cs
popf
dec
xchg
mov
mov
adc
imul
shrb
call
mov
cmpsl
and
sbbl
jmp
lds
popa
mov
fisttpll
pop
jle
jle
cmp
cmp
jge
ficomps
inc
lret
neg
stos
push
xlat
add
and
inc
mov
shlb
inc
imul
pop
rclb
test
test
xor
pop
fstpl
fnstenv
pop
rorb
dec
dec
jle
insb
dec
pmuludq
rcrb
popf
iret
jnp
adcb
cmpb
xor
andl
lock
orl
xor
pop
imul
mov
sub
cmp
fildl
jge
fbstp
or
dec
hlt
mov
pop
and
hlt
adc
ljmp
stos
cmp
dec
shll
mov
xchg
mov
sbb
arpl
mov
or
mov
dec
jns
add
adc
into
mov
mov
lcall
addb
repz
pop
adc
pop
ljmp
jecxz
stos
mov
and
insl
adc
leave
sbb
and
push
pop
stos
data16
and
xor
xchg
aam
aad
outsb
adc
scas
sub
bound
cwtl
test
mov
push
push
iret
outsl
in
mov
aad
aam
test
mov
cmp
int
daa
fwait
pop
mov
mov
movsb
or
and
mov
aas
mov
sbb
scas
es
mov
push
mov
sahf
ja
xchg
imul
xor
and
je
and
mov
in
pop
jno
fisubs
and
dec
popf
adc
adc
clc
jo
aas
loope
sub
ficoml
xor
jg
adc
dec
outsb
mov
mov
outsb
pushf
aad
leave
call
cltd
jle
sbbb
cmp
insl
es
aaa
and
inc
sbb
fucomip
push
dec
pop
hlt
adc
outsl
xchg
lea
pshufw
pop
xor
std
insb
std
push
push
pop
xor
push
imul
pop
mov
addl
adc
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
or
repnz
cmp
mov
mov
lahf
lret
je
fists
dec
mov
mov
jle
pusha
adc
loop
mov
mov
xchg
dec
push
in
into
test
sbb
or
xor
sub
test
stos
pop
dec
rcr
ljmp
push
lds
cmc
xor
lds
inc
adc
call
mov
mov
xchg
iret
mov
repz
pop
fmul
andb
je
out
push
ja
add
push
aam
repz
in
mov
or
inc
aad
dec
mov
xchg
sahf
jp
and
fcompl
mov
mov
mov
cmpsl
ja
xchg
pop
jg
adc
loope
dec
mov
out
push
in
mov
cmp
les
mov
out
or
movaps
loop
sub
jp
xchg
xor
or
adc
mov
rcrb
inc
jmp
pop
mov
and
ret
inc
sbb
jno
mov
imul
lahf
loope
mov
lea
imul
test
pop
decb
mov
int
movsb
nop
push
pop
add
dec
push
dec
mov
jl
mov
and
push
push
dec
or
adc
dec
mov
cmp
dec
sub
push
add
insl
aas
inc
jnp
rol
pop
mov
jg
inc
movsb
and
dec
mov
shlb
ss
sub
adc
mov
inc
inc
icebp
repnz
imul
addr16
inc
jnp
jle
loop
rorb
or
inc
xchg
pop
hlt
jmp
ja
mov
jecxz
jb
sbb
add
jo
add
in
cmpsl
bound
fstpl
mov
lea
lret
daa
or
mov
adc
repnz
imul
jmp
mov
mov
std
mov
mov
dec
push
mov
addb
mov
pop
fldcw
adc
push
cmp
lahf
xchg
int
jmp
shll
notl
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
cld
lods
cltd
mov
loopne
jle
jl
jle
ja
test
pop
lret
mov
pop
mov
cmp
cwtl
aas
mov
inc
in
pop
ffreep
es
loopne
push
xchg
sahf
pop
js
ficoml
rcll
jno
fdivr
jecxz
out
pop
jae
loopne
stc
es
inc
insl
in
mov
mov
insl
inc
jno
bound
push
sbb
in
inc
mov
mov
stos
enter
scas
out
imul
mov
sbb
ljmp
push
push
cli
xchg
push
xlat
and
ljmp
aad
negb
in
lret
cmpsl
jg
cwtl
sbb
repz
jg
push
mov
arpl
xor
nop
icebp
jb
aad
lret
adc
sahf
js
push
pusha
mov
out
push
mov
cli
js
addr16
arpl
roll
nop
out
or
xchg
out
or
loope
inc
adc
shll
sti
fisttpl
ss
loopne
pushf
pop
sbbl
mov
pop
sbb
mov
cmp
sbb
cmp
push
leave
add
fildl
xchg
sub
pop
dec
gs
push
cmp
test
dec
ret
push
add
jp
sub
bound
or
ficompl
ffreep
xchg
imul
div
push
sbb
xor
xchg
cmp
outsl
mov
int
push
shrl
cmpsl
pop
pop
shll
aad
add
xchg
cmp
nop
inc
pop
iret
cmp
cmc
jbe
mov
adc
js
jbe
out
jno
sbb
insb
xchg
divl
pop
fisttps
add
push
add
imul
cli
out
push
xor
dec
imul
xchg
cmp
orl
push
pusha
test
mov
repnz
cld
sbb
add
xchg
adc
movsl
fcoml
and
out
jmp
iret
cmpsl
cmp
iret
call
into
out
in
fcompl
mov
xrelease
jno
inc
dec
out
arpl
imul
repnz
xchg
and
adc
xchg
dec
pushf
sahf
jmp
enter
ss
add
add
add
push
add
add
shlb
sti
ss
add
sti
ss
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
and
in
dec
out
jle
cmp
jg
movsl
push
rorb
pop
fs
or
sub
enter
or
push
enter
pop
shrl
fisubl
shrl
add
addb
outsl
mov
dec
mov
add
mov
push
add
lret
pop
pop
cmp
or
and
lods
sti
mov
data16
xchg
scas
xchg
cltd
stos
push
into
cmp
lods
or
dec
cmp
xor
mov
mov
int3
iret
xlat
fwait
test
xchg
minps
fldcw
mov
jp
push
push
filds
out
adc
or
out
push
cmp
adc
jmp
push
cmpsl
repz
push
aas
xchg
shlb
xlat
inc
loopne
mov
cmp
repnz
mov
movsl
mov
or
xor
adc
ss
pusha
jp
xor
or
xchg
xchg
shrl
popa
sub
sub
mov
ret
sbb
pop
mul
xchg
aas
test
dec
mov
jae
cmc
orb
lds
fnstcw
out
xor
mov
icebp
cmp
or
push
ficompl
cmp
js
mov
jp
xchg
mov
push
sub
outsb
cmp
mov
sahf
adc
int
mov
mov
xor
and
push
clc
dec
add
shl
dec
out
add
sahf
mov
inc
dec
mov
ret
add
inc
out
push
mov
pop
int3
js
fmulp
or
cmp
imul
mov
aas
add
mov
outsl
stos
pop
lods
out
or
insl
insb
and
mov
add
jg
cld
mov
cmp
insb
and
add
push
pop
mov
cmp
or
loopne
jl
push
cmc
scas
jg
mov
add
iret
pop
jmp
lods
push
add
cmpsl
pop
loope
lret
jg
or
add
insb
decl
or
pushl
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
sbb
jl
jle
testl
adc
insl
jb
fnstsw
rcrl
scas
adcl
stos
mov
ficoml
xchg
addr16
pop
xchg
fimuls
push
xor
leave
ds
sub
fscale
mov
and
adc
mov
lret
pop
stc
insl
pop
iret
jg
sahf
ffreep
arpl
mov
punpckhdq
cmp
rorl
lea
or
lret
fnsave
andl
cli
repnz
adc
mov
sub
insl
pushf
jbe
lds
push
fstps
jp
push
mov
sbb
in
pop
sub
repnz
pop
fnstcw
fcoml
pop
add
push
lds
push
jae
aaa
divb
pop
pop
mov
fdivr
das
mov
pop
leave
jno
or
sub
mov
icebp
pop
mov
bound
push
and
call
mov
adc
aad
imul
insl
jecxz
fisubrl
arpl
dec
and
jns
xchg
ficoml
mov
ljmp
inc
dec
shlb
sti
mov
push
xchg
lcall
xor
sub
inc
repz
pop
mov
xchg
lock
adc
aad
jg
adc
xchg
ljmp
mov
ljmp
lea
jp
pop
shl
out
arpl
pushf
mov
loopne
mov
fwait
out
popl
push
scas
imul
cmp
fldl
imul
jmp
push
and
mov
push
inc
and
mov
movsl
jecxz
xchg
fidivrl
or
add
int
adc
or
sahf
pop
lahf
xchg
addb
cmpsb
adc
lock
sub
insl
ss
idivb
rcll
ljmp
lahf
xor
inc
shr
and
xor
aam
ljmp
xor
push
or
gs
imul
or
jl
push
xor
imulb
sti
jecxz
jp
cmp
xchg
add
pop
insb
jl
mov
stc
lods
dec
mov
mov
data16
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
or
add
jmp
jle
jl
jle
push
cli
fisubs
jns
xlat
or
mov
lods
and
push
dec
in
mov
xchg
and
mov
negb
mov
mov
and
outsb
or
fsts
pop
rorb
call
mov
aad
fldcw
stos
loop
push
sub
or
mov
adc
lea
das
and
jmp
xor
adc
cmpsb
adc
jmp
mov
rorb
rclb
sub
jmp
nop
push
push
fistpl
in
imul
ds
push
es
pop
rcl
mov
xor
inc
loope
movb
jno
es
jnp
dec
shrb
mov
imul
inc
jge
xor
xor
test
ljmp
jecxz
jb
mov
xchg
out
sti
insb
xchg
fs
mov
icebp
cli
pushf
push
sub
lods
cld
mov
push
in
pop
test
shll
mov
lea
test
shlb
enter
xchg
ret
xor
jnp
ds
fidivl
push
rcll
gs
and
ja
cwtl
arpl
sub
xchg
pop
fisubrs
mov
or
add
mov
and
pusha
imul
push
cmp
mov
mov
out
lock
pushf
out
pusha
xor
jmp
push
cmc
cmc
fmuls
int
xor
add
add
loopne
or
lret
jbe
es
aad
icebp
mov
fisubl
jg
repz
xlat
dec
sti
cmp
xchg
mov
jnp
xchg
sbb
mov
mov
outsl
dec
xchg
push
jle
and
loop
stos
clc
and
test
addr16
push
std
cmp
push
or
ljmp
sub
pop
cmp
lods
adc
mov
dec
xchg
inc
push
shl
mov
cmp
sbb
push
pop
lock
fimull
pop
cmp
mov
add
hlt
push
sub
ja
dec
icebp
pop
fs
ficompl
jecxz
pushf
xchg
lock
jmp
and
push
out
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
sub
scas
shl
ficoms
cmc
dec
mov
shl
lods
sub
add
aaa
pop
je
mov
cli
movsb
test
rcr
in
and
insl
je,pt
mov
jbe
in
add
in
mov
clc
jp
push
out
mov
test
lret
in
xor
jecxz
in
leave
les
xchg
inc
add
inc
loop
and
outsl
nop
cltd
mov
out
add
or
xor
or
inc
pop
in
shll
jno
int
or
pop
lock
and
imul
sahf
shl
data16
xor
ja
pushf
add
lret
imul
jle
push
cli
jnp
inc
in
mov
lods
push
add
shlb
int3
sub
stc
cmp
adc
mov
fndisi(8087
xor
inc
or
mov
adc
sbb
ljmp
push
lea
jno
mov
gs
je
mov
xor
fdivrp
jnp
mov
mov
scas
sarb
int
xor
pop
inc
jns
ljmp
and
jg
and
dec
and
xor
mov
adc
nop
sub
cmp
pop
add
ljmp
or
movsl
jne
lea
lret
aaa
hlt
hlt
xlat
xorl
es
cmovl
gs
nop
ja
or
mov
xlat
cmc
cltd
mov
int
and
push
fcomi
fcomps
ret
xor
sbb
adc
outsb
stos
imull
push
imul
jne
xor
sarb
and
fadd
or
les
dec
mov
sub
push
xchg
push
add
lock
mov
jp
test
lds
cmc
dec
pop
ds
inc
inc
dec
pop
or
stos
sbb
push
enter
add
test
or
js
cmp
subb
jb
xchg
push
jp
dec
add
incl
cmc
addr16
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
jnp
push
sti
idivl
cmp
aas
cwtl
clc
mov
ret
jl
mov
popa
cld
cwtl
dec
fsubrs
in
fptan
imul
nop
and
out
aam
and
mov
sarb
pop
xchg
ss
pop
or
sbb
cmp
ljmp
flds
xlat
sbb
add
mov
imul
in
dec
jl
pushf
lahf
and
dec
xchg
xor
stc
pop
and
cmpsl
add
sbb
test
ret
dec
shrl
adc
or
xor
pop
mov
xchg
in
sub
outsl
testb
fsub
mov
lods
add
paddusw
sbb
jae
stos
jae
loope
xor
push
mov
pop
enter
push
mov
out
push
inc
popa
sar
fcoms
push
sti
cmc
mov
cmp
sbb
push
imul
pusha
mov
xor
xchg
add
outsl
nop
rcrl
and
mov
xchg
fwait
cmp
outsb
fwait
popa
pop
rclb
sub
mov
sbb
pop
daa
jp
push
and
sbb
jl
fdivr
insb
cmp
push
sub
push
cld
and
dec
add
jbe
aad
fldenv
jmp
shl
sarb
or
mov
push
xchg
pop
leave
outsl
dec
sub
jp
int3
mov
mov
adc
inc
outsb
fnstcw
in
ds
cmp
mov
mov
mov
das
mov
subb
or
ljmp
sti
mov
fcmovbe
push
call
lods
fnsave
imul
rcrb
sbb
and
fisubs
insl
add
mov
cmpsl
sbb
mov
pop
or
sarl
add
rorb
jo
sub
gs
xchg
cmp
cmp
fstpl
adc
add
jno
lds
lcall
call
jmp
or
jae
sub
subb
mov
cwtl
mov
scas
cmp
aad
pop
sbb
mov
mov
inc
lahf
idivl
icebp
pop
shl
jno
ja
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
inc
xor
bnd
cmp
out
sbb
jnp
call
out
add
loope
mov
jle
push
pop
leave
sub
adc
cwtl
cmp
sbb
cmp
ds
cwtl
cmp
scas
lds
cmpsb
imul
adc
mov
loop
sahf
call
adc
and
rorl
sbb
test
sub
jmp
xor
xchg
xor
enter
aam
or
jbe
and
sbbb
incl
hlt
ret
cmp
stos
cld
jg
cmpl
jns
mov
push
push
lret
cmp
int3
ja
into
and
neg
xor
inc
mov
dec
or
and
xchg
cmp
pop
jbe
test
fists
fcmovu
mov
cltd
lods
jle
aas
imul
je
or
in
notl
inc
leave
mov
psubq
bound
cmp
sub
inc
add
data16
xchg
shll
es
movsb
pop
es
cmpsb
sbb
push
mov
jl
add
or
cwtl
movsb
inc
rcrl
aam
jmp
mov
stc
cs
and
shrl
add
test
call
dec
sbb
mov
repz
rolb
push
mov
and
sbb
shlb
sub
mov
fistpll
ret
jp
jae
arpl
mov
and
adc
test
pusha
sti
adc
jge
jo
scas
nop
call
testl
pop
xchg
pop
mov
int
ja
xor
icebp
clc
dec
jns
add
jp
nop
nop
cld
pop
insb
adc
inc
jle
xlat
mov
in
ss
and
out
mov
inc
scas
fldl
bound
mov
xchg
adc
jmp
daa
push
sub
cltd
sub
enter
mov
jns
dec
pop
mov
jae
sub
fistl
sub
add
les
jl
pop
inc
movsb
in
ss
and
sbb
xchg
xchg
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
test
and
cmp
xchg
jge
mov
push
je
addr16
mov
jle
mov
push
movsb
test
test
js
push
mov
mov
adc
leave
pop
call
mov
lcall
jle
in
xchg
testl
pop
clc
imul
popl
xchg
ljmp
and
push
sbb
gs
lea
int
add
mov
jg
addr16
adc
ja
xchg
ds
rol
in
push
cwtl
push
rclb
inc
ret
cmp
jbe
and
aas
push
icebp
sbb
push
or
cmpsl
icebp
cli
xor
stc
xor
jbe
in
mov
push
enter
mov
ljmp
jnp
and
sbb
leave
mov
pop
lods
out
outsb
ret
push
mov
jl
sbb
cmp
xor
push
mov
mov
pop
adc
sahf
mov
icebp
or
std
sbb
ror
mull
xor
mov
mov
pop
loope
mov
fisubs
push
sti
subl
jbe
enter
nop
xor
xor
jl
sbb
test
sub
pop
jmp
fiaddl
push
pop
and
lods
lahf
lcall
scas
mov
lcall
sbb
cmp
jecxz
in
mov
stos
push
push
mov
shrl
sub
push
imul
jg
rcr
xor
jbe
ja
fs
test
add
loopne
orl
je
inc
lea
adc
sti
mov
or
pop
xchg
adc
hlt
mov
inc
pop
cltd
inc
pusha
or
sbb
test
pusha
and
push
pop
movsl
push
dec
leave
in
sbb
mov
in
movsl
mov
fwait
pop
mov
xchg
mov
adcl
push
icebp
dec
adc
fdivrl
addr16
test
push
or
or
fwait
lds
adc
int
in
test
add
mov
xor
aas
lods
mov
jl
cmp
or
popf
sub
pop
cltd
orb
mov
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
les
jle
cmp
loopne
cltd
push
aas
cmp
xor
sub
sar
add
pop
sbb
inc
repz
pop
sub
cli
push
fists
dec
mov
sub
mov
push
int
repnz
popa
mov
pop
jge
pop
out
in
dec
dec
idivl
xor
out
cmp
dec
cmp
cltd
mov
test
fwait
iret
adc
rcrl
adc
adc
shrb
sbb
inc
jnp
sbb
fsubr
call
and
pop
movsb
dec
ret
loope
call
sahf
movsb
rol
push
hlt
test
inc
cmp
xor
mov
adc
jns
int3
pop
mov
jmp
sbb
movsb
add
outsb
scas
in
bound
cmpsb
cmpsl
mov
shl
push
jecxz
xor
or
sbb
jb
jns
cli
sub
loope
push
sub
fsubrs
mov
xorb
jp
lret
sahf
js
mov
xor
fiadds
cltd
pop
aas
jns
ss
jecxz
aad
mov
test
pop
dec
sbb
lods
mov
push
mov
xor
out
sub
call
lds
jns
loop
inc
test
gs
insl
add
sub
mov
insl
lret
or
repnz
inc
inc
jg
add
sbb
iret
jle
dec
mov
je
sarb
out
cmc
scas
iret
dec
fmuls
lret
lea
xchg
je
cld
dec
pop
sbbl
inc
xchg
aam
inc
leave
dec
mov
pop
xor
dec
insb
inc
sarl
in
push
out
adc
push
cmpsl
je
xchg
neg
xor
push
add
add
inc
push
pop
out
out
clc
in
fadds
jp
mov
dec
daa
pop
push
push
pop
ss
cmpsb
pop
mov
xor
in
ret
pop
aaa
cmpsl
andl
or
add
xchg
pop
inc
shll
add
or
pop
hlt
sbb
in
jle
adc
fdivr
fcompl
or
sbb
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
cli
add
std
jle
cmp
mov
not
sahf
jg
dec
lock
add
sar
xor
movsb
jno
adc
les
loope
lcall
test
mov
and
ljmp
and
push
out
add
fidivs
xor
jg
mov
imul
mov
call
movsb
rcl
pop
lods
adc
lds
sbb
jg
mov
incb
jp
xor
out
int
out
in
insl
sub
or
imul
mov
pop
xchg
movsb
cmp
lods
scas
cmpsb
sbb
cmp
enter
mov
sbb
dec
lret
push
fsubr
dec
push
cld
daa
push
add
stos
mov
rcrl
fdivrl
push
data16
fdivrl
sub
out
sub
dec
inc
jg
inc
or
test
mov
jge
mov
shlb
push
sbb
in
jmp
push
in
inc
fildll
push
fs
jge
cmpsl
cmp
bound
ljmp
lret
mov
rolb
mov
xor
jmp
mov
mov
std
lret
cmp
fwait
xchg
fs
stc
cmp
cwtl
pop
jae
and
fs
leave
pushf
jae
js
out
sbb
xchg
add
adc
add
cmp
adc
inc
cmp
push
xchg
lcall
loop
js
icebp
call
mov
cld
test
or
daa
rolb
insb
fidivl
roll
mov
xchg
xchg
adc
fnsave
lret
pop
lret
mov
xor
push
xchg
callw
icebp
addr16
push
daa
pusha
int
lret
adc
inc
adc
jle
dec
xchg
jno
in
pop
addr16
adc
cmp
outsl
lods
stos
ret
xchg
push
mov
pusha
fadds
out
mov
push
and
push
fsub
fsubrs
test
cmpsl
adc
sub
lds
test
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
aas
xor
rol
sti
jle
cmp
aad
or
or
je
push
lods
shl
jmp
int3
clc
mov
out
roll
rcl
testl
mov
sub
stos
lods
jl
out
pop
rcrl
cmp
lods
fs
adc
test
xchg
push
int3
popf
flds
aaa
insl
fiadds
xor
inc
push
cmp
jmp
and
xlat
inc
into
push
cmp
rol
xor
sub
mov
cld
sbb
popa
popf
insl
ret
xchg
add
fisubrs
cmc
mov
pop
jle
fcompl
mov
sub
es
fisubrs
dec
jne
inc
add
inc
cld
adc
adc
cli
sub
pop
and
fists
out
das
adc
mov
xor
pop
outsb
xchg
das
add
je
pop
incb
gs
mov
push
xchg
cmp
aas
inc
aad
data16
mov
aad
dec
push
je
scas
gs
int3
scas
add
jno
out
add
je
mov
jno
push
adc
dec
pop
lea
fs
and
and
xor
or
jno
sub
dec
xchg
sub
inc
xchg
fildl
pop
out
jmp
xchg
enter
push
jp
loopne
pushf
inc
lcall
inc
arpl
addr16
adc
cltd
or
mov
hlt
ret
rcrl
cmpsl
mov
addl
mov
adc
mov
stos
inc
cmp
pop
add
pop
mov
lds
cld
lods
addr16
jnp
unpcklps
or
dec
loopne
inc
inc
out
sub
decl
or
pop
xchg
push
cs
rcr
dec
mov
into
xchg
lret
mov
bound
jecxz
cld
mov
and
or
daa
push
jl
jle
dec
mov
cli
aad
out
test
push
fsubl
dec
mov
imul
aad
sahf
or
icebp
xchg
movsl
nop
pop
ljmp
cmp
gs
adc
ret
int
cs
fisttpl
pop
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
hlt
cmp
jle
jl
jle
ljmp
jmp
jbe
push
loopne
ret
andb
adcb
es
cmp
stc
lock
out
int
bswap
lock
scas
inc
xchg
dec
test
or
mov
outsl
mov
sbb
mov
int
in
pushf
test
popa
sahf
frstor
test
push
inc
dec
xor
dec
xor
jmp
mov
inc
test
mov
int3
pusha
movsl
insb
out
iret
out
or
pop
mov
in
cltd
popf
add
jmp
fdivs
mov
add
loope
cli
mov
pop
push
js
jo
lods
es
push
orb
adc
jge
and
mov
xchg
sbb
jno
roll
lods
call
xor
cmpsb
jbe
popa
mov
aaa
lahf
lahf
or
xlat
push
rcrl
add
stos
mov
ret
shll
add
ss
aas
push
cmp
dec
mov
popa
sbb
sahf
test
lret
pop
jmp
xchg
add
mov
jmp
gs
pushf
cmp
push
fdivrs
in
sub
aad
jo
imul
push
push
test
cmp
repz
setnp
push
sub
movsb
cld
cmp
lods
jae
jecxz
cmp
sub
adc
push
stc
fadds
jmp
loop
adc
sub
adcl
jmp
add
fisubrl
lea
fs
pop
mov
gs
sbb
adc
dec
in
shll
sub
fwait
cmp
and
push
fldcw
sti
push
mov
adc
pop
negl
cli
adc
mov
sub
lock
fs
ficomps
sub
pop
cmp
sbb
frstor
in
sti
test
aas
int
ja
mov
jmp
push
cmp
xor
outsb
cld
cmp
scas
inc
stos
or
jb
push
fdiv
mov
into
xchg
cmp
inc
test
add
sub
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
hlt
add
jle
jl
jle
orb
xor
sub
sub
cltd
shlb
inc
inc
lahf
pop
jecxz
adc
adc
popa
xor
xchg
cmpsl
jmp
lret
jmp
mov
mov
xchg
adcb
pop
push
and
cmp
lock
inc
sub
sbb
pop
cld
test
aam
sbb
enter
imul
inc
cmp
mov
stos
aaa
sub
pushf
aam
dec
dec
or
adc
pop
je
pop
pop
xor
lcall
adc
cmpsl
outsl
outsb
bound
cmp
mov
je
ss
pop
xchg
mov
sahf
dec
dec
arpl
xchg
insb
leave
cmp
xchg
pop
mov
mov
inc
in
xchg
out
push
sbb
add
fwait
popw
loopne
mov
sub
adc
pop
outsb
js
pushf
lcall
xor
adc
xchg
pop
mov
sbb
inc
mov
push
and
adc
cmp
or
fsts
imul
jno
xor
mov
push
inc
push
leave
xlat
aaa
cmp
jns
adcl
out
mov
dec
pop
xor
insl
jb
loopne
cmc
xchg
cmp
dec
rcr
push
pop
testl
sti
sub
ficompl
arpl
hlt
sbb
push
movl
dec
cwtl
bound
aas
pop
cs
out
lahf
daa
jecxz
pop
dec
add
sbb
jbe
jo
cwtl
mov
mov
scas
push
movsb
push
cmpsl
xchg
pusha
fldcw
add
ja
jecxz
mov
and
cmp
mov
dec
fwait
sbb
adc
add
push
hlt
aaa
jmp
nop
add
add
into
cmpsl
fildl
addr16
sti
repnz
iret
call
pop
scas
rorl
lods
cmp
sbb
pushf
adc
cmc
fiadds
inc
mov
gs
lods
pop
xchg
pop
call
imul
push
mov
inc
les
scas
movsl
enter
push
int
out
pop
pop
dec
mov
add
xlat
mov
cmp
jae
mov
inc
xor
stc
lds
lods
pop
cwtl
pop
bound
push
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
sar
push
dec
int
cmpb
jl
jle
push
rcrl
push
jmp
or
lea
daa
fstpl
adc
and
jne
decl
andb
loopne
and
push
hlt
shrb
jns
repz
mov
ljmp
push
jae
cld
mov
and
cwtl
fdivl
ret
pop
stos
shr
or
mov
lret
mov
cmpsb
xchg
mov
mov
cs
jg
lret
movsb
aam
sti
mov
test
cmp
mov
xchg
femms
inc
sbb
stos
cld
shll
decl
dec
push
mov
dec
mov
xchg
stc
xchg
add
pop
xor
jmp
sub
mov
faddl
push
mov
push
sti
mov
ss
ret
lods
stos
leave
into
movl
sub
cmpb
repnz
jecxz
adc
leave
ds
xorb
insb
pop
bnd
mov
xchg
repz
gs
mov
popf
repnz
mov
fsubrl
dec
arpl
shrl
jle
add
push
cmpsl
lods
lahf
inc
mov
iret
and
add
jle
ret
push
subb
inc
fidivl
mov
gs
insb
rcrl
sahf
loope
shlb
push
or
sub
inc
cmp
insl
push
in
js
and
inc
push
jo
push
and
xor
cmpsl
and
inc
cld
dec
ljmp
or
repnz
mov
inc
cmp
lock
mov
push
mov
sub
mov
lods
jmp
add
aam
cmpsl
ret
adc
cmp
add
mov
xchg
loop
fs
jno
inc
mov
sbb
adcl
inc
test
sub
icebp
mov
aam
das
je
in
cmp
dec
xor
aad
mov
daa
xor
hlt
mov
fiaddl
data16
mov
sbb
shr
xor
cmp
lret
insb
mov
add
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
push
fiadds
jle
mov
push
sti
insb
jbe
fwait
or
sbb
pop
test
cltd
push
pop
loope
pusha
popf
pop
inc
add
lock
shr
xor
packuswb
decl
stc
dec
sti
and
xchg
mov
adc
mov
rol
call
xor
sbb
sbb
pop
dec
xchg
push
fidivrs
outsl
jmp
jg
out
ds
sbb
addr16
push
cmp
adc
jecxz
cmp
mov
testb
fwait
and
xchg
xor
test
sub
inc
bound
push
xor
fisubs
jae
jmp
mov
mov
idivl
sbb
mov
xchg
into
sarb
xor
sub
ss
call
lods
cmp
orl
movsb
mov
push
mov
dec
push
mov
inc
jno
leave
sub
sub
fcomps
pop
ret
in
xor
jo
push
or
xchg
stos
fcoms
push
inc
ds
ja
scas
jo
jle
stos
sarb
pop
cwtl
scas
fs
out
dec
fwait
sub
mov
dec
icebp
fadds
adcl
add
jne
movsl
push
mov
outsl
add
mov
pop
clc
xchg
cmp
or
fwait
sub
push
mov
arpl
int3
frstor
aam
sbb
mov
pop
ftst
dec
mov
mov
add
xchg
xor
ljmp
jo
imul
jae
adc
mov
jb
mov
jl
ret
or
cmpsl
and
sbb
dec
or
pusha
jle
xchg
jb
test
add
je
stos
pushf
mov
sbb
fstps
fadd
stos
xchg
fisubrl
ljmp
add
stos
dec
adc
dec
gs
mov
jmp
data16
adc
add
test
filds
rorb
jmp
pop
mov
cwtl
mov
mov
cmp
scas
cwtl
mov
cmp
jle
fs
movsb
fs
out
xchg
sbb
inc
lcall
das
out
out
xchg
mov
mov
scas
insl
mov
pop
and
mov
cli
pop
and
mov
icebp
and
xchg
test
scas
fnstcw
add
rcrl
hlt
icebp
sub
test
cmpsb
jae
mov
add
das
sub
mov
xor
sub
jbe
pop
xor
hlt
hlt
sahf
test
sahf
push
xchg
adc
ret
popf
mov
jge
jb
inc
shlb
js
bswap
je
cmp
stc
outsb
repnz
sub
test
add
or
stos
ret
fnsave
push
push
cwtl
or
jle
shlb
sbb
xchg
sbb
fadds
test
pop
rcrb
fistl
scas
or
cs
loope
jne
jo
xor
enter
subl
pop
jg
rclb
scas
xchg
ljmp
ljmp
xchg
in
cmp
mov
adc
inc
and
arpl
mov
addr16
in
ja
jp
cli
cmp
popa
hlt
mov
movsb
lret
push
ja
imul
lock
outsb
or
and
jl
aaa
cmp
dec
mov
push
stos
cmp
adc
bound
dec
xchg
or
incl
out
into
cld
xor
mov
inc
pop
fmuls
mov
and
xor
xor
dec
push
mov
sub
decl
test
js
lods
cwtl
push
mov
or
sbb
insl
aam
clc
sub
scas
in
pushf
lret
or
dec
fst
push
sbb
iret
xchg
push
sbb
sub
mov
inc
xor
add
js
scas
fs
imul
cltd
inc
aam
or
gs
pusha
pushf
lcall
jne
and
push
push
dec
inc
pop
loope
ss
cli
jmp
ljmp
pop
xchg
ja
or
jo
dec
nop
or
aaa
mov
add
roll
lods
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
sbb
mov
jle
cmp
adc
sub
push
orl
popf
les
xchg
popf
jle
push
push
or
gs
daa
lahf
adc
ds
pushf
cld
cmp
push
or
sub
lahf
fcompl
sbb
sahf
adc
push
cmpsb
mov
mov
pop
fwait
cmp
ja
mov
sarl
xchg
xchg
std
jl
mov
lcall
sub
lea
popa
scas
inc
rol
lds
out
xchg
adc
dec
in
or
pop
cmp
adc
ds
sbbl
jne,pn
cmp
aam
add
aam
in
mov
pop
gs
push
push
dec
pop
ss
pop
in
out
bndldx
iret
and
jbe
or
ret
mov
out
cwtl
jecxz
call
push
jne
adc
cmp
clc
inc
fcoml
xlat
and
ret
lock
adcl
dec
arpl
aaa
xchg
lret
jecxz
sbb
loope
jle
shr
aad
pop
jns
cwtl
jg
pusha
adc
or
gs
in
stos
mov
gs
sub
pop
pop
dec
push
aam
insl
out
rclb
and
shll
arpl
mov
fcmovu
fwait
push
call
fdivs
xchg
cmp
adc
or
add
addb
push
cltd
ljmp
and
lahf
sub
dec
xchg
into
add
xor
stc
sahf
test
lods
sahf
repz
enter
jnp
cmp
mov
movsb
dec
nop
xchg
dec
incb
lcall
mov
sbb
jb,pn
jo
insb
push
mov
pcmpgtb
pushf
mov
and
ja
js
mov
repz
dec
das
fnsave
jb
mov
pop
loope
cs
xchg
cltd
xchg
push
jne
sub
das
imul
dec
pop
dec
loopne
shr
cltd
mov
xchg
xchg
imul
aad
cld
push
pop
or
xchg
dec
fisubs
sub
dec
sbb
jbe
xchg
les
cmp
fdivp
add
mov
movsb
pop
dec
shll
push
not
stos
ficompl
insl
out
orl
mov
sub
xchg
jmp
push
std
dec
sahf
push
push
add
insb
pop
ljmp
jl
jle
sti
inc
cltd
shrb
in
call
fisubl
iret
push
cmpsl
push
sahf
jmp
cltd
lods
imul
push
sarb
mov
or
xchg
test
cmp
in
pop
pop
cli
mull
push
mov
or
ficomps
sub
shlb
sbb
outsl
pop
iret
or
out
aas
sbb
inc
test
loopne
adc
out
aad
jg
pusha
das
and
idivl
push
cmpsb
aaa
imul
in
adc
lret
lea
dec
data16
inc
inc
lods
jg
lret
xorb
popf
mov
mov
xchg
xlat
mov
icebp
pop
sub
jl
mov
movhps
mov
pop
ja
push
xor
ret
inc
jge
repnz
int
shl
imul
mov
add
imul
cmp
xchg
outsl
xor
in
mov
mov
add
push
sub
shr
jb
shrl
aas
xchg
nop
sbb
xor
cmp
inc
sbb
mov
xchg
inc
mov
js
imul
test
push
cwtl
inc
notb
inc
mov
push
mov
sarl
ret
push
mov
daa
lret
mov
lds
xor
or
and
loopne
push
lea
lods
jo
and
dec
outsb
mov
cmp
jno
je
outsl
xchg
rclb
sbbb
mov
mov
cltd
movsl
mov
das
jbe
insb
in
mov
push
mov
jo
aaa
jno
mov
add
cmp
xchg
sub
icebp
gs
sub
inc
xchg
jne
hlt
stos
pop
pushf
xor
sbb
pop
fs
push
in
jo
push
xchg
ja
neg
mull
lods
fcoms
sbb
adcl
rclb
std
adc
inc
or
shll
fimull
mov
add
popf
lods
mov
hlt
andl
out
aad
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
fcomps
cmpsb
shl
jle
cmp
mov
cs
xor
sub
push
xor
inc
sti
adc
scas
lock
les
nop
lock
mov
xor
pop
jg
fsubrs
test
and
push
push
xchg
and
jmp
push
jb
outsl
sub
or
cmp
aas
cmp
adc
pop
push
mov
daa
fucomi
pop
cltd
mov
cli
inc
mov
push
inc
jbe
sahf
push
cmp
jne
xor
sbb
dec
cltd
mov
or
shr
xor
sub
mov
rorl
adc
std
push
jg
pop
das
add
into
push
and
fistps
mov
out
sbb
ja
cmpsb
mov
lock
or
xor
jecxz
pusha
ljmp
mov
dec
gs
mov
or
cmpsl
imul
test
inc
mov
dec
movsl
or
scas
int3
adc
and
and
mov
aad
cmp
mov
hlt
xlat
pop
mov
iret
rcrb
and
sub
add
lods
jo,pt
andb
xor
dec
sbb
inc
fisttpll
outsb
push
jecxz,pt
rcrl
add
xor
int3
xor
mov
pop
lret
jb
data16
ret
add
mull
fwait
xlat
repz
loopne
test
add
daa
xor
inc
mov
mov
loop
cli
rcll
cmp
lods
rorb
push
xor
mov
xlat
or
jmp
sub
out
int
call
int3
push
loope
fstl
int3
ds
xchg
xchg
inc
inc
js
adc
cltd
test
lock
bound
ds
and
xor
mov
sbb
xchg
sub
and
sbb
adc
nop
fcmovb
aam
aad
fistps
mov
stos
mov
aas
movsb
push
sti
in
sbb
repnz
mov
rcrl
jp
adc
test
jp
les
mov
xchg
pushf
test
fisttpl
add
add
stos
mov
pop
flds
cmp
jl
jle
in
add
xchg
out
jne
jmp
in
in
mov
mov
xlat
data16
int
fsubrl
js
mov
push
rclb
adc
xor
and
shll
ret
jl
sub
sti
add
mov
aaa
mov
mov
inc
pop
imul
sbb
lret
push
cmp
sbb
lock
cltd
rorl
cli
imul
outsl
mov
lahf
mov
sbb
pop
stos
scas
fimull
fistl
cmp
and
mov
jmp
repz
fsubr
out
add
dec
mov
in
ja
daa
xor
or
cmp
enter
inc
inc
cmp
out
insb
xor
and
add
or
cmp
inc
push
dec
sub
aam
ret
mov
mov
or
adc
int3
imul
test
or
testl
and
inc
pop
jb
out
xchg
lret
adc
arpl
mov
push
pop
cmp
data16
or
ret
mov
mov
xchg
add
or
mov
cwtl
test
sub
cmc
hlt
push
cmpl
stc
jle
rcll
jmp
xchg
cmpsb
jno
inc
mov
mov
insl
and
sub
mov
mov
cmp
inc
jb
pop
enter
cmp
mov
ss
test
in
fbld
jmp
inc
rorl
xchg
push
and
or
mov
orl
mov
dec
dec
leave
es
out
cmpsl
sub
fisttps
sbb
bound
cmp
stos
pop
mov
shr
arpl
lock
sbb
std
or
daa
push
shlb
or
incl
push
pop
lret
lcall
loopne
movsl
mov
in
bound
int
dec
xchg
and
outsl
xor
mov
push
and
sbb
dec
add
popa
in
or
jne
mov
sbb
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
jp
dec
jp
jle
jl,pt
jle
adc
lahf
xor
xchg
pop
jge
push
mov
push
lret
mov
push
inc
sbb
jbe
and
divl
scas
cmp
xor
aaa
pop
xor
sub
or
into
out
aas
fwait
std
add
mov
jp
xor
push
mov
je
leave
jmp
adc
push
sti
xchg
xchg
dec
xchg
push
xchg
sbb
scas
adc
or
mov
mov
xor
mov
cmp
adc
mov
xor
xlat
rorb
mov
or
xchg
into
ret
push
and
les
dec
ja
inc
jae
and
jnp
cwtl
sahf
pop
add
mov
add
pop
mov
fistl
test
in
jmp
xor
mov
outsl
mov
cmp
daa
hlt
incb
xlat
push
adc
repnz
mov
or
xchg
jle
push
fsubrl
jmp
jmp
in
outsl
movsl
and
and
ja
subb
out
push
mov
fcoms
in
pop
sbb
sbb
sub
loop
in
loope
jp
xor
js
cld
sbb
ds
filds
push
mov
cmpsl
insb
pop
int
cmp
cmp
pop
iret
xchg
dec
pushf
hlt
and
mov
cmpsl
out
inc
ret
cmpl
xchg
pop
inc
xchg
popf
out
stc
pop
push
dec
push
fldt
nop
lcallw
das
dec
and
jl
jecxz
add
into
sbb
mov
inc
scas
xor
dec
mov
int3
xor
dec
arpl
cmp
cmp
adc
jg
das
rolb
and
fcomps
xor
pushf
or
cld
dec
pop
mov
inc
insl
inc
fldcw
lcall
hlt
bound
ret
ud2
rcrb
aas
jae
push
inc
and
lahf
or
fists
xchg
sub
movsl
aad
adc
jecxz
mov
push
je
mov
xchg
adc
xchg
mov
sub
cli
adc
frndint
push
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
cmpsb
sahf
jbe
nop
jle
jl,pt
jle
add
je
sub
int
daa
test
lods
enter
sbb
fdivrl
jns
mov
sbb
std
add
pop
adc
cli
out
adc
mov
gs
sbb
loop
in
out
sbb
jo
imul
fmuls
cld
sbb
xchg
gs
adc
aam
out
pusha
jne
mov
mov
mov
sub
fimull
or
mov
mov
sbb
cmp
sbb
in
shlb
hlt
pop
imul
aam
dec
sub
std
daa
pop
add
xlat
cs
gs
pop
icebp
or
insl
js
cmp
inc
mov
out
jmp
mov
mov
notb
dec
jecxz
adc
daa
test
mov
test
pushf
mov
iret
hlt
dec
enter
sbb
fldenv
inc
ljmp
insl
push
rcrb
or
sub
jns
popa
sbb
daa
adc
mov
adc
cmp
pop
mov
leave
test
movsl
mov
or
int
xor
cs
stc
lds
scas
fdiv
inc
cmp
repnz
mov
arpl
push
aaa
and
xlat
in
dec
out
xor
scas
jmp
out
and
push
mov
lret
xchg
fcmove
sbb
jge
mov
inc
mov
ljmp
ljmp
sub
lret
cli
or
mov
orl
enter
mov
push
push
cmp
push
and
bound
das
inc
lahf
ljmp
and
mov
in
jge
cmpsb
ljmp
js
test
mov
pushl
ds
ja
aad
fisubrs
fstp
movsl
mov
popa
adc
jae
shlb
xchg
sub
cmpsb
jmp
inc
cs
sbb
cltd
sti
lcall
cltd
iret
movl
add
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
xchg
je
cmp
mov
inc
pop
add
push
out
cmp
push
fcoms
or
cmp
dec
pop
jnp
aam
push
push
stos
sub
movsb
adc
out
adc
lret
jne
test
push
lock
leave
add
add
inc
cs
jge
ljmp
imull
dec
xchg
cmc
jle
out
cmp
imul
enter
gs
mov
sub
fisubrl
shlb
pop
int
loopne
sbb
cmp
or
pop
jbe
push
push
and
adc
or
add
inc
ja
sbb
jg
scas
sub
push
gs
pop
mov
stos
mov
push
sbb
cmc
and
sbb
stc
mov
sub
in
jns
mov
inc
imul
cld
sub
loopne
add
jne
xchg
sbbb
out
mov
inc
cld
aam
repz
xor
xchg
mov
xchg
mov
out
inc
jns
std
mov
lcall
and
jae
mov
xchg
pushf
and
push
cmp
add
ljmp
ror
das
out
pusha
fcmove
cmp
cmp
fistl
pusha
pop
mov
or
and
cmp
cmp
adc
xchg
clc
out
adc
dec
inc
xorb
dec
and
xor
iret
jp
shrl
and
sub
sbbb
pusha
add
mov
popa
stos
xchg
mov
xchg
push
push
mov
mov
mov
add
enter
jne
or
cs
ljmp
fnstcw
pop
sub
xor
fstpt
call
loope
repz
mov
negb
int3
inc
ss
jp
fimull
mov
rcr
out
iret
pop
inc
add
in
mov
lret
mov
push
cmc
imul
mov
adc
add
jmp
xchg
jl
dec
or
sahf
ds
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
idiv
loop
mov
adc
jle
xchg
xor
icebp
nop
pop
mov
lock
cwtl
jnp
movb
js
rcll
std
in
cld
daa
ret
and
fcompl
mov
fidivrl
cmp
fisttps
jae
xchg
lock
xchg
cmp
push
subl
loope
dec
jg
dec
aaa
xor
pop
sbb
sbb
in
jae
xor
out
stos
in
pop
pusha
not
xorb
popf
xchg
cmp
enter
push
icebp
jns
dec
push
push
lcall
insl
icebp
xor
stc
cmp
movsl
push
xlat
jne
icebp
dec
jg
jge
addr16
in
fistpl
mov
sahf
sub
mov
sbb
sbb
adc
fs
bound
repnz
lock
inc
mov
xlat
inc
xor
xlat
push
or
jne
mov
fmuls
iret
js
cmpsl
dec
in
int3
mov
icebp
hlt
out
cmpsb
sbb
jmp
scas
and
mov
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
sbb
popf
jle
adc
jle
insb
sbb
and
clc
and
hlt
fldenv
mov
bound
sbb
iret
out
xchg
pop
push
movsb
mov
mov
mov
jo
testb
popa
dec
xchg
and
cmp
push
ljmp
insb
std
cli
cwtl
xchg
jae
dec
ja
fbstp
insb
fucomip
es
jg
nop
dec
sbb
push
fstl
cld
mov
hlt
fs
pop
xchg
push
lcall
repz
rcrl
pop
inc
cmp
popf
frstor
push
mov
test
mov
sarb
rcrw
xchg
jecxz
pop
arpl
scas
inc
pop
stos
sbb
sub
clc
add
mov
rclb
leave
mov
mov
repz
sbb
add
pop
xchg
pop
dec
into
push
gs
popa
adc
pop
inc
cltd
enter
sti
loop
nop
dec
sbb
sub
adc
or
test
pusha
aaa
lcall
xchg
add
mov
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
repz
sbb
jle
jg
jle
loop
stc
arpl
xchg
nop
cmpsb
pop
push
pop
daa
inc
xor
mov
fisubl
push
push
sub
push
movsb
mov
test
rcll
sbbb
ljmp
ja
daa
scas
scas
dec
in
xchg
addr16
test
jge
test
in
or
jne
mov
imul
ja,pn
fsubr
cmp
lcall
mov
mov
pop
je
push
clc
sbbl
sarb
inc
pusha
ret
mov
or
fmuls
mov
push
xlat
push
push
movsb
lods
cmp
add
xchg
fisubl
dec
jb
decb
arpl
jmp
js
fimuls
int
dec
outsl
dec
rorb
fwait
movsl
in
jmp
imul
mov
fisttpll
out
add
dec
and
xor
mov
cmp
loope
push
push
fistpl
mov
lahf
xchg
scas
enter
outsb
and
fisubs
sub
adc
dec
cmp
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
inc
jb
mov
cwtl
jle
adc
jle
mov
icebp
inc
cmp
xchg
push
subb
insl
xchg
inc
dec
into
push
fldt
add
fistpl
arpl
jle
scas
xchg
data16
or
xchg
mov
fcom
mov
push
push
xchg
pop
insl
adc
out
adc
xchg
outsb
outsl
test
cmp
imul
sub
push
inc
nop
xchg
arpl
mov
adc
mov
testl
xchg
fwait
out
ja
cmp
nop
xchg
sahf
aaa
inc
cmp
mov
mov
lcall
loopne
lods
das
adcl
ret
movsl
or
cld
repz
mov
inc
inc
jns
in
adc
jl
sub
dec
adc
mov
filds
cli
xchg
push
int
adc
mov
add
aam
sahf
les
jp
mov
xchg
movsl
ret
outsl
inc
add
repz
out
int3
or
es
out
push
adcl
outsb
jnp
adc
xchg
negl
and
in
mov
aaa
inc
add
movb
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
or
push
cltd
jle
adc
jle
imul
jge
mov
hlt
imul
or
mov
push
divl
add
xchg
push
xor
std
les
scas
scas
popa
push
mov
mov
inc
jae
xchg
lcall
pop
cs
cmpb
popf
imul
adc
adc
vmovntps
and
js
subl
and
call
ds
sahf
cs
sub
pop
adc
mov
mov
hlt
cmp
inc
mov
enter
push
dec
shlb
ja
push
ja
jl
mov
sbb
repz
lods
or
mov
mov
mov
sub
adc
push
dec
in
stos
inc
cmpl
push
lods
shlb
or
jne
mov
pop
out
xchg
daa
jmp
into
iret
or
dec
data16
pop
int3
jae
fldl
sbb
mov
imul
cmp
pop
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
outsl
push
jae
stc
enter
xor
test
fiaddl
push
pop
mov
adc
sarb
cmp
bound
jge
pop
push
loop
into
jp
sub
mov
mov
mov
enter
jg
and
adc
cmp
jne
bnd
lret
js
inc
test
clc
mov
rorb
sub
enter
cltd
mov
xor
mov
dec
push
ds
movsl
sub
pop
jle
rorl
arpl
xchg
lret
movsb
hlt
mov
clc
jg
lcall
bound
and
jmp
cld
sahf
dec
aaa
outsb
jp
sub
jp
jecxz
inc
xchg
dec
jle
cld
sub
rorb
and
bound
rcl
lds
mov
ss
inc
add
or
aam
mov
xchg
cmp
xor
jns
ret
mov
shl
fdivrs
push
xchg
jno
jae
xor
mov
loopne
in
mov
lods
shll
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
pop
ficoml
loop
jle
adc
jle
mov
push
sahf
sub
mov
lods
pop
outsl
into
push
std
shlb
popf
fldl
sub
push
pusha
xchg
cld
mov
psubusw
push
cwtl
xor
push
andl
xor
out
jo
mov
cmp
cmp
add
outsb
mov
xor
scas
push
mov
mov
push
stc
pop
mov
hlt
sti
jo
ror
mov
leave
xchg
jbe
push
stos
jnp
icebp
ljmp
xor
pushf
xor
movsl
out
andl
test
jb
or
xchg
cmpsl
repz
push
call
jnp
es
inc
cmp
jbe
xchg
jnp
insl
jne
pusha
or
or
cmp
push
push
dec
insb
pop
jno
cmpsl
push
into
cs
or
cs
movsl
movsl
outsl
jnp
dec
push
loop
mov
mov
dec
les
pop
fwait
pop
pop
sub
call
jns
inc
mov
or
shlb
js
push
in
es
aad
pop
in
es
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
dec
xchg
jle
adcb
push
adc
aas
or
jae
or
enter
outsl
adc
mov
mov
and
movsl
mov
test
mov
lock
stos
or
inc
ret
lret
cmc
sub
push
popa
mov
mov
adc
je
std
jl
sub
mov
sub
stos
pop
rcl
pop
ffree
adc
pop
jo
mov
shrl
insb
aam
sbb
sub
lcall
stos
icebp
xor
enter
popa
test
sarb
push
xchg
bound
lods
cmp
and
rorl
mov
or
loope
cld
jle
hlt
sbb
lcall
and
xor
mov
orl
xchg
or
sub
and
xchg
sbb
adc
shrb
aam
adc
aad
and
add
pop
sub
into
add
mov
insb
push
icebp
pop
rcrl
mov
push
cmp
ss
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
movsl
jle
push
jg
jle
enter
jle
adc
test
push
call
bound
movsl
out
hlt
pop
xor
jae
cmpsb
mov
jecxz
inc
nop
aas
stos
xor
pop
in
ja
pop
pop
pop
xchg
pop
aad
xor
pop
push
into
cmp
xor
or
mov
dec
lahf
sarl
sbb
cli
dec
dec
jg,pt
push
das
and
mov
sahf
xchg
sbb
or
inc
push
fistps
mov
popa
cmp
ja
roll
movsb
subl
adc
mov
pop
dec
jne
xchg
sub
cltd
icebp
scas
add
ds
mov
jge
test
dec
aas
outsl
inc
jne
inc
cmpsb
call
pusha
sbb
in
inc
in
pusha
cmp
into
sub
imul
das
push
bound
xchg
outsb
pop
mov
add
lcall
ficomps
pop
pop
jo
leave
pop
jns,pn
fs
adc
or
pop
add
push
pop
and
loop
push
push
in
adc
mulb
add
or
mov
clc
and
dec
js
xchg
jmp
xchg
inc
rorb
insl
xor
mov
xor
push
leave
sbb
mov
push
gs
repz
jae
gs
dec
adc
mov
push
nop
cmp
roll
inc
xchg
mov
divb
movl
push
cmp
cmp
std
adc
inc
cmpsb
jns
in
push
adc
int
jne
and
inc
push
jno
fs
fcmovnbe
add
jb
jecxz
sbb
clc
sub
fildll
test
mov
sbb
sub
shlb
pop
gs
out
insb
push
or
js
ret
push
aaa
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
push
lock
cmp
loopne
inc
insb
out
sub
data16
and
insl
stc
and
mov
push
enter
je
ret
push
fwait
int
repz
pop
mov
std
sub
mov
repnz
push
sub
cld
and
mull
adc
shlb
adc
scas
jecxz
dec
cmpsb
push
mov
push
js
sub
mov
adc
mov
std
jge
jns
iret
or
push
outsb
add
push
fsubrs
pushf
mov
mov
add
xor
out
xchg
shll
stc
jnp
ss
inc
push
movl
cli
jb
ror
xchg
adc
inc
lret
mov
adc
insb
mov
sbb
daa
dec
sbb
xchg
test
mov
stos
in
mov
lea
test
ret
fidivrl
rsm
js
and
add
push
std
les
push
clc
loop
jb
cld
aaa
mov
cmp
dec
pop
scas
and
mov
mov
psubw
fadds
mov
mov
cli
sub
icebp
cmpsb
jns
inc
pop
xchg
cwtl
dec
mov
aas
loope
xchg
out
or
push
daa
cmpsl
ja
lcall
xchg
mov
repnz
mov
mov
mov
lahf
inc
or
movsl
addr16
cmp
fstps
mov
movsl
std
adc
inc
jno
xor
pop
scas
jge
jg
cmp
rcrl
adc
lods
jo
ljmp
fwait
cmpsb
xchg
mov
roll
imul
pop
mov
lcall
or
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
mov
jle
cmp
sub
jg
ret
or
cli
adc
pop
jnp
lahf
mov
xchg
pop
nop
stos
fwait
cmp
adc
jns
cmovge
aas
mov
bound
test
leave
cld
xchg
xchg
cld
cmp
xlat
xchg
cwtl
push
push
or
mov
jne
mov
adc
aad
or
mov
push
jns
mov
pop
mov
xchg
rcr
enter
cmc
std
cmp
int
add
dec
push
mov
pop
jae,pn
inc
test
jmp
adc
mov
bound
cltd
lea
push
or
cmpl
fldcw
les
test
addr16
sub
popl
push
std
das
pop
cmp
icebp
mov
jp
mov
adc
push
jge
xchg
insb
pop
lea
negl
in
push
das
xchg
jnp
hlt
pop
push
xchg
pop
adc
mov
cmpsb
dec
mov
adc
inc
scas
scas
mov
hlt
clc
aas
mov
hlt
pop
fists
push
add
xchg
inc
fwait
jbe
dec
xchg
mov
xor
sti
es
push
push
js
movsb
inc
sahf
adc
xchg
ljmp
das
jb
sbb
das
mov
icebp
and
out
cmp
jae
mov
push
pop
adc
xor
mov
or
leave
incl
push
in
dec
sahf
andl
clc
pop
pop
inc
lock
xor
das
ret
fbld
jecxz
mov
pop
gs
mov
sbb
rorb
pushf
xor
fwait
jne
and
adcb
xchg
loop
add
add
ss
mov
jge
cmp
movsl
fiaddl
pop
adc
ss
ljmp
ja
jno
cmp
rcrb
divl
bound
pop
rcr
sub
mov
push
aad
or
idivl
ds
and
inc
das
xchg
adc
fistpl
cld
jo
jge
mov
lahf
jl
mov
pop
mov
repnz
insb
loopne
sbb
jo
and
sbb
push
or
xlat
pop
lret
mov
popa
clc
mov
in
int
inc
jecxz
mov
sarl
dec
shl
iret
xorl
scas
fwait
addr16
ficomps
popa
sti
mov
push
push
jns
dec
cli
fistpl
push
es
mov
cld
adc
out
std
aaa
in
loop
xor
sub
push
and
jmp
xor
and
lds
pop
pop
inc
sysexit
sbb
repz
lods
hlt
into
mov
mov
xchg
pushf
adc
jnp
lods
sbb
mov
js
jbe
loope
insb
loop
adc
loope
and
bound
insl
ljmp
sarb
lock
test
stos
nop
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
lret
aam
jle
jl
jle
movsb
bound
cmp
in
pop
idivl
mov
mov
xchg
dec
push
aam
push
mov
mov
fsubrs
sbb
sbb
call
pop
xor
lahf
lods
popf
roll
pop
sarl
cltd
lret
cmp
scas
add
add
jae
cmc
aad
aam
add
xchg
inc
dec
fwait
mov
jbe
ljmp
mov
adc
mov
jo
sub
js
daa
xchg
pusha
add
jno
popa
pusha
aam
shl
arpl
data16
cmp
fildl
gs
scas
mov
jle
ficomps
xchg
and
rcr
pop
inc
cmp
fyl2xp1
std
lret
popa
fstps
adc
mov
mov
movsl
push
dec
xchg
mov
lret
fs
insl
jb
mov
xor
push
dec
fmul
sub
pop
scas
cmp
mov
test
sub
push
int3
iret
mov
inc
xchg
insw
aas
pop
js
rclb
push
xchg
sub
xor
mov
push
data16
xchg
adcl
adc
stos
add
movsb
cmpsb
or
rcrb
nop
in
lds
xchg
jp
dec
rcrb
xor
jnp
push
cli
test
insl
push
outsb
ljmp
shlb
mov
std
xor
int3
cs
je
stos
jb
jns
out
sbb
mov
push
xchg
mov
add
inc
sub
sbb
je
cli
or
mov
fisubl
shll
loopne
fisttpll
test
mov
stos
xchg
jne
pusha
pop
push
add
lock
mov
pop
xor
sbb
mov
xchg
je
mov
leave
sub
std
lds
push
orb
xchg
mov
inc
mov
outsb
aaa
adc
xlat
test
scas
into
dec
leave
inc
mov
test
bswap
pushf
mov
xor
mov
jo
mov
stos
pop
xchg
ds
faddl
ret
ret
test
cmp
fwait
arpl
dec
mov
cld
jne
ret
xchg
push
adc
sbb
add
cmp
mov
aaa
push
leave
aam
and
scas
mov
add
roll
lret
add
xchg
jns
and
loopne
mov
cmp
or
mov
jne
push
mov
sbb
and
lds
repz
mov
in
das
es
das
imul
mov
mov
xor
ss
clc
jp
enter
fdivrl
call
loopne
pop
pop
add
add
icebp
fdivr
and
adc
push
xchg
push
movsb
aam
push
lods
xchg
pop
push
dec
aas
mov
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
pop
shrb
jle
pusha
or
jg
jp
jmp
or
jo
mov
pop
lret
dec
cmc
call
xor
lahf
js
nop
pop
cmp
push
sbb
and
loop
xchg
adc
movl
push
jae
cmp
and
lret
daa
cmpsb
dec
std
mov
pop
pop
push
xchg
mov
mov
inc
jg
fcmovbe
ret
pop
xchg
cmp
jbe
pushf
inc
mov
lods
enter
xorb
add
pusha
rol
pop
mov
lahf
cli
popf
js
push
mov
add
cwtl
xchg
std
or
rol
bound
push
cmp
pop
repz
push
sbb
movsl
mov
xchg
adc
and
in
icebp
andb
scas
adc
or
orl
lods
sbb
inc
push
cmp
out
and
ret
fld
cwtl
mov
dec
or
xlat
pop
mov
ds
icebp
lea
stos
add
pop
inc
nop
cmp
add
sbb
lret
mov
mov
jle
push
fdiv
cmpsb
je
jle
incl
add
cwtl
jb
mov
mov
repz
lods
jb
dec
out
cmpsl
dec
add
in
sbb
inc
insb
push
adc
xchg
movsb
shll
mov
adc
adc
pop
jb
lret
daa
test
insl
pushf
mov
dec
jns
sbb
or
mov
cmp
jl
add
pushf
arpl
dec
outsb
sub
out
clc
les
inc
mov
cmpsb
pop
data16
scas
subl
and
adc
sub
pop
icebp
out
mov
push
out
push
lods
inc
push
ret
adc
cmpsb
test
cmpsb
sbb
jle
push
sub
loop
sbb
xor
push
pop
mov
jmp
jmp
test
mov
dec
jns
popf
nop
mov
push
and
mov
cmp
mov
inc
jp
jo
dec
in
lret
or
mov
push
dec
out
popa
mov
daa
mov
cmpsb
push
cmp
test
xchg
pop
add
in
add
mov
jg
aad
cmp
nop
data16
in
jno
add
sahf
sbb
cmpsb
lods
adc
insl
push
subl
mov
mov
xchg
mov
and
aad
shrb
scas
enter
and
fnstcw
in
outsb
adc
fsubrp
mov
push
push
sahf
imul
mov
cmp
lds
pop
sub
into
dec
xchg
or
in
xor
cmp
and
sbbl
mov
cmp
xchg
scas
sbb
jmp
test
sbb
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
sub
push
mov
jle
jge
jle
mov
mov
ljmp
sarb
adc
sub
xor
mov
jno
movsb
gs
mov
or
in
xor
push
xchg
mov
cltd
in
dec
cmp
jmp
or
adc
push
nop
inc
push
mov
sub
pop
idiv
lods
aas
mov
aaa
jge
pushf
mov
ficoms
pop
fsubl
adc
xchg
mov
jb
roll
jmp
mov
out
popa
xor
negb
jnp
inc
movsl
idivb
mov
dec
call
std
pop
jle
in
jnp
lea
push
insb
sub
cli
loop
sbb
xor
xor
mov
movb
xor
mov
jle
sub
cmpsb
sbb
out
outsb
pop
fs
push
mov
lods
or
pop
fwait
cmp
out
inc
pusha
xchg
sub
imul
inc
inc
int3
gs
cmp
ss
jle
iret
jp
repnz
popa
xchg
cmp
divb
mov
out
inc
mov
aam
in
mov
fsubrl
inc
and
pop
out
sbb
aam
cmp
sahf
bound
add
xchg
stos
stos
bound
lea
leave
adc
fucom
cli
push
dec
je
sti
ss
or
pop
mov
push
jecxz
test
xchg
inc
pushf
and
push
jns
sub
or
fs
mov
adc
jo
popf
in
call
push
mov
mov
ljmp
cmp
sbb
or
sbb
loopne
push
inc
cltd
xchg
je
or
test
jle
cmp
dec
pop
call
nop
sbb
inc
sbb
test
push
xchg
add
xchg
insb
outsl
lds
and
shl
int
xor
or
in
dec
psubusb
mov
movsl
push
cmpb
iret
rcll
movb
adc
in
cmp
addr16
cmc
or
int3
mov
push
lods
pop
mov
lcall
mov
bound
pop
insb
rorb
test
pop
sub
movsl
mov
mov
jg
int3
js
insb
repz
sbb
les
insb
push
cmpl
outsl
add
lea
jecxz
mov
loopne
subb
pop
jne
lock
rolb
push
pmullw
shlb
push
pop
add
inc
jmp
movsb
mov
xor
lret
mov
and
movsl
aad
loop
pop
dec
xor
mov
push
into
xchg
pop
push
jle
out
jmp
sub
icebp
test
sub
pop
adc
in
add
andl
andb
dec
jno
cli
movsl
cld
mov
insl
mov
nop
push
testl
xor
mov
jmp
or
pop
jno
xchg
add
lods
sub
mov
jle
jge
jle
lahf
addl
adc
push
pop
shlb
mov
fnstenv
push
cwtl
jns
pop
push
adc
push
negl
or
jmp
mov
enter
shl
cmpsl
stc
js
clc
in
test
popf
subb
mov
sbb
and
mov
dec
inc
add
dec
gs
lahf
leave
push
mov
cmp
jb
push
popf
arpl
cmp
test
dec
negl
shrl
in
mov
cmp
mov
retw
inc
testb
sbb
mov
scas
in
xor
orl
xor
outsl
mov
test
xor
sti
shll
xor
and
lds
aaa
cmp
lea
and
lahf
dec
mov
aaa
das
dec
mov
dec
fdivs
fildl
mov
inc
pop
or
les
call
insl
fcmovne
movsl
inc
lret
outsl
cwtl
mov
iret
or
mov
inc
and
loope
mov
xchg
loop
ret
cmp
rcr
inc
mov
setns
movsl
es
cli
call
daa
mov
jns
xchg
sbb
sub
mov
xchg
add
add
xor
add
dec
mov
xchg
mov
push
sub
icebp
fldl
cltd
add
pop
cmp
xchg
push
rol
daa
pop
adc
scas
adc
xor
pop
sub
xor
jbe
inc
ja
inc
and
fs
dec
cmp
mov
mov
lcall
jne
push
push
jns
scas
push
fstl
loopne
addl
mov
fidivrs
cmc
jmp
or
movsb
int
mov
jl
mov
xchg
int3
ret
push
cmp
lea
pop
sub
ljmp
sub
rdmsr
adc
push
or
sti
jle
sub
call
dec
repz
dec
insb
lea
push
dec
test
test
out
pcmpgtd
mov
xchg
add
cwtl
addr16
xchg
and
sub
jb
mov
out
push
mov
xchg
divb
pusha
jne
or
dec
dec
cmp
push
fdivs
fs
adc
xchg
push
popa
cs
pop
lahf
ficomps
and
ret
cmp
mov
fcos
push
inc
mov
sub
adc
lahf
gs
dec
xchg
jg
cmpsb
call
sbb
jp
imulb
loop
lret
out
fwait
push
push
push
xchg
dec
jns
hlt
push
pop
mov
adc
pop
hlt
lcall
cmp
push
xchg
push
movsl
mov
fmull
cltd
pop
jnp
and
mov
scas
jb
cmc
xchg
fs
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
xor
and
scas
jl
jle
cmp
and
nop
and
sbb
mov
cmp
sub
js
ss
std
int3
dec
dec
dec
pop
neg
adc
push
cmp
lds
sbb
push
mov
fstpt
adc
and
leave
mov
sti
mov
mov
or
lret
cs
add
repnz
sub
lds
rcll
pushf
and
push
outsb
inc
cmp
pop
arpl
std
add
mov
imul
add
lret
push
rcrl
or
push
loopne
mov
sbb
pop
mov
popa
mov
bound
xor
shrl
dec
and
mov
rcll
xor
dec
push
mov
pop
push
in
test
in
sub
pop
cmp
in
ds
inc
and
rorb
mov
fwait
jmp
lcall
into
push
jb
dec
add
xchg
ja
shll
in
jmp
push
call
cs
or
icebp
xchg
fbld
sub
add
ret
nop
call
add
cmp
sbb
adcl
push
icebp
push
cmp
pop
or
lcall
push
movsl
lret
sbbl
out
in
setge
loopne
pusha
fistpll
das
ja
outsl
sbb
loope
std
xorb
jb
push
loopne
jge
cs
lea
and
fildll
subl
mov
adcb
rcrl
adc
pop
insl
mov
clc
inc
dec
or
add
dec
jne
int3
repz
pop
adc
movsl
ficoms
je
xchg
jno
cmc
cmp
add
outsb
mov
or
int
cli
xor
jp
xchg
lods
stc
aaa
mov
sti
and
add
and
test
or
cwtl
insl
sub
and
xchg
imul
les
jnp
data16
testb
repnz
jge
adc
mov
loope
or
jo
and
into
sub
pop
fnsave
add
inc
sahf
push
jns
or
sbb
ss
jg
mov
dec
pop
sahf
imul
mov
inc
or
aam
mov
lds
inc
movsb
inc
xor
js
pop
add
add
and
jbe
rorb
ljmp
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
mov
mov
mov
stos
pushf
mov
add
pop
push
loop
and
sbb
pop
or
or
dec
int
insb
push
adc
shrb
mov
xchg
cmp
movsb
int3
sti
lahf
mov
int
xchg
adc
pop
push
lret
mov
xchg
sahf
fistl
xchg
jne
xor
mov
xor
ja
adc
movsb
in
and
pop
fisubrl
xor
pop
mov
xlat
xchg
cmp
inc
int3
arpl
xchg
mull
in
mov
add
jl
hlt
adc
xchg
jecxz
outsl
or
jo
insl
push
and
test
es
xchg
push
sbb
jno
sbb
dec
pop
add
out
incl
repnz
fwait
repnz
pop
jne
mov
and
test
rcrl
cld
lds
inc
popa
mov
sbb
icebp
lahf
mov
mov
xchg
dec
loope
add
jae
xchg
ret
mov
push
adc
push
adc
adc
scas
or
sbb
pop
xchg
cmp
cmp
push
cli
test
nop
pushf
jns
popa
lock
sub
add
xor
out
iret
fistpl
or
inc
dec
fxch
lods
mov
adc
in
fnstenv
push
pop
cmpl
mov
lods
out
into
mov
fstl
mov
sbb
push
pop
nop
push
push
popf
jge
sub
cmp
lahf
adc
jl
outsb
mov
test
mov
rcrb
data16
sub
stos
push
sbbb
arpl
into
adc
sahf
aad
mov
xor
fldl
push
imul
jmp
jb
add
fstpt
shll
fsubrs
cmp
fcomp
icebp
loopne
in
push
cs
mov
and
imul
jecxz
fisubrs
xor
dec
mov
mov
sbb
mov
sar
and
sbb
inc
mov
icebp
sarl
sub
out
rdtsc
jg
inc
and
aad
mov
mov
fidivs
jle
mov
imul
cmc
adc
mov
mov
dec
pop
pop
mov
fcoms
mov
lcall
xchg
dec
mov
pop
inc
mov
inc
call
es
xchg
jne
push
aaa
jae
rorl
ret
mov
leave
add
add
xor
push
xchg
pop
roll
mov
jl
jle
xchg
pop
cli
in
mov
aad
and
jae
lds
adc
insb
aas
jbe
int3
js
fs
jne
dec
lods
pop
xorl
mov
and
movsb
shlb
adc
xchg
xor
add
dec
mov
xor
cmp
push
mov
mov
scas
mov
movsb
sub
js
or
fs
icebp
xchg
add
ret
xchg
and
call
scas
icebp
imul
das
jbe
mov
pop
daa
cmpsb
pop
sahf
mov
repz
dec
pop
rorb
jns
fmul
loope
out
push
sbb
inc
mov
mov
leave
hlt
or
in
mov
mov
xchg
xchg
and
dec
repnz
and
inc
ja
sti
stos
faddl
clc
or
push
aam
outsb
pop
cmpsl
xchg
sbb
dec
icebp
or
ret
pop
shll
lret
ljmp
pushf
fbstp
and
pop
hlt
loope
jle
mov
and
dec
push
or
pop
shll
out
pop
mov
sbb
mov
xchg
enter
push
jecxz
in
or
loope
cli
jno
and
or
int3
inc
mov
pop
stc
jb
stos
stos
cmpsb
fnstcw
or
daa
sub
or
out
pop
mov
lods
clc
sahf
lea
mov
mov
lds
xchg
mov
xor
or
fadds
insl
mov
sbb
or
mov
or
popa
mov
push
jle
ljmp
adc
cmpb
in
clc
jae
je
cwtl
stc
dec
cmp
and
insb
jge
aad
fdivp
rcr
cmp
cs
push
push
dec
jb
scas
out
mov
add
dec
mov
add
xor
mov
xor
mov
mov
fcmovnb
fnstsw
pop
xchg
dec
sbb
cmp
inc
lods
mov
adc
dec
orl
mov
jbe
sbb
imul
imul
pop
out
lds
stc
xchg
imul
push
mov
mov
sbb
mov
pushf
jae
iret
xchg
xchg
rcll
roll
je
xor
in
sub
cmp
mov
pop
test
arpl
movsb
mov
out
add
add
add
push
push
lock
outsb
dec
mov
sahf
jmp
jle
scas
jl
jle
inc
pop
sbb
adc
xchg
leave
cmp
and
lcall
mov
scas
push
adc
jno
or
ja
jmp
stos
insb
or
movsb
pop
mov
aam
icebp
loop
add
fdivs
jl
je
push
push
outsb
fcomps
addr16
ljmp
das
xchg
rcrb
movsb
into
adc
xchg
inc
dec
or
and
sub
dec
xchg
lret
and
sub
bound
xor
xchg
adc
mov
pop
int
mov
fmull
jecxz
mov
adc
xor
sub
in
movsl
jle
sarl
jmp
sbb
cltd
enter
pop
int3
fdivs
mov
sub
dec
cmp
adc
hlt
jb
or
sub
stos
movsb
test
mov
fs
mov
pop
dec
push
dec
data16
js
ja
mov
adc
sub
mov
imul
adc
jae
repnz
adc
daa
sub
ret
mov
xor
aas
jbe
push
inc
inc
aaa
cmpsl
call
mov
xor
xor
add
fcoms
lds
nop
sub
cs
jbe
cmc
movsl
pop
xchg
push
ror
andl
pop
leave
lds
pop
cmpsl
mov
leave
test
or
mov
and
push
orb
inc
or
adc
inc
cmp
xchg
adc
xor
aaa
fnstenv
mov
push
bound
cmc
push
xor
mov
test
clc
cld
cmpl
sar
or
in
push
inc
scas
xor
sub
pusha
stos
movsl
push
sbb
mov
xchg
scas
pop
adc
shr
lahf
clc
test
aaa
ss
push
lahf
imul
int
popa
dec
les
push
mov
ret
cmpsl
shll
and
iret
push
inc
dec
inc
xchg
mov
bound
outsl
nop
fisubrl
lods
adcl
xchg
pushf
testl
and
ret
sbbb
and
pop
popa
push
std
mov
insl
sahf
mov
xor
sbb
mov
and
iret
dec
push
or
cmp
or
jmp
jb
xchg
jp
pop
lea
unpcklps
cmpsb
lret
fstpl
mov
sub
mov
into
xchg
mov
sbb
sar
nop
sub
jne
ret
sub
les
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
add
sbb
jle
jl
jle
stos
hlt
pop
mov
cmp
mov
xchg
xchg
bound
arpl
nop
pop
mov
ret
cli
mov
cld
stos
sub
sub
jge
fidivs
sbb
mov
fstpl
jns
mov
pop
lret
sub
in
push
daa
xchg
sub
xor
icebp
movsl
dec
lock
imul
fs
aad
cs
add
negl
pop
enter
popa
incb
xor
xor
repz
or
mov
mov
and
mov
adc
js
cld
adc
or
adc
sarl
shlb
dec
cmp
and
test
lret
das
pushf
data16
xchg
xchg
mov
and
or
dec
data16
inc
rolb
loop
xchg
mov
or
mov
jbe
lods
icebp
inc
mov
fwait
or
push
in
or
movsb
fldl
in
pop
vpcmpgtw
and
jle
mov
insl
scas
mov
sahf
fsub
push
cmp
lcall
call
fsubrl
mov
sub
lea
int
mov
cmc
jg
add
push
xor
pop
or
out
jg
cld
les
sub
push
cmp
icebp
mov
scas
dec
dec
jge
andl
push
pop
inc
ja
xor
mov
cwtl
xlat
fstl
pop
jae
ret
ffreep
hlt
pop
incl
mov
insl
cli
in
dec
dec
dec
cs
mov
stos
adc
cmp
jae
insl
insl
es
xor
rolb
rcrb
jo
push
subl
mov
mov
addl
rol
stc
int
sti
add
outsb
inc
or
jge
loopne
in
std
add
mov
lds
adc
sub
mov
xor
jmp
push
add
mov
xchg
lock
mov
pop
pop
movsl
jmp
orl
and
pusha
xchg
cmp
lods
dec
sti
sbb
add
mov
cmpl
xlat
pop
fsubl
push
sub
pop
jecxz
dec
rol
daa
mov
cs
xchg
jbe
addr16
inc
stos
sbb
repz
daa
das
mov
adc
adc
push
jno
mov
or
in
cmp
jle
daa
daa
outsb
pusha
mov
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
mov
mov
inc
jle
scas
jl
jle
std
movsb
icebp
gs
repz
cmp
mov
sar
inc
xchg
jne
cmpsb
stos
push
push
push
movsl
sub
addps
negb
fs
lock
pop
call
movsb
mov
call
or
aad
nop
jne
aaa
movb
dec
cmp
xor
or
out
jp
fiaddl
adc
mov
push
fwait
scas
xlat
pop
push
mov
push
cli
fisubrl
repnz
mov
sub
push
inc
imul
rol
dec
xchg
ficomps
and
insb
mov
or
enter
jmp
cltd
arpl
decl
repnz
pop
sub
add
fistl
fcoms
push
xor
sbb
iret
repnz
mov
loop
repnz
mov
add
mov
movsb
inc
test
sbb
testb
sub
push
test
push
repnz
rcrl
testl
or
mov
add
mov
inc
ss
js
in
sub
push
jne
fisubl
or
mov
jns
mov
jmp
out
lret
clc
mov
stc
cmp
or
inc
test
sbb
subb
clc
mov
fstpl
or
cmp
mov
out
sub
or
shrb
jnp
push
cwtl
adc
lret
int
fisttpl
xor
inc
push
mov
xorb
pop
fyl2xp1
iret
push
lret
fwait
imul
aam
lret
pop
mov
je
int3
dec
jnp
pop
fnstenv
dec
imul
cmp
add
mov
inc
push
xchg
push
pop
aam
popf
mov
dec
sub
sti
test
nop
lods
mov
fwait
jle
xchg
imul
mov
push
lcall
lret
mov
insl
cltd
imul
scas
cli
sbb
fsubl
loopne
sahf
repz
mov
jbe
fldcw
mov
jge
and
mov
int3
aam
hlt
imul
inc
jge
ss
push
add
pop
push
jae
dec
pop
lock
divb
lahf
cmp
pop
jl
add
mov
scas
pop
mov
lock
out
insl
xchg
hlt
mov
inc
in
pusha
dec
cmpsl
scas
mov
and
fidivs
mov
cmp
xchg
add
mov
mov
loop
push
pop
popf
sarl
mov
ljmp
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
adc
inc
jle
movsb
jg
jle
xor
gs
inc
push
inc
add
hlt
sub
test
xor
add
rol
push
inc
loope
xlat
in
sub
jae
das
add
push
pop
xor
shlb
repz
push
aas
push
rcrb
aaa
in
imul
sub
cmpsl
push
imul
bound
mov
fwait
bound
lds
sub
mov
pushl
les
xchg
test
outsl
repz
jae
xor
mov
testb
mov
mov
jmp
lock
push
cmp
add
lods
pop
insl
subl
xchg
stos
adc
xor
adc
aad
sub
fmul
or
lahf
scas
cltd
in
cli
repnz
loope
lds
stos
pop
imul
jno
sbb
fwait
add
imul
xchg
pop
popf
aas
hlt
pushf
addb
sbb
xchg
pop
iret
jp
mov
out
stc
pop
cmp
inc
dec
inc
xadd
out
stc
push
adc
pop
scas
test
aaa
lock
rorb
sub
sti
sbb
cmpsb
leave
push
fnstenv
sbb
lret
lea
cmp
cmp
fcmovnbe
inc
adc
cmpsb
mov
cli
cltd
movl
pop
fdivrp
rcrb
out
nop
jns
movsl
push
js
push
outsb
dec
pop
ljmp
sarb
push
lret
aad
adc
lea
lcall
add
push
mov
in
subl
mov
inc
add
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
movsl
mov
jle
movsb
jg
jle
mov
push
es
mov
or
mov
sbb
mov
or
shlb
lock
jno
ja
fimull
imul
xchg
imul
adc
scas
jmp
lret
aam
pop
jnp
xlat
mov
pop
push
sub
jnp
adc
popf
jmp
xor
mov
pop
movsl
in
rcll
and
inc
js
fidivrl
fidivl
insl
shll
imul
xor
gs
test
sahf
and
pop
mov
xor
dec
icebp
lret
or
add
dec
outsl
xchg
fimull
in
inc
scas
mov
data16
mov
mov
dec
adc
jnp
std
nop
cmp
out
pop
or
mov
mov
push
loop
or
bound
das
mov
xchg
jl
push
add
push
push
jae
cmp
sahf
insb
aam
add
daa
and
shrb
add
mov
cmp
jns
mov
cmp
xchg
pusha
adcl
push
movsl
cmp
add
cltd
and
mov
mov
push
fs
repnz
sbb
push
out
adc
pop
mov
sub
pop
inc
js
movsb
add
cmp
cli
dec
sub
lds
subl
clc
es
ja
or
or
popf
in
daa
lea
xchg
pop
loopne
cld
iret
movsl
loope
shr
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
mov
cltd
inc
add
add
add
gs
ja
sub
or
xor
push
sub
test
sbb
repnz
jp
loopne
pop
nop
and
sbb
movsl
dec
outsb
loopne
push
xor
cmp
lcall
int
movsb
cltd
inc
inc
add
pop
sahf
and
mov
add
cmp
mov
add
mov
sbb
jb
popa
cmpsl
xor
popa
xchg
ret
cmpsb
adc
mov
push
sub
mov
xor
mov
movlps
xor
dec
cmp
dec
popa
data16
leave
clc
pop
adc
xchg
pop
mov
out
pop
adc
adc
dec
xchg
cmpsb
dec
mov
mov
pop
mov
jns
in
add
je
jno
add
push
imul
sub
sbb
lods
sbb
sbb
inc
outsb
xor
push
mov
imul
add
push
pusha
in
jle
lcall
hlt
loopne
add
add
add
dec
fmulp
mov
andl
ja
cltd
dec
jle
aaa
rcrb
or
mov
stc
leave
mov
and
sub
cwtl
fs
jns
push
cltd
fsubs
andb
xchg
jmp
dec
daa
into
dec
xchg
loopne
jl
stos
mov
add
sbb
dec
xor
sub
cs
repnz
and
sbb
jp
xor
cltd
rcll
test
inc
push
in
movsl
cmp
xchg
sub
jbe
jbe,pn
mov
jmp
ja
jecxz
pop
bsf
clc
dec
push
fwait
pop
push
adc
xor
pop
mov
pop
popa
push
loop
das
or
js
dec
jno
or
cmc
mov
cmp
mov
lret
jae
shl
and
cmpsb
sub
pop
call
add
cwtl
clc
push
out
mov
enter
ret
lret
mov
shll
in
aam
call
pop
mov
jb
add
add
add
mov
push
pop
jne
repz
add
add
add
nop
dec
daa
out
adc
cmpl
sbb
lret
inc
jne
and
es
mov
out
mov
inc
mov
jo
mov
adc
in
inc
mov
xor
mov
bound
xor
xchg
pop
sbb
push
shl
in
mov
cltd
xor
divb
xchg
jb
shrb
jmp
leave
lea
or
add
rcrl
test
das
or
shll
sbb
cs
jmp
dec
repz
repz
add
ffreep
lock
dec
jb
jecxz
mov
pushf
stos
add
cld
iret
movsl
lds
push
lds
cmp
loopne
sarb
lock
push
das
out
push
pop
xchg
popf
dec
push
adc
xchg
mov
and
add
dec
out
outsl
jnp
sti
movsb
xchg
es
or
loope
stc
add
mov
roll
sub
add
add
add
jl
sub
pusha
inc
xor
fwait
popf
xchg
cmc
dec
add
cmp
das
clc
mov
jnp
inc
cmp
repz
mov
shll
xchg
mov
dec
mov
and
loope
nop
ret
push
in
dec
xchg
push
mov
jae
xchg
das
popa
push
jnp
test
cli
mov
push
sti
push
xchg
daa
mov
shll
mov
mov
ja
call
ja
loop
xor
dec
dec
dec
mov
xchg
pop
push
nop
aam
sub
sti
icebp
jns
pushf
xor
rol
mov
int
ds
jo
mov
mov
scas
sbb
loope
xor
pop
push
lods
cmp
xor
push
and
iret
movsl
icebp
pop
pop
push
sbb
jp
mov
dec
les
idiv
pop
jns
call
stos
mov
insb
add
loope
out
xor
pop
jae
or
pop
dec
or
loope
outsb
in
aad
add
add
push
popa
cltd
movsb
scas
cmp
cmp
addr16
jle
popa
xor
stos
add
lock
orl
bound
and
insl
popa
aaa
jo
lret
add
call
shlb
jl
cmp
or
or
cmp
cmpsl
adc
inc
loopne
mov
stos
mov
mov
xchg
cmp
subb
sbb
push
inc
jle
lahf
mov
cmc
cmp
negl
cmpsl
add
xchg
ror
push
call
push
pop
inc
mov
inc
cmp
and
mov
and
sahf
or
jmp
insb
loop
lock
inc
jo
loope
and
hlt
cwtl
adc
mov
cmp
pop
ljmp
cwtl
in
loope
in
add
pushf
cmp
push
inc
cmc
pop
push
sti
divl
xor
add
int3
cmp
scas
mov
xor
lcall
add
add
cmc
insl
cmc
out
lcall
enter
jb
hlt
lock
add
add
add
cmpsl
mov
fdivrs
or
ja
xchg
js
add
ret
lret
cmpsl
js
add
out
jae
or
int
popf
cs
sub
lret
vmovss
xchg
add
cmp
mov
dec
call
les
lret
adc
imul
sub
jp
cwtl
jmp
lahf
in
icebp
testb
cs
fs
xchg
movsb
mov
xchg
fstl
stos
mov
fcmovbe
cmp
or
mov
in
cmc
sbb
and
rcr
icebp
push
icebp
jne
je
jmp
xor
or
jmp
mov
out
sub
fwait
cmp
sbb
movsl
push
push
cmp
xchg
push
jecxz
dec
push
mov
sarb
insb
in
jle
stc
addb
popa
mov
out
rcll
add
add
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
pop
sub
xchg
test
xor
sub
jae
and
mov
pop
lock
test
jne
mov
push
fcmovbe
inc
stc
mov
mov
jns
outsb
sbb
pop
jbe
adc
loop
les
sbb
and
jns
cmp
es
lock
mov
sti
jmp
fisubrl
push
sbb
pop
jo
movsl
mov
or
jno
sbbl
xchg
pop
fwait
lods
stos
je
fildl
in
cmc
and
mov
lahf
and
imul
sub
mov
lahf
jp
imul
cmp
sbb
mov
pop
and
lahf
xchg
inc
pop
xchg
xchg
leave
jecxz
cltd
dec
enter
jns
imul
pushf
pop
lock
fwait
sti
sti
je
xor
xchg
icebp
xchg
dec
cmp
xchg
dec
cmpsl
or
and
scas
sti
jle
pop
push
pop
sbb
clc
fadds
add
add
and
adc
add
lahf
push
ds
outsl
inc
mov
fwait
inc
push
lods
sbb
insb
mov
fwait
add
cltd
test
gs
and
adc
les
add
xor
adc
dec
push
dec
mov
scas
push
xlat
bound
jbe
pusha
dec
xor
outsl
arpl
xor
sarb
push
or
or
loopne
loop
mov
lods
cmpsl
push
jp
or
pop
into
cmpsb
cltd
ja
and
inc
fldenv
and
jg
lods
add
adc
fstpl
sbb
sahf
js
or
in
ljmp
mov
cltd
jno
test
or
cltd
dec
sub
orb
rolb
movhps
lods
inc
cmp
mov
mov
jge
xor
push
mov
jmp
imull
add
add
negl
arpl
leave
xchg
cld
flds
add
add
rol
jp
adc
sub
inc
pop
pop
imul
sub
inc
mov
ror
adc
sub
repz
fwait
shr
or
aaa
xor
shrb
fs
cmc
in
movsb
dec
icebp
movsl
jo
rcrl
divl
test
roll
in
dec
fisubl
arpl
xchg
add
xchg
jecxz
dec
dec
shlb
and
jbe
ret
push
pop
sub
jmp
cmp
and
mov
lret
aaa
or
sbb
pop
stos
scas
xor
xchg
sbb
mov
pop
lods
add
xchg
fcmovnu
in
int
dec
cs
inc
jae
pushf
roll
imul
inc
gs
xor
cmp
cmpsl
and
into
mov
xor
mov
mov
xor
push
loop
insl
sub
sub
test
push
ja
mov
add
add
push
jl
jle
insb
out
adc
push
test
add
add
sbb
push
xor
or
in
inc
and
daa
mov
into
loope
out
movsl
inc
sbb
push
insb
adc
mov
imul
inc
in
push
scas
adc
dec
push
in
sbb
rclb
movsl
pushf
jno
bound
out
movsl
mov
xor
jl
jmp
pop
push
xor
push
jae
andl
mov
ss
fisubs
sub
or
bnd
lcall
cmc
inc
mov
in
jl
push
ret
sub
shll
aas
inc
inc
jns
mov
loop
lods
fmuls
bswap
nop
jae
sub
pop
cmp
mov
xlat
jns
mov
and
sbb
bound
loopne
ds
std
push
leave
int
mov
js
cld
and
push
loope
lret
or
mov
mov
push
and
pop
aam
xchg
scas
lcall
in
push
mov
mov
adc
in
xor
adc
add
add
add
add
outsb
or
inc
pop
lahf
subb
sub
out
cltd
adc
jae
leave
push
aad
jl
insb
insl
mov
inc
andb
adc
pusha
jnp
and
mov
add
xchg
frstor
xlat
arpl
mov
cwtl
fstps
cmpsl
imul
sub
clc
scas
outsb
sbb
mov
lahf
xor
js
cmp
rclb
js
outsb
cmpsl
imul
fwait
and
fs
or
xor
sbbl
insb
je
andl
or
mov
cwtl
cmp
jne
out
dec
add
add
psubd
pop
adc
pop
add
add
hlt
inc
push
pop
inc
or
in
xorb
inc
add
in
enter
lret
and
push
cmpsb
movsb
xor
int3
cs
push
sbb
sar
mov
aaa
data16
jne
mov
lcall
add
add
add
fiadds
mov
push
std
jae
mov
jg
movsb
push
das
cmp
mov
test
sub
popf
shrb
xor
repz
movsl
int3
loopne
gs
cwtl
out
pop
mov
sbb
cmp
shll
cmp
push
push
call
and
je
sbb
aad
push
leave
imull
push
adc
loop
jns
dec
loop
fwait
xor
lcall
push
jle
adc
loop
add
mov
ret
jmp
xor
sub
pcmpgtd
fisubrs
aas
test
test
aad
call
test
test
inc
scas
flds
mov
mov
aas
lcall
ds
ss
into
and
mov
in
jle
movsb
push
cmpsb
push
sbb
pop
mov
daa
sub
fdivr
pop
inc
and
xor
cli
and
add
jnp
add
jnp
sti
xchg
lahf
mov
inc
orl
add
leave
mov
pop
in
or
cs
ja
mov
ffree
inc
pop
cmp
cmpsl
in
sbb
call
fldt
xor
div
xchg
adc
and
aad
dec
test
lret
jge
xor
push
jp
repz
into
arpl
xor
es
jecxz
mov
mov
leave
xchg
mov
sbb
add
cmpb
fs
sbb
dec
loop
and
and
stos
arpl
mov
xchg
insl
scas
je
outsl
pop
pop
lods
fidivrl
pop
push
call
test
jle
andb
push
inc
mov
sub
fistl
int
sbb
data16
inc
cmp
and
rorl
movsb
inc
push
leave
sbb
jg
incb
cmp
mov
add
mov
scas
arpl
call
mov
push
xchg
push
enter
xchg
push
clc
mov
cld
mov
add
pop
sarl
mov
pop
adc
add
add
add
repnz
filds
mov
mov
std
jle
or
adc
pop
dec
mov
cmp
push
outsb
cmp
lea
pop
sbb
and
inc
scas
lcall
mov
sub
push
xor
push
inc
sbb
mov
and
imul
or
imul
lods
or
mov
adc
imul
push
filds
mov
xor
out
jo
cmc
ss
cmp
xor
cltd
cmp
popa
sub
sbb
xor
ja
aas
xchg
jo
cmp
enter
cmp
adc
mov
dec
inc
or
push
cmovle
into
addb
int
dec
add
push
pop
js
mov
ljmp
rcrl
jo
jge
lret
adc
inc
pusha
sbb
idivb
cmp
dec
clc
mov
push
das
xorb
movsb
xchg
hlt
sub
adc
insl
lock
std
repz
stos
pop
mov
add
add
add
test
shrb
add
jge
gs
or
cmp
mov
out
adc
test
mov
dec
call
mov
fidivrl
dec
rcrb
or
pushf
or
int3
data16
cmpsl
add
mov
jmp
repnz
xchg
jbe
leave
neg
mov
adc
sbb
mov
insb
js
aas
pop
es
test
outsb
xchg
ret
or
clc
mov
cltd
lods
aaa
jg
mov
mov
pop
push
adc
jnp
out
sbb
into
nop
cmp
or
aam
jno
dec
out
sub
popa
ss
push
enter
pop
aas
push
push
cltd
jg
mov
mov
xchg
in
fwait
into
pop
lods
push
add
loope
fiaddl
sahf
rorl
sub
add
dec
fpatan
popf
out
jl
aas
cmc
cmpsl
pop
sbb
mov
in
sub
cmp
arpl
je
xor
sbb
add
add
add
out
lea
xchg
adc
js
cmp
rolb
divb
adc
lret
push
xor
adc
xor
cld
add
jae
insb
dec
xchg
cmc
hlt
push
idivb
std
fwait
imul
icebp
cmp
fidivrs
push
aas
jae
jbe
arpl
or
add
jl
fcmovnu
xorb
nop
push
push
test
sub
mov
mov
data16
stos
int3
cmp
daa
repz
adc
stos
ss
cmpsb
shlb
jge
pop
iret
pop
les
mov
xchg
cltd
cmpsl
xlat
dec
std
xchg
cmp
inc
scas
push
push
movsl
ds
sub
push
sub
mov
add
or
in
in
sbb
lds
fnstcw
xor
pop
sbb
mov
sub
add
pop
stc
insl
lcall
mov
inc
sub
jae
sbb
add
add
mov
push
push
mov
adc
sub
unpcklps
push
out
dec
sub
xor
outsb
popf
push
push
mov
cwtl
mov
pusha
sahf
push
push
adc
cmc
mov
lret
repz
insl
lahf
les
adc
sbb
cmp
mov
jge
ud2
jmp
in
mov
fld
addr16
dec
mov
adc
mov
sub
orl
xor
enter
notl
cmp
fldenv
aad
push
outsb
mov
dec
or
lahf
shl
sub
inc
ficomps
fdivl
mov
clc
push
push
xchg
outsl
cmp
sub
push
add
call
xchg
leave
cs
jecxz
in
jmp
mov
push
and
mov
daa
loop
add
ret
addl
add
stos
jge
add
xchg
dec
mov
add
xchg
in
mov
incl
roll
or
add
add
frstor
aaa
adcb
pop
mov
or
dec
xor
imul
shlb
mov
mov
xor
icebp
arpl
jb
cld
mov
hlt
lock
add
add
xor
ljmp
mov
push
lret
fldcw
push
outsl
ret
fsubp
jne
xchg
cmp
imul
enter
cmp
inc
xchg
test
mov
aad
push
inc
mov
mov
and
inc
mov
pop
sarb
dec
jno
lods
or
movsb
pop
leave
xlat
fistps
push
nop
push
and
fmull
loopne
add
sub
aam
imul
mov
pop
mull
test
sub
push
xchg
addl
gs
jbe
pop
stc
mov
ja
loop
xor
mov
int
daa
jbe
inc
mov
in
negl
sub
movsb
adc
fsubs
add
add
add
inc
jl
fucom
xchg
mov
rorl
mov
jb
in
repnz
pop
sbb
sbb
xchg
sub
addr16
xor
xor
jae
mov
mov
aam
int
jmp
dec
jno
loop
inc
aas
xchg
pop
lds
sti
inc
inc
leave
jge
xchg
jnp
imulb
scas
lret
ljmp
in
mov
xchg
dec
je
bound
fucomip
js
out
mull
sbb
pop
push
in
xchg
orb
sahf
mov
mov
pop
repnz
xor
loop,pt
insl
decb
adc
repnz
mov
movzwl
aam
dec
int3
push
iret
cmp
or
loopne
jp
cmp
sub
xchg
addr16
movsb
cmpl
sub
adc
ja
ja
pop
int
test
sbb
cltd
xorl
add
add
mov
stc
dec
push
or
sub
add
add
add
enter
aaa
lods
pop
loop
or
push
ja
sub
dec
hlt
mov
cmp
push
sahf
push
cmp
fs
cmp
xchg
pushf
sub
fstps
or
nop
divb
js
dec
pushf
cwtl
aad
out
jl
popa
out
and
lcall
jno
aad
or
cmp
ud1
dec
insb
popa
test
ja
in
lods
jns
hlt
jae
adc
xchg
inc
push
mov
or
cmp
out
mov
cs
jl
adc
les
jo
lret
das
jo
test
repz
cmc
filds
mov
mov
data16
cmp
movsb
pop
xchg
mov
jo
xchg
xor
in
cmpl
xchg
and
sbb
stos
jp
inc
inc
fsub
mov
movsb
pop
hlt
or
lods
fwait
aas
inc
aas
jns
cld
iret
inc
cmpsb
adc
ds
mov
mov
psrad
pop
cmp
ja
dec
ja
inc
incb
add
add
adc
push
push
push
mov
icebp
sub
add
add
add
xchg
and
mov
xchg
sbb
fnsave
imul
enter
imul
movsb
hlt
hlt
or
popf
inc
call
mov
test
sub
fimuls
xorl
jne
mov
pop
idivb
xor
scas
test
out
push
stos
subl
sub
test
shrb
dec
push
jecxz
leave
femms
insb
cwtl
mov
xor
out
push
push
pop
jg
test
ficoms
mov
pusha
mov
cwtl
cli
call
fwait
fs
adc
pop
dec
int3
xchg
jo
mov
inc
ret
and
sbb
pushf
push
mov
dec
or
sub
negl
add
aam
mov
addr16
stos
xlat
lret
cmc
jns
pop
sbb
cmpl
jle
push
xor
sbb
push
stos
out
repnz
add
pop
lcall
les
shlb
xor
add
add
add
dec
repnz
and
push
aaa
bound
and
inc
test
add
loop
sbb
fdivrl
rcrl
sbb
into
add
ds
fstpt
scas
mov
pusha
and
xchg
mov
fbld
inc
std
mov
inc
in
gs
xlat
cwtl
leave
cwtl
iret
insb
lds
dec
sub
and
push
jo
lods
mulb
pop
call
jo
out
dec
sbb
cmp
sub
mov
jne
jo
or
adc
insl
adc
es
popf
lds
cmp
and
mov
imul
mov
mov
add
sbb
push
push
adc
pop
out
je
arpl
cli
ffreep
sar
jge
pusha
leave
pop
imul
in
inc
lea
inc
cmpsl
enter
test
gs
shlb
inc
mov
mov
xchg
in
mov
add
add
mov
push
decl
sbb
inc
xor
add
add
add
orl
xchg
mov
or
jge
ss
ret
iret
mov
cltd
mov
or
add
push
aas
mov
push
fs
loop
pop
ljmp
sti
sbb
inc
mov
pushl
add
dec
lock
xor
into
push
sub
jle
xchg
adc
or
xchg
mov
in
adc
mov
fdivl
inc
aam
inc
popa
lahf
iret
jne
sub
fldcw
mov
mov
push
xchg
movl
cwtl
movsl
ffreep
aam
cltd
cmp
imul
sbb
out
adc
pusha
sub
xor
push
aaa
sahf
outsl
sub
dec
cmpl
addr16
lret
stos
jne
jno
mov
ficoms
sbb
int
and
jnp
pop
rolb
in
jne
push
repnz
popa
aad
add
add
jmp
in
push
sub
ret
add
add
add
push
mov
fwait
ret
and
lods
adc
adc
xor
mov
xorb
scas
outsb
sub
and
sub
out
mov
add
je
adc
push
jp
loopne
or
xor
xor
sub
test
and
test
rcrl
or
sbb
loop
jle
gs
shlb
out
stos
lcall
gs
mov
jecxz
loop
std
fucomi
mov
add
les
cmpb
xchg
add
mov
sub
jg
lea
cmp
pop
mov
and
jnp
sub
test
push
mov
sti
mov
fcmovbe
dec
cltd
xchg
fbld
jns
push
mov
sub
xor
pop
js
xor
dec
pop
ss
xchg
sbb
pop
pop
mov
or
sub
and
and
mov
lcall
ljmp
insb
test
cmp
mov
inc
xchg
xor
push
and
lahf
es
xchg
in
outsb
les
insb
push
sbb
aas
or
inc
adcl
pop
in
pop
mov
rorl
xor
jl
cmp
test
leave
aad
movsbl
loope
pop
in
inc
mov
stos
inc
xchg
sahf
data16
jge
xchg
or
icebp
cmpsl
jae
and
shll
and
sbb
inc
inc
inc
mov
movsl
sub
mov
clc
outsl
xchg
adc
mov
mov
cmc
sbb
popf
cli
mov
jg
test
fildl
jmp
mov
push
stc
and
and
idivl
sub
leave
pop
jge,pt
les
test
nop
into
dec
sahf
popa
cld
cmp
outsl
js
add
mov
sar
aaa
pop
xchg
aas
movsb
popa
sub
jo
mov
add
sbb
pop
cmpsb
loope
repz
ror
lock
jnp
xor
xchg
push
xchg
adc
add
add
add
data16
adc
mov
mov
sahf
enter
fadds
mov
sti
cmp
jo
add
xchg
jmp
js
jae
sahf
xchg
jb
adc
scas
shll
mov
test
sbbb
shrl
mov
xchg
out
lods
cli
in
sbb
inc
mov
pop
mov
sub
and
mull
mov
ja
bound
jle
stos
shrl
repz
push
adc
loope
addb
xor
jmp
dec
aam
mov
nop
and
aas
sti
insl
shl
pop
mov
fistpll
push
fucomip
jno
fwait
int
push
jne
xor
pop
mov
sbb
jbe
jae
test
mov
inc
push
sub
xrelease
jg
mov
shlb
dec
mov
dec
out
dec
inc
mov
add
testb
add
and
repz
fisubs
sbb
add
add
and
cwtl
outsl
rolb
popf
adc
push
cli
and
test
inc
addr16
imul
scas
sbb
cmpsb
flds
jl
cwtl
mov
and
test
rorb
jp
mov
pop
lods
jmp
rcll
xchg
push
mov
outsb
std
xchg
mov
pop
xchg
mov
sbb
adc
push
fidivrs
pop
jne
rorl
pop
lret
inc
ja
out
hlt
and
pop
and
jnp
sti
xchg
fdivp
out
ja
cmp
in
stos
lret
je
mov
adcb
mov
shl
cmovo
cwtl
jle
aam
lock
fisttps
test
lods
adc
add
push
jmp
paddsb
nop
shlb
xor
scas
jno
stos
xorb
pushf
jne
in
outsb
out
cli
jns
test
mov
lret
pop
cli
shlb
add
ss
repnz
out
sbb
popf
mov
loopne
in
add
add
add
cmp
icebp
pop
sbb
mov
stos
jl
pop
stc
into
nop
sbb
dec
or
or
pusha
fistpl
cmpl
sahf
movsl
stos
sub
push
sbb
lret
add
pusha
fwait
dec
cld
pop
push
stos
lahf
xchg
jge
inc
js
sub
xchg
pop
push
cld
adc
cli
pushf
ds
fs
test
movsl
popa
stos
adc
sub
jb
aaa
mov
xor
fisttpll
dec
xchg
ss
sbb
inc
daa
add
jp
xlat
test
xor
jnp
jne
mov
jle
test
dec
xor
outsb
sub
in
push
iret
scas
add
std
sub
and
or
pop
orl
or
jne
or
sbb
fidivl
lds
scas
out
imul
gs
icebp
push
call
pop
add
dec
cmpsb
scas
lahf
add
movsb
arpl
add
add
scas
push
repz
cmc
scas
sub
mov
dec
out
add
add
add
add
sarb
dec
lods
xchg
mov
cmp
jle
adc
xor
push
mov
insl
arpl
icebp
add
add
frstor
js
inc
pop
int3
in
ja
xor
xor
mov
jne
jp
leave
mov
inc
repnz
test
ss
insb
xchg
or
sub
aas
and
pop
sti
push
mov
mov
test
xor
add
xor
inc
test
jge
ficompl
cli
inc
ds
fwait
and
sti
insb
sti
mov
scas
push
mov
out
call
cmpsb
in
bnd
aam
iret
lcall
pop
popl
clc
jae
push
lods
push
int3
mov
dec
push
inc
ret
lcall
inc
sahf
xchg
dec
push
stos
fistl
js
ret
and
ret
ret
js
cli
ss
imul
daa
movsl
outsb
push
sbb
sarb
outsl
push
xchg
stos
push
jne
add
add
pusha
rorb
cmpsb
mov
clc
ficoml
add
add
add
movsb
cmpsb
dec
leave
mov
dec
sahf
ds
cld
jmp
int3
mov
mov
push
pushf
outsl
loopne
shlb
cmp
fcom
cld
dec
xchg
ljmp
xchg
scas
ret
jnp
sub
fwait
into
mov
push
daa
fcom
stos
call
test
dec
cwtl
aaa
das
push
scas
scas
pusha
mov
xchg
cmc
pop
decl
mov
adc
mov
scas
fsubl
xchg
push
pop
pop
movsl
aas
xchg
cmp
mov
mov
pop
xor
push
movsl
test
add
idivl
and
push
add
dec
xor
outsl
jo
mov
jns
cwtl
lock
fildl
lock
aaa
repz
cmp
mov
lcall
sbb
int3
cmp
xchg
sbb
out
je
lods
insl
dec
in
xchg
sbb
jl
aas
adc
push
scas
add
popf
repnz
add
jecxz
push
testl
sub
add
add
add
xor
push
adc
and
push
push
sbb
mov
jbe
push
mov
jmp
aad
adc
bound
fstps
aad
mov
fs
add
mov
sahf
out
idivb
and
sbb
or
into
repz
jo
sbb
in
imul
dec
sbb
iret
or
cmp
jno
inc
xor
push
scas
rolb
scas
ret
jecxz
and
or
sub
sti
sub
adc
cmpsb
aas
lret
scas
pop
clc
in
jmp
in
mov
pop
pop
out
pop
cltd
mov
bound
and
sti
adc
add
inc
subl
mov
mov
clc
xchg
shrb
stc
pop
or
sti
out
cwtl
test
outsl
cs
jle
cmp
inc
add
dec
sub
mov
enter
aaa
fistl
mov
pop
mov
jl
shr
dec
setge
push
incb
add
add
xchg
mov
mov
pop
das
shl
fisttpl
add
add
push
imul
std
jne
nop
movsb
dec
sbbb
clts
fadd
mov
xchg
mov
cwtl
sbb
popa
fsubrs
add
lds
lret
filds
into
pop
adc
or
add
inc
in
scas
aam
push
es
push
dec
or
sbb
dec
sub
dec
dec
test
pushf
add
std
jbe
pop
dec
mov
pop
push
pop
cmp
cmp
rorb
mov
pop
roll
ds
pop
jge
mov
repnz
xchg
inc
pop
mov
cld
out
mov
jns
movsl
mov
movsb
xor
faddl
xlat
or
sarb
repnz
pop
jp
stos
add
je
push
and
xor
xor
cmpsb
es
into
mov
das
insb
inc
idivb
jae
lock
mov
jp
mov
and
add
add
fucomi
xor
jbe
pop
repnz
add
add
or
fisttps
out
negl
lods
push
push
pop
push
jl
mov
cwtl
push
fcmovne
dec
inc
dec
dec
fmull
xchg
push
lea
into
fsubs
mov
and
jmp
jb
imul
sub
scas
loop
mov
int
data16
cmp
cmpsb
push
xchg
xor
xchg
push
in
scas
add
shr
aaa
stos
mov
out
rcrb
mov
lods
sahf
add
xchg
jo
and
cmp
cltd
aaa
bnd
test
mov
ds
push
add
jl
stos
adc
sub
rclb
test
add
fs
mov
push
pop
ret
mov
adc
in
mov
inc
or
test
lock
sub
dec
mov
or
sbb
xchg
inc
jle
inc
clc
push
stos
hlt
enter
add
jmp
jle
das
sub
lods
loope
push
jmp
add
add
push
inc
pop
jns
aas
loopne
sub
repz
add
add
jg
insl
pop
jno
push
push
inc
aad
cmp
dec
lock
rcll
add
jbe
lea
jl
xor
lods
adc
xlat
aam
orb
nop
mov
pop
pop
jae
cmp
clc
adc
cmpsl
shrb
in
pusha
push
lret
call
fsubrs
lods
hlt
cwtl
inc
jno
lds
adc
mov
sbb
or
lods
cmp
out
dec
ja
inc
sub
xchg
jb
call
jb
mov
adc
out
xchg
inc
jl
jbe
sahf
mov
inc
lds
add
pop
les
lret
lods
xor
loope
loope
xchg
lcall
mov
inc
jp
dec
sbb
mov
in
insb
sbb
mov
test
push
lret
call
shr
dec
inc
mov
cwtl
int
cmp
and
push
xchg
and
xor
jo
inc
negb
dec
sti
es
mov
pop
cmpsb
sbb
jnp
mov
push
add
add
add
add
push
imul
inc
xor
mov
jg
push
adc
push
stc
cld
aam
push
cmpsl
add
inc
fildll
movsb
adcl
scas
sbb
push
dec
loope
xchg
loopne
out
push
mov
mov
dec
xor
cs
mov
xor
jbe
cs
dec
aad
jo
adc
mov
inc
push
inc
mov
test
int3
jne
insl
pop
mov
xor
rcrl
jbe,pt
outsb
shll
pop
rcl
inc
sbb
movsl
mul
mov
push
nop
sbbb
mov
enter
sarb
test
in
into
xchg
out
push
push
addl
mov
add
xor
push
dec
pop
ss
mov
mov
pop
cmp
add
mov
adc
sub
hlt
ds
adc
mov
lcall
push
cmc
sahf
pop
cmpsb
sub
mov
jp
imul
subb
add
add
addb
scas
cltd
insb
push
jo
hlt
add
repnz
mov
popf
sbbb
push
pop
lret
ret
pop
gs
mov
mov
sbb
push
std
push
lods
add
mov
scas
in
test
jbe
mov
jb
jns
sub
mov
mov
jo
mov
loopne
mov
add
mov
xor
and
pushf
mov
fs
jnp
push
push
mov
jp
or
jae
add
xchg
mov
cmpsl
imul
jecxz
lods
movsb
daa
xor
or
das
mov
push
mov
mov
jnp
xchg
mov
insl
xor
push
mov
jmp
push
xor
xchg
arpl
xor
push
adc
sub
dec
dec
xchg
outsl
xchg
cmp
fcoml
test
mov
shll
mov
ja
pop
mov
and
inc
ljmp
add
xchg
mov
idivl
testb
testb
add
add
xchg
add
adc
fmull
or
inc
or
in
arpl
iret
in
sti
inc
sarb
jecxz
idiv
inc
pop
adc
ja
fwait
inc
mov
push
add
push
les
arpl
jmp
mov
or
mov
cmp
mov
insl
fnstsw
insb
mov
pop
mov
pop
mov
lret
adc
and
aaa
movsl
stc
fcmovbe
sub
sub
adc
out
cltd
pop
in
mov
dec
push
dec
mov
pop
call
mov
push
xor
xchg
das
add
rcrb
jnp
les
addr16
lds
cmp
std
mov
scas
enter
dec
mull
subl
pop
outsb
dec
mov
jns
rcll
xchg
xlat
bnd
sub
mov
mov
mov
pop
cli
test
mov
test
pop
jo
add
add
add
notl
cmpsl
jecxz
shl
rorb
mov
ljmp
fcomi
into
adc
ret
cld
mov
xchg
lea
push
xchg
sbb
inc
fcomps
mov
xchg
fcomps
icebp
mov
push
push
sti
push
fsub
mov
mov
xor
sbb
and
dec
sub
add
and
insb
mov
js
dec
in
push
mov
shlb
dec
jle
into
ja
dec
pop
adc
ja
cmc
sub
xor
and
sbb
jo
pop
test
inc
cmpsb
push
int
fisubrs
xor
int3
gs
adc
rclb
data16
and
stos
in
inc
or
pop
lock
iret
mov
sub
cmp
jnp
lods
dec
fidivl
js
cmp
pop
dec
or
inc
mov
mov
sahf
out
lods
add
cmpsb
cmp
add
jmp
imul
lahf
repnz
jb
cmp
je
add
add
add
add
and
mov
rcll
mov
mov
sbb
insl
cwtl
adc
loopne
shlb
push
stos
lret
cmc
jae
rolb
dec
fbstp
push
fwait
test
xchg
cs
mov
roll
jg
push
nop
adc
mov
mov
adc
mov
addr16
data16
iret
push
dec
sub
xchg
fstpt
cmpsb
xorl
adc
xchg
xchg
loop
ss
jmp
adc
out
scas
in
popa
popf
xchg
enter
sub
outsb
and
mov
xor
lds
imul
cmp
je
sub
mov
cmpsb
xorl
imul
push
testl
jno
mov
mov
enter
mov
cmp
jg
in
popf
sbbl
addb
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
outsb
mov
sub
add
add
add
testl
dec
out
jmp
mov
jbe
ret
xor
mov
mov
inc
dec
rcll
lret
daa
adcl
pop
push
and
fnstenv
sbb
cmp
fnstenv
loop
sbb
xchg
repz
push
movsb
mov
mov
adc
sahf
pop
pusha
ds
clc
scas
xchg
les
arpl
add
xor
mov
jecxz
jno
mov
pop
mov
in
xor
jmpw
mov
push
insb
shrl
and
ud0
fwait
rorb
in
mov
ja
xchg
in
xlat
add
push
inc
sbb
pop
pop
xchg
mov
cmp
fidivl
inc
nop
inc
jns
xchg
inc
sub
sub
bound
outsl
mov
sbbb
sbb
shrb
push
dec
jo
into
mov
fmuls
orl
cli
pop
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
pushf
inc
sub
aam
and
repnz
stos
fists
inc
daa
jbe
scas
mov
in
mov
aaa
sahf
jmp
daa
int3
ffree
hlt
xlat
sahf
xor
mov
bound
pop
cld
xchg
sub
push
push
xor
inc
je
pop
jno
pop
js
and
xor
les
adc
int
jecxz
or
cmp
mov
mov
call
ret
mov
mov
mov
in
add
pusha
push
cwtl
and
inc
idiv
cmp
jo
lock
pop
fnstsw
cmp
and
insl
mov
aam
sti
jnp
sbb
pop
or
outsb
jae
dec
cwtl
pop
cmp
push
xchg
add
ret
cmp
shll
stc
cmp
test
insb
jns
jl
in
dec
push
subl
call
call
adc
jb
test
xchg
lahf
mov
in
repz
add
mov
nop
test
aam
int
aaa
das
aam
inc
mov
add
add
mov
pop
inc
mov
sbb
xor
xchg
test
cltd
and
subl
pop
cmp
es
mov
or
arpl
into
pusha
xchg
jp
mov
aas
mov
addr16
sbb
add
dec
jmp
cwtl
jbe
sbb
xchg
ret
xchg
lret
adc
adc
sbb
shr
loope
mov
sbb
test
mov
lea
cmp
cmpsb
push
inc
pop
add
dec
inc
std
push
ret
fcoms
mov
xlat
ret
imull
and
lds
ds
pop
jle
sub
sbb
mov
add
push
push
sbb
or
mov
inc
dec
xchg
jecxz
inc
arpl
xchg
inc
test
adc
cltd
fildll
inc
enter
push
test
lret
int
or
leave
fbstp
xor
fs
pushf
sbb
shlb
pop
arpl
addr16
sub
adc
cld
add
add
add
dec
aam
mov
data16
push
rorl
inc
adc
movsb
stc
addr16
sbb
add
divl
fnstsw
out
push
mov
stc
mov
sub
sub
dec
out
lds
and
mov
repz
in
mov
push
scas
leave
pushf
dec
sbb
and
in
popf
mov
aam
dec
ret
add
xchg
xchg
dec
mov
sbb
icebp
mov
fadd
mov
iret
add
lret
inc
hlt
sub
jbe
outsl
xor
lods
inc
ljmp
outsl
mov
leave
mov
outsb
stc
loope
les
cmpsb
jb
sbb
call
lahf
test
xchg
loope
ret
lock
lret
sub
cwtl
cltd
aad
jnp
stos
cmpsl
lret
lock
or
inc
flds
mov
filds
jne
fadd
addr16
and
xor
dec
push
iret
ret
jle
hlt
mov
out
cmp
cmp
pushl
xchg
xor
push
in
sbb
std
add
add
add
dec
jl
fwait
mov
mov
aad
push
cmp
std
sbb
out
adc
mov
jae
into
cmp
sub
arpl
lods
jb
negb
sub
xchg
stc
ds
xor
gs
movaps
sbb
nop
and
or
jmp
lcall
adc
insb
inc
dec
fadds
mov
mov
xchg
pop
mov
je
aam
inc
add
xchg
pop
or
cltd
addb
lds
je
mov
iret
adc
stos
test
mov
adc
xchg
imul
sarl
xchg
in
lret
outsb
rorl
push
pop
and
aas
bound
jmp
popf
stc
scas
fs
lods
push
loope
stos
jne
mov
adc
sbb
mov
and
inc
or
cli
push
data16
jb
and
add
xor
mov
or
test
dec
or
add
add
push
scas
mov
pushw
incb
add
add
lea
loop
loopne
xchg
fisttps
lds
inc
sub
push
roll
mov
mov
sub
sarl
cmp
fmuls
xchg
dec
xor
loope
aad
out
mov
and
les
cmpsl
ret
int
pop
mov
lock
inc
stos
dec
pop
in
popa
outsl
out
insb
lods
and
into
ret
cmp
inc
jno
mov
shl
xchg
das
jbe
das
fwait
ds
psrlw
xor
notb
push
mov
jmp
jae
dec
and
and
push
clc
js
in
xchg
fdivrl
sarb
push
add
jo
adc
cmp
jbe
cmp
dec
das
push
lahf
push
cmp
push
shrl
cltd
jne
loope
pop
cli
cmc
out
lahf
in
pop
data16
push
hlt
and
fisubl
adc
sbb
and
and
pushf
lods
pop
jnp
add
and
dec
imulb
or
or
or
add
add
xchg
and
movsl
mov
mov
mov
jns
nop
incl
add
add
test
push
mov
enter
jmp
fiaddl
mov
xchg
fsubr
fcomps
outsb
in
sbb
add
daa
sub
sbb
cmp
add
cmovno
ret
or
pop
adc
imul
cmp
ficomps
dec
repz
bound
enter
rorl
test
stc
roll
xlat
mov
mov
test
mov
mov
mov
out
and
cmp
push
mov
out
jecxz
mov
jo
inc
cmpsb
lods
xchg
std
dec
pop
xor
out
icebp
push
stos
jb
in
leave
xchg
pusha
and
mov
sar
push
insb
pop
dec
dec
xchg
and
out
outsb
push
pop
les
fnstcw
ret
push
daa
push
ficoml
sub
adc
stos
notl
and
js
jle
lret
lock
add
fdivl
mov
jbe
ds
add
add
add
rcll
out
daa
or
out
lock
push
xor
jl
jp
or
fwait
out
dec
or
sub
test
fsubrs
lea
pop
fwait
lock
push
adc
ret
jg
cmp
out
sub
pop
jae
cmp
lcall
push
cmp
push
jns
icebp
jae
mov
das
inc
orl
and
pop
hlt
push
mov
shrl
int
mov
pop
ja
mov
lcall
lods
jb
inc
mov
ret
es
aam
xlat
lds
add
jo
js
stc
lcall
mov
scas
dec
sti
sub
mov
roll
push
iret
pop
fnstcw
cltd
mov
mov
les
jecxz
pop
push
add
jg
xor
cwtl
push
in
pusha
ret
xchg
js
lret
mov
mov
je
pop
rcrb
jge
dec
cmpl
add
mov
mov
lods
imul
cld
aad
stos
cwtl
add
add
add
sbb
shll
push
dec
in
xchg
js
inc
call
mov
dec
xor
scas
jle
orl
mov
fcoms
das
cs
inc
lcall
jle
xorps
or
loope
movsb
and
movsl
addr16
xchg
testl
es
push
sahf
in
lods
sbb
cli
addb
loopne
mov
xchg
sbb
sbb
jecxz
jmp
gs
jo
dec
into
fisubl
sub
test
mov
test
mov
inc
lods
and
imul
push
clc
inc
aas
insl
dec
sub
les
and
leave
bound
push
xchg
xchg
int
fcmovb
out
inc
cli
inc
push
pop
push
push
pop
nop
fwait
cmp
pop
cwtl
in
daa
jbe
fs
sub
ljmp
stos
cwtl
imul
pop
loope
mov
sbb
mov
and
mov
cwtl
dec
dec
pop
xchg
sub
scas
or
cmp
test
add
add
add
lahf
lea
inc
arpl
ret
gs
xor
test
fsubrl
lret
push
mov
jnp
shrb
cltd
dec
imul
dec
add
fcomi
cwtl
bound
jmp
clc
xor
jmp
adcb
mov
inc
push
lock
call
outsb
cli
xor
lret
js
jo
or
pop
push
cmp
or
cmc
fisubrl
xchg
pop
mov
inc
testl
popf
notl
inc
imul
lahf
inc
sbb
es
fcom
pop
mov
push
mov
cmp
and
mov
pop
in
cld
add
add
jmp
adc
and
push
cwtl
mov
imul
ja
lds
mov
cmp
mov
out
or
mov
cltd
clc
jnp
fs
cltd
sti
insl
add
adc
sub
xchg
enter
push
fbld
enter
add
add
add
test
in
or
pop
mov
jl
jns
popf
es
cmp
jg
rorl
cwtl
or
cmp
inc
cmc
movsl
outsl
pop
xchg
sarb
out
nop
decw
ficomps
in
sbb
dec
jl
out
cltd
lret
sbb
jge
dec
and
dec
xchg
and
adc
jge
fcoml
pop
and
mov
and
and
push
call
pushf
lods
mov
pop
dec
ret
add
push
fwait
popa
xchg
sti
les
data16
jle
mov
xchg
sub
test
test
push
popa
mov
sbb
add
lret
testl
shlb
call
iret
ds
jne
mov
push
jb
cmp
jle
add
jns
add
adc
mov
mov
aad
loope
sbb
mov
into
fwait
add
mov
call
add
add
jbe
mov
push
scas
jge
stos
lods
pop
dec
rcll
fnstsw
sub
int
ss
scas
gs
mov
ljmp
push
pop
xor
pop
rclb
sarl
loopne
lods
mov
stos
sub
cwtl
mov
xor
out
data16
adc
mov
xchg
jb
push
test
sub
in
popl
jnp
stos
jo
jnp
pop
cli
fwait
cmp
adc
insb
lea
jg
push
enter
push
test
not
mov
xor
mov
lods
pop
clc
cmp
dec
add
in
adc
jbe
test
daa
les
cmp
bound
xor
sbb
or
scas
movsl
test
rcrb
mov
out
mov
sub
ret
push
rolb
pop
adc
test
jge
jl
test
out
mov
pop
sarb
in
pop
sbb
add
add
jp
mov
sbb
out
mov
fs
ds
pop
aas
mov
dec
jl
sbb
pop
and
jl
in
push
jmp
sub
js
ja,pt
xor
dec
scas
sbb
xorl
fdivrl
in
aas
or
pop
pop
mov
in
xor
or
fiadds
aaa
lahf
push
push
jae
add
into
and
adc
jns
scas
mov
mov
mov
pop
cmp
es
pop
ret
shrl
sub
andb
subb
bound
hlt
ss
stos
or
stos
or
cmc
lea
test
jo
flds
xor
out
mov
mov
jge
or
dec
mov
cmp
sbb
stos
roll
add
sti
inc
out
aas
mov
rorb
fldl
inc
lods
push
add
add
add
mov
stos
ficomps
aam
adc
sar
fcoml
jecxz
dec
scas
push
jbe
inc
mov
loopne
and
pop
dec
pop
push
cmp
scas
push
scas
xor
dec
mov
rcl
int3
cmc
xchg
fmull
push
fstps
cmp
stc
repnz
xor
pop
dec
add
or
and
out
pop
leave
mov
test
sarb
mov
cmp
pop
nop
push
rclb
inc
lds
sub
fbstp
jo
ret
sbbb
push
dec
movsb
mov
inc
and
ja
aam
clc
and
std
jno
test
in
test
push
push
movsb
inc
outsl
cli
call
mov
dec
push
mov
pusha
jnp
xchg
push
pop
push
adc
scas
push
movsl
mov
adc
dec
jbe
inc
rorb
pop
rorb
inc
sub
and
iret
ljmp
adc
fistl
fsubrl
push
bnd
dec
leave
and
stos
push
insb
mov
add
add
add
scas
sub
loop
loop
mov
push
rcrb
push
xchg
mov
roll
pop
xchg
aas
repnz
roll
dec
xor
bswap
js
mov
and
cmpsl
pusha
sahf
pop
movq
dec
xchg
adc
xchg
in
and
jge
cmp
sub
dec
mov
push
rcll
sti
dec
stos
cmp
xchg
hlt
xor
xor
divl
or
rcrl
mov
loop
push
ds
adc
push
jns
rcrl
jne
xor
push
popf
xor
mov
fs
mov
out
or
xchg
and
outsb
push
in
push
and
repnz
pop
vmread
xor
pop
sbb
push
pop
repnz
aad
cmp
jno
sub
loopne
out
mov
icebp
cmp
imul
sub
lret
mov
xor
xchg
inc
add
imul
stos
jbe
mov
sbb
in
out
ja
filds
cs
add
add
lock
mov
sub
in
add
pop
ss
or
mov
mov
push
bound
frstor
cwtl
cltd
mov
jns
popf
nop
out
push
push
add
ljmp
shl
xor
dec
aas
lea
sub
aam
push
dec
push
add
mov
add
pop
cltd
cmp
xor
repnz
pop
mov
lods
lret
int
call
push
mov
jae
or
pop
inc
or
addr16
cltd
lret
or
push
movsb
aaa
ja
ds
outsl
movsl
faddl
insb
int
jno
test
dec
int3
pop
scas
mov
sbb
sbb
sub
mov
das
sysexit
pushf
sahf
and
xor
mov
xchg
mov
outsb
jge
pop
ror
sahf
xor
mov
ljmp
insb
lods
adc
pushl
pop
pop
hlt
out
dec
repnz
in
scas
test
in
inc
push
or
out
shll
or
add
add
test
add
and
mov
lds
xchg
dec
push
add
push
data16
add
add
loope
xor
mov
push
loope
push
jp
mov
shrb
repnz
repz
jo
iret
pop
xor
mov
or
mov
sbb
mov
mov
and
dec
mov
and
shrl
sbb
sub
pop
fistps
jns
sub
scas
add
push
out
pop
je
icebp
jne
and
sbb
and
inc
sub
push
arpl
lock
rolb
cmc
call
arpl
dec
or
imul
xchg
pop
ss
mov
in
push
jb
xor
xor
shl
xchg
sub
popa
pusha
sub
mov
ljmp
pusha
dec
fcomps
lcall
add
jg
neg
pop
daa
inc
jge
mov
mov
add
add
shrl
sub
lcall
jno
xor
dec
pop
call
push
adc
dec
cli
and
pop
enter
cli
push
sbb
call
mov
or
xchg
jl
test
adc
iret
pop
test
pusha
sahf
loop
sub
popa
aaa
mov
push
cmp
xorb
xlat
mov
cmp
cs
or
sub
xchg
mov
pusha
data16
out
add
sub
loope
andb
fimuls
lea
push
fbstp
sbb
mov
jg
jle
scas
not
in
orb
push
in
stc
loop
sub
cli
movsb
mov
or
stc
movsb
inc
ret
jno
popf
xor
loope
jnp
inc
roll
stc
or
push
inc
out
aas
lock
push
mulb
cmpsl
or
inc
movl
jl
mov
push
pop
jecxz
push
inc
push
out
scas
mov
ficoml
add
add
sti
jg
cmp
je
mov
or
add
add
sti
stos
lods
jnp
and
divb
rorl
aaa
int3
aam
ja
pop
aam
cmp
mov
test
lods
inc
add
adc
sub
xor
cwtl
enter
or
or
and
mov
jo
push
call
outsb
jb
push
jbe
mov
nop
stos
mov
cmc
subb
inc
pop
lahf
dec
pop
lahf
pushl
gs
les
outsb
test
pushf
cmpsl
nop
xchg
mov
andb
test
jbe
sbb
xor
push
outsl
add
add
lret
pop
or
arpl
cmp
arpl
xchg
mov
cmp
popf
jecxz,pt
sarl
mov
mov
pop
and
xor
adc
mov
pop
cmp
fwait
dec
and
loope
lds
ds
je
jge
scas
aam
jnp
fstp
fcompl
fimull
scas
lret
add
add
add
lret
inc
call
inc
mov
mov
dec
add
icebp
outsl
push
dec
jl
sub
or
ret
dec
pusha
jl
jnp
xor
pop
sbb
mov
add
out
in
cltd
lock
lock
fldl
test
cmpsb
outsl
call
dec
js
cli
in
movsl
pop
inc
in
push
push
xor
adc
pop
loop
xchg
popf
lcall
push
xor
cmp
sub
jb
and
clc
and
ja
ss
out
or
orl
mov
mov
out
xor
inc
test
jp
jmp
dec
jb
pop
addl
push
pop
and
lock
sub
and
mov
loope
stos
popf
sbb
les
mov
mov
mov
stc
push
add
cmp
add
test
dec
outsl
fidivl
pop
mov
gs
mov
jno
std
outsl
mov
add
mov
add
add
add
mov
mov
cli
xchg
cld
mov
lea
sbb
xor
mov
sbb
inc
or
mov
scas
jo
mov
lret
xchg
mov
mov
bound
ret
insb
push
test
cmp
add
dec
rcl
or
cwtl
or
adc
xchg
ss
and
pop
mov
faddl
inc
push
push
scas
lock
mov
stos
in
insb
xor
push
sbbb
cwtl
out
gs
ja
jecxz
mov
daa
cmp
mov
cld
push
adc
inc
sbbb
hlt
bound
ja
sub
mov
filds
fucomp
scas
call
sub
int
jb
mov
push
dec
pop
stc
scas
lods
or
sub
mov
call
xchg
inc
lret
loopne
rcll
xchg
inc
mov
add
add
jmp
fstpl
push
add
add
add
adc
sub
arpl
stos
fistps
mov
adc
dec
cmpsl
mov
cwtl
push
jg
xchg
sub
test
stos
pop
lret
xor
xchg
xchg
rolb
cmp
out
and
sbb
cld
arpl
shll
xchg
aaa
leave
sub
push
mov
jns
sub
xchg
mov
push
mov
movsl
arpl
pop
bound
in
daa
lods
dec
out
mov
push
adc
push
cmp
push
jmp
stos
xchg
movd
mov
movsb
dec
add
addb
xor
shrb
test
xor
test
clc
in
sub
fld
and
mov
sbbb
add
outsl
mov
add
cmp
push
jbe
mov
nop
test
cli
int3
leave
repnz
pop
js
mov
inc
xchg
or
add
add
xor
test
pop
jl
rorb
add
add
add
sub
or
sub
lahf
dec
mov
add
inc
or
add
mov
arpl
stos
pop
inc
incl
call
fidivrl
push
das
lods
jp
jne
rcl
testl
bound
repz
push
insl
xchg
mov
fsubrs
repnz
xlat
xor
aad
xchg
cltd
icebp
je
pop
xorl
rclb
js
dec
pop
cmp
fists
dec
sahf
mov
dec
rcrb
lcall
adc
out
jmp
sub
repnz
mov
mov
setnp
rcl
enter
clc
xchg
mov
xchg
lock
push
cli
arpl
dec
idivl
aas
and
in
repz
fs
push
lea
dec
lock
mov
mov
loopne
inc
add
test
lods
sub
push
and
push
fcoms
sub
xor
std
out
rol
imul
add
cli
inc
jg
int
xchg
lods
or
incl
aam
add
add
add
out
and
rcrb
gs
jae
sbb
dec
stos
xchg
test
addb
movsb
in
into
pop
fmul
sbb
scas
xchg
scas
pop
xchg
jo
sahf
scas
stos
dec
jp
mov
popa
and
jno
push
stc
pop
xor
sbb
jns
inc
andb
jbe
sti
into
ss
jge
popa
insb
mov
lcall
inc
test
adc
cmpsl
push
push
jns
into
pop
mov
add
into
int
xor
pop
inc
sub
std
incb
popa
daa
popf
fs
mov
xchg
dec
das
pop
pusha
fists
fsub
adc
lret
sbb
and
mov
cmp
inc
testl
xor
jae
add
fmull
and
test
pop
inc
mov
mov
sahf
fidivrl
mov
push
push
mov
sub
mov
rcr
pushl
jle
lock
std
cmp
jle
fistpll
fisubl
pop
fs
fcoms
add
add
add
mov
mov
xchg
mov
xchg
cld
aaa
push
cmc
rcl
cmpsb
addr16
adc
pusha
jne
cmc
sbb
popf
enter
pushl
push
ljmp
popa
xor
xor
pop
mov
mov
jmp
sbb
mov
icebp
pop
mov
push
sbb
jmp
data16
add
sarl
pop
sub
fstpl
loope
imul
inc
pop
loope
xchg
inc
js
aad
sbb
mov
sub
aaa
aad
pop
daa
outsb
fldenv
aaa
jnp
push
jmp
push
into
inc
ror
in
push
pop
aas
dec
and
push
xchg
ficoml
push
ret
shll
jne
xchg
push
rol
sub
xor
enter
jbe
hlt
mov
imul
push
dec
mov
ja
sbb
adc
je
pop
lret
mov
fnstsw
xchg
pop
lds
xlat
ficompl
inc
xor
mov
add
add
popa
data16
fwait
add
pop
hlt
or
and
dec
mulb
arpl
pop
fcmovne
imul
cmp
pop
jmp
ret
aam
fneni(8087
or
dec
stos
dec
push
decl
pop
mov
fisubrs
dec
call
or
jl
cmp
ljmp
ret
ds
jmp
bound
jle
inc
mov
sub
lret
outsb
inc
icebp
lods
js
and
add
xchg
movsb
out
pop
inc
pusha
push
aam
les
cmp
cmpsb
ret
mov
lods
add
pop
aam
mov
jmp
xor
je
lahf
cmp
push
imull
fldl
imul
pop
lcall
sub
movsl
inc
dec
iret
adcl
cmp
pop
xchg
inc
lahf
cmp
inc
add
in
inc
mov
fwait
sub
mov
movsb
mov
stos
push
fisubrl
add
add
sub
iret
outsb
jmp
push
test
pusha
mov
add
add
dec
pop
pusha
ret
or
adc
mov
les
pop
xchg
test
in
jbe
jb
cltd
cmpsl
pushf
adc
adc
mov
jg
fistpl
dec
int
jmp
out
addr16
jl
mov
xor
jno
push
outsb
mov
rolb
sub
dec
jle
pushf
pushl
mov
mov
stc
nop
inc
mov
xor
rcll
in
pop
ret
cmc
repnz
inc
lock
push
pop
pop
stos
xor
xchg
push
pop
xor
xchg
and
mov
popa
jge
or
enter
scas
daa
sti
clc
and
loopne
mov
out
pushf
aaa
fstpl
inc
push
push
pop
mov
clc
lret
pop
call
enter
and
ds
xchg
pop
push
add
push
ss
in
dec
and
mov
cmp
aad
sub
shlb
xchg
outsb
fisubrs
and
add
add
std
sbb
stc
cld
or
inc
jg
pop
in
add
add
add
push
sbb
jo
add
inc
xchg
adc
incl
push
andnps
push
mov
daa
dec
insl
jnp
push
loope
in
std
mov
imul
in
xor
adc
pop
adc
add
fmuls
mov
inc
inc
or
pop
xchg
xor
dec
sbb
scas
adc
xchg
sbb
pop
rorl
pushf
add
cmp
mov
add
ja
mov
es
jl
and
push
jae
add
psubb
sub
nop
xchg
lods
sbb
dec
int
xlat
mov
mov
push
stos
sahf
jmp
mov
test
adc
stos
out
xor
mov
lret
icebp
inc
cli
cwtl
fwait
pop
dec
and
pop
cmpl
and
mov
dec
loope
lock
enter
bound
imul
fs
out
or
mov
adc
cli
into
lock
negl
adc
pop
xchg
cmpsb
sahf
jl
outsb
call
add
add
flds
in
mov
stc
std
sbb
aad
inc
xchg
daa
testl
mov
sbb
or
adc
and
test
jo
aas
lds
je
loopne
add
stos
pop
es
fisubl
mov
inc
or
inc
test
rcll
xchg
arpl
cld
jle
xchg
lds
int
push
in
imul
or
fwait
lret
cmp
js
mov
and
dec
out
mov
dec
lock
xor
dec
and
ss
loope
lret
inc
push
xchg
sbb
push
jb
xor
jl
mov
adc
sti
xchg
or
jp
mov
xor
add
inc
addr16
or
sbb
add
loopne
in
popa
insl
xor
mov
mov
xchg
sub
jle
pop
sub
jg
jb
jno
cltd
mov
test
jge
lcall
jne
xor
loopne
pop
mov
dec
pushl
jns
adc
add
add
add
lret
icebp
in
stos
cltd
or
es
lods
cmp
shr
fnstenv
add
adc
push
dec
into
ds
int
mov
mov
insl
lahf
adc
mov
sub
bound
adc
in
push
jnp
icebp
scas
adcl
sub
fistpl
jp
and
mov
test
shll
jo
in
sub
jb
mov
dec
mov
iret
sbb
in
mov
dec
sub
push
bound
lods
and
sbb
stos
aam
in
xor
sbb
popa
push
lock
pop
lods
icebp
test
and
jmp
out
inc
cmc
add
jnp
out
push
dec
lret
pushf
insl
test
adcb
popf
iret
jg
cmp
cmpsb
stc
xlat
mov
inc
aad
lret
nop
add
cmp
inc
and
stos
jecxz
jle
xchg
pop
in
push
and
xlat
mov
aaa
inc
lahf
xor
sbb
cmp
add
inc
ja
pop
aas
dec
push
outsb
ljmp
add
in
sbb
jp
and
dec
inc
sub
imul
dec
dec
pop
mov
cmpsb
jle
sbb
pop
out
icebp
dec
arpl
cwtl
aam
fbld
adc
and
and
or
lods
add
adc
xor
push
stos
cmp
mov
das
adc
jl
add
dec
pop
or
add
ss
movsb
imulb
jbe
xchg
rclb
pop
cld
loope
fnsave
loope
push
data16
xor
mov
jmp
jl
movb
aam
fs
xchg
test
xchg
nop
call
stc
add
test
aad
dec
in
outsl
jecxz
sbb
lods
jno
adc
and
imul
insb
mov
sub
scas
push
push
scas
leave
pop
out
scas
lods
xchg
sub
addr16
aam
insb
sbbb
mov
inc
ret
repz
add
repz
jae
ja
div
mov
dec
push
adc
sbb
add
add
cld
lcall
fisttps
mov
nop
in
decl
cltd
int3
insl
mov
inc
lret
aad
push
mov
jnp
jle
jns
push
adc
inc
pop
int
mov
add
sbb
lock
test
je
jbe
xor
mov
test
cmp
pop
add
test
pushf
stos
lret
rcrl
push
ret
push
mov
ret
iret
cmp
xor
jmp
mov
cmp
pushf
adc
xor
imul
lret
push
cltd
mov
and
or
lock
stc
push
adc
or
sub
pop
mov
jae
mov
push
pop
lcall
mov
aaa
push
add
jecxz
sti
cltd
mov
cmc
inc
sub
xchg
aad
faddl
add
add
cli
std
jg
push
pushf
dec
cmp
xor
add
add
mov
addr16
fcomps
mov
and
sti
jne
sahf
aaa
ljmp
sub
pop
cmpl
fcomi
mov
push
xchg
iret
jne
test
shll
dec
std
dec
jg
out
inc
dec
add
enter
orl
sti
out
ja
in
loopne
in
sbb
push
ret
pop
jbe
pushf
fsubl
mov
arpl
pop
andb
push
mov
xchg
jl
movsl
mov
push
mov
sub
cmp
xchg
dec
inc
arpl
xchg
mov
add
inc
mov
xor
sti
movhps
jne
xchg
pop
sub
lds
jle
test
mov
sub
sbb
fistpl
inc
pop
lock
push
mov
cmp
fs
inc
xchg
arpl
inc
or
xor
and
popf
and
add
dec
xor
je
inc
cmp
testl
incl
sbb
aad
mov
add
add
jp
les
pop
jns
dec
push
les
stos
add
lods
cmc
add
js
push
inc
into
divl
cs
or
es
adc
arpl
push
lcall
pushw
jo
pushf
lret
outsb
and
sub
movsb
xor
lahf
les
push
push
out
in
add
jmp
movl
gs
mov
lret
scas
sbbl
lock
out
popf
lods
es
sub
cmp
mov
lods
push
sub
and
xchg
push
jp
lds
add
sub
in
jne
cmpsl
inc
inc
mov
pop
push
ret
clc
push
lret
or
push
enter
int3
dec
inc
mov
add
arpl
mov
rolb
xchg
sti
jae
cli
push
fsub
nop
in
repz
loop
or
mov
mov
xlat
fisubrl
scas
std
cltd
or
or
push
es
jg
pop
or
xor
jecxz
add
add
add
in
lahf
xor
iret
aad
les
imul
xchg
int3
nop
sub
cld
aam
adc
das
stos
nop
test
outsl
inc
dec
cmpsb
mov
jne
popf
or
adc
out
cmc
pop
lahf
push
insb
hlt
in
ljmp
dec
loope
xor
pop
sti
lret
ds
sti
in
cmc
cmc
mov
adc
pop
lods
and
jb
mov
push
dec
test
into
sbb
jg
xchg
xchg
mov
adc
sbb
adc
xchg
jnp
dec
cmp
pop
fsubrl
hlt
cld
inc
mov
inc
mov
addb
mov
cmp
test
push
test
les
jg
cs
scas
inc
idivl
outsl
js
je
loopne
add
lret
ret
enter
sub
inc
xchg
daa
mov
fistpl
loopne
sbb
add
fnstsw
push
sbb
xchg
fldl
add
add
or
dec
push
cmp
sbb
add
cmp
pop
fsub
scas
movsl
cmp
or
adc
notl
je
lret
aam
dec
int
push
jo
fs
fisubrl
xor
jae
pop
out
inc
outsb
popa
hlt
mov
ss
lea
hlt
mov
lea
test
test
mov
lods
shlb
jbe
xor
cld
cmp
xchg
es
rcr
mov
adc
roll
push
lock
xrelease
cmp
fbstp
push
lods
shl
mov
and
cmpsb
cmpsl
mov
arpl
enter
pushf
jo
shr
push
cmp
inc
je
cmp
jmp
pop
xchg
mov
xchg
pop
stos
or
add
lret
leave
loopne
ss
in
jmp
sub
add
std
insl
sbb
mulb
call
adc
mov
inc
and
ret
cmp
repz
or
stos
xor
and
mov
add
stc
lods
xor
mov
dec
push
or
add
add
add
sbb
jae
mov
insl
inc
sub
inc
mov
hlt
dec
sahf
xor
and
sub
and
pop
pop
icebp
inc
cmpsl
out
ret
push
cmc
sbb
sub
cltd
push
jg
int
push
ficompl
cs
out
sub
jl
inc
pop
mov
sbb
adc
test
in
fsts
adc
mov
push
clc
push
jg
xchg
push
jmp
decb
bound
mov
sti
sarl
repz
pop
push
push
in
and
mov
imul
pop
push
cs
push
xchg
jmp
cmpl
insb
popa
loop
sahf
fstps
jle
sub
jbe
xchg
mov
sbb
repnz
pop
inc
and
or
outsl
adc
out
test
lods
sbb
ret
loop
xchg
jle
inc
lds
nop
mov
sbb
xchg
mov
add
ficoms
stos
sbb
call
mov
or
add
add
add
in
jne
mov
fnsave
ret
clc
jo
push
sbb
mov
outsb
divl
pop
sti
xor
dec
rcl
data16
int
push
xor
pop
cmp
adc
inc
and
xchg
inc
jbe
push
cmpsl
repnz
icebp
add
sbb
mov
fldt
sbb
push
xchg
xchg
mov
popf
mov
dec
sbb
adc
ss
outsb
push
lahf
enter
or
aas
fnstcw
add
add
jne
cli
pop
ljmp
inc
insl
es
push
inc
and
nop
cld
inc
lods
sahf
fucomp
inc
fistps
pop
add
dec
mov
cmpsl
adc
cwtl
dec
aas
fs
mov
push
push
and
sbb
and
inc
iret
inc
roll
inc
add
add
add
in
out
stos
jge
or
sbb
adc
add
add
add
out
xor
and
pop
leave
cmp
mov
mov
js
cmc
int
pop
mov
inc
addl
les
dec
mov
cmp
ss
out
lods
sbb
sbb
movsb
addr16
addr16
inc
out
pusha
daa
aam
jb
cli
sub
cmp
mov
jmp
dec
idivl
jno
xor
rclb
repz
sti
lcall
sub
imul
push
inc
mov
ljmp
xchg
xor
mov
int3
ss
or
mov
aam
pop
cmpsl
xor
ss
mov
dec
arpl
fs
test
pop
shr
popa
jle
lods
outsb
insl
jnp
add
inc
jns
or
cmp
or
ss
pop
aad
jae
inc
xchg
mov
inc
test
lods
ja
mov
and
js
adc
dec
or
out
xchg
iret
push
aas
dec
cli
das
adcb
add
add
cmpb
cmp
mov
stos
jae
jo
add
mov
jo
js
jl
jno
fidivrs
jo
sarb
divb
mov
mov
jle
cli
inc
mov
xor
or
mov
in
xchg
and
andb
mov
stc
js
fisubl
cltd
aam
adcl
xor
mov
pop
out
push
dec
js
mov
outsb
ret
mov
ljmp
sub
in
mov
cmpsl
push
loopne
push
mov
xchg
cmp
mov
xchg
shll
inc
into
jnp
jnp
addr16
pop
dec
rorb
mov
lahf
xchg
mov
dec
adc
cltd
inc
mov
or
out
insl
imul
jb
imul
add
cmp
mov
or
adc
pop
push
add
mov
aam
inc
jo
add
add
in
add
cmp
out
loope
jns
cli
cmp
and
add
add
jmp
and
lcall
testl
fdivs
sahf
mov
push
or
sub
in
lea
jne
cld
loope
daa
pop
push
dec
movl
je
lock
sub
cmp
scas
inc
popf
push
and
mov
xor
adc
mov
fistps
add
dec
push
rcr
xorl
add
les
lds
movsb
mov
imul
out
push
inc
out
jecxz
imul
xchg
add
xchg
in
scas
jae
lret
jge
mov
cmc
leave
fsubrs
shr
in
jae
xchg
dec
addl
fwait
shl
popa
and
cmp
out
aaa
xchg
mov
cmp
std
and
fistpll
xor
adc
cs
loop
lret
clc
repz
add
test
sbb
sti
push
mov
sti
incl
sbb
add
add
add
ret
lods
je
data16
outsl
xchg
add
mov
mov
add
push
sub
mov
sbb
jnp
mov
lcall
pushf
scas
pop
decl
xchg
cmpsb
xor
insb
lcall
push
xchg
mov
in
je
mov
jns
push
lea
inc
inc
sbb
inc
shll
pushf
jo
add
adc
and
scas
cli
pop
mov
scas
cld
pop
inc
cld
push
xchg
in
inc
jecxz
ss
les
jmp
ljmp
jmp
adc
ds
outsl
mov
push
cli
xorl
mov
jb
out
inc
cmpsb
rorl
fidivl
je
test
sarl
pop
mov
dec
aad
ljmp
xor
loopne
add
and
and
sub
repz
nop
cmp
mov
add
add
mov
js
imul
mov
dec
idivl
cld
ret
add
xchg
jns
and
add
add
cli
xchg
xchg
shr
lret
push
sub
std
jmp
pop
in
xor
xchg
jne
jecxz
cmpps
stos
xchg
pop
imul
stc
sbb
loop
xchg
mov
xor
cltd
cmc
lahf
das
pop
xchg
clc
test
mov
outsb
ja
mov
sbb
sti
int
mul
inc
mov
lahf
lods
pushf
dec
ret
loop
xor
sub
add
mov
stos
dec
mov
jno
add
les
or
enter
mov
cli
add
das
and
rolw
fadds
xchg
test
scas
leave
and
sti
dec
scas
cli
cwtl
mov
mov
es
add
mov
idiv
xchg
cs
xorb
jmp
clc
mov
stos
cs
in
lcall
sbb
mov
pop
cmp
cs
pop
dec
aaa
sub
push
or
adc
push
ljmp
pop
ret
mov
iret
mov
add
and
add
mov
mov
sub
dec
xchg
nop
jle
inc
cmp
jae
ja
mov
into
ret
mov
jbe
sbb
out
std
pop
push
or
pusha
push
mov
mov
mov
sub
in
scas
rcl
mov
mov
dec
pop
sbb
dec
stos
push
mov
mov
cmp
in
in
xchg
push
fiadds
int3
add
out
ret
cmp
scas
dec
adc
int
xor
or
andl
push
jge
push
cmp
dec
pop
mov
sti
xchg
jmp
jbe
es
jo
sub
icebp
inc
cmp
pop
jge
xchg
cmpb
push
mov
or
cmpsb
scas
add
sarb
sbb
int3
mov
or
sbb
adc
cmpsl
cmpsl
inc
test
popf
cmp
pop
xchg
push
in
div
insb
cs
fs
fucomi
push
pop
or
jg
arpl
mov
add
add
add
lock
scas
mov
out
sub
inc
aaa
inc
cmpsb
sti
add
in
cmp
cmp
jnp
testl
leave
rcl
lods
sti
xchg
adc
push
outsl
add
xchg
daa
lock
cmp
xchg
add
jbe
pop
iret
aam
xchg
adc
repnz
xchg
ret
inc
adc
push
aam
inc
fcoms
inc
xorb
addr16
mov
pop
push
hlt
stos
aad
out
dec
imul
jne
and
aaa
pushf
push
jnp
cmp
insb
sbb
inc
pop
lock
fld
inc
mov
sub
lret
shll
sbb
scas
mov
add
push
addr16
xchg
lret
ffree
popf
addl
or
xor
aam
mov
cmp
clc
mov
and
fsubl
push
add
ja
mov
cmpsb
and
nop
or
ljmp
add
add
xor
clc
cli
clc
sarb
sti
mov
sub
add
add
add
adcb
loop
imul
fsubrp
js
rorb
lods
pop
dec
test
pushf
les
mov
gs
inc
lods
pop
cmp
inc
xor
xchg
jge
outsb
pop
add
repnz
jne
and
scas
push
jg
mov
test
shll
data16
or
sub
test
ds
cli
push
or
in
loop
sarl
lea
and
loopne
xchg
adc
mov
mov
or
add
pusha
inc
or
gs
mov
fstpl
shl
xchg
loopne
scas
jmp
xchg
jmp
pop
insb
sbb
aaa
jle
xchg
push
data16
or
adc
fbstp
pusha
add
lods
jge
sbb
insl
and
ja
xchg
addr16
cmpsb
int3
mov
mov
cmp
arpl
xor
enter
add
add
jnp
out
mov
push
test
add
add
mov
out
std
sub
cmpsb
pop
popf
stos
xor
imul
inc
lret
mov
cwtl
sub
adc
or
fdivrs
imul
xchg
adc
mov
jmp
dec
mov
std
fwait
sahf
sbb
sbb
and
jg
jae
iret
lods
jae
mov
stos
std
lret
sbb
mov
push
or
add
lret
mov
and
cmp
push
gs
movsb
sub
aam
adc
mov
pop
mov
mov
jl
add
mov
push
sti
and
mov
fcoml
test
insb
xchg
sub
js
test
sub
adc
imul
push
jmp
imul
push
int3
shr
icebp
cmp
aad
outsl
cmp
pop
test
pushf
adc
and
cmpsb
add
mov
out
mov
cmp
call
fs
es
data16
insb
daa
mov
inc
cmovae
xor
add
add
add
repnz
and
iret
aam
xchg
insl
jp
lret
and
insb
sbb
mov
xchg
push
imul
or
orl
push
repnz
dec
cli
sub
sub
add
sub
outsl
sbb
cmp
stos
xchg
xor
inc
addr16
cmpb
pop
push
cmpsb
orb
je
cmc
leave
hlt
sbb
xchg
push
lahf
fs
jo
dec
sub
dec
in
dec
dec
dec
sub
lods
dec
scas
in
sti
pop
and
sahf
xchg
lods
pop
mov
fldlg2
mov
jl
loopne
adc
sbb
push
push
add
ficoms
popa
xor
jmp
mov
cld
add
add
pop
sbb
push
ss
loop
outsl
jecxz
jge
adc
dec
push
in
rcll
mov
dec
inc
mov
ds
mov
int3
push
inc
sub
lds
aam
push
lds
icebp
inc
shlb
daa
dec
jne
flds
cmpsl
cltd
mov
dec
cld
push
lahf
push
clc
mov
fldcw
add
push
cmp
add
add
add
mov
pop
andb
movsb
out
push
test
scas
sbb
sub
mov
data16
sbb
clc
cmp
cmp
ljmp
pop
and
stos
jg
insl
inc
adc
or
pusha
dec
popf
push
pop
xchg
repz
fidivrs
cltd
add
push
mov
imul
iretw
lret
test
xchg
or
pop
repnz
cmp
inc
and
pop
aas
fidivl
pop
fwait
cmc
nop
insb
pop
xchg
ja
imul
sbb
mov
cmpb
pushf
and
jmp
add
loopne
xchg
ja
pop
xchg
movsb
jecxz
js
pop
js
mov
out
xor
nop
sbb
inc
jne
push
stos
lea
scas
adc
sub
push
push
jae
outsb
push
mov
adc
mov
xor
mov
in
cmc
mov
outsb
adc
call
xor
clc
in
add
add
and
push
sti
cmpsl
enter
repnz
add
add
in
pop
fildl
stos
mov
cmp
int3
or
adc
xor
dec
push
jnp
mov
pminsw
out
push
mov
stc
push
out
lret
jp
jecxz
xor
repnz
sub
xor
dec
inc
add
fnsave
mov
mov
std
ss
sbb
mov
stc
xchg
adc
test
fildll
es
and
xor
mov
lcall
mov
push
or
lret
pop
dec
xor
ret
mov
dec
enter
inc
sbb
dec
lret
arpl
jle
pop
xchg
cmpb
mov
cwtl
int
mov
outsl
xlat
ret
adc
and
sahf
or
inc
fistl
stc
or
inc
xor
rcll
xchg
and
mov
or
lcall
cmp
dec
jbe
imul
push
and
std
mov
dec
push
or
add
add
add
jae
xor
roll
sbb
pop
mov
dec
sbb
ds
xor
sub
aad
sbb
sahf
jl
pop
xor
pop
mov
xor
cltd
test
xchg
inc
xor
jge
fsubrs
cmpsl
mov
in
xchg
sbb
mov
or
and
pushf
filds
mov
mov
or
fwait
roll
in
fcompl
loop
push
sub
inc
jecxz
inc
adcl
aas
mov
sub
pop
lret
cmp
pop
cld
adc
aam
call
push
sbb
sub
fistpl
fwait
insl
and
xor
pop
in
xchg
sub
mov
js
cli
das
or
pop
ljmp
sub
negl
mov
scas
daa
and
icebp
pop
sub
lods
pop
xor
jmp
pop
movsb
fisttpl
addr16
hlt
das
sbb
aaa
ret
mov
xor
sub
lods
push
push
lods
mov
imul
add
add
and
jecxz
and
lcall
add
add
add
mov
add
sub
add
cmpsl
xchg
push
movsb
sub
dec
xchg
mov
or
rorb
rclb
sub
pop
mov
lds
mov
into
pop
loopne
sub
pop
pop
mov
sarl
xor
sub
in
push
mov
jp
xor
stos
push
mov
or
jno
cmpsl
fcmovnbe
or
mov
sub
jle
sbb
xor
js
add
scas
or
popa
xchg
lahf
shll
fwait
aaa
repz
cltd
lods
popf
mov
lret
inc
dec
idivl
sbb
and
pop
cmpsl
inc
repnz
mov
cwtl
arpl
test
mov
mov
xlat
and
fwait
pop
repz
adc
mov
xchg
mov
adc
jle
cltd
je
mov
insb
data16
push
and
dec
fiaddl
ret
ficomps
cmp
lahf
sbb
ret
add
add
add
dec
sar
ss
mov
or
xlat
xchg
adc
or
mov
ret
add
lret
xor
xchg
lods
std
mov
dec
xchg
je
xchg
dec
sub
jle
icebp
adc
leave
push
je
int3
mov
nop
sbb
ss
or
inc
cwtl
int
or
dec
call
iret
ror
or
daa
mov
inc
xchg
sbb
adc
addb
dec
add
jle
lock
ret
lea
loope
sbb
out
inc
test
cmp
mov
mov
push
int3
outsb
mov
pusha
leave
shll
popa
ds
movsb
or
gs
add
mov
sbb
int3
xor
add
rcrb
mov
pop
in
loope
mov
test
iret
or
jne
jge
lods
scas
mov
lcall
and
push
and
into
iret
iret
mov
arpl
ja
sub
add
das
add
add
add
popf
sub
jnp
shll
or
lret
jge
fbld
enter
jns
mov
and
dec
mov
ret
loop
scas
insb
loopne
clc
cwtl
adc
dec
shll
push
je
jno
je
push
cli
xchg
lods
ret
mov
in
cmpl
out
pusha
cmp
dec
subl
jns
and
jmp
mov
into
dec
xchg
data16
pop
sbb
xchg
mov
dec
mov
or
mov
cld
dec
mov
pop
je
fcmovu
mov
push
push
push
dec
xchg
pop
stos
mov
push
mov
mov
and
out
push
fdivr
pop
into
push
mov
pop
int
xchg
dec
xorb
insb
hlt
push
jne
into
sub
lods
in
aam
sub
fwait
stos
dec
lock
push
sbb
rcrb
enter
shrb
arpl
pop
pop
neg
xor
jmp
lret
int
lock
mov
or
mov
data16
add
add
add
xchg
cmp
and
shll
ljmp
mov
insl
xchg
pop
dec
mov
sub
mov
inc
jne
mov
hlt
in
jecxz
push
out
xchg
call
iret
sbb
scas
xchg
push
pop
int3
xor
rclb
mov
xlat
cmp
subb
in
or
jecxz
pop
inc
movsl
mov
and
imul
in
stos
and
les
pop
xlat
adc
add
dec
xor
push
dec
sti
ds
pop
pushf
mov
xchg
nop
xchg
bnd
in
mov
in
mov
dec
movsl
adc
pop
inc
rcr
xor
inc
xchg
cmp
mov
jo
mov
mov
mov
loopne
pushf
out
jmp
stos
xorb
pop
adc
fbld
cli
leave
sbb
push
cwtl
movsl
xchg
mov
add
add
sti
pop
jge
neg
hlt
add
pop
push
xor
add
add
and
sbb
jge
addl
mov
add
mov
imul
pop
jno
push
push
xlat
dec
cld
cmp
in
lret
cwtl
and
xor
jle
scas
cltd
call
les
mov
imul
adc
lock
push
mov
cmp
test
imul
aas
imul
divl
lret
mov
loope
pop
sbb
jns
in
aad
adc
inc
mov
mov
loop
outsb
in
fninit
js
ret
xlat
xchg
or
ja
mov
push
lock
fsts
jp
sarl
mov
cmp
ljmp
loope
ljmp
daa
scas
push
jg
scas
pop
inc
xchg
call
fistpl
scas
test
xchg
jecxz
mov
push
je
arpl
cmpsl
push
cs
and
inc
mov
mov
cltd
dec
stos
ds
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
fnstenv
add
add
add
mov
mov
sub
imul
mov
scas
mov
sub
out
ljmp
cmp
dec
adcb
scas
jb
pop
push
ss
outsl
imull
dec
sub
mov
cmp
sub
adc
or
imul
inc
repz
and
cwtl
or
cmp
pop
mov
scas
pop
push
mov
out
outsl
jne,pt
mov
movsb
loop
xor
int
mov
push
pop
test
lahf
jle
cmp
adc
rclb
shll
push
pop
sbb
sbb
sub
idivl
fstl
lock
jb
xchg
jmp
xchg
xchg
imull
jge
call
pusha
jno
pop
test
mov
or
pop
repz
lret
pusha
cmp
dec
dec
nop
xchg
in
adc
jle
out
lock
jmp
mov
pop
jp
jnp
sti
xchg
jle
jp
lods
test
add
add
add
mov
inc
xchg
adc
idivb
fsub
mov
mov
addr16
sarb
dec
stc
or
push
mov
mov
jae
mov
cmp
rcrl
pop
lcall
mov
or
test
mov
jae
movsl
mov
push
inc
xchg
jge
loopne
push
test
push
aad
pusha
setne
nop
out
fisubrs
cwtl
jae
js
stos
scas
lea
lret
jle
and
shrl
push
or
cmp
adc
adc
mov
movq
sarl
ficoms
pop
add
rcrl
and
xorl
outsl
push
pop
in
test
pop
cltd
xchg
xor
out
out
aaa
in
mov
ljmp
push
test
mov
aaa
dec
sub
mov
fcmovnbe
outsl
xchg
rclb
adc
xchg
add
add
push
sti
decb
mov
pusha
xor
add
add
je
sub
add
xchg
ljmp
repnz
xchg
add
jae
cmp
push
cmc
fstps
sub
das
aad
push
data16
out
mov
mov
jmp
outsl
aad
and
outsl
fidivl
mov
adc
jecxz
jns
jle
add
inc
push
jle
daa
sbb
cli
mov
scas
int
int3
mov
xlat
popa
mov
mov
gs
pop
add
std
cli
into
aas
adc
sbb
cs
in
jae
ret
push
xchg
rcrl
mov
test
in
ds
sbb
shrb
cmp
data16
insl
jge
mov
vshufpd
jecxz
add
mov
faddl
adc
push
mov
lret
or
aam
mov
negb
mov
push
popa
push
add
push
inc
into
push
test
sbb
push
out
mov
add
add
cmp
xor
hlt
mov
je
fs
add
shlb
leave
push
movsl
rcll
add
stos
enter
mov
add
jbe
lcall
pop
push
add
aad
lods
in
pop
dec
jno
add
arpl
aam
mov
add
lods
push
icebp
cmc
add
dec
fidivl
aam
sbb
pop
xchg
mov
mov
push
into
sub
dec
jp
out
and
shrl
mov
fimuls
shll
mov
push
rclb
pop
xor
shll
add
repnz
and
mov
mov
cltd
imul
stc
fcoms
pop
movsb
dec
xchg
sti
dec
jae
push
push
pop
aaa
mov
jle
pop
push
inc
cmp
mov
ja
jmp
or
dec
mov
mov
js
mov
scas
out
push
stos
mov
xor
push
fistpl
fwait
cmp
lcall
add
orb
add
add
cmp
jge
stos
lea
shrb
movsl
or
add
add
add
in
mov
mov
stos
xor
out
mov
mov
jg
xchg
push
incb
xchg
ds
clc
xchg
cltd
testb
fmull
mov
add
mov
xlat
adc
test
gs
sbb
jo
mov
out
das
scas
int3
add
xchg
outsl
sarl
cs
and
push
mov
fsubrs
repnz
sarb
lds
filds
inc
sub
sbb
dec
xchg
out
adc
xchg
mov
push
bound
xchg
add
ror
xchg
mov
mov
jne
jmp
inc
sub
cmpsl
cmp
int3
fcomps
mov
mov
lret
cmp
mov
test
xchg
inc
xor
xchg
fwait
adc
insb
mov
adc
cmp
call
pop
inc
mov
in
and
add
add
rclb
nop
lcall
aaa
add
add
add
dec
shlb
aas
cmpsb
mov
hlt
adc
jne
adcb
mov
loopne
lods
mov
stos
fistpll
jge
sbb
mov
int3
mov
xchg
cs
pop
xor
ljmp
add
add
repnz
leave
aam
out
mov
or
cmp
in
in
pusha
push
incb
lods
addr16
shll
data16
fidivrl
dec
mov
push
or
push
inc
dec
lret
lret
cwtl
jl
mov
pop
fiadds
into
vcvtss2sd
cwtl
roll
ds
stos
jne
sub
mov
mov
pop
sahf
push
lcall
adc
fistpll
dec
mov
loop
dec
xchg
sub
repnz
and
andl
fnsave
test
cld
xchg
mov
push
dec
xor
dec
imul
jl
dec
jbe
idivl
or
lods
jmp
add
add
xor
xor
add
rcl
dec
sarl
and
and
pop
shr
mov
xchg
xor
or
dec
lea
iret
jecxz
pop
adc
ret
inc
and
pop
test
int3
enter
je
nop
jae
sbb
cmp
jo
xchg
mov
or
fadd
popa
sub
ja
dec
call
ja
dec
pop
int3
jae
jmp
dec
dec
jmp
pop
cli
bound
push
sub
xchg
pop
js
mov
xlat
mov
mov
adc
les
fnstcw
cli
adc
inc
push
xor
call
test
jg
stos
outsl
ss
dec
dec
fisubs
pop
imul
sti
test
inc
cs
cmc
mov
mov
push
mov
sbb
and
es
inc
jl
pushf
insl
mov
xchg
mov
and
outsb
sub
stos
fs
jmp
leave
aas
adc
add
add
add
mov
stos
lcall
stos
inc
xchg
lock
repz
xor
or
sbb
cmpsl
pop
push
js
jno
sbb
push
pop
mov
pop
mov
sub
jbe
inc
fiaddl
dec
sub
out
pop
cli
push
push
aad
iret
sub
mov
mov
lock
dec
in
rcrb
mov
lahf
test
mov
stos
cmpsb
jecxz
cmp
and
cwtl
pop
jbe
jge
push
scas
out
push
xor
mov
hlt
mov
pop
inc
loope
lret
lock
jle
xor
fwait
clc
and
lds
popf
cmp
cmp
lret
ret
sbb
stos
push
lahf
inc
cmp
fs
jne
cmc
test
cli
mov
xchg
out
out
dec
add
mov
xor
mov
jmp
dec
jnp
enter
out
inc
or
xchg
in
fs
insb
mov
imul
movsl
push
xchg
bound
add
add
insb
pop
pushf
scas
fistpll
outsl
repnz
js
add
add
add
mov
mov
cmp
mov
inc
push
enter
adc
adcl
fidivrs
add
arpl
xchg
mov
adc
sub
js
int3
aaa
js
outsl
pop
lret
adc
hlt
out
popf
pop
sub
gs
push
lds
adc
enter
loopne
and
in
scas
andl
outsb
xor
fdivl
cli
sar
cwtl
mov
mov
sbb
fisttps
xchg
cltd
cmp
jmp
int3
mov
cmp
adc
jmp
sub
mov
mov
pop
das
dec
cmc
sahf
xor
loop
inc
mov
inc
pusha
xor
jo
jnp
and
push
pop
xchg
lock
cmp
leave
jns
dec
popf
scas
out
jns
sahf
scas
mov
dec
cs
ss
cmpb
jmp
adc
mov
xchg
mov
add
cmp
movsb
push
sbb
and
add
add
add
jns
pop
ljmp
ror
xor
xchg
insb
mov
or
fisttps
jp
cmp
in
mov
cmp
inc
mov
or
cmpsb
and
sbb
inc
into
sti
enter
in
lret
daa
ds
shlb
mov
clc
push
pop
jns
xor
lock
dec
addl
lds
into
fisubl
push
aam
jge
push
dec
out
push
inc
repnz
loope
sbb
ja
push
adc
movsl
push
xor
iret
dec
jl
sbb
sbb
inc
jmp
mov
outsb
sbb
mov
fsubrs
loope
or
cmp
subb
leave
shlb
inc
jl
push
mov
shrl
xchg
mov
xchg
ss
sub
xor
imul
adc
dec
jecxz
adc
leave
in
push
adc
xlat
out
jecxz
mov
mov
mov
enter
add
outsl
lret
mov
out
jmp
adc
add
add
lock
mov
dec
fsubl
jne
fwait
bound
xchg
lock
mov
test
outsb
imul
jns
jp
jnp
ss
mov
sahf
mov
adc
xchg
push
ljmp
pop
leave
iret
mov
shll
mov
add
mov
push
aaa
loop
pop
add
dec
fldl
nop
xor
mov
lods
add
xlat
push
pusha
sub
jo
pop
shll
movl
or
mov
jnp
sub
or
rcll
inc
jbe
inc
cmp
adc
loope
setl
scas
fiadds
shl
cwtl
popa
xchg
cmp
cmp
push
lock
mov
mov
fs
jge
out
out
outsl
add
pop
lcall
fs
mov
cs
push
mov
xor
cmp
push
lret
inc
mov
inc
inc
pop
add
and
das
cmp
lods
repz
mov
enter
cmp
add
push
enter
aam
inc
mov
add
add
xchg
test
dec
scas
mov
adcl
mov
mov
jno
ss
sub
mov
xchg
int
xchg
test
pop
sbb
xchg
adc
pushf
mov
inc
out
push
outsl
push
jbe
pop
push
ret
in
filds
adc
ljmp
cmpsl
sbb
ret
mov
mov
fistpll
fldt
test
mov
in
inc
xor
pop
repz
sti
es
arpl
xchg
loopne
leave
or
jmp
push
ss
push
xchg
mov
out
out
dec
insb
fldenv
sub
xor
jbe
adc
int
jp
mov
popf
orl
jnp
loopne
das
nop
out
xchg
sub
jo
inc
mov
mov
or
fsubl
mov
mov
pop
or
sub
dec
mov
aas
daa
push
cld
push
std
jmp
dec
push
push
mov
add
add
add
and
jle
mov
das
dec
mov
sub
dec
and
rclb
mov
pop
pop
adc
jne
mov
nop
subl
inc
xor
into
dec
sub
mov
int3
faddl
and
xor
cli
into
mov
xor
fidivl
or
push
test
sbb
das
and
in
lods
mov
push
adc
xchg
xchg
arpl
xchg
ficomps
jmp
pushf
daa
fs
sub
repz
fstpl
test
jbe
mov
ret
pop
jecxz
ret
lcall
fidivrs
fs
xchg
fs
inc
xchg
std
test
insb
lea
jo
aaa
imul
pop
pop
xchg
jp
add
inc
imul
leave
jg
sbb
sbb
lcall
ficomps
mov
fs
add
insl
lahf
xor
jle
mov
nop
adc
dec
push
add
sbb
dec
push
out
aad
imul
add
or
cld
js
das
lcall
xchg
adc
ds
hlt
add
clc
cmp
push
je
mov
jmp
sbb
je
out
and
xor
cmc
dec
add
or
aas
sarl
insb
push
adc
scas
mov
mov
or
push
lods
inc
int3
pop
dec
sbb
mov
pop
add
lods
jnp
push
lock
jno
jne
inc
xchg
dec
pop
push
add
jne
mov
clc
add
jnp
lret
pop
pop
sub
xchg
jp
xchg
xchg
sub
repz
mov
cmp
je
jno
stos
pop
fidivrl
fildll
pop
sahf
mov
in
rclw
mov
xor
xchg
mov
pop
xor
xchg
xorb
hlt
pop
mov
push
stc
adc
cld
cs
and
jb
or
fsubp
dec
and
sub
mov
std
jne
aam
sub
sub
add
stos
add
push
mov
or
rdpmc
pause
inc
add
add
add
lea
int
arpl
mov
in
mov
or
jle
pop
inc
mov
repz
or
loope
movsl
xchg
orl
movsl
xor
data16
inc
hlt
dec
mov
ja
incb
xchg
icebp
mov
les
ljmp
sbb
test
mov
pop
mov
pop
mov
pop
mov
sti
mov
add
popa
jmp
repnz
lods
iret
stos
cmc
xchg
iret
ss
or
dec
es
stc
adc
dec
jle
pop
pop
fdiv
or
jmp
out
loopne
in
push
cmp
hlt
fcoml
lret
iret
mov
mov
lahf
cmp
add
aad
es
mov
ss
push
jb
loope
sarb
dec
cmp
dec
shrl
xor
jns
push
aaa
in
int
jle
xorl
and
pop
mov
ja
jg
xchg
orl
aas
xchg
inc
add
add
add
mov
mov
mov
add
test
or
cs
xchg
dec
aam
sub
stos
sub
repnz
lcall
pop
pop
cmc
xor
lods
jno
mov
cmp
pop
cmpsb
bound
push
inc
jl
daa
aad
adc
or
test
fdivs
fcmovu
xor
xchg
ja
add
and
pop
ss
pop
jl
ljmp
imul
popf
mov
cmp
push
inc
lret
add
loop
nop
in
jp
je
je
mov
sti
sbb
test
fsubl
pop
and
add
or
push
fadds
mov
xor
dec
jg
add
orb
cltd
mov
push
insl
push
adc
int3
xchg
js
ret
or
lret
xor
xchg
push
xor
cli
and
dec
lret
jmp
imul
aaa
je
mov
mov
add
add
and
repnz
mov
clc
mov
jp
jge
shlb
mov
movsl
mov
jle
mov
lahf
jp
jecxz
dec
push
dec
sti
push
pop
sub
add
fwait
add
cmp
jl
pop
shlb
sbb
pop
and
fs
cmpsl
inc
add
fistps
adc
inc
in
mov
jns
dec
inc
cli
xchg
jmp
std
inc
jo
cmp
and
mull
xchg
lea
inc
inc
cmp
sbb
stos
lea
push
cmpps
inc
add
sub
mov
or
cmp
cmc
jno
add
sbb
aam
inc
test
daa
push
cli
cmpl
adc
std
and
std
xchg
adc
mov
stc
inc
mov
push
out
inc
jno
mov
push
and
xchg
sbb
push
stos
daa
cmpb
notl
xlat
mov
xor
icebp
sub
lds
cmc
cwtl
xchg
push
sub
add
add
add
sbb
std
sahf
and
mov
aaa
lret
inc
mov
xor
dec
test
cmpsb
mov
push
dec
ss
jbe
mov
inc
mov
jo
pop
daa
shlb
fs
mov
push
daa
jbe
idivb
xor
adc
dec
jle
adc
insb
repnz
adc
mov
mov
push
push
mov
stos
push
sahf
add
movsl
pop
xchg
xchg
pop
fwait
jne
mov
push
cmc
xchg
mov
mov
call
lock
pop
pop
cmp
fs
mov
fs
mov
or
pop
incl
sbb
adc
xor
lret
nop
leave
cmp
enter
xchg
jns
fs
mov
fcmove
popa
dec
dec
clc
dec
outsb
test
mov
pop
insb
adc
incb
mov
or
in
iret
aam
xchg
cwtl
or
in
stc
xchg
pop
repnz
add
sub
jns
xor
jg
xor
add
add
add
cld
in
gs
or
jbe
xchg
and
mov
jmp
aas
push
mov
loopne
push
pop
shr
arpl
mov
push
xchg
es
jns
sub
in
mov
push
iret
out
scas
ret
sub
js
out
push
dec
and
or
cmpsb
leave
movsl
sub
into
mov
add
out
add
insl
and
ret
jns
jnp
js
and
xchg
and
mov
das
inc
cmpsl
xor
sbb
xor
shlb
rcrl
xchg
ret
ror
icebp
lods
cmp
hlt
pop
xchg
dec
push
xchg
lock
js
cmp
loope
push
xor
in
push
hlt
sub
xchg
pop
jno
shrl
jg
and
lods
test
test
das
sub
sbb
lret
sub
icebp
dec
push
or
mov
lods
test
aad
mov
pop
push
mov
loop
push
xchg
loope,pn
lcall
std
sldt
add
js
ret
jg
decl
rol
inc
push
xchg
or
add
lods
dec
std
fisttpll
xor
aad
mov
mov
fdivrl
cmp
jg
insl
icebp
or
sbb
adc
jno
rorb
fisttpll
add
aaa
lss
lcall
sbb
push
adc
jae
xchg
aas
aam
std
pslld
inc
push
call
push
jecxz
push
push
dec
enter
ds
jno
stos
pop
daa
mov
addb
push
mov
jmp
jecxz
cmp
out
sub
xlat
in
fstl
ds
faddl
mov
push
lea
xor
loope
pop
xor
sub
lds
add
psubw
pusha
push
sarl
inc
and
test
add
push
push
mov
sub
push
int3
lcall
test
or
in
mov
inc
xlat
pop
sbb
add
das
mov
out
aad
and
shrb
add
add
fistpll
pop
cmp
bnd
fisubrs
ficoml
in
ud2
mov
push
inc
cmp
fcompl
gs
adc
popa
es
adcb
push
push
call
aaa
loopne
stos
xchg
aaa
mov
es
mov
sbb
fistl
jns
lret
sbb
ffreep
mov
sub
inc
imul
test
cmp
scas
clc
sub
and
push
in
js
adc
dec
add
daa
mov
sub
mov
das
inc
jo
hlt
mov
sbb
sbb
add
cld
fdivs
jo
push
pop
inc
pop
mov
sbb
sub
inc
xchg
or
aaa
lahf
sarb
inc
pop
inc
mov
int
mov
adc
test
stos
repz
jne
imul
outsb
or
add
add
hlt
gs
dec
adc
and
add
add
sbb
daa
inc
js
push
mov
jo
add
ss
jge
out
cli
dec
mov
call
xor
pop
xrelease
xor
mov
xor
sbb
ljmp
sti
push
lret
jp
in
dec
sbb
adc
aaa
in
adc
mov
push
xchg
xchg
dec
push
xchg
icebp
sbb
add
add
ficoml
stc
aaa
push
jecxz
ss
test
mov
add
mov
das
inc
int3
and
inc
movsl
sbb
push
mov
sub
and
jmp
testb
lahf
cli
xor
inc
mov
movsl
rcrb
or
dec
xor
xchg
bound
cmp
fsubs
xchg
mov
divl
dec
rcl
pusha
rorb
add
out
mov
lods
shll
dec
mov
and
or
mov
ror
xchg
add
jp
mull
arpl
mov
add
add
aas
gs
pop
repnz
dec
add
add
add
sub
pop
push
jmp
pop
mov
ret
add
push
sub
or
loop
dec
sti
sbb
adc
ljmp
movd
iret
jle
or
aas
ds
adc
dec
pop
mov
mov
dec
inc
xchg
mov
jmp
push
outsl
inc
push
pop
js
data16
cmpsb
xchg
jo
xor
pop
divb
mov
jns
push
jge
sti
mov
or
sbb
adc
adc
push
mov
inc
or
pop
movsb
jl
mul
insl
mov
aad
sub
movsl
fmull
or
inc
mov
mov
call
roll
out
ljmp
mov
xchg
das
add
cmp
pop
mov
in
stos
pop
rol
popa
int3
jle
into
push
inc
repz
popf
ss
lods
mov
jae
es
adc
call
adc
mov
out
fisttpll
lock
imul
add
add
xchg
push
xor
in
insl
mov
jnp
aaa
arpl
push
xchg
jnp,pn
sbb
push
es
icebp
call
hlt
cmp
icebp
mov
mov
lcall
and
outsl
popf
shlb
stos
jo
mov
test
pop
xchg
and
lret
fnstsw
sbb
mov
add
ss
push
popf
and
cld
sahf
and
push
or
inc
es
movsb
or
popa
mov
xor
mov
fisttpll
ljmp
movsl
lea
push
fsts
dec
xor
ret
inc
lahf
js
or
fs
test
fsubrs
jp
insl
xchg
test
data16
imul
popf
out
arpl
repz
dec
mov
in
inc
shlb
dec
xor
or
out
test
into
inc
dec
out
dec
sub
imulb
scas
adc
fildll
mov
ljmp
add
add
add
lret
cs
sub
rcr
loopne
push
dec
in
mov
xorl
pusha
cmpsb
stc
into
shrl
mov
dec
aas
scas
bound
cmc
dec
lds
mov
mov
shr
or
ds
cmpsl
and
xchg
fs
mov
and
pop
pop
cmp
testb
cmp
test
mov
add
sbb
xor
fistpll
ljmp
cld
mov
pop
adc
add
xchg
mov
test
mov
push
cmp
lea
adc
popa
arpl
inc
iret
push
fadd
test
ljmp
add
push
dec
fwait
xchg
fistps
enter
xor
or
xor
mov
ret
sub
loop
adc
mov
std
lea
in
test
jnp
jo
add
add
jmp
out
aas
jo
sahf
jb
jl
cmp
add
into
jno
call
mov
mov
into
popf
into
adc
pop
sub
dec
xchg
ljmp
cmpsl
inc
aaa
cmp
xchg
lock
andl
test
fwait
xchg
jb
sub
xchg
inc
bound
or
xchg
fstpt
push
pushf
xor
pop
insb
call
and
imul
xchg
lahf
and
mov
inc
sbb
fs
jle
cmp
or
adc
xchg
ss
loope
insb
gs
xor
dec
enter
dec
std
lret
fstpt
mov
std
rcl
iret
adc
adcl
imul
outsb
shll
test
lcall
jg
lcall
mov
sub
ret
fnstsw
cmpsl
lods
mov
sbb
adc
sbb
sub
jmp
rolb
pop
fstl
inc
jmp
popf
jns
cmp
imul
out
mov
mov
stos
repz
dec
add
add
add
dec
xor
pop
test
jae
mov
jmp
jb
mov
jae
notb
mov
out
loope
insb
into
enter
sub
dec
adc
out
xor
mov
mov
shll
or
movsl
cmp
popf
inc
loop
das
aam
je
scas
or
inc
xchg
shr
popf
mov
in
xchg
mov
pop
xchg
cmp
dec
fstpt
mov
add
insb
dec
dec
xchg
add
repz
sahf
insl
mov
ljmp
mov
jmp
push
stc
or
xchg
cmp
mov
or
push
and
xchg
movsl
es
adc
xor
push
push
repnz
out
mov
cmp
shl
les
push
and
pop
fisttpll
xor
dec
fwait
xchg
addr16
imul
xchg
popa
into
dec
into
push
fcomps
pop
push
or
add
add
add
dec
stc
mov
ljmp
les
add
add
cmp
add
cwtl
test
mov
pop
mov
sarb
mov
inc
mov
data16
xor
pusha
rcrl
les
int
inc
in
popa
cmp
jge
mov
inc
cmpb
jnp
ficoml
in
mov
push
dec
jno
andb
xor
subl
cwtl
push
mov
lcall
fs
pop
aas
fwait
incl
fcomps
ja
mov
jecxz
add
jmp
sbb
cmpsb
icebp
mov
out
out
flds
scas
add
cltd
in
ss
clc
xor
xchg
pop
arpl
andb
push
xchg
mov
outsb
push
popa
je
call
mov
loop
xchg
push
mov
sti
mov
hlt
jne
insl
lods
in
sub
in
dec
mov
pop
xchg
test
pop
imul
rcrl
inc
das
cld
mov
push
cmpsb
mov
add
xchg
cmp
jle
jg
cld
lcall
lcall
add
xchg
cmp
bound
test
mul
jb
stc
shrb
xlat
inc
hlt
adc
lret
dec
jae
push
inc
sub
mov
push
dec
loopne
xor
sub
inc
arpl
mov
adc
testl
gs
and
mov
in
movq
shr
cmp
stos
je
mov
push
pop
push
jo
xchg
jle
add
and
sbb
lods
pop
outsb
dec
dec
ret
out
lret
sub
scas
jg
and
mov
dec
jne
mov
pop
xor
mul
sbb
stos
cli
dec
mov
push
in
out
out
pusha
sub
pop
subl
dec
mov
popf
dec
cmp
in
lret
jmp
inc
mov
les
xchg
xchg
movsb
sar
cld
bnd
ja
fsts
adc
push
sbb
mov
icebp
or
adc
mov
add
mov
xchg
mov
pop
aaa
loope
mov
add
add
xor
pop
sbb
push
mov
pop
int
fiadds
jmp
lock
into
jge
inc
out
or
xorl
mulb
data16
pop
fcoml
and
aas
push
jns
test
pushf
dec
aaa
lahf
loop
movsl
sbb
frstor
div
cmp
mov
lods
outsl
pop
xchg
test
pop
sti
clc
mov
mov
jl
or
std
repz
add
aam
jbe
push
cli
and
adc
mov
push
pop
stc
loopne
mov
sub
xchg
inc
ficoml
test
enter
jg
inc
fisubl
sbb
pop
jae
jecxz
les
inc
out
mov
mov
xor
cmc
mov
daa
cmp
jb
les
add
into
sbb
adc
add
jp
mov
sbb
insl
js
add
mov
int3
cld
push
dec
push
mov
inc
dec
jne
mov
or
mov
and
adc
rclb
add
add
mov
neg
adc
cmpsb
mov
fs
push
ja
sahf
sbb
shll
and
xchg
add
dec
cltd
and
mov
cmp
inc
push
jp
shrb
cmp
fldl
lahf
dec
xchg
mov
insl
movsb
sti
cld
divl
imul
imul
add
aad
loopne
enter
sub
and
or
sub
mov
jmp
inc
mov
sub
sub
dec
inc
gs
pop
mov
ljmp
jecxz
add
inc
hlt
rcrb
ljmp
fsubrs
imul
adc
and
cmp
xchg
mov
sbb
adc
sub
push
sahf
das
jo
jge,pt
jecxz
out
jne
sti
sbb
pop
or
xchg
js
aaa
aas
xchg
pop
mov
in
mov
xchg
dec
push
pop
cld
and
inc
xor
push
xor
add
add
sub
cmp
ret
or
jg
jmp
aam
add
add
add
mov
dec
cmp
push
mov
jg
jns
lar
insl
add
xor
dec
xor
js
mov
xchg
sarb
xor
cmpsb
mov
repz
fcoms
cltd
and
stc
mov
ret
mov
stc
andb
mov
mov
lds
in
shlb
add
rdtsc
arpl
jmp
fistpll
ret
add
loop
lahf
mov
push
pop
cmp
add
popa
xchg
cld
jnp
dec
push
xor
inc
inc
dec
enter
jnp
and
mov
stos
xchg
xor
xor
stos
mov
jnp
out
rcrl
lcall
ds
dec
push
mov
sysexit
clc
pushf
outsl
or
ds
pop
jp
xor
mov
scas
sahf
pop
sub
xor
mov
in
or
ficoms
fwait
in
mov
jnp
data16
and
xchg
add
or
push
shll
out
pop
pop
pushf
push
out
lret
push
add
add
add
cmp
sub
adc
pop
and
xchg
sbb
inc
add
daa
gs
shll
imul
addl
in
push
leave
dec
inc
xor
add
mov
fcomi
lret
push
push
jle
andb
cmpsb
movzwl
call
icebp
pop
xchg
and
mov
jb
loop
jmp
dec
arpl
int3
int
pop
lods
jle
test
xchg
insl
cli
jb
mov
ror
cld
std
inc
into
fisubrs
push
mov
loopne
outsl
mov
mov
fcmovb
push
jbe
add
test
rcr
aam
loopne
sbb
arpl
hlt
cli
jmp
arpl
sbb
push
push
nop
in
insb
test
lods
inc
rcr
mov
icebp
out
jg
xchg
in
shl
dec
ljmp
test
repz
jecxz
mov
mov
clc
insb
es
lds
mov
jns
ja
test
out
movsb
movsl
pop
cltd
fucomi
pushf
mov
pop
enter
stos
push
lcall
hlt
mov
loope
push
add
add
add
insb
pop
dec
xor
es
pop
ss
sahf
pushf
je
mov
add
out
sbb
mov
add
inc
lret
ja
xor
lcall
jno,pt
mov
mov
xchg
test
int3
pop
mov
mov
stos
lahf
loop
mov
adc
xlat
je
fcompl
jl
stc
push
cmp
pop
ja
jp
imulb
sub
out
cmpsl
pusha
aas
stos
lock
sti
or
mov
sbb
dec
movsl
cltd
push
stos
ret
aas
adc
add
sub
cmp
jl
mov
shrb
push
lea
dec
jnp,pt
shl
mov
out
jne
pushf
xor
imul
jmp
mov
fs
xlat
jo
nop
pop
and
pop
xchg
out
sub
aas
lret
sbbl
and
out
fwait
orl
bound
imul
lret
loopne
add
add
add
inc
mov
jmp
ja
mov
das
cwtl
lahf
pushl
fmuls
test
xchg
test
insl
lds
scas
js
fwait
enter
jne
add
mov
xchg
mov
mov
xchg
fistl
xor
div
popf
in
push
push
adc
dec
test
pop
dec
movsb
jbe
andb
ss
mul
call
stos
pop
fidivrl
mov
and
pop
leave
mov
adc
movl
and
lcall
popf
xchg
adc
xlat
jmp
insb
cltd
lds
mov
addr16
cmp
mov
dec
repz
sahf
push
and
outsb
stc
mov
or
push
fidivrl
daa
decb
jnp
sti
fiadds
add
adc
sbb
xchg
and
divl
xor
sub
js
imul
rcll
dec
sti
mov
test
xchg
pushf
jns
sub
jb
jae
fwait
cmp
stos
sarb
in
add
add
add
jmp
mov
sub
and
fidivrl
cmpb
mov
adc
cmp
divl
das
add
dec
lcall
xlat
pop
pop
cmp
add
mov
pop
xor
pop
shll
sbb
shrl
push
shll
push
cmp
mov
cmp
mov
pop
dec
xor
rcrb
xor
in
pop
cmc
fldt
sysret
mov
dec
add
adc
jmp
fiaddl
dec
jb
mov
xor
mov
shrl
mov
leave
inc
jbe
gs
push
je
fidivl
test
jge
scas
mov
push
mov
and
in
add
dec
mov
insl
fisubrl
lcall
shrl
dec
push
js
mov
dec
adc
adc
ja
xchg
int
add
add
clc
mov
and
hlt
outsl
cmpb
add
add
daa
adc
rcrb
cmp
mov
or
stos
or
inc
out
lret
ficoms
sbb
shlb
xchg
and
in
jbe
sub
pop
or
mov
mov
ss
stos
outsb
sub
xor
ret
popl
das
or
je
sub
mov
imul
ja
add
orb
jmp
addr16
lahf
adc
jbe
dec
loopne
pop
add
mov
cmc
mov
out
mov
push
mov
in
imul
fs
fidivs
je
aas
mov
xor
xchg
arpl
addr16
das
jle
xchg
lock
mov
outsb
add
lret
sub
pusha
pop
mov
lahf
lock
pop
xchg
aas
xor
insl
mov
idivl
mov
inc
pop
popf
jo
sub
push
scas
xchg
push
adc
out
mov
sbb
push
push
in
push
add
add
add
mov
adc
inc
sub
pusha
jo
hlt
jno
cli
add
or
cmc
add
in
fdivl
push
fstps
fwait
and
and
push
dec
aaa
std
adc
pop
jne
add
mov
pop
test
lahf
je
pusha
jno
adc
shrl
mov
mull
pop
jo
add
pop
and
hlt
stc
and
pop
fcmovnu
add
cli
cltd
loope
pop
aad
in
clc
fdivp
mov
push
sahf
cmp
cmpl
outsl
ja
push
outsb
sub
mov
cli
addr16
in
outsb
pop
jns
pop
mov
inc
shr
in
xchg
movsb
pop
inc
mov
push
scas
mov
push
push
cltd
xchg
ljmp
leave
and
jmp
daa
das
jne
or
shlb
lcall
and
add
add
add
mov
lds
aad
in
dec
lock
add
add
add
clc
xor
dec
mov
xchg
xlat
xor
inc
adc
pop
and
xchg
adc
cltd
mov
rorb
jmp
in
popf
stc
test
pop
cmc
mov
fadd
repnz
add
fmuls
xchg
cld
insl
pop
lret
sti
ljmp
pusha
aam
add
jle
push
sub
decb
mov
shl
push
cltd
and
mov
pop
imul
repnz
cmc
int
adc
cmp
cmp
xor
test
jge
lods
test
fistl
jne
fbld
adc
mov
push
inc
jmp
mov
xlat
pop
pop
jnp
inc
sub
cmpsb
lds
cltd
jns
aas
xlat
lret
in
dec
xchg
xchg
cmpsl
je
mov
push
mov
xchg
in
subps
test
aad
or
push
mov
insb
sub
mov
stos
popl
add
add
mov
pusha
testl
add
add
sbb
xchg
or
ja
dec
dec
adc
cltd
mov
cmp
xchg
rorb
rolb
sbb
jecxz
imul
popa
hlt
pop
les
lods
scas
repnz
jle
in
and
lods
dec
push
sbb
and
inc
dec
sbb
lret
mov
lcall
insb
mov
sub
out
hlt
push
push
ss
arpl
outsb
mov
ljmp
push
cmp
popa
mov
sar
ds
repnz
cmp
fisttpll
push
std
mov
fildl
inc
movb
lahf
cmpl
jae
jecxz
sub
push
movsb
shrl
test
mov
xchg
icebp
sti
adc
movb
or
pop
fwait
add
xchg
mov
or
out
jl
jnp
jg
test
hlt
movsb
push
adc
adc
out
xchg
push
ljmp
xor
xchg
pop
sub
adc
fsubl
mov
ja
mov
sbb
clc
pop
add
add
add
xchg
add
jge
push
push
pop
push
mov
dec
sbb
hlt
movb
jle
and
loop
addl
or
xor
mov
nop
push
sahf
scas
dec
push
sub
inc
jmp
lret
lods
cmpsb
stc
xor
push
test
aad
mov
and
mov
icebp
jmp
or
cmp
mov
enter
or
gs
and
dec
cmpsl
mov
ror
adc
and
and
push
xlat
pop
jnp
mov
ffreep
je
or
sub
aad
pushf
add
clc
shlb
ret
sbb
insl
cltd
add
push
add
aaa
push
int3
mov
lea
inc
test
add
outsb
add
dec
rclb
mov
jl
sbb
xchg
inc
enter
call
or
loop
add
pushf
push
mov
and
xchg
bound
cwtl
or
int
push
inc
icebp
xor
enter
add
xor
xlat
out
cld
fists
add
add
add
gs
mov
sbb
cmpsb
into
and
add
or
int3
mov
imul
fs
sub
mov
andb
ljmp
insl
imul
lret
adc
inc
aaa
daa
mov
daa
sbb
add
ja
mov
adc
sub
imul
jmp
loope
in
fadds
sbb
in
mov
rcl
loopne
ret
int3
imul
fcmovne
into
adc
sbb
or
sbb
fidivrl
fwait
mov
lods
add
movsl
movb
int
scas
mov
dec
and
inc
testb
insb
into
sahf
sahf
cli
loope
inc
testb
jmp
lahf
push
xchg
or
or
pusha
sub
jns
es
scas
xor
or
dec
cld
pop
inc
loope
cmp
jge
sbb
push
mov
add
add
mov
add
shlb
add
add
add
in
mov
xchg
aas
popa
push
fwait
out
int
ljmp
inc
jmp
push
scas
adc
and
loopne
imul
sub
test
shrb
push
mov
cmp
dec
pop
push
xor
mov
int3
aas
adc
sbb
out
jecxz
test
test
push
dec
inc
or
jmp
inc
cmpsb
dec
adc
insl
fstp
fs
mov
ds
loop
jmp
adc
push
adc
ja
push
inc
ret
sub
mov
jno
xlat
test
mov
lcall
cwtl
pop
adc
das
cmpsb
push
jno
lahf
test
std
js
adc
adc
js
cmpsb
jae
pop
mov
jge
cld
nop
lret
mov
dec
pop
ret
lds
and
and
roll
scas
call
add
out
into
push
push
inc
lahf
mov
add
add
add
add
xlat
sbb
imul
dec
jg
out
and
sbb
push
cmp
stos
xchg
or
fisubl
xlat
mov
dec
fnstsw
or
xor
ret
loope
mov
call
lret
mov
xchg
lods
pop
sti
cmc
sahf
scas
mov
pushf
test
cmp
jl
sub
mov
daa
or
adc
sbb
sti
sub
mov
xchg
test
fisubl
daa
imul
dec
loopne
jl
rcrb
mov
xor
into
mov
out
subl
xor
fdivrl
mov
sbb
mov
push
mov
mov
pop
ja
dec
jle
movsl
and
inc
cmp
jmp
subb
or
or
mov
stos
push
pop
push
inc
mov
int
inc
cld
cmp
jmp
mov
outsl
mov
add
add
xchg
inc
shl
xlat
mov
jg
or
or
add
add
fldcw
or
push
ljmp
dec
pop
mov
add
cmp
mov
push
ljmp
pop
mov
pusha
js
xor
mov
dec
stos
push
mov
push
stc
fstpt
incl
inc
cmpsl
inc
inc
mov
adc
jg
nop
xor
int
jecxz
mov
mov
or
jg
dec
movsl
cld
add
cltd
jbe
stos
mov
push
or
int
cmp
arpl
shrl
mov
cld
inc
and
rclb
push
out
xchg
pop
add
pop
test
fsubs
mov
xchg
inc
push
ja
outsl
sti
xchg
fwait
cmp
jae
jbe
mov
inc
dec
jecxz
add
pop
leave
mov
imul
and
in
dec
mov
stc
add
and
and
mov
rclb
sbb
fcomps
push
or
lret
popa
xchg
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
pusha
add
add
add
js
test
outsl
or
das
test
push
jns
or
shr
js
icebp
sub
push
sti
or
cmp
scas
and
arpl
mov
icebp
jmp
add
inc
push
nop
mov
pop
jl
pop
sub
ret
add
mov
or
jnp
push
xchg
hlt
iret
fsqrt
push
das
or
mov
test
repnz
push
push
pop
sbb
inc
cmp
add
lret
call
frstor
bnd
xchg
pop
add
pop
xchg
divb
dec
inc
int3
ret
pminsw
stos
add
jg
sbb
lret
mov
pop
mov
xlat
push
bound
push
mov
pop
adc
js
pop
pop
or
xor
nop
mov
test
cmp
popf
ds
cmp
xorl
test
into
push
xor
mov
mov
lea
ds
cltd
sub
test
imul
add
idiv
jg
sub
mov
adc
add
add
xchg
or
adc
jnp
mov
je
test
cmp
or
clc
stc
and
jo
xor
sti
add
repnz
iret
jmp
cmp
fst
jbe
sub
mov
sbb
adc
aad
imul
pushf
je
fidivrs
dec
iret
in
repnz
std
pop
cmpsb
mov
ret
fwait
push
aas
push
test
inc
push
adc
mov
pop
aaa
fidivs
cli
negb
jmp
icebp
push
and
xlat
stos
iret
out
sbb
lds
xor
xchg
xchg
in
mov
pop
sub
std
pop
and
pop
inc
push
xchg
inc
enter
lret
ret
or
push
xchg
jmp
outsl
mov
sub
and
movsb
pop
adc
mov
adc
sbb
and
cmp
mov
jno
scas
add
stos
inc
pop
mov
fstps
decb
add
add
out
xchg
out
cmp
enter
test
inc
pop
xchg
jno
adc
cmp
jno
xchg
neg
andl
and
insb
mov
in
sbb
pop
pushf
add
rclb
or
nop
cmp
arpl
jo
in
inc
mov
add
out
stc
adc
iret
aaa
test
aas
sub
fists
jae
addl
sub
mov
push
hlt
mov
js
inc
out
push
fadds
push
inc
pop
outsl
ss
shl
addl
or
add
mov
into
xchg
and
cmc
add
xchg
stos
ja
mov
imul
cmp
gs
cmp
pop
in
dec
push
pop
jg
lods
loopne
ficompl
or
rcll
es
xchg
add
fcompl
cmp
cmc
stc
pop
es
lcall
add
add
repnz
movsb
jle
arpl
xor
sbb
add
add
popa
sbb
sbb
or
outsl
lds
into
mov
jns
mov
inc
outsl
cs
cmp
and
xchg
or
test
cmp
adc
ss
cmpl
insl
inc
jp
mov
and
xchg
add
dec
cmp
test
lock
popa
arpl
je
js
sub
xor
inc
ret
mov
push
adc
inc
icebp
sbb
jo
push
jp
cmp
pushf
ja
cmc
and
shl
daa
insb
call
inc
add
sbb
and
mov
in
std
cmp
test
add
loopne
cmp
dec
lods
ja
xor
lods
gs
test
in
insl
xchg
inc
loop
cmpsb
pushf
sbb
xchg
lock
inc
mov
cmp
xorl
sbb
addr16
loop
xor
sti
fdivs
stos
sub
stos
out
jmp
sub
mov
outsl
sbb
add
add
add
mov
push
enter
sti
cltd
inc
lock
jle
insl
out
push
jne
sahf
repz
add
sub
idivb
inc
jno
add
test
loopne
xor
es
jmp
leave
inc
dec
inc
pusha
pop
dec
shl
sub
sbb
xor
or
xchg
repz
shr
mov
pop
loope
out
cwtl
repz
mov
fnstenv
call
ljmp
pop
jg
mov
cmpsl
ljmp
repnz
rcll
dec
inc
cmp
push
test
jo
dec
push
sub
xor
out
and
inc
inc
outsl
inc
lcall
mov
jne
fxch
mov
js
or
cmpb
push
dec
mov
mov
xor
loop
and
psrlw
xchg
mov
push
mov
iret
xor
hlt
shrl
cmp
pushf
lret
mov
sub
cmp
sbb
js
ljmp
add
add
mov
fnstenv
pop
scas
fidivs
add
add
mov
ljmp
lock
cli
ficomps
test
gs
jle
add
call
adc
shlb
mov
pop
in
loope
aaa
imul
dec
jb
loope
mov
pop
or
pop
dec
sti
roll
call
dec
sbb
repz
imul
test
sub
cmp
fistps
jno
jno
jl
test
popa
cli
and
cmc
bound
pop
movb
sbb
and
movsb
pop
cmpsb
mov
sub
or
js
fsub
pop
push
sub
sub
lcall
sbb
fistps
mov
and
lods
and
adc
inc
cmp
cmpsb
dec
adc
into
push
cltd
sub
and
add
xchg
dec
lret
xchg
sub
xor
add
push
arpl
cs
fsts
fiaddl
add
add
cld
je
jbe
jns
sbb
sub
add
add
add
sub
push
js
out
hlt
dec
daa
jns
dec
push
mov
rclb
int3
mov
inc
leave
cmp
push
shrb
dec
and
imul
jo
pop
dec
add
test
loope
xor
adc
jno
les
push
cwtl
xchg
ret
icebp
lods
sbb
mov
clc
test
mov
pop
fldcw
mov
movsl
lret
adc
mov
sahf
ljmp
jno
and
aaa
adc
lods
cmp
movsb
insl
addr16
push
scas
xor
dec
sarb
push
negb
jle
iret
shlb
in
push
push
lods
leave
adc
xor
and
sub
scas
dec
sub
or
add
xlat
test
mov
mov
mov
push
inc
xor
jae
in
mov
push
es
add
or
adc
adc
or
pop
pop
ds
out
jne
xor
out
push
pop
imul
push
cltd
jmp
fildl
or
outsl
test
add
add
insb
mov
loope
lods
ds
popa
xor
in
stos
xor
jge
scas
ss
test
jl
negb
data16
sbb
xor
ds
je
adc
imul
test
std
mov
cwtl
shll
mov
sti
mov
push
xor
stos
ss
push
mov
adc
std
rcrl
mov
lea
loope
or
rcrb
out
push
xchg
in
xchg
icebp
pop
mov
sub
cmc
add
mov
mov
dec
sub
lods
sub
sbb
test
lods
aaa
mull
imul
add
dec
mov
push
mov
jmp
std
ljmp
sbb
xchg
pop
xor
addr16
push
mov
sub
jbe
leave
or
mov
adc
cli
scas
rcl
repz
xor
adc
add
add
push
jg
dec
xchg
dec
lret
outsb
sub
add
add
add
fs
cmp
mov
xchg
jge
loop
out
pop
out
jecxz
pop
ja
mov
and
adc
cs
ss
mov
sub
repz
mov
test
mulb
dec
or
or
adc
int
lea
mov
inc
cmc
xorl
xchg
inc
push
cmpsb
pushf
mov
cmp
lea
add
into
les
dec
dec
dec
jne
cmp
add
addr16
pop
pushf
and
mov
imul
mov
repnz
inc
loopne
in
add
adc
fldenv
sub
and
outsl
mulb
xchg
scas
and
jnp
bound
fwait
mov
mov
ljmp
mov
mov
dec
lods
bound
jl
out
dec
mov
adc
scas
sbb
iret
mov
fucomip
push
insb
xor
inc
sub
xor
add
add
icebp
add
push
sub
mov
xchg
subl
lret
mov
iret
psrlq
insl
jns
and
or
mov
arpl
lods
jp
dec
sbb
push
jp
xchg
xchg
dec
imul
cmp
les
adc
adc
jnp
xor
jbe
mov
ds
lea
pop
dec
je
lea
negb
pop
rorl
cli
test
lahf
inc
xchg
mov
dec
out
jne
push
arpl
add
jg
jge
sbb
inc
je
adc
pusha
mov
and
sub
or
sbb
into
adc
sbbl
add
andb
test
js
sar
xchg
loope
pop
pop
test
dec
out
push
sahf
push
loop
dec
sub
shll
repz
repz
or
cmp
outsl
es
push
mov
mov
aad
pop
dec
push
fwait
in
fs
push
enter
mov
push
imul
dec
out
iret
jmp
aas
in
push
data16
jae
xor
add
add
add
sub
ret
cld
aas
lock
xor
pop
inc
mov
out
sbb
in
loopne
rcll
movsb
pop
pop
xchg
fdivrs
orl
push
add
mov
jl
xchg
pop
lahf
dec
outsb
dec
add
out
ret
dec
dec
sub
jo
mov
mov
pop
sbb
mov
and
push
jno
loopne
and
in
cmp
xchg
push
pop
push
mov
or
orb
add
add
into
out
cwtl
je
scas
jmp
add
jmp
es
insb
push
mov
jg
mov
push
loope
int3
mov
sub
fistpl
shll
outsb
daa
inc
push
fsubp
fmull
xchg
xchg
test
stos
jg
jno
sub
xor
mov
rcrl
jne
pushf
or
inc
fdivl
sbb
lcall
bound
loop
es
cmp
cmp
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
imul
add
add
sbb
push
xlat
dec
jge
and
clc
add
jbe
pop
dec
xchg
das
inc
sub
adc
js
insb
pop
outsl
clc
adc
lret
and
test
xchg
xor
jmp
xor
add
mov
imul
xor
mov
adc
out
cmp
xchg
inc
cmp
andl
ja
mov
movsb
pusha
push
mov
mov
pop
scas
sti
xor
cmpsl
cmp
mov
xchg
mov
rorl
push
in
cmp
dec
stos
mov
push
lods
add
and
sbbb
test
add
pop
lock
add
pop
lret
sub
outsb
test
push
cmp
lahf
jge
adc
push
scas
rcrb
and
xchg
mov
jmp
movsw
jbe
inc
lret
pop
clc
xor
ja
lret
mov
add
add
neg
std
sub
dec
sub
lahf
or
add
add
add
jl
mov
adcl
dec
inc
push
mov
jge
fnsetpm(287
ja
hlt
nop
lahf
lahf
xchg
test
ss
xchg
push
and
push
fwait
adc
xchg
imull
icebp
xor
or
push
pop
pop
das
int
adcl
lahf
aad
cmpsl
mov
mov
inc
mov
iret
xchg
ljmp
xchg
data16
ror
or
lods
push
xchg
cwtl
cmp
cmp
add
jbe
and
mov
ljmp
je
test
cmp
xchg
lock
outsb
adc
sub
xchg
loopne
repnz
mov
scas
pop
lods
fdivs
add
aas
add
pop
sub
push
push
dec
andb
setg
shl
cmc
scas
aas
cs
pop
mov
cmp
es
xor
out
cwtl
into
ljmp
cltd
das
push
shrl
ret
cltd
and
push
dec
push
subb
in
push
mov
aaa
jl
dec
inc
insl
add
add
add
mov
mov
jmp
iret
sub
jle
adc
outsb
cmc
dec
and
xchg
xor
pop
loope
xchg
stc
xor
xlat
sub
ficompl
mov
bound
lea
lock
or
cltd
adc
in
test
cld
ret
and
insb
add
inc
pop
adc
push
cwtl
or
sub
scas
mov
mov
out
push
in
cwtl
ret
xchg
mov
arpl
ss
mov
cltd
or
dec
call
inc
push
mov
ss
sbb
sbb
or
scas
or
lds
outsb
mov
mov
test
in
dec
push
sbb
inc
mov
jb
or
fiadds
sbb
mov
xchg
dec
add
stos
mov
aam
loopne
add
push
lcall
out
sbb
jo
inc
outsb
add
add
add
lret
jbe
mov
sbb
mov
arpl
jmp
sbb
ficoml
jecxz
mulb
mov
lock
mov
push
repz
inc
lods
mov
cmp
test
rorb
add
sbb
sub
jb
xor
add
xor
ret
movsb
pusha
cmpsb
mov
adc
cmp
jmp
cmpsl
clc
idivb
dec
xchg
mov
notb
adc
xchg
scas
fildll
jle
jg
cmp
notb
cmpl
mov
lret
into
popf
pop
sbb
fwait
rorb
test
mov
or
divl
ss
mov
mov
mov
xchg
pop
mov
imul
shrb
lcall
arpl
mov
out
movsb
and
addb
mov
push
sub
add
daa
sub
ja
mov
cmp
add
add
add
and
out
repz
pop
mov
add
or
ljmp
jnp
push
stos
leave
inc
sbb
shrb
jne
sbb
rorl
cwtl
and
adc
sbb
sub
test
lods
jb
mov
imull
int3
xlat
inc
fmuls
add
and
mov
in
add
mov
lret
scas
aas
out
xor
sub
lret
int3
sub
adc
mov
movsl
sti
pop
cmp
add
cmp
jbe
sub
or
in
sub
pop
ja
dec
loop
mov
mov
cli
mov
cmpsb
dec
iret
lret
jae
or
jo
dec
jns
or
push
or
and
fwait
sbb
lcall
cmp
adc
sbb
push
data16
gs
inc
cwtl
mov
adc
sbbl
neg
add
fwait
aas
cmp
add
add
cmp
jnp
outsl
cmpsb
loopne
dec
mov
add
add
xchg
incl
mov
pop
popf
mov
xchg
inc
stc
hlt
js
sbb
lret
enter
adc
mov
hlt
jmp
aas
jb
fwait
aad
cmp
ret
cli
cmp
fs
xor
mov
imul
push
mov
adc
out
dec
pop
sbb
lcall
jb
mov
mov
xchg
and
sarl
rcl
popf
xchg
adc
jnp
cmp
pop
scas
cltd
add
push
adc
out
repz
sub
std
subl
popf
xor
pop
out
lods
insl
fcmovne
xlat
or
fadd
mov
adc
cs
jg
ds
sbb
mov
pop
and
std
out
or
sbb
inc
cli
sub
int3
mov
jbe,pt
mov
sbb
test
add
pusha
js
cmpsl
xor
pushf
adc
out
iret
bound
movsl
das
call
inc
xchg
push
mov
cli
xchg
jle
push
je
cmpsb
shll
add
add
sbb
adc
pop
rclb
ja
addr16
call
pusha
call
faddl
iret
std
leave
jno
push
jl
leave
ret
lahf
pop
fs
lods
ds
push
jbe
inc
sbb
jo
stc
pop
in
adc
xchg
jp
ror
popa
inc
mov
test
inc
or
stos
push
orl
inc
pop
mov
and
sub
lret
mov
cmp
push
imul
fildll
ficoms
or
and
in
aaa
les
inc
add
xchg
pop
xchg
dec
push
dec
jle
aaa
push
jne
mov
enter
mov
add
imul
adc
inc
push
mov
xchg
mov
lods
mov
cmpl
xor
cmpsl
pop
sar
or
sbb
clc
fs
popa
dec
sub
fs
inc
mov
mov
lcall
mov
iret
and
sub
inc
aaa
dec
fwait
jnp
aad
sbb
xor
push
jb
add
add
es
iret
jbe
cmp
sbb
fcoms
test
mov
xchg
or
hlt
mov
nop
insl
xchg
aam
mov
jmp
cli
stos
fs
sbb
jp
faddp
mov
jbe
lods
or
push
insl
fdivl
addr16
xor
out
bound
dec
call
imul
adc
pusha
mov
js
rolb
sub
add
mov
mov
movsl
push
ds
iret
ds
adc
aad
stos
xor
lret
cmp
pop
sti
xor
lret
scas
jle
push
outsl
pop
lods
jb
sahf
mov
jbe
imul
iret
ds
push
jne
push
xchg
ds
lret
push
cmp
xor
call
das
pop
rcrl
sahf
adc
das
arpl
cmpb
iret
call
or
cmc
and
cmp
jns
lret
add
mov
std
mov
sub
repz
push
pop
jae
add
add
fxtract
repz
and
in
test
jno
rclb
xor
xor
ret
lods
jp
xchg
cmp
xor
jge
add
xor
mov
leave
into
bound
movswl
mov
dec
jne
mov
cmp
and
test
jbe
subb
jecxz
or
mov
cmp
nop
icebp
nop
push
stos
fcoms
das
pop
jb
push
xchg
jp
fldenv
pop
test
ret
push
jl
pop
cltd
sbb
xlat
scas
jg
iret
std
fistpll
popf
pop
mov
and
xchg
push
negl
lss
pop
mov
cwtl
add
xor
in
scas
and
jmp
mov
xchg
and
ja
lret
dec
sti
mov
gs
movsb
jb
ja
dec
cmp
pop
push
xor
add
insb
sbb
mov
lret
std
movsl
inc
gs
cli
sub
adcl
xchg
fisttps
mov
ret
je
add
add
popf
sbb
in
mov
sub
scas
aaa
sub
or
cmp
xor
xchg
jns
sar
mov
xlat
lcall
mov
mov
and
add
push
cli
sub
pop
leave
jb
pop
lea
fiadds
sbb
out
pop
lret
xor
xchg
add
icebp
and
push
jl
mov
push
and
in
shrb
test
cli
sbb
dec
xor
adc
jl
mov
push
jnp
les
mov
ret
js
js
or
imul
adc
fadd
mov
insl
inc
sarl
fistpll
xor
in
fdiv
clc
dec
xchg
sub
xchg
jecxz
stc
pop
inc
mov
and
jecxz
pop
pushf
test
push
out
nop
cwtl
push
adc
add
decb
adc
sub
sar
cmp
add
add
bound
sub
sbb
jne
add
add
lods
ljmp
fists
fcomps
fists
add
test
mov
cmp
or
xchg
sbb
pop
int
push
icebp
dec
imul
sub
in
xchg
sbb
dec
xor
cmp
lcall
jmp
je
pop
push
push
and
frstor
aaa
add
fisubrl
out
mov
inc
and
dec
clc
cs
cmpsb
out
push
lods
test
stos
ret
adc
aas
js
imul
push
outsb
js
pop
xor
stos
jl
iret
in
repz
jge
dec
mov
xchg
sbb
push
pop
outsb
jb
das
repz
or
sub
mov
loopne
repz
adc
inc
dec
inc
push
clc
lds
inc
sub
dec
or
add
fsubr
xchg
in
ja
idivl
sbb
lea
add
divl
in
sub
fs
add
add
pop
inc
addr16
jne
lret
lahf
int
lea
shrl
aas
loopne
push
xlat
pop
jp
movsl
mov
rcll
stos
adc
lock
shl
cltd
std
and
es
dec
sub
je
push
mov
jg
ret
jmp
mov
mov
adc
out
lods
pop
cltd
add
xor
jo
sub
in
icebp
mov
imul
xchg
mov
mov
loop
push
ret
add
sub
into
adc
inc
test
movsl
pop
cwtl
mov
stc
dec
sub
or
mov
pop
inc
xchg
dec
jge
mov
bound
test
pusha
jecxz
movsb
cltd
call
add
or
aas
mov
inc
dec
mov
cmpsb
xor
mov
nop
repz
inc
cmp
aaa
movsb
pusha
lahf
shll
mov
jp
push
xchg
fidivrl
lods
mov
pop
adc
add
add
fisubs
mov
mov
jo
push
add
add
bound
dec
movsb
bnd
fisubl
push
mov
add
push
and
mov
mov
dec
pop
lds
dec
and
insb
mov
lret
test
icebp
xchg
ss
rcr
cmp
shll
cmp
add
push
sar
push
mov
adc
idivl
and
ljmp
and
jl
pop
xor
adc
xchg
out
jnp
lcall
jno
mov
dec
mov
movsl
aad
pop
mov
repz
dec
loopne
sar
enter
pop
jl
jb
or
jge
xor
adc
mov
mov
or
pop
jmp
push
les
pop
jl
inc
aam
and
bound
cld
fsubrl
ds
sbb
pop
push
loope
and
aaa
inc
jbe
pusha
sub
imul
fwait
pop
scas
push
lods
push
jle
pop
mov
add
add
mov
outsl
jne
ljmp
les
add
add
bnd
inc
in
popa
mov
dec
sub
pop
sbb
sub
add
add
add
into
fdiv
fcmove
xchg
shlb
mov
pop
jle
jle
sbb
addr16
sub
push
dec
xchg
je
cmc
add
jo
sbb
dec
mov
gs
int
cmp
cmp
push
sbb
pop
jae
adc
push
sub
cltd
fidivl
xor
std
in
push
aad
repz
jmp
outsb
sbb
hlt
lods
lahf
mov
pop
push
ror
jo
aas
dec
add
imul
pop
dec
pop
leave
xchg
stos
mov
xor
mov
cmp
mov
lcall
popl
push
ja
and
ds
adc
mov
pusha
test
imul
jne
cltd
ljmp
adc
popl
pusha
cmpsl
sub
push
daa
outsb
cwtl
orb
ljmp
jl
out
scas
jl
jns
add
add
out
mov
sbb
push
lahf
ror
cld
cmp
xchg
std
cmpsb
inc
and
jge
pop
repnz
xor
mov
idiv
mov
rcll
mov
xchg
test
outsb
pop
lea
sbb
mov
out
dec
xchg
or
js
stos
je
cmp
mov
cld
orl
sub
xor
lods
xor
and
packssdw
mov
out
jecxz
pusha
mov
sub
push
int
dec
jno
mov
cmp
sahf
add
addr16
inc
shrb
jge
mov
popf
mov
jge
inc
test
ret
inc
adc
cs
cli
jbe
add
dec
orl
movsl
xor
dec
in
lock
bound
aas
insb
xchg
mov
xor
add
js
push
and
sbb
cmpps
and
arpl
push
xchg
push
mov
lds
daa
jge
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
lods
fs
add
outsl
sar
arpl
pop
std
sarl
add
scas
inc
pop
lret
xchg
or
arpl
icebp
arpl
and
mov
cmp
dec
xchg
divl
push
dec
xor
pop
pop
jae
inc
addl
das
cs
fisttps
add
push
clc
ffreep
sub
xchg
or
sbb
adc
ljmp
mov
cmpsl
cmpsl
in
inc
das
jmp
adc
fimuls
aaa
lds
cmp
cmp
or
cmp
cli
push
mov
jns
xor
xor
aas
shl
enter
xor
xchg
mov
inc
jmp
in
xor
xchg
sbb
fadds
or
sti
dec
shlb
pop
mov
xor
test
dec
cmpsb
xchg
or
pushf
in
sub
lea
in
ret
loope
inc
gs
add
pop
dec
into
inc
mov
mov
cmpsb
push
sbb
icebp
xchg
js
add
add
add
flds
jae
fisttps
jae
dec
decb
inc
pop
or
xor
pop
and
mov
xchg
int3
adc
mov
sahf
das
fnsave
aaa
pop
pop
and
or
or
jmp
decb
daa
push
inc
insb
add
in
movzwl
inc
andb
xlat
je
movsl
and
inc
cld
adc
cwtl
sar
js
pop
sahf
xchg
and
icebp
xchg
mov
mov
and
sub
in
insb
pop
lcall
jg
adc
pop
lods
lret
sbb
roll
push
pmaddwd
andl
xchg
testl
imul
add
sahf
in
pop
and
fs
jo
ss
sub
adc
mov
stos
addr16
mov
daa
push
push
aas
gs
stc
inc
pop
sub
lods
test
jae
hlt
lds
leave
pop
int3
and
fldl
jmp
movsl
xchg
xor
cli
mov
pop
push
sub
add
add
or
pop
jmp
outsb
test
ficoms
mov
adc
ljmp
pop
or
and
mov
cmp
xchg
jmp
mov
inc
dec
and
lret
xor
cli
addr16
test
cmp
jecxz
mov
lea
sub
pop
inc
int
ret
adc
enter
or
xchg
pop
pop
f2xm1
dec
pop
xlat
rcrl
lods
jmp
movsb
jg
xchg
lods
cmp
hlt
arpl
dec
pop
jo
xor
pop
data16
adc
iret
mov
cmp
ja
aam
shlb
loop
jmp
loopne
adc
mov
fistpl
popf
adc
insb
pop
xchg
jb
loop
or
repnz
push
mov
push
jl
xchg
add
fisttpl
and
test
stos
ficoms
shrb
ljmp
repz
js
push
pusha
dec
iret
data16
fiaddl
inc
push
add
std
test
lcall
jge
or
jge
add
add
es
in
mov
daa
inc
jecxz
repnz
and
mov
enter
push
iret
movsb
jbe
jle
fisttps
xor
or
mov
mov
aas
std
nop
inc
insl
inc
pop
jmp
mov
push
aas
call
xchg
cmpsl
call
lret
mov
sbb
out
adc
pop
dec
dec
andl
mov
pop
aad
test
dec
pop
movsb
jae
popa
mov
jbe
mov
xchg
push
xor
sub
xchg
imul
js
add
leave
out
cwtl
push
pusha
jecxz
xchg
and
fs
sti
repz
mov
je
mov
rcrb
push
inc
scas
stc
test
fstpt
je
sbb
std
out
out
xchg
jno
sbb
inc
movsb
sub
cs
or
notl
mov
mov
ljmp
ficoml
mov
adc
and
pop
js
inc
nop
mov
xor
lods
out
or
xchg
cmpb
mov
add
add
xchg
xchg
jns
jmp
mov
ljmp
add
das
push
mov
stos
mov
sub
or
mov
sbb
addb
xchg
mov
hlt
cmp
xorb
cmc
and
test
mov
xor
in
js
add
divb
outsb
sub
pop
jmp
lods
and
insb
out
inc
je
pop
movsl
cmpsb
mov
xchg
sub
sub
iret
adc
sub
aas
pusha
jne
mov
stos
stc
subb
cmp
xchg
mov
mov
dec
dec
jmp
sub
out
ret
lock
clc
fs
movsb
test
std
sbb
inc
pushw
popa
pop
add
leave
sub
pop
lret
loop
jno
mov
pop
xchg
add
push
jnp
jae
shlb
inc
js
imul
adc
dec
aaa
mov
inc
mov
jae
sub
push
jnp
outsl
das
shl
pop
add
ret
jns
jb
ja
jb
scas
lcall
adc
sbb
out
cmp
mov
add
add
mov
mov
lock
icebp
aaa
jbe
lret
lods
pusha
fisttpll
lds
mov
add
or
fimuls
loopne
leave
jp
arpl
aas
or
push
movsl
push
or
dec
mov
xchg
outsl
mov
scas
pop
or
jno
sub
aad
or
mov
hlt
int
cmp
addr16
and
imul
cmp
std
imul
mov
and
mov
popa
mov
or
mov
dec
por
dec
dec
notl
cld
sbb
in
xor
sub
stos
jg
popf
dec
sbb
mov
cmp
ss
nop
inc
test
mov
test
cwtl
sbb
test
inc
mov
and
sbb
popfw
sub
push
jg
jmp
mov
jle
push
gs
fwait
sbb
add
mov
idiv
jne
iret
lcall
add
add
adc
push
ljmp
cwtl
mov
lea
lods
shr
pop
paddusb
push
sbb
popf
mov
mov
jmp
and
mov
sub
shrb
mov
std
dec
stc
call
mov
icebp
pop
arpl
enter
popf
jp
icebp
xor
cmp
and
mov
cltd
lret
jmp
adc
xor
jecxz
orl
mov
ret
stos
cwtl
div
inc
stos
or
sub
jo
rclb
and
pop
jbe
mov
test
jecxz
in
or
jb
or
mov
push
mov
rcll
pop
dec
jmp
ss
jo
mov
mov
icebp
dec
scas
xor
pop
insl
pushf
adc
fsubrs
imul
fcoms
sub
leave
cwtl
mov
adc
jl
pop
xchg
icebp
cld
xchg
decb
push
jmpw
or
js
add
add
pushl
sub
push
add
add
add
add
adc
mov
mov
lods
out
mov
push
insb
dec
mov
fcompl
inc
sub
xchg
les
mov
sbb
out
dec
mov
fmuls
mov
test
cmc
push
nop
int3
or
test
and
dec
pusha
mov
sub
mov
pop
dec
cmp
ss
pop
in
jbe
xchg
cmpsb
mov
in
pop
inc
pop
mov
in
fcmovbe
sbb
or
sub
sub
push
mov
std
xorb
daa
pop
sub
jo
imul
stos
andl
sub
dec
adc
jl
addr16
fs
fstpt
lds
call
xchg
xlat
fwait
movl
addl
andl
outsb
jge
fidivs
sub
dec
adc
std
mov
mov
int3
faddl
add
add
sti
iret
ss
push
jno
mov
add
add
add
adc
mov
xchg
sbbb
xor
xor
xchg
out
mov
mov
cmp
loop
fcompl
negl
cmpsl
fstpt
adc
mov
imul
clc
cli
push
mov
out
out
jp
and
inc
testb
jae
mov
adc
and
push
sahf
stos
scas
lret
dec
inc
jns
dec
sbb
out
push
and
scas
data16
ficoms
orb
insb
clc
adc
or
aad
rclb
sub
cmp
adc
lods
fcmovu
mov
push
aaa
cmp
incb
push
nop
inc
push
and
cs
hlt
and
mov
das
mov
jmp
mov
jmp
hlt
lods
sarl
data16
dec
and
mov
cltd
mov
push
xchg
mov
sub
jb
ret
xor
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
inc
aas
sbbl
add
pop
xchg
out
cmp
push
or
push
mov
sub
shlb
adc
nop
mov
sbb
xchg
sub
fstpl
dec
or
dec
sti
add
jecxz
aad
or
repz
pop
mov
dec
pop
push
std
mov
pop
fnstcw
mov
xchg
sub
cs
subb
dec
aaa
jbe
xor
add
ror
inc
lret
test
jb
outsl
jae
roll
pop
cwtl
jle
jo
test
pop
jb
inc
xchg
xor
jne
lock
out
subb
sbb
sbb
inc
cmp
data16
cmp
out
bnd
ja
insl
into
leave
push
cmc
jl
cmp
out
hlt
lahf
jmp
bound
int3
inc
subl
cmpsl
movb
fimuls
lock
loope
xchg
imul
mov
jge
pop
or
imul
adc
push
jl
add
add
mov
mov
test
add
add
pop
jns
cs
xor
cmp
xchg
xlat
cld
cmpsb
stos
cmp
push
mov
mov
mov
adc
ret
scas
je
lahf
popf
std
or
add
pop
iret
movb
and
xor
cmp
ja
repz
and
pop
test
adc
adc
jmp
xor
mov
dec
out
dec
inc
or
out
inc
insl
mov
in
adc
in
mov
xchg
jge
xchg
stos
push
push
clc
lret
leave
cs
scas
jns
daa
xchg
lahf
fwait
imul
scas
shlb
scas
jecxz
test
pop
inc
lret
sbb
jg
push
test
sbb
shlb
mov
mov
sbb
inc
and
xor
mov
daa
push
mov
sbb
pop
cmp
mov
loop
add
add
mov
out
xchg
jo
xor
cmpsl
stc
and
out
ljmp
lock
xchg
mov
test
add
add
add
shlb
add
sub
push
test
arpl
dec
mov
cmp
inc
dec
cmp
or
and
filds
and
decb
sub
cmp
push
add
lock
inc
or
sahf
push
jle
inc
mov
imul
sub
out
pop
push
inc
stc
int3
shr
aam
sub
pusha
fisubs
arpl
push
outsl
repnz
shr
adc
adc
mov
and
push
dec
hlt
add
xchg
jno
sbb
test
jb
sub
mov
and
das
sub
mov
outsb
shlb
nop
push
pop
mov
dec
mov
addr16
or
int3
push
mov
in
cmp
hlt
mov
enter
call
add
jecxz
ss
cmc
push
mov
aam
int3
in
into
fidivrs
clc
and
add
outsb
ret
inc
pusha
mulb
jno
sbb
xor
leave
sub
lret
cmc
inc
sbb
scas
ret
lret
int3
xchg
imul
push
jnp
sbb
push
xor
cmp
add
add
inc
pop
jnp
inc
cwtl
pop
cmp
sbbb
lret
insb
and
cmp
mov
mov
in
mov
mov
mov
pop
sbb
mov
scas
es
sbb
lcall
fwait
ds
push
aas
jg
sbb
loopne
jp
sti
jge
icebp
in
mov
add
cmpsb
dec
jge
mov
cmpsb
mov
subb
or
fldenv
imul
mov
or
xlat
xor
jp
push
stc
fst
fidivrs
xchg
cltd
inc
inc
test
or
call
inc
mov
cmpsl
loop
adc
inc
jmp
icebp
pop
in
nop
movsb
loopne
mov
ds
jmp
mov
xchg
rolb
adc
mov
insb
movsl
dec
fstpl
push
test
fcomps
sbb
imul
rolb
pop
pop
in
arpl
lret
push
aas
or
mov
push
xchg
add
add
sub
cmp
or
xchg
jae
sbb
stc
mov
std
in
or
jecxz
test
stos
ljmp
jmp
jl
mov
adc
or
mov
shlb
mov
loopne
insl
cmp
dec
hlt
jl
stc
movsl
cmp
clc
mov
xchg
pusha
mov
pusha
dec
xor
xchg
sbb
ja
mov
loop
push
xor
fs
inc
dec
icebp
enter
sbb
or
int
xor
fstps
int
jle
cmp
and
pop
stos
and
cmpsb
test
mov
and
pop
mov
fiadds
popf
mov
imul
push
sub
jmp
adc
fs
and
mov
aas
xor
cmp
in
push
dec
jp
mov
mov
fstpt
outsb
dec
add
push
cwtl
and
cld
aad
repz
popa
sub
inc
sbb
in
adc
xor
divl
mov
roll
add
insb
fidivl
bound
test
add
add
push
and
out
lret
out
fstl
xor
mov
push
mov
pop
xor
jle
cltd
cmp
dec
pop
pop
and
push
sub
test
mov
loop
push
push
fwait
shr
sbb
xor
mov
xchg
pop
daa
pusha
int
mov
cmp
in
and
sbb
fcmovnb
fidivs
pushf
inc
mov
dec
cmp
mov
xor
js
bound
insb
frstor
cmp
imul
and
ja
mov
stos
add
pop
xchg
or
mov
inc
mov
mov
jne
fcom
mov
sub
or
and
sarl
in
test
xor
dec
mov
sahf
sbb
insl
mov
hlt
shll
int
add
jmp
jbe
push
push
cmp
shlb
mov
push
testb
add
cmp
mov
jns
sub
mov
add
add
add
and
pop
mov
ja
adc
fcoms
xchg
sbbb
testl
shrl
inc
out
ret
prefetch
xor
in
shrl
gs
cli
pop
hlt
xchg
mov
lcall
inc
jns
inc
xor
xor
cmc
mov
mov
pushf
or
adc
loope
mov
frstor
in
mov
mov
dec
mov
stc
in
ljmp
lea
pusha
jae
lret
cmp
fucomi
jbe
xchg
or
mov
outsl
fisubl
xor
das
icebp
ret
movsl
addr16
inc
test
lcall
adc
cwtl
les
test
daa
je
sub
dec
inc
dec
fstpt
mov
push
adc
shl
loope
or
push
mov
repz
cwtl
repz
cmp
cmp
aaa
jbe
push
movsb
or
jecxz
mov
or
add
add
int
fstp
iret
push
cmpsb
fadd
dec
fwait
cmp
add
add
add
insl
lcall
or
pop
sub
dec
ds
inc
loopne
sbb
arpl
loop
push
fwait
adc
std
shrb
ja
fsubrs
cwtl
mov
in
test
dec
inc
adc
and
and
sbbb
push
dec
lock
push
hlt
and
push
lods
adc
andb
adc
jecxz
stos
xchg
adc
xchg
xor
dec
cmc
lods
data16
lret
cmp
je
push
clc
pop
inc
sub
gs
sar
jbe
fcomps
and
cmpl
xor
addr16
fidivl
mov
jnp
jb
fdivs
jge
jno
fisubrs
mov
daa
aaa
sub
mov
dec
jl
or
repz
xchg
xchg
jle
aad
dec
xchg
pop
pop
dec
adc
adc
mov
mov
int3
add
and
test
adc
orb
arpl
lods
adc
mov
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
in
adc
int
in
gs
cmp
cmpsb
push
and
dec
ret
dec
int3
jle
rcl
das
stc
pop
movl
pop
jo
cwtl
imul
fldcw
xchg
lahf
dec
xchg
jl
inc
fisttpl
cmp
js
pop
movsl
iret
rcl
movsb
xor
test
push
subb
pop
out
xchg
loopne
in
fwait
int3
dec
jge
mov
lea
pop
push
lahf
scas
sub
addr16
xchg
cmp
clc
sbb
xor
push
lret
mov
xorb
xlat
test
mov
sbb
jne
xchg
sbb
jb
cwtl
and
shrb
inc
shrl
push
or
mov
push
mov
fisttps
sbb
xchg
popf
pop
lret
lcall
cmp
sub
rcll
adc
test
mov
mov
repz
arpl
inc
int3
lret
ds
jl
cld
pop
lods
les
jnp
mov
icebp
mov
mov
add
add
ret
lock
and
pop
cmpsb
pop
push
popf
pause
xor
ja
flds
cmp
lcall
cmp
inc
cmp
jno
lock
lea
addr16
shrb
sti
pop
mov
xor
sub
adc
mov
rcrl
cwtl
addl
sbb
arpl
xor
pusha
ja
out
mov
in
jp
ret
jp
push
gs
xchg
clc
loop
mul
dec
aaa
inc
sub
cmp
or
add
pop
xor
std
and
lcall
inc
push
jp
lcall
push
mov
mov
lret
mov
jge
pop
jmp
inc
repz
or
in
push
pop
adc
shrd
fs
mov
xchg
pop
jp
pop
and
pusha
inc
lock
dec
sub
xchg
mov
inc
or
test
fcomps
add
lea
add
add
pop
mov
xchg
sub
mov
push
shl
ljmp
shr
sbb
cmc
test
mov
xchg
cmp
pop
mov
xlat
loop
es
push
outsl
in
sti
mov
jnp
inc
pop
lods
adc
inc
xchg
xchg
sub
loop
rcr
ljmp
mov
pop
out
pop
push
xchg
xor
mov
push
nop
bound
pop
push
popa
dec
xchg
inc
cmp
dec
out
fimull
pop
sub
adc
mov
je
out
or
stos
jl
mov
sub
icebp
jg
out
loope
dec
int
mov
push
aaa
push
hlt
push
arpl
mov
repz
faddl
adc
jle
jge
stos
jne
jl
mov
pushf
pop
in
loopne
pushf
into
stos
or
loop
imul
jle
mov
ljmp
dec
mov
mov
les
add
sbb
and
aaa
movsb
std
fwait
call
or
pop
addr16
lret
cmc
pop
sbb
rol
and
pop
test
push
and
sahf
imul
loopne
imul
fldl
or
mov
sbb
push
lret
popa
pcmpeqw
adc
sahf
ds
sahf
mov
push
cli
imul
in
divb
jle
aad
stos
movsl
in
pop
daa
sahf
out
inc
cwtl
jnp
xor
sbb
test
jle
sub
add
das
cmpsl
inc
negb
aaa
jecxz
adc
ss
daa
scas
aam
sbb
adc
push
es
scas
test
and
call
std
mov
loop
sbb
inc
mov
stos
push
inc
rclb
mov
jo
sahf
aad
xchg
pop
sub
xchg
mov
sub
jmp
jl
stc
stc
repz
clc
cmp
lods
sub
iret
testl
add
add
aaa
shlb
cmc
div
testl
cmp
popl
add
add
movsb
jnp
adc
or
loop
mov
sbb
add
imul
leave
test
stos
dec
shl
subl
sub
rorb
sahf
cmp
cmc
sbb
ja
mov
push
addr16
jge
and
inc
jmp
lea
lods
mov
aaa
mov
lret
push
daa
inc
call
xor
jp
int
mov
or
mov
out
adc
pop
xchg
enter
les
dec
pop
xor
outsl
lret
add
jge
jp
shr
nop
leave
dec
int3
mov
pushf
sbb
cmpb
popa
mov
inc
mov
push
imul
es
xchg
repnz
or
sahf
mov
pop
mov
sub
hlt
xchg
dec
and
mov
dec
dec
addr16
shll
add
dec
mov
add
add
push
sahf
rcr
pop
adcb
pop
inc
dec
sbb
nop
add
add
add
push
dec
mov
mov
jle
mov
xchg
sub
jns
xchg
xchg
sub
clc
shr
pop
aad
mov
pop
cli
xchg
movsb
daa
lea
cmpsl
stos
rcrb
mov
shrb
fucomi
shl
bound
dec
adc
inc
add
ds
add
lods
testl
adc
push
pop
ret
mov
popf
inc
xchg
dec
xchg
aas
mov
or
mov
enter
roll
adc
lds
popa
add
inc
mov
ret
out
pmullw
adc
pop
in
shlb
xchg
adc
jmp
push
rorb
test
add
loopne
out
mov
or
in
xlat
or
push
out
outsb
mov
out
sbb
mov
push
andl
lahf
jb
std
mov
imul
test
lods
jae
xchg
shll
cmpsb
jcxz
fimull
rclb
add
mov
fidivrl
and
mov
inc
cmp
sbb
leave
cmp
out
jl
inc
inc
push
insl
sarb
outsl
push
cltd
lahf
es
mov
jmp
lods
push
mov
ja
lds
mov
cmpsb
test
shll
popa
rcrl
cwtl
pop
js
jns
sub
jae
lcall
les
dec
or
scas
sub
lahf
insb
xchg
insl
jnp
or
mov
in
xchg
add
addr16
inc
fnsave
or
fsubr
rolb
mov
aam
mov
pop
jb
stos
push
test
mov
inc
add
outsl
jb
addb
push
jle
xor
fsubrs
sar
mov
mov
xchg
add
mov
pop
out
scas
add
fisttps
xchg
cmp
or
test
clc
pop
aad
mov
mov
out
or
test
or
call
jo
push
clc
clc
jnp
jg
in
cli
enter
fidivl
xchg
not
xchg
add
add
add
stc
outsl
outsb
cmpsl
outsl
popa
jo
mov
sarl
xchg
cmp
popf
push
mov
pushf
adc
outsb
xchg
sub
pop
call
xchg
daa
xor
ret
fwait
mov
add
out
adc
add
pop
dec
dec
mov
sub
fwait
fwait
mov
pop
jecxz
aas
addr16
lds
sbb
adc
mov
ja
inc
mov
adc
jle
cmp
in
repz
push
jl
cmp
sbb
insb
fsubl
sbb
push
push
stc
inc
mov
adc
jbe
popa
lods
es
aas
int
xor
mov
sahf
fsub
adc
sub
subl
loop
lea
pusha
xchg
add
jo
rcr
dec
push
nop
sbb
and
or
nop
pop
mov
leave
imul
movsb
jae
inc
ja
pushl
fistpl
adc
cld
jg
lcall
cmc
rcrb
daa
xor
ljmp
cld
gs
mov
fcoms
add
andb
push
inc
adc
decl
fcompl
push
test
mov
pushf
adc
xlat
gs
cltd
clc
movsb
out
xchg
xchg
cmp
xor
add
std
loopne
dec
insb
lcall
aad
mov
xor
in
jmp
jl
ret
cmp
nop
dec
scas
or
imul
push
in
mov
ret
leave
push
in
xchg
jae
imul
sub
and
fwait
xchg
cmc
jnp
pushf
mov
inc
mov
push
xor
loope
and
sub
pushf
sti
pop
aad
cmp
push
mov
fstpt
dec
pushl
pushf
fnsave
bound
jno
das
cmpsl
rolb
push
mov
out
jg
dec
sub
je
iret
mov
push
jns
and
out
mov
or
mov
sub
hlt
sahf
pop
push
mov
cltd
inc
jae
std
pop
inc
inc
jl
jl
sar
std
jle
pop
popf
scas
sub
fwait
inc
fcoml
add
cmpsb
dec
lret
pop
jmp
cmp
popa
adc
out
and
iret
dec
adc
dec
jecxz
in
inc
test
fsubs
inc
sbb
sahf
mov
and
mov
mov
or
cld
into
out
rorl
out
mov
jo
adc
fisttps
sub
sbb
jg
jnp
int
xor
shrl
cmp
call
cmc
xorl
sarb
push
fistpl
mov
jl
sbb
mov
daa
mov
das
popf
andl
dec
inc
cwtl
push
dec
xchg
or
fdivr
loopne
mov
xchg
js
inc
bound
mov
aad
mov
mov
icebp
xchg
mov
pop
sbb
or
xchg
dec
icebp
mov
push
xor
pop
or
jo
arpl
add
mov
add
cwtl
or
stos
xchg
cmp
in
clc
mov
loopne
add
add
add
sub
je
push
nop
cld
inc
scas
bound
or
mov
fcomps
xor
js
push
jg
mov
rol
pop
shll
pop
push
ds
out
shll
xchg
lea
sarb
fsubrs
rorb
jle
imul
mov
movsl
xchg
xchg
mov
dec
adcb
mov
sub
add
jg
or
ret
and
aaa
test
lds
jp
sub
jns
jns
iret
cmp
subl
jle
jbe
or
cltd
call
or
jbe
lret
sbb
add
mov
in
cmpsb
pop
push
pop
cld
lea
cli
add
ljmp
in
dec
mov
xchg
mov
mull
dec
sbb
inc
jb
inc
or
or
ljmp
add
outsl
sti
mov
mov
sub
mov
in
add
add
add
mov
push
loopne
lods
inc
mov
ds
rorb
mov
push
lock
movb
pop
enter
add
inc
sbb
leave
pop
lcall
inc
sbb
andl
jecxz
xchg
rcrl
sbb
in
dec
inc
cmc
push
aad
sbb
cwtl
divb
pushf
jp
pop
es
das
inc
arpl
sbb
xor
loopne
push
mov
add
xor
test
fmull
out
add
mov
push
stc
dec
dec
adc
mov
test
das
fisubrs
rorl
ret
or
cltd
mov
adc
push
sbb
out
iret
stc
add
lret
outsl
mov
out
leave
mov
sbb
adc
jno
rcll
sub
adc
jae
repz
imul
call
inc
and
add
push
and
xlat
aas
dec
sbb
or
call
add
add
repnz
jl
cmpsl
pop
jmp
les
pop
push
jge
pop
repz
jno
pop
mov
xor
xor
dec
sarl
xor
adc
pop
pop
shrl
imul
mov
lahf
or
and
aad
movsl
and
sbb
jne
or
jmp
push
cmp
mov
imul
jmp
fcompl
stc
jb
cwtl
or
mov
mov
call
cltd
test
shrl
loope
out
pop
shl
mull
imul
mov
shrl
or
inc
out
xchg
mov
in
aas
sahf
adc
xchg
xor
dec
adc
les
or
and
fcmovnu
daa
sub
addr16
push
mov
jp
lods
xchg
or
cwtl
xchg
imul
outsl
vmwrite
adc
cwtl
add
add
add
dec
jns
int
sahf
adc
mov
jns
daa
xor
jnp
cmpsl
sub
adc
push
xlat
pop
dec
lea
pop
xor
nop
shlb
pusha
inc
cmc
aas
pop
adc
mov
movb
adc
test
incb
pop
mov
movsb
push
stos
inc
enter
xor
lret
popf
sar
cmc
mov
pop
pop
call
bound
xor
in
mov
push
dec
mov
fstps
fiadds
mov
xchg
sarl
sahf
xor
movsl
or
sbb
cmpsb
xchg
sub
mov
add
push
test
pop
les
push
ret
stos
jb
jg
test
div
mov
add
dec
sub
mov
sarl
jge
data16
pop
xor
out
cmp
aas
push
in
pop
insb
imul
dec
int
adc
sbbl
popl
mov
lock
add
add
add
xchg
mov
cmp
je
add
arpl
mov
sbb
xchg
cmp
jge
push
jp
push
jle
mov
or
shl
push
xor
push
xor
or
and
in
fwait
add
pop
and
ficompl
add
movsb
or
daa
je
ret
sbb
jge
enter
jne
cmp
gs
arpl
ljmp
adc
sbb
aam
mov
jle
mov
inc
mov
jno
mov
mov
xchg
xchg
jmp
mov
test
aas
inc
dec
mov
lahf
inc
ja
adc
pop
je
or
roll
roll
jb
lds
imul
dec
jne
xor
test
jno
sti
and
int3
sbb
idivl
shll
add
add
imul
movsb
and
repz
pop
hlt
lcall
or
or
clflush
pop
sahf
pop
inc
lret
sbb
mov
xchg
in
xor
ret
je
and
test
mov
jecxz
and
fcoms
dec
jl
jle
sbb
cld
std
xchg
leave
and
mov
push
lock
ljmp
sbb
inc
push
jb
xchg
adc
movsl
and
lods
push
lahf
js
fimuls
popf
fadd
fistpll
push
jl
lods
orb
es
ss
dec
cmp
call
xchg
nop
jl
cmp
cmpsb
test
sbb
jno
mov
xor
outsb
je
push
mov
aam
sub
push
sahf
cwtl
imul
leave
and
xchg
mov
rcrb
jnp
cmp
mov
je
sub
dec
mov
and
sub
aas
fs
lods
mov
lret
push
mov
std
push
dec
inc
sahf
std
lock
cmp
mov
jge
jg
ljmp
in
lahf
mov
or
or
fwait
add
add
add
mov
int
and
mulb
push
lods
mov
mov
push
pop
ss
push
jns
inc
insl
xchg
jmp
repnz
xor
mov
fidivs
xor
mov
adc
lds
into
mov
sbb
xchg
inc
cmpsl
lea
pop
xor
sbb
push
rolb
rcrl
cwtl
adc
jg
sub
loopne
sbb
pop
xchg
sub
and
sub
jl
inc
xchg
lcall
movsl
pop
scas
repnz
xchg
jo
hlt
dec
negl
xchg
xchg
imul
lods
test
lods
xor
loop
xchg
pop
fadd
fnstenv
push
cmp
repz
adc
sbb
push
les
scas
lds
hlt
repz
push
into
adc
jne
fstps
xchg
bound
fwait
aam
cld
jmp
outsl
outsb
out
int
pop
cltd
sub
out
inc
sub
or
or
cld
pushf
add
add
add
pop
lcall
cli
test
xchg
hlt
jp
jmp
nop
cltd
push
lds
stos
je
mov
mov
dec
lock
add
insl
dec
dec
inc
movsb
ds
pop
sbbb
incb
push
push
inc
xchg
adc
jno
lds
mov
sub
add
lret
pop
rcrb
mov
repz
scas
rclb
in
hlt
cmp
mov
push
cmp
pop
out
int3
adc
jnp
jo
jno,pt
test
daa
mov
test
cltd
and
fstpt
popa
jg
mov
pop
lea
test
jb
xchg
mov
pop
es
push
mov
dec
rcll
mov
outsl
in
test
testb
movsb
shll
sbb
fists
outsb
add
fidivs
aam
leave
inc
filds
pop
mov
lods
incb
mov
insl
jmp
stc
pcmpgtd
add
pusha
test
mov
cld
mov
add
add
or
push
push
ret
pop
mov
mov
pop
cmp
std
aad
inc
cwtl
movsb
sub
inc
ds
fsubrl
stc
mov
pmulhuw
fisubrl
push
push
mov
mov
js
sarl
xchg
test
or
xor
je
sub
or
stc
xchg
addb
jmp
sbbl
inc
arpl
jecxz
cmp
inc
push
mov
inc
cmpsb
repnz
jae
lea
mov
call
and
lcall
inc
lods
ror
repnz
pop
push
dec
mov
jle
mov
push
pop
insb
fdivs
imulb
add
in
pop
xor
in
sar
push
pop
popa
ds
in
mov
or
fmulp
mov
and
jo
negb
ss
mov
loope
inc
std
adc
mov
inc
pop
gs
adc
or
lcall
aas
lods
je
lahf
add
add
add
lods
xor
push
xor
nop
mov
jns
mov
sahf
add
lock
popa
mov
aam
nop
pusha
jb
mov
js
sbb
ljmp
mov
leave
cmp
sbb
pop
stos
call
jge
lods
rcl
xchg
test
cmpsl
cmp
sbbl
insl
ret
shr
sub
bnd
dec
mov
lods
pop
cmp
jmp
fsubs
mov
mov
pushf
inc
dec
sub
xchg
popf
divl
movsl
outsl
sti
loopne
orb
je
fcompl
xchg
push
jb
sbb
hlt
sub
mov
fildl
int3
pop
lcall
in
in
add
mov
divl
scas
jo
int
sti
push
xchg
mov
imul
or
mov
int3
pop
lock
mov
loop
xchg
stos
movsb
mov
mov
inc
inc
add
mov
add
jo
sub
in
fdivrl
das
xchg
dec
fbstp
sbb
rcr
jge
stos
sbb
sar
bound
fstpt
hlt
xchg
insb
data16
pop
xor
outsl
sbb
ret
xchg
div
mov
outsb
push
es
push
pop
rcr
fstpl
cmp
inc
iret
dec
jo
fistps
imul
pop
shlb
lret
pop
push
pop
sbb
insl
inc
jno
sbb
sbb
inc
or
lock
inc
jmp
loope
pop
xchg
ss
enter
lds
dec
jg
stos
popa
pop
cmpsb
bound
jb
cli
cltd
push
test
ret
xchg
push
mov
xchg
cltd
inc
inc
add
popa
pop
repnz
cmp
and
sub
fstpt
xchg
mov
iret
sub
in
test
lcall
fdivl
mov
rorb
xchg
pop
mov
fistpl
std
lret
inc
add
mov
bound
or
sbb
inc
mov
xchg
mov
add
add
push
mov
inc
leave
inc
or
aam
int3
out
mov
out
outsb
sarl
dec
dec
cmp
int
inc
lea
cwtl
cmp
aaa
sub
aad
xchg
inc
in
enter
lahf
or
test
mov
pop
xor
int
addr16
je
sbb
mov
sti
jg
inc
xchg
sub
xchg
imul
jns
fldt
aaa
arpl
mov
sahf
icebp
movsb
mov
sbb
xchg
in
data16
int
jmp
mov
push
inc
mov
pushf
xchg
inc
inc
cld
fstpl
iret
stos
and
data16
xor
in
imulb
mov
sarb
cmp
dec
cltd
cmp
ljmp
js
or
fs
sub
dec
sahf
mov
xchg
push
sbbb
add
xchg
push
inc
scas
cmp
add
add
inc
fdivl
push
dec
mov
adc
add
mov
jmp
call
jp
sub
or
and
dec
jecxz
mov
out
xchg
jmp
outsl
popa
fadd
clc
ljmp
pop
aad
sub
cwtl
sarb
es
pop
insl
lock
xchg
pop
std
out
fmull
xchg
sbb
dec
incl
repnz
xor
dec
roll
adcl
mov
add
add
cmp
mov
mov
mov
cmp
movsl
movsb
int3
iret
jl
xchg
movsb
add
arpl
jb
mov
push
mov
sub
lahf
std
and
cmpb
call
push
jecxz
movntq
pop
or
push
pusha
stc
in
sti
sub
in
sbb
xchg
push
nop
int
iret
int
add
inc
js
shrb
fidivs
push
and
add
sti
pop
adc
mov
sbb
mov
add
mov
pop
hlt
lods
pop
mov
xchg
or
cltd
test
xlat
int3
adc
dec
xor
jae
mov
xchg
mov
lret
xor
sbb
ficoms
movsb
in
out
das
aam
mov
ss
in
jmp
sti
imul
cs
lahf
adc
xchg
loop
mov
push
lcall
jmp
mov
push
aaa
test
je
jb
vcvtss2sd
repz
jg
sbb
push
stos
sub
in
in
das
std
inc
es
sbb
pop
cbtw
int
jbe
xchg
test
bound
fidivrs
sub
push
stos
cmp
movsb
adc
out
out
loope
jp
pusha
addl
pop
push
push
dec
adc
clc
push
pop
loopne
addb
testb
insb
push
jne
loope
fidivl
cmpsl
aam
push
add
aad
jp
out
pop
test
stos
hlt
jmp
cmp
jbe
lods
fstl
push
sbb
add
inc
pop
insb
clc
jne
out
and
outsl
push
testl
adc
mov
or
and
mov
cli
fwait
push
lock
and
xor
and
sahf
shrl
cmp
fcomp
mov
rclb
xor
mov
fldenv
lret
xchg
push
inc
dec
dec
aas
xchg
cmpsl
aas
push
in
adc
fs
xchg
push
pop
push
mov
pop
insl
xchg
mov
sti
mov
scas
sub
bnd
imul
popa
das
sub
mov
stos
sbb
aas
insb
push
loopne
mov
pop
ss
out
cwtl
jno
imul
xchg
mov
ret
daa
lods
setge
mov
mov
in
jp
test
push
daa
or
dec
mov
das
sub
shrb
mov
sub
and
push
xlat
jae
inc
aaa
ds
es
aas
dec
ret
xchg
decl
outsb
insb
add
out
xlat
out
jg
in
xor
fstps
xchg
scas
sbb
add
add
add
push
arpl
add
call
xor
daa
cmpsl
xor
xor
sub
jp
mov
xorb
out
pop
fwait
cli
dec
or
lret
xor
cs
in
outsl
adc
xchg
iret
fdiv
xchg
stc
cmpsb
mov
mov
adc
jb
aas
or
jns
dec
pop
add
filds
xor
cmp
sahf
subb
ljmp
pushf
pop
lods
bnd
insb
insb
mov
jae
in
mov
push
ds
fiadds
out
sub
aad
scas
aam
jno
or
mov
or
ss
push
mov
mov
scas
into
and
insb
mov
test
mov
iret
push
inc
mov
inc
pop
sbb
cmp
mov
es
xor
outsl
xchg
sbb
pop
fbstp
fldl2e
or
ret
mov
add
add
loope
cmp
xchg
loope
sar
and
rcrb
lcall
sbb
iret
mulb
adc
insl
int3
xchg
xor
sarb
sti
ljmp
push
cmpsl
mov
push
cmpsb
jmp
jmp
mov
movsb
push
pusha
cmp
in
clc
cli
scas
fdivr
mov
add
mov
outsb
and
fdivl
cmpsb
jp
push
stos
push
sub
or
bound
movsb
mov
mov
leave
cs
cmp
add
jns
aaa
push
mov
call
subb
iret
sub
adc
inc
add
inc
and
xchg
jb
cmp
ret
and
mov
stc
or
shlb
scas
sbb
mov
and
js
dec
dec
nop
jns
sub
int
sub
test
inc
fwait
or
std
punpckldq
mov
repnz
testl
add
add
mov
fadds
and
add
add
add
sbb
sbb
int3
mov
dec
aad
adc
pop
xchg
pop
sbb
adc
push
fldl
mov
or
imul
jne
mov
pop
addr16
xchg
lret
add
daa
ljmp
xchg
mov
loopne
push
inc
sbb
adc
xchg
out
scas
add
jle
and
pop
lds
sub
or
sbb
pop
xchg
and
cmp
aas
or
and
int
mov
bound
mov
push
rolb
ja
jbe
mov
out
xchg
fadds
loope
dec
dec
ja
dec
mov
cmpsl
je
decb
dec
add
ret
popf
loope
lret
jo
mov
int3
pop
int
jg
pop
cmp
sbb
shrb
and
xor
mov
add
mov
scas
sub
lock
movsb
lret
jnp
sti
jmp
push
mov
mulb
test
add
add
pop
and
add
add
cmp
mov
ret
mov
out
pushf
and
adc
push
push
pop
shlb
dec
inc
cwtl
mov
add
fnstenv
push
push
loope
sub
cmp
je
adc
pop
sahf
lcall
mov
cmp
jp
scas
cmc
insl
decb
mov
stos
sahf
les
xor
push
adc
xchg
cltd
leave
push
pop
sti
mov
icebp
and
cmp
outsb
pushf
repz
mov
push
add
scas
jg
xchg
hlt
push
scas
test
fbstp
ds
mov
or
or
aam
jnp
push
in
mov
outsl
mov
loopne
scas
and
add
enter
shr
pop
or
mov
mov
idivl
xchg
sub
dec
sbb
xor
dec
or
mov
add
mov
jecxz
lock
rcrl
test
add
in
mov
ds
stc
test
cmp
jno
call
repz
fwait
cmc
push
xchg
adc
les
mov
and
sub
xor
pop
testb
lea
out
pushf
fs
mov
test
bound
or
jmp
add
pop
mov
fistps
shl
lods
mov
jl
scas
lods
adc
call
out
lret
inc
daa
mov
and
xchg
sub
iret
in
jecxz
sub
js
into
inc
cmp
test
fstpl
cmp
loopne
mov
inc
cmpsl
ljmp
sub
jb
mov
lea
mov
mov
orb
mov
pop
add
mov
cmp
mov
lret
fucom
xor
xchg
movsl
pop
rorb
lock
and
lds
add
mov
cld
mov
leave
xchg
cmc
xchg
xor
stos
add
add
add
pop
pop
stc
dec
movsb
mov
sbb
xor
fistpl
jle
sub
leave
pop
repz
push
mov
nop
and
lret
cmp
scas
insl
mov
lret
jno
inc
fchs
fsin
scas
sti
mov
sar
negb
mov
pop
ljmp
cmp
adc
enter
ret
and
and
mov
in
xchg
in
xchg
jp
mov
pushf
mov
inc
loop
and
sub
hlt
xchg
xor
aaa
daa
sbb
sub
cmp
sub
imul
inc
cmp
sarb
adc
sbb
andb
add
ljmp
pop
das
jge
insb
addr16
in
mov
call
adc
aaa
in
jge
adc
aas
repnz
insb
mov
fdiv
and
pop
js
cmc
mov
dec
das
pop
out
cmc
mov
fistl
add
add
dec
outsb
jae
adc
mov
add
or
xlat
scas
out
pop
xlat
adc
das
and
jb
dec
fsts
mov
jg
jb
and
mov
mov
sub
lock
ret
jno
xlat
jle
js
and
fs
jno
cmpsb
jnp
push
test
xor
arpl
sub
andb
decl
outsb
sub
int
aas
xor
outsl
xchg
mov
bound
in
mov
cmp
das
lcall
mov
mov
mov
es
gs
mov
sub
xor
fwait
and
sub
sub
sbb
lock
or
popa
cmpsl
mov
jae
sti
mov
xlat
push
adc
and
pop
shl
or
int3
jae
jg
ret
xchg
cs
sbb
aas
fucomip
std
dec
std
pop
lcall
xchg
pop
push
mov
lods
add
add
add
jge
sbb
sub
sub
cmpb
cs
int
out
dec
add
gs
xor
mov
out
push
inc
jbe
ss
xlat
jo
imul
cmp
ficompl
add
mov
jge
rorl
dec
sbb
aas
mov
andb
je
negb
pop
out
addr16
lret
lcall
xchg
push
aad
adc
pop
fmuls
inc
cmp
sbb
clc
mov
cli
enter
lea
inc
sub
cmpsl
ret
repnz
xchg
add
adc
lea
fwait
jg
js
xlat
inc
dec
xor
orb
mov
pop
xor
or
xchg
faddl
sbb
jge
ljmp
dec
xchg
adc
sti
xor
out
push
and
mov
adc
xchg
and
add
add
fidivs
loop
ljmp
xor
sarb
add
inc
insl
leave
jmp
sbb
lret
push
or
cld
mov
add
in
lea
test
addr16
ja
add
add
rolw
add
js
negb
leave
inc
add
or
push
and
cs
mov
sbb
pop
stc
mov
push
xchg
js
lret
into
sbb
in
mov
mov
mov
sbb
cmp
cltd
inc
pop
add
enter
in
notb
andb
push
testb
adc
outsl
test
jmp
call
sbb
lret
cmc
xor
xchg
jmp
jl
xchg
cmp
fnstsw
out
pop
cmp
and
fcoml
push
cmp
and
pop
pop
or
pop
fisubrl
mov
ss
imul
iret
data16
ja
jne
mov
sbb
xorl
pop
mov
sbbb
out
or
cmp
add
xchg
jg
jmp
std
mov
mov
pushf
inc
scas
add
add
add
mov
add
inc
mov
jg
dec
inc
mov
repnz
sub
ja
adc
and
sub
pop
pop
dec
xor
shll
cmp
aad
jbe
subl
add
adc
mov
fldenv
xchg
and
lods
lahf
jb
iret
sbb
rcr
fnstsw
cld
popf
rorl
mov
jge
mov
das
cmpl
fdivr
adcb
xor
cli
adc
push
pushf
cmp
icebp
rorb
scas
mov
mov
nop
gs
test
mov
jle
stos
in
adc
xchg
ljmp
ds
je
out
mov
push
outsl
push
int
mov
je
stc
mov
xchg
iret
aad
and
pop
sub
in
mov
cmpsb
fwait
cmp
add
mov
jb
repz
lds
mov
out
in
jp
xor
adc
add
add
xor
inc
mov
int
inc
scas
add
add
add
sti
xchg
lock
icebp
imul
add
jecxz
push
aaa
test
lock
sub
mov
push
out
sti
clc
cmpsl
das
jnp
push
cmpsl
or
cltd
pop
sub
mov
arpl
xchg
cld
lret
cs
dec
loope
and
and
inc
movsl
sub
in
push
pop
stos
xor
sti
xchg
push
call
fstpl
jp
test
mov
or
icebp
dec
dec
or
fmulp
inc
enter
in
mov
push
mov
dec
lock
iret
mov
mov
xchg
xchg
clc
rcr
xchg
scas
mov
js
mov
cmp
or
sub
iret
jne
fstl
scas
sbb
fstl
xor
lock
lret
jl
sbb
mov
fs
cmp
sub
mov
jge
cmpsl
push
int
push
xchg
cmp
js
popa
icebp
cld
jmp
in
push
jae
xor
add
push
pop
xor
cmp
inc
call
push
dec
mov
add
add
addr16
push
out
unpckhps
lods
adc
in
cmp
mov
and
sub
lds
lcall
dec
push
stos
push
mov
fstpt
shll
mov
mov
aam
jl
sbb
jecxz
push
mov
and
add
add
fsts
in
scas
clc
ffree
stos
or
std
dec
movsl
out
mov
loope
sub
mov
jle
out
test
nop
dec
iret
hlt
sub
mov
and
fisubrl
and
and
sub
mov
popf
xor
and
push
rcr
dec
push
outsb
loop
adc
loop
icebp
pushf
lret
mov
mov
cmpsl
leave
enter
mov
jmp
outsl
cs
jb
mov
fwait
pop
pop
cmp
int3
xor
fidivrl
jne
mov
jns
pop
dec
iret
and
outsl
stc
fucomip
outsb
fwait
xor
repnz
mov
lea
add
add
jp
les
mov
arpl
add
add
add
pop
lock
push
iret
sbb
jnp
cmp
xchg
fs
rcl
push
out
out
ficompl
sub
popf
push
push
imul
mov
push
adc
dec
sarl
ja
cmp
ret
nop
loope
fdivl
movsb
incl
jno
fucomp
fs
jbe
bound
test
push
adc
sbb
inc
nop
in
flds
and
add
cmp
stos
movsb
dec
fstl
in
pop
arpl
testl
jo
loopne
mov
sub
lds
sti
xchg
add
in
pop
loope
imul
push
jecxz
negb
pop
imul
popf
or
ds
int
cmp
movsl
mov
ret
call
jg
inc
ds
jno
dec
out
dec
lret
fdivrs
sbb
mov
cmp
outsl
inc
inc
mov
mov
push
push
pop
and
fisttps
sub
add
clc
pop
stc
out
push
pop
bound
loop
mov
add
add
fiaddl
nop
mov
in
leave
insl
and
scas
or
pop
xchg
xchg
imul
dec
pop
loopne
mov
and
mov
cli
cld
pop
mov
vpperm
adc
or
dec
aas
lods
push
mov
push
pop
cltd
pushf
lcall
pop
lods
lret
sbb
repz
and
stos
sub
push
sbb
lret
pop
in
sahf
push
std
mov
dec
mov
mov
cli
adc
cwtl
add
pushl
push
pop
lahf
xor
aaa
push
popf
cmpsl
insb
xchg
cwtl
jle
cwtl
cmp
push
mov
repnz
stos
test
sbb
cmpsl
push
lcall
in
jp
testl
jbe
mov
fld1
and
and
ds
push
fs
test
push
scas
das
out
imul
fwait
repnz
arpl
sbb
fst
ss
mov
inc
inc
xchg
sahf
cmp
daa
jge
lds
cli
lcall
push
push
mov
add
add
test
pop
mov
inc
mov
rcrb
jno
fidivl
movsl
gs
std
andl
sub
dec
ljmp
push
jns
bsf
adc
and
into
rorl
test
mov
sub
lods
fcomps
or
cmc
and
test
arpl
or
push
push
xlat
xor
fists
jo
fidivrl
outsl
cmpsl
aad
xor
pop
fcmovnbe
and
xchg
mov
movsl
xchg
cmpl
fildll
es
std
fldl
bound
cmpsl
mov
xlat
cs
fcoml
popf
inc
outsb
cmp
xchg
jb
and
push
mov
xchg
mov
cmp
shll
rclb
cwtl
test
jmp
sub
loop
push
movsl
lods
xor
fstp
int3
insb
les
inc
xchg
add
add
jne
mov
int3
insb
lret
xchg
loop
mov
add
add
mov
imul
sahf
test
daa
and
das
xorb
scas
add
lea
ror
in
add
add
inc
xlat
test
push
or
stos
pop
ret
lds
out
or
pop
movl
sbb
imulb
push
aas
mov
dec
int3
pop
push
shll
sti
fs
cmc
test
jmp
in
data16
cmp
cmp
cltd
ljmp
pop
xchg
cwtl
lahf
stos
dec
icebp
pop
mov
inc
aad
pop
scas
xchg
or
pop
mov
cld
pusha
rcr
sti
push
sbb
pop
stc
xor
aad
jl
outsb
inc
insb
cmp
hlt
and
or
jae
sahf
mov
mov
xor
jae
imul
jmp
jne
jle
pusha
aaa
xchg
rorb
mov
cmpsb
in
pop
pop
stc
sbb
mov
bound
add
add
pop
sbbl
fstp
rorl
pop
cltd
test
add
add
repnz
xchg
jne
fwait
or
imul
inc
add
or
sub
or
sub
pop
icebp
insl
xor
mov
clc
xor
adc
cmpl
cmp
gs
dec
cmpsl
neg
jo
pop
mov
movl
lret
ss
scas
push
adc
mov
sub
loope
imulb
lods
push
cmp
imull
mov
mov
icebp
pop
testl
adc
fistpll
mov
hlt
jmp
ss
and
lahf
dec
fdiv
jb
push
push
fadds
sub
enter
pusha
fldl
lcall
adc
cwtl
and
pop
movsl
mov
ret
sbb
in
ja
mov
push
adc
mov
pop
stos
nop
les
push
cwtl
cli
xchg
jmp
sbb
inc
movsb
push
sub
cmp
push
loop
loope
mov
jecxz
out
mov
test
add
add
stc
adc
imul
les
fldln2
fs
pop
mov
ret
insb
fs
add
aad
sub
mov
popf
nop
mov
fnstenv
sbb
adc
jne
cli
mov
lahf
nop
fstpt
out
pop
or
mov
jne
mov
inc
sbb
test
shl
mov
sahf
pop
sbb
adc
jmp
call
ss
pop
xchg
leave
jle
test
lahf
dec
mov
out
in
add
lea
inc
sbb
or
push
cmp
dec
call
inc
jno
dec
aas
dec
and
fists
adc
fldt
jge
repz
push
movsb
stos
rorb
and
daa
xchg
jecxz
scas
jb
mov
jecxz
inc
out
enter
jmp
pop
loope
push
push
dec
pop
and
jg
and
leave
inc
mov
sub
pop
pop
ficoml
jl
jge
push
xchg
test
jg
into
lret
orl
add
add
movsb
sbb
pushl
jno
or
xor
mov
ljmp
test
dec
rcrl
test
out
add
inc
fxch
inc
loop,pt
cmpsb
out
ss
sub
addr16
dec
sbb
pop
outsb
ret
dec
out
lds
mov
xchg
and
iret
pop
adc
xchg
clc
pop
ret
ret
jmp
int
lret
ficompl
sub
jmp
insl
push
scas
lcall
ficoms
mov
adc
movsb
pop
arpl
mov
cmp
dec
movsb
lret
fidivrs
das
es
dec
sti
fsubs
add
aas
das
adc
call
test
push
xchg
sbb
je
push
ret
push
add
jp
mov
mov
push
sbb
mov
mov
mov
lock
in
lcall
jae
dec
mov
push
lret
clc
push
add
add
mov
in
cmp
mov
jbe
mov
dec
xchg
sub
pop
adc
jns
mov
pop
cmp
clc
stc
sahf
add
inc
jae
insb
pop
mov
aas
sbb
arpl
iret
or
imul
xchg
rcrl
push
xlat
xor
ds
shlb
mov
rcll
cs
sbb
nop
jp
push
in
in
in
jnp
loopne
js
lret
xchg
dec
xor
daa
roll
cltd
imul
or
jle
stos
out
outsb
movsl
inc
sub
jb
push
lahf
sti
and
shlb
mov
jmp
out
gs
enter
xor
fbstp
xor
push
clc
sbb
mov
jmp
aam
mov
jg
sti
add
movsb
push
arpl
aam
inc
xlat
adc
xlat
aas
dec
jbe
test
add
sub
jg,pt
dec
arpl
mov
add
and
or
push
add
rclb
push
xor
mov
dec
mov
scas
sub
mov
pop
lret
cli
out
loope
clc
push
mov
cwtl
cmp
scas
cmp
stc
sbb
das
pop
and
sbb
sub
lea
sub
jmp
dec
cs
or
and
bsf
dec
sarl
in
mulb
and
scas
or
test
popa
or
loope
loop
repnz
leave
mov
int
inc
enter
inc
jae
movsl
or
test
leave
jo
je
shll
mov
mov
mov
test
push
dec
int3
mov
push
adc
add
jae
cmp
fnstenv
push
pop
jle
mov
das
sub
fsubr
dec
iretw
stos
fidivrs
rcrl
in
add
add
out
idiv
outsl
mov
xor
loopne
jo
add
add
add
cmp
jne
arpl
daa
shll
xchg
adc
mov
fnstenv
xchg
loop
inc
data16
test
push
mov
stos
mov
push
mov
sub
mov
pop
jge
bndstx
in
pushf
stc
adc
sbb
dec
in
sbb
mov
add
push
pop
cmp
hlt
ljmp
xchg
adc
mov
jnp
push
cmc
xchg
pop
sahf
nop
in
xor
push
jmp
dec
dec
test
call
pop
push
or
popf
cmpsl
mov
pushf
clc
stc
mov
das
pushf
xchg
add
movsl
sbb
pop
rolb
pop
rorl
notl
mov
ret
leave
jo
dec
arpl
push
daa
adc
dec
push
sti
hlt
scas
rcrl
or
add
jg
xchg
mov
cmp
mov
sti
inc
dec
stos
lcall
add
inc
fbld
mov
pop
lds
add
add
add
push
push
cmpsb
sbb
mov
jb
cmp
xchg
cmpsl
mov
cmp
pop
push
rcrl
xchg
cmpsl
ficoms
daa
xorb
movsl
loopne
push
push
push
gs
dec
add
mov
push
adc
sub
ret
int3
mov
pop
xor
xchg
adc
add
negb
negl
lods
cmp
push
mov
pop
sbb
scas
sub
jne
mov
scas
add
rcrb
adc
mov
fdivs
dec
cmp
cltd
sub
shll
cmc
icebp
shrl
adc
js
jge
lods
xchg
jg
add
aam
out
jge
stc
repz
or
test
adc
lret
or
bound
push
cmp
jne
xchg
insl
test
out
shlb
mov
add
push
push
call
loope
push
pop
js
add
add
add
jl
mov
mov
xchg
dec
out
jne
push
xor
or
mov
andl
arpl
popa
testl
test
addr16
xchg
dec
bound
sbb
pushf
xor
sbb
jne
mov
shlb
add
out
mov
test
loopne
pushf
sti
insb
test
jae
loopne
adcl
cmp
ds
and
movsb
adc
out
push
fwait
pop
xchg
ss
mov
dec
sbb
mov
hlt
aaa
sbb
xor
sub
mov
xor
pop
add
imul
int
dec
cmp
ljmp
mov
pop
sbb
rolb
add
cwtl
mov
imul
add
xchg
xchg
repz
pop
sub
push
lahf
leave
sahf
cmpsb
ss
mov
clc
cmp
xor
jne
add
into
std
sti
leave
sti
iret
jmp
popf
imul
mov
add
inc
notl
ret
pop
sub
sbb
out
and
mov
es
xlat
jg
jp
jae
test
setbe
adc
jg
scas
in
data16
xor
and
adc
pop
jo
cmp
push
popf
inc
lret
stos
mov
out
ret
je
cld
repnz
pop
or
mov
ljmp
aas
sub
mov
iret
push
sbbb
xchg
push
pop
cs
mov
shlb
adc
stos
lret
mov
xchg
mov
adc
rol
mov
mov
jo
pop
scas
and
pop
stos
add
scas
adc
sub
mov
jnp
dec
xchg
cmpsl
stos
sub
cmp
xchg
sub
pushf
jp
data16
sub
dec
pop
pop
cltd
out
and
loop
pusha
add
int3
hlt
mov
mov
mov
xor
jecxz
ljmp
add
les
sti
mov
ret
and
rcll
xor
mov
fdiv
push
cmc
insl
fwait
mov
sbb
pushf
or
call
xchg
xchg
sbb
pusha
push
int
sti
mov
xor
outsb
mov
pop
jg
push
add
dec
popa
pop
or
mov
xchg
jnp
dec
pop
ret
add
fcomp
xchg
mov
fidivs
shrb
pop
mov
xor
push
and
or
cmp
push
mov
repnz
rcrl
test
mov
sbbl
add
inc
and
lahf
sbb
lahf
xchg
sub
aaa
jge
adc
sub
jmp
iret
lods
shlb
outsb
mov
leave
stos
in
loope
gs
mov
sti
cmp
lods
mov
addr16
sub
jb
fs
ja
and
int3
push
movsb
movsl
lret
cmp
cltd
push
dec
xchg
pop
fwait
mov
or
jg
mov
sahf
loop
sub
mov
add
scas
mov
ljmp
and
dec
adc
or
lock
jnp
insb
outsl
cs
ret
sti
jmp
sbb
fwait
pop
loop
cwtl
mov
xchg
jbe
insb
pusha
fsubrp
add
and
addr16
push
inc
lret
daa
ds
pop
cmpsl
cmp
vpperm
inc
js
inc
mov
add
push
pop
push
inc
lahf
in
inc
sarl
sub
loop
dec
or
cltd
mov
cmpb
add
int
les
dec
or
and
lahf
lret
add
out
and
adc
loopne
lahf
or
adc
push
push
dec
dec
mov
xor
and
sbb
mov
scas
dec
xchg
inc
sub
ja
or
pop
insl
imul
nop
pusha
dec
fsubrl
xor
cmc
out
sbb
test
xchg
jecxz
aam
shll
pushl
inc
in
jae
pop
lods
gs
mov
jle
mov
add
inc
enter
pushl
cld
sbb
mov
add
add
add
jecxz
dec
adc
popf
pop
stos
pop
stos
scas
cmp
sbb
ljmp
dec
mov
push
xor
pop
push
mov
add
cmp
sub
subl
mov
out
push
aad
push
loop
jns
mov
adc
lock
mov
fldenv
or
js
test
fstps
sbb
add
adc
rcl
add
sub
shl
mov
test
rcrl
data16
or
test
aaa
dec
cmp
inc
mov
jecxz
mov
cmpsb
arpl
loopne
sub
pop
das
sub
aad
pop
outsb
idivb
dec
hlt
lret
sbb
mov
mov
sub
pop
adc
ss
mov
xchg
pusha
mov
sub
and
or
nop
xchg
stos
aad
dec
aad
movsb
mov
dec
jno
xchg
xor
fcomp
dec
mov
add
add
pushf
shrb
lcall
movb
add
add
add
jmp
mov
bound
jnp
rorl
imul
push
mov
add
fnstcw
mov
rcrb
cmpsb
jo
mov
fsts
jae
clc
xor
fs
fidivrl
mov
ja
cmp
sub
cmc
mov
xchg
pusha
dec
arpl
mov
aam
pushf
add
je
lods
cmp
outsl
mov
or
lds
mov
mov
dec
push
pop
and
cli
lods
es
xor
pop
movb
arpl
mov
push
es
aaa
sub
mov
fldenv
arpl
movsb
cmp
inc
or
ljmp
dec
push
lahf
push
ljmp
daa
cmpsl
jbe
mov
mov
jnp
xchg
lods
test
push
lret
mov
pop
xchg
pop
rolb
xor
enter
repz
insl
mov
psllw
in
orl
add
test
mov
aas
scas
in
jp
ret
add
add
or
repz
inc
pop
nop
fisttps
aad
cmp
je
xor
mov
dec
mov
rclb
mov
push
popf
jge
jecxz
pusha
nop
pop
jo
ds
gs
icebp
ljmp
push
cwtl
mov
sub
push
pushf
ljmp
lahf
push
hlt
cmp
into
test
gs
lret
and
lret
les
mov
xchg
ja
jno
and
cmp
call
paddd
adc
dec
push
add
push
xor
jmp
pop
cli
inc
sbb
xlat
stos
lods
in
jae
dec
shll
mov
push
add
xchg
cmp
dec
push
and
pop
jl
cmpsl
dec
sahf
insl
xorl
cmc
xchg
fs
push
clc
add
clc
dec
out
orl
push
mov
bound
jno
cld
pop
in
pop
shll
mov
popa
or
test
mov
xchg
add
std
rolb
add
add
jne
jne
jg
loop
mov
pop
xchg
ret
add
add
add
sub
mov
cli
dec
dec
dec
fptan
jl
add
es
dec
mov
jmp
push
scas
loope
data16
mov
sbb
sahf
cli
mov
or
scas
and
dec
pop
inc
pop
call
leave
cmpsl
pushf
xchg
and
loope
fcompl
pop
outsl
jp
rorb
lret
mov
out
sub
call
rcrl
hlt
pop
mov
call
mov
rolb
iret
and
in
movsl
or
ja
dec
and
jbe
xchg
aam
cmp
cmpsl
int3
mov
sub
or
lds
lcall
push
or
lds
arpl
out
mov
adc
jno
sub
es
mull
rolb
mov
xchg
arpl
cmpsb
pop
mov
clc
push
pushf
nop
lcall
add
sbb
mov
cmc
mov
xchg
cwtl
les
add
add
push
movl
sti
mov
jmp
in
xlat
dec
es
mov
les
sub
pop
addb
pop
push
adc
xchg
loop
jecxz
dec
mov
and
cmp
pushf
xorb
in
insl
cmp
in
movsl
dec
aad
ljmp
icebp
dec
jle
and
lea
xchg
cli
xchg
adc
addr16
sbb
out
or
ljmp
xchg
pop
push
mov
push
lods
lods
ja
mov
ja
mov
add
aad
lea
push
mov
jl
pop
pushf
push
lret
fdiv
or
adc
test
push
mov
push
jmp
dec
ret
lahf
lods
mov
mov
jl
mov
lods
out
push
cmp
ss
dec
adc
movl
xchg
imul
jo
sub
outsb
pop
push
in
xchg
xchg
inc
sti
je
imul
add
std
leave
repnz
add
add
add
outsb
jle
lods
testl
lds
add
add
js
jo
cmc
jle
jl
js
movsl
xchg
movsl
xchg
pushf
scas
iret
in
loop
inc
test
movsl
jecxz
mov
shrl
jmp
rorl
mov
mov
sub
jl
mov
sbb
xchg
nop
sbb
push
lret
call
xchg
mov
mov
es
xor
xchg
cmp
loopne
std
mov
sarl
mov
cmp
mov
mov
mov
sar
add
lcall
test
ret
popa
or
mov
mull
fsubs
in
rcrb
sbb
test
out
es
sub
sbb
mov
inc
fdivr
rcrb
inc
jmp
inc
lret
data16
mov
fcom
mov
andb
pop
iret
cmp
outsb
call
push
jnp
mov
mov
add
fsubrl
mov
add
add
dec
lods
push
aam
dec
mov
or
insb
pushf
aad
fbld
pusha
cli
jnp
shlb
out
pop
jle
xlat
dec
or
push
adc
ja
jnp
sub
lcall
arpl
or
add
mov
lahf
mov
mov
stos
inc
outsl
int
jmp
test
mov
xchg
sbb
loopne
xchg
stos
push
fdivs
stos
arpl
sub
inc
ss
nop
jle
sbb
sub
or
fbstp
adc
ds
pop
xchg
inc
fisubrl
pmulhuw
adc
mov
stc
sub
call
notb
aas
out
je
pop
ds
pop
push
and
pop
or
xorb
xor
push
call
mov
test
xchg
dec
sbb
cmpl
ret
adc
mov
stos
mov
mov
inc
sub
dec
adc
inc
jecxz
mov
mov
mov
add
add
out
sti
xlat
in
aad
and
add
add
add
fwait
jp
mov
nop
rcrb
adc
test
cmpsl
stos
in
lock
pop
sbb
stos
adc
jmp
pop
fdivl
mov
out
mov
mov
cld
mov
sub
push
mov
jb
add
dec
shrb
movsb
push
cmp
pop
adc
sbbb
ret
dec
daa
mov
and
js
repnz
js
mov
sub
or
fs
xor
xchg
sbb
clc
loopne
sbb
inc
cmp
pushf
daa
mov
aas
fstpl
filds
mov
sub
push
ret
lock
test
cwtl
fistpl
cld
rorl
addr16
in
add
mov
je
test
cmp
int
jo
adc
pop
ds
fsubr
push
pop
mov
repz
xlat
outsl
sbb
and
cmp
movsl
cs
adc
and
add
push
sub
cmp
jg
and
mov
into
xor
test
add
add
add
stc
mov
cmp
das
cmpl
cmpsl
cmp
and
xchg
neg
pushw
imul
fidivl
test
mov
lret
cmp
mov
int
pop
push
jne
mov
xlat
cs
adc
ds
xchg
xlat
in
js
add
adc
imul
mov
mov
imul
ljmp
fidivs
enter
xchg
sub
daa
jle
push
mov
xchg
pop
imul
fdivl
mov
inc
mov
lret
lods
mov
pop
inc
gs
pop
jnp
and
adc
inc
jmp
rolb
sahf
inc
pop
cld
jnp
mov
sbb
mov
sbb
push
adc
shrb
les
jmp
loopne
lock
xchg
or
mov
insb
mov
hlt
push
addb
dec
mov
lret
push
sub
xchg
fiadds
push
mov
add
pop
imul
xchg
jmp
ds
repz
fcoms
lods
int
inc
lods
leave
add
add
add
pop
or
shlb
push
repnz
ljmp
nop
insl
int3
shll
xor
and
xchg
dec
pop
sysenter
scas
stc
xchg
fldenv
movmskps
popa
lods
mov
fwait
shl
lods
cmpb
popf
lock
loop
pop
or
add
adcb
jo
sbb
addl
fldl
jecxz
decl
lcall
xchg
dec
icebp
push
fucomip
pop
adc
movsl
sbb
jne
inc
lods
and
xor
mov
inc
les
mulb
sbb
jmp
or
outsb
sub
lods
sarl
pop
jnp
mov
or
mov
nop
test
stc
inc
out
shrb
adc
pop
mov
sub
and
je
movsb
xor
in
and
testb
dec
ss
or
lret
mov
add
xchg
sbbl
add
mov
mov
add
add
add
mov
scas
xor
push
fstpl
jbe
in
pop
sub
aas
sub
mov
test
clc
push
shrl
sbb
fisttpl
dec
lahf
rol
arpl
adc
arpl
push
mov
jo
je
mov
mov
fsubrp
adc
cmp
jg
inc
push
jmp
in
cld
cmpsl
push
sarb
or
xorl
addr16
insl
push
out
stos
push
xor
pop
stc
mov
push
inc
mov
and
outsb
or
sub
adc
push
movsl
cmp
je
push
shlb
aad
push
jns
cmpsb
popf
in
adc
repz
mov
pop
mov
dec
imul
jge
out
sbb
xchg
addr16
add
mov
test
fcmovbe
and
or
pushf
scas
addl
add
scas
sti
push
loope
stc
enter
in
sbb
push
inc
sub
lret
add
add
add
xchg
or
inc
movsl
sub
sub
lds
jl
sub
xor
xchg
fnstsw
mov
popa
add
xchg
add
mov
push
sarb
in
adc
mov
mov
jno
test
xor
scas
arpl
movsl
push
mov
testb
sub
push
or
mov
sbb
shrb
pop
cmp
pop
sbb
mov
fs
jg
test
cwtl
sub
jg
mov
pop
call
shrb
jb
mov
pop
push
and
add
or
test
xchg
sub
mov
test
adc
or
push
pop
dec
imul
loop
pop
sub
rorb
pusha
es
out
adc
inc
push
dec
and
imul
jo
lock
xor
push
pop
or
or
jecxz
xor
fdivl
shrb
je
add
add
imul
cmc
call
inc
push
popa
jbe,pt
call
add
add
in
add
enter
push
jmp
fsubrp
sarb
xor
data16
or
daa
ret
adc
jae
into
loope
addr16
lret
test
orb
mov
sub
repz
or
rcrb
cs
jmp
fisubs
lods
mov
or
sbb
test
in
pop
add
jne
sub
push
movsl
insl
add
enter
in
jns
or
dec
jnp
ficoml
insb
sub
inc
lods
bound
fisttpll
sub
xchg
in
frstor
mov
test
push
jl
mov
sub
inc
sbb
inc
mov
adc
pop
mov
jle
mov
mov
int3
fwait
lea
rcrb
pop
sbb
push
xchg
stos
mov
mov
mov
inc
fdivs
bnd
xchg
nop
lock
add
movsl
mov
iret
sub
stos
jmp
add
add
jecxz
sub
or
cmp
sti
lea
test
subl
jmp
inc
sahf
jle
mov
iret
adc
mov
mov
fsubrs
push
jg
mov
mov
jl
das
clc
imul
dec
and
sar
lods
std
leave
rorl
ret
cmpxchg
cltd
and
aas
movsl
fwait
dec
scas
dec
add
in
or
addl
loope
dec
xor
fsubs
xchg
ret
fstps
rorb
sbb
cs
mov
sbb
pop
xchg
test
ss
xchg
jae
mov
add
sub
ret
cmp
call
jp
xchg
test
cmp
add
xchg
in
or
clc
lret
insb
inc
faddl
jb
pop
jle
jle
xor
push
inc
push
pop
stc
enter
push
jns
mov
lea
aad
xchg
enter
xor
mov
add
add
out
into
gs
cld
test
lea
sbb
into
add
add
add
add
add
mov
xor
push
daa
addl
and
push
and
dec
mov
aaa
popa
gs
pop
pop
cmp
or
bound
inc
in
or
cmpb
mov
in
dec
push
mulb
pop
pop
test
sahf
aam
mov
stos
out
xchg
jg
out
pop
dec
les
push
cs
ja
or
testb
jb
shrl
js
shlb
cli
out
and
mov
filds
popa
mov
push
aad
pusha
mov
and
pop
mov
fldl
sub
mov
sbb
xor
cmp
lods
dec
cwtl
mov
loope
lods
loopne
sar
inc
ds
fildl
or
mov
adc
jo
ljmp
push
test
mov
cmp
icebp
sbb
add
inc
fisubs
jmp
ret
dec
loopne
and
je
out
mov
push
outsb
add
iret
add
add
add
jae
inc
insb
mov
lcall
xor
mov
jge
pop
xchg
insb
mov
dec
int3
xchg
or
mov
lods
cs
fcompl
mov
dec
or
and
push
mov
pushf
adc
push
in
xlat
xchg
push
clc
popa
inc
add
xor
out
movsb
int3
mov
sub
adcl
xor
loop
dec
iret
xchg
mov
push
test
sti
hlt
dec
dec
mov
push
mov
jp
leave
lods
mov
mov
rolb
faddl
xor
push
mov
jmp
push
icebp
mov
mov
add
daa
ljmp
pop
jmp
pushf
loope
pop
outsb
jl
sub
sarb
and
imul
test
push
push
mov
mov
outsl
xchg
mov
popa
fsubrl
mov
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
jl
dec
xor
rolb
add
add
addl
rclb
xor
lcall
jne
inc
push
fstps
int
movsb
jnp
in
or
add
in
xorb
jle
cwtl
rep
aam
add
sub
and
repz
xchg
repnz
shrb
clc
bound
ret
dec
test
in
sub
lahf
mov
jmp
in
popa
cmp
bound
gs
sbb
scas
jmp
cmpsl
mov
cmp
adc
lahf
cwtl
pop
popf
ds
sbb
dec
add
outsl
fistpl
loop
bound
push
push
pusha
mov
icebp
adc
shrl
mov
lods
scas
popf
js
mov
cmp
xchg
jo
push
xchg
shlb
lea
les
test
inc
ja
fdivrs
mov
cmpsl
xchg
ret
mov
jbe
push
outsb
or
dec
in
or
add
add
popf
mov
lahf
ret
or
fmul
int3
roll
add
add
cmp
sbb
in
sbb
insb
lret
sbb
pop
add
js
push
stos
push
out
out
test
cmp
test
jae
shl
xor
int
sbbb
repz
mov
cli
jl
aam
xor
push
mov
outsl
mov
fcoms
insb
in
out
pop
lods
mov
cmpsl
scas
in
push
imul
sbb
adc
jno
cmpl
lds
jle
xchg
insl
ljmp
cmp
cwtl
mov
push
mov
mov
ljmp
insl
mov
fisubl
testl
mov
push
pop
mov
push
fisubrs
xchg
jns
ja
dec
les
jb
cmc
ret
mov
jmp
xor
pop
aaa
mov
add
xor
sub
inc
jg
adc
add
loopne
cs
arpl
arpl
movsb
mov
cltd
cmp
add
mov
mov
mov
pop
xchg
or
rolb
add
add
mov
jg
pop
out
sub
lods
mov
xor
inc
adc
push
sbb
mov
nop
dec
fstl
and
xchg
add
fs
loope
push
jb
xchg
push
xchg
div
push
hlt
das
pop
lea
out
mov
jne
inc
mov
popf
cmp
ja,pn
and
ds
mov
xchg
mov
fimull
lea
pop
lcall
aas
and
cld
xchg
cld
mov
rclb
icebp
lods
lods
ss
scas
mov
mov
pop
inc
mov
cmp
out
inc
xor
cmp
test
fstpl
xor
popf
push
lea
push
or
mov
pop
shll
stos
addl
inc
insl
mov
dec
jo
test
jnp
or
loope
and
xor
jbe
stc
mov
xchg
cmpsl
xchg
dec
daa
mov
sub
sbb
jne
xor
add
sbb
sub
dec
in
jns
aam
add
add
add
or
push
mov
js
jle
adcl
dec
or
mov
and
sub
aaa
pop
ss
xchg
pop
aam
hlt
sti
and
dec
pop
shlb
mov
test
add
mov
sbbl
cmp
mov
inc
jle
inc
sub
nop
imulb
sub
or
shlb
addr16
xchg
xor
mov
jl
mulb
faddl
pop
imul
pop
and
movsb
fcomi
orl
xlat
sub
and
push
and
mov
in
push
cmp
in
jno
imul
jg
cltd
fs
sbb
sub
cmc
or
jecxz
int3
pop
leave
push
adcl
hlt
xchg
or
mov
ljmp
faddp
int
pop
std
mov
dec
push
int
mov
outsb
ret
jbe
mov
pop
shl
push
ljmp
add
add
ds
jae
mov
data16
add
add
add
adc
iret
inc
mov
or
into
iret
or
mov
or
cli
xor
dec
outsb
leave
and
cs
roll
das
hlt
hlt
repz
lods
dec
or
xchg
fimuls
sub
adc
scas
or
add
push
mov
loopne
xchg
sahf
cli
pop
pushf
mov
mov
repnz
jnp
inc
pop
sbb
jmp
cmp
and
je
cmp
jge
sahf
jae
divl
sbb
fcomi
dec
ret
or
push
inc
dec
pop
fdivrs
cmp
xor
dec
fstps
add
sbb
jbe
ret
push
stc
shlb
xchg
cmpl
rorb
inc
adc
das
aas
jbe
shrl
pop
mov
mov
push
inc
inc
daa
xchg
in
push
mov
xlat
sub
cmp
lods
mov
adc
sub
xor
xchg
and
idiv
lahf
insl
mov
aaa
ja
add
add
add
xchg
jmp
dec
sbb
inc
xorb
cltd
pop
xor
jp
loop
jecxz
mov
sub
sbb
stc
stos
sub
and
shll
lods
inc
loope
int3
in
jae
stc
divb
subb
xor
int
xchg
lret
sbb
test
loop
inc
cmpsl
scas
shrb
scas
ja
fsubrs
aas
in
jae
loopne
mov
or
aad
mov
fildll
sub
adc
test
push
cmp
push
addl
inc
call
xlat
and
lret
inc
mov
pop
clc
jno
ja
lret
fiadds
icebp
ror
lahf
lcall
cli
shll
mov
ss
jp
lds
lcall
inc
imul
pop
mov
loopne
mov
aas
enter
jbe
sbb
push
or
mov
push
lret
or
mov
cmp
jg
leave
or
outsb
or
add
add
push
addr16
mov
pop
and
push
sbb
call
jne
push
add
mov
aad
xlat
into
jl
roll
fnsave
inc
sbb
aas
in
sbb
sub
push
jbe
dec
mov
mov
mov
ficomps
in
in
mov
out
cmpsb
push
test
pop
pop
sub
mov
mov
imul
xor
fcmovu
sarl
push
ret
inc
mov
inc
jmp
mov
mov
out
outsb
jl
in
sub
or
out
loopne
mov
lret
dec
and
fisubrs
and
jp
rorl
inc
xchg
fcos
push
lret
subb
ljmp
aas
aam
and
push
inc
jno
mov
in
in
fcompl
sbb
cld
andl
js
adc
cli
imul
xchg
movsb
mov
enter
add
add
add
and
mov
dec
mov
fdivs
mov
mov
rolb
sbb
cmpsl
cs
lods
push
je
inc
imul
int3
cwtl
jp
std
mov
cmp
testl
cmp
add
sbb
rclb
dec
dec
testl
push
ret
pop
add
movsl
hlt
repnz
scas
roll
movd
es
jo
scas
rorl
mov
xor
imul
push
and
xor
dec
mov
sti
push
xchg
jo
jno
in
testl
icebp
stos
in
push
jb
ss
pop
stc
aad
push
cmpsl
mov
xor
out
stos
ss
push
in
pusha
mov
mov
add
and
pop
testb
xchg
movl
dec
sbb
stos
outsb
sti
fnstsw
lods
inc
xchg
mul
les
cli
jmp
add
add
add
psubusw
push
in
sub
dec
call
add
add
aas
sbb
dec
xchg
or
sub
cmp
movsl
sub
xor
mov
pusha
arpl
dec
dec
add
jg
push
aaa
and
dec
pop
lcall
in
and
loop
dec
or
ret
cld
inc
lods
jl
subl
pop
xor
xchg
hlt
cwtl
pop
xchg
gs
mov
cmpb
xor
pop
xchg
sbb
and
in
xor
push
ret
fldcw
fwait
mov
push
xor
fistl
mov
lahf
repz
loope
aaa
push
mov
and
jge
out
inc
addr16
sbb
rcrb
rcl
in
icebp
cmp
adc
gs
in
mov
jp
jl
jbe
clc
mov
sbb
add
or
mov
ds
push
pop
int
xchg
scas
stos
dec
xchg
add
cmpsb
sbb
repz
sub
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
pop
scas
in
flds
add
add
dec
add
and
clc
sub
xchg
out
sub
mov
ret
out
addr16
ljmp
testl
pop
loop
jg
insl
mov
in
shrl
sarl
int3
sub
aad
or
xchg
lret
ss
fsubrl
mov
outsb
cld
ljmp
sub
sub
mov
pop
mov
jns
les
out
pop
nop
push
bound
inc
mov
insb
push
lods
loopne
in
je
push
pop
xchg
hlt
inc
in
adc
jl
xor
xchg
or
push
lea
js
jne
mov
ret
data16
xchg
push
push
mov
fwait
cmpsl
test
je
movsl
inc
pop
xor
leave
jl
cmpsb
das
std
pop
pop
lods
shrl
insb
inc
nopl
pop
fwait
hlt
push
idivl
xchg
dec
mov
sub
daa
ret
lahf
test
jnp
pop
dec
jle
jg
std
fstpt
cld
jle
lock
add
add
sbb
loopne
call
jl
xchg
in
jle
pusha
out
sub
push
ljmp
addb
dec
movsb
dec
cmpb
sub
movsb
insl
fdivp
mov
mov
data16
push
lea
iret
outsb
sbb
daa
mov
loope
add
mov
push
pop
sbb
push
pushf
pushf
js
inc
sbb
push
jecxz
cmp
mov
outsb
dec
xchg
push
daa
push
rolb
mov
mov
mov
cmp
push
ss
and
cmp
test
fists
pop
or
and
into
fcomp
sbb
jae
xchg
insl
adc
subl
adc
xorb
push
xor
sbb
dec
and
mov
out
xorl
cmp
testb
cmp
sub
ja
sub
das
mov
push
push
aam
insl
sub
add
add
mov
sti
idiv
lods
pop
sbb
cmpsl
pop
hlt
fildl
add
add
cmpl
imul
push
adc
mov
cmp
sub
popa
inc
jns
mov
mov
outsb
inc
add
fs
fs
and
stos
insl
sub
jno
adc
push
pop
cli
push
iret
push
imul
pop
or
lahf
arpl
xor
mov
loopne
sti
dec
xor
push
adc
cli
cwtl
xor
cld
inc
sub
and
mov
and
xchg
sbbb
xchg
cmp
test
inc
xchg
pop
and
pop
and
lock
cs
stos
jnp
sbbb
insl
jbe
pop
imul
dec
test
xchg
outsb
mov
push
xchg
push
inc
scas
fnstsw
mov
rcrl
jae
out
push
pop
ret
movl
push
dec
test
cmp
movsb
lods
test
or
hlt
imul
mov
loop
movsl
mov
lds
add
add
sbb
jmp
scas
inc
call
clc
faddl
add
add
test
xor
xchg
cmp
cmp
orl
cmp
adc
cs
add
push
int3
jne
and
sub
rol
ja
jo
pop
scas
push
js
hlt
repz
imul
inc
shll
dec
jno
loope
aad
mov
js
icebp
leave
pop
nop
cmc
into
mov
rolb
cmc
xchg
pusha
adc
pop
out
sub
fwait
inc
ret
out
fldt
fmuls
sti
popa
testl
data16
xchg
clc
cli
movsl
mov
movsl
mov
jecxz
or
aam
bound
lahf
add
sbb
add
jnp
lods
imul
add
sbb
sub
mov
arpl
dec
rcrl
push
sbb
in
pop
sub
xchg
gs
imul
mov
or
adc
mov
mov
add
add
push
out
faddl
sub
fldl
add
add
pusha
and
adc
adc
in
xor
xchg
lea
mov
add
rorb
jl
shlb
std
out
mov
add
push
je
jle
in
cmpsb
and
cmc
push
sub
movsl
jb
fwait
ja
mov
or
lret
xchg
xchg
ss
push
dec
inc
fucom
shll
add
lea
lods
jne
push
jae
sbb
sub
mov
sbb
adc
adc
inc
out
sub
stc
loopne
enter
adc
out
mov
and
add
add
mov
xchg
sub
cmp
test
or
adc
sti
pop
mov
dec
ljmp
add
aas
aas
mov
test
sub
ljmp
movl
xchg
pushf
imul
pop
jmp
lea
jge
jg
mov
lcall
fisttps
or
add
add
add
add
mov
lods
mov
pop
test
insl
sbb
rcll
mov
aam
cmc
aad
mov
or
pop
out
push
pop
test
stos
sbb
fstpt
jge
and
xlat
mov
movsb
jecxz
jnp
sbb
in
jnp
xchg
aad
out
inc
or
cmpsl
cwtl
js
test
mov
xorl
mov
add
adc
hlt
stos
test
mov
js
inc
sub
mov
xchg
repz
push
stos
js
loop
int3
jmp
adc
sub
addr16
out
cmc
and
repnz
popl
or
mov
ret
mov
jne
imul
rcl
nop
push
mov
xor
cs
mov
and
sbb
add
aam
xor
adc
out
js
andl
jg
adc
lret
loop
sbb
jns
xchg
xchg
mov
add
add
add
add
add
mov
ss
nop
adc
mov
testb
sub
outsl
sbbl
adc
aad
push
loope
push
ds
mov
xchg
sti
inc
fsts
sbbl
jl,pt
xchg
sbb
fnstsw
xor
cmp
adc
pop
jle
cs
xchg
outsl
or
or
push
imul
dec
cwtl
jp
xchg
push
sbb
stc
in
lcall
ja
daa
shrl
es
jmp
dec
std
pop
aas
in
or
add
sub
push
jp
mov
imul
inc
or
out
push
insb
ret
and
sahf
and
mov
pop
enter
loope
xor
xor
daa
xchg
pop
dec
mov
adc
sbb
xor
push
fnop
sbbl
nop
sbb
jp
mov
mov
pop
cld
imul
add
jae
fadd
fsubp
jnp
or
cld
les
adc
das
or
add
add
add
xchg
pop
pop
inc
in
mov
mov
fnstsw
jno
xchg
out
push
ret
jge
cmpb
movsl
andl
sub
insb
pop
dec
mov
ja
js
jmp
pop
adc
mov
push
add
mov
sbb
push
in
xchg
gs
push
jecxz
out
xchg
sbb
mov
adc
cld
jne
es
adc
test
bound
fildll
push
sbb
rol
jge
daa
bound
repnz
mov
sbb
cmpsb
push
lock
mov
lds
imull
push
je
insb
out
outsl
out
fisttps
dec
insb
pop
jmp
test
jnp
std
test
rorb
cmpsl
inc
mov
mov
inc
pop
stos
ret
mov
xchg
test
test
jecxz
inc
cmp
lret
mov
lods
mov
pand
lods
sbbl
jb
dec
dec
and
adc
xchg
add
jae
add
add
sub
cld
cli
jle
dec
nop
xor
cmp
add
add
add
lcall
js
mov
xchg
pop
cmp
jmp
push
or
or
pop
jbe
pop
movsb
and
add
cmp
push
gs
sbb
test
sbb
sarl
adc
in
sbb
or
inc
pop
pop
mov
cs
add
sti
and
std
jno
sbbb
sbb
pop
xor
ljmp
push
sbb
aam
cmc
and
dec
lods
jmp
imul
rcll
sti
jg
push
sub
adc
mov
cli
testb
push
push
xlat
sub
xlat
cmp
sbb
scas
shlb
cmp
and
imull
fstpl
sub
push
sub
pop
inc
inc
inc
jecxz
and
lret
out
mov
and
push
sarl
leave
cmpsl
push
scas
dec
lea
pop
jbe
ja
sti
aaa
out
ja
sbb
add
add
inc
lods
or
pop
xor
sub
popf
mov
movsl
xlat
pusha
xchg
lret
lea
mov
insl
mov
popa
push
out
mov
pop
lahf
icebp
aad
imul
push
out
dec
cmp
enter
pushf
or
xor
adc
shrb
mov
popf
mov
std
adc
jbe
subb
add
sub
scas
mov
loope
nop
insl
sahf
popa
jo
jmp
call
outsl
sbb
push
jbe
mov
iret
out
mov
mov
outsl
inc
dec
xchg
aas
loope
pop
mov
orl
mov
and
xchg
xor
je
in
movsb
mov
rolb
call
lcall
lds
ss
mov
cli
test
fisubrl
jmp
mov
test
adc
cmp
push
push
ror
cltd
outsl
mov
aaa
pushf
add
in
add
add
mov
pop
mov
adc
out
add
mov
imul
insb
in
ja
jno
jmp
leave
mov
or
loop
loop
fildll
notl
jne
lahf
jp
gs
fldt
leave
pop
lcall
pop
adc
out
xlat
cmp
inc
outsl
adc
aad
push
fs
sbb
dec
lods
pop
pop
pop
pop
popf
sbb
pop
dec
sbb
inc
rcrb
jns
addr16
jae
nop
cmpsl
xchg
jmp
in
bnd
rcll
and
hlt
pop
fcoms
xor
mov
arpl
mov
cwtl
inc
jns
sbb
cld
or
and
in
xchg
cmp
add
repz
fdiv
and
add
ret
rclb
dec
push
les
xlat
xlat
popa
jmp
inc
sub
xor
add
ja
lcall
mov
sbb
in
add
add
adc
dec
out
or
mov
dec
sub
aaa
nop
das
das
imul
jbe
adc
xor
fnstenv
ret
dec
arpl
dec
outsb
add
sub
popf
jle
sbb
in
push
inc
push
out
movlhps
js
lods
dec
sub
nop
mov
call
push
lret
inc
jns
pushf
fsubs
es
xchg
cwtl
xor
call
push
sub
jg
xlat
dec
test
inc
sub
or
mov
in
arpl
repnz
fidivrs
pop
mov
and
mov
es
test
call
or
cmp
add
lret
pusha
inc
scas
repz
lcall
push
push
mov
inc
push
scas
jns
or
lods
popa
popa
pop
or
sbbl
and
out
cmc
mov
repz
lock
jg
in
and
stos
movsb
in
sbb
add
add
add
outsb
popa
mov
inc
bswap
mov
jge
mov
adc
insl
jbe
pop
xchg
mov
and
inc
add
pop
imul
xorl
cld
add
leave
and
addl
xor
push
mov
cmpsb
out
mov
sbb
loop
shr
push
mov
xor
xchg
adc
xadd
lret
add
aas
popf
sbb
add
aad
adc
mov
mov
pop
mov
jne
push
shlb
dec
lods
and
icebp
inc
jl
push
idivb
imul
stc
div
movsl
mov
pop
xor
out
add
pushf
and
call
dec
mov
lret
xchg
add
out
mov
movsb
insl
inc
cld
jb
push
loopne
xor
ficomps
push
jno
movb
std
fwait
adc
jo
cmp
daa
cmc
das
into
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
mov
insl
and
add
add
add
jmp
in
pushf
jecxz
jae
xlat
push
repnz
xchg
ljmp
mov
es
sbb
and
mov
adc
mov
pop
sbb
and
loope
push
icebp
xchg
in
lds
mov
scas
mov
push
push
xchg
bound
jg
pop
sbb
sbb
mov
sub
std
jg
or
cmp
bound
mov
mov
mov
push
les
or
xchg
jl
popf
ret
orl
out
xchg
dec
adc
loop
test
mov
shrb
mov
cs
sti
sub
sbb
loope
insb
mov
or
adc
pop
mov
fcomi
sub
jp
sti
sbb
les
xlat
mov
sarl
inc
or
inc
jle
pop
mov
push
in
inc
dec
inc
ja
std
jns
jle
add
add
mov
dec
js
stc
mov
dec
int
jge
sub
and
add
add
add
cli
xor
push
mov
or
notb
ror
cld
push
pmulhw
mov
xor
lods
int
and
ror
cmc
out
out
lret
ds
adc
pop
push
dec
sub
ja
icebp
ret
arpl
out
mov
push
push
xlat
pop
rorb
inc
adc
adc
es
pop
cwtl
pushf
pop
inc
testb
enter
mov
mov
and
cmpsb
stos
mov
ret
jb
iret
inc
lods
sub
inc
sub
pop
out
pushf
sahf
cltd
das
popa
mov
out
xor
push
scas
ss
outsl
xlat
or
mov
jp
enter
inc
xchg
orl
jp
ja
adc
mov
add
frstor
mov
outsb
div
cmc
cs
das
leave
out
lods
push
pop
mov
add
cmp
jns
mov
pop
insb
fildll
fwait
jns
jns
mov
adc
jmp
add
mov
outsl
jp
enter
sti
and
mov
inc
jl
in
jae
jno
push
jnp
mov
rolb
adc
cmp
cmp
xchg
lds
imul
leave
adc
fisubrs
adc
sbb
cmp
popa
sahf
dec
montmul
cmpsb
inc
int3
pop
jns
inc
dec
xchg
and
repz
shl
loopne
notl
out
pop
push
stos
punpckldq
leave
cs
fstpl
sub
jbe
das
rolb
add
or
push
xchg
pop
xor
mov
mov
jmp
sbb
and
mov
rcl
mov
cld
mov
into
push
aaa
cld
jmp
mulb
or
mov
int
xlat
inc
das
bnd
xchg
pop
les
sbbl
mov
adcb
es
lahf
lahf
cwtl
scas
mov
xor
cwtl
sar
or
and
inc
andl
add
cmp
jnp
adc
jne
mov
out
ljmp
sbb
popf
out
mov
lods
pop
inc
outsb
sarb
push
jb
jb
lahf
jns
add
outsl
inc
pop
rcrl
call
insl
loopne
and
jp
jnp
or
aad
in
arpl
push
ret
in
mov
xchg
loop
js
push
test
je
cmp
pop
in
mov
and
xchg
xchg
jnp
jne
leave
adc
mov
fld
mov
stc
sarb
push
aaa
ret
je
lods
rorb
outsl
inc
jae
push
xchg
scas
mov
cmp
jns
inc
dec
xlat
jns
mov
jae
mov
mov
cwtl
xchg
add
enter
sub
xchg
xor
scas
push
jno
js
ret
ret
lret
jbe
jp
aas
add
dec
movl
mov
jecxz
xor
stos
in
fsubrs
nop
jg
lock
dec
xlat
rclb
nop
and
add
add
subb
fistl
das
ds
jecxz
xor
add
add
add
sbb
pop
nop
stos
sti
adc
xlat
cmpsl
insl
fcomps
lret
cmp
xchg
imulb
push
cmovnp
xor
ret
ss
jo
insl
xchg
add
and
scas
popa
loope
xchg
lea
sub
xchg
mov
dec
mov
or
mov
mov
xchg
mov
ljmp
dec
xor
insl
inc
mov
loopne
xor
cmc
pop
cmpsb
icebp
jle
call
loop
les
scas
rorl
sbb
shl
cld
ss
adc
xchg
push
int
mov
ret
mov
mov
lods
test
cmp
stos
imul
lock
inc
rorb
jns
xor
aad
cmp
inc
cltd
arpl
xlat
cmpl
sub
pusha
out
insb
mov
inc
outsb
sbb
out
mov
sub
inc
jg
addl
in
test
out
cmp
jae
add
jb
scas
decb
fisttps
dec
jnp
xor
add
add
add
jl
insl
xchg
inc
mov
mov
or
pop
mov
mov
lods
jmp
jl
cmp
xchg
mov
sub
sub
out
dec
xor
fimuls
js
leave
xlat
dec
pushf
xor
jnp
mov
pop
jno
pop
movsl
stos
add
popa
orl
cmp
rolb
cmc
lret
pop
inc
bound
push
adc
jb
out
mov
pop
pusha
in
int3
popf
xchg
in
imul
add
xchg
jge
push
je
shll
dec
inc
mov
pop
dec
sub
mov
sub
jg
push
and
lds
sub
xchg
xchg
add
add
in
add
sub
pop
xor
mov
sub
inc
pop
hlt
xor
sub
jo
fcomip
arpl
aam
jno
rorb
xchg
icebp
movsb
rclb
mov
sub
in
add
add
xlat
mov
xchg
xchg
xchg
fstl
add
add
xchg
cld
addr16
movsb
f2xm1
movsl
in
popf
bound
pop
and
mov
xchg
add
sub
push
fcmovnb
stc
mov
clc
int
in
xor
repz
push
push
push
xor
dec
jmp
test
push
stc
aad
cmpsl
sub
lods
ja
in
adc
mov
ljmp
js
pusha
repz
int3
mov
mov
xchg
idivb
lods
ds
dec
xchg
fsubs
cmpsl
lcall
scas
mov
loopne
data16
xor
add
sub
add
in
test
imul
jb
shr
push
ret
adc
test
mov
mov
pushf
add
int
xchg
jl
dec
cmp
mov
popf
adc
loop
into
mov
adc
sahf
cmp
and
decl
js
es
mov
and
pop
das
je
pop
mov
aam
fldl2t
cltd
je
sbb
add
add
mov
aas
mov
je
xchg
cmp
add
add
add
sub
repnz
inc
xchg
fiadds
pop
pop
sbb
push
sti
out
mov
mov
inc
push
push
das
rcll
scas
mov
outsb
fstpl
sahf
pop
stc
xchg
and
lea
sahf
arpl
fdivl
add
mov
int
xchg
add
cmp
mov
test
add
push
inc
nop
cmpl
rcl
jp
sbb
mov
pop
jle
fwait
jno
mov
inc
icebp
sti
dec
scas
cmp
pop
fcomps
jns
xlat
sub
cmp
and
mov
cwtl
jne
dec
dec
mov
addr16
in
in
nop
cwtl
cld
notb
jb
dec
jge
jb
fidivrs
movsb
and
inc
mov
xchg
xchg
push
jg
jmp
das
xlat
lods
push
stos
mov
sbb
bound
sbb
stos
xor
imul
rcll
cld
outsl
add
mov
add
add
mov
sti
mov
fwait
jns
test
add
add
cmc
icebp
cmp
fxch
lds
xor
pop
lret
adc
dec
adc
loop
mov
inc
dec
out
int3
cmp
cmpl
dec
ret
inc
push
inc
arpl
cmp
les
sub
push
jno
add
scas
scas
fstpl
icebp
sbb
ja,pn
xchg
fcmovnbe
dec
dec
popl
add
mov
stc
test
pop
in
scas
jb
mov
out
cwtl
mov
arpl
sub
cmpsl
scas
repz
jmp
pop
inc
pop
dec
xchg
mov
xor
ss
ret
add
bound
cltd
push
hlt
push
fwait
jg
shll
insl
sub
rolb
lock
push
push
mov
lods
rep
roll
fisubl
dec
bound
cs
mov
fldenvs
pop
jno
les
pop
movsb
in
clc
out
pushf
ret
mov
push
cmp
adc
neg
jge
xchg
jns
mov
lock
add
add
lods
cmp
subl
repz
cmp
lret
sbb
xor
inc
or
call
test
call
inc
stos
fs
lcall
cmp
push
out
dec
dec
aad
jbe
rcrb
inc
jg
pop
xchg
add
mov
out
sti
inc
mov
out
mov
sub
cmp
inc
xchg
movsb
push
pop
or
cs
sub
inc
pop
lods
push
xor
pop
and
int
jmp
sub
sub
jecxz
mov
addb
pop
jb
ficompl
outsb
test
pop
mov
hlt
adc
add
push
push
or
mov
sarb
lcall
pop
lcall
imul
mov
cmpl
movsl
hlt
mov
cmp
add
lods
popa
testb
mov
add
pop
cmp
outsl
jg
jg
sub
fisubrl
adc
add
add
roll
cs
test
push
shr
cmpsl
or
pop
rcl
mov
sbb
push
bound
out
xchg
pop
cmpsl
sti
cld
add
mov
insl
push
or
ljmp
sbb
mov
or
pop
adcb
or
dec
inc
jb
dec
push
sbb
mov
mov
mov
aad
sbb
jg
lahf
inc
cmpb
daa
mov
xchg
push
sbb
xor
dec
mov
fstpl
jbe
movsb
cltd
nop
aas
dec
pop
pushl
mov
cmp
je
sbb
pop
loop
stos
daa
or
stos
aad
pop
pushf
sub
lock
orb
cmp
mov
dec
aam
sbb
mov
popa
pop
mov
je
dec
mov
mov
pop
jmp
push
mov
sbb
aad
sbb
xchg
testl
add
add
ja
and
aaa
divl
mov
add
add
add
or
mov
pop
sbb
cltd
enter
int
dec
ljmp
push
adc
or
add
in
xor
sbb
cwtl
pop
fwait
enter
sti
jg
sbb
loop,pt
push
pusha
push
push
add
xchg
dec
sub
sbb
ljmp
popf
fistpl
jmp
inc
lret
fmull
in
scas
cmp
xchg
fcoms
xor
js
std
je
mov
pop
dec
adcb
xor
push
lea
data16
test
aas
popf
mov
idivl
aam
pop
cltd
lods
js
cmp
xor
sub
std
aam
fisubs
outsl
push
imul
mov
test
orl
loopne
ds
or
lods
and
inc
into
fucomi
gs
sub
sub
sbb
out
aad
outsl
mov
lods
xchg
in
xchg
jecxz
jmp
mov
sub
in
out
push
repz
add
add
leave
push
std
mov
push
fwait
cmp
test
rolb
mov
lcall
jg
and
mov
dec
cmpsl
or
push
sbb
pop
and
popa
mov
dec
mov
sbb
mov
les
sub
decb
pop
test
xchg
mov
scas
jb
mov
jge
push
cmpsb
ja
or
in
mov
jnp
pop
aaa
jno
sub
inc
loop
in
or
adc
jne
mov
es
out
dec
mov
test
stos
lcall
mov
push
mov
das
cs
loopne
shrl
movsl
hlt
leave
xor
cmp
pop
mov
sub
int3
sti
int3
push
jge
insb
sti
pop
das
icebp
test
cmp
out
clc
push
or
jp
test
ss
sbbl
mov
xor
lock
xor
fsubr
xor
cmp
jle
jne
pusha
popf
pop
andl
add
add
cmp
lret
mov
adc
aaa
sbb
push
ljmp
enter
cmc
das
test
in
cmpsb
pop
sub
adc
mov
inc
jecxz
push
idivl
or
add
xchg
out
xchg
and
sahf
pusha
lret
ja
add
pop
pop
hlt
test
xor
jg
mov
mov
lods
popa
je
push
sar
gs
and
test
mov
arpl
enter
and
loop
mov
cmpsb
js
adc
xchg
pop
mov
cmp
cmp
or
in
outsl
cmp
dec
pop
movsb
repnz
add
push
inc
stos
jns
add
jns
inc
xor
shlb
jo
testb
mov
hlt
aad
add
inc
je
mov
pop
and
and
orb
std
mov
dec
shlb
mov
mov
xor
mov
icebp
mov
jbe
push
or
mov
add
sub
scas
fdivr
fnstcw
jecxz
test
pop
cmc
add
add
add
into
mov
dec
xor
nop
gs
lret
xchg
dec
adc
shr
jno
xor
out
jle
push
inc
mov
add
jmp
or
pop
dec
sub
mov
or
and
pushf
sbb
popf
into
ss
pop
cltd
fcomps
pusha
fimuls
cmp
jne
or
mov
push
mov
cmp
add
movsl
push
add
pushf
sub
pop
or
xor
xchg
dec
add
sbb
aam
add
outsl
mov
scas
add
jno
inc
jb
sbb
xor
cmp
das
mov
mov
sub
sbb
aam
sub
xchg
adc
push
mov
aam
rclb
adc
iret
ficomps
jbe
fildl
and
mov
out
in
dec
or
mov
push
into
pop
sahf
mov
mov
outsb
lods
dec
and
dec
sbb
or
add
add
add
xor
jb
jae
cmpsb
adc
rcrl
add
add
jge
data16
mov
addr16
lret
out
pop
mov
xor
popf
pop
out
scas
repz
mov
fs
mov
mov
or
adc
int
shll
push
lock
stc
push
sub
insb
or
and
ror
outsb
sub
sub
icebp
push
insb
imul
dec
cli
ljmp
add
inc
xlat
push
pop
xchg
sbb
out
xchg
and
jo
push
xor
fbstp
jmp
mov
sbb
repnz
into
sbb
cmpsl
sahf
xchg
dec
xor
fcompl
ljmp
addr16
aam
push
daa
jg
cmc
cmpsl
jmp
dec
movsb
mov
stc
fstp
fs
adc
int
cmpsb
repz
push
rcrl
xor
outsl
xchg
push
fabs
fs
xchg
mov
sbb
mov
cmp
xor
call
sub
movsl
jecxz
ja
cld
and
sbbb
adc
int
in
idivl
js
mov
inc
arpl
add
add
imul
push
inc
ret
push
mov
pop
in
fdivs
xlat
pop
movsb
imul
sbb
adc
push
jl
mov
in
sub
clc
mov
xor
out
sub
mov
repnz
insl
fidivrl
and
cmp
jge
or
cli
sbb
xchg
jge
inc
test
fsub
cli
jb
xor
das
push
or
test
xor
leave
mov
movsb
sub
adc
faddp
rclb
aam
xor
int
or
mov
loope
mov
mov
loopne
adc
xchg
lcall
in
sbb
clc
rorl
shll
mov
add
cmpsb
dec
cmp
movsl
test
and
add
movsb
ljmp
fwait
gs
imul
movsb
mov
std
sbb
mov
pop
es
inc
cli
aas
into
lret
pusha
iret
movl
add
divps
mov
dec
add
xchg
adc
call
mov
mov
mov
adc
mov
lds
cmp
push
dec
xchg
pop
and
out
bound
mov
push
ds
xorl
jge
clc
mov
in
mov
jo
or
sub
lds
dec
lods
add
mov
jmp
xchg
lods
mov
dec
outsb
orb
int
cmp
addr16
sub
sbb
mov
enter
arpl
push
add
pop
loop
ljmp
mov
addb
cltd
mov
scas
mov
cmp
cmp
xchg
lahf
fidivrl
outsl
mov
and
popf
pop
cmp
push
mov
mov
inc
pop
pusha
or
inc
js
and
cmp
push
roll
daa
and
enter
xor
add
add
lcall
in
rolb
add
add
xchg
jno
pop
xor
xlat
mov
dec
sbb
pop
mov
xchg
jae
mov
daa
aad
xor
mov
hlt
mov
stc
inc
inc
iret
int3
cmp
sub
ljmp
insl
jbe
cmp
cmp
popf
leave
in
cmp
dec
pop
and
adc
daa
call
imul
out
or
out
gs
inc
and
add
stos
int3
adc
add
clc
xchg
jmp
xchg
add
mov
pusha
stos
mov
cmpsb
xor
mov
test
xchg
xchg
pop
insb
mov
movsb
insl
jne
fsubrl
inc
cmpsl
arpl
and
jne
mov
mov
in
iret
pushf
cmpsb
xor
scas
adc
sub
add
xchg
jp
inc
xchg
repnz
repz
push
shrl
sbb
sbb
xor
add
add
jae
cltd
dec
mov
jno
xchg
xchg
lahf
outsl
insb
cli
add
add
add
adc
pushf
jmp
add
lret
jge
mov
cwtl
mov
fisubl
push
data16
subb
push
add
fcomi
js
arpl
sbb
iret
imul
push
ja
push
mov
frstor
aaa
add
stos
mov
push
fcompl
stc
sbb
leave
lods
in
imul
popf
mov
les
pop
inc
adc
negl
loopne
jmp
sbb
cmp
and
xchg
xor
adc
xor
nop
jl
push
cli
gs
adc
pop
mov
dec
jl
pop
fcmovnb
test
ret
test
push
and
jp
out
add
mov
mov
sbb
into
push
xlat
xor
push
adc
xchg
cmpl
ret
push
jo
rcrl
fdivs
jle
cmp
mov
jmp
adc
cwtl
xlat
fists
cwtl
adc
mov
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
gs
add
add
add
pop
xchg
add
pop
ds
push
push
jbe
sbb
mov
sbb
cld
daa
flds
pop
stc
int
pop
xchg
push
scas
push
lds
jae
pop
and
dec
in
ljmp
or
les
aad
add
mov
iret
dec
flds
and
daa
cmp
xchg
int
imul
mov
sti
repnz
mov
mov
cltd
jg
push
fildl
adc
mov
imul
mov
call
popa
call
xor
shlb
dec
shll
mov
mov
hlt
test
push
fildl
adc
sub
popf
xchg
jns
push
mov
pop
in
outsb
lds
in
rcll
shll
aam
sbb
cmp
push
adcl
inc
shll
jge
sbb
jg
mov
pop
sub
xchg
add
jno
test
jg
push
pop
push
mov
je
add
add
add
sbb
jns
push
xchg
xchg
push
mov
call
jne
xor
mov
repnz
inc
les
fbld
mov
and
imul
hlt
stos
adc
fistpll
mov
cmpb
icebp
adc
repz
cmp
in
push
mov
sbb
les
aas
cmpsl
xor
push
test
jns
lea
dec
in
and
les
dec
push
stos
mov
out
imul
xchg
jne
jecxz
in
mov
mov
pop
push
and
or
imull
sub
sti
fnsave
loopne
push
jne
jbe
adc
inc
outsb
je
adc
clc
jno
xor
mov
arpl
jge
outsl
leave
int3
popf
iret
xor
mov
dec
les
fstpl
dec
decb
insl
lcall
push
nop
pop
sbb
jecxz
sbb
adc
movsb
push
in
cmc
jne
sbb
js
imull
js
add
add
add
loope
pop
push
rcrb
cmp
fdivs
fcoms
sti
cmp
stc
pop
in
lret
mov
dec
xchg
mov
jle
int
mov
fsubr
daa
adc
je
pop
fbstp
fisubl
sbbl
inc
insb
mov
ret
incb
sub
sti
xor
dec
add
mov
add
xchg
add
ret
lods
adc
mov
stc
lahf
push
xchg
jle
or
or
sbb
insb
mov
push
aas
mov
mov
xchg
xchg
cmp
jo
outsb
lcall
push
addb
js
pop
add
std
jge
iret
mov
fcomp
dec
call
cltd
add
dec
popa
xchg
in
push
lcall
mov
daa
and
aas
mov
jo
mov
lods
sti
fwait
dec
pop
fsubl
rep
sahf
sub
push
ficoms
jbe
scas
jb
jp
mov
inc
pop
sbb
shlb
aas
out
int3
mov
mov
das
outsl
jl
add
add
add
bound
jmp
pop
lret
test
out
mov
mov
scas
push
sub
inc
adc
loopne
mov
cwtl
cli
xchg
lea
mov
push
mov
insb
mov
sbb
push
fs
rcl
les
sarl
dec
push
daa
pop
idiv
jge
inc
fisttpl
cmpb
pop
repz
mov
jns
push
mov
and
rol
stos
cmpsl
stos
insb
fwait
out
fwait
dec
je
leave
sub
xchg
push
xor
mov
gs
cltd
je
scas
sbb
mov
and
imul
xor
jmp
inc
adc
ret
andl
mov
mov
mov
dec
xor
sti
or
add
mov
mov
into
movsb
xchg
push
xor
cltd
cs
push
jb
cltd
cmpb
dec
lcall
dec
add
or
aas
test
xchg
xchg
inc
mov
inc
mov
addb
add
or
mov
and
xchg
add
add
add
sbb
std
jnp
xor
pop
sub
sub
nop
icebp
and
sti
stos
hlt
mov
inc
int3
movsl
xchg
cmp
lcall
add
imul
lret
mov
mov
jb
movsl
addr16
aaa
mov
push
imul
pop
shrb
popl
ret
push
inc
movsb
mov
pop
and
jmp
stos
stc
sti
cwtl
sbb
fcmovb
jg
nop
xchg
mov
add
adc
adc
in
dec
stos
jns
jecxz
push
mov
sbb
mov
and
in
fidivrl
xor
jge
aam
shr
dec
ss
adc
loop
lret
out
jne
popa
cmp
pop
adc
in
xchg
cltd
bound
mov
mov
scas
inc
insb
lret
dec
shll
sub
sub
jmp
fdivrl
pop
mov
add
ret
bnd
cmc
inc
stos
repz
lock
add
add
stos
ja
sub
fistps
std
mov
arpl
data16
sbb
xor
icebp
shlb
adc
shrl
mov
xchg
pop
cmp
in
imul
mov
or
int
mov
mov
addr16
jnp
loop
scas
ja
stos
mov
les
cmp
mov
out
inc
xor
mov
xlat
cli
in
add
testb
sbb
sbb
adc
lret
jb
jl
repz
push
fstpl
dec
mov
add
lock
dec
inc
mov
into
rcr
insl
cmp
test
xor
jb
into
pushf
mov
dec
push
jmp
icebp
push
jae
int
test
jne
or
xchg
sbb
xchg
addl
xor
cmc
jns
dec
fldl
add
add
std
aaa
mov
shll
jg
add
add
add
notl
es
mov
adcl
and
xlat
and
add
mov
aas
mov
out
movsb
jb
clc
das
sbb
dec
and
pop
sub
fiadds
xchg
mov
lcall
fsts
pushf
inc
xchg
xor
pushf
adc
les
fdivr
mov
mov
ds
fcomps
repz
fs
pusha
popa
mov
cs
cmp
frstor
sbb
cmovns
jbe
rclb
lret
sbbl
rep
cmp
fldl
mov
data16
movsl
mov
add
jae
sbb
sbb
pusha
insl
pop
fwait
gs
dec
mov
mov
push
imul
add
stos
aam
push
pop
xor
cmp
gs
fisttpl
and
in
mov
andl
jmp
pop
xor
rcrl
insl
aam
mov
scas
add
loop
pop
mov
add
pop
add
add
je
push
add
stc
out
inc
loop
mull
sub
dec
mov
sub
sbb
faddl
push
sub
inc
test
push
out
imul
pop
jo
daa
adc
outsb
pop
daa
out
mov
push
mov
mov
out
sub
xchg
aas
xchg
pop
fwait
add
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
flds
enter
int
inc
mov
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
