push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
lea
push
xor
sub
lods
clc
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
lahf
mov
imull
mov
xabort
jne
nop
push
push
sub
js
push
inc
lcall
xchg
aad
out
rclb
mov
lret
dec
call
shlb
mov
fnstcw
mov
pop
mov
adcl
test
xor
push
inc
or
je
scas
popf
sti
icebp
data16
outsl
arpl
xchg
stc
sahf
idivl
jmp
sbb
inc
loope
daa
bound
bound
add
std
jg
mov
mov
popf
mov
push
or
jnp
and
dec
hlt
std
roll
jb
lods
pop
ficoms
push
pop
mov
ja
inc
push
cmp
jne
lods
jle
and
mov
sub
aas
pop
scas
mov
and
insb
cmp
push
cltd
ffree
out
popf
jl
orb
lock
ss
dec
xor
mov
faddp
add
adc
out
jle
jp
dec
decb
pop
insb
xlat
cmp
ss
dec
leave
test
mov
imul
dec
iret
fsub
inc
pushf
mov
sbb
popa
lock
pop
push
lods
mov
push
or
jge
or
xchg
out
mov
mov
push
iret
sub
pop
inc
fstpt
outsb
test
cltd
testb
insl
icebp
push
mov
dec
in
jp
adc
pop
mov
arpl
pusha
ds
add
nop
aad
push
mov
outsb
ljmp
lds
cwtl
inc
fincstp
and
mov
mov
call
xor
int3
pop
jo
xchg
jge
sub
mov
push
int
pusha
insl
lds
sbb
push
fstl
mov
push
sub
push
cld
js
xchg
push
or
pop
shrb
jo
adc
fsubr
ficoml
in
xchg
test
fdivs
mov
sub
fdivrl
xchg
sti
push
xor
scas
sbb
test
jo
clc
ds
push
mov
xchg
outsb
or
mov
cmpsb
repnz
out
lods
scas
shr
pop
lods
test
cmp
or
pop
sbb
es
fnstenv
insb
imul
in
and
dec
roll
shr
notb
push
mov
movsl
repz
jge
jnp
mov
push
mov
xchg
sub
imul
mulb
int3
mov
jl
mov
stos
jp
jmp
push
cmpsb
fbld
inc
xchg
adc
lds
inc
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
push
int
mov
adc
adc
add
popl
mov
jle
inc
inc
lret
xor
cld
sub
pop
rol
ficompl
cmpl
arpl
sub
pop
mov
inc
pcmpeqb
sub
mov
leave
dec
repz
nop
pop
dec
lock
pop
jb
nop
dec
pop
xchg
xchg
mov
aad
fldt
stos
sahf
push
std
arpl
nop
pop
cmc
dec
ss
xor
cmpb
sbb
xchg
rcrb
mov
ja
jecxz
pop
mov
dec
adc
rclb
jg
cmp
mov
dec
cmp
arpl
cmp
cmp
scas
mov
push
addr16
jle
rorb
testb
cmp
jbe
adc
inc
sub
cmp
xorl
fldl
sbb
dec
repz
and
jae
orb
xor
roll
jo
inc
mov
adc
mov
sbb
add
aad
notl
jmp
jecxz
jae
or
or
inc
aas
mov
adc
sbb
mov
ja
push
push
fstpl
xorb
or
jno
jo
pusha
push
push
ss
cld
mov
fcoml
in
aaa
push
add
pop
mov
aas
aaa
adc
loop
sub
adcb
inc
mov
pop
cmp
and
mov
xor
into
dec
sbb
ret
pop
xor
ficoml
mov
gs
mov
daa
jno
or
cmp
pop
mov
cmc
inc
adc
mov
cmc
adcb
das
jo
add
adc
push
data16
sub
mov
imul
mov
xor
into
cmp
xor
jle
into
out
addr16
aam
aaa
and
fidivs
out
cmp
lods
std
push
notl
sub
das
or
pop
mov
rorl
xchg
pop
push
jmp
pop
fdivrl
push
jmp
int
leave
inc
or
or
test
mov
in
mov
cld
sar
sbb
push
inc
je
imul
and
popa
fcoms
inc
insb
inc
bound
mov
add
fimuls
sub
add
fisttps
cmpsb
xchg
movsb
loope
cmp
mov
sti
sbb
rolb
fsubs
mov
push
inc
or
rorb
and
stos
out
jecxz
jmp
shl
pop
pop
inc
push
push
fnstcw
xchg
das
mov
negl
adc
imul
cmp
xchg
sarl
ljmp
pop
pushf
out
nop
sub
dec
hlt
mov
push
pop
in
xchg
pop
jne
ja
rcll
loope
fs
mov
iret
push
sub
in
xchg
push
hlt
lahf
es
pop
fnstsw
mov
bound
loop
mov
insl
push
or
inc
xchg
push
je
adc
ret
mov
test
pop
gs
push
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
rcrb
sbb
inc
sub
movsl
sahf
pop
hlt
ss
mov
cmp
ljmp
pop
clc
pop
xor
aaa
jns
fmull
enter
pop
rolb
push
xchg
adc
mov
es
mov
aaa
shrb
mov
pusha
arpl
fdivrl
outsb
out
jle
insb
jmp
jge
rorl
les
pop
std
jb
jg
mov
imull
aad
pusha
mov
mov
mov
mov
sub
inc
cs
test
ret
pop
addb
lods
jno
cmp
lds
push
mov
mov
jae
mov
sahf
mov
in
int
push
loopne
clc
fadds
daa
lods
pop
inc
mov
mov
cmpsl
mov
insb
negl
fildl
cmp
out
lods
pop
bndldx
xchg
dec
lret
sbb
out
cmpsl
pop
jecxz
shlb
jl
call
call
daa
dec
push
lock
bound
in
mov
mov
push
mov
pop
inc
add
lret
outsb
inc
ljmp
daa
hlt
inc
xchg
lret
test
mov
sbb
ret
mov
or
filds
cld
sbb
fcoml
xlat
lock
icebp
or
sub
and
and
inc
or
out
adc
jb
int
pop
or
data16
pushf
cmp
lea
mov
jae
aad
lds
in
push
mov
mov
jecxz
or
adc
hlt
sbb
leave
mov
sbb
test
sub
add
in
xchg
sahf
sub
sbb
xor
jns,pn
fistpll
out
ficoml
das
ret
sub
clc
sub
xor
nop
inc
pop
ret
cmp
shl
insl
popa
jecxz
dec
dec
ret
xor
bnd
mov
insl
fidivs
mov
lea
repnz
cmp
sub
or
pop
or
je
jo
dec
pop
adc
addl
jbe
out
inc
sub
mov
dec
repnz
jecxz
cmp
push
inc
bnd
sbb
jns
push
loop
sub
movsl
xchg
mov
xchg
xor
and
divb
xchg
mov
pop
ficomps
es
or
test
sub
ds
cmp
pop
mov
in
ljmp
cwtl
std
xlat
fldcw
inc
loopne
cmc
clc
ds
sbb
jmp
jp
bound
cmc
xor
gs
sahf
mov
outsb
pusha
or
jo
jbe
scas
arpl
jecxz
shlb
jmp
mov
ljmp
and
mov
pop
push
mov
or
jns
les
adc
fcoml
and
loop
rorl
cmp
adc
sarl
xor
movsl
push
ds
adc
fisubrl
xor
scas
push
cmp
ljmp
sbb
or
sbb
leave
adc
cmp
fsubs
repnz
cli
jp
imul
insl
push
cmp
cs
dec
adc
push
cmpsl
cmp
mov
fs
loope
aas
loop
jnp
or
fadds
call
aas
shll
push
repnz
pop
imul
or
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
cmpsl
add
adc
adc
mov
pusha
sbb
btsl
sti
imul
jmp
pop
std
mov
add
popa
xchg
inc
pop
popf
stc
test
rolb
repz
sti
sbb
fwait
xchg
pop
shll
sbb
sub
outsl
lods
nop
cld
sub
iret
out
and
jp
or
adc
sub
aam
clc
orl
test
incb
pop
cld
sub
outsb
negb
adc
mov
sbb
xor
aaa
pusha
mov
jle
stos
xchg
and
imul
and
ljmp
addr16
je
adc
and
jl
pop
mov
cli
sti
stos
and
mov
pushf
mov
push
in
outsl
add
in
ret
inc
mov
in
sub
pop
lea
and
cmpsl
daa
inc
jmp
pop
fisubs
shrl
jle
push
insb
dec
stos
clc
xchg
add
daa
pusha
jnp
push
nop
adc
or
push
cwtl
and
mov
mov
js
xchg
in
sbb
mov
pop
jbe
pop
call
inc
adc
push
cmp
jge
inc
pop
sub
ja
push
aaa
jp
xchg
pusha
sub
stos
xor
cltd
mov
push
imul
sti
faddl
insl
mov
xor
jle
aaa
add
mov
and
std
mov
xchg
mov
mov
fsubl
push
mov
loopne
pop
xchg
aad
shrl
mov
data16
das
cmpb
fisubl
xor
sbb
es
adc
call
pop
dec
jne,pn
inc
sarl
xchg
sarb
insb
inc
hlt
out
mov
gs
shrb
jo
dec
add
or
dec
push
adc
xchg
bound
shrl
push
mov
test
aad
movl
mov
sub
jae
scas
daa
rclb
dec
dec
xchg
add
cmp
cmc
cmp
out
movsl
shrb
inc
and
andb
xchg
popa
je
mov
stc
dec
das
adc
mov
mov
sbb
cmp
daa
mov
xor
mov
xchg
aaa
mov
cmp
adc
in
cmp
shl
icebp
jbe
adc
ss
leave
mov
inc
xlat
jne
push
frstor
cs
sub
into
mov
sbb
push
jmp
push
les
inc
dec
add
fstpt
adc
sbb
test
push
fs
rep
fildll
lret
test
addr16
lea
push
insb
outsb
jl
mov
jge
in
mov
test
add
pop
int3
icebp
or
sbb
ds
std
jno
stc
inc
insb
shr
dec
push
int3
outsb
test
mov
sbb
call
mov
adc
jle
jp
sti
mov
shld
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
and
std
adc
adc
adc
sahf
xchg
loopne
sub
bound
movsl
and
psrlw
mov
orb
dec
mov
fstpl
popf
or
lods
cli
insl
and
mov
std
arpl
jecxz
push
pop
arpl
jle
fildll
sbb
xorl
repz
ret
loope
inc
stos
outsl
mov
inc
dec
fcmove
sub
enter
cmp
or
iret
adc
fsubs
test
or
pushf
and
lods
inc
stos
push
or
mov
fdivrl
push
adc
sbb
and
lods
movsb
cmc
cltd
xor
xchg
xchg
movsb
jmp
dec
xchg
push
fstpt
adc
cmpsl
xchg
in
mov
jb
cmp
xchg
xchg
jb
lock
push
cmp
sub
sarb
loope
mov
xor
add
fs
fscale
ffreep
xchg
mov
in
lds
push
cmp
push
mov
or
and
add
jecxz
fildl
dec
arpl
imul
test
subl
addb
cltd
int
clc
jnp
mov
push
gs
les
insb
fdivl
gs
pop
cmp
testl
loop
inc
push
mov
xor
sub
call
dec
pop
mov
xchg
pusha
mov
mov
sub
push
int3
mov
cltd
std
aam
pop
in
fisubrs
mov
outsl
loop
insl
dec
xchg
movsb
sbb
push
sbb
adc
or
je
test
pushf
cld
pop
shr
or
fucom
adcl
test
cli
dec
inc
or
cs
pop
jg
je
push
clc
add
push
mov
vpunpckhqdq
xchg
fldt
notl
add
sbb
dec
xchg
mov
sub
push
adc
sbb
and
les
inc
mov
loop
les
mov
push
pop
cmc
hlt
fisubrs
push
out
dec
adc
or
mov
cmc
or
test
loop
movsb
or
mov
cmp
and
dec
pop
or
mov
or
jmp
shl
lods
sarb
inc
stos
pop
fldl
cld
push
xchg
pop
push
les
nop
adc
or
dec
enter
add
mov
das
dec
jae
movsl
rcl
inc
pop
jp
imul
adc
stos
lcall
add
fmuls
mov
es
sub
imul
dec
fs
pop
cltd
outsb
lret
push
arpl
mov
sahf
dec
sbb
xchg
inc
xchg
jno
mov
movsl
jl
sbb
clc
xchg
bound
in
sub
mov
das
push
sub
scas
fldt
sub
outsb
push
dec
cmc
test
adc
cmp
pop
mov
ljmp
stos
mov
push
fists
pusha
fwait
sub
xchg
test
movsb
push
divb
add
mov
sbb
xlat
push
int3
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
push
je
popf
repz
adc
adc
fisubrl
hlt
outsl
cmpsb
jno
daa
cmp
mov
mov
jl
nop/reserved
push
test
in
cld
cmpsb
scas
sbb
aas
inc
jnp
leave
std
jb
cld
jle
sbb
mov
add
mov
lds
pushf
jle
aam
pop
repz
aam
in
sub
pop
pop
lods
cld
adc
mov
mov
stos
aad
negb
fs
xchg
insb
dec
aaa
scas
int3
push
push
xchg
jb
adc
aaa
dec
aam
pushl
mov
mov
mov
mov
jb
jle
pop
into
adc
stc
jecxz
mov
aam
popl
push
stos
fbstp
xor
js
or
cmp
in
jo
add
add
iret
mov
jae
imul
out
xchg
fisubl
ret
sbb
mov
into
bnd
hlt
dec
pop
pop
in
dec
stos
sub
fidivs
jb
push
jmp
sub
adc
adcl
popf
mov
cmpsb
into
repnz
mov
dec
sub
jle
inc
mov
jmp
insb
and
cli
popf
xlat
push
and
cmpsl
sbb
xor
aas
xchg
sbb
cld
add
xor
notb
xorb
insb
jge
jecxz
test
lret
adc
pop
flds
dec
and
fstl
mov
das
test
gs
lods
cmpl
dec
mov
xchg
and
xchg
dec
popf
dec
lahf
jbe
inc
ljmp
mov
inc
lods
xor
out
cmc
sub
jb
fcmovne
adc
jmp
mov
jle
vmread
inc
cmc
fs
dec
out
notb
dec
mov
scas
test
loopne
dec
jo
mov
pusha
pop
push
test
fs
sub
cmp
jne
lret
mov
mov
mov
call
cli
push
adc
sahf
in
inc
or
adc
or
shll
push
mov
sbb
mov
cmpsl
fsubl
dec
pop
cmp
push
jno
stos
inc
push
fiadds
out
pop
inc
cli
mov
push
aaa
or
mov
and
sbb
xor
xor
or
int3
dec
popa
mov
sub
test
aad
mov
mov
sub
jge
mov
inc
cmpsl
jmp
in
xor
add
push
push
pop
xlat
dec
mov
or
test
xchg
lock
cmpsl
rclb
in
loop
aas
dec
mov
fs
mov
int
pop
add
popa
pop
shrb
mov
dec
pop
cmp
scas
fldl
jne
rorl
xchg
ret
jge
aad
je
mov
mov
imul
dec
sarl
sbb
cmp
pusha
pop
movsl
jbe
jno
adc
and
aas
rorb
adc
sub
mov
cmpsl
pop
or
cmp
cmp
mov
jmp
xchg
cltd
bound
and
push
jo
jns
mov
adc
adc
rcrl
divb
lods
cmp
cltd
or
hlt
int
int
add
xchg
std
ja
add
dec
inc
stos
mov
int3
ficompl
sbb
cld
in
inc
sub
adc
push
and
mov
call
jecxz
cmp
or
fldcw
mov
mov
ds
in
ret
int3
aad
out
mov
push
adc
arpl
pop
fstpl
jp
push
adc
nop
stos
jns
ss
xchg
jg
movsl
js
subb
in
cltd
push
lret
jl
cmp
sti
test
add
cmpsl
sahf
call
ja
push
loope
rol
jae
or
out
addb
sub
sub
je
fcmovnu
mov
lods
ja
xchg
jae
sbb
push
insb
rorl
adc
xchg
cmp
aad
in
call
jecxz
out
and
or
test
movsb
cmc
add
and
sub
fiadds
mov
popa
outsb
mov
movsb
lds
fiaddl
dec
cs
xor
add
xchg
or
add
mov
or
idivl
push
notl
adc
in
jp
fstps
ficoml
in
testl
gs
mov
dec
sbb
das
daa
mov
dec
gs
jns
mov
scas
fildll
cmp
stos
stos
orl
dec
enter
insb
xchg
pushf
mov
push
mov
insl
push
mov
adc
fwait
repz
out
push
push
in
leave
sbb
js
or
sub
popa
and
daa
lods
scas
or
adc
stos
inc
addl
and
cmp
loope
sub
int3
in
or
rcll
daa
lea
jp
pop
push
outsl
das
pop
sti
lahf
pop
pop
and
and
loop
xchg
adc
fidivrl
leave
cltd
pop
xorl
pop
or
dec
xor
and
out
rclb
movl
push
ja
setnp
enter
pop
por
jbe
cli
out
leave
xor
icebp
lret
inc
inc
cmp
push
push
ret
enter
sub
je
nop
push
popa
jne
std
aaa
xchg
and
sahf
mov
mov
dec
push
add
mov
in
or
sbb
rolb
sbb
xchg
int
sub
les
sub
dec
arpl
sub
leave
or
push
xor
ret
sbb
adc
sbb
dec
mov
pop
push
insb
mov
or
pop
cmp
mov
and
in
insb
je
sub
push
fstpt
in
mov
rclb
pop
bound
mov
ficompl
fcomi
jae
cmpb
jp
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
lods
sarb
adc
adc
jl
loop
jle,pn
loope
dec
sub
loope
fisubrs
adc
or
in
inc
xchg
scas
pop
cmc
into
xor
xlat
dec
xchg
nop
je
daa
inc
mov
mov
mov
insl
cmp
lods
pop
ds
mov
or
scas
leave
fs
fcom
into
and
cld
jns
int
sbb
dec
cld
and
test
mov
xor
dec
push
repz
adc
rclb
js
cmp
mov
and
es
cmpsb
lods
pop
push
add
lds
inc
sbb
push
dec
cli
cmp
cmp
aas
cmpsb
sbb
jo
aad
or
sub
fwait
push
jg
stos
mov
test
movsb
mov
inc
cvtps2pi
xor
out
mov
push
mov
pop
insb
cmp
inc
loope
pop
imul
clc
gs
xor
imul
imul
dec
dec
xchg
loop
push
addr16
popf
out
jecxz
bound
fs
in
and
call
sahf
sub
push
aam
xlat
repz
test
test
push
pusha
dec
fnstenv
mov
pop
jmp
jnp
inc
in
cmp
lods
lods
cmp
add
xchg
xor
leave
and
test
ret
lahf
or
sbbb
arpl
sbb
mov
push
inc
mov
mov
mov
popf
mov
into
dec
clc
pop
ficoml
ds
fdivrl
xor
shll
fwait
dec
push
push
pop
sub
or
decb
jge
cmpb
in
jmp
and
mov
mov
addr16
sti
adc
repz
cld
adc
push
push
xor
or
ljmp
fmull
lods
mov
in
out
das
mov
int3
and
mov
inc
sbb
mov
jo
jmp
lods
mov
mov
cmc
ljmp
pop
push
jno
jg
add
repnz
xchg
cmpsb
mov
add
ds
daa
inc
lods
xchg
xor
imul
adc
sbb
rorl
aas
scas
stc
push
shll
xchg
iret
adc
add
dec
xchg
mov
insl
jmp
xchg
aad
and
or
pop
nop
fwait
pop
pushl
lock
inc
sbb
pushf
jecxz
lock
and
sti
int
enter
mov
dec
adc
hlt
pop
cmc
push
ds
cmp
out
xor
icebp
sbbb
mov
pop
mov
xlat
jecxz
pop
pop
pop
cmp
ss
or
out
pop
ret
sub
inc
pop
push
sub
pop
clc
or
pop
divl
sub
adc
pop
push
inc
cmp
sbb
xchg
testb
push
test
rcrl
stos
sti
pop
jb
and
in
cs
and
jl
stos
ja
dec
cmpsl
loop
xchg
mov
imul
xchg
add
sbb
int3
dec
dec
and
push
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
shl
stos
and
adc
adc
aaa
icebp
mov
out
jmp
inc
dec
clc
leave
lods
cld
and
sahf
push
sbb
push
dec
sub
fldcw
xor
xchg
out
xchg
xor
addr16
testb
lret
and
sbb
inc
sub
add
lock
adc
add
rcrb
sub
sub
sbb
add
out
dec
addr16
dec
push
push
ss
cli
in
or
loop
popa
notb
and
dec
sub
fisubrs
fcoms
adc
xor
inc
jne
int
add
jae
std
mov
mov
sbb
or
sbb
pop
dec
jns
mov
sub
add
movsl
std
push
stc
push
dec
out
lret
mov
xchg
shlb
xor
cmp
bound
insl
pop
cmpsl
cmp
push
sbb
xchg
test
xchg
test
adc
cltd
jnp
fs
ljmp
andl
pop
push
hlt
daa
inc
add
cmp
in
xchg
push
and
xchg
add
dec
data16
sahf
dec
int3
lds
pop
or
iret
std
mov
mov
mov
loop
push
fmull
dec
adc
xchg
ret
push
ljmp
mov
mov
test
arpl
pop
jb
js
std
sub
pop
push
mov
stos
nop
pop
cmp
outsb
cld
jno
pop
adc
imul
jb
clc
aaa
mov
loop
jbe
push
lret
adc
push
push
pop
cmpl
mov
jno
push
jne
dec
sub
add
jmp
cmp
jne
popa
arpl
rclb
rcr
les
je
sub
fsubrs
push
mov
ror
add
inc
and
scas
dec
or
jecxz
les
cmpb
lock
ret
in
mov
cmp
pop
outsb
in
or
into
sbb
pushf
arpl
cmpsb
cmp
imul
mov
pop
addr16
test
xchg
cmp
cld
adc
add
xchg
into
cwtl
cmp
pop
dec
xchg
inc
and
loopne
pop
aad
mov
jns
mov
inc
or
and
repz
inc
enter
repz
add
xchg
push
test
push
and
lcall
jmp
arpl
and
sub
mov
scas
or
dec
cmp
aam
jmp
sbb
lock
push
out
mov
enter
add
mov
out
test
insb
sub
imul
push
pop
push
mov
cwtl
push
in
out
push
xchg
cmp
push
out
scas
mov
sub
push
sbb
cmpsb
test
std
test
lods
shll
mov
push
fstl
mov
xor
mov
gs
repz
pop
dec
or
out
loope
insb
sub
iret
dec
test
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
loope
cmp
fcoms
adc
adc
xor
out
les
cmp
mov
mov
scas
mov
jge
add
mov
push
jge
pusha
cmpsl
lods
add
sti
xchg
inc
and
mov
pop
sar
stos
sbb
jle
shrb
cmp
cmpsl
outsb
and
insl
push
jbe
testb
int
insl
push
mov
sbb
adc
push
fcmovnu
mov
rclb
mov
jnp,pt
repz
cmc
cmp
insb
out
loopne
int
mov
addb
pop
iret
mov
popa
mov
dec
scas
sbb
clc
cmp
imul
push
int3
mov
pop
xchg
and
test
scas
orl
sbb
addb
and
lds
sbb
into
in
pop
and
dec
lret
sub
xor
shrb
lea
out
data16
pop
xor
xchg
arpl
pop
push
push
movb
or
push
add
dec
testb
sub
lret
and
ljmp
mov
pop
leave
sbb
cmp
pop
xchg
nop
xor
ss
mov
jns
cmp
lahf
dec
mov
movsb
out
cld
sbb
cli
cli
out
add
and
adc
testb
lret
jp
push
add
push
mov
push
mov
cltd
sbb
xor
call
mov
notb
mov
fidivrl
int3
stos
out
push
push
sbb
cltd
dec
adc
xchg
sbb
mov
jbe
rorl
shl
add
mov
popa
icebp
mov
mov
jne
data16
cltd
stos
ljmp
movsb
and
jp
mov
cmp
rorl
test
movsb
stc
mov
push
fsts
dec
aas
cmp
and
ss
mov
xchg
xor
push
scas
pushf
cltd
sbb
int3
out
xchg
loopne
push
cld
fsubl
xchg
push
pop
fiaddl
fwait
mov
mov
pop
pop
ficompl
inc
rcrl
or
mov
shlb
stos
lahf
pop
mov
mov
push
in
insb
loop
dec
call
xchg
fnop
sub
sbb
bound
les
mov
mov
xor
jg
mov
jmp
mov
push
cmpsl
in
std
or
push
add
ja
pop
inc
pop
mov
hlt
int3
shlb
push
xchg
inc
sub
lea
cmp
or
dec
iret
pop
in
jecxz
jp
pop
or
add
loope
data16
mov
cmpsl
push
mov
push
jo
fwait
and
iret
adc
addr16
dec
jle
adc
mov
js
rorb
mov
xchg
sbb
add
das
mov
call
push
into
xchg
push
jge
sub
sub
mov
and
repz
inc
inc
cmp
repz
xchg
jg
mov
icebp
push
sahf
insb
adc
in
or
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
cmpsb
pop
mov
adc
adc
and
ljmp
adc
dec
fnsave
test
es
xor
or
aam
mov
push
or
add
sub
test
sbb
sub
mov
jnp
movsl
jbe
mov
fldt
xor
shll
or
adc
fstpl
aas
popf
cld
push
rcrl
add
mov
add
adc
scas
jg
shlb
sub
push
ljmp
mov
outsb
popf
and
repnz
xor
stos
test
lods
xchg
xorl
arpl
aam
jmp
sahf
rdpmc
scas
push
inc
in
gs
jl
pop
shr
std
cmpsl
pop
fmul
ds
ja
mov
jnp
lea
add
pop
mov
loop
push
sahf
pop
imul
fcmovnu
lcall
sub
cmp
xor
iret
push
or
push
lret
cmp
push
jnp
cli
adc
xchg
dec
and
or
adcl
add
pop
les
insl
jae
xchg
or
adc
in
xor
cmp
test
xchg
adc
sub
inc
lock
in
mov
push
mov
cltd
sbb
lods
into
sub
test
xor
mov
sbb
stc
adc
cmpsb
ret
push
int
mov
mov
inc
out
lret
outsb
mov
pop
mov
xchg
xchg
push
mov
mov
jo
xchg
aad
addr16
arpl
inc
decl
adc
inc
insl
popa
in
hlt
xor
lret
cld
dec
fidivrs
mov
or
fnstsw
inc
sbb
popl
push
bound
arpl
sbb
mov
jecxz
fistl
sti
imul
pusha
js
cmp
jo
in
cmpsl
cwtl
mov
mov
test
xor
cmp
inc
inc
test
pop
push
jns
out
inc
pop
and
jmp
jne
mov
and
inc
popa
ljmp
dec
xor
xor
jmp
cmpb
ds
mov
or
adc
fadds
xorb
mov
mov
push
mov
mulb
aaa
inc
xchg
or
jne
push
stos
jae
jno
pusha
sahf
lea
popa
xchg
in
or
fs
jo
push
pop
jae
fistpl
lods
into
jne
int3
repz
inc
jl
mov
hlt
cmp
je
popf
sbb
jl
cmp
mov
jo
loop
adc
fcmovu
push
inc
test
mov
dec
sub
vmovntps
adc
std
mov
lcall
push
cmp
push
xor
push
inc
arpl
xlat
jnp
into
cltd
scas
pop
mov
jecxz
mov
dec
sti
aam
es
xchg
scas
jge
addl
outsb
inc
push
aam
add
lds
neg
scas
lret
sti
fidivl
jmp
cmp
adc
ja
inc
sub
aas
jns
cmp
xchg
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
dec
adc
mov
adc
adc
fnstsw
std
frstor
xchg
sub
lods
cwtl
shl
dec
cmpsl
mov
sbb
mov
adc
inc
dec
adc
fimuls
pop
push
aaa
test
dec
xchg
stc
inc
ljmp
or
lret
leave
cltd
dec
imulb
inc
out
push
arpl
testb
pop
mov
push
sahf
inc
orb
mov
jb
imul
dec
xchg
ja
aas
hlt
hlt
mov
ljmp
lahf
mov
dec
jmp
ds
out
inc
cmp
out
xor
shll
fists
jbe
sti
aam
sbb
into
sub
incb
mov
popa
xchg
shl
out
cmp
jne
pop
in
pop
lret
fidivs
mov
rorb
mov
push
dec
mov
mov
xor
in
mov
lea
or
add
mov
jge
or
sti
imul
test
mov
adc
pop
and
adc
pop
into
cs
jne
pushf
imul
insl
jge
ds
inc
push
mov
test
mov
add
iret
int3
and
mov
mov
andb
daa
jnp
pushf
fldl
test
pop
lcall
cmp
test
mov
fmul
push
ds
stc
pop
adc
push
outsb
jecxz
das
dec
faddp
pushf
adcl
inc
in
or
cld
pop
pop
lods
dec
mov
xor
repz
adc
xlat
pop
cmp
testb
inc
add
push
nop
xchg
imul
testb
jge
popa
jbe
ss
dec
sub
add
fdivrs
pop
xchg
cs
adc
jbe
aaa
and
cmp
xchg
jne
cltd
fmul
inc
mov
xchg
pop
pop
pushf
mov
inc
ret
or
aaa
iret
cmpsl
xor
jmp
std
and
mov
mov
insl
mov
mov
lea
xor
mov
dec
mov
lock
inc
out
jg
daa
rolb
sbb
mov
xor
add
imul
repnz
rcl
adc
mov
mov
sub
xorl
or
and
push
pop
sbb
test
in
stc
cmp
hlt
xor
rol
add
push
mov
adc
dec
scas
xchg
add
shlb
jb
shrl
jge
or
pop
into
int
in
pop
jl
outsb
lret
cmpsb
cs
divb
cmp
dec
jnp
in
call
mov
outsb
int3
mov
sub
lret
aaa
mov
iret
addr16
scas
incb
sub
mov
fnsave
mov
shll
cmp
out
inc
xor
test
push
add
pop
int3
mov
cli
inc
or
sub
cmp
mov
cmp
js
fsubrs
and
fcoml
cmp
out
cltd
cs
jmp
inc
add
push
ret
lahf
adc
popa
rorb
adc
lcall
test
push
inc
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
add
ss
mov
adc
adc
shr
sub
cld
mov
pop
dec
mov
lret
jecxz
pushf
mov
xor
cltd
in
xchg
xorb
movsl
mov
into
mov
mov
test
xchg
jecxz
mov
mov
fisttpll
test
mov
sarl
stos
mov
xchg
icebp
sub
adc
sub
rep
std
imul
mov
inc
sti
sbb
into
popa
aaa
jge
xor
nop
cmpsb
cli
and
or
or
push
dec
insl
xchg
test
cmpsb
jg
mov
mov
jmp
test
cli
clc
ljmp
inc
mov
lock
jb
mov
repnz
ja
inc
dec
aaa
out
pop
xor
cmp
xor
js
push
dec
mov
jno
adc
iret
inc
imull
and
in
dec
sbb
daa
out
out
xchg
mov
or
dec
sti
cmp
add
sbb
insb
mov
in
ss
pushl
add
push
and
mov
xor
mov
sbb
testl
jnp
stos
enter
inc
lods
cltd
jb,pt
jmp
popa
push
mov
dec
sbb
cmp
fs
out
push
aam
fucom
xchg
inc
dec
add
movsl
mov
movb
mov
addl
xor
mov
rcr
xchg
aam
and
xchg
pop
or
push
mov
scas
and
aas
and
mov
daa
xchg
sarl
lcall
cmp
mov
dec
in
cmovo
xchg
cmp
jg
cltd
movsl
test
sbbb
jmp
sub
adc
adc
jne
sahf
test
popa
xchg
mov
pop
mov
shl
xchg
mov
push
dec
insl
movsb
dec
ja
pop
cmp
leave
jp
stc
adc
dec
adc
out
out
lods
cmp
cmc
pop
lea
into
jnp
test
cmp
hlt
and
outsl
loope
xchg
mov
mov
sbb
jmp
xchg
pop
test
or
pop
js
xlat
aad
popf
in
es
lods
pushl
add
dec
dec
out
mov
popf
adc
ret
sahf
clc
sub
push
lea
mov
dec
or
insl
xchg
loop
std
in
sub
es
lock
hlt
dec
or
fwait
add
fiaddl
lock
push
clc
sub
inc
adc
sub
je
xchg
pop
std
cmpsb
ret
js
and
pusha
je
test
jnp
inc
ds
addb
xchg
dec
or
inc
jl
cmpsb
push
push
xlat
in
lcall
inc
shlb
cmp
sahf
xchg
inc
xor
sub
adcl
cld
repnz
adc
fwait
inc
pcmpeqd
mov
inc
add
inc
and
mov
pop
icebp
inc
movl
push
sub
js
sbb
outsl
cmp
or
xor
jle
stos
push
cwtl
pop
cld
loop
mov
xchg
rcrb
sti
test
push
sub
imul
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
sarb
roll
dec
add
and
nop
cmp
pop
and
and
aad
adcl
cmp
push
mov
xor
dec
cmp
and
rol
jl
xchg
and
xchg
fdiv
mov
fidivrs
mov
mov
add
mov
sub
insb
jae
cmp
inc
mov
incb
mov
jecxz
out
fwait
dec
push
dec
ret
inc
jnp
cld
lds
jmp
mov
xchg
fdiv
xchg
xor
ret
add
lret
xor
sbb
test
xchg
push
push
gs
sbb
ss
adc
les
sub
fisubs
in
push
cmp
cmp
xor
out
cmp
cld
sbb
jns
subl
add
add
cwtl
xor
dec
sbb
mov
cwtl
inc
xchg
jo
sub
inc
and
jo
sahf
mov
inc
out
cmp
adc
in
dec
dec
in
jns
push
inc
stos
xchg
call
sbb
pop
push
sarb
pushf
mov
push
std
or
cwtl
pop
roll
xor
or
push
adc
jmp
push
sahf
or
cmp
jbe
sbb
js
push
loop
fbstp
jge
mov
sub
les
xor
push
push
mov
pop
lds
div
push
mov
sub
pop
out
bound
mov
vpsrlq
inc
nop
pop
dec
fprem
fmull
adc
call
cmpsb
mov
lock
sti
imull
pop
push
addb
push
mov
add
mov
fisttps
xchg
cmpsb
outsb
pop
test
mov
push
xchg
inc
repz
into
or
fnop
fistpll
dec
hlt
push
sub
sbb
pop
or
mul
fcmovbe
sub
push
cmp
mov
pop
sahf
inc
mov
adc
in
int3
mov
sbb
lods
cmp
subl
ret
test
pop
pusha
mov
and
jle
push
mov
jns
ss
cmp
shl
mov
mov
sub
dec
testl
popf
adc
in
jo
rcll
sbb
inc
xchg
loope
and
ret
das
leave
and
mov
pop
adc
mov
push
inc
dec
ror
or
leave
shlb
mov
sub
jne
je
cmp
cmpl
in
push
scas
mov
mov
sub
jp
xor
inc
xchg
and
stc
xor
adc
loope
sub
lahf
pop
push
adc
and
xor
pop
jbe
aad
ret
push
pop
xor
flds
cmpl
leave
sub
in
and
jbe
pop
jle
sbb
mov
in
and
std
ret
xchg
mov
sub
loop
shlb
push
or
imul
gs
ret
mov
xor
ret
adc
mov
outsb
pop
push
lock
inc
imul
leave
cmp
sub
jb
adc
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
stos
push
mov
adc
test
xchg
sbb
imul
add
and
xchg
js
and
in
lret
dec
cltd
repnz
not
mov
or
sbb
cmc
inc
push
pop
push
push
inc
clc
xchg
aad
adc
dec
lahf
rolb
jge
pop
cld
dec
jp
mov
jge
xor
mov
faddl
fwait
mov
into
sahf
and
imul
dec
shrl
adcb
adc
cli
lds
addr16
int3
test
adc
sahf
mov
scas
xchg
aas
jnp
cwtl
jge
rorl
xlat
inc
mov
push
push
or
mov
add
jge
inc
push
jnp
push
aad
pusha
adc
testb
mov
les
fnstenv
out
xor
popf
lcall
idivl
dec
add
xchg
test
xlat
adc
inc
ljmp
or
in
cmp
aad
push
lods
scas
xor
out
mov
xor
ret
scas
adc
loopne
rcrl
pop
xchg
mov
loop
arpl
mov
iret
imul
add
lret
mull
lds
scas
cltd
cli
xchg
dec
loopew
loope
in
inc
push
mov
sbbl
xchg
lret
mov
cmp
sub
fldt
arpl
inc
mov
jb
xchg
imul
jbe
ret
movsl
bound
fcmovnu
dec
iret
or
xchg
enter
add
sbb
sbb
cs
bound
adc
xor
dec
jns
in
cmp
adc
jns
sbb
int
mov
je
std
scas
out
out
push
rorl
mov
hlt
cmp
and
push
into
ss
or
sbb
push
popa
and
in
mov
fldenv
dec
cwtl
stos
jg
mov
pop
stos
test
pushf
cmp
mov
shrb
add
jae
mov
add
in
mov
clc
dec
add
jl
in
aas
hlt
fstpt
int3
in
shll
xlat
and
sbb
pop
repnz
cmp
test
pop
into
xchg
and
push
sub
nop
jo
dec
xor
das
repz
xchg
cmp
pop
outsb
movsb
aaa
mov
hlt
or
add
in
mov
xchg
mov
jo
sub
push
adc
and
call
ss
cmp
push
dec
lea
inc
pop
imul
aaa
jo
cli
popf
stos
rol
je
ret
test
and
lock
xchg
inc
out
leave
push
jle
jmp
lock
mov
mov
sbb
aas
sub
cmp
fdiv
mov
lcall
gs
test
cmc
imul
dec
jmp
dec
add
movsl
test
lods
jno
or
pop
add
sub
sahf
rcrl
push
mov
jecxz
pop
sub
insl
call
mov
in
rcr
add
xchg
adc
clc
scas
rolb
inc
pushf
loopne
lds
out
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
hlt
aaa
fs
mov
adc
adc
pop
int3
out
fildll
xchg
test
xchg
jbe
mov
aaa
dec
mov
add
negl
stos
add
push
fildl
test
div
jne
mov
push
int3
sarb
icebp
dec
popf
or
rcll
sbb
in
pop
dec
adc
lret
push
adc
dec
das
xor
xchg
leave
lcall
and
pop
insb
repnz
rorl
cmp
push
xor
mov
jmp
jno
xor
jo
push
push
or
int3
pop
loopne
mov
cmpsb
push
repnz
jo
inc
mov
pop
js
aad
push
sbb
movsl
and
pop
cmp
int
cmpsl
mov
xchg
gs
xor
mov
stc
arpl
pop
xchg
xchg
outsl
inc
in
pop
add
inc
scas
push
or
push
iret
sub
je
ljmp
mul
add
je
inc
lds
xchg
sub
cmp
add
scas
ds
addr16
cmp
push
icebp
imul
xchg
mov
add
sbb
add
in
fs
outsb
pop
dec
inc
stos
push
cmp
mov
adc
push
ffree
pop
jge
add
fidivl
xor
fistps
in
inc
sbb
jnp
jmp
mov
in
movl
sbb
jmp
ljmp
cmp
xor
aad
in
cwtl
mov
fucom
pop
cmp
sub
jle
cli
push
inc
xorl
xor
pop
jle
sbb
outsb
and
lea
arpl
insb
popf
jnp
aam
outsb
sbb
add
sbb
push
aaa
pop
adc
cmpsl
and
adc
fdivrs
mov
dec
push
outsl
mov
or
inc
add
outsl
mov
rolb
xchg
push
dec
jnp
lret
jecxz
sar
or
jbe
jle
cmp
clc
push
jbe
mov
mov
cmc
dec
jg
adc
push
add
add
repz
push
jmp
xor
sub
jge
cmp
shll
mov
cmp
mov
inc
jle
in
pop
ds
or
or
mov
sahf
icebp
rorb
or
shl
xchg
sti
and
jg
int
add
in
adcb
or
repz
dec
pop
cmpsl
cmp
mov
sbb
push
stos
or
jbe
adc
jno
or
and
negb
sub
pop
xchg
or
pop
das
jp
add
cmp
push
dec
xchg
cltd
nop
pop
add
outsl
lods
out
pop
imul
lret
enter
out
enter
gs
addr16
mov
sbb
pop
xchg
cmp
test
pushf
test
lock
mov
imul
xchg
cltd
pop
inc
inc
inc
xchg
dec
addr16
test
je
test
xchg
and
subb
adc
mov
adc
pop
push
sbb
lds
dec
imul
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
mov
push
push
scas
adc
adc
adc
xor
add
mov
or
cmc
xor
inc
clc
or
and
movsb
out
fsubrl
test
int
not
fcmovbe
faddl
iret
add
sbb
push
add
cwtl
jbe
adc
loop
sbb
jmp
call
inc
and
jbe
movsl
lahf
xor
stos
cmc
mov
mov
cmc
js
dec
inc
sbb
fidivrs
cwtl
repnz
icebp
push
jecxz
pop
jae
sahf
inc
lods
imul
aaa
jnp
and
out
fistpl
rclb
sbb
dec
fisttpll
scas
xchg
aam
pop
ret
xchg
clc
pusha
movsb
in
movsb
fwait
outsl
lock
int3
cmpsl
out
sbbb
rclb
xor
push
pop
aad
arpl
imul
pushf
mov
xchg
and
stos
nop
cmp
enter
mov
repnz
clc
fcoml
cmp
inc
cmp
pop
push
outsl
mov
sbb
fisubs
jecxz
dec
out
mov
mov
daa
adc
dec
loop
cmp
cmp
subb
push
xor
int
lock
jbe
out
mov
push
push
inc
sub
imulb
mov
sbb
nop
cmc
out
out
insl
arpl
shll
popf
test
cmp
pop
pop
adc
aas
out
rclb
sbbl
outsl
fsubrs
inc
push
stos
jle
add
mov
pop
ss
js
xor
lret
jne
jge
mov
xchg
push
ds
push
mov
test
dec
push
mov
inc
repz
xchg
leave
es
and
daa
pop
je
mov
push
xchg
lcall
xchg
push
push
xchg
add
icebp
pop
push
pop
jp
add
fnstenv
jp
push
cmc
cmp
nop
stos
xorb
loop
add
pop
inc
sub
sarb
ljmp
add
mov
push
jae
cmp
les
fisttps
lds
aad
das
cmp
add
outsb
xchg
leave
xchg
je
lahf
in
cs
mov
cmpsl
pop
in
sub
lds
xchg
fisttpl
jnp
ret
and
shlb
dec
push
add
shrl
cltd
jnp
pop
mov
jb
add
and
test
add
outsl
stc
nop
mov
sub
dec
ret
add
insb
pop
pop
and
push
xchg
fs
fdivrl
mov
sbb
adc
das
js
lods
jb
int3
fdivl
ljmp
popa
adc
jle
leave
mov
aas
adc
mulb
cmp
dec
mov
in
ss
stos
stos
add
hlt
fistps
pop
and
test
pminsw
repnz
fisubrs
adc
jb
inc
push
xchg
push
add
mov
or
sahf
addr16
jl
mov
xchg
pop
mov
sub
loop
xor
xor
insl
mov
sbb
add
test
or
cmp
mov
xchg
push
inc
scas
loop
xor
into
mov
in
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
nop
push
push
movsb
adc
adc
adc
in
and
repz
add
mov
or
bound
add
aaa
push
jmp
mov
or
in
popa
loopne
out
sbb
gs
inc
push
cs
mov
hlt
movsl
adc
jb
cmp
mov
cmp
movsb
hlt
jno
fwait
das
imul
inc
or
add
fdivs
sbb
jle
cmp
dec
xchg
into
ds
xlat
mov
aas
jae
into
mov
mov
xor
ds
lret
or
bound
decl
test
mov
pop
stos
insb
mov
sbb
mov
leave
or
pop
inc
xchg
and
movsb
jae
mov
stc
adcl
movsb
mov
sti
ret
jmp
ret
sarl
pushf
js
lock
sub
dec
dec
movsb
jno
pusha
into
pop
rolb
int3
inc
push
lds
or
adcb
mov
xchg
inc
push
idiv
and
pusha
fcomps
in
fisubrl
adc
out
jg
outsb
cmpsb
or
and
adc
push
jge
cmp
ljmp
addl
jae
in
mov
jno
stos
daa
or
push
mov
and
xorl
icebp
aaa
cmc
rolb
mov
mulb
mov
jmp
in
and
cmp
jecxz
insl
adc
inc
fbld
xchg
push
inc
cli
xchg
xor
fwait
sbb
bound
shlb
pop
mov
loope
cmp
mov
cmpsb
and
add
pop
cmp
add
adc
cmp
jp
and
mov
sbb
and
dec
xchg
outsl
sbb
sub
pop
popf
or
in
push
and
sbb
sbb
pop
pop
cmp
and
lahf
cmp
repz
xchg
movsl
scas
std
subl
lea
aas
pop
movsb
push
iret
xor
pop
dec
scas
sub
mov
cwtl
mov
mov
and
cmpl
call
filds
adc
jno
xchg
in
inc
cld
scas
xchg
addr16
or
dec
push
jno
lods
addr16
jg
popa
pop
adc
imul
movsb
addb
dec
jns
jb
mov
jno
mov
cli
fcmovb
add
sub
pop
cwtl
or
les
repnz
cmc
or
or
jb
out
or
push
das
jg
rol
cmc
lahf
xchg
in
inc
je,pt
rolb
jg
mov
ror
and
inc
push
mov
xchg
sti
cli
dec
addr16
sub
popf
and
add
jle
stos
adc
orl
mov
fildll
mov
cli
mov
pop
lock
std
fimuls
subb
orb
mov
int3
pop
cmc
icebp
sub
or
cmc
popa
in
ret
jb
add
push
lret
int3
or
pop
mov
ret
repz
or
dec
lock
mov
add
pop
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
addr16
pop
lods
nop
pushf
adc
adc
adc
loope
xorl
cmpsl
mov
pop
fucom
sub
xor
js
repnz
mov
popa
popf
and
loop
fidivl
or
jns
pop
pushl
sbb
xchg
cvtpi2ps
pushf
lock
stc
mov
inc
pop
pusha
mov
lret
gs
lock
push
dec
push
xor
cmpsl
into
popa
lea
mov
xor
xorl
xchg
adc
mov
xchg
mov
xchg
cli
mov
adc
icebp
nop
push
push
lods
daa
xchg
push
cltd
sbb
and
mov
mov
xorb
adc
insb
or
fmuls
xchg
cmp
lret
movsb
mov
adc
sub
bound
sti
mov
gs
andb
xchg
enter
loopne
lahf
sub
shrb
adc
xchg
push
add
sbb
in
dec
popf
movsl
lock
sarb
jge
adc
adc
pop
sub
adc
loop
aad
aas
out
xchg
outsl
andl
push
rcr
outsb
fdivrs
sti
lret
fwait
je
sbb
es
xor
xor
lcall
cmp
push
xchg
inc
mov
xchg
inc
or
in
jge
call
ret
adc
push
in
stos
in
mov
cmp
inc
mov
pop
push
pop
scas
arpl
xor
and
pop
mov
dec
stos
iret
inc
fcmovbe
imul
cmp
adc
jbe
mov
jmp
les
xchg
mov
dec
aad
pop
sbb
popf
popa
icebp
scas
cmpb
or
jg
in
push
jnp
push
push
push
xchg
daa
mov
lea
inc
xlat
add
mov
inc
sbb
xchg
out
std
out
mov
add
dec
sub
xchg
cmc
xchg
out
push
xor
jae
sub
cmp
add
in
add
cmc
fidivrs
mov
shrl
neg
mov
sbb
cmp
sbb
mov
adc
jo
xor
push
mov
mov
test
cmpsb
sbb
js
fwait
adc
pop
mov
xor
popf
out
and
cltd
data16
lock
sbb
aam
inc
add
mov
sbb
sbb
cs
dec
dec
aad
jb
xorb
inc
cmc
push
jg
mov
dec
push
or
idivl
jne
mov
lods
hlt
test
pop
pop
push
ficomps
mulb
leave
inc
xchg
rclb
pop
scas
lcall
or
xchg
in
jae
inc
jecxz
lock
ja
push
mov
inc
pop
add
cld
js
or
js
sbb
rcl
lods
movaps
addl
call
adcl
dec
nop
jbe
and
pushf
jb
bound
nop
repnz
clc
insb
in
int3
or
pusha
push
ja
mov
push
fcoms
jle
mov
mov
xchg
adc
dec
or
leave
xor
shl
xor
or
add
mov
jmp
xor
and
xor
adc
adc
ret
loope
jp
jecxz
xor
sub
cmp
dec
loopne
les
out
scas
adc
adc
adc
mov
and
jl
jp
cltd
fcmovnb
sarb
pop
inc
int
arpl
fs
iret
mov
data16
pop
call
add
imul
addr16
sbb
push
sbbb
outsb
inc
and
out
dec
cmpb
and
lret
sub
pushf
mov
dec
pusha
mov
mov
xor
in
xor
test
adcb
add
lock
push
fstpt
or
repz
jbe
js,pn
adc
sbb
jl
ret
fnstsw
and
cmpsb
xor
push
mov
sbb
jnp
fdivl
loopne
sbb
outsl
inc
mov
pop
aas
pop
dec
daa
xchg
jge
inc
jo
das
divb
daa
cmp
shrl
jmp
jmp
movsb
adc
lret
and
movsb
leave
pop
pop
lcall
mov
aas
cmp
xchg
js
inc
mov
xor
jmp
loope
mov
dec
cltd
push
aad
xor
leave
shlb
push
dec
imul
imul
outsl
mov
stc
imul
mov
xchg
jecxz
mov
insb
mov
aas
push
test
adc
es
pop
mov
je
lock
add
jmp
add
in
or
in
cmpl
mov
inc
jmp
mov
imul
xor
inc
inc
pop
cmp
sbb
xchg
sbb
and
jns
lds
adc
sub
sbb
dec
ljmp
adc
loopne
iret
ja
scas
or
fucomip
ret
clc
xorl
sub
cmp
sbb
mov
lods
ss
adc
add
daa
lcall
lds
mov
cmc
adc
adc
adc
call
pusha
rcrb
mov
stc
addr16
sub
pop
or
mov
call
js
pusha
repnz
test
cmp
loope
mov
aad
mov
mov
cmpsb
cmp
push
push
jp
aad
xchg
xchg
loop
mov
into
xchg
bound
jns
dec
popf
jnp
pop
fdiv
push
pop
and
adc
sti
pop
and
jnp
stos
int3
les
or
out
cmp
inc
mov
movsl
cmpsl
mov
popf
testl
callw
mov
or
shll
enter
mov
mov
clc
fs
out
inc
inc
es
stc
sbb
mov
mov
push
popl
out
sub
fiaddl
dec
inc
push
jbe
je
mov
push
pop
std
jo
imul
cmpsb
mov
sub
aam
mov
fcompl
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
popa
loopne
insb
sub
adc
xor
xor
xchg
and
cmp
mov
mov
pop
in
jecxz
mov
lret
fistpl
or
pop
pop
repnz
cmp
push
push
jno
int3
movb
ljmp
out
aaa
sahf
mov
mov
mov
and
inc
push
iret
push
xchg
xorb
inc
jo
xchg
in
movzwl
jo
stos
xor
cmovle
popf
in
rcrb
mov
mov
frstpm(287
push
sbb
mov
in
pop
push
jno
int
xor
lods
cmp
test
pop
loope
cmpsb
adc
repnz
push
mov
stos
mov
roll
lret
outsl
mov
repnz
fs
adc
lods
in
mov
push
dec
loopne
push
movsl
testl
js
pop
mov
adc
or
jbe
aas
push
dec
add
push
sbb
int3
sarl
mov
mov
or
jecxz
pop
scas
xchg
dec
pop
lret
out
loop
popa
cmc
mov
push
inc
xor
jne
mov
xlat
push
push
into
jae
cmpsb
adc
jl
fidivrs
fwait
sbb
call
dec
sahf
inc
sahf
dec
rclb
sbb
cmp
clc
dec
pop
sbb
adc
fstpt
out
xchg
pop
pop
push
and
or
stc
pop
push
sbb
cmp
lcall
xor
data16
or
ss
movsl
pop
fisttpll
int3
cmpsl
das
sbbb
adc
pop
mov
outsb
push
xchg
push
mov
stos
mov
jns
mov
fs
jb
jo
gs
add
cltd
out
xlat
shlb
or
out
mov
rclb
pop
mov
int3
ret
pop
push
fnstsw
fstl
repz
push
imul
movsl
xor
call
cmp
push
scas
sub
fwait
bound
fisubs
mov
out
ja
sbb
ret
and
inc
subb
js
lea
inc
or
mov
push
pop
mov
lock
fadd
cltd
out
shl
xchg
in
loop
xor
and
aam
das
xor
or
jg
rorl
push
mov
into
ljmp
push
out
gs
shlb
lock
sti
sti
fmull
jne
mov
stos
shll
mov
mov
mov
sbb
daa
jno
mov
sbb
orl
xlat
std
mov
jecxz
sbb
push
test
les
push
lret
sbb
ret
sub
adc
cwtl
cltd
insb
popa
cmp
nop
pushf
movsb
dec
xor
addr16
xchg
add
adc
test
jp
int
xchg
mov
pop
int3
push
into
flds
jge
jns
add
xchg
inc
inc
and
fistpl
mov
sbb
pop
loopne
push
sub
rorb
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
scas
mov
push
mov
adc
adc
push
icebp
pop
jo
in
cmp
aam
cs
cmp
mov
push
sbb
dec
cmc
xorb
dec
push
loop
sub
xchg
jb
sub
ret
negb
xlat
pop
in
test
mov
add
push
xor
jb
inc
adc
pusha
out
into
add
and
sahf
jne
push
ret
jns
push
push
js
movsl
push
adc
imul
sub
daa
dec
nop
fs
insl
out
in
add
add
jl
icebp
nop
mov
or
insb
jg
nop
xorl
cld
popa
jne
ljmp
lock
sub
lahf
dec
or
jle
shlb
jmp
ret
mov
shlb
or
xor
js
pop
stos
jecxz
out
mov
xchg
mov
jmp
jle
or
test
sub
add
fidivl
gs
xor
test
icebp
shrl
xchg
jp
xchg
popa
idivb
addb
cmc
xlat
insb
je
and
and
or
or
jle
les
push
imul
gs
dec
adc
jp
in
inc
psllw
mov
mov
mov
popf
ret
jnp
pop
pop
inc
sub
sub
jle
pop
je
xor
addr16
shrb
jnp
stc
sub
popa
and
xor
in
or
lock
xor
mov
rcl
dec
adc
xor
pop
and
movsb
jae
dec
mov
lods
aad
pop
mov
jl
xchg
out
mov
call
pop
xchg
fisubs
add
and
insb
jno
out
je
cmp
sub
jecxz
cmp
out
mov
outsl
pop
xor
sahf
pop
mov
lret
mov
push
xchg
pushf
inc
sub
mov
loop
imulb
lods
stos
in
lods
adc
daa
addr16
test
das
push
mov
pop
push
fdivrl
test
push
xor
push
insl
scas
std
icebp
aad
mov
insb
jmp
lret
xor
push
add
pop
mov
rclb
std
pop
insb
pop
dec
lock
enter
xor
pop
scas
or
rolb
popa
xor
jle
jmp
ficoml
mov
movsb
mov
jl
stc
mov
enter
jns
outsl
lods
roll
inc
xor
xchg
and
add
es
imul
cmpsb
dec
push
inc
push
mov
cmp
ret
cmp
add
fwait
jns
movsb
insb
sub
mov
jb
or
dec
pop
out
pop
aaa
mov
or
xchg
inc
mov
aas
push
dec
aam
test
movsl
shrb
shrb
in
sbb
jbe
mov
lods
mov
sbb
ja
stc
mov
lahf
cmp
xor
test
cmp
loope
shll
dec
push
rcr
rcl
or
xchg
jo
pop
out
mov
adc
inc
pushf
ss
jae
ficoml
test
scas
xlat
rorb
ja
imul
lret
jmp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
xor
mov
jle
fdivrs
and
fisttpll
movsb
jae
data16
setb
jp
jmp
movsb
adc
mov
scas
mov
lcall
jno
ja
add
dec
or
cmpsb
stos
jl
jg
pop
sbbb
cmpsl
fidivl
push
outsb
jle
fnstsw
push
stos
out
xor
lock
mov
adc
cli
lea
arpl
dec
push
jns
loop
sub
test
pop
mov
and
mov
pop
sbb
dec
xchg
mov
or
scas
adc
dec
hlt
sti
dec
test
es
push
cmp
outsb
stos
call
scas
loop
sahf
movsb
fwait
mov
jle
mov
dec
mov
mov
sub
mov
push
cld
push
push
sbbl
aaa
cmp
cmp
sbb
out
test
mov
les
pop
mov
push
inc
test
cli
das
lret
int
mov
fwait
mov
push
test
loop
pushf
push
movsl
sahf
jl
xor
sbb
test
les
xchg
fists
and
jb
jg
xchg
jecxz
jmp
pop
jo
push
add
jg
lret
ret
or
dec
adc
lods
mov
insb
lret
pop
enter
xor
sub
into
or
cli
jl
sbb
pop
cltd
or
or
gs
fwait
xchg
or
mov
in
hlt
cmpsl
frstor
add
mov
imul
or
cmp
push
add
mov
leave
daa
inc
cmp
fnsave
cli
pop
imul
sbb
add
and
es
dec
inc
cmp
add
mov
mov
out
cli
loop
adc
in
mov
xor
and
aas
imul
xor
jmp
pop
mov
mov
mov
add
fildl
shll
sub
cltd
shrd
cli
sbb
or
or
or
sbb
inc
xor
push
clc
out
daa
adc
dec
shll
out
adc
sbbl
test
repz
test
fwait
xlat
bound
roll
sub
push
push
jbe
rolb
out
add
xchg
mov
arpl
fists
pop
xchg
mov
dec
cld
push
pushf
pop
xlat
enter
cmpsb
fists
mov
std
jne
push
adc
inc
rcll
in
or
cmpsb
sbb
lret
lock
adc
push
aad
dec
mov
dec
xchg
dec
pop
jmp
les
jl
add
pusha
xor
mov
cmp
xchg
inc
adc
iret
int
int3
iret
lock
jb
addb
inc
cwtl
cmpsb
negb
xchg
xlat
cmpsl
adc
cs
mov
xchg
or
out
loop
or
sub
cmp
lods
sub
pop
pop
out
fldcw
xor
mov
add
sub
push
jbe
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
mov
adc
adc
popa
loopne
mov
mov
lret
dec
addr16
jo
call
mov
lcall
fisubs
je
in
jge
fdiv
pop
cmc
xor
jo
inc
mov
insb
mov
dec
push
stc
add
shll
inc
and
popf
popf
ret
mov
push
shlb
in
push
cmp
lock
push
pop
lds
inc
iret
icebp
cmp
adc
int
xchg
dec
icebp
ss
pop
sti
dec
dec
scas
dec
mov
enter
adc
inc
push
xor
mov
in
movsl
cmp
jp
mov
cmpsb
mov
insb
mov
mov
aad
adc
dec
outsb
jmp
aas
push
inc
in
fwait
movsb
cli
lods
xchg
andps
rcrl
fcomip
cli
or
imul
aaa
cmpsl
push
xor
adc
les
fld
cmc
push
xor
out
xchg
xchg
sub
xchg
mov
movsb
dec
xchg
lahf
test
ds
dec
das
dec
outsl
inc
jecxz
jecxz
cwtl
js
cmp
mov
inc
lods
inc
lcall
sti
push
mov
pop
ret
push
xchg
xor
xchg
jo
or
leave
outsb
sbb
cmp
adc
ljmp
cmp
fcoms
lretw
test
shlb
push
pop
ret
or
lds
and
cmp
pop
jecxz
shrb
icebp
jge
dec
pop
inc
mov
sub
clc
sub
ret
push
scas
mov
loop
dec
push
jle
mov
push
sub
les
pop
xchg
or
push
or
fisubs
testb
hlt
scas
inc
out
int
lahf
loop
push
sub
adc
jp
lahf
mov
sbb
inc
loope
jns
test
pop
shrl
and
ss
aas
push
pop
pop
aam
add
mov
int
fldl
testb
fistl
sub
stos
jecxz
jb
sub
leave
cmpsl
cmp
ljmp
ljmp
mov
jns
andb
ret
popf
xlat
xchg
icebp
sbb
push
hlt
test
loope
addr16
jae
fsts
fldenv
mov
in
mov
pop
sub
or
popf
jns
mov
ljmp
decl
cmp
and
mov
push
in
aam
sbb
enter
in
or
flds
imul
jbe
and
leave
cmpsl
and
fxam
mov
add
jae
mov
loopne
das
imull
and
jp
push
fisttps
sahf
hlt
jno
shl
dec
mov
flds
pop
and
jo
in
out
cmpsb
mov
jecxz
and
ss
fcmovnu
pop
cltd
arpl
adc
mov
inc
out
loopne
loopne
inc
ret
inc
out
sarl
movsl
cmp
sub
jmp
cmp
ret
jb
int3
mov
dec
mov
roll
test
test
mov
and
push
pushf
cmp
mov
sbb
sub
sub
inc
mov
xor
jnp
pop
sti
jp
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
or
mov
adc
adc
sub
sbb
add
jb
jnp
jns
repnz
and
xchg
jo
push
into
mov
mov
add
cmp
push
inc
mov
jbe
mov
icebp
mov
cmc
mov
cmc
xor
sub
mov
sub
enter
fs
cmpsb
call
mov
jns
xchg
xchg
mov
dec
or
and
hlt
jle
dec
sbb
ljmp
jae
cwtl
outsb
adc
mov
and
scas
adc
leave
loope
fucomi
popl
dec
and
add
cmp
into
jle
xchg
dec
stos
popf
ret
adc
lods
daa
xor
mov
pop
lods
add
loope
adc
cltd
iret
lcall
addr16
lods
in
fwait
shrb
jg
adc
leave
sbb
ss
mov
jmp
out
jo
mov
out
mov
push
popf
fwait
sbb
push
fucomip
stos
scas
ficompl
std
insb
push
lea
xchg
jo
or
or
fmull
lret
sub
test
sbb
sub
je
mov
outsb
mov
mov
dec
cmp
cli
stos
push
mov
adcl
xchg
ss
sub
clc
movsl
mov
rorl
lret
pop
cmp
cmp
cmp
add
inc
test
iret
xchg
xlat
loopne
and
insl
cld
inc
lds
xchg
test
mov
sarb
stos
inc
inc
mov
dec
aas
and
outsl
in
iret
dec
sahf
scas
mov
sub
dec
leave
mov
mov
mov
and
dec
push
rol
and
inc
mov
ljmp
mov
adc
add
enter
hlt
sub
daa
adc
addl
sub
enter
jne
inc
in
jmp
je
push
mov
rolb
stc
pop
out
inc
xchg
xchg
pop
int
hlt
pop
inc
stc
out
cmp
adc
ret
xchg
fildll
mov
ja
fistpll
ficoms
scas
mov
bound
jae
ret
push
or
fstpt
in
sub
movsb
int
inc
outsb
stos
push
mov
cmpsl
fisttpl
sbb
imul
add
insl
or
or
call
in
test
fwait
lods
sub
mulb
and
inc
pop
stc
aaa
push
mov
clc
es
dec
dec
aaa
push
pop
cmc
mov
cmc
pop
loop
add
mulb
aas
fidivrl
mov
add
add
inc
pop
mov
push
adc
test
dec
mov
cli
mov
int3
adc
jb
xchg
stos
idivl
push
iret
paddw
jb
dec
loope
inc
imul
jecxz
pop
xor
and
mov
push
or
mov
pop
mov
mov
mov
scas
adc
sbb
filds
push
inc
push
mov
mov
insb
cmp
or
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
loop
add
mov
dec
arpl
xlat
mov
fidivrs
cmp
push
insb
mov
mov
jge
sub
js
clc
inc
cltd
test
push
test
mov
jns
jge
adc
push
jnp
testb
lods
std
cltd
mov
xchg
xchg
in
mov
mov
mov
arpl
iret
mov
jl
dec
dec
cmpsl
xchg
sbb
ret
outsb
cmc
movsb
mov
fldz
cmp
push
fidivrl
push
add
dec
pop
lcall
xor
add
sub
sbb
inc
or
lcall
mov
in
pop
and
addr16
mov
mov
scas
push
xor
or
adc
adc
jns
insl
adc
mov
ret
inc
xor
out
scas
mov
bound
mov
fmuls
adc
enter
adc
fdivr
sub
popf
add
sub
popa
lods
test
int3
inc
shr
out
mov
outsl
dec
lods
xor
pop
lahf
scas
sub
loope
push
jb
or
mov
lret
cld
xchg
push
pop
mov
ret
loopne
enter
jle
lods
outsb
mov
stos
leave
xchg
imul
ljmp
sub
dec
mov
outsb
cmp
sbb
loopne
aaa
xchg
mov
cli
jne
xchg
and
fiadds
adc
jns
sti
xor
pushf
std
adc
sbb
pop
enter
pop
dec
lods
je
xor
mov
rcrb
sub
dec
les
fmull
inc
jne
ds
popf
bound
sti
jmp
ss
lock
jnp,pn
ljmp
std
call
sbb
scas
inc
push
loope
mov
mov
rolb
pop
test
inc
mov
sub
push
xchg
inc
adc
clc
loope
fcoms
and
jbe,pt
fsubrl
push
cmc
inc
lret
cs
mov
cmpl
je
jmp
out
lcall
push
mov
out
adc
popa
sbb
mov
push
aas
in
mov
add
lods
cvtps2pd
xlat
xorl
mov
push
fidivrl
push
cmc
movsl
dec
fdivrs
mov
mov
scas
sub
iret
pop
je
push
inc
and
mov
scas
les
pop
in
and
add
pop
pop
out
push
push
dec
call
pop
mov
dec
imul
ucomiss
imul
cmp
ss
adc
jb
cmpb
sbb
out
lret
mov
fists
jnp
push
pop
pop
ljmp
mov
jl
xchg
insb
sbb
testb
push
adc
and
xchg
ss
adc
lret
jmp
cmp
mov
mov
lock
dec
stos
ror
jno
in
cmp
leave
test
insb
ljmp
mov
popl
popa
add
xchg
jb
push
push
cmp
push
scas
jg
cli
shr
add
idivb
pop
sbb
lea
fs
inc
mov
cmp
jns
enter
int3
outsb
hlt
cmpsl
bound
jg
out
loope
sti
dec
lahf
test
out
movsl
daa
fwait
mov
or
and
pop
or
clc
loope
scas
into
cmp
xchg
mov
or
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
and
jae
xchg
pop
sbbl
lret
std
fs
jbe
jmp
jle
imul
shll
cmp
sahf
adc
push
popa
cmp
shrl
pop
out
das
cmc
sahf
or
andl
jae
in
insl
cmp
mov
ljmp
mov
movsb
add
push
sbb
cmp
push
pop
es
xchg
mov
jl
mov
jo
jmp
push
shll
fadds
insl
outsb
outsl
xchg
mov
scas
adc
add
pushf
push
movsl
das
push
fidivs
stos
mov
mov
or
cmp
in
aaa
nop
sbb
stc
fmuls
adcb
adc
stc
add
insl
mov
std
movsb
std
mov
sub
or
adc
stos
fnstenv
sti
leave
lds
sub
repz
dec
movsl
adc
inc
lcall
out
add
push
ss
mov
xchg
in
imull
mov
lret
sub
jb
cmp
cli
mov
jbe
in
or
rcrl
icebp
mov
sub
mov
pop
loopne
fadd
dec
int3
in
mov
push
fcom
fisttps
mov
out
lcall
jae
adc
mov
cmpsl
push
mov
lcall
jno
inc
mov
loop
sub
xchg
lret
loope
shlb
cmpsb
push
xchg
rorl
xlat
push
mov
and
sbb
iret
dec
add
sbb
inc
mov
aad
cmc
xor
add
mov
pop
clc
push
aam
outsb
aam
add
in
jbe
incl
jno
out
pop
ds
sahf
pop
push
mov
inc
outsl
jno
inc
cmpsl
cmp
pop
les
xor
or
add
xchg
mov
sub
add
cli
adc
fdiv
xchg
sbb
subb
test
fwait
subb
lcall
pop
adc
inc
and
cmp
mov
shll
fldenv
ss
in
in
ficoms
lock
jge
fs
ret
mov
sbbb
adc
jge
jo
adcl
push
push
ret
sbb
dec
testl
xchg
or
into
add
cmpsb
cmp
pop
stos
popf
sbb
ficoms
push
push
ret
xlat
fs
int
popf
xchg
jne
mov
xchg
pop
shr
out
xlat
fisttpl
shlb
fcomp
pop
push
inc
fnstenv
ds
daa
js
or
pop
dec
adc
int3
inc
fdivrl
cltd
jg
mov
push
scas
loop
mov
push
lcall
mov
mov
das
ljmp
xchg
pop
adc
jo
mov
clc
push
jmp
gs
mov
push
ja
paddd
push
pop
or
lods
leave
dec
negl
and
hlt
dec
push
stos
jae
mov
roll
fadd
jmp
insl
cwtl
or
or
insb
cmp
pusha
clc
cwtl
cld
jnp
insb
pop
xchg
or
pop
mov
xor
cltd
sub
ja
fwait
add
out
bnd
lods
mov
stos
sti
or
in
fnstenv
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
stos
bound
adc
xor
loope
fwait
add
jb
pop
mov
call
jle
stos
push
or
cltd
and
sub
mov
fsubl
mov
mov
ljmp
inc
out
sbb
dec
iret
xchg
mov
fidivrl
cmc
lcall
and
outsb
mov
decl
mov
pop
xchg
out
mov
leave
neg
xchg
pop
lret
lret
add
insl
push
adc
push
cmc
or
ret
mov
pop
mov
push
bound
xor
xor
arpl
xchg
xchg
out
paddsb
pop
xor
scas
iret
iret
sbb
adc
push
push
bound
pop
inc
add
cli
pop
cmp
mov
push
lods
fstl
cmp
sub
into
icebp
insl
dec
lret
jg
aaa
sub
enter
jne
mov
push
mov
and
mov
dec
enter
stos
xchg
cmp
pushf
in
cmpl
insb
leave
or
out
ds
pavgb
je
mov
fiaddl
fwait
lcall
lods
add
inc
rcll
int
sbb
jmp
sub
and
flds
dec
xchg
insb
lret
shl
pop
pop
pop
push
pop
sbb
fsub
mov
xchg
jmp
pop
enter
inc
out
fdivrs
std
clc
sub
mov
lahf
push
pushf
jne
mov
xchg
cmp
pop
das
outsb
cmp
aaa
cmpsl
dec
daa
mov
movsl
xchg
dec
cmp
cld
fisubl
xor
lcall
out
cli
pop
or
mov
adc
or
add
or
sbb
cmp
push
cmp
sub
ja
add
mov
xorb
xchg
or
add
or
jmp
gs
gs
jp
js
ss
fisubrl
pop
inc
std
mov
icebp
jecxz
pop
stos
std
insl
rcrb
dec
outsl
xchg
cmp
xor
lds
lods
dec
mov
sbb
pop
pop
and
sbbl
stc
fstl
push
cmc
sbb
lret
and
or
dec
pop
shll
cmpsl
loopne
sahf
lds
add
push
pop
movsl
dec
and
ds
loop
and
xchg
jns
data16
rcl
and
push
jne
adc
outsb
xchg
test
ret
fwait
mov
lods
xchg
sbb
jg
add
int
sbb
xlat
into
add
outsl
sub
cmpsl
dec
or
pop
adc
xchg
mov
pop
xchg
mov
xor
adc
mov
xchg
pop
xchg
je
jmp
inc
out
fisubs
inc
mov
mov
jl
das
out
out
mov
inc
xor
fimull
push
mov
shll
dec
xchg
ds
jae
popl
mov
icebp
mov
push
jae
aam
pop
movsl
jge
mov
cmp
inc
lcall
jne
inc
fwait
xchg
notl
sbb
xchg
fists
lods
and
jbe
cmp
clc
add
cli
lret
mov
dec
test
sbb
adc
clc
xchg
pusha
mov
out
adc
xlat
pop
dec
inc
sbb
fdivrl
rcrb
and
add
or
push
cmp
sub
repnz
bound
cwtl
in
xor
fwait
cli
orb
xchg
adc
dec
or
andl
addr16
pop
addr16
or
jg
dec
mov
jecxz
mov
mov
add
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
insb
gs
adc
mov
or
xor
adc
jecxz
icebp
pop
ss
push
cmp
inc
xor
mov
jae
adc
jb
sbb
out
mov
movsl
mov
sbb
adc
push
cmp
inc
adc
cmp
push
mov
fcomi
mov
lcall
dec
in
xlat
mov
jbe
jb
jecxz
push
jbe
repnz
js
push
dec
adc
adc
jb
pop
pushf
push
in
jnp
scas
movb
jmp
xchg
div
in
aad
lock
fcompl
xchg
mov
cld
icebp
nop
mov
dec
mull
mov
mov
sbb
ret
mov
mov
or
add
xchg
aaa
aaa
inc
loope
loopne
inc
mov
repz
xor
push
in
gs
fldcw
adc
aas
mov
push
lods
and
xor
in
shlb
push
aaa
xchg
test
inc
jg
insb
mov
adc
loop
cmpb
fstpt
pop
cs
xor
xor
xorl
in
cmp
lock
insb
adc
dec
stos
mov
xchg
lea
movsl
mov
xchg
leave
fsubr
pushf
adc
sub
pushf
push
sub
cs
pop
inc
jns
in
rolb
sbbl
fstpt
jecxz
or
inc
pop
jne
push
dec
cld
inc
pusha
mov
xor
int3
adc
mov
add
dec
jle
push
or
jecxz
mov
daa
mov
dec
push
xchg
sbb
mov
lds
push
nop
add
sbb
mov
mov
fs
jns
test
push
in
imul
cmc
mov
cmc
movsb
ret
xchg
sub
sbb
pop
sub
movsl
cmp
loopne
sub
lret
cmpsl
rcrb
jae
xchg
shl
lret
jle
fldt
in
cmp
std
xchg
mov
lret
inc
repz
xor
and
cli
mov
mov
push
cs
or
mov
dec
add
pop
imul
popa
lock
or
les
push
cmpsl
xchg
push
and
lock
lods
xchg
mov
push
es
push
arpl
test
repz
sub
xor
jl
jl
adc
add
stos
aas
fidivrl
aam
sbb
inc
mov
notl
loopne
gs
adc
xor
test
or
dec
dec
mov
stos
cld
cmp
sbb
movsb
sub
add
sub
in
daa
cs
test
aaa
xchg
cld
mov
add
out
adcl
xor
xorb
popa
icebp
loope
mov
das
mov
arpl
out
pop
push
clc
xchg
cmpsb
mov
jb
xor
jl
nop
arpl
enter
adc
movsb
xchg
std
push
repnz
inc
xlat
call
jne
inc
out
xor
dec
xor
sbb
divb
dec
pop
ds
jge
scas
mov
jo
movsl
xchg
sbb
cmp
scas
inc
push
cmp
movsl
pop
in
imul
add
dec
iret
shrl
addr16
mov
idivl
ret
in
xlat
imul
cld
cs
pop
faddp
addl
or
inc
or
fwait
ljmp
imul
sti
fcompl
add
inc
mov
adc
out
repnz
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
xlat
xchg
js
push
adc
mov
adc
jmp
mov
mov
inc
sbb
jl
test
in
push
imul
lahf
push
push
adc
xchg
std
int
shrd
repnz
repnz
jno
xchg
add
cld
loop
icebp
pop
dec
mov
outsb
das
jecxz
push
int3
xchg
movsb
not
stos
push
mov
pop
fisubrl
leave
out
dec
mov
inc
test
xor
rorb
pop
dec
add
pop
cli
mov
xchg
push
jne
pop
cmp
sti
pop
repz
nop
mov
mov
imul
mov
orb
xor
mov
or
subl
push
lods
add
mov
mov
imul
lcall
ss
int3
xchg
adc
xchg
or
cmc
and
mov
arpl
cwtl
lahf
inc
sub
sub
adc
int3
or
mov
fsts
mov
lcall
push
inc
call
rcll
sbb
sub
nop
into
jne
jno
test
mov
xchg
push
jecxz
fnstsw
clc
sub
out
insb
xor
mov
out
js
aaa
cwtl
jle
mov
cmpsl
push
inc
or
mov
and
pop
xorl
mov
lcall
popa
enter
xchg
inc
push
dec
enter
fnstsw
inc
mov
arpl
mov
inc
xor
jmp
cli
sarl
gs
fildl
jle
adc
in
and
lahf
iret
adc
mov
bound
mov
pusha
inc
hlt
xor
xor
mov
sub
les
pusha
mov
or
pop
mov
in
push
ss
out
shl
jmp
outsl
stc
push
loop
mov
sti
stos
xor
movsb
mov
sti
push
jmp
icebp
mov
or
xorb
jns
pop
rol
mov
call
fldl
sbb
lods
loop
dec
jnp
xlat
adc
stos
push
xchg
mov
xchg
jg
fists
cmp
inc
adc
into
loope
shl
cmp
ret
xor
xchg
scas
bound
cmp
sbb
test
jb
push
mov
cltd
add
addr16
sbb
inc
aaa
nop
gs
push
leave
ror
je
imul
out
cmpsl
cmc
mov
mov
out
or
pop
outsb
out
xchg
ljmp
mov
xchg
dec
sbb
lea
mov
xchg
insb
sbb
repz
hlt
mov
inc
cs
stos
or
jge
push
nop
int
jne,pn
lods
lods
mov
arpl
sub
inc
pop
pop
dec
rorl
lcall
fsts
push
in
je
pusha
sbb
adc
xor
mov
outsb
jne
inc
call
pop
xchg
mov
data16
pop
dec
push
inc
mov
es
or
adc
dec
test
pushf
shll
jmp
stos
inc
aad
jg
mov
or
or
in
mov
mov
leave
pop
pop
xor
mov
cmc
push
leave
mov
stos
rcrb
repnz
inc
std
dec
push
push
out
ret
shl
pop
out
mov
loop
inc
aas
ret
jmp
int3
or
xorl
cmpsl
std
call
inc
rcll
enter
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
stos
xchg
dec
adc
mov
adc
pusha
shll
xchg
in
sbb
aas
jg
push
sbb
popf
pop
daa
cmp
adc
pop
shrl
adc
out
addl
cmp
jo
fsubr
iret
in
into
insl
lahf
outsl
xchg
outsl
ret
int
pop
and
cmp
jno
lods
mov
inc
lea
shlb
in
stos
add
icebp
fsubrs
pop
outsl
fsubs
cwtl
outsb
jmp
adc
cs
pop
hlt
sub
sbbb
inc
add
or
movsl
lcall
mov
sbb
push
insb
lods
repnz
inc
dec
sbb
add
mov
repnz
fcmovb
xor
sub
jecxz
mov
daa
mov
jge
jmp
sub
dec
cli
pop
push
xchg
lret
lcall
push
sahf
sub
jp
push
sub
mull
sub
inc
fisubrs
pop
sbb
inc
cmpsl
js
fisubrl
repz
ja
sahf
sub
inc
jecxz
xchg
repz
jno
jno
aam
xor
ret
or
mov
fisubrl
mov
xchg
in
loopne
inc
or
dec
in
jnp
iret
out
incl
jne
nop
aas
dec
nop
and
add
int
adc
mov
shrb
int3
fwait
xchg
dec
fisttpl
inc
cmp
push
dec
orl
clc
push
or
add
test
mov
adc
jnp
mov
int3
leave
jl
jae
push
jns
dec
iret
shll
add
gs
popf
nop
lsl
or
ja
jmp
cmp
and
icebp
dec
ja
mov
pusha
mov
mov
add
or
into
mov
ds
ss
xor
outsb
rol
pop
sti
jg
jo
in
pop
or
sti
icebp
dec
add
adc
in
loopne
add
adc
sbb
push
mov
outsb
xchg
mov
sbb
sahf
ljmp
xor
mov
les
test
adc
shlb
dec
jo
pop
popf
repnz
inc
and
push
lods
mov
arpl
notb
mov
xlat
outsl
mov
sbbl
arpl
sbb
pop
mov
mov
inc
adc
mov
or
lock
xchg
cmp
fiaddl
loopne
adcl
daa
xor
xchg
pop
adc
popf
rorl
dec
outsl
inc
cmp
imul
roll
pop
int3
lods
mov
sbb
mov
rdpmc
push
ja
adc
or
je
cmp
cmp
dec
enter
aad
fstpt
sub
inc
out
enter
iret
lods
add
inc
xor
jle
xchg
mov
mov
lods
xchg
sub
jmp
shlb
ret
mov
fadds
sub
outsl
lds
nop
jle
sbbl
es
test
lods
mov
and
xchg
inc
adc
xchg
xchg
xor
ret
test
fidivrl
imull
aam
adc
shlb
pop
mov
dec
cs
out
cmp
aas
pusha
adc
out
sbb
stos
mov
pop
aad
ja
push
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
leave
and
adc
mov
adc
adc
out
lods
push
popf
popa
movsl
sbb
jecxz
out
adc
sub
pop
call
mov
adc
sbb
aas
dec
sub
push
mov
idivb
bound
ret
ljmp
xchg
inc
fidivl
sbb
arpl
lret
mov
and
mov
sub
sahf
pop
repz
fwait
aas
inc
mov
lret
sahf
out
in
sub
mov
out
or
mov
pop
stos
ss
mov
insb
pop
movsl
lcall
push
sbb
fcmovnb
cmp
and
mov
ja
rorb
push
std
xchg
push
mov
pop
and
lcall
sub
mov
pop
dec
cld
inc
gs
test
inc
or
lret
or
jbe
call
bound
mov
mov
test
and
inc
por
fs
push
pop
rol
lret
fmull
leave
fwait
ds
cltd
jmp
ror
sub
aaa
js
out
into
mov
std
lods
xor
fiadds
notb
xlat
add
loope
push
xchg
inc
mov
mov
inc
xchg
enter
cwtl
lret
call
push
cltd
lahf
xlat
fistl
jo
push
popf
test
inc
and
jae
lret
insl
push
movsl
mov
add
repz
test
out
dec
outsb
std
ror
xchg
xchg
dec
loope
int
in
ss
mov
pop
out
lret
test
bound
jg
sarb
jno
aas
les
notl
lret
dec
cmc
dec
test
insl
mov
in
into
pop
les
add
jno
outsl
sbb
jo
push
stc
sub
stos
jne
jmp
mov
jbe
xor
sti
mov
lcall
xor
pop
loope
lock
xchg
andl
adc
dec
popf
xchg
xchg
sub
ljmp
test
gs
nop
mov
add
je
add
push
sbb
ss
and
add
sub
sbb
mov
les
mov
pusha
mov
mov
faddl
jae
addr16
inc
psubsw
mov
lahf
cs
push
add
push
inc
xlat
arpl
lea
mov
push
xchg
mov
popa
js
pushf
mov
or
int3
out
dec
fs
cmp
pop
ficomps
pextrw
pop
push
xchg
xchg
cmpsl
mov
movsl
sbb
dec
les
mov
fs
cmp
mov
add
pop
sub
or
js
test
mov
cmp
fsubrs
or
imul
mov
aas
rcr
sti
hlt
xlat
inc
cmc
js
sbb
outsl
push
popf
fucomp
int3
push
mov
or
cmpsb
pop
ror
and
hlt
test
push
jb
arpl
jmp
pushf
lock
mov
insb
jne
aam
inc
dec
loope
push
fldcw
or
stos
and
in
pop
repz
jb
out
movsb
sahf
mov
add
sarl
scas
mov
xor
mov
shrb
jle
int3
cmp
mov
loop
lret
mov
test
push
pcmpgtb
xchg
mov
push
incb
lea
fstps
lods
sarl
dec
popf
popa
mov
cs
cmp
adc
jge
cmpsb
and
rorl
cld
mov
ss
out
outsl
inc
lds
pop
push
sub
push
mov
stos
inc
adc
mov
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
js
adc
mov
adc
shll
jecxz
push
jae
test
adc
cs
xor
stc
xlat
rorb
dec
lahf
xchg
loopne
arpl
daa
hlt
inc
ljmp
leave
sub
hlt
and
pop
jle
add
sbb
loopne
mov
fs
test
cmp
or
bound
lret
aad
call
jp
pop
push
std
push
sbb
push
xchg
js
pop
rclb
mov
int3
mov
sub
arpl
mov
push
inc
cmp
inc
mov
lahf
sbb
push
dec
mov
imul
cmp
loop
ficompl
fisubrs
mov
and
add
cmc
push
mov
add
xorb
pop
es
insl
stos
sub
or
std
xchg
push
xor
mov
bound
mov
push
gs
xrelease
arpl
cmp
leave
cmp
adc
or
cwtl
pushf
cmp
iret
hlt
je
sub
int
fiaddl
sub
scas
pop
pop
xchg
lahf
std
push
jge
xchg
mov
gs
pop
negl
movsb
mov
roll
inc
add
loop
xchg
mov
adc
xor
imul
lea
jb
cld
xor
cmp
mov
das
nop
pop
mov
sarl
rcl
xchg
js
imul
lods
rclb
jnp
jae
jl
mov
sahf
mov
imul
shrl
dec
mov
push
nop
outsl
out
bound
jle
sahf
repz
mov
jmp
icebp
sahf
pop
adc
jl
pop
cmpb
insb
sbbl
pop
dec
push
adc
sbbb
fimuls
pop
mov
or
cmp
pop
cmp
mov
pop
push
mov
addr16
dec
or
scas
jne
addr16
jb
aaa
sti
enter
pop
jmp
pop
lret
xchg
cmp
das
add
mov
rcrb
aam
repz
icebp
rcll
rcl
shl
push
fimull
or
cmp
dec
out
jno
sbb
scas
test
mov
stos
lret
dec
bound
cmp
ja
sbb
lock
push
xchg
lods
cltd
pop
sub
int3
in
cmp
mov
xchg
jle
sbb
jae
cmpsl
push
cmp
sub
cmp
movb
xchg
cmpsb
sub
or
es
xor
mov
and
stos
stos
fs
mov
xor
mov
mov
or
inc
sub
push
jnp
jne
mov
cmp
add
pop
mov
sti
xor
dec
cmp
add
dec
dec
push
mov
lods
fwait
add
fsubl
and
dec
adc
jle
movsl
mov
movsl
jmp
xchg
test
adc
sbb
add
push
jne
in
in
add
mov
aaa
adc
fdiv
aaa
mov
pop
push
mov
test
sub
push
jb
popa
jns
repnz
into
jno
icebp
ja
subb
inc
fs
mov
sub
rorb
jmp
sub
mov
inc
loop
nop
sbb
test
xchg
add
pop
test
bound
in
ss
es
scas
add
movsb
dec
mov
mov
les
sbb
mov
adc
fdivrs
cmp
outsb
data16
dec
xchg
and
xor
shrb
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
jle
push
push
adc
mov
adc
rcr
pop
imul
rcrb
xor
je
out
loopne
popf
push
xchg
les
xchg
pop
lods
add
or
movl
push
dec
rorl
or
in
lret
test
xchg
sbb
in
data16
or
and
notb
mov
in
mov
lods
cmp
push
call
lahf
cmp
xchg
lea
sub
test
push
dec
dec
roll
dec
cmp
jecxz
mov
xchg
es
aad
enter
enter
gs
mov
dec
sbbl
ljmp
mov
ja
stos
gs
bound
cltd
adc
mov
test
jns
push
ljmp
fiaddl
push
movsb
mov
push
xchg
inc
sbb
push
mov
or
and
shll
data16
jbe
add
ljmp
sbb
jne
and
stos
dec
sub
inc
mov
icebp
mov
add
subb
mov
hlt
rorb
repnz
pop
test
sub
xchg
lock
inc
or
mov
push
xor
cmp
pop
push
xchg
pop
dec
sbb
mov
stos
mov
es
aam
jl
mov
jb
cwtl
loope
rcll
adc
xchg
jp
mov
jle
mov
outsl
pop
cmc
lret
cmp
aam
scas
sub
cmpsb
lea
pop
ds
pushf
imul
mov
xor
scas
dec
jne
aad
fs
cs
or
fsubr
insl
in
dec
inc
lret
in
dec
loope
mul
imul
loope
jge
in
shlb
add
insl
outsl
push
pop
adc
inc
insb
add
loopne
xor
fsubl
xchg
sbb
jmp
adc
popf
push
inc
rol
xchg
push
mov
fldt
mov
sbb
lahf
mov
add
ljmp
mov
pop
lahf
jae
jle
adcl
jo
inc
pop
dec
ljmp
dec
push
cmpl
xor
mov
cwtl
adc
sub
out
into
pop
subb
dec
jbe
cmp
push
and
fstps
mov
xchg
cli
ret
stc
jbe
dec
dec
add
mov
ds
lea
lock
outsb
cmp
les
imull
es
pusha
xor
sbb
xchg
jl
push
jle
mov
stos
pop
ret
sub
pop
push
xchg
imul
mov
rorb
rcr
testl
sbb
dec
pop
adc
cmpl
or
or
and
jle
into
adc
dec
and
pop
cmp
push
adc
push
imull
dec
lds
mov
dec
mov
lret
pushf
sbb
xor
and
aad
fnstenv
sub
and
dec
aas
ror
and
pop
or
mov
addr16
scas
jp
xchg
jmp
sbb
inc
aad
push
or
scas
movsb
push
xchg
cmc
inc
inc
adc
xlat
push
hlt
push
mov
jl
in
and
xchg
mov
call
in
inc
mov
xchg
mov
or
mov
sub
cmpsl
in
pop
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
jp
or
adc
mov
adc
lcall
xchg
xor
out
push
lods
ret
sti
jle
inc
cmpsb
int3
divl
aas
push
hlt
jb
cld
pop
cwtl
and
enter
cwtl
push
rcl
sti
js
xor
movsl
push
pop
pop
test
cld
scas
mov
sub
add
pop
cmc
repz
je
xchg
and
push
jmp
jle
das
jnp
cwtl
mov
mov
mov
pop
in
fcompl
inc
subb
out
sbb
mov
inc
dec
push
push
mov
mov
imul
or
scas
mov
xor
lret
rorl
pop
out
out
mov
ret
lcall
xor
lods
pop
scas
into
orb
mov
add
push
lahf
mov
xor
cmc
incb
push
fbld
test
or
leave
hlt
xor
gs
xchg
out
mov
inc
out
sbb
push
inc
xchg
inc
jle
or
inc
out
push
aad
sub
bound
jo
mov
xor
iret
mov
cmpsl
cmovge
sbb
xchg
fstpt
daa
and
pop
fcomi
or
rorb
add
xor
mov
cmp
int
mov
fiadds
cmc
dec
das
mov
popf
cmpsl
dec
xchg
and
dec
daa
scas
xor
lcall
mov
ret
repz
mov
movsl
int
push
jmp
mov
lds
push
ja
int
rolb
mov
push
test
lcall
sarl
loope
fbld
xchg
cmpsb
cmp
arpl
xor
sub
mov
cmp
pop
sbb
xchg
mov
cmp
inc
test
scas
mov
sbb
or
jg
idivb
stc
sbb
icebp
mov
aam
cs
call
lds
imul
ret
push
and
repz
sub
xchg
stos
sub
dec
cmp
and
pop
iret
mov
inc
inc
cmp
es
mov
aam
cs
scas
das
das
inc
dec
or
lea
shlb
js
mov
jne
xor
movsb
nop
add
dec
mov
lods
test
mov
and
pop
xor
ficoms
bound
and
adc
lods
push
mov
lods
mov
or
sub
ret
mov
lea
xor
xchg
and
jl
paddsb
lock
inc
add
jmp
or
fisttpll
cltd
or
dec
sub
pop
sub
movsb
xchg
lods
sbb
mov
mov
scas
pop
std
ret
aad
cmp
inc
int3
es
cwtl
lds
and
lahf
jmp
push
jae
test
insl
push
pop
jg
mov
push
mov
mov
push
jecxz
push
dec
xor
fidivs
cld
sub
sbb
mov
cmc
mov
jge
pop
das
dec
or
or
sbb
xchg
jg
mov
scas
mov
xchg
dec
jp
jp
or
hlt
sbbl
lods
stos
loope
fwait
or
xchg
out
dec
call
dec
and
xchg
cmpsl
dec
xor
stos
lcall
inc
mov
stc
lahf
cmp
pop
jnp
or
lret
cli
sar
inc
std
sub
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
shlb
adc
mov
adc
out
jo
xor
dec
repz
lds
jg
rolb
mov
cmp
lds
add
icebp
loopne
out
xor
stos
shlb
push
or
inc
aam
dec
or
repnz
nop
mov
jge
add
divl
lret
push
cmpsw
add
dec
inc
and
xchg
and
jnp
hlt
push
lahf
push
into
and
sbb
jno
popa
inc
mov
push
push
shlb
imul
jp
enter
xchg
mov
aam
popa
out
imul
cmpl
lea
xchg
cmp
pop
insl
dec
sub
mov
adcb
and
sub
adc
inc
fdivp
pop
sahf
pop
std
sub
push
enter
fs
fsubl
insb
subb
jecxz
cmp
sbb
adc
out
cmp
pop
sub
loop
hlt
jg
xchg
add
out
push
mov
or
sub
mov
mov
sub
mov
sbb
jle
mov
jecxz
jne
inc
pop
ret
into
xchg
fisubl
mov
sbb
int
mov
outsb
jge
hlt
dec
jmp
push
frstor
popa
jg
sbb
lock
xor
outsb
mov
xchg
dec
adc
pop
lods
stos
pop
seto
mov
inc
loop
push
ss
pop
sbb
mov
shl
jne
fists
push
repnz
pop
jo
add
inc
out
ds
addr16
jb
orb
stos
imul
lahf
sub
ret
clc
rclb
push
mov
xchg
xor
xchg
lock
fmuls
nop
adc
ja
fists
jb
aad
push
ljmp
mov
mov
fisubl
push
es
cwtl
dec
jmp
lahf
rol
out
mov
movsl
mov
adc
pop
cmpsb
lret
mov
mov
jns
sbb
mov
cld
popf
or
mov
pop
lods
icebp
push
popa
mov
jae
dec
jno
repz
vpacksswb
xchg
ficompl
icebp
scas
enter
sub
xor
jb
in
jae
out
pop
mov
adc
jnp
fcmove
movsb
pop
inc
adc
dec
imul
fwait
mov
adc
and
jo
xchg
mov
jb
jg
repz
out
mov
cli
ret
loope
pop
sbb
mov
enter
lcall
arpl
vcomisd
jno
and
pop
add
scas
popl
sub
adcl
addb
add
nop
mov
sub
or
dec
inc
cmp
movsb
mov
jnp
aas
jp
cs
lea
scas
push
sbb
subb
mov
test
cmp
mov
or
adc
or
add
call
add
xor
sub
xlat
mov
loop
pushf
bound
mov
sbb
loope
jmp
les
mov
out
out
sub
sbb
lret
sub
mov
cwtl
sub
mov
mov
adc
mov
aaa
lret
test
adc
xchg
dec
xchg
aaa
dec
shr
adc
dec
insb
push
lock
hlt
xor
adc
das
mov
hlt
xor
add
clc
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
pop
and
push
sbb
adc
push
and
std
xchg
mov
int
cmp
dec
lods
in
leave
ret
push
fs
push
adc
push
pop
push
xor
out
movb
movsl
mov
xchg
daa
inc
test
cmc
cs
insl
mov
fisubrl
rorl
jns
push
mov
orw
fisubl
setne
out
lds
sbb
mov
stos
dec
push
or
jmp
push
and
jbe
loope
jns
sbb
out
push
cmp
out
into
jl
sbb
xlat
gs
into
gs
cmc
inc
into
pop
sbb
cmp
xchg
or
push
popa
adc
add
add
rclb
mov
mulb
xor
pop
mov
dec
xor
pop
mov
ror
movsb
pop
xchg
sahf
add
ss
push
push
dec
jb
out
adc
sub
mov
cmp
lret
enter
or
jp
xchg
test
or
sbb
fcoml
ret
xchg
cld
push
ljmp
adc
mov
add
inc
ret
imul
fiadds
add
ficoms
ds
insb
xchg
push
dec
fwait
inc
dec
pop
mov
mov
mov
lret
cmp
imul
adc
adc
icebp
in
pop
push
mov
dec
lcall
xor
shlb
push
and
dec
lahf
push
dec
add
mov
sti
aas
mov
xchg
ficoms
cmc
stos
js
pop
or
jo
adc
xor
int3
jb
or
cmp
cmpsb
mov
dec
xchg
cmp
out
cmp
mov
sub
or
insb
dec
cmp
rolb
push
xor
xchg
pop
dec
pop
leave
xor
mov
pop
mov
ret
mov
clc
or
xor
sub
jae
cmc
mov
jp
pop
int3
mov
xchg
cmp
inc
testl
mov
pop
scas
jmp
ret
dec
inc
mov
mov
cmc
or
fs
and
sub
jns
adc
push
and
adc
sarb
rcr
cmp
mov
popa
mov
mov
outsl
imul
xor
sahf
imul
dec
lods
add
fisubrs
lea
mov
lods
mov
sub
int
clc
inc
stos
lods
div
cli
sbb
pop
push
mov
call
je
ficompl
call
iret
mov
in
lods
sbb
jo
dec
std
ret
aas
je
pop
sbb
inc
mov
jl
adc
fstpl
sbb
lcall
xlat
test
aad
sbb
ficoms
das
push
jg
xor
sub
dec
pop
mov
xchg
sbb
push
nopl
cmc
leave
jbe
and
pop
jnp
stos
sbb
lret
filds
inc
fists
lret
imul
sub
xchg
jmp
shl
sbb
mov
mov
adc
aam
out
mov
inc
ret
jb
sub
int3
imul
jle
push
pop
std
lock
cwtl
lods
ret
dec
jnp
mov
test
pushf
dec
ds
pop
inc
jae
push
push
push
imul
testb
addb
add
shrb
add
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
pop
jno
add
stc
shl
and
or
outsb
dec
andb
pop
cltd
inc
or
and
popa
push
cmpsb
testb
mov
lcall
jl
lcall
les
jae
mov
daa
loopne
fistpll
inc
out
xchg
push
aad
jne
movsl
fisubrs
inc
js
into
jg
cli
xor
or
movl
pop
mov
loopne
fnstenv
pop
jo
mov
nop
jb
mov
pop
cmp
add
inc
dec
push
cli
add
pop
or
inc
and
mov
popw
daa
pop
fistl
add
stos
inc
inc
lods
popf
hlt
ss
pop
xor
mov
adc
test
add
cmp
sbb
xchg
mov
sbb
pop
inc
fs
cmc
setb
out
lock
lcall
rol
in
pusha
adc
pop
or
loope
icebp
push
add
adc
ljmp
add
dec
jbe
push
sbb
mov
mov
insb
cmp
jle
leave
mov
testl
jle
fisubrs
xchg
and
inc
adc
lahf
movsb
idivl
sbb
arpl
mov
jl
push
orb
and
cmp
push
mov
inc
cmp
das
dec
repnz
cmp
push
ret
adcb
cld
inc
mov
fcmove
imul
aad
in
sub
cmc
bound
jmp
fsubrp
pusha
pop
xor
sbb
inc
lds
mov
lcall
dec
xor
jns
insl
imul
mov
inc
sub
jecxz
xlat
mov
mov
or
in
insb
repnz
fnstenv
lods
dec
ljmp
mov
push
pop
mov
inc
je
mov
xor
cvttps2pi
iret
aas
into
sbb
sub
mov
lret
hlt
mov
addr16
jle
or
lcall
xchg
sub
ret
imul
push
andb
xchg
sbb
jp
xchg
xchg
cmpsb
xchg
idivl
clc
adc
sbb
sub
jo
xor
mov
push
dec
clc
icebp
scas
adc
pop
test
fs
pop
adc
push
in
sub
push
repz
loop
lret
mov
adc
jno
jnp
pop
cwtl
lahf
push
setns
mov
mov
inc
lahf
push
mov
jle
out
fisubl
push
test
mov
lods
xchg
jmp
stos
and
adcl
mov
test
int
cmc
jge
in
fcoml
ja
mov
mov
inc
or
outsb
sbb
xor
xor
fisubl
repnz
fcom
das
jo
push
outsl
loop
imul
sub
test
lret
xchg
dec
cwtl
incl
in
xor
int
pop
mov
ja
add
ljmp
imul
and
ds
je
cmp
xchg
and
ret
jle
sub
xchg
shlb
xchg
adc
add
sarl
scas
int3
ja
js
jbe
jge
sub
in
sbb
or
pop
out
add
ret
cmp
mov
addb
test
jnp
out
scas
xor
inc
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
add
adc
clc
inc
sbb
pop
gs
dec
push
mov
inc
mov
repnz
sub
sub
xchg
push
testb
and
pop
shlb
insb
jns
fstpl
in
or
mov
adc
lret
bound
inc
pop
in
test
dec
ror
jne
in
mov
inc
mov
sub
inc
dec
xchg
mov
bound
sahf
lret
xchg
xor
lods
aam
mov
in
xor
lcall
jns
cmp
xchg
add
fcoms
jle
xchg
outsb
int3
jae
movsl
ret
int3
aam
data16
movsl
dec
call
fmuls
ss
repnz
hlt
xor
jmp
aaa
xchg
mov
repz
out
into
adc
je
jecxz
xchg
pushf
mov
jb
and
lock
cmp
les
or
fisubrs
test
aam
sub
adc
push
test
mov
push
insl
dec
or
or
bound
push
lret
je
sbb
add
inc
rol
mov
nop
jae
xchg
jl
jecxz
les
cmp
ficomps
jmp
lea
fisttps
testl
je
pop
ja
popf
in
sbb
subb
push
dec
pop
push
mov
mov
pop
add
fnstsw
sub
js
xor
popa
dec
jno
pushf
or
push
xchg
lods
cwtl
mov
inc
pop
lret
adcl
out
sub
pop
sub
mov
inc
mov
jno
adc
fildll
mov
push
sub
addb
fldz
loopne
xor
aam
inc
push
insl
lds
outsl
or
fimuls
ret
cmpsl
decb
mov
mov
or
loopne
xchg
add
sub
mov
xchg
mov
sbb
in
jb
pop
inc
faddl
lods
hlt
cmpsl
fnstenv
ljmp
iret
jecxz
inc
scas
cmpb
es
andb
stos
inc
daa
aam
test
pop
and
out
sbb
out
jg,pn
pop
xchg
xor
outsb
jge
mov
adc
cmp
or
xchg
or
pop
nop
repnz
dec
test
pop
mov
mov
or
popf
add
sbb
add
testl
gs
jae
ljmp
and
jbe
pop
int
mov
fcompl
js
jb
push
or
pop
stos
bound
mov
add
sub
lret
iret
fisubrl
cmp
sub
je
mov
or
mov
test
add
inc
sub
clc
and
cmpl
jae
push
arpl
insb
stos
pop
repz
repnz
add
bswap
stos
movsb
not
add
mov
pop
cwtl
dec
xor
and
pushf
outsl
cmpsb
mov
repnz
aam
add
iret
add
leave
lods
stc
popf
das
adc
xchg
and
arpl
insb
test
pop
call
sub
jp
ds
adc
inc
jne
inc
lcall
cmp
jge
inc
andl
push
sbb
pop
mov
mov
adc
xor
ljmp
mov
sbb
outsb
andb
imul
pusha
mov
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
orb
adc
mov
adc
stos
dec
call
test
iret
ficoml
jbe
lods
mov
push
adcb
lods
fwait
xlat
xor
fistl
and
jge
bound
or
lods
pusha
pop
movsl
adc
adc
pushf
push
add
jne
cltd
aas
dec
mov
out
sub
mov
shll
push
mov
jge
dec
stos
cmp
and
lahf
das
fsts
sbb
push
vsubss
shrl
mov
xchg
and
cltd
add
ret
xor
add
cmc
xchg
inc
pop
mov
mov
mov
outsb
push
xchg
notb
cmpsl
pop
lahf
jo
dec
inc
je
xorb
repz
test
test
adc
push
lods
push
ja
mov
mov
ret
add
pop
mov
xchg
jbe
xchg
loopne
and
xlat
call
neg
repnz
sbb
and
mov
jge
jne
je
mov
stos
inc
add
jl
aas
js
imul
push
lods
jecxz
imul
jmp
mov
lcall
std
imul
jno
popf
add
lcall
sbb
cmp
inc
dec
xchg
sbb
cltd
pop
pop
jecxz
xchg
js
popf
int
sbbb
push
mov
jge
subb
jecxz
mov
adc
insl
subb
insb
jbe
or
inc
scas
icebp
popa
movsl
repnz
mov
inc
sbb
sub
dec
or
sbb
xchg
into
mov
or
ja
push
scas
int3
cmc
sbb
js
mov
mov
aad
cs
movsl
inc
dec
cmp
nop
inc
aas
cld
sbb
js
pop
mov
cmc
popf
push
jne
mov
std
jne
sti
test
xor
or
es
sbb
jo
neg
sub
fistl
xchg
cmpsl
bound
or
adc
test
push
lcall
sti
jae
mov
mov
mov
aas
jg
xchg
or
cmp
outsb
mov
das
xor
jno
sbb
mov
imulb
lock
lahf
add
push
fnstsw
dec
sbb
mov
jp
jb
stos
sbb
jp
inc
negb
icebp
scas
shll
push
push
jbe
orb
jo
shlb
loopne
sti
loop
fmuls
pop
push
fisttps
xchg
mov
adc
fimull
adc
inc
xor
or
pop
movsl
push
pop
shrb
push
arpl
outsl
in
mov
jecxz
sbb
stos
inc
inc
and
mov
or
and
int3
adc
lcall
xor
lods
add
mov
jne
xchg
inc
pop
btc
loopne
add
hlt
adc
add
into
stos
inc
popf
add
or
cmp
idivl
ret
xchg
xchg
leave
mov
cmp
test
or
cltd
push
int
fdivr
cmp
out
pop
add
inc
loope
in
add
pop
arpl
ss
leave
hlt
sbb
pusha
cs
dec
jb
rcrl
pop
nop
movsl
pop
movsb
std
xchg
sti
sbb
xchg
inc
mov
das
sub
lds
icebp
stos
sar
testb
sbb
dec
mov
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
lods
test
adc
mov
adc
out
ret
rdmsr
push
in
push
into
mov
scas
push
dec
test
xor
dec
pop
inc
repz
lea
enter
not
fdivrl
xchg
call
fistl
xor
mov
es
mov
pop
xor
aaa
mov
lods
jge
lcall
iret
inc
repz
pop
into
mov
push
icebp
mov
xchg
loope
jg
jo
push
insb
pop
sbb
jae
adc
pop
insl
and
push
inc
adc
lods
cmc
jno
or
pop
mov
dec
sbb
das
push
cmp
dec
xchg
push
test
push
lcall
push
jno
lret
mov
push
xchg
mov
sbb
popf
nop
pop
mov
cli
lds
loopne
and
rclb
shll
and
sbb
mov
or
sub
mov
dec
sahf
pop
mov
fwait
mov
pop
xchg
je
inc
mov
dec
pop
push
mov
cmp
in
stos
loopne
pop
imul
inc
mov
xor
std
mov
mov
inc
outsl
and
mov
xchg
je
pushf
cmp
sbb
cmp
dec
jns
fistpl
mov
ret
aas
roll
pop
test
mov
outsb
jae
or
mov
push
adcb
and
cmpsb
pop
jb
arpl
sbb
dec
insl
or
pop
mov
test
movsl
jo
clc
iret
out
mov
push
adc
dec
dec
sahf
jnp
dec
lds
ffreep
sahf
push
insb
ljmp
das
and
stos
popa
stos
xchg
add
push
lahf
jbe
dec
fcomps
add
pop
shl
dec
add
cmp
jbe
inc
int
jne
idivb
adc
fcomps
popa
jo
mov
and
jg
xlat
inc
daa
out
mov
push
push
xchg
in
and
add
pop
push
in
pop
lods
ds
jge
out
aaa
shlb
jno
xchg
sahf
iret
inc
push
xor
out
loope
xchg
or
inc
mov
xchg
jo
mov
sbb
popf
cld
inc
cmpsb
dec
daa
sahf
loope
and
data16
push
xchg
cmpsl
cmp
xchg
mov
mov
mov
mov
stc
out
scas
jg
rorl
pop
jg
sar
mov
and
roll
insl
addl
jo
add
adc
jp
js
sub
pop
popa
mov
sub
testb
stc
mov
out
lock
imul
arpl
pop
push
and
sub
les
repnz
add
movsl
cmpsl
cld
ret
orb
ds
lahf
xchg
adc
ja
sbb
out
dec
xor
sub
and
push
dec
xor
cmp
insb
fistpll
push
test
int
sub
inc
sahf
sub
mov
sbb
cmpsl
sub
add
jg
clc
sub
mov
jge
mov
sub
dec
jae
cmp
pop
sub
cwtl
jb
dec
cltd
or
fldt
xchg
or
inc
idivl
out
pop
mov
pop
rol
enter
cs
jg
test
ljmp
cmpl
les
rolb
sbb
xor
adc
adc
aad
sub
push
jl
dec
and
test
and
stos
jmp
xchg
sub
out
subb
icebp
pop
rorb
inc
jbe
pusha
cmp
and
rcl
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
xor
xor
imul
ret
mov
fsts
sti
xchg
xlat
and
and
lahf
js
in
mov
ja
xchg
nop
iret
outsl
js
jo
fwait
cltd
addb
repz
mov
push
xchg
test
fisubrl
xor
bound
adc
pop
xchg
push
lahf
jb
fadds
mov
test
xchg
pop
je
sub
loopne
insb
sarb
nop
mov
or
push
or
jbe
xor
mov
sbb
jnp
mov
push
inc
mov
aam
in
movsb
sbb
mov
dec
add
mov
fwait
div
inc
mov
inc
mov
mov
fstl
and
scas
lret
and
dec
mov
imul
jle
mov
dec
or
add
add
arpl
mov
add
sbb
arpl
movb
je
cwtl
add
or
stc
imul
stc
movsl
mov
mov
imul
loop
push
push
popf
add
and
inc
jns
roll
cmp
rcr
ja
mov
adc
adc
in
adc
mov
js
int
lcall
sbb
jmp
lret
sar
leave
mov
outsb
xor
stos
sub
xorl
movsb
out
lock
lea
inc
cltd
cmp
test
or
mov
xor
hlt
mov
ja
mov
push
hlt
sbb
jp
pop
cmpsb
cmp
add
mov
cmp
scas
push
sub
das
les
pmovmskb
or
pop
or
push
cmp
cmp
out
fisubrl
xchg
adcl
and
dec
inc
sub
ret
sub
rcrl
and
inc
cmp
xchg
loope
push
aaa
cwtl
add
inc
je
jae
xor
jbe
sub
shlb
ja
adc
lret
outsl
cwtl
inc
insl
cmp
in
or
test
mov
popa
push
jmp
mov
jae
or
lret
adc
inc
cmp
stos
xchg
imul
stos
out
iret
jmp
sub
pushf
adc
outsl
xchg
or
mov
cmpb
mov
ficompl
push
dec
insl
inc
push
test
jns
xchg
icebp
cmp
scas
cmp
sub
xor
scas
test
jo
sbb
fidivrl
dec
loope
push
bound
das
sub
adcb
adc
add
enter
gs
imul
adc
push
outsb
push
lcall
push
inc
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
push
xor
mov
adc
adc
pop
dec
ljmp
push
adc
sbb
push
mov
aaa
pop
push
std
push
popa
push
incb
int
mov
addr16
fs
pop
mov
jge
or
and
sbb
aaa
push
jge
rcl
sbb
push
fdivrs
dec
pop
jecxz
inc
bound
jp
arpl
pop
sbb
add
adc
fbstp
rolb
das
xor
pop
mov
out
frstor
clc
xchg
fstpt
cltd
arpl
or
aas
cmpb
mov
and
mov
xchg
scas
clc
sbbl
mov
imul
jg
or
mov
movsb
xor
nop
nop
adc
push
iret
mov
lods
mov
popa
loop
sahf
mov
roll
ja
sub
push
test
cmp
cltd
arpl
andb
fdivrs
js
test
mov
lret
mov
test
aam
jbe
mov
jp
cmpsb
std
shlb
pop
aad
and
xor
fcoms
lcall
sub
mov
mov
dec
hlt
adc
scas
push
shrb
dec
notb
or
pop
mov
xor
jp
daa
jo
lods
add
mov
sbb
inc
aad
lret
jecxz
cmp
fs
nop
in
outsl
sub
adc
les
dec
pop
inc
insl
dec
fsubrp
in
jp
xor
xor
jmp
add
mov
cmp
js
add
add
aas
xlat
inc
sbb
enter
into
insb
cmp
sarb
rclb
pop
push
and
lods
mov
mov
stos
movsl
mov
add
imulb
sub
scas
inc
imul
sbb
push
call
dec
scas
fildl
mov
out
push
jne
js
push
sbb
addr16
lods
imul
or
cmp
cmc
stc
add
pop
test
xlat
call
mov
xchg
repz
sti
scas
and
sti
call
dec
push
xor
mov
jl
cli
int3
push
sbb
xchg
daa
aam
test
mov
arpl
add
jle
jp
xor
int
adc
fwait
in
ret
push
pop
xor
push
jle
bswap
movsb
popw
inc
push
or
adc
fistpl
xor
lahf
cmp
xor
xchg
in
sbbb
xor
aad
pop
fdivrl
xchg
outsb
sub
and
sti
out
leave
lods
aaa
push
xchg
cmpsb
xor
sub
push
mov
fistl
leave
jmp
stc
pop
pusha
pushf
adc
add
mov
xor
dec
mul
fisubrl
cmpsb
push
pop
scas
xlat
fistpl
in
pushf
mov
lods
in
sbb
mov
repnz
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
mov
adc
adc
adc
or
xor
ss
xor
sbb
cmp
ficomps
push
and
and
adc
sub
or
ret
xchg
mov
or
mov
call
rclb
adc
xlat
mov
icebp
mov
cs
add
dec
ljmp
xchg
pop
dec
scas
or
out
mov
je
les
inc
xchg
sub
repz
adc
xchg
movsl
and
lahf
pop
fcmovnb
stc
test
fldenv
add
dec
in
popa
sbbl
inc
les
loop
outsb
ficoms
in
gs
push
int
pop
aas
lcall
jge
roll
paddsb
shlb
aaa
cmpsb
adc
leave
scas
pop
sbb
inc
fisttpl
insl
icebp
nop
mov
mov
mov
in
mov
loop
stos
and
xor
xlat
cwtl
cmp
xchg
fldenv
arpl
cmp
out
mov
dec
mov
outsb
xchg
enterw
fucomp
adcb
adc
ds
loope
jmp
push
jecxz
sub
mov
mov
imul
sub
mov
cld
and
xchg
push
aaa
outsb
sbb
faddl
xchg
sar
out
adc
fildll
stos
pop
xor
sbb
adc
std
loop
adc
and
mov
pop
lds
inc
jb
outsb
inc
jge
out
lret
loope
xor
jp
out
gs
aam
fidivrs
sub
lds
jmp
lcall
shrl
mov
mov
jle
xor
cld
jge
jo
xchg
lods
sub
xchg
add
pop
lods
adc
jne
lea
xlat
outsw
mov
rcrb
in
lods
gs
mov
cli
jecxz
inc
fildl
push
lods
in
shll
insl
fs
cmp
std
sti
fstpt
mov
inc
push
add
out
pushf
jo
dec
or
scas
cmp
push
movsb
ror
dec
xor
orb
dec
outsl
sub
xor
fsubr
dec
mov
ja
add
out
add
stos
sbb
scas
push
dec
outsb
movsb
jmp
in
jne
inc
jl
popf
mov
ss
jo
sbb
mov
xchg
mov
sti
sbb
sub
insb
xor
mov
jmp
test
mov
inc
xor
mov
imul
mov
outsb
pop
add
lea
push
loopne
fstp
mov
sub
or
push
mov
push
push
fnstenv
sahf
mov
jg
push
push
jmp
fdivs
mov
and
xlat
imul
insl
sbb
jmp
loope
movsl
enter
fwait
jb
dec
sbb
repz
mov
movsl
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
cmp
adc
adc
adc
les
push
or
pop
fmull
push
int
push
nop
mov
inc
inc
aaa
insb
cs
popf
icebp
int3
dec
mov
lods
cld
sbb
cmpxchg
into
cmp
or
jmp
or
outsl
mov
stc
xchg
pop
sbb
inc
cmpsb
xorb
clc
mov
scas
out
mov
test
mov
dec
cli
mov
jns
ds
popa
push
in
pop
push
and
test
inc
repnz
or
mov
loopne
lcall
mov
in
jmp
rclb
xchg
mov
push
out
sub
jg
lahf
mov
insl
sub
pusha
pushf
leave
sub
dec
mov
jl
mov
adc
push
vpcmpgtw
adc
cmp
insl
iret
or
cli
dec
mov
es
scas
fsubp
aam
outsb
push
push
sub
mov
or
pop
lea
jecxz
fldenv
out
lret
push
scas
or
pop
mov
fdivl
fstpl
cmpsb
cwtl
lret
and
add
lock
jb
add
jae
stos
lock
mov
push
std
ret
xchg
add
xor
in
sbb
outsl
hlt
or
push
xor
push
loop
dec
inc
js
pusha
xor
push
lds
add
mov
pop
or
inc
jp
pop
jb
mov
mov
mov
out
cmpb
repz
pushf
adc
stos
pop
cli
push
lods
int
add
xchg
mov
shll
mov
push
outsb
loop
pop
mov
inc
mov
ss
js
sbbb
fistps
cmp
ficoml
stc
inc
fisttps
outsl
loop
xchg
and
jmp
push
sbb
in
mov
flds
je
popa
pop
into
mov
int3
outsl
out
sbb
sbb
cmp
call
fsubr
and
xchg
in
push
adc
xor
movsb
fnstsw
jb
jne
jle
insl
stos
push
sbb
sub
lcall
loopne
xchg
sub
push
push
cmpsb
pop
mov
pop
add
xchg
sbb
scas
jmp
repz
test
out
fidivl
shrl
dec
sbb
lods
arpl
add
push
jns
test
xor
out
loop
int
push
or
das
xorl
in
andb
or
icebp
das
stos
adc
sub
push
bound
iret
mov
xchg
bsf
rcr
xchg
lret
or
xor
add
cmpsb
mov
pop
xchg
sbb
push
leave
push
add
mov
jo
sub
int
lret
jl
call
jmp
popa
xor
lret
cld
pusha
lret
inc
pop
es
hlt
xor
out
call
add
clc
add
xor
add
jecxz
fwait
lea
inc
lea
sub
dec
fwait
push
push
paddusw
xchg
adc
sahf
leave
mov
insb
add
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
sbb
dec
mov
adc
adc
push
call
xchg
dec
push
ret
xor
sub
sbb
jne
or
pop
ds
repz
xor
arpl
jno
adc
xor
push
mov
sbb
sub
mov
fsqrt
ss
adc
sbb
clc
mov
fldenv
stos
adc
mov
xchg
mov
push
xchg
pop
lcall
aam
cmpsb
aam
enter
jp
and
jne
imul
lret
pop
lea
xchg
jne
out
adc
sbbl
lahf
sbb
shlb
xchg
iret
pop
sti
add
lods
push
xor
sbb
mov
xor
rcrb
or
mov
es
repz
inc
insb
sub
push
push
outsb
lcall
popa
push
les
shll
cmp
push
mov
dec
jno
sarl
mov
xor
jnp
push
es
push
add
cmp
xchg
push
xor
pop
sahf
lret
int3
mov
divl
push
and
pop
add
inc
jge
pop
dec
jp
or
jmp
fwait
ss
sahf
sbbl
add
xor
and
cltd
stos
inc
push
loope
xchg
cmp
jl
fmuls
push
or
cmp
xchg
push
mov
xor
adc
lock
lods
in
mov
jno
lock
dec
int
pop
or
stos
push
sbb
xor
add
lock
xchg
push
push
outsb
jns
stos
or
inc
pushf
mov
mov
mov
in
add
add
loop
leave
and
nop
xor
or
out
fbld
pusha
push
pop
pushf
mov
in
stos
pop
mov
in
aas
mov
mov
adc
sbb
pop
mov
rorb
add
mov
or
or
rcr
pop
in
loop
fs
roll
mov
dec
fnstsw
mov
cmp
roll
aam
js
stos
dec
jecxz
xchg
or
imul
ja
jno
das
xchg
cmp
aas
jbe
adc
sub
pop
fstl
jle
push
fidivl
cmp
add
adc
aaa
test
ljmp
je
jp
mov
mov
xor
lret
adc
xor
cmp
sbb
dec
xchg
cmp
jg
repz
xchg
cmpsb
add
cmp
cltd
sbb
pop
cwtl
xchg
xchg
push
cwtl
pop
sbb
out
mov
jno
cld
cli
xchg
ud0
mov
push
pop
mov
sbb
xchg
cmp
jg
inc
jp
and
iret
jno
lods
mov
jnp
fimull
pusha
insl
movsl
dec
pop
adc
inc
imul
hlt
adc
jle
mov
sahf
adc
scas
inc
hlt
imul
sub
xchg
dec
decl
decl
jl
decl
ret
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
adc
pop
pop
clc
xchg
add
ficomps
out
add
call
cli
out
pushf
faddl
repz
pop
dec
clc
xchg
pushf
mov
mov
in
xor
add
nop
push
inc
jle
sbb
lock
dec
test
pop
testl
lods
stos
cmp
adc
mov
lret
fwait
adc
push
mov
push
jp
scas
addr16
dec
mov
lahf
sbb
push
jnp
inc
out
pop
icebp
insl
adc
or
or
pop
dec
jnp
jb
cli
fwait
lret
stos
in
mov
dec
andl
xor
outsl
fmull
xor
movsb
xor
mov
lods
cwtl
jle
in
push
lcall
dec
les
xchg
jge
popf
xchg
in
sbb
mov
test
dec
in
ret
xchg
sahf
cmpsl
adc
in
pop
or
add
jmp
jnp
jmp
jne
push
mov
lahf
sbbb
mov
cmp
pop
xor
pop
cmpb
push
pop
sbb
pop
jo
push
pop
loop
xchg
rolb
cmp
pop
loopne
adc
mov
gs
mov
jl
dec
js
pop
aas
sbb
inc
hlt
xor
jmp
inc
inc
jo
frstor
add
popa
fs
repz
adc
out
or
mov
xchg
addr16
enter
dec
or
adc
rolb
jl
xchg
cs
loopne
xchg
jle
mov
jecxz
xchg
popf
xchg
xor
sbb
lods
pushf
gs
into
test
loope
scas
pop
sub
mov
shlb
imul
out
push
cli
xchg
mov
ret
in
ja
xor
in
xchg
pusha
fimuls
arpl
cmpsb
inc
mov
xor
rcll
lcall
add
push
sbb
enter
inc
jbe
nop
cmp
in
mov
dec
mov
mov
mov
adc
pop
int
js
jne
xlat
xor
sbb
ja
push
popf
mov
fwait
out
ficompl
jns
aad
xor
dec
inc
and
jnp
cmp
lock
dec
mov
add
pop
sbb
pop
pop
push
in
int
rorb
repz
inc
add
hlt
mov
mov
cmp
in
inc
xchg
mov
adc
cmp
lahf
jmp
push
pop
je
xchg
push
sub
test
mov
jle
jno
sahf
mov
dec
push
pop
insl
xchg
cmp
shrb
cld
xchg
insl
xchg
inc
xorb
mov
mov
or
mov
push
mov
mov
inc
leave
iret
rcrb
fcomps
mov
aaa
repnz
or
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
jle
mov
adc
adc
movsb
adc
iret
or
mov
jae
jecxz
les
push
aaa
push
dec
jne
ja
stos
adcb
cli
nop
pop
and
xor
je
inc
mov
dec
ret
mov
push
mov
push
shlb
pop
ljmp
pop
fsubrl
stos
and
sbbb
dec
ja
push
insb
popa
jmp
pop
bound
shlb
hlt
push
push
mov
shlb
jno
lods
add
sbb
mov
daa
xchg
pop
adc
ror
pop
adc
test
jl
enter
adc
dec
lcall
fpatan
and
jnp
mull
add
and
jl
jmp
pop
xchg
repz
dec
std
dec
xor
push
add
pop
pop
adc
nop
inc
pop
mov
fstps
enter
mov
cmpsb
cmp
roll
mov
mov
pusha
inc
add
dec
xchg
mov
cmpsb
xorl
jg
sub
adc
push
mov
mov
jae
imulb
lret
sbb
clc
mov
fdiv
sbb
pop
add
add
sbb
sbb
push
dec
push
or
push
cmpsl
bound
push
es
or
mov
sti
fldenv
lea
sahf
push
mov
cmc
test
xchg
or
mov
dec
inc
rcrl
xchg
push
mov
push
adc
inc
sbb
pop
addl
jl
cltd
adc
shlb
fidivrs
insb
bound
lea
mov
mov
xor
popf
nop
aad
in
test
sbbl
nop
in
inc
pushf
pushf
cmpb
fwait
out
sahf
mov
mov
pop
adc
fstpl
sar
adc
dec
mov
lcall
mov
jno
fnstsw
dec
mov
and
cmp
shrb
push
adc
jno
mov
and
nop
adc
mov
mov
sbb
jb
xchg
xor
ljmp
xor
test
mov
shrb
lock
cmp
cld
dec
mov
dec
rcrl
scas
add
dec
dec
xchg
clc
fs
das
out
add
sbb
or
fwait
lock
jle
xchg
cli
jbe
icebp
cmp
test
push
call
das
or
xor
sarl
cmp
ficoms
mov
lods
sub
pop
in
jg
dec
add
or
xchg
scas
adc
xor
cmc
adc
das
jmp
pop
mov
mov
add
xchg
ret
ret
aad
push
cmp
mov
orb
jbe
jnp
testb
mov
cwtl
cmpsb
popa
addr16
jl
adc
mov
xchg
cmp
inc
and
scas
dec
or
icebp
mov
push
out
cmp
adc
movsl
lahf
loop
popa
mov
mov
in
fwait
mov
jbe
adc
sarl
aad
lea
push
sbb
xchg
imul
adc
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
out
mov
xchg
movlps
mov
push
loope
xchg
loope
push
clc
pushf
data16
mov
inc
dec
push
and
mov
mov
cmp
or
negl
mov
insl
popf
out
bound
sarb
dec
sub
hlt
testl
mov
inc
stos
pop
inc
xchg
add
inc
pop
int
pop
push
ja
pop
les
jge
pop
mov
xchg
inc
cmpsb
js
push
mov
ds
es
imul
test
shrl
pop
xor
repz
or
arpl
xor
mov
and
sti
pop
xor
sub
rcl
xor
and
pop
fsubs
push
jb
loope
ret
stc
aad
cmp
push
dec
sbb
and
bound
push
insb
inc
push
or
jns
das
arpl
aad
stos
jecxz
mov
imul
fidivs
mov
shlb
enter
push
test
cld
lods
push
mov
ljmp
cmpsb
add
mov
outsl
out
jae
cld
in
dec
in
mov
shl
dec
xchg
pop
repz
test
xor
dec
sub
dec
pop
jae
and
rorb
mov
add
adc
fwait
mov
pop
and
cli
adc
sub
xchg
scas
pop
add
rcrl
xor
sbb
jbe
push
mov
push
out
fistl
out
insb
test
add
les
fdivs
sub
mov
mov
sbbb
stc
xchg
aaa
stos
int
xchg
xchg
sbb
dec
sub
pop
add
shlb
jns
mov
outsb
scas
inc
cmp
and
inc
shrl
dec
aad
stc
add
fdivr
mov
repz
xchg
cmpsl
inc
mov
add
popf
scas
les
ljmp
lcall
inc
mov
push
jp
dec
dec
add
test
mov
sub
xor
add
mov
clc
arpl
shll
insb
sub
das
nop
and
or
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
pop
mov
xchg
movlps
cmpsl
mov
ljmp
shl
pop
and
test
insb
cli
xor
xchg
fdivs
ret
arpl
pop
shr
sbbb
dec
adc
push
adc
pop
lock
test
add
dec
icebp
dec
popf
or
insl
add
lods
in
or
cld
xor
dec
cmp
mov
mov
andl
xor
out
jns
add
hlt
lret
pop
dec
ljmp
mov
sbb
xchg
clc
pop
jno
and
jb
stos
adc
mov
cmc
leave
sbb
daa
cltd
sub
mov
pop
push
pop
gs
xor
mov
mov
lock
jg
arpl
sub
inc
aaa
jecxz
mov
dec
push
mov
notl
jb
xadd
test
mov
mov
movsl
cmp
movsb
repnz
lahf
xchg
xor
and
clc
mov
ficomps
add
jns
ss
ljmp
repnz
pop
mov
adc
cmpxchg
mov
lea
out
adc
push
pcmpgtb
stc
mov
inc
sub
cmpsl
lds
cmpsl
notl
inc
xchg
or
lret
adc
ja
daa
mov
mov
or
pushf
or
adcl
fnsave
dec
ljmp
aas
rorb
in
add
sub
lret
push
lea
adc
loopne
mov
mov
cmpsl
sbb
daa
and
int
pushf
test
or
mov
xor
sbb
lea
mov
push
hlt
lods
push
xor
add
mov
out
mov
sub
int
movsl
aam
jne,pt
cmpsl
xchg
mov
pop
mov
xor
xchg
cmpsl
movsb
adc
mov
lea
sub
int
inc
iret
daa
adc
enter
int3
out
test
mov
pop
js
hlt
popa
aam
cmp
cltd
xchg
mov
sub
add
jl
rol
cmc
imull
rorb
dec
add
sbb
jmp
sbbl
cmp
aam
pop
lods
lea
push
lds
adc
ficoms
ljmp
leave
pop
leave
inc
cmp
mov
jg
or
test
mov
popf
mov
mov
push
lea
pop
push
add
xchg
adc
int3
stos
mov
xchg
repz
pop
adc
jmp
aaa
rclb
sub
xorl
dec
aam
lahf
adc
push
mov
aaa
push
sbb
jbe
pop
xchg
cmpb
push
xor
out
shr
push
sub
pop
and
notb
sbb
leave
movsb
in
inc
call
fmull
cmp
sub
xchg
sbb
push
in
mov
in
inc
push
imul
xchg
jg
inc
inc
negl
push
add
orl
popf
insl
inc
pop
pop
push
mull
push
ret
sbb
adc
hlt
pop
mov
add
das
push
ret
sbb
les
lds
cmp
mov
lret
jl
nopl
daa
xlat
cltd
sbbb
jbe
fidivl
out
into
jge
pop
push
inc
adc
insb
pop
jo
pusha
push
cwtl
mov
inc
adc
out
jae
iret
out
test
aaa
jno
or
lret
out
shlb
ss
je
flds
adc
je
xor
sub
mov
push
cmpsl
sti
mov
loop
fistpll
or
fisubs
adc
insl
stos
out
gs
pop
or
ja
inc
xor
movsl
movsb
push
inc
fildl
clc
jl
outsb
addl
jne
test
jle
call
and
addr16
mov
mov
fimuls
cmp
mov
lods
mov
adc
loopne
xchg
in
pop
xchg
testl
int3
enter
cmc
mov
inc
andl
push
mov
cmp
test
popf
test
push
arpl
cmp
das
or
jbe
inc
stos
or
xchg
mov
aaa
or
dec
aad
in
or
into
outsb
ljmp
rcr
movsl
js
fcompl
sbb
xor
xlat
stc
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
adc
push
push
rcll
xchg
movlps
pop
inc
fisttpl
fmuls
cmp
pusha
loop
rorl
xlat
ds
call
imul
push
lcall
add
inc
cmpsb
in
mov
sbb
cmp
mov
xor
pop
mov
pop
and
imul
rol
pop
movb
cmpsb
and
clc
addb
or
sbb
push
xor
xchg
dec
lret
add
mov
clc
bound
rclb
push
loop
fldcw
sbb
fisubs
cli
and
pop
fsubrs
add
test
data16
cmpl
gs
out
adc
sub
jecxz
insb
adc
and
repz
sahf
test
fxch
or
adc
cmp
push
xchg
mov
jbe
inc
mov
jg
push
push
and
imul
xchg
rcll
into
sub
in
roll
aad
popf
cmp
test
mov
xor
call
fistpll
mov
jne
es
mov
adc
rcr
test
test
rcl
jb
and
mov
sbb
jns
xor
outsb
addl
xchg
lret
inc
mov
pop
push
push
add
mov
push
pop
pop
mov
ss
dec
push
in
cmp
int3
and
adc
out
mov
sub
xor
fmull
sbb
movsb
add
mov
dec
lret
mov
test
fcmovnu
mov
xchg
test
jae
adc
cld
frstor
cmp
mov
jne
mov
rcrl
imulb
mov
test
push
mov
cs
mov
pop
push
shrl
jle
dec
lods
mov
mov
lock
sbb
bound
test
jns
jge
aad
push
push
xchg
call
xchg
sbb
mov
sbb
leave
xor
lods
jle
jno
call
and
xor
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
or
xor
into
lock
mov
adc
sub
mov
pop
lret
xchg
test
and
pop
inc
sti
adc
cmp
orb
les
lock
mov
jno
xor
stc
out
push
loopne,pt
mov
adc
pop
call
lret
add
popa
or
loopne
jae
pop
jo
mov
inc
test
jne
orl
scas
jge
xor
sub
shrl
jmp
testl
jg
shrb
pop
movsb
insl
out
stos
mov
fisubl
fimuls
addr16
mov
push
or
mov
outsl
popa
inc
jno
mov
imul
aad
bound
aad
pop
jge
dec
push
in
cmp
add
outsb
into
jecxz
imul
sub
add
addr16
add
mov
in
roll
pop
arpl
jo
movsb
es
fisttpl
xor
add
pusha
rcl
add
add
cli
ffree
pop
xor
jecxz
mov
mov
mov
fldt
aaa
in
add
sub
dec
sbb
std
and
test
cmpl
das
mov
pop
sbb
int3
xor
cmpb
and
shrb
outsl
add
lods
inc
sahf
inc
jecxz
mov
loop
xchg
repz
vcmpps
dec
nop
sub
cmp
fcmovnbe
mov
fstpt
movsb
arpl
xchg
cmp
and
std
mov
sti
xor
inc
dec
add
cwtl
mov
adc
dec
popf
loopne
adc
enter
aam
pushl
cld
imul
rcrl
lds
out
xchg
pop
lock
rolb
xchg
in
test
xor
fdivrs
xor
xor
xor
js
lahf
inc
and
or
jmp
xor
adc
insb
mov
fsts
movsb
sbb
mov
xchg
push
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
inc
mov
test
adc
xchg
lcall
xor
out
out
shll
mov
pushf
leave
xor
xchg
jg
and
lret
inc
dec
pop
les
xor
movsl
mov
xchg
mov
data16
mov
mov
sbb
scas
dec
and
andl
mov
sbb
iret
aaa
or
mov
ret
sub
mov
jb
sbb
test
cltd
loopne
repz
pop
or
cmp
xchg
jmp
mov
enter
mov
ds
mov
int3
inc
push
and
test
push
js
and
fadd
cmpsl
sbb
jl
loop
sub
jle
mov
xchg
loop
into
sbb
mov
dec
test
jo
cmpl
xor
or
sbb
dec
insl
xor
xor
addr16
movsb
and
cmp
jo
adc
sub
or
scas
xchg
ljmp
test
xchg
sub
push
fucom
aam
jmp
fsubrl
cmp
adc
mov
clc
mov
scas
push
xor
arpl
add
mov
es
iret
and
incl
pop
popf
rclb
shrl
push
dec
mov
stos
pop
push
push
inc
push
aaa
outsb
lods
and
push
ss
mov
fcoms
inc
ljmp
sti
pop
pop
mov
imul
push
cmpsl
adc
mov
stos
add
mov
cmp
mov
les
test
cld
fistpl
stos
jbe
mov
jmp
add
xchg
xor
js
inc
cmp
rclb
push
jb
xchg
and
jbe
mov
cwtl
enter
lea
or
pop
aam
xlat
push
push
add
mov
jo
fwait
cmp
adc
aad
lcall
xor
adc
xchg
or
mov
call
adc
stc
lret
adc
insb
clc
mov
or
mov
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
jbe
add
adc
add
adc
mov
mov
ficomps
es
ljmp
inc
and
xlat
or
dec
add
pushf
popf
enter
cmpb
scas
clc
mov
mov
addr16
cltd
popf
mov
std
addb
mov
xchg
repz
imul
neg
mov
adc
xchg
inc
jge
and
test
mov
pop
mov
add
mov
fidivrs
xchg
mov
icebp
iret
pushf
cltd
test
mov
cmp
mov
cmp
in
hlt
push
orl
scas
outsl
mov
xor
or
in
sub
ret
test
fistps
xor
mov
xchg
xorl
mov
pop
jne
rol
shll
add
inc
mov
push
mov
and
mov
insl
ret
sub
sub
jae
jl
scas
cmc
sbb
les
inc
pop
icebp
xchg
ja
loop
rorb
ljmp
add
push
or
pushf
push
in
lds
les
and
das
jo
in
je
inc
sub
sbb
xor
outsb
inc
push
push
cmpsl
cmpsl
out
sbb
dec
enter
mov
cld
cvtpi2ps
cmp
add
jb
lcall
xor
andb
nop
xlat
insl
add
xor
ret
pop
test
xchg
ja
push
or
cmp
xor
int3
sbb
sbbl
lock
daa
or
test
aad
ffree
mov
mov
cwtl
adc
mov
cli
sti
push
loop
divl
inc
popa
sbb
cld
int3
cmp
sahf
loopne
mov
sub
cwtl
sbb
mov
mov
das
sub
xor
inc
cmpsl
iret
dec
or
sbbb
int
and
mov
sbbl
pop
fldenv
stos
xchg
repnz
dec
daa
mov
adc
jb
xchg
sbb
pop
cld
or
ljmp
js
lahf
xchg
mov
cld
clc
sti
jp
inc
cmpsl
cwtl
andl
inc
lea
popa
fdivl
sub
stos
cs
out
jle
aam
call
or
add
or
xchg
pop
jg
lahf
std
inc
lds
mov
mov
fs
stos
dec
cs
mov
sub
mov
insl
mov
sbb
push
cmp
je
je
mov
xor
loopne
jmp
fsts
push
imul
xchg
and
adc
shl
add
xor
sbb
stc
mov
lods
das
test
mov
lods
outsl
and
sub
add
jbe
xor
shrb
mov
jb
xchg
mov
or
mov
xchg
imul
fsubrs
inc
pop
stos
pop
sti
aad
jo
stos
jg
loop
mov
xlat
subl
rcll
mov
sub
jbe
test
pusha
mov
cmp
aam
xchg
loopne
xlat
jle
nop
cmp
add
push
data16
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
sub
add
adc
and
loopne
pop
shrb
flds
mov
jb
mov
int
push
push
loopne
scas
xorb
cld
lods
sbb
rcrl
subb
sub
in
add
sub
adc
jne
adc
cli
lea
loope
sub
icebp
jg
rcrl
inc
sbb
mov
stc
sbb
lods
call
pop
adc
add
ss
psubw
dec
cld
xor
into
or
fistl
jne
mov
rorb
cmpl
inc
aaa
int
rcr
fistpll
cmp
xchg
dec
xchg
push
jbe
pop
sbb
sti
js
push
fsts
fldt
repnz
jl
les
mov
mov
push
popa
xor
imul
xchg
adc
lret
sbb
sub
fistl
cli
mov
xor
sbb
inc
add
iret
or
mov
pop
inc
xchg
adc
inc
cmp
hlt
push
pushf
inc
jecxz
lods
inc
dec
loop
fcomps
cmp
xchg
and
jns
mov
mov
call
push
xchg
jo
js
xor
sub
shlb
sub
lods
pop
and
test
add
dec
mov
pop
jne
aaa
mov
sub
aam
fcompl
pop
jbe
push
sbbl
cmpsb
cmp
pop
leave
cmp
sbb
stos
nop
jno
xchg
daa
leave
push
out
shrl
mov
inc
sbb
in
xor
ss
sub
dec
jne
mov
imul
cmc
je
jmp
jmp
mov
inc
sbb
xor
and
icebp
add
jnp
adcb
mov
and
sub
add
sub
je
mov
stc
cltd
data16
les
icebp
or
sub
andb
or
xor
adc
cli
stos
push
add
mov
cmc
inc
jg
js
cmp
cmp
inc
mov
and
ds
movsl
jne
ljmp
mov
ds
fwait
sbb
xchg
std
outsl
xor
leave
test
test
arpl
and
push
loop
jmp
scas
int3
add
frstor
aas
dec
insb
push
or
mov
test
fstpt
jnp
sbb
lock
adc
in
ret
inc
movsb
sub
lods
sahf
test
idivl
push
mov
xor
push
and
jnp
in
mov
jne
aad
pusha
pushf
mulb
jne
xor
rorl
das
insl
cmp
les
push
cmpb
pop
sarl
movsb
test
in
bound
cmc
lahf
jecxz
xchg
stos
in
shrl
loop
or
pop
popf
or
incb
jnp
imull
push
shl
shll
push
sub
mov
jne
scas
or
outsl
and
pusha
inc
test
sub
mov
dec
mov
cld
and
pop
or
in
push
pop
pop
addr16
xchg
mov
es
js
pop
mov
dec
imul
jae
daa
mov
and
mov
sti
dec
aaa
addl
xchg
jmp
test
pop
insl
mov
adc
test
add
add
out
decl
push
clc
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
jns
mov
add
adc
pop
roll
pushf
pop
xchg
std
daa
prefetcht0
sbb
inc
push
push
jecxz
xor
das
mov
mov
mov
pop
sarl
stc
or
pop
bound
or
pusha
mov
jno
inc
mov
adc
mov
dec
dec
out
xor
shlb
in
adc
lods
or
sub
adc
jle
adcb
nop
lret
mov
fwait
push
xchg
hlt
test
pop
mov
jo
lret
data16
adc
pop
xchg
mov
cmpsl
cld
xchg
pop
lea
test
xor
push
bound
dec
cmpxchg
test
int
xor
xor
fmull
inc
mov
iret
fisubl
jbe
movsl
jo
xchg
push
mov
push
enter
les
mov
or
inc
cmc
cmp
inc
out
cmp
xchg
scas
in
js
and
mov
in
pop
add
shll
adc
and
push
scas
cmp
int3
xchg
cmpsl
call
mov
inc
sbb
loope
jno
stos
or
xchg
fcoml
and
push
es
ds
push
fdiv
cmp
mov
test
push
incb
sub
mov
rclb
xchg
rclb
push
int
dec
ret
push
add
adc
add
jmp
jnp
movsb
cs
sti
add
in
daa
sbb
aaa
jo
inc
jl
jb
das
std
push
inc
push
imul
cmpsl
and
stc
dec
aad
icebp
pop
test
pop
rcl
sub
pop
dec
xchg
inc
cmp
mov
or
inc
mov
inc
sub
and
mov
push
cmp
jb
add
jle
cltd
adc
fsubrp
in
push
dec
xchg
scas
in
push
shlb
and
cmp
mov
inc
sbb
scas
jecxz
pop
mov
pop
and
sbb
inc
or
int3
loop
loopne
out
js
push
push
mov
fmul
xor
cmpsb
addr16
fs
subl
sub
adc
inc
mov
sbb
movsb
add
inc
jmp
outsl
cmpsl
and
xor
stos
ret
mov
loope
push
dec
jmp
xchg
mov
das
outsl
je
xchg
lcall
aaa
jg
jge
pop
dec
inc
sbb
adc
idivb
ret
sarl
add
jnp
ss
jg
xlat
jne
xchg
je
sbb
xchg
mov
out
arpl
out
cmc
or
fstcw
mov
inc
jg
scas
rol
loope
repnz
jecxz
adc
ret
aad
dec
jnp
add
pop
lds
inc
mov
mov
lcall
cmp
je
lahf
stos
iret
xor
test
adc
cltd
in
int
pushf
or
fdivrs
sub
mov
ja
test
add
lods
mov
test
mov
lcall
dec
dec
mov
outsl
sti
xor
iret
test
scas
pushf
scas
xchg
inc
in
lret
call
mov
cmp
arpl
aad
mov
test
xor
push
jno
push
popa
pop
add
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
ljmp
adc
adc
daa
stos
loop
test
jmp
imul
cltd
insl
movsl
aam
daa
roll
or
mov
mov
dec
test
dec
mov
mov
mov
bound
cmp
scas
scas
roll
add
push
mov
stos
add
cltd
test
int3
in
and
jno
mov
sub
xchg
mov
or
jmp
jo
gs
gs
fcomi
jnp
ret
xor
push
push
gs
cltd
dec
and
outsl
test
cwtl
daa
cs
pusha
add
sti
push
icebp
push
pop
and
lret
imul
xor
or
decl
std
mov
stc
scas
xor
clc
nop
lods
sbb
lock
lods
mov
mov
fidivrl
scas
sub
shrl
dec
jl
jb
add
dec
dec
out
aas
xor
idiv
pop
adc
decl
int3
add
nop
mov
es
sub
or
sub
loop
enter
mov
mov
pop
mov
andl
sbb
jp
mov
lcall
in
dec
lods
mov
pop
mov
jecxz
out
fwait
stos
and
popf
cltd
push
cwtl
xchg
test
cld
adc
out
daa
pop
testb
not
lcall
xchg
shlb
scas
or
or
fwait
inc
mov
iret
or
movsb
scas
jae
cmpsb
mov
lods
push
sub
fwait
lret
push
sbb
arpl
shl
mov
stos
dec
idiv
fdivl
or
push
pushf
adc
cmp
mov
sbb
and
cmp
push
mov
pop
flds
mov
dec
fdivrl
lret
push
cmpsb
dec
imul
lret
inc
test
mov
pop
inc
in
js
mov
dec
cmp
ljmp
cwtl
pop
push
mov
data16
icebp
mov
jnp
arpl
sbb
dec
stc
dec
inc
or
mov
lcall
xchg
outsl
and
rcll
jae
cmp
divb
xchg
rcrl
sbb
fwait
cmp
sarb
in
rclb
dec
sbb
dec
jbe
out
cld
int3
cmp
popa
decl
xchg
pusha
lahf
rcrl
out
js
test
js
in
lret
popa
scas
scas
test
fildll
push
sub
lea
sub
rcll
imulb
loopne
lds
lods
xchg
sbb
mov
dec
aas
xchg
sti
fcomip
insb
adc
or
jge
push
out
outsl
push
pushl
stos
js
fildl
jmp
inc
testl
push
inc
sub
lds
orl
adc
sub
add
addb
pop
lahf
inc
int
nop
and
or
xchg
add
mov
inc
adc
in
imul
xchg
and
mov
mov
pushf
xchg
call
jle
fwait
pop
sarb
push
push
jo
fwait
shll
jno
sub
add
push
jb
mov
lahf
andb
popf
xor
cld
stc
xor
mov
ds
cltd
pop
adc
hlt
inc
sbb
push
cs
sub
inc
repz
jp
out
mov
in
test
nop
inc
pop
and
test
pop
and
add
lahf
push
push
fidivs
or
aaa
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
xchg
dec
and
xchg
adc
jne
adc
loope
loop
pop
push
mov
mov
jmp
sahf
cmp
test
mov
or
push
enter
xor
lahf
pop
inc
jl
jb
mov
cmp
adc
jbe
subb
mov
or
imul
fisttps
out
and
push
jl
push
lods
je
lret
cmp
testb
pop
test
iret
notb
push
mov
es
push
std
jmp
sahf
lcall
icebp
or
out
inc
scas
xlat
or
daa
fs
inc
in
jge
dec
cmp
imul
or
leave
clc
cmc
das
mov
and
icebp
gs
push
sbb
aam
add
fisubs
dec
sub
push
jg
add
push
in
ds
sub
jns
xchg
jae
mov
jl
into
sbb
push
xchg
or
mov
xor
rcrl
das
add
into
cmp
xor
adc
in
test
vpsubq
push
rclb
and
test
adc
mov
mov
and
pop
divl
mov
mov
imul
fsubrp
cmp
push
cs
add
sbb
push
test
mov
lea
pop
or
adc
pop
adc
and
shlb
xchg
jmp
nop
out
leave
lods
pop
pop
mov
test
sbbb
xchg
mov
icebp
jnp
enter
loop
adc
push
int3
arpl
mov
cmp
lods
movsl
add
sub
pop
in
mov
jae
jl
mov
test
and
pop
enter
imul
fwait
cmc
out
insb
push
fiadds
pop
les
xor
aaa
cmp
cmp
xchg
stc
fdiv
cmpsb
pushf
dec
popa
fiadds
lahf
hlt
test
imul
inc
clc
jmp
pop
jmp
sbb
in
gs
ss
idivl
dec
and
rclb
dec
adc
cmp
pushf
mov
jno
sbb
add
sbbl
aam
xlat
push
push
lcall
sub
xor
ret
insl
adc
or
sub
es
aam
gs
pop
icebp
lret
out
aas
inc
mov
cmc
adc
outsb
or
in
dec
jne
in
and
outsl
sbb
adcb
mov
out
pop
scas
jb
in
mov
or
fistpll
push
lcall
or
and
aaa
inc
fisubrl
cltd
mov
sub
ljmp
mov
arpl
jle
cmp
cmp
jle
xchg
jne
add
and
cmp
pop
xchg
xor
in
sub
or
mov
inc
test
sub
sbb
cmc
pushf
mov
icebp
mov
cmpb
insb
sub
and
push
lds
xor
ret
pusha
adc
xchg
sub
pop
or
arpl
push
in
pusha
jno
mov
inc
push
adc
pop
fistpll
lods
dec
inc
add
out
inc
jge
outsl
mov
xchg
popf
adc
push
push
pop
ret
or
scas
jle
aad
movsb
stos
std
in
lods
xchg
or
orb
inc
jmp
inc
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
push
add
fimull
adc
mov
insl
sbb
mov
and
mov
push
dec
enter
push
lea
sbb
xchg
inc
dec
dec
mov
fcomp
jp
mov
or
push
jmp
sti
or
cli
jnp
sub
dec
movsb
fsubp
xor
xchg
xchg
mov
sub
popa
arpl
sub
push
push
push
mov
xor
ds
mov
dec
cmpsl
call
std
daa
inc
and
or
pop
sbb
dec
aam
jnp
in
nop
pop
cmc
outsl
push
cmp
cmp
and
fistps
leave
mov
push
and
and
bound
adc
scas
xorl
mov
and
pop
add
xchg
push
jnp
stos
mov
fists
xor
popf
movsb
xor
jne
or
rol
pop
cld
jne
rcrl
loopne
cmpsb
in
pop
mov
add
rclb
cmp
arpl
xlat
je
xchg
mov
xor
es
xor
add
notb
mov
adc
ret
ss
cli
inc
in
mov
not
dec
adc
jae
xchg
sub
mov
push
dec
push
andl
sarl
push
loope
cltd
mov
cld
inc
or
xor
fcoml
je
mov
mov
inc
adc
subb
iret
mov
dec
cmp
adc
adc
and
imul
rorl
les
lds
jl
jl
jns,pn
add
test
imul
push
pop
inc
iret
xlat
push
shr
pop
insb
andb
data16
dec
push
es
nop
ret
stos
inc
ja
adc
fisttpll
jae,pn
xor
js
stos
xor
ficompl
psrld
mov
imulb
fstpt
mov
inc
mov
and
es
lahf
or
inc
jmp
repz
pusha
rol
loope
idivl
rorb
xor
push
xchg
daa
add
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
pop
dec
mov
decb
adc
dec
sub
jecxz
fisttps
sti
dec
outsl
jle
adc
adc
std
cli
fdivrs
lock
xchg
jnp
inc
lods
jle
cmpsb
or
cmp
sbb
jecxz
ror
nop
xor
cli
xchg
arpl
adc
sbb
sbb
lock
out
jno
push
mov
sub
mov
xlat
or
sbb
fstps
es
adc
push
adc
in
rcr
add
adc
and
mov
bound
push
int3
jb
dec
xchg
cld
fcomip
dec
lret
push
cld
and
out
add
mov
lret
add
dec
add
mov
daa
inc
jle
xchg
jge
inc
inc
sub
dec
mov
mov
push
out
mov
std
sub
sarb
fcmove
jo
cmp
mov
sub
cmp
xchg
popa
incl
or
call
mov
sub
push
mov
and
ljmp
mov
jge
into
sub
outsb
jmp
sub
inc
out
mov
inc
and
addr16
adc
bound
xchg
add
adc
or
scas
xchg
lock
mov
inc
cmc
lods
shlb
xor
inc
xchg
sbb
aad
data16
and
cs
in
adcl
inc
or
fldenv
pop
pusha
jbe
popa
daa
lods
xchg
movsb
sti
stos
mov
fisubs
lock
mov
sub
push
shl
inc
test
xchg
sub
out
pop
mov
sub
pop
push
pop
pusha
jge
nop
aaa
pop
stc
pop
mov
or
add
cld
aas
dec
out
imul
push
frstor
mov
leave
adc
pop
pop
adc
std
lock
pop
mov
gs
and
pushl
push
and
jae
push
sahf
lds
outsb
test
push
or
or
mov
sti
adc
mov
js
dec
xchg
je
int3
sbb
mov
adc
stos
dec
mov
mov
jl
adc
xor
mov
sub
push
or
jge
pop
pop
jne
jp
adc
and
lret
xchg
mov
push
sub
cli
add
jecxz
sarb
cwtl
cmp
cmp
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
cwtl
mov
adc
movlps
mov
cmp
out
test
inc
out
add
jnp
mov
dec
xchg
inc
sbb
imul
arpl
xchg
sbb
cmp
push
ljmp
jae
jne
movsb
jecxz
jl
push
or
popa
adc
mov
stos
and
in
push
adcb
adc
fldt
adc
mov
jns
ret
inc
scas
inc
mov
cmp
loop
cmpsl
jns
xlat
xchg
cmc
adc
sbb
ljmp
adc
lds
sub
bound
fdivrl
and
add
sub
pop
imul
and
out
addr16
stc
xchg
push
fnstcw
push
dec
lock
or
ss
add
stos
and
dec
xlat
push
dec
pusha
lea
sbb
jbe
jne
xchg
aam
mov
cmc
adc
or
dec
ja
filds
mov
dec
ds
cmp
sbb
adc
loope
outsl
pop
inc
das
xor
lea
fwait
xor
xor
xor
and
push
mov
loope
pop
jb
inc
pop
dec
and
lahf
xchg
lds
sub
cmp
cli
test
pop
cmp
pusha
xchg
inc
mov
jno
mov
mov
lret
or
scas
ljmp
and
stc
loope
loopne
int3
mov
aad
adc
fimull
or
jl
aad
mov
rorb
dec
inc
jg
jge
out
out
push
add
rorl
mov
lret
mov
daa
xchg
jl
mov
add
cli
sub
xchg
shll
addr16
cmc
pop
lea
mov
mov
inc
pusha
jg
cmpsl
mov
shl
mov
shr
cwtl
test
add
pop
orb
xchg
insb
cmp
test
push
out
mov
xchg
push
imul
jmp
mov
xchg
inc
jo
js
sub
push
movsl
add
pop
mov
mov
mov
pop
sbb
pop
lods
cli
cwtl
movsl
mov
push
jns
sbb
pop
sbb
out
sbb
and
mov
push
xchg
ret
xchg
jmp
clc
cmp
mov
cmp
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
js
adc
movlps
fstps
das
dec
sbb
mov
nop
xchg
ficompl
or
mov
cwtl
test
mov
dec
test
cmp
leave
leave
mov
lcall
cmp
cwtl
sub
lcall
jne
cmp
lea
and
ficoms
jb
rcll
mov
std
pop
test
iret
ljmp
int3
dec
aas
xor
xchg
adc
lods
xor
aam
jg
xchg
mov
sti
pop
mov
push
sahf
mov
mov
jnp
cmpsl
cmovb
push
pop
xorl
addb
les
jo
pushf
xchg
mov
cli
icebp
xchg
lahf
mov
ret
loope
mov
jl
shll
push
aam
inc
mov
loopne
push
les
std
pop
lcall
stos
push
repz
repz
sub
sub
pop
stos
mov
subl
mov
jecxz
add
jo
and
cmp
ficompl
mov
sub
push
lock
popa
dec
add
sub
movsb
xchg
imul
insb
test
xchg
popa
xor
test
movsb
ret
stc
mov
jo
cmpsb
cs
jb
fldt
inc
xchg
xchg
jo
add
ss
or
push
cs
xchg
repnz
push
fwait
jb
xchg
sbb
int3
out
and
out
fwait
lock
out
xchg
ljmp
orb
shll
or
stos
xchg
jnp
test
int
fcoml
iret
jmp
and
shll
inc
mov
cs
and
push
cmp
xor
xor
lds
fstps
cmp
arpl
push
leave
call
or
cmpb
dec
negl
leave
lret
inc
clc
add
hlt
adc
lahf
cltd
out
dec
add
ljmp
jo
add
mov
lods
xchg
jb
dec
outsl
pop
cltd
mov
cmpsl
nop
dec
call
jl
in
cmpsb
sbb
xchg
test
scas
into
popf
push
dec
cmp
jge
or
dec
daa
cld
inc
js
stos
or
lods
jl
push
mov
cltd
xor
sub
outsb
add
jne
cmpb
movsl
in
in
xchg
jo
push
sbbb
cmpsb
or
mov
mov
push
push
mov
leave
mov
jns
or
dec
decl
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
xchg
push
push
ja
adc
movlps
push
xor
cmp
leave
arpl
dec
and
scas
fisttpl
pop
mov
inc
shll
repz
shrb
in
out
cltd
js
mov
dec
enter
out
mov
rclb
ds
hlt
pop
inc
inc
cmp
testb
pop
gs
sbb
insb
cmp
jbe
jno
call
test
out
dec
cs
xchg
ret
and
push
loopne
mov
lds
test
fisttps
push
dec
mov
in
xor
lret
lcall
adcl
adc
call
in
push
xchg
lret
lret
ljmp
mov
stc
sbb
call
push
js
xlat
stos
xor
sub
je
xchg
cmp
mov
push
jg
loope
mov
sbb
push
inc
aas
xchg
cmc
ss
pop
adc
stos
ret
cmpsb
loope
pop
mov
xchg
jg
in
cmp
vcmpss
sbb
cmp
adc
and
mov
imul
xor
ss
shll
incb
pop
mov
enter
pop
xlat
push
add
daa
dec
call
clc
add
or
call
add
push
pop
inc
sbb
sbb
mov
mov
ljmp
or
notl
jae
gs
push
in
test
sbb
sub
adc
js
mov
and
or
inc
fs
fistpll
push
imul
cmpsl
mov
repz
aam
push
out
or
mov
cmpsl
je
lahf
lret
mov
shlb
inc
push
cltd
sbb
jne
fmull
or
in
je
aas
add
rolb
cmp
dec
add
cmp
jno
outsb
push
pusha
and
mov
sbb
imul
test
or
add
or
cmp
inc
inc
lcall
les
sahf
das
and
shrb
cmp
clc
sbb
test
in
sbb
or
jnp
xor
dec
fwait
inc
scas
out
push
xchg
aam
nop
sub
jp
or
mull
sti
pop
sub
popa
jl
rcl
sahf
addr16
lcall
dec
clc
loope
test
mov
lahf
call
call
mov
jmp
js
cmc
repz
sub
popl
data16
jne
adc
movlps
jmp
mov
sahf
sti
stos
xor
fisubl
outsl
loopne
es
xchg
pop
cs
adc
adc
cwtl
fsubrl
std
push
das
scas
cmovns
gs
xor
movsl
cmp
inc
dec
ljmp
ljmp
jecxz
cmp
push
jb
psubb
in
cltd
cld
aam
repnz
popa
mov
in
lret
cltd
fstl
jl
xchg
jmp
sbb
in
test
nop
ffreep
es
jge
fwait
sbb
push
sahf
inc
je
sbb
bnd
sub
cld
inc
lret
es
call
add
aad
or
nop
mov
sbb
icebp
cmp
jp
pop
and
mov
push
mov
pop
das
dec
in
xor
divl
aas
dec
test
std
add
lds
push
je
scas
xchg
and
popa
and
add
addr16
scas
mov
sub
std
jge
and
movsl
push
cli
lret
lret
into
lahf
lods
sbbb
lea
dec
aad
xor
xchg
movsb
shll
in
dec
repz
jg
sbb
orl
xchg
mov
sub
cmp
aam
jmp
or
xor
mov
dec
call
scas
pop
inc
lods
pop
and
out
pop
jns
xchg
clc
out
aad
push
jnp
sbb
jnp
xchg
add
addr16
sbb
pushf
mov
dec
xor
in
sub
cmpsl
fidivs
outsl
cmpsb
or
fstpt
push
repnz
les
cmp
js
dec
xchg
mov
arpl
jmp
data16
stc
xor
dec
xchg
loope
xchg
insl
pop
fadd
imul
repz
sub
pop
and
mull
adc
dec
cmp
sbb
mov
xchg
lahf
test
jmp
cmp
xor
xlat
out
pop
jmp
and
lds
repnz
daa
fs
xor
in
xorl
mov
add
dec
xor
xchg
jp
jle
enter
pop
sub
pop
xorb
js
pop
or
test
dec
dec
sub
cmova
lret
lcall
jae
inc
sti
addr16
pushf
pusha
jp
sbb
aad
repnz
and
insl
push
and
cmp
or
cmpsl
dec
add
stos
add
inc
xor
call
xchg
mov
fucompp
jmp
daa
gs
mov
dec
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
mov
decb
adc
aas
fldt
aas
dec
int
and
lret
add
sub
mov
dec
arpl
bound
mov
aas
sti
call
je
clc
mov
fs
addr16
clc
adc
pop
inc
jne
sub
fcomip
jg
sub
or
pop
lds
xlat
je
cltd
or
sub
dec
push
addb
adc
jo
repz
jmp
mov
bts
mov
outsb
sub
or
popl
aam
imul
mov
ja
push
mov
cmp
shlb
enter
push
lock
mov
xchg
leave
pusha
das
adc
mov
mov
pop
adc
xchg
mov
icebp
test
test
xor
jne
cmpsl
mov
fcoms
es
sbb
sub
xchg
pop
pop
mov
pop
scas
pop
pop
push
xchg
cwtl
bound
inc
sahf
cld
dec
test
cmp
ss
push
lods
fldl2e
lret
sti
mov
in
lods
dec
xlat
dec
lcall
movsl
and
jle
data16
in
int
jg
and
fistpll
pop
mov
jmp
das
lahf
mov
repnz
pop
sub
or
push
in
add
mov
jp
cmp
into
jno
and
pop
test
xor
imul
cmp
jnp
clc
xchg
push
cmp
jle
xor
or
mov
and
sbb
or
adc
mov
sub
add
fwait
xchg
jb
repnz
inc
repz
mov
sti
mov
aad
aas
in
dec
sub
sub
lahf
push
fnstcw
sbb
cmp
pop
fisubrl
loop
shl
jb
mov
fdivp
rcll
or
dec
sub
pop
scas
cmp
rorl
in
sbb
cwtl
mov
cmpl
loop
out
jmp
fstpl
add
daa
pop
xor
lret
push
cltd
mov
fwait
cmp
nop
insl
lods
fisttps
in
jnp
lret
and
test
shll
lea
ret
int
xor
jb
aam
adc
mov
add
mov
int3
xor
inc
dec
mov
xor
jns
ret
xchg
cwtl
rclb
xor
aaa
xchg
xchg
xor
push
sbb
mov
push
imul
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
int
sarb
adc
decb
adc
add
and
pop
daa
inc
out
mov
roll
dec
fdivrs
jecxz
jns
into
in
fcomps
mov
cltd
mov
into
jno
pop
push
mov
xor
xchg
adc
inc
jecxz
loope
inc
push
jecxz
jg
mov
and
aam
jmp
push
sbb
sbb
daa
or
loop
adc
je
jecxz
push
cmp
add
data16
int
sbb
mov
lret
add
adc
icebp
movsl
jp
call
dec
cmp
nop
mov
int3
jge
push
mov
mov
pop
scas
inc
ficoml
popa
andb
and
jne
adc
cmp
addl
mov
cld
adc
lea
adc
pop
mov
mov
lret
std
enter
lods
jno
mov
daa
arpl
push
and
dec
push
inc
int
cmpsl
inc
cmp
fcomip
out
scas
fdecstp
daa
repz
fstl
pop
lods
mov
sbbb
enter
out
lea
cmpsb
daa
sahf
jne
or
inc
ja
fdivl
ljmp
addr16
mov
nop
cmp
loopne
ljmp
add
cs
inc
adc
add
lods
fcomip
xchg
mov
sub
xchg
jae
out
mov
xor
inc
or
push
mov
arpl
ds
js
test
stc
sub
dec
or
adc
popa
out
shll
fisubrs
addr16
push
arpl
enter
mov
pop
xchg
imul
scas
inc
xchg
jl
out
add
or
divl
icebp
inc
sbb
mov
ljmp
pop
mov
xlat
pop
cmp
and
andl
bound
lret
test
dec
scas
push
push
sarb
outsl
xor
adc
loope
gs
mov
inc
add
insl
movsl
dec
pusha
mov
sbb
fistl
mov
rol
jnp
sbb
jg
lea
push
jmp
xor
mov
imul
inc
adc
mov
mov
lahf
mov
mov
mov
and
fists
cmc
lods
xchg
mov
aad
popf
clc
fs
push
mov
mov
xor
fnsave
lods
and
mov
xchg
movsl
inc
cmp
shl
mov
cmp
divl
inc
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
or
cmpsb
js
arpl
adc
movlps
cli
sbb
loope
push
lret
cwtl
jno
inc
cmp
jno
ret
mov
pop
jns
fldt
outsl
and
xchg
mov
imul
outsl
rcrl
adcb
dec
sbb
repnz
sbb
dec
icebp
xor
or
icebp
mov
popf
push
rol
mov
jmp
fs
dec
jnp,pn
inc
mov
lret
xor
imul
mov
mov
fistps
adc
add
lds
mov
add
jmp
icebp
outsb
popa
loopne
push
inc
xchg
mov
cmp
dec
and
std
jl
std
call
xchg
in
das
mov
add
mov
std
cs
repnz
rcrl
inc
lcall
lods
add
clc
xchg
cmpl
add
inc
xor
inc
fldl
clc
xchg
jp
int3
sbb
out
shlb
ret
rcrb
pop
jp
les
cld
mov
cmc
insb
pusha
cwtl
lret
js
jp
xorl
pop
mov
fmul
out
cmp
ret
xchg
pop
pop
fs
xor
xor
sub
in
stos
pop
loope
lret
fidivrs
dec
test
mov
addr16
or
mov
xlat
fidivrl
jle
or
xchg
mov
in
fwait
jl
int3
sbb
movsb
dec
jbe
stc
push
or
mov
pop
scas
cld
inc
movsl
adc
dec
aam
lret
int3
adc
addr16
xlat
adc
int3
jno
neg
and
loope
iret
in
sbb
push
jb
out
cmovnp
inc
add
mov
dec
hlt
xchg
sti
sbbl
fmuls
scas
ret
test
inc
push
std
in
mov
stos
rcrl
sbb
cmpsb
mov
mov
mov
in
mov
and
cmp
mov
jp
scas
out
xor
lahf
jo,pt
cmp
xchg
xorl
loop,pn
adc
and
pop
enter
gs
out
pop
test
or
push
dec
xchg
jns
sbb
das
pop
out
cmp
hlt
add
mov
mov
call
aas
dec
jbe
mov
push
and
bound
pop
sbb
lret
and
mov
xchg
cmc
mov
cmpsl
leave
or
jbe
lea
rclb
pop
ret
insb
movsb
into
xchg
mov
movl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
lret
or
decb
adc
adc
inc
ljmp
je
jae
or
add
lret
sbb
outsb
xchg
pop
xor
ret
std
push
into
js
shl
rcl
push
stc
rolb
mov
jnp
icebp
adc
lds
pop
jge
xchg
pushf
sub
cmc
insb
cmpsb
mov
dec
mov
lods
mov
xor
jmp
mov
cmp
mov
inc
movsl
insb
mov
mov
in
scas
mov
fdivrp
or
cs
cmpb
adc
enter
or
or
dec
movsb
outsl
and
testb
dec
in
stos
cmp
cmp
pop
or
cmpsb
out
push
xchg
or
dec
dec
aas
dec
mov
mov
hlt
es
outsb
pop
pop
in
arpl
xchg
outsb
mov
mov
bound
shl
sbb
xchg
or
ret
fcoms
jp
add
or
mov
cld
scas
pop
arpl
adc
das
pop
iret
movsl
xchg
add
sub
stc
push
enter
pop
int
pop
xchg
lods
clc
mov
arpl
sub
dec
mov
mov
sub
test
or
shlb
or
sar
nop
frstor
and
push
sahf
mov
xchg
inc
inc
mov
mov
xchg
fimull
push
cli
pop
data16
or
xor
ljmp
xor
inc
gs
loope
lahf
aas
or
dec
popf
mov
js
or
out
xor
aad
jl
fstpt
divl
xchg
and
aad
adcl
dec
push
mov
leave
cmp
xor
mov
repnz
mov
xor
or
or
mov
mov
mov
xchg
push
dec
loope
mov
xor
xchg
shrb
cmpsb
andb
cmp
lock
pop
je
mov
cmc
aad
test
adc
pop
insb
dec
jmp
pop
and
cmpsb
movsl
mov
gs
mov
pop
pop
nop
push
icebp
aaa
mov
fmulp
push
cmp
mov
xor
aaa
xchg
mov
test
add
je
mov
cli
adc
fldcw
shr
mov
push
inc
push
and
out
add
mov
add
pop
mov
cmp
push
stos
out
dec
scas
negb
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
lods
pop
pop
adc
decb
adc
pop
nop
adc
xchg
lcall
mov
xor
pop
inc
loop
jae
mov
adc
adcb
inc
ljmp
clc
inc
bound
aaa
cwtl
or
xchg
mov
int
pop
xchg
mov
adc
addr16
dec
std
pop
test
adc
mov
out
or
sbb
or
decl
sbbl
sub
xor
jle
lds
mov
test
testl
addl
inc
or
fstpl
or
xchg
pusha
mov
lods
leave
and
mov
adc
xor
fisttpl
test
rcrb
data16
jp
xchg
sub
es
outsb
pop
pop
pop
test
mov
addr16
mov
call
inc
xlat
mov
orb
js
push
nop
orl
jge
pusha
sbb
mov
push
sbbb
movsl
jnp
push
mov
in
jnp
or
inc
dec
xor
pop
mov
mov
add
stos
pop
mov
out
test
xor
mov
sub
adc
test
xchg
popf
mov
sub
mov
add
and
adc
lret
lea
push
dec
cmp
insb
repnz
iret
ret
xor
hlt
push
pusha
test
add
ret
mov
mov
cmp
outsb
ljmp
adc
into
inc
or
ds
mov
pop
jne
inc
add
loopne
popf
rclb
addr16
adc
fs
popa
enter
inc
mov
mov
cltd
sar
jnp
jno
jo
or
dec
stc
repnz
je
pop
xchg
xchg
cwtl
mov
inc
lahf
push
cld
sbb
xor
aaa
sbb
nop
xchg
ja
daa
jae
cmp
arpl
frstor
sub
and
or
bound
inc
shlb
leave
movsl
add
rol
cmp
adc
adc
test
cmp
arpl
push
add
jno
popa
stc
xchg
sbb
js
dec
aas
push
in
ds
aad
nop
mov
push
push
and
mov
divb
stc
outsl
iret
int
outsb
dec
lret
inc
jae
sbb
sahf
cmpsb
stos
lret
test
jg
mov
push
cmp
lods
dec
sahf
dec
fiaddl
or
inc
and
nop
mov
pop
decl
shr
add
add
bt
cmp
pop
mov
adc
decb
adc
dec
mov
mov
loop
test
push
addr16
fdivrs
mov
cmp
sbb
push
inc
xchg
dec
lahf
andps
int
mov
in
sub
add
xchg
jmp
jecxz
pop
mov
subl
std
sub
inc
and
scas
das
fnstenv
dec
test
out
mov
mov
pop
pushf
mov
fwait
loop
je
pusha
cli
ss
addb
jl
mov
cmp
xor
lods
pop
xchg
mov
mov
or
shl
cmp
flds
aas
xchg
push
or
mov
aad
mov
pop
mov
sbb
insb
int3
cwtl
jns
and
fs
xchg
in
lret
xchg
aaa
push
daa
xchg
xor
cmpsl
ss
adc
in
adc
add
mov
push
xchg
adc
xor
addr16
aam
hlt
sub
dec
movsb
inc
imul
shlb
loope
test
sub
and
mov
push
inc
aad
mov
cmp
loop
lcall
jnp
mov
and
xlat
mov
xchg
mov
adcl
add
mov
jnp
push
shlb
or
nop
in
xlat
dec
pushf
mov
sub
das
sub
jo
lds
push
xor
mov
xchg
pop
aad
jae
push
add
sbbl
xlat
movsl
mov
fsubp
add
adc
stc
or
push
aad
add
sub
xlat
inc
cld
and
sahf
in
stos
inc
gs
xor
adc
sub
sbb
push
negb
cmpsl
mov
sbb
push
xchg
jecxz
hlt
ficoml
xchg
push
mov
roll
sahf
or
push
inc
cmp
inc
xchg
mov
std
cmp
jp
fistps
ficoml
cmpb
sub
pop
lds
std
ja
enter
pop
adc
and
into
fimuls
daa
fcoml
inc
icebp
and
push
stos
scas
push
xor
jno
call
std
jb
cmpsl
dec
fcompl
xlat
add
pop
dec
cmp
pop
scas
mov
ss
shll
cli
xchg
cmpsl
popf
hlt
mov
xchg
mov
hlt
insb
cmp
mov
adc
jo
aam
repz
or
movsb
cmp
flds
and
mov
jo
enter
outsl
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
test
adc
decb
adc
dec
xchg
test
mov
insb
mov
jge
mov
dec
in
inc
adc
jecxz
xor
in
mov
xorl
adc
mov
inc
mov
mov
shll
mov
in
add
call
dec
out
lcall
and
mov
cmp
sbb
cli
jl
dec
test
nop
das
test
xor
adc
push
loop
cmp
sbb
iret
subb
clc
fwait
insb
mov
lock
mov
sbb
dec
mov
mov
imul
mov
nop
js
adc
fdivl
cmpl
xchg
sub
imulb
mov
nop
sub
pop
hlt
mov
aaa
mov
lods
inc
push
and
int
mov
cmpsl
jle
cwtl
shrl
pop
pop
mov
cmpsb
mov
cmp
je
mov
das
movsl
dec
xchg
mov
mov
cmp
std
xchg
push
pop
and
xchg
loope
pop
jl
in
push
je
cmp
and
add
cwtl
push
adc
mov
stc
mov
lret
rorb
add
lods
fldl
sbb
ljmp
sti
cltd
cmpsb
sub
clc
fwait
adc
ret
loopne
inc
xchg
cwtl
in
testl
fistpl
mov
outsl
push
popf
or
lahf
xchg
arpl
mov
popa
mov
ret
mov
mov
fists
mov
js
arpl
and
or
jp
sbb
notb
outsl
call
in
xchg
sub
xor
mov
mov
gs
inc
cmpsb
leave
xor
cmp
jo
jmp
or
std
pusha
sbb
pop
push
xchg
jb
loop
adc
mov
iret
push
dec
jae
enter
pusha
xchg
mov
push
xchg
and
daa
inc
inc
dec
and
call
sbb
mov
xchg
iret
insb
in
fidivrs
pop
pop
stc
push
popf
cmc
iret
rcll
mov
pop
out
data16
aad
push
mov
pop
lods
adc
fimull
lahf
repz
lret
insb
push
inc
cmpb
lret
pop
sbb
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
gs
stos
adc
adc
movlps
daa
pop
movsl
sbb
pusha
push
push
test
cmp
mov
pop
lea
pushf
mov
mov
push
jl
stos
mov
fwait
cmovs
mov
cmovle
xchg
mov
push
mov
aad
int
lcall
test
add
rolb
bound
adc
es
sbb
stc
add
sub
out
imul
das
inc
andl
lods
cmp
scas
xlat
cmc
jg
addr16
scas
inc
sbb
shll
adc
aam
jbe
movsb
jmp
mov
loop
mov
jo
xchg
or
dec
cmpsb
fsub
movsb
push
mov
jmp
sti
mov
rcl
cmc
cwtl
dec
out
xor
lret
xchg
out
shr
inc
roll
cmpsl
out
pop
xor
cmpsb
jmp
dec
in
and
sub
loopne
faddl
or
in
cmc
inc
into
jl
stos
or
dec
jg
hlt
xorb
inc
xor
syscall
cmpsl
mov
adc
push
xor
lahf
sbb
or
jmp
sub
xor
adc
test
cs
loopne
cmpb
leave
call
jle
lret
jge
and
mov
clc
mov
fcmovnb
daa
lods
xor
loop
inc
sbb
or
jns
outsl
sub
popa
dec
mov
inc
pop
dec
push
cs
in
icebp
jb
add
daa
pop
xchg
cmpsl
jo
sub
mov
pop
sahf
sbb
imul
movsl
leave
xchg
push
inc
pop
and
mov
add
sbb
jp
push
imul
in
in
mov
pop
clc
notb
js
ljmp
adcl
lods
or
jno
fcoms
add
and
xor
jg
repnz
rorl
adc
jb
pop
inc
outsl
inc
out
xchg
leave
dec
popa
loopne
xchg
and
lcall
loop
lock
pushf
lods
pushf
decl
jge
and
mov
add
popf
adc
mov
and
mov
add
addl
movsl
adc
pop
xchg
or
scas
fnstsw
push
add
adc
lods
mov
or
outsb
in
adc
cltd
adc
cmp
lahf
push
jmp
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
mov
aad
cmc
mov
scas
aam
dec
shll
lods
dec
sbb
arpl
cmp
add
ret
enter
mov
push
repnz
out
adc
in
or
pop
jge
aaa
cmp
adc
or
stc
jmp
inc
lock
fistps
cmpsl
xor
xor
ret
dec
push
stc
cmp
out
jp
pop
mov
sub
lea
sbb
push
mov
repz
fbld
loop
add
push
xlat
fists
add
cmp
mov
mov
scas
int
aad
cs
cmp
sub
and
in
mov
test
cmp
xor
mov
dec
ffreep
jb
or
int3
lock
into
enter
frstor
icebp
pmullw
inc
test
and
call
lock
inc
ljmp
dec
sub
pop
inc
and
test
push
and
mov
pop
fdecstp
push
xchg
cmp
in
das
pop
int
xor
stos
pop
xchg
out
push
subb
fwait
mov
mov
and
sbb
repz
out
sub
adc
das
dec
cltd
mov
jns
pop
mov
jle
cwtl
repnz
rorl
mov
jns
push
outsb
out
adc
mov
add
lock
out
jmp
in
in
pop
or
mov
xchg
sub
push
call
or
call
mov
les
icebp
xor
leave
std
jno
mov
ljmp
push
and
mov
insb
test
xor
cs
cld
mov
call
jne
test
adc
jae
cmpsb
repz
sbb
test
adc
outsl
insb
adc
jle
jbe
int
jge
mov
inc
dec
test
movsb
aas
or
cmp
testl
pusha
mov
xor
shl
xorb
imulb
push
push
inc
incl
mov
pop
cwtl
mov
int3
ret
jl
mov
dec
push
clc
xchg
mov
mov
jmp
loope
daa
push
or
loopne
xchg
cmpl
pop
in
leave
jne
lret
sub
mov
mov
push
xchg
push
mov
push
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
pop
mov
lds
mov
cld
dec
mov
xlat
xchg
fs
and
test
jle
sbb
inc
push
dec
cmpsl
or
inc
mov
xchg
fstps
push
pop
pop
and
insb
popf
jle
pop
cmp
in
shr
imul
and
and
sub
popa
add
mov
ja
decb
repnz
mov
in
mov
mov
jne
mov
out
dec
loopne
in
inc
daa
notb
jne
mov
inc
pop
push
dec
and
adc
cltd
ret
or
sbb
dec
jle
xlat
lods
pop
jb
lds
pusha
adc
push
lods
push
pop
rcr
pop
std
loopne
mov
or
outsb
mov
push
xchg
cmpsb
outsb
sub
mov
aad
jae
les
push
push
aam
scas
jle
mov
inc
jmp
lea
data16
push
jo
mov
or
iret
stos
test
mov
inc
xor
push
cmpsl
push
vminsd
jne
data16
jno
add
jno
outsb
jno
movsb
or
repz
push
mov
sub
sbb
push
jo
fstl
adc
mov
outsl
and
cmp
push
test
lcall
cmp
fsubrs
mov
lahf
pop
int3
adc
push
push
xchg
test
cmp
mov
rol
fldz
push
roll
mov
mov
mov
ret
shlb
fbstp
and
ret
adcb
loopne
negb
adc
scas
rcrb
sub
dec
adc
loope
int
lods
xchg
inc
sub
cmp
daa
addl
cmc
nop
dec
cmpsl
push
int
pop
inc
ss
push
cmp
and
outsb
and
cmc
dec
ja
xchg
adc
imul
outsb
push
push
call
leave
mov
out
pusha
push
les
dec
sbb
mov
stos
test
add
adc
pop
hlt
jo
imul
add
lret
sub
adc
cwtl
daa
jnp
addr16
add
test
shlb
xchg
in
or
mov
fwait
or
popf
mov
mov
not
sbb
pop
lods
popa
pop
inc
mov
xchg
adc
divb
fwait
insl
imul
cmp
rol
push
sbb
or
or
push
pusha
xchg
inc
je
fbstp
add
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
cmp
pop
lods
sarb
adc
cmp
xchg
cmp
xor
push
dec
jnp
add
push
mov
popf
xchg
out
xor
lea
inc
test
push
insb
cmpsb
in
and
mov
inc
xchg
xchg
repnz
inc
xor
adc
arpl
or
jl
jno
xchg
xchg
or
shlb
dec
xchg
cwtl
cmpsl
dec
daa
sbb
inc
push
sub
push
fstp
daa
mov
scas
into
fdivr
pop
out
scas
xchg
jmp
mov
dec
push
xor
xor
inc
daa
lods
mov
or
dec
push
cmp
mov
inc
xor
loop
jecxz
jo
inc
adc
push
xchg
int
andb
or
lahf
inc
xor
mov
movsb
mov
inc
insl
xchg
cwtl
push
pop
push
cmp
jne
dec
popa
inc
in
jbe
and
mov
mov
jg
aad
repz
jle
pushf
lret
and
cmp
sub
adc
out
dec
sbb
das
outsl
mov
xor
add
fistpll
inc
pop
aam
sbb
leave
inc
mov
cwtl
xor
shll
das
arpl
jg
mov
push
int
jl
xlat
movsl
xchg
enter
cltd
call
add
inc
testl
fbstp
mov
test
sbb
arpl
fstps
pop
mov
int
es
fisubrs
jno
fsubl
mov
add
adc
and
mov
xlat
aam
jbe
mov
dec
sbb
mov
and
stos
out
and
fidivl
jbe
mov
fs
shrb
xchg
loopne
out
cmpsl
or
add
jg
lea
dec
in
add
sti
aad
mov
aas
xchg
mov
sbb
ds
outsl
xor
sbb
jmp
lea
push
je
inc
cmpb
cli
sarb
pop
loop
es
data16
leave
insb
mov
fld
out
sahf
pop
inc
movsb
add
call
in
je
pop
dec
iret
mov
inc
insb
jmp
rolb
repnz
adc
pop
add
add
idiv
mov
dec
push
fsub
pop
and
add
jnp
push
xchg
mov
addr16
cld
adc
std
push
sar
push
ja
sub
jmp
in
add
mov
dec
xchg
pop
imul
sbb
xor
dec
sub
pop
adc
jl
insl
inc
sbb
sub
jne
and
popf
cld
bound
icebp
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
imul
adc
xchg
cmpsb
loop
pop
lods
stos
pop
inc
lock
outsb
or
add
mov
pop
addr16
fdivrs
je
sbb
dec
xor
push
push
movsl
sbb
or
mov
sub
add
sbb
ds
pop
out
pop
xorb
lods
add
and
mov
xor
inc
push
mov
outsb
mov
push
or
sbb
cmpb
jp
pop
sub
cmpsl
cmp
inc
mov
outsb
test
lock
test
cwtl
or
shrl
xor
jo
sub
jp
dec
and
dec
lods
sbbl
lock
ss
pop
in
in
jge
pop
push
lods
pushf
leave
or
jo
test
xchg
std
jae
sub
xor
lahf
leave
jmp
push
aam
mov
inc
imul
mov
les
adcl
ret
adc
ds
addl
mov
xchg
or
push
mov
pop
mov
mov
cmp
add
push
dec
orb
mov
xlat
cli
mov
inc
xor
andb
or
xchg
arpl
outsl
stc
shrb
lcall
das
movsb
dec
add
sbbl
jmp
push
int3
outsl
repnz
jo
pushf
xor
jp
outsb
mov
add
pop
sub
pop
cmp
xor
mov
mov
mull
bound
arpl
repnz
stos
and
mov
out
insb
push
xchg
push
fcmovbe
sub
pop
inc
and
outsb
cmp
insl
popf
or
inc
xchg
popf
xchg
out
test
push
out
xchg
jmp
jle
jle
rorb
mov
inc
adc
les
popa
call
shrl
mov
fidivrs
inc
sbb
arpl
popa
mov
xor
lds
ljmp
mov
fimull
pushf
loopne
inc
xchg
push
mov
sbbb
mov
testb
leave
mov
sub
gs
sbb
cmp
push
shrl
stos
xchg
sbb
xchg
frstor
test
xchg
sbb
sti
js
push
mov
add
xor
adc
mov
or
ljmp
inc
loope
scas
pop
adc
dec
fwait
ljmp
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
ficompl
adc
push
pushl
dec
sbb
imul
xchg
icebp
xor
mov
mov
test
jo
xor
ja
out
je
push
push
sbb
jg
pushf
push
push
negl
test
stos
or
jmp
xchg
pop
mov
lds
icebp
and
cwtl
xchg
adc
js
lret
jns
push
dec
inc
mov
cmp
xchg
inc
pushf
es
clc
in
mov
in
icebp
pop
inc
jp
sbb
inc
jbe
cmp
push
pop
cmp
int
imul
fs
push
icebp
ror
xor
pop
les
mov
and
mov
cmpsl
jnp
sahf
lahf
cli
subb
js
sarl
cmp
int
mov
ja
or
sub
insl
mov
mov
bound
ss
mov
mov
daa
lds
mov
push
pop
and
adc
sub
imul
addr16
xchg
cli
shlb
nop
stc
sbb
aas
out
jecxz
shl
mov
add
push
sbb
lods
cmp
shrb
jno
add
ficoml
xchg
jmp
aad
stos
push
jo
fiadds
test
xchg
add
jnp
push
jnp
ds
fs
pop
jg
call
imul
mov
add
lret
je
pop
dec
pushf
jnp
ljmp
push
sti
aaa
into
jge
out
rorl
adc
mov
jg
push
into
xchg
dec
adc
xchg
insb
adc
mov
movsl
sahf
or
push
aam
dec
push
pop
lds
mov
mov
xlat
dec
or
xchg
aam
jae
pop
xchg
xor
sub
mov
imul
add
sbb
mov
loop
push
leave
fsts
adc
add
mov
mov
jge
imul
pop
xor
push
aam
and
mov
stc
add
mov
dec
jae
shlb
outsl
or
dec
adc
pop
push
movsb
lea
scas
lret
sub
dec
dec
mov
icebp
int
push
adc
int
fisttps
adc
aam
dec
pop
push
adc
mov
jno
sbb
pop
fisttpl
sub
dec
orl
mov
outsb
leave
xchg
mov
lock
data16
clc
sub
out
sub
push
pop
dec
mov
clc
daa
jns
jp,pt
dec
sub
pop
mov
sbb
add
jo
in
sub
cmp
sub
sar
and
sub
xor
movlps
addr16
add
cmp
vcvtsi2ss
push
add
xchg
mov
idivb
ss
nop
loopne
mov
ret
mov
popa
add
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
xchg
xor
lds
into
inc
pop
push
and
push
mov
ljmp
lcall
rclb
lcall
adc
fwait
xor
dec
ja
mov
clc
jge
out
mov
dec
fistpll
cmp
loop
cmp
repnz
jno
pop
jnp
lret
popa
arpl
pop
add
add
pushf
adc
mov
pop
ja
cmpsb
mov
jp
inc
iret
les
dec
es
push
aad
popa
fisttpl
adc
js
mov
test
or
mov
data16
les
mov
sub
cld
inc
or
aam
mov
xor
xor
mov
test
int3
mov
aaa
lcall
sbb
sbbb
dec
xchg
test
pop
loop
xor
imul
adc
jge
popa
test
dec
mov
push
mov
ja
bswap
pop
pop
std
inc
insb
cmp
push
cld
cmp
xor
cltd
in
inc
test
inc
jmp
dec
adcl
push
pop
int3
inc
mov
rcl
cmp
xor
out
ja
out
inc
push
and
push
out
cmpsb
mov
movsl
cmp
adc
sub
dec
adc
jae
push
shr
sti
cmp
and
scas
mov
fidivrs
pop
xchg
push
addl
or
cltd
xor
add
lock
sub
sahf
pop
insb
insb
mov
cwtl
jb
mov
incl
insl
enter
xorb
in
push
inc
loopne
ret
arpl
dec
aas
dec
adc
push
es
inc
jo
mov
mov
pop
fisttpl
imul
orb
pmaxub
push
cs
push
mov
movsl
cmp
fwait
test
mov
fimull
bound
cltd
push
std
push
mov
in
xchg
mulb
push
adc
je
inc
int3
shll
fldenv
jl
cwtl
mov
pop
jb
push
or
sbb
xchg
push
loop
mov
mov
cmp
nop
cmp
imul
je
cmp
enter
push
movsb
shll
andb
push
xor
stos
ljmp
arpl
mov
lret
sbb
loop
mov
jg
sbb
shlb
scas
outsb
mov
inc
pop
aaa
mov
aad
imul
dec
cmc
lods
fwait
cmpsl
mov
push
cmp
in
dec
lock
test
jae
add
lea
xor
loopne
repz
add
ret
hlt
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
test
cmc
imul
mov
icebp
lds
and
add
lcall
and
rcrb
jmp
sub
mov
and
mov
or
loopne
pop
jno
adc
add
js
sub
sub
jo
cmp
mov
cmc
fisttpl
add
stc
mov
mov
push
shll
or
scas
mov
arpl
and
daa
aas
adc
push
inc
or
sbb
pop
push
mov
xor
push
test
sub
lods
ffreep
aam
cmp
lahf
imul
fs
stos
je
ret
mov
movsb
dec
lret
popa
popa
mulb
clc
push
mov
idivl
lea
inc
negl
sub
stos
repz
mov
xor
mov
loop
lcall
aaa
int
cwtl
mov
leave
jnp
xor
push
test
pusha
jno
adc
ljmp
and
jge
push
dec
pushf
fsubrl
fidivrs
popa
pop
sub
dec
cmc
pop
loopne
jl
push
push
aaa
rcrb
sbb
cmp
scas
xor
mov
mov
stc
in
xlat
sbb
imul
xchg
fimuls
and
push
dec
fsubrs
jbe
jle
cs
imul
dec
lods
inc
dec
imul
fnstenv
divb
in
xchg
push
push
xor
nop
insb
cmp
scas
addr16
xlat
stos
push
fistpl
sahf
jns
arpl
adc
out
stc
adc
rcll
lahf
mov
fdivrs
lods
xlat
jb
or
cltd
iret
icebp
xchg
pop
jnp
mov
mov
push
stc
mov
into
fimuls
fs
js
std
and
sub
inc
add
out
xchg
or
pop
or
rol
roll
popa
into
pop
sub
dec
mov
xor
addr16
mov
mov
ret
ret
cwtl
loop
push
dec
sbb
aaa
enter
adc
mul
arpl
stos
pop
in
addr16
jns
xchg
enter
cmpsl
mov
and
inc
jmp
jecxz
mov
jg
or
in
inc
insl
adc
sub
das
pop
nop
popf
sub
or
push
or
dec
or
leave
lcall
lods
aaa
roll
shr
jmp
xlat
jne
faddl
lock
outsb
xor
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
sub
pop
adc
iret
movlps
test
lock
mov
sbb
xchg
sbb
imul
sub
sbb
fisubrl
mov
lret
or
loop
aas
cs
repnz
add
int
jge
or
mov
xor
mov
fwait
int3
dec
mov
iret
dec
or
jecxz
insl
rorl
pop
sbb
xchg
jnp,pn
xor
xlat
cmp
push
and
pandn
mov
data16
outsl
xchg
add
aad
aaa
lret
test
in
inc
in
pop
mov
and
cld
fs
stos
cmp
inc
cmp
xchg
movntps
cmp
mov
jmp
jl
out
fimull
imul
cmc
mov
push
push
outsb
pushf
movsl
adc
testl
in
test
repz
xor
loopne
mov
or
or
ds
ror
insb
pop
stc
out
inc
test
xchg
insb
imul
jge
and
xchg
sarb
dec
jp
xor
popa
ret
xchg
movsl
cmp
cmp
adc
repnz
and
xor
sbb
das
mov
mov
dec
push
push
inc
aas
push
mov
ret
mov
ljmp
and
add
push
xchg
jmp
cmp
mov
jbe
xchg
adc
or
rcr
std
adc
jge
sub
cmp
inc
sub
mov
xor
out
mov
xchg
pop
add
test
and
ret
es
cmp
jp
push
mov
dec
mov
sbb
pop
fmuls
cwtl
iret
pop
jb
jmp
mov
jae
imul
jp
insl
push
data16
jg
in
sub
xchg
insl
mov
push
fadd
and
je
dec
push
popa
and
and
cmp
out
icebp
mov
mov
xchg
and
outsb
jae
dec
add
dec
fs
xchg
xchg
xor
pop
js
mov
adc
scas
jmp
dec
cmp
mov
aaa
push
jg
rcrl
in
pop
test
out
mov
dec
sbb
adc
dec
push
jae
aas
mov
or
in
stc
stc
adc
mov
push
jmp
add
das
mov
mov
flds
sub
lret
push
pop
mov
int
adc
lret
stos
adc
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
jne
js
sbb
adc
cmp
loope
daa
setns
pop
pop
adc
loope
stos
dec
pop
int3
aaa
dec
xchg
mov
mov
cli
call
mov
mov
sub
xchg
pop
jp
test
pop
ret
push
mov
jmp
xchg
sub
cmp
adc
div
cs
fstpt
inc
pop
cmp
pusha
fdivrs
pop
adc
bswap
test
fdivrp
push
push
xchg
dec
nop
loop
push
pop
mov
jne
cmp
scas
leave
mov
mov
iret
mov
popl
loope
pop
sub
dec
je
cmpb
rorl
in
fisttps
and
out
lea
sub
stos
das
fildl
and
lret
leave
add
pop
inc
xor
add
cwtl
fstpt
test
scas
ret
push
adc
fadds
or
and
out
pusha
movsl
mov
push
les
cmp
icebp
int3
dec
fildl
add
ss
sbb
push
lret
jne
shl
fstl
dec
frstor
sub
iret
pop
rcrl
xchg
pop
sub
rorl
fwait
jmp
mov
inc
jbe
jp
scas
ret
mov
dec
mov
and
pop
subb
out
sarb
mov
roll
and
pop
popa
mov
sbb
std
cmpsb
mov
and
ret
adc
mov
or
cmp
dec
das
das
enter
xchg
ret
push
stc
aam
jb
xlat
js
mov
in
addr16
int3
imul
push
and
pop
adc
mov
movsl
shll
or
xchg
add
scas
jo
cmp
jmp
sbb
insl
stos
sbbb
dec
out
bound
fdivrp
push
pusha
fisttpl
cli
hlt
push
mov
sub
xor
push
sub
mov
xor
and
loop
xchg
cmp
or
sub
sbb
or
mov
jecxz
or
cwtl
mov
leave
sub
adc
lret
fcoms
ret
push
out
mov
fcomps
shr
push
mov
push
pop
xchg
pop
test
xlat
cs
pop
rorb
dec
sahf
add
and
imul
mov
jle
jns
jp
xchg
fwait
movsb
fists
insb
cmp
aas
insb
nop
jge
dec
jg
push
out
mov
jle
stos
xchg
inc
jo
pop
inc
push
or
fbld
cmp
clc
call
test
lock
loopne
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
pop
cmpl
movlps
dec
popf
mov
loop
pop
fsubl
mov
das
pop
adc
pop
or
cmp
or
lret
push
mov
ret
dec
in
cmp
mov
inc
cmpsl
and
bnd
out
mov
push
mov
in
sbb
add
inc
rcrl
push
ret
lret
pusha
shll
insb
jge
jg
std
sub
arpl
push
push
andl
aaa
lret
push
ds
cmp
mov
into
mov
xchg
sbb
xchg
sbb
jecxz
inc
adc
and
icebp
jmp
jnp
orb
sbb
outsl
mov
lret
sub
mov
fistps
push
loope
lods
dec
jns
leave
push
pop
out
push
xor
adc
adc
mov
ss
scas
ljmp
mov
push
push
xchg
popa
popf
loop
push
inc
push
pushf
cmc
jno
mov
cltd
pop
xlat
inc
incl
jno
cmp
sbb
xor
sahf
shl
aad
jbe
cmp
es
jmp
or
enter
cmp
and
adc
inc
cmp
test
ret
test
add
jecxz
stos
daa
pushf
test
and
sar
sbb
jb
mov
test
or
call
hlt
cs
add
mov
push
pop
mov
sarb
inc
test
addr16
es
test
cmp
and
mov
sub
int3
cmpsl
inc
xchg
push
pushf
lret
out
pop
cli
mov
mov
std
jnp
out
push
sbb
pop
pop
and
fsubs
hlt
ss
ss
add
into
je
push
shll
mov
scas
mov
popf
mov
mov
lcall
sub
and
add
pushf
in
orl
dec
imul
and
push
ret
xor
dec
push
pop
jb
jmp
xor
pop
mov
jo
imul
mov
rcll
repz
sub
xchg
or
aaa
xor
inc
mov
call
mov
aad
jle
bound
lcall
jb
lcall
test
test
jb
sar
std
pop
fildl
addr16
add
addr16
pop
cli
add
mov
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
loopne
push
unpckhps
iret
movlps
mov
fcoms
fs
insb
inc
jl
xchg
lods
push
sub
add
loope
dec
sbb
les
addr16
jns
adcl
lds
xchg
shrl
and
popf
neg
fstps
leave
sahf
cmp
jnp
and
ja
inc
pop
movsl
lea
loop
sti
lods
push
xchg
das
sbb
sub
ret
ljmp
jb
sahf
movsb
roll
stos
lret
ds
outsl
aad
jmp
data16
jmp
loope
dec
roll
js
adc
dec
cmp
das
cmp
stc
jae
fwait
mov
push
xor
in
nop
into
cmp
cmp
stc
aaa
mov
jmp
jno
loope
push
popa
push
sub
lahf
hlt
ret
dec
jne
rcrb
xchg
cmp
push
or
push
test
out
loopne
mov
lea
sbbb
mov
in
inc
aaa
sbb
sub
scas
dec
sub
shrl
sub
xchg
push
adc
or
jmp
call
in
lahf
mov
cmp
arpl
outsl
push
or
in
out
mov
clc
push
inc
cltd
or
test
mov
add
and
sahf
push
sub
fildl
test
loop
mov
inc
jno
cmpsl
lcall
les
imul
pop
arpl
popf
imul
call
lcall
jl
cltd
imul
gs
push
inc
mov
add
out
int
int
ret
push
add
test
in
pop
addr16
aaa
jo
mov
dec
inc
out
imul
push
pop
mov
sbb
rorl
and
pop
mov
out
lods
hlt
sbb
repnz
test
ret
mov
scas
jne
fcomps
out
or
jno
lods
or
movsl
push
jns
insl
ficomps
repnz
lret
jmp
pop
fdivrl
adc
int
ss
or
pop
loopne
js
lea
pop
dec
push
or
push
or
mov
out
and
lods
ljmp
jns,pt
or
data16
xorl
sbb
jg
jl
daa
mov
out
clc
cmp
fdivr
jmpw
inc
dec
je
in
addl
mov
mov
push
or
or
jmp
dec
pop
imul
enter
push
push
or
adc
push
xor
scas
xlat
mov
xor
imul
push
and
out
and
sarb
xlat
push
out
xchg
dec
adc
push
adc
out
dec
or
dec
sub
jne
loopne
add
or
int3
lea
jmp
enter
pop
in
adcb
dec
pusha
ret
insb
popl
pop
sahf
push
fbstp
int3
fwait
addr16
pusha
out
mov
arpl
mov
pop
jge
add
inc
scas
xor
ds
push
insl
cmp
loop
xor
adc
mov
xchg
lods
pop
xor
test
mov
ss
fwait
push
mov
stos
mov
add
repz
nop
call
jl
and
push
mov
jecxz
iret
or
and
jo
pop
ljmp
addr16
push
sahf
cmp
sbb
add
and
and
dec
lods
or
js
xchg
cwtl
mov
mov
and
xchg
cwtl
pop
xor
sub
rorl
stc
aas
pushf
imulb
cmpsl
xor
flds
repnz
jbe
bound
fwait
insl
and
adc
stos
ret
add
adc
add
push
adc
lret
pop
pop
jge
lcall
sti
mov
mov
dec
pop
cmpsb
mov
loopne
cmc
xchg
int3
cmp
pavgb
arpl
push
xchg
ficompl
cli
cmp
xchg
hlt
call
mov
gs
and
sub
into
addb
js
mov
cmp
rcrb
adc
movsb
adc
xchg
jb
dec
insb
mov
shlb
inc
push
pop
push
imulb
push
test
sub
inc
xor
jbe
mov
cmpsb
ljmp
cmpsb
xor
cmpsb
fs
mov
rolb
in
cmc
movsl
mov
mov
int3
aam
fbstp
addr16
pop
push
into
xor
cmpsb
push
rcrb
pop
adc
push
sarb
arpl
dec
dec
mov
loopne
xor
adc
dec
push
jnp,pt
fldln2
or
xchg
aaa
dec
add
jo
add
sbb
xchg
add
xlat
cs
int
out
cmpsl
xchg
cmp
dec
cmp
and
jae
rcrb
divl
add
pop
popa
cmp
scas
iret
loopne
mov
add
fmuls
xor
dec
sbb
mov
push
fdivl
fwait
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
jnp
ljmp
cmp
push
loopne
shll
rclb
dec
or
and
das
jb
inc
add
cmpsb
jge
sbb
lods
sahf
push
inc
pop
pop
inc
xor
mov
dec
data16
lret
adc
adc
sbb
add
dec
jbe
sbb
pop
cmc
js
cmp
stos
mov
stc
or
jbe
cmp
ret
fwait
sbb
roll
mov
dec
dec
mov
fs
movsb
mov
dec
sub
sbb
jb
cli
cmp
into
or
test
fisubl
cld
mov
jg
jne
sahf
pop
and
sbb
pop
sub
mov
into
or
int
pop
jmp
test
add
sub
mov
push
ret
and
push
or
vpaddusw
shl
cmp
sarl
daa
jecxz
jo
int3
mov
cmpsl
inc
mov
mov
lds
adc
push
inc
jg
in
sub
sub
sti
clc
mov
mov
jo
mulb
andb
and
push
prefetch
fnstcw
sti
mov
pop
dec
inc
fwait
inc
scas
xorl
leave
sub
loopne
sbb
sbb
shrl
std
lret
subl
jnp
std
sub
mov
adc
rcll
xor
add
stos
lcall
dec
and
insl
push
dec
push
push
adc
push
add
inc
shlb
outsl
arpl
jne
loop
jp
jmp
sbb
pop
mov
push
repz
test
mov
mov
ljmp
ret
pop
or
ret
jno
or
adcl
gs
sub
xchg
icebp
sub
fiaddl
push
jns
loop
sbbb
xchg
add
je
sbb
enter
jnp
lods
jmp
add
xor
fcompl
sbb
pop
xchg
xchg
out
out
inc
into
cmp
mov
bound
cmc
outsb
dec
push
rclb
jecxz
mov
xchg
mov
jns
sbb
addl
or
xor
adc
mov
mov
aas
repz
es
leave
mov
xchg
shl
into
int3
icebp
lds
das
int
mov
insl
mov
jmp
scas
pop
inc
stos
mov
in
test
icebp
lcall
movsb
repz
or
test
insl
pop
sbb
div
pop
sti
sub
cmp
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
cmpsb
push
mov
iret
movlps
jo
psubsb
mov
jg
addl
sbb
cltd
in
adc
push
xlat
sub
fcmovnu
inc
mov
pop
sbb
in
dec
mov
movsb
repnz
test
rorb
into
mov
das
inc
push
and
dec
or
gs
jne
fistps
xchg
gs
dec
movsl
sbb
sbb
aas
mov
dec
adc
adcb
push
lea
nop
mov
adc
fldt
addb
cmpsl
inc
mov
adc
hlt
jbe
cmp
imul
lcall
dec
jmp
testl
sub
mov
mov
pushl
xchg
pop
sub
xor
cmc
inc
movsb
scas
dec
add
pop
out
mov
fdivrs
hlt
call
rcrb
add
mov
dec
cld
mov
jmp
test
jnp
cltd
pop
jmp
cmp
loopne
dec
mov
sub
sti
pop
xor
pushf
out
pushf
xor
mov
sub
fmulp
pop
push
mov
pop
aas
and
mov
enter
cmp
mov
hlt
cmp
movsb
lret
xchg
popa
xchg
cltd
shll
cld
adc
push
or
outsl
jmp
jecxz
sbb
cltd
sahf
or
js
mov
mov
imul
inc
outsl
icebp
and
jle
sarl
inc
sbb
xchg
or
cmp
in
mov
push
test
addb
cmc
mov
cmp
int3
sub
cld
and
lret
mov
lahf
sub
shll
push
pop
add
and
jp
rcrl
movsl
mov
xor
ja
pop
push
ljmp
test
dec
push
mov
and
sbb
push
pop
lret
push
jb
ss
cwtl
int
xor
inc
mov
cmp
fldl
jbe
mov
test
pop
fxch
data16
cmp
testb
sub
out
mov
add
adc
call
or
les
mov
repz
popa
fldt
bound
push
inc
cmp
clc
ss
fucomp
icebp
mov
xlat
push
mov
lret
jge
test
add
std
fwait
cmp
test
popf
sahf
sub
adcl
adc
sbb
xor
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
fsub
psubsb
inc
sub
stc
xchg
dec
mov
jne
mov
mov
es
mov
fidivrl
into
loopne
cmp
repz
mov
sar
mov
adc
sbb
push
addb
mov
pop
pop
inc
jbe
div
out
cmp
int3
ret
inc
enter
ja
lods
sbb
outsb
lock
adc
sub
or
pop
iret
xor
add
mov
insb
fucomp
jbe
jnp
xlat
add
incl
adc
push
mov
mov
adc
push
sbb
jno
inc
aad
or
sbb
pushf
add
cmpsb
mov
dec
mov
fwait
jo
sub
mov
loop
push
mov
adc
insb
sbb
gs
dec
jge
mov
mov
lret
pop
inc
nop
xchg
jmp
pop
test
dec
pop
aaa
lahf
cmp
sbb
or
imul
insl
icebp
mov
out
fstpt
push
fmul
cmp
or
mov
jno
test
fscale
stos
dec
roll
xchg
dec
pop
jmp
jb
cmp
fidivl
call
inc
stos
push
mov
jbe
mov
push
cmp
sarb
inc
int
stos
int3
or
cmp
pop
jbe
cmpsl
cmp
jne
push
loop
test
mov
fwait
xor
jmp
jg
jge
cmpsl
inc
inc
jo
dec
jge
pop
or
pusha
sahf
stc
mov
pop
mov
jno
push
int
out
or
jne
in
sbb
sarl
or
jecxz
xchg
cmp
adc
pop
insl
pushw
adc
jl
or
add
lods
pop
and
jne
and
pop
sti
xchg
scas
inc
cwtl
mov
mov
enter
sbb
dec
and
test
ds
iret
xchg
pop
sbb
or
xchg
les
cmp
movsb
mov
and
pop
pusha
pop
jns
cli
xchg
fucom
ja
sub
out
call
push
scas
negl
pop
lahf
mov
mov
cli
cmc
sub
cmpl
xlat
ljmp
fcoms
addl
std
mov
ja
xchg
jmp
bound
jno
push
scas
sbb
outsl
pop
inc
out
jno
sarl
jl
rcrb
loopne
out
mov
adc
add
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
dec
push
insb
jae
adc
adc
xchg
xchg
xor
loop
sbb
mov
out
sub
rcrb
add
pop
out
inc
and
outsb
push
mov
insb
clc
and
fildl
lret
mov
cmpsb
dec
es
push
gs
shlb
stc
xchg
inc
lods
fdivrs
sti
dec
filds
in
push
mov
jno
cmpxchg
xchg
xor
adcl
hlt
push
mov
ftst
mov
lahf
out
push
test
and
xor
push
imul
jo
push
or
aam
cwtl
mov
mov
sub
loopne
xchg
loope
leave
push
sub
out
or
inc
pusha
pop
inc
fstpt
inc
mov
popl
dec
mov
lret
fs
cmp
mul
dec
push
shll
popf
cmpsb
pusha
daa
mov
movsb
mov
sti
pushf
or
adc
ret
aam
aam
cs
add
fsubrl
add
dec
imul
pop
cmp
cmp
push
or
add
jp
or
sbb
jge
leave
push
enter
cmpsb
ljmp
in
in
jo
sub
cmp
push
jo
cltd
imul
jns
loope
bound
test
sub
lods
loope
imul
sbb
lahf
inc
xchg
xor
or
xor
outsb
loopne
push
jp
and
sbb
mov
aam
sbb
dec
fildll
push
shr
js
mov
push
stc
cmp
xchg
cmp
pop
movsl
dec
enter
mov
pop
jbe
dec
repnz
in
mov
mov
rcll
cmp
addr16
lret
xor
cmp
and
jmp
roll
cmp
rep
dec
xchg
iret
ret
pop
bound
fdivrs
mov
call
les
pop
out
lock
push
jp
and
rorb
adc
enter
insb
cltd
xchg
inc
stc
jo
cmc
sbb
mov
xchg
inc
sub
push
mov
push
rcrl
inc
xor
scas
mov
enter
das
mov
mov
into
sbb
testb
test
pop
adcb
add
aas
jne
push
inc
xor
mov
addl
ljmp
mov
cmpsl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
push
dec
jle,pn
out
adc
adc
add
out
int3
out
mov
test
call
xor
mov
cmp
adcb
mov
insb
sti
int
test
popa
inc
cmc
incl
push
rorl
insb
cwtl
pop
or
jbe
pop
sahf
icebp
jns
xchg
sbb
mov
stos
jns
into
xor
outsb
stos
inc
pop
fldenv
and
mov
pop
sub
jg
push
add
call
mov
hlt
push
cmp
stos
icebp
testb
shlb
or
insl
sbb
rorb
and
data16
sub
pop
jo
pushf
daa
xchg
test
push
mov
inc
push
xchg
xchg
int3
sub
frstor
loopne
sub
dec
jmp
out
sbb
add
xchg
adc
jl
push
sti
and
mov
cwtl
jecxz
jecxz
repnz
pop
cltd
pop
pop
push
dec
xchg
popa
lahf
lret
add
sarl
mov
lret
sbb
mov
aas
std
or
adcb
sahf
lea
pop
fstps
roll
in
pop
and
outsb
jae
iret
mov
xlat
xchg
xor
in
inc
out
aas
dec
cmp
inc
jle
xor
jbe
and
test
lret
test
xchg
or
dec
lret
outsb
cmp
leave
jbe
add
jnp
mov
mov
int
xor
xchg
inc
dec
cmp
and
sub
lock
pop
aaa
add
xor
test
dec
dec
cmp
inc
dec
push
dec
inc
cmp
andb
sub
fldl
shll
lock
pop
add
xor
orl
popf
insb
jmp
xchg
xor
repz
test
mov
sbb
dec
les
scas
add
sub
inc
push
sbb
mov
pop
push
test
out
and
dec
popf
lock
mov
iret
add
and
cwtl
xor
test
cmp
mov
jle
adc
push
inc
pop
push
jl
aas
fsubrl
int
iret
push
dec
daa
dec
pop
inc
cmc
mov
add
and
adcl
ret
xchg
arpl
inc
stos
push
jb
shr
test
xchg
gs
pop
jle
push
mov
sub
mov
iret
fisubrs
adc
jmp
pop
stos
dec
and
cld
lods
outsl
lds
cld
aad
lods
cltd
cs
gs
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
bnd
in
adc
adc
test
test
mov
push
mov
scas
cmp
adc
fbld
adcb
jns
lret
mov
dec
imul
nop
mov
dec
js
clc
sub
xchg
cmp
mov
mov
addr16
dec
cwtl
mov
push
dec
rcll
cmp
jae
outsb
cmp
andb
lret
pop
mov
dec
out
clc
lods
push
xchg
inc
sub
and
repnz
imul
mov
dec
jge
fst
adc
ja
add
lock
and
stos
pop
jmp
or
push
testl
lret
pop
jp
xor
scas
sti
sub
icebp
js
daa
mov
mov
loop
fcmovb
push
gs
mov
fnstsw
add
js
adc
ror
mov
cs
pop
daa
sub
pop
pop
test
clc
jl
fbld
ficompl
loope
and
xor
jge
sti
in
cld
ret
cmc
push
shrl
mov
mov
xor
cmp
and
adc
and
dec
outsb
lret
sub
rcrl
pusha
xor
cmpb
test
ds
sbb
jno
xchg
add
lock
shll
lods
cmc
and
aaa
mov
dec
push
pop
outsl
jmp
daa
lcall
outsb
push
sub
push
mov
or
shl
fisttpll
xchg
xchg
mov
ljmp
or
and
jge
loop
push
and
jmp
dec
fimull
hlt
sbb
mov
dec
pop
adc
and
mov
xor
fidivl
mov
jle
xchg
sub
sub
mov
cld
jge
sub
dec
shrl
xchg
das
jae
fmuls
xchg
pusha
das
fsubl
je
imul
jecxz
lret
movsb
mov
adc
cmp
jle
loopne
pop
xor
js
jb
outsb
jl
inc
xchg
adc
stos
sbb
xchg
bound
movsb
adc
xchg
out
push
and
inc
add
lds
test
add
insl
int3
je
mov
fdivl
jo
pop
push
xchg
nop
cld
push
repnz
pop
jae
rcll
fcmovnu
jmp
incl
shrl
sub
xchg
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
out
call
sub
insb
xchg
fisttps
jg
and
cld
repz
hlt
imul
jle
cmp
xor
mov
jbe
and
out
xor
xor
mov
addl
sbb
dec
xor
int
cmpsl
sub
stos
sub
pop
pop
std
test
mov
std
fadds
lods
mov
mov
add
outsb
data16
adc
cmpsb
fiaddl
scas
pushf
xchg
lahf
and
sti
mov
xchg
inc
ret
lods
jno
in
push
pusha
inc
sub
jecxz
bound
rolb
stos
xchg
gs
push
icebp
cmp
jnp
or
push
cmc
xchg
and
cwtl
dec
shll
xlat
stc
faddp
add
mov
fldcw
stos
outsl
jnp
mov
inc
sub
cmp
push
test
cmp
jle
sub
cld
xchg
jmp
jmp
dec
pop
mov
adc
push
jmp
mov
dec
and
pusha
ss
ret
add
jb
mov
xchg
jbe
leave
mov
repz
cmp
scas
xchg
nop
test
cmpb
xorl
xchg
arpl
and
mov
xor
lahf
add
jb
xor
mov
sbb
jns
and
pop
mov
lahf
outsb
pop
lcall
movsl
pop
push
sarl
xor
nop
popf
lock
xlat
jmp
outsb
jecxz
movsl
push
test
push
sete
xchg
shl
lahf
lock
pop
test
dec
into
add
imul
ja
aaa
popa
imul
add
sub
sbb
test
push
or
mov
xchg
add
jo
mov
cwtl
into
lcall
jbe
push
jg
cmpsb
push
ds
mov
out
pop
call
stos
orb
mov
rolb
mov
sbb
fnsave
loop
lods
dec
ja
rorl
mov
ret
sub
push
adc
push
leave
inc
add
pop
add
js
imul
adc
and
xchg
stc
sub
adc
stos
data16
jnp
mov
lahf
sbb
inc
int
push
mov
mov
mov
xor
outsb
mov
xchg
jmp
hlt
std
fwait
pop
pop
out
adc
lock
mov
adc
test
pop
cmp
rorl
clc
iret
add
push
mov
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
push
mov
iret
movlps
mov
adc
aas
sti
shr
mov
fisubs
fstl
pop
lods
imul
xchg
mov
test
mov
pop
xchg
and
imul
fidivrl
mov
or
jnp
pop
mov
dec
lods
jb
sub
push
add
lret
cmpsb
push
jmp
lahf
cwtl
xor
shrl
sbbb
pop
mov
push
mov
cltd
pop
pop
cmp
jecxz
jl
out
and
movsl
mov
lret
leave
test
addr16
sub
xor
cwtl
imulb
pop
insl
pop
jne
pop
mov
bound
xor
rcr
push
test
mov
in
or
scas
pushf
and
cmp
and
sahf
xor
fistl
or
pop
sbb
rclb
sahf
rclb
pop
cmp
sub
cmp
sbb
xor
test
mov
sbb
sbb
xchg
lods
sbb
int3
sub
int
adc
push
push
movl
shl
dec
inc
sahf
mov
ficoml
sahf
fnstenv
inc
cmpb
stos
faddl
into
adc
inc
push
jnp
aam
mov
dec
stc
jp
cmp
sub
icebp
or
or
pop
dec
jmp
adc
mov
cmp
pop
cltd
push
mov
sbb
jle
jl
xor
push
lock
mov
ror
and
lods
sahf
fisttpll
sub
aad
cli
cmp
lret
jno
ljmp
bound
add
adc
mov
sarl
mov
push
xor
xor
and
mov
pop
and
in
and
jge
jnp
dec
cld
mov
dec
xchg
and
mov
or
lods
test
mov
push
xchg
jecxz
or
mov
pop
push
and
std
jno
sahf
jbe
adc
shll
lods
sub
sub
lds
mov
pop
adc
lds
pop
dec
xchg
out
sti
lds
aad
jns
add
adc
pop
and
lods
es
inc
ljmp
add
daa
xor
jp
xchg
popf
xor
jg
mov
fldcw
pop
dec
imull
inc
adc
call
jns
dec
cmp
xchg
or
mov
xchg
jmp
push
push
xchg
add
orl
cmp
popf
std
push
cli
gs
sub
outsb
repz
add
stc
add
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
push
fcoml
adc
push
sbb
add
mov
pop
jmp
push
loopne
outsb
test
mov
xor
loop
or
xlat
mov
adc
or
jb
in
and
sbb
mov
imul
or
jno
loop
leave
popa
sub
bound
add
add
mov
pop
xchg
cmp
fcmovnu
lods
cli
mov
mov
mov
jb
enter
jnp
mov
sbb
inc
sub
in
and
cmp
inc
movsb
xchg
pop
iret
loop
add
lods
cmp
and
jb
stos
icebp
xchg
sbb
inc
and
mov
mov
add
cmp
fsub
and
adc
lods
in
mov
lret
jns
aas
mov
cmpsb
mov
mov
xlat
xchg
test
or
loop
mov
add
gs
cmp
xchg
pusha
ficoml
mov
loopne
insl
or
lea
sub
cmpsb
notl
dec
clc
xchg
cld
add
dec
mov
loope
stos
xchg
lret
test
iret
mov
rorb
shrb
jb
jne
jp
int3
mov
mov
xor
xchg
pop
shr
jb
ret
mov
mov
mov
repz
adc
mov
sub
cmp
fdivs
fadd
sub
jp
pushl
jecxz
mov
mov
adc
cwtl
xchg
cwtl
sub
adc
iret
sub
pop
test
mov
in
adc
mov
jns
jg
jge
adc
mov
jns
jnp
es
nop
jmp
cmpl
loop
push
xchg
lock
dec
js
std
aaa
in
jo
sbb
sbb
adc
out
jmp
jnp
xlat
pop
add
pop
and
sar
popa
jnp
and
mov
lods
aam
in
mov
pop
pop
adc
or
ret
add
test
add
lea
xor
sbb
mov
repnz
cmp
mov
mov
fisubl
xchg
test
call
dec
inc
aam
insb
push
scas
jae
push
repz
mov
fisubs
xchg
nop
jecxz
mov
pop
out
sbb
sub
shld
fiaddl
mov
out
sub
sbb
cmc
jae
insl
xor
add
adc
push
or
test
add
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
je
mov
iret
movlps
xlat
pop
lcall
sahf
xchg
and
and
and
cli
push
hlt
pop
scas
dec
lret
adc
inc
or
sti
mov
loope
cltd
gs
xor
mov
jmp
cmp
cmpsb
add
sub
push
add
cld
mov
call
jnp
subb
jae
movl
dec
jge
and
loop
sub
mov
sarb
imul
outsl
jge
pop
loope
fstp
or
push
icebp
sbb
movsl
dec
je
pop
cltd
and
adc
jb
dec
scas
nop
incl
nop
enter
vmovntps
jecxz
mov
aam
add
outsb
pop
lret
jb
test
mov
aaa
je
sub
sbb
jae
inc
or
xchg
sarb
xchg
or
mov
sub
add
lahf
or
dec
jecxz
popa
push
cmp
in
push
bound
lds
enter
movsb
push
aad
pop
in
push
or
add
add
mov
lea
ja
stos
out
gs
sub
sbb
cltd
loopne
mov
pop
xor
jns
dec
push
int
pop
rcrb
iret
icebp
test
mov
cmp
punpckldq
pop
stos
mov
push
insl
and
sbb
incb
cmc
xchg
jne
mov
hlt
sbb
add
shrb
mov
cmc
push
mov
orl
loope
pushf
bswap
lock
nop
dec
mov
lods
aas
and
jp
mov
scas
xor
sarb
cli
xchg
add
pop
out
sub
mov
in
clc
dec
and
push
cmp
sbb
dec
pop
in
fcomip
push
rcrb
scas
pushw
mov
test
mov
lods
gs
popa
xorl
fcom
enter
add
repnz
ja
xlat
fs
and
sbb
stos
out
andl
or
push
clc
mov
sarl
xchg
outsb
xchg
ja
test
pop
dec
cmp
cli
je
imul
mov
xor
or
cmp
xor
fmuls
xchg
outsb
out
add
xor
ljmp
dec
push
dec
cmp
ficompl
jmp
das
arpl
mov
popf
ljmp
fisttpll
cld
and
add
mov
je
stos
sahf
mov
inc
and
mov
mov
xor
sub
lret
mov
sbb
inc
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
mov
stos
adc
adc
nop
push
ljmp
fsubs
jne
jno
dec
adc
aad
mov
shr
mov
inc
lcall
pop
imul
push
sti
cmpsb
pop
aad
push
popl
fdivs
fcmovne
bound
sbb
jl
xchg
inc
decl
push
enter
fcomps
mov
inc
pop
adc
or
adc
out
outsl
sub
xchg
and
xchg
jns
pop
fbld
cwtl
bound
mov
sub
scas
xchg
lods
fxch
cmp
sbb
xchg
inc
dec
or
arpl
adc
idivl
stos
gs
ss
jg
lahf
sub
cmp
fmuls
cmp
cwtl
xchg
leave
lahf
insb
setp
loope
ds
cli
mov
mov
xchg
rcl
pop
add
pop
or
popa
xchg
add
xchg
js
jmp
dec
jns
push
jns
mov
cmp
andb
xchg
sbb
pushf
out
dec
sbb
out
mov
add
push
xor
dec
mov
pop
xchg
mov
add
mov
dec
xchg
jno
push
leave
fisubl
daa
jb
jns
xor
push
xor
adc
hlt
sarl
fs
add
pop
jl
movhps
adcb
xchg
popa
gs
daa
push
pushf
push
and
test
sbb
cmc
pop
cmc
xchg
cmc
popa
stos
add
nop
lea
xchg
daa
pushf
cmp
gs
es
mov
mov
lret
and
nop
push
mov
leave
sbb
dec
mov
and
les
neg
out
inc
test
or
mov
push
mov
sbb
aad
and
loop
outsl
xor
mov
mov
imul
sub
cmp
test
push
jae
xchg
mov
cmpl
cwtl
jl
rorb
adc
in
imul
jno
lock
push
in
in
xor
xchg
loope
jmp
xchg
loop
xlat
dec
or
and
ljmp
icebp
or
mov
fsubl
insb
add
push
sbb
mov
jbe
ficoms
pop
cs
roll
and
imul
sub
sbb
ja
jo
fsubrl
push
mov
sub
mov
xor
fsubl
ret
cmp
cmpsl
dec
fisubs
es
cmpsl
inc
mov
pop
shr
jmp
int
adc
imul
mov
out
adc
add
mov
xchg
xchg
test
imul
inc
adc
push
add
cmp
cmp
aam
and
insb
popa
jne
lock
inc
cltd
dec
and
jp
scas
jno
cmpsl
ret
repnz
inc
xchg
loope
pop
mov
mov
xor
sahf
cmpsb
loop
daa
jb
push
pop
xor
inc
lea
insb
pop
inc
inc
or
out
jne
xor
sub
cmpsb
loopne
imul
outsl
out
es
jne
pop
mov
pushf
dec
mov
xor
pop
daa
test
xor
xlat
scas
pop
xchg
andl
stos
je
xchg
es
push
adc
push
gs
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
repz
adc
adc
pop
dec
xor
sbb
jns
adc
pop
in
iret
subb
test
jl
mov
adc
sub
xor
leave
mov
mov
dec
insb
pushf
push
divl
je
test
jp
aaa
cmp
xchg
cs
jo
jno
pop
xchg
xorl
cmp
movsl
mov
add
mov
data16
xor
mov
xchg
push
cli
sbb
shll
xchg
lea
ds
stos
xor
fimuls
xor
dec
sbb
adc
int
aaa
xor
mov
ja,pn
fists
mov
flds
push
in
lcall
popa
lret
dec
test
add
gs
cwtl
dec
push
jmp
inc
push
cld
or
mov
sbb
jnp
divl
sub
cmp
loopne
dec
aad
push
inc
add
adc
fimull
es
cmp
sub
loop
pop
cmpsl
leave
mov
inc
scas
xor
mov
aam
frstor
nop
rclb
add
cmp
or
jns
adc
adc
das
sti
fwait
jbe
xor
xor
lcall
jle
outsl
adc
sbb
ret
mull
add
cmp
mov
movsl
or
pop
mov
xlat
fildl
mov
je
jne
clc
pop
cmpxchg
push
sbb
pop
sub
jl
out
js
xor
daa
pop
adc
testb
mov
dec
dec
lods
fldcw
adc
xor
repnz
push
cmp
enter
pop
dec
insl
fcomi
sub
sahf
mov
push
pop
pop
cmc
jns
lods
mov
negb
pop
stc
lea
movsb
mov
mov
xchg
lahf
xor
in
push
push
jecxz
sbb
inc
sub
xchg
xor
push
push
js
xor
cmc
lea
outsb
and
in
or
pop
ja
xchg
or
push
jbe
push
pop
les
pop
xchg
hlt
xchg
mov
cmc
aaa
sarl
cmpsb
push
test
lods
or
mov
insb
outsl
jno
sub
shlb
je
mov
hlt
and
lret
add
mov
jne
inc
cmp
mov
mov
lret
sbb
xchg
jecxz
dec
orb
inc
int3
xchg
push
jle
sub
inc
mov
imul
pop
sbb
mov
adc
mov
pop
mov
sahf
or
cmp
nop
xchg
jne
js
js
push
cli
and
sub
sbb
push
cwtl
pop
bound
xchg
xchg
cmp
cltd
xor
sbb
sbb
rorb
outsl
bound
rcl
mov
add
cmpl
cmp
jo
std
mov
les
adc
stos
sahf
push
add
leave
pop
jns
stos
mov
xor
mov
push
push
lods
movsb
cltd
movsl
mov
out
into
shl
data16
cmp
nop
mov
adc
rcrb
hlt
cmp
cmp
faddl
xchg
mov
push
jecxz
xchg
test
ss
repz
bound
loope
fwait
sbb
test
lcall
loop
jmp
in
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
dec
cli
in
lret
jl
cmp
out
add
iret
jle
cli
and
aaa
repnz
shrb
imul
mov
or
idiv
in
ljmp
cmc
mov
dec
lahf
jae
shll
orb
rorb
cmpsl
sbb
inc
loopne
sbb
movl
add
ret
and
dec
xlat
aad
repnz
jge
insb
inc
rcll
mov
scas
lock
fisubrl
jae
dec
sub
push
cwtl
imul
inc
cmp
test
cmp
lahf
insb
aas
mov
sbb
xchg
pusha
inc
or
loopne
cmpsl
add
dec
adc
sahf
pushf
mov
push
scas
out
iret
dec
stos
add
jb
xor
shll
mov
shrl
loop
jno,pt
mov
cmpsb
mov
and
sti
fisttpl
inc
in
pop
jo
xorb
jbe
jo
addb
sub
jmp
ficoml
insb
cmp
jmp
scas
scas
lret
jp
in
movsl
sti
xor
jns
mov
rcrl
mov
arpl
cwtl
mov
jae
fldcw
loope
mov
test
and
xchg
inc
mov
sbb
js
sub
mul
push
mov
roll
jo
mov
fstl
imul
fistpl
add
push
addr16
cmp
push
inc
fidivrl
push
fs
mov
fs
shll
dec
pop
jecxz
bound
jecxz
scas
add
mov
outsb
jg
lahf
rcrl
cld
int3
roll
iret
mov
leave
push
shl
mov
xor
cmp
je
pop
frstor
ret
clc
push
cmpsl
into
cmp
inc
xchg
xchg
roll
push
mov
push
rorl
out
jb
bound
sub
mov
xchg
gs
out
pop
pusha
outsl
jae,pt
ds
cmpsb
add
cli
dec
hlt
ret
add
divb
mov
insb
adc
aad
sub
xchg
add
mov
movsb
push
fdivrs
fcomp
outsl
sahf
imul
mov
push
add
mov
jae
jecxz
fs
int
test
daa
movsl
jg
test
jp
and
in
ljmp
mov
xlat
pop
sbb
scas
jae
das
lods
mov
xchg
xor
push
push
dec
out
mov
outsb
xor
flds
mov
dec
shrl
push
iret
movsl
cmc
divb
orl
popa
xor
xchg
dec
das
popfw
add
enterw
in
sbb
jb
mov
popl
jnp
inc
push
jne
adc
ficoms
jecxz
mov
icebp
and
call
dec
jnp
leave
lahf
adc
dec
imul
pop
lock
fisttpl
mov
repnz
mov
call
imul
inc
icebp
or
loopne
add
out
dec
mov
add
idivb
sahf
repz
dec
mov
jl
pop
dec
shr
adc
in
sbb
pop
es
arpl
psubsb
divl
shrl
movsb
mov
mov
and
xor
cmp
sbb
call
lods
scas
mov
aam
ljmp
pop
sbb
xchg
or
xchg
nop
fldt
adc
test
inc
pop
jecxz
cmc
loop
in
add
scas
add
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
pop
xchg
stos
adc
adc
mov
mov
call
jg
or
popa
adc
and
bnd
lock
mov
sub
repnz
and
js
call
and
out
adc
sub
mov
sub
pushf
shlb
mov
sahf
cwtl
jb
bound
subl
flds
pmuludq
sahf
jb
pop
daa
sarl
and
mov
pop
mov
add
jns
fldl
inc
scas
fldcw
cwtl
dec
insb
pop
push
imul
push
adc
dec
push
mulb
mov
push
dec
jmp
divl
jne
cmpsl
sti
mov
push
xor
fs
inc
dec
cltd
andb
or
add
jmp
pop
arpl
sub
subl
add
cmp
mov
mov
jg
movsl
xchg
xchg
les
scas
gs
movsb
sub
push
cmp
ficomps
mov
nop
mov
mov
fldl
in
cmpsl
jne
sahf
out
iret
and
pop
push
js
test
stos
lods
scas
scas
stc
hlt
sbb
xor
fisttpl
mov
mov
push
dec
cmp
mov
dec
inc
jb
lcall
push
test
jl
js
sbb
test
loopne
scas
xlat
pusha
cmpsb
notl
sbb
bound
pop
test
mov
scas
adc
pop
inc
mov
ret
inc
aad
stos
mov
sbb
sahf
out
test
push
fiaddl
fsubs
cli
pop
and
imul
das
test
ds
fildl
mov
push
mov
pop
call
test
push
insb
arpl
jmp
push
movsb
xchg
mov
faddp
push
arpl
jae
or
push
mov
pop
cmp
aam
push
movsb
insl
out
icebp
adc
pop
and
push
xor
mov
sahf
xchg
jae
loop
and
fsubs
movsl
ficoms
mov
in
dec
lret
call
pop
loopne
mov
into
adc
test
or
int
push
test
adc
ds
fistpll
in
lods
outsl
imul
cmp
inc
sub
lea
add
lods
cmp
or
mov
outsb
ljmp
push
xchg
or
pop
add
pop
inc
cli
adc
xchg
ficoms
add
outsl
int
adc
mov
mov
or
push
mov
xor
lds
inc
mov
jl
out
sub
mov
sbb
ret
inc
adc
push
inc
or
cmpsl
dec
jge
fiadds
ficomps
mov
mov
or
sbb
pushf
cmpl
lea
rorl
or
lds
mov
sti
aad
jecxz
stos
cltd
xchg
cmp
xchg
loop
mov
add
ljmp
repz
dec
arpl
rcrl
xlat
or
mov
ss
ffreep
lods
arpl
addr16
out
and
sub
jge
add
dec
inc
mov
fs
mov
in
push
xchg
jno
inc
popa
xchg
adc
iret
dec
xchg
xor
jl
adc
insb
loop
add
mov
dec
inc
aaa
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
lret
sbb
insb
cli
xchg
inc
pop
add
add
cmpsb
push
pop
mov
orb
pop
mov
and
xchg
sub
sahf
dec
jnp
pop
test
xchg
or
imul
push
rorl
in
and
cli
add
mov
mov
inc
xor
dec
fwait
sbb
jnp
sahf
ror
ret
in
out
push
mov
dec
idivb
cmp
jns
cmpsb
out
negl
mov
ret
imul
std
stos
xlat
fadds
mov
sbb
inc
adc
gs
aam
pop
push
dec
cwtl
adc
dec
cmp
test
cmp
lret
or
mov
stos
adc
jns
in
add
ss
mov
xor
fdivs
and
inc
mov
test
adc
or
cli
rcrb
in
or
aaa
lcall
cltd
push
xor
bound
and
and
ds
adc
and
dec
je
fistpl
sti
xor
test
pusha
jecxz
mov
xlat
xor
sub
sbb
and
xchg
mov
adc
repnz
mov
inc
adc
mov
push
dec
sbbb
lods
xchg
jmp
xlat
clc
test
icebp
fiadds
pushf
jl
repz
hlt
dec
xor
jle
push
mov
psrad
mov
mov
sbb
sbb
sub
lret
shr
pop
sub
adc
les
frstor
mov
insb
push
xor
and
mov
jge
shl
mov
sub
in
int
push
xor
mov
adc
dec
icebp
adc
push
push
out
mov
mov
into
andl
fwait
dec
cmc
dec
sbb
in
sbb
mov
mov
outsb
rclb
or
cmp
dec
scas
scas
fwait
mov
lret
cld
fisubrs
and
shlb
mov
or
jb
ss
mov
scas
sub
mov
add
insl
xorb
cmp
fs
and
sub
jno
add
xchg
insb
cmpb
sub
dec
in
rorb
push
cli
call
push
test
gs
data16
leave
std
xchg
mov
inc
out
rcl
pop
cmc
inc
rclb
mov
lods
lret
pop
outsb
or
movsl
test
rcrl
es
pop
dec
lcall
int3
sub
push
or
sub
mov
jno
flds
mov
xor
adc
out
repnz
dec
push
push
jns
pop
jp
movsb
fcoms
mov
sbb
andl
scas
je
ret
in
outsb
cmp
sbb
add
lods
xchg
jnp
sub
cli
rcrl
push
aad
xor
cmp
jns
pop
jo
cmp
xchg
inc
lock
dec
lret
jp
jo
push
neg
in
cmpsb
mov
jp
jp
dec
fsubrl
dec
icebp
adc
xchg
mov
dec
mov
es
out
lods
insl
add
sbb
dec
mov
sti
scas
sub
adc
jbe
loop
mov
mov
pop
xor
or
jne
xor
jg
xor
cmp
vmread
lea
shrb
cli
cmp
xchg
pop
jge
mov
stos
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
cmp
dec
mov
stos
adc
adc
addr16
adcb
add
aaa
rorl
out
pop
daa
push
aas
fidivrl
fcmovne
xchg
dec
testb
push
mov
sub
adc
mov
sbb
mov
xlat
dec
mov
sarl
pop
outsb
xchg
fisttpl
lea
cmp
mulb
sti
lahf
lret
jnp
lock
jmp
loop
push
sahf
sbb
inc
fwait
push
fwait
or
push
sbb
push
or
mov
sarl
and
icebp
pusha
adc
push
out
and
push
lret
push
scas
hlt
mov
push
in
outsl
loope
insb
xor
and
stc
lods
sub
push
into
enter
and
mov
mov
int
ss
rclb
jle
sar
mov
jmp
mov
or
add
add
popa
icebp
inc
outsb
sub
stos
pop
push
lret
lds
dec
jle
sar
divb
jns
dec
cld
mov
outsb
mov
ret
mov
push
cmpps
xor
stos
cmp
push
sub
push
shl
ret
and
inc
out
and
and
and
imul
sub
inc
inc
test
xor
das
pop
test
nop
add
pop
ficoml
pop
push
pusha
negl
mov
and
sar
or
jl
inc
inc
popf
or
test
bound
loopne
dec
loop
jo
add
sahf
sbbl
xchg
inc
fs
leave
add
jl
jbe
or
and
andb
mov
mov
popf
xchg
ret
mov
xor
lods
or
push
mov
in
icebp
in
test
jmp
int3
jecxz
andl
xor
mov
lret
aad
xor
imul
rcl
sbb
xor
neg
insl
icebp
mov
add
mov
pop
test
in
pop
pop
dec
mov
aas
or
subl
cmp
sbb
or
inc
inc
int
and
test
sahf
sub
out
inc
int
lcall
push
lcall
out
fwait
and
push
shr
push
rol
cs
add
inc
xchg
jmp
stos
jp
mov
mov
add
lretw
jle
int3
pop
shl
pop
enter
ret
sub
mov
sub
mov
xchg
dec
jp
test
int3
jne
jl
pop
test
mov
xchg
and
xchg
fisubl
and
pop
xor
adc
mov
xchg
xor
and
mov
mov
add
fidivrl
dec
dec
sbb
data16
rolb
shll
adc
dec
lea
and
adc
pushf
mov
mov
xor
sub
jo
sub
push
repnz
icebp
jno
adc
ljmp
xchg
pop
sbb
iret
loop
jbe
xchg
addr16
pop
dec
cmp
push
push
push
cmp
push
stos
repnz
je
cld
xchg
pop
lods
adc
push
jo
and
push
push
jl
inc
ss
xchg
js
jne
scas
dec
pop
out
sti
pop
push
fs
pop
adc
les
lea
sub
jb
pop
mov
test
int
iret
gs
mov
es
test
stc
adc
stos
pop
aad
fs
sbb
and
das
scas
lods
push
fs
js
mov
test
test
pushl
xor
jmp
or
mov
mov
mov
pop
sbb
adc
adc
inc
cs
sub
mull
pop
mov
mov
mov
adc
leave
jle
xor
sub
les
and
push
pop
mov
mov
mov
icebp
cmp
mov
iret
push
xchg
mov
in
not
jmp
fcmovu
mov
sub
mov
ljmp
loopne
xor
pop
add
outsb
sub
dec
xchg
push
mov
sbb
out
int
cmp
jo
jmp
lods
rol
mov
repz
mov
scas
js
xchg
mov
les
pop
push
test
mov
mov
cltd
add
xchg
clc
mov
aas
out
mov
jno
or
pop
aad
mov
movsb
lods
pusha
js
push
loopne
gs
in
jbe
sub
scas
mov
pop
adc
or
pop
test
cmpsl
movsl
sbb
lods
and
aaa
test
insb
out
mov
mov
or
lock
shlb
xchg
ja
or
ljmp
mov
test
dec
or
add
push
imul
push
jmp
ljmp
int
test
or
or
adc
jmp
xchg
inc
jb
lcall
push
fisubs
adc
mov
je
pushf
pop
xor
mov
repz
dec
dec
inc
sub
mov
mov
xchg
sahf
test
adc
sbb
gs
and
pop
pop
imul
clc
scas
insl
xchg
mov
mov
xor
push
cld
push
addr16
jg
sub
inc
cmp
fisttps
xchg
jne
out
loope
lret
dec
xchg
xchg
cld
or
adc
cmp
push
in
inc
xor
pop
rcr
adc
cmpsb
subb
dec
das
mov
popa
test
jo
inc
fcompl
mov
push
sub
scas
jb
mov
push
fiadds
iret
ds
inc
test
sub
jg
jl
xchg
sbbl
pop
jae
jbe
lea
aam
enter
mov
mov
cld
aam
or
adc
lret
out
mov
ret
mov
push
sahf
xchg
adc
fwait
mov
dec
xlat
xlat
adc
xchg
pop
test
jbe
int
out
xor
add
stos
and
enter
xor
jecxz
cmp
inc
pop
mov
xchg
sbb
loopne
inc
out
stos
or
cmp
add
mov
ror
cltd
sub
sbb
mov
pop
enter
inc
insb
imul
adc
ja
fwait
xchg
jnp
dec
xchg
repnz
in
aaa
pop
push
and
fcmovne
mov
mov
adc
iret
rep
jmp
sub
xchg
ds
lea
jecxz
push
icebp
test
das
adc
rol
xlat
and
fistpll
add
lcall
jns
ss
mov
jne
xchg
shlb
mov
outsb
mov
mov
cmp
sub
xor
aad
pop
jbe
int
cmp
insl
inc
es
mov
jo
inc
sub
and
mov
int3
mov
xchg
notb
add
push
jg
js
mov
add
add
adc
mov
insl
xor
roll
jl
add
idivl
repz
ficompl
gs
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
lods
rcrb
cmpsl
inc
adc
cmc
mov
in
cmp
mov
xchg
push
push
into
jge
or
xchg
js
imul
adcb
lea
pop
pop
loope
mov
pusha
jle
mov
scas
out
sti
hlt
cmp
ffreep
dec
add
repz
addr16
mov
cmp
in
cwtl
movsb
and
cmp
les
mov
xor
or
inc
in
outsl
mov
sti
and
jae
ljmp
xchg
pusha
or
dec
mov
icebp
cld
adc
orb
xor
sub
movsl
out
icebp
adc
push
add
js
push
jp
pushf
inc
aaa
push
xchg
mov
cld
sti
cwtl
jge
jnp
cmp
shrl
out
dec
shrb
inc
lret
das
adc
mov
push
in
call
out
push
maskmovq
testl
xor
mov
mov
popf
cmp
xchg
pop
push
fistpl
add
inc
jge
or
in
push
scas
push
arpl
mov
imul
push
addr16
push
dec
cmpsb
out
pusha
iret
add
pushf
mov
lcall
jns
nop
dec
pop
jnp
adc
xchg
sbb
lock
xchg
int3
inc
mov
xor
and
ret
jae
xor
cs
jmp
dec
sarl
lcall
mov
dec
test
jae
fld1
addr16
xchg
pop
fidivrl
outsb
ret
sbb
push
sub
addb
push
test
mov
mov
pop
data16
sub
inc
xor
aas
loop
dec
mov
fmulp
repnz
enter
popf
es
jno
lret
xor
xchg
mov
add
out
fcoml
data16
mov
lret
mov
mov
ret
mov
out
or
clc
insb
mov
outsl
iret
mov
fimull
nop
inc
dec
push
mov
aaa
mov
push
test
test
jbe
pop
adc
dec
jae
mov
and
jmp
ret
mull
ljmp
movsb
jb
call
out
jl
adc
lea
push
je
outsl
daa
gs
sbb
ds
or
inc
js
xchg
mov
push
jmp
xchg
cltd
js
repz
sarl
sbb
dec
xor
add
jno
int3
fadd
ds
xor
ficoms
out
loope
test
push
popa
test
mov
and
xorb
adc
les
and
fadds
push
or
dec
xchg
arpl
dec
es
cmpsb
popa
and
jge
and
sbb
lock
shrl
sarl
lret
icebp
pop
ror
clc
mov
add
shl
pop
aas
loopne
stc
jp
loope
int
inc
in
inc
and
dec
add
sub
dec
mov
imul
sahf
or
bound
dec
xchg
push
mov
arpl
lock
dec
sub
mov
adc
xchg
scas
push
push
or
in
aad
xor
pop
cmp
sbb
inc
cmp
out
jno
sub
and
gs
fsts
cmp
ds
push
lcall
outsb
xor
test
jns
dec
xor
dec
enter
lea
or
ror
xor
clc
pushf
inc
or
neg
mov
pushf
jmp
jge
jmp
cmp
mov
js
shlb
adc
adc
aam
lret
xor
arpl
lret
add
mov
adc
pop
cmp
xor
hlt
inc
push
cmpsl
das
add
xchg
or
hlt
rcrl
inc
push
cmp
mov
mov
addr16
and
out
mov
bnd
and
stc
stos
and
decl
fcompl
sub
mov
inc
stos
rolb
push
adc
cli
inc
movsl
sub
lea
jns
leave
push
cs
xor
jne
xor
fwait
das
enter
and
push
shrb
pop
mov
lea
add
push
pop
lds
gs
pusha
fwait
lret
pop
out
fs
clc
sub
and
shr
mov
movsb
inc
lret
pop
push
jbe
jecxz
or
jno
nop
stc
mov
jne
mov
out
xor
and
scas
cmp
jne
xchg
repz
cmp
pfacc
push
lds
dec
xlat
ja
leave
mov
mov
push
mov
push
ret
into
jp
push
adc
add
mov
inc
ljmp
pop
xor
pop
xchg
adc
adc
test
push
mov
jns
xchg
out
mov
ds
and
xchg
shlb
repz
cmp
add
sub
es
imul
mov
ljmp
push
add
clc
popa
sarb
inc
add
push
test
lock
bound
jecxz
pop
and
xor
jno
orb
and
out
aaa
rorl
mov
or
dec
stc
ljmp
sarl
mov
dec
mov
ljmp
popf
lret
add
cmp
push
mov
stos
inc
rcl
jae
cltd
add
push
xchg
outsl
jmp
push
sub
mov
inc
mov
push
adc
and
jmp
aaa
rcll
shl
cmp
jle
mov
fnstenv
test
mov
inc
jae
fmull
pop
loope
aad
jns
jno
pushf
and
icebp
popf
inc
xchg
pop
xchg
fwait
jnp
cmp
xor
sub
test
sti
je
loopne
sub
incb
push
adc
mov
enter
lcall
jb
pop
push
ljmp
inc
cmp
aas
and
fadd
dec
mov
push
and
cltd
pop
dec
test
shrb
lret
push
ljmp
adc
xchg
xchg
push
dec
push
xor
xchg
sbb
add
in
mov
test
shll
and
lods
push
pop
xchg
stc
mov
out
mov
jno
stc
jb
imul
add
jmp
push
movsb
mov
aad
dec
lods
xchg
push
sti
or
sahf
jnp
arpl
adc
push
cmp
jecxz
es
addr16
sbb
mov
cs
jmp
cmp
cmc
sub
mov
lods
out
lods
mov
cmp
or
sbb
mov
lret
jge
mov
jp
push
repnz
mov
ffreep
fldcw
shll
sub
pusha
dec
cmpsb
inc
mov
test
dec
mov
xor
rolb
stc
testl
push
mov
dec
cltd
jb
push
je
lea
outsl
sub
test
std
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
es
xchg
adc
adc
mov
pop
movsb
cmp
in
inc
push
fdivs
xor
sbb
fucomi
cmc
inc
in
add
lret
cld
and
das
fisttps
push
mov
repnz
mov
push
add
imul
and
jne
jl
and
and
xor
xor
mov
stc
xorl
mov
int3
hlt
adc
add
xor
fists
cmpsl
repz
rorb
push
std
leave
leave
inc
or
sbb
push
push
mov
out
sbb
mov
ret
xor
out
sub
mov
inc
or
or
scas
jns
in
fs
mov
jl
dec
outsb
fisubs
ffreep
stos
mov
inc
into
xchg
lods
test
ret
movl
adc
cmp
js
aaa
ret
lds
call
sub
shlb
data16
add
insb
popf
jae
movsb
cwtl
inc
es
orb
icebp
or
pusha
add
mov
mov
aas
shrb
lods
xor
jg
lcall
inc
lahf
xchg
dec
data16
pop
xchg
xor
popf
outsl
add
nop
and
or
cmp
or
call
push
lcall
sbb
aam
sbb
and
dec
and
ret
data16
out
cmp
xor
inc
mov
stc
icebp
std
dec
outsl
cld
ret
mov
sub
jae
sub
lret
leave
sbb
xchg
popf
mov
push
mov
out
js
pusha
lret
jecxz
into
ljmp
pop
mov
pop
lds
push
dec
pusha
leave
or
cmc
inc
inc
popf
jg
xchg
inc
popa
test
pop
pushf
xor
test
test
bound
mov
stc
ret
cmp
loopne
repnz
lahf
shll
mov
push
add
mov
mov
cmp
jb
hlt
ret
out
push
adc
adc
jo
test
jns
mov
mov
sbb
cld
cmp
hlt
push
xchg
movsl
cli
ljmp
divb
pop
xlat
mov
jb
xchg
loop
mov
mov
in
es
mov
jne
enter
fwait
jbe
adc
aad
add
sub
dec
mov
and
sbb
xchg
insl
out
stos
mov
add
fstps
jl
dec
sbb
push
xor
ret
and
fdivr
jnp
or
loope
scas
push
sub
push
mov
andl
add
add
sbb
mov
lock
add
mov
fistps
jnp
sbb
out
fisubrs
jo
test
xchg
enter
or
mov
popf
test
and
imul
sti
jecxz
mov
adc
adc
dec
in
mov
mov
test
mov
push
data16
xchg
mov
rcrb
mov
mov
sahf
add
fsubs
les
nop
idivb
pop
pop
iret
pop
arpl
mov
std
pushf
pop
test
enter
outsl
xor
mov
xor
cmp
or
push
xor
repnz
xor
rcll
xor
mov
jmp
sahf
pop
pop
adc
lahf
sbb
jle
mov
adc
out
out
and
inc
cmpsl
push
xor
icebp
jge
andb
push
pop
mov
sbb
pop
stos
ret
dec
das
xchg
fldcw
mov
or
sub
mov
gs
inc
adc
aaa
call
pop
mov
pop
add
push
and
mov
std
daa
fmuls
and
imul
adc
repnz
push
mov
xchg
out
dec
pop
dec
sub
arpl
fstps
lahf
jg
cltd
adc
imul
cld
jbe
cli
xchg
push
and
nop
in
xorb
mov
sub
sbb
test
inc
jb
mov
cmp
pop
jl
arpl
mov
lods
fisttpll
dec
sub
iret
jl
fsts
cmp
shl
pushf
pop
std
jns
add
jp
leave
jnp
lea
mov
dec
pop
dec
mov
cmovp
lahf
push
mov
mov
out
inc
dec
sbb
dec
pop
cmp
fstps
rclb
mov
jns
mov
cltd
fsubrs
push
cmc
xchg
or
mov
push
test
mov
xlat
repnz
imul
js
add
in
xor
cmp
jb
loope
test
sahf
mov
lods
mov
inc
aam
mov
xor
or
sub
pop
or
popf
shlb
es
fsts
mov
adc
mov
jl
test
pop
jns
int3
in
out
das
jle
jo
xchg
fidivl
xlat
roll
or
test
and
inc
xlat
xchg
outsb
xor
mov
push
addr16
push
sbb
add
inc
rcrb
mov
cmc
pop
ret
sahf
in
stos
xchg
xchg
mov
test
mov
jmp
and
rolb
insl
enter
sbb
push
cmp
adc
cli
push
xlat
repnz
fbstp
cmp
out
fcmovne
fstpt
repz
sub
xchg
push
shlb
mov
popl
jmp
inc
add
mov
adc
pop
fs
add
cmp
out
dec
sbb
and
ss
out
cmpsl
shrb
sbbl
lock
xchg
push
fistpll
lock
pop
out
dec
xchg
faddl
cmpsb
scas
shll
in
imul
jmp
sub
dec
cmp
pop
into
insb
pop
stos
or
into
idiv
mov
cltd
add
or
push
sarb
and
adc
jp
and
in
les
les
push
pop
rcl
pop
dec
fcomps
fidivs
inc
pop
js
std
jmp
scas
fs
pop
les
push
dec
daa
jns
mov
ss
data16
xor
scas
cmp
sbb
dec
cmp
add
jb
addr16
and
lds
fdivp
je
repnz
jae
outsb
or
sub
mov
shrl
sbb
ss
xchg
push
cmp
mov
jg
pusha
cmpsb
inc
ficoml
cld
or
dec
test
adc
pop
and
push
push
mov
out
dec
xchg
mov
jno
lods
pop
ja
daa
jecxz
mov
outsl
mov
cmc
in
mov
and
scas
mov
paddsb
sarl
rol
pop
inc
mov
stos
movsb
and
mov
add
out
cmp
sbb
pop
ret
mov
lahf
sbb
int
decl
lea
test
incl
lret
fmuls
fdivr
decl
mov
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
xchg
js
adcb
ret
pop
insb
cmp
pop
int
sbb
jne
xchg
sar
fsubl
inc
and
and
pop
test
jecxz
ljmp
lock
out
and
in
xchg
addr16
adc
jecxz
cli
or
or
les
lahf
rolb
cld
adc
popa
rcll
sbb
or
shll
cmp
dec
cli
scas
bound
ds
in
and
pop
nop
fisttpl
cmp
sbb
shlb
push
popa
mov
lahf
cmp
cmp
insb
pop
push
cs
ret
test
jge
test
jg
xchg
pop
sbb
or
outsl
outsb
or
jge
sbb
ljmp
inc
nop
add
sbb
mov
repz
insl
loope
pop
cmp
rcll
xor
jmp
mov
bound
out
and
xlat
int3
sub
dec
xor
out
cmp
pop
xor
sar
or
mov
xchg
pop
fldenv
lock
adc
fdivl
and
xor
xor
repz
hlt
jge
pusha
pop
sbbb
mov
nop
add
test
xor
es
xor
adcl
lret
mov
mov
fwait
cmp
das
xor
test
jmp
sub
cmp
in
mov
adc
xorl
scas
fsubr
popl
ret
pusha
mov
mov
out
std
dec
es
push
out
push
push
sbb
test
jmp
movsl
imul
ja
out
into
push
xlat
mov
sbb
stc
jge
xlat
imul
mov
jmp
loop
xlat
push
mov
jg
data16
dec
cmp
gs
push
pop
lea
mov
push
jb
mov
xor
outsl
push
xlat
xlat
shll
jge
repz
xorb
repz
dec
pop
push
or
cld
adc
xor
pop
push
popf
mov
adc
lret
mov
push
push
cs
insb
lcall
xchg
jp
sbb
add
insl
icebp
mov
mov
push
fs
push
outsb
ss
imul
cld
dec
pop
loope
fldenv
lods
or
xor
ret
mov
sarb
add
test
ja
pop
push
punpckhwd
ret
jnp
pop
xlat
clc
adc
pop
lods
mov
adc
inc
push
fwait
jnp
mov
xchg
mov
dec
pop
inc
mov
enter
xchg
mov
push
xor
aad
pop
pop
sub
mov
lahf
push
adc
test
mov
jmp
lds
mov
fistpl
push
mov
inc
int3
out
clc
xchg
jns,pt
cmpsb
cs
stc
das
or
inc
jmp
mov
or
in
add
or
test
push
or
push
ftst
dec
in
pop
pop
push
aaa
dec
cli
aam
mov
inc
addl
mov
mov
fs
into
or
and
jbe
and
inc
stc
pop
xchg
jecxz
sbb
add
xchg
repnz
stos
sarb
jl
add
mov
xor
pop
fsubrp
sub
repz
shll
mov
cmpsl
popa
fidivs
sub
leave
out
jno
adc
add
test
mov
lcall
lea
icebp
sahf
lcall
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
lods
add
stos
adc
adc
pop
sbb
or
fdivrp
sub
sarb
cmpl
jecxz
mov
aas
and
test
test
cltd
pop
sbb
je
daa
xchg
clc
and
lret
xor
shll
pop
insb
jb
rcll
or
mov
sub
dec
sub
les
loopne
test
xchg
adc
out
lods
xlat
ja
test
call
push
pop
adc
icebp
mov
xor
add
stos
or
std
push
adc
sahf
lahf
clc
pop
cmp
jmp
movsb
ljmp
jb
mov
add
imul
dec
dec
mov
cld
loop
scas
enter
and
insl
pop
addr16
sub
popa
lods
aam
sub
xchg
in
and
pop
push
cmp
push
orl
js
jle
mov
mov
cmpsl
mov
xchg
mov
pop
jp
rcll
push
inc
aad
stc
pusha
xchg
cmpsb
iret
cmp
jb
sbb
mov
jle
arpl
pop
add
mov
pushf
insl
sub
sub
fsubs
inc
adc
std
sti
and
or
adcb
inc
nop
ret
testb
clc
jge
popf
out
lock
mov
jecxz
push
sbb
sbb
cmp
pop
es
adc
jno
into
jbe
sub
adc
iret
push
out
das
cmp
sbb
jecxz
sbb
dec
add
jmp
jge
xor
test
pop
dec
jle
ljmp
push
xor
das
xchg
loope
lods
and
xchg
loope
jo
and
rolb
dec
rcll
mov
sbb
data16
jl
xlat
xchg
scas
push
scas
fdivp
mov
and
scas
inc
lcall
mov
cmp
xchg
lcall
lods
ffreep
subl
fs
aam
and
les
mov
sub
or
push
je
or
dec
cmp
and
fidivs
icebp
jl
jp
into
mov
mov
jge
cwtl
int
outsb
mov
adc
sbb
dec
decl
jecxz
pop
cmpb
les
fxch
icebp
icebp
enter
repnz
xchg
xchg
xor
dec
or
or
mov
mov
pop
stos
mov
imul
popa
sub
mov
mov
push
xchg
fimuls
das
jbe
pop
cmp
dec
fbstp
inc
cs
clc
icebp
and
add
ljmp
inc
fsubr
jbe
jae
adc
sti
pop
sahf
or
mov
adc
sbb
repnz
lods
jg
adc
loop
or
push
adc
and
das
iret
mov
movsl
js
or
repnz
jb
xchg
rol
mov
cwtl
fcmovne
jge
push
aas
mov
sbb
sbb
mov
cmp
pop
adc
stos
pop
or
inc
pop
add
pushf
pop
push
push
clc
mov
mull
or
adc
mov
mov
orb
dec
mov
jecxz
hlt
add
stc
sbb
ret
xlat
jno
ds
sub
push
push
add
aaa
jo
mov
push
notl
popl
movsl
or
push
mov
mov
jmp
mov
clc
mov
sub
jle
out
fdivrs
stos
adc
adc
leave
jge
sub
jge
cmp
aam
gs
aas
xlat
ret
mov
jns
idivb
dec
js
sbb
xchg
mov
inc
sarl
jmp
cltd
sbb
repnz
adc
pop
je
lods
leave
mov
pop
add
les
adc
push
hlt
imul
sbb
mov
push
push
mov
iret
cld
incl
inc
sub
add
fdivl
shll
hlt
mov
jle
movsb
in
incl
mov
adc
enter
xor
sub
push
or
or
mov
pop
paddb
mov
inc
jl
mov
mov
out
pop
imul
lahf
sub
mov
out
hlt
in
pop
cs
lods
in
mov
xor
adc
imul
push
xor
and
sbb
es
push
sbb
rcrb
xor
scas
movsb
adc
xor
pop
sbb
jno
sbb
jno
jmp
bound
jno
cltd
je
imul
divl
loop
sahf
jge
idivl
or
push
add
jmp
outsb
mov
fldcw
sbb
clc
lea
mov
sbb
jl
xor
les
out
outsl
popf
or
pop
mov
cltd
test
add
stmxcsr
jb
dec
jo
popa
sub
jnp
scas
rol
cmp
sub
in
mov
pushf
cmp
sbb
or
shlb
adc
cmp
or
jo
add
lcall
xor
pop
push
xchg
test
test
sub
dec
out
lret
sbb
mov
test
push
divb
push
jl
sbb
fcomps
jmp
aaa
cmp
call
into
fbld
addr16
movsb
sbb
mov
xchg
ret
mov
shl
pop
rorl
cmp
test
add
negl
or
popa
fmuls
adc
jnp
mov
in
cs
pop
jecxz
push
mov
daa
leave
and
mov
fwait
loope
push
mov
sbb
sub
inc
xchg
scas
shlb
lret
daa
loopne
ret
insb
pop
cmpsb
inc
add
xor
lods
imul
fisttps
dec
xor
adc
shlb
sub
mov
sbb
cli
subl
out
or
or
xchg
add
sbb
idivb
push
sbb
into
fs
jb
sti
loope
sub
inc
jecxz
inc
je
out
jb
mov
shrb
add
stos
and
mov
fisttps
pop
cmp
lret
arpl
iret
shrl
pop
movsl
cmp
or
cmp
mov
stos
fsubrs
fildl
mov
or
inc
sbb
lds
sub
mov
imul
push
iret
jle
pusha
bnd
into
rcl
fst
or
add
pop
sub
push
xchg
out
mov
adc
outsb
pop
stos
cmovns
fldenv
sbb
push
out
and
cmpsl
and
add
cltd
add
add
adc
mov
pop
aas
lock
xor
decb
dec
cmp
in
nop
arpl
sbb
test
test
js
cmp
or
and
scas
mov
push
fcomi
fwait
xchg
scas
jmp
cld
or
cmc
cs
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
xchg
adc
adc
outsb
sbb
xchg
stc
jmp
outsl
iret
loope
jecxz
mov
jge
cmp
std
mov
ret
scas
jg
imul
inc
pushf
loopne
das
xchg
adc
pop
or
sub
mov
in
out
or
hlt
fiadds
cld
movsl
fcmovnbe
clc
leave
fnstcw
push
xchg
cli
scas
jo
mov
cmc
out
adc
mov
test
push
sub
test
push
fcmovu
mov
mov
sub
xlat
adc
add
out
push
enter
mov
jl
inc
xchg
inc
ja
mov
pop
fsubrl
mov
jno
out
jne
lcall
stc
imul
lret
fldl
cmp
daa
xlat
and
sarl
sub
sub
and
call
jb
xor
xchg
outsl
and
mov
xor
mov
cmpsb
inc
or
stc
push
xor
xlat
fnstsw
xchg
pop
xor
mov
push
add
mov
imul
repz
dec
xchg
mov
or
je
frstor
loope
popa
or
scas
in
jmp
mov
jecxz
imul
mov
mov
or
addr16
dec
mov
jbe
mov
pop
dec
jno
push
cmpl
mov
lds
pop
ret
xor
lods
push
sahf
jge
xlat
lea
lahf
adc
call
loopne
adc
das
cwtl
push
or
insb
nop
adc
and
inc
mov
popa
ds
jecxz
out
adc
xlat
popa
fildll
js
mov
add
sub
and
test
jmp
cwtl
push
aas
stos
pop
cmp
xchg
mov
jne
outsl
push
inc
test
sub
cmpsb
repnz
sbb
jb
aaa
inc
fstps
sbb
xchg
xchg
fiaddl
push
pop
push
stos
push
inc
push
push
xchg
mov
sbb
push
and
pop
stc
pmullw
outsl
cs
repz
xchg
pop
out
xor
adc
mov
lock
inc
stos
pop
bound
das
sti
push
pop
push
add
xlat
mov
adc
ss
rcr
lds
andl
fadds
inc
jne
fbstp
jg
dec
mov
sarl
lods
jbe
call
aam
out
or
mov
sti
movsl
mov
mov
and
mov
cmovs
adc
adc
inc
mov
repnz
popa
das
lahf
or
ficoml
mov
add
pop
jmp
mov
jmp
fisubl
cmp
add
mov
repnz
mov
inc
cltd
aam
dec
push
lret
cmc
mov
pop
in
aaa
jns
dec
mov
mov
or
sbb
and
rcrl
cs
rol
in
aam
cmp
int3
jecxz
cli
xchg
out
loopne
sbb
xlat
test
fcmovb
clc
sbb
aad
int3
stc
inc
je
mov
mov
cltd
add
cs
addl
bound
mov
xchg
jl
popa
dec
or
aaa
int3
idivl
push
dec
dec
stc
dec
cmc
out
ja
loopne
push
fldl
mov
mov
loope
xchg
and
out
iret
sub
fldenv
inc
cmp
mov
xor
rcrb
daa
inc
cmp
rclb
jnp
or
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
aaa
je
jle
jecxz
pusha
sbb
mov
out
or
inc
cmp
mov
jbe
clc
lahf
mov
xor
pop
rcr
aam
mov
fwait
sbb
enter
sbb
leave
pop
in
imul
xchg
shl
jmp
cmp
iret
cmp
lock
xor
out
pop
imul
jo
out
push
xchg
xchg
jmp
jne
jg
enter
aaa
push
bound
scas
jnp
xor
mov
mov
icebp
icebp
test
push
dec
sub
cmp
popf
dec
dec
push
pop
cld
lea
dec
in
or
and
jg
mov
stos
jnp
pushf
cmc
adc
xchg
leave
mov
shrl
pushl
mov
pop
icebp
adc
inc
mul
jmp
mov
jge
xchg
stos
icebp
or
mov
dec
xor
push
cmp
cs
cmp
js
jbe
sub
add
out
and
xchg
adc
sahf
scas
mov
imul
ja
mulb
mov
stc
and
mov
inc
lock
mov
pop
mov
fs
es
movsl
pop
shrb
mov
fwait
js
jge
imul
or
outsl
inc
out
xor
push
pop
or
or
mov
dec
jmp
clc
pop
dec
stos
xor
xor
pop
xor
xchg
cmpsb
mov
jp
jbe
adc
mov
mov
shrb
xchg
fcomp
mov
sbb
sub
mov
nop
lods
pushf
cmp
sbb
inc
adc
xchg
xor
ja
mov
add
fwait
mov
fidivl
das
in
mov
dec
mov
sbb
call
out
iret
lds
push
lcall
jle
adc
mov
shlb
jecxz
fmul
push
sbb
inc
mov
inc
or
mov
pop
cmpsb
mov
push
dec
ds
loopne
xchg
mov
adc
cmp
ljmp
lock
cmp
shlb
jb
push
stos
xchg
inc
popa
cmc
inc
lea
xor
int3
nop
pop
ret
pop
and
add
bound
and
movsl
pop
sbb
lret
ja
cld
into
ljmp
mov
pop
sbb
push
dec
shll
popa
lret
lods
in
mov
mov
push
shlb
cs
es
hlt
inc
subb
pop
ja
imul
xchg
enter
push
mov
loope
popw
adc
loope
test
leave
lock
mov
out
inc
cmc
fwait
mov
psubsw
cmc
pop
icebp
dec
inc
sahf
imul
stos
adc
fcomps
push
movsb
add
add
pop
and
mov
add
adc
sti
fwait
inc
or
jne
fcom
add
outsl
mov
shr
cmpsl
bound
fnstsw
ljmp
js
add
out
jb
cltd
mov
stos
les
cwtl
xor
dec
sub
stos
jle
stos
in
seta
pop
scas
add
dec
add
pop
lahf
mov
sub
cmp
popf
adc
divb
fistl
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
add
sbb
adc
sbb
sbb
cmpsb
sub
test
rclb
insl
out
ss
lret
push
pop
xchg
add
inc
jo
mov
pop
xor
pushf
out
popf
stos
xchg
les
fcomp
sbb
mov
inc
xchg
cmp
xchg
xor
xor
inc
addl
pushf
pushf
cmc
push
shlb
mov
fdivrs
in
popa
sbb
xor
sub
sbb
test
cmp
push
inc
pop
into
cmp
push
add
or
movsb
loop
pop
fdivrs
shrl
fs
adcl
dec
lcall
or
aas
pop
mov
movsb
jo
cld
cmp
inc
dec
call
je
mov
pusha
into
xchg
jno
jp
jnp
dec
fnsave
aaa
jle
push
pop
stc
xchg
cmp
adc
pop
xchg
loope
es
mov
adc
fisttps
jecxz
xor
insl
add
subl
cmp
adc
push
mov
fldt
loop
cmp
adc
push
inc
sub
sti
sbb
mov
sbb
out
mov
xchg
in
and
pushf
cs
jmp
aad
jno
test
pop
test
out
inc
xchg
js
pop
mov
ret
xchg
sbb
fbstp
or
shl
ss
mov
dec
shlb
in
mov
mov
xchg
loope
mov
bound
mov
fwait
test
std
pop
jp
cld
sbb
in
data16
in
lret
lock
sub
into
push
sbb
or
or
test
test
insb
xchg
subb
pop
xchg
movsb
insl
inc
push
push
nop
xor
cmpsb
addr16
aam
inc
or
gs
mov
rcl
mov
or
sbb
ficomps
imul
dec
pop
and
sbb
bnd
out
notl
dec
xor
dec
rcll
xchg
das
jmp
outsb
jne,pn
notl
fldl
ret
push
xor
push
mov
gs
subl
xchg
mov
dec
mov
fidivrl
mov
loopne
xchg
mov
addps
inc
dec
out
stos
sub
add
cmp
jno
jno
adc
push
adc
call
sub
mov
fstps
push
insb
pop
and
mov
mov
dec
aaa
mov
mov
pop
inc
mov
sub
fs
test
sub
sub
dec
in
sbb
dec
push
fmuls
and
mov
pop
xor
mov
iret
push
adc
sub
mov
jl
into
mov
xchg
sbb
js
push
in
nop
xorb
mov
jg
fcoms
in
pop
inc
ljmp
xor
aad
decb
xor
mov
lret
add
inc
mov
push
imul
pop
mov
mov
pushf
test
pushf
scas
adc
pop
add
loop
jg
and
inc
lods
fcoms
stos
bound
cltd
fldl
lcall
sbb
lea
mov
lea
pop
dec
leave
test
adc
aam
xchg
mov
pop
jp
mov
pop
mov
lods
cld
cwtl
lock
and
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
dec
arpl
xchg
or
and
cli
push
and
mov
inc
fcompp
inc
jns
cmp
mov
add
fwait
adc
fsubr
std
pushf
adc
mov
jp
jmp
xchg
mov
sub
inc
cld
data16
xchg
js
jl
hlt
dec
lea
fmul
ja
ffree
lods
jp
mov
test
das
jmp
pop
sbb
push
adcb
push
sbb
add
xor
xor
and
xor
jp
mov
mov
dec
stc
gs
test
mov
xlat
or
in
mov
inc
or
cmp
adc
cmp
and
in
ss
lcall
pop
daa
pusha
jmp
aad
jae
sbb
push
jp
aaa
xor
sub
gs
fnsave
fcmovu
adc
decb
enter
ljmp
pop
mov
mov
addl
xchg
cmp
adc
cmc
add
inc
cmp
jo
daa
leave
jmp
sahf
addr16
lods
pop
lock
xor
faddl
daa
xor
add
xchg
or
jmp
pop
sarb
arpl
rclb
out
and
mov
pop
mov
mov
sbb
mov
lock
ss
ds
cmp
pop
push
sbb
inc
int
mov
dec
mov
sbb
dec
pop
jmp
lds
mov
mov
jge
mov
fst
pop
out
gs
js
add
sbb
adc
and
sbb
mov
mov
fldl
loop
jp
xchg
aas
rorb
stos
sbb
out
testl
xchg
or
mov
sbb
cwtl
cmpsb
dec
jl
fisttpll
mov
inc
test
adc
loop
jg
rorb
push
sub
aas
inc
add
mov
adc
fucomip
mov
xchg
idiv
pop
dec
add
xorl
fwait
push
dec
enter
mov
lea
rol
mov
xchg
xor
cmp
test
xlat
out
arpl
lods
lahf
orb
xlat
mov
insl
inc
pop
jl
aaa
push
sbb
add
dec
call
addr16
das
in
test
popa
stc
xor
mov
mov
adc
add
xor
fstps
lahf
cltd
lock
notl
leave
cmp
add
sub
lcall
testb
mov
clc
outsb
jmp
sti
in
push
or
lods
iret
mov
out
fldt
ret
sbb
xchg
jo
fidivrs
test
push
adc
test
out
or
mov
ja
cld
sub
dec
mov
cld
mov
clc
sahf
insl
arpl
aam
frstor
ficomps
jns
out
adc
les
jl
cmp
push
cmpsb
and
mov
and
test
hlt
mov
xor
mov
pop
ja
xor
or
aam
je
lret
mov
sbb
adc
fcoml
rolb
dec
sbb
test
mov
les
xor
fstps
mov
inc
pop
cmp
xor
inc
push
and
pushf
cltd
ret
rorl
xchg
out
cmp
sysenter
icebp
and
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
push
cmpsb
js
dec
adc
adc
fdiv
loope
add
popf
test
fs
lgs
outsb
mov
mov
cmp
loopne
repnz
lods
sub
test
imul
insb
sbb
cli
iret
add
scas
aad
jmp
and
add
xor
sub
jno
nop
jbe
and
punpckhdq
das
xlat
sahf
iret
jle
adc
scas
mov
mov
fidivrs
arpl
jge
jbe
cmp
lcall
dec
xlat
jecxz
shlb
or
in
fldl
or
cmpb
mov
dec
icebp
add
and
sbb
scas
xchg
xchg
dec
aaa
dec
aas
mov
push
das
hlt
sub
pop
push
andl
test
or
and
adc
push
inc
ja
or
rolb
xor
push
insb
fsub
inc
stc
in
movsl
inc
test
sbb
mov
dec
rcll
stos
mov
daa
pop
repnz
cmp
int3
jo
stc
mov
or
mov
stc
mov
mov
sbb
push
sub
push
imul
movsb
ds
scas
shll
outsb
jp
movsl
mov
cmp
lods
loope
sub
andl
imul
pop
cmp
cld
subb
das
xchg
lea
mov
push
rcrb
pxor
inc
andl
popf
repz
rcrb
cmp
mov
push
aad
les
imul
cmp
jbe
jl
push
shlb
xchg
rcl
test
sub
or
aam
andb
sub
jl
mov
mov
scas
jg
fisubrl
mov
add
pop
pop
push
adc
hlt
cli
movsl
rolb
push
jp
popf
pushf
push
dec
and
fwait
cld
xlat
test
push
mov
push
ja
sbb
pop
popa
push
in
jne
mov
enter
jno
adc
repnz
pop
lcall
mov
cmp
push
bound
andb
in
inc
adc
mov
mov
inc
or
icebp
adc
mov
out
cmp
repnz
out
jl
xor
or
test
jb
adc
pop
xlat
in
jb
insb
lea
xchg
aad
push
mov
bt
pop
pushf
nop
imul
hlt
lcall
in
pop
leave
cli
pop
icebp
jae
rorl
fisttpl
cltd
mov
dec
sbb
inc
std
push
lret
in
lods
out
xlat
xchg
clc
sbbb
jbe
mov
push
xor
gs
stos
jecxz
outsb
cmp
mov
scas
insb
in
int
mov
mov
push
pop
leave
xchg
test
sahf
pop
sub
jno
add
fst
mov
cltd
cmp
sbb
and
adc
rorl
mov
lods
fisubs
push
std
mov
fs
cli
or
testl
subb
mov
dec
push
outsb
xor
sub
lods
dec
fcmovu
ds
ret
push
test
xchg
inc
mov
sbb
call
ror
dec
das
mov
cmp
sub
and
cmp
test
xchg
mov
push
outsl
sgdtl
testb
push
and
adc
cmpl
pushf
push
jl
adc
outsl
pop
cmp
lock
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
xchg
hlt
js
jb
scas
xorl
fsubrs
push
test
int
in
mov
das
add
movsb
dec
test
jb
popf
lods
sub
xor
or
pop
mov
cmp
cmp
xchg
daa
mov
cmp
sahf
xor
lds
cmpsb
dec
pop
dec
les
rcrl
cld
jno
mov
cwtl
cltd
nop
pop
dec
inc
dec
and
inc
pop
aam
mov
dec
std
lcall
mov
jnp
mov
mov
xor
push
and
pop
or
dec
repnz
adc
dec
xchg
mov
inc
outsl
mov
lret
je
jp
push
and
fsubp
xor
cli
jmp
repnz
sbb
ret
repnz
lret
insb
pop
rclb
int
cmp
and
ja
sti
xlat
mov
or
out
mov
jae
popa
jnp
lea
sbb
dec
push
cmp
gs
test
sbb
sub
pop
orb
jg
test
mov
and
fstpt
mov
pop
ljmp
int
lahf
fdivrp
jl
mov
and
ficoms
mov
mov
dec
pop
and
cltd
lea
push
sbb
lods
addl
stc
push
insl
je
das
mov
push
push
mov
insb
and
sub
mov
and
aas
mov
rcl
adc
jp
or
das
jecxz
test
daa
pushf
imul
mov
and
mov
incb
loop
out
outsb
sti
in
sub
dec
mov
sarl
adc
mov
mov
call
push
or
push
ss
iret
out
movsl
movsl
mov
pop
sub
cs
add
xor
lcall
nop
pop
sahf
lock
sbb
and
out
or
jbe
sub
xchg
mov
fstps
sub
mov
pop
mov
cs
sarb
mov
fadd
lea
push
push
popf
jge
mov
lret
movsb
add
lret
clc
mov
cs
mov
test
lahf
pop
inc
fcomip
lea
shlb
cmp
cld
clc
std
and
lds
sbb
adc
inc
mov
xor
cmp
mov
imul
jnp
or
sub
jl
push
sub
dec
pop
cmc
cvtps2pi
lods
unpcklps
dec
xor
fsubs
test
shlb
psubusw
out
fisubrl
jmp
es
jno
divl
push
and
adc
xor
pop
or
scas
stc
movsl
lods
dec
and
cmp
adc
or
add
fdivp
lds
xor
cmp
movsb
xor
int3
outsl
mov
repnz
jecxz
int
iret
push
iret
jo
mov
shrb
gs
inc
and
sbb
mov
data16
dec
sbb
loopne
ljmp
sbb
inc
pop
and
cmc
or
stos
mov
mov
or
xor
jae
xor
fs
js
jle
lret
sub
jno
das
in
sarl
pop
mov
lds
imul
mov
xchg
ja
add
icebp
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
cmp
cmp
adc
in
out
dec
cmp
shrb
test
or
movsl
dec
xor
hlt
sub
js
mov
xchg
inc
sub
mov
aas
out
mov
dec
fstps
imul
cmpsb
and
icebp
sub
dec
data16
fadds
jbe,pn
scas
imul
mov
test
dec
jno
xlat
cmp
xchg
aam
cmpsl
gs
arpl
rclb
arpl
lahf
add
not
pop
and
jge
mov
mov
mov
cmpsb
dec
pop
push
jns
pop
cmp
sub
daa
pop
cwtl
sub
jl
hlt
lret
test
sti
mov
mov
xchg
push
jno
ds
pop
xlat
sub
ljmp
aas
push
xchg
lods
ljmp
lret
or
and
inc
xor
pusha
mov
test
test
fiadds
xchg
push
cmp
out
add
aas
mov
arpl
in
dec
mov
in
dec
jl
push
push
sbb
jb
push
adc
pop
orb
arpl
rol
jns
add
push
sbb
stos
sti
aad
adc
sub
add
xchg
dec
cmp
cmp
jg
xchg
mov
jle
jg
lret
in
mov
xchg
das
sbb
cmp
xchg
shr
xchg
or
jb
sub
add
out
mov
cmpsl
xor
jo
dec
xchg
add
adc
inc
add
jne
and
cmp
andl
cmp
test
xchg
mov
adc
daa
and
inc
and
cmp
scas
mov
les
and
add
sar
mov
iret
test
mov
gs
stos
pop
iret
out
xchg
push
adc
cmp
ljmp
or
xor
loope
push
mov
add
je
pop
mull
call
mov
shll
push
xchg
adc
push
out
add
mov
and
in
sar
sbb
in
imul
jmp
mov
xchg
fldcw
dec
jle
and
movsb
fwait
pushf
mov
ret
out
mov
mov
cmp
es
mov
repnz
push
cmp
pop
ret
faddl
xor
or
xchg
xor
call
push
test
push
negb
xor
imul
mov
sub
js
je
inc
and
movsl
add
or
sub
js
or
int3
imul
xchg
mov
push
xchg
push
xchg
cli
xor
xchg
and
mov
int
movsl
cmp
arpl
dec
add
pop
mov
pop
loopne
idivl
cmpsb
in
mov
stc
sub
lcall
or
dec
cmc
fcmovnb
inc
test
mov
or
jne
and
popf
lret
in
xchg
adc
push
push
lods
int
ljmp
mov
ret
out
nop
xchg
cltd
mov
push
add
pop
jge
inc
leave
or
popf
mov
test
fxch
dec
push
ljmp
pop
mov
pop
sbb
jnp
call
rcr
push
ss
movl
mov
adc
xchg
xor
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
jl
xchg
js
xor
adc
imul
adc
in
insl
lret
pop
arpl
adc
ds
mov
test
addl
xchg
inc
ficompl
adc
cmp
jb
push
ljmp
push
pop
xchg
jno
in
or
addb
push
loopne
mov
cvtps2pd
push
jle
jl
cmpsb
scas
xchg
mov
pop
lods
sbb
mov
shr
in
mov
lea
and
push
lods
and
jne
mov
xor
or
stos
xchg
adc
xor
iret
push
ret
bound
les
fstpt
and
dec
addl
test
stc
mov
mov
decb
jle
lods
pop
xor
sub
mov
fcmovne
mov
inc
sub
mov
adc
pusha
cs
push
lcall
gs
outsb
hlt
xor
fisttpll
jno
xchg
mov
js
shl
dec
bound
in
adc
and
fisubrs
out
imul
inc
mov
push
les
stos
and
push
push
icebp
xor
rclb
xor
adc
aaa
icebp
mov
imull
jns
jne
mov
and
daa
repz
leave
dec
test
or
in
lahf
mov
cwtl
jmp
or
pushf
repz
imul
add
inc
adc
inc
les
iret
leave
pusha
xchg
mov
dec
shll
mov
rclb
dec
ja
xchg
arpl
adc
mov
loop
mov
mov
or
stos
lea
mov
pop
rcl
test
or
fwait
mov
xor
sbb
movsb
shrl
ljmp
inc
mov
xor
imul
jns
ds
push
ret
inc
cld
push
test
sbb
push
scas
add
mov
pop
lcall
push
scas
ja
inc
add
dec
mov
stos
pop
les
inc
xor
hlt
flds
xchg
sti
jmp
jo
dec
lock
inc
clc
ja
into
pop
rclb
sbb
inc
push
mov
push
add
push
pop
std
inc
sub
add
ss
xchg
jge
test
enter
pop
mov
sub
divl
dec
out
lahf
test
and
dec
pop
xchg
cli
in
ss
cld
outsb
fdivs
in
cmp
jl,pn
pop
push
fildl
cli
mov
mov
sbb
adc
and
rclb
shl
xlat
ljmp
repz
mov
ss
lds
dec
sbb
iret
xor
stc
into
icebp
lret
jl
cmp
jno
mov
or
je
imul
idivb
in
mov
imul
xchg
sub
push
jne
and
imul
daa
cmp
imul
jge
lahf
xor
shl
push
mov
or
cltd
mov
sbbb
inc
stc
xor
xchg
movsl
sbb
inc
xor
fucomip
scas
outsb
in
or
cmp
fs
fstpt
xor
pop
leave
pop
testb
aam
mov
push
sbbl
daa
dec
pop
jmp
insb
iret
repz
mov
pop
jle
add
loop
aad
sub
mov
mov
push
dec
cmp
stos
adc
or
je
mov
mov
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
jmp
cmpsl
xor
adc
jmp
pop
rorl
ficomps
data16
or
add
add
jns
je
ret
aas
out
or
out
add
fnstcw
jnp
mov
inc
mov
sub
and
sub
mov
popa
test
dec
arpl
inc
and
adc
shr
fcoml
add
and
loopne
gs
sub
fs
fbld
fwait
insb
push
dec
iret
dec
mov
inc
lds
mov
adc
js
repnz
mov
cli
push
test
cmp
add
cmp
rolb
cs
daa
fisubrl
pop
jle
call
dec
xchg
inc
sbb
shlb
ss
lea
mov
xchg
mov
push
fdivr
xor
pop
aad
push
imul
mov
sbb
cmpsb
test
mov
test
pop
sbb
int3
lcall
add
dec
mov
fucom
movsb
push
stc
xor
cld
and
xor
jae
add
cmpsl
jo
inc
pop
adc
shl
in
insl
bound
iret
sub
std
fwait
andb
inc
jg
jle
jo
outsb
pop
bound
fwait
lret
bound
shll
jo
mov
into
mov
es
lcall
jnp
or
fisttpll
ret
les
lahf
pop
jmp
adc
pop
gs
ds
loope
incl
lds
fisubrl
jmp
push
push
mov
jno
inc
push
pop
pmaddwd
clc
imul
lret
notb
test
shrb
mov
xor
xor
out
add
jmp
scas
jae
shll
and
sub
mov
outsb
push
jns
adc
sti
push
hlt
push
repnz
mov
dec
adc
rolb
mov
aam
leave
dec
outsl
lahf
push
cli
loopne
xchg
dec
or
dec
enter
push
fcoml
loop
es
dec
add
arpl
ret
adc
les
adcb
mov
test
fwait
sub
xor
push
out
adc
mov
mov
daa
push
push
dec
push
xchg
push
fs
xlat
sar
fwait
out
xor
sub
jp
mov
sub
adc
scas
sbb
pop
xor
stos
dec
fildll
loope
pinsrw
mov
adc
cmc
push
fsubrs
scas
cltd
sbb
inc
inc
shr
ds
inc
cmp
and
dec
pop
es
cltd
addr16
pushf
test
xchg
mov
out
push
ja
fdivrl
repnz
test
mov
push
mov
movsl
ror
cmp
out
xchg
adc
lahf
push
mov
movsb
lock
or
mov
lods
mov
cmpsb
dec
push
iret
test
push
pop
xlat
jge
push
xlat
std
loope
mov
mov
addr16
inc
in
lods
mov
cmp
mov
lret
data16
add
aas
fimull
adc
mov
push
push
hlt
test
add
shlb
pop
in
jecxz
ljmp
je
lea
imul
inc
xlat
rclb
push
arpl
dec
fucom
mov
lds
sahf
shrb
leave
hlt
sub
fiaddl
add
and
int3
xchg
imul
fildl
sub
xor
cmpl
pop
cli
mov
pop
sub
xchg
push
inc
frstor
mov
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
insb
std
xchg
js
sub
adc
das
fildll
fisttpll
dec
neg
fstpt
push
jmp
pop
add
xor
inc
nop
fabs
mov
mov
call
add
les
int3
add
dec
cmp
popa
jmp
sub
push
sbb
or
mov
pop
ret
cmp
aad
mov
jo
fwait
movsb
scas
jecxz
lock
or
test
inc
fdivs
push
inc
push
popa
in
mov
and
xchg
pop
sbb
inc
outsb
outsl
jmp
or
fs
lahf
fsubrl
subps
lret
ret
adc
lret
jmp
inc
jecxz
sbb
lcall
call
jmp
mov
test
and
sbb
mov
add
imul
xlat
data16
jge
sbb
xor
flds
bound
stc
cmc
inc
movsb
test
cmp
or
enter
sub
sbbb
push
lock
and
fadds
stc
pop
incb
les
enter
pop
mov
or
lods
dec
mov
xor
mov
inc
inc
lcall
adc
imul
jns
jmp
imul
mov
push
ss
out
test
loope
lods
mov
dec
sub
sti
sbb
movsb
push
ret
push
scas
push
scas
sahf
jae
mov
sub
adc
add
mov
mov
jl
pop
rorl
out
je
gs
pop
popa
push
xchg
jp
inc
pop
xor
fwait
rcl
mov
mov
mov
inc
lods
cs
add
fisttps
dec
adc
sarl
shl
mov
call
mov
xchg
xchg
sub
push
rep
movsb
inc
adc
repz
outsl
ljmp
js
or
rclb
push
sub
jae
ja
inc
mov
cld
leave
outsl
push
sub
inc
addr16
push
jne
or
add
push
out
out
xchg
popf
cmp
les
enter
data16
push
fnstenv
lahf
jb
leave
ljmp
xor
xchg
in
sub
stos
loopne
push
jne
shll
push
mov
sub
pop
fisttps
das
dec
sti
dec
sbbb
ljmp
jl
mov
cmc
je
jo
cwtl
bswap
test
push
xchg
dec
out
outsl
fchs
movsl
fdivs
or
sbb
rolb
shrb
dec
add
push
fnop
andb
jbe
rclb
ficoms
jge
aaa
mov
or
stc
rcrb
jae
movsl
ja
arpl
test
inc
push
inc
call
jge
es
js
imul
cmc
cmp
adc
add
push
movsb
loop
fidivl
fs
mov
mov
and
or
mov
ret
adc
stos
scas
mov
push
inc
sti
jbe
jb
mov
imul
je
fdivrp
sarb
xor
cmp
xchg
adc
push
cmp
in
cmp
jbe
cmp
mov
movsl
mov
movsb
mov
stc
jno
lret
popa
sub
adc
stos
mov
fcoml
ds
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
cmpsl
pop
xor
jp
lret
gs
xor
inc
sbb
jecxz
sub
inc
jmp
test
xchg
test
aaa
test
int3
lret
mov
lock
in
and
movsl
sub
inc
or
loop
fs
cmpsl
iret
adc
xchg
imul
icebp
aad
jge
dec
push
sub
loopne
dec
push
stos
sbb
stos
lods
hlt
lea
adc
pop
movsl
popf
imul
mov
jb
jbe
arpl
dec
mov
mov
data16
mov
fbstp
rcrb
into
add
aas
and
arpl
rolb
xor
ljmp
mov
cmp
scas
fcompl
aaa
jo
sub
dec
xchg
test
push
mov
cs
mov
aam
inc
bound
push
das
push
adc
sti
adc
dec
mov
push
jge
das
or
daa
pop
into
insb
adc
jle
cmp
inc
cltd
ds
cmp
cmp
jle
mul
daa
ljmp
pop
pop
idiv
dec
sbb
movzbl
mov
cli
cmpsl
lods
push
das
xor
ss
push
pushf
push
dec
dec
dec
mov
imul
push
sbb
add
push
lret
adc
sbb
mov
xchg
xchg
mov
inc
xchg
xchg
sbb
aas
cli
into
xorl
xchg
pop
add
mov
pop
push
jmp
mov
iret
hlt
adc
push
mov
inc
pop
rorb
jle
cs
or
add
cmp
or
push
sub
sub
xchg
aad
scas
adc
sbbl
inc
xchg
pop
insb
sbb
sbbb
pop
test
cwtl
jecxz
push
sbbl
push
sub
cmp
je
popa
jg
fsubs
bound
mov
negl
mov
mov
xchg
cmc
push
out
mov
sbb
push
push
leave
inc
xor
inc
mov
out
aaa
nop
or
cmp
bswap
push
out
or
addr16
or
hlt
jle
cmp
push
fdivs
fcompl
or
sub
or
adc
jmp
loope
es
sub
fisttpll
cmp
push
sbb
push
push
mov
dec
dec
adc
in
jge
jae
mov
sub
or
jmp
cmp
rol
jmp
pop
jb
addr16
sbb
mov
sbb
xor
aam
jmp
adc
lods
cmp
pop
xchg
mov
adc
xor
pop
mov
in
adc
sbb
ret
mov
sbb
mov
mov
push
test
xchg
add
xchg
fsubs
outsl
cld
jne
adc
repnz
xchg
rcrl
movsb
push
sahf
aad
test
or
adc
shlb
int
pop
mov
test
lods
mov
push
sbb
jnp
adc
andb
dec
adc
fwait
popf
jnp
scas
adc
aas
mov
push
xchg
mov
int
fsubs
push
lcall
mov
fsubl
cwtl
or
ret
dec
adc
repz
je
iret
sbb
mov
adc
and
stos
mov
mov
pushf
mov
bnd
fistpl
inc
lcall
test
pop
jg
dec
iret
lods
jge
dec
mov
call
mov
mov
mov
jmp
or
mov
adc
pop
xchg
js
sbb
adc
push
and
out
stos
cld
movsb
and
mov
inc
add
aam
dec
adc
fwait
inc
inc
cmp
sbb
push
mov
fnsave
aam
scas
sbb
es
inc
hlt
xor
inc
cltd
fsubr
imul
push
cmc
inc
je
lahf
xor
mov
push
dec
mov
lods
not
cmpsl
in
lods
out
es
cmp
mov
sub
adc
sub
pushw
mov
jg
icebp
jns
int
adc
movsb
fsincos
adc
repnz
xchg
jp
insb
lods
pop
aam
xor
or
jnp
sub
es
gs
enter
sub
leave
mov
cs
lret
sbb
repz
mov
fwait
andb
xor
xor
dec
pop
lock
add
cmc
wbinvd
aam
loope
fildl
inc
repnz
outsb
lahf
xor
lret
nop
xchg
cmpsb
or
push
sub
mov
enter
pop
pop
sub
icebp
xchg
pop
rcr
lcall
ss
mov
sub
mov
in
mov
or
sub
out
jne
sbb
cmp
clc
mov
out
pop
aas
shll
cs
sbb
into
and
shl
sahf
jge
cmp
xor
orl
hlt
jg
xor
je
ret
cld
mov
fisttps
jnp
out
push
sarl
cmpsl
lock
jl
fnstsw
loope
lahf
add
pop
imul
jnp
jge
ss
stos
js
pop
pop
cld
and
inc
sub
call
pop
fmul
xchg
out
dec
push
sbb
call
mov
and
mov
cmpsl
and
ret
dec
imul
jp
mov
daa
into
jo
jmp
mov
sbb
movsl
or
sub
sbb
popa
and
push
jns
xor
call
nop
mull
dec
out
pop
das
push
fnstenv
out
add
mov
dec
jg
lods
xchg
or
add
pop
xor
pop
and
inc
popa
pop
jecxz
dec
std
sbb
mov
out
ljmp
pop
out
push
add
outsl
and
out
cmp
iret
aad
xor
test
xchg
mov
pop
loopne
loopne
fs
mov
lods
cmp
inc
mov
push
xchg
inc
jne
adc
mov
jne
jo
out
push
inc
jns
rorb
xor
test
bound
test
mov
lahf
gs
fstpt
mov
cmpsl
aam
push
test
xchg
movsb
pushf
je
outsb
adc
xchg
push
pop
sbb
shl
push
pushf
xor
insl
stos
lea
mov
shll
xor
jmp
xor
movsb
push
lds
inc
pusha
leave
scas
and
push
push
scas
inc
setg
adc
fsubp
dec
push
cmp
stc
popf
jge
jmp
filds
mov
jo
sbb
imul
jle
sub
call
mov
cli
in
ljmp
arpl
adc
mov
sbbb
or
in
fcmove
ror
cli
je
popf
das
test
outsl
fsubrp
xchg
pusha
int
xlat
pop
das
pop
add
pop
or
fidivs
iret
sbb
mov
ja
mov
out
inc
xchg
adc
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
jae
mov
stos
adc
adc
push
mov
lahf
mov
dec
pop
ret
and
mov
call
xchg
jno
cwtl
xchg
es
xor
or
sbb
and
les
test
cmp
movsl
insl
jmp
push
stos
stc
push
add
cmp
popf
test
adc
int3
sarl
stc
repz
cmp
or
les
loope
fildl
loop
fsts
mov
push
or
addr16
xchg
ret
xchg
sub
jb
jns
adc
sub
push
jle,pn
push
jno
mov
xchg
sbb
das
aaa
mov
inc
out
in
mov
push
scas
stc
scas
out
mov
outsl
iret
dec
mov
stos
push
les
sbbb
call
adc
or
push
in
fsubrs
xchg
je
xor
insb
mov
add
xchg
pop
adc
push
mov
mov
les
sbb
cmp
into
push
loop
xchg
xor
movsl
push
je
cmpsb
cs
addr16
xor
mov
push
stos
or
ds
jo
test
test
mov
dec
or
aaa
dec
popa
and
mov
dec
sbb
xchg
mov
pushf
data16
enter
clc
lcall
jg
andl
stc
je
shrl
jns
mov
fimull
imul
cld
es
xchg
ss
cmp
adc
lret
inc
jmp
loopne
ffree
and
leave
push
dec
lret
into
fwait
add
andb
push
das
adcl
mov
jo
push
movsb
fwait
mov
mov
and
jns
nop
mov
rcr
xor
imulb
cmp
in
sub
popa
sti
cmp
jp
js
je
mov
pop
xor
loope
aad
dec
fcmovbe
inc
add
push
inc
les
daa
pop
jns
inc
or
mov
jl
mov
insl
subl
aad
cs
aaa
add
cli
movsl
enter
stos
adc
data16
test
dec
or
mov
int
push
jns
or
movsb
in
push
jb
fdivrp
dec
cmp
ja
fdivr
pop
jno
jbe
loopne
or
ret
inc
orb
loope
orl
jp
pop
jge
jge
inc
and
fldenv
cmp
outsl
or
add
and
xlat
bswap
xchg
lea
faddl
inc
push
cltd
loop
push
add
sarb
or
xor
add
in
or
insl
jae
outsb
inc
les
cmp
cmp
xor
rol
mov
hlt
push
rolb
hlt
je
stos
es
push
xor
push
in
ret
shlb
mov
and
data16
ljmp
mov
inc
movsb
and
inc
shrl
fs
jno
fidivs
cmpsl
sub
add
pop
fs
jbe
push
jl
out
jg
mov
scas
sub
addr16
dec
sti
lods
andl
dec
imul
sbb
inc
out
mov
sbb
fmul
mov
mov
popa
mov
jnp
mov
loope
mov
xor
arpl
stc
fists
fcoml
push
cltd
cmp
cmp
sarl
inc
cltd
mov
and
xchg
sti
fcoml
adc
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
into
xor
roll
push
adc
jbe
jno
imulb
and
dec
xchg
push
and
cmp
add
in
pop
jg
testl
push
add
jg
popf
push
push
adc
mov
xchg
jle
sbb
cmp
sbb
ja
data16
or
mov
movsl
or
add
imulb
pop
js
cmpsb
lock
mov
call
mov
repz
push
and
pop
fdivl
jmp
mov
jl
mov
cwtl
xchg
nop
ss
cli
push
imulb
adc
ret
loop
pop
push
jge
pop
jp
cltd
and
rep
aas
test
int
sub
sub
xchg
push
mov
stc
mov
int
jno
xchg
push
rcrb
popa
sahf
scas
xchg
add
mov
mov
pop
pushf
sub
cli
dec
insb
daa
mov
lahf
movsl
mov
or
jg
pushf
in
mov
xlat
pop
cmp
popa
add
in
dec
push
lock
int
lcall
cwtl
sbb
mov
test
sbb
add
xchg
es
clc
es
sbb
or
dec
sbb
mov
lea
hlt
xchg
jae
fdivrs
rol
out
xor
leave
adc
imul
ljmp
lea
das
lret
or
push
jb
or
insl
and
pop
jae
cmp
mov
and
pop
inc
dec
ret
jmp
xor
jle
icebp
cmp
sub
xchg
add
add
fmuls
cli
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
