push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
fdivp
out
mov
mov
outsb
les
mov
inc
jecxz
push
out
pushf
fsts
movsl
jmp
jae
xchg
xchg
out
mov
stc
pop
inc
sarl
or
addr16
in
leave
fcmovbe
sub
test
inc
sbb
fsubrs
xchg
sbb
sbb
fldenv
push
pmullw
push
jge
out
sub
xor
mov
inc
xchg
xchg
adc
js
mov
stos
jmp
gs
and
cli
mov
fsubs
mov
mov
mov
les
dec
lods
inc
mov
divl
push
pusha
pop
imul
mov
mov
movsb
js
pushf
out
push
sti
mov
fisttps
push
cwtl
sub
inc
jo
shrb
out
popf
jge
iret
nop
popf
out
ret
jmp
sbb
stos
fidivrl
imul
aaa
clc
cmc
lea
cmp
or
jl
mov
jmp
fdivrl
int
push
jae
dec
cmp
aas
aam
push
cld
mov
dec
add
negl
cmpsb
ja
fcmovbe
fcom
or
aas
rcrb
mov
mov
aam
sbb
adc
adc
negl
fs
add
jp
jl
dec
mov
jbe
ss
pop
mov
into
sbb
push
pop
cltd
dec
int
mov
mov
in
fdivrs
inc
xchg
xchg
dec
inc
lret
pop
inc
das
or
xchg
mov
push
pusha
lods
je
push
ficoms
xchg
inc
add
sub
pop
sub
enter
pop
inc
pop
mov
mov
stos
push
push
icebp
pop
in
xchg
sbb
push
sub
inc
push
inc
in
mov
mov
je
scas
xchg
xlat
hlt
add
mov
dec
scas
mov
sub
jmp
ds
mov
out
xor
push
pop
outsl
sti
pop
dec
lds
sti
les
fiaddl
es
sar
add
sbb
test
push
lods
cld
push
sub
jo
push
int
shl
mov
inc
inc
inc
adc
xchg
push
subb
testb
das
out
icebp
movb
push
shlb
es
into
jmp
ds
sbb
fisubrl
lock
shrl
sbb
push
mov
fdivl
inc
out
stos
pop
sub
jb
xchg
negl
subb
sahf
fcomp
imul
sti
gs
mov
inc
rcll
dec
stos
mov
pop
push
test
xchg
vmovdqu
loopne
cmpsl
sahf
imul
xchg
arpl
loopne
jg
sub
lret
sbb
cmp
pusha
pop
mov
or
mov
out
sti
aaa
mov
dec
jg
mov
jne
into
add
jl
dec
xchg
sti
sbb
daa
test
sarl
xchg
jb
gs
xchg
dec
add
inc
outsl
xchg
jmp
xchg
sbb
xchg
mov
add
setne
stos
iret
xchg
test
roll
scas
fistl
jp
enter
cli
jmp
adc
mov
cmc
cmp
pop
shll
aad
inc
mov
loop
std
sub
cld
add
mov
add
xchg
cli
insl
cwtl
lea
rcll
ja
lea
js
mov
jle
mov
xor
pop
pop
inc
push
pop
into
add
xchg
sahf
cmpsb
mov
pusha
dec
sbb
dec
call
ljmp
pop
mov
popa
out
into
or
fs
repz
arpl
inc
xor
loope
je
mov
push
and
test
ljmp
xchg
loope
test
mov
leave
lds
push
jmp
fstpl
pop
jnp
push
inc
sbb
mov
add
in
subb
cmpsb
push
into
pop
in
inc
sbb
pop
dec
mov
int
int
mov
repz
push
cld
sbb
jmp
inc
negb
mov
xchg
out
mov
leave
or
jge
in
js
pop
xor
lods
pop
rcrb
movsl
repz
add
iret
jb
decl
fstl
shll
add
xor
dec
mov
xchg
jns
jns
icebp
adc
inc
mov
popa
pusha
ret
in
call
dec
iret
xchg
pop
and
adc
fisubrl
sbb
dec
add
dec
jge
gs
outsl
jl
jmp
or
or
lahf
pop
cmp
sub
je
and
rol
mov
mov
inc
movsb
mov
sahf
ret
ret
in
test
in
add
push
shll
mov
lock
adc
aas
jl
jp
lds
roll
push
fs
cmp
push
and
jnp
push
rol
add
testl
ljmp
iret
add
mov
fnstcw
icebp
add
sysret
inc
lods
xchg
nop
mul
push
cmp
cli
gs
dec
popf
ss
lcall
mov
test
mov
dec
jae
sub
stos
pop
daa
pop
sbb
decb
or
loopne
fidivs
push
mov
add
invd
sub
sbb
push
sub
subb
cld
jge
icebp
inc
lahf
sub
cmp
in
dec
cmp
fidivrs
mov
outsl
jmp
push
pop
pop
shl
pop
add
pop
stc
dec
cmp
dec
mov
jo
push
pop
cmc
into
mov
cmp
or
sahf
sub
lret
mov
bound
sbb
notb
xchg
into
jno
lret
xor
stc
outsb
loop
mov
jg
int
xorb
lret
xorl
int3
sbb
lcall
inc
stos
aam
je
pop
pop
cmp
or
outsb
push
push
sbb
inc
jmp
sar
mov
push
cli
aam
or
rcr
jmp
mov
in
push
pushf
dec
pusha
push
aad
lods
mov
mov
outsb
rol
push
mov
xchg
scas
xchg
daa
or
push
dec
push
inc
inc
bound
xchg
shll
inc
fidivl
add
je
je
mov
adc
or
fistl
add
mov
ja
jb
pop
ret
jge
roll
sub
dec
dec
arpl
out
mov
daa
stc
sub
test
jne
mov
push
and
mov
and
fsubrl
cltd
mov
inc
xor
inc
aaa
or
gs
push
cmp
icebp
popf
imul
js
leave
inc
jmp
test
sub
leave
iret
shrb
dec
in
jmp
mov
jge
sbb
mov
inc
xor
xchg
push
inc
sbb
mov
aad
cltd
sarl
gs
ds
aam
xor
or
add
cwtl
pop
mov
insb
xchg
cs
pop
fbld
fnstcw
shrb
cltd
cmp
mov
sbb
dec
push
cltd
rcr
cmp
push
lods
push
push
scas
arpl
cmovae
test
and
mov
out
add
cli
daa
das
push
cli
add
adc
cmp
adc
pop
jae
cmp
gs
adc
sub
adc
push
inc
sub
xor
test
xor
cmc
jno
aaa
sar
adc
adc
sti
dec
dec
subl
cmpsb
push
inc
shlb
icebp
sub
shr
ss
in
fs
mov
xchg
xchg
sbb
pushl
xor
sub
addl
pop
in
pop
mov
test
cmp
jne
outsl
inc
stos
cmc
pop
xchg
scas
fldenv
insl
mov
adc
jno
mov
sub
and
cmpsl
or
lods
adc
jge
jmp
jo
mov
mov
mov
jno
inc
and
inc
rcrl
pop
add
enter
cmp
cmp
push
scas
daa
out
sbb
stos
sub
xchg
fists
loopne
inc
repnz
pop
pop
int3
jne
mov
negl
inc
or
inc
inc
sub
add
in
lds
aas
sbb
shl
mull
popa
int
in
gs
int3
inc
inc
in
movsl
push
ret
jno
mov
daa
mov
jns
mov
fwait
cmpsl
xchg
mov
cltd
orl
shr
mov
jo
daa
sbb
mov
into
shrl
mov
popa
faddp
out
add
push
fists
mov
push
inc
icebp
sbb
inc
adc
mov
lods
mov
int3
fcomps
jno
push
call
in
imul
imul
cs
pushf
inc
ret
fisttps
aaa
jecxz
fsts
push
pop
mov
call
sbb
add
push
clc
jg
jb
leave
mov
scas
in
cmp
xor
stos
popa
push
push
leave
push
mov
cmp
inc
cmpsl
dec
bound
pop
test
es
jbe
add
mov
adc
push
add
mov
nop
mov
fs
cmp
mov
xor
mov
pop
push
cmp
or
pushw
adc
scas
push
mov
iret
iret
push
fistl
pop
and
add
pop
xchg
pop
dec
sub
movsl
adc
cmc
or
leave
and
mov
jl
jne
mov
pusha
or
shll
in
inc
push
sub
mov
mov
mov
lcall
pop
repnz
or
lods
ret
xor
test
inc
pop
movsb
loope
cmc
enter
dec
jle
sbb
xor
inc
mov
outsb
insb
mov
dec
add
xchg
outsb
sub
and
rolb
movsb
lock
add
in
cmp
jp
jl
jle
add
cwtl
jo
test
add
mov
dec
adc
nop
shrb
out
rcl
daa
dec
repnz
jo
test
jns
mov
pop
adc
loop
jns
sub
mov
push
adc
lods
lods
lcall
xchg
shlb
lds
mov
cmpsb
lods
jbe
cmp
aaa
and
inc
imul
inc
test
add
into
push
dec
data16
in
movsb
pslld
sub
jns
sahf
inc
pop
push
inc
or
arpl
mov
jg
fidivrs
bound
nop
int
mov
cmp
sub
xchg
sbb
js
xchg
fwait
not
ficomps
es
mov
or
adc
adc
cvtps2pi
push
rclb
xchg
adc
pop
fbstp
jp
pop
mov
insl
push
sub
in
push
adcb
fwait
push
mov
les
hlt
imul
mov
stos
leave
xor
punpckhwd
push
lahf
aam
pop
test
adc
addr16
movsb
mov
leave
mov
rcrl
aas
cmovae
mov
repnz
pop
int
in
rcrb
enter
popf
ja
mov
or
mov
fimull
stos
xchg
je
fiaddl
mov
int
mov
enter
cmpsl
sub
push
in
sbb
jae
fstps
fs
ret
mov
jo
xor
jnp
rcrb
shrb
mov
in
add
jnp
ds
xchg
xor
loope
jae
mov
mov
fistpl
sub
inc
and
mov
push
xor
popf
shl
pop
dec
hlt
inc
test
sarb
loop
push
adc
mov
cltd
cwtl
push
je
loopne
xchg
cli
stos
sub
xor
call
popf
stos
jno
jnp
fdivs
pop
or
sahf
jp
and
xchg
aad
cmc
mov
gs
mov
cs
loopne
pop
dec
nop
jle
mov
mov
sub
stos
cld
xor
call
dec
inc
int3
add
mov
pop
icebp
in
xchg
xor
lcall
aam
int3
fcmovnu
icebp
daa
xor
incb
ds
push
add
push
xchg
or
sub
popf
mov
popa
cli
sbb
fcompl
lcall
cmc
inc
mov
aaa
loopnew
cmp
and
sarl
pushf
adc
insb
aam
idivl
jp
mov
repnz
inc
push
outsl
cmc
add
stos
mov
sbbl
inc
jb
inc
add
add
pop
jbe
mov
xchg
ja
mov
lods
clc
sub
fs
orb
sbb
shrb
xor
and
pop
imul
dec
addr16
sub
sub
lock
and
cli
enter
or
or
xor
enter
jg
and
pop
test
in
mov
inc
dec
and
outsb
mov
xchg
xor
pop
in
in
pop
xchg
scas
lahf
xchg
stos
decl
mov
mov
dec
imul
mov
icebp
pop
add
in
les
cmpsb
clc
dec
scas
cmp
sub
sbb
or
in
jge
stos
xor
and
jp
sub
testl
std
cli
nop
cmp
xchg
stos
addr16
outsb
sarl
pushf
out
popa
inc
push
mov
pusha
inc
inc
in
jns
push
cmp
and
push
or
das
dec
nop
xchg
out
push
adc
pop
aam
and
mov
addr16
sub
or
test
and
ljmp
ljmp
jno
sbb
pop
or
mov
cmp
adc
ret
outsl
lock
cli
les
xor
xrelease
repnz
pop
xchg
pop
ret
lahf
push
xor
aam
cmc
aam
dec
mov
ret
rcr
lcall
xchg
xchg
mov
dec
cmp
movsl
push
push
dec
lret
add
movsb
into
push
xor
pop
mov
mov
out
mov
dec
push
mov
push
mov
sarl
push
mov
cmpsl
xchg
sub
jnp
mov
cltd
popa
pop
roll
mov
lahf
push
ss
and
out
cli
sub
or
sbb
gs
jl
sbb
dec
mov
jecxz
lret
adc
jne
sub
sbb
outsb
nop
es
fidivrs
mov
sub
mov
stc
fistpll
xchg
push
dec
fmull
cltd
sbb
cltd
dec
lods
and
cwtl
ret
lds
xchg
dec
dec
xchg
mov
cmpsb
subl
xor
cmp
popf
xchg
leave
adc
imul
mov
or
push
imul
fidivl
jne
ret
dec
loope
adc
xlat
movl
lcall
jae
mov
enter
xchg
push
aas
xchg
or
sbb
subl
or
push
pop
repz
rcrb
jmp
inc
sbb
lods
jbe
push
push
sbb
js
mov
rol
je
ret
mov
call
cmc
sbb
out
jns
pushf
xor
rorl
jne
cmp
enter
dec
sbbl
ds
dec
cmpsl
std
mov
xor
push
in
inc
jne
out
mov
mov
adc
adc
jg
loope
xchg
test
stc
cmp
mov
xor
out
sbb
and
pushf
cmp
fisubrs
aad
adc
mov
dec
adc
adcb
mov
pushf
ja
lahf
add
cld
loopne
bound
popa
mov
inc
or
jb
mov
push
inc
add
xlat
loope
xlat
mov
jne
or
push
mov
xor
dec
pop
or
mov
hlt
xchg
xchg
maskmovq
testl
cld
out
push
aaa
rolb
sub
dec
adc
ds
xor
pop
loope
fiaddl
ficoms
mov
orl
cmp
or
test
popl
stos
inc
fldcw
hlt
mov
add
pop
jne
xchg
jl
xor
pop
test
mov
mov
adc
push
pop
jo
cmpl
stc
lock
lahf
mov
add
fucomip
leave
sub
aas
mov
mov
and
push
inc
or
cmc
test
stos
mov
inc
mov
mov
cmp
int
inc
mov
je
js
movsl
aad
ja
mov
cld
shrb
in
jge
inc
call
sbb
pusha
outsl
aad
clc
sbb
sti
push
in
hlt
cmp
add
add
stos
ss
js
inc
add
inc
ror
pop
inc
iret
pop
mov
repnz
les
mov
mov
lea
hlt
lods
insb
push
pusha
jo
pushf
test
jbe
push
movsl
push
dec
int3
push
mov
movsl
lret
ret
test
cltd
mov
fwait
jns
shlb
or
in
lds
xchg
mov
mov
lds
push
inc
xor
fwait
mov
daa
test
lret
nop
gs
fstl
xlat
sub
scas
adc
cmpsl
hlt
mov
fstps
fbstp
lock
lahf
adc
fbld
and
ja
dec
fistpll
test
or
jecxz
pop
lods
push
jp
jo
sbb
jp
dec
sub
or
cmp
fcmovbe
into
xor
mov
icebp
and
adc
mov
adc
mov
cwtl
ret
sar
aad
add
nopl
dec
sti
popa
push
cmp
leave
jo
dec
cmpsb
test
mov
pusha
xchg
mov
adc
aaa
mov
repnz
mov
pop
add
sbb
push
clc
dec
xor
cmpsb
cmp
inc
lds
or
xchg
adc
or
push
movsl
ljmp
dec
xchg
push
sbb
cmpsl
sbb
sbb
pop
or
adc
push
cs
pop
xor
cli
pusha
aad
push
sub
mov
and
inc
xchg
rorb
das
push
and
cli
fidivl
xchg
das
test
fdivrs
mov
les
shl
sbb
push
dec
orl
js
xchg
adc
insb
lret
orps
ljmp
fcomip
stos
xchg
lods
ljmp
lret
adc
lret
mov
scas
fs
lds
pop
out
in
movsb
stos
pusha
sbb
icebp
popa
into
in
movsb
icebp
push
cmp
dec
mov
iret
shlb
stos
scas
push
test
jl
leave
je
clc
mov
mov
pop
mov
das
push
jle
or
outsb
mov
inc
stos
aad
jmp
icebp
mov
mov
lods
jmp
ja
cmp
dec
loopne
add
mov
dec
xchg
lret
mov
insb
and
sub
andb
pop
les
or
xchg
xchg
xchg
jmp
js
insl
loope
addr16
imul
push
sub
mov
jno
push
cmc
dec
js
cmpsb
ss
lcall
xor
scas
sbb
cmc
or
dec
pop
movb
cmp
jle
and
mov
jo
les
stc
add
or
sbb
push
dec
xchg
inc
cs
and
das
mov
mov
pushf
arpl
stc
push
pop
add
bound
les
sub
xor
outsl
push
xchg
mov
popf
arpl
shrl
sbb
dec
dec
lods
rcr
sbb
inc
mov
cld
sbb
cld
sub
or
lods
jbe
sub
movsb
adc
pop
aas
dec
fstps
incb
stc
enter
push
push
roll
imul
pop
popa
ffreep
aas
lret
mov
mov
outsb
sbb
js
inc
scas
stos
mov
shlb
add
adc
mov
add
iret
or
nop
mov
stos
dec
sbb
sub
movsl
inc
out
jmp
mov
clc
pop
push
cli
push
xorl
cmp
mov
mov
out
xchg
andb
mov
xor
inc
bound
call
lret
mov
cld
push
mov
dec
mov
add
mov
es
test
data16
mov
loope
test
lret
std
xchg
mov
shr
imul
cmp
mov
fidivrl
mov
xor
jbe
test
nop
push
mov
scas
in
inc
lahf
cwtl
jmp
sbb
popf
pop
jg
lods
fmuls
jnp
lcall
mov
test
sub
jp
jl
sbb
push
orl
mov
xor
pushf
rorb
cwtl
mov
call
mov
inc
push
adc
out
lcall
movsl
test
loope
cmpsb
sub
mov
mov
push
xor
cmpsb
push
adc
jae
loop
addl
fs
adc
xchg
lock
fisubrl
stos
shlb
in
ja
pushf
cmp
call
adc
push
ss
or
inc
movsb
push
and
cwtl
sahf
loope
scas
add
pop
push
push
addl
ret
dec
adc
mov
fcomip
mov
iret
test
out
cmovbe
mov
lods
enter
adc
ljmp
lea
cmpsb
dec
jbe
cmp
movsl
adc
or
decb
adc
addr16
fwait
dec
xor
in
inc
lcall
push
add
sbb
or
push
or
sbb
jle
mov
xchg
ret
scas
push
inc
pop
hlt
cs
xchg
test
in
push
fs
inc
loopne
fisttpl
daa
mov
ss
rorb
jns
dec
or
fndisi(8087
sub
lods
divb
pop
mov
pop
jg
mov
inc
inc
imul
mov
cmp
out
xlat
pop
sti
adc
leave
push
push
mov
stos
sub
sahf
sarb
sub
rcl
cld
inc
hlt
loope
or
mov
sbb
cld
les
mov
bound
leave
xor
lods
or
inc
mov
outsb
sub
cmp
mov
or
jp
cmp
xor
enter
pushf
adc
ljmp
pop
sbb
jg
cs
pop
jp
mov
push
std
cmp
lret
addr16
and
neg
pop
cmp
xchg
dec
push
push
lahf
xchg
pop
lea
cmp
scas
addb
mov
adc
add
lret
xchg
fisubs
and
ret
mov
fldl2e
test
mov
js
cltd
dec
sbb
fucomp
xchg
xor
aam
test
dec
adc
push
in
mov
jmp
and
movsb
pop
push
stc
pushf
mov
lahf
sahf
pop
jmp
rcll
dec
loope
mov
loope
push
adc
jnp
xor
jnp
xlat
popa
outsb
call
imul
adc
pop
fadds
sti
shll
cwtl
sahf
jb
pop
sbb
jo
or
cmp
xchg
popf
js
fiadds
xlat
mov
inc
jns
sbb
outsl
lods
sub
rolb
aad
xor
xchg
adc
sub
int
cld
mov
int
mov
movsb
jb
test
dec
pop
jnp
les
dec
in
cs
inc
nop
scas
push
adc
and
shr
cld
xor
lods
imul
les
enter
divl
mov
jnp
xlat
sbb
pop
movsl
mov
adc
stos
shlb
adc
in
xor
ljmp
cmpsl
arpl
pop
jle
repnz
jb
test
mov
cwtl
sub
mov
mov
loop
xchg
sub
sbb
jo
jo
lock
or
rcrl
adc
lea
add
mov
pop
out
adc
pop
and
mov
fidivs
or
lea
stc
js
aam
out
int3
aad
int
iret
sti
andl
or
or
sub
test
js
mov
cmp
rcrl
in
mov
mov
jne
cmp
or
dec
addb
lahf
add
cmp
loopne
inc
push
sti
in
sub
loop
push
or
push
stc
mov
into
and
cmp
scas
adc
jb
aas
lods
jns
cwtl
cli
dec
lea
xchg
in
scas
mov
std
shlb
mov
mov
ljmp
or
jbe
scas
in
xor
sbb
imul
sub
cmp
adc
or
adc
inc
inc
cmpsl
xor
lahf
sbb
xor
mov
or
arpl
lods
sub
adc
and
das
fs
jo
inc
cli
and
out
cmp
daa
xlat
cmpsb
push
clc
imulb
bound
xchg
andl
ret
adc
or
push
loopne
lock
xor
cmpsl
lea
ret
jnp
ja
pop
lcall
push
mov
adc
xchg
movsb
sahf
ret
inc
pop
jns
mov
xchg
lret
fdivs
popf
enter
out
inc
mov
fnstenv
out
sub
xchg
cmpsl
ja
cmp
dec
and
btc
clc
xchg
movsb
xlat
dec
pop
or
in
cmp
mov
fidivl
xor
push
out
int
jle
lret
jbe
ja
clc
insl
inc
js
sub
js
cmp
imul
cmp
sahf
cmp
lock
loop
sbb
ljmp
mov
push
sub
mov
fwait
lret
aam
mov
cmpsl
adc
cmpsl
add
sti
imul
and
je
mov
ficompl
loope
fxch
shll
cli
sub
add
nop
push
mov
loop
je
cmpsb
jg
mov
mov
sub
std
cs
roll
sub
in
nop
enter
and
lret
cmp
fldcw
sub
out
pop
adc
mov
test
add
cld
pop
push
in
das
dec
mov
mov
daa
sbb
mov
je
add
stos
out
add
out
mov
jmp
adc
mov
and
xor
cld
xchg
adc
enter
inc
daa
add
pop
xchg
movsb
mov
dec
sub
mov
mov
add
lret
pop
push
test
out
xchg
rcr
rcll
add
add
xchg
cltd
cli
movsb
test
add
pop
pop
adc
fbstp
jle
aad
dec
jno
xor
ljmp
push
int3
sbb
js
sbb
adc
xlat
imul
jbe
push
sub
jmp
adc
cltd
and
xchg
mov
sub
mov
add
xor
jle
sbbb
popf
fstps
inc
scas
pop
jmp
fildl
insl
fwait
int3
xchg
push
lret
mull
xor
mov
jbe
lahf
stc
mov
lcall
mov
sarl
jns
xor
lds
xor
lods
ja
and
xor
repnz
es
dec
xor
push
mov
int3
scas
add
aas
cld
pushf
loope
gs
push
mov
in
jl
xchg
pop
pop
fdivl
mov
shll
pushf
cmp
dec
or
lea
dec
pop
imull
fwait
jge
pop
into
outsl
and
inc
pop
rclb
sbb
push
pop
jo
and
cli
or
sbb
jae
imul
cs
mov
sub
xor
or
pusha
dec
movsl
test
cmpsl
dec
push
or
in
rcll
mov
pop
mov
sarl
imul
xor
fldenv
and
data16
xor
adc
sbb
ja
or
xor
xchg
scas
scas
pop
mov
test
pop
jb
enter
fsts
sub
jne
pop
mulb
mov
fistpll
icebp
aas
sti
sbb
incb
dec
push
xor
push
fwait
stos
loope
roll
dec
bound
in
push
xor
mov
add
mov
xor
xlat
mov
inc
inc
lds
mov
mov
push
cmpsb
je
repnz
mov
fcomps
and
cmpsb
and
adc
jmp
sbb
or
rcll
js
xchg
adc
adc
and
outsl
jns
push
adc
fldt
cmpb
js
xor
lods
lea
xchg
mov
dec
in
popa
cmp
inc
adc
cld
inc
sub
pop
mov
imull
mov
adc
pop
push
sub
sub
sbb
pop
xor
std
sub
data16
jns
push
mov
xor
pusha
leave
js
ret
outsb
fucomip
mov
das
std
and
jecxz
aaa
jno
jae
data16
push
leave
xor
daa
mov
and
sub
outsl
pushf
adc
xlat
fwait
cmpsb
nop
adc
icebp
or
scas
xor
cmp
loope
jne
mov
imul
jne
adc
dec
lcall
insb
xchg
push
mov
lods
stc
popl
jae
mov
jbe
call
push
pop
lcall
inc
stc
fwait
mov
jp
push
mov
mov
test
push
xor
and
ret
mov
and
push
or
sbb
shlb
pusha
insl
mov
rcll
repz
nop
xlat
iret
or
jmp
and
mulb
pop
mov
adc
cld
mov
push
mov
shr
jmp
xchg
pop
lret
jns
in
fs
and
xor
mov
pop
cmc
lods
cld
pop
jmp
inc
xor
dec
mov
adc
adc
cmp
xor
in
sub
fldt
stos
movsl
jo
mov
je
pushf
dec
pop
stos
jae
in
jno
mov
daa
push
mov
pop
add
out
adc
addl
cmpsl
insl
add
xchg
fidivrl
test
mov
and
out
jmp
mov
iret
xor
mov
in
push
xor
loop
jmp
xor
decb
xor
xor
or
or
nop
lret
je
out
loop
adc
adc
fld
dec
bound
test
fdivr
in
or
xchg
mov
jle
mov
std
sbb
scas
je
push
inc
cltd
shrl
mov
ret
stc
pop
fimuls
out
mov
call
mov
lret
and
pusha
les
xchg
lahf
cmp
xlat
das
outsl
push
out
jne
sbb
pushf
jno
das
mov
pop
xchg
dec
inc
sub
mov
cmp
mov
repz
fldt
mov
hlt
nop
movsl
int
lahf
lock
xchg
jecxz
push
fmull
adc
xchg
pop
ret
cmp
push
ret
lret
aad
ffree
das
sbb
adc
push
adc
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
idivb
jp
pop
jp
lcall
fcompl
int
das
xor
dec
dec
out
push
popf
movsb
insl
lods
data16
jne
jbe
sbb
add
add
mov
cmpsl
imul
fisubrs
arpl
in
sbb
and
ds
jl
lcall
mov
scas
fsubp
adcl
fmull
test
nop
cli
test
add
adc
sub
lock
in
sub
inc
lret
rcll
jbe
inc
into
daa
test
and
pop
adc
inc
in
xor
or
mov
int3
add
mov
lods
es
shrl
mov
negl
xor
cmp
dec
sub
test
nop
lret
shlb
adc
add
rcr
fyl2x
and
subb
pop
test
xor
cld
mov
mov
adc
sarb
xchg
or
lds
xchg
jbe
push
in
xor
mov
jns
lea
jl
popa
shrl
push
clc
jo
pop
or
dec
push
xchg
scas
mov
lahf
mov
out
cmp
xor
test
imul
or
dec
xor
sub
aad
or
add
mov
je
mov
sub
sbb
pushf
sub
dec
imul
mov
and
cld
mov
jns
inc
mov
addb
push
ror
clc
ljmp
push
push
sub
xchg
stc
xor
cmp
lcall
fdivrp
adc
xchg
push
ficoms
push
andb
into
cmp
rcrb
pop
xor
idiv
cwtl
push
sbb
xchg
xchg
push
mov
mov
out
add
imul
cs
add
out
sub
pop
inc
cmp
cmp
out
mov
xchg
das
jp
mov
xchg
jns
lock
arpl
out
movsb
jnp
sbb
movsl
cmp
div
cli
in
and
rcr
out
mov
pop
test
xor
xchg
mov
push
aas
test
das
sbb
jmp
lods
or
xchg
push
stos
sbb
enter
cmpsl
xchg
and
rolb
xchg
inc
bound
mov
ljmp
in
pusha
jg
cmp
das
sahf
lock
pop
neg
imul
and
pop
xor
pusha
or
les
push
scas
and
out
bsr
xor
xor
sbb
add
fwait
mov
lods
ret
test
jle
pop
mov
into
mov
fwait
lcall
xor
inc
and
jns
das
nop
inc
sub
test
adc
shlb
sub
movsb
pop
or
cmp
addr16
sbb
movups
xor
out
inc
das
lret
ror
shll
mov
cli
lret
lods
mov
test
mov
adc
xor
std
cli
rcll
pop
mov
jmp
jbe
mov
inc
ljmp
or
lea
pop
shll
fsubrl
mov
jno
sub
sub
adc
sbb
xor
sbb
jecxz
inc
fldl
ret
mov
in
lcall
test
lret
sub
mov
pop
jg
push
negl
mov
test
push
shr
jb
inc
lcall
arpl
int
adc
lock
or
pop
int
adc
movsl
xor
pop
into
sub
push
pop
clc
mov
fwait
mov
mov
aad
xor
sarb
scas
std
adc
leave
outsb
xlat
push
in
out
and
je
mov
inc
xchg
jle
jmp
in
mov
test
sar
call
xor
into
push
push
and
xchg
out
xchg
xchg
dec
or
sbb
push
shrb
decl
loop
cmp
push
rcll
pop
repz
and
scas
insl
sbb
stc
gs
jmp
cli
add
jns
dec
inc
sbb
ja
in
xchg
neg
jno
jo
mov
mov
xchg
in
add
loopne
sbbb
or
or
mov
out
stc
jo
cltd
mov
push
adc
pusha
push
in
cmpsl
out
test
xchg
lea
icebp
popf
bnd
mov
sub
or
jnp
imul
out
jmp
aam
roll
dec
bound
mov
stos
mov
lds
dec
unpckhps
fildl
outsl
push
jg
scas
cld
insb
xchg
push
xor
mov
lea
xchg
adc
jl
movsl
cmpsl
loope
je
test
insb
iret
inc
and
je
mov
pop
cmpsb
mov
aam
push
repnz
xorl
out
aam
mov
sbb
jp
pop
sub
jge
aaa
addr16
test
ljmp
xchg
cmp
or
or
aad
cmp
xor
mov
push
cmp
sti
or
aaa
shll
dec
ja
xchg
shll
aam
scas
je
jecxz
push
lods
or
in
xor
or
xchg
mov
pusha
add
pop
loop
xchg
jbe
bound
jp
jo
movsb
outsl
xchg
nop
lret
push
rcll
aam
lahf
outsb
sbb
adc
xchg
mov
mov
popf
jo
cld
jbe
dec
es
cmp
jmp
adcl
das
mov
jge
sbb
imul
sbb
das
popf
xor
data16
addb
test
cmc
add
mov
ds
mov
mov
push
pop
imul
add
jecxz
gs
loop
shll
pusha
dec
int
stc
push
insb
dec
mov
inc
mov
rolb
adc
mov
icebp
shlb
mov
sub
sub
push
sub
jns
cmpsl
jae
stc
popf
xchg
cmp
out
cmp
push
div
dec
mov
lret
repz
addr16
loopne
mov
dec
xor
sbb
outsl
cwtl
in
xchg
push
cvtps2pi
rorb
dec
ljmp
push
add
jb
pop
jb
pusha
sub
loopne
inc
fcmovnu
sbb
push
imul
mov
or
mov
jnp
addl
cmp
js
lahf
cmc
mov
loope
mov
pushf
jle
xor
mov
cmp
lret
fistps
push
ja
pop
xorl
push
aam
aas
xor
dec
pushf
xlat
popf
scas
or
xor
arpl
std
test
mov
and
add
inc
lret
ret
jmp
sbb
lock
scas
jns
pusha
ficomps
imul
mov
xchg
hlt
inc
and
sbb
in
cltd
or
jbe
adc
mov
lods
mov
rcl
test
loope
mov
aas
or
imul
add
mov
and
inc
daa
imulb
push
roll
orl
call
mov
jg
mov
aad
xchg
cmpsl
jo
inc
cmp
imul
lcall
mov
jg
stos
pop
js
pushl
inc
cmp
int
jo
dec
sahf
sub
jb
stc
stc
jl
xor
push
push
mov
dec
movsb
pop
jle
rcrl
les
lret
xorl
ficompl
out
mov
cmp
addr16
in
sbb
add
rorb
ljmp
cmc
int
das
imul
scas
ja
cld
shl
shlb
dec
jg
test
sub
or
mov
pop
imul
aas
xor
sub
orb
xchg
xlat
roll
in
dec
pop
and
std
pop
addb
add
pop
add
rorl
pop
adc
daa
sbb
fldl
bound
adc
gs
lock
test
filds
or
xchg
mov
out
js
mov
or
and
xlat
lods
js
ret
lods
sbb
ret
pop
fimull
stc
in
repz
inc
jmp
mov
and
into
mov
movsl
dec
inc
xchg
leave
adc
adc
or
and
mov
rcrl
ror
shll
or
pop
call
imul
aaa
jge
bswap
in
sub
dec
xchg
mov
cld
outsl
aaa
outsl
inc
xor
push
fstpl
lcall
dec
xchg
int
scas
shll
push
pop
xchg
fsts
dec
xchg
or
scas
les
nop
mov
cmp
lahf
sub
or
xor
and
inc
sub
int
mov
pop
mov
data16
pusha
fistpl
cmpsb
add
inc
mov
mov
je
test
or
hlt
cmp
aam
fistps
adc
xchg
pop
push
mov
in
jbe
clc
add
pop
pop
and
or
cwtl
jge
xchg
push
leave
cwtl
ja
js
dec
adc
or
and
adc
pop
testl
push
js
lods
js
jp
inc
call
pop
sub
xchg
frstor
push
mov
std
sbb
adc
es
mov
xchg
fimull
jg
test
sub
xlat
sti
jecxz
cmpsl
lods
fdiv
mov
das
bound
add
add
stos
sahf
test
sbb
xchg
arpl
jmp
and
cwtl
sub
test
sti
mov
dec
jmp
gs
rcr
out
adc
dec
sub
mov
popf
in
loope
jle
and
cmp
imul
int3
stos
call
xchg
adc
inc
xchg
test
int
lcall
mulb
push
sub
push
xlat
adc
fdivrs
xchg
scas
adc
out
out
mov
movsb
mulb
stos
sbbb
sub
ret
jbe
pop
sub
sub
enter
out
push
cwtl
xchg
shll
mov
add
cmp
test
dec
out
mov
or
addr16
pop
int
and
mov
pop
jp
sub
sbb
push
inc
push
pop
lea
dec
out
or
xchg
test
xchg
push
pop
repnz
mov
lret
mov
cmpsb
lock
lds
movsl
sbb
jg
lahf
cli
pop
push
inc
adc
and
fisubrl
jl
sub
nop
or
inc
lahf
stos
push
jl
mov
pop
dec
scas
sub
add
nop
xchg
fcompl
adc
sub
dec
mov
lahf
mov
fadds
popf
fscale
xchg
out
jnp
xor
xchg
addr16
ret
mov
jbe
imul
stc
xor
clc
adc
gs
roll
jecxz
and
imul
pop
mov
notb
mov
inc
pop
idivl
cltd
sub
ljmp
or
adc
jmp
shlb
stos
pop
mov
leave
xchg
lret
jns
sub
daa
ss
dec
cmp
insl
fdecstp
rcrl
or
cld
aas
pop
rcrl
mov
fwait
cli
sub
sbb
nop
dec
dec
xchg
sbb
scas
iret
mov
cmp
stos
mov
enter
xchg
cmp
push
xchg
gs
push
jbe
xchg
out
cmp
clc
dec
mov
arpl
adc
lret
xor
sub
js
mov
into
and
insl
jp
out
jo
cs
push
push
imul
aas
xchg
xor
sbb
sti
pusha
orb
mov
mov
scas
cmp
mov
or
cmp
mov
or
jecxz
in
sub
bound
push
sub
cmpsb
es
mov
sub
pop
sbb
inc
cli
aam
or
mov
movb
cmpsl
cmp
iret
js
dec
xor
jb
aam
repnz
loope
std
addb
jp
loopne
mov
rclb
xchg
iret
sarl
dec
mov
les
lea
fsub
xchg
push
stos
cmc
cltd
sub
pop
movsb
xorl
xor
bound
cmpsl
lret
dec
jno
dec
ds
cwtl
rcll
in
cmp
insl
mov
mov
mov
cmp
mov
into
sbb
ds
sahf
sahf
cmp
in
mov
jg
push
xchg
xor
cmpsl
cmpsl
xor
lock
adc
inc
inc
popf
push
loop
or
call
idivl
jbe
push
lret
push
fnstsw
rorb
xchg
jmp
pop
push
adc
mov
mov
pop
xlat
mov
shrl
add
sbb
mov
mov
mov
xchg
pop
xchg
mov
sub
gs
jo
push
and
movsb
push
jns
sub
sbb
je
outsl
stos
mov
mov
insl
in
aam
sbb
loope
xor
mov
imul
leave
xchg
daa
sbb
daa
iret
jecxz
inc
mov
cs
test
dec
lock
into
dec
or
scas
imul
aas
push
pop
cs
push
cmp
inc
loope
popa
fsubl
std
adc
and
test
aad
divl
jl
inc
int3
enter
xlat
jae
aas
sahf
aam
xor
movsb
jge
icebp
in
jle
xchg
cmp
imul
sbb
filds
jg
and
insb
icebp
sbbl
mov
outsl
mov
seto
xor
dec
sahf
js
out
das
lcall
dec
lods
dec
cmp
inc
loopne
rol
xor
jb
scas
rclb
sbb
and
xor
push
xor
xor
push
pop
sbb
addb
xor
cmpsl
push
xor
adc
or
mov
mov
stos
add
adc
jg
cltd
mov
aam
jb
or
xor
xlat
clc
dec
imul
stos
shrl
sbbb
pop
push
ja
rorb
lcall
lret
pop
loop
mov
loope
push
adc
mov
push
cmp
test
add
clc
xor
mov
add
gs
xor
loop
xchg
mov
pop
frstor
cmpsl
push
int3
lcall
add
icebp
push
inc
gs
test
xor
dec
pop
int
cld
in
imul
nop
into
add
sub
mov
in
jp
xor
xchg
lods
xor
repnz
sub
cmp
add
mov
ret
lcall
xchg
scas
pusha
daa
adc
mov
mov
xchg
xor
mov
call
das
lods
or
or
loop
mov
push
jb
scas
shl
mov
pop
dec
mov
push
sar
or
lods
js
jmp
mov
sahf
pop
cmp
mov
xor
dec
bound
lea
shll
test
and
adc
rcrb
xor
test
pop
and
ss
sarb
push
adc
fidivrs
sbb
cmp
dec
ficomps
pushf
fmuls
loop
and
notb
inc
int
loopne
call
sub
test
pop
xchg
movsb
loop
or
shrb
push
lock
ret
push
lahf
or
outsb
mov
ret
sbb
lret
push
and
hlt
adc
adc
jae
fsubs
fldt
movsb
cmp
in
nop
aaa
cmp
xor
sub
sarl
arpl
mov
dec
lahf
mov
mov
pop
shll
sbb
sbb
or
arpl
ljmp
sub
and
loopne
cmp
stos
mov
mov
jge
inc
ret
dec
push
jae
stos
scas
cltd
mov
xchg
mov
sbb
or
jl
xchg
aam
insb
xchg
or
sub
mov
mov
mov
clc
adc
inc
dec
test
push
push
mov
sbb
jp
filds
movsl
sub
pop
jp
mov
movb
stos
jle
iret
aad
insl
mov
ja
lock
popa
mov
push
mov
xor
lcall
aas
test
jp
mov
ds
scas
lea
xor
mov
int
jge
add
fistpl
mov
loope
dec
enter
sbb
mov
mov
sub
cs
xor
xor
roll
adc
dec
sbb
push
mov
cmp
hlt
ret
add
pop
enter
movsb
add
sbb
cld
rcl
or
das
dec
pop
mov
push
mov
mov
mov
ljmp
fildll
jge
push
push
and
cmp
cmpsl
cmp
jg
loop
mov
inc
movsl
bound
jg
sbb
cmpl
pop
sbb
mov
dec
lock
aas
push
scas
dec
pop
push
xlat
xor
in
rorb
xor
js
xchg
pop
mov
imul
pusha
cmp
xor
or
outsb
rcll
cmp
xchg
mov
mov
popa
or
lea
cmp
xor
imul
pusha
mov
jno
or
out
sti
addb
out
adc
movsb
xchg
jo
jns
repnz
dec
scas
pusha
ljmp
sbb
adc
cmpsb
jl
cmp
mov
call
cmp
in
jns
adc
mov
fldl
decb
jle
jo
dec
pushf
adc
push
mov
xchg
xor
stos
push
mov
add
cltd
loop
ljmp
daa
mov
ss
pushf
outsl
cwtl
shll
mov
test
bnd
insl
dec
xlat
fldl
add
push
mov
dec
or
sbb
sub
inc
daa
push
out
call
repnz
lret
mov
lods
idivl
test
shll
lea
dec
sub
and
loope
add
fs
inc
rol
jecxz
mov
or
icebp
inc
int3
sub
lea
sbb
mov
adc
xor
aaa
std
lods
dec
or
cmp
cmp
daa
sbb
fildl
inc
lods
cmp
cmpsl
loope
rclb
pop
fisubs
imul
cmp
pop
pusha
cmp
xchg
dec
inc
push
jnp
pop
int
or
mov
das
mov
push
mov
jg
movsb
push
mov
mov
scas
xchg
xorl
roll
into
js
dec
and
jo
dec
dec
popa
lea
jbe
pop
fcoml
jae
fstl
and
and
lods
jns
js
and
loopne
sub
jl
mov
and
mov
add
xchg
xor
jp
add
xchg
clc
aas
shrl
pusha
xor
scas
mov
mov
icebp
stos
rorl
dec
pop
sbb
rorl
adc
call
call
mov
push
int3
subb
add
icebp
imul
xchg
jbe
pop
popa
sub
rol
jmp
in
cmp
jnp
mov
divl
mov
std
cmpsb
iret
ljmp
add
dec
push
dec
dec
cli
in
cltd
mov
mov
or
and
addr16
xor
scas
push
push
jl
jne
mov
add
push
lea
or
jp
pop
int
or
pop
rorl
lret
xor
pop
stos
dec
je
int
enter
test
shl
jge
dec
lods
sub
adc
dec
nop
rclb
push
cmpsl
mov
add
inc
and
xchg
xor
cmp
inc
inc
jecxz
mov
cmp
push
fistps
aad
mov
or
adc
cwtl
mov
cmp
ss
add
jbe
imul
cmp
or
adc
sub
jp
mov
pop
and
inc
repnz
ljmp
inc
pop
hlt
sub
dec
mov
cmpsl
mov
out
cld
stos
adc
dec
in
pusha
or
mov
jg
mov
dec
fnsave
and
insb
adc
cwtl
mov
cmp
lret
test
enter
cmc
mov
cmp
test
dec
jle
adc
out
cli
push
add
js
lea
push
out
jnp
mov
jg
jge
fistpl
jl
mov
xchg
out
imul
xor
cmp
enter
xchg
xchg
mov
inc
push
xchg
add
pop
pop
gs
mov
ja
sub
mov
jns
popa
jno
aas
mov
push
and
imul
or
int
cli
xor
push
mov
adc
mov
jge
push
and
adc
pop
mov
mov
or
pop
jl
xor
push
inc
popa
adc
or
xchg
or
or
in
dec
lds
call
hlt
and
push
movsb
push
or
test
dec
leave
sub
int3
test
gs
daa
in
push
mov
int3
sub
jno
dec
xor
hlt
or
pop
std
cmpsl
test
add
jg
push
in
ljmp
in
jae
clc
add
es
fisubs
mov
out
xchg
jmp
fsts
scas
xchg
add
fnsave
mov
mov
fisttps
xor
jns
lods
cld
shr
ret
sub
and
pop
or
sbb
mov
test
jmp
shrb
inc
sub
dec
sbb
mov
dec
jns
jb
add
push
ret
addr16
mov
or
inc
push
mov
push
xor
leave
mov
icebp
pusha
dec
dec
sbb
pop
dec
xchg
insl
cmp
popa
fcmovnu
data16
jo
lret
aam
pop
push
mov
test
adcb
pop
push
push
push
subb
sub
xchg
cmp
dec
clc
aam
or
jle
cmp
cmp
push
mov
xor
mov
xchg
pop
cmp
jb
push
push
fiadds
mov
movsl
dec
imul
notl
dec
fmuls
xor
repz
loop
mov
cmp
jb
and
mov
mov
or
movsb
js
jp
jp
mov
daa
xchg
cwtl
mov
xchg
test
rolb
lea
icebp
adc
gs
xchg
mov
mov
and
mov
mov
test
xor
scas
mov
jmp
in
sub
arpl
lea
mov
cmp
pop
push
sahf
cwtl
in
in
daa
test
and
pop
push
jg
mov
mov
xor
xchg
push
and
xor
mov
sub
push
push
cld
xor
stc
pop
adc
mov
xchg
aaa
sbb
cmp
cmp
aam
je
das
sahf
sub
cs
insb
and
aas
mov
jae
cmpb
push
ret
mov
fwait
or
pusha
aad
das
inc
in
mov
xchg
add
xchg
mov
and
cmp
lret
mov
push
push
mov
push
loopne
int
loope
jg
scas
gs
xchg
mov
popf
in
movsb
sub
hlt
xchg
fdecstp
data16
mov
cmpsb
mov
mov
push
std
lods
xchg
es
push
pop
sub
lret
xorb
mov
out
mov
cmp
je
lret
add
nop
inc
test
or
rclb
xchg
dec
aam
jnp
sti
jno
add
loopnew
sub
sahf
lahf
inc
push
dec
mov
outsl
push
ds
out
mov
and
mov
in
jecxz
js
inc
pop
jne
push
int
je
cmp
push
je
push
dec
fisubl
mov
dec
mov
cmp
push
pop
adc
scas
jmp
daa
dec
sub
sar
popf
jg
pusha
mov
cmp
hlt
repz
fsubrl
pop
push
test
and
xchg
out
test
daa
cli
adc
push
pushf
mov
loopne
xor
mov
int
mov
das
adc
arpl
xor
shll
testl
push
pop
push
sub
addb
sub
cmp
les
mov
adc
push
sar
cltd
dec
push
repz
enter
mov
std
sbb
js
rol
movsl
fdivr
cmpl
inc
loope
sar
daa
xor
add
out
or
sub
andl
xlat
cld
ja
int
inc
sti
in
leave
mov
lods
pop
mov
push
push
cmp
pop
cmp
mov
jne
mov
jns
outsl
ret
stos
xchg
adc
pop
push
mov
cmpsl
pop
add
xor
xchg
pop
xchg
in
mov
test
inc
fs
push
imul
push
and
xchg
int
mov
fs
cltd
sub
mov
mov
push
nop
xor
jb
ficomps
lahf
xchg
mov
mov
daa
xchg
test
pop
aaa
repz
or
js
fstps
inc
lods
das
xchg
pusha
mov
or
push
sub
add
out
cmp
pop
xchg
fsubs
rorb
inc
mov
aam
lds
divb
pop
jg
outsl
push
dec
imul
cmpsl
or
and
daa
aam
mov
dec
mov
es
lds
enter
repz
add
xor
jbe,pn
ljmp
or
es
inc
shr
andl
cmpl
or
rcrb
xchg
and
jecxz
fs
icebp
inc
ret
pop
and
jg
jb
adc
xchg
clc
jb
adc
xchg
aaa
mov
int3
fcmovnbe
insl
pop
movsb
fcompl
mov
shlb
int3
jne
push
pop
dec
popa
sbb
sar
xorb
xchg
ss
inc
inc
push
sbb
dec
popa
js
mov
pop
loope
sub
xchg
in
cmc
repz
aad
adc
cmpsb
in
xchg
mov
mov
loop
dec
mov
rcr
inc
add
cmpsl
in
loopne
lea
push
ss
call
add
test
pop
sub
adc
popa
mov
cmp
xor
mov
insb
jge
inc
decl
lahf
out
ja
push
es
shlb
imul
jbe
in
mov
adc
popf
xlat
sub
les
pop
fsqrt
mull
enter
xchg
xchg
ja
leave
xor
mov
mov
pusha
test
xor
gs
xlat
pop
ss
jp
stc
sub
mov
push
out
lea
je
mov
insb
mov
sti
jmp
adc
adc
or
push
push
add
push
imul
push
std
add
pop
in
and
stos
int3
xchg
sbb
roll
fstps
mov
cltd
sbb
sti
inc
pop
mov
jb
or
pop
xchg
sub
bnd
add
icebp
aad
mov
push
movsl
es
jge
fstl
mov
adc
mov
cmpsb
in
dec
inc
xchg
cmp
outsb
pop
mov
pop
cmp
xchg
inc
or
inc
pop
dec
enter
jl
xor
push
lret
push
and
dec
jp
vmptrld
out
pop
pusha
push
adc
cltd
cwtl
push
add
imull
pop
out
pusha
sarl
loopne
xor
stc
sarl
and
lods
mov
cmp
pop
sbb
sub
aas
pop
add
and
lret
jmp
sbb
push
int3
shrl
xor
adc
xor
shrl
fimull
and
loopne
in
or
leave
insb
repnz
inc
cmp
push
subl
pop
mov
lds
mov
popa
add
cmpsl
jle
js
xchg
mov
dec
test
aas
dec
cmp
xchg
bound
movsb
xchg
popf
andb
subl
add
dec
test
or
sbbl
stos
addr16
je
subl
das
int3
outsb
scas
fcomi
sbb
scas
lea
cmp
daa
sar
or
dec
xchg
adc
sub
jl
add
pushf
jmp
hlt
push
shrl
jl
fcmovb
jbe
scas
dec
or
pushf
mov
pop
fmuls
outsl
xchg
mov
jmp
pop
scas
stos
sarl
scas
dec
mov
cmp
pushf
jle
xchg
sub
adc
xchg
mov
cmp
gs
les
or
popa
sbb
xchg
push
sub
lcall
or
sbb
dec
dec
add
jmp
in
sub
or
loopne
push
jae
outsb
sbb
sbb
test
add
repz
data16
jge
jg
mov
test
push
sbbl
test
fldenv
cmp
mov
fisttpl
jmp
les
loop
aam
pushf
pop
lock
stos
push
xchg
cmp
ror
or
into
add
mov
in
test
sub
inc
daa
push
add
push
jl
mov
movb
imul
and
sbbb
xor
loope
jge
mov
push
fdiv
add
pop
adc
fs
nop
pop
pop
sub
lret
mov
sarb
in
push
cmpsl
sbb
cmp
xchg
ret
push
scas
rcrl
dec
dec
int
sbb
add
addr16
dec
dec
xchg
xor
rcrb
sbb
inc
add
repnz
jmp
and
aas
sbb
aam
sbbb
mov
call
mov
in
data16
shll
adc
inc
dec
int3
xchg
lea
add
iret
movsl
testb
dec
or
xor
nop
and
mov
push
mov
add
pop
cmpb
mov
jl
pop
lock
mov
sub
aas
mov
aaa
mov
cmc
push
sbb
fsubs
xchg
and
int3
add
pop
leave
pop
out
push
fucomp
fsubp
je
cld
aaa
dec
jns
mov
push
mov
outsb
adc
inc
rcll
out
ret
ljmp
or
mov
inc
jnp
and
xchg
cltd
dec
rcrb
xchg
sbb
mov
jle
ja
mov
sbb
popf
fidivs
fistl
mov
aas
ljmp
mov
nop
es
sbb
call
mov
pop
xchg
adc
sahf
stc
out
imul
mov
mov
loopne
dec
lahf
sub
aam
hlt
lret
jae
aaa
loope
inc
jmp
jno
mov
mov
roll
xlat
sbb
hlt
imul
inc
jmp
aam
push
in
int
inc
jbe
or
pop
fwait
adc
dec
push
sub
pushf
shlb
pop
xor
pop
aad
jge,pn
adc
cmp
loope
mov
lock
sbb
pop
or
mov
jbe
xlat
sbb
add
jle
lods
mov
and
pop
inc
rcrb
dec
lcall
movsb
dec
cmpsb
dec
fisttpll
repnz
adc
pushf
sub
cmp
jl
pop
or
mov
insl
imul
insl
xchg
mov
jns
push
fistpl
daa
addl
mov
jecxz
inc
out
push
xchg
inc
xchg
xor
mov
bound
push
dec
fldt
in
add
mov
sahf
fbld
mov
rol
test
and
pop
xchg
repnz
xor
pushf
mov
out
jb
fdivr
pop
ss
outsb
stos
cmp
insb
aaa
xchg
pop
dec
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
enter
lcall
jp
jo
sarl
pop
adc
fnstenv
aaa
add
mov
cmp
sub
adc
push
lret
mov
jbe
add
cltd
fsts
bnd
xor
jnp
loop
pop
mov
arpl
sub
pop
arpl
outsb
mov
in
dec
adc
add
jbe
insb
loope
push
and
push
outsl
jbe
pop
fldcw
add
pusha
add
call
add
nop
jmp
or
cld
and
lods
das
in
cmp
iret
push
aaa
sti
decl
in
or
lods
inc
je
popf
mov
xchg
adc
cmp
xchg
fs
lahf
sbb
mov
mull
add
adc
inc
ret
rclb
icebp
jp
or
daa
in
shr
pop
mov
loope
lahf
dec
xchg
pop
pop
push
mov
pop
cmp
mov
xor
xchg
or
int3
and
or
dec
fsts
mov
sub
mov
mov
cmp
add
icebp
mov
and
je
arpl
mov
aam
in
lods
push
int
xchg
dec
outsl
ljmp
pushf
aaa
dec
sub
jp
xor
and
jns
out
add
fcompl
and
aam
mov
sub
pusha
arpl
inc
sub
jmp
out
push
pop
sbb
cmp
cmpsb
aas
sub
hlt
mov
orl
push
leave
mov
aaa
pop
lds
das
lcall
daa
dec
mov
jle
mov
mov
sbb
pushf
inc
repnz
loope
add
dec
scas
out
sub
mov
dec
or
xor
das
sahf
mov
and
mov
loop
lret
loopne
cmp
inc
mov
jne
stc
dec
push
pop
aad
aaa
icebp
inc
add
sti
dec
mov
adc
fiaddl
shl
or
xchg
jnp
or
push
and
dec
js
mov
add
ljmp
pop
gs
jmp
xchg
pop
insb
aas
xchg
push
jecxz
jbe
push
scas
out
pushf
rcrl
xor
fidivrl
add
je
jo
scas
xor
cltd
push
xor
mov
push
aam
adc
xchg
aad
adc
and
fdivr
add
addl
cmp
inc
sub
jl
ds
add
inc
pusha
xchg
and
mov
dec
and
mov
cmp
or
mov
dec
xchg
mov
in
and
pop
jg
ljmp
inc
daa
movsl
loope
inc
arpl
cwtl
pusha
push
mov
adc
roll
cmp
add
mov
pop
sbb
xchg
xchg
sahf
mov
jno
sbb
lret
enter
lods
inc
rolb
lods
push
adcb
cmpsb
cmpsl
adc
sahf
jp
test
xor
imul
das
mov
fiaddl
repz
test
pop
sub
cmpb
or
lsl
hlt
jecxz
cmp
add
mov
test
and
fdivs
loope
dec
inc
in
sbb
sti
cmp
pop
xor
icebp
xchg
pop
xchg
push
fs
push
sub
outsb
cmpb
repz
mov
dec
mov
loop
cmpsb
add
and
add
pop
jge
push
arpl
aaa
clc
xor
lods
jb
fsts
out
sbb
push
mov
add
ss
xor
mov
scas
repz
fwait
enter
xlat
repz
add
sub
sbb
pusha
adc
enter
fsubl
sbb
adc
push
aad
out
push
sbb
mov
js
push
adc
push
mov
and
mov
inc
fidivs
test
test
loop
pop
push
imulb
jnp
sbb
or
lret
in
xor
les
cmpsb
push
jmp
clc
addr16
add
lods
iret
xchg
loope
add
icebp
mov
data16
lock
pop
sub
mov
pop
hlt
fnstcw
bound
jmp
aaa
or
cs
sub
ljmp
hlt
cld
xor
mov
andb
rclb
dec
pop
mov
and
jns
pop
mov
push
jns
mov
andl
icebp
mov
mov
lds
scas
and
xor
push
xchg
mov
jo
loopne
pop
push
dec
push
hlt
xor
push
pop
movsl
cmp
and
cs
ljmp
jl
pusha
sub
in
aaa
int
cs
jbe
enter
pop
imull
add
adc
fstp
push
sub
mov
movsl
lcall
inc
pop
pushf
xchg
fsubrs
add
mul
pop
xor
fmuls
push
gs
aas
jb
loop
loop
and
push
movsb
test
adc
and
sbb
mul
mov
lods
cs
mov
sahf
imul
mov
imulb
mov
js
std
movb
sbb
add
shlb
mov
fnsave
jmp
cmp
cmpsl
mov
sub
divl
cmc
out
icebp
mov
fistps
cmp
mov
bound
fwait
push
xchg
add
testb
fnsave
mov
mov
xchg
mov
or
mov
push
mov
inc
stc
test
mov
test
in
out
jne
loopne
mov
mov
loope
sbb
popa
cmpsb
xchg
decb
xlat
pop
arpl
push
lods
cmc
push
dec
push
lcall
pushf
insl
fisubs
dec
scas
xchg
cli
repnz
mov
cmpb
mov
dec
sar
enter
popf
sub
out
cmc
and
test
mov
adc
adc
or
xlat
push
mov
fs
dec
xor
cli
mov
in
sbb
xor
push
adc
sbb
mov
sbb
das
dec
cli
stos
pop
push
xchg
rorl
stos
push
in
outsl
subl
pop
shll
jnp
jae
jl
xor
mov
dec
add
int3
xchg
push
lret
cli
clc
sub
and
inc
insb
add
xchg
iret
add
outsb
cmp
mov
test
aam
sbb
sub
test
dec
mov
add
sub
cmp
or
bswap
outsb
adc
ficoms
ret
sub
dec
pop
aaa
add
mov
ret
in
arpl
xor
lods
sar
xorb
sub
lock
push
push
out
sti
test
mov
mov
int3
repnz
push
add
in
add
std
sti
mov
sbb
sarb
cmpl
push
sub
lret
fs
loope
xchg
mov
jge
shlb
lahf
addr16
daa
mov
lds
xchg
lock
jae
adc
add
inc
dec
ret
hlt
aas
daa
loopne
int
es
test
xlat
push
jo
imul
iret
xchg
jmp
mov
add
add
push
and
pop
jno
pop
push
pop
xchg
adcl
ljmp
fcmovu
cmp
jmp
icebp
push
xchg
test
mov
cmpsb
push
hlt
nop
sahf
lds
pushf
add
addr16
mov
mov
ret
es
scas
and
int3
jmp
mov
cwtl
jp
outsb
je
pop
push
jns
bound
imul
movsb
insb
jl
ja
mov
sub
mov
shll
pop
mov
sbb
in
add
pop
call
sti
popf
adc
mov
xchg
push
jae
sub
fcomps
jge
lods
or
outsl
fiaddl
loop
mov
faddl
push
notb
push
call
sub
arpl
sub
rol
pop
sub
mov
mov
adc
xor
add
shr
xor
jg
cmp
push
mov
decb
sub
lods
xlat
ret
jl
aad
cmpl
pop
iret
mov
iret
cmc
xchg
push
lock
jecxz
jbe
inc
lcall
das
jnp
dec
mov
add
dec
jae
and
mov
daa
mov
in
xchg
inc
add
in
movsb
ja
fs
gs
inc
cmp
leave
imul
std
ds
fnstsw
js
insl
inc
mov
jecxz
ret
push
sahf
push
pop
and
inc
js
inc
ficoms
sub
iret
and
lcall
daa
sub
cmp
ja
lcall
outsl
icebp
push
ror
push
leave
add
lds
xchg
mov
cmpsb
insl
repnz
push
xor
js
pusha
test
cmpb
mov
cmpl
lret
or
dec
pop
mov
jne
mov
xor
in
xchg
mov
in
xchg
dec
xchg
pop
ret
cs
sbbb
jmp
xchg
mov
bound
in
mov
rep
ja
jnp
data16
hlt
stos
bound
jae
shrb
sbb
addl
cmp
jbe
xchg
nop
adc
int
jp
lock
aad
xchg
fdivrs
roll
fisttpl
cmpsb
data16
das
push
arpl
nop
sub
jb
jbe
xorb
mov
mov
repz
push
sbb
or
dec
imul
adc
mov
jp
push
push
ss
mov
test
test
jb
pop
xor
out
xor
sti
or
and
pushf
xlat
repnz
dec
ret
sbb
pop
cltd
and
aam
push
jnp
sub
xchg
jp
pop
add
or
fcomip
push
lcall
bound
mov
hlt
cltd
frstor
pushf
testb
mov
cmp
leave
cmpsb
and
mov
adc
push
pop
lock
add
ds
nop
and
mov
jecxz
or
in
lahf
jns
into
dec
push
ret
add
push
out
pop
sub
push
inc
not
add
test
mov
ret
imul
std
enter
ja
dec
push
int3
shlb
and
aad
push
pushf
jl
cltd
in
jp
enter
mov
imul
jle
fiaddl
test
pop
imul
rclb
jnp
cmc
cld
pop
sub
jno
inc
mov
sub
inc
daa
inc
or
xor
fwait
jmp
in
cmp
scas
fiaddl
or
cmp
or
fisubrs
cmpsb
mov
sub
pop
adcl
mov
sarb
xchg
mov
jne
js
pop
inc
sbb
enter
outsl
rcrl
mov
fildll
fcmovne
clc
enter
adc
mov
dec
pop
dec
or
subb
aam
xor
add
cs
and
ds
sbb
or
int
out
pop
mov
dec
xor
popf
adc
fldenv
dec
movsb
outsl
mov
dec
fisttpll
sub
test
bnd
xchg
adc
fucom
popf
sub
cld
xorb
pusha
aas
not
gs
cmpsb
lods
into
or
test
and
push
xchg
fs
push
pop
pop
xor
das
adcb
xchg
test
or
ja
out
out
testb
test
sbb
ret
jecxz
out
dec
xor
inc
sub
dec
push
jnp
popf
int3
daa
repnz
lods
imul
jns
bound
sub
shl
adc
repz
mov
jns
popa
jp
into
daa
add
or
dec
cmp
xchg
test
ret
repz
leave
adc
xchg
push
sbb
cli
jb
mov
aad
dec
sbb
jb
dec
fidivrs
imul
push
mov
mov
adc
test
gs
mov
fdivrs
insl
nop
aad
shr
mov
and
xlat
pop
lea
cmp
mov
mov
repnz
mov
pop
sub
les
sbb
xor
js
jno
incl
xchg
add
jmp
lods
sbb
mov
enter
add
add
je
data16
dec
xchg
dec
or
insl
mov
jg
mov
repnz
sahf
int
cmp
dec
mov
or
mov
mov
lcall
popa
repnz
mov
cmovbe
ret
stos
inc
add
sahf
or
add
mov
sub
push
ss
rcpps
jae
jge
sbb
cwtl
dec
out
divl
push
xor
addr16
test
cmp
push
cmp
push
xchg
dec
ljmp
adc
aam
imul
or
aaa
dec
scas
dec
cltd
sbbb
mov
pop
jle
call
and
addr16
sbb
or
pushf
add
pushl
sbbb
pop
in
jmp
bound
jl
repz
mov
repz
or
and
and
sub
fstps
std
out
push
jle
push
out
fwait
repz
mov
into
pop
fistpl
dec
or
lret
jg
adc
cltd
movb
push
popf
xchg
mov
insl
and
mov
pop
xchg
mov
roll
jne
xor
mov
add
sahf
iret
cmp
xchg
std
sub
mov
mov
cmp
jb
and
adc
ret
adc
sub
push
sbb
push
test
pusha
sahf
push
adc
mov
mov
orb
call
inc
xchg
aas
rorl
pop
cmp
ret
push
mov
push
push
add
pop
jge
arpl
lods
sar
stos
movsb
or
fimuls
leave
push
sub
xor
sub
pop
mov
leave
mov
or
jl
out
shlb
popl
sbb
outsl
xor
mov
sub
inc
rorl
adcl
xchg
push
pop
inc
clc
jnp
mov
mov
xchg
mov
jnp
out
addr16
xor
inc
out
cs
je
xchg
data16
jnp
mov
jnp
cmp
adc
cmp
leave
cmp
xlat
iret
out
pusha
das
shl
cltd
stos
adc
test
dec
ss
cmp
pop
mov
jmp
imul
int
sub
cmp
ljmp
and
inc
sub
gs
sub
nop
adc
jecxz
lods
scas
inc
std
xchg
inc
push
call
hlt
rcll
xor
ja
fldl
and
fbld
inc
int
adc
in
cs
addr16
bound
xchg
sbb
pop
and
jmp
mov
add
movsb
pop
add
mov
pusha
pop
mov
aaa
dec
popa
pop
scas
xorl
rcr
and
xor
inc
adc
push
ficompl
mov
sbb
sbb
stos
cmp
mov
inc
jl
jp
test
or
jb
andl
jnp
pop
inc
sbb
push
cs
adc
aaa
cmp
sbb
adc
sar
dec
pop
pop
repz
call
mov
push
iret
dec
pusha
imul
sti
xor
jo
mov
outsb
adc
mov
adc
dec
into
xchg
fistl
cmp
xor
lret
add
movsb
nop
mov
mov
adc
push
inc
outsl
jbe
bound
push
pop
jo
adc
pop
repnz
mov
mov
and
enter
ljmp
mov
mov
fistpll
add
dec
ret
mov
in
insb
insl
inc
push
dec
inc
jg
pusha
adc
arpl
and
mov
push
ja
mov
out
loopne
and
imul
cmpsl
jp
mov
adc
fcoms
add
clc
std
cmpsl
mov
xorl
out
adc
popa
adc
or
arpl
popa
lret
adc
lock
in
pop
testl
sbbb
out
dec
inc
push
xchg
mov
xor
in
and
sahf
fs
jno
mov
notb
icebp
inc
loop
dec
lds
aam
je
xchg
adc
fildll
lods
sub
push
or
push
or
or
in
outsl
ret
cmp
xor
dec
cmp
jl
adc
aad
notb
je
xchg
in
nop
in
sub
inc
mov
inc
orb
popa
jne
mov
int3
sub
inc
popa
adc
icebp
test
stos
test
or
pop
sbb
les
push
jnp
dec
pop
mov
jmp
enter
pop
mov
outsb
mov
lret
mov
in
dec
ret
je
mov
mov
sub
mov
mov
cmpsl
cltd
and
loopne
sti
and
pop
mov
pop
stos
mov
icebp
outsl
cmp
imul
fcomps
mov
std
sub
lret
cli
jge
xor
insl
test
inc
push
scas
or
in
into
insb
push
repz
aam
cwtl
mov
leave
outsb
mov
hlt
pop
stos
xchg
sbbb
sahf
mov
in
adc
arpl
cmc
lock
loop
cltd
jmp
sbb
in
mov
inc
adc
and
xor
lcall
fcoml
and
mov
xchg
stc
adc
ficoms
daa
out
adc
cmc
lret
inc
jl
aas
std
jmp
shll
jmp
insb
mov
iret
cwtl
in
adc
xchg
leave
mov
push
or
addr16
mov
arpl
inc
std
push
inc
xchg
cmp
data16
cmpsl
sbb
cmp
push
movsl
xor
xchg
sub
ss
shlb
pop
cmp
cmp
in
out
xchg
out
adc
jg
mov
mov
daa
cli
xlat
pushf
clc
neg
stos
push
sub
xor
mov
int3
pop
sub
outsb
pop
sbb
inc
mov
mov
pushf
jbe
push
mov
push
inc
mov
rclb
aaa
jo
sub
add
out
jne
cmpsb
xor
mov
or
inc
stos
and
push
push
or
ljmp
xchg
mov
scas
das
mov
jge
and
out
out
les
insl
or
stos
call
mov
xchg
inc
push
mov
addb
jnp
mov
pushl
arpl
in
pop
lcall
faddl
jle
mov
iret
jbe
cld
fildll
je
in
mov
in
inc
xor
xabort
mov
ret
mov
stc
pop
inc
loope
add
inc
or
pop
inc
mov
add
xor
pop
cmp
or
push
cmp
jne
xchg
mov
ss
xchg
add
inc
out
test
test
cmpsb
in
scas
fsts
sbb
enter
lds
into
adc
inc
xchg
int3
push
les
les
test
cmc
mov
daa
pushf
test
push
jb
js
pop
inc
mov
dec
xor
cmp
mov
div
aas
outsb
into
mov
jg
lahf
lea
xorb
aas
or
cmp
jge
jne
fistpll
jnp
xor
push
cmp
adc
add
xor
dec
jecxz
ja
rcrl
cmp
add
popf
dec
lea
xchg
faddl
into
inc
rcll
or
rolb
dec
adc
sbb
push
loop
push
divb
jg
push
and
xchg
push
mov
es
sbb
mov
mov
mov
and
mov
enter
xor
arpl
and
lcall
ret
dec
movsl
xor
scas
ret
out
stc
cmc
and
cli
push
dec
sbb
cmp
mov
int
fldl
jo
repnz
int3
adc
push
pop
bound
jl
or
add
nop
jbe
leave
or
or
pop
mov
shl
xchg
nop
arpl
les
fidivl
push
push
add
icebp
leave
mov
test
je
push
out
push
mov
pop
and
jnp
nop
push
mov
dec
jo
neg
in
add
sub
jns
fisubl
shl
mov
and
adc
add
mov
adc
jp
push
es
pusha
test
mov
rorb
sub
orb
and
je
push
mov
test
dec
push
xchg
sbb
dec
mov
mov
sub
pop
mov
mov
lcall
sbb
push
mov
cmpb
scas
push
push
dec
cmp
outsb
dec
iret
rcrb
xlat
in
arpl
insb
xchg
mov
and
gs
clc
mov
mov
mov
jge
sahf
and
mov
testb
cmp
arpl
xchg
pop
data16
sbb
mov
push
bound
inc
shr
push
enter
nop
pop
push
mov
jb
adc
jp
inc
mov
push
sbb
push
pusha
aad
mov
mov
pusha
dec
aas
cltd
jns
jbe
mov
out
in
nop
jnp
and
cmp
clc
test
push
sbb
push
mov
test
xchg
jl
gs
inc
es
je
jmp
jge
sbb
pop
scas
xor
fisubl
push
dec
and
jl
push
jns
imul
ds
test
or
cltd
adc
push
inc
nop
in
repz
repnz
mov
addr16
ficoms
enter
add
inc
mov
push
insl
mov
fwait
pop
scas
and
and
rclb
mov
ljmp
movsl
sbb
popa
sbb
dec
enter
add
jecxz
mov
das
clc
adc
cwtl
xor
bound
test
inc
aam
add
xchg
xchg
fisubs
xchg
cmp
hlt
mov
jnp
adc
adc
inc
cwtl
add
aaa
loop
ss
jno
aaa
jbe
leave
or
adcb
popf
mov
adc
adc
push
neg
ds
cmp
and
and
pop
xchg
aaa
aam
fldt
mov
mov
inc
clc
adc
push
pop
andb
cs
xor
insl
std
or
jle
or
mov
jp
das
or
xchg
sub
dec
into
jb
xor
sub
popa
clc
fnsave
xor
leave
push
nop
popf
pop
stos
inc
push
sbb
inc
add
dec
out
pop
sbb
aad
xchg
jle
daa
stos
mov
inc
iret
popf
xchg
and
cmpsl
dec
dec
add
pop
stc
push
aaa
xchg
in
repz
push
add
or
sub
xor
and
out
ficoms
dec
jns
fxch
inc
outsb
mov
ret
pop
or
inc
add
pop
pop
jns
lcall
fwait
mov
test
sub
clc
push
mov
jecxz
fdivrs
stos
jecxz
aas
and
lahf
outsl
push
addr16
pop
pop
add
inc
lock
fdivrl
js
repnz
mov
and
test
mov
leave
dec
inc
and
rol
fsubs
sub
add
or
mov
cmp
mov
fisubrs
add
mov
pop
sub
nop
notl
in
mov
cmp
jns
lret
adc
fisttpl
pop
lret
sbb
les
andl
clc
mov
cld
fstpt
fisubrs
fiaddl
and
xchg
inc
ss
in
dec
or
inc
lock
dec
lods
cmp
lods
lods
jnp
xchg
dec
cmpsb
out
cmpsl
sbb
jbe
pop
pop
fldcw
flds
pop
pop
pop
stos
out
or
pop
outsl
aad
cli
int3
fnstcw
ja
fistpll
and
adc
mov
xchg
stos
dec
xlat
repnz
push
inc
sub
jo
dec
rep
mov
adc
and
xchg
arpl
jae
out
mov
sub
push
pop
sub
sbb
and
push
dec
leave
sbbb
daa
xor
xor
mov
adc
mov
push
add
mov
lahf
icebp
and
mov
fsubrl
fidivs
mov
mov
fnsave
pop
jae
inc
lahf
xlat
out
add
jmp
push
scas
in
rcr
hlt
sbb
arpl
adc
rcll
ret
pop
push
nop
pop
out
incb
or
cmc
fdivl
stc
in
push
sbb
popa
jb
mov
pop
pop
push
sti
lock
push
xchg
stc
push
pushf
mov
pop
inc
inc
inc
jns
outsl
shlb
mov
icebp
adc
pop
gs
xor
fisubrl
sub
repz
jbe
daa
lcall
sbb
jmp
sub
pop
mov
add
mov
or
cltd
mov
push
sub
push
divb
mull
pushf
icebp
lcall
dec
es
mov
out
push
xor
xchg
inc
es
xchg
pop
insb
jl
lret
xchg
lock
sub
xchg
jae
roll
mov
mov
push
aaa
ficoms
das
add
ret
xchg
push
loopne
pusha
lret
pop
xchg
into
or
pop
push
and
les
cmp
in
mov
subb
fists
xorl
xor
ljmp
sub
gs
cmp
or
icebp
inc
lea
adc
lahf
or
adc
mov
insb
js
clc
inc
nop
popf
sbb
mov
adc
xchg
icebp
loopne
arpl
ds
cmp
cwtl
sub
pop
out
push
or
pop
cltd
sets
add
aam
movsb
xchg
mov
daa
and
cltd
cmp
xchg
jl
setp
cld
int
cli
push
sub
hlt
jns
xor
test
je
notl
gs
in
inc
out
mov
cmpsb
push
cli
bound
push
pop
aad
data16
dec
test
jmp
xchg
push
lcall
jb
and
mov
mov
lods
jecxz
in
mov
sbb
push
jmp
into
xor
sbb
fstpt
inc
mov
dec
enter
push
mov
sti
lea
and
fsubs
nop
ret
xor
lcall
xchg
pop
jbe
shll
mov
lret
xchg
mov
bswap
jg
push
lret
scas
xchg
insb
mov
mov
pop
xor
inc
call
push
enter
leave
sti
ja
int
dec
cld
daa
add
dec
adc
dec
sbb
lret
cmpsl
test
mov
aaa
adc
shll
mov
jp
push
ror
rclb
lcall
pop
lds
jle
jecxz
aaa
mov
outsb
popw
aas
push
std
xor
in
imulb
xchg
pop
rol
pop
push
das
lods
shll
xchg
mov
scas
adc
loop
pop
gs
decb
cwtl
arpl
dec
or
leave
add
fcom
sbb
push
loopne
stc
rol
test
test
push
pushf
aaa
lods
cmp
pushf
clc
lock
or
rcll
scas
sub
inc
adc
sub
imul
mov
inc
leave
xorl
or
mov
push
dec
mov
add
sub
out
add
sub
inc
and
in
bound
pop
std
clc
cs
push
dec
jmp
jne
mov
cs
in
adc
jno
push
addb
inc
in
push
test
dec
je
scas
sbb
je
out
and
fimull
ds
or
pushf
sbb
xor
cmp
mov
test
ljmp
fwait
sti
data16
xchg
or
mov
and
xchg
loope
mov
jbe
cmpsl
jbe
inc
mov
loop
mov
imul
pop
int3
adc
pop
sahf
hlt
enter
mov
push
xchg
push
xchg
mov
js
aam
rclb
ljmp
push
je
iret
jp
dec
pusha
or
in
jno
lret
test
popa
cwtl
icebp
pop
jge
and
insl
and
rcrl
fisubrl
jmp
ja
fldcw
mov
cmp
and
push
pusha
dec
jnp
adc
cltd
les
mov
sahf
xchg
sbb
dec
xlat
std
sti
dec
mov
jp
iret
mov
dec
cmp
fs
in
push
es
and
adcb
push
adc
or
cltd
jg
lock
flds
mov
add
cmp
das
push
push
out
js
scas
test
xchg
iret
repz
sbb
jne
outsb
pushf
sub
enter
enter
mov
hlt
pop
dec
mov
sbb
in
inc
adc
out
fldenv
sarb
sbb
jns
lock
js
and
adc
push
outsb
jno
xchg
push
sub
inc
fsts
aam
cmovbe
jbe
sub
fbld
sub
cli
fcoms
outsl
xchg
pusha
mov
jmp
xor
inc
and
dec
xchg
cmc
loopne
cmp
pop
lea
test
mov
repnz
pop
imul
dec
dec
xor
mov
mov
jle
in
es
fidivs
int
mov
scas
push
cli
pusha
pusha
popf
ret
xlat
xchg
mov
pop
add
xor
sbb
das
pop
lahf
xchg
xchg
mov
popa
push
mov
xchg
adc
bt
insb
data16
xor
sub
mov
mov
add
xchg
sub
or
enter
push
aaa
cmp
sub
fadds
pop
ljmp
jbe
out
int
inc
add
xor
shlb
mov
in
in
imul
mov
mov
dec
jp
rcrl
and
pop
ret
xchg
test
mov
add
movsl
loop
push
push
xchg
cmp
lret
dec
jmp
cltd
fidivs
cmc
xchg
nopl
or
stos
mov
ja
push
jp
xchg
push
faddl
test
outsb
xor
gs
cltd
ja
cmp
xor
and
aaa
inc
inc
push
leave
cwtl
add
out
push
dec
aas
dec
push
call
fistl
cmp
loope
ds
jecxz
cmp
sub
mov
arpl
cmp
cmpsl
shrl
leave
mov
call
loop
mov
les
xchg
dec
cwtl
pop
push
push
mov
add
xor
lcall
daa
or
sti
mov
cs
jecxz
jb
mov
aad
mov
mov
xchg
jmp
xor
bnd
cmc
adc
xor
jecxz
notb
shl
mov
inc
cld
adc
xchg
mov
fucomip
xchg
mov
and
inc
cmp
popaw
cmc
lahf
mov
testl
and
loope
mov
test
dec
mov
test
inc
or
xor
out
mov
pushf
or
std
xor
and
xchg
outsl
ds
push
jecxz
fs
cmp
adc
and
and
xor
or
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
bound
cmp
jp
pop
jp
mov
cmp
add
jbe
or
cli
in
xchg
les
mov
lock
btc
lcall
iret
int
loopne
push
push
push
mov
adc
sub
call
sbb
notb
or
and
xchg
mov
popf
ljmp
jmp
mov
sub
dec
mov
mov
hlt
inc
imul
mov
mov
cmpsl
sbb
call
into
bound
pop
out
push
leave
adc
data16
sbb
adc
jbe
and
les
jae
dec
sub
sub
cmp
dec
mov
adc
sub
add
dec
and
cmp
aas
xchg
adc
xchg
sbb
testl
pusha
idivb
jae
inc
mov
out
push
adcb
int3
or
mov
leave
dec
clc
jl
gs
xchg
push
sqrtps
inc
sub
add
repnz
jo
push
dec
fwait
pop
pushf
fdivr
sub
popf
loope
shlb
mov
xchg
jmp
add
pop
inc
pop
dec
sub
push
rcrb
push
jle
data16
out
int
pfrsqit1
mull
and
sub
xor
gs
in
push
or
test
jge
leave
iret
aaa
or
sldt
hlt
mov
outsb
fcmovb
orb
cmpsl
jo
lock
cmp
insl
hlt
bound
add
in
jo
or
jle
sub
int
or
xchg
add
jecxz
insb
dec
div
adc
inc
lock
clc
push
je
push
push
bound
xor
gs
rcrb
aam
inc
test
mov
mov
xchg
jae
loope
push
fistpll
or
lcall
cmpsl
push
xchg
arpl
pushf
xor
ficoml
in
sub
push
or
in
mov
mov
mov
pop
jae
cli
mov
loopne
cltd
and
mov
inc
insl
imul
and
mov
lret
fwait
fldl
adc
mov
xchg
push
in
mov
pop
and
adc
sarl
int3
mov
cmpsb
xchg
movl
cmp
ljmp
push
sti
inc
aaa
xchg
cmp
adc
sbb
xchg
lds
mov
xchg
das
hlt
sub
sub
sti
data16
inc
push
loope
cld
fcomip
mov
sub
mov
lods
add
in
pushf
cli
nop
cwtl
adc
and
pcmpgtd
pop
repz
sbb
add
xor
dec
adc
out
or
push
nop
pushf
leave
add
scas
adc
mov
push
loop
inc
shlb
jge
mov
incl
out
push
dec
shll
cmp
fisubrl
movsl
and
push
inc
rep
arpl
inc
lret
adc
jle
add
sbb
je
int
mov
outsb
sbb
rorb
insb
xchg
stos
outsb
pop
sbbl
in
rcrl
filds
pop
add
sub
mov
in
mov
inc
dec
dec
aam
mov
scas
outsl
nop
xchg
ficoml
sbb
jge
pop
pop
and
call
adc
push
xchg
loopne
int
cmp
sub
fcmovbe
xor
mov
ljmp
ficomps
inc
and
xor
mov
mov
mov
and
loope
add
dec
xchg
mov
jns
push
fadd
or
imul
std
pushf
fcompl
mov
call
push
mov
fiadds
xor
xchg
cmp
pop
fnsave
jecxz
mov
push
jecxz
xchg
mov
xor
adc
or
stc
jnp
imul
addps
lret
push
lods
pop
cwtl
jge
test
mov
imul
dec
pop
lods
cmp
mov
aas
pop
pusha
mov
shlb
ja
adc
fs
out
je
inc
arpl
outsb
sbb
pop
pop
pusha
mov
out
and
mov
xor
lret
inc
test
mov
cmpsl
movsl
cmpsb
mov
and
sub
icebp
sub
divl
xchg
push
add
shll
aam
outsl
inc
mov
lret
or
ds
repz
xor
sbb
out
ret
mov
mov
sahf
add
or
imul
stos
dec
sbb
movsl
inc
adc
mov
imul
inc
push
pop
sub
jnp
push
mov
or
out
xor
cmc
mov
mov
out
xchg
in
dec
inc
cs
into
jno
mov
or
dec
popf
cmpsb
or
scas
rclb
fstpl
and
jb
aad
stos
mov
ret
stos
add
pop
cmp
arpl
cmp
xchg
push
imul
fcomi
icebp
xchg
jns
cmp
int
mov
inc
sbb
push
jp
jp
or
push
dec
inc
cmpsl
loope
in
mov
out
jo
lcall
mov
shll
sbb
loope
fwait
je
pusha
into
popf
push
add
or
pop
and
and
and
jo
std
mov
or
cmpl
mov
adc
sub
and
jb
dec
arpl
mov
fisubrl
pop
test
pop
mov
xchg
mov
std
or
mov
out
testl
neg
rcr
inc
roll
in
jne
fstpt
dec
sti
and
insb
hlt
pop
aad
scas
loope
pop
or
cmp
xchg
stos
ljmp
int
xchg
pop
dec
or
pop
scas
cmovle
scas
mov
inc
mov
adc
cmp
sub
push
inc
xor
inc
mov
test
sbb
loop
adc
addr16
cld
int
nop
xor
in
mov
mov
xchg
mov
xchg
push
ja
mov
add
outsl
out
pop
out
cmpsb
xchg
call
or
cmpsl
loope
pop
inc
in
xchg
mov
inc
insb
mov
inc
mov
inc
jae
mov
jae
push
push
sahf
sub
sti
sbb
mov
aam
aam
jne
mov
dec
mov
lret
jb
jnp
lcall
xchg
out
outsl
lock
mov
push
mov
cmpsl
fwait
and
sbb
sub
imul
or
sub
pop
shrb
lds
test
pop
and
pushf
test
aam
cmp
lods
add
and
sti
lods
mov
inc
pop
and
lods
std
mov
sub
mov
jmp
push
and
std
lock
mov
push
pop
cmp
loope
mov
mov
pop
mov
pop
push
and
mov
and
mov
gs
addr16
sub
scas
outsl
bound
in
lds
sbb
pop
cmp
adc
cmp
and
inc
xchg
add
hlt
xchg
mov
insl
adc
jp
out
jns
pop
sbb
cld
loop
outsl
add
mov
cmp
int
push
aam
mov
add
sarb
mov
out
sbb
cltd
add
jnp,pt
pop
sub
call
scas
or
nop
mov
in
fs
dec
and
sbb
xchg
adc
ficompl
inc
popa
test
out
xor
pusha
shrl
xor
out
cmp
mov
inc
lea
xchg
mov
push
fwait
lret
push
inc
xor
mov
or
in
push
xor
outsb
sub
es
test
push
in
scas
pop
inc
sti
adc
cmpsl
loope
pop
leave
out
ret
cmp
into
pop
les
adcb
sub
arpl
shll
sbbb
mov
inc
pop
xchg
xor
rorl
push
iret
xchg
sahf
dec
or
dec
ja
in
and
pop
dec
xlat
add
aad
mov
ss
lock
outsb
lock
fistps
mov
scas
clc
inc
int3
inc
jmp
repz
cmp
insb
dec
pop
ss
push
mov
xor
or
mov
sub
outsb
mov
aad
xor
xor
sbb
ljmp
mov
mov
fs
addr16
hlt
pop
insb
jo
fldcw
sub
mov
pop
dec
ja
add
xor
jl
dec
insb
js
adc
add
mov
fiaddl
or
xor
mov
adc
imul
insl
jmp
and
xor
inc
inc
imul
stos
fildl
sbb
jl
or
sub
les
mov
mov
sbb
arpl
sub
pop
cld
push
cmp
mov
lds
push
mov
cmp
cmp
ds
xchg
mov
test
leave
dec
mov
les
iret
pop
inc
xchg
adcl
addr16
fwait
jb
mov
lds
cld
into
mov
cmp
negb
or
push
mov
test
icebp
xor
ret
xlat
push
fcmovu
sbb
jle
div
testb
repz
jae
outsl
lods
xchg
and
js
push
dec
jecxz
sub
fdiv
inc
jge
lds
ss
cs
sbb
loop
and
pop
aas
cmp
jbe
fnstcw
xchg
mov
jecxz
das
pop
mov
inc
clc
mov
sub
daa
mov
or
ret
mov
inc
cmp
scas
adc
sub
stc
fidivs
mov
popf
test
je
cli
and
test
mov
pop
fistl
push
cmp
into
or
xor
sub
jg
xchg
adc
cmp
push
ret
in
and
and
shrd
lret
pushf
daa
cmp
iret
loope
xchg
jg
cltd
insb
adc
arpl
add
push
push
or
xchg
gs
push
ljmp
or
push
and
out
mov
mov
xchg
jno
call
imul
int3
adc
lcall
movsl
aam
fwait
adc
push
add
lods
xchg
jno
rcrl
imul
mov
mov
pop
loop
arpl
subb
mov
push
pop
xor
aad
push
stc
or
push
dec
or
push
inc
loopne
hlt
inc
push
xchg
mov
mov
sbb
test
dec
fistpl
outsb
xchg
add
cmp
or
pop
loopne
scas
ljmp
dec
mov
mov
mov
mov
roll
sti
mov
or
inc
bound
jp
fucom
cs
xchg
in
sti
xorl
xor
xchg
add
mov
and
fwait
jns
psllw
lock
push
orl
xchg
pop
push
mov
jmp
or
ret
pop
pop
sbb
mov
mov
jge
push
mov
and
mov
fadds
sahf
movsb
ss
mov
repz
push
int3
push
inc
cs
shrl
inc
xchg
flds
sub
jl
cmp
push
rclb
add
push
mov
rcrb
loopne
cmpl
clc
shrb
xor
lods
inc
sbb
lahf
data16
or
into
cmp
sub
mov
cmp
imul
inc
and
mov
scas
mov
fs
mov
or
push
inc
popf
xchg
mov
ret
ja
hlt
lahf
insb
xchg
mov
jo
mov
rcll
push
jo
cwtl
lret
push
mov
and
daa
inc
dec
mov
or
mov
or
mov
and
popa
cmpsl
sbb
ret
adcl
add
in
testl
pop
cmp
or
fldl
mov
call
test
ret
shrl
xchg
adc
mov
push
gs
mov
dec
icebp
lahf
and
int3
mov
push
cli
scas
in
pop
sub
push
xchg
enter
or
or
rol
mov
cmpb
pop
lock
sahf
movsl
dec
test
pusha
xor
sub
repnz
pop
imul
dec
lcall
test
add
mov
ret
testb
sub
pop
jmp
sti
scas
mov
pop
lcall
arpl
loop
stos
movsb
cmpsl
mov
ljmp
enter
pop
mov
jne
xchg
adc
xor
loope
or
sbb
inc
test
inc
clc
lret
jns
sbb
push
sub
sbb
mov
aam
and
mul
insb
pop
mov
int3
fcomps
push
and
adc
sbbb
adc
sbb
jo
mov
int
stos
push
xlat
mov
out
cmp
lods
xchg
icebp
fwait
xor
movb
pop
mov
rorl
adc
push
pop
imul
xor
sbbb
ljmp
movsl
mov
loopne
popa
es
and
roll
xor
push
dec
es
adc
lahf
sbb
test
mov
add
loop
add
push
lea
data16
push
ljmp
pushf
popf
lcall
push
sbb
sahf
push
push
aam
cmp
dec
xchg
and
subl
fcmovnbe
ficompl
jecxz
push
je
dec
inc
dec
popa
aam
and
ds
sub
pop
xor
or
or
test
fidivrs
cmp
cmpsb
adc
xchg
je
loope
fildll
cmp
jae
pop
cmc
into
repz
test
inc
sbb
push
les
jp
push
mov
ret
aad
jae
cmp
add
jmp
enter
inc
pop
xchg
and
add
lea
inc
pop
jno
faddl
mov
lret
inc
add
incl
data16
xor
jecxz
mov
orl
icebp
push
xchg
xchg
mov
pop
lret
cmc
loopne
cmp
stos
jp
dec
fiadds
ljmp
add
cltd
sbb
adc
cwtl
sbb
outsb
es
shll
cld
xchg
in
dec
mov
inc
adc
and
push
push
sub
push
dec
mov
ss
cmp
negb
jnp
loop
mov
mov
movsl
and
jg
out
out
dec
jae
jae
sub
mov
ljmp
xchg
insl
add
cltd
mov
sub
int
cmp
dec
adc
scas
push
ret
xor
push
xchg
xlat
aad
dec
je
mov
cli
jle
adc
sbb
sub
lahf
aas
ret
imul
sbb
test
roll
or
std
sbb
out
aas
mov
sbb
inc
out
or
aam
in
dec
pop
pop
cmc
xor
inc
mov
xchg
lods
sti
inc
push
lret
std
mov
fcomi
sbb
loopne
dec
jns
popf
xchg
jnp
sti
inc
inc
cmp
pop
mov
lret
adc
fcompl
outsb
push
inc
or
aaa
ljmp
repnz
frstor
fidivs
aam
cmp
repnz
jo
pushf
xchg
scas
fwait
aaa
sahf
add
mov
call
sahf
adc
lcall
arpl
fs
aaa
es
mov
mov
sahf
sub
fadd
xchg
out
in
repz
and
add
dec
mov
sbb
mov
push
test
jbe
movl
insl
push
sbb
mov
mov
out
sub
jb
sbb
ds
int3
jp
or
xchg
dec
mov
ror
cs
popa
sbb
cmp
or
repnz
icebp
inc
daa
sub
enter
je
jno
cli
sti
imul
sub
leave
mov
and
pop
jo
or
xchg
jg
add
ret
inc
or
pusha
pop
mov
popf
dec
push
loopne
cmpsl
aas
inc
inc
outsb
dec
aas
or
jmp
jns
clc
add
outsl
jl
in
repnz
lahf
into
cwtl
jmp
xor
je
imul
push
push
push
aad
jno
or
das
dec
repnz
sbb
dec
fadds
and
in
scas
test
js
das
lcall
hlt
inc
loopne
xor
inc
and
hlt
mov
xchg
xchg
lret
scas
sub
cmp
int3
cmpl
fisttpl
adc
xchg
ds
popa
jno
aam
test
movb
cmp
cli
mov
inc
cld
sbb
add
jle
imul
mov
pop
cmc
or
xchg
jge
cwtl
clc
push
test
insb
sbb
xor
aam
pop
push
jge
rolb
or
add
mov
ret
push
cli
lods
sbb
insl
xchg
loope
sbbb
xor
xor
leave
and
cmpsb
enter
dec
xchg
rorb
xchg
aas
mov
repz
mov
jl
mov
cmpsb
popa
sbb
add
jnp
cmovge
xchg
and
repnz
and
sarb
inc
addb
mov
ja
jmp
xchg
std
shld
inc
in
or
mov
inc
insb
inc
xchg
xchg
pop
lret
inc
push
lret
test
aad
push
push
cs
iret
arpl
inc
fimuls
sbb
or
lea
out
lods
jne
add
cmp
jno
jne
pop
movsb
in
xchg
pop
repnz
inc
pop
adc
push
jno
loopne
xor
and
ficomps
btsl
adc
xor
cld
shrb
ss
in
pop
adc
sbb
idivl
testb
imul
ror
push
adc
pop
rorl
pop
insb
cmp
jp
movsl
vpshufhw
xchg
in
mov
or
jecxz
xor
ja
aas
pop
nop
movb
jle
pusha
add
ljmp
nop
jle
nop
pop
loop
scas
ret
lock
dec
xchg
push
pusha
ss
orl
popa
cmpsl
dec
fmull
fucom
inc
and
inc
mov
mov
lock
cmp
lret
fiaddl
sub
cmp
pop
add
add
add
xor
xorb
mov
mov
cmp
or
bound
or
loope
lds
dec
sub
cmove
push
out
add
mov
sub
push
bound
pop
jg
mov
inc
scas
or
out
xchg
out
cli
into
insb
sbb
cmp
jno
fidivrl
cld
sbb
scas
xor
ret
ja
subb
test
leave
popa
inc
mov
dec
fistps
cmp
mov
cltd
pop
loop
pop
sub
mov
fmull
jg
xor
sbb
inc
sub
aas
inc
movsl
enter
sbb
aas
sub
xchg
jns
jbe
out
adc
testb
loope
mov
jmp
movsl
jp
aaa
pop
jl
insl
push
xor
incb
sub
jbe
dec
call
in
add
fistps
pop
sbbl
subl
xor
adc
fsub
xor
jno
fsubl
adc
and
or
push
in
out
xor
push
aaa
add
cmp
ret
jle
or
cltd
mov
add
xor
inc
and
test
pop
pushf
xor
repz
movsl
sarb
inc
mov
mov
sbb
add
and
add
and
shlb
mov
ds
xchg
cmp
les
lea
cltd
stos
ds
mov
inc
rorb
inc
rcl
clc
sbb
and
xchg
pop
add
push
lahf
xchg
pop
xor
or
cmp
mov
in
sub
sbb
mov
inc
pop
int
push
lea
mov
inc
push
xchg
inc
pop
xchg
mov
test
xchg
es
mov
leave
mov
xchg
orb
dec
mov
ss
fldcw
pop
xchg
sti
sub
scas
dec
mov
fwait
xchg
add
jle
aas
dec
or
loop
lcall
push
mov
rclb
lea
es
ss
ret
movsb
fwait
mov
jne
sub
ror
stos
icebp
mov
sbb
cld
aas
mov
imulb
dec
mov
mov
jno
adc
lods
xlat
out
jo
jo
mov
sbb
rcll
and
imul
rorb
dec
ret
mov
sbbb
or
add
xor
loope
adc
or
arpl
fnsave
push
cmp
je
ret
mov
arpl
mov
dec
mov
mov
sbb
popa
mov
push
sar
lcall
pop
jmp
pop
xchg
xor
call
bound
daa
xchg
jp
out
add
loope
push
aam
xor
aas
movsl
add
in
loop
inc
dec
hlt
stos
fldl
and
lret
popa
cmp
pop
mov
add
or
xchg
movsl
movsb
fmuls
cmp
sub
jnp
mov
std
add
lret
stos
pop
cmp
int3
movsl
xchg
popf
and
push
rcrl
cld
lods
lcall
or
cmp
mov
and
cld
lahf
jp
sahf
ret
xchg
cmpb
jae
in
dec
aaa
popa
jmp
cld
sbb
imul
pop
cli
popf
ja
mov
arpl
push
mov
pushf
lret
dec
xor
sti
xor
rcr
lcall
loop
mov
sub
fucomp
lock
add
fmuls
and
negb
mov
mov
sbb
sbb
cmp
inc
rolb
push
sbb
push
divl
inc
test
test
lahf
jmp
mov
ret
arpl
pop
mov
out
push
and
push
aas
test
dec
sbb
jne
add
mov
int3
shl
shll
inc
jns
int3
scas
xor
xor
jmp
push
fucomp
nop
fidivrl
mov
in
inc
mov
loop
cmp
adc
mov
cmp
test
adc
stos
lcall
es
pop
xchg
and
std
push
pop
cmpsl
cmp
jle
shlb
les
addb
aam
mov
es
xorb
and
out
inc
mov
xchg
pop
or
cmp
xchg
shl
jmp
dec
enter
test
iret
repnz
outsl
pop
push
jg
mov
xor
mov
cmp
push
xor
pop
and
pusha
push
xchg
ja
or
repz
cmp
gs
imul
mov
outsl
sub
dec
in
inc
cmp
mov
mov
stos
add
mov
jle
test
push
adc
js
and
aam
test
mov
repnz
aad
movsl
xchg
mov
lods
jmp
iret
std
pop
sub
mov
movsl
jae
sbb
cli
int3
jmp
test
and
stos
cmpsb
outsb
mov
inc
xor
pop
jne
sbbl
jno
out
stos
mov
fisubs
or
dec
ljmp
arpl
jb
sub
fisttpll
mov
sbb
out
xchg
mov
mov
mov
sub
inc
int
insb
push
or
scas
loop
dec
xchg
lea
mov
mov
movsb
or
cwtl
aaa
shll
sub
popl
in
xchg
sub
out
jne
cmpsl
jbe
xchg
dec
sbb
test
cli
push
sti
jle
cld
nop
montmul
cmpsb
xchg
jecxz
pop
mov
mov
pusha
cmc
sti
lcall
xchg
inc
icebp
loopne
dec
scas
push
popa
mov
xor
xchg
jo
mov
call
fyl2xp1
shlb
mov
xchg
and
jbe
sbb
fs
shr
mov
and
scas
adc
mov
pop
push
lret
cmc
repnz
mov
cltd
pusha
int3
insb
jbe
popa
popf
mov
ret
cmc
jle
and
dec
sub
and
fs
cmpsl
imul
les
hlt
jp
jnp
jae
or
rolb
mov
jg
roll
mov
stos
cmp
mov
mov
xor
inc
push
outsb
lds
push
mov
push
cwtl
xor
daa
lea
jbe
lcall
pop
cwtl
cmpsl
jo
out
pop
lock
cmpb
adc
ret
movsb
std
and
xor
dec
mov
lcall
add
mov
pop
push
shl
push
mov
aaa
push
mov
stos
out
dec
jae
aas
mov
cwtl
pop
mov
int3
and
mov
sbbb
and
scas
sub
jecxz
jno
adc
mov
mov
xorb
gs
sub
lods
jbe
sti
add
cmpsb
pop
bound
jb
dec
xor
movsb
mov
icebp
leave
call
insb
fisubrs
pop
mov
je
imul
lret
pop
xchg
push
dec
jg
shll
fwait
loope
add
xchg
fsubp
movb
mov
adcl
ljmp
ficoml
inc
add
pusha
pop
xchg
mov
jmp
mov
push
cmp
sbb
outsb
shll
pop
jp
movsl
dec
and
in
add
cltd
les
mov
ds
rorl
xor
push
jle
jmp
cmc
lods
leave
inc
fldl
push
jae
xchg
mov
outsl
or
lret
push
pop
cmp
imul
jge
and
in
push
inc
xchg
stos
xlat
jo
rolb
out
insb
fcoms
sahf
lret
xor
fiadds
cmc
xlat
push
cmpb
idivb
jge
dec
pop
sub
insb
sbb
test
lret
inc
cmpsb
and
xchg
and
jo
sbb
pop
xchg
loop
cmp
leave
lahf
cmp
in
add
adc
push
ja
xor
mov
lock
pop
icebp
jnp
adc
sub
fs
scas
cmpsl
ret
cmpsb
fsubl
mov
jnp
push
sub
adc
mov
mov
lret
push
sbb
es
mov
inc
sub
cli
pusha
pop
pop
cld
fcomi
inc
pop
push
lods
int
data16
xlat
es
les
add
movsb
mov
cmp
jo
lds
mov
mov
add
dec
jne
xchg
outsb
inc
test
xor
mov
pop
pushf
pop
int
and
jne
in
mov
mov
jns
mull
and
imul
in
fdivrl
adc
dec
loope
loope
fisttpll
inc
aad
fstps
test
pop
push
inc
arpl
add
fsubl
xchg
ja
das
jb
call
mov
dec
mov
mov
or
add
sti
je
dec
xor
lods
inc
push
int
hlt
and
pop
movsb
pop
cmpsb
leave
fldenv
jge
mull
fbld
into
adc
in
out
or
aad
hlt
loope
jg
loop
imul
mov
push
ror
push
xlat
xchg
repnz
cld
mov
pushf
ss
cmpsb
lret
test
mov
leave
fimuls
lret
cmp
and
add
push
rcrl
out
adc
mov
xor
js
mov
jae
mov
mov
fimull
cmp
jne
inc
lret
data16
popf
mov
aam
jmp
pop
xlat
aaa
and
fs
test
jo
push
sub
dec
sbb
cmpb
adc
pushf
jbe
popf
inc
mov
popa
in
push
sub
lea
imul
add
or
orl
mov
jns
ss
ljmp
sbb
jp
mov
fcompl
push
in
xchg
sbb
add
cmpsl
adc
mov
cmp
jg
in
push
cmpsb
aas
or
jns
fists
mov
fsubs
mov
lds
and
jno
test
movsl
and
mov
jge
out
lods
and
test
aas
dec
and
mov
cld
add
xchg
mov
mov
cmc
or
push
rclb
sbb
cmp
out
xor
mov
hlt
test
mov
cmp
inc
pushf
test
sbb
fldl
mov
mov
mov
gs
loope
push
call
stos
jno
adc
arpl
and
lret
test
cmp
mov
mov
jae
and
jp
in
adc
jae
adc
jno
in
push
mov
das
inc
fnsetpm(287
pusha
cmp
insb
adc
add
jmp
mov
mov
inc
int
mov
jg
inc
push
lea
xchg
push
push
xchg
ret
data16
ret
lods
adc
cmpsl
sarb
ficoml
cmpsb
fmull
adc
and
adc
lods
xchg
mov
cld
dec
mov
xor
test
in
call
imul
xor
std
lcall
mov
xchg
mov
xor
add
insl
dec
xor
imull
in
loope
xor
mov
jnp
adc
outsb
jb
sub
or
subl
xor
cmpl
pushf
ljmp
roll
mov
xor
add
int
inc
mov
xor
sub
fimull
scas
jmp
push
loopne
std
xchg
jp
mov
test
inc
xchg
xor
jo
addr16
mov
loop
adc
mov
xor
xchg
pop
mov
mov
loopne
int
popa
test
xchg
xchg
and
cmpsl
imul
insb
push
jo
call
jo
and
outsb
sub
mov
sub
mov
outsb
jbe
mov
and
mov
sbb
and
jecxz
pusha
negl
in
aam
and
pop
out
mulb
add
sbb
pop
cmp
pop
add
sahf
adc
clc
push
fnstenv
adc
stos
cmpsl
in
xchg
shrl
mov
push
daa
xchg
mov
insb
das
clc
aaa
out
mov
push
das
jbe
add
cmpsb
fld
push
push
lret
fdivl
xchg
hlt
outsb
stos
adc
rol
out
mov
or
pusha
dec
notb
mov
xchg
andb
pop
inc
repnz
lcall
and
mov
shlb
dec
or
test
aad
mov
lds
cld
sub
cmp
and
add
pop
jns
fwait
out
mov
add
cld
inc
push
cwtl
adc
pop
cmp
dec
dec
mov
lods
dec
mov
and
test
notl
int
sbb
sbb
and
pusha
xchg
dec
mov
out
aam
insb
push
xchg
add
xor
lds
orl
xorb
pop
dec
xchg
insb
imul
lds
jnp
and
lret
ret
push
scas
jmp
mov
or
ljmp
imulb
mov
mov
sbb
ret
xchg
dec
aas
add
pushf
xor
enter
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
lcall
jp
pop
jp
add
mov
pop
jecxz
push
xchg
ret
adc
loopne
loopne
lds
addr16
jne
icebp
pop
sub
jge
adc
das
sub
decl
nop
mov
mov
xor
imull
out
mov
push
push
jnp
sbb
movsb
xchg
fucom
bound
test
sub
icebp
or
hlt
or
push
cmp
xor
inc
lret
sub
jmp
out
xor
mov
xchg
mov
sysenter
mov
cs
scas
sub
pop
das
or
adc
je
and
mov
mov
mov
out
sub
mov
div
imul
dec
push
xorb
rolb
in
jle
imul
dec
mov
daa
int
mov
jl
ds
outsb
fnstsw
scas
xchg
enter
leave
jb
adc
stos
lret
ja
hlt
push
mov
arpl
jl
xchg
push
mov
pop
xchg
xchg
jbe
cmp
cmp
rcr
lds
sub
sbb
xchg
fst
fistpl
stc
or
dec
jle
push
pop
pusha
mov
sub
cli
lret
sti
and
ret
into
cmp
hlt
out
dec
repnz
cs
pop
jae
mov
jp
negl
je
bound
push
std
fstpt
xchg
in
mov
imulb
mov
mov
xchg
enter
mov
addr16
shll
aam
and
popa
jmp
adcl
aas
mov
mov
aaa
sahf
add
cmp
mov
and
push
shrl
xchg
inc
mov
and
repz
jns
push
sbb
or
inc
fists
jecxz
jmp
in
sbb
push
repnz
adc
out
inc
pop
xchg
cmpsl
ficoml
jl
popa
daa
sbb
stc
push
fdivl
insl
fisubrl
or
sarl
fsubl
dec
sub
dec
mov
scas
lock
das
inc
movsb
mov
ret
mov
mov
fidivs
inc
fnstenv
cs
inc
lds
lods
adc
in
lods
call
push
ljmp
insb
dec
fndisi(8087
cmp
test
cmp
popf
fwait
arpl
nop
cmpsb
das
sbb
pop
dec
inc
mov
ljmp
push
sub
jmp
and
mov
and
jo
and
mov
xor
xchg
xor
adc
mov
cli
pop
shll
sub
push
jge
sbb
repz
stc
and
jo
in
mov
loop
cmp
cmp
in
mov
fsubr
fistpll
insl
js
add
mov
dec
call
mov
jg
scas
jmp
sti
das
xorb
mov
int
mov
push
scas
fsubp
sbb
mov
int
cmpsb
stos
ja
mov
mov
lret
cmc
ljmp
stos
mov
xor
cmpsb
jb
das
rorl
dec
jae
cltd
mov
dec
das
call
sbb
inc
inc
cmpsb
mov
icebp
xchg
and
dec
mov
hlt
xchg
in
mov
out
repz
xor
jle
and
out
xor
push
mov
in
fdiv
outsl
jae
test
jmp
xchg
xor
xor
xorb
scas
loopne
js
ret
lock
xchg
iret
push
xchg
xchg
adc
xor
mov
ljmp
xor
in
jne
xor
mov
dec
cmp
xor
jno
jg
bound
shlb
insl
pop
in
loope
in
in
mov
cmp
mov
mov
or
in
nop
call
xorb
mov
mov
insl
addb
les
ljmp
pusha
push
mov
fnstenv
call
lods
xor
sub
jp
dec
xlat
outsb
roll
ret
loopne
lock
mov
test
push
adc
add
out
in
imul
and
stos
inc
mov
fcompl
mov
stos
leave
jmp
push
in
and
fwait
push
lods
jns
cmp
mov
repz
jo
aad
mov
es
shll
leave
xchg
mov
insb
fchs
xor
rcrb
fstpt
pop
push
mov
sarb
and
rcll
fmull
xchg
ss
loop
mov
mov
sbb
mov
lods
pop
aaa
inc
xchg
inc
push
mov
fmull
adc
xchg
bts
jg
in
xchg
fsts
xor
ss
xor
test
xchg
push
mov
aad
roll
ds
shlb
cmp
sbb
jo
fmuls
sbb
or
movsb
and
mov
adc
xchg
lret
push
jle
jo
xchg
jo
cmp
or
mov
pusha
jb
stc
xchg
inc
ja
fcom
es
jge
pop
jno
xchg
xor
push
neg
inc
scas
call
enter
cmp
pmaxub
fimull
add
dec
add
cltd
pop
and
je
or
sbb
or
mov
fsts
fidivrs
push
fwait
inc
cmpsb
repz
add
dec
pop
dec
stc
xor
mov
xchg
std
loop
mov
sahf
xor
cmpsb
stc
icebp
xor
fistpll
arpl
sahf
aam
sbb
mov
cmp
cwtl
xchg
popf
outsb
cmp
mov
push
xor
mov
inc
push
rcrl
es
push
test
insb
pop
and
add
cmc
and
adc
xchg
insb
push
and
mov
push
int
fcmovnb
aas
xchg
mov
out
lret
pop
test
jne
out
mov
pop
into
inc
pop
lcall
inc
inc
xor
icebp
xor
enter
or
das
fdivl
cmpsb
cmpsl
sub
xchg
sahf
vpshuflw
bound
add
push
fstpl
pop
or
jnp
jl
popf
mov
mov
out
shlb
stc
mov
push
jns
out
ficoml
cld
test
dec
dec
jns
inc
dec
mov
dec
out
inc
jo
lods
pop
fistpll
pop
mov
stos
aad
xlat
jae
jne
jle
ror
jbe
outsl
push
mov
addr16
add
or
inc
or
sbb
scas
cmp
mov
cmp
or
sarb
std
mov
jne
push
scas
cmp
push
inc
inc
jg
bound
pop
mov
sar
jle
stc
jp
mov
inc
push
mov
mov
incb
adc
addb
movsl
sbb
es
bound
dec
push
lods
or
jae
jns
sbb
push
xchg
imul
es
stc
sbb
jo
psadbw
sbb
divb
lret
sbb
int
lods
pop
psubb
lock
data16
pushf
sub
xchg
cmc
sub
xchg
clc
insl
xchg
xchg
mov
mov
sahf
push
sub
mov
fwait
mov
jae
cmp
loopne
sbb
xor
stos
fwait
arpl
insl
lock
xchg
bound
cmp
ret
dec
mov
cmp
shlb
xor
imul
cwtl
cld
mov
rcll
movl
adc
or
cld
lock
mov
cltd
pop
add
loope
xchg
inc
and
arpl
scas
pop
jno,pt
xchg
add
rcl
xchg
mov
pop
fisubl
gs
fisubs
rorl
push
xor
or
std
mov
dec
jge
add
jne
mov
out
xlat
divl
cmpsl
lock
cmp
pushf
sbb
pop
out
cmp
sbb
xchg
fmull
cmp
lret
hlt
and
sbb
jp
push
std
mov
daa
cmp
dec
mov
in
sub
std
sub
addr16
rcrl
xor
jne
or
cli
xchg
adcb
sub
mov
or
inc
xor
pop
lds
in
mov
mov
and
lret
push
js
mov
jnp
xor
fisubl
push
hlt
ss
movsl
xor
pop
adc
lods
sbb
sub
mov
repnz
outsb
and
or
les
aad
sahf
jbe
mov
insb
pop
mov
es
xchg
mov
mov
push
cmp
dec
sbb
dec
cmpsb
jmp
shlb
jb
xchg
nop
and
ljmp
push
mov
pop
jae
dec
xor
test
adc
rclb
cmpb
repnz
test
add
inc
xchg
outsb
outsb
repnz
call
and
sti
adc
dec
pop
in
cmp
jnp
push
push
jnp
es
push
fsubl
int3
ds
outsl
cltd
push
mov
jmp
addr16
lcall
mov
adcl
inc
push
icebp
popf
adc
or
cmp
dec
dec
xchg
mov
out
inc
jmp
adc
int
dec
adc
fwait
sbb
add
sbb
sub
xchg
outsl
xchg
movsb
cmp
repz
inc
sub
add
loop
push
stos
jecxz
mov
jecxz
inc
cmp
mov
or
repnz
call
test
cmp
and
dec
sarl
mov
push
dec
pop
aas
mov
sub
jns
jne
inc
jo
mov
and
lahf
ret
push
test
out
jecxz
sbb
insb
pop
pop
push
aas
cli
sub
shrb
jl
scas
mov
sarb
xchg
cmp
xchg
aas
insb
das
outsb
dec
jae
int
clc
push
dec
sub
int
or
mov
mov
out
enter
add
and
jecxz
mov
pop
clc
arpl
je
lahf
sub
inc
lods
je
push
roll
imul
push
loopne
jle
push
incb
out
pushf
sbb
out
and
mov
add
iret
std
mov
imul
push
push
movsb
and
and
lea
mov
pop
stos
out
sbb
inc
xchg
loop
cmc
sub
test
je
cmp
mov
or
mov
lds
je
dec
xor
mov
ds
adc
gs
inc
arpl
xchg
mov
mov
pop
pop
pop
fidivrl
lret
sbb
lods
add
push
aas
and
subb
pop
outsb
pop
push
adc
push
add
and
jnp
test
or
stos
push
jae
test
or
jmp
mov
sub
popa
inc
pop
push
sbb
call
fnstenv
into
je
nop
xchg
mov
cwtl
mov
pusha
in
mov
js
stos
fwait
inc
jae
jp
cmp
push
mov
cld
ljmp
push
hlt
or
shll
sub
lods
sbb
jne
push
pop
in
mov
int
dec
out
sbb
sub
pop
push
sbb
dec
shlb
cmp
in
dec
sbb
int3
mov
fucomi
fwait
outsl
push
xor
fwait
jne
clc
outsl
xchg
push
fnstcw
cmp
les
mov
iret
cmp
aas
or
xor
mov
add
inc
test
push
xor
enter
lcall
mov
mov
lcall
outsl
shl
xchg
inc
mov
jae
adc
lods
popa
mov
not
cmp
push
adcl
xchg
loope
xchg
pop
inc
add
xor
and
and
add
or
scas
inc
aam
sarl
inc
sbb
jmp
int3
das
inc
pop
cmp
loope
mov
loope
cld
gs
adc
mov
push
ss
in
insl
add
icebp
inc
push
movsb
xchg
push
xchg
mov
popa
gs
fnstsw
lds
pusha
jb
int
ljmp
add
pop
insl
xchg
sbb
mov
mov
sub
ss
popaw
or
inc
or
ljmp
fs
push
ficoms
push
push
add
adc
mov
nop
mov
inc
das
push
dec
xor
jae
test
or
fdivp
adc
mov
and
fcom
push
or
or
arpl
outsl
js
sbb
ret
jmp
pop
lret
loopne
sbb
js
mov
mov
outsl
arpl
push
lcall
jb
pusha
popa
rcll
iret
or
add
sbb
addb
sbb
add
sbb
push
inc
jne
push
and
stc
dec
mov
mov
fidivrl
insb
test
fcomip
aas
testl
lods
adc
fcmovnu
jae
mov
daa
xor
sahf
ret
inc
repnz
xor
adc
movsb
add
test
mov
fistl
movsb
cmp
jb
or
rol
sbb
call
std
cmc
repz
push
push
or
xchg
jl
es
shll
test
fiadds
push
pop
jne
scas
add
dec
ja
out
fsubrs
mov
cli
test
xorb
adcb
sbb
test
dec
jl
jle
stos
dec
stc
cmp
adc
icebp
push
xorb
int3
icebp
fadds
daa
ss
gs
ficompl
loop
std
mov
push
pop
lods
mov
jg
not
sub
aas
mov
inc
cld
adc
iret
cmp
cmp
sub
loope
adc
ret
jb
idivl
lret
out
jo
pusha
or
stos
pusha
aas
stos
inc
sbb
cmp
test
push
lcall
mov
fstpl
jno
lock
mov
negb
dec
inc
popf
jle
inc
mov
cli
repz
or
daa
lds
loopne
mov
inc
das
into
les
cli
scas
outsl
test
ds
push
loope
and
in
jmp
adc
cmp
push
jbe
and
mov
xchg
push
movsl
mov
test
repnz
outsb
rcrb
jb
dec
rcrb
rol
jle
mov
arpl
xor
xor
sbb
scas
idivb
pusha
aaa
mov
int
popf
sub
inc
add
dec
aas
mov
es
es
inc
pop
rcl
scas
shlb
mov
sarb
iret
xchg
mov
lret
or
mov
ljmp
xor
mov
xchg
das
out
bound
mov
pop
es
in
xchg
mov
ficomps
jb
mov
mov
stc
jno
adc
adc
push
and
inc
cmp
insb
pop
mov
lea
pushf
xchg
fsubrl
jge
lods
dec
sarl
xor
or
mov
arpl
lods
cmpsl
hlt
std
dec
cmpsl
mov
pop
es
outsb
jnp
sbbl
and
jns
jmp
fidivrl
mov
adc
push
out
into
ret
push
and
sbb
add
sbb
test
cmp
add
leave
sub
xlat
mov
in
mov
cmpsl
icebp
imul
pop
repz
pusha
sub
les
shrb
jno
std
pop
hlt
repnz
push
outsl
xlat
scas
pop
sub
iret
out
lds
mov
mov
aaa
xlat
repz
mov
test
imul
aam
pop
das
das
sbb
pop
inc
add
fisubl
cli
addr16
movsb
jae
jl
jp
or
les
dec
outsb
pop
mov
mov
or
xor
xor
out
or
push
pop
daa
mov
sub
mov
rcl
jns
dec
decl
adc
or
cld
mov
xor
mov
arpl
sbb
mov
imul
lahf
inc
aas
js
out
add
mov
cmpsl
or
repz
js
subb
push
mov
out
mov
add
ret
jle
imul
add
push
sbb
mov
sahf
je
gs
xor
mov
mov
pop
popa
mov
popf
popf
pop
cwtl
iret
push
mov
pop
rorb
push
scas
jo
inc
xor
jg
scas
adc
sahf
push
sbb
push
popa
mov
xchg
movsb
push
call
pop
and
push
dec
push
add
shlb
cs
lea
or
dec
adc
lret
pop
mov
sub
scas
cli
sbb
ds
xchg
das
cmp
inc
addr16
jns
cwtl
pop
or
lret
scas
ret
xor
outsb
push
in
xchg
sub
push
jge
rorb
lret
cmp
lahf
lock
mov
jno
pop
xchg
testl
rcrb
pop
icebp
cmpsb
stos
lods
or
push
mov
and
mov
out
lret
push
cmp
data16
pop
adc
fwait
sub
mov
mov
xchg
cltd
inc
mov
and
fists
cmp
mov
push
mov
out
mov
sbb
mov
shrl
out
cli
mov
pop
and
pop
cmp
dec
mov
xchg
fstps
xor
jmp
mov
jg
mov
fisubs
adc
xor
mov
dec
sbb
sub
cmp
push
out
cwtl
sbbl
cwtl
adc
push
mov
gs
and
cmpl
jne
cmpsl
out
rclb
adc
out
ljmp
into
jg
mov
push
dec
mov
jb
je
pusha
lock
test
pop
add
cmp
push
mov
pusha
push
clc
fcmovbe
jmp
andb
mov
mov
shll
mov
xlat
pop
sahf
mov
dec
ja
dec
out
pushf
and
rclb
or
pop
cli
fwait
decb
inc
mov
sti
test
push
xchg
pushl
pop
mov
dec
daa
xchg
pop
bound
loopne
out
daa
incb
jns
add
sub
lock
push
icebp
lock
das
push
mov
mov
and
jl
sbb
push
xchg
std
sub
or
fwait
loope
mov
jmp
dec
mov
mov
fists
mov
repnz
xlat
pusha
andb
popa
sarb
addl
dec
cs
repnz
mov
pop
mov
lret
cmpsb
aas
xor
inc
test
and
faddp
add
lods
ja
add
out
stc
mov
ss
cltd
int
clc
dec
cli
inc
cli
xchg
jne
xchg
mov
out
icebp
inc
data16
inc
pop
test
cmc
push
sahf
fmull
mov
push
push
pop
test
or
adc
aaa
xor
dec
mov
mov
jp
xor
xchg
imul
adcb
aad
mov
cmp
lret
add
or
paddd
xchg
mov
push
sti
stos
xchg
cltd
outsl
and
cmpsl
rolb
loope
and
and
sbb
inc
fstps
pop
inc
imul
pop
dec
pop
mov
insb
es
fwait
rcl
leave
xorb
or
and
pop
push
or
dec
push
fimuls
adc
mov
sub
sbb
add
xor
lahf
test
jnp
mov
inc
sub
xchg
out
mov
sub
inc
repz
fwait
mov
addl
arpl
cli
mov
std
sbb
scas
ljmp
fists
in
stos
pusha
push
pop
adc
cs
lret
fnstenv
or
fisttpl
shl
fwait
adc
push
aas
lock
shlb
sub
xchg
jo
dec
out
dec
xchg
add
cld
inc
fsubs
stos
mov
adc
and
dec
movsl
jne,pt
arpl
jo
xchg
mov
addl
push
and
popf
and
xchg
mov
mov
xor
adc
mov
sbb
mov
rclb
es
push
dec
add
lcall
frstor
sahf
popf
lds
fistpll
add
fstpl
dec
shrl
stc
fistps
daa
mov
mov
imul
cld
sbb
jmp
jo
xor
jge
shl
mov
mov
xor
dec
mov
insl
fwait
adc
mov
add
jo
and
sbb
jnp
loop
outsb
mov
mov
add
mov
xchg
push
rcr
mov
movsb
mov
jle
movsl
add
lcall
dec
add
mov
test
xchg
mov
push
arpl
or
xor
xor
sbb
pop
insl
int
loope
jae
sub
nop
leave
into
shrb
imul
ret
lret
imul
lahf
stos
daa
dec
mov
push
rcll
scas
pop
insb
pop
xlat
movsl
mov
inc
mov
ja
scas
ljmp
pop
jg
push
popf
pop
and
fisubl
fsubrl
bound
xlat
mov
add
push
pop
mov
cmp
sar
xor
jne
fwait
fwait
push
addb
jecxz
js
stos
cld
outsl
xor
pusha
sub
mov
iret
pop
mov
cmp
mov
sbb
jp
sbb
inc
cmc
cmp
xor
stc
stc
dec
push
cltd
jge
push
mov
and
stos
sub
lods
mov
mov
mov
mov
fidivrl
inc
cmp
fcmovb
movsl
dec
jno
sub
mov
fldcw
lahf
ja
sub
sbb
test
cld
sub
lods
add
mov
or
dec
inc
into
dec
enter
fwait
jbe
adcl
repnz
jmp
and
sbb
dec
pop
sub
mov
das
mov
sub
popa
adc
lahf
andl
mov
cmp
outsl
out
push
mov
inc
in
cmc
fcmovb
pop
cmp
and
or
xor
or
and
cmpsb
jns
and
bound
pushaw
inc
scas
mov
sbb
loope
jle
outsl
lds
frstor
shl
pop
stos
or
mov
jg
cwtl
push
lcall
inc
xor
add
jle
push
cmp
addr16
or
mov
push
int3
test
fnsave
pushf
fiaddl
jp
inc
inc
fwait
add
in
mov
cmp
imul
dec
xchg
shl
fsubrl
jge
sbb
imull
pushf
jecxz
sahf
xchg
or
sub
push
jo
cmp
stos
stos
cmpsl
sub
dec
xchg
enter
add
movl
cmpsb
in
mov
and
outsb
in
test
dec
movsl
mov
fs
xorl
xor
jle
dec
enter
sub
jbe
xor
lods
sbb
das
in
inc
les
xchg
test
jae
mov
xor
fildll
jns
stos
push
movsl
insl
test
inc
cmp
and
dec
mov
inc
mov
icebp
pop
fnstenv
iret
sub
add
push
jl
les
xor
mov
xchg
pusha
and
test
sub
or
aad
push
mov
jp
cld
push
jb
aam
xor
mov
js
arpl
dec
data16
cmpsb
int
dec
sti
sub
dec
arpl
leave
sub
pusha
out
fbld
push
imul
push
mov
aam
push
cmpsb
jg
or
mov
xor
xchg
fistl
outsl
arpl
in
pushf
xchg
int
push
ds
cmp
xchg
xchg
jo
into
xor
lds
add
mov
jge
clc
or
push
jle
dec
xchg
push
icebp
sbb
lret
xor
fnstsw
adc
cmp
add
cmp
in
fwait
xor
test
aaa
push
repnz
loopne
aas
out
jno
ljmp
push
fdivrs
sbb
fdivs
jno
push
decl
fists
notb
ss
inc
movsl
inc
jno
mov
xor
fldt
push
fcmovnu
outsb
shl
cs
jbe
or
mov
scas
jns
scas
sub
jge
stc
je
push
sbb
mov
shll
test
ficoml
xor
pop
mov
mov
stos
insl
lcall
inc
push
loopne
orb
adc
pushf
cld
sbb
sbb
mov
test
xchg
mov
test
push
lret
adc
fsubs
shr
mov
inc
inc
fisubs
xchg
fsubs
cmp
cmp
rcrb
rcrl
mov
adc
inc
xchg
mov
sbb
outsb
clc
jecxz
fistpl
adc
cmp
or
and
dec
fwait
xor
pop
stos
imul
jge
adc
xor
bound
les
pop
jmp
lea
mov
sti
lcall
arpl
jbe
stc
in
xchg
xlat
in
out
add
test
mov
push
jbe
mov
lock
repnz
repnz
cmp
xor
mov
mov
xchg
nop
pop
inc
pop
or
pop
inc
jns
cmc
movsb
pop
push
mov
ret
sbb
dec
xchg
push
lret
and
dec
or
xor
add
cmp
or
inc
out
push
jecxz
mov
or
or
xor
lods
sub
sbb
stos
and
lahf
pushf
mov
fstpl
call
sarl
fsts
aas
les
out
push
insb
inc
mov
call
inc
outsb
fsubrp
push
add
sbb
gs
daa
and
xor
cmp
cmp
sub
xor
and
jne
ds
cmp
lcall
mov
add
xchg
or
aad
mov
pusha
adc
test
dec
pop
jle
xor
lahf
int3
mov
popa
mov
test
sahf
mov
sbb
cld
jnp
push
cmp
jne
bnd
popl
lret
shl
es
rol
and
cmc
adc
in
adc
sti
jb
adc
loopne
lods
mov
scas
test
pop
js
subl
lods
dec
inc
xchg
into
ss
push
sub
je
repz
sbb
xchg
cmp
push
pop
xor
sbb
inc
scas
shl
xor
jmp
int
dec
xchg
sbb
loop
push
insl
push
adc
inc
pushf
das
pop
dec
icebp
stos
loopne
mov
push
pusha
cmp
adc
jmp
jb
les
ja
cli
das
int
in
cmp
or
cld
mov
in
sti
or
inc
inc
lods
mul
ljmp
xor
sbb
adc
mov
mov
or
into
lea
fstps
loope
out
rolb
filds
dec
push
push
jne
test
int3
and
sub
ss
fnstenv
negb
jbe
xchg
push
cmpsl
or
jae
pusha
mov
loope
stos
lahf
mov
mov
ret
ds
leave
dec
pushf
add
and
fs
insb
mov
test
in
shll
inc
mov
xchg
xchg
mov
ja
cwtl
xchg
stc
pop
lcall
mov
jns
push
jbe
push
insb
push
pop
push
pop
sub
ss
aam
shr
lcall
cmpsl
push
js
pop
adc
popa
inc
insb
mov
aam
add
xchg
test
ds
in
jl
dec
pop
fmull
jnp
ljmp
mov
add
inc
int3
pop
jnp
sbb
cmp
sub
push
sti
fnstenv
mov
test
cmpsb
or
dec
mov
lods
mov
movsl
ljmp
lock
and
sub
lret
jl
push
aad
and
bound
inc
xchg
pop
fstl
icebp
sub
inc
mov
push
sub
icebp
cmp
inc
sarl
pop
hlt
inc
xchg
fsubrl
sti
sub
sbb
pop
jnp
sub
bound
enter
sub
lret
jg
cld
ljmp
add
mov
push
negb
sbbl
or
adc
loopne
stc
lea
adc
les
mov
or
add
jmp
sahf
ret
enter
or
cmpsb
lock
dec
xor
inc
push
push
movsl
arpl
inc
sub
fcmovnu
ss
push
into
and
push
mov
add
fmuls
mov
xchg
out
in
mov
and
cwtl
cwtl
push
das
hlt
xchg
mov
mov
pushf
mov
xchg
mov
fnstsw
inc
jns
sub
fxch
and
fbstp
les
fildll
add
mov
mov
mov
ret
out
cmp
or
cmp
int
mov
pop
jle
xor
pop
jb
adc
inc
sub
test
fldcw
or
stos
mov
sub
or
cmpsb
or
add
ds
pushf
xlat
mov
inc
cmp
push
mov
in
push
enter
data16
loope
adc
sbb
add
iret
aas
jg
js
adc
dec
cld
lret
sbb
xchg
jbe
int
pop
adc
mov
rolb
jns
pop
ja
movsl
xor
hlt
mulb
sbb
loopne
mov
fsubl
jb
sub
mov
cmc
aad
jne
cltd
or
movsl
or
mov
into
adc
bound
or
mov
test
adc
out
lock
jecxz
sub
add
mov
data16
sbb
xor
adcl
dec
dec
test
ja
jmp
pop
in
mov
mov
fnstsw
popf
sub
call
loopne
add
aaa
mov
test
addr16
aas
fs
mov
cwtl
jnp
loope
ja
cwtl
jno
hlt
sbb
add
pop
pop
hlt
jno
push
movsl
dec
xchg
loop
add
into
movsb
ret
xchg
in
ret
fisttpll
jo
fmull
fs
test
cmp
mov
pop
xor
jbe
dec
orl
and
imul
adc
scas
popf
dec
jns
lcall
xchg
sbb
inc
dec
mov
pop
test
mov
arpl
scas
cmp
adc
mov
adc
call
cmp
pusha
stc
xchg
and
iret
test
fnstenv
aas
enter
cmp
testb
dec
push
cmpl
pop
mov
push
dec
cld
or
jp
jns
out
mov
das
add
inc
popa
cmpsb
inc
ret
dec
cmp
js
dec
dec
mov
ljmp
testb
icebp
mov
sbb
mov
dec
into
dec
test
dec
je
arpl
push
add
jb
xchg
sub
dec
xor
push
cmp
sbbl
adc
add
aad
aam
sbb
push
pop
push
mov
cli
pop
fidivs
out
scas
ss
fmuls
push
cld
pop
out
stos
push
add
stos
jmp
lods
adc
inc
jp
push
jo
cli
xlat
xor
lret
sub
ret
jl
in
dec
lods
and
jo
sub
xchg
pushf
mov
repz
int3
into
mov
clc
int3
lahf
mov
mov
mov
mov
lret
add
sbb
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
insl
lds
jp
sbb
jp
bound
ja
out
cwtl
jo
mov
ror
adc
add
push
decl
sti
jp
mov
inc
and
and
pop
pop
fwait
mov
cmp
add
add
test
mov
ret
daa
dec
testl
es
mov
adc
test
pushw
add
xchg
pop
stos
lods
mov
in
aas
xchg
sahf
js
scas
xlat
pop
ljmp
ja
fiadds
outsl
sub
sbb
inc
popf
push
dec
jl
push
stos
jp
lret
and
push
sti
pop
xchg
mov
xor
loopne
lds
insb
hlt
int3
xor
fwait
iret
xor
jl
or
mov
and
lret
test
lea
jnp
push
push
pop
jae
jb
mov
mov
sub
xor
mov
testb
rolb
inc
repz
pusha
or
cmp
add
in
nop
cmp
cmc
cli
and
cmp
into
fisubs
jmp
aam
out
jecxz
push
xchg
mov
repnz
icebp
cld
popa
xchg
add
or
adc
inc
pop
cmp
scas
inc
stos
outsb
daa
repnz
aad
mov
or
push
lret
add
jbe
cli
mov
int3
jns
mov
sbb
push
cmp
and
dec
dec
push
enter
cmp
xchg
addr16
fisttpll
xchg
push
sbb
sub
aam
in
push
mov
cs
push
xchg
push
mov
jp
sub
pop
mov
or
and
fstps
ljmp
loope
and
inc
call
sbb
push
cmp
lock
push
outsl
sub
mov
outsl
inc
insb
xchg
and
adc
jne
int
movsb
and
or
subl
loope
lock
mull
movsb
inc
inc
fwait
pop
inc
sub
leave
lock
mov
pop
jo
out
loop
rcll
and
xchg
jns
data16
mov
hlt
inc
pop
sbb
ret
icebp
pop
pushf
cltd
lret
sti
imul
mov
outsb
test
pop
xchg
mov
adc
leave
sbb
outsl
stos
cmp
call
mov
adc
test
movsw
mov
mov
jecxz
push
jl
out
icebp
jb
lret
lods
mov
shlb
inc
es
inc
gs
jns
roll
clc
xchg
in
sbb
or
and
push
imul
adc
mov
orb
xchg
mov
pop
mov
mov
lock
sti
pop
lea
int
pop
or
pop
enter
push
push
xor
ds
sbb
aad
fwait
stos
test
scas
inc
mov
rcll
mov
fdivp
mov
mov
orl
sbb
outsb
mov
sbb
mov
in
testl
fbstp
jl
jo
dec
push
pop
das
jle
aam
js
mov
rcll
iret
jb
loop
jbe
push
std
and
out
data16
mov
sbb
cmp
and
fisubrs
test
dec
mov
int3
dec
repnz
jle
push
insl
sti
and
inc
inc
nop
es
jge
bound
sbb
popf
in
fisttpll
jp
test
imull
xor
and
mov
cmp
inc
dec
loopne
popa
add
cli
inc
outsb
stc
andb
cmp
jge
imul
ds
push
fst
adc
pop
mov
sub
lret
pop
push
dec
add
cmp
cmp
jns
mov
sbb
adc
jecxz
lock
repnz
xchg
jo
into
xchg
sahf
jbe
sub
cmpsb
sub
in
sub
pop
movsl
and
mov
or
fs
dec
stos
push
mov
int3
cmp
fstps
out
or
pop
fisttpll
ficomps
arpl
cmpl
pushl
cmpsl
aas
outsb
cmp
inc
aaa
pop
sub
scas
or
mov
inc
jp
bt
pop
add
push
jmp
mov
jno
sar
mov
xchg
lret
loop
adc
fwait
pushf
xor
cld
je
or
push
lods
fcompl
pop
cmp
mov
sub
enter
test
ret
icebp
push
test
xchg
inc
pop
lea
sahf
push
rclb
jl
push
xorb
push
and
inc
push
cmpsl
fidivrl
or
negl
pop
ljmp
xchg
cmpb
sbb
test
mov
outsl
rcrb
sbb
stos
out
out
jo
jle
loopne
add
iret
ret
dec
ret
mov
or
sahf
fwait
cmpsl
popf
push
daa
out
sbb
lahf
inc
fcmove
cmp
loopne
add
dec
push
mov
jae
adc
decl
stos
xchg
xchg
lret
xlat
out
adc
cwtl
cli
frstor
pop
int3
loop
mov
lock
inc
push
mov
add
mov
roll
frstor
jecxz
mul
mov
mov
lock
cwtl
out
mov
imul
scas
shll
lea
mov
or
sar
call
outsb
mov
push
stc
cmpsb
pop
adc
add
jns
iret
mov
lea
sub
adc
lods
dec
inc
push
or
mov
adc
enter
out
fidivrl
xor
cmpsl
xor
out
mov
xor
fisttpll
jge
xchg
add
xor
in
jb
inc
mov
mov
and
filds
sub
repz
in
xchg
xchg
les
mov
lret
aaa
test
and
inc
ret
test
in
cmpsl
call
mov
dec
jnp
mov
jg
xchg
cmp
aaa
mov
int
dec
sbb
adc
mov
ror
pop
dec
adcb
mov
mov
loope
xlat
mov
mov
movsl
scas
jne
mov
movsl
adc
ja
pop
call
jecxz
fwait
or
jp
sub
pushf
inc
mov
xor
adc
lds
mov
mov
xchg
mov
scas
jne
mov
cmp
jo
mov
sti
mov
out
mov
jae
fisttpl
dec
jbe
xor
and
sbb
out
mulb
and
pop
sub
insb
pushf
mov
cmpsl
add
dec
fldl
inc
dec
cld
push
sub
outsb
test
mov
iret
loop
mov
xchg
and
aam
pop
xchg
sbb
mov
dec
insl
mov
mulb
xchg
push
adc
and
mov
xchg
xor
fucomip
cmc
punpcklbw
out
adc
das
test
mov
mov
dec
mov
dec
or
jl
movsb
ja
sarl
in
jo
fmull
scas
mov
or
fwait
mov
pop
addr16
cli
decb
out
in
lods
adc
push
sbbb
movsb
sub
subb
pushf
mov
jnp
daa
data16
sub
orb
add
mov
ret
lods
push
or
mov
adc
jmp
dec
repz
push
lods
adc
movsl
aam
mov
mov
jne
fwait
xchg
into
loope
dec
mov
inc
imul
or
ljmp
inc
shrl
pop
bound
call
scas
mov
mov
push
les
push
pushf
mov
mov
xchg
loop
sbb
jp
pop
cmp
divb
xchg
xlat
inc
jle
insb
mov
test
lcall
and
xor
mov
sub
jg
mov
mov
mov
popl
lock
fidivs
ljmp
xchg
fisttpl
inc
xor
sbb
fmuls
bound
lock
ror
push
jecxz
push
add
dec
add
dec
or
mov
cmp
aad
call
mov
pop
sbb
pop
imul
fsubl
mov
stc
jo
adc
lret
sub
test
movups
imull
cld
xchg
outsb
dec
mov
add
pop
outsb
jp
lods
cmpsb
out
aad
popa
test
jnp
pop
ds
add
pop
xchg
aas
or
cli
mov
fbld
xchg
lcall
or
or
cmp
and
je
add
daa
stos
and
outsb
push
fidivl
loop
scas
jp
jnp
stos
fstl
dec
jns
divb
mov
push
or
sub
add
movsl
pop
lret
dec
mov
jae,pn
imul
lds
data16
scas
rcr
mov
aam
push
xor
push
mov
negb
xchg
imul
jns
xor
dec
xor
inc
add
roll
push
jmp
movsl
lahf
sub
cmp
fwait
mov
mov
ds
lcall
pop
mov
mov
lret
rcrl
jo
pop
xchg
imul
xor
icebp
cli
lret
ss
fninit
int3
cltd
fcompl
xchg
jp
xor
gs
fcmovu
jno
test
arpl
xchg
xchg
enter
div
test
sbb
add
sbb
jmp
out
inc
test
push
sahf
mov
or
js
inc
push
add
sbb
daa
mov
xchg
or
lds
movb
jne
loop
lahf
test
pop
iret
mov
push
test
out
adc
nop
jbe
aas
pushf
int
out
iret
cmpl
mov
xor
inc
popf
mov
ljmp
out
jae
das
xor
stc
popf
lods
sbb
dec
inc
imul
add
xchg
call
push
jb
insl
cs
cs
pop
adcl
in
inc
cld
sbb
jae
mov
cmpsb
dec
loop
mov
inc
aas
out
push
sub
jb
data16
xchg
inc
sbb
hlt
cltd
outsb
test
xchg
mov
lods
adc
mov
bound
rolb
loopne
scas
js
push
xor
sub
bound
sub
sarb
jge
jp
fimuls
std
out
js
xchg
jmp
cmpsl
push
mov
int3
aas
sbb
mov
mov
jg
mov
push
pop
push
push
call
mov
in
pop
clc
lock
adc
xchg
in
mov
mov
cmpsl
mov
scas
daa
inc
sub
pop
insb
jge
pop
push
not
jecxz
adcb
test
cltd
test
xor
push
inc
xorl
pop
outsb
pop
out
xor
dec
fstpt
xchg
pop
leave
cmp
cmp
dec
out
push
mov
cld
jg
push
lods
enter
xchg
inc
and
jae
test
pop
rcr
add
cmp
cwtl
sbb
or
imul
inc
xchg
adc
enter
jns
repz
jecxz
lock
jle
and
and
xchg
add
push
dec
rclb
cmp
adc
jge
addr16
popf
mov
mov
jle
scas
out
fstl
dec
jno
pop
movsb
scas
into
fldl
mov
lahf
and
das
loopne
sub
test
call
and
xor
inc
sub
in
cmp
mov
insb
pop
cmp
or
dec
daa
fidivrs
xchg
pop
mov
mov
and
scas
xchg
push
mov
lods
inc
fcomip
jnp
cmp
ds
lret
push
loop
sub
std
jnp
fdiv
sbb
arpl
xor
sahf
aas
xchg
dec
mov
adc
and
mov
movl
into
popf
push
pop
sbb
xchg
movsl
lcall
imul
sub
mov
aad
mov
pop
and
nop
sbb
lds
xchg
les
push
pusha
xchg
push
into
jbe
movsb
in
ret
push
scas
and
jbe
xor
jo
icebp
jle
loop
push
adcl
incl
mov
sub
sbb
inc
insb
int
or
sub
pushl
pop
cmp
leave
fldl
jb
pop
push
cs
mov
lret
test
mov
xchg
rcll
and
rorb
sub
roll
cmc
cs
fnsave
imul
jg
xor
movl
cmp
jo
jecxz
dec
or
push
outsb
shl
insb
repz
popf
sub
cld
cltd
mov
mov
fildl
std
push
inc
jecxz
out
mov
rcl
sarl
hlt
mov
das
sarb
into
mov
push
icebp
flds
xchg
shrl
stos
push
xlat
add
cmp
push
jne
lock
pop
stos
mov
and
inc
sbb
xchg
clc
dec
outsb
repnz
pop
xor
cld
cmp
lds
fs
cmpsl
inc
mov
gs
dec
mov
das
addr16
fs
jecxz
sbb
xor
mov
cltd
stc
and
pop
push
es
in
add
aas
inc
pop
les
call
lret
and
and
mov
push
or
movsl
add
xor
or
adc
or
popa
in
cmpb
scas
mov
leave
xchg
pop
ljmp
into
lret
mov
adc
test
daa
out
pop
inc
inc
push
lahf
fcmovu
and
fidivrl
add
aam
test
mov
ja
in
push
in
xchg
jns
sub
xor
pop
mov
int
push
pop
cmp
push
je
cli
pop
test
push
test
pushl
xor
cld
cmp
or
adc
adc
or
mov
outsl
jle
sbb
inc
push
js
adc
and
out
xor
inc
lret
out
test
push
xchg
lods
mov
in
mov
pop
int
outsb
out
pop
xor
mov
sub
aas
fnstenv
cwtl
add
jmp
pop
incl
loop
ret
add
shll
jb
pusha
cmc
dec
jb
inc
sarl
pop
in
push
pop
cli
mov
addl
gs
jge
xchg
cmp
sbb
mov
adc
cmpb
daa
sti
mov
repnz
jg
inc
jne
push
or
imul
jl
pop
out
adc
mov
fcomps
jge
jle
mov
stc
nop
in
and
mov
inc
jge
lea
aaa
ljmp
lock
lcall
cmp
movsl
sbb
cmc
add
rcrb
and
mov
fcoms
jmp
jnp
xor
push
xor
sarl
loopne
not
cmp
add
pop
popl
or
test
inc
sbb
xchg
and
jb
xchg
dec
sbb
or
xchg
ja
add
adc
mov
mov
push
jge
fdivs
cmc
insb
inc
mov
faddl
pop
xchg
jne
push
or
pop
pop
daa
inc
pop
shlb
jo
adc
pop
int3
add
push
stos
push
loopne
pusha
aaa
ss
ss
pushf
mov
sub
mov
and
ss
mov
xchg
pop
loop
lods
xorb
ja
bound
cmp
cmp
loope
jo
xchg
jbe
dec
insb
cmp
push
sti
dec
and
sarl
mov
xchg
xchg
fdecstp
dec
lods
cmp
cwtl
adc
scas
pop
call
pop
les
push
sbb
add
mov
xchg
jne
pusha
dec
sub
faddl
push
out
dec
je
enter
jp
jbe
push
mov
repnz
mov
inc
test
addr16
movsb
adc
dec
sbb
into
insl
addr16
mov
pop
or
mov
pop
scas
push
jae
leave
stc
in
lcall
aas
lahf
movsl
push
push
cmpl
in
loopw
jo
movsb
lock
mov
mov
dec
add
inc
jno
sbb
jmp
xchg
pushf
cmp
fxch
add
lret
ret
xlat
gs
jb
add
out
insb
andb
fs
xor
cwtl
xor
scas
xchg
mul
aam
loopne
jns
rolb
xchg
imul
ds
dec
inc
popf
dec
fidivrl
pop
aas
ljmp
jl
xchg
mov
mov
dec
mull
movsl
adc
inc
ss
mov
fldcw
into
bound
xchg
movsl
and
inc
jg
scas
dec
or
mov
adc
sbb
out
add
in
inc
adc
adc
les
lcall
faddp
js
inc
mov
into
sbb
mov
inc
jle
or
push
out
add
repz
mov
mov
jns
xor
inc
fwait
push
xchg
out
mov
out
in
mov
daa
fdivr
or
xor
les
fwait
jmp
jp
mov
dec
jb
divl
ror
fidivrs
sub
inc
fsts
popl
inc
cmp
pusha
jl
sahf
divb
adc
pop
inc
aam
mov
mov
dec
jmp
fistps
icebp
stos
mov
xchg
jmp
mov
mov
push
daa
mov
dec
jge
in
mov
pushf
xchg
push
or
add
ret
std
cmp
inc
addr16
xchg
push
or
dec
push
jnp
fcompl
les
into
sbb
outsl
cli
js
mov
negb
lock
shlb
lods
jne
test
pop
loop
mov
jle
mov
mov
into
xor
dec
pop
mov
dec
pop
or
fstl
and
add
shr
test
stos
xor
mov
cmp
mov
sbb
jecxz
ret
or
mov
and
xlat
sti
sarl
mov
adc
jmp
scas
push
mov
pop
push
jne
ret
mov
mov
negb
in
or
inc
adc
std
lds
fldcw
loop
lock
pop
jp
jge
pop
fstpl
stc
je
rol
lahf
or
rcrl
sbb
fstpl
jge
push
scas
fs
popa
cld
lret
jo
sbb
push
test
dec
mov
xlat
icebp
fwait
addb
mov
movsb
mov
adc
mov
sbb
mov
fcmovnu
and
aas
stos
ret
sbbb
in
add
stos
enter
xchg
sbb
mov
cmp
push
out
sbb
not
pop
jae
xor
stos
xchg
xchg
pop
mov
push
sbb
js
aad
add
mov
addr16
inc
shrb
icebp
push
mov
ret
lock
xor
mov
jge
sbb
ljmp
inc
mov
fcmovnb
insb
sbb
out
ficomps
xchg
push
fcmovnb
add
sbb
stos
mov
lret
or
jmp
scas
dec
ljmp
cmp
lret
divb
dec
mov
xchg
xchg
rcrl
xor
sub
out
or
and
adc
pop
add
cmp
shll
ljmp
xor
or
loopne
jle
cmp
leave
out
xor
scas
cltd
push
pop
pop
add
lcall
jmp
adc
pushf
mov
test
push
xlat
pusha
xlat
loopne
incb
inc
dec
sti
add
shrb
ret
xor
sub
loopne
and
scas
jg
sti
cld
pop
jno
mov
outsb
imul
movsb
inc
cmp
insl
xchg
rcrb
stc
les
imul
notl
in
mov
mov
cs
aam
clc
test
mov
in
andb
ja
pop
enter
push
rcl
ljmp
cmp
push
xor
push
add
mov
dec
in
add
cmpsl
fcoms
xor
pop
sbb
ss
mov
mov
jmp
xlat
jbe
xor
clc
lcall
loopne
cli
mov
jg
bound
jmp
stos
cmp
mov
xchg
mov
cmc
enter
xchg
das
movsb
popa
sub
or
push
mov
or
fdiv
psubq
daa
dec
pop
sbb
lock
shll
pop
inc
subl
cmc
sbb
repz
imul
lahf
enter
mov
shrb
fcoml
pusha
bound
fistpll
in
outsl
jg
test
sub
sarl
jne
mov
mov
test
pop
pop
xchg
xchg
and
in
pop
xor
data16
jo
lcall
addr16
lret
jne
sti
test
xor
std
push
pop
pop
adc
adc
cli
cmp
mov
adc
cmpsb
lret
cmp
dec
add
push
cmp
call
jle
lock
mov
xor
outsl
sbb
icebp
hlt
sub
adcl
out
pop
or
push
inc
push
aaa
jno
outsb
outsb
int
mov
and
mov
pop
out
repz
out
clc
int
push
test
lahf
mov
lods
add
fidivrl
adc
push
pop
mov
xchg
lret
rorb
xorl
sub
pop
inc
mov
je
inc
pop
and
adc
push
cmpsb
adc
movsb
cld
xor
add
movsl
mov
jge
xlat
jo
pop
push
in
add
push
sbb
adc
or
and
jg
push
dec
dec
pushf
mov
popf
lods
push
adc
mov
cld
inc
jecxz
addps
inc
adc
arpl
ss
std
or
mov
cmp
and
jne
jb
or
mov
push
cld
sahf
mov
aas
or
test
sahf
gs
adc
adc
xchg
sbb
sarl
movsb
and
in
jnp
xchg
in
adc
pop
add
dec
mov
hlt
pop
sub
div
cwtl
dec
push
popl
jae
xor
mul
pop
adc
andl
xchg
sarb
out
mov
and
push
pop
or
repz
mov
sbb
push
and
mov
jne
push
addb
push
stc
icebp
es
pop
jle
xor
push
fmull
or
aaa
jl
out
inc
xchg
jge
jo
cmpsb
adc
or
sub
sbb
cmp
pusha
xchg
jnp
clc
aad
je
dec
xchg
lahf
cli
cmpb
clc
in
rorb
cmp
mov
lods
loop
push
cmpsb
mov
lock
add
cmp
adc
repnz
ret
pop
sub
pop
rclb
std
push
and
push
adc
pop
mov
xchg
lcall
lret
dec
insl
add
je
repz
adc
xor
loopne
lods
out
in
lahf
fildll
shrb
loope
jnp
fstp
jg
ret
push
pop
in
clc
rcll
jae
je
scas
lods
popa
adc
sbb
mov
pop
push
repz
inc
dec
xchg
push
xchg
lret
repz
jbe
sub
sub
dec
mov
mov
dec
mov
mov
or
mov
push
sbb
pop
mov
int3
sub
jle
jge
out
mov
adc
or
push
lea
lret
jnp
pop
pop
or
cmc
sarb
jae
dec
push
iret
pop
in
adc
add
adc
xchg
or
stos
arpl
rcl
cmc
push
loopne
jg
inc
pop
push
cmpsl
sbb
jb
add
adc
in
add
in
stos
jns
lahf
push
pop
and
les
and
adc
outsb
dec
rorl
loope
adc
push
xchg
imul
pop
pop
sbb
sub
out
jmp
rcll
bnd
mov
xor
iret
xlat
jo
mov
sahf
mov
cmc
test
jp
mov
mov
mov
or
movsl
out
ljmp
loopne
pushf
adc
mov
push
adc
sbb
ret
ss
jbe
mov
mov
fcoml
loope
jae
pop
stc
sahf
dec
and
inc
xchg
jne
test
push
mov
aaa
mov
pop
cli
jno
sub
mov
pusha
lods
push
mov
pop
aam
adc
add
fisubs
push
lcall
int3
or
loop
cmp
cwtl
jo
push
pop
cs
in
cltd
xor
bound
dec
jb
pop
or
in
xor
mov
and
icebp
fwait
xchg
xor
cmc
nop
mov
push
mov
nop
xchg
das
fs
adc
or
fldcw
cmp
push
push
fs
lcall
sbb
aaa
les
or
sahf
adc
xor
xchg
jge
xchg
mov
inc
insb
hlt
push
scas
mov
iret
hlt
xor
insl
and
jne
inc
cld
mov
or
mov
test
jne
lea
mov
fnsave
sub
gs
lret
xlat
imul
popf
pop
inc
cmpsl
push
cmp
inc
dec
pop
gs
xlat
inc
std
jmp
repnz
lods
in
daa
inc
fcomi
loopne
mov
jge
push
mov
out
xchg
mov
push
data16
and
xchg
adc
add
scas
clc
pop
scas
adc
push
mov
test
push
sti
dec
jle
mov
sbb
sbb
arpl
push
ret
rcrl
imulb
cmpsl
push
and
jge
pop
inc
sub
dec
cmc
and
inc
out
popa
inc
and
pusha
sbb
mov
jl
mov
cmp
je
in
movsb
call
xlat
daa
dec
jbe
call
rcrb
pop
pop
shlb
and
mov
daa
xor
popl
jae
and
aad
ficomps
scas
inc
fsts
pop
lret
mov
idiv
pusha
and
hlt
stos
stos
pop
and
aas
xor
and
stc
dec
xor
sub
stos
jbe
out
outsb
cmp
or
loopne
sbb
testb
pusha
cmp
sbb
push
or
pop
inc
inc
mov
subl
shr
test
xor
and
jecxz
dec
push
pop
mov
gs
mov
popf
cld
sbb
jp
cmp
stos
stc
mov
aad
negb
xlat
stos
pop
mov
das
test
cs
xor
and
sub
xor
inc
mov
and
mov
adc
je
pop
inc
cmpsb
xchg
dec
xor
fadds
stc
sub
push
dec
inc
fstpt
cmpsb
jg
leave
push
inc
out
daa
icebp
inc
ja
andb
ret
push
dec
pop
pop
jge
sbb
xor
test
xchg
or
inc
insl
mov
daa
adc
sbb
fisttpll
mov
rorl
jl
jo
sarb
stos
cmp
xor
pop
or
jmp
jb
ffree
cmc
sub
pop
push
mov
scas
jmp
divb
add
inc
inc
ja
pop
shll
jge
inc
clc
lcall
xor
and
lcall
ret
push
sar
cmp
push
enter
and
sub
xchg
clc
das
fdivl
mov
push
fmull
in
mov
xchg
sbb
ljmp
xor
sub
xchg
cmp
jb
dec
out
xor
adcl
cmp
sbb
mov
or
mull
fsts
popf
repnz
pop
cmp
out
pop
aaa
shll
mov
loope
jb
call
repnz
cs
repz
adc
popl
or
dec
push
inc
pushf
pop
sahf
into
test
testb
cwtl
insb
pop
xor
shlb
mov
cmp
je
jo
sub
xchg
xchg
push
sbb
enter
cmp
xchg
pop
dec
cli
push
inc
fs
cli
mov
hlt
stos
lcall
pop
fs
leave
adc
adc
and
pushf
ret
rcll
or
iret
xchg
xchg
cmp
mov
icebp
xchg
mov
mov
int3
insb
fsubs
push
adc
xchg
pop
and
xor
popf
mov
xchg
and
lods
jne
adc
sbb
out
adc
data16
adc
sbb
cli
in
ja
data16
mov
push
pushf
dec
jge
cs
xchg
bound
mov
xchg
add
push
inc
dec
pop
test
inc
es
pop
push
and
test
xor
xchg
or
out
and
push
push
mov
inc
adc
leave
cmp
sub
icebp
add
cmc
out
mov
std
cli
fstl
or
loope
fimuls
pop
pop
or
push
add
cmp
popa
dec
jecxz
mov
test
jecxz
fcoms
dec
mov
sti
mov
xchg
or
xchg
jmp
mov
pushf
cs
aam
jbe
jnp
push
sti
sub
dec
daa
cltd
add
int3
dec
out
loopne
adc
imul
pop
out
repz
push
call
push
dec
movsl
and
rcrl
pop
mov
rcrl
add
jno
mov
sub
bound
xor
rcll
mov
xor
adc
fiadds
cmp
rcrb
notb
bound
dec
aad
inc
and
or
test
cmpsb
mov
shll
dec
fisttpl
ljmp
mov
push
in
inc
jp
int
jecxz
lcall
dec
push
xchg
nop
pop
movsb
fnstsw
stos
add
adc
mov
daa
pop
andl
je
add
out
stos
mov
popf
mov
out
jno
call
outsl
ds
mov
gs
orb
lds
or
and
sbb
cmpsb
mov
or
xor
mov
cmp
mov
xor
insb
and
push
js
stos
mov
and
lcall
iret
shll
jle
mov
outsb
push
xchg
mov
cmpb
cmp
mov
daa
pop
fs
add
xor
jmp
xchg
mov
and
bound
cmpsb
dec
inc
insl
enter
dec
and
sub
inc
insl
inc
xchg
jae
adc
imul
or
mov
dec
pop
inc
adc
mov
lret
cmp
movsb
call
arpl
xchg
xor
mov
sti
cmp
imul
sti
push
imul
jae
lods
xchg
xor
lock
insb
fucomip
imul
adc
adc
mov
xchg
pusha
adc
dec
inc
xchg
das
and
sbb
sarl
std
fwait
add
js
add
and
mov
pushf
pushf
dec
pop
xor
push
lret
add
repnz
sbb
mov
aas
mov
ljmp
sahf
stc
push
and
sbb
xor
testl
fisubl
sahf
movsb
sbb
adc
inc
dec
pop
jno,pn
cmpsb
stc
sbb
mov
call
shlb
and
adc
cltd
push
mov
pop
inc
lea
mov
sub
push
mov
je
xchg
xor
icebp
xor
pop
fldl2t
pop
xchg
jae
adc
or
fwait
ret
loop
arpl
fcoms
adc
fistpll
dec
and
or
cs
dec
jecxz
jg
mov
pop
loop
pop
std
imul
cmp
push
push
imul
jl
popf
stos
pushf
xchg
inc
mov
xchg
push
loope
jns
add
pop
roll
andb
sub
dec
dec
mov
mov
sbb
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
inc
cs
jp
or
jp
movsl
aad
cmp
mov
in
into
out
dec
inc
dec
sbb
xchg
inc
out
mov
push
cmpb
cmpsl
mov
lods
jl
xor
in
fwait
jae
sub
jmp
ret
pop
test
into
cmp
and
lret
imul
push
bound
lock
jg
mov
add
sub
icebp
mov
adc
movsb
xchg
sub
xchg
es
pop
ss
mov
sub
pop
push
and
jle
popa
mov
dec
daa
cwtl
dec
das
jg
fidivrs
iret
sysenter
sbb
stc
loope
ljmp
insb
iret
aad
mov
out
aaa
loope
lret
mov
inc
or
mov
subb
jmp
roll
or
sbb
lock
mov
pop
call
mov
adc
xor
test
inc
lret
call
sbb
fwait
cmpsb
shll
xchg
pop
sub
jmp
cwtl
lcall
sub
mov
xor
and
ds
jnp
data16
rcr
jp
xchg
fcoml
dec
pop
inc
or
xchg
test
clc
add
cwtl
adc
or
mov
jecxz
and
sub
inc
in
popf
dec
int
lods
sbb
mov
ret
mov
in
je
mov
mov
in
jmp
jecxz
adc
jecxz
xor
aam
jnp
mov
mov
int3
and
pop
mov
insb
push
cmpsl
test
inc
mov
push
test
sbb
lds
in
mov
enter
rcrb
pop
push
out
movsl
movsb
loopne
jne
push
sbb
mov
xor
cmpsl
inc
rolb
repnz
ss
daa
lahf
rolb
bnd
ret
pop
jl
loop
jl
mov
cmp
xchg
outsb
pop
movsb
aam
stos
aaa
sub
cmp
sbb
cmpsb
les
and
ret
outsl
fisttpll
xor
mov
cmp
call
fidivrl
inc
ds
and
add
adc
arpl
mov
aaa
stos
fstp
mov
cmp
sbb
pop
and
fsubr
mov
sbb
mov
xchg
in
add
mov
int
sub
jns
or
xchg
sbb
pop
loopne
adc
xor
mov
fidivrl
cmp
pop
xor
xor
jge,pt
das
aad
xchg
mov
cmpsb
mov
out
mov
inc
mov
dec
lock
lock
bnd
xlat
xchg
imull
push
xchg
lcall
inc
or
add
and
dec
loope
clc
and
arpl
or
mov
call
sahf
scas
add
xor
leave
inc
pop
arpl
jecxz
in
jmp
lds
test
test
mov
inc
push
dec
iret
icebp
add
in
jo
and
sub
push
cmp
jle
jl
outsb
ds
pop
jle
lahf
dec
notb
sub
sbb
or
jbe
popf
cmpsl
outsl
jmp
dec
push
sti
aaa
push
repnz
dec
arpl
add
cwtl
mov
out
and
ja
sub
in
mov
mov
cmc
int3
sub
push
fisttps
stos
dec
or
adc
aaa
dec
inc
movsb
into
in
jle
and
and
jo
sub
pop
iret
inc
jle
lret
jae
or
jb
mov
mov
push
adc
in
xorl
jecxz
or
or
sarb
sbbb
and
aas
sahf
js
call
subl
and
jl
cmp
pop
lods
leave
or
ret
push
das
popf
cmpsb
aaa
lret
lea
fldl
pop
push
in
jge
mov
pop
push
scas
stc
in
pop
movsl
hlt
inc
outsb
mov
sbb
out
mov
mov
adc
in
jge
mov
or
imul
fsubrs
push
xchg
daa
jbe
call
push
dec
sbb
or
test
dec
mov
mov
repz
xor
add
jmp
mov
or
in
fldcw
aad
jge
stc
mov
sbb
je
cmp
adc
mov
dec
sbb
jnp
cltd
loopne
jmp
enter
sbb
xlat
pop
jecxz
push
outsb
getsec
cltd
lds
pop
rcl
cmc
xor
sub
push
xor
jbe
or
mov
fwait
sbb
inc
roll
lahf
stos
jne
mov
orb
fistpll
mov
xor
adc
out
jb
cli
and
mov
inc
dec
and
decb
ror
sbb
adc
es
mov
jo
push
ss
dec
iret
sub
add
ja
pusha
into
out
pop
xchg
outsl
lods
sbb
jns
adc
sbb
repz
xor
outsb
rclb
push
lret
out
cld
lds
test
ficoms
nop
mov
das
xchg
lcall
lret
rorl
stc
sub
xor
push
mov
xlat
movsl
xor
shlb
add
mov
jmp
push
mov
subb
cmp
mov
fildll
or
test
ljmp
sub
xor
jg
xor
mov
sbb
xor
shll
sbb
adc
das
js
sub
and
inc
sub
xor
or
adc
push
cltd
adc
push
dec
cmp
filds
sbb
sbb
push
mov
loopne
stc
and
xchg
jo
clc
cmp
lret
scas
mov
les
ja
imul
dec
push
lcall
aam
jmp
aas
fsubrl
push
cmp
jns
int
dec
mov
cmpsl
mov
dec
inc
cmpb
cwtl
je
pop
sub
jp
xchg
cltd
jmp
call
sub
xchg
sub
mulb
fldcw
jl
stos
mov
and
clc
adc
mov
out
sub
cmp
nop
pop
in
bound
cmpsl
aaa
sbb
jno
inc
mov
jb
inc
dec
sbb
popf
ja
dec
mov
jae
jg
jg
sahf
xchg
notl
ss
push
loopne
les
fisttpl
cmp
arpl
loopne
pusha
in
pushf
movsb
cmp
psllw
inc
mov
ss
or
into
jle
add
xor
inc
mov
lock
inc
or
rclb
shl
and
xchg
int3
loope
xchg
jns
mov
ret
les
insl
shrb
js
dec
xchg
jmp
jo
jno
je
xchg
enter
xchg
lea
int3
pop
imul
push
insl
lods
cmc
movsb
imul
lods
pop
fimull
cmp
out
insb
inc
iret
and
insb
out
leave
scas
sbb
repz
int
pusha
addr16
rcrl
out
outsl
add
repz
movsb
push
xorl
push
pop
mov
inc
push
pop
push
shl
add
xchg
dec
scas
fidivs
cmp
sbb
mov
mov
xor
pop
lret
mov
inc
add
or
pop
test
insl
push
loopne
nop
push
lods
pop
stc
idiv
mov
dec
xchg
hlt
mov
mov
push
xchg
mov
in
adc
jecxz
daa
inc
sbb
xor
cmp
fwait
pop
out
jmp
push
and
ds
push
push
out
inc
or
adc
rclb
call
push
mov
stos
or
ror
movsl
cs
mov
imul
mov
data16
adc
rolb
orl
sbb
ror
and
dec
out
insb
lea
and
mov
repz
dec
dec
mov
inc
inc
mov
scas
ja
cmpl
push
cmp
inc
es
lods
loope
fcoml
push
xor
scas
les
fistpll
sbb
mov
arpl
cmpsb
pop
mov
or
jmp
hlt
iret
push
cmp
mov
je
push
js
cs
pop
nop
sbb
jle
filds
lahf
or
sbb
push
mov
arpl
mov
scas
pop
mov
mov
lret
pop
fistl
and
or
fwait
pop
jne
mov
test
xchg
cmp
mov
cmp
mov
cmp
or
ljmp
movsl
xlat
sbb
fadds
mov
int3
lock
arpl
movsb
or
out
imull
xor
pop
sahf
jecxz
in
outsl
cmpsl
jl
std
mov
rorl
xor
add
cmpl
fwait
push
cld
add
xchg
xor
outsb
add
popa
dec
cwtl
adc
rcrl
sub
bound
pop
cs
mov
addb
push
sbb
or
jns
in
loop
ret
mov
popf
mov
sti
or
cld
inc
adc
pusha
mov
cmp
adc
push
std
repz
mov
jle
in
movsb
rcrb
mov
and
int3
pop
jno
xchg
or
rorb
sbb
shl
addr16
mov
jnp
jp
int3
aaa
adcb
jecxz
inc
mov
fistl
lods
shl
aad
cwtl
mov
daa
arpl
mov
pop
aas
subb
jne
repnz
rcr
jge
adc
jns
in
and
jnp
and
xlat
lock
lds
mov
or
mov
mov
sbb
sub
pop
xchg
filds
mov
push
mov
xor
push
inc
lock
orb
pop
dec
fbld
fimull
adc
lea
stc
mov
push
nop
lret
cmp
fcomps
pop
mov
pop
sti
sbbb
fwait
int
pop
in
gs
jnp
xchg
add
inc
icebp
mov
in
add
stos
in
loopne
push
dec
cs
test
into
lea
jae
inc
leave
sub
or
jle
inc
inc
jmp
in
ret
lock
test
js
push
insb
lods
xchg
js
je
xchg
dec
aam
pusha
dec
push
add
xchg
int
pop
mov
mov
lods
and
push
jbe
outsb
pop
in
sbb
ficoml
outsb
repz
inc
jg
sub
aam
into
push
pop
mov
fs
test
insb
divb
fnstsw
pushf
push
jns
push
lahf
pop
push
int
push
outsb
negl
inc
sub
jp
incb
or
inc
cmp
je
adc
xchg
ljmp
shlb
pop
fldt
xlat
scas
dec
sub
shrl
pop
stc
jecxz
mov
xchg
and
rcrb
cmp
mov
lret
mov
adc
pushf
test
sbb
sbb
fildl
gs
pop
sbb
loope
lods
jp
adc
iret
push
sarb
push
mov
xor
out
in
out
push
scas
push
notb
jns
add
push
or
xorl
pusha
pop
mov
sbb
sub
adc
push
icebp
rcrl
mov
mov
or
mov
sub
bound
cmp
scas
cltd
outsl
incb
out
stos
popf
dec
sbb
lcall
xchg
test
jp
mov
jmp
pop
push
jecxz
mov
add
pop
push
push
pop
out
mov
push
movsb
jecxz
dec
inc
jg
leave
and
adc
cld
jno
adc
std
and
jp
mov
cmp
repz
testb
xlat
into
stos
mov
xchg
out
push
inc
stc
dec
mov
cld
ss
push
pop
pushf
xor
inc
xchg
pop
cli
stc
insb
ljmp
jno
pop
pop
out
addr16
push
and
shl
mov
and
xchg
loopne
fcomp
pop
inc
jb
xor
out
mov
fidivl
sbb
ja
cltd
push
fdivrl
xor
imul
in
fcompl
in
clc
pop
push
adc
bound
jnp
sub
aaa
repnz
fwait
push
jno
or
jg
push
cmp
aad
test
mov
pop
inc
in
std
es
mov
mov
mul
xor
push
push
xchg
add
daa
dec
jle
and
das
mov
mov
push
iret
popf
int3
out
jo
out
jbe
push
testb
and
xorb
outsl
xchg
sbb
divb
movaps
mov
ret
fistps
ljmp
push
xchg
mov
pop
hlt
pop
push
fidivrl
nop
popa
jle
jbe
roll
cltd
dec
push
cli
cmpl
stos
ljmp
inc
xor
lea
push
xor
inc
mov
adc
gs
hlt
ret
test
jg
aaa
testl
in
mov
stos
scas
dec
ds
repnz
dec
clc
sbb
dec
sbb
mov
enter
xchg
xchg
clc
cwtl
in
inc
sbb
xchg
bound
and
mov
dec
test
mov
shrb
inc
iret
xor
cmpb
out
mov
sarl
pop
and
mov
rorb
into
test
push
push
jno
movsl
in
jp
dec
test
adc
jo
push
xlat
in
cld
push
cmp
idivl
adc
xchg
jle
imul
loop
sbb
bound
fiadds
inc
xor
cmp
sub
sbb
rdpmc
out
jle
jae
ret
pop
sbb
nop
or
xchg
cmc
inc
daa
cmp
jl
mov
bound
cmp
mov
sarb
lds
jnp
jl
test
fs
jne
mov
mov
popf
fucom
mov
pop
sbb
fmuls
insl
movsb
and
inc
pop
arpl
hlt
mov
sub
nop
ret
je
gs
xchg
xchg
xchg
adc
or
inc
loope
insl
sbb
mov
int
add
stos
inc
lods
push
lret
cltd
repnz
aam
cltd
into
arpl
fs
xchg
out
inc
dec
jecxz
loopne
movl
or
add
push
scas
loope
insb
or
lea
outsl
add
daa
sbb
mov
sbb
shl
and
daa
fcoms
xchg
testl
pop
lods
pop
mov
jp
adc
ds
xchg
adc
movsb
sbbl
in
fcmovnb
sarb
in
jns
add
xor
push
test
xchg
adc
arpl
rorb
xchg
jnp
inc
mov
xchg
mov
sti
imul
xor
jg
clc
lds
scas
lea
jo
cmp
lock
out
mov
rcrl
adcl
mov
gs
out
aam
es
pop
popf
inc
dec
je
je
scas
hlt
pop
add
push
ss
stos
jbe
push
lds
flds
and
pop
xor
xor
aaa
testl
ret
sbb
mov
arpl
jb
mov
jbe
xorb
daa
cld
push
push
mov
cwtl
and
aas
pop
call
mov
adc
out
in
jnp
test
cltd
or
xchg
jge
dec
cmp
pop
mov
imul
int3
xor
gs
sbb
test
rcll
jbe
push
add
and
cmp
pop
ljmp
call
mov
or
gs
push
jle
stc
mov
push
xchg
es
movsb
fldenv
loopne
lcall
jmp
xor
icebp
xchg
jae
call
lahf
cld
adc
je
push
mov
fdivp
mov
aam
out
adc
jb
jbe
sbb
sub
imul
push
mov
daa
mov
xor
xchg
and
fimull
scas
dec
xchg
dec
mov
sub
jae
sti
ret
addb
mov
out
scas
idivb
inc
jb
push
das
aas
lods
into
or
bound
sbb
pop
inc
dec
les
decb
outsl
lods
xchg
fimuls
jp
sub
jne
rorb
dec
loopne
insb
lods
adc
sahf
dec
fdiv
les
inc
out
cli
xor
les
and
xchg
jmp
nop
ffree
sub
mov
mov
pop
into
xchg
inc
jnp
cli
or
jbe
add
stc
popf
xchg
xchg
sbb
mov
jg,pt
jno
inc
inc
add
mov
outsb
mov
xchg
adc
les
pop
aaa
ljmp
lcall
push
add
aad
cmpb
jne
stos
ret
popa
mov
mov
add
jecxz
cs
or
cmp
or
loop
movb
mov
mov
insl
mov
out
aas
pop
mov
test
lods
dec
sub
mov
imul
out
mov
adc
and
fs
inc
xor
stos
insb
xor
fsubl
call
mov
mov
into
sti
imul
pop
push
cld
push
inc
inc
pop
sub
jl
arpl
inc
push
test
subb
cmp
fstpt
inc
xchg
mull
repz
inc
add
stos
aaa
mov
popf
pop
cmp
mov
out
sbb
mov
jae
pushf
mov
jp
xor
cmc
xor
add
mov
adc
inc
and
add
adc
jbe
cmp
sbbb
mov
and
es
test
inc
adc
les
push
movsb
mov
imul
cld
sbb
and
mov
test
into
push
pop
rclb
mov
adc
inc
jl
out
or
push
jno
cmpsl
sub
sahf
ja
adc
jmp
mov
sub
shrb
nop
sbb
dec
mov
out
jne
shrl
sbb
movsb
mov
leave
jg
jae
or
push
pop
pusha
daa
enter
sbb
or
mov
mov
adc
push
jnp
jle
pop
cld
leave
out
inc
sub
imul
sub
mov
xchg
xlat
or
jg
add
dec
pop
sub
mov
enter
jns
lea
in
jg
fistpl
rcr
cmp
cld
repnz
rolb
scas
push
fcoml
jg
cmpsb
pop
fcmovu
je
ret
shr
scas
js
mov
jne
dec
mov
xchg
cmp
das
add
jg
in
jb
adc
xchg
xchg
mov
mov
jecxz
sbb
xchg
in
pop
or
add
rclb
call
mov
and
inc
add
insl
mov
adcb
push
inc
pop
xor
rcrb
dec
mov
jnp
std
lds
jno
jge
lds
xor
scas
ficomps
and
frstor
push
lock
test
sbb
mov
mov
mov
leave
and
je
stos
imul
cmp
cwtl
mov
push
mov
in
popa
daa
lds
inc
or
mov
rcr
push
push
cmpsb
imul
pop
adc
sarb
sub
aaa
lods
mov
pop
push
std
cmp
mulb
ret
in
fdivrl
sar
in
sbb
push
push
cli
cmp
outsb
repnz
out
lret
ja
notb
ss
push
inc
scas
aas
fstp
xor
jb
iret
loopne
movsb
cmp
test
subl
adc
rorl
xor
sub
jle
arpl
sub
mov
fstps
popa
xchg
mov
ds
sti
xor
fsubp
xchg
sbb
sbb
bswap
adc
adc
mov
and
rorb
loopne
dec
fnsave
popf
cmp
rclb
pushf
inc
arpl
call
into
xchg
aam
mov
push
inc
movsl
clc
and
hlt
push
jp
nop
ret
fisttps
dec
cmp
xlat
rclb
and
sahf
adc
or
xor
and
adc
push
lods
imul
push
test
lret
jno
add
mov
lods
or
daa
mov
pop
push
popf
jnp
mov
inc
lret
push
push
inc
in
movsb
ss
pusha
ds
outsl
adc
daa
mov
orl
movb
inc
xchg
add
scas
cmp
fs
pop
imul
rcrb
cmc
loopne
cmc
int
jnp
xchg
popa
enter
hlt
sbb
dec
ljmp
int
jg
jns
adc
inc
mov
or
push
xchg
inc
repnz
data16
and
ret
gs
dec
mov
mov
mov
jge
stos
inc
sbb
jecxz
pusha
and
fsubs
mov
add
and
sbb
jb
outsl
push
andb
outsb
shr
mov
xor
sbb
sub
mov
stos
int3
call
ja
xor
push
dec
mov
insb
in
jp
ljmp
add
andl
arpl
push
lret
arpl
jns
jge
push
hlt
aas
cmc
out
imul
ret
dec
mov
ret
lods
in
sbb
jnp
push
inc
bound
loop
mov
and
xchg
jp
fisubl
push
and
mov
and
and
mov
pop
fisubrs
cmp
jns
mov
mov
xlat
push
dec
movsl
cmpsb
pop
int
xor
test
sahf
pop
popf
iret
test
mov
adc
jecxz
cmp
mov
out
dec
outsb
and
loop
cmp
jne
bswap
mov
jecxz
rcrb
cmp
or
pop
xor
jnp
add
inc
fistps
fildll
adc
test
add
sbbb
push
cltd
xor
mov
pop
clc
mov
in
aad
icebp
adc
sub
or
push
push
add
dec
sbb
lea
jl
std
mov
adc
jl
fs
mov
stc
add
arpl
xchg
inc
and
or
xchg
mov
and
loop
notb
fmuls
lock
pop
lahf
xor
inc
xor
fldl
and
out
jmp
lods
jg
cmc
mov
inc
in
addr16
mov
and
mov
push
jae
pop
sbbb
dec
inc
loopne
mov
cld
dec
inc
mov
dec
bound
inc
mov
cmp
pop
jns
fimull
dec
jo
mov
or
mov
jmp
fsub
pop
dec
shlb
and
bound
pop
ror
pushf
outsl
inc
arpl
or
push
mov
popf
inc
cmpsb
outsb
pop
std
mov
xor
lods
pop
and
scas
seta
lret
jp
adcl
lcall
xchg
ret
xor
add
int3
pop
aad
jns
cmpsl
add
jmp
lahf
sbb
ret
mov
jb
cmp
in
jmp
jae
pop
outsb
adc
outsb
mov
jo
enter
sahf
ret
adc
rcll
mov
lcall
fildll
shl
fisttpl
sbb
sti
xchg
mov
dec
sahf
mov
fdivrs
shl
cmp
mov
insl
xor
fisubrl
jns
outsb
outsl
loop
and
imulb
das
cmp
cmp
test
add
or
lea
or
or
out
lret
jecxz
dec
test
shrb
push
aam
int
inc
sub
xchg
cwtl
aas
cmp
jb
subb
or
addr16
cmp
cmp
dec
nop
xor
fwait
dec
jecxz
lea
fistps
add
in
mov
clc
fcmovbe
push
leave
test
pushf
cs
mov
aam
mov
out
jg
and
mov
xchg
and
push
xchg
jnp
add
mov
cld
pop
sbb
movsb
xchg
popa
cwtl
cmpsb
xchg
in
sub
adc
jno
cmpsl
and
daa
push
lcall
dec
mov
lret
hlt
or
aas
test
ret
int
jb
dec
lock
mov
sub
leave
mov
sbb
xchg
stos
mov
sbb
pop
mov
cltd
sbb
cmp
inc
movsl
mov
je
and
push
jp
std
in
push
scas
pop
pushf
aam
test
in
pop
ret
cmp
cmp
fidivrl
xchg
ja
imul
frstor
sub
mov
cmp
aad
cli
push
mov
cltd
push
arpl
pop
mov
cmp
fwait
sbb
outsl
dec
sbb
out
popf
inc
jecxz
adcb
outsl
push
cmp
icebp
xchg
outsl
dec
enter
mov
push
cwtl
out
in
test
and
jnp
ljmp
dec
rcrb
xor
shll
fsts
fsubl
sub
roll
fidivs
repnz
das
mov
jb
outsl
arpl
mov
mov
and
mov
jecxz
scas
aad
stos
loope
pushf
xchg
lods
cmp
mov
orb
adc
cli
iret
inc
pop
imul
inc
insb
in
jle
cmpb
sarl
and
mov
mov
rolb
pop
sub
cmp
addr16
push
enter
hlt
sbb
jb
jp
mov
in
sbb
das
aad
dec
lahf
enter
pop
iret
inc
popa
adc
xchg
fisubrs
loop
add
dec
pop
cmpsb
sti
pop
push
cli
xor
mov
scas
add
insl
cltd
ds
imul
test
cli
sub
repnz
adcb
into
pusha
push
dec
add
inc
shrb
sahf
daa
sti
cmpsl
daa
popa
dec
and
jnp
mov
es
loopne
push
xchg
in
pop
daa
iret
loope
arpl
call
out
bswap
push
addr16
testb
xor
ja
inc
fmuls
mov
es
ror
cmpsl
inc
pop
sti
xor
loop
scas
jp
mov
jecxz
sbb
lods
mov
sbb
add
fistl
mov
cmp
fbstp
adc
icebp
and
es
sbb
push
pop
sub
xchg
add
mov
or
jmp
cmc
cmp
dec
mov
xor
das
out
arpl
leave
add
fisttpl
mov
imul
jnp
inc
dec
daa
sar
or
stos
or
popf
lods
inc
pusha
mov
or
rolb
lretw
sub
ret
mov
mov
jp
jae
jbe
add
push
inc
in
sbb
adc
fcmovbe
dec
push
mov
push
add
mov
mov
adc
rcrl
das
push
mov
in
call
jmp
rolb
sbb
mov
or
sbb
mov
cmp
addl
add
jbe
mov
mov
out
outsl
dec
xchg
daa
or
pop
imul
lock
repnz
sbb
push
push
fidivl
pushf
mov
jns
push
mov
push
in
es
aad
ret
ds
mov
loopne
sub
lds
iret
fisttpl
xchg
push
xchg
mov
pop
pop
rclb
ds
pushfw
popa
into
push
xchg
jne
aas
lea
mov
outsb
imul
jb
xchg
adc
xor
sti
pushf
lds
push
mov
mov
imul
adc
clc
std
push
enter
add
ds
cmp
xor
mov
jae
into
pop
dec
cwtl
adc
notb
jle
test
lods
rorb
in
popf
xchg
clc
pop
mov
cmc
mov
fildll
mov
add
sub
pop
push
add
xchg
fildll
lret
pop
push
inc
push
fwait
sbb
cmc
lea
in
iret
mov
data16
jbe
jl
pop
push
js
cltd
in
shl
mov
cmp
sarb
sub
out
and
dec
xchg
outsb
jg
stc
shrb
pusha
add
mov
pop
fst
icebp
incb
xor
mov
sub
mov
jbe
js
repz
adc
jle
inc
popa
pushl
movsl
pushf
roll
add
or
hlt
mov
jnp
aad
out
insl
mov
jae
xchg
lea
movsl
cltd
mov
add
mov
xor
mov
cmp
lret
lock
cwtl
pslld
cmpsb
fs
mov
sti
mov
scas
sbb
aad
fs
mov
addr16
push
inc
xlat
add
jns
or
push
inc
sub
inc
ljmp
lret
push
sbb
xchg
inc
rorl
sub
popf
jl
aas
cmc
adc
repz
loopne
sbb
aaa
adc
gs
fcoml
and
data16
mov
int3
das
xchg
mov
ljmp
loop
pop
mov
cli
sub
hlt
ret
stos
inc
or
ljmp
cmp
add
sub
dec
fcmove
and
lret
ljmp
xor
iret
ret
cmp
mov
mov
pop
inc
xchg
mov
icebp
outsl
jns
and
aam
xchg
jo
out
iret
scas
scas
lds
mov
sub
push
inc
adc
xchg
sbb
fxam
iret
fwait
arpl
cmp
ss
mov
cli
into
bnd
and
mull
and
outsl
out
adc
aaa
or
mov
add
push
mov
pop
shr
adc
les
xchg
jns
sbb
mov
push
xlat
lcall
xchg
test
inc
cmpsb
mov
pop
sarl
mov
loopne
jo
push
les
push
dec
xor
sbbl
jae
rcrb
aad
sbb
call
cmp
lcall
test
hlt
dec
add
stos
mov
mov
mov
or
and
jecxz
inc
outsl
push
gs
jmp
ret
addr16
push
pop
adc
adc
notl
insb
xor
inc
stos
clc
add
inc
dec
jecxz
push
repz
cmp
push
aas
std
jbe
and
into
inc
rclb
ljmp
push
mov
mov
das
pusha
bound
dec
mov
das
pop
cmp
pop
pop
pop
les
adc
imul
js
push
sbb
lea
bound
cmpsl
adc
or
out
cli
and
mov
ja
mov
je
cmpsl
pop
ljmp
pop
mov
gs
es
mov
out
inc
add
in
push
pop
inc
roll
cmpsl
pop
cmp
sbb
sub
mov
stos
sarb
mov
lds
or
xor
xchg
adc
xor
adc
mov
mov
jae
lret
aas
sub
es
cli
dec
daa
jns
mov
scas
hlt
mov
fdivl
sub
repz
mov
les
and
push
mov
loop
lds
xchg
ds
fnsave
sub
enter
push
mov
lds
jmp
stos
cwtl
dec
mov
lret
adc
push
cmp
shrb
out
das
jl
mov
xchg
xchg
xlat
loope
xchg
sub
pop
mov
aam
jmp
adc
inc
inc
loop,pt
aaa
loopne
addb
mov
jo
and
loopne
and
cmpsl
and
xchg
push
outsb
lahf
andl
add
or
mov
dec
insl
jp
jmp
sub
ljmp
xchg
stos
mov
std
fildll
cmc
clc
mov
loop
loop
hlt
std
inc
sub
in
xchg
sbb
jne
lret
pop
cmp
cmp
mov
cmp
and
rcrb
aam
mov
aaa
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
loope
add
jae
jp
pop
jp
sbb
imul
inc
sub
mov
cwtl
arpl
ret
pop
push
es
xor
fs
cmp
roll
push
inc
std
aam
adc
pop
lret
popa
jecxz
sbb
int3
pushf
jge
dec
insb
ss
stos
mov
mov
pop
out
into
aad
mov
mov
fwait
cmpsl
pop
sbb
shll
enter
aas
pop
testl
push
imul
sub
sbb
add
jecxz
push
jmp
cmp
aaa
jle
test
or
sbb
fldt
cmpsl
divb
mov
sbb
and
push
adc
enter
add
push
mov
sbb
push
and
push
pop
out
mov
mov
dec
xchg
mov
clc
pop
sbb
imul
pop
cmp
sbb
cmpb
lret
jmp
push
sbb
or
lea
sub
cmp
repnz
cmc
repz
insl
adc
cmp
add
adc
out
or
loop
jp
arpl
dec
sbb
push
or
and
pop
jb
and
leave
push
daa
lcall
fsts
pushf
mov
cmp
inc
adc
sub
out
pusha
xchg
push
jb
mov
xor
imul
xchg
and
mov
lret
mov
pop
pop
cltd
fnstcw
aas
sbb
cmp
xor
out
hlt
and
sbb
mov
in
mov
inc
mov
pop
adc
cmp
mov
pop
outsb
out
pop
sahf
cwtl
adc
test
mov
imul
popf
aaa
scas
dec
mov
icebp
cmp
mov
dec
mov
fs
add
adc
jo
jg
out
mov
dec
mov
jge
daa
inc
mov
jno
pop
outsb
sbb
sub
dec
mov
push
int
and
stc
lret
pop
and
movsb
int3
xor
sbb
outsb
sbb
lret
outsb
int3
sub
mov
jle
fiadds
cmpsl
mov
outsl
std
pop
ja
jno
jns
or
pop
sarl
shlb
mov
leave
test
shll
lret
jle
dec
cli
push
out
lea
call
mov
int
lods
pop
mov
std
adc
mov
adc
out
pop
sti
in
aad
fsub
data16
sarb
jae
jmp
push
aam
mov
mov
addr16
jecxz
cmp
ljmp
xchg
cmpsl
loopne
push
sub
lret
adc
xor
into
cmp
dec
pop
cmp
out
dec
out
push
or
xor
ljmp
fmuls
outsb
sub
push
mov
js
xor
cmp
mov
jae
loopne
add
add
mov
mov
mov
aam
adc
dec
xchg
scas
in
lock
xchg
jecxz
fwait
jne
inc
aaa
mov
cmc
mov
sub
and
adc
and
lock
adc
sbb
ljmp
sub
outsl
iret
dec
clc
in
and
jp
xor
push
jns
rcll
mov
mov
test
stc
xlat
xor
in
jo
mov
lds
int3
and
mov
jmp
jb
pop
adc
cmp
xor
sub
movsb
jo
xor
push
pop
imul
xchg
addr16
cmp
xor
jo
loopne
jne
cmp
jno
sahf
add
xchg
mov
gs
jno
sub
shr
mov
fcom
std
stos
xor
push
hlt
inc
mov
pusha
mov
jnp
jmp
addr16
pop
or
sti
mov
incl
mov
pop
leave
test
inc
or
jmp
ljmp
and
les
js
cmp
ljmp
ds
fdivrs
outsb
adc
shll
mov
iret
shlb
sbb
pop
movsl
and
lret
in
mov
push
or
xchg
push
push
adc
xchg
dec
push
aad
sbbb
cld
addl
mov
mov
aam
clc
and
in
xchg
inc
fidivs
ds
jmp
or
pusha
repz
lea
scas
mov
out
repz
inc
lret
inc
lods
mov
push
mov
aaa
mov
lret
stc
xchg
pop
rcrl
and
pop
add
dec
movl
push
dec
fdivrl
and
je
lret
out
pop
subb
xchg
pop
cmp
outsl
jmp
push
jle
sub
and
xchg
loope
das
sbb
mov
clc
push
ret
aam
stos
movb
outsb
jge
insb
inc
xchg
aas
push
cmp
movd
jge
leave
jnp
test
or
mov
sarb
setne
cmp
subb
clc
ljmp
xor
movsb
and
into
outsb
mov
test
arpl
mov
arpl
test
pushf
fbld
dec
rorb
and
ficomps
pop
sbb
mov
add
nop
aad
aad
cmc
xchg
mov
testl
stos
negl
pop
adcb
mov
mov
or
addr16
jp
xchg
mov
cltd
sub
js
cmc
iret
cs
jmp
xchg
mov
dec
pop
adc
pusha
hlt
pop
mov
pop
int
xor
out
push
or
icebp
leave
cli
fcoms
leave
ret
add
mov
out
sub
sbb
fdivp
push
pop
mov
cmc
imul
dec
std
rolb
lock
sub
add
and
popa
lods
jae
xor
xor
add
sub
rclb
push
das
jne
jbe
xchg
xor
imul
sub
cmp
movsl
pop
lea
mov
shrb
push
imul
fprem1
pushf
mov
subb
cmp
mov
shll
jp
add
lods
push
pop
fadds
xchg
cmp
lods
adc
sub
shll
adc
cmc
jg,pt
jne
addb
js
xor
icebp
jnp
std
adc
shll
hlt
cmpsl
sbb
and
int3
rcr
nop
jg
pop
xchg
jne
cwtl
xor
inc
insb
pop
and
cmp
lock
je
lahf
xor
push
fimull
shrl
xor
mov
jne
push
je
dec
sub
push
mov
jle
pop
sti
mov
jb
scas
inc
outsl
dec
lea
pop
data16
sbb
in
add
pop
or
clc
mov
xor
and
xchg
pushf
sub
mov
push
cmc
mov
fstps
jne
inc
pusha
gs
xchg
mov
xchg
mov
xchg
adc
aas
pop
sub
data16
xor
loop
sarl
sarl
stos
pop
mov
outsl
and
lret
bound
sub
cmp
inc
mov
movsl
push
xchg
fstps
dec
inc
subl
testb
faddl
adc
cwtl
mov
push
mov
mov
add
loopne
jno
dec
or
std
mov
movl
addr16
mov
sub
jecxz
jp
int
nop
pop
ds
outsl
shll
fwait
lods
iret
aaa
mov
cmp
pop
subl
rcr
inc
pusha
pop
jae
lahf
ljmp
dec
dec
outsb
scas
mov
adc
and
je
clc
daa
push
shl
ja
popa
and
popf
idivb
movsl
lea
ja
jae
xchg
push
sbb
push
push
js
add
inc
jp
mov
add
and
jnp
sarl
push
dec
push
test
jg
push
mov
icebp
cmp
movsl
jmp
inc
and
popf
sub
icebp
cmp
fldenv
cwtl
xchg
inc
jo
ds
jmp
das
pop
movsl
dec
jg
imul
lds
fists
jmp
adc
inc
ret
in
je
orl
addb
mov
jnp
or
les
dec
and
fimuls
ljmp
pusha
in
inc
sahf
rcr
aaa
ret
loope
testb
lds
loope
mov
lods
outsl
lock
xchg
test
jnp
pop
cltd
rcrb
cs
call
ret
pop
mov
xor
pusha
jp
mov
fisubrl
sub
push
in
sub
mov
jecxz
mov
xchg
or
jnp
add
dec
jne
lcall
push
xor
lret
mov
add
popa
out
jae
mov
pop
scas
ja
std
xor
loopne
push
xchg
jge
sub
inc
fdecstp
shll
push
jle
adc
add
mov
cli
outsb
out
pop
cmp
pop
iret
xor
in
or
pop
inc
or
imul
pop
fcompl
jle
roll
inc
adc
ret
cltd
lahf
dec
cmp
fwait
jl
jle
adcl
mov
out
negb
insb
pop
xor
fcomip
js
sub
xchg
or
cltd
push
cmp
jns
pop
lds
mov
test
in
push
jmp
xchg
pop
loop
jecxz
int
mov
sbb
repnz
es
mov
push
or
bswap
xor
adc
pop
fwait
inc
xchg
push
outsl
nop
jg
lds
fs
jge
xchg
xor
out
jbe
inc
jle
cmp
push
adc
inc
xchg
or
mov
js
movsb
rcll
sarb
insl
mov
pusha
inc
movsb
rcr
pop
pop
jae
mov
mov
pop
ja
scas
repnz
adc
jl
xor
fstpl
jle
lock
lods
imul
jno
pop
fs
pop
movsb
ja
and
ds
fwait
mov
mov
repnz
jge
call
add
lret
cli
cwtl
enter
and
pop
ret
lea
daa
mov
inc
jecxz
es
arpl
cli
xchg
fwait
cwtl
mov
movsb
out
dec
outsb
or
outsl
pop
pusha
jo
gs
loope
stos
xor
lret
and
scas
sbb
dec
cmp
repz
adc
cmpsl
loopne
es
ds
adc
adc
fdivrs
stc
lods
push
xlat
mov
dec
xor
mov
or
jo
sarb
cmpsb
aas
gs
enter
mov
sahf
and
inc
jp
xlat
out
fidivs
loopne
ss
rol
pop
jnp
inc
inc
push
jg
mov
bound
and
sub
or
xchg
mov
out
cmp
in
sub
jl
xchg
cwtl
mov
push
pop
xchg
jbe
xor
dec
xchg
outsl
pop
hlt
xor
xchg
dec
mov
dec
dec
inc
pusha
sti
fsubrl
sub
aam
inc
dec
cltd
cli
filds
dec
fadds
loope
ret
das
dec
or
pop
jecxz
or
ja
pop
loope
mov
push
mov
in
popa
mov
mov
jns
mov
xchg
xchg
popa
pop
mov
outsl
outsl
add
movsb
xchg
ret
rol
xchg
jg
xchg
mov
out
aaa
xchg
xor
aas
js
lock
ret
add
movb
dec
xorl
xlat
sbb
insb
jns,pn
testb
mov
test
push
and
cmp
ror
xlat
cmpsb
sti
out
jecxz
push
mov
in
inc
cmpsb
push
mov
xor
addr16
add
cmp
rorb
dec
outsl
fidivrl
out
out
shlb
out
mov
inc
es
pop
lcall
and
incl
pop
out
push
mov
mov
and
inc
rcll
dec
mov
lea
je
movsb
scas
loop
adc
and
outsl
dec
ljmp
testb
add
pushf
push
sbb
cmp
into
add
fnsave
sub
add
aad
scas
and
inc
mov
cmp
inc
mov
inc
mov
xor
in
jp
movsb
pop
or
xor
dec
add
lcall
adc
aad
sub
adc
fisubrl
mov
scas
jbe
jae
inc
mov
sub
dec
jae
fcmovnbe
stos
lret
mov
xlat
jmp
sbb
push
das
enter
push
mov
fsts
pop
or
sbb
sbb
cmpl
and
jg
jge
xor
ja
xor
mov
and
or
cmp
push
inc
leave
lock
mov
mov
mov
xchg
mov
or
mov
lods
jl
pop
cmc
jmp
loopne
mov
and
sub
rcll
mov
es
stos
fwait
push
movsb
jb
mov
jg
push
rcr
push
out
sbbb
lret
sub
or
mov
jge
leave
ja
push
and
push
pop
jbe
add
iret
mov
call
add
fdivl
or
rcrb
sub
in
stc
out
scas
outsl
xchg
mov
aas
cmpsb
pop
pop
push
fbld
mov
push
xor
lods
stc
inc
sbb
or
insl
cli
movsl
cmp
aaa
out
dec
test
inc
mov
les
aad
push
insb
dec
aaa
cmp
xor
mov
loopne
mov
shl
dec
aad
imul
xor
pop
mov
fimull
rorl
xlat
shlb
jge
pop
push
rcrb
lock
lods
sub
add
in
mov
pusha
jp
ss
mov
and
mov
push
and
mov
fadds
mov
jg
sbb
insb
aaa
mov
fisubl
and
int
popa
mov
pop
cmpb
loop
adc
jbe
adc
pop
call
lea
pop
push
test
andl
call
test
xor
inc
xchg
add
std
or
and
jnp
mov
adc
xlat
iret
cmp
lods
inc
pop
mov
call
lock
pusha
in
sbb
cmp
mov
lods
mov
dec
dec
jge
divb
movsl
ret
add
mov
and
dec
and
xor
and
jne
daa
sub
bswap
call
ljmp
into
bound
cmp
mov
sbb
pop
mov
sub
xchg
aam
jg
push
or
jae
jmp
xchg
lahf
test
aam
rcrl
mov
jecxz
in
adc
ss
out
push
cs
jle
sti
ds
cmp
lock
lea
jo
out
add
sub
lret
cld
sbb
aas
rol
out
mov
mov
sub
fisubrl
lcall
or
ret
sbb
out
push
and
xor
mov
cli
lret
xchg
adc
xchg
outsl
in
repnz
notl
rcrl
mov
push
negl
sbb
inc
rcl
and
out
sub
fistps
shll
add
add
pushw
or
ffree
sbb
in
dec
cmp
icebp
jbe
subl
nop
mov
stc
pop
jp
or
lcall
push
jbe
lock
add
xchg
inc
xor
cmp
inc
sbb
pop
and
cmp
call
cs
mov
ficoms
dec
insl
push
sbb
out
dec
ljmp
xchg
into
pop
cmp
imul
cmp
das
push
mov
rcl
jne
jno
sub
xlat
ret
popf
mov
xchg
stc
xchg
nop
mov
adc
movsl
and
add
pop
and
notb
cld
repz
jne
sub
rorl
in
sar
cmc
mov
movsb
notb
mov
iret
sbb
shrb
popa
adc
out
pop
xorb
jns
repz
inc
in
dec
dec
pop
mov
mov
mov
sub
iret
cmp
sub
out
pop
fwait
cmp
sub
mov
push
fldt
das
push
test
mov
pushf
pop
pop
push
inc
andl
cli
mov
push
outsb
iret
mov
imul
lock
mov
test
inc
xchg
psrad
xor
test
and
adc
pop
lcall
imul
sbb
xor
scas
bound
xchg
pop
xor
inc
push
inc
adc
jns
cltd
jp
enter
imul
lods
stc
repnz
test
pop
fwait
or
lret
nop
jmp
xchg
stos
or
inc
sbbb
cmc
cmp
rorl
addl
push
inc
jp
mov
add
add
in
jns
push
aas
sub
mov
mov
cmc
lret
popa
bound
lret
dec
fsqrt
xchg
jl
ret
cmp
movsl
mov
fs
jbe
pop
int
outsl
pop
and
jbe
xor
sub
inc
cmpsb
mov
dec
pop
jae
in
shr
and
test
scas
fisttps
cmp
mov
rolb
jne
xchg
sub
test
or
enter
and
popa
mov
nop
jl
mov
or
loopne
xlat
imul
dec
inc
mov
mov
sub
ss
loop
out
sub
cmp
gs
mov
loop
mov
mov
pop
xlat
mov
aad
mov
mov
dec
aam
out
test
gs
lret
fisubs
inc
shlb
mov
std
mov
mov
out
xchg
jne
adc
aas
and
mov
pop
mov
lret
fs
push
hlt
mov
out
or
add
xchg
adc
int
fnstenv
and
mov
mov
mov
push
or
mov
jg
jns
dec
in
add
xchg
iret
push
lret
shrl
mov
or
test
push
or
loope
jmp
dec
pushf
nop
push
or
ja
lcall
sub
dec
xor
in
xor
or
jp
or
mov
notb
sub
mov
mov
insl
nop
or
adc
xchg
je
int3
scas
dec
xchg
jge
lcall
jecxz
xor
lahf
movsb
dec
xchg
ret
adc
add
mov
imul
rolb
xor
notl
inc
imul
lret
int
adc
jg
push
ja
push
lds
mov
pop
jo
fs
orl
add
mov
adc
jp
xchg
mov
mov
jae
ja
or
or
jmp
cwtl
xchg
loopne
xor
dec
mov
out
add
jmp
mov
stc
and
pusha
mov
arpl
pop
int3
addr16
jl
lea
dec
aas
xchg
dec
xchg
push
addb
xlat
test
push
jp,pt
popa
cli
aam
int3
add
lods
arpl
lret
outsb
xchg
mov
xchg
icebp
add
std
xorb
dec
popfw
add
or
xchg
push
lock
and
xchg
mov
mov
loopne
sbb
popa
mov
mov
repnz
lcall
popa
nop
and
push
fsubl
xchg
cmp
xchg
adc
jae
xorl
ljmp
xor
ja
insl
aam
lret
xor
mov
cmp
inc
dec
jns
orl
loop
xchg
jae
mov
or
xchg
mov
pop
add
mov
add
or
push
call
stos
inc
pop
push
aam
adc
das
xchg
mov
test
xchg
cmp
mov
and
push
test
fisubl
and
pop
xchg
pop
jno
lret
movsb
push
add
out
loopne
lea
les
cs
outsb
jl
adc
movsb
daa
add
dec
or
sbb
iret
and
insl
sbb
or
std
jae
imul
mov
jbe
or
arpl
fdivrl
ret
push
sbb
int
in
in
mov
mov
or
das
sbb
jl
fcomps
popf
dec
adc
jge
fcmovnbe
add
icebp
lret
mov
xchg
adc
adc
dec
aas
and
push
pusha
push
and
loop
and
idivl
scas
repnz
inc
imul
test
push
inc
dec
imul
jno
jb
cli
sti
push
hlt
lcall
negb
cltd
rolb
jo
loope
cld
fidivs
and
cwtl
and
push
shrl
sbb
or
add
es
std
jmp
arpl
sbb
inc
pop
jge
jecxz
out
mov
call
fcomps
mov
xor
shlb
lahf
std
cmpsl
rol
pop
les
out
ds
jae
mov
sbb
mov
pop
mov
stc
push
cli
pop
das
shr
mov
jne
xchg
cmp
cs
fsubrl
pushf
arpl
xchg
dec
mov
push
mov
sbb
mov
stc
int
adc
lock
or
movsb
pop
loopne
scas
mov
test
pop
rcll
sbb
inc
push
sahf
cmpxchg
popf
adc
mov
pop
testb
clc
stc
int3
add
in
movsb
pushf
nop
mov
rcrl
xchg
lock
pop
add
cmp
jge
stos
and
mov
aam
xchg
fistl
test
mov
add
inc
or
popa
xchg
sbb
xchg
mov
imul
stos
xchg
jae
jns
sarb
cmp
xchg
faddl
jmp
ljmp
pop
sbb
sbb
xorb
bound
mov
cmpsb
adc
movb
lret
int
int
dec
pop
sub
dec
lcall
movsl
xchg
imul
push
add
xchg
cmpsl
sub
popa
movsl
mov
js
fneni(8087
aas
in
leave
leave
inc
es
cmp
adcl
push
in
mov
shrl
xor
out
and
stos
mov
xor
popa
stos
mov
mov
jecxz
cmpsl
push
inc
sti
mov
push
pop
ss
jecxz
cmp
push
ret
mov
gs
push
nop
jge
test
mov
lods
rcl
inc
cmp
loope
lock
out
jb
lcall
cwtl
mov
or
dec
jb
jecxz
icebp
sub
mov
les
mov
push
cmp
jnp
scas
jmp
cmp
jae
fwait
push
sub
cmp
movsl
or
push
dec
popa
scas
gs
jbe
stc
loop
lret
popa
add
push
test
jae
pop
in
shlb
dec
push
sub
lea
aaa
sarb
les
int3
lea
jecxz
adc
icebp
call
xor
adc
ja
dec
int3
mov
stc
dec
inc
or
fistpl
mov
lds
leave
stc
mov
leave
fnsetpm(287
jae
pop
dec
sbb
sbb
push
leave
jne
jne
fwait
push
jle
icebp
add
sbb
push
or
mov
fistpll
xlat
dec
xchg
stos
mov
rclb
mov
jmp
out
or
mov
aaa
call
out
xlat
sub
adc
shlb
pop
sbb
adc
cmc
aad
or
shlb
jge
sarb
xor
lods
mov
loope
cmpsb
inc
and
mov
popa
in
js
push
pop
rol
shll
psllw
xlat
push
xchg
mov
clc
pop
push
lcall
cmp
cmpsl
mov
push
add
sbb
xor
sub
sahf
sbb
push
pop
xchg
mov
shlb
and
gs
xor
enter
and
mov
aam
aaa
adc
repz
out
sbb
addb
xor
add
lds
dec
lods
ljmp
pop
sahf
popf
mov
insb
out
dec
test
jmp
add
push
cmp
xchg
lret
add
stc
push
sbb
ret
sahf
lds
fistpll
jno
or
sbb
mov
int3
push
clc
les
jne
push
jmp
mov
add
jno
cmp
jne
dec
sti
pop
push
sbb
adc
enter
nop
in
fistl
test
dec
xchg
loopne
jb
sti
lods
xchg
rol
std
jle
mov
in
aas
fucomp
sbb
add
and
cmpsl
jle
sbb
adc
jecxz
push
scas
dec
mov
jb
or
mov
daa
ljmp
cli
out
push
mov
sub
ret
in
pushf
les
loop
pop
scas
les
inc
cmp
mov
push
mov
data16
pop
enter
push
clc
and
and
push
mov
mov
ja
jl
les
arpl
cmp
lret
mov
clc
mov
mov
cwtl
aam
jae
out
cltd
aad
cmpsl
cmp
xor
inc
test
andb
adc
mov
ret
pop
aad
ljmp
lods
mulb
or
pop
xchg
dec
outsl
xor
mov
aam
addb
pop
fidivrl
hlt
lods
mov
fs
dec
stos
out
pushf
je
xchg
out
xchg
sbb
add
xor
and
add
scas
mov
xlat
addl
sub
lds
mov
push
clc
inc
jecxz
lcall
pusha
test
dec
inc
sub
std
mulb
sub
xchg
fisubs
jg
test
mov
sahf
nop
insl
and
ds
lds
pop
adc
dec
add
add
fsubrs
mov
or
xchg
push
mov
orb
or
mov
or
sub
or
dec
lods
inc
loopne
icebp
popa
fmull
jl
addb
adc
sbb
cmp
lea
dec
in
hlt
arpl
pop
repnz
pop
mov
out
je
dec
cltd
lcall
pushl
in
mov
test
sub
xchg
cmc
mov
push
push
insb
jmp
jmp
call
inc
mov
xchg
in
jecxz
xchg
inc
xchg
adcl
out
ret
jmp
mov
gs
xchg
js
lea
js
in
lds
or
ret
andb
in
mov
movsl
jno
pop
jb
push
jne
sbb
or
sub
push
bswap
aad
stc
cs
arpl
cmc
aas
rorb
mov
jo
es
daa
enter
popa
popf
cmpsb
sub
rol
scas
out
stos
fstpl
mov
push
cmpsb
les
or
jp
or
jg
cmp
xor
outsb
fwait
stos
xchg
adc
fcomps
icebp
and
dec
loop
jp
add
dec
dec
inc
call
enter
hlt
test
flds
ret
or
xlat
sbb
cmpsb
add
aad
jge
mov
dec
les
fs
jne
into
or
adc
add
jae
cwtl
adc
or
dec
fidivrl
pop
lret
enter
outsl
pop
das
pusha
out
sub
loopne
sub
or
outsb
lods
cmpsb
imul
iret
xchg
test
mov
sbb
push
add
ja
or
jb
inc
inc
adc
mov
cwtl
int
or
hlt
and
jl
sbb
xor
xor
int
scas
aas
nop
push
lods
movsl
mov
push
xor
nop
stos
fyl2xp1
lods
mov
sti
inc
fidivrs
sbb
pushf
push
pop
cld
xchg
fmuls
xchg
out
mov
pop
in
mov
and
repz
mov
mov
mov
or
in
pop
xchg
mov
mov
push
mov
mov
ret
data16
pushf
cmpsb
mov
jne
push
mov
add
adc
pop
push
mov
mov
shll
cmc
jecxz
std
inc
test
xchg
insl
mov
mov
iret
sbb
in
lret
mov
cmc
and
repz
rol
cmpsb
jb
mov
andl
pop
insl
pop
push
inc
ret
lea
inc
fmulp
jp
mov
adcl
pop
push
mov
dec
and
push
fsubrl
in
mov
movsb
insl
test
xlat
mov
mov
nop
into
arpl
dec
lds
shl
fisubrl
mov
lahf
push
out
inc
or
in
mov
xchg
inc
fadds
cmpsb
mov
pop
and
stos
movsb
fistps
cmp
pushl
mov
les
mov
adc
jb
sbb
cmpb
shrb
je
in
add
rclb
loope
add
mov
inc
jbe
pop
mov
in
movsb
test
cwtl
jne
sbb
mov
subb
cmc
test
cltd
xchg
lds
sub
cwtl
fsubrp
sbb
xchg
ljmp
cs
test
or
frstor
fsubrp
mov
add
aaa
mull
imul
mull
lea
adc
mov
ja
pop
pop
sub
lahf
loope
mov
outsb
push
test
mov
cmp
mov
mov
mov
xchg
adc
add
cs
jg
mov
xchg
add
mov
leave
jo
inc
daa
mov
inc
jmp
cmc
lock
or
inc
and
call
out
xor
jle
daa
int3
gs
push
push
fbld
xchg
icebp
jns
movsb
cli
dec
out
cmp
cmp
sbb
jo
out
or
or
push
jmp
sbb
mov
xchg
into
adc
aam
inc
adc
sbb
dec
xor
jl
out
mov
fcomi
and
insl
xchg
shll
mov
int
call
test
add
shrb
ret
adc
in
mov
add
mov
pop
arpl
xor
sub
mov
pop
sub
jp
flds
push
and
inc
adc
dec
xchg
pop
dec
dec
clc
sarl
shrb
sbb
test
int
je
sti
jb
insb
jns
lock
xchg
daa
addr16
inc
xor
dec
jp
ss
rcrl
and
add
ds
shlb
stos
bound
inc
repnz
mov
add
out
pushf
dec
mov
fisubs
mov
xor
addr16
mov
lcall
mov
xor
sbb
dec
es
mov
inc
mov
jo
in
inc
fprem
xor
mov
push
stos
outsl
jnp
inc
push
cmp
jnp
xchg
test
aas
idivl
das
or
xor
xchg
mov
push
push
xchg
mov
hlt
mov
int3
mov
mov
dec
call
mov
test
fnsave
pop
loop
and
popf
jbe
cld
cmp
popf
add
or
leave
pop
js
lret
lods
ljmp
call
xchg
mov
xor
lea
sub
pop
jns
jno
lods
push
mov
sti
xor
dec
push
fwait
inc
shll
or
decl
shrl
mov
jae
test
loopne,pn
add
pop
sub
pop
rcrl
int3
push
push
fst
pop
jo
push
clc
mov
add
jmp
jae
push
scas
pop
cmpsl
fs
push
cwtl
aaa
adc
push
fcmovbe
bound
xor
dec
adcb
jge
out
dec
ds
xchg
mov
jge
stos
in
loope
inc
or
xchg
enter
repz
mov
lds
ljmp
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
rclb
decl
jge
or
jp
test
pop
loopne
mov
fdivs
xchg
cmp
mov
stos
add
push
and
stc
push
popf
and
mov
cmc
test
outsb
xor
out
addr16
int
cmp
push
xor
jns
cwtl
cs
lret
movsl
push
xchg
aad
sub
js
and
jns
nop
xor
mov
cmp
stos
loop
push
add
or
out
pop
idivb
xlat
push
xchg
mov
out
outsl
mov
jg
mov
add
popa
or
jmp
les
aaa
xchg
pop
dec
idivl
mov
loop
push
xor
rorb
aaa
xchg
rorb
sub
dec
cld
mov
sub
cmp
mov
dec
rclb
cmp
shr
cmp
lcall
sahf
push
ret
or
mov
dec
jnp
dec
cmp
push
mov
ss
popl
mov
pop
xchg
jmp
dec
ja
ss
cmp
aam
and
arpl
jg
jae,pn
pop
ret
les
loopne
jns
push
outsl
xchg
mov
jmp
cmp
xchg
inc
sub
adc
pop
push
sub
nop
cltd
mov
mov
pop
gs
mov
loope
mov
out
cmp
dec
mov
jb
cltd
mov
adc
popa
push
adc
lock
xor
notb
push
dec
popw
lods
add
adc
adc
lds
inc
pushf
mov
mov
xchg
insl
or
add
sub
jae
or
cmp
jae
pop
cmp
fs
dec
add
aas
jmp
andb
xor
cmp
xor
mov
shrl
sub
push
xlat
rcl
bound
push
shrl
negb
dec
fistpl
cmp
jle
mov
dec
dec
das
dec
test
push
outsl
mov
push
scas
push
dec
inc
sbb
xor
fidivl
mov
push
xor
pop
aad
push
jnp
and
pusha
sbb
ret
pop
loopne
dec
push
subb
xchg
pop
decb
adc
xchg
outsl
dec
jo
scas
je
push
lret
outsl
cld
mov
or
or
shrb
jno
lret
lock
jo
sub
pop
push
mov
je
mov
cs
out
xchg
and
add
inc
test
inc
fnstcw
rcll
cmc
mov
mov
ret
mov
bound
hlt
xchg
pop
sub
data16
and
ja
iret
push
adc
dec
adc
jl
sbb
mov
add
enter
subb
xchg
xor
std
cmpsl
pop
ret
adc
xor
and
sbb
test
sub
add
shlb
mov
in
insb
mov
mov
pusha
ret
imul
jo
mov
jnp
dec
jae
sbbb
or
add
pop
pushf
cmpsl
out
jp
jbe
call
movsl
adc
cli
mov
or
inc
inc
mov
cltd
adc
fnsave
jbe
mov
jns
sub
insl
insb
lds
mov
jle
notb
lock
pop
dec
fstpl
sbb
sub
mov
mov
cmpsl
loope
or
jno
mov
outsl
mov
mov
mov
and
leave
pop
mov
mov
xchg
push
out
dec
push
sti
sahf
xor
adc
in
xchg
jp
push
or
xchg
dec
fbstp
jnp
iret
cmp
jmp
adc
push
mov
mov
adc
or
push
loopne
into
fbstp
outsl
or
stos
inc
push
cwtl
lods
pop
xor
ds
icebp
xor
stos
test
push
mov
adc
popa
lods
xchg
push
mov
adc
insl
loop
push
stc
adc
push
sub
jo
not
loope
xor
sub
mov
mov
xor
push
dec
insl
add
sti
lcall
adcb
cmp
ljmp
cli
inc
test
popf
xor
in
enter
adc
loope
mov
cltd
xor
ljmp
inc
pusha
data16
sbb
jp
cmc
icebp
xor
stc
and
adc
xchg
push
and
mov
dec
and
mov
clc
mov
lods
jne
mov
sbb
ficomps
lock
push
repnz
rorb
loope
or
out
xor
ds
pop
sti
add
xchg
out
cmpsl
icebp
lea
inc
rorb
xlat
das
mov
cmp
jl
stc
cmp
xor
loope
and
jecxz
xor
movsl
ret
mov
lds
dec
std
add
aas
xor
icebp
movsb
and
insb
fisttps
mov
inc
aam
jl
les
popf
xchg
mov
nop
clc
stos
or
bound
idivb
dec
pop
jl
xor
cs
push
popa
mov
xor
jge
xchg
lret
xorb
xchg
popa
out
imul
push
test
fidivl
sbb
xchg
icebp
sub
addr16
loop
leave
repnz
notb
and
ret
add
pop
xchg
jo
repz
xor
fisttps
add
outsl
inc
imul
setp
ljmp
inc
fmull
aad
inc
mov
xchg
mov
dec
adc
pusha
ja
xor
xor
enter
add
fistpll
mov
xchg
das
xor
aas
shlb
pop
xor
je
sub
imul
stos
pop
push
loope
bnd
mov
jnp
pusha
add
sub
dec
jae
mov
mov
roll
out
popf
lret
inc
outsl
jmp
outsl
sub
add
xchg
and
pushf
jnp
mov
mov
pop
cmp
sbb
out
push
lahf
movl
test
and
lds
cmp
je
jno
jecxz,pt
jge
stos
xchg
rcrb
jns
call
adc
imul
add
sbb
sbb
outsl
dec
mov
addr16
mov
mov
out
je
cmp
enter
popf
lds
jp
into
loopne
lret
sub
fdivp
cmpsb
pop
ret
out
in
scas
add
mov
sbb
xchg
pop
jmp
data16
out
xor
lock
mov
in
xchg
scas
adc
xchg
mov
or
lock
xchg
adcl
cmp
adc
adc
inc
and
add
add
pop
pop
les
cmc
dec
pop
push
sbb
mov
scas
insl
movsb
scas
pusha
addr16
adc
sub
fucomip
mov
sbb
mov
rorb
lock
or
aam
xchg
andl
out
aam
dec
dec
adc
pop
lods
jne
pop
sbb
cltd
adc
cmp
loop
or
fs
movsb
add
jo
mov
dec
out
rol
sbb
push
mov
scas
push
bound
xor
test
xchg
fdivrl
sub
test
in
mov
jg,pt
cmp
pop
xchg
stos
cmp
mov
orb
movsl
cmp
cmp
mov
pop
nop
and
shrl
dec
xor
jbe
push
cmpsl
enter
lret
and
or
sbb
das
stos
pop
mov
jl
mov
lods
dec
dec
fdivrp
sub
mov
loop
loopne
xor
lods
jmp
fcomip
hlt
stos
dec
shrb
mov
push
sub
ret
cmp
fwait
iret
pop
shlb
add
call
jmp
or
daa
rcr
inc
mov
nop
mov
xchg
sbb
js
xchg
push
mov
loopne
dec
or
or
aam
lock
mov
pop
lahf
inc
add
ret
xchg
cmp
sbb
xor
ds
fwait
mov
leave
xchg
mov
push
stc
adc
push
xor
adcl
add
loopne
iret
fstpl
xchg
adc
and
dec
mov
xchg
pop
in
sbb
mov
cmpl
les
mov
xchg
pop
fs
sbb
cmp
roll
dec
inc
jmp
fwait
js
add
cmp
orl
lret
add
sub
mov
mov
pop
xor
mov
lcall
adc
out
sbb
cld
call
mov
call
xchg
sbbl
es
ds
push
xchg
jl
mulb
add
icebp
mov
fidivrl
and
jg
dec
dec
push
leave
push
xor
adc
xchg
sub
loop
or
sub
adc
popf
dec
jge
into
out
cmc
imul
add
data16
dec
or
leave
or
sbb
loope
xor
repz
dec
hlt
mov
sahf
sub
nop
sub
push
cwtl
add
dec
cli
lods
jmp
push
mov
or
cmp
popf
sahf
das
push
popa
das
fstps
add
mov
pop
addr16
bound
int3
lods
sub
xchg
push
int3
fiadds
fs
pop
sbbl
sbb
dec
mov
sub
or
pop
mov
cltd
imul
fidivs
xor
shlb
test
pop
xchg
bound
shrl
mov
in
and
movsl
shrb
dec
in
clc
lret
sbb
or
dec
xchg
xchg
cli
stc
or
rcr
pop
push
xchg
xor
pushf
cli
int
adc
js
mov
sti
xor
movsl
ret
or
dec
sahf
testb
dec
scas
mov
stos
je
pop
dec
mov
jle
das
lods
aas
adc
xor
pop
mov
dec
out
jmp
fistpll
call
add
loopne
rorl
mov
fcmovb
and
sbb
mov
mov
cmp
lahf
jno
jge
push
cmc
cli
sbb
add
jno
les
mov
jmp
fs
lret
pop
or
es
addr16
jb
orb
push
movb
inc
cmpsl
pop
or
in
jmp
xor
jo
imul
mov
in
cmp
cmp
mov
cmp
movb
dec
pusha
popa
jecxz
iret
insl
push
xchg
add
pushf
mov
jge
enter
pop
jne
adc
pop
and
push
cmp
and
jl
jmp
adc
pop
inc
stos
fwait
iret
push
dec
cmpsl
add
mov
sub
sub
inc
sub
lods
adc
hlt
adc
cs
mov
xchg
into
and
pop
cmpsb
mov
xchg
icebp
movsl
mov
fs
dec
xor
cmp
jge
sar
daa
mov
sub
test
cmp
hlt
pop
jae
je
jle
lcall
sub
and
add
imul
or
push
lcall
fiadds
call
loopne
mov
loope
lea
mov
fs
rcll
dec
in
out
fbld
sub
daa
sti
push
cmp
jmp
fmull
push
ret
int
sub
lahf
adc
cmpsb
xor
mov
push
popf
cltd
stos
mov
and
out
enter
into
and
addr16
mov
rorb
cmp
testl
lret
in
mov
bound
popa
dec
push
imul
outsl
dec
cwtl
lds
insb
push
int
pop
push
das
cmp
sub
mov
fistpll
adc
jae
imul
jno
repnz
push
cli
cmp
sbb
sti
or
xor
mov
scas
mov
jp
je
or
mov
fwait
mov
arpl
add
stos
cmp
movsb
xchg
mov
inc
xor
push
pop
adc
lahf
or
fcompl
and
lods
repz
xchg
sub
sub
lcall
or
mov
in
jg
and
fcmove
repnz
sub
out
scas
fsubs
clc
mov
xor
jmp
mov
cli
sbb
pop
nop
pop
or
imul
sbb
ret
pusha
ss
or
cmp
inc
mov
faddp
xchg
sbbb
and
repnz
jo
or
jg
mov
xchg
clc
jl
push
shll
test
cmp
loopne
pop
stos
std
sar
call
push
into
stc
dec
push
dec
shrb
push
dec
dec
cld
mov
pop
adc
adc
sbbl
ss
mov
imul
out
cmp
dec
add
imull
xor
lahf
mov
cmpsb
pop
lock
shll
mov
int
loopne
mov
outsb
leave
jecxz
jle
pusha
and
out
xor
leave
dec
inc
pop
es
push
imul
loope
xchg
mov
in
pop
jne
add
cmpsb
frstor
jbe
xor
int
push
aad
push
movsb
std
popf
mov
repz
int3
push
scas
aaa
out
sub
cmp
mov
sub
hlt
pop
repz
mov
pop
icebp
rcl
fwait
cmpsl
negb
testl
push
cmpsl
js
stos
adc
sti
mov
addr16
mov
dec
mov
out
xchg
jns
jle
mov
jp
jle
pusha
mov
inc
fisttps
in
out
stos
mov
mov
rep
or
sbbb
lods
pop
push
stos
pop
test
pop
in
and
cmpsb
mov
sbb
out
out
pop
jg
jg
cmp
xchg
mov
test
repnz
xchg
push
add
cmp
into
xchg
lcall
loop
add
sti
xor
pop
out
lahf
testb
mov
das
cmc
mov
xor
loope
and
adcb
in
nop
cmp
cmp
ja
lds
test
push
and
jb
fldcw
rcrb
fcmove
cmpsb
dec
mulb
pop
mov
xor
out
mov
push
mov
push
les
adcb
adc
out
jo
aad
push
leave
aam
cmp
mov
xchg
xchg
ljmp
sbb
cvtps2pd
outsb
ffreep
mov
cmp
adc
or
popa
loop
inc
test
test
xchg
pop
loope
push
sbb
shl
xor
gs
in
xchg
dec
std
hlt
sbb
stc
push
loopne
cmp
mov
or
lods
and
fcompl
or
and
adc
ds
insb
mov
lods
mov
jle
add
adc
pop
repnz
xchg
leave
add
xor
ljmp
mov
cmp
sti
stos
outsl
xchg
cmp
cmpsb
pop
adc
xorl
lods
movsl
in
pop
and
ror
hlt
mov
cbtw
push
loope
data16
pusha
stos
or
dec
cmp
cmc
sti
dec
insb
sbb
cwtl
push
xor
inc
pusha
sub
xor
fidivs
repz
or
or
cwtl
mov
xor
xor
and
xchg
push
jge
int
shl
ja
mov
dec
or
jns
and
adc
pop
jecxz
adc
pmullw
out
sub
je,pt
and
mov
mov
jl
push
dec
movsb
xchg
and
out
lahf
xchg
nop
jmp
sahf
sbb
daa
in
jmp
aad
mov
sub
and
adc
aad
push
mov
ljmp
sahf
ja
ret
rorl
adc
dec
outsl
je
cwtl
lahf
scas
push
inc
call
fstpt
rcl
push
fisttpl
jecxz
xor
xchg
out
rep
mov
rcl
int
lea
xchg
push
mov
call
fildll
inc
mov
pop
sub
lret
or
ret
pop
mov
mov
jnp
fs
jp
adc
and
cltd
shlb
outsl
push
dec
lcall
xchg
lret
or
insl
xchg
xor
cmp
ret
je
cli
mov
pop
cmp
xchg
sub
inc
imul
dec
sbb
pop
cwtl
cwtl
mov
lcall
aad
push
lret
xchg
xchg
lds
cmpsb
outsl
fisubl
adc
push
mov
or
inc
pop
fcoml
push
adc
test
fs
pop
pop
xor
aaa
movsl
call
mov
jle
mov
add
lahf
lret
repnz
clc
out
add
xor
mov
add
fbld
push
mov
cmpl
xchg
pushf
repnz
ret
and
hlt
ror
dec
icebp
cmp
loop
andl
cmp
sti
sbb
push
add
cmp
and
mov
or
push
add
and
xor
or
dec
sti
in
sub
ljmp
jmp
fadds
or
mov
ret
xchg
iret
mov
ljmp
in
repz
nop
adc
ret
and
pop
nop
scas
mov
jmp
loop
mov
je
gs
inc
je
out
push
in
jge
or
pushf
jl
test
lea
pusha
loop
push
mov
sbb
ljmp
push
adc
dec
jl
or
in
add
shlb
mov
push
and
and
aaa
sub
dec
xor
les
je
jo
add
xchg
call
out
int
push
sbb
ss
bound
es
subb
mov
dec
sbb
outsb
pop
add
imul
lcall
imul
cmpsl
pop
mov
sahf
sbb
mov
xchg
pop
push
gs
inc
std
lcall
or
and
in
movsb
cmp
sbb
sub
cwtl
out
rol
cmp
outsl
adc
mov
pop
push
test
loopne
pop
out
mov
xchg
jns
dec
insb
out
and
push
addr16
subps
jno
cmp
and
xor
loopne
fcomi
shlb
out
cmp
sarl
mov
mov
jns
ret
lods
out
add
rcpps
insl
mov
push
mov
inc
out
jp
movsl
or
xor
enter
xchg
and
movsb
aam
sahf
jns
or
or
xor
ret
xchg
dec
xchg
cs
cmp
pop
aad
popa
mov
sahf
nop
dec
test
das
les
pop
mov
lahf
inc
sbb
jnp
mov
testb
sbb
sub
jno
outsl
ljmp
in
andb
mov
pop
dec
mov
push
dec
lods
cs
push
xchg
xchg
arpl
aas
sub
lods
fwait
inc
addr16
or
mov
jae
arpl
inc
cmp
daa
insl
xchg
stos
add
loope
mov
in
dec
pop
dec
jbe
mov
xlat
mov
jge
xchg
dec
pop
push
das
mov
das
pop
iret
stc
sti
adc
iret
into
push
cmc
adc
xor
pop
je
jecxz
inc
fcmovnbe
lret
dec
mov
cmp
loopne
flds
adc
js
sub
xrelease
and
loop
push
dec
movsl
dec
add
imul
rorl
mov
or
aaa
or
pop
imul
mov
and
aad
stc
fbld
pop
jne
aam
jmp
jecxz
mov
push
jo
ror
add
int3
mov
scas
push
xchg
mov
nop
movsb
cltd
and
leave
mov
cld
pop
push
push
sub
insb
leave
pusha
lds
jbe
aaa
dec
js
shrb
and
inc
inc
call
es
dec
stos
pop
add
jle
ret
cmp
xchg
xchg
sub
pop
cmp
lret
ljmp
test
pop
dec
fcoms
cmp
lcall
aas
xchg
nop
sahf
repz
xor
lods
fucom
sub
ret
shll
pop
jo
xchg
jnp
mov
fidivrl
outsl
and
es
adc
addb
ja
xlat
arpl
xor
ret
icebp
imul
add
mov
dec
sub
sub
add
dec
xchg
jae
mov
sbb
sbb
rcl
cmp
cmp
sbb
adc
es
add
loop
inc
adc
xlat
andl
cltd
dec
sub
adc
stos
pop
fdivs
pushf
addr16
and
jp
stc
mov
dec
or
mov
stos
std
sub
fistpl
arpl
xor
mov
bound
fbstp
popf
xor
insb
xchg
in
loopne
lock
dec
adc
scas
test
ss
out
shlb
and
loope
pop
cmp
and
cmp
sbbb
cmp
ss
cmpsl
xchg
ds
dec
sbb
cld
clc
pop
aaa
or
jbe
ficoms
push
and
scas
and
fstps
mov
pop
mov
adc
xor
push
movsl
push
sahf
pusha
xor
test
in
call
mov
enter
xchg
cmpsl
cmp
mov
xor
cld
psubw
xchg
sub
ds
push
inc
lahf
scas
dec
lock
jne
sub
mov
shr
hlt
xchg
cli
cmc
or
adc
inc
lcall
pusha
fiaddl
cmp
arpl
jg
jp
push
je
scas
loopne
xchg
jg
mov
xor
mov
sub
je
dec
stc
lods
cmp
and
insl
repz
out
xchg
sub
ja
mov
sub
call
xor
sbb
add
sti
aam
enter
add
popa
xchg
mov
mov
lret
xchg
fsubl
sti
pminsw
xchg
js
push
pop
xchg
and
pop
jno
inc
aam
add
dec
dec
in
adc
mov
incb
inc
xor
pop
jb
cmpsl
aas
mov
lcall
cmpb
sti
lahf
in
xchg
cmp
addr16
mov
mov
cld
shlb
jae
das
pop
xchg
xchg
ljmp
test
dec
or
loopne
orl
add
adc
fs
adc
int
mov
dec
cwtl
nop
jb
mov
lds
ss
add
fisubrs
fldl
sahf
inc
aaa
pop
fstl
xor
loope
lods
inc
jp
push
imul
imul
mov
sbb
mov
arpl
lock
fistps
mov
iret
adc
mov
lcall
adc
std
mov
add
pop
dec
and
mov
sbb
arpl
and
xchg
lret
fbld
aaa
aam
and
clc
leave
loopne
dec
lods
gs
cmpsb
data16
sbb
sbb
loop
iret
sahf
push
mov
dec
fisubs
xor
cmpsb
sub
and
jnp
push
scas
enter
pop
dec
fildll
lock
sbb
call
scas
popa
fiadds
es
rclb
fisttpl
fwait
sub
pop
das
fcmovnb
mov
cli
or
xor
rorl
ljmp
mov
or
in
xchg
lret
xor
pop
and
dec
cmp
ja
mov
sbb
mov
push
jg
aas
mov
sbb
stc
ret
fdivs
and
mov
roll
sub
cli
lock
movsl
push
inc
jmp
mov
pop
mov
mov
ficoms
mov
jnp
jl
popf
push
pop
pusha
add
push
cltd
xor
icebp
scas
push
jmp
push
adc
sub
push
xor
sub
test
jb,pt
in
or
xchg
idiv
pop
imull
and
pop
sbbl
out
jne
lcall
xchg
mov
or
lcall
dec
xchg
aad
loope
nop
mov
pusha
aaa
lds
arpl
cmp
pop
ljmp
aas
push
inc
push
pop
sbb
pop
mov
pop
pop
jb
loope
push
fstl
and
pusha
xor
push
push
cmp
sbb
cli
mov
dec
les
mov
push
into
cmp
cmp
fldl
jge
frstor
xchg
cmpsl
in
jno
dec
xchg
out
ss
ja
sbb
lea
in
arpl
and
ss
lcall
lahf
push
or
divl
mov
adc
in
jecxz
adc
test
xor
jecxz
xlat
jge
nop
adc
add
pop
sbb
and
loop
les
lahf
adc
pop
jbe
pop
cmc
mov
mov
enter
loop
or
test
jmp
sub
std
inc
adc
iret
or
mov
mov
mov
outsb
xchg
insl
sbb
sarb
pop
add
pop
js
in
js
dec
or
push
push
push
xchg
int3
cmpl
mov
mov
lea
cs
faddl
lahf
jb
jae
xchg
rcll
out
repz
testl
inc
pusha
cmp
adc
call
add
xchg
shrb
stc
adc
pop
jp
lods
mov
pushf
loope
decl
adc
inc
loope
arpl
sub
pop
adc
insb
mov
cld
or
lods
jle
jo
xor
shl
cmp
mov
sub
ret
roll
test
push
jl
loope
ss
fwait
sbb
orb
fst
mov
popf
mov
mov
adc
pop
int3
mov
and
gs
dec
mov
bound
inc
daa
pop
push
push
push
pushf
xor
scas
dec
xchg
xchg
fdivl
mov
jbe
add
pop
idivl
in
pop
cmp
popa
pop
lods
cmp
xchg
mov
add
jb
dec
test
or
mov
repnz
sub
lret
imul
push
popf
fsubrl
lds
movsb
fisubrl
test
lods
cmp
aaa
and
mov
dec
xchg
adcb
fmuls
aas
fs
test
imul
cmpsb
mov
dec
jo
cwtl
cli
mov
call
cmp
add
into
lret
les
cmp
aas
and
ret
jno
rol
test
icebp
and
xor
test
cmp
out
and
ret
pop
outsb
or
xchg
decl
lds
aam
fxch
in
xor
fs
es
fiaddl
sub
adc
push
jo
xor
ds
loop
jmp
xor
jp
jnp
inc
pop
sbb
mov
jp
cmp
sbb
inc
aad
adcb
fcmovnu
pusha
por
jge
inc
adc
xchg
es
lret
lods
test
push
mov
lods
sbb
pop
add
int
mov
faddl
lods
pop
xlat
add
test
jl
mov
out
adc
adc
in
ds
mov
mov
pop
push
jb
xor
into
std
cmp
mov
es
dec
inc
cmp
lret
lret
lret
out
scas
pop
iret
push
js
dec
popl
lods
rorb
jmp
jo
mov
ds
mov
adc
cmp
add
or
jecxz
cmp
xor
mov
movsl
sbb
xchg
sub
stos
add
insb
mov
addr16
inc
mov
inc
pop
aam
andb
int
mov
arpl
pop
xor
repnz
mov
jo
pop
pop
push
sbb
or
jg
pop
push
movsb
adc
adc
in
ja
sbb
mov
inc
push
ret
add
push
push
cmp
sti
add
sbb
mov
iret
enter
cmp
dec
cmpsb
movsb
outsb
inc
inc
fstl
scas
adc
aaa
and
ljmp
pop
or
sub
mov
cs
sbb
and
mov
mov
or
dec
xchg
cltd
int3
insb
push
fisttps
inc
pop
mov
and
add
in
mov
add
xchg
ja
sbb
mov
sahf
push
mov
sub
mov
dec
js
push
in
and
sbb
add
loop
cmp
dec
popa
js
fbstp
or
cli
mov
add
mov
js
jae
movsl
pushf
or
mov
xchg
push
pop
mov
xor
lret
adc
push
cltd
inc
sub
xor
mov
fiadds
ljmp
xor
das
cmp
cwtl
sbb
rorb
in
fmuls
lods
jb
push
lret
es
loope
lahf
das
ja
or
shll
fisttpll
add
mov
loopne
add
stos
push
dec
in
mov
jle
jb
xor
push
aas
cmp
push
scas
aas
cmp
cwtl
xor
mov
hlt
aaa
cmp
mov
sar
or
mov
mov
in
stos
aaa
push
lahf
inc
rcll
rcrl
or
rclb
movsl
push
and
mov
sar
shl
jo
testb
push
js
jne
rol
fwait
hlt
xlat
sbb
xor
xor
lahf
dec
adc
or
mov
ficoml
insb
mov
xor
es
dec
add
adc
leave
cwtl
mov
inc
in
ss
jb
ja
xchg
xlat
pop
inc
mov
stos
testl
test
pushf
cmpl
fistpl
xchg
sbb
outsb
and
cmpl
mov
push
inc
aad
jmp
test
out
xchg
and
into
mov
jl
push
dec
add
popa
fldt
mov
imul
sub
shll
xor
push
cmpl
xchg
mov
adc
mov
cmp
sbb
cli
jle
test
into
jecxz
shlb
mov
hlt
insb
dec
push
jle
imul
enter
je
vcomisd
mov
ret
pop
je
mov
clc
inc
pop
fisubs
mov
or
xor
mov
jge
negb
lock
arpl
daa
mov
push
and
rol
dec
aam
fidivrl
xor
out
mov
jg
xchg
xchg
add
push
icebp
fisubrl
mov
adc
sub
mov
icebp
je
mov
insl
iret
add
adc
mov
push
mov
or
push
cmc
pmulhuw
push
mov
mov
adc
mov
fs
inc
stos
add
test
fidivl
push
lods
sbb
in
pop
sarl
mov
and
popa
inc
sbbl
sub
mov
sbb
push
mov
cmp
inc
pop
mov
mov
frstor
je
shlb
mov
xor
mov
cld
sub
arpl
ljmp
js
pop
into
jecxz
or
push
xchg
insl
sub
xlat
jmp
jns
mov
cmpsb
jne
movsb
lock
sbb
stos
push
ljmp
stos
or
jmp
sub
movb
sub
adc
hlt
jge
jecxz
push
pop
ror
ljmp
mov
cmp
pause
movsl
push
enter
mov
addb
dec
jg
cmp
cmp
add
pop
out
xor
fabs
ss
or
into
punpcklbw
or
pop
mov
adc
jl
pop
pop
rcr
mov
aas
fbld
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fldenv
or
jp
mov
in
pop
call
mov
mov
and
adc
xchg
idiv
pop
stc
and
fnstcw
mov
jge
addl
test
scas
and
test
andl
pop
shl
das
cs
mov
inc
imul
aaa
rclb
pop
imull
daa
xor
lods
popa
jne
cmp
add
xchg
hlt
jmp
hlt
test
xchg
in
popf
and
sbbl
and
rcrl
js
sbb
repnz
aam
loope
sub
push
pop
xchg
mov
mov
movhps
push
in
and
jecxz
cmp
xor
leave
std
ljmp
js
insb
mov
pusha
mov
fmull
pop
xchg
sub
jo
mov
outsl
aas
je
xlat
xchg
add
mov
inc
scas
inc
pop
out
mov
adc
out
scas
aaa
cmc
fdivrs
pop
add
out
rorl
repnz
fcoml
rorb
or
repnz
cmc
out
adc
adc
jnp
xchg
rcll
lea
cmp
cld
fs
pop
out
pusha
shlb
loopne
mov
testl
repz
pop
mov
repnz
sahf
out
std
mov
fistpl
and
adc
add
adc
push
push
dec
sbb
push
lock
xchg
loopne
pushl
pop
sahf
xor
adc
sbb
sub
jle
cwtl
jno
mov
mov
pop
pop
mov
add
mull
shlb
rorb
nop
add
mov
fisubrl
mov
std
popa
xor
mov
jb
cli
enter
lods
nop
jp
add
dec
cmpsl
push
xchg
scas
xchg
out
pushf
cmp
aad
shrl
test
in
sub
out
lods
and
inc
inc
cmp
stc
lret
scas
sub
popf
sbb
fxch
incl
fisubs
ja
or
lods
roll
dec
mov
cmp
dec
sbb
add
cmp
test
push
or
adc
xor
icebp
shll
dec
mov
push
mov
ljmp
pop
or
negb
ljmp
fcompl
xchg
nop
fdivs
mov
mov
mov
testl
stos
insb
inc
hlt
xchg
pop
neg
mov
push
push
push
jg
pushf
imul
lahf
and
mov
fsubrs
into
or
orl
lret
adc
cmp
jne
dec
test
addr16
pop
mov
sbb
cmc
push
pop
daa
xor
iret
test
mov
mov
or
mov
inc
stos
fcompl
dec
push
fistps
ret
cmp
lods
aaa
pop
push
pop
andb
aam
bound
mov
mov
int3
lret
or
pushf
and
mov
cmp
dec
pop
cmp
roll
mov
sub
imul
std
mov
scas
xor
popa
shr
sub
add
int
mov
ret
jae
adc
addr16
and
sti
or
cmpsl
out
cmpsl
sbb
sub
push
mov
int3
xor
mov
sahf
incl
dec
in
out
lods
das
out
clc
add
xor
fcoms
sahf
shlb
stos
xchg
sahf
nop
int3
nop
in
xchg
adc
inc
rcrb
inc
or
xchg
xor
cmp
pop
jnp,pt
dec
xchg
push
jmp
and
stos
test
push
shrb
add
cli
jbe
sbb
std
ja
cmp
aam
or
add
mov
jb
mov
mov
push
jo
or
int
aaa
dec
sub
cmp
xor
sti
push
in
in
insb
mov
pop
fisttpl
aam
pop
test
repnz
xchg
and
xchg
xchg
add
adc
mov
jle
fiaddl
jns
xor
sbb
pop
aaa
adc
ficoml
mov
inc
fwait
sbb
xchg
mov
mov
add
rcll
lds
push
in
sbb
pop
dec
dec
jo
test
rorl
scas
and
mov
loopw
sar
jne
adc
arpl
mov
sub
mov
cmp
push
or
inc
jle
cmp
sar
cltd
and
inc
out
push
mov
xchg
cli
imul
mov
sub
and
mov
int
add
out
mov
les
mov
jecxz
sub
and
dec
andb
dec
mov
clc
mov
rclb
mov
mov
mov
add
mov
pop
sub
xchg
xlat
scas
pop
cmp
dec
insb
iret
push
addr16
lret
jp
mov
sbb
fs
push
lods
negb
arpl
stos
mov
shrl
push
mov
lahf
ror
in
xchg
in
insl
add
adc
dec
xor
inc
xchg
hlt
sbb
addr16
aas
sti
sub
popf
jmp
sub
into
pusha
mov
fisttps
mov
or
aas
inc
imul
cmp
jns
dec
pop
mov
push
rclb
add
sub
sub
mov
jmp
and
aad
rolb
pop
fsubrl
or
popf
ljmp
sbb
sbb
repnz
imul
cmpsl
mov
xor
sti
adc
shll
cmp
test
cli
and
and
stc
dec
data16
in
push
jbe
pop
mov
push
adc
and
xchg
and
add
mov
push
mov
lret
and
pop
js
xchg
testb
std
mov
loop
lods
pop
mov
cmp
dec
lcall
adc
xor
js
icebp
fcmove
iret
sbb
jle
cmpb
xor
jbe
stc
fists
cmc
add
adc
stos
sbb
cmp
adc
adc
or
sub
scas
and
data16
jg
dec
test
mov
dec
inc
xor
sti
inc
cs
mov
adc
pusha
bound
nop
lea
mov
mov
push
jecxz
or
inc
out
lea
mul
sub
cmp
sahf
sbbb
add
or
mov
aaa
shrb
mov
mov
and
add
ret
scas
hlt
sub
jno
sbb
sbb
xchg
mov
add
push
inc
lods
rcr
data16
inc
addr16
push
je
lret
pusha
cmp
ficoms
push
addr16
sahf
fnstcw
loope
stos
sub
mov
bound
scas
pop
pop
scas
flds
xchg
jnp
fucomp
dec
call
dec
push
cmc
mov
xor
sbb
gs
pop
add
dec
dec
pop
sti
testb
test
mov
push
out
shlb
dec
mov
push
repz
xor
adc
std
mov
jmp
inc
mov
cmp
xchg
js
jg
insl
leave
fldt
pop
add
sub
hlt
mov
repz
mov
mov
lret
and
call
jg
mov
add
lock
in
test
fildl
xlat
mov
aam
addr16
in
mov
ret
fdivl
push
fisttps
push
xchg
fucom
lahf
and
mov
out
mov
add
idivb
and
pushf
and
stc
jns
push
pop
test
les
adc
mov
inc
fucomp
loope
mov
jg
pop
int
xlat
scas
pop
loopne
in
out
loopne
fs
adc
pop
mov
fbld
fsubrs
or
jl
bswap
fdivl
insl
mov
jne
lods
sbb
inc
cmp
mov
stos
lcall
sub
lock
and
repz
aas
mov
xor
stos
or
sub
out
push
inc
push
push
push
mov
cmp
call
cmp
out
hlt
xchg
and
out
imul
cmp
outsb
test
ljmp
shll
fnstsw
gs
es
aad
xlat
fildl
cmpsb
mov
push
add
xlat
pop
std
push
int3
and
in
enter
int3
mov
not
inc
mov
shl
stos
pop
sub
jnp
jno
push
sbb
mov
sbb
incb
inc
repnz
enter
popl
mov
push
inc
and
sub
push
jae
insl
jns
ja
sbb
pop
add
or
jns
or
mulb
sbb
and
jp
and
aas
mull
sbb
sbb
into
inc
addr16
cld
jno
mov
stos
out
mov
mov
push
xor
xchg
dec
or
xchg
or
enter
jb
fdivrl
aaa
loope
mov
inc
xor
cmp
mov
mov
pop
inc
mov
imul
jmp
dec
ss
mov
adc
push
push
fistpl
mov
mov
lock
dec
mov
mov
dec
jle
mov
mov
leave
mov
dec
lea
lret
pop
int3
shrb
test
mov
repz
cltd
dec
push
fldt
aas
addr16
xor
dec
or
cld
aaa
sbb
out
lods
repnz
mov
js
adc
push
pop
push
and
xor
or
test
or
jecxz
andl
push
orb
popa
jb
scas
mov
data16
sub
shlb
js
push
mov
xchg
xor
jns
ficoml
lods
pop
lods
addl
cmp
and
push
int3
cmpsl
inc
xor
xor
push
dec
add
pop
xchg
dec
dec
loope
push
sbbb
stos
clc
mov
and
xchg
jp
ret
add
rcrb
daa
popa
sahf
sub
stc
and
inc
jmp
xor
shl
cmp
mov
xchg
outsb
enter
inc
pop
adc
jae
push
inc
test
or
adc
xor
mov
sbb
int
mov
imul
rep
arpl
lret
push
jecxz
cltd
jg
mov
lret
jnp
add
add
in
daa
fcoms
sub
loop
addr16
jl
fisubs
in
addr16
jno
lcall
push
sbb
adc
jb
enter
fs
inc
adc
mov
lret
xchg
cs
mov
xchg
lret
sbb
shl
icebp
faddl
or
ret
inc
lods
mov
imulb
int3
dec
outsl
lds
movsb
lret
mov
mov
std
mov
cmp
jge,pt
push
ljmp
out
lcall
in
or
dec
mov
xchg
pop
dec
dec
shrb
lea
ror
adc
ljmp
push
pop
stos
push
mov
aaa
ljmp
test
sbb
lods
dec
sub
scas
clc
fimull
fcomps
insb
aas
mov
scas
inc
dec
incb
movsl
arpl
sub
add
push
cld
add
inc
loop
jp
mov
dec
fs
enter
out
lds
or
mov
mov
sarl
data16
lock
mov
and
scas
mov
jle
enter
fmuls
addr16
ss
inc
or
mov
add
inc
mov
adc
idivl
mov
dec
adc
andl
pop
sub
jmp
clc
int
mov
fidivrs
xchg
scas
fs
pop
mov
mov
sub
roll
adc
das
ret
cmpsl
leave
aas
in
adcb
xchg
xchg
sub
fistps
sub
sub
rcl
out
push
push
cli
and
aam
int
rcl
dec
std
std
dec
in
cli
mov
xor
jmp
in
mov
cmpb
test
mov
xor
imul
dec
into
adc
fsubs
push
push
sti
repnz
insb
je
mov
jo
mov
and
mov
mov
das
xchg
and
lahf
add
xor
dec
ja
out
pusha
dec
jnp
nop
pop
loop
inc
inc
mov
sub
outsb
loopne
fmull
sub
imul
addr16
mov
ds
pushf
scas
out
jo
sub
movsb
cmp
push
in
stos
ja
push
clc
and
mov
push
sbb
push
cs
fdivrl
daa
adc
inc
inc
jae
fildl
lock
inc
add
push
push
loop
mov
mov
cltd
jecxz
push
adc
outsl
and
test
mov
arpl
sahf
bswap
add
pop
pmaxsw
lret
inc
mov
fmul
hlt
mov
sbb
and
cltd
xor
rcll
xchg
xor
jns
sti
fistpl
cmp
pop
add
push
imul
fmuls
push
jp
push
push
decl
sbb
stos
add
or
sub
test
pop
push
or
gs
cltd
xchg
adc
pop
sbb
pop
mov
sti
bound
movsb
pop
sbb
ljmp
jno
je
pop
mov
fidivrs
shll
pop
sbb
mov
out
mov
mov
xorb
ret
ret
cmpsb
xchg
mov
jmp
sub
pop
fs
out
ficoms
push
push
dec
jnp
push
push
leave
push
push
shl
cmp
aas
push
xor
inc
xchg
leave
push
mov
jae
test
sub
imul
adc
mov
cmpsb
mov
enter
mov
and
lea
hlt
mov
pop
mov
mov
dec
mov
int3
mov
les
dec
repnz
dec
xchg
push
mov
mov
hlt
push
into
adc
jg
cmovnp
subl
mov
xchg
sub
decb
lahf
into
aad
sub
and
push
test
fstpt
sub
pop
xor
jl
adc
out
lods
or
shrl
ljmp
loopne
adcl
lds
faddl
int3
push
add
push
hlt
jle
add
dec
je
pop
lahf
xlat
mov
popa
sub
cmp
dec
jmp
sub
inc
es
cmpsl
push
inc
sub
std
sub
arpl
daa
pop
and
push
mov
in
test
cmp
inc
inc
mov
xchg
push
dec
sti
mov
fistps
sub
or
xor
in
xchg
sbb
jmp
pop
mov
mov
test
jae
push
enter
sbb
sub
xor
ja
sub
cmp
mov
cmp
or
and
insb
pop
fdiv
lret
sti
testl
in
mov
cmp
pop
mov
add
cmc
or
mov
test
inc
shll
or
mov
dec
mov
adc
scas
cmp
aad
sbb
inc
rcll
out
leave
push
mov
mov
pop
sahf
sub
jbe
fs
cmp
hlt
mov
inc
sub
mov
sbb
ja
std
test
sub
imul
pop
inc
or
in
jno
cmp
das
lret
pop
pop
mov
inc
push
mul
negl
loopne
sub
sti
or
cwtl
jle
jb
test
test
dec
and
pop
push
and
adc
imul
sbb
jmp
fsubs
push
sbb
push
sub
fdivrs
adc
movsl
inc
bound
stos
cmp
mov
sar
fucomp
inc
or
jbe
sub
or
pop
jae
and
popa
add
adc
and
rcrb
mov
dec
es
cwtl
cmpsl
sbb
lods
xor
notb
inc
xchg
push
daa
stc
and
scas
xor
cmp
xor
lret
xchg
xor
fdiv
nop
cli
cwtl
loope
mov
cmp
inc
shrb
notb
shlb
lods
xorb
xlat
sub
in
pop
push
lds
jle
jl
in
xor
popf
xor
test
sub
add
jns
jae
loope
jno
add
dec
xchg
mov
into
xor
fdiv
mov
jp
lahf
adc
dec
dec
std
cmc
jge
mov
inc
cmpsb
mov
cwtl
mov
test
sbb
sub
fimuls
xor
ficoms
cmp
push
sub
add
ds
or
push
jno
cli
out
xchg
sub
and
divl
mov
test
enter
adcl
jae
jo
add
mov
data16
rcr
js
xchg
outsb
mov
insl
mov
xchg
aaa
fmull
test
inc
jge
jo
comiss
outsb
mov
and
aaa
pop
mov
sbb
decl
or
into
mov
hlt
sub
mov
fcomps
push
jg
add
mov
jns
cmc
pop
push
push
in
in
mov
clc
aam
cmpsl
adc
in
out
or
test
je
fs
jle
aas
sbb
pop
ret
lds
push
lock
outsb
xchg
loop
dec
xor
sti
sahf
popa
xorl
sub
mov
hlt
out
xor
roll
pushf
xor
xor
movsb
mov
jnp
inc
jle
sbb
dec
stos
ret
or
js
dec
and
ret
mov
pop
fs
mov
enter
mov
and
outsl
lods
cltd
pushf
clc
lds
pop
shrl
or
add
jae
mov
pop
stos
jb
dec
jo
in
or
addr16
cmp
sub
icebp
fwait
mov
adc
inc
xchg
icebp
mov
jo
nop
or
and
fimull
hlt
arpl
push
cs
inc
push
jo
pop
insb
sti
jo
mov
jecxz
cwtl
testl
test
push
mov
popa
jle
inc
mov
dec
add
movb
jbe
fsubrl
ljmp
nop
add
insl
push
call
clc
enter
xor
test
xchg
and
shll
cwtl
or
mov
aad
dec
enter
pop
hlt
pop
xchg
mov
adc
xchg
lock
addr16
int3
cmp
into
test
jae
xlat
pop
lods
fidivrs
mov
mov
scas
cmc
loope
cltd
mov
sub
push
jno
pop
pop
jg
leave
icebp
cmpl
mov
mov
or
xlat
int3
in
lcall
dec
mov
mov
data16
test
xor
dec
dec
mov
ret
jmp
mov
push
scas
cmp
or
mov
xchg
lret
pop
jno
lods
pop
adc
dec
rcll
stos
pop
sub
push
xor
imul
repnz
mov
or
mov
in
in
sbb
shl
icebp
insl
xchg
cmpsl
sbb
test
push
lock
cmp
dec
mov
mov
xchg
mov
arpl
or
push
mov
sbb
mov
dec
push
sarl
bound
jne
mov
std
scas
repnz
je
cmp
outsb
fimull
aas
lods
cmp
and
mov
or
dec
mov
dec
in
popa
pop
xor
shll
xlat
or
int3
flds
xchg
sub
stos
pop
dec
sub
je
jmp
cltd
insb
pusha
pop
mov
pop
aam
in
sub
cwtl
jmp
cmp
mov
lahf
or
sbb
dec
loop
iretw
js
sbb
into
mov
fs
sub
and
mov
insl
or
icebp
lock
mov
test
call
fsubl
cli
pop
out
mov
fistpl
subl
stos
out
sbb
sbbb
loopne
out
stos
mov
and
xchg
fs
inc
sti
lahf
adc
cmpsb
movsl
rcrl
sbb
fstl
xchg
jge
cwtl
dec
push
push
movsb
mov
or
sub
add
dec
push
lret
or
sahf
mov
push
mov
sub
and
and
push
jg
popf
into
mov
scas
cmp
loop
stos
dec
cmp
or
sbb
add
loopne
and
adc
pop
mov
sarl
test
in
or
popf
aaa
mov
cmc
sub
xchg
pop
xor
stos
mov
and
lods
inc
xor
jb
xor
inc
lret
fidivl
divl
cld
jne
enter
cwtl
fisubs
lock
pop
sbb
mov
mov
jb
pushf
test
adc
xchg
push
mov
test
movsl
pop
jle
inc
and
insl
fstl
sub
fwait
cli
and
xchg
cmpsl
pop
xor
and
pop
mov
mov
mov
mov
insb
inc
lret
sbb
push
lahf
or
cltd
repz
mov
mov
test
cs
popf
or
push
xchg
add
pop
outsb
push
loope
fs
aas
aas
scas
cmp
push
mov
orb
dec
pop
adcb
lret
sub
pop
outsl
pop
mov
mov
inc
dec
stos
add
jmp
add
sbbb
test
divb
jae
mov
ret
js
add
in
push
xchg
mov
jnp
mov
hlt
mov
es
outsl
inc
loopne
cmp
aas
jae
xchg
int
dec
stos
jl
lcall
cld
out
push
mov
test
in
add
mov
mov
push
fadd
jnp
sti
test
dec
or
lds
sbb
push
call
test
imul
int3
cwtl
pop
repnz
pop
xor
or
lds
cmp
outsl
ror
pop
adcb
fwait
sbb
ss
inc
je
inc
out
mov
fs
popf
mov
ljmp
dec
imul
jp
data16
xchg
mov
cmp
scas
cmpsl
cltd
push
xchg
pop
push
sbb
dec
rorb
jno
sahf
inc
xchg
repnz
adc
or
or
push
cmp
shl
pop
sbb
or
shrl
movsb
in
test
mov
sub
cmp
mov
and
cmp
mov
fnsave
jg
dec
das
int3
test
dec
pop
push
sahf
out
cmp
bound
int3
push
xchg
push
test
mov
sbb
cwtl
cld
jle
adc
push
cmp
dec
inc
loop
shll
mov
int3
pop
lcall
cmpsl
xchg
int3
gs
mov
loopne
cs
xor
mov
out
sub
incb
lea
or
mov
xchg
inc
adc
mov
stc
arpl
xor
movsb
js
sub
xchg
pop
in
xlat
pop
out
pop
sahf
lea
mov
lret
or
cld
jbe
sbb
in
cwtl
jp
aam
dec
jnp
fdivs
mov
or
out
fildl
leave
arpl
mov
adc
mov
loopne
lcall
sbb
mov
pop
shrb
and
pusha
test
push
inc
mov
xchg
push
pop
inc
dec
sarb
ret
lcall
and
sti
cmp
sbb
mov
push
imul
push
dec
outsb
xchg
mov
and
popf
sub
cmp
or
push
roll
dec
xor
and
lcall
jmp
pushf
fisubrs
xchg
or
test
dec
js
mov
and
cltd
fsubr
xor
xchg
imul
into
divb
sub
loop
mov
push
jmp
movsb
push
pop
xchg
sub
ret
pop
fisubrs
add
incb
jmp
dec
pop
insb
fnstenv
add
cld
out
mov
repnz
or
lds
in
sti
in
cmp
pop
out
inc
jns
ret
or
sub
lahf
out
adc
cmc
movsb
push
push
jecxz
jge
mov
das
fcoms
fstpl
das
dec
mov
and
push
or
jecxz
fisubl
xor
jmp
add
or
das
push
xchg
mov
test
and
data16
sbb
aam
daa
mov
in
cmp
mov
mov
dec
push
xchg
test
popf
imul
xlat
inc
inc
nop
xor
cmp
xchg
push
pop
sti
or
lock
mov
push
ret
dec
dec
repz
adc
xlat
sub
jmp
ljmp
add
sbb
inc
call
cmp
sbb
sbb
clc
hlt
test
sbb
mov
cmp
aas
lea
adc
shr
sbb
test
repnz
aam
in
data16
in
inc
scas
jne
bound
mov
bound
sbb
sub
js
sti
and
aam
ret
pop
pop
leave
cld
scas
andl
fucomi
pop
daa
scas
xor
scas
dec
push
sbb
mov
fs
push
push
jno
jbe
mov
aaa
mov
fildl
jns
dec
jo
xchg
jge
adcl
icebp
cvtps2pd
adc
push
mov
fmuls
pop
adc
lock
gs
xor
pop
mov
adc
push
and
lret
dec
xchg
xor
mov
cltd
fiadds
sarb
mov
mov
xchg
ret
push
les
adc
scas
xor
pop
xor
adc
lahf
das
pop
bound
mov
shll
lret
xchg
inc
cmp
lea
cwtl
sti
mov
mov
mov
aam
out
push
mov
dec
and
adcl
jb
inc
sub
test
xor
pop
lcall
mov
push
aam
imul
repnz
and
fst
pop
lea
addr16
fcoms
popa
mov
inc
ss
popa
sub
bound
in
xchg
fucomi
cmc
and
lods
xchg
pop
jnp
les
push
call
sub
shlb
xor
xor
cmp
mov
push
mov
xchg
lock
imul
fmuls
test
pusha
xchg
cld
push
sarb
clc
insb
inc
push
std
mov
scas
movsb
pop
mov
popf
sti
cld
nop
icebp
lret
mov
leave
or
es
cltd
sti
sub
ss
mov
sub
push
cmpsl
mov
sti
sbb
inc
fbstp
test
inc
insl
xor
out
jp
cmp
test
mov
sahf
pop
imul
mov
out
clc
or
xor
cs
jl
out
cltd
repnz
sub
repnz
mov
jmp
jge
cmp
ja
mov
sarl
dec
test
stos
xchg
mov
sbb
mov
out
jns
aad
call
test
in
int3
cli
inc
mov
adc
sti
xchg
movsb
repz
mov
std
insl
test
sbb
inc
dec
push
stos
test
sub
pop
pop
repz
out
pushf
pop
xchg
jg
mov
mov
mov
shlb
icebp
inc
loope
cmp
cmpsb
sbb
outsl
xchg
pop
xor
arpl
shl
push
jae
sub
pop
fisttpll
out
mov
add
pop
or
or
lcall
or
mov
mov
inc
jp
sub
jge
pushf
jge
mov
mov
popa
mov
in
sbb
lret
daa
lods
xchg
sub
cld
xchg
push
ss
into
ret
push
mov
dec
lret
pop
movsl
test
lods
jge
and
shll
in
cs
fmuls
sub
fstpt
mov
push
xchg
xchg
sbb
jns
and
sub
dec
fsts
sti
fcomip
and
test
leave
adc
mov
out
mov
aas
xlat
pop
test
movsb
lcall
sbb
or
scas
push
add
pop
xchg
lcall
adc
cmp
mulb
fsub
fs
das
xchg
test
pop
sub
sub
out
adc
and
pushf
cmp
push
jae
in
xor
std
jle
pop
out
mov
push
pop
lcall
repnz
repnz
adc
cld
mov
in
lahf
xchg
sbb
pop
inc
push
add
lcall
and
and
mov
ss
mov
jmp
inc
stc
das
dec
dec
cmp
mov
adc
jne
data16
xchg
mov
loope
imul
fs
push
fcomp
popa
sahf
fistpll
mov
dec
mov
sti
enter
daa
lods
arpl
adc
movsb
cmp
jno
int
std
pop
xchg
sub
lcall
aam
dec
xchg
out
mov
mov
dec
lret
inc
mov
sarb
aaa
mov
shl
xor
jne
adc
xor
mov
mov
mov
pop
push
imul
inc
lcall
sbb
xlat
jno
rolb
enter
lcall
ret
mov
lods
sahf
enter
aad
cltd
jno
test
imul
and
sahf
cmp
cs
leave
xor
or
inc
inc
sbb
push
sahf
or
hlt
lods
inc
in
and
or
mov
cmp
pop
push
sarb
jl,pt
jae
xor
add
cmc
ljmp
jecxz
subl
jmp
lret
outsl
iret
mov
xor
movsb
xchg
hlt
into
cltd
push
je
push
arpl
mov
inc
push
mov
xchg
in
push
jmp
outsb
mov
add
aaa
cld
push
lock
in
mov
cli
gs
fsubr
mov
fwait
sbb
mov
sbb
adc
shrl
int3
in
scas
scas
mov
or
fistl
lock
lods
xlat
les
scas
adc
dec
fwait
adc
dec
mull
pop
push
cmp
mov
mov
shll
cmc
pop
mov
aas
pop
in
cmove
xlat
push
xor
icebp
leave
out
mull
test
cmpsb
pushf
cli
push
add
aad
cmp
cmp
inc
lea
sbb
test
push
mov
lea
cmp
std
lods
mov
loope
out
sbb
xor
cmp
ret
xchg
icebp
aad
jmp
pop
stc
fwait
mov
xchg
or
xor
pop
mov
add
test
cmp
mov
push
movsl
andb
rorl
add
adc
jae
cmpsb
jg
aaa
test
imull
mov
dec
adc
mov
jnp
sahf
cwtl
mov
add
fwait
enter
sahf
daa
in
xchg
xlat
std
and
dec
lea
and
sub
add
add
xchg
sub
rorl
pop
sub
xor
adc
clc
push
add
das
adc
pop
cmc
fstp
shlb
test
push
fsub
je
mov
in
xor
frstor
xor
sbb
ss
xor
or
mov
mov
and
fucomp
add
mov
lock
jns
out
les
sbb
imul
rorl
or
jb
add
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
loopne
mov
outsb
sbb
jp
pop
jp
aas
imul
pop
mov
aaa
sub
push
cmp
xchg
push
int
iret
bnd
push
test
push
and
mov
test
scas
cmp
add
pushf
xchg
cld
imul
xchg
mov
mov
fisubrl
mov
or
and
push
xor
add
cmc
jne
add
popa
rorl
pop
test
adc
movsl
and
pop
and
nop
mov
pop
dec
or
pop
sbb
xchg
daa
data16
das
pop
jecxz
sbb
std
push
mov
out
shrl
adc
fldcw
mov
pop
ja
xchg
pusha
and
adc
clc
add
or
cld
cwtl
dec
mov
fwait
lods
insb
pop
nop
cmc
lock
xchg
fs
dec
insl
pop
add
icebp
sub
ljmp
test
sub
repnz
cwtl
stos
xchg
inc
pop
imul
pop
test
mov
pop
in
dec
and
add
jp
cli
jmp
je
sub
add
gs
xor
lock
shll
cmpsl
shl
add
orb
gs
pop
int
push
fcomps
push
mov
out
mov
in
filds
jno
leave
sub
int
and
bound
jge
aam
add
mov
int3
dec
loop
pop
in
in
add
movsb
and
push
repz
in
sbbl
icebp
ret
cmpsl
jns
sahf
push
in
push
jbe
aam
cmp
or
ret
not
mov
jge
add
mov
out
scas
mov
in
mov
jbe
xor
dec
mov
mov
add
sti
pop
popa
icebp
bound
push
mov
fidivrl
jnp
mov
arpl
std
shll
out
inc
sub
adc
xchg
cltd
movsl
pop
lret
pop
jg
test
adc
inc
sbb
and
popf
insl
xlat
hlt
xchg
ja
pop
jle
dec
cmpsl
or
imul
call
mov
or
sub
loopne
ljmp
inc
sti
hlt
cmp
adc
inc
xchg
in
dec
mov
insl
movsb
rcrb
dec
pop
imul
lods
push
adc
shlb
mov
sub
loopne
sub
aas
ja
dec
adc
sbb
mov
outsb
shlb
jae
and
mov
loopne
fucomp
outsl
in
push
push
dec
pop
sahf
js
aad
adc
mov
sub
sub
test
fdivrp
adc
jo
jecxz
decl
ficoms
lret
add
jp
dec
movsb
jne
fstpl
fisubrs
sbb
xchg
aaa
test
aad
mov
xlat
xchg
fbld
loope
jecxz
xor
push
or
out
xor
daa
scas
push
cmc
xor
dec
bound
sbb
aad
jns
idiv
lret
sbb
pop
cld
fidivl
xor
mov
pusha
adc
mov
cmp
inc
or
sbb
clc
imul
bound
leave
or
out
pop
mov
mov
jnp
dec
ret
aam
xchg
out
das
icebp
cld
cld
shll
inc
push
lds
lods
jle
into
cs
jg
and
psubd
movsl
les
xor
xlat
cmp
push
minps
dec
sbb
xor
nop
decl
xchg
xor
xor
mov
cmp
daa
cmp
punpcklbw
push
jno
rolb
xchg
pushf
outsl
sbb
push
mov
mov
sub
mov
in
or
adc
into
ror
cmc
jecxz
and
stos
xor
sub
and
jg
jo
lock
xor
add
loop
test
iret
loopne
rcl
push
xor
adc
popf
mov
dec
out
pop
push
icebp
testb
lds
out
cli
adc
pop
mov
arpl
popa
mov
xor
fdivrp
fisubs
repz
lahf
sbb
push
in
jle
xchg
jno
or
popfw
sbb
mov
mov
outsl
jns
mov
dec
or
dec
jmp
je
push
mov
pop
cs
aaa
ret
or
ret
out
push
dec
aaa
push
inc
ljmp
mov
push
inc
ret
cltd
aad
cmc
mov
fs
fisubl
push
mov
sub
ja
xchg
stos
pop
sbb
pop
xor
sbb
push
sub
mov
mov
jne
jb
xchg
cwtl
cmp
xchg
jno
lods
fistl
mov
ss
imul
sbb
dec
fnsave
push
sbb
ja
push
mull
out
and
repnz
stos
push
pop
push
lods
push
or
jge
add
push
cwtl
lods
xlat
inc
insl
jbe
pop
shr
mov
push
mov
cld
gs
rcll
sbb
add
dec
mov
cmp
inc
dec
mov
inc
mov
xor
sub
mov
int
leave
rsqrtps
mov
mov
xchg
pop
and
jbe
push
mov
cmp
cli
adc
ret
and
inc
jecxz
lods
pop
inc
mov
sub
stos
mov
rol
mov
mov
lret
int3
movsb
push
jp
xor
ljmp
mov
fs
pusha
repnz
into
popa
test
popa
repnz
push
loope
dec
popa
ss
in
out
in
iret
mov
bound
or
jge
pop
mov
cld
mov
mov
cmp
and
mov
lcall
pop
dec
or
jecxz
clc
sub
iret
mov
lahf
jne
xor
rorl
popf
stos
xor
packssdw
mov
fcompl
adc
mov
sub
xchg
mov
repnz
and
testl
and
cmc
aad
and
mov
add
dec
aad
push
xor
pop
out
dec
push
sbb
jp
adc
and
push
mov
push
cmp
stos
mov
shr
pop
addb
jno
dec
fiadds
and
popa
push
add
lods
fs
sti
in
xchg
pop
aas
fisttpll
sbb
shrb
fmuls
sahf
jb
fiaddl
and
push
push
mov
test
ret
fwait
pop
inc
dec
mov
jge
outsb
xor
pop
ljmp
dec
clc
dec
pop
and
push
inc
push
dec
sub
pop
sbb
and
mov
stos
mov
int3
or
sbb
sub
or
dec
daa
test
add
rol
xor
scas
es
mov
xchg
in
inc
adc
xlat
push
xchg
dec
jns
inc
rorb
inc
push
inc
fstl
xor
xchg
dec
push
push
sub
cmp
fsubrs
fnstsw
outsb
mov
jne
xor
or
add
mov
mov
daa
sub
xchg
adc
mov
call
lea
and
js
push
inc
cmp
ljmp
mov
sbb
movsl
insb
popf
mov
pop
rclb
mov
loop
sbbb
cld
dec
xchg
stc
cmp
fs
lahf
call
jl
add
push
dec
sbb
xor
frstor
mov
jge
jo
mov
jge
pop
pandn
cmp
scas
inc
add
loopne
jge
jecxz
mov
test
mov
adc
pop
iret
dec
push
mov
dec
es
mov
inc
push
out
data16
mov
jne
jbe
test
adc
daa
add
jge
pop
pop
add
cld
pop
divl
je
add
xchg
fwait
lods
sbb
dec
dec
sbb
test
push
outsl
push
gs
mull
jno
leave
dec
dec
test
jns
mov
push
out
sub
xor
lods
insb
sub
xchg
out
insl
mov
lods
and
sub
push
xchg
xchg
adc
sbb
cld
ds
dec
aas
push
lret
retw
pop
and
rcl
aam
fcoml
mov
mov
xchg
xchg
out
gs
arpl
mov
and
pushf
dec
js
fcmovu
sbb
jno
dec
mov
push
pop
or
popa
mov
divb
int3
cmp
lods
insb
inc
pop
lods
loop
shlb
bound
cld
sbb
rolb
lcall
adc
xchg
cmp
insl
add
rcrl
mov
fdivr
and
lods
jmp
xchg
sub
adc
cmp
dec
and
inc
cmp
xchg
xlat
aaa
rcll
das
in
je
xchg
orl
sub
add
mov
add
mov
inc
pop
aad
mov
mov
lods
insb
test
cs
test
lret
imul
adc
punpcklwd
cs
test
mov
cmp
push
jno
movsb
scas
push
lahf
xor
pop
fsubrl
in
pcmpeqw
or
sbb
cmp
negb
or
jns
cmp
fisttpll
test
pop
pop
loop
imulb
sub
iret
push
orb
loopne
or
push
xlat
xchg
push
pop
stos
lret
push
nop
or
pop
test
shll
repnz
pop
imul
mov
scas
pop
xor
rorl
inc
xor
aad
std
push
imul
sub
into
ret
jg
mov
into
pop
xlat
add
jg
testb
xchg
test
ss
xchg
push
and
dec
out
mov
inc
xorl
add
cs
loopne
and
inc
enter
sahf
rcrb
mov
mov
shll
imul
icebp
pop
inc
pop
lret
ret
icebp
sarl
sbb
rcr
add
insb
xorl
jb
sarl
xlat
data16
sub
xchg
mov
xlat
ja
mov
lds
push
jb
xchg
jo
loop
pop
sarb
outsl
sahf
add
aas
ret
rol
jnp
dec
sub
xchg
dec
clc
lret
add
data16
inc
scas
subb
outsb
sbb
sbb
fsubr
nop
mov
sbb
jne
sbb
sbb
sbb
hlt
push
add
mov
cli
cmc
or
rcrl
push
dec
mov
into
push
shl
xlat
pop
cmp
xor
insb
fisubl
jge
mov
mov
lock
add
outsb
cwtl
add
pop
repz
xchg
xchg
es
test
lods
pushf
into
mov
mov
jmp
mov
mov
xacquire
test
mov
mov
inc
fdivs
test
bound
cltd
testl
mov
in
mov
pop
testl
test
pop
test
callw
sbb
lods
imul
call
mov
sub
js
fadd
pop
in
insb
jge
inc
jmp
js
sbb
test
stc
stos
and
jno
aam
adc
sub
lods
jmp
sahf
and
aam
inc
dec
sbb
cmp
mov
jnp
inc
mov
xchg
adc
jmp
xchg
pop
jae
mov
mov
imul
cmp
cwtl
add
mov
jp
sbb
cwtl
pusha
in
pushf
scas
mov
lods
cs
lret
jbe
sub
sbb
adc
and
mov
js
adc
mov
push
test
clc
sub
div
movl
shrb
xchg
jge
xorb
push
ret
pop
sbb
popf
cmp
jg
xor
mov
rclb
outsl
aaa
lods
push
cwtl
jne
cmp
jbe
ljmp
movsb
xchg
push
xor
xchg
sub
add
mov
xchg
jb
mov
jnp
lret
iret
popfw
pop
mov
mov
loope
push
outsb
ja
add
fcmovnbe
lahf
inc
imul
fsubr
and
mov
sub
add
inc
in
arpl
mov
lcall
pushf
mov
fisubrl
and
sub
inc
test
fdivrs
jl
int
gs
xchg
cmp
faddl
cltd
in
inc
rol
cwtl
mov
and
test
xor
sti
mov
fstpl
sbb
mov
stc
sub
dec
fs
and
or
popa
cmp
push
xlat
outsl
mov
dec
sbb
aaa
in
sar
out
and
sub
test
ljmp
or
sbb
dec
repnz
lods
cmp
outsb
cs
jg
or
icebp
negl
mov
loopne
rcrb
and
mov
adc
cli
sbb
and
cltd
pop
xchg
adc
cmp
imul
pop
pop
les
push
addr16
jge
mov
jnp
in
loope
dec
notb
jp
clc
xlat
stos
xlat
sbb
xchg
flds
and
cmpsb
in
repz
in
cwtl
dec
fxam
dec
lods
pusha
pop
and
test
imul
leave
mov
fs
sub
out
adc
jmp
shll
xor
pop
mov
xor
or
in
add
jge
mov
pop
sbb
ret
les
hlt
mov
dec
subb
adc
stos
in
pusha
sub
mov
cwtl
xor
jmp
test
jnp
and
sbb
mov
xchg
sub
test
leave
push
pop
les
inc
and
push
fs
mov
lods
cltd
or
adc
sbb
vpmullw
test
sbb
fisubrs
out
xlat
aam
push
sti
push
movsl
outsl
jge
or
arpl
les
bound
lret
pop
aam
xorl
pop
inc
pop
inc
loope
int
pop
mov
push
ficoms
inc
dec
jge
inc
jno
cmpsb
rorb
push
jo
daa
adc
add
jecxz
lret
dec
mov
movsb
push
idivl
hlt
shrb
cmp
int
or
inc
test
sub
add
xchg
loop
cmc
mov
pop
lods
fucomi
add
mov
xor
dec
mov
pop
pop
repnz
sub
scas
mov
das
call
inc
shrl
adc
sub
aam
scas
aaa
pop
outsl
stos
into
int
insb
movsb
mov
inc
adc
pop
int
ret
adc
pop
imul
jge
in
lods
pop
test
aad
das
pop
inc
in
push
fisttpll
cmpsb
sub
sub
ret
pop
ljmp
mov
jg
xor
into
jne
push
dec
mov
bound
negl
out
mov
aam
je
fdivrl
in
mov
pop
lods
mov
sahf
test
ret
fsubrs
fstl
inc
jbe
icebp
popf
push
add
insl
jbe
adc
int
dec
pop
push
ds
jo
cli
movups
cmp
out
scas
pop
pop
xor
jb
sbb
test
shrl
out
data16
sub
adc
insb
call
in
dec
add
lcall
sbb
cmp
es
testl
xchg
jno
stos
pop
mov
push
mov
or
push
mov
and
push
addr16
mov
jbe
sub
cmp
and
clc
aaa
sti
add
lret
pop
xlat
xchg
incb
sub
int3
data16
mov
stos
fwait
xchg
jle
xor
mov
cmpsb
pop
mov
test
fcoms
stos
sti
mov
or
popf
cmpl
mov
inc
pop
xchg
ljmp
jo
scas
mov
leave
or
cli
inc
gs
fstpt
mov
addr16
outsl
cmpsl
idivl
jno
ficoml
dec
add
fisttpll
lahf
cwtl
cltd
xor
jae
add
xor
and
lock
fldcw
subb
fwait
insl
jnp
stos
and
sub
inc
into
insl
lods
test
jecxz
fs
jge
bnd
lret
scas
clc
cs
mov
mov
pop
cmpsl
pop
ficomps
cld
out
daa
shlb
sub
daa
mov
push
push
inc
or
je
lahf
dec
mov
add
mov
fwait
add
loope
cmc
enter
add
fwait
push
test
stos
dec
ret
mov
add
insl
cli
sti
popf
xor
aaa
push
jp
xchg
mov
out
xor
jmp
loopne
dec
mov
push
xor
addr16
and
outsb
adc
adcl
mov
dec
aad
movsl
nop
dec
test
jns
xor
loopne
jge
pop
dec
aad
push
inc
adc
out
repnz
aad
repz
outsb
daa
mov
sbb
movsb
cmpsb
int3
rcrl
xchg
lret
sub
and
in
jle
xor
in
push
imul
mov
js
pop
arpl
jge
xchg
pop
jnp
fsts
fists
shrb
jnp
ror
sbbl
inc
mov
dec
pop
loop
add
ret
mov
cmp
mov
neg
fs
mov
cmp
daa
arpl
mov
loope
sub
xchg
inc
loop
aam
mov
pop
inc
push
push
jge
push
stos
xchg
mov
mov
dec
incb
ss
outsb
mov
pop
popfw
decb
xor
pop
mov
sahf
stos
mov
stos
outsl
lods
jb
mov
cmp
jecxz
data16
jb
shll
test
fisttps
xchg
repnz
insl
int3
popa
xchg
sahf
or
push
sub
or
lods
gs
add
in
jns
xor
fdivrl
movsb
push
gs
sbb
cmp
stos
xchg
in
es
decb
add
push
add
push
icebp
out
stc
push
or
into
push
pop
sbb
sahf
pop
lods
jge
clc
daa
test
testb
mov
mov
sub
add
jae
aam
add
jg
mov
movsl
inc
cmp
rcr
xchg
cwtl
aad
mov
push
enter
add
jbe
scas
inc
xadd
add
jns
pushl
ds
inc
repnz
add
pop
stos
in
dec
adc
cwtl
stc
ja
sbb
dec
mov
mov
repnz
loope
clc
aad
jo
jb
shll
notl
add
movsb
jl
leave
mov
mov
loopne
add
mov
mov
jbe
sbb
pusha
outsb
add
mov
mov
mov
or
orl
and
mov
sbb
test
cs
jno
xchg
mov
int
js
clc
stc
insb
fldt
cmp
xchg
int
jns
popf
cmpsb
idivl
or
roll
imul
test
rcr
mov
fmulp
adc
cwtl
pop
bound
imul
pop
roll
xchg
test
hlt
add
in
popl
adcb
lds
pop
add
mov
ds
or
test
xchg
insl
push
push
pushf
adc
sub
mov
xchg
push
dec
fildl
mov
fdivs
negl
dec
adc
dec
loopne
xchg
mov
mov
pop
je
arpl
fcom
movntq
out
fcoms
cmpb
fbstp
push
gs
loopne
insl
call
out
cmc
pop
sub
rcr
add
add
lret
adc
xchg
pusha
pop
adc
out
dec
test
fidivrs
mov
jne
into
xchg
push
and
fdivs
test
aas
push
mov
fldl
lret
mov
pop
and
mov
pusha
jo
or
xorb
ror
or
push
cmp
inc
add
lds
divl
aad
aam
xor
inc
fldt
mov
pop
popa
test
in
mov
xlat
jns
jmp
push
rcll
enter
dec
jle
sbb
and
xor
pop
pop
and
push
leave
rcll
xchg
and
mov
sti
pusha
mov
mov
ret
sahf
cltd
ret
shrb
adc
add
mov
and
bound
popa
nop
ja
in
jae
lret
imul
roll
cmp
mov
and
cwtl
fs
jne
jnp
pop
pop
jl
jle
xor
xor
xchg
int
pop
xchg
aad
jg
cmp
push
pop
cmpsb
repz
movsb
imul
repnz
pop
fisttpll
cmp
pop
mov
mov
push
mov
stos
sbb
das
xor
push
stos
mov
notl
xor
addr16
mov
mov
shll
iret
repnz
shll
mov
pop
data16
push
xchg
inc
aas
out
push
cmp
adc
sbb
dec
jns
mov
fldcw
pop
push
test
roll
aam
mov
mov
insl
ja
ss
mov
clc
adc
xchg
push
mov
and
mov
inc
dec
imul
sub
in
push
mov
ficoms
mov
push
mov
les
pop
popa
jp
ja
cmp
lret
dec
xor
push
xchg
adc
aaa
cmp
sub
cmp
imul
sti
popf
pop
xchg
or
mov
mov
push
dec
mov
les
stos
data16
dec
pop
jne
adc
sahf
mov
dec
mov
lcall
cmp
popa
pusha
call
cltd
push
js
stos
cld
insb
stos
jb
daa
xchg
jno
push
sarb
jns
sub
cmp
int
and
mov
addr16
adc
in
mov
push
sti
ljmp
movsb
ret
cmp
imul
test
test
xchg
and
lods
mov
cmp
mov
in
int
es
xor
scas
or
mov
lods
dec
push
pop
cld
inc
mov
and
cld
pop
push
aam
dec
ficomps
mov
iret
mov
sar
fwait
xlat
test
clc
frstor
cmpsl
gs
jmp
or
mov
out
enter
sbb
pop
push
pusha
jp
sub
loope
iret
out
pop
jbe
fimull
sub
in
inc
leave
mov
lods
push
sbb
test
mov
mov
or
stos
and
jnp
movsb
sbb
xchg
lret
dec
bswap
fsqrt
jne
cmp
idivl
mov
into
out
push
sub
mov
les
fwait
in
fnstenv
in
cld
pop
adc
mov
or
add
jbe
arpl
push
inc
fbld
jne
mov
in
xor
xor
inc
inc
call
enter
sbb
mov
sbb
fwait
jns
xchg
icebp
les
xchg
push
cmp
cld
fildll
clc
xorb
hlt
imul
jge
test
mov
push
jle
inc
xchg
rcll
mov
lea
dec
xchg
test
fcmovnbe
add
mov
pop
inc
clc
mov
mov
scas
in
in
pop
pop
cmp
push
mov
mov
ret
mov
mov
lret
movl
shlb
xchg
shlb
sbb
adc
jmp
loope
and
insb
adc
insb
out
orb
in
lods
mov
xchg
out
aas
xchg
mov
mov
stc
xchg
pop
pop
lods
fbld
mov
push
push
call
imul
cmp
fs
mov
jl
cmc
ret
fdivr
jns
xchg
dec
loope
xor
mov
xchg
xchg
pop
clc
into
sub
sub
cld
pop
mov
mov
pusha
int
mov
cld
push
shll
inc
test
add
xlat
dec
divl
mov
daa
js,pt
sbb
sub
in
icebp
insl
xor
fidivl
data16
mov
inc
repz
jae
rolb
test
insb
cmp
inc
push
in
aaa
jl
xchg
xchg
outsl
rorb
in
std
shll
push
mov
dec
mov
mov
fs
dec
cwtl
lods
repz
cmp
out
adc
and
shr
call
push
out
cmp
ret
sbb
mov
push
pop
sub
mov
cmp
mov
xor
aad
or
mov
xor
jmp
rcrb
rsm
or
xchg
xor
mov
inc
mov
cltd
sub
fcmovnb
sbb
mov
addl
dec
rcr
and
dec
imul
inc
int3
dec
fwait
movl
test
jae
jae
add
lds
scas
out
xchg
dec
pop
cld
cld
iret
cld
std
div
jmp
cmp
and
es
mov
shlb
and
es
xor
xchg
mov
mov
mov
mov
xchg
leave
xor
jb
jno
jecxz
xchg
add
fs
xchg
das
mov
or
out
in
sarl
lods
pop
xor
push
sti
adc
adc
xor
dec
ljmp
add
ret
rcrb
mov
je
sub
jb
and
push
int3
lea
movsl
add
or
popf
adc
add
pop
stos
hlt
jne
fdivrs
aad
enter
sbb
iret
cli
adc
fisubs
test
cmp
out
xchg
inc
xchg
jnp
dec
dec
shrb
ja
jnp
into
xchg
fadds
mov
repnz
xchg
mov
jo
push
push
fmuls
push
sbbb
push
outsb
es
cs
dec
out
aaa
xchg
cmp
xor
push
xchg
jmp
arpl
or
mov
das
push
adc
dec
das
es
aad
cmp
aam
inc
mov
lcall
mov
test
stc
pop
add
pop
pop
sub
xchg
stos
cmp
out
lcall
jnp
test
movsb
or
lcall
imul
inc
dec
ret
call
jo
fisubs
dec
repnz
imul
xor
pop
icebp
call
mov
addr16
jns
loopne
iret
lock
push
dec
add
xchg
aad
pushf
ror
cmpsb
shll
das
loop
cmp
leave
dec
dec
out
ja
lret
fldenv
push
js
stos
stos
out
cmp
fst
mov
adc
rorl
movsl
fs
cmp
push
out
pop
ss
testl
xlat
out
in
xchg
and
or
pop
iret
xor
inc
rcrl
push
and
in
std
jp
in
nop
dec
insl
notl
add
je
test
or
xor
mul
adc
and
insb
stos
fnstsw
bound
mov
sahf
mov
ret
int3
mov
popa
aaa
iret
mov
pop
cwtl
dec
filds
xor
mov
ret
and
lds
in
mov
add
sbb
stc
sbb
int
mov
imul
shll
mov
subl
loope
sub
call
dec
rol
fiadds
inc
mov
out
ss
or
adc
mov
test
pushf
push
mov
jecxz
sub
imul
cld
shl
or
push
or
xor
notb
insb
sbb
and
subl
xor
scas
pop
ja
scas
pop
pop
fnstenv
adc
sub
cmp
in
inc
mov
or
faddp
sub
push
mov
push
jge
out
xchg
fwait
cmpsb
dec
repnz
in
orl
mov
or
jns
cmp
scas
inc
mov
lods
mov
out
fs
jne
test
jbe
pop
and
addr16
fwait
mov
sub
jmp
test
popf
xchg
mov
adc
fwait
xchg
imul
cltd
negb
iret
je
xchg
sarl
dec
inc
mov
mov
jns
pushf
test
shrl
push
cmpsl
test
mov
or
ret
bnd
or
cli
in
dec
sbb
mov
mov
adc
js
sbbl
pop
ljmp
inc
cmp
mov
dec
inc
addb
pushf
stos
dec
in
jle
cmp
mov
sahf
inc
jb
inc
xchg
lret
push
sarl
imul
rcl
movb
push
mov
mov
rorl
add
jmp
insb
fisttpl
ficompl
pop
xor
xchg
fisubs
lahf
sahf
aad
pop
shlb
cli
in
xlat
cmp
dec
xor
mov
rcll
or
jae
mov
dec
inc
add
pop
addr16
es
aam
clc
out
mov
mov
int
xorb
lods
mov
sbb
inc
jecxz
enter
insb
out
sarl
mov
lcall
ljmp
inc
pop
adc
adc
aaa
add
sub
push
mov
dec
sub
movsl
sub
sahf
packssdw
lds
jp
movsb
or
jge
cli
ljmp
std
int3
mov
ret
pop
sub
ljmp
and
inc
add
inc
mov
pop
cmp
negb
xchg
cs
je
pop
xor
fwait
cmp
inc
add
add
adc
adc
push
aaa
lret
ss
out
jge
out
loopne
dec
mov
sub
xchg
adc
sbb
notl
in
aam
out
repnz
or
lcall
dec
xchg
sahf
and
or
stos
aam
jbe
push
sarb
dec
mov
dec
rcrl
sbb
leave
pop
shl
rol
into
shlb
ret
mov
inc
popa
mov
xor
clc
adc
out
fsubl
mov
push
inc
add
in
push
mov
jnp
movsb
jnp
es
add
mov
mov
daa
stos
sbb
out
imul
inc
adc
movsl
cmpsl
arpl
loop
pushf
js
enter
in
xlat
cmpsl
repnz
cld
ret
xchg
or
jl
stc
cmc
sub
jo
xchg
rcrb
pushf
in
jmp
inc
adc
add
dec
or
inc
or
pop
xor
fiadds
popf
mov
jg
inc
idivb
xchg
inc
inc
sbb
nop
cs
mov
jge
mov
mov
in
lods
filds
xchg
jnp
mov
repnz
inc
cmp
and
fs
sbb
jno
push
mov
and
jp
xlat
bound
mov
lret
arpl
jl
xchg
mov
xchg
jge
push
lock
push
xchg
bnd
data16
testb
cmp
outsl
ss
cmc
lds
mov
and
cmc
inc
test
sti
repz
or
fistpl
imul
test
cmc
sbb
enter
xchg
inc
add
or
inc
push
rorl
fists
fadds
mov
imul
push
je
and
pop
es
xor
aad
scas
cli
mov
aaa
rorl
push
test
pop
ljmp
addr16
mov
fdivrs
add
xchg
push
xchg
mov
stc
mov
nop
mov
out
pop
punpckhbw
enter
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
cmp
loope
jp
pop
jp
xchg
fnsave
jmp
cmp
movsb
jecxz
fadd
cmpsl
jle
xchg
fcompl
mov
cmpsl
lcall
mov
mov
popf
jmpw
shl
push
loopne
dec
xor
sbb
or
adc
mov
inc
xor
inc
xor
pop
jle
jmp
pop
aaa
jnp
add
ret
jle
pop
mov
jb
shlb
outsl
mov
pop
popa
jmp
xchg
pop
and
jl
xchg
popl
adc
frstor
lcall
repnz
push
push
cmp
xchg
jge
loop
mov
daa
in
test
sub
inc
xor
inc
or
xchg
dec
mov
outsb
xchg
mov
lahf
mov
xor
je,pn
fdivp
mov
dec
icebp
inc
push
lods
aad
paddsb
adc
push
cmp
xor
fsubs
cld
mov
mov
in
mov
mov
cmp
loope
adc
lahf
data16
jp
or
lea
cmp
addr16
mov
out
add
or
sub
or
les
cmp
add
lock
xchg
rcl
fsubr
xor
xlat
in
arpl
rorb
in
hlt
xchg
inc
shlb
int3
ret
inc
gs
in
and
jae
or
xchg
daa
push
es
xor
mov
add
loopne
cmp
push
cmc
and
lds
out
loop
mov
mov
addl
in
or
movsl
inc
insl
pop
sub
dec
push
loope
jecxz
icebp
cmp
sbb
and
add
mov
and
add
and
push
aam
outsl
popa
in
jmp
out
mov
add
mov
xchg
rolb
scas
pop
xor
mov
stos
or
cmpsb
inc
sub
dec
jo
testb
ja
ja
cli
negb
or
lcall
pop
cmp
nop
out
add
scas
mov
loopne
lock
jp
push
adc
adc
cmp
idivl
lcall
inc
xor
mov
aaa
inc
dec
sbb
gs
in
or
sbb
pop
imul
dec
hlt
mov
push
sti
cmp
sub
negl
pop
lahf
pushl
sbb
inc
or
movsl
or
lock
add
pop
jg
xlat
aam
sbb
xchg
and
pop
popf
ficoms
sub
xlat
fcomps
xchg
and
or
scas
es
push
xchg
arpl
lcall
addr16
or
aaa
adc
pushf
inc
jbe
testl
rclb
int3
imul
push
dec
sahf
jb
sub
mov
sub
jo
pusha
mov
aam
in
dec
xchg
fmull
xor
pop
xchg
imul
xchg
mov
add
les
pop
cld
push
jl
mov
ss
mov
aas
sub
cmpsl
bound
push
push
jge
add
stc
mov
repz
dec
adc
push
inc
repnz
push
jns
dec
xchg
lea
pusha
add
clc
out
mov
add
sbb
mov
push
mov
popf
dec
popf
es
lahf
push
cmp
iret
xchg
push
lcall
inc
int3
or
rcrb
daa
hlt
pop
es
xchg
popa
inc
pop
or
popf
pop
jb
popa
jbe
repz
or
adc
imul
lret
clc
lods
sahf
cmp
hlt
cmpl
jnp
pushf
jecxz
xchg
jnp
stos
jb
loopne
rcl
in
rorl
inc
pop
dec
mov
add
sarb
scas
push
rcrl
clc
pushf
sbb
jo
fidivs
push
push
cmc
roll
pop
mov
pop
pop
mov
add
stos
enter
xchg
and
xor
xor
pop
lods
ret
es
mov
loop
or
hlt
loop
ret
jno
inc
iret
sarb
xlat
pusha
ret
jo
jne
cmp
pop
pop
arpl
aam
call
movsb
inc
sub
scas
push
push
push
ja
orb
push
lds
and
mov
mov
nop
dec
loope
jmp
mov
je
add
jle
fists
addr16
mov
rolb
mov
cmp
ret
in
ljmp
mov
mov
mov
loopne
pop
cs
faddl
xchg
icebp
movsb
aad
dec
das
out
mov
mov
push
mov
pop
js
and
xor
xor
sub
les
call
fsubl
stc
dec
test
test
and
mov
cmp
divb
xchg
sub
leave
mov
cwtl
xor
xor
mov
fmuls
outsb
test
test
fisttps
pop
bound
push
sbb
jmp
xlat
mov
sub
arpl
daa
cli
rorl
xorb
jns
insb
mov
add
lods
int
sbb
jbe
mov
testl
mov
test
rol
push
xchg
jle
add
jp
mov
add
add
test
fdivrl
loope
cs
jmp
cmc
xchg
lahf
movsb
or
or
jb
lret
or
dec
pop
mov
jp
jmp
xchg
push
push
xor
movsb
xchg
ja
cmp
cmp
mov
pop
pop
jg
pushf
sub
loope
mov
lcall
lahf
or
xor
mov
mov
mov
aas
pop
shrb
or
insb
popa
addr16
mov
mov
sbb
in
mov
es
push
loope
jg
push
dec
pop
push
aam
inc
mov
add
add
lahf
div
ds
fstps
mov
int3
dec
shrl
mov
adc
insb
push
cmc
lds
test
scas
cwtl
xor
mov
fsubr
jne
add
ret
add
mov
jge
nop
fmulp
sbb
sarl
ss
test
dec
xor
js
loop
pop
mov
xlat
icebp
cltd
lret
jno
in
dec
lahf
stc
shrl
je
sbb
add
shlb
or
mov
sbb
cmpsb
jmp
je
shll
pop
hlt
lcall
stc
cmp
iret
add
mov
jo
shrl
mov
or
sbb
insb
dec
jle,pn
add
adc
sbb
ja
mov
cmc
gs
adc
sub
shrb
enter
xor
mov
push
xor
stc
rcll
or
xor
cltd
jge
std
mov
xchg
ret
sub
dec
xchg
daa
cmpsb
les
push
leave
das
add
dec
outsl
pop
cmpsl
mov
jp
shl
inc
popf
sub
es
xor
xor
pop
lea
pop
dec
movsb
mov
cmp
cmp
insb
mov
mov
add
fwait
dec
in
mov
and
push
sub
jle
push
cmpsl
push
cmpsb
in
and
inc
mov
push
notb
inc
into
xchg
and
ret
mov
jp
xchg
add
insb
dec
in
lods
add
idivb
movsb
cmc
cli
cltd
popa
jbe
and
test
inc
push
pop
mov
mov
pushf
aaa
add
inc
cmp
mov
sub
imul
fisubl
mov
add
cmpsb
cmp
adc
ret
and
mov
rclb
inc
jp
out
mov
or
mov
add
jmp
pop
mov
stc
cmp
shrb
sub
dec
cmpsl
notb
mov
sbb
dec
test
inc
int3
test
aaa
imul
jo
cld
stc
imul
outsb
inc
int
je
fldl
jp
mov
lea
and
dec
xchg
xchg
out
mov
shlb
xor
mov
xchg
js
insb
lds
test
in
sbb
frstor
jae
insl
mov
aas
jle
dec
inc
pushf
or
or
popa
gs
fimuls
sahf
push
jbe
cwtl
das
or
sub
jg
fwait
and
mov
jo
je
dec
jmp
xchg
jmp
stos
and
aaa
mov
or
or
cltd
jmp
xor
ja
sub
mov
fisubrs
push
clc
push
push
xchg
and
jnp
add
xchg
lcall
mov
jmp
fadd
mov
cmpsl
mov
mov
cmpl
sbb
imul
daa
fwait
xchg
cli
pop
out
cwtl
adc
add
movsb
das
mov
aas
jns
sbb
sti
repnz
es
shl
orl
adc
push
cltd
sub
loopne
aad
scas
rcll
sahf
jl
mov
mov
xchg
lcall
mov
push
adc
mov
sbb
xchg
mov
pusha
addr16
loope
add
leave
xor
adc
push
add
jne
mov
lahf
fs
dec
xlat
lret
jnp
sbb
jne
out
mov
cld
pusha
add
f2xm1
pusha
inc
cltd
loop
ret
loope
or
add
jge
cs
lcall
scas
lcall
stos
sub
jecxz
std
scas
bound
aad
and
cmp
jl
dec
ds
stc
fsubl
adc
ds
mov
les
xor
fst
push
inc
hlt
sub
rcrl
aaa
mul
push
mov
xchg
clc
pop
mov
xchg
mov
cmp
jnp
scas
adc
inc
fisttpll
dec
pop
gs
in
out
mov
fildll
clc
fnstsw
mov
ret
lds
jb
icebp
inc
jae
mov
mov
adc
test
call
div
int3
jae
sarb
imul
scas
mov
ret
mov
dec
stc
cmp
xlat
test
add
push
testl
and
jp
cli
xchg
mov
addb
dec
sub
push
dec
loopne
add
out
aam
outsl
or
xchg
or
and
and
or
in
in
pusha
inc
push
and
pusha
inc
in
xor
dec
divb
cmpsl
les
shrl
xor
fldt
rolb
pop
add
leave
sub
fwait
inc
fisttpll
cmpsb
fildl
cmpsb
faddl
jmp
shrb
sahf
roll
cmp
int3
lods
pop
sub
xor
rcrb
stc
jno
and
imul
loop
or
lea
push
js
loopne
test
jno
push
lahf
and
das
cmp
inc
std
repnz
push
push
xchg
pop
xchg
inc
pop
mov
cmovno
push
inc
outsb
imul
dec
cwtl
sbb
xchg
push
int
cmc
inc
cmp
ljmp
shlb
out
test
les
mov
sub
mov
ret
repz
outsl
imul
addr16
sub
sbb
leave
fadds
mov
or
out
movsl
movsl
mov
push
stos
xchg
push
adc
jnp
sub
mov
mov
xchg
xor
sub
dec
pop
loopne
xchg
jno
and
jne
pusha
inc
xchg
in
mov
das
jne
mov
jmp
xor
mov
adc
dec
jle
lock
adc
scas
push
or
inc
cmp
xchg
in
xchg
push
mov
rorb
jg
ja
mov
int3
sbb
testb
fs
jge
aam
dec
ret
mov
cmp
stc
hlt
jo
test
inc
roll
fimull
xchg
dec
push
xchg
push
sbbb
or
jns
gs
nop
xchg
popa
lods
xchg
mov
push
ljmp
mov
cli
or
mov
enter
inc
inc
jmp
or
iret
rcl
fdivs
aad
dec
movsbl
negb
in
xor
icebp
movsb
or
lret
je,pt
xchg
mov
sub
pop
adc
dec
les
pop
mov
lds
and
rcll
push
cmpsl
and
movsl
test
test
xchg
aad
loopne
pop
mov
jbe
fst
xchg
enter
xchg
aad
jl
scas
scas
testb
cli
aaa
cmp
insb
cwtl
aam
rorb
je
sbb
das
jns
mov
subl
mov
or
clc
mov
js
sbb
sub
sbb
push
sbb
repz
repz
push
int3
mov
jb
out
testl
cmpsb
hlt
inc
inc
mov
or
rcll
add
jo
ret
stc
rclb
les
aas
arpl
inc
xchg
add
push
mov
pusha
cltd
mov
xchg
xor
xchg
push
lcall
pop
rolb
ds
xchg
scas
adc
sahf
mov
mov
xor
roll
into
adc
xchg
popa
mov
mov
jnp
into
mov
dec
setl
cli
fwait
jg
popa
and
mov
xlat
fdivrs
inc
mov
nop
cmpxchg
pushf
jl
dec
test
dec
aaa
xchg
cmp
mov
lcall
call
jb
cltd
icebp
add
gs
test
fnstcw
ds
sub
add
movsl
jmp
sub
pop
mov
jg
fwait
xor
pop
in
jecxz
out
insl
sbbb
add
arpl
notb
repnz
jbe
hlt
pop
lahf
fdivrs
aam
rclb
push
js
int
stos
aas
hlt
mov
mov
mov
out
in
xchg
lret
pop
cltd
rcll
movsb
dec
ljmp
sbb
xchg
mov
rcll
mov
xor
cltd
jne
cmpsl
xor
das
xchg
push
add
leave
movsb
js
mov
clc
or
cltd
inc
repz
jae
adc
mov
mov
xchg
xor
mov
xor
lock
dec
cmp
shlb
push
cmc
and
testl
es
pop
sarl
mov
jp
push
fwait
scas
fwait
outsl
test
leave
jae
add
outsl
aam
or
inc
mov
shrb
xor
ja
pop
jo
cmc
jecxz
cli
and
fidivrl
lods
mov
sbb
sub
xlat
pop
sarb
push
out
sbb
pusha
and
dec
mov
clc
mov
fdivrs
inc
mov
pop
stos
fs
jl
xchg
xor
cmp
dec
and
add
jge
aad
inc
dec
push
xor
lock
mov
jl
jbe
push
mov
push
push
push
call
push
pop
cwtl
mov
lcall
push
mov
cmp
cmp
in
mov
call
mov
xorl
mov
mov
out
fbld
add
orl
push
dec
faddl
jl
mov
pop
cld
ffree
and
xchg
imul
sub
sbb
xchg
addr16
sbb
or
pop
jnp
mov
dec
icebp
lock
pop
sbb
adc
nop
pop
ficoml
inc
sub
mov
dec
insl
pop
repz
frndint
mov
or
jge
push
rcrl
lcall
imul
push
ja
aam
es
xchg
adc
shlb
mov
enter
jbe
cmp
out
enter
and
xor
cwtl
idivb
je
mov
sbb
ficomps
outsl
mov
call
cmc
or
test
rcrb
imul
pop
rcrl
and
in
xchg
mov
cs
jecxz
movsb
jmp
inc
cs
jge
pop
xchg
iret
mov
adc
addr16
mov
sub
xchg
dec
or
push
pop
jnp
lret
pop
cmpsb
pop
imul
sbb
sbb
jle
jmp
or
inc
iret
sub
enter
out
mov
lahf
mov
sbb
leave
add
iret
data16
js
mov
ds
inc
sub
or
xor
js
ss
jge
dec
fstl
leave
or
jae
imul
in
mov
mov
fs
sub
lret
into
dec
sahf
cli
cld
add
arpl
es
pop
lcall
fmull
and
addr16
shlb
xor
adcb
jg
and
popa
daa
mov
popa
add
pop
subb
insl
loope
push
dec
addr16
aam
out
in
lret
pop
xor
adc
rcll
pop
idiv
shrb
push
stos
andl
sarl
mov
aad
push
rclb
sarb
dec
dec
dec
xor
jmp
leave
inc
addl
xchg
dec
loop
int
cmp
out
cmp
out
clc
data16
inc
in
jp
int
mov
mov
dec
into
scas
sbb
pop
or
inc
ljmp
loopne
xor
sub
sahf
mov
and
add
xlat
inc
cmp
insl
inc
xchg
ret
adc
lock
jbe
xor
push
in
cmp
imul
lods
rep
add
dec
clc
adc
cmp
icebp
adc
sbb
cs
jnp
cmpsb
mov
lret
pop
loopne
cmp
out
pop
aas
sbb
jge
mov
sbb
popa
sbb
mov
mov
mov
mov
inc
cli
fs
mov
push
dec
dec
adc
xor
inc
or
out
stc
cmp
popa
mov
jmp
adc
jge
dec
sub
dec
into
aaa
mov
inc
and
es
mov
rolb
inc
call
xchg
test
je
sub
lods
nop
xor
scas
inc
xor
adc
shll
mov
icebp
iret
popa
add
mov
popa
test
lahf
xchg
push
pop
and
push
enter
jecxz
cmp
repnz
nop
sbb
push
mov
push
jp
sti
fists
movsl
outsl
aam
mov
cmp
xor
xchg
incl
ja
scas
es
aas
mov
loopne
mov
hlt
iret
repz
aas
bnd
faddl
push
adc
sub
nop
inc
cmpsl
jae
outsl
adc
jnp
xor
and
fwait
scas
push
stos
pop
pop
mov
cmp
sti
inc
sbb
sub
inc
push
int3
jmp
out
ret
lcall
cmpsl
xchg
ret
or
or
lds
retw
jne
dec
movsb
dec
or
mov
stos
lock
cvtps2pd
cwtl
jmp
pop
lcall
sub
sbb
std
or
cmp
jecxz
push
in
out
jns
leave
cmp
push
push
dec
divb
icebp
sbb
jne
repz
or
adc
lcall
inc
add
test
dec
and
movq
dec
or
cli
xchg
push
sbb
push
pop
jge
mov
popw
xor
ja
or
xchg
repnz
xchg
scas
popf
jno
out
jnp
jge
push
mov
rcrb
jmp
pop
dec
add
sub
jmp
sub
mov
shlb
vpunpckhwd
stos
push
push
push
mov
or
mov
or
test
and
adc
push
sbb
clc
mov
cmp
sbb
mov
lret
test
ret
data16
hlt
aam
dec
sbb
mov
out
dec
xchg
sub
sbb
out
pop
pop
fmull
jle
imul
rcrl
lods
xchg
data16
sbb
mov
iret
ja
pop
mov
or
adc
xchg
inc
scas
sbb
xchg
xor
pop
stos
insl
mov
add
pop
and
outsl
fbstp
adc
lcall
mov
fdivrs
add
adc
das
sahf
into
les
cld
pop
fimuls
xchg
hlt
lret
arpl
in
int3
cld
or
pop
in
sub
mov
and
adc
outsl
push
jo
aam
push
and
inc
push
xchg
xchg
jbe
fbstp
add
adc
rcrb
add
jo
addr16
lods
mov
call
fidivrs
divl
popf
outsb
stos
std
or
shl
scas
xchg
jp
dec
movsl
ljmp
jae
mov
mov
test
lret
add
ja
jo
popf
and
fmull
dec
jg
sub
and
sbb
fcoms
je
outsl
adc
dec
push
fiadds
cld
xchg
test
dec
icebp
fwait
and
adc
or
sub
shlb
rcrb
or
mov
fdivl
sub
xchg
daa
hlt
push
fwait
gs
test
shlb
push
cwtl
or
push
sub
jmp
cmp
jno
mov
push
jge
mov
dec
orb
loop
test
movsl
daa
ja
push
sarb
sub
mov
or
sub
mov
idivl
ljmp
outsb
test
fldcw
fistpll
xchg
repz
testb
es
push
sub
pop
pop
dec
xchg
fsubrs
loope
push
adc
jbe
dec
add
push
adc
lea
hlt
mov
scas
movsb
psllw
fimuls
jle
xor
and
rcrb
fisubrl
or
mov
cmp
mov
mov
cmp
sbb
xchg
sti
push
setl
dec
adc
push
movsl
inc
mov
adc
js
js
push
scas
mov
cmp
call
xchg
add
xchg
sbb
and
xor
sub
jmp
sub
test
push
int3
xor
mov
je
cmp
dec
call
or
cli
out
imul
sarb
movsl
scas
mov
sub
sbb
adc
push
mov
lock
sub
dec
stos
std
hlt
mov
mov
sbb
mov
test
and
sbbl
js
test
bound
mov
dec
mov
jg
cmp
xchg
jns
in
sti
mov
insb
jno
mov
cmp
pop
jns
push
in
mov
enter
and
sub
add
mov
daa
incl
int3
cmpsb
mov
xlat
clc
in
inc
cmp
push
rcl
push
in
jp
add
jecxz
sbb
lcall
add
js
add
outsl
dec
cmpsl
mov
add
mov
decb
ds
xchg
repz
jnp
mov
jge
add
pop
icebp
adc
sub
fstps
or
adc
in
dec
out
std
mov
stos
in
adc
into
aaa
push
mov
xchg
xor
push
sbb
stos
pop
ds
ja
lret
repnz
outsl
cmpsb
and
sbb
mov
testl
es
inc
push
andl
imul
mov
jg
or
mov
or
sbb
push
mov
stos
adc
stos
add
mov
inc
pop
lcall
out
push
lods
push
test
push
mov
push
pop
or
adc
xor
add
iret
jne
and
lods
jbe
and
inc
or
pop
mov
push
mov
mov
dec
ds
shlb
mov
fldt
and
rorl
loopne
push
out
xchg
in
lds
lret
xor
notb
lock
sub
in
or
mov
dec
scas
xor
clc
sbb
mov
icebp
movsb
pop
or
dec
out
ss
fmuls
jmp
jae
fdivl
or
inc
lret
mov
dec
push
subl
test
mov
pop
jb
loopne
cmp
js
add
stos
ret
iret
fwait
jecxz
insl
clc
xchg
sbb
sbb
pop
push
out
mov
lea
mov
sahf
jne
or
int
imul
add
fs
not
push
or
sub
xchg
or
or
arpl
sub
pop
aad
movb
push
sub
xor
xor
inc
pop
jge
out
sarb
sarb
xchg
jl
adc
in
into
in
mov
shll
cltd
daa
sbb
push
pop
cmp
das
and
pusha
or
in
jl
in
int3
and
sub
lods
xchg
out
movsb
shlb
out
ret
leave
pop
and
adc
jp
sub
enter
dec
sbb
pop
xor
xor
fstps
or
inc
test
fiadds
dec
xchg
xlat
jg
loopne
pop
mov
dec
xlat
add
sbbb
pop
push
cmp
in
flds
dec
inc
popf
movsl
mov
pop
xchg
imul
cmp
jbe
pop
mov
jb
imul
cmp
or
daa
mov
setno
mov
mov
shlb
outsl
movsb
mov
mov
dec
int
out
jo
jmp
stos
hlt
ljmp
addl
daa
cmp
sub
lahf
test
fcmovbe
xchg
push
add
rolb
cld
imull
adc
xor
push
lret
lcall
loopne
iret
cmp
not
mov
xchg
mov
rcrb
or
es
mov
out
push
loope
push
and
adc
bound
adc
adc
xchg
push
cld
ret
dec
fisttps
bnd
cmp
aam
mov
ror
test
jo
mov
mov
roll
sbb
or
inc
add
xchg
popf
rcll
push
aas
dec
cmp
inc
mov
shl
inc
push
out
cmp
repnz
out
adc
test
test
js
mov
das
lock
and
pop
mov
or
mov
subl
xlat
decb
aaa
bound
cmp
mov
mov
sub
push
fnstenv
pushl
push
ljmp
inc
pop
mov
aam
out
xchg
stc
cmp
cmpsl
pop
inc
loope
cmp
pop
ljmp
rcl
test
les
test
push
xor
add
push
jno
and
pop
sbb
loop
dec
add
leave
inc
push
or
and
xorb
mov
iret
fstl
pop
push
jne
xor
push
hlt
movsl
pushf
mov
lock
push
push
jg
sub
inc
lods
addr16
jbe
push
inc
fs
test
data16
pushf
std
cmp
push
inc
shlb
xor
rcl
pushl
or
pop
mov
mov
mov
adc
pop
or
repz
arpl
adc
je
fwait
mov
fldenv
add
dec
movups
pop
pop
pop
ljmp
outsb
jae
jbe
mov
xchg
pop
scas
sbb
jnp
es
fmul
clc
pop
dec
clc
es
lcall
jg
inc
out
clc
cmp
and
shlb
shrb
inc
cld
lret
xor
sarb
lret
push
popl
nop
lret
test
and
inc
bound
lret
in
loopne
aas
in
pushf
lret
test
shrb
es
pop
add
inc
stc
in
dec
pop
rcll
enter
out
pop
sub
call
fsubl
in
pusha
cli
cmp
cmpl
mov
scas
mov
sub
loopne
sub
into
mov
std
pop
fcompl
imul
sub
pop
sbb
ja
mov
or
cmp
pop
loop
xlat
xor
sbb
push
push
mov
mov
xchg
mov
fdiv
mov
mov
arpl
mov
int3
xor
sbb
jge
sub
dec
sahf
in
or
pop
jne
fdivs
jo
stos
fdivp
ja
dec
mov
fistpll
lahf
addr16
jmp
lcall
das
mov
push
rorl
push
mov
xchg
not
xchg
pop
lcall
rcrb
insl
jbe
inc
data16
mov
pop
bound
stos
xor
jmp
push
sub
jp
in
mov
lcall
aad
adc
scas
pop
into
mov
mov
push
or
arpl
inc
add
push
adc
lret
mov
fwait
aas
xchg
adc
mov
dec
or
pop
and
sub
movsb
test
jle
gs
mov
mov
negl
inc
scas
sub
loop
std
dec
movl
xchg
addr16
push
in
push
into
or
sub
fwait
cmp
xlat
loop
pop
sarb
push
add
or
xor
in
cwtl
pop
test
and
or
inc
dec
or
dec
lret
adc
sbb
lret
stos
out
test
pop
push
add
inc
cmp
stos
lret
xchg
cmpsl
adc
shll
inc
subl
jno
mov
rcll
xchg
sbb
push
out
dec
flds
push
add
mov
xor
aas
jl
xchg
outsl
mov
rcrl
jg
jle
or
ljmp
dec
mov
cmpsl
pop
mov
push
enter
mov
jae
xchg
into
pop
and
test
mov
sbb
inc
hlt
adc
test
aam
dec
inc
rorl
mov
insb
lret
das
mov
bound
xchg
sbb
jmp
push
jnp
xor
jnp
out
es
push
arpl
adcl
in
push
js
or
jbe
mov
loop
addr16
out
dec
nop
stc
pop
add
pop
mov
mov
into
cmovnp
xor
ret
or
sbb
dec
push
les
dec
mov
sbb
dec
pop
fdivrs
rorb
or
mulb
sbb
lret
mov
add
and
scas
rolb
dec
fimuls
inc
mov
fisubrs
popa
aam
shlb
loopne
movsl
orb
loopne
jno
outsl
imul
xchg
sbb
xchg
ret
lods
sbb
inc
mov
call
jnp
cld
mov
jnp
int
ret
push
pop
arpl
push
stos
scas
pushf
jp
sub
pop
mov
lahf
fcmovu
adc
in
pushf
xor
adc
test
jno
divl
lds
xor
pusha
inc
cmp
ret
cltd
addr16
aaa
mov
inc
dec
rep
pop
shrb
je
mov
cmp
pop
add
orb
cmpsb
push
pop
loope
lret
push
xchg
sub
inc
sub
pusha
scas
inc
sbb
in
xchg
cmp
cmpsb
sub
mov
cwtl
adc
inc
mov
ljmp
pop
shll
mov
cmpsb
insb
repnz
push
call
call
xor
mov
cmp
in
addr16
or
sub
add
scas
cs
pop
aad
add
push
aaa
rcrl
pop
sub
mov
push
imul
cmp
stos
mov
movsl
test
inc
sarl
sahf
dec
sub
aad
clc
dec
mov
add
cmp
outsl
out
movsl
sti
stos
in
orl
jecxz
shr
stos
gs
test
mov
push
push
dec
pop
sub
adc
mov
add
cld
dec
mov
data16
imul
pop
frstor
sti
xor
sbb
jns
adc
sub
ret
pop
les
cmc
pop
test
fists
jae
orl
cmp
jl
outsb
fisubl
shrl
les
push
or
xchg
test
add
inc
push
cmp
pop
nop
or
push
cmpsb
adc
pop
mov
mov
outsb
add
mov
pushf
loope
adc
iret
add
jg
push
pop
dec
mov
lods
test
push
jae
jl
rolb
into
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
xor
jp
pop
jp
add
aas
and
sub
lods
xlat
or
mov
pop
mov
cmc
in
clc
repz
mov
jmp
aam
inc
and
aas
aam
adc
pop
push
in
or
mov
xchg
loopne
icebp
js
pop
adc
aam
fs
xchg
stos
cs
aas
inc
out
mov
and
xor
or
outsl
jg
adc
pop
test
inc
adc
out
xchg
add
sbbl
xchg
jle
xor
or
jae
or
stos
adc
dec
nop
scas
leave
in
jns
loope
or
pop
fnstenv
stos
out
hlt
ds
aam
push
inc
sbb
mov
pop
loop
mov
out
xchg
mov
xor
cmpsl
jp
jb
std
les
xchg
xor
cmpsl
rorl
jle
and
mov
dec
aam
sbbl
pop
mulb
jp
jg
pop
cmc
outsb
js
fidivrl
stc
mov
lret
and
lcall
sub
push
mov
imul
xor
je
rclb
rcl
lods
imul
adc
sub
dec
and
add
mov
out
mov
mov
sbb
adc
mov
lret
sub
pop
sbb
sub
xchg
mov
ss
bound
cs
and
fidivrs
jnp
loopne
rorl
les
movl
mov
cmpsl
adc
sbb
xchg
out
cmp
js
sub
aad
or
das
cmc
clc
dec
in
dec
gs
mov
loopne
push
stc
fmull
shll
xor
add
xchg
push
and
sarb
idivl
mov
mov
stos
xor
rorl
mov
cmp
pop
leave
gs
aad
leave
ds
add
adc
js
pop
mov
stc
je
jne
push
call
repz
cs
mov
imul
hlt
and
scas
in
sub
dec
pusha
scas
xchg
pop
mov
xor
iret
push
pop
jle
mov
imul
xor
addl
fisubl
fsubrl
nop
cmp
dec
adcl
pop
mov
nop
adc
mov
hlt
das
dec
movsb
or
dec
cmp
fisubs
mov
pop
subl
push
icebp
xlat
xchg
push
and
xchg
in
js
pop
add
mov
dec
mov
fcoml
shlb
xchg
fnstsw
arpl
fwait
cmp
mov
outsb
jo
imul
dec
sub
and
or
mov
pop
repnz
js
jb
loopne
pop
orb
mov
femms
mov
cwtl
mov
jl
xor
or
cltd
mov
jge
add
ss
cmp
inc
xor
dec
and
test
test
scas
out
fisubs
mov
cmp
mov
pop
popf
aad
xchg
in
cli
loop
out
xchg
mov
push
inc
nop
dec
xor
xchg
in
repz
rcl
push
jnp
inc
jl
dec
ret
add
lcall
loopne
jge
pop
pop
cwtl
xlat
stos
sbbb
test
mov
push
xor
aad
xlat
mov
loop
inc
fdivrl
mov
jg
cmpsb
and
cwtl
cmp
shll
repz
ss
xchg
jns
scas
test
cs
xlat
movl
stc
and
and
xchg
mov
std
out
inc
mov
or
ret
loop
pop
xor
or
ja
aaa
jns
imul
sti
push
lods
mov
cmc
add
test
or
outsl
push
popf
loope
mov
inc
lcall
adc
jae
inc
adc
and
push
and
ss
pop
add
or
ds
clc
jo
fistpl
jmp
pushf
adc
push
fisubl
cwtl
xchg
adc
add
cmp
and
adc
jg
out
sarl
xchg
scas
mov
mov
lods
jnp
sbb
and
fidivrs
push
cltd
clc
adc
xchg
cs
jne
outsl
ret
inc
xor
aas
shlb
xchg
sbb
or
out
divl
jne
pop
mov
xor
mov
mov
sar
xor
out
push
or
pushf
and
push
push
pop
pop
or
movsl
dec
cwtl
add
stos
jg
add
jmp
mov
pop
cmp
mov
sub
int3
inc
icebp
xchg
mov
push
movsb
out
inc
pop
insl
xchg
test
or
call
movsb
imul
aad
bound
push
jno
push
and
and
mov
aas
xchg
push
mov
int3
jp
lcall
arpl
sbbl
cmp
enter
and
sbb
mov
pop
je
arpl
push
flds
test
push
jl
adc
cmpsb
movsb
stos
test
shll
pop
dec
and
lret
in
addr16
inc
mov
or
push
loope
ret
fiadds
clc
pop
mov
dec
hlt
push
pop
inc
sub
adc
cld
mov
outsl
xchg
pop
adc
push
push
sub
inc
jge
inc
inc
inc
movsb
add
loop
fcomip
gs
out
iret
inc
nop
sti
mov
lock
xchg
cli
lds
lret
outsl
test
test
sub
out
popa
inc
daa
ljmp
dec
and
mov
cmp
lahf
mov
testb
mov
inc
add
inc
insb
push
ljmp
lahf
jbe
mov
clc
push
and
mov
sbb
scas
jl
jbe
mov
ficompl
jecxz
jo
mov
imul
mov
lret
ljmp
mov
fistpll
push
inc
lret
call
cmp
jne
cmp
adc
pushf
fs
cmp
sbb
mov
pusha
out
popa
mov
push
or
fwait
rorl
cli
inc
push
int3
jecxz
push
bound
in
lcall
mov
and
arpl
outsb
fidivrl
mov
out
cmp
xchg
int3
mov
int3
inc
les
cltd
movsl
in
loop
add
leave
shl
inc
in
push
xchg
adc
mov
and
lods
xchg
cmp
lock
mov
xorl
mov
in
nop
sub
sbb
dec
sbb
stos
push
cmp
cld
mov
mov
and
arpl
lock
xor
dec
clc
sbb
adc
adc
push
inc
jns
into
icebp
fmul
cltd
fwait
cmpxchg
push
jle
xor
stos
repnz
addb
adc
pusha
or
insl
mov
in
sub
push
cmp
xchg
and
mov
add
mov
push
mov
mov
ljmp
fisttpll
pusha
inc
das
std
fsts
aad
mov
xchg
cmpsb
in
loopne
jmp
frstor
add
stos
mov
pop
iret
mov
jmp
and
mov
push
and
ss
pusha
sar
add
sub
push
or
movsl
xorb
and
xchg
adc
jbe
sbb
loop
fldl
adc
pop
mov
adcb
xchg
gs
jno
xor
enter
mov
mov
or
leave
testb
repnz
lods
aaa
mov
push
cmp
loopne
stos
inc
imul
sahf
int
dec
inc
shll
xor
roll
and
inc
out
insb
ljmp
aam
pop
add
out
das
testb
rcl
fistl
sbb
dec
out
pop
pushf
inc
mov
inc
jl
inc
or
cwtl
rcl
and
inc
xchg
mov
jnp
cmp
mov
sbb
insl
aam
xor
jp
out
pushf
cwtl
mov
lods
xlat
xchg
adc
add
lret
cmp
pop
imul
mov
inc
jmp
xor
clc
add
mov
loopne
pop
cltd
push
shll
scas
inc
and
icebp
ror
pusha
cmpsb
sub
sbb
shll
push
dec
add
outsb
ljmp
add
push
repnz
pop
repnz
mov
jmp
test
das
arpl
das
imul
addr16
add
iret
out
pusha
xchg
add
out
lock
pop
adc
lock
push
lea
mov
add
and
push
lcall
xchg
repnz
repz
popa
push
jg
mov
sbb
xor
insb
mov
sti
fsubrl
fnstenv
js
push
decb
sub
mov
and
push
add
into
cmp
mov
pop
popa
xlat
fcmovu
pop
rcll
notl
leave
les
ss
fadds
popl
ret
mov
fwait
push
loopne
dec
xor
sbb
adc
xchg
jbe
sub
sub
stos
enterw
ret
shrl
dec
mov
stc
pop
cli
call
mov
mov
and
push
pop
sub
mov
pushf
icebp
adc
xchg
pusha
das
testb
outsb
loop,pn
loope
aam
aad
aas
xchg
loopne
mov
ljmp
dec
test
pop
xchg
pop
hlt
arpl
or
subb
lcall
out
adc
mov
xchg
sqrtps
and
jp
xchg
push
mov
dec
xor
xchg
call
jecxz
decl
jb
mov
mov
adc
mov
mov
pop
inc
jmp
jae
jb
mov
js
dec
jo
orb
cmp
aaa
mulb
ret
mov
cmp
sbb
outsl
sub
rcr
insb
xchg
adc
add
daa
sub
cmc
es
jl
in
mov
push
xorb
stos
lods
push
cmp
sbb
clc
lret
out
jns
outsb
pop
sar
xor
int3
sub
ror
mov
dec
jle
push
mov
int3
mov
aaa
shl
add
push
jno
cmp
sbb
mov
inc
sbb
aas
jb
jle
bound
dec
out
hlt
mov
add
and
outsl
add
jnp
ja
jo
inc
loopne
ficoms
sbb
adc
mov
mov
add
mov
mov
cmp
push
sub
sub
pop
fidivrs
test
push
add
aas
int
mov
jmp
pop
pop
adc
mul
mov
sub
push
jmp
sub
mov
outsl
int
xchg
sahf
ljmp
enter
inc
insl
sarl
aaa
dec
push
arpl
fdiv
push
pop
jecxz
or
test
sbb
dec
insb
icebp
push
lahf
lods
shlb
out
push
stos
push
or
je
cmpsb
jg
mov
cmp
leave
jge
dec
and
scas
xchg
cwtl
xor
popf
or
adc
outsb
mov
push
mull
mov
enter
sbb
push
jle
daa
fisubrs
out
lcall
lea
ret
shr
cld
clc
stos
or
push
das
xchg
lods
push
clc
lods
xor
ret
push
inc
mov
push
shlb
and
add
imul
pop
js
dec
mov
and
xlat
int3
nop
repnz
std
cli
sbb
pushf
div
xchg
jg
loope
inc
add
clc
ret
mulb
lock
mov
and
lcall
movsb
dec
ja
mov
cmp
ja
push
ds
dec
dec
loopne
imul
ret
push
xor
xchg
lock
cmp
ficompl
or
mov
sub
icebp
ss
loop
dec
cmp
stos
push
pop
cs
mov
dec
loope
movsb
jge
add
mov
and
mov
add
sahf
xlat
push
in
sub
pop
clc
mov
in
jne
pushf
mov
xorb
jnp
lods
inc
cmp
inc
jbe
adc
cmp
jb
push
sub
int3
jo
mov
jno
mov
or
test
mov
int3
push
dec
or
out
addr16
insl
std
xor
pop
adc
in
jae
mull
lds
loopne
sbb
std
cmp
fidivs
leave
adc
push
mov
les
mov
sub
shrb
jb
pop
fwait
sbb
fwait
and
ds
loopne
out
push
xchg
lea
int
sub
andl
int
cli
and
push
sbbl
adc
xchg
xorb
movsl
into
cmp
xchg
popa
das
mov
divl
imul
adc
scas
sub
mov
jno
inc
jmp
insl
push
insb
fs
cmp
aam
xchg
mov
ds
pop
fs
into
sub
cs
out
out
dec
mov
in
adc
pusha
and
sbb
icebp
cmp
enter
dec
xchg
ja
clc
insl
sub
in
dec
xor
dec
aas
rclb
sbb
push
jp
mov
push
popf
xor
dec
cmpb
dec
mov
out
add
cmpsl
jp
push
xor
inc
xchg
fcmovbe
or
jo
int
and
xor
ljmp
or
sbb
outsl
call
fildll
push
sahf
sub
inc
adc
stos
cmp
aas
mov
insb
lods
push
push
enter
xchg
icebp
addb
data16
and
pop
or
aam
mov
jle
mov
imul
icebp
in
outsb
xchg
jecxz
and
pop
fsubrs
cmc
ljmp
jle
inc
jo
lea
add
ljmp
fisubrl
sti
pop
popf
xchg
cmpsb
and
cli
mov
aad
pop
fiadds
cmp
rcll
xchg
pop
movsb
sub
lea
imul
jo
push
xor
loopne
imul
adc
pand
mov
ror
mov
and
pushf
inc
and
popf
add
mov
jne
mov
and
xchg
outsb
into
jge
test
pop
cwtl
cmp
enter
js
lret
rclb
adc
mov
nop
xor
mov
and
or
mov
insb
xchg
pop
call
and
push
sub
lods
push
jmp
lds
cs
mov
sbb
mov
and
add
jbe
xorb
lods
pop
movsb
jmp
xchg
sub
lods
arpl
xchg
push
xchg
xchg
cmp
mov
mov
jnp
mov
call
into
jb
or
cmp
or
fdivrl
das
xor
jmp
pop
insl
push
imul
pusha
dec
and
push
fsub
dec
pop
repnz
push
das
and
adc
notl
enter
les
mov
inc
js
cmpsb
fldl
icebp
sarl
add
shll
cmp
and
sarb
js
and
push
test
and
sbb
sbb
adc
mov
or
xchg
xor
jnp
cmpsl
sbb
test
mov
nop
xchg
aad
or
mov
jmp
mov
add
es
test
dec
mov
and
xor
aaa
ds
dec
jmp
pop
aaa
adcl
sub
push
dec
dec
push
dec
nop
sbb
push
cld
mov
mov
negb
or
inc
inc
inc
nop
shl
jl
push
xor
insb
fnstenv
mov
call
dec
out
movsl
fucom
sub
data16
in
les
mov
loope
pop
sub
inc
dec
cwtl
pop
stos
mov
aaa
dec
fisubrs
daa
or
mov
lcall
rcll
xchg
inc
jne
inc
adc
out
outsl
mov
mov
xchg
xorl
leave
outsb
mov
lods
iret
push
jne
call
movsb
stc
mov
add
and
push
lret
adc
int
pusha
mov
pop
aam
insl
adc
or
mov
cmp
xchg
leave
out
test
xchg
xor
mov
movsl
fs
jle
mov
mov
mov
push
push
loopne
push
xchg
push
shrb
mov
inc
xchg
loop
in
cmp
lods
inc
xor
dec
call
scas
or
sti
inc
lahf
pusha
notrack
push
les
jns
pop
std
mov
or
inc
and
ja
or
push
xor
xor
cmp
jno
add
shlb
idivl
cld
loopew
jl
sub
mov
push
shl
dec
xchg
lret
xor
std
dec
jecxz
lahf
mov
ja
shrl
ja
dec
arpl
push
int3
mov
lahf
push
repnz
fiadds
aas
lds
or
std
pop
and
mov
out
ficoml
xchg
jge
cltd
xchg
sub
xlat
jl
ss
clc
push
inc
mov
add
pop
adc
loop
xchg
inc
jns
adc
addr16
fistpll
mov
mov
imul
clc
pop
jo
repz
mov
cld
js
lret
ss
sbb
adc
pop
push
repz
out
flds
cmp
sbb
sbb
sti
out
test
insb
int
xchg
clc
call
push
sub
outsb
pop
mov
aam
bound
inc
fdivrs
stos
cmp
lea
into
ss
cmp
and
lods
test
int
mov
xchg
loopne
cmp
repnz
cmpsb
loop
fcomip
inc
pop
movsb
fists
jno
lds
mov
loopne
int
mov
mov
imul
aad
mov
push
jg
add
cmc
nop
test
sbb
addr16
pushf
movsl
xchg
mov
push
nop
add
lret
jecxz
sahf
repnz
das
mov
out
cwtl
mov
mov
sbbl
push
fmull
popa
dec
sub
mov
ds
jmp
fidivrs
stos
xor
xchg
or
mov
jg
cltd
sbb
rolb
mov
inc
cmp
lret
cmpsb
cltd
int3
fisttpll
dec
dec
inc
cwtl
lea
pop
pop
lods
popf
and
pop
mov
mov
dec
nop
and
or
test
stos
jle
movsl
xor
adc
gs
insb
cwtl
cs
test
pop
fcoms
add
les
mov
cld
mov
das
xchg
xchg
jmp
icebp
push
dec
cltd
pushf
sahf
xor
or
jns
xchg
mov
loopne
stos
aas
sub
lcall
xor
imul
mov
je
xor
divl
lods
and
jnp
pop
sarb
mov
lock
jmp
mov
into
stos
mov
jp
push
sbb
jnp
shlb
shr
cmp
pop
xchg
add
fsubrs
xor
adc
aaa
inc
cmp
add
mov
adc
jnp
push
cmp
roll
inc
mov
movsb
sub
jp
jmp
ficompl
mov
insl
jno
xchg
in
lahf
test
pop
cmovnp
sub
inc
mov
icebp
push
push
cmp
sbb
xor
je
lret
std
xchg
cmp
jmp
into
in
jbe
outsl
dec
mov
cld
or
lods
popa
fwait
push
pop
sub
adc
and
mov
call
scas
nop
mov
loope
xchg
mov
mov
dec
cmpb
adc
jle
jl
out
lret
xlat
xchg
sahf
xchg
andl
adc
push
enter
out
out
add
orb
xchg
cmpsl
enter
mov
xchg
dec
xchg
mov
cltd
push
in
jbe
sub
mov
dec
xchg
repnz
push
or
sbb
push
mov
not
jle
in
xchg
rclb
nop
lea
stc
jecxz
mov
push
cmp
mov
test
and
lods
adc
add
sbb
push
call
sub
mov
sbb
cmc
pop
mov
inc
in
fsubrl
das
pushf
push
cmpsb
je
inc
sub
movsl
sarb
jb
mov
cmpsb
stc
nop
je
adc
lret
dec
ja
xchg
pop
or
mov
push
dec
stos
loop
cmp
jg
or
bound
inc
add
jle
push
push
lahf
mov
nop
imul
mov
cld
dec
cmp
dec
iret
cmp
xor
cld
inc
pushf
daa
push
mov
xor
jp
jmp
or
leave
add
lret
jb
lcall
adc
add
jno
add
or
arpl
loop
stc
repnz
sbbb
loope
xchg
or
mov
push
mov
out
insl
popa
jle
icebp
enter
fcmovb
outsb
sbb
push
mov
cmc
popf
xchg
es
imul
mov
dec
adc
cs
pop
adc
mov
sub
iret
mov
lods
push
pop
push
insb
cmp
push
xchg
xchg
or
popa
dec
sbb
rolw
mov
cmp
sub
fwait
jle
das
jle
jle
movsl
xchg
les
mov
addr16
mov
xor
push
push
xchg
sbb
or
ljmp
sarb
pop
cmp
push
push
add
add
mov
sbb
lods
inc
outsb
stc
stos
mov
cmp
aaa
lcall
mov
jecxz
sub
xchg
dec
dec
jge
and
ret
ret
pop
pop
fistl
imul
mov
roll
push
pushf
pop
pop
je
mov
pop
int3
cmpsb
jne
sub
jne
rol
sub
dec
lock
cmpsb
jmp
aas
pop
jb
stc
popf
addr16
sarb
ret
sti
push
insl
repz
xor
push
out
jmp
inc
call
jl
jno
ficompl
add
push
dec
mov
push
mov
fdivrl
sbb
lret
cmp
sbb
or
negb
fs
pop
aas
pop
xchg
sahf
adc
jnp
imul
mov
mov
in
mov
lods
adc
fstpl
fcoml
inc
shl
lea
lcall
mov
in
mov
popf
pop
rcll
fsubrl
and
push
les
push
cmp
int
ret
add
int
js,pn
out
sbb
std
test
inc
and
es
cld
test
inc
dec
int
repz
mov
push
mov
inc
pop
push
test
jo
shll
pusha
fstpt
cmp
popa
jo
mov
xchg
lods
sub
loop
into
push
add
inc
pop
sub
leave
mov
loopne
addr16
jecxz
out
scas
sub
bndldx
fldl
mov
jno
pop
test
sbb
data16
fwait
mov
sub
mov
into
adc
repz
adc
sbb
shl
adc
pop
xor
hlt
xlat
loop
sub
cmp
fisubl
push
lcall
cmp
arpl
dec
inc
jge
mov
scas
cld
imul
stos
add
shr
and
lcall
out
pop
mov
add
inc
fs
adc
mov
adc
jge
mov
push
sbb
pop
xlat
test
mov
jg
fisttpll
pop
mov
sarb
add
and
mov
xor
sub
jp
dec
insb
pop
aaa
cmp
mov
mov
mov
xchg
ficompl
notl
fst
popf
jo
mov
mov
mov
aaa
xlat
cmpsb
popf
subl
popf
pop
and
insb
cmp
mov
cmp
leave
pop
jl
inc
mov
cli
inc
mov
arpl
pushf
scas
ja
cltd
cwtl
int3
aas
add
fildl
ljmp
add
add
mov
pop
xor
daa
and
pop
cmp
into
jmp
dec
sub
gs
xor
push
jne
inc
and
fildl
push
mov
fstps
add
xadd
xchg
jno
xor
inc
inc
mov
jmp
cmp
and
scas
data16
or
popa
jmp
shlb
mov
jo
adc
fsubl
insl
fdivs
mov
int
jp
fdivr
dec
cmc
popf
ss
and
fs
enter
negl
push
call
std
push
or
add
or
int
dec
xor
fs
inc
mov
pop
jne
jp
sub
out
cmp
push
xchg
out
hlt
ficoml
pop
inc
jp
dec
scas
xor
mov
aaa
jo
popf
cmp
cmp
nop
cmp
dec
push
loop
lods
adc
add
pop
mov
fstpt
fldcw
ljmp
std
fcmovne
pop
pop
inc
test
insl
inc
xchg
push
movsl
mov
push
arpl
insl
or
int
aam
cmp
test
enter
loop
dec
ret
xchg
cmc
movsb
sahf
in
into
and
adc
aad
xor
xchg
pushf
or
jae
cmc
nop
lcall
mov
scas
popf
or
jmp
hlt
and
dec
cltd
dec
jg
shll
es
xor
imul
lcall
in
leave
cmp
sub
mull
add
pusha
outsb
push
inc
xchg
lock
adc
push
inc
adc
xchg
lret
cli
xorl
xor
dec
inc
call
in
pop
inc
int
into
sub
or
cltd
xchg
cmpsb
jecxz
jnp
pop
jne
sbb
add
push
xor
or
shll
cli
scas
mov
outsl
pop
subb
out
dec
and
mov
adc
inc
and
cmpsl
mov
out
ret
std
fisubrl
jb
xchg
mov
jo
aam
insl
out
push
mov
imulb
xor
daa
or
mov
jmp
leave
mov
mov
mov
enter
pop
sub
dec
fwait
xor
jecxz
xor
add
std
adc
sbb
in
fistps
jb
scas
dec
sti
out
or
jecxz
sub
cs
ret
bound
jg
or
xchg
xor
mov
hlt
fisttps
add
movsl
inc
jbe
xchg
pushf
imul
sub
testl
ret
ret
push
imull
lahf
stos
dec
xor
in
cmpsl
push
in
lret
jae
inc
arpl
xlat
and
lea
je
bound
sbb
cmpsl
in
jno
jmp
cmc
adc
pushf
cli
pop
inc
pop
daa
hlt
dec
sbb
cmc
sub
or
orl
and
roll
inc
mov
xor
inc
push
mov
cmp
dec
cmc
je
jle
ficomps
lds
in
pop
loope
call
in
sbb
cmp
pop
inc
xchg
gs
fidivl
mov
mov
push
cwtl
out
sarb
les
mov
pop
fidivrl
add
cmp
loop
popf
mov
aad
in
fadds
fldcw
test
fwait
leave
xlat
or
pop
adc
aad
in
fsubl
in
push
mov
fldt
je
out
repz
dec
lods
xor
sbb
jmp
mov
test
lcall
mov
adc
or
loopne
and
js
jle
mov
dec
xchg
mov
test
ror
cmpsl
push
fistpll
cmp
divb
inc
cmp
push
xchg
xor
adc
mov
xchg
cmp
in
movsl
jmp
pop
icebp
popa
jg
adc
mov
out
jg
movsb
xor
aaa
mov
xchg
mov
or
inc
inc
sahf
test
shlb
das
dec
loopne
and
jns
push
lods
mov
push
add
cld
aaa
adc
movsl
mov
mov
pop
fcomps
lods
shl
je
jmp
mov
movups
mov
xchg
bound
pop
nop
push
add
fpatan
mov
cs
daa
movb
adc
mov
sbb
mov
je
aaa
mov
mov
adc
push
outsl
xor
mov
mov
cmp
cmp
push
add
push
dec
or
in
jge
roll
jl
jns
mov
mull
cs
cmp
xchg
stc
xor
and
jae
jae
push
lahf
mov
fistpll
lcall
jnp
jns
mov
mov
mov
test
imul
cltd
pop
lcall
add
scas
push
sbb
ljmp
cmc
in
roll
mov
out
out
stos
mov
xchg
lahf
or
add
add
add
add
push
jp
cmpsl
xor
rorb
mov
das
movsl
xor
inc
js
hlt
rorb
add
and
stos
in
inc
push
pop
lret
inc
lds
ltr
mov
sub
lret
mov
pop
jno
in
mov
mov
addr16
add
jl
hlt
sub
jl
out
mov
and
leave
jl
add
iret
pop
pop
cltd
gs
aam
add
mulb
f2xm1
jge
xlat
jl
and
out
stos
xchg
ljmp
mov
cltd
dec
jmp
or
pop
stc
push
rcl
jne
mov
mov
das
push
mov
mov
push
pop
push
in
jne
cli
pusha
jo
jns
and
mov
cmp
pop
inc
mov
jnp
ds
frstor
out
push
imul
lds
pushf
and
sub
pusha
roll
lock
jp
inc
stc
test
or
mov
cld
cmove
inc
cmp
and
lret
ljmp
push
and
xchg
idivb
fimull
popf
jae
mov
into
xchg
push
int
sub
mov
or
push
ss
push
jle
clc
adc
or
cltd
pop
icebp
rcll
push
sub
jb
out
xor
mov
lahf
stos
stc
int
divl
scas
or
mov
lock
lods
test
adc
add
pop
es
mov
push
xlat
loop
mov
stos
pusha
data16
pop
aas
scas
sahf
test
cmp
out
xchg
adcb
inc
jmp
pop
daa
icebp
mov
lret
stc
push
push
and
push
sti
pop
mov
fdivrs
dec
mov
xchg
and
lock
clc
inc
out
arpl
cmp
mov
xchg
jle
lods
inc
dec
push
in
mov
xchg
out
mov
xchg
insl
clc
mov
mov
leave
popa
sbb
fcomi
mov
movsb
and
xlat
leave
xor
mov
push
int3
fwait
jne
fcoms
lock
add
lea
je
outsb
fists
adc
fwait
dec
lret
xor
cmp
pop
out
mov
arpl
mov
pushf
sahf
test
lcall
data16
cmp
lret
cltd
ret
jge
imull
mov
lods
sub
inc
ljmp
inc
rol
inc
fistps
push
jno
sub
push
xor
inc
or
push
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
ja
or
in
cmp
dec
adc
and
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
