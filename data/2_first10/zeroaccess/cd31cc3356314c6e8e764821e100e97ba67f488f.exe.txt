push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
pop
pop
ss
bound
fstpl
bound
sub
pop
add
ja
inc
icebp
jecxz
inc
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
out
xor
shll
leave
and
repz
lret
data16
mov
leave
repnz
int
and
leave
xchg
test
call
xor
lcall
and
fldenv
ficoml
jge
test
clc
dec
push
in
into
repz
daa
xchg
xchg
dec
xchg
pop
and
add
pop
push
jl
push
nop
mov
out
ret
pop
in
sarl
xchg
pop
dec
imul
mov
rorl
cmp
sbb
pop
push
repz
outsb
sti
sbb
dec
pop
gs
gs
xchg
and
aas
add
push
jp
push
sbb
xchg
mov
mov
lds
fdivrl
stos
mov
lcall
jae
push
jne
loop
mov
insl
cmp
std
pop
jecxz
and
pavgw
and
lcall
inc
repnz
in
ja
lods
ljmp
scas
test
aad
jne
cld
push
int
push
or
pop
sub
or
inc
add
inc
idivl
mov
shr
leave
xor
lock
dec
je
xor
fistpl
cwtl
xchg
or
ja
pop
push
xor
xor
xor
sub
and
stos
sub
imull
lret
cmp
cmc
daa
cld
push
out
out
jl
inc
movsb
inc
lock
dec
pop
sub
popf
sub
mov
cli
push
sbb
pop
les
icebp
fidivs
in
push
ljmp
mov
leave
add
or
out
pop
imul
push
xor
popf
sbb
jge
cmp
sti
stos
jmp
and
loopne
arpl
sti
addr16
and
cmp
xchg
cmp
subb
sub
test
test
mov
and
add
inc
in
jae
data16
daa
loop
out
jno
imul
mov
dec
pop
out
mov
shl
dec
test
cltd
insl
add
imul
pop
xchg
jne
mov
daa
mov
xchg
test
cmc
loopne
ret
dec
movsl
mov
mov
rcl
or
gs
mov
mov
sbb
mov
enter
add
fmuls
inc
xchg
frstor
stos
in
movsl
clc
leave
int
dec
push
inc
dec
push
xchg
lods
in
adc
add
and
push
in
movsl
xor
xlat
sub
mov
out
lods
mov
fnstcw
ss
xchg
js
outsl
sbb
pushf
hlt
rolb
mov
cmpsb
add
mov
aam
adc
js
inc
adc
xor
pop
adc
mov
and
adc
add
mov
jno
arpl
ja
sbb
pop
repz
mov
sbb
insl
outsl
js
shlb
sti
xchg
loopne
bound
dec
add
mov
push
hlt
mov
mov
xchg
frstor
pop
test
add
js
dec
pop
xchg
outsl
int
jl
jb,pt
roll
push
mull
jne
lock
rcrl
mov
mov
push
mov
add
imul
xor
out
fistpl
jmp
ja
cld
test
sbb
push
push
inc
jnp
push
aaa
push
push
or
xor
shll
cli
cmc
out
adc
sub
cli
sbb
mov
lods
mov
rep
iret
pop
inc
ror
xchg
inc
and
xchg
dec
lods
stc
push
jecxz
jb
pop
cmp
pusha
test
pop
jo
xor
jo
cld
test
or
stos
gs
loop
movsl
dec
xchg
dec
lods
ficoml
subl
sbb
lods
jae
out
jns
cmc
or
jno
je
orb
push
push
fcoml
sbb
jbe
ja
das
adc
jne
fldpi
pop
jo
fdivr
cs
push
dec
stos
sub
add
mov
add
mov
test
adc
cmp
push
cli
push
sbb
adc
or
sbb
cmp
sbbb
int3
push
mov
pop
mov
add
dec
shll
mov
out
mov
out
push
dec
cld
pop
cmp
in
xor
sub
jbe
pop
adc
scas
jg
addr16
idivb
dec
inc
cli
and
inc
xchg
arpl
pop
sarl
cmp
imul
insb
mov
shl
sbb
cmp
pop
or
sub
jmp
sbb
inc
loop
xor
fwait
jne
xlat
mov
push
sbb
stc
xchg
fisubrl
decb
clc
sub
mov
jp
mov
mov
das
int3
mov
sub
and
push
jns
lea
insb
fdivl
sbb
ret
mov
ret
popf
cld
cs
pop
call
mov
xchg
fwait
jecxz
xor
int3
dec
add
arpl
xchg
push
cmpsb
push
cmp
into
xchg
jbe
sbb
out
cmp
dec
lea
icebp
jle
xor
outsl
ret
dec
xchg
xor
pop
mov
divb
int
cmpsb
sbb
movsl
pushl
push
test
dec
sbb
xlat
add
mov
cs
mov
xchg
cpuid
popa
fcompl
repnz
and
mov
test
pop
adc
add
jge
push
fdivs
test
cld
mov
movsl
mov
int
push
fwait
cmp
test
inc
or
dec
adc
adc
inc
fisubl
mov
pop
and
and
test
mov
out
adc
ret
mov
mov
jb
xchg
xor
mov
sti
mov
sbb
ficoms
aad
divb
adc
dec
lret
lds
mov
repz
add
cmpsl
lods
fwait
mov
xchg
bound
mov
out
sbb
aaa
ljmp
int
cmc
call
inc
orb
or
mov
sbb
push
lock
mov
int3
mov
xor
fldenv
add
daa
dec
clc
xchg
jge
mov
or
std
add
pop
sub
stc
in
hlt
pop
ret
pusha
movzbl
jne
jecxz
or
cmc
mov
mov
lcall
mov
repz
dec
inc
adc
imul
add
xor
mov
nop
loope
popf
jecxz
jbe
fists
aas
loop
pop
ja
test
mov
sti
ljmp
jmp
sbb
hlt
mov
xor
mov
scas
xchg
insl
addr16
sub
pop
call
adc
sub
xchg
push
test
mov
add
in
xchg
sbb
jmp
repz
orb
cltd
scas
rol
xchg
mov
sahf
stos
call
lea
sbb
add
jge
enter
stc
negl
sub
clc
loop
xchg
adc
and
dec
mov
orb
inc
adc
add
in
movsb
xchg
mov
je
leave
inc
fstpl
out
dec
mov
and
mov
cli
jmp
or
add
inc
out
mov
mov
rol
pop
adc
sbb
lahf
xlat
cmp
ljmp
in
stc
sub
test
lret
int
xlat
jno
jae
daa
adc
add
jge
sub
test
mov
sbb
shr
jl
add
jns
mov
sub
aad
cmc
push
into
movsl
and
and
or
push
nop
shr
sub
fdivs
in
mov
cmp
jnp
push
ja
sti
out
adc
pushf
add
push
imul
and
std
mov
mov
lock
xlat
test
sub
sub
xor
and
loop
and
jecxz
cmp
leave
push
in
jnp
lahf
in
movsb
adcl
call
sarl
stos
dec
pop
fsubrp
pop
stos
fmuls
or
addr16
subl
mov
unpckhps
fdivs
sub
or
xor
dec
imul
xor
fs
lods
mov
ret
sub
movsl
and
inc
cmp
lea
ret
sbb
inc
clc
mov
cltd
inc
fdivr
sbb
orl
rep
jns,pt
dec
sub
hlt
movsl
mov
sub
lds
xchg
and
lods
cmp
lock
xor
mov
mov
xchg
in
add
mov
jl
fmull
ret
xchg
mov
jg
in
aam
xchg
cli
shlb
pop
es
int3
inc
push
mov
inc
mov
xchg
cmp
or
inc
int
rclb
or
push
push
cmc
stos
fwait
mov
lahf
adc
in
int
nop
cltd
jae
sti
inc
sub
inc
jp
adc
jb
imul
mov
or
mov
pushf
cmp
iret
test
pcmpgtb
mov
shlb
sbb
dec
mov
inc
jecxz
add
lcall
push
push
fcmovu
cli
rol
lock
dec
cmpsb
mov
leave
test
insl
btr
adc
sub
fistpl
aaa
xchg
dec
aas
test
dec
cltd
and
in
jnp
push
lds
das
dec
cli
adc
es
ficoml
in
xchg
pop
faddp
sbb
decl
or
leave
repnz
out
ret
jnp
in
fimull
fnstsw
out
xor
sbb
mov
rclb
add
scas
popa
dec
or
cmp
cmp
mov
out
in
adc
scas
sbb
iret
mov
adc
mov
dec
rcll
xlat
hlt
mulb
pop
or
lret
mov
add
inc
cmp
xor
fisttps
push
ficomps
inc
ss
jnp
or
xor
aas
lcall
rcrb
push
ja
pop
lea
stc
push
or
push
xchg
mov
mov
es
sahf
mov
inc
or
mov
hlt
mov
or
jns
mov
and
or
add
popa
std
mov
mov
das
inc
mov
es
xchg
imul
sbb
mov
cmp
outsb
leave
push
dec
mov
loope
push
xor
enter
add
or
and
sti
xchg
addr16
push
out
jg
dec
sbb
out
js
pushf
aam
jp
andl
stos
outsl
test
cmp
fcomip
int3
sub
pop
ficomps
movsl
push
loopw
sub
jo
stc
fistl
inc
xchg
js
sarb
and
sub
xchg
jp
mov
mov
jmp
pop
dec
repz
xor
xchg
jp
testb
leave
add
mov
mov
xchg
jnp
adc
xchg
mov
pop
push
mov
dec
mov
in
loopne
repnz
dec
adc
into
leave
sarl
js
divb
xchg
loopw
in
inc
mov
mov
adc
mov
jl
and
lret
xor
fdivrl
adc
push
mov
out
xchg
inc
imul
hlt
mov
push
fisttps
test
adc
fisttpll
stos
das
mov
cmpsb
xchg
inc
push
mov
inc
dec
outsl
adc
and
and
and
test
cmp
sbbb
aad
fcmovu
jge
or
ljmp
xor
jns
aad
jae
into
rcr
cmp
jnp
cld
daa
js
mov
add
pop
fmul
push
sbb
add
push
inc
pop
idivb
jo
mov
test
and
and
dec
mov
pop
mov
dec
fstps
scas
jg
mov
push
cmp
aaa
pushf
repnz
push
test
pusha
sub
xor
push
pop
sbb
out
and
push
mov
test
or
imul
fs
push
lcall
lods
pop
in
outsl
pop
and
out
dec
mov
mov
mov
push
aaa
pop
movsb
mov
test
xchg
arpl
mov
int
sbb
mov
xor
inc
das
es
jns
clc
pop
fnstsw
or
cmp
pop
push
lahf
ss
dec
ret
jnp
nop
shr
mov
out
mov
inc
shl
imul
lods
cmp
xchg
add
lea
stos
addr16
or
cmc
xor
mov
and
std
adc
icebp
push
push
push
out
adc
push
jo
leave
enter
mov
gs
stos
aas
fwait
adc
dec
adc
lea
mov
arpl
fsubrl
lahf
cmp
scas
loop
pop
inc
jnp
push
popf
adc
fdivs
cmpsl
mov
xchg
fimuls
pop
pextrw
inc
or
test
icebp
std
and
ret
push
push
mov
std
or
mov
push
push
pop
jns
mov
popl
sahf
push
and
pop
sub
cltd
cmpsb
add
pop
dec
in
aaa
and
pop
cmp
testb
sub
push
mov
aam
cmc
inc
push
ja
add
pop
inc
jbe
in
xor
push
adc
rcl
fmul
mov
ret
adc
push
test
xchg
inc
xor
push
pop
ret
push
scas
pop
xchg
jge
popa
jne
cmpsl
xor
loopne
xchg
fsubr
push
pusha
stos
jns
and
mov
outsb
push
jle
cmp
rcrl
subb
mov
jl
shrb
jg
imul
sbb
pop
fisubl
loop
mov
and
add
dec
adc
lock
lcall
shll
and
daa
data16
sti
clc
addl
push
faddl
xor
sbb
call
xor
jecxz
jb
inc
jmp
or
ss
cld
movsb
mov
outsl
pop
lods
pop
addl
pop
sbb
out
and
sti
pop
lret
lods
mov
das
dec
sub
out
sub
xor
imul
add
add
jbe
sbb
jns
data16
ds
cmp
scas
jne
lea
pop
xchg
in
fisubrl
call
mov
jo
and
jecxz
scas
add
sbbl
stc
jns
test
pushf
sarl
leave
rolb
add
sbb
xor
stos
mov
aam
ja
or
xchg
xor
adc
popf
fdivrs
xchg
and
lahf
movsl
and
xchg
arpl
inc
cmpsb
fnsave
mov
push
jae
int3
dec
lahf
push
dec
sub
xchg
imulb
jge
pop
push
fst
loop
mov
xchg
mov
fidivrl
or
cwtl
and
fistl
movsl
mov
bound
jb
and
gs
cmp
push
mov
lcall
xor
pop
js
cltd
lock
pop
imul
pop
sti
mov
cmp
cli
pop
data16
insl
push
and
adc
scas
nop
lret
lods
mov
jnp
hlt
mov
and
xchg
movsb
scas
sbb
in
pop
out
cltd
mov
cwtl
adc
flds
and
sub
push
test
aas
jnp
pop
sbb
out
cli
pushf
cmc
push
mov
in
push
and
daa
aam
jg
in
stos
dec
and
iret
scas
mov
and
or
movsl
push
xchg
ret
int
mov
scas
call
mov
stc
imul
lock
push
mov
icebp
sbb
jl
xchg
fnsave
pop
sbb
add
scas
out
mov
and
into
or
repnz
push
pop
push
pop
lcall
sbb
movsb
push
jmp
negl
dec
xlat
jl
dec
push
lods
inc
jb
scas
push
frstor
adc
cmp
popf
fsubr
pop
cmp
or
lret
xchg
adc
pop
loopne
pop
or
inc
int
mov
dec
fwait
mov
push
dec
je
pop
xor
add
pop
jg
testb
dec
dec
sbbl
pop
jle
adc
rcl
adc
sbb
ret
lret
shlb
shll
lods
dec
xchg
loopne
xor
icebp
jp
je
fcoms
cmp
aad
leave
repz
ret
fistpll
pop
inc
scas
mov
mov
lea
mov
mov
fadds
dec
mov
or
adc
jmp
cmpsl
es
lahf
jae
sub
inc
movsb
aas
loopne
cmp
push
addr16
adc
sub
std
dec
shlb
loope
pop
inc
sub
rcr
enter
sti
cmp
sahf
lods
xor
fisubrs
xlat
fnstsw
bsr
ficoml
and
sahf
push
and
cmpb
stos
mov
js
inc
les
fwait
popf
xchg
mov
sub
push
mov
loopne
daa
xor
adc
aam
js
mov
jo
fistpll
jle
leave
sahf
aam
lahf
cmp
mov
jbe
or
inc
test
lods
sarb
pop
in
std
xchg
sahf
dec
adc
sbb
xchg
mov
cltd
insw
fsubrl
loope
lret
xchg
inc
mov
adc
and
in
dec
mov
dec
iret
push
loope
lock
push
in
pop
fildll
or
in
int3
sbbl
out
inc
loope
pop
clc
jge
push
bound
jns
arpl
xchg
lock
fdivrl
sub
sti
addr16
xchg
ljmp
in
pusha
cmp
push
push
dec
movsl
les
jp
mov
sarl
or
in
stos
call
les
cmpsb
xor
loopne
sub
push
mov
aam
aaa
clc
cmp
or
cwtl
iret
out
fcoms
in
sub
dec
test
and
sbb
xor
rolb
fs
fisttps
xchg
or
push
fidivl
push
lret
std
mov
and
aam
cmpsb
push
dec
dec
mov
push
xchg
aam
rclb
mov
js
std
pushf
lea
mov
or
loope
sahf
push
sub
ret
xor
pushf
les
std
xchg
mov
dec
loope
mov
jnp
add
aas
je
outsb
push
or
clc
cwtl
jge
jle
cmp
xor
xor
push
mov
pop
insb
subl
jl
flds
or
jp
aas
inc
sub
fchs
pop
ds
and
scas
loope
lahf
lds
sub
jecxz
ret
xor
ret
mov
jecxz
xchg
stos
into
sub
arpl
pop
cwtl
out
stos
push
push
into
cmp
xchg
dec
daa
sarb
push
rorl
pop
add
pop
dec
frstor
pop
or
repz
push
xchg
std
jp
aam
jle
add
into
xor
pop
les
icebp
xchg
mov
ljmp
sti
mov
jo
xchg
xchg
sbb
or
mov
pushf
psllw
ljmp
mov
mov
aaa
adc
gs
shrl
cmpb
lret
adc
iret
dec
cmp
test
sahf
loopne
sbb
push
mov
je
pop
enter
popf
in
push
fsubrs
imul
mov
push
mov
shll
dec
push
cwtl
call
mov
sti
or
cli
cmp
pop
sub
xchg
cwtl
enter
and
mov
dec
sub
stc
cmp
lcall
cld
pop
loope
outsl
cwtl
pop
cmp
adc
mov
fisubs
iret
xchg
popf
scas
cmpsl
adc
shrl
dec
les
mov
sarb
loopne
testb
jne
mov
sub
fisubrs
pusha
shlb
mov
out
ja
int
cltd
pop
mov
add
add
lret
xchg
sbb
push
push
dec
push
test
jno
pop
mov
fwait
sti
ds
loopne
imul
mov
jno
out
fistpll
jo
xchg
outsl
inc
mov
sbb
and
fiadds
xchg
outsl
leave
leave
jno
cli
cmp
fwait
pop
push
xchg
jno
push
ficompl
out
adc
mov
scas
cmp
and
clc
and
mov
fwait
xchg
jmp
leave
inc
pop
movsb
sbb
inc
inc
dec
movsl
xor
xchg
jge
push
cmc
xchg
aad
cmp
movsb
test
ret
fcomi
int3
add
sbb
xor
xchg
mov
js
ds
ret
insb
daa
mov
jae
subb
xor
fsts
lds
cmp
pop
mov
mov
faddl
dec
andb
aas
xorb
lret
push
mov
pop
repz
xchg
gs
mov
jae
decl
and
and
mov
xor
push
mov
incb
js
xchg
mov
cmp
sarb
xchg
lea
push
inc
jnp
jne
push
cmp
in
mov
addb
fstpt
or
push
sti
xor
add
mov
in
int3
xchg
push
pop
imul
mov
rcr
mov
sub
cmpsb
cmp
loopne
and
push
neg
fcmovu
dec
loop
cmc
fwait
xchg
cmova
out
sbb
enter
fsubs
pop
mov
cltd
dec
aad
xor
repz
movsb
or
or
scas
adc
in
cmp
or
outsb
fidivrs
xchg
ret
enter
clc
dec
mov
pop
and
rorb
pop
push
sbb
push
mov
add
incl
xchg
aad
adc
sub
pop
adc
xor
jae
imul
sete
jmp
and
fwait
cmp
inc
sbb
sub
push
ljmp
int
xor
imul
jmp
arpl
cmp
or
rcll
imul
push
negb
je
es
dec
scas
or
adc
mov
sbbl
aad
lods
sti
mov
adc
push
mov
out
lock
lock
je
or
cmp
shrb
out
pop
movl
lret
outsl
movsb
dec
xchg
popa
imul
jae
mov
mov
xchg
pusha
mov
out
enter
lahf
jb
pop
iret
scas
lcall
fcoms
das
aas
imul
pop
push
xchg
push
add
fimull
test
fdivl
dec
cmp
mov
stc
adc
popl
mov
mov
and
hlt
mov
gs
cmp
mov
sub
clc
dec
jp
lret
xchg
jp
mov
out
call
xchg
jo
sub
lods
movsl
leave
call
std
mov
movsb
lea
int
cmp
mov
gs
mov
notl
in
mov
sub
rol
ja
ljmp
negl
testb
movsl
add
and
push
push
stos
inc
fwait
hlt
push
ds
inc
add
shl
push
int3
sbb
xlat
mov
pop
xchg
jge
mov
push
aaa
out
icebp
pop
ss
sbb
xor
xchg
push
loop
fs
cvtpi2ps
xor
jns
sbbb
test
pop
insb
push
mov
lahf
inc
jae
call
push
sbb
rolb
jno
loopne
outsl
xor
int3
push
nop
xchg
xor
add
inc
mov
insl
mov
adc
mov
xor
mov
test
xchg
jne
out
rorb
mov
inc
jle
repz
inc
movb
xchg
cmp
fs
cwtl
jg
cwtl
inc
sub
mov
or
mov
sub
nop
fistpll
movsb
mov
push
stos
or
bnd
orb
pop
inc
out
insb
scas
pop
ja
pop
cmp
test
cmp
ret
test
xchg
cmp
xor
mov
jle
stc
fwait
scas
in
adc
fs
lods
test
test
mov
pop
rolb
pop
aas
jle
aaa
xor
sub
divl
jae
pop
shlb
push
add
mov
leave
rcrl
inc
xchg
popf
sbb
insl
imul
imul
shrd
es
cwtl
ds
fcoms
ds
mov
inc
fistpll
add
int
mov
cmp
or
loope
shll
dec
ret
addl
push
bound
jns
and
fmull
and
vunpcklps
jmp
mov
pop
adc
in
jbe
pop
push
cltd
mov
adc
mov
mov
ss
and
js
mov
mov
pushf
xchg
pop
popf
rcrl
adc
xchg
in
insl
add
jnp
pop
xchg
xchg
push
loopne
push
cmpb
xchg
inc
lea
push
test
sub
mov
add
ficomps
iretw
rcr
pop
loop
jo
dec
ss
dec
loope
mov
pop
xchg
or
xor
loopne
jecxz
out
sub
addl
jns
mov
mov
pop
inc
cmpsb
stc
jo
jb
pop
push
add
and
push
and
xchg
mov
into
sub
cmpsb
js
mov
stos
dec
sub
xor
mov
mov
cli
cwtl
cmp
pop
mov
inc
sbb
into
or
push
cmp
stc
fsubr
and
pop
xor
pop
cld
pop
and
add
mov
into
pop
adc
in
loopne
scas
add
inc
call
arpl
daa
sub
cmpsl
lds
mov
cmp
hlt
jb
sti
add
xor
mov
pop
std
adc
sahf
in
cmpsb
add
test
cmp
stos
xor
and
in
pop
iret
insl
pop
dec
mov
shl
cltd
xchg
mov
ja
aas
inc
inc
fadds
imul
mov
incl
test
add
sbb
fidivrl
jns
or
mov
daa
cmp
mov
inc
fidivrs
mov
je
push
or
adc
in
jnp
mov
mov
mov
iret
inc
jl
mov
inc
sub
push
imull
aad
dec
push
jge
or
sbb
mov
xor
lcall
aaa
mov
xchg
mov
and
loopne
push
mov
xchg
mov
out
mov
jno
leave
or
inc
push
mov
mov
xchg
push
pop
sub
and
dec
lock
xchg
in
xchg
ljmp
sub
mov
and
sub
subb
jge
aaa
adc
out
fistpll
outsb
idivl
mov
leave
adcl
imul
in
loopne
fstp
test
ds
xor
push
outsb
push
aas
add
pop
xlat
ficompl
out
and
adc
fs
pushf
and
push
fsubrs
je
loop
insl
rcrb
dec
xchg
test
cltd
testb
adc
or
jo
mov
adc
mov
je
clc
cmp
lods
imul
cmpsl
cltd
rol
inc
js
sub
mov
movsb
push
enter
arpl
cmp
mov
cld
xchg
sarb
shl
push
insb
xchg
dec
adc
mov
pop
ret
or
xchg
mov
fldl
sbb
movsl
lret
or
xchg
xchg
pop
in
adc
cmp
shll
add
mov
outsb
repnz
imul
and
xor
loop
and
mov
pop
ret
outsl
rclb
test
cwtl
lods
insl
shrl
jecxz
loop
push
inc
cmp
data16
push
xchg
push
cmpsl
mov
dec
into
jge
push
inc
mov
sbb
hlt
push
ja
ret
scas
fdivs
imul
int3
and
mov
sub
enter
add
sbb
or
and
ljmp
testb
push
and
loope
enter
orb
jle
cmpsb
sub
sahf
shr
cs
movsl
ljmp
cltd
mov
dec
stos
aaa
ds
mov
sub
inc
push
cld
loop
jb
jg
scas
call
clc
xor
pop
outsl
pushf
pop
cltd
gs
pop
rclb
adc
lcall
repnz
cmp
imul
mov
jle
outsb
divb
mov
mov
sahf
shld
push
push
mov
cmpsl
push
imul
push
cmpsl
sub
mov
ja
clc
dec
or
push
cmc
fsts
inc
fsts
xor
and
mov
mov
sbb
ja
frstor
clc
clc
inc
test
fsubrs
sub
imul
dec
filds
mov
outsl
adc
and
add
or
jae
mov
movsb
sub
adcl
daa
push
cmp
cmpb
mov
stos
call
jae
sub
lods
dec
lcall
hlt
popf
push
jecxz
cmp
aad
and
or
dec
pop
sbb
addr16
pop
test
or
lds
shl
mov
xorl
xchg
inc
mov
popf
popf
jl
test
inc
andl
aas
stos
jne
adc
fnstcw
imul
inc
push
stc
push
fisttpl
sub
push
cmp
sub
pop
outsb
int
jb
movsb
pop
scas
ja
push
or
or
adc
add
pop
xor
sub
push
and
cltd
test
or
popf
int3
call
sbb
mov
mov
xchg
vandps
xchg
inc
xchg
in
sbb
pop
pop
inc
lahf
lock
ffreep
push
jmp
outsl
dec
inc
mov
bound
push
lods
out
mov
fucom
mov
mov
ja
push
jno
inc
rolb
cmp
in
adc
jp
jecxz
dec
cltd
ret
push
pop
mov
sbb
fst
testb
outsl
ret
hlt
sub
or
sub
adc
rcll
mov
ret
in
fwait
and
or
data16
and
cmp
divb
in
push
add
add
mov
sub
sarb
fildl
in
arpl
push
cltd
lcall
pushf
mov
pop
in
cs
cld
cs
xlat
inc
mov
cmpsb
int3
xchg
nop
mov
pop
cmp
fsts
stos
pop
in
enter
jo
mov
fmull
stos
setp
inc
sub
fsubrs
out
adc
sar
daa
jno
shr
xchg
cmp
int3
add
jge
dec
adc
or
in
push
cwtl
push
pop
pop
push
push
or
out
pop
lea
stos
out
jae
pop
jp
test
mov
fs
or
jb
jno
roll
xchg
jnp
push
mov
ss
rol
xchg
pop
xchg
daa
or
push
push
xor
daa
rclb
push
sub
mov
out
mov
enter
cs
cmp
pusha
xlat
pop
xor
mov
xor
jae
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fcompl
pop
bound
pop
bound
lret
loopew
adc
mov
xor
loop
add
fdivl
iret
xchg
pop
jne
lods
sub
mov
xchg
mov
fs
mov
inc
je
push
bound
inc
push
cmp
push
scas
test
xlat
jl
pop
shlb
inc
mov
mov
stc
arpl
cld
xchg
xor
xchg
in
mov
imul
imul
out
idivl
test
fnstcw
add
mov
mov
adc
lods
xchg
jb
aaa
cs
jle
mov
and
daa
push
out
cmp
xchg
insl
test
jmp
jmp
adc
push
or
std
xor
and
in
xchg
mov
sti
mov
das
movsb
cmp
hlt
sti
dec
xor
or
mov
mov
push
xor
cld
jnp
fsubrl
pop
add
and
pusha
in
pop
sarl
in
test
jg
lea
test
popf
inc
push
es
cvttps2pi
xchg
mov
and
cld
mov
loop
shlb
pop
mov
rorb
nop
and
jo
pop
and
jge
cmpsl
imul
loop
mov
test
xchg
add
sbb
push
sbb
pop
cmp
cmova
mov
fcomp
jl
or
add
scas
push
jmp
jnp
data16
push
sbb
outsb
mov
push
int3
or
addr16
arpl
or
xchg
and
sbb
and
outsb
insb
clc
add
fildll
popa
mov
ret
sub
adc
jmp
cmp
xchg
sti
mov
popf
xchg
push
push
ucomiss
sbb
shll
mov
jb
imul
mov
int3
div
pop
shr
test
les
out
dec
and
daa
mov
cmp
sbb
sbb
mov
data16
cs
stc
filds
lcall
push
popf
or
imul
das
sub
ljmp
and
gs
icebp
test
imul
mov
pushf
pop
sub
into
lock
dec
imul
aad
iret
cmp
mov
add
out
pop
sarb
test
cltd
cmp
jb
movsl
stc
int
and
in
shlb
inc
insb
pop
mov
imul
daa
inc
jl
into
sti
sbb
js
mov
iret
mov
int3
inc
hlt
mov
cmpsl
outsl
dec
daa
xor
popa
lcall
rolb
push
mov
aad
stos
loope
jo
pop
ljmp
hlt
push
or
jg
fstpl
movsl
rcrb
shl
adc
in
cmp
iret
outsl
loope
popa
sti
cld
jns
loopne
jmp
push
das
ljmp
adc
shlb
push
data16
dec
add
enter
int3
icebp
sub
pop
dec
mov
lahf
je
sbb
jle
into
or
stos
in
cwtl
mov
enter
mov
cmp
pop
push
nop
add
sub
sbb
ja
push
dec
loopne
jp
xchg
lods
in
cmpsb
jl
push
xor
stc
lsl
cli
mov
ficoms
mov
and
fsts
add
cmpsl
fstpt
mov
jg
popa
cmp
cmpsl
jle
jns
sbb
subl
pushf
push
lods
push
sbb
sbb
xor
fwait
pop
mov
adc
push
pop
leave
xchg
jp
and
negl
cmp
sbb
orb
negb
push
negb
jge
push
xor
inc
jge
and
push
push
add
pop
mov
push
dec
in
nop
jbe
jb
loop
pop
into
lret
fwait
imul
add
aam
cld
jne
or
gs
lret
stc
in
adc
outsb
jl
int
seta
adc
lock
iret
insl
xchg
fs
in
pop
fcoms
jne
les
mov
arpl
dec
cmp
enter
mov
push
mov
icebp
pop
jne
lods
out
nop
mov
leave
shlb
mov
daa
loopne
movsb
push
xchg
sarl
aaa
cmpsl
clc
jl
pop
mov
mov
cmpb
lds
mov
aaa
les
jno
ja
or
sub
arpl
js
sub
dec
aaa
mov
idivb
loope
out
in
incb
push
adc
movd
loop
dec
xchg
mov
and
flds
push
mov
aam
jb
cmp
sub
cmp
repz
aad
mov
push
adc
mov
xchg
dec
mov
fst
pop
jle
push
xlat
js
pop
fcomps
outsb
cmpsb
ljmp
aas
aaa
jmp
push
hlt
cs
dec
je
mov
stos
or
mov
sbb
sub
mulb
enter
pop
or
sbb
xchg
lods
pop
or
fdivrp
push
xchg
xchg
pop
add
pushf
mov
inc
out
mov
cmp
insb
cmp
mov
push
jge
pop
call
and
pop
jg
shr
ja
das
insb
sub
dec
push
inc
fwait
mov
dec
sub
push
lods
icebp
bound
pop
sti
xor
insb
pop
xchg
mov
dec
jecxz
clc
in
shll
scas
sbb
aam
mov
cmp
lahf
imul
sbb
loope
icebp
scas
sub
fisubs
mov
int
lret
push
insb
test
lret
jle
pusha
jmp
add
repnz
adc
pop
adc
fwait
dec
rcl
in
sbb
nop
jo
add
or
addr16
pop
jle
mov
movsl
jbe
jle
lcall
jne
insl
scas
subb
out
push
rorl
rclb
imul
mov
test
rcrb
and
pop
testb
cmpsb
cli
push
clc
inc
ficoms
xlat
xor
out
test
andl
sbb
jae
daa
adc
test
ljmp
stc
push
out
mov
jg
sbb
sbb
pop
add
pop
mov
inc
repz
sub
mov
cltd
push
xchg
mov
mov
pop
int3
inc
mov
mov
lods
xor
pop
cwtl
sbb
pop
sbb
pop
add
faddp
xor
xor
aad
xor
ljmp
fstl
and
out
mov
xchg
jge
jecxz
movsl
mov
xor
push
sbb
dec
out
mov
fidivrl
in
add
fs
addr16
dec
loop
inc
popf
out
and
mov
clc
xchg
sbb
mov
dec
into
cmpb
hlt
das
adc
push
in
inc
es
jmp
xor
add
add
outsb
jae
fldenv
and
ljmp
push
mov
push
cmp
stc
cwtl
mov
repnz
sarb
gs
and
pop
enter
jmp
sub
pushf
int
lahf
mov
dec
pop
xor
leave
sahf
inc
int
not
mov
pop
loop
mov
pop
push
call
xchg
fs
call
xor
or
pop
xor
mov
push
enter
ljmp
imul
adc
fcmovnb
std
xor
cmp
les
ljmp
inc
repz
jle
push
stos
mul
pushf
cmpsl
hlt
les
inc
push
fildl
bound
mov
clc
mov
pop
outsb
dec
imul
pop
in
add
or
jle
pop
fnstcw
inc
pop
dec
cmc
icebp
xchg
lods
les
jg
dec
out
push
fmul
xor
scas
adc
pop
sub
jns
or
icebp
mov
outsb
jle,pn
test
mov
pop
dec
pop
jo
jbe
repnz
cmp
insb
adcl
inc
in
cs
addr16
in
int3
or
and
push
cmp
lahf
hlt
push
jle
loopne
sbbl
adc
insl
popf
cmp
push
out
insb
lods
ds
xchg
xchg
mov
inc
jecxz,pt
sub
and
jp
push
shlb
inc
sti
mov
test
xchg
loopne
inc
ss
add
scas
rorb
cmp
mov
push
cmc
insb
int
push
mov
fwait
cmp
xchg
mov
mov
dec
lahf
sahf
mov
mov
mov
dec
fucom
mov
out
ljmp
inc
aad
pop
add
sbb
mov
mov
push
jecxz
inc
fisubrl
jg
loope
push
xchg
fwait
es
xchg
pusha
xchg
outsl
jmp
push
mov
pop
jge
lods
subb
push
inc
lahf
movsl
jmp
sbb
inc
shlb
les
push
es
out
lea
out
insb
pop
mov
dec
jbe
xchg
pop
testl
mov
or
scas
and
cli
and
push
inc
xchg
fisubrl
mov
lret
pop
add
rorb
mov
shll
shrb
paddd
inc
iret
lods
jbe
sub
inc
jecxz
dec
or
in
mov
cmp
insl
xlat
push
mov
pop
sbb
mov
call
sub
stos
and
xor
shrl
mov
hlt
aam
and
dec
stos
push
lcall
mov
mov
push
xchg
rcrb
mov
subb
enter
fcomi
pop
cmp
or
les
jmp
push
add
outsl
inc
pushf
ret
aas
mov
push
and
aas
nop
and
inc
idivb
and
jl
push
cmp
inc
outsb
cmp
lds
xor
shlb
inc
sub
cmp
add
jmp
sub
push
rclb
xchg
sbb
ds
inc
fnstsw
adc
fcmovnu
inc
les
lret
enter
or
int
add
cmp
sbb
sbb
inc
inc
idiv
out
mov
or
jno
gs
enter
ficoms
push
jecxz
das
cltd
cmp
dec
jmp
mov
negb
push
roll
jl
cmp
fdivrs
push
clc
aad
js
dec
mov
lods
xchg
addr16
in
xchg
mov
mov
shlb
ret
xchg
daa
sub
dec
jbe
add
jbe
push
sbb
lea
jns
mov
adc
pop
daa
xor
es
ror
and
dec
xchg
push
or
xchg
mov
inc
scas
ljmp
popf
stos
push
stos
dec
stos
add
or
ret
mov
imul
push
lret
xchg
into
mov
jns
call
mov
outsb
mov
loop
les
imul
in
jae
push
lret
push
and
inc
dec
inc
mov
inc
les
fidivrl
es
and
addr16
testb
je
daa
xrelease
test
addl
enter
dec
push
dec
inc
add
inc
dec
sub
loopne
cmp
ds
fs
xchg
sbb
push
mov
out
sbb
jno
in
push
in
mov
jns
push
movsb
stc
lods
hlt
pop
pop
mov
mov
inc
je
mov
jecxz
sbb
inc
mov
inc
xchg
fwait
cmc
mov
es
fldenv
sarb
out
push
mov
shrl
push
bound
pop
dec
and
pop
outsl
mov
enter
fs
push
cmp
adc
iret
lahf
adc
jmp
cmp
stos
xchg
inc
xchg
jmp
push
outsl
jl
out
flds
bound
scas
mov
mov
cld
test
mov
mov
mov
jo
in
jge
cs
test
cmp
and
sub
fldt
scas
mov
mov
leave
and
add
pop
jmp
and
push
inc
js
xchg
jg
scas
and
icebp
fnstsw
nop
or
sub
call
pop
push
loope
dec
mov
arpl
jle
out
xorb
push
fdivl
pusha
insb
mov
fldl
imul
xchg
inc
in
cmpl
cmp
rolb
insl
aam
iret
hlt
stos
mov
push
jmp
jle
cs
lcall
mov
push
bound
cmp
mov
lcall
out
add
or
sub
addr16
out
or
inc
push
mov
leave
movsb
roll
stos
subb
adc
ds
aam
add
aad
xchg
ja
sbb
negb
dec
add
pop
test
xor
sub
cmp
aam
sbb
inc
push
cmp
add
cld
xchg
adc
shll
es
ror
fdivrl
idivl
adc
jnp
dec
lock
les
int3
outsb
pop
push
sub
inc
popa
pop
adc
frstor
cmp
popa
aas
pop
push
mov
dec
adc
loopne
and
or
loope
sub
or
pop
jns
notb
pop
and
xor
rcrl
mov
mov
cmpsb
or
push
fadds
pop
lock
out
mov
fwait
jmp
push
gs
lret
pop
mov
mov
xchg
xor
push
mov
jecxz
icebp
sub
call
jmp
lods
adc
ret
mov
jg
mov
andb
adc
xchg
cmpsb
jnp
inc
mov
sub
lock
jo
xchg
int3
lods
push
dec
mov
add
pop
fwait
clc
repz
add
push
fmull
out
xor
iret
sub
xchg
add
mov
jns
dec
aaa
jecxz
mov
jne
mov
lret
and
enter
ja
xor
pop
mov
dec
leave
adc
push
mov
xor
bnd
jno
fdivrp
xchg
sbb
pop
cltd
cs
lret
mov
jmp
add
cmp
mov
and
xchg
addr16
inc
jg
test
in
and
mov
jbe
loopne
sub
add
lcall
xor
mov
addb
testl
pop
out
pop
orl
push
into
lods
inc
mov
lahf
sti
sti
faddl
cmp
sbb
xchg
dec
fidivs
dec
mov
cld
daa
xchg
jecxz
mov
in
ficoms
adc
jbe
pop
inc
cli
adc
cld
push
or
and
stos
imul
mov
dec
cwtl
mov
inc
hlt
mov
mov
bound
loopne,pt
hlt
mov
inc
jle
hlt
jnp
jns
xchg
stos
sub
and
adc
adc
push
les
clc
movsb
cmp
xchg
xor
cld
and
push
gs
xor
pop
dec
or
push
loope
and
xor
jno
mov
test
jle
int3
sbb
fistl
pop
push
adc
jge
push
in
inc
frstor
push
int3
inc
sub
cmp
jle
and
cmc
xor
xor
imul
ds
dec
movsl
lahf
fcoml
cmp
xor
je
pop
push
ret
cmp
jnp
andl
inc
jmp
popa
sbb
push
pop
in
sbb
and
cld
cmpsl
inc
out
ficoms
inc
add
inc
push
dec
xchg
xchg
xchg
dec
clc
jb
out
cmpsb
test
mov
push
mov
mov
adc
jle
cmp
or
fbstp
out
push
outsb
adc
cmpb
shrb
nop
jb
je
xchg
and
mov
and
xor
in
jbe
add
mov
pop
xor
inc
push
fs
mov
or
shl
sub
mov
jle
mov
push
sarl
fnstcw
add
mov
test
adc
push
add
xchg
popa
sub
xlat
arpl
inc
push
mov
mov
js
test
pop
rcrb
add
inc
adc
lcall
imul
mov
pop
mov
fcoms
inc
xor
add
sub
sub
inc
add
imul
pop
jb
imul
cwtl
pop
outsb
sbb
out
add
mov
add
and
fimuls
adc
fsubrl
pop
push
cmc
enter
inc
outsl
jbe
xchg
faddl
aam
dec
push
ja
cld
pop
adc
push
mov
mov
pop
dec
and
jecxz
mov
push
push
pop
ret
lret
leave
or
enter
aas
inc
pop
mov
adc
lret
jno
shl
xchg
out
xchg
imul
xor
aaa
fiaddl
aad
cmpsl
xlat
scas
rcl
in
sub
and
xchg
shrl
sbb
xchg
pop
aad
or
icebp
jl
lea
repnz
test
cltd
lods
cmp
cltd
pop
mov
lcall
aad
mov
jle
inc
xor
hlt
inc
cmp
hlt
pushf
lock
js
movsl
call
push
repz
inc
lret
aam
pop
add
das
jae
xchg
scas
and
mov
popf
sbbb
ds
or
lods
es
mov
and
adc
mov
add
sub
pusha
sti
mov
jmp
mov
sub
push
push
lods
repz
aas
cmp
jnp
ret
or
inc
mov
xor
add
dec
mov
cmp
inc
xchg
out
or
test
fistpl
dec
xor
aas
jnp
fwait
mov
push
ffreep
ds
xor
and
push
out
fstl
lock
cltd
mov
sbb
scas
pop
leave
mov
xchg
cmp
loop
scas
int3
mov
cmp
dec
sub
add
fstps
mov
iret
pop
ret
jns
xlat
scas
in
je
xchg
sbb
sti
scas
xchg
adc
or
test
rcl
out
sbb
cmp
in
imul
ds
iret
movsl
incl
iret
pop
add
mov
add
cld
pop
inc
dec
pop
testl
mov
push
jecxz
sbb
mov
daa
dec
test
sbb
ljmp
cmp
mov
jno
mov
mov
frstor
mov
jp
movsl
aam
test
cmp
jle
sbb
outsl
int
mov
int
subl
out
xor
subb
lret
inc
xchg
jl,pn
mov
stos
pop
pushf
jge
xchg
pusha
mov
lcall
cmp
adc
jg
imul
or
fwait
add
sub
mov
ljmp
xchg
ljmp
cmp
loopne
lds
mov
lretw
mov
xor
insb
ret
idivb
cwtl
and
jg
je
xor
out
mov
movsl
adc
mov
push
xlat
test
test
scas
sub
mov
rorw
jp
jnp
lds
pushf
rdmsr
xchg
test
ds
into
inc
test
mov
es
test
jmp
jne
jne
imul
adc
mov
pop
pusha
mov
cmpsb
xor
mov
sbb
mov
cmp
xchg
or
inc
pop
mov
jmp
imul
and
icebp
int3
sahf
je
or
jo
adc
rcrl
cmpsb
push
pop
xor
pop
sbb
fnstsw
clc
out
les
inc
imul
jecxz
xorl
mov
jne
or
lods
xor
imul
ljmp
dec
scas
push
adc
ds
jg,pn
sbb
stos
repz
fdivrs
add
out
mov
std
xchg
mov
insl
sar
jecxz
mov
pop
jo,pt
lds
inc
xchg
jb
mov
roll
mov
negb
leave
xchg
dec
cs
call
mov
popf
xor
enter
cmp
adc
push
sub
cmc
push
cmpsb
cs
jbe
popf
jecxz
jl
or
mov
push
add
fstpt
sbb
xchg
lds
dec
cs
push
out
int3
inc
adc
push
adc
xchg
cmpsl
sbb
sti
jno
cltd
push
jno
add
add
ljmp
mov
push
insl
xor
fcoms
inc
jo
int
add
loopne
inc
repz
mul
sub
iret
lahf
mov
mov
push
js
cwtl
cmp
mov
push
mov
mov
lahf
cmpl
arpl
cs
push
pop
sub
lods
imulb
test
adc
mov
dec
adc
loope
push
cmp
pop
loop
mov
xorl
daa
fwait
ss
sbbb
pop
xor
rol
sbb
std
or
push
cs
push
lcall
hlt
cli
popa
scas
sbb
gs
mov
pop
orl
out
xchg
dec
sbb
mov
icebp
or
mov
pop
push
ljmp
fs
add
daa
addr16
std
and
inc
push
das
inc
sbb
pop
xchg
cld
and
push
fisttpl
ret
pop
jmp
cmc
pop
mov
inc
xor
xor
cli
jae
push
xor
cltd
loop
shrb
popf
stos
mov
push
lds
imul
xor
dec
sub
out
rol
pusha
icebp
or
sbb
aad
rolb
mov
mov
jge
scas
ss
xchg
bound
cmpsb
mov
xchg
jbe
adc
push
jnp
or
cmpsl
loop
incl
sub
jno
data16
cli
je
pop
dec
dec
mov
adc
inc
mov
xchg
or
movsl
out
fsubrs
jns
ret
aad
fcmovnbe
rorb
rcrl
push
loopne
outsb
mov
or
popa
ret
xchg
loopne
fbld
xchg
adc
push
fbstp
push
xchg
push
ljmp
or
xchg
stos
jge
rcl
pop
ficomps
shll
test
dec
data16
cmp
pop
cmp
btc
iret
call
jno
jae
mov
fcmove
jnp
rcl
outsl
add
clc
outsl
aam
sar
sbbl
daa
mov
jg
ds
bound
jge
xor
rcrl
pop
aas
push
movsl
test
or
idivb
test
jae
es
sub
int
mov
in
add
inc
int3
and
push
cmp
daa
mov
imul
mov
aad
sahf
into
fidivs
adc
mov
sbb
mov
sbb
lea
push
cmp
les
jecxz
je
imul
mov
in
scas
sar
xlat
jle
mov
jae
xor
or
data16
imull
cmp
sub
xchg
adc
pshufw
sbb
push
mov
arpl
cli
lods
aad
insb
dec
push
mov
shrl
jo
scas
or
pop
dec
mov
call
gs
ret
negb
test
aam
lods
cmp
xchg
sub
cld
in
jle
or
stos
jg
add
fs
clc
scas
js
add
shr
jne
or
mov
mov
insl
xor
sub
pop
dec
dec
repz
mov
inc
xchg
inc
adc
sbb
test
mov
aad
xchg
or
fdivrl
cmp
test
imul
arpl
cltd
aad
cmp
stc
insl
mov
pop
in
xchg
imul
adc
xchg
movsl
shll
sub
xchg
jb
cmpsl
mov
xor
mov
stc
aas
les
sub
int3
cmp
shll
ret
inc
mov
lret
lds
sbb
shl
adc
jns
shlb
orb
push
into
orb
loope
or
sub
sub
push
xorb
ud1
lret
js
fisubs
lret
push
lret
sar
sbb
dec
inc
cmp
daa
push
enter
iret
jp
je
mov
adc
fwait
loopne
addr16
sub
xchg
out
bound
adc
mov
sbb
or
push
addr16
lahf
xor
or
xor
imul
enter
lret
mov
repz
push
lods
sbb
xchg
les
push
dec
bound
mov
movsb
add
jns
cmp
cmp
jmp
in
sbb
xor
daa
xor
sbb
add
mov
pop
cli
into
idivb
or
out
mov
jle
loop
sub
jmp
cmp
cmc
sub
in
mov
pop
repz
pusha
and
push
or
ficomps
ja
ljmp
mov
lret
lods
jg
cmpl
mov
jns
pop
lds
ret
mov
icebp
push
mov
aad
xchg
and
test
andl
std
mov
mov
xor
test
cmpsl
lret
pop
pusha
cmp
popa
and
js
call
in
sub
xor
push
adc
xlat
mov
sbb
add
or
fisubl
jge
xchg
adc
repz
xor
and
xchg
shlb
or
add
pop
xlat
and
pop
cmp
cmp
sub
ret
inc
jb
mov
mov
and
addr16
and
mov
mov
jo
xchg
int
dec
sbb
pop
or
jo
cmpsl
and
push
adc
ss
pop
jle
adc
test
aaa
je
stos
mov
lret
or
and
leave
in
xor
sub
hlt
mov
sub
insb
insb
popf
rol
pop
xchg
xor
cld
or
jl
xchg
dec
fdivr
mov
mov
inc
shl
aam
mov
push
dec
push
rorb
jmp
jbe
loope
push
es
pop
or
and
in
js
pop
hlt
jbe
inc
lock
in
adc
insl
inc
fwait
dec
sbb
lods
lock
out
in
inc
test
mov
mov
inc
icebp
daa
add
mov
fcoms
ljmp
xor
lcall
push
cwtl
fisttpll
pushf
jb
test
cli
lret
push
xchg
sti
and
jl
sti
jnp
enter
pop
add
ror
jg
xor
lcall
mov
mov
sbbl
add
rol
out
mov
mov
adc
cs
andb
lret
mov
addb
popf
mov
js
jnp
cmp
lock
outsl
insb
fistpll
xor
andl
imul
fsubl
ja
mov
mov
jl
aaa
or
cmpsl
mov
sub
xchg
pop
mov
or
adc
ljmp
mov
mov
mov
lret
or
adc
add
inc
add
shll
mov
xor
loop
mov
cmp
inc
push
pop
mov
lds
or
ljmp
add
rclb
leave
jno
lds
pop
jp
push
fnsave
xor
mov
in
mov
sbb
insl
sahf
daa
dec
sbb
inc
inc
push
push
test
hlt
aas
outsb
repnz
cmp
jp
pop
xchg
adc
les
in
pop
cs
fsubrl
dec
mov
ljmp
inc
into
fidivrs
inc
in
pop
bound
or
jecxz
jb
sbb
mov
adc
je
mov
xor
imul
into
aas
push
push
cmp
adc
push
xlat
jmp
mov
jmp
or
fiaddl
xorb
in
adc
push
lret
popa
add
add
mov
enter
outsb
out
mov
repz
jnp
mov
aaa
mov
sbb
orb
shl
stc
lret
std
fmul
push
data16
or
sbb
fs
pop
nop/reserved
sbb
subl
push
inc
ret
mov
sarl
adc
add
stos
lret
pop
iret
cmp
test
mov
adc
mov
cwtl
push
scas
jmp
sbb
aam
jno
in
repz
fs
push
lea
mov
lods
ret
arpl
hlt
dec
clc
in
movsb
lock
mov
std
xor
cmp
fisubs
jnp
or
mov
fldt
js
xor
mov
cmc
data16
pop
lret
xchg
das
inc
pop
fsubr
test
and
ret
or
jae
mov
sub
xor
mov
rcl
jle
xchg
dec
jnp
popl
or
or
jno
jb
mov
aam
xchg
test
pop
jnp
sti
in
mov
cld
xchg
xchg
jl
stos
xchg
push
popa
js
push
push
xchg
cmp
xor
mov
bound
sub
pusha
incb
enter
sub
sahf
jne
mov
mov
stos
arpl
jp
adc
dec
mov
sub
shll
mov
mov
add
aas
data16
jmp
and
mov
je
cwtl
mov
dec
mov
aam
arpl
push
movsb
fcomi
rclb
mov
sub
xor
jb
push
imulb
pop
fidivs
dec
mov
ss
cmp
nop
add
pop
sbb
dec
push
mov
mov
jae
sbbl
fisttps
and
sbb
cmp
imul
xor
mov
xor
jmp
push
in
push
in
mov
jae
lret
leave
stc
or
dec
sbb
mov
test
mov
push
insl
enter
fisttpl
test
mov
mov
sub
and
dec
jbe
ret
mov
push
loop
mov
lea
popf
or
flds
in
xorl
mov
push
cmp
add
imul
push
in
repnz
pop
mov
ds
cmp
scas
sub
pop
dec
popf
cmp
sub
add
dec
add
xchg
pop
les
int
outsb
push
mov
mov
xchg
mov
repnz
push
call
inc
movsl
pop
xchg
out
adc
les
mov
push
jl
das
aam
lods
jp
or
adc
or
fdivl
pop
fs
jg
popa
adc
mov
cmpsl
sub
push
pop
sub
stc
mov
bnd
movsl
loope
or
jbe
adc
lret
js
inc
pop
addr16
mov
lds
or
int
cmp
jl
pop
dec
jl
fidivl
dec
mov
aaa
sbb
adc
mov
jns
pop
icebp
pop
fcom
sbb
cmp
push
sahf
das
jge
scas
dec
dec
adc
sub
arpl
les
ja
cmp
mov
xchg
xorb
aaa
cmpsb
loop
test
cmp
sbb
add
lret
jnp
inc
pop
andnps
adc
rcrb
xchg
ret
into
push
and
imul
ss
icebp
mov
jmp
imul
fistpll
shlb
inc
adc
xor
shll
ljmp
mov
dec
mov
cmc
sbb
out
dec
pop
jnp
jbe
popa
or
or
dec
mov
push
nop
or
or
mov
xchg
fcmovnbe
gs
shll
pop
mov
les
fldcw
pop
push
xor
mov
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
and
mov
cmp
bound
pop
bound
inc
mulb
js
loop
cltd
sbb
scas
sbb
inc
adc
xor
jbe
add
lret
loop
rorb
or
pop
push
aam
pop
mov
js
sbb
dec
mov
pop
push
mov
inc
stc
adc
mov
iret
lcall
mov
mov
or
pop
dec
cmp
xchg
mov
inc
ret
aaa
aaa
adc
pop
sub
fidivrs
iret
dec
outsb
xor
clc
das
repnz
sub
sub
sub
pop
jecxz
leave
fcmovnb
movsb
mov
adc
js
fidivrl
inc
jns
sub
xchg
imul
inc
jg
push
les
xor
ret
js
das
xchg
lret
das
sbb
adc
call
lret
scas
in
popf
mov
test
mov
xor
push
dec
mov
frstpm(287
push
push
push
je
jne
lcall
xchg
jmp
sbb
sub
sub
adc
ja
mov
in
fcomps
mov
mov
movsb
cltd
rolb
pop
enter
xchg
int3
cmp
jbe
pop
inc
xor
arpl
ret
sbb
dec
xchg
mov
pop
ljmp
add
in
xchg
add
hlt
mov
subl
or
in
pop
dec
xor
sub
adcb
adc
dec
xor
sarl
pop
and
jns
ficoms
test
xor
cmp
add
cmp
jns
push
jmp
pop
js
lds
in
pusha
or
stos
xor
pushf
in
pop
mov
push
lea
sub
fdivl
clc
movl
jmp
xchg
cld
dec
mov
mov
xor
loope
cwtl
les
lods
lcall
dec
jmp
add
rorb
xchg
in
jb
loope
testl
js
repz
jne
inc
in
outsl
sbb
sub
and
out
push
pop
push
stos
mov
adc
adc
or
insb
ror
sbb
pop
dec
or
sub
xchg
cs
cmpsb
mov
mov
addr16
or
adc
push
adc
add
xor
outsl
out
xor
cltd
sub
xor
xor
sub
jl
mov
popa
loop
inc
sbb
outsb
pop
movsb
fsubp
lods
mov
js
xor
mov
aas
hlt
adc
iret
repz
cmp
add
inc
adc
ljmp
inc
or
shrl
or
orl
mov
mov
add
adc
idiv
inc
cmp
cmp
pop
mov
jno
add
push
pop
rcrl
push
and
sub
stc
dec
xchg
sti
mov
lods
in
and
ret
mov
inc
add
sbb
ret
inc
divl
xchg
sub
jp
addr16
es
dec
test
jg
xor
fmull
sbb
dec
aam
fnstsw
mov
add
icebp
jne
and
in
push
pop
fidivrs
out
je
loopne
mov
jecxz
jo
ds
insl
shll
bound
arpl
dec
mov
std
mov
aam
mov
adc
cli
std
cmp
gs
and
add
dec
mov
pop
jge
decl
subl
filds
mov
jmp
in
lds
movsb
sbb
pop
mov
fisubrs
cmp
mov
arpl
sbb
mov
sbb
loopne
jl
mov
mov
sub
inc
xchg
mov
pop
adc
roll
ljmp
push
cmp
push
inc
push
sub
xchg
jo
adc
mov
int3
push
in
push
and
pusha
mov
cs
std
mov
rcrb
lret
les
dec
push
jl
cld
pop
mov
jle
and
sbb
lret
cmp
jno
outsl
sub
cmp
mov
pop
jo
sbb
xchg
add
sub
repnz
sbb
jbe
mov
lahf
and
fwait
push
xchg
movsl
mov
outsb
push
cmp
cli
mov
fstpl
loop
lret
inc
push
stos
insb
pop
jp
std
ret
push
ljmp
enter
xor
adc
xchg
mov
scas
sub
hlt
mov
add
out
sub
cmp
loop
push
push
mov
adc
jo
fdivrl
fidivs
inc
cmp
lock
lock
imul
rcll
je
pop
ret
xchg
sub
and
aam
lcall
in
loop
and
test
lock
fistpll
xchg
out
inc
push
cmp
add
lret
cwtl
cs
and
repnz
mov
sub
xchg
xchg
mov
movsb
popf
mov
inc
mov
push
div
pop
xchg
fstp
inc
out
repnz
push
xor
bound
test
stos
lds
rep
das
test
and
std
icebp
lods
xchg
xchg
std
mov
push
movsl
jo
loope
xor
push
daa
fstpt
jle
shlb
roll
or
jge
pop
lods
fldl
lea
daa
loopne
in
push
scas
dec
mov
lret
xchg
cmp
sub
or
push
flds
in
fisubrl
sub
sbb
sub
in
mov
insb
out
popf
mov
js
push
lods
icebp
lahf
nop
mov
imul
rcll
sub
int3
cltd
jmp
push
or
es
jbe
test
pop
xlat
sti
aas
jecxz
fisubl
push
cmpsl
daa
cmp
xchg
pop
push
iret
subb
out
sbbb
aam
dec
jne
iret
dec
inc
dec
das
ficoml
lret
inc
in
std
push
add
ds
dec
imul
ficomps
add
add
dec
out
in
scas
or
ja
fadds
aaa
adc
push
js
js
xchg
dec
pop
inc
fisubs
add
sbb
fistl
lds
out
lea
xor
add
jns
std
dec
test
pop
add
xor
xor
stos
xchg
flds
shrl
xor
fstp
push
jns
fisubl
imul
jge,pn
jecxz
jae
sbb
aas
in
aam
cltd
xor
fmull
enter
dec
xor
daa
sub
jmp
js
jb
movsb
push
data16
sbb
push
or
mov
cmpxchg
lock
jle
cltd
inc
stos
ret
scas
out
in
dec
out
in
movsl
add
outsb
jmp
sti
out
test
fcoms
aam
and
xchg
sub
sub
int
sti
aaa
sbb
stos
mov
fwait
cmp
fwait
add
or
scas
lret
mov
and
je
cmpsl
enter
repnz
mov
call
sub
or
dec
sub
lods
scas
mov
test
loop
mov
xchg
int
shll
pop
xor
mov
inc
xchg
loop
lret
movsl
divl
cmp
dec
int3
cmp
or
pop
or
mov
xchg
ret
ljmp
insb
sbb
inc
dec
imul
mov
mov
xor
ljmp
xor
jo
mov
out
into
push
icebp
mov
lods
xor
and
xchg
outsl
sub
pop
jns
add
push
push
sub
adc
add
mov
std
push
and
gs
frstor
std
fisubrs
mov
leave
in
pop
jg
repnz
lcall
push
dec
xchg
in
decb
call
out
aas
mov
enter
pop
sub
stc
pop
mov
std
notb
repnz
icebp
out
pop
insl
xchg
xor
js
out
aas
dec
sbb
mov
lea
lods
leave
stos
int
cli
int
fstpt
inc
jb
mov
out
xor
xchg
mov
sub
in
and
push
pop
xchg
xor
pop
fisubs
stc
in
popf
roll
ds
jp
aas
push
or
popl
shlb
mov
in
jbe
and
push
dec
xlat
inc
pop
cmpl
lea
ret
push
ss
aaa
pop
dec
xor
or
xor
mov
dec
out
mov
and
or
mov
and
pop
push
stos
pop
cmc
jae
push
pop
mov
fdivrp
inc
shlb
xlat
inc
das
test
mov
xor
insb
gs
idivb
sahf
add
insl
out
jge
testb
mov
add
dec
xchg
inc
out
jne
pushf
jl
pop
jmp
das
inc
adc
sti
inc
sbb
add
add
int3
xchg
test
js
jne
in
dec
cmpsl
rcll
sub
push
mov
aam
fsubr
push
cmp
ljmp
das
repz
jmp
adc
scas
or
add
lcall
or
xlat
pop
test
leave
in
add
out
popa
pop
std
mov
pop
in
sub
xchg
jp
inc
dec
jp
scas
cwtl
fcmovnu
xor
dec
decb
cmp
ret
js
dec
xchg
or
clc
fs
sub
insb
pop
sarb
adc
cld
adc
ffreep
sub
pop
push
shl
mov
adcb
sahf
ja
pop
imul
sub
jb
subl
sar
and
fmuls
test
and
call
dec
pop
push
mov
arpl
push
adc
mov
cmp
lahf
pop
jnp
cmp
dec
ss
cli
jbe
adc
xchg
aam
add
in
mov
popf
stos
xchg
iret
hlt
sti
lock
sbb
and
ljmp
int
sbb
in
dec
sahf
lods
sahf
negl
inc
cwtd
ss
loop
push
push
push
adc
packsswb
test
mov
push
cmp
rcll
inc
scas
int
inc
mov
mov
cmp
std
add
shrl
sar
push
push
jecxz
mov
push
mov
ss
mov
push
xor
pushf
fnstsw
xor
or
push
mov
mov
aaa
or
testb
pop
mov
add
jmp
clc
fwait
sbb
call
jns
mov
test
bound
call
fisubl
pop
movsb
sbb
lret
pop
lahf
cltd
inc
adc
popl
fisubl
push
dec
xor
pop
aad
xor
lds
jno
mov
pop
in
mov
imul
inc
cmove
in
shrl
push
out
xor
popa
shlb
iret
les
outsl
lcall
jle
pop
dec
dec
push
sti
fcomps
shlb
inc
pop
cmp
push
enter
aam
adc
repz
adc
aaa
test
add
out
arpl
ss
div
add
add
inc
sub
xchg
rclb
test
test
imul
jnp
or
xchg
int
or
cwtl
lea
sub
xchg
gs
jb
repz
pop
jmp
enter
jbe
outsl
fcoml
pop
ljmp
cmp
imul
add
imul
add
dec
ss
add
mov
int3
pop
sub
mov
sub
dec
test
cs
dec
pop
cmp
idivl
sbb
mov
pushf
sbb
push
jnp
jbe
data16
in
push
lret
fnstcw
test
inc
push
das
push
or
mov
mov
xchg
or
push
sub
sbb
leave
jecxz
xor
and
add
adc
lahf
pop
inc
or
jno
cmp
ror
jo
or
jl
pop
outsl
mov
cli
dec
push
mov
mov
push
add
xor
aaa
mov
adc
sahf
ljmp
in
push
adc
stc
xchg
cmp
push
rclb
dec
xchg
inc
out
fwait
xchg
or
sub
xchg
push
inc
je
std
lret
add
xlat
or
int3
add
cmp
push
adc
popa
cmc
mov
mov
and
cmp
addr16
and
pop
test
push
add
rcrl
out
inc
jne
xlat
mov
push
repnz
sbb
cld
lock
scas
xor
je
imul
jge,pn
xchg
int
add
aad
das
aaa
jo
jmp
and
lahf
jns
xchg
dec
repnz
fisttps
lahf
push
dec
pop
int3
xor
push
pusha
push
mov
jno
mov
cmpsb
cmp
pop
ja
mov
lds
cmp
jae
gs
and
lret
loope
push
mov
test
roll
int
mov
or
sbb
hlt
stos
nop
roll
jge
sbb
sub
pop
enter
cli
lret
jg
cmpsl
mov
sbb
pop
sub
les
les
insb
jg
mov
jmp
xorl
sti
pop
cmp
out
xor
push
cmpsb
out
dec
leave
mov
sbb
mov
jne
jno
ret
cmp
rorb
stc
cwtl
jne
mov
push
daa
dec
adc
ss
ret
and
xchg
mov
and
popa
fwait
popf
jo
stc
mov
pop
scas
add
mov
das
ja
ja
mov
jne
rcr
imul
test
jg
xchg
mov
jae
into
or
gs
icebp
mov
outsl
cmpl
mov
in
sti
loope
xchg
enter
sbb
cwtl
ds
es
cmpsl
sub
pop
in
js
jmp
lea
xor
out
repz
add
aad
mov
jg
movsb
shl
shrl
sbb
daa
shr
dec
mov
jnp
daa
mov
pop
iret
sti
inc
mov
fisttpll
fwait
lret
sub
out
sti
mov
mov
addr16
jbe
rolb
clc
dec
mov
or
sbb
pop
mov
fildl
sbb
or
dec
sub
pop
pushf
aaa
gs
out
dec
insb
cld
inc
xor
mov
shl
int
jb
xchg
jb
std
aad
aad
mov
movlps
mov
and
inc
je
loopne
pop
repz
jno
push
pop
fucomi
push
and
adc
sbb
int3
mov
insl
and
push
lods
lret
xchg
pusha
xchg
add
out
mov
clc
mov
xor
lods
shrl
cmp
orl
pop
fs
fidivs
movsb
sub
in
mov
in
add
add
int
inc
push
pop
push
fsubl
sbb
and
imul
or
popf
cmpsl
mov
sbb
xchg
pop
cmp
dec
mov
call
or
inc
lret
lcall
ljmp
xchg
fs
js
xchg
cli
sahf
daa
cmp
rolb
push
sub
das
adcb
data16
mov
ret
fidivl
cmpsl
ljmp
shlb
xchg
mov
add
loopne
mov
dec
sub
mov
loopne
enter
dec
mov
out
push
clc
out
iret
in
pop
mov
xchg
js
mov
int
cltd
rcll
sbb
jb
frstor
sbb
xor
adc
in
movsb
and
cwtl
rep
add
dec
or
ret
jmp
pmaxub
subb
sub
popf
clc
push
xchg
enter
addl
rcll
insl
in
jae
jno
pop
pop
add
add
push
das
or
add
cmpsb
push
dec
in
out
pop
or
jne
and
mov
sub
scas
xchg
push
xchg
jne
cmpsl
pop
jle
dec
jle
dec
cmp
lret
dec
add
jle
adc
jmp
movsl
arpl
roll
ja
xchg
out
add
andb
push
xorb
jmp
add
dec
xchg
xor
mov
jl
in
jge
dec
sub
hlt
xor
shl
pusha
iret
mov
fmul
cmpsl
fmuls
mov
call
scas
and
lcall
push
xchg
sahf
lock
dec
mov
pusha
jne
stos
jmp
mov
adc
js
or
movsb
icebp
cmp
cltd
adc
sub
dec
adc
test
js
int
leave
sub
push
bound
dec
stos
jae
lret
sti
lcall
inc
sub
test
scas
sti
add
fxch
adc
add
add
xchg
push
fistpll
mov
jns
mov
mov
mov
sbb
sar
jecxz
add
aam
lcall
out
insb
sbbl
imul
or
lock
sahf
sbb
jae
divl
lods
mov
je
hlt
cmp
pop
pop
sbb
xor
add
fcomps
sub
xchg
std
jle
jne
xor
into
loope
inc
shl
push
push
out
hlt
dec
stos
dec
jno
aam
adc
pop
xchg
in
cltd
lret
mov
jg
mov
jecxz
leave
or
cmp
in
fbstp
cmp
cwtl
dec
jg
shlb
jns
fcompl
jne
inc
add
roll
sarl
push
test
sub
inc
ret
pop
xchg
int3
stos
jbe
mov
fidivrs
lock
or
sbb
dec
adc
mov
rcrl
xchg
mov
loop
lods
outsb
fwait
mov
movsl
mov
or
inc
adc
mov
xchg
mov
mov
mov
mov
lods
loop
cmp
movsb
cltd
sub
pop
loope
mov
xor
dec
pop
int
cmp
ror
lret
mov
cld
aad
pop
enter
addl
mov
dec
dec
cmpl
inc
cmpsl
fisttpl
push
aad
mov
cmp
jle
or
or
and
in
ret
gs
out
sub
xchg
fistpl
xchg
jecxz
adc
js
fwait
testl
push
xor
pop
xchg
fists
pop
notb
mov
repz
repnz
xchg
daa
testb
mov
ljmp
pause
je
push
xchg
xchg
nop
xchg
xchg
xchg
push
add
out
ret
add
mov
je
mov
mov
xchg
ficompl
repz
scas
cmp
outsb
cltd
enter
mov
push
xchg
xor
pop
in
push
adc
sub
leave
cmp
xor
add
xchg
cmpsl
xchg
lahf
lock
out
out
jne
xor
movsl
test
cmp
icebp
push
cld
loope
pop
jl
imul
aaa
xchg
push
arpl
faddl
call
xchg
adc
push
mov
push
xlat
jecxz
adc
adc
mov
pop
xchg
pop
sub
sete
mov
ja
movsb
xchg
jmp
mov
sbb
ficomps
mov
aam
idivb
mov
insb
mov
jbe
or
aaa
add
push
stc
in
outsl
subl
sbb
xchg
cwtl
add
fldt
lcall
xchg
xchg
shl
push
test
and
sarb
repz
pop
sbb
inc
sub
into
add
dec
imul
cmp
je
test
sbb
aas
jg
fcom
sub
ss
test
aad
jp
jecxz
sub
push
jecxz
into
lahf
pop
dec
cvttps2pi
test
mov
push
mov
aas
dec
jl
dec
cmpsb
push
xor
sbb
jg
mov
cmp
fwait
mov
mov
adcb
fdivl
cwtl
in
inc
xlat
or
negl
cmpsl
rolb
cmp
out
dec
xor
adc
mov
xchg
xchg
in
adc
leave
push
fidivl
push
or
pusha
cmp
sub
cmp
inc
push
cmp
lods
out
int3
test
mov
sarb
mov
mov
sub
lods
mov
mov
sti
xor
in
pop
xor
icebp
out
mov
add
mov
pop
aam
push
xchg
add
cmpsl
fsts
repz
mov
mov
sub
mov
cwtl
les
mov
push
js
ret
pop
sti
xlat
and
aam
aad
lcall
xchg
cltd
bound
imulb
data16
sbb
dec
shl
scas
aad
jo
mov
jecxz
mov
jno
inc
push
add
loopne
xchg
inc
lcall
adc
adc
cmp
test
pushf
daa
sbb
mov
lods
adc
mov
mov
cs
push
mov
inc
pop
sbb
cmpsl
sbb
int
fcmovb
enter
mov
jne
and
add
jno
push
mov
fdiv
test
mov
scas
dec
sarl
in
push
add
inc
andb
movsb
mov
in
cmpsb
xor
xchg
rcrb
pop
jl
sahf
push
inc
jne
mov
add
dec
cmp
clc
and
mov
fadds
inc
inc
hlt
push
add
push
adcl
inc
sub
sub
push
and
hlt
in
daa
fwait
jb
and
mov
sbb
xor
adc
stos
and
dec
cmpsl
cmpsl
fldl
xor
xor
sub
shr
cld
mov
mov
nop
mov
mov
ja
popf
sub
orl
cmp
daa
iret
inc
mov
rclb
ja
cmp
and
dec
cwtl
dec
sbb
or
pop
dec
jno
aad
cmpsb
test
out
es
int3
divl
mov
inc
mov
sub
mov
scas
in
js
pop
add
fadd
in
movsw
xor
inc
fstps
xor
lock
movsb
pop
mov
test
inc
in
adc
xchg
mov
in
jb
out
sahf
and
push
dec
nop
adc
or
fcmovb
sub
mov
mov
test
or
movb
iret
out
je
pop
or
adc
pop
dec
cmp
lds
mov
dec
mov
mov
dec
js
pusha
jmp
xlat
dec
mov
xor
push
je
xchg
add
mov
adc
or
inc
insb
imul
sahf
pop
sub
fdivrs
nop
cli
xchg
cmp
xchg
mov
popf
pop
or
jecxz
adc
and
popa
add
les
inc
rcrl
sbb
adc
jp
sub
outsl
mov
or
pop
repnz
xchg
icebp
xchg
push
jmp
dec
gs
xor
sbb
xor
iret
lahf
out
inc
in
xchg
int
loope
add
cmp
cmp
and
cmp
push
jb
push
imull
movsl
push
clc
test
push
cmp
mov
in
mov
stos
fisttps
adc
lret
lock
repnz
add
imul
in
inc
or
jg
jne
inc
fcoml
pop
jle
pop
cmp
add
or
fcomp
push
scas
dec
je
sbb
lret
mov
popa
dec
frstor
roll
xchg
xchg
sbb
and
cli
daa
data16
lea
and
push
in
mov
or
push
adcb
or
out
aas
out
aaa
leave
sbb
adc
decw
stos
jp
data16
stc
add
sub
repnz
ror
out
push
xor
lret
sub
mov
mov
fisubrl
faddl
addb
popf
aad
cmp
daa
fcom
fwait
sub
mov
cli
cld
mov
xorl
mov
test
int3
and
mov
shll
ja
adc
clc
pop
fmull
ja
pop
mov
jnp
and
sub
insl
lcall
sub
cmp
inc
in
pop
inc
pushf
aaa
jno
out
pop
divb
test
ljmp
punpcklbw
or
jmp
mov
xor
jg
popa
cmp
jae
cmc
nop
mov
loop
fwait
lcall
mov
mov
mov
pop
in
nop
push
push
js
jmp
fstps
sub
adc
pusha
mov
jg
insl
test
mov
and
icebp
insl
mov
in
mov
sbb
loopne
mov
bound
mov
in
fsubl
test
or
pop
pusha
outsb
xchg
cmp
mov
xorl
lds
ds
mov
pushf
sbb
addr16
pushf
xchg
mov
int
mov
mov
add
jp
dec
je
fistpll
sub
fidivrl
iret
mov
jl
loope
mov
pop
pop
and
lock
add
or
pop
push
cmp
outsb
mov
aam
xchg
or
rol
push
push
mov
cwtl
pop
incb
xor
xor
fstps
lret
dec
lret
movb
in
mov
in
daa
rcr
iret
das
xor
loopne
ljmp
mov
mov
es
into
scas
imull
jne
notl
in
xor
icebp
addr16
loopne
insb
sarb
into
xor
aam
out
xchg
clc
clc
adc
mov
mov
lock
jae
jo
rcrb
dec
mov
scas
jo
or
jae
jl,pt
push
mov
cs
xor
les
int
mov
movsb
fadd
pop
stc
dec
push
pop
push
pop
push
add
xchg
cmpsl
xor
inc
jb
sub
mov
or
jnp
add
bt
fucomp
jge
lds
xor
je
out
cmp
add
dec
and
mov
sbb
mov
sub
je
inc
lea
adc
xchg
test
and
int
jb
and
xchg
inc
lods
push
jge
pushf
xchg
inc
inc
sub
cmpl
add
sbb
cltd
add
daa
push
out
lea
arpl
or
lcall
aad
mov
insl
cltd
faddp
fwait
nop
fstpt
cmp
aaa
add
mov
rcrl
jge
dec
mov
fs
dec
imul
xor
sub
pop
lret
out
movsb
xchg
cmpl
pop
pop
push
push
movsl
ret
mov
push
jmp
push
mov
cld
mov
cmc
idivl
into
icebp
sub
loop
and
jbe
rcl
imulb
cmp
add
xor
dec
cs
fistpll
mov
insb
and
loope
xor
jmp
xor
arpl
fcoml
int
adc
xor
adc
out
xlat
fadd
insb
lea
mov
ds
cmp
xchg
lret
mov
setno
sbb
rcrb
and
mov
sbb
test
ja
sbb
pop
jl
push
xor
add
xor
mov
mov
mov
mov
push
mov
lret
daa
test
dec
sub
sbb
adc
aad
jb
in
push
add
lret
enter
mov
push
dec
loop
ficoml
dec
or
dec
cmp
pop
movsl
cmp
dec
inc
push
testl
out
movsb
cmp
sbb
pop
icebp
clc
cmp
cmp
lahf
mov
dec
pop
out
add
inc
jge
xor
test
ret
pop
sub
mov
or
mov
test
sbb
adc
popa
xor
pop
fs
sahf
mov
popf
sub
outsb
jecxz
popa
loopne
mov
cmp
lret
inc
fildl
pop
repz
insl
fsubrs
or
scas
int3
nop
add
or
lea
js
mov
push
jle
xor
in
ds
mov
fnstenv
sub
mov
sti
lods
jbe
test
mov
add
stos
ret
mov
push
mov
shrl
shr
mov
adc
aam
mov
clc
stos
jbe
and
cmpl
cld
xor
fistl
add
insb
push
pop
roll
lds
ds
mov
dec
mov
ljmp
pop
sub
mov
daa
push
lods
roll
js
push
sub
jb
dec
cld
arpl
lcall
lahf
mov
sbb
mul
dec
mov
mov
fwait
cltd
add
xchg
and
orl
into
sbb
dec
movsb
xlat
pop
add
jle
mov
jge
jge
clc
nop
cltd
xor
xchg
mov
mov
inc
inc
call
out
inc
rorl
and
movsb
in
push
mov
mov
jae
or
mov
jge
mov
jge
cmpsb
jge
dec
scas
adc
movsl
lcall
fwait
test
push
rorl
sub
sub
xor
push
xor
inc
and
leave
movsl
cltd
mov
scas
push
ljmp
roll
lret
pushf
xchg
int3
cmp
daa
js
pop
push
movsl
mov
orb
cwtl
xlat
dec
or
jmp
cmp
adc
xchg
jp
push
mov
ror
or
pop
das
adc
repnz
inc
lret
inc
add
ljmp
mov
mov
and
jno
dec
sub
dec
fidivs
mov
or
jmp
or
add
pop
xchg
je
cmp
addr16
jp
pusha
scas
xor
lods
add
jns
les
pop
ss
pop
pusha
dec
pop
int3
inc
fwait
sub
inc
imul
push
or
in
inc
adc
aam
xchg
pop
fstpt
or
int
dec
sbb
push
pushf
mov
movsl
add
fwait
inc
cmp
sub
or
mov
ljmp
sub
es
test
dec
mov
add
jno
mov
cmp
add
dec
addr16
cmp
shlb
in
nop
insl
test
mov
inc
sub
inc
jnp
adc
in
push
insl
push
mov
ljmp
push
cmp
lret
rcll
mov
xchg
incb
std
add
inc
shrb
ret
adc
test
aad
rorl
push
lods
inc
inc
js
jge
ret
sbb
aad
test
pop
dec
mov
sub
rcr
jb
pop
movzwl
test
mov
cmp
rcrl
lret
pop
fwait
mov
sub
mov
dec
mov
xor
rorl
xchg
fidivrl
mov
xchg
xor
sarb
lock
add
inc
mov
arpl
mov
add
cmp
scas
jle
mov
int
xor
or
lret
popa
loope
inc
imull
pushf
in
or
movsl
cmp
loop
mov
or
and
adc
cli
pop
test
daa
fwait
sbb
out
xchg
xor
mov
xchg
pop
xor
pop
dec
rcrl
inc
lret
dec
out
iret
outsb
rcll
out
daa
push
push
add
mov
sbb
adcb
xor
scas
mov
enter
sbb
lcall
lods
lcall
fwait
and
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
fsubp
fists
dec
jne
icebp
inc
out
out
or
aas
xchg
scas
mov
and
sub
ret
fldt
in
bound
and
jg
test
sti
pop
dec
stos
xchg
adc
pushf
pop
hlt
rcr
dec
mov
cmp
and
jle
lret
lret
lret
sete
ret
pop
mov
fbld
fwait
stos
dec
movsl
shl
jle
out
call
stos
clc
xchg
pop
adc
lds
outsb
add
mov
fs
jmp
ret
mov
push
aam
repnz
jb
int3
sbb
jo
arpl
mov
inc
out
adc
and
gs
dec
lock
or
lds
sub
stos
cmp
call
icebp
mov
sbb
jge
ljmp
scas
inc
sub
test
mov
inc
sbbl
mov
pop
fidivs
int3
addr16
sbb
addr16
adc
stc
push
cmpb
imul
push
cs
andl
xchg
push
jae
cmc
cmp
push
adc
inc
mov
fmuls
js
or
fcomps
mov
stos
repz
gs
cmc
pop
xchg
adc
inc
xchg
loop
aaa
push
sti
or
nop
xor
out
cmp
stc
mov
lea
xlat
inc
and
xor
mov
sbb
cmp
js
xchg
stos
movsl
add
mov
into
sub
xchg
ret
push
js
hlt
loop
subb
lret
xchg
lea
xchg
cwtl
insb
lea
mov
insl
sbb
pop
dec
xor
jle
ret
inc
and
cmc
out
arpl
pushf
mov
outsl
ljmp
in
jmp
out
add
mov
or
fisubs
inc
and
mov
sub
les
popa
sti
lods
or
lcall
lret
pop
xorb
cmc
add
pop
std
mov
cs
out
adc
pop
lret
sub
prefetcht1
jmp
popa
mov
pusha
mov
push
out
and
insl
cmpsb
cmp
mov
mov
into
mov
in
and
xchg
xchg
mov
xchg
fisttpl
or
lea
mov
push
scas
ljmp
xor
cmp
mov
subl
xchg
outsl
adc
mov
subl
xor
and
outsb
jnp
mov
nop
mov
mov
mov
ret
cmpsb
mov
pop
jl
dec
loop
daa
lea
out
sahf
or
jns
test
sbbl
dec
ret
jb
xor
xchg
mov
jo
nop
jne
inc
rorl
sbb
sub
or
sub
inc
fmul
scas
mov
inc
push
shrb
movsb
add
cmpl
cmp
or
jb
pop
lret
pop
push
dec
or
divb
pushf
or
enter
jl
jg
adc
sub
and
out
push
xchg
jae
mov
or
pop
mov
sub
clc
loope
out
rorb
fwait
pmaxub
xchg
test
xor
mov
ds
sahf
das
push
mov
jae
or
mov
xchg
shrb
repnz
adc
add
inc
xor
gs
shr
lahf
mov
inc
sub
pop
int3
shll
mov
sbb
data16
jge
test
cli
cmp
push
call
mov
sub
divl
xchg
sub
movsl
cmp
sbb
aad
loopne
clc
enter
stc
inc
nop
cmp
mov
add
mov
movb
aam
xor
xor
andb
fidivs
cmp
xchg
mov
fucomi
xchg
in
jae
jbe
scas
scas
mov
loop
movsb
lcall
inc
repz
inc
xchg
aam
aad
subl
insb
inc
push
dec
push
test
dec
lock
or
sub
pop
lds
mov
xor
pop
push
decl
fmull
add
dec
inc
pop
leave
push
push
inc
sbb
inc
jae
jbe
xchg
inc
stos
mov
cltd
adc
inc
mov
addr16
sub
xor
in
mov
out
adc
xor
and
add
push
jge
daa
not
test
push
cmp
dec
push
shrl
loopne
sarb
push
mov
mov
lcall
inc
xor
sti
push
rcrl
pop
adc
mov
scas
adc
xor
ficoml
sbb
popf
stc
add
repz
xor
stc
loopne
pop
bndldx
clc
clc
jno
xor
sbbl
test
dec
cli
into
push
fmull
test
xchg
sub
or
or
mov
xor
jmp
jecxz
mov
out
out
mov
sub
flds
add
adc
int3
int
inc
shll
adc
ja
mov
mov
xor
mov
fdivs
jns
xor
xor
pop
mov
outsl
jae
mov
mov
sub
roll
jno
jno
jmp
daa
mov
cmp
add
mov
mov
addr16
shll
shlb
fsubrl
pop
adc
movsl
stos
mov
shrb
jmp
sbb
cmp
inc
push
leave
push
adcb
popf
and
dec
out
scas
mov
dec
jns
lods
in
lds
mov
mov
mov
sub
popa
cmp
ret
in
shl
cmc
mov
out
movsl
or
adc
adcl
add
mov
cmp
sub
popf
sbb
aad
shl
sub
add
scas
sub
leave
loopne
loope
xchg
inc
push
andb
in
xchg
sub
insb
sub
stc
sbb
imul
outsl
mov
jmp
outsl
dec
adc
xor
sub
mov
and
jecxz
int3
cwtl
hlt
hlt
mov
int3
or
in
jbe
pop
mov
cmp
pop
push
sub
xor
adc
and
lret
ljmp
aam
in
pop
ret
mov
pop
push
mov
pop
pop
mov
dec
aam
cs
add
loope
xchg
mov
cltd
call
insb
dec
imul
cmp
loop
fsubrs
jmp
adc
mov
popl
outsl
sbb
push
push
insl
sbbb
mov
inc
cmp
data16
shll
shrl
sub
mov
stc
cmpsb
or
sub
fnstsw
jo
loope
adc
idiv
shll
les
jae
add
lock
imul
popa
out
test
sahf
pusha
mov
imul
push
bswap
mov
out
imul
push
sub
push
mov
jbe
jecxz
movsl
xorb
jmp
inc
mov
cmp
clc
cli
add
inc
mov
ror
adc
iret
jp
xor
into
out
jle
xchg
xchg
jecxz
dec
or
popa
lcall
jb
pop
shll
sub
jns
or
inc
pop
sbbl
call
adc
sbb
mov
in
cmp
cmc
stc
rolb
notl
int3
or
sub
adc
mov
mov
adc
lods
fwait
and
and
mov
mov
ljmp
sbb
or
mov
and
push
and
loopnew
lods
add
roll
shll
clc
imul
xchg
repnz
xchg
pop
adc
mov
inc
iret
mov
js
shrb
inc
insl
push
xchg
add
xchg
mov
and
dec
jb
push
mov
sub
xor
leave
adc
push
sahf
and
pop
inc
adc
imul
sub
mov
sub
mov
fwait
xlat
or
and
mov
shl
or
fisttpl
xchg
sbb
add
cmp
scas
jmp
pop
iret
push
xor
push
icebp
pusha
ljmp
cmp
mov
push
pop
mov
dec
leave
fisubrs
adc
add
push
stos
pusha
scas
pop
aad
into
pop
ja
and
lods
xchg
or
push
mov
xchg
jmp
dec
xor
lds
jmp
test
inc
mov
outsl
fsubr
mov
push
addr16
ds
mov
or
popa
subb
push
rcrl
xlat
mov
cmpl
cmc
dec
sub
pop
sub
push
sbb
lods
sahf
xchg
mov
lret
ljmp
or
add
xor
divl
jmp
out
push
ljmp
ficoms
cmp
mov
xchg
or
mov
mov
or
push
pop
mov
lcall
es
addl
pop
pop
outsl
jmp
inc
mov
sub
cld
inc
into
jb
add
xor
insb
pop
lret
inc
cmp
dec
adc
lds
push
xchg
push
dec
xor
loopne
sub
push
xchg
mov
adc
dec
in
fldl
jbe
pop
pop
cmovle
adc
cwtl
sbb
or
sbb
pushf
pop
stos
inc
jno
pop
xor
testb
xchg
mov
sub
roll
icebp
mov
add
fsubrp
in
xor
pop
cs
addr16
int3
or
fst
arpl
clc
lret
int
or
cmpsb
or
ret
add
jg
lret
std
and
fwait
xchg
sbb
sysret
sarb
into
push
mov
loopne
aaa
bound
nop
jl
out
jae
bound
nop
pop
add
stc
adc
roll
push
out
mov
andl
mov
nop
cmpsl
stos
testb
cmp
and
pop
mov
mov
xlat
push
syscall
in
addr16
jmp
cmpsb
fimull
in
out
xor
dec
add
das
dec
lods
out
into
mov
pushf
clc
dec
shlw
stos
lods
movsl
lahf
fwait
mov
add
loopne
gs
adc
xlat
lret
and
xchg
pop
mov
insb
cli
or
iret
and
lret
mov
lret
dec
mov
xchg
cltd
fs
add
xor
insb
repnz
outsb
or
push
lcall
pop
leave
and
fnstsw
xchg
xor
loope
adcl
cmp
or
ds
xor
sbb
subb
push
xor
fdivr
or
mov
outsb
xlat
or
cmp
push
xchg
add
mov
dec
fwait
xlat
xchg
outsl
and
ja
jae
xchg
bound
xchg
test
push
xlat
sub
int
scas
fcmovnu
lahf
mov
mov
ljmp
mov
mov
mov
sbb
out
fs
mov
insb
push
xor
push
ljmp
push
add
repnz
lea
mov
add
and
xor
fdivs
stos
out
fdivrl
or
mov
mov
mov
push
push
divb
movsb
adc
dec
add
aaa
push
clc
incb
icebp
xchg
lds
mov
sbb
call
cmpsl
icebp
mov
pop
jg
out
stc
lret
cmpsb
test
adc
in
bound
dec
mov
push
insb
xchg
stc
sbb
pop
iret
add
push
pop
sub
test
mov
inc
cmpsl
cltd
xor
jmp
inc
gs
lds
cltd
leave
and
ja
and
popa
cmpsb
dec
or
adc
push
adc
jecxz
dec
jp
insl
mov
mov
jl
cltd
repnz
dec
bsf
push
add
mov
dec
scas
lods
mov
gs
and
sbb
lret
sub
sbb
xchg
orl
sbbb
jns
sbb
sahf
dec
out
xchg
jnp
mov
outsl
les
fdivr
js
xor
sbb
cmp
shlb
add
cmp
jb
in
push
mov
ljmp
push
test
dec
sbb
cltd
adc
dec
movsb
aad
adc
pushf
mov
sub
in
or
and
sub
pop
push
notl
nop
jg
lahf
movsl
enter
mov
lahf
fdiv
fidivrl
push
jecxz
in
jae
sbb
fxch
andl
xor
mov
cmp
pop
je
lea
add
mov
pop
stos
jle
xchg
in
pop
pop
sbb
or
push
pop
or
xorl
sub
jne
adc
cld
mov
inc
dec
xchg
xor
rolb
mov
test
hlt
test
push
incb
pop
lds
add
je
xchg
adc
xchg
mov
push
mov
mov
stc
mov
aad
jne
inc
cwtl
jnp
inc
dec
push
repz
mov
test
push
enter
push
in
adc
mov
or
inc
pop
mov
xchg
stos
ss
and
enter
clc
add
hlt
inc
leave
popl
cmp
sbb
enter
jo
mov
loop
cld
lock
mov
or
jmp
icebp
ljmp
xchg
cwtl
mov
push
add
cmp
mov
pop
pop
cmp
cmpsl
jmp
aas
mov
popa
fmulp
ss
push
jbe
and
ljmp
call
sub
lock
cmp
push
mov
fadds
cs
mov
jnp
inc
dec
fisttpll
mov
push
lods
ja
pop
adc
sbb
scas
inc
lds
lret
popf
xchg
or
sbb
aaa
xchg
jp
ret
or
ret
mov
pop
and
lret
daa
add
cmpsl
sbb
mov
shll
fdiv
mov
call
jmp
arpl
movsb
sub
mov
jecxz
insl
inc
int
jo
jmp
xchg
movsl
je
scas
divb
mov
push
xor
idivb
sbb
sbb
sub
pop
adc
push
test
cltd
cwtl
mov
cmp
cs
imul
mov
cs
pusha
pop
jg
jp
mov
inc
jo
sbb
sar
push
cmp
sub
inc
sahf
pusha
mov
aad
mov
outsl
lods
mov
xchg
shl
out
sub
sub
mov
inc
inc
rcrl
and
insb
adc
scas
aad
or
xlat
sbb
push
add
dec
mov
in
cmp
rcrb
cltd
pop
dec
daa
dec
jl
ds
mov
inc
push
dec
inc
mov
jo
shlb
hlt
cmp
idivl
gs
lahf
push
cmp
hlt
or
and
dec
testl
mov
jge
aas
inc
mov
mov
inc
add
mov
dec
fcoms
outsl
leave
call
ljmp
outsl
or
mov
xor
dec
mov
insb
std
adc
outsl
mov
add
lds
mov
call
aad
push
pop
pop
mulb
push
add
mov
pop
xchg
popf
push
sub
xor
out
pop
mov
sub
fwait
es
loop
lods
fucomip
push
idivb
lret
outsl
or
mov
cmp
sbb
subb
xor
popa
mov
push
in
lcall
test
pop
xor
pop
clc
loop
add
insl
mov
pop
test
mov
push
scas
sbb
call
push
inc
cmp
out
inc
pop
cmc
ljmp
jecxz
cmpsl
jnp
subb
or
xor
mov
incl
xchg
ret
lods
push
sbb
test
in
push
out
ficoml
movsl
sub
dec
mov
dec
loopne
jns
or
pop
movsl
leave
pop
sub
popa
iret
cmp
inc
ret
adc
decl
testb
stos
bound
push
sub
push
push
or
lcall
fsubl
in
push
sbbl
addr16
mov
push
mov
jecxz
xchg
sbb
loope
mov
mov
or
pop
lret
outsl
jecxz
xchg
sbb
jecxz
scas
xlat
dec
dec
inc
stos
lods
add
aaa
mov
test
repnz
cmpsl
leave
in
inc
test
fwait
inc
cmpsb
pop
icebp
mov
mov
les
dec
xchg
push
lods
pusha
into
xchg
inc
jmp
ds
iret
sub
push
xor
popf
sbb
out
push
das
mov
push
xor
nop
adcb
xchg
mov
mov
pop
mov
cmp
test
bound
dec
jno
decl
hlt
dec
mov
shrb
adc
loopne
idivb
xchg
mov
dec
movsl
loop
lods
dec
ror
xchg
mov
add
push
pusha
xor
xchg
push
inc
mov
xorl
scas
mov
fidivs
adc
cwtl
cli
or
mov
inc
xlat
shl
in
insb
dec
jge
mov
cld
mov
cmp
adc
jge
and
add
or
cmpsl
out
jg
loope
cmp
inc
push
into
or
jp
scas
inc
pop
mov
cmp
inc
je
sbb
mov
movsb
push
and
xor
pop
clc
ret
in
enter
bound
cltd
jne
xchg
sahf
sti
mov
lods
std
jmp
sub
or
hlt
in
in
adc
cli
stos
aas
mov
or
lea
mov
xchg
adc
jmp
xor
or
pop
inc
popf
pusha
xor
xorl
pop
mov
ret
sti
sub
inc
arpl
enter
mov
mov
mov
pop
xchg
adc
or
jl
ss
cmp
pop
popa
jecxz
sarb
cmp
ficomps
sbb
dec
mov
sbb
mov
jb
aas
push
and
fdivl
in
pop
aaa
xor
cld
lea
and
subl
and
add
inc
fstps
xor
mov
int
push
sub
mov
sub
out
scas
pop
nop
push
roll
sub
addr16
sbb
movsl
test
subb
fsubrp
popf
jb
push
mov
lcall
or
and
pop
fistps
sbb
sbb
xchg
add
ja
sub
shr
rcl
and
lahf
leave
jbe
leave
cwtl
test
xor
pop
add
lods
test
mov
call
ds
pop
ret
and
das
add
push
enter
flds
inc
pushf
adc
aad
mov
enter
movsb
out
ljmp
push
xor
cmpsl
fs
push
dec
pusha
cmpsb
adc
outsb
js
adc
mov
in
adc
or
ss
out
jp
mov
movsl
mov
dec
cld
loope
ret
movsb
call
cmp
fldt
lea
cmp
sub
cld
xchg
jmp
out
fsubrs
xchg
out
fwait
aad
or
out
sub
fcmovnb
in
nopl
stc
xor
loope
insl
clc
aas
cmp
into
popf
cs
fs
or
orl
mov
sbb
shlb
sub
daa
sti
adc
push
push
mov
push
xor
shrb
mov
push
xchg
insl
sub
pop
fcompl
push
mov
test
add
mov
push
mov
sbb
add
rorl
das
xor
clc
xchg
sub
mov
clc
js
popa
sbb
imul
pop
push
popf
lods
push
mov
fs
jne
lcall
cmp
ret
rorb
sub
xchg
mov
xchg
jmp
pusha
sub
push
bound
inc
es
mov
cmp
push
in
les
mov
pusha
push
add
mov
ljmp
pushf
out
cwtl
jbe
mov
cmp
notl
fdivrl
sbb
jns
xor
jge
hlt
jmp
and
fs
and
shrl
nop
add
enter
ret
rcll
div
cmp
mov
pop
repnz
addr16
mov
popf
sti
sarl
cmc
ds
xor
push
mov
jnp
dec
mov
or
movsb
lahf
cmc
xchg
ret
xchg
out
popa
inc
enter
mov
xchg
and
xchg
outsb
fsubrs
das
xchg
dec
pop
mov
outsb
pop
sarb
xchg
loop
jae
sbb
test
xor
mov
or
rcrb
xor
sub
lea
cwtl
jle
fbld
popf
lods
sub
sub
aam
aas
cmpb
pop
mov
scas
sbb
jmp
aaa
pop
sbb
cmpsb
adc
mov
popf
mov
fcoms
scas
cmp
insb
js
pop
mov
outsb
cltd
cli
ret
mov
inc
mov
fistpll
mov
fmul
lret
mov
inc
movsb
repnz
xchg
push
repz
aaa
xchg
gs
popa
jmp
roll
test
mov
ja
daa
mov
xlat
das
fs
dec
repnz
mov
and
mov
filds
ds
xor
test
sbb
xor
mov
dec
cmpsl
fs
cmp
mov
mov
inc
mov
xor
insl
sbb
arpl
or
inc
rdmsr
dec
fldl2t
push
iret
out
jp
and
test
cmp
bound
lock
stos
lock
jp
popa
mov
lods
and
jp
mov
adc
movsb
lods
or
rolb
inc
pop
fiadds
push
adc
pushf
mov
add
xor
leave
pop
cmp
iret
or
xchg
jmp
js
jno
sub
xor
and
int
out
mov
jne
lret
test
mov
xchg
cmc
fcomip
mov
loope
sbb
inc
lret
into
sahf
jno
xchg
jae
dec
lahf
or
adc
jmp
sbb
push
cld
out
sbb
mov
aad
fidivrl
fsubr
sbb
inc
push
inc
add
shll
mov
jne
dec
jmp
add
test
and
push
lcall
bound
or
pop
cld
jno
dec
sbb
jb
dec
jmp
loop
in
stos
ret
cmp
sbb
jnp
push
lret
pushf
mov
rcrb
pop
loop
movsbl
xchg
jl
outsl
push
cli
stos
add
insl
scas
mov
hlt
sub
int3
lods
test
mov
sub
sahf
and
xor
mov
in
mov
inc
jns
xorl
into
and
mov
pop
cmp
jp
loope
cwtl
test
sbb
jno
cmp
sbb
outsl
pop
loope
ds
inc
stos
push
or
cmp
jge
lahf
sahf
push
mov
js
jns
movsl
dec
ljmp
hlt
andl
mov
sbb
mov
mov
inc
out
pop
sbb
xchg
lock
sti
jo
xor
push
aas
int
xlat
mov
sub
inc
in
mov
jno
sub
dec
push
dec
mov
push
dec
lahf
test
add
push
cmp
imul
ds
adc
scas
test
pop
out
int3
arpl
push
and
popf
mov
ja
out
incb
inc
repz
lahf
test
add
or
mov
push
or
sub
xchg
out
jno
call
imul
in
xchg
call
inc
cmp
lret
mov
push
sbb
adc
mov
subl
adc
and
dec
fdivs
daa
mov
push
lods
frstor
ror
cmc
dec
movsl
adc
add
sub
push
nop
cmp
call
test
push
in
sub
adc
xchg
loopne
cmpsl
inc
jle
mov
cld
faddl
pop
cmp
icebp
imul
fs
and
scas
inc
call
out
aaa
lock
xorl
xchg
sarl
hlt
push
nop
stc
pop
push
push
inc
mov
ss
arpl
sbb
scas
test
mov
outsl
stos
and
mov
dec
enter
sti
vpminsw
mov
je
in
stos
jge
outsl
inc
loopne
in
cld
push
and
repz
mov
dec
shll
or
fwait
adc
mov
ss
push
daa
cli
xor
clc
jo
das
and
jb
jmp
insb
sbb
js
push
lock
ljmp
sbb
fisttpl
nop
iret
add
int3
xchg
cmpsl
jo
pop
pop
addb
add
fnstsw
mov
pop
pop
scas
js
aam
rcrl
jle
xor
mov
shll
jge
dec
cmp
ljmp
aaa
icebp
xor
sahf
xchg
jge
push
ja
aas
sbb
add
or
mov
mov
cltd
jmp
and
jne
fincstp
cmp
push
shlb
pop
push
jmp
fwait
xchg
adc
dec
fidivrl
insb
into
mov
gs
loop
aas
xor
stos
leave
mov
sbb
dec
cmp
inc
cmp
xchg
pop
jge
push
xchg
js
jl
enter
nop
shl
outsl
inc
mov
aaa
cmp
stc
or
in
push
and
insl
push
cld
xor
xchg
mov
popf
push
movb
cwtl
notb
sub
mov
jo
push
mov
pop
into
push
xchg
ret
loop
mov
add
lods
clc
and
aad
int3
jmp
hlt
dec
dec
imul
insb
xor
add
orl
lret
lahf
jp
mov
mov
cmp
fs
mov
std
js
jle
xchg
jl
dec
jge
jne
adc
mov
sti
dec
fildl
sub
sbb
popa
sbb
mov
aas
adc
mov
mul
push
xchg
popf
inc
mov
xchg
and
xchg
nop
cli
mov
and
repz
scas
ficomps
sub
jg
in
sbb
sub
jb
data16
loope
push
inc
pop
adc
xor
or
mov
xor
insl
add
test
mov
orb
mov
es
sbb
bound
jno
imul
cmpsb
int
xchg
pusha
xchg
xor
jge
mov
ja
iret
aad
dec
shll
mov
out
mov
and
push
test
jl
and
out
out
arpl
popa
xchg
mov
aaa
out
sbbb
loope
mov
xor
cmp
cli
out
push
push
xchg
cmp
mov
outsb
lds
jp
xchg
mov
insl
mov
scas
pop
outsb
cmp
iret
xchg
mov
ljmp
int3
andl
lods
inc
mov
or
lock
aaa
inc
dec
jle
mov
dec
mov
mov
stos
rcrl
out
xlat
jb
xchg
dec
cltd
movsl
mov
xchg
add
shrb
iret
lret
add
icebp
lret
xor
jecxz
aad
mov
cmpsl
push
fisubrs
in
add
inc
add
pop
shrb
shll
sub
icebp
idivb
lds
aaa
loope
push
cltd
in
sahf
adc
mov
out
es
repnz
xchg
in
xor
repz
frstor
roll
fwait
rclb
movsl
or
enter
push
aad
test
adc
cld
jns
cmp
and
dec
push
fistps
loop
xchg
mov
xor
mov
xchg
sbb
repnz
mov
push
rcl
lret
push
dec
push
rclb
push
jmp
pop
mov
pushf
sarb
xchg
or
dec
mov
mov
sahf
mov
sub
dec
loop
movsb
cmp
sbb
jne
pop
sbb
out
add
add
aaa
rolb
das
int3
icebp
xchg
subl
jmp
scas
jge
flds
pop
rorb
inc
insb
ss
jbe
jne
jno
outsb
in
in
in
push
insb
lds
adc
negl
movsb
insl
dec
mov
lds
dec
outsb
mov
and
adc
dec
mov
inc
cmp
mov
jl
jnp
jne
mov
in
test
cs
fisubrl
test
stos
cmc
jb
in
out
mov
insl
sub
push
out
dec
sub
rcrb
sub
andb
in
push
cmp
xlat
adc
jle
mulps
sub
xorl
adc
jnp
loop
aas
popa
icebp
add
out
adc
les
test
xchg
and
nop
sbb
into
cld
shlb
ficompl
test
xchg
cmp
mov
cmp
add
xchg
mov
sbb
cmp
mov
ss
pop
popa
push
or
cmp
jp
and
rcl
div
sbb
sub
jmp
sub
insb
xorl
fisubrl
scas
lock
rclb
add
sub
xor
xchg
jbe
inc
js
movsl
push
fsubp
xor
dec
mov
and
jp
js
dec
inc
jle
xor
in
mov
cwtl
mov
dec
push
addr16
aad
pop
lret
iret
iret
xor
subb
pusha
fisubs
inc
mov
decl
xor
fldcw
std
or
jmp
xchg
scas
jge
loopne
mov
mov
int3
cs
sbb
test
mov
mov
mov
sbb
into
call
jecxz
push
cmp
lock
or
lds
sub
pop
data16
cli
sub
dec
arpl
shrl
test
and
mov
test
in
inc
dec
fdivl
sbb
mov
addb
out
out
fsubrl
icebp
jecxz
insb
in
and
fists
lcall
out
xlat
mov
and
push
inc
pushf
sarb
sub
push
cmp
mov
aaa
xor
fsubp
incl
mov
cmp
pop
xchg
xchg
mov
pop
adc
mov
sahf
pop
jecxz
shrl
nop
push
dec
mov
scas
cmpsl
adcb
or
icebp
cmp
push
cmc
fdivrl
xor
cmpsl
cltd
adc
inc
gs
xchg
jne
mov
gs
and
inc
jl
push
dec
sbb
in
lods
cmp
dec
adc
enter
leave
mov
repz
inc
jb
xchg
rcr
inc
pop
popf
mov
test
jle
icebp
mov
test
adc
jp
sti
cmp
aam
insl
mov
dec
xor
or
pop
xchg
sbb
call
inc
int
or
hlt
cmp
ret
jno
insl
mov
imul
xor
mov
je
xchg
xlat
add
stos
xchg
stc
xchg
jbe
lcall
sub
pop
addr16
sarb
xchg
adc
js
sbb
mov
push
xchg
push
or
aaa
mov
inc
shrb
mov
push
cmpl
jbe
out
divb
and
jmp
clc
test
jns
pop
mov
push
int
inc
fldt
lret
scas
loope
jno
sbb
jae
int
and
adc
dec
pop
mov
stc
inc
xor
and
scas
lods
inc
and
mov
sbb
sbb
test
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
bound
bound
pop
bound
or
iret
lods
push
lret
cmp
xor
dec
lock
ret
adc
stos
xor
les
movl
mov
jbe
jne
cmp
mov
cld
leave
xchg
loope
xorl
addb
pop
jnp
aam
sub
in
push
add
or
repnz
fildll
push
xchg
jae
shld
cmp
ret
mov
adc
xor
jne
popa
pop
loope
xor
test
dec
inc
ljmp
cs
mov
in
inc
dec
shrl
pop
or
sbb
mov
test
mov
mov
add
adc
jle
ror
xor
jae
mov
cmpsb
ffreep
imul
mov
insl
ja
imul
push
lahf
push
jae
sub
adc
gs
mov
sub
push
ficompl
fnstcw
sahf
jns
xchg
fistl
and
mov
mov
or
mov
mov
jne
inc
inc
lods
mov
sub
push
dec
xchg
cmp
push
lcall
xor
cmp
adc
jo
inc
mov
rcrb
testl
sub
push
mov
popa
pop
jne
out
mov
adc
xor
arpl
lret
lods
cmp
fisubrl
outsl
push
jnp
push
cli
jno
xchg
push
ljmp
ss
int
or
mov
loope
mov
xor
in
movsl
stc
sub
les
dec
adc
add
outsb
cltd
fnstcw
mov
mov
clc
inc
sub
repz
cwtl
scas
sbb
lea
and
iret
mov
mov
cmp
cli
or
loopne
pop
fldenv
inc
sbb
push
cmp
add
dec
add
mov
adc
insl
cmp
xlat
bound
dec
ds
push
cld
or
adc
push
mov
int3
jo
gs
mov
lret
leave
sub
xchg
loop
stos
xchg
jmp
jmp
cwtl
and
mov
addb
call
mov
push
ljmp
xchg
xor
xor
scas
jo
jge
mov
gs
inc
lds
popa
pop
jo
cmpsb
cmp
xor
pop
xchg
in
adc
test
mov
sti
int3
mov
outsb
sub
pop
mov
test
adc
imul
int3
aas
popf
shlb
mov
mov
sarb
jo
mov
aad
xor
adc
push
hlt
fisttps
add
jge
in
arpl
in
subl
outsb
lcall
push
inc
sbb
lret
scas
cli
movl
imul
stc
outsb
ljmp
lahf
jl
ss
mov
sar
push
xor
add
sub
add
pop
aam
pop
sub
add
xor
dec
jne
inc
dec
ret
inc
aaa
and
jp
pop
divl
xor
in
pop
inc
icebp
inc
test
jl
push
mov
cmp
push
je
adc
dec
enter
sbb
mov
sti
pop
fimuls
lret
fwait
sbb
push
xchg
jnp
out
adc
aas
xchg
loope
sub
icebp
les
movsl
ds
imul
adc
fwait
out
aam
and
mov
pop
pop
add
repnz
jno
push
inc
pushw
cmp
jge
out
dec
adc
mov
sbb
sbb
or
ljmp
sbb
jmp
fistpll
ja
in
fmuls
into
testl
les
rorl
stos
testl
add
int
jg
mov
xchg
mov
dec
xlat
inc
repz
int3
in
jbe
data16
mov
sarl
shll
ds
push
fwait
mov
push
jle
sti
imul
or
jg
add
notb
aad
aad
dec
mov
add
pop
lahf
mov
decl
adc
repz
mov
jecxz
xchg
mov
movsl
and
dec
inc
adc
inc
adc
xor
sub
ret
shll
mov
xchg
aad
enter
pop
inc
jecxz
dec
iret
xchg
pushf
js
mov
push
out
dec
or
mov
fsubs
mov
dec
and
and
sbb
imul
or
add
adcb
cmp
sub
push
imul
dec
adc
sub
sub
push
jp
adc
sub
arpl
push
aaa
xor
sbbb
dec
and
push
push
pop
inc
enter
insl
add
cltd
mov
adc
push
xchg
push
cltd
aam
sub
leave
ljmp
mov
push
xchg
out
js
inc
jl
push
test
loopne
sub
sar
xor
cli
les
inc
loopne
adc
mov
ja
cli
aam
push
in
cmc
pop
jge
call
fucomi
mov
push
popa
xor
dec
jno
sub
add
gs
pop
call
or
dec
sbb
mov
ljmp
mov
xor
jmp
arpl
cmp
ret
add
jmp
int3
jmp
mov
dec
sbb
lahf
stos
idivb
rorl
mov
fildll
leave
push
stos
ret
cltd
cmp
cwtl
mov
lds
jb
mov
sbbb
push
pop
mov
stos
ljmp
stc
js
aas
lahf
rcr
jg
dec
movsb
lret
ja
xlat
pop
or
ja
jl
lcall
mov
mov
adc
imul
fildl
push
inc
mov
rcrl
lods
or
inc
arpl
jne
mov
dec
or
push
cmc
lcall
lea
mov
lds
mov
cmp
mull
je
inc
mov
mov
push
sbb
mov
pop
inc
push
rcll
sbb
add
or
out
dec
insl
loopne
daa
subb
iret
inc
mov
xchg
outsb
push
test
loopne
xchg
add
insb
popa
dec
mov
loopne
sub
dec
mov
imul
adc
fiadds
sarb
in
pop
dec
dec
rcrl
adc
and
xchg
sbb
mov
sbb
aas
pushf
out
sti
pop
sbb
cmpsl
add
cwtl
stos
ficomps
xlat
jae
outsl
push
mov
aas
ret
adc
in
cmpsl
sub
inc
test
jae
outsb
lahf
dec
lds
fisubrl
xchg
inc
inc
inc
xchg
inc
jl
xor
sbb
dec
sub
or
lods
pop
clc
push
add
xor
pop
cmp
out
jne
adc
push
cs
and
mov
inc
out
inc
inc
push
or
jae
and
xchg
xor
cli
ret
lret
jb
add
push
inc
add
and
lds
jnp
vzeroall
cmpsb
inc
push
mov
push
in
inc
jecxz
xor
xchg
push
lcall
mov
xlat
pop
or
jns
out
shrl
movl
jb
push
adc
adc
ds
loopne
lahf
push
sahf
pop
adc
mov
aas
subb
xor
test
mov
mov
outsl
hlt
dec
pop
push
jecxz
lret
cltd
daa
jnp
inc
lods
sbb
inc
outsl
dec
mov
je
rorb
push
or
sahf
ljmp
ds
and
adc
pop
in
sbb
cmc
aad
add
aam
mov
outsb
mov
sbb
push
leave
icebp
jl
scas
jge
mov
dec
lds
inc
ficoms
push
cmp
pop
pop
mov
nop
jbe
daa
imul
fdivl
ret
pop
sub
jns
sub
std
popl
inc
iret
repnz
out
ss
aam
push
sub
enter
xchg
rcrb
and
pop
and
sbb
mov
loopne
insb
and
lret
pushf
mov
mov
xor
ljmp
mov
mull
repnz
add
les
fs
add
xor
shll
push
xchg
mov
dec
push
pushf
mov
data16
leave
gs
xor
mov
xchg
push
push
movsl
ret
insl
pop
sbb
mov
stc
jnp
sbb
push
fcompp
movsb
jne
cmp
jl
jne
lods
dec
in
mov
mov
arpl
pop
repnz
jb
mov
mov
dec
clc
sub
adc
add
dec
loop
adcl
sub
stos
roll
and
loopne
clc
gs
sbb
in
ret
bound
cmp
pop
or
fnsave
cmp
cmp
jmp
mov
out
jo
ja
xor
pop
pop
test
inc
iret
mov
fidivs
push
xor
sub
and
xchg
in
hlt
stc
imulb
jae
mov
xchg
cmp
clc
repnz
xchg
push
lods
in
add
jle
mov
and
lods
mov
fdivl
les
adc
pmaxub
shr
push
es
adc
sti
data16
jmp
hlt
or
push
xorb
adc
xor
int3
lea
out
adc
add
sti
xchg
cmp
popa
shl
inc
inc
sub
sub
pusha
in
scas
ficompl
lret
fidivrl
test
push
aas
inc
shl
loope
mov
sahf
enter
xor
adc
cmpl
sti
xor
sbb
adc
adc
mov
movsl
jno
cmpb
jecxz
in
dec
out
aas
cmc
mov
in
das
jmp
jmp
pop
mov
xor
pop
dec
xor
add
mov
les
jp
in
loop
mov
scas
jg
xchg
dec
dec
inc
aam
sbb
add
icebp
add
push
paddb
mov
mov
sub
ret
andl
add
xchg
jecxz
inc
filds
add
mov
pop
cmp
push
and
xrstor
xchg
mov
fs
je
repz
lahf
lcall
jmp
dec
mov
inc
push
jecxz
loope
and
mov
into
fisubrl
cmp
ret
fcomi
adc
mov
jmp
or
sbb
dec
sub
mov
idiv
stc
scas
cmp
stc
inc
test
pop
jbe
int3
and
repnz
int3
mov
push
pusha
push
mov
dec
add
xchg
repz
sarb
aam
and
adc
inc
adc
push
and
inc
lods
jg
into
adc
insl
mov
jb
mov
test
shlb
push
adc
xchg
inc
hlt
push
mov
outsb
rclb
sarb
push
mov
cmpsb
in
out
sti
mov
sbb
mov
cltd
xchg
mov
xchg
rol
or
xor
inc
cltd
cmp
loope
cmpsb
cs
cltd
stc
add
xchg
sti
bound
aad
mov
aas
sbb
push
mov
std
sub
push
fisubl
mov
mov
pop
and
jecxz
mov
repnz
and
popf
xor
lods
jb
fisubrs
cmp
scas
addr16
imulb
ret
mov
or
dec
movsb
sahf
ficomps
nop
jno
xor
scas
andl
jnp
jne
jge
lret
inc
push
cmc
inc
inc
lock
xchg
scas
sbb
iret
inc
jle
repz
sbb
arpl
in
xchg
scas
xchg
aaa
inc
nop
adc
push
jb
inc
mov
addr16
jo
aas
daa
je
and
cltd
cld
sub
scas
movb
mov
mov
dec
rcrb
addr16
stos
fsubrs
push
mov
stc
es
movsl
ds
lret
xlat
push
dec
or
daa
mov
sahf
xor
in
adc
cmpsb
pop
xchg
push
sbb
sbb
xchg
aad
fsubrs
xchg
dec
mov
mov
ljmp
xchg
jge
mov
xchg
pop
sbb
push
call
jb
scas
pop
pop
adc
outsb
sbb
int3
push
dec
repz
test
xchg
mov
aam
jne
leave
adc
cmp
sbb
mov
inc
and
jmp
pop
mov
mov
or
dec
icebp
adc
dec
inc
insl
inc
cmpsl
dec
sub
jle
dec
cmc
xchg
inc
adc
jg
cmp
jl
shrb
pop
push
inc
and
add
std
push
adc
pop
push
xor
pop
loope
sbb
stos
sti
dec
les
xchg
xlat
or
jns
loopne
das
cmp
jp
lahf
leave
gs
dec
mov
out
fstpl
pop
push
xchg
inc
mov
data16
faddp
push
mov
inc
inc
pop
cld
ss
movsl
je
nop
cmp
adc
in
fbld
adc
addl
cld
mov
pop
icebp
push
push
les
in
pop
mov
daa
fmuls
popa
popa
pop
and
cmp
cmp
push
pop
mov
test
inc
icebp
stos
in
lea
decl
mov
shrb
push
data16
fidivs
jl
fisubrl
jp
adc
cmpsb
xor
pop
rorb
xor
dec
aaa
mov
test
cmp
mov
rcll
rcll
int3
jns
xlat
dec
mov
xor
test
mov
fwait
loopne
aaa
sub
or
pop
test
xchg
jle
inc
pop
mov
and
aaa
mov
cmp
movl
fcoms
stos
cld
les
mov
movb
bound
popf
mov
cmp
in
cmp
jle
pusha
push
or
and
in
sbb
sbb
mov
jb
mov
inc
mov
inc
imul
sub
mov
popf
mov
jl
ret
xchg
imul
jnp
xchg
daa
pop
loopne
xor
inc
xchg
xor
xor
jbe
test
dec
aaa
xor
sbb
aas
push
pop
xchg
jp
mov
push
cld
xor
cmp
jg
mov
add
loope
mov
test
mov
sub
incb
cmp
imul
out
je
xor
mov
xchg
fidivrs
pusha
push
inc
lock
lds
xchg
cltd
cmc
jle
xor
aaa
fsts
jl
idivb
adc
mov
lret
dec
or
lret
scas
and
or
nopl
in
es
cmp
adc
cmp
pop
jecxz
pop
fwait
jmp
mov
sub
push
dec
push
repnz
push
cmp
push
inc
xor
shl
sub
cs
in
stos
enter
xchg
or
inc
pushf
repz
enter
add
or
adc
aam
pop
in
jmp
mov
mov
bound
das
in
fwait
xchg
les
push
jne
gs
shl
scas
mov
nop
divl
xchg
fbld
mov
pop
dec
push
push
out
or
loopne
push
jp
push
ljmp
pushf
mov
scas
xor
lock
xor
dec
inc
jmp
add
fstpl
lcall
inc
fimuls
fs
les
fstps
jns
and
in
inc
fdiv
jmp
and
xchg
lret
fst
mov
ds
push
mov
movb
or
dec
mov
fildll
adc
pop
add
push
mov
pushf
push
push
lods
cld
sbb
xchg
in
jl
or
dec
pop
push
mov
and
xor
inc
mov
inc
xor
int
aas
les
mov
and
mov
int3
cmc
pusha
push
lods
mov
stc
mov
xlat
rorb
insb
fwait
adc
dec
cs
xlat
jo
pop
inc
in
push
lahf
mov
ss
add
xor
pop
push
rcll
sahf
cvtpi2ps
das
popf
sbb
xchg
adc
repnz
mov
pop
or
xchg
mov
pop
inc
jae
and
mov
xlat
lahf
addb
test
fildl
adc
mov
or
scas
mov
inc
jle
mov
or
xor
mov
pop
and
test
dec
aas
pop
lahf
int3
xchg
fdivr
js
add
pop
aaa
and
stc
mov
idiv
into
pusha
sub
xchg
sbb
lods
push
mov
outsl
hlt
jae
es
mov
dec
icebp
jae
sahf
movsl
inc
and
in
sub
fst
xchg
adc
jecxz
pop
add
fmul
sbb
cmp
jmp
sub
pop
add
stos
cmp
inc
pop
cmp
mov
lock
adc
jb
sbb
push
inc
pop
xchg
jl
loope
loopne
les
cld
xor
lcall
mov
jle
cmp
jecxz
ret
push
dec
dec
pop
in
xchg
pop
es
xor
jg
stc
xchg
cmp
arpl
data16
lds
sbb
movsb
push
mov
adc
js
imul
mov
popf
add
push
xchg
int3
dec
push
push
mov
xor
and
pop
popf
lods
fwait
ss
mov
pop
arpl
lds
in
orb
nop
jle
adc
cwtl
out
mov
testb
sbb
mov
pop
ss
aaa
or
push
jge
cmpsb
ja
rclb
pusha
rcr
call
and
in
push
or
ret
mov
ss
inc
ficompl
pop
xchg
popa
cmp
lret
mov
popf
aad
and
xor
mov
aad
faddl
int3
lock
xor
inc
pop
lret
aam
add
mov
mov
sub
outsb
mov
pop
iret
fcompp
je
dec
add
pop
loope
and
into
or
mov
leave
adc
outsb
enter
shlb
call
jmp
inc
xchg
popf
push
loope
cmp
mov
adc
outsl
or
repnz
mov
mov
outsl
clc
sti
xor
and
dec
mov
es
iret
push
cs
cmpsl
mov
in
cs
loopne
push
jbe
jns
pop
js
int3
push
mov
cmpsl
inc
pop
xchg
in
cli
out
insb
cmp
cmp
add
in
cltd
pop
cmpsl
daa
pop
xchg
xchg
dec
ds
fsubrl
aaa
mov
loop
daa
popf
push
loope
loopne
sub
sub
xchg
inc
pop
shlb
ja
loope
cmp
mov
add
and
mov
pop
cltd
addr16
outsl
push
mov
dec
roll
ret
int3
dec
cld
add
jae
xchg
popf
jmp
sub
mov
subl
lcall
mov
and
sub
pop
and
out
out
xor
sub
lods
cmc
and
in
jle
pop
sti
repz
fwait
aad
imul
test
movsl
cmp
ss
xor
arpl
in
add
dec
mov
adc
pop
das
rol
pop
int
mov
mov
or
mov
jnp
bt
inc
cmpsb
mov
push
jle
xchg
out
sbb
sub
mov
or
adc
push
and
add
push
jl
pop
in
test
ret
xchg
inc
insb
jne
cltd
jae
nop
dec
scas
xor
das
xor
pop
or
cmpsl
test
mov
xchg
sub
arpl
rorb
mulb
adc
and
mov
mov
sarl
and
pusha
loopne
xor
mov
out
inc
shrl
sbb
lods
add
sahf
add
pop
pop
add
pop
pop
ret
stos
std
jle
leave
push
bound
in
jecxz
cmc
cmc
aas
mov
ret
adc
mov
cmpsb
adcl
add
pop
jne
pusha
jns
lret
lea
dec
and
je
shll
dec
iret
scas
mov
in
mov
ljmp
jecxz
fs
dec
into
scas
jl
xchg
imul
pop
imul
push
cmp
jnp
std
push
stos
jnp
gs
enter
lock
pop
inc
sbb
aas
mov
std
movsl
ds
pop
pop
xchg
pop
push
push
cwtl
lds
cmp
add
lods
leave
in
xor
cs
mov
dec
push
mov
mov
push
dec
popf
fnstenv
ljmp
icebp
push
sahf
test
push
adc
push
inc
mov
sbb
jb
jl
sbbl
add
xchg
dec
push
imul
mov
jbe
jmp
call
pop
out
sub
sarb
xor
pusha
xor
lock
fisubs
int
xor
gs
int
inc
or
inc
and
sti
lock
ja
ss
inc
cld
push
ja
add
sbb
cltd
dec
imul
and
ja
fldenv
imul
dec
aad
adc
lods
das
movsb
das
imul
push
sahf
test
xor
sbbl
fcoms
or
ret
xchg
into
int3
cs
pop
imul
cmp
mov
mov
jecxz
std
test
pop
mov
es
push
jecxz
and
adc
jbe
cltd
push
cmp
loopne
adc
mov
pop
pop
sti
in
push
mov
icebp
test
adc
jge
mov
push
pusha
push
and
cmp
sbb
ds
test
mov
cmp
jge
mov
adc
inc
in
lock
mov
dec
lea
mov
add
lods
pop
xchg
sub
lods
rcll
andb
mov
jmp
repz
adc
and
adc
mov
lock
and
imul
mov
mov
cli
aad
orb
fistps
jecxz
cs
out
sti
loopne
adc
icebp
flds
js
or
add
test
inc
das
outsb
enter
sub
adc
and
sbb
cli
into
loop
ret
mov
sub
fildl
mov
and
sbb
xchg
or
xorl
and
sbb
movsb
outsb
jo
gs
ret
mov
mov
jle
fs
lret
sbb
dec
mov
cmp
lea
jbe
push
add
bound
or
jmp
in
cwtl
add
add
test
dec
outsb
jge
cltd
and
sbb
ret
pop
sub
pop
push
and
outsl
sub
push
xor
xor
sub
ficompl
fdivl
sub
pop
jnp
icebp
sub
nop
jg
sti
jae
pop
jnp
ss
push
cmp
test
xchg
aam
jo
and
sbb
sbb
scas
pusha
or
out
sub
int
test
xchg
rorl
pushf
mov
push
xchg
popf
jg
cld
mov
inc
call
pop
jae
outsb
add
pop
jge
mov
jge
jl
negl
nop
dec
mov
push
xchg
vaddsubps
push
add
imul
jecxz
in
dec
pop
mov
adc
inc
push
adcb
loope
iret
enter
sub
pop
lods
cmp
xchg
xor
mov
push
js
cmp
mov
and
cmpsl
negl
jmp
test
jmp
cmp
sub
shll
cvtdq2ps
fisttps
sbb
cli
jmp
inc
mov
mov
mov
dec
adc
sub
sarb
jp
adc
jne
shlb
cli
divl
fsubl
cmc
inc
pop
nop
les
pop
adc
add
inc
and
or
xor
mov
lock
out
push
pushf
fs
rcrb
mov
jl
mov
sub
aas
into
lea
mov
mov
add
sub
or
jecxz
dec
pop
cmpsl
adc
and
insl
sbb
mov
push
xor
aam
outsl
adc
mov
add
mov
scas
inc
cmp
and
scas
xchg
pop
outsl
or
mov
dec
mov
push
jmp
mov
adc
mov
pop
xchg
and
call
sub
cmpsb
mov
mov
push
inc
aad
dec
mov
or
xchg
movsb
jne
xchg
push
aas
fidivl
data16
push
ss
pop
jnp
fimull
imul
pop
testb
adc
adc
out
in
sarb
aad
adc
jle
jno
lahf
push
fdivl
jno
sbb
imul
xor
enter
sbb
test
mov
or
mov
mov
int3
lahf
popa
dec
inc
movl
pop
xchg
cltd
fcmovnu
aad
loopne
lret
or
cltd
xlat
and
les
inc
ljmp
out
push
cmp
daa
scas
js
test
lods
cltd
mov
es
jne
fidivrl
mov
test
inc
pop
or
mov
outsb
jb
andl
je,pn
cltd
and
mov
mov
aad
mov
inc
and
jle
pushf
inc
jp
in
sarb
jecxz
mov
fisubs
rolb
test
sbb
add
loope
mov
inc
mov
sub
aam
mov
pop
fsubp
dec
aas
ja
xchg
fildl
push
mov
gs
xchg
stos
xchg
push
dec
iret
fsubrs
adc
gs
in
adc
add
rclb
mov
inc
mov
les
sarb
outsb
push
push
add
popa
call
scas
ficoml
cmpsl
jbe
dec
sub
sbb
dec
mov
push
push
int3
mov
cmp
push
jbe
cmp
add
lea
xchg
addb
jne
pusha
lods
or
negl
loope
pop
adc
dec
mov
inc
pop
fisubs
int
pusha
test
fisubrs
fstps
lock
pop
sarb
mov
inc
adc
or
sbb
mov
rep
dec
xor
hlt
pop
in
out
imul
sbb
fnstenv
xchg
jo,pn
inc
dec
adc
inc
xchg
pop
imul
cmp
xchg
pop
sti
je
bound
inc
xor
popa
js
and
push
lds
hlt
jle
inc
push
add
imul
out
push
dec
xor
daa
pop
shll
cmc
fists
sub
mov
rorl
xorb
jno
lea
fdivrs
jb
push
xor
sbbl
fs
xchg
sbb
aad
sub
dec
sub
xlat
test
or
push
ss
andb
xor
cmp
loopne
xor
cltd
push
mull
or
mov
push
scas
inc
enter
push
jno
xor
jg
xchg
test
leave
push
loope
ret
aaa
cmp
in
xchg
fbstp
sub
add
mov
fisttpl
fwait
ret
pop
icebp
out
sbb
test
adc
lahf
testl
lds
lds
int3
aam
out
cli
and
sub
and
mov
imul
xlat
jo
xorb
lods
xchg
aad
movsb
movsb
out
jbe
sar
xchg
pavgw
data16
mov
jne
jle
lock
xchg
notb
pop
and
adc
or
jns
shl
cmpsl
mov
pop
dec
jmp
push
pushf
fidivrs
clc
insb
and
xlat
js
subl
or
movsb
fsubl
in
ja
mov
ss
mov
pop
push
cmp
mov
call
mov
jecxz
mov
fdivrs
add
xchg
jae
test
fs
lret
cli
fucomp
mov
movsl
fwait
fs
iret
movsl
adc
cmp
cmpsb
sarb
jb
outsb
arpl
lret
lods
jge
test
test
dec
mov
in
loop
mov
repnz
adc
pop
lods
xor
pop
xchg
leave
call
xor
stc
mov
jmp
shrl
cmp
inc
pusha
mov
outsl
pushf
pop
daa
add
mov
add
cld
ljmp
scas
or
nop
mov
pop
and
sub
push
mov
bound
mov
mov
int3
jmp
cmpsl
sub
or
cmp
iret
sti
pop
out
push
test
cmp
sti
shrl
insb
fdivrl
cmp
dec
fidivs
rep
push
mov
frstor
mov
outsl
xor
fs
sub
mov
and
xlat
sub
pop
or
mov
lods
shr
mov
fsub
mov
enter
xor
aam
xor
aas
push
scas
adcl
cmp
jp
inc
sub
cmp
mov
xor
int
stc
pop
xchg
in
sbb
aad
mov
cmp
sub
fwait
pop
insl
push
jbe
mov
loop
jo
insb
push
dec
pop
xor
fstps
xchg
pop
mov
push
insl
test
cld
into
rcrb
jbe
call
lret
mov
cmpsb
sub
hlt
sub
dec
jecxz
jg
push
jl
bound
mov
xor
mov
cltd
xor
jp
add
mov
ljmp
cmp
ss
lock
push
leave
jmp
push
add
pusha
pop
xor
fwait
xor
pushf
notb
pushf
stos
sub
mov
movsb
sahf
push
insb
iret
lds
daa
push
xor
adc
xchg
pop
cmp
cmp
xlat
mov
in
push
mov
push
vunpckhpd
ret
mov
lret
rclb
xchg
lods
in
repz
push
xor
jmp
cmc
mov
adc
fdivrl
push
sar
into
aad
xor
ror
mov
scas
pop
leave
mov
adc
xchg
pop
inc
xor
aam
movsl
cmp
mov
sub
adc
sub
cmp
addr16
adc
in
cvtdq2ps
rolb
sbb
jnp
jg
push
and
int3
xor
mov
pop
cmc
adc
bound
es
push
adc
ret
push
mov
outsl
roll
cs
sub
push
int
and
xchg
stc
pop
popf
push
int3
nop
shlb
push
in
mov
push
add
push
add
test
add
clc
into
adc
mov
rcrl
or
cmp
ds
push
cmp
inc
lahf
rcl
movb
jp
dec
mov
add
repnz
pop
in
inc
mov
or
inc
lock
sbb
mov
or
fldcw
lods
jnp
rclb
stc
cmp
pop
sub
sub
dec
loopne
data16
fs
cmp
js
fdivrs
outsb
xchg
mov
ss
or
mov
xchg
and
or
lret
dec
mov
clc
and
scas
push
in
mov
dec
test
in
mov
inc
mov
insb
mov
insl
mov
sbb
stc
or
test
sub
mov
inc
jbe
add
mov
daa
outsl
push
lret
pusha
outsb
in
insl
lcall
push
aas
dec
dec
aaa
jns
pop
pop
fcmovne
adc
add
inc
call
dec
inc
xchg
call
scas
cwtl
outsb
and
popf
clc
xor
loope
or
mov
dec
popa
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
push
xchg
mov
jmp
bound
jle
bound
inc
add
mov
rclb
mov
scas
add
push
in
mov
and
sub
arpl
bound
mov
fisubrs
sahf
sub
jbe
inc
test
int
pop
addr16
imul
push
cmpsl
lahf
xchg
int3
sbb
movsl
leave
gs
lea
sbb
test
aas
xlat
mov
outsl
mov
mov
pop
mov
imul
add
xchg
clc
inc
mov
les
jecxz
mov
inc
mov
mov
jp
xor
jmp
dec
sbb
int
cmc
je
sub
andl
hlt
aad
loopne
or
add
dec
mov
xor
mov
int3
dec
sahf
lods
stos
out
pop
lds
cli
and
add
gs
pop
adc
rorb
je
mov
xchg
ret
mov
adc
pop
loope
xchg
push
sbb
outsb
cmpsl
cmp
cwtl
adc
out
xor
sbbl
clc
pop
add
cli
loope
and
mov
sahf
je
push
rorb
push
enter
out
pop
ja
fisubs
sub
adc
xchg
add
inc
ret
scas
test
sbb
mov
mov
scas
daa
add
pop
stc
jmp
rcll
fdivs
pop
mov
outsb
xor
inc
push
call
dec
adc
cmpsl
mov
ret
fbstp
scas
mov
push
xorb
xor
add
movsb
mov
jl
and
mov
inc
scas
incl
ret
xchg
add
jle
stos
lea
imul
das
add
ss
push
xchg
test
dec
sbb
incb
jle
pop
push
sub
xor
pop
das
mov
repnz
push
mov
or
inc
cld
loope
rcrl
insl
dec
xchg
out
cmp
adc
adc
xchg
arpl
xor
outsb
lahf
nop
out
lods
leave
hlt
je
lods
lret
adc
mov
mov
mov
xchg
cmpsl
decl
or
scas
addr16
cmp
test
popa
ss
inc
pop
imul
inc
jns
mov
cld
push
push
je
dec
sarb
pusha
mov
loope
fisttpl
out
stos
dec
shl
add
push
add
xchg
jle
sahf
jo
call
dec
mov
sub
xor
aam
pop
ljmp
push
push
cmp
call
ss
adc
out
xchg
xor
hlt
test
jmp
mov
push
mov
fnstenv
sub
fsubs
out
in
repnz
fmuls
sti
cli
jo
sub
sahf
nop
sbb
lret
test
aam
pop
movsb
sub
mov
push
or
or
sbb
mov
les
in
cmc
dec
adc
outsb
push
xchg
das
inc
push
cmp
push
test
jl
push
js
jecxz,pt
mov
mov
sub
enter
pop
movsl
push
cmp
ss
or
ljmp
or
dec
data16
fistpll
bound
sahf
xchg
repz
pop
loop
stos
pushf
or
insb
pop
mov
dec
mov
push
pop
cmp
in
js
cmp
pop
ja
shll
les
and
lock
pushl
sub
cld
cli
jmp
loop
scas
add
and
jecxz
inc
cmpsl
jecxz
out
frstor
dec
pop
jne
xchg
dec
andb
or
or
xchg
jnp
lret
push
mov
xchg
and
adcl
out
sahf
mov
mov
xchg
int3
jecxz
adc
pusha
add
maxps
push
loop
fwait
std
call
or
popf
sbb
sub
cmp
addr16
push
data16
mov
in
in
lcall
mov
add
add
test
jl
ret
and
test
mov
mov
and
push
sbb
test
mov
adc
xor
paddusb
out
bound
repz
call
mov
ss
scas
inc
cmp
popf
inc
mov
testb
in
pop
xor
mov
lea
int
lret
mov
sub
sub
pop
sar
mov
pop
stos
jecxz
xor
arpl
mov
roll
stc
or
in
and
mov
cmc
pop
xchg
adc
movsl
adc
mov
aam
adc
les
loop
fisubl
stc
or
fistpl
ljmp
aaa
add
jp
pop
sub
pushf
cmpsb
ja
cmp
fdivl
cmpsl
out
cmpsb
adc
add
cmpsb
fldenv
hlt
xchg
and
mov
pop
test
lock
push
mov
xchg
cmp
mov
adc
inc
ffreep
test
lods
arpl
shl
mov
or
adc
or
fcmovnu
jb
cmp
adc
aas
sub
and
xchg
xor
ds
outsb
add
flds
sub
fisubs
and
jmp
mov
adc
or
lret
ds
push
dec
jle
sbb
cltd
dec
repz
js
inc
add
pop
xor
mov
aas
add
repnz
sub
jne
mov
mov
push
cmc
mov
xor
adc
and
fidivrl
add
shlb
jne
insl
and
xchg
subb
cld
sub
push
sarl
dec
inc
test
imul
fwait
out
outsb
divb
lods
in
lahf
in
inc
repnz
sub
out
xchg
adc
test
push
mov
xlat
in
mov
orl
cs
into
mov
sbbl
xchg
daa
or
lock
xchg
pop
pop
add
ljmp
xchg
push
inc
push
fistpll
push
insl
xchg
and
pop
jns
cmpsl
negb
jmp
rorl
adc
lock
scas
or
add
insb
adc
or
mov
mov
scas
je
dec
push
in
insb
add
xchg
push
sub
xor
dec
and
inc
mov
xor
shrb
push
mov
cltd
adc
test
push
sub
add
xor
out
pop
and
xchg
fwait
out
cmc
mov
movsl
idiv
push
fmull
sbb
inc
pop
push
and
jns
add
push
ds
push
mov
aaa
dec
loope
lods
lods
adc
fcmovu
inc
int3
mov
xlat
inc
pop
stos
dec
mov
mov
sub
sub
push
xor
xchg
push
mov
lahf
xor
lret
int
sub
xchg
dec
fs
mov
mov
in
cmp
jmp
loopne
and
les
test
out
push
rcrb
out
mov
shlb
xchg
xchg
in
push
mov
js
sbb
daa
std
cmpsb
mov
fcoml
mov
pop
lcall
xchg
jle
mov
add
repz
xor
imul
int3
cltd
mov
jecxz
dec
dec
inc
bound
mov
fcomps
add
cmpsl
shrl
fdivrp
xchg
adc
sti
xor
mov
fisubs
lds
arpl
xchg
sbb
mov
insb
iret
push
into
stos
aas
push
aam
repnz
ret
ret
jno
sbbb
xchg
packsswb
pop
mov
xor
shl
fs
mov
jns
bound
popa
hlt
mov
clc
loop
js
inc
jge
inc
lret
stos
push
jo
inc
add
jge
aad
jb
sub
push
xor
sbb
push
pop
iret
mov
nop
xchg
mov
mov
outsl
mov
mulb
pop
pop
dec
movsb
pop
call
push
pop
xor
mov
pop
xor
pusha
lods
outsl
jmp
jnp
nop
mov
rcl
jno
lods
addr16
jp
imul
gs
subl
ret
and
dec
mov
fnstcw
cmp
or
jo
pushf
mov
xchg
loopne
fstp
rdmsr
imul
lock
lock
mov
pop
adc
pop
bound
aam
movsl
ret
mov
clc
bnd
jmp
and
fnstenv
mov
mov
push
jmp
daa
pop
test
push
test
les
jmp
ffreep
fmuls
in
mull
mov
sub
ja
pop
xchg
dec
insb
roll
popf
pusha
inc
sub
ja
mov
and
adc
xlat
mulb
xchg
and
scas
and
ret
mov
roll
ljmp
mov
pop
jg
add
sarb
or
mov
and
aas
pop
adc
sub
jae
pushl
sbb
pop
xlat
leave
loope
pop
xchg
shll
cwtl
lcall
lods
jbe
daa
jg
sbb
std
mov
pop
or
clc
sub
addr16
xchg
dec
insb
aad
inc
iret
fists
pop
pop
out
in
sarb
pop
lahf
adc
adc
push
jl
dec
add
push
sub
sarl
cli
mov
dec
pusha
gs
ljmp
lds
sub
push
leave
repnz
dec
xchg
insl
aas
inc
lods
push
lock
dec
arpl
test
xchg
sbbl
aad
fxch
adc
leave
aam
bound
popf
mov
negb
dec
push
int3
ljmp
push
dec
mov
cmp
xor
ss
imul
outsl
lods
mov
mov
mov
int
mov
loopne
and
cmc
dec
les
imul
adc
dec
mov
sbb
decb
aam
cmc
adc
inc
enter
xor
add
in
xlat
add
jb
mov
inc
xchg
pop
pop
mov
pop
sbb
jae
enter
adc
ret
arpl
lret
sub
ret
imul
aad
sbb
icebp
lods
mov
nop
ja
movsl
xor
std
add
jmp
push
sti
push
xchg
inc
inc
adc
push
lods
lret
xchg
mov
loopne
insl
mov
imul
stos
inc
pop
xor
xlat
sbb
popl
mov
sbb
jecxz
jns
add
test
cmp
stos
ror
cmp
push
sti
lock
rcl
mov
mov
jl
or
pop
or
cmc
xorl
and
ljmp
imul
pop
movsl
fcom
hlt
mov
mov
push
xchg
movsw
pop
inc
pushf
ret
pop
subl
cmpsl
pop
jmp
outsl
jl
add
cmpsl
repnz
les
out
sbb
cmp
lds
inc
fbstp
push
push
jge
sub
int
sbb
ss
jno
xchg
push
cwtl
sbb
jbe
outsl
mov
xchg
sub
rdtsc
fnstsw
sub
test
lods
mov
and
xchg
sbb
mov
mov
mov
call
test
sub
inc
dec
mov
lods
sbb
leave
insb
or
std
sbb
or
mov
mov
and
mov
aam
cmp
test
mov
push
sub
mov
out
movsb
jp
movsb
rorl
jns
cmp
pop
sub
lds
rorl
xor
fldl
mov
inc
pop
mov
mov
lods
lahf
push
add
outsl
rcrl
imul
cmp
ret
pop
in
out
das
fwait
scas
rorb
push
rcll
jp
sbb
mov
push
xchg
push
fwait
int3
rol
inc
cmp
push
mov
push
xor
push
dec
adc
mov
push
int
cmp
pop
add
pop
mov
outsb
icebp
cmp
fadd
icebp
inc
cmp
push
lock
in
mov
sahf
in
push
pushf
pop
popf
cmc
add
dec
rcr
and
repnz
loop
xor
sub
ss
cltd
daa
out
fwait
inc
inc
enter
adc
push
inc
mov
adc
jo
or
cmp
bound
ja
insb
shl
je
or
iret
enter
cwtl
mov
cli
sbb
or
outsb
inc
add
pusha
fwait
nop
inc
push
and
les
mov
pop
pop
test
iret
int
dec
xchg
lret
stos
stos
pop
jecxz
popa
mov
and
aaa
shlb
lret
cmc
mul
xor
jmp
xchg
mov
sub
std
scas
out
cmp
jge
idivb
and
pop
fists
in
fsubrs
dec
sub
ficoml
dec
hlt
cmp
js
xor
dec
mov
roll
decl
sub
in
stos
nop
push
nop
push
jb
in
stos
bound
mov
push
mov
xor
rcrb
or
imul
sub
lahf
out
rcll
xor
cmp
vmovaps
dec
ficompl
mov
jecxz
mov
dec
outsl
nop
jns
sub
fadds
into
xchg
test
pop
fcomi
dec
clc
jge
or
popf
addr16
push
jmp
sahf
sub
test
sti
test
xchg
and
fidivrs
dec
pop
and
insl
es
cmp
mov
mov
sbb
inc
mov
andl
mov
cmc
xchg
sub
cli
data16
shlb
add
ja
roll
mov
xchg
insb
mov
in
int3
fdivrl
cmpsl
dec
andl
cmp
adc
lods
sbb
and
jle
je
pop
push
outsb
js
push
push
push
nopl
stc
xchg
in
nop
mov
aam
sbb
cmpl
sub
enter
shll
and
mov
cmc
scas
mov
mov
mov
lods
jmp
cmp
add
sti
cli
fistl
mov
scas
xor
add
pushf
aas
add
sbb
adc
out
jg
inc
lret
aad
jp
popf
scas
cmp
ror
loop
and
adc
fidivl
mov
ret
iret
sbb
sbb
jb
cli
sub
cmp
or
stos
fsubl
mov
push
mov
mov
xor
arpl
incl
push
inc
xor
pop
xchg
jb
or
add
aas
cmp
xchg
xchg
inc
inc
push
out
ret
repz
lock
adc
dec
fmuls
xor
push
sarl
xchg
ja
and
insl
adc
jg
cmp
les
jl
and
loopne
dec
in
jecxz
jbe
mov
push
mov
mov
mov
sub
cmc
jne
fldcw
ror
lahf
aam
sub
push
icebp
mov
adc
cld
dec
mov
jecxz
xchg
jmp
xor
jne
or
sti
rcll
adc
pop
mov
or
push
xor
dec
jne
arpl
mov
xchg
xchg
inc
arpl
cmc
xchg
inc
cltd
es
inc
pop
jne
out
cmp
pop
push
inc
add
push
ret
and
push
push
movsl
xchg
push
popa
test
aam
inc
pop
in
popf
adc
push
aam
cld
inc
and
lret
cmp
in
scas
rorl
xor
sbb
sbbl
xorb
pop
jbe
push
stc
pop
or
push
out
dec
jbe
sub
shrb
sub
call
mov
int
ret
out
add
daa
inc
xchg
pop
ja
sub
sbb
push
push
and
mov
insb
add
cltd
cmp
pop
inc
push
push
shr
and
repnz
add
xor
ret
loopne
fistpl
pusha
mov
mov
push
js
sbbb
mov
ret
lcall
pop
xchg
mov
lcall
rol
mov
imul
aad
scas
shr
push
inc
addl
pop
mov
mov
fsubp
mov
lret
aam
test
outsb
clc
cwtl
pop
popf
lock
xchg
jecxz
xlat
xchg
mov
mov
call
aas
mov
jbe
in
mov
jno
push
xor
scas
mov
add
add
pop
aaa
test
jns
cmp
pop
and
inc
sbb
arpl
jl
mov
or
and
ret
int
shll
aad
fs
mov
je
dec
jno
idivl
jecxz
sub
pop
or
or
pop
fidivl
xor
mov
dec
daa
out
ja
push
inc
in
lea
xchg
leave
or
add
aad
int
out
movsb
add
mov
jb
push
push
sahf
jae
sub
push
dec
cmp
xor
pop
cmp
mov
int
rclb
xor
into
cltd
pusha
ljmp
sub
inc
xchg
mov
push
jge
pop
inc
or
shll
popa
repz
test
xor
cmpsb
arpl
mov
idivl
and
sbb
lds
mov
jg
push
xchg
icebp
rcrl
jl
test
add
add
sub
sbb
add
rclb
sub
stos
clc
iret
sbb
sqrtps
rcrb
sahf
das
push
sti
aas
cmpsb
stc
xchg
das
rcll
mov
dec
int
xchg
mov
push
xchg
xchg
xor
jg
push
jmp
into
mov
outsl
pop
jge
xor
jecxz
insl
pop
sbbl
xor
mov
pop
adc
gs
mov
adc
fstl
fdivrl
imul
or
cmpsb
lret
test
jg
inc
idiv
sahf
push
leave
mov
adc
adc
or
xor
dec
das
in
xchg
push
push
push
dec
xchg
xor
std
enter
test
jb
sub
lret
cmp
repz
imul
push
add
sub
jle
frstor
sub
into
js
push
or
mov
pop
jge
cmp
iret
mov
pop
mov
mov
mov
movsl
sub
mov
add
add
push
xchg
jbe
fstps
jp
std
mov
pop
jnp
pop
fnstcw
ss
jb
sahf
xor
cmp
ljmp
cmp
int3
sub
fwait
imul
sbb
push
out
orl
push
addl
sub
sbb
fidivs
movsb
push
lea
push
add
cmp
and
or
or
cmp
into
idivl
popa
pop
enter
xor
xor
cs
xor
cld
adc
add
push
pop
xlat
pop
clc
mov
push
mov
nop
cltd
out
mov
inc
jns
movsb
fidivl
jns
push
outsl
lret
and
and
stos
lods
scas
mov
xor
icebp
xchg
das
popa
jae
adc
ljmp
mov
cmc
rol
jmp
pop
xor
xor
jbe
pop
stos
in
push
xor
hlt
adcb
mov
xor
shl
inc
push
jmp
lock
pop
jnp
push
test
in
cmp
sub
jb
jns
scas
insb
xchg
out
xchg
push
pop
jl
add
mov
jmp
cs
sbb
push
jg
adc
push
inc
cmp
push
and
notl
xor
popl
xchg
xchg
ja
cmp
push
lock
sub
jl
les
pusha
inc
fldcw
mov
addr16
cld
addr16
gs
aas
inc
shll
inc
je
rep
and
mov
xor
fdivr
insl
outsl
xchg
xor
dec
mov
cmp
sub
push
outsb
mov
subl
pop
mov
sarl
insb
mov
sub
mov
frstor
push
dec
inc
mov
xchg
in
iret
adc
repnz
std
insl
fcomp
adc
inc
mov
and
mov
inc
sub
enter
leave
cmp
dec
out
cld
xchg
xlat
jmp
int
mov
cltd
pop
ja
add
or
cmp
adc
mov
mov
fwait
push
mov
pop
xchg
adc
in
jnp
mov
inc
pop
test
add
mov
mov
cmp
xchg
add
and
push
cltd
addr16
jmp
daa
aad
ja
mov
aam
std
and
cmp
sub
and
imul
pusha
test
dec
or
pop
test
dec
jo
mov
inc
jno
pop
rcl
and
mov
repz
xor
pop
jb
test
mov
adc
push
mov
add
push
sahf
add
in
int
pop
ret
jne
push
inc
addr16
loop
adc
push
sub
inc
adc
jbe
mov
adc
jecxz
mov
push
mov
das
xor
mov
ja,pt
inc
loop
dec
fcoms
dec
ret
mov
pop
clc
int3
mov
push
adc
cmp
push
imul
push
add
push
adc
cmc
mov
jl
adc
add
js
outsb
popf
call
dec
lds
negb
sub
addr16
pop
xorl
flds
cmpb
inc
mov
pop
lret
jbe
stc
and
fstpt
popa
sub
mov
mov
mov
sbbb
fldcw
test
inc
adc
and
mov
mov
shll
lcall
aam
mull
test
jecxz
in
arpl
lret
stos
lods
lcall
mov
fisubl
or
and
pop
pop
push
insb
pop
jg
push
sarb
inc
clc
stos
jne,pn
mov
enter
mov
lea
shll
pop
orb
cmpsl
sbb
daa
stos
je
das
pop
xor
call
add
pop
mov
fldenv
out
insb
push
or
push
sbb
mov
pop
js
xchg
pop
jo
sahf
inc
pop
cli
cld
jns
cltd
clc
dec
dec
add
or
jl
test
cmovbe
push
pop
pop
ret
cmp
jg
idivb
jo
lcallw
sub
dec
sti
mov
outsl
xchg
ret
sbb
adc
fidivl
push
sbb
sub
cmp
sbb
int
mov
nop
nop
std
lods
push
cmp
jb
xor
and
push
mov
jns
hlt
mov
xchg
mov
and
push
nop
inc
xchg
lds
adcb
insl
dec
xor
rorb
divb
gs
hlt
xchg
adc
pusha
insl
insb
push
lahf
push
cmc
sub
rcrb
or
or
xor
jp
mov
xlat
lret
and
sbb
popa
pop
add
jns
dec
push
adc
xchg
loope
jp
stos
cli
leave
sub
or
mov
lea
stos
xor
or
ljmp
or
repnz
bound
or
push
xchg
repnz
xor
cmpsl
arpl
shrb
jge
popf
call
ret
call
in
ljmp
sub
push
xchg
enter
push
sub
sub
pop
inc
filds
pop
outsb
push
pop
gs
pushf
paddq
jae
cmp
repnz
shll
stc
jbe
mov
fs
jae
sub
add
mov
rolb
sbb
xor
mov
dec
sub
out
push
jg
in
jo
add
ret
pop
fildl
es
xor
iret
mov
jl
or
es
push
dec
pop
jecxz
mov
addr16
push
jl
nop
mov
cmp
xor
insl
push
shlb
lret
movsl
test
pop
lea
push
mov
outsl
imul
inc
xchg
insl
orl
int
movsb
dec
push
push
or
das
dec
mov
shlb
cmp
sub
inc
mov
dec
mov
ja
xchg
mov
cld
xor
or
mov
test
xor
sub
stos
mov
jge
mov
push
mov
adc
mov
cmp
imul
jp
movsl
out
mov
push
and
push
bound
dec
rorb
int3
in
add
cmpsl
dec
sti
mov
lsl
negb
adc
push
pop
sub
cmp
mov
push
pushf
loopne
fwait
sbb
leave
lahf
rcrb
mov
lods
and
out
outsl
adc
inc
push
jl
mov
push
cmp
cmp
insb
pop
push
pop
filds
mov
hlt
mov
mov
popf
and
dec
and
mov
inc
adc
dec
adc
push
mov
rolb
fisubrl
test
push
jle
pop
in
loope
aam
out
mulb
add
idivl
and
sti
movsl
mov
push
stc
mov
push
sub
cmp
mov
pop
jp
jb
shrb
inc
sub
jno
movsl
jg
aad
fmull
int
cwtl
xchg
in
adc
call
mov
roll
push
push
in
push
inc
aaa
mov
repz
ss
dec
sub
hlt
imul
iret
sbb
out
outsl
mov
mov
call
ss
daa
bswap
dec
fsubrp
movsl
inc
push
pop
les
and
mov
cmp
mov
jae
mov
fldl
mov
add
adc
mov
push
andb
push
mov
xor
je
jge
add
popf
cmp
stos
dec
cmp
gs
push
sbbb
jge
cmp
adc
mov
lods
lea
and
xchg
ja
cltd
jo
dec
sbb
mov
jns
insl
adc
add
inc
sub
sbb
dec
inc
sub
pusha
sarb
mov
jb
add
push
js
jno
aam
gs
int
sti
mov
cltd
xchg
insb
push
addl
dec
fimull
mul
jno
add
ja
enter
push
mov
call
movsb
fimuls
cmpl
push
xchg
jno
pop
subb
out
mov
or
sbb
mov
arpl
xchg
repnz
fbld
jl
ficomps
cmpsl
dec
push
enter
dec
lea
and
lret
shll
xlat
fdivrl
pop
add
test
lds
mov
xchg
jbe
jle
test
out
jle
cmp
repnz
stos
pop
popa
jge
xchg
add
xchg
mov
xchg
xor
jbe
dec
ja
cmp
into
xor
and
inc
sub
adc
sbb
xor
mov
je
cltd
sub
ss
cmp
out
pusha
loope
adc
sub
cmp
inc
cmpsl
mov
xchg
dec
rorb
cmpsb
pop
and
cmc
ss
shll
push
stos
pop
fisttps
pop
popa
mov
shlb
icebp
fs
bound
aam
dec
movsb
jmp
sbb
sub
aad
push
sbb
scas
cmpsb
movsb
jne
jno
sbbb
sbb
decl
inc
lcall
fildll
repnz
cmp
adc
test
shll
stos
aam
cltd
cs
imul
pushf
adc
stc
mov
pop
jge
enter
shlb
xchg
out
outsl
sub
es
lock
fldenv
imul
shll
mov
nop
imul
mov
movsb
jg
mov
mov
jae
push
push
xor
fstps
adcb
jns
mov
sbb
testl
movsl
sbb
sub
cmp
rcll
and
inc
movsl
jmp
les
and
std
xor
mov
jb
sti
pop
mov
push
nop
lods
nop
daa
and
aad
sahf
inc
pop
jno
adc
outsb
loopne
scas
adc
clc
cmp
dec
divb
mov
lret
pop
out
jge
push
sub
mov
bound
hlt
out
jmp
inc
sti
sbb
inc
ds
or
repnz
cmp
in
push
xor
shlb
jecxz
or
lahf
aad
mov
insb
xor
jl
xlat
push
push
mov
push
out
out
fwait
lods
cli
in
xchg
cmp
xchg
pop
fwait
out
outsl
test
jle
inc
adcb
lock
adc
mov
mov
test
pop
push
cwtl
cmp
sar
fdivrl
std
sbb
pop
mov
pop
gs
imul
hlt
popf
cmp
es
dec
mov
icebp
push
icebp
inc
xchg
cmp
out
addr16
and
test
and
ficoml
arpl
outsb
int3
test
scas
jb
inc
jp
xor
mov
lret
push
and
fwait
pop
inc
mov
cmp
xchg
mov
jno
dec
outsl
pop
in
mov
scas
repnz
mov
mov
adc
jl
xchg
push
std
scas
or
cmpsb
sahf
dec
lret
add
jne
mov
jbe
mov
xor
cmp
inc
jno
fistpll
sahf
push
mov
test
out
dec
cmc
lcall
outsl
in
sbb
push
dec
and
push
sbb
sbbb
rep
icebp
inc
ja
addb
push
negb
repnz
xchg
rcrl
adc
jno
imull
enter
aaa
jnp
popf
jnp
into
jge
cmp
clc
inc
shr
js
jp
into
ret
mov
fwait
xchg
sbb
mov
dec
addr16
jmp
in
ret
test
stc
fnsave
sub
mov
cmp
addr16
push
push
lock
stos
gs
ds
mov
mov
enter
inc
test
or
pusha
stos
jecxz
aad
adc
push
inc
lds
sbb
cmc
jp
test
test
jge
and
push
loopne
pop
icebp
fbld
mov
pushf
dec
mov
test
mov
je
repz
mov
leave
ficompl
aam
lods
fwait
nop
jge
xchg
scas
mov
xor
xchg
add
pop
xchg
push
cmp
notrack
pop
push
or
lock
fwait
xchg
jecxz
cmp
xchg
dec
mov
add
in
out
dec
int
ds
insl
jmp
sbb
mov
jno
fcmovnu
fmull
or
xor
test
push
mov
inc
pop
scas
mov
cmc
add
fnstenv
js
jecxz
or
mov
lret
lahf
aam
sub
adc
lds
inc
xchg
imulb
sbb
hlt
dec
and
ja
inc
ficompl
stos
aad
xchg
mov
and
sar
in
sbb
flds
sub
arpl
dec
jnp
add
pop
jne
nop
frstor
cmp
dec
or
add
lds
and
hlt
imul
push
pop
sub
inc
imul
pop
fsts
adc
cli
mov
cmc
mov
sub
clc
scas
mov
sbb
xchg
mov
lahf
mov
mov
mov
jb
mov
loopne
dec
arpl
add
out
mov
xchg
lea
je
movsl
add
lods
neg
sbb
pop
repz
pop
pop
popf
or
sub
aam
shrl
gs
dec
out
add
sbb
add
xor
xchg
sbb
add
pop
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
out
xchg
orb
jmp
bound
popa
dec
and
xorl
popf
add
mov
lea
push
pop
pop
les
add
jmp
fs
cmp
and
adc
test
push
lds
inc
push
popf
mov
or
rcll
out
fs
test
imul
adc
jo
arpl
xchg
sub
ljmp
es
rcrl
jne
test
xchg
lcall
xor
scas
adc
cmc
inc
jnp
or
test
cmp
and
fsubr
lret
cld
xor
std
insb
pop
cmp
pop
scas
push
mov
xor
mov
testb
sahf
pop
mov
pusha
movsl
in
sub
inc
lcall
pop
nop
xor
add
bound
jle
jns
insl
sti
xor
sub
adc
push
sub
repz
add
push
cld
gs
jno
movsb
outsb
cld
imul
lret
or
push
in
or
gs
ret
andl
cli
repz
dec
mov
rclb
popa
or
lea
fsts
out
adc
push
out
sbb
jge
mov
repnz
repz
mov
adcb
mov
leave
inc
test
ds
xor
push
sub
hlt
pop
and
mov
jp
xchg
stc
mov
cmp
movsl
xchg
mov
and
or
lods
cs
ror
repnz
test
dec
test
dec
mov
and
push
or
cmc
fwait
add
pushf
notl
cli
sbb
dec
insl
sbb
sbb
mov
mov
sub
in
imul
add
mov
mov
mov
add
dec
sub
ss
out
and
dec
cli
icebp
shl
cmc
dec
push
mov
mov
mov
sub
mov
pop
jle,pt
in
jbe
sbb
fsubrl
dec
lea
xchg
xlat
jns
scas
jnp
xchg
fnstsw
mov
sub
and
hlt
xor
leave
cmp
push
cmp
jae
xor
sbb
xchg
dec
xlat
cmp
mov
cmp
insb
fdecstp
ret
insb
in
aas
add
scas
adc
outsb
int
dec
fiaddl
jb
pop
in
imul
bnd
mov
popf
jmp
testb
cmp
ss
flds
aad
in
xchg
int3
enter
jg
leave
sub
clc
adc
cltd
pop
dec
pusha
movsl
xchg
loop
aas
es
cwtl
mov
ljmp
rcrb
addl
push
cld
ret
add
inc
pop
enter
sbb
sub
sub
daa
mov
mov
xchg
mov
add
add
jbe
xchg
xchg
jle
mov
call
mul
pop
cmp
add
pop
stc
push
dec
sub
or
or
inc
fs
xlat
push
rcrl
stos
lds
mov
popa
loopne
fs
add
sbb
xor
pop
in
inc
das
jmp
in
in
dec
inc
sahf
xor
push
sub
pushf
mov
aas
sbb
lock
pop
cmp
pusha
stos
xchg
mov
clc
cmp
movsl
aas
neg
or
cmp
rcll
and
push
sbb
in
scas
loop
xchg
stc
es
insb
sbbb
mov
mov
in
cli
xor
or
mov
adcb
or
in
cli
fimull
or
dec
cmc
and
vminsd
notb
insb
cld
cmpsb
dec
jmp
sub
repnz
inc
dec
mov
rolb
sbb
xorl
repnz
imul
adc
in
inc
test
push
inc
pop
push
push
jae
popf
into
dec
xlat
lahf
mov
test
xor
jns
xor
mov
stc
imul
in
inc
xchg
js
stos
mov
pop
cmp
pop
or
push
dec
mov
or
in
imul
xor
and
sub
jge
mov
cs
int
lahf
sbb
pop
daa
push
sub
inc
js
mov
push
sbb
mov
xchg
leave
dec
push
xchg
inc
xchg
xorb
pop
or
pop
test
sub
cmp
ret
in
out
dec
xchg
cwtl
push
jmp
jb
dec
popa
mov
and
sub
mov
into
cwtl
inc
sbb
push
loope
div
stos
push
push
push
lret
pop
cs
std
add
mov
sub
xor
xchg
sbb
sbb
and
outsl
pop
mov
sub
dec
or
cmp
inc
dec
lds
cmp
in
sub
addl
pop
inc
cmp
in
push
testb
sbb
shr
cwtl
int3
push
adc
mov
fistl
out
aas
jns
cmp
mov
adc
shlb
xchg
jl
add
mov
pop
and
repz
cmp
cwtl
lock
jp
test
pop
pusha
add
adcb
inc
pushf
inc
sti
outsl
addr16
or
out
xchg
jne
insb
mov
cwtl
shlb
aad
int
lea
jne
fisubs
sbb
ja
adc
mov
mov
pop
test
push
in
push
mov
jl
stos
stc
in
push
cmp
mov
push
test
imul
sbb
lcall
fnsave
in
stos
mov
sub
fcoml
mov
loopne
pop
jmp
test
cmp
sbb
rclb
pop
pusha
mov
xchg
sti
xchg
sbb
push
xchg
add
lds
sbb
add
mov
mov
inc
and
out
loop
dec
call
add
xchg
sub
hlt
sub
mov
out
mov
xchg
pushf
pop
test
sbb
lcall
flds
fnstsw
lret
xchg
aad
push
xchg
in
sub
loop
mov
imul
fwait
jge
call
and
lahf
iret
fwait
sbb
adc
enter
add
sbb
or
and
popa
inc
dec
out
push
test
out
dec
cmp
push
rcl
fstps
les
push
imul
repnz
icebp
cltd
pushf
std
lret
out
mov
test
adc
fcmove
mov
sub
inc
jne
sub
js
pop
adc
repnz
scas
out
adc
loope
jmp
rcll
push
push
xor
aas
mov
xor
push
ds
cli
push
gs
in
or
mov
mov
sub
fisubrl
pop
pop
and
add
xchg
in
sub
ss
jle
lea
gs
inc
pop
bound
test
insb
pop
in
cld
xor
or
or
sar
push
in
enter
xchg
mov
outsb
inc
sbb
mov
or
jg
scas
fdivrp
fwait
dec
and
dec
orl
add
mov
adc
mov
sub
mov
fwait
idiv
and
mov
xchg
ss
mov
sbb
push
pop
rcrl
xchg
clc
jl
adc
pop
nop
jg
adc
sbb
sub
sti
xchg
gs
popa
faddl
mov
xchg
jmp
repz
call
mov
gs
adc
mov
scas
outsl
in
ds
lea
mov
bnd
in
mov
xchg
pop
call
xor
ror
pop
and
jge
sbb
adc
sbb
or
and
and
sbb
gs
pop
pop
sbb
push
in
sbb
jp
dec
daa
or
ret
dec
out
jae
mov
out
stc
push
cld
and
scas
das
adcb
xchg
dec
int3
mov
in
mov
int3
push
cli
cmc
dec
mov
mov
xchg
dec
mov
or
inc
pop
jns
out
fs
xlat
gs
or
cmp
cld
cli
mov
inc
mov
sub
sbb
pop
pop
push
loope
sub
sub
inc
das
jp
imul
dec
ss
and
pop
jo
jae
loope
adc
inc
and
fwait
sahf
jl
mov
orl
fmuls
outsb
xor
out
addr16
loop
fldl
mov
xchg
cld
into
popa
xchg
xor
nop
adc
out
mov
sub
cmp
aaa
adc
mov
mov
dec
daa
mov
cmp
dec
inc
ficoml
fisttpll
sti
lret
pop
add
push
mov
dec
jl
insb
loop
outsb
pop
sarl
fistps
je
cmp
repz
pop
ret
outsl
mov
shlb
push
dec
ss
daa
jnp
movsl
in
sub
bound
arpl
sub
pushl
out
sahf
pop
shl
int
lret
push
mov
nop
jg
xchg
cmp
lods
mov
les
cmp
cmp
pop
pushf
pop
les
cmp
sub
inc
or
lcall
ja
sub
insl
pop
ficomps
insl
xlat
movl
lret
cwtl
pop
xchg
ret
inc
pusha
inc
inc
mov
push
ds
imul
push
stos
lds
stos
sbb
sub
leave
adc
sahf
add
pushf
or
das
and
addr16
fistl
xchg
inc
mov
lds
mov
or
negl
cwtl
mov
push
mov
or
xor
xlat
sbb
sub
add
js
push
test
xchg
pop
dec
and
dec
or
aaa
add
movsb
jecxz
pop
out
mov
mov
adc
mov
ret
pop
imul
ss
jbe
or
fs
mov
fld
mov
dec
xchg
imul
aas
mov
xchg
add
and
in
xchg
fs
jnp
call
mov
pushf
mov
lods
fcmovnb
ljmp
inc
in
pop
mov
int
mov
mov
or
repz
jecxz
outsl
lret
in
aas
jnp
gs
rcll
add
pop
cwtl
mov
sub
or
jle
or
mov
icebp
addb
subl
mov
xchg
cmpsl
pusha
inc
push
lods
jb
jecxz
mov
stc
and
sbb
pop
mov
inc
setle
mov
cmp
hlt
shrb
and
test
xor
push
mov
or
mov
stos
popf
nop
cmp
shll
nop
fs
inc
mov
loopne
aad
aam
sbb
imul
cmp
stos
pop
mov
cltd
fisttpll
mov
inc
adc
mov
cmp
adc
cmp
insl
fwait
inc
pop
mov
mov
idivl
arpl
out
mov
incl
xlat
cmpsl
imul
mov
lret
xchg
cli
outsb
imulb
xchg
sti
nop
divb
out
xor
std
enter
cmp
fabs
in
dec
add
in
test
and
clc
ja
std
xchg
pusha
push
in
pop
notb
adc
adc
sbb
loope
repnz
push
cli
test
push
xchg
jae
add
cld
loope
and
pop
sub
add
inc
and
stos
jb
xchg
add
lods
or
jb
xor
inc
cli
pop
rol
test
daa
jecxz
call
jg
int
jo
xchg
das
iret
xchg
repnz
test
fistpl
xor
dec
int3
jns
pop
pop
push
sbb
and
adc
jg
and
or
iret
test
xchg
push
ss
push
add
push
lods
aad
push
lds
adc
jmp
adc
adc
jno
mov
insl
bound
cmp
out
mov
pop
or
push
ret
shrl
dec
les
js
adc
cltd
lock
push
jecxz
mov
idiv
mov
gs
cltd
pop
leave
jecxz
in
nop
scas
cwtl
cmpsl
jge
push
pop
and
mov
or
aam
test
pop
adc
fs
pop
push
dec
mov
mov
push
nop
mov
ss
pop
jge
mov
shrb
jo
pushf
insb
sbb
dec
inc
ret
bound
testl
insl
sar
xor
pop
xchg
dec
mov
cmp
repz
xchg
pop
pop
jecxz
or
and
arpl
lret
in
mov
in
jge
stos
push
mov
mov
xchg
pop
int3
fcoml
jnp
into
dec
mov
popf
cmp
mov
jmp
jp
add
inc
ljmp
shlb
push
inc
mov
jge
add
inc
jo
aam
sub
arpl
xchg
pop
fists
sahf
or
inc
das
popa
lret
pop
cwtl
into
cmc
or
nop
fstps
ljmp
stc
sarl
jmp
ret
in
loope
sub
in
xchg
pop
or
add
or
xchg
sub
sete
sbb
jmp
cmp
jne
jns
shld
ds
pop
push
pop
push
push
sti
lcall
push
clc
int3
lcall
int
ds
ljmp
cld
adc
fcmove
je
sbb
fs
push
add
xchg
out
outsb
pushf
dec
xchg
int
add
push
mov
push
mov
leave
or
movsb
inc
adc
mov
dec
mov
sbb
mov
mov
pop
or
add
pop
push
push
imull
jmp
sahf
xchg
insb
addb
jge
outsb
mov
cli
out
sbb
mov
sar
bound
xor
cs
enter
fsubrp
sub
mov
jmp
jo
mov
cmpsl
int3
in
add
push
mov
cld
fiaddl
sbb
xchg
add
repz
mov
jbe
jmp
xor
jne
push
sbb
and
leave
insl
jp
jbe
stos
ss
add
imul
sti
imul
mov
pop
xor
fdivs
xor
enter
popa
aas
pop
adc
vpextrw
out
iret
mov
sti
sub
mov
sbb
in
xchg
cmp
repz
in
rcrl
cltd
mov
insb
mov
std
pop
adc
daa
sbb
pushf
sbb
pop
lock
or
jne
jae
int3
in
mov
punpckhbw
inc
mov
mov
push
cwtl
xchg
cmp
push
shll
outsl
xor
xchg
push
dec
xchg
sub
mov
pop
push
call
rclb
enter
gs
xchg
ja
cmc
in
jle
push
xor
repnz
dec
outsb
pop
pop
data16
js
outsb
nop
jge
sbb
shrl
outsl
jae
addb
push
inc
cmp
pop
mov
lcall
cmc
lods
dec
flds
cs
lods
and
sub
or
fmuls
loop
or
jae
pop
fildl
cwtl
xorl
imul
mov
ficoml
add
filds
call
jle
mov
adc
xor
sbb
xor
outsl
push
orb
sub
mov
ja
shl
push
cmp
lcall
test
mov
mov
xchg
mov
xchg
shlb
sub
flds
cmp
dec
cltd
or
dec
push
pop
xchg
loop
and
adc
or
sti
std
add
ret
dec
fstl
aad
push
or
insl
sti
testb
sbb
std
mov
aad
dec
rorb
adc
ss
outsb
test
pusha
sub
pop
cwtl
and
xor
inc
jbe
pop
icebp
mov
scas
aaa
mov
test
dec
add
mov
sub
test
movsl
aam
lock
stc
add
int3
jns
pop
jns
ds
mov
xchg
insb
out
bound
sbb
and
loop
mov
and
lods
popa
xchg
mov
xchg
cld
daa
loopne
sub
out
out
cli
jb
mov
inc
lcall
xchg
hlt
lds
mov
mov
push
mov
shll
pusha
pop
push
dec
lea
jecxz
push
lods
inc
stc
ret
aaa
arpl
incb
cmp
popa
sbb
cmpsl
mov
sbb
mov
add
into
cmp
out
aas
scas
mov
pop
hlt
int3
inc
push
mov
cmp
adc
daa
mov
scas
mov
push
sub
cwtl
or
sbb
adc
clc
mov
stc
push
push
sti
add
shll
aam
dec
hlt
add
pusha
jbe
cmc
jg
add
mov
mov
sub
sbb
iret
or
lret
test
dec
ljmp
call
lcall
movsl
push
pop
cwtl
fiadds
incb
stc
sti
sbb
or
arpl
dec
outsb
add
dec
and
jmp
mov
call
jns
ffreep
popa
lock
cwtl
or
jge
movsb
int3
fbld
mov
pop
sahf
jbe
fisttpll
jle
imul
mov
pop
jmp
ljmp
jo
push
mov
loop
loopne
xor
cmp
rol
dec
jmp
xchg
cmpsb
sub
xor
lahf
jmp
push
test
sahf
jmp
jmp
mov
mov
push
ss
bnd
inc
push
adc
inc
sub
cmp
loopne
dec
mov
sub
adc
call
arpl
push
push
stos
and
insb
negl
fsubs
and
or
xchg
enter
rcll
adc
pop
or
shlb
loop
orl
mov
in
jbe
inc
lods
adc
jmp
call
sarl
sub
fiadds
rcrb
sub
and
push
loope
jmp
fcoml
incb
call
es
das
daa
mov
into
mov
jns
and
call
fisttpl
sub
fcmovnb
sahf
out
stos
jbe
mov
fldt
pusha
cmp
cmp
dec
mov
rclb
hlt
idivb
cli
cltd
stos
test
or
push
mov
mov
or
add
and
lds
mov
jmp
add
int3
mov
xchg
push
bound
xchg
mov
mov
mov
inc
aaa
lock
cmc
xor
leave
in
dec
leave
shlb
lock
mull
shll
inc
scas
dec
lea
inc
ret
popa
ret
nop
mov
cmp
pop
ds
gs
cmp
pop
imul
or
sahf
jbe
cwtl
mov
adc
xlat
adc
cmp
outsb
dec
mov
push
lods
and
stc
xor
pop
sbb
sti
pop
not
adc
aad
push
dec
aam
mov
mov
cmpsl
or
mov
call
scas
adc
rol
orb
loope
je
lea
hlt
mov
xchg
jb
ret
jae
lock
pushf
sub
mov
push
cmp
mov
aam
lret
mov
aad
xorb
adc
fstpl
jecxz
add
dec
mov
add
mov
jb
xor
arpl
mov
loopne
test
loop
push
mov
sahf
imul
jns
test
mov
ds
or
sahf
loope
adc
les
xchg
shlb
test
sbb
dec
xchg
cmpl
mov
jp
cmp
out
jecxz
mov
test
xor
xchg
sub
shll
movsb
imul
sahf
lret
enter
pushf
or
scas
mov
dec
fwait
mov
jnp
cld
sub
dec
xor
sub
in
daa
outsl
insb
les
inc
xor
movsl
pop
addr16
daa
and
aas
add
lret
sarl
dec
jl
icebp
jle
pop
mov
push
add
xchg
outsb
outsb
loope
mov
lcall
mov
pop
ja
adc
add
pop
pop
cli
shlb
lock
xchg
mov
out
jl
jno
mov
nop
jmp
add
pop
ljmp
mov
test
fildl
mov
insl
cmpsl
addb
dec
cmp
xchg
mull
mov
rorb
and
adc
xchg
mov
and
fcmovbe
in
fistpll
insb
push
mov
je
add
pop
xchg
int3
es
mov
pop
jge
pop
mov
adc
adc
dec
jbe
daa
mov
mov
push
daa
mov
or
mov
sub
xor
sbb
push
data16
js
pop
js
leave
lods
push
jnp
insl
inc
nop
outsl
xchg
loope
mov
int
inc
sbb
cld
in
inc
xchg
add
bound
adc
jecxz
lock
jae
push
lahf
fiadds
adc
xor
sub
mov
sub
mov
stc
pop
sbb
sub
mov
aad
push
mov
ds
mov
test
sub
cmp
insb
jno
cmpsb
jns
rcr
xchg
or
push
sti
and
insb
mov
int3
stc
gs
popf
xchg
outsl
std
int3
add
scas
in
mov
clc
insb
movsl
out
out
popf
or
js
ljmp
rorl
sbb
loope
push
scas
push
js
mov
dec
pushf
jbe
xchg
push
int
hlt
push
fists
in
fisttpll
adc
ljmp
and
push
stos
daa
lods
sub
dec
adc
int3
sub
and
xchg
filds
dec
loope
aad
push
add
fimuls
stos
rorl
fwait
decb
jo
sbb
pop
xchg
xorb
scas
push
enter
sbb
jno
imul
adc
pop
outsb
repnz
adcb
cltd
data16
add
fwait
bound
cmp
cwtl
xor
ja
jle
ss
mov
push
sbb
cmp
aad
fisttps
lds
jb
sarb
xchg
xchg
pop
push
inc
inc
int3
int
out
pop
cli
in
and
aad
lret
adcb
adc
push
push
add
aas
sub
adcl
push
mov
mov
inc
leave
pop
mov
ja
in
push
xchg
or
dec
mov
divl
lock
ret
push
jo
push
xor
dec
pop
mov
mov
xorl
jmp
cmp
mov
daa
or
cmc
xchg
add
or
lds
adc
mov
push
popf
clc
test
jl
pop
lock
pop
mov
lret
scas
mov
jmp
xchg
out
push
push
push
ja
mov
xchg
into
adc
jb
dec
or
sbb
rolb
nop
jg
repz
or
and
mov
jo
xlat
xor
enter
iret
mov
or
push
stos
xlat
hlt
movsl
scas
stos
jmp
sbb
jnp
cmpsl
push
lcall
mov
stc
adc
sub
fsubs
cs
xlat
mov
pushw
add
mov
jge
inc
repz
xchg
xchg
add
jb
cmp
sub
and
push
cmc
xchg
xchg
or
mov
and
jbe
lcall
and
ss
std
lods
test
add
movsb
jecxz
jns
push
test
sti
lods
fcmovnbe
adc
nop
mov
shl
add
idivb
xchg
shlb
mov
in
lret
jle
mov
mov
xor
or
pop
adc
jnp
mov
movsl
lods
pop
xor
inc
or
scas
mov
fdivr
int3
out
push
std
add
fcompl
loop
shll
push
inc
or
sbb
pop
fsubl
cltd
xchg
mov
mov
jecxz
movl
push
xchg
add
add
mov
mov
xchg
mov
jle
loopne
fsub
ja
push
int
xchg
stc
lret
jb
test
insb
jge
ja
in
leave
stos
lret
cmp
mov
mov
mov
ret
fdivrp
add
dec
xchg
outsb
call
imull
inc
xor
sbb
in
cmpsl
cmpsb
and
shlb
pushf
mov
cmp
leave
push
insb
mov
jmp
je
mov
mov
cmc
in
sub
cmpsl
push
std
out
cmp
inc
and
aas
sbb
sbb
inc
es
movsb
jg
mov
pop
and
out
std
cmpsl
fldcw
aaa
jge
and
adc
jnp
loopne
pop
mov
inc
mov
and
in
stos
cmc
cld
mov
loopne
stos
cmp
adc
cwtl
dec
jbe
adc
out
jno
cld
dec
cmp
mov
roll
mov
imul
inc
adc
and
fwait
adcl
jl
cmp
pop
js
inc
lods
lcall
sub
xchg
jge
lds
pop
repz
lds
pop
scas
enter
cmp
cmpsb
xchg
pushf
ret
fsub
dec
movb
call
pop
jp
push
ja
mov
inc
out
lret
aad
pop
out
and
lret
inc
pop
inc
outsb
dec
xor
iret
add
inc
out
hlt
xchg
sbb
push
test
mov
pushf
pop
addr16
inc
and
or
pop
sub
lcall
sbb
das
adc
ljmp
push
sarl
lret
mov
push
pusha
add
lret
data16
loop
call
inc
ds
lret
iret
loopne
lds
xchg
imulb
imul
in
sbb
out
jge
aad
sbb
add
sbb
fnstcw
je
push
cmp
mov
mov
inc
loop
jbe
loop
cmc
into
insb
cld
mov
or
pop
mov
pop
loopne
mov
fnstcw
pop
cwtl
test
add
xchg
sbb
dec
adc
add
pop
sahf
shlb
jbe
or
add
ljmp
mov
pop
or
mov
test
pop
data16
test
sub
fcos
sub
and
lods
adc
push
movb
rclb
and
xchg
adc
or
mov
push
mov
push
test
jne
out
lahf
imul
adc
test
pop
inc
nop
pop
imul
pop
sbb
dec
push
pushf
fists
push
cwtl
xorb
in
cmpsl
mov
movb
rcll
dec
add
mov
out
lock
xlat
push
pop
cltd
jno
inc
bound
jns
mov
in
sahf
int
aaa
shr
add
leave
sti
lods
stos
gs
ret
lods
jecxz
add
adc
mov
mov
and
mov
lods
fisttpll
adc
adc
pop
mov
nop
test
subl
or
and
arpl
les
mov
push
pop
lds
aad
and
shll
fildll
in
jb
xorl
imul
mov
and
fwait
loop
add
gs
adcb
mov
mov
pop
sub
push
mov
push
jle
shrb
sahf
lods
sub
sbb
enter
sbb
aaa
sbb
xor
push
lods
inc
pop
xor
or
sub
shl
dec
rcll
lds
js
ja
cwtl
into
inc
sbb
inc
dec
lret
or
das
imul
xchg
pop
cmpsb
mov
out
cmp
xor
pop
mov
jno
pop
inc
dec
ror
repnz
cmp
and
jae
or
leave
cmp
sbb
dec
and
scas
xchg
sbb
icebp
mov
mov
iret
dec
or
dec
mov
xchg
inc
idivb
ljmp
icebp
xor
loope
mov
push
psrad
pop
sub
clc
lods
imul
mov
sbb
dec
mov
aad
sar
divps
mov
mov
inc
push
xchg
lock
pop
sub
out
and
push
push
or
pusha
test
lods
push
shlb
pavgw
inc
rcl
mov
daa
jmp
push
rol
or
enter
inc
sub
xor
fisubs
add
ss
xchg
adc
jnp
and
adc
add
out
sbb
test
dec
lds
pop
push
lret
sub
repz
int3
rorb
icebp
inc
adc
mov
shrl
adc
lods
mov
repnz
nop
test
xchg
sti
sti
lcall
xchg
loopne
inc
add
jp
mov
dec
popa
push
mov
loop
std
daa
push
int3
inc
fisttps
les
leave
stos
mov
in
or
pusha
icebp
aam
es
and
cmpl
push
pop
enter
xor
cs
xchg
es
outsl
xchg
pop
or
cmp
inc
mov
or
out
cld
andb
jae
inc
inc
jecxz
stos
pop
push
outsb
jns
cmp
scas
ret
aam
outsl
sbbl
fnstenv
adc
clc
xchg
cmpsb
movsl
fst
mov
daa
pop
arpl
shll
add
and
push
or
mov
das
pop
adc
adc
ja
or
jbe
ror
inc
sahf
xchg
pop
add
mov
dec
iret
fcmovb
stos
pop
andl
and
push
pop
into
repnz
out
loopne
ret
or
dec
xor
das
jno
mov
mov
fcom
adc
pushf
sbb
jnp
roll
or
in
insl
clc
inc
xchg
xor
aas
mov
cmc
cmpsb
mov
ret
stc
mov
pusha
sbb
push
mov
mov
sti
insl
fwait
add
test
mov
pop
lret
xchg
and
dec
dec
rcl
push
popf
mov
xchg
aam
dec
or
popa
mov
shr
sbb
ret
or
sbb
xor
sub
aam
jmp
cmc
push
mulb
dec
leave
rorl
data16
clc
pushf
out
nopl
out
mov
lock
jae
mov
cmpsl
test
and
faddl
jmp
inc
jge
out
jnp
lea
sub
stos
lds
push
sbb
sbb
idivb
int3
jge
push
or
mov
mov
out
gs
xor
loope
clc
mov
inc
adc
adc
xchg
loope
aaa
repnz
insl
in
fwait
stos
ja
insl
mulb
cmp
and
mov
out
push
sahf
in
mov
in
rcll
mov
jge
js
xlat
inc
pop
and
dec
xor
ja
out
push
push
testl
mov
and
or
rorb
inc
add
je
or
loopne
xor
cli
dec
lea
enter
scas
cmp
repnz
cmp
inc
into
dec
jne
ss
daa
stos
cmp
lock
repz
bound
cli
repz
mov
aaa
inc
out
xchg
test
mov
mov
cmpsl
jnp
fisubrl
jns
mov
fimuls
xor
push
push
dec
cmc
mov
pop
adc
dec
sub
cwtl
clc
imul
adc
pop
aas
sub
adc
fwait
insb
mov
ds
icebp
and
add
mov
aaa
outsb
mov
loope
add
test
xor
sbb
mov
fwait
out
dec
inc
test
fwait
arpl
inc
inc
dec
inc
add
in
insb
lods
aas
and
addr16
test
mov
mov
movsb
mov
and
int3
icebp
aas
shll
sbb
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
fwait
jbe
push
jmp
bound
test
lds
jo
mov
or
pop
pop
out
std
int
dec
mov
data16
mov
loope
cmp
in
xchg
lds
movsl
int3
push
jp
js
or
daa
notl
cwtl
mov
fisubl
jae
data16
cwtl
data16
inc
nop
push
popa
or
stos
xor
mov
addb
adcb
inc
jl
leave
jle
dec
int
jnp
add
mov
mov
mov
mov
or
aaa
lock
mov
xchg
movsb
push
out
mov
mov
jne
jne
aam
rcrl
fwait
scas
dec
jl
leave
je
ret
pop
arpl
push
popf
call
lods
movsl
dec
dec
imul
decl
test
and
dec
clc
aaa
gs
scas
and
mov
dec
inc
push
xlat
mov
jno
dec
hlt
sub
xchg
ds
xchg
inc
push
cmp
dec
jmp
js
in
push
popf
push
sub
mov
int
in
add
add
decb
cs
cmp
inc
rolb
cmpsl
mov
cli
xor
leave
out
dec
loopne
mov
out
iret
sbb
cmp
inc
sahf
lcall
cmp
jbe
xor
aad
push
sub
sub
mov
leave
inc
test
xchg
cmp
mov
je
mov
les
cmp
cmp
gs
lcall
fldt
jo
aam
insb
xor
shll
add
ljmp
inc
aam
pop
jno
cmpsb
stc
jne
loope
pop
sti
mov
out
cmc
xor
pushf
aaa
mov
cld
outsb
ljmp
pushf
lret
daa
testl
xchg
out
iret
ljmp
mov
loop
push
push
cmp
lahf
shlb
popa
movsl
mov
out
rcrb
pop
sahf
lret
pop
mov
adc
jmp
in
gs
and
out
js
jl
ss
int3
loopne
xchg
pop
xchg
inc
push
cmc
jae
mov
xchg
push
push
movsl
dec
mov
or
sub
xchg
sar
setne
int3
push
inc
bts
jnp
and
sbb
scas
sub
sub
aam
cmp
cld
or
jae
mov
add
lds
stc
shl
fwait
xchg
sub
dec
mov
roll
add
into
js
lods
and
mov
push
cmpsb
and
xchg
das
mulb
lea
xor
sub
push
lods
pop
adc
std
idivb
enter
pop
data16
je
cmpsb
dec
jns
jecxz
dec
jbe
or
or
adc
pop
repnz
dec
icebp
clc
inc
out
jbe
mov
xchg
outsl
xchg
in
xor
in
outsl
push
lea
pop
stos
and
cmp
repz
in
inc
inc
pop
int
shrb
arpl
cmc
lahf
cmp
out
imul
mov
lds
inc
push
push
clc
movsl
mov
sti
int3
bound
lods
jg
popf
repz
addr16
dec
in
jns
and
stc
fwait
jns
into
js
stos
adc
test
mov
push
fstpt
jno
movsb
or
fisubrl
mull
sahf
jnp
jle
pop
hlt
stos
xchg
jecxz,pt
jns
xchg
push
insl
and
push
rcrl
adc
inc
fstpt
jo
ds
mov
std
mov
pop
int3
sub
jns
and
pop
out
xor
lret
insb
test
push
fmull
xchg
shrl
stos
cli
lahf
adc
xchg
imul
sbb
add
enter
or
jbe
into
imul
add
mov
div
mov
add
mov
inc
fnstcw
push
shlb
shl
daa
es
sub
add
xchg
jb
into
in
jmp
and
and
movups
ficompl
stc
mov
inc
imul
mov
add
sbb
or
in
test
and
inc
stc
sarl
sub
in
outsl
dec
aas
gs
les
sbb
push
inc
dec
and
cmp
push
stos
adc
jmp
ret
xchg
mov
jo
xchg
push
out
scas
nop
shrb
xchg
roll
and
fcoml
xchg
sbb
fwait
pop
lock
lock
xchg
clc
adc
arpl
lahf
test
pop
xor
xchg
sbb
out
add
sahf
jae
iret
xor
xchg
imul
outsb
out
repz
adc
mov
inc
lea
repz
repnz
xor
std
sub
adc
mov
and
cmp
xchg
push
cmp
jle
cmp
cmp
test
add
mov
loopne
and
adc
xor
inc
or
lds
xchg
or
lahf
dec
clc
fidivs
jbe
rcr
jo
filds
popa
sbb
cmp
sbb
jnp
xchg
test
dec
stos
repz
and
out
cmpb
fsubrp
mov
cmp
adc
adc
mov
out
fstps
daa
out
or
pusha
pop
test
mov
out
push
cmp
mov
xchg
inc
dec
jecxz
mov
sub
xchg
outsb
leave
add
scas
shll
inc
inc
int
mov
in
pop
fs
sub
cld
subl
lret
mov
mov
fstps
out
mov
and
dec
dec
icebp
add
pop
pop
add
daa
xlat
cmpsl
imul
cmp
fisubs
clc
sbb
sub
jmp
push
pop
fiadds
and
inc
or
pusha
test
add
aam
push
test
roll
cmp
mov
rcrl
jno
jmp
cmp
or
dec
pop
push
dec
push
mov
dec
xorb
out
mov
jecxz
dec
syscall
cmp
sbb
cmpsl
push
sbb
mov
mov
ds
ret
aam
ret
xchg
xor
daa
sbb
adc
jns
arpl
cwtl
sub
int
rol
sub
pop
andb
js
jne
jl
mov
nop
cmp
jmp
cli
jno
movsb
repnz
rclb
pop
pop
fisttpll
aam
out
out
push
mov
fcoml
push
mov
cmpb
add
in
aam
or
dec
pop
xor
and
cld
in
mov
gs
sub
adc
loop
movsl
movsl
jecxz
mov
fwait
test
xchg
bound
movsb
insb
push
mov
stos
divb
data16
rcrl
scas
lea
push
adc
shr
nop
jnp
jmp
push
pop
call
or
mov
mov
lret
stos
pop
or
xchg
stos
lods
hlt
jns
ret
inc
xchg
test
sub
test
add
jle
sub
pop
jge
insl
mov
out
sarl
sbb
or
rcl
jle
shlb
popf
inc
cmc
adc
mov
mov
rol
sbb
add
sub
repnz
out
mov
fsubrl
movsl
lods
aaa
add
pop
pop
pop
paddq
pushf
psubsb
sub
sub
and
imul
jl
xor
inc
dec
jle
mov
ret
inc
push
or
push
mov
mov
adc
out
and
xor
outsb
push
lret
add
int3
and
pusha
mov
popa
jle
or
outsl
mov
mov
inc
xchg
outsb
dec
fmull
and
adcl
mov
bound
lods
fisubs
fisubrs
or
ficoms
ja
leave
sbb
xchg
inc
mov
push
cmp
cmpsb
add
dec
mov
xchg
adc
add
pop
neg
mov
mov
into
cmp
rcl
jb
pop
mov
or
mov
jle
xlat
dec
inc
cmp
iret
or
bound
push
dec
pop
shll
pop
cs
push
mov
xchg
mov
stos
or
in
push
fimull
sti
popl
sub
jecxz
js
mov
xor
or
sbb
add
jbe
jno
mov
adc
adc
jg
xlat
addl
xorl
dec
arpl
jbe
mov
jmp
push
aaa
inc
cmpl
ret
add
xor
mov
mov
rcrl
jo
pop
lea
mov
adc
movsb
push
sbb
mov
notl
sbb
or
sbb
adc
jl
xchg
dec
and
dec
sbb
pop
orl
dec
xchg
cmp
add
adc
push
les
lret
push
jo
jp
cmpsb
xchg
shrb
mov
popf
sub
lret
mov
mov
ror
sub
sahf
das
inc
push
cs
fnstenv
stc
test
mov
xchg
fwait
test
subb
xchg
fs
aam
sub
jmp
mov
jo
mov
aaa
pop
jmp
adc
lcall
popa
add
xor
out
pop
xchg
fldcw
xor
inc
lds
push
jg
cmpsl
mov
insl
rcl
and
push
loope
and
jno
adc
in
sub
sbb
add
cwtl
das
mov
aas
inc
in
mov
xchg
test
shll
push
shlb
jo
mov
lds
add
dec
mov
test
mov
cli
call
das
daa
sbb
test
jnp
fsubl
fucomi
gs
stos
pushf
mov
xor
enter
shlb
ficoml
addr16
adc
testb
aam
test
es
pushw
cwtl
add
sbb
enter
jg
add
add
inc
popf
or
xchg
and
lods
push
or
ss
test
push
jl
mov
mov
imul
clc
push
fsubrl
pushf
repnz
dec
ror
and
push
adc
aaa
jl
jns
xlat
out
xor
shll
inc
shlb
sub
popf
sahf
ss
pop
lret
xor
mov
movsb
or
jbe
cmp
xchg
iret
push
sbb
pop
push
pop
lods
movl
pop
inc
ljmp
sbb
jb
mov
test
les
rcll
pop
pop
sub
pop
jl
pusha
imul
sbb
mov
rorb
push
shl
iret
jnp
sub
inc
jmp
push
jmp
add
adc
add
jb
pop
pushl
xchg
xchg
orb
in
fstpt
xchg
and
stos
jne
and
jbe
repz
dec
push
adc
add
das
sub
mov
mov
jnp
xchg
imul
scas
mov
sbb
xchg
add
or
inc
sbb
fcompl
arpl
enter
xchg
call
test
lcall
xchg
cmp
push
int3
xor
push
xchg
adc
aaa
pop
xchg
push
outsb
xorb
add
in
leave
das
push
xchg
xchg
push
insl
adc
push
orb
lods
jo
js
adc
mov
xor
loop
fistpl
dec
mov
repnz
insb
push
and
add
dec
cwtl
inc
test
mov
shrl
cmc
pop
mov
insb
pop
js
int3
mov
add
out
xchg
nop
add
jp
xlat
adc
mov
adc
xor
mov
adc
gs
bswap
jg
sbb
iret
adc
push
add
out
addr16
jl
pop
repnz
ss
inc
pop
cmp
in
into
call
popa
popl
and
pop
mov
nop
push
jge
inc
push
rcrb
shl
pop
mov
mov
and
imul
aad
or
push
aad
in
mov
or
aad
push
lcall
dec
dec
cmp
fmull
xchg
mov
out
cmp
aad
dec
sub
in
push
insl
inc
or
inc
push
adcl
ffree
adc
nop
in
arpl
call
dec
stc
fstl
sbb
mov
in
incl
popf
jecxz
jbe
rcl
or
xlat
inc
and
or
cmpsl
mov
aaa
mul
dec
jge
push
sub
ds
fidivs
xchg
mov
lods
and
or
and
addps
xchg
sub
ret
dec
push
xor
fstpl
add
cld
mov
lds
sbbl
shrl
pop
pop
mov
add
pop
in
and
xor
out
jno
ret
testb
lret
and
xchg
rorl
in
lret
leave
sbbb
jne
adc
inc
mov
nop
push
fdivrl
das
jb
lahf
xor
inc
call
aas
arpl
sbb
rorl
sbb
stc
adc
dec
or
pop
sbb
enter
js
xchg
pop
aam
xchg
jae
pop
ret
inc
jmp
jge
cld
lret
sub
fisubl
sbb
lds
and
dec
cmc
iret
jns
movsl
add
js
lahf
ja
pop
lcallw
iret
popa
fisttpll
pusha
dec
or
call
sub
and
ret
push
jmp
aaa
out
imul
mov
gs
xchg
pop
sub
inc
push
cmpsl
cmp
fnsave
xor
jbe
es
fistl
fildll
pushf
loope
dec
adc
adc
das
mov
popa
addr16
stc
js
mov
sbb
and
cli
mov
mov
ja
sbb
arpl
push
inc
test
pop
aas
aam
adc
xor
mov
in
jle
fnstenv
jmp
je
aam
out
lods
js
cmpb
and
mov
inc
jnp
jo
dec
rcrb
out
ret
lret
adc
lock
shlb
pop
jbe
jp
inc
stc
outsb
std
sbbb
xor
cld
adc
fdivl
add
mov
xchg
cmp
sbb
int
sbb
cmp
jne
inc
push
mov
cmp
jge
cltd
sbb
adcl
pop
sub
into
pop
jnp
cmp
pusha
jno
sahf
lret
sub
mov
xchg
test
adc
int
pop
xchg
dec
test
lds
xor
out
ret
iret
lods
imull
je
push
lcall
rcrb
out
jmp
ljmp
jecxz
dec
sub
mov
scas
or
pop
pop
adc
dec
movsl
push
rorb
sub
sbb
addr16
aad
push
mov
push
sti
dec
push
xlat
mov
jb
test
scas
fcmovbe
jge
push
loop
daa
push
mov
and
iret
lods
inc
mov
xchg
mov
add
leave
mov
stos
xchg
inc
sbb
aaa
imul
sar
fistps
movsl
ret
mov
add
xor
xchg
mov
das
lcall
inc
cli
mov
sub
lds
and
in
movsl
movsl
cmp
leave
push
push
and
ror
xor
sub
mov
push
xchg
xor
popf
inc
dec
aad
nop
mov
xchg
ljmp
inc
ja
sbb
dec
inc
fs
pusha
imul
iret
cmc
xlat
movsl
inc
adc
sbbl
arpl
xchg
mov
cmp
xchg
mov
lds
daa
xor
push
rolb
subl
mov
gs
inc
and
std
fmuls
push
es
nop
sub
push
lcall
cmpsl
inc
xlat
sbb
mov
mov
ret
cli
bound
adc
dec
mov
sbb
xor
pop
sbb
lods
mov
cmc
test
sub
mov
shrb
into
out
xchg
std
mov
popa
je
fidivrs
inc
mov
cld
fisubs
rcl
push
in
adc
jne
loop
clc
fnsave
mov
cmp
and
divb
cli
jae
cmp
cwtl
mov
and
xlat
aaa
push
or
and
int
or
pop
sub
add
adc
mov
mov
into
mov
fs
je
not
imul
sti
test
dec
jno
outsb
lcall
cmp
popf
mov
sub
lcall
mov
out
and
sub
xchg
cmpsb
pop
imul
loopne
lea
addb
int3
insb
xor
xchg
rcll
mov
mov
dec
in
stos
mov
and
inc
hlt
out
inc
jae
xor
out
mov
aas
jbe
xchg
mov
imul
cmp
pop
popw
hlt
push
es
cld
je
pop
std
bound
fwait
jl
sbb
fldenv
mov
xor
in
aaa
das
sbb
and
cmp
jle
jmp
cmpsb
xor
push
ss
fwait
ja
mov
js
stc
insl
xchg
sub
outsl
xchg
insb
loop
cmpl
jp
insl
jno
or
cmp
inc
lea
sub
cwtl
pop
pop
repnz
int
shr
loope
std
push
mov
adc
fisubrl
inc
data16
int3
je
inc
add
push
ret
and
loope
pusha
flds
loop
xchg
inc
mov
test
imul
cmp
enter
sti
daa
popf
enter
mov
adc
imulb
shll
mov
das
fbstp
lahf
mov
mov
dec
js
shlb
mov
loopne
add
lret
dec
jae
andb
or
add
push
mov
bound
aam
add
mov
xor
xchg
adc
xor
sub
inc
adc
lock
push
das
repnz
ret
jle
add
lds
adc
adc
jge
cltd
mov
fnstcw
repz
rclb
test
sbb
and
or
mov
shlb
and
xchg
call
incl
push
inc
inc
insl
cwtl
mov
mov
dec
add
cmp
mov
xchg
shl
push
fldenv
sbb
test
cmc
pop
push
or
jecxz
fadd
dec
xlat
mov
add
jo
clc
adc
loopne
scas
aas
adc
ret
and
mov
mov
cmp
mov
mov
xor
movsb
aad
ret
mov
inc
cmp
dec
sub
sub
repz
mov
push
push
mov
mov
dec
sbb
rclb
xchg
mov
cmp
pop
test
jne
mov
xchg
mov
mov
pop
xchg
rcrl
xchg
jae
cs
movsl
pop
add
jl
xor
push
cli
push
jbe
pop
xchg
push
sbb
pop
push
jmp
cvtps2pd
cmp
notl
xlat
loop
stos
mov
mov
fbstp
inc
jns
js
leave
data16
arpl
push
mov
mov
pop
inc
jae
lret
inc
push
mov
sub
pop
mov
xchg
cli
pop
pop
sahf
cmpsl
fdivl
xor
outsb
mov
adc
and
pop
mov
jl
cmp
push
cmpsl
cmpsl
ljmp
cmpb
inc
mov
cmp
popf
inc
add
flds
stos
mov
js
in
jl
jge
test
daa
lret
adc
in
mov
adc
push
loop
test
test
inc
pop
aas
jns
test
xlat
shl
mov
push
add
mov
in
pop
ja
pop
movsl
mov
mov
xchg
cmp
enterw
xchg
and
sti
inc
fcoml
cld
sti
or
incl
cmp
mov
stc
jge
sub
fwait
xchg
in
jns
xchg
or
lcall
push
sub
aaa
call
inc
dec
aas
push
repz
pusha
push
dec
test
mov
std
jle
out
xor
push
popf
push
je
mov
pop
mov
flds
sub
sbb
mov
adc
dec
mov
mov
mov
and
jae
loop
cltd
paddusb
cmp
cmp
cmp
sbb
mov
movsb
or
insl
jge
mov
or
cmp
loope
mov
enter
sub
jns
sar
mov
pop
jnp
stos
and
fcoml
aas
mov
adc
stos
jb
push
insl
xchg
loop
xchg
jg
enter
fs
arpl
outsl
push
cmp
jo
or
xchg
sub
mov
xchg
mov
das
push
jo
inc
jp
stos
cmpl
mov
negl
and
mov
imul
mov
pop
mov
cli
xchg
cmp
mov
add
dec
inc
cli
call
jb
mov
call
dec
pusha
dec
into
insl
cmc
inc
test
cmp
mov
or
sub
test
lds
and
cmpl
and
inc
jo
adc
inc
enter
mov
sbb
cmpsl
iret
xchg
inc
inc
adc
cld
pop
bound
aad
pop
mov
cmp
mov
xchg
mov
jo
adc
mov
ror
sarb
push
pop
shll
pop
sahf
lcall
lods
repnz
subb
bound
es
fisttps
xchg
addr16
xchg
sub
push
aaa
popl
out
jecxz
ret
mov
out
out
insb
xor
je
cmp
lods
push
pop
fisubrs
jge
dec
mov
mov
mov
fcoms
jnp
xchg
adc
mov
dec
fists
outsb
mov
subl
jno
inc
out
popa
iret
xchg
push
mov
scas
test
fdivs
shlb
lret
movsb
mov
orb
pop
roll
inc
sub
sub
mov
ss
les
or
sbb
xchg
rorl
pop
push
pushf
aad
insl
add
push
cld
cmpxchg
mov
shll
ljmp
in
dec
and
outsb
dec
lock
pop
pop
outsl
xchg
les
jno
lret
add
adc
int
mov
pusha
cmp
jb
data16
popf
or
rclb
out
pop
movsb
subb
lods
sbb
sub
mov
xor
add
pushl
fs
shll
and
sbb
lahf
dec
in
inc
shrb
pop
daa
fiadds
cmp
stos
inc
push
scas
movsb
fiadds
adc
imul
ljmp
or
dec
push
sbb
pop
movsl
fisubrs
out
pop
push
pop
shll
rorb
shll
addl
sarb
sbb
fiaddl
int3
cs
imul
mov
out
pop
push
mov
call
dec
mov
mov
in
adc
mov
fidivrs
pop
imul
mov
mov
push
xor
and
sbb
pusha
fsubrs
pushf
loopne
scas
xor
ja
jne
jp
or
outsl
movsb
mov
inc
cld
pop
lret
aaa
jg
sub
mov
inc
adc
jl
sbb
in
sub
dec
popf
stos
je
and
es
xchg
test
push
xchg
adc
repz
cld
pop
in
sub
cmc
xchg
inc
or
mov
iret
inc
fldpi
sub
mov
out
sbbl
xchg
mov
xchg
mov
pop
add
push
fcmovbe
mov
test
fwait
aas
mov
mov
add
or
rclb
or
xchg
and
mov
jno
icebp
jb
mov
fucom
dec
add
lods
sbbb
xor
jne
or
push
into
aad
lea
xor
jecxz
sbbl
lahf
push
push
xor
mov
fsubl
aad
dec
andl
cmpsl
jnp
mov
aam
adc
leave
sbb
divps
aaa
cli
xor
data16
sbb
stc
xchg
jmp
push
adc
and
xchg
cmp
cmpsb
mov
dec
jge
adc
in
pop
ljmp
push
mov
test
jle
jmp
lret
mov
daa
cwtl
fisubrl
imul
arpl
in
lods
lock
nop
jb
lcall
lods
stos
jno
cmp
jbe
fnsave
push
jmp
out
xchg
jecxz
xchg
mov
and
mov
imul
fdivr
inc
adc
dec
jg
je
jecxz
push
pop
in
daa
xor
dec
test
xchg
lahf
mov
xlat
lea
call
adc
dec
int3
dec
stos
mov
inc
nop
lock
jb
test
sub
cld
fstps
mov
mov
and
or
cmp
incl
imul
and
and
sub
aad
jnp
push
int
shlb
enter
dec
pop
data16
mov
in
and
pop
out
and
jecxz
jp
jno
sbb
mov
cmpsb
enter
cmpsl
mov
mov
xor
push
into
push
out
addr16
dec
ret
repnz
adc
fistpl
js
pop
js
mov
adc
pushf
sub
nop
rorb
ljmp
adc
cmp
imul
dec
inc
outsb
xlat
xor
push
in
lea
in
loope
push
ret
inc
data16
and
mov
fwait
lods
fstpt
inc
dec
xor
daa
popa
loop
cmp
mov
ret
pop
fbld
cld
insl
lock
mov
pop
rcll
loopne
mov
sub
add
pop
xchg
inc
and
mov
test
aaa
dec
push
push
adc
sbb
inc
pusha
inc
cmpsl
jl
imul
xchg
in
or
inc
aad
xchg
stos
jmp
mov
out
popa
addr16
dec
push
and
mov
cld
shll
sub
mov
mov
icebp
lret
or
add
xor
adc
dec
cmp
or
and
repnz
lcall
repz
cmc
cmpb
repz
enter
out
scas
sub
xor
xchg
subl
js
stos
and
andl
mov
fldl
push
cmp
and
mov
sbb
js
xchg
pop
ds
pop
fcomip
rcl
fisubs
fildll
mov
cmp
ret
insl
jge
mov
push
rcl
pop
or
mov
lock
insb
sub
lea
push
es
lods
xchg
add
fdivs
lea
js
pusha
xchg
cmp
ljmp
fwait
outsl
mov
jbe
insb
ror
or
loope
ds
sbb
mov
cmp
push
jl
mov
sub
addr16
loope
lods
ja
sbb
adc
inc
data16
sub
mov
adc
fwait
and
lock
sub
outsb
mov
push
arpl
sti
lea
cltd
and
jmp
jmp
jmp
push
loope
inc
sub
sub
imull
push
out
dec
lahf
mov
fidivs
inc
lcall
mov
pop
cmp
fildl
adc
dec
inc
inc
and
dec
and
pop
push
movsb
adc
mov
and
push
pop
fldl
lea
or
and
aas
cmp
mov
push
pop
cmp
cld
sub
sub
test
sub
mov
add
push
insl
or
sub
insl
jne
cld
popf
pop
mov
imul
mov
push
fcompl
xchg
insb
mov
inc
test
mov
jp,pn
adc
cmp
jle
jmp
mov
sub
out
loope
imul
cs
test
mov
xchg
adc
sbb
stos
xchg
and
outsl
push
scas
xor
in
cmc
stc
aad
xor
add
arpl
mov
pop
xchg
int3
dec
clc
loope
xchg
and
xor
or
xor
outsb
xor
sub
fidivl
aaa
adc
push
mov
and
sbb
scas
or
add
es
pop
sub
push
roll
push
test
sub
mov
lds
mov
mov
pop
repnz
shll
lock
in
inc
sahf
dec
lock
xor
pop
jns
popa
sbb
andb
or
adc
dec
mov
pop
xlat
in
divb
dec
ljmp
jae
in
adc
arpl
or
mov
lods
push
and
add
adcb
and
or
pop
push
mov
jo
adc
cmp
aas
rorl
dec
loop
mov
js
or
pop
in
loope
iret
les
push
and
adc
push
push
mov
adc
cmp
add
xchg
int
mov
rcrb
push
dec
push
je
xor
jecxz
bound
mov
push
jle
cmpsb
rol
mov
out
mov
pop
mov
add
or
lods
sbb
mov
xor
xor
inc
pop
dec
sbb
roll
jno
sbb
add
cli
adc
cmc
jo
push
mov
dec
hlt
xchg
jae
mov
icebp
dec
and
pop
pop
filds
cs
rcrl
mov
dec
aas
jnp
sub
and
aam
mov
faddp
insl
lahf
adc
dec
popf
inc
jge
ja
scas
leave
mov
test
fsubs
mov
sahf
push
lds
xor
lods
jno
mov
cmpsb
std
data16
iret
cs
pmulhw
inc
inc
imul
cmp
mov
mov
or
xchg
xchg
rclb
mov
in
xchg
in
or
lds
clc
cli
add
rcl
inc
fildl
imul
in
xchg
push
dec
mov
mov
inc
mov
jbe
fisttps
ret
testb
adc
fld
mov
test
or
repz
std
sahf
xorb
mov
jb
aas
push
mov
sub
and
push
pop
pop
bound
hlt
sbb
or
mov
daa
push
pop
fsubl
mov
fldt
or
cmp
xchg
lret
and
jge
mov
ja
cli
dec
clc
mov
cmc
jle
dec
xchg
pop
xchg
inc
bound
outsl
lahf
aam
movsl
mov
aam
mov
push
dec
stos
adc
mov
jge
lahf
stos
int3
mov
xchg
out
gs
addr16
insb
sahf
fimull
mov
sbb
mov
dec
pop
pop
orb
lea
aad
jmp
push
mov
dec
cli
sbb
jno
rcll
arpl
test
mov
nop
mov
and
pop
ds
xor
aam
rclb
out
push
mov
or
mov
fdivl
daa
dec
push
loop
or
sbb
adc
inc
lods
mov
cmp
rclb
iret
xor
adc
xchg
out
rcll
mov
pop
inc
pop
pop
cmp
push
jbe
push
out
add
not
sbb
cltd
mov
add
je
and
sbb
xor
ret
mov
cmpsb
jl
fwait
mov
xor
mov
in
mulb
cmpsb
dec
enter
push
addr16
cmp
inc
add
mov
add
shlb
jecxz
scas
sarl
ljmp
int
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
stc
push
inc
cmpsb
jge
popa
rcrb
or
hlt
fisttpl
fldl
or
sarb
repnz
mov
cmpsl
add
sahf
lret
sarb
inc
adc
xchg
negl
xor
xor
jp
jmp
cmp
xchg
mov
popa
sub
js
adcl
mov
test
cmpb
cld
pushf
dec
fs
scas
mov
dec
add
mov
pop
in
push
mov
xchg
mov
cmp
adc
sahf
dec
gs
sub
jnp
data16
sub
lcall
insb
cmp
stos
lods
mov
dec
sti
cmp
aas
inc
add
sbb
ja
lahf
inc
dec
cs
mov
in
mov
lahf
sbb
jge,pn
inc
mov
sahf
call
push
pop
pushf
push
inc
lods
pop
adc
lcall
loop
mov
ret
xchg
mov
sub
pop
mov
mov
into
outsl
cld
hlt
jb
add
cltd
imul
dec
add
mov
orl
das
push
mov
mov
inc
xchg
push
sbb
jl
lret
jle
sbb
xchg
movsb
std
xchg
ja
dec
add
testl
xor
dec
dec
push
or
or
add
sbb
dec
sub
xor
fisttpll
icebp
rorl
fildll
dec
shrl
gs
rclb
pop
push
push
dec
call
push
js
push
outsb
jae
inc
adc
in
das
mov
outsl
or
cmp
or
xor
xor
xor
inc
mov
fidivrs
popa
dec
add
lahf
sub
xlat
cmp
cwtl
movaps
mov
mov
xor
and
mov
aaa
cmp
sbb
mov
jmp
popf
ljmp
push
popf
rorb
pop
xchg
loope
fmuls
xchg
mov
ret
sbb
add
mov
cmp
ja
mov
rorb
push
jb
sahf
ret
add
xchg
cmp
jle
fldt
addr16
call
sar
scas
sub
push
sub
mov
jge
mov
or
cmp
adc
aas
shll
jle
fwait
xor
adcl
fmulp
push
xlat
push
fucomp
jae
cmp
or
add
dec
push
mov
cmc
enter
pop
lods
mov
flds
enter
cltd
sarl
loopne
and
cltd
fnstcw
dec
or
mov
out
mov
sbb
mov
out
inc
mov
std
or
loopne
in
fwait
lods
insl
fimull
aad
adc
or
lcall
lgs
cli
inc
mov
adc
int
lods
pushf
pop
aam
clc
subb
or
inc
inc
inc
stos
mov
jb
insb
lock
mov
fsub
fdivr
lcall
xchg
jbe
sbb
push
pop
data16
mov
arpl
push
sub
sub
gs
pop
sub
shll
fucomi
inc
jb
cli
sti
scas
cmpsl
mov
sbb
iret
std
jge
fwait
cwtl
fcomp
mov
bound
push
fadds
divl
ret
or
repnz
pop
sub
shl
ds
clc
cmp
push
push
data16
test
sub
fs
xchg
icebp
jmp
inc
dec
pop
mov
fisubrs
mov
imul
pop
test
pushf
stc
xchg
add
out
xor
aaa
lods
fwait
scas
pushf
lret
dec
cld
push
and
xchg
lds
mov
inc
shlb
movsl
adc
test
shrl
pop
lea
pop
enter
mov
push
jmp
insl
int3
jle
xor
data16
and
xor
and
in
in
xlat
sbb
fwait
rolb
stos
jb
push
fisttps
sbbb
inc
in
rclb
fs
insb
jmp
mov
sarb
fwait
jecxz
mov
cmc
pop
push
psubw
aad
cs
push
or
mov
adc
idiv
mov
push
inc
pop
je
clc
jb
into
addr16
xor
outsb
inc
test
jbe
push
jbe
sub
aad
fwait
insl
or
jb
cmpsb
jp
pop
out
inc
lea
ret
gs
int3
adc
or
mov
lds
adc
aas
addl
inc
insl
adc
cs
jl
pop
push
fs
sub
outsl
xchg
or
and
push
mov
insb
sub
int3
in
jl
sub
xor
push
and
ss
decb
sbb
dec
rcll
inc
dec
lcall
imul
pop
jno
sbb
arpl
int3
pusha
loop
in
call
repnz
adc
lret
js
cmp
mov
sbb
mov
pop
movsb
ret
sti
xor
mov
cmp
push
xchg
movsb
int
imul
clc
pop
in
bound
pop
aad
fdivl
push
or
mov
sbb
cmc
insb
int
or
cmpsb
inc
add
xlat
in
fadd
imul
cmp
xor
outsb
mov
mov
xchg
orb
pop
imul
jmp
push
jge
xor
nop
div
and
sub
mov
daa
sahf
shll
fsub
or
add
test
xchg
mov
cmp
in
push
xlat
or
cmp
dec
adc
add
insb
stos
jae
inc
inc
loope
xchg
scas
std
jmp
mov
in
insl
push
mov
jbe
jl
jmp
lea
mov
stos
insl
test
jp
test
icebp
pop
jns
mov
popa
lcall
insb
mov
dec
adc
cmp
mov
push
inc
mov
stc
js
mov
xchg
hlt
push
push
cmpl
std
push
loopne
add
movsl
inc
add
aaa
hlt
mov
jnp
adc
adc
leave
mov
cmpsb
xor
mov
jno
adc
nop
dec
sbb
xor
fcoml
aaa
push
in
mov
test
scas
negb
pop
stc
xor
fcmovnbe
lahf
mov
subb
ret
bound
fimuls
std
xor
lock
jb
pop
sbb
inc
or
sub
inc
stos
loop
dec
nop
arpl
movl
sub
loop
imul
aaa
in
stos
jo
outsb
adc
and
sub
pop
add
and
jl
mov
hlt
sahf
in
add
mov
mov
pop
fdivs
jp
aad
sar
cmp
daa
pushf
pop
pop
sub
int
sub
lods
lods
cmc
adc
inc
or
or
xchg
shl
scas
aam
stos
ret
push
inc
jnp
sub
fcmovne
fcoms
lock
out
stc
sub
lods
jb
ret
pop
push
in
push
push
xchg
clc
mov
jmp
fnstsw
fwait
inc
mov
jg
pop
pop
push
dec
push
ja
sub
inc
dec
imul
sub
lock
xchg
lods
sbb
sub
sbb
sti
fcoms
pusha
push
imul
sahf
and
push
mov
xchg
test
ds
and
sub
cmp
sbb
das
xlat
xor
pusha
push
xor
roll
loopne
push
clc
dec
and
insb
sbb
push
inc
sarl
sub
adc
sbb
movsl
sti
mov
jmp
inc
pshufw
outsb
or
mov
out
jge
xchg
adc
bound
in
cld
fildl
inc
inc
arpl
sbb
inc
inc
xorb
xchg
sti
mov
pop
xchg
sub
lods
xchg
movsl
jecxz
xchg
bswap
adc
lahf
in
or
mov
jb
pushf
jb
ds
xor
ss
sub
or
js
pop
xor
loopne
xchg
in
sub
jbe
in
out
fidivs
and
adc
lock
mov
mov
stos
jge
add
pop
jg
sub
cmp
or
movsl
js
test
mov
aaa
inc
mov
mov
fldenv
inc
and
adc
pop
pop
lcall
pop
xchg
cmp
mov
clc
adc
dec
lods
in
or
dec
cli
hlt
addl
cmp
into
dec
cs
add
lds
pop
push
daa
push
imul
and
aam
jle
pop
cmc
xchg
pop
adc
int3
jge
negb
mov
xor
and
xchg
sub
clc
fstpl
push
and
insb
les
adc
in
daa
addr16
xor
mov
fisubl
adc
dec
shl
mov
push
pop
and
rcrb
adc
repz
xor
fwait
test
adc
and
jns
dec
fprem
stos
pop
or
sub
fiadds
add
pop
insl
clc
gs
mov
cmp
jne
scas
icebp
mov
loope
jmp
push
jmp
popa
repz
dec
gs
pushf
popf
jo
lds
push
sbb
cmp
nop
jle
imul
lds
in
pop
stc
and
mov
test
mov
jge
call
jne
dec
xor
add
mov
push
scas
lea
sahf
rcll
cmp
popa
hlt
xchg
test
call
loopne
lret
adc
lods
xor
xchg
ss
js
push
sub
fistpll
add
jmp
adc
jno
leave
mov
xor
arpl
loopne
imul
adc
pop
inc
sub
adc
sahf
xchg
ret
push
add
jbe
icebp
into
jle
or
xor
xor
jle
lock
pop
jl
test
pop
scas
in
scas
fwait
mov
jbe
mov
fstpt
sub
xor
test
lods
lock
jecxz
xchg
hlt
notb
mov
or
sub
arpl
dec
mov
lock
out
enter
pop
pop
ja
aam
je
test
xchg
callw
shrb
push
cmp
scas
push
xchg
mov
lock
loope
arpl
aam
icebp
mov
add
xor
adc
inc
jae
jns
std
test
push
movsb
popa
jae
mov
add
mov
lods
and
sbb
xchg
icebp
sti
push
inc
dec
cwtl
inc
jo
pop
push
inc
and
jl
mov
sbb
cmp
test
mov
xor
push
es
push
mov
inc
popf
imul
xchg
pop
aas
cmpsb
into
clc
faddl
inc
shl
inc
mov
pop
push
stc
aam
inc
dec
mov
or
outsb
iret
insl
xchg
inc
push
in
cs
stc
dec
sub
inc
fsubrp
mov
lods
mov
push
xor
add
mov
cmc
pop
loop
fs
pop
addr16
js
sub
into
inc
cmp
mov
sbb
out
mov
xchg
dec
lahf
daa
sahf
cmp
inc
xor
clc
outsl
ficompl
shl
adc
push
mov
xchg
aaa
jno
cmpsl
adc
jp
leave
inc
cwtl
in
push
sub
rclb
iret
aad
adc
aaa
xchg
add
mov
mov
mov
mov
fcoml
insb
xchg
cmp
mov
jmp
jno
xor
out
pop
or
enter
or
push
sbb
mov
inc
xchg
or
inc
sub
mov
push
rol
inc
jbe
movsb
imul
pop
jecxz
xor
fmulp
add
das
sub
cmpsb
pop
arpl
push
and
scas
sahf
fstpl
rorl
xchg
aas
xchg
cmpsb
jle
leave
movsl
mov
ret
outsb
sbb
scas
add
std
pushf
outsb
lret
jnp
pop
xchg
mov
jecxz
inc
or
iret
icebp
sbb
xchg
rcl
pop
lds
dec
xchg
jg
adc
cwtl
xchg
mov
shll
sub
mov
mov
imul
ja
aas
or
ret
mov
dec
push
je
add
decb
pop
ret
jp
mov
sub
sbb
ljmp
test
push
aam
out
pusha
int
out
repz
sub
int3
pop
mov
les
pop
icebp
jmp
pusha
out
jb
xchg
xchg
nop
push
xor
and
bnd
rcr
mov
mov
xor
pop
and
jne
or
jp
dec
and
and
cmc
sub
xor
mov
js
mov
jle
fsubrs
jb
js
popa
popf
ljmp
jbe
push
scas
gs
xor
ret
mov
insl
mov
imul
loopne
loop
mov
adc
or
sub
shrb
arpl
and
stos
cmp
jl
add
sti
sbb
js
test
or
sub
fildl
fisttps
sbb
push
int3
jle
mov
rclb
daa
loop
inc
stos
mov
mov
dec
imul
mov
test
insl
sub
pop
mov
arpl
stos
sbb
nop
and
add
lea
inc
push
sbbb
cld
cwtl
pop
int
out
inc
subl
lret
adc
cmpsb
pop
push
inc
data16
push
sbb
cwtl
pop
jno
and
dec
add
jnp
sub
push
xchg
push
outsb
dec
data16
je
out
testb
and
mov
loop
mov
and
xor
mov
ret
jge
incb
jnp
push
inc
ljmp
push
pop
mov
je
xchg
push
repz
outsl
popa
adc
inc
dec
mov
loope
inc
sbb
adc
ss
mov
mov
pop
int
push
cld
sub
jo
loopne,pn
std
xchg
in
or
enter
cwtl
in
cmpsb
into
rorl
push
lds
jae
mov
popa
or
add
sub
stos
sar
inc
mov
mov
loope
ftst
push
jb
scas
test
out
dec
xchg
and
out
xor
daa
pop
inc
mov
sti
push
or
sbb
les
popa
in
mov
add
jne
xor
mov
mov
icebp
pop
xchg
mov
mov
mov
movsl
shll
popf
jno
push
push
mov
dec
dec
xchg
ret
pop
mov
sub
or
aaa
pop
push
test
jno
jne
iret
std
nop
pmullw
pop
mov
lret
test
lods
lcall
mov
sbb
sbb
pop
cld
nop
sub
sub
mov
inc
icebp
adc
outsb
cmp
cmp
push
pop
mov
loope
enter
push
popf
cmpb
dec
mov
lcall
icebp
and
les
mov
adc
gs
xor
gs
in
or
cmp
shlb
sti
or
je
pop
loopne
data16
ljmp
cmc
pop
xor
cmc
push
jne
jmp
pop
bound
cmp
fiadds
mov
fcoml
add
movsl
into
mov
mov
int
pop
xor
jns
mov
cld
mov
insl
addr16
repz
pop
mov
arpl
nop
fwait
sub
mov
fisubrl
cmpsb
in
cmp
jae
push
sub
xor
cwtl
lock
mov
inc
inc
sbbl
mov
mov
mov
jmp
push
cltd
sti
mov
push
ret
mov
mov
in
iret
shll
push
cmp
mov
mov
push
imul
cmp
gs
xlat
fs
inc
jno
cld
popf
lods
inc
pop
sbbl
leave
das
aam
mov
inc
ret
jle
movsl
sub
dec
and
sbb
test
dec
push
lods
daa
in
out
push
and
fidivrl
ss
dec
test
pcmpgtb
xorb
loope
xor
jmp
jmp
in
cltd
out
icebp
and
mov
push
pop
cmp
insb
aas
fdiv
fsubl
sub
daa
push
movsl
cmp
mov
aam
cmp
fisubs
leave
repz
movsl
push
cmp
fadds
repnz
xor
into
xchg
xor
pminsw
orb
pmullw
ja
mov
xchg
das
dec
dec
sub
and
es
mov
sbb
sub
adc
and
unpckhps
jecxz
dec
add
outsl
fidivrl
and
lock
sbb
clc
int3
mov
xor
mov
add
out
mov
pop
cmp
sti
call
stc
cmpsb
bound
cmp
test
arpl
xchg
test
cmpsl
sbbb
jo
mov
adc
and
aad
xor
pusha
out
sbb
jb
jl
rclb
dec
pop
pop
fsubl
jno
std
cmp
jbe
and
inc
sbb
inc
sahf
or
fldt
cmp
stos
enter
ss
into
ja
aad
sub
xor
cs
mov
lods
jae
xor
and
or
cmc
mov
dec
mov
jo
mov
cmpsl
jbe
dec
xchg
lret
std
inc
movsb
inc
cmp
clc
mov
xchg
mov
cli
rcr
inc
out
push
std
div
shlb
nop
mov
push
ja
xlat
mov
and
mov
shrl
mov
dec
lods
inc
lret
cmp
xor
push
dec
push
int3
pop
add
or
pop
xor
xchg
fstl
inc
xor
movsb
out
jo
stos
idivb
xor
xchg
movsb
cli
inc
push
xchg
dec
xor
jmp
sahf
adc
mov
popl
cmp
or
inc
sahf
dec
push
out
or
add
pop
das
add
cmc
js
jbe
xchg
inc
pop
into
cmpsl
or
cmp
cmp
orb
mov
cli
jno
mov
mov
and
xchg
add
xchg
adc
mov
rolb
ret
test
adc
aam
fists
loope
es
stos
mov
icebp
mov
pushf
adc
mov
sarb
pop
hlt
mov
mov
aas
orb
fildll
mov
data16
mov
mov
out
jmp
cmovs
and
in
inc
adc
inc
sub
xchg
cmpsb
xchg
sub
pop
cld
cmpsl
in
mov
shr
ljmp
jecxz
lahf
or
imul
ffree
stc
ffreep
jbe
test
xor
pop
gs
or
sbb
xchg
xchg
mov
mov
mov
in
jno
pop
fs
mov
mov
or
mov
lahf
aaa
daa
mov
mov
pop
dec
dec
cmp
mov
push
aad
addl
adc
popl
dec
scas
mov
int3
push
and
mov
sbbb
add
jbe
jne
mov
sbb
into
or
pop
mov
sbb
or
adcb
or
in
xlat
adc
rcll
sbb
mov
test
xchg
mov
xchg
cmp
mov
adc
mov
out
dec
push
lock
jmp
add
mov
sbb
frstor
lahf
adc
out
cmpsl
fmul
jp
in
add
add
in
in
cmp
inc
pop
mov
xorl
leave
insl
or
or
and
or
jecxz,pn
mov
shrb
mov
jns
sbb
leave
cmpsb
push
in
orb
pop
fstl
dec
testb
cmp
aaa
push
addb
pop
jb
xchg
sahf
inc
pop
push
xchg
mov
jmp
bnd
dec
pop
inc
or
mov
mov
aad
int3
in
inc
adc
lock
xchg
mov
scas
dec
inc
arpl
shll
rorl
cli
push
shr
fmuls
pop
and
dec
stos
pushf
aas
fwait
inc
cmp
mov
scas
mov
sbb
loop
push
rolb
lea
pop
mov
xor
jne
push
xorl
and
adc
mov
inc
nop
add
fbstp
repz
popf
aam
cld
test
out
xorl
fidivs
sub
adc
xor
dec
lock
sbb
aaa
inc
inc
insl
jno
cmp
leave
mov
mov
outsl
xor
inc
subb
add
popf
adc
lods
cltd
inc
scas
xor
scas
mov
pop
xor
xchg
dec
lcall
lods
sub
loope
divl
or
add
popa
pop
orb
pop
push
stos
sub
aas
loope
dec
loope
popa
cmp
ror
mov
adc
aad
xor
pop
pop
inc
and
pusha
jmp
leave
in
negl
aam
mov
sub
add
pop
lret
xchg
push
pop
lods
addr16
xor
imul
inc
sbb
inc
xchg
fs
packuswb
pushf
add
jne
mov
xchg
and
add
mov
cli
mov
fiadds
stos
xchg
sub
fidivl
cmp
adc
pop
mov
dec
lret
imul
xor
ljmp
push
mov
data16
push
les
jb
mov
loopne
mov
inc
fisttpl
out
lcall
inc
out
dec
ret
push
add
lods
xchg
out
sbb
sbb
pop
inc
xor
mov
dec
pushf
scas
xchg
pop
add
add
mov
das
push
fists
cmp
xchg
jl
add
subb
out
sti
mov
or
cmpsl
mov
inc
sub
mov
in
push
es
popa
mov
pop
and
mov
add
mov
mov
ret
xchg
fstpl
insl
and
jle
xchg
cmp
mov
inc
popf
scas
jge
xlat
cmpsl
lcall
inc
cld
aad
adc
cmpl
and
push
leave
insb
xchg
pop
movsl
dec
fwait
add
int
or
xor
loope
sahf
in
mov
cmp
cmpl
mov
jmp
jo
ret
pop
lret
scas
sub
mov
mov
and
sub
add
and
ret
jmp
scas
mov
add
push
jl
or
sti
testb
insl
addr16
lcall
mov
leave
xchg
jns
imul
sbb
sub
dec
aaa
xor
popa
jmp
cmpb
fisttpl
fimull
shll
push
ja
lock
sbb
sti
in
adc
sti
cwtl
into
shl
ljmp
dec
subb
mov
shl
jl
mov
adc
pop
add
divb
jle
leave
mov
mov
push
and
pop
jno
dec
sbb
into
add
loope
push
jb
sub
xchg
xchg
mov
push
test
les
repnz
in
ljmp
push
ds
xchg
rolb
pop
jle
jbe
cmp
stc
mov
lods
dec
sbb
jns
stos
dec
dec
jnp
inc
mov
adc
inc
sbb
enter
arpl
or
sbb
push
and
inc
cmp
outsb
shrb
pop
adc
sub
push
sub
and
or
sbb
cmpsb
xchg
cltd
cltd
shr
je
jmp
out
notl
or
jecxz
fistpll
push
sbb
or
popa
sbb
push
jecxz
xchg
fldt
mov
mov
jae
dec
scas
lds
lret
push
adc
andb
jmp
mov
into
cli
inc
test
addr16
out
call
pop
shrb
shll
icebp
test
xor
pop
fdivs
push
clc
sbb
fdivl
dec
and
mov
dec
ljmp
aaa
sub
dec
aam
jmp
test
dec
mov
mov
or
scas
push
neg
aas
int
das
sbbb
jne
fdivrl
mov
lds
repnz
int3
and
imul
xchg
dec
or
jns
cmp
mov
outsl
movsl
aaa
mov
mov
mov
shl
ret
mov
sub
mov
jp
adc
jno
imul
icebp
xor
fwait
loop
mov
aaa
dec
fnstcw
ljmp
cmp
pop
lahf
fsubrs
into
sbb
inc
pop
xchg
pusha
out
call
jns
sbb
repz
mov
push
and
into
inc
cmpsb
fwait
jb
mov
insb
lret
mov
inc
loope
mov
xchg
dec
mov
mov
dec
sbb
jg
and
pop
out
in
sbb
je
mov
test
repnz
xor
xor
sbb
push
cmp
xchg
adc
pop
ds
out
push
or
sbb
outsb
push
je
cmp
mov
inc
ret
js
out
xchg
adc
pop
out
dec
inc
out
aas
paddsw
pop
lods
sub
push
mov
outsb
gs
pop
lds
std
adc
lea
xor
mov
xchg
mov
add
fldt
mov
add
adc
push
mov
sub
aaa
mov
cmp
loop
push
fdivp
rolb
mov
dec
sti
jbe
or
pop
inc
das
jo
inc
jns
or
sbb
sbb
pop
jg
sbb
mov
mov
popf
leave
mov
inc
mov
test
leave
xchg
stos
fdivrs
jno
mov
and
aas
add
dec
mov
hlt
xchg
data16
xor
ss
pushf
mov
stc
mov
add
dec
adc
xchg
or
adc
lock
xchg
jae
sbb
sti
mov
jae
out
mov
aad
mov
and
shlb
jge
sar
ret
xchg
das
dec
pause
sub
jbe
mov
je
xchg
sub
mov
addr16
rorl
jge,pn
push
xor
lret
dec
xchg
mov
pusha
lcall
mov
enter
mov
aaa
push
mov
jo
fnclex
add
imul
jnp
hlt
push
xchg
sbb
push
cmp
aad
js
mov
loop
cld
mov
and
inc
add
fsubs
fimuls
insb
and
insl
and
sub
cmpsb
mov
xor
arpl
pop
repz
xchg
rolb
cmp
add
lcall
jg
ja
leave
aad
dec
pop
insb
test
pop
cmpsb
jns
scas
mov
cmp
dec
lret
pop
mov
aas
or
mov
cmpsb
mov
xorl
orb
cmpsl
and
in
and
ja
clc
ja
sti
stos
mov
fidivs
rorl
dec
pop
cltd
xchg
xor
add
push
test
std
pop
sbb
xchg
fldl
roll
xchg
xchg
xor
xchg
and
dec
orl
dec
xchg
xor
jo
push
inc
push
dec
mov
adc
cmpsl
mov
aas
in
fs
jns
es
xchg
xor
pop
fwait
cli
das
out
cld
movsl
pop
xor
sub
mov
cmp
rep
frstor
in
test
sbb
mov
mov
lret
js
loope
xlat
ds
mov
sub
fstps
clc
and
cmp
sbb
push
dec
call
mov
insl
cmc
dec
loop
cli
sbb
ja
add
xchg
sbbb
call
xchg
mov
movsl
sub
xchg
nop
lock
lods
ficoml
dec
mov
pop
push
dec
scas
scas
stos
ret
cltd
iret
les
std
or
xchg
stc
xor
mov
fldt
movsb
mov
xchg
dec
faddl
test
aad
inc
dec
dec
push
call
das
mov
sub
cmp
xor
cmp
fiadds
and
add
jb
lods
jbe
mov
pop
enter
pushf
ror
mov
xlat
jo
js
movsb
pop
pop
es
out
sahf
xlat
pop
mov
mov
lcall
jle
xchg
fimuls
lcall
scas
cmp
pop
xor
dec
mov
call
outsl
andl
mov
fcmovnbe
and
adc
inc
dec
jl
jo
pop
shrl
push
lods
shrl
mov
mov
stos
dec
ret
int
sbb
adc
mov
push
cmp
cwtl
push
and
in
and
fsubr
pop
dec
aaa
nop
mov
daa
out
insl
dec
popa
movsb
int3
xchg
out
pop
movsb
popf
jne
xorl
inc
clc
negb
popf
sbb
inc
dec
in
push
testb
mov
pop
sbb
imull
dec
push
mov
movsl
xor
sbb
xchg
rcrb
lods
push
jb
dec
pop
shrl
mov
push
out
cmp
fs
dec
mov
out
add
cmc
sbbb
icebp
shl
ja
es
mov
mov
cs
mov
add
pop
or
mov
sub
repnz
mov
fisubs
mov
mov
cs
test
pop
xor
sbb
pop
loope
outsb
cmp
add
in
stos
lock
xor
xchg
ficoml
xor
xlat
dec
mov
loop
setne
adc
movsb
lock
add
aaa
addb
repz
inc
mov
cmpsl
sbb
jge
dec
cmp
stc
lahf
in
lcall
jnp
pushf
notb
leave
inc
scas
cli
mov
cld
jmp
or
xchg
icebp
fbld
call
mov
push
fisubs
test
rcrl
or
jne
mov
sysexit
adcl
shl
and
pop
fsubr
xchg
inc
and
fwait
jle
in
sti
and
sbb
adc
or
cld
add
cmpb
mov
sub
dec
xchg
in
sbb
adc
ss
dec
cmpsl
mov
pop
ds
ljmp
jecxz
lock
mov
movsl
stc
mov
xor
fucomip
lock
mov
and
jle
inc
xchg
addl
push
xchg
int
push
int3
push
xchg
int
mov
das
xchg
inc
lcall
scas
dec
jge
insb
pop
jl
jb
pop
loop
fisttps
mov
dec
ds
inc
call
lock
inc
jno
adc
push
fdivrs
clc
pushf
ret
mov
push
insb
leave
dec
mov
shlw
mov
xchg
jo
mov
or
pop
dec
push
lds
movsl
rcr
add
pusha
fsubs
adc
mov
scas
adc
lahf
testb
push
adc
movb
imul
mov
shrb
in
mov
push
sub
adc
inc
pop
cltd
inc
lock
cs
inc
das
mov
xchg
or
push
adc
xor
push
jae
mov
lds
mov
mov
aaa
mov
ss
repz
js
mov
pop
imul
pop
call
ret
or
sti
and
pushf
mov
xchg
inc
pop
jo
fdivrl
sub
repnz
in
xchg
paddusb
ljmp
shrl
sbb
les
mov
and
or
xor
popa
ja
mov
pop
lret
test
pop
leave
and
sub
jg
clc
or
movsb
xor
xchg
fs
push
xor
jl
and
div
jge
pusha
adc
xchg
xor
nopl
push
out
xor
jnp
fsts
out
mov
int3
inc
push
mov
out
mov
or
adc
mov
mov
lahf
int
fisttpll
sbb
adc
out
imul
jns
jp
adc
inc
inc
adc
jne
pop
sbb
adc
add
stos
shrb
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
clc
lock
and
rcrb
or
xor
lods
jnp
mov
mov
test
jp
test
lret
hlt
popf
ret
hlt
mov
mov
dec
ss
sub
shlb
mov
adc
incl
fisubl
enter
add
push
adc
xor
xchg
jp
or
lahf
scas
rol
add
xorl
jns
dec
iret
movsl
mov
inc
test
sub
pop
mov
ljmp
cmp
dec
jp
push
test
lock
cli
movsl
adc
test
out
das
pop
ss
jmp
pop
out
subb
sub
movsb
stos
dec
ret
iret
aad
bound
or
mov
push
not
cmp
mov
pop
or
cmp
or
push
dec
xorb
decb
jge
test
mov
inc
jnp
lods
pop
dec
mov
dec
push
and
mov
lcall
or
je
rorl
cltd
pop
jae
into
popa
xchg
ret
stc
push
inc
daa
xor
data16
loope
nop
dec
cwtl
fcoml
mov
adc
mov
xchg
xor
call
clc
push
jns
popf
cld
icebp
pop
pusha
addl
dec
lahf
xchg
into
sub
sqrtps
rcl
pop
pop
sarl
push
lea
gs
in
push
ljmp
imul
lret
leave
jge
gs
mov
std
push
scas
movsl
bound
int
cmc
scas
addl
add
lea
dec
adc
call
test
int3
adc
cmp
aas
test
push
fscale
and
xchg
xorl
mov
or
cmpsl
outsl
xor
insb
aam
es
and
adc
push
mov
jb
cmp
movsl
xlat
test
mov
fstp
aad
out
mov
addb
sbb
icebp
std
aaa
stc
icebp
test
stc
fidivrs
or
dec
out
sub
add
jno
jmp
pop
into
jmp
dec
cld
jmp
fidivl
jns
mov
test
hlt
repnz
inc
add
je
call
lods
das
ret
mov
std
movsl
mov
into
and
jnp
ret
aam
jno
cmp
imul
xor
pushl
aad
rcrl
xor
ss
out
cmp
and
lods
cwtl
sbb
push
cmpsb
cmp
in
ja
outsl
outsb
repz
in
movsb
ja
xchg
mov
and
push
mov
lahf
add
mov
xchg
jl
ret
sbb
popf
mov
repnz
add
mov
out
sbb
sti
jp
push
in
or
or
push
lods
mov
push
daa
int
insb
mov
das
sbb
popf
pop
lcall
xchg
xor
and
cltd
clc
adc
sub
mov
xchg
es
xor
sub
pop
push
insb
filds
les
xchg
out
cmp
incb
add
ja
mov
mov
jl
daa
movsl
sti
insl
bound
mov
sbb
ret
and
ljmp
daa
imul
lock
adc
inc
push
mov
stc
insl
dec
sbb
lret
inc
test
iret
loopne
mov
pushf
aas
xor
fwait
push
shrb
xchg
gs
and
enter
test
adc
mov
fidivl
push
aam
cmpsb
hlt
addr16
loop
loope
or
sub
xchg
sub
test
int3
repnz
lea
popf
sbb
pop
lods
jmp
xor
cmp
adc
xor
fwait
push
mov
sbbb
fiadds
pusha
sbb
mov
test
adc
xlat
mov
or
adc
movsb
lods
pusha
and
lret
shrb
or
enter
ficompl
mov
cmc
jbe
pop
lods
cmp
popf
shll
popf
repnz
fldl
out
lods
fldl
and
xchg
gs
and
sahf
jmp
or
jno
jb
arpl
xchg
jbe
jecxz
inc
jl
mov
test
mov
je
push
jg
xor
lret
cmp
add
les
inc
mov
inc
in
jg
out
add
mov
mov
xchg
cltd
test
xchg
mov
outsb
mov
subb
add
sbb
jmp
fs
xchg
repz
in
insl
loope
add
xchg
mov
movsl
and
lret
mull
mov
or
push
movsl
lcall
imul
push
ss
aam
xor
fidivrl
xor
jne
into
mov
setge
push
push
jp
and
popa
roll
insl
xchg
fldpi
adc
fildl
hlt
xor
inc
iret
pop
sti
imul
enter
pop
ss
les
mov
pop
and
jmp
cmp
mov
or
ret
jae
je
into
in
out
pushf
repz
sub
add
lods
jmp
pop
lods
fmuls
or
cmpsb
addb
icebp
push
call
mov
mov
int
lcall
dec
out
xchg
sbb
mov
shlb
mov
addr16
sbb
adc
fwait
divl
sub
mov
add
dec
sbb
xor
loope
je
mov
sub
leave
mov
mov
ja
in
lds
pop
sbb
mov
fsubp
call
mov
or
mov
shr
rcrb
push
add
insl
fcomps
fmulp
add
mov
outsb
and
stos
mov
xor
dec
cmp
jmp
mov
dec
jo
inc
rcll
lds
add
mov
sub
or
push
xchg
xor
jl
jmp
jmp
xchg
imul
mov
mov
pop
add
hlt
cmp
and
jge
inc
jecxz
imul
ret
sub
xor
sbb
push
cmp
cmp
notl
mov
aas
cmpsb
fstl
iret
dec
aas
jnp
dec
stc
mov
add
loopne
push
adc
andb
outsb
or
andl
scas
movsl
jns
lcall
in
xor
aam
add
mov
loope
xchg
adc
mov
pop
pop
cwtl
in
pop
les
loopne
dec
mov
lea
mov
xchg
fmull
ret
ret
add
les
ficoms
ljmp
leave
add
xor
in
cld
test
or
pushf
cwtl
lret
jbe
inc
push
faddl
inc
cmpb
insb
in
lret
lods
inc
fsubrl
in
inc
sbb
or
xor
ss
shl
xchg
add
jae
lahf
addl
xchg
aas
push
mov
push
fisubrl
or
lock
add
fisubrl
push
xchg
cmc
pushl
sub
dec
or
insb
jno
adc
cmpsl
mov
int3
repnz
xchg
cwtl
lret
sbb
in
sbb
daa
xchg
cmp
xchg
test
or
rol
mov
mov
lret
mov
mov
aad
call
repnz
xor
mov
gs
test
sub
jne
sbb
sub
mov
lcall
xchg
icebp
pusha
andl
mov
ret
mov
jb
shr
push
mov
ror
dec
and
out
jge
shll
dec
and
test
pop
cmp
xor
mov
sub
mov
es
nop
push
hlt
test
add
out
and
or
xchg
arpl
ficoms
add
cmpsl
jmp
add
mov
je
lahf
xor
dec
add
movsl
sub
subb
fmull
xchg
adcb
and
or
push
jmp
mov
pop
jns
fstl
loopne
mov
push
aad
xchg
imul
and
fisubl
roll
mov
cmp
cmp
dec
mov
and
add
movsl
or
je
fcmovnbe
popa
cltd
es
iret
push
repnz
cli
into
cs
les
jb
pop
pusha
mov
test
imul
jmp
es
in
or
mov
jbe
mov
mov
jbe
in
mov
test
mov
repnz
icebp
mov
cmp
ret
aam
bnd
aas
lahf
test
xor
scas
xor
or
xchg
rcrl
pop
xchg
mov
and
mov
xchg
stc
cmp
pop
dec
fwait
jno
shll
sub
lds
iret
sbb
icebp
popa
rcll
cmp
iret
or
pushf
in
push
out
repz
pop
addr16
dec
xor
lds
rclb
in
cmpsl
mov
scas
jle
loope
aam
dec
in
je
cld
mov
mov
xor
cmpxchg
mov
out
or
stos
lock
call
mov
inc
and
fwait
inc
mov
sbb
int
packuswb
pop
xchg
sbb
mov
adc
dec
movsl
add
sbb
jg
test
aam
lret
in
xor
inc
mov
outsb
arpl
add
in
mov
add
shrb
push
ljmp
dec
sub
int
lods
cmpsl
mov
cmc
jns
pop
lcall
push
repz
cmp
push
push
sbb
stos
popf
jbe
mov
add
fsubrl
in
xchg
stos
or
adc
push
jne
cmp
pushf
push
stos
jecxz
adc
sahf
sub
test
rcll
ds
dec
sub
dec
push
cltd
and
dec
test
arpl
dec
loop
lret
outsb
cld
and
pop
mov
out
xchg
mov
test
iret
push
js
mov
xchg
std
vmread
inc
in
and
pop
iret
movsl
les
jecxz
jne
jns
gs
js
lahf
mov
xor
and
cld
pop
or
cld
inc
mov
cmp
and
inc
jbe
sbb
cmp
test
popa
push
mov
push
loopne
inc
push
sub
adc
testl
pavgw
popa
adc
stos
mov
or
lret
ret
mov
gs
mov
das
mov
adc
cmp
add
pop
lea
cmc
int3
mov
xor
inc
push
daa
fisttps
mov
lcall
mov
xor
nop
adc
out
shlb
and
je
pusha
add
mov
push
int
jmp
fdivr
and
ficompl
jb
cmp
aad
repnz
sub
jl
adc
decb
push
jb
mov
mov
in
xchg
cmp
dec
out
aam
sbb
sbb
stc
das
and
into
mov
call
js
into
out
sti
mov
outsl
and
mov
lret
lods
icebp
xor
les
jb
clc
and
add
push
shr
push
jns
ja
arpl
cmp
xchg
mov
adc
loope
mov
cmp
in
outsl
push
lret
push
push
popw
aad
sarb
mov
push
out
out
ret
ja
push
cwtl
shlb
xor
mov
push
adc
rclb
flds
push
stos
jbe
mov
orb
loop
shll
xor
das
lea
pop
pusha
sub
xor
aad
inc
loopne
dec
fists
or
movsb
inc
jnp
mov
xor
cmp
lods
addr16
cmpsl
js
dec
cmp
inc
bound
imul
sbb
dec
not
popa
mov
cs
jg
movl
pop
xchg
test
or
roll
das
sub
sub
sub
lock
mov
add
ret
stos
mov
std
scas
and
outsl
xor
cmpsb
sub
je
scas
jge
xchg
cmpsl
aad
fwait
outsl
sbb
push
or
insb
pop
jmp
mov
jge
jne
xor
mov
xor
push
push
jle
repnz
jbe
out
mov
sti
pop
jo
mov
add
jne
add
push
nop
lock
inc
sbb
push
and
adcl
pop
test
loope
xchg
in
bound
sub
sub
add
jg
inc
inc
aas
sub
pop
clc
sbbb
add
add
cmpsl
sbb
icebp
push
sbb
arpl
xchg
mov
xlat
add
xorl
jne
jmp
fs
stos
xor
inc
lea
push
jmp
mov
or
or
rcll
jno
call
mov
mov
xchg
call
adc
ffree
adc
xchg
inc
sub
mov
dec
xchg
push
cmp
orl
sub
stc
add
push
mov
xchg
enter
scas
call
xchg
out
outsb
test
xor
repnz
mov
inc
jg
jmp
jmp
rol
adc
cld
fldcw
in
pop
pop
fists
aad
mov
pop
mov
movsb
push
insb
jmp
push
dec
jge
add
jne
ficompl
mov
in
aas
repnz
add
jns
pop
addl
or
fwait
cwtl
or
mov
sahf
mov
inc
fbstp
cmp
inc
or
inc
inc
insb
cld
sub
je
gs
test
xor
jne
rclb
imul
push
or
jnp
in
jbe
test
mov
repnz
mov
insb
neg
push
pushf
fisubl
data16
or
pop
xor
mov
fisubrl
in
insl
or
dec
xchg
fistps
jbe
outsb
movsb
ficoml
inc
mov
faddl
cs
out
jecxz
jns
mov
cld
int3
das
xchg
push
cld
or
jle
out
inc
mov
inc
push
mov
and
testl
xchg
shrl
mov
movsb
mov
inc
cmp
sbb
jbe
int3
jb
sub
popa
push
adc
dec
dec
sub
pop
daa
xchg
xor
inc
dec
mov
dec
pop
mov
jecxz
dec
incl
push
pop
adc
lds
pop
and
push
pop
aaa
push
and
pop
sbb
call
fsubrs
out
push
jbe
ljmp
and
cmpsb
xchg
dec
push
imul
dec
adc
mov
inc
aad
cwtl
push
xor
xchg
dec
cmp
push
inc
fwait
test
sub
clc
aas
test
cli
push
insl
jne
mov
jns
cmp
mov
cmc
mov
push
push
adc
inc
loopne
pop
pop
pop
cld
mov
push
sbb
rolb
shrb
mov
xchg
pop
outsl
push
jne
xchg
fprem
add
aas
aaa
aaa
mov
lcall
cli
add
and
dec
mov
and
insb
pop
adc
push
into
pop
sub
out
pop
insb
repz
rcrb
pusha
rorb
add
push
mov
add
nop
pop
push
sub
imul
lret
inc
jp
dec
fwait
mov
lahf
out
fimuls
jnp
inc
repnz
imul
or
xchg
repz
fwait
mov
mov
adc
sbb
sbb
push
icebp
pop
add
out
cs
sub
fisubrs
inc
pusha
mov
sbb
in
jg
call
test
das
shl
jne
in
push
cmc
jmp
sbb
lahf
mov
xchg
dec
xchg
fadds
out
mov
mov
test
addr16
mov
push
add
mov
adc
pop
into
cwtl
jmp
scas
push
xchg
aam
jbe
inc
ret
inc
and
dec
lea
roll
dec
push
test
insl
push
testl
xchg
mov
mov
add
orl
sub
mov
xor
xlat
xor
test
cs
jnp
roll
aam
mov
jae
inc
lahf
ret
mov
jo
cmc
and
clc
mov
into
mov
lea
xchg
shll
dec
sbb
mov
sbb
fisubs
test
lock
ds
add
xchg
mov
arpl
cmp
jle
xor
js
pop
xor
stos
xchg
cmpl
push
cmc
lret
or
sbb
xor
pop
or
fldt
pop
sbb
push
sub
mov
aas
mov
repnz
imul
pop
out
xor
popf
xchg
xchg
mov
addl
bound
mov
mov
mov
cli
test
push
xchg
mov
pop
sub
mov
cvtps2pi
mov
lahf
inc
jnp,pt
mov
sahf
cmp
test
ja
sub
lret
sbb
arpl
popf
movsb
les
dec
lds
out
ret
push
dec
pop
int3
je
push
shll
mov
push
jecxz
rorl
rcrb
mov
push
push
je
fscale
or
fcoml
mov
add
shll
lods
xchg
adc
push
mov
aam
xchg
and
and
mov
fnstenv
xchg
sbb
iret
das
dec
mov
sub
sub
push
inc
icebp
mov
inc
dec
fs
xchg
dec
js
mov
in
sbb
jecxz
and
or
int3
mov
aaa
das
sub
cmpsb
or
scas
add
add
push
mov
aas
adc
cld
loop
pop
and
sbb
bound
ljmp
ss
or
mov
mov
call
sbb
mov
leave
insl
sbb
jmp
sub
mov
adc
dec
fwait
jg
loope
mov
cmp
xchg
mov
jno
out
cltd
stos
arpl
shll
add
in
pop
mov
fsubl
mov
int
push
call
insb
xchg
xor
adc
xchg
es
xlat
cmpsl
xchg
or
cmp
lods
jbe
out
fcmovne
sbb
shl
push
and
or
sbb
and
in
ja
lret
push
sub
nop
cmp
testb
pop
idivl
call
negl
cmp
fsts
hlt
out
inc
xchg
jne
dec
add
scas
or
jns
mov
iret
sbb
fcom
test
pop
subb
lcall
mov
xor
push
sub
xor
sbb
adc
jbe
pop
std
sub
cmpsl
jmp
xchg
and
iret
sub
shrb
movsl
push
or
sub
mov
mov
lahf
faddl
pop
jns
stos
xchg
xor
cmp
divl
out
pushf
imul
jecxz
stc
jns
stos
cmp
push
fistps
jg
xadd
je
loopne
es
leave
repz
jmp
pop
jecxz
sbb
and
add
mov
cwtl
sub
push
inc
xor
xchg
cmp
lock
mov
cmp
orb
lds
pop
rorb
gs
aad
inc
xchg
test
fsubs
xchg
pop
test
scas
cmp
mov
pop
jle
cld
push
sbb
mov
pop
cmp
inc
lret
scas
outsb
fisubrl
inc
icebp
inc
cs
xor
int3
sbb
test
push
andb
jae
icebp
shr
imul
mov
adc
sbb
push
xor
dec
mov
mov
pop
jp
and
cs
jbe
rcrl
cmp
les
pop
jecxz
call
leave
mov
daa
leave
pushf
jnp
xor
mov
stos
add
sti
mov
out
or
sbbl
js
adc
gs
cltd
jp
pop
cmpsl
pop
inc
test
testl
mov
test
sbb
or
in
xchg
fidivrs
call
int
std
subl
daa
lock
jmp
push
lret
add
push
pop
sbb
and
lret
fidivl
pop
hlt
or
and
adc
or
cmpsl
jns
outsl
mov
mov
lret
sbb
push
adc
pop
cld
sbb
rorl
daa
pop
dec
aas
sahf
adc
les
rcll
xchg
lock
dec
pop
and
int3
out
stc
fsts
pop
sahf
cmp
mov
pop
sub
cwtl
adc
push
dec
pusha
stc
and
stc
sbb
inc
pop
fisttps
aad
fadds
mov
ret
scas
out
push
call
dec
cmp
jmp
xchg
pop
das
aas
pop
test
int
fucomip
sbb
mov
mov
xchg
jno
jle
jbe
add
call
mov
sbb
dec
mov
sub
cmp
insb
push
icebp
aas
xchg
popa
inc
mov
xchg
mov
out
fs
scas
lods
mov
imul
pop
jae
in
lret
or
roll
jno
cmp
mov
lcall
sti
dec
enter
lea
xchg
push
and
push
dec
dec
inc
xchg
jno
pop
mov
js
cmp
dec
ds
cmp
sbb
fisubs
xchg
subb
pop
loop
pop
out
pusha
or
pushf
push
lods
and
rorl
in
or
in
pusha
or
mov
ret
out
jle
or
xor
sub
lsl
ljmp
xor
mov
xchg
jbe
push
push
add
mov
lahf
sbb
mov
divl
push
xchg
dec
and
jl
mov
inc
cmp
lock
enter
movsb
cli
incb
push
imul
std
dec
adc
adc
add
repnz
pusha
xor
pop
mov
sub
sub
mov
jge
jns
rcr
ret
jno
sub
jle
xchg
popa
adc
call
hlt
jl
xor
movsb
ret
inc
mov
mov
mov
mov
inc
and
jle
outsl
in
pop
nop
aas
sub
or
movsb
jl
cmp
gs
pop
or
arpl
insb
mov
sub
pop
dec
call
aas
fdivrl
push
mov
test
ds
orb
cmp
pop
icebp
outsl
sbb
dec
aam
enter
lods
daa
movsl
into
mov
mov
xchg
dec
push
pop
push
out
cs
pop
cmp
mov
or
cmc
fcoms
test
add
adc
mov
cmp
mov
push
test
mov
fiadds
fs
cmp
cmpsb
mov
sub
jl
adc
test
lock
pop
repnz
test
imul
orl
rclb
aaa
inc
lcall
jg
cmp
fidivl
adc
xor
jns
loope
add
push
hlt
jb
jno
aad
mov
add
adc
sub
adc
mul
xchg
pop
mov
or
rcl
das
fwait
inc
stc
fwait
scas
or
fmuls
mov
push
icebp
sahf
pop
push
inc
cmpsb
lret
adc
imul
push
ja
mov
sbb
add
fsts
lock
pop
fcomip
mov
lcall
xchg
mov
mov
test
jle
jbe
dec
in
xor
or
sarb
cmp
mov
mov
test
push
xor
xchg
lcall
sti
mov
aas
cmpsl
popa
jl
es
test
fstps
mov
pop
js
push
pusha
mov
jecxz
orl
inc
sub
jecxz
jl
dec
or
clc
popf
pop
mov
es
xor
xchg
dec
or
test
cmp
xchg
inc
imul
or
jge
call
insl
and
cwtl
lcall
stos
in
adc
add
sbb
mov
inc
setb
add
xchg
fisubrl
cmp
imul
add
jg
xchg
adc
dec
les
imul
mov
pop
lret
and
inc
rclb
inc
push
sbb
cmp
orl
push
pop
cmc
rcll
rcll
lds
push
popf
dec
lods
testl
fimull
dec
dec
aad
mov
cmp
mov
out
lret
loop
xor
jns
mov
cmp
lock
mov
pop
lahf
stc
xchg
sbb
inc
testb
lahf
inc
roll
iret
pop
stos
into
aam
or
iret
test
adc
into
mov
imul
add
or
mov
mov
push
mov
test
das
insl
push
push
and
dec
data16
hlt
test
push
enter
cli
mov
push
pop
out
dec
jbe
lret
dec
inc
mov
fisubrl
enter
aas
adc
mov
sub
insb
jnp
push
out
xlat
inc
mov
stos
and
push
adc
push
dec
mov
jge
cli
sbb
xor
insb
jne
inc
adc
sbb
fst
fbstp
cmp
sub
loop
stc
fcoms
cs
test
leave
xor
movsb
call
add
fs
mov
xchg
imul
pop
cmp
xor
icebp
in
push
shl
inc
sub
sbb
push
pop
pop
pop
cs
mov
cli
push
iret
nopl
nop
out
insb
and
sub
jae
cmp
push
mov
adc
jae
dec
mov
mov
aad
ja
push
sbb
xor
cli
divl
push
mov
into
jo
ljmp
inc
sbb
outsl
cs
aam
xchg
jmp
icebp
repnz
add
add
shrl
adc
push
outsl
mov
repnz
mov
and
add
sub
add
inc
fisubl
sub
or
pop
ljmp
jg
add
or
cmpsb
aaa
jg
mov
pop
negl
and
jmp
xchg
xchg
pop
jbe
mov
lods
mov
rorb
aas
cmp
fsubr
and
hlt
adc
xchg
loopne
inc
xor
ret
dec
in
mov
fcoml
push
push
xlat
push
mov
adcb
sbb
sub
xlat
inc
lret
mov
adc
int3
cmpsb
mov
es
cmpsl
cwtl
hlt
mov
lcall
cmp
movsl
scas
xlat
mov
mov
lds
push
rclb
rolb
jmp
addr16
es
jo
arpl
mov
loop
mov
loop
push
xor
xor
cmp
fwait
stos
cmpsl
mov
mov
stc
xchg
aaa
fs
mov
fsubrs
dec
mov
xchg
fisttpll
mov
sub
ret
mov
sbb
out
xor
dec
pop
push
imul
mov
dec
lahf
jb
mov
xchg
andb
sub
scas
dec
ljmp
jmp
mov
push
in
lea
dec
sub
mov
jns
xor
pop
popa
je
mov
jmp
inc
pop
hlt
and
sbb
mov
sub
or
rcl
push
repnz
adc
xlat
outsb
lcall
or
ds
xor
lods
dec
test
cmp
test
xor
pop
sahf
inc
pop
gs
sgdtl
mov
mov
lock
mov
jae
les
call
dec
mov
scas
hlt
fsubs
sbb
fstps
jmp
sbb
ja
xor
roll
jno
andl
flds
filds
fldt
mov
mov
rolb
jmp
leave
sbb
lahf
inc
sbb
fnstcw
imul
lret
push
imul
imulb
push
repnz
add
and
stos
jno
iret
dec
lret
add
std
cmp
rcrb
in
cltd
push
scas
jns
mov
test
loope
xor
push
jecxz
out
dec
std
add
inc
push
cmpsl
and
hlt
or
jecxz
mov
in
or
out
popf
inc
cltd
pop
dec
jb
ret
cltd
dec
xor
imul
mov
mov
and
fsin
loop
scas
es
cmp
fs
add
out
shll
cmp
pop
inc
adc
daa
sbb
add
push
arpl
nop
data16
popf
or
jne
imul
data16
rorb
loopne
adc
sub
mov
add
jmp
adc
inc
lock
scas
fwait
adc
add
jg
popf
subl
sub
mov
xor
int
push
into
rcl
lcall
ficoml
jg
push
icebp
aaa
pusha
dec
jnp
pop
push
add
xlat
push
dec
adc
out
fists
fildll
iret
xor
sti
cmp
jle
mov
xchg
mov
cmp
out
cltd
pop
push
repnz
push
pop
into
add
ds
sub
fisubrs
cmp
add
and
in
aam
outsl
or
xchg
in
pop
dec
lret
pop
icebp
sub
lods
add
adc
adc
aam
dec
mov
jecxz
xor
cli
mov
push
repnz
xchg
test
insb
ja
pop
or
notb
push
or
ss
inc
push
int3
jo
push
and
arpl
dec
pop
sbb
pusha
inc
mov
in
cmc
pop
ja
cmp
xchg
push
sbb
aaa
cmpsb
insl
adc
cs
and
aad
jae
rclb
sub
out
stos
popf
pop
and
jno
cli
xchg
mov
push
in
mov
orb
cmp
shl
sub
out
aaa
ret
sbb
fisubrs
xchg
push
lods
cld
fs
cmpsb
ret
js
out
call
sbb
mov
add
adc
rorl
rcrb
clc
inc
pushf
xor
push
push
dec
js
add
scas
jne
jg
clc
aad
push
int
cld
xor
xchg
cs
mov
and
test
sub
sub
sbb
enter
ja
dec
push
je
fdivs
movsl
mov
ror
mov
push
repnz
mov
sbb
addr16
cmpsl
jl
xor
mov
in
iret
insb
add
or
and
jbe
pop
or
cmp
jae
shll
mov
add
insl
flds
cmp
jg
gs
mov
inc
scas
pop
arpl
les
sti
sub
mov
pop
and
loope
cmp
push
rep
out
cwtl
ds
pop
pusha
add
sub
fnsave
add
mov
sub
in
sbb
cmp
mov
dec
or
add
sbb
in
shr
pusha
mov
outsl
lcall
mov
insl
inc
jb
mov
ss
mov
mov
lds
jns
ret
dec
nop
cmp
mov
bound
jmp
mov
add
fstpt
outsl
inc
imul
mov
push
inc
dec
pop
cmp
inc
mov
push
aas
add
and
push
jmp
in
mov
aas
pop
mov
ss
jmp
or
rorl
scas
shr
and
add
loope
mov
test
mov
add
popa
rcrb
test
dec
pop
fisubl
lahf
cmp
pushf
mov
sbb
iret
sub
xchg
pop
xchg
clc
or
call
fcoml
out
mov
cmp
cli
pushf
inc
aad
jmp
fcompl
or
inc
outsl
movsb
inc
pop
movsb
push
jmp
or
xchg
pusha
vpaddusb
xor
mov
inc
jb
popa
cmp
mov
add
inc
push
cmp
cmp
mov
and
shrl
adc
fwait
xchg
dec
fisttpl
mov
outsl
mov
pop
push
mov
loop
shrl
mov
pop
jo
sub
xchg
lcall
inc
loopne
out
cmc
cmp
xorb
push
ja
jns
sub
mov
mov
jle
fcmovnbe
xchg
mov
push
sbb
shrl
mov
jae
sub
out
jno
xchg
outsb
scas
fidivs
adc
push
enter
gs
jmp
mov
and
push
fnstcw
pop
out
mov
es
mov
sub
fs
push
mov
test
push
mov
lea
mov
xchg
incl
push
mov
movsb
pop
adc
sahf
pop
div
aam
xchg
mov
mov
es
jbe
out
fs
sbb
call
xor
xor
clc
inc
mov
pop
sub
aaa
daa
enter
test
test
push
cltd
mov
iret
mov
and
adc
rorb
out
lret
sbb
xchg
or
rolb
add
js
jae
push
xor
or
or
and
xchg
push
cmp
pop
movsb
std
fdivrl
jmp
hlt
into
mov
repz
pusha
xchg
mov
int
outsb
pop
outsb
insl
repnz
jbe
pop
js
adc
cmpsb
mov
loopne
loop
mov
dec
clc
pop
push
xchg
dec
jno
fnstenv
scas
es
aam
nop
mov
ljmp
mov
loopne
mov
inc
mov
xor
jno
std
xchg
or
mov
jp
mov
xlat
sahf
fs
dec
or
mov
pushf
pushf
push
gs
dec
jnp
jb
lods
dec
in
shrb
dec
mov
xor
movsb
movsl
addr16
hlt
push
mov
cmp
shll
fmull
shlb
or
cmp
push
xchg
or
sbb
mov
xchg
sahf
fwait
aad
in
push
pop
pop
or
stc
and
movsl
and
adc
imul
pop
cmp
xchg
imul
negl
inc
or
es
xchg
aas
add
inc
fiadds
arpl
ljmp
lret
int
add
insb
sub
lret
repnz
mov
std
mov
das
insl
iret
ss
int3
mov
iret
pop
inc
sarl
shlb
pushl
fsubs
inc
je
out
or
inc
data16
inc
aas
mov
adc
xor
xor
and
mov
shlb
inc
or
loopne
clc
shrb
insb
or
sarb
inc
ja
inc
xor
nop
nop
jb
mov
push
push
ja
es
mov
dec
xchg
repz
in
or
mov
out
fbld
in
jge,pn
sbb
cmp
cmpsb
loopne
in
xor
mov
fistps
lock
sub
mov
ja
jns
rcr
dec
xor
movl
loope
testb
push
daa
test
repnz
push
dec
mov
stc
aad
push
mov
mov
aas
and
es
mov
lahf
pop
outsl
icebp
imul
cs
mov
and
ret
jmp
andb
sub
push
dec
xor
dec
cltd
out
into
adc
in
mov
xor
fsubrl
mov
add
xchg
sub
ret
fwait
shlb
mov
push
sub
and
shr
popf
out
dec
in
xchg
imul
inc
sbb
int3
out
or
mov
lock
or
jl
inc
mov
jbe
mov
int3
xchg
aad
mov
inc
mov
in
mov
xchg
test
inc
inc
rcrb
xor
and
out
lahf
pop
negb
push
ror
jge
add
cli
mov
push
pushf
or
outsb
outsb
leave
mov
mov
mov
cmp
mov
mov
jne
bound
dec
sahf
in
xchg
sbb
nop
inc
leave
movsl
and
cmp
call
aad
mov
cwtl
lret
jb
mov
insb
lods
negb
jnp
jl
leave
fstpl
cmp
pop
inc
mov
movsb
push
mov
je
cli
dec
sahf
mov
sbb
inc
mov
fdivs
sti
mov
test
inc
ficoml
sbb
ljmp
mov
loopne
mov
and
orb
mov
sbb
repnz
mov
outsl
sbb
inc
movl
lret
inc
add
jb
cmpsb
std
fdivrl
inc
sub
lods
sbb
mov
imul
dec
out
push
lahf
cmp
cs
inc
inc
sub
sahf
pop
dec
aam
hlt
jb
xchg
inc
sbb
push
jbe
je
push
in
push
push
mov
cmp
dec
hlt
mov
jae
xchg
loop
and
leave
jl
ret
fcompl
jg
fsts
sbb
repz
lret
test
out
out
out
mov
imul
push
xchg
xlat
jle
loope
adc
pop
imul
inc
mov
xchg
add
gs
ficoml
fs
dec
nop
mov
loopne
out
cmc
mov
mov
mov
hlt
aam
mov
fimuls
daa
ds
pop
fmull
stos
adc
push
cli
xchg
xor
movsl
xlat
les
or
rcr
leave
adcb
rcl
add
enter
or
data16
js
jg
inc
adc
outsl
xor
mov
pop
js
adc
rcl
fsts
jg
mov
or
inc
data16
stos
nop
sahf
xor
mov
cwtl
ljmp
add
push
mov
test
xlat
cmc
lahf
rolb
outsb
arpl
fsts
lcall
das
mov
or
adc
mov
push
dec
sub
into
adc
in
mov
dec
stos
adc
rcll
adc
jmp
dec
dec
enter
fisttpl
add
sbb
xor
xorl
cmp
faddp
fnsave
cmp
cwtl
pop
das
movsl
lods
movsb
fnstsw
movsl
mov
or
or
jbe
push
inc
pop
dec
fdivs
or
pop
nop
pop
dec
aad
cltd
ss
jbe
pop
fscale
shll
arpl
push
das
inc
cltd
and
enter
in
arpl
sahf
adc
jne
mov
add
inc
or
rolb
inc
inc
ret
mov
mov
adc
pop
add
push
and
stos
stos
les
mov
cwtl
inc
sub
or
into
shrb
push
mulb
cli
test
je
ljmp
sub
pop
cmpsl
xchg
lods
movsl
push
mov
pushf
lret
lahf
add
cld
enter
scas
sbb
mov
int3
lret
outsl
aaa
loope
dec
jmp
inc
in
pushf
leave
mov
jl
in
inc
dec
call
inc
mov
ret
cltd
lods
dec
mov
scas
and
data16
div
shl
push
inc
fcmovbe
leave
stos
and
fnstsw
mov
push
sahf
lahf
into
or
in
lret
push
mov
mov
loop
or
pop
daa
lock
jmp
int
mov
push
pop
push
stos
push
in
xchg
push
gs
aam
sub
inc
push
or
addb
cmp
jno
movsb
mov
mov
jo
or
lahf
push
je
mov
test
scas
push
test
dec
xlat
arpl
and
or
add
mov
xlat
mov
iret
bound
jbe
adc
test
jge
sbb
in
sbb
sahf
sub
push
inc
les
ret
lahf
in
orl
dec
fsubr
sub
jmp
popl
sub
sahf
dec
pop
xchg
sub
inc
ret
push
das
mov
dec
popa
out
nop
adc
inc
movsb
loopne
pop
and
movsl
stos
in
jne
push
repz
fldt
sbb
imull
add
out
cmp
pusha
loop
or
pop
inc
pop
mov
das
inc
xchg
cwtl
dec
inc
adc
inc
pusha
push
pop
sub
pop
clc
sbb
fucomi
fisttpl
out
nop
push
enter
out
inc
sbb
dec
imul
fimull
mov
movsb
psllw
push
mov
daa
mov
pop
test
jo
ds
adc
mov
mov
negb
arpl
ret
out
jl
pop
inc
stc
inc
aas
mov
cmp
ja
fmul
test
ret
rolb
cmpl
aas
xor
rclb
rcll
cmp
mov
arpl
sub
jmp
dec
mov
aaa
mov
scas
aaa
movsb
lcall
imul
dec
outsl
sbb
push
outsb
das
es
sub
mov
in
mov
adc
loope
adc
jle
out
popa
jns
inc
jno
dec
js
mov
ss
mov
test
out
leave
mov
cmpl
sub
fisttps
lea
daa
aam
cmp
mov
test
sbb
in
push
dec
stc
mov
add
cltd
insl
fcoms
mov
sub
fcompl
adc
ss
xchg
mov
insb
pop
out
mov
test
pop
aaa
rcrl
leave
mov
ret
stos
int
jo
push
push
mov
xor
in
pop
add
jg
imul
fcomp
push
jmp
imul
out
insb
pop
push
movsb
stos
fwait
mov
dec
fbstp
pop
es
pop
mov
push
jle
scas
jmp
or
cmp
outsb
or
xorb
pop
cmp
dec
add
call
dec
in
mov
dec
rcrb
mov
and
and
imul
imul
test
test
pop
ljmp
sbb
loop
jb
or
jbe
lods
lea
mov
cmpsb
mov
mov
mov
int
lcall
loop
or
sahf
sub
scas
pushl
xor
mov
and
inc
shr
pop
stos
lret
jns
add
movsl
imul
jecxz
mov
sarb
sub
adc
or
cmpl
shlb
sbb
notl
adc
nop
fmulp
push
lock
and
lahf
push
loopne
out
inc
lock
xor
push
xor
je
testb
pop
jp,pt
or
push
test
lret
xchg
fucompp
cmpsb
clc
clc
ljmp
mov
inc
jmp
cwtl
inc
imul
or
and
aad
mov
shll
popa
fisubs
xchg
mov
sub
jb
or
ja
call
mov
inc
add
ss
sub
adc
int
mov
sub
pop
jmp
pop
cmp
into
cmp
out
jmp
xchg
sbb
and
mov
repz
mov
mov
inc
xchg
fcomps
pop
pop
jb
jno
psubb
pop
xor
in
mov
cmp
adc
inc
mov
add
cmpsw
gs
fisttpl
inc
repz
add
dec
ret
lea
js
data16
imul
stc
insb
lahf
int
fs
inc
js
popf
push
mov
ret
icebp
inc
cs
dec
pop
dec
jns
inc
insb
or
push
pop
mov
or
and
inc
and
lock
js
or
pop
jp
loopne
cmpb
jmp
jle
push
xchg
mov
fwait
aas
in
out
daa
stos
ret
or
add
ss
out
outsl
cld
popa
pop
and
jg
mov
adc
dec
inc
std
mov
inc
sbb
cmp
in
jns
xchg
div
jo
cmp
fmuls
push
cltd
inc
popf
ds
pop
push
adc
xchg
mov
lock
and
movsl
test
mov
lret
out
call
mov
pop
jp
inc
jecxz
in
subb
ss
push
mov
xchg
mov
jne
push
pop
push
int3
pop
fdiv
popa
pushf
js
mov
xor
nop
inc
push
push
cmp
or
sbb
pop
pop
and
xor
mov
aas
xchg
or
and
scas
mov
or
jae
pop
aaa
lret
and
call
jmp
es
pop
stos
mov
or
push
rcrl
jecxz
and
or
sbb
leave
xchg
test
popa
ljmp
cmp
lods
and
push
lret
outsl
jae,pn
test
dec
xor
sbb
pop
outsl
inc
pop
shrl
cli
sbb
lock
pop
xor
ds
sub
pop
xchg
out
pop
pop
fstpl
mov
jo
xchg
mov
adc
dec
inc
scas
outsb
and
clc
xor
shl
inc
mov
out
lods
jnp
ja
jecxz
mov
icebp
jne
mov
sub
fwait
push
xor
xchg
leave
lods
xorb
inc
and
fs
arpl
das
pop
rorl
ljmp
jmp
jp
adc
mov
sbb
xor
cld
shl
ficomps
nop
dec
push
call
cmp
cld
and
addr16
push
pmaddwd
call
imul
jns
and
mov
mov
sti
outsl
test
or
repnz
sub
xor
adc
arpl
jo
aaa
push
sub
sbb
mov
rcrl
cmp
in
movsl
jae
xor
xor
out
push
jnp
inc
dec
add
icebp
popf
jno
xor
or
xchg
xor
bound
push
sbb
pushf
loope
dec
mov
mov
cltd
xor
adc
xor
bound
ss
icebp
mov
and
iret
mov
mov
clc
loopw
dec
and
dec
insb
add
pushf
in
xor
sti
mov
pop
orb
mov
roll
test
jae
ss
pusha
add
jle
insl
jge
and
or
mov
fsubrs
sbb
pop
mov
dec
jecxz
push
lret
cmpsb
jb
cmp
xor
into
scas
jo
adc
sbb
jne
lahf
gs
inc
inc
out
and
pop
stos
divb
mov
dec
xlat
mov
popa
jge
mov
sbb
into
imul
cltd
inc
cld
mov
sub
test
negl
jmp
mov
inc
xchg
rcll
lods
enter
aam
or
or
fsubs
adc
mov
mov
outsl
outsl
or
add
inc
rorl
adc
pushf
stos
pop
fstps
jg
or
pop
dec
imul
pop
pop
cmp
add
aas
and
xchg
mov
xchg
mov
inc
xor
das
or
imul
rclb
adc
add
lock
cmc
xor
insb
adc
xor
mov
mov
aam
lret
add
fwait
pushf
dec
mov
insb
popl
outsb
inc
leave
xchg
xchg
adc
mov
jnp
sbb
fadd
pusha
mov
sub
pop
test
cwtl
cltd
or
adc
repnz
ljmp
fldt
push
lcall
cmp
addr16
lret
pop
xchg
pop
inc
roll
leave
or
sbbb
pop
data16
xchg
xchg
xor
sbb
call
xor
insb
mov
loope
test
out
js
or
daa
out
xchg
popf
das
and
sbb
mov
daa
imul
sti
xor
scas
mov
cmpsl
je
pop
ret
xchg
arpl
sbb
insb
mov
jnp
mov
loop
push
ds
scas
nop
mov
xchg
in
sti
decl
scas
or
add
push
inc
test
lods
leave
inc
adc
mov
pop
lret
rorl
xor
fadds
gs
inc
jbe
xchg
xchg
mov
dec
xor
or
pop
jge
dec
scas
mov
jns
mov
cs
inc
js
jle
xor
sbb
xchg
cld
repz
iret
jecxz
sbb
push
push
sub
test
mov
or
gs
mov
ds
clc
xor
add
rclb
rcrl
and
jge
fcompl
fnstsw
lahf
popf
ret
cmp
jnp
out
mov
cmp
testl
pop
dec
shll
jmp
mov
in
mov
push
pop
inc
nop
jo
outsb
inc
jae
cld
in
inc
push
and
jne
jo
mov
fdivl
scas
xchg
sti
outsl
mov
push
and
aam
iret
hlt
pop
xor
icebp
subb
in
xchg
inc
adc
popf
add
add
popa
xor
test
subl
sahf
mov
movsl
xchg
jns
cmp
push
sbb
adc
dec
and
ret
add
scas
addr16
xor
cmpsb
insb
add
pop
dec
and
push
sti
xchg
xor
cmp
flds
addr16
cmpsb
icebp
push
movsb
xchg
inc
sub
mov
pop
add
inc
ja
in
frstor
cmp
sub
pop
xchg
into
add
addr16
imul
lret
mov
inc
aaa
lods
insl
jno
cmp
loope
and
pop
pop
imul
sbb
js
in
and
add
cmp
add
pop
ret
add
mov
subl
jecxz
mov
shrb
or
sub
jmp
pop
aad
mov
adc
xchg
mov
cwtl
shl
ftst
lods
dec
imul
into
js
adc
inc
cli
addl
and
addr16
lds
inc
mov
jnp
out
in
cli
pusha
mov
in
xchg
adc
mov
and
out
xor
push
adc
fcmovb
xorps
sti
divb
jg
mov
xchg
adc
push
add
sarl
mov
sbb
dec
xchg
mov
pop
imul
je
inc
cmpl
enterw
hlt
orl
and
scas
enter
ret
xlat
lds
out
and
pop
sub
ret
inc
pop
sub
pusha
int3
test
nop
jnp
lods
mov
std
es
jns
cmpsl
sti
idiv
dec
mov
xchg
add
loope
arpl
jbe
pop
dec
and
jnp
insb
cmc
stos
mov
or
inc
rcll
mov
dec
mov
cmp
loopne
ljmp
cltd
shll
xchg
mulb
push
or
loope
sub
xlat
mov
add
roll
mov
cltd
inc
cmp
inc
pop
ret
hlt
addl
dec
scas
ficompl
xchg
sbb
bound
xor
in
xlat
and
pop
mov
mov
xlat
push
mov
out
sub
cmp
adc
push
enter
jmp
test
cmpsb
mov
cmpsl
mov
daa
rcr
push
and
fs
shrl
fsubrs
fwait
xor
adc
and
lds
or
jmp
push
mov
inc
push
jg
cmp
mov
inc
push
and
call
ficomps
adc
ss
shlb
das
xor
mov
push
cli
adc
andw
cs
mov
sub
inc
sub
pop
xor
inc
pop
cmc
scas
les
jo
repz
or
cwtl
pop
sbb
inc
xor
loope
jns
or
mov
in
test
mov
incl
mov
sbb
loopne
jge
repz
or
inc
mov
addr16
sub
sarb
pop
sub
iret
rcrl
pop
fs
mov
lods
js
and
les
cmp
jnp
xchg
out
test
lock
scas
aam
and
xchg
fimuls
cs
or
push
adc
loopne
ja
sbb
push
add
xchg
add
add
inc
push
push
loope
pop
mov
neg
ja
test
cmpsb
mov
push
inc
cli
mov
sbb
mov
aam
ja
mov
xlat
call
inc
dec
bound
fcos
test
mov
addl
inc
xor
or
dec
shrb
and
in
addr16
sub
add
out
fsubl
fwait
imul
pop
test
inc
pop
subb
movsl
hlt
xor
or
mov
push
lods
and
in
and
cmp
lds
inc
jp
cmpsl
fmul
mov
dec
mov
faddl
bound
arpl
imul
das
add
cli
into
mov
xorb
pop
test
loopne
or
ret
mov
rcll
outsl
and
push
mov
push
pop
xor
enter
mov
aam
js
mov
sbb
jg
movsl
bound
shrb
mov
xor
push
movsl
pusha
xchg
das
xchg
or
cld
sub
clc
push
push
sbb
arpl
dec
cmp
xchg
sbb
fmul
int3
mov
jle
dec
xlat
aaa
aam
push
mov
mov
jl
xor
mov
push
lods
xchg
pop
cs
rcrb
mov
aas
setbe
mov
out
outsl
sbb
pop
add
in
roll
test
sub
sub
aaa
sub
aaa
cli
inc
sbb
addb
rorb
arpl
adc
pop
dec
adc
scas
movsl
aad
movb
loop
dec
mov
roll
cmpsl
push
mov
pop
pop
or
jecxz
add
iret
jns
mov
scas
sahf
dec
pop
scas
xor
adc
sub
jno
pushf
cmc
mov
mov
into
out
test
dec
sub
arpl
cmp
outsb
or
cmc
sbb
lods
push
lds
add
loope
sbb
int
push
and
jbe
std
or
fsts
stos
faddl
mov
movsb
bound
sub
idivl
rclb
pushf
das
sub
push
sbb
iret
add
iret
inc
push
les
out
inc
jg
and
call
in
aam
jl
cwtl
and
push
inc
mov
xchg
es
sbb
inc
mov
lea
js
scas
clc
push
jg
cmp
xchg
cmp
cmp
mov
pop
push
loopne
xorb
pop
xchg
mov
scas
clc
cmp
xchg
icebp
jmp
dec
enter
repnz
adcl
das
das
repnz
and
rolb
mov
jnp
enter
sahf
pop
sbb
jb
jbe
roll
mov
inc
jae
xor
stc
xchg
inc
sub
scas
cmpl
sbb
fwait
cmp
jne
shl
jae
mov
sub
lret
sbb
jmp
into
leave
sub
shr
jg
lcall
and
leave
add
jae
push
shll
jle
sbb
call
jbe
pop
ss
and
pop
stos
cmp
inc
dec
dec
mov
enter
mov
mov
mov
push
int3
aam
sub
sti
mov
sub
repz
cmp
adc
mov
sbb
js
jns
xchg
pushf
test
aam
mov
jecxz
das
movsb
mov
lock
fwait
push
inc
sub
into
jecxz
sarb
loop
jle
and
pop
sub
xchg
ja
sbb
push
xchg
lods
aad
cmp
dec
xor
lret
fs
lock
mov
pop
lods
mov
leave
fldl
inc
mov
jge
pushw
dec
sbb
dec
push
dec
test
loop
push
fistpll
sub
ljmp
or
out
shl
or
jecxz
shr
inc
nop
push
jae
mov
mov
lret
xchg
pop
or
ret
loop
pop
jbe
xchg
mov
fcmovnb
sbb
sbb
test
mov
xlat
in
fucomi
test
sub
sub
push
mov
or
pushf
stos
ret
push
jne
ret
orl
jecxz,pn
mov
aas
jp
das
imul
add
enter
hlt
mov
shrb
jg
sub
jns
test
add
insb
mov
mov
mov
es
xor
xor
xchg
pop
push
scas
loope
pushl
jns
cmpsl
sbb
sub
mov
mov
lea
ja
in
xchg
sub
aas
repnz
mov
xchg
dec
fwait
push
xchg
mov
sub
js
test
xchg
adc
aam
sub
imul
jl
jno
pop
cmpsb
test
test
ret
cmc
sub
mov
lods
fnsave
pusha
mov
xorl
mov
out
jmp
outsb
sbb
pop
cmp
loopne
jmp
push
xor
cmp
inc
pop
or
repz
jmp
dec
pop
bound
test
xchg
jbe
mov
jnp
stos
add
cmp
mov
in
stos
icebp
adc
in
sub
xchg
shr
sbb
dec
lds
loop
xchg
and
adc
lcall
sbb
add
push
pop
ds
mov
or
test
test
sar
mov
popf
add
rorl
fisttpll
lret
out
mov
repz
sti
dec
cmpsl
xchg
sbb
or
jns
inc
dec
mov
mov
test
idiv
cmp
push
testb
pop
add
pop
in
jp
jp
and
and
mov
iret
daa
xor
decb
xor
and
icebp
scas
jecxz
jmp
xchg
pop
mov
adc
push
fildl
bound
mov
mov
mov
sbb
add
movsl
sarb
lcall
pop
data16
xlat
inc
leave
push
push
dec
jbe
inc
jecxz
ror
out
push
pop
lahf
pop
mov
jnp
cmp
xor
ljmp
push
faddl
std
push
lret
xor
lods
roll
push
lret
sbb
gs
loope
int
push
loope
push
pop
ds
fsubrp
fnsave
mov
mov
pop
inc
mov
or
movsb
jle
adc
sbb
es
sbb
aam
in
jl
xchg
stos
int3
repnz
rorl
and
inc
jnp
sub
or
pushf
jmp
xchg
adc
add
adc
or
lea
out
jge
push
add
push
or
mov
lahf
pushf
mulb
jb
dec
xor
or
dec
push
cmp
jne
movsb
imul
icebp
idivl
imull
sub
mov
pop
xchg
int
pop
and
push
shl
jle
pusha
push
push
into
testb
mov
jp
lret
jge
lret
out
fs
xor
jo
mov
in
cld
iret
in
shl
aam
pop
mov
jle
xor
add
out
lret
pushf
push
xchg
lods
pop
xchg
push
and
in
rorb
cmpsl
mov
lods
lret
lds
fsubl
test
jg
in
push
cwtl
addr16
cmc
insl
repnz
jecxz
lret
movsl
mov
aaa
test
movaps
clc
aas
sub
xchg
repz
jmp
dec
nop
ffreep
ficomps
xor
mov
mov
sbbb
scas
add
ljmp
mov
mov
roll
inc
push
mov
addr16
out
out
icebp
pop
fdivr
stos
loop
and
imull
bound
xchg
orb
mov
sbb
lcall
xchg
cmp
ja
dec
mov
push
stos
lahf
and
pop
scas
sbb
push
jbe
mov
test
add
in
mov
xor
shlb
imul
std
pushf
mov
dec
add
lods
mov
scas
mov
dec
stc
jmp
icebp
adc
xchg
jnp
push
addr16
adc
cltd
sahf
out
int3
mov
out
jl
sub
jg
or
lahf
imul
das
aas
dec
pop
mov
xchg
lea
push
out
jne
push
adc
mov
mov
xchg
cmp
add
repnz
adc
jge
aam
sbb
cmp
out
shll
pop
mov
and
aad
mov
imul
mov
sbb
js
hlt
lock
cli
stc
xor
movb
and
mov
shll
xor
sub
inc
mov
add
lods
mov
flds
out
mov
xchg
jns
push
or
aaa
fsubl
loopne
push
sbb
rcrb
das
inc
push
hlt
push
hlt
push
hlt
lods
test
loope
xor
mov
popa
xor
cmc
into
mov
or
jg
arpl
ret
lock
or
mov
popa
inc
xor
pop
mov
sbb
imul
stc
jl
insb
adc
int3
fsts
fsubs
sti
and
pop
je
rorl
ja
xorl
lock
fmuls
bound
cmp
ficoml
repnz
daa
mov
test
idivl
jg
push
lcall
or
mov
movsb
jp
push
adc
xor
ret
rcrl
mov
jno
push
or
int3
lock
xchg
inc
fmuls
ss
lret
pop
jbe
jg
xchg
xor
sbb
fcomps
xor
mov
lods
dec
incl
inc
mov
xor
mov
dec
rcrb
xchg
iret
sbb
addr16
pop
mov
xchg
sbb
sbb
mov
fbstp
add
jae
inc
mov
xchg
icebp
sub
cmp
sub
stos
adc
std
pop
mov
jle
lcall
xchg
jge
js
insl
out
pushf
dec
and
aaa
stos
out
fcmovbe
sub
in
mov
cli
and
bound
sbb
mov
jo
adc
xor
in
out
lcall
dec
add
lock
ss
jns
scas
mov
ret
xchg
or
sub
insb
xchg
enter
jmp
sub
jp
jle
nop
xor
mov
xor
pop
int
mov
out
sbb
sti
dec
push
mov
dec
inc
inc
lea
sub
xchg
in
cmp
sbb
jno
xor
or
add
sarl
enter
enter
in
lock
ret
icebp
scas
repnz
inc
adc
dec
push
jb,pt
jb
ret
cmp
mov
push
cld
xor
enter
aam
mov
push
jg
or
cmp
icebp
push
loopne
mov
popa
imul
sub
loope
xchg
inc
rcrl
test
insb
or
sti
mov
jp
mov
mov
fstpl
sbb
lods
add
movsb
mov
push
sbb
rolb
sub
movsw
mov
add
outsb
arpl
pop
mov
mov
leave
aam
add
mov
int
call
popa
cwtl
movhps
inc
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
fbld
adcl
bound
nop
fdivl
and
repz
xor
or
add
mov
andl
daa
and
jmp
xor
and
mov
adc
xor
mov
icebp
stos
out
ljmp
je
cmpsl
jnp
pop
mov
xor
aaa
cmpsb
dec
leave
mov
out
loope
dec
out
mov
pushl
mov
adc
push
add
call
and
xor
call
mov
inc
leave
pop
pusha
mov
and
jg
and
cmp
xchg
scas
sub
cmpsl
sub
xor
sub
mov
dec
dec
mov
mov
or
roll
mov
push
das
lods
pusha
cmp
adc
pop
push
add
dec
dec
lods
out
xor
rcrl
xor
insl
in
mov
mov
out
inc
sbb
jnp
cmc
gs
aas
arpl
ljmp
movsl
xchg
aad
test
inc
fnstsw
fs
pop
push
sub
push
push
stos
fstl
inc
gs
hlt
mov
cmpsb
stc
fiadds
inc
jne
push
mov
lret
push
jle
jbe
ret
mov
in
xor
fiaddl
and
dec
enter
pop
arpl
jle
int
mov
imul
rcrl
mov
or
sbb
xor
jecxz
ljmp
pushf
je
jge
sbb
div
lahf
and
add
ds
cwtl
pop
mov
aas
in
test
mov
push
add
scas
daa
push
fwait
sub
cmc
inc
mov
das
sbb
psrad
sub
inc
mov
lea
idivb
stc
pop
int3
and
shll
rcl
pop
and
lea
xchg
jg
in
xchg
xchg
aam
movsb
or
int3
and
sub
movsl
cld
xor
dec
dec
inc
dec
clc
fs
lods
outsb
lahf
sbb
lret
sub
mov
repnz
int3
lret
cmp
leave
mov
lds
orl
sbb
std
iret
jmp
cmp
pusha
aad
mov
add
pop
jecxz
lds
jne
rcrb
push
mov
pop
mov
rcll
mov
sbb
cmp
in
popa
int
cmp
sbb
testb
dec
movsb
movsb
stos
adc
test
lods
imul
inc
mov
pushf
dec
notl
jne
loop
xlat
or
pop
cmp
mov
pop
mov
popf
or
mov
aad
xchg
fcmovu
push
mov
popf
stos
and
xor
popf
loope
scas
pop
mov
mov
cmp
ret
or
mov
imul
xor
mov
fmull
sub
sub
xor
int3
xorb
jecxz
ss
movsl
add
and
pop
and
sti
lea
inc
mov
lods
sbb
out
mov
mov
lcall
rcrb
fldenv
ja
pop
lods
cld
push
bound
sub
xlat
dec
fidivrs
jmp
xchg
mov
add
insb
lods
sbb
rcrb
jp
out
stc
pop
mov
jno
push
pop
mov
imul
rol
pop
inc
rcrl
mov
aad
cmp
fsubrs
call
mov
mov
xor
inc
aaa
dec
gs
mov
fwait
add
imul
adcb
jmp
and
mov
mov
push
in
pop
lcall
mov
fistpl
xchg
out
fsubrl
dec
sbb
jecxz
lds
sub
cmp
jmp
mov
inc
inc
pop
sub
dec
add
movsl
pusha
lret
popa
xchg
or
dec
subl
std
test
xor
aam
rclb
in
add
sbb
xchg
test
push
xchg
jno
cmc
orb
stos
jbe
popl
jg
inc
and
cmpsl
lret
mov
rorb
jns
pop
into
sub
sarb
pop
aaa
jmp
sub
hlt
out
mov
dec
add
repnz
sti
loop
push
sbb
je
cmp
xor
and
jnp
negl
or
outsl
stos
sub
data16
cmp
pop
sub
ds
les
rcll
imul
dec
bound
psubusw
movsl
int
cmpsb
cmpb
aas
push
add
cmpsl
dec
cmc
dec
cld
cmp
shll
cmp
lea
push
imul
xor
clc
sti
cmp
mov
push
loope
cmp
sub
add
and
in
ds
mov
inc
loop
sub
xchg
cmpsb
and
aam
jge
daa
pop
ja
xchg
jne
fwait
sbb
sahf
xor
jns
enter
lret
dec
mov
pushf
imul
and
arpl
adc
cltd
cwtl
insb
jbe
mov
mov
mov
fcmovbe
pushf
andb
flds
popf
mov
jl
add
push
fdivl
push
cs
imul
loop
add
jp
lds
outsb
cltd
dec
scas
lock
iret
mov
pop
or
push
push
rcrl
jmp
jae
test
sub
xchg
mov
scas
in
lahf
ss
add
fldcw
mov
scas
and
fistpll
adc
leave
push
in
test
fsubl
mov
inc
lds
jp
mov
lods
sbb
xor
les
int3
mov
push
pop
inc
jno
mov
lods
mov
into
nop
int3
mov
sbb
test
outsl
xor
or
adc
jnp
mov
ja
xor
jae
ljmp
dec
iret
add
insl
sbb
pop
mov
cmp
inc
ret
xor
loope
clc
loopne
and
inc
pop
inc
mov
fst
in
dec
ja
lods
adc
aam
inc
push
cmp
and
mov
add
fistps
xchg
or
inc
fistpl
cmp
movsb
ret
aaa
or
push
or
push
and
int3
push
js
xchg
popf
pop
xchg
dec
sbb
data16
sbb
inc
les
mov
aaa
iret
dec
cs
add
xchg
adc
movsb
lahf
jmp
mov
jnp
lock
add
push
push
fnsetpm(287
xchg
and
leave
or
or
and
loopne
xchg
stos
stos
or
les
lret
sbb
je
js
mov
pushf
jo
xchg
int3
mov
fwait
adc
rclb
fs
movsl
out
and
sub
mulb
sbb
and
ficompl
and
nop
enter
rcr
xchg
mov
cmp
lds
add
fsub
dec
repnz
stos
mov
cltd
push
push
pop
inc
insl
fdivs
mov
sahf
nop
jbe
pushf
paddw
push
push
es
je
mov
mov
cmp
xchg
jge
cmp
jo
mov
push
lods
push
aam
cmp
ja
inc
nop
gs
add
inc
cmp
pushf
cltd
push
push
add
aam
cld
mov
xor
sbb
mov
or
mov
lret
ret
insb
cmpsb
add
sub
out
ss
xlat
iret
cmpsl
sbb
aam
pop
pop
mov
inc
add
jmp
and
adc
shlb
cld
inc
pop
fisttps
std
sub
ret
inc
xchg
mov
ljmp
cmc
sub
adc
sub
push
adc
add
mov
incl
ficompl
push
loope
fs
push
xor
hlt
dec
repz
fidivs
jp
scas
sub
or
add
mov
xor
scas
add
mov
loopne
sahf
push
push
mov
add
push
js
mov
psubusw
adc
adc
fimuls
and
movsl
pop
cmpb
jns
ja
addb
pusha
mov
and
cmp
xor
xchg
idivb
inc
popf
push
jge
hlt
pusha
xor
mov
jge
popf
cmp
sbb
dec
mov
cld
cwtl
sti
add
add
jb
jo
cld
pop
sbb
dec
addb
xchg
mov
push
adc
rorl
push
xor
rorl
imul
cmc
adc
scas
sbb
pop
xchg
cltd
pop
dec
pushf
mov
sarl
leave
call
mov
and
pop
and
testl
outsb
sbb
push
xor
mov
es
test
xlat
xchg
sub
adc
inc
icebp
mov
stc
mov
fsubl
dec
push
mov
mov
dec
dec
call
xor
push
push
pop
fcmovnu
sbb
sbb
dec
jno
popf
fmull
and
xchg
lahf
and
sub
out
jmp
shl
test
jp
sub
dec
rcll
mov
pushf
mov
iret
mov
gs
clc
push
push
leave
daa
jb
insb
int
loopne
data16
pop
mov
or
fmuls
jno
lret
push
jbe
out
les
ret
pop
pop
call
clc
inc
test
movsb
pop
jp
push
lock
push
xor
sbb
xchg
stos
push
into
in
filds
scas
sub
sbb
mov
add
xchg
int
jmp
stos
mov
jbe
xchg
xor
notb
adc
mov
mov
loop
sub
inc
adc
or
xchg
add
fs
jae
lret
subl
scas
lods
dec
xorl
push
and
shl
add
push
or
pop
jp
adc
std
sbb
mov
dec
addl
lea
sti
insl
lods
movl
pop
ja
out
test
xchg
add
push
cmp
fisubs
pop
mov
jbe
pop
in
stos
add
cmp
fwait
lret
mov
dec
addl
outsl
mov
xor
and
rorl
das
fimull
mov
icebp
adc
scas
lods
stos
jne
xchg
or
pop
data16
in
popf
jge
mov
push
adc
jl
cmc
xchg
inc
push
sbb
add
add
aad
aas
dec
pop
ud1
push
scas
enter
adc
or
push
cmp
xor
mov
xchg
dec
test
mov
shrb
xchg
and
push
push
std
jae
dec
or
add
mov
ds
sbb
pop
stc
mov
push
insl
push
mov
fucomi
ret
xchg
pop
fnsetpm(287
popf
data16
mov
jge
out
sbb
scas
lock
mov
testl
mov
mov
lods
or
cmpsl
test
sbb
imul
and
outsl
icebp
jae
lock
and
push
cld
inc
pop
sbb
push
sub
jle
scas
mov
sbb
add
cwtl
fs
pop
inc
lods
adc
inc
sub
test
fistl
mov
sbbb
or
mov
fwait
pop
mov
mov
arpl
lcall
popa
shll
aad
mov
ljmp
cmc
inc
xor
call
dec
add
inc
push
ljmp
adc
jge
shrl
sbb
mov
xor
cmc
fdivs
stos
call
add
icebp
add
push
or
mov
sub
and
lret
fsubrs
or
movsb
imul
imul
nop
sbb
popl
jmp
sub
sti
sbb
jle
pop
imul
cmp
sub
sbb
stos
add
mov
sbbl
lock
lahf
mov
lcall
aaa
inc
in
loopne
cmp
not
or
test
jle
or
enter
pop
test
xchg
add
ljmp
jnp
shrb
jae
dec
adc
jb
loop
push
push
repnz
dec
jns
pushl
mov
test
iret
cmp
arpl
ss
lds
rcll
test
mov
jns
ret
mov
lock
dec
mov
or
mov
popa
stc
push
sub
rcrb
loop
and
dec
push
aad
mov
fidivrl
and
fcoml
adc
out
dec
bound
xchg
js
xlat
outsl
inc
loope
jecxz
out
mov
push
mov
add
and
pop
mov
inc
loopne
icebp
gs
cmp
mov
mov
push
scas
imul
std
lret
push
repz
shlb
and
ja
dec
xorb
insl
jb
fsubl
xchg
lret
dec
mov
ss
push
inc
pop
scas
xchg
jmp
test
dec
fs
daa
xor
mov
sub
pop
jmp
cltd
mov
shr
mov
xchg
cmp
jns
add
jecxz
mov
andb
mov
cmp
mov
mov
add
or
jnp
xchg
xchg
les
movsl
jb
imulb
inc
mov
sub
jns,pt
sub
jg
xor
into
stos
inc
cli
adcb
fcmovne
push
stos
mov
and
sahf
lcall
mul
inc
push
mov
lret
out
icebp
int3
xchg
dec
cmpsb
cwtl
xchg
mov
jge
jae
push
lods
hlt
cmp
pop
mov
mov
jns
push
sub
lahf
and
shl
and
out
mov
xor
jbe
cmpsb
cmpsl
icebp
mov
out
push
pop
ficomps
aas
mov
in
dec
mov
pop
sbb
mov
dec
out
or
fsubrl
jg
xchg
fsts
das
lcall
rcrl
ror
push
jg
out
js
jmp
lahf
bound
jb
adcb
js
sahf
ja
jge
jb
mov
adc
mov
jg
mov
shl
loop
out
nop
cmc
sbb
imul
add
in
mov
dec
xchg
loop
insb
push
in
mov
sarb
dec
pop
and
xchg
xchg
push
test
dec
jnp
push
mov
cmp
insb
int3
jnp
and
cs
iret
sbb
adc
out
sbb
repz
fadds
faddl
pop
xor
cltd
int3
mov
lcall
fs
xchg
xor
sti
xchg
and
lods
in
std
cwtl
fnstsw
push
lret
cmp
bndstx
xchg
pop
nop
and
ljmp
jp
sbb
aam
fcoml
xor
jae
mov
jb
xor
inc
mov
jecxz
jg
outsb
mov
adc
loope
adc
jp
mov
mov
loopne
sub
lahf
add
cld
add
hlt
jmp
ficoms
jmp
dec
jecxz
or
mov
add
xor
repz
cmp
std
and
mov
add
pop
iret
lret
hlt
sahf
and
inc
add
dec
mov
addl
add
adc
add
push
std
pop
popf
jns
mov
pop
leave
outsl
aam
mov
dec
mov
fisttpll
loop
mov
ret
or
mov
sub
ror
dec
pop
push
lret
xor
sub
jb
mov
or
fnstsw
pop
stos
ss
sti
xchg
test
arpl
jge
daa
lcall
and
sahf
fwait
inc
mov
aaa
mov
cs
mov
xchg
ljmp
and
or
inc
adc
cmp
outsb
adc
xor
pop
lret
icebp
jae
scas
int
push
cld
mov
aas
test
ret
sbb
push
loope
sbb
mov
mov
aaa
arpl
push
in
scas
mov
or
or
pop
ret
dec
orb
in
dec
sti
xchg
paddsw
fwait
imul
jne
out
xchg
test
xor
ret
fmul
mov
and
adc
mov
pop
sbb
jbe
enter
cwtl
mov
xchg
dec
leave
mov
cmp
inc
push
xchg
mul
iret
push
mov
das
leave
addr16
call
lods
fadd
gs
in
out
push
mov
enter
xchg
cmp
das
rcrl
outsb
test
xchg
outsb
sahf
mov
into
scas
lcall
cmp
jnp
xchg
sbb
fucomip
int3
ja
in
inc
aaa
and
stc
aad
mov
sub
pop
push
out
pop
mov
or
fwait
push
dec
xor
pop
mov
mov
inc
fstpt
adc
mov
nop
dec
jg
leave
mov
inc
xchg
push
or
es
lahf
jo
addr16
repz
int3
pop
and
jge
arpl
icebp
mov
push
or
cli
out
outsl
inc
xor
cmpsl
jecxz
dec
test
sbb
jbe
add
leave
das
pop
or
push
or
cli
or
xchg
mov
shrb
push
fidivrs
xor
repz
fsubs
repz
lahf
inc
mov
adc
or
mov
push
test
pop
aam
lahf
mov
test
jle
adc
xchg
loope
in
icebp
inc
popf
inc
jmp
jle
mov
cmc
leave
push
das
cmp
or
nop
cmp
xorl
dec
leave
aas
mov
dec
loopne
in
push
mov
sbb
loopne
and
addb
enter
adc
push
pop
push
mov
cmp
cwtl
cmpsb
stos
sub
cld
cli
sarb
inc
add
cmp
or
pop
push
stc
sbbb
jno
lock
scas
adc
fbld
minps
fstpt
jnp
hlt
and
xorb
sbb
je
or
test
add
adc
pop
test
push
mov
xorl
leave
dec
adcb
push
push
mov
or
dec
adc
shll
addl
xor
dec
repz
sbb
dec
pusha
xor
xchg
pop
cli
popf
repnz
mov
cltd
gs
sbb
add
shll
cmpsb
sbb
aad
xor
sub
mov
nop
and
xchg
mov
movsl
pop
push
pop
cmp
fsubs
jmp
movsl
pusha
jns
gs
iret
lea
push
sbb
inc
int3
or
bound
adcb
cld
push
fs
and
shl
mov
xor
addr16
scas
pop
lods
and
xchg
ret
sbb
lret
nop
jp
in
push
or
mov
stos
into
insl
push
loopne
jbe
adc
xor
xchg
fidivl
bound
xchg
adc
cltd
mov
aaa
mov
lret
dec
ds
mov
mov
sbb
inc
fnstsw
enter
ficoms
or
in
fiaddl
lret
shrl
jo
xchg
xchg
pop
mov
mov
mov
jl
sbb
fstpl
lds
xor
lock
es
adc
cli
xor
xor
mov
je
jp
cmc
push
dec
in
cmp
scas
les
orl
dec
popa
adc
dec
pop
pop
xor
pop
stos
imul
andl
les
and
xchg
in
push
lods
addr16
inc
and
cmpl
xchg
dec
cmc
fldt
sub
inc
xchg
pop
xor
xor
mov
inc
jge
mov
les
xor
jmp
insb
dec
scas
push
popa
pop
jno
mov
les
repz
pushf
xlat
test
inc
sbb
imulb
daa
popf
sub
jne
arpl
popf
lods
sub
push
lods
adc
cli
sub
mov
inc
or
jns
dec
andl
pusha
repnz
add
xlat
xchg
rclb
lods
push
xchg
sub
mov
shlb
cs
push
lcall
ljmp
inc
lods
xlat
gs
outsl
adc
pop
inc
ret
loope
push
or
sbb
push
add
push
dec
adc
cmp
adc
mov
std
ss
imul
xchg
stos
and
mov
shl
and
pop
cmp
sarl
inc
pop
nop
or
loopne
add
jns
fisttpl
pop
pop
mov
push
cmpsb
mov
mov
mov
movsb
push
push
push
mov
jo
sti
xor
cmp
mov
js
pop
sub
stc
hlt
push
mov
mov
mov
cli
nop
sub
lock
setbe
push
test
cs
call
leave
xchg
sti
cltd
jecxz
xchg
mov
repnz
out
mov
jne
push
gs
sbb
add
xor
pop
mov
test
jnp
insb
pop
xor
sbb
or
adc
xor
int3
push
repnz
xchg
lcall
scas
mov
js
mov
enter
and
and
or
sbb
cmp
cmp
cmp
push
daa
jnp
scas
inc
popa
mov
orb
or
sub
mov
mov
addr16
pop
sbb
repz
repz
in
shll
cs
mov
fmul
std
dec
add
fldl2e
xor
adc
out
cmp
pop
adc
push
mov
xchg
fsubl
xor
sbbl
push
stos
lods
aam
or
sahf
je
pop
inc
mov
jbe
xchg
add
cmpsl
outsl
jns
xor
repz
lock
popa
adc
outsl
enter
aas
jg
into
jns
add
sbb
adc
fdivrs
mov
adc
scas
inc
jb
add
pushf
add
addl
mov
add
call
dec
lods
xlat
popa
mov
and
jecxz
test
fidivrl
scas
lea
es
pop
cld
push
idiv
sbb
xchg
push
xchg
and
lcall
roll
fsubs
inc
rcll
sarb
fdivs
clc
nop
sub
pop
push
cmp
outsl
pop
push
scas
sbb
mov
mov
scas
daa
mov
mov
push
push
sbb
xchg
outsb
add
dec
arpl
adc
pusha
fcmovne
push
cmpsl
in
push
jns
or
mov
dec
or
mov
repnz
loop
ret
push
mov
adc
xchg
lds
lods
push
addr16
mov
mov
rcrb
xchg
push
jae
push
test
cmp
lock
stos
iret
pop
jg
test
stos
xchg
addr16
call
xor
stc
fdivl
jae
in
repz
das
lcall
push
insb
scas
aam
jnp
cmp
in
push
mov
into
cld
popf
lds
jns
rorb
js
sub
loopne
lahf
mov
sbb
ret
adc
mov
shll
or
dec
push
test
in
inc
fistl
and
enter
mov
inc
lret
ss
or
fdivrl
fisubs
xchg
test
pop
mov
inc
jle,pt
pop
inc
in
inc
jl
mov
xchg
pop
loop
pushf
pop
xchg
lea
mov
mov
scas
pop
lds
cs
push
shll
and
push
int
test
int3
jae
movsb
fmuls
mov
mov
lret
clc
cwtl
loop
push
xchg
add
scas
xor
lds
mov
xchg
cwtl
jecxz
adc
rcrl
and
or
inc
repz
and
mov
movsl
sbb
mov
call
sub
frndint
push
pop
ja
ljmp
loopne
stc
sub
pushf
shl
push
xchg
mov
jo
test
popa
aaa
xor
or
inc
cmpsb
int3
sub
push
xor
out
xchg
stos
ss
icebp
std
std
mov
or
shll
mov
inc
push
jp
in
mov
xchg
out
cmp
rorb
jbe
ret
sti
dec
mov
movsb
pop
cmp
outsl
addb
push
xchg
jo
adc
sbb
subl
adc
enter
adc
sti
sahf
mov
cmpsb
lods
out
mov
add
loop
push
rolb
repnz
testl
sbb
add
add
inc
divb
mov
inc
out
xor
xor
pop
repz
bound
dec
popf
cwtl
test
imul
sbb
xchg
adc
cmc
sub
xor
mov
mov
sbb
mov
inc
and
cmp
dec
jns
add
mov
into
pop
cmp
scas
mov
in
push
fwait
scas
xchg
pop
fcmovnbe
inc
mov
jle
and
push
hlt
cmp
call
pop
ret
sub
ljmp
mov
pop
jb
push
adc
dec
mov
xchg
xor
out
pop
subl
or
idivl
pop
inc
rcrl
je
fcmovnb
jns
andb
push
jnp
popf
das
cmp
inc
push
inc
dec
cld
jbe
cmp
adc
movsb
scas
sub
jl
rcrb
sbb
icebp
sbb
icebp
hlt
inc
xor
aam
inc
iret
jno
jne
test
dec
jp
push
lds
xchg
xchg
xchg
jmp
or
mov
lcall
jae
inc
jmp
xlat
ret
out
mov
les
cld
icebp
ja
repz
sub
inc
push
jecxz
sar
shll
stc
xacquire
dec
adc
push
adc
sbb
sub
fisubrs
mov
fstps
loopne
inc
dec
push
jge
jns
inc
imul
pop
push
mov
sbb
or
push
add
testb
mov
sbb
xchg
cmp
in
and
jnp
push
subl
outsl
xchg
aad
out
dec
xchg
inc
inc
mov
or
dec
push
mov
pop
jnp
add
xchg
mov
ds
xchg
lcall
xorb
mov
pop
xchg
mov
cmp
sahf
sub
js
pop
cltd
adc
ja
mov
jb
inc
jge
into
inc
es
rep
call
punpcklbw
test
xlat
call
out
dec
outsl
test
in
inc
icebp
cmpsb
pop
mov
dec
jmp
mov
mov
ljmp
xor
cltd
sub
cmp
pushf
sti
mov
stos
xchg
inc
xlat
add
xchg
pop
mov
icebp
push
dec
push
mov
lods
jno
jl
cld
addr16
cld
imul
rcrb
in
es
cmp
in
cmp
sar
mov
jnp
cmp
mov
xchg
xchg
cmc
mov
data16
xchg
imul
inc
dec
loop
lea
mov
dec
jge
fstpl
sbb
xchg
jmp
in
dec
mov
xor
cmpb
push
inc
sub
mov
or
ret
cmp
jle
xor
rorb
xchg
pop
xchg
mov
into
xlat
in
hlt
lahf
sbb
cmp
xchg
les
jne
fnstsw
lea
sub
mov
mov
pop
sub
aaa
pop
jge
fdiv
push
mov
repz
adc
rcrl
and
mov
pop
out
pusha
ljmp
xlat
in
cld
add
das
cmp
mov
fcom
sub
ret
into
dec
pop
add
jmp
into
xchg
call
das
xor
popa
adc
cmp
lret
loop
outsl
dec
xorl
push
sti
cmp
jb
pop
popf
fcmovne
pop
sub
cmc
jbe
jmp
loopne
inc
pop
shld
and
lea
or
sub
and
mov
mov
pop
pop
sub
sub
mov
into
ret
jmp
push
in
jmp
inc
jmp
mov
mov
xor
out
shlb
adc
add
push
mov
out
jne
jge
or
mov
inc
cmpsb
pop
loope
in
shl
or
movq
es
and
sbb
add
dec
fldl
xor
imul
insb
cmp
cwtl
pop
aas
daa
addb
popa
js
jns,pn
add
jp
push
pop
xchg
int
xchg
xchg
aad
lahf
pop
add
dec
mov
fdivrl
inc
sbb
mov
hlt
insb
add
arpl
pop
pop
ret
or
inc
decb
insl
adc
leave
arpl
pop
icebp
je
lods
pop
shrl
xchg
push
adc
mov
sti
mov
mov
repnz
add
mov
push
div
lea
push
ds
cmpsl
and
mov
push
xchg
ljmp
les
test
cmp
popf
sub
dec
mov
into
push
lock
js
test
sarb
movl
and
adc
jp
into
out
out
pop
push
jae
adc
push
jo
pop
ret
hlt
adc
rorb
xchg
imul
jge
movsl
pop
dec
dec
jmp
xchg
into
scas
sub
and
jp
sbb
test
push
lcall
sbb
int3
or
test
and
add
mov
stc
xchg
fcompl
mov
jge
mov
xchg
pusha
enter
pop
pop
lret
inc
sbb
jns
fistpll
sti
push
jo
mov
hlt
fnstenv
test
sarl
mov
loopne
gs
sarl
insb
pop
movsl
push
mov
dec
repz
push
add
ficomps
loop
pop
scas
in
fists
cmpsl
divb
push
dec
repz
push
mov
mov
movl
int3
fmull
out
mov
dec
xchg
cld
fwait
scas
and
push
popf
dec
dec
push
das
loopne
repnz
mov
rorb
mov
lret
pusha
mov
pop
jle
mov
or
mov
and
jp
out
sbb
data16
push
mov
adc
out
push
adc
push
push
sbb
leave
scas
dec
xchg
mov
lods
stc
inc
add
or
movsl
dec
pop
sub
pop
or
push
xchg
out
jae
fwait
addl
fcoms
jle
out
std
add
incl
mov
loop
int
enter
sub
stc
push
mov
mov
mov
out
aad
cmp
ret
stc
jo
cmp
mov
push
fistps
xchg
test
jg
jns
push
add
mov
orb
movsb
sbb
fstpl
pop
call
xlat
sbb
jo
int3
enter
loopne
in
test
xchg
jge
inc
ret
mov
xor
test
inc
jmp
xchg
notb
push
std
popf
mov
stc
or
loop
mov
or
nop
rcl
std
mov
mov
push
fcmove
adc
leave
daa
out
and
jns
shll
es
inc
outsl
inc
out
xchg
sub
cwtl
mov
cmc
lret
ja
and
push
push
xchg
mov
out
sti
arpl
or
ds
sub
mov
cmp
sbb
leave
or
out
pop
fimuls
icebp
ds
ss
out
add
push
dec
daa
lds
push
leave
jo
popa
and
sahf
out
mov
call
push
add
dec
int3
add
out
lcall
into
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
mov
push
fsubs
cmp
bound
sub
push
xchg
xorl
xor
lret
xchg
rolb
cmpsb
pop
mov
mov
repnz
xchg
pop
and
or
sbb
faddp
add
mov
xchg
icebp
mov
stos
ds
das
or
aam
mov
sahf
std
cld
iret
or
xor
loop
adc
aad
arpl
lret
es
pop
or
push
add
dec
movsl
inc
hlt
xchg
sub
and
test
xor
aam
xchg
outsb
int3
dec
pop
mov
jb
mov
jp
xchg
lea
mov
push
xchg
or
adc
cs
pop
xor
lret
jmp
mov
es
inc
scas
sub
ja
lock
sti
loopne
push
push
mov
jge
mov
es
push
imul
mov
sub
mov
mov
adc
inc
call
mov
mov
or
mov
es
hlt
cmc
jl
popa
push
pop
test
nop
push
mov
sub
jb
movsb
pop
cmpl
cmp
jo
lret
ds
push
inc
repnz
lds
jns
xchg
fidivl
out
add
mov
fisubl
add
jmp
sbb
jg
cmp
xchg
rorl
mov
scas
xor
inc
pushf
cmp
pusha
mov
mov
popa
or
test
jl
mov
ds
jg
jne
cmpsl
out
push
and
rorl
sbb
push
int3
es
andb
fnstenv
and
jo
xchg
pop
movsl
inc
jp
dec
loope
push
fwait
hlt
or
xchg
lods
loop
stos
adc
jno
or
xchg
pushf
out
imul
dec
xchg
push
lea
mov
sbb
lret
xchg
or
jno
inc
test
es
outsl
mov
mov
leave
and
test
xor
sub
xchg
lret
lea
fidivs
mov
cmpb
mov
cltd
cs
dec
into
pop
xlat
jg
cltd
sbb
add
in
sahf
addr16
sub
pop
mov
xor
cltd
xor
jge
into
fs
or
xchg
sahf
xor
dec
insb
aas
jp,pn
xor
fs
inc
pop
testl
fildll
into
cmp
add
push
mov
mov
shlb
sbb
pop
imul
test
push
cmp
nop
arpl
movsl
ja
add
push
cmp
sub
mov
pop
inc
push
xor
pop
or
call
pop
pop
dec
mov
jo
sub
aas
cmp
push
lds
movsl
dec
inc
enter
adc
stos
and
mov
mov
pop
les
clc
out
mov
inc
daa
xor
or
les
cmp
mov
jge
testl
cwtl
inc
mov
and
imul
push
fldenv
add
xor
add
adc
push
adc
ja
addr16
sub
int
sub
or
aam
xor
sub
call
stos
xchg
rcr
push
push
mov
rorb
jp
mov
jb
mov
dec
inc
mov
ret
mov
pop
jbe
sub
xchg
mov
pop
cmp
ja
or
sbb
arpl
pop
ret
jle
iret
pop
gs
ret
out
pop
xchg
fadd
inc
bound
or
in
jo
dec
mov
and
sbb
and
jbe
mov
and
inc
pop
pushf
dec
pop
pop
mov
mov
out
push
loop
push
idiv
shrl
adc
push
or
xchg
xor
pushf
and
add
sbb
std
pushf
icebp
lcall
lret
nop
notb
sub
xchg
sbb
add
notb
fldcw
mov
mov
pushf
xorb
insl
xchg
dec
lds
cld
mov
pop
lret
outsl
mov
jbe
stos
fisubl
inc
es
stc
pop
lock
hlt
mov
rcll
pop
adc
xor
inc
je
int3
jmp
outsl
mov
fsubs
dec
lock
cld
mov
or
out
je
rclb
sbb
fdivl
cmp
aaa
jne
scas
sub
and
adc
and
add
fsts
xor
adc
mov
add
fimull
mov
mov
xchg
lret
out
mov
arpl
pop
cs
les
pop
fadds
mov
int3
scas
push
les
js
dec
insb
fwait
cmp
push
scas
dec
sbb
insl
or
adcb
sbb
cmp
cmp
xchg
push
pop
and
shl
popf
sbb
or
pop
shr
push
xchg
mov
dec
loopne
lods
dec
mov
pop
in
mov
inc
lret
push
mov
add
xlat
or
cli
jle
lock
xchg
ss
sbb
scas
ret
fs
clc
mov
add
push
out
imul
sbb
inc
sbb
in
lret
fsubs
cmp
mov
dec
mov
xchg
loopne
je
adc
rclb
push
rcl
add
cs
dec
in
in
addr16
fldt
xor
jecxz
add
jbe
adc
adc
adc
sbb
pop
negl
jne
lock
mov
xlat
inc
sbb
pop
int
jecxz
in
mov
rolb
lahf
adc
ja
loope
push
mov
inc
stos
pop
repz
jecxz
ffreep
dec
jno
psubq
or
xchg
push
lods
mov
or
xor
or
mov
sub
pop
adc
imul
xor
xor
sti
xor
testl
and
jp
jl
mov
mov
mov
xor
add
jg
popl
jecxz
hlt
lods
jbe
subb
sti
idiv
jge
sub
dec
test
ficoms
mov
add
je
dec
rcr
cmpsl
mov
testl
xchg
add
mov
ret
popa
push
mov
add
mov
mov
xchg
mov
cmpsl
int
in
nop
pop
imul
xor
cmpsl
scas
push
loope
mov
mov
hlt
mov
mov
out
xor
aam
mov
cmp
adc
lock
out
mov
or
lds
inc
xchg
or
or
cmpl
xchg
fxch
arpl
sub
shl
mov
lea
xchg
mov
mov
jne
les
lahf
mov
in
jge
test
inc
inc
mov
aad
or
xchg
xor
data16
or
dec
imul
lock
js
cwtl
xor
cmpsb
sub
jecxz
ss
out
insb
pop
add
testb
ret
jne
lret
jnp
push
adc
pop
mov
insb
jecxz
adc
loop
insl
inc
scas
scas
je
sbb
dec
sub
insb
push
jbe
cmp
outsl
imulb
jmp
sbb
fstps
dec
or
insl
stos
and
scas
push
loopne
adc
fisubrs
xlat
jno
jnp
lcall
sti
sahf
mov
pop
mov
inc
mov
scas
pop
jae
int
and
or
inc
js
clc
mov
jge
roll
mov
loope
icebp
mov
inc
out
insb
stc
ds
hlt
mov
add
inc
insb
stos
cwtl
jl
and
out
sub
jns
sbb
stos
and
mov
fldl
add
xchg
subl
call
cmp
data16
or
stos
cwtl
mov
jp
insl
pop
and
sbb
xor
fucom
imul
inc
push
ret
je
push
and
ljmp
mov
test
rcrb
inc
js
pop
mov
pop
and
fwait
das
repz
sbb
sub
mov
sbb
sub
rolb
in
xor
cmpsb
cmp
mov
mov
pushf
loopne
cmc
cmp
cmp
pop
inc
cmp
or
arpl
mov
jmp
xchg
fdivrs
inc
scas
mov
xchg
mov
adc
pushf
xchg
sub
xchg
jecxz
lods
test
movsl
out
addr16
sub
add
shl
jb
inc
dec
adc
inc
rorl
or
mov
inc
stc
mov
xchg
daa
pushf
jmp
jecxz
or
outsl
icebp
cmp
lahf
xchg
xchg
imul
cmpsb
dec
jp
fsubp
push
call
cwtl
pop
inc
je
inc
fs
enter
jp
and
xchg
into
aam
hlt
add
mov
ret
inc
inc
mov
jnp
jb
jae
mov
jbe
xor
cs
ss
subl
xor
inc
inc
mov
outsl
addr16
aas
iret
hlt
rcl
cmp
push
or
shrb
out
pop
fsubs
mull
jb
dec
stos
jns
sub
sbb
add
push
repnz
fs
push
cmpsl
addb
outsl
push
mov
sub
xor
loope
push
and
fs
stos
mov
fs
fs
lock
xchg
xor
jge
leave
loopne
inc
outsb
push
lret
and
fsubrs
lods
scas
cmpsl
adc
sub
subb
out
fistpl
sub
jecxz
in
int
fstl
sub
std
sti
push
xor
bound
mov
fs
jno
daa
jle
lcall
jmp
scas
push
pop
jp
xor
jnp
or
inc
sbb
mov
sahf
pop
int
lret
inc
lock
jecxz
xchg
mov
test
gs
mov
rorl
push
in
nop
pop
fcomip
fcomip
push
hlt
adc
lods
out
mov
mov
out
pop
mov
sub
push
jne
call
sub
cwtl
add
rcl
jae
dec
inc
push
int3
or
jae
xchg
jne
cmp
scas
xchg
lds
push
test
mov
push
scas
adc
add
sbb
and
mov
stc
mov
insl
fnstenv
gs
xchg
cmpsl
jmp
sbb
mov
jle
xchg
jle
stos
rol
inc
into
mov
fwait
in
xor
sbb
lea
lock
stos
inc
repnz
xchg
xor
adc
in
or
test
das
add
sub
sbb
mov
fistpll
fnstcw
push
mov
dec
loop
dec
add
inc
scas
neg
push
shll
loopne
push
mov
xchg
test
push
pop
subb
sub
push
movsl
inc
xor
pop
roll
inc
pop
orb
cmp
aad
shrl
push
shll
add
pop
lock
popf
mov
mov
and
sub
scas
pusha
scas
xchg
pop
sub
mov
fnstcw
push
in
jnp
dec
nop
hlt
xchg
jg
dec
xor
sbb
and
mov
outsb
dec
fdivl
jmp
cli
lock
sbbl
pop
sbb
les
push
sub
jnp
pop
dec
adc
movsl
in
imul
pop
jp
xor
icebp
ss
mov
fidivrl
mov
popf
push
sub
stos
inc
or
jns
das
unpckhps
cvtpi2ps
rclb
sbb
das
adcb
mov
loopne
xchg
xlat
sbb
cmp
xchg
jg
add
inc
mov
xlat
mov
fs
jmp
aaa
movsb
lcall
sub
sbbl
cmp
test
js
lea
sahf
and
and
leave
test
inc
lcall
pop
adc
loop
pop
gs
cmc
into
in
popf
adc
adc
xchg
xor
in
xchg
or
mov
inc
nop
fcmovnu
mov
cmp
and
and
inc
popa
add
sub
jb
enter
mov
inc
xlat
mov
in
jnp
data16
hlt
pop
mov
fs
or
hlt
jle
addr16
mov
jns
push
xchg
scas
sbb
dec
mov
sbb
and
popf
inc
xchg
cmp
pop
enter
js
xchg
add
cld
sub
dec
jg
ftst
mov
outsl
dec
ljmp
jle
adc
dec
into
cmp
push
dec
jmp
dec
dec
mov
xrelease
mul
clc
test
mov
and
int3
sbb
lea
pop
ljmp
dec
xchg
sbb
adc
adc
add
fcoms
repnz
cltd
imul
mov
bound
scas
push
push
test
xor
xchg
je
xchg
mov
adc
pop
lea
movsb
movsl
stos
les
add
sub
ret
or
cli
out
icebp
and
dec
sbb
jle
push
or
adc
dec
mov
hlt
jae
es
mov
test
mov
mov
int3
pop
mov
outsb
loop
pop
aas
mov
js
bound
data16
test
or
jle
pusha
lock
jmp
xchg
daa
mov
jo
out
jge
pop
push
in
adc
nop
repnz
ret
pop
outsl
mov
jno
push
cltd
call
sbb
lahf
cmp
lock
fdivr
xchg
mov
in
sbb
fsubrp
lahf
int
fnstsw
cmc
enter
stc
pop
test
jbe
mov
cmp
and
mov
sub
pop
sub
sbb
sub
cmpb
mov
push
jns
sbb
push
aaa
mov
ljmp
scas
cmp
jmp
popa
sub
and
xlat
imul
pop
enter
mov
in
xor
sbb
sub
lcall
pop
ret
lods
cld
icebp
cmp
jle
or
insl
in
jno
push
adc
add
cmp
sbb
movsb
rcrb
lret
inc
icebp
out
js
mov
mov
arpl
mov
out
cmpsb
repnz
sub
jmp
ss
stos
xor
and
leave
jno
inc
xor
rclb
mov
push
popa
int
hlt
fldl
clc
je
xchg
cmp
fists
addr16
insl
loop
dec
mov
xor
or
jp
jae
push
sbb
lret
jnp
add
mov
sub
xor
mov
adc
add
clc
jle
lcall
leave
pop
rorl
pop
and
jnp
mov
adc
in
popf
ret
nop
xor
cmp
mov
imul
xchg
jns
icebp
and
or
icebp
dec
push
push
outsl
xlat
shll
cmp
stc
or
mov
nop
add
aam
popa
sbb
rorl
push
mov
push
push
mov
arpl
mov
adc
outsl
in
jo
movsb
shl
and
and
lcall
dec
leave
push
jge
mov
sti
mov
jno
repz
cmp
push
or
rcrl
rcrb
xor
jb
xor
sub
xor
movl
cli
add
xchg
push
sbb
xchg
pop
pop
cld
inc
cmp
daa
loopne
mov
adc
adc
imul
daa
mov
int3
or
cli
rorb
xor
daa
push
sub
mov
aas
insb
gs
jae
jp
xchg
je
and
test
int3
xor
shrb
pop
push
jae
pusha
test
push
jb
jne
mov
add
push
or
insb
sub
and
and
cmpb
mov
aad
push
cmp
loope
push
xor
cmp
add
xor
inc
mov
lcall
xchg
stos
add
ret
jecxz
mov
mov
in
loopne
sub
push
pop
cld
mov
call
adc
jg
stos
mov
sub
mull
jb
movsb
dec
mov
fwait
mov
sahf
repnz
xor
xchg
cmpsl
shrb
rcll
icebp
call
sar
ss
fwait
lods
xchg
in
mov
mov
sbb
es
jns
int
cmp
and
sub
fwait
cmp
adcl
sbbl
aaa
frstor
push
and
jns
mov
mov
xchg
fimuls
test
jge
icebp
aas
add
cmp
fisttpll
pop
cmp
xchg
sbb
inc
lret
add
add
popa
std
in
adc
inc
faddp
mov
fadd
fildl
stos
clc
jno
mov
out
in
imul
and
adc
or
jmp
mov
mov
jne
repz
cmpsb
sub
outsb
pop
loop
xchg
into
scas
repz
es
rcrl
cmp
lahf
imul
and
dec
loop
or
pop
dec
adc
mov
es
sbb
inc
les
pop
adc
mov
stos
adc
out
inc
push
sbb
ret
in
and
mov
test
push
push
je
cmpsl
neg
clc
jp
pushf
lea
cltd
movsl
ljmp
mov
inc
add
push
xor
jp
push
mov
fimuls
sti
mov
mov
sub
sub
stos
xor
cli
cmp
xlat
insl
push
pop
xor
addr16
adc
add
mov
push
ret
fdivp
or
mov
daa
imul
lea
imul
addr16
add
push
flds
or
cmpsl
ja
push
arpl
in
mov
insl
cmpsl
jge
testl
nop
fsub
adc
and
add
mov
and
scas
mov
les
or
aas
pop
xchg
int3
mov
fdivs
out
inc
mov
fwait
mov
sbb
adc
xchg
add
sti
sbb
mov
shl
stos
pusha
pop
bound
test
stos
je
in
and
dec
stos
loopne
jmp
pop
push
and
adc
lcall
mov
adc
lea
mov
repz
xchg
mov
xlat
in
xor
aaa
sub
push
data16
fistl
push
inc
pop
sbb
mov
out
aas
cmc
push
add
mov
lret
mov
mov
ret
clc
imulb
pushf
cmp
jne
fwait
sbb
jmp
fisttpl
inc
add
cs
mov
imulb
nop
add
mov
movsl
pop
les
and
pusha
hlt
subb
in
cmp
cs
sub
in
push
mov
fstps
lea
jp
pop
push
fwait
scas
push
cld
bound
test
notb
loop
or
outsl
xchg
mov
rol
sbb
adc
pop
add
test
cmp
adc
mov
stos
push
scas
mov
sarb
pushf
movsl
or
movsl
push
movsl
dec
rolb
rol
rcl
and
xchg
adc
dec
imul
hlt
aaa
mov
ds
filds
std
sbb
mov
data16
jns
mov
lods
clc
sbb
mov
pop
sub
mov
jns
test
xchg
scas
into
mov
lock
push
imul
sbb
or
adc
and
mov
pushf
mov
inc
cltd
adc
ret
xchg
mov
sarb
out
xchg
jae
stc
push
lret
xchg
push
daa
sarl
add
pop
cmp
sbb
sbb
or
mov
adc
mov
cltd
inc
stos
rcrl
mov
mov
add
mov
adc
dec
in
jo
sub
push
jne
xchg
mov
xor
mov
rolb
mov
and
fcomps
stos
mov
inc
fldl
cmp
cli
fs
or
pop
cli
fldt
xchg
faddl
pop
or
inc
nop
xchg
faddl
and
scas
xchg
stc
scas
into
inc
ljmp
mov
clc
mov
add
cwtl
inc
ret
mov
repnz
mov
sub
push
sub
push
xchg
mov
xchg
or
sub
mov
add
jecxz
push
mov
aam
ja,pn
mov
xchg
fistl
or
nop
test
sar
sbb
pop
jb
iret
jae
les
addr16
pop
pop
sbb
inc
cli
xchg
pop
push
mov
xchg
dec
and
push
je
pop
data16
push
pop
xor
add
xchg
iret
repz
xchg
out
cmp
mov
jo
pop
mov
bound
lock
mov
fdivl
mov
repnz
xlat
dec
and
nop
loopne
cmp
and
xchg
add
sbb
ret
rorb
inc
mov
xorb
mov
add
in
pop
fucom
push
mov
ret
jg
inc
or
mov
les
mov
jae
pop
lock
mov
sbb
pop
test
add
pop
or
aaa
and
addl
mov
mov
mov
lea
in
push
add
jl
std
mov
out
sbb
pop
mov
int3
daa
lret
xchg
mov
push
js
xchg
add
outsb
mov
int3
cmp
sub
sub
pop
or
adc
cwtl
sub
cmp
aaa
lods
sbb
pop
xorb
adc
mov
pop
xchg
sub
into
movsb
mov
testb
inc
dec
iret
ror
dec
mov
or
arpl
stos
mov
dec
push
cmp
enter
mov
adc
push
inc
leave
or
and
mov
nop
out
mov
lods
addb
xchg
pop
arpl
and
push
push
jge
imul
and
sbb
int3
cmpsl
jb
mov
pop
sub
adc
sbb
xchg
add
cmp
dec
xchg
sub
daa
pop
push
jle
std
scas
inc
dec
fstpl
sub
out
aaa
push
test
inc
mov
jmp
dec
daa
xchg
in
push
add
mov
jle
hlt
add
loope
adc
cltd
mov
jecxz
or
cmc
orb
add
adc
xlat
call
in
sub
loop
and
mov
and
lcall
lods
jl
xchg
add
movsb
clc
jo
jg
lods
and
sahf
jns
sarb
lea
add
add
sub
sub
fildl
sbb
arpl
fidivl
push
stc
fwait
lcall
call
das
jmp
and
lock
inc
jae
andb
fwait
mov
imul
push
les
lock
lock
cltd
mov
lods
or
push
push
xor
enter
shlb
fisubs
cmp
mov
test
aaa
xchg
pop
add
cmp
mov
inc
mulb
cs
adc
and
mov
mov
mov
inc
ljmp
sbb
and
sub
jg
push
das
mov
lods
jns
pusha
aam
push
icebp
sbb
das
xchg
sti
out
jl
sbb
incl
icebp
add
adc
test
ja
fwait
push
mov
push
jl
in
push
adc
push
inc
test
aaa
shlb
or
cmp
xchg
pop
jecxz
xor
lcall
sub
andb
test
sub
out
xchg
jno
mov
pop
adc
lahf
sbb
jge
stos
cs
and
pop
add
movsb
pop
push
outsb
mov
inc
sub
adc
divb
and
icebp
out
mov
xor
aad
adc
sbb
add
fdivrs
inc
data16
dec
ljmp
jnp
iret
jmp
popf
in
jge
xchg
push
inc
inc
mov
sahf
xor
inc
repnz
push
lods
mov
inc
pushf
cltd
sub
shlb
sbb
cli
pushf
push
xchg
fwait
nop
cmpsl
fimuls
aas
mov
jp
push
pop
mov
loopne
mov
adc
ficoms
xor
lcall
aaa
adc
dec
dec
mov
ds
sbb
jge
fs
mov
addr16
jae
push
mov
cli
adc
cmp
jnp
fidivrl
xchg
adc
pop
mov
loope
xchg
inc
fwait
stos
cli
int3
popa
inc
mov
out
push
inc
mul
cmp
int3
add
movsl
sub
inc
dec
mov
cmp
imull
push
dec
mov
push
sub
mov
rcll
shrb
test
pop
aaa
mov
push
adc
outsl
pusha
std
int3
adc
rolb
inc
dec
stc
test
stc
stc
sbb
add
xor
pop
xchg
into
xchg
mov
and
test
or
xchg
rolb
inc
shlb
out
sbb
lods
gs
nop
jmp
divb
lods
test
cwtl
je
insl
out
pop
fcmovnbe
das
repz
test
idivb
push
mov
jp
test
ret
push
push
lahf
out
jge
flds
in
cmp
ds
sbb
and
and
push
pop
pop
inc
in
sbb
pop
and
stos
xchg
loop
sub
mov
fldcw
mov
mov
lock
sub
push
mov
push
adc
bound
jecxz
test
dec
rol
outsl
mov
hlt
pop
mov
xchg
popf
pop
out
fcomp
sbb
and
adcl
mov
push
adc
cmpl
stos
xchg
dec
mov
or
inc
dec
lahf
mov
mov
test
xlat
sbb
mov
bound
cmp
iret
lahf
and
push
pop
rolb
cmc
arpl
imul
xchg
iret
jne
dec
leave
enter
test
mov
sub
mov
ret
dec
fnstenv
mov
aaa
into
loop
mov
dec
mov
dec
ss
push
sub
xchg
mov
mov
pop
lahf
in
ss
insb
icebp
jl
and
pop
inc
or
jno
jg
push
insl
pop
pop
inc
jl
decb
mov
loope
xor
daa
jp
dec
sub
mov
popa
pop
jmp
jo
dec
inc
xchg
fs
iret
cmp
mov
jae
mov
fdivl
ret
xor
or
aam
sbb
aad
mov
aad
ret
cmpl
addr16
push
outsl
mov
in
test
call
outsb
sahf
push
cmpsl
addr16
das
jmp
nop
or
hlt
repz
xor
aaa
jb
xchg
and
push
stos
cmc
push
push
or
lahf
je
push
shr
pop
dec
sub
push
jo
in
jnp
or
mov
fldenv
std
add
adc
mov
je
xor
sub
insb
imul
mov
mov
cmp
mov
jge
sbb
mov
lock
pop
xchg
push
push
fsubp
lahf
dec
roll
clc
mov
adc
sbb
push
mov
xchg
add
jo
lods
push
or
nop
cwtl
jns
lods
fwait
call
fistpll
sub
push
test
in
scas
jp
je
mov
jecxz
mov
popf
push
rorb
cmp
sub
push
mov
mov
fidivl
mov
mov
cmp
pop
lds
sub
cmp
adc
and
rorl
adc
add
push
pushf
mov
shl
mov
lock
jns
sbb
roll
lret
xorb
mov
in
cmp
or
out
rol
mov
data16
andb
xor
push
cmp
in
fs
jae
jb
adc
jb
inc
inc
or
repz
jl
sub
add
mov
xlat
mov
cld
push
xor
gs
mov
jle
in
mov
fbld
ds
nop
lahf
out
mov
cmp
xor
add
inc
jnp
push
outsb
dec
mov
popf
cmp
or
sub
fisttpl
in
inc
lret
aaa
xor
iret
lret
fmul
imul
mov
jae
test
jae
jecxz
dec
jmp
pop
add
inc
push
push
sbb
scas
pop
imul
sbbb
clc
movsb
cld
and
mov
cs
fsub
pop
loopne
int3
iret
orb
sub
pusha
jno
jnp
fbld
mov
or
mov
sub
and
mov
decb
pop
pushf
pusha
gs
popf
sbb
cmp
ds
jbe
repnz
sub
push
adc
sbb
sub
les
fstps
jecxz
je
pop
gs
rol
les
jmp
add
and
pop
mov
notl
loope
lods
cmp
imul
xor
addr16
xchg
xor
jae
xor
or
shl
ds
dec
mov
jno
dec
mov
cmp
jmp
mov
orl
arpl
push
ds
xor
mov
sahf
fdivrl
jb
cltd
cmp
xor
divl
out
sub
js
mov
test
xor
pop
fisubl
dec
xchg
xlat
sbb
insb
jp
stos
inc
jge
les
sbb
mov
and
lcall
mov
sub
push
sbbb
mov
sbb
add
outsb
xchg
stos
jle
shrl
ror
imul
mov
pop
mov
mov
fnsave
imul
lods
test
ljmp
mov
mov
adc
ret
add
pop
push
or
sbb
lock
sub
fninit
mov
jae
jg
outsb
pop
dec
inc
in
push
fsubl
sbb
jbe
nop
pop
dec
and
push
sahf
out
sub
imul
fbstp
push
cli
adc
iret
jno
leave
mov
das
mov
pop
mov
cs
push
stos
icebp
xchg
xchg
sbb
or
es
push
adc
mov
dec
xchg
cwtl
addr16
lea
pop
arpl
xchg
mov
jbe
mov
mov
iret
mov
lock
pop
and
push
std
jbe
xor
outsb
pop
bound
popf
jbe
mov
imul
testl
pop
push
in
repnz
cs
outsb
adc
push
xchg
or
mov
out
jb
das
sub
mov
dec
rorl
aam
inc
cmp
inc
cltd
inc
in
inc
cltd
test
addr16
or
cmpsl
jbe
shl
daa
sub
cmp
outsl
fnsave
fsubrs
pop
shll
push
inc
pop
and
popf
js
leave
push
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
lcall
add
add
adc
loop
inc
adc
in
add
jle
movsl
xor
out
stos
clc
ret
xlat
push
push
dec
sbb
jg
push
inc
fildll
inc
sbb
icebp
pop
push
cli
sbb
or
jbe
and
xchg
and
adc
fisubl
jg
or
int
mov
adc
lahf
movsb
ret
dec
test
enter
add
add
sub
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
sbb
daa
xor
adc
out
and
dec
fiadds
call
xor
adc
sbb
push
movsb
mov
xor
enter
jl
inc
xchg
push
loopne
push
in
mov
add
add
pop
sub
sub
addb
into
add
pop
add
add
push
push
jmp
sub
mov
in
dec
xchg
out
adc
xchg
sub
idivb
cli
or
adc
scas
mov
cli
and
xchg
mov
and
add
and
aam
aam
ljmp
je
loope
inc
mov
pop
add
add
clc
mov
shll
int3
jle
jmp
jo
aad
sbb
sub
jnp
ss
movsl
subb
test
scas
mov
jecxz
or
push
out
sbb
and
fmuls
pop
add
sbb
mov
sub
add
add
mov
sti
cmpsl
mov
dec
mov
add
pop
add
add
pop
fidivs
aaa
pop
leave
or
leave
data16
das
fisubs
aam
aas
js
pop
cld
ljmp
out
mov
or
clc
lock
push
and
repnz
xchg
pop
dec
subb
adc
adc
dec
add
out
lods
cmp
stc
stc
idivb
lcall
add
add
add
push
hlt
inc
stos
cmp
dec
sbb
dec
stos
jne
mov
xchg
cmpb
sub
mov
push
and
ljmp
popl
pop
push
dec
or
xchg
xor
insl
cmp
ret
sbbl
fisttpl
aas
add
push
xor
gs
aaa
push
gs
xchg
iret
add
pop
add
add
fucomp
mov
push
cli
and
nop
mov
insb
sbb
dec
jb
pushf
add
mov
imul
xor
call
inc
or
fwait
ljmp
jecxz
and
dec
mov
stos
and
insb
mov
aas
rol
jmp
add
add
sub
das
jle
jg
imul
repnz
pop
aaa
daa
loope
add
add
cmc
gs
jmp
xchg
pop
mov
dec
mov
cmp
push
loopne
pushf
pushf
icebp
scas
subl
sbb
adc
xchg
lret
sub
mov
test
jbe
imul
push
push
jo
int3
xor
adc
or
pop
xor
cmpsl
nop
jo
jp
mov
add
add
and
mov
mov
xor
and
add
mov
movsl
pushf
enter
dec
add
mov
sbbb
or
adcb
push
adcl
cmp
pop
sar
movsl
dec
outsb
jg
inc
mov
clc
repnz
adc
repnz
arpl
in
cmp
imul
add
or
ret
lods
sub
mov
fndisi(8087
add
pop
add
add
icebp
decl
push
outsb
xchg
ror
push
add
push
icebp
and
test
cmp
aam
clc
mov
ss
lcall
adc
cltd
adc
in
sbb
lods
fisttpl
sub
jle
mov
stos
jl
lcall
stos
jne
cmpsb
push
pop
or
bswap
pop
add
fld
add
ror
outsl
clc
shrb
add
pop
add
add
cmp
notl
mov
or
fwait
cmp
ret
mov
pop
dec
pop
pop
and
push
mov
cmpsb
std
pop
jns
ret
in
inc
lock
test
sub
ret
mov
rcl
repz
mov
fidivs
push
dec
cli
pop
xor
prefetchw
or
inc
sbb
popa
pop
lock
out
repz
mov
ret
in
lcall
add
jns
mov
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
push
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
sahf
sbb
xchg
sbb
add
push
inc
add
push
inc
add
inc
add
inc
add
push
inc
add
sbb
add
mov
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
inc
add
or
andl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
mov
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
sbbb
out
inc
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
mov
add
pop
add
add
jl
sarl
out
add
xchg
or
jp
pushf
xchg
addr16
cs
xchg
cltd
hlt
mov
mov
push
jnp
mov
mov
jle
push
aad
sahf
inc
aad
je
dec
adc
jmp
xor
out
pop
xlat
pop
sub
jmp
mov
mov
pop
add
sub
cli
jl
xlat
push
push
push
add
add
imul
clc
adc
xor
fucom
add
mov
gs
adc
rorb
rcrb
jo
or
pop
out
jo
adc
lret
jmp
sub
out
or
mov
mov
sbb
mov
jb
xor
jg
add
mov
jg
ljmp
push
pop
cmc
add
pop
add
add
mov
pop
movb
adc
fnsave
test
lods
xchg
jnp
mov
mov
stos
jl
xchg
stos
cmc
cmp
pop
in
and
rdmsr
jo
mov
jl
dec
jno
push
jo
aas
sbb
in
mov
mov
das
lcall
push
sbb
add
cmp
cmp
in
fimuls
sub
add
add
aas
xor
outsl
xor
mov
adc
addr16
and
dec
jno
pop
inc
leave
loope
push
mov
popf
lods
sub
mov
cmp
fmull
add
inc
push
lods
movsl
lahf
or
test
ss
lret
xor
inc
pop
rclb
pop
popa
jno
jbe
nop
outsb
icebp
push
add
fnstenv
std
negb
sub
add
dec
fsubrl
add
add
stos
xor
dec
ss
add
sbb
cmc
cmp
mov
mov
xor
sub
and
push
mov
adcl
dec
movsl
mov
jns
inc
mov
cwtl
dec
xor
loope
aas
out
aad
jne
pusha
leave
fmul
cmp
add
xor
jb
inc
mov
xchg
add
add
pop
add
add
rorb
in
adc
lcall
xchg
sbb
lods
mul
cli
push
dec
inc
in
in
ds
enter
into
adc
test
mov
clc
mov
push
stos
sarl
sbb
xchg
inc
jmp
nop
mov
and
add
add
pop
sub
loope
fadds
add
add
mov
es
inc
sub
aad
jno
xor
imul
cld
sarb
pop
jl
insl
lcall
lods
lods
pop
das
cmp
jbe
movsl
mov
mov
jecxz
shll
cmpsl
arpl
je
sbb
pop
enter
bound
loope
add
mov
aam
xor
and
mov
add
pop
add
add
fs
inc
jo
pop
sbb
dec
mov
xchg
jno
pusha
cmp
or
popf
rorb
ret
pop
lret
mov
rolb
add
dec
mov
iret
js
jo
cmp
icebp
lret
icebp
pop
daa
into
mov
lds
shlb
sbb
push
pop
stc
rcrb
cmp
add
mov
out
push
xor
add
add
mov
add
imul
and
jae
mov
cmc
pop
add
cmp
mov
insl
add
xor
xorb
insl
shll
adc
shlb
jno
sub
cmpsb
and
fistl
lret
orl
pop
lock
jmp
repz
fimull
lcall
add
add
add
add
xchg
xchg
xchg
cmp
in
aas
movsb
repnz
fcomps
xchg
mov
dec
cmp
pop
aam
sub
mov
cltd
pop
push
xorb
xlat
xchg
xchg
mov
sbb
dec
cmpsl
test
enter
inc
add
add
pop
iret
pop
aad
ss
dec
add
ja
add
add
adc
push
imul
shl
popf
xor
sti
popf
repnz
ror
or
jno
push
sbb
xchg
dec
sbb
inc
pop
pop
leave
in
sub
cmp
scas
stos
sbb
lret
fucomp
bswap
xor
or
repz
andl
ja
add
cld
lds
in
push
pop
fiaddl
add
add
out
nop
out
frstor
lret
dec
mov
jp
fcmovne
outsl
mov
data16
add
cld
dec
in
inc
shrb
stos
cmc
lock
add
loope
or
in
stos
jmp
xchg
fs
pop
outsb
ja
inc
in
repz
cmp
rcrb
adc
shrb
shlb
addb
outsb
jae
lret
jle
repz
loop
jns
add
pop
add
add
or
pop
repnz
xchg
cmc
sub
and
fadd
cmp
mov
push
inc
movb
fmul
cld
xchg
xchg
pop
xchg
dec
call
adc
subl
jmp
lock
rcll
xchg
rorl
add
cmc
adc
adc
mov
lds
rcr
add
pop
add
add
lds
int
cmpsb
call
xor
cmp
add
dec
adc
xor
cmpsl
lcall
filds
pushl
sti
cltd
dec
mov
sub
stos
roll
aad
testl
and
pop
data16
in
push
js
add
mov
lock
mov
rcr
dec
sub
add
add
xchg
rorl
jl
mov
test
shr
push
pavgw
pop
pop
adc
outsb
in
es
in
daa
out
popa
jle
fdivl
jo
ret
dec
adc
fildll
mov
ffree
test
xchg
xchg
inc
ret
jnp
mov
add
std
adc
mov
add
add
sqrtps
cmc
das
sbb
xchg
iret
mov
call
add
add
mov
xor
jbe
lea
pminub
mov
rcll
lret
or
sub
inc
cmpsl
lret
add
cli
jmp
negl
dec
mov
cmpsb
out
mov
sub
outsb
push
sbb
xchg
push
ja
scas
or
add
bound
jecxz
sbb
jg
jae
cwtl
lods
testb
xlat
add
int
xchg
inc
cmc
sti
fildll
pop
subl
pop
add
add
shlb
push
jmp
pushf
add
sbb
inc
sbb
subl
push
adc
cs
fstps
mov
xchg
jns
dec
loopne
js
inc
decb
std
jp
mov
cmp
pop
je
test
pop
jno
jl
jnp
jp
orl
je
loop
add
adc
testl
push
mov
faddl
add
add
or
jle
call
shll
jne
mov
mov
les
cmp
dec
push
dec
add
addr16
inc
adc
out
sub
ret
ret
add
cmp
loope
mov
insl
mov
mov
fwait
repz
scas
cmp
add
push
imul
out
jno
mov
pop
add
add
mov
pop
cmpsl
fcomps
imul
imul
insb
fs
adc
sub
fwait
jbe
mov
cmp
xchg
sub
shrb
out
js
pop
nop
popa
pushf
fmull
repnz
or
clc
inc
pusha
push
pop
lds
push
xor
push
gs
pushf
sbb
cmp
add
add
jne
jg
clc
cs
push
in
iret
add
pop
add
add
jl
sub
xor
sub
jg
adc
sbb
mov
mov
stos
movb
lods
mov
xor
mov
xchg
fdivrs
call
mov
repnz
ret
sub
xchg
push
jge
int3
jp
mov
and
push
cwtl
dec
repnz
dec
add
or
dec
mov
je
lcall
add
pop
add
add
pop
mov
cltd
xor
mov
jno
push
xor
jo
repz
rolb
sub
xchg
inc
sub
fbstp
or
jne
sbb
push
push
pop
gs
inc
in
cltd
arpl
inc
xchg
pusha
pop
cmpsl
imul
mov
fists
dec
mov
xchg
adc
aaa
jle
mov
add
add
dec
mov
jecxz
push
or
mov
scas
pop
test
mov
jb
sub
not
mov
ss
mov
mov
pop
les
xor
idivb
dec
sub
sbb
mov
in
hlt
daa
fs
out
add
imul
rolb
add
fisttps
push
or
sub
sti
rolb
add
add
jb
cli
push
dec
test
and
sub
loopne
xor
inc
std
dec
or
bound
in
js
pop
xor
sbb
xchg
push
test
push
adc
cmp
sbb
cmpl
sub
fs
rol
sub
pusha
lea
sub
int
idivb
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
or
sbb
roll
fdivs
lods
mov
cmpsl
dec
sbbb
scas
adc
mov
out
add
push
cmpb
or
daa
lock
hlt
pop
jecxz
negb
insb
jae
fiaddl
aad
jbe
lods
xor
add
and
cmp
jb
cmp
add
add
orb
xchg
fsubs
sbb
iret
push
pop
movsb
add
pop
add
loopne
xlat
add
push
in
into
xlat
adc
sbbl
int3
call
in
xor
pop
fmuls
mov
push
fstpt
mov
loopne
shlb
add
popf
aam
js
pushf
or
add
pop
add
add
mov
xor
mov
iret
mov
pop
fbstp
fisttps
or
clc
mov
lods
fsubr
xchg
iret
inc
es
int
scas
rcrb
dec
pop
stc
fucomp
jg
pop
adc
out
sbbl
loope
adc
lret
int3
sub
xchg
xor
add
mov
jbe
hlt
mov
and
cmpsb
repnz
and
add
add
cmpsb
roll
jmp
ficompl
cmp
call
push
xchg
mov
aaa
add
addl
and
push
inc
or
sbbl
pop
scas
cmp
pop
lahf
inc
pop
inc
jge
inc
xor
cmc
test
lds
lods
or
push
sub
mov
int3
mov
add
xor
into
mov
sub
out
addr16
add
pop
add
add
jne
ds
lea
mov
sub
jecxz
adc
sbbb
sub
adc
imul
cwtl
dec
dec
and
mov
inc
push
add
or
xchg
psubsw
push
subb
aad
mov
adc
fcmovu
nop
mov
insl
cmpsl
add
fucomi
outsb
and
pop
mov
pop
roll
add
add
xchg
lea
ja
dec
es
mov
idivb
test
jg
push
mov
jmp
das
jnp
pop
jno
sbb
pop
fdivrl
pop
not
mov
ret
or
adc
cmc
sarl
int
add
mov
inc
sub
add
add
mov
and
clc
jno
add
pop
add
add
xchg
into
push
push
or
enter
aad
xchg
dec
xor
call
mov
sti
int3
mov
push
push
fsubrl
icebp
in
sti
dec
fwait
push
xor
cwtl
inc
mov
xchg
mov
mov
inc
push
mov
bound
mov
cltd
dec
fists
jecxz
jl
add
mov
and
jg
call
into
inc
mov
hlt
jge
push
lret
roll
add
add
out
inc
add
pop
pop
cs
rcll
dec
adc
mov
sbb
imul
lret
pop
ret
leave
inc
stc
js
aad
popa
orb
inc
and
mov
cmp
sbb
cwtl
push
and
cmp
inc
sahf
mov
movsb
mov
add
sub
sub
lea
sub
add
add
jge
negb
xchg
ljmp
add
fsubrp
lock
push
aaa
test
lods
outsb
or
in
int3
cld
xorb
pop
pushf
testb
sbbl
inc
jne
dec
sbb
mov
adc
aad
push
xchg
js
adc
sub
aas
es
gs
sbb
inc
add
dec
aas
int3
sbb
out
loopne
lods
cmp
jg
add
pop
add
add
fbld
out
pop
imul
cli
xor
sbb
cmpb
xchg
cmp
cmp
sarl
sub
pushf
lret
in
in
lock
dec
push
dec
das
pop
mov
outsb
cmp
jmp
jmp
inc
pop
jbe
xorb
mov
outsl
xor
neg
xor
add
test
fildll
test
aam
add
add
dec
arpl
cld
js
cmpl
sbb
or
ret
test
sub
dec
not
inc
lret
xor
test
jne
jnp
pop
insl
insb
cmp
mov
in
fwait
push
dec
ss
push
pop
add
jle
mov
push
sub
test
add
add
lods
fcomi
sarb
add
aad
add
add
dec
jl
leave
insl
inc
bound
mov
aad
orl
subb
aas
cmp
dec
or
stos
shl
divl
inc
dec
int3
repnz
arpl
ss
dec
movsl
mov
cmp
rol
and
xlat
adc
stos
negl
adc
mov
sub
mov
add
divl
dec
cmp
dec
in
fiaddl
add
add
cli
cld
imul
or
xor
js
shll
mov
lods
je
xchg
cltd
clc
xorl
sbb
or
or
fdivrl
xor
gs
adc
stos
add
daa
popa
sbb
in
xchg
xchg
and
and
add
add
arpl
jge
mov
daa
fmull
add
pop
add
add
push
sbb
scas
sub
or
xor
push
xor
mov
decb
fimuls
and
adc
ljmp
test
sbb
sub
test
add
stos
push
dec
push
lods
pop
ja
ret
adc
mov
jnp
jp
shrl
movsbl
add
ss
xor
and
mov
add
add
mov
mov
mov
xorl
add
pushf
xor
dec
cmpsl
cmp
js
cmp
xorl
into
sbb
pop
adc
icebp
xor
lock
add
mov
mov
add
jbe
and
fsub
push
pusha
pop
fidivrl
je
pop
or
add
aaa
out
mul
aaa
cmc
xchg
lcall
dec
fldl
add
add
jo
mov
sbb
cmpl
push
push
jl
icebp
pop
jnp
aad
pusha
dec
gs
data16
test
test
cmp
pop
xchg
sahf
in
fildl
jbe
icebp
xor
pusha
cli
push
test
int3
inc
jb
in
dec
repz
out
cmp
cmp
add
push
aad
out
fucomip
ss
cmp
push
adc
add
add
rcrl
repz
lods
lock
mov
dec
iret
faddp
pushf
mov
sarl
mov
das
xlat
mov
ret
movsb
push
push
out
movsb
and
cli
adc
mov
xor
ret
mull
and
lods
enter
jp
add
in
cli
push
shr
add
outsb
jbe
lret
outsb
negb
xchg
xchg
std
fldl
add
add
sti
and
mov
cwtl
mov
sti
mov
adc
add
pop
insb
cs
xor
leave
push
inc
push
insl
mov
pop
idivb
lahf
int
xor
arpl
pop
mov
pusha
shrb
test
addb
push
dec
inc
bnd
cmovg
filds
add
push
les
in
lahf
sti
ja
rcll
xchg
add
pop
add
add
pop
or
pop
sub
push
pop
adc
and
cmp
out
adc
ret
add
pop
cmp
xor
push
pop
popf
mov
pushf
push
mov
jne
test
cltd
push
popf
ja
jge
jno
jmp
gs
and
data16
sub
mov
add
jle
call
cli
lcall
add
pop
add
add
or
push
unpcklps
dec
and
mov
loope
add
sbb
fistl
or
fsubrl
psubusw
shr
shl
xchg
pop
push
push
int3
lret
popa
jbe
clc
pop
pop
inc
bound
and
ja
pop
pop
lods
out
xchg
adc
movsl
cmp
jle
add
fincstp
shl
frstor
pop
dec
jns
or
or
add
pop
add
add
sbb
pop
inc
popf
adc
inc
mov
stos
push
insl
push
adc
daa
loope
inc
adc
aas
scas
loopne
scas
xchg
dec
in
jnp
mov
dec
mov
adc
xchg
out
aad
pop
fs
repnz
addr16
sbb
dec
xchg
xchg
mov
ss
ljmp
add
aam
fnstsw
out
fcmovu
in
cmp
adc
add
pop
add
add
test
cmp
xchg
mov
ljmp
mov
nop
inc
out
and
xchg
xchg
jmp
dec
xchg
mov
in
add
sbb
repz
in
loop
sub
dec
mov
mov
xchg
scas
sbb
xorl
gs
add
stc
sbb
inc
jecxz
mov
mov
add
pop
add
add
inc
mov
mov
sub
insl
stc
hlt
ret
mov
stos
scas
push
cwtl
lods
cld
push
inc
sub
aaa
in
add
es
mov
in
lock
mov
icebp
inc
les
push
aaa
mov
or
dec
rorb
pop
mov
mov
ss
rol
dec
cmpsb
dec
add
mov
mov
icebp
and
call
add
add
jne
mov
je
cmp
xor
mov
movl
jns
ljmp
scas
mov
xor
lds
lods
dec
imul
cld
pusha
ret
inc
imul
mov
cld
jb
adc
arpl
ljmp
mov
mov
movsb
add
adc
repz
das
cli
fists
dec
es
aad
push
shll
add
pop
add
add
testb
icebp
pop
xchg
test
sbbb
fcmovnu
stc
xor
lahf
rorb
and
sub
in
jmp
fwait
push
dec
sti
imul
jo
aas
ret
xchg
mov
ja
int
jge
mov
lea
insl
popa
pop
dec
add
adc
push
adc
cwtl
out
data16
fwait
repnz
add
pop
add
add
popf
enter
les
mov
pop
adc
push
inc
inc
and
fldt
or
fisubrl
sahf
fcmove
add
addb
ret
mov
and
sbb
shrd
aam
cs
loop
sub
jbe
mov
push
addb
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
inc
cmp
add
add
add
add
add
add
add
cmp
add
add
inc
cmp
add
add
dec
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
