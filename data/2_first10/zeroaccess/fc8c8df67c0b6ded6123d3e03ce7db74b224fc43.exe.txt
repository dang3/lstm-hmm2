push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
sub
aas
push
inc
popf
sub
frstor
push
lret
jmp
jl
pop
and
divl
in
push
imul
mov
cltd
push
xchg
testb
filds
mov
xor
pop
mov
jmp
stos
decl
jnp
aam
push
lahf
lcall
or
test
adc
push
das
sub
adc
xlat
test
out
xchg
and
lahf
inc
xchg
jns
jae
sub
add
js
or
test
push
shll
inc
xor
dec
xchg
scas
mov
xchg
faddl
lods
mov
movsl
inc
mov
add
or
add
aas
pop
push
fiadds
mov
jb
dec
xchg
dec
int3
cltd
xor
jae
adc
or
imul
out
add
mov
repz
pop
rcr
fcmovbe
xchg
cltd
iret
sub
or
xchg
push
test
xchg
iret
xor
std
insl
sub
repz
daa
pop
test
xor
push
aaa
std
dec
cwtl
lods
push
and
jnp
into
ret
aas
cwtl
pop
cltd
xchg
test
xlat
push
pop
or
adc
out
dec
out
outsb
push
cmp
adc
addr16
cmc
mov
pop
into
insl
scas
cli
adc
jecxz
out
sbb
and
inc
setb
popa
mov
push
insb
sub
orb
pop
test
bswap
sbb
push
xchg
out
ret
jno
jbe
lods
ss
push
shll
int
sbb
leave
test
pusha
dec
sub
xor
lret
inc
sub
mov
and
jb
sahf
xchg
lahf
cmp
xor
iret
add
push
and
mov
add
adc
pop
mov
mov
mov
or
cwtl
mov
jb
lds
xor
xchg
jae
cmc
shlb
ret
rcr
mov
lahf
or
aad
pop
popa
mov
aas
xor
xor
andl
push
into
pop
push
add
pushf
mov
xor
xorl
adc
pop
loopne
xor
imul
stos
push
fwait
gs
shrl
mov
lret
fsubr
sub
adc
fst
jb
pop
push
stos
jb
push
pushf
cmp
into
in
add
shrl
pop
call
push
pop
push
jge
cli
push
inc
lret
add
add
inc
stos
sbb
push
aaa
xchg
jmp
add
clc
fcmovnbe
xor
jne
arpl
icebp
fisubs
cmpsb
dec
shl
pop
add
add
jge
aad
testb
mov
gs
in
in
aad
pushf
test
push
mov
or
mov
adc
scas
fcmovnbe
cwtl
into
ja
jno
add
and
movsb
imul
pop
test
ret
mov
dec
xor
mov
out
lahf
mov
xor
mov
jge
jns
mov
or
sbb
test
in
sbb
loopne
push
xor
dec
dec
pop
cwtl
push
mov
mov
lahf
insl
ret
lret
ret
fwait
aam
jno
or
sbb
xchg
jb
dec
sub
xchg
pop
sbb
mov
sub
cmp
or
xchg
es
pop
orb
sbb
mov
or
orb
sbbb
clc
scas
iret
nop
int3
xchg
mov
xlat
adc
sbb
adc
iret
dec
adc
or
or
lods
outsl
adc
stos
mov
lcall
xchg
pop
pop
cs
decl
or
out
xlat
adc
lret
mov
pop
pop
popf
mov
or
xchg
popa
icebp
iret
int
sub
or
or
pop
mov
xor
jmp
movsl
lea
fstpt
cli
shlb
adcl
jns
sbb
pop
pop
pop
inc
fisubrl
mov
js
rorb
lods
or
pushf
lods
or
sbb
push
loop
or
ds
movl
lods
push
insb
xor
enter
rcrl
push
outsb
lahf
mov
aas
or
es
fimuls
mov
mov
aam
movsb
push
lret
pop
pop
pop
stc
sub
int3
or
shll
ljmp
rcl
rep
sarl
outsl
scas
test
or
fldl
mov
leave
xchg
jge
imul
add
aad
pop
int
rolb
inc
addr16
cmp
mov
mov
xor
push
adc
inc
or
dec
aaa
jo
push
in
jb
dec
or
sub
iret
sbb
or
aam
call
aas
inc
cmpsb
outsb
pop
mov
pop
cli
mov
repnz
in
fstl
push
xchg
imul
xor
je
out
mov
dec
lcall
ss
push
daa
xchg
movsb
xor
mov
je
mov
icebp
dec
dec
mov
aad
push
cmp
sub
imul
xchg
das
sbb
sti
scas
jecxz
ret
lods
movl
mov
adc
mov
in
in
xchg
xchg
and
std
push
and
loopne
cli
dec
or
andl
cld
movsl
push
mov
shlb
dec
push
icebp
fwait
and
orb
inc
loopne
movsl
dec
xchg
push
pop
mov
sbb
test
adc
pop
ret
lret
data16
ret
add
add
push
fbstp
adc
inc
cmp
pushf
ret
mov
xor
ljmp
mov
lret
and
nop
rcrl
arpl
imul
int
faddl
xor
pop
loopne
ss
inc
mov
gs
xchg
sub
decl
aas
mov
xchg
cmpsb
in
mov
xchg
fcomi
mov
ss
into
pop
pop
xchg
inc
repz
xor
pop
dec
or
add
xor
and
mov
mov
outsb
push
fsubr
inc
sti
stc
xchg
lods
loop
dec
mov
or
jo
push
xchg
leave
ds
loopne
les
xor
xchg
and
adc
add
mov
push
ret
cmpsl
sub
pushf
jnp
ret
outsb
imulb
and
cwtl
icebp
mov
aam
arpl
push
xor
cltd
adc
ds
mov
rolb
xchg
popl
in
rorb
push
or
test
jo
push
divb
dec
cmp
in
rep
ret
std
inc
int3
mov
sbb
add
in
in
nop
scas
mov
out
cmpsl
aam
lcall
push
sahf
cmp
push
add
shrl
scas
test
ss
aas
popf
xchg
jo
sbb
jbe
cld
mov
sar
pop
adcb
enter
js
lods
push
mov
sub
int
fstpl
out
push
in
scas
sub
andl
add
cmp
test
cs
sarl
or
ja
mov
loope
jmp
inc
addl
das
inc
arpl
dec
and
adc
insb
repz
dec
insb
movsl
ret
out
in
es
mov
in
jo
pop
fnstcw
imul
repz
sbb
adc
int
and
popf
cmp
mov
jmp
push
mov
je
pop
test
popf
xchg
les
lcall
test
mov
add
pop
add
sub
xor
fwait
out
in
fistps
mov
cmp
mov
pop
loope
jns
mov
ljmp
jmp
sbb
push
nop
addb
sahf
xchg
xchg
push
gs
das
sub
push
pop
mov
bound
std
bound
clc
test
jp
out
mov
out
fmulp
mov
add
pop
test
divb
and
pop
push
lock
aad
inc
idivl
xor
les
cmc
inc
ror
ss
sti
lcall
ret
test
pop
in
fwait
xor
push
out
adcb
out
ds
cmovp
out
popa
cld
pusha
in
jmp
addr16
fstpl
mov
in
jle
xchg
ret
test
fs
pushf
jns
mov
outsb
mov
or
test
int
insb
add
in
stc
test
and
mov
stos
adc
movsl
inc
sub
or
lds
cmp
xchg
pop
xchg
data16
popf
inc
mov
out
mov
fidivs
lds
fists
jl
inc
and
scas
outsb
scas
out
loopne
unpcklps
jo
test
mov
xor
std
decl
pop
es
jmp
mov
mov
pop
add
stc
mov
adc
sbb
out
push
mov
ret
push
and
xorl
cmp
add
fiadds
outsb
xchg
dec
inc
push
es
cmpl
mov
dec
push
hlt
ljmp
cmp
cmp
arpl
fcmovb
xchg
or
ret
out
pusha
arpl
orl
xchg
mov
fnstenv
fmul
push
sub
dec
push
jp
mov
aam
cmp
xor
push
sbb
and
push
into
pop
mov
shr
fldenv
xchg
inc
scas
or
mov
shl
test
jle
or
lods
std
inc
std
jo
jle
or
jge
mov
pop
es
cli
sbb
jnp
jmp
aad
pop
js
fwait
jp
mov
out
fstpl
iret
sbbl
push
imul
lret
je
add
or
outsl
or
sti
leave
mov
pop
sbb
or
dec
cmp
cltd
mov
outsl
iret
mov
and
aam
andl
push
lret
cltd
xchg
fdivs
mov
xchg
insb
cmp
cmp
inc
movsb
mov
sbb
popf
mov
ja
into
adc
pushf
call
xor
or
mov
out
addr16
add
pop
into
fdivrs
sarl
mov
push
adc
fisubs
pusha
out
jae
lar
mov
pop
ret
int3
imulb
pop
shl
pop
inc
movsb
and
mov
sub
mov
and
pop
cmp
cmp
mov
lods
lods
sub
mov
shl
pop
adc
cld
aam
std
xchg
lcall
xor
into
add
fistpll
loopne
jecxz
adc
or
int3
jp
push
cltd
jecxz
pop
pop
mov
addl
outsb
into
inc
mov
push
jb
push
cmp
cmpb
mov
les
enter
ds
hlt
jl
pop
insl
xchg
push
das
pop
fdivrl
xor
pop
sbb
xchg
cltd
pop
xor
xchg
xchg
or
test
cmp
push
jns
push
mov
xchg
jne
push
xchg
jl
test
mov
cmp
push
cld
pop
xor
push
std
sti
dec
fs
lock
into
sbb
pop
sarb
out
cmc
mov
cwtl
gs
pusha
cs
xor
cmpsb
add
cs
inc
mul
cmp
loope
push
and
and
adc
es
mul
push
aas
push
sub
fistps
mov
pusha
das
loop
imul
lret
push
aam
rcl
loopne
push
js
push
pop
xchg
push
cs
xchg
enter
push
or
adc
lods
push
mov
xchg
repz
lea
cmc
pop
in
iret
and
cmp
out
popf
mov
popf
jno
sub
jmp
daa
int
mov
sub
adc
push
pop
scas
adc
sub
adc
cmp
pop
push
push
mov
fcompl
mov
imul
mov
pop
inc
sub
divb
in
test
cmpsl
xor
jge,pn
in
mov
push
lret
mov
xorl
push
sbb
imul
push
ret
cmpsb
add
dec
push
leave
jg
inc
outsl
imul
das
inc
pop
inc
fnsave
inc
mov
fidivs
adc
xchg
jb
adc
mov
adc
pop
mov
adc
icebp
mov
int
imul
or
lds
xchg
shll
jbe
sti
push
jecxz
hlt
pop
inc
mov
sub
shll
push
cmp
cmc
inc
mov
adc
aaa
sbb
jg
mov
cld
add
les
outsl
dec
das
pswapd
fnsave
sub
leave
adc
mov
fwait
pop
mov
sbb
add
push
popa
mov
pop
mov
push
cli
jl
shll
jecxz
xchg
lret
repz
repnz
fdivrl
pop
pop
add
ret
cli
mov
or
aaa
or
stos
outsl
fwait
mov
jne
lret
mov
stos
pushf
data16
lods
pushf
repz
int
cmp
mov
lods
mov
sbb
dec
xchg
roll
mov
mov
xchg
jbe
shll
outsb
cmpsb
sarl
mov
adcl
lahf
dec
push
sar
add
test
xchg
icebp
stc
add
inc
jle
pop
and
in
je
mov
mov
add
imul
aad
scas
mov
dec
lods
popf
mov
aad
sbb
sti
gs
pop
ljmp
xor
test
xchg
mov
pop
bound
in
movb
xor
or
sbb
jp
mov
outsl
add
cs
inc
push
cmp
push
pop
test
jnp
pop
fbstp
scas
cld
xchg
rorb
fidivrs
mov
test
call
inc
cmp
xor
daa
out
popa
pop
outsl
js
jge,pt
cmc
mov
popa
mov
in
xchg
and
stos
fnstcw
mov
adc
xor
mov
pop
cmpsb
xchg
or
das
pop
push
lahf
mov
cmp
mov
adc
push
pavgw
addb
cmp
or
inc
mov
cwtl
cmpsl
test
xor
popf
cmp
shlb
mov
ss
scas
int3
jmp
dec
loope
sub
rclb
out
xorb
fcom
mov
add
add
popf
adc
nop
jp
lds
push
or
fadd
mov
push
xor
ds
cmpb
dec
test
sbb
push
les
inc
lcall
fdivs
fs
or
cmpsb
stos
mov
push
cwtl
test
in
int
js
insl
ja
cmp
cmp
sub
pushw
cmpsb
xor
xchg
pop
in
pop
push
repnz
flds
lret
sub
lret
arpl
push
pop
jno
imul
push
jne
jnp
lahf
jae
jb
outsb
fsubs
nop
loop
adc
xlat
sbbb
clc
or
scas
xchg
mov
jns
jmp
pushf
jg
out
mov
jne
ss
sarb
mov
add
sbb
outsb
mov
outsb
inc
inc
sbb
dec
icebp
cld
popa
pop
sub
inc
sti
adc
fcomps
lds
dec
mov
adc
std
dec
div
pop
jg
inc
jg
dec
fnstsw
popf
cltd
cs
daa
shll
fldl
push
movsb
xchg
stos
daa
add
push
cmp
addr16
std
sub
pushf
adc
icebp
xor
psraw
mov
sub
sbb
jmp
ljmp
stos
mov
dec
jmp
sub
adc
in
insl
rcrb
out
inc
mov
xor
imul
outsl
out
mov
subb
xchg
sub
bound
sti
cmp
out
lds
lea
cmp
xchg
dec
orl
imul
std
jo
jb
push
lret
loope
sysexit
mov
and
clc
inc
sbb
and
and
stos
or
sub
pusha
pop
jne
pop
loop
inc
lods
ds
imul
dec
xchg
sbb
xchg
jb
lret
insb
sub
jmp
or
ljmp
mov
cltd
cmc
loopne,pn
nop/reserved
fcmove
gs
arpl
or
mov
movsb
aas
inc
jnp
sbb
dec
fisubrs
pop
and
and
stc
cmpsb
dec
cmp
inc
mov
fisttpl
mov
mov
lods
cltd
pusha
mov
mov
clc
std
sub
fimuls
or
dec
dec
pop
push
iret
ret
into
iret
xor
ljmp
pusha
mov
cmp
xchg
sub
cwtl
pop
test
pushf
add
cmp
gs
mov
jecxz
push
xchg
lods
mov
jmp
inc
xchg
stos
dec
aam
pop
xchg
sbb
mov
loope
fstpl
orl
mov
sti
inc
shrl
test
je
mov
mov
push
in
inc
and
adc
add
or
data16
sahf
pop
mov
add
cmp
jbe
ffree
lret
outsl
popf
icebp
fwait
dec
xchg
cwtl
push
out
pushf
xorl
and
xor
out
out
lock
mov
pusha
lcall
cmp
in
imul
fwait
repnz
stos
or
insl
test
inc
sahf
cmpsb
mov
ret
cmc
aam
inc
inc
shl
jnp
jp
adc
das
xchg
jle
add
and
push
arpl
aad
aad
dec
dec
push
mov
jle
rcrb
outsb
movsb
mov
std
pop
jecxz
fwait
pop
push
in
jnp
and
stos
ss
in
jg
gs
or
popa
aad
adc
insb
fsubrl
das
xchg
fisubl
gs
adc
or
movsl
lock
inc
sbb
repnz
dec
inc
cmpsb
push
fnstsw
sub
add
shl
jg
das
add
pusha
out
or
ljmp
fwait
or
pop
out
push
push
popa
push
lods
sub
push
mov
xor
repnz
and
jecxz
cmp
ljmp
push
aaa
aad
pop
fcmovne
adc
push
lods
add
and
xor
movsb
jb
in
push
mov
aam
stos
ret
std
inc
xor
hlt
dec
push
xchg
test
cmp
sub
popl
dec
movl
jmp
push
jg
outsb
js
jo
shlb
mov
out
sub
icebp
xchg
in
add
cmp
vpsubq
and
push
roll
pop
push
xchg
lret
sub
fidivrl
or
cmp
xor
aaa
std
xorl
aas
popf
aad
scas
jbe
lock
iret
testb
out
rolb
int3
mov
pop
cwtl
inc
or
loope
ja
push
and
fidivs
in
into
jne
sti
scas
dec
push
dec
jbe
pop
cmp
xchg
pushf
push
pusha
jno
jb
out
add
hlt
adc
push
mov
sub
movsb
inc
jg
fcmovb
mov
and
test
dec
loop
loop
push
xchg
jp
push
in
push
leave
or
sbb
xor
call
push
test
push
adc
jo
cmp
stc
pop
ljmp
cmp
and
dec
test
pop
jbe
xchg
idivl
movb
fisttpl
lahf
imul
pop
adcb
dec
int
xchg
jb
movsb
dec
cmp
cmpsb
jg
xchg
jge
fildl
mov
gs
pop
mov
push
cmp
jae
test
in
test
jo
repz
scas
mov
repz
inc
imul
out
movsb
xchg
jbe
fwait
movsb
dec
shll
cwtl
cmpsb
jbe
add
icebp
cwtl
xor
cltd
add
pop
or
xor
add
mov
loop
addr16
xchg
aas
pop
jns
inc
pop
add
or
xchg
pop
lea
int
shrl
push
fsubp
int3
movb
stc
and
jno
push
lea
cmc
mov
jmp
repnz
add
popf
fnstenv
pop
icebp
wrmsr
sbb
adc
sub
sub
adc
cmp
fsubl
pusha
mov
cmc
push
xchg
mov
test
jb
xchg
aas
lds
cmp
add
sub
sub
lahf
inc
jmp
push
sub
popa
fmuls
lahf
push
xchg
inc
cmpsl
notb
loope
or
lret
mov
dec
inc
mov
insb
xor
aas
xchg
xor
jle
push
scas
mov
stos
pop
cmpsl
and
inc
addr16
movsb
ss
pop
cld
enter
lahf
aam
dec
add
gs
mov
jno
or
xor
cmp
ret
adc
dec
nop
into
outsb
xchg
cmp
inc
mov
sbb
mov
pop
pop
lret
lret
inc
cmpsl
test
mov
add
jp
test
sarl
icebp
stos
out
hlt
xchg
dec
movsb
push
ds
and
inc
inc
cwtl
adcl
mov
divl
pop
xchg
sbb
cmpsl
or
test
fcmovnu
hlt
add
lods
out
inc
das
jno
push
sbb
icebp
push
arpl
fistpl
xchg
sub
push
int3
xor
ljmp
adc
stos
dec
popa
dec
mov
scas
cmc
pop
pusha
lea
inc
cmp
sbb
enter
divl
sahf
ret
adc
pop
xor
daa
xchg
pop
sub
incl
subb
push
pop
sti
jmp
sbb
inc
and
xor
test
pop
cmp
into
xor
push
jb
hlt
mov
mov
repnz
arpl
mov
lea
cltd
jb
pop
sahf
in
push
outsl
clc
sub
loop
cs
hlt
cmp
iret
xor
ret
add
das
add
add
insl
pusha
in
dec
or
mov
push
stos
push
sbb
dec
stos
add
lods
mov
and
repnz
xchg
adc
fwait
push
aaa
mov
sub
dec
xor
push
xchg
xchg
popf
pushl
adc
pop
add
int
push
rcrb
repnz
les
popa
test
cli
jmp
push
jge
aad
jecxz
dec
loope
incl
not
xchg
fdivrl
or
or
mov
mov
lea
loopne
cmp
xchg
lcall
jo
gs
sub
jg
arpl
add
sbb
ror
jmp
cld
or
mov
pop
xchg
sub
sahf
push
xlat
xchg
nop
lods
push
mov
mov
dec
mov
mov
cwtl
fwait
in
rorb
cmp
subl
or
mov
fsubrp
inc
jmp
leave
into
or
push
cmp
into
mov
xor
sub
xchg
push
punpckhdq
dec
xor
mov
mov
bsf
and
sbb
icebp
outsb
lea
sub
les
popa
mov
push
leave
pop
shll
mov
jns
xor
push
lds
jbe
mov
xor
shlb
jne
aaa
test
enter
movsb
or
sub
iret
sahf
pop
pop
mov
cli
cmp
push
add
add
push
mov
mov
mov
stos
push
jmp
lret
dec
aaa
and
xor
xor
popa
pop
pushf
pushf
cwtl
or
jne
iret
xchg
add
inc
lea
push
or
rcl
loop
or
mov
pop
mov
push
out
xchg
push
loopne
inc
or
or
out
rcr
dec
cmp
or
or
jle
out
cmpsb
stos
xor
push
lods
sysexit
cmp
sbb
xchg
mov
sahf
and
test
dec
addr16
and
lahf
inc
inc
push
dec
out
mov
lods
test
mov
inc
mov
add
test
dec
movl
mov
dec
adc
mov
mov
mov
testl
mov
int
mov
mov
pop
xor
mov
cmp
or
test
xchg
fcom
es
push
or
push
repz
movsl
loopne
push
and
jbe
ret
hlt
push
data16
or
lods
out
in
sub
inc
mov
xchg
mov
and
lea
jge
inc
rorb
hlt
xchg
test
aaa
mov
cltd
shl
jl
xchg
jae
out
xchg
in
test
cmp
nop
jo
xchg
fists
sti
pop
xor
sbb
lcall
cmp
daa
add
stos
test
ret
mov
movsl
jp
inc
mov
xchg
jecxz
lods
jb
std
loope
test
into
mov
jge
inc
bound
loop
incl
aam
jnp
les
in
mov
cwtl
xchg
arpl
jg
aad
cmp
push
adc
sub
insl
adc
and
cmpsb
lods
in
lahf
movsl
xchg
test
aad
addr16
or
cmp
iret
rcll
adc
jo
mov
cld
scas
mov
loope
ret
lods
sub
add
inc
mov
inc
lret
mov
add
inc
cli
icebp
cmp
int3
mov
int3
xchg
mov
mov
jmp
fcoms
cmpsb
jmp
cmp
inc
das
idiv
fsubrl
jne
inc
or
outsl
test
imul
xchg
jb
cmpsl
ljmp
mov
xor
push
mov
sbb
xchg
inc
loop
add
lods
mov
mov
mov
mov
jecxz
and
push
adc
ficoml
pop
mov
inc
imul
mov
inc
icebp
sbb
out
repnz
into
iret
or
fisubs
xlat
pushf
aaa
faddp
aas
xor
imul
addl
add
nop
loope
pop
leave
xchg
add
in
xchg
push
jmp
jp
in
lret
pushf
ret
in
iret
scas
xor
loopne
pushf
xorb
and
outsl
push
dec
cli
adc
inc
clc
mov
mov
mov
popf
pop
inc
xchg
outsl
stos
jo
mov
scas
ljmp
push
lea
push
daa
or
cs
sbb
mov
mov
rcr
rolb
cltd
pop
scas
add
test
cmp
sahf
sub
stc
stos
lods
sub
inc
cwtl
movsl
imul
pop
push
add
sarl
mov
sub
or
dec
and
mov
push
mov
pop
mov
inc
dec
push
sbb
cmp
xchg
push
and
jecxz
dec
cmp
aas
icebp
push
in
or
sub
jns
mov
leave
andl
fdivrl
dec
cwtl
and
dec
xor
push
xor
lcall
jnp
cmp
sbb
mov
fmul
jb
mov
stos
outsl
xchg
cmp
cmc
mov
pop
ja
andb
scas
rcrl
icebp
adc
pop
xor
imul
xchg
cmpsl
arpl
adc
inc
popa
xchg
daa
fwait
lahf
cld
sub
push
cmp
aas
add
inc
sub
push
adc
out
push
adc
orl
push
outsl
loopne
movsb
xchg
add
mov
jnp
push
dec
sbb
out
ficompl
mov
mov
mov
dec
inc
xchg
and
and
cmc
mov
pop
inc
insb
std
mov
lods
iret
aam
sub
pop
mov
pop
pop
outsb
inc
xor
mov
test
xchg
mov
pusha
xor
pusha
rcl
insb
mov
and
sahf
ret
das
fimuls
out
loope
push
xchg
ror
dec
pop
jge
add
mov
jbe
shlb
xor
push
in
pop
movsb
xchg
lahf
fs
sahf
pop
adc
in
arpl
sahf
adc
gs
push
mov
xchg
insb
xor
imul
lahf
and
push
ja
or
cmp
jg
pop
sarb
dec
pushf
out
adc
clc
mov
not
mov
into
fwait
inc
jp
int3
js
jo
push
test
xor
push
bound
lock
dec
inc
add
into
or
and
fbld
jmp
aaa
imul
mov
and
sub
sbb
mov
add
out
ja
mov
nop
es
sub
dec
dec
mov
pop
cmp
adc
movsb
out
sbb
sbb
adc
cmp
rcr
fisttps
imulb
loopne
or
adc
fsubrp
loopne
fmuls
and
dec
push
cli
mov
bound
out
ret
dec
and
push
jmp
loopne
in
mov
outsl
addr16
repz
and
sbb
xorl
mov
pop
icebp
aas
push
add
rclb
mov
mov
mov
ja
cmc
push
arpl
out
call
xchg
pop
jge
insb
inc
bound
add
jae
xchg
xchg
cltd
enter
test
jmp
mov
fisubrs
das
imul
xchg
pop
add
cmp
lock
cmp
loopne
sub
pop
and
sti
hlt
or
ljmp
and
or
andl
in
mov
daa
in
cmp
mov
sbb
mov
pop
in
jmp
inc
xor
mov
push
je
dec
mov
ja
movsb
push
scas
in
push
mov
pop
add
or
xchg
fs
inc
das
dec
xchg
jp
test
adc
mov
jb
add
push
out
xor
inc
mov
insl
sub
popf
pushf
mov
and
xor
es
lret
jmp
stc
adc
repnz
pusha
pushf
xchg
dec
push
inc
out
imul
adcb
dec
in
sbb
in
loop
xor
lcall
mov
or
jne
les
mov
sub
mov
aad
xchg
xor
out
jmp
and
movsb
fs
adc
mov
or
push
cmp
int
ret
dec
xlat
in
mov
xchg
in
push
push
or
negl
fbstp
ror
das
xchg
lea
push
fbstp
negl
xor
adcl
sub
stc
dec
push
les
dec
out
fsubrp
adc
or
sub
add
dec
fdiv
rol
pop
mov
insl
add
mov
cltd
call
jg
jmp
mov
in
lret
lret
and
xchg
mov
or
jecxz
or
jge
xchg
sahf
jbe
pop
mov
lahf
push
clc
out
in
mov
pushf
inc
sbb
or
adc
cmpsl
cmpsl
pop
gs
ds
mov
fcompl
scas
sbb
pop
sahf
push
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
sub
pop
jp
or
jp
push
mov
pop
iret
mov
test
shl
arpl
xchg
mov
adc
pop
mov
adc
loope
or
fistl
sub
lcall
add
repnz
mov
or
loop
adc
pusha
push
jp
les
movsb
xchg
movsl
pusha
inc
xor
fwait
mov
aad
mov
repz
xlat
pop
lret
mov
push
sbb
cwtl
in
or
outsl
jg
jae
orl
icebp
pop
dec
imul
sub
lahf
cmc
dec
lds
pop
push
cs
shl
mov
jae
fs
push
xor
mov
test
sbb
mov
mov
push
or
cmp
xchg
sbb
js
sub
movsl
mov
mov
jmp
push
mov
cmp
xchg
push
or
rorb
push
xor
insl
mov
std
xchg
lock
fcompl
cmpsl
or
jmp
and
and
sbb
icebp
int3
dec
jae
rcll
ljmp
jge
mov
mov
inc
and
xor
fsubrl
push
jl
push
psrad
or
push
je
lcall
insl
mov
mov
ret
xor
loopne
out
and
lods
std
push
inc
inc
dec
mov
cmp
into
add
int3
push
pushf
push
mov
pop
lds
popa
stos
sub
push
xchg
ret
pop
add
jno
jb
loop
dec
cmc
test
fsubs
int
xchg
or
adc
sbbb
push
pandn
pop
mov
pop
data16
imul
fcom
inc
and
popa
dec
ljmp
sbb
testl
jb
mov
aam
add
inc
es
loop
dec
cmpb
lret
and
mov
aaa
rol
rcrb
dec
xchg
fisubs
inc
or
fwait
sbb
mov
jae
add
xchg
pop
aaa
movsb
sbb
dec
fs
pop
out
pop
rcll
dec
adc
ljmp
jmp
cwtl
pop
fildl
fisubrl
out
in
cwtl
repnz
in
rolb
insl
clc
lret
insb
adc
cs
daa
and
pop
add
and
scas
test
mov
lods
jl
inc
testb
mov
dec
test
test
in
push
jnp
fs
push
stos
xchg
mov
push
lret
xchg
xchg
push
aaa
rclb
mov
movsb
pop
lea
push
mov
int
rcrl
stc
jmp
mov
mov
mov
mov
mov
inc
lcall
xchg
pushf
inc
adc
cmp
cmp
movsb
and
ret
repz
fs
sarl
addb
jbe
inc
dec
or
add
test
outsb
out
sub
jo
lock
mov
mov
out
in
add
mov
sarb
fstps
jbe
jle
jmp
idiv
and
data16
pop
scas
arpl
pushf
dec
sti
pushl
mov
nop
popa
xchg
and
xchg
out
xlat
mov
mov
nop
sub
dec
fisubrl
xor
in
inc
mov
dec
outsb
sahf
rolb
idivb
scas
or
lds
push
test
xor
xchg
mov
mov
orl
hlt
ret
popl
mov
xor
sub
cli
ds
sub
adc
xor
stos
fistl
cmpsb
add
dec
mov
ret
push
scas
mov
mov
dec
mov
xor
dec
jbe
add
dec
jle
sub
jb
mov
mov
loope
and
mov
into
arpl
sbb
xchg
cmpsb
insb
push
lock
sub
sbb
fsub
sub
stos
gs
and
xlat
cmp
or
pop
sti
adc
sub
jae
lahf
stos
outsb
and
ljmp
notl
and
mov
jle
and
mov
pop
inc
out
inc
arpl
rorl
sarb
push
je
jbe
or
inc
and
insb
mov
or
decb
jbe
xor
fwait
add
push
lea
xor
mov
jo
xchg
push
xor
sti
icebp
leave
lret
dec
stos
push
jecxz
bound
iret
or
inc
sbb
pop
lar
out
outsb
adc
out
lret
icebp
fstpt
ss
dec
adc
sbb
push
dec
pop
cmp
frstor
sub
pop
scas
pusha
idiv
test
in
jle
out
jno
jbe
dec
jp
hlt
fsubs
xor
cmp
push
adc
mov
or
push
mov
push
mov
cmp
and
push
in
loop
sbb
xor
jl
mov
int3
lods
push
aam
push
or
cmp
cs
ret
mov
in
mov
xor
sub
add
mov
mov
lds
push
cld
inc
and
adc
icebp
push
rcrl
mov
icebp
cld
es
lods
dec
sub
cltd
sbb
mov
pop
shll
cmp
cltd
stos
rcrb
insb
sbb
int
cld
hlt
mov
dec
xchg
and
xor
inc
xchg
jbe
pop
lahf
cwtl
dec
mov
push
pusha
inc
repz
cmpsl
fldcw
inc
push
gs
stc
popa
inc
pop
pop
in
dec
pop
and
xor
cmp
negl
inc
out
sahf
ret
cmpsb
add
mov
cmp
lcall
mov
dec
decl
sarb
iret
sbb
dec
fwait
lods
mov
pop
xchg
mov
lret
sar
and
fwait
mov
ljmp
or
pusha
jp
das
call
push
mov
pop
fnstsw
addr16
push
enter
sub
mov
cli
xor
mov
fmuls
push
nop
shlb
add
andb
dec
orb
outsl
inc
aas
insb
out
jno
filds
xor
loope
mov
aas
pop
lahf
out
mov
in
sbb
mull
lods
repz
roll
outsl
repz
and
cmp
outsl
inc
cmp
leave
ffreep
sbb
jno
dec
xchg
mov
mov
in
jns
cmp
js
cmc
popf
fidivrs
xchg
cmp
dec
test
call
jns
test
mov
fnstsw
mov
popf
cmp
push
add
outsl
mov
dec
push
inc
jg
insb
xchg
mov
cld
push
mov
adc
fs
mov
pop
pop
mov
and
imul
sarl
int
icebp
or
out
add
pop
aaa
sbb
dec
rcrl
mov
stos
cs
je
xchg
inc
mov
and
cmp
xor
cltd
arpl
sub
fcompl
mov
mov
pushf
cmp
jl
sub
mov
cwtl
inc
gs
jae
gs
pop
mov
push
nop
add
pop
add
pop
push
add
outsl
pop
or
fmull
jne
jno
scas
mov
mov
arpl
push
xchg
imulb
pop
xchg
fmul
test
sub
cmp
stos
mov
adc
add
xchg
jnp
mov
imul
mov
xor
xor
xlat
xchg
sub
je
out
in
loopne
lahf
xorb
dec
mov
fildl
cmpb
mov
fildll
ficompl
add
pop
jns
jnp
aaa
push
and
js
out
or
or
outsb
movsl
xchg
sub
mov
out
loop
cltd
sub
scas
js
and
sub
shll
push
adc
dec
mov
and
push
in
ficomps
addr16
lea
int
fidivs
pusha
flds
lea
aaa
push
lahf
out
xor
dec
sti
pushf
sahf
cltd
repz
cld
mov
mov
scas
scas
enter
cmpsb
cmp
arpl
mov
out
sub
adc
push
cmc
xchg
ret
repz
pusha
and
aam
lea
scas
add
push
scas
or
addl
push
or
jl
lock
and
mov
cld
mov
cmp
pop
stos
mov
fidivl
jg
jl
sbb
mov
test
pop
dec
xchg
push
lods
sub
mov
xor
xrelease
mov
imul
pop
lea
or
mov
xor
xchg
xchg
fdivl
cwtl
mov
cmp
mov
jno
cmc
xchg
lods
lahf
sbb
dec
cmpsb
psrad
xor
cli
sbb
add
inc
xor
inc
mov
lds
imul
jno
mov
cld
ret
std
xor
jecxz
mov
out
in
shrb
cltd
andb
inc
hlt
testb
inc
bound
sub
data16
dec
cmp
xor
test
mov
cmpsl
test
pop
outsl
out
scas
inc
test
push
test
sbb
or
jle
cmpsl
xchg
jg
xchg
jmp
xchg
ss
pop
jno
aas
push
ss
jno
lods
pop
das
inc
add
sbb
or
xchg
out
push
or
xchg
stos
cmp
mov
jbe
ss
adc
cmc
add
pop
arpl
fwait
xchg
xlat
add
repnz
dec
xlat
subb
sahf
ret
inc
sar
xchg
cli
jb
adc
and
mov
je
arpl
or
lret
cmp
pop
jbe
adc
shlb
lahf
mov
cmp
loopne
in
mov
and
lods
or
mov
out
jl
adc
cld
pop
test
int
ret
int
mov
push
jns
ds
mov
or
push
cwtl
hlt
sbbb
pop
rorb
adc
leave
fisttpll
adc
in
sub
and
add
cmpl
cwtl
sub
jge
sbb
in
mov
and
mov
dec
xlat
xchg
daa
jecxz
jnp
out
xchg
fildl
push
add
xchg
jmp
lds
fcoml
lahf
jne
mov
mov
or
xor
mov
outsl
sbb
ret
inc
xor
lds
out
lcall
xchg
and
push
mov
or
in
xchg
dec
mov
and
dec
loopne
scas
mov
pop
loopne
lret
adc
adc
mov
fstpl
mov
in
add
pop
fisttps
pop
ret
nop
inc
aaa
mov
mov
in
cmp
fwait
push
in
icebp
mov
cmp
xchg
ss
mov
data16
je
inc
xchg
ret
movsb
movsl
and
inc
cmp
xchg
rcrb
les
scas
pop
adc
push
shr
push
adc
add
mov
xchg
das
out
xor
sahf
mov
shll
sbb
cmp
push
add
sbb
jecxz
shrb
pushf
add
int3
mov
pushf
jbe
mov
insb
aam
and
mov
push
mov
xchg
rclb
hlt
loope
dec
popf
test
in
pushw
and
cmp
fistps
add
push
jl
dec
mov
and
stos
mov
xor
stos
int3
push
imul
test
cli
push
not
popa
popf
xchg
cmp
add
or
cli
rcrb
in
subl
mov
lcall
iret
dec
xchg
scas
mov
inc
rorb
cmp
inc
push
leave
test
push
pop
or
gs
jecxz
pop
test
aas
fcoms
inc
push
dec
jns
dec
push
call
inc
dec
bound
leave
mov
cmpsb
jae
dec
std
pop
push
adc
mov
or
aam
lds
mov
bound
dec
mov
dec
dec
shlb
int3
cmp
inc
lret
sbb
mov
sub
aaa
iret
pop
out
or
xor
lret
scas
and
xchg
fdivs
pop
mov
inc
mov
wrmsr
nop
insb
push
in
in
inc
dec
or
popa
imul
xor
into
inc
mov
jbe
and
adc
dec
insl
mov
or
jo
push
or
push
cmp
jns
xor
xchg
loop
or
gs
fwait
sbb
ss
xor
and
stos
addr16
push
sbb
int
adc
ficomps
faddl
and
add
insb
aam
xchg
fldt
js
mov
ja
push
or
jb
sbb
clc
sub
enter
lea
aas
pop
or
sbb
cmc
stc
and
ret
ds
out
push
or
jl
cmpsb
testb
sbb
mov
imul
outsb
sti
ret
les
shrb
push
xor
sub
mov
lock
mov
xchg
pushf
cmp
das
enter
clc
movsb
push
push
adc
sub
sub
inc
outsl
pop
sub
pop
fnstsw
inc
enter
push
stc
add
decl
in
into
adc
in
adc
xor
and
sub
fwait
clc
arpl
xchg
add
insl
xchg
sub
push
pop
dec
adc
pop
dec
jp
mov
and
xor
lea
stos
lods
in
aaa
xchg
adc
stos
cltd
mov
xor
sbb
push
jl
xor
hlt
cmpsb
imul
and
sbb
shll
dec
out
push
jge
repz
mov
xlat
or
cld
imul
out
inc
ljmp
and
int
imul
push
jno
dec
pop
push
and
mov
dec
mov
mov
lock
mov
mov
inc
mov
call
pop
or
add
dec
and
push
dec
and
push
adc
mov
push
mov
mov
sarl
mov
popf
mov
divl
int
data16
xlat
pop
ss
mov
adc
push
test
cmp
cmp
addr16
rcr
faddp
adc
mov
mov
out
and
rolb
adc
test
push
lds
pusha
xor
mov
lcall
out
test
repz
jbe
sub
leave
pop
iret
sti
out
sub
xor
fwait
or
addb
arpl
xchg
imul
jl
pusha
add
fsubrs
add
mov
or
loopne
mull
push
mov
jo
sbb
jp
ja
ffreep
fdivr
pop
clc
pop
add
add
fdivrl
hlt
in
lret
mov
out
scas
jo
cmc
push
push
js
sub
je
or
dec
push
and
mov
ss
push
sub
dec
arpl
test
pop
adc
pop
cmp
cmp
add
out
imul
jmp
cli
jecxz
adc
jns
int
mov
fistpll
mov
jmp
jae
aaa
mov
xchg
loop
outsb
imulb
inc
xlat
push
add
push
lret
push
mov
pop
xchg
jnp
leave
cwtl
adc
stos
fwait
out
fldenv
pushf
in
jbe
call
pop
jle
cmp
xor
ss
cmp
roll
lcall
int
out
in
push
xor
and
push
xchg
fnstcw
loopne
pop
bound
push
add
dec
inc
mov
xchg
ss
ret
push
xchg
sbb
xor
pusha
pop
mov
or
pop
sti
shl
popf
mov
lds
mov
sbb
stos
push
enter
cs
cmp
inc
mov
dec
shrl
xor
pop
fidivs
push
add
fdivrs
push
or
sub
jg
dec
mov
xchg
cmp
adc
sub
lock
aaa
lds
cli
jns
lahf
call
or
aas
lcall
and
ret
xor
mulb
mov
movsb
div
imul
and
jo
sub
ds
sub
push
out
inc
and
or
mov
adc
mov
xchg
lret
push
dec
push
lea
sti
ret
lahf
cs
ficomps
in
lahf
mov
sub
push
in
data16
mov
sbb
xchg
jp
lret
pushf
fsubs
fldenv
fwait
loope
or
dec
xor
movsb
mov
mov
sub
in
cmp
push
enter
aas
mov
daa
cmp
inc
jbe
pop
pop
fidivl
into
push
hlt
inc
add
cli
xchg
imul
jb
stc
enter
scas
mov
push
dec
and
adc
popa
lds
adc
je
dec
mov
adc
sub
cmp
push
xor
cmpsb
mov
cmp
xchg
adc
sti
push
aas
or
cwtl
in
pop
cld
or
ja
es
daa
xchg
xor
xchg
inc
sub
hlt
fnstsw
imul
imul
std
cmp
out
dec
mov
leave
icebp
adc
into
shrl
and
outsb
fisubl
rcrl
mov
mov
jecxz
jnp
mov
lret
fwait
xor
inc
xchg
push
adc
scas
movsb
fadd
mov
notb
mov
pushl
sbb
push
push
iret
outsl
sahf
aas
rorb
test
loope
jbe
mov
les
push
push
jle
ret
push
xor
clc
add
dec
icebp
pop
sbbb
in
dec
sub
in
stos
cmc
sub
shr
cltd
mov
outsl
nop
mov
sub
sbb
popf
rorl
lret
mov
sbbb
xchg
xor
xchg
xchg
jg
jg
mov
icebp
jo
sub
xor
jo
cmpsl
pusha
jg
bound
les
scas
cli
mov
sub
sahf
inc
push
sbb
mov
or
dec
add
cmpb
addl
int3
push
outsl
fs
daa
mov
scas
inc
aam
in
mov
push
icebp
adc
sahf
inc
push
mov
xchg
xchg
pushl
cmc
sbb
mov
pushf
loope
popf
stos
or
dec
xchg
mov
lea
ret
shlb
mov
pop
inc
out
xchg
arpl
jl
push
cmp
pop
loop
or
pop
jle
pop
sbb
cld
aad
cmc
mov
push
movsl
sti
in
call
rorb
insb
jg
mov
mov
mov
out
cli
xchg
push
shlb
das
out
cmp
cwtl
dec
mov
enter
sub
sbb
sub
sub
aaa
stc
fucom
stos
and
pop
and
cmp
xchg
leave
or
inc
add
jbe
or
inc
enter
insl
jno
imul
push
or
cs
dec
addr16
lock
cli
sbb
mov
push
stc
add
test
or
and
pop
push
add
ja
sbb
jmp
icebp
adc
mov
pop
or
push
add
jge
test
in
jle
imul
pop
loope
outsb
xor
fstpl
add
mov
jg
xchg
xor
andb
mov
int3
push
and
jb
scas
jg
test
mov
mov
fists
leave
ret
jmp
jl
sbb
lcall
ljmp
hlt
repnz
mov
cmc
daa
inc
fiadds
int
xlat
outsb
push
jp
addr16
jmp
push
daa
cmp
sub
ja
mov
out
push
xchg
insl
adc
sbb
mov
and
js
and
mov
enter
cmp
inc
xor
or
sti
int3
jb
push
lock
xchg
add
add
mov
insb
xchg
rcr
sbbb
test
orl
mov
dec
adc
push
push
pushl
sbb
lods
call
movsl
mov
jecxz
cmp
sub
int3
ja
popa
cmc
lea
imul
call
mov
inc
push
mov
imul
mov
sbb
stos
lods
xchg
fsubrl
pop
in
out
fimull
and
in
cwtl
add
aam
scas
int
sbbb
mov
push
loop
xchg
or
add
jo
in
stos
movsb
or
jl
cmp
cmp
pop
dec
mov
outsl
jp
scas
pop
and
cltd
dec
push
xor
into
andb
mov
mov
add
scas
test
sbb
out
mov
and
jl
test
jl
sti
aad
xchg
call
fnsetpm(287
aam
ljmp
or
adc
push
std
pop
sbb
xchg
mov
int3
or
push
aam
mov
add
sti
mov
stos
pcmpgtd
mov
xor
inc
add
jl
pushf
std
cmpsl
out
faddl
adc
push
add
testb
mull
ret
xchg
sub
or
sbb
xor
mov
jb
and
sbb
in
sbb
mov
ljmp
sub
outsl
xor
pop
inc
or
sub
hlt
add
jmp
clc
sbb
xor
movsl
or
pop
jbe
dec
or
daa
repz
mov
push
loop
mov
push
add
sbbb
sbb
jecxz
filds
push
xlat
adc
jp
into
push
adc
cmp
lds
jno
jg
or
or
mov
pop
int
jecxz
sarb
adc
loope
sbb
pop
sbb
mov
inc
stos
pop
inc
mov
imul
mov
xchg
add
and
adc
xchg
mov
mov
jno
int3
imul
adc
dec
andl
inc
out
mov
push
adc
adc
scas
sbb
scas
ljmp
divl
dec
and
pop
aam
or
adcb
addr16
xchg
push
jg
clc
fdiv
jg
sarl
out
mov
and
mov
imul
push
push
dec
dec
dec
pushf
inc
rcpps
push
ficompl
ss
push
cs
and
mov
outsl
lods
push
and
sub
mul
lret
test
push
ficomps
sub
jmp
ret
xorl
shl
idiv
xchg
stos
scas
ja
pop
xchg
rcrb
mov
push
add
mov
lds
into
mov
jp
push
or
lds
gs
sub
in
mov
lods
mov
addl
adc
decl
push
xchg
add
jno
or
and
cltd
mov
dec
or
js
insb
ja
shr
data16
pop
jle
add
jl
xchg
cld
es
xchg
data16
cmp
ljmp
xchg
mov
dec
cld
jp
xor
sub
lea
les
sub
cvtdq2ps
daa
jo
or
and
fildll
jle
xor
xchg
pushf
sbb
scas
cld
es
pusha
gs
out
fsubr
adc
stos
cld
cmpsl
int3
mulb
test
jg
xchg
inc
faddl
jl
fnstcw
daa
jbe
inc
les
xorb
notl
notb
dec
fs
inc
add
scas
clc
rorl
inc
pop
add
push
mov
sub
hlt
cmpsb
lret
mov
cmpsl
mov
cld
cmpsl
into
ljmp
dec
je
test
stc
mov
mov
rcrl
pusha
stc
sub
mov
cmpsb
fstpt
dec
push
fistpl
enter
lea
je
sub
dec
dec
fnstenv
sub
lret
popl
icebp
mov
xlat
call
add
push
jbe
std
adc
dec
fisubrl
rcl
adc
push
xchg
cmp
xor
mov
cs
sub
stos
test
mov
cmp
popf
and
and
insl
out
xchg
xor
or
push
xchg
xor
and
cmc
stos
and
loop
add
sbb
cmp
pop
mov
movsl
jnp
pop
pop
mov
sbb
mov
je
push
std
mov
out
dec
push
mov
les
inc
in
out
negl
push
sbb
xor
push
cmp
xor
filds
add
int3
or
lahf
lahf
shrl
in
sub
pop
mov
cmc
mov
dec
mov
test
lea
pop
ja
outsl
dec
inc
adc
into
lret
sub
fwait
iret
adc
add
iret
sbb
rorl
ljmp
cmpsb
outsb
inc
adc
insb
sub
shlb
pop
mov
movsl
aad
add
and
add
push
add
xchg
xchg
mov
sahf
mov
sub
cmpb
addb
lcall
add
push
outsl
sti
fiadds
loopne
fsts
rcrl
in
cmpsb
dec
std
mov
out
xchg
int3
loopne
push
pop
mov
mov
cmp
sub
loop
loope
jne
or
jb
sbb
test
inc
mov
inc
adc
test
jg
ljmp
sub
push
push
jle
lcall
adc
fsts
loopne
pushf
out
adc
xchg
jno
out
sub
movsl
sbb
ds
test
mov
insb
out
mov
cmp
adc
cmp
fldl
repz
ss
mov
lds
or
xchg
mov
pushf
push
incl
or
mov
pushf
push
int3
xchg
das
or
cmp
xchg
jae
push
pop
outsb
in
xchg
aas
lahf
jecxz
pop
mov
inc
mov
aam
loop
popf
mov
cli
pop
int3
mov
sbb
adc
pop
xor
cltd
sbb
push
mov
and
popf
cmpsl
adc
dec
pop
incl
and
hlt
or
mov
sbb
stos
dec
xor
scas
mov
xor
xchg
jg
fwait
xchg
push
and
shl
inc
data16
rol
cld
adc
mov
sbb
mov
je
mov
add
daa
jl
or
fmull
pop
sti
scas
xchg
loop
fcmovnu
int3
testb
in
addr16
into
pop
cmpl
sub
mov
sahf
xor
push
addl
leave
sub
xchg
xchg
sub
das
add
sub
jo
shlb
aas
orl
lock
cmp
test
add
or
push
popf
ljmp
pusha
fdivl
pushf
sbb
mov
inc
lret
pop
sub
inc
sarl
jg
jae
fs
stos
ret
add
repz
inc
push
or
ret
push
and
dec
mov
ret
mov
add
fsts
inc
cmp
mov
lcall
fbstp
dec
icebp
cmpsb
test
out
adc
lahf
insl
pop
mov
or
pop
mov
mov
mov
out
mov
inc
arpl
ljmp
sarb
mov
or
scas
loop
ret
or
out
pop
pop
scas
add
mov
mov
call
shll
push
xor
in
xor
aam
sub
lcall
push
pop
dec
lcall
push
insl
idiv
pop
enter
imul
sbb
sub
insb
fisttpll
aam
notb
mov
jg
loop
inc
sub
push
fs
adc
ret
in
ror
push
or
mov
xor
int
out
sub
push
or
popa
out
lahf
scas
mov
cmp
rcrb
pop
arpl
jmp
popa
and
adc
fistl
clc
lret
cmp
movsb
movsl
jmp
imul
or
adc
out
and
rclb
mov
movsl
add
xor
mov
jo
sbb
xlat
mulb
hlt
add
jecxz
inc
insl
test
add
test
push
in
push
sbb
into
xor
add
and
shrb
lret
stos
cld
pop
es
aas
push
mov
std
cmpsb
scas
jmp
xlat
insl
stc
scas
add
dec
mov
into
sbb
push
mov
xchg
push
mov
push
adc
add
sahf
jbe
inc
and
cmc
stc
jo
adc
add
sub
and
inc
pop
mov
mov
movsl
xor
call
cmpsb
aam
xchg
repnz
ljmp
or
xchg
jb
cmp
jmp
sub
mov
clc
fnstsw
shr
mov
push
subb
arpl
fiaddl
cs
pop
dec
gs
sub
negl
jle
jns
xchg
mov
movsl
rcrl
inc
js
mov
loope
inc
mov
in
push
fisubl
sub
fcomps
mov
repz
nop
push
or
sbb
xor
xchg
insb
or
pop
adc
mov
jmp
cmp
sbb
cmp
movsb
and
lods
add
sbbb
or
cmp
js
ja
int
and
xchg
int
and
stos
push
arpl
mov
lods
jb
lods
adc
lcall
cmp
faddl
push
push
mov
sbb
in
xchg
jle
outsl
ja
and
jg
ret
pop
xchg
bound
stos
jo
push
mov
out
jbe
pop
xchg
cmp
mov
into
mov
xchg
xadd
int
in
push
mov
das
rorl
and
pop
xor
loopne
cmpsl
xchg
sahf
jbe
out
mov
xor
int3
andb
pop
cmpsb
mov
jle
arpl
push
aad
jnp
inc
xor
and
loope
das
rep
int3
daa
jns
mov
and
insl
fs
mov
add
jae
jns
or
dec
test
idivb
aad
mov
push
push
add
in
cmp
cmpb
roll
enter
cmpb
mov
dec
stos
cmpsb
cltd
faddl
jbe
test
jo
pushf
inc
rcr
jno
mov
xor
jno
lea
clc
ljmp
fs
xor
xlat
xchg
inc
loop
jecxz
adc
stos
xor
inc
decb
stos
test
adc
mov
dec
jno
or
repz
lcall
xchg
cli
dec
push
or
fwait
shlb
xor
mov
popf
push
stc
pop
sbb
divl
push
stos
arpl
cs
mov
xchg
xchg
fldcw
repnz
hlt
cld
and
mov
cmp
test
loop
mov
mov
sbb
mov
idivl
inc
imull
popa
rorl
xchg
movsl
lods
pop
insl
sbb
in
ret
cmp
imul
push
push
cmpsl
mov
bound
repz
jmp
jns
and
imulb
xor
and
out
push
rcrl
pop
int3
push
out
cs
rorb
dec
xor
je
lods
push
mov
stos
mov
incb
iret
lds
pushf
pop
js
add
mov
cmp
mov
out
cmpb
xchg
data16
inc
lret
lods
pushf
jne
pop
and
insl
jecxz
pop
mov
insl
inc
jge
mov
xchg
adcb
xor
fcmovu
call
xlat
pop
add
pop
ljmp
or
mov
jb
add
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
mov
and
sbb
jp
xor
sub
repnz
stos
test
dec
dec
mov
cmc
ljmp
aas
cmp
xchg
outsb
stos
push
xchg
sbb
sbb
or
cmc
decl
push
lahf
jle
rorb
nop
xor
xchg
int
sbb
imul
adc
sbb
negb
inc
gs
mov
cmp
insb
mov
sti
cwtl
lock
jecxz
mov
pop
fs
xchg
add
fdivl
mov
leave
xlat
push
xchg
mov
scas
mov
cmpsb
ljmp
mov
loopne
xchg
imul
fildl
mov
cmpps
xor
or
mov
popf
sub
xor
inc
shl
adc
insl
xchg
mov
pop
aam
aad
adc
sarl
outsl
js
sub
repnz
ret
cwtl
arpl
iret
inc
pop
mov
add
mov
mov
xchg
jae
shl
xor
jae
dec
jnp
ja
lea
jb
lret
xor
adc
jne
repnz
repz
cmpsb
pmulhw
mov
jge
je
arpl
pop
rorb
mov
iret
jns
dec
xor
sub
hlt
and
sub
jne
negl
ret
adc
outsl
imulb
data16
xor
or
jnp
sbb
fwait
sbb
hlt
push
mov
rcll
adc
lahf
sub
int
sub
shll
into
mov
xchg
arpl
pushf
lea
sub
sbb
mov
leave
xchg
sub
sbb
adc
pop
sub
sbb
adc
pop
push
test
push
popa
mov
rcrb
dec
dec
int3
push
mov
mov
cs
imul
mov
stos
nop
dec
incb
mov
inc
pop
push
push
push
sub
dec
in
add
cld
call
popf
cmp
xchg
insb
lods
pop
xchg
jne
cmpsl
mov
xlat
outsb
out
imul
lds
jns
xlat
mov
fstps
push
out
arpl
loopne
sarl
pop
jnp
sub
cmp
add
in
insb
bound
add
mov
mov
dec
or
inc
dec
sbb
nop
push
jnp
fnstenv
inc
inc
sbb
movsb
fcompl
xchg
pop
adc
addb
movb
lods
mov
or
mov
dec
cli
adc
rolb
jno
les
into
mov
loope
fstpt
daa
cmp
cli
sub
mov
xchg
and
scas
rorl
adc
pop
sbb
mov
mov
inc
jns
stos
iret
push
xor
popa
inc
jne
mov
sub
push
or
popf
lods
adc
mov
shll
fistpll
ficompl
arpl
imul
fcomps
inc
adc
fisttps
fwait
jp
jecxz
add
mov
pop
push
out
or
xchg
mov
aam
jns
adc
or
add
push
lock
mov
mov
sbb
loopne
movsl
loopne
lret
movsl
sti
pop
mov
pop
stos
lahf
xor
in
xchg
jnp
rcr
push
les
inc
scas
push
and
mov
in
mov
pop
ret
adc
loopne
xchg
aam
adc
mov
mov
mov
cwtl
movsl
out
push
ljmp
lds
adc
imul
lret
or
inc
rdseed
jno
out
xlat
push
ret
dec
imul
or
or
mov
mov
cs
inc
imul
or
sbb
movsl
jb
negl
xor
pop
mov
sub
and
xchg
mov
and
aas
cmp
dec
in
xlat
dec
stos
and
add
gs
push
lods
push
xor
lea
mulb
xchg
cld
out
xchg
cmc
lock
std
stos
mov
mov
jae
sub
jp
jb
sti
xor
bound
leave
adc
es
inc
dec
orl
adc
rcll
cld
ljmp
not
jb
inc
pop
adc
les
mov
inc
sbb
mov
push
leave
sbb
xchg
cwtl
sar
out
shrl
std
or
call
gs
sti
into
into
stos
lcall
sbb
dec
mov
ja
push
shl
popf
xor
dec
mov
fwait
sub
inc
je
xchg
out
sub
add
and
cmpsl
lcall
push
sub
fsubl
mov
pop
sbb
sub
subl
dec
lret
cwtl
mov
add
dec
ds
sahf
fistpl
icebp
sbb
jbe
push
addb
adcl
mov
test
loop
push
mov
adc
arpl
mov
xor
sbb
popf
insb
jge
lahf
mov
test
js
jmp
mov
sbb
xchg
clc
jo
es
push
mov
insb
cwtl
jbe
je
xor
iret
sbb
mov
inc
sbb
out
fstl
mov
mov
dec
jle
testb
push
fnstcw
xlat
mov
fildll
loop
mov
arpl
xor
fs
stos
mov
xchg
sbb
pop
hlt
adc
cwtl
loop
mov
fistps
fwait
shrd
pusha
lds
pop
cmpsl
and
movsb
lahf
cmpsb
adc
dec
inc
test
sbb
mov
jecxz
das
sub
mov
hlt
out
mov
add
jno
cmpb
dec
jno
push
es
out
mov
mov
xchg
bnd
mov
mov
push
mov
jg
mov
stos
ret
in
xchg
jae
or
lods
jnp
push
pop
outsl
sbb
outsl
roll
add
push
adc
fldl
mov
xchg
add
mov
fidivrl
jae
push
pushf
or
cmp
dec
out
fmull
cld
pop
dec
jg
mov
jp
pop
and
jge
inc
inc
push
push
and
push
mov
aam
and
or
stc
ret
incb
mov
lcall
ss
inc
das
cmp
int
jb
loope
fldenv
aas
sub
hlt
inc
repz
mov
mov
sbb
lahf
push
lock
sub
insl
lret
xchg
stos
mov
xchg
xor
hlt
in
movsb
arpl
cmp
add
aad
fsub
mov
xchg
push
std
xchg
xor
clc
mov
push
mov
inc
rcll
dec
or
pop
mov
or
aas
and
fcmovbe
push
mov
out
popa
cmpsb
pop
push
mov
fsubs
in
push
xchg
sub
jae
mov
sbb
inc
nop
sbbl
test
fdivl
or
cwtl
jl
and
xor
add
cmp
adc
stos
pop
mov
cmpsl
nop
xlat
push
xor
fisubrl
stos
iret
inc
sbb
out
push
in
mov
dec
out
out
pop
xor
popa
add
in
xchg
push
mov
fsubrl
xchg
push
int
pop
int
dec
or
xor
pop
xchg
loope
xor
repz
mov
sbb
sub
sub
cli
les
sbb
pushf
fsubl
pcmpgtw
add
and
adc
xchg
aas
das
xor
and
or
mov
jl
xor
pop
and
insl
popf
push
xor
and
push
sub
xor
push
xchg
sub
sub
dec
sub
mov
and
cmp
sbb
std
add
adc
aad
xor
xor
xchg
cmp
cmpsl
sbb
ss
pop
addr16
add
pop
imul
sahf
adc
xor
inc
int
push
and
arpl
fdivrs
mov
repz
fdivl
mov
arpl
int
pop
pop
js
dec
adc
stc
outsb
cmp
jp
cmp
pop
int3
xlat
hlt
icebp
xlat
jp
add
stos
and
jle
loope
dec
push
cmp
and
lock
imul
out
fisttpll
jp
arpl
lds
pop
push
jle
out
jo
out
daa
jp
in
addb
into
sub
xchg
adc
fadds
cld
push
cmp
or
cwtl
fnstcw
and
xchg
xchg
pop
dec
dec
inc
lret
in
sbb
fsubr
mov
out
sub
iret
repz
lret
les
rorb
pop
outsb
fwait
out
adc
test
das
lock
ja
fistl
divl
outsb
out
pop
js
xchg
jle
inc
addr16
cmp
mov
pop
xchg
cltd
das
sub
in
out
shll
dec
ss
adc
shlb
xchg
and
neg
pop
ret
mov
push
mov
loop
dec
scas
xchg
inc
mov
xlat
jle
lods
sbb
lea
ljmp
mov
scas
leave
jg
lret
es
dec
jns
mov
out
dec
push
fwait
xor
jne
out
imul
addr16
je
mov
fs
lock
sti
push
push
xchg
call
cmp
mov
in
mov
insl
ret
mov
xlat
xchg
cmp
and
mov
das
mov
lds
cmp
fs
sub
mov
jl
lcall
cwtl
mov
push
pop
sar
push
sbb
mov
addr16
mov
add
mov
push
push
and
and
cmpsl
outsl
dec
push
leave
add
dec
jmp
mov
jg,pt
jg
mov
add
out
jecxz
insl
insl
filds
cld
xchg
mov
push
adc
ja
in
jae
push
cmp
push
push
ds
sahf
add
dec
mov
mov
int3
jle
xor
pop
jle
pop
in
inc
test
cmp
add
shl
pop
jae
or
int3
mov
fbstp
jb
mov
xor
mov
incb
nop
pop
imull
hlt
nop
push
into
data16
cmp
jo
fwait
jb
das
movsb
pop
imull
fadd
test
xor
mov
fists
jo
and
jge
stos
aad
hlt
cwtl
loop
lcall
pop
imul
mov
inc
ljmp
xchg
cs
sbb
fldenv
sarb
cs
insb
jge
xlat
push
sbbb
pop
mov
fwait
popa
cwtl
insb
push
xchg
mov
adc
adc
dec
jae
rcl
cltd
pop
sub
scas
sti
ret
test
call
xor
cmp
adc
cmp
movsw
or
popa
imul
stc
jecxz
add
pop
cwtl
dec
movsb
fcmove
fdivrp
pusha
push
and
lea
daa
xchg
and
xor
xchg
sub
mov
pop
in
loopne
cltd
cmp
xor
jbe
sbb
stos
push
arpl
pop
ds
out
inc
iret
imul
fxch
mov
faddl
clc
into
jp
mov
mov
sub
out
fcomi
jns
js
mov
or
loop
pop
mov
movsl
bound
sbb
sub
imulb
fwait
je
lea
sub
jo
lods
dec
js
lods
mov
inc
call
pop
xchg
mov
xchg
rolb
push
rcll
mov
bswap
sbb
jecxz
cmp
popa
outsb
je
scas
pop
cli
jg
mov
ret
xchg
rclb
popa
mov
sbb
pop
push
add
add
jnp
das
fldt
jns
push
fstps
orl
setno
in
and
xor
sub
out
cmp
lret
inc
push
push
lds
mov
jo
push
lds
es
mov
xor
and
push
or
loope
mov
mov
in
mov
mov
repnz
jo
shlb
dec
dec
bound
cmp
lret
cltd
test
adc
add
sub
fldl
or
imul
mov
jb
sbb
sub
fcmovnbe
and
lret
popa
xlat
lock
xchg
or
dec
cwtl
insb
jmp
jne
sub
mov
pusha
insb
pop
jae
test
and
xchg
data16
scas
adc
jecxz
add
fiaddl
cmp
and
xor
out
nop
aad
sar
adc
jne
ret
or
add
rolb
dec
jno
in
inc
mov
mov
mov
xchg
out
jb
cwtl
out
loop
in
int3
comiss
rorl
rol
push
loop
movsb
test
push
dec
mov
loopne
push
jae
mov
aad
mov
sub
cmp
ja
sbb
adc
or
lods
mov
jl
sarl
dec
jnp
inc
cmc
push
enter
jns
jno
jmp
pop
cli
lret
sti
loop
xor
cmp
pop
xor
bts
adc
inc
cli
push
movb
jge
dec
xor
sar
or
cmp
dec
sub
xor
fistpll
jne
stos
fmul
test
shlb
fstpt
jns
orb
hlt
mov
push
pmullw
jbe
movsb
loope
mov
add
shll
mov
stos
mov
in
xor
leave
xor
imul
jae
je
out
and
push
mov
dec
sub
jle
and
mov
stc
xor
add
rcrb
add
and
mov
movsb
push
andb
pusha
sbb
xor
aad
add
mov
mov
dec
dec
int
cmp
pop
add
inc
push
inc
sbb
pop
sbb
bound
jne
mov
sbbb
push
mov
gs
cwtl
xchg
inc
aad
xor
sub
sub
inc
sbb
adc
pop
cmpb
or
aad
loop
subb
sbb
mov
cmp
icebp
and
push
xchg
push
add
out
mov
rcrl
in
mov
jg
mov
cvtpi2ps
pop
mov
lods
push
cmp
cmp
ja
cmp
outsb
es
jl
push
rorb
ja
pop
shrb
and
ret
stos
cs
dec
in
repz
push
scas
jl
pop
out
mov
jmp
pop
sbb
loopne
es
sbb
out
push
add
pop
out
repz
ss
xchg
cmc
xchg
aam
ret
xchg
mov
sbb
inc
inc
loope
cmp
in
add
mov
mov
pop
ret
rcr
fimull
and
sub
dec
loopne
fwait
ret
jnp
push
and
cld
jo
fisttps
movsb
xchg
lahf
ret
jg
dec
arpl
push
ja
addr16
inc
aam
push
je
cmpsl
mov
imulb
cmp
stos
pop
mov
in
or
inc
pusha
push
daa
jns
cmp
sti
dec
les
xchg
popa
loop
xor
inc
mov
dec
pop
adc
pop
adcl
and
inc
call
mov
test
arpl
pop
in
mov
je
out
imul
arpl
sub
xor
mov
xchg
and
mov
dec
shlb
and
mov
fiadds
cld
lods
cmpsb
inc
fisubs
or
mov
lods
cmp
aas
in
mov
das
outsl
and
test
or
jne
xlat
sbb
adc
fwait
lock
fs
sub
hlt
lock
cmp
addr16
cltd
out
mov
pop
aad
mov
lods
or
adc
jbe
pop
xchg
ljmp
ror
mov
mov
mov
cmp
jl
shl
fdivrl
xor
stos
fnstcw
pop
and
fbld
iret
aad
xchg
mov
cmc
and
push
sti
cld
cvttps2pi
or
sbb
cmp
add
inc
xchg
nop
jmp
cmpsl
aam
pop
xchg
das
dec
sub
lcall
mov
jne
ds
sahf
sbb
fldenv
jp
aas
decl
addr16
loopne
push
xor
fstpl
cmp
dec
fcoml
pop
cmp
cmpsl
fwait
jb
push
rclb
sbbl
jnp
jnp
inc
mov
mov
scas
adc
jne
data16
jmp
pop
lds
in
sbb
jl
jae
mov
test
std
pushf
inc
sub
ljmp
mov
sbb
xchg
stos
push
xchg
pop
fildl
test
lock
insb
es
or
int3
sti
pop
jle
mov
add
xor
movsb
loopne
sub
ds
out
sub
mov
cmc
imul
out
mov
xchg
loop
mov
cmc
lods
imul
jo
inc
stos
cmp
pop
or
sbb
sti
leave
clc
ljmp
or
jge
push
nop
dec
pop
out
pop
or
ljmp
ss
sbb
arpl
in
mov
test
or
xor
push
pop
dec
xchg
insb
repz
insb
test
addr16
je
es
adc
dec
push
ficoml
pop
and
int
fst
or
repz
jo
insl
cmp
xchg
and
sub
lahf
pop
jbe
push
pop
mov
pusha
es
orb
mov
test
inc
mov
test
dec
mov
popa
pushf
repnz
fdivrs
sub
mov
lcall
jp
imul
sub
pushf
popf
inc
pop
pop
aas
lret
out
mov
mov
movl
xchg
shrb
mov
neg
jnp
lret
mov
xor
adc
fistpll
xor
out
pop
sub
xlat
pop
out
mov
jne
cmp
or
scas
xchg
jmp
mov
mov
daa
mov
jno
roll
out
cmc
pop
fwait
push
and
clc
fldenv
dec
test
sbb
lcall
jns
gs
outsl
add
adc
mov
in
and
cmpb
clc
repnz
add
mov
jno
jmp
ret
xlat
mov
rorl
xchg
aad
jae
mul
in
adc
push
adc
aaa
sbbb
repnz
xchg
or
jne
push
jns
mov
dec
fsts
insl
out
jl
mov
and
mov
xchg
in
and
arpl
mov
or
jb
fadds
ja
xchg
dec
add
fwait
icebp
stos
xor
adc
stos
dec
adc
stc
push
xchg
inc
xlat
fisubl
add
pushf
push
inc
stos
out
call
push
outsb
jmp
dec
mov
and
jl
adc
leave
mov
mov
fs
push
jns
jp
outsl
test
push
sub
xor
fwait
fs
outsb
je
das
pop
out
jmp
mov
jp
add
sub
jno
mov
cmc
fwait
hlt
sbbb
shr
xchg
cwtl
enter
icebp
mov
xchg
cmpsl
jp
icebp
rdtsc
dec
mov
mov
sub
sbb
cmp
je
push
aad
int
mov
les
add
and
xchg
push
push
cmc
jno
jne
cmp
icebp
lds
jnp
mov
add
mov
pop
ret
fimull
push
jb
lahf
mov
or
loop
mov
aas
jnp
xlat
rcll
mov
fbld
pop
mov
add
xlat
cmc
int
push
jbe
aas
xchg
add
sub
jle
stc
and
shlb
mov
adc
out
clc
jo
clc
push
dec
icebp
and
sbb
imul
push
and
jo
xor
jecxz
dec
xchg
inc
push
jne
movl
and
dec
lret
in
pop
sub
cmc
push
incb
nop
jns
pop
sbb
std
sbb
ljmp
imul
aaa
sub
xor
xlat
shrb
mov
addl
push
mov
jae
andl
mov
xor
jbe
fs
test
mov
mov
sti
adc
sbb
into
mov
int
orl
popa
jne
dec
mov
outsb
and
cld
mov
fwait
dec
test
sbb
aam
pop
std
in
js
mov
lcall
cmp
and
outsl
sbb
fstl
rcr
lret
xor
sub
xor
out
push
test
or
in
and
add
sub
stos
lea
jmp
test
lock
out
add
popf
xchg
in
in
jb
push
nop
in
jb
lods
mov
and
shlb
dec
sti
mov
jbe
push
cwtl
or
pop
push
outsl
inc
pushf
or
data16
inc
push
inc
clc
push
shrb
push
fsubrl
dec
mov
pop
lret
xor
sahf
or
test
add
xchg
push
jle
lds
lcall
aad
push
daa
aad
negb
in
insb
stos
inc
mov
fstpl
inc
imul
aad
push
sub
jle
out
mov
sbb
and
repz
adc
mov
loopne
fst
ret
pop
subl
imul
test
dec
adc
sub
mov
aam
add
int
mov
push
mov
lds
lahf
imul
aam
xor
pop
push
fstl
mov
dec
addr16
fcom
mov
test
adc
out
or
mov
dec
loope
jno
ss
out
pop
aaa
sbb
mov
xchg
ret
nop
mov
sbb
rolb
sbb
sarb
loop
arpl
or
fwait
ret
mov
pusha
inc
dec
inc
add
fidivrs
sub
fldcw
pop
imul
dec
add
cmp
pushf
mov
lret
mov
sbb
push
sub
pop
xchg
shlb
push
bound
sti
mov
aas
fimuls
mov
mov
out
icebp
dec
inc
rolb
adc
aas
add
in
fistpl
xchg
inc
inc
jo
std
aaa
je
out
dec
movsb
cs
out
out
ds
mov
lret
inc
enter
outsl
enter
das
add
mov
xlat
jne
dec
mov
jo
je
sub
mov
mov
shl
insb
loopne
pop
jge
stc
scas
push
dec
hlt
add
cld
out
fs
mov
mov
div
insl
lahf
add
mov
dec
sti
fcmove
sbb
jnp
shrl
xchg
cmp
lret
xchg
ljmp
cmc
and
ucomiss
scas
sub
and
cmp
adc
aam
repz
in
loope
add
addr16
fcmove
sbb
call
movsl
setne
push
pusha
or
and
insb
scas
iret
call
jge
xchg
or
shlb
lea
push
divb
jae
inc
imul
mov
cltd
inc
mov
jle
inc
adc
jnp
je
in
cli
dec
mov
mov
inc
dec
inc
repz
xchg
xor
push
jo
push
jbe
loopne
shll
and
aas
or
cld
xor
icebp
xor
mov
push
dec
testl
je
dec
xor
add
inc
pop
mov
sbb
inc
lcall
scas
inc
ss
movsb
mov
push
push
les
adc
adc
mov
popa
push
in
mov
test
scas
sbbl
push
xor
shr
daa
dec
out
mov
je
push
lret
sub
sbb
imul
rcl
pop
jp
hlt
pop
int
es
pop
imulb
mov
xchg
or
cltd
ja
gs
stos
sub
or
mov
jb
sbb
pusha
xor
out
xor
cwtl
jl
les
or
les
out
addr16
sub
into
lsl
iret
icebp
mov
mov
lret
push
jb
pop
push
insl
mov
loope
scas
out
imul
daa
jbe
dec
add
mov
pop
sub
in
push
lock
jl
dec
sbb
loope
sbb
jmp
push
push
xchg
testl
stc
stos
mov
popa
into
test
in
outsb
iret
push
fs
shrb
jp
icebp
cmp
jnp
and
ds
fnstcw
aaa
outsb
fsts
sub
mov
mov
js
sbb
ret
sarb
shll
jbe
leave
int
mov
rorb
or
push
lcall
test
jae
mov
mov
or
inc
dec
push
push
rorl
lret
mov
flds
mov
inc
inc
hlt
lods
mov
xlat
and
mov
enter
xchg
pop
jge
mov
sti
jecxz
mov
aad
aam
jecxz
aas
pop
xor
fistpll
dec
repnz
add
shll
cmc
mov
and
pushf
xchg
sbb
outsl
std
xchg
lods
hlt
jne
mov
jecxz
pop
or
call
push
sbb
sub
mov
xchg
sbb
aas
ror
dec
mov
push
mov
sub
mov
jg
pop
out
mov
stos
arpl
lds
jge
jae
push
and
sub
outsb
jecxz
std
popf
xor
inc
dec
pop
mov
push
hlt
cmpsl
mov
cmp
aaa
pop
enter
int
je
pop
dec
push
jnp
push
imul
mov
test
je
xchg
dec
cwtl
adc
mov
fldl2e
out
std
mov
shl
add
mov
pop
ljmp
mov
fwait
lahf
call
outsl
lret
test
mov
es
aad
das
sahf
push
fistpll
mov
jecxz
cmp
nop
outsl
dec
loope
push
sub
rclb
dec
cld
sti
jle
fnsetpm(287
jnp
or
adc
cmp
mov
mov
pop
imul
iret
hlt
dec
ljmp
es
in
inc
mov
fs
cltd
cmpsl
shl
or
or
push
mov
mov
aad
es
rorl
mov
outsl
xchg
in
mov
xchg
mov
mov
fwait
testl
inc
mov
rcrl
jecxz
and
shll
push
jne
test
adc
fldenv
xor
jmp
xchg
sub
movsl
jnp
mov
mov
adc
outsl
js
scas
sub
pushf
adc
test
cmp
jne
jnp
adc
imul
cli
dec
and
stc
ljmp
clc
ljmp
pop
stos
mov
lock
out
add
push
pop
hlt
cs
mov
stc
adc
mov
mov
lock
mov
fnsave
js
in
lds
xchg
gs
jnp
cmpsb
jno
sti
enter
je
stos
push
stc
mov
sbb
mov
sbb
pop
mov
ss
es
jbe
shr
push
cmp
xor
mov
adc
in
cmp
call
fistps
int3
sbb
frstor
leave
jnp
in
pop
jge
gs
test
jmp
cmc
iret
rorl
fwait
and
mov
mov
fwait
xor
and
inc
dec
ffreep
movsb
aaa
lea
jnp
shll
pop
shrb
cmp
dec
fldt
repz
push
sbb
xchg
imulb
xlat
jno
mov
dec
daa
cmp
pop
outsl
scas
mov
sub
leave
scas
stos
xor
sub
xchg
mov
lods
add
cmpb
aad
shlb
adc
jnp
sub
and
cmp
mov
sbb
popa
pusha
aas
cmp
sub
mov
aaa
cld
adc
imul
ljmp
push
ss
ds
jnp
add
test
lret
cmp
lods
ljmp
scas
cmp
std
lcall
inc
es
xchg
out
inc
js
push
cs
sub
fcmovnbe
and
jp
in
fdivl
inc
pop
inc
das
sub
xchg
push
fstpl
pusha
in
dec
lret
cmc
xchg
add
imul
dec
sahf
int3
fs
shl
pop
and
sbb
js
sti
imul
aas
ljmp
pop
mov
adc
cmpsb
es
sub
cmp
js
scas
insl
ljmp
das
push
and
popl
adc
std
lret
mov
jnp
pusha
stos
imul
jo
mov
or
adc
xor
mov
cmp
arpl
dec
test
in
aad
xchg
ffree
outsb
dec
add
jno
mov
or
xor
inc
sbb
sbb
test
lock
in
pushf
cmp
rcl
rol
sti
cwtl
or
ss
push
or
bound
inc
repz
frstor
mov
fldl2e
iret
rcr
pop
std
shrb
js
stos
or
inc
mov
das
sbb
fiadds
fldl
test
insb
mov
test
jns
push
sar
and
pop
jb
push
jl
shrb
fcom
pushf
arpl
xchg
mov
fisttpll
in
divl
es
mov
shrl
pop
sbb
ljmp
jmp
push
outsb
call
add
xchg
cmpsl
cwtl
sub
mov
fstps
or
subl
cmp
mov
inc
lea
outsb
mov
pop
out
sarb
std
and
jns
mov
jle
mov
popa
mov
fdivl
cmp
mov
xchg
mov
xchg
xchg
xchg
icebp
inc
out
insb
sbb
stos
int
std
pop
das
jnp
xchg
sub
arpl
cmp
or
jae
jle
cwtl
aad
mov
leave
mov
or
mov
xchg
subl
xchg
push
cmp
enter
push
or
std
in
fcmovbe
dec
movsl
lcall
push
das
mov
out
aas
and
jo
lods
andl
mov
cmp
push
and
dec
dec
cli
jge
into
pusha
mov
jmp
cld
sbb
and
cmpsb
cmovg
outsl
pop
sti
stos
insl
das
pop
stc
insl
shr
mov
xlat
aad
pusha
xchg
sbbl
inc
adc
add
std
mov
jnp
adc
daa
cmpsl
add
popf
jae
sub
repnz
lahf
pop
aas
push
pushf
and
popa
inc
fs
lret
fstpl
mov
mov
lret
loopne
jmp
xor
mov
popa
or
outsl
fs
sbb
or
pop
push
stos
aam
mov
cld
inc
xor
rol
bound
sub
and
cmp
mov
inc
int
scas
or
cs
sbb
lahf
adc
lods
jnp
pop
pop
sahf
mov
das
pop
cli
push
fdiv
pusha
imul
cltd
jns
lahf
data16
and
das
out
subb
arpl
in
repnz
int
test
into
lods
rorb
mov
fxch
push
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
ret
xor
cmp
jp
pop
jp
int
mov
mov
pop
sar
popa
pop
rcrb
stos
nop
insb
sar
pop
add
jmp
lret
stos
movsb
cmp
sti
dec
sub
or
inc
or
mov
pop
subb
pop
out
std
or
jecxz
push
jecxz
stc
in
mov
lock
sahf
inc
lea
and
push
sbb
ja
mov
test
movsl
mov
cmp
jl
inc
imul
pop
int
rorb
mov
and
call
in
mov
call
mov
jg
call
stos
clc
push
insl
bound
std
lods
hlt
mov
xchg
pop
or
in
cmc
sahf
subl
lock
add
dec
jmp
int3
sub
dec
dec
and
imul
shl
stc
xchg
dec
in
mov
dec
fcmovb
arpl
clc
lock
jecxz
mov
daa
jae
dec
or
es
cmpsb
loope
mov
rclb
mov
sbb
cmpsl
inc
andb
ret
dec
xor
jbe
fiadds
test
les
cmpsl
cltd
mov
notl
lock
in
lods
jno
adc
into
fidivrl
sti
mov
in
test
mov
xlat
sub
dec
movsb
lcall
cmpl
cli
push
sbb
gs
cmpsl
inc
xor
sbbl
in
decb
push
sub
mov
loope
fwait
stos
inc
and
dec
or
imul
pop
sbb
mov
in
mov
aam
adc
sub
inc
mov
mov
stc
push
mov
es
stos
mov
stos
xor
jle
adcb
inc
adc
dec
pop
sar
call
es
test
mov
das
xchg
in
punpcklwd
lret
sub
mov
jmp
push
pusha
mov
and
cs
add
or
push
and
mov
push
push
inc
negl
and
test
jae
mov
mov
inc
dec
addl
xchg
dec
sub
leave
xor
imul
push
test
aas
push
ja
in
dec
mov
mov
addb
lods
mov
cmp
imull
inc
mov
out
test
shrb
sti
add
imul
stos
loop
or
and
xchg
mov
cmpsl
and
rorb
loop
call
mov
xchg
ds
in
fsubs
xchg
fistpl
sub
call
xor
into
pushl
and
mov
ss
cmovp
inc
lret
lea
jb
and
mov
shlb
lods
inc
das
inc
push
add
or
in
roll
cmpb
repz
inc
insb
mov
or
push
mov
orb
mov
push
outsl
cmp
dec
dec
lret
push
adc
aas
push
fs
stos
in
xchg
dec
xor
add
repz
or
das
por
push
arpl
insl
xchg
rorl
sbb
push
popa
xchg
ret
roll
rcrl
dec
cs
dec
push
lods
add
outsb
cli
mov
xchg
ljmp
or
xor
jo
push
xor
xchg
xor
mov
push
cltd
adc
add
jecxz
and
sbb
gs
fwait
cmp
cli
xchg
lods
notl
push
or
jno
cltd
mov
enter
ds
das
mov
jne
xor
jge
jne
mov
adc
cmp
jg
push
xor
lods
dec
inc
stos
pop
mov
imul
lret
in
sub
movsb
into
ljmp
das
or
les
add
aam
pop
push
xlat
pop
pop
in
test
jne
adc
or
add
cmp
jg
jb
cmp
loop
test
pminsw
shll
daa
repnz
imul
shlb
mov
aam
mov
std
xor
inc
push
sbb
mov
adc
fwait
or
jg
inc
rclb
mov
sarb
xor
imul
adc
jo
inc
in
loopne
jae
cmp
mov
aam
pop
pop
int
jmp
push
mov
andb
cmpsb
push
xchg
adc
scas
pop
adc
push
sbb
mov
mov
add
mov
lcall
sbb
imul
in
test
lods
mulb
xchg
mov
xchg
movd
mov
sarl
push
dec
fistps
add
or
add
xlat
cld
out
pop
scas
lcall
xorb
xor
imul
sbb
sub
das
push
lock
push
sbb
cltd
outsb
in
ljmp
pop
rorl
cmc
mov
xor
lret
fildll
lret
repz
push
push
cwtl
dec
jb
or
loope
addr16
lret
and
stc
dec
jae
es
mov
xchg
jnp
dec
inc
xor
ret
imul
xchg
fistpll
imul
fadds
jge
mov
push
inc
pop
mov
adc
pop
xchg
sbb
or
test
push
xchg
dec
mov
mov
lcall
mov
mov
sbb
push
xchg
stos
pop
in
push
push
push
in
fildl
pop
test
inc
xchg
lea
in
inc
mov
mov
aas
out
cs
and
cltd
in
add
sti
jge
gs
sarb
jb
push
mov
inc
in
jmp
push
sub
sbb
ljmp
popf
cmp
imul
jne
dec
add
popa
out
push
out
pop
aaa
arpl
adc
ds
fucomp
test
adc
fs
xchg
adc
movsl
jg
mov
ss
out
jl
lahf
push
xchg
jmp
xchg
dec
xor
lods
mov
repnz
inc
aaa
xor
jle
sbb
mov
out
leave
or
add
or
mov
and
into
or
mov
pop
xchg
andb
test
push
cs
and
cmp
test
sub
pminub
push
mov
in
or
xor
cmc
in
xchg
and
xchg
adc
cli
xor
es
push
gs
pop
dec
sbb
ret
xor
ret
les
test
jns
in
int3
add
push
xor
inc
imul
xchg
clc
sub
push
popa
addr16
daa
sub
pop
lea
outsl
sbb
jl
inc
lods
pop
iret
rolb
adc
stc
ss
pop
adc
sub
push
mov
loop
sbb
mov
mov
mov
fwait
jnp
ds
xor
ret
add
mov
xor
cmp
sbbb
aas
int
rcrb
pop
mov
xchg
jl
push
push
xor
xchg
cwtl
add
adc
xor
push
mov
addl
sbb
jecxz
ret
push
les
jae
out
js
fs
fldt
jle
adc
loope
fs
mov
push
add
nop
adc
data16
aam
jno
jp
add
mov
xchg
mov
and
in
add
cmp
adc
push
adcb
jne
pop
pusha
xchg
push
dec
xchg
push
pop
adc
xor
mov
inc
pop
sbb
mov
lahf
inc
or
inc
orl
sub
cmpsl
jecxz
or
xchg
inc
xchg
ljmp
adc
negb
movsl
or
add
or
mov
repnz
jl
jne
lcall
mov
mov
fsubrs
adc
xchg
fsubs
jae
andnps
repnz
jne
sbb
out
dec
aam
fisubl
pop
enter
andb
pop
dec
aas
fnstcw
les
adc
leave
and
cmp
lods
jle
adc
and
mov
xor
add
mov
loope
and
sarl
xlat
and
push
xchg
pop
popa
inc
inc
cmp
cmp
inc
ds
push
fldcw
xchg
shll
lock
popf
and
hlt
jbe
adc
cmp
test
sbb
xor
jne
xor
push
into
loopne
incb
xor
push
add
jmp
nop
bound
pushf
das
adc
jg
push
in
xor
bound
and
div
xor
sbb
and
ret
rcll
jle
and
insl
sub
add
sub
inc
adc
sahf
lret
clc
fstpl
jecxz
out
insl
pusha
mov
outsl
insw
mov
mov
jge
mov
orl
shl
add
inc
pushf
mov
sub
mov
jle
and
sub
cmp
push
scas
arpl
xor
out
pushf
mov
dec
scas
cli
xor
js
ljmp
cmpsb
js
push
pop
mov
andb
sbb
add
int3
or
add
int3
ds
xchg
push
out
sub
jne
push
mov
inc
insb
insb
sahf
jb
xchg
sub
cmp
mov
xor
cs
sbb
fisttps
mov
mov
cmp
xchg
or
add
cs
mov
test
cmp
push
add
fistl
and
popl
fdivrl
add
push
fcoml
mov
inc
add
aaa
dec
push
adc
or
and
ret
add
inc
push
dec
mov
les
mov
ja
int
pushf
inc
mov
loope
test
or
push
mov
mov
je
dec
mov
or
out
mov
push
cmc
mov
jl
sub
cmp
dec
adc
adc
mov
cmp
fstpt
jns
ret
out
cmp
adc
add
call
mov
cmpl
jl
pusha
or
adc
outsl
loopne
or
ljmp
and
sti
mov
cmpsl
adc
pop
jecxz
jno
adcb
add
push
stos
push
leave
in
loop
sub
push
stos
sub
out
das
mov
cs
subb
out
sbb
andb
mov
xor
in
cwtl
and
sahf
add
jmp
xchg
xchg
jge
pop
adc
mov
call
test
adc
dec
iret
cmpsl
enter
dec
and
stc
ds
ret
xchg
out
loop
xchg
shlb
and
lret
enter
or
push
dec
cmp
int3
popf
cmc
data16
leave
mov
xchg
and
xor
inc
mov
cwtl
mov
test
or
mov
pop
and
mov
xchg
das
test
mov
divb
mov
int
xchg
decl
cmc
xchg
or
data16
mov
dec
mull
mov
ss
sub
push
enter
fdivrp
dec
pop
push
xchg
wrssd
cmp
push
adc
lods
xchg
adc
mov
mov
les
out
pop
adc
aas
adc
pushf
dec
xchg
mov
lods
rcll
imul
ss
pusha
jecxz
jmp
adc
jg
cmp
mov
pushf
jno
push
or
pop
mov
xchg
or
cwtl
out
mov
cmp
jns
mov
inc
or
jge
mov
jne
add
sahf
shrl
leave
mov
out
mov
fwait
cmpsb
inc
int3
std
test
jo
jnp
xor
jge
mov
fstps
negb
push
pop
mov
dec
ds
js
xor
aaa
dec
out
lock
imul
std
loopne
push
mov
fstpl
pop
or
sbb
pop
add
je
or
and
xor
jne
or
pushf
lret
pop
mov
adc
scas
and
dec
jge
or
jne
mov
pop
movsl
stos
jne
cmpsl
xchg
stos
out
add
jge
sbb
sub
into
sbb
jb
adc
cvtps2pd
sbb
shrb
xchg
out
jbe
sub
mov
add
inc
cwtl
dec
arpl
mov
call
jbe
xor
pop
fildl
scas
ret
int3
cwtl
mov
fildll
mov
or
test
xchg
rcl
fs
out
xchg
hlt
in
out
lods
dec
sub
sub
push
pop
mov
pop
dec
adc
mov
sub
insl
dec
cmpsl
jmp
adc
cwtl
fs
mov
test
push
fadds
out
dec
and
mov
shl
enter
mov
icebp
cmp
push
insl
sub
dec
and
and
mov
xor
cwtl
imul
aad
cmp
mov
xchg
push
pusha
rcrb
pop
loopne
or
ja
ffreep
out
mov
sub
test
pop
xchg
pop
and
push
ret
sbb
cld
ljmp
aaa
mov
or
push
fcoml
imul
inc
mov
cli
and
orl
addl
mov
ljmp
add
stos
add
pop
sub
nop
fisubrs
jge
les
loopne
xor
imul
out
jbe
cwtl
scas
mov
ss
mov
js
sbb
fcmovnbe
jns
es
cmp
or
xchg
xor
lods
xor
push
ja
aam
lret
push
sbb
and
mov
push
repz
cld
nop
nop
loop
lahf
push
icebp
clc
mov
cmpsb
cli
xor
mov
roll
jns
sbb
push
cltd
xchg
cmp
cltd
test
mov
jne
xor
lret
outsl
xor
sbb
fcom
xchg
lahf
add
dec
pop
insb
adc
enter
cld
or
loop
adc
or
adc
jl
mov
mov
nop
ds
sbb
pop
jae
cmc
aam
inc
or
in
imul
je
inc
push
mov
js
sub
cmovl
cld
rcrl
push
das
push
outsl
repnz
cmp
enter
shrl
mov
or
jecxz
std
sub
shl
pushf
add
jns
aad
push
mov
imul
aam
cmpsl
mov
ss
dec
inc
dec
dec
xchg
jg
push
lret
sbb
pusha
test
cmp
xchg
pusha
dec
lahf
cld
adc
pop
jge
jns
sbb
push
ret
rorl
or
mov
xor
gs
lds
insb
outsl
adc
jmp
hlt
ret
inc
inc
mov
inc
enter
pop
add
mov
bound
sub
and
jecxz
cs
pop
stos
mov
popl
pop
loope
xchg
cmp
sar
and
nop
jle
fs
mov
outsb
es
subl
je
cmpsl
je
or
dec
jae
in
adcb
push
not
mov
sub
jl
or
add
into
jecxz
push
xchg
jb
fcompl
and
sti
and
jbe
push
subl
sbb
xchg
cs
adc
push
mov
movsl
stc
mov
out
inc
int
outsl
inc
inc
rol
ret
inc
inc
pop
in
into
sbb
push
and
jge
inc
arpl
mov
out
lret
sbb
int3
add
fmuls
jecxz
push
shrl
jg
test
sbb
jb
xor
lods
fisttps
adc
adc
in
and
push
inc
jmp
push
das
push
outsl
sbb
lret
dec
hlt
xor
fstl
and
push
shlb
les
mov
sbb
push
fmul
ljmp
je
es
fdivl
pop
insl
push
popf
cmp
ds
cmpl
xor
popf
jl
scas
dec
ja
jmp
test
dec
jbe
jle
and
negb
pop
xor
cld
add
popa
xchg
lcall
push
fdivrl
data16
in
shrl
lret
xchg
mov
and
jae
pop
xor
mul
add
pusha
jns
in
fs
mov
fcomps
lahf
mov
daa
cmp
cmc
cmp
movsb
xor
mov
add
ja
pop
mov
adc
jl
adc
mov
xchg
sbb
arpl
adc
inc
popf
movsb
aam
pop
inc
pop
clc
sahf
pusha
push
or
popf
fdivl
push
jno
inc
sbb
dec
cli
loope
cmpsl
adc
push
cmpsb
jmp
and
xchg
and
push
mov
aaa
sub
mov
rcl
test
add
mov
adc
out
sarb
dec
ret
es
adc
int3
cmpsl
cmp
stos
popf
cmp
repnz
lahf
dec
mov
inc
jne
xchg
mov
jmp
xchg
cmpsl
push
lods
mov
loop
xchg
add
int3
fsubrl
inc
out
loope
cmpsl
pop
push
dec
or
repz
rcrl
pop
pop
test
rolb
shll
or
shl
mov
inc
xor
fidivs
jl
rcrl
pop
fildll
cmp
pop
js
cmp
outsb
in
mov
add
cmp
xchg
inc
adc
fwait
adc
push
mov
fcoml
adc
sbb
jmp
int
add
lock
aam
mov
pop
mov
loopne
lahf
lsl
mov
inc
subb
mov
push
or
sub
and
ficomps
xlat
cli
jno
jbe
xchg
scas
lcall
sbb
fsubs
cmp
test
add
add
test
dec
sbbl
cmpb
push
inc
pop
mov
cmp
mov
pushf
lods
mov
add
push
loope
jns
lods
xor
mov
adc
add
arpl
add
shlb
in
mov
add
dec
faddl
dec
and
into
cmp
outsl
xchg
adc
inc
cmp
add
jno
xchg
push
pop
rorl
ror
lods
fwait
sbb
imul
lock
or
mov
add
fdivl
jb
jp
cmc
add
adc
mov
scas
xor
in
push
sti
or
repnz
leave
out
fisubrs
addr16
jge
mov
bound
cmp
ja
cmc
sub
popf
sti
xor
sahf
jle
inc
push
idivl
es
push
dec
xlat
dec
int3
pop
pop
mov
lds
sahf
or
insb
cmp
enter
pop
mov
pop
insl
cmp
or
inc
adc
data16
adc
mov
mull
pop
imul
cmp
fidivrl
lahf
movsb
hlt
xchg
ljmp
or
js
xchg
add
subb
xchg
mov
popl
or
mov
mov
xchg
pop
xchg
inc
xlat
mov
and
mov
mov
pop
add
mov
mov
inc
add
pop
pop
mov
adc
fadds
out
shl
dec
pop
pop
mov
lcall
int3
movsb
and
cmp
inc
dec
dec
sub
outsl
andb
jmp
out
dec
xchg
add
pop
sub
mov
imulb
sub
and
mov
jle
mov
and
fidivs
enter
bound
dec
adc
sub
xchg
sti
hlt
mov
lret
arpl
sub
jne
or
jg
dec
inc
arpl
pop
xchg
add
xchg
push
push
fisubrl
mov
ret
dec
outsl
shrl
cmp
sahf
cmovbe
call
mov
clc
loopne
in
mov
jnp
int
lods
divb
or
mov
scas
xchg
pop
cli
andl
movsl
test
into
jno
xchg
mov
pusha
nop
lcall
stos
sub
sbb
pop
div
adc
xlat
or
test
dec
shll
imul
xchg
data16
cmp
sahf
push
sbb
fisttpll
scas
xor
ss
xor
add
cs
add
xorb
dec
mov
mov
insl
mov
hlt
jp
std
jmp
jns
sub
sbb
adc
lock
mov
popf
out
xor
pop
pop
push
push
test
inc
jae
inc
pop
or
push
mov
push
cwtl
pop
sbbb
xor
pop
inc
push
xchg
mov
xchg
and
inc
aam
adc
sti
mov
push
in
push
pop
sub
fnstenv
dec
movsb
lods
pop
adc
icebp
shlb
sbb
inc
lret
fidivrs
or
xchg
jnp
testl
jnp
ja
cmp
sub
mov
rolb
add
movsl
sub
xchg
jge
jg
mov
loopne
movsb
cmpsb
sti
fdivrl
sub
jae
xchg
mov
and
lahf
or
outsl
lock
daa
mov
or
cmpsb
addb
or
lods
bound
aaa
jbe
and
aam
leave
xchg
sub
xor
out
iret
in
sarl
inc
add
imul
in
mov
lds
push
fldenv
xchg
nop
lods
movsl
aam
jmp
rcrl
pop
mov
fistl
inc
cli
push
sti
sbb
jg
cmp
in
dec
andb
fistl
xor
xchg
fsqrt
or
xchg
pop
jmp
inc
mov
sub
xchg
sub
or
push
out
and
cmpsb
popa
mov
sti
aaa
fs
jle,pt
pusha
shl
dec
std
lods
push
mov
call
nop
jne
or
add
adcb
push
lret
lea
mov
pushf
sarl
inc
jne
sbb
roll
push
sbb
cmp
leave
xor
and
mov
jns
popa
pushf
adc
and
mov
push
ret
lcall
sbb
jb,pt
adc
pop
in
sub
mov
pusha
mov
lret
lods
cmp
daa
sti
and
mov
add
lahf
dec
rol
pop
pushf
jp
lcall
int
fisttpll
dec
cld
test
iret
push
sbbl
neg
imul
jg
cld
add
cmovg
xor
jecxz
xchg
push
loope
insl
call
jns
and
scas
daa
sub
shrb
cld
fwait
inc
jecxz
adc
shll
mov
push
ss
adc
mov
push
arpl
sub
mov
jp
sub
cmpsb
push
dec
xchg
adc
insl
xchg
rorb
and
mov
and
outsb
sub
dec
stos
sbb
scas
mov
mov
loope
dec
movsl
mov
or
ret
pop
and
pop
shrb
cmpsb
scas
mov
adc
js
scas
lcall
dec
mov
add
xchg
xchg
push
cmp
mov
pop
ss
in
sub
xor
imul
inc
jae
cs
retw
mov
je
jb
scas
in
subl
mov
mov
fsub
insb
or
push
xor
scas
cld
add
lea
jg
mov
aas
jns
push
stos
push
and
xor
sbb
lds
test
mov
dec
dec
xlat
or
aad
mov
mov
movsl
pop
mov
mov
fchs
mov
cmp
shrl
lods
icebp
xor
mov
mov
dec
xlat
add
jbe
mov
xchg
mov
jbe
mov
jnp
xchg
out
sbb
pushf
movsb
push
clc
pusha
out
dec
imul
fs
mov
push
gs
out
int3
fcompl
cmp
mov
daa
mov
and
popa
mov
xchg
daa
xchg
outsb
insl
jno
push
pop
mov
lret
mov
add
sub
add
push
pop
cli
mov
rclb
xlat
and
out
push
and
mov
scas
or
jecxz
lahf
out
je
cmc
push
sub
xchg
dec
xchg
jp
mov
cmp
sub
cs
call
testl
mov
add
pop
mov
shlb
aad
mov
js
shlb
or
lcall
jne
fs
sbb
loopne
ret
cs
mov
fdivr
out
sub
push
add
icebp
psubq
cld
sbb
inc
daa
jecxz
xchg
mov
movsb
fld
icebp
fcomip
xchg
imul
add
movsb
addr16
mov
ja
test
es
mov
and
lret
sbb
in
inc
push
je
jne
rorb
sarb
jecxz
js
and
sarb
aam
xor
repz
aam
stos
sub
inc
pop
aam
push
lahf
xor
aad
adc
arpl
xor
mov
cmp
push
cmp
sub
std
pop
pop
mov
sub
xor
pop
out
cmpsl
decl
sub
xchg
push
mov
push
leave
push
xor
or
cmc
jae
jbe
stos
cld
andb
call
imul
lods
xchg
sub
or
mov
mov
stos
int
push
insb
xlat
jno
shl
xchg
jp
mull
in
xchg
jl
imul
jnp
mov
loope
shlb
lods
and
test
pusha
xchg
roll
scas
jmp
mov
sub
push
cmc
gs
mov
or
ffreep
push
repz
iret
sbb
js
inc
cli
pushf
or
ret
jbe
pop
movsl
sbb
sub
push
sub
cmp
mov
lret
mov
shlb
or
sbb
arpl
adc
mov
ss
pop
loop
lods
leave
mov
pop
push
int3
xlat
jg
rcll
add
dec
dec
jecxz
push
add
fcoml
xchg
lods
stos
jo
mov
mov
or
jb
hlt
int
pop
push
adc
cs
enter
cltd
bound
pop
inc
cwtl
subb
stos
jmp
inc
iret
jge
xor
dec
sbb
xchg
ret
test
inc
pop
out
mov
mov
aas
jecxz
nop
push
or
sub
push
jno
dec
mov
pop
rcrl
or
hlt
cld
fwait
adc
xchg
aas
lods
jecxz
xchg
fildl
add
test
movsl
nop
out
xor
or
pop
pop
mov
in
mov
inc
push
fdivl
fdivl
sub
outsl
xchg
rcll
mov
lret
dec
push
pop
pop
pop
lods
enter
dec
aam
movsb
cmp
cmpsl
and
xchg
cs
sbbl
cli
inc
rorb
fisubrl
fsubrs
dec
sbb
mov
ja
popa
xchg
jle
ffreep
push
dec
or
mov
jnp
inc
sbb
roll
adc
mov
xchg
inc
sub
jbe
mov
push
test
idiv
imul
sub
jl
test
std
std
and
stos
cmc
cld
xchg
ficoml
pop
loope
js
sub
popa
jle
imulb
out
jae
loopne
fninit
in
aaa
daa
jp
lahf
in
ret
outsl
stc
es
jmp
imul
xchg
mov
fbstp
xchg
fnstcw
sbb
fstpl
daa
lods
subl
repnz
adc
cmp
mov
in
cli
cmp
mov
sahf
add
call
aaa
add
fwait
mov
xchg
je
hlt
cmp
pop
sub
mov
cwtl
popa
iret
mov
cli
jmp
dec
in
mov
loopne
movsl
add
leave
xchg
sbb
sub
lret
in
insl
cmp
imulb
sub
repnz
pop
xchg
mov
std
and
in
pop
pop
cwtl
inc
fldt
dec
mov
shll
pop
adc
stos
push
cmpsb
mov
out
int3
test
and
or
in
jmp
pop
negb
mov
dec
dec
mov
cmpsb
stos
push
dec
inc
sarl
push
xchg
arpl
dec
and
scas
sub
or
sbb
sub
sbb
xlat
and
out
ret
dec
rol
lret
jl
push
mov
repz
mov
sti
or
dec
cld
es
adc
fcmovu
jg
add
mov
movsl
pop
in
add
jmp
jmp
mov
repz
stos
movsb
gs
mov
paddsb
adc
mov
hlt
outsl
es
sbb
mov
cs
cli
mov
imul
push
jno
jl
fcompl
adc
jmp
mov
push
inc
aas
cltd
xchg
fwait
mov
mov
dec
dec
and
jns
jecxz
ficoml
cmp
pushl
dec
fistpll
mov
test
jl
dec
mov
lret
imul
cmpsb
fstps
shr
xchg
mov
lea
or
dec
aas
in
pop
sub
jb
jecxz
adc
xchg
and
add
push
sarb
xlat
and
out
inc
adc
mov
ss
insl
xchg
in
pop
movsl
cltd
loopne
cmp
daa
mov
xchg
adc
lds
push
and
jmp
dec
lcall
sbb
lds
xchg
int
shlb
sub
out
pop
in
add
dec
sbb
fs
cli
rcrl
sub
cmpsl
shll
cmp
xor
mov
sub
lcall
imul
sbb
das
sti
xlat
and
loop
pop
mov
stos
es
mov
nop
and
cmpsb
pushf
xor
pop
icebp
ds
jle
jmp
fsubs
push
cwtl
xchg
ret
test
cmp
test
adc
and
enter
add
movsb
cmp
movsb
fistps
nop
cwtl
push
mov
xor
ja
insl
gs
loopne
sub
icebp
sti
jge
jle
lock
faddp
popa
jle
inc
push
pop
mov
std
xorl
test
xchg
fsubrs
cmpsb
and
xchg
mov
stc
icebp
idivb
int
loop
mov
cld
xabort
notl
pushf
dec
enter
jnp
cmp
shrb
add
dec
ljmp
xchg
sti
cmp
fdivs
imul
jmp
jo
imul
cmp
xor
cld
scas
xor
ss
adc
push
and
push
das
inc
pop
or
push
outsb
push
lods
push
int3
sbb
xchg
push
sahf
test
sti
loop
mov
adcl
jbe
cmp
and
and
pusha
loop
xor
inc
dec
xchg
push
js
es
push
hlt
dec
pop
mov
mov
mov
sbb
lock
jb
push
in
icebp
xchg
or
arpl
iret
cmp
inc
add
mov
dec
sbb
cmpb
daa
push
pusha
jge
xor
cmp
pop
inc
pop
push
js
pop
jp
or
push
mov
push
dec
dec
rcrl
adc
and
add
pushf
shl
shll
clc
cmc
xchg
sbb
cltd
test
loop
push
lods
push
xor
rolb
daa
cs
push
adc
push
lret
lret
add
dec
cltd
lock
call
jo
adc
aam
je
int
xor
push
loope
pop
and
add
fwait
pop
ret
andl
lods
fldcw
fistpll
inc
push
xchg
cld
pop
ficoml
aaa
clc
and
popa
xor
imul
cmc
aas
cld
or
or
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
push
mov
jp
sbb
jp
std
sub
or
inc
add
loope
fisttpl
mov
pop
in
in
bound
and
repz
jne
jle
push
clc
mov
daa
icebp
dec
lret
inc
xor
mov
or
mov
fs
outsb
gs
push
fstl
cmpsl
adc
popf
or
mov
leave
sbb
fstl
arpl
pop
repnz
xchg
in
xchg
leave
cmpsl
loopne
out
pop
push
std
mov
jne
sbb
test
sbb
dec
xchg
cmpsl
pop
and
bound
data16
mov
sub
fmuls
mov
cmp
sarl
cmp
stc
daa
ds
jge
xchg
movsl
loope
mov
xor
pop
add
or
inc
idivb
in
ficomps
mov
xchg
xchg
repz
and
adc
inc
ror
push
incb
jecxz
lcall
or
sub
push
movsb
lea
ss
cmp
jmp
jp,pn
int
fimuls
jnp
lcall
loop
inc
aaa
not
repz
adcl
or
jns
scas
scas
cmp
pop
xlat
mov
push
test
jb
sar
and
shr
mov
or
mov
sbb
movsl
jl
jmp
jb
fnstenv
movsl
inc
pop
add
push
mov
add
jno
xor
sub
xchg
jae
sbb
je
pop
sbb
mov
mov
cmp
xchg
aam
dec
sub
lret
add
hlt
mov
push
test
cs
iret
ljmp
jns
and
mov
mov
das
push
jae
insb
or
pop
loop
add
cltd
lahf
roll
jmp
pop
addb
jle
das
mov
cmp
test
cmp
push
or
lods
adc
fiaddl
and
and
jmp
les
inc
movsl
mov
lods
orb
test
push
cltd
xchg
mov
or
or
or
bswap
cmp
pop
cmp
sub
stos
mov
out
lods
cmp
add
movsl
popf
adc
or
mov
sbb
loop,pt
arpl
les
push
cwtl
loop
daa
nop
mov
push
sub
imul
fcmovu
inc
add
sub
xorl
mov
repz
pop
lcall
jmp
andb
loope
repnz
jne
cltd
repnz
roll
test
add
adc
rcrl
xchg
or
mov
push
mov
mov
lods
sahf
dec
xchg
lret
sub
inc
inc
sbb
cmp
ds
lret
xor
les
mov
pushf
push
xchg
pop
loope
mov
dec
std
mov
shlb
xchg
sar
jo
js
push
psubq
sbb
sahf
test
test
incb
push
jge
mov
dec
mov
lea
push
inc
cs
push
cmc
jp
fiadds
out
or
inc
movb
lcall
aad
fnstsw
jno
xorl
outsl
call
or
repz
lods
sbb
in
push
xor
mov
pop
in
pop
mov
and
cli
push
sar
rorl
subb
lret
add
or
adc
lods
mov
inc
ljmp
or
mov
adc
sub
ds
cmc
sysexit
in
and
sarl
jnp
add
je
in
mov
lret
iret
pop
stos
clc
nop
pop
enter
fwait
cmpsb
ja
out
or
scas
sti
push
lods
sbbb
xchg
stos
inc
fsubl
mov
push
aas
in
xor
call
mov
repnz
scas
jecxz
mov
push
out
aad
mov
xor
adc
das
dec
in
jae
sarl
push
mov
in
repnz
mov
dec
and
add
jge
jb
sbb
inc
out
mov
sahf
pop
jo
mov
inc
repz
push
jg
in
xor
pop
or
jbe
in
insb
and
js
pop
push
mov
push
jae
sub
or
mov
arpl
pop
pop
jo
mov
ret
rorb
repz
or
je
xchg
or
mov
mov
imul
cmpsl
cli
lret
jmp
mov
inc
shlb
mov
jbe
sub
jmp
cmp
sub
hlt
jns
add
js
and
mov
into
ficomps
inc
xor
xor
adc
mov
sub
lret
jle
inc
and
push
pushf
or
adc
add
cld
stos
lds
push
sub
push
jge
push
mov
cmp
test
mov
xor
mov
mov
test
xchg
fisubl
cltd
test
jl
cmp
xchg
loopne
sub
lock
adc
fcom
cmp
add
mov
pusha
and
cmp
inc
out
mov
push
inc
mov
or
push
sbb
jle
out
test
pushf
push
cmp
inc
cmp
roll
add
sbb
lods
sbb
push
mov
lret
nop
jge
fdivp
gs
jp
pop
pop
out
mov
push
mov
lret
mov
enter
pop
mov
sti
push
push
repnz
add
sbb
xor
add
dec
mov
dec
in
jg
and
sahf
pusha
xchg
and
scas
mov
xchg
xchg
cmp
adc
mov
mov
xor
cs
xor
xlat
scas
push
repnz
or
imulb
push
mov
inc
push
mov
pusha
pushf
data16
xlat
clc
mov
ret
jge
cmp
mov
sahf
sahf
push
and
adc
or
addb
xchg
mov
movsl
and
in
push
lods
mov
popa
scas
cmpsb
sub
movsb
cmc
ficoml
push
pop
scas
xor
xor
mov
mov
cmp
or
or
push
xor
stos
dec
and
stos
jae
mov
push
cli
or
lret
push
ds
scas
dec
jmp
data16
add
sarb
mov
sbb
in
arpl
ret
lret
push
out
int
mov
add
mov
loop
push
push
arpl
mov
das
xchg
bound
js
mov
scas
aas
aad
jp
xchg
dec
adc
cmp
push
jmp
cwtl
dec
jp
sbb
jle
stos
mov
lods
ret
int
hlt
mov
in
push
pop
mov
dec
sub
ret
add
jno
cmpsl
inc
test
sbbl
or
sbb
insl
add
jle
or
mov
mov
pushf
stos
sbb
xchg
imul
adc
enter
out
lret
or
jae
mov
stos
test
ja
movsl
fadds
and
xorb
fdivrs
in
dec
shll
aad
or
sbb
aad
fisubrs
test
test
sub
call
mov
xchg
xor
clc
fcomps
or
shlb
and
push
test
test
packuswb
cmp
shll
lods
xchg
add
sub
mov
cmc
jno
loopne
pusha
testb
ret
adc
fsubrl
sbb
lods
or
in
xor
mov
ds
sub
adc
cmpsl
cmpsl
jle
mov
enter
in
pushf
mov
movsl
cmpsb
cs
mov
aas
scas
push
push
sbb
xor
mov
inc
test
in
and
sbb
rol
scas
jno
sbb
jnp
int
mov
push
and
repz
push
xchg
movsl
pop
jne
adc
dec
xchg
pop
jns
push
inc
shrl
es
and
nop
mov
enter
lahf
repz
repz
jbe
push
xchg
and
jo
jge
in
out
adc
push
cltd
rolb
mov
push
out
sbb
negl
jo
data16
cmp
cmpsl
jb
jbe
and
ret
mov
ja
jno
pop
mov
push
loop
std
push
and
loopne
xchg
mov
std
adc
mov
stos
int3
xchg
jbe
cmpb
adc
imul
sbb
sbb
jae
imul
push
and
xchg
orl
add
lcall
push
not
js
into
lock
in
adc
dec
test
fs
loopne
inc
cli
lds
cli
xchg
dec
out
mov
shrb
jmp
in
sahf
xor
mov
inc
and
add
adc
xor
jae
or
cmp
sbb
dec
idivb
mov
pop
push
iret
sub
fwait
imul
jo
cmp
mov
jge
repz
jl
nop
xchg
dec
mov
pop
into
push
call
jae
pop
ja
loop,pn
add
sbb
mov
jo
mov
dec
cmp
cltd
daa
fs
negb
mov
push
mov
inc
jge
notb
repnz
jl
sub
adc
or
sub
lock
mov
sub
pop
test
add
aam
mov
lea
xor
sti
push
fsubr
ficoms
xor
push
mov
or
or
addr16
mov
ret
popa
xchg
adc
jmp
outsl
pop
mov
lret
pop
and
sub
add
and
pop
int
aas
mov
pop
xor
jge
les
add
loopne
or
sub
inc
ja
into
ljmp
push
jp
cmc
out
mov
repz
cld
sbb
imul
test
pusha
push
add
sti
iret
push
cltd
push
scas
in
sub
xchg
test
ja
pusha
adc
mov
push
or
inc
mov
gs
cmp
int3
stos
lcall
mov
pop
into
pop
popa
ljmp
movsl
xlat
jno
int
jns
imull
jbe
dec
fildl
loope
push
cmp
add
call
cmpsl
mov
mov
aam
xor
psubw
dec
pop
push
stos
push
sbb
jno
sub
ss
lcall
jno
mov
and
xchg
pop
mov
enter
mov
lret
addb
jb
jno
cmp
es
mov
mov
push
xor
aas
jmp
mov
ret
pop
mov
lret
mov
mov
cmpsb
stos
mov
adc
repnz
cltd
pop
inc
sbb
xor
mov
arpl
pop
shll
sbb
jg
pop
shll
lds
test
mov
data16
fiadds
xor
inc
add
decl
mov
adc
sub
adcb
inc
ret
aas
fs
and
xchg
push
pop
inc
or
pop
mov
lds
push
les
scas
dec
pop
int3
std
popf
jnp
mov
out
sbb
paddusb
fs
int
sahf
ljmp
je
push
sarl
insl
pop
popf
out
adc
movsl
xor
test
scas
cmp
push
pop
movsl
pop
cmpsb
fs
xchg
shl
xchg
xchg
mov
or
inc
sbb
int
arpl
aam
int3
and
jb
popf
mov
add
cmpsb
jno
xor
cmpsl
xchg
jecxz
out
mov
or
lods
mov
lock
popf
dec
xor
lods
mov
adc
mov
lahf
aas
xor
dec
xchg
cld
out
negl
insb
std
pop
push
mov
clc
push
test
add
int
lock
cmp
xor
mov
jne
jno
imul
inc
shlb
inc
jne
mov
jmp
pavgb
push
push
mov
dec
pushl
mov
pop
add
mov
mov
sbb
cmpsb
repz
daa
jne
sub
mov
push
push
inc
les
mov
rcrl
imul
sbb
lock
clc
insb
lods
jecxz
mov
jbe
xchg
xor
xor
incb
dec
aad
imul
loop
lret
xor
sub
out
or
mov
sbb
pop
jmp
cmp
call
gs
cmpsb
fnstenv
aam
push
inc
pop
aas
pop
mov
mov
fisubl
pop
xchg
decb
xor
rcl
pop
sbb
jns
ret
test
nop
in
stos
cld
in
sub
mov
push
jge
les
or
push
sti
push
lods
std
push
adc
call
pop
adc
mov
ljmp
mov
sbb
repnz
and
mov
int3
cli
into
sub
pop
dec
push
clc
xor
or
dec
and
mov
add
add
loop
or
jo
mov
shll
in
mov
movsl
in
or
push
add
jns
mov
push
aaa
sub
popf
jbe
jle
pop
ds
xchg
andb
pop
mov
aaa
xchg
mov
mov
movsb
lahf
mov
test
ret
add
cmp
inc
cmpsb
pop
mov
dec
mov
xor
jae
jns
xor
pop
push
lret
cmp
mov
mov
or
scas
fwait
das
fisttpll
out
jne
dec
dec
sub
es
test
lock
outsl
rorl
pop
push
dec
shlb
scas
sub
jo
mov
popf
mov
std
cmc
out
mov
ret
mov
fsubl
pop
and
int
xor
xlat
test
loopne
lret
mov
pusha
jnp
test
inc
aam
adcl
sub
hlt
push
ror
orl
test
sub
je
pop
push
sbb
sti
es
mov
outsl
lods
bnd
add
sahf
fidivs
lret
push
and
mov
mov
pop
out
push
xorl
mov
ret
cmpsb
icebp
mov
out
sbb
xchg
cmp
into
mov
sarl
and
adc
or
sbb
decl
inc
scas
scas
add
push
sbb
mov
add
sbb
jge
xor
mov
ja
imul
jp
int3
loop
push
mov
push
xor
sub
jecxz
cmp
jne
inc
xor
jno
out
push
addr16
jnp
gs
call
sub
aas
sbb
or
mov
cmc
dec
loope
xlat
fucomip
pop
pop
xlat
fdivrl
imul
into
sahf
ja
cltd
jge
and
inc
adc
inc
lock
pop
push
jo
gs
jb
xor
cmp
push
or
ret
jmp
cmpsl
add
push
outsb
outsl
and
mov
pop
adc
shll
add
or
adc
mov
mov
dec
or
incb
cwtl
cs
rorb
sti
cli
test
xchg
je
mov
jg
frstor
fcmovnbe
outsb
js
xor
xchg
xchg
loop
inc
int
roll
test
sub
mov
sti
arpl
enter
dec
test
push
xor
xlat
mov
js
std
pop
sti
mov
loopne
cli
je
scas
sbb
or
outsl
sbbb
lret
dec
scas
scas
nop
jo
sarb
sub
negb
ret
sub
out
aaa
les
frstor
test
andl
out
and
into
into
cmp
mov
sub
dec
mov
push
push
fs
xchg
aas
popa
mov
cmpsb
stc
pop
setae
push
and
dec
sbb
sbb
call
mov
xchg
mul
mov
repnz
lahf
sub
mov
push
scas
enter
mov
adcl
pop
orl
int
sub
jl
cwtl
shr
mov
jne
faddp
ret
fists
cs
cli
pop
or
mov
pusha
add
xchg
call
mov
cltd
out
fstpl
push
in
adc
pop
push
iret
mov
mov
inc
bound
pop
std
icebp
jmp
in
push
jle
xchg
cltd
fildl
ret
rcrb
scas
xchg
cmc
lods
xchg
arpl
lahf
push
roll
cmp
bound
jp
test
xor
insb
and
push
xor
sub
cmp
pop
pop
inc
push
xor
xchg
fnstsw
adc
mov
sub
push
pop
notb
lret
push
push
cmovo
push
jl
lods
push
insb
ficoml
xchg
jg
out
jg
ds
or
arpl
add
inc
repz
cmpsl
ret
adc
inc
xor
xchg
mov
stos
mov
mov
xchg
xchg
xor
jne
jae
mov
and
pop
fisubrs
pmulhw
xor
mov
jge
in
mov
push
adc
pop
mov
loopne
outsb
dec
mov
ljmp
sbb
sbb
cli
jne
cld
adc
push
cld
mov
ficompl
cmp
mov
cmp
movsb
xor
lock
push
mov
push
cld
out
adc
loope
mov
cmp
xchg
adc
pop
jbe
add
add
data16
push
dec
fstps
test
lock
mov
data16
cs
fwait
loope
add
in
les
inc
mov
aas
test
xchg
add
ret
flds
and
jecxz
mov
adcl
jl
out
sahf
fwait
push
in
outsb
adc
add
add
out
sbb
push
and
in
cmc
xchg
fidivl
push
mov
orb
ret
push
lock
xchg
pop
hlt
pop
insl
dec
cmp
call
add
add
jmp
xchg
xchg
and
aam
js
cmp
push
cmp
xor
inc
jg
imul
mov
nop
or
mov
int3
or
push
aaa
loop
sbb
jmp
lret
lea
stos
nop
inc
xchg
test
int
sar
or
cwtl
ds
mov
jge
rcl
loopne
mov
add
push
inc
push
dec
adc
cmpsb
pop
mov
repnz
add
xor
icebp
mov
mov
jecxz
icebp
clc
mov
es
js
lock
add
sbb
lock
jno
sub
sahf
or
inc
jp
lret
sbb
sarb
xchg
sub
mov
xlat
fabs
cli
push
ficomps
stos
cmp
nop
adc
in
aad
lahf
cld
mov
stos
enter
mov
int3
inc
pop
inc
or
and
or
push
mov
scas
jno
add
rol
movsb
lcall
xor
dec
push
cmc
es
pop
cmpsb
jge
sbb
div
mov
push
cld
cli
es
push
gs
insl
movl
add
pop
mov
inc
and
fsub
or
test
xor
or
aas
arpl
mov
fisttps
sarl
xor
stc
cmpsl
and
scas
test
push
rcr
loopne
or
movsb
repz
jo
xlat
lods
iret
loope
xor
jo
sbb
mov
loope
or
iret
inc
jb
xor
lock
in
push
cmp
jl
daa
int3
movsb
mov
add
rcl
loopne
fiadds
cmpsb
or
lods
sbb
mov
test
mov
or
add
out
push
mov
aam
push
jb
cmpsb
jp
jne
js
in
mov
dec
mov
jbe
adc
adc
out
fnstcw
insb
movb
sub
mov
nop
cwtl
mov
idivb
lret
data16
mov
les
jnp
popa
lea
inc
in
push
adc
mov
dec
fdivrl
or
stos
jns
push
cmc
icebp
out
je
sbb
and
and
mov
lods
loopne
inc
icebp
out
or
pop
test
icebp
fdivrl
mov
jo
add
dec
ja
push
xchg
rcrl
das
int3
sbb
pop
subl
mov
jge
ret
mov
enter
test
xlat
je
lcall
pop
bound
jns
stc
scas
cwtl
sarl
cli
mov
xchg
cmp
aas
mov
add
or
push
xchg
in
arpl
out
ljmp
dec
je
and
fimull
rcl
stos
outsl
pop
aas
pusha
jecxz
out
repnz
add
xchg
pop
adc
loopne
mov
cwtl
or
inc
stos
or
add
lret
mov
andb
jg
cli
mov
cmp
mov
sahf
mov
pop
shrl
and
mov
jo
or
push
or
pop
stos
lret
mov
in
mov
cmp
dec
out
push
arpl
hlt
ds
cmp
mov
jle
fnsave
adc
repz
jnp
inc
sahf
mov
adc
adc
push
fisubrs
jmp
ret
adc
sub
mov
pop
outsb
incl
push
fsubr
inc
orb
mov
add
mov
mov
jmp
inc
xchg
dec
out
jge
push
dec
adc
insl
push
insb
in
in
lods
stos
xchg
cmc
xchg
das
jp
cmpsb
decl
xchg
lcall
xchg
adc
das
ss
out
loope
pop
sub
ja
lahf
ret
inc
and
xlat
adc
mov
repnz
jnp
lods
movsb
sub
mov
lret
add
dec
mulb
add
mov
loop
xchg
xor
xchg
push
arpl
pusha
iret
leave
fdiv
pop
sub
mov
out
addr16
out
mov
fldt
push
lahf
jb
mov
jge
xchg
loopne
push
and
aad
jo
in
sbb
outsb
mov
cmp
add
xchg
mov
mov
mov
jne
push
leave
cli
cmpsb
sub
or
xor
cmp
dec
out
shll
in
sub
and
popf
mov
insb
movsb
or
repz
or
adcb
outsb
inc
sti
sbb
cmp
cmp
inc
das
sub
enter
adc
stc
ja
sub
jb
imul
and
xlat
imul
inc
ds
mov
and
shrl
and
iret
sarb
sbb
sub
test
es
pop
rcrb
out
jmp
daa
jg
adc
lods
push
add
ror
mov
cmp
loope
mov
imul
aaa
adc
and
std
pusha
mov
int3
loope
test
lcall
sarl
sbb
jle
sub
xlat
movsb
pop
adc
nop
xor
inc
mov
std
aas
add
shlb
inc
mov
or
out
dec
cmpsb
outsl
es
scas
outsb
pop
lods
scas
shl
popa
popf
cli
mov
lds
out
jle
shl
xor
loopne
jmp
flds
mov
push
aaa
repnz
mov
je
stc
jb
mov
shll
cltd
das
cmp
or
insb
mov
push
and
push
cmp
fcoml
call
loopne
test
scas
mov
fnstsw
mov
imul
add
mov
in
es
lock
push
js
jge
xor
test
mov
or
or
pop
mov
push
pusha
negl
sbbl
sahf
mov
jle
xchg
pop
imul
mov
xchg
data16
adc
ss
outsl
fmuls
icebp
pop
testl
or
jl
push
icebp
lock
pop
push
jl
cs
or
cmpb
pop
jg
inc
data16
loope
sbb
ds
enter
push
sbb
add
scas
movsb
ret
lea
stc
rcrl
subb
lods
or
mov
push
push
aaa
in
mov
push
sub
out
inc
test
aas
enter
pop
aaa
das
mov
or
mov
mov
dec
stos
adc
lods
push
mov
or
jns
sahf
js
jns
push
daa
mov
enter
dec
jp
adc
mov
js
jno
pop
js
mov
sbb
and
lret
pop
pop
clc
cmp
fisubs
dec
nop
dec
mov
imul
jmp
lods
lcall
inc
outsb
test
mov
dec
or
or
mov
outsb
push
mov
adc
push
cli
add
push
cmp
lahf
dec
or
sbb
addr16
and
cmpl
out
inc
addr16
add
adc
jg
fmuls
inc
adc
mov
and
pop
push
mov
push
pop
sahf
test
stos
add
cld
xchg
sbb
loope
test
je
fs
arpl
in
add
rcrl
mov
out
xor
scas
inc
mov
mov
cli
gs
cs
aam
inc
rcrl
mov
jge
adc
sub
mov
mov
fs
jo
xchg
add
jne
notl
movsl
inc
sbb
into
sub
mov
cmp
sub
jo
sub
stos
mov
pop
ja
xchg
dec
aam
jns
gs
arpl
sbb
filds
dec
notb
push
and
inc
pop
mov
pop
add
push
in
lods
cmpsb
push
es
add
fcomp
inc
cltd
clc
lcall
shrl
adc
pop
mov
out
je
div
jmp
cmp
pop
cmp
sahf
pop
cmpsb
jno
sub
scas
movsb
rorb
stos
jle
arpl
add
repz
nop
jg
push
stc
fisttps
scas
mov
xchg
in
dec
lahf
imul
xchg
dec
fnstsw
out
push
dec
pop
imul
lds
ficoms
scas
or
mov
leave
xchg
je
xchg
mov
lds
cld
into
lock
inc
test
pop
ficomps
adc
outsb
sub
push
fisubrs
sbb
cli
lds
rol
in
jge
sahf
mov
mov
jecxz
xchg
addr16
imul
test
cmp
and
mov
inc
xor
rol
inc
divl
dec
call
xor
in
repz
or
xchg
ss
test
sahf
dec
adc
sbb
inc
fists
inc
leave
push
xor
cmp
hlt
mov
pushf
sub
lds
stos
xchg
adc
jl
jne
cld
hlt
lds
push
std
adc
adc
mov
imul
pop
pop
push
lea
cmp
mov
inc
xor
repz
xor
or
arpl
push
std
jmp
mov
add
xor
push
mov
inc
pop
mov
dec
idivl
jo
ret
iret
add
mov
ret
mov
jnp
enter
addb
rcl
inc
pop
inc
cltd
cmc
out
dec
test
mov
mov
out
out
imul
jbe
scas
xor
je
adc
test
adc
je
bound
mov
imulb
jp
add
cwtl
sub
cs
cmp
arpl
rol
int
adc
dec
in
icebp
es
enter
add
inc
and
cmp
repnz
cmp
mov
jo
mov
loope
stos
imul
sbb
jle
sbb
mov
xor
inc
pop
lods
sub
inc
jnp
push
lds
gs
mov
and
push
cmp
xor
push
and
cmp
gs
inc
pop
push
aam
pop
pop
xchg
jo
sbb
lods
lret
inc
mov
mov
test
xor
push
jmp
mov
mov
inc
ret
add
dec
mov
add
sbb
mov
lret
iret
fstl
int3
inc
out
sub
popl
ret
cmp
cwtl
xor
cmp
cmp
in
fidivrl
mov
mov
jp
mov
mov
xchg
sub
lret
repz
jne
xor
outsl
adc
jbe
fsubrp
and
inc
and
cmp
pushw
cmpsl
sti
cmpsb
fsubs
repz
in
out
mov
lret
xor
out
rolb
les
aad
or
mov
cltd
dec
push
jbe
mov
mov
in
mov
gs
mov
iret
or
imul
ljmp
and
aaa
cmp
pop
inc
sarb
push
out
pop
shrl
push
btr
mov
or
fisttpll
push
inc
ds
fisttpll
stc
outsl
lods
inc
mov
nop
mov
xchg
lods
fwait
test
ljmp
arpl
fwait
cmpsl
je
dec
jge
pop
loop
push
in
sbb
test
subb
sub
jg
fsubs
fsubrp
testb
adc
pop
mov
cmp
mov
mov
sub
pop
and
fiaddl
cmp
lods
mov
push
test
ja
cmp
lods
dec
gs
pop
xchg
xchg
clc
movsl
arpl
cmp
dec
sahf
rcl
ds
test
push
sub
shl
xor
loope
dec
jmp
popa
aaa
cmp
pusha
add
push
stos
imul
xorl
enter
stos
sub
std
dec
pop
idivl
xchg
mov
into
mov
inc
in
xchg
shrb
sub
mov
cld
xchg
sub
sbb
and
sbb
cmpsl
cmpsl
lahf
mov
or
lea
mov
add
lcall
orl
xchg
mov
into
inc
fsubl
lock
cmpsl
bound
aad
inc
neg
lret
sahf
or
fsubrp
sub
rcl
movsb
fs
repz
pop
dec
addl
lcall
int3
fidivrl
dec
and
rorb
adc
mov
imul
mov
repz
jne
fmuls
inc
xchg
js
aam
mov
repnz
cmp
push
lds
call
leave
sbb
and
cmp
or
or
sbb
add
outsl
pop
sbb
dec
push
mov
rolb
repnz
cltd
add
repnz
jno
lea
push
das
xor
jnp
cld
out
mov
pop
sbb
ds
mov
in
cmp
test
aaa
divl
out
data16
les
out
fnstcw
sarl
ljmp
lods
pushf
fisttps
xor
push
popa
test
lods
add
pop
lock
cmpsb
ljmp
xor
aaa
mov
leave
jmp
das
pop
mov
scas
out
lret
mov
movsl
sarl
push
movsb
addl
mov
ja
jg
hlt
ljmp
pop
test
pop
push
es
movsl
pop
jns
pop
adc
sub
icebp
jae
push
xor
push
inc
push
repnz
xor
call
jp
out
mov
call
mov
mov
test
je
jno
lock
inc
mov
mov
jo
xchg
fpatan
xor
outsl
push
test
testl
repz
inc
xchg
lret
or
ljmp
gs
jbe
lahf
cld
notb
xor
rorb
and
daa
gs
bound
xchg
lods
xor
or
dec
push
je
add
xchg
mov
xor
in
inc
lahf
cmpsb
jno
mov
js
insl
jge
or
fwait
sbb
push
andb
pushf
xor
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
xchg
jae
jp
sbb
jp
je
push
inc
enter
movsb
dec
inc
pop
push
cmp
ror
add
gs
inc
aad
rorb
push
jp
and
iret
in
in
adc
dec
and
rcrb
notb
test
mov
fs
lds
idivl
mov
dec
mov
adc
mov
and
sahf
fstpt
sub
scas
imull
dec
hlt
andl
mov
cwtl
jmp
jecxz
je
cs
cmpsb
xor
mov
dec
dec
gs
jl
jno
jge
inc
lret
push
and
mov
in
inc
xor
insb
mov
ja
push
jne
xor
sbb
or
jl
jge
in
mov
mov
jp
es
mov
push
push
jne
or
mov
pop
fsub
push
push
lcall
push
inc
pushf
std
lcall
push
pop
jp
sbb
pop
add
insb
sub
xchg
cli
ret
insl
mov
mov
outsl
push
mov
cmp
lahf
mov
inc
out
push
aad
pop
or
loop
xor
aaa
push
lds
cltd
icebp
add
mov
insb
xchg
push
mov
xor
xor
je
icebp
adc
inc
pushf
cmpsb
xchg
sub
pushf
add
ss
push
and
jo
mov
sahf
pop
jmp
shr
out
pop
mov
je
xchg
mov
jge
xchg
mov
jl
push
mov
jle
mov
pop
xchg
call
xchg
ret
hlt
jae
adc
sub
ss
push
sub
dec
jne
sub
adc
xchg
jl
repnz
ja
adc
clc
roll
dec
xchg
jb
int3
and
mov
jle
fsubl
push
movd
pop
adc
push
mov
rcr
mov
xchg
in
mov
ja
ret
sbb
mov
mov
stos
push
pop
cwtl
jnp
stc
inc
sbb
rorl
adc
test
xchg
adc
test
movsl
fdivrl
mov
loopne
push
shll
loopne
enter
pop
insb
loopne
sahf
mov
fwait
push
adc
adc
jns
and
enter
dec
sbb
sbb
enter
mulb
shrl
fwait
jecxz
push
pop
loope
jg
fwait
ljmp
scas
imull
sbb
jecxz
std
xchg
jae
jg
leave
mov
xchg
cld
pop
movsb
cmp
xor
mov
jne
sbbl
pushf
push
adc
cmp
das
pop
push
mov
pop
out
ja
jp
sbb
and
pop
sahf
pop
in
scas
scas
sbb
lds
jo
push
or
out
in
sbb
push
mov
dec
into
nop
xor
sbb
test
out
push
fcoms
imul
lea
loop
jp
fsts
sahf
ds
jmp
mov
cs
out
popa
mov
push
clc
jbe
sub
mov
mov
push
insl
sbb
adc
add
loope
ljmp
pusha
in
das
cmpsl
jo
cmp
sub
jo
das
bound
ja
push
loop
dec
mov
jp
dec
aam
mov
repnz
jbe
mov
aas
cltd
adc
mov
loopne
push
xor
pop
ret
xchg
movsb
jb
insb
aam
stos
ret
xchg
jmp
jl
pop
pmullw
mov
cmpsb
lcall
jns
add
xor
rcr
rcrw
pop
adc
mov
cmp
sbb
aaa
cmp
pop
pop
lods
lods
icebp
mov
jnp
enter
mov
imul
or
add
pop
mov
push
jmp
or
jbe
xchg
aad
mov
sub
out
leave
push
and
pusha
cmp
addr16
mov
cmp
cmpsb
out
or
mov
rol
sbb
fistpll
and
aam
push
or
and
ret
cmp
mov
dec
dec
mov
cmpsb
jb
cmp
lds
sbb
imul
xchg
jg
mov
int
nop
mov
aam
lock
movsl
jg
data16
pop
mov
xchg
mov
js
adc
in
and
subb
dec
loope
mov
lret
test
adc
push
scas
cmp
mov
adc
mov
addr16
jmp
mov
arpl
jmp
lcall
ss
adcl
lock
lahf
outsl
rcrl
clc
pop
push
hlt
addr16
push
mov
add
iret
iret
cmp
ljmp
cmp
cs
clc
filds
sbb
inc
mov
pop
in
add
fdivr
aam
xor
and
loopne
movsb
imul
pop
pop
orb
cmp
jb
aas
push
pop
mov
sarb
adc
popa
xor
sub
push
pop
and
mov
adc
pushf
out
push
xchg
mov
std
push
fstpt
les
rolb
fisttps
cld
xchg
push
scas
popa
loopne
aad
iret
scas
inc
jg
add
push
mov
stc
ret
test
lret
dec
cmpb
fnsave
jb
or
shlb
loop
or
sar
xchg
testl
push
xchg
add
and
fwait
cmp
outsl
or
push
sahf
lds
ss
lret
mov
lods
mov
cwtl
adc
mov
xor
add
nop
addl
pop
cmpl
push
xchg
pop
push
sbb
leave
test
lds
jmp
cmp
out
mov
dec
pop
mov
push
popf
fisubrl
adc
sbb
rcrl
rclb
mov
bswap
push
sahf
gs
ficoms
cli
sbb
xchg
in
or
scas
mov
add
jno
iret
adc
ret
or
arpl
dec
jge
fs
lret
inc
jg
pop
mov
add
xor
testb
pslld
int3
lcall
xchg
xchg
xchg
push
xchg
cmp
sahf
sub
dec
pop
xchg
adc
repz
fists
add
jnp
test
movsb
mov
inc
rcll
inc
cmc
xchg
xchg
je
jne
outsb
sbb
jge
pusha
inc
int
cmp
pop
lods
stos
fbstp
inc
scas
faddl
add
dec
xchg
inc
lods
or
mov
xchg
lods
dec
inc
mov
add
int
fdivrs
lcall
addb
mov
popf
push
push
in
push
jp
imull
push
pushf
mov
push
pop
fldt
push
push
pop
push
lock
inc
in
push
iret
dec
int3
jmp
or
xor
int3
sub
mov
ss
inc
cmpb
add
or
iret
xor
and
in
xor
rorl
in
sub
loopne
mov
adc
mov
arpl
ja
les
into
lcall
mov
aam
movsl
pop
shrb
pop
and
loopne
and
push
fs
sub
xor
aam
xor
pop
sbb
cmp
cmp
addr16
mov
jle
mov
or
mov
stc
leave
jmp
cmp
sti
mov
mov
add
pop
and
push
mov
xor
inc
aad
jp
adc
je
gs
sub
push
pop
mov
push
push
pushf
insb
aad
fdivrs
test
int
mov
aam
dec
lods
mov
je
test
repz
and
addr16
mov
into
or
arpl
gs
cmc
movsb
inc
imul
idiv
int
adc
cmp
imul
jl
xor
inc
adc
je
hlt
fidivrs
aad
insb
and
push
xor
sub
mov
add
imul
xchg
addr16
into
data16
dec
xchg
jne
in
ror
or
and
ficoms
cli
aam
xchg
pop
mov
sub
lock
push
ds
xchg
sub
jnp
stos
movsb
xchg
test
sub
push
xchg
mov
sub
mov
or
adc
adc
push
adc
and
xor
call
jns
int3
push
inc
in
gs
sub
xorb
or
mov
jns
adc
outsl
ljmp
cmp
sub
pop
xlat
ja
or
scas
pop
mov
dec
dec
leave
rcr
xorb
gs
shlb
ss
fbstp
popf
lock
pop
push
sbb
cmp
jns
mov
mov
lds
gs
adc
aad
cmp
and
pushf
stos
inc
ret
xchg
adc
in
cmp
xchg
jns
and
or
adc
jb
pop
jle
scas
mov
shl
mov
sbb
or
icebp
mov
out
cld
test
sti
mov
pop
xchg
jl
dec
xor
or
mov
repnz
adc
adc
jmp
mov
cmp
in
dec
mov
sbb
lea
adc
add
into
xchg
out
fadd
xchg
dec
dec
push
pusha
jbe
sbb
sbb
dec
adc
pop
sub
mov
pop
aam
jecxz
inc
in
cmpsb
lods
inc
xchg
mov
fadd
inc
push
les
push
ljmp
vpmulhw
insl
insb
mov
fnsave
mov
mov
xchg
imul
cmp
rcrl
jecxz
clc
mov
orl
dec
sub
popf
pop
mov
xchg
xor
mov
or
stos
ss
cmc
mov
lds
test
cld
hlt
sbb
and
or
out
outsb
push
pop
loope
movsb
pop
mov
jl
sbb
aad
push
fisubrl
xchg
insl
out
das
lods
pop
sub
arpl
lock
ret
cmp
dec
inc
pop
call
lods
lods
ret
imul
cmp
sbb
lods
inc
push
push
or
mov
adcl
arpl
stos
jbe
mov
lods
popa
nop
call
insl
bound
and
dec
daa
pop
xor
ret
rolb
dec
sbb
or
cmp
ret
shll
xchg
imul
dec
add
sub
jmp
cli
clc
fwait
xchg
fimull
daa
push
sbb
pusha
fsubl
hlt
dec
add
and
mov
mov
stc
push
shll
push
xor
and
imul
daa
into
imul
mov
iret
jl
in
push
mov
mov
cmpsl
sbb
jle
xor
push
lret
and
pop
pop
push
push
jmp
clc
push
mov
inc
jbe
ljmp
pop
sahf
rcl
stos
out
sahf
mov
stos
stos
fwait
int
iret
inc
dec
sub
pop
movsl
sbb
add
dec
cmp
xchg
add
adc
cmpl
add
imul
test
std
xchg
mov
sub
add
jbe
stos
or
and
sub
inc
sahf
xor
je
idivl
shrl
sahf
jb
xor
xchg
movsl
mov
and
cmc
sub
mov
pop
ret
push
xor
and
andl
jb
inc
fcmovu
xchg
dec
sahf
push
or
mov
pop
jb
push
adcl
sahf
mov
fidivl
roll
inc
mov
adc
jmp
mov
fwait
stos
decb
pop
cmpsl
ss
test
dec
sub
cmc
inc
sub
rclb
push
leave
mov
pop
pop
enter
or
dec
mov
roll
arpl
inc
imul
add
ret
mov
push
mov
dec
ret
cmp
int
xor
inc
test
pop
cmpsb
lock
mov
rcrl
pusha
fdivrs
popf
ror
out
test
pop
mov
xor
mov
jg
pop
outsb
pop
int3
push
pop
into
popf
jo
inc
sub
imul
cs
in
jecxz
and
pop
shlb
push
js
or
jmp
sbb
je
jb
ds
jnp
and
aas
push
stc
neg
arpl
jbe,pt
mov
xchg
aas
loop
mov
cltd
mov
pushf
sub
push
popf
inc
lods
cmpsl
jno
mov
sahf
les
fildll
fwait
xchg
xchg
mov
ljmp
push
js
xchg
fsubrs
jmp
dec
pop
dec
sti
jne
xchg
movsb
mov
dec
adc
ret
mov
jae
cmp
adc
test
add
sub
push
aas
pop
pop
ja
test
dec
filds
shl
xchg
enter
cmc
mov
cmp
inc
bound
jp
hlt
imul
adc
jle
push
mov
repz
mov
enter
call
lret
xor
jbe
je
inc
popa
rcrl
rclb
xor
popf
lahf
pop
sub
xchg
fbld
stos
jns
pop
popa
jb
jle
leave
or
fdivrp
jbe
les
push
gs
mov
sub
pop
fidivrs
sub
sbb
mov
es
and
cmpsb
mov
xlat
and
and
nop
and
and
mov
icebp
xchg
addr16
sbb
push
enter
je
adc
and
fisubl
jp
leave
lods
arpl
add
lret
cmpsb
cs
cmc
cmp
sbb
push
ficoms
jmp
adc
ret
out
fsubs
push
mov
inc
in
pop
divb
outsb
add
add
or
or
push
ss
inc
mov
inc
sub
movsl
int3
fs
mov
adc
and
mov
mov
mov
gs
xor
jnp
push
jne
lods
pop
lods
call
add
mov
ret
out
or
sub
outsb
xor
push
pusha
xchg
push
movb
icebp
lock
leave
xchg
push
ja
aaa
into
and
jb
pop
out
ljmp
stos
xlat
cwtl
and
pop
enter
add
sbb
in
jecxz
negb
xor
adcl
sbb
sbb
jmp
or
repnz
fidivs
les
mov
jb
negl
dec
loope
insb
adc
push
cwtl
pop
iret
shrb
pop
js
mov
add
adc
lds
or
arpl
enter
xchg
notb
dec
mov
idivb
std
loop
testl
and
mov
in
mov
pop
cmpb
int3
pop
ss
int
sub
push
insb
push
repz
xchg
mov
sub
addr16
rcl
int3
adc
xor
in
pop
and
sub
mov
or
scas
and
cmp
pop
push
cmp
dec
sub
sti
mov
mov
nop
dec
or
testb
mov
xor
pop
mov
movsl
jmp
in
sbb
lds
das
sub
lret
sarb
cmpsl
outsl
sbb
inc
stc
add
lock
push
or
xor
sbb
sub
adc
in
out
stos
push
gs
mulb
push
mov
inc
daa
cmp
aam
lcall
inc
jmp
push
repz
and
cmp
int
adc
push
sbb
outsb
add
ficomps
push
sub
inc
aaa
pop
fs
pop
cli
push
in
sbb
jmp
xor
cmp
vpsrad
push
mov
dec
pop
ret
dec
neg
mov
sahf
push
test
inc
pop
mov
ret
sub
idivb
movsb
daa
dec
jno
popa
sbb
and
cld
pop
mov
inc
and
or
add
test
addr16
stos
inc
dec
xchg
mov
ret
xlat
data16
jp
ljmp
leave
xlat
inc
jmp
xor
movsl
dec
pop
lahf
xor
mov
pop
xchg
push
push
ja
daa
cmpsl
stc
mov
loop
loop
into
movsl
jo
notl
fwait
xorl
push
add
repz
es
test
xlat
mov
mov
test
xchg
sbb
sarb
sub
cmc
pop
adc
addr16
fs
stos
pop
mov
push
hlt
int
dec
nop
xor
xchg
cmpsb
push
pop
xchg
jnp
inc
out
je
nop
push
out
and
jns
dec
xor
scas
xchg
rorl
faddl
daa
push
mov
into
inc
rolb
adc
ja
fcmovbe
xchg
scas
aam
push
enter
xchg
sbb
cltd
mov
ds
test
xor
daa
adc
js
pop
and
pop
pop
sub
mov
push
ds
inc
test
mov
fistpll
lahf
lds
or
in
inc
dec
ljmp
jge
pop
aad
movsb
outsb
sbb
jg
sbb
imul
ror
or
xchg
xor
dec
xchg
xlat
push
out
je
lcall
out
sbb
mov
mov
jl
jp
push
pop
rcrl
es
subb
loopne
or
adc
cs
add
jecxz
mov
daa
pop
mov
mov
push
adc
pop
xchg
scas
lds
mov
push
popa
in
adc
repz
cmp
popf
aam
cmp
ficomps
xchg
mov
into
repz
lea
hlt
ss
addr16
adc
lods
xor
push
lret
ret
punpcklbw
jo
iret
jo
lcall
xchg
fstpt
aad
and
push
add
das
std
int3
ljmp
cmp
cmpsl
dec
jnp
das
int3
loope
dec
sub
add
mov
imul
out
fmull
adc
movsb
mov
pop
js
aaa
imul
test
sbbb
mov
add
test
jmp
or
loop
jle
les
jo
ret
jmp
rcr
int3
scas
inc
xor
mov
cmp
pop
xchg
stos
inc
rolb
addb
add
iret
aam
out
sub
and
cpuid
loopne
inc
mov
cltd
pop
call
cltd
test
inc
mov
aam
add
xchg
rclb
push
jecxz
nop
dec
mov
xor
daa
clc
in
imul
xor
mov
out
mov
dec
repz
and
jg
call
popf
outsl
inc
sub
fisttpll
adc
xchg
mov
inc
push
mov
mov
add
sahf
pslld
call
test
imul
and
mul
stc
and
jne
subl
fstps
sbb
lods
mov
popf
inc
ss
enter
sub
jecxz
fnstsw
mov
mov
pop
mulb
jp
ljmp
int3
jl
mov
ja
ss
jnp
sub
aad
pop
sbb
sahf
cmp
movsl
jo
dec
xchg
sub
stos
pop
in
push
repz
pushl
fldcw
bound
iret
cmpsb
add
or
arpl
icebp
lods
sar
aas
fidivs
dec
mov
mov
rcr
sbb
lret
and
dec
ret
push
mov
and
add
shll
mov
or
rcpps
xchg
nop
shll
imul
lret
and
out
out
cmp
dec
mov
in
mov
mov
xor
xchg
js
inc
push
aam
xor
fidivl
xlat
iret
jmp
inc
fcmovnbe
inc
setns
lcall
mov
adc
mov
les
push
push
cli
sbb
test
xlat
jb
int3
and
int
dec
jg
shlb
jno
enter
inc
sbb
loope
adc
cltd
add
bound
adc
lahf
add
repz
mov
idivb
lds
icebp
lock
push
fs
mov
outsb
divl
idivl
mov
lods
dec
or
shlb
imul
push
cld
addr16
xchg
mov
or
inc
sar
xchg
loope
rcll
gs
out
aad
cmpsb
xchg
subl
jmp
jne
in
fcomps
imul
jg
cltd
pop
fisttpll
dec
fistpll
mov
lcall
dec
push
out
imul
int
jne
loope
dec
into
movsb
cmc
jge
jbe
push
jo
arpl
popa
mov
daa
dec
pop
jb
pushf
test
fadds
pushf
imul
sbb
pop
dec
sbb
sub
jmp
cmp
jecxz
sub
in
pop
mov
inc
mov
push
mov
loopne
fsubs
adc
ss
mov
jle
gs
sti
les
nop
sti
nop
inc
cmpsl
outsb
mov
push
mov
mov
xlat
xchg
sub
test
jno
rcl
fnstenv
fadd
adc
pop
pop
mov
sub
aaa
sub
insb
xchg
dec
cmp
jmp
movsb
fs
idivl
mov
cmpsb
jno
mov
test
stc
f2xm1
add
sub
inc
out
sub
jns
mov
aad
sbb
hlt
add
or
pusha
je
fidivs
mov
mov
jno
pop
outsb
scas
sub
mov
lret
mov
mov
roll
cmpsb
fildll
in
mov
jmp
dec
mov
inc
fwait
test
rcr
icebp
loopne
fstpl
in
push
arpl
jb
adc
mov
in
sti
inc
insb
cld
push
fucomi
sub
scas
test
mov
in
sub
mov
ds
push
and
lds
test
push
pop
repz
pop
lahf
jmp
xchg
fwait
xor
push
and
lea
sbb
je
and
xchg
sbb
rcrl
push
mov
mov
add
mov
and
stos
lret
daa
mov
jb
fisubrs
ss
das
cmc
mov
leave
add
pop
mov
and
ss
stos
mov
call
lret
fld
lock
clc
adc
jae
leave
cmpb
cld
arpl
add
shr
dec
mov
sub
or
leave
cmpsl
dec
jp
jno
cmpl
xor
lock
jb
sub
inc
xor
outsl
push
in
loope
pop
push
or
and
jb
push
repz
gs
pop
xor
inc
and
inc
sbbl
aaa
mov
cli
xchg
or
sbb
jb
pop
pusha
imul
mov
adc
cltd
jle
addr16
fdivrl
cmpsl
sbb
sbb
pop
jb
mov
in
out
pop
test
aas
in
movsb
and
xchg
xchg
xchg
mov
pushf
add
ja
cmpsl
mov
divl
dec
int
cmp
dec
pcmpeqb
rcrl
stos
push
cmc
mulb
fcomp
shll
dec
fisubrs
xchg
dec
jns
push
push
and
cmp
imul
popa
adc
mov
test
in
or
cmpl
adc
xlat
icebp
jg
out
jnp
add
adc
adc
stos
pop
mov
mov
cld
in
ret
pop
jl
nop
loope
std
cmc
xchg
pop
add
les
pop
enter
inc
lods
xchg
adc
push
and
xchg
fsts
loop
dec
inc
pop
push
or
frstor
iret
nop
daa
mov
cwtl
jmp
aaa
cmp
cmp
clc
or
nop
aad
sbbl
add
pop
xchg
icebp
scas
incb
sub
sbb
xchg
fcomps
and
adcl
mov
jmp
out
sbb
mov
jp
cwtl
mov
or
mov
jecxz
in
adc
xchg
ret
iret
xor
sub
out
stos
lcall
adc
mov
test
xor
cmp
xor
imul
dec
mov
mov
loop
cmc
cli
pop
les
in
dec
add
std
jbe
adc
or
or
ds
adc
popf
int
jge
mov
inc
popa
out
sbb
ds
push
hlt
push
ja
lds
sahf
shlb
daa
cwtl
xchg
xor
cs
fdivrl
inc
aaa
lea
jmp
jns
push
jnp
enter
xchg
adc
push
xor
ds
xor
sbb
stc
aaa
xor
pop
dec
adc
mov
loope
imul
fdivs
stc
mov
sbb
sub
push
sub
mov
pop
jmp
cmp
lahf
mov
xchg
pusha
push
aas
aad
sbb
iret
pop
outsl
pop
cwtl
cli
cmpsl
and
mov
cmpsb
sub
sahf
dec
and
add
cld
mov
push
push
inc
push
dec
into
lea
test
fdivl
jl
adc
pusha
sahf
je
push
jns
int
inc
mov
sbb
das
and
cmp
mov
fs
cmp
dec
xchg
and
stos
push
outsb
mov
insl
push
je
pop
sarb
jge
lret
stos
jecxz
jb
movsb
push
ret
jne
testl
stc
test
xor
cmp
rcrl
and
push
in
jp
inc
mov
pop
scas
sub
jns
repnz
mov
fnstenv
outsl
int3
scas
js
and
ja
into
mov
cmc
pop
sub
or
mov
stc
dec
inc
fnstcw
fwait
and
ja
lret
mov
dec
sti
adc
and
mov
cmp
mov
hlt
jp
xchg
fs
cmc
cmp
aaa
add
out
mov
sub
xchg
fnsave
cli
lret
cmp
inc
gs
clc
loope
push
sbb
aaa
loope
adc
fcompl
fisubrs
js
movsb
push
fimull
stos
out
pop
out
mov
ror
je
test
mov
pop
push
std
dec
std
xchg
dec
shrl
leave
rolb
and
jge
lcall
cli
pushfw
pop
cmp
xchg
push
mov
push
fs
xor
push
mov
sahf
and
loope
push
mov
adc
daa
fmuls
and
adc
nop
inc
in
push
daa
adc
push
xlat
addr16
subl
cld
dec
pop
xlat
jp
mov
nop
sub
es
mov
or
aaa
rcll
loope
cltd
cli
cmpsb
popf
add
xchg
or
mov
pop
mov
pop
cld
sbb
ds
mov
arpl
cli
test
repnz
lods
jmp
aam
adc
iret
add
inc
std
fisttps
out
pop
cmp
sbb
adc
push
mov
pop
outsb
in
xor
jmp
dec
or
ret
inc
loop
ficoms
push
stc
mov
rclb
sub
stc
push
imul
inc
mov
nop
and
stos
sbb
popa
adc
mov
subb
jp
addr16
inc
sbb
or
adc
sbbl
xchg
inc
les
shl
mov
adc
cmp
xchg
mov
inc
imul
pop
and
sbb
jecxz
dec
cmpl
jmp
or
outsb
or
mov
inc
mov
mov
dec
mov
mov
xchg
and
sbb
imul
pop
scas
jmp
leave
sub
xchg
sub
jg
out
daa
outsb
out
mov
jne
arpl
mov
dec
dec
aad
inc
mov
repz
sub
mov
pop
idivb
leave
xchg
cmp
jl
ficoms
cld
out
sarl
sar
adc
cmpsb
push
push
jecxz
push
jecxz
incl
jne
and
dec
or
loope
cld
repnz
test
inc
jg
inc
scas
mov
pop
sahf
lret
cmp
sbb
sbb
mov
sbb
sbb
mov
jb
mov
sbb
sub
stc
mov
push
push
pop
std
push
add
dec
jl
add
xchg
add
out
loopne
sbb
pop
clc
das
mov
push
push
lea
arpl
fsts
loopne
jbe
ret
mov
pop
xchg
outsb
fs
inc
mov
lock
cmp
je
or
mov
xor
loop
dec
and
jmp
icebp
cltd
fiadds
popa
add
out
cltd
cmp
insl
addr16
data16
and
xor
mov
add
adcb
stos
or
push
in
push
pop
pop
inc
out
imul
fildll
cmp
mov
lret
repnz
sahf
pop
add
nop
mov
loop
mov
cmp
stos
cli
and
and
pop
fcomps
in
jae
int3
loopne
arpl
in
push
jl
mov
lret
xchg
inc
dec
nop
ret
out
adc
daa
xchg
or
dec
sub
leave
fcoms
push
xor
jns
in
mov
in
pop
sti
cwtl
xchg
pusha
push
adcl
push
push
imul
push
xchg
pop
push
add
xor
jbe
icebp
xlat
je
or
adc
inc
fwait
inc
xor
out
iret
cmpsb
in
jge
sbb
inc
stc
push
test
out
push
ret
inc
rcll
subb
loop
jp
mov
iret
adcb
sbb
stc
sbb
cld
jb
mov
dec
mov
cld
mov
mov
dec
inc
mov
mov
sbb
xchg
push
xchg
loope
inc
push
out
cld
pusha
mov
cmp
sbb
mov
popa
stos
push
leave
and
xchg
insb
xor
pop
pop
adc
mov
loope
jp
push
dec
mov
inc
jae
pop
mov
ljmp
test
mov
dec
and
inc
sub
test
jmp
sub
jno
and
add
xchg
in
imul
outsb
xor
adc
pop
sub
mov
jmp
mov
sti
lock
mov
daa
sbb
sub
dec
leave
fbstp
sbb
and
inc
inc
pop
jecxz
mov
adc
sbb
sub
out
ljmp
mov
add
rclb
sbb
cli
mov
mov
mov
cmpsl
mov
dec
mov
sub
dec
nop
or
enter
pop
push
jecxz
hlt
pop
jae
jb
xchg
repz
lret
dec
sbb
dec
pop
mov
shrb
mov
mov
sbb
aas
push
sub
int
pop
mov
mov
mov
cmp
adc
in
in
stos
mov
sar
bound
repnz
nop
sahf
fcompl
lcall
jl
adc
add
subl
ror
int3
je
cli
pop
mov
cmp
data16
and
add
xchg
mov
add
leave
jl
or
dec
sub
repnz
or
mov
hlt
add
inc
cmp
out
in
push
add
mov
test
pushf
mov
inc
mov
sbb
hlt
jl
mov
rorb
pop
pop
inc
xorl
xchg
test
jecxz
sahf
pop
and
cmpsb
push
dec
repnz
bound
pop
lods
fwait
stos
mov
mov
inc
push
adc
arpl
loope
hlt
jno
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
imul
pop
jp
imul
add
xor
xchg
pop
mov
mov
imul
frstor
sarb
jl
sbb
fnstsw
adc
cmpsb
in
shl
scas
insl
mov
daa
push
adc
test
sbb
sahf
sub
adc
lcall
dec
xor
scas
loopne
repnz
icebp
cmpsl
push
mov
dec
sahf
dec
mov
mov
jmp
mov
sub
adc
mov
das
push
add
stc
scas
mov
dec
out
out
mov
iret
movsb
xchg
ds
cli
and
aaa
add
jo
hlt
inc
cmp
aaa
adc
setle
jb
lods
out
cmpsl
lcall
cli
jb
cld
xchg
aad
jbe
pop
outsl
rcrb
add
bound
fistps
push
std
pop
sti
xor
and
imul
in
cwtl
adc
shrb
movsl
add
mov
decb
sub
lret
aas
aaa
xchg
test
jmp
shll
xchg
add
scas
lret
decb
ret
mov
hlt
mov
gs
xor
jg
scas
jns
pop
dec
jl
sub
adc
pop
addr16
cmp
sti
div
ljmp
push
xchg
adc
les
mov
insb
repz
add
arpl
inc
sub
xor
rolb
adc
pshufw
decl
aad
daa
xlat
jecxz
add
adc
aaa
mov
jl
insb
cmpsb
pop
mov
xor
sub
jne
insl
stos
and
and
mov
enter
mov
inc
pop
adc
cmp
dec
movsb
mov
xchg
xchg
jmp
je
cmp
in
adc
cmp
test
dec
ret
out
imul
aas
cld
repz
adc
aam
std
and
xor
lcall
jae
pop
ja
push
push
and
cmpsl
scas
popa
leave
filds
ret
out
scas
mov
pop
cmp
ret
or
add
jns
js
push
ds
jmp
outsl
loop
in
addr16
int3
stos
in
imul
inc
out
mov
sub
mov
iret
mov
call
mov
lods
mov
pop
and
push
pop
movsl
imul
ss
xchg
add
mov
aas
pop
inc
hlt
xchg
jg
add
cmp
mov
std
aad
and
ret
in
icebp
fldt
or
fisttpll
aas
out
push
cmp
jle
xor
mov
lods
sub
jns
adc
nop
push
std
test
pop
imul
cld
out
mov
int3
arpl
hlt
mov
out
cmp
adc
lret
mov
jns
mov
dec
aad
andb
xchg
out
decb
fwait
dec
lret
fstl
adc
xchg
pop
mov
xor
inc
push
and
loope
cmp
mov
push
mov
jne
xlat
cmp
mov
adc
push
and
pushf
fcompl
jo
xor
fcompl
or
fsubrl
fmuls
push
pushf
xchg
cmp
inc
jl
cmc
mov
jle
xor
dec
inc
test
xchg
xor
js
hlt
jle
loopne
rclb
jno
out
adc
gs
pop
cmp
hlt
and
cmp
pop
fcompl
cmpsb
sbb
add
mov
sbb
call
mov
cwtl
xchg
or
popf
xchg
jno
faddl
je
cmp
loop
mov
out
aam
outsb
sbb
sub
sbb
xor
pop
xchg
sbb
pop
xchg
rolb
fcomps
and
push
mov
cmc
inc
jecxz
pop
sti
ja
insb
jns
fcoml
mov
add
add
mov
pop
pop
fsubr
xor
pusha
fldt
fdivp
sub
mov
jae
test
mov
out
push
lock
push
ret
pushf
lret
stc
pusha
sub
pop
adc
mov
or
push
loope
pop
icebp
pusha
xor
jae
sub
popf
lds
push
dec
xor
cwtl
addr16
dec
lea
sbb
pop
test
js
dec
out
add
xchg
dec
lcall
iret
enter
sub
push
cmp
int
adc
in
add
dec
sub
lods
ljmp
shlb
mov
int3
stc
icebp
clc
xor
xor
push
cmpsl
pop
mov
sbb
daa
jge
pusha
pop
mov
loopne
pop
sub
cmpsl
enter
cmpsb
mov
add
inc
inc
and
adc
mov
test
pop
gs
fmul
nop
scas
dec
or
insl
or
jae
sahf
push
inc
and
mov
cmpsb
mov
pop
cmp
int
adc
xor
cwtl
rcrl
in
add
sbb
arpl
fsubl
hlt
sub
xor
stos
push
fwait
dec
in
xor
or
and
xchg
add
dec
inc
dec
mov
lcall
rcrb
lods
jb
xchg
cltd
xchg
pop
shlb
or
popa
xchg
inc
cmc
aaa
std
out
pop
jge
mov
ljmp
imul
es
inc
cmp
call
xlat
mov
in
sbb
out
and
sub
cli
adc
or
jmp
int
mov
and
jb
sub
fwait
inc
dec
sub
popf
shrb
repz
js
mov
lods
icebp
mov
popf
push
mov
nop
fcompl
adc
lea
mov
or
mov
mov
dec
lds
out
rcll
pop
cmp
dec
movsl
mov
pop
test
jg
or
ljmp
out
mov
cs
fsub
jmp
add
cmp
test
xor
push
movsb
ret
dec
jnp
lea
sbb
pop
xchg
lock
xchg
sub
lds
repnz
mov
cmpsb
ret
or
inc
cwtl
pop
jg
inc
lahf
ds
movsl
pop
cmp
fisubl
aas
daa
push
dec
mov
inc
pop
inc
xchg
push
lahf
ja
scas
mov
dec
in
fwait
jb
hlt
xchg
inc
mov
dec
dec
adc
lock
ljmp
mov
clts
sbb
addr16
adc
mov
cli
or
lods
test
popa
movsb
pop
or
sub
aam
mov
into
xor
loop
subb
mov
adc
cld
sete
adc
mov
loop
dec
inc
xor
inc
test
jmp
jns
out
cmpsl
pop
cld
data16
out
bts
and
mov
jnp
xchg
incb
mov
push
cmp
in
mov
jle
adcb
cs
inc
pop
ret
cmp
jmp
pop
push
push
mov
push
stc
mov
pop
or
das
mov
and
push
sti
inc
push
out
sub
pop
pop
dec
xchg
sub
push
push
gs
push
cmpsb
in
gs
jmp
jl
jmp
notl
ss
xchg
add
lret
xor
mov
outsl
mov
jle
xorl
cmpsb
loopne
sbb
outsl
testb
pop
in
inc
pop
movsb
cmp
cmc
jge
rolb
lret
lods
push
mov
sbb
mov
int3
repnz
sub
shrb
int
xchg
int3
es
shlb
call
fsubr
jge
into
jb
imul
nop
arpl
xlat
jmp
int3
out
outsb
in
popf
sahf
pop
push
inc
mov
cmp
fcomp
push
jae
popf
mov
js
sbb
xchg
jb
pop
rcl
sbb
arpl
jp
lods
mov
insb
lret
sbb
out
sub
aas
gs
xor
lock
dec
ja
jp
push
and
dec
jle
pusha
les
jno
cli
xor
add
push
xor
inc
mov
fmull
lods
loopne
outsl
js
inc
arpl
fistpll
aaa
fidivs
add
cltd
scas
mov
jb
cli
js
sub
mov
scas
or
lcall
test
btrl
and
push
adc
jnp
mov
hlt
lret
cwtl
mov
imul
fmul
pushf
aam
add
pop
subb
and
inc
clc
cwtl
pop
cwtl
xor
jge
ljmp
cwtl
cmp
fnstenv
sub
jo
dec
push
fsubl
mov
insb
cmp
mov
mov
jp
adc
push
mov
sub
xchg
add
lcall
loopne
pop
or
jl
cmp
addb
inc
cmp
adc
jge
xor
pop
lock
in
pop
mov
adc
sub
leave
lods
mov
cmp
nop
shl
mov
cmp
xchg
repz
imul
notb
push
add
stos
xchg
mov
mov
mov
xchg
pusha
mov
pop
add
aam
loopne
test
sub
outsl
nop
outsl
mov
shl
insb
in
cmp
adc
scas
sbb
imul
mov
lcall
pop
shlb
aad
das
enter
ror
fs
adcb
je
jge
cmp
sti
iret
jp
movsl
lret
popa
adc
sbbl
movsb
mov
lret
andb
out
out
or
in
sub
jb
sar
push
fildl
xchg
sub
adc
push
lods
inc
add
mov
aad
push
mov
xchg
icebp
sbb
jge
mov
mov
pop
mov
xchg
stos
lret
inc
rep
mov
inc
mov
mov
movsb
jne
movsb
and
pop
mov
fs
popa
mov
add
xchg
sar
jo
push
vpmacssdd
das
xor
lahf
xchg
adc
mov
test
insb
xor
push
dec
mov
add
sub
jge
adc
testl
xchg
jne
out
bound
xor
jns
lock
rcr
imul
out
inc
adc
add
test
xor
and
in
jb
jae
mov
pop
enter
into
lcall
xchg
lret
inc
test
aad
sub
push
movsl
jle
inc
fs
and
pusha
or
outsb
fwait
cmpsb
shl
mov
cmp
aam
lcall
cmc
rorb
pop
imul
sub
xchg
out
dec
or
and
mov
lret
fmul
mov
fdivl
shl
repz
or
sub
inc
in
fstps
mov
xchg
push
adc
add
clts
out
mov
sbb
loopne
and
clc
in
sbb
sar
cmp
loop
addr16
xchg
jno
jbe
jge
xchg
dec
rol
or
or
pop
movsb
shl
xchg
mov
clc
mov
push
inc
in
in
or
inc
das
test
inc
mov
cmpsl
xorl
iret
adc
xor
mov
xchg
nop
sbb
mov
xchg
movsb
popf
call
les
add
inc
xchg
jns
pop
cld
fcomps
repnz
jecxz
cmp
test
jmp
jle
or
mov
xchg
out
mov
jmp
push
mov
fwait
pop
mov
mov
loope
adc
adc
add
adc
into
xchg
sbb
sbb
mov
rcll
or
xchg
fstl
stos
cs
imul
cmp
ljmp
adc
inc
pop
push
mov
inc
mov
push
push
rcll
sbb
dec
sub
mov
dec
jns
addr16
inc
cmp
jle
xlat
mov
add
cmp
lock
sub
fsubs
jae
lret
in
mov
mov
inc
lods
push
inc
dec
sbb
dec
call
jg
ror
bound
cli
shlb
mov
xchg
xor
cltd
mov
stc
data16
xchg
mov
repnz
cmpsl
loop
mov
sti
sub
mov
sub
xor
sbb
adc
ljmp
cmp
lahf
push
popf
cwtl
hlt
jmp
js
cmp
lret
pop
mov
fwait
cmp
cwtl
out
ds
imul
mov
stos
fwait
lods
outsb
fbld
lret
pushf
ja
mov
xor
mov
lds
jl
mov
stos
test
inc
outsb
popa
cs
insb
les
aam
or
lds
push
mov
lods
bound
imul
and
pop
sbb
xlat
dec
test
xor
lret
mov
gs
push
pusha
aad
xlat
pop
movsl
test
mov
push
inc
and
xor
js
ljmp
repz
test
mov
xchg
inc
inc
push
aas
dec
adc
add
mov
in
push
clc
dec
or
lret
js
cmp
xchg
xor
inc
xlat
imul
vorps
adc
insb
in
fdivrp
enter
cmp
fisubs
mov
test
out
add
adc
and
call
mov
mov
inc
pop
nop
xor
fimuls
out
dec
aaa
pusha
jnp
cmp
rol
imul
push
add
bound
inc
mov
int3
shlb
push
push
js
mov
sti
insl
jle
in
clc
and
xchg
pop
sarl
cli
pushf
mov
inc
sahf
cmpsb
mov
pushf
sbb
jnp
ret
ljmp
out
mov
int3
enter
fistpll
lods
aaa
popf
add
hlt
incb
mov
ret
std
cwtl
pop
imul
lods
test
inc
sub
out
ffreep
jle
aad
dec
sub
xchg
push
hlt
or
scas
pop
or
sar
push
or
lods
imul
mov
mov
inc
inc
pop
int3
addr16
std
push
pop
add
out
jae
insb
push
hlt
mov
int3
mov
jp
loope
stos
xor
and
push
sti
fistl
sahf
sub
xchg
lret
repz
mov
rcll
inc
jbe
push
xchg
mov
mov
icebp
pop
xchg
loop
inc
lds
cs
fwait
cmp
sbb
cmp
add
mov
jge
sub
pop
jmp
cld
cmp
mov
std
cmpsl
push
mov
dec
test
jg
xchg
push
dec
push
in
outsl
mov
inc
subb
lds
aaa
inc
aad
clc
cmp
xchg
sti
imul
faddp
lea
cs
xor
popa
sbb
cmp
xchg
push
movb
inc
jg
hlt
xchg
jnp
cli
dec
dec
mov
xchg
dec
stc
adc
lea
enter
std
lret
lds
aam
gs
add
sbb
pop
test
mov
rcll
cltd
push
sbb
test
data16
jmp
push
je
xor
in
xchg
movsl
inc
inc
out
mov
sar
dec
ja
xchg
cmp
xchg
push
mov
cmp
in
fnstsw
ljmp
push
lret
push
in
rcrl
movsl
jbe
or
sub
aas
rcl
dec
add
cmp
mov
mov
sub
push
je
popf
js
call
push
sub
and
jns
mov
pop
subl
stos
inc
arpl
daa
aad
push
push
xor
sarl
push
xchg
mov
sub
and
popf
add
sti
jne
inc
inc
shlb
fs
lods
sbbb
mov
push
es
std
push
cmpsl
or
insb
adc
push
insb
stc
cmp
ja
mov
push
test
je
ja
repnz
loop
sbb
mov
xchg
fwait
lods
test
ljmp
femms
or
and
test
rclb
enter
mov
fcoml
sub
out
fs
bound
imul
add
jecxz
clc
inc
movsl
daa
sub
mov
xlat
sub
cmpl
jmp
xchg
ljmp
pop
mov
gs
mov
and
fcomps
push
std
lcall
sub
mov
js
cmpsb
xor
pop
xor
xchg
and
clc
pop
ret
dec
cld
sarl
mov
push
sub
lahf
lds
xchg
push
lea
sub
or
mov
jmp
jmp
pushf
push
xor
in
cltd
int3
cltd
push
jo
clc
cmp
jb
inc
and
jnp
imul
push
jge
mov
repz
jo
sbb
out
pop
hlt
inc
mov
cmp
adc
mov
cmp
movsb
icebp
les
rolb
mov
jmp
jbe
rorl
xor
xor
mov
dec
iret
leave
ret
sbb
cmp
scas
pop
dec
mov
jg
into
inc
adc
push
test
cltd
jle
jl
rorb
aam
pop
or
sbb
pop
add
or
sbbb
call
fdivl
lea
mov
push
pop
pop
cmp
scas
cmp
jae
adc
pop
sbb
addr16
mov
movsl
pop
jno
adc
cmp
fnsave
arpl
xchg
es
sbb
shrl
cli
cld
jmp
and
jg
mov
ja
test
fnsave
in
hlt
das
mov
dec
stos
mov
mov
push
fisubrs
in
cmp
flds
xchg
pop
mov
out
or
inc
aas
and
mov
or
fnstsw
or
out
cli
test
pop
testl
pusha
sub
jp
jp
ret
div
cmp
push
fisubl
frstor
mov
enter
or
push
ret
pop
add
psllq
test
mov
jp
mov
cs
mov
xchg
sub
and
addl
mov
jns
cltd
lods
lahf
out
push
fwait
push
aam
pop
inc
gs
xchg
popf
hlt
xor
or
push
mov
xchg
shrl
test
sbb
xchg
andb
push
fisttpl
arpl
jge
loope
cmp
popa
jecxz
in
loopne
dec
rorb
dec
pop
or
mov
mov
xor
testb
xchg
push
imul
xchg
pop
mov
rcl
sub
xchg
addr16
sub
fidivrl
daa
xor
movl
jecxz
mov
loop
push
stos
mov
test
lcall
dec
mov
jmp
mov
cld
sbb
xchg
cmp
jle
int3
mov
inc
mov
mov
movsb
cmp
and
ret
cmp
cmpsb
aad
sbb
inc
xchg
pop
inc
adc
and
int3
cmp
jo
pop
mov
dec
cwtl
arpl
loop
rcll
sti
lds
push
push
jo
inc
pop
js
mov
pop
icebp
cwtl
lcall
popa
dec
add
lods
shrl
add
flds
mov
lock
aam
xorb
sub
jg
enter
and
js
mov
es
cmpsb
pop
andl
or
push
js
rcrb
mov
or
xchg
and
mov
loope
hlt
sub
jnp
cltd
mov
out
push
or
sbb
stos
scas
bound
cmp
std
mov
mov
stc
mov
shll
shll
jo
out
jne
es
sbb
pushf
in
data16
popa
inc
shlb
xor
lea
add
aam
xor
or
ret
leave
das
sti
mov
shlb
aas
xchg
in
push
insb
mov
dec
ds
shlb
adc
fcomi
repnz
sub
pop
jo
in
mov
test
cmp
sub
dec
insl
pop
jae
add
sbb
loope
int3
jp
add
mov
pushf
pop
stc
cmp
stc
dec
std
push
mov
icebp
pop
icebp
leave
sub
or
rclb
movsl
push
xor
push
cmc
out
pop
xchg
int
jns
movsl
scas
add
dec
je
adc
mov
movsl
sbb
clc
jae
push
inc
xor
pop
ja
ficoml
out
fstps
inc
jo
or
lock
stc
dec
mov
mov
data16
inc
mov
sbb
int
popa
and
ljmp
leave
push
je
clc
jne
push
or
sub
xor
sbb
es
sbb
jb
cmp
fists
or
push
cmp
and
fdivs
mov
xor
imul
in
mov
lahf
mov
repz
shrl
aas
addl
mov
lcall
xchg
stos
out
mov
pop
jne
mov
pop
popa
adc
jmp
clc
mov
xor
test
jmp
mov
rcll
xor
pop
fld
push
nop
int
sbb
leave
add
mov
test
or
cmp
ljmp
cwtl
into
mov
jmp
pusha
sbb
mov
mov
adc
jp
mov
out
aaa
mov
or
clc
push
enter
mov
cld
add
jae
add
ret
xor
cmp
notl
lret
push
xchg
mov
mov
test
mov
ret
popa
cmpsb
mov
aad
je
testl
add
dec
push
xor
repnz
or
movsl
xchg
outsl
mov
scas
pusha
cmp
mov
mov
mov
and
stc
popf
fwait
sub
lea
mov
cli
add
insl
and
sbb
cmc
xor
in
pop
or
inc
push
out
clc
in
mov
or
adc
imulb
fwait
int3
je
dec
je
in
mov
lahf
inc
mov
out
fwait
mov
cmp
in
inc
cmp
xor
add
dec
pop
and
lods
insb
xchg
fcoml
imul
jg
fdivl
nop
int
xor
mov
test
inc
cmp
stos
nop
scas
xor
std
cmp
test
stc
sub
dec
mov
ja
or
dec
pop
mov
xor
push
xorl
ljmp
das
out
fistpl
mov
mov
push
fstl
cwtl
sbb
inc
mov
rcrl
jecxz
inc
int
cmp
sub
insb
jbe
mov
xchg
xchg
out
jne
sbb
xor
xchg
aam
adc
sbb
push
fwait
jecxz
lds
xor
adc
adc
xor
sub
ja
push
cmp
imul
cld
xchg
inc
stc
out
data16
mov
cmc
push
mov
jmp
mov
inc
add
in
mov
pop
xor
dec
mov
xchg
pop
lods
dec
and
cmpsl
mov
sbb
pop
and
cmpsl
iret
and
les
xchg
dec
inc
adc
and
push
inc
shl
mov
xchg
pop
daa
or
jns
inc
ret
js
mov
xchg
lret
lods
dec
std
mov
dec
jo
mov
aam
push
repnz
xor
cmp
mov
out
shl
dec
pop
fiadds
dec
sbb
ficompl
arpl
rorb
not
xchg
push
add
cmp
pop
mov
je
pop
test
stos
xor
lods
inc
lods
xor
mov
xchg
js
mov
outsl
les
scas
rclb
sub
imul
lea
cs
mov
or
mov
dec
xchg
in
jbe
inc
scas
call
and
stos
sbb
lret
loope
and
jp
or
pop
in
shll
xchg
insl
xor
add
jo
fldln2
pop
addr16
pop
aaa
lds
sbb
js
inc
mov
inc
dec
mov
lret
adc
xchg
cmpsl
jae
test
adc
fcmovnbe
les
mov
or
push
test
add
call
sub
jecxz
mov
cwtl
adc
out
jbe
mov
xchg
or
ficoml
pop
mov
sub
out
xchg
and
scas
lds
xor
into
jl
inc
ja
sub
sti
mov
mov
mov
jmp
int
in
mov
cmp
dec
cmpsl
jo
andps
pop
icebp
xchg
add
daa
imul
or
std
pop
int
or
mov
dec
and
xlat
mov
pop
cmp
in
jecxz
hlt
pop
into
cmpb
nop
xor
clc
xchg
icebp
jno
cmp
cli
icebp
or
test
rcr
xchg
rol
outsl
in
sbb
adc
mov
mov
or
and
lods
movsl
pusha
pop
inc
xchg
lods
in
popa
mov
add
iret
and
dec
lds
lods
and
sbb
ss
movsb
xlat
pop
pop
cmp
add
and
nop
inc
inc
xchg
ljmp
mov
mov
or
jb
xchg
sub
movsb
cmpsb
test
mov
mov
mov
aas
xchg
out
jecxz
movsl
shll
mov
cmp
fs
insb
das
jl
mov
cmp
mov
aad
je
out
adc
mov
movsb
sub
and
aaa
out
dec
aaa
add
int
push
inc
sub
push
mov
cmpsl
imul
je
mov
addl
ss
dec
mov
imulb
test
mov
out
dec
test
and
mov
inc
sti
and
stos
fucomp
adc
sbb
jmp
jo
sub
int
movsl
and
jns
stos
dec
cmp
mov
sub
inc
shll
cmpsl
dec
repnz
dec
mov
mov
frstor
cmp
mov
push
pop
jb
lock
aad
adc
cmpsl
mov
daa
push
into
into
call
stos
mov
lcall
std
dec
cmp
mov
fcmovnu
mov
jp
cld
clc
leave
xchg
aam
fwait
mov
xchg
push
dec
cmp
mov
ret
cmpl
ficoml
xchg
mov
roll
dec
sbb
fstps
aad
sti
nop
jb
fwait
aaa
jecxz
lock
sub
ja
scas
in
xor
and
cmp
stc
sbb
fs
mov
leave
in
push
push
aad
cmp
outsb
adc
jae
lret
mov
shll
gs
xchg
ret
dec
das
inc
or
adc
loope
pop
mov
xor
or
sbb
inc
in
fs
dec
sub
inc
push
iret
cmp
dec
push
dec
clc
and
movl
rorb
adcl
loop
add
pop
enter
loop
loope
push
mov
clc
outsb
movsl
and
or
loop
ret
pop
sub
lds
icebp
inc
ds
call
pop
xchg
out
and
xchg
push
mov
stos
cmp
dec
dec
push
adc
mov
adc
push
iret
js
lods
sbb
repnz
cmp
push
fsubrl
cmpsb
test
sbb
inc
dec
jo
out
ss
sub
xchg
loope
fisubrl
lret
sub
into
dec
pop
test
fsubrs
mov
cmpb
rolb
add
sub
stc
xor
jnp
mov
out
loopne
in
out
dec
pop
mov
push
pop
mov
test
inc
dec
pushf
inc
ljmp
test
pop
dec
add
add
shll
cmpsb
jns
push
mov
fstpt
sbb
daa
mov
adc
popf
testl
jno
mov
addr16
stos
jb
stc
les
ja
mov
push
outsb
dec
lods
mov
jl
xor
fwait
loope
fwait
jp
enter
and
jg
mov
aam
sbb
fwait
jns
push
bound
xchg
add
xchg
ret
mov
arpl
xlat
or
cmp
mov
shll
inc
mov
icebp
popa
mov
movsb
xor
nop
jae
mov
mov
push
mov
add
xchg
inc
loopne
je
or
sbb
fimuls
cmpsl
xchg
pop
pop
dec
lock
pop
mov
test
jns
and
pop
push
push
mov
lods
ffreep
mov
dec
lods
loop
in
iret
fdivs
test
xchg
pop
insb
popa
pop
mov
div
scas
aas
mov
dec
rcl
sbb
jae
lods
pop
mov
aad
mov
jge
fdivr
repz
pushf
cs
mov
in
ret
xchg
call
imul
xchg
scas
das
push
jno
les
jmp
add
jmp
xor
mov
rol
pusha
xchg
popa
test
nop
loopne
sbb
and
sub
xor
and
cmpsl
insl
les
cmp
ljmp
lret
out
add
imul
loope
outsl
cmp
dec
lret
push
iret
inc
cmp
mov
int3
push
and
pop
int
add
pop
inc
lahf
clc
cmp
aam
or
mov
xchg
sub
inc
push
jg
mov
cli
rcll
or
faddl
cwtl
sub
ret
rorb
mov
ds
or
adc
iret
push
pop
mov
repz
dec
adc
shr
negl
lods
loope
dec
mov
and
into
leave
fs
in
out
cmp
nop
sbb
mov
push
inc
and
sub
inc
sbb
movsb
xor
std
shll
inc
shll
hlt
dec
push
lcall
cmp
jno
jns
lods
repnz
imul
cmp
add
cmp
mov
notb
sahf
rorl
xchg
cwtl
mov
jo
ds
dec
lea
mov
js
jp
nop
or
enter
icebp
aad
mov
rcrl
popf
clc
add
stos
sbb
mov
sarb
xchg
sbb
jmp
test
or
pop
mov
or
movsl
cmp
and
adc
adc
andl
nop
inc
das
push
clc
jp
and
dec
sti
sbbb
sub
insb
xchg
pop
sub
mov
cmpl
sub
test
in
sub
cmp
dec
adc
jne
loop
xor
insl
and
lcall
fwait
cmp
mov
adc
inc
inc
dec
je
pop
push
in
movsb
xchg
int3
xchg
mov
lock
jae
jecxz
push
rorl
xchg
mov
sti
mov
in
ljmp
or
lods
jmp
stos
and
xor
rcrb
cmpsl
mov
pop
out
xchg
ret
dec
jne
sahf
push
pusha
or
lcall
subb
jg
repnz
out
scas
mov
loop
jle
cwtl
repnz
cmp
jns
dec
int3
movsw
test
or
shrb
mov
aam
fnstcw
dec
add
cmc
sahf
mov
loop
pop
adc
icebp
out
sar
xlat
sti
xchg
sti
or
mov
mov
or
ficoml
inc
push
iret
sub
fistpl
mov
dec
xchg
push
push
jl
out
xor
push
add
and
leave
mov
pop
xor
push
or
fsubrs
dec
mov
fs
in
and
insb
ss
stos
and
xchg
movsb
aaa
sbb
sub
rcrb
jmp
and
mov
int3
or
scas
push
dec
mov
fstp
addr16
test
imul
int
sbb
repz
out
cmc
jecxz
ret
mov
stc
cmpsl
mov
mov
movl
mov
insb
mov
rcll
mov
cli
cmp
inc
hlt
jne
aaa
pop
es
dec
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
es
hlt
xor
or
jp
jl
lock
iret
minps
adc
imul
loop
mov
pop
mov
clc
mov
movsl
cmp
dec
cmp
andb
in
shll
mov
inc
daa
push
fwait
mov
pop
jmp
loop
inc
arpl
enter
iret
push
push
lea
xchg
inc
push
decb
and
rcll
lret
cwtl
setg
add
cmp
xchg
aas
or
inc
hlt
and
sub
out
lahf
icebp
mov
repnz
ss
das
rcrl
decl
inc
ret
add
sbb
rclb
mov
xchg
in
xchg
movsb
into
jge
nop
mov
mov
stos
mov
cmp
push
push
xchg
ret
lods
test
ds
jg
out
out
mov
ljmp
push
mov
cmp
data16
pop
lcall
enter
cmp
jp
inc
mov
adc
adc
pop
pop
cmp
mov
iret
hlt
push
adc
mov
clc
sub
repnz
ret
out
adc
shr
mov
ds
aam
test
dec
xor
leave
sbb
in
and
test
lcall
sbb
push
insb
rcl
into
cmp
test
nop
fildl
fldcw
cltd
mov
and
xor
push
and
and
dec
iret
mov
push
daa
fisubrl
icebp
inc
xor
cmpsb
out
inc
js
mov
jge
push
jmp
cmpl
sti
out
sub
gs
xchg
xchg
inc
fsubrl
adc
jp
sub
call
mov
push
jae
cmpsb
inc
pop
mov
ss
xchg
dec
jg
imul
add
lock
push
outsl
mov
inc
orl
sbb
pop
jo
sbb
xchg
push
push
into
adc
repz
push
pop
fdivs
jecxz
pop
sub
fistl
jge
roll
into
addl
xor
aam
mov
cld
add
fcos
sbb
les
loope
mov
and
push
js
pop
icebp
lods
cmpsl
jecxz
mov
or
add
out
jns
jno
adc
das
jb
sarb
sbb
insb
sub
push
call
sti
mov
dec
inc
movb
xchg
xor
daa
bound
jecxz
cmp
pop
sbb
push
cmp
jnp
leave
shl
add
xlat
push
insl
pop
xchg
nop
cmp
insl
sarb
xchg
ret
mov
insl
or
pop
lods
xchg
xchg
xchg
aaa
and
push
mov
jmp
test
in
mov
push
dec
dec
or
sbb
fwait
sbb
sub
mov
into
insb
lock
jne
popf
mov
push
ljmp
fstp
xchg
and
rcll
mov
imul
inc
sarb
sub
cmp
mov
mov
xchg
dec
dec
mov
cld
nop
adcb
and
xchg
lock
bound
cmp
jae
decl
dec
mov
push
aam
stc
xor
pop
dec
out
popa
mov
xchg
aaa
pop
sub
mov
jmp
inc
xchg
fsubrl
pop
lret
sbb
adc
jmp
xchg
imul
add
jbe
test
js
loop
sbb
jnp
cwtl
and
jp
jecxz
inc
xchg
inc
xchg
add
lods
inc
hlt
bound
pop
pop
push
mov
fs
xor
rorl
dec
add
mov
dec
test
inc
lret
mov
mov
mov
cmpsl
pop
jp
adc
shll
pop
daa
stos
mov
imul
icebp
mov
daa
and
mov
icebp
push
sbb
fdivp
dec
lret
sub
lds
cld
dec
pusha
mov
ret
lods
dec
ud0
imul
in
and
xlat
pop
xchg
jmp
out
add
jle
pop
arpl
mov
incl
pop
insl
sbb
push
mov
mov
jae
sarl
and
xchg
adc
push
mov
dec
push
add
xor
mov
ret
or
add
inc
push
test
add
jns
and
seto
jle
daa
push
bound
xorb
jl
mov
cwtl
jg
pop
inc
pop
aam
lods
clc
push
jg
mov
cmp
jb
jae
xor
dec
push
outsl
pop
pop
jo
je
addb
pop
rcl
fwait
imul
dec
rol
sub
icebp
idivl
mov
mov
ds
movsb
dec
cmp
mov
jp
aad
mov
push
dec
insb
mov
pop
scas
mov
out
nop
inc
pop
aam
aad
movsl
mov
jge
jge
add
in
or
js
push
sti
dec
bound
lods
loop
and
dec
sbb
mov
add
in
jae
test
xor
inc
in
popf
outsb
push
mov
cld
arpl
push
test
pop
push
je
loope
xorl
insl
xchg
fwait
lds
pop
mov
add
call
repnz
mov
lret
or
sbb
jne
fyl2x
sbb
inc
xchg
mov
test
sarb
cltd
loope
xchg
out
pop
je
cltd
lods
sti
sti
xchg
add
adc
lret
and
xchg
cmp
xor
inc
inc
inc
test
jae
jae
imul
enter
xor
je
xor
cmc
fstl
mov
sahf
push
mov
es
in
pop
jb
aad
xlat
mov
cli
jne,pt
cld
stos
mov
jp
or
inc
fsts
inc
inc
ss
imul
push
inc
ja
or
push
fidivl
jno
test
cmp
and
cmpsl
pushf
jg
xor
push
std
xor
pusha
push
dec
dec
jl
jle
inc
bound
rcrb
pop
repz
sub
mov
mov
repz
lret
xor
das
adc
int
insb
sub
pop
loope
xor
stos
cmp
mov
mov
cs
pop
ret
imul
cmp
add
sub
enter
pop
data16
in
movsb
jecxz
or
hlt
and
cmpsb
xor
sub
fdivs
daa
jno
pop
cmp
lock
vphaddubw
jno
sarb
mov
lds
cmc
pop
or
or
insb
xchg
fistl
test
lock
or
imul
subb
andl
sub
push
jmp
mov
mov
cmp
mov
push
inc
cmpsl
dec
dec
fstl
and
out
xchg
pop
subl
adcb
jno
inc
or
sbb
and
insl
lock
pop
jo
mov
aaa
sbb
adc
out
mov
and
hlt
out
sub
xor
fistpll
aam
sbb
add
pop
xchg
cmp
leave
cmp
les
dec
in
in
pop
push
shlb
mov
ljmp
repnz
adc
shrb
test
mov
xchg
ror
movsl
lret
into
out
dec
addb
mov
mov
push
test
mov
leave
test
and
ljmp
add
xchg
mov
xchg
xor
movsb
mov
lret
ss
cmpsb
jmp
imul
dec
sub
pop
cmpsb
enter
or
aaa
sub
adc
pushf
sbb
iret
out
outsl
dec
pop
fistpll
stos
push
and
ja
jo
fiaddl
idivl
push
fs
mov
cld
stos
or
sbb
ljmp
daa
mov
pop
xchg
mov
sub
movsl
and
push
mov
or
sahf
inc
mov
mov
xor
xor
and
lods
add
mov
mov
aam
xchg
cmc
shrb
xchg
pushf
imul
push
mov
add
sbb
mov
sub
inc
dec
mov
xchg
or
call
sbb
xchg
add
xchg
push
xor
pop
test
adc
xchg
scas
scas
jp
repnz
and
jns
sub
sub
fdivrs
xchg
inc
loop
mov
push
popf
lcall
or
pop
faddl
xor
out
rcll
xor
fsubrl
sub
shll
fimuls
jb
xchg
imul
aaa
xorl
push
das
jg
dec
into
xchg
jae
push
xchg
sub
pop
rcll
inc
xchg
mov
daa
imul
mov
ljmp
jl
pop
sbb
testb
aaa
xchg
ret
daa
es
shrl
inc
mov
mov
jmp
out
faddl
dec
ljmp
jb
sbb
imul
loope
gs
mov
pop
dec
sub
aaa
loope
adc
aas
xor
or
xchg
fidivrl
xchg
andl
lahf
out
cmp
adc
jmp
in
mov
pop
out
sbbl
and
push
sbb
pop
sbb
and
adc
aam
test
xchg
push
popf
test
data16
lcall
les
xchg
aad
gs
addr16
xchg
arpl
fsub
inc
mov
add
sub
add
jns
std
or
imul
inc
sub
inc
pop
jmp
int
mov
sbb
jp
mov
loope
pop
lahf
pop
cs
mov
sbb
scas
leave
cli
or
mov
mov
pusha
and
push
jbe
das
mov
fs
daa
xor
xor
or
ss
les
fadds
jl
sub
inc
sahf
loopne
repz
fstps
or
dec
clc
and
or
adc
das
push
or
mov
movd
shlb
fsubr
push
shl
sahf
cmp
jb
enter
imul
cs
imul
cli
or
sbb
dec
in
pushf
leave
imul
dec
sbb
ret
mov
mov
and
sbb
xor
push
mov
push
scas
mov
dec
mov
adc
jle
sub
jo
adc
cmp
int
hlt
test
jnp
xchg
call
sub
jo
dec
push
lods
je
insb
push
and
aaa
leave
insl
ret
int3
cmp
int
nop
mov
or
or
sti
loope
mov
add
cs
jmp
cmp
call
pop
xchg
movsb
icebp
xor
inc
pop
push
pop
arpl
lret
enter
push
inc
dec
cli
inc
js
dec
or
fdivl
mov
add
inc
subl
inc
xor
mov
out
aas
push
xor
jae
push
test
cmp
cmp
leave
scas
pop
call
add
stos
cmc
sub
pop
sahf
into
lock
fdivr
test
fcmovnu
pop
sub
fdivrl
in
jmp
xchg
stc
leave
pop
sbb
push
jp
or
out
inc
and
cs
popa
repz
push
mov
stc
sbb
inc
jne
xchg
clc
sbb
xchg
xor
sub
mov
shrb
movhps
pushf
lcall
icebp
dec
test
mov
pop
dec
aad
data16
test
jecxz
jne
pop
fwait
add
adc
pop
mov
pop
or
pop
mov
leave
mov
cs
in
push
fwait
inc
mov
push
mov
inc
adc
cs
fwait
push
mov
jns
adc
mov
fprem1
orl
mov
hlt
or
xchg
pop
into
inc
les
xor
sbb
out
in
dec
popf
cmp
mov
add
in
xchg
aad
fisttpll
adc
xchg
ret
mulb
fistpl
pop
into
mov
lret
inc
cwtl
mov
xor
adc
or
adc
and
fsts
push
and
es
insb
mov
xchg
cld
pop
sbb
dec
or
addr16
in
sub
sahf
popa
clc
push
sub
leave
fsubrs
hlt
lret
dec
daa
sub
rcrl
mov
push
and
mov
and
cmpsl
xchg
push
or
int
push
call
push
dec
xchg
and
push
loope
mov
lret
jg
out
pusha
mov
jb
inc
rolb
and
jns
inc
cmpb
dec
loope
stos
inc
fs
stos
lahf
mov
add
lret
cmpsl
push
push
gs
in
jl
mov
loope
adc
shlb
inc
mov
fisttpl
jns
sub
loopne
sbb
mov
aaa
std
push
loope
orb
ja
shlb
inc
mov
outsl
outsb
or
xor
scas
imul
hlt
pop
jns
ss
leave
xlat
fiaddl
adc
xchg
iret
out
fsubl
aad
call
shrb
iret
pusha
frstor
or
mov
xchg
sub
cmc
pop
or
scas
mov
jne
sbb
lret
push
sbb
and
pop
cmpsb
aad
dec
dec
push
movsl
jp
fidivl
or
xchg
pop
roll
mov
dec
lods
daa
inc
lea
xchg
pop
out
adcb
into
xor
out
or
dec
sub
cmp
add
mov
loopne
and
cmp
and
les
fisubl
cmp
dec
idivb
aam
fbld
out
inc
test
mulb
push
in
aad
std
vmptrst
jg
xchg
cs
pop
pop
in
fsubrs
outsl
subb
insb
and
loope
into
jno
mov
loopew
inc
xor
and
ja
mov
lahf
lcall
lock
lds
lahf
mov
imul
xor
xchg
test
dec
in
sti
stos
sarb
sub
lods
shl
sbb
sbb
add
sub
pop
dec
and
mov
sbbl
cmpsb
dec
add
jle
mov
imul
repz
mov
push
cmp
je
int
ret
push
out
lock
imull
xchg
jbe
mov
call
push
sarb
andl
cmpsl
xchg
adc
jmp
cmp
ljmp
xor
mov
xchg
lock
shrb
test
fbld
adc
xchg
stos
adc
shrl
lods
sub
mov
add
inc
aaa
or
imul
notl
mulb
es
xchg
divb
pop
cmp
pop
or
dec
adc
cld
push
xchg
mov
add
sub
mov
rorb
xor
decb
test
in
loop
addr16
push
xor
push
mov
mov
adc
jne
cmp
scas
dec
mov
sub
lea
inc
rorl
ljmp
pop
js
sbb
jle
in
xor
jo
adc
loopne
jl
mov
je
xor
push
test
cs
pop
enter
mov
xchg
push
in
inc
pop
mov
adc
popa
loopne
pop
jae
jle
sub
xchg
mov
pushf
popa
sub
add
sub
cmp
fmuls
and
fcmovnu
fidivrl
pop
in
jmp
insb
cwtl
sbbl
sar
loopne
test
sbb
pop
push
or
sbb
shl
or
scas
and
fst
mov
outsl
lds
fsubrl
negb
in
arpl
aam
pop
divps
in
dec
sbb
inc
push
iret
sub
cmp
inc
jnp
push
aad
adc
sbb
stc
jmp
inc
jg
pop
mov
fildll
sub
adc
push
and
sub
xor
les
ds
adc
jns
in
jecxz
lods
jg
jge
push
inc
adc
nop
cmp
in
hlt
sahf
push
loop
mov
iret
mov
xorl
inc
sub
sti
cld
insb
outsb
push
shrb
mov
sbb
pop
xchg
cmc
sbb
adc
rcr
jbe
jae
dec
push
stc
or
mov
or
jg
jb
lcall
rcll
je
in
push
adc
lds
fs
rcll
ret
cmp
dec
test
mov
mov
mov
cmp
xor
push
dec
sbb
mov
pop
js
sub
pushl
je
jno
push
cmpsb
push
stos
pop
push
dec
adc
fstpt
push
and
pop
pop
sbb
xchg
cmp
pop
popf
fdivp
mov
pop
cmc
in
call
dec
push
jns
push
inc
pushl
pop
pop
imul
div
mov
aad
hlt
stos
shll
ss
test
mov
pop
xor
lahf
pop
fimuls
mov
neg
jg
adc
lds
xor
movsl
adc
mov
aas
push
mov
mov
pop
fstpt
fistps
filds
push
js
gs
mov
and
xlat
sub
xchg
ja
and
dec
in
pusha
or
or
pop
pop
pop
out
cmpsl
jmp
lret
or
lods
rclb
and
out
jne
pusha
xchg
cld
sbb
jne
pop
mov
lret
mov
sub
or
cmpsb
mov
ss
test
in
inc
pop
es
repz
ret
mov
je
mov
cmp
je
adc
cmp
imul
cld
inc
and
sub
fisubrs
and
pop
adc
addr16
imul
jne
test
cmp
cmp
psubw
inc
or
xor
xchg
fwait
gs
jns
xchg
push
scas
mov
sbbb
cmp
flds
push
ret
dec
pusha
jno
das
and
gs
pop
lods
inc
and
das
mov
mov
inc
sub
push
add
sub
bound
test
add
fdivp
mov
dec
or
jl,pt
push
mov
dec
rolb
xor
rcl
pop
and
jge
pusha
sub
xchg
test
xchg
ljmp
mov
movsl
sbb
mov
adc
or
sbb
mov
lea
cmc
mov
mov
sbb
fbld
loopne
dec
xchg
or
es
mov
sub
jno
push
out
inc
inc
subb
add
adc
cmpb
fs
push
in
insb
int
int
jbe
xchg
popf
loope
ds
push
cmpsl
in
xor
cmp
xlat
xor
ds
add
push
push
iret
test
scas
mov
and
xchg
push
test
and
and
aas
test
sti
out
push
jecxz
jno
sub
dec
mov
xorl
mov
cmp
add
sahf
jmp
inc
test
mov
adc
xor
scas
dec
or
sub
xor
pop
xor
jg
stc
mov
aaa
mov
pushl
jns
call
or
jmp
and
pusha
cltd
mov
mov
in
lahf
add
adc
sbb
jg
mov
insb
ja
mov
dec
jbe
xchg
cmpsl
xchg
dec
mov
lods
sub
inc
into
sub
in
dec
cmp
xchg
xor
adc
mov
xlat
test
inc
inc
adc
inc
out
leave
ljmp
mov
outsl
data16
push
insb
sbb
mov
push
mov
scas
mov
fistpll
mov
imul
test
xchg
mov
add
cmpsl
add
push
mov
mov
jmp
xchg
outsb
adc
cmpsl
movsl
push
ret
daa
lahf
cmp
push
mov
mov
insb
rcl
adc
mov
cli
xchg
fwait
fidivl
sub
cmc
xchg
jnp
xor
xchg
insb
inc
push
jmp
cs
pop
add
push
test
cltd
iret
pusha
or
into
outsb
inc
or
fnstcw
or
clc
out
lods
out
shrl
cmpsb
iret
mov
push
fistpl
dec
popa
inc
add
push
jno
jns
sub
xlat
adc
xchg
hlt
in
rcll
mov
lcall
loopne
mov
enter
sbb
jbe
mov
add
pop
mov
mov
pop
icebp
in
lods
add
arpl
ret
inc
mov
stc
mov
xor
sub
mov
test
or
out
stc
xor
jns
cmp
shrl
sbb
popa
push
mov
jle
enter
jno
or
sub
mov
cmp
nop
insl
dec
imul
mov
cmp
pop
dec
mov
xchg
adc
push
sbb
jle
cs
mov
sub
sub
test
lds
ret
out
pop
mov
jg
pop
rorl
and
das
sbbl
mov
subl
stc
xchg
jnp
cmc
dec
pop
xchg
push
xor
stos
jl
adc
cmpsl
push
cmc
sti
jp
mov
lret
push
mov
jo
jns
push
mov
rcrb
sub
push
fmul
inc
xor
enter
pop
insl
dec
loop
rorl
out
subb
push
loopne
loop
mov
jl
xchg
test
sub
mov
cmpsb
dec
lea
in
lods
sub
pushf
lea
dec
jmp
pop
mov
imul
loop
pop
xor
ficoms
and
sbb
das
push
xchg
scas
dec
mov
out
jmp
lahf
les
outsb
pop
popf
jg
out
inc
sub
addl
mov
cld
fwait
push
dec
adc
mov
or
fwait
test
icebp
inc
mov
sub
jecxz
or
jp
pop
inc
inc
cs
jg
clc
or
inc
movsb
sub
cmp
push
xlat
push
call
pop
mov
call
mov
and
add
hlt
sbb
stos
js
sbb
add
pop
pop
ja
add
inc
xchg
push
or
sbb
jno
ds
xchg
pop
in
cmpsl
wbinvd
in
ret
data16
or
arpl
gs
andb
movsl
sub
aam
lret
and
adc
xchg
pop
pop
xchg
xchg
test
enter
fistps
cmpsl
or
test
push
lret
xor
sbb
inc
movsl
sbb
popf
fadd
sbb
pop
cmp
jg
gs
fnstsw
ret
sahf
jg
lock
test
push
test
and
bound
sub
test
jnp
cld
fnstenv
xchg
xchg
add
push
dec
push
inc
inc
in
bound
cmc
loop
dec
push
jbe
arpl
ret
sbb
bound
cwtl
sub
sbb
mov
sub
es
decl
sub
scas
lcall
ja
or
mov
pop
cld
and
mov
mov
mov
xchg
test
adc
lea
push
jbe
jns
sub
push
hlt
xlat
xor
clc
popl
inc
int
lcall
jg
xchg
loopne
adc
mov
mov
test
loopne
xor
xchg
cltd
rorl
stc
mov
sahf
push
adc
mov
push
addb
jp
inc
sub
xor
jne
pop
pop
dec
cwtl
adc
or
popa
or
add
jbe
jo
inc
xchg
xor
rolb
insb
bound
rorb
xor
call
insl
ret
flds
sub
mov
cltd
out
xchg
or
subb
jnp
push
nop
mov
aaa
cmp
mov
decb
je
in
cmpsl
je
adc
inc
sbbb
popa
ljmp
es
push
insl
or
add
or
jbe
dec
jle
and
mov
loopne
push
popa
jg
mov
lret
movsb
push
in
cmp
out
mov
movsl
in
add
stos
popf
das
into
xlat
cli
sub
stos
xchg
cmp
cs
outsb
jne
dec
mov
add
int
xor
inc
cmp
push
inc
mov
pop
adc
add
xor
lahf
daa
dec
out
push
sub
test
pop
push
xlat
xchg
sub
insl
xchg
mov
ljmp
xor
fwait
add
dec
adc
daa
shrl
jecxz
dec
hlt
imul
cwtl
mov
sub
daa
outsl
shrl
dec
pop
es
sub
or
sahf
hlt
ja
xchg
cli
call
jno
imul
jae
mov
xchg
xor
out
adc
sahf
dec
lret
and
ret
jmp
cmp
sub
dec
popa
and
jbe
xchg
push
cmpsb
nop
in
cmpsb
int
dec
sub
inc
push
pop
subl
mov
orb
shll
xor
jmp
into
jle
lds
loopne
test
cld
adc
repnz
aaa
mov
xchg
xchg
mov
mov
enter
sub
mov
int3
scas
das
xorb
sahf
xchg
pusha
ds
xchg
and
dec
cmp
sahf
pop
cmp
adc
out
dec
sub
les
dec
fbld
xor
pop
push
mov
push
sbb
scas
jae
xor
movb
frstor
push
loope
sbb
lock
pop
dec
test
mov
dec
pop
shrb
jp
or
add
or
in
and
inc
sub
test
iret
jle
cltd
int
aam
pop
fdivrs
pop
jle
std
jae
jbe
test
inc
lods
pushf
add
es
int3
jnp
outsl
movsb
inc
mov
mov
les
mov
shlb
or
push
rorl
fs
fwait
pusha
dec
xchg
dec
and
sarb
xchg
push
inc
xchg
dec
mov
movsb
aad
rorl
ret
xchg
imul
mov
dec
inc
xchg
mov
add
bound
adcl
outsb
xor
and
adc
add
movsb
jg
sub
lods
mov
divl
addb
mov
cmp
fadds
adcl
dec
fs
daa
sahf
orb
sub
sbb
sbb
movsl
sarl
orb
sub
lds
shlb
das
negl
jle
lea
jle
xor
pand
push
xorl
pop
jne
or
std
pop
jg
mov
iret
data16
int3
mov
stc
insb
out
mov
loopne
lods
pop
cmp
and
and
test
push
out
ja
cmp
or
rclb
out
movsl
xchg
pusha
jmp
cmc
stos
les
sbb
push
fldl
lcall
push
jmp
gs
jbe
or
inc
ret
in
xchg
repz
jae
fwait
mov
xor
rorb
add
sub
fistpl
dec
push
mov
cmpsb
test
aas
adc
jno
dec
repnz
nop
xchg
jns
cmpsl
push
mov
sub
push
mov
roll
jae
outsb
dec
push
inc
inc
push
xor
sbb
push
orb
imul
add
push
notl
je
and
mov
jecxz
dec
aas
pop
mov
stc
jp
dec
cltd
in
daa
push
lea
dec
enter
add
jmp
dec
pushf
xorl
scas
scas
push
push
and
mov
sub
or
cmpsl
fdivl
or
mov
nop
sbb
xchg
repnz
ret
shrb
mov
inc
arpl
ffree
dec
inc
inc
or
xchg
pop
das
lods
dec
push
jmp
push
sbb
hlt
lds
push
test
decl
cmp
and
push
and
outsb
repz
xor
cmpb
adc
mov
lods
out
jno
rcl
inc
ret
imul
mov
and
push
push
fmull
cwtl
xor
ror
jne
movsb
push
test
mov
mov
movsb
xor
xchg
mov
sub
mov
push
fimull
mov
mov
and
add
loope
jnp
mov
or
sbb
andb
jbe
or
dec
cmpsl
jecxz
clc
dec
out
push
decb
push
inc
fld
scas
addb
sub
inc
bound
cmp
mov
sbb
adc
add
push
sub
sub
mov
jb
call
xor
or
int3
jo
loopne
xchg
inc
sbb
xchg
out
push
mov
xchg
cmp
nop
dec
dec
std
loope
daa
out
add
jo
and
es
push
scas
mov
int3
outsl
inc
pop
jb
xor
in
mov
sahf
cmp
fisubrs
int3
xchg
cli
mov
test
push
pop
addr16
mov
loopne
mov
or
inc
stc
movsl
enter
jecxz
inc
call
jge
push
popa
rolb
movsb
enter
adc
cld
insb
test
ror
mov
adc
xor
fs
dec
aas
nop
xchg
or
repnz
shlb
in
movsb
cmpsl
mov
jb
rolb
outsb
sbb
lea
xchg
sub
jmp
inc
pop
lea
imul
push
sub
mov
shlb
les
clc
jo
test
pushf
jp
xor
sbb
popa
sarl
cmpsb
adc
sub
dec
mov
in
cmp
push
stos
jecxz
negl
into
cmp
movsl
jl
push
insb
adc
sub
add
outsb
sbb
pop
xor
push
das
xor
aaa
mov
mov
cwtl
push
or
cmp
adc
xchg
test
js
out
loop
inc
pushf
pop
xchg
jns
pop
arpl
loope
xor
in
mov
test
out
dec
mov
jno
or
adc
dec
jne
test
xor
jl
inc
adc
or
mov
cmp
cmpsb
inc
mov
cmpl
scas
xor
out
jno
mov
xchg
rclb
inc
xchg
movb
cmp
jo
mov
outsw
xor
inc
adc
and
hlt
xor
push
mov
es
loopne
ret
int
mov
mov
int3
adc
add
in
pop
and
adc
mov
xchg
popa
dec
jns
xor
mov
and
adc
lea
das
mov
push
in
xor
inc
push
mov
hlt
fidivs
ja
adc
and
sub
rorl
xor
ds
dec
pop
ljmp
inc
sbb
and
popf
aaa
adc
insb
cmp
ret
xor
mov
pop
xchg
sahf
rorl
es
sub
movsl
jecxz
xchg
cltd
rcrb
int3
mov
repz
mov
jae
repnz
inc
shrl
pop
negl
test
cmp
int
inc
mov
sub
aam
push
jg
jl
icebp
popf
arpl
mul
inc
enter
dec
push
xchg
stos
inc
cmp
and
and
nop
jg
jbe
push
notl
cld
sarb
pop
pop
mov
sbb
into
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
imul
jp
pop
jp
push
pusha
lds
roll
cmp
sub
sti
jle
pop
rorl
es
aas
cs
pop
adc
mov
aam
ss
lods
fstl
aad
in
inc
out
jmp
jae
aas
pop
insb
cwtl
dec
mov
mov
mov
xchg
das
enter
jbe,pn
aam
push
stc
repz
pop
call
pop
adc
stos
mov
in
cltd
jns
jle
scas
popa
repnz
jecxz
push
mov
icebp
mov
test
data16
sbbl
repnz
mov
push
inc
or
std
lods
cmp
mov
fisttpll
arpl
ja
sti
test
add
or
inc
ret
mov
mov
lock
mov
lret
insl
sahf
lea
icebp
std
mov
icebp
sarb
sub
mov
xor
in
and
daa
lret
xor
pushf
fsubrs
shl
repz
ds
xchg
adc
sbb
push
mov
mov
cmp
mov
cmp
inc
xor
stos
pop
jg
jl
sub
fisubl
mov
mov
outsb
ffree
add
nop
loopne
fldcw
subb
pop
cmpsb
leave
into
lods
and
in
dec
sub
pop
shlb
cmp
inc
dec
and
xor
adc
adc
repz
jg
scas
push
mov
nop
ja
test
jb
mov
dec
pop
cs
lret
xchg
mov
rcl
imul
add
hlt
and
xor
pusha
sbb
sbb
fst
xor
mov
push
into
in
scas
out
sbb
bnd
lcall
xchg
cmp
scas
repnz
xchg
pop
loopne
mov
add
arpl
xor
repz
sarb
xchg
ror
sub
or
inc
adc
test
mov
addr16
popa
add
repz
sahf
outsb
shl
test
cmp
hlt
xchg
push
push
mov
incl
or
jle
mov
adc
clc
mov
mov
jecxz
xchg
and
add
jne
cmp
mov
sub
pop
outsl
mov
adc
jl
out
push
pop
int3
sub
movsb
cmp
icebp
sub
iret
inc
add
addr16
sub
xchg
in
jns
movsb
arpl
and
mov
mov
mov
mov
fistpll
and
push
das
pop
sub
outsl
pop
xor
adc
aam
cli
pop
cmpsl
incl
scas
mov
adc
dec
mov
lcall
jo
lea
or
lcall
xchg
movsb
popa
pop
push
lahf
popa
cltd
or
xchg
insl
mov
sbbb
mov
aaa
cli
adc
xchg
sbb
add
fsubrs
movsb
inc
jp
add
icebp
fsubl
aad
test
push
mov
jns
adc
mov
int3
daa
dec
sarl
xchg
into
mov
scas
xchg
push
xchg
push
xor
arpl
push
leavew
inc
add
mov
clc
aad
cmpsb
pop
mov
mov
stc
push
pushf
mov
jo
mov
faddl
movsl
aaa
or
inc
jb
jl
xor
movsl
fwait
std
add
and
int
jl
dec
push
scas
add
std
or
push
jno
mov
movsb
mov
insl
gs
sbb
aaa
repz
daa
jle
add
iret
xlat
andb
push
rorl
cmp
ret
call
cld
or
and
hlt
or
dec
shl
test
repz
into
shll
pop
pop
xchg
out
fwait
push
shr
repnz
arpl
orb
add
int3
add
jno
sbb
enter
jno
push
and
rclb
push
pop
in
push
dec
insb
jns
jle
shl
scas
pop
clc
loop
aam
mov
mov
and
cltd
mov
mov
push
repnz
adc
insb
ja
mov
or
and
xchg
mov
jmp
es
fildll
scas
pusha
popf
into
mov
cmp
or
test
mov
cmpsb
loopne
rcll
jecxz
out
rcl
idiv
nop
xchg
inc
clc
jno
xor
mov
mov
push
cmp
fstpt
loopne
jno
xchg
pop
fs
outsb
push
lcall
mov
push
cmp
daa
pop
in
sbb
adc
outsb
mov
cld
sub
pop
sub
out
mov
fnstcw
imul
xor
stos
push
sub
pop
mov
push
dec
test
in
rorb
in
inc
jl
mov
ret
lret
shll
jle
das
mov
mov
mov
xor
inc
push
idivl
inc
repnz
cmp
xor
jo
ljmp
repz
cmp
mov
out
adc
pop
jecxz
push
cli
cmp
popa
and
add
aad
fdivrl
dec
push
dec
adc
inc
loopne
mov
mov
push
adc
jb
inc
pop
jnp
test
inc
jb
mov
aam
push
test
cmpsl
in
cmpsb
std
mov
sub
loopne
push
stos
rcrb
arpl
stos
cltd
js
imulb
loopne
sbb
xchg
test
jp
aam
cmpsl
test
lret
push
iret
call
es
pop
aaa
push
int3
push
xor
fsub
fwait
push
sbb
mov
popf
test
je
dec
mov
cmpsb
out
jo
cmp
in
rolb
mov
and
mov
push
add
xor
inc
sub
mov
in
add
ljmp
push
pop
jns
xchg
loopne
push
push
mul
mov
daa
mov
enter
jb
add
xchg
outsl
mov
into
mov
lahf
add
ret
mov
int
in
mov
xchg
int
sbb
cld
xchg
xor
mov
cmpsl
push
ljmp
xchg
enter
mov
stos
sarb
imul
je
lods
mov
pop
sbb
imul
cmc
mov
js
xchg
push
stos
std
clc
inc
jae
cld
mov
test
movsl
dec
dec
fisubl
test
mov
mov
cmp
mov
fs
add
pop
xor
shll
mov
sbb
enter
in
mov
loop
xchg
jmp
xchg
fisubrl
mov
fstpl
out
idivl
push
lods
mov
mov
adc
in
adc
dec
lret
movsl
shlb
dec
pop
cmp
xor
cld
xchg
je
rcrl
hlt
jno
cld
xchg
mov
call
sbb
xchg
iret
and
lret
out
or
pop
cltd
push
cmp
mov
dec
xchg
mov
inc
loopne
push
sbb
cld
xorb
out
xor
jmp
dec
sub
icebp
sbb
cmc
xor
lock
enter
add
cmp
jle
dec
enter
mov
outsl
sub
pushf
inc
cmpsl
add
pop
nop
inc
add
sbb
inc
mov
lods
add
or
pop
jno
bnd
enter
mov
add
mov
cwtl
mov
and
push
lea
in
sub
icebp
xor
dec
fstpl
jp
push
mov
in
ja
shlb
mov
jmp
sub
sub
inc
loopne
xchg
cmpsb
xor
ret
push
or
adc
push
lret
pusha
dec
ds
ror
cmc
aad
mov
mov
fidivrs
movsl
fdivrp
fcom
cmovno
jno
sub
mov
hlt
out
mov
mov
sub
push
dec
cmp
push
loope
outsl
out
xor
ret
ljmp
mov
mov
jno
insl
or
xchg
inc
into
test
and
mov
arpl
arpl
cwtl
loop
dec
in
push
cmp
arpl
jecxz
xor
in
int3
add
pop
daa
aas
or
out
call
fsts
jmp
mov
repnz
ja
push
pop
mov
push
cmp
xchg
inc
mov
push
push
mov
jle
outsl
fwait
in
out
xor
les
mov
mov
xor
mov
into
add
call
cmp
sarb
or
popf
add
add
xlat
int3
subl
rorl
insb
js
mov
mov
add
jle
std
or
insb
orl
fwait
push
cmp
or
inc
cmp
incb
push
sub
testb
push
xchg
test
jnp
out
push
cltd
cwtl
jp
es
scas
pop
stos
mov
inc
jo
int3
and
jne
pop
daa
inc
lcall
xlat
mov
rcrl
xchg
mov
pop
sbb
dec
nop
mov
lods
imul
test
sbb
pusha
into
pop
inc
loop
mov
movsl
lods
cmpsl
push
fnstcw
dec
aad
sbbl
xor
mov
cmc
addr16
loopne
inc
xchg
dec
aaa
xchg
cltd
xor
iret
test
sub
das
insb
push
mov
sbb
adc
mov
in
push
inc
mov
jo
test
notb
mov
mov
ja
pop
mov
rcrl
push
ret
xor
mov
cs
leave
jo
fstl
fsubl
or
testb
inc
add
xor
sahf
test
push
cmpsl
stos
gs
pop
mov
lret
push
or
add
cwtl
inc
cmp
xchg
rcll
or
xchg
js
jo
mov
repz
jp
mov
sbb
jge
scas
shl
inc
lea
aas
cmp
outsb
jnp
cs
ds
in
lds
mov
cmpl
and
fisubs
cltd
movb
cmpsb
rorb
sbb
xchg
scas
loop
dec
cmp
insl
mov
mov
add
xor
dec
sbb
or
loope
dec
sbb
idivl
inc
fstl
in
mov
jnp
iret
and
push
push
mov
fimull
push
add
cltd
dec
mov
mov
test
insb
xor
ss
push
testb
cs
hlt
bound
mov
dec
fbstp
lods
fstpl
rcll
loopne
cwtl
rolb
sbb
popa
lea
pushf
ss
lret
sub
daa
nop
pop
imul
xchg
jnp
jg
cmp
lret
sub
fisttps
aad
adc
inc
sahf
xchg
rcrl
sub
outsl
dec
mov
xchg
test
gs
popl
or
sbb
pusha
xor
gs
pushf
jnp
in
shr
nop
add
fildl
jle
or
repz
idivl
inc
mov
push
aam
imul
and
ficomps
sbb
jge
adc
and
sub
dec
push
mov
cmp
fs
cmp
gs
stc
leave
xor
xor
sahf
sbb
inc
testb
iret
xor
mov
mov
xor
or
aas
pop
scas
inc
test
pop
cmpsb
inc
ret
or
aas
imul
push
mov
dec
xor
or
jg
aam
xor
inc
inc
sti
sbb
inc
xchg
mov
cld
in
arpl
dec
imulb
js
adc
leave
cmp
add
stos
mov
mov
inc
scas
fidivl
cltd
bound
mov
mov
or
or
jno
inc
xchg
faddl
outsb
out
sub
stos
in
sahf
xchg
jno
les
cmp
mov
push
or
adcb
rcrl
mov
jae
lock
mov
push
xor
xchg
mov
ret
jne
hlt
pop
fstp
mov
sbb
and
repz
inc
and
test
xor
decl
sub
pop
insl
imul
hlt
push
push
xor
stos
mov
ret
dec
lcall
push
jecxz
nop
aas
mov
sbb
shl
lea
jnp
pop
ja
jnp
movsl
add
hlt
out
clc
dec
push
je
xchg
mov
sub
fnsave
mov
mov
cmp
mov
in
dec
int3
jns
xchg
mov
out
dec
mov
arpl
jge
ljmp
add
shl
fcmovu
int3
in
addr16
andb
cmp
shrl
fcompl
push
dec
cmp
sahf
xchg
pop
lds
fcmovnb
or
in
mov
mov
aad
fiadds
lea
stos
add
pop
mov
repnz
movsb
ja
inc
in
shr
ret
pop
std
sahf
mov
or
jl
test
xorl
dec
fsubs
inc
imul
mov
dec
ljmp
xchg
popa
mov
dec
mov
mov
jl
xchg
jle,pt
stc
push
xorl
push
int3
pop
rcrl
sbbb
in
sub
popf
es
add
ss
das
in
mov
stos
stc
nop
xchg
add
movmskps
les
push
push
popa
xchg
clc
add
pop
or
dec
inc
xor
pop
lea
xor
out
adc
jmp
pop
inc
mov
in
pop
push
mov
imulb
dec
cmp
add
out
sub
aaa
std
stos
out
lds
rorb
jle
imul
xchg
add
insl
push
stos
mov
out
test
scas
push
cmpb
xor
jns
push
lods
adc
inc
clc
dec
nop
jmp
push
std
fsubrp
adcl
jae
xchg
insb
xor
xchg
std
jge
lds
dec
je
push
jne
lock
dec
movsb
pop
and
daa
xchg
in
nop
aam
push
cmp
mov
push
push
and
rorb
dec
ror
aaa
cmpsl
sub
notb
fbld
es
fwait
jp
adc
mov
lods
and
inc
xor
mov
aad
xor
test
xchg
mov
rorb
je
sbb
pop
ja
int3
fmull
pop
push
xor
jmp
repnz
int3
sub
test
add
incb
add
popa
scas
sbb
dec
imul
inc
je
insb
adc
sbb
sub
and
int3
jo
lret
sarb
js
xchg
fisubrs
pop
ss
aad
es
mov
jae
enter
arpl
fwait
lcall
test
xor
ljmp
fs
fmulp
mov
test
inc
negb
mov
push
pop
das
pop
mov
mov
fdiv
iret
rcr
and
std
xor
out
dec
into
mov
out
inc
call
mov
push
clc
sub
sub
les
ret
rorb
sbb
paddw
popf
les
jnp
xor
icebp
mov
adc
leave
dec
fidivl
cs
imul
aam
les
pusha
lock
test
adc
mov
dec
sbb
shll
jmp
cmp
jns
and
mov
sub
pop
or
sahf
pop
loope
adc
mov
lret
sub
pusha
sbb
psadbw
cmpsb
insl
and
pop
sub
in
pop
ret
xchg
jns
or
in
andl
sub
xor
out
push
jl
sbb
js
or
fyl2xp1
push
in
cmc
clc
fisttpll
popf
xor
jae
stos
add
int
aas
es
fsubrs
imul
add
dec
mov
in
xor
test
pop
loope
cmp
xorps
lret
sar
pop
fidivs
fsubp
jle
outsb
xchg
jno
in
insl
xchg
pop
jo
xor
into
adc
subb
pop
lods
and
xor
jb
sbb
inc
lods
jmp
xchg
jecxz
lock
loope
mov
aam
and
je
outsl
mov
mov
push
lods
or
xchg
in
mov
test
ljmp
xor
or
cmp
ret
push
rolb
outsb
xchg
int
inc
js
in
sbb
sarb
adc
ror
loope
jg
sub
sub
adc
jecxz
or
mov
aad
cmp
test
mov
jne
iret
iret
das
push
or
cmpl
push
or
xor
jnp
stc
dec
je
jae
sti
icebp
cmp
out
inc
xor
jecxz
aaa
out
or
mov
cmp
push
and
pushf
lods
rcrb
mov
jl
dec
pop
jae
cmp
xor
mov
jg
jmp
mov
movsl
mov
vcmpps
push
push
and
jo
loope
cmp
test
and
out
add
mov
mov
adc
fwait
xchg
ret
dec
dec
sub
jle
mov
add
xchg
sbb
pop
dec
pop
push
push
add
dec
sub
dec
pop
add
js
imul
and
dec
std
cmp
push
add
cwtl
seta
das
mov
sbb
popa
or
aaa
shlb
xor
loopne
repz
lock
mov
movsl
cwtl
xorl
enter
mov
dec
lds
pop
shlb
cltd
pop
add
sub
inc
xor
fadds
mov
mov
and
or
gs
push
mov
lods
call
cli
in
aaa
xor
inc
sbb
push
fstps
or
add
scas
cltd
push
pop
xor
fcomps
mov
dec
fs
icebp
aas
cltd
adc
fdivp
sbb
add
jbe
loopne
in
xchg
outsb
push
es
dec
xchg
pop
hlt
mov
push
and
cmc
push
jbe
xchg
jo
push
push
push
cmp
lock
int
mov
int
mulb
jge
aaa
lahf
push
and
cmpsl
inc
xchg
mov
sub
xor
xchg
sbb
nop
int
cmp
stc
jp
pop
ret
ljmp
inc
lret
mov
aam
pop
test
call
push
pop
jns
loop
test
lret
jp
int
jb
pop
icebp
xlat
pop
lret
sub
je
push
adc
cmpsl
lods
cltd
lock
fstl
std
xor
and
ss
mov
adc
cs
lahf
or
mov
rcl
add
out
flds
mov
push
adc
mov
sbb
inc
inc
mov
iret
cmp
push
and
inc
push
push
nopl
lahf
xchg
fistpll
jns
cmpsl
lcall
loop
ret
and
mov
xor
adc
lea
lds
xchg
movsb
fwait
aas
adc
std
movsl
pusha
pop
fisttpll
jno
imul
sub
daa
out
sbb
sarb
or
jmp
lock
jp
mov
xor
sub
das
push
dec
into
arpl
outsl
loopne
fildll
mov
add
mov
lcall
nop
xchg
imul
fisubl
rcrl
bound
pop
inc
push
into
enter
movsb
fs
insb
sub
push
cmp
cmpsl
push
loopne
test
in
insl
or
test
add
sub
push
clc
jmp
dec
inc
std
mov
std
pop
adc
inc
pop
pop
add
mov
mov
sub
sbb
jnp
inc
xchg
shl
mulb
movsb
daa
imul
adcl
out
push
sbb
add
mov
pop
mov
push
pop
stos
dec
and
inc
repz
push
mov
add
lock
ficomps
inc
jnp
ror
mov
xorb
mov
stos
or
test
sbb
bound
jbe
js
inc
jb
aad
pop
xchg
out
pop
mov
ja
and
mulw
mov
mov
xor
out
and
or
push
cmp
imul
adc
mov
rclb
mov
sub
in
ljmp
jb,pn
push
pop
pop
popa
dec
sub
jle
addr16
xchg
sbb
bound
fldl
push
ja
insl
out
cld
fimuls
xor
test
xor
incb
cmp
push
mov
in
fs
movsl
cmpsl
sub
sbb
push
cmpl
addb
dec
insl
std
inc
xchg
push
mov
mov
sbb
push
push
dec
mov
int
mov
and
pusha
add
enter
cltd
lods
inc
xchg
jbe
dec
in
lcall
xor
xchg
pusha
stos
add
sbb
fcomp
mov
imul
lret
xchg
xchg
dec
dec
jb
imul
in
in
jmp
pop
call
jmp
pextrw
or
pop
cmpsl
add
push
sbb
jne
pop
daa
fsubrs
xchg
rclb
mov
fwait
aam
push
and
pop
push
sti
leave
fstp
nop
jbe
mov
jns
or
mov
iret
mov
and
aaa
mov
or
mov
gs
inc
and
fdivr
orl
fldl
in
adcb
or
or
inc
sbb
dec
dec
in
mov
loop
and
aam
mov
jg
adc
movups
sbb
ds
dec
data16
ljmp
and
jp
test
ret
sub
inc
xchg
fmul
or
repnz
or
xor
icebp
or
int3
in
sbb
shlb
dec
cmp
hlt
sti
pusha
add
inc
icebp
out
push
jmp
je
mov
test
xchg
add
mov
xchg
enter
cmp
sub
and
andb
mov
dec
mov
push
inc
in
xchg
pop
pop
xchg
and
and
mov
sub
ret
mov
push
and
je
mov
push
jmp
lret
xchg
aad
add
jle
adc
insl
jl
mov
outsb
jns
mov
push
enter
repz
pop
sbb
xchg
ljmp
push
lods
dec
pop
sbb
or
addr16
test
jp
sbb
leave
or
cld
pop
lea
sub
ret
repz
test
cs
fisttpl
sub
or
ljmp
nop
inc
sub
add
insb
bound
stos
test
mov
ror
push
mov
lods
mov
lea
lea
arpl
xlat
andl
dec
or
out
or
rcll
aam
xchg
or
imul
pop
mov
in
and
cmp
adcl
imul
fldz
test
jo
icebp
push
pop
cmp
in
cmc
addr16
cwtd
pop
mov
pop
xlat
fcmovnb
stc
push
ret
imul
mov
sbb
out
out
cmp
push
jne
mov
sub
into
mov
loopne
lcall
inc
imul
mov
inc
dec
mov
add
pop
lods
inc
dec
pusha
mov
dec
mov
jp
mov
popa
insb
into
scas
into
cltd
and
xchg
psllq
xchg
bnd
pop
in
mov
ljmp
push
arpl
inc
rcl
cmc
icebp
mov
nop
loopne
out
int
out
cli
and
jno
add
xchg
and
addr16
or
in
lea
fidivrs
and
xchg
add
ja
cmp
add
jnp
ljmp
sbb
ljmp
sub
and
shrb
in
add
push
push
outsl
push
mov
js
sub
sbb
adc
scas
push
inc
stc
jecxz
cmpl
sbb
enter
adc
mov
jnp
out
add
mov
test
lea
lahf
lea
pop
xchg
dec
clc
rcll
je
jg
scas
mov
in
sti
std
es
push
sarb
xchg
cld
sbb
test
mov
cwtl
add
hlt
lea
insb
inc
push
cmc
mov
inc
add
arpl
push
pop
nop
adc
jmp
sbb
fldenv
sub
scas
dec
pop
dec
jg
adc
inc
mov
jo
mov
mov
icebp
cmc
lcall
cmp
or
rolb
jo
stc
cld
jl
stc
insb
jge
jns
push
ret
jp
neg
add
push
test
out
nop
addr16
mov
bound
pop
loop
adc
xchg
mov
in
pop
mov
xchg
std
sbb
adc
and
negl
pop
out
jecxz
rclb
icebp
mov
int
rcl
inc
lods
add
add
cmc
arpl
sub
add
ljmp
jle
jo
mov
sbb
inc
int
cli
push
mov
popl
ret
scas
jl
mov
ss
push
xor
pop
push
int3
ret
inc
data16
lods
pop
shrl
adc
in
sub
test
ret
cmc
orb
outsl
pop
pop
sub
adc
mov
add
add
rcrl
mov
mov
cmpsb
popa
sbb
cli
in
in
std
into
inc
sbb
xchg
cmp
mov
ret
sti
inc
outsl
xchg
push
cmp
dec
and
inc
test
pop
mov
xor
andl
dec
push
inc
daa
out
cmp
add
cmp
or
push
sub
mov
mov
stos
and
sarb
movsl
mov
mov
xchg
movsb
ja
sbb
xchg
divb
cli
inc
fidivrl
test
test
pop
insb
adc
pusha
vmread
int
lret
int3
hlt
lahf
leave
scas
mov
in
insb
test
push
ret
addl
pusha
pop
mov
aam
and
shlb
jle
imul
leave
out
mov
cli
sahf
or
int3
xlat
imul
adc
int
add
sahf
and
ss
cmp
adc
adc
jl
daa
icebp
ret
cli
xor
xor
add
stc
add
in
xchg
sub
lret
lahf
inc
stos
out
in
cwtl
call
stc
call
sti
in
mov
pop
mov
das
sbb
pushf
ljmp
imul
or
jmp
sub
adc
push
notl
mov
mov
xor
fmuls
push
pop
fnsave
enter
pop
adc
lcall
ficoml
xchg
adc
movsl
inc
insb
std
daa
lods
or
jb
loop
mov
mov
rolb
ja
cmp
or
xchg
cmpsl
lret
mov
sbb
cmp
rclb
pop
js
in
or
iret
das
jge
jge
outsl
mov
adc
xchg
sbb
shl
mov
jb
movsl
adc
iret
imul
pop
aaa
xchg
mov
bound
shrl
mov
mov
test
mov
adc
cltd
fwait
movsb
xchg
fbstp
inc
data16
pop
push
mov
pop
fs
outsb
mov
xchg
outsl
xlat
jle
add
dec
shll
jnp
addb
push
mov
fstl
dec
mov
or
in
xchg
push
add
jnp
repz
fidivl
test
divb
lds
jne
add
enter
add
xchg
addl
frstor
mov
fwait
sahf
clc
fstpl
stc
push
push
es
data16
jnp
imul
jge
or
js
push
xchg
stos
dec
push
mov
sahf
cmp
adc
push
jae
mull
out
aad
shll
std
dec
xor
jl
mov
jne
push
xor
sbb
andl
cmp
sbb
out
frndint
cld
add
nop
sbb
outsb
cmp
jmp
adc
jb
sbb
mov
dec
sti
shlb
dec
mov
lods
addl
cmp
aad
mov
pop
sub
and
movsl
jg
insb
fnstsw
lcall
sbb
sbb
or
pop
aad
repz
lcall
arpl
mov
out
inc
mov
pop
pop
imul
mov
mov
inc
loope
xchg
inc
dec
cmp
xchg
cmp
add
sbb
fldl
or
test
jg
pop
or
pop
xor
lahf
scas
lahf
mov
and
gs
adc
mov
push
lret
mov
scas
std
das
and
pop
or
arpl
mov
jae
jp
imul
mov
cwtl
cwtl
outsl
dec
lods
cmp
mov
hlt
hlt
imul
imull
add
aad
ud2
jle
xlat
pop
in
lcall
xlat
fwait
les
push
adc
in
mov
xor
and
ds
jecxz
test
cwtl
imulb
inc
mov
popf
loope
inc
mov
add
call
push
sub
jg
jmp
push
adc
inc
test
ss
sbb
out
mov
pop
out
and
popf
inc
fsubp
repnz
out
mov
and
mov
test
out
inc
jns
cmpl
sarb
xchg
lret
pop
xchg
mov
bound
test
lods
stos
add
sbb
repnz
add
push
add
sub
inc
mov
stos
lock
adc
xchg
mov
daa
cmp
jmp
in
pop
test
ljmp
cmp
mov
fwait
leave
xchg
xor
inc
ffreep
popa
fs
add
daa
mov
jmp
bound
dec
movsb
sbb
sahf
xor
adc
ljmp
enter
lods
push
sbb
cwtl
ja
push
jo,pt
int
or
xchg
jns
push
shlb
mov
icebp
les
add
mov
lock
jge
jnp
pop
mov
adc
cltd
cs
add
and
add
cmp
fsubl
dec
ss
out
jmp
test
aaa
nop
mov
aaa
andb
mov
xchg
xchg
movl
dec
mov
mov
mov
dec
js
adc
jnp
lock
les
aad
fisubl
std
sti
pusha
mov
lds
fiaddl
push
fisttpl
pop
xchg
mov
adc
das
pop
xchg
inc
imul
pop
mov
push
ffree
inc
push
fwait
gs
or
cmp
push
pop
cmpsl
mov
push
dec
dec
mov
pop
loopne
pop
imul
stc
clc
inc
decl
addr16
xlat
pop
fs
popa
ret
rorb
adcb
in
js
xor
inc
cmp
sahf
jge
dec
test
mov
clc
jl
fdivl
pushf
nop
jecxz
mov
das
loop
shr
mov
pop
ss
cmp
cmp
adc
enter
int
push
shrb
orb
mov
pushl
mov
inc
out
jg
mov
add
sti
jp
ret
imul
jmp
cmp
inc
or
shrb
roll
stos
stc
test
fwait
sbb
mov
fsubrl
inc
test
dec
stos
cltd
mov
jecxz
mov
and
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fldenv
js
icebp
fidivrs
jge
or
jp
inc
mov
pop
mov
fiaddl
sub
mov
popa
sti
js
sarb
pop
clc
js
mov
push
mov
add
pop
aam
add
sbb
lds
das
mov
fnstsw
or
fdivp
aam
imul
mov
pop
sub
mov
push
movsb
pop
aam
ret
inc
stos
push
cmp
pop
loop
xchg
flds
sti
push
fwait
mov
dec
fldl
gs
jle
mov
mov
xchg
loopne
andb
movsl
inc
cwtl
scas
mov
mov
add
and
add
mov
mov
inc
bound
or
imul
add
push
sbb
xor
adc
pop
dec
push
loope
cltd
pop
lret
dec
lock
or
out
sbb
cmpsb
scas
out
out
scas
rcll
sarl
mov
xchg
movsb
insl
sahf
xor
and
imul
mov
lea
mov
in
pop
mov
jb
jb
pop
pusha
scas
push
or
push
pop
fsts
jecxz
cmp
xchg
push
jg
jbe
popf
mov
add
retw
cmp
adc
in
out
inc
xchg
mov
push
add
adc
sahf
repnz
dec
xchg
push
or
jae
fnsetpm(287
popa
mov
jle
xor
cmpsb
test
inc
jecxz
fwait
insb
mov
mov
ja
inc
sbb
dec
repz
popa
ss
pop
add
pop
rolb
bound
fucomp
mov
push
and
clc
inc
xlat
push
mov
pusha
sub
jbe
cmp
das
push
mull
xchg
xchg
add
xchg
xor
cmpsb
pop
data16
mov
add
and
dec
mov
mov
pop
dec
cmc
mov
mov
cmc
inc
cmpsl
mov
adc
sub
pushf
xchg
sbb
adc
inc
rcr
lret
mov
mov
push
mov
mov
or
adc
lret
sub
xlat
jb
xchg
test
push
push
mov
cld
lret
cmp
lock
int3
pushf
in
xlat
rorb
clc
sbb
sysenter
inc
xchg
mov
movsl
mov
into
jg
mov
adc
inc
negl
mov
dec
sbb
push
or
aad
lods
aaa
dec
je
out
fimull
hlt
push
xor
les
aas
into
pop
ret
ljmp
xor
mov
dec
pop
jge
sbb
mov
rol
dec
sbb
outsl
cmp
or
int3
pusha
mov
dec
push
add
dec
xorl
lahf
push
mov
test
es
pop
inc
add
mov
pop
sbb
sbbl
hlt
in
repnz
ret
lock
je
test
pop
inc
es
aas
mov
or
sub
std
jl
add
sbb
mov
or
das
xchg
push
or
bound
inc
sbb
pop
jnp
push
push
fistpl
movsb
or
shlb
jg
movsb
cmp
dec
pop
sub
outsb
inc
sti
jge
dec
xor
add
lret
inc
sub
test
imul
pusha
pop
and
cmp
push
int3
data16
popa
jmp
xor
movsl
sbb
cmpsb
push
mov
icebp
jl
xor
mov
xchg
test
imulb
es
movsl
push
xchg
in
std
sar
popa
lcall
xor
add
fs
cs
add
pop
out
pand
aas
sub
fmuls
mov
imul
jmp
cld
in
mov
fidivs
sub
lret
mov
adc
rolb
mov
stc
jp
push
es
add
int
es
xor
mov
mov
fwait
movq
xchg
fistpll
sub
sub
adc
push
add
fistps
dec
adc
sahf
nop
mov
mov
into
out
and
lcall
stos
sub
mov
pop
loope
fwait
pop
mov
xlat
push
test
cmp
push
push
lret
push
ljmp
sbb
push
lret
fisubs
push
and
adc
adc
pop
inc
loop
mov
sbb
or
cs
push
xchg
hlt
push
cmpl
dec
and
or
xchg
int
enter
and
hlt
jo
popf
mov
cmpb
jg
add
jle
fnsave
aad
aad
pop
insb
push
shll
cmp
sub
sti
ljmp
mov
add
lods
shlb
jge
jecxz
out
cmpsl
out
mov
xchg
inc
bnd
adc
cltd
int
sbb
xchg
fadds
add
daa
js
or
inc
stos
pop
xchg
mov
mov
adc
sbbb
ja
clc
cmp
out
cmp
sub
xchg
mov
loope
mov
mov
add
adc
push
test
sarl
mov
add
mov
cli
andl
mov
lahf
outsb
xor
movsb
cld
adc
icebp
jp
shrb
push
aaa
jle
rcrl
push
pop
jbe
xor
inc
mov
popf
icebp
cli
add
push
jbe
mov
popa
mov
int3
pop
xor
dec
xchg
adc
xor
dec
mov
or
dec
fnsave
pop
movsb
xchg
inc
push
lea
into
lahf
and
mov
mov
mov
in
ret
lods
sarb
jecxz
jmp
outsb
jp
cltd
dec
gs
call
mov
xchg
push
dec
iret
fadds
cwtl
inc
sarl
sub
inc
mov
push
fdivrp
movsb
popf
div
mov
pop
daa
dec
cmp
ja
push
cli
mov
xor
out
mov
xchg
fisubs
pop
es
sub
xor
out
or
aam
cwtl
inc
in
testb
jae
dec
pop
pop
out
adc
and
stc
mov
mov
imul
arpl
std
ret
loop
scas
test
pop
mov
je
sbb
mov
je
cli
jo
leave
pcmpgtb
paddd
roll
xor
cmc
lds
pop
sbb
cli
xor
ljmp
pop
xor
jle
leave
sub
aaa
adc
push
test
adc
stc
inc
or
hlt
out
xor
divb
out
lret
add
sar
or
loop
cmpsl
adc
rcll
lock
push
aad
dec
fisttps
jbe
fisttpl
sti
jle
test
adc
dec
xchg
gs
scas
inc
leave
jae
test
adc
popl
xchg
dec
sub
or
xchg
push
jl
out
out
inc
add
enter
std
push
dec
xchg
imul
mov
mov
in
or
sub
aaa
lahf
cmp
mov
test
insl
clc
jnp
loop
lea
sub
fwait
jp
adc
add
push
push
and
adc
pop
scas
hlt
cmpsb
jne
xchg
repnz
or
fstpl
jecxz
push
inc
leave
jp
xchg
push
inc
jbe
lods
sub
scas
dec
or
in
popl
in
adc
or
sarb
mov
sbbl
jno
hlt
cltd
lods
sub
cmp
clc
dec
cwtl
adc
xchg
xchg
add
leave
inc
dec
cltd
adc
loope
or
hlt
mov
popf
js
ss
jbe
pop
sti
rcr
pop
mov
inc
fcmovnu
xorl
and
mov
fldl
pop
ljmp
cmp
out
hlt
mov
adc
mov
sub
mov
pop
mov
in
enter
and
xor
es
fisttps
call
push
bnd
dec
das
fcmovbe
sub
cwtl
movsb
adc
das
push
mov
aas
cld
inc
popf
xchg
ret
inc
je
pop
mov
lret
dec
ljmp
jo
cld
lock
xchg
addr16
test
sub
push
mov
lea
sub
adc
and
pslld
shrb
adc
clc
inc
add
out
mov
imul
mov
sbb
or
jle
sbb
and
leave
push
push
scas
sbb
shl
lds
ret
int3
jae
jnp
mov
pop
dec
sub
dec
xor
lods
mov
add
xchg
push
es
lret
mov
out
les
stos
idivl
test
mov
xor
xchg
sub
push
dec
dec
iret
xchg
jo
lods
lcall
push
in
negb
pop
jbe
jge
adc
xor
sub
xchg
or
scas
pop
cmp
xor
leave
pop
jl
push
outsl
inc
add
adc
jmp
cmp
mov
lret
add
setg
lods
jns
mov
fmulp
mov
hlt
mov
and
sbb
icebp
movsb
imul
lds
adc
mov
int3
mov
push
rorl
mov
std
jnp
scas
aam
xchg
pop
bnd
cmp
adc
jle
stos
cmp
cld
sub
inc
ja
jge
or
push
cltd
jge
jge
cs
std
dec
xchg
negb
pop
sti
cwtl
das
mov
mov
xchg
jns
and
rol
outsl
lcall
and
or
les
or
mov
sarb
pop
inc
lods
fbld
testb
aad
lret
mov
in
mov
inc
xor
mov
dec
cmp
loope
or
and
lret
leave
mov
and
jecxz
out
movsb
xchg
cmpsb
mov
lds
out
inc
mov
push
shlb
test
mov
dec
push
inc
mov
bnd
xor
fiadds
int3
int
pop
jg
es
and
jbe
inc
clc
loopne
push
ds
outsb
mov
out
push
gs
scas
pop
xor
xchg
repz
mov
mov
mov
add
dec
or
imul
imul
push
push
das
dec
in
xor
imul
adc
cmc
pop
sub
leave
adc
xor
cltd
test
inc
lahf
sbb
cld
lahf
aas
mov
mov
cmp
popa
cmp
lock
ret
into
incl
dec
sub
andl
cmpsb
xchg
jno
stc
shrl
jle
pop
xchg
xchg
sbb
xchg
pop
pop
dec
jb
mov
insb
out
nop
mov
xchg
jns
mov
cmp
das
dec
dec
scas
pop
pushf
adc
jnp
mov
cmpsl
xor
std
sahf
xor
sbb
ds
cmp
and
sahf
fisttpl
xchg
mov
sub
xchg
fdiv
mov
cli
shl
xchg
mov
cs
test
xchg
outsl
add
imul
cmp
outsl
xor
dec
pop
out
fs
insb
gs
push
cmp
rcrb
mov
push
stos
rorl
ljmp
jns
lds
int
pop
sbb
mov
add
push
mov
mov
dec
mov
movsb
fildl
lods
xchg
xor
scas
pop
outsb
jb
divb
pusha
mov
movsl
call
lret
adc
cmp
ret
cmp
xchg
je
jg
shll
fwait
aad
stc
lret
inc
adc
movsl
adc
xchg
add
leave
fcmovnb
in
subb
pop
or
cmpsl
ret
jmp
cli
dec
rcrb
icebp
xchg
cmpsb
je
sti
repnz
xchg
push
repz
movsl
ds
cmpsb
pushf
sub
mov
xchg
mov
fisubrs
sub
dec
jo
dec
js
int
iret
sub
pop
cld
push
mov
adc
adc
inc
xchg
lahf
pop
stos
mov
hlt
jns
insb
or
js
ret
fwait
mov
jmp
fildll
and
xor
fisubrs
ljmp
xchg
fwait
cmp
add
cwtl
std
push
push
sub
leave
sbb
sbb
cld
inc
dec
sub
in
add
call
aaa
mov
push
repz
imul
or
add
xacquire
pop
xchg
stos
pop
xchg
in
stc
or
sahf
adc
pop
dec
lret
into
fisubrl
cmpsb
sbb
xchg
jae
mov
ficompl
and
cwtl
fs
adc
mov
adc
sahf
xor
inc
shl
mov
adc
sub
out
jnp
jb
adc
imul
sbb
adc
dec
sbb
mov
mov
pop
mov
dec
bound
and
push
add
imul
outsl
lock
adc
cmp
xor
les
dec
nop
xchg
mov
test
icebp
inc
scas
outsb
outsb
jmp
cmp
fisubrs
les
fdivs
add
jo
mov
mov
clc
cli
dec
fsubrs
decb
jl
push
rcll
and
stos
test
push
push
push
mov
das
xchg
stc
in
mov
sub
js
fdivrl
mov
stc
leave
mov
int
andl
dec
lock
cmp
push
inc
jo
mov
pop
negl
bound
sti
dec
sub
cli
or
lods
lret
loop
das
xor
and
popa
xchg
icebp
push
dec
push
jno
xchg
inc
push
pushw
aas
loop
aaa
or
sbb
cwtl
fcompl
rorb
adc
or
xor
fsubs
outsl
xlat
nop
jns
test
in
and
jb
js
in
inc
and
arpl
aam
push
cmc
push
cmpsb
push
stos
cmp
or
xor
repnz
cltd
das
sbb
mov
repnz
test
mov
inc
add
pop
iret
mov
jmp
lods
test
add
mov
fdivr
cmc
pop
and
add
pop
push
pop
jae
negb
adc
fcoms
pop
fsubr
fistps
push
insb
imulb
pop
repz
mov
pop
shr
inc
mul
xchg
enter
mov
call
ds
push
mov
mov
ljmp
xchg
enter
fxam
push
fwait
divl
shlb
scas
movsb
xchg
scas
xor
add
add
lods
jbe
test
lds
push
mov
push
repz
and
push
jne
sbb
xlat
adc
clc
cmp
inc
divb
lock
test
dec
std
pop
xchg
lea
cmpsb
inc
aam
or
push
js
cmp
cmp
jecxz
clc
jecxz
xor
outsb
inc
xchg
scas
imul
push
jge
pusha
jno
cs
lcall
push
jge
sub
ss
push
mov
std
inc
xchg
pop
scas
or
andl
jle
mov
push
lcall
jnp
xor
int3
pop
sub
or
adc
sahf
push
cmp
jae
mov
xchg
add
sub
jb
outsl
fs
imul
mov
andl
popf
adc
lock
loop
xchg
cmp
roll
std
fwait
ret
jae
push
sbb
and
sub
cmpsb
sbb
jb
sti
mov
into
sub
ret
dec
bound
test
jmp
pop
dec
pop
xchg
rcl
imulb
repz
std
jg
popa
xchg
idivl
xchg
aad
movsl
lds
pop
inc
add
pusha
inc
movsb
das
addr16
addl
stos
push
inc
mov
imul
loope
adc
dec
ss
inc
mov
cli
mov
dec
jle
lretw
push
add
xlat
test
ret
aam
out
bound
mov
sub
xor
scas
leave
call
ret
lret
clc
fwait
pusha
lret
sub
shll
sbb
daa
sbb
pop
push
mov
sbb
dec
and
mov
in
insb
jmp
inc
xchg
dec
int
enter
cwtl
mov
mov
ja
loop
sbb
jmp
mov
nop
mov
adc
je
jne
sbbl
int3
push
jns
outsl
adc
stos
xchg
orl
int3
and
fdivrl
xchg
mov
jbe
scas
lret
jns
mov
inc
sbbl
lods
mov
in
dec
test
push
push
push
push
fcompl
imul
fmuls
sub
pop
xor
push
adc
and
insl
test
jnp
xor
sbb
mov
mov
xchg
jle
clc
xorl
in
push
lret
clc
punpckhwd
ss
pop
push
push
inc
jmp
loopne
cltd
xchg
test
je
shlb
mov
or
cmp
ljmp
outsb
cmc
call
xchg
cltd
xor
add
push
lea
pop
popa
push
xchg
cmp
mov
test
pop
sbb
add
jp
xchg
dec
cwtl
sbb
lock
cmpsl
hlt
pop
in
test
lahf
mov
xchg
pushf
pop
push
xchg
dec
xor
icebp
xor
mov
aad
pop
cmp
pop
sbb
es
and
sub
fmull
int
pop
shll
add
enter
gs
fbstp
jo
mov
pop
inc
lds
mov
out
pushf
or
inc
sub
cmpb
shl
fists
mov
mov
sbbb
mov
stos
ret
pop
lcall
inc
mov
jg
push
jp
mov
cmpsl
test
das
push
dec
inc
nop
xchg
scas
sub
inc
cs
leave
aam
inc
xor
in
xor
mov
jb
ljmp
test
pop
das
pop
popf
rorl
or
mov
jge
dec
fsubs
addb
pop
xchg
add
es
int3
movb
add
ja
loopne
inc
pop
ds
stc
xchg
mov
adc
ljmp
fcomps
sbb
imul
xor
mov
movzbl
mov
inc
fiaddl
cltd
cmpsl
xchg
sti
pusha
mov
daa
sub
jo
test
inc
xlat
daa
xchg
out
jmp
adc
xor
cmp
out
mov
in
leave
rcrl
xor
push
repnz
push
cmp
cltd
xor
push
and
adc
insl
fstpl
xor
add
fidivs
call
dec
jae
ficoms
xchg
test
ficoml
popf
pop
popa
xchg
repnz
xchg
adc
or
cmp
sub
js
inc
add
mov
cli
push
add
daa
pop
hlt
dec
mov
mov
jmp
xchg
or
pop
fldenv
mov
das
cmc
lcall
fldl
std
jmp
loope
sahf
movsb
inc
lods
enter
call
test
out
loope
ljmp
xlat
notb
out
cwtl
inc
lcall
ljmp
cld
mov
shll
mov
arpl
fcompl
adc
dec
rorl
test
or
lods
fstps
add
ds
cmp
ficompl
aad
xor
cmp
aas
jbe
out
lahf
mov
mov
xor
adc
or
mov
stos
out
dec
stc
xchg
ss
fwait
clc
dec
cld
pusha
addr16
or
cmp
mov
xchg
cmpsl
mov
dec
rcrl
xor
bound
outsl
arpl
pop
mov
cs
stos
cmc
in
mov
int3
xchg
sub
jecxz
popa
and
adc
and
xlat
cmc
pop
or
in
rcl
push
lds
push
test
rcrb
mov
rolb
dec
pop
outsl
ljmp
adc
cmp
jg
add
leave
mov
sbb
or
mov
jo
jp
lret
int
jnp
inc
jecxz
jl
cmpsl
or
mov
outsb
xchg
xchg
mov
push
and
das
or
out
mov
adc
stc
inc
loopne
push
daa
jp
js
pop
pop
dec
das
sbb
sbb
repz
inc
dec
loopne
imul
inc
das
les
xor
mov
pop
fstpt
cmp
test
inc
ja
movsl
outsl
xchg
jmp
mov
xlat
icebp
pop
mov
mov
insl
dec
xlat
aad
xor
fisttpll
or
cmp
stos
push
ja
jae
push
in
jle
inc
jmp
dec
dec
insl
lret
repnz
sbb
jmp
sbb
into
outsl
iret
vpsubq
int3
mov
jno
iret
push
or
popa
mov
jb
es
cli
orl
je
mov
xor
sub
roll
jg
sbb
add
test
or
jmp
stc
clc
arpl
scas
mov
xchg
fcmovbe
jns
mov
pop
sbb
rclb
lock
sub
out
push
fs
xor
out
inc
jbe
adc
pop
insl
add
mov
lcall
xorb
fidivrs
sti
push
jecxz
pop
pop
dec
lcall
dec
push
jae
jne
aas
sub
test
push
xor
mov
stos
cmp
dec
sub
inc
out
jno
cmp
xorl
inc
jns
imul
push
lods
sub
mov
sbb
push
divb
fistps
dec
push
or
xchg
push
sbbw
pop
and
mov
cmp
lds
shll
cmp
sti
cmp
mov
int3
repz
push
mov
mov
jb
add
repnz
fs
dec
int
fcoml
jns
jno
push
cmp
adc
mov
shll
or
roll
mov
fwait
push
fisubrs
popa
mov
sub
pop
pushf
inc
test
pop
inc
stos
test
mov
cmp
sub
and
push
jle
aad
lock
lods
jns
xchg
movb
fdivp
or
xor
dec
je
pop
cmp
imul
mov
stos
repnz
cmp
leave
adc
repnz
sub
sub
push
fwait
push
adc
sbb
ret
fmul
sbb
mov
outsb
inc
int3
rcrl
sbb
mov
sbb
mov
scas
scas
jg
push
cli
popf
ret
pop
jmp
mov
mov
jae
test
sub
xor
fsubl
hlt
outsl
pop
jl
dec
shr
xchg
mov
ret
and
loop
in
imul
stos
pop
fldcw
cli
sbb
sub
divl
jno
loop
mov
pop
lock
and
mov
add
out
pop
jno
adc
jge
cmpps
test
les
push
jmp
mov
sti
fwait
pusha
mulb
mov
inc
mov
add
mov
mov
jne
push
adc
ficompl
push
pop
mov
sub
int
cld
sarb
xor
loop
cwtl
xchg
sarb
adc
inc
xchg
pushf
mov
inc
outsb
ret
lahf
adc
out
test
or
dec
arpl
jmp
fcmovb
cmpsb
jp
std
mov
mov
jmp
lock
cmp
dec
js
mov
or
pop
sti
mov
lds
sbbl
cmp
dec
dec
fbld
mov
add
xchg
in
pop
ficoml
je
pop
int3
jbe
andl
mov
popf
xchg
push
in
imul
mov
inc
mov
add
sbbb
addr16
mov
or
and
sub
testb
ljmp
push
and
aas
fdivr
jns
jmp
mov
loopne
add
add
mov
cld
push
dec
fs
out
lods
mov
test
sbb
lret
jne
dec
push
and
outsb
xor
enter
and
cmp
xor
ds
xchg
jle
inc
adc
ret
sub
mov
sahf
mov
push
mov
pusha
arpl
sahf
cli
add
dec
or
push
xchg
fldenv
pop
test
incb
jnp
or
movsl
popf
mov
hlt
push
popl
and
push
into
rcrb
jb
jge
jl
mov
cmp
or
mov
jge
test
ljmp
fwait
mov
aam
xchg
pushf
fsubs
sbb
xchg
inc
mov
aad
sub
les
je
jg
cld
push
popa
xchg
mov
mov
cmp
sbb
xchg
insl
cmp
sbb
cwtl
les
inc
jle
dec
dec
sub
mov
jae
xchg
sbb
bound
mov
dec
push
push
adc
fists
out
xor
out
out
gs
cli
cmpsb
jne
scas
daa
mov
sbb
push
setne
sbb
cmp
loopne
rcll
sbb
push
rorb
iret
mov
mulb
ljmp
sub
lds
jo
dec
add
and
mov
xchg
jmp
lret
fcoml
je
std
insb
mov
loopne
pusha
pop
lcall
jb
fwait
xor
inc
and
cmpb
movsl
ret
mov
jl
cmpsl
xchg
fs
jo
dec
sub
cmp
push
mov
hlt
sbb
push
sti
rclb
jmp
nop
mov
inc
jns
fadds
jg
gs
jmp
into
movsb
cmp
add
sbb
xor
jmp
add
inc
jo
rcll
mov
adcb
lea
arpl
sub
mov
bnd
add
jmp
mov
js
add
dec
dec
bound
add
dec
js
sbb
push
mov
ja
or
or
sub
push
cmp
push
add
ret
sahf
jae
cmp
pop
nop
lret
rol
imul
int3
mov
jno
rclb
xchg
shll
mov
sub
jo
push
addb
fldcw
and
outsb
xor
popa
adc
and
mov
push
sbb
add
mov
ret
clc
jmp
mov
inc
mov
sbb
add
fisubs
iret
mov
pop
xabort
push
lea
and
sbb
sub
sub
push
loopne
xorb
lret
inc
sub
jg
jae
bound
mov
sub
pusha
or
sub
pop
push
inc
xchg
leave
int
or
arpl
ret
cwtl
xchg
lock
xchg
cmpsl
jae
inc
mov
pop
sbb
test
mov
nop
rep
adc
inc
push
mov
inc
test
mov
or
adc
mov
xor
mov
sub
jo
mov
lods
sub
sbb
shlb
jae
call
dec
dec
stos
push
movsb
jg
dec
icebp
sbb
mov
mov
jge
push
xchg
lret
ror
cmp
cli
pusha
dec
rolb
in
stc
pushf
lcall
aam
cld
lea
aad
loope
sbb
std
push
ds
and
inc
jns
sub
mov
pop
cmp
or
jecxz
cwtl
push
inc
adc
xorb
pop
das
mov
mov
dec
jae
add
inc
loop
cmp
xor
iret
jno
fnstcw
inc
and
dec
sub
push
je
xor
nop
js
mov
push
sbb
notl
cltd
cmp
iret
jp
lods
cmp
orl
adc
jge
jo
sbb
adc
sbb
xchg
xchg
ja
shrl
push
outsl
insb
sarl
outsb
inc
mov
xor
lret
jnp
mov
cmp
arpl
inc
aas
and
push
inc
xchg
sub
jmp
mov
pop
popf
adc
stc
push
xor
push
mov
xchg
decb
out
fldl
cmp
mov
cli
sbb
xor
pop
and
add
sahf
mov
cld
lret
fucomi
xchg
jge
cwtl
inc
jl
fisubrl
mov
lret
dec
adc
shll
leave
insb
das
add
das
mov
pusha
iret
mov
gs
jg
or
xor
pop
mov
inc
adcl
xor
cli
fstps
ret
jno
xlat
repz
lcall
and
leave
pcmpgtw
pop
in
int
push
sbb
fbld
cltd
leave
in
mov
ljmp
push
mov
mov
nop
jmp
sahf
or
xchg
dec
mov
jmp
loop
xor
pop
adc
push
in
icebp
popl
cs
jecxz
ljmp
dec
into
xchg
add
addb
push
adc
or
sbb
aam
xchg
cmpl
sbb
cltd
je
call
and
sub
sbb
in
dec
ret
pop
push
pop
pop
pop
lret
out
dec
aas
std
add
sbb
pusha
loopne
sub
push
xchg
push
lea
call
mov
or
imul
xchg
inc
daa
push
and
inc
pop
sbb
les
in
shl
mov
and
xchg
or
pop
push
rclb
aaa
iret
push
cmp
data16
cld
fbld
mov
xor
jle
add
movsb
mov
fidivs
imul
leave
add
shl
ja
push
dec
add
int
jns
imul
sub
ficoml
loopne
in
test
and
push
outsl
jae
cltd
xor
or
mov
hlt
ret
movsb
aaa
pop
ret
cmpsb
popa
push
sbb
fidivrs
rorl
xor
out
movsl
adc
mov
inc
rol
ret
imul
xlat
and
jo
clc
xchg
pop
push
js
jl
aaa
test
mov
iret
nop
jp
add
lock
mov
mov
sub
or
idivl
mov
js
or
mov
pop
cmp
cmpsl
in
data16
notl
sbb
xor
movsl
adc
mov
add
out
and
in
jb
xor
pop
cmp
cmp
sbb
js
xor
push
cltd
pushf
cltd
sub
sbb
mov
inc
dec
out
dec
jl
pop
jecxz
leave
in
mov
stc
push
in
fdivs
sub
jecxz
js
add
mov
jmp
movsl
mov
dec
imul
fistps
test
int3
mov
xchg
jbe,pn
insl
imul
mov
hlt
stos
ss
mov
movsb
mov
test
jle
pop
add
movsl
mov
mov
sbb
shrb
adc
es
loopne
in
out
sub
imul
mov
fisttpl
ds
dec
cld
add
sbb
push
leave
jmp
adcl
ja
mov
lods
push
mov
sub
sbb
jno
push
andb
fnstsw
test
jnp
or
mov
leave
xor
xor
inc
scas
lret
sbb
pop
ret
stos
jmp
adc
arpl
adcb
pop
pop
mov
sub
call
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
popf
pop
jb
outsb
sbb
jp
pop
jp
adc
lods
push
repz
rorb
mov
dec
dec
jmp
fucompp
mov
xchg
dec
and
out
mov
cmp
inc
cmpsb
jns
mov
adc
addr16
mov
sub
xor
adc
mov
jmp
jae
sbb
iret
test
mov
pop
lods
arpl
shll
push
jg
mov
movsb
fisttpll
lret
inc
sub
xor
test
and
sub
cmp
loopne
es
cltd
sbb
sbb
mov
js
push
daa
mov
out
jno
ret
add
test
imul
mov
movsl
lea
push
mov
push
pop
test
sub
enter
or
cmp
pop
dec
mov
cmp
dec
outsl
lcall
add
test
xor
js
lods
or
cli
jnp
inc
inc
out
scas
mov
mov
divl
xor
mov
out
scas
mov
cmp
gs
pop
inc
adcl
movsb
movsl
add
imul
cmc
jo
xchg
adc
mov
int
xchg
rcrb
mov
and
daa
repz
xchg
jo
xor
and
and
add
movl
ret
and
mov
enter
mov
mov
iret
push
mov
in
mov
mov
repnz
dec
call
js
popa
rclb
mov
aad
fs
jle
fstpt
xor
gs
ljmp
xor
cmp
jl
mov
ja
sub
ror
push
cmpsl
scas
push
outsl
or
sarl
pushf
add
aad
mov
lods
push
in
adc
inc
inc
out
rclb
ficomps
jae
push
add
shrb
orb
scas
pop
inc
push
jno
inc
push
jo
adc
stc
push
loopne
aaa
jo
jge
adc
mov
cltd
dec
jbe
jp
mov
clc
sub
cld
out
cwtl
lcall
lcall
and
and
dec
outsl
xchg
push
inc
pop
inc
nop
adc
testb
lds
mov
mov
in
inc
pop
leave
es
cwtl
neg
jp
and
xor
faddl
out
push
dec
stos
sub
insl
pusha
out
pop
leave
fcmovne
push
push
or
adc
out
jmp
lret
push
sub
adc
cmp
jo
xor
push
movsb
pop
lret
ficoms
mov
sub
mov
test
jo
mov
inc
test
repnz
sbb
out
imul
jb
movsl
push
xor
fimuls
les
int
ret
jns
pop
test
and
jae
push
xor
les
lcall
dec
data16
outsl
jo
icebp
mov
or
aas
outsl
les
push
lahf
inc
inc
test
cmc
pushf
inc
int3
push
fsub
dec
clc
pop
push
ja
inc
bound
pop
mov
adc
les
movsb
mov
jnp
and
pop
shll
inc
xchg
in
adc
jbe
lret
jmp
jae
mov
mov
lahf
into
pop
repz
sbb
imul
jge
inc
mov
ss
fs
shll
into
or
lret
push
rclb
mov
push
sub
cmpsb
loop
mov
mov
lret
sbb
sbb
out
sbb
je
sarb
mov
push
push
jge
rcrl
jo
sub
xchg
test
scas
and
stos
enter
or
dec
inc
fnstsw
mov
repz
or
lock
mov
mov
mov
lret
mov
pop
je
adc
arpl
xchg
cwtl
sar
mov
stos
jb
and
cld
nop
push
out
insl
jmpw
sti
dec
stos
mov
sbb
jne
and
xchg
dec
cmc
rclb
lret
push
ficompl
mov
fmull
loope
outsb
int3
subl
fadd
xor
sti
insb
in
pushf
rolb
hlt
inc
jmp
lret
repnz
imull
lds
jl
stos
push
cmc
loop
fdivr
pop
push
cmp
test
push
or
imul
jg
inc
mov
insl
iret
mov
inc
push
cmp
test
xor
pop
mov
lea
xor
test
pushf
pop
inc
addr16
fsqrt
nop
rolb
mov
mov
ret
jp
cmp
lcall
mov
jno
mov
adc
lret
fmuls
and
xchg
std
loop
dec
jne
push
les
in
roll
aam
mov
loopne
lcall
inc
sub
sbb
and
dec
outsl
int
push
add
sub
xchg
outsb
sbb
test
loopne
add
mov
daa
or
bound
data16
cs
sbbl
xchg
repnz
fsubrs
xchg
xor
sbb
jp
xchg
pop
nop
and
fcompl
pop
or
add
sub
xor
sub
clc
mov
std
adc
add
add
lahf
dec
es
or
mov
popf
adcl
addr16
mov
and
xchg
dec
inc
jno
daa
dec
jne
cmp
loopne
stos
mov
jns
icebp
inc
les
mov
pop
das
push
les
jbe
sbb
inc
aas
cmpsl
dec
fxch
or
repnz
cs
popf
jne
lret
lret
pop
les
adc
or
mov
push
push
adc
arpl
fstps
xor
or
jo
push
test
ss
jbe
pop
insl
cwtl
clc
inc
int
mov
adc
es
sbb
xor
sub
xchg
mov
pusha
pop
push
ret
push
enter
clc
dec
dec
mov
repnz
mov
mov
popa
cmp
test
addr16
pop
out
leave
mov
cmp
mov
ret
mov
jb
lock
and
inc
stos
stc
and
jecxz
sbb
xor
pop
mov
xchg
mov
push
push
sub
jg
xchg
addr16
xchg
cmp
mov
cmp
push
cmpsb
mov
mov
xchg
addr16
jne
mov
test
loop
fisubrs
test
inc
jg
pop
mov
enter
mov
xchg
jmp
les
test
hlt
pop
enter
fisttpl
sahf
lahf
icebp
fwait
mov
and
cmc
loope
arpl
xchg
ja
aad
dec
adc
lea
movsl
or
pop
and
sahf
sbb
in
pop
les
xor
mul
inc
dec
sbb
daa
stos
aas
cwtl
and
push
add
or
shll
je
push
sbb
outsb
movsb
leave
pop
scas
pop
pop
and
pop
dec
divb
cmpsb
and
pop
negl
mov
ret
dec
xchg
aaa
ret
mov
push
sti
push
sbb
ret
or
adc
jne
mov
lods
jae
adc
inc
std
mov
xor
xchg
sub
xor
ret
sbb
jg
xchg
popl
repnz
or
adc
mov
out
or
push
movsl
push
ja
aad
int3
lods
lods
mov
std
call
gs
cmp
push
cmpsb
or
pop
dec
aaa
push
mov
call
pop
inc
xchg
mov
mov
inc
test
loop
sub
lret
popfw
mov
mov
pmulhw
scas
pop
arpl
es
imul
jmp
or
cmpxchg
xchg
jnp
and
popa
add
sub
in
add
enter
jp
cwtl
xchg
pop
lock
dec
mov
out
mov
shrl
sbb
adc
mov
or
sbb
mov
inc
mov
xchg
std
mov
ds
scas
inc
aas
and
bound
or
push
adc
fisttpll
adcb
sub
loope
cmp
lods
addr16
data16
sub
sahf
repz
lcall
arpl
cmp
push
imul
dec
sub
mov
jnp
ljmp
sbb
sbb
cld
mov
fmull
push
aad
xchg
cltd
dec
fucomp
lods
repnz
stos
stos
jl
cs
lods
ds
les
les
pop
mov
lcall
and
mov
and
les
arpl
mov
fld
lretw
sbb
or
lock
pop
adc
inc
mov
mov
and
cld
ret
andl
mov
jle
jmp
in
xor
dec
inc
shr
pushf
mov
mov
sbb
sti
jns
push
andb
pop
pop
pop
insb
cli
sbb
pop
push
cmp
push
cmp
gs
es
jne
sbb
cmc
enter
adc
addb
cmp
mov
ret
orl
mov
and
dec
or
addr16
mov
cmp
add
adc
xchg
jno
mov
push
xor
push
push
dec
scas
shll
into
scas
xchg
push
mov
push
xchg
insl
xchg
add
dec
xchg
sub
enterw
test
push
lock
pop
outsl
stos
xchg
lret
jae
mov
cmc
lock
aas
fisttps
out
lods
in
mov
cmp
xchg
insb
int3
inc
jmp
sbb
mov
out
out
sbb
out
test
in
ret
call
push
int3
or
xchg
fistpll
movsb
sbb
pop
push
pop
enter
shlb
push
pusha
fstl
add
jnp
fcompl
sti
sub
inc
rcl
inc
mov
or
or
push
stos
inc
and
popf
pushf
scas
movsl
aad
fwait
popf
xchg
add
std
push
mov
jl
int3
sbb
mov
push
out
loop
sbb
ret
lahf
test
test
stc
mov
js
das
arpl
test
pop
or
es
loope
repnz
mull
fwait
aam
cmpsl
mov
mov
mov
out
mov
mov
mov
aas
jae
std
cmp
or
dec
mov
push
testl
jecxz
rdtsc
mov
jne
adc
mov
mov
addr16
add
xor
test
jb
test
mov
fcomi
stos
jns
push
shlb
ljmp
ja
idivb
xchg
pop
cld
lods
cwtl
or
test
sbb
in
xchg
test
js
sub
mov
arpl
loopne
mov
push
pop
push
mov
adc
ds
xor
out
mov
stos
loope
push
pop
test
mov
je
xchg
or
clc
cwtl
mov
movsl
mov
popa
sbb
scas
shlb
icebp
orb
push
mov
in
sub
mov
adc
mov
inc
xor
std
cmp
in
dec
cmp
imul
imul
cwtl
pop
cli
or
mov
rcrb
cmpl
imul
inc
andl
xchg
popa
push
sbb
inc
push
mov
inc
dec
pusha
push
test
mov
mov
mov
xor
daa
and
push
add
sbb
sub
enter
and
loopne
lds
cmpsl
push
cmp
dec
xorl
push
dec
lods
dec
or
sahf
pusha
mulb
inc
inc
or
add
test
cmpsb
rcl
inc
fwait
mov
add
dec
push
inc
arpl
cs
aad
iret
sub
push
cmp
cmpsb
rcll
push
jbe
dec
xchg
mov
fiadds
sbb
push
mov
pop
nop
cmpsb
cmp
mov
mov
cmp
inc
test
lods
adc
sub
icebp
and
jl
icebp
dec
testb
iretw
cmp
fstpl
mov
aas
jl
sub
cwtl
outsb
sbb
mov
or
jbe
stc
xor
insb
pop
or
mov
inc
test
xchg
mov
xor
or
push
xlat
sub
or
lret
xchg
jmp
sub
dec
int
pop
stc
imul
xchg
pop
and
xchg
data16
jnp
mov
loopne
icebp
jp
out
pop
or
fwait
bnd
rolb
push
loop
icebp
or
jp
and
xchg
xchg
and
inc
fmull
mov
pop
out
scas
pop
sub
cltd
mov
loop
sbbl
aas
lods
pushf
call
ss
push
mov
scas
lods
sbb
sarb
xchg
jne
mov
xchg
jne
int
and
jp
dec
push
mov
lret
pushf
jo
addr16
and
ret
idiv
andb
fisttpll
mov
jp
pop
or
mov
xor
sbb
test
es
sub
dec
popa
and
jp
fcmovnbe
sub
rcll
sub
int3
xor
sbb
sbb
fimuls
sbb
push
mov
adc
push
mov
xlat
sub
int3
dec
int3
and
in
loop
ljmp
outsb
push
cmpl
inc
mov
roll
xor
aaa
adc
push
aam
adc
cmpsb
scas
out
lret
es
push
sbb
xchg
cwtl
xchg
jmp
rcl
popa
xor
lea
je
loop
mov
inc
fadd
jo
leave
ret
sarl
mov
mulb
insb
sbb
mov
loope
sub
mov
xor
pop
pop
adc
out
fcmovnb
cli
dec
adc
push
into
insl
es
stos
iret
add
sahf
mov
add
int3
aad
test
les
jge
popa
xchg
push
xor
push
jp
mov
xlat
cmp
imul
adc
sahf
bound
scas
push
mov
xchg
pop
mov
ss
jp
jne
pop
andl
aad
mov
cmp
add
mov
xor
sub
popa
test
out
mov
or
mov
and
je
stc
mov
jno
push
pop
shr
test
cmp
popa
lds
outsb
xor
cmc
cmpsl
xchg
xchg
push
out
and
mov
js
jne
mov
arpl
insl
push
push
cmpsb
add
out
sbb
out
fiaddl
gs
adc
pusha
test
fstl
and
and
xor
mov
pop
and
cmp
push
dec
cmc
inc
aam
test
ljmp
add
jbe
mov
out
test
fmuls
fisttpl
movsl
sbb
arpl
mov
cltd
fdivrl
fdivs
movb
and
jg
out
mov
test
cmp
imul
lcall
mov
jmp
cli
push
sbb
mov
ljmp
jecxz
or
jb
addr16
jecxz
clc
outsl
xchg
push
ss
nop
or
rcrb
jbe
sar
nop
out
int3
ss
mov
add
ret
inc
dec
mov
mov
inc
cmpsl
inc
push
addr16
arpl
negl
cmp
gs
xor
loop
in
xor
mov
adc
mov
inc
enter
xchg
cltd
ljmp
mov
jb
mov
fbld
mov
cmp
xchg
dec
iret
inc
fidivs
inc
jae
stos
loopne
hlt
lods
ficoml
and
pop
push
in
jmp
xor
mov
mov
xorb
jmp
jmp
out
ud2
popf
cmpsb
rorb
and
outsl
mov
mov
rcrl
inc
adc
lretw
and
js
nop
sti
cmpsl
lret
lds
xor
lret
les
je
rclb
int
imul
test
jb
push
sbb
pop
pop
scas
push
mov
sub
fistps
insb
arpl
pop
inc
cmp
es
sar
dec
insl
js
adc
pop
inc
mov
pop
adc
lahf
xor
int3
std
fstpt
pusha
loopne
hlt
je
jo
rclb
mov
das
pop
lea
lock
gs
pusha
aad
sub
neg
xlat
sub
roll
out
sub
iret
call
jbe
push
mov
loope
push
xor
cmpsb
sti
popf
jb
test
or
inc
andl
dec
jge
cmpsl
loope
sbb
pusha
insl
inc
and
sub
mov
std
ds
lret
loope
or
out
jg
mov
add
mov
out
mov
pusha
shl
andl
ja
pop
inc
aad
movsb
shll
lcall
test
fnstcw
push
push
push
fisubrs
sbb
add
iret
pop
adc
push
mov
lret
out
ljmp
push
loop
dec
sub
leave
sub
int3
jb
mov
call
push
mov
cs
xor
cmpsb
repnz
sub
mov
cmp
call
or
fdivrl
xchg
mov
fst
inc
pop
fimuls
pop
ret
jl
test
inc
enter
rorb
je
mov
cld
sbb
jp
push
mov
popf
lock
xchg
add
mov
pop
cmp
and
ss
imul
cmp
fistpll
pushf
dec
popl
push
in
int3
int3
lea
out
pop
mov
stos
out
push
push
fcomp
insl
push
adc
test
dec
jae
inc
add
push
add
test
shll
fidivl
frstor
arpl
loope
jg
rorl
jbe
leave
push
popf
loop
sbb
sbb
push
xchg
testb
adc
mov
xlat
push
fstpt
xchg
aas
pop
jle
repnz
sub
adc
test
lcall
mov
jae
cmp
lret
mov
jb
lds
mov
pusha
mov
rorb
push
sub
mov
out
scas
cltd
fnstsw
cmpsl
jb
or
lcall
push
mov
loopne
jmp
les
sahf
ss
mov
push
pusha
clc
adcb
dec
cmp
push
ds
aaa
and
mov
js
push
lret
mov
mov
mov
in
sub
subb
subl
gs
or
mov
movsl
jnp
cmpsl
inc
loop
mov
jle
popf
cmc
xchg
daa
dec
fs
and
push
mov
adc
xchg
loop
xor
outsb
mov
pushf
popf
filds
mov
mov
ljmp
jae
jb
jae
aad
mov
movsl
nop
mov
lret
aas
sub
ds
mov
push
xchg
adc
sbb
lcall
jno
in
or
sub
adc
scas
add
in
bound
iret
adc
and
jo
jbe
rorb
xlat
cwtl
jl
inc
pushf
jns
jmp
push
imul
push
inc
dec
fists
into
enter
lret
imul
in
xor
mov
or
aam
cmpsb
add
lock
jae
stc
push
pop
rcl
sbb
pop
lret
or
xchg
jnp
jbe
fisubrs
add
push
dec
dec
mov
popa
mov
shlw
jb
andb
gs
je
scas
jnp
test
sbb
or
lret
push
hlt
mov
sub
in
pop
mov
sub
xorl
xor
xor
je
dec
mov
and
shlb
dec
insl
pop
arpl
mov
pop
fsts
mov
nop
jmp
iret
mov
jg
xchg
scas
mov
dec
lds
stc
pop
push
mov
mov
aam
insl
pop
adcl
or
imul
mov
add
push
inc
out
inc
ds
add
or
dec
cwtl
fucomip
pop
push
sbb
inc
push
out
mov
std
out
xchg
jp
cli
mov
sbb
dec
push
mov
cmp
inc
mov
adc
inc
orb
call
cmp
xor
sbb
jle
pop
aas
cwtl
fsubs
lcall
mov
sub
in
push
fmuls
xchg
push
push
and
mov
in
dec
filds
mov
and
jecxz
pop
aas
add
mov
mov
lods
mov
loope
ss
sbb
in
add
xorb
clc
test
pop
lcall
inc
iret
mov
push
imul
imul
cmpb
inc
jg
push
cmp
sahf
mov
push
mov
lods
xor
or
test
mov
adc
daa
cltd
test
enter
lret
lea
imul
pop
scas
dec
dec
sbb
and
inc
scas
xchg
inc
xchg
sti
or
sbb
adc
test
dec
jno
adc
push
lret
xchg
jae
push
dec
cmp
jae
push
shlb
test
adc
daa
sub
xchg
jle
push
enter
in
jecxz
dec
mov
shrb
jg
add
fstps
out
xchg
icebp
pop
mov
test
out
fwait
rcll
imulb
pop
push
sbb
inc
pop
inc
dec
lahf
and
das
or
push
fdivrs
mov
jecxz
lahf
stc
dec
arpl
pop
adc
cli
push
xor
stos
test
lahf
ljmp
cs
or
cli
into
icebp
push
inc
sbb
int
ret
or
imull
lret
dec
or
test
and
sub
pop
mov
cmpsl
lods
icebp
loope
stc
cmp
les
sbb
enter
mov
push
shll
mov
jg
ja
imul
call
xchg
out
int
adc
jbe
fwait
and
dec
test
cmp
les
std
shll
sahf
push
fldcw
insb
out
lret
pop
xchg
sub
adc
out
jno
js
aad
mov
lock
cld
scas
jl
push
notl
incl
scas
fistps
test
lret
push
add
mov
or
hlt
pop
fwait
push
inc
aam
or
fisttpl
mov
inc
arpl
fwait
mov
out
xchg
sub
stos
inc
nop
scas
push
inc
test
clc
arpl
sbb
sarb
je
push
out
or
aas
jno
push
daa
jge
dec
test
aad
sbbl
add
sub
imul
pop
adc
lret
cli
cltd
jbe
loope
int
idivl
inc
and
or
xchg
lcall
jmp
popf
ffreep
into
notl
cmp
data16
sahf
idivb
je
mov
mov
test
and
sub
dec
jle
jbe
push
jae
adc
jl
lahf
repnz
nop
test
leave
xor
popa
jmp
or
mov
pop
incb
into
mov
cmp
cmp
sub
sbb
push
iret
xorb
cmpsb
dec
into
jno
mov
nop
in
into
int
mov
test
cmpsb
testb
insb
in
ljmp
pop
orl
fists
xor
cmp
xor
cmp
subb
movsl
mov
scas
lods
leave
or
push
iret
repnz
js
mov
out
es
jnp
js
arpl
shlb
add
jp
int3
mov
pop
add
push
add
callw
lahf
daa
dec
sub
lock
adc
push
cmp
or
adc
mov
or
mov
sahf
or
shl
mov
fmull
cmp
adc
out
mov
fs
addl
pop
in
addr16
mov
pushw
adc
xchg
push
and
inc
cmp
sbb
ficompl
push
negl
mov
insl
jl
xor
iret
dec
jmp
xchg
xorb
mov
ljmp
xor
std
movsl
xchg
loopw
mov
das
pop
mov
dec
cmp
comiss
dec
or
inc
adc
push
jecxz
xchg
xor
dec
fisubrl
sub
pop
fwait
and
add
cmpsb
mov
sbb
xor
cmp
pop
add
sbb
or
mov
push
xchg
pop
or
jle
sub
jl
lahf
stos
mov
js
jecxz
adc
inc
pop
pop
pop
scas
test
push
lret
push
test
jecxz
imul
ljmp
repnz
mov
pop
add
xchg
not
sahf
dec
and
xchg
call
cmp
dec
cmp
fisubl
pop
xchg
push
iret
jp
popa
test
fstpt
add
push
cmp
push
ss
xor
sahf
add
adc
xchg
pushf
les
xor
stc
in
push
in
int3
bound
imul
sti
mov
rcr
loopne
jmp
lret
in
inc
xor
xchg
or
xor
sbb
out
in
in
stc
inc
mov
push
std
push
fwait
jb
xchg
iret
inc
xlat
lods
jge
inc
xchg
sbb
push
mov
movsb
inc
jl
ret
pop
sbb
andb
pop
sbb
lret
sub
xor
mov
fs
mov
in
xor
pop
js
mov
mov
sbb
mov
cmp
xor
push
sub
test
and
jno
cmp
out
leave
push
jo
enter
xor
or
mov
push
add
and
lcall
and
push
mov
fsubs
popa
pop
clc
rclb
lret
or
xor
sbb
xchg
aaa
aas
pop
push
jmp
int3
sbb
shr
sbb
nop
dec
xchg
in
in
aad
test
adc
jl
clc
insl
jl
ja
imul
mov
pop
jl
fimull
notl
cmc
add
arpl
out
mov
ljmp
lcall
call
in
xchg
cmp
pop
outsb
xchg
jb
stos
jbe
fs
shll
jg
sbb
outsb
dec
insl
testb
push
mov
xchg
xor
mulb
mov
xchg
mov
cli
cld
mov
cmp
and
inc
es
and
dec
jo
out
xchg
push
in
cltd
cli
fisttps
shrl
sarl
popa
stos
fwait
push
out
push
push
ret
shrl
mov
adc
pop
nop
pop
data16
into
or
fbstp
xor
pop
fstp
adc
das
lods
inc
cli
push
add
inc
pop
pop
das
cmc
adc
cwtl
lds
and
and
xchg
inc
enter
das
push
dec
fisttpll
repz
cmpsl
jbe
shlb
mov
stc
mov
and
pop
jae
js
adc
dec
sahf
mov
cmp
insb
dec
das
mov
dec
fisubl
fstl
add
mov
and
repnz
mov
loopne
xchg
push
aaa
jae
cmp
inc
and
inc
jge
pop
ret
mov
jle
roll
push
inc
cmp
inc
lahf
loopne
jb
shlb
mov
fildll
cmp
stos
hlt
cltd
gs
loop
pusha
jbe
mov
cwtl
stos
pop
mov
add
ljmp
fcom
and
iret
data16
subl
sub
clc
or
cltd
imul
xchg
sub
pop
xor
icebp
xchg
mov
leave
xlat
cmp
call
dec
pop
iret
cmpsb
fs
and
fmul
rorb
push
shll
repz
inc
xchg
mov
mov
push
in
insb
jne
negl
add
rorb
mov
push
push
ret
mov
xor
push
leave
add
or
sti
test
sub
or
lahf
imul
xor
out
mov
push
sar
pop
fsub
rclb
jo
aas
adc
icebp
xchg
fsubrs
or
je
or
sub
cltd
or
xchg
dec
cmp
push
sub
pop
sub
push
lods
adc
scas
test
xchg
xor
dec
xor
mov
pop
jmp
xchg
fmuls
div
xchg
aam
push
int3
mov
push
sbb
xor
push
push
xor
loopne
lret
sbbl
xchg
imul
and
xchg
sub
lea
in
xchg
adc
loopne
movsl
pushl
cmc
ror
fldt
movsb
xor
test
push
add
movl
jb
adc
add
xchg
sbb
std
sub
repz
mov
pop
push
sub
adc
add
test
call
nop
shl
jb
es
icebp
dec
stc
data16
or
push
mov
in
add
dec
xchg
xor
or
mov
push
jbe
or
pop
hlt
ret
adc
dec
or
pushf
les
bound
stc
add
clc
popa
dec
inc
adc
orl
dec
sbb
or
cmpsl
dec
adc
loope
dec
jg
cmpsl
adc
pop
pop
outsb
lods
adc
xchg
adc
dec
cmpsb
dec
cmp
sarb
icebp
mov
push
sub
pop
xor
lret
rorl
jg
inc
rcrb
dec
fbstp
inc
loop
ficoms
lods
popa
ror
push
jl
push
in
ret
dec
repz
shll
jge
add
sbb
sarl
fildll
mov
xchg
jge
int
frstor
orb
mov
std
std
aaa
sub
inc
inc
sbb
out
mov
test
negb
data16
jecxz
sub
mov
lahf
push
faddp
sub
xor
out
fldcw
xchg
pop
xchg
xor
cltd
loope
repz
cmp
push
shll
adc
xchg
movsl
xchg
into
or
sbb
repnz
hlt
push
mov
out
fwait
lret
jns
js
mov
add
loopne
jb
lds
dec
xor
pop
cmp
sbbb
ljmp
mov
fistps
mov
lds
adc
ds
pop
or
dec
cltd
rolb
sub
adc
and
sbb
sub
mov
outsb
dec
adc
mov
cmp
inc
imul
aad
xor
sub
test
pop
test
bound
aam
popf
popa
sbb
dec
jnp
dec
out
xor
inc
ds
inc
mov
shlb
and
lcall
ret
pusha
out
mov
cmovp
cld
push
add
ficomps
out
daa
aaa
mov
sbb
daa
dec
sub
loop
ljmp
or
pop
stc
adc
push
enter
outsb
imul
stos
sub
inc
push
outsb
push
dec
or
sahf
jle
pop
arpl
and
or
jbe
or
ds
pop
adc
popa
dec
jns
mov
mov
push
dec
loop
int3
in
test
adc
std
add
in
pusha
jge
inc
cmp
in
sbb
std
and
sub
sahf
xor
mov
push
mov
pop
or
test
rclb
xor
sti
in
nop
daa
enter
int3
inc
stc
cwtl
psadbw
jo
int
jb
jo
pop
mov
test
scas
lret
test
sti
mov
mov
pop
add
in
enter
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
inc
jns
add
or
jp
aad
test
push
out
lock
pop
mov
into
fidivl
xchg
mov
rorb
jmp
jae
mov
popa
test
push
sbb
lcall
clc
repz
mov
cmp
stc
ljmp
push
and
or
sarb
xlat
and
xor
fsubrs
aad
scas
pusha
dec
pop
dec
sub
mov
clc
lds
push
inc
inc
stos
pop
cmp
add
repz
cmp
aad
sub
sbb
push
ljmp
jmp
in
fsubrl
jno
pop
out
adc
sbb
xor
lods
adc
xchg
dec
dec
inc
std
pusha
sti
xchg
fnstsw
cld
or
scas
cltd
cltd
xor
enter
in
mov
jge
mov
inc
jge
inc
xchg
cmpsb
and
inc
test
dec
jecxz
stos
pop
pop
mov
outsb
jns
mov
aas
in
xchg
jecxz
xchg
shrl
mov
xor
inc
lea
aas
pop
in
dec
popf
jecxz
pop
jg
mov
push
lret
inc
shrl
adc
lods
xchg
nop
push
cmp
andb
sbb
sbb
popf
mov
dec
lods
inc
es
xchg
sbbb
mov
hlt
leave
mov
call
adc
jno
push
in
push
sub
push
add
adc
outsb
int
loop
ficoml
sti
xor
pop
insl
push
and
outsb
sbb
xchg
call
addr16
dec
data16
and
xchg
adc
push
iret
ficoml
cmpsb
outsb
out
in
push
sbb
or
out
jg
test
mov
inc
xchg
leave
sub
out
sbb
cmpsl
xchg
repnz
and
mov
dec
inc
sbb
cli
mov
shrl
push
out
mov
adc
and
sub
sub
pusha
inc
shll
mov
or
push
mov
xchg
jb
pop
lahf
and
add
sbb
mov
sti
push
leave
push
sbb
add
push
shlb
pop
mov
lods
nop
add
mov
inc
push
pop
nop
push
outsb
out
xchg
fcmovbe
sub
ret
iret
pusha
mov
jne
aam
xor
push
arpl
or
sub
rol
adc
dec
push
movsb
lea
arpl
lea
xor
dec
in
add
ljmp
mov
rcl
notb
push
test
mov
aaa
rcll
loop
into
xor
xor
frstor
shll
inc
adc
cmp
add
cmp
into
in
test
inc
dec
add
pop
sub
test
add
imul
es
fcomps
push
enter
mov
push
mov
fcompp
xchg
jnp
push
sub
mov
loope
sub
or
xor
nop
aaa
jne
or
add
pop
inc
daa
jo
xorb
xor
pop
lock
xor
fs
mov
pop
ljmp
jl
pop
xor
xchg
addr16
xor
add
push
popf
sub
jno
jle
in
hlt
mov
or
or
add
orb
leave
sub
xchg
inc
cwtl
repz
lahf
mov
inc
jmp
jge
fsts
test
and
mov
push
cmpsb
mov
lods
ds
sub
jae
les
xchg
rcr
cmp
aam
loope
sbb
scas
xor
out
mov
loop
jne
cltd
je
ret
dec
mov
jg
xor
in
scas
inc
mov
mov
add
cs
mov
pop
ret
sub
mov
xchg
push
je
lcall
or
imul
or
add
call
aad
movsl
repnz
insb
dec
jp
jns
lods
jp
jle
js
out
imul
test
imul
push
sbb
pop
scas
cmp
int
mov
push
add
jmp
pop
inc
arpl
or
push
xchg
push
aas
pop
rcrb
cli
cli
pusha
outsl
pushf
mov
sbb
inc
mov
imul
jle
arpl
int
pusha
and
and
in
pop
outsb
movl
jo
xchg
add
cmp
lret
jbe
shlb
test
or
inc
jg
sub
xchg
fdivrs
jp
add
cs
dec
movsb
push
fnstsw
push
xchg
and
dec
aam
sbb
mov
loope
inc
cwtl
das
fs
xor
negl
movsb
mov
mov
ret
push
add
call
stc
lcall
push
sub
adc
pop
test
and
mov
and
int
inc
call
add
inc
rcr
fsts
xchg
inc
sub
mov
test
mov
mov
add
xor
add
adc
mov
hlt
popf
jp
popw
and
out
pop
dec
dec
dec
jbe
push
and
sbb
inc
ja
push
sub
shll
test
add
cld
or
xchg
add
jmp
sti
mov
iret
out
jnp
pop
repz
adc
ljmp
and
add
dec
out
sub
iret
popa
sahf
lahf
mov
mov
insl
gs
es
movsb
stos
add
mov
dec
scas
aad
insl
inc
sub
mov
stc
mov
mov
jle
je
jl
mov
jae
xor
adc
xchg
cmp
aas
lods
rcl
and
push
ljmp
sbb
in
add
push
mov
inc
jno
mov
pop
pop
lahf
sub
out
lret
cwtl
cmp
dec
aam
call
cs
movsb
push
and
xchg
sub
rcr
push
sub
inc
icebp
ret
mov
loope
cmp
cmpsl
cmp
mov
mov
ljmp
push
pusha
rcrb
inc
cltd
ljmp
push
or
mov
xor
fidivrs
lods
mov
int3
bound
je
or
mov
pop
call
cltd
cmp
inc
cmp
mov
or
xor
sti
jns
lods
mov
popa
pushf
adc
ret
shrl
aad
mov
push
push
imul
mov
mov
out
es
in
adc
mov
pop
and
cmp
xchg
adc
insb
addr16
test
sub
push
mov
or
cld
push
push
or
xchg
leave
andb
stc
or
loopne
jl
dec
test
stc
and
arpl
push
mov
cmp
in
push
inc
push
xor
jp
movsb
inc
pop
jns
sahf
mov
pop
mov
xchg
lret
dec
mov
lcall
pop
pop
rcll
out
adc
mov
jmp
les
or
aaa
jle
sub
jbe
push
fs
pop
rorl
pop
inc
inc
mov
pop
or
or
jecxz
stos
dec
call
in
ficoml
jmp
xor
sub
xor
adcl
mov
aad
movsl
mov
and
push
inc
fcom
jne
cmp
inc
sti
sbb
mull
mov
stos
add
negb
stc
jmp
add
inc
inc
mov
cli
shll
mov
repz
bswap
sub
push
sub
leave
sub
xlat
cmp
pop
or
push
lret
std
sahf
out
cmpsl
add
sahf
out
inc
repz
ljmp
imul
inc
in
push
dec
or
sbb
icebp
outsb
mov
push
ja
cvtpi2ps
sub
adc
outsb
dec
and
mov
repnz
sub
fsts
fiadds
ljmp
mov
jle
fstps
lea
insb
push
push
jb
out
aaa
push
jnp
ljmp
xchg
cmp
sub
xor
lret
pop
enter
mov
aam
sbb
sbb
pop
int
inc
call
push
pop
leave
xchg
mov
mov
bound
movsl
addb
lcall
inc
mov
and
aad
hlt
sbb
ja
roll
add
fstps
push
cmp
and
stos
into
outsl
sbb
dec
or
jb
xor
push
xchg
jecxz
inc
cli
into
adc
mov
push
sarl
add
jb
inc
test
sub
daa
sub
xchg
and
push
scas
outsb
fwait
add
pop
cmpsb
adc
loope
inc
or
loope
push
pushf
js
push
mov
mov
cli
mov
cmpsb
js
test
push
mov
in
mov
inc
insb
jbe
cmc
out
ljmp
sbb
cli
repnz
mov
cmp
mov
ficoml
fidivrs
fistpl
imul
test
jge
lods
add
stos
xor
or
sbb
pusha
pop
or
and
ret
dec
frstor
sbb
sub
push
sbb
repz
or
mov
pop
lods
mov
mov
fsubrs
movsl
and
ljmp
dec
aad
xlat
inc
push
dec
iret
xor
mov
or
lods
int
jp
and
jmp
mov
mov
jp
xchg
les
jp
push
sbb
imul
mov
xchg
xor
std
lock
sub
push
cwtl
jg
adc
xchg
jo
insb
aaa
scas
lds
je
repnz
cltd
test
push
leave
jns
mov
ficoms
gs
push
out
repz
insl
inc
inc
jo
negl
pop
inc
push
inc
and
aaa
push
and
and
add
iret
adc
xor
bnd
mov
enter
loopne
aas
sahf
cld
jae
pop
fsubr
adc
es
cli
push
inc
push
aam
shlb
sub
stc
mov
dec
testl
addr16
fdivr
ss
xchg
hlt
push
and
dec
xor
popf
psubusw
push
test
and
data16
movsl
insb
std
pop
mov
or
ret
pop
add
lods
cmpsb
in
inc
push
repz
js
mov
mov
add
xlat
cmp
hlt
cmp
xchg
cli
or
jo
icebp
and
dec
inc
loope
mov
sub
ljmp
cmpsl
jecxz
in
xchg
sbb
pop
rclb
test
sub
dec
push
ds
and
hlt
sub
addr16
shlb
ret
fcoms
lods
es
mov
out
lahf
push
mov
push
stos
xor
mov
ds
test
or
xchg
inc
cmp
aad
mov
or
xchg
ror
pop
and
repz
in
mov
pop
xchg
push
mov
push
mov
mov
mov
cltd
lock
je
cltd
lods
je
xchg
scas
insb
jle
lea
ficompl
jg
lods
push
aaa
push
je
outsb
and
cli
insl
add
mov
jo
mov
pop
out
and
loope
or
jns
movsl
add
test
jle
pop
cld
pop
je
cmp
jo
in
xchg
in
sub
mov
pop
or
sbb
sub
dec
rclb
or
dec
inc
push
repz
cmp
xlat
sbb
test
or
jecxz
sbb
xchg
test
stos
push
xor
int
or
pop
bound
in
xchg
in
inc
sub
cmp
dec
push
dec
mov
pop
xorb
jge
pop
pop
sbb
bound
pop
or
push
mov
jo
adc
test
test
mov
inc
jo
je
inc
cmc
cwtl
andnps
insb
mov
out
xor
inc
enter
lahf
sbb
push
or
fistpll
xlat
dec
sub
dec
stos
xlat
icebp
call
mov
xchg
faddl
enter
pop
pop
leave
incb
fbld
inc
jbe
aas
lods
add
dec
je
ret
cmp
sti
gs
dec
sub
mov
int3
sahf
mov
das
push
push
in
popa
loopne
jp
jg
jmp
imull
lret
mov
pushf
int
lcall
stc
dec
fwait
scas
shlb
popa
mov
aam
xor
in
movsb
push
inc
mov
cwtl
jnp
jg
jb
push
and
clc
iret
and
loope
mov
enter
sbb
pop
pop
sbb
sub
inc
cmp
cmp
mov
sbb
add
fdivl
mov
int3
and
dec
mov
adc
sbb
jnp
jmpw
out
push
jno
insl
cld
hlt
cmp
fdivr
xchg
inc
iret
cmp
xor
inc
push
movl
aam
adc
add
and
lcall
test
out
mov
mov
out
ret
adc
cmp
loopne
jns
adc
ret
dec
test
call
pop
pop
mov
nop
sub
fcmovnb
xchg
nop
fnstsw
inc
loop
mov
mov
imul
xchg
pop
pop
popf
out
xor
pusha
aam
sbb
cwtl
add
arpl
lods
add
imul
jmp
out
sbb
push
cmp
outsl
mov
sbb
shr
in
mov
loope
push
std
inc
pop
sub
push
push
or
pop
xchg
daa
mov
mov
fiaddl
mov
test
scas
sub
adc
adc
inc
or
lret
je
hlt
loop
mov
scas
in
mov
jo
mov
scas
lcall
xor
clc
adc
subl
aad
jecxz
insb
add
lret
cmp
test
ds
int
lcall
test
fstp
pop
imul
push
mov
mov
es
int
gs
pop
ljmp
mov
ret
push
bound
mov
and
ret
mov
das
mov
mov
inc
cltd
pop
test
sarl
push
out
inc
mov
rcll
lcall
xchg
xlat
xchg
aam
mov
push
add
mov
das
scas
sarl
mov
fdiv
xchg
addr16
lea
xchg
pusha
push
and
popf
and
es
mov
rorl
cmc
mov
adc
mov
mov
sarl
xor
pushf
aam
xchg
push
fwait
mov
push
or
enter
cmp
loopne
nop
sbb
xchg
scas
push
icebp
mov
xorl
or
jns
jo
sbb
enter
popf
xchg
add
mov
sbb
xchg
gs
mov
mov
adc
jno
andl
fiadds
rolb
mov
ljmp
cmp
je
cwtl
inc
adc
repz
inc
mov
leave
enter
push
or
jns
ret
test
fsubl
jbe
aam
add
sub
push
xchg
icebp
sbb
lret
adc
xor
in
adc
lock
mov
stos
mov
inc
sub
xor
dec
xchg
arpl
jmp
sbb
cmpb
fcmovne
in
movsb
fcomps
mov
out
inc
sbb
pop
loop
xor
stos
pop
lds
stos
adc
sbb
insb
push
test
and
dec
sti
into
lret
dec
mov
stos
jb
xchg
movsb
add
call
dec
les
lds
pop
cld
das
jecxz
push
clc
mov
adc
stc
outsb
and
sbb
test
add
xchg
or
dec
repnz
push
push
push
dec
mov
fadds
leave
out
add
pushf
bound
int3
jp
dec
xchg
pushf
ror
xor
in
sbb
rorl
fs
push
jmp
jp
lahf
mov
cs
mov
sub
lret
jo
xor
mov
cmp
imul
rcl
xorl
popf
hlt
aas
mov
loope
jae
mov
in
jge
fildl
push
xor
call
mov
sub
pop
jmp
dec
inc
sub
inc
in
sbb
add
andl
ror
push
xor
push
xchg
jne
mov
lea
or
mov
cwtl
cmp
aaa
dec
sbb
mov
idiv
add
sahf
adc
jmp
cmp
out
mov
fcmove
jnp
mov
and
jne
or
push
push
jae
or
loopne
sbb
movsb
pop
cltd
scas
pop
rcll
cmp
and
adc
dec
xchg
xchg
lcall
pop
orl
inc
xor
dec
jp
shrl
leave
sbb
cli
clc
mov
rcr
pop
sub
fs
jnp
data16
push
push
mov
xor
fmuls
mov
fsts
mov
jns
xor
sbb
nop
iret
xchg
stos
in
sbb
std
inc
xor
cmpsl
pop
xchg
and
mov
push
mov
incl
push
mov
adc
inc
pop
das
push
xchg
xchg
mov
sub
mov
nop
sbb
inc
loop
cmp
in
xchg
mov
adc
loop
arpl
inc
orb
xchg
test
fucom
mov
adc
cmpsb
outsl
jecxz
in
or
rcll
pop
testb
adcl
sbb
push
jmp
fnstcw
sub
dec
outsl
cld
es
movsl
sub
fsubrp
das
enter
sar
or
mov
fnstenv
aad
popa
cltd
loope
les
jp
adc
mov
fcompl
sub
mov
mov
xor
add
jne
smsw
lret
mov
movsl
mov
cld
push
add
jl
jl
mov
es
dec
imul
jle
fdivs
xchg
mov
cmp
inc
sub
sub
sub
jb
in
pushl
rcll
jle
in
adc
jns
fdivrl
mov
push
pop
lods
lds
loope
dec
adc
pushf
push
addr16
test
out
cmpb
mov
sub
push
je
pop
loop
inc
in
loope
int3
out
pop
cmp
pop
je
cltd
out
or
or
and
enter
sub
mov
mov
test
in
arpl
call
pop
ljmp
dec
subl
inc
xor
dec
fsubrp
call
push
in
outsb
aaa
xor
lods
out
pusha
lcall
rorl
jmp
xchg
cmp
pop
jle
xchg
lret
fmul
insb
sub
push
and
clc
aaa
mov
popa
test
movsb
imul
cmpsb
sbb
sahf
jmp
push
dec
lret
jno
jno
or
fmuls
dec
jmp
ljmp
enter
popf
aaa
push
shll
sub
insb
cmp
into
lret
pop
or
mov
arpl
mov
push
int
xchg
cld
jle
rorl
jmp
sysexit
pop
push
dec
out
je
mov
imul
or
cmp
hlt
rol
sub
inc
jns
aam
push
adc
lcall
xor
rcl
aaa
xchg
in
fwait
stos
subl
pushf
std
or
shl
popf
sbb
sarb
lods
mov
cmp
mov
hlt
jb
mov
adc
mov
aad
xchg
js
clc
imul
push
inc
lret
lea
adc
and
xor
cld
in
inc
enter
cwtl
incl
es
jne
jae
mov
pop
pop
push
je
mov
and
push
add
mov
inc
mov
cmp
cli
adc
test
pop
add
adc
pop
sbb
add
int3
sub
popf
push
adc
sar
xor
popf
mov
jl
loop
shrb
in
xchg
sbb
inc
ljmp
mov
or
psubw
push
jne
rcll
inc
hlt
sarl
loopne
loop
lcall
cmp
insb
stc
je
loopne
fs
xchg
sbb
dec
mov
and
mov
and
cmp
lret
jb
inc
cmpsl
jl
aam
test
add
mov
out
adc
pop
notb
add
repz
sbb
mov
xor
mov
fnstenv
sbb
dec
jp
outsl
jb
lods
in
in
cmpsb
pushf
cmc
test
iret
push
and
inc
push
iret
xchg
mov
sub
fwait
pop
les
jbe
idiv
pusha
xchg
jns
lock
imul
pop
dec
add
jecxz
xlat
dec
sti
mov
nop
or
bound
xor
or
cmp
jecxz
int
dec
repz
gs
stos
lahf
jmp
dec
pop
jnp
imul
xchg
mov
jo
add
sub
inc
int3
add
loop
push
jb
movsl
push
jle
xchg
sub
insl
and
jmp
movsb
lcall
dec
push
imulb
jp
hlt
push
or
sbb
test
lock
mov
push
dec
mov
sbb
sbb
cltd
fsubrl
xchg
xlat
push
movsb
ljmp
sub
shll
cmp
push
jb
sub
leave
int
mov
sbb
xchg
fldenv
push
or
pusha
mov
out
in
pop
sti
push
setno
inc
jl
fdivrs
gs
lcall
push
lar
inc
out
sbb
add
idivb
xor
insb
pop
xor
pushf
call
cmc
lods
add
jge
movb
mov
js
lahf
test
inc
inc
daa
dec
mov
sbb
sub
negl
mov
fstps
sbb
jmp
fwait
sti
push
sub
icebp
dec
lret
xchg
jmp
cmc
insb
ficoms
jne
xchg
push
lods
hlt
dec
test
cmp
xor
loop
xor
aad
cwtl
mov
pushw
or
pop
and
pop
in
mov
inc
stos
imul
or
push
mov
sub
dec
jb
jne
les
lret
sbb
test
ss
mov
fistpl
repnz
push
mov
sbbl
repz
fwait
mov
gs
mov
data16
fs
cmc
scas
shll
pushf
jns
mov
add
mov
add
shl
clc
cli
in
and
xchg
je
and
jg
stos
lds
lds
add
jbe
xorl
cmp
enter
cld
and
xor
xchg
mov
int3
cmp
imul
mov
pop
mov
inc
adc
mov
sub
loope
cmp
movsl
hlt
test
in
push
push
add
loop
test
inc
pop
call
xchg
jle
icebp
mov
jg
xchg
fadd
sbb
cmp
adc
aas
sti
and
in
mov
repz
loop
inc
dec
xchg
mov
enter
cwtl
push
divb
ret
jns
or
sub
jno
fcmove
loop
jmp
mov
mov
nop
xorl
or
mov
js
dec
jl
std
in
std
pushl
and
cli
cmp
jo
pop
and
inc
push
ret
dec
rcll
into
cmp
mov
in
sahf
stos
cld
lcall
jge
pop
dec
test
xchg
pop
add
and
or
negl
insb
jecxz
mov
rorb
imul
in
or
test
stos
test
jae
and
pop
ss
sub
push
cli
inc
mov
negb
adc
dec
add
add
ret
das
adc
and
pop
pop
ret
pop
xor
mov
outsb
and
pop
imulb
dec
adc
xchg
int3
mov
in
pop
loope
rcr
mov
int
int3
clc
mov
out
inc
lcall
dec
out
dec
mov
add
aas
rorl
inc
adc
out
mov
jmp
cmpb
sbb
dec
loope
and
fcompl
out
loope
popf
push
dec
add
out
adc
rcl
mov
sbb
sbbl
shr
xor
andl
jecxz
adc
mov
lea
xchg
xchg
fldt
inc
pop
add
xchg
add
movb
mov
addr16
pop
jnp
in
test
orb
mov
pop
push
mov
cmp
lahf
arpl
mov
movsl
pushf
mov
cld
xchg
inc
adc
repz
cmp
nop
adc
popa
cmp
shrb
push
repz
jle
lret
clc
add
dec
pop
mov
push
mov
popa
xchg
or
lret
push
mov
imul
cmp
cmp
aam
add
popa
aas
adc
in
and
in
add
or
pop
dec
rcrl
inc
inc
iret
call
pop
xor
pop
mov
std
in
std
fs
lcall
data16
loopne
scas
cmpsb
fisubl
repz
jb
dec
push
ret
fs
ficoms
fldt
mov
dec
cld
mov
dec
xchg
inc
insl
enter
fimull
into
pop
or
testb
sbb
sahf
imul
movsb
int
fdivs
in
fcomp
and
dec
xchg
daa
mov
addr16
jle
adc
stc
and
add
pop
add
fiaddl
out
in
stos
sub
xchg
mov
fisttpl
xchg
sbb
cli
adc
sub
sub
inc
scas
push
xor
sub
cld
adc
adc
hlt
icebp
sub
push
mov
dec
ret
iret
fstpt
mov
repz
lea
cmpsb
mov
cmp
les
add
js
mov
sub
jb
insl
imul
or
push
out
scas
rcr
push
xor
or
ficomps
and
shll
push
ljmp
cld
mov
fnstenv
pop
dec
in
xor
pop
jl
daa
and
cmpsb
or
aas
pushf
and
into
cmp
das
or
push
pop
jb
cltd
cli
mov
sarb
cli
ja
or
fwait
je
movsl
add
dec
add
push
mov
add
pop
mov
dec
call
push
push
sub
repnz
out
dec
xor
sbb
cmp
pop
imul
inc
inc
int3
mov
xchg
push
sub
dec
mov
inc
outsl
stos
adc
int
or
lods
push
mov
adc
aad
push
inc
mov
cs
and
pop
push
mov
and
sahf
lds
mov
fnsave
call
notl
push
insl
or
js
sub
int3
mov
pop
jle
dec
inc
cmp
int3
cmp
xchg
push
shll
divb
sbb
loopne
pop
stos
idivl
inc
sbb
pshufw
js
aad
and
pminub
or
lret
ss
mov
dec
test
ret
sbb
add
rolb
repnz
enter
es
shlb
fdivrl
outsl
inc
add
pop
leave
cmp
dec
out
jne
fsts
shlb
lods
test
outsb
pop
lods
push
cltd
in
push
ljmp
repz
fidivs
loope
lds
cmp
icebp
movsb
out
cmp
mov
jp
xchg
or
in
inc
cs
xchg
xor
mov
push
jge
shld
pop
and
ljmp
test
andl
mov
ret
rcl
clc
pop
mov
scas
mov
mov
popf
std
cmpsb
adc
popf
sub
jg
sbb
push
mov
pop
in
push
xor
cmp
jae
pop
enter
adc
das
dec
mov
pop
addr16
stos
adc
inc
cwtl
jbe
scas
sub
pop
jl
mov
mov
adc
adc
out
lret
aam
insl
das
pop
dec
testl
aad
adc
movsb
orb
incl
mov
scas
outsl
sbb
outsb
cmpsl
xchg
orl
mov
push
mov
dec
shll
and
pop
movsb
jle
lret
scas
push
iret
xor
scas
and
sbb
dec
xchg
inc
adc
in
mov
lret
sub
lea
sbb
outsb
lea
push
iret
push
cmc
mov
lret
imul
cmp
adc
decb
inc
dec
mov
test
lea
xchg
ss
in
fidivl
ffreep
add
out
pop
xchg
lret
popf
mov
rorl
cmpsl
fadd
cmp
lea
inc
pop
adc
enter
lods
cs
mov
lcall
stos
arpl
insl
xchg
ret
or
scas
rorb
adc
lret
push
fisubrl
sbb
gs
dec
psadbw
mov
pop
dec
ficompl
jmp
lret
pop
mov
or
inc
jecxz
push
iret
push
inc
xor
scas
fists
sarb
aam
dec
mov
dec
aaa
or
push
mov
testl
xor
push
call
dec
mov
add
mov
out
jmp
jo
pop
inc
gs
lcall
int
dec
mov
popf
lock
stos
push
test
add
nop
cld
outsl
addr16
jne
xor
aad
mov
mov
mov
leave
out
push
add
dec
mov
or
push
out
add
mov
xor
int3
in
std
and
inc
push
cmp
jg
add
inc
sbb
pop
movsb
jecxz
insl
mov
mov
rorb
sahf
adc
outsl
subl
out
cmp
sahf
daa
mov
mov
inc
lods
push
jp
mov
lcall
es
lahf
sub
inc
cli
mov
jnp
sub
add
add
push
ret
push
push
js
mulb
cli
je
lcall
xchg
scas
mov
shrl
addl
rcrl
loop
nop
out
fisttps
out
mov
jg
jle
xchg
push
std
aam
inc
sub
stos
ror
cmc
ss
imul
pop
xchg
cmp
negb
stos
jl
bound
ret
std
pop
mov
dec
jp
std
mov
mov
add
sbb
adc
fwait
jbe
clc
stos
push
and
pop
scas
lret
fmull
mov
icebp
sbb
sub
popa
cmpsb
icebp
inc
cli
push
aad
dec
adc
push
adc
cli
movsb
sbb
leave
xchg
xchg
mov
sub
and
sbb
xchg
pop
add
push
stos
push
xor
push
dec
shrl
lret
cmc
hlt
cmp
in
mov
hlt
jbe
dec
cmp
ret
dec
ds
and
dec
shrb
mov
in
movsb
nop
icebp
mov
mov
xchg
add
roll
in
xor
and
jecxz
fistl
pop
fidivs
xchg
dec
xor
cltd
xchg
hlt
mov
in
add
lods
es
jp
call
cmp
fstpl
push
in
and
sbb
pop
loopne
mov
xor
jbe
dec
mov
pop
push
fstl
test
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
ret
or
jp
fldenv
xorb
inc
out
jmp
outsb
jb
sub
xchg
fsub
leave
push
daa
pushf
push
pop
mov
movsl
sub
test
pop
lods
xchg
les
ret
aaa
sub
pop
arpl
andl
inc
into
push
mov
andl
sub
and
jo
call
and
or
mov
mov
fwait
jnp
xchg
and
sub
mov
mov
out
pop
sbb
ret
xor
lret
data16
test
push
jo
sbbb
cwtl
jmp
push
pushf
stc
rolb
xchg
out
rorb
mov
sub
mov
pop
lret
mov
jbe
fisttpll
add
lahf
jmp
addb
pop
fwait
lods
inc
push
cmpsb
push
stos
inc
ret
cmc
xchg
sub
out
mov
sbb
pushl
fmuls
fwait
and
testb
test
in
jbe
movsb
mov
mov
inc
aaa
insl
xchg
xor
movsb
mov
push
xchg
push
mov
sbb
mov
sub
test
mov
call
push
inc
mov
adc
mov
jno
call
and
mov
insb
clc
push
inc
adc
es
pop
fildll
arpl
out
js
rcl
cmp
dec
loop
pop
int3
lods
xchg
int3
bound
sbb
int
loop
popl
das
movsl
xchg
fwait
xor
push
sub
int
mov
test
out
dec
and
stos
repz
inc
flds
mov
sub
inc
fistpl
stos
xchg
and
jbe
xor
popa
aas
lcall
aad
sub
repz
in
mov
push
lea
jno
lret
sbb
or
xlat
test
xor
sarl
jnp
in
pop
mov
mov
mov
pusha
pop
push
mov
dec
cmp
push
idivb
adc
jge
jnp
adc
xchg
imul
pop
cmp
cltd
int3
dec
lret
andb
rolb
mov
inc
insl
or
outsl
leave
push
mov
push
les
outsl
pop
in
add
rclb
mov
sbb
cmp
and
pop
sub
stc
mov
dec
xchg
and
or
sbbl
ud2
cmc
neg
push
or
and
mov
inc
js
push
mov
jmp
mov
or
jge
ds
imul
push
cld
sub
pop
mov
sub
and
in
inc
fistpll
xor
ret
xchg
push
push
repz
pop
mov
cmpsb
jnp
jns
dec
mov
aas
test
push
outsb
adcl
test
or
lods
pop
mov
ljmp
and
add
xlat
les
sar
dec
test
js
jbe
dec
and
loope
int
xchg
popa
lret
iret
jmp
sbb
xlat
dec
jb
mov
ret
enter
dec
imul
out
lcall
or
mov
adc
push
pop
adc
aas
xsaveopt
inc
sbb
pop
in
dec
lock
push
bound
xchg
hlt
push
testb
cmpsb
lods
add
repnz
jns
push
jmp
and
shl
or
xchg
movsb
mov
inc
stc
pop
push
add
push
loopne
inc
cltd
jno
sub
fistpl
xor
pop
mov
push
enter
in
addl
lock
stc
pop
outsb
mov
push
into
push
dec
shll
out
mov
push
push
nop
sti
rcr
xchg
add
test
mov
mov
pop
test
sbb
jns
xchg
push
push
cmp
call
loop
mov
push
mov
xchg
lret
fistl
mov
xchg
mov
jne
js
sti
xchg
add
sub
push
adc
aaa
inc
xor
cmp
or
mov
dec
call
rorb
insb
sbb
or
repz
push
icebp
out
popa
or
adc
lret
fldcw
aas
cmp
lret
fstpl
repz
ja
ret
daa
dec
add
push
mov
adc
mulb
fdivrl
rclb
divb
push
push
pushf
ss
sbb
xor
jo,pt
lahf
data16
clc
or
imul
int
hlt
push
pushf
leave
dec
cs
out
call
orl
cs
jno,pn
shr
sbb
push
sub
xchg
sub
out
cltd
aaa
int3
mov
jbe
daa
push
push
xchg
fidivl
or
ljmp
sbb
jge
sub
pop
mov
mov
jle
push
fdivl
xor
mov
pop
inc
sbb
pushf
push
out
sub
loope
mov
and
subb
mov
xchg
dec
mov
xchg
xchg
add
fwait
push
movsl
clc
add
push
push
das
jo
mov
adc
or
pop
test
xor
sti
pop
bound
out
cmp
jmp
gs
cmc
inc
popa
jecxz
push
sbb
hlt
test
rcll
fnsave
iret
ja
jecxz
fisttpl
xor
xor
xchg
xchg
fisttps
xchg
inc
sub
imul
roll
mov
aas
mov
dec
cmp
sub
fstpl
mov
lds
push
inc
pop
shrl
decb
mov
ss
icebp
push
cmpsl
jae
cmc
push
scas
hlt
pop
cmc
mov
pop
push
test
cmp
xor
xchg
xor
mov
leave
mov
pop
repnz
mov
xor
movsl
sub
jecxz
sbb
movsb
imul
or
stos
or
out
mov
push
pop
stos
cltd
je
lods
mov
addl
dec
insb
subl
out
or
push
adc
mov
push
test
insb
push
aas
pop
add
in
idivl
mov
cltd
cmpsl
add
mov
clc
mov
mov
xor
aad
push
negb
std
lods
pop
test
xchg
ds
inc
fldl
xchg
stc
je
popf
cwtl
xbegin
leave
xchg
bound
and
pop
jns
aad
adc
jne
daa
fnstcw
pop
mov
shrl
mov
incl
sub
jp
dec
hlt
or
in
cmc
ljmp
mov
in
xchg
push
inc
addb
sbb
cwtl
sub
push
or
arpl
pusha
jle
leave
mov
inc
jl
loop
lods
adc
hlt
push
les
les
xor
cmp
add
xchg
imul
loopne
pop
fdivrp
les
shll
divl
mov
sti
daa
leave
cmp
fwait
movsl
dec
jecxz
out
test
push
inc
xlat
lods
sub
lcall
jp
xchg
adc
add
jl
inc
shll
mov
clc
adc
mov
rcr
cld
dec
rcr
popa
dec
push
out
add
repnz
cmp
decb
mov
mov
adc
mov
mov
sbb
lahf
xlat
push
jp
cmovge
gs
loopne
movsl
jl
js
jae
bound
jae
jnp
sbb
scas
mov
push
xor
ds
mov
fcompl
fildl
in
ret
ja
out
stos
sbb
std
fdivrs
lds
sbb
push
pop
cmp
lahf
inc
jno
mov
adc
in
mov
fwait
jb
cli
hlt
xlat
sbb
pop
or
imul
pop
mov
xchg
inc
fiadds
jo
pop
jge
jg
push
mov
mov
mov
data16
push
je
iret
and
push
jo
ficoms
aam
std
jl
mov
rol
sbb
leave
jg
sbb
pop
push
arpl
add
xor
in
xor
test
mov
aam
shrb
add
outsb
mov
jns
cwtl
inc
jle
or
mov
push
les
push
cs
jmp
gs
fwait
mov
movsl
and
add
repnz
es
adc
push
xor
and
repz
jbe
dec
push
mov
fdivrs
insl
push
and
xchg
insl
adc
dec
sbb
dec
pop
sbb
adc
lea
add
mov
out
neg
mov
mov
xor
insl
cmp
sbb
and
push
jno
mov
dec
pop
icebp
daa
and
xchg
mov
cmp
dec
mov
cmp
gs
add
push
pop
fucomp
test
cmp
mov
fsts
sub
mov
arpl
outsl
nop
lcall
out
jbe
and
xor
mov
fisttpll
pop
add
push
test
dec
inc
fs
jp
cld
aam
dec
cmp
inc
push
rorl
into
arpl
add
mov
das
mov
jnp
sbb
and
push
sbb
xor
pop
stos
push
imul
popl
and
fadd
inc
sbb
xchg
xchg
fs
jg
adc
test
nop
movsb
dec
push
outsl
push
mov
loop
xor
stos
push
rcl
push
sub
enter
mov
xchg
mov
pushf
bound
fstps
sbb
das
leave
jne
mov
hlt
or
cmc
loopne
mov
loope
push
add
adc
or
and
stos
fildl
mov
inc
out
sti
xor
scas
test
int3
mov
rcr
test
loopne
dec
int3
jmp
sub
jnp
pop
cli
aaa
xchg
or
or
jg
repnz
adc
push
hlt
in
insl
jns
sub
mov
push
xchg
xchg
xchg
or
lods
push
mov
lds
mov
push
fisubl
jg
test
out
aas
jns
or
insb
rcl
das
mov
pop
and
push
and
mov
cmp
shrl
pop
pop
lret
jge
xchg
lret
push
lods
std
push
cs
stos
pop
fadds
aad
mov
push
dec
jo
sub
pop
push
call
dec
test
jg
jae
popa
lea
fstpl
mov
nop
and
adc
mov
adc
push
pop
nop
fldcw
pop
ja
cmp
mov
insl
dec
sub
inc
add
dec
adc
or
shrb
inc
out
jecxz
sbb
rolb
in
popf
or
jbe
pop
outsb
filds
fldcw
cwtl
fidivl
out
mov
mov
push
adc
pop
jne
mov
jle
arpl
jge
or
lret
loopne
sbb
mov
add
xor
les
dec
pop
std
and
jp
xor
data16
mulb
sbbb
pusha
lods
mov
dec
out
rolb
sahf
enter
inc
mov
jecxz
adc
dec
enter
add
mov
in
out
mov
movsb
adc
xchg
mov
arpl
roll
xchg
loope
addr16
pop
mov
cmp
lahf
les
jne
out
cmc
xorb
jecxz
test
aad
pop
jl
cli
adc
jge
lock
in
je
out
mov
dec
jmp
jb
mov
add
sub
sub
cmp
cld
mov
pop
out
je
pop
cwtl
nop
add
sbb
mov
sub
and
mov
pop
test
adc
dec
jecxz
outsl
insl
movzbl
pop
cmp
cmp
outsb
cmp
in
or
or
jge
lea
mov
and
push
pop
clc
mov
out
mov
lods
pusha
push
lret
jo
push
cld
sub
inc
and
inc
or
clc
xor
sbb
rol
mov
and
repnz
aad
insb
arpl
rcr
mov
enter
adc
add
mov
popf
addr16
in
cmp
sub
aam
mov
lea
add
push
inc
icebp
or
jl
je
cmpsl
mov
gs
add
lret
rclb
test
cmpsb
pop
call
push
into
sbb
pusha
outsl
and
repnz
xor
js
jne
repnz
dec
ds
loop
jbe
cld
and
xchg
pop
lret
xor
mov
add
inc
adcb
cmp
pop
ja
jno
mov
jp
scas
mov
or
idivb
jp
data16
and
jo
adc
xchg
addr16
pusha
cli
loope
xchg
mov
jbe
std
adc
inc
push
mov
clc
sub
es
sahf
jnp
add
std
cld
cmp
nop
leave
xchg
push
xchg
loop
bound
dec
fwait
ds
push
aaa
repz
mov
stos
loop
cmp
in
mov
pop
jnp
out
inc
xchg
cltd
inc
cli
and
test
push
inc
cmpsl
inc
mov
cmp
imul
xor
push
inc
outsl
push
mov
mov
lahf
adc
push
lock
sahf
ret
push
cmpsl
xor
xchg
adc
push
jle
mov
sti
sbb
enter
dec
jg
outsb
xchg
cmp
inc
sbb
mov
inc
arpl
push
das
cwtl
gs
mov
pop
shr
test
aaa
push
dec
and
dec
test
sbb
push
mov
xor
cmp
xor
dec
rcrb
loopne
sub
test
mov
jno
adc
fidivl
das
or
adcb
cld
fisubrl
cwtl
sbb
or
cmpsb
pop
clc
dec
add
dec
test
mov
or
inc
fnstcw
adc
or
je
dec
out
push
cwtl
inc
cmc
lahf
xchg
or
mov
mov
enter
dec
mov
fisttpll
icebp
test
cmp
scas
je
sub
loopne
pusha
mov
jns
sbb
pop
jbe
movsb
mov
mov
leave
push
icebp
pop
les
stos
mov
mov
add
scas
popf
lods
sbb
push
pop
hlt
jge
sahf
dec
mov
mov
sub
ret
mov
xor
pusha
jnp
sub
cmp
int
dec
arpl
pop
xor
mov
hlt
mov
inc
add
jae
call
xor
jge
mov
xchg
stc
sahf
scas
lea
in
jnp
aad
pcmpeqb
mov
mov
push
fisttpl
mov
roll
mov
mov
jge
mov
and
inc
pusha
sbb
je
xorb
push
dec
pusha
fidivrs
inc
fldl2t
rcrl
repnz
out
insb
dec
cli
hlt
les
lret
sti
out
testl
dec
nop
sbb
or
add
cmpsl
inc
push
lock
adc
shl
hlt
ret
stos
mov
mov
lahf
outsl
scas
mov
mov
fs
mov
jb
push
xlat
jae
jp
popa
loopne
cmpsl
pusha
lods
jg
insb
pop
stos
dec
out
sbbb
xchg
xchg
mov
jp
dec
mov
cltd
jecxz
inc
dec
lea
aam
adc
js
pusha
lds
faddl
lock
pop
in
subl
mov
mov
dec
push
add
pop
rolb
dec
mov
cmc
sub
cmpsb
ljmp
jno
int
jg
test
fdivrl
sub
adc
rolb
mov
push
or
and
dec
imul
icebp
stos
shrb
pop
mov
outsb
sub
pop
sbbb
js
sub
mov
inc
addr16
sbb
or
sarb
sub
and
sbb
dec
scas
cld
pop
cmp
decw
es
lods
push
pop
pushf
push
std
sub
mov
jp
mov
fnstenv
cmp
mov
jne
lcall
mov
lahf
or
sub
insl
in
and
repnz
loop
mov
mov
insl
xchg
xor
mov
adc
cmp
gs
ljmp
mov
mov
cmp
stc
pop
mov
mov
sub
fbstp
cmp
mov
shlb
cltd
lods
wrmsr
xor
stos
xchg
sub
inc
xlat
movsb
scas
sbb
inc
or
daa
in
stos
lret
leave
iret
inc
dec
push
imull
xchg
fimuls
sbb
push
repz
cmp
int3
push
inc
mov
push
in
data16
cmp
sbb
test
lahf
pop
leave
xchg
push
aaa
lds
or
inc
and
fisubrl
aam
push
lods
mov
xchg
fwait
out
fnsave
pop
dec
push
insl
mov
lcall
lock
sti
nop
xchg
xor
fnstsw
repnz
add
inc
push
push
cmp
lds
lret
xchg
nop
leave
cmp
dec
jl
adc
dec
das
jmp
sub
loopne
mov
lea
lahf
loopne
inc
aas
and
movsl
and
test
and
fcompl
xlat
loope
fstp
xchg
sbb
and
xor
cmp
lahf
inc
lods
fnsave
pop
aam
or
data16
loope
cmc
add
mov
xor
dec
pop
xchg
js
inc
imul
cmp
in
shlb
cltd
lods
and
int
add
lock
gs
cmpsl
aad
push
dec
jns
cmp
add
inc
in
in
or
add
dec
lret
andps
push
cs
into
jno
pop
loope
imul
std
movsl
les
dec
mov
daa
rclb
scas
mov
fwait
push
fs
in
insl
fs
inc
pop
dec
adc
jae
lcall
negb
popa
push
or
sbb
sub
es
loop
inc
popf
cmp
je
test
mov
pop
cmc
sbb
adc
pusha
xchg
pushw
jge
ret
mov
adc
pop
cmpsb
pop
outsl
push
inc
lret
cmp
loop
popf
fs
daa
das
cli
inc
fs
jo
lods
gs
inc
sbb
jb,pt
inc
xlat
ficompl
or
jne
arpl
daa
insb
cmpsl
in
add
ljmp
adc
outsl
cli
inc
cmpsl
mov
push
jno
jae
adc
mov
std
mov
clc
mov
pop
mov
and
add
loope
insl
into
mov
mov
sub
ljmp
mov
push
push
xchg
sarl
cs
cmp
test
push
test
push
sub
mov
mov
jb
fs
mov
xchg
ss
icebp
lods
inc
test
push
out
push
push
jns
jne
cs
pop
xor
jmp
inc
clc
inc
inc
call
in
ss
andl
mov
mov
lea
ja
cmp
clc
mov
xchg
jl
fbld
jno
mov
push
fstl
roll
popa
mov
jle
add
rclb
out
das
js
or
inc
jecxz
testl
adc
mov
mov
sbb
icebp
fs
and
add
insl
cld
xlat
arpl
out
aaa
lods
movsl
stos
popf
popa
aas
popf
dec
cs
dec
inc
stos
into
sub
fdiv
pushf
mov
push
xorb
in
in
mov
out
dec
sub
ret
inc
outsl
mov
sbb
pop
lahf
cmp
mov
fldl
iret
stc
push
xchg
jmp
aaa
xlat
sbb
int
sub
insl
jmp
cmp
xchg
idivb
movsl
ud1
inc
mov
int
add
jl
cmp
pop
fs
pushf
lods
sbb
divb
xor
iret
xchg
xor
lds
outsl
sbb
andb
jb
push
es
mov
sub
fidivrs
mov
aam
pushf
incb
out
daa
inc
ja
pop
jl
mov
clc
sub
in
js
add
insl
jne
inc
mov
xor
sub
push
sbb
aad
outsb
jnp
mov
xor
jne
sbbl
repz
imul
xchg
imul
cld
call
lret
push
ret
rolb
jecxz
bound
sbb
fstpl
xchg
shlb
cmp
test
push
aad
stos
loope
pop
das
mov
scas
adcb
jmp
sub
imul
loope
jb
push
rorl
cld
inc
je
cltd
sbb
xor
xor
fwait
andb
and
pop
lds
sbb
enter
es
or
cmp
sbb
test
rolb
sub
cmc
popf
mov
xchg
shlb
and
int3
mov
icebp
ds
push
incb
test
repnz
inc
sub
lret
mov
or
dec
dec
inc
jb
shll
and
push
je
mull
xor
andl
pusha
cmp
xchg
jecxz
arpl
mov
out
push
hlt
test
jg
movsb
int
shrl
push
test
mov
mov
test
jge
push
sub
test
test
movsl
cli
repz
jne
pop
sbb
xchg
nop
dec
pop
rcll
jbe
cmp
adc
je
mov
nop
fidivs
lret
pusha
nop
pusha
mov
or
rcl
and
test
add
push
mov
loop
and
xchg
sbb
adc
jb
jne
cmpsl
out
cvtdq2ps
imul
dec
push
and
or
mov
xor
iret
jp
push
ds
jnp
out
mov
loope
out
popw
sar
out
fwait
xchg
pop
dec
push
insb
dec
testl
xchg
dec
cmpsb
add
nop
xchg
mov
ss
sbb
hlt
pop
in
cmp
leave
mov
adc
lret
xchg
mov
mov
repnz
add
pusha
inc
adc
out
mov
pushf
pop
or
icebp
xchg
in
scas
inc
add
pop
popa
mov
leave
test
mov
jp
test
inc
scas
push
pop
js
dec
dec
mov
add
test
ss
jae
pop
mov
push
or
out
or
lahf
orl
jg
mov
mov
scas
or
lds
mov
xchg
push
sub
lret
cmpsl
mov
or
adc
push
out
pushf
pop
jp
std
fs
arpl
into
xor
inc
push
lods
jecxz
add
sbb
add
je
mov
push
ja
push
enter
icebp
sub
sbb
imul
mov
loope
lret
jecxz
mov
mov
data16
data16
bound
repnz
inc
fwait
or
jb
dec
fldcw
ss
adc
pop
cld
lods
or
add
xchg
sbb
cmp
mov
mov
pop
jg
rcrb
cmpb
or
or
bound
stos
dec
out
sub
cli
movsl
loop
xchg
cltd
movsl
mov
add
lret
mov
ficomps
xchg
pop
and
dec
mov
xlat
and
shl
add
shl
and
xchg
pop
lods
lea
xchg
stos
push
sbb
mov
fiaddl
movsl
and
cmp
mov
sahf
das
dec
int
retw
mov
jno
dec
scas
cmp
push
popf
inc
pop
lcall
fldenv
sbb
dec
popa
out
lds
arpl
xchg
les
add
mov
push
test
movsl
dec
jnp
int
cwtl
push
fwait
sahf
pushf
pop
lahf
mov
jg
cld
ret
cmpsb
roll
pop
movsl
and
lods
xor
dec
or
and
sbb
xor
ror
push
and
nop
inc
jno
dec
mov
iret
adc
dec
sub
or
call
scas
cmp
das
sbbl
adc
stos
cmp
xchg
jp
jle
fs
jge
sub
jo
test
mov
fcoml
jbe
cmpl
mov
pushf
and
add
dec
mov
jecxz
cmp
inc
pusha
cwtl
outsb
push
adc
jno
idivb
and
je
sbb
leave
xlat
dec
mov
xor
mov
and
shrl
mov
pop
or
cmp
jb
out
sbb
sub
lds
xor
movl
pop
outsl
sbb
jns
sub
and
in
rorb
inc
fucomi
mov
lods
mov
fsubl
ss
pop
sub
jbe
shl
fnstsw
repnz
imul
pop
and
pop
add
mov
rcl
in
add
push
add
pop
xor
adc
pop
sti
stos
stos
nop
movsb
sbb
arpl
push
mov
popf
insl
je
imul
stos
repnz
fsubs
cmp
xor
repz
ret
loopne
dec
pop
out
loop
cmp
filds
mov
add
outsl
inc
in
test
and
pop
add
xchg
jmp
outsl
icebp
mov
fildll
adc
add
jbe
inc
push
cli
xlat
daa
jecxz
nop
mov
roll
dec
pop
mov
jae
aas
cs
orb
xchg
cmp
mov
mov
xor
xchg
push
shld
rorb
pop
ret
aad
mov
hlt
repz
push
fcoms
sbb
fs
in
mov
out
xchg
pop
outsl
int3
testl
sbb
fnstsw
mov
dec
jne
fildll
cmpsl
rorl
push
mov
mov
inc
adc
push
pmulhuw
pop
jo
lret
jecxz
loopne
mov
stos
inc
enter
lcall
mov
pop
test
mov
push
lahf
or
xchg
dec
push
iret
lods
test
popw
push
popl
fisubrl
jmp
dec
push
js
scas
adc
xchg
lcall
mov
fsubrp
dec
dec
repnz
mov
nop
cmp
cmpsb
add
icebp
rol
mov
aad
or
or
clc
cmp
daa
insb
filds
repz
lsl
sub
and
pop
jp
xchg
cmp
repnz
lret
pusha
insb
nop
shrb
adc
sub
lods
mov
ret
out
fsubrs
mov
sbb
xchg
out
fiaddl
test
mov
xlat
inc
cmp
nop
addr16
mov
fwait
or
int
lret
mov
data16
shll
roll
jge
stos
enter
dec
stc
pop
mov
hlt
arpl
cmp
or
dec
lret
fdiv
in
hlt
sub
pop
lahf
inc
call
ret
in
push
lock
jbe,pn
xchg
inc
outsl
jp
fwait
enter
inc
mov
cld
jo
pop
sub
movups
jns
pop
sbb
scas
push
shrl
cmp
adc
jge
adc
int
pop
push
aam
sub
push
mov
adc
lret
mov
test
and
lds
mov
mov
loop
and
mov
movsb
pop
sti
add
in
pusha
dec
mov
and
cmc
sbb
push
mov
add
dec
mov
loop
xlat
test
push
icebp
fcmovne
jle
dec
pop
mov
fcom
cltd
aad
mov
ror
jne
mov
int
aad
jecxz
mov
xchg
fwait
in
inc
test
jo
cmp
sub
movsb
push
xchg
in
mov
pushf
and
sahf
xor
xor
jno
or
mov
inc
cmp
fimuls
cmp
pushl
push
xor
scas
ret
cmp
call
outsb
pavgb
or
inc
lea
pusha
xchg
and
xor
imul
aam
out
mov
cli
sarl
loopne
dec
mov
push
insl
xor
std
aaa
adc
pop
push
pop
in
test
mov
sar
mov
mov
roll
xor
xchg
hlt
jp
aaa
outsl
dec
dec
mov
fdivr
std
jmp
rcr
stos
sub
repnz
xor
icebp
aas
mov
mov
rcl
and
movsb
ret
jge
inc
cwtl
push
push
rolb
adc
pop
loop
push
lcall
incb
sti
stos
cmp
sbb
loopne
scas
jp
or
dec
dec
sbb
stc
hlt
cs
sahf
mov
cmpsb
xor
ss
je
mov
mov
dec
fisubrs
insb
pop
sub
mov
ret
adc
sub
sub
push
mov
inc
daa
add
push
dec
lret
mov
mov
jg
out
xchg
jne
xchg
and
mov
aam
pop
sub
int3
bound
popa
add
lods
and
pop
cmp
fnstenv
addr16
mov
mov
cltd
je
leave
out
xor
in
jne
insl
loop
ret
inc
push
cmpsl
ficompl
mov
jnp
pusha
int3
or
sub
sub
jmp
jmp
sbbb
test
sub
xlat
daa
mov
mov
popf
push
frstor
mov
popa
pusha
ss
scas
mov
js
and
sub
nop
adc
gs
ret
cs
jecxz
leave
add
cltd
ja
lods
mov
aad
sbb
rorl
xor
jb
sar
or
pop
ja
mov
hlt
fistps
cltd
cmp
mov
mov
or
sbb
pop
or
shl
out
lret
mov
fsubl
les
mov
rclb
and
js
xor
inc
repnz
push
jp
mov
shrb
cmpsl
jecxz
arpl
add
andl
pushf
xchg
xchg
inc
mov
sub
rclb
mov
pop
dec
insl
enter
push
and
in
and
sbb
inc
and
fstpl
repz
or
test
xor
lahf
subb
int3
push
push
test
dec
push
call
std
sbb
xchg
inc
inc
ficomps
movsb
adc
adc
ljmp
add
addl
mov
fs
ret
pushf
rcr
cmp
jmp
std
jnp
pop
divb
adc
pop
movsb
test
sbb
stc
orb
mov
xchg
adc
inc
push
mov
dec
mov
add
inc
ret
filds
mov
xchg
sbb
dec
cmpsb
jnp
inc
jns
sub
push
xor
es
arpl
fisttpl
test
sbb
adc
repnz
xor
leavew
arpl
out
and
mov
jnp
pop
pop
push
push
daa
push
add
xlat
shl
scas
inc
mov
icebp
lahf
push
mov
push
inc
adc
cmp
les
scas
mov
adc
add
mov
shr
adc
not
inc
int3
mov
iret
jno
xor
push
outsb
xorb
add
call
xchg
in
out
test
cmpsb
dec
sbb
jmp
sub
pusha
shll
ja
insb
fwait
xchg
xchg
adc
xchg
xor
pop
ljmp
pxor
cmpb
sub
mov
push
push
popa
or
adcl
test
jp
add
out
test
jae
mov
xor
lahf
movsb
jmp
and
jno
pop
es
js
mov
lret
sbb
aaa
das
mov
cmpsl
mov
insl
es
sahf
inc
cmp
cmpsl
cwtl
or
or
mov
lods
xor
mov
sbb
or
js
inc
imul
or
test
aaa
pop
imull
dec
pushf
ret
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
mov
fisttpl
inc
mov
jecxz
adc
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
