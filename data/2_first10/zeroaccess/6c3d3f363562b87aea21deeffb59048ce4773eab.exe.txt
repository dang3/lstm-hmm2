add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
sbb
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
ljmp
andb
add
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
push
mov
jl
jl
sub
jne
stos
adc
mov
mov
sbb
fstps
dec
shr
sub
imul
mov
push
test
fs
inc
inc
xchg
inc
repz
stc
xor
rolb
arpl
andl
mov
in
rclb
cmp
fidivrl
add
inc
sub
cwtl
add
xchg
xor
rcr
fwait
test
xchg
sbb
cltd
lret
and
and
mov
mov
jmp
push
xor
mov
cmp
cli
xchg
sub
fidivs
ret
lret
mov
leave
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
pop
pushf
call
jl
jl
xchg
imul
sti
sub
gs
imul
push
mov
lods
push
insb
and
test
add
shl
addr16
int3
into
test
out
add
lods
fmull
rcrl
sbb
mov
pop
lcall
xor
xchg
test
mov
cmp
cltd
mov
aam
inc
dec
pop
or
jg,pn
mov
out
pop
adc
mov
and
xchg
xlat
icebp
ljmp
cwtl
rcrb
xchg
test
xchg
stos
add
push
call
or
or
es
stos
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
xchg
mov
jo
jle
jl
jl
jl
push
adc
daa
cltd
in
out
fildll
mov
sbb
xchg
and
pop
fstpl
lods
and
push
addl
ljmp
jne
xor
jge
xor
insb
dec
outsb
bound
jnp
popa
lds
cmp
mov
repz
cld
mov
xchg
push
mov
push
ljmp
or
adc
inc
lret
loopne
inc
mov
sbb
sti
daa
cli
mov
icebp
inc
iret
cmp
jae
push
mov
out
adc
sbb
adc
xchg
pop
jne
es
popf
shr
daa
lods
cmp
les
enter
fcompl
lods
into
jo
jne
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
inc
and
bound
jl
jl
jl
lahf
gs
clc
imul
pop
xor
adc
cmpsb
inc
stc
xor
popf
jmp
mov
mov
cmp
jae
or
push
and
dec
lret
cmp
jne
clc
sub
mov
mov
or
adc
jmp
fs
jo
add
sub
out
cmp
jmp
shll
out
pusha
push
in
xor
mov
mov
cwtl
in
pushf
sub
or
cmp
mov
lahf
xchg
push
cmp
icebp
and
push
subb
orb
mov
xor
mov
dec
ss
sub
xchg
mov
xlat
in
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
dec
mov
jl
jl
jl
push
popf
cmp
push
popl
aam
cmpb
shrl
push
lret
mov
leave
mov
movl
enter
ss
inc
mov
inc
adc
inc
dec
push
aas
stos
or
add
push
stos
notb
mov
mov
aaa
jnp
or
push
inc
and
imul
decl
or
es
and
out
xor
xchg
addr16
jbe
out
mov
testb
and
das
andl
je
dec
in
cmp
shlb
fwait
repnz
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
clc
lcall
mov
dec
lock
jb
and
dec
push
aas
in
loop
push
mov
sbb
mov
dec
inc
add
stos
lret
cmp
add
fldcw
subl
inc
xor
pmulhuw
mov
cmp
ret
pop
jecxz
cmc
fidivrs
lcall
scas
pop
adc
inc
xchg
int
add
lahf
adc
or
sbb
push
dec
xchg
sbbl
fs
mov
call
das
jnp
in
lcall
sub
imul
fcomip
rcrb
loope
push
dec
ret
fprem1
sub
inc
cld
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
lods
daa
data16
jl
jl
jl
rol
test
and
cmc
jbe
incl
psubd
lds
xchg
jno
cmp
clc
ss
shrl
adc
cmp
inc
lahf
push
push
ja
mov
mov
les
pop
sub
cmp
sub
dec
inc
stos
adc
lods
sbb
pop
cmc
outsl
push
dec
arpl
push
push
movsb
sub
jb
mov
dec
loop
cmp
int
xchg
sbb
das
xchg
imulb
ror
adc
adc
aam
ss
andb
cmpsb
in
dec
lods
sbbb
xchg
jnp
and
out
push
xchg
mov
insl
pop
pop
xchg
loope
repz
mov
into
add
add
mov
mov
dec
mov
aad
into
push
lods
lods
jae
jl
jl
jl
int
mov
xor
fstl
test
ljmp
cli
fstp
cmc
outsl
xchg
mov
jbe
iret
add
pop
adc
pop
adc
add
xor
fwait
or
inc
shl
jo
and
mov
lods
jmp
into
in
stc
shll
ss
mov
lahf
stos
and
bound
out
push
std
int
je
inc
adc
int
xor
in
push
stos
xchg
out
add
pop
insl
roll
nop
and
nop
adc
xlat
insb
cmp
insb
jb
mov
ss
call
imul
inc
in
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
or
jl
jl
jl
fbstp
mov
iret
jmp
jle
cmp
or
and
movsb
push
sbb
mov
inc
in
stos
pop
adc
dec
xchg
inc
in
inc
int
sahf
xchg
mov
loope
mov
testl
fcomp
stc
lods
mov
adc
push
cmp
dec
mov
adc
mov
mov
sub
shl
aam
fdivr
push
fs
mov
stc
pop
push
in
mov
dec
mov
cmpl
push
sub
movsl
mov
cmc
arpl
inc
popa
aas
mov
lahf
fcmovnbe
insb
fisttpl
mov
add
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
jmp
mov
sbb
jl
jl
jl
sub
das
lret
cmpsb
sub
push
int
jmp
sbbl
test
ds
xchg
test
inc
cmp
xchg
dec
mov
sahf
pop
into
dec
not
xor
lods
aas
sbb
cmp
cmp
add
jle
sbb
aas
popl
pushf
adc
pop
mov
stos
sahf
out
imul
mov
iret
testl
pop
adc
dec
stos
dec
add
lds
les
fs
sub
test
ljmp
sbbb
fwait
stc
push
inc
cmp
mov
push
add
or
pop
cmp
pusha
mov
sbb
leave
sbb
fildl
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
inc
mov
inc
dec
jne
jl
jl
jl
ljmp
cmp
jb
mov
out
movsl
hlt
out
jmp
mov
in
push
push
inc
adc
add
test
testl
sbbb
xchg
and
add
decl
cmp
add
dec
pusha
mov
fcmovb
dec
push
pop
mov
jne
shrl
in
mov
inc
loope
xchg
jae
push
push
lcall
je
mov
fwait
xor
mov
cmc
pop
dec
xchg
pop
rorb
jns
loope
or
mov
xlat
ret
sub
test
lret
mov
lcall
mov
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
shrl
gs
hlt
je
jl
jl
jl
dec
aam
push
dec
aaa
push
dec
sub
je
xchg
dec
pop
in
lods
stos
in
ror
xchg
add
mov
add
cmp
xor
pop
push
repnz
push
push
test
mov
push
cmp
pop
test
ret
repz
filds
jne
cmp
mov
xchg
aaa
and
repnz
popa
cmp
addr16
sub
and
repz
cli
sbb
repnz
or
sub
jl,pn
lahf
sarb
mov
xchg
pop
test
pop
jle
daa
xor
pop
sahf
in
pushl
jmp
or
mov
mov
push
int3
xchg
xchg
int
in
sbb
ja
jl
jl
jl
stos
leave
pop
jb
and
cmp
scas
loope
xchg
repz
daa
push
mov
adc
inc
ret
pop
rorl
jl
push
mov
dec
cwtl
cmpsb
lds
mov
mov
sub
js
push
les
addl
outsb
lret
mov
inc
loope
pop
mov
cmp
mov
fidivrs
cld
push
iret
cmc
xchg
jecxz
mov
out
mov
cmpsl
jb
rcl
mov
or
cmpsb
cmp
sahf
jb
inc
xchg
sbb
js
lea
jnp
adc
or
fs
decl
aaa
popa
sahf
clts
adc
mov
arpl
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
loopne
ja
jl
jl
jl
test
xchg
inc
and
shrl
jge
push
inc
dec
pop
mov
xchg
in
addr16
xor
mov
cmp
push
in
movsb
cwtl
sub
mov
call
fistpl
pop
or
dec
sub
xorb
jno
lds
xchg
mul
jbe
jge
xor
loop
and
push
iret
xchg
ja
in
push
rorb
pop
jae
mov
test
or
pop
out
push
mov
mov
arpl
mov
or
mov
idivb
adc
scas
jp
notb
into
popf
or
adc
mov
and
enter
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
into
sbb
jbe
jl
jl
jl
scas
out
xor
aas
test
cli
cmp
fisttps
lea
repnz
sub
repnz
dec
mov
jle
and
js
add
mov
and
mov
mov
push
cmpb
lret
in
mov
jb
cmpsl
imul
sub
ret
pusha
mov
adc
xor
jecxz
jae
mov
mov
xchg
je
int
lcall
sub
cs
leave
fwait
adc
and
andb
bound
test
aas
addr16
jno
xchg
or
sbb
test
jnp
jae
lea
in
movsb
jmp
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
stos
dec
mov
mov
ds
cmp
jae
arpl
pop
mov
out
mov
dec
lcall
and
dec
aad
mov
cli
cmp
or
pop
inc
xor
mov
aaa
sahf
jb
ja
ffreep
fwait
and
imul
pop
loop
inc
cmp
leave
push
movsb
add
pop
mov
jge
stos
mov
test
mov
mov
mov
jg
fnstenv
xlat
xchg
inc
mov
in
flds
mov
and
dec
enter
inc
jp
push
add
lock
or
sbb
add
into
mov
jmp
out
cmp
aas
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
cltd
rorl
or
jl
jl
inc
daa
leave
hlt
inc
and
jbe
loop,pn
jb
hlt
add
add
push
dec
mov
add
repnz
daa
lahf
mov
data16
rol
pop
mov
pop
enter
jl
insb
cmp
fs
inc
popa
decl
rcrl
or
mov
xor
icebp
mov
repz
xchg
js
or
test
insb
push
jp
sub
pop
mov
push
mov
leave
iret
arpl
mov
in
push
pushf
clc
inc
lods
int3
and
sbb
dec
add
xchg
pop
jp
sbb
or
mov
iret
shrb
push
and
cli
sbb
sahf
stos
out
lea
add
mov
jmp
and
rep
lods
sti
pop
xorl
xchg
dec
or
jl
jl
lods
push
pop
dec
pop
jne
adc
in
dec
mov
std
push
das
dec
sbb
mov
push
cmp
mov
insb
inc
add
dec
sub
imul
inc
jns
sub
adc
xchg
cwtl
insl
mov
mov
loope
push
aad
sti
dec
adc
or
cld
push
or
mov
and
mov
mov
jns
leave
xor
mov
imul
out
repnz
test
aad
in
mov
sbb
nop
inc
loop
dec
inc
mov
fistl
jb
stos
and
or
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
sub
jbe
or
jl
jl
adc
pop
test
add
adc
mov
jne
adc
or
shll
fisubl
fsubs
cld
outsb
cmpsl
jle
add
loope
daa
sar
push
std
xchg
xchg
cwtl
iret
hlt
clc
loope
cmp
movsb
aaa
sbb
add
mov
popf
mov
ja
mov
push
sbb
fcompl
fadds
loopne
adc
test
ljmp
pop
adc
in
pop
xor
sub
xchg
dec
mov
ret
cld
gs
bound
addl
gs
fimull
ret
sbb
js
out
sub
sbb
rcrb
in
sarb
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
scas
test
and
jl
mov
aam
inc
lea
or
add
or
mov
int
pop
add
cmp
outsb
mov
mov
je
shrb
inc
aaa
pop
or
ficoml
mov
or
ret
inc
sub
addr16
lcall
pop
ss
mov
xchg
leave
leave
int
sub
jne
adc
cmp
mov
cmp
adc
stos
adc
push
test
mov
enter
mov
lods
jle
cmp
add
mov
test
push
or
or
fsts
jbe
jno
mov
rclb
add
cmp
fadd
inc
frstor
jne
out
jnp
ret
mov
jmp
pop
fimuls
cltd
push
mov
xchg
push
push
jl
mov
cmpsb
add
pop
es
out
es
inc
cltd
mov
jmp
out
aad
jp
push
lahf
loopne
inc
cld
pop
adc
loope
js
mov
cmp
add
or
in
inc
cmp
ror
sub
out
inc
movsb
bound
sti
jbe
dec
andl
push
scas
and
ret
push
or
pusha
stos
outsb
test
push
rolb
cmpsl
sti
or
push
into
sub
pop
cmpsb
add
outsl
add
call
cmp
sub
mov
mov
lds
and
inc
mov
loopne
mov
xchg
insl
mov
dec
cmp
inc
fisttpll
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
xorb
jl
mov
or
and
mov
int3
sti
in
xchg
sub
in
sub
fwait
dec
dec
sbb
cs
xor
movsb
jb
inc
jle
test
adc
cltd
call
sbb
cltd
pop
imul
test
ror
pop
add
mov
js
jns
mov
test
dec
jnp
mov
stos
mov
pop
xor
incb
std
inc
std
sahf
jg
cld
insb
ret
sub
mov
sub
scas
push
xchg
insb
dec
jnp
aam
lods
add
xor
inc
add
sahf
fs
fsts
pop
inc
daa
es
stc
cmpl
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
cs
or
jl
jl
jl
popa
push
push
sub
lods
fs
cmc
sub
mov
jle
cmpsb
adc
sarb
xchg
lret
icebp
xor
sahf
jo
loopne
mov
pop
int3
inc
push
lods
pop
push
push
xor
jo
in
xchg
dec
mov
test
sahf
out
xchg
loop
call
fwait
into
push
scas
int3
jno
mov
iret
jl
movsb
packssdw
enter
sub
cmpsl
insb
add
jb
jnp
xor
in
dec
jno
out
pop
imul
out
dec
or
push
dec
cwtl
lods
inc
add
adc
dec
mov
negl
iret
sbb
sub
mov
xchg
mov
add
jmp
in
test
sti
mov
cmp
jl
jl
jl
mov
hlt
mov
addb
ret
mov
sub
fs
xchg
push
outsl
push
in
ja
pop
jge
adc
pusha
jmp
sbb
and
cmc
push
pop
imull
lret
mov
rcl
jl
cmp
mov
pop
jge
dec
push
sbb
shr
nop
aaa
testl
mov
jmp
imul
pop
sbb
xchg
in
inc
sub
in
movhps
rcll
mov
cmpsb
xor
mov
xor
add
mov
mov
push
mov
dec
xor
add
jmp
dec
jge
cmpb
jge
push
loope
push
adcb
jl
jl
outsb
push
clc
dec
fiaddl
jg
cli
in
sbb
pop
lods
pusha
dec
adc
dec
jecxz
adc
xchg
xor
mov
mov
cmp
mov
or
push
stos
popf
mov
push
push
loopne
xchg
and
adc
lret
and
sub
xchg
pop
inc
dec
pop
xor
mov
das
cmp
aad
cmpsl
jne
xchg
inc
hlt
repnz
int
inc
adc
mov
add
mov
add
pop
push
mov
pop
mov
icebp
sti
nop
in
mov
or
mov
daa
sub
lret
adc
and
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
jo
inc
clc
push
jl
into
jg
jl
int
pop
pop
pop
dec
push
jo
das
movsb
outsb
push
aad
ret
mov
das
rol
dec
ljmp
iret
xchg
ret
sbb
lock
aam
push
push
test
fdivrl
push
push
mov
orl
jp
out
push
xchg
jns
push
fbstp
xchg
paddsw
sbb
and
or
dec
mov
push
jmp
sti
sub
imul
scas
lods
sti
dec
cs
lock
mov
jae
xor
data16
in
push
or
inc
icebp
mov
scas
mov
dec
scas
inc
loope
add
insb
cmp
cmp
cmc
jmp
gs
cs
jno
lods
lds
pushf
xlat
xchg
and
lea
mov
and
push
or
loopne
lds
mov
and
cmp
mov
outsb
pop
cmp
mov
mov
mov
sbb
mov
pop
mov
loop
pop
pop
cmp
sbb
jae
jmp
mov
adc
mov
pop
aas
stc
jnp
mov
add
movsl
into
fwait
mov
ljmp
pop
lcall
cmpb
sar
ja
inc
dec
fisubrs
cwtl
sbb
aaa
stc
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
popa
clc
in
push
dec
add
jg
jl
clc
pop
jg
push
pop
das
mov
jnp
and
lock
mov
lods
xor
fwait
lahf
push
rcrl
mov
cmp
pop
push
fmulp
out
ds
outsl
sbb
xchg
out
sarb
inc
inc
mov
sar
imul
jb
push
mov
call
lret
aas
test
mov
jbe
inc
inc
adc
cmp
push
pop
cmc
add
stos
sub
in
or
aam
test
or
jg
aam
xchg
mov
ret
jecxz
mov
push
jg
push
cmp
adc
inc
sbb
xor
popf
xchg
cltd
or
gs
push
aas
jp
mov
outsl
pop
cmpsb
std
idivl
aaa
imul
jmp
push
sbb
test
cmc
cltd
cmpsl
imulb
mov
rclb
setno
xchg
mov
xchg
fsubrl
or
pop
popf
push
xor
idivb
ficompl
sub
and
push
ja
pushf
jp
rcrl
adc
call
mov
adc
mov
cwtl
movsb
push
in
f2xm1
out
and
aaa
dec
test
cmc
mov
dec
lcall
xor
pushf
clc
jmp
jno
in
cli
insl
cmpl
inc
in
aas
sbb
jl
into
jg
jl
mov
lret
pushf
push
inc
or
mov
sbb
popa
setl
jno
ss
inc
movsl
std
into
pop
pop
and
and
cmp
sub
pop
stc
cmp
cmp
iret
arpl
sbb
or
aam
mov
ret
pop
mov
ljmp
xchg
shrb
ficoml
and
push
shl
xchg
sbb
movsl
mov
dec
outsl
xchg
jbe
lahf
jno
mov
outsl
fstpt
jl
inc
fsubrl
jecxz
cmp
sbb
xlat
sub
rcl
push
sub
jno
sbb
inc
mov
lods
clc
test
mov
fwait
ss
mov
add
lcall
jge
push
inc
andl
arpl
dec
mov
jle
mov
dec
adc
int3
sti
out
pop
xor
mov
inc
mov
bound
popf
sub
js
xlat
stos
sub
pop
cli
icebp
pop
jno
fbld
in
outsb
movl
lcall
pop
jb
pop
xchg
adc
cld
mov
xchg
shrb
addl
add
or
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
jl
fstpt
add
jl
jl
or
mov
pop
das
pop
addr16
ds
mov
or
cmp
repz
mov
lret
pop
test
inc
mov
lods
inc
in
dec
std
mov
insb
xlat
addr16
loopne
fwait
mov
xchg
cmp
stos
sarl
sarl
aaa
add
xchg
lods
adcl
xchg
dec
dec
outsl
sbb
rclb
mov
lods
jmp
in
mov
jne
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
mov
add
jl
jl
ret
push
pusha
cli
add
movsb
jmp
lock
sbb
sarb
mov
cmp
xor
repnz
sti
insb
add
loopne
lret
cli
xor
inc
sbb
int3
call
lret
mov
insl
xchg
sub
pop
clc
adc
jg
pop
pop
jb
sbb
cld
ds
lret
cs
cmp
sbb
ret
test
pop
xor
push
sub
sub
inc
mov
dec
xor
inc
dec
pop
xchg
shr
push
dec
jecxz
lcall
mov
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
cmp
incb
jl
pop
loopne
int
inc
ficomps
shll
leave
mov
mov
stc
fcompl
lahf
rcr
inc
lret
sbb
repz
mov
pushf
testl
nop
mov
std
cmp
sti
and
sbb
scas
lea
jns
stos
pushf
mov
push
xor
cmp
push
sub
cmp
dec
lods
stc
call
js
add
lods
pop
or
sub
cmp
jg
aaa
insb
mov
and
dec
add
scas
mov
jge
ret
ret
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
push
mov
jbe
jl
xor
jl
cld
fbstp
dec
lea
adc
lcall
fs
inc
lcall
fdivrs
test
adc
xchg
and
sbb
adc
cmp
dec
lret
jns
cmp
cmp
pop
cmp
pop
xchg
mov
in
movsb
xchg
out
sub
sbbl
rolb
lret
jne
inc
lods
pushf
mov
leave
in
jmp
testb
push
lods
std
ss
push
sbb
dec
mov
pop
jp
sbb
xor
or
xor
jmp
cli
xor
test
xor
xchg
sbb
sub
xor
xchg
cmp
scas
xchg
jbe
in
jnp
iret
sbb
adc
adc
out
push
pop
pop
mov
cmp
jno,pn
push
pop
cwtl
mov
xlat
sub
push
scas
lock
test
fcmovb
stos
stos
imul
pop
pop
leave
and
jb
add
mov
pop
call
xchg
inc
xor
xor
insb
shrl
loope
jmp
and
jle
test
fnsave
add
sub
das
sahf
insb
test
inc
sarb
sarb
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
addr16
jl
xor
jl
push
mov
lret
xchg
fcompl
clc
xchg
or
mov
fsubrl
mov
push
and
sbb
jae
and
sub
add
xor
enter
xor
sbb
xchg
lea
hlt
sbb
mov
mov
fwait
or
or
pop
sti
jbe
lods
sbb
xor
dec
sub
add
sub
push
movsb
fsubrs
mov
inc
int
es
gs
lock
sub
push
jge
mov
aas
lds
xlat
lock
mov
call
fadds
out
sbbl
xor
sbb
shrb
decl
jb
mov
or
pop
add
enter
push
insb
movsl
sub
imul
dec
aad
dec
ss
pop
fmuls
add
test
mov
cmp
dec
or
cmpsl
pop
rcr
inc
push
mov
xor
lods
pusha
xchg
mov
stos
daa
or
sub
dec
add
dec
push
sbb
mov
outsb
xchg
repnz
cwtl
pop
gs
inc
and
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
dec
sbb
bound
jg
jl
sub
mov
xchg
in
fmull
mov
movsl
or
fstps
lods
in
cmp
mov
or
je
andl
push
xchg
push
xchg
sbbl
ret
mov
mov
dec
testb
mov
or
xchg
hlt
mov
insb
xchg
sub
push
mov
imul
bound
jecxz
ja
cmp
clc
mov
xor
hlt
jmp
mov
dec
pop
pop
pop
or
out
and
xchg
stos
xchg
fwait
mov
ljmp
lcall
pusha
jmp
or
push
jb
mov
lds
add
out
cltd
pop
mov
fists
push
xchg
and
mov
sbb
cmp
mov
fdivl
fildll
fwait
xchg
push
xor
rol
fisubrl
push
ljmp
cmp
icebp
mov
adc
sub
loop
jne
test
mov
sbb
pop
adc
and
prefetchwt1
or
xchg
fdivl
cli
cltd
adc
or
out
rcll
movsl
stos
out
rcrb
mov
roll
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
inc
sub
jl
jg
jl
push
push
or
dec
insl
ret
jp
xchg
sub
xor
pusha
pushf
repnz
xor
and
push
scas
popf
mov
mov
push
daa
xchg
and
xchg
loopne
negb
mov
mov
ret
test
pop
fwait
call
jle
dec
jbe
out
clc
into
jns
xchg
and
nop
insl
mov
jnp
jmp
aam
popa
leave
and
jbe
scas
and
sbb
pop
add
rolb
cmp
dec
lret
or
jnp
inc
imul
pop
mov
in
inc
jmp
lea
ljmp
ficompl
pop
fcoms
daa
lea
jne
fyl2xp1
in
fldl
pop
enter
push
xchg
fsubs
xcrypt-ctr
cmpsl
fistpll
adc
mov
out
test
jnp
mov
adc
push
dec
test
loopne
dec
xchg
test
sbb
push
add
or
lods
push
mov
mov
or
ja
inc
sahf
imul
and
sar
sbb
mov
adc
scas
add
jle
mov
adc
ja
xchg
ds
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
sbb
jg
jl
pop
filds
icebp
mov
jb
jae
movaps
movsb
mov
mov
sahf
adc
loopne
inc
jne
mov
mov
repnz
mov
leave
xor
or
arpl
pop
dec
xlat
ss
or
or
out
jbe
pop
out
cmp
pop
lea
and
jns
push
adc
jmp
adc
int
int
fnstsw
push
lods
mov
lret
cmpsb
mov
std
ret
enter
popf
jg
mov
mov
in
leave
sbb
lahf
in
enter
dec
popf
cmpsl
jns
inc
sti
outsl
pusha
mov
leave
xchg
iret
cmp
ss
mov
and
mov
insl
sub
nop
dec
inc
adc
xchg
ret
decl
in
rclb
add
adc
loopne
sub
pand
leave
inc
mov
leave
xor
mov
lret
sub
mov
insl
ret
imul
push
in
mov
arpl
stos
fimuls
es
popf
and
popa
sahf
jmp
lods
daa
mov
ja
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
jnp
sub
jl
jg
jl
mov
mov
mov
or
out
sub
stc
jg
rolb
loopne
fistl
xchg
in
pop
pop
xor
das
in
fisubrs
xchg
adc
aam
jg
jge
jne
adc
xchg
cmp
and
sbb
inc
or
add
imul
cmp
adc
mov
xchg
lock
js
dec
mov
jmp
shll
pop
repz
sub
cmp
lds
pop
jle
adc
mov
xchg
mov
out
mov
imul
sti
sbb
adc
and
imul
or
lods
loopne
into
or
add
xor
mov
icebp
pop
sti
xchg
test
pop
test
sub
jb
stos
leave
mov
nop
stos
fwait
jns
pop
jae
add
push
repnz
sarb
mov
push
push
push
test
jge
sub
jg
jl
mov
jae
add
pop
pop
lea
xchg
daa
inc
adc
jecxz
mov
fldt
aaa
or
fnstcw
daa
shrb
sbb
and
je
pop
dec
cmp
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
xchg
data16
cmpsb
sbb
jl
cmpsl
or
jno
inc
and
pop
into
add
add
aaa
inc
sbb
nop
sub
lods
push
jnp
fdivrs
insb
sub
test
dec
ss
mov
int3
imul
pop
sub
pop
test
aas
rcll
dec
jge
push
pop
fstpl
mov
add
adc
movl
jnp
sub
push
xlat
pop
incb
xchg
push
ja
inc
in
addr16
jno
xor
adcb
or
loopne
lods
cmp
and
rcr
arpl
sub
movsb
mov
testl
ss
mov
mov
sub
push
jp
mov
fnstcw
outsl
dec
xlat
inc
jmp
mov
lahf
xchg
xchg
insl
pop
stos
popa
arpl
scas
or
jb
push
movsb
es
mov
mov
mov
push
xorb
enter
jl
sti
mov
aaa
inc
mov
shrl
out
dec
flds
lret
in
pop
clc
xor
adc
pushf
xor
add
bnd
jns
mov
add
jmp
psraw
out
frstor
stc
bound
jle
jl
xor
jl
push
mov
pop
mov
faddl
jne
mov
xor
out
xchg
inc
rclb
fisubs
xchg
scas
je
mov
pop
dec
jle
aad
pop
push
fistpl
sbb
inc
bound
xor
push
test
adc
mov
cltd
jb
mov
test
ljmp
test
mov
push
outsb
dec
lds
movsb
add
pop
push
repnz
and
shlb
std
sbb
icebp
mov
mov
test
mov
insb
lret
inc
dec
or
adc
xchg
or
daa
les
push
mov
mov
cwtl
fldenv
lock
jmp
inc
sub
cmpsl
push
push
inc
cwtl
aam
push
fs
pop
xor
test
xchg
jecxz
lahf
fwait
movsb
stos
mov
or
cltd
pop
push
repz
and
cmp
sub
bound
pop
arpl
push
sahf
jne
mov
pushf
cs
xchg
mov
cs
data16
inc
ljmp
mov
decb
mulb
aaa
aam
test
pop
mov
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
pop
cmpsl
mov
mov
ret
loopne
lds
push
in
dec
sbb
lods
stos
sar
push
adc
cs
push
out
in
into
nop
icebp
ds
sub
adc
orb
test
lret
repnz
sub
outsb
add
and
pop
mov
popf
mov
nop
cmpl
xchg
loope
xstore-rng
cmpsl
test
lds
sub
jg
sub
movsl
std
inc
stc
cmp
imul
cmp
sarb
popf
pop
jb
ja
int3
add
mov
mov
xorb
pop
push
imul
dec
pop
adc
or
cwtl
or
dec
or
loopne
mov
jp
out
movsb
dec
ds
call
xlat
adc
leave
sbb
jge
test
sub
sbb
adc
sub
ss
ret
lock
mov
push
and
pop
mov
push
iret
cmc
dec
cld
ljmp
test
inc
mov
mov
jge
xchg
jl
mov
dec
mov
push
inc
push
mov
push
sbb
repz
xchg
or
or
flds
adc
jl
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
divl
jl
xor
jl
cmpsb
mov
outsb
out
sbb
sbb
mov
jne
iret
or
jge
cltd
subl
in
jg
and
lods
lcall
das
cs
pop
or
call
loope
pop
cmp
or
repz
dec
outsl
and
xor
ret
icebp
mov
mov
pop
jns,pt
add
push
sbb
mov
push
inc
sub
int3
call
fcoml
cltd
xchg
jnp
xchg
and
repnz
mov
popf
xchg
mov
lret
je
push
scas
rcll
inc
pop
mov
mov
jns
mov
dec
adc
mov
lea
std
lods
inc
in
popa
rcrb
dec
xchg
mov
push
int
pop
inc
push
popa
pop
jl
cmp
push
aaa
mov
pop
jo
inc
es
adc
bound
loope
or
mov
popa
mov
push
daa
cli
ret
cmpsb
xlat
cld
fsubp
insb
stos
inc
mov
stos
inc
jo
push
ss
push
adc
lret
or
xor
stc
out
sub
inc
add
sbb
mov
hlt
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
lds
cmp
pop
lret
mov
xlat
sahf
lock
xor
jne
jno
out
or
shrb
sub
or
xlat
inc
lahf
daa
jno
adc
fisubrs
push
lcall
das
int
inc
jl
pop
aas
pusha
aam
pusha
jecxz
mov
xchg
nop
mov
cs
loop
lea
pop
aad
pop
ja
adc
mov
leave
jge
mov
je
negb
add
cmc
test
xor
inc
sub
icebp
mov
or
sbb
rclb
rclw
mov
sub
aas
mov
stos
inc
add
imul
scas
cmp
scas
push
pusha
sub
fldt
dec
ret
sbbb
xchg
pop
push
lea
dec
cmp
fisubrs
pushf
cmp
out
shlb
lock
mov
and
or
cltd
push
adc
ss
pop
jns
repz
cmp
jnp
cmp
arpl
jmp
pop
push
fsts
std
xchg
sbb
repz
cmp
pop
jecxz
xor
data16
ss
aas
add
and
jmp
out
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
cwtl
push
mov
sub
sbb
pushf
inc
cltd
jp
xor
int
mov
scas
mov
les
das
mov
in
xchg
or
jb
mov
jmp
lods
or
fistps
cwtl
ljmp
in
cmpsl
xchg
cltd
mov
mov
stos
fnstenv
call
hlt
popa
pop
lret
or
pop
xchg
dec
and
pop
add
or
cmpsl
push
xchg
jmp
dec
ss
push
sbb
outsb
sbb
in
xchg
mov
clc
imul
and
insb
xchg
les
jmp
dec
and
subb
lods
js
out
mov
test
int
test
stc
pop
mov
sub
jae
adc
sahf
aaa
incb
or
dec
xchg
es
mov
add
test
stc
ja
push
fadd
cmp
neg
cmpsl
lahf
ljmp
out
and
cmp
mov
xchg
scas
in
into
out
movsl
jp
in
xchg
mov
dec
gs
and
mov
shrb
cmp
sub
call
test
mov
mov
jmp
or
push
cmp
dec
shrl
jl
xor
jl
or
sub
lea
jnp
inc
jge
sahf
xor
scas
mov
fldenv
pop
or
jno
insl
int
test
ret
fcmovu
mov
jge
add
icebp
mov
dec
cmp
inc
xchg
in
pop
nop
mov
add
or
sbb
and
pop
loop
shll
lcall
cltd
mov
sub
lahf
push
pop
jle
mov
ret
sbb
je
mov
gs
mov
int
mov
das
inc
adc
pop
inc
xchg
outsl
or
adc
push
pop
push
insl
or
xor
adc
cmp
vmulsd
and
adc
pop
daa
sarb
mov
sahf
repz
lret
xchg
jb
imul
mov
gs
or
mov
add
jmp
inc
xchg
lret
or
movsb
adc
xchg
push
shll
in
mov
mov
das
addb
je
and
lret
add
mov
outsl
scas
lock
nop
xchg
mov
adc
xchg
mov
cli
test
mov
mov
adc
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
test
mov
scas
adc
jl
jg
jl
mov
lret
add
jno
adc
jae
mov
cmp
lret
lea
dec
cs
push
cld
test
pushf
sbb
fldl
jg
push
xchg
jbe
sub
jae
push
loopne
fbstp
stc
aaa
in
xor
xchg
inc
push
fistl
mov
and
shll
int
popa
inc
stc
je
push
ret
inc
outsl
out
nop
sub
sub
gs
daa
cmp
adc
in
lods
out
and
add
jmp
stc
in
jmp
xor
imul
sbb
mov
repz
and
push
jl
cli
add
fmuls
insb
or
sbbl
and
mov
test
mov
xor
movsb
push
xor
icebp
cwtl
jb
xchg
adc
orb
add
push
jle
sbbl
mov
loopne
pusha
mov
fnstcw
push
mov
ffree
mov
xchg
rcrb
movsb
lret
sarb
push
aam
mov
sbb
adc
loope
flds
sub
cltd
xchg
into
sbb
cmc
pop
xor
inc
cmp
out
cmpsb
in
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
dec
int3
cld
jecxz
insl
jge
adc
inc
in
push
add
or
or
gs
sbb
xor
hlt
fidivrs
sahf
xor
inc
stos
jne
jo
push
mov
loop
dec
cltd
jle
dec
nop
ljmp
pop
add
loop
dec
dec
iret
push
inc
fcompl
xchg
outsl
fwait
out
cmpb
mov
pop
dec
ficoml
push
scas
and
lcall
mov
push
mov
rcl
hlt
in
xor
mov
push
sbb
fwait
data16
mov
xchg
je
shlb
dec
jmp
enter
jge
aam
cltd
test
fs
adc
inc
lcall
mov
push
xor
inc
outsb
push
sub
xchg
add
push
lret
loop
fldt
jno
int3
jb
arpl
mov
inc
push
add
sbb
sub
movsl
aam
lock
mov
push
adc
enter
pop
cmp
rolb
cmp
arpl
cltd
or
mov
js
mov
lea
pop
or
movsb
xor
xchg
fs
push
sbb
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
inc
les
sub
jl
jl
inc
test
mov
mov
loopne
jne
stc
pop
mov
nop
adc
daa
repz
movsb
or
jl
sbb
out
sub
push
and
es
mov
inc
jecxz
jge,pt
loop
mov
test
sub
outsb
popa
das
daa
cltd
sbb
lds
lret
xchg
and
xchg
xchg
es
loopne
rcrb
mov
rcr
sbb
lds
pop
mov
jb
stos
add
adc
sub
xchg
mov
dec
les
dec
jae
ret
sbb
das
inc
dec
adc
push
das
push
inc
ficoms
sbb
insb
daa
xor
push
dec
aam
mov
push
les
xchg
xchg
sarl
les
adc
repnz
jne
dec
imul
test
loop
out
mov
mov
dec
shlb
jmp
shl
xchg
fs
jns
adc
jne
sub
sub
jl
jl
push
rclb
scas
pusha
lcall
inc
jns
into
fsubrs
push
mov
and
push
shll
vaddps
pop
xor
push
inc
and
mov
dec
jmp
jns
cs
lcall
mov
in
scas
mov
push
repz
sahf
out
test
clc
jp
jp
inc
stos
bound
out
les
sti
and
xchg
dec
dec
jecxz
test
lods
ds
out
into
and
push
dec
mov
outsl
aas
gs
test
xchg
cltd
push
addb
sub
mov
int3
int3
inc
cmpsb
add
adc
adcl
xchg
push
mov
xor
bts
or
xchg
fadd
test
mov
dec
and
cmpsl
and
dec
jle
or
mov
ja
nop
loope
test
mov
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
loope
jae
sub
jl
bound
xor
mov
ja
lcall
daa
sbb
roll
add
mov
into
daa
adc
outsl
push
negb
adc
and
cmp
push
and
push
jmp
sti
stos
mov
or
stos
aas
lahf
push
inc
add
adc
jmp
xor
outsb
cmp
adc
out
lret
lds
mov
dec
dec
jge
gs
sub
and
push
lret
push
loopne
jle
lret
mov
jl
movsl
fildll
xchg
push
xchg
outsl
loope
jg
int
lret
mov
ss
add
pushf
jne
aas
cmp
out
jle
cmpsl
xchg
mov
adc
xor
test
sbb
cmpsl
pop
sbb
mov
push
outsb
push
cmpsl
add
cmpl
xor
gs
cltd
cmpsb
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
adc
sub
jg
jl
les
lds
lds
and
fidivl
mov
cwtl
pop
andl
in
ret
dec
outsb
popf
pop
inc
js
incb
mov
and
pop
jge
xchg
mov
sbb
push
dec
mov
hlt
push
out
dec
bound
jg
cmpsl
aaa
mov
xor
mov
ret
cltd
sbb
pusha
inc
mov
push
and
cmp
es
rolb
xchg
dec
mov
inc
ret
in
clc
mov
sti
and
cld
push
mov
movsb
enter
test
dec
push
in
jbe
sub
push
cwtl
cmp
cmc
inc
inc
push
fcmovne
jp
pop
dec
cltd
aad
popa
add
xchg
lods
ja
dec
lcall
cmp
push
nop
pop
xlat
xchg
cmp
lcall
cmp
mov
imul
lock
sub
sub
add
adc
shll
lahf
pop
insb
mov
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
sbb
cmp
jl
sbb
jl
and
mov
scas
lret
mov
mov
push
jns
fisttpll
jns
inc
lock
in
push
add
sub
mov
pop
sub
imul
mov
cmpsl
add
push
sub
jle
pop
cmpsl
mov
add
cmpsl
sarl
push
dec
cvttps2pi
cmp
leave
xchg
mov
cmp
mov
dec
or
mov
js
ret
stc
xor
bound
add
outsl
jmp
fwait
popa
fldl
mov
mov
push
rcll
dec
call
bnd
addl
in
fwait
int
and
aam
mov
mov
cmp
sti
sbb
repnz
insl
dec
jecxz
cmp
pop
lcall
pop
cmp
ja
not
push
stos
or
mov
adc
push
push
arpl
pop
jp
mov
xchg
aam
jno
pop
shrb
push
loope
sub
push
mov
jae
movsb
mov
sbb
pushf
flds
ds
mov
jle
icebp
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
je
sub
jl
jg
jl
mov
rcl
dec
inc
clc
pop
fs
jl
das
cmpl
mov
rorl
inc
test
jnp
add
jl
stos
ret
test
mov
out
pop
aam
fstl
fstps
faddl
sbb
aad
pop
mov
jbe
push
pusha
mov
repnz
addr16
sbb
sbb
insl
fs
mov
jmp
jmp
movsl
sahf
mov
and
jo
xchg
xchg
xor
scas
inc
push
add
mov
lea
dec
fnstsw
bound
and
aad
enter
sbb
call
mov
adcl
loopne
mov
lret
movsl
rorl
stc
mov
xchg
push
inc
inc
ret
adc
xor
inc
adc
jnp
add
fcmovb
or
lahf
and
dec
and
je
scas
test
mov
imul
nop
leave
adc
insl
pop
xor
aaa
lods
out
popa
inc
adc
and
mov
sub
inc
and
adc
test
jmp
pop
loope
sbb
lret
mov
push
inc
lods
popf
in
jl
sbb
jl
xlat
xchg
insl
mov
sub
push
out
sub
add
xlat
cmc
call
or
hlt
leave
test
cmp
or
sbb
mov
das
or
xchg
dec
cmp
mov
push
test
sub
inc
scas
jne
push
ja
xor
ret
fnsave
push
sub
mov
inc
ffreep
pop
sbb
popf
scas
mov
push
or
mov
inc
push
hlt
sbb
xchg
pusha
mov
jmp
sbb
inc
fisubrs
jg
xchg
push
les
jg
and
rorb
xor
loope
or
in
cmpsl
mov
stc
mov
test
imul
orl
jae
cmc
es
mov
sub
and
sub
and
mov
jb
leave
arpl
mov
push
mov
jne
outsb
dec
ficompl
sti
mov
sub
pop
or
pop
pusha
stc
mov
fcmovb
sub
popa
pop
xchg
jle
and
push
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
clc
cli
test
jl
jg
jl
dec
pusha
xchg
cmpsl
push
stos
push
sbb
inc
sub
or
stos
movsb
fcoml
fldl
sti
ja
adc
and
decl
sub
pop
daa
lock
addr16
sub
stos
aad
jle
push
data16
cmp
fs
stos
repnz
aaa
pop
xor
mov
in
add
inc
in
adc
jb
rcr
xchg
cltd
jbe
mov
loop
leave
mov
pushf
dec
cmp
sbb
inc
ja
es
adc
mov
movsl
popa
das
mov
pop
pop
jle
mov
int3
dec
jno
or
movsb
inc
cltd
xor
std
jl
pop
mov
mov
test
xor
add
adc
cmpsb
loope
fldenv
cmpsb
sub
sub
and
loop
dec
ret
cld
dec
sub
in
pop
sub
mov
fisttps
or
adc
adcb
insl
inc
xchg
fsubrs
or
out
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
addb
jg
jl
jno
push
xchg
add
movsb
popf
loop
int
sbb
xchg
in
and
loop
and
xor
les
push
rolb
idiv
stos
jge
jg
mov
push
and
mov
sbb
or
stc
insl
or
imul
out
cwtl
aaa
pop
rorb
sti
test
scas
sub
mov
push
and
and
jge
fcomps
xor
xchg
jle
pop
rcrl
fcoms
pushf
rcrl
pop
out
add
lcall
adc
stc
fldl2e
jecxz
sbb
dec
mov
mov
xor
clc
push
idivl
movl
xor
out
sub
out
xor
stc
add
push
sub
lahf
dec
std
hlt
outsl
push
dec
aad
pop
or
mov
ret
ljmp
or
push
jecxz
addr16
xchg
jle
and
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
xor
jo
scas
and
jg
jl
mov
dec
lods
adc
jl
mov
into
xor
fldenv
pop
sbb
push
stc
cmpsb
iret
fs
outsb
daa
out
cmp
stos
shlb
and
out
inc
mov
dec
inc
mov
inc
cmp
inc
pop
pop
jp
ret
jnp
jge
inc
jmp
imul
stos
adc
mov
fwait
jns
and
inc
leave
or
jle
mov
repnz
sbb
test
add
mov
cmp
jl
adc
insb
cli
inc
jno
out
fs
mov
mov
stc
mov
sbb
lods
sub
int
out
mov
push
out
cmp
adc
adc
pslld
xchg
or
enter
sub
dec
cwtl
ret
cwtl
pop
fmull
xchg
xchg
sbb
movsl
fs
aad
jmp
jmp
frstor
mov
iret
movsb
jmp
out
jecxz,pn
fidivrl
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
mov
jl
jg
jl
mov
mov
test
scas
inc
pop
lcall
mov
cmp
out
sbb
inc
mov
inc
mov
mulb
cmp
mov
arpl
lret
pop
jecxz
mov
xchg
cld
jp
lods
lods
movsb
cld
insb
inc
pop
or
cmpsb
stc
dec
xlat
orl
mov
mov
xchg
addb
sahf
loopne
enter
je
icebp
dec
enter
mov
insl
lock
and
push
aaa
addr16
rclb
arpl
xor
movsb
rolb
inc
scas
pop
mov
imul
pushf
cmp
lock
sahf
mov
leave
xor
sub
xor
xabort
xchg
push
ja
aam
inc
jecxz
push
icebp
fldcw
xor
and
dec
pop
dec
or
push
mov
lcall
mov
or
ds
cmc
js
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
test
jl
jg
jl
shrb
cmp
xchg
mov
mov
xor
dec
adc
jl
shrl
jp
inc
stos
xchg
jecxz
and
scas
imul
jne
stos
into
in
add
les
push
inc
inc
jb
gs
mov
add
ljmp
mov
dec
shlb
fnsave
pop
in
gs
stos
sbb
pushf
aaa
inc
xchg
inc
mov
inc
xor
pand
mov
ljmp
loope
test
jo
cmpsl
dec
movsb
xor
pop
mov
fmulp
iret
pop
and
mov
ret
or
mov
lods
ret
repnz
sub
fmul
movsb
push
adc
sbb
or
inc
mov
ja
mov
in
into
mov
sbb
xor
push
cmp
inc
xor
xor
adc
xchg
pop
dec
lret
ret
adc
sbbb
insl
or
iret
push
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
mov
jl
or
inc
aad
dec
sbb
movsb
scas
add
inc
mov
aad
test
pop
dec
test
cltd
dec
movsl
or
push
loope
mov
cmc
or
out
movsb
mov
cmp
cmc
mov
je
imul
div
int3
scas
addr16
das
lret
xor
or
ds
or
xchg
mov
sbb
jp
mov
mov
subb
sahf
push
lock
insb
push
inc
out
pop
jo
xor
pop
cmp
and
or
into
or
iret
xor
roll
dec
xor
sub
sbb
lret
popa
fucom
out
insb
mov
shll
clc
and
mov
std
call
sahf
outsl
and
mov
pop
sbb
imul
sbb
into
adc
mov
mov
lods
jle
cmp
out
xchg
mov
dec
sbb
jg
fsubp
jb
push
neg
jmp
pop
dec
jns
clc
inc
xlat
sub
jmp
incl
add
add
add
sti
inc
add
inc
in
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
add
jl
or
insl
mov
rolb
pushf
lret
jge
push
pop
add
test
pop
pop
or
sahf
inc
mov
je
jae
js
out
dec
jno
mov
mov
sub
pop
outsl
mov
pop
mov
divl
mov
inc
xor
movsl
adc
cmp
xor
lock
xor
fbstp
gs
xchg
push
clc
pushf
fs
mov
scas
daa
int
mull
movsl
lds
ret
mov
lcall
pusha
mov
and
shl
adc
sbb
iret
into
test
push
loop
filds
pop
lods
repnz
pop
cmpsb
call
push
xor
mov
mov
fsubrs
inc
addr16
cmp
test
test
inc
push
mov
xor
neg
and
add
jns
inc
leave
cmp
sub
xor
or
jp
push
jnp
or
shlb
xor
adc
sarl
mov
add
push
jmp
sub
jge
jge
fnstenv
loopne
jnp
jl
or
stos
mov
push
push
addr16
stc
jp
stos
cmpl
fisubrs
cmc
fcoml
mov
cmp
pushl
cmpsl
xor
outsb
cld
mov
adc
inc
adc
fidivs
adc
mov
mov
fwait
lcall
rep
push
scas
inc
dec
inc
add
xor
jb
pop
mov
or
int
pop
sbbl
mov
or
jo
or
insb
mov
jnp
pusha
inc
repz
or
inc
in
incb
cmp
adc
jmp
push
lock
lret
pop
insl
jp
inc
fnstcw
or
push
addr16
mov
adc
in
xchg
out
or
sub
and
mov
pop
test
rcrb
scas
sub
hlt
stos
cmp
fnstsw
mov
sahf
std
xchg
mov
cli
jno
and
mov
or
jns
mov
mov
jmp
shr
dec
pop
pop
jns
insl
adc
fidivl
jl
jg
jl
mov
test
and
cltd
xor
mov
pop
fwait
enter
in
out
fnstsw
xor
negb
pop
adc
add
pop
dec
aas
sub
psubb
sub
mov
in
es
and
shl
imul
lock
dec
mov
sbb
into
leave
ss
mov
push
gs
inc
cmp
pop
pusha
inc
pop
mov
xor
sbb
ljmp
aaa
cli
dec
pop
and
xor
nop
xor
cs
xchg
dec
int3
xchg
outsl
pop
loope
cwtl
add
push
lock
cmp
out
ficompl
nop
inc
scas
dec
mov
pop
lds
jns
pop
ja
leave
jns
out
cltd
in
data16
inc
sbb
mov
aam
leave
vmovsd
inc
push
mov
ljmp
sbb
mov
movsb
mov
fadd
mov
sbb
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
mov
jl
jg
jl
popf
cmpsb
js
hlt
dec
add
adc
pop
popa
pop
shll
inc
jb
or
nop
mov
bound
cmp
mov
icebp
xor
ret
or
jns
push
rorl
dec
inc
insb
test
ljmp
adc
pop
mov
pop
test
fildll
mov
roll
adc
outsl
idiv
sbb
loopne
js
cmc
test
jne
mov
push
mov
arpl
mov
popf
aaa
in
test
sbbl
pop
popa
sub
inc
mov
in
cli
nop
adc
mov
cwtl
lret
sahf
inc
add
jg
jno
cltd
inc
sbb
and
mov
inc
ds
inc
jmp
cmp
cli
loope
test
lods
popa
pop
jl
sub
das
and
lds
and
cs
pop
or
jnp
mov
sbb
sub
popa
movsl
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
mov
or
iret
lahf
gs
leave
insb
add
push
xor
fcmovnbe
dec
cmp
jno
pop
mov
and
cmp
inc
sub
nop
in
dec
sub
sahf
or
sahf
mov
push
sbb
jmp
icebp
je
push
jge
call
imul
inc
mov
insb
jp
mov
ljmp
mov
and
fdivl
mov
icebp
scas
xchg
icebp
nop
inc
pop
fnclex
pop
push
and
stos
out
inc
mov
sbb
push
scas
jge
mov
aaa
jp
shl
mov
and
mov
xchg
inc
jbe
xchg
adc
rcll
outsl
cmp
inc
jae
hlt
stc
call
or
lcall
xchg
enter
ret
popf
add
fs
cmp
jmp
or
jno
mov
aad
shlb
data16
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
int3
sbb
cmp
jg
jl
mov
or
daa
sub
scas
dec
inc
test
and
repnz
rclb
fisttpll
jo
mov
mov
inc
pop
jp
out
jp
icebp
test
xlat
mov
gs
ret
cli
cmp
cmc
xchg
mov
and
sub
adc
dec
std
orb
cs
nop
cmp
or
cmp
bound
ja
sbb
pop
push
les
push
mov
pop
jne
xchg
or
in
popf
push
and
mov
jecxz
in
jo
sarl
std
sub
sub
dec
iret
push
push
icebp
inc
int3
and
and
out
iret
jg
mov
ffreep
mov
mov
mov
pop
cmpsl
lret
adc
dec
addr16
fdivs
and
inc
test
push
jl
adc
pop
xchg
pusha
stos
repnz
insl
out
movsl
mov
enterw
shlb
ja
mov
call
std
or
lahf
ljmp
clc
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
xor
jl
or
pop
ret
stc
xchg
imul
adc
mov
daa
aaa
out
add
int
in
scas
sub
les
or
pop
push
in
cmp
sub
les
xchg
and
push
push
dec
fidivl
xchg
sbb
add
push
pop
add
xchg
adc
jb
popa
sbb
inc
sub
loopne
jecxz
mov
mov
push
dec
loopne
subb
xchg
and
in
gs
loop
sub
cwtl
je
push
and
inc
sbb
sbb
pop
pop
xchg
push
xorb
mov
sbb
pop
fadds
fdivs
scas
sahf
inc
and
stos
outsb
shrb
test
outsl
adc
ss
out
std
pop
mov
mov
jge
daa
sub
mov
shrd
shl
xor
hlt
jg
or
sti
addb
pop
mov
sti
loope
mov
mov
fwait
bound
imul
xor
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
mov
jl
jg
jl
imul
mov
mov
adc
adc
add
scas
mov
into
das
cmc
lds
push
jo
pop
sbb
cmpsl
push
outsb
sbb
fdivrl
je
add
push
add
cmp
sbbb
mov
push
les
cs
mov
push
imul
or
out
push
or
arpl
sbb
xchg
sub
jmp
stos
scas
push
ljmp
sbb
mov
addl
sub
insl
icebp
cmpsb
mov
push
pop
inc
icebp
ret
inc
daa
pusha
push
gs
ficoms
cwtl
bound
add
mov
sarl
push
cld
sbb
or
xchg
outsl
fsubrs
test
add
or
hlt
repz
dec
jp
push
dec
push
int
mov
jmp
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
lahf
add
sarb
jl
or
push
imul
loopne
dec
dec
mov
xchg
mov
nop
enter
mov
xchg
insl
fsubrs
in
xor
and
pop
xor
outsl
mov
leave
scas
add
mov
leave
test
out
arpl
hlt
xchg
and
jbe
pop
lea
sbb
or
inc
cli
sbb
js
inc
mov
imul
insl
and
daa
sbb
js
add
addr16
mov
sub
call
adc
movsb
sbb
dec
or
mov
popf
push
mov
inc
gs
mov
ds
inc
push
iret
cwtl
mov
aas
mov
mov
test
ds
and
mov
clc
rcr
mov
xchg
cmp
mov
mov
loopne
adcl
dec
stos
mov
ret
push
stos
mov
inc
mov
daa
test
xchg
inc
outsb
sub
loop
or
enter
mov
or
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
pop
dec
adc
jl,pt
push
jg
jl
cmp
lds
insb
cltd
or
sti
shr
sti
fimuls
or
arpl
leave
outsb
out
stc
or
notb
test
pusha
mov
and
call
sub
popa
iret
jns
xchg
push
scas
lea
fdivrl
cld
pop
mov
sti
jle
dec
clc
test
fisubrs
dec
rolb
mov
mov
add
daa
xor
ss
xor
jo
push
stos
and
in
cmp
cli
dec
mov
mov
sbbl
inc
push
xchg
test
cmp
add
jo
std
and
insl
movsb
out
popf
inc
push
mov
stos
pop
cmp
pop
mov
mov
int3
imul
sbb
fmuls
cs
icebp
pop
pop
adc
inc
mov
jecxz
test
pop
pop
jmp
push
repz
mov
rorl
int
pop
jl
mov
inc
inc
adcl
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
aas
add
pop
rcrl
xor
clc
and
push
ja
orb
aam
cmpsl
bound
out
adc
loopne
jns,pt
dec
push
dec
gs
adc
sti
inc
pop
xor
fcom
mov
pop
adc
ret
daa
inc
mov
push
fists
cmp
xor
and
mov
in
jl
add
jg
dec
imul
mov
jnp
cmp
ret
jge
pop
mov
fists
inc
xor
or
sub
jmp
xor
jecxz
stc
push
jmp
cwtl
jnp
fsubrl
push
lds
jge
xchg
bound
and
ret
lret
dec
mov
std
sub
push
cmp
movsb
ret
mov
outsl
pop
pop
mov
icebp
dec
in
and
insb
mov
inc
outsl
dec
dec
xchg
pop
cs
fwait
mov
jbe
ror
cmp
scas
add
lahf
jge
addb
cmpsb
xchg
fwait
cmp
dec
cmc
int
inc
fsubr
xor
add
movsb
flds
xor
hlt
mov
jg
jl
or
push
pop
or
sub
movsb
jle
push
rclb
cmp
enter
xor
in
and
add
sti
dec
mov
sbb
ret
add
jl
gs
add
test
imul
in
jecxz
mov
and
sbb
xchg
mov
arpl
adc
lock
loopne
add
neg
jb
fildl
test
out
stos
sbb
rcrl
sbb
mov
ret
enter
push
or
xor
in
adc
inc
push
adc
sub
rcr
nop
pop
test
inc
cmp
sub
pop
sub
aam
cltd
xchg
add
pop
mov
pop
inc
scas
bnd
mov
test
scas
mov
fldt
clc
popa
add
mov
xor
add
and
mov
mov
xor
push
or
cmp
cmp
xor
dec
mov
mov
sub
push
iret
daa
lcall
inc
or
or
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
loope
dec
ljmp
jl
in
call
nop
lds
sub
arpl
repnz
xor
lcall
xlat
xchg
push
cmp
incb
add
pop
push
pop
neg
fbstp
sub
xchg
sbb
in
sub
jl
in
mov
pop
dec
xlat
add
xchg
fimull
jae
sbb
jb
iret
ret
jl
mov
pop
ret
xchg
jmp
push
adc
rcrb
mov
imul
int3
mov
fs
pop
jns
xchg
mov
pusha
or
pop
pop
dec
scas
push
das
imul
or
inc
pop
lret
fldt
fidivrs
push
sbb
fldt
cmp
jne
cmp
in
rolb
push
sbb
fists
cli
pusha
sbb
inc
pusha
add
fs
loop
inc
pushf
xor
addr16
mov
rorb
test
in
repnz
adc
fwait
adc
mov
jmp
rcl
aas
imul
mov
add
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
sub
inc
pop
xor
jg
jl
ret
dec
lcall
je
pusha
aam
rcrb
les
adc
mov
dec
imul
push
mov
idivb
cmpsb
out
shll
repnz
sbb
add
xchg
or
mov
cmp
fwait
imul
jbe
xchg
sub
mov
dec
jnp
fdivl
pop
mov
pop
test
xor
jnp
sbb
sub
pop
xchg
fistpl
cwtl
stc
or
sbb
inc
inc
mov
push
jmp
inc
mov
popf
jae
ret
pop
and
mov
in
and
xor
sbb
fisttpl
mov
int3
pushf
dec
cmp
icebp
out
adc
pop
xchg
xchg
loope
daa
fldcw
add
outsb
outsl
mov
fisubrl
sti
mov
jnp
mov
push
jns
mov
add
cmp
pop
pop
adcl
shlb
in
lods
sub
dec
dec
jbe
xchg
out
inc
imul
xor
add
aam
dec
add
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
mov
xor
jl
or
inc
movsb
aas
jecxz
stos
aad
lahf
xchg
clc
xor
imul
test
sbb
cli
sar
repz
loop
push
fs
sbb
fistl
pop
sub
xor
imul
add
imul
pop
andb
das
ret
icebp
sbb
inc
and
mov
fists
mov
lahf
inc
btc
mov
sbbl
push
inc
fldcw
sar
or
frstor
and
jb
or
dec
jmp
ja
je
inc
pop
stos
jb
arpl
je
popa
cmp
out
sub
lea
aas
xchg
ret
sti
sub
jmp
cmc
ss
push
fucomp
add
xor
pusha
xchg
es
insb
mov
cmp
xchg
jnp
pop
cmp
leave
sbb
mov
iret
lret
gs
push
cmpsl
cmc
xchg
test
jnp
lret
fdivl
ret
mov
push
pop
mov
divb
data16
ljmp
jns
xor
add
cmp
add
push
add
add
add
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fcomip
cmp
jl
jg
jl
outsb
adc
neg
pop
inc
sbb
sbb
mov
in
lock
lods
daa
data16
sub
movsb
push
divl
das
xor
call
xchg
push
aam
sbb
xor
stos
pop
insl
adc
dec
push
outsb
outsb
das
add
mov
iret
adc
adc
push
insl
das
jae
add
mov
pop
dec
mov
jl
test
jl
mov
adc
sub
mov
push
ss
and
test
jno
sub
and
or
ficoml
movsb
dec
sahf
jmp
pop
hlt
or
lret
xor
dec
jle
and
lds
ljmp
movl
shll
jne
arpl
add
xor
aam
jmp
and
sub
idivl
fimull
mov
jns
pop
cmp
jb
inc
test
leave
iret
call
icebp
movsl
sbb
sub
leave
loopne
in
sub
lods
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
jge
or
or
push
lret
mov
dec
in
sub
imul
jns
mov
cli
clc
das
popf
outsb
jnp
std
mov
adc
mov
mov
addr16
mov
mov
xor
xlat
adc
cmp
push
mov
movsb
clc
notl
mov
fdiv
push
shrl
inc
movsl
jae
jno
push
inc
mov
jmp
shlb
in
push
push
adcl
jecxz
push
push
push
xor
repz
inc
int3
rcll
adc
adc
push
nop
andb
insl
mov
pop
cli
data16
pop
es
sbb
shll
orl
fnstsw
mov
xorb
je
pop
push
add
fimuls
out
gs
arpl
jns
imul
movsb
dec
jge
adc
iret
cld
jmp
push
pop
mov
xchg
aam
in
pop
xchg
inc
out
clc
fwait
add
xchg
add
inc
hlt
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
mov
push
jg
jl
pop
sbb
inc
dec
mov
adc
dec
fwait
pop
mov
lods
clc
mov
sahf
sub
mov
lea
frstor
scas
div
bound
aam
in
addr16
int3
shl
lods
in
int3
pop
push
xchg
das
in
mov
shl
mov
bswap
sbb
lret
int
repnz
xor
cmp
fisubrs
cmp
mov
and
mov
mov
mov
cwtl
jle
mov
xor
or
fs
loope
cmc
and
sarl
mov
fadds
fiaddl
leave
fwait
add
mov
sub
cmp
jo
push
ffree
popa
mov
fs
jnp
nop
testl
adc
inc
js
xor
int
notb
mov
jle
into
lahf
iret
sub
leave
pop
xlat
popf
mov
cltd
lods
push
loope
popa
ret
mov
mov
mov
or
sbbb
outsb
pop
cmc
insl
mov
jge
push
mov
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
mov
enter
jg
jl
pop
xchg
xchg
mov
fs
mov
push
mov
sahf
gs
dec
popa
jnp
mov
les
loopne
cmp
push
pop
pusha
int3
in
xor
lock
pop
imulb
rolb
loopne
jb
jle
test
jo
mov
jecxz
and
stos
shll
xchg
repz
xchg
sbb
xchg
sbb
cmp
sub
push
add
scas
je
movsl
sti
test
aad
or
jno
test
mov
cmp
call
sbb
dec
ljmpw
lods
fidivs
jne
clc
jne
lcall
and
fs
arpl
and
lret
jnp
pop
jmp
add
pop
dec
mov
incb
nop
cli
push
in
je
or
xchg
stos
adc
dec
mov
xchg
push
cmp
mov
outsl
pop
sahf
push
adc
mov
or
test
pushf
push
psubb
push
cs
fdivrl
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
ljmp
jl
jl
jl
sub
jo
mov
push
cmp
sbb
pop
aas
xchg
daa
loop
sti
cmp
xchg
aas
sub
test
inc
mov
enter
out
dec
mov
pop
inc
push
xlat
mov
iret
repz
imul
shll
stos
jns
mov
lock
pop
xchg
sub
idiv
addr16
insb
addr16
cmpsb
xlat
mov
pop
fsubrl
cltd
shl
mov
rcll
out
mov
loopne
dec
xor
dec
iret
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
xchg
repz
mov
adc
adcb
test
call
pop
jne
mov
idiv
cli
out
andl
inc
jge
xchg
inc
cmp
jbe
or
rolb
dec
scas
push
popa
mov
pop
cmpsb
call
pop
mov
sbb
cs
push
fsubs
adc
jno
iret
push
stc
inc
movsb
cmp
scas
xchg
jecxz
sub
push
orb
sbb
loope
lcall
xchg
dec
inc
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
mov
pop
pop
pop
repnz
bound
rclb
sub
xchg
mov
pop
stos
out
mov
adc
sub
cmp
sarb
cmp
and
outsl
popf
das
aam
mov
stos
shrl
xlat
imul
pop
mov
test
in
pop
shr
sbb
mov
js
fnstsw
jle
leave
cs
dec
jnp
mov
imull
adc
test
mov
imul
xor
cli
push
xchg
push
pusha
adc
jge
dec
xchg
sbb
push
pop
stos
adc
pop
sti
push
xchg
xor
jg
mov
popa
ds
ds
sub
data16
stos
int
adc
sub
js
orb
lea
push
decl
lret
sbb
scas
pop
pandn
push
fists
xchg
out
shrb
out
push
and
fisubs
andb
jecxz
push
dec
push
addl
scas
das
mov
push
push
push
mov
jae
aaa
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
test
cld
mov
int
jl
jg
jl
mov
test
pop
pop
arpl
icebp
and
inc
ja
pop
fwait
mov
pop
push
xchg
clc
adc
imul
hlt
push
fstps
ja
dec
repnz
push
ljmp
cmc
mul
push
push
mov
adc
sub
xor
scas
bound
inc
jl
dec
enter
cmc
cltd
inc
aaa
mov
push
fistl
xchg
xchg
mov
pop
push
or
stos
aas
seto
fcomip
sbb
lret
mov
pop
rolb
adc
fistl
adc
scas
decb
lea
fidivrs
cltd
mov
inc
and
pop
aaa
pop
mov
lods
push
insl
push
dec
pop
mov
lds
jbe
inc
pop
arpl
and
mov
test
add
aaa
in
sti
test
filds
movsb
pop
data16
imul
icebp
sub
repnz
insl
bound
mov
jo
ret
and
lods
lcall
fwait
mov
push
loope
sub
sub
icebp
ja
js
mov
mov
roll
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
push
jno
jl
daa
jg
jl
adc
sahf
mov
xor
inc
adc
and
xchg
jge
pop
jae
inc
popf
mov
int
jecxz
mov
add
mov
inc
out
mov
and
xor
mov
jge
sub
bound
inc
push
sub
outsl
xchg
es
clc
aaa
insl
es
orl
pop
and
adc
lahf
xor
cs
cmp
push
mov
mov
call
sub
icebp
test
lcall
pop
push
adc
or
cwtl
inc
jns
push
lret
ror
lds
nop
jp
cmpsl
pop
jae
dec
mov
jl
lcall
out
add
test
sbb
aad
testl
adc
cld
push
lea
sbb
aaa
shrb
cld
xor
dec
and
sarb
and
ret
xchg
adc
div
dec
loopne
ret
jl
jmp
das
pop
test
das
jo
pop
subb
cmp
xchg
jmp
xor
test
daa
and
and
or
inc
mov
add
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
and
std
xchg
cmp
jl
daa
jg
jl
mov
movsl
jp
cmp
adc
push
imul
shll
test
sbb
punpckhbw
negl
aas
jecxz
ficoms
addr16
icebp
into
mov
stos
adcl
inc
movsl
movsl
popa
out
dec
adc
call
mov
pop
push
ja
imul
add
fwait
add
add
enter
push
adc
sbb
inc
and
and
push
push
jle
jge
xchg
jge
mov
fcoms
aam
icebp
loopne
pop
add
int3
idivl
pop
pop
sti
lock
out
adc
and
cmp
cmpsl
ds
push
dec
sbb
test
dec
jl
fmull
ljmp
movsb
lea
dec
mov
hlt
int
ss
dec
lea
jmp
in
lock
lahf
inc
mov
cmpsl
jge
call
inc
loop
dec
cmc
xor
sub
jmp
lods
xchg
out
mov
sbb
and
xchg
rcrb
fstpl
gs
divl
xchg
jge
mov
jg
lcall
cmpsl
rorl
cmpsb
push
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
jno
jecxz
jl
lret
jl
jb
push
push
push
push
mov
dec
adc
sub
and
scas
xchg
jp
popf
aaa
cmpl
lret
sahf
xor
and
leave
pop
rcll
std
xor
and
xor
insb
js
jnp
or
xor
ror
rdtsc
pop
mov
mov
pushf
mov
lret
pop
mov
jp
sub
dec
jl
add
mov
mov
mov
fisttps
sub
mov
lcall
inc
mov
push
arpl
push
fstpl
cwtl
cmc
sub
dec
adc
int3
push
push
ljmp
add
or
cltd
movsl
loope
mov
popa
dec
hlt
movsb
xchg
xchg
or
enter
mov
jo
shr
in
sub
mov
ds
jb
adc
pop
mov
dec
mov
mov
sbb
imul
or
mov
mov
jmp
lcall
mov
dec
stos
sub
fadd
adc
mov
js
cmp
imulb
stos
dec
nop
jb
pop
jp
add
add
xor
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
shrb
lods
add
test
lret
lret
jp
sbb
lods
pop
or
inc
aaa
gs
add
lret
mov
push
mov
jp
dec
push
push
jns
rol
xchg
dec
jae
shlb
mov
mov
xchg
xor
jnp
xor
push
xor
or
movsb
enter
fcmovne
jns
iret
mov
sbb
addr16
adc
in
mov
mov
xchg
jle
cmc
inc
inc
push
pop
in
shr
and
jecxz
dec
repz
xchg
adc
das
daa
sub
mov
testl
sub
add
enter
push
sbb
in
lret
je
push
loop
xchg
mov
or
test
subl
jns
push
xchg
addl
xor
outsb
mov
outsl
push
inc
push
xchg
fcompl
sahf
outsl
scas
sbb
aas
icebp
mov
mov
test
jo
nop
sub
js
cli
gs
xor
and
inc
xorb
lcall
pop
sbb
iret
sub
mov
je
jg
enter
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
incl
pop
pop
cli
jl
leave
std
pop
or
loopne
cmp
xor
ljmp
pop
pusha
mov
iret
add
push
jne
xor
xchg
pop
bound
out
mov
inc
test
sub
inc
or
add
or
push
cltd
fdivp
adc
cld
push
test
stc
in
adc
xor
das
and
mov
cmp
push
push
jl
push
pop
jmp
popl
mov
mov
aam
movsl
push
call
lods
mov
fs
mov
push
stc
rorb
lret
sub
unpckhps
test
inc
pop
dec
xchg
inc
push
jecxz
fxch
jecxz
and
push
or
push
jge
test
bound
xchg
jl
xchg
call
or
adc
jb
cld
xchg
pop
jmp
jp
sbb
mov
mov
repnz
add
cs
dec
enter
lods
popa
aad
ret
cld
mov
mov
or
mov
xorb
lods
mov
add
test
mov
mov
mov
std
push
xchg
sbb
test
add
mov
jmp
jmp
xchg
test
loopne
bound
add
mov
jl
lret
jl
mov
sbb
lahf
in
shll
stos
fldenv
aas
jp
int
ret
push
nop
cmp
xchg
leave
mov
and
mov
addb
test
subb
orl
and
xchg
push
push
adc
or
xchg
inc
or
rclb
and
mov
notl
push
lods
int3
stos
test
scas
add
bound
fcomps
pop
push
add
pop
sti
ror
movsl
mov
lea
dec
xchg
fisubs
sbb
dec
xor
pop
pusha
mov
push
fcoml
fistpll
inc
and
shrb
inc
jae
cli
cmp
ljmp
dec
adc
sbb
jle
push
test
insl
int3
jne
xchg
pop
sbbb
lock
jmp
xor
xchg
push
sub
jecxz
ss
aaa
jmp
cs
mov
mov
mov
aam
sbb
aaa
shlb
inc
outsb
pop
sbb
aam
cli
lcall
xchg
and
fwait
cmp
iret
pop
mov
xchg
mov
and
adc
cltd
push
lret
insb
pusha
fsub
push
jp
cmpsb
movsb
add
insb
out
out
or
inc
leave
adc
fldenv
lods
lea
into
je
mov
jmp
aam
rolb
pop
fs
jge
fdivrp
lods
xchg
mov
lret
jl
outsb
jge
out
popa
xchg
ss
test
cmp
dec
cmp
jle
pop
lods
int
jecxz
add
adc
dec
scas
lcall
bound
pushf
aas
cmovs
cmp
and
sti
imul
xor
dec
xchg
sar
lahf
lods
pushf
pop
and
bound
mov
sbb
pop
pop
leave
ja
mov
inc
jne
jb
dec
mov
push
in
out
out
jbe
mov
push
into
push
hlt
xchg
daa
sub
add
xchg
pop
sub
movsl
push
fcompl
cmpsl
cwtl
pop
inc
jmp
xor
les
push
pop
pushf
jmp
gs
aad
xchg
cmp
stos
nop
out
cmpsl
pop
ljmp
jo
mov
xor
filds
sub
xchg
sub
mov
xchg
cli
sbb
or
sub
push
xor
sub
leave
stc
xchg
lock
xchg
mov
out
pop
mov
or
out
aaa
dec
pop
xchg
xchg
dec
mov
mull
jns
push
insb
call
dec
in
lret
push
cmp
jo
outsl
mov
xor
add
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
add
inc
add
add
inc
add
add
inc
add
add
in
jp
jp
jnp
adc
stc
cltd
lea
add
jp
lret
leave
gs
rorb
mov
adc
sbb
jge
cmp
push
xor
inc
aas
inc
pop
push
dec
cs
loope
sub
loope
outsl
mov
test
dec
mov
in
mov
pop
add
jmp
sbb
pop
xorl
pop
push
push
xor
imul
sbb
xchg
ljmp
push
stc
inc
xlat
adc
out
fistpll
das
insb
in
sub
test
jo
mov
mov
mov
dec
std
cltd
cmc
jmp
mov
lret
pushf
or
icebp
pop
repnz
cmp
lods
jge
in
test
aaa
cld
sub
jle
mov
mov
stc
pop
jp
data16
in
pop
dec
rcl
sbb
ljmp
jecxz
push
mov
sahf
xor
jnp
sbb
xchg
pop
jmp
stos
xor
sarl
add
and
pop
mov
or
popa
inc
jb
jb
mov
jp
movsb
mov
shl
push
int3
shrb
add
mov
push
jb
scas
enter
adc
pop
fisttps
sub
adc
mov
sahf
mov
frstor
cmp
test
dec
das
pop
xor
and
std
outsl
pop
in
jae
dec
sub
xchg
jl
mov
sub
lret
fldenv
mov
lods
into
xchg
lret
les
mov
out
icebp
dec
std
and
jmp
xor
push
fwait
pusha
std
rcrl
add
outsl
jns
cwtl
daa
mov
push
js
sub
std
pusha
and
std
lcall
mov
dec
cs
dec
sti
ja
and
in
ss
mov
call
pop
out
inc
iret
pop
push
cltd
xchg
clc
cmp
jnp
cli
neg
aas
cmp
cmp
xchg
shl
xor
addr16
sub
imul
ret
cmp
add
jns
and
fwait
jns
int
lods
cmp
or
es
cli
cli
add
mov
jns
rcl
push
lock
in
js
cmpl
mov
cmc
cmpsl
dec
loopne
add
lods
pop
les
stc
mov
ss
mov
mov
jl
out
lahf
cs
push
stos
inc
mov
popf
rorb
dec
xchg
xchg
mov
pop
pushf
ljmp
xchg
mov
xor
jne
cmp
adcl
adc
sub
mov
jno
es
insl
in
push
out
lods
jp
fwait
rclb
out
in
mov
dec
out
dec
imul
or
and
xchg
or
jl
jp
inc
ffreep
shll
mov
in
in
pop
xor
pop
jmp
mov
fldt
add
pop
push
pop
mov
and
jns
push
jl
jmp
cmpsl
xchg
inc
xchg
ret
sbb
mov
stos
xor
add
int3
fucomip
icebp
xlat
and
mov
gs
and
cmp
rcrl
test
push
pop
outsb
aaa
pop
add
rorb
mov
fimuls
jnp
cs
bnd
bound
jge
fcmovu
cmp
pop
mov
pop
imulb
insb
mov
mov
jb
icebp
inc
mov
add
leave
sub
jle
imul
dec
add
dec
insl
clc
ret
iret
inc
pop
fptan
out
cmp
add
jo
lds
sub
cld
jbe
sub
dec
in
pop
jbe
aam
test
fidivrs
out
in
mov
daa
xchg
jo
movsw
cmp
mov
cmp
inc
or
daa
aas
mov
pop
cmp
idiv
xchg
imul
stc
xor
cmp
imull
lret
into
mov
insl
xor
inc
in
popf
hlt
cmp
pusha
ljmp
out
or
xorl
sub
sti
pop
lret
repz
ja
in
pop
push
ret
ret
hlt
push
repnz
xchg
sub
sbb
icebp
xchg
divl
outsb
addr16
add
jae
clc
adc
mov
enter
setle
cmpsb
ja
push
out
dec
popl
cmp
repz
mov
jp
arpl
cmp
loope
fidivrs
dec
aam
sbb
je
sub
scas
xlat
lret
int
adc
mov
jnp
aas
sbb
je
and
shrb
push
push
jmp
pop
cmp
shlb
aas
sbb
cwtl
rcll
or
pusha
aad
loopne
cli
push
pop
dec
and
push
loop
int3
jp
push
ljmp
clc
es
xor
loop
adcl
cltd
cmp
cltd
or
mov
jmp
mov
hlt
mov
xchg
push
or
pop
mov
mov
fistps
dec
scas
dec
notb
pushf
fwait
lcall
int
mov
dec
or
xchg
cwtl
les
sub
or
jo
push
aam
xlat
xor
and
cmc
orb
fs
movsb
fsubl
ror
cmpl
adc
ja
pushf
lahf
repnz
cltd
pop
add
daa
sbb
inc
xor
or
and
xor
fstl
iret
psllq
ror
loope
pop
aam
xchg
or
int
std
pop
repnz
mov
data16
sub
imul
testl
dec
cmpsl
dec
fsts
test
es
enter
orb
roll
enter
movsl
mov
mov
mov
or
or
loop
outsl
mov
into
sti
dec
fldenv
cmp
mov
popf
sbb
mov
out
mov
movsl
cmpsb
rcrb
sbb
pop
das
mov
out
xorb
fisttps
pop
test
nop
ret
push
jne
add
lea
pop
mov
sub
jo
fwait
adc
repz
rorl
stc
jp
ret
fdivr
test
pcmpgtw
clc
cmp
add
fs
jle
jno
aaa
lods
iret
sbb
in
shlb
add
jbe
add
xchg
lds
out
arpl
lcall
ja
or
dec
repnz
lcall
aad
sbb
rcrl
int
jecxz
scas
in
or
and
pop
jmp
cld
and
js
push
mov
mov
add
pop
jns
jecxz
pop
add
xor
test
inc
adc
mov
mov
mov
out
adc
fisttps
stos
xchg
fmull
test
popf
or
movsb
cwtl
loop
xchg
mov
add
add
lcall
mov
lds
add
and
add
insb
lret
scas
cld
jge
sahf
dec
xchg
xor
push
add
fmuls
jecxz
mov
push
divl
push
incl
adcb
mov
iret
jmp
cli
fidivs
or
lcall
and
loope
cmpsl
bound
mov
ret
inc
cs
inc
in
push
popf
lret
in
mov
inc
jecxz
pop
addr16
adc
push
cmpsb
cmp
ret
cld
push
lret
ficompl
mov
sbb
or
js
out
sbbb
out
sahf
and
adc
pop
xchg
adc
shlb
hlt
aas
mov
dec
leave
xchg
iret
jb
loopne
sbb
imull
dec
clc
mov
pop
pushf
addr16
inc
sbb
sbb
inc
add
je
ljmp
lea
pop
scas
pop
mov
pop
out
mov
out
mov
mov
mov
sub
lret
sti
inc
push
test
pop
jne
aam
jbe,pt
inc
orb
dec
xchg
and
stos
jmp
ficomps
jl
mov
enter
aaa
or
fbstp
into
pmulhw
lret
scas
lods
dec
xchg
andnps
les
and
push
icebp
movsb
das
and
add
dec
mov
imul
loopne
push
aas
les
jecxz
inc
dec
xlat
mov
in
stos
dec
scas
negl
sahf
add
mov
movsb
mov
cld
xchg
je
stos
inc
shrb
cmpsl
test
cmp
mov
addl
fnstenv
cmp
add
arpl
ror
pusha
mov
andb
xchg
addr16
shll
outsl
jbe
and
repz
roll
fcmovnb
sbb
and
int3
scas
aad
inc
mov
and
and
mov
adc
sub
pop
mov
test
clc
cmp
jmp
into
mov
lcall
fistps
xchg
gs
fcompl
ret
fwait
pop
insb
std
ds
arpl
cmp
lds
sub
jbe
out
xchg
popf
adc
decb
fnsave
push
or
outsb
leave
jle
xchg
enter
push
pop
push
cli
xchg
inc
test
and
xchg
fucomip
mov
orb
pusha
adc
aaa
aaa
outsl
mov
cmp
ret
adc
loopne
pop
ja
mov
mov
ja
xor
hlt
shl
fdiv
jge
mov
por
fistl
sbb
cmp
repnz
gs
cltd
xchg
inc
jo
je
jnp
lahf
mov
outsb
push
mov
cmp
sbb
mov
cmpl
add
in
mov
sarl
pushf
call
out
dec
ljmp
imul
jmp
xchg
jb
jo
mov
js
dec
fnsetpm(287
stos
add
sub
jecxz
xchg
je
and
stc
int
scas
popf
inc
dec
aad
hlt
imul
mov
mov
jo
xor
cmp
push
mov
sub
fs
push
xor
sub
in
mov
push
xchg
mov
push
hlt
sahf
xlat
out
xorl
mov
bound
pop
adc
mulb
push
jle
xor
cmc
cmp
lcall
js
xor
insl
cmp
out
stc
and
ret
and
adc
out
in
outsl
cld
cmc
mov
mov
stc
in
jmp
popa
push
sub
out
iret
mov
std
push
push
pop
out
xchg
aad
inc
int
mov
into
faddl
cmc
push
and
or
popa
fs
pushl
xchg
cmc
cmp
jae
and
stos
push
pop
and
addb
loope
loopne
sub
add
mov
dec
sub
bswap
mov
hlt
sbb
movsb
xchg
out
jo
dec
hlt
je
shrb
int
xorb
clc
in
or
clc
lret
nop
lahf
sub
jle
fs
xchg
scas
lock
sbb
cltd
jae
gs
mov
enter
mov
pop
and
aad
movsl
dec
mov
lock
into
jge
adc
cltd
cmp
mov
stc
push
sbb
leave
and
imul
mov
push
or
dec
pop
stos
and
xorb
dec
cs
push
int
jo
aas
rcrb
stos
mov
es
cltd
sbb
or
arpl
aaa
sbb
loopne
jecxz
fbld
mov
in
idivl
mov
xchg
lahf
ret
adc
pop
sub
sub
ds
mov
into
cmp
movsb
lods
cmp
dec
imul
fs
adc
add
popa
pusha
sbb
inc
sub
outsl
jmp
and
in
dec
ficoms
shll
mov
leave
lret
outsb
fscale
xor
aad
pop
jbe
ret
fwait
mov
in
jge
repz
inc
inc
xor
pop
and
jmp
packuswb
movsb
or
and
sbbl
pop
dec
lahf
mov
push
jne
popf
xor
cmp
jno
xchg
loop
std
or
iret
lds
xchg
jecxz
addr16
std
mov
mov
xor
aam
sbb
jecxz
push
pushf
add
bound
pop
push
ja
mov
or
popf
in
add
cmp
xchg
lcall
inc
jle
mov
sub
sub
sbb
mov
mov
and
mov
xchg
or
stos
mov
fs
pop
dec
stos
inc
jne
leave
pop
jl
loopne,pt
loope
outsl
xchg
scas
test
pop
pop
movsb
mov
or
fidivrl
sbb
sub
loopne
or
mov
ss
cmp
ja
jmp
jno
dec
sbb
sub
nop
mov
call
push
loope
xchg
sahf
or
mov
lock
in
jl
add
movsb
mov
and
inc
lea
add
clc
sahf
pusha
inc
inc
fwait
add
jp
jb
or
hlt
adc
imulb
push
ja
push
adc
stos
xchg
cmp
divb
lret
ds
iret
scas
popa
in
movsl
insl
inc
jle
mov
pop
jl
mov
or
mov
test
cli
xor
cmpsb
mov
mov
fimull
movsb
rcll
mov
jae
inc
pop
in
inc
lods
in
in
mov
das
mov
mov
add
outsb
add
add
add
fs
mov
aam
mov
out
add
and
add
lods
lods
jecxz
mov
sahf
inc
xor
mov
fists
lret
mov
hlt
sub
shll
adc
jae
dec
repnz
inc
int3
idivl
ljmp
mov
jmp
fwait
repnz
cmp
mov
adc
pop
jmp
enter
inc
data16
fldcw
lods
push
dec
mov
cmp
pop
xor
add
cmp
repnz
xor
or
call
mov
sbb
pop
filds
adc
adc
mov
xor
stos
pop
mov
xchg
ret
int3
inc
pop
roll
push
cmp
outsb
xor
and
cmp
and
jae
stos
add
mov
jns
cwtl
jne
mov
xor
out
in
xor
loope
sub
repz
inc
pop
xchg
imul
mov
xor
or
dec
mov
testb
mov
insb
dec
xor
push
jmp
adc
lahf
adcb
cmp
inc
mov
icebp
loopne
loopne
pop
xor
mov
jns
stos
in
cmc
inc
push
mov
inc
push
or
jnp
push
es
or
mov
fistpll
test
shl
add
sbb
mov
xchg
lahf
insb
sub
int3
sbbb
jne
mov
mov
into
lds
sub
xchg
cmpsb
inc
pop
jmp
dec
in
mov
jl
sub
std
jmp
sbb
clc
rorb
shl
jmp
dec
stos
js
test
adc
mov
outsb
divl
imul
jns
scas
sub
sbb
mov
adc
jecxz
test
pop
out
fs
daa
sub
das
sub
lea
xor
out
pop
jbe
std
adc
pop
out
add
loope
inc
and
insb
pop
iret
repnz
mov
push
pop
pop
pop
push
sbb
sbb
pmovmskb
xchg
das
adc
aam
xor
jne
imul
sbb
pop
mov
test
jb
dec
shl
adc
aam
cld
xor
push
test
adc
and
xor
pop
or
mov
sahf
push
xchg
xor
sbb
jmp
popa
mov
daa
cmp
sub
lea
push
mov
sub
bound
push
sbb
ret
cmp
mov
push
mov
enter
scas
jmp
cld
pop
loop
push
icebp
xchg
adc
add
xchg
jl
ret
inc
ja
repz
out
lcall
mov
mov
bound
lcall
push
mov
xchg
dec
mov
pop
pop
push
ret
pop
or
jo
std
xor
aaa
mov
push
sub
xchg
mov
jo
jmp
sub
mov
loope
rcr
cwtl
push
fnsave
mov
sahf
xor
iret
mov
insb
pop
mov
or
mov
rcrl
out
jge
fwait
inc
shll
icebp
jecxz
mov
leave
call
adc
cmpsl
or
icebp
and
stos
loop
pusha
mov
cld
and
adc
iret
dec
popf
ds
les
sub
cltd
mov
arpl
mov
jo
lcall
mov
das
inc
cld
fisubrs
jns
add
xor
hlt
mov
dec
in
inc
add
lcall
arpl
add
stos
bound
mov
cmc
outsl
and
jle
je
inc
nop
and
or
pop
rclb
das
cmp
aad
push
fs
cmp
inc
mov
xor
out
outsb
outsb
fsubrs
add
or
sar
inc
in
push
and
aas
push
xor
jns
inc
push
mov
inc
out
loope
in
cmp
roll
inc
mov
pop
pop
cli
adc
outsl
call
mov
ss
mov
pushf
scas
ret
mov
dec
rcrb
fldenv
cltd
jb
movsb
pushf
outsl
aaa
je
and
adc
into
fbstp
xor
jns
dec
mov
add
out
es
inc
sub
pop
pop
roll
imul
or
mov
enter
adc
out
inc
mov
dec
ret
js
clc
cmp
inc
dec
lret
push
leave
xor
inc
sub
xor
movsb
push
icebp
xchg
fldt
lret
and
xchg
adc
mov
fdivl
pop
popf
jmp
jns
into
sbb
subb
push
leave
add
dec
adc
shlb
adc
adc
inc
sub
and
sti
xchg
jae
das
stos
imul
int
lret
dec
in
popf
mov
in
push
dec
pushw
xor
hlt
xor
mov
dec
adc
int3
addr16
pop
lea
mov
pop
enter
ds
xchg
hlt
adc
cmp
inc
mov
jbe
push
ss
or
mov
ss
jns
repnz
pop
add
xor
pusha
push
jle
lahf
or
icebp
mov
aas
ds
out
or
rorb
jg
sub
call
mov
insl
push
cli
jg
dec
jo
mov
pop
ficoms
aad
sbb
cmp
push
addb
aaa
dec
sbb
mov
or
cli
js
pop
sub
xor
xlat
xlat
fistps
sahf
jecxz
stc
cmpsl
pop
sbb
xchg
cltd
rol
sahf
cmp
test
add
iret
sub
jae
test
int
orb
cwtl
mov
jns
incl
je
jbe
sbb
inc
push
jp
and
into
mov
fiadds
pushf
dec
ljmp
js
jle
xor
leave
fldt
mov
xor
pusha
in
mov
sbb
out
sbb
mov
mov
sub
iret
out
sbb
cmc
ret
pop
fdivrl
xor
aas
push
jns
xchg
mov
loop
es
roll
add
mov
xlat
sub
pop
inc
idivb
mov
and
xchg
out
cmp
shll
mov
fwait
pop
push
in
adc
insl
push
ss
pop
inc
loop
rcll
add
adc
mov
mov
jne
add
fsubrl
cmp
add
pop
dec
lret
fisubl
adc
mov
rorb
xorb
inc
push
das
jns
xchg
roll
ljmp
jno
lds
scas
test
cmp
add
add
in
ss
or
pop
in
testl
aaa
jae
testb
and
add
popa
ss
ret
mov
and
call
mov
sub
jg
out
mov
add
jae
aas
mov
stos
adc
mov
jne
jnp
dec
pop
sub
stc
jo,pt
std
shl
sub
ja
xchg
arpl
jl
push
movsb
xchg
clc
fstl
xchg
mov
in
cmpsl
pop
fsubrl
cmc
fdivrp
popf
and
fcoml
clc
out
les
icebp
cmpsl
leave
into
cmc
imulb
sbb
mov
mov
aam
jb
push
pop
mov
xor
outsl
leave
scas
and
loope
pop
jb
inc
testl
inc
cwtl
testl
mov
jbe
jbe
or
mov
xchg
inc
mov
subb
lcall
xchg
jns
xchg
pop
push
sbb
jp
aad
notb
pop
pop
stc
hlt
inc
inc
push
pushf
jl
xor
outsb
push
test
cld
mov
out
push
int3
lahf
pushf
dec
repnz
sub
std
loopne
dec
movsl
nop
movl
jo
mov
or
inc
es
in
mov
int
and
nop
and
lock
sti
out
dec
aas
int
cmp
push
xchg
std
and
pop
push
add
add
add
lea
pop
add
sub
push
jae
ja
shrb
push
sub
stos
rorb
mov
push
mulb
mov
lret
test
scas
dec
movsl
xchg
xchg
push
scas
test
aam
rcrb
xor
rorl
mov
inc
xchg
addl
scas
jnp
xchg
rorl
cmpsl
aas
iret
mov
pop
clc
clc
ja
int3
shll
xor
push
daa
repz
push
call
sub
mov
loop
imul
pop
sahf
adc
cltd
pop
fcmovb
xchg
jg
inc
jns
lock
loopne
mov
das
xor
subl
fidivrs
sbb
pop
lods
out
dec
pusha
pop
jno
leave
xchg
pop
push
mov
mov
popf
xchg
movsl
outsb
cmpsb
cld
sbb
xchg
pop
inc
dec
mov
mov
cli
jge
pop
jae
xchg
and
cs
bound
sbb
fs
mov
inc
lock
sbb
cmp
inc
pusha
leave
or
push
jbe
sub
mov
ffree
rorl
popa
pop
xchg
mov
add
shrd
in
dec
sbb
in
sub
mov
push
mov
dec
mov
int3
cltd
rcll
ret
and
addr16
push
add
mov
and
push
sahf
aaa
ja
cmpl
jno
xor
std
add
repnz
das
mov
mov
or
sbb
sbb
sub
pop
push
mov
pop
xchg
xchg
push
in
adc
jnp
clc
dec
push
inc
pop
sbb
xchg
jae
mov
pop
mov
cwtl
mov
test
push
rolb
fistps
jno
test
insb
rcrb
pop
mov
cmovno
xor
xor
inc
gs
xchg
insb
adc
imul
adc
fs
mov
scas
ja
bnd
sub
dec
clc
dec
mov
sub
xorl
bound
cmp
push
xchg
mov
pop
in
imul
cs
pop
xchg
rclb
nop
dec
mov
stc
and
mov
imul
rcl
cmp
inc
cld
imul
lock
int3
inc
mov
pop
lcall
mov
xor
stc
mov
call
sbb
ret
aam
cmp
jmp
popf
and
popa
aaa
std
insb
clc
sub
aas
shll
xor
xchg
sbbb
daa
cmpl
mov
cs
xor
dec
fsubs
jp
add
rclb
loop
add
mov
mov
sbb
outsb
jl
mov
mov
mov
jg
inc
mov
push
cmp
scas
mov
and
and
pusha
sbb
ljmp
loopne
xchg
pop
shlb
cmp
mov
pop
cmp
imulb
mov
add
ret
loopne
jb
mov
stos
xor
insl
cmc
paddusb
mov
ss
push
aam
or
rcrb
xor
xchg
push
data16
adc
xchg
xchg
jle
cmp
aam
mov
sarl
aaa
mov
jle
daa
xchg
aaa
scas
imul
cs
insb
cs
movsb
rcl
adc
sbb
pop
or
cmp
jno
movsl
mov
xchg
cvttps2pi
dec
sbb
mov
iret
je
dec
inc
mov
sarl
xchg
push
dec
fiadds
out
adc
lods
adc
cs
mov
fldenv
orl
or
pop
push
dec
mov
rcrb
pop
dec
psubw
jecxz
jle
mov
cmp
jne
stos
add
mov
dec
jno
cmp
stc
faddl
push
sbb
jns
sbb
xorb
lods
cmc
push
sub
lret
bound
pop
outsl
out
imul
add
fs
jne
inc
push
xchg
xchg
bound
mov
fildll
in
sbbl
popf
inc
jecxz
lea
out
xchg
popa
subb
xchg
cmc
and
cmpsb
add
je
les
jno
push
aad
xchg
sahf
std
pop
dec
outsb
sub
inc
sub
imul
sub
jle
cmp
push
push
and
add
jns
movsb
stos
pop
repnz
imulb
icebp
add
mov
and
or
ret
push
jno
sub
jmp
enter
aam
imul
int3
inc
bound
push
xrelease
adc
ss
cmpsb
addl
jnp
xor
mov
vsubpd
push
pusha
dec
out
inc
cld
enter
out
stc
out
rolb
bound
dec
or
add
fwait
test
dec
or
push
xor
fcomps
add
test
int
adc
or
push
out
stos
in
ret
in
jl
rcll
scas
dec
adc
jecxz
and
lods
sub
mov
xchg
xchg
outsl
cld
out
push
push
clc
dec
sahf
out
shl
dec
xlat
enter
add
push
and
and
add
jg
dec
pop
add
add
add
movsl
pop
xor
int
ficoms
dec
push
and
add
and
add
push
into
jge
negl
lahf
scas
aaa
xchg
cmp
js
push
insl
addr16
pop
push
clc
fisttpl
pop
js
leave
insb
popf
shlb
push
jl
dec
adc
dec
push
push
pusha
and
addr16
sub
inc
pop
mov
out
xchg
cs
pop
fstp
jle,pn
fisubs
pop
outsl
push
inc
lea
ja
mov
xor
jae
pop
cmp
push
add
andb
js
inc
repnz
dec
pop
jo
stos
push
pop
outsl
stc
push
xor
cmp
sub
andl
mov
push
js
ret
mov
pusha
enter
jae
mov
sahf
mov
test
ja
inc
mov
lcall
shll
js
pop
mov
aas
daa
xchg
in
sub
ds
out
sbb
xor
push
push
test
aam
inc
mov
pop
in
or
mov
mov
lahf
in
mov
cmp
ret
movsb
adc
fidivrl
addr16
test
cmp
inc
sub
shlb
push
scas
mov
and
xchg
or
xor
ja
sarl
mov
test
in
jp
push
sarb
mov
cmpsl
mov
inc
cmp
or
hlt
xor
into
fsts
mov
scas
out
aas
jns
sub
cvtps2pi
xor
fcomi
push
into
fdivr
int3
mov
add
push
ljmp
cwtl
leave
out
int3
out
outsl
ror
sbb
dec
jb
cmc
push
cs
in
push
mov
dec
rolb
cmpsb
jae
loopne
outsl
inc
sahf
sbb
sarb
sbb
push
test
int3
add
inc
mov
loope
ret
adc
sbb
pop
or
xchg
cmpsl
ds
repz
inc
jecxz
cmp
push
jmp
lahf
xor
push
out
jae
lret
or
add
shll
xor
stos
outsl
or
mov
push
cltd
xchg
fldt
outsb
and
or
jle
xorb
cmp
mov
lods
adc
ljmp
pop
push
mov
fwait
int
pop
adc
adc
cmp
adc
cld
insb
std
pop
xchg
push
ja
adc
imul
mov
push
dec
hlt
ljmp
clc
inc
xchg
or
dec
pop
sbb
mov
stos
sbb
mov
scas
pusha
jns
fcompl
sub
pop
scas
add
mov
popa
add
nop
lds
cmp
push
xor
adc
lea
inc
mov
aam
jae
lret
dec
fdivs
test
and
push
outsb
inc
push
mov
sahf
fists
pushf
cli
mov
movsl
mov
xchg
or
pop
lahf
mov
push
fsubl
xor
sarb
pusha
pop
icebp
std
notb
fstpl
iret
roll
mov
mov
aad
test
mov
sbb
jge
dec
push
push
loop
or
outsb
nop
sbb
or
fsubrl
in
add
or
xchg
cltd
dec
ret
sbb
add
adc
hlt
lods
mov
add
sbb
sub
sub
pop
fwait
sar
dec
cmp
test
mov
xchg
cmp
sbbb
orb
movsl
pop
lods
push
jae
shl
jge
sub
pop
xchg
push
and
rcrb
adc
or
fdivs
jne
mov
sbb
imul
sub
cltd
pop
out
cmp
jns
cmp
or
push
sub
addr16
xchg
cld
jmp
mov
loopne
adc
mov
pop
into
mov
arpl
test
in
push
popa
insl
cmp
out
jecxz
loop
dec
add
std
rcll
ljmp
jecxz
lock
mov
push
jecxz
outsb
arpl
lahf
std
rorl
stos
pop
jg
or
dec
filds
sbb
push
jl
outsb
in
mov
adc
xor
test
sub
int3
and
mov
enter
movl
and
cmp
or
mov
and
arpl
inc
mov
aad
cmp
and
arpl
repz
push
sub
sbb
or
inc
scas
cmc
jae
xor
lret
jmp
jge
notl
out
adc
shlb
iret
pop
pop
jae
xchg
mov
das
into
or
mov
jns
out
push
call
pop
cwtl
mov
sbb
out
jecxz
push
pushf
xor
fadds
ret
test
stos
push
sbb
add
lea
sub
cmp
stc
pusha
mov
pusha
add
jmp
lret
push
and
sub
icebp
into
repnz
lds
test
push
data16
cmp
lods
push
rcr
jp
inc
jb
mov
repz
mov
xorl
mov
push
push
repnz
cld
sub
stos
mov
enter
dec
fs
sub
scas
shl
xor
out
add
and
push
sbb
inc
mov
adc
shll
daa
in
add
in
stos
ret
lods
push
inc
and
sub
insl
push
and
test
sbb
adc
and
fsubl
or
mov
mov
xchg
or
roll
sub
outsb
xchg
mov
cld
or
push
mov
dec
rorl
xchg
aaa
cmp
xor
cmp
das
mov
xchg
sub
mull
cmc
jmp
shr
xor
xor
jnp
icebp
inc
xchg
movsb
push
out
ss
sub
xchg
mov
add
mov
or
push
movsl
pop
push
sub
xchg
imul
pop
pop
pop
push
icebp
mov
sti
outsb
lds
push
fnsave
mov
es
xlat
out
mov
fcompl
sbb
mov
jae
ss
adc
cltd
mov
cmp
mov
ss
xchg
add
pop
bound
or
aaa
dec
shlb
and
sbb
or
xor
scas
jge
andb
nop
jle
mov
in
mov
push
xchg
lods
mov
mov
int3
xchg
into
shll
sbbl
int3
cmp
test
adc
or
stc
mov
lock
lock
sub
icebp
nop
mov
pop
add
add
add
daa
jbe
idivl
mov
cmc
stc
xor
add
and
add
iret
mov
mov
push
vmwrite
movl
sbb
jno
cmc
push
xchg
mov
call
pop
gs
sub
push
into
inc
icebp
loop
adcb
iret
cwtl
adc
dec
mov
scas
out
mov
xor
roll
push
ret
test
push
push
add
and
xchg
lods
push
add
enter
push
xor
outsl
mov
idiv
ficomps
pusha
sbb
push
ret
push
mov
cmpsb
push
jbe
push
dec
pop
xor
insb
mov
jle
loop
clc
xor
repz
and
lret
sbb
icebp
cltd
lret
movsb
pop
rorb
les
dec
mov
mov
mov
in
pop
adc
scas
xor
push
mov
jbe
jne
imul
pop
mov
sub
shll
mov
outsl
cli
sub
sub
neg
shll
adc
mov
ss
mov
push
push
cmpsl
pop
out
push
pop
addr16
mov
xor
fcomps
adc
ds
mov
adc
or
and
dec
mov
mov
lea
mov
adc
push
pop
add
mov
pop
pusha
stc
inc
and
or
pusha
lds
es
je
lcall
mov
jg
loopne
mov
xchg
jno
jmp
push
sahf
sbb
loop
test
das
xor
and
repz
nop
pop
in
adc
mov
out
xor
std
stc
into
sbb
pop
lock
shlb
jecxz
sub
in
adc
xor
ss
dec
es
xor
jg
or
movsl
icebp
jmp
loopne
add
mov
and
daa
jle
das
ret
xchg
mov
mov
les
jecxz
int
pop
adc
movsl
push
pop
daa
jnp
add
decb
jne
xchg
inc
fwait
loope
sub
sub
cmp
dec
rorb
fwait
pop
lds
ds
dec
xchg
sbb
pop
scas
ja
xor
push
pop
fcmovb
inc
dec
insl
sub
aas
dec
sahf
cmpsl
daa
outsl
test
xor
xchg
arpl
push
mov
es
lcall
mov
icebp
mov
lahf
lods
inc
xor
push
lcall
and
std
cld
popa
jne
icebp
fisubrs
rcrb
outsb
pop
sahf
dec
mov
out
ss
sbb
mov
or
inc
ljmp
mov
pop
or
sbb
stos
jbe
inc
sub
or
arpl
ret
cmp
pop
inc
mov
movsb
mov
out
sbb
or
xor
loop
jns
jg
lods
aas
rcr
jo
aas
add
test
dec
in
push
push
les
dec
mov
cwtl
pop
test
xor
and
test
cmp
mov
ja
cmpsl
in
jno
and
out
ret
pusha
push
sbb
rcll
xorb
sti
imul
popf
ljmp
push
adc
xchg
lods
sbb
addb
sahf
push
les
pop
insb
nop
js
push
in
mov
inc
movsl
fcoms
sbb
mov
test
inc
pop
js
xor
jb
jnp
mov
mov
push
mov
call
xorl
adc
push
insl
bound
pop
adc
orl
dec
dec
fmulp
cmp
loopne
rclb
jns
cmp
aas
jecxz
movsb
in
mov
ret
aad
fwait
out
fwait
or
sbb
jne
in
mov
inc
arpl
mov
cli
cmp
cmp
xchg
adc
mov
mov
and
fsincos
in
sbb
rcrl
cmp
scas
mov
ljmp
inc
mov
pop
xchg
cltd
push
xchg
inc
jle
js
popa
cs
lea
mov
fcmovbe
sub
pop
movsb
dec
lret
es
leave
and
cmp
inc
insb
pushl
adc
ss
mov
lods
jge
push
add
inc
cmp
sahf
dec
cs
and
mov
lods
test
xchg
push
and
xchg
push
out
sub
test
push
in
repnz
das
shll
push
ja
sbbb
les
rclb
mov
jo
cmp
stc
cmc
hlt
cli
dec
sub
jmp
out
jo
mov
hlt
push
les
inc
adc
test
adc
or
arpl
jmp
cmp
pop
cmpsl
fpatan
jle
nopl
pop
jne
nop
dec
and
cs
inc
dec
popa
ljmp
inc
aad
ljmp
xchg
mov
aad
aam
loopne
fcomi
mov
loope
inc
sbb
cmp
outsb
and
ret
sahf
mov
pop
shll
imul
subps
jnp
pop
int3
test
fcmovnb
cmp
push
add
xchg
pop
mov
lret
enter
aam
cmp
xchg
inc
enter
xor
sub
jno
test
sub
mov
xchg
in
dec
mov
subb
sub
cmp
dec
inc
jno
fistps
in
mov
cmp
fnstsw
dec
mov
roll
cmp
orb
dec
es
xchg
out
sbb
jl
inc
push
ret
aam
xchg
add
pop
pop
mov
cmp
inc
pop
mov
xor
ljmp
in
jae
mov
sub
cld
insb
push
inc
mov
xchg
mov
mov
lret
stos
jl
fisttps
cld
lea
lret
mov
pop
and
out
sahf
mov
dec
sub
push
insl
add
jmp
dec
push
test
icebp
dec
pushf
test
lods
mov
inc
sub
lahf
call
jl
dec
cltd
mov
xchg
mov
sbb
xor
and
dec
mov
enter
push
jge
jns
fnstcw
aad
cmpsb
shll
sbb
push
pop
rol
fistpl
lret
negl
sbb
sub
aas
insb
jb
mov
in
repnz
popa
push
mov
add
cmpb
push
int3
loopne
cs
add
sbbb
jnp
jne
xchg
cmp
sub
mov
xchg
inc
cmpxchg
add
add
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
xlat
lea
push
stos
data16
add
pop
add
lock
iret
cmp
pop
xchg
jge
dec
das
fidivrl
add
rol
add
cli
and
add
mov
ja
outsl
sub
inc
inc
in
mov
repz
fimuls
aaa
sub
or
out
fs
xor
fidivrl
outsb
pop
pop
nop
inc
or
aaa
lods
aad
stc
sti
flds
jmp
or
sbb
cmp
in
xchg
mov
lea
lods
xor
iret
incb
pop
sbb
push
lret
loop
shll
push
cmp
xchg
xchg
cmp
dec
dec
xchg
in
pop
arpl
lods
sub
ds
sar
hlt
pop
pusha
push
out
mov
pop
or
int
mov
mov
or
mov
fs
pop
sbb
sub
daa
push
dec
jp
sbb
pop
nop
and
pop
and
adc
lret
test
popf
js
in
cmp
jge
mov
out
out
cmp
lock
setno
negl
out
in
lret
test
movups
push
lods
aas
stos
aam
jmp
pop
jae
stos
dec
aaa
xchg
cwtl
sbb
pop
or
in
dec
lret
fsts
mov
jmp
jecxz
popf
and
ret
in
cmpsl
mov
pop
mov
and
fstps
push
jge
jmp
adc
pop
adc
dec
scas
jns
cwtl
xchg
push
jle
in
popf
pop
test
xchg
jg
mov
mov
dec
adcl
jns
mov
pop
xor
inc
ja
cmpsl
xor
mov
aam
and
cmp
mov
idiv
push
push
inc
cmpb
jmp
dec
int3
test
or
out
out
mov
ffree
cmp
and
arpl
jbe
and
cwtl
arpl
sbb
mov
cmp
lret
push
push
es
test
pop
out
aad
sub
adc
add
sbb
pop
sbb
iret
mull
testb
xor
inc
sub
jmp
cltd
pop
mov
xchg
push
cld
jmp
xchg
shll
jecxz
ljmp
lock
push
pop
popf
fstpl
adc
sub
shll
aaa
and
insb
mov
and
dec
addb
nop
pop
sbb
fnstsw
mov
rorb
mov
imul
dec
inc
mov
dec
fwait
stos
repnz
daa
test
out
insl
test
fildll
or
adc
inc
push
push
bound
dec
cmp
adc
int
cmpsb
lret
in
popf
mov
outsb
arpl
loop
gs
jge
sti
das
lds
in
add
lea
clc
and
fsub
xchg
xor
fisttpll
inc
inc
sbb
shrl
mov
js
sub
lahf
test
xchg
sbb
dec
add
and
adc
push
test
adc
repnz
cmpsb
test
ds
fwait
xchg
push
ret
or
sbb
ucomiss
xchg
repnz
dec
and
jp
insb
in
mov
pop
lea
or
cmp
xchg
inc
lcall
mov
cwtl
pop
stos
fidivrs
inc
dec
aad
adc
ds
cmp
xor
adc
test
mov
in
add
cmpsb
popf
mov
mulb
ret
insl
or
xchg
aad
pop
pop
jo
cmp
dec
or
add
cmc
inc
jecxz
arpl
icebp
mov
ljmp
aam
dec
fists
cmp
mov
xor
mov
aaa
xor
jns
adc
filds
out
test
mov
loop
hlt
call
push
xchg
sub
scas
mov
test
fildl
mov
daa
and
andl
sub
mov
fcomps
outsl
add
xchg
sbb
pop
stos
or
dec
and
mov
popf
or
and
or
xchg
jbe
ret
sbb
orl
cmp
jp
push
jmp
sar
add
mov
sub
es
lods
pop
cwtl
or
mov
cmpsl
adc
inc
call
leave
dec
gs
pop
dec
pop
jge
xchg
dec
out
fiaddl
xchg
xor
jne
jne
pop
sub
movsb
ret
inc
or
icebp
xchg
rorb
stos
stos
mov
shll
or
jne
sbb
es
sti
or
std
cli
cwtl
mov
pusha
add
mov
inc
aas
adc
dec
push
add
fcomi
jmp
fiaddl
adcl
test
xchg
add
js
mov
daa
ret
ret
adc
cld
jmp
js
or
das
dec
out
fstl
out
loop
hlt
pop
in
cmpsl
sub
loopne
mov
rclb
xchg
cmp
mov
aas
fimull
nop
ret
loop
cmpsb
xor
or
into
rcrl
std
cmp
hlt
xchg
sub
rcrl
aam
inc
adc
andb
ja
fcmovnb
daa
dec
xor
std
insl
push
sub
jmp
sbb
into
mov
out
mov
das
test
mov
xchg
fidivs
sarl
int
cmovo
mov
dec
cli
and
jne
mov
mov
xlat
jge
sub
sbb
inc
push
push
je
inc
xor
roll
outsl
in
jo
mov
outsb
or
push
dec
testb
xchg
adc
inc
ds
sar
dec
dec
xor
sarb
divb
ja
sbb
ljmp
test
jecxz
call
mov
mov
insb
sub
iret
outsb
mov
dec
pushf
jmp
fdivp
adc
or
xorb
popa
push
adc
inc
mov
sbb
push
call
sbb
push
pop
lods
addl
and
mov
and
push
loope
mov
lcall
pushf
mov
cmpb
stos
rolb
fimuls
pop
fstl
or
scas
xchg
jg
push
iret
add
jecxz
cmp
xchg
test
sub
push
out
jle
dec
and
daa
pop
mov
idivb
clc
lret
pusha
add
mov
sub
xor
in
fsubp
decl
rcr
pop
and
cld
es
jbe
icebp
hlt
cs
cmpsl
inc
ss
jp
xchg
lret
jecxz
stos
mov
fs
add
add
adc
jg
stos
mov
cmp
pop
add
notb
mov
pop
scas
or
loopne
pop
xchg
pop
leave
sub
mov
xor
mov
outsb
fisttps
ljmp
fbld
push
or
sub
imul
cmp
sub
or
mov
insb
pop
imul
cmpsl
mov
loopne
cltd
fstpt
sti
into
mov
pop
cmp
push
lds
mov
ss
fwait
push
pop
dec
xchg
lods
inc
int
mov
outsb
loope
pop
bound
xchg
inc
cmpsl
push
imul
rolb
and
pop
in
adc
adc
sub
gs
push
cmpl
adc
enter
jnp
jle
jge
xchg
pop
in
xor
jns
sub
mov
cmp
xchg
xchg
test
in
test
sbb
jl
rol
lahf
mov
fnstenv
fld
pop
pop
pusha
sarl
cld
mov
mov
mov
in
call
xchg
push
and
outsl
jae
jbe
ljmp
push
pop
xchg
aas
sbb
xchg
in
dec
jp
and
out
nop
in
inc
mov
xlat
mov
sbb
mov
lcall
loope
nop
xchg
cmp
mov
mov
or
lods
aaa
pop
out
pusha
mov
inc
xor
pop
adc
loopne
loope
xchg
push
lods
xchg
movsb
in
jne
aad
push
das
xchg
and
ret
adcb
pushf
pop
ja
inc
fucomp
sbb
cmpsb
mov
subb
add
cmpsl
cmp
dec
test
test
sti
jge
fisttpll
in
outsl
sahf
lods
mov
mov
dec
inc
orb
xor
cltd
inc
and
movsl
icebp
push
cs
mov
mov
test
mov
out
ja
or
shlb
xlat
sarb
sahf
mov
insb
cmp
mov
push
mov
fldcw
clc
and
and
lahf
xor
dec
mov
imul
mov
cmc
mov
pop
inc
xchg
sti
pop
cmp
xchg
and
and
into
pop
inc
xor
les
scas
into
cld
dec
cwtl
push
xor
mov
fwait
pop
mov
aam
data16
inc
or
dec
push
ds
and
mov
adc
aad
mov
and
xor
or
sbb
gs
pop
addr16
rorl
mov
jecxz
jae
lret
int
test
add
lods
inc
mov
popf
and
xchg
or
sbb
out
repz
lds
pop
mov
hlt
pusha
cli
sub
cmc
mov
mov
push
push
push
mov
subl
mov
in
ficoms
xorb
xor
xchg
bound
push
sub
lods
dec
add
dec
imul
in
jl
fwait
xor
pop
popa
es
stos
std
add
rcrl
sub
test
push
xor
push
pop
int
jecxz
xchg
or
mov
idiv
mov
mov
cltd
fwait
jmp
aam
jmp
scas
mov
cmp
push
mov
and
mov
pop
pop
in
test
ljmp
pop
inc
les
adcl
add
dec
inc
divb
sbb
push
xor
jmp
out
inc
in
pop
lahf
fsub
aad
pop
fs
and
xor
nop
ror
mov
test
jb
loopne
inc
stos
mov
in
dec
and
popf
stos
xor
jl
movb
pop
insl
jl
out
idivl
mov
js
sbb
cmp
in
iret
push
aad
nop
jg
and
sbb
lret
xchg
xchg
pop
stos
clc
push
movsl
std
stc
mov
adc
loop
and
cmp
pop
push
movq
and
les
xchg
inc
dec
daa
cwtl
mov
xchg
pusha
jp
sbbb
xchg
sub
adc
pop
xchg
jmp
jns
mov
aaa
push
xchg
mov
pop
in
push
enter
int3
push
mov
fwait
call
std
jge
inc
fbld
jmp
in
insb
cmpsb
out
clc
add
js
adc
insl
push
out
scas
inc
sub
inc
adc
leave
inc
das
adc
loopne
mov
sti
sub
sub
and
or
xchg
xor
xor
dec
iret
jae
dec
sahf
xor
jnp
rcrl
push
xor
mov
mov
xchg
adc
dec
mov
mov
jnp
cmp
adc
popa
loope
adc
jl
sub
jnp
js
sti
or
fmuls
insl
dec
dec
shrl
add
adc
sub
dec
or
push
pop
in
ljmp
lds
xchg
adc
daa
scas
and
outsb
and
lds
dec
pushf
or
ret
or
and
cltd
dec
sub
shrl
push
push
mov
stc
pop
ja
out
jb
add
push
sbb
outsb
cli
sub
sub
fmull
fists
pop
add
xchg
dec
dec
and
adc
aad
sahf
dec
sbb
jecxz
mov
movsb
fld
sub
inc
mov
fidivrs
sbb
inc
out
mov
test
pop
cmp
push
sti
mov
jecxz
int3
imull
call
push
mov
sub
lods
xlat
bound
and
int
movsb
pop
scas
lahf
xor
sti
cmp
popa
mov
cwtl
mov
pushf
mov
cli
xor
adc
inc
in
mov
adc
movsl
and
inc
cmp
xor
sbb
aam
into
inc
cmovnp
lcall
push
jmp
cmp
js
mov
mov
fwait
adc
sbb
inc
js
push
daa
mov
add
add
test
cmp
inc
in
inc
and
lret
ja
xchg
lock
add
outsb
xor
mov
les
pop
jb
fs
jmp
fimuls
mov
xchg
std
push
push
mov
cmpsb
cli
decb
sbb
adc
imull
ret
mov
movsb
add
cmp
or
scas
or
popa
mov
scas
pop
xchg
je
xchg
xchg
out
ljmp
xchg
mov
pop
add
add
add
je
out
cmp
repnz
mov
lods
sbb
add
pop
add
mov
pushf
das
int
mov
add
pop
aad
mov
cmpl
mov
mov
push
repnz
inc
sbb
movsl
sahf
or
es
cmp
xor
enter
cmpb
push
dec
out
mov
arpl
mov
cmp
mov
mov
jno
jae
aam
ret
shr
movsb
xchg
and
adc
xchg
mov
jne
aam
cmpsb
add
ret
xor
dec
and
or
test
int
mov
aam
icebp
pop
inc
loop
nop
push
aaa
les
push
popa
inc
in
push
pop
add
lcall
push
push
dec
cmc
cmp
aam
dec
call
or
dec
aaa
loop
add
inc
adc
dec
xchg
std
out
mov
in
lds
pop
lock
fbstp
jae
ds
mov
cltd
test
rclb
jbe
imul
push
mov
xlat
inc
inc
add
push
sub
fidivrs
sti
xchg
cs
add
es
xchg
pop
movsb
and
fnsave
inc
lds
add
mov
insl
call
cmpsb
aas
adc
frstor
mov
sbb
lret
sahf
negl
es
mov
in
push
lds
popa
push
fmuls
jns
or
sbb
mov
push
xlat
add
pop
and
lock
out
dec
pusha
and
fdivrl
daa
pop
out
shlb
lds
jg
adc
push
lret
jnp
jnp
inc
xlat
cmp
std
sbb
dec
pop
pop
mov
sbb
jno
sbb
fistl
mov
adc
mov
int
adc
mov
xlat
xor
pop
pushf
popf
daa
je
mov
mov
jno
fsubs
sbb
jns
sub
push
repnz
mov
xchg
jle
lahf
inc
pop
insb
push
and
jl
jae
sahf
cld
inc
or
ret
fildll
push
sahf
lock
lds
dec
orb
daa
flds
jnp
les
xor
and
and
test
pop
push
xchg
popf
lds
pushf
jbe
std
ljmp
and
jae
std
and
inc
insb
adc
int
sub
lret
adc
inc
lods
inc
xlat
fs
sbb
enter
cmp
stos
scas
subl
push
cwtl
roll
mov
pop
dec
cli
sub
pop
lcall
jmp
pop
jbe
into
test
dec
sub
in
in
inc
dec
sub
pop
jns
ljmp
push
outsb
jge
jne
add
in
cld
sbb
out
dec
es
fwait
dec
push
sbb
push
xor
je
test
mov
mov
cltd
testl
cmp
lret
in
sbb
pop
adcb
mov
cwtl
pop
xor
and
xor
adc
jne
test
pop
sarl
iret
mov
xchg
icebp
test
push
imul
test
cmp
sti
pop
sbb
lea
stos
sar
and
jl
jecxz
jp
xor
jae
or
jo
jg
cwtl
aas
enter
mov
testl
mov
aad
xchg
adc
icebp
test
pop
cld
insb
rorl
inc
dec
aaa
aam
repnz
std
jbe
xchg
push
and
pop
cwtl
out
mov
jno
mov
mov
mull
xor
jno
dec
sbb
loopne
out
xchg
lds
xor
mov
iret
sbb
sub
cmp
or
mov
popa
jbe
pop
mov
mov
xchg
push
and
and
aaa
out
xchg
inc
pop
and
jmp
int
pop
pusha
and
jle
out
cmp
mov
mov
inc
dec
xor
sub
popa
mov
lahf
nop
addr16
orl
inc
cmp
mov
scas
push
out
inc
sub
loopne
arpl
mov
fstl
sbb
xor
clc
repnz
xor
lret
xchg
dec
nop
dec
test
add
xor
daa
lods
jbe
lds
movsb
aas
xchg
jns
cmp
and
xor
mov
rol
lock
pop
aaa
mov
cmp
dec
sbb
mov
aad
inc
cld
out
xchg
pop
shlb
gs
or
jbe
cltd
add
mov
lock
mov
popa
daa
lret
jae
mov
mov
xchg
test
jge
sub
out
test
push
jl
mov
push
sbb
inc
nop
daa
daa
push
xchg
pop
out
mov
inc
cmp
int
or
pop
outsl
sbb
sbb
test
xchg
cwtl
scas
or
sub
xlat
adc
addb
test
fisubs
adc
cmpsl
shrb
xchg
pop
xchg
xor
clts
push
cwtl
out
ss
arpl
add
adc
dec
jmp
call
dec
adc
adcb
xchg
out
lcall
lret
xchg
mov
cmpsb
std
out
add
push
mov
jge
jo
inc
ss
dec
pop
sub
dec
dec
mov
daa
mov
push
pop
sub
subl
int
xor
mov
outsl
repz
dec
xlat
cs
xor
sbb
inc
pop
and
mov
push
push
pusha
add
pop
dec
fisttpll
popa
cmp
imul
ljmp
xchg
dec
cmp
inc
cmp
shlb
push
or
leave
pop
out
mov
lret
jl
fs
ss
lret
cmp
pop
stos
pop
addr16
fimuls
scas
mov
adc
pop
sbb
push
sbbl
lcall
sti
arpl
stos
sbb
mov
push
emms
pop
daa
lret
imul
sbb
cmp
inc
andb
jmp
out
inc
das
or
mov
xor
push
or
dec
aam
fstpt
data16
lahf
mov
stos
sub
fadd
jl
aas
push
pop
push
push
imul
mov
outsb
mov
lret
sbb
arpl
movsl
push
cmp
shlb
sahf
faddp
mov
test
repz
jp
or
sub
aam
lds
sub
add
ljmp
mov
and
out
hlt
sbb
cmp
mov
mov
push
push
fdivrs
enter
mov
divl
loop
add
add
aad
pusha
cld
jne
and
add
and
add
push
sub
inc
xorl
inc
mov
mov
rorl
dec
pop
dec
pop
adc
out
mov
fnsave
cmp
pop
jne
es
mov
repnz
pop
sbb
jp
pop
push
and
inc
cmp
xchg
adc
pop
jno
sarb
popa
mov
jge
or
jecxz
out
lea
out
icebp
fdivrl
in
mov
cmpsb
push
xchg
mov
sbb
inc
adc
inc
jo
cld
or
jno
arpl
stc
cld
inc
jle
or
push
jecxz
ret
push
adc
or
insb
xlat
outsl
push
push
xchg
sub
lock
sub
out
lret
jl
adc
adc
sarb
xchg
jge
or
or
sbb
and
xchg
test
cmp
lret
lcall
cli
mov
adc
lock
xor
leave
push
mov
pop
adc
mov
sbb
sbb
clc
pop
pop
insl
sti
adc
fstl
data16
adc
add
pop
testl
xchg
das
lcall
pop
dec
mov
xor
push
pop
push
lea
stos
movsl
and
cmp
daa
mov
dec
test
jecxz
mov
mov
shll
add
in
mov
lock
inc
xor
into
inc
cmpsb
lahf
push
xchg
aas
fidivs
mov
or
int3
cmpsl
fildl
or
mov
loopne
aam
lea
andb
loopne
xchg
je
mov
out
mov
sbb
mov
mov
pop
mov
sti
add
jp
add
sbb
out
test
out
adc
ljmp
cmp
test
dec
andb
icebp
popa
inc
pop
cmpsl
daa
inc
mov
or
test
out
fwait
ds
push
call
jnp
fcmovb
sbb
add
push
or
sti
sbb
fsts
xchg
popa
and
mov
dec
movsl
outsb
xor
addr16
sbb
jo
fimull
into
cmp
mov
mov
sbb
test
hlt
out
dec
mov
cmp
push
and
cmp
sbb
cwtl
fidivrl
cmp
dec
jle
add
loop
out
js
mov
leave
fs
ss
mov
mov
and
jp
inc
cmc
adc
inc
test
mov
lds
mov
dec
inc
jae
sub
push
ret
dec
outsb
push
mov
add
pop
shrl
xor
loope
daa
out
jae
or
cmc
not
adcb
push
sbbl
repnz
cmp
cmp
ljmp
mov
fisubrl
es
push
jo
mov
sub
cmpsl
outsl
cltd
out
inc
cmc
sahf
add
xlat
pop
xlat
iret
pop
mov
popf
mov
pop
xchg
dec
int
loop
dec
cmp
mov
aaa
add
dec
imul
fnstsw
sub
or
xchg
ja
dec
shrl
loopne
dec
fisttpl
fistl
lret
inc
xchg
test
sbb
dec
inc
mov
cld
sbb
mov
repnz
jl
std
das
push
sbb
dec
adc
test
push
insl
jb
call
xor
hlt
fisubrs
add
insl
arpl
sbb
pop
stos
xchg
or
outsl
sub
xor
mov
xchg
dec
cmp
ja
stos
into
mov
add
aas
sbb
mov
das
sbb
clc
rep
xor
add
push
test
test
fwait
in
addr16
mov
push
jno
mov
jbe
arpl
lock
lea
sub
lcall
or
add
lea
or
cmpb
push
push
fsubrl
xchg
adc
mov
mov
imul
push
sub
xchg
stos
pop
aaa
adc
ja
push
xor
push
jo
and
negb
fwait
sub
ror
mov
xor
mov
push
pop
jmp
cli
xor
pop
and
push
jge
data16
in
insl
jo
dec
inc
add
or
rorb
push
push
xor
xchg
fistpl
push
and
mov
jo
repnz
xchg
lds
les
pop
jmp
mov
mov
jecxz
jns
aam
mulb
mov
fdivr
mov
insl
inc
push
cmp
inc
jecxz
mov
push
mov
xchg
mov
ret
bsr
xchg
loopne
inc
inc
or
imul
imul
mov
int3
lret
mov
les
pop
arpl
mov
sub
fcmovnu
shll
cmp
xchg
xor
mov
xlat
jl
fidivl
icebp
shll
outsb
jge
rcrb
out
mov
mov
add
inc
or
xchg
inc
andl
stos
xchg
and
aas
sub
enter
cwtl
sbb
push
lcall
and
push
jecxz
cmp
xchg
pop
sub
addr16
push
jp
and
sub
cwtl
rcl
leave
mov
cmp
lods
out
icebp
mov
sub
or
inc
add
mov
pop
int3
sahf
xor
loopne
xchg
add
ds
shll
mov
push
pop
mov
mov
xchg
gs
jmp
fistl
and
pop
cmpsl
dec
lcall
imul
sbb
lods
sbb
push
test
nop
or
loopne
jnp
or
rcll
rorb
aad
xchg
pop
es
negb
cmc
mov
add
ret
je
inc
fsts
inc
mov
push
cld
dec
pop
in
dec
icebp
movsl
daa
mov
fistl
fbld
mov
in
cmp
push
adc
les
test
ljmp
fmuls
and
xchg
jns
add
fnsave
int3
jg
pop
mov
cmpsl
jmp
mov
push
movsl
cmpsl
leave
repnz
addb
rorb
add
inc
cmp
and
aad
mov
lahf
jg
daa
pop
divl
addr16
aas
outsb
pop
mov
data16
bound
jo
cmp
sbb
cmpsb
arpl
cmp
test
inc
rorl
mov
insb
enter
je
cwtl
movsb
mov
mov
rorb
and
push
or
mov
scas
daa
fistps
sbb
sub
dec
outsl
pop
mov
aam
sbb
xchg
mov
popf
mov
popa
xchg
cwtl
push
in
gs
negb
sbb
add
add
mov
jg
fists
add
repnz
add
pop
add
and
popf
jg
call
outsb
andb
rcll
subb
leave
je
jb
mov
notb
push
out
test
xchg
iret
add
pop
push
inc
cmp
push
addl
scas
popa
cmpsl
in
add
repnz
cmp
and
jne
or
fnsave
jbe
inc
and
mov
into
out
in
pop
fidivrl
or
rorb
push
scas
out
adc
fdivrs
pusha
in
adc
and
inc
pop
xchg
mov
lcall
daa
jmp
or
xchg
xchg
jo
mov
ret
push
push
popl
cmp
lret
test
pop
pop
xchg
sub
cmpl
mov
push
into
inc
les
jb
mov
adc
and
sahf
sti
sbb
mov
jae
lock
leave
addl
sar
rcl
pop
gs
mov
pushf
test
fisttpl
xlat
or
mov
jle
fwait
inc
cmpsb
lret
mov
ja
inc
cmpsb
adc
mov
in
ljmp
inc
out
sub
xchg
push
adc
mov
xor
mov
cmp
lret
call
clc
push
in
into
mov
daa
cmc
and
and
nop
dec
mov
adc
dec
aas
pop
test
lret
sub
pop
sbb
sahf
in
jp
mov
push
xchg
nop
sti
push
push
cmp
popa
int3
xchg
sbb
je
stos
mov
aam
pop
jo
ret
dec
mov
mov
pop
test
xchg
js
mov
or
outsb
pop
scas
mov
stos
xlat
int3
inc
lahf
adc
enter
jb
lock
mov
repz
inc
adc
dec
mov
or
jecxz
push
pop
arpl
and
mov
xor
add
leave
cwtl
fistl
out
imul
inc
pop
in
inc
push
cwtl
stc
mov
shr
in
imull
das
test
clc
loope
int3
push
fldt
outsl
and
enter
cli
leave
mov
jmp
mov
cmp
cmp
std
cmpsb
cmp
jle
and
lea
ljmp
cmp
fdivr
mov
adc
inc
mov
addr16
cmp
jne
adc
sbbb
sarl
fadd
add
into
cmpsl
faddl
inc
cmpsb
add
ljmp
rolb
mov
imul
sti
sti
jg
test
xorb
ljmp
inc
std
inc
mov
or
push
dec
test
inc
movsl
cmpsl
dec
xor
in
jle
jae
adc
sbb
pop
lcall
lods
je
lds
inc
fcomps
or
ret
xor
or
jae
ret
or
jnp
sub
es
aas
or
dec
cmp
cmpsb
cltd
add
jecxz
out
out
insb
test
jg
sahf
pop
push
std
jg
mov
xor
mov
sub
push
hlt
test
inc
in
stos
push
lret
js
idivl
and
ret
out
stc
push
fnstcw
inc
aam
dec
idivl
js
sub
fdivrp
bound
testb
je
sti
cmp
pop
push
out
mov
pop
lds
pop
push
adc
or
movsl
test
test
pop
fbld
mov
add
xchg
dec
negb
imul
pusha
cmp
add
adc
aam
xor
dec
jmp
push
dec
movsl
jg
cli
and
shlb
test
cmpb
pop
jne
ja
test
gs
inc
loopne
or
or
lret
cmpsl
xchg
in
fcomip
xor
mov
lods
xor
sarl
in
add
cmpsl
dec
pop
push
add
jb
jl
std
dec
jb
adcb
js
rep
stos
mov
test
icebp
jg
ss
test
mov
loope
lock
pop
fs
add
es
hlt
dec
jg
in
lods
addr16
popa
bound
dec
popa
test
sbb
aas
mov
fisttpl
pop
sbbb
add
cmpsl
stos
call
in
popa
call
stos
insb
xor
aad
xor
popa
loope
jp
mov
jnp
fucompp
add
sub
nop
sbb
loop
mov
dec
jle
xchg
ret
imul
pop
or
inc
xchg
icebp
int
adcb
aaa
cmc
shrb
jo
adcb
jp
cmpsl
xchg
push
lret
mull
mov
sub
cwtl
shrb
std
lods
mov
ret
loop
stos
cmp
cmpb
jns
push
mov
or
mov
mov
pop
mov
adcl
dec
mov
mov
leave
xchg
rol
aas
repnz
sbb
fcom
nop
das
pop
mov
add
add
push
dec
and
mov
dec
addr16
mov
rorb
cmp
addr16
fwait
sub
leave
ret
repnz
sub
imul
jns
jmp
mov
sbb
add
xchg
cmp
mov
sbb
mov
xchg
mov
pop
xchg
sub
stos
outsb
xchg
scas
pop
jl
scas
jle
lcall
aas
fwait
pop
mov
stos
imul
push
push
pop
test
sarb
sbb
scas
add
jecxz
imulb
dec
stos
push
jno
fildl
cmp
jo
or
pop
and
push
adc
sar
mov
ja
mov
mov
cmpsb
cmp
jae
mov
pop
ja
incw
outsb
sarb
scas
jecxz
mov
enter
inc
stc
test
ror
cmovp
repnz
cld
stos
arpl
dec
dec
sub
sub
xchg
lret
inc
cli
mov
aaa
sub
fcom
rcrl
shl
inc
dec
lea
mov
fyl2xp1
mov
cmp
pop
clc
push
cmp
lock
iret
jmp
push
xchg
cld
out
mov
adc
cmp
clc
loop
jg
insl
mull
jnp
sub
imul
mov
mov
leave
cmpsb
add
out
iret
arpl
xchg
into
sub
rorb
xchg
into
rcr
sbb
aad
das
mov
out
in
out
clc
mov
pop
daa
cld
cmpsl
jo
into
xchg
and
fldenv
add
es
adc
dec
xchg
das
mov
out
push
les
mov
andl
add
add
add
popa
jle
pop
lods
into
fisttpl
cmp
fcom
adc
pop
add
data16
push
mov
jge
pop
int3
rcr
cld
out
xor
out
mov
push
popf
inc
lods
inc
int3
xchg
pop
cwtl
mov
movsb
dec
and
and
cmp
xchg
mov
loop
cmp
movsl
insl
lahf
sbb
je
pusha
cmp
xchg
cltd
adcb
repz
in
sarb
dec
enter
xchg
fldl
shrb
cs
jne
stos
pop
cmp
jb
xchg
aam
xor
lea
pop
sbb
ret
pop
jnp
sbb
sub
add
sbbl
or
frstor
adc
mov
hlt
jmp
inc
hlt
sub
add
movsb
sub
cmp
jmp
mov
push
das
sbb
mov
push
lahf
mov
dec
pop
mov
adc
mov
mov
repnz
out
inc
shlb
sahf
sub
adc
lret
pop
mov
outsl
out
mov
std
inc
loope
push
in
dec
push
test
push
int
mov
sbb
jl
faddl
mov
jne
and
testl
inc
add
movsb
icebp
pop
push
push
inc
cmc
dec
roll
ret
je
inc
add
and
cld
dec
inc
add
out
outsb
nop
lret
and
ss
sarl
pcmpeqw
jmp
or
call
cmp
pusha
xor
arpl
ret
out
cmp
aaa
xor
bound
push
mov
or
adc
cmc
jmp
imul
rcrl
push
cmp
and
cmp
push
inc
push
outsb
fsts
mov
cmp
pop
bound
mov
adc
ss
rsqrtps
jnp
sti
mov
jo
negb
cld
pop
lahf
cli
in
out
inc
stos
pop
sub
xchg
int
stc
cmp
clc
cmpsl
mov
inc
movsb
daa
aam
scas
movsl
lea
cmpsb
pop
lahf
stos
mov
inc
sub
xor
add
xchg
cmp
push
mov
call
js
mov
xchg
pop
cs
outsl
push
out
popa
mov
sub
daa
scas
sahf
fcmovnu
jno
sub
mov
cmp
push
mov
mov
in
leave
out
adcl
fdivl
sbb
adc
mov
stos
push
sti
sti
scas
imul
xchg
jne
cmp
mov
add
adc
loop
push
push
scas
mov
shlb
test
push
inc
jle
mov
and
sahf
repz
movsl
ds
adc
cmp
xor
jecxz
ds
daa
jge
in
out
sub
cmp
mov
sbb
and
clc
lret
mov
mov
dec
mov
lret
or
sbb
push
lcall
xor
scas
cmp
repnz
mov
push
and
pop
or
pushl
jl
jb
lea
mull
pop
inc
clc
movsl
loopne
repnz
xor
cmpsb
lcall
gs
out
fists
imul
testl
push
imul
xchg
call
mov
rclb
divb
insl
repz
outsb
lods
ret
call
fwait
or
push
test
sub
xchg
mov
jp
js
into
scas
std
smsw
push
lock
scas
repz
or
mov
add
imul
std
mulb
mov
sub
aaa
mov
xlat
sbb
xor
pushf
lahf
test
or
dec
pop
pop
push
cmp
sbb
push
adc
and
xchg
outsb
leave
dec
sbb
ss
cmpsb
negb
add
daa
lock
xchg
mov
ss
std
xchg
mov
sbbb
mov
push
jb
xor
sbb
pmaxub
dec
clc
inc
push
mov
movd
mov
movsl
mov
sub
popf
cmp
imul
mov
push
leave
pusha
mov
mov
fsubrl
fildl
xchg
dec
fisttpll
in
mov
mov
decl
push
js
scas
in
or
pop
jecxz
in
inc
xchg
mov
cmp
adc
sbb
out
mov
dec
fwait
jl
scas
mov
movsl
and
rorb
mov
mov
out
dec
mov
sub
mov
andl
pushl
sbb
popa
fdivrs
sbb
push
sub
add
push
jecxz
sbb
sub
dec
fadd
and
mov
test
sbb
fsubr
cmpsl
pop
inc
or
mov
int
and
insl
out
movsl
stc
cmp
jae
sbb
icebp
mov
inc
mov
ret
insb
pop
scas
mov
xchg
inc
dec
addr16
ds
pminsw
xor
cmp
cmp
cmc
push
jno
out
mov
mov
push
mov
or
mov
jo
mov
out
inc
cmp
aad
insb
push
iret
mov
enter
cmpsl
mov
add
cmp
pop
cmp
fbstp
fistpll
jle
dec
or
push
int3
addr16
mov
out
sti
sub
mov
or
mov
mov
subl
inc
outsl
inc
cwtl
mov
dec
xlat
aas
pushf
cli
push
dec
in
and
pop
or
pop
ss
inc
jb
loopne
clc
dec
xchg
int3
shld
mov
leave
dec
fdiv
mov
mov
xchg
or
xor
orb
lret
sbbb
cmc
int
mov
jle
insb
cmp
arpl
add
pusha
pop
int3
dec
fcomps
sub
jns
and
call
shlb
sti
push
sbb
ja
imul
insb
inc
sbb
add
inc
push
sbb
push
shl
ret
jno
repz
insl
mov
outsb
loope
call
stc
cmc
dec
out
pop
cmp
and
inc
push
mov
test
cmp
push
aas
inc
cmc
sbbb
leave
adc
loopne
into
pop
add
outsb
inc
fs
movsl
loop
mov
xor
ljmp
cmc
jne
mov
movsb
subps
in
out
inc
pop
sti
push
xor
andl
adc
imul
mov
outsl
fwait
lret
les
popa
sbb
jnp
lods
mov
iret
lods
jb
add
add
add
add
add
push
adc
and
cmp
add
adc
jecxz
cmpsb
adc
mov
test
and
pop
cmp
add
and
add
bound
stc
push
out
je
jb
repz
lret
jg
mov
frndint
mov
mov
jo
sub
mov
adc
add
jl
inc
cmc
xchg
out
sub
mov
daa
mov
sbb
mov
mov
ds
repz
mov
mov
cmc
mov
jnp
test
ljmp
imul
pop
fbstp
test
push
jle
outsb
push
ljmp
sti
ss
dec
fs
xchg
rclb
pushf
or
xchg
lcall
xor
mov
std
sbb
or
aam
push
mov
jno
dec
aam
insl
mov
lret
inc
cmp
jmp
repz
push
sbb
xchg
not
lea
movsl
push
cwtl
add
or
jge
adcl
push
fdivrl
mov
and
enter
dec
add
xlat
push
filds
push
into
fs
bound
cmpsb
or
sbb
mov
mov
pop
mov
add
cwtl
daa
add
mov
xlat
mov
and
nop
push
add
into
push
mov
les
jge
cli
mov
bound
mov
lahf
fisttpl
jg
mov
mov
jns
mov
xchg
or
mov
mov
add
test
jno
test
rorb
out
adc
push
lock
stos
mov
xchg
pop
push
jmp
pop
jbe
push
leave
test
loopne
scas
mov
jnp
arpl
aam
rorl
sub
cmp
cmp
fxtract
cmp
xchg
lret
jg
add
pop
int
dec
lods
xchg
jmp
mov
cli
test
jle
mov
pushf
sti
xor
ret
aam
xchg
sub
paddb
xrelease
mov
popf
mov
jp
cmp
mov
inc
setl
pop
pop
pop
pop
jnp
sub
adc
add
stos
adc
ljmp
jecxz
outsl
shll
loopne
pop
inc
outsl
scas
dec
pop
sbb
js
jl
lcall
dec
xchg
sbb
call
lods
ljmp
repz
scas
negl
fcomps
mov
lea
imul
notl
and
jle
in
arpl
cmc
sub
rcrl
jno
cmp
cmp
or
std
dec
gs
test
ret
cmp
lds
add
jge
leave
inc
inc
invd
sub
mov
fistpll
movl
jecxz
mov
push
add
cld
mov
out
xlat
pop
xchg
sahf
push
hlt
add
sbb
test
test
repz
and
int
pop
shrb
iret
mov
adcl
scas
rol
int
cmpsl
add
jb
int3
or
inc
sbb
xchg
xchg
fisttps
iret
mov
in
add
dec
fdivrs
dec
push
push
xchg
stos
add
mov
cmp
xchg
and
inc
stc
jne
add
jmp
cmp
xchg
xor
adc
scas
lret
push
push
das
inc
adc
loop
lock
clc
lret
insb
pop
in
pushf
push
psubd
mov
cltd
xor
mov
lods
jecxz
mov
sub
sub
dec
inc
xlat
enter
add
out
fmull
shr
inc
jg
test
inc
cwtl
cmp
stc
mov
jo
bound
in
imul
cmpsb
das
pop
mov
pop
lock
scas
xchg
lahf
arpl
mov
sbb
sub
cmp
movsb
aaa
scas
sahf
jae
dec
popf
mov
push
cmpsb
push
lods
sub
and
push
and
inc
sub
mov
adc
enter
inc
outsl
cli
inc
jb
not
sysexit
loopne
testb
push
xchg
repnz
rorb
mov
dec
xchg
jnp
inc
in
add
stos
vpor
lock
add
fisubl
test
mov
lahf
in
and
xlat
insb
and
into
shll
lds
clc
push
xchg
imul
inc
loop
push
dec
lea
movsb
addr16
and
push
aad
sbb
jbe
cmc
pop
ja
jle
and
push
jecxz
and
pushf
adc
add
cmpsb
psubw
inc
jae
inc
pop
push
mov
fwait
hlt
loop
jge
scas
aaa
sub
aam
adcl
add
out
ljmp
leave
sahf
fmuls
ret
pop
aad
scas
les
push
fs
cmpsl
mov
lock
in
jnp
shl
cs
or
mov
sub
jb
lahf
pop
push
adc
ljmp
mov
pop
test
stos
jo
cmp
dec
jmp
stos
lea
sbb
inc
in
pop
cmpsl
test
repnz
jl
cli
xchg
mov
cmc
dec
push
mov
lea
mov
jge
xchg
sti
test
or
std
into
push
ret
and
push
fwait
iret
call
mov
jge
out
fwait
ljmp
rorl
int3
jns
imul
mov
js
pop
fs
or
add
xor
sub
sbb
xchg
xor
sub
adc
cmp
fdivl
cli
sti
inc
xor
fidivl
shrb
gs
mov
and
sbb
int
mov
loop
in
out
rcrb
mov
push
mov
imul
fbstp
add
mov
lahf
bound
jl
ds
push
psrlq
loop
mov
inc
adcb
test
clc
pop
loopne
arpl
fidivs
dec
sbb
js
push
add
sbb
and
or
mov
ret
pushw
fstl
mov
inc
pop
lods
out
adc
popa
mov
push
or
mov
test
cld
loop
ja
jmp
mov
mov
cli
push
inc
add
fs
pusha
pop
sub
pop
enter
push
xchg
jmp
outsb
add
mov
dec
and
stc
xor
movsl
sub
andl
lods
mov
mov
adc
jmp
clc
imul
dec
out
adc
push
stc
aad
out
pop
pop
sub
leave
daa
test
jge
add
add
add
insl
les
mov
jae
aam
les
add
and
add
xchg
in
lcall
test
dec
aaa
sub
test
adc
int
inc
sti
fwait
dec
in
or
ds
int
test
in
add
scas
movsb
in
ret
sbb
mov
pop
imul
jo
push
mov
jp
je
xor
icebp
pop
js
sub
pop
cli
mov
mov
fabs
inc
loope
insb
andb
inc
add
aas
pop
es
in
xlat
cmpl
rcrl
or
lret
mov
push
jbe
int
and
rcrl
fstpl
or
btc
lock
in
fs
push
and
cli
sahf
loop
in
jo
push
add
dec
mov
into
xor
add
or
add
pop
add
xchg
add
and
cmp
ret
jl
jns
xchg
xor
fstpt
xchg
fmulp
sub
arpl
xchg
in
adc
sub
scas
xor
sbb
pop
sub
shl
test
loop
add
xor
jbe
call
or
daa
push
testl
fldl
movsl
scas
sub
int3
sbb
cs
sub
ret
enter
cmpsb
or
pop
pop
xor
pop
scas
movzwl
xchg
xor
out
fwait
dec
fwait
mov
sahf
mov
xor
call
in
lock
clc
or
add
push
pop
and
push
iret
push
mov
cmp
pop
loopne
std
inc
push
jno
ret
inc
test
jbe
cmp
test
insl
inc
sbb
je
jo
std
lcall
arpl
push
lds
jg
rcr
fmuls
scas
test
and
dec
rorb
jnp
or
sti
std
call
xor
outsl
insb
pop
jge
addr16
cltd
das
mov
loop
das
pop
mov
movsb
mov
mov
add
add
jno
or
push
out
fmul
and
stos
in
addr16
jns
push
addb
adc
inc
mov
inc
sub
and
stos
es
ss
clc
daa
stos
mov
stos
sahf
xchg
ret
arpl
pop
pop
cmp
je
push
mov
in
mov
mov
pop
out
subl
push
test
ds
movsl
test
lret
imul
pop
jmp
mov
lds
pop
inc
mov
pop
pop
imul
pop
leave
icebp
mov
imul
inc
arpl
or
ds
dec
sti
mov
xor
pop
mov
in
mov
incl
and
cmp
je
inc
lcall
adc
gs
pushf
fiaddl
filds
cld
icebp
cmpb
lret
call
js
in
and
stos
mov
popl
adc
gs
adc
loopne
mov
dec
cmp
fmuls
adc
mov
fisubs
aaa
stos
sbb
lret
mov
das
pop
sub
xchg
je
loopne
mov
and
mov
lds
pop
inc
dec
xchg
adc
nop
repz
and
xchg
inc
ljmp
sub
in
dec
stos
mov
adc
sarb
inc
sub
mov
push
aaa
dec
or
popf
subb
loopne
mov
jns
fstl
in
jbe
pop
mov
sbb
mov
inc
rorb
ret
sbb
aaa
cmp
and
jl
push
mov
sbb
xor
xorl
test
xchg
les
sbb
adc
arpl
jnp
je
loope
pop
mov
insl
push
ret
sbb
xor
mov
ss
std
repz
pop
or
cld
into
dec
dec
jle
mov
inc
shll
notl
mov
lret
push
push
cmpsl
cmp
mov
ret
into
out
lods
sbbl
loop
mov
cld
cli
mov
ja
inc
out
jbe
mov
mov
and
stos
fs
inc
jp
aad
ss
lret
repz
jo
roll
outsl
repz
push
mov
and
dec
push
bound
sub
ret
fisttpll
addr16
enter
les
pop
inc
push
dec
add
fwait
mov
adc
clc
jnp
je
shrl
pop
pushf
jge
mov
push
insb
cld
lea
sub
inc
fisubrs
add
into
add
sub
sbb
in
cmp
data16
loopne
cmp
sbb
jo
pop
sti
and
fbld
aas
mov
je
cmp
cmpl
test
xlat
movsb
push
jae
ljmp
hlt
inc
dec
scas
cltd
pushf
das
iret
sub
inc
sbb
inc
cmp
and
jae
xor
jb
cli
cmpsl
inc
jns
inc
arpl
sbb
test
inc
pop
mov
and
sub
jp
and
fiaddl
arpl
cmpsb
push
or
push
nop
add
loopne
imulb
push
gs
push
xchg
inc
std
arpl
das
jbe
mov
mov
pop
sub
scas
or
jecxz
sbb
mov
or
dec
xchg
mov
sti
mov
hlt
jp
push
inc
popa
in
aad
xchg
daa
movsl
push
mov
mov
push
xchg
inc
xlat
cmp
mov
mov
jg
cmpsb
mov
xor
mov
push
inc
call
xlat
push
call
dec
xor
xor
push
shrb
in
xchg
sbb
pushf
jo
and
xor
xchg
dec
lahf
lods
std
and
or
sbbl
adc
adc
push
sbb
ret
cmp
jecxz
popf
lods
mov
pop
sbb
daa
and
lds
mov
gs
in
fwait
out
push
push
cmp
repz
stos
sub
pushf
xchg
push
ljmp
jnp
int
cmp
mov
enter
into
cmp
outsb
xorl
xchg
es
push
test
dec
out
jle
popf
outsl
lods
mov
rcr
pusha
lds
xchg
nop
jp
adc
mov
xor
jp
aam
loop
je
adc
pop
scas
xlat
repz
mov
mov
mov
dec
xchg
popa
pusha
or
lds
cltd
mov
imul
ljmp
enter
lea
mov
lds
adc
cmc
add
add
add
lahf
arpl
mov
mov
add
pop
add
lea
cmp
add
rcll
xlat
or
mov
jg
push
subl
pop
xor
ret
repz
ror
movsl
test
push
and
sub
mov
lahf
roll
jp
fwait
mov
mov
loopne
jecxz
rcl
rcr
outsl
adc
and
sub
roll
mov
cmp
push
jae
shrb
mov
test
push
pop
dec
shlb
jecxz
jo
leave
pop
sbb
mov
sub
cli
add
test
fists
mov
scas
inc
movsl
add
adc
mov
sbb
xchg
xor
out
mov
add
test
lods
adc
cmp
shlb
jnp
cmp
in
lret
test
pusha
mov
push
xor
sub
pusha
cs
mov
fsubl
fwait
mov
adc
push
inc
ficoml
xor
test
or
int
mov
xor
adc
enter
fsubl
pop
pop
popa
sub
fsubs
into
sub
or
mov
mov
pop
dec
adc
jne
es
mov
and
fistps
add
dec
call
inc
or
ret
cmpl
lods
out
and
in
adc
sub
popf
xor
pop
add
pop
out
cmp
icebp
movsb
aad
xchg
addr16
call
mov
and
aaa
mov
or
jno
mov
push
js
ds
pop
outsb
sbb
xchg
imul
outsb
or
inc
stos
sub
sub
mov
adcl
push
cli
xor
xchg
fwait
test
inc
sbbl
das
push
out
movb
stos
ret
or
inc
mov
inc
push
xorl
mov
jg
push
inc
mov
xor
dec
inc
lea
repnz
movsl
bnd
aad
or
pop
sbb
push
ja
out
cmc
mov
mov
sub
stc
fstpl
xchg
fisttpll
js
daa
fbld
xchg
adc
in
mov
jp
or
add
out
int3
fnstenv
shll
out
stos
jne
outsl
xchg
hlt
or
scas
lea
jb
pushf
and
int3
adc
scas
sbb
aam
insb
test
inc
cmp
jae
shlb
or
mov
dec
push
pop
jo
jbe
es
add
sbbl
inc
std
sbb
push
mov
xchg
lahf
fdivl
repnz
repz
jb
sahf
dec
cmp
pop
pop
jnp
jno
fcompl
xlat
mov
dec
cmp
shl
lods
xlat
in
andl
add
xor
push
sbb
adc
xor
rcrl
clc
cmp
or
or
popa
adc
push
pusha
cmpsb
sub
ret
sbb
cmp
lret
pop
gs
cwtl
adc
jb
xorb
add
shlb
imul
es
pop
popf
sub
shrb
shll
mov
pop
mov
in
fdivrl
mov
out
pop
cli
mov
shll
xchg
sahf
sbb
stc
in
mov
clc
jle
jg
xor
sub
rclb
sbb
mov
xchg
aaa
cmpsb
jp
negb
loop
test
test
mov
fwait
sti
add
push
std
pop
in
pop
cmp
jb
and
imul
cmpl
in
and
push
mov
lea
adc
iret
scas
test
dec
mov
cmp
movsb
mov
mov
xchg
cs
in
fs
jnp
or
xchg
mov
add
hlt
gs
incl
out
jo,pt
ret
ds
push
pop
jp
lods
push
movsl
fs
jp
push
imul
cmpsb
fisubrs
push
adc
cmpsl
int
jp
aas
mov
inc
notb
cmp
fsubs
mov
cmp
or
lods
mov
movsl
sti
pop
repnz
pop
out
aas
or
and
lock
clc
cltd
daa
stc
jo
shrb
lret
adc
add
mov
mov
push
inc
or
xchg
movsb
push
cmpsl
out
xchg
cmp
std
jmp
and
int
push
mov
test
orb
fcoml
pop
jmp
ficomps
mov
shr
xchg
add
pop
add
sub
jmp
inc
stos
pop
dec
and
xchg
cmpsl
sub
andl
and
jmp
hlt
sub
push
inc
and
test
mov
dec
pop
dec
mov
fisttpl
int
cld
mov
mov
pushf
xor
xor
adcb
sub
dec
inc
out
mov
in
mov
outsb
or
add
shrb
pop
mov
mov
and
shll
sub
add
hlt
cmpsb
push
lahf
dec
mov
int3
lea
sar
outsl
clc
push
pop
fldcw
into
sbb
mov
jge
in
and
ss
cmp
xchg
fwait
leave
mov
popa
fisttpl
not
daa
lods
lret
sti
adc
out
jmp
and
mov
xor
cmc
loop
xor
dec
xor
cli
or
icebp
mov
dec
xor
pop
add
adc
scas
orl
mov
adc
ret
testl
mov
xchg
lret
and
mov
jl
incl
sbb
cmc
or
movsl
push
lock
lock
stos
inc
mov
int3
sbb
sub
pop
cmp
pop
or
mov
mov
out
jo
xchg
xchg
aaa
daa
sbb
lret
or
rorl
add
lods
jg
pop
je
cwtl
push
xorl
or
sub
jle
push
repnz
out
xlat
ret
rolb
jnp
dec
jb
cmp
aas
sti
xor
mov
jecxz
pop
dec
add
add
sbb
popf
jnp
cmp
repz
jl
mov
bound
shlb
or
in
fwait
in
dec
lds
in
xor
and
inc
movsl
cmpsl
push
mov
fdivs
lods
xchg
cmp
sbb
jmp
dec
sbb
xor
fstps
xor
jb
out
xchg
add
add
pop
mov
mov
mov
dec
add
and
add
popa
jl
test
push
xchg
jmp
cmpsl
push
dec
negl
repz
aaa
mov
adc
cltd
leave
sbbl
dec
testl
dec
sbb
jp
jb
sub
push
mov
and
out
jl
movsb
xchg
cltd
cmp
pushf
aas
dec
add
jmp
frstor
mov
jge
mov
rclb
and
sub
addb
inc
rcr
or
and
inc
shlb
mov
add
fcmovne
sbb
inc
dec
xor
aas
sbb
jle
inc
pop
scas
or
std
mov
cld
test
popa
mov
push
xchg
dec
inc
adc
adc
lahf
ret
push
mov
notl
popa
jg
mov
je
call
jns
jb
or
int3
push
cli
loop
testl
popa
mov
mov
mov
push
jo
mov
dec
xchg
mov
outsl
jno
popa
lahf
pusha
sub
shll
cmp
data16
pop
lahf
decl
add
xlat
dec
repnz
movsb
add
mov
mov
scas
aaa
pop
mov
loopne
lea
scas
shl
pop
dec
stos
sub
jecxz
ljmp
scas
out
into
enter
mov
into
adc
jle
adcl
lahf
in
lea
or
xorl
in
mov
pop
add
pop
ljmp
mov
ljmp
sti
ds
aas
and
jnp
insb
ljmp
iret
js
push
insl
ret
cmc
adc
jp
dec
ret
dec
push
mov
addr16
pop
xchg
das
cmp
push
sbb
int3
xor
arpl
push
shll
js
xchg
pop
bswap
in
les
gs
xchg
shl
add
mov
add
mov
lret
sub
sbb
inc
push
sbb
adc
pop
sahf
pop
cmpsl
pop
or
mov
pusha
push
lock
cmc
pop
mov
popa
loope
clc
rorb
cmp
mov
cmp
jp
pushf
xchg
ficomps
or
jl
xchg
cmp
add
mov
mov
frstor
inc
mov
dec
inc
inc
out
sbb
jnp
mov
sti
mov
cwtl
jne
je
or
add
xlat
aam
aas
xor
int3
or
lds
and
outsl
inc
sbb
mov
sub
scas
mov
mov
insb
inc
dec
out
cmc
repz
sub
addl
testb
jg
test
and
or
mov
jle
jg
les
mov
fisttpl
rorb
mov
shll
fnstenv
aam
sti
inc
je
xchg
and
divl
jle
dec
add
or
dec
mov
sbb
jns
pop
dec
sti
adc
cld
scas
jl
jne
cs
adc
cmp
xor
add
mov
dec
mul
aaa
mov
ret
push
xor
add
sti
sbb
pop
push
sub
add
cmp
mov
pop
pushl
fisubl
dec
inc
lahf
jbe
sub
mov
sbb
inc
cwtl
mov
inc
jecxz
mov
out
popf
fisttpl
lcall
push
jg
mov
mov
insl
aas
mov
adc
lock
in
adc
mov
jg
mov
ret
lret
cld
cltd
jno
mov
dec
jecxz
dec
adc
add
mov
cmp
sbb
repz
jnp
mov
fwait
rcrb
xchg
add
lock
lret
add
jmp
mov
sub
push
icebp
mov
ja
mov
int
pop
dec
dec
jo
lret
dec
insl
jns
pop
out
push
cld
xchg
push
pop
mov
mov
jp
jl
add
cmpsl
adc
and
sbb
filds
inc
les
mov
iret
xchg
push
add
mov
cmpsl
shl
mov
inc
push
jmp
adc
jae
mov
mov
lods
mov
cmovbe
cltd
jno
scas
shll
push
add
mov
loop
add
ficoms
xchg
xchg
or
repnz
and
cmc
insb
mov
or
add
in
roll
lods
add
das
xchg
in
mov
arpl
mov
cli
push
pop
add
leave
dec
in
push
repz
xchg
imul
xchg
shrb
add
clc
pusha
push
xor
add
jnp
loopne
add
popa
or
popf
xor
bswap
sbb
pop
mov
aaa
lret
je
hlt
sbb
inc
push
popf
xor
mov
dec
imul
jecxz
xchg
inc
int
cmc
pushf
xchg
repnz
in
mov
jmp
sub
xor
xor
ja
cltd
ds
cmp
repnz
loop
loope
pushf
test
setb
insb
adc
inc
adc
cs
lret
int
adc
xor
push
js
movsb
cmpsl
sbb
push
loopne
inc
ljmp
std
in
jbe
jl
xchg
cltd
scas
xchg
stos
movsb
push
test
aad
or
push
aam
adc
test
test
enter
in
int3
ret
lret
add
jl
inc
pop
sbb
es
dec
popa
pop
pop
iret
cld
sbb
inc
and
cltd
sub
jo
out
fisubs
inc
bound
shll
or
sets
push
inc
mov
push
xchg
cwtl
test
add
mov
dec
fadds
test
add
mov
sbb
and
push
sbb
inc
inc
in
inc
jge
leave
test
jge
cld
push
or
fwait
xchg
sub
hlt
xor
cs
inc
add
mov
lock
mov
rclb
sbb
movsl
sub
shll
nop
rolb
std
sub
pop
adc
std
mov
xchg
add
push
ss
cmp
loopne
jae
sbb
xchg
jecxz
adc
xor
dec
insl
xor
test
cwtl
insl
das
jnp
dec
mov
fwait
in
sub
sub
lds
cli
pop
in
jo
clc
das
mov
add
add
push
inc
or
pop
cltd
roll
add
and
add
mov
out
faddp
push
push
jl
ret
int
clc
jae
ds
fnstcw
scas
in
xor
xchg
sub
loop
das
ljmp
cmp
lods
fistl
gs
iret
in
mov
nop
rcll
push
and
movb
push
add
sbb
cmc
test
mov
dec
out
ljmp
aad
sbb
jae
jbe
daa
out
xor
aad
xor
js
icebp
mov
mov
push
dec
loopne
frndint
or
cmp
mov
cmp
mov
mov
mov
jl
or
mov
adc
mov
cld
mov
add
and
das
xchg
xor
stos
aad
xchg
sahf
imul
and
pop
xor
sub
fbld
push
in
outsb
jae
pop
addl
shll
jmp
xchg
mov
xor
mov
mov
or
arpl
mov
jno
xor
sbb
scas
and
in
sub
shl
jno
xchg
jbe
stos
inc
push
sbb
sti
pushf
rorb
std
aaa
imul
sub
imul
scas
add
call
clc
hlt
jae
jp
mov
cld
mov
addr16
push
adc
clc
outsl
and
and
jo
aad
data16
sarl
cmp
mov
cltd
pop
fnstcw
icebp
jmp
inc
and
push
dec
mov
stos
cmp
aas
xchg
notl
and
fsub
and
out
inc
pop
push
leave
xchg
mov
and
pop
xorb
enter
fadds
mov
dec
push
push
and
cmpsb
xchg
in
mov
mov
jbe
scas
inc
inc
pop
fadds
xor
sbb
dec
dec
movsl
inc
xchg
jmp
cmp
jne
dec
push
sbbb
and
jo
mov
cld
dec
xor
pop
and
inc
adc
mov
mov
rclb
or
add
vmovd
rclb
filds
xchg
iret
xor
leave
sbb
iret
jb
add
out
fs
sbb
stc
into
adc
pop
ret
inc
cmpsb
jmp
add
iret
out
mov
icebp
ljmp
jle
or
adc
outsb
xor
nop
ds
imul
scas
movsl
and
jnp
xor
jmp
xchg
xchg
mov
insb
add
mov
aaa
mov
add
mov
xchg
aas
lods
inc
push
icebp
test
or
xor
ljmp
dec
iret
pop
jns
mov
rcrl
orb
jge
cltd
or
outsl
roll
push
clc
std
in
in
dec
mov
cmpl
xchg
movsb
adc
cmp
call
stos
xor
sub
shrb
shrb
push
xor
ja
fiadds
stc
inc
dec
lods
add
les
shll
jns
movsb
outsl
je
std
into
xchg
lahf
int
arpl
add
xchg
jp
shll
and
dec
test
adc
add
xchg
cmp
mov
and
adc
loope
arpl
jbe
stos
adc
mov
js
call
jnp
xchg
fimuls
andl
test
and
nop
into
stos
xchg
fisttpll
add
mov
push
movsl
mov
das
cs
pop
sub
cmp
filds
inc
mov
push
mov
insb
push
out
cmp
leave
jge
mov
jecxz
icebp
call
push
pop
lahf
and
lcall
mov
jo
and
push
pop
adc
fimull
xlat
pop
inc
xchg
das
mov
rcrb
cmp
or
push
std
lret
adcb
nop
mov
test
fiadds
xor
cltd
movsb
out
xor
inc
push
movsb
out
into
sbb
jl
push
mov
xor
jae
in
dec
mov
pop
xor
cmp
cmpsl
jno
mov
cmc
pop
jno
fimull
push
push
call
and
out
add
mov
push
pop
jle
xor
add
out
inc
mov
std
jg
jae
insl
sub
adc
mov
test
inc
shl
xchg
xor
pop
inc
push
xor
out
fistl
xchg
pop
jg
and
sbb
lret
or
xor
xchg
fildl
repz
adc
mov
push
dec
fnstcw
outsb
divb
repnz
inc
stos
mov
add
dec
mov
push
cmp
adc
bound
movsb
push
loopne
mov
pmaxsw
iret
cwtl
test
cmp
xchg
fildll
outsl
adc
lret
pop
xor
iret
je
push
xor
mov
test
pop
ja
jo
in
pushf
std
out
sub
arpl
cli
mov
mov
sub
cmpsb
adc
pop
clc
scas
adc
push
xchg
ss
fbld
scas
push
push
in
pop
xor
pusha
xor
scas
clc
outsl
xor
dec
sahf
mov
dec
mov
pop
in
sub
das
test
ret
jo
ljmp
movsl
jbe
inc
sahf
in
mov
pop
or
and
push
and
push
repz
mov
adc
dec
cwtl
or
jle
pop
or
dec
dec
jmp
pop
sbb
ljmp
pop
push
sub
notb
sbb
loope
cmc
dec
pop
sahf
xor
ficoms
gs
arpl
push
sbb
fistpl
pop
push
faddl
ljmp
push
das
xor
popf
cld
and
mov
punpckhdq
fs
pop
clc
lock
push
mov
inc
fmuls
mov
aam
add
int3
xor
rorl
sub
mov
lods
add
test
jno
xor
add
sti
ficompl
daa
stos
hlt
scas
jnp
mov
sbb
jle
hlt
pop
adc
mov
adc
icebp
call
dec
lods
xchg
dec
push
scas
mov
dec
enter
stc
mov
in
adc
lods
jae
mov
jae
ja,pn
clc
inc
in
stos
cli
jp
fisttps
or
ljmp
and
aad
rol
bound
aad
cltd
jge
inc
cmpsb
mov
sub
cmp
sub
xchg
aaa
or
ljmp
fisttpll
mov
jbe
test
add
add
pop
addl
shl
rorl
out
add
and
add
mov
shl
lahf
je
jae
imul
mov
popa
outsl
inc
xchg
in
pop
sub
pop
scas
rorb
fisubrs
sbb
jecxz
pop
push
daa
add
xor
or
or
mov
adc
idivb
mov
xor
jp
ja
sbb
and
pop
mov
sbb
scas
leave
and
sub
pop
loope
adc
std
movsb
cmc
add
ret
mov
xchg
nop
or
jo
cmp
pop
and
push
aam
push
insb
pop
adc
ret
and
rclb
xchg
repz
cmp
sub
mov
imul
adc
xchg
movsb
jecxz
pop
mov
adc
popa
adc
mov
pop
add
out
xor
jecxz
imul
mov
movsb
popf
sbb
mov
sbb
sub
fldcw
imull
jecxz
add
pop
or
shll
push
or
xchg
jmp
adc
imul
dec
xchg
jge
lret
fisubrs
sbb
je
jbe
imulb
mov
cmp
fimuls
xor
xchg
pop
xor
fidivs
aam
in
sub
jns
push
outsl
movl
push
xchg
fdivl
dec
es
addb
sub
or
xchg
in
cmp
xchg
jl
cltd
scas
sbb
popa
je
push
pop
mov
scas
or
jl
sub
loope
xchg
mov
jmp
icebp
andl
ja
aad
sub
das
pop
inc
pop
xlat
jmp
out
mov
and
outsl
mov
inc
push
mov
iret
and
sbb
or
jnp
sub
mov
add
mov
sbb
sub
data16
xchg
adc
sub
sbb
das
ret
dec
sbb
fwait
iret
movsb
lods
sub
faddp
aad
jle
lds
sbb
repnz
std
xor
clc
sub
int3
ja
rcll
rcrb
mov
dec
or
mov
jne
sbb
sbb
mov
pusha
xor
mov
fnsave
cmp
jbe
sbb
stos
imul
xor
jno
ljmp
inc
cwtl
jl
sub
jp
lret
mov
outsl
sbb
push
dec
add
and
ret
je
dec
popa
std
lret
scas
in
and
nop
loope
ret
mov
cmp
sub
out
jmp
push
and
pop
sbb
dec
rcll
jp
mov
mov
icebp
lahf
adc
dec
out
jmp
ljmp
out
jecxz
in
cmc
data16
push
mov
lds
int
jno
int3
mov
out
pop
push
lock
loope
cli
xchg
jb
out
dec
aas
lock
leave
xchg
inc
mov
repz
ds
shll
pop
cmp
mov
popa
je
inc
pop
mov
push
pushf
lea
xor
scas
cmp
mov
rclb
xchg
add
daa
loopne
cmp
andl
ret
cmpsb
cmp
incl
cli
cli
push
jno
hlt
inc
inc
xor
not
and
xor
je
mov
test
jg
scas
enter
lea
push
adc
js
and
sbb
out
rclb
sbbl
inc
push
mov
push
int
add
sbb
ja
fidivl
cmp
and
arpl
mov
inc
negl
pop
repz
sbbb
in
lahf
and
into
dec
call
jno
sbb
sub
sub
fstpl
dec
lcall
dec
jno
dec
rcrl
or
rorb
gs
push
fcoms
cld
xor
xchg
jns
imul
pop
mov
pop
cmp
xor
adc
adc
mov
insb
subl
into
inc
cs
std
fwait
jb
dec
xor
and
xorb
pop
leave
scas
in
les
nop
dec
mov
pop
outsl
sub
mov
dec
adc
sub
push
lods
fwait
imul
mov
scas
shlb
ret
insb
mov
shll
dec
push
in
pop
imulb
inc
mov
xchg
pop
mov
jnp
cmp
rclb
push
xor
and
scas
sbb
pop
push
dec
out
shlb
mov
sbb
sub
jo
push
mov
xchg
fwait
jo
out
mov
rorl
popa
movsl
mov
ds
lret
xor
inc
and
pop
jbe
push
cmp
mov
leave
or
dec
lods
fstpl
out
xchg
xor
adc
mov
push
mov
pop
xchg
jle
mov
cmp
out
jo
push
xor
mov
and
or
popf
sahf
jge
in
sarl
js
sahf
aaa
dec
mov
repz
add
lock
pop
negl
inc
mov
dec
test
sbb
or
aas
jo
inc
jno
cmpsb
cmc
mov
push
xor
or
cmp
pop
sub
sub
sbb
loop
addr16
fdivrl
leave
call
push
push
repz
fidivrl
and
lock
fbstp
sub
jl
push
inc
or
lds
sbb
mov
mov
lods
cwtl
test
xor
pop
imul
arpl
cmpsb
adc
das
or
push
icebp
and
jg
filds
repz
mov
arpl
sub
sti
test
aaa
xchg
jp
lahf
clc
aad
cwtl
push
lods
xorl
inc
adc
rcrb
adc
pop
das
loope
in
notl
pop
xor
testb
or
xor
arpl
popf
jmp
jp
mov
jbe
xchg
dec
sbb
ret
into
or
inc
ficomps
bswap
adc
jmp
mov
dec
lret
aaa
in
xchg
jl
inc
lret
mov
shl
notb
outsl
dec
nop
ss
in
ja
adcb
jp
shll
stos
inc
imull
scas
push
into
sbb
sub
xchg
mov
popf
enter
push
int3
fidivs
outsb
movsb
mov
mulb
pop
test
lods
lock
adc
add
jle
hlt
popa
dec
pop
popl
scas
fdivr
mov
in
lcall
jne
cmc
sub
xlat
mov
arpl
xor
mov
ja
dec
arpl
add
add
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
data16
outsb
cmp
jbe
jp
jle
add
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
add
add
add
sbb
add
add
or
cmp
cmp
cmp
cmp
cmp
cmp
and
sbb
add
les
enter
shlb
aam
fdivs
fdivl
loopne
in
jle
ret
repz
std
jle
loope
mov
icebp
jne
or
add
pop
add
out
ljmp
inc
jnp
sub
enter
mov
or
popf
xor
or
push
inc
jl
imul
or
xchg
xor
lods
jecxz
mov
dec
sub
fldcw
leave
cmp
test
inc
inc
test
or
sbb
jg
cli
adc
sbb
out
mov
divb
lds
cmpsb
sbb
push
pushf
shll
lahf
iret
loope
aad
xchg
test
mov
dec
push
mov
xchg
inc
out
outsl
inc
push
jnp
int3
fcompl
mov
arpl
mov
dec
test
inc
loopne
push
nop
mov
gs
mov
mov
or
lock
mov
xchg
lods
ffreep
xor
mov
icebp
and
cwtl
adc
sahf
loop
mov
adc
jb
jns
dec
ret
mov
adc
out
lret
and
jp
jo
sbb
aas
cltd
aas
jmp
cmp
das
push
add
ljmp
movsl
sahf
into
mov
ucomiss
fldenv
repz
push
in
adc
or
pop
xchg
sbb
inc
dec
mov
xlat
mov
in
inc
and
mov
fs
mov
cmp
cld
pushf
jno
mov
and
std
jnp
sarb
ret
mov
inc
push
adc
xlat
in
outsl
dec
xor
push
rcrb
out
xchg
test
mov
test
push
xlat
aas
cld
mov
insb
cs
sub
adc
bound
fstpl
int3
sbb
xchg
clc
xchg
jb
mov
movsb
imul
xchg
daa
dec
sub
mov
cs
mov
sub
repz
into
sbb
int
sub
cld
mov
clc
shrb
lcall
ss
scas
inc
loope
cmp
jg
inc
or
xchg
fdivrp
mov
or
mov
mov
push
not
cmpsl
ror
mov
or
outsl
cmp
mov
fisubrs
std
lods
sbb
fwait
xor
lcall
pusha
mov
push
xor
sub
sub
sub
inc
pop
fidivrs
push
inc
stos
hlt
scas
xchg
cltd
push
bound
fwait
jae
ret
sub
sub
nop
call
arpl
aas
insl
enter
push
cmp
adc
xchg
std
add
or
xor
fistps
nop
and
imul
out
mov
test
hlt
cs
mov
inc
mov
cmc
adc
push
movsl
cmc
stc
cmpsb
dec
je
and
lock
jno
xchg
imul
inc
andl
adc
orl
mov
iret
jge
jge
pop
fidivs
leave
inc
in
cmpb
push
ret
fcmovu
lock
fiaddl
pop
in
stos
dec
pop
xor
aam
jno
pop
dec
jg
xchg
sbb
hlt
xor
aam
dec
gs
imul
mov
dec
and
inc
mov
add
mov
andb
jno
and
sub
cmp
xchg
or
scas
insl
shr
call
sub
dec
or
mov
repz
dec
loopne
dec
lock
adc
and
or
add
mov
repnz
cmp
mov
jae
aas
test
xor
pop
mov
outsl
add
sbb
cld
hlt
scas
or
sti
inc
in
mov
fisubl
mov
dec
add
test
add
xor
andl
pop
mov
add
in
jg
lcall
jnp
ficomps
push
cmp
int
hlt
cli
addr16
push
idivb
pop
out
mov
xor
jmp
call
push
mov
pop
call
adc
dec
adc
aas
add
ret
lahf
fwait
or
test
sbb
cmp
ret
or
pop
pop
adc
jmp
jge
pop
imul
pop
dec
pop
into
loop
cltd
into
push
ret
int
mov
push
sub
push
sbb
jb
dec
sbb
pop
push
sub
adc
stos
and
cmp
cwtl
stc
stos
divb
shlb
jge
std
jnp
insb
mov
or
sbb
mov
gs
testb
pop
and
mov
subl
sbb
pop
dec
out
imul
mov
das
push
adc
mov
xchg
gs
adc
inc
xchg
stos
add
mov
and
mov
and
inc
mov
mov
xor
scas
lods
and
xchg
pushf
out
fmull
cmp
cmp
jbe
clc
lret
nop
adc
gs
cmp
push
pop
xor
dec
pop
ret
popf
and
cmc
fistpll
and
loop
sbb
in
inc
lods
xor
ret
daa
outsb
inc
aaa
dec
sub
test
insb
xchg
fs
mov
or
imul
fimull
inc
xchg
add
mov
sbb
mov
lcall
jno
std
out
loope
push
in
push
mov
cmp
test
mov
xchg
push
sub
addl
xchg
mov
pop
jbe
test
fcomps
push
pop
pop
or
adc
insb
xchg
push
ret
xchg
loope
mov
add
pop
xor
adc
xor
jmp
sub
lock
stos
imul
iret
mov
movsl
adc
fisubrs
pmulhuw
call
addr16
xchg
xchg
pop
mov
mov
pop
xchg
or
repz
les
loop
xor
es
mov
pusha
je
mov
out
adc
cmp
pop
je
push
mov
add
aas
lods
movsb
dec
add
sub
rcr
push
xor
sbb
inc
popa
fisubl
add
xlat
call
push
pop
jno
and
mov
mov
imul
out
pop
xchg
mov
out
push
mov
mov
lret
int
xchg
cmp
add
dec
arpl
in
or
les
mulb
add
jge
int3
out
add
daa
xlat
sti
ljmp
dec
push
mov
aas
xor
adc
or
push
cmp
fsubrs
or
xchg
mov
pop
mov
add
add
clc
sahf
out
or
xchg
cmc
shrb
add
xchg
mov
lock
ds
dec
sub
addb
sub
cmpsl
mov
xchg
xor
xor
fbld
xchg
jb,pn
mov
push
in
pop
mov
add
fisttpl
daa
fldcw
mov
pop
xchg
dec
in
shlb
stos
jbe
fidivrs
ret
jl
testb
fcomps
ljmp
mov
in
dec
cltd
adc
push
cmp
mov
and
jmp
ds
insl
xor
int3
cltd
mov
adc
in
int
aam
lea
int3
imul
mov
xchg
sbb
dec
fldl
jne
fs
xor
xor
test
pop
outsl
inc
mov
pop
jbe
jbe
or
xchg
hlt
fdiv
lea
stc
cld
xlat
mov
daa
shl
xchg
scas
mov
pop
inc
stos
pop
lds
xchg
scas
into
sub
push
jns
push
cmc
movsl
pop
cs
xchg
mov
flds
and
rcrl
xchg
mov
add
adc
iret
in
in
sbb
mov
sub
jmp
outsl
data16
and
clc
fcom
jnp
xor
cmp
mov
inc
outsl
sub
mov
lods
xor
dec
loopne
inc
mov
xor
push
lock
outsb
push
inc
xor
mov
mov
adcl
aam
dec
and
pcmpeqb
stc
push
jp
lcall
fdivrl
mov
mov
cmpsl
and
ljmp
xchg
fdivrs
scas
xor
and
in
jo
ljmp
sub
dec
jecxz
into
mov
pushf
cmp
jns
mov
xchg
cmp
pop
lret
mov
cltd
xchg
fdivl
sub
daa
shl
jecxz
sbb
cmp
shll
add
or
gs
mov
sti
dec
mov
inc
cmc
hlt
stos
sahf
push
call
ja
rol
jp
push
ret
ljmp
push
or
dec
je
out
cld
dec
mov
push
cmp
push
jns
jmp
mov
sub
sbb
cmp
test
mov
sbb
mov
lods
nop
hlt
imul
lods
pop
mov
push
cmpsb
jl
mov
xchg
ds
inc
jl
scas
out
subl
mul
sbb
sub
ret
insl
or
mov
jns
push
pushf
std
mov
outsb
jmp
fistl
ljmp
add
mov
push
lret
and
stc
mov
les
lods
in
test
xchg
xorb
cwtl
xchg
jne
lcall
es
arpl
iret
mov
js
gs
adc
clc
lcall
sbb
jne
pusha
daa
push
shll
sub
mov
or
fcoms
int
cwtl
test
dec
mov
rorl
pop
fwait
push
daa
dec
js
push
in
mov
adc
jp
addr16
scas
xchg
fidivs
bnd
mov
mov
bound
push
jne
push
sbb
cli
mov
ret
in
shrl
inc
sbb
out
push
jbe
cmpsl
pop
jge
xchg
call
in
inc
or
cmc
out
repnz
jle
cwtl
cmc
push
cltd
inc
cmp
xor
out
lods
leave
mov
mov
lods
fwait
and
test
test
and
ss
xchg
push
cmpsl
push
mov
ret
out
clc
test
pusha
or
jno
outsl
sbb
adc
cmp
or
cmp
das
mov
dec
dec
addl
pushf
xchg
enter
sbb
fildll
or
mov
std
dec
test
add
push
stc
jns
fisubrs
sub
push
aad
or
daa
xchg
movl
daa
and
dec
out
cli
pop
incl
stos
bswap
mov
test
sub
int
jl
jne
loop
test
jmp
lcall
push
xchg
in
pushf
lods
lds
cs
inc
ret
push
daa
cli
pop
mov
lret
fwait
enter
push
add
mov
pop
sub
outsb
sahf
jecxz
pop
loopne
fisubs
xor
mov
adc
cmpsl
sub
add
sub
xchg
mov
mov
mov
jb
adc
int3
jo
xchg
out
inc
sarl
jle
adc
push
sbb
lret
and
adc
mov
mov
nop
mov
push
sti
rep
push
lret
loope
mov
cmp
mov
insb
test
mov
ret
aaa
lock
ficomps
pop
and
outsb
sti
add
jecxz
lods
pop
cmp
stc
les
cli
rcrb
daa
cmc
adc
shr
inc
push
sub
sbb
pop
lcall
loopne
popa
ret
fsubrp
mov
push
lds
cld
int
es
inc
lock
lock
gs
jl
nop
imul
clc
sbb
stc
jns
enter
or
decl
jl
lds
les
sahf
pop
shlb
or
rcll
imul
movsb
adc
cmpsl
add
sbb
test
mov
adcb
pushf
test
cld
int
mov
sbb
add
push
dec
mov
or
cmpsb
jae
adc
pop
test
or
or
je
popf
or
or
jg
inc
pop
push
cwtl
cld
lods
xchg
popf
aaa
pop
inc
xlat
mov
adc
iret
std
aad
mov
aas
lods
cltd
neg
into
imul
fsubp
popf
pushf
mov
push
lods
ret
xchg
lods
loopne
dec
stos
adc
das
xchg
add
loope
dec
fistps
pop
adc
sub
add
insl
gs
jle
gs
mov
jle
adc
nop
jo
sbb
add
pop
rol
or
pop
lret
pop
dec
popf
and
pop
sub
pop
int
insb
fld
pop
xor
push
mov
jns
xor
mov
cld
lods
dec
fbstp
loop
add
and
cwtl
and
stc
xchg
adc
popa
ret
jp
int3
cmp
es
jge
das
std
mov
mov
pop
xchg
shlb
rorl
lea
lock
add
add
add
shlb
jg
stc
ficoms
inc
and
shlb
jo
add
pop
add
jno
and
sub
shrb
enter
jl
mov
cli
add
js
dec
pusha
jns
cmp
repz
cld
mov
push
sub
cmpl
cmp
cld
inc
mov
scas
out
pop
cwtl
mov
pushf
mov
into
mov
cmpsb
bound
inc
fcomip
cmp
fidivrl
and
xor
sbb
stos
outsl
mov
out
idivl
test
push
call
scas
dec
xor
repz
xorb
lods
in
cmp
dec
push
ffree
cmp
adc
and
ficoms
push
scas
adc
xor
push
pop
sub
mov
sub
pusha
imul
or
jb
sub
pop
stc
xchg
sub
adc
es
cmp
std
inc
out
jno
aam
scas
out
sbb
or
lods
jmp
or
cmpsb
rcr
and
push
shrb
mov
into
les
mov
dec
pop
add
jae
jmp
pop
in
jns
ret
shl
jno
sbb
ucomiss
push
jnp
dec
push
add
push
mov
mov
jne
fidivrl
bswap
movsl
xchg
in
repnz
pop
lret
negl
push
jo
cmp
jle
call
inc
and
sbb
add
fisubrl
push
fcomps
mov
rcll
test
rcll
cmp
mov
sbb
in
mov
addl
push
xor
or
pop
mov
das
dec
iret
aas
ja
pop
xor
pop
push
push
mov
and
fisubl
inc
pop
rep
cmp
cltd
test
int
mov
xchg
push
mov
aas
inc
in
inc
add
repnz
mov
add
dec
sbb
aas
data16
lods
loope
pop
push
dec
sbb
out
movsl
pop
pop
and
cmp
pop
cmp
jecxz
inc
or
roll
pmuludq
and
cmp
imul
je
xchg
sbb
imul
adc
adc
push
push
ss
movsb
scas
lods
jo
xchg
ret
jl
inc
adc
test
mov
out
mov
cmp
jl,pn
clc
jns
xchg
loopne
lods
add
mov
or
pop
jns
ds
inc
push
out
fs
gs
push
push
imul
and
mov
push
jns
inc
pop
mov
int3
fnstenv
shlb
insb
add
push
inc
jno
mov
aam
aad
push
bound
test
es
or
or
sbb
and
outsl
inc
lock
setle
cmp
or
xor
pop
pop
in
gs
mov
add
lcall
leave
pop
out
inc
dec
or
push
fisubrs
xchg
cmc
lret
sub
fprem1
aam
jmp
or
xchg
mov
and
mov
adc
xchg
test
jge
stos
stos
in
dec
sbb
push
shrl
fidivrs
arpl
imulb
cmp
add
adc
iret
out
add
jns
cwtl
mov
pop
jg
outsb
jno
jg
push
out
push
add
pop
ds
arpl
lahf
and
shll
sbb
xchg
mov
test
xchg
pop
sbb
in
outsb
inc
jmp
and
push
push
loop
inc
pop
mov
dec
les
stos
jmp
jbe
adc
push
push
cmp
cmp
or
add
fldcw
cmc
push
in
in
inc
xchg
cmpb
test
jmp
sbb
les
aad
jp
sub
and
pop
mov
pop
test
jne
cwtl
or
mov
dec
pushf
mov
sahf
lret
push
rcrb
pop
icebp
jg
fstpl
addr16
es
and
loopw
inc
pop
outsl
jns
sbb
mov
adc
xlat
in
and
stc
push
lods
xor
push
or
mov
xchg
dec
dec
cs
fdivr
add
fstpl
push
out
outsb
add
xchg
shr
inc
lds
aaa
iret
gs
fidivrs
rorb
enter
in
sbb
jns
popl
push
or
inc
or
inc
ret
sbb
das
das
push
gs
out
push
xchg
out
dec
mov
rcll
or
xor
scas
pop
and
xor
lock
into
push
rcrl
cld
icebp
push
mov
test
in
test
addb
mov
jae
test
fsubp
dec
mov
mov
xchg
shlb
adc
in
fisubrs
outsb
push
pop
shlb
dec
sbb
fwait
jb
fistl
push
mov
jne
jle
pop
pop
out
push
mov
shr
test
adc
into
or
aam
popa
iret
or
imul
add
int
popa
mov
sbb
mov
mov
dec
push
or
add
or
fidivrl
shlb
ficompl
and
ss
fwait
imul
outsb
repnz
loop
mov
push
es
push
mov
inc
pusha
inc
add
addr16
addr16
iret
add
test
xor
push
orb
mov
fistps
fnstcw
adc
xor
sbb
cmp
mov
repnz
pop
outsl
cli
mov
js
fldt
andb
xchg
clc
add
call
dec
shrb
out
xor
mov
mov
xor
jne
adc
adc
out
sub
les
test
or
or
fisubrl
jg
push
shl
icebp
ret
cmp
sub
push
pop
ds
ficoms
or
mov
push
xchg
dec
xchg
hlt
pop
lods
or
cmp
dec
pop
push
mov
fdivrl
lahf
out
stos
mov
add
adc
sub
ret
pushf
inc
iret
mov
push
or
mov
ret
cli
sbb
icebp
mov
addl
pop
ret
clc
sarl
cltd
jge
xor
gs
lret
cld
jl
dec
mov
sbb
in
or
fwait
icebp
imul
sub
hlt
ljmp
mov
fsubrp
cmp
cmpsb
jns
in
int
lods
add
xor
bound
add
and
mov
pusha
fcmove
and
add
pop
add
jle
push
arpl
push
jno
lock
pop
mov
je
repnz
or
xor
sbb
enter
test
mov
mov
jns
shl
lret
cmp
repnz
mov
dec
dec
movsb
fnstsw
adc
sbb
out
lock
xor
iret
lods
add
sub
inc
mov
mov
sarl
push
into
aad
jno
stos
call
fimull
incl
inc
imul
and
jp
add
and
std
imul
mov
in
mov
mov
popf
jb
icebp
movsb
jae
es
cmpsb
inc
in
scas
adc
mov
mov
ret
imul
cltd
call
ja
dec
movsb
insl
cwtl
mov
iret
and
ljmp
jb
js
xchg
xchg
divl
jae
push
sbb
leave
mov
shl
loopne
sub
xchg
sub
mov
push
xchg
pop
mov
cmpsl
std
pop
xchg
mov
cs
mov
ret
repz
sbb
or
pop
mov
pop
loope
divb
iret
xchg
jg
cwtl
jle
call
mov
rolb
adc
mov
or
loope
lret
ficoms
gs
inc
pop
mov
inc
xchg
sbbb
call
adc
jmp
dec
mov
loop
shl
pop
xchg
jae
repz
lret
repz
jae
jmp
inc
sti
mov
xchg
push
xor
dec
mov
pusha
fldcw
dec
cmp
adc
mov
dec
movsb
pop
lcall
mov
xor
jnp
dec
mov
mov
mov
pop
xchg
sbb
pop
in
or
inc
ljmp
addr16
aaa
mov
jle
scas
ss
inc
push
stos
cmpsb
sbb
push
mov
mov
mov
inc
add
add
test
pop
add
inc
jae
pop
pusha
mov
push
add
outsl
mov
jge
sbb
lahf
jae
pop
inc
pop
mov
sbb
inc
dec
das
insl
jp
mov
sbb
pop
dec
dec
adc
sti
imul
cli
ret
and
adc
ja
push
pop
pop
dec
sbb
nop
shrb
loop
test
cmp
push
or
mov
sbb
bnd
int
inc
stos
sti
mov
push
xor
push
int3
mov
inc
orb
or
ja
mov
aad
scas
or
pop
sarb
shrl
pop
scas
cmp
shr
cwtl
and
and
xchg
jns
test
or
mov
ja
jo
aaa
push
cmp
jo
mov
dec
test
mov
into
push
aam
pop
xor
inc
mov
aam
sbb
pop
out
dec
data16
jo
in
es
lods
lret
pop
adc
xchg
sbb
scas
push
sbbl
sbb
icebp
cmp
lock
sub
jbe
cmp
push
enter
popa
cmp
enter
faddl
je
inc
inc
mov
jmp
add
in
or
test
xor
sub
fs
imul
jle
inc
mov
dec
xchg
mov
and
loop
outsb
fdivrl
fcmovnb
icebp
inc
ja
hlt
stc
mov
jne
hlt
movd
and
or
sub
movsl
mov
jns
xor
js
dec
loop
in
repnz
mov
cmc
out
scas
jl
fcmovu
loope
fs
sbb
out
imul
test
sub
xchg
xor
into
les
cmpsb
test
leave
or
outsb
push
cmp
test
and
fidivrl
add
sbbb
in
pop
stos
inc
into
mov
outsb
mov
mov
lods
cmp
xor
pop
insb
je
ret
aas
out
imul
ds
outsb
stos
dec
les
mov
out
pop
popa
sbb
push
pushf
ljmp
dec
sti
outsl
jno
xor
sbb
inc
outsb
imul
push
inc
push
or
cmp
inc
push
inc
shl
stc
mov
lds
in
je
seto
loope
adc
mov
mov
cmc
ljmp
hlt
sbb
lret
dec
fs
xchg
mov
xor
stc
push
cld
dec
in
jns
popf
pop
sub
idivb
jp
loope
lods
movsl
iret
sub
stos
xchg
pop
cmp
sbb
adc
mov
pop
mov
popf
repz
jge
push
pop
push
or
cmp
cmp
mov
mov
pop
push
or
dec
xor
add
mov
adc
mov
mov
test
std
fsubs
lods
mov
fnstcw
and
stos
std
popa
dec
divb
mov
iret
call
clc
imul
cmc
popa
orb
sbb
in
jae
mov
xchg
xchg
cwtl
add
adc
xchg
push
cld
ja
xchg
outsl
call
scas
jmp
xchg
cmp
cld
pop
or
notb
cmp
hlt
jns
cmpsl
repnz
or
gs
and
mov
fs
stc
movsb
andl
pushf
clc
or
xor
out
jae
loopne
in
adc
dec
fcmovnb
and
dec
aam
out
dec
dec
inc
jo
mov
or
lea
sar
aas
pusha
inc
inc
mov
jmp
jg
mov
mov
xchg
add
sub
mull
and
enter
jle
gs
jbe
lock
imul
pop
dec
inc
inc
shl
arpl
imull
fidivl
add
sub
stc
mov
dec
cmpsl
sub
mov
pop
je
lret
hlt
bound
lahf
je
pop
sbb
dec
inc
push
inc
fdivrl
stos
mov
and
push
test
sbb
loopne
lods
jnp
mov
add
push
in
xchg
pushf
sub
ret
out
imul
popa
cmp
mov
xor
jno
inc
mov
and
sti
bnd
outsb
mov
mov
pop
popf
xchg
dec
lods
and
mov
roll
or
arpl
rclb
aam
mov
enter
xchg
push
mov
test
jo
mov
push
and
nop
xor
add
add
popa
push
pop
jmp
jle
js
aam
fs
jno
jle
add
pop
add
ljmp
or
xchg
cmpl
lahf
jns
scas
push
add
inc
dec
pusha
lock
and
imul
push
sub
mov
and
mov
and
jns
lods
lea
mov
aaa
lods
ja
push
or
push
mov
arpl
decl
loop
dec
addr16
and
insl
dec
fimull
jg
mov
ja
mov
fldcw
and
sbb
sub
aad
mov
cvtps2pi
stos
jg
sahf
jle
into
push
xchg
jg
imul
cmp
stos
fldenv
sub
cwtl
mov
lea
cwtl
into
fs
in
add
adc
pop
and
mov
cmp
mov
pop
sub
sbb
sti
loopne
or
push
adc
jo
scas
shll
imul
fistl
shl
in
add
sub
in
loopne
ds
sbb
or
xor
sbb
insl
popf
jecxz
les
xchg
cmp
inc
mov
dec
xor
cmc
jns
xchg
push
gs
sti
sbb
ret
xor
jge
push
mov
std
push
inc
cmp
fistps
roll
mov
lret
call
add
jle
pop
or
lcall
mov
insl
push
icebp
out
pop
sbb
daa
outsl
mov
push
add
xor
sbb
sub
cmp
std
lods
js
adcb
mov
insl
jmp
sub
outsb
out
mov
and
jmp
mov
ret
xor
lds
js
pushf
mov
pop
jb
ljmp
movsl
aaa
jbe
int3
mov
sub
enter
dec
icebp
dec
std
xchg
daa
in
xchg
pop
aam
fstp
pop
dec
xor
push
shrb
sub
mov
aam
fdivs
and
xchg
push
scas
aas
testb
pop
test
add
push
mov
and
jmp
bound
dec
jo
mov
sbb
iret
enter
addr16
inc
xor
adc
pop
rclb
testb
inc
xchg
mov
aad
out
fimull
pusha
push
loop
dec
mov
shrl
cmp
adc
cli
cwtl
push
xchg
mulb
js
ret
pushf
sub
xor
cmpsb
cmpsl
adcl
add
xchg
aaa
cli
mov
mov
jl
mov
xchg
fdiv
cltd
adc
jl
nop
pop
adc
lret
pop
into
dec
and
shld
push
xchg
jp
loop
sub
adc
jne
ret
frstor
loope
in
aam
mov
xchg
lcall
inc
enter
inc
lods
push
xor
xchg
mov
dec
scas
data16
push
repnz
push
daa
lcall
pop
mov
jbe
test
notb
mov
add
jnp
ljmp
sbb
mov
mov
in
pop
ljmp
mov
cmp
or
mov
mov
push
push
ss
xor
push
lods
repz
lods
xchg
test
xlat
scas
sbb
out
mov
mov
into
xor
cmp
les
mov
mov
stos
jns
push
out
xchg
ss
out
je
push
dec
movsb
pop
mov
loopne
fdivrl
xchg
push
ds
rolb
jae
mov
sbb
cmp
push
sahf
lods
shl
scas
ljmp
es
jnp
lea
adc
outsb
jg
loop
ret
xchg
ljmp
pop
mov
lcall
fidivl
cld
push
and
je
lahf
andb
xlat
into
and
xlat
mov
mov
inc
shl
call
push
fdivrs
adc
mov
sub
push
js
lret
inc
insl
push
cltd
in
mov
aam
movsb
test
pusha
push
jns
push
dec
imul
xchg
push
mov
dec
sbb
adc
pop
icebp
push
jne
xchg
mov
rorl
pop
mov
ret
mov
xor
inc
dec
or
sbb
rorb
cmp
movsl
mov
pop
loopne
mov
jns
pop
cmp
in
ljmp
or
ret
cli
jg
pushl
pop
cmove
xor
adc
bound
out
shl
jo
jne
test
mov
sahf
pop
jns
addl
mov
outsb
or
inc
jns
add
xor
aad
dec
mov
lret
mov
inc
addr16
cmp
jne
fs
dec
repnz
mov
loopne
mov
out
inc
dec
data16
add
leave
dec
aas
outsl
sub
in
sub
pop
hlt
outsl
xchg
xor
scas
ss
aam
test
mov
sub
adc
pop
test
imul
push
jbe
jno
lds
push
mov
jae
inc
push
push
adc
out
div
and
std
enter
test
pop
mov
push
scas
sbb
mov
mov
mov
aam
dec
xor
xlat
ljmp
insl
pushf
lds
pop
lods
imul
pop
xchg
push
or
in
arpl
adc
in
rol
loope
adc
enter
mov
jbe
xchg
adc
pop
push
cmpsb
outsb
enter
lea
push
mov
ret
lods
incb
pop
shl
mov
add
xchg
inc
mov
jle
cld
loope
pushf
adc
scas
inc
mov
dec
push
sti
sbb
adc
add
xor
movsl
clc
les
xor
mov
lods
lea
scas
je
xor
jo
or
pop
mov
mov
xchg
mov
push
negl
sbb
loop
movsb
xchg
stos
in
in
les
mov
mov
and
repnz
pop
inc
and
mov
jmp
jl
ljmp
and
jp
not
push
aam
inc
outsl
cmp
ret
push
mov
sbb
dec
das
pop
add
push
enter
and
pop
sub
sbb
dec
cmpsl
sbb
jmp
xor
in
dec
pop
lods
mov
push
aaa
fistpll
enter
stos
adc
jo
sbb
and
lds
sub
out
lret
cwtl
dec
jb
inc
ficoml
test
add
add
inc
incb
push
jecxz
arpl
cmp
add
pop
add
out
pop
insb
dec
pause
jp
out
push
aaa
fiaddl
push
adc
lods
cmpsl
jae
rol
mov
jo
jnp
pop
lods
pop
push
es
sbb
xor
mov
aaa
out
loopne
xchg
insl
insl
inc
xchg
sbb
lea
jecxz
inc
call
sarb
je
rolb
rorb
jb
js
js
mov
fisttpll
outsl
stc
pop
out
cmpsl
push
popf
sub
dec
scas
insl
dec
mov
and
cltd
inc
iret
mov
or
inc
cmc
scas
pusha
mov
and
lds
test
mov
cmp
mov
jno
jge
rorb
mov
xchg
out
mov
jp
fadds
mov
ret
rclb
scas
sub
test
clc
and
scas
sub
lcall
adc
or
fbstp
cmp
popa
mov
jmp
inc
mov
jo
lods
into
or
mov
jg
subb
and
data16
les
jge
cmpsb
sti
push
out
sub
test
mov
sbb
les
inc
push
xorl
jb
sarl
ret
jo
sar
cmp
lock
call
cmp
mov
or
cli
adc
fidivrl
adc
jbe
jae
dec
sbb
mov
imul
xchg
out
push
jmp
push
pushf
std
pop
inc
jae
inc
sub
testb
xlat
lods
lcall
out
inc
imull
loop
shl
movsl
sti
push
cmp
add
jbe
scas
mov
pop
fstl
shll
loop
scas
add
xlat
std
sub
or
lods
je
imul
scas
arpl
add
inc
pop
cwtl
xchg
cmp
adc
xor
orl
push
into
fidivrl
aaa
rcrl
xor
sub
cmp
out
mov
mov
inc
lock
lret
inc
loopne
icebp
adc
and
scas
push
cmp
inc
data16
and
ror
cmp
out
shlb
xorl
xchg
mov
cmp
pop
ret
lock
orb
adc
cmp
fimuls
fisttpll
dec
movsb
sbb
push
int
jne
lret
sbb
xchg
test
inc
jmp
js
xor
and
pop
mov
fldenv
mov
mov
cmpb
lods
cltd
les
sti
jae
ss
stc
or
jge
or
add
add
adc
sahf
jno
push
pushf
dec
and
data16
clc
mov
dec
inc
push
push
les
dec
jbe
jmp
cmp
push
popa
aam
repz
sub
repz
pop
or
jae
dec
xchg
js
xor
loop
aaa
iret
dec
dec
lock
jns
movb
jp
mov
addr16
and
cwtl
fdivs
sbb
js
filds
stos
and
subb
lcall
out
cmp
dec
outsl
leave
mov
mov
loope
push
adc
sub
out
lahf
mov
lahf
add
dec
loope
stc
adc
cs
rsqrtps
mov
int3
jmp
jle
clc
loope
jns
pop
ds
pop
hlt
xchg
dec
leave
push
mov
daa
lret
mov
jne
xchg
add
stos
push
insl
sub
jg
pusha
mov
mov
ds
or
call
leave
std
mov
jae
cmp
inc
and
mov
xor
pop
idivl
repz
fiadds
mov
pushf
roll
xlat
in
ja
clc
add
cli
int3
not
icebp
dec
stos
sub
movsb
dec
adc
push
cmp
popa
push
inc
adc
loop
sbb
popf
loopne
add
insb
dec
mov
or
and
and
ss
clc
pop
sbb
sbb
pop
dec
jb
and
mov
cli
test
push
cmp
dec
pop
aas
xchg
dec
in
xor
clc
ljmp
pop
lret
cs
fistpll
fmuls
adc
rcrb
inc
and
sub
in
pop
loopne
pop
dec
pop
out
add
clc
shl
xor
fbld
jbe
cmc
sahf
adc
gs
popa
add
mov
into
ret
test
cwtl
pop
jo
dec
negl
lea
rcll
inc
mov
mov
add
jae
add
jbe
in
jne
mov
or
push
mulb
or
js
int
add
cvtpi2ps
es
mov
jnp
push
push
aaa
nop
mov
cmp
hlt
xor
stc
jae
push
popf
cmp
dec
rcl
sbb
cmp
inc
stos
inc
cwtl
fs
jo
sbb
mov
or
xchg
add
mov
clc
dec
data16
in
rep
mov
cs
lret
or
dec
mov
xor
dec
pop
push
inc
mov
lods
movsl
dec
shlb
sahf
jo
dec
xor
xchg
incb
push
inc
movsl
xchg
imul
stos
or
popa
test
ficomps
mov
insb
inc
or
mov
and
adc
xor
cmp
sbb
fiadds
in
dec
xchg
call
adc
ljmp
pop
jbe
xor
push
mov
adc
into
aad
dec
out
lock
cmc
in
xor
pusha
jnp
jo
sub
mov
cmp
inc
or
lock
cmp
pop
vmread
hlt
test
dec
cwtl
stc
jecxz
mov
and
mov
mov
loope
cld
rep
aaa
add
pop
loop
rcrl
add
xor
push
mov
das
or
dec
jp
add
call
sub
pop
jns
js
leave
aaa
aas
pop
cwtl
pop
xchg
pop
mov
std
sahf
iret
jno
aam
movsl
dec
out
aad
fmul
pop
adc
and
imul
push
lock
mov
inc
inc
fnstsw
adc
jb
fdiv
iret
data16
lahf
xorb
add
out
adc
les
lret
cltd
and
cmp
jne
sbb
pop
test
in
mov
fisubl
add
pop
adc
and
in
loope
inc
enter
roll
lahf
sbb
scas
sets
mov
push
xor
lods
movsb
sub
sbb
push
mov
and
fbstp
add
adc
aas
pop
push
jb
stc
push
mov
add
pop
add
dec
adc
push
lods
xlat
inc
aas
xchg
inc
cmpsb
in
cmp
sbb
lret
and
pushf
mov
loop
rorb
in
daa
pop
cmp
pop
bound
push
pop
mov
movsl
jmp
xchg
xchg
cmp
in
loope
bound
mov
int
mov
jne
sub
mov
imul
ffreep
xchg
sbb
sub
mov
xchg
movsl
test
cmp
mov
shrb
sub
idivb
dec
shrb
sarl
es
lods
cwtl
stos
jne
pop
xor
imul
and
insl
lcall
jge
jmp
inc
dec
mov
sub
jno
xchg
lcall
ja
call
fidivl
mov
inc
in
stc
les
test
test
rol
push
sub
or
insb
mov
int
jno
and
int
sbb
pop
nop
daa
je
adc
imul
mov
aam
xchg
jg
push
incl
add
test
stc
mov
sahf
sub
sub
ret
mov
jns
leave
lret
xor
jnp
pop
dec
mov
mov
sub
jbe
and
adc
rol
int
stos
inc
movb
pushf
icebp
mov
pop
push
out
mov
inc
dec
bound
out
xchg
inc
pushf
cwtl
xchg
stos
push
mov
js
add
arpl
sub
stc
push
hlt
jb
mov
add
inc
push
je
pop
mov
push
mov
jp
mov
mov
jl
lret
rclb
xor
loopne
fdivrl
mov
in
xchg
rclb
int
mov
mov
fwait
push
or
lea
fstps
pushf
xor
xor
insb
mov
loop
xlat
xchg
pop
cs
pop
rolb
bound
push
gs
lret
push
add
and
cmp
push
fdivr
sbb
pop
sahf
jp
rcrl
jge
jecxz
lahf
out
push
sbb
test
jg
out
in
cs
ja
mov
in
js
mov
mov
cmc
mov
cmp
inc
mov
test
pop
adc
dec
sub
arpl
xchg
repz
xor
fidivrl
add
push
adc
sbb
inc
insl
divl
sub
nop
mov
aas
std
repnz
bound
ss
adc
out
and
repnz
test
pop
roll
push
lea
ficomps
pop
addb
push
adc
call
clc
mov
cmpsl
insl
ss
jle
pop
fisttps
mov
andb
xchg
push
add
lods
cmp
aam
cmpsl
cmp
sub
add
xor
add
mov
pusha
divl
push
enter
test
push
jns
stc
lds
add
mov
and
imul
in
sbb
jle
jno
and
push
lcall
inc
push
cmp
in
jle
sub
leave
mov
daa
loopne
mov
mov
adc
xchg
movb
pop
jb
outsb
ja
pushf
sub
add
mov
mov
cs
add
fstl
sbb
in
out
cs
scas
jbe
ret
imul
mov
int
mov
pop
call
test
sbb
adc
push
adc
out
and
decl
inc
inc
mov
in
xor
pop
leave
out
push
push
mov
pop
mov
adc
sub
cld
repnz
pop
repz
subb
in
fs
xchg
fwait
pushf
ret
jbe
lcall
test
sub
lods
fwait
sub
jbe
jmp
and
in
cmc
int
int3
repz
sub
mov
cmc
je
aas
fadd
lock
and
push
adc
stc
xlat
mov
mov
mov
xlat
sub
mov
inc
sbb
jge
push
gs
stos
cld
push
sbb
sub
and
mov
push
bound
mov
cmpsb
lcall
or
cmp
jns
lods
pop
movsl
cld
mov
mov
dec
jle
pop
mov
pushf
xlat
out
or
pop
cltd
push
jno
std
and
lret
jnp
loope
dec
and
xchg
aaa
lock
and
fs
ljmp
push
add
pop
dec
insb
les
dec
mov
dec
negb
xchg
mov
mov
aas
ljmp
call
fisubrl
and
xchg
jbe
jl
js
fiaddl
xchg
dec
addr16
jne
xchg
cmp
push
stos
pop
int3
jno
loope
jnp
pop
lds
out
arpl
inc
ja
fwait
cmp
jmp
adc
enter
test
and
out
pop
adc
jmp
pop
or
icebp
dec
or
inc
addr16
ror
call
in
arpl
loop
cltd
shlb
mov
dec
std
dec
jecxz
cmp
sti
out
cld
jle
pop
shll
out
in
jge
sbb
cmp
shlb
push
jbe
push
xchg
loopne
dec
data16
iret
frstor
adc
pop
je
mov
jl
ret
cmpsl
mov
sahf
jns
or
sahf
push
out
inc
fnstcw
and
dec
add
jbe
jl
inc
xlat
mov
les
jl
in
cmpsb
inc
xor
xor
daa
jnp
pop
mov
add
cltd
xor
inc
in
add
inc
ss
and
adc
mov
adc
out
sub
add
add
and
nop
sub
lods
add
rcrb
mov
jae
and
fisttps
imull
repnz
pop
hlt
pusha
and
pop
mov
sbb
lret
and
mov
or
inc
or
add
sbb
out
push
lods
mov
jg
sub
psllw
jmp
shll
add
push
mov
sahf
dec
lock
nop
pop
mov
fnsave
mov
and
std
bound
subl
push
cmp
les
icebp
jmp
arpl
inc
repnz
jle
dec
sahf
jb
pop
sbb
pop
xchg
push
sti
jecxz
pop
and
mov
scas
sub
xor
cli
shrb
xor
add
addl
add
add
lea
into
out
popf
adc
xchg
add
and
add
mov
push
sbb
push
outsl
jbe
jg
mov
lock
jg
xchg
inc
clc
fildll
push
mov
pop
sub
inc
adc
pop
out
imul
mov
idivl
out
jmp
lods
ret
popa
stc
sub
push
xor
cmp
jnp
cmp
mov
jp
dec
mov
lock
loope
dec
xchg
push
push
cmpsb
fwait
adcb
cmc
ja
push
inc
jmp
pop
add
push
jo
pop
mov
pop
fmul
shll
xchg
fisttps
mov
jne
sbb
repz
xchg
test
xchg
lahf
aaa
and
js
inc
mov
mov
pop
inc
add
push
sbbb
add
jb
lds
call
adc
ss
add
int
cmpl
call
sbb
pop
es
lock
movsb
xor
shl
es
push
mov
push
xor
dec
mov
mov
dec
xchg
popw
inc
pop
popa
std
add
test
mov
rclb
push
scas
ds
sub
add
in
jnp
aam
add
jno
cmp
and
jne
add
adc
in
jg
test
ja
cmp
mov
inc
in
dec
test
fsts
xor
xchg
or
outsl
mov
mov
xor
xor
pusha
pop
add
or
adc
lock
cmp
pop
cs
xchg
out
notb
jmp
adc
sub
add
arpl
incl
fdivl
pop
mov
sbb
gs
jmp
mov
dec
or
dec
xor
icebp
jp
mov
shrb
fsubrs
insl
or
out
leave
test
ret
out
add
insb
ja
test
into
xchg
push
push
bnd
push
jg
loope
pop
ret
aam
dec
xchg
add
hlt
pop
test
mov
and
add
out
sbb
sub
push
int
call
inc
adc
cmc
or
dec
test
pop
fs
inc
mov
dec
add
aas
outsl
loope
call
mov
cltd
lahf
lcall
jnp
jno
xor
pop
sub
stc
hlt
pop
stc
je
faddl
or
call
push
out
adc
mov
movsl
sbb
or
call
mov
fsubrs
and
mov
arpl
add
xchg
sbb
mov
pop
ja
mov
push
push
xchg
jo
in
dec
cld
aam
xor
stos
popa
mov
sub
pop
pop
sahf
mov
xor
jno
mov
sbb
jg
mov
or
es
dec
push
xlat
push
add
adc
mov
ss
and
cmp
mov
dec
fsubrl
pop
in
jbe
sub
push
test
and
dec
dec
inc
cmpsl
scas
shl
mov
mov
pop
test
mov
enter
jle
push
sbb
pop
js
andl
jno
jl
jge
cld
mov
xor
add
fnstcw
je
js
pop
cmp
xor
jmp
add
outsb
sahf
movsl
xor
in
clc
mov
dec
xchg
out
xchg
push
dec
call
pusha
pop
push
pop
jo
movsl
leave
mov
push
add
xchg
add
sub
ss
sbbb
mov
inc
xor
stc
sbb
dec
inc
cmc
adc
popa
enter
xchg
push
dec
stc
adc
sbb
fsubrs
jmp
mov
sbb
scas
gs
lods
xchg
setno
mov
int
mov
inc
jle
or
adc
cmp
inc
jge
sub
les
bound
jo
pushf
jp
filds
cwtl
bound
out
xchg
and
mov
cmp
in
push
xor
sub
adc
mov
jmp
sub
cmp
sbb
and
adc
lretw
push
imulb
leave
ret
mov
fsubrl
rorb
imul
cmpsb
xchg
or
fucomip
das
cld
and
in
adc
mov
das
insl
int
pop
leave
sbb
cltd
xor
sahf
dec
jae
sahf
mov
pushf
hlt
je
cli
or
call
sub
mov
int3
mov
sub
popa
outsb
jecxz
ja
repnz
inc
xor
js
push
ret
lahf
push
jp
and
mov
sub
add
mov
orl
dec
xchg
dec
and
mov
cmp
dec
add
cmpsl
test
fmul
stc
mov
mov
cli
mov
inc
andb
movsb
pop
xor
insl
aaa
dec
dec
pop
fbstp
dec
out
mov
push
in
gs
pop
xchg
pop
ret
cmp
mov
inc
adc
xchg
inc
mov
fistl
push
lea
roll
mov
daa
push
hlt
xor
clc
scas
cmp
cmp
adc
mov
fstp
es
xchg
push
je
out
aad
fiaddl
sub
xor
sbb
mov
in
sbb
outsb
imul
fldenv
aam
jecxz
xor
jmp
test
push
imul
repnz
mov
jae
ficoms
xchg
lds
dec
xchg
dec
jl
jg
mov
aas
dec
pop
jae
xchg
test
into
pop
xchg
cmp
xor
into
cld
into
outsl
loop
and
mov
jp
pop
pop
cwtl
mov
mov
push
xor
inc
sub
push
es
push
mov
sbb
mov
pushf
ss
sti
jle
cmp
in
xchg
icebp
sub
adc
push
add
imul
sub
push
pop
sbb
adc
push
icebp
mov
leave
push
in
aas
js,pn
jmp
sub
fsubs
decl
imul
rorb
jle
xchg
in
xor
jne
aas
and
xchg
inc
push
mov
mull
or
das
movsb
xchg
pop
inc
mov
push
mov
scas
adc
test
aaa
and
mov
mov
cmpl
call
xorb
fsubs
data16
cmp
adc
inc
adc
push
lds
leave
mov
psubusw
cs
das
push
inc
xchg
and
xchg
es
pop
aad
and
ss
and
ror
dec
mov
sub
std
aad
cs
je
jno
outsb
jmp
pop
lods
mov
mov
add
xchg
dec
jnp
sti
mov
ds
ret
pop
cltd
and
add
add
ret
adc
lock
jecxz
rolb
push
xchg
mov
test
scas
xchg
push
dec
xchg
cmpsb
mov
mov
nop
mov
jecxz
mov
test
idivb
mov
push
les
test
push
int3
xor
out
mov
push
push
sub
push
add
es
in
jge
adc
lret
out
fs
push
lds
ss
js
into
pop
xor
jae
dec
add
sub
repnz
call
dec
lods
inc
aam
daa
and
jmp
mov
popf
adc
rcl
test
add
xchg
adc
bound
loopne
outsl
loopne
inc
xor
popa
insb
mov
lcall
rolb
sub
mov
pop
jmp
inc
mov
pop
out
lcall
cs
jge
loopne
insl
and
mov
fcomip
jp
fdiv
jno
sub
addr16
jl
mov
or
mov
push
mov
mov
xchg
jne
lret
gs
repz
sti
mov
mulb
adc
mov
fsubp
in
cwtl
arpl
sbb
inc
mov
jnp
gs
in
xor
sti
into
test
adc
dec
icebp
sbb
mov
push
pusha
mov
push
push
mov
push
mov
and
idivl
mov
jg
test
and
mov
xor
jp
stos
cmp
xchg
dec
negl
out
cmpsl
or
movsl
xor
sub
data16
sub
mov
and
pop
jb
xchg
cs
cmp
xchg
fiaddl
lods
push
push
and
test
mov
filds
ret
xchg
fimuls
rcll
popf
loope
jge
sbb
or
push
xchg
out
adc
cmp
sbbl
and
jne
popa
pusha
loope
cmc
pop
mov
pop
xor
aaa
or
mov
outsb
mov
lods
sub
pusha
stos
aas
pushl
loopne
sbb
push
arpl
loope
leave
and
hlt
mov
popa
xchg
sub
in
pop
push
xorb
aad
push
push
dec
fucomi
gs
or
imul
jbe
pop
call
inc
repnz
nop
add
and
dec
adc
xchg
aaa
inc
add
aam
lods
scas
sub
xor
mov
jb
xor
sub
fldenv
mov
inc
sbb
daa
outsl
divl
mov
jecxz
sbb
mov
push
sbb
push
out
nop
lods
outsl
fsubrp
roll
dec
push
icebp
inc
daa
jle
mov
aaa
ss
je
sub
mov
pop
popa
fcompl
jmp
out
adc
adc
rcl
adc
inc
movsl
cmpsl
cwtl
cmp
je
js
adc
push
jp
mov
mov
aaa
pop
sti
mov
sub
jl
jns
mov
xchg
hlt
movsl
in
mov
cld
lods
fs
pop
push
cmpb
sbb
dec
fisttps
xrelease
enter
push
push
mov
ret
lret
sbb
addb
aas
enter
out
add
sub
jae
outsb
pop
pop
cmpsb
adc
divl
xor
repnz
jnp
fdivs
lea
bound
push
stos
push
xlat
mov
mov
push
xchg
push
lds
jne
je
xor
mov
das
add
cs
test
mov
test
call
jmp
rcll
pop
pop
rcrl
jno
jae
test
nop
lret
dec
imul
imul
mov
and
das
ja
daa
sub
push
fldl
in
mov
mov
into
mov
dec
jae
dec
add
sub
xchg
mov
and
mov
mov
hlt
push
sub
mov
iret
pop
clts
js
mov
pop
movl
dec
push
cwtl
sbb
sbb
push
dec
in
pop
cmpsl
imul
addl
cs
xor
mov
add
add
jg
outsl
sub
pushl
sbb
cwtl
ret
jecxz
es
outsb
jae
dec
enter
bound
mov
mov
xchg
bound
out
sub
xor
fidivl
xor
out
cmpsl
or
jl
mull
fwait
jle
aam
fadds
repz
push
adc
cwtl
adc
fdivrl
imul
hlt
loopne
sub
aas
rcl
adc
pusha
inc
je
test
faddl
inc
clc
cmp
hlt
popa
jl
ja
fdivs
sbb
adcb
and
fdivs
sbb
cld
mov
cs
and
push
jns
ret
adc
push
and
jne
dec
cmp
add
xchg
ja
addr16
insb
mov
inc
mov
mov
push
ret
shl
outsb
std
xchg
lods
lods
lret
inc
xlat
popa
jb
jl
cltd
pop
shlb
adc
adc
movsb
js
jb
cmc
ficompl
push
mov
clc
cmp
insl
pop
cmp
ja
mov
push
mov
xor
add
mov
jge
cwtl
or
jmp
mov
into
push
and
jp
in
or
dec
mov
xlat
cmp
stos
movsb
outsl
cmpsl
in
xor
add
xchg
dec
mov
faddp
mov
dec
lods
dec
test
ficoms
inc
sarl
sbb
mov
ja
std
dec
test
aas
out
je
pop
adcb
push
test
pop
subb
imul
loope
cs
jl
dec
jmp
aam
add
lret
pop
mov
sbb
jl
mov
lock
dec
mov
clc
popf
lcall
dec
cmp
sub
clc
add
add
out
inc
sahf
xchg
mov
mov
sti
pop
sbb
adc
orl
xchg
clc
jno
xor
or
outsl
popf
sub
pop
jo
insl
int3
inc
push
in
shll
mov
mov
and
std
or
mov
imulb
shlb
mov
in
loop
lods
cmp
jecxz
roll
ds
jecxz
arpl
ja
mov
add
pop
int
mov
out
stos
aam
pop
inc
mov
pop
push
jnp
cmpsb
xchg
in
sbb
stos
add
mov
jp
frstor
mov
adc
push
out
mov
sbb
icebp
scas
fstps
add
add
adc
mov
cli
cmp
mov
clc
ficoml
inc
mov
add
sub
mov
xchg
and
test
loopne
mov
sub
pop
scas
adc
adc
pop
inc
jbe
imul
je
test
aam
int
es
pop
lret
mov
fs
addl
push
daa
ret
cli
fisubrl
arpl
sub
inc
std
fucomi
fisubrl
push
popf
movsb
and
sbb
iret
dec
shll
in
pop
cmp
adc
add
add
push
and
aam
cmp
pop
adc
popf
stos
push
cmp
pop
xchg
mulps
cli
xchg
inc
cmp
ret
inc
jmp
or
popa
fisubrs
dec
repnz
or
inc
cmp
dec
sbb
lahf
loop
lret
rorl
cmc
std
push
jnp
adc
push
sub
stos
movsl
fdiv
cwtl
cwtl
push
sub
mov
add
cld
mov
jg
inc
mov
movl
jb
cmp
push
test
sub
imulb
or
or
jge
cltd
adc
popl
sub
adc
sbb
cli
mov
nop
sbb
mov
xchg
daa
jp
subb
int
cmc
scas
push
fcoms
imul
dec
inc
mov
push
mov
test
repnz
xchg
push
int3
dec
add
mov
mov
aas
or
xor
shll
add
sub
sub
cwtl
sub
sub
mov
add
sub
arpl
imul
rcll
cmp
stc
enter
out
xchg
mov
mov
add
out
lahf
pusha
or
jmp
jne
cmc
pop
std
into
aad
push
dec
mov
pusha
fs
imul
xlat
pop
shrb
aad
add
push
mov
repnz
loop
fistl
mov
jae
mov
mov
loope
imul
outsl
mov
imul
add
aaa
loopne
es
xor
nop
xchg
out
inc
xchg
or
popf
pop
iret
add
mov
hlt
neg
xor
out
test
js
adc
or
sbb
or
add
push
push
bound
js
lds
leave
or
lods
decl
and
adc
jb
xchg
fsubrs
mov
loope
aad
add
fstp
adc
clc
cwtl
hlt
mov
leave
mov
imul
addb
leave
sti
pop
test
into
jae
jp
ret
xchg
jmp
out
dec
inc
movsb
xor
cmp
jl
and
stos
jae
cs
fsts
andnps
mov
push
filds
or
mov
into
shll
push
lock
negl
pop
out
push
sbb
pushf
sti
cltd
xchg
loop
in
adc
or
add
movsl
stos
and
pop
int
mov
cmp
outsb
xchg
jb
mov
dec
xchg
dec
pop
arpl
mov
xor
loop
js
push
out
xchg
adc
or
xor
mov
clc
push
jno
popa
dec
push
daa
int3
xor
pop
adc
loopne
rorb
jb
cmp
add
mov
inc
imul
repz
mov
into
mov
or
ljmp
icebp
clc
jno
dec
mov
getsec
mov
adcl
push
out
sbb
pop
int
and
sbb
jno
and
jb
mov
movsl
push
pusha
es
and
pop
sub
shrb
jbe
data16
out
adc
outsb
inc
icebp
ds
mulb
xlat
adc
mov
mov
in
fldcw
mov
and
or
pop
adc
loopne
push
hlt
lock
pop
enter
adc
dec
jg
cmp
mov
ret
add
mov
lcall
int
dec
cmpsl
clc
mov
js
push
lcall
lret
imul
repnz
loopne
jl
jno
test
jns
xchg
fsubr
push
loope
jne
cmp
add
out
sarl
inc
or
mov
fidivs
sub
jp
push
push
in
aam
jmp
das
mov
aaa
inc
aaa
adc
int3
and
das
fisubl
cli
lods
test
outsl
inc
jno
cmpsb
cmp
cmp
aam
nop
and
pop
sub
xchg
jge
and
ss
call
lret
addr16
adc
sub
push
iret
icebp
lret
mov
pop
sti
sbb
inc
out
dec
rep
arpl
mov
mov
push
dec
sbb
test
cli
cwtl
bnd
insb
pop
in
sbb
mov
xchg
hlt
lea
fnstsw
add
mov
sub
loope
loope
jmp
push
out
ret
mov
mov
pop
push
push
dec
dec
pop
inc
rolb
xchg
mov
xor
movb
ret
xchg
add
fdivl
pop
idiv
ljmp
loope
bound
sbb
pushf
xlat
push
jp
jmp
dec
xor
mov
fwait
cs
lds
mov
jb
inc
aad
lret
pushf
jnp
mov
lock
mov
jb
sub
pop
jle
push
add
adc
loope
pop
push
cmp
cmp
std
or
out
aas
push
sbb
xor
sbb
es
cmpl
cmpsb
mov
jmp
jge
lcall
pop
push
adcl
xor
xchg
jne
dec
jle
gs
cmp
push
repz
sub
in
loop
mov
xlat
mov
pop
add
mov
mov
or
sub
xchg
sbb
mov
cmpsl
into
nop
fstl
clc
add
sbb
sub
arpl
movsl
and
or
mov
mov
dec
lds
out
jns
dec
push
lcall
jae
stos
std
popf
ficoml
sub
sub
test
stos
push
mov
mov
pop
out
push
xor
ret
jns
scas
std
sub
inc
repnz
arpl
cs
ret
push
stos
sub
repz
aam
adc
aad
std
bnd
lods
fadd
dec
mov
out
mov
std
scas
call
xor
test
or
pop
mov
ficomps
shl
movsb
int
fcomps
inc
pop
mov
mov
rol
mov
mov
pop
popf
dec
add
add
add
push
add
ja
xchg
popf
mov
push
push
pop
add
sbb
imul
stos
ret
mov
xchg
pop
xchg
push
dec
fs
cmp
ja
fists
rcl
sahf
test
ja
std
xorl
sbb
dec
shr
or
cmc
fwait
mov
in
stos
lods
mov
das
inc
push
test
push
cmc
inc
test
stos
pop
popa
test
into
and
enter
outsl
dec
and
repnz
mov
pop
push
stos
push
adc
dec
stos
fisttps
xchg
clc
jns
inc
mov
xchg
jbe
jns
sbb
push
ds
add
addl
push
shlb
cld
add
inc
shrw
rol
pop
push
and
daa
adc
mov
dec
jle
in
adc
cmp
mov
pop
sbb
sahf
hlt
cmp
xchg
push
popf
lret
data16
test
sbb
push
into
out
push
movsl
jmp
mov
sbb
out
sbb
mov
jg
frstor
cld
hlt
adcl
aas
cmp
pushf
adc
and
in
or
jge
adc
push
push
sarb
sti
sbb
test
and
hlt
in
hlt
shll
jne
dec
xor
mov
jecxz
orb
pop
lds
xchg
outsl
inc
push
adc
mov
aad
hlt
mov
outsl
test
sbb
jne
and
imul
jmp
sub
push
cmp
push
sbb
lods
dec
aas
sbb
ja
inc
xlat
ret
mov
ret
xor
add
test
in
lods
dec
imul
lea
insl
test
rcrl
movsb
fdivs
lahf
xor
or
or
xor
mov
or
mov
or
rcrb
je
or
cmc
ror
cmp
shlb
mov
pop
enter
gs
test
dec
mov
adc
dec
in
in
jmp
pop
xchg
aad
sahf
dec
add
popa
mov
dec
add
int
push
inc
sbb
loope
fnsave
pop
std
out
movsb
ja
inc
lods
aam
jo
add
adc
push
in
mov
ss
fnsave
cmp
mov
repz
adc
pop
jne
push
push
out
sbb
sub
dec
jg
fmul
hlt
push
dec
nop
test
sub
sbb
outsb
std
out
sbb
adc
in
test
mov
in
sahf
ss
aas
mov
aad
iret
push
daa
mov
int3
ljmp
mov
sbb
pop
lea
loop
sub
pop
icebp
lcall
add
and
sahf
and
jns
fsts
icebp
loop
mov
movb
out
xor
xchg
cmp
cmp
jne
cli
jnp
inc
loop
fildll
sti
push
pop
fucomi
mov
jbe
xchg
aaa
add
scas
mov
or
outsb
cmp
push
stos
enter
xchg
stos
sbb
call
dec
add
sbb
cmpsl
pop
ret
mov
inc
out
test
aad
push
out
push
mov
cmc
mov
push
and
imul
movsb
in
inc
ljmp
insb
icebp
aad
and
sarb
and
jbe
cmp
pop
xchg
cmpsb
pop
rorb
dec
mov
cs
inc
mov
cmc
mov
popa
dec
cld
flds
cmp
adc
pop
cmpsl
inc
or
or
stos
cwtl
and
inc
xchg
cwtl
mov
mov
insl
shl
int3
insb
adc
mov
and
fisubrs
pushf
sub
mov
xor
mov
lods
test
push
stc
jb
in
cwtl
inc
mov
jg
xor
mov
jno
mov
pcmpeqb
ja
adc
adc
lods
rorl
push
jle
andb
daa
outsb
repnz
fisttps
fbstp
icebp
mov
arpl
andb
popf
fimull
and
cmpsl
sub
fcmovnb
xor
xlat
adc
fs
out
or
addr16
ja
fsubl
repz
jae
dec
imul
into
out
pop
imul
xchg
lret
sbbl
dec
mov
in
mov
ret
jnp
lahf
and
lock
bound
xchg
in
mov
add
call
pushf
mov
mov
sub
rorb
jnp
in
sub
loop
les
adc
outsl
movsb
into
dec
stos
jno
push
cmp
pushf
icebp
loop
adc
cwtl
leave
or
aaa
cmp
cwtl
cmpsb
xchg
lret
cltd
ret
inc
sti
and
pop
dec
fldenv
outsb
xor
pavgb
jo
push
inc
jno
insb
sub
fldl
repnz
pop
jbe
int
sbb
fisubs
inc
in
xchg
mov
scas
xorb
mov
xor
push
xor
scas
bound
cli
cmp
aas
lcall
push
adc
inc
cmp
cmp
ja
call
xor
pop
pmulhuw
sbb
arpl
xor
add
shlb
push
mov
clc
rclb
ret
add
hlt
add
loop
ja
aad
push
push
pusha
and
repnz
adc
or
push
mov
fcom
mov
xchg
xor
lahf
xchg
xchg
dec
dec
mov
jns
inc
mov
std
jns
fmul
pop
sbb
or
sub
xchg
add
push
enter
push
sbb
fstpt
lods
repz
sub
adc
scas
pop
push
sub
sub
ret
sub
add
add
sbb
jmp
pop
xchg
insb
fwait
mov
not
push
xchg
xorl
mov
leave
adc
push
mov
ja
lea
or
inc
ds
adc
fisubrs
xor
pop
push
inc
pop
cld
lret
xchg
adc
push
clc
hlt
push
test
out
jge
mov
xchg
xlat
adc
fs
inc
lock
and
push
sbb
pop
sti
mov
adc
push
cmp
sarb
divl
popl
dec
mov
inc
shlb
sbb
jmp
std
fcomp
daa
test
xor
or
sub
jne
xor
jmp
mov
dec
sub
in
mov
add
add
sahf
fidivrl
add
fldcw
add
and
add
push
sarl
call
or
stos
push
movsb
mov
dec
mov
lcall
leave
and
add
jb
mov
aas
call
cmpsl
push
dec
out
pop
cltd
adc
sahf
call
mov
lods
std
insl
sbb
pop
jbe
sti
add
mov
xchg
cmp
sbbl
and
add
xchg
out
lcall
fadds
movsl
xlat
xchg
pop
es
inc
addr16
cmpsb
pop
jle
jbe
jle
mov
fsubrp
mov
adc
xchg
pop
outsb
xor
inc
dec
xchg
int
or
notl
sub
pop
mov
inc
adc
test
mov
fcoml
sub
pop
push
mov
daa
mov
rcr
or
jb
dec
jns
adc
jg
pop
and
addr16
fisubrs
test
mov
cmp
inc
test
fstpl
add
pop
and
lods
sbb
out
mov
jp
fwait
jno
je
pop
push
xchg
outsl
cmp
pop
lret
rcrb
adc
test
mov
les
pop
push
sti
push
faddl
jnp
mov
jp
sub
sub
dec
xchg
push
or
inc
jmp
popf
and
test
gs
inc
mov
aam
les
test
fistps
push
int
mov
pusha
cmp
pop
cmp
pop
movsl
cld
and
ja
lock
insl
mov
mov
cltd
fbstp
leave
int3
test
repz
sub
fidivs
faddp
dec
addr16
cld
je
mov
jmp
cmp
push
pop
fmull
xor
lcall
pop
mov
push
pop
les
push
fucomip
insl
lock
icebp
jmp
push
mov
xor
sar
popf
hlt
mov
lods
mov
push
jo
xchg
loop
pop
jno
pop
pop
mov
lahf
in
movsl
cmp
dec
xor
or
movnti
in
fdivl
popa
std
pop
out
mov
nop
arpl
into
pusha
fcomi
enter
sub
ret
lds
mov
or
or
insl
jge
or
out
and
dec
sar
fdiv
jle
add
sbb
push
and
fidivrl
xor
lods
xchg
sahf
xchg
xor
mov
outsl
mov
divb
ja
scas
cmp
or
inc
xor
xor
and
xchg
jo
xchg
xchg
in
cmp
jmp
push
scas
lret
and
pop
mov
fisubs
push
jecxz
jge
xchg
adc
adc
inc
test
icebp
jmp
adc
add
addb
pop
xchg
inc
fisubl
xor
aam
jno
mov
push
scas
sbb
sbb
fstl
nop
pushl
or
pop
jecxz
push
jl
jb
mov
mov
pop
mov
xor
scas
out
pop
sbb
lock
xor
adcb
gs
js
inc
test
inc
jb
fidivrs
xchg
dec
and
mov
insb
in
and
push
jae
hlt
aaa
sahf
sub
movsb
inc
or
cli
jb
and
mov
xor
insl
xor
jmp
mov
mov
fisttpll
rcrl
xchg
push
jae
and
inc
or
fwait
loopne
lret
mov
scas
in
inc
push
pop
sbb
pop
into
xchg
or
push
and
out
jge
xchg
xchg
pop
lea
dec
stc
push
shrl
xchg
inc
pushf
stc
lods
hlt
jge
sub
xor
dec
xor
sbb
pop
data16
daa
je
in
ret
int
push
in
sbb
cmc
push
outsl
sub
mov
inc
test
mov
and
cli
jnp
jns
data16
int3
fbstp
xor
fwait
js
mov
mov
mov
addr16
cmpb
adc
rorl
mov
jmp
add
mov
jl
ficomps
stos
mov
test
and
add
iret
dec
insb
mov
rclb
mov
popf
adc
sub
es
int3
xor
rclb
stos
scas
ret
sub
xchg
push
sub
jo
add
fstpl
push
push
shr
xchg
repz
mov
fdivs
lret
dec
mov
jns
mov
xchg
push
jbe
or
ja
jo
pop
and
adc
ret
icebp
xor
subl
jecxz
popa
clc
into
mov
lock
add
sub
test
add
push
sar
lods
mov
call
push
push
mov
cltd
lret
jnp
gs
and
mov
std
sarl
enter
adc
xor
sub
ljmp
and
cmp
movsb
aam
insb
or
sub
loop
ljmp
testb
sub
outsl
int
shl
enter
in
popf
or
stos
mov
jo
roll
pushf
and
addr16
test
pusha
push
mov
in
stos
inc
xchg
jno
ljmp
pop
cs
push
cmp
fisubs
dec
dec
enter
cmp
addl
cli
loop
mov
add
movsb
jb
and
lock
jp
xchg
jecxz
xor
insl
addr16
in
sarl
cmp
xchg
aaa
mov
add
sub
aas
dec
push
add
mov
divl
xchg
mov
or
lds
xor
cld
lods
cmp
jae
in
js
adc
add
jg
dec
inc
lds
pop
dec
cmp
mov
loopne
mov
aad
sahf
sahf
mov
clc
insl
mov
js
cmp
mov
jno
icebp
cmp
jbe
dec
rcll
sbb
cmp
out
call
jg
push
invd
xchg
mull
add
sbb
lret
sbb
ds
mov
and
dec
sbb
mov
paddd
add
cmpsl
pop
jl
dec
mov
mov
lock
pop
cltd
sbb
mov
out
dec
aas
cld
and
addr16
clc
das
repnz
cmpb
push
rolb
or
xchg
gs
pop
sbb
xor
ja
sahf
je
pop
sbb
push
mov
in
divps
xchg
inc
inc
xor
or
lods
scas
push
rcrl
in
lret
bound
cmc
lock
jbe
mov
clc
xchg
inc
repz
nop
mov
jp
jmp
cmp
ret
cmp
nop
lea
out
aaa
add
add
add
mov
sahf
and
imul
scas
mov
add
pop
add
loope
movsl
sbb
ja
mov
fidivs
jne
scas
cmp
notb
pop
sbb
push
add
dec
jmp
cmp
outsl
xor
sub
jp
cli
insb
jbe
das
sub
sub
or
or
cmp
mov
sub
mov
jge
xor
lods
iret
rcll
movsl
sbbl
add
std
pop
rcrb
cli
cmp
stos
xchg
or
rcl
fwait
push
or
or
fiaddl
sub
int3
cli
les
lods
dec
mov
adc
movsl
addr16
rcrb
xorl
add
jmp
enter
lods
sbb
cmp
dec
loope
mov
inc
scas
or
gs
xchg
mov
fidivrl
test
rolw
ret
mov
add
push
jbe
fistl
mov
ds
dec
xchg
mov
loop
in
fwait
mov
mov
mov
or
xchg
out
fdivrl
mulb
decb
xchg
lahf
ret
push
loopne
in
adc
pop
popf
jo
test
adc
std
cltd
inc
andl
aam
push
dec
push
movsl
repnz
add
or
fdivl
pop
ss
push
insl
je
jo
push
xlat
xor
jb
jno
push
into
lret
ljmp
ficoms
inc
js
fisubs
sub
jno
out
lods
cmpb
dec
std
cs
pop
out
inc
cmp
jne
pop
mov
dec
das
enter
in
subl
rcll
fucomp
outsb
and
js
loope
movsb
fidivrl
es
dec
out
mov
inc
pop
iret
pop
test
outsb
mov
dec
and
mov
pop
and
testb
mov
push
mov
pop
pop
mov
fwait
into
sahf
jecxz
mov
sbb
or
inc
pop
push
push
xchg
pop
adc
test
ret
aas
arpl
mov
adc
bound
in
cli
pop
das
pop
sub
adc
add
test
mov
mov
fld
fwait
inc
scas
jmp
jmp
pop
jb
xor
dec
cli
add
in
test
rcr
mov
stos
jmp
js
jp
xchg
sbbb
inc
mov
mov
dec
and
jecxz
stc
mov
inc
mov
shrl
icebp
dec
out
cmp
jo
jb
out
call
cmpsl
inc
iret
rclb
mov
cltd
je
jne
flds
ret
and
andb
mov
cltd
sub
jge
mov
xchg
stc
or
out
jbe
and
adc
inc
jle
out
ret
sbb
pop
fistps
bound
jb
mov
mov
mov
adc
mov
clc
ds
cmc
setne
ja
psrld
xchg
jp
rcl
xor
lods
or
or
test
and
pushl
clc
sbb
fsubrp
cwtl
aam
stos
mov
inc
ret
inc
imul
mov
pop
fiaddl
mov
call
loop
sbb
dec
sbb
in
ret
gs
and
cld
cli
push
repz
inc
les
ret
sbb
in
ss
out
shll
mov
push
aas
ret
push
test
cmpsl
lock
lods
cmpsb
fsubl
xlat
addr16
stos
xor
clc
mov
fldcw
data16
cmp
outsb
cmp
repnz
scas
lock
data16
call
pushf
jg
mov
xlat
dec
jmp
bound
cmp
xchg
jne
push
inc
xlat
mov
aas
std
push
fwait
xor
sbb
inc
outsb
mov
mov
push
mov
lahf
loopne
repnz
adcb
push
leave
leave
out
shl
inc
sub
or
dec
or
dec
inc
add
lahf
cs
jb
pushl
pop
leave
jl
clc
out
scas
aad
pop
insb
dec
sarl
inc
pushf
leave
pop
movaps
cmp
xor
pop
jae
pop
imul
pusha
int3
jb
hlt
dec
call
lods
es
cmp
in
add
pusha
out
mov
push
and
mov
sbb
pop
mov
pop
test
sahf
mul
or
push
and
fcmovbe
mov
dec
out
data16
fcomps
inc
stos
out
sbb
jp
loope
pushf
lods
cli
in
inc
cwtl
orb
les
sti
push
fisubl
pop
jne
or
xor
scas
test
sbbb
or
hlt
test
sbb
popa
in
xchg
pop
jle
es
mov
mov
mov
sbb
push
xlat
mov
mov
mov
inc
sub
cmc
mov
xchg
shlb
xor
ret
std
ret
mov
mov
shlb
add
add
mov
lret
out
movsb
in
test
mov
adc
mov
ljmp
leave
loope
mov
and
das
inc
out
push
iret
and
inc
mov
push
sarb
mov
pop
jmp
xchg
lods
loop
adc
jecxz
popa
in
jne
icebp
aam
push
and
sub
push
mov
inc
cmp
or
cmc
push
push
pmulhuw
or
adc
jne
xchg
push
lret
adc
pushl
or
shrb
testl
ror
int3
and
cmp
jne
fisttps
lea
xor
addr16
cwtl
or
pop
push
push
sahf
xor
xor
inc
pop
in
pop
cmc
aaa
xchg
mov
movsb
sub
cmpsb
sbb
push
jecxz
imul
daa
icebp
fstpt
mov
push
pop
and
dec
stc
mov
mov
lds
jb
push
lret
js
out
sti
xchg
sbb
stos
fdivs
hlt
jae
in
mov
ljmp
adc
jmp
mov
push
sbb
mov
jg
pop
push
jg
fadds
mov
scas
stc
fisttpll
pop
test
dec
jmp
xor
aaa
jecxz
jmp
lcall
dec
xchg
subb
cmp
inc
inc
or
negl
and
add
xchg
sbb
and
das
arpl
mov
sub
add
add
stc
out
inc
std
fidivrs
movsb
dec
scas
xor
inc
sarl
add
cmp
stos
roll
jo
sbb
jns
xor
bound
inc
xchg
jo
inc
aam
fnstsw
xchg
js
sti
cmpsb
inc
sub
mov
insb
fs
cmp
inc
lods
add
bnd
decl
daa
lcall
ss
pusha
dec
and
shrl
push
jno
push
pop
and
adc
roll
stc
jp
pop
lods
dec
movsb
pop
sbb
mov
shlb
sbb
insb
mov
cmp
out
stos
dec
insl
jmp
mov
xchg
lods
jns
jne
test
pop
jl
and
insl
out
testl
pushf
das
mov
dec
xor
ja
mov
jbe
push
cmp
movsb
pushw
dec
fs
or
jno
roll
jne
cmc
mov
aaa
hlt
push
adc
mov
push
sbb
xchg
cmp
mov
inc
mov
test
jno
lea
daa
enter
add
adc
jecxz
mov
pop
or
testb
sbb
mov
lcall
jns
xor
clc
in
add
mov
jnp
lcall
cwtl
loop
mov
inc
jbe
out
xlat
std
jno
sub
arpl
adcb
stos
fcomp
xor
setne
jb
dec
cmp
gs
test
fmulp
jg
insl
adc
jmp
cmp
repnz
fiadds
pushf
xlat
push
gs
lret
push
and
add
in
xorb
mov
or
stc
enter
xchg
repz
mov
pop
les
std
adc
scas
sub
xor
mov
sbb
shrb
lods
fsub
rcl
or
fs
jbe
cmp
mov
mov
adc
les
iret
ljmp
jb
jns
jge
call
push
outsb
jle
fcomps
mov
int3
cmc
test
adc
add
or
mov
jns
cltd
xchg
ds
cmp
shrb
xchg
ret
add
lcall
push
mov
or
jo
add
stc
or
decl
pop
xchg
mov
mov
cltd
imull
push
mov
dec
xchg
push
jnp
cwtl
aas
sub
cmp
pop
xchg
pop
adc
inc
mov
inc
imul
icebp
inc
xor
out
notl
insl
call
mov
pop
scas
cltd
sbb
push
sub
sub
sarl
pop
pop
push
test
dec
cmp
or
in
addr16
in
mov
mov
aas
stos
sub
sahf
sbb
jp
add
test
daa
dec
pop
lea
jne
push
sub
arpl
cmp
inc
cmp
nop
ljmp
or
or
mov
inc
and
add
dec
inc
xor
adc
imul
cmc
mov
lock
push
mov
scas
inc
stos
mov
std
mov
pop
pop
jns
es
inc
or
test
bound
lcall
rorb
imul
stc
mulb
jae
sbbb
addr16
pop
outsb
andb
sbb
xchg
adc
mov
psrld
pop
sub
xchg
clc
pop
xchg
sbb
inc
and
int
clc
or
mov
jl
fadd
fisubs
pushw
jo
pusha
call
push
aad
inc
mov
lahf
cmp
stos
loopne
mov
outsb
push
getsec
add
inc
sub
andps
xchg
outsb
mov
in
ds
pop
jno
lock
add
cmp
out
dec
mov
inc
addr16
dec
cmp
adc
mov
imul
enter
cmp
test
push
sbb
mov
dec
cmpsl
xor
icebp
test
pop
negl
mov
adc
cmp
dec
mov
xchg
mov
or
cmp
and
mov
nop/reserved
mov
mov
xor
les
push
adc
add
not
daa
sub
xor
mov
add
les
pushf
pop
adc
and
ja
dec
rorl
lds
ljmp
push
adc
push
sbb
clc
aam
inc
lods
pushf
in
xor
sbb
sbb
add
ss
sbb
sahf
jecxz
inc
dec
div
push
push
outsl
loopne
shl
sub
imul
mov
xchg
mov
push
shlb
in
lods
mov
cmp
jle
adc
aam
xor
push
add
xchg
in
adc
jns
jmp
sub
push
jns
loope
adc
sbb
or
mov
push
das
int3
movsl
repz
loope
xor
idiv
sub
mov
dec
jo
push
enter
xchg
jle
adc
sbb
push
jge
out
loope
sbb
fldl
mov
xor
cmp
inc
mov
sub
icebp
lret
mov
divl
adc
mov
scas
mov
and
mov
xor
sbbl
leave
sub
mov
jne
or
mov
cmc
pop
repnz
pop
call
pop
repz
dec
jecxz
or
cmp
bound
push
add
sub
cli
jmp
cltd
sti
scas
push
sbb
cmpsb
push
lock
xor
mov
fadd
or
lahf
ljmp
rcrb
dec
adc
aas
mov
negl
arpl
xor
rcrb
in
cmp
mov
js
dec
bnd
push
rorl
push
cwtl
lahf
mov
lret
pop
or
repz
ja
insl
ss
mov
cld
cmp
sbb
sbbb
out
sub
negl
mov
cmc
in
addr16
in
mov
pop
push
ficoml
inc
mov
lea
push
call
push
jbe
fistps
push
add
xchg
ficoml
in
sbb
cwtl
push
cli
mov
mov
push
sahf
xor
or
sbb
pop
lret
jb
pop
xchg
neg
test
imul
xchg
mov
pop
fs
dec
ss
mov
dec
sahf
cmp
mov
pop
and
dec
sbb
fcmovb
jo
test
std
xlat
push
out
test
mov
xor
jecxz
jmp
repz
mov
mov
xor
cwtl
pop
test
add
add
mov
in
idiv
jg
and
adc
lds
add
pop
add
js
add
sub
flds
sub
pop
mov
sbb
push
sub
mov
lods
mov
and
mov
stc
idiv
jo
mov
jae
push
repz
loop
or
xor
add
inc
lcall
test
sub
test
mov
lret
repnz
xchg
jl
fs
push
xchg
inc
mov
jp
sar
xchg
mov
push
sub
jnp
or
mov
movsl
jmp
mov
bound
sub
rcll
lret
cld
mov
cmp
mov
shlb
dec
sarl
popf
xor
clc
jns
and
mov
movsl
push
pushf
jno
popa
in
cmpl
inc
xchg
xor
fcom
cmpsb
xor
dec
lds
in
fldcw
ljmp
movsl
outsb
xorb
sbbb
int
popa
loope
stos
jae
mov
mov
lret
addb
cld
pop
cmp
push
lds
adc
dec
mov
jge
icebp
int
mov
jns
xor
mov
ja
lcall
xchg
lods
cmp
xchg
ficompl
or
mov
or
sbb
adc
dec
cltd
enter
adc
imul
inc
mov
push
dec
xchg
add
sbb
pusha
insb
dec
pop
int3
pop
add
pop
pop
pop
mov
or
cwtl
lret
gs
out
pop
out
fcompp
ror
mov
adc
cmp
shrb
daa
bound
mov
and
xchg
push
adc
out
out
aad
int3
push
cmpsb
movb
loope
loopne
jle
in
aam
pop
into
sbb
pop
push
jle
shll
dec
je
jle
dec
mov
dec
add
inc
and
ficoml
aaa
popa
lret
push
push
jp
jmp
outsb
inc
push
lods
sub
cmp
inc
enter
or
dec
outsl
jmp
imulb
add
mov
adc
cli
out
outsb
and
fstpt
fnstcw
inc
stos
popa
cltd
cmp
sub
xchg
add
sbb
adc
xchg
das
and
jns
sbb
dec
mov
mov
mov
inc
lret
push
mov
imul
push
popa
test
adc
jb
cmpsb
cmpsb
mov
testb
push
mov
or
call
aad
mov
mov
call
shrl
out
adc
clc
adc
jno
and
jnp
adc
add
rorb
sub
mov
xchg
int
aaa
push
test
mov
cmpl
inc
xchg
mov
psllq
jp
aaa
insb
inc
push
cmp
fcoms
imul
mov
loop
movsb
push
inc
pop
clc
mov
fdivrl
repnz
lcall
ja
fistpll
ljmp
aaa
sub
jp
clc
repnz
mov
imul
pusha
cmp
enter
and
mov
xchg
cwtl
hlt
es
jl
fimull
loopne
jne
mov
dec
mov
test
decb
and
inc
inc
jb
and
dec
jl
loop
push
jecxz
mov
cmpsb
in
and
dec
or
lcallw
push
sub
ds
icebp
cmp
mov
xchg
pop
cs
rcll
push
inc
cmc
js
mov
lods
push
mov
pop
repnz
mul
in
cli
dec
fwait
mov
scas
mov
das
lea
mov
cli
test
mov
cmp
jb
cmc
in
fisttps
arpl
jge
lea
lock
inc
int3
cs
add
cmp
xchg
fbld
sbb
stc
push
pop
clc
rorb
sub
rcrl
mov
mov
jno
pop
push
neg
stos
addl
aaa
add
jle
out
adc
xor
xor
icebp
adc
fidivrs
cmpsb
cmp
or
fidivrl
pop
push
sub
pop
lds
mov
cmp
mov
cmp
and
pop
mov
push
adc
scas
cs
int3
sub
jnp
flds
mov
insb
nop
pop
aas
dec
lods
ficoml
les
mov
popf
pop
dec
sub
popf
sbb
stc
cmc
pop
dec
mov
ljmp
mov
mov
dec
inc
dec
repnz
mov
adc
fcoml
mov
adc
scas
lret
mov
repz
es
sub
xchg
ficoms
mov
mov
cmp
enter
push
mov
shlb
stos
push
sti
int
jle
adc
xor
or
push
out
loope
rorb
icebp
pop
sbb
push
inc
jae
inc
inc
sarl
jb
pop
rorb
xchg
mov
out
testl
mov
js
mov
scas
sbb
xchg
repnz
mov
mov
sub
iret
addr16
jp
imulb
cs
cmovns
push
leave
fwait
adc
andl
fcomps
or
mov
in
fstl
or
les
add
mov
in
inc
adc
stos
sbb
push
lock
mov
adc
pop
lea
mov
and
loope
mov
jae
mov
repz
xchg
lcall
icebp
repnz
bound
test
out
and
mul
mov
jne
outsb
or
sub
or
cmpsl
test
pop
cmp
imul
in
fildl
out
dec
adc
push
xlat
adcl
add
jns,pt
lcall
mov
add
xor
repz
movsl
jg
and
and
in
pop
sbb
in
inc
dec
or
sbb
iret
sub
xor
jg
sahf
ss
xchg
arpl
test
mov
stos
inc
fiaddl
decl
lcall
mov
sbb
cltd
jno
mov
pop
cs
pop
mov
popa
xchg
fisttpl
pop
bnd
inc
ret
lcall
leave
push
repnz
in
inc
jle
push
xor
imul
push
es
or
pop
dec
cwtl
sub
pop
xlat
cmc
add
add
add
in
and
aas
fcomip
out
or
push
ret
add
and
add
push
xor
cld
fdivp
xor
push
jmp
add
sub
mov
js
push
popa
pop
repnz
inc
mov
ds
dec
sbb
cmp
adc
pop
fwait
ja
ret
dec
and
cmc
cmpsl
xchg
push
mov
mov
pop
sarb
negb
imul
jnp
cmp
jl
roll
and
cmp
in
or
pop
sub
push
mov
out
inc
stos
scas
jbe
sbb
pop
dec
std
push
xor
jbe
pop
shr
add
mov
pop
test
movsl
dec
pop
jle
mov
or
jp
mov
push
fcomps
fstpt
jp
push
sub
mov
pop
jle
mov
out
add
pop
scas
movsl
lods
sub
insb
sahf
jg
and
sarb
not
repnz
xor
cwtl
loope
jno
loop
push
push
xchg
mov
lock
inc
clc
stos
add
cld
add
or
popf
test
ds
in
lret
stos
sub
imul
jp
fcompl
loopne
adc
push
mov
push
sti
and
negl
and
add
cmp
jecxz
mov
push
mov
inc
aam
pusha
cltd
or
add
and
sub
js
mov
sbb
cltd
push
scas
push
xor
mov
fnstsw
cwtl
add
movsl
push
xlat
jmp
out
imul
int
cwtl
and
pop
xor
sbb
cmpsb
scas
sti
push
xor
cld
xchg
mov
stos
fcoml
dec
decb
hlt
das
or
data16
je
call
in
lods
std
xor
add
icebp
cmpsl
adc
mov
pushl
aas
push
xchg
in
sub
scas
test
jl,pt
outsb
pop
inc
mov
adc
fcompl
fisttpl
xchg
shlb
int3
ss
sub
jl
loop
inc
and
push
outsb
or
mov
jae
cmpsl
pop
in
pop
jb
dec
inc
test
and
add
xchg
je
aam
mov
and
mov
and
lock
cltd
shr
std
add
lock
mov
in
in
sbb
test
pop
enter
and
push
mov
loope
lods
aam
leave
and
cld
outsl
mov
inc
outsl
pop
cmp
scas
in
jp
mov
sbb
test
icebp
push
pusha
int3
push
cmpsl
and
dec
rorb
mov
cli
int3
or
gs
sbb
add
fstpl
iret
pushf
dec
loopne
ret
and
icebp
sub
scas
sbb
std
es
mov
ret
int
xchg
cs
push
gs
fs
js
xchg
imul
mov
cmp
or
nop
adc
loop
or
adc
lods
jge
mov
test
jmp
xor
cli
sbb
sub
cmp
mov
mov
jae
pop
xchg
mov
movsl
popf
xchg
pusha
jmp
daa
mov
mov
cwtl
cmp
cmpsl
fildll
cmp
xchg
movsb
xchg
push
loope
lret
mov
push
and
inc
sbb
lods
adc
div
stc
dec
push
addr16
dec
cld
push
lret
mov
out
fldcw
dec
aas
or
push
xor
fcompl
mov
or
fs
jns
repnz
fcomip
push
adc
cmpsl
adc
and
repnz
or
incb
jle
inc
fwait
mov
fadds
cmp
imul
popf
dec
mov
outsl
push
pop
or
scas
pop
fstps
vmread
sub
or
inc
loopne
insl
test
dec
leave
outsb
push
into
enter
push
dec
cs
or
insb
insb
inc
jge
dec
sti
stc
cmp
test
pushaw
add
stos
sub
mov
aam
add
pop
jp
incb
aad
dec
bound
daa
jl
xchg
and
sbb
add
pusha
push
and
mov
sub
loop
inc
xchg
lcall
fstps
xor
jle
xchg
xchg
cmp
cmpsl
daa
jecxz
fisttpl
cmp
aas
fadds
cmc
mov
ret
jge
icebp
xor
clc
jo
sbb
fucomip
aas
cmp
aad
repz
enter
mov
sub
inc
pusha
dec
mov
pop
or
pop
fwait
stos
adc
push
sub
mov
stos
nop
pop
cmp
mov
scas
cs
test
aam
ret
ret
mov
shl
shll
rcr
pop
bound
jo
pop
sub
lret
xchg
sbb
shlb
push
mov
stos
xlat
adc
cs
sbb
sahf
and
lahf
pop
in
out
lods
jns
xor
jnp
and
ds
leave
fidivs
icebp
aad
sub
xchg
xchg
mov
fwait
out
dec
rcr
mov
xor
call
mov
and
enter
das
add
cmp
dec
cld
lret
cmpsb
pushf
iret
sbb
fdivrp
dec
mov
xor
pop
cmp
pop
fldcw
push
pop
pop
insb
inc
cmpsb
xchg
js
xor
push
sbb
in
pop
test
ja
ss
jo
mov
aaa
fnstenv
cmp
inc
and
movsl
sbb
jno
push
out
mov
and
xchg
dec
xor
movsl
jp
data16
pusha
add
test
imulb
ss
les
xor
fists
xchg
lods
cmp
inc
int
data16
and
das
sbbb
mov
pop
sbb
stos
inc
popf
inc
and
sbb
int3
test
in
and
mov
push
int3
pusha
imul
mov
sahf
pop
push
inc
mov
xor
xor
into
bound
shll
push
shrl
adc
sarl
push
imul
mov
xor
push
jo
aad
mov
pop
imul
dec
xor
iret
popa
rorb
bound
dec
push
in
and
cmp
sub
insb
add
fs
aad
pop
stos
ficomps
in
inc
cmc
pop
pop
rcrb
push
add
or
insl
cmpsb
mov
push
mov
xchg
shrb
fiaddl
lods
pop
adc
call
ret
das
scas
iret
adc
dec
mov
mov
loope
dec
inc
sarl
add
push
ja
daa
inc
call
inc
cmp
add
and
add
lods
inc
aam
jae
shl
nop
pop
and
cmp
fidivl
cmp
in
es
jge
mov
jecxz
xchg
or
cmp
cmp
push
cmp
jge
fcmovbe
pop
mov
and
arpl
movsb
mov
sub
fs
cmpsb
int
cmpsb
hlt
mov
fcomps
or
jl
xlat
test
mov
mov
pop
in
cmpl
lds
les
xchg
lahf
dec
cli
dec
pop
rcrb
mov
call
pop
xchg
mov
sbb
xor
mov
sbb
lods
call
dec
jns
aas
or
inc
ret
flds
pop
sbb
push
xlat
iret
loope
mov
inc
repnz
ret
adc
cli
add
test
fstpl
fimuls
xchg
mov
or
pushf
mov
orb
pop
mov
loopne
jbe
int
inc
jno
adc
adc
mov
mov
sub
loop
inc
pop
enter
movsl
loopne
inc
pop
roll
aam
add
pop
bound
jecxz
sub
sbb
xor
fucomi
divl
mov
je
xchg
jb
pushf
fisttps
xorb
pop
mov
mov
pop
testb
dec
aas
or
jnp
xor
pop
inc
ds
jmp
mov
enter
iret
adc
es
sub
cmp
and
inc
xor
loope
jg,pt
lods
ss
into
mov
or
cmp
pushf
sub
lock
mov
or
incl
rcl
call
pop
scas
stos
das
cmp
mov
push
pop
sarl
ret
fwait
push
sahf
mov
movsl
push
dec
test
inc
mov
push
shl
sub
mov
mov
pop
push
xor
out
xor
aam
lret
dec
arpl
enter
int
je
imul
and
std
push
lods
ljmp
es
xor
hlt
add
xchg
inc
pusha
jmp
pop
clc
repz
inc
test
daa
mov
xchg
mov
pop
loopne
jp
inc
in
int3
xchg
call
icebp
in
test
add
mov
jnp
and
jnp
xchg
push
ja
aad
cld
add
jo
mov
pop
inc
std
jl
xchg
mov
inc
add
lods
dec
push
or
cli
push
jno
stc
fmul
outsl
into
pop
xchg
aad
pop
ficomps
cmp
xor
pusha
dec
mov
xchg
in
rcrl
cmpb
mov
xor
xchg
adc
lods
negb
repz
cmp
jg
cli
es
aad
mov
fadds
repnz
push
adc
dec
sub
add
cmp
add
in
cli
cmp
sbb
xor
lahf
xchg
push
or
cmp
jecxz
push
inc
sub
xchg
or
mov
mov
xor
mov
add
sahf
xor
rclb
push
test
mov
pushf
stos
push
fsts
mov
xchg
dec
xchg
push
and
cli
mov
sub
data16
mov
cmp
stos
fdivp
popf
cmp
push
ja
das
sbb
ds
loop
and
add
mov
xor
pop
loopne
cmp
mov
jns
pop
addl
push
pop
push
jb
inc
jmp
stos
rclb
pop
lods
outsb
adc
adc
dec
pop
std
push
mov
sub
imul
inc
or
mov
push
fdivs
jb
cmp
or
xor
outsl
lret
je
and
fildll
je
aas
loopne
cmp
cmpsb
dec
xor
enter
push
adc
cmp
push
inc
dec
mov
mov
mulb
jnp
push
inc
rorl
in
test
mov
out
adc
shrb
add
and
xor
mov
mov
xor
push
jl
ficoms
lods
push
mov
jge
fcmovnb
push
and
lcall
adc
out
mov
fistpl
cmc
imul
cmove
mov
nop
mov
movsl
loopne
stc
addr16
jbe
fistpl
or
mov
loop
ja
shl
xchg
insl
aas
stos
cmpsb
or
push
jmp
les
mov
mov
xor
push
stos
sbb
js
sbb
xlat
repz
adc
pop
lock
xor
in
pop
lret
shlb
out
insb
pop
jns
xchg
inc
sti
movsl
cmp
je
pushf
and
mov
jle
fidivrs
jne
fcmovbe
nop
sbb
pop
adc
adc
xchg
add
pop
cmc
mov
fbstp
scas
dec
rcrl
dec
mov
or
aaa
adc
lods
int
mov
cwtl
jp
and
inc
mov
push
cmp
sbb
fildll
push
sbb
repnz
hlt
cmpsb
push
fiaddl
or
shll
out
mov
bound
pop
pop
mov
cmp
les
pop
adc
sub
cmp
test
mov
pop
jo
enter
push
imul
jp
mov
ret
and
test
pop
ret
dec
jae
stos
femms
neg
xchg
inc
in
mov
jae
movsb
jne
hlt
xor
icebp
cli
pop
sbb
lods
mov
fcompl
mov
cmp
into
adc
andl
sbb
movsb
dec
out
mov
cmc
jnp
movsb
lea
in
xor
sub
mov
pop
xor
mov
outsb
gs
add
shll
xor
repnz
mov
sub
mov
fidivs
sub
mov
and
xor
inc
sbb
xchg
in
pop
outsb
outsb
lret
adc
xor
pop
xor
sbb
cwtl
pop
dec
sarb
push
cmp
enter
jb
das
fnsave
mov
insl
dec
sti
popa
mov
or
lods
stos
stc
std
ljmp
xor
loop
mov
mov
fdiv
jl
in
xor
jecxz
fists
dec
or
or
mov
loope
repnz
jge
pop
pop
mov
mov
push
clc
stc
cwtl
mov
xchg
psrld
test
jp
out
andl
sti
add
add
add
pop
mov
pop
es
cld
xor
fildl
add
pop
add
xor
in
movsb
or
mov
pop
stos
outsb
mov
adc
out
cltd
dec
cli
mov
or
movsl
inc
mov
hlt
mov
pop
iret
imul
scas
stos
jmp
push
ret
nop
add
xchg
inc
lcall
sub
dec
dec
movl
out
inc
mov
adc
sub
mov
outsb
add
add
mov
xchg
inc
in
mov
es
stc
mov
out
sti
je
fidivrl
pop
cmp
jne
popa
pop
rcl
fsubs
sub
lcall
aam
imul
faddl
andb
dec
std
pushf
add
stc
cmpsb
fbstp
xchg
add
adc
iret
jns
sbb
jne
stos
popf
mov
lcall
push
dec
hlt
push
sti
and
and
aad
adc
inc
cmpsl
push
xor
push
std
jl
jecxz
roll
jno
inc
dec
lds
gs
test
movsl
adc
mov
sub
mov
dec
jp
xchg
mov
sbb
mov
fidivrs
dec
iret
mov
lock
dec
popf
out
mov
cmp
mov
mov
add
jnp
sarl
pop
fwait
in
mov
mov
rorb
xor
ficoml
int3
sbb
orb
jnp
sbb
push
inc
testl
add
jle
std
outsb
or
imul
pusha
pushf
fcomps
and
mov
imul
clc
aaa
insl
sbb
jmp
mov
jecxz
ljmp
das
rcrb
mov
ja
outsb
scas
lods
in
and
push
test
ret
push
pop
xchg
pop
mov
test
mov
lock
pop
in
in
pop
imul
mov
nop
stos
add
movsb
jmp
push
inc
add
cs
push
cs
inc
push
lcall
mov
dec
ja
add
adc
out
mov
jge
jae
rol
add
push
sti
loopne
das
mov
and
sbb
js
add
jg
add
out
inc
sub
and
push
sub
dec
and
ja
scas
inc
and
fstpt
xor
stos
stc
cmpsb
push
movsl
jne
sarb
cmp
or
pop
mov
or
mov
pushf
lds
jnp
hlt
inc
push
mov
inc
or
cld
aas
or
jo
xchg
pusha
mov
push
stc
jae
stc
mov
shrl
jb
mov
fwait
mov
jp
jns
push
inc
je
dec
orl
int
sub
in
mov
mov
sbb
mov
enter
jecxz
out
test
pushf
repnz
pop
int
lret
imul
jb
lret
xor
sbb
imul
push
push
repz
or
push
pop
adc
dec
std
add
loope
das
setno
adc
xchg
cwtl
int
stos
test
test
xchg
mov
sub
loop
cmp
and
repz
pop
sbb
inc
jle
jmp
pop
sbb
test
aaa
pop
arpl
sti
dec
jl
pop
xchg
push
lods
ret
imul
roll
jp
test
mov
or
imulb
cmp
lea
lds
inc
xor
enter
push
pop
adc
sub
dec
mov
pop
cmp
fsubs
fidivrl
pop
js
add
push
iret
fsubr
xor
mov
xor
cli
mov
in
ret
mov
gs
add
xorb
orl
or
push
je
jecxz
cwtl
inc
lret
jecxz
cwtl
inc
repnz
repnz
sub
daa
test
bound
and
mov
ja
xchg
out
sar
test
sti
xchg
xor
rorl
out
or
imul
sbb
push
ja
test
pop
mov
test
mov
mov
clc
dec
test
adcl
orl
sub
cmp
shlb
mov
lcall
enter
pop
mov
sbb
mov
notb
ret
and
jb
mov
push
sub
sti
dec
iret
rcr
jb
inc
inc
cmpsb
mov
imul
or
adc
int3
imul
xor
and
sbb
add
cmp
ds
push
or
jg
cld
sbb
sbb
jne
das
movsb
les
ds
in
mov
ficoml
xchg
sbb
xor
mov
pop
int
jl
pop
dec
add
das
xchg
xchg
addr16
mov
dec
mov
sbb
cwtl
xchg
mov
movsb
shl
xchg
lds
mov
cmc
and
cmpsb
mov
push
and
sub
imul
sbb
xor
loope
adc
pop
ss
cmp
shll
test
int3
out
xor
dec
icebp
mov
jecxz
sub
pop
pop
call
pop
mov
or
fstpl
push
sbb
into
out
aaa
push
cs
jnp
repz
int
addr16
shrb
jg
sbb
js
fucom
mov
sub
and
fists
imul
ljmp
jb
cmp
xchg
scas
mov
pushf
add
mov
loopnew
pusha
dec
mov
sti
sti
popa
cmp
fcompl
in
mov
mov
dec
fcoms
fidivrs
dec
ret
xlat
fs
pop
lods
xor
int3
mov
popa
movsb
roll
ror
movsl
pop
mov
and
push
call
dec
rclb
scas
lock
inc
cmp
inc
gs
mov
mov
xchg
xor
push
in
mov
aaa
sbbb
inc
xchg
jno
mov
jle
ror
sbb
add
push
std
pop
push
jmp
push
adc
and
adc
xchg
mov
dec
out
outsl
pop
cli
dec
or
cmc
int3
int3
lds
insl
in
mov
add
call
sbb
gs
ficoml
testl
jmp
cmpsb
out
pushl
rcrb
les
add
sbb
cli
push
xchg
test
dec
repnz
xor
iret
orl
and
and
aad
in
and
jp
imul
add
add
add
pop
mov
cmp
outsb
jne
loop
add
pop
add
lret
in
les
or
sbb
pop
sub
and
pop
jg
les
adc
insb
jmp
mov
inc
lods
jne
pushf
jnp
pop
push
sti
mov
movsb
push
fsubr
stos
sub
mov
add
das
push
jecxz
fwait
mov
ret
pop
mov
jnp
cltd
xchg
push
mov
mov
pop
sub
daa
insb
xchg
jg
mov
loop
pop
jmp
mov
mov
ss
mov
ss
andb
add
sub
inc
jmpw
inc
xchg
cld
clc
dec
aam
push
lahf
cmp
cli
push
cld
cs
push
adc
inc
mov
ret
xchg
mov
cmp
push
add
call
inc
or
outsl
xor
in
leave
jbe
push
stc
imulb
cmpsl
les
push
in
orl
ret
or
int
scas
fisubl
shr
jge
push
fisubrs
je
xchg
inc
push
pop
sbbl
leave
push
jp
ret
outsl
movsb
repz
pop
xor
push
data16
jo
movsl
inc
in
or
fimull
pop
test
sbb
shrb
rcrl
or
hlt
cmc
pop
aas
out
in
imul
test
jno
mov
lods
mov
inc
push
aad
sarb
or
cmp
stos
rol
fldl
dec
insl
jns
adc
pinsrw
or
imull
xor
and
jmp
jns
jbe
jo
fstps
jmp
push
lret
notb
xchg
mov
push
rep
add
bound
fdivrl
stos
pop
fisubrs
mov
cmc
push
cmp
mov
jns
clc
js
sub
adc
lahf
mov
xchg
dec
adc
xchg
pop
insb
lcall
mov
or
stos
iret
fldenv
popa
lds
imul
dec
test
mov
jl
xor
int
mov
inc
out
sbb
mov
imul
sbb
jno
aad
sub
and
push
pop
mov
imul
ljmp
fsubrl
cmc
int3
in
rcl
xor
push
cmp
fsubrl
mov
and
cli
pop
js
cwtl
ja
cli
aam
sbb
xchg
push
ds
cmpsl
jge
in
mov
sbb
dec
jns
movsb
xor
insb
pop
inc
scas
xchg
mov
insb
iret
in
sbb
cmp
mov
xchg
ret
adc
cmpsb
test
cmpsb
xchg
mul
popa
aam
xchg
jae
push
adc
sub
xor
dec
or
push
repz
cli
outsb
sbb
cwtl
fstps
inc
mov
ljmp
cwtl
data16
or
dec
xorl
mov
pop
fdivl
add
icebp
dec
inc
cmp
lea
pop
jmp
mov
mov
cmp
fists
fwait
sbb
movsb
xchg
mov
js
add
xlat
inc
loope
ljmp
iret
aam
pop
mov
cmp
rcr
xchg
or
sbb
repz
adc
imul
xor
daa
mov
mov
push
and
aad
stc
sahf
hlt
jnp
cmp
nop
dec
stos
lods
mov
mov
push
loop
dec
insl
leave
sti
jecxz
sahf
es
cmp
std
leave
sub
cs
cs
mov
fsubrs
cmc
add
daa
pop
inc
mov
loope
or
popa
fldt
push
test
mov
rcr
imul
lods
and
das
xchg
cmp
cmpl
mov
mov
jae
sub
sarl
push
sbb
xor
add
xchg
shll
ljmp
jo
dec
dec
lcall
das
ficompl
mov
ja
mov
cld
mov
and
jecxz
jmp
loop
movsl
test
test
sub
and
mov
lock
push
jg
popa
loopne
adc
xchg
push
xor
pop
imull
push
xorb
jo
pop
mov
sbb
or
mov
rolb
xor
push
mov
in
roll
subl
sbb
fnstcw
fs
fiaddl
xchg
in
fsub
bnd
or
popa
enter
push
fcompl
jo
sub
arpl
cld
fucom
mov
dec
and
or
ds
outsb
roll
notb
sar
mov
rolb
inc
push
pop
push
movsb
sti
aas
repnz
loop
filds
addl
lea
jnp
aam
imul
in
and
cmp
xor
fistps
loop
loop
adc
xor
fcmovnb
xlat
mov
xchg
notl
lods
popa
sbb
les
fsubrs
bswap
sahf
wbinvd
mov
push
out
cwtl
mov
in
ret
push
call
daa
iret
inc
pop
push
ret
lock
stc
mov
xor
lds
movl
in
sbb
jnp
cltd
lahf
out
sub
fistl
mov
fs
fstl
lds
adc
loopne
mov
pop
xor
or
push
pop
fisubrl
cmp
fldenv
pop
pushf
and
pop
out
addr16
xchg
sbbb
pusha
test
lds
xadd
pop
std
add
cmpsl
sbb
pushw
and
push
lret
test
dec
test
movsb
push
sub
sbb
pop
or
mov
enter
shl
cli
int3
dec
push
jle
sub
mov
dec
cmpl
loopne
jno
les
dec
adc
add
aas
push
out
test
mov
test
and
pop
add
xchg
mov
cmp
rclb
stos
bound
jo
xor
pop
push
lods
or
iret
pop
adc
leave
push
pushf
dec
imul
and
xor
pop
add
pop
xchg
imul
xor
inc
pop
in
jcxz
inc
aad
sbb
stos
mov
faddl
js
pusha
insb
xor
push
inc
mov
out
pop
mov
fsubl
aam
sub
mov
cmp
leave
xchg
aam
sub
or
faddp
loope,pn
pop
int
push
lret
sti
inc
lock
int3
mov
cmp
push
mov
jno
mov
daa
mov
inc
imul
cmp
xor
sahf
jp
xchg
lcall
cltd
adc
orl
sub
and
push
push
xchg
inc
xchg
add
loopne
mov
aas
stos
in
mov
jmp
add
ret
add
xchg
add
xor
ret
pop
sub
push
mov
bnd
ss
jle
imul
aam
in
push
mov
mov
les
ret
sarb
rcr
cs
or
cli
mov
or
aad
aam
in
xor
jae
lds
mov
or
inc
adc
pop
push
shrb
fcmovnb
stos
ret
pop
ret
sbb
cli
ret
ret
insb
adc
xchg
mov
insb
lahf
enter
shlb
xchg
mov
cmc
cmpsb
cli
mov
jl
aaa
pusha
sub
jnp
sub
pop
lcall
cmc
shrb
dec
lret
scas
jmp
hlt
xlat
lret
jns
xchg
scas
push
fwait
inc
xor
push
sbb
add
les
shll
fdivrl
jmp
mov
or
mov
roll
stos
sub
rcr
or
inc
and
shlb
xor
inc
and
mov
daa
fs
mov
add
jbe
loope,pt
and
js
fucom
sbb
jmp
ja
repnz
mov
aaa
xchg
push
xchg
cmp
je
mov
ret
scas
adc
scas
push
fdivl
ja
pop
leave
fcmovnbe
or
mov
jl
mov
pop
rcrl
in
pop
lods
push
fwait
dec
push
addl
add
add
arpl
ret
rcrb
or
sub
push
cmp
les
cmpb
cmp
orl
in
sub
add
mov
mov
push
data16
stos
push
movsb
int
lret
or
pop
sbbb
or
inc
push
ficoms
pop
xor
mov
jnp
sahf
es
out
cmp
aad
xchg
test
push
push
in
rcrl
fmuls
pop
push
daa
jno
cld
sbb
adc
clc
popf
ret
pop
mov
or
lcall
cmp
xchg
push
sub
mov
enter
xor
xchg
std
sbb
cmc
pop
sarb
fnstsw
mov
scas
js
stos
mov
sub
in
repnz
test
mov
mov
setae
mov
xorl
mov
lea
xor
sahf
psubusw
hlt
pop
sbb
repz
jb
imul
repz
loope
ss
cli
push
mov
sbb
dec
aad
push
mov
cmp
ret
cmp
pop
push
stos
and
adc
das
cmp
dec
movsb
jbe
jae
ljmp
test
popf
in
add
outsl
scas
ret
daa
fsts
mov
rorb
cmp
or
icebp
lods
push
js
imull
in
sar
aam
insb
push
leave
mov
push
ss
mov
sub
push
shr
scas
mov
dec
mov
fstl
mov
xchg
test
push
pushf
in
inc
lods
pop
adc
out
test
inc
and
fdivrl
add
mov
aad
cmpsl
dec
mov
mov
sbb
dec
and
fcoml
sar
fwait
sbb
lcall
stos
jecxz
adc
xorb
popa
adc
addr16
fistl
les
dec
cmp
rolb
mov
mov
xor
inc
xchg
xchg
int3
cmp
cmp
mov
jb
shr
lods
adc
fisubs
sub
ss
ficomps
mov
popf
scas
mov
adc
scas
mov
arpl
jne
dec
inc
inc
mov
lcall
jbe
repz
bnd
jle
out
cmpb
jne
cli
xchg
repz
and
inc
xchg
repz
push
mov
and
scas
decl
outsl
orb
lahf
push
xor
cmpsl
es
pop
movsb
int
xchg
in
push
add
jecxz
stos
add
inc
pop
dec
inc
loop
lds
pop
test
inc
mov
mov
ljmp
push
dec
add
pop
or
xchg
mov
test
xor
inc
xor
lods
or
dec
mov
call
popf
inc
insl
clc
jbe
inc
cmp
out
push
xor
jge
mov
arpl
add
push
pushf
fidivrs
inc
and
in
mov
or
push
test
push
sbb
mov
stos
in
adc
int3
bsr
add
cli
call
push
adc
ljmp
mov
push
cmp
and
push
add
pop
sub
and
dec
mov
repnz
pop
popf
pop
xor
and
mov
inc
call
in
push
sub
sbb
aaa
push
mov
cmc
sub
dec
fmuls
cmpsl
or
cld
dec
add
pop
mov
mov
and
xor
jmp
aad
jae
xchg
push
cltd
mov
and
ret
scas
cmc
jmp
xor
mov
jge
ret
adc
imul
hlt
add
xchg
popf
or
dec
in
xor
jp
cmpsl
inc
xorl
divb
pop
std
pop
cmp
sub
mov
adc
daa
lret
aaa
xchg
xor
cwtl
adc
clc
dec
sbb
mov
inc
jns
lret
jle
insb
scas
cs
ja
fnstsw
dec
sahf
fildll
lea
scas
enter
mov
mov
add
inc
pop
xchg
aam
sbb
fadd
imul
push
and
and
repnz
pop
mov
insl
sbb
icebp
mov
cmp
mov
ljmp
xor
lret
out
cmpsb
inc
mov
mov
and
push
and
popa
add
adc
and
xorb
cmp
adcl
out
cmp
aam
shll
mov
add
mov
int
mov
fsubl
inc
imul
xor
int
lods
adc
cwtl
cmp
movsl
mull
jno
sub
mov
test
mov
in
movsl
lfs
push
mov
cmpsl
push
dec
mov
popf
arpl
pushf
sub
pop
movsl
cld
adc
aam
push
and
rol
std
dec
fnstsw
push
ficoms
fsubp
arpl
lret
sub
iret
gs
add
add
add
rclb
aad
adc
pusha
xchg
sub
lock
and
add
test
push
xchg
scas
pop
bound
add
xchg
jecxz
fnsave
jp
xchg
pusha
ja
xor
or
inc
or
push
jge
inc
xor
cmp
lods
sti
sub
loopne
or
jb
dec
inc
add
clc
inc
sbb
cmp
add
sbb
xchg
insb
lahf
add
cmp
adc
inc
inc
lock
lret
inc
jl
pushf
jg
cmp
xchg
out
and
mov
in
das
mov
xorl
jae
mov
or
push
dec
xchg
inc
repz
in
mov
daa
sbb
jnp
adc
fcoms
xchg
clc
fimuls
mov
ret
cli
sbb
fdivrs
sub
sbb
sti
pop
pop
cmp
mov
in
dec
shl
jp
mov
call
xor
push
sub
xor
push
ljmp
js
cwtl
clc
fidivrs
jl
cld
ret
mov
repnz
push
xchg
adc
testb
in
or
lea
notb
lret
dec
sbbb
mov
dec
cmp
popa
push
scas
jle
filds
push
add
pushf
movsl
push
addr16
fistpll
loope
aad
mov
pop
scas
loopne
imul
into
push
dec
push
lahf
jg
cmp
insb
pop
xor
cmpsl
cmp
jno
fldt
push
ljmp
add
or
jmp
jecxz
mov
loope
xlat
jmp
ds
add
fdivp
push
xchg
lea
cwtl
jmp
add
mov
insb
insb
inc
mov
add
adc
jae
cmpsl
scas
and
popf
pop
jmp
xor
xchg
pop
push
cmp
int3
mov
aas
cli
mov
test
test
add
icebp
jne
and
jnp
cmpsb
fcmovb
cwtl
scas
inc
adc
xor
push
add
dec
enter
daa
loope
mov
leave
add
jo
or
lock
xchg
jno
test
mov
cmp
nop
mov
mov
adc
loopne
orb
stos
push
cli
out
mov
inc
mov
jl
sub
dec
mov
push
fsubrl
mov
mov
pushf
pop
jbe
inc
mov
jmp
mov
jo
sub
mulb
push
push
jnp
stc
jne
mov
sbb
xlat
icebp
repnz
aad
jl
mov
sbb
push
pop
inc
subb
xchg
sbb
mov
push
inc
outsl
sub
mov
jp
ljmp
data16
mov
push
shlb
aaa
xlat
lcall
lock
shrl
adc
sbbl
int
loop
test
inc
jb
adc
sbb
mov
ret
adc
xor
cli
push
mov
out
pop
loop
push
iret
mov
inc
dec
sub
and
mov
imul
fildll
shll
clc
iret
stos
sbb
cltd
out
inc
or
sarb
push
fs
xchg
les
jbe
cli
sub
cmp
insl
je
fwait
add
cwtl
sub
enter
add
cld
lods
shrw
out
xorl
lods
and
push
sbb
sbb
rorb
push
xchg
int3
cmc
cmp
xor
scas
push
faddp
or
push
outsb
mov
cmp
sub
movsl
mov
push
pop
and
out
enter
test
out
and
jno
cli
popf
or
pop
dec
ja
adc
pushl
nop
stos
andb
int
xchg
ds
sub
int3
xchg
push
dec
dec
ja
xor
stos
out
jmp
shlb
add
gs
and
or
jae
clc
subb
add
mov
push
cwtl
outsl
jmp
add
xchg
arpl
enter
and
out
out
repz
pop
stc
cs
test
adc
ficoms
negb
or
sub
pop
jns
dec
push
xor
fisubrl
divps
std
mov
push
leave
incl
dec
add
push
mov
mov
nop
sti
inc
cmp
mov
mov
fs
movsb
xlat
lahf
loope
add
jle
xchg
test
lds
pop
sub
imul
test
out
rcll
inc
inc
xchg
pushf
arpl
stos
and
lret
mov
cmp
add
push
cmp
adc
cwtl
mov
xchg
xor
dec
jnp
je
inc
or
and
or
inc
rcll
inc
mov
daa
les
notb
das
out
sub
and
decl
shlb
push
inc
rorb
repz
xchg
mov
mov
das
and
add
sub
rcrl
int
cmp
push
out
das
jle
jle
and
mov
fsubs
pop
imul
dec
or
xlat
out
dec
lret
stos
test
stos
adc
inc
mov
jnp
es
xor
xchg
mov
in
in
fcomps
fs
xchg
test
mov
ret
inc
adc
and
dec
sbb
je
out
adc
pop
sbb
jne
dec
int
xor
add
in
outsb
rcrl
or
jl
pop
jle
push
push
out
clc
test
mov
lahf
mov
add
inc
mov
ds
xor
pusha
inc
pop
pop
push
and
popf
popa
lods
dec
sbb
test
orl
jo
aam
js
add
dec
out
fisttps
mov
push
jg
rorl
add
les
lret
lods
mov
adc
cmpb
inc
sbb
xchg
cs
fst
aam
inc
dec
add
stc
add
cmp
js
fxch
stc
cmp
bound
adc
pop
sahf
jg
mov
imul
shlb
pop
mov
rol
push
inc
pop
sahf
call
fmul
xchg
push
mov
aad
mov
adc
mov
push
fisubrl
push
in
clc
cmp
add
mov
inc
addr16
ret
xchg
fs
test
push
cmpsb
dec
rolb
inc
xor
scas
ret
clc
pop
loopne
cmp
push
fstl
ss
dec
add
pop
add
add
add
xlat
mov
shr
popa
sub
add
and
add
out
sub
mov
add
sbbl
test
xchg
mov
cmp
add
arpl
jp
dec
test
inc
push
and
and
mov
sbb
or
mov
mov
or
and
push
pop
or
pop
ds
movsb
mov
jecxz,pn
in
shll
cmp
int
hlt
shlb
add
in
jno
jo
or
push
xor
pop
pop
nop
fstpl
jecxz
and
adc
shrl
jle
out
stos
cmpsl
dec
adc
inc
jne
ret
popf
xchg
stos
push
aas
add
or
iret
or
and
mov
stc
or
add
inc
fwait
mov
inc
or
or
xor
mov
fmul
push
mov
push
mov
jo
jge
into
iret
pusha
es
pop
mov
cmpb
cmc
cmpsl
cmp
pop
lea
mov
sub
inc
sub
fimuls
mov
out
pop
jge
fildll
sbb
adc
pop
icebp
cs
iret
notb
ds
leave
fnstsw
xchg
jo
push
push
jb
cwtl
fnstenv
sahf
jne
cmc
cmp
icebp
inc
fstl
mov
jne
fwait
cs
testb
shrb
xchg
test
pop
popa
adc
push
idivl
pop
in
cmp
sub
xor
push
cmp
xchg
sti
fcomps
xchg
jmp
sub
cmp
lcall
sub
icebp
xchg
loopne
mov
xor
xor
mov
test
sub
pop
in
pop
mov
and
dec
xchg
hlt
movsb
or
push
add
outsb
aas
cltd
cmpsl
sbb
pop
test
and
rorb
in
gs
lcall
lods
inc
add
add
push
push
out
cwtl
lods
dec
mov
inc
popf
outsb
dec
sbb
pop
and
shrb
sbb
push
push
stos
sbb
jmp
in
inc
dec
pushf
aam
inc
das
dec
jb
pop
call
dec
stos
push
pop
mov
repnz
js
xchg
mov
pushf
lds
xchg
cmp
mov
pop
cmp
add
outsb
mov
inc
or
mov
xchg
subl
add
iret
mov
pop
roll
fstps
and
pop
sub
adc
mov
and
mov
cmp
xchg
bound
or
sub
cmpsb
cli
das
negb
mov
test
sub
mov
inc
push
in
frstor
mov
xor
jl
pop
mov
inc
int
jp
loope
pusha
adc
mov
xchg
and
test
or
sub
or
pop
xor
sarl
mov
and
addr16
in
inc
cli
loopne
xlat
dec
push
sbb
mov
cmp
aaa
mov
push
iret
add
jne
xlat
movsl
pop
push
mov
push
sub
inc
sti
repz
lea
push
int
mov
and
cmp
adc
pushf
jmp
movsl
or
imul
pop
ret
jbe
push
adc
jne
cmpsl
lret
push
fistpl
mov
ss
push
xor
inc
mov
sbb
daa
aam
mov
push
outsb
bound
aaa
xchg
and
mov
scas
xchg
cmp
mov
sbb
push
mov
mov
fs
fidivs
mov
fdivrl
jo
push
jp
shll
pop
cmp
jmp
in
inc
lahf
sbb
into
adc
cld
repz
add
aas
cmpsl
scas
ret
xchg
mov
mov
mov
mov
push
pop
stos
and
ds
mov
adc
in
out
inc
lcall
jmp
push
dec
dec
inc
add
imul
shll
iret
fistl
int
sub
mov
or
sar
stos
push
jl
jo
movsl
ljmpw
ss
jae
pop
pushf
xchg
sbb
aad
push
jp
fdivrl
fldcw
les
xor
lcall
pop
jl
cltd
ret
pusha
mov
into
sti
pop
mov
xchg
fwait
sub
mov
add
cmpsl
jns
hlt
insl
inc
dec
dec
mov
imul
movsb
ret
sbb
sub
inc
push
outsb
int
jne
enter
fnstcw
and
jnp
test
cwtl
sbb
inc
mov
bound
inc
stc
fs
pop
data16
jmp
scas
clc
inc
jb
insb
adc
jl
inc
dec
sbb
outsl
dec
insb
pop
push
cmovbe
mov
mov
int
sub
aad
cmp
mov
insb
mov
ss
in
inc
shl
pop
cmp
xor
dec
jge
stos
in
mov
fnstenv
mov
in
mov
xor
cmp
jbe
push
fidivl
sti
enter
lods
clc
jb
loopne
nop
mov
inc
add
add
in
shrb
push
test
and
ss
sahf
mov
stos
ja
cmp
ret
sub
sbb
sub
sbb
ss
inc
mov
pop
xorb
push
imul
jae
cwtl
mov
imul
adc
cwtl
jmp
sbb
fbld
fcmove
movsl
aad
add
lods
insl
push
xor
add
dec
xor
aaa
or
and
or
lret
scas
cmp
jg
cmpsl
or
sbb
mov
push
jge
push
shll
adc
iret
cmp
or
stos
lahf
sub
outsb
mov
dec
gs
sbb
mov
add
int
addb
xor
push
mov
aaa
or
ss
sbb
or
cltd
adc
into
push
repnz
roll
and
cmpl
mov
test
jae
pop
es
loopne
in
ret
push
pushf
add
dec
add
rolb
mov
mov
int3
sub
push
push
aas
jae
out
lcall
adc
roll
sbb
pop
cwtl
pop
pop
dec
scas
dec
pushf
dec
or
mov
movsb
fwait
iret
fs
mov
inc
add
add
add
repz
movsb
adc
movsb
imul
repz
add
adc
add
xchg
mov
hlt
inc
orb
je
inc
jle
add
nop
jmp
ljmp
das
push
mov
fwait
nop
wbinvd
mov
je
insl
add
les
int
mov
mov
fidivrl
push
lahf
rol
pushf
arpl
mov
in
pop
test
mov
stos
xchg
mov
inc
std
roll
add
xor
add
lds
testb
in
outsb
out
mov
lret
inc
dec
adc
push
out
cmp
in
jns
xchg
addr16
or
mov
lea
mov
ret
add
enter
pop
pushf
mov
push
xchg
cmp
xlat
stos
sbb
sbbl
xchg
and
push
in
punpckhwd
add
mov
xchg
push
test
stos
dec
test
test
sub
fnstsw
enter
sahf
xchg
adc
je
mov
xchg
add
mov
inc
add
mov
adc
xor
subl
mov
or
in
push
dec
and
push
shl
inc
sbb
xchg
pop
imul
mov
pop
test
mov
jb
xor
ret
mov
movsl
fildl
mov
gs
cld
xchg
jl
xor
hlt
cltd
arpl
jge
out
stos
out
jge
loope
cmp
xchg
add
loop
cwtl
fwait
add
mov
pop
dec
test
out
ret
sbb
mov
and
ss
push
int3
jns
jg
mov
xor
rorb
xchg
fucompp
adc
jns
cmpsb
and
pushf
stos
jo
negl
rcrl
jns
int
pop
mov
sbb
dec
call
call
and
inc
in
lret
push
ret
jns
mov
sahf
jae
and
rcll
fnsave
fimuls
imul
cmp
pop
sbbl
loopne
inc
mov
xor
repz
into
dec
mov
outsl
sub
test
insb
jns
sub
gs
imul
mov
jp
or
push
lahf
push
add
aas
push
dec
out
pop
cmp
inc
in
leave
je
ret
iret
push
js
add
idivb
lret
dec
test
roll
stc
cmp
jbe
push
xchg
repnz
or
arpl
xor
in
ficoml
dec
insl
push
aad
adc
push
push
idivl
pop
jo
xchg
xchg
movb
ss
inc
aas
add
sti
or
add
sti
inc
mov
bound
xor
lret
lods
addl
mov
mov
sbbl
lods
dec
and
inc
dec
pop
adc
int3
cs
outsl
jp
ds
cmp
loope,pn
inc
dec
sub
lahf
pop
jmp
push
jg,pt
push
iret
xchg
and
cmp
add
dec
pop
pop
mov
ret
and
fmull
sub
stc
and
jb
cmp
push
adc
push
and
ljmp
jnp
stc
sar
push
jg
pushf
ret
push
ljmp
sbb
lock
iret
test
push
bound
pop
lahf
sbb
test
call
push
push
add
push
stos
sbb
popf
lret
jecxz
dec
and
mov
mov
dec
out
or
repz
and
mov
fmuls
imul
jg
jmp
fidivs
cmpsb
jb
xchg
enter
jb
nop
fs
add
sub
and
sti
sub
negl
int
cmp
mov
pop
jg
add
cli
arpl
xor
and
int
stos
lcall
xchg
pop
or
arpl
scas
push
and
push
sarl
sbb
xchg
fmull
xlat
xchg
mov
aas
cltd
mov
dec
cmp
adc
xchg
xchg
mov
push
inc
mov
push
in
stos
ljmp
cmp
or
add
pop
je
push
fcoml
fs
sti
aad
mov
test
fcmove
and
rcll
std
je
cmpsb
mov
inc
mov
sbb
pop
jne
push
lock
xor
jg
adc
jno
sub
jge
and
and
mov
es
dec
xorb
lock
cli
ds
movsb
push
mov
sub
pop
inc
sbb
push
inc
repnz
cmp
mov
ret
adc
out
cmp
stos
les
ss
sub
and
mov
xchg
sub
inc
dec
pop
fcoms
sbb
mov
loop
xchg
cmp
push
stc
pop
lcall
mov
cmp
cwtl
jmp
aas
cs
and
jbe
add
lcall
mov
outsl
cmp
addb
aas
pop
test
cs
dec
xor
push
or
pop
lahf
fsubrp
push
pop
lcall
aam
mov
mov
sbb
or
pop
sub
sub
sbb
xchg
loopne
mov
int
mov
jo
add
push
inc
add
push
call
dec
add
aad
leave
daa
fs
arpl
daa
in
xchg
mov
pop
mov
dec
imul
rcrb
in
or
out
mov
sbb
aaa
jle
sarl
mov
pop
ss
insl
mov
mov
cs
adc
and
jl
cmp
lods
addr16
mov
sbb
hlt
repnz
dec
loopne
cmp
cmp
ss
and
sbb
sbb
jnp
xchg
jmp
test
test
pop
outsb
sti
fnstsw
test
out
push
arpl
push
fists
push
sub
mov
or
insl
adc
aam
test
and
ret
cltd
repz
dec
ret
cmp
in
sbb
push
add
xlat
push
mov
sbb
flds
imul
sbb
jg
push
push
insb
jle
leave
int3
jbe
js
lods
fldl
cmp
scas
out
xor
out
aad
adc
dec
pop
or
sbb
and
pop
aas
xchg
inc
fisubl
add
test
cs
cld
push
outsl
adc
mov
inc
out
sbb
jno
hlt
gs
leave
xor
test
sbb
