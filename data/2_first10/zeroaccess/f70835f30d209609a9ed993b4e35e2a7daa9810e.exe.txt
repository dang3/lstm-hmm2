push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
int3
mov
bound
fstpl
bound
sub
pop
add
pop
jne
lock
inc
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
int
jle
in
and
ret
clc
mov
jl
leave
pop
and
mov
mov
cmc
cmp
mov
xchg
push
in
aaa
mov
ret
push
mov
mov
jmp
pop
add
lcall
pop
bound
jg
pop
mov
nop
inc
xchg
xor
add
mov
cmpsb
xorb
cmpsl
lods
scas
push
enter
int
or
mov
xlat
jb
aaa
jmp
xor
or
test
cmp
push
or
iret
call
xor
cmp
std
cmp
ds
call
movl
mov
jns
and
push
sbb
cmp
push
xchg
xor
xchg
fs
push
or
jmp
add
test
xor
lods
mov
pop
pop
orl
scas
call
mov
push
pop
jecxz
dec
insb
mov
das
arpl
mov
add
ret
push
sub
cmpsb
sub
dec
push
add
pop
mov
mov
adc
mov
add
ret
aam
push
shl
les
cmp
and
mov
call
aad
add
xchg
jmp
push
adc
inc
lds
arpl
cmp
push
sbb
xchg
loop
lds
jbe
aaa
sbb
pop
test
fdiv
loop
pop
jg
jnp
lret
shrl
mov
mov
ret
xor
std
cmp
and
xor
fdivrl
jo
mov
into
xchg
xchg
pushf
pop
loopne
das
cmp
lret
cmp
xchg
jle
fstl
sbb
shlb
push
lods
xchg
cmp
mov
jle
mov
or
cmp
ficoms
and
cmp
push
pop
std
rclb
in
dec
repz
inc
inc
sub
push
flds
bound
jno
aas
in
movsb
dec
mov
out
jge
push
push
push
add
arpl
lea
ds
test
or
pop
into
xor
pop
out
mov
int3
fmul
or
add
icebp
inc
imul
mov
scas
push
daa
dec
push
rorb
sbb
cmp
cmp
cli
add
mov
in
sbb
cli
add
test
add
pop
lods
cmp
mov
pop
into
jbe
mov
sysret
aad
jae
inc
adc
cmpsb
or
xor
xchg
cltd
pop
xchg
fwait
push
addr16
inc
ljmp
fisubs
cmpsl
sbb
mov
xlat
sarl
jecxz
ja
pop
adc
jp
pop
pop
jno
subl
cmpsl
fildl
pop
nop
fucomp
mov
imul
mov
cld
dec
dec
mov
mov
pushf
pop
sti
lods
pop
cmp
mov
mov
mov
pop
inc
popa
mov
push
sti
maxps
cwtl
js
scas
adc
into
jg
push
pop
jo
fwait
push
inc
rcll
fistl
sbb
dec
dec
gs
test
adc
xor
push
das
aad
pop
pop
adc
cmp
inc
sbb
nop
sub
cld
ss
sub
adc
stos
ficompl
les
clc
mov
sbb
fsubrl
lahf
add
mov
mov
xor
dec
test
push
lds
out
push
daa
popf
mov
cvttps2pi
in
sarb
jns
out
xchg
mov
clc
cmc
and
int
mov
xlat
insb
adc
frstor
lods
add
in
mov
pushf
fld
or
subb
aad
xor
pop
sub
in
add
jae
jecxz
lcall
pop
or
lds
xchg
xchg
test
test
xchg
es
sub
adc
cs
mov
scas
mov
setp
mov
pop
pop
xor
sub
fisubs
sahf
cmp
jno
push
adc
xor
mov
aad
arpl
mov
push
push
adc
jo
pop
push
fidivrs
popa
mov
test
ljmp
and
aas
jl
outsb
mov
insb
dec
mov
repz
add
adc
adc
and
or
sub
and
sub
adcb
cmp
movsb
loope
lods
lahf
cmpsl
push
mov
sbb
ficoml
seto
call
xor
and
dec
incl
ss
push
test
cltd
loope
fcomi
iret
cwtl
xor
add
xor
adc
aad
fldt
bound
ds
cld
leave
add
xchg
pusha
clc
jmp
push
or
push
mov
ja
inc
loop
mov
out
lea
jne
mov
pop
adc
out
test
push
movsl
xor
pop
sbb
leave
mov
lcall
scas
add
scas
test
dec
jo
loop
ljmp
sub
cmp
add
bound
clc
mov
push
xchg
arpl
adc
mov
xor
fsubrs
sub
stos
cwtl
pop
sub
je
add
jns
outsb
divb
mov
pop
hlt
pop
adc
jbe
sub
roll
xchg
jecxz
mov
subl
in
lods
mov
mov
mov
xchg
lcall
adc
push
fldenv
addr16
test
adc
xor
mov
xor
int3
dec
add
push
popa
add
arpl
setne
leave
mov
or
xchg
out
in
fistps
push
movsl
xor
xlat
cltd
xlat
fstps
test
test
mov
lods
adc
shl
push
mov
inc
je
sub
add
lahf
lods
outsl
mov
mov
scas
sub
mov
popa
imul
add
mov
call
into
add
sarl
lahf
add
push
add
mov
outsl
leave
cmp
mov
dec
xchg
xor
mov
into
fldl
mov
std
inc
mov
and
jp
sbb
mov
loop
es
mov
sub
xor
out
inc
idivb
fsubr
cmp
jle
lret
jo
and
cwtl
push
fsubl
jge
dec
or
scas
mov
mov
insl
out
adc
ljmp
xor
sbb
cmp
and
inc
jns
mov
xchg
mov
adc
inc
loopne
out
outsl
imul
test
mov
jecxz
mov
add
loop
nop
lock
outsb
sub
int3
in
cmpsl
cmpsb
adc
xor
rcl
xchg
insb
out
or
push
in
pop
inc
pop
imul
or
mov
das
enter
cmp
jae
popf
sbb
loope
fucomip
lret
pop
data16
xchg
scas
outsl
mov
ss
inc
add
mov
pop
adc
bound
call
dec
pop
test
jg
sub
pop
sub
insb
push
add
xchg
cmp
dec
adc
jmp
out
mov
add
mov
or
adc
inc
daa
xlat
pop
push
mov
stc
dec
ficomps
lret
xchg
int
cmc
movsl
movsb
popa
xchg
stos
popf
mov
xchg
adc
inc
pop
sarl
jmp
cltd
mov
push
ljmp
negl
lret
mov
scas
vmovaps
insl
aam
jecxz
mov
adc
repz
ds
inc
mov
rcl
sbb
pop
dec
pop
aad
mov
int3
and
scas
fiaddl
scas
inc
or
rolb
cmp
fdivrs
inc
aad
fdivp
cmpsl
insl
adc
push
push
jmp
push
add
aad
stos
lods
sub
xor
cmovbe
sub
loop
test
enter
dec
test
dec
loope
pop
movb
loop
out
hlt
ret
imull
pop
pusha
imul
dec
dec
dec
aas
pop
in
fwait
das
and
mov
insb
aas
adc
ret
xlat
mov
xchg
sub
clc
fcoml
lahf
mov
out
imul
or
xor
arpl
scas
lds
cwtl
hlt
jp
addl
roll
adc
and
ljmp
fldt
xchg
mov
je
movsl
pop
sahf
lods
xor
sub
mov
push
push
mov
stc
pop
xchg
mov
push
pushf
mov
enter
mov
mov
into
cmp
mov
imul
push
jns
sub
sub
cld
test
inc
fucomp
hlt
rclb
pop
mov
pop
xor
rorl
in
out
insl
jle
popf
push
les
sbb
fimull
testb
ds
aam
lock
dec
push
subb
push
jmp
or
out
mov
mov
jge
jmp
call
jge
push
rcll
imul
or
std
lcall
mov
in
bound
aam
into
mov
pushw
fisttpl
aam
cmpb
pop
mul
lea
inc
mov
sub
jecxz
mov
hlt
lret
sub
inc
push
inc
out
dec
xor
xchg
push
sti
data16
popa
push
fs
sub
sbb
shr
add
test
pop
jbe
lods
loopne
mov
rcrl
jbe
daa
in
jne
shr
ss
stos
xchg
mov
enter
test
cmp
inc
sub
dec
cltd
xor
ficomps
lds
cld
jge
jno
cmp
pop
test
cld
lea
adc
jns
test
add
push
or
pop
mov
inc
pop
inc
adc
fisubrl
gs
sbbb
std
xchg
aam
dec
punpcklwd
daa
call
cmp
xorl
jb
fwait
pop
xchg
jmp
ss
xor
inc
clc
loop
push
ret
repnz
cmp
mov
pop
xlat
leave
jno
lds
hlt
and
outsb
ud0
js
mov
xchg
ret
push
bound
jns
mov
std
data16
rolb
mov
rcrb
sti
jl
sbb
pop
neg
push
push
scas
sub
imul
pop
jge
das
faddl
into
push
or
jno
in
loopne
aam
sbb
pop
out
lea
push
fwait
xchg
pop
aad
sbb
xor
clc
pop
enter
les
in
pushf
lods
mov
ljmp
roll
mov
mov
mov
lods
inc
fistl
sarl
js
jae,pn
movsb
dec
fcompl
lds
xor
sbb
lahf
add
adc
jl
dec
xchg
out
pusha
lds
sbb
pop
mov
cli
mov
sti
xor
mov
or
mov
xor
arpl
dec
pop
ficoml
dec
in
jmp
push
mov
fidivs
mull
mov
out
cmp
xor
enter
cltd
adc
fisttpl
pop
xor
mov
arpl
aas
repz
sbb
pop
push
and
add
stos
inc
dec
xchg
pop
cmpsb
cli
mov
popa
lods
ljmp
loop
or
in
and
outsb
adc
mov
aas
pop
pop
es
push
mov
or
loop
sbb
roll
das
xchg
xor
cmp
xchg
and
inc
daa
inc
test
leave
xchg
adc
lods
cwtl
pop
xchg
cmpsl
cld
xchg
loopne
fdivrs
or
or
sub
pop
pop
shl
mov
enter
and
adc
mov
shr
mov
dec
in
mov
ljmp
sub
dec
fucom
out
cmpsb
inc
sub
movsl
inc
jge
cmc
test
adc
mov
ljmp
jmp
fs
jmp
jns
xchg
cli
rcll
call
fcomip
mov
pop
add
cmp
push
xor
pusha
xchg
adc
rcr
jne
aaa
aam
fisubrs
mov
push
dec
xchg
jae
test
mov
xlat
cmpsb
xor
add
jmp
jne
inc
inc
mov
adc
jb
int
sbb
dec
jne
mov
lods
leave
jae
jg
sub
callw
int3
jns
inc
int3
mov
subl
movsb
rclb
les
addr16
sub
dec
nop
ret
loope
addr16
push
mov
iret
inc
inc
fnstsw
cld
pop
in
mov
movsl
mov
mov
out
mov
mov
lcall
pop
in
in
out
xlat
adc
push
push
cmp
sub
jl
xor
inc
pushf
xchg
mov
call
cli
lock
inc
cmc
stos
and
dec
xchg
lahf
je
out
mov
mov
sahf
mov
mov
test
and
loope
xor
mov
mull
and
cmpsl
mov
loopne
out
imul
nop
shll
push
sbb
or
cmpsb
fiadds
divl
jg
lock
rorb
pop
pusha
and
rcr
imul
dec
imul
or
mov
negl
loopne
pop
jge
xor
fdiv
mov
popa
movsl
inc
dec
push
pop
dec
or
stos
lods
dec
int3
or
xor
iret
ja
lea
leave
sbb
mov
adcl
jne
icebp
and
scas
xchg
insb
mov
xor
subl
adc
icebp
ljmp
push
mov
cmpsb
outsl
mov
mov
rclb
jno
ja
es
mov
push
xlat
mov
fidivrs
and
das
mov
fwait
inc
cmpsb
mov
sbb
lods
cmpsb
leave
push
xor
ret
mov
inc
pop
daa
aas
and
fucom
frstor
sti
mov
add
in
nop
lret
call
jae
mov
xor
add
lods
shrb
push
jp
in
in
adc
nop
aaa
movl
icebp
mov
popa
in
mov
sbbb
popa
lock
shrl
xor
pop
popf
xchg
test
xor
ficoms
push
xchg
sbbl
pop
lods
out
push
scas
mov
xchg
test
fsubp
in
test
in
mov
in
lahf
and
lock
add
dec
or
stc
int3
das
push
jle
sub
mov
adc
inc
fisubl
fisubrl
in
and
fisubs
mov
add
and
pushl
mov
aad
fcmove
jo
sub
push
xor
dec
mov
push
scas
lcall
pop
leave
cmp
mov
mov
cli
mov
imulb
lds
pop
test
adc
xor
mov
xor
cmp
sbb
fwait
pop
aas
xchg
lahf
cld
jns
aaa
into
cld
adcb
mov
jle
out
aad
sahf
mov
or
dec
push
subl
das
jbe
mov
cmp
sti
push
negb
xchg
xor
mov
adc
adc
add
cli
xor
popa
xlat
sub
ficompl
mov
sub
lcall
adc
xor
mov
and
mov
cltd
sub
mov
push
push
cwtl
enter
cltd
lahf
and
xchg
xor
jae
inc
and
rcll
aas
rcrb
or
sbb
pusha
pop
jmp
fucom
insb
xchg
sahf
cmpsl
outsb
sbb
inc
js
test
jnp
int3
aad
add
jge
add
cltd
push
stos
or
and
ficompl
or
addl
rcl
and
mov
rep
dec
pop
or
subl
add
xchg
xchg
or
mov
insb
pop
inc
add
pop
shrb
ss
leave
jmp
iret
dec
fwait
test
addr16
lret
push
jnp
fidivl
std
cmp
clc
dec
inc
cmp
xchg
and
sbb
xchg
push
mov
sub
call
gs
icebp
ljmp
movsl
adc
pop
sbb
jne
in
mov
or
cmpb
in
imul
xlat
push
jnp
and
xor
and
imulb
gs
orb
in
jo
push
xchg
shll
push
add
sti
push
xor
js
repz
pop
outsb
jge
adc
xor
mov
pop
push
dec
or
outsb
add
push
inc
push
je
inc
idivb
movsb
sarb
ficoms
movsb
adc
ret
add
lret
ljmp
inc
cmpsl
xchg
add
and
call
test
testb
push
mov
cmp
jb
cld
mov
les
nop
call
pop
push
subb
inc
fsts
dec
inc
mov
outsl
ja
mov
lret
insl
cli
adc
cmp
lods
out
or
jp
ljmp
jmp
xchg
mov
push
pop
mov
mov
pop
pusha
pop
add
mov
iret
lret
sbb
in
mov
addl
dec
test
stos
fistpl
push
dec
test
jg
cmp
push
or
test
mov
xor
in
jne
addl
lock
js
push
fidivrs
add
lock
lods
mov
dec
add
mov
mov
add
int3
lods
xor
sbb
jmp
cld
lds
insl
xor
sbb
mov
scas
imul
rorb
cmpsb
ds
cmp
jbe
mov
cmp
inc
repnz
jg
mov
mov
scas
push
inc
pop
mov
or
test
add
out
mov
in
mov
xor
rorb
fwait
push
cli
pop
scas
scas
xchg
jle
cli
xchg
push
cwtl
or
push
lock
lahf
test
jo
push
jnp
ja
jmp
aam
mov
jl
out
push
bound
popf
shlb
fsubs
mov
jle
xor
repnz
aam
inc
daa
mov
mov
sarl
mov
shlb
fs
jmp
sbb
inc
lods
fucomip
xor
xchg
push
sbb
movsl
inc
add
stc
aaa
add
fbld
mov
test
fisttpl
insb
jno
movsb
lret
sub
cs
cltd
fsubrs
sbb
mov
mov
adc
push
sub
outsl
cmp
xchg
jo
rcrb
mov
xchg
mov
lods
jmp
sahf
jo
fdivrl
pop
aaa
mov
aaa
std
jnp
les
inc
rcrb
outsl
pop
dec
cmpb
mov
jmp
in
pop
xor
jge
push
movsl
fwait
add
call
int3
loop
lds
imul
insb
test
adc
mov
outsl
cltd
add
xor
call
sbb
add
push
fs
not
sti
pop
jns
jae
xchg
push
idivl
gs
push
icebp
push
fcmovb
lahf
mov
jne
outsl
jg
add
dec
and
jnp
test
mov
push
mov
popa
inc
push
call
ds
lock
fdiv
lret
scas
jnp
mov
test
mov
xlat
cmpl
je
add
push
sbb
mov
add
push
in
out
popa
pop
shr
lds
daa
and
xlat
sub
ja
leave
push
xorb
outsb
add
aaa
orb
ds
repnz
add
jl
xlat
mov
jg
call
sbb
sti
mov
movsl
test
in
ret
mov
in
fimull
jmp
not
pop
pop
mov
jmp
aam
dec
fidivs
roll
xchg
jnp
add
cmp
divl
xor
mov
sbb
fldt
inc
lods
jl
pop
dec
lret
push
ds
and
xchg
pushf
or
xchg
ds
enter
mull
xor
mov
fstl
cli
add
mov
cmp
scas
call
nop
pop
pop
pop
cmpsl
pop
cltd
insb
mov
pop
sar
fsubrl
ds
push
mov
xchg
mov
in
mov
xchg
dec
test
shlb
stos
push
inc
in
add
mov
lcall
and
push
mov
dec
sub
dec
mov
mov
pop
cltd
cs
lods
js
and
jo
int
push
aas
pop
pop
mov
dec
xor
and
loope
xchg
sbb
add
pusha
xchg
ror
jae
pushl
jmp
sub
clc
in
jns
dec
mov
enter
ja
repnz
mov
push
test
cwtl
or
or
jno
inc
pop
sbb
mov
inc
mov
shrb
lods
aad
mov
push
sbb
and
ss
pop
dec
testl
cwtl
loope
push
or
cmp
xor
ret
lret
sub
sbb
fadds
aad
mov
dec
mov
stos
enter
movsb
and
shll
lret
mov
inc
fldt
outsb
pop
jg
mov
lds
sarb
sub
inc
jno
daa
shl
popf
jbe
test
dec
inc
cwtl
add
add
mov
popa
xlat
cltd
popf
jnp
repnz
cmp
hlt
jl
xor
inc
inc
scas
sbb
sbb
push
adc
mov
divb
jae
jecxz
and
in
add
cli
outsl
faddl
cmp
ja
add
sbb
aad
sbb
push
nop
shlb
or
mov
push
test
mov
push
mov
or
mov
jge
cli
ret
jne
push
dec
js
sti
jp
cmpsl
add
adc
adc
outsl
inc
push
push
lods
ror
cltd
aad
inc
fcompl
in
cmc
lds
jmp
sbb
dec
push
mov
mov
lds
test
arpl
enter
mov
cltd
je
sbb
xor
pushf
shl
sub
push
push
jl
mov
cmp
push
das
popf
inc
sbb
push
or
sub
add
mov
xchg
sub
addr16
fildl
je
nop
in
das
push
out
xor
and
mov
dec
and
pop
cmpsl
mov
jmp
inc
popw
out
sbb
mov
mull
sbb
push
fcmovnu
jmp
mov
xchg
add
cltd
push
sbb
imull
testl
sbb
cmp
testl
pusha
xlat
mov
xchg
pushf
inc
cli
add
xchg
std
and
iret
idivl
fistpll
das
call
rcll
or
pushl
sbb
clc
push
jne
push
repz
xchg
xor
dec
out
mov
adc
mov
rclb
stos
jo
shrb
cmp
imulb
push
xlat
add
test
pop
stos
repz
cmp
shrl
int
pop
clc
mov
inc
fisubs
inc
insb
jnp
push
in
js
inc
ja
xchg
xchg
cmpsb
stc
xor
imul
cmp
out
iret
movsl
jle
popa
push
jb
stc
inc
mov
mov
inc
bound
out
test
adc
push
push
sbb
or
fcomip
fsubrs
dec
mov
mov
cld
push
fcmovu
add
insl
xchg
add
mov
cmp
pop
inc
cmpsl
adc
sbb
xchg
sbb
mov
stc
cltd
and
leave
inc
adc
fstpt
rorb
test
push
in
aad
jae
mov
xchg
dec
das
imul
mov
xchg
sub
mov
and
and
sub
jbe
add
packsswb
rclb
jnp
icebp
ret
push
or
rcl
mov
cmpsl
insl
pop
mov
jmp
hlt
imul
aaa
out
mov
ja
sbb
leave
sub
pushf
mov
inc
pop
sub
jo
out
cmp
and
inc
cld
cmp
jg
scas
pop
insl
popaw
loopne
js
in
addr16
shl
mov
jl
push
idivb
loop
cmc
jae
dec
lahf
out
add
test
in
mov
out
aas
cltd
xor
cmp
push
nop
dec
ja
rcrl
mov
psllw
inc
jg
out
dec
mov
jno
je
and
cmp
sbb
data16
jl
or
sahf
dec
mov
lret
repz
scas
jo
lds
dec
test
aad
je
out
and
pop
faddl
aam
mov
lahf
aad
push
je
and
sarl
outsb
dec
or
xor
insb
or
sbb
sub
mov
cmp
shrb
push
push
out
hlt
shrl
mov
lret
mov
cmpsb
notb
fcmovnb
sarl
dec
cli
mov
adc
sub
insl
mov
iret
add
js
inc
adcl
mov
mov
cwtd
enter
loop
repz
js
or
xor
ss
sub
jno
int3
das
add
lds
push
xor
int3
outsl
lods
add
pusha
data16
cmp
stc
lcall
and
sbb
cmp
movsb
sub
sbb
and
fstl
out
sbb
popf
jg
push
xor
ss
imul
leave
lret
xchg
push
adc
xchg
lods
jo
cld
sbb
dec
dec
push
stos
cli
xchg
mov
push
rep
jns
jne
enter
sub
aad
sbb
mov
dec
gs
test
sub
clc
mulb
out
loop
icebp
jg
adc
xor
cmp
mov
xchg
jle
mov
sub
add
insb
sbb
xchg
das
inc
aaa
xor
sbb
or
jns
push
sbb
jecxz
sbb
test
cmp
mov
and
dec
loope
pop
in
sub
xchg
jno
jnp
xor
jnp
mov
sbb
pushf
xchg
lods
icebp
fiadds
in
xorl
ljmp
das
jge
jg
jmp
add
xchg
lds
adc
adc
add
orl
out
and
fstpt
je
aam
cmp
out
pop
imul
idiv
test
dec
xchg
jl
cmp
inc
cli
push
notl
mov
notl
mov
in
ret
insl
jle
xor
pop
addr16
mov
out
ljmp
mov
dec
hlt
loopne
mov
and
jge
addl
mov
jp
sahf
dec
or
scas
adc
dec
push
imul
inc
xor
mov
mov
add
sbbb
cli
fnstsw
leave
or
adc
or
loop
int
pop
add
aad
adc
lea
sbb
pop
dec
push
inc
popa
push
shll
inc
push
adc
mov
pop
fs
push
cltd
push
inc
jge
xlat
and
adc
addr16
ds
jge
xor
jno,pt
test
xchg
mov
shrb
sub
fstps
jle
js
cmpsl
arpl
in
mov
shrl
mov
movsl
inc
idivb
sti
xchg
xor
test
mov
stos
push
push
adc
mov
and
push
js
mov
push
pop
cs
rcrb
aaa
dec
les
sahf
pop
push
push
inc
ja
and
sbb
xchg
pushf
inc
test
mov
dec
jle
mov
ret
jb
sti
dec
jl
clc
or
pusha
sbb
pop
and
sarl
bnd
ficoml
movsb
mov
jo
and
ret
pop
or
andl
mov
jmp
push
sub
pop
jb
adc
gs
icebp
inc
and
push
mov
repnz
pop
mov
jp
pop
jnp
or
loopne
scas
push
inc
mov
mov
addr16
xchg
add
int3
in
lahf
jnp
out
cwtl
inc
jl
cmp
dec
rclb
pusha
movsb
cmp
int
cmp
xor
fcomi
mov
mov
jle
aas
jp
lds
sbb
dec
push
daa
das
push
jmp
pop
paddsw
xchg
jns
aaa
insl
jo
fstpl
pop
out
cltd
sbb
icebp
mov
lock
cli
xchg
jns
mov
das
dec
popa
mov
ljmp
jl
data16
adc
out
add
push
outsb
push
xor
enter
arpl
cmc
leave
pushf
fsubrl
cli
add
push
aaa
xchg
in
imul
out
xchg
filds
cmc
lret
movb
xorl
aam
jne
mov
movsb
and
in
fnstcw
jo
movsl
pop
push
cmp
add
inc
push
bound
fstps
push
push
sbb
arpl
and
out
in
mov
into
dec
stos
push
notl
pop
into
adc
sub
sahf
cmpsb
add
test
lods
test
jl
cmp
movsb
jns
mov
outsb
in
or
outsb
lods
sub
aad
rcrl
fildll
mov
mov
mov
mov
sarl
mov
popa
imul
lock
data16
sub
jns
cmp
adcb
adc
jecxz
lcall
pop
mov
xchg
nop
sbb
mov
fidivrl
xorb
xor
je
sub
scas
xor
repz
repz
std
cmp
xchg
adc
mov
adc
xchg
loop
hlt
mov
push
mov
xchg
push
mov
cmp
lahf
pop
outsb
aam
rorb
dec
imul
jecxz
mov
push
push
pop
cs
test
fisttpll
data16
or
or
loopne
shlb
leave
popf
mov
addb
mov
call
loope
mov
mov
cmp
loopne
inc
dec
xor
and
outsb
add
iret
cli
adcl
xchg
inc
loopne
mov
sbb
sub
push
ret
out
mul
pop
fsts
int3
mul
cmp
add
into
mov
movsb
cli
pop
cli
lods
rcl
push
fwait
lods
stos
sub
and
jmp
pop
mov
push
inc
ljmp
das
lock
jg
pop
push
cltd
dec
ja
pop
mov
daa
jno
mov
loopne
test
subl
push
ret
shrb
jbe
and
lret
mov
and
xchg
js
xor
push
xchg
mov
andb
idiv
aaa
int
xchg
outsb
xor
add
movsl
fnsave
or
pop
in
pushl
lock
sub
mov
jnp
jne
mov
pop
inc
push
and
or
sti
pop
stos
shll
mov
jl
dec
stos
insl
xchg
ss
or
push
fimull
dec
mull
inc
outsl
mov
and
fnstcw
mov
jb
sub
mov
add
mov
jl
lods
xchg
dec
arpl
shlb
mov
test
pop
or
sub
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fcoml
data16
dec
fstpl
fstpl
bound
or
dec
inc
into
fstpt
nop
cmpsb
movsl
xchg
xlat
add
das
pop
ljmp
fidivrs
test
jnp
mov
filds
imul
xor
push
or
cmpsb
sub
imul
imul
cmc
pop
rcrb
sbb
incl
lods
jmp
or
jmp
pop
jecxz
mov
ret
icebp
mov
js
or
into
into
add
out
ja
and
inc
and
lods
mov
fsub
mov
adc
pop
js
pop
add
das
pop
pop
xchg
dec
aas
cltd
popa
mov
lret
dec
leave
movsl
jp
nop
adc
lds
push
loopne
je
cmpb
inc
mov
add
insb
or
movsb
sub
fwait
cmp
movsb
dec
xchg
push
inc
mov
pop
cmp
cli
dec
inc
xlat
cli
mov
daa
xchg
push
dec
adc
mov
iret
pop
mov
xor
mov
jbe
sbb
adc
adc
dec
sub
fidivs
imul
rcrl
pop
shl
insb
jge
inc
inc
mov
mov
or
ficoml
mov
fildll
dec
cmp
push
mov
sub
ret
dec
les
in
cmpsb
mov
mov
test
ret
insl
and
jno
and
push
mov
lods
in
shl
jno
stc
push
pop
test
mov
xchg
repz
testb
inc
cmp
stos
mov
lock
lods
cmpsl
cmp
dec
add
mov
mov
mov
fldcw
aas
push
mov
pop
mov
lea
daa
fsubs
inc
sbb
xchg
sbb
xchg
aas
div
rcl
daa
mov
scas
and
dec
pop
dec
push
lods
test
sbb
movsl
add
mov
shr
jno
fdivp
jae
adc
out
jl
fdivs
xchg
in
sub
mov
loopne
xor
push
int3
insb
cs
repz
adc
cmp
iret
insl
cmp
fs
xchg
ror
push
cmp
xchg
imull
cmp
fnstcw
scas
sub
mov
into
xor
mov
fcoml
jmp
sbb
pushf
mov
es
mov
push
mov
fistpll
jle
inc
push
andl
scas
inc
push
cld
pop
jg
imul
cmp
in
dec
inc
fwait
test
call
into
nop
jo
int
and
dec
adc
inc
sub
scas
fnstcw
bound
jmp
fsubrs
leave
mov
jae
sbb
das
or
out
icebp
adc
jae
ljmp
sarl
mov
and
or
xchg
mov
stc
or
sub
out
test
movsl
inc
cwtl
or
iret
test
stos
mov
xor
sub
movsl
xor
insl
and
out
push
sar
scas
fcompl
add
mov
imul
insb
jo
mov
lret
or
add
inc
add
lret
lahf
pop
inc
inc
insl
ja
jle
mov
xchg
outsl
pop
cmp
ret
mov
call
and
aaa
adc
add
xchg
push
inc
mov
mov
jle
adc
sub
xorb
xchg
stos
stos
enter
test
aam
xchg
adc
mov
mov
es
loop
leave
xchg
out
filds
push
ficompl
shlb
jl
push
push
call
push
mov
adc
xor
stc
les
inc
lahf
aaa
push
ljmp
je
fbld
cmp
xchg
aas
das
mov
pop
ss
jb
cmp
jns
fisttpl
enter
icebp
sbb
push
cmp
stos
lcall
adc
pop
fsubs
ss
or
fnstsw
cmp
push
sbb
mov
adc
enter
out
repnz
test
jg
outsl
push
inc
push
jle
pop
icebp
out
xor
push
test
lahf
pop
inc
lea
sbb
movb
push
dec
andb
rolb
and
dec
test
mov
adc
jns
lahf
or
push
cmp
or
pop
push
movsb
jp
out
in
sbb
add
into
in
push
mov
add
ds
mov
data16
jmp
shll
cld
jns
jmp
outsb
push
inc
pop
pop
cld
cmpsl
sub
stc
xchg
mov
mov
xchg
push
movsl
js
ss
aad
in
or
dec
mov
push
sub
rcr
pop
inc
fsubp
outsl
inc
clc
fwait
mov
icebp
xorb
jl
xchg
fldt
orb
notb
inc
inc
out
sbb
arpl
push
bound
xchg
cmpsb
ja
rcrb
sti
or
test
pop
jp
sub
popf
test
sbb
sub
sbb
pop
stos
sub
icebp
add
cmc
xchg
cmp
xor
inc
xchg
mov
mov
pop
roll
cmp
push
fidivs
insl
js
cmp
pop
jle
push
sbb
out
push
imul
iret
mov
repnz
fs
scas
or
sub
lret
ja
push
gs
cmp
xchg
jne
xor
sarb
inc
and
into
inc
popf
jmp
xchg
shl
cmp
mov
mov
push
outsb
out
cli
jl
mull
cwtl
cli
jl
xor
sub
add
push
daa
stos
or
sub
arpl
lock
inc
pop
xchg
push
sarl
pop
push
mov
cld
inc
cmp
stos
inc
rclb
repnz
jle
shrb
and
and
sub
fidivrs
mov
ss
adc
scas
pop
les
sahf
push
lret
out
rorb
pop
cmp
sti
xchg
bound
or
inc
or
addr16
inc
test
sbb
test
sahf
js
push
xchg
cltd
int3
mov
lods
adc
lods
rorl
adc
push
sahf
outsb
mov
cli
sbb
push
and
outsb
jbe
jg
fsubr
mov
dec
outsb
mov
in
insl
dec
cmp
ja
add
push
pop
call
loop
adc
add
hlt
or
outsb
push
sbb
mov
jno
cmpsl
mov
jno
xchg
push
enter
sub
mov
xchg
adc
inc
push
add
and
xchg
mov
add
mov
in
pop
push
arpl
lahf
stos
imul
pop
jo
push
data16
cmp
ja
xchg
nop
mov
sbb
xchg
dec
inc
dec
mov
dec
mov
cmp
imul
and
push
pop
insl
outsl
fidivl
push
loope
xor
jns
stos
mov
push
shrl
and
push
cwtl
fcoml
xchg
nop
fwait
pushf
push
push
fldl
lock
repz
xchg
pop
fildl
movsb
mov
rcrb
out
xor
repz
popf
push
mov
or
mov
pop
insb
jbe
mov
outsb
adc
ret
xchg
adcb
and
aaa
mov
pop
mov
lods
pop
loopne
movsl
and
inc
pop
cmp
stos
mov
dec
lret
movd
pusha
test
mov
mov
add
push
xor
lods
xchg
out
sub
mov
in
je
sbb
mov
mov
inc
mov
mov
out
cmc
ret
push
and
iret
sub
inc
dec
popa
fwait
pop
and
pop
sahf
vmovapd
dec
ret
mov
out
fadds
aas
pop
mov
movsb
aaa
fstpt
mov
or
das
in
xor
jns
daa
mov
jns
in
adcl
lods
mov
and
aas
pop
mov
negl
and
in
out
mov
out
dec
and
pop
std
movsb
fildl
and
mov
sub
aas
test
sub
shr
mov
jl
cmpsb
jp,pt
enter
das
adc
mov
movsl
ficomps
push
repz
push
frstor
mov
sbb
cmp
push
movsl
popa
push
jne
xlat
xor
test
push
loope
dec
or
mov
bound
ffree
xor
dec
push
andb
popf
out
inc
jp
lods
out
out
lods
lret
icebp
das
pop
mov
mov
in
push
xchg
hlt
jecxz
pop
rep
cmpsl
dec
add
cld
push
cmp
jb
or
sub
test
pop
insl
push
cli
jno
mov
push
cltd
insl
and
xor
test
pop
inc
push
mov
pop
out
jns,pt
xor
pop
mov
push
mov
ret
mov
cmp
lret
gs
lods
push
adcl
mov
xor
dec
stc
test
rorl
mov
aam
fidivrl
sbb
or
mov
push
push
jl
xor
icebp
cli
pushf
inc
jne
dec
inc
jle
repnz
mov
jmp
or
movsb
aam
push
xchg
repz
push
xchg
clc
jg
cmp
rcrb
add
push
xchg
xchg
test
xchg
mov
not
lods
mov
sub
inc
push
xor
cmp
stc
call
cltd
hlt
pop
shl
cmpsb
and
mov
andnps
add
mov
xor
xor
movzbl
xchg
mov
insl
aas
push
jmp
leave
sarb
mov
adc
pop
rcll
push
mov
mov
mov
rcr
or
sbb
or
add
xor
out
cmp
xchg
cmp
pop
mov
cwtl
inc
loope
hlt
inc
rorb
addr16
pop
cmp
sbb
or
xor
mov
mov
addr16
cwtl
pop
push
lret
push
or
in
sbbb
nop
outsb
lods
das
pop
pop
nop
bound
sub
or
push
sub
fbld
clc
shlb
mov
test
arpl
mov
pusha
jbe
shll
cmc
pop
dec
popa
jmp
mov
xor
xchg
sbb
xchg
inc
aad
fwait
inc
pop
ret
jle
and
xchg
test
adc
sub
test
test
sbb
imul
jo
jno
andl
arpl
inc
mov
or
xlat
inc
mov
pop
mov
imul
in
and
xchg
jne
setl
addr16
in
les
sub
and
call
sub
stc
arpl
out
sbb
test
xchg
out
hlt
add
pop
lret
inc
movd
adc
mov
pop
xor
inc
gs
adc
jne
fisubs
rcll
jecxz
mov
roll
bound
je
mov
adc
adc
repnz
jnp
shrl
or
in
pop
filds
mov
cmpb
insb
std
adcl
push
stos
out
mov
sbb
adc
inc
ja
mov
add
aad
ljmp
adc
fmull
push
xor
test
lret
push
rcrl
cwtl
push
rcrl
xchg
enter
rcll
popf
inc
sbb
dec
out
dec
int3
pop
cltd
jp
xor
pop
pop
add
mov
sub
pop
call
and
arpl
aas
sbb
aad
add
jge
aam
mov
dec
pusha
mov
xchg
mov
mov
push
add
stos
incb
insl
hlt
sub
xchg
cmp
jecxz
jp
sbb
pop
mov
lret
pop
in
ds
xchg
arpl
pop
sub
adc
jmp
cmp
daa
loope
add
out
test
mov
ror
mov
jmp
cmpl
clc
pop
nop
pop
into
shll
js
mov
mov
imul
xor
cmp
jecxz
test
enter
xchg
cmp
pusha
sub
mov
cmp
pop
or
in
imull
jge
or
cmp
sub
adc
sbb
mov
arpl
inc
xor
repz
inc
xchg
xor
stos
mov
insb
mov
test
rcrb
pop
lock
and
xor
cmpsb
add
sbb
sub
dec
adc
xchg
jp
leave
xor
es
idivb
shrl
cwtl
mov
cmp
movsl
iret
dec
in
xor
popa
cmc
xchg
cmp
xchg
add
sub
std
sbb
jle
and
add
mov
dec
push
cmpl
mov
add
jecxz
les
fnstcw
in
pop
jo
stc
adc
lcall
lahf
push
sbb
popa
sarl
scas
mov
or
mov
pop
sbb
sbb
mov
stos
std
leave
sbb
or
ss
adc
fs
mov
out
adc
sbb
push
add
xor
cmp
ljmp
lahf
sbbl
mov
pop
insb
in
add
add
lods
xor
adc
xor
loopne
cmp
sbb
xchg
rep
js
iret
xchg
and
cmp
or
outsb
or
push
push
aam
mov
xor
dec
pop
adc
aas
icebp
aas
int3
and
mov
push
add
repz
cmp
movsb
sbb
cmp
pop
xor
xor
ljmp
xor
jg
mov
jle
lret
pushf
aam
imul
mov
jg
lock
movsl
and
xchg
stos
test
lods
pop
cld
int
movsb
xchg
adc
sub
cmp
in
cmp
lods
push
cmpsl
jge
pusha
mov
inc
scas
mov
daa
aad
cli
or
xchg
xchg
int
lahf
pop
mov
mov
inc
fwait
shrb
and
mov
outsb
repnz
dec
andb
jbe
stc
adc
and
data16
mull
sub
jp
push
cwtl
lahf
dec
subb
xchg
xor
xchg
dec
push
pop
iret
cltd
cmp
insb
mov
xchg
add
icebp
lcall
jbe
lds
and
adc
dec
aaa
add
push
sub
fiadds
jmp
pop
rorl
or
mov
fwait
insl
pushf
and
xor
pop
cmc
push
sub
sub
movsl
pop
xor
pop
nop
xorb
push
xor
dec
arpl
pop
sbb
sbb
inc
dec
jb
cs
ret
cmp
sub
icebp
mov
je
rorl
sub
inc
dec
xor
cmp
cwtl
and
push
popa
scas
mov
jecxz
addr16
jnp
mov
push
pushf
push
in
cmpsb
mov
inc
jno
sub
int
in
sbb
mov
xchg
cmpb
lds
shlb
imul
cli
mov
cmp
pop
mov
loopne
das
jp
mov
imul
arpl
xchg
mov
sub
out
pop
adc
dec
bound
sbb
leave
addr16
pop
jecxz
push
mov
sbb
inc
mov
mov
mov
xorb
and
jge
mov
in
sub
sbb
jge
push
pushf
push
push
fcoms
jbe
and
pop
dec
cli
inc
shr
cmp
xchg
mov
addr16
inc
jb
adc
call
fucomi
xchg
pushf
cmpsb
fnstsw
pop
filds
mov
sbbb
fdivl
int
stc
mov
adc
sbb
ret
popf
jne
cmp
loope
xchg
add
ljmp
pop
movsl
icebp
jle
cmc
cmp
stc
setp
lock
cmp
out
xor
outsl
mov
push
push
push
dec
imul
in
lahf
sbb
adc
mov
sub
and
pusha
pusha
or
fs
or
push
and
call
jnp
pop
mov
mov
shll
pop
mov
and
shlb
or
inc
mov
addr16
sub
ljmp
push
fs
repnz
es
int
sub
xlat
bnd
sbb
in
pop
in
in
mov
jne
add
xchg
fbld
mov
adc
dec
out
dec
clc
jb
sbb
xor
icebp
mov
fdivrp
push
jb
ja
mov
mov
aaa
cmp
push
jbe
xor
dec
adc
lods
cmp
ret
sub
lds
push
and
xchg
imul
movsl
jo
mov
mov
mov
movsb
jns
sub
ds
fs
movsb
push
test
xchg
aas
xchg
int
shl
in
test
mov
rcrl
fwait
mulb
insb
sahf
add
jno
outsl
stos
fwait
jae
mov
mov
jl
pop
out
sarl
and
xchg
cld
mov
sti
jo
dec
lods
imul
fcompl
inc
jmp
inc
rol
pop
xchg
popf
xchg
push
daa
add
mov
mov
mov
xlat
jbe
xchg
stos
pop
push
in
nop
out
jle
mov
mov
pop
mov
aam
add
test
gs
mov
loop
shrl
and
das
inc
pop
loopne
push
push
testb
push
cmpsl
mov
mov
mov
add
mov
xchg
popf
jb
mov
adc
inc
push
mov
nop
testl
push
call
sbb
mov
subb
or
aad
sub
cmp
lret
inc
mov
push
leave
inc
test
ja
or
mov
mov
cld
lret
lret
dec
mov
jge
cmc
sarl
pop
xchg
cmpsl
fbld
imul
pusha
cmp
pop
add
cmpsl
into
and
pop
push
popf
rorl
push
outsl
pop
inc
xor
inc
inc
insb
push
out
imul
dec
lods
sub
pop
push
dec
incb
xchg
adc
test
jbe
aas
mov
mov
cli
mov
in
and
into
mov
fs
aam
popf
or
aaa
subb
xor
shr
pushf
adc
jmp
fsub
jmp
and
mov
shlb
mov
test
and
mov
mov
pop
sbb
cmp
out
data16
pusha
stos
sbb
push
push
xorb
fcoms
adc
mov
push
inc
in
and
xor
cmpsb
sub
mov
sbb
mov
call
test
rcrl
rcll
test
mov
jl
daa
xor
rcll
cs
mov
mov
pop
sub
jle
jns
mov
cmp
mov
jg
popf
sub
enter
sahf
insb
rclb
pop
sbb
push
add
nop
mov
pop
repz
inc
add
mov
xchg
mov
test
lret
mov
stc
add
sub
andb
add
mov
pop
mov
cld
shl
mov
sbb
enter
std
lcall
roll
pusha
aaa
es
lcall
pop
jo
inc
add
sbb
in
fistpl
mov
pop
mov
sbb
push
xor
mov
add
or
adc
shrb
inc
adc
mov
and
roll
sbb
mul
or
rcrl
jo
js
add
add
addr16
mov
cmp
add
aad
cwtl
aam
mov
mov
dec
adc
lgs
fmuls
xchg
xchg
add
inc
sbb
mov
jecxz
xor
or
xor
push
out
loop
sub
xor
and
iret
push
lcall
xlat
dec
sub
fists
adc
imul
addr16
jno
out
test
mov
ds
es
push
in
in
xchg
mov
mov
cmp
fwait
cmp
xor
jp
outsb
pop
mov
xchg
and
mov
inc
test
jg
adc
int
mov
sub
cmp
pop
push
jmp
push
pop
int3
sbb
push
xchg
jmp
dec
ret
mov
sbb
cmp
out
or
jne
pop
cs
adc
filds
cmp
sub
divl
xchg
pop
adc
xor
adc
jle
push
lahf
mov
out
add
mov
pop
push
fdivl
sub
pop
sar
fsubs
pop
sub
out
call
mov
imul
outsl
int
outsl
xor
jle
mov
shll
add
sub
insb
mov
popa
adc
shr
mov
and
mov
or
nop
ljmp
out
popf
sub
mov
clc
ror
dec
mov
loope
pop
shlb
jbe
fisttps
adc
mov
repz
inc
inc
jl
test
jo
jge
inc
push
mov
jbe
popf
sbb
mov
jae
inc
paddusb
stos
mov
add
cwtl
mov
dec
lcall
jns
mov
dec
push
xor
pop
inc
out
push
stos
pop
inc
lds
sbb
lret
enter
jno
cs
mov
out
sub
push
push
sbb
mov
adc
les
add
push
nop
adc
addb
mov
mov
xlat
dec
lret
daa
rorb
mov
insb
enter
add
mov
xor
adc
dec
divl
add
mov
sahf
cmpsl
loop
inc
xchg
gs
rcrl
insl
mov
add
cwtl
aas
mov
pop
rclb
adc
xchg
and
sub
js
pop
jge
adc
jb
xor
jbe
lahf
sub
into
rolb
jge
scas
mov
ret
out
inc
sub
call
in
inc
adc
lea
and
dec
sub
mov
dec
dec
insl
cs
sub
inc
jnp
addr16
jle
lret
and
rep
scas
decl
cmpsl
or
sub
add
rorb
sub
loope
adc
lods
add
cmp
sub
ret
xor
dec
int
jle
outsb
and
xchg
cli
pop
into
testb
push
loope
push
or
fisttps
pop
je
add
test
pop
pop
xor
in
shrl
push
mov
enter
xchg
inc
std
mov
inc
dec
sub
lds
or
adc
mov
out
mov
xor
pop
jmp
pop
mov
mulb
jns
xlat
rorl
inc
pop
mov
mov
mov
filds
inc
or
pop
or
dec
rsm
adc
ficomps
add
in
push
outsl
test
iret
adc
mov
nop
lret
scas
mov
mov
adc
stos
mov
push
test
ds
je
jb
ss
push
mov
adc
push
xor
adc
xor
test
cs
aaa
leave
adc
out
mov
insb
mov
ds
iret
push
inc
pushf
and
lret
mov
mov
dec
rcrl
sbb
in
rcrb
mov
outsb
movsl
sub
call
lcall
stos
scas
jbe
loope
loopne
and
mov
cld
pop
dec
fmuls
cmpl
in
das
jge
inc
pop
pop
ja
lea
or
arpl
adc
jmp
mov
int
jno
outsl
pop
aam
test
ret
hlt
mov
mov
nop
lods
inc
cltd
and
andb
mov
xor
xor
lods
std
into
cmp
push
out
dec
fadd
push
pop
add
fldl
adc
imul
and
sahf
je
cmp
dec
jg
int
and
les
mov
mov
cmp
je
stc
lret
inc
pop
xchg
mov
stos
mov
cs
out
jne
pop
xor
scas
jb
test
test
and
adc
push
jo
outsl
pusha
push
pop
in
jo
out
cmp
xchg
int
jle
pop
xchg
test
add
xor
cmp
ss
and
and
xchg
ret
call
sahf
aaa
push
dec
js
lret
sub
jns
shll
or
mov
fildll
inc
adc
pop
jo
pop
xchg
cmp
out
iret
jne
decb
out
dec
sub
cmp
push
mov
jo
mov
jg
lock
jno
xchg
xor
xor
xor
andl
push
lea
xor
lcall
add
pushf
cmc
out
xor
lods
mov
outsb
mov
pop
fdiv
fmuls
push
stc
inc
loopne
pop
fldenv
pushl
stos
push
mov
imul
dec
mov
lock
lock
stos
dec
mov
pop
fstsw
jle
cs
fsts
jecxz
outsl
sbb
ja
std
xchg
cmp
add
add
ljmp
jbe
jae
lret
push
jge
dec
imul
mov
test
push
cmp
xlat
insb
out
or
mov
repnz
or
adc
mov
xor
out
ficomps
mov
jno
cmp
xor
and
xchg
arpl
fldl
mov
sahf
lahf
in
pushf
or
movsb
cmpl
and
imul
and
inc
inc
jge
fstps
mov
xor
imul
dec
popf
stc
sub
jae
into
je
nop
fdiv
mov
jge
add
decl
adc
sbb
insb
bt
push
cmpsl
leave
xchg
xchg
adc
mov
popa
xor
or
orb
pop
fiaddl
xchg
inc
sbb
dec
jnp
jo
mov
cmpsb
insb
xor
test
arpl
mov
jnp
mov
sar
pop
mov
push
andl
and
not
adc
int
inc
sbb
xchg
xor
aam
xlat
sub
xchg
cs
ljmp
xor
pop
shl
mov
mov
loop
stos
pop
sbb
out
fisttps
jg
jmp
sub
shll
mov
pop
leave
jge
push
fidivs
shll
jns
sub
xchg
jmp
jbe
jo
dec
push
xchg
cwtl
sbb
nop
emms
mov
arpl
rep
xchg
es
dec
stos
stos
mov
cmpsb
rclb
popf
xchg
sarb
jns
xchg
push
into
pusha
test
imul
fsubs
fisttpl
addr16
shl
repz
xchg
icebp
and
push
push
in
loope
dec
dec
shll
imul
xor
sub
filds
sbb
inc
mov
xor
stc
dec
add
mov
repz
loopne
int3
ret
cmp
movsl
push
cmp
fimull
mov
jnp
xor
rorb
addr16
jne
push
mov
js
push
das
insl
pushf
test
or
ds
or
or
pop
popa
xchg
fdivrs
push
int3
js
out
dec
into
es
dec
loop
xchg
loop
in
jno
inc
push
inc
int3
imul
movl
sbb
popa
push
push
pop
push
ds
xchg
addr16
test
loope
call
dec
outsl
gs
xorl
fnstsw
lods
cmc
xchg
int
and
ss
aaa
shlb
sarl
or
and
dec
mov
fdivrl
sub
mov
mov
pop
test
mov
or
jns
pop
adc
scas
orb
mov
jns
into
cmp
aas
xor
or
fistl
out
pop
jno
cmc
mov
mov
mov
cltd
sbb
push
xchg
or
addr16
out
sbb
jge
adc
lret
cld
aad
jecxz
loop
mov
jb
int3
ss
lds
xor
rcl
leave
cwtl
pop
mov
daa
mov
sub
xor
pop
in
aad
subl
mov
pop
xor
addl
mov
or
ljmp
fwait
mull
jmp
adc
cmp
cmp
in
lret
xor
sbb
or
sbb
mov
or
ret
add
rcl
dec
or
les
xchg
es
lea
push
adc
push
push
add
mov
loope
cmp
jmp
mov
jle
add
lds
pop
mov
pusha
push
and
movsb
sarl
rclb
fnstcw
sub
lcall
fs
and
jbe
jg
lret
sti
mov
mov
dec
int
psubb
loopne
xchg
adc
push
stos
jmp
mov
psubusw
pop
sahf
inc
mov
pop
ret
mov
stc
adcb
xchg
nop
insl
cmp
rol
or
inc
iret
fs
bound
pop
push
pop
movsl
jg
ljmp
xchg
insl
inc
jp
psrlw
jbe
jl
cmpsl
sti
mov
add
shlb
sub
xchg
pop
sbb
mov
sti
ja
push
sarb
in
lcall
or
aas
and
out
js
scas
jp
sub
dec
enter
mov
leave
pop
fimuls
lret
stc
sub
pop
stc
in
cmp
orl
xchg
out
out
mulb
lahf
clc
mov
push
mov
test
mov
mov
int3
xor
lods
xor
jle
xchg
stc
ret
push
cld
xor
rorl
jns
mov
mov
stc
mull
xor
dec
cli
sub
lahf
rcrb
jle
pop
jnp
xchg
sub
adc
mov
les
mov
icebp
xor
inc
mov
cmpsl
out
insb
sbb
jae
orb
or
xchg
xor
inc
mov
lea
test
dec
stos
sub
cmp
mov
mov
xchg
jbe
dec
mov
movsb
dec
shll
data16
in
cwtl
sbb
xchg
mov
jbe
mov
inc
pushf
jbe
js
mov
testb
sub
inc
popf
loope
add
jmp
jp
mov
lcall
mov
test
dec
push
inc
or
fbld
jo
xchg
vmovq
cli
pop
nop
mov
push
ds
mov
iret
in
repz
or
add
cld
fwait
mov
pop
xor
cmpsl
fwait
arpl
mov
mov
in
xor
push
push
loop
mov
mov
or
imul
and
pushf
cmp
ret
xchg
stc
pushf
mull
pop
push
mov
push
push
data16
out
sti
hlt
adcb
insl
lcall
sub
dec
outsl
cltd
dec
lahf
inc
mov
add
xchg
inc
push
pop
or
pop
and
xor
jnp
push
push
add
cs
lahf
cmp
fwait
pop
sbb
cmp
sbb
sti
js
out
mov
jnp
or
pop
jb
sbb
fcmovnbe
bound
xchg
push
rclb
push
jg
pushf
pop
jp
mov
sbb
mov
jns
pop
mov
cld
adc
bound
cmp
lret
mov
ret
sbb
pop
push
fcompl
test
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
das
mov
bound
pop
bound
sub
inc
dec
sarl
aad
mov
sbb
xor
sub
dec
sahf
add
dec
insl
add
out
mov
cld
jns
or
push
pop
outsl
push
lret
push
fs
xor
pop
push
adc
xor
shll
das
jns
pop
cmc
inc
adc
sub
int
xor
out
jg
xor
sbb
or
mov
out
mov
jle
xchg
add
leave
mov
mov
add
aam
sub
xor
jmp
sbb
push
xchg
loop
sub
pop
cmc
push
iret
inc
adc
ret
pop
push
adc
das
ss
cmp
jae
sti
pusha
and
out
lock
inc
inc
cmp
pop
pop
dec
je
add
adc
es
mov
cmp
aad
fsts
call
sub
jecxz
fldl
ja
add
jnp
mov
push
add
lods
xchg
pop
ret
clc
ja
popf
jmp
adc
into
mov
sti
data16
sbb
push
or
hlt
cld
stos
pop
out
repz
int3
push
fdivl
add
push
push
in
mov
jbe
add
lods
aas
sub
inc
cmp
in
faddl
jae
popa
stos
daa
pop
jg
fcomip
rclb
dec
push
subb
mov
sbb
pcmpgtw
data16
mov
sub
div
add
cmp
jmp
mov
in
dec
imul
mov
pusha
cmp
push
sbb
dec
fwait
mov
dec
out
scas
inc
dec
xchg
and
btc
iret
dec
jg
arpl
cltd
test
bound
ret
lods
outsl
mov
iret
adcl
shll
cmp
xchg
mov
mov
xchg
sub
pop
jge
lea
inc
jg
adc
out
xor
adc
cmpsb
mov
lahf
popa
jne
and
pushf
aad
inc
mov
cmp
js
aaa
jnp
push
outsb
ret
xor
fiadds
inc
sti
loope
gs
or
and
das
aam
push
adc
jmp
call
lahf
dec
sbb
bndstx
mov
clc
adc
xchg
jp
cmpsb
bound
xor
sub
cltd
fisubl
inc
inc
sti
shlb
xchg
push
cmp
pop
sbb
xchg
mov
cltd
mov
add
xchg
mov
xor
or
xorb
xor
push
dec
mov
mov
sbb
jne
push
push
outsl
or
aaa
je
divl
add
mov
inc
push
mov
lds
test
negl
addb
je
inc
mov
add
mov
inc
out
inc
mov
fdivs
jecxz
inc
movd
adc
loop
fcom
push
fdiv
push
repnz
adc
jae
dec
add
in
jae
in
in
outsb
lahf
push
sub
movsb
movsl
dec
movsb
ss
ror
daa
loope
mov
rcrl
leave
add
jbe
xchg
cmp
shlb
test
hlt
lahf
xor
orb
jae
ffree
xchg
pushf
lods
inc
and
enter
xor
cmp
add
dec
pushf
std
pop
mov
dec
mov
rclb
push
push
jmp
mov
iret
mov
inc
setl
insb
cli
mov
pop
mov
in
pop
push
sub
aam
push
lods
cmp
lret
daa
and
addr16
sub
dec
test
fcoms
inc
xor
adc
xor
adc
bound
push
testb
mov
or
inc
mov
ficomps
xchg
pushf
mov
jge
fdivrp
xchg
cmp
mov
sub
and
fmull
pushf
push
xchg
outsb
mov
adc
jge
push
sub
es
pmulhuw
hlt
test
push
call
lods
insb
shrb
adc
cmpsb
inc
add
add
dec
dec
jl
int
jg
push
xchg
push
insl
ljmp
xor
int3
pop
jns
cmpsb
es
jne
jecxz
mov
push
in
sub
loop
xor
aam
loopne
adcl
pop
and
int3
xchg
imul
xor
repnz
add
jo
mov
mov
call
dec
lock
mov
or
rorb
pop
aad
and
mov
out
outsl
insb
pusha
xor
jp
sbb
repnz
aad
cmpsb
xchg
call
sub
cld
mov
inc
mov
sti
cmp
in
push
add
loope
mov
mov
add
into
addr16
aam
mov
ret
xchg
or
mov
adc
mov
dec
pushf
iretw
or
fwait
insb
imul
and
pop
xchg
push
lcall
xor
mov
mov
mov
jns
adc
mov
sub
xor
push
mov
cmp
add
enter
cmpsb
sti
repnz
mov
div
ficoms
jecxz
insl
rolb
mov
inc
sbb
push
mov
jmp
inc
jbe
xor
das
loopne
test
scas
dec
lret
or
adc
repz
dec
in
xchg
fisubl
test
push
adc
aam
sti
arpl
push
mov
insl
insb
addl
nop
pop
sbb
lcall
mov
inc
subl
dec
adc
subb
pop
mov
ret
sar
push
arpl
jo
gs
pop
outsb
cmp
mov
push
std
fsubrs
psrlw
and
sbb
je
mov
aas
out
loopne
adc
out
subl
sbb
loop
mov
sbb
push
xor
jnp
mov
out
or
ds
repz
xchg
mov
std
fldenv
sub
gs
sbb
add
pop
les
lahf
outsb
rcrb
and
ljmp
fisttpll
pop
push
loopne
mov
add
loop
fnsave
push
sbb
int
cmpsb
cmp
je
and
xchg
int
test
call
lret
stc
ror
mov
movsb
nop
or
and
mov
dec
lea
or
mov
mov
fwait
arpl
xchg
mov
mov
lret
pop
jl
mov
mov
pop
lahf
ljmp
add
adc
in
mov
aas
and
pop
scas
mov
pop
mov
cmpl
mov
dec
jmp
xor
dec
jae
or
int
popf
js
fnstenv
in
xchg
out
xor
jge
jb
mov
pusha
leave
or
push
xor
jmp
daa
xchg
and
test
mov
outsb
add
cld
fidivs
mulb
cli
pop
aaa
lret
loope
push
sbb
push
mov
testl
mov
lock
and
daa
lcall
lods
enter
aas
rcll
ret
ljmp
out
mov
mov
add
aaa
aas
lock
ret
jne
mov
xor
jmp
add
ss
and
scas
xor
jo
push
fcmovnu
mov
ficompl
mov
js
xchg
cmpsb
dec
pop
outsb
dec
fninit
jl
xchg
and
or
dec
outsb
adc
movsb
xor
cld
pop
popf
in
mov
xchg
pop
iret
out
popl
mov
mov
or
movsl
and
mov
xor
das
mov
cld
loope
dec
cmp
addr16
test
imul
ljmp
mov
retw
adc
mov
ret
in
adc
or
cmpsl
test
or
cmp
jbe
das
lds
out
add
clc
mov
mov
subb
dec
int3
int3
repnz
inc
sarb
fnstcw
push
mov
dec
insb
aaa
add
rclb
test
scas
push
fiaddl
mov
fdivl
nop
movsl
addr16
imul
inc
mov
or
push
dec
mov
hlt
jbe
out
xor
fsub
mov
or
test
mov
mov
inc
mov
jb,pt
push
lods
cs
ja
movsb
ret
mov
aam
xchg
int
mov
xor
push
jns
mov
and
arpl
sar
add
rcr
sbb
or
out
inc
cmpsl
adc
rcrb
cwtl
mov
xchg
sbb
push
xchg
push
gs
lret
scas
add
hlt
or
lahf
lret
xor
data16
xchg
push
push
mov
iret
sbb
jle
xchg
pop
aaa
test
les
icebp
ljmp
push
das
jns
in
jnp
cmp
test
and
cmp
orl
sahf
out
push
mov
cmp
iret
subb
sub
scas
fcmovb
mov
fimull
je
nop
sub
incb
test
js
xchg
insb
ds
inc
or
mov
mov
cmp
add
jnp
xor
cli
je
mov
mov
inc
jl
mov
mov
insb
add
in
push
mov
data16
adcl
test
mov
xor
xchg
xacquire
cli
sub
pop
mov
enter
push
push
mov
cltd
xchg
inc
mov
fbld
cltd
add
mov
int
pop
xchg
lock
mov
mov
iret
or
sub
adc
jecxz
push
gs
xchg
mov
sbbb
add
sbb
push
add
xchg
ret
test
jl
sbb
rol
jbe
ret
aam
adc
test
pop
mov
cltd
sarl
dec
jg
das
xchg
push
ja
pushf
and
cs
sahf
push
add
daa
adc
test
shll
inc
pop
aam
popa
pop
jp
int3
sbb
mov
jle
add
ds
xchg
adc
scas
rclb
jge
and
xchg
loopne
mov
lods
mov
push
dec
lcall
in
ja
xchg
and
loope
lods
mov
test
shrl
adc
jmp
sar
out
ja
in
hlt
rcr
je
pusha
shl
adc
sub
inc
imul
in
addb
pop
stc
jne
push
pop
cmpsb
dec
out
gs
jno
lahf
leave
test
mov
mov
aaa
push
ffreep
mov
sti
outsb
mov
push
pop
and
xchg
mov
mov
outsl
cmp
sbb
mov
fnstsw
jge
push
mov
repz
dec
rol
rcl
jmp
jecxz
test
push
or
repz
xor
test
in
lock
add
rcrb
bound
stc
cltd
into
push
push
xchg
test
cmp
push
arpl
jg
xor
and
rsqrtps
jno
add
sar
rcr
rorb
daa
cli
lds
xlat
nop
aas
test
jp
push
pop
popf
mov
jbe
fadds
mov
test
in
mull
mov
mov
out
int3
pop
dec
add
push
loope
sti
out
bound
loope
ja
and
pop
lock
clc
movsb
xchg
xchg
daa
out
add
orb
fwait
lock
es
push
sti
sahf
test
aas
in
add
popa
xchg
pop
fimull
sarb
push
jle
push
and
adc
xchg
xlat
pop
add
fadds
iret
fiaddl
jae
lods
jmp
add
jle
loope
enter
call
mov
scas
aaa
inc
mul
ret
adc
sbb
and
cmp
jmp
add
inc
nop
and
cmp
in
ret
xor
out
dec
pop
sahf
mov
cmp
mov
daa
lea
cltd
push
ljmp
mov
sti
add
inc
mov
cmp
inc
arpl
fdivrl
lods
xor
pop
std
adc
cmp
neg
ljmp
mov
mov
aaa
fistps
ret
das
movsl
std
jge
and
sub
push
jns
scas
cli
and
fimull
dec
imul
sub
mov
or
adc
dec
and
or
call
add
jl
cmpsl
mov
inc
mov
popf
aaa
xor
cmpl
and
iret
xchg
mov
or
cmpsb
fcmovnu
jbe
add
push
xchg
jae
dec
sub
push
push
das
pop
movsl
insb
add
pusha
mov
xchg
push
rcrl
and
sub
stos
jo
xchg
iret
xor
xor
and
loop
cmp
lret
push
scas
jbe
cs
fnsave
stos
push
pop
int
and
nop
cmp
arpl
sbb
jmp
dec
xchg
push
or
mov
add
mov
adc
cmove
jmp
lods
fidivrl
or
das
test
mov
scas
pop
ds
cmp
fwait
xor
push
mov
imul
dec
aad
xchg
and
and
bound
cs
add
mov
jg
jne
add
out
lods
movups
mov
loop
jmp
add
pop
pop
mov
xchg
mov
mov
roll
je
cmpsl
xchg
xlat
cmpsb
xchg
jmp
cmp
loop
repz
push
push
test
sbb
lods
dec
mov
arpl
ja
inc
add
fs
xor
dec
mov
bound
addr16
dec
sub
sahf
arpl
or
int3
mov
xchg
in
mov
and
stos
xor
lds
mov
mov
push
in
dec
mov
mov
mov
mov
out
aaa
repnz
add
mov
add
repz
ficoms
mov
pop
mov
aam
and
xchg
xor
xchg
xchg
lods
jnp
sub
cmp
enter
popf
aas
or
icebp
mov
sub
xchg
pop
dec
push
cmpsl
push
xor
lds
rep
push
loopne
sub
dec
sub
mov
jne
test
cmp
movsl
or
cmc
fldl
xchg
lret
mov
xchg
sbb
xchg
shrl
pop
mov
test
repz
mov
into
sbb
pop
ja
lock
or
fcmovnu
pop
jne
in
mov
notb
movl
lea
mov
in
sarb
sti
pop
ds
pop
pop
stc
sbb
sub
mov
jcxz
es
xor
arpl
pop
inc
dec
xor
inc
mov
or
jbe
sar
movsb
and
cwtl
jl
loopne
jmp
test
lods
add
repz
cmp
data16
das
mov
mov
arpl
es
mov
ret
cmc
test
ds
jl
add
and
and
out
sub
nop
lret
mov
push
mov
mov
pop
pop
test
mov
xchg
cmc
pop
cmp
popf
addr16
cmp
loop
mov
idivl
cmp
mov
cltd
scas
loopne
in
fidivs
cli
divb
call
lods
xchg
xchg
inc
les
mov
lods
lods
sbb
outsl
pop
jp
lret
loopne
test
stos
sti
mov
xlat
gs
orl
mov
jae
pop
fistps
les
cltd
adc
pop
mov
jp
mov
mov
das
xorl
xlat
notl
mov
xchg
addr16
lods
jns
mov
mov
sub
loop
lahf
test
icebp
andb
call
mov
mov
test
fsubrl
mov
scas
cld
icebp
in
xlat
stc
out
cmp
int3
hlt
cmp
add
outsb
out
flds
fdivrp
orl
fdivl
cmp
push
imull
mov
loope
mov
imul
loopne
xchg
cmp
dec
add
or
popf
xchg
xchg
decl
cmp
scas
and
repnz
cmp
jns
dec
lea
cmp
or
add
xchg
arpl
insb
pusha
jmp
sbb
push
push
or
lahf
mov
inc
gs
adc
aaa
adc
push
xlat
ror
test
push
mov
addr16
xchg
bound
lahf
inc
clc
inc
loopne
rcrb
or
rorb
adc
cmp
int
add
cmpsb
cmp
clc
lock
pop
mov
int
push
dec
sbb
shlb
test
xchg
push
xchg
ja
pop
sub
mov
aaa
sahf
lods
push
or
cmp
ss
aas
mov
lods
adc
fsts
les
mov
jge
xorl
sbb
loopne
les
lcall
jo
inc
adc
inc
pop
aam
jmp
cmc
add
push
aam
cmpsl
iret
inc
ds
jo
and
inc
jmp
add
sub
test
aaa
xchg
jbe
hlt
clc
addb
jmp
aad
sub
cmp
dec
mov
xchg
daa
adc
into
in
js
lea
jns
aaa
or
cld
jecxz
inc
dec
call
or
add
data16
shl
or
xor
pop
add
fs
rcll
icebp
enter
cmpsl
xor
xchg
and
out
push
mov
cmp
or
sbb
xchg
lock
mov
mov
pop
mov
mov
jl
sbb
repnz
xchg
cmp
pushf
jmp
sti
or
jbe
out
push
outsb
into
jp
adc
push
in
mov
jl
ds
push
jmp
ficoml
enter
je
clc
stc
test
arpl
add
imul
out
and
test
sbb
sbb
jl
adc
out
push
filds
lds
mov
loop
xchg
cwtl
mov
mov
mov
mov
jb
lods
pop
cmp
in
gs
in
sub
fs
inc
ljmp
lods
dec
sti
sbb
xchg
into
inc
dec
jns
mov
scas
add
stc
aaa
jnp
mov
add
push
fisubrl
outsb
mov
add
mov
outsl
pop
out
fildl
or
pusha
pop
jmp
popf
cli
scas
or
cmc
inc
movsl
ret
pusha
jnp
jo
repnz
in
cmp
jo
push
xlat
outsb
inc
jnp
jle
mov
test
std
inc
sub
cmp
add
and
add
push
add
arpl
push
movsl
mov
inc
rcrb
xor
mov
outsb
mov
lret
cltd
pop
enter
addr16
in
ss
jle
mov
and
mov
cwtl
sbb
jle
mov
fistps
dec
aaa
call
inc
nop
cmc
pop
popa
cmp
pop
in
push
mov
cmp
out
hlt
mull
xchg
cmpsl
mov
jbe
push
xor
push
push
mov
inc
mov
cmc
dec
adc
int3
sub
mov
cmp
fdivs
dec
mov
pop
push
lret
iret
xor
xchg
mov
les
pop
or
sbb
or
leave
int
add
mov
mov
shll
jno
cmc
xchg
ja
pop
pop
pop
adc
add
pop
mov
push
and
and
adc
in
inc
mov
sub
push
mov
push
dec
idivl
popa
dec
mov
mov
xchg
shrl
cmpsl
sub
cld
in
das
adc
test
lods
jbe
and
pop
hlt
lods
je
loopne
cli
bound
and
add
xor
mov
lret
cmp
sbb
in
lods
dec
add
daa
ret
fs
dec
inc
add
push
arpl
cmp
and
es
pushf
punpcklbw
rol
aaa
cmp
xor
push
adc
cmpb
jne
xchg
inc
int
pop
push
lods
imul
shlb
je
inc
mov
out
movsb
sub
cmc
xchg
rclb
cmp
inc
fs
decb
mov
dec
xor
fsubl
sub
and
leave
pop
dec
mov
arpl
fsubrl
and
pop
cs
std
mov
push
movsb
lods
mov
outsl
lds
push
pop
fsts
stos
les
sbb
loope
das
jle
insb
pop
sarb
std
loopne
rcrb
outsl
dec
in
ret
int3
cmp
pop
add
outsb
nop
pushl
imul
ficompl
inc
repnz
pop
iret
in
ret
mov
stos
mov
pop
repz
pop
xor
sbb
setne
sbb
mov
mov
ficompl
mov
lods
cmp
push
loop
out
adc
lds
fisubs
test
popf
fwait
xchg
mov
icebp
jl
std
mov
ljmp
idivl
lret
insb
inc
pop
sub
sbb
sub
add
adc
shl
jmp
and
mulb
pop
leave
mov
sti
sti
or
lret
adc
call
sub
ljmp
dec
emms
pop
aaa
out
and
mov
jno
arpl
cmp
nop
nop
push
in
xor
mov
fwait
data16
loope
sbb
push
pushw
mov
push
mov
es
sbb
lds
fwait
cmc
pop
or
mov
nop
and
pusha
scas
out
mov
inc
adc
or
in
dec
inc
iret
inc
aam
js
and
add
jmp
in
arpl
add
inc
stc
sbb
ret
jbe
mov
or
movl
adc
jg
pop
fwait
pop
pop
fistpll
divl
dec
bound
fwait
sbb
inc
pop
out
push
lcall
lret
fistpl
cmp
repz
fdivr
divl
inc
dec
xchg
int
rcrb
test
push
xor
inc
movsl
jno
sbbl
leave
xchg
xor
das
test
mov
mov
xchg
mov
outsl
cmp
setl
add
into
stos
mov
pop
xchg
repnz
bound
inc
adc
inc
jno
sbb
inc
mov
stos
add
xchg
cltd
jmp
xchg
pop
xchg
in
loope
cmpsb
imul
loop
xchg
lea
sub
jp
and
pop
sub
push
dec
insb
pusha
jmp
ds
mov
lret
mov
jecxz
out
into
ja
adc
dec
sub
cmpsb
xchg
fistl
loop
ret
ss
or
mov
leave
push
idiv
iret
adc
fsin
mov
push
push
int
jle
popa
stos
ljmp
pop
daa
std
enter
adc
imul
add
or
mov
push
mov
pop
ja
xchg
mov
and
rorl
jbe
insl
js
into
adc
sti
aaa
fwait
pop
xchg
cltd
lock
mov
imul
xor
sbb
jge
sbb
xchg
lods
jns
xchg
mov
fldpi
cmp
cld
pop
inc
lahf
push
jecxz
sub
mov
scas
add
xorl
stos
pop
xor
jecxz
mov
adc
pushf
sti
jmp
mov
sarb
js
lcall
ud0
stos
leave
test
inc
movswl
lock
xchg
jbe
lahf
movsb
lret
js
push
xchg
shrb
ljmp
cmc
in
int3
jns
je
lahf
js
into
hlt
cmpsb
rclb
xchg
js
cmp
pop
sub
xchg
xor
bound
nop
dec
inc
sbb
ss
pop
clc
xchg
jno
push
cmpb
adc
int
push
repnz
xor
fbstp
sbb
sub
fnstsw
ror
mov
pop
inc
out
std
push
lret
cmp
call
stc
inc
clts
add
mov
jo
push
jbe
xor
sub
and
frstor
outsb
mov
inc
test
push
rcrl
test
sbb
mov
fiaddl
xlat
pop
mov
cmpsb
mov
mov
shl
jmp
push
cltd
adc
dec
and
outsb
lahf
jbe
add
enter
cltd
pop
decb
test
sbb
adcl
mov
pusha
or
lcall
mov
push
jbe
dec
js,pt
test
das
mov
mov
imul
push
int3
cmp
ljmp
sbb
aad
sub
adc
int3
pusha
and
mov
loop
pop
inc
bound
ret
je
ljmp
jl
xor
mov
iret
or
dec
sti
fdivrl
add
repz
fadds
mov
and
inc
and
dec
ret
mov
dec
push
mov
and
mov
insb
mov
fldcw
pushl
cmp
ret
pop
add
pusha
ja
fcomi
pusha
cmp
push
int3
test
or
adc
stos
hlt
sub
shll
fnstenv
fnsave
es
dec
mov
notl
packsswb
add
shrb
mov
and
adcb
loopne
xor
lods
sub
add
fnstenv
out
cmpsb
cld
mov
adc
arpl
sbb
call
popf
ds
fs
cwtl
cmp
sbb
xchg
stos
out
loopne
adc
movsb
outsb
push
shrb
stos
cmp
cs
sub
pop
addr16
je
je
in
pop
jne
jb
mov
test
push
lret
jno
lret
inc
push
pop
and
dec
mov
sbb
test
add
cmp
roll
sub
push
cmp
add
pop
pminsw
test
push
ret
mov
mov
mov
push
mov
xchg
rclb
cmpsl
jne
cltd
pop
mov
loopne
in
stos
lds
or
in
jl
in
cmpsb
out
lahf
test
stos
and
loope
dec
mov
inc
pop
adc
mov
inc
add
imul
out
fdivs
adc
mov
or
inc
repz
xchg
mov
nop
ljmp
xchg
and
sarl
fisubl
xchg
std
dec
mov
fldl
jae
adc
addr16
xchg
ja
testb
loop
outsl
mov
ja
aam
jge
mov
stc
dec
mov
sub
rclb
js
sbb
push
jl
jle
das
mov
mov
sub
decl
fidivs
outsb
mov
and
pushf
push
add
xchg
xlat
inc
addr16
jmp
mov
sbb
add
adc
inc
test
repz
lods
sbb
add
out
mov
inc
dec
dec
test
mov
xchg
cmp
inc
and
cmp
gs
jg
pop
sub
add
sbb
sarl
in
mov
pop
decl
test
cli
mov
stos
cmp
ja
nop
sbb
ljmp
add
pop
call
inc
es
ss
lret
pop
or
jns
xor
sbb
mov
imul
movsb
in
mov
xorl
ss
push
outsl
mov
call
xchg
adc
xlat
mov
rcll
test
addb
sub
aas
decl
xchg
jbe
jo
mov
insl
clc
bound
dec
pop
pop
mov
sub
loopne
es
mov
mov
mov
data16
jge
rcrl
sub
mov
test
sbb
pusha
out
clc
xorb
lds
push
push
or
scas
clc
jo
repz
mov
stos
mov
cmp
hlt
test
and
or
ror
sbb
outsb
out
jno
ja
push
xchg
daa
sbb
xchg
fidivrs
int3
fs
inc
stos
bound
push
faddl
repz
add
mov
dec
popf
mov
ret
lret
adc
cwtl
jge
int
mov
mov
jnp
mov
stos
mov
mov
adc
dec
aad
dec
push
xchg
xchg
push
mov
test
vmovlps
in
push
int3
xchg
mov
sub
inc
sub
sbb
aaa
lret
fidivl
cltd
adc
addr16
cmpsl
lret
jge
sub
sbb
mov
pusha
dec
fistl
dec
sub
lods
xor
hlt
pop
test
ss
shr
sbb
dec
push
sahf
sbb
lret
mov
scas
iret
loop
jl
scas
fbstp
and
addr16
shrb
jecxz
sub
xchg
out
out
mov
add
ficoms
ja
xor
cmc
lods
mov
fs
xchg
or
sbb
xchg
mov
hlt
pop
rorl
mov
sub
push
xchg
insb
cmpsb
sti
subb
je
xchg
inc
repnz
pop
cbtw
je
push
push
flds
pop
outsb
pop
jo
insb
and
or
popf
mov
xor
sbb
and
popa
jo
lahf
jae
stos
xor
xchg
pop
dec
stc
int
lahf
pop
sbb
lahf
pop
mov
xchg
add
sub
or
sbbl
xor
je
add
dec
xchg
xchg
jmp
adc
in
test
enter
or
pop
sbb
dec
mov
stos
les
lcall
adc
std
and
fldt
add
das
and
movsl
push
loop
sbb
add
push
jbe
cli
call
adc
sbb
inc
inc
sbb
mov
or
xor
daa
mov
fistpll
xor
pushf
inc
inc
adc
and
sahf
andb
mov
cltd
lcall
jmp
scas
shl
push
xchg
xor
das
repnz
int
lret
add
mov
imul
mov
test
das
cmp
ds
cmp
sub
test
scas
and
mov
mov
out
js
or
pop
lods
cmpsb
dec
loope
mov
stos
add
jno
mov
scas
xchg
fmul
jle
pop
shll
mov
inc
repz
xor
push
adc
pop
push
popf
jle
sub
fs
call
mov
jnp
cmp
inc
test
and
faddl
ss
data16
cmp
movsl
or
pushf
es
push
lret
popa
cmpb
mov
in
pop
rolb
stos
adc
iret
mov
mov
sti
les
arpl
push
mov
lods
or
shrb
pop
push
popa
call
push
pop
mov
ljmp
adc
fisubs
outsb
fpatan
in
popf
clc
call
push
xor
ret
pop
mov
das
mov
das
sub
sbb
inc
cld
aad
out
and
push
xchg
sbb
cmp
xor
scas
pusha
pop
icebp
or
cmp
lods
sbb
jo
mov
hlt
push
push
adc
sbb
idiv
movsb
orl
pusha
sbb
shll
int
mov
enter
sbb
dec
std
testl
sbb
sahf
nop
fnsave
jle
push
subl
sub
leave
sub
loopne
popa
sti
sbb
sarl
aam
in
or
cwtl
sbb
or
notl
lahf
int3
pushf
inc
gs
insl
or
push
lcall
pop
lea
insb
jg
imul
sub
cmp
or
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
mov
cmp
and
push
cmp
jno
repz
mov
mov
sbb
inc
jo
imulb
dec
dec
rolb
adc
xchg
loope
fwait
les
pop
mov
daa
lcall
fisttpl
lods
jae
push
xchg
inc
add
add
add
cld
clc
and
inc
jge
sub
and
test
sub
out
sti
pop
add
push
xor
or
cs
inc
cli
in
das
cmp
add
and
mov
and
push
mov
test
jmp
iret
adc
push
mov
jb
idivb
jp
xor
fwait
pop
pop
xchg
shll
dec
orl
scas
das
aam
add
mov
dec
adc
pop
inc
dec
scas
ds
cmpb
cltd
mov
cmpsl
pop
jl
push
mov
lods
mov
pop
popa
test
movsl
mov
bnd
mov
cmpsl
in
xchg
gs
or
sub
and
or
xor
enter
repz
lret
dec
xor
pushf
mov
xchg
inc
aam
in
shlb
jbe
add
loope
mov
mov
pop
dec
lea
ds
sub
shlb
push
cmpsl
cs
nop
add
repnz
dec
mov
xor
cltd
leave
cmpsl
cmp
xchg
pop
int
cmp
and
addr16
inc
ret
gs
jb
es
pop
mov
xor
fcoml
sbb
mov
pop
dec
lods
and
sahf
frstor
dec
daa
clc
jl
aas
test
xchg
xchg
sbb
gs
sti
bound
mov
push
int
in
mov
mov
imul
cmpsb
mov
cmp
or
jno
ljmp
xchg
nop
cmp
and
sub
ret
mov
push
fsubrp
in
addr16
inc
dec
sbb
icebp
lahf
clc
imulb
or
xor
adc
imulb
out
jne
push
sbb
inc
add
inc
add
xor
mov
incb
jg
or
in
jp
in
rcl
fildll
pop
fwait
shrb
insl
and
add
mov
inc
imul
popf
clc
adc
sub
cli
push
adc
xchg
js
dec
cmp
cli
lods
xchg
in
cmp
mov
or
int
stos
ret
mov
sbb
xor
adc
out
mov
pop
pop
cs
mov
imul
xchg
lret
mov
adc
lcall
nop
fadd
imul
ja
xor
js
jl
cmpsl
inc
testl
push
mov
xchg
imul
inc
t1mskc
xorl
xchg
push
popf
cli
jae
ljmp
std
repnz
sbb
mov
jmp
mov
sbb
fsubl
mov
mov
inc
movsl
add
or
dec
jae
inc
mov
decl
ljmp
not
xor
inc
iret
adc
loope
mov
add
push
movsl
cmc
jbe
ljmp
scas
orl
mov
sbb
out
sbb
cmpsb
mov
cmp
jge
fxch
pop
lock
cmp
mov
push
in
je
inc
mov
subb
dec
cmp
cmp
cwtl
cmp
nop
jns
jp
stc
sbb
cs
adc
pop
cmp
es
pop
push
adc
test
fstpt
stc
stos
popa
cmpsl
outsl
imul
data16
jg
mov
pop
stos
xchg
test
dec
gs
movsb
mov
or
bsf
out
loope
push
pop
mov
js
push
jmp
xchg
dec
into
mov
sti
idivl
cmp
movsl
mov
lret
test
pop
pop
out
rcrb
and
xchg
pop
pop
les
shrl
sbb
xor
out
push
push
pop
fld
mov
push
or
mov
hlt
xchg
jae
fadds
pop
inc
enter
pop
and
mov
dec
mov
lret
stos
out
inc
jecxz
in
xchg
test
repnz
adc
mov
in
test
sbb
mov
pop
mov
mov
mov
pop
or
fidivs
cli
jns
call
andb
fs
std
daa
cmc
jbe
repz
sub
push
or
jecxz
mov
push
out
cmpb
mov
adc
xchg
xchg
mov
les
pop
push
sbb
rcrb
adc
fldl
inc
pop
inc
rorb
call
loop
mov
xchg
sub
add
mov
dec
inc
jbe
lock
pop
xchg
mov
lea
into
fisubrl
mov
jecxz
adc
lret
iret
xchg
fsts
into
fs
loop
sbb
mov
fnstcw
ss
jmp
je
add
aaa
mov
inc
dec
dec
or
cmp
pop
stos
or
or
pop
mov
dec
add
cli
call
imul
pop
dec
outsl
mov
add
lret
sbb
stc
xor
movsl
scas
add
clc
jbe
pushl
push
std
pop
jne
jns
mov
idivb
outsl
pop
cli
divb
inc
dec
jg
jg
sub
jno
insl
and
and
xor
cmpsl
adc
aas
fs
push
dec
fistpl
xor
jbe
int3
xor
add
mov
inc
lret
gs
sbb
out
sub
push
pushf
xchg
xor
sarl
je
pop
cmp
sbb
mov
rcll
lods
pusha
sbb
jp
stos
mov
dec
inc
outsb
mov
mov
cmp
sbb
lock
into
stos
pop
rorl
mov
ret
jl
sub
mov
jno
pop
cmpl
sbbb
cmp
lea
xchg
addr16
pop
imul
sbb
pop
push
into
inc
jae
sub
imul
or
mov
aad
sbb
adc
mov
sarb
fs
adc
cmp
repz
outsl
lea
imul
fiaddl
icebp
ja
clc
nop
insb
or
push
pop
call
add
imul
pop
sti
mov
cmpl
cmp
aam
push
in
sub
mov
rcr
add
mov
movsb
dec
jo
outsb
pop
adc
xchg
push
je
faddl
cmc
push
data16
fldt
fistl
mov
and
lods
adc
sbb
xor
adc
clc
adc
push
xchg
sti
inc
pop
xchg
mov
cltd
sbb
mov
or
test
rcll
xchg
sbb
xor
outsl
ret
fwait
mov
cld
mov
imul
fwait
dec
jle
xor
pop
cmp
xor
mov
testl
movsl
outsb
sbbl
jae
push
lods
jns
out
shrb
pusha
lret
and
cwtl
adc
mov
cmp
mov
sbb
cs
push
movsl
xchg
bound
insb
pusha
in
loopne
ja
pop
enter
stc
mov
jnp
push
addr16
cs
or
notb
xchg
add
and
pop
and
mov
mov
mov
mov
mov
arpl
pop
loopne
ret
sub
cmp
adc
lahf
sub
mov
cmpsb
in
lcall
jns
fcmove
arpl
push
jmp
mov
das
popa
cmp
mov
push
push
lret
pushf
cmp
inc
pop
and
in
call
int3
lock
xor
je
mov
push
repnz
mov
cld
aam
jg
jae
add
mov
pop
lret
jo
insl
loop
js
fwait
xchg
add
push
stos
sbb
sbb
mov
mov
int3
jg
sbbl
popf
and
mov
fnstcw
aaa
inc
pop
xor
mov
sub
lahf
cmpsl
ret
push
cmp
movsl
dec
xchg
aad
jae
cmp
push
iret
adc
cltd
dec
aas
push
sbb
ret
insl
jo
jnp
out
into
imul
push
mov
jle
fwait
es
push
jge
ljmp
scas
mov
xor
clc
push
cmp
dec
das
inc
je
rcrb
out
and
xor
push
mov
sbb
out
mov
sahf
add
adc
imul
push
jns
enter
stos
inc
loop
lds
cmpsb
mov
clc
and
and
and
fidivl
cwtl
ret
imul
and
aas
or
jp
mov
ret
mov
sbb
lret
out
mov
jle
mov
mov
jmp
sbb
xchg
pop
cmpsl
inc
fucom
sbb
jl
mov
jg
pop
pop
dec
sbb
mov
fwait
push
and
inc
js
gs
push
insl
lret
cmp
inc
sbb
adc
push
faddl
push
sbb
incb
jns
pop
icebp
jp
jp
rep
push
aam
repnz
rcrb
scas
push
sbb
inc
cmp
mov
test
jbe
jg
call
push
push
jp
inc
push
xor
xor
xlat
test
cmp
int3
adc
mov
mov
dec
in
and
sbb
or
pushf
add
int
adc
insl
movsb
mov
ror
xchg
or
in
adc
or
mov
ljmp
xchg
fstps
jp
repnz
mov
loopne
dec
inc
clc
mov
xor
clc
inc
ljmp
shrl
test
lret
push
test
rclb
out
add
loop
rcrb
in
xchg
cmpsl
shrl
cwtl
enter
roll
test
aas
add
mov
jl
pop
inc
shrl
inc
dec
es
and
and
insb
mov
inc
mov
pop
insb
es
orb
mov
dec
push
mov
enter
jns
xchg
adc
iret
insb
loope
xor
les
iret
aam
clc
loopne
add
leave
push
lahf
mov
outsb
stc
gs
pushf
ror
jge
out
out
mov
cmpsl
mov
lret
nop
out
std
xchg
scas
shll
cmp
out
lea
outsl
rorb
out
inc
xchg
push
mov
insb
push
test
cmpsb
sbb
inc
popf
push
push
clc
push
jb
dec
add
or
add
sub
pop
loope
stos
and
sbb
in
fdivrs
xchg
xor
sbb
mov
aaa
jge
push
pop
and
mov
hlt
popa
cmp
add
push
pop
push
out
orb
sbb
pop
inc
dec
loop
pop
dec
pop
inc
nop
arpl
fiadds
pop
push
stos
sbb
xchg
rcll
mov
int3
and
cmp
mov
sbb
inc
dec
sbbl
out
sub
dec
enter
mov
xchg
mov
adc
mov
sti
mov
cmpb
arpl
pop
inc
test
lods
insb
mov
icebp
sub
jg
aam
jg
out
jl
lods
xlat
xchg
add
jns,pn
pushf
adc
aaa
push
cltd
ret
adc
lock
arpl
into
cwtl
pushf
dec
push
jae
js
nop
cmpsl
mov
stos
in
test
and
test
addl
into
and
aaa
xchg
mov
jg
js
mov
addr16
push
and
adc
or
push
jp
push
and
lods
pop
int3
adc
rorb
jg
pop
push
mov
or
push
test
xor
fidivrl
dec
mov
or
cmp
movsb
mov
add
mov
mov
xchg
cmc
iret
popf
mov
mov
jg
mov
xor
dec
and
sarl
mov
imul
loope
mov
jnp
inc
pop
sbb
dec
scas
loop
add
mov
repz
mov
mov
xor
addb
fldl
mov
push
out
inc
das
mov
aaa
mov
add
push
shl
in
dec
neg
subl
aaa
repz
pushf
popf
insl
add
cld
lea
sbb
add
pop
lcall
movsl
shrl
xor
cmpsb
fisubrs
repz
leave
imul
js
sub
lds
test
mov
adc
mov
sbb
fistpl
shll
rolb
out
ja
jmp
fdivrs
mov
dec
dec
fisubrs
cmp
lcall
out
es
sahf
xor
push
xchg
nop
ljmp
push
popa
jle
xchg
into
push
or
cwtl
cmpsl
call
flds
xchg
push
mov
cmp
scas
jnp
popa
add
adc
pop
loope
loopne
out
xchg
or
mov
and
fimuls
push
ud1
add
push
subl
or
push
sahf
outsb
icebp
pop
jbe
mov
bound
stos
int
mov
dec
xchg
negl
jmp
stos
insb
arpl
les
adc
fdivrl
pushf
mov
js
add
mov
into
rorl
add
scas
pusha
pop
out
addb
push
dec
lods
out
addr16
push
mov
push
push
inc
stc
inc
jnp
cmp
test
test
cmc
xor
sbb
sub
push
inc
xchg
xor
adc
inc
cwtl
xchg
sub
add
xchg
pushf
bound
sub
push
xchg
push
sub
xchg
mov
lods
pop
sbb
push
clc
mov
sub
loopne
mov
or
push
test
or
add
scas
mov
iret
xchg
sub
lods
dec
dec
lods
and
ja
dec
es
sbb
xchg
arpl
dec
xor
sub
fisubs
adc
mov
std
rcr
outsb
aad
jmp
pop
mov
sub
pop
arpl
pushf
pop
lret
sub
dec
sub
xchg
in
mov
sbb
xchg
jnp
jle
xchg
mov
test
mov
paddw
shl
and
xchg
sub
pop
pusha
jl
mov
jle
dec
leave
and
stos
pop
scas
iret
add
push
or
or
outsb
adc
adc
xor
push
js
inc
popa
pop
mov
sub
or
push
dec
lock
xchg
mov
cld
movsb
pop
repnz
ficoml
dec
push
fidivs
fisubs
rorl
in
lret
pop
dec
loop
pop
rol
sahf
cmpsb
cmc
mov
mov
js
sar
xchg
addb
inc
push
dec
sbb
or
or
pop
jecxz
test
adc
jb
iret
jae
push
subl
xor
lcall
int
pop
sahf
xchg
adc
outsl
pop
xchg
cs
mov
mov
push
cs
inc
ficoml
and
and
sub
ret
unpckhps
idiv
int
jne
loope
cmpsl
ds
gs
insl
shll
add
rcrl
sahf
pop
pop
jnp
mov
mul
pop
or
push
or
push
out
std
jle
fidivrs
insb
arpl
inc
dec
fstpt
jmp
jo
stos
mov
pushf
pop
xchg
leave
aam
in
fmull
test
mov
je
jecxz
and
pop
lods
test
test
fs
ret
sbb
fsubrs
and
xor
subb
mov
mov
lret
mov
dec
movsb
sbb
xor
and
mov
std
orl
sub
jne
ljmp
incb
out
adc
in
addr16
mov
jl
xchg
aad
jmp
pop
cmp
out
sub
and
adc
push
stos
cltd
incb
add
out
mov
test
popa
movsb
inc
jnp
xchg
adc
filds
inc
std
scas
fwait
push
pop
or
xor
imul
inc
fwait
xchg
pop
jo
mov
push
scas
or
cmp
push
imul
ljmp
push
add
cmp
cmp
and
cs
mov
jmp
lret
xor
mov
cld
or
sub
and
je
mov
roll
add
movl
out
dec
jno
imul
flds
cld
sub
xchg
pop
mov
add
scas
icebp
fsubr
jnp
stc
movsb
sub
pop
fs
test
cmp
lret
aas
movsl
ja
movsb
lods
jo
loopne
ffreep
inc
std
mov
mov
xor
repz
dec
insl
rol
std
cmp
cli
add
icebp
mov
mov
in
cld
divb
pop
test
repz
cmp
pop
or
or
insb
sbb
push
jnp
jb
pop
and
xchg
push
mov
jbe
xchg
xor
lahf
push
xor
or
rcll
inc
pop
mov
mov
mov
mull
and
insl
test
mov
pop
and
fcomps
mov
jecxz
cld
sti
xor
cmp
xor
cltd
pop
sub
mov
std
aaa
lds
mov
cmp
cld
das
cmpsb
sbb
div
mov
mov
call
xor
jo
inc
shrb
shll
mov
cmc
mov
sbb
xchg
adc
inc
add
jae
fs
sbb
jp
push
cli
or
pusha
push
and
cmp
and
add
rcrl
cmc
mov
mov
xor
popf
push
or
adc
fdivl
mov
mov
pop
lret
in
outsl
pop
fisttps
dec
ficompl
cmpsb
lds
pop
inc
mov
cmp
jl
push
mov
stc
push
sbb
rolb
sub
das
sub
stos
scas
in
dec
inc
push
lock
mov
stos
inc
sbb
addb
into
repnz
repz
xlat
add
mulb
in
call
push
mov
push
cmp
mov
shlb
sbb
inc
movsl
push
and
push
mov
clc
or
inc
out
mov
dec
dec
or
pop
das
xor
or
xor
ret
xchg
inc
fmul
into
adcb
sub
out
jo
cmp
jno
lahf
out
inc
loope
and
bound
inc
and
clc
hlt
loop
mov
je
in
fdivrs
mov
mov
xchg
mov
xor
pop
dec
inc
mov
cmp
cmp
cmp
cmp
das
adc
out
bound
ret
mov
rorl
add
in
fcomip
push
movsl
leave
loopne
push
popa
std
inc
repnz
call
ss
push
push
movsl
cmpsl
fisubl
push
das
mov
push
ret
fs
test
sub
arpl
dec
jae
jp
repnz
xchg
sbb
jge
flds
in
hlt
mov
jb
jmp
scas
pop
and
cmp
mov
test
push
adc
xor
rorb
stos
pop
inc
sub
jne
pusha
stc
jo
pop
inc
mov
push
stos
sub
or
xchg
adc
push
mov
mov
mull
xchg
das
or
adc
pushf
xchg
popa
inc
out
scas
icebp
in
hlt
imul
mov
mov
imul
push
pop
insb
fldt
in
adc
addb
mov
mov
mov
lcall
faddl
and
lahf
mov
xchg
call
or
jp
es
inc
repnz
mov
cmp
mov
xchg
or
jb
mov
fidivrl
fiadds
sbb
ret
out
pusha
scas
cmp
test
sub
lods
dec
nop
jb
inc
adc
aam
out
lods
jo
sbb
test
push
enter
jo
in
test
pop
xlat
cmp
xor
add
lods
inc
not
ds
fdivl
lret
mov
aaa
loope
mov
les
sub
mov
pusha
pop
dec
inc
push
lahf
sub
or
cld
jge
mov
pop
push
lcall
xchg
dec
leave
notl
pop
test
mov
roll
xor
es
push
inc
das
jne
dec
dec
stos
lock
jo
add
mov
and
cmp
stos
sarl
mov
add
cmp
jecxz
les
push
mov
faddl
aam
pop
or
cmp
out
ds
idivb
repz
and
mov
cmpsl
inc
mull
sbb
pusha
into
addl
std
leave
xor
xor
sub
iret
sub
cwtl
cmpsb
int3
fisubrs
adc
inc
repz
out
and
leave
mov
inc
mov
popf
lret
adc
ja
push
xchg
xchg
scas
or
pop
push
jg
xor
ja
aas
jbe
jne
stos
add
iret
mov
lcall
mov
insb
jne
cmpsl
pop
loop
std
pop
lret
sar
jmp
pop
mov
jne
push
clc
movsl
iret
inc
es
xor
fs
adc
add
and
sbb
out
adc
std
dec
cmp
xchg
sbb
add
mov
lret
imul
div
push
cmp
xchg
mov
rol
imul
out
push
mov
fcompl
fbstp
sbb
nop
adc
aas
out
stos
lods
mov
cli
xorl
mov
das
add
jp
cmp
sub
adc
lock
adc
xor
hlt
mov
xchg
jmp
popf
or
xor
mov
call
insb
fldcw
add
xchg
push
inc
push
mov
mov
jmp
xchg
jo
rclb
lret
xchg
jecxz
xchg
jo
test
inc
push
jno
jno
xchg
and
mov
xor
cli
mov
jp
sub
mov
xchg
test
icebp
pop
xchg
shlb
imul
adc
daa
sub
inc
cld
js
inc
inc
in
mov
and
lret
sub
sarb
ljmp
mov
shrb
orl
or
scas
mov
push
movsb
pop
fldcw
loopne
mov
loopnew
or
repz
stos
loope
movsb
fwait
sbb
cwtl
clc
lods
xor
in
int
int3
jg
push
push
jl
lcall
dec
and
mov
faddp
push
inc
push
out
test
movl
xchg
pop
repz
and
cltd
insl
daa
pop
cli
jno
fwait
movsl
out
add
mov
daa
lret
adc
mov
and
sbb
mov
iret
add
fwait
adc
or
cmpsb
xorb
test
push
push
fidivrs
in
and
repnz
je
jns
cwtl
test
inc
outsb
std
movsb
out
lret
mov
mov
in
push
inc
movsl
adc
fisttpll
std
mov
cltd
sarl
cmpsb
sub
mov
das
aas
xor
mov
hlt
scas
xor
aad
cmc
xchg
stc
lcall
pop
leave
sub
adc
data16
dec
push
rorb
nop
xchg
mov
xor
inc
mov
popf
push
cmpsb
sbb
aaa
jle
xchg
popf
stos
mov
decl
pop
fdivs
and
jae
pop
add
inc
push
movaps
sbb
ret
cmp
xchg
pop
dec
dec
movsl
pop
sub
ret
test
xchg
shl
or
xchg
mov
shll
adc
lock
xchg
cmp
add
cmp
mov
and
paddsw
mov
jnp
or
xchg
mov
mov
add
gs
jge
adc
pop
xor
sub
mov
addr16
lods
aam
adc
fcoml
nop
divl
cmc
or
adc
pop
inc
push
inc
jge
mov
lods
mov
xchg
pusha
dec
jae
pop
and
popf
mov
or
sbbl
addr16
xchg
push
leave
sub
add
add
sub
dec
jo
adc
xor
fs
jecxz
jmp
addl
daa
inc
fldenv
test
sub
inc
imul
cmpsb
dec
dec
ret
dec
sbb
rorb
jg
push
push
int3
leave
leave
out
popf
dec
adc
jno
rclb
insl
sar
fstpl
xor
sarl
and
jo
pop
adc
push
popa
inc
daa
sti
cmp
leave
jno
jo
mov
add
loope
push
lods
inc
mov
mov
mov
pop
pop
test
rorl
mov
stc
push
les
mov
in
int
jecxz
popf
adc
mov
lock
pop
into
call
jg
aaa
cmpsl
fisubrs
adc
push
mov
int3
dec
mov
jbe
and
cmp
cmp
icebp
test
or
cmpsl
or
jecxz
pop
pop
and
sbb
es
pop
mov
leave
ljmp
or
jae
or
int
sub
mov
or
stc
mov
icebp
jle
dec
out
idivb
xlat
pusha
ret
lahf
subb
sti
sub
sbb
fcoms
sbb
rol
xchg
inc
je
xor
aam
add
mov
out
mov
inc
and
and
push
dec
cmp
dec
xchg
enter
dec
lea
cld
jecxz
add
sbbl
jno
jl
ja
cmp
sbb
cli
xchg
xchg
pop
scas
mov
les
scas
addr16
xor
mov
dec
adc
loop
call
fdivp
stos
xchg
xchg
push
fcomps
repz
push
out
cld
add
xchg
sbb
push
mov
adc
cmpsb
popf
jmp
xor
add
jmp
xchg
push
outsb
pop
dec
or
and
xchg
cltd
mov
ja
loop
cld
pop
imul
aaa
test
out
or
or
xchg
add
or
pop
inc
shld
addr16
scas
pop
or
ficoms
xchg
cs
jnp
mov
pop
insb
adc
and
xchg
jecxz
sbb
dec
pop
ret
fisubs
lea
arpl
mov
push
xchg
orb
sub
jb
sbb
fadds
pop
and
shl
out
sbb
mov
in
call
ret
jnp
sub
cmp
cmp
xchg
sub
cmp
cs
pop
sub
fs
scas
mov
lods
mov
inc
pop
mov
dec
arpl
pop
add
repz
sub
nop
sti
js
mov
push
sbb
xor
fisubl
mov
repz
add
push
sub
lahf
mov
adc
add
pop
sbb
or
mov
std
bound
stos
jg
dec
sub
sahf
roll
pop
dec
dec
in
lcall
dec
data16
sbbb
divb
mov
cmp
fldt
add
movsb
jmp
fwait
pop
dec
or
and
sub
icebp
lods
jno
mov
jmp
xor
rorw
rol
shrl
int
mov
cmp
add
lret
popf
cld
jmp
or
xor
pop
std
dec
lods
sub
inc
adc
call
lods
gs
imul
xor
or
in
xchg
loop
and
adc
sti
minps
inc
mov
addr16
xchg
icebp
rcl
scas
xor
or
mov
cmp
ficompl
xchg
jp
stc
out
and
jecxz
sahf
xlat
fs
mov
arpl
jbe
cltd
ljmp
add
mov
daa
fstl
leave
lods
sub
or
stos
lds
adc
adc
repz
sbb
int3
in
mov
movsb
sti
mov
inc
shll
cmp
xchg
pop
aaa
mov
clc
addr16
shlb
jmp
push
int3
out
mov
sti
out
pop
fisubrs
inc
mov
lahf
xor
faddl
dec
inc
inc
jmp
rcrl
subl
inc
ds
xchg
push
xor
incb
mov
lahf
mov
lock
pusha
fstps
stos
loope
ret
hlt
sbb
fbstp
pop
js
arpl
inc
cmp
outsb
in
dec
push
mov
sub
jge
dec
fists
out
stc
lea
jecxz
jnp
or
clc
mov
cmp
ja
add
mov
fwait
xlat
int
pop
inc
js
movsl
mov
push
imul
jns
loope
cmp
dec
int3
pop
adc
fsubrs
shrl
inc
pop
push
rcrl
adc
jp
push
mov
test
into
and
imul
dec
out
pop
dec
imul
sbb
lea
dec
jl
sub
lods
or
xor
fdivrp
aam
jns
cs
test
in
aaa
roll
loop
dec
mov
lea
cmp
rcr
add
cmc
mov
push
fisttpl
jmp
xchg
and
lds
xor
xor
inc
push
ror
pop
lods
aas
adc
iret
sbb
mov
movsl
ja
data16
add
inc
xchg
sbb
jl
mov
mov
mov
fbld
cs
test
jge
xor
pusha
jns
xlat
outsb
int3
jae
ja
mov
negl
jo
in
loope
mov
nop
pop
loope
mov
ret
or
jp
loopne
mov
mov
xorl
out
sbb
sbb
ret
push
jns
hlt
xchg
mov
sbb
pop
rol
jb
je
pop
or
mov
jbe
shll
adc
out
mov
mov
xchg
push
repz
inc
hlt
add
repz
xchg
mov
adc
pop
scas
into
add
pop
mov
adc
ret
jb
or
ds
adc
and
leave
xchg
mov
aas
add
aas
daa
negb
jmp
dec
js
sub
push
in
mov
add
call
inc
or
mov
int3
push
stos
jg
cmp
imul
push
xchg
cltd
inc
ffreep
das
xor
mov
jg
xchg
push
lret
je
lock
mov
jp
mov
adcl
mov
inc
adc
aaa
fcmovnu
jno
dec
lods
mov
fstpl
pushf
pop
mov
ljmp
addr16
cltd
cmp
dec
ret
leave
call
and
scas
int3
fwait
in
nop
pop
add
pushf
in
std
xchg
and
mov
repz
dec
push
or
xor
add
jp
es
push
pop
xchg
push
repnz
jmp
jge
sub
mov
mov
adc
pusha
mov
test
iret
sub
xor
pop
sub
push
xchg
push
mov
fsub
push
in
jo
aam
out
roll
jp
in
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
rclb
bound
pop
bound
fists
dec
mov
in
js
iret
push
pop
or
xor
fwait
mov
mov
and
xor
in
ljmp
fnstenv
jmp
scas
sub
mov
pusha
gs
pop
fmuls
and
pusha
pop
out
leave
cmp
aas
outsl
outsb
push
ljmp
aaa
lods
sbb
sub
adc
in
gs
push
rorb
jecxz
imul
sbb
xchg
jmp
sbb
jnp
outsl
or
pop
mov
add
scas
ret
mov
or
bound
scas
leave
cs
dec
mov
xchg
or
fistpl
adcl
rcll
and
xor
and
add
rep
jge
push
cwtl
jb
in
dec
xchg
inc
subl
pop
jmp
rorl
mov
jnp
dec
in
dec
js
adc
insb
mov
mov
ja
cmp
mov
add
pop
and
sub
outsl
lea
xchg
mov
cmpsb
cltd
insb
js
dec
in
sbb
mov
pop
lcall
adc
and
inc
push
test
js
mulb
sarl
fs
and
sub
subb
into
repnz
fcmovnbe
aad
jl
popa
push
lret
mov
iret
sbb
sub
test
rcll
stos
cltd
lret
sbb
sahf
sub
cli
outsl
lea
add
lahf
pop
stos
sbb
test
scas
or
aam
outsb
or
in
imul
ret
and
cwtl
test
xchg
push
sarb
fwait
test
sbb
sub
je
test
and
inc
add
dec
push
xor
mov
lds
repz
mov
mov
xchg
cmp
outsl
mov
pop
imul
and
and
in
mov
sub
pop
in
insb
outsb
push
dec
xor
pop
adc
pusha
ds
pop
shlb
fdivl
adc
cmp
jp
dec
or
mov
daa
jns
xchg
call
sarw
aas
mov
nop
aad
jmp
mov
pusha
cmp
xchg
cwtl
adc
push
int3
in
mov
clc
dec
arpl
in
push
sbb
sub
sbb
mov
cmp
negl
sahf
cmpsb
out
and
aas
ss
jns
movl
xor
out
or
dec
or
lds
xchg
icebp
loope
pop
xchg
rolb
jle
bound
mov
aas
stos
pop
xchg
leave
or
outsl
call
lods
mov
pop
stos
adc
frstor
out
lods
popa
bound
dec
mov
pop
mov
cmp
aad
adc
pop
repnz
jb
add
cwtl
sti
enter
in
incl
xor
ss
gs
mov
ffree
xchg
push
imul
es
pop
mov
sbb
cmp
cmp
and
inc
adc
das
icebp
adc
lea
sbb
aaa
mov
js
sub
fdiv
mov
and
inc
push
and
loope
rdtsc
lock
or
push
mov
push
inc
out
xchg
inc
mov
mov
stc
or
out
dec
xor
push
ljmp
mov
xchg
xchg
jg
adcb
or
fidivl
ja
sub
imul
shl
push
xchg
cmp
repnz
xchg
cmpsl
test
sbb
mov
into
and
pop
cli
idivl
pop
inc
faddl
fisubl
and
ss
mov
xor
cmpsl
mov
sbbl
jbe
int3
lret
pop
dec
xchg
push
push
pop
call
mov
pushf
push
mov
cwtl
push
push
icebp
cs
nop
add
ljmp
cld
sbb
adc
sbb
or
adc
aam
ljmp
data16
jecxz
mov
mov
or
pop
cmpsl
cmp
out
sbb
ja
ret
add
xchg
jnp
push
int
mov
or
push
loop
jbe
cmp
es
mov
shr
std
jno
leave
xchg
cwtl
pop
mov
mov
lods
rolb
push
xchg
adc
sahf
cli
insl
gs
pop
in
pushf
pop
mov
push
jge
sub
div
out
mov
cvttps2pi
mov
ret
nop
push
inc
nop
mov
cmp
cwtl
out
imul
out
xlat
fwait
jmp
scas
shll
aas
flds
les
fstl
repnz
lea
pop
mov
push
cmp
cmp
sub
mov
adc
jmp
push
jae
into
pop
mov
pop
mov
xor
pop
sbb
stos
sbb
out
rcrb
sbb
call
mov
jge
enter
out
shll
sbb
rorb
inc
push
sub
inc
sbb
insb
jno
pop
inc
popf
xchg
cmp
je
mov
arpl
ds
lret
push
jne
es
pop
push
pop
inc
scas
cmc
xchg
clc
outsb
mov
aad
enter
hlt
pop
mov
mov
fnstcw
call
out
mov
fstl
test
pop
dec
jo
mov
dec
mov
jge
mov
lcall
and
aaa
cld
adc
out
push
in
xchg
ss
cmp
push
push
lahf
lock
mov
cmpsb
xor
or
idiv
mov
dec
lahf
mov
adc
ficompl
out
sarb
lahf
dec
test
inc
xor
jne
dec
aaa
mov
and
rol
sahf
xor
rorb
sahf
push
jecxz
sbb
iret
jo
mov
ljmp
repnz
add
mov
pop
popf
sub
xlat
push
lock
fmuls
in
push
scas
inc
std
cmpsb
inc
xchg
sbb
dec
dec
xchg
inc
iret
adc
sub
pop
jg
xor
ja
je
mov
push
sub
xor
movsl
add
js
pop
negl
dec
call
push
push
scas
inc
or
stos
es
mov
jle
ret
mov
jge
mov
adc
incb
sarl
ret
sbbb
add
mov
stc
sarb
int
aas
dec
faddl
pop
add
enter
sub
ja
fisttps
fidivrs
mov
mov
mov
mov
push
xchg
sarb
sub
sbb
repz
mov
sbb
out
inc
dec
and
push
mov
mov
out
rsqrtps
mov
and
and
and
pop
and
dec
test
xlat
jge
lret
push
test
sbb
cmp
int3
loop
stc
mov
jno
fisubl
push
test
das
sarl
jl
es
push
mov
imul
mov
pop
jae
test
sbb
movsb
add
movsl
leave
xchg
xchg
and
sub
mov
mov
lods
adc
aad
test
in
popl
test
add
mov
push
repz
inc
inc
aas
lock
push
dec
or
in
add
pop
lcall
jb
jmp
scas
lods
push
pop
xor
insb
sbb
xor
dec
mov
xchg
fbstp
inc
jecxz
cli
out
sar
xlat
movsb
daa
push
mov
jne
popf
mov
imull
jne
imul
hlt
pop
in
stc
inc
iret
inc
xchg
cmovnp
jmp
das
mov
xchg
or
dec
outsl
popa
idivb
push
dec
mov
test
pop
mov
or
add
jge
mov
gs
mov
addl
shrl
pop
bound
mov
adc
dec
lea
popf
sub
xor
jb
dec
jle
sbbb
mov
arpl
cs
jae
jno
in
mov
sti
fnsave
je
clc
jo
jns
dec
fdivl
or
out
dec
push
pop
pop
nop
dec
test
inc
pop
xchg
test
cmpsb
das
jg
lea
inc
in
xlat
and
mov
dec
notb
or
es
and
or
scas
shrb
nop
sub
rcrb
out
mov
in
adc
nop
ljmp
push
mov
mov
js
xchg
div
sti
int
das
mov
xchg
jno
ret
pop
movsl
lods
jp
jp
push
rcll
mov
popa
jle
cmp
sub
xor
arpl
mov
xchg
xchg
cmp
jle
rorl
cmpb
inc
imul
xchg
pop
ret
adc
dec
lret
sbb
stc
mov
and
shll
adc
mov
lock
hlt
in
pop
shlb
xor
insl
lret
inc
movsb
mov
mov
and
push
jle
les
je
pop
out
push
mov
sbb
int
out
sbb
cmpsl
pop
lds
fisttpll
and
push
lods
mov
xchg
nop
inc
aaa
cld
push
imul
gs
cmp
push
inc
pop
mov
popf
shll
outsb
aas
push
fst
cmp
les
std
iret
adc
int
cwtl
lock
xor
mov
pop
cwtl
sbb
fcomip
push
inc
out
xchg
imul
js
movb
inc
mov
jo
cmp
addb
or
push
jbe
inc
ror
fadds
lock
dec
xor
ljmp
fsubl
jecxz
cmp
push
push
pop
sub
fldcw
addr16
leave
mov
das
lods
dec
push
xchg
iret
mov
inc
cmpl
adc
sub
insb
pop
int3
pushf
push
faddl
inc
aaa
xor
mov
fbstp
lods
aam
jae
pop
xor
dec
or
and
data16
push
pop
jle
sahf
mov
lret
hlt
add
or
pop
mov
mov
popa
shll
add
jle
or
mov
loop
xor
aad
in
pop
sub
mov
sub
das
jl
in
gs
scas
ja
test
addl
jne
in
sahf
cwtl
xor
push
dec
adc
loope
or
cmp
pop
and
sbb
sti
js
jo
ja
pop
dec
imul
inc
push
ja
rorl
mov
out
or
stos
mov
pop
aam
and
inc
shlb
insb
dec
mov
sarl
add
psrld
jns
push
mov
and
cmc
pop
divb
mov
movsl
xor
insl
test
sbbb
push
pop
adc
push
movsb
push
sub
mov
shlb
jg
add
xchg
add
in
icebp
xlat
sbb
dec
cmp
stos
jl
push
mov
insl
mov
fdivr
fs
sub
ret
xchg
push
jno
adc
test
dec
mov
cmpsl
dec
daa
cmp
sub
daa
clc
std
subl
cmc
adc
daa
sub
ja
fisubrl
pop
pop
lods
sub
sbb
jne
sahf
dec
mov
out
test
push
pop
shrb
ret
mov
pop
popf
call
sub
cs
clc
push
out
enter
inc
push
sbb
jle
sahf
mov
mov
sub
xchg
lret
inc
icebp
cld
push
loop
mov
inc
or
push
call
sti
fiadds
in
pop
fwait
test
mov
jmp
clc
mov
add
out
fidivl
push
fisttpll
jns
inc
push
mov
or
daa
int3
cmpsl
add
inc
in
xor
mov
daa
xor
lret
int3
or
nop
in
dec
les
mov
jle
lret
sbb
andl
js
sbbl
in
dec
pushf
sbb
fsub
into
popf
jle
mov
fistpll
cs
pop
das
std
or
lahf
push
ds
jp
andl
js
pop
lds
mov
sahf
fidivl
xchg
fwait
xor
std
fwait
cwtl
jbe
pop
jmp
add
sub
stos
push
stos
out
xchg
das
push
cwtl
push
arpl
test
add
pop
sbb
addl
in
sbbb
xor
hlt
shl
cmpsl
adc
jg
cld
cmp
cmp
jmp
xchg
inc
fcomp
push
and
pop
stc
jge
pop
dec
sbb
fistpl
xchg
mov
in
and
pop
sbb
fisttpl
aam
lcall
adc
rcr
jmp
call
push
repz
into
scas
pop
jnp
dec
dec
jecxz
mov
out
cmp
sub
and
and
addr16
into
int
int3
or
mov
jns
lock
scas
or
mov
enter
jne
xlat
add
mov
cmp
and
shl
push
fstl
mov
xchg
shll
pop
loop
dec
lea
push
shrb
pop
scas
push
in
call
clc
shl
inc
out
push
cmp
ja
cmc
testb
mov
cmp
cwtl
add
fcmovbe
mov
iret
sbb
pop
adc
movd
mov
in
pushf
sbb
push
pop
aas
lds
pop
aaa
mov
lahf
mov
sbb
fldt
out
shrb
out
icebp
sub
loopne
sbbl
push
add
ss
aaa
test
inc
addr16
pop
aaa
enter
hlt
mov
mov
cmp
jns
inc
in
fs
sahf
dec
sbb
xor
push
adc
out
and
in
outsl
sub
lea
sub
xor
lcall
clc
and
test
inc
or
mov
cwtl
or
push
mov
fwait
stc
push
sub
enter
jp
movsl
sub
sub
cld
adc
loop
fistpl
jno
jp
inc
mov
jnp
pop
inc
lret
movsw
outsb
jb
arpl
call
pop
lret
pop
mov
aam
inc
roll
dec
xor
fldcw
xor
jo
cmc
adcb
outsl
test
notb
cmpsl
xchg
cmp
imul
sub
leave
sub
int
sub
mov
sahf
out
lcall
imul
ret
xchg
lahf
inc
popa
fbstp
inc
div
sub
or
out
aad
mov
lahf
push
stc
ds
fisubs
sbb
es
lds
sub
repnz
repnz
sbb
cwtl
cmp
mov
fnsave
shlb
iret
cmp
outsb
das
inc
ljmp
xchg
fisubrs
addr16
dec
lahf
shl
jbe
pop
out
mov
lcall
data16
mov
cld
stos
pop
mov
or
mov
jnp
and
cmp
xor
test
mov
nop
bound
inc
mov
xchg
inc
xchg
and
lods
jns
ja
fsubrs
orps
test
xor
jecxz
or
nop
insl
shlb
mov
xchg
clc
push
loopne
xorb
jp
sub
lea
xchg
push
sahf
in
js
lods
inc
xchg
inc
fs
or
test
push
add
xchg
cmp
jl
pusha
cli
pushf
pushl
cmp
lods
dec
scas
and
and
sub
jns
fdivr
mov
ret
and
andl
push
int
aaa
icebp
cmp
push
fisttps
jbe
push
mov
cld
xchg
test
in
or
mov
mov
xchg
mov
pusha
jb
jnp
sarl
cwtl
pop
cli
mov
js
rolb
xor
in
subb
jp
sti
pcmpgtb
loop
stc
pop
rorb
add
mov
cmp
mov
sub
out
ret
mov
mov
inc
idiv
fisubrs
bound
xor
push
sub
movsbl
lods
and
and
jae
inc
xor
push
in
mov
fisttpl
add
pop
test
push
pop
lret
in
dec
jae
jnp
sbb
jp
ss
or
dec
arpl
push
ds
in
shl
ret
inc
lock
or
sbb
daa
scas
inc
in
add
scas
mov
push
pop
mov
xchg
adcb
add
aaa
xchg
or
mov
add
dec
push
pop
negb
mov
loope
and
jle
jge
repz
dec
jnp
add
shr
mov
in
sbb
std
nop
cld
test
xchg
hlt
or
enter
inc
int3
test
add
jae
mov
mov
push
mov
lret
cmc
jp
dec
out
sub
out
mov
pop
push
and
pop
mov
int
les
cli
mov
dec
mov
dec
mov
add
sbb
pushf
repnz
cwtl
jle
aam
inc
jae
mov
jle
jo
push
inc
int3
push
mov
test
insb
nop
adc
fisubs
imul
sbb
mov
lea
test
lock
mov
fisubrl
loopne
popa
jle
ret
lods
and
lods
notl
ds
pop
sbb
js
inc
sub
mov
mov
or
fs
test
shlb
xorl
lock
loopne
sub
js
movsb
mov
int
imul
xchg
push
mov
xor
pusha
xchg
push
sub
add
aaa
in
dec
dec
aam
dec
add
inc
add
enter
push
adc
adc
xor
cmove
and
fdivr
mov
xchg
push
jbe
arpl
dec
fisubl
or
bnd
inc
xor
ja
rcll
mov
or
pop
out
or
ja
and
mov
mov
out
aam
sub
adc
hlt
push
add
testb
call
or
push
shlb
xchg
inc
cld
cwtl
mov
mov
repnz
adc
dec
daa
pop
push
push
mov
push
mov
xor
fdivl
cmpb
pop
mov
gs
xor
insl
jl
out
and
xchg
jmp
xchg
inc
in
data16
dec
xor
fcomps
cwtl
hlt
or
mov
in
outsb
xchg
cmp
mov
fnstenv
ret
cmp
ljmp
icebp
xchg
push
sub
push
and
jecxz
dec
cmp
and
sub
dec
mov
adc
sbb
int
lret
gs
pop
pop
sbb
push
nop
mov
and
test
mov
fcmovnu
pop
xor
jnp
test
dec
jb
mov
test
iret
lcall
jmp
pusha
shlb
xor
or
icebp
jb
orl
andl
cmp
dec
pop
orb
in
mov
inc
int3
call
jmp
fildl
adc
test
test
sbb
xchg
xchg
in
out
test
mov
mov
mov
xchg
repnz
jbe
push
dec
dec
pop
mov
adc
fldpi
test
cmp
cmp
jg
cld
mov
adc
jecxz
xchg
in
jo
pop
push
mov
add
les
add
push
out
lcall
jl
cltd
insb
xchg
bound
ret
dec
xor
jno
jae
icebp
adc
cmp
mov
cs
outsl
cmpsl
adc
and
movsb
mov
push
testb
lret
popf
xchg
rclb
pop
or
bound
cli
sbbl
ljmp
mov
repz
dec
icebp
inc
es
imul
test
sub
jne
sbb
maskmovq
negl
and
pop
stc
pop
jae
cld
out
adc
dec
js
mov
mov
add
sarb
xor
ljmp
flds
lea
pop
shll
inc
jmp
fidivrs
sub
fisubs
clc
push
rdpmc
cmc
mov
mov
mov
mov
pop
mov
dec
push
lods
lock
lret
push
aam
add
lahf
arpl
or
jp
or
and
in
push
and
mov
adc
pushf
inc
mov
mov
pop
mov
and
or
cmp
test
in
out
mov
mov
pop
cmp
lods
test
push
outsb
adc
loope
test
and
dec
xchg
fsubrl
dec
add
aas
cmp
aas
xchg
cmpsb
fildl
imul
sub
xchg
out
aas
xlat
cmp
cs
push
cltd
mov
adc
fcmovbe
sysexit
sub
and
pop
pushf
into
loopne
je
push
pop
dec
fs
xchg
cmp
mov
lods
or
loopne
das
xchg
xchg
jbe
pop
dec
js
push
icebp
push
int3
clc
xchg
jle
out
pop
inc
leave
test
sbb
lock
jno
cwtl
pop
adc
scas
cli
fsubrs
and
mov
mov
mov
pop
ret
mov
pop
outsb
dec
or
jge
and
mov
push
sbb
icebp
aaa
fucompp
lea
test
jne
mov
adc
nop
or
push
mov
jecxz
mov
xor
fs
aam
fcomps
push
push
jne
jns
mov
cmp
adc
ljmp
cmpsb
push
sahf
sbb
jmp
aas
daa
inc
enter
mov
sbb
add
ret
cld
decb
jo
inc
mov
cmp
mov
pop
push
les
add
or
mov
xchg
dec
lds
bound
icebp
xor
int3
mov
jns
mov
mov
pop
pop
jmp
mov
stos
jo
out
mov
sbbl
bnd
mov
popf
andl
test
sbb
pusha
dec
mov
sbb
mov
push
jno
push
jbe
scas
cs
mov
stos
push
hlt
sub
fcmovnb
cwtl
or
sti
push
mov
mov
rol
xor
add
add
inc
ret
jae
orl
mov
movsl
inc
rolb
xor
fildl
inc
add
cmp
sub
scas
mov
sbb
adc
in
stc
add
mov
pop
add
lahf
ret
jns
mov
fidivrl
fsubl
sub
inc
out
sbb
cmc
mov
lcall
sub
je
ret
or
shr
sbb
jbe
dec
mov
rclb
dec
cli
shrl
jb
inc
add
add
mov
stc
inc
adc
add
rolb
mov
add
sbbl
push
aaa
test
scas
jl
out
out
pop
pop
mov
sbbb
fwait
sahf
inc
mov
iret
pop
call
push
aad
pop
mov
mov
or
dec
pop
pop
scas
inc
in
sbb
push
or
push
or
push
xor
and
inc
cltd
arpl
pop
aas
sarl
jnp
mov
mov
mov
pop
xor
mov
mov
into
js
mov
test
lahf
jo
es
inc
lea
shrl
mull
mov
adc
and
arpl
cmp
out
fidivs
xchg
inc
mov
ret
sbb
lods
push
dec
test
dec
mov
ja
cld
lret
or
push
push
stc
jge
aaa
xlat
sbb
movsl
mov
aas
pushf
or
add
pop
daa
push
cmp
test
jne
dec
dec
in
xorb
mov
mov
les
lea
andl
fstpl
adc
fists
sti
mov
iret
and
or
fs
fstps
cmp
or
and
jl
mov
in
xchg
mov
adc
or
ss
mov
ss
lods
mov
call
das
test
inc
mov
inc
push
and
fisttpll
fs
clc
sub
repnz
les
popa
rorl
sub
in
rolb
movsb
xlat
lds
push
push
sbb
dec
icebp
pushf
in
and
aas
and
xchg
add
ss
lds
dec
mov
call
incl
stc
pop
jno
sbb
frstor
fistps
je
popf
stc
mov
shll
aad
dec
xchg
push
aas
xchg
test
sub
pop
rcrl
or
push
mov
lahf
pushf
add
mov
loope
adc
push
jge
hlt
pop
sbb
sbb
pop
lods
addr16
lret
aad
and
jbe
testl
mov
mov
xorb
fsubs
sub
add
xor
dec
test
outsl
clc
mov
aas
into
ja
insb
repnz
or
outsl
ljmp
mov
mov
sbb
arpl
test
adc
repnz
adc
insl
fdivrs
jb
movsl
inc
mov
dec
jno
sbb
xchg
jmp
push
out
xchg
inc
jecxz
shll
pushf
test
aas
and
fldt
dec
sbb
dec
dec
adc
gs
or
movsl
jbe
pop
das
movsb
inc
pop
popa
arpl
imul
pusha
push
dec
mov
xchg
jne
adcl
jmp
sbb
fdivr
aad
rol
or
dec
pop
push
xchg
mov
rcrb
int3
mov
pop
jge
lea
movsb
push
insl
cmc
lods
rorb
inc
loope
addb
les
daa
movsl
ret
inc
or
sub
std
add
or
mov
repz
jnp
movl
or
pushl
or
jl
add
lahf
pop
data16
test
mov
adc
fucom
push
out
mov
cli
mov
mov
jbe
fwait
and
and
xchg
cmp
aas
pushf
idivb
add
or
push
fucomp
lcall
out
mov
push
xchg
dec
imul
ds
gs
popa
xor
or
aam
pop
test
dec
sbb
ret
outsl
out
lahf
outsb
jae
dec
mov
aad
xchg
shll
or
or
stc
repz
cmp
xchg
es
jle
dec
cmp
out
mov
adc
pop
and
xorb
cmp
lea
in
mov
xor
mov
cmpsl
xchg
inc
pop
jnp
icebp
pop
push
add
stos
int
das
in
test
fldenv
je
or
out
loope
fnsave
movsb
mov
or
daa
dec
mov
and
jecxz
xchg
adcl
aam
xor
test
pop
test
iret
rorl
mov
je
aam
mov
inc
shr
lcall
add
jb
bound
add
adc
push
loope
stc
xlat
les
adc
mov
addr16
mov
dec
push
adc
ds
popl
test
push
pop
pop
stos
cmp
xchg
add
into
icebp
add
out
dec
leave
add
adc
dec
inc
xor
lcall
mov
nop
into
in
add
std
hlt
sbb
adc
aam
sbbb
xchg
call
popa
scas
aas
lock
mov
jmp
push
out
cmpsb
cmc
or
adc
or
lret
pop
or
jmp
push
stos
repnz
sub
jns
popf
in
jne
je
mov
sbb
push
and
cwtl
adc
notb
cli
fwait
cli
push
cli
push
xchg
orb
cli
pop
inc
dec
nop
cmp
lea
dec
mov
ljmp
ds
ret
inc
push
testb
adc
fldenv
pop
sub
xor
loope
pusha
cld
sbb
inc
pop
adc
sbb
add
lock
in
jle
inc
xor
sbb
mov
jmp
dec
lock
out
shlb
jbe
cmpsb
lods
shrb
sub
roll
aam
add
pop
cmc
std
or
cmp
ja
ret
ss
arpl
stos
inc
cmp
and
pushf
jecxz
cwtl
ret
pusha
ss
xor
mov
andw
lcall
ficompl
arpl
lods
repz
int3
fidivrs
aaa
dec
sbb
jmp
sub
int3
pop
xor
xchg
ljmp
bound
or
lods
or
cmp
ret
sbb
cmpsl
gs
or
inc
jg
sti
push
jno
mov
fcmovb
ret
sbb
ljmp
hlt
sbb
scas
fsubrl
out
rclb
out
mov
nop
das
cmpsl
inc
rcr
jo
push
add
popf
outsl
add
dec
push
xchg
mov
dec
xchg
push
dec
stc
xchg
jo
sub
fs
pop
sbb
aam
cmp
push
test
rcrb
in
dec
les
orb
or
pop
inc
in
icebp
aas
pusha
inc
adc
push
pusha
gs
fdivrp
out
xchg
test
jb
int3
in
dec
aaa
mov
cmp
and
push
insl
adc
loope
decb
mov
fwait
ret
in
xchg
jae
xchg
mov
adc
sbb
ficoms
xchg
mov
adc
mov
mov
cmp
dec
mov
outsl
push
push
jecxz
stc
test
data16
into
test
mov
repnz
inc
mov
stc
xchg
roll
stos
mov
es
adc
fdivrl
les
mov
mov
leave
pop
les
pop
cmp
mov
aas
in
pop
mov
mov
ds
or
lret
lret
cli
js
sbb
push
ss
adc
sti
add
hlt
jnp
lods
cmp
mov
adc
add
inc
xor
mov
push
or
xor
dec
or
clc
jb
cmpsl
xor
test
mov
shr
popl
outsl
jecxz
test
hlt
push
dec
sub
xor
mov
mov
repz
popa
jns
es
inc
or
cmp
lds
jbe
sub
push
dec
push
sub
mov
jno
fcompl
fs
shrl
or
test
out
aad
xchg
inc
fnstcw
push
incl
pop
xchg
stc
pop
cmp
or
icebp
inc
sbb
fmuls
std
invd
lahf
scas
sbb
pop
cmc
cmp
mov
sbb
or
and
pusha
js
mov
les
xchg
call
ss
ljmp
lahf
push
adc
fiaddl
jg
xor
dec
out
mov
fistpl
das
sahf
sub
mov
shrb
stc
cld
push
fidivrs
in
lret
mov
ljmp
fs
dec
std
and
callw
push
jne
sahf
pop
or
sbb
or
ds
clc
push
inc
push
xchg
cmp
test
sbb
lahf
data16
pusha
adc
inc
icebp
adc
out
into
pop
hlt
cmp
in
mov
fdivr
out
or
outsl
fadds
dec
outsl
cmpsb
cs
int
push
lret
push
and
pop
movsl
ja
cwtl
repnz
subl
dec
leave
xchg
ret
sarb
inc
les
jle
dec
ljmp
test
or
aam
add
or
add
pusha
lock
jmp
test
jecxz
lcall
jecxz
dec
mov
xor
test
jecxz
inc
pusha
shr
sbb
jg
or
inc
mov
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
dec
test
loopne
shll
jmp
bound
xor
cmp
mov
or
fwait
pop
popf
pusha
psadbw
and
pop
adc
or
push
movsl
je
push
sub
push
dec
movsl
pushf
jecxz
push
jo
sub
notb
jno
adcb
rcrl
fstps
into
sahf
add
es
hlt
in
cli
xchg
and
mov
es
imul
les
push
mov
and
cmp
add
jp
pushf
sti
dec
int3
loop
outsl
pop
fnstenv
xor
rcrl
lods
cmp
push
push
mov
and
in
addr16
arpl
int3
mov
outsl
es
lock
scas
mov
pop
or
mov
and
jae
iret
mov
and
xor
lock
int
xchg
sbb
out
int3
mov
loop,pt
push
xchg
sbb
aad
ret
mov
insl
sub
pushw
cmc
push
stos
adc
aaa
or
sbb
insl
dec
divl
shlb
xchg
aas
popl
imul
popa
lods
mov
out
aad
aam
push
lock
lea
orb
xchg
dec
sbb
sub
enter
lock
pusha
jg
stos
jecxz
sar
lods
adc
jbe
xchg
ds
adc
sbb
or
push
cmp
inc
jae
fistpll
push
add
movsl
push
outsb
mov
movsb
push
std
mov
and
cmp
fnstcw
sub
mov
jge
push
mov
jmp
or
cli
ljmp
loop
inc
movsl
xor
and
test
nop
flds
inc
cmp
xor
push
outsl
test
cmp
lock
nop
push
cmp
adc
pushf
popf
sarl
lea
loope
out
or
push
push
cmp
pop
into
lods
or
imul
ret
adcb
movsb
jns
xor
jp
sbb
dec
xor
sub
cmp
ret
addl
add
xor
das
insl
push
xor
sarb
lock
bound
jecxz
pop
pop
pop
mov
cs
xchg
xchg
mov
cmp
hlt
pop
imul
dec
pop
pop
jbe
bound
dec
ja
and
notb
jge
inc
adc
lahf
mov
jp
xchg
push
scas
cmpsl
repnz
insl
pop
add
inc
sbb
fs
das
mov
dec
lds
outsl
in
loopne
mov
lock
push
mov
jecxz
inc
subl
or
or
sub
repnz
mov
ja
inc
dec
cmp
mov
cmp
push
je
xor
rorl
push
inc
movl
mov
fstl
inc
movsb
lods
sbb
data16
mov
int
shll
data16
bound
xchg
pop
icebp
repnz
mov
movsl
lcall
les
and
sarl
call
gs
mov
mov
push
divb
fistps
fisubrs
insl
stos
jl
in
in
jns
sbb
int
int3
mov
scas
inc
ret
push
xor
ljmp
mov
mov
pop
jne
div
lods
add
pop
icebp
jb
push
ror
and
les
adc
xchg
mov
aad
push
enter
jmp
gs
jnp
fimull
hlt
mov
out
ss
adc
scas
rcrl
subb
add
pop
outsl
cmp
mov
adc
je
or
dec
out
add
popf
stos
int3
imulb
fistpl
sbb
insb
jl
inc
or
mov
mov
out
data16
xchg
aam
shll
icebp
cld
mov
bound
or
jp
test
lahf
jecxz
je
iret
stos
les
inc
das
pop
mull
or
daa
mov
dec
mov
fisttps
pop
stos
mov
shll
or
or
scas
mov
sti
loop
imul
xchg
mov
enter
and
sahf
jns
fwait
or
das
mov
pop
test
and
movsl
pop
xor
jae
xchg
jle
sub
mov
dec
xor
sub
inc
cld
mov
les
cld
cwtl
add
push
and
jmp
call
repz
add
xchg
fdivl
pop
mov
arpl
rol
jge
mov
jecxz
xor
mov
mov
repnz
sbb
aas
lret
fsubr
adc
enter
dec
iret
mov
test
ja
insb
in
sbb
push
int3
mov
jmp
xchg
cli
pop
xchg
jnp
cmc
sub
sti
inc
or
daa
lea
bnd
adc
xchg
mov
lods
xor
stos
push
jl
pusha
test
dec
xchg
mov
xor
inc
inc
xchg
insb
cmp
loopne
test
jl
adcb
in
sub
sub
mov
pop
cmp
out
pusha
sbb
scas
outsl
cmp
in
push
mov
les
arpl
hlt
addr16
mov
leave
xchg
xor
mov
cltd
rcr
lahf
es
test
test
dec
pop
int
sub
dec
ret
sbb
cli
inc
call
sarb
and
mov
ja
into
and
cmp
outsl
lret
dec
mov
xorb
adc
fldt
test
roll
jo
in
and
lods
cmp
inc
and
inc
call
adc
sbb
push
aam
add
mov
into
xchg
xchg
frstor
mov
out
pop
ret
jbe
mov
or
jo
or
ror
int3
inc
imul
repz
lahf
mov
inc
jecxz
roll
jns
stc
aad
jecxz
push
add
or
inc
pop
pop
push
iret
fistl
adc
push
stos
test
push
push
mov
pop
subb
fstl
pop
ds
mov
gs
push
add
cmpsb
fwait
xchg
into
sbb
and
or
dec
cmpsb
into
int3
xor
push
or
imul
clc
enter
mov
call
push
inc
pop
cld
or
adc
int
shr
cmp
lods
pop
stc
daa
push
dec
cmpsb
dec
data16
mov
mov
pop
push
jp
or
cmp
push
clc
loopne
aaa
or
ret
sbb
sbb
out
addr16
sub
and
rcpps
mov
dec
sbb
into
push
xchg
jecxz
rcl
jp
frstor
sub
or
mov
mov
mov
mov
xor
adc
fsubs
jp
add
cs
mov
and
test
in
xor
clc
scas
les
mov
pop
mov
push
dec
ds
cmp
daa
lcall
push
adc
jecxz
mov
cmp
call
sahf
jns
fmul
dec
xchg
add
jge
out
jo
sbb
syscall
inc
mov
fst
jno
fcompl
cmp
or
lret
mov
test
imul
push
or
sub
negl
mov
or
sub
sarl
dec
push
mov
add
ja
jo
lcall
addr16
cli
pop
xchg
sbb
or
mov
cmp
in
mov
sahf
sub
mov
movl
movsb
or
mov
xchg
cld
xchg
mov
fcoms
pushf
test
addr16
xchg
inc
and
jle
jmp
and
mov
icebp
mov
sbb
inc
mov
push
lcall
push
cmpsl
sub
or
or
jmp
pop
mov
xchg
aaa
push
call
and
dec
mov
lahf
jmp
test
into
or
ds
out
mov
and
cmpsb
cwtl
or
pop
aad
mov
mov
imul
out
pop
add
repnz
xor
or
scas
adc
or
xor
ja
outsb
lret
xchg
push
mov
outsb
pushf
cltd
mov
dec
mov
xchg
sbb
sub
mov
rcrb
fsubrl
repnz
mov
push
dec
push
add
loopne
int3
push
cmp
rorl
enter
push
jae
xchg
mov
lret
xchg
add
pop
push
pop
imul
int3
push
sub
cltd
ja
cmpsb
popf
jno
adc
in
addb
cmc
jo
mov
je
or
gs
scas
outsb
xor
jp
sub
mov
pop
je
mov
test
sbb
loopne
aad
pop
xlat
leave
loop
inc
roll
sbb
pop
jo
push
idivl
inc
outsl
sub
ss
adc
icebp
push
scas
fs
cmp
cmp
lds
icebp
add
ja
cmp
imul
in
inc
dec
and
sbb
mov
outsl
xchg
mov
and
lret
mov
push
mov
ret
arpl
inc
repnz
pop
push
adc
pushf
push
data16
dec
push
sahf
sub
repnz
adc
mov
mov
or
mov
mov
fdiv
cmp
shlb
xlat
pop
or
add
test
sbb
imul
std
fnstsw
mov
popa
scas
orb
cmp
sbb
ror
or
sbb
sbb
pop
fwait
inc
imul
mov
out
push
movsb
cld
jb
test
inc
pushf
mov
mov
hlt
adc
jnp
scas
sub
testl
mov
fbstp
inc
adc
mov
adc
jg
push
push
into
fiadds
adc
in
ficomps
add
xchg
outsb
cwtl
mov
aas
lret
push
xchg
adc
cli
loope
imul
imul
xchg
popa
mov
fmuls
addl
daa
adc
iret
mov
pop
cmp
or
cli
and
push
cmp
mov
pushf
dec
mov
pop
loope
mov
shll
jno
dec
loope
jnp
xor
add
sbb
stc
enter
inc
xchg
cwtl
mov
sub
es
dec
push
arpl
dec
mov
cmp
or
add
cmp
inc
aaa
fcompl
lret
xchg
push
arpl
sbb
xor
push
and
test
fimull
pop
sub
push
jmp
add
push
and
xchg
push
mov
filds
sub
js
sbb
aaa
or
iret
mov
daa
inc
inc
mov
sahf
std
in
std
xchg
js
push
cltd
mov
ret
cmp
sbb
sub
jge
push
notl
enter
adc
pop
adc
mov
mov
cmp
inc
dec
inc
jb
lods
xor
jbe
ljmp
dec
popa
mull
js
add
out
outsb
data16
mov
add
imul
xchg
fadds
out
add
cmp
sbb
and
addr16
popf
inc
cltd
test
ja
jmp
es
inc
dec
jmp
fsts
xchg
dec
xchg
aad
icebp
fs
out
icebp
jl
and
ret
push
jo
stos
sbb
cld
scas
pop
dec
push
cmp
jbe
test
mov
fucomp
lock
mov
xchg
test
xor
ljmp
test
orl
bound
lea
ds
mov
imul
ja
pusha
imul
dec
insb
jg
decb
inc
add
cmpb
push
jbe
ljmp
xor
cmpsb
shll
test
repz
push
adc
loop
rcll
mov
mov
test
jnp
mov
xor
jge
or
lcall
push
xor
pop
and
sbb
push
xor
pop
push
mov
jmp
loop
xchg
push
roll
cmc
cmpsb
pop
or
pop
repz
add
pop
arpl
enter
dec
and
cmc
sub
cli
mov
jp
in
popf
pop
mov
scas
mov
dec
out
or
dec
cs
inc
cwtl
xchg
mov
push
test
xor
test
mov
push
sub
mov
jmp
jmp
xor
xor
repz
into
pushf
xchg
push
mov
or
jp
cmp
inc
xchg
and
ds
pop
cmc
scas
mov
fs
sbb
lea
sbb
test
out
xchg
loopne
xor
mov
popf
or
xor
icebp
inc
jno
test
stos
push
and
lds
out
jl
or
cmp
lea
sub
dec
fwait
arpl
sarb
aas
ret
mov
xchg
or
repz
or
fnstcw
sub
in
sarb
popa
or
jp
decl
out
imul
and
adc
mov
mov
mov
movb
fwait
mov
arpl
pop
test
addr16
decl
mov
add
icebp
adc
or
inc
adc
ss
rclb
xchg
and
push
pop
or
inc
pop
dec
lds
pop
dec
das
mov
add
or
or
jmp
ror
mov
andb
inc
out
shr
mov
into
push
mov
cmp
mov
dec
mov
fsub
mov
lcall
fistpll
fs
out
push
push
xor
stos
cmpsl
sub
ret
hlt
sub
jns
add
shlb
mov
add
jg
mov
cmp
mov
add
imul
jb
scas
int3
pop
sub
lods
add
hlt
sub
fnstcw
sub
stos
dec
lcall
lds
sbb
cwtl
fmulp
pusha
aam
pop
loopne
movsb
sub
ljmp
push
lods
mov
sub
scas
xor
push
push
mov
pop
mov
arpl
out
or
es
lahf
popf
adc
out
movsl
inc
pusha
inc
adcb
rorl
lods
push
hlt
sahf
int3
inc
jnp
stc
sub
inc
jg
mov
stc
sub
sub
push
repz
repz
mov
push
dec
inc
ja
clc
and
cwtl
adc
pop
adc
xchg
in
insl
jo
mov
ds
pop
rolb
movsl
cli
loope
dec
jp
jo
xchg
in
leave
adc
aad
jg
hlt
cmp
lret
mov
mov
test
ja
mov
lds
imul
jbe
push
jo
adc
sarl
pusha
pop
jecxz
lock
push
dec
mov
xchg
mov
and
insb
out
add
mov
fwait
push
sbb
push
adc
jns
out
cwtl
cmp
dec
cmpsb
sub
lods
xor
subb
fwait
subl
and
cmp
jbe
out
dec
ret
cltd
inc
push
jno
adc
in
ds
mov
xor
and
pushf
movb
pop
pop
bound
xor
pop
jne
mov
rcr
pushf
imull
jnp
mov
fdivrs
pop
enter
sub
adc
nop
push
mov
mov
add
adc
push
add
inc
setg
rcl
sti
lea
jmp
xchg
jmp
mov
pop
les
adc
imul
insb
inc
xor
adc
sbb
int
push
add
push
add
sbb
mov
sub
add
shl
imul
jmp
xchg
add
mov
mov
fistl
lcall
push
pop
test
ret
mov
dec
stos
xchg
pop
rclb
and
sbb
sbb
cli
adc
xor
fiadds
xorl
fwait
jae
rclb
cltd
mov
mov
pop
jge
jbe
or
mov
mov
dec
sarb
scas
stc
fdivrs
ret
dec
inc
rorb
ret
and
test
int
jb
aas
ret
push
mov
adc
testb
jbe
imul
stos
in
xchg
xchg
jge
fs
inc
cli
dec
imul
movsl
sbb
mov
push
mov
imul
or
and
mov
xlat
sarl
imul
lretw
xchg
bound
dec
mov
hlt
cmpsl
pop
orb
mov
mov
mov
das
fcomp
fldenv
data16
scas
daa
adc
mov
js
xchg
xchg
arpl
rcrl
popf
or
sar
outsb
xchg
cli
out
int
in
pop
addr16
into
mov
scas
or
xor
movsb
jbe
dec
lcall
adc
lret
sbb
mov
jns
push
and
dec
dec
enter
jecxz
and
push
push
insl
movsb
mov
es
adc
sbb
mov
mov
js
inc
or
mov
xor
lods
mov
sti
push
mov
adc
or
into
cvtps2pi
int
lcall
das
xor
xor
cmc
leave
or
es
hlt
cmp
cmp
pop
pop
imul
push
sub
daa
repnz
data16
popf
scas
mov
add
pop
bound
cld
adc
mov
paddusb
ljmp
fwait
addl
push
into
aaa
adc
lds
pop
test
xchg
mov
outsb
cmpsl
jmp
mov
imul
dec
xchg
xchg
outsb
ret
adc
push
jmp
mov
out
cmp
fldt
mov
adc
fdivr
mov
mov
shl
pusha
lea
test
out
les
xor
xchg
sub
arpl
fildll
daa
filds
jo
inc
xor
mov
decl
test
dec
ss
mov
inc
or
sbb
adc
sub
push
push
ds
push
mov
adc
xchg
orb
or
push
movsl
loop
push
pop
mov
je
test
mov
addb
inc
std
imul
ror
jecxz
cmp
pushf
shl
inc
stc
fldcw
test
sub
mov
scas
add
stc
and
jne
add
iret
pop
aas
popa
lret
popf
sahf
and
out
xor
mov
push
cwtl
mov
xchg
nop
xor
and
xor
or
xor
adc
scas
mov
lret
sbb
pop
xlat
lret
lea
rcr
enter
push
aaa
mov
jnp
pop
ds
in
insb
aam
loop
jg
aam
ret
inc
ret
je
jo
pusha
subl
mov
rorl
shll
lcall
add
mov
fs
and
lret
and
mov
mov
xor
orb
jno
cmp
cmp
jge
lcall
ss
add
xchg
push
js
clc
sbb
pop
cltd
dec
mov
add
inc
mov
pop
push
push
hlt
jnp
imul
mov
add
leave
popf
cs
mov
movsl
xor
in
xchg
lret
xchg
add
pop
pop
andb
and
insb
testl
pop
and
addr16
arpl
mov
ret
cmp
inc
arpl
cmp
sub
stos
push
mov
push
stc
shrl
adc
call
cmp
test
cs
out
add
push
jl
add
push
int3
dec
imul
xchg
cmp
mov
adc
lods
cs
mov
sarl
add
and
fucom
mov
pop
mov
push
sbb
and
jecxz
jecxz
negb
int3
dec
sbb
dec
mov
sti
jle
mov
adc
rcll
pop
fists
push
lahf
cld
jne
adc
mov
push
pop
lahf
mov
jmp
out
sub
xchg
rclb
cmpsl
jmp
sub
test
das
rcl
push
add
scas
jle
and
jl
inc
daa
shll
popa
push
rclb
jp
ja
dec
std
pop
jbe
mov
push
mov
pusha
cmp
mov
push
mov
jne
inc
mov
xchg
shl
adc
lods
mov
dec
pop
cmp
ds
sti
ss
mov
adc
test
pop
in
mov
add
mov
xchg
jns
add
cmpsl
pop
jg
push
push
pop
adc
and
pop
xchg
rcrl
mov
pop
stos
in
push
dec
aad
das
imul
cmpsl
and
xlat
and
push
and
mov
loop
fimuls
les
test
xchg
push
into
inc
pop
jnp
idiv
and
add
xor
adc
jg
aad
mov
mov
test
loope
pop
in
mov
dec
repz
andl
bnd
pop
jl
pusha
addr16
mov
push
std
mov
mov
aas
cmp
add
inc
stos
rorl
mov
shrb
push
cld
scas
addb
adc
mov
lcall
sub
sbb
dec
test
jecxz
jo
xor
cmpsl
jne
adc
jne
add
nop
cmp
mov
or
insl
pop
adc
dec
and
push
mov
mov
sub
shlb
xor
ret
mov
mov
cwtl
int
cmp
dec
pop
in
loop
adc
jmp
mov
jp
lods
rorb
mov
xor
outsl
mov
pop
mov
adc
jbe
xor
cli
das
xchg
sahf
and
js
mov
into
jnp
sub
or
fisubrs
mov
in
scas
fsubp
out
std
inc
mov
xor
repnz
sub
out
push
jnp
addb
inc
fcmove
lcall
lcall
lock
decb
test
dec
cmp
or
mov
dec
hlt
out
dec
es
fnstsw
shll
cs
cmp
arpl
xchg
and
cmp
and
jle
loop
gs
sub
mov
mov
push
push
addr16
imul
cmp
sarl
jle
jb
adc
cs
jae
ret
cmp
xchg
rcrl
inc
rcll
mov
testl
icebp
icebp
jmp
xor
pop
cwtl
sbb
test
mov
lods
sti
rcr
nop
adc
fsts
stos
pop
mov
lea
mov
xchg
xchg
lds
ss
pop
orl
aad
aad
sub
or
addr16
mov
fadds
decb
xchg
popf
rcrb
mov
add
sub
fcmovbe
in
push
xchg
sarb
enter
jbe
dec
jne
ss
mov
mov
mov
int3
push
inc
jl
xchg
popf
xchg
int
mov
sub
and
mov
jmp
fcomi
les
les
or
cmp
sarb
aaa
add
jo
lods
dec
repnz
sbb
movsb
adc
mov
jae
pushf
dec
xor
pop
or
pop
iret
mov
mov
andb
lret
gs
push
inc
jno
dec
lcall
jp
cmpsb
test
add
aas
rcrl
adc
dec
std
and
daa
aaa
cmpb
cwtl
cmpsb
xor
jbe
imul
and
xchg
stos
mov
mov
int3
in
pop
dec
cmpsl
fsubrs
adc
and
and
dec
sbb
fists
jp
sub
out
ret
adc
inc
push
dec
jb
frstor
js
and
cmpsb
ds
daa
out
shr
adc
adc
jp
rcl
pop
inc
cs
bound
inc
mov
out
sbb
fwait
xchg
dec
push
imul
lods
fs
xchg
jg
push
mov
ja
test
mov
jno
jge
out
push
and
sbb
test
incl
cmc
mov
xchg
icebp
pop
es
cmp
icebp
cmpsl
inc
or
xchg
out
push
jmp
mov
shl
sbb
mov
xchg
mov
cmp
rorl
sbb
mov
or
mov
ror
shlb
cmp
fstps
icebp
sbb
add
xchg
dec
or
cmc
test
into
push
or
test
mov
inc
adc
push
push
and
xchg
movsb
xchg
loop
mov
pop
push
es
fmul
adc
dec
sub
jo
inc
dec
mov
fstpt
icebp
jmp
and
pop
loopne
ja
nop
mov
pop
mov
sbb
out
insl
and
mov
and
imul
xchg
mov
cli
jl
push
aad
jb
hlt
int3
mov
int
push
test
je
lods
fdiv
aam
and
mov
cltd
je
lods
jmp
xlat
aad
stos
sbb
loope
cmpsb
ss
push
xchg
inc
cmp
or
push
cmp
aas
je
dec
pop
push
rol
cwtl
outsl
push
rorb
xchg
sub
xchg
pop
mov
pmulhw
inc
mov
inc
lods
xchg
and
jg
and
popa
xchg
mov
mov
cwtl
out
push
push
mov
ret
cltd
sbb
and
or
jns
mov
sub
sbb
ret
xchg
dec
sub
aaa
aaa
push
mov
out
and
sbb
negl
rorl
sbbl
mov
push
stos
mov
pop
movsb
mov
popf
pop
outsb
cmpsl
pop
loopne
shrb
mov
fwait
jmp
or
test
or
imul
pop
push
cmp
dec
mov
pushf
or
cs
push
jb
add
sbbl
cmp
shrl
fcomp
mov
sbb
mulb
and
repnz
or
insl
and
xchg
cmp
push
sbb
xor
lahf
repz
mov
mov
inc
push
xchg
cld
mov
loop
add
insb
icebp
jnp
dec
leave
ret
push
or
pop
test
mov
hlt
xorl
add
insl
shl
jp
mov
dec
mov
mov
sub
mov
into
gs
sbbl
stos
call
jle
movsl
and
ret
cmp
sub
jmp
imul
in
pop
lods
clc
mov
pop
or
cmp
imul
cmpsl
arpl
push
inc
rcrl
jnp
or
sahf
push
sub
pop
mov
pop
push
pop
jno
iret
xor
movsb
mov
dec
push
imul
mov
dec
cmp
jb
mov
pop
and
data16
aaa
and
popf
add
cli
xchg
adc
adc
fildl
arpl
dec
push
xchg
xor
leave
pop
push
xchg
jns
fisubrl
dec
test
in
or
scas
outsl
aaa
xchg
mov
shrb
stos
cmp
mov
lock
fbld
inc
jl
orl
dec
aad
pop
leave
add
inc
lods
mov
mov
daa
repnz
cmp
push
incb
push
cmp
movsb
xor
sbb
aas
xchg
jp
add
jne
and
stc
fcompl
cmp
js
jge
lods
inc
fcompl
std
sbbl
lea
mov
cmp
jnp
xchg
sbb
paddb
in
jbe
mov
mov
adcb
sarb
ds
sub
enter
in
fldt
push
xchg
test
sub
jb
push
cmc
in
mov
iret
push
jg
in
lods
push
movsb
cwtl
insl
imul
lods
mov
push
shll
xchg
add
imul
adc
imulb
lds
pop
mov
clc
stc
mov
in
push
push
js
xchg
sar
dec
mov
push
pop
ret
pop
sub
or
xchg
cmpsb
pop
xchg
xor
fs
lock
mov
jnp
push
cld
xchg
ret
adc
inc
xor
xor
mov
aam
ret
dec
inc
jmp
repz
add
and
push
dec
pop
sbb
lcall
cmp
es
shl
dec
dec
jae
pandn
int
xchg
push
cmpsb
iret
scas
jb
aad
das
adc
pop
mov
or
in
std
mov
es
adc
xor
cmp
mov
pop
repnz
mov
aad
fwait
aam
sti
movsl
xor
pop
inc
mov
mov
dec
mov
jmp
mov
jns
pushf
loopne
add
clc
xor
es
hlt
push
sahf
mov
or
stos
rclb
xchg
jne
sarb
xchg
cmc
sub
adc
fisubrl
out
out
sub
stos
aas
sbb
mov
es
aas
or
sahf
and
adc
mov
stc
pop
push
mov
mov
cmp
in
mov
inc
push
push
mov
lret
call
divl
aas
or
mov
les
xor
push
fs
aad
pop
xchg
aam
push
into
cwtl
mov
repnz
stc
mov
xor
cmc
js
add
mov
xchg
or
js
ss
inc
ret
xlat
repz
rclb
in
xor
add
mov
xchg
stc
mov
notb
inc
clc
aam
mov
cmp
sbb
ds
add
and
add
pop
and
nop
decl
mov
inc
xchg
pop
mov
fadds
jg
into
test
xor
loope
std
mov
sub
adc
pop
mov
jns
test
xchg
aas
repnz
lock
xor
leave
mov
jne
daa
cmp
call
jns
imul
pop
ret
xchg
push
shrb
inc
dec
in
xchg
mov
lret
repnz
insb
in
push
adc
fwait
sahf
xchg
cltd
clc
mov
gs
dec
push
mov
xchg
push
and
mov
add
cmp
mov
push
stc
sbb
mov
xchg
and
cwtl
fwait
push
push
test
gs
cmp
mov
add
jae
xor
mov
add
es
or
cmp
je
mov
sbbb
pop
xchg
pop
sub
cwtl
lds
push
nop
movsb
adcb
scas
push
adc
dec
cmp
sbb
cli
aas
or
xor
les
inc
adc
adc
movsb
push
std
dec
pop
inc
idivb
jge
hlt
mov
rol
popa
push
push
sahf
std
dec
int
stos
xchg
cmp
scas
cmp
cmp
ret
lret
lahf
andl
sub
in
or
js
ljmp
xor
push
mov
jne
ret
push
shr
out
push
and
mov
push
std
mov
sub
in
hlt
clc
or
je
aam
pop
inc
frstor
inc
arpl
pop
jo
rorl
dec
cmp
out
inc
das
jmp
rclb
dec
std
pop
inc
dec
mov
insl
pop
and
repnz
xor
fists
jnp
rcr
sbb
int
cli
leave
push
sbb
clc
imul
sahf
sbb
jge
mov
fadd
push
scas
shlb
sub
daa
inc
xor
fnstenv
sub
aad
xor
add
stos
jmp
lahf
jbe
mov
imul
mov
sub
in
mov
xor
xor
pop
dec
mov
sbb
inc
and
stc
stos
sub
pop
in
aam
adc
add
xor
loop
inc
add
pop
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
hlt
int
fwait
dec
lea
jmp
bound
inc
adc
sbb
mov
mov
jnp
add
aam
add
icebp
cmp
sarl
imul
rcr
lods
mov
in
or
dec
dec
or
ret
add
loop
in
xchg
test
aad
ret
jge
insl
stos
and
outsb
es
adc
fimuls
stos
pop
pusha
mov
push
add
cmp
and
test
push
jae
sub
stos
fisubrs
movsl
jo
push
xor
hlt
scas
orl
sub
push
ljmp
sahf
push
insl
mov
imul
sub
scas
fidivl
movsl
test
mov
int3
sbb
lret
mov
fmull
addr16
shll
add
xchg
xlat
pop
fidivl
jo,pt
loopne
mov
add
mov
and
cmp
fsubrs
push
xchg
or
mov
movsl
push
push
test
hlt
mov
movsl
arpl
jecxz
cmp
lods
fstpl
fisttps
arpl
mov
mov
sahf
mov
cmpsl
scas
dec
mov
mov
mov
rorl
inc
push
adc
in
dec
divb
sub
int
scas
jecxz
xor
sub
inc
out
lock
rcr
or
test
iretw
pop
xor
mov
aam
mov
lea
mov
jo
in
les
repz
loope
loopne
test
mov
ja
pop
push
lea
cmpsl
xchg
xlat
jmp
dec
mov
cmovns
test
jmp
sub
aas
sahf
xor
jg
xchg
xchg
int3
addr16
int
cmc
imul
aas
add
and
fs
insb
idivb
shl
ja
das
mov
xchg
dec
es
push
repz
sbb
or
outsb
ja
lret
add
and
add
sbb
in
mov
test
fnstsw
sbb
mov
sbb
gs
pop
adc
clc
cmpl
dec
movsbl
jge
mov
xor
das
aad
xchg
sub
or
cli
lock
mov
xchg
push
mov
test
inc
xchg
inc
add
pushf
xchg
andl
inc
xor
imul
mov
mov
fstpt
mov
xor
movsb
xchg
nop
jmp
sti
and
ds
sahf
add
jecxz
and
inc
jno
xor
bnd
sbb
sub
aaa
int3
shll
icebp
jns
cld
pop
dec
adc
pop
loopne
xor
dec
fidivrl
mov
sbb
stos
jmp
dec
pop
out
aad
dec
cltd
jmp
scas
shrb
jnp
mov
ljmp
rcll
and
jecxz
subb
cli
shr
dec
bound
xor
and
dec
push
or
xor
sti
jecxz
add
mov
out
aaa
imul
pop
pop
pusha
fucomip
lcall
fsubrs
nop
in
loop
cs
push
adc
nop
cmp
ja
jge
adc
xlat
add
inc
arpl
dec
add
sbb
insl
dec
pusha
test
pop
cwtl
fadd
in
lcall
cmpsl
sbb
mov
test
adc
das
mov
pusha
cmpsl
bound
pop
out
pop
fistpll
pop
mov
add
test
push
sbb
cmpsl
or
push
sbb
pop
ja
pop
xor
xchg
push
popa
dec
push
popf
ljmp
add
leave
cmp
xor
ret
scas
les
jnp
adc
mov
jbe
mov
pop
scas
loopne
iret
and
adc
sub
mov
stc
mov
cmpsb
aam
mov
xchg
mov
call
aam
inc
imul
cwtl
insl
mov
orb
inc
jae
stos
popa
test
xor
shll
out
xchg
adc
fcoml
or
or
sti
mov
stos
je
shr
aas
fdivrl
mov
lret
popa
loope
scas
dec
cmp
pop
jb
out
xchg
mov
dec
add
mov
sbb
sbb
jae
lods
add
pop
int
nop
into
push
mov
xchg
aam
sbb
mov
push
fildll
push
mov
movsl
pop
test
fwait
ss
pop
jecxz
arpl
mov
insl
mov
pop
or
mov
cmp
push
xor
pop
arpl
lcall
sub
daa
and
dec
xor
inc
push
gs
dec
cltd
out
das
outsb
sbb
int3
and
cltd
pop
or
mov
daa
jno
jns
clc
cmp
roll
mov
iret
or
cmp
daa
repz
in
xchg
lock
test
fsubrp
test
mov
cmp
in
lret
adc
movsl
outsl
dec
stc
dec
outsl
mov
push
inc
and
dec
adc
dec
mov
mov
sub
inc
dec
cld
inc
andb
push
jmp
mov
lret
dec
repz
jmp
xor
sbb
inc
fadd
mov
cmp
out
testl
mov
mov
int
xchg
jp
mov
xor
sub
mov
mov
mov
lcall
pushf
jg
push
mov
pop
inc
ds
inc
and
or
and
hlt
in
leave
xor
and
dec
movsl
cmp
iret
scas
mov
xchg
and
daa
mov
cmp
xchg
cli
pop
xor
xchg
mov
push
push
dec
std
sub
ja
inc
out
aaa
jp
or
xor
into
cld
mov
inc
ljmp
pop
mov
shll
push
std
xchg
inc
push
addr16
xor
or
sbb
out
adc
mov
movsb
bound
out
adc
or
inc
cmc
loopne
ret
jbe
cmp
std
inc
addr16
nop
mov
ret
dec
sbb
orl
push
dec
mov
inc
lea
mov
dec
rol
call
push
push
push
mov
jl
sbb
sub
inc
lea
lods
into
stos
cmp
inc
inc
xchg
push
nop
shrb
popa
popf
pop
clc
in
push
pop
daa
mov
mov
je
mov
jnp
les
add
paddb
mov
and
sahf
mov
pop
scas
xchg
push
test
test
mov
jnp
in
aas
mov
outsl
or
mov
loope
jae
add
mov
mov
stc
or
mov
cmp
adc
les
xor
push
in
in
ret
out
jne
loope
mov
cmpsb
out
or
arpl
pop
push
mov
pushf
lock
xor
test
push
fcoml
ja
das
inc
je
das
pop
in
orl
xor
pop
and
fwait
lahf
iret
sbb
cltd
mov
int
pop
int3
movsb
adc
popf
insb
push
adc
sub
std
and
fwait
dec
decl
iret
xlat
fbstp
xor
pop
sub
daa
xor
fs
and
dec
loopne
fisttpl
or
lret
icebp
out
inc
inc
inc
gs
test
add
mov
nop
xor
fldenv
add
jmp
int3
add
push
xor
fistl
cmp
dec
stos
mov
xchg
cltd
lods
cmp
cmp
mov
call
mov
adc
sub
lock
mov
add
ss
or
push
fwait
bound
adc
and
mov
xor
popa
test
dec
sbb
add
stos
xchg
mov
jecxz
das
mov
mov
lea
fiaddl
dec
into
icebp
outsb
dec
push
popa
adc
pop
adc
push
out
jb
jl
dec
insb
cmp
mov
test
jp
or
addr16
push
shrl
mov
scas
add
pop
loopne
lods
lahf
outsl
inc
insb
sub
fs
jle
fadds
cmpsb
adc
and
call
cmpsl
mov
jae
push
cmc
test
inc
rorl
push
movsb
hlt
fistl
mov
ficompl
test
cmp
inc
idivb
scas
xchg
popa
inc
add
aam
push
mov
ja
es
pop
addl
shrb
aad
cs
inc
icebp
inc
cli
jnp
enter
gs
adc
gs
sti
adc
int3
xchg
sub
testb
les
ret
dec
mul
add
out
jmp
xchg
mov
leave
jg
sbb
dec
ficoml
push
outsl
gs
popf
out
pop
dec
adc
mov
cmp
rorl
cwtl
add
rcr
lea
gs
mov
imul
xchg
and
jb
sub
rorl
mov
inc
arpl
dec
lret
jmp
sbb
test
sbb
and
jo
addr16
xchg
push
cmp
sub
or
popa
xor
fcomip
adc
subl
cmc
pop
add
stc
mov
imul
xchg
or
loop
popa
xchg
stos
stos
jns
xchg
or
mov
lcall
into
shlb
mov
xor
jnp
xlat
hlt
and
mov
sbb
nop
cmp
test
and
and
aaa
push
jge
sarl
push
je
push
add
mov
in
jnp
dec
cmp
loope
cld
jg
gs
and
mov
jbe
test
dec
or
std
in
jbe,pn
xchg
jl
into
aam
test
movsl
lret
in
cmp
and
aam
adc
mov
fisubs
jae
int3
scas
cs
cld
xlat
jg
cmp
data16
fdivl
cmp
les
mov
mov
dec
sti
cmpsl
cmp
sti
iret
lret
dec
les
loopew
imul
sahf
mov
inc
inc
dec
scas
mov
aad
mov
enter
sub
js
fwait
mov
mov
cwtl
sub
mov
ffreep
aaa
or
sahf
mov
call
push
inc
addr16
mov
xor
inc
jle
and
jle
daa
out
mov
xchg
push
inc
out
aaa
repz
std
adc
scas
ss
mov
xor
das
test
and
dec
mov
icebp
hlt
imul
nop
clc
mov
subl
fstpl
in
addl
lods
aas
dec
sbb
inc
or
pop
cmc
and
imul
aad
cmpsb
sbb
ss
dec
dec
adc
pop
and
fnstenv
shrb
fcompl
mov
out
outsl
lret
jb
cmp
fdivl
mov
aas
sbb
push
out
cli
das
in
push
test
rorl
repz
loopne
fistl
mov
or
sbb
enter
pop
and
or
popa
les
add
stos
jns
mov
pop
les
outsl
pop
xor
xor
cld
jae
into
and
rcll
dec
dec
repz
and
or
mov
xorl
or
pop
pop
jle
and
stos
push
and
loop
int3
cld
xchg
push
test
icebp
aas
pop
insb
add
inc
mov
mov
mov
push
insb
cmp
jmp
add
test
xchg
repz
addr16
movsl
sbb
or
cmp
and
loop
sbb
push
movb
sbb
jecxz
adc
jmp
into
push
and
das
aas
lods
jne
pop
lret
je
dec
lds
adc
ja
or
xchg
es
xchg
push
pushf
and
shlb
inc
cwtl
enter
outsl
ss
imul
push
mov
movsl
dec
pop
into
aas
cmp
inc
jmp
jp
pop
sbb
pop
inc
mov
mov
lock
mov
fiaddl
int3
push
cmp
pusha
inc
push
pop
push
pushf
insb
mov
fisubl
push
cld
sub
iret
fsts
adc
inc
inc
mov
in
lcall
fimuls
and
sbb
fcmovbe
push
dec
cs
fimull
movsl
jge
dec
inc
rcrb
inc
in
add
adc
xchg
andb
call
xchg
test
cmpsl
das
gs
out
push
sbb
adc
add
jp
cmpsb
adc
out
adc
sbb
lods
jnp
call
mov
cld
loopne
mov
jno
xchg
add
jecxz
xchg
rol
sbb
inc
sbb
fisubl
pop
or
fadds
cltd
or
jo
mov
mov
das
or
inc
imul
pop
imul
push
xchg
scas
aas
and
and
cmc
or
sub
push
inc
gs
mov
pop
into
sub
and
cmp
and
push
and
xchg
or
dec
les
mov
mov
jle
jb
pop
xchg
arpl
fisubs
add
dec
mov
add
ret
out
sbb
and
add
inc
pushf
xchg
mov
stos
pop
icebp
mov
fisttps
insl
xor
xchg
adc
stc
xchg
mov
inc
fidivl
jmp
mov
and
cmp
cwtl
and
shrl
inc
jmp
test
rolb
push
sarl
mov
out
and
shlb
cmpsl
add
movsl
out
stos
decl
ret
add
cmp
fdivrs
loop
mov
call
pop
inc
dec
mov
cli
daa
mov
dec
add
int
pop
mov
ret
add
les
xchg
xlat
test
shll
repz
nop
lret
push
mov
push
xor
xchg
lea
cmp
flds
and
aad
cmp
jb
mov
mov
loope
int3
cmpsl
cmp
int3
cmp
adc
insl
mov
jns
ljmp
sub
xchg
in
adc
rdtsc
jo
inc
push
sub
adc
iret
mov
ror
int
add
bound
shlb
dec
subb
aaa
jns
out
mov
jp
cmpsl
dec
out
sbb
xchg
std
lahf
xchg
jle
cmp
mov
mov
lds
inc
fistl
mov
mov
or
adc
jp
mov
jne
adc
xor
or
dec
xor
das
mov
adc
popf
jge
add
jecxz
stos
loopne
mov
insl
sub
push
addl
pushf
xchg
lret
pop
or
push
jmp
and
fsubr
stos
fsubrs
stos
int
cwtl
stos
in
inc
mov
add
jl
hlt
roll
push
pop
mov
push
ja
sub
mov
mov
std
imul
sbb
jp
xor
int3
or
in
jo
xchg
dec
sbb
pop
imull
adc
outsb
adc
cmp
xor
push
push
in
inc
pop
dec
fcmovu
mov
shll
or
sqrtps
jl
sub
mov
faddl
pusha
je
pop
adc
rcrl
cwtl
inc
xor
dec
fisttps
repnz
or
mov
rorb
adc
subl
lahf
mov
and
insb
ja
fimuls
test
cwtl
xchg
pop
daa
nop
cld
xor
test
add
cmp
rorb
fwait
adc
lea
divl
xlat
rcll
pushf
mov
cwtl
pop
pushf
sbbl
lcall
clc
popa
out
es
subl
lods
xchg
insl
xchg
repz
imul
and
xor
jg
mov
popf
movsl
or
call
dec
bound
lahf
pop
mov
repz
push
sbb
cmp
mov
sbb
fcmovnb
test
jnp
mov
or
jl
xor
adc
dec
fmuls
repz
movsb
sub
addb
popa
pop
decb
outsb
out
or
mov
in
jns
pop
aam
scas
sbb
out
jp
pop
push
ret
and
inc
mov
push
lock
in
cmp
hlt
iret
xchg
sub
add
push
in
xor
loop
in
xchg
sub
les
jnp
int
in
pop
inc
mov
fstl
and
lock
push
mov
call
cltd
rclb
nop
and
jl
addb
fistps
ja
adc
sbb
mov
movsb
xor
out
cmp
loopew
fidivs
daa
insl
mov
in
sbb
mov
lock
jo
adc
fldcw
in
xor
jle
gs
add
stos
sbb
xchg
or
pop
xlat
popf
and
aaa
pop
xchg
xchg
pop
push
adc
pop
popf
mov
mov
lods
iret
dec
xor
add
nop
sub
hlt
lahf
in
sub
mov
iret
push
or
clc
sub
dec
lea
mov
loopne
shl
jp
mulb
push
sbb
insl
rclb
jb
stos
cmp
movb
fxtract
sar
fcompl
and
sbb
cmp
js
test
inc
lock
scas
dec
imul
xchg
and
dec
adc
adc
out
mov
js
addl
push
sub
loope
int3
dec
jmp
lret
fsubrl
int3
ret
mov
lds
insb
push
mov
nop
mov
daa
mov
shll
xor
xor
and
fwait
insl
xor
hlt
and
insb
xor
out
mov
mov
push
pusha
aas
lock
inc
and
int3
xorl
repz
and
loope
or
movsl
pop
jbe
faddl
or
imull
cmpsl
mov
fcoml
pop
adc
idiv
movsb
imul
popa
aas
mov
mov
xchg
jb
xor
sub
push
cli
dec
in
adc
and
sbb
xor
dec
rcll
gs
push
aaa
test
out
ret
or
das
ret
xor
push
cmc
das
or
mov
outsl
daa
sub
ljmp
jnp
inc
push
mov
xor
jne
and
sbb
shll
mov
adc
pop
xor
add
and
adc
arpl
je
sub
shlb
dec
adc
adc
add
cmpsl
jmp
mov
mov
sub
mov
sbb
sti
cmp
xchg
in
mov
enter
and
xchg
mov
cmp
push
add
in
ret
mov
das
leave
jge
pop
dec
enter
cmc
test
adc
adc
sbb
pushf
mov
cmc
pop
fdiv
sti
push
pop
mov
pop
iret
sahf
jno
test
jecxz
fimull
leave
mov
addl
xchg
sbb
das
pushf
inc
pop
test
push
pusha
xor
cmpl
sar
push
inc
cmp
push
or
jnp
in
sbbb
jo
mov
sub
popa
lret
rcl
xor
cmp
dec
push
push
jnp
lods
add
loop
adc
mov
xchg
mov
xchg
gs
pop
popa
pop
insb
cmpsb
xlat
je
jb
and
lea
pusha
push
test
push
mov
lcall
xor
mov
or
push
inc
adc
sub
idivl
nop
jb
lahf
xor
dec
inc
pop
iret
lcall
or
fstpt
out
mov
stos
and
movsl
add
push
mov
test
and
mov
jns
sub
mov
push
adc
test
dec
scas
lods
ret
pop
mov
ja
stos
and
mov
imul
mov
addb
lods
sbb
in
push
pop
xchg
or
inc
push
popa
pusha
and
daa
sbb
mov
cmp
inc
add
sbb
or
test
xorb
movsb
test
sub
inc
loop
pop
in
in
jge
mov
test
pop
out
pop
push
sti
sub
inc
hlt
or
add
in
movsl
sti
mov
pusha
cmp
mov
jp
push
mov
ja
add
ret
movsl
mov
fwait
dec
call
imul
sti
mov
pop
int
jb
outsb
dec
addr16
cmpsl
popf
mov
and
mov
jb
sbb
dec
add
xor
scas
movsb
sub
orl
dec
nop
sbb
cmp
imul
lret
inc
ljmp
or
data16
outsl
add
pop
xor
js
popf
out
cs
std
leave
mov
adc
cmp
lea
lds
pop
sahf
sub
outsl
push
xchg
int3
jp
cmp
frstor
pop
sarb
mov
fimuls
push
push
pop
movsb
inc
subl
pop
out
stos
lock
pusha
out
jne
clc
fldenv
push
test
es
mov
cmpsl
mov
jae
cmp
cmp
into
pop
mov
in
push
out
sbbl
sbb
fisubrs
add
sbb
add
pop
neg
mov
or
xchg
fdivl
ljmp
or
out
pop
xchg
dec
arpl
cmpsb
data16
dec
mov
ss
cli
dec
ds
ds
xchg
mov
dec
ret
sub
movsl
sub
mov
inc
lods
popa
in
repz
push
adc
jp
ror
imul
cmpsb
pusha
inc
jo
sbb
sbb
sbb
xchg
lret
and
adc
mov
jl
pop
inc
aad
xor
jae
div
in
shr
fwait
sub
stos
push
mov
pop
inc
xchg
enter
sub
lret
js
icebp
leave
lret
dec
add
jl
das
xchg
mov
fidivl
and
pop
roll
rorl
xor
mov
lods
mov
mov
inc
rol
and
sub
test
xchg
jl
rcll
cmpl
fwait
stc
push
cmp
ret
test
ss
cli
aad
push
add
bnd
adc
inc
cmpsl
pop
cwtl
les
mov
cmp
dec
popf
jae
out
add
xchg
jg
jg
push
mov
xchg
fldt
rolb
in
mov
insb
movsl
aas
pop
out
insb
sbb
movsb
insb
loope
lcall
jecxz
imul
jp
xchg
push
ja
dec
mov
ret
adc
arpl
outsl
andb
and
cmp
outsb
dec
fbstp
insb
test
sub
inc
mov
ljmp
lock
leave
add
movsb
inc
xlat
jb
ja
pop
orb
xorl
push
xchg
sub
or
push
cmpsb
pusha
inc
mov
and
cmp
jbe
fucom
cmc
clc
popf
mov
rorb
cmpsl
jg
xchg
mov
mov
xor
lss
icebp
or
mov
clc
dec
jl
test
adc
jae
adc
push
loopne
loop
scas
or
push
shll
testl
fisttpl
sub
out
or
and
sahf
ret
aam
in
mov
mov
jecxz
adc
in
jmp
fbstp
dec
mov
neg
test
or
sub
or
js
iret
mov
jb
inc
sbb
sarb
inc
mov
out
in
jne
cld
xor
jl
sbb
in
xchg
push
test
clc
movsl
push
aam
cmp
stos
mov
pop
fcmovb
xchg
xchg
arpl
cvtpi2ps
mov
xchg
test
mov
insl
add
and
mov
out
daa
ret
push
inc
addb
ret
dec
add
inc
or
aad
fs
jb
mov
sbb
pusha
push
daa
sbb
mov
dec
jae
or
fs
jmp
ret
iret
pop
jp
and
and
sbb
sub
lock
add
xor
xor
test
dec
js
jae
scas
cmp
inc
rolb
mov
xchg
push
push
sub
stos
xor
adc
mov
mov
sahf
push
push
loope
add
sub
fnstcw
out
mov
scas
andl
shlb
jge
jbe
jl
pop
inc
push
adc
clc
comiss
aas
lcall
leave
inc
sbb
outsl
into
cmpsl
add
test
mov
aad
call
repz
mov
pop
mov
hlt
ja
and
cmpsb
jb
push
in
push
dec
inc
push
jbe
and
and
sub
and
mov
cmpb
inc
mov
push
jns
in
inc
jecxz
pop
lods
jae
push
stos
test
icebp
sub
and
jae
mov
cmp
mov
or
nop
xchg
dec
sar
xor
xchg
jne
xchg
insl
add
andl
jge
push
lods
movsb
loope
cmp
xor
pop
xchg
nop
jb
inc
sbb
mov
jp
aad
std
sub
jecxz
mov
sbb
push
je
ljmp
ret
xchg
negl
push
inc
mov
enter
ret
roll
pop
pop
ss
roll
adc
lds
push
cmp
lret
pop
mov
mov
enter
stos
mov
test
insb
mov
out
or
adc
or
loopne
or
add
xor
cli
pop
idivb
lea
test
test
xchg
sbb
dec
inc
std
mov
xor
sub
arpl
adc
lods
mov
inc
add
iret
or
pushf
sbb
inc
push
les
aaa
and
mov
dec
cmpsb
ds
cld
addr16
fcmovnu
outsl
mov
stc
enter
push
es
pop
add
sbb
lods
mov
inc
or
push
cmc
loope
inc
data16
pop
fs
outsb
pop
testb
mov
rcll
adc
outsl
push
dec
sti
subb
pop
mov
jg
enter
ja
mov
clc
out
inc
call
or
mov
scas
sbb
cmp
sub
lret
scas
in
push
rcll
add
pop
push
call
ret
jb
xor
frstor
dec
lret
xor
lahf
push
cmp
ljmp
push
mov
repz
xor
rep
pop
fstpl
xor
or
icebp
imul
and
jg
dec
or
push
adc
push
dec
mov
je
jo
je
nop
ljmp
int3
les
push
test
push
add
xor
mov
inc
pushf
inc
mov
pop
movsb
test
and
ds
clc
test
loop
add
into
sub
lods
gs
lds
mull
out
xchg
mov
std
les
jmp
fadd
test
dec
and
lahf
push
rorb
in
imul
movsl
inc
xor
popf
cmp
repnz
das
popf
daa
out
sbb
ja
insl
enter
testl
ljmp
loop
inc
adc
mov
int
subl
divb
lcall
adc
mov
imul
imul
lods
lret
loopne
cmp
gs
push
int3
xor
stc
mov
ds
sbb
out
push
xlat
out
pop
outsl
ja
cmp
sbb
xchg
dec
mov
jne
sub
pop
sbb
mov
and
and
pop
xchg
out
fistl
insl
std
int3
out
cmc
shl
popa
fwait
mov
push
test
out
mov
sub
pushf
adc
inc
idivl
imul
sbb
inc
cmc
mov
adc
ret
jmp
das
cmp
insb
xchg
dec
out
iret
mov
sbb
mov
into
inc
into
pop
xchg
lcall
add
ficoml
dec
adc
fsubp
test
mov
push
jb
push
inc
iret
hlt
std
mov
jmp
icebp
push
test
ret
inc
sub
or
push
cmpsl
loop
jo
push
outsl
fsts
push
movsb
lods
inc
dec
sub
push
and
xor
or
cmp
mov
mov
movsb
push
popa
pop
inc
cmpsl
cmpsb
and
ja
mov
sub
jbe
mov
mov
data16
mov
cmpsl
sub
lahf
dec
enter
scas
stos
ja
or
xchg
and
jno
jge
xchg
hlt
mov
adc
or
imul
sbb
shl
pop
iret
jns
xchg
mov
pop
repnz
cmpsb
adc
lahf
jp
gs
and
fisttpll
adc
cmp
test
or
xchg
xchg
cmpsl
push
push
xlat
fst
xchg
out
push
into
push
mov
pop
stos
nop
std
or
mov
sahf
out
stos
or
lods
cmp
mov
inc
jl
mov
mov
pop
add
mov
arpl
negb
inc
stos
add
ljmp
sbb
sbbl
mov
add
data16
fstpt
or
stos
adc
popf
lock
fcompl
lret
bound
les
pop
pop
cs
lcall
test
outsb
pop
cmpb
in
lcall
in
dec
es
add
stos
leave
sbb
shl
push
out
sub
out
psubw
pop
jnp
out
sbb
mov
clc
add
cmpsl
in
mov
pushf
andl
jns
jl
inc
xlat
lcall
mov
pop
fcmovnbe
mov
add
shl
add
xor
insl
rol
aas
jne
pop
rolb
pop
outsb
ljmp
ds
xor
push
pop
shll
pop
mov
jns
std
pop
cs
and
mov
cld
dec
scas
adc
pop
cmpsb
fistpll
or
lret
into
add
sub
std
dec
push
sub
leave
lods
sbbb
adc
cmpsl
popa
movsl
add
lcall
add
cmp
jo
push
pop
addr16
and
int
mov
jo
addb
pop
fldln2
xchg
cmp
dec
pusha
mov
scas
lahf
mov
out
add
jne
mov
sti
dec
aaa
pop
sub
and
aad
fbld
insb
adc
push
adc
imul
jmp
or
jbe
mov
ret
into
in
cld
repz
push
fdivr
inc
fistpl
mov
ljmp
cmpsb
mov
xor
ds
sub
adc
mov
imul
lahf
movsl
dec
idivl
movb
aas
add
inc
add
or
add
in
dec
sbb
jmp
ret
popf
adc
rcrb
or
adc
int3
push
mov
lea
inc
cmpsb
daa
dec
mov
ficoms
xor
xchg
mov
mov
sbb
pop
fnstcw
cwtl
xchg
sbb
mov
out
mov
add
dec
ret
cmp
sbb
enter
das
outsb
loope
rcr
out
loope
test
xor
mov
test
mov
mov
pop
pushf
adc
arpl
aas
mov
bound
push
dec
jno
cmpsl
ds
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
fidivrs
push
jmp
bound
jmp
cmpsl
push
mov
mov
sub
movd
pop
xchg
movb
bound
mov
xchg
shl
into
push
rcrb
jg,pn
mov
mov
jp
dec
xchg
or
sahf
aas
leave
adc
mov
add
dec
fidivs
stos
ljmp
jne
xor
outsl
xlat
xchg
inc
or
aaa
repz
mov
mov
shrb
sub
lret
shr
jp
push
dec
js
aad
into
daa
sarl
push
pusha
xchg
mov
jp
mov
mov
inc
mov
in
pop
in
jle
repz
enter
test
jnp
clc
push
ljmp
xchg
jmp
or
addl
loopne
xor
ret
or
add
xchg
mov
jne
dec
outsb
jge
in
negb
mov
mov
pop
push
and
and
ds
ficoml
xchg
popa
test
xchg
xchg
lock
lret
sub
lods
lods
push
sub
push
and
clc
mov
imul
movsl
gs
add
xor
aam
addr16
es
cmp
out
in
dec
inc
aaa
push
and
jp
negl
roll
loopne
xchg
lock
sbb
jg
ds
cmp
pop
mov
adc
adc
and
orl
sub
mov
neg
fildl
roll
pop
negb
arpl
mov
adc
movsl
shll
mov
ljmp
outsl
cmpb
in
fwait
sub
xor
cli
pop
jecxz
xor
in
dec
popf
call
aas
dec
sub
orb
mov
les
sbb
nop
cmp
fistps
fiadds
push
pop
mov
dec
cmp
sbb
inc
pop
mov
nop
jno
cmc
xlat
stos
rol
mov
or
bsf
repnz
mulb
and
pop
dec
mov
popa
mov
lahf
les
ss
sbb
add
mov
mov
pop
or
adc
sti
mov
mov
dec
cmp
push
mov
push
pop
xchg
scas
addr16
call
xor
cmp
cmp
mov
inc
xor
mov
repz
repz
xor
push
sbb
cmp
mov
inc
push
jno
sbb
or
sbb
insb
dec
mov
mov
inc
scas
fsubs
inc
ljmp
cmp
ret
and
sub
int3
jnp
shrb
jb
push
repnz
outsb
or
lock
cmpsl
xor
pop
push
xchg
and
ds
mov
bound
in
imul
inc
cmp
pushf
adc
int3
hlt
lret
cltd
in
fimull
in
lret
jg
lods
dec
mov
dec
mov
adc
in
adc
cmp
sbb
lods
in
insb
adc
in
inc
mov
pop
mov
push
mov
mov
or
ret
and
ss
mov
and
pop
ret
pop
dec
loope
push
or
cmp
scas
or
jbe
mov
imul
outsl
inc
in
int3
pusha
inc
xchg
ds
mov
jbe
jg
lret
jns
mov
jecxz
fisttps
jae
pop
mov
dec
int3
scas
xor
adcb
fwait
cltd
xchg
cmp
adc
cltd
mov
mov
mov
cld
dec
out
xchg
mov
add
aaa
ss
cltd
pop
inc
sbb
in
and
fcoms
imul
cld
fs
and
sub
fwait
sub
xor
cmp
out
xlat
inc
xchg
mov
or
xchg
frstor
icebp
or
cwtl
into
stos
pop
pop
popa
cmp
dec
or
sub
sub
inc
clc
out
movsl
jmp
pop
push
std
sar
jnp
pop
dec
ret
arpl
insl
int3
push
jae
lret
call
and
dec
adc
hlt
mov
mov
xchg
call
hlt
aaa
in
cwtl
dec
mov
mov
in
jns
fcmovu
cmpsl
arpl
or
cmc
add
in
cwtl
dec
push
xor
jl
pusha
pop
push
inc
js
imulb
cmp
mov
xor
mov
or
in
pop
xor
sub
aam
push
jmp
ret
roll
add
dec
test
cs
lods
arpl
lahf
ds
adc
fwait
test
inc
jns
add
out
mov
scas
xchg
adc
mov
out
andl
sub
cld
cmpsl
test
or
fdivs
imull
mov
in
add
lahf
js
mov
out
fcmovnb
xchg
pop
mov
rorb
pusha
adc
push
mov
mov
xchg
aad
pop
mov
xchg
pop
outsl
aas
imul
fidivrl
call
xor
data16
sbb
xchg
rep
out
xor
push
dec
hlt
nop
decb
into
adc
stos
or
push
push
div
push
and
sahf
pop
mov
in
push
mov
ret
ret
lds
dec
mov
cli
test
mov
adc
aad
cmp
mov
inc
hlt
cli
jo
arpl
inc
pop
jns
scas
push
sub
out
mov
mov
idiv
std
hlt
cmc
add
ja
add
loope
int3
mov
jg
add
fdivr
push
cmp
push
cltd
bound
sub
adc
xchg
pushf
out
aad
clc
adc
add
adc
je
mov
cld
mov
mov
cmp
movsl
or
fcompl
mov
xchg
loope
pop
sub
ja
or
loopne
sub
xchg
pop
sub
outsl
lods
mov
mov
cmp
in
ud0
add
shll
adc
and
aam
cmp
in
std
in
enter
aad
lcall
jno
mov
push
rclb
cli
popf
sub
subb
adc
push
pushw
ljmp
repnz
inc
cld
leave
push
inc
cwtl
addb
adc
add
popl
mov
in
fsubs
cmp
icebp
sbb
icebp
shl
cmpsb
push
mov
push
subl
mov
lretw
xor
cmp
adc
fnstenv
rcll
push
mov
fidivs
icebp
sarb
movsl
insb
sub
mov
mov
divl
subb
xor
and
sub
bound
or
fsubr
mov
push
arpl
mov
jmp
jecxz
xlat
stos
stos
sbb
out
and
pop
dec
mov
test
inc
and
sbb
jecxz
and
pop
cmp
adc
cmpsl
inc
movsb
cli
mov
adc
icebp
lcall
push
mov
das
mov
mov
dec
scas
sub
sbb
and
inc
pop
loopne
xchg
fwait
fs
je
dec
ds
lds
mov
aam
cmp
dec
jecxz
and
lahf
faddl
cmp
xor
add
shll
jno
cmp
sbb
jmp
mov
decb
popf
mov
or
push
inc
scas
sub
ds
sar
arpl
fdivrs
das
aam
fdivrs
jno
pop
push
jbe
ss
shlb
push
lock
push
fidivrs
mov
rcrl
xor
jge
xchg
pop
jmp
ret
cmp
push
xchg
fsubl
sub
cmp
in
stos
js
mov
xor
push
into
mov
popa
rcll
iret
mov
sub
cmp
mov
push
aad
jb
outsb
and
pushf
mov
mov
out
sbb
out
add
fnstsw
jmp
sub
in
xchg
iret
sub
nop
pop
xchg
xchg
mov
test
inc
imul
inc
std
mov
jl
xchg
icebp
inc
sahf
or
shlb
loop
or
and
pusha
or
aaa
shl
in
addl
cmp
cmpsl
or
imul
hlt
sbb
mov
push
mov
or
ss
cmpsl
imul
test
arpl
dec
rcr
out
mov
pop
cwtl
sub
aam
jno
inc
fimull
pop
daa
inc
jns
sahf
icebp
fs
aaa
adcl
ss
js
jns
sbb
lods
add
jo
mov
xchg
and
or
pop
into
inc
mov
mov
iret
jnp
add
jae
cmpsl
jno
test
ds
mov
push
adc
lret
push
fnstsw
jp
addr16
pusha
sbb
icebp
shll
or
jae
xor
push
sbb
js
in
popf
int3
imulb
aaa
les
push
mov
add
loop
cld
fs
add
dec
jb
sbb
test
mov
push
arpl
in
sarl
mov
scas
mov
xchg
cmp
cli
dec
sbb
xor
mov
xchg
jno
jb
les
popf
out
pusha
popf
imul
xchg
push
mov
jne
pushf
data16
sub
adc
es
addr16
push
mov
fmuls
cmpsl
lcall
fstpl
subl
mov
mov
inc
stc
xor
adc
imul
dec
xor
fdivl
jg
hlt
in
xchg
fs
push
xor
fisttps
cmpsl
add
xchg
and
out
mov
adcl
pusha
loope
out
jno
leave
lock
outsl
cmpsl
out
adc
insb
mov
push
jmp
hlt
in
mov
int
push
ss
sub
std
add
ds
push
push
rorl
push
push
jecxz
inc
iret
xchg
dec
inc
dec
jb
cmp
insb
in
test
sahf
and
int
repz
mov
in
lds
xchg
mov
jl
mov
inc
js
mov
ds
out
add
add
push
xchg
xchg
adc
pop
movsb
in
lds
popa
sbb
std
imul
pop
mov
cmpsb
outsb
inc
jecxz
pop
adc
xlat
in
bound
lahf
dec
adc
cmp
stos
xor
push
movsl
idivb
mov
mov
test
scas
loopne
dec
dec
pop
lret
jbe
add
inc
dec
or
aas
mov
int3
mov
xor
scas
insl
aam
sarb
fwait
lock
movsl
dec
addb
mov
out
in
fsubl
jge
in
je
testb
mov
cmp
outsl
sldt
lock
ret
sbb
nop
xchg
dec
xchg
es
push
imul
add
out
popa
xchg
push
xor
loope
and
cltd
and
int
fisubrs
ficoml
imul
mov
in
sahf
or
mov
mov
sbb
daa
xor
mov
fistpll
mov
pop
imul
mov
sbb
test
or
rolb
stc
dec
outsb
mov
fisubs
and
mov
xor
out
outsl
lea
push
or
pop
sbb
test
dec
outsb
pop
stos
xlat
cli
adc
cli
or
or
xchg
jecxz
lret
pop
popa
std
xor
cmp
fsubs
mov
push
mov
mov
lret
call
jae
sub
jno
aad
sbb
mov
ja
inc
sbb
pop
xchg
cs
mov
fists
adc
std
repz
xlat
dec
mov
sbb
sbb
sarl
cmp
mov
push
testl
test
lret
or
ja
aas
mov
aad
sbb
inc
aas
in
pop
int
dec
insl
push
jb
loope
pop
or
sub
pop
in
loop
dec
clc
pop
mov
xchg
mov
sub
lods
sbbb
mov
inc
sbb
or
mov
or
sbb
dec
add
xchg
into
scas
cmp
outsl
push
nop
sub
and
jne
pop
mov
xchg
pop
loope
pop
cmp
push
xor
xchg
and
loope
push
xchg
jmp
and
cmp
and
outsl
testl
push
push
aaa
inc
sahf
pop
lret
shr
call
sbb
in
pop
inc
jo
out
roll
mov
mov
jmp
out
in
dec
pop
jnp
out
or
out
adc
loop
mov
or
in
enter
add
or
out
xor
les
pop
rolb
xchg
adc
add
dec
push
xlat
cs
cmp
inc
ret
add
mov
or
xchg
jmp
rclb
push
adc
ret
push
adc
js
xchg
in
push
clc
movsb
inc
outsl
push
push
popa
or
push
inc
lods
fstpl
loop
in
call
cmp
fisubrl
sub
sub
sub
mov
xlat
sbb
shr
mov
hlt
mov
xchg
xchg
sti
fs
je
movsl
out
sub
shlb
mov
cld
sbb
push
adc
mov
or
cmp
sub
inc
sbb
aam
fimuls
test
out
xchg
cmp
nop
dec
jge
push
jmp
or
mov
mov
pop
xlat
sub
sbb
ja
mov
or
push
mov
lods
mov
adc
xchg
es
movsl
outsb
ja
and
stos
jns
lock
data16
mov
pusha
ds
adc
pop
lds
leave
lret
call
pop
sub
inc
loope
ljmp
test
movsb
out
mov
cmp
push
imul
fsubrs
push
pusha
xchg
or
push
adc
ss
sub
cmp
repz
cmpsb
push
jb
vmovsd
adc
adc
sub
cmp
push
jge
lahf
in
cmp
dec
hlt
mov
gs
jge
std
sub
cmp
ljmp
shll
inc
cmp
mov
loop
or
mov
inc
je
xchg
ja
sub
and
pop
das
cwtl
inc
das
lock
pop
popa
jae
mov
int3
mov
test
ss
mov
inc
faddl
sbb
and
call
divl
or
xor
add
push
cmp
shlb
sub
xchg
sbb
pop
jae
xor
cmp
scas
ja
test
movsl
out
and
ljmp
fstpl
xchg
cli
shr
iret
das
dec
ret
test
sub
push
xchg
jae
mov
loopne
xlat
pop
cmp
push
mov
dec
ljmp
in
mov
imul
fcomip
mov
cwtl
nop
movsb
lret
push
test
stc
mov
inc
or
pop
out
aaa
pop
add
insl
sbb
shrb
dec
sub
scas
stos
mov
xchg
cmp
les
jbe
and
push
add
mov
sbb
mov
jmp
arpl
int
ljmp
mov
fidivl
clc
cmp
add
loopne
push
and
fmull
int
ds
jae
repz
adc
and
mov
cmp
insb
or
in
pop
aam
and
push
or
xor
shlb
lahf
sub
lahf
out
mov
scas
lret
addr16
adc
pushf
clc
insl
cmp
inc
xor
loopne
movsb
outsb
mov
push
leave
repz
stos
sub
xchg
fsub
or
scas
mov
pop
jp
xor
imulb
xchg
rorb
rcrb
nop
add
icebp
dec
mov
pop
iret
and
push
andb
sub
adc
xor
ret
mov
mov
daa
xor
jno
mov
js
sub
not
std
cmp
in
pop
cld
cmp
pop
scas
int
insl
loop
ja
leave
cltd
daa
inc
and
repnz
adc
cwtl
mov
sub
shlb
mov
xchg
cmpsb
stos
xchg
popa
inc
mov
sub
sub
in
rol
lock
aad
sbb
addb
rorb
sub
sub
xlat
sub
inc
imull
adc
cmc
mov
repnz
sahf
xchg
das
stc
add
cwtl
pop
insl
insb
sub
push
mov
cmp
imul
gs
sbb
or
inc
popf
out
icebp
imul
fists
icebp
xchg
movsb
shll
popf
inc
loop
pusha
mov
std
push
leave
addr16
push
rcl
addb
lahf
pop
push
repnz
add
mov
adc
jno
dec
sub
loope
mov
out
jp
xor
into
cmpsl
push
fs
push
das
dec
mov
imul
int
or
push
jecxz
or
repz
cmp
scas
in
jmp
arpl
or
mov
push
cmp
and
mov
push
js
fists
movsb
mov
stos
jns
inc
out
in
dec
xchg
aas
lcall
sti
int3
mov
shl
xchg
jge
jmp
push
or
mov
lahf
cmp
jg
jo
push
sbb
add
jbe
lods
and
cmpsb
xor
out
insl
dec
mov
pop
out
cmp
lcall
mov
daa
icebp
dec
imul
insl
fs
movsb
psrlq
jmpw
mov
lcall
push
popa
stos
aaa
lcall
pusha
loope
fisubrl
mov
fwait
mov
xor
int
jo
clc
sbb
dec
jp
je
pop
or
lret
insl
adc
shrl
movsb
std
ja
mov
adc
xor
jle
fdivr
shll
imull
push
sbbb
popf
xor
leave
lret
pop
xor
pop
add
rolb
cmp
pop
push
aam
fwait
jle
inc
mov
test
xchg
fwait
test
int3
sub
or
lret
test
cmp
and
pusha
shll
negb
pop
jg
les
jl
add
or
push
daa
dec
adc
push
jo
xchg
cmp
cli
cld
std
mov
inc
jg
pop
sbb
push
or
xor
sub
push
push
cmp
xor
sbb
loope
cmp
mov
bound
out
cmp
dec
hlt
mov
cmc
or
dec
cmp
or
lods
jmp
cmp
xor
jno
inc
jnp
adc
shll
lahf
and
out
lods
adc
stos
loopne
stos
pop
push
sbb
popa
test
adc
data16
inc
mov
pop
out
or
loope
sbb
or
jge
sub
lret
repnz
fdivs
push
cmp
adc
and
mov
daa
xchg
test
dec
jecxz
lret
sub
dec
dec
push
int
sbb
movsb
xchg
push
and
lret
insb
sbb
push
into
adc
addl
cmp
push
inc
stos
cmp
inc
cmpsl
mov
fs
jb
dec
adc
stos
scas
and
ss
push
iret
push
mov
cmp
xor
in
cli
int3
or
jb
adc
inc
mov
int
pop
shlb
adc
test
xchg
xor
arpl
outsb
inc
pop
mov
sbb
xchg
push
ficoml
incl
mov
mov
dec
mov
xchg
mov
xchg
scas
mov
add
adc
out
sbb
sub
test
dec
xchg
dec
movsb
mov
scas
push
pop
popa
aas
mov
loop
mov
sbb
or
push
or
xor
fcoms
push
dec
or
sbb
sub
scas
shlb
and
gs
or
loope
push
dec
ret
cmp
sub
fiadds
add
mov
xor
fwait
xchg
cmc
cltd
sbb
into
fxch
mov
lods
aam
test
cwtl
ficompl
sbb
lcall
cs
mov
out
push
mov
lret
push
mov
cwtl
mov
add
add
scas
inc
inc
jmp
xor
pandn
sbb
and
fildll
sbb
push
fidivrl
jns
push
lea
cmpsb
call
daa
iret
out
jmp
dec
or
sarb
pop
les
es
test
stc
arpl
nop
repz
cmpsl
aam
sarb
out
dec
sub
inc
mov
insl
stos
push
inc
fwait
loop
movsb
mov
add
movsl
out
aad
adc
rol
out
push
nop
ret
movsl
add
data16
mov
xchg
adc
push
add
int3
pop
add
mov
and
jae
sbb
sbb
in
les
xlat
pusha
mov
inc
stos
je
aas
jle
test
ja
mov
adc
jne
jp
stc
xchg
mov
pop
pop
jmp
push
push
ret
inc
sti
add
inc
pop
out
inc
push
out
sti
out
repz
dec
leave
jge
mov
dec
adcl
sti
cmc
mov
xchg
stos
mov
repnz
notl
insb
push
sbb
ljmp
add
lods
push
cld
shll
sbb
out
mov
cwtl
in
xchg
imul
faddl
enter
ret
aas
pusha
clc
inc
push
inc
dec
xor
and
mov
movb
clc
and
push
fstpt
push
xor
jp
jl
mov
ret
mov
and
mov
movsb
scas
jb
leave
mov
inc
cmp
mov
rcll
shlb
push
lock
int
or
js
out
jns
jo
mull
mov
movsb
inc
out
cmp
mov
pop
ss
mov
add
sbb
clc
ss
rclb
jle
sbb
add
cltd
mov
add
iret
xor
ret
repnz
dec
adc
mov
movsb
xchg
leave
bound
mov
es
xchg
jns
or
or
mov
test
xchg
int
jle
and
pushf
arpl
xor
pop
mov
push
sub
neg
test
adc
pop
inc
push
mov
movsb
adc
fbld
inc
adc
data16
mov
dec
cmp
push
aam
arpl
mov
mov
and
fstl
sub
and
and
add
int3
out
adc
mov
pop
imul
enter
xor
mov
icebp
ficompl
jne
inc
dec
xchg
sub
pop
pushf
lds
sbb
sbb
cmc
sbb
push
xchg
mov
stos
sub
mov
cwtl
out
or
outsl
pop
jbe
push
shll
imul
andl
gs
pop
add
aaa
call
pop
out
scas
push
mov
lahf
sbb
dec
adc
pop
mov
imul
fisttpll
pop
repnz
popl
or
cmp
rorb
shrd
pop
cmp
pop
mov
xchg
cs
xorl
pop
cmp
push
lods
and
push
pop
ret
add
fcmovnu
xor
jl
adc
loope
imul
pop
cmpsb
mov
jo
pop
or
and
cli
mov
sbb
inc
test
orl
stc
test
mov
inc
int3
jmp
pop
gs
movsb
std
xchg
or
fisttpll
pushf
decb
inc
xchg
std
cs
fwait
mov
daa
cmp
notb
aas
roll
es
arpl
fistps
lret
ret
lcall
inc
daa
mov
pushl
inc
pop
add
mov
jp
pop
lret
pop
sbb
push
xor
jmp
cld
test
mov
push
rorl
dec
iret
addr16
sub
lods
jmp
subl
jle
pushf
sbb
js
loope
scas
fmul
and
gs
sbb
sahf
icebp
aas
mov
repnz
out
lds
mov
call
ds
adc
out
pop
sub
mov
mov
mov
mov
ja,pn
mov
inc
popa
jge
and
xchg
data16
fistpl
cmp
into
jo
xor
xchg
push
cli
shll
out
push
or
push
test
jl
cmp
jmp
fbld
cs
xchg
adc
adc
in
loope
cmp
pusha
pop
jp
imul
imul
mov
pop
outsl
cmpsb
push
pop
mov
in
jecxz
ljmp
subl
clc
xchg
dec
ficompl
jno
xchg
add
inc
mov
or
rorl
cmp
sahf
push
xchg
and
aaa
jge
or
lcall
mov
fisubs
je
sbb
add
mov
ljmp
fimuls
jmp
mov
cltd
pop
sbb
jb
inc
pop
add
insl
mov
sbb
sbb
fistpl
dec
push
xchg
orl
sti
xchg
jb
pop
dec
les
cld
cli
push
les
mov
xor
pop
or
into
fdivl
inc
cmp
in
and
fwait
lods
add
rcrl
inc
or
xchg
lods
push
aam
adc
xchg
push
pop
test
mov
pop
lahf
mov
and
add
or
outsl
shrb
mov
inc
push
lret
mov
mov
pop
ss
add
dec
out
adc
xor
xor
stos
inc
xlat
sbb
xor
sbb
pushf
pop
mov
bound
mov
add
les
cmpsb
pop
out
adc
push
inc
mov
pop
dec
cmpsl
mov
fbld
aas
or
and
inc
xchg
mov
cmp
mov
sahf
fucomi
pop
les
and
inc
call
push
dec
mov
dec
inc
mov
pusha
inc
lret
jae
mov
dec
call
lea
add
pop
test
sbb
sbb
xor
xchg
push
xor
fldpi
mov
stos
dec
add
fisubrl
add
cmp
mov
adc
xor
and
test
push
and
sub
lods
das
mov
xor
imul
sti
dec
sbbl
pop
cwtl
xor
out
adc
iret
dec
cmp
in
or
xor
in
subb
mov
out
pop
sarb
add
push
call
incb
fisubs
inc
jge
daa
js
insb
cmpsl
das
lea
dec
mov
xchg
dec
fisubrs
andb
pop
daa
in
jle
mov
xchg
jns
mov
jne
mov
test
mov
cltd
adc
or
xlat
loopne
icebp
sbb
div
push
je
sbb
stc
pop
and
aaa
je
jle
dec
fcomps
push
lods
mov
scas
iret
dec
into
push
lahf
pop
jno
popf
inc
setg
add
dec
adc
icebp
sbb
push
jl
inc
inc
in
cld
dec
push
xor
dec
add
sub
enter
mov
lods
jnp
pusha
pop
cmp
dec
scas
cmp
lea
inc
dec
pop
push
ljmp
push
push
jle
xor
jg
xchg
loope
mov
and
xchg
icebp
add
xor
in
dec
push
sbb
scas
xchg
mov
gs
lea
pop
add
lcall
and
out
inc
and
mov
test
jne
pop
fadds
lods
fsubrs
dec
push
sbb
out
inc
jecxz
rcl
lret
mov
xchg
mov
or
mov
sub
popl
repnz
inc
inc
aad
jo
jne
add
jb
push
or
sbb
ret
loop
pop
stc
mov
jb
and
push
into
movsb
inc
pop
mov
fistpll
and
jle
inc
jge
xor
cmp
es
cmc
out
and
stos
or
xlat
push
ds
daa
lods
mov
mov
jns
dec
mov
sub
mov
sub
jb
loope
and
popf
pop
xor
dec
dec
pop
sarl
mov
xchg
inc
dec
call
les
in
adc
fsts
aad
inc
or
outsl
xchg
arpl
repz
bound
cmp
testb
in
mov
inc
push
push
repnz
xchg
xchg
js
lret
pop
mov
imul
adc
aaa
mov
and
inc
xchg
jae
addb
sti
jno
aad
mov
pop
mov
enter
pop
jae
dec
je
in
mov
cld
out
jmp
decb
mov
dec
hlt
iret
push
leave
hlt
test
loope
arpl
mov
inc
in
push
fwait
add
stc
inc
adc
inc
testl
jecxz
xor
mov
sbbb
clc
cmp
pop
stc
dec
scas
jge
aaa
lods
jne
jmp
jae
out
imul
xlat
xchg
ja
in
pop
es
rcll
in
push
sbb
cmpsb
shrb
and
jbe
sub
jmp
ss
je
movsb
nop
jno
es
jo
jecxz
jne
enter
mov
pop
push
mov
out
pop
idivb
leave
jecxz
test
out
and
loope
mov
orl
leave
in
inc
lahf
jg
pop
inc
sub
ds
or
cmpsl
je
fiaddl
fists
dec
push
mov
fldenv
sti
pop
push
inc
xor
dec
ss
insb
pop
xor
jl
mov
mov
push
xor
sbb
adc
add
or
and
ja
pop
inc
inc
xor
pop
mov
pushf
test
lock
fisubrs
jbe
lcall
push
test
push
and
jns
cwtl
xchg
das
jae
jge
call
push
dec
in
fidivrl
push
flds
cmp
arpl
and
xor
mov
into
jnp
and
mov
sbb
fnstenv
xchg
maskmovq
idivl
jmp
sub
jnp
sub
sbb
and
inc
outsl
cmp
inc
int
mov
or
sbb
sti
cmp
and
bound
mov
test
lret
daa
hlt
cwtl
mov
lcall
in
xchg
mov
bound
mov
int
outsl
sub
in
js
sub
cltd
and
cmp
sub
out
xchg
cmc
inc
arpl
loop
test
xchg
movsb
sti
test
jbe
dec
jle
inc
scas
mov
daa
add
jbe
out
adc
enter
xor
mov
push
sbb
mov
dec
and
mov
cltd
or
mov
xchg
jnp
lods
or
cmp
out
lret
imul
addl
inc
sbb
cltd
pop
and
rdtsc
cmp
scas
test
inc
mov
pop
daa
lock
mov
jno
test
sbb
fstps
lock
cld
shrl
adcl
lods
jge
test
pop
xchg
cltd
sub
add
int
mov
paddd
fidivrs
cmpb
mov
push
subw
gs
xchg
cmp
dec
or
fmuls
add
leave
dec
out
cmp
aas
push
xorb
push
repnz
in
xor
pop
lods
xlat
mov
pop
aas
push
push
ss
add
dec
pop
rcrb
lret
clc
xchg
adc
mov
gs
push
mov
inc
aaa
push
aas
fdecstp
adc
sarl
mov
enter
fstps
test
sbb
mov
andl
push
testb
stc
mov
stc
mov
movsb
or
mov
in
hlt
jl
hlt
aaa
pop
ljmp
pushl
rolb
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
dec
outsb
cs
jge
popa
rcrb
inc
into
enter
mov
ficoml
push
inc
push
or
mov
movq
mov
xchg
push
xchg
in
fsts
pop
cmp
jnp
jecxz
sarl
pop
jo
and
xchg
or
inc
insl
sub
jg
cli
fstp
test
push
das
pop
std
jb
cs
push
jg
cld
rorl
xlat
push
push
adc
int
sub
pop
cs
je
testb
out
xor
aas
loopne
cmp
cmp
in
out
ret
jns
testl
repz
adc
cmp
int
imul
leave
sbb
imul
adcb
mov
fstl
mov
aad
mov
jnp
sahf
mov
sub
and
and
mul
pushf
jbe
pop
stos
pop
adc
push
or
dec
movsl
in
rcl
add
or
cwtl
mov
into
push
std
mov
lods
push
mov
stos
test
jo
dec
ljmp
insl
xchg
xchg
repnz
push
and
mov
lock
cmp
mov
cmp
mov
xchg
scas
cld
sbb
repz
mov
cwtl
add
addr16
out
pusha
xorl
pop
nop
rcrb
je
and
std
cmpsl
fbstp
fisttpll
push
test
jmp
movsl
cmp
leave
outsl
insb
xchg
test
imul
or
jns
ljmp
dec
jl
popf
dec
jns
call
stos
or
mov
xor
add
mov
pop
push
jns
gs
loope
cld
mov
shlb
cld
arpl
addr16
xor
jne
pop
sub
xor
outsl
in
jmp
jns
jg
scas
xchg
lcall
dec
pop
mov
enter
insb
or
push
jmp
dec
xor
movsb
in
lock
jp
fstpt
fisubrs
sbb
sub
dec
int
outsl
jnp
cmp
push
push
test
xcrypt-ofb
cmpsl
cs
jae
lock
into
mov
xchg
sahf
mov
push
add
mov
dec
pop
mov
jge
out
pop
and
jo
lea
scas
sub
and
ror
mov
xor
mov
add
ret
je
fcompl
dec
mov
add
movq
mov
mov
mov
sub
fildll
movsb
mov
in
aaa
xor
shrb
out
adc
pop
add
jp
popa
stos
adc
mov
mov
loope
imul
cli
outsb
jnp
ss
rorl
add
adc
test
sub
pop
mov
subb
add
ficoms
mov
jnp
inc
cwtl
in
cltd
mov
adc
fs
iret
jbe,pn
lods
in
daa
mov
mov
push
mov
push
xchg
sub
ds
fisttps
fnstenv
cmp
faddp
notb
in
mov
fildll
pop
aam
nop
cmp
mov
mov
pusha
cmp
sbbb
lds
mov
jmp
jmp
fs
xor
dec
in
inc
aam
and
stos
in
movsb
mov
and
sbb
push
outsl
fdivr
jmp
fcompl
sbb
jge
adc
cmp
pop
cltd
dec
je
std
cmc
stos
adc
cli
rorl
dec
lods
les
pop
out
aaa
pushf
stc
sub
mov
ss
jg
std
mov
or
fnstenv
jb
ror
inc
jae
push
stos
xchg
test
mov
cmp
adc
fs
jnp
pop
out
xchg
jmp
mov
push
fistl
outsb
andb
pop
jl
mov
aaa
and
lahf
mov
mov
fxam
dec
sbb
lds
cld
push
insb
dec
mov
dec
shlb
outsb
mov
push
pop
scas
and
popa
pop
inc
jge
insl
lahf
lret
aas
enter
cld
sahf
push
add
test
sbb
jne
mov
out
lds
movsb
mov
daa
outsl
add
ss
adc
loop
int
or
loopne
insb
dec
mov
jge
stos
push
xor
sub
xchg
sub
and
xor
push
xchg
sub
sti
push
cmpsl
ljmp
jge
mov
sbb
sub
lahf
cmp
sbb
pop
sbbl
mov
fs
xchg
xor
enter
xchg
push
loopne
dec
addl
add
mov
sub
fwait
aas
cwtl
arpl
xor
icebp
enter
pop
pop
dec
aam
jle
push
push
jbe
js
imul
pop
andl
or
sub
pavgb
inc
fcompl
mov
test
sahf
add
pop
movsb
xchg
jg
cmp
dec
and
dec
inc
pushf
mov
inc
pop
adc
rcll
loopne
pop
pop
clc
push
inc
add
sub
inc
inc
push
insb
aad
pop
adc
fnstcw
enter
mov
xor
mov
push
repz
pop
adc
rcrb
in
je
push
sbb
test
and
mov
jmp
out
into
jnp
jge,pt
jle
push
in
iret
xchg
mov
sub
xchg
in
jne
in
xchg
jbe
adc
pop
js
mov
mov
mov
das
cli
add
mul
pusha
loope
fmull
push
xchg
and
out
push
sub
call
add
inc
test
sbb
test
ret
mov
add
dec
test
xor
jnp
pop
stos
adc
dec
or
dec
fcomps
mov
sbbl
sub
dec
xchg
cmpsb
inc
outsb
lret
sbb
outsl
lcall
jo
fimull
or
and
nop
adc
xchg
mov
lahf
mov
push
lods
xchg
test
push
addl
outsb
xchg
jge,pt
mov
stos
mov
fistps
fsubrl
xchg
mov
pop
add
inc
sub
popa
pop
inc
xchg
push
mov
sub
fidivl
pop
mov
lods
sbb
jnp
outsl
pop
testl
pop
jbe
pop
mov
pop
gs
cmp
insb
dec
cli
loopne
pop
inc
or
cli
adc
add
rcl
shl
roll
imul
dec
out
test
outsl
and
mov
inc
pushf
stos
or
lret
dec
pop
dec
aam
ljmp
imul
mov
popa
mov
imul
jp
sbb
lret
push
sahf
push
mov
iret
addr16
pop
cli
sub
or
sbb
pop
add
stos
pop
in
lret
mov
rcl
les
xor
mov
dec
jg
fistpl
aas
adc
out
inc
int3
pop
jmp
pop
daa
pop
out
or
mov
xchg
and
add
int
adc
and
inc
cs
add
mov
cmc
mov
sbb
push
mov
imul
add
mov
outsb
call
add
imul
std
mov
mov
in
adc
sti
push
sbb
lahf
xchg
test
add
bound
shll
test
add
loopne
push
loopnew
in
ret
dec
arpl
roll
inc
jno
jmp
pop
pop
add
leave
sub
call
dec
out
lret
or
insl
sbb
push
mov
sbb
test
mov
push
pop
loop
mov
lret
es
sub
ja
gs
xor
fldenv
mov
sub
adc
inc
cmc
das
jns
or
cmp
mov
xchg
mov
repz
ja
xchg
adc
test
ret
sub
pop
xor
out
call
ss
mov
mov
and
inc
mov
icebp
mov
xor
adc
out
out
cs
sbb
std
push
lods
jmp
or
dec
adc
ret
and
jo
dec
adcb
leave
dec
andl
push
es
das
add
add
dec
cmp
mov
or
sbb
adc
cmp
push
or
fisubl
ret
xchg
xchg
test
adcl
fdivrl
in
mov
js
push
cwtl
dec
ss
movb
xchg
icebp
cmc
or
xchg
arpl
jge
das
dec
cmpsb
cmp
int
push
stc
incb
sub
inc
rcr
into
fwait
xlat
mov
jmp
sub
cmp
in
insl
fs
filds
sub
mov
cld
out
pop
hlt
je
cs
rclb
push
push
dec
mov
mov
mov
add
dec
inc
roll
daa
test
aad
and
or
mov
cmp
lahf
lods
xlat
jb
xchg
test
xor
stc
pusha
mov
out
mov
cmp
mov
add
fldenv
shl
push
sub
pop
add
mov
sti
test
add
jecxz
push
in
mov
mov
movsb
inc
mov
pusha
cld
jns
mov
dec
repnz
int
fdivr
inc
leave
jg
inc
jb
pop
repz
cmp
rcrb
sbb
pop
test
stos
les
test
adc
shrb
idivl
mov
push
nop
cmp
jne
pop
mov
cwtl
popf
jl
cmp
insb
jns
cmc
jl
mov
mov
adc
adc
and
dec
dec
lods
jge
pop
jno
pop
mov
ja
push
in
cmc
in
mov
cmp
je
xchg
adc
pusha
daa
notb
imul
stos
or
cltd
xlat
stos
add
push
or
and
mov
sub
mov
jo
cmpsl
faddl
clc
xchg
rcrl
cmpsb
js
adc
cmp
push
inc
in
inc
out
lea
iret
dec
add
push
ror
inc
js
mov
movsl
adc
mov
dec
clc
je
std
lods
sub
cmp
pop
adc
sbb
push
xchg
fidivs
dec
enter
stos
aam
pop
adc
push
jg
jnp
pop
iret
cmp
stc
or
loope,pn
sbb
in
push
xchg
rcrb
daa
popl
insl
xor
jae
push
repz
stos
jbe
outsl
or
or
dec
ret
mov
or
adc
sbb
dec
or
ljmp
jmp
push
jo
jo
dec
pop
mov
ret
popf
sbb
jge
push
jo
lret
adc
jl
out
mov
or
push
mov
jb
jo
and
fwait
testl
fisubl
mov
dec
fwait
clc
mov
push
pop
sub
popf
rorb
and
xlat
outsb
fiaddl
push
and
or
mov
mov
aaa
fwait
push
sahf
add
inc
mov
lea
sub
nop
sub
test
mov
jae
jns
xor
pushf
mov
es
mov
or
cmpsl
pop
in
add
out
jne
shrl
arpl
loope
pop
pop
es
sbb
jecxz
test
dec
push
lcall
mov
adc
xchg
sarl
int
and
jecxz
inc
xchg
daa
lret
test
xchg
add
xchg
ds
or
into
sbb
cwtl
or
out
jg
ficompl
sti
cmp
mov
dec
cmpsb
test
jge
rcrl
push
clc
stos
jne
xchg
inc
into
dec
xchg
lds
or
imul
sub
sub
pop
pushf
inc
pusha
or
pop
test
pusha
addr16
cwtl
xchg
mov
add
or
out
xorb
xchg
insl
mov
cmpsb
dec
jle
and
aaa
mov
aam
dec
clc
test
push
lret
pop
mov
inc
ficompl
jecxz
and
jp
jg
xchg
mov
xchg
xchg
add
sub
add
xor
sahf
jg
add
out
lret
dec
fadds
jbe
or
jmp
add
test
mov
or
mov
cmp
je
mov
stos
push
movsl
mov
les
fldenv
xor
popa
mov
adc
push
or
mov
add
ret
popf
sbb
dec
or
mov
stos
mov
jno
aas
cmp
mov
cmp
push
call
sbb
xchg
repnz
pushf
mov
ja
cmpsb
loopne
push
pop
shlb
sub
cli
or
stos
test
aad
gs
mov
ja
testl
xchg
lock
shlb
mov
femms
inc
pop
or
mov
out
in
cmp
add
sbb
and
pop
notb
cmp
rcr
pop
cmp
jp
mov
xchg
sarl
xor
mov
bound
pop
jl
jo
lods
inc
shrb
mov
jg
lods
test
mov
push
jg
mov
fstps
sti
sbb
mov
jo
call
jns
jne
insb
aaa
iret
xorl
jo
daa
jge
out
popf
pop
popa
fildl
arpl
jnp
std
into
std
outsl
and
aaa
mov
inc
push
sbb
loopne
pop
sub
lds
cmp
sbb
lods
lock
and
shr
xor
cmp
jecxz
sbb
push
lods
inc
outsb
jmp
mov
fadd
sub
pop
cmpsb
shl
mov
inc
or
sbb
cs
lret
push
sbb
outsb
and
xchg
clc
lret
adc
inc
dec
enter
xchg
xchg
xor
repz
add
mov
in
and
pop
add
shlb
inc
repnz
mov
out
cld
mov
adc
push
and
adc
pop
jo
cmpb
jnp
jmp
std
sub
pop
jae
ret
enter
lds
dec
sub
push
jmp
addb
sbb
push
cmpsl
ja
sbb
mov
outsl
loop
mov
dec
gs
pusha
xchg
sub
sbb
mov
pop
mov
cmp
adc
dec
pop
scas
loop
cmp
out
jne
cmp
leave
inc
mov
xchg
test
in
stc
out
add
cmc
lods
xor
ret
inc
sub
push
pop
xchg
orl
notb
sbb
pusha
aam
dec
insl
adc
cmp
xchg
and
add
cmp
xchg
pop
mov
mov
mov
pop
pop
pop
xchg
rcll
js
sbb
or
js
xchg
sbb
ds
cmpsl
mov
jno
mov
mov
add
sbb
stos
and
inc
mov
out
outsl
movb
negl
jne
xchg
aad
in
add
iret
mov
lahf
mov
inc
rorl
lahf
pop
fildl
add
lahf
out
xor
lods
pop
push
jo
mov
add
addr16
out
test
pop
call
mov
jg
aad
fs
stos
mov
js
ret
xor
mov
mov
sbb
sti
stos
mov
jae
and
sub
imul
aaa
loope
pusha
or
aaa
scas
repnz
cwtl
push
inc
sub
inc
xchg
out
pusha
jbe
fdivr
dec
outsl
icebp
cld
arpl
pop
add
jne
dec
xchg
mov
test
test
xchg
mov
xor
lret
jns
push
mov
gs
push
bound
cmc
xor
push
mov
add
pop
sub
rorl
cmp
sub
jecxz
inc
stc
inc
adc
jne
pop
xor
xlat
and
jecxz
imul
shll
dec
jecxz
ss
fs
jns
mov
mov
in
lock
mov
notb
mov
add
mov
into
aaa
sbb
lea
daa
inc
pop
pop
dec
push
push
jnp
push
repz
cwtl
jae
jecxz
ficomps
out
js
mov
inc
cltd
push
push
movsb
jbe
cmp
pop
pop
pop
pop
mov
pusha
xor
lods
loop
mov
mov
cmp
xchg
xchg
iret
xchg
jae
pop
gs
inc
shlb
leave
and
pusha
cmp
pop
xchg
mov
cmc
clc
mov
sub
sbb
jne
mov
in
sar
and
push
jno
sahf
pop
aad
inc
movsl
cmpb
sub
jnp
mov
push
inc
lahf
cmp
test
sub
add
jg
jne
adc
adc
gs
mov
inc
jnp
lods
mov
xchg
or
inc
stos
mov
scas
repz
xchg
cli
inc
loope
or
xor
inc
xor
popl
xchg
inc
and
stos
out
push
mov
dec
movl
std
xlat
call
pop
push
ret
jp
jecxz
add
push
adc
inc
pop
pop
adc
or
lahf
movsb
mov
lahf
daa
leave
and
rcll
mov
push
sbb
add
pop
std
aas
fidivl
xor
cmp
test
inc
adc
leave
pop
cmp
xor
mov
mov
xchg
sub
fisttps
ja
ret
and
mov
or
jl
je
pop
jl
inc
sbb
lds
inc
ja
xor
mov
pusha
int3
test
sbb
xor
pop
or
and
xchg
das
sbb
popa
xchg
js
cmp
dec
ljmp
dec
insl
ja
scas
aam
pop
push
xor
jnp
xchg
sbb
dec
rorl
jge
mov
fcmovnbe
mull
mov
adc
xchg
out
outsb
push
aas
cmp
std
xchg
cs
xor
push
test
inc
sbb
push
sbb
or
adc
rolb
xchg
je
xchg
add
loopne
inc
shrl
fsubrs
sbb
iret
addr16
jo
adcb
cmp
arpl
in
cmp
aaa
or
cmp
adc
in
adc
push
ret
aaa
adc
in
push
outsl
movsl
daa
xchg
xchg
jg
fwait
inc
rclb
jbe
mov
push
shrb
xchg
xchg
ficompl
fwait
jo
addr16
pop
pop
add
fdivrp
fptan
and
ja
jo
aam
xor
test
or
mov
adc
pop
fdivrs
add
pop
jbe
dec
push
mov
sbb
dec
inc
popf
mov
sub
xchg
mov
sub
cmp
jecxz
cmp
lods
mov
jmp
mov
mov
xchg
outsb
mov
or
jg
inc
xchg
fdivrs
jl
xchg
push
xchg
jbe
jg
stc
insb
sub
test
mov
jnp
insl
shlb
or
jo
je
outsb
jbe
cld
inc
mov
sahf
mov
adc
add
dec
xchg
cmp
rol
hlt
cwtl
mov
xchg
inc
aaa
arpl
xor
stc
adc
push
add
decb
repz
out
xchg
aas
cltd
int
cmp
mov
idivb
pop
add
pushl
jnp
in
ret
lahf
cmp
jge
subb
jl
in
fsub
mov
test
pushf
jbe
stos
xchg
test
cld
mov
sub
mov
in
in
lods
idivl
dec
out
add
xor
jmp
sbb
xchg
and
pop
add
fwait
sbb
mov
jmp
daa
or
sbbb
popa
rol
shl
push
fcomip
mov
mov
lods
mov
dec
pop
scas
jb
jo
cmp
xorl
arpl
cmp
in
inc
imul
adc
dec
push
add
loopne
ja
and
out
pop
stc
xchg
sbb
insb
iret
inc
jns
ds
scas
mov
or
cli
sub
or
shlb
add
jnp
jae
push
or
adc
and
xchg
and
stos
inc
sahf
jae
gs
xchg
and
cld
loope
dec
xchg
and
pop
loopne
das
push
sbbl
jne
mov
adc
loopne
gs
xor
jge
or
loope
jp,pt
inc
xchg
mov
sbb
test
cmp
jl
sbb
xchg
mov
inc
les
xor
mov
je
xchg
xchg
inc
mov
sub
inc
push
push
dec
mov
notl
cmp
jno
sub
sbb
pop
cmp
and
icebp
mov
jl
xor
mov
pop
mov
nop
pop
arpl
enter
imull
sub
sbb
or
adc
xor
push
inc
dec
je
loopne
pop
aam
cmpsl
pusha
mov
push
mov
loopne
or
mov
dec
call
imul
add
ljmp
push
sub
jp
sub
mov
push
cmp
adc
lds
push
in
mov
inc
pop
imul
rcrb
adc
dec
leavew
popa
xor
dec
xor
aaa
jne
adc
insb
aas
cs
xchg
mov
xor
push
jno
mov
icebp
mov
jb
loop
inc
push
mov
into
test
add
js
xchg
mov
in
mov
sub
lahf
cmpsb
fisttps
enter
nop
sahf
sub
sbb
xchg
dec
adc
lods
inc
sub
enter
movsl
lods
icebp
shrb
push
in
inc
pusha
jns
ljmp
lret
shrb
push
movsb
popf
imul
jmp
fmull
gs
xchg
jp
xchg
dec
xlat
add
dec
sbb
xchg
loope
out
adc
adc
sub
push
outsb
arpl
das
push
push
jnp
mov
loop
js
cld
push
sbb
sub
xchg
call
xchg
or
outsb
add
je
cmc
jecxz
dec
faddl
jns
mov
inc
ss
loopne
lcall
xchg
fisubl
out
int
push
in
fucomi
pop
neg
mov
lea
test
cmp
fists
shr
sbb
mov
push
mov
pop
cmp
movsb
jbe
mov
jge
insl
fnstsw
xor
xor
mov
popf
mov
lods
popf
int
enter
push
xchg
bound
out
xchg
mov
or
add
aam
cmc
fbstp
jb
mov
push
mov
push
pop
pushf
cmp
aam
lea
xchg
inc
sar
lcall
roll
inc
fwait
and
test
dec
or
xor
decl
cltd
sbb
jae
cltd
add
repnz
add
xchg
ja
dec
cmp
test
nop
je
out
jmp
mov
cld
lea
add
adc
movl
mov
aas
ja
push
sub
popa
scas
or
inc
pop
loopne
out
mov
stos
adc
jns
or
add
mov
hlt
popf
sbb
bound
add
inc
or
mov
aaa
add
jae
outsb
sbb
add
mov
dec
sub
ds
lock
mov
aaa
in
adc
xchg
add
repz
lods
std
sub
lock
sub
pop
ret
es
aas
sbb
push
mov
ret
sub
pop
fsubrl
mov
fnstenv
iret
sbb
lcall
in
jne
cwtl
mov
and
cmpsl
icebp
cli
das
call
pop
mov
or
push
and
sti
arpl
pop
sbb
int
ret
sbb
shrl
mov
and
dec
or
jle
adc
cmp
add
repnz
jno
pop
jmp
in
cmp
push
push
mov
or
push
clc
sub
stc
pop
orl
out
dec
adcb
movsb
je
ret
mov
adc
outsb
mov
inc
xchg
sbb
xchg
addr16
out
ja
pusha
xchg
add
cltd
push
cli
inc
pop
dec
xchg
sub
or
ljmp
cmp
in
fucomi
jb
fadd
mov
lahf
lds
loop
into
adc
cld
fwait
pop
mov
insb
repz
and
repz
les
sbb
ret
pminub
add
jmp
cmc
lcall
notb
lret
sbb
addr16
push
test
adcl
sbb
es
test
inc
push
lods
clc
pop
int3
mov
jne
ja
addr16
cmpl
inc
dec
loope
outsl
cmpsl
pop
mov
xor
dec
ja
and
mov
adc
test
ja
or
sub
pop
lods
daa
or
cs
push
aam
ja
inc
push
rorb
mov
roll
test
out
cmp
add
stos
and
or
cltd
mov
outsl
std
stos
inc
adc
clc
jl
rcrl
sub
dec
adc
in
mov
repz
insl
repz
inc
pop
xchg
in
mov
inc
mov
or
sub
inc
aam
sti
adc
mov
mov
sbb
inc
jmp
jl
xchg
iret
sbb
test
sbb
rorl
out
sub
pop
addr16
inc
jne
sbb
mov
and
adc
pop
popfw
gs
inc
fsubl
out
add
inc
nop
xchg
jge
aas
add
in
in
jl
scas
std
push
and
jnp
lods
sbb
or
cmp
iret
hlt
cmp
xchg
jno
ja
mov
mov
mov
cmc
dec
out
push
leave
sub
cmp
pushf
test
sar
push
lods
fsub
call
and
sub
sub
adc
cmp
jnp
xchg
pop
push
adc
mov
mov
stos
rorl
jne
push
xlat
jge
add
xorl
dec
pushf
rcll
pop
ss
addr16
adc
sub
fs
int3
jmp
adc
mov
ja
xor
std
cmp
out
or
sbb
xchg
and
push
test
lds
scas
sbb
jg
lock
out
andb
shl
cmp
mov
addr16
repnz
sbb
lahf
or
popf
mov
sahf
push
jb
dec
test
xor
out
cwtl
cpuid
mov
pop
jns
or
mov
fstps
push
js
sub
add
int3
mov
and
fisttps
nop
ret
subb
pop
gs
pop
mov
popa
dec
int
cmc
xor
iret
adc
mov
das
add
sti
jns
cmp
stos
mov
mov
lret
mov
andl
fsubl
add
test
pop
mov
loopne
test
mov
cmpsb
cmovns
cmp
test
call
sub
lock
cmp
test
std
cmp
mov
push
lds
adc
fst
movswl
dec
mov
lock
lret
jns
es
fdivl
adc
mov
lods
sbb
out
xchg
mov
sub
jge
pop
cld
cmp
enter
mov
dec
test
xchg
xchg
addr16
imul
xchg
xchg
div
xor
hlt
mov
test
fistps
mov
cmovae
add
adc
jg
fsts
sbb
into
inc
add
pop
mov
cltd
mov
out
push
jg
outsb
push
lods
pop
lods
xchg
and
adc
xchg
arpl
popa
push
je
mov
out
sbb
or
sub
bound
inc
pushf
pushf
push
sub
sub
pop
inc
aaa
push
test
fbstp
outsl
fldenv
or
loopne
das
jl
negb
aad
dec
mov
int3
pop
shl
jmp
and
enter
lret
inc
mov
in
mov
and
mov
in
into
repz
dec
inc
lahf
aam
mov
jo
loop
add
and
outsl
testb
push
inc
fisttps
inc
sub
pop
mov
faddl
orb
jns
leave
pop
pushf
pushf
push
cmpsb
inc
dec
mov
xchg
sbb
sub
pop
push
orl
mov
enter
mov
and
cs
jmp
xor
cmp
jp
push
ss
enter
popa
inc
lds
mov
test
pushf
sub
dec
dec
loope
in
push
push
into
sbb
xchg
and
setns
iret
subb
shlb
mov
pop
sub
dec
push
mov
and
push
int
iret
pusha
mov
mov
sahf
cs
push
lret
rcrb
loop
push
incb
and
and
loop
imul
xchg
test
cwtl
cmp
mov
and
cmp
js
ljmp
rcll
pop
add
lea
test
lret
dec
and
stos
and
xchg
and
lock
push
ja
xchg
pop
cld
insb
sub
xchg
adc
jns
or
pop
push
or
les
lcall
out
repnz
pop
test
and
das
clc
mov
sahf
jb
fdivs
in
adc
or
lods
dec
jnp
scas
dec
lds
mov
adc
or
sub
jge
cmovs
dec
lods
fnstenv
lret
lock
sti
sub
or
push
and
pop
and
aas
push
cmp
sbb
addr16
add
lods
adc
lahf
dec
cmp
gs
cs
add
and
or
mov
add
fsubrs
sbb
cld
lahf
loope
pop
das
call
arpl
rclb
jg
xchg
cmp
cmp
push
jp
aaa
or
pushf
cltd
push
xor
inc
addr16
mov
dec
stc
leave
push
jl
mov
into
lret
les
je
dec
cmpsl
inc
inc
pop
stos
cld
pop
inc
fadds
jae
xchg
lahf
les
xchg
add
jecxz
xchg
xchg
mov
mov
mov
imul
je
sti
lcall
mov
bound
adc
testl
sub
das
sbb
cmp
push
or
xor
nop
mov
inc
inc
cmp
and
push
xor
jecxz
movb
push
jno
xor
dec
in
cmpsb
les
pop
or
jmp
into
cltd
push
clc
push
push
in
xchg
xor
xchg
lods
mov
sub
cmpsl
adc
dec
mov
int3
les
push
push
dec
test
cli
sbb
imull
mov
enter
dec
enter
cmp
fs
pop
aam
movsl
pop
fcoms
mov
in
and
inc
lahf
pop
fsub
int
setnp
outsb
in
xchg
mov
sub
lock
mov
lret
dec
jne
inc
and
and
xor
inc
adc
add
jbe
sbb
test
fwait
adc
pop
fwait
xor
insl
fstpl
arpl
jnp
mov
sbb
add
and
in
mov
fsubp
sti
cmp
lds
jecxz
fnstcw
mull
and
aas
sub
mov
mov
icebp
rolb
sbb
jp
jp
in
push
aad
mov
fbstp
add
sub
push
push
movb
loop
mov
jbe
lock
repnz
iret
test
cmp
sub
lret
mov
inc
mov
xor
mov
fsubrs
rorb
ljmp
out
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
xchg
jecxz
and
rcrb
fisttps
cmp
jecxz
adc
adc
aaa
add
jo
outsl
xor
mov
es
hlt
xchg
pop
popa
aam
sbbl
pop
push
dec
cltd
jo
jno
inc
push
add
jp
cmc
je
sub
mov
ds
loopne
xor
les
sub
das
and
ror
imul
push
mov
dec
push
adc
xlat
jbe
inc
movsb
call
mov
jle
dec
mov
pop
addb
adc
imul
xor
or
fnstenv
xchg
inc
and
lods
sub
xchg
into
mov
icebp
icebp
lods
jmp
dec
ja
icebp
cltd
dec
das
inc
jmp
mov
scas
jne
stc
push
jg
jne
or
cmp
dec
aaa
pusha
mov
cld
lea
add
adc
mov
mov
test
dec
push
daa
and
mov
addr16
cli
outsb
roll
cmpsb
outsb
jecxz
adc
clc
sbb
inc
stc
mov
or
mov
repz
outsl
push
mov
in
jae
adc
xchg
adc
add
mov
mov
cmp
insb
out
iret
cmp
sahf
jbe
pop
loop
out
outsb
es
mov
ret
jecxz
aam
out
xchg
cmpsb
adc
mov
int3
push
clc
cmpsl
das
cmp
inc
cmp
cmp
hlt
scas
sahf
jmp
mov
hlt
out
rcrl
sbb
and
and
or
fwait
mov
sti
dec
push
bound
push
add
insb
jl
test
or
aam
clc
jnp
pop
mov
dec
cwtl
sub
inc
push
push
or
xchg
lock
pushf
pop
lods
mov
sbb
add
and
es
push
cmp
xchg
in
fucom
pop
scas
cmp
or
cmp
shr
sub
push
add
out
sub
xor
xchg
inc
push
push
pop
pop
sbb
jbe
lahf
lret
jb
insb
jp
js
dec
jb
inc
cmpsb
sub
sbb
sub
jb
roll
dec
jbe
sbbl
dec
add
pop
ljmp
lea
mov
sub
movsl
xchg
jl
ja
dec
xor
cltd
es
inc
jne
int3
pusha
xchg
addb
fistpll
inc
xchg
bound
and
test
fnstsw
ljmp
setae
push
clc
cmp
add
loop
sub
in
pop
std
pop
jle
popa
insl
mov
repnz
iret
fchs
daa
ljmp
xchg
test
cltd
sar
fimull
push
xor
inc
inc
adc
push
imul
dec
popa
push
mov
mov
or
lods
movsl
imul
push
sub
and
add
xor
dec
fucomip
xor
add
fsubrs
in
cmpsb
jbe
push
xor
daa
repnz
cmp
pop
dec
jp
ret
push
jp
sbb
pushf
es
out
repnz
adc
sbb
sbb
pop
insb
mov
ds
sbb
xor
loopne
je
sbb
xchg
ud0
cld
mov
sbb
adc
and
or
fcmovbe
into
pop
mov
push
adc
leave
xor
out
cmc
sahf
aam
jle
clc
or
mov
xchg
test
xor
jns
loopne
jl
mov
and
mov
inc
inc
or
icebp
cmp
addr16
mov
push
xor
mov
call
lret
ljmp
sub
xchg
pop
pop
out
in
divl
sub
mov
pop
lock
add
into
fistl
call
clc
sbb
dec
add
pusha
pop
fcom
or
aas
mov
pop
cwtl
sbb
in
mov
dec
rorl
or
lret
add
lea
cmp
dec
clc
push
sub
cmp
mov
ljmp
or
or
loope
jmp
es
xchg
not
dec
das
icebp
fildll
cmc
fiaddl
in
rorb
add
xor
fbld
jb
test
xor
leave
faddl
push
lds
push
mov
mov
lret
pop
push
cmp
mov
cmp
and
mov
lock
scas
into
adc
minps
push
dec
test
mov
mov
rolb
lret
sub
adc
mov
sub
lock
repz
fisttps
aad
inc
push
daa
sar
scas
xchg
pop
push
shl
sub
imull
lret
dec
add
incb
pop
add
mov
xchg
dec
push
xchg
adc
into
lahf
dec
jl
jle
jnp
fisubl
xchg
pop
mov
jmp
hlt
jb
inc
pop
fistpl
and
sub
inc
outsb
loope
hlt
leave
int
ret
xor
pop
ror
xchg
stc
cmp
popl
loop
notb
mov
jns
dec
ret
outsl
and
shrb
sbb
jne
xchg
and
pop
push
mov
sbb
scas
cmp
jg
aam
mov
lock
shll
cmp
or
xchg
out
int3
inc
pop
js
push
xchg
mov
mov
notl
mov
xchg
rolb
ror
shrb
sub
jno
scas
fs
fnstcw
test
pop
sub
mov
xchg
enter
iret
inc
inc
xchg
pop
jns
out
cmp
dec
inc
nop
lods
les
sbb
jne
adc
and
test
sub
mov
pop
jne
jae,pn
addr16
lcall
jo
cld
inc
setp
push
jns
out
inc
adc
pop
movb
jg
push
hlt
push
lret
push
adc
shlb
pop
lret
jne
adc
loope
mov
movsb
pop
xchg
data16
xchg
repz
or
and
push
outsl
subb
cmp
imul
dec
hlt
mov
jbe
mov
popa
in
call
inc
in
cmp
aad
mov
inc
in
scas
in
xor
adc
ds
inc
mov
mov
icebp
test
xor
cmp
dec
popf
cmc
lock
push
pop
jnp
jno
jl
sti
sub
cs
dec
cmc
das
pop
stos
pop
aad
push
and
shll
fldcw
fadds
push
fs
dec
clc
xchg
setge
mov
iret
in
cmp
out
pusha
imul
test
pop
push
mov
ja
cmp
sarl
sbb
pushf
inc
fs
andb
and
cmpb
cmp
sbb
lods
iret
mov
dec
int3
mov
xchg
pop
fs
cmc
and
je
adc
loopne
or
ret
pop
xchg
xor
cwtl
mov
sbb
adc
and
jno
or
push
ljmp
out
mov
pop
jb
mov
mov
add
mov
inc
outsl
lret
test
daa
cs
cmp
cwtl
mov
fldcw
or
mov
inc
js
mov
or
or
add
push
iret
test
rcrl
xchg
sbb
mov
adc
add
jmp
inc
cmp
push
push
sub
xor
adc
loope
adc
mov
jne
adcb
addb
cld
test
add
and
ret
cwtl
xlat
sahf
push
sub
adc
repz
es
aaa
inc
movsb
dec
clc
lret
test
stos
pop
cli
adc
jg
clc
insb
pushf
mov
lods
fmuls
aam
popa
sbb
add
cmp
dec
and
cs
fmulp
adc
arpl
fidivs
pop
jle
in
and
xchg
push
add
rolb
in
xor
xor
sub
scas
je
ret
std
ret
aam
and
hlt
mov
add
xor
outsl
mov
ja
es
or
imul
xchg
cs
mov
sub
xchg
fwait
cli
ljmp
repnz
in
je
je
loope
mov
sarl
mov
ljmp
mov
stos
stc
das
or
or
stc
out
push
sarl
test
jmp
test
push
mov
lea
jp
or
popf
fcompl
and
mov
lods
mov
in
orb
add
popa
cmp
sub
dec
sbb
or
mov
or
shl
push
mov
fs
dec
sbb
sbb
pop
mov
stos
dec
int3
jnp
repz
sub
push
push
clc
mov
in
divb
stos
dec
add
repz
dec
sbb
cmpb
sarl
or
popa
roll
fidivrs
call
lret
test
dec
push
adc
mov
xchg
and
pusha
into
push
mov
fwait
jns
jnp
add
sbb
sbb
clc
out
adc
mov
sub
fadds
jg
cmpsl
lods
mov
call
jno
shll
pop
cs
outsb
jne
psadbw
mov
ljmp
mov
out
stos
mov
and
push
xchg
jbe
dec
sbb
jge
pop
jbe
cltd
test
sub
lods
or
sti
cmp
lods
fdivr
out
subb
and
jbe
add
cli
mov
repnz
adc
insl
out
mov
jl
lods
inc
mov
pop
mov
jmp
dec
lcall
scas
cli
xlat
mov
jae
mov
inc
dec
int3
je
sbb
or
scas
movsb
sahf
xor
push
das
jno
addl
push
sub
adc
xchg
inc
js
pop
lret
pusha
mov
sar
loopne
sub
fwait
xchg
hlt
xor
test
daa
dec
mov
mov
fnstenv
push
cs
dec
out
mov
xchg
push
xor
mov
out
mov
mov
outsb
repnz
mov
pop
ret
mov
inc
push
fwait
xor
inc
es
outsb
mov
mov
sbb
inc
ret
insl
fcmovbe
mov
std
dec
in
pop
xchg
aam
stos
mov
std
sub
mov
push
dec
je
adc
mov
loopne
scas
pushf
movaps
jae
ret
cld
xor
push
test
ret
xlat
mov
cmp
flds
mov
pop
add
out
jge
xchg
popa
or
imul
pop
outsl
push
int3
test
push
xchg
daa
dec
and
mov
pop
dec
sub
and
or
arpl
frstor
outsb
stc
sbb
push
xor
inc
scas
lock
xchg
mov
or
xor
push
pop
mov
aam
jp
push
sbb
lret
fldenv
insb
rol
sbb
cmpsl
cwtl
scas
cltd
dec
aad
and
lods
mov
jbe,pn
push
das
subb
cwtl
inc
pop
or
lcall
pop
add
sbb
jae
cmp
mov
xchg
mov
push
xchg
sub
std
fisubrs
ja
bound
in
insl
push
fsincos
xor
divb
mov
out
push
push
movsb
xor
jns
and
ret
cmp
jecxz
and
lret
stc
mov
mov
sub
in
mov
lea
xor
cld
inc
xchg
loop
xchg
in
jge,pt
enter
outsl
loop
mov
lea
cmpsb
outsl
pop
pop
sbb
cmp
ss
pop
xchg
addr16
adc
outsb
xor
jno
dec
mov
cld
popa
pop
and
and
inc
pop
xlat
out
loop
dec
stos
jle
rorb
ud0
xchg
mov
adc
mov
jno
push
mov
mov
lret
sar
jmp
mov
jb
push
cs
mov
and
adc
rorl
and
shl
mov
popa
push
mov
sbb
xchg
jmp
sbb
xor
fdivrs
loop
mov
stc
stc
and
popf
sub
test
lods
or
sbb
mov
cmp
sbb
jl
ret
xor
js
lret
rcrl
dec
xchg
add
sub
cmpsl
dec
je
cmp
js
mov
push
loope
jl
cmp
jae
push
dec
in
sbb
ror
ret
pop
lret
fcmovnu
faddl
es
mov
out
mov
sbb
pusha
xchg
pop
pop
arpl
enter
not
ss
push
xchg
enter
enter
stc
pop
scas
push
pop
dec
in
fwait
adc
mov
and
mov
ljmp
push
in
aam
or
pop
nop
hlt
out
jne
rcrl
in
fs
dec
adc
fists
sbb
icebp
fdivl
pop
imul
hlt
bound
dec
ror
pop
sub
test
mov
inc
xchg
jae,pn
inc
repnz
mov
shl
inc
cmp
out
dec
arpl
aad
fcomps
jg
aas
enter
ja
stc
add
ja
dec
mov
stc
sub
mov
pop
mov
xchg
xchg
sbb
cmpsl
bswap
sbb
into
push
sbb
xchg
mov
leave
mov
pop
aam
lea
int
jno
pop
inc
cmc
sub
fldenv
ficoml
fildl
cmpl
push
leave
mov
jg
xor
cmp
mov
push
xor
lock
and
andb
cmp
pop
jns
inc
push
xchg
cltd
popf
jne
out
mov
daa
cmpsb
stos
imul
addr16
aaa
jb
sub
jb
stos
lock
sahf
and
pushf
add
or
addl
mov
repnz
fcoms
mov
shll
scas
int
sbb
testl
arpl
jp
pop
andb
push
push
and
xor
aas
adc
in
pop
lret
in
xchg
jae
add
sbb
stos
addr16
aas
jg
sbb
jbe
sub
sub
cwtl
arpl
dec
lods
cmp
xchg
xor
ds
rol
mov
inc
loopne
mov
mov
das
ds
aas
add
iret
in
add
and
mov
lret
jnp
dec
arpl
movsl
or
push
je
xchg
mov
mov
int
aam
add
push
push
or
cmp
jno
aaa
dec
mov
xlat
cmp
cmp
xor
push
dec
push
push
les
dec
dec
cmpsb
cli
or
dec
movsb
cwtl
dec
es
sarl
mov
sti
cmp
cmp
mov
je
jno
push
movnti
jne
fdivs
jns
test
inc
xor
push
mov
mov
inc
jge
imul
xchg
and
dec
mov
add
fucom
dec
or
into
and
fldcw
mov
inc
stos
mov
arpl
mov
fucom
lock
adc
arpl
imul
pop
xchg
dec
das
out
lock
test
outsl
adc
rol
mov
sub
inc
jp
jl
movsb
jo
jbe
sub
rcll
xor
lods
push
and
pop
cltd
scas
aaa
mov
negb
and
loop
xor
sub
xor
mov
mov
sbb
lods
mov
lret
push
dec
push
rcrb
push
sti
out
add
hlt
inc
mov
sub
icebp
loopne
lahf
jne
jecxz
addl
or
cltd
in
dec
adc
xor
mov
scas
test
dec
ds
fcmovnbe
rcrl
cmpsb
sbb
das
push
repz
bound
fdivl
xchg
lods
mov
popf
adc
push
sbb
mov
clc
xchg
sbb
cmp
subb
push
pop
mov
mov
das
in
sarb
movsl
push
sti
xchg
dec
lds
ja
fmulp
iret
mov
mov
in
sbb
imul
lcall
stos
dec
cld
cmp
ja
xchg
inc
test
leave
sub
lods
repnz
or
shr
mov
push
jle
lods
or
js
leave
testb
inc
lods
sbb
inc
cmp
call
iret
movl
lcall
negl
add
mov
pop
jl
cmp
test
icebp
std
outsb
dec
sarl
es
adcb
test
test
pop
or
add
js
das
movsl
push
scas
test
cwtl
stos
inc
pop
ret
xor
and
mov
sbb
dec
dec
xlat
add
cmp
fwait
push
mov
mov
xor
adc
inc
mov
inc
daa
hlt
pop
movsb
inc
xchg
jne
fisttpll
aas
gs
mov
mov
inc
xlat
fistpl
mov
jge
es
push
dec
jle
jae
stc
rorl
sbb
in
stc
push
test
psubsb
aaa
icebp
repz
add
xchg
imul
fsubr
pop
mov
xor
andb
jl
inc
es
in
call
roll
and
into
pop
push
mov
jb
xor
or
mov
out
hlt
mov
fstps
andb
loopne
mov
mov
out
test
icebp
xchg
jmp
scas
fildll
test
imul
inc
cmp
cld
jo
rcrl
lret
mov
sbb
xlat
fnstcw
mov
dec
aaa
cld
or
push
cwtl
les
es
loope
insl
and
sub
movsb
or
xor
imul
dec
xchg
dec
add
lret
and
or
pop
push
dec
xchg
cmp
out
mov
mov
pop
lret
mov
cmp
or
add
mov
gs
mov
test
enter
xchg
lods
xchg
sbb
pop
add
stos
sbb
xor
xor
mov
add
in
bound
pop
pop
and
daa
xor
inc
movsl
stos
shlb
aas
jle
rolb
inc
ret
mov
add
sub
mov
inc
dec
add
inc
scas
daa
daa
int
adc
dec
jge
xlat
fs
sub
cmp
add
jecxz
rolb
mov
or
sub
aaa
or
push
mov
pop
push
cwtl
cmpsl
pop
xor
xor
inc
xchg
adc
jp
add
cltd
nop
or
rcrb
jno
movsl
stos
cmpsl
push
mov
cmpb
cmp
pop
sbb
mov
in
mov
fldt
push
fisubrl
lret
xor
movsl
imul
sub
gs
add
mov
cli
out
in
icebp
fbld
mov
pop
xor
push
sub
movsl
ss
outsl
pusha
jle
lods
jne
adc
xor
outsb
aaa
movl
jbe
test
jnp
adc
or
and
in
cmp
scas
inc
dec
mov
mov
test
movsl
dec
pop
test
shll
fwait
cmp
lret
xchg
push
rorb
push
mull
aas
add
mov
cmp
sub
jecxz
jo
adc
pop
icebp
add
mov
pushf
es
inc
rcrb
push
adc
cmp
stos
dec
nop
lds
sbb
mov
push
punpckldq
insl
mov
ljmp
xor
mov
mov
imul
and
sbb
sub
cmp
jg
fwait
imulb
test
push
lret
xchg
sbb
jns
mov
mov
sbb
dec
movsl
testl
mov
js
clc
add
bound
mov
pop
adc
aad
sbb
jnp
pop
jb
mov
xchg
jl
fisubs
icebp
push
test
and
sti
das
inc
sbb
mov
cmp
loopne
xchg
imul
adc
inc
sarl
out
pop
sub
mov
pop
stos
jp
dec
dec
mulb
popf
testl
push
jae
mov
icebp
orb
inc
push
or
test
adc
jge
mov
outsb
fs
cmp
rorb
sub
mov
bnd
xchg
mov
sahf
inc
jge
jmp
out
jb
stos
in
fstpt
xchg
into
adc
pusha
je
inc
imul
pop
pop
pushf
sub
xchg
mov
xchg
fbld
push
cmpsl
push
xchg
inc
inc
jmp
rcrl
sbb
add
jbe
mov
pop
jbe
mov
mov
pop
mov
jmp
xchg
cmp
mov
push
mov
adc
insb
aam
add
fisttpl
add
lds
imul
in
test
fbstp
lcall
mov
shr
push
cmc
lret
inc
or
or
dec
pop
jle
cmpxchg
out
ds
cmc
jge
pop
stc
mov
daa
sub
pop
scas
sbbl
mov
lret
jge
stos
pop
sub
mov
xor
cmp
xor
sti
lret
popf
sbb
mov
dec
in
and
push
xor
cld
push
mov
inc
js
xchg
popa
mov
mov
leave
inc
lods
fadd
ret
fcompl
daa
pop
arpl
cwtl
leave
movsl
cmpsb
sbb
lahf
outsb
cmp
xor
int3
xorl
fdivs
pushl
pop
ja
or
outsl
mov
mov
jmp
lcall
hlt
cmp
push
and
sbb
cmp
movl
jmp
mov
les
mov
rcrb
mov
jge
mov
fnsave
mov
mov
push
cli
pop
aaa
mov
mov
cmc
and
xor
push
mov
inc
pop
and
loop
add
mov
sti
cmpsl
push
ret
negl
fcomps
mov
push
movsb
test
shlb
daa
lcall
push
test
stos
pop
xor
not
cmp
sbb
xor
inc
notb
cltd
ds
or
movsb
cld
pusha
pop
test
pop
and
mov
mov
mov
idivb
cli
je
clc
sub
es
notb
lods
push
inc
sarb
jge
shll
je
imul
fbstp
out
jne
lret
ljmp
add
inc
fsubl
and
incl
mov
out
xor
push
xchg
loopne
pop
push
pop
aaa
cmpsb
imul
std
js
lret
fistl
cmpsb
push
push
int
mov
adc
pop
aas
or
xor
fidivs
fisubrs
mov
pop
pop
flds
sub
push
in
pop
ret
lods
decb
andb
mov
xorb
js
sbb
or
ror
insb
shll
xchg
into
jg
xchg
inc
ret
pusha
and
dec
sbb
sbb
mov
cmp
jae
or
push
test
add
push
icebp
adc
aas
inc
and
push
add
cli
imul
adc
movl
jge
mov
jmp
xor
das
fwait
test
loopne
scas
outsb
pop
ret
mov
enter
stc
es
cmpsl
orb
cltd
or
data16
mov
cltd
pusha
test
les
inc
stc
dec
ret
dec
aam
jge
outsb
cmp
mov
aaa
inc
xor
or
adc
sahf
or
subb
adc
mov
dec
sub
sbb
jle
xor
and
out
mov
lods
divl
push
inc
sbb
aam
mov
scas
and
test
popa
mov
int
and
ja
cmp
fsts
lds
repnz
xor
pop
xor
lods
lret
pushf
adc
xor
or
xchg
lods
mov
sahf
push
dec
push
fcmovnbe
dec
xchg
xor
lahf
sub
cld
lret
sbb
sub
xchg
push
into
jmp
std
out
fs
adc
adcl
in
bound
mov
jne
aad
xchg
insl
jle
addb
mov
mov
in
cmp
pop
pop
add
xor
clc
sbb
call
imul
cmp
js
sbb
flds
call
enter
mov
and
add
add
sbb
aad
loope
fs
cmpsl
push
rcll
mov
in
cmp
push
insb
dec
outsl
adc
leave
ror
fists
push
js
cmc
sub
pop
add
jbe
xor
mov
cmpsl
stos
jo
pushf
jnp
xor
jno
xchg
jo
lock
lock
sub
mov
ljmp
mov
loopne
aaa
adc
pusha
pop
push
popf
jbe
pop
sar
ljmp
es
or
add
mov
sub
arpl
sarl
pop
fidivrl
sbb
sbb
imulb
mov
and
fisubrl
ljmp
test
shl
inc
pushf
inc
inc
lahf
les
aas
lahf
or
cmp
es
out
test
add
xchg
gs
addr16
or
mov
mov
mov
pusha
js
outsb
mov
cmpsb
in
lock
dec
stc
cmp
fisttps
adc
mov
sub
push
repnz
scas
int
ja
js
adc
inc
leave
and
test
mov
mov
jnp
jle
insl
adc
mov
ret
mov
sub
mov
in
mov
sbbl
mov
ret
out
hlt
jle
push
lods
sti
xor
add
xchg
mov
xchg
fsubr
push
inc
fldl
sub
lret
inc
mov
jns
popf
push
stos
je
or
ficoms
out
adc
push
and
pop
daa
vprotw
jg
ror
mov
fadds
fcompl
test
push
mov
pop
cmp
add
imul
dec
std
inc
xchg
jle
pop
add
sbb
mov
lds
loopne
mov
stos
shll
pop
pop
fstps
xor
jge
cmpsb
dec
insl
mov
aaa
mov
rol
lret
mov
jmp
mov
js
sbb
je
in
cmpsb
mov
sub
mov
push
setb
aad
and
inc
cmpb
sbb
dec
pop
jge
jnp
rcll
test
stc
rcrb
pop
or
cmp
into
cmp
pop
mov
and
js
adc
inc
sbb
es
dec
add
mov
xor
inc
ja
bound
jno
jno
inc
mov
ljmp
es
icebp
cli
adc
stos
pushf
shl
mov
or
lds
mov
push
xchg
sbb
fadds
inc
xchg
add
cld
jl
mov
mov
jmp
xor
mov
jle
mov
mov
shrb
lea
jecxz
addr16
or
aad
fscale
out
and
flds
inc
and
cld
movb
cwtl
jo
mov
repnz
fimull
xchg
data16
inc
inc
fwait
mov
sbb
data16
pusha
inc
xor
push
push
popf
mov
cwtl
mov
test
enter
lods
ret
mov
pop
push
js
pop
cmpb
mov
mov
aas
rorb
fldenv
add
adc
out
push
fwait
call
daa
push
sti
lahf
loopew
push
addb
les
test
ret
sub
pop
inc
or
mov
mov
mov
dec
and
andb
loope
cmp
inc
jne
inc
sbb
fs
addr16
out
push
pop
fisttpl
cmc
rol
jle
fdivrl
cmp
sbb
repz
pusha
pop
rorl
push
rcll
out
xchg
fists
cmpsl
in
pop
push
dec
adc
jg
xor
adc
mov
loope
xor
xadd
mov
outsl
mov
adc
cmp
mov
fdivrl
fiaddl
xor
xor
jge
pop
pop
pop
mov
jge
push
stos
ljmp
shrb
cmpsl
fcoml
lods
out
jo
mov
xor
sbb
cli
mov
and
out
sbb
mov
jo
sub
insl
imul
loop
mov
mov
dec
lret
ficoms
popf
sarb
inc
sarb
fs
out
enter
xor
sub
loop
imul
mov
sahf
inc
push
std
negl
icebp
adc
andb
sahf
and
mov
jecxz
mov
ret
mov
test
cmp
gs
testb
cmp
subb
inc
sbb
xchg
lods
stos
imul
sub
je
mov
mov
xor
icebp
ljmp
mov
cld
pop
or
adc
or
es
push
jge
fsubrp
xchg
sbb
inc
mov
mov
movsl
push
xor
gs
push
sbb
jecxz
jo
fstps
cs
pop
cs
cmp
add
pushf
mov
and
scas
ficompl
xchg
movsl
int3
lahf
push
mov
mov
jbe
shll
loopne
gs
int3
jno
in
mov
or
mov
scas
mov
gs
add
stos
cmp
xlat
insb
std
lock
cs
outsl
outsb
aam
sarb
pop
shrb
mov
rclb
repz
xchg
inc
lcall
cld
nop
mov
adcl
roll
dec
lret
clc
jbe
cmpsb
cmpsb
pop
sarb
ret
and
fisubl
add
popf
pop
push
mov
xchg
jge
inc
fs
mov
mov
push
enter
jmp
imul
dec
mov
fwait
mov
in
jb
inc
ret
out
shll
filds
push
ret
out
and
pop
and
and
clc
shr
and
dec
inc
cltd
lock
mov
xchg
cs
data16
cmp
lods
lods
into
sbb
cmp
cmp
mov
inc
cs
or
push
insl
insl
or
bound
nop
mov
push
cmp
int
jb
jg
cmp
fidivrs
leave
fwait
mov
and
fwait
mov
pop
sub
mov
imul
lret
bound
push
xor
adc
cmp
scas
arpl
dec
sbb
ds
mov
mov
ss
stos
repnz
cmpsb
push
push
fbld
iret
fst
jecxz
mov
mov
jmp
gs
pop
enter
cmp
push
pushf
xor
ret
mov
push
test
and
imul
fisubs
ss
mov
inc
xor
add
mov
mov
push
adcl
gs
out
fildl
imul
insb
aas
aaa
shll
aam
jecxz
push
mov
jb
adc
pop
shlb
mov
add
clc
or
imull
dec
pop
sarl
dec
enter
outsl
std
and
test
pop
js
shlb
add
jp
test
rorb
or
dec
lods
ja
sub
ret
lea
loopne
dec
loopne
sub
cmp
insb
in
jae
mov
xor
ja
jb
outsl
inc
js
pmaddwd
cmp
xchg
fdivrl
add
jge
mov
out
jo
movaps
sbb
cmp
pop
or
pop
rcr
ret
xchg
lods
push
push
mov
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
dec
mov
popa
rcrb
mov
in
stc
fcmove
lcall
mov
pop
rol
xlat
jl
pop
jae
jecxz
pop
es
andl
mov
addb
pushf
icebp
stc
xchg
cmpsl
cmp
push
pcmpeqb
and
movsb
cmc
pop
mov
mov
out
push
movsb
out
cmpb
outsb
fsubl
gs
fmull
das
fisttpl
sbb
cmp
adcb
or
arpl
jnp
insl
add
cli
jecxz
mov
ret
or
inc
aam
push
int3
lret
pop
dec
in
push
iret
xor
mov
xor
or
cwtl
notb
sub
lret
mov
je
stos
repz
fldl
pop
dec
je
dec
aas
loopne
xchg
dec
sbbl
fldt
stos
cli
xchg
mov
jge
pop
mov
outsl
fcoms
loop
cmp
jns
iret
sti
add
imul
xchg
or
sbb
out
adc
pop
aam
dec
cmc
sahf
arpl
stos
in
jbe
addr16
adc
push
mov
outsb
fidivrs
das
mov
loopne
pop
dec
mov
jge
fsubl
mov
sbb
cltd
pop
jecxz
add
sbb
movsl
cltd
iret
lods
xor
pop
out
mov
mov
pop
cmp
jle
mov
pop
jecxz
icebp
rcl
sbb
ja
add
pop
or
mov
jns
mov
jg
mov
daa
or
xchg
mov
sub
pop
repnz
mov
in
xchg
cmp
ja
jne
mov
out
lahf
pop
mov
mov
xchg
add
clc
pop
out
cmp
and
sahf
out
sub
lret
mov
lea
xchg
lret
lods
cwtl
outsb
sbb
loop
push
movd
stos
push
scas
xchg
mov
jecxz
push
cli
sub
scas
sub
lea
movl
test
icebp
sub
hlt
das
mov
imul
ret
int
push
dec
fbstp
jbe
or
push
enter
xor
add
fildll
and
push
test
fs
jnp
mov
jb
and
and
pusha
push
cmpsl
jns
or
push
mov
sub
mov
outsb
or
xchg
ret
inc
ss
jns
cs
outsb
ret
mov
lods
int
mov
cltd
jmp
xor
repz
sub
mov
sbb
and
lahf
push
cmp
popf
inc
mov
inc
sbb
das
sub
xor
fldenv
add
sbb
xor
in
loopne
and
movsl
stc
scas
push
mov
mov
ret
mov
xor
dec
jae
and
insl
clc
mov
jg
lds
sbb
adc
cwtl
in
sbb
popf
pxor
dec
adc
cmpsb
outsl
stos
jp
int
dec
addr16
cmp
sub
imul
cs
sub
jbe
aaa
mov
push
push
inc
jmp
repnz
xor
push
lock
roll
xchg
xor
cmp
test
sahf
xchg
and
popf
xchg
cmp
lahf
mov
icebp
mov
mov
imul
mov
cwtl
mov
sbb
call
xor
lea
loope
aas
dec
adc
mov
xor
cmp
out
repnz
aaa
xor
jne
repz
xor
test
mov
push
or
cmp
in
clc
sbb
lcall
dec
imul
arpl
pop
pusha
imul
pusha
ljmp
out
shrb
xchg
sbb
cmp
in
inc
clc
in
pop
or
lds
or
out
push
adc
dec
or
jge
add
jp
xor
popf
data16
pop
ds
popa
cmp
push
outsb
icebp
push
das
cmp
pop
ret
imul
mov
xor
adc
je
fcmovbe
pop
adc
mov
out
lock
jg
cmp
lock
loope
divb
pop
dec
sbb
sub
out
mov
dec
insb
cmc
ljmp
ss
push
inc
les
mov
jb
mov
dec
dec
mov
mov
push
in
cmp
sbb
mov
repnz
in
dec
push
in
lahf
push
mov
pop
adc
imul
daa
cwtl
call
and
xchg
xchg
mov
xor
or
sub
dec
push
mov
mov
jo
sbb
test
das
sbb
xor
cs
test
mov
cmpsl
movsl
push
push
jp
mov
push
int3
ret
subl
or
clc
sub
adc
and
mov
inc
xor
inc
jg
ja
mul
out
adc
push
daa
subl
mov
xchg
je
adc
xor
mov
cli
push
xor
fnstcw
test
adc
mov
sub
xor
mov
mov
jno
cmp
lret
inc
adc
ljmp
sub
fmulp
xchg
cmp
pop
rcll
mov
sar
mov
mov
bound
push
xchg
ss
mov
and
out
pop
leave
hlt
mov
cmp
cltd
adc
xchg
arpl
out
and
xchg
out
mov
xor
jo
shlb
cmpl
inc
or
movsl
cmp
add
sub
stc
jne
mov
and
push
js
pop
rol
ljmp
into
movsl
mov
dec
dec
jle
sbb
aad
add
sbbl
push
bound
and
cltd
mov
sub
pop
xchg
dec
fstps
sbb
popf
fimuls
mov
push
je
xchg
mov
or
aas
sub
lret
dec
sahf
movsb
in
mov
adc
push
into
repz
insb
pop
jmp
and
into
fcoms
mov
insb
roll
dec
or
mov
sahf
mov
lock
xchg
lahf
dec
xchg
mov
fwait
inc
scas
push
es
in
faddl
lea
das
jo
out
mov
mov
mov
mov
into
nop
jl
cld
ret
cmp
cmpsl
xchg
sahf
lcall
mov
and
mov
shlb
inc
mov
cmpsb
mov
adc
popa
dec
mov
ss
stos
stc
push
push
and
cmp
xor
pop
ret
out
cmp
xor
or
scas
repz
add
aaa
push
lcall
imul
jae
ljmp
idivb
cmpsb
ja
push
push
int3
addr16
or
rcrb
fcoml
pop
rolb
sbb
xor
sbb
inc
sbb
cmp
insb
fwait
inc
push
and
gs
inc
push
mul
dec
adc
loop
sbb
inc
mov
out
es
xchg
outsb
sub
adc
rorb
popa
or
aam
xchg
iret
push
add
ds
lahf
mov
push
fisubl
push
into
inc
ret
pop
adc
enter
shrl
pushf
push
insb
and
in
out
jmp
pop
adc
mov
jl
add
xchg
out
lods
scas
mov
xor
sbb
cmpsl
inc
in
ljmp
icebp
ljmp
sti
fldenv
mov
int
aam
add
xchg
xchg
jl
push
dec
in
or
jns
les
popa
mov
lret
push
or
aam
adc
pop
orl
rclb
sub
inc
fdivp
out
mov
insl
dec
aas
dec
push
adcb
and
mov
loop
dec
inc
outsl
int
leave
imul
aaa
sub
mov
rcrl
mov
adc
sub
or
sub
les
jl
inc
and
mov
inc
xor
jg
push
jg
inc
add
out
jns
stos
data16
rcrl
push
adc
mov
mov
loop
movsb
dec
addr16
and
test
loope
addr16
cmp
sbb
ljmp
out
xchg
in
or
out
inc
es
xor
and
ds
jb
shrb
std
xor
dec
ret
insl
mov
xchg
push
lods
ret
and
sbbl
xchg
and
lret
call
jno
ss
ret
lods
sub
pop
cmp
mov
xor
out
pop
or
nop
adc
pop
sub
cmp
jp
shll
sub
in
call
je
stos
pop
arpl
jge
dec
mov
das
out
stc
inc
add
sbb
or
das
cltd
scas
inc
ja
or
cmp
fs
subb
pop
xor
xchg
pop
jle
hlt
jecxz
push
notb
scas
in
jl
add
xchg
mov
inc
insl
xchg
cmpsl
fistl
repnz
xchg
out
mov
hlt
in
sbb
int
sub
enter
jge
sub
les
stc
ja
pop
test
lods
mov
lds
pop
call
jne
lahf
push
sbb
push
dec
jp
ja
and
fiaddl
fwait
mov
insl
imul
in
push
mov
int
in
lcall
lea
cmpsb
pop
mov
imul
negl
pop
scas
mov
imul
shlb
cmpsb
sub
add
add
and
rorl
and
sub
and
mov
xchg
pop
mov
pop
sub
adc
std
jb
ss
cmc
sub
sbbb
xor
clc
mov
jo
inc
sbb
push
dec
pusha
push
sbb
insb
imul
in
out
out
cli
mov
inc
in
mov
add
push
push
ljmp
jae
cwtl
hlt
mov
fistpl
std
inc
in
mov
inc
leave
mov
mov
lcall
ret
push
inc
xor
xchg
dec
pop
and
pop
xor
jne
fwait
and
loopne
jo
test
sub
out
cwtl
xchg
cmpsl
jno
mov
arpl
jbe
cmpsl
shl
mov
xor
pop
mov
inc
mov
sub
lds
mov
mov
loope
push
mov
or
test
jbe
inc
gs
xor
test
dec
decl
cmp
clc
xchg
clc
jp
push
sub
dec
jmp
inc
dec
pop
and
imul
xchg
inc
pop
mov
divb
testb
mov
pop
lock
mov
loop
icebp
cmp
sub
xlat
fists
mov
and
push
inc
aam
lret
sub
in
addl
inc
stos
pop
fcompl
loope
sub
inc
mov
test
mov
push
shlb
int
sti
movsl
push
xor
inc
sbb
jae
cwtl
jb
xchg
cmc
cltd
xchg
mov
push
xchg
push
movsl
scas
fbld
sbb
int3
push
xchg
fwait
mov
mov
loope
repnz
lock
dec
bound
loope
adc
movsl
dec
jo
pop
loop
dec
aad
sub
gs
in
bound
pop
or
push
adcb
jns
mov
jg
in
stos
subl
jmp
test
jmp
lods
mov
xchg
out
loop
cmp
adc
mov
xchg
xchg
addl
mov
inc
call
fstps
sbb
jp
icebp
in
jmp
pop
dec
notb
adc
fisubrs
stc
fbstp
xchg
lahf
mov
clc
pop
enter
push
jmp
mov
mov
fwait
adc
xchg
or
out
jecxz
jbe
sar
pop
nop
std
cld
cmpsb
xchg
dec
adc
sub
xchg
adc
inc
out
insb
repnz
in
repz
out
and
sarb
mov
insl
int3
pop
and
push
cld
std
orb
cmp
jmp
int
mov
sti
add
inc
aad
push
mov
mov
pop
cmc
push
mov
dec
ja
xchg
mov
xchg
test
mov
in
or
cmp
outsb
pop
out
mov
int
sarl
punpckhdq
in
mov
cmpsl
dec
xchg
mov
push
adc
mov
lods
jp
add
cmp
lock
lea
adc
inc
es
mov
pop
pop
push
add
repnz
gs
fidivl
xor
jno
in
or
ss
pop
pop
push
inc
daa
andl
push
addr16
pop
ficompl
and
push
dec
jge
addr16
cltd
mov
inc
or
aas
xchg
aas
jmp
add
cmp
rorb
adc
add
mov
mov
ss
addr16
push
xchg
sub
call
jge
sbb
jp
lret
daa
lahf
sub
mov
pop
mov
jbe
or
pusha
xchg
cmp
mov
xor
movsl
das
jae
inc
sahf
push
notl
pop
dec
movsb
inc
push
xor
lcall
rolb
daa
mov
test
mov
inc
pop
add
or
in
loop
cmp
pop
push
jmp
mov
adc
filds
lea
repnz
or
mov
pop
adc
out
xchg
xor
xor
xor
in
add
stos
inc
stc
data16
push
dec
fstpl
andb
inc
scas
lock
xchg
mov
or
clc
repnz
push
dec
pop
iret
mov
mov
test
jge
fdivr
fwait
jae
mov
add
sub
std
mov
jne
xchg
rcrl
or
cmpsl
addr16
and
mov
push
push
outsb
jnp
daa
jae
lret
pop
cld
mov
mov
push
sbb
xor
mov
pop
test
jnp
jmp
sbb
inc
dec
xor
into
pop
es
scas
inc
adc
aad
push
mov
mov
test
mov
fisubrl
xchg
daa
scas
dec
imul
loopne
insl
mov
sbb
pop
aas
add
push
add
ror
add
es
mov
xorl
shrb
xor
mov
popf
sar
shll
std
jno
out
mov
scas
jne
and
mov
gs
fiaddl
rolb
mov
js
add
inc
add
and
dec
cmc
imul
sub
or
mov
cmp
jae
jbe
test
adc
add
pop
xchg
mov
inc
icebp
pop
cmp
andl
movsb
xor
sahf
lret
and
insb
repnz
mull
es
sbb
push
dec
outsb
inc
shlb
push
cmp
xor
fistps
pushf
inc
insl
mov
pop
aad
out
xor
jge
mov
sub
push
movl
pop
inc
loope
sbb
inc
aam
ljmp
xor
pop
sbb
jge
push
das
incb
mov
sahf
aad
ds
mov
int3
pop
enter
xor
test
test
adc
pop
js
inc
cmpb
xor
jg
in
ret
cmp
mov
adc
adc
je
ret
dec
movsl
fdivrs
xchg
mov
test
insb
imul
jge
pop
outsl
xor
push
add
fwait
int3
jo
aaa
mov
jb
sbb
movsb
ret
xchg
idiv
adc
add
outsl
add
xchg
and
stos
or
ljmp
daa
adc
inc
stos
xor
jle
inc
cmpsl
shll
insb
call
test
hlt
or
int
imul
mov
fsubs
aaa
aam
dec
cmp
repnz
cmpsb
aam
fildl
push
or
inc
dec
pusha
mov
lods
add
pop
push
cmp
into
pusha
cmp
or
push
jle
mov
hlt
mov
xlat
leave
ja
icebp
pop
lods
ret
imul
jb
mov
cmp
divl
jnp
lea
ds
mov
js
inc
inc
sbb
sbb
mov
pop
stos
xchg
sbb
clc
lods
xchg
add
add
adc
loop
xor
outsb
xorl
scas
jns
mov
push
aaa
rol
call
sub
test
ljmp
jmp
lcall
pcmpgtd
mov
aad
xor
jl
add
enter
mov
scas
negl
sbb
mov
lods
ja
xor
mov
sub
cmpsl
jnp
fiaddl
jge
adc
adc
push
jae
je
pop
dec
sbb
nop
mov
fistl
add
pusha
push
ljmp
scas
les
add
sub
jmp
in
popa
ja
data16
jle
mov
mov
sbb
or
pop
jecxz
mov
and
pop
enter
push
std
mov
inc
shrl
aam
lret
and
test
dec
and
inc
fstpt
addb
mov
xor
inc
sbb
xchg
addr16
push
out
xor
call
xchg
mov
cli
inc
cmp
imul
cmp
lcall
jbe,pn
leave
mov
out
lock
cmpsl
mov
aaa
leave
mov
test
mov
dec
pop
dec
ret
push
lods
cs
cmp
clc
xchg
scas
mov
out
popf
lods
push
rcrl
les
clc
xor
push
push
push
bound
cmp
pop
push
sub
inc
mov
or
sub
adc
aas
mov
push
inc
fcoms
lret
adc
push
cld
mov
jge
or
fistpll
add
ret
fwait
dec
sub
jo
xor
popa
cmovbe
or
xchg
fistpl
mov
out
cmp
outsb
sti
insl
push
movntq
lret
stos
sbb
mov
fucomi
and
mov
sub
sub
loope
jg
lret
or
fs
in
imul
mov
mov
pop
loop
sub
lods
jns
add
pop
mov
cmp
cmpsb
sub
xchg
cld
lret
mov
push
inc
ds
pushf
ret
xchg
call
movsl
and
ljmp
sbb
cmp
fistps
or
mov
sbb
xchg
nop
scas
xchg
mov
jge
je
sub
mov
inc
aaa
mov
fdivl
mov
inc
push
jle
adc
jecxz
jmp
or
icebp
jae
subb
cmp
inc
insl
xchg
cmc
shrl
fsubrp
sub
stos
pop
xor
push
mov
dec
testb
mov
xchg
xor
adc
xor
add
add
jbe
or
cmp
and
clc
shl
push
add
mov
sbb
push
mov
xchg
cltd
push
push
sub
xor
jae
ret
popf
jae
adc
es
test
gs
fidivs
sub
cmp
adc
bound
or
cmpsl
dec
stc
and
addr16
or
jecxz
fidivl
pop
jnp
popa
cld
and
ljmp
pop
or
jge
dec
sub
push
ss
test
mov
inc
pop
sub
push
or
inc
mov
jb
pop
and
movsb
add
test
jl
mov
hlt
lahf
fdivrl
and
dec
dec
and
daa
sbb
lea
or
mov
loop
inc
inc
inc
rolb
ret
ja
push
xchg
mov
lods
out
sub
add
cmp
xlat
push
xchg
mov
cs
cld
pop
push
imul
or
cld
scas
mov
jns
add
pop
xor
cmp
inc
sbb
rcr
pop
cltd
je
xchg
pop
fistps
add
scas
dec
es
fisttpll
test
pop
jae
sub
call
insb
std
push
mov
out
loopne
lret
movsl
jb
iret
push
mov
mov
clc
clc
enter
xchg
pop
push
adc
sbb
insb
addr16
stos
push
adc
cmp
xlat
scas
pusha
loope
and
xchg
cmpsb
ss
xchg
adc
out
cmp
or
loope
sbb
xchg
adc
inc
xlat
scas
ss
pop
mov
bound
mov
sub
test
sbb
mov
mov
daa
and
xchg
pop
cmp
lea
sbb
cmp
xor
jbe
sti
dec
scas
bound
adc
mulb
mov
lcall
movl
scas
ret
rorb
pop
dec
out
sbb
sahf
add
lcall
test
roll
jb
test
roll
test
xchg
cmpsb
lock
xor
mov
pop
mov
outsb
aas
push
jns
loopne
dec
loop
mov
arpl
push
xchg
and
push
dec
xchg
jnp
cmpsl
cmp
mov
sbb
mov
int
adc
pop
dec
jae
std
dec
xchg
int3
and
mov
sarl
lahf
mov
push
cmp
repz
rep
lret
mov
jbe
incl
mov
xchg
push
adcl
cmc
cmpsb
gs
mov
icebp
in
push
sub
js
adc
test
sti
push
jg
sbb
mov
add
in
and
jno
out
push
dec
mov
arpl
cmp
out
jae
loop
jbe
pushl
out
pushl
cmp
inc
in
mov
xor
adc
xor
jp
or
gs
stos
shll
inc
or
xchg
inc
xchg
jle
prefetchnta
or
adc
jmp
loope
mov
cmc
aam
pusha
dec
popf
mov
mov
mov
ljmp
sahf
mov
movsl
daa
scas
stos
jne
add
xchg
jne
icebp
add
ss
lahf
out
out
pop
test
in
or
popf
adc
ss
push
mov
rorl
mov
dec
adc
popa
call
adc
or
jno
inc
mov
test
jbe
icebp
shrl
jmp
push
loopne
add
push
adc
outsb
ljmp
xchg
mov
mov
push
cvtdq2ps
jae
push
dec
mov
mov
es
popa
mov
ja
cmp
add
or
int
cmpxchg
sarb
in
xchg
mov
call
ss
mov
int3
cmp
aad
out
mov
mov
loopne
mov
addb
mov
in
pop
hlt
xor
push
pop
add
jb
bound
adc
sbb
sub
sub
sub
pop
outsl
pop
bound
leave
mov
push
dec
repnz
jp
aam
jne
loope
stc
xchg
sti
lret
into
cmp
mov
rorl
std
lods
lock
sub
or
adc
daa
ds
mov
mov
add
jno
movsb
pop
fprem1
cli
dec
xchg
std
xor
pop
ret
push
xchg
test
ja
mov
push
mov
mov
repnz
add
movsb
adc
adc
roll
ds
lcall
sbb
daa
loopne
fsubrl
fstpt
movsb
inc
icebp
xchg
dec
lods
aam
lods
lcall
mull
or
sub
iret
das
enter
jmp
mov
xor
sahf
es
fisubrs
mov
repz
pop
cmp
mov
lock
jae
out
mov
and
xchg
push
repnz
push
imulb
add
mov
ret
test
mov
add
repz
cmp
pop
ja
cld
jbe
and
xor
push
pop
push
mov
shll
lds
pop
push
in
mov
cld
add
pop
fcoms
mov
pop
lock
dec
gs
fwait
push
add
in
push
xlat
pmulhw
sbb
dec
sub
sbb
mov
addb
ja
aas
adc
std
inc
imul
and
mov
mov
idivl
fs
mov
dec
inc
imul
add
xor
push
repz
xchg
jbe
movsb
mov
insl
iret
mov
adcb
inc
add
mov
mov
rcrb
test
ja
pop
dec
je
aas
xor
push
dec
add
test
test
into
sbb
int
cmp
adc
daa
sub
push
out
mov
inc
insl
mov
sbb
mov
mov
mov
sbb
lock
inc
fldenv
stos
and
xor
idiv
movsb
data16
xchg
cld
push
cld
aam
imul
mov
andl
cmc
outsb
ss
cmp
pop
xor
lods
ljmp
int3
jp
or
mov
adcl
cmpb
ss
push
addl
push
and
cmpl
cmp
pop
xlat
das
dec
fwait
sub
cmp
out
idivl
cmc
xchg
je
dec
sub
outsl
or
loopne
out
movsb
loope
into
imul
mov
dec
punpckldq
ljmp
mov
push
lods
lret
and
dec
flds
jo
rcrb
jle
pop
sbb
in
push
shlb
dec
mov
outsb
loopne
cmp
lock
rorl
cmp
enter
std
pop
pusha
lds
ficomps
subb
xchg
or
push
xchg
aam
or
sub
sbb
adc
pop
adc
lret
rorb
loop
adc
push
jnp
cwtl
dec
xorl
adc
or
xchg
imul
leave
sbb
call
daa
cmpsb
nop
ds
mov
fwait
jmp
sub
jb
mov
mov
mov
jmp
test
mov
out
sbb
ds
les
mov
adc
pop
lret
xchg
push
data16
cmp
mov
loope
sub
icebp
push
das
sahf
pop
pop
lds
ss
lret
je
xor
aad
in
fadds
ffreep
pop
dec
std
test
fadd
les
inc
ds
addl
jecxz
xor
jecxz
inc
cmp
ja
sbb
fnsave
rclb
lods
nop
sahf
push
gs
inc
loop
dec
aaa
in
or
or
mov
adc
add
cmp
fisubl
pop
xor
add
leave
jp
into
adc
mov
in
push
cmp
xor
lret
cmp
dec
or
inc
nop
pop
push
fcoml
mov
jns
stc
es
push
out
pop
lahf
and
daa
pop
out
mov
ss
push
dec
int
jo
stc
mov
repnz
mov
shrl
push
loope
xchg
push
aaa
into
mov
jo
jns
push
cmp
sub
mov
lods
or
and
inc
jnp
repnz
nop
into
cmp
int
fisttps
pop
xlat
cmp
xor
pop
lret
leave
and
mov
inc
sti
mov
and
dec
das
nop
std
and
xchg
pop
adc
lea
pop
push
pop
inc
cmp
outsb
lret
add
xchg
sarl
or
cmp
pop
cmp
sub
stos
add
add
mov
insl
xor
ds
cltd
adc
je
xchg
sub
jnp
jae
test
rcr
js
lods
aaa
xchg
pop
or
push
iret
ds
pusha
cmpsl
cli
xor
pop
and
xor
ja
dec
cmp
lea
scas
inc
mov
fimuls
iret
inc
int3
sub
lret
push
cmpsl
mov
test
xor
call
popf
pop
xchg
sub
sbb
cli
and
scas
add
dec
cmp
xchg
xorb
into
aaa
xchg
xchg
xor
aaa
gs
push
mov
int3
add
adc
and
mov
outsb
pop
pop
push
notb
mov
xchg
pop
imul
dec
xchg
jnp
repz
pushf
xor
cwtl
jle
popa
sbb
sbb
cltd
aaa
lcall
test
sbb
stos
aaa
leave
test
cltd
mov
mov
jne
sub
scas
mov
pop
cmp
xchg
in
mov
jo
cwtl
jne
test
xchg
fcomip
xchg
jmp
lock
cmp
pop
sbbl
push
jge
sbb
cmc
mov
stos
es
xchg
mov
hlt
pop
sub
cmpsb
lret
in
imul
arpl
gs
sub
cmpl
mov
stos
pop
ja
mov
mull
xor
hlt
in
sub
sbb
hlt
sbb
xor
or
jmp
mov
enter
sub
jae
lcall
enter
add
sub
call
sub
mov
aas
xor
out
scas
fisttpll
icebp
enter
fisttpll
mov
cmp
out
cmpsb
mov
cwtl
inc
cmp
lcall
es
jnp
fstps
and
mov
cmp
dec
adcb
pop
xor
dec
fadd
scas
cmp
loop
pop
pop
mov
or
mov
xchg
push
and
pop
repz
pop
jmp
sarl
loop
aaa
fwait
mov
pop
mov
xchg
std
inc
lret
out
das
scas
stos
cs
cmpsb
dec
call
dec
xchg
popf
stos
pop
mov
cld
inc
or
xor
stos
xor
sti
mov
add
and
push
call
xchg
inc
or
mov
mov
lods
cmc
setg
cmp
cmp
lcall
jne
ret
cld
xor
mov
test
fmuls
cmp
pop
mov
popa
scas
rcll
mov
jmp
ds
pushl
sub
mov
filds
data16
cmpsb
inc
cli
andl
add
pop
inc
into
push
sub
xchg
pop
cmp
adc
sub
mov
add
es
shlb
xchg
inc
jmp
add
mov
sarl
inc
pop
cmpsb
and
jns
mov
push
roll
jae
xor
jae
shrb
sbb
mov
sarb
fucomi
jmp
mov
push
ljmp
mov
push
hlt
mov
popf
add
cmpsl
sarb
adc
sbb
cwtl
xor
imul
mov
jne
push
push
mov
dec
sbb
popa
cmp
sub
xchg
pop
mov
ljmp
stc
inc
inc
dec
in
mov
rcl
sbb
out
pop
test
cmp
push
or
jecxz
jmp
jbe
mov
cmp
sbbb
fs
or
in
and
push
jne
insb
mov
lcall
idivl
pop
call
sub
push
xlat
out
fstpl
inc
dec
jp
mov
ljmp
sti
stc
test
std
movsl
je
int3
dec
and
adc
jl
fstps
push
cltd
adc
sub
cld
mov
fdivrs
rorb
fildll
out
inc
push
jge
or
aas
jo
xlat
insl
push
aaa
stos
mov
mov
pop
mov
insl
or
daa
or
iret
sbb
pop
cmp
or
and
xchg
daa
rcll
shll
std
sub
dec
xor
dec
sbb
xchg
push
hlt
or
push
test
outsb
out
dec
add
outsb
inc
dec
scas
ret
adc
xor
es
lds
inc
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
insl
push
and
pop
bound
call
or
outsl
jb
push
add
fmuls
mov
shrd
fildll
add
adc
rcrl
fldcw
das
jns
je
outsl
or
mov
out
xor
clc
fsubrs
aam
repz
sbb
sub
sbb
cs
add
lret
adc
mov
adc
or
xor
outsb
insb
adc
add
lret
inc
pop
fwait
es
mov
cmp
outsb
or
xor
xor
cli
lret
lock
xor
or
int
or
fdivs
or
jb
mov
std
pop
pop
mov
pop
sarl
sti
add
inc
add
jl
xchg
dec
loopne
aaa
jmp
jecxz
add
jmp
and
rcrb
movsb
xor
lock
push
cmpsb
or
imul
jno
jns
push
daa
jle
pop
lcall
insb
jle
jo
fwait
push
lcall
in
mov
sbb
jl
jge
adc
inc
jno
lea
sub
ljmp
es
cli
stc
test
icebp
mov
es
mov
adc
es
push
sbbb
pusha
jno
adc
jo
adc
sub
dec
mov
mov
or
mov
sub
enter
cmp
mov
push
fstl
and
jno
xor
outsl
sar
adc
shlb
mov
std
movsb
pop
mov
sbb
addb
or
jg
adc
cmc
cli
insl
jne
or
test
and
dec
push
jecxz
fdivrs
push
movsl
cmp
inc
scas
jg
jle
std
mov
pop
aad
xor
push
xchg
in
pop
sub
ljmp
nop
std
add
imul
sbb
sub
xor
out
jmp
mov
dec
add
stos
mov
aaa
sub
or
sub
inc
shlb
cmp
dec
push
mov
sbb
cmp
cli
push
inc
outsl
xor
mov
mov
fimuls
ds
xor
mov
in
xchg
or
xchg
xchg
xor
enter
xchg
outsb
mov
adc
loopne
inc
pop
outsb
repz
cld
rcrb
insl
and
gs
xchg
jge
mov
dec
mov
test
repnz
out
rorl
scas
loopne
gs
mov
enter
xor
arpl
lcall
mov
cmp
xchg
and
imul
mov
ljmp
pmulhuw
ds
test
ljmp
cli
mulb
cmpsl
mov
into
push
fsts
jbe
adc
dec
mov
pop
icebp
dec
cmp
push
stc
clc
xor
enter
pop
mov
inc
shll
add
dec
mov
cmp
sbb
xor
push
mov
sahf
mov
imul
jns
fstpl
not
add
mov
leave
jp
out
push
loop
and
xchg
inc
mov
movsb
pop
out
data16
and
inc
cmp
aam
cmpl
jecxz
mov
push
inc
and
adc
pop
push
pop
notl
adc
or
aaa
or
adc
test
push
fildl
pushf
dec
or
xor
movl
xor
cmp
mov
loop
cli
scas
lods
and
xchg
cmc
stos
pop
pop
sbb
adc
jbe
sahf
xor
mov
push
push
aam
fs
cli
lret
idiv
xchg
ljmp
pop
jp
push
bnd
jnp
aad
pop
out
addr16
imul
clc
lea
add
sub
dec
sub
outsb
dec
xchg
enter
fidivrs
je
jge
ss
out
test
jp
dec
mov
roll
or
mov
sub
cmp
jno
dec
jecxz
call
mov
cmpb
sub
inc
les
pop
in
loop
and
mov
notb
bound
call
jmp
sub
mov
ss
add
daa
enter
mov
aam
dec
sbb
mov
insb
or
jl
mov
lret
cmp
test
and
je
push
add
add
xchg
and
xlat
or
xchg
mov
pop
ds
sub
adc
mov
push
xchg
inc
imul
inc
stc
jmp
jl
int
xchg
jg
jg
mov
jbe
and
shlb
repnz
pop
cmpsb
add
imul
dec
xchg
ljmp
sub
pop
jbe
push
mov
xchg
in
mov
push
popa
loopne
movsb
or
inc
cmpsb
inc
mov
jl
mov
lret
lock
jg
add
filds
dec
dec
mov
mov
sti
cmpl
inc
jbe
decl
inc
or
add
push
or
shlb
adc
push
fldt
mov
in
subl
push
xlat
lods
push
jp
int3
insl
push
aam
stos
sbb
adc
popa
lods
mov
inc
dec
les
mov
ret
dec
sub
sbbl
popf
fstps
fidivl
adc
fsubl
aam
add
shlb
mov
jle
ds
sub
xor
dec
outsb
adc
xchg
fists
aad
orb
push
or
adc
mov
mov
jle
fildll
adcl
loope
test
sub
bound
fidivrs
fidivs
mov
add
push
fidivrs
cmp
dec
fs
dec
mov
data16
fisubrl
pop
loop
adc
repnz
inc
jne
aam
mov
mov
and
in
sarb
push
nop
test
and
push
enter
mov
out
inc
shlb
frstor
int3
pop
stos
cmp
int3
test
aam
cli
add
mov
cmp
pop
adc
jnp
cld
lds
adc
push
push
jecxz
dec
je
dec
mov
leave
xor
mov
jmp
add
jo
jb
mov
movsl
pop
push
add
mov
jle
es
and
mov
and
sahf
test
xorb
std
stc
push
int
push
mov
and
adcb
aam
cmp
jg
dec
clc
fwait
test
rcr
adc
leave
sti
outsb
jmp
pop
imull
test
test
fisubrl
inc
sbb
pop
mul
les
adc
leave
dec
jmp
in
jns
shll
sarl
adc
out
js
aas
cli
pop
and
orl
mov
inc
es
or
int3
hlt
push
es
xchg
sbb
lret
in
popa
xchg
cmp
movsl
jbe
jp
dec
lock
js
inc
mov
xchg
std
pusha
lahf
insb
lods
push
mov
popa
jmp
sbb
insb
fnstenv
adc
and
push
js
xorl
adc
mov
cltd
dec
jmp
cmp
and
in
jge
mov
jp
jae
lret
mov
xor
pcmpeqw
push
jno
sub
dec
mov
pop
lcall
sbb
inc
mov
cmpsb
xor
jb
ret
jle
ret
pop
fldl
or
add
mov
or
mov
xchg
mov
mov
stos
cld
and
cmpsl
lods
cmp
push
cwtl
clc
dec
outsb
push
sbb
lock
ds
daa
and
xlat
push
or
pop
push
dec
sub
in
cwtl
push
mov
lahf
aaa
pop
sbb
cli
pop
inc
ss
jmp
sub
jecxz
xlat
push
jecxz
test
push
pop
dec
daa
push
and
lahf
adc
mov
xor
push
pop
clc
push
jecxz
jne
mov
mov
jae
adc
bound
inc
outsl
mov
mov
sbb
adc
stc
add
fmuls
mov
fs
push
fstpt
loopne
enter
jecxz
pop
add
sub
inc
call
cmp
gs
add
in
add
pop
sub
lods
sbb
loope
adc
jmp
sbb
loope
rcr
in
sahf
mov
popf
rorl
jnp
jp
add
mov
dec
push
mov
mov
adc
sbb
sub
gs
dec
loop
popa
inc
mov
je
jp
dec
push
ret
out
dec
dec
ds
jle
push
jge
ljmp
andl
mov
push
lcall
mov
inc
pop
add
lahf
leave
adc
xlat
lock
push
sub
jle
mov
stos
mov
mov
aas
inc
or
jne
sbbb
xchg
sub
adc
inc
xor
loope
and
fs
scas
push
movsl
call
xor
dec
sbb
xor
shr
inc
cmpsb
sbb
and
clc
lea
inc
or
mov
add
pop
push
cmp
pusha
push
lret
js
xchg
ds
ljmp
dec
dec
in
test
ss
mov
adc
inc
and
pop
les
subb
mov
roll
or
iret
fcmovnbe
cmp
inc
inc
imul
adc
mov
sub
rclb
movsl
lods
inc
mov
sbb
popa
test
push
jns
mov
mov
ficoml
leave
jp
pop
cmp
test
addr16
dec
ds
lea
inc
adc
sub
cli
and
icebp
sbb
push
mov
cmp
dec
inc
mov
movsb
sbb
cmp
sarl
sbb
xor
fidivl
dec
add
jns
sub
cmp
push
jmp
push
dec
aas
ja
pop
cmc
pusha
popa
pusha
sub
sarl
add
cmpsb
pushf
lds
fwait
insb
inc
mov
repnz
add
imul
ds
in
add
negb
inc
jno
mov
imul
fucomi
es
call
dec
sbb
mov
aam
dec
jl
or
push
dec
les
dec
push
mov
and
push
aas
hlt
and
repz
jb
sub
mov
pop
xor
dec
push
cwtl
lret
loop
inc
test
lods
cwtl
sub
sahf
mov
out
jbe
jge
jmp
push
fldenv
or
scas
imul
aas
mov
mov
fildl
aas
cmp
add
mov
jge
lahf
xchg
cmpsl
in
nop
ds
stos
xchg
sbb
jns
xchg
andl
mov
sbb
and
test
lock
jb
mov
int3
cs
clc
pusha
pop
es
sbb
lea
movsl
addr16
sbb
pusha
loope
mov
push
lea
lods
loopne
cmp
and
test
cmc
dec
and
imul
insl
mov
push
jecxz
xchg
xchg
mov
mov
es
or
xor
and
add
mov
fisttps
adc
stos
cmc
sbb
test
push
add
xor
sbb
push
or
sbb
and
and
lret
arpl
ret
jl
pop
stc
push
ds
cmp
or
arpl
push
enter
pop
cmp
in
mov
daa
mov
jns
push
sbb
sbb
jp
jo,pt
fisttpll
inc
subl
jb
add
fstps
outsl
cmp
jb
les
cmp
sub
mov
outsl
pop
add
inc
pop
enter
outsl
and
and
out
jo
xchg
dec
push
mov
fdivrl
aaa
fnstsw
push
xor
jno
sub
cmp
push
in
add
add
aas
or
popa
or
or
inc
ss
lret
shlb
int3
lds
sbb
mov
mov
and
pop
int3
popa
cmp
arpl
mov
icebp
iret
jmp
push
lahf
adc
test
movsl
out
lcall
mov
cld
fsubrl
es
or
mov
dec
xchg
js
add
sahf
ljmp
dec
xor
scas
xchg
xchg
push
xchg
imul
mov
js
jne
add
mov
jmp
mov
push
das
cmp
pop
mov
movsl
pop
xchg
xchg
aad
push
adc
inc
pop
loopne
add
inc
xchg
jle
rorb
sub
popf
or
mov
aaa
add
ljmp
roll
ljmp
mov
stos
cmpsl
xchg
pop
xor
jp
rol
xchg
or
popf
dec
les
adc
adc
lcall
neg
jnp
and
cld
and
lret
mov
cmp
popf
adc
inc
fwait
jb
jmp
call
mov
and
mov
addr16
push
mov
add
out
xor
popa
mov
or
sbb
sbb
dec
cld
cmp
mov
sub
lret
sbb
mov
mov
pop
mov
fstpl
add
dec
or
adc
inc
adcb
dec
mov
xchg
push
mov
ss
pop
adc
push
aas
push
imul
xchg
cmpsb
mov
add
push
jo
dec
mov
imul
lods
sbbb
popa
orb
xor
xor
adc
test
and
pop
push
dec
pop
mov
xor
addr16
mov
movsb
insl
push
into
inc
and
movsl
adc
inc
ds
push
fiaddl
mov
mov
popa
adc
dec
arpl
idivb
mov
mov
inc
inc
cwtl
lcall
sbbb
mov
and
std
jno
cmp
adc
cmp
xor
into
aad
sbbb
cmp
ja
xor
es
imul
xchg
inc
cmp
flds
jo
aaa
lock
movsb
lahf
mov
cltd
inc
pop
aaa
int3
scas
nop
dec
mov
loopne
inc
sbb
shll
adc
xor
push
cwtl
mov
js
in
aad
fisubl
dec
pop
out
imul
pandn
hlt
gs
jb
cmp
xchg
pop
nop
fwait
scas
xor
pop
push
andl
loopne
movsl
mov
das
outsl
test
dec
pop
pop
adc
and
imul
mov
xchg
pop
pop
lret
sbb
push
out
mov
aam
sti
push
dec
jmp
insb
or
outsb
add
fbstp
xchg
xlat
nop
jb
pop
xor
loope
add
jg
rolb
ljmp
push
aas
mov
fdivr
mov
notl
dec
fiaddl
dec
fildl
test
and
cltd
clc
inc
iret
cwtl
rcrl
push
push
loope
fmuls
adc
pop
and
xchg
sub
or
xor
andl
outsb
mov
lret
push
mov
cmp
jp
jle
xor
sbb
movsl
push
mov
mov
or
cli
int
ss
shl
push
mov
ret
cmp
in
ss
xchg
adc
dec
push
adc
dec
inc
scas
cld
cmpsb
lahf
out
add
outsl
js
xchg
addr16
jo
jnp
cltd
gs
adc
lock
adc
xor
xchg
push
push
xchg
dec
mov
jp
inc
imul
mov
jle
mov
out
mov
inc
mov
repnz
loop
clc
mov
or
cmp
pop
test
jecxz
mov
mov
rcll
test
jge
xor
cmpsl
ret
es
xlat
dec
clc
mov
and
inc
and
data16
xchg
shr
int3
push
je
jns
sub
int3
lods
aaa
bound
xchg
jb
xchg
hlt
loope
dec
push
rcrb
imul
rcrl
push
xlat
cmp
sahf
rorb
push
es
notb
fisttpl
mov
loope
in
push
out
and
int
add
inc
and
mov
stos
push
add
or
outsb
mov
imul
ljmp
rolb
dec
fwait
push
jbe
xor
jmp
aas
sub
sub
mov
scas
bound
test
add
or
call
xchg
je
subb
jecxz
dec
dec
addl
xchg
mov
loopne
cmp
and
iret
fwait
enter
or
sbb
out
repz
and
pop
xchg
test
push
movb
cmp
lret
dec
mov
sbb
adc
aad
fmuls
aam
pop
inc
popf
ror
push
mov
dec
outsb
subb
pop
out
inc
aad
inc
jbe
shrb
mov
inc
ljmp
inc
loop
pop
lods
push
sbb
sub
push
cmc
sahf
sbb
mov
in
scas
mov
cmp
add
mov
fxch
out
inc
and
iret
inc
xor
das
daa
imul
sbbl
lods
inc
aaa
inc
pop
shlb
inc
sub
jl
push
clc
push
vpsrad
cld
or
call
repz
test
and
mov
sbbb
sub
daa
push
std
in
pop
loope
in
jns
into
push
cmc
sbb
jae
jmp
gs
sub
in
ret
mov
xchg
xbegin
mov
ljmp
mov
ret
add
cmp
fdivs
test
pop
mov
test
sub
aas
pop
dec
outsl
lahf
aam
sbb
add
out
mov
xchg
in
pop
mov
pop
ret
in
mov
pop
lods
clc
lods
nop
xchg
repnz
mov
ljmp
xor
xchg
add
fdiv
outsl
jns
cmp
dec
xchg
xlat
rolb
fcmovbe
cmp
jl
pop
test
fistl
es
jl
movsl
ja
add
pop
rol
fstpt
push
xchg
inc
in
into
fldcw
dec
jl
outsl
outsl
xchg
out
pop
lds
or
fildl
pop
mov
mov
movsl
cmpsl
cmp
ret
or
cmp
test
out
mov
in
sub
or
pop
test
adc
xor
mov
jp
inc
popf
out
insl
cmp
pusha
cld
push
ds
test
stos
xor
gs
int
fisubrl
pop
or
fldt
pop
lret
mov
lahf
add
cld
sbbb
xor
adc
sbb
add
sbb
mov
and
jns
sbb
mov
ja
sbb
sbb
xchg
bound
sarb
cmpsl
imul
add
xor
pop
and
add
jb
mov
sub
inc
adc
repz
push
dec
or
std
ljmp
out
mov
and
movsb
fs
sub
movb
dec
push
popa
jne
fs
cmpsl
in
cmp
int3
sbb
shrb
fcmovnbe
jmp
out
inc
inc
mov
sub
mov
xlat
add
aad
lret
jne
in
cld
sarb
cs
xor
lock
dec
aad
test
and
sub
punpckldq
cmp
push
mov
enter
mov
mov
sbb
dec
push
adc
inc
jecxz
test
jo
out
fwait
dec
xor
cmc
mov
fcmovnb
rclb
pop
mov
or
movsl
jns
gs
inc
inc
bnd
addr16
or
xlat
mov
jle
pop
pop
test
add
or
mov
mov
test
lods
pop
and
mov
out
lret
add
or
dec
ror
and
ret
ja
test
out
fldenv
in
cmp
pop
aam
cmpsl
sbb
push
sbb
or
cmp
jge
inc
push
int
and
adc
mov
je
test
inc
stos
mov
xchg
xor
out
loop
sub
push
fistps
push
aad
mov
nop
jbe
and
mov
insb
xchg
xchg
les
fldcw
push
imul
stos
mov
les
xchg
mov
pop
loopne
push
add
mov
xchg
sub
mov
sbb
rorl
ja
int
xchg
and
push
dec
insl
rorb
and
scas
insb
jp
adc
adc
mov
jb
adc
mov
stos
mov
jge
movsl
or
pop
aas
mov
inc
inc
cmp
dec
xchg
pop
mov
jo
gs
mov
push
sub
pop
xor
cmp
cmp
add
dec
addl
ss
sahf
aaa
and
pop
mov
call
inc
out
or
lods
add
mov
pop
jle
rorl
fwait
shlb
xor
lret
imulb
inc
or
rolb
push
fildll
testl
cld
mov
stos
je
in
mov
adc
out
ja
jo
pop
adc
outsl
sub
xchg
arpl
js
addr16
cmp
dec
stc
ret
mov
je
xor
ja
cmpsl
inc
lcall
daa
cli
push
xchg
xchg
jg
das
sbb
jl
lcall
cmp
inc
cmp
call
scas
xchg
jo
mov
xorb
bound
js
arpl
and
xchg
mov
xchg
orb
popf
push
cmpsl
out
jg
vpmullw
jb
icebp
nop
dec
lds
sub
lahf
xor
out
movsb
addr16
aas
sbb
ja
jmp
sub
inc
imul
std
scas
imul
mov
imul
lea
xchg
xor
or
arpl
inc
jno
mov
fcoms
shrb
out
pushf
or
push
xchg
shlw
mov
sub
fbld
xchg
lods
cs
sub
push
push
fwait
xor
ret
addr16
mov
mov
jle
sub
ret
dec
cmp
dec
cli
dec
cmp
dec
cltd
add
xorb
lea
add
jne
jb
sbb
test
sub
clc
jne
fistl
xchg
dec
or
inc
rcrl
xchg
mov
mov
sub
repnz
mov
cmp
divb
or
mov
inc
adc
and
sub
fsubl
lods
push
shrb
popa
mov
in
iret
cmp
popf
movsl
sub
mov
pop
and
xor
into
cmp
popa
sahf
into
mov
add
push
test
insb
cmpsb
push
daa
movsb
jmp
popf
mov
and
aas
adc
stos
jle
pop
mov
sbb
ficoml
gs
or
iret
xchg
jae
into
add
shl
stos
dec
loope
ficoml
in
inc
pop
stos
sub
rcrb
push
std
into
jae
push
sbb
repz
mov
add
mov
xchg
mov
or
cli
test
addr16
insl
sub
add
into
movups
xchg
sbb
das
add
push
add
pop
fs
pop
popf
push
push
xchg
sub
xor
cld
and
mov
mov
ss
arpl
or
sbb
enter
mov
push
sub
cmpxchg
inc
adc
js
cli
orl
mov
mov
xchg
mov
or
call
leave
inc
cmpsl
sbb
in
outsb
nop
mov
cmc
cmpps
aam
xor
and
xchg
cmp
mov
pop
stos
dec
add
aaa
jb
gs
mov
cld
add
lds
das
ss
inc
mov
pop
test
ret
ds
jmp
inc
stc
jns
sbb
jne
or
lahf
outsl
js
sub
mov
jb
int3
imul
nop
sub
add
sub
movsb
pop
pop
fsubrs
jns
into
bound
mov
inc
sub
rcrl
add
or
shll
xchg
push
ror
sub
xor
outsb
xor
nop
iret
inc
fsts
inc
push
push
and
data16
cwtl
inc
adc
xor
lahf
xor
enter
leave
xor
pop
sub
sti
ja
imul
or
cwtl
sbb
mov
jnp
call
ret
insb
jmp
inc
cmp
jbe
adc
fdivrl
vpand
dec
rep
test
mov
push
inc
or
jb
mov
and
std
xlat
das
jno
out
movsb
lods
test
loope
stos
nop
clc
adc
mov
jne
pushf
jno
push
pop
pop
dec
cmpsb
aad
adc
pusha
jb
inc
cmpsb
mov
pop
mov
xchg
rcrl
xor
mov
jl
out
sbb
xlat
arpl
add
pop
inc
jae
movsb
insl
inc
pop
lods
pop
mov
jno
mov
out
jecxz
rcr
inc
sbb
cwtl
pusha
rcll
hlt
inc
xchg
push
bound
cmp
out
pop
adc
pop
jecxz
mov
or
or
mov
cli
sbb
lea
inc
push
and
jno
int3
add
sub
repnz
test
add
adc
sti
mov
pop
inc
mov
leave
clc
fldt
lret
push
jge
push
lahf
fcmovnu
push
stos
jns
xor
add
fs
add
dec
or
lock
push
in
call
sbb
xchg
idivl
or
jns
adc
rolb
push
in
aaa
mov
jmp
pop
in
lock
dec
inc
sbb
call
arpl
inc
gs
clc
mov
push
sbbb
and
and
mov
in
push
cmpsb
andb
mov
insl
pop
cmp
lock
cmp
les
div
sbb
int
iret
inc
ja
popf
and
rorl
and
jo
aam
loope
xor
jbe
push
jecxz
add
icebp
xor
or
aad
push
mov
data16
mov
push
xchg
jo
push
or
push
mov
xchg
scas
fildll
push
inc
jno
inc
mov
sbb
int
icebp
push
jg
adc
les
loop
dec
pushf
lds
loope
xor
mov
pop
ret
addr16
cltd
lods
push
in
lahf
fidivrl
sbb
sub
jle
cmp
enter
in
cmp
xchg
lea
not
sti
ret
mov
xchg
inc
jbe
sbb
mov
scas
imul
cltd
pop
inc
stos
je
aam
push
shl
push
iret
stc
or
adcb
adc
mov
add
mov
mov
sub
or
insb
xchg
xchg
test
test
pushf
or
sbb
push
push
pop
test
push
hlt
int3
paddb
fsincos
cmpsb
pop
cli
mov
int3
mov
xchg
shll
aaa
fisubrs
inc
xchg
push
iret
mov
dec
iret
inc
jb
dec
fsubs
lds
mov
jae
xchg
ja
mov
or
push
mov
or
loop
and
loopne
jno
outsb
nop
addr16
dec
sub
mov
int3
jnp
cmp
ja
inc
idiv
sub
lods
dec
lods
sbb
mov
mov
jp
pop
push
push
shlb
fidivrl
add
push
xor
addb
jecxz
or
cmp
or
scas
and
pop
jnp
xorl
and
jg
pop
sub
fdiv
in
clc
mov
lods
pop
ljmp
stc
xchg
movsb
adcb
mov
push
fdivs
lds
pop
jge
adc
les
fidivrl
das
js
out
add
lret
or
mov
or
jbe
adc
mov
jg
lret
gs
jns
jl
outsl
fcomps
movsl
xor
jb
cli
imul
lods
nop
nop
pop
pop
roll
sub
xchg
or
out
loopne
pop
iret
in
pushl
ljmp
ds
mov
jae
inc
and
or
jp
lahf
mov
shl
bound
push
aas
dec
sub
rdpmc
cmp
mov
sti
cmp
add
inc
mov
jl
lea
stc
aad
or
popl
into
les
imull
xor
push
push
nop
jle
xchg
xchg
out
mov
ss
jns
fucomi
push
cmp
aam
sub
push
or
sahf
cwtl
add
jmp
dec
pushf
sub
push
fiadds
add
popf
mov
pop
xchg
movmskps
and
or
push
mov
mov
loop
xchg
push
cmpl
mov
fs
dec
sub
movsl
dec
push
jp
and
cltd
lods
lea
xchg
xchg
out
std
mov
adc
jno
pushl
insl
sahf
jb
pusha
mov
push
mov
inc
ljmp
ror
mov
pop
xchg
dec
imul
add
push
push
jg
mov
insl
mov
jns
fdivrl
adc
inc
rcrl
jmp
mov
xor
dec
add
inc
movlps
xchg
out
sarl
daa
sub
lret
cmp
leave
xorb
adc
or
pop
fwait
dec
mov
mov
ret
mov
jmp
test
sbb
cmp
push
test
hlt
adc
enter
lcall
aaa
add
dec
push
jno
loope
adc
and
mov
ret
int
and
jg
repnz
and
std
imul
int3
mov
adc
add
movsb
ljmp
pop
adc
mov
aas
in
inc
inc
mov
aam
test
jmp
jmp
add
addr16
rcll
cltd
mov
aaa
xor
or
minps
adc
mov
in
and
daa
adc
mov
shl
shll
in
fs
xor
push
pop
stos
jp
pop
sarl
je
add
mov
push
mov
pop
dec
add
cmpsl
adcb
stos
inc
cmp
push
or
push
loopne
stos
out
movsb
xor
xchg
cs
ss
inc
cmpsb
jl
sub
aam
adc
loopne
mov
adc
add
mov
sbb
jmp
in
pop
nop
add
push
jns
and
lret
sub
jmp
sub
xchg
mov
push
int3
mov
xor
nop
sbb
xor
aaa
xchg
inc
mov
loopne
jp
sub
mov
sub
xchg
cmpsl
xchg
dec
or
scas
ljmp
repnz
cmc
stos
mov
loop
pop
ret
jle
lret
push
pop
inc
retw
out
ja
cmp
fs
fcomi
fbld
dec
xor
add
jmp
adcl
outsl
push
push
repnz
ljmp
das
pop
dec
loope
bound
inc
adcl
add
out
xchg
xchg
cmp
add
pop
iret
cmp
in
insl
sub
fstpl
and
imul
lahf
fnstenv
sbb
fs
scas
cmp
ds
iret
xlat
lods
mov
mov
mov
jnp
dec
push
inc
inc
loope
mov
dec
dec
fucomi
mov
popa
mov
push
leave
mov
and
dec
inc
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
push
and
popa
bound
bound
or
pop
inc
lret
scas
mov
jbe
imul
push
mov
and
sub
mov
mov
ja
shr
sti
add
scas
ljmp
repnz
cmp
push
adc
mov
sbb
adc
xlat
sbb
pushf
cmpb
loop
xchg
test
mov
mov
rdpmc
or
mov
push
push
mov
sbb
xor
dec
xchg
lock
clc
mov
into
cmp
and
div
sbb
js
in
test
sbbl
cmpsl
xor
mov
sub
inc
dec
sub
fs
mov
and
sbb
imul
sbb
pop
sbb
push
in
ss
fidivrs
or
sbb
push
mov
pop
jp
ljmp
adc
addl
std
leave
stc
icebp
jl
movsb
inc
cmp
sub
xlat
int3
sbb
add
lods
aad
clc
fisttps
ljmp
add
mov
mov
pop
imul
xchg
scas
out
jnp
fs
in
sub
inc
je
nop
sub
rolb
aam
cmp
xor
mov
xchg
scas
js
hlt
movsl
pop
and
out
cmp
test
sbb
sahf
jno
andl
cmp
xor
iret
push
movsl
adc
adc
adc
pop
stos
inc
cmpsl
arpl
and
jle
es
add
loop
add
daa
div
lods
xchg
jecxz
adc
xchg
pop
in
mov
es
mov
ret
cltd
mov
insl
push
ret
jo
fwait
test
inc
loop
jo
nop
jge
shll
xchg
and
cwtl
and
cli
mov
push
xchg
mov
rorl
pushf
sbb
sbb
movsl
xlat
test
and
cmp
jmp
xor
inc
xor
mov
daa
fisubl
lret
pop
in
insb
sbb
and
cli
adc
lret
aad
mov
ss
push
pop
out
sahf
and
out
ror
push
pop
xchg
and
or
repz
jo
cmpsl
push
push
add
mov
ds
mov
jle
mov
loop
and
inc
out
mov
adc
gs
dec
cmpsl
into
jb
mov
xlat
cmc
lcall
imul
push
or
or
frstor
and
stc
ljmp
cmp
push
push
adc
dec
int
lock
cwtl
cmp
test
out
jecxz
clc
in
cwtl
sbb
in
in
out
add
jge
jbe
pop
mov
mov
adcl
sub
adc
vshufps
loopne
daa
mov
lods
xchg
push
ret
jl
jno
mov
push
adc
scas
ret
cmpb
out
popf
sahf
mov
dec
pop
test
dec
lds
or
xchg
or
push
cmpb
cmc
movsb
stc
imul
shll
jge
gs
inc
rcrl
iret
into
inc
mov
sub
mov
xor
mov
dec
cwtl
stos
dec
popf
add
sub
cmc
mov
jg
roll
scas
adc
cmp
test
es
addl
outsb
fwait
js
aad
adc
cmp
pop
mov
sbb
jns
ds
push
cmc
xor
inc
mov
push
movsl
aaa
test
setbe
sbb
out
out
pop
xchg
js
inc
rcrl
mov
and
arpl
icebp
xchg
mov
in
es
loopne
out
pop
push
fwait
repz
xlat
repnz
decl
push
insb
hlt
std
jnp
es
sub
adc
pop
into
fsubrs
bound
inc
test
lods
movsb
add
test
add
and
add
inc
push
jnp
sub
jle
cltd
adc
gs
mov
int
mov
test
icebp
sahf
push
jne
out
call
xchg
and
inc
mov
fs
sub
adc
mov
sub
or
cmp
sub
push
out
popa
inc
add
jmp
loope
test
cmp
cmp
inc
int3
mov
cmp
imul
imul
sbb
clc
add
cwtl
imul
pop
jo
sub
lret
cli
lcall
popa
fimuls
push
xchg
sub
test
dec
lods
push
or
xor
and
jae
push
mov
sti
adc
pop
loopne
xor
push
xor
leave
xchg
ja
or
xchg
mov
pop
add
scas
mov
xchg
neg
inc
and
stos
jecxz
lock
and
jnp
jg
fldcw
jge
pop
push
ret
cmp
popa
xor
in
jmp
loopne
push
fimull
mov
iret
cs
jmp
or
ds
mov
imul
out
jp
iret
or
pop
dec
adc
or
lods
out
adc
mov
xchg
adc
adc
pop
mov
shll
mov
mov
sbb
mov
and
fisubs
call
xchg
test
mov
imul
mov
mov
pop
sub
rcll
int
es
hlt
cltd
cltd
std
jb
es
ljmp
or
dec
ret
xor
push
leave
push
jo
imul
sbbb
sti
sub
xor
xchg
push
ss
mov
lods
mov
clc
mov
imul
shrb
inc
test
rorl
and
xchg
popf
fbld
sahf
test
jns
out
mov
jnp
repnz
adc
rolb
mov
add
add
push
sbb
fisubrs
pop
or
icebp
push
lcall
xchg
inc
push
xchg
stos
mov
pop
dec
cwtl
arpl
jo
stos
mov
push
pop
nop
or
pop
jle
xlat
add
dec
dec
mov
filds
adc
popa
mov
jae
cmp
fstpl
bound
jecxz
or
hlt
insb
sub
ret
imulb
shrb
fstps
adcl
mov
scas
push
push
arpl
and
mov
data16
adc
out
into
push
xchg
push
cmp
scas
mov
cmp
mov
aas
movsl
inc
mov
sbbl
push
and
push
insl
addr16
jp
insb
test
mov
inc
ja
add
rolb
cmc
jb
sbb
test
ja
sbb
rcrl
decl
stc
sarl
sub
lock
es
xchg
inc
cmp
mov
mov
fcmovb
dec
clc
mov
aaa
or
int
sbb
movsb
in
cmpb
mov
push
jmp
mov
cltd
clc
scas
cwtl
sbb
mov
lods
mov
int3
rcr
lock
xchg
mov
clc
pusha
insl
daa
addr16
enter
es
imul
jb
repnz
xchg
fsubl
scas
fs
push
adc
mov
cmp
loopne
cmp
pop
jno
int
dec
sbb
mov
inc
cs
mov
and
jg
loopne
rorb
ljmp
jo
cmp
lods
inc
add
pop
and
or
fmul
loop
push
fstpt
add
popf
jno
and
jb
add
popf
aas
out
movb
cmp
mov
or
xchg
aad
xor
cmp
jbe
jle
push
dec
push
mov
call
lds
jg
xor
push
push
jle
lods
jmp
hlt
sbb
xchg
inc
jg
scas
mov
scas
cmp
movsl
jo
push
and
sub
pop
fsubrs
stc
push
dec
cmp
fistl
aaa
adc
mov
jbe
mov
clc
dec
pop
push
hlt
xchg
cwtl
jl
ret
stos
push
mov
negl
push
inc
mov
fisubrl
rorl
std
cs
dec
lahf
and
xor
xchg
icebp
fdivl
or
xor
adc
stos
pusha
adc
add
xchg
je
pop
test
cwtl
ret
rcrl
mov
test
repnz
xor
jo
pushf
mov
pushf
mov
push
cs
inc
sbb
fcompl
in
add
mov
clc
jnp
sbb
push
cwtl
sub
inc
lret
jmp
adc
jl
out
xor
push
mov
mov
in
sbb
jge
sbb
pushf
lret
jg
in
pusha
aad
xor
sar
ja
mov
in
scas
cs
mov
popf
jnp
leave
lock
test
lret
fldt
mov
dec
inc
cmp
sbb
aam
jle
xchg
and
sbb
fisttpll
dec
push
dec
sub
sbb
sbb
arpl
shlb
or
push
and
sbb
jne
xor
aam
jecxz
mov
mov
cmp
pop
push
xor
cltd
sub
inc
or
pop
push
and
add
mov
dec
pop
gs
and
inc
push
xchg
sub
iret
bound
jg
stos
xchg
sarl
push
cmpsb
imul
andl
pusha
add
jl
jo
lret
out
test
fsubr
push
inc
out
hlt
push
inc
or
adc
jle
pop
repnz
pop
xchg
test
out
or
std
mov
mov
push
lods
ljmp
jle
dec
ret
pop
jp
outsb
cmp
mov
in
sar
mov
loop
sub
notb
or
or
outsb
inc
ss
jmp
push
push
loopne
pop
push
out
aad
and
push
inc
movsl
and
aad
fnstcw
sub
sub
xchg
shll
cli
ljmp
sbb
cmpsb
sbbb
aas
lahf
arpl
jge
lahf
mov
and
mov
xor
rcl
pushf
in
imul
add
jl
jecxz
ljmp
arpl
leave
xchg
xchg
jae
pop
and
push
aas
icebp
popa
arpl
jo
aad
mov
iret
into
outsb
loopne
in
aam
add
mov
ret
fdivs
mov
inc
subl
int3
das
jmp
dec
inc
into
dec
xor
fldl
inc
push
cmpsl
imul
jecxz
mov
outsb
dec
cmp
into
mov
push
mov
pushf
leave
repz
push
enter
sbb
dec
cld
or
in
or
cmpsl
mov
pop
push
jmp
cmp
push
and
cltd
outsb
daa
subb
pop
adc
fldl
out
sbb
dec
test
repnz
outsb
add
mov
sub
dec
mov
pop
adc
mov
dec
inc
mov
shll
add
dec
les
mov
das
xchg
xchg
sub
dec
outsb
leave
out
xor
pop
lea
cmp
fwait
sti
ja
mov
cmp
ljmp
fcoml
or
xor
and
shrl
inc
bound
add
adcl
add
repnz
adc
or
sub
das
out
sbb
jecxz
mov
pop
subb
jle
je
sbb
ja
mov
cmp
or
xchg
outsb
scas
cltd
mov
fwait
lods
rorb
mov
xor
test
int3
std
push
loop
mov
cmpsl
mov
jmp
imul
jmp
add
pop
sub
out
xor
in
xchg
pop
icebp
jge
sarb
mov
iret
dec
inc
mov
iret
in
sub
inc
sub
int3
sbb
mov
daa
push
mov
imul
mov
mov
f2xm1
push
adc
stc
loop
cmp
loope
mov
call
dec
push
mulb
add
jo
in
psllw
leave
mov
cmp
mov
add
cmp
fadds
pop
xchg
sti
stos
out
xchg
sti
sub
pop
mov
pop
mov
sbb
inc
addr16
inc
sub
dec
dec
test
dec
jo
push
dec
xchg
cld
jmp
arpl
loopne
mov
sub
in
outsl
movsl
xchg
lea
or
pop
nop
pusha
jg
insl
lock
push
jne
outsb
loope
shll
add
pop
pop
scas
std
iret
aaa
sti
sbb
push
push
scas
sbb
js
test
pop
xor
or
insl
cmc
repz
enter
aas
sub
adc
mov
push
and
sub
imul
pop
sub
and
xchg
push
jmp
int
mov
fldt
mov
dec
xor
hlt
arpl
add
mov
lock
mov
mov
mov
outsb
jmp
sub
add
jno
lods
or
ljmp
cmc
xor
xchg
sarb
popf
push
jb
scas
jl
xchg
jg
lds
mov
push
jp
fsts
ljmp
jne
fstl
fs
lcall
scas
xor
mov
sub
mov
or
xor
and
arpl
stos
adc
test
sbb
cmp
inc
mov
and
pop
shrl
pop
xchg
xchg
push
unpckhps
dec
dec
scas
cmp
sbb
adc
mov
sbb
mov
in
cmc
pop
cltd
pop
xor
jbe
xchg
test
lods
xor
jo
mov
imul
cmp
adc
repz
fs
mov
mov
sub
outsl
sbb
nop
mov
jnp
mov
mov
in
jl
lret
stc
movsb
dec
fs
out
jl
hlt
fnstsw
scas
pop
mov
mov
jmp
pop
jns
pusha
jp
pusha
cmp
out
pushf
int3
scas
sub
je
pop
xchg
inc
movsl
push
fistl
aaa
push
jge
or
rorb
add
sub
jge
push
js
in
mov
inc
mov
inc
daa
sbb
aas
dec
mov
sub
pop
ret
and
jp
enter
cmp
cmpsl
xor
test
xchg
sbb
xlat
mov
cmc
into
pop
movsb
push
dec
inc
jo
and
inc
jno
out
clc
cwtl
adc
outsb
pop
mov
and
or
mov
lret
push
sub
fdivrl
popf
mov
inc
inc
aam
lret
push
js
fs
xor
dec
pop
inc
loopne
shrb
insl
je
outsb
dec
loop
cmp
scas
and
sbb
xor
int3
lds
and
pop
rolb
mov
orl
daa
loope
cld
out
ja
cmp
bnd
data16
add
cmc
jo
add
negb
leave
shlb
enter
jb
std
push
into
mov
cld
sbb
and
fcompl
or
sub
push
jno
sarl
repz
inc
xchg
inc
add
nop
jbe
movsb
scas
mov
mov
xchg
std
or
and
xchg
xor
xchg
addl
sbb
repz
rcl
mov
test
mov
dec
xchg
cmp
out
sbb
dec
fdivrl
out
push
jae
mov
sti
lahf
lret
jmp
rorb
jbe
add
aad
mov
dec
jnp
mov
jmp
push
repnz
das
or
mov
mov
ljmp
addr16
and
add
dec
das
call
call
int
fs
push
out
pop
fs
jno
aas
rcrb
test
xchg
add
pop
ljmp
cwtl
mov
popa
sti
pop
jb
add
cmpsl
ret
mov
jp
jne
enter
mov
aam
push
div
sub
add
jecxz
adc
out
dec
aaa
xor
xchg
mov
cmc
cmp
mov
repz
leave
gs
int3
aas
test
pop
mov
scas
sub
xchg
mov
cmc
pop
dec
iret
shrb
ds
mulb
rcrl
push
push
je
pop
mov
mov
mov
adc
fs
js
lahf
vpmacssdqh
scas
movsb
xlat
leave
sti
fcomps
mov
xchg
xchg
sbb
repz
xchg
ja
nop
pop
jle
xchg
incb
cwtl
mov
push
cli
leave
inc
sub
repz
and
out
xchg
mov
lret
sub
dec
icebp
cmp
dec
pop
xor
repnz
movsl
and
int3
mov
pop
inc
in
movsb
test
rorl
mov
cmp
lret
jmp
js
clc
das
fldl
dec
cld
xchg
les
push
stos
aaa
ljmp
and
fisubs
cmp
dec
mov
sahf
repnz
ljmp
mov
xchg
in
hlt
lret
imul
xchg
mov
and
cmp
xor
repz
mov
mov
mov
nop
fdivs
mov
enter
addr16
in
pop
jae
sbb
jne
cmpsl
adc
imul
and
xchg
imul
jno
test
pop
add
sub
mov
nop
stos
add
clc
fwait
and
incl
ret
add
pop
push
mov
mov
push
and
mov
adc
inc
sbb
add
sti
pushl
jne
cmp
sbb
jge
jne
scas
push
and
push
addl
loopne
jbe
cmp
jmp
xchg
outsb
cld
and
jmp
mov
sbb
adc
lret
adc
addr16
aad
mov
aad
jl
icebp
stc
pop
sub
xchg
xchg
gs
fdivrs
stc
movsl
jae
int3
and
insb
arpl
add
push
inc
rcrb
dec
out
dec
add
sbb
push
fbstp
xor
and
push
xchg
test
xchg
pop
jnp
adc
les
add
xlat
test
mov
loop
in
fs
fwait
pop
or
cmp
dec
ljmp
shlb
pop
inc
jne
dec
movsl
cmc
rol
ret
ljmp
sti
jp
addr16
test
sub
loopne
out
iret
add
inc
jmp
xchg
dec
inc
sar
sub
out
push
ficompl
and
pop
fisubs
int
in
sub
cmpsl
or
push
jo
out
divl
movb
adc
clc
mov
jge
js
cmp
pop
jecxz
jge
mov
sub
or
daa
aad
sub
shl
mov
mov
push
adc
mov
pop
in
pop
aad
ret
xor
pop
aas
adc
daa
aam
ror
xor
xor
je
xchg
insl
lret
pop
stos
mov
xor
jb
adc
out
daa
cwtl
into
mov
pop
mov
xor
inc
mov
inc
data16
fucomi
int3
mov
jg
adc
test
xor
mov
inc
pop
pushl
push
push
sub
push
addb
insl
mov
test
cmp
or
mov
das
inc
aad
jno
or
xchg
outsl
inc
rep
in
stc
cmp
dec
jo
imul
sarb
aam
ret
inc
xor
xchg
xchg
mov
mov
and
and
mov
nop
das
adc
faddl
int3
pop
xor
iret
and
mov
dec
pop
inc
inc
lahf
xchg
popa
mov
cmp
or
in
mov
jecxz
inc
dec
shrl
add
mov
dec
jecxz
xor
fwait
aam
in
xchg
call
inc
mov
mov
lods
testb
outsb
stos
push
pop
cmp
lods
loopne
test
cmp
daa
cli
lods
es
sbb
testl
fcoml
xor
sub
stc
cmpsb
xor
popf
shl
cld
adc
sarl
cmp
add
ret
andl
popl
mov
dec
jp
adc
dec
jb
pop
add
imul
and
jb
xchg
xchg
arpl
cli
hlt
sahf
adc
or
loope
xchg
into
pop
ret
cmpsb
and
jmp
sub
cmp
xor
into
aaa
push
das
jnp
daa
fisubl
jnp
push
sub
andb
scas
fldenv
mov
aam
add
sub
mov
loop
push
int
cmc
ret
shlb
xchg
in
pop
into
mov
inc
sbb
cwtl
add
jmp
add
mov
mov
push
inc
cltd
push
inc
mov
cmc
fidivl
adc
dec
or
dec
out
fmull
mov
and
xor
arpl
loopne
adc
sbb
sub
and
push
dec
inc
push
mov
cmp
fs
in
or
push
movsl
cs
xor
jno
out
xor
fsubr
and
imul
inc
in
or
call
mov
rol
dec
popa
mov
mov
fld
lahf
mul
sub
cmp
jp
inc
xor
cli
mov
push
jge
fistl
inc
xchg
cli
fsubrs
and
lcall
mov
into
std
jns
or
inc
imul
dec
cli
xlat
pop
mov
into
mov
arpl
push
dec
pop
in
shl
xor
ficoml
ss
daa
mov
das
nop
xorl
add
cld
fildll
mov
shll
sub
out
cmp
mov
inc
test
pop
les
and
sub
add
inc
stc
fucomip
movsb
outsl
movsl
push
xlat
data16
mulb
fbld
push
sarl
xor
test
push
repnz
push
pop
aad
mov
stos
je
repnz
xchg
mov
icebp
dec
int3
daa
push
or
pop
jp
addb
lds
insb
sbb
jg
dec
insl
mov
push
in
adc
loop
out
and
inc
mov
jno
repnz
jecxz
es
rcll
movsl
or
sbb
popa
fbstp
mov
sub
pop
mov
xor
mov
adc
jecxz
lahf
mov
sbb
test
dec
sub
or
push
mov
sbb
sbb
int3
jbe
das
push
stc
inc
cmp
je
and
add
or
inc
mov
pop
adc
lret
cmpsb
pop
dec
popa
ret
push
push
dec
push
or
xor
lahf
add
mov
adc
mov
inc
pusha
jl
insb
lods
inc
cmp
daa
dec
je
push
daa
xor
subl
dec
sub
aam
int3
js
cld
sbb
cmpsl
sub
loopne
push
sub
and
ficoml
js
cmp
cltd
ret
insb
and
cli
xchg
sti
shll
in
jmp
ljmp
cli
jge
fimull
mov
psubq
stos
mov
sub
xor
inc
push
jae
jg
or
and
stos
xchg
nop
jb
jo
repnz
les
fs
push
out
sbb
js
fsubrs
cld
or
jb
bound
xchg
jb
lea
xor
mov
xchg
dec
fwait
dec
iret
adc
and
mov
scas
mov
dec
xor
ret
add
test
out
pop
test
pusha
mov
out
fsub
dec
aas
shlb
jg
stos
pop
xor
mov
push
nop
lea
xchg
cmp
lods
mov
or
in
cli
out
mov
gs
mov
push
fs
mov
adc
dec
cmpsb
push
adc
mov
pushw
or
pop
lock
push
xor
cmp
mov
xor
test
mov
out
xor
mov
add
jmp
int3
jb
mov
je
aaa
loop
add
rep
fucom
push
in
adc
or
stc
repnz
xchg
mov
xchg
popa
jae
mov
cmpsl
es
jo
scas
cmp
mov
ja
ret
out
push
aas
jbe
mov
jge
sbb
call
scas
mov
adc
inc
xchg
mov
dec
fisubrl
fnstenv
mov
int
push
xor
xchg
sub
cltd
mov
out
xchg
or
popa
mov
in
sti
xchg
or
or
shll
andb
push
movl
outsb
cld
sbb
or
jns
xor
mov
mov
lods
xor
testl
lret
stc
sbb
orb
pop
xor
in
mov
jmp
push
push
pop
scas
mov
inc
dec
enter
mov
lret
ja
inc
push
es
int
ds
fstpt
ljmp
and
pop
je
and
or
lock
sbb
adc
xchg
pop
jbe
aas
xor
xor
add
sbb
out
dec
pop
xchg
and
adc
mov
out
ja
mov
and
jge
mov
mov
jb
and
in
mov
jbe
das
lock
pop
mov
pop
idiv
insb
add
pop
lods
ror
mov
adc
cli
pop
iret
jns
stos
incb
push
push
loope
pop
mov
bound
fucomi
mov
mov
outsb
mov
in
inc
aam
ds
push
or
inc
push
inc
cwtl
imul
dec
xor
inc
push
pop
adc
cmpsl
popa
mov
jnp
movsb
cmp
dec
add
test
xor
mov
inc
stos
jp
enter
dec
in
das
push
mov
xor
adc
iret
mov
loopne
push
mov
mov
and
mov
sar
hlt
in
dec
sbb
in
cmp
or
jmp
jecxz
clc
sub
lods
push
push
lret
bound
and
lcall
lcall
jecxz
js
dec
iret
imul
lock
or
and
push
loopne
and
je
and
pop
lods
sub
jae
jne
mov
mov
in
push
inc
shl
ss
and
out
leave
repz
sbb
into
or
jg
loope
das
ds
inc
out
xchg
cmp
out
aaa
stc
pop
add
cltd
xchg
in
outsl
pop
cli
add
inc
jecxz
sbb
adc
fisubrl
int3
mov
dec
dec
mov
mov
xchg
inc
ljmp
jns
mov
jbe
lea
push
push
dec
call
jno
inc
cmpsb
jle
cmp
push
sub
mov
in
lret
pop
inc
scas
mov
fiadds
lret
popa
mov
jp
jg
test
out
lcall
imul
xchg
or
rorb
ret
jbe
inc
mov
or
push
adc
int3
xlat
mov
pop
and
pause
jmp
lret
nop
lret
jo
jns
and
aam
popf
mov
mov
test
std
dec
mov
and
cmp
push
arpl
out
jns
test
jb
pop
and
mov
mov
in
jbe
loop
xchg
jns
subl
andl
push
xor
insl
outsl
push
out
and
scas
adc
inc
pop
mov
xchg
stc
add
sub
mov
test
push
lcall
loope
adc
mov
aas
dec
lea
loopne
mov
rorb
lahf
mov
cli
push
pop
sbb
pusha
loop
mov
pop
repnz
sub
scas
outsb
sub
xchg
and
ljmp
jno
repz
dec
inc
hlt
mov
pop
and
popf
cmp
mov
sbb
xor
sub
addr16
cmp
fdivrs
aad
movsb
xchg
xchg
cld
inc
dec
and
movsl
pop
mov
push
out
add
insb
pop
repz
mov
sahf
mov
test
aas
mov
dec
adc
dec
ret
or
push
ret
push
lcall
hlt
inc
push
ljmp
fdivrl
jmp
mov
push
int3
dec
add
in
add
ret
out
and
lods
xor
jle
fmuls
dec
mov
jmp
jmp
je
gs
scas
cld
fimull
sbb
add
pop
or
into
jo
ret
cmp
xchg
repnz
stos
gs
add
aad
insb
lcall
xchg
inc
push
lret
shl
dec
sub
imul
mov
or
test
ret
cmp
fdivr
cmc
pusha
test
mov
je
mov
fsubl
mov
adc
mov
jle
xor
jmp
dec
sbb
add
dec
ficoms
and
test
jmp
add
mov
and
sub
jae
insb
jae
repz
loope
push
jns
or
jne
xlat
sbb
jb
push
sub
inc
icebp
cmc
aaa
movsb
add
loope
cld
scas
xchg
jl
xchg
ss
xor
adc
cwtl
pop
dec
dec
push
mov
test
mov
dec
add
lahf
xor
je
cld
push
gs
aam
pushf
and
inc
insb
test
pop
pop
sbb
dec
divb
add
xchg
sarl
xlat
xchg
loope
outsb
mov
insb
jne
out
shlb
cmc
push
in
cmp
rcll
jnp
dec
or
or
dec
rcr
in
xorb
and
sarl
cmpsb
lea
push
movsb
sti
xchg
push
pop
lahf
aaa
sbb
adc
pop
fdivs
out
imul
mov
in
xchg
cmpsb
xchg
loope
mov
mov
or
adc
out
jp
ljmp
insl
sbb
xor
lea
add
or
add
movsl
clc
or
jns
xchg
mov
iret
adc
pop
cmp
adcb
into
cli
cli
cmc
push
push
sub
push
xchg
mov
mov
jecxz
and
mov
and
sub
fs
and
out
mov
fsubs
inc
sbb
inc
push
ljmp
or
add
sbb
call
lods
inc
ss
in
mov
ud0
mov
mov
xor
ds
andb
das
push
das
lds
sbb
outsl
xchg
xchg
sbb
shlb
push
sub
add
cmp
xchg
mov
lds
loop
call
or
cmp
ror
add
ret
testl
daa
rcll
xor
jl
push
fmuls
dec
pop
xchg
mov
sbb
push
pop
adc
scas
jp
mov
jecxz
inc
push
jns
mov
and
mov
jge
stc
mov
andb
sti
cld
push
clc
sub
pop
scas
push
sbb
cwtl
xchg
lret
mov
aam
jne
les
in
mov
jecxz
es
inc
and
call
lret
and
fdivrl
pop
inc
pushf
push
push
popa
and
cmpl
sbb
out
push
jmp
daa
jo
xchg
xchg
rol
cmp
mov
mov
add
pop
dec
xchg
gs
fdivrl
int
or
mov
mov
imul
xor
mov
addr16
fldenv
int3
mov
pop
sbb
lods
xorl
hlt
sub
mov
sbbb
pop
insb
inc
in
mov
xchg
leave
pushf
or
inc
inc
jle
xor
and
jmp
pop
add
loopne
add
dec
mov
inc
les
or
xlat
and
adc
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
fidivrs
ja
add
arpl
add
jne
pop
or
fmul
sti
hlt
mov
fnstenv
pop
cmp
lret
inc
pop
mov
cmovns
push
jae
aam
lea
rorb
ret
cmpsb
push
imul
xchg
into
mov
scas
lods
loopne
mov
rcl
addr16
mov
addr16
pop
mov
push
pop
jl
cwtl
add
add
add
sub
adc
cmp
out
pop
xchg
push
fcmove
add
arpl
add
in
outsl
mov
inc
arpl
mov
stos
and
out
xor
popa
ds
push
dec
fisttps
arpl
xor
lods
loop
orl
cmp
fcmovnu
add
test
mov
jmp
ficoml
xchg
insl
or
jle
test
adc
mov
ret
add
add
pop
sub
sub
addb
into
add
arpl
add
sbb
mov
jo
or
pop
gs
mov
mov
mov
ret
xor
pop
cmpsb
movsb
and
add
cmp
cmpsl
adc
scas
mov
mov
pop
mov
mov
mov
inc
neg
jb
std
cmpsl
aam
adc
push
dec
int
ret
mov
sti
add
add
add
and
aam
aam
ljmp
je
popa
xchg
add
add
mov
daa
mov
mov
fisubl
outsl
xor
inc
scas
in
std
or
icebp
fnstsw
and
rclb
out
pop
push
call
sbb
daa
adc
fisubrl
fstpt
hlt
pop
into
or
std
dec
sub
jle
mov
fcmovb
or
inc
out
push
addr16
lds
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
add
add
arpl
add
pop
and
and
sbb
repz
ficompl
fucomi
jns
div
fidivrl
loopne
cmpsb
add
icebp
pop
lods
mov
movsb
popf
inc
js
rcrl
cmc
push
sub
xchg
addb
push
cs
dec
popa
pop
mov
es
cltd
scas
testl
call
pushf
cmp
dec
adc
movsl
add
add
add
out
lods
cmp
stc
stc
pop
es
add
add
mov
jmp
inc
loope
loop
test
cltd
je
mov
std
shlb
jmp
das
inc
into
sub
jae
jge
jmp
push
outsb
mov
push
add
mov
dec
ljmp
pop
cmp
shl
and
out
sbb
push
arpl
inc
jge
mov
add
add
push
xor
gs
aaa
push
stos
push
iret
leave
iret
add
arpl
add
sub
int3
mov
push
scas
fs
jl
cmp
shrl
cwtl
xchg
call
xor
dec
fidivl
sarl
fidivrl
sub
je
lret
adc
mov
fisubl
pop
dec
mov
inc
push
aas
js
movsl
aam
push
sti
dec
xor
push
adc
adc
loope
sbb
fimuls
add
mov
push
adc
cwtl
out
inc
mov
xchg
mov
add
add
adc
iret
add
cs
addb
and
xor
inc
and
testb
mov
int
jl
inc
push
ja
dec
jo
xor
pop
xor
jecxz
pop
fbld
inc
iret
aas
push
mov
cmp
cmc
inc
jnp
clc
push
mov
js
idivb
add
dec
inc
sub
das
jle
jg
imul
test
aaa
sbb
jecxz
add
add
ja
ret
in
sti
adc
shll
mov
and
cmovle
aad
cmpsb
imul
shll
aas
add
insl
sbb
imul
xor
test
pop
orl
adc
sub
push
jle
pop
imul
or
xor
dec
add
addr16
and
mov
mov
int
and
add
add
jno
or
xor
fnsave
lcall
dec
sub
mov
js
ret
repnz
push
mov
mov
push
xchg
sub
inc
push
mov
aaa
subl
cmpsl
jl
xchg
shll
fadds
cli
pop
fs
xchg
cli
cld
add
addb
pop
mov
xchg
pop
mov
pop
dec
and
mov
mulb
jp
add
add
ret
or
ret
lods
sub
mov
cld
in
add
arpl
add
stc
push
xchg
jnp
jae
outsb
mov
lret
jmp
xchg
add
xchg
fwait
pop
pushf
push
inc
dec
mov
lock
mov
dec
mov
push
cld
roll
inc
mov
jns
rorb
mov
ret
mov
pop
pop
mov
inc
js
sub
pop
sub
orl
fld
add
ror
outsl
clc
sarb
arpl
rorb
add
add
in
mov
daa
add
add
das
out
je
cmc
insl
dec
mov
loopne
add
mov
push
jnp
pop
mov
in
mov
fbstp
xchg
add
mov
or
leave
repnz
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
cmpsl
insb
mov
xlat
add
arpl
add
imul
fisubs
jne
pop
cltd
or
inc
sbb
loop
ret
outsb
mov
pop
imul
lock
xchg
dec
jne
and
imul
mov
pop
fwait
push
pop
sub
mov
cwtl
cmp
push
or
imul
stc
or
add
add
sub
cli
jl
xlat
push
jno
lcall
add
add
cmp
push
xchg
jb
fldl
push
aad
call
lock
and
ds
pop
fmuls
push
and
cmpsl
sbb
sub
stc
dec
sbb
or
in
outsb
lds
test
popf
jl
fiadds
mov
xor
or
and
inc
fst
aas
cs
xlat
lea
add
mov
jg
ljmp
push
test
xlat
add
arpl
add
mov
test
aad
cmpsb
push
push
test
test
out
aam
mov
das
inc
pushf
ja
inc
nop
dec
test
fs
cmpsb
loop
cmpsl
mov
outsb
sub
mov
lret
pop
xchg
jp
fiadds
mov
inc
test
mov
les
incb
call
bound
push
lahf
push
add
add
add
cmp
in
fimuls
mov
rorb
add
arpl
add
movl
repz
inc
jb
mov
repz
pop
mov
mov
pop
sub
idiv
add
inc
jge
popa
cli
fwait
jge
lock
push
repz
push
pop
leave
pop
sahf
mov
ss
xchg
inc
pushf
ret
das
push
jmp
pop
jmp
scas
or
fwait
stos
int
adc
mov
add
add
fnstenv
std
negb
sub
ret
insl
scas
fadds
add
add
inc
in
jbe
xchg
jmp
loopne
fdivrl
sbb
shrl
add
popf
je
mov
pop
inc
mov
cld
or
js
jbe
stos
insb
and
lock
mov
inc
ljmp
sbb
out
shlb
xor
ja
test
in
sahf
or
add
add
add
xor
jb
inc
mov
scas
adc
add
arpl
add
sub
in
or
cs
sub
mov
sbb
adc
cmpsb
or
test
test
mov
cmpsb
cmpsl
rorl
ljmp
xchg
fildll
mov
pushf
sbb
mov
scas
ja
pop
sub
dec
sub
mov
mov
jbe
movsl
xchg
aad
add
add
add
add
pop
sub
daa
je
add
arpl
add
inc
cmpb
test
or
stos
sbbl
jmp
loope
in
add
add
push
dec
or
insb
mov
xchg
mov
mov
dec
imul
xor
jle
jns
sarl
test
push
stos
push
sbb
dec
mov
pop
inc
div
ror
mov
out
add
add
push
add
xor
jb
insl
xor
and
xlat
flds
add
add
insb
sub
out
sbb
inc
jae
sbb
xchg
lcall
pusha
arpl
jnp
jecxz
pop
notl
jnp
xchg
lret
push
jle
nop
push
lds
dec
jl
mov
sbb
sahf
mov
addr16
pop
mov
fistpl
insb
int
or
adc
bound
and
inc
mov
orb
add
add
push
add
mov
out
xchg
cmp
add
arpl
add
popf
pop
loopne
push
lds
mov
shl
aam
into
insb
push
cmp
dec
inc
fcmovnbe
ss
jno
mov
cmp
dec
sbb
push
psubw
mov
les
pop
mov
call
nop
lods
fbld
add
push
jl
les
xor
xchg
nop
out
and
add
add
add
mov
jmp
fimull
shll
add
add
shl
pop
popf
or
inc
pusha
pop
out
mov
add
negb
push
clc
std
fnstenv
dec
into
adc
jnp
cld
lret
mov
es
in
mov
mov
or
cld
out
pop
cmp
in
fwait
xchg
aaa
mov
adc
fdivp
jecxz
int3
jg
lods
mov
in
mov
mov
add
add
pop
inc
pop
iret
pop
aad
ss
dec
popa
fsubs
fildl
add
add
xor
dec
inc
jbe
sti
mov
lea
bound
sbb
imul
nop
in
xchg
pop
les
inc
jae
in
sbb
push
and
aad
jbe
cmp
subl
ret
imul
lahf
push
or
jb
xor
leave
or
mov
fwait
adcb
cwtl
xor
add
add
add
cld
mov
inc
or
add
arpl
add
adc
inc
ss
sub
lods
adc
add
cwtl
sbb
xor
ds
paddsb
jo
jl
out
pop
jmp
aaa
int
sub
jecxz
xchg
sti
xchg
sar
xchg
ja
sub
or
sbb
jne
push
popl
int3
int3
movsl
xor
movb
jns
aad
jl
xor
add
add
outsb
jae
lret
jle
repz
xchg
lcall
add
xchg
or
cmpb
mov
ss
gs
xchg
cmp
out
ret
aas
jecxz
iret
push
bound
lds
mov
adc
push
sub
adc
stos
mov
add
and
jns
std
inc
dec
mov
mov
push
fldt
sbb
add
fsubrl
add
add
add
adc
adc
mov
lds
sub
add
arpl
add
scas
out
aad
xor
enter
and
test
in
mov
pop
insb
sub
out
adc
lods
cmp
xchg
daa
iret
int
xchg
popa
mov
cld
xchg
push
mov
xor
and
pop
pop
rolb
inc
cmpsl
mov
orl
pusha
stos
stos
jl
and
mov
dec
lahf
ja
mov
add
cmp
mov
sar
mov
add
add
add
and
stos
pop
inc
cmpsb
push
outsb
sahf
stos
int3
cwtl
cmp
in
mov
and
and
pop
pop
lods
push
fwait
mov
cmp
in
cwtl
call
and
nop
add
adc
mov
lds
adc
pusha
or
mov
push
sub
xor
mov
or
in
fisttpll
add
aam
push
lock
cmc
das
sbb
xchg
iret
and
add
arpl
add
adc
xor
and
or
adc
stos
cmpl
cmp
rep
or
movsb
xchg
pushf
jmp
dec
ret
pop
stos
and
cmpb
ds
les
loope
or
mov
xchg
jl
and
lea
pushf
or
xchg
into
dec
xor
fs
add
add
add
sub
fildll
lock
add
arpl
add
inc
cmc
jo
jecxz
lea
ljmp
mov
xchg
clc
ret
movsl
mov
xchg
int
sbb
mov
pop
adc
or
and
imul
aas
movsb
pop
push
mov
aaa
enter
rcrl
mov
mov
jo
mov
jge
aas
rorb
and
dec
popa
cmc
add
add
add
fs
testl
jge
mov
add
arpl
add
jnp
sub
xlat
mov
popf
enter
or
cmc
out
sbb
pusha
subl
scas
sub
xorl
test
mov
popf
sub
jae
mov
lds
lcall
gs
adc
pusha
push
mov
mov
mov
aad
mov
lods
loope
add
add
add
jne
jg
clc
cs
push
sub
add
arpl
add
pop
cmc
filds
ret
imul
fmull
rcrb
stc
inc
and
cmp
xor
fnstcw
dec
pushl
mov
push
repnz
insl
cld
lods
shlb
xchg
mov
int
ret
stc
cltd
pop
bound
pop
xchg
clc
mov
lahf
fldenv
sbb
pushf
adc
fs
int3
ret
add
add
or
dec
mov
je
lcall
add
arpl
add
xchg
or
loope
sahf
mov
xchg
mov
leave
int3
and
rcrl
out
test
push
mov
and
popl
roll
jbe
hlt
js
enter
imul
sub
push
cltd
adc
or
adcb
adc
cmp
arpl
or
lds
inc
push
add
add
add
push
mov
mov
xchg
adc
rorb
add
add
push
cwtl
lret
les
test
pusha
jb
adc
pop
ljmp
arpl
adc
sbb
sbb
stc
icebp
sahf
fnstenv
cltd
pop
lds
xchg
test
das
xor
fildl
into
mov
inc
out
and
std
sbb
rorb
inc
xchg
push
shrl
mov
add
add
fisttps
push
mov
fildl
add
add
loopne
sub
out
jp
lret
jns
je
push
push
or
mov
sarl
push
subl
test
clc
addb
mov
xor
outsb
inc
pop
xchg
jne
std
cmp
fistps
les
lahf
adc
pop
add
add
add
jle
out
sbb
mov
roll
add
add
push
addl
scas
into
inc
fwait
jle,pt
jle
cmpb
add
pop
sbb
test
push
cmpl
mov
dec
cmp
cltd
add
ret
adc
inc
ret
cmpsb
add
jmp
out
cmp
add
mov
push
ret
add
add
add
and
cmp
mov
sbb
add
arpl
add
subb
dec
movsb
rol
jne
cmp
into
jle
int
inc
jge
flds
movsl
and
inc
int
pop
cmc
jo
xchg
or
pop
dec
jbe
or
lcall
add
cmc
push
in
inc
sbb
push
lahf
lock
sbb
mov
mov
mov
mov
add
add
xchg
nop
ffree
popf
aam
in
leave
jle
add
arpl
add
xor
arpl
insl
movsb
iret
or
dec
mov
mov
lret
inc
popa
jmp
mov
lods
sub
xor
addl
push
push
fwait
std
push
mov
in
add
jno,pn
mov
lahf
movsb
pop
imul
std
mov
pop
sbb
push
cmp
mov
fnstcw
ret
movsl
mov
add
mov
jbe
hlt
mov
and
cmpsb
mov
rolb
add
add
rorl
subb
push
cmp
cmc
mov
in
iret
loope
inc
sub
nop
test
mov
push
mov
push
stc
xchg
popa
adc
sbb
pusha
mov
adc
or
lds
xlat
into
cltd
push
inc
test
in
or
ret
movsb
sub
fbstp
xchg
lret
add
add
add
ror
mov
sub
out
rcll
add
arpl
add
mov
lahf
lock
sbbl
add
bound
dec
pshufw
lods
scas
push
unpckhps
mov
push
pushf
jbe
movsl
cltd
push
rorl
out
xchg
cmp
pop
inc
jle
sub
or
lret
cmp
pop
pop
shll
jbe
push
xchg
adc
xchg
imul
out
arpl
add
add
fucomi
outsb
and
pop
mov
cmpsl
roll
add
add
sub
scas
scas
mov
std
dec
repz
mov
add
pop
add
movsb
adc
pushf
in
adc
stos
push
data16
pop
sbb
stos
gs
jg
mov
push
inc
mov
xchg
xor
add
aam
mov
pop
mov
cmp
inc
sbb
sub
add
add
mov
and
pop
or
add
arpl
add
fbstp
mov
mov
mov
xchg
int
cmpsl
pop
jmp
cmp
sahf
adc
push
cmp
jg
sbb
insl
orb
cmc
adc
data16
inc
and
rorl
and
je
xchg
lods
mov
mov
and
cmp
out
sub
sbb
add
add
add
stc
call
into
inc
mov
xor
aam
add
add
xchg
and
jl
mov
mov
or
imul
mov
mov
fs
scas
ret
jecxz
add
scas
add
jg
mov
mov
bound
leave
iret
xchg
clc
test
addl
dec
lock
lcall
fldt
sbb
jae
add
add
fisubrs
cwtl
sar
repz
xchg
dec
fcomp
rcl
add
arpl
add
test
and
cs
js
xchg
loopne
es
shll
out
mov
xlat
pop
les
mov
hlt
or
cmp
pop
in
popf
mov
fadd
xor
or
daa
sbb
adc
push
call
orb
pop
jmp
xchg
mov
mov
push
daa
mov
xchg
add
add
add
int3
sbb
out
loopne
lods
loop
adc
xor
add
arpl
add
mov
add
data16
add
jg
add
jnp
out
xor
jg
rcrl
jg
sub
pop
fwait
lods
outsb
cmc
and
stc
das
sub
testb
jbe
jle
inc
add
aas
push
fcompl
lods
mov
push
or
cmpsb
mov
add
add
push
test
fildll
subl
add
pcmpgtd
inc
jmp
sbb
push
dec
mov
pop
sub
scas
push
jle
lret
jmp
adc
aaa
sub
inc
inc
fcmovnbe
cmpsl
cltd
cli
pushf
negb
pop
mov
pushw
es
jle
add
fists
loop
or
dec
test
mov
sbb
add
add
add
lods
fcomi
sarb
add
arpl
add
add
loop
or
mov
das
pushf
loopne
jmp
xor
lock
jecxz
jmp
inc
dec
cltd
mov
fstpl
xor
in
pop
aaa
loopne
pop
or
pop
and
mov
and
adc
cmp
in
mov
ss
mov
mov
nop
icebp
cwtl
push
and
enter
stos
stos
cwtl
inc
add
add
add
divl
dec
cmp
dec
and
dec
in
add
arpl
add
adc
and
insb
out
xchg
pop
subb
cmc
std
and
xchg
push
mov
xlat
add
cmpsb
inc
fs
cmp
add
ret
lcall
cmp
lea
cs
loopne
xor
mov
lods
inc
addl
ror
jp
and
add
add
add
arpl
jge
mov
daa
mov
add
add
fisubrs
mov
mov
mov
add
in
cmpsl
int
jp
es
cmc
aaa
xchg
movsl
pop
push
adc
pop
mov
dec
sti
mov
cli
movups
jnp
adc
aad
movsb
inc
leave
xor
xchg
pushf
pop
ret
cld
push
cmp
out
pop
mov
sub
jb
add
add
add
push
imul
mov
outsl
dec
sbb
add
arpl
add
cmpsb
add
mov
cmp
fistps
arpl
test
mov
or
mov
cld
out
dec
int
xchg
movl
mov
jecxz
jns
mov
lret
cmp
fisubl
xchg
pop
xchg
xor
push
or
cmp
cmp
add
add
daa
ss
xor
and
pop
pop
jnp
add
arpl
add
cwtl
in
hlt
push
out
mov
inc
or
adc
pop
repz
sbb
aas
inc
mov
mov
in
cmc
inc
in
push
dec
ljmp
mov
inc
mov
fmuls
sbb
xor
fwait
sti
gs
pop
mov
mov
aaa
jmp
mov
repz
push
push
rep
bound
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
add
arpl
add
scas
lret
mov
cli
inc
mov
lock
mov
xchg
adc
dec
cmp
jl
dec
ficoms
jns
mov
outsl
dec
jmp
add
pop
inc
push
mov
int3
in
popa
cld
cmp
es
mov
sub
jl
add
inc
mov
icebp
int
add
cmp
and
or
add
aad
out
fucomip
ss
cmp
dec
sbb
add
arpl
add
sbb
lahf
cmp
sub
mov
icebp
jmp
out
scas
ret
jb
enter
inc
lds
les
dec
sbb
mov
in
dec
mov
sub
cmpsb
mov
shl
jge
inc
jg
fldt
jb
mov
add
aam
std
and
jle
cmpsb
jmp
add
add
in
cld
fisubrl
sbb
pop
scas
movsb
filds
add
add
mov
test
sbb
les
popf
mov
dec
cmc
pop
lret
mov
leave
xchg
and
pop
testb
call
xor
inc
cld
into
pop
cmp
or
dec
sub
leave
mov
mov
xchg
or
sbb
inc
mov
call
pop
mov
add
cmp
paddsb
nop
rol
pop
wbinvd
pop
loopne
add
add
out
or
stc
adc
add
push
inc
daa
adc
pushf
mov
shl
mov
adc
mov
pop
push
mov
insl
sahf
psrlq
dec
and
scas
xchg
test
std
iret
xchg
sbb
stc
jne
loope
ja
test
int
repz
pop
stos
nop
leave
data16
outsb
add
add
add
jle
call
cli
lcall
add
arpl
add
cmpsl
and
mov
lret
lds
dec
aam
adc
hlt
or
push
sub
mov
xchg
sbb
loopne
xchg
je
aaa
mov
push
ljmp
lcall
xchg
and
iret
pop
test
push
js
sahf
sahf
int
insb
xchg
pushf
dec
daa
push
lea
mov
sbb
add
add
test
and
pop
dec
sub
add
arpl
add
aaa
add
mov
xor
in
movb
shrl
push
jl
aaa
pop
pop
add
xor
push
push
aam
cli
jle
mov
sbb
xor
jle
add
and
loop
andb
stc
call
push
cmpsl
inc
sbb
mov
cli
negb
out
icebp
cltd
add
add
add
aam
fnstsw
out
fcmovu
in
jbe
lea
loope
add
add
pop
mov
mov
jmp
dec
pmulhuw
or
push
std
into
sbb
jg
xor
repnz
addl
xchg
xlat
or
xchg
adc
hlt
hlt
fld
pop
jle
inc
fbld
mov
push
xor
pop
movsl
push
or
lret
add
add
add
sbb
inc
jecxz
mov
popf
inc
popa
fcoms
add
add
pop
or
ret
stc
rclb
pop
lahf
div
adc
sahf
adc
and
aam
cmc
pushf
cmpsl
mov
in
pop
cmp
jbe
subb
in
pop
outsb
pop
xchg
leave
sbb
sbb
loope
or
adc
repnz
bound
push
je
xor
add
add
mov
mov
icebp
and
scas
sub
loope
add
add
lods
xchg
mov
fsubl
es
pop
push
sub
int
mov
imul
mov
imul
xor
dec
and
push
in
mov
cmpsl
dec
inc
pop
inc
mov
and
jne
and
cwtl
mov
adc
cltd
adc
jns
les
rcll
add
dec
push
push
add
add
add
xlat
repz
das
cli
fists
dec
es
inc
inc
add
add
add
mov
lcall
add
xchg
gs
gs
mov
cmp
shr
sub
popa
adc
test
fimuls
stc
fnsave
data16
fcompl
jecxz
mov
cmp
popf
dec
sti
xor
and
lahf
aad
dec
jmp
inc
cmp
jbe
pop
inc
in
push
imul
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
