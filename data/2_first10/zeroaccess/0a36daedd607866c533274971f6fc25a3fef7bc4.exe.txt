push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
xor
inc
adc
cmp
lret
xchg
pop
pop
and
sub
xor
jl
and
pop
mov
rcrb
ja
incl
pop
pop
jecxz
mov
hlt
xor
cmp
loop
jecxz
addr16
shrb
fs
ret
xlat
xchg
cmp
int3
xchg
xchg
xchg
cwtl
fcmovnu
or
pop
inc
stc
cmp
iret
cld
mov
adc
rorl
mov
insb
js
mov
dec
jns
sbbb
sub
testb
popf
inc
or
add
inc
pop
popf
test
sti
rol
imul
xorb
or
add
mov
lret
xchg
xor
push
dec
push
dec
sub
cmpb
and
xchg
add
add
pop
jge
inc
je
adc
or
ret
cld
jl
out
stc
dec
or
loopne
mov
jae
push
mov
pusha
test
jmp
mov
or
scas
pushf
scas
lods
popa
pop
inc
cmp
push
jns
daa
pop
loope
cld
ss
loop
in
sub
or
clc
outsb
push
in
test
and
or
je
pushf
jbe
out
int3
mov
xor
in
pop
cltd
jo
xchg
and
push
or
fs
dec
pop
pop
iret
add
jnp
and
test
mov
icebp
dec
mov
insb
jecxz
out
inc
cmp
or
out
js
mov
out
xor
dec
inc
repz
aam
push
mov
mov
jne
mov
aad
jg
jae
inc
add
das
pop
add
divb
sbb
fdivrs
or
jb
jmp
pop
cmc
or
lret
cmp
in
or
enter
pop
popl
jge
and
icebp
mov
out
pop
sti
scas
cmpl
loope
mov
cmp
inc
pop
popf
sbb
push
inc
jecxz
shll
aas
inc
push
pop
rcl
out
cmc
lahf
in
jne
mov
in
bound
adc
and
jl
xlat
jne
and
imul
xchg
or
mov
icebp
or
mov
cmpsb
mov
leave
icebp
fdivs
inc
dec
cs
dec
and
lea
ds
and
mov
dec
ret
mov
dec
test
inc
xchg
xchg
sub
frstor
or
adc
mov
xor
inc
xchg
mov
push
mov
dec
es
arpl
add
jb
adc
call
mov
daa
lods
fdivs
and
ss
mov
or
bound
stc
fwait
mov
js,pn
hlt
xor
gs
shlb
mov
inc
fisttps
jnp
outsb
sub
lret
imul
and
cltd
in
mov
loop
mov
es
jae
add
es
cmp
pop
in
add
fistpll
cmpsb
adc
andb
and
out
sub
dec
inc
cltd
push
mov
inc
in
xor
push
scas
in
jmp
out
cmpsl
and
pop
mov
mov
ret
xchg
and
out
mov
or
rol
jle
std
arpl
dec
inc
pushf
adcb
and
add
inc
cmp
add
push
adcl
arpl
add
mov
jl
add
stos
pop
in
incb
push
jg
aaa
das
or
loopne
sbb
outsl
ret
das
push
pop
and
inc
es
and
and
cmp
push
xor
lcall
mov
loope
outsb
lret
sbb
pop
sahf
add
xchg
in
orl
int3
inc
mov
xchg
xor
stos
pop
fs
inc
in
sbb
pop
dec
cmpb
cmp
loope
jns
into
addr16
sub
sub
dec
mov
and
cs
imul
inc
ret
add
mov
add
push
shl
jne
test
int
sar
pop
inc
cmp
xchg
sahf
jb
mov
jge
into
ret
dec
idivl
pop
dec
stos
fdiv
pushf
lret
int3
in
fidivrl
arpl
mov
frstor
xor
arpl
xchg
and
aam
pop
in
lcall
mov
ja
pop
movsb
inc
push
out
dec
ds
aaa
cli
push
and
inc
mov
cmp
sub
and
stos
push
adc
xchg
or
xchg
sbb
imul
mov
dec
cmp
aas
mov
or
and
pop
sbb
daa
lods
inc
and
in
jg
or
jns
loopne
das
iret
loop
push
sub
cmc
aad
sub
push
push
mov
or
mov
pop
jge
xchg
fbstp
dec
into
xchg
inc
and
dec
or
mov
daa
and
loopne
jp
xor
lods
jle
inc
and
in
popa
inc
sbb
pop
push
mov
divl
inc
dec
dec
dec
cmp
shr
lock
mov
scas
clc
xchg
jecxz
xor
lds
jg
cltd
pop
sub
xchg
sti
mov
fmuls
jnp
pop
in
push
mov
cs
aad
std
loopne
and
sub
movsb
fcmovnu
insb
add
add
cmp
sbb
sbb
ret
mov
cmpsl
or
andb
pop
insl
jae
icebp
leave
mov
xor
inc
ret
lods
clc
cmp
pop
or
sti
mov
test
test
rcl
mov
in
lsl
test
pop
inc
in
mov
int
mov
mov
imul
lea
outsb
push
aam
pop
repnz
leave
mov
in
das
jno
sbb
mov
xor
decl
enter
jnp
mov
push
je
mov
aad
dec
bnd
hlt
jp
push
in
inc
adc
jnp
mov
adc
inc
xchg
xor
push
pop
inc
and
mov
jmp
cmp
outsb
pop
sbb
jmp
shrb
sub
push
das
xor
adc
xlat
test
jecxz
shl
mov
add
shlb
dec
jg
clc
push
sahf
mov
insl
call
mov
shr
mov
dec
jmp
in
ds
dec
and
les
aad
jae
jns
cmp
push
mov
and
mov
mov
loopne
ret
sbb
mov
clc
popa
adc
mov
pop
sbb
mov
pop
pop
sbb
stc
aaa
test
in
fidivrs
cmp
and
pushf
dec
mov
dec
fdiv
jge
jbe
add
mov
sbb
call
leave
sarl
sarb
rcll
mov
icebp
and
add
push
jne
fidivrs
in
jp
mov
in
loop
inc
jg
mov
cmc
mov
popa
lods
xor
dec
adc
xchg
into
scas
in
in
test
out
iret
cmp
adc
xchg
outsl
aad
jo
adc
ret
enter
iret
add
push
push
and
fidivrl
xchg
outsb
sub
push
cmp
pop
int3
aam
test
out
cltd
xchg
jbe
and
mov
lahf
nop
sbb
cld
stos
jne
mov
jns
xchg
gs
cs
mov
mov
mov
shll
jp
mov
add
pushf
pop
icebp
arpl
xor
lods
lods
adc
sbb
pop
movsb
or
out
push
pop
or
fdivl
fcoml
outsl
repz
sub
mov
stos
adcb
iret
dec
lret
nop
pop
aas
pop
stos
jne
cmc
ficomps
xchg
sbb
inc
push
and
inc
popf
mov
adc
and
cmp
movsl
add
arpl
inc
stos
push
es
pop
adc
sbb
cwtl
xchg
and
bound
jge
pop
sub
sti
jo
dec
xchg
lock
xchg
jo
and
ljmp
out
lds
mov
fs
dec
lods
inc
mov
hlt
xchg
lea
sbb
cmpb
or
lret
rcrl
dec
in
sub
stos
ds
xchg
int3
insl
sti
push
xchg
and
movl
pop
in
dec
aas
mov
sbb
fidivl
mov
mov
xchg
gs
lahf
cmp
jmp
inc
out
ja
jno
cmp
icebp
sbb
cmpsl
sub
aam
xchg
adcl
sahf
in
adc
ss
xchg
fwait
push
push
push
movsb
push
hlt
xorb
sbb
sti
ja
or
shlb
adc
mov
mov
xor
inc
mov
mov
outsl
icebp
cmp
test
ret
aas
or
enter
out
imul
das
mov
mov
je
and
mov
rcll
negl
ret
or
sahf
popa
jmp
in
mov
inc
dec
or
testb
sti
sahf
fs
cwtl
push
pop
adc
jge
pop
pop
fimull
jle
mov
pop
scas
pop
fmulp
add
pusha
aaa
imul
leave
adc
cmp
call
jl
rorl
hlt
call
push
in
and
adc
dec
pop
push
dec
adc
cmp
scas
dec
imul
inc
mov
fwait
cmp
iret
mov
into
xor
sahf
mov
sub
or
test
push
stos
adc
push
stc
mov
xchg
jg,pt
push
fcmovnu
dec
fadd
sti
push
stos
shll
mov
icebp
add
fld
push
xchg
mov
jmp
mov
test
sarl
cli
jl
pop
or
push
fstl
popf
xchg
out
mov
roll
lea
mov
movsb
lret
sub
inc
xorl
pop
out
jae
fcompl
mov
mov
dec
add
mov
mov
int3
loopne
loope
mov
add
roll
push
jne
shll
in
xchg
imul
lods
js
push
add
mov
jl
mov
jg
push
mov
and
ret
jbe
mov
adc
dec
fdivr
mov
out
add
and
xchg
jmp
shll
xchg
cltd
push
in
and
jno
mov
out
stc
lds
fcomps
movb
divl
pop
add
scas
in
inc
and
ret
sbb
push
aaa
fwait
or
mov
mov
cltd
adc
or
mov
or
push
pop
pusha
pop
loope
test
cld
aam
mulb
addr16
scas
inc
jnp
sub
xor
inc
jl
adc
jb
idivb
cld
fdivs
fs
and
inc
add
popf
call
in
cmpsb
pop
xchg
hlt
dec
mov
jg
push
outsb
and
outsl
cmp
and
arpl
cmp
repnz
shlb
in
or
cmp
in
notb
gs
xchg
push
add
lock
daa
dec
xor
lock
imul
jae
mov
push
fcomps
inc
xchg
fnstcw
cmc
push
sti
data16
mov
rcl
subb
cmp
dec
jmp
leave
inc
scas
addl
lea
jg
data16
cmpsb
mov
hlt
sti
cmp
pop
or
mov
dec
adc
mov
mov
pop
and
stos
xor
push
imul
add
xchg
cmp
xchg
sbb
push
es
mov
ds
add
mov
les
jg
sub
mov
cmp
push
dec
imul
adc
push
mov
and
cmp
cmp
ret
psrld
cmp
mov
fistpl
icebp
xor
mov
lahf
jbe
sub
mulb
xor
pop
mov
orb
lea
mov
pop
mov
ljmp
mov
ret
cs
lods
jmp
filds
in
in
outsl
cmpl
movl
sbb
out
std
adc
push
pop
sub
or
stos
imulb
insb
lea
fdivrs
out
je
sbb
jae
mov
das
stc
pop
mov
cmp
mov
xchg
mov
mov
inc
and
inc
jg
push
repz
icebp
imul
or
loop
ja
mov
lock
sbbb
ret
inc
push
jns
and
fisttpll
mov
fidivl
fidivs
pusha
incl
push
outsl
out
scas
or
fsubl
dec
sub
out
xorl
sbb
jp
fwait
xchg
fisubrl
xlat
xchg
nop
push
xchg
daa
lea
adc
dec
push
pop
cwtl
inc
adc
sbb
xchg
shlb
adc
xchg
inc
or
int3
cmp
clc
pop
xchg
push
push
jge
and
std
sub
aas
imul
mov
idivl
adc
lret
scas
in
fs
xor
inc
push
test
into
cmc
or
in
pop
mov
stos
push
cld
aas
xor
dec
xorb
add
sbb
bound
or
and
dec
mov
xchg
in
jns
pop
mov
mov
sbb
aad
adc
lea
ja
pop
add
popa
or
adc
mov
jns
dec
sarl
lahf
xchg
add
push
in
fwait
out
test
and
fildll
ljmp
mov
xor
mov
jne
scas
pop
xchg
dec
adc
dec
mov
into
or
scas
xchg
lds
repz
pop
and
dec
hlt
or
pop
and
shl
pop
fstps
push
jl
mov
push
push
cmpsb
fcmovbe
and
push
adc
inc
repz
jle
mov
cwtl
insl
mul
jg
mov
jl
xchg
sub
jecxz
popa
sbb
inc
dec
and
mov
into
sbb
pop
fxch
out
adc
dec
jns
insl
hlt
xor
lods
sbb
push
and
pop
mov
leave
mov
jecxz
jle
dec
stc
jg
add
cwtl
out
or
add
jg
xchg
add
and
gs
pop
cwtl
test
cmp
jb
loop
cwtl
mov
gs
push
jecxz
aas
in
dec
in
jle
fisubl
std
xchg
fsubs
pusha
movsb
pusha
xorb
mov
mov
cmpsl
jp
jno
in
das
pop
mov
jmp
cmp
insb
jo
lea
ss
sub
lahf
ret
dec
test
pushf
push
push
rcrl
loope
test
push
ljmp
imul
es
xchg
dec
mov
data16
sbb
mov
js
jnp
sub
fidivl
inc
lahf
dec
mov
xor
inc
es
and
aaa
inc
ja
lock
xlat
mov
bound
mov
mov
mov
clc
sub
je
js
insb
aas
inc
dec
xchg
jp
and
inc
dec
adc
sahf
and
leave
test
mov
ds
cmp
bound
mov
add
insl
in
dec
fsubs
cltd
ffree
xlat
fsubrs
xchg
iret
mov
jmp
jo
out
pop
mov
xchg
aam
ffree
loop
push
mov
test
lds
out
addr16
scas
jle
shl
popa
lret
fucom
mov
push
dec
loop
repnz
jle
cmp
jns
jmp
lea
leave
push
add
cmpsb
ljmp
jp
pop
mov
mov
in
and
aam
xchg
shrl
push
cmp
lcall
out
mov
inc
imul
push
shrl
push
lahf
mov
and
push
leave
sahf
xor
mov
cmp
lea
sbb
add
ljmp
cmp
leave
cmc
dec
arpl
jb
push
stos
loopne
cmp
lret
push
lret
fwait
xor
sub
lcall
sahf
cltd
mov
outsl
lahf
cmpsl
xor
hlt
pushf
test
and
xchg
jne
mov
xchg
rclb
xchg
adc
int3
rclb
aad
sahf
popf
pushf
shlb
pushf
sub
inc
sub
mov
lret
cmp
xor
pop
out
add
fadds
cs
pop
jbe
cwtl
push
ljmp
mov
xchg
adc
jbe
pushf
push
jb
lret
jle
movl
add
ja
stos
into
outsl
les
loope
jo
daa
addr16
sub
loop
and
push
addr16
mov
xor
jno
std
call
sbb
mov
loop
movd
xor
sbb
xchg
outsl
je
add
pop
pop
ret
and
movsb
daa
and
mov
jl
sub
rcrl
sbb
cmp
inc
insl
pop
inc
std
cs
push
inc
out
imul
enter
adc
xchg
pop
cmp
jno
sbb
cmc
cmp
idivl
frstor
lods
sbb
jbe
jne
mov
mov
pusha
pop
adcb
sbb
mov
pop
dec
xor
jmp
mov
mov
fucom
rolb
mov
and
mov
jbe
loop
dec
popa
dec
dec
jae
xchg
lods
and
mov
leave
push
in
or
pop
jns
gs
pop
jmp
pop
push
sbb
jnp
or
push
scas
xchg
jge
jp
jns
sub
aam
scas
add
fstl
push
dec
shrb
rcrb
mov
push
icebp
mov
clc
out
mov
mov
leave
movups
sub
xor
stos
fadds
mov
in
cmp
inc
adc
popa
lea
ret
rol
jge
adc
call
repz
repnz
sbb
loope
out
dec
inc
add
arpl
mov
xchg
inc
and
pop
stc
lock
or
lds
jno
xchg
out
out
and
lods
movsb
push
cmpsb
dec
mov
or
cmpsl
arpl
cs
jno
mov
sbb
int3
shll
or
or
fnsave
popa
enter
xchg
xor
mov
test
rcrl
mov
nop
adcb
rorl
in
or
mov
cmp
repnz
push
xchg
lds
test
cmp
inc
sbb
mov
sbb
js
pop
sbb
jns
shl
xchg
xchg
call
add
decl
ss
fs
jbe
mov
nop
and
mov
dec
orb
lret
aaa
outsl
and
mov
mov
hlt
mov
shrl
xchg
lret
std
ret
fld
xchg
addr16
mov
push
mov
fisttps
into
push
aad
call
dec
cmp
push
pop
and
mov
or
and
ret
cmp
dec
jg
mov
daa
int3
mov
ret
sbb
cltd
push
in
out
mov
test
and
mov
loope
push
jg
xchg
popf
push
pop
mov
mov
and
inc
xchg
test
add
loope
mov
mov
push
insb
mov
sub
inc
clc
add
in
stc
dec
mov
cmpsb
add
rorl
clc
fsub
cltd
mov
mov
mov
mov
inc
add
lea
insl
leave
xor
outsb
inc
push
push
mov
xchg
sbb
mov
or
cmp
fsts
insb
lea
lcall
int
in
add
sbb
loop
mov
sub
xchg
mov
sub
push
dec
xchg
lock
dec
lcall
mov
cmp
add
inc
lahf
inc
jbe
mov
fmuls
mov
xor
loope
mov
push
and
ss
adc
pop
repz
fisubrs
inc
mov
in
insl
into
sbb
loopne
mov
pop
cmp
negb
lds
js
xchg
mov
sub
jecxz
pop
shlb
push
pop
ds
arpl
mov
stos
xchg
idivb
lods
pop
jb
jmp
or
fists
cmp
xchg
cmpsb
addb
shrl
sbb
mov
and
sbb
ds
repz
test
stc
fs
xchg
cmp
and
jne
push
les
push
dec
fists
xchg
mov
xchg
xchg
loope
loope
add
leave
lcall
push
lods
cmpsl
movsb
add
jg
mov
mov
and
pop
test
dec
sbb
fwait
cmc
rorl
hlt
sbb
mov
xor
aaa
adc
stos
fs
aad
pop
jmp
lock
xchg
mov
aaa
cmp
outsb
ss
mov
fwait
aas
xor
testb
adc
faddl
insl
clc
dec
push
cmpsl
pop
mov
clc
inc
xchg
jnp
or
sub
in
pushf
ror
ja
cs
sbb
das
pop
sbb
xchg
mov
add
xor
mov
push
xorl
mov
lea
rol
jmp
iret
mov
adc
es
and
fimuls
xchg
cmp
add
scas
add
int3
push
mov
sbb
jno
mov
ja
mov
dec
sbb
loope
aas
pop
sbb
aad
sub
insb
sbb
out
lds
lods
test
sbb
jno
dec
adc
mov
dec
jnp
ds
xchg
and
mov
pop
clc
mov
jge
sub
sbb
mov
push
and
nop
jecxz
xor
movsl
mov
fdivs
inc
sbb
add
ror
in
setns
daa
xchg
inc
orb
mov
sbb
or
dec
add
ds
add
lcall
int
adc
sysexit
lahf
cwtl
mov
test
lcall
cmp
shrl
cmpb
xor
and
sub
test
push
dec
shrl
out
mov
or
insb
pop
dec
cmp
push
push
jge
dec
dec
lea
jns
cmpsl
fcmove
push
sub
mov
mov
adc
pop
lcall
out
add
push
and
hlt
loopne
hlt
mov
cwtl
xchg
cltd
xchg
jmp
les
stos
jbe
shlb
xchg
cli
or
push
rcrl
pop
sub
mov
rep
orb
pop
xor
push
fisttpl
in
ja
mov
or
int3
push
loop
pop
cmp
cmp
pop
mov
xchg
cmc
iret
dec
push
pop
daa
shrb
and
push
scas
mov
in
decb
pop
pop
pop
daa
nop
fs
dec
push
mov
into
pop
jp
sub
dec
jb
jne
mov
jmp
clc
test
fsincos
cmpsb
in
xor
cmpsl
sub
jnp
dec
jecxz
inc
sub
dec
push
movsl
mov
insb
jo
fwait
insb
or
pop
imul
test
cmc
xchg
leave
jne
fidivs
jge
inc
int
jecxz
xchg
insl
inc
mov
adc
inc
add
lcall
je
push
cmc
xor
sub
mov
sti
add
scas
daa
stos
pop
xor
lea
mov
cmp
cli
pushf
sar
ret
mov
mov
icebp
leave
or
xchg
mov
cmp
pushf
sub
xchg
fmull
popf
addr16
xor
mov
adc
inc
fistpl
scas
mov
cmp
aam
rorb
fiaddl
stos
dec
cmp
cmp
pop
jecxz
cmp
in
daa
mov
jae
sbb
decl
outsb
pop
dec
xor
mov
cmp
and
xor
ja
subb
movswl
mov
out
sbb
lret
icebp
dec
stos
xchg
ds
inc
stos
jecxz
rorb
inc
sub
lods
int
mov
fimull
pop
mov
sti
hlt
adc
xor
jae
xchg
cli
cmp
inc
dec
mov
int3
repnz
dec
sub
jle
mov
mov
cmp
stc
pop
or
inc
sbb
push
cs
inc
scas
test
mov
xchg
mov
inc
lds
jl
jmp
jmp
dec
xchg
aaa
cmp
fwait
adcl
sti
out
xchg
xchg
mov
fiadds
cmp
pop
es
lret
push
std
cmp
inc
ss
xor
bound
or
dec
lcall
push
push
push
ret
loope
ljmp
xchg
lahf
and
daa
add
test
fwait
or
std
insl
sbb
lcall
adc
xor
or
cmp
or
jno
push
inc
mov
mov
xchg
icebp
xchg
sbb
cmpsl
mov
imul
mov
ja
les
insl
test
out
insb
in
add
cmp
iret
jecxz
ds
mov
pop
inc
xor
xor
in
sbb
add
xchg
leave
mov
cmpsb
movsb
popf
push
xor
imul
cmp
enter
test
jg
arpl
xchg
xor
sti
ljmp
mov
lcall
in
loop
icebp
mov
xchg
xchg
and
add
arpl
call
imul
loope
std
sub
sbb
cmpsl
and
xor
lahf
scas
testl
pop
subl
popa
cmp
rcrl
pop
inc
jge
shlb
push
push
inc
testb
shll
pop
xlat
push
clc
pusha
out
push
sub
int
lahf
stos
shlb
add
or
dec
adc
jmp
sub
xchg
mov
mov
and
pop
jnp
neg
cmp
or
repz
sarl
lods
stc
sbb
or
push
sub
fwait
ds
mov
insl
add
stc
mov
sub
cmp
pop
shl
insb
fistpl
mov
lods
nop
mov
sbb
sbb
iret
std
cs
lds
fsubr
scas
dec
sub
in
push
out
filds
ffree
adc
fdivrs
call
subb
das
jl
dec
mov
mov
fs
fiadds
test
fidivrl
mov
jne
xor
js
js
sub
lods
mov
push
xor
daa
or
leave
adc
lahf
fld
rolb
fldt
ficomps
fisttpl
mov
stos
add
push
dec
push
or
std
xlat
insb
lock
out
mov
sbb
add
dec
rorl
fwait
mov
push
sti
std
add
jp
and
add
sub
and
sti
popf
or
add
cwtl
mov
push
call
dec
add
mov
int
add
in
dec
push
jp
shlb
fists
pop
je
fiaddl
sbb
insb
push
xor
repnz
test
ror
sub
sub
sbb
sub
jbe
push
add
cmp
add
jb
cmpl
mov
push
push
mov
or
pop
idivl
mov
fildl
sub
inc
addr16
out
aam
or
notb
add
sbb
jb
and
pop
pusha
mov
ficoml
movsl
dec
arpl
in
push
int
adc
mov
cld
xchg
pop
sti
adc
add
clc
sbb
inc
mov
dec
sub
mov
mov
aad
dec
sbb
ds
jb
and
lock
jle
pop
adc
clc
out
sbb
sub
lods
je
push
sub
cmp
lods
pop
inc
test
inc
scas
loop
jmp
sti
pop
xchg
nop
pop
push
mov
and
adcl
repnz
ljmp
add
loope
adc
xchg
mov
sti
or
test
or
mov
mov
insl
push
mov
mov
push
mov
mov
add
gs
push
push
xor
repnz
fstpt
in
jnp
dec
and
scas
mov
mov
mov
cmpb
and
pop
inc
mov
adc
clc
fistps
outsb
or
lods
mov
jecxz
mov
fcomi
ret
jg
xor
add
add
add
mov
sarb
sarl
jnp
sbb
ja
push
pop
sub
es
in
test
ret
sti
fwait
stos
xchg
fcmovb
out
ds
ret
mov
cmp
dec
iret
and
aad
inc
sub
lahf
xchg
push
inc
xchg
addr16
dec
cmp
push
push
sub
pop
push
cmp
push
or
adc
and
sub
and
mov
lret
pop
cltd
lods
mov
push
xor
in
push
mov
adc
scas
mov
mov
xchg
sbb
jno
pop
add
gs
xchg
outsl
pop
jmp
ret
and
ret
repz
xchg
mov
sbb
adc
shll
xchg
fadd
jae
xor
cmp
test
int3
or
subb
and
imul
rcrl
pop
aas
xchg
or
negb
mov
add
xchg
nop
jle
addl
jbe
mov
scas
js
xlat
mov
or
inc
test
pop
jb
cld
shll
fcomip
repnz
out
pop
mov
inc
xchg
rorl
sub
test
inc
and
jbe,pn
daa
and
inc
push
add
mov
nop
mull
xchg
mov
sub
js
xchg
fwait
ds
jecxz
lods
testb
fsubrl
add
scas
lret
data16
or
mov
cmpsb
and
enter
loope
inc
pushf
sbb
int
nop
cmc
push
dec
jmp
inc
xor
scas
loope
push
ret
and
call
stos
push
push
lods
push
cmp
mov
or
pushf
pop
mov
outsb
mov
jnp
ja
push
xchg
mov
xlat
fsubl
push
xor
jae
jb
cmp
add
mov
fldt
jg
mov
scas
test
addb
add
cwtl
clc
test
imul
in
inc
push
and
sbb
in
push
pop
ljmp
xchg
adc
mov
pop
adc
outsl
adc
mov
ja
pushf
inc
jecxz
outsb
xchg
stos
outsl
mov
cltd
pop
xchg
push
mov
push
and
outsl
xor
xor
mov
and
sub
es
jne
add
pushl
mov
or
or
push
outsb
adc
xchg
dec
and
dec
or
fisttpl
mov
jle
dec
or
xchg
stc
cmpsb
sub
lcall
mov
push
add
dec
insl
aam
xchg
icebp
out
test
dec
sbb
jo
repz
add
adc
mov
xlat
xor
mov
pop
arpl
lret
push
mov
cld
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
lods
jle
cmp
or
jp
lret
jle
push
mov
adc
leave
movsb
jecxz
fwait
jmp
test
jne
and
rol
ret
aad
mov
movsb
push
jbe
dec
add
je
mov
xor
adcb
adc
pushf
sbb
test
mov
xchg
mov
mov
sbb
sub
sbb
jns
sbb
outsl
js
dec
in
fadd
std
sbb
test
push
mov
mov
pop
mov
sahf
jg
xchg
pop
outsb
xor
lock
xor
inc
and
push
fsubrl
andl
jl
sbb
sti
jb
add
dec
sbb
sbb
into
cmpsb
mov
cli
scas
jo
imul
and
xchg
loope
aas
cmc
pop
jae
mov
enter
popf
mov
mov
pop
xchg
aam
sbbb
push
mov
and
cmpsl
mov
scas
adc
repz
fnstcw
mov
es
pop
es
iret
and
jmp
jecxz
mov
nop
mov
xlat
fnsave
in
bound
cmp
lahf
je
stos
or
int3
ja
sub
jmp
xchg
loope
push
ja
inc
mov
int3
iret
cmpl
maskmovq
idivl
mov
and
pop
das
stc
push
inc
outsb
ljmp
aas
js
pop
addr16
mov
hlt
jne
rcll
cld
dec
aaa
js
popf
mov
cltd
mov
mov
xchg
push
repz
js
jge
fsubs
xor
push
mov
icebp
mov
xchg
pop
add
jb
daa
and
clc
pushf
stos
or
nop
mov
andl
pushf
pop
jne
or
pushf
mov
aaa
cltd
ret
lds
daa
pop
xchg
out
lahf
test
push
std
push
mov
popf
xor
lds
repz
dec
xchg
rclb
pop
imul
lahf
mov
mov
int3
push
and
stos
inc
in
pop
repz
stos
adc
adc
fcoms
mov
lds
es
aad
push
xchg
inc
mov
je
push
xor
push
xor
js
rcll
dec
fisttpl
jae
cwtl
push
push
dec
in
movsl
faddl
cmpl
scas
add
mov
cmp
aaa
cmp
jg
adc
btl
xchg
mov
dec
lret
mov
cmp
sub
scas
jle
mov
sbbl
xchg
or
inc
call
test
fildl
or
push
jne
js
xor
mov
clc
dec
cmp
ret
fsts
xchg
jno
shrl
popa
pop
dec
bnd
movsl
addr16
cmp
jnp
stc
inc
dec
sbb
mov
out
mov
inc
jbe
mov
push
add
mov
insl
mov
inc
fidivrl
adc
jnp
cmc
loop
jp
adc
and
sarb
fcoms
push
gs
rorb
inc
mov
cmp
sub
insl
bound
dec
mov
inc
loop
lock
mov
sbbl
xchg
lcall
xor
xchg
mov
nop
and
or
lret
jne
xchg
ss
int3
dec
orb
adc
mov
rorb
pop
bound
add
ret
test
mov
mov
inc
pop
add
int3
in
cltd
int
mov
add
lret
aam
data16
movsl
sbb
pop
cmp
ds
aam
ja
pop
ret
call
int
stos
xchg
imul
mov
sub
pusha
add
imul
mov
and
push
popl
mov
aad
push
insb
sub
imull
cs
arpl
jmp
insl
les
fsubrs
cmp
out
iret
sub
push
cmc
jne
cmpsl
bound
add
lods
mov
scas
push
out
inc
sbb
enter
mov
xchg
or
push
and
aad
xor
dec
dec
std
and
push
xchg
xor
add
sub
xor
lcall
dec
add
and
and
push
add
sub
inc
lock
push
faddp
mov
out
lods
or
sbbl
jbe
lock
lea
and
dec
std
jae
popf
jae
insb
jae
cs
sbb
jae
mov
push
push
mov
enter
push
add
push
cmp
jle
cld
xchg
mov
inc
add
fildll
xor
dec
repz
xchg
test
or
xchg
in
fst
push
mov
testl
cmp
orb
mov
mov
push
or
sbb
lcall
rcll
out
aam
clc
mov
je
lods
sbb
clc
ret
addb
adc
dec
mov
sub
icebp
sub
and
adc
push
xchg
xchg
loope
mov
pop
in
outsb
gs
rorb
fstpt
inc
dec
lret
ret
mov
jle
hlt
dec
mov
sub
fildl
xchg
add
sub
sub
dec
mov
int3
mov
dec
sti
push
je
repz
cmpsl
add
or
push
and
mov
xor
jo
rolb
adc
ret
cmp
iret
jge
sbbl
lret
jns
adc
cltd
mov
aas
add
xchg
je
add
ds
out
shlb
and
scas
shlb
cwtl
mov
xchg
pushf
pop
xor
xlat
scas
xchg
pop
push
and
jmp
add
test
sub
std
pop
mov
scas
mov
push
mov
lea
mov
jle
lods
jmp
fwait
mov
jns
popa
or
and
adc
xchg
flds
jns
inc
mov
mov
cmpsb
xchg
hlt
ja
iret
scas
dec
inc
lods
or
inc
pop
sbb
ret
stc
mov
xor
call
push
pop
xchg
daa
int
cmpsl
pop
xor
adc
jl
dec
lret
mov
pop
and
test
xor
std
rolb
in
out
inc
xor
lods
roll
arpl
scas
xorb
scas
push
jae
sbb
les
pop
out
cmp
sbb
or
or
cltd
das
test
out
sar
fsubs
mov
cmpsb
dec
bound
rol
adcb
push
test
imul
fstps
inc
sbb
fistpll
gs
test
jno
sbb
insb
dec
push
mov
dec
loopne
push
cmpsb
cmp
dec
test
or
test
mov
xchg
jmp
ret
mov
or
xchg
iret
lds
jb
mov
dec
jg
jae
je
out
add
and
sbb
cltd
cmp
push
sub
and
sub
fsubrs
mov
jnp
xor
fisubrs
cmp
push
je
xor
pop
sti
call
cltd
lret
fstl
dec
dec
sub
iret
data16
loop
pop
ds
fwait
dec
xchg
mov
or
jp
sbb
rcrl
scas
pop
push
in
xchg
mov
fwait
sbb
or
dec
shll
loopne
hlt
cmp
push
pop
data16
xchg
cmp
iret
push
adc
sub
jmp
pop
fs
sub
loope
mov
dec
rdtsc
iret
repnz
loope
aad
mov
repnz
fidivs
fmull
xchg
pop
adc
mov
iret
ret
push
dec
rolb
adc
ja
fists
mov
push
sub
push
loopne
adc
lahf
cwtl
sbb
ljmp
cmp
into
or
add
popf
imul
add
push
int
out
sub
inc
ds
jae
jp
aas
jae
pop
jg
gs
nop
aad
lea
inc
cmpsl
jbe
cmp
pushf
int3
iret
fisubrl
jae
int3
daa
mov
xor
ss
push
ror
imul
lds
cmpsl
mov
xchg
xlat
out
fsts
mov
mov
cmpsb
or
jg
or
lahf
adc
mov
push
xor
outsl
xchg
pop
adc
pop
mov
mov
push
or
push
pop
xchg
ret
cmovns
cmp
pop
outsl
pusha
hlt
xor
test
test
enter
xor
sub
and
or
jae
xchg
movsb
enter
shll
xchg
pushf
out
fwait
push
push
inc
inc
or
imul
xchg
pop
and
jge
mov
test
mov
iret
sahf
out
cmpsl
std
fwait
jge
outsl
adc
stos
ret
mov
adc
or
adc
rclb
lahf
jo
dec
sub
pop
jb
xor
nop
xchg
test
out
outsl
sbb
or
cmpsb
jns
adc
popa
hlt
add
repnz
and
fldcw
push
jecxz
push
sti
xor
and
jp
dec
scas
jb
je
cmp
push
mull
or
orb
xor
add
adc
push
outsb
outsb
in
jno
pop
mov
sub
jmp
or
fidivrl
pop
out
mov
inc
sbb
shl
xchg
adc
outsl
je
lock
and
imul
jmp
fistpl
adc
shlb
fnstsw
sbb
xor
stc
adcb
pop
arpl
xor
stos
fidivl
inc
mov
int
pop
add
sbb
neg
gs
push
mov
or
les
jo
mov
adc
pop
inc
jmp
xor
jns
pop
btc
stos
das
ror
in
insb
clc
mov
push
test
test
mov
pop
lods
cmc
into
adc
aaa
lret
outsb
gs
pop
lea
cltd
adc
and
adc
lds
std
mov
nop
jo
out
sub
xor
and
sarb
rcrl
sbb
adc
jnp
xchg
out
push
mov
out
xchg
ds
fbstp
mov
dec
fldcw
jecxz
sub
dec
mov
sub
cwtl
cwtl
stos
repz
adc
std
push
jbe
imulb
cmpsb
mov
sahf
push
in
fadds
pop
out
push
imul
add
ret
jne
xor
mov
cs
mov
shl
dec
cmp
add
mov
imul
insl
jb
hlt
mov
push
test
xor
shrl
xchg
sub
repz
cwtl
test
out
and
pushf
bound
jmp
out
jae,pn
test
std
jmp
mov
in
jne
fwait
das
fldenv
out
cli
jns
out
and
mov
fstps
cmp
pop
sbb
jge
lret
pop
enter
mov
lock
aas
mov
adcl
mov
lcall
sahf
push
add
inc
inc
pop
testl
mov
sbb
lock
mov
pop
mov
in
lods
call
or
sub
push
syscall
lret
adc
add
cli
or
inc
xchg
lcall
test
cltd
jmp
sbb
hlt
ret
or
and
je
fmuls
xor
arpl
mov
cmp
push
fisttpl
es
adc
push
fcom
push
mov
jns
xor
dec
cltd
jecxz
out
mov
adc
jge
stos
rcl
rolb
enter
and
ror
cmp
lock
jo
clc
mov
lret
daa
pop
xor
scas
pop
lods
out
push
inc
jbe
push
or
cmp
lret
inc
cmp
repnz
rcll
call
push
out
sub
pop
sub
push
jmp
add
movsl
sub
cltd
mov
subb
scas
add
sti
and
negb
fildll
shl
lds
pop
rcrb
fs
inc
sahf
or
push
cmp
inc
ficomps
mov
lds
ret
mov
int3
jno
ds
or
mov
movl
call
sub
js
mov
lret
push
cmp
mov
out
insb
stos
mov
ret
sbb
mov
sbb
pop
sub
mov
cwtl
mov
clc
or
mov
out
mov
sbb
jae
aaa
inc
xor
inc
jp
mov
les
xchg
pop
jg
and
jg
pop
frstor
fimuls
push
repz
add
adc
push
jo
lret
lea
dec
in
or
call
fcomi
addr16
data16
loopne
mov
out
insl
loopne
mov
hlt
mov
inc
jo
cmpsl
gs
bound
dec
aaa
int
incl
pop
inc
mov
mov
cmp
add
xor
mov
lea
jl
push
adc
je
xorl
loop
xchg
and
push
mov
xadd
mov
xchg
mov
xor
adc
mov
fucomp
rcrb
xlat
mov
bndstx
ficoms
sub
ret
cmpsb
ss
add
nop
sub
add
and
mov
jle
dec
push
in
mov
or
sub
xor
cmp
or
pop
inc
gs
pop
dec
cmc
or
lea
out
jns
rcl
mov
xor
jbe
pop
push
add
ror
dec
and
test
movsb
add
testb
popf
sub
mov
sub
lock
scas
imul
cmpsb
es
cmpsb
or
mov
inc
mov
ljmp
sbb
mov
sub
fimuls
push
mov
aam
jnp
imul
into
fucomp
add
jge
fldt
adc
mov
push
out
fstl
popa
addr16
les
adc
and
dec
outsl
addr16
sbb
xchg
test
xor
jmp
mov
add
push
jmp
cld
flds
adc
and
arpl
sbb
fildl
fdivrl
pop
js
stos
iret
out
ret
inc
add
and
rolb
je
sub
mov
cmc
mov
fsubr
gs
shl
and
enter
lea
push
dec
in
std
test
adc
push
add
les
stc
sub
and
xor
ficoms
lods
je
pop
fs
xchg
xorb
int3
cmpsl
mov
bound
stos
enter
fistpl
insb
mov
push
push
sbb
and
in
les
or
pop
gs
ret
sub
cwtl
xor
insb
xor
xor
jo
insb
and
jmp
sbb
pop
mov
fwait
cmp
adc
pusha
pushf
jl
mov
frstor
inc
aad
mov
sbb
push
push
fcmovne
mulb
pop
xorb
cli
xor
pop
push
repz
out
lods
sbb
xor
orl
push
xchg
cmp
lds
mov
fcom
fwait
push
cmp
add
pusha
das
andb
les
inc
in
mov
xchg
test
push
pop
pop
fwait
repnz
into
repz
pop
enter
mov
xchg
iret
inc
adc
icebp
sub
xor
stos
out
jge
dec
ljmp
ret
adc
nop
pop
ljmp
call
mov
mov
and
jbe
mov
xchg
or
out
fdivl
test
ret
pop
cmp
xchg
pop
pop
dec
mov
lods
loope
ja
jnp
push
xchg
sarb
sub
pop
pushf
mov
pop
cmp
cmp
in
xor
sahf
jg
mov
stc
repz
mov
push
or
pop
mov
push
jnp
mov
or
cmp
xchg
subb
pop
lcall
std
stc
mov
fcmovnb
jb
leave
lret
xorl
cmp
loop
or
or
sbb
mov
flds
pusha
sub
jb
jno
jo
icebp
test
popa
or
fwait
adc
inc
test
mov
push
les
dec
notb
js
rorl
shr
mov
jmp
mov
add
int3
pusha
mov
mov
test
cwtl
mov
je
mov
ds
sti
aaa
xchg
xchg
pop
in
dec
and
push
fisubl
rcl
stos
rorb
cmp
iret
ja
clc
push
lea
adc
push
adc
pop
push
xchg
cmp
sbb
push
mov
decl
cmc
cli
dec
movsl
nop
rclb
fldln2
or
push
mov
mov
int
loope
mov
mov
xor
jge
cmp
test
movsl
sbb
cmpsb
dec
in
mov
or
repnz
idivb
mov
mov
int3
lret
fimull
or
mov
push
cmp
inc
xor
xchg
notb
push
xchg
mov
or
sbb
jno
dec
cwtl
shr
ss
push
inc
push
dec
enter
hlt
jle
inc
in
test
xchg
jg
nop
jge
das
xchg
mov
push
add
enter
bswap
cmc
mov
xor
cmp
jle
pop
aam
mov
int
and
or
ror
mov
imul
scas
int
dec
popa
negl
mov
xchg
popa
cli
and
mov
cs
inc
cmc
jne
mov
inc
mov
mov
subl
andl
xorb
ja
sahf
in
mov
dec
sub
ret
shll
mov
jecxz
mov
rolb
fbld
sti
mov
inc
pop
repz
push
dec
dec
mov
das
mov
xor
pop
push
imul
notb
pop
cmp
jmp
cmpsl
daa
sub
pop
je
push
cmp
jle
push
push
xor
adc
mov
adc
loopne
out
ror
arpl
test
leave
in
enter
or
cmpsl
lahf
jns
lods
xor
pop
mov
and
xlat
dec
aam
jl
mov
leave
lret
pop
bound
sarl
dec
dec
push
jg
jecxz
gs
jl
nop
sbb
xlat
add
rorb
lods
mov
pusha
xchg
fcmovne
sub
and
out
lcall
lds
or
push
mov
fsubr
xor
aaa
adc
pop
fnstenv
je
cmpsb
push
je
jl
sub
xor
push
jp
testl
mov
loope
jmp
testl
movsl
push
mov
pop
inc
lcall
adc
sbb
sbb
xchg
sbb
movsb
fsubrs
out
arpl
cli
or
cmp
ds
xor
cmpsl
mov
mov
imul
addb
xor
and
loope
or
stc
pop
pop
dec
stos
sbb
fwait
mov
nopl
lret
aas
fs
ret
xchg
fndisi(8087
dec
fisttpll
jl
ja
pop
push
cmp
fisubrs
xchg
xchg
lods
pop
sbb
xchg
in
fdivrs
loop
sbb
jbe,pn
andl
rclb
rcl
ret
aad
mov
std
sahf
and
cmp
mov
inc
push
and
jno
idiv
push
push
insl
fstpl
xor
xor
or
vphadduwq
out
and
nop
sbb
adcb
icebp
arpl
sub
test
movups
ja
shr
mov
daa
and
push
shr
jbe
into
jg
push
mov
sub
mov
in
xchg
jae
push
cld
sbb
imul
fists
jmp
inc
xchg
stc
sbb
mov
push
fcmovnu
fsubrl
mov
and
rorb
icebp
lahf
pusha
sbb
ss
aad
sbb
mov
stc
fidivrl
mov
decb
gs
and
push
gs
mov
into
nop
bound
nop
xor
add
lods
xchg
fstps
cmpsb
sti
shl
cltd
xchg
outsl
cmp
stos
gs
icebp
test
rolb
adc
add
mov
pop
or
add
jbe
inc
fnstsw
call
leave
mov
cmp
fdivrl
addb
pop
xchg
cs
or
les
stos
sub
sub
aad
nop
and
jns
movsl
mov
or
hlt
xchg
stc
imul
fisttpl
loop
insb
pop
out
stos
inc
icebp
arpl
leave
dec
ljmp
test
mov
jl
imul
or
or
adc
mov
call
pop
imul
sbb
jecxz
fmul
cld
gs
pop
or
sbb
jg
sbb
hlt
in
push
in
dec
test
xchg
add
movsl
fldcw
pop
lret
xchg
icebp
arpl
jae
je
lods
sbb
mov
dec
sub
adc
fimull
or
ret
xchg
movsl
dec
jecxz
mov
push
out
xchg
sub
test
rorl
jg
add
fwait
sti
pop
sbb
jge
sbb
lods
or
pop
xor
sti
or
push
push
mov
test
sbb
or
daa
xchg
sub
in
repz
pop
push
adc
ss
dec
jmp
lret
pop
jo
inc
sarb
call
scas
nop
or
sbb
jmp
testl
lds
in
cmp
std
pop
pop
and
fwait
push
and
jl
push
gs
cmp
scas
lods
sub
scas
adc
inc
rorb
pusha
mov
dec
bound
arpl
inc
pop
incl
popa
fisttpll
mov
sub
pop
dec
ds
movsb
arpl
mov
push
sub
mov
xorb
adc
lods
lea
add
rol
mov
inc
sbb
add
push
dec
mov
into
cmc
scas
frstor
sbb
imul
xchg
cwtl
in
inc
push
movntps
jle
xchg
fildl
mov
mov
mov
sub
xor
jno
sub
addr16
sbb
adc
mov
loopne
sbb
iret
pop
cmp
push
and
stc
popa
add
dec
leave
shlb
jae
into
pop
shrb
mov
cmp
test
icebp
stc
mov
movsb
andb
arpl
insl
imull
dec
sbb
stos
dec
adc
lahf
mov
mov
cwtl
testb
mov
push
sbb
or
jl
and
repnz
jl
xor
out
push
jl
cmp
scas
push
addr16
adc
xor
lret
push
cmp
sbbb
cmp
jp
and
xor
sub
sbb
mov
push
or
scas
or
add
add
je
push
xchg
out
mov
shlb
add
push
pop
or
xchg
mov
fidivs
dec
lret
shrl
pop
ss
sbbl
pop
mov
repz
mov
cmp
mov
sbb
aad
push
push
cmpsb
fst
mov
sti
lcall
inc
insb
mov
mov
push
push
loopne
xchg
mov
ror
mov
loopne
es
push
inc
mov
mov
hlt
test
cmp
and
cwtl
jo
or
jo
mov
cmpsl
dec
jg
xor
adc
sub
mov
outsl
lea
fwait
sub
add
mov
mulb
inc
lret
imul
pop
sbb
mov
cld
push
xor
les
adc
scas
add
ror
or
nop
in
adc
push
cmp
adc
aam
lods
mov
pop
in
cmc
in
and
xor
addb
popa
sbb
js
leave
js
jae
mov
xlat
rorb
and
dec
sub
mov
xchg
dec
or
insb
cltd
pusha
sti
imul
mov
add
cmp
cld
shr
cmp
call
cmp
loope
sub
dec
test
hlt
push
test
cmpsb
negb
pushf
xchg
sbb
les
out
lds
fistpl
adc
add
xor
loopne
rcrb
bnd
add
fidivrl
loopne
pop
shl
cmpsb
mov
jmp
pop
arpl
popf
dec
cld
outsb
clc
setnp
push
shll
or
das
dec
ret
ss
outsb
xor
cmp
cmp
or
addl
lret
pop
ljmp
xor
xor
add
lods
rcrl
mov
outsb
popf
aaa
inc
lret
arpl
aad
ret
sbb
mov
loopne
or
mov
mov
dec
int3
fs
data16
mov
lcall
sub
jne
add
js
lret
pop
loop
arpl
out
in
shlb
aam
adc
dec
push
dec
or
aad
cmpsl
leave
test
jne
mov
sbb
bound
sahf
mov
ljmp
sub
pushf
adc
xchg
aaa
xchg
mov
mov
in
adc
int3
mov
ljmp
shrd
sti
testb
adc
adc
pop
add
sar
in
push
pop
gs
hlt
enter
jnp
sbb
lahf
adc
xchg
lcall
push
vpslld
aam
jae
adc
aam
or
testb
js
je
rol
das
lcall
xor
imul
js
scas
inc
xchg
ljmp
test
shrb
xchg
ds
adc
in
jmp
mov
cmp
pop
sti
test
mov
jnp
repnz
push
sub
mov
movsl
aam
lods
aaa
jae
mov
sub
dec
cmp
sub
test
sbb
ret
sbb
mov
cli
mov
and
or
out
adc
or
mov
shlb
dec
jge
out
mov
in
fstpt
mov
test
adc
negl
mov
cmpsb
add
je
lcall
mov
negb
es
sub
inc
xchg
pop
clc
inc
push
mov
mov
xor
and
cmpl
xor
clc
divb
jge
xchg
sahf
push
inc
add
xlat
push
mov
ss
pop
jmp
arpl
or
mov
std
leave
loope
xchg
inc
pop
fs
insl
cmpsb
in
jge
jg
mov
push
clc
push
mov
sbb
loopne
xchg
lcall
jge
sbb
aad
sbb
test
dec
clc
mov
imul
or
jecxz
lcall
andb
inc
adc
stos
mov
pushf
dec
dec
into
add
cltd
sbbl
stos
ret
fstl
xchg
aad
jecxz
jno
add
es
imul
jl
lret
imul
testl
cmp
idivl
pushf
test
fisttpll
ret
fadd
rcr
cmpsl
mov
pop
out
jns
xchg
sti
loope
cmpsl
jl
cli
sub
sub
sahf
push
imul
out
imul
sbb
ja
sbbl
dec
fs
xchg
jg
fldl
xchg
xor
pop
nop
fwait
jl
xor
push
fs
xor
xchg
sbb
gs
repz
push
pop
mov
add
cmpsb
adc
dec
int3
out
jnp
rol
push
mov
test
pop
pop
and
pusha
push
ja
pop
xlat
fsubrl
xor
adc
shll
inc
sub
dec
jmp
fs
cmp
ficompl
mov
dec
cltd
xorl
mov
inc
enter
enter
cmp
mov
cmp
ss
adc
or
ljmp
sub
lods
jb
pop
sbb
frndint
sbb
push
sahf
adc
scas
imul
inc
andl
into
fildl
mov
outsb
dec
push
in
stos
insl
jl
in
data16
test
pop
add
das
icebp
lock
adc
cmp
lock
or
pop
mov
fidivrs
xchg
adc
pop
or
in
dec
inc
fnstenv
push
xor
adc
mov
cmp
inc
jg
sub
stos
outsl
ja
sbb
push
jecxz
outsl
mov
or
pavgb
mov
mov
jbe
jp
or
inc
movsb
int
in
jb
lods
jb
pop
sti
hlt
sbb
in
mov
adc
pushf
xor
je
fidivrl
stos
jl
pop
jns
sub
out
mov
mov
xchg
lods
movsb
push
jg
xchg
jge
adc
xor
pop
int
insl
and
jmp
cmp
int
data16
ret
jl
jp
pop
lahf
mov
mov
jge
divl
xlat
pop
mov
aam
mov
xchg
or
push
out
scas
cmpsb
vucomiss
sbb
iret
mov
dec
pop
aam
leave
mov
gs
jo
pop
adc
sub
ljmp
mov
xchg
sbbl
mov
cmpb
jns
imul
jmp
les
mov
jns
in
or
xchg
out
ret
adc
vmovupd
in
pop
icebp
int3
rcrl
xchg
adc
sbb
mov
inc
inc
jnp
add
daa
mov
adc
sub
xchg
pushf
mov
inc
es
pop
jle
cmp
movsb
mov
aas
adc
cs
shrb
std
cwtl
inc
insb
push
sbb
loop
jbe
cmp
pop
mov
adc
fsubs
pop
jbe
push
test
xor
rcll
push
out
inc
popa
fs
xor
aaa
arpl
icebp
sbb
or
cltd
mov
inc
pop
mov
inc
push
mov
jp
mov
cli
xchg
jg
divb
in
and
jmp
mov
mov
xlat
mov
das
jo
loop
jl
ds
and
js
push
mov
fsubrs
or
inc
mov
cmpsl
or
mov
add
fidivrs
adc
adc
adc
int3
shll
pop
mov
scas
fnstcw
int3
rclb
pushf
int3
jmp
pop
hlt
mov
mov
inc
cli
adc
test
lods
test
inc
push
ss
push
bound
jecxz
push
leave
and
subb
ficoml
sbb
push
jle
subb
jne
jg
je
adc
int3
push
mov
xchg
loopne
jae
dec
test
lea
sub
mov
jne
int
pop
mov
ja
dec
movsl
movsb
loop
dec
loope
mov
mov
loope
pop
inc
int3
insb
enter
leave
push
sub
lods
cwtl
fsubrl
cmc
cmp
and
sti
lret
and
pop
test
fistpl
dec
fidivrl
add
cmp
in
leave
lods
mov
in
mov
xor
dec
jbe
arpl
mov
pop
sub
cmp
and
adc
cmp
and
xor
scas
rorb
jmp
lret
mov
sti
sub
stos
scas
xor
and
in
and
inc
test
adc
mov
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
inc
dec
lods
add
pop
jp
mov
aaa
in
sub
movsl
pushf
mov
or
push
arpl
je
mov
sub
xor
test
adc
cmp
int3
jg
pop
cld
sti
push
pop
sub
popa
popf
lea
lahf
fcoml
cltd
mov
mov
push
add
mov
jp
dec
dec
loopne
sbb
mov
jnp
sbb
lods
cmp
pop
mov
jg
xchg
shl
dec
dec
dec
cmp
adc
loopne
push
iret
dec
fsubs
mov
mov
push
test
ficoml
adc
mov
and
ss
ljmp
mov
pop
es
outsl
rorl
cmp
cmp
call
imull
aad
xchg
push
adc
mov
popf
shrl
and
cs
cmc
sbb
inc
addr16
jmp
fsubp
xchg
pop
stc
jbe
pop
inc
jne
cmpsl
lret
push
jb
fldenv
fimull
ret
xchg
sbb
lcall
into
shlb
inc
sbb
jle
lods
gs
dec
shl
jmp
rcr
sbb
pop
sbb
inc
inc
add
cs
inc
mov
push
or
and
jle
and
xchg
shlb
mov
push
inc
movups
ljmp
sub
adc
or
mov
jmp
xchg
std
add
dec
mov
in
pop
shlb
push
lds
sarb
mov
stc
lret
mov
xorl
dec
jbe
imul
inc
loopne
test
fcmove
xchg
mov
insl
pop
pop
push
pop
add
xor
xchg
test
and
sbbl
jns
mov
push
mov
dec
cld
hlt
les
mov
add
pushf
lcall
sbb
push
fsubrs
sbb
and
popf
adc
jne
xchg
ds
adc
xor
cltd
jmp
mov
push
ud1
jo
dec
or
pop
lea
jp
push
xchg
or
add
pushl
cli
int
sub
popf
mov
xlat
pushf
cld
sub
lds
cwtl
imul
jb
pop
ret
and
inc
dec
insb
rcll
lahf
mov
push
mov
data16
mov
test
mov
adc
add
imul
push
into
out
in
jg
push
jecxz
mov
enter
sarl
xchg
and
and
push
mov
iret
insb
inc
mov
sub
add
test
test
pop
lret
mov
push
je
sub
pop
call
lahf
icebp
sbb
lock
out
jg
bound
cmp
cs
jbe
fdivs
ret
add
pusha
xor
inc
xchg
orl
inc
adc
mov
lcall
ror
loopne
sub
rep
sbb
pusha
ss
push
or
pop
push
cmp
cmp
iret
add
push
ret
mov
addr16
cmc
shrb
push
into
push
testl
mov
jle
cmpsb
cli
dec
dec
cmp
in
popa
sbb
daa
scas
adc
dec
cmp
loopne
clc
das
push
add
push
je
mov
popw
gs
pop
ljmp
movsl
pushf
repz
inc
repz
push
mov
lcall
mov
sbb
cmp
xchg
stc
sbb
dec
xchg
sbbb
cli
or
inc
fs
sbb
clc
out
jb
and
imul
and
dec
dec
jecxz
dec
mov
lods
push
mov
inc
int3
js
xor
sbb
call
sbb
adc
test
mov
jne
xchg
push
inc
mov
pop
iret
pop
sub
inc
fidivl
es
fidivs
lea
loopne
in
not
movsb
nop
cmp
push
pop
mov
pop
decb
sub
add
mov
rcrl
lcall
inc
jl
xor
pop
adcl
pop
stos
dec
in
jns
xor
adc
dec
int
pop
into
cli
aas
sbb
mov
mov
je
xchg
jecxz
call
cmp
pop
jl
imul
lods
outsl
loop
in
out
sti
leave
int
mov
push
repnz
push
mov
les
jno
les
leave
in
jnp
push
sbb
test
xchg
fs
pop
divl
sbb
jp
sbb
add
and
push
repz
adc
outsb
mov
clc
mov
add
push
xchg
xchg
addl
leave
ret
pop
loop
nop
psubb
leave
popf
mov
sub
dec
out
mov
repz
fnstenv
mov
jae
cmp
fbld
push
or
addr16
mov
mov
std
call
mov
outsb
mov
cli
and
lds
mov
and
testl
sub
idivb
jmp
les
sub
push
add
rol
es
ret
add
push
cmp
mov
sub
out
dec
or
sub
xor
xchg
xor
sbb
in
fcmovnu
dec
cmp
push
rcl
lock
or
repnz
clc
test
lcall
pop
out
scas
es
stos
rcr
xchg
and
out
fisubrs
iret
jbe
into
call
push
pop
adc
add
loopne
push
mov
add
mov
mov
loopne
adc
bnd
lds
or
cmp
sbb
notl
push
mov
xchg
jns
sbb
ds
pop
insl
popa
xchg
imul
jl
int
xor
stos
mov
scas
call
test
or
cmpsl
mov
xor
xchg
icebp
cmc
lock
add
mov
or
nop
pop
addl
daa
das
sub
jae
pop
mov
sbb
shrb
mov
push
and
leave
and
inc
cs
jne
int3
mov
and
xchg
fcmovnb
or
mov
cmpsl
sti
popf
arpl
mov
add
and
js
in
sbb
cmp
nop
xor
leave
pop
pop
inc
fwait
cmp
fsubp
xor
and
es
mov
movsl
int
sbb
in
lock
and
mov
mov
cmp
call
jl
push
int3
jae
dec
ja
add
inc
pop
add
xchg
arpl
scas
rcrb
fmuls
pop
out
mov
fidivs
pop
dec
pop
lret
cltd
jle
cmp
int
lahf
mov
test
sub
sarl
loope
jecxz
add
cwtl
jae
fimuls
daa
xor
cwtl
pop
test
lahf
cli
push
pop
xchg
sub
push
test
ss
subb
scas
enter
lea
add
aam
or
inc
cmp
xchg
cmpb
cmp
fiaddl
push
cmp
dec
mov
mov
sub
test
pop
push
xor
xchg
adc
inc
ret
mov
scas
xchg
adc
sub
shl
sub
xchg
insl
add
xchg
xor
lfs
ljmp
test
fcoml
mov
mov
lcall
rorl
leave
sbb
sarb
xchg
lods
xchg
fdivrl
add
add
jl
adc
xlat
cs
sub
dec
int
jnp
hlt
inc
xchg
pop
or
pop
sbb
add
push
mov
sub
scas
ficoms
dec
jns
ljmp
lock
xchg
sub
dec
xor
jg
dec
push
push
fildl
arpl
mov
jb
in
loope
in
inc
mov
icebp
int
cmp
cmp
dec
sub
int
mov
ret
add
or
mov
ja
imul
mov
pop
add
in
mov
sbb
xor
sub
pop
inc
imul
pop
or
cmp
inc
or
mov
sub
je
ljmp
stos
test
mov
bound
movsl
nop
or
cld
test
or
daa
mov
xchg
push
add
mov
mov
inc
sbb
addr16
cmp
pop
or
jne
jmp
jnp
fs
test
ljmp
pop
xchg
add
xchg
mov
movsb
add
jbe
cwtl
fwait
mov
add
adc
and
enter
icebp
mov
xor
arpl
mov
loop
cmp
cmp
lahf
pop
addr16
mov
data16
inc
xor
fistps
and
pop
lds
push
xor
xchg
sbb
jg
pusha
jnp
cmpb
cmpsb
bound
in
pop
sahf
dec
psubusw
mov
fistpll
mov
adc
fs
icebp
and
test
jge
xor
int
jge
jnp
and
int
or
je
nop
shr
cmpsl
addb
imul
call
mov
sbb
jnp
and
cli
mov
insl
xchg
repz
enter
xor
cmp
into
out
fucomi
ds
mov
push
cmpb
xchg
and
mov
cld
mov
jne
fmulp
sti
pop
in
adc
test
mov
aas
push
mov
jg
mov
pop
sbb
mov
cmpsb
popa
add
jne
test
push
ret
enter
sahf
add
aam
fbstp
je
or
int3
test
jp
inc
aaa
adc
scas
out
int
cwtl
sub
int3
sbb
mov
pop
or
sbb
mov
push
push
shlb
inc
in
pop
js
adc
fcmovu
insb
sub
xchg
pop
lods
popa
rolb
loope
hlt
jne
lcall
mov
xchg
popa
cwtl
icebp
mov
idivb
int
outsl
addl
xor
jbe
into
push
data16
ss
mov
ds
xchg
sub
daa
mov
leave
xchg
ficoml
lock
or
xchg
pop
mov
mov
rcr
and
jl
rcrl
add
ss
faddl
cli
lods
daa
imul
popf
lods
sub
xor
cmp
inc
mov
dec
test
inc
test
and
mov
and
call
jle
in
inc
negl
addl
jns
mov
push
mov
xchg
aas
dec
gs
and
inc
add
jge
imul
sbb
outsb
ret
call
ja
int
and
ljmp
push
test
or
lods
ds
lea
inc
std
pop
pop
sarl
add
ja
adc
dec
cmp
jle
dec
icebp
jbe
cmp
lahf
dec
in
sbb
imul
inc
mov
dec
fsubr
inc
xor
adc
dec
xlat
ja
fstpl
test
mov
xchg
gs
jb
bt
xor
aad
add
and
loope
rolb
pop
aad
arpl
xchg
cmp
jmp
cmp
or
cmpsb
int3
aaa
dec
cmc
mov
inc
cld
hlt
pop
cld
adc
pop
sbb
mov
adc
lret
sub
out
push
idivl
cmp
sub
dec
mov
arpl
pop
stos
mul
ss
mov
aaa
xor
iret
cmpsl
sub
cmp
dec
ret
neg
inc
push
fsub
sbb
insb
inc
lret
fdivrs
in
xor
stos
mov
sub
jmp
sub
add
cs
sub
or
addr16
loopne
cld
sbb
or
and
jecxz
add
mov
mov
pop
test
clc
mov
addr16
mov
mov
jnp
mov
mov
mov
shr
xchg
lds
fwait
dec
imul
fistps
push
mov
out
movsl
mov
push
mov
fwait
and
pop
repz
adc
jb
lea
lret
aas
fsubp
icebp
mov
jp
push
adc
stos
out
vmovsldup
cltd
jae
ja
mov
out
scas
jno
jne
sub
shr
cld
jns
aad
dec
push
mov
iret
fstl
std
push
mov
sub
dec
out
dec
int
add
xchg
push
mov
cmpsb
cwtl
mov
or
pop
cld
push
inc
fs
or
xchg
xchg
xchg
ret
fwait
sbb
clc
sti
roll
test
imul
sub
loopne
mov
jbe
fisubrl
lcall
pushf
cmp
xor
out
imul
dec
fiaddl
lds
mov
cmp
dec
out
cmp
int3
std
jmp
mov
mov
cmp
xor
loope
mov
mov
xor
pop
ficoms
loop
mov
xor
mov
imul
inc
inc
add
xlat
leave
scas
sbb
jecxz
cld
xor
imulb
stc
je
lds
push
es
mov
inc
cwtl
push
psrad
cmp
les
int3
int
mov
pushf
push
in
aad
pop
and
xor
in
push
cmpb
ret
scas
push
and
mov
cmp
scas
pop
outsb
jmp
add
adc
jo
cs
fcomi
es
out
aaa
add
sbb
scas
cmp
rcll
sub
cs
xor
inc
mov
rcl
jecxz
mov
mov
pusha
dec
repnz
decl
js
adc
cmp
xor
in
push
mov
fcmovnu
push
sub
adc
lods
mov
xchg
test
sbb
xlat
cmp
push
call
xchg
lds
sbb
mov
ds
movsb
mov
jge
jne
hlt
jnp
xor
mov
out
popa
and
pop
cld
mov
mov
inc
js
jae
sub
out
gs
aad
icebp
mov
movsb
ljmp
xchg
pop
addb
mov
enter
sbb
mov
xchg
xor
pop
arpl
aad
mov
jmp
test
ljmp
dec
das
xchg
lock
stc
pop
push
push
mov
sbb
sahf
cmc
add
adcl
xchg
mov
xor
push
ret
daa
dec
les
inc
pushf
mov
pop
movsl
inc
sbb
sbb
adc
cmp
scas
test
mov
mov
mov
leave
rol
popa
xchg
out
push
mov
xor
notl
imul
and
fwait
decb
idivl
imul
pop
icebp
inc
fcomps
shrl
mov
cmp
xor
xchg
ds
sub
popf
stos
repnz
add
dec
lods
inc
imull
push
rcrb
loopne
hlt
push
fdivrp
out
cmpsb
scas
mov
mov
lods
cli
jns
sub
sarb
in
in
out
jl
xchg
pop
sbb
sub
mov
mov
mov
int
mov
out
divl
movsb
dec
test
ss
bound
push
mov
div
fildl
add
mov
iret
fsubrl
mov
cli
testb
inc
aaa
cmc
inc
mov
jbe
push
lahf
push
xorl
and
test
mov
push
js
loope
test
xchg
mov
fcoms
jp
or
sbbb
pop
xchg
jbe
lock
adc
sbb
inc
lea
mov
cmpl
call
insl
push
cmp
adc
cli
test
push
sub
xor
cs
mov
lods
loopne
cld
sarb
sub
add
ret
push
xchg
and
jns
cmp
or
popf
inc
in
out
push
aaa
mov
pop
and
popa
fistpl
inc
in
pushf
out
dec
xchg
xchg
cmp
push
ficoml
push
sbbl
lds
cs
test
ss
mov
add
aaa
mov
cmp
das
fdivrs
xor
inc
ret
push
gs
or
arpl
orb
push
aas
sbb
sarl
std
ja
push
sbb
or
or
xor
fs
sub
movsb
mov
aam
jge
clc
adc
sahf
and
aam
jmp
xchg
jae
aaa
outsb
mov
push
jne
stc
sti
mov
mov
enter
push
adc
js
pop
mov
sub
mov
cmp
jbe
jne
in
mov
nop
lea
fbld
aas
imul
cltd
xor
adc
jge
cmp
adc
inc
iret
stc
in
sbb
and
lea
push
lea
xor
enter
lret
xchg
fidivs
pop
and
jmp
movsb
inc
cmpsl
cwtl
mov
and
jo
fs
ret
mov
enter
jg
popw
add
xchg
leave
sub
mov
and
xchg
stos
icebp
pop
push
fldenv
mov
cld
inc
js
adc
jecxz
js
sub
jbe
sti
cmp
inc
std
cltd
ss
sub
mov
ja
pop
iret
jne
inc
mov
xchg
les
pop
cs
cmp
out
mov
lahf
mov
dec
out
mov
pop
mov
sahf
in
push
dec
pop
mov
push
js
sub
hlt
jae
cmp
and
inc
push
imul
mov
pop
mov
aam
jl
pushf
add
out
movsb
out
hlt
xor
cmpsb
inc
mov
rolb
jl
mov
icebp
mov
mov
pop
xchg
int3
cmp
jp
xchg
xchg
sahf
mov
sub
mov
js
jecxz
mov
lock
arpl
sub
mov
sbbl
insb
loopne
stos
and
ljmp
pop
aad
imul
xlat
jbe
jbe
nop
decl
pop
and
pop
imul
pop
pop
or
addl
sbb
call
mov
lods
sbb
pop
xor
loop
mov
add
push
sub
jbe
xchg
pop
and
inc
in
outsl
xor
fisubrl
xchg
xchg
out
push
or
out
call
adc
dec
sub
sub
inc
xor
lret
xor
dec
xlat
push
enter
testl
loopne
push
jns
cltd
into
cld
lds
jae
orl
seto
daa
pusha
out
or
mov
gs
mull
pop
cmp
dec
icebp
stos
cmp
jb
cltd
nop
push
mov
pop
xchg
jb
or
sbbb
stc
mov
cmp
loope
push
test
xor
mov
sbb
pop
mov
sub
pushw
cmp
in
xchg
sub
fisttpl
push
idivl
ljmp
and
js
loope
inc
add
mov
fucomp
bound
test
ljmp
cltd
push
or
ss
in
ja,pt
lcall
jl
push
mov
je
dec
loopne
inc
lods
imul
xor
imul
or
sub
push
xchg
lock
or
mov
icebp
sahf
pusha
test
xchg
popa
sarl
add
pop
jecxz
and
dec
repnz
mov
dec
cmpsb
arpl
cmp
fidivs
jecxz
inc
ret
push
cltd
fistps
mov
mov
jmp
lcall
mov
push
pop
pusha
jbe
sub
push
mov
scas
or
js
pop
inc
clc
jnp
or
cmpsl
xchg
or
push
adc
adc
pop
and
mov
mov
imul
lcall
jle
and
stos
out
xchg
addb
andb
call
lar
popa
pop
movsl
xor
in
mov
shll
mov
leave
arpl
sub
lds
jo
imul
sbb
cld
sbb
mov
xchg
add
stos
imul
cwtl
pushf
cmpsb
or
jb
jl
jne
push
shrb
pop
cli
pop
mov
nop
and
adc
jnp
pop
cmc
add
pop
rep
mov
adc
sbb
lcall
fwait
dec
test
jae
lcall
lods
lcall
cmp
push
sub
mov
push
push
cmp
pop
pop
popa
xor
pop
xchg
xchg
sahf
push
ret
mov
dec
test
pop
fisttpl
in
inc
in
addr16
cli
pop
xchg
lret
scas
mov
mov
push
mov
xor
jno
in
xor
xor
sar
insl
out
imul
dec
push
out
popa
mov
pop
push
hlt
sbb
mov
xchg
aad
mov
inc
or
mov
fwait
add
push
and
insb
and
pop
leave
pop
add
push
mov
aad
lcall
mov
jne
out
and
out
push
pop
cwtl
and
mov
out
inc
test
int3
mov
subl
add
pop
int
pop
cmp
or
mov
pop
sbb
roll
and
mov
out
mov
mov
adc
xchg
icebp
hlt
and
push
add
mov
int3
aaa
repnz
push
dec
ljmp
push
dec
dec
jl
jbe
rol
daa
cmp
push
jp
mov
sub
shl
fnsave
adc
cld
mov
push
or
clc
pop
adc
xlat
sti
xlat
rol
mov
hlt
testb
test
jae
test
outsl
sub
cltd
leave
stc
or
loop
call
inc
lods
popa
in
inc
sub
sub
xchg
adc
iret
ljmp
test
outsl
arpl
outsl
std
das
nop
imul
decl
int
mov
adc
je
test
pop
stc
dec
fistpll
outsb
dec
mov
xor
inc
push
jae
je,pn
cs
cmp
xchg
add
pop
xchg
data16
inc
faddl
pop
sbb
xor
pop
sub
mov
cs
jl
dec
loop
mov
pop
push
dec
jne
sbbl
and
daa
add
daa
clc
mov
sahf
or
sbb
adc
loopne
push
pop
arpl
cltd
jo,pt
add
fs
in
jo
add
mov
paddw
out
mov
loopne
fwait
sub
push
addl
pop
and
mov
fsubs
adc
push
cli
aas
push
out
lods
dec
inc
xchg
jecxz
lock
sahf
xchg
insl
ds
xchg
repz
cli
adc
fdivs
arpl
pusha
add
adc
push
jecxz
loope
sbb
add
xchg
inc
add
jl
jb
outsb
aaa
lea
ret
sarb
mov
cmpl
or
cmp
test
scas
mov
icebp
pop
insb
aaa
push
xchg
fimull
push
adc
imul
xor
ljmp
or
aas
lock
cli
outsl
and
je
sbb
loop
mov
push
insl
xorb
cmp
jno
or
xchg
faddp
mov
sahf
xor
or
mov
icebp
fbstp
inc
daa
pushf
loopne
movsl
jo
mov
mov
fstpt
adc
adc
aad
aas
add
add
mov
std
xchg
sub
mov
mov
sbb
gs
push
arpl
mul
mov
cmp
mov
fs
fadd
and
pop
push
stc
cld
cmc
mov
outsl
bnd
sub
mov
mov
outsb
mov
xchg
shrb
fsubrl
lret
add
push
loopne
mov
test
mov
mov
out
push
int3
mov
add
stos
inc
xor
icebp
icebp
in
pop
aas
ss
xchg
xchg
dec
sbb
add
push
iret
lock
mov
loop
inc
xor
hlt
inc
sub
adc
jecxz
sbb
mov
push
add
pop
adc
mov
sti
hlt
faddl
ja
mov
in
mov
fisttpll
pop
adcl
and
add
sarb
and
je
push
les
or
lret
ss
mov
out
jg
xchg
xorb
jmp
cmpsb
cmp
add
or
mov
inc
xor
pop
in
mov
mov
dec
xchg
ds
dec
and
popa
inc
sub
cmp
dec
jecxz
inc
adc
or
aam
test
rcll
movsl
cltd
iret
mov
mov
sbb
popf
call
je
mov
mov
insl
sub
cmc
aas
psrld
in
or
std
pushf
aam
rclb
int
add
stos
xorl
aam
cmp
lcall
out
push
jge
sbbl
into
ret
dec
mov
mov
cltd
test
inc
inc
lret
sub
mov
push
lods
into
dec
int
adc
into
pop
mov
lods
insl
mov
xor
lret
shl
push
adc
jmp
push
mov
loop
ror
dec
add
cwtl
push
jb
cmpsl
adc
ret
scas
imul
mov
subl
xchg
ljmp
pop
jg
xchg
js
call
sub
jp
pop
jl
in
mov
mov
aas
push
orl
rcr
mov
orb
mov
pop
ds
icebp
lahf
push
icebp
adc
in
bound
roll
or
and
movsb
push
stc
mov
adcb
inc
jnp
ljmp
push
xchg
sub
ljmp
cmp
xor
idivl
sbb
push
pop
push
test
or
mov
in
jo
push
loop
cli
push
mov
dec
xor
inc
arpl
aad
sub
test
pop
imulb
aaa
push
loope
sbb
xchg
insl
lret
sbb
mov
sti
cmpsl
jo
add
jns
leave
imul
sti
pop
aam
inc
xchg
or
std
lret
divb
aas
out
jbe
and
lret
mov
dec
sbb
jno
pop
test
add
xchg
sub
std
adc
jp
out
push
int3
sbb
sub
push
lea
cmp
adc
test
jb
rclb
mov
jg
inc
fidivrs
dec
jle
jmp
lds
cli
jecxz
enter
decl
imul
jo
jnp
sub
mov
pusha
mov
jle
cli
and
jns
xor
xor
mov
add
xchg
xchg
rcrl
mov
movsb
fsubl
fwait
add
add
jmp
adc
out
push
dec
lea
mov
and
jno
shlb
mov
cmpsl
push
scas
das
sbb
jg
pop
push
js
pop
sbb
sti
in
push
xchg
mov
xlat
or
push
sbb
pop
xor
push
aas
imul
push
das
movsl
stos
and
jns
fildll
idivb
xchg
nop
cmp
adc
and
add
andb
jb
hlt
sub
into
int
dec
add
and
sub
mov
test
inc
mov
enter
and
adc
sbb
push
cmp
xor
gs
mov
xchg
out
pop
iret
je
das
mov
rcr
inc
mov
int3
insl
xor
adc
sbb
mov
in
cmc
in
mov
ret
or
cwtl
js
mov
hlt
cld
add
pop
insl
inc
push
sub
mov
pop
adc
xor
jae
sbb
push
xchg
add
jnp
mov
mov
dec
jne
loop
ja
inc
lds
dec
push
in
repnz
inc
gs
push
mov
or
jo
shrb
inc
fildll
movl
jmp
cld
mov
mov
daa
and
mov
mov
or
fwait
push
add
stos
cld
pop
mov
dec
inc
push
sti
mov
mov
sti
popa
imul
inc
stos
and
mov
rcl
cmpsb
mov
lahf
ror
sahf
imul
scas
mov
fstps
cld
jb
imulb
popa
mov
and
test
in
aaa
ja
enter
or
mov
loope
call
aam
dec
sub
xor
cmp
movsl
sub
inc
movsb
xor
dec
jbe
ret
leave
dec
jno
pop
or
arpl
cs
jbe
add
icebp
fists
xor
inc
in
pop
bnd
or
xchg
std
jg
ss
into
push
push
cmp
pop
mov
dec
sbb
lods
clc
sbb
cwtl
mov
pop
lock
and
shrl
jnp
add
add
sbb
rcrb
sahf
mov
inc
cli
cmp
pop
inc
lods
sub
test
fistpll
mov
cmc
mov
jns
scas
or
dec
mov
sbb
je
cmp
loope
mov
jmp
or
out
pop
dec
cmp
loope
lods
addr16
insl
pop
sub
sub
aas
data16
mov
es
dec
mov
and
mov
adc
mov
jno
lods
std
stos
mov
and
add
cld
xchg
add
inc
pop
sbb
loope
orl
fcmovu
or
pop
fs
movb
nop
xchg
jns
into
int
mov
add
shl
jno
pushf
dec
test
dec
jnp
dec
push
subl
jb
out
daa
aas
in
push
inc
cmc
test
enter
sub
addb
ss
or
or
dec
mov
testl
ljmp
mov
pop
in
clc
xchg
xchg
inc
fistpl
mov
cli
add
push
push
push
dec
in
push
ret
jle
sub
jge
mov
repnz
enter
sbbl
mov
mov
outsl
fsubrl
mov
dec
cmp
fxch
cmp
mov
and
in
xor
retw
shll
out
outsl
cmp
sbb
std
repz
lods
out
push
leave
sub
mov
mov
cmp
push
mov
leave
dec
sbb
rorb
sbb
lret
cltd
repz
in
gs
std
mov
fistpl
int
sti
add
xlat
repz
push
lods
cld
sub
and
and
ljmp
dec
push
xchg
push
and
cmp
and
call
ljmp
mov
and
mov
cmpsl
jmp
inc
lahf
jmp
adc
pop
cmp
jl
cmp
cwtl
pop
dec
out
sub
cmp
lods
js
daa
xchg
inc
scas
ja
imul
inc
lds
sub
xchg
sub
push
and
inc
data16
loope
sbb
cld
mov
xlat
mov
cs
in
fcoms
ss
pmuludq
int3
add
popa
rolb
andl
cmp
jnp
inc
xlat
pop
jp
test
icebp
daa
mov
mov
mov
xor
cmp
mov
shr
push
sub
mov
inc
cld
arpl
ret
push
jge
cmpsl
jo
cmc
push
push
das
iret
or
xorl
rcrb
call
lret
mov
push
out
or
inc
pop
push
push
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
push
imul
pop
jp
popf
mov
sbb
cltd
mov
jbe
ljmp
fwait
mov
cltd
in
or
popf
push
adc
pop
addr16
xor
testl
push
fwait
mov
frstor
mov
dec
inc
sbb
mov
sub
mov
xlat
xchg
cwtl
sbb
mov
fcom
scas
andb
iret
hlt
adc
mov
std
xor
xorl
sahf
push
xchg
sbb
cld
inc
pushf
roll
xorl
push
adc
pushf
sbb
mov
test
push
jb
push
lret
hlt
fimull
test
cmpsb
push
stc
scas
xor
xor
xchg
or
pop
jge
int3
and
inc
mov
aas
jmp
and
mov
jecxz
sub
sub
out
xchg
stos
jmp
or
push
and
insl
iret
fwait
xlat
push
xor
mov
insb
stos
cmc
inc
mov
sub
and
jnp
add
lods
cmovno
or
int3
cs
and
adc
cmpsl
inc
in
loop
int
ret
and
test
jle
dec
fsubl
sbb
pop
add
dec
cmp
inc
push
imul
adc
jbe
movsl
adc
and
cs
mov
xor
xchg
test
fwait
clc
mov
jecxz
lahf
fstpt
add
and
in
cmp
sub
shlb
mov
push
push
lock
shlb
stos
stc
mov
xchg
dec
loopne
aas
cs
fnstcw
out
xchg
adc
jmp
inc
sahf
pop
inc
inc
sub
scas
aad
pop
cmp
pop
or
into
sub
inc
sub
ret
std
in
mov
fldt
xor
leave
insb
dec
in
stos
call
or
mov
push
popf
cmp
rorb
fst
imul
dec
cmp
stc
sahf
arpl
inc
icebp
pop
or
add
int
arpl
jg
repz
decl
jge
and
or
outsl
insb
cld
or
pmaxsw
xor
insb
mov
push
sbb
aad
enter
test
push
mov
movsl
cmp
mov
jae
xorb
lds
shrb
dec
inc
dec
xor
mulb
xchg
dec
ljmp
mov
shll
in
or
popf
jle
mov
mov
add
mov
mov
sbb
and
into
xor
xchg
adc
movsb
xor
sbb
outsl
push
jo
cwtl
mov
jmp
je
mov
push
rcll
pop
mov
add
lods
jno
hlt
mov
pop
inc
dec
mov
adc
ret
jl
sub
stos
pop
in
cmpl
in
aam
call
mov
add
xorl
push
cmp
mov
cmc
mov
lcall
es
xor
sbb
aad
inc
xor
push
and
js
ret
jl
ficomps
sahf
icebp
push
ss
loope
iret
stos
fmulp
test
sub
jnp
jmp
inc
fldcw
push
stc
xchg
jecxz
ds
jne
cmp
popf
jae
push
jl
imul
jle
in
xor
jg
mov
mov
jns
jmp
test
shll
xor
push
mov
jnp
aaa
roll
sub
mov
mov
stos
mov
stos
sbb
imull
add
in
lods
int3
xchg
loopne
mov
xchg
xor
inc
mov
cmpb
ja
add
pop
iret
jb
pop
and
pop
shll
sub
sahf
stos
xor
and
sbb
jnp
fcoms
xlat
mov
ficomps
orl
cmc
pop
add
test
xchg
mov
nopl
and
adc
loope
push
xor
jg
test
pop
xchg
adc
fistpll
fcomp
mov
icebp
mov
std
ja
lea
pop
rclb
gs
mov
mov
divl
inc
or
sbb
jo
or
add
or
adc
jmp
xchg
jg
mov
pop
cmp
xchg
push
sbb
mov
mov
lret
dec
pop
out
add
in
ret
sub
mov
ss
in
fistpll
inc
dec
je
cld
lods
data16
dec
add
lods
imul
movsb
clc
mov
aam
aas
int
shl
xor
pop
pushf
aad
in
pop
and
js
adc
out
add
adc
mov
and
adc
pop
jbe
xor
push
arpl
popf
jecxz
or
push
shlb
jne
arpl
xor
aas
ss
pop
or
jge
or
sahf
cmp
out
es
aad
jg
cmp
sbb
mov
test
daa
rorl
mov
inc
mov
outsl
push
mov
iret
fwait
dec
outsb
xchg
arpl
add
inc
sbb
jae
jp
shl
pop
sbb
mov
xchg
cmpb
mov
xchg
into
push
ret
mov
add
icebp
fisttps
mov
mov
jb
adc
pop
arpl
call
loop
push
call
es
cli
fimuls
or
in
andl
mov
cmc
lcall
xchg
cmp
push
out
dec
dec
pop
ja
push
inc
add
in
movsb
adc
mov
stos
leave
in
into
sbb
fnsave
aam
cmp
mov
jnp
aaa
addl
sub
and
pop
sahf
jno
push
es
ss
je
dec
cwtl
adc
gs
maxps
cmc
dec
xchg
js
pop
movsb
adc
mov
incl
bound
mov
xchg
push
add
bound
push
ljmp
imul
push
fcmovnb
rcl
dec
enterw
int3
sub
sub
test
push
cmp
dec
jno
pusha
shl
repz
inc
cmpsl
and
test
out
test
outsl
daa
into
mov
inc
repnz
jl
push
insb
mov
inc
hlt
repz
je
ret
sahf
and
insb
cs
push
fcmovne
sbbl
int3
movsb
and
mov
aad
test
mov
out
inc
push
mov
fcoml
xchg
pop
push
roll
test
insl
adc
in
test
jecxz
jb
loopne
cmpsb
call
jbe
dec
inc
int
xchg
xor
std
pop
aam
xor
adc
add
cli
and
jb
pop
dec
sarb
mov
mov
xchg
fsub
insb
ret
test
sbb
sub
mov
lods
fmull
and
cmpsl
cmp
inc
in
pop
cmp
push
in
in
int3
push
jmp
aaa
les
aad
into
test
mov
inc
sbb
clc
sahf
cmp
aaa
and
fnstsw
enter
notl
pop
test
mov
dec
lds
rcrl
loope
lret
mov
sbb
outsl
je
cmp
out
roll
rorl
fucomp
pop
pop
repz
ds
rol
jp
loope
in
subl
sbb
loope
cmp
fldt
fisttps
loop
push
repnz
push
test
push
xchg
dec
addb
cwtl
mov
mov
pushf
adc
cwtl
aaa
add
mov
xchg
inc
adcb
mov
bound
incl
lret
mov
into
xchg
mov
scas
mov
push
sbb
xchg
insb
in
jp
push
gs
jne
dec
adc
adc
jp
or
push
fiadds
jbe
ljmp
mov
jp
test
mov
fdivrs
ja
test
xchg
pop
mov
mov
mov
cmp
push
fs
sarb
push
push
shl
sbb
aas
outsb
mov
add
pop
movsl
ret
les
mov
pushl
scas
mov
ljmp
sahf
bound
js
lods
loop
popf
gs
ss
repz
in
jnp
mov
stos
cmpsl
push
pop
jne
xlat
stc
or
inc
movsl
scas
cmp
cmpsb
xor
dec
stos
shll
jmp
sub
cmpsl
lods
mov
fdivl
mov
push
ljmp
sti
jns
inc
mov
test
push
pop
test
mov
push
int3
popl
outsl
mov
loopne
push
fstpt
loope
push
sbb
add
cmp
ret
aas
adc
add
stc
adc
out
ds
xchg
lods
sub
lret
add
pop
mov
das
bnd
mov
push
pushf
jle
pop
std
dec
and
scas
sub
xor
shlb
cmpsb
data16
enter
cmpsb
cmp
inc
flds
in
cld
stc
fldenv
mov
fsub
xorb
ss
cmp
mov
mov
and
stos
mov
inc
rcrb
and
in
mov
adc
xor
arpl
sti
push
xchg
sbb
daa
pop
popf
xchg
data16
ja
or
es
cmp
addr16
dec
pop
lcall
xor
xchg
pop
xchg
push
shlb
outsl
lods
inc
test
lods
arpl
imul
out
aas
pop
stc
aaa
call
enter
inc
add
adc
cmp
adc
aas
popa
pusha
push
scas
out
je
arpl
xchg
push
je
jns
int
cmp
xor
int
pop
cli
sub
enter
das
js
xchg
cmpb
std
lret
test
mov
add
jge
or
testl
cmp
jg
decl
cmp
pop
aas
pop
sub
cmp
inc
pop
jp
sbb
fisubl
pop
int3
xchg
dec
aaa
mov
leave
inc
sub
pop
shr
mov
fmul
mov
loop
imul
dec
je
sub
movsl
push
popa
xchg
pop
add
jmp
mov
mov
lret
fstpt
dec
mov
adc
aad
adc
stos
cmp
push
pop
inc
insb
sub
dec
sti
sbb
mov
fsubl
sub
or
fadds
mov
repz
popf
clc
ficompl
insl
aas
lds
mov
mov
dec
dec
dec
jge
sti
jecxz
fiadds
ss
push
imul
test
mov
ret
sbb
cmpb
das
pop
repnz
sahf
push
iret
pop
jns
rclb
popf
std
fiadds
mov
arpl
mov
adc
dec
lods
int3
aad
std
mov
sub
ds
mov
lret
mov
push
dec
insb
sbb
out
fwait
sub
popa
addl
inc
dec
xor
and
int3
add
push
adc
mov
jle
cmpsb
mov
mov
pop
imul
mov
cmp
cmp
mov
addl
or
loop
lds
dec
xlat
mov
jle
mov
adc
mov
xor
js
and
jmp
mov
stos
sub
cld
popf
mov
pop
lods
fisubl
into
mov
stos
xchg
cwtl
loopne
mov
sub
cmpsl
jae
imul
mov
movsb
sbb
in
and
rcrl
mov
mov
stos
insb
movsl
sub
cltd
mov
add
fbstp
mov
inc
lea
ss
scas
mov
sbb
dec
test
add
sbb
insl
adc
rorl
insl
into
fnstcw
and
xchg
movsb
outsb
pop
bound
dec
popa
mov
adc
cli
sub
loope
dec
add
pop
mov
notb
mov
fiaddl
fwait
lcall
sub
insb
das
lret
pop
pop
mov
lret
cltd
jl
xchg
jl
sub
adc
cmp
jae
fcomp
jo
push
jae
aaa
xor
decb
outsb
jo
adc
xchg
jge
cld
cmpsb
and
aad
adc
movsb
fistps
jns
mov
push
addb
test
outsb
adc
sbb
lods
gs
iret
inc
aas
enter
mov
pop
dec
cmp
pusha
xchg
test
pop
cmp
fldenv
lea
ja
sbb
shlb
push
xchg
outsl
mov
sti
xor
push
jne
lcall
cltd
popa
jns
mov
stos
jae
or
pushf
jl
and
jg
fsts
and
rcrl
jne
mov
addl
xchg
pop
and
jb
push
push
pop
mov
pop
into
fisttps
fnstsw
and
daa
test
das
imul
push
daa
pop
and
ror
ljmp
cli
adcb
push
int
adc
inc
adc
js
das
test
fistpl
pop
sbb
sbb
cmpsl
cld
aas
jge
int
in
mov
xchg
loop
insb
fildl
add
mov
pop
bound
dec
adc
dec
sub
and
lcall
cmp
call
fstl
sti
out
test
add
mov
fldcw
fisubrl
sbb
cmp
ret
cmpsb
sbb
mov
inc
pop
xlat
dec
aam
fistpll
out
xchg
scas
sbb
dec
jo
cld
or
ret
mov
dec
loope
push
lret
dec
xorl
sub
shr
ret
enter
pop
jbe
push
aam
shrb
test
xchg
subb
mov
rcrl
mov
das
cmpsl
movsb
push
push
js
icebp
mov
or
jnp
or
ds
inc
lods
hlt
fcomps
sbb
dec
sub
inc
mov
lds
imul
ja
mov
pusha
out
ljmp
cmp
popf
mov
jno
fdivl
inc
fisubl
addr16
dec
jo
test
xchg
test
add
adc
ljmp
adc
cmpsl
or
sub
in
sahf
je
adc
dec
loopne
push
loope
test
mov
jmp
pop
mov
cli
mov
adc
cmpsb
sub
aad
sbb
loopne
mov
movsb
fidivs
inc
mov
push
pusha
lahf
les
test
mov
mov
mov
lret
lea
or
rcrb
je
add
push
rorb
rorb
fcomps
adc
gs
jl
sub
out
sub
stc
and
cmp
je
scas
pop
jbe
lret
push
cmp
xor
shlb
pop
inc
xor
jl,pt
sbb
inc
xlat
jp
adc
add
cmp
mov
cmpsb
push
lods
pop
pop
insb
loop
xor
push
dec
icebp
push
lret
sbb
lock
mov
xchg
pop
mov
mov
sbb
adc
dec
fs
cmp
inc
xorb
add
pusha
lods
ss
and
mull
mov
xor
jmp
xor
xchg
mov
and
pop
jbe
mov
add
cmpsb
bound
jle
dec
sub
push
clc
pushf
add
push
push
lcall
add
pcmpgtb
cmp
popf
cmpb
push
mov
mull
inc
pop
or
inc
jns
jmp
xchg
fdivrp
sub
aad
roll
mov
lock
cli
xchg
loop
fldln2
and
and
mov
push
leave
and
movsb
or
pop
cs
sub
negl
and
mov
rcrb
roll
mov
pop
ficoms
out
xchg
inc
cmp
xchg
call
repz
call
in
or
sbb
mov
dec
lock
and
adc
in
lret
mov
ja
cmpsb
and
scas
push
mov
ja
xor
or
or
pop
addr16
xlat
adc
push
je
loop
in
test
jb
mov
mov
pusha
add
xchg
test
outsb
mov
mov
lea
cmp
mov
mov
das
mov
lods
ljmp
and
xchg
scas
leave
jne
cmp
adc
pop
lea
decb
sahf
lds
je
sub
push
cs
add
das
sbb
push
mov
pop
push
std
jae
and
aas
jno
dec
jb
sti
pop
ss
lea
jg
pop
sahf
out
dec
xor
andb
lahf
loope
out
dec
and
cmpsb
aam
stos
movsb
cmc
lds
push
sub
rcl
jle
cmpsl
jl
int3
push
inc
inc
daa
inc
adc
es
js
adc
or
push
mov
sub
stos
lahf
push
aas
mov
and
and
sbb
or
push
movd
push
out
ret
pop
inc
in
sbb
adc
pop
repnz
orl
cld
pop
outsb
adc
ficoml
insl
jge
gs
mov
inc
test
mov
out
cmp
dec
mov
repz
push
push
and
movsl
out
mov
arpl
faddp
and
xchg
ss
pushf
iret
fistpll
shlb
fs
and
sti
ss
inc
mov
xlat
sub
scas
adc
mov
add
sbb
stos
stos
sub
popf
insl
jl
sub
lock
cwtl
or
jmp
cmp
add
mov
ret
rorb
push
jbe
mov
pop
mov
call
cmp
out
xchg
push
test
sahf
imul
inc
mov
das
repz
mov
sbb
js
daa
push
sbb
leave
imul
lock
test
cmpb
sbb
loop
inc
xchg
insl
inc
call
lea
aad
mov
mov
dec
das
mov
jo
xor
jp
xchg
sahf
mov
xor
out
out
movsbl
stos
jne
xchg
cmp
push
lar
jecxz
add
add
leave
fwait
jnp
lock
mov
aam
loopne
mov
jbe
enter
sbb
aam
rorb
and
in
cld
jg
outsb
mov
xchg
jno
mov
out
mov
xchg
mov
into
xor
cmp
cmp
jo
inc
filds
adc
addr16
mov
ss
imul
push
aaa
jmp
iret
dec
mov
cltd
jns
imul
dec
dec
jbe
lea
inc
bound
mov
adc
dec
sbb
imul
add
or
imul
or
inc
jmp
addl
repz
inc
out
inc
ds
clc
dec
mov
jne
test
aas
xor
add
rol
mov
add
popf
lret
adc
or
or
clc
inc
fisubl
ret
orb
in
xchg
repnz
scas
mov
mov
fists
std
insl
addl
xor
inc
fstps
inc
sbb
popa
dec
lahf
out
inc
jbe
lods
test
pop
xchg
xchg
adc
std
sahf
mov
xlat
int3
das
inc
stos
in
adc
mov
imul
notb
imul
es
jae
mov
xchg
pop
lds
push
ss
sub
cwtl
aad
adc
mov
das
push
xor
scas
cmc
add
jns
rolb
mov
jno
fmul
aaa
aaa
jb
mov
and
lods
scas
daa
js
test
push
mov
aad
test
fldt
scas
mov
aas
js
imull
ret
add
loope
sub
jbe
out
rcr
and
loope
dec
inc
pop
loop
xor
das
loope
arpl
aas
in
fcmovne
imul
fstps
mov
mov
xor
test
lret
jno
in
cmp
adc
stc
lahf
gs
adc
sbb
jno
add
sub
mov
jo
sub
fcoms
inc
movsl
dec
testb
bound
jae
sbb
xchg
ljmp
or
addl
mov
inc
lahf
int
mov
dec
loop
xor
sbb
sub
mov
push
jns
in
mov
cmp
enter
imul
out
sar
add
test
inc
jge
cmp
insl
or
pop
into
lea
sub
mov
aad
cmp
lock
sbb
push
add
gs
or
or
jb
imul
xchg
pop
es
dec
call
cmc
jge
pop
xchg
imul
mov
sub
and
sub
int
or
cmp
aaa
jbe
mov
mov
add
xor
adc
inc
and
jl
aad
xor
loop
stos
dec
sbb
int
inc
xor
adc
lods
sbbb
mov
cmc
jg
mov
mov
push
or
cmp
scas
adc
pop
nop
fldenv
stos
cmpb
nop
sbb
and
sbb
push
add
mov
sbb
lcall
fisttpll
fistl
js
icebp
mov
sbb
outsb
repz
adc
aam
jbe
mov
xor
gs
inc
sub
mov
mov
mov
lret
xlat
out
xor
dec
outsl
sub
xchg
stc
cs
dec
and
cli
fnstsw
mov
shll
loopne
and
cld
push
out
cmp
or
dec
xchg
into
out
mov
mov
push
inc
inc
sbb
sub
sti
pusha
mov
daa
mov
pop
orl
loopne
push
int
or
mov
movsb
fsubrl
cmp
cmp
sbb
adc
jno
mov
mov
pop
push
in
shll
mov
cmp
out
lret
fisubrl
or
xlat
push
or
dec
or
xorb
fisttps
lock
xchg
dec
mov
pop
jbe
dec
test
xchg
xchg
out
pusha
stos
and
push
add
xor
in
imul
adc
and
outsl
sbb
push
and
adc
jg
cmp
mov
inc
fidivl
pop
jle
fld
adc
repnz
dec
loope
dec
sub
dec
clc
fisubrl
add
add
scas
test
add
xor
test
sbb
sti
pop
mov
xchg
cmp
es
loope
inc
jno
mov
mov
xchg
lods
sub
stos
fs
jno
fldl
cmp
jnp
dec
and
ja
outsl
rolb
cmp
inc
rol
test
mov
sub
mov
inc
in
sub
sbb
daa
lret
repnz
pop
loope
sbb
lret
cmp
fisubs
dec
mov
cs
aam
cmovge
inc
sub
dec
bound
mov
test
out
out
out
adc
fistps
shl
sbb
jo
mov
xchg
fsubr
scas
or
lock
ret
pop
push
cmp
fdivl
jl
test
push
aam
xor
xor
xor
jp
popf
sarl
add
aaa
pop
cmp
sub
sbb
pushf
lds
insl
pop
enter
xor
popl
and
sbb
push
pop
aaa
mov
xor
sahf
aad
jo
call
bound
fs
mov
cltd
loopne
loope
or
pushf
xor
inc
rcrb
mov
mov
enter
jae
xchg
jnp
cs
in
inc
jmp
dec
adc
pop
movsb
test
xchg
out
ret
sub
sub
aad
mov
cli
mov
sub
mov
filds
lcall
pop
xor
push
pop
js
test
xchg
jg
nop
sbb
inc
aaa
mov
push
xchg
inc
in
outsl
sbb
jp
push
mov
aam
mov
jb
jle
pushf
movsb
xchg
jg
pushf
xchg
mov
test
scas
addr16
and
repz
ds
cmp
fidivrs
fnstenv
pop
dec
pop
pop
inc
aaa
andb
test
sbb
fcoms
or
xchg
dec
pop
cmc
stc
test
arpl
sahf
icebp
loopne
je
cli
and
adc
mov
add
pop
mov
je
pop
emms
cld
mov
loopne
sub
cs
add
pop
xchg
popa
inc
and
shr
daa
xchg
lods
rol
jmp
and
out
pop
xor
fwait
icebp
push
add
out
movl
sti
fnsaves
dec
jmp
dec
std
push
jae
jb
sbb
sbb
jp
mov
or
lds
jb
jecxz
and
mov
jb
lods
push
cmp
loopne
sbb
push
mov
inc
fabs
mov
push
pop
in
in
mov
loopne
aad
ret
add
add
hlt
movsb
add
pop
mov
or
pop
insb
std
mov
and
imulb
in
aam
dec
dec
inc
inc
test
add
imul
mov
in
xchg
mov
xor
push
push
mov
outsb
fsubs
jbe
pop
aam
scas
pop
out
dec
pushf
loopne
outsl
jge
insl
subb
in
mov
movsb
xchg
pushf
repnz
call
cli
in
adc
jo
xchg
call
cltd
adc
les
adc
pop
xchg
out
mov
mov
std
sub
jl
nop
xchg
push
dec
sarl
lcall
stos
push
push
je
outsl
dec
sarl
rorl
mov
fs
mov
stos
in
lret
cmc
jmp
das
mov
rclb
std
arpl
rcll
orb
adc
outsl
mov
in
arpl
mov
pop
stos
mov
mov
int
mov
sbb
ds
jle
lods
sbb
pop
pop
ret
test
push
es
adc
out
mov
cs
cmpsb
add
std
sbb
dec
lds
xchg
xchg
add
fmuls
add
pop
xor
xchg
inc
lods
add
and
lods
aas
std
xor
sbb
das
shrl
xlat
in
repnz
or
sbb
jbe
adc
in
fsubr
mov
sbb
mov
stos
cmpsl
push
mov
icebp
int
pop
sbb
pop
mov
pop
aad
push
pop
mov
test
push
cld
repz
iret
push
jb
or
jp
orb
push
inc
jle
jmp
fdivrl
shrb
jb
outsb
in
push
mov
ds
and
shlb
mov
add
push
call
movsl
pop
mov
jmp
push
push
and
aaa
jnp
push
enter
pop
sbb
cmp
dec
test
inc
push
adc
dec
nop
mov
jle
sarb
push
cmp
outsb
stos
and
fistl
inc
pop
push
add
jo
int
mov
mov
or
movsb
sbbb
imul
arpl
mov
lret
push
mov
ja
mov
jo
xchg
push
mov
xchg
jmp
shl
loopne
scas
es
adc
daa
cmp
push
inc
nop
lcall
dec
std
sti
mul
mov
flds
stos
xor
inc
add
loopne
js
cmpsb
fsubrp
add
adc
popa
jbe
outsb
test
pushf
neg
sti
jmp
cld
rorb
xor
dec
or
xor
lret
in
clc
mov
pop
les
cli
movsb
push
jb
fadds
orl
sbb
into
in
das
mov
test
test
loope
jp
xor
xlat
xchg
inc
xchg
sahf
gs
sub
push
js
xor
in
xorb
sub
dec
mov
mov
cli
add
sbb
or
mov
cwtl
inc
cmpsb
cmp
jecxz
aad
push
inc
orl
dec
mov
test
mov
mov
shrb
stos
sti
pushf
xchg
add
xor
adc
lret
imul
aas
dec
add
test
and
cltd
aad
pop
mov
fidivs
cltd
lahf
lods
add
or
mov
push
push
mov
cmp
pusha
sub
jle
mov
mov
adc
lret
sbb
pop
adc
inc
stos
iret
jno
lret
rorl
sbb
inc
xchg
cmp
fstp
pop
inc
mov
lret
jb
adc
cmp
flds
clc
cmp
rol
mov
mov
add
add
and
xor
inc
adc
addr16
and
out
testl
mov
decl
or
je
xchg
rorl
add
adc
xor
cmp
insb
fadd
leave
nop
cmp
adc
add
cmp
mov
les
into
mov
mov
xchg
rol
adcb
lea
std
bound
call
push
std
dec
mov
bound
push
inc
xchg
mov
cmp
cmp
pop
insl
cmp
add
mov
int3
scas
add
sub
jmp
aam
or
mov
mov
jmp
notb
xlat
pop
dec
sub
or
xorl
sub
inc
mov
push
mov
cli
fadd
and
aam
inc
pop
xacquire
pop
in
hlt
cmpsb
int
mov
rcll
ficompl
add
aad
sar
sbbb
dec
lcall
jb
sbb
sbb
jecxz
insl
int
adc
push
jge
scas
mov
push
jo
or
pop
lods
ror
cmc
movsl
xor
and
xchg
sub
js
pop
ds
shll
loopne
xor
loope
je
xor
arpl
cmp
dec
insb
add
call
adc
pop
push
cmp
pop
and
xchg
mov
or
test
adc
lret
push
cmpsl
pop
push
ljmp
sbb
push
dec
cli
jg
in
and
enter
mov
roll
mov
ja
pop
lods
fbld
jne
and
out
sub
inc
mov
jecxz
lods
in
lods
mov
call
mov
mull
outsl
loopne
mov
rolb
out
daa
sbb
test
filds
dec
pop
mov
pop
or
sub
xor
mov
and
clc
jmp
inc
push
test
lahf
les
out
test
pop
jp
stos
into
icebp
jge
sarb
jne
packuswb
loop
imul
call
out
xor
hlt
xor
scas
daa
cmp
sub
dec
xor
pushf
popf
and
scas
js
shl
jns
sti
fimuls
jb
dec
movsb
push
out
jg
cmpsb
lahf
shll
out
enter
inc
pushf
xor
sbb
aam
push
lret
xchg
addl
outsb
shll
dec
jge
inc
iret
into
bound
insb
fimull
iret
and
pop
loope
cmp
jo
lds
daa
push
jne
loop
mov
sbb
xchg
cmp
xchg
les
in
jne
pop
xchg
mov
cwtl
out
int3
je
scas
jns
sbb
xor
pushf
push
mov
cmc
jg
mov
neg
lea
test
movsb
xchg
pop
loop
pop
mov
fimull
push
and
into
pop
aas
js
shl
mov
pop
add
and
xchg
xor
inc
inc
add
add
sbb
add
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
loope
stc
mov
sbb
jp
shlb
and
mov
adc
loop
xchg
icebp
ret
pop
add
add
lock
fwait
mov
cmpl
pop
insb
int
push
mov
sarb
gs
movsb
and
bound
and
pop
roll
popf
pushf
cmp
sahf
clc
aaa
pusha
cmp
jb
out
pop
in
xchg
jns
jge
jp
dec
fimuls
pop
jbe
shlb
jb
sub
fwait
in
insb
adc
lods
sbb
call
add
pop
outsb
ret
testb
fyl2xp1
pop
push
popa
icebp
mov
push
jnp
imul
mulps
ds
jge
push
inc
fwait
jmp
mov
pop
rclb
pusha
pop
in
push
jo
andl
or
arpl
add
shr
xor
pop
jmp
cli
mov
sub
and
cltd
pop
cmp
loop
popa
lcall
xor
inc
fs
ficompl
cmp
cld
repnz
lret
ret
mov
arpl
fstps
mov
fucomp
xchg
les
sub
jp
pop
out
pop
pushf
in
cmp
mov
inc
xchg
shl
call
pop
jl
insl
das
add
ja
xor
add
stc
mov
hlt
xchg
or
xchg
sbb
dec
and
movsl
inc
test
mov
mov
xchg
sub
pop
jb
xor
push
out
pop
int
cmpsl
pop
dec
mov
icebp
jne
dec
sub
out
fsubs
xlat
and
inc
or
or
pop
cmp
imul
int
jle
push
add
pop
mov
mov
mov
push
shlb
mov
xchg
aaa
repnz
jns
pop
xchg
movsl
lret
shll
stc
inc
movsb
imull
and
mov
jne
mov
fsubl
jae
shrb
xor
pop
push
testb
sub
popa
xchg
mov
mov
mov
arpl
jle
setl
ja
cmp
je
cmc
mov
adc
push
fdivrs
inc
xor
mov
jge
outsl
cld
sub
clc
xchg
shlb
xchg
mov
add
adc
cld
scas
push
mov
xchg
adc
xchg
popl
inc
rcrb
cli
jo
gs
xchg
test
adc
mov
lods
mov
roll
jmp
mov
pop
xorl
setns
pushl
fisttpll
sbb
sbb
jl
dec
sarb
inc
int
in
stos
ret
fstpl
cmp
adc
mull
cltd
lahf
cli
mov
adc
test
mov
shlb
add
gs
inc
bound
mov
cmp
pop
mov
jae
movsb
mov
mov
lods
dec
gs
xor
pop
daa
nop
pop
mov
sub
mov
lods
rorb
xchg
xor
dec
divb
mov
mov
mov
pop
inc
cmp
out
sbb
sbb
xchg
dec
shll
loop
jno
daa
push
insb
pop
scas
adc
jecxz
sbb
clc
int3
mov
movsb
pop
dec
dec
push
setl
jne
in
es
fidivrs
add
push
and
bound
xor
mov
add
sbb
mov
repz
ja
cmp
mov
jle
popf
or
clc
cmp
mov
inc
ds
jle
mov
lcall
bound
bnd
pop
mov
dec
xor
pop
and
mov
stc
gs
xchg
mov
push
mov
push
sub
mov
lret
sbb
jle
jle
or
pushfw
or
ss
js
push
imul
inc
rcl
stc
push
pop
mov
xor
adc
cmc
mov
and
out
xor
sub
add
divl
ret
in
andl
dec
and
inc
fdivp
adc
cmp
xchg
and
movb
ljmp
cmpsl
jo
icebp
push
jno
cld
les
add
std
jne
insb
cmpsb
pop
ret
and
test
jnp
jbe
scas
xlat
sbb
sbb
leave
mov
pop
jmp
fwait
mov
mov
sub
mov
lahf
inc
movsl
cmp
push
dec
cmpsb
or
push
stc
pop
and
mov
cmp
mov
in
push
jmp
lds
out
cmpsb
mov
push
arpl
add
mov
inc
xchg
sub
push
adc
pop
ljmp
das
dec
xchg
mov
dec
imul
adc
xchg
insb
push
enter
mov
wrmsr
or
sub
dec
fwait
popa
imul
mov
shl
dec
neg
lcall
addl
int
cmp
bound
shrb
cmp
push
sbb
sub
cwtl
dec
cmp
jecxz
fstpt
aad
and
int3
clc
cmc
rorb
xchg
hlt
arpl
call
cld
iret
fists
out
scas
adc
xor
xchg
popa
push
sti
fs
mov
inc
cld
or
push
jno
or
flds
sbb
js
push
cwtl
insl
and
out
ds
add
dec
jg
cmpsl
stos
loop
lea
popa
das
xchg
sbb
mov
aam
ds
aad
push
push
lods
gs
fisttpl
scas
xor
xchg
dec
mov
aam
das
and
sub
mov
ljmp
leave
xchg
ret
out
in
lods
js
rcl
sbb
shrb
cmpsl
dec
jne
mov
rcrl
faddl
add
sbb
inc
inc
mov
imul
loopne
rcrb
mov
jns
cmp
adc
jmp
sub
jne
idivb
test
push
mov
or
fucom
push
push
add
lret
daa
shl
jl
or
xchg
xor
cli
mov
add
xor
int3
push
rcrb
push
lahf
test
fwait
cs
cmp
and
mov
adc
repz
pop
or
cwtl
faddp
xchg
inc
in
divb
adc
sub
xor
retw
lea
sub
dec
mov
add
rcll
inc
enter
jno
and
and
inc
dec
lahf
insb
cmp
pop
mov
xchg
movsw
sbb
fucomi
fs
sbb
popf
jb
dec
cmpsl
fildl
loop
das
repz
outsb
dec
lret
mov
jae
insb
movsb
push
mov
cwtl
daa
aas
dec
ret
mov
push
sub
mov
adc
xor
enter
jb
in
movsl
xor
adc
fwait
mov
test
loop
xchg
xchg
push
iret
stos
dec
repnz
icebp
xor
cmp
jo
imul
jo
mov
push
jp
filds
push
cmpsl
mov
clc
sub
test
loope
push
fstps
icebp
ljmp
aam
jno
mov
fwait
mov
cmp
push
push
pop
inc
cmp
jmp
xchg
sub
jmp
cmpl
cmp
sbb
mov
jnp
loopne
subl
mov
outsl
mov
or
push
push
jmp
mov
sub
inc
cmp
lds
xchg
and
negl
call
push
dec
movsl
insb
ss
xor
xchg
xchg
mov
imull
inc
xchg
jecxz
call
outsl
stc
dec
adc
or
lret
ljmp
jns
sahf
test
add
jmp
jb
sub
sbb
iret
notl
hlt
jp
pop
roll
jmp
dec
addr16
outsb
ja
cmp
add
std
inc
mov
fsubp
fdivrl
inc
lea
mov
push
push
xor
sbb
xchg
je
mov
aad
js
dec
xchg
adc
add
dec
dec
pop
pop
hlt
add
pop
add
sub
mov
xchg
jecxz
and
sbb
push
ljmp
xchg
mov
iret
mov
fstpl
inc
xchg
or
cmp
dec
mov
es
inc
push
mull
mov
fnstenv
leave
sbb
jle
push
push
lods
inc
and
mov
into
mov
arpl
imull
mov
sub
dec
xchg
cmc
add
mov
inc
in
test
mov
and
rcll
jb
stos
or
pushf
mov
jg
cmpsl
loopne
movsb
xlat
insl
inc
or
mov
jne
dec
out
jne
imul
addr16
sti
popa
inc
inc
shl
cmpsb
aas
jne
jnp
mov
add
test
inc
daa
push
cli
mov
sbb
ficoms
add
push
sahf
je
mov
push
mov
push
lds
cmpb
fwait
les
jmp
bound
std
pop
xchg
mov
lret
xchg
out
nop
lock
int
xor
mov
fwait
xor
adc
ret
addl
movzwl
test
data16
jnp
and
mov
push
adc
shll
mov
rorl
mov
pop
test
push
push
fstps
push
sub
inc
insl
dec
pop
lahf
imull
scas
int3
dec
aas
sahf
jp
imul
lcall
mov
and
pushf
push
int3
adc
inc
xchg
test
cmp
mov
ds
mov
inc
mov
push
cmp
sub
bound
leave
pop
shlb
and
mov
dec
int
jo
out
arpl
lods
shl
rorl
push
pop
push
sub
cs
sbb
outsl
lahf
adcl
or
and
sahf
outsl
loopne
inc
inc
pop
mov
outsb
adc
jecxz
mov
minps
outsl
jg
ret
xor
or
out
or
in
xchg
lods
jecxz
add
into
mov
push
aaa
jge
fldt
push
mov
mov
cmp
jne
call
daa
jmp
jp
jns
jmp
xchg
mov
div
lock
inc
mov
fsubl
xor
fisttpll
dec
out
insl
mov
dec
jp
sbb
jge
cmpsb
add
ljmp
push
bound
addr16
dec
cmp
sbb
es
movsl
inc
or
adc
xor
jmp
lock
push
in
cs
fcmovu
aaa
pop
xor
mov
push
add
and
mov
or
sub
jecxz
jnp
stos
jb
stos
dec
das
mov
xor
or
dec
fldcw
pop
mov
test
adc
or
imul
xchg
cld
in
xor
add
mov
inc
rorl
sub
test
sub
frstor
loopne
subl
sub
dec
jno
push
push
dec
out
jne
scas
add
nop
ljmp
aam
and
mov
push
push
rol
in
sarl
cs
cmp
inc
or
push
fistl
clc
jecxz
out
dec
push
aaa
or
in
ss
in
inc
dec
adc
notl
xchg
fsts
cmpsb
dec
or
add
adc
push
inc
sbb
lahf
or
add
das
jl
push
mov
int
out
push
xchg
repnz
sub
mov
dec
rcll
mov
xor
and
insl
leave
pop
mov
pushf
jo
inc
cmp
xor
mov
mov
lea
pop
sar
inc
jle
push
lret
or
xchg
sbb
mov
xor
cld
jae
leave
stc
pop
inc
mov
sbb
roll
pop
es
inc
push
jns
out
sub
in
sbb
dec
repz
std
fisttps
fnstcw
sbb
sbb
dec
lret
movsl
mov
dec
les
push
popa
cmp
or
mov
push
sbb
push
jmp
or
fcom
dec
xor
push
push
out
fisttpll
fnsave
mov
pop
jge
scas
into
inc
icebp
sbb
or
movsl
pushf
push
and
ljmp
dec
ds
jns
dec
fists
inc
xchg
les
lea
enter
dec
add
and
push
sub
cmp
xor
dec
aaa
cmpsb
sub
xor
dec
stc
inc
jne
adcl
push
mov
stc
hlt
out
stos
ja
fisttps
int3
outsl
sbb
rolb
test
mov
in
pop
push
into
shrb
dec
out
mov
add
or
mov
aas
pushf
repz
sbb
pop
cs
inc
fcoml
sbb
adcl
adc
jge
inc
sub
xchg
movsl
add
or
push
sarl
xor
pushf
mov
mov
jmp
cmp
in
and
jp
or
mov
sbb
pop
or
in
xchg
push
mov
data16
lahf
fs
pop
daa
cmp
mov
inc
xchg
test
add
pushl
fstpt
jg
int3
sbb
or
clc
mov
xchg
xchg
outsb
into
cmpsb
cmp
adc
adc
or
mov
pop
xor
or
pop
and
push
movaps
dec
jns
cltd
popf
test
pop
or
clc
mov
xorl
data16
and
xchg
pop
loopne
add
sub
aas
stc
pushf
lahf
addr16
shr
dec
cmpsb
xchg
lret
dec
push
stc
jecxz
jae
dec
lcall
mov
pop
push
jo
xchg
jmp
cmp
or
aam
mov
xchg
arpl
mov
dec
lds
pop
clc
out
lock
mov
outsb
decb
idivb
cltd
daa
xor
pop
mov
mov
mov
ja
mov
dec
and
in
clc
jno
addr16
call
fildll
jo
clc
mov
push
sbbb
push
cmpsb
mov
js
jbe
lods
adc
or
lahf
adc
mov
leave
movsl
stos
pop
out
outsb
mov
cmpsl
dec
lea
dec
push
inc
add
bound
aas
xor
daa
fstps
push
fbld
loope
stc
movsb
xlat
xchg
neg
int
or
mov
loopne
int3
inc
mov
cmc
and
adc
inc
sub
push
xchg
shll
adc
inc
das
iret
call
setbe
jg
mov
lcall
sub
push
repnz
cld
push
in
mov
sbb
push
les
and
or
adc
jne
xor
or
sbb
lret
push
rolb
jg
pusha
dec
or
or
mov
cli
pushf
sbb
inc
in
addr16
add
test
xchg
mov
cmp
add
jmp
adc
fidivrs
enter
dec
std
enter
hlt
adc
test
into
dec
pop
push
add
inc
ja
std
in
lahf
pusha
scas
inc
sbb
sub
sub
mov
pushf
into
fidivl
gs
pop
push
cmp
sti
fbld
into
cld
xchg
imulb
xor
push
and
lahf
jne
pop
stos
cmp
cli
std
jmp
ljmp
pusha
push
xor
and
out
jp
std
leave
adc
push
imul
mov
aaa
inc
lret
fisubrl
cmpsb
int3
shr
imul
fistpl
push
and
shl
jg
cmp
xchg
jmp
sbb
add
push
or
stos
jl
hlt
ret
sahf
repz
mov
imul
mov
call
stos
jbe
fmull
jo
push
cmc
dec
sbb
sbb
jbe
movl
out
or
add
push
dec
sbb
cmp
stos
xlat
rcll
adc
mov
push
jmp
xchg
aad
mov
arpl
test
loopne
jge
test
push
shrb
gs
cwtl
or
sbb
pop
shll
push
and
sub
dec
sbb
cmpsb
mov
dec
es
lcall
rep
jge
push
lock
mov
adc
mov
fstpl
xor
mov
jg
sub
inc
pop
mov
xor
incb
mov
cltd
xchg
ret
cmp
push
test
mov
das
repz
ss
cli
outsb
cmp
incl
test
movsl
xchg
push
fadds
adc
pop
adc
pop
lock
cmp
sbb
sar
lahf
notb
adc
loop
push
add
sbb
adc
fiaddl
adc
pop
rorl
mov
adc
mov
gs
adc
sbb
inc
mov
shlb
lret
aad
pop
ret
cli
push
mov
cmp
ds
mov
pop
test
push
out
pop
push
adc
push
mov
js
mov
stos
pop
sbb
scas
adc
mov
lret
popa
sbb
xorb
insl
sbb
pop
pop
mov
pop
pop
xor
mov
jbe
sub
int3
pop
adc
dec
fs
or
mov
pop
call
call
pop
test
lods
daa
pushf
addr16
mov
jge
sahf
or
popa
test
sub
inc
mov
push
test
mull
sbb
cmp
jo
and
xor
pop
push
cmp
pop
or
dec
mov
pop
ffreep
sub
xchg
lds
mov
and
out
mov
out
cmp
in
aas
xlat
popf
dec
lods
ret
dec
imul
and
and
fildll
in
sub
pop
rcll
jb
jnp
cmp
aaa
repz
test
xchg
sarl
inc
jg
lds
insb
loop
xlat
cmpsb
dec
loope
inc
in
fs
and
pop
stos
into
dec
xor
pop
mov
scas
test
xor
dec
push
lds
xchg
sub
mov
cli
push
pop
sbbl
xchg
aas
addb
inc
dec
dec
insl
cmpl
cld
jnp
xor
fadds
jmp
jbe
loope
mov
stc
movsb
in
xchg
mov
icebp
jae
icebp
xor
sub
faddl
andl
cwtl
outsl
inc
jle
cmc
xchg
mov
and
mov
outsb
pop
xorl
pop
jne
inc
out
test
xor
sbb
ret
mov
std
hlt
xchg
nop
scas
cmp
sbb
cmp
pop
push
addr16
dec
mov
jnp
mov
js
dec
fildl
pop
cld
ds
les
mov
fs
jns
xor
add
pusha
movsb
loope
aam
mov
dec
insl
test
call
fildl
push
insl
repnz
and
add
mov
mov
inc
jl
in
pop
inc
cmp
cmp
pushl
cli
dec
rcl
adc
bound
call
dec
in
repz
ret
push
xor
test
arpl
jnp
sarb
xchg
dec
loope
xchg
sbb
daa
outsb
daa
xor
in
jne
dec
imul
aam
ror
iret
negb
outsl
cli
cmp
xor
mov
xor
inc
push
movsl
dec
mov
adc
push
jbe
ljmp
adc
pop
shrb
js
pushf
push
js
push
call
je
push
push
lds
inc
data16
mov
arpl
xlat
jo
mov
fdivs
cmp
mov
mov
push
loope
out
cmp
add
sbb
mov
sbb
sbb
sbb
mov
inc
sbb
mov
cmp
jns
pop
jo
jg
mov
out
jnp
test
xchg
fcmovne
or
ja
imul
add
mov
push
push
xor
xor
out
cmp
mov
sbb
or
sub
fcomps
add
rorl
pushf
test
xchg
adc
and
pop
adc
sub
sbb
adc
push
call
lods
jecxz
add
sub
jns
dec
sti
dec
dec
roll
clc
xor
and
rcll
and
call
stos
sub
xchg
ficompl
outsl
dec
inc
mov
cli
pusha
xlat
cmp
dec
push
cwtl
fwait
pop
sti
fmul
in
adc
push
cmpsl
adc
inc
jb
sbb
jb
subb
xor
jae
or
mov
aad
mov
pop
cmp
dec
xchg
test
jp
roll
cmp
mov
xor
cs
sub
push
push
lds
mov
adc
push
lods
mov
adc
lods
jns
lea
and
cltd
mov
jp
pop
mov
sbb
push
push
hlt
xchg
push
loop
shl
xchg
xorl
xchg
sahf
scas
cmp
adc
or
adc
mov
push
jecxz
pop
mov
movsl
addl
push
xor
sbb
outsl
xchg
pop
lahf
add
test
push
mov
fisubrl
mov
mov
mov
insl
jo
sbb
xchg
cmpsb
fistpl
cmp
xor
call
push
adc
in
call
jno
testl
xor
inc
js
xchg
pop
aad
leave
mov
loop
mov
movl
push
fwait
pop
gs
in
inc
cmc
pushf
aas
ss
shrl
xchg
fisubrs
dec
add
xor
lds
push
mov
sbb
cmp
sub
pop
aaa
unpckhps
add
jmp
mov
xor
dec
js
fisubrl
hlt
xlat
in
outsb
orl
push
xchg
jp
mov
loope
cmp
clc
mov
lret
or
push
or
aaa
pop
push
mov
push
xchg
xchg
xchg
mov
lret
lock
push
lock
cmp
mov
ret
hlt
and
lods
aaa
out
je
hlt
mov
int
ja
pop
sbb
mov
push
ret
mov
xor
and
fcompl
stos
mov
xor
inc
sbb
sub
push
sti
das
xchg
or
lea
mov
xlat
jmp
nop
and
int
jbe
inc
int
in
sub
xor
mov
push
rorb
lea
inc
rorb
add
push
cltd
xor
lcall
dec
and
pusha
outsb
jp
and
jecxz
daa
std
sbb
shrb
cli
insl
aad
dec
xchg
mov
bnd
popf
jno
fistps
icebp
sbb
mov
dec
shll
adc
add
outsl
sahf
push
mov
testb
fadds
ss
out
push
push
cmp
and
mov
mov
data16
mov
dec
stos
and
adc
adc
cmc
mov
pop
movsb
or
ret
cmp
sbb
gs
and
sbb
jl
dec
inc
fsubrl
rorb
lahf
sbb
cmp
clc
sbbb
jle
testl
movsl
dec
in
ret
mov
fwait
std
pop
fs
addb
jge
jns
cltd
inc
push
es
clc
mov
lret
leave
inc
sub
jmp
push
pop
xor
and
jmp
xchg
int
or
jp
mov
stos
inc
or
cli
dec
lahf
pop
sub
mov
add
push
lret
mov
adc
fcomps
dec
sub
movsb
mov
sbb
mov
dec
mov
sti
jl
mov
mov
jo
pop
mov
dec
mov
pop
cmpl
mov
adc
push
xor
inc
sub
lahf
pop
movsl
inc
shrb
leave
dec
pop
and
push
iret
add
xchg
hlt
dec
pop
mov
and
loopne
mov
pop
xlat
xor
cmp
bound
test
leave
loopne
and
add
imul
mov
insb
cwtl
mov
pushf
sub
lods
data16
pop
cli
mov
xor
aad
jno
jge
add
lret
sub
dec
mov
push
mov
je
daa
mov
xor
mov
psubb
sub
repnz
push
lahf
lods
popa
insl
imul
push
mov
jae
mov
adcl
xor
jl
cs
out
or
dec
jnp
pusha
inc
sbb
mov
cmp
call
push
mov
mov
scas
mov
outsb
sbb
or
insl
divb
test
fld
pop
dec
xchg
leave
fistps
iret
xchg
cmc
push
sbb
dec
in
cmp
lock
shll
adc
fidivrl
fisubs
ds
fnsave
pop
les
and
pop
cmp
add
iret
sub
or
xchg
mov
xor
add
repnz
and
ret
mov
sub
sbb
inc
push
sbb
adc
mov
sbb
push
fcmovne
scas
jne
hlt
mov
add
sbb
cmpsb
mov
pop
jmp
dec
xor
test
loop
aad
sbb
mov
fisubl
out
or
inc
adc
dec
dec
push
push
outsb
cmp
push
int3
xorl
xor
test
cmp
mov
mov
and
stc
or
adc
cmpsb
int
push
mov
inc
outsb
jae
testb
mov
fmull
push
or
xchg
addb
fwait
orl
test
arpl
loop
push
fimull
test
popf
inc
rorb
push
pop
and
test
mov
int
lods
mov
stos
jecxz
sti
xchg
lds
int3
mov
sub
fisttps
fnstsw
cltd
push
pushf
inc
xor
enter
popa
lret
dec
mulb
arpl
inc
stc
xor
daa
push
jp
call
mulb
and
and
inc
aaa
out
test
ljmp
xlat
xor
repnz
sub
jmp
enter
cmp
test
aam
dec
pusha
lret
sarl
mull
dec
mov
pop
dec
ljmp
push
xchg
or
aaa
or
cmp
aaa
xor
roll
xor
push
test
mov
xor
cmp
shll
fs
pusha
mov
scas
mov
inc
mov
jle
mov
lret
aam
inc
add
sbb
dec
ret
scas
pop
mov
mov
mov
jmp
orb
pop
icebp
ja
jo
adc
pop
mov
xor
ror
out
ja
adc
mov
jmp
adc
int
xor
sahf
pop
ret
xlat
shlb
jge
loopne
cmc
mov
call
enter
jo
int3
push
sbb
imul
xchg
dec
pop
lock
mov
in
fucomp
je
mov
idiv
jae
aaa
mov
adc
pop
lods
dec
cwtl
pusha
jp
mov
add
mov
popa
pop
jnp
pop
jae
out
pop
push
adcl
pop
incl
cmp
and
vpackuswb
testb
xor
pop
push
out
sbb
outsl
or
add
sub
andb
push
jp
cmp
arpl
pop
mov
adc
mov
mov
icebp
adc
pop
xchg
dec
push
push
test
leave
hlt
mov
pusha
stos
sub
xchg
or
xchg
mov
testb
dec
cmp
inc
mov
dec
aad
sub
lcall
adc
test
loopne
sahf
push
and
lcall
cmp
push
jecxz
mov
sub
mov
shll
xchg
xchg
loopne
test
lea
dec
mov
andl
jecxz
jle
loop
inc
iret
bound
outsb
jmp
fcompl
mov
addr16
addr16
adc
xchg
mov
mov
fsubrl
or
cwtl
cmpl
adc
pop
bound
fdivs
fmuls
out
cwtl
and
fmuls
loope
cs
and
mov
add
in
push
loop
cmp
fildll
das
mov
mov
bound
fsubl
xor
xor
dec
cli
sarl
mov
jmp
sti
add
movsl
movsb
movsl
fistps
jno
lods
shll
stos
insl
pop
pop
adc
pushf
lock
call
xchg
mov
xchg
out
jge
scas
sahf
jg
das
and
and
sub
sbb
xor
adc
xorl
nop
pop
aas
and
add
jmp
inc
daa
or
mov
or
xor
mov
jg
inc
jbe
rcll
and
cmc
jno
fcomps
add
leave
sub
ret
inc
xor
sahf
pushf
nop
clc
mov
jb
dec
add
pop
adc
aaa
pop
mov
pop
jae
bound
ret
in
sbb
xchg
loopne
imul
incl
add
mov
adc
addl
sub
mov
cmp
xchg
cwtl
pop
jno
cwtl
lods
subl
push
loope
sub
shlb
out
cmp
pusha
inc
cmc
mov
and
dec
mov
sbb
lea
lea
push
and
jge
fidivrl
lcall
fsubrs
dec
test
lea
mov
lock
jp
adc
nop
addr16
inc
addr16
clc
push
xor
mov
fnstcw
push
mov
divl
loop
mov
sub
lret
data16
jmp
mov
pop
out
lods
push
pop
aad
xchg
add
std
push
cmpb
mov
movsb
icebp
or
push
imul
xchg
mov
mov
frstor
repz
imul
popa
mov
loop
mov
and
dec
mov
je
shll
cld
cmp
imul
cmp
test
push
insl
insl
xchg
push
dec
fwait
cmpsb
movsl
xor
repnz
dec
jg
mov
aas
ds
lds
xor
cmp
cli
in
mov
and
stc
leave
clc
inc
lcall
in
sbb
hlt
mov
sbbb
rcrl
filds
mov
shl
mov
pop
or
in
pop
mov
aam
int
jae
dec
in
sbb
push
jbe
arpl
sub
xchg
jp
pusha
aam
test
jae
adc
sub
movsb
pop
lret
in
mov
pop
sti
jo
gs
out
jle
ja
xchg
insb
cmpsl
and
and
adc
dec
cmp
in
and
mov
adc
and
pop
pop
and
test
adc
out
dec
xchg
mov
and
pop
ljmp
fistpll
je
std
and
mov
cmp
cmp
out
and
add
adc
cmpsl
cmpsl
into
insl
mov
in
addb
push
mov
bound
and
fnstenv
inc
and
test
loope
mov
repnz
popa
lock
inc
mov
adc
ret
and
or
mov
sbb
add
mov
mov
push
dec
dec
mov
sub
adc
push
out
shll
sbb
movsl
sahf
pusha
push
stc
xchg
add
or
mov
add
mov
and
fwait
adc
bound
jp
fwait
test
push
jmp
ljmp
sti
jg
mov
iret
shll
mov
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
notl
jae
jp
sbb
jp
das
leave
out
fwait
inc
iret
add
fcomip
arpl
es
push
aaa
arpl
iret
hlt
or
jno
addl
sbb
add
sbb
movsl
mov
xchg
cmp
inc
jl
ret
dec
sbb
push
out
sub
in
jbe
adc
pop
mov
xchg
aas
ljmp
sub
lock
pop
rcrl
lret
push
jmp
outsb
xchg
pop
lahf
pop
mov
sarl
mov
push
fnstcw
das
fwait
xor
into
sub
cmp
test
xchg
lock
fldl
addb
push
sub
ljmp
lods
and
mov
gs
push
sbb
inc
fadds
xor
push
and
jbe
aam
jge
mov
sbb
mov
int3
inc
inc
mov
js
xchg
xchg
test
adc
mov
icebp
mov
cmp
shr
pop
repnz
xorb
inc
sub
pushf
sbb
mov
and
rorb
sbb
addb
jl
out
sbb
ss
out
and
cli
hlt
or
cli
pop
xor
add
pop
pop
jne
mov
mov
fimuls
cmp
sbb
cli
test
mov
jmp
or
jae
lahf
rorb
pop
cmp
cmpb
loope
outsb
ja
dec
push
inc
nop
mov
movsb
inc
jg,pn
ljmp
jo
lods
xor
jae
push
mov
hlt
sub
adc
es
lods
dec
sbbb
lock
jns
and
in
orl
dec
inc
lret
sbb
sbb
pop
lods
inc
popf
mov
pop
daa
shlb
fimuls
pop
mov
in
pop
mov
shrb
push
insb
aad
xor
sub
or
cmp
or
mov
rclb
add
iret
adc
push
xchg
testl
cmpsb
fcmovnu
sarl
fs
movsb
adc
mov
out
pop
enter
stc
int
cmp
inc
test
scas
jb
and
and
xchg
out
add
in
adc
sub
adc
xchg
mov
cmp
push
push
rcll
popa
shlb
sbb
sbb
cmpsl
in
stos
and
push
shrb
pop
aam
cwtl
push
jns
or
push
jnp
cmpsb
inc
hlt
adc
std
adc
mov
outsl
or
cmp
sbb
stc
repnz
repnz
jmp
scas
mov
andl
add
stos
jge
or
push
jb
scas
or
sbb
jb
jmp
or
mov
lods
or
fwait
mov
movsb
push
mov
fwait
das
and
int
test
pop
mov
lock
push
divl
mov
shll
xchg
inc
je
push
inc
test
mov
insl
sub
iret
and
jl
xor
or
adc
daa
rcrl
xchg
mov
push
push
adc
shrd
jmp
sbb
dec
inc
mov
int3
pop
aaa
out
rcll
add
cmp
and
sub
pusha
insl
rorl
popf
icebp
aam
addr16
mov
and
nop
jne
imul
outsb
jg
xlat
icebp
mov
rcrl
sbb
decb
inc
pop
dec
dec
mov
xor
adc
mov
ja
jl
inc
in
inc
aam
lcall
mov
in
inc
pushf
int
pop
std
in
mov
dec
out
mov
cmpsl
dec
sahf
mov
jmp
mov
fists
stc
arpl
lods
loopne
sarl
adc
aaa
pop
sahf
sbb
cmp
adc
mov
sbb
gs
ljmp
or
cmpsb
lahf
lods
rcr
maskmovq
push
jae
aaa
push
pop
sti
popa
sbb
mov
rcr
stos
leave
cmp
jl
lahf
push
jne
cmp
dec
xchg
or
dec
pop
mov
cmc
push
adc
mov
into
shrb
cli
idivl
rorb
and
ror
sub
mov
cmp
push
jmp
mov
aad
pop
stos
dec
jne
repnz
xor
lods
cmp
lret
jmp
cmp
and
pop
xor
dec
lahf
nop
sub
mov
in
aad
dec
adc
inc
pop
es
scas
repz
fwait
xchg
push
push
and
dec
lods
or
dec
mov
cltd
jg
sbb
aad
jl
cmp
mov
xor
add
loopne
out
jmp
lret
push
ja
jl
lret
push
out
pop
loope
xchg
cmp
in
popf
cwtl
or
mov
mov
popf
inc
sti
scas
push
ror
fwait
ret
xchg
jnp
sub
push
push
xorb
inc
js
aam
xor
or
sub
inc
loopne
addr16
adc
sub
xchg
mov
nop
shll
stos
and
xor
mov
adc
jg
sub
jmp
pop
pop
jbe
stc
out
jle
fistps
inc
insl
enter
sbb
aam
rorl
in
andl
sti
mov
xchg
imul
mov
xor
inc
ljmp
rcl
push
add
lret
aam
gs
adc
pop
jbe
or
cmp
nop
test
in
fidivl
mov
stos
loop
jle
and
mov
add
xlat
xor
sub
addr16
in
pop
jae
mov
fcomps
mov
cld
pop
je
pop
es
add
mov
adc
adc
mov
scas
insb
daa
push
into
cmp
jle
push
inc
and
cli
les
adc
out
mov
sbb
movsl
pop
outsl
mov
push
jne
mov
or
inc
mov
ljmp
out
clc
sub
and
rcr
mov
pop
mov
add
push
ss
inc
insl
add
and
sub
fs
fs
dec
push
mov
jbe
pop
cwtl
lods
mov
dec
cmpsl
gs
cmpsb
mov
call
repnz
negl
mov
iret
mov
add
mov
outsl
rorl
pop
jl
jmp
mov
leave
and
push
js
add
inc
pop
mov
pop
push
lret
push
xchg
lahf
test
or
mov
ds
inc
test
lea
cli
out
mov
adc
mov
ffree
pop
dec
adc
iret
sbbl
inc
in
mov
imul
push
adcb
insl
sarl
sbb
aam
hlt
sub
push
push
es
mov
jae
lds
mov
rclb
out
movsl
or
lods
in
and
jnp
and
lea
lds
mov
lahf
xchg
aaa
adc
ljmp
sbb
inc
push
xor
and
iret
call
mov
pushf
mov
push
push
stos
sbb
cltd
pop
sbb
jmp
mov
test
cld
in
imul
push
shl
out
andnps
pop
xlat
fisttps
aad
out
data16
pop
push
fwait
mov
outsb
push
aad
adc
dec
fwait
insl
cwtl
test
sub
das
or
aad
xor
xor
add
sbb
lods
mov
shl
sub
dec
out
dec
xchg
inc
inc
adc
add
cmp
imul
pop
adc
sbb
lret
pop
test
scas
pushf
mov
inc
sbbb
dec
xor
push
popf
cmc
mov
repz
hlt
gs
jbe
outsb
stc
decb
and
mov
cmp
stos
jle
mov
fadd
popf
loope
mov
xchg
add
orl
popa
gs
ds
add
outsb
fisubrl
stc
or
cmc
adc
sbb
fisubl
sub
inc
lock
xchg
mov
sti
mov
pop
mov
loop
sahf
add
out
lods
jmp
sub
add
push
mov
or
sub
add
dec
lcall
lods
sbb
mov
std
into
stos
mov
sbb
mov
sarb
inc
shrl
xchg
push
mov
popl
pushf
out
mov
mov
inc
sbb
mov
inc
push
enter
sbb
inc
mov
cmp
fstpt
ljmp
cwtl
inc
or
pop
xlat
outsl
orl
sbbb
or
xor
sub
jl
movl
cltd
push
jmp
fwait
xor
mov
enter
rorb
fcomp
lret
sub
fs
orl
push
or
sbb
mov
test
sub
pop
fiaddl
mov
cli
movsl
add
lods
pop
icebp
addr16
xchg
or
aas
push
enter
jge
fnstsw
mov
ss
fstl
out
pop
sbb
sbb
pop
pop
cmpsl
pop
pop
cli
es
jbe
decl
out
int
jno
in
dec
arpl
adc
stos
iret
out
jnp
test
dec
loop
sub
loope
pop
mov
push
scas
sub
outsb
subl
ds
add
adcb
add
in
ret
mov
adc
pop
lods
xchg
cmp
imul
dec
mov
and
sub
or
mov
and
adc
sub
out
out
push
ss
inc
roll
orl
mov
cmpsb
loop
pusha
mov
mov
in
bound
cmp
out
or
jo
adc
jle
jg
test
movsb
add
jecxz
jle
xchg
pop
push
jo
jns
mov
push
push
mov
repz
and
dec
mov
or
mov
stos
test
cmp
mov
cltd
dec
fbld
lret
lea
mov
or
sbb
mov
cli
jno
mov
aaa
lcall
les
inc
aad
jge
iret
sub
sarl
mov
add
int
push
or
popa
lock
adc
shr
shr
into
mov
aas
mov
inc
pop
push
jnp
test
push
nopl
enter
arpl
sbb
sbb
test
je
jne
fcmove
push
lock
mov
pushf
lods
pop
fstps
dec
loop
popf
cs
mov
jb
push
or
test
inc
mov
adc
mov
push
in
lret
movsl
jno
lds
in
outsb
inc
sbb
in
xor
mov
clc
adc
mov
cmpsb
popf
loop
iret
mov
mov
test
jnp
aas
decb
mov
rol
xchg
cld
out
aaa
adc
push
loope
sarb
mov
fndisi(8087
gs
mov
mov
je
mov
jmp
test
sub
sbb
sub
pop
push
je
loop
xor
ret
sbb
sbb
mov
sub
xor
adc
pop
dec
push
mov
js
pop
loop
ret
leave
out
imul
cld
adc
adc
mov
mov
aam
rcrl
test
cmp
xchg
nop
adc
outsb
xor
sti
out
sub
mov
arpl
in
inc
inc
xor
adcb
adc
sub
jmp
mov
mov
pusha
insl
stos
ret
lods
neg
mov
testb
dec
fsubs
mov
inc
fisubrl
lods
in
pop
xchg
and
nop
sub
jns
pop
add
addr16
pop
loop
ret
jmp
adc
cmp
pop
gs
loop
xchg
aaa
pop
inc
add
adc
stos
std
mov
cs
cs
mov
mov
mov
cmpsl
daa
das
bound
inc
mov
or
sti
jle
scas
bound
in
loope
sub
dec
xor
fucomip
add
outsb
mov
cmp
xchg
jl
mov
mov
inc
das
sub
fwait
xchg
dec
stc
sub
inc
push
lret
cmc
into
repz
inc
in
je
ficoml
push
call
xchg
push
add
mov
arpl
jno
or
jbe
xchg
repz
aas
jns
lods
sbb
fdivrs
movsb
lea
mov
bound
sbb
jbe
scas
std
sub
dec
adc
pop
push
mov
dec
mov
mov
sahf
cwtl
lret
and
mov
sub
fsts
pop
cmp
adc
pop
mov
mov
ret
and
bound
testb
sbb
nop
or
sti
cmp
pushf
mov
test
dec
pop
cmp
addr16
dec
add
clc
xchg
or
ficomps
push
adc
jno
aam
sub
data16
in
push
movsl
or
neg
pushf
xchg
movsl
ss
sbb
or
sub
jl
sbb
sarl
cli
add
mov
jge
aaa
xlat
and
sbb
sti
addr16
mov
jbe
inc
rcll
xchg
stos
int
loop
pop
lea
mov
fwait
cld
shll
lcall
negl
incb
xchg
sub
rol
into
insb
cli
jnp
ja
out
aam
loop
mov
jns,pn
leave
test
shrl
jb
bound
test
jae
xchg
push
js
clc
cli
test
dec
mov
jno
stos
and
out
lret
push
out
ja
mov
js
dec
es
push
icebp
xchg
sub
shl
and
or
lea
lret
cwtl
enter
dec
sahf
ret
mov
adcl
xchg
pop
xor
xchg
jmp
cs
std
inc
jmp
arpl
ss
xor
dec
test
int
and
cmpsl
jns
sub
test
sbb
rorl
popa
xchg
xchg
insb
loopne
dec
and
stc
xchg
into
sti
stos
sbb
pop
and
rcrl
mov
xor
mov
dec
imul
sbb
roll
and
addb
xor
aaa
out
xchg
loop
inc
or
cmp
pop
scas
adc
push
dec
or
fwait
adc
loopne
movsb
cwtl
ja
je
js
xor
jge
dec
test
ret
and
out
cmp
mov
and
imul
lods
mov
das
or
fsub
popa
xchg
ja
pop
aas
xchg
pop
jmp
or
add
or
mov
icebp
int3
jbe
rol
push
sub
inc
repnz
into
jb
adc
jb,pn
mov
and
pop
jnp
or
fdivrl
out
sub
cmp
sahf
xchg
mov
pop
jle
test
popf
mov
imul
or
mov
cwtl
adc
mov
sbb
movsb
in
shlb
mov
xor
out
mov
push
adc
pusha
xchg
dec
call
bound
or
mov
dec
mov
aam
push
sub
mov
daa
add
push
js
cmp
jle
nop
popf
cmpsl
loop
mov
inc
rcll
out
cmpsl
dec
outsl
jne
jmp
pop
pop
inc
xchg
lds
xchg
lahf
das
mov
jno
lds
push
mov
nop
ss
cs
inc
pop
mov
fdivrs
dec
and
jnp
or
call
sti
add
das
or
xchg
pop
jns
ss
popf
cmp
adc
shrb
xor
mov
inc
out
or
pop
aaa
push
cmp
mov
sbb
enter
push
dec
or
mov
cs
push
insb
inc
dec
ficomps
cli
hlt
sbb
mov
sub
repz
xor
call
ret
jno
pop
mov
std
mov
dec
xor
repnz
insb
movsb
frstor
ret
mov
or
cmpsl
popa
push
les
arpl
cwtl
fistpl
dec
cmc
mov
dec
adc
lds
orl
sub
mov
inc
into
sarb
and
aad
pop
rcr
ret
or
dec
push
mov
xlat
fldenv
pop
stc
jno
mov
mov
xchg
dec
aam
mov
das
sub
in
aad
stos
cmc
loope
lods
int3
dec
adc
lret
cmpsl
add
jecxz
mov
fiaddl
xor
mov
cs
add
mov
or
jb
sbb
mov
dec
pusha
push
test
cmp
shrb
inc
jge
sbb
fwait
out
movsl
or
jle
mov
lcall
icebp
fisttpl
xchg
fisubl
jbe
mov
sub
and
pusha
adcl
pop
jecxz
clc
faddl
aam
in
dec
insb
sti
mov
ss
lcall
xor
mov
frstor
mov
mov
inc
push
stos
push
or
mov
jp
iret
or
lahf
aad
adc
nop
aas
xlat
jns
movl
mov
sbbb
outsb
movsl
cmpsl
pusha
movsb
adc
iret
jmp
dec
adc
inc
es
xor
xchg
test
in
insb
jo
cmpl
inc
shrl
mov
fnstcw
fs
cs
push
outsb
cmp
int
jecxz
mov
mov
test
inc
xchg
lea
in
jno
push
ja
xor
jle
cmp
movsl
push
sbb
pop
xor
test
xchg
into
in
inc
mov
xchg
mov
cld
sbb
fldenv
jp
xchg
ror
pop
ss
and
pop
sub
jnp
std
fucomip
aad
in
loope
sub
push
out
stos
sbb
jns
sub
push
jb
movsl
sub
cmpb
sbb
filds
mov
ja
clc
je
sub
js
pusha
jo
mov
stos
cwtl
bound
call
pop
faddp
mov
data16
cmp
aad
mov
mov
cmpsb
dec
imul
popf
dec
mov
mov
in
dec
mov
mov
or
imul
sub
xchg
jge,pt
repz
sbb
lret
push
dec
adc
or
repnz
dec
stc
push
decb
or
mov
fsubl
adc
fwait
jbe
cmp
jg
popf
mov
mov
lds
in
mov
int
xchg
lods
fldt
pop
or
dec
das
fildl
mov
call
frstor
js
outsb
in
jno
imul
leave
pop
mov
mov
ret
loop
outsl
mov
dec
xlat
iret
fsincos
adc
scas
insl
fisubrs
jle
push
lret
stos
xchg
push
in
shrb
int3
push
loop
into
jg
movsb
mov
xor
pop
add
lahf
jmp
mov
iret
mov
sti
icebp
stos
mov
sbb
pop
rorb
iret
inc
leave
xchg
xchg
shll
push
adc
pusha
fidivrl
xchg
xor
fcoms
mov
and
pop
and
push
hlt
sub
xor
inc
and
mov
aad
shl
mov
mov
sbb
cmpsl
xchg
pop
jp
push
aas
sub
sbb
cmp
js
in
test
rcll
dec
ss
movb
fiaddl
jb
dec
int
scas
mov
flds
pop
xchg
imul
push
mov
mov
fildll
jnp
xchg
push
or
sarl
push
mov
mov
daa
jnp
dec
pop
add
mov
dec
es
popa
mov
sbb
sti
push
stos
mov
aaa
push
dec
rol
test
mov
aaa
repnz
xchg
clc
mov
sbb
test
pop
mov
add
push
mov
out
dec
fcompl
lods
and
or
mov
add
bound
pushf
test
pop
lea
mov
jmp
loope
jmp
dec
ljmp
mov
jg
sub
idivb
xchg
or
roll
push
add
rorb
push
aad
in
push
stos
push
fstps
mov
and
mov
xchg
jp
arpl
bound
xor
gs
int
aam
sbb
arpl
pop
cmp
movsb
mov
insl
push
mov
inc
push
cmp
push
push
inc
pushf
in
mov
dec
add
les
aam
lea
mov
inc
or
into
cmpb
daa
dec
pop
xchg
and
fs
std
aas
dec
sbb
and
and
iret
xchg
or
fxch
jp
je
mov
jb
inc
push
pushf
out
and
push
test
mov
add
cmp
mov
push
shlb
rorl
hlt
add
add
add
add
push
pop
mov
cmp
push
xchg
out
cmp
pop
jae
sbb
aas
dec
xchg
jg
xor
and
jnp
xchg
mov
inc
mov
fcmovb
jecxz
add
subl
loop
insb
sub
jnp
mov
sbb
mov
mov
cmp
bnd
cmp
sub
int
sbb
hlt
mov
cmp
orb
movsb
fcmovnbe
jne
fisubrl
imul
jae
jg
shll
sahf
sub
sahf
mov
mov
sbb
es
or
test
mov
enter
sbb
fsin
jmp
leave
pop
mul
cwtl
pop
in
inc
cmpb
cld
dec
outsl
pop
cmp
cmp
push
leave
andl
dec
scas
imul
icebp
nop
aas
add
pop
addb
xchg
mov
popf
push
filds
push
cmpsb
fwait
dec
sub
pusha
out
cmp
andl
and
out
dec
mov
outsb
jne,pt
ret
sbb
lock
out
pop
loope
into
daa
add
js
call
bound
lea
pop
out
cmp
lea
push
sahf
cmovo
xchg
cmp
imul
call
fwait
popa
cwtl
dec
jb
data16
addl
mov
cmp
sarb
cmp
idivb
push
jge
les
xchg
mov
mov
outsb
sbb
add
out
xor
cmp
xchg
or
insb
bound
fldenv
std
aad
pop
xor
test
sbb
stc
iret
mov
mov
sahf
shlb
ljmp
inc
insl
mov
shll
or
pop
addb
es
jle
mov
sub
std
fs
daa
push
adc
sub
or
test
sub
les
jns
bound
mov
pop
cmp
sarb
push
ret
and
cmp
jbe
test
inc
xor
sub
addr16
mov
inc
xlat
loop
test
popa
add
lods
outsl
int3
nop
scas
loope
push
mov
das
and
sbb
imul
js
in
aad
lea
push
pop
add
xchg
add
sub
stc
loop
in
push
push
sbb
pushf
inc
out
jb
lahf
pusha
sub
xor
dec
or
test
cmc
cmp
in
lds
cli
xchg
inc
inc
adc
fcoms
or
sub
adc
cmp
faddl
and
subl
orl
cld
push
lret
movsl
ljmp
cmp
lock
daa
hlt
mov
lcall
sbbb
fildl
pop
shll
adc
push
push
addr16
clc
mov
mov
inc
adcb
or
jne
fisttpl
loopne
ret
pop
cmp
fsubrp
negb
add
in
scas
in
popl
insl
xor
adc
test
jbe
shll
in
pop
stc
add
and
dec
xchg
xor
pusha
xor
jg
mov
xorl
leave
dec
shrb
aad
repz
call
jg
ret
cli
xor
sbb
leave
pushf
lods
push
push
sbb
sub
mov
in
call
cli
push
xchg
repz
lods
sub
inc
add
pusha
cmc
xlat
inc
add
inc
out
mov
xor
subb
arpl
fisubrs
adc
inc
ss
rcrl
adc
sub
jne
in
call
and
icebp
push
daa
add
decb
popf
cmp
xchg
xor
cmp
pop
fndisi(8087
xchg
push
xor
lcall
xorl
imul
movsb
pop
les
fidivl
mov
movsl
lods
jae
sbb
push
inc
and
xchg
jno
in
and
jno
dec
arpl
add
es
xor
xchg
fistps
cltd
subb
cmp
jg
cmp
jne
ds
add
xor
and
lcall
xor
xchg
ljmp
loop
adc
or
mov
lods
add
or
push
loop
rcr
mov
dec
clc
shrl
cld
aad
sbb
adc
popf
imul
or
xchg
outsb
jbe
jb
call
jae
add
sbb
mov
pop
addb
cli
push
shlb
mov
lods
jp
dec
rcrb
mov
mov
mov
xchg
loopne
add
pop
jns
movsb
shlb
lods
xor
dec
push
stos
stos
mov
pop
mov
dec
or
sbbb
jnp
into
xchg
cmc
push
or
out
xchg
adc
pusha
test
iret
lods
icebp
into
dec
rcrb
cs
int
fadd
addr16
pop
jb
stos
in
stos
shrb
inc
cltd
push
cltd
pop
inc
and
xchg
add
scas
jmp
sbb
mov
dec
xor
pushf
push
cmp
push
stos
lea
mov
in
rcrl
sub
addr16
xchg
dec
lods
bound
cs
pop
outsb
mov
call
pop
push
shl
subl
mov
jno
imul
mov
inc
and
sti
push
mov
daa
test
fwait
clc
pusha
fcoms
lahf
ljmp
aas
lcall
adc
xchg
push
scas
sub
sbb
fildl
out
mov
je
adc
mov
pmaddwd
outsb
rorb
negl
xchg
mov
jp
push
gs
and
sbb
xchg
inc
stos
mov
push
add
ss
mov
xor
inc
fcoms
dec
mov
popf
inc
inc
sti
out
cwtl
cmpsb
fstpl
sbb
or
push
into
hlt
xor
es
jge
mov
arpl
jg
sbb
adc
lds
jp
jnp
mov
and
cs
popa
or
adc
aas
or
cmpsb
mov
sarl
ret
sti
jmp
into
insl
popa
sub
add
gs
jbe
xchg
xchg
inc
in
test
mov
jbe
scas
mov
xchg
mov
cli
sub
mov
or
filds
data16
inc
and
in
or
add
cmc
fbld
lods
sbb
xchg
mov
push
ljmp
add
push
insb
mov
cwtl
ljmp
push
pop
inc
icebp
push
sbb
inc
lock
outsb
lods
bound
bound
adcb
sbb
xor
mov
mov
push
fldt
aas
sbb
dec
pop
mov
pop
daa
scas
jle
inc
and
dec
loope
inc
push
xor
xchg
xchg
dec
or
inc
sub
add
fincstp
lahf
repz
add
sbb
xor
inc
sub
daa
push
loope
pusha
xor
mov
pop
sub
lahf
jp
mov
negl
lods
cmpsl
call
sub
and
addr16
jno
ss
test
andb
jg
js
je
in
push
insb
mov
sbb
or
jmp
aaa
jge
xor
push
inc
add
popa
and
sbb
fstpl
or
adcl
lods
dec
rcr
cs
mov
daa
je
ja
mov
dec
push
iret
or
lret
sbb
pop
jg
stos
sbb
sbb
dec
and
cmpsb
mov
and
xchg
pop
movsl
inc
xchg
icebp
and
push
mov
aam
mov
sub
pop
les
mov
jae
lods
adc
push
ret
add
inc
mov
jp
in
cmc
fcomps
stos
inc
test
pop
pop
sub
loop
ret
push
add
dec
mov
sub
sbb
shl
jp
adc
cld
pop
sub
sbb
mov
orb
pop
sbb
fnsave
cwtl
cmp
shrb
pop
add
jge
xlat
sub
popf
icebp
mov
sub
pop
cmp
in
mov
jmp
pop
ljmp
decl
ljmp
mov
stos
pop
fwait
test
icebp
mov
jp
int
enter
mov
sbb
js
and
and
add
pmaddwd
jae
cmp
or
insb
xor
test
inc
mov
lcall
mov
out
call
mov
call
push
adc
or
aaa
fwait
test
stos
xor
mov
xchg
rolb
imul
idivb
loop
ljmp
into
add
out
data16
clc
and
sub
mov
cmpsl
enter
popa
fs
int
sbb
xchg
fst
mov
pop
mov
movsl
inc
popa
inc
stos
xor
mov
out
decl
pop
mov
data16
addb
pop
mov
mov
xchg
adc
mov
insl
add
adc
xchg
jnp
xchg
rolb
or
mov
stos
fucom
dec
jg
cmp
xchg
and
xchg
popf
push
mov
push
or
stos
xor
cmpsl
loop
insb
outsl
sbb
mov
dec
flds
std
xchg
dec
xchg
lcall
in
xchg
xchg
fwait
xor
inc
movsl
xchg
push
lods
dec
xor
xchg
iret
sub
ret
rol
test
pop
mov
dec
arpl
cld
clc
mov
or
lcall
or
push
std
mov
repnz
sbb
cld
mov
cmp
incl
mov
fs
mov
xchg
subb
repz
jecxz
push
mov
jo
fiadds
maxps
dec
mov
ficomps
lahf
sub
out
or
fmul
jl
mov
notb
push
dec
lret
sahf
xor
inc
out
lcall
cmp
lea
jecxz
movsl
mov
mov
pop
shlb
shrb
mov
cmp
aad
scas
fcmovbe
sub
pop
cmpsb
pushf
fcoml
cmc
orl
xor
mov
out
cltd
pop
shr
scas
or
in
mov
or
enter
cmc
xchg
sub
mov
mov
test
xlat
ljmp
ret
cmc
pop
scas
iret
subb
push
mov
sbb
xchg
imul
push
lahf
lea
arpl
dec
adc
jb
jl
je
out
out
inc
cmpsl
mov
in
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
and
scas
jp
or
jp
push
cwtl
push
stc
clc
gs
mov
mov
mov
dec
sbb
and
cmpsb
popf
cmp
pop
push
xacquire
xor
lea
shlb
mov
jo
and
jne
rorl
imul
repnz
dec
push
adc
scas
js
sbb
cmp
mov
movsl
jbe
inc
fsubp
daa
push
add
ficompl
negl
int3
cltd
lcall
pusha
push
push
push
xor
test
add
fcmovnb
xor
pop
push
lock
clc
iret
or
cs
jb
mov
cli
jne
mov
jae
pop
stc
sahf
mov
shlb
shrl
std
cmp
ja
push
data16
push
sub
mov
test
cmp
and
out
testl
inc
sub
mov
shrb
jno
ds
decb
cmp
mov
or
adc
out
dec
inc
add
loop
lret
jno
jae
and
cmpsb
mov
scas
sbb
mov
pop
ss
ret
dec
and
dec
cmp
adc
sbb
in
jne
repz
fldenv
dec
pop
jge
pop
mov
add
mov
cld
fcoms
push
jp
jle
dec
or
cmp
pop
xchg
push
or
dec
push
fadd
mov
insl
idiv
pop
test
insb
add
out
je
sbb
or
jecxz
aad
or
rorl
cs
ds
fstpl
push
adc
insl
add
fdivr
rclb
repnz
in
lret
push
jecxz
cmp
call
mov
mov
icebp
dec
daa
sbb
inc
adc
dec
or
or
cmp
mov
jo
je
cwtl
cltd
cmpsb
jecxz
sbb
pop
pop
arpl
jae
js
mov
rclb
clc
xlat
xchg
test
dec
sbb
cmp
loop
stc
sub
push
das
outsl
add
pop
dec
cli
fs
jmp
ja
push
cld
adc
add
sub
insl
popf
pop
dec
cli
cmp
fmull
ret
jo
icebp
sbbl
add
in
dec
and
lret
cli
xchg
inc
ljmp
push
xchg
pop
cmpsl
out
clc
in
test
stc
lcall
pusha
cmc
rcrb
mov
fstps
ret
pop
int3
sbbb
push
add
mov
pop
mov
ret
push
adc
sub
mov
out
pusha
gs
push
add
pop
adc
mov
pop
fisubrs
push
sub
inc
pop
push
xchg
jp
cli
in
cltd
out
cmpsb
cmp
and
lock
mov
in
xchg
push
mov
dec
fdivp
and
pop
shll
pop
fs
push
mov
call
clc
rorl
mov
add
clc
je
addr16
sbb
sbb
fimull
xchg
out
dec
mov
mov
cmp
shl
pop
cmc
mov
fildl
pop
lcall
cwtl
dec
inc
push
loopne
dec
scas
mov
test
test
ficomps
push
push
call
shl
imul
push
setbe
cmp
test
dec
and
movsb
pop
jae,pn
add
mov
xorl
or
scas
xor
clc
push
in
cmp
inc
mov
lods
sub
inc
push
fstpl
pop
dec
popa
cld
cmpsb
add
pusha
aas
test
rcll
pop
lahf
movsl
cmp
mov
in
add
pop
imul
fdivs
in
and
sbb
cli
push
aas
scas
stos
fucomi
add
or
jp
lret
mov
in
stos
adc
pop
outsl
stos
mov
xor
out
leave
mov
in
popa
lret
jne
or
push
jle
adc
inc
cmpsl
mov
inc
push
and
outsl
outsb
xchg
ss
lds
push
mov
cs
jbe
mov
cmp
jnp
pop
daa
jmp
inc
call
stc
mov
jo
ljmp
dec
loope
outsl
adc
lds
adc
addr16
test
loope
and
out
xor
lret
xchg
fcmovnu
repnz
fldt
add
xor
and
xor
jle
aas
mov
ja
int
fstpl
dec
sub
bound
ret
dec
push
xchg
into
or
fs
gs
in
push
dec
shlb
xchg
js
mov
mov
int
and
loope
loope
test
daa
mov
and
loopne
jnp
imul
jae
and
inc
xchg
xor
imul
into
sti
xor
and
add
lods
insb
mov
sbbb
push
push
fwait
jo
push
movhps
sbb
inc
pop
xlat
subl
lret
push
cltd
or
leave
outsb
leave
mov
push
rcl
add
mov
dec
mov
fcmovnbe
add
loope
sub
leave
or
cmp
ret
daa
xchg
mov
gs
imull
ffree
mov
pusha
sub
sbb
push
sbb
mov
gs
xchg
push
inc
cmp
movsl
shlb
mov
cmc
and
push
push
out
adc
dec
ljmp
gs
xchg
or
push
popa
ljmp
cmpsb
mov
popa
int
jp
adc
addr16
fcoml
adc
dec
xchg
fists
loope
inc
fs
test
jle
repnz
addr16
add
push
rol
into
jbe
fcompl
insl
sbb
test
add
in
fistpll
jl
popa
repz
mov
daa
bound
popf
push
movq
test
pop
inc
xchg
jl
pop
adc
das
xor
popa
cmp
cld
xchg
and
sub
pop
ljmp
jno
nop
jecxz
jle
lds
outsb
push
push
pop
lret
xor
sbb
test
movsb
xor
mov
xor
movsl
mov
dec
in
and
addb
inc
mov
lods
enter
pop
mov
in
ja
bound
lock
cmpsb
push
inc
mov
add
or
push
mov
cmp
shl
es
xorb
jmp
fld
or
add
je
push
pop
ret
movsbl
lcall
add
jae
movsb
pop
mov
shrl
pop
jo
xlat
jae
ljmp
call
pop
pushf
jmp
in
popf
loope
mov
mov
sub
fldl
adc
faddl
adc
and
push
adc
ljmp
push
dec
sbb
and
loop
jmp
xchg
loope
imul
dec
decb
inc
stc
pop
rolb
mov
or
sbb
push
pop
pop
nop
inc
sarb
pop
test
das
cld
push
inc
jb
xchg
shl
push
inc
pusha
daa
das
aaa
cmpb
xor
inc
fisttpll
lods
pause
mov
test
testb
popa
bound
das
cmpsb
into
push
les
and
fdivl
or
pop
adc
cli
je
scas
ficoms
insl
addl
fldenv
loop
pop
ror
das
lahf
dec
xorb
ss
add
inc
stos
sub
pop
jno
fildl
and
outsl
std
dec
outsl
xchg
dec
outsb
jle
into
mov
imul
push
sub
push
cmc
call
ljmp
push
shlb
add
push
add
inc
pop
push
sbb
push
sbbb
in
adc
dec
push
mov
fwait
xor
dec
or
pop
mov
lock
xchg
dec
push
rcll
loope
push
pop
rcll
mov
pop
addr16
bound
ds
rcrb
push
int
pusha
and
sbb
adc
fistpll
add
cli
repz
dec
xorb
notl
mov
js
into
dec
or
rcrl
mov
in
mov
enter
aaa
push
ss
jbe
mov
sbb
das
sbb
pop
pop
inc
rol
pop
push
adc
mov
mov
cbtw
lock
js
sub
add
jns
shlb
mov
mov
les
jmp
leave
repnz
xchg
pop
push
add
xchg
test
inc
in
mov
rdtsc
push
jle
repz
loopne
dec
outsb
sub
cmp
in
cmp
fimuls
xor
cmp
imul
andl
test
xorb
in
stos
push
in
cmpsb
mov
mov
ficompl
in
mov
cmp
push
push
pop
and
data16
arpl
mov
and
push
in
mov
shlb
gs
lret
add
cld
loope
ret
xchg
push
addr16
and
jno
inc
jnp
cmp
and
sub
add
mov
jbe
inc
sub
sbb
sbb
push
ret
adc
jge
jbe
inc
jnp
gs
cmp
push
pop
scas
hlt
fcmovne
daa
push
push
fucomi
ja
xor
jge
sbbb
sahf
insl
xor
sbb
int3
cwtl
aad
outsb
mov
pop
daa
xorb
fwait
mov
inc
and
mov
sbb
in
hlt
sub
dec
dec
stc
jecxz
incl
rorl
dec
xor
ss
in
mov
loop
jecxz
out
push
mov
popl
lods
sub
fwait
inc
and
rorl
insl
ja
mov
pop
rolb
addr16
sbb
jp
sbb
aas
ds
pop
scas
iret
std
std
pop
pop
jge
adc
xchg
dec
jnp
adc
cwtl
xor
data16
push
xchg
pop
jmp
loop
mov
mov
fstpt
push
ja
insb
test
jns
out
xor
mov
in
sti
lea
addr16
mov
lcall
shlb
lods
fdivs
add
or
and
jae
adcl
xor
aam
popf
aam
aaa
pusha
fists
push
inc
jns
jl
sbb
push
rorl
pop
dec
lods
jne
mov
lods
ret
cmpsl
int
xor
roll
jecxz
mov
push
push
or
loop
pop
and
lods
mov
cmp
mov
das
add
aam
mov
adc
inc
cmp
push
jne
dec
lock
addr16
test
cmp
xchg
negb
cmp
cld
dec
pop
xor
mov
cmp
and
sub
inc
in
in
dec
mov
xchg
xchg
notb
movsb
in
pop
cmp
mov
adc
bound
ja
loope
fbld
leave
sub
sar
mov
inc
xorl
fwait
xchg
out
mov
shll
sub
or
add
inc
cs
or
iret
mov
xchg
sub
adc
push
mov
clc
or
cmp
cmp
icebp
adc
and
stos
outsb
mov
pop
inc
mov
dec
outsl
mov
push
das
shll
xor
sbb
insb
repnz
mov
sub
loop
pop
xchg
mov
push
add
aad
repnz
adc
sbb
js
or
cwtl
mov
cli
xchg
arpl
mov
dec
mov
in
cwtl
scas
in
xchg
pop
in
icebp
lcall
and
mov
js
jbe
subl
mov
divb
mov
or
dec
fstl
rcl
sub
loope
adcl
mov
pushf
testb
adc
clc
mov
inc
sarb
ss
fisubrl
mov
repz
jecxz
into
ret
xchg
fldl
cmp
cs
int
sub
mov
cltd
or
fcompl
pslld
jne
push
and
in
add
js
add
jbe
lock
sbb
pop
aas
adc
int
dec
cwtl
cld
pushf
aad
or
pop
addr16
stc
test
jbe
test
test
jb
cmp
out
cmp
rclb
jne
add
sub
out
jl
insl
imul
scas
adc
in
jge
movsb
call
xor
sbb
je
ja
pop
mov
out
jae
mov
xor
popa
cwtl
ret
int
dec
je
mov
mov
mov
sub
scas
cmp
sahf
out
cld
outsb
sub
xor
jge
cmp
ret
js
mov
imul
jbe
bound
mov
mov
push
bound
sbb
rcll
loope
mov
bound
mov
cld
mov
fistpl
ds
ds
pushf
jge
iret
test
and
das
cmp
out
shlb
bound
ja
stos
inc
jp
pop
loope
pop
addr16
jg
mov
mov
ret
aad
add
outsl
enter
adc
adc
fidivrl
pop
mov
xchg
test
ss
rcl
inc
outsb
mov
test
adc
in
push
jbe
call
mov
in
or
stos
inc
stos
push
xchg
mov
mov
sbb
jg
icebp
jmp
and
repnz
into
lods
ds
adc
mov
mov
aad
fsub
push
fcmove
aaa
stos
inc
popa
dec
in
jne
mov
pusha
in
nop
nop
cwtl
inc
lds
jg
sbb
or
ret
and
fstp
and
sub
pop
rolb
xor
pop
pop
mov
cwtl
lret
xchg
insl
adc
xchg
ja
fsubrs
sbb
iret
fimull
jg
pop
fwait
and
xchg
add
das
pop
cmpsb
xchg
in
mov
jne
push
ret
ss
stc
mov
hlt
cmp
xchg
xchg
add
push
and
push
mov
adc
in
add
mov
sbb
add
incb
jmp
cs
ja
hlt
sub
inc
inc
addl
mov
push
lcall
inc
lds
inc
xor
mov
push
xor
mov
int3
add
jl
inc
cmp
pushf
mov
fidivl
mov
mov
aad
pop
pop
sub
popa
lock
adc
add
add
scas
xlat
into
mov
pushf
rorb
cmpsl
pop
aas
pop
movsl
mov
sub
dec
mov
push
push
aas
cmp
rcrl
sub
sub
mov
nop
stc
shll
imul
mov
xchg
leave
imul
addr16
adc
pop
loopne
enter
xchg
mov
mov
push
ja
push
jb
mov
sub
cmp
fistpll
repnz
ret
xor
ja
add
sbb
cmpb
jb
stos
xchg
push
adc
inc
mov
pop
jmp
adc
mov
xchg
hlt
clc
inc
jecxz
xor
sbbl
or
in
cmp
dec
nop
out
in
int
lock
jmp
mov
aam
adc
and
xchg
test
scas
xor
mov
mov
leave
js
cs
push
cmp
in
pop
cld
mov
cwtl
fcoms
inc
jmp
nopl
sbb
outsb
jle
add
jg
shlb
push
sbb
mov
add
test
push
pop
mov
inc
iret
mov
inc
and
arpl
test
mov
sbb
insb
aaa
and
lret
or
inc
sbb
sub
mov
shlb
sti
jge,pn
mov
pop
jp
and
xlat
push
or
sub
into
push
and
and
jbe
jmp
out
jns
mov
imul
sub
cmp
jle
push
in
mov
cmc
adc
sbb
dec
mov
outsb
and
xchg
jmp
call
lret
jmp
outsl
xor
in
mov
fmuls
xor
movsb
mov
xchg
xchg
and
in
aaa
pop
int
je
test
shll
or
xchg
jne
mov
repnz
cwtl
sub
test
jne
pop
jmp
dec
roll
sbb
and
shlb
mov
out
jae
sbb
xchg
aam
and
lea
mov
jg
push
mov
outsl
adc
movsb
jecxz
mov
scas
dec
ret
out
mov
std
icebp
dec
out
ss
sarb
stc
push
movsb
cmpsl
pop
jl,pt
shlb
push
addr16
sarl
in
jle
es
mov
lods
ret
cmp
inc
jmp
dec
xor
cmp
sbb
xchg
test
cmp
enter
clc
nop
das
fistps
sahf
push
ja
adc
jae
and
rcrb
stc
mov
fwait
xor
pop
fldenv
idivl
insw
and
push
inc
jno
or
or
inc
xor
mov
dec
cli
sub
sub
lcall
and
xchg
iret
dec
inc
aam
outsl
out
insl
mov
push
mov
testl
mov
cld
jecxz
aam
pop
fdiv
lea
mov
sub
and
outsb
cmp
xor
jnp
mov
pop
ror
aam
lods
jle
rorl
mov
push
mulps
cmp
inc
popa
shlb
xchg
push
xchg
aam
aaa
jbe
pop
and
add
push
add
fisubrl
xor
and
dec
add
add
pop
js
mov
js
jp
outsb
mov
mov
adc
sbb
aaa
mov
pop
scas
xchg
xchg
pop
push
xor
jmp
scas
add
test
or
decb
sbb
pop
push
push
cmp
rcrl
adc
adc
or
dec
cmp
outsb
adc
add
shrb
mov
pshufw
ja
cmp
sub
fcmovbe
push
js
xchg
stos
or
mov
in
sub
jb
ret
mov
or
jge
clc
pop
ss
sbb
idivb
out
sbb
iret
in
jle
adc
iret
pop
mov
push
mov
lods
imul
lcall
xchg
mov
mov
mov
stc
icebp
fstpl
out
push
dec
mov
out
cmp
out
aam
mov
popa
push
sub
sbb
xlat
or
jno
scas
ljmp
mov
inc
lret
imul
dec
add
xchg
jmp
inc
leave
cmp
js
out
stos
cmp
test
call
pop
loopne
cltd
mov
les
js
ret
enter
xor
cmp
push
test
in
nop
add
jne
dec
fld
out
outsl
fs
xchg
jmp
loop
lcall
in
pop
ljmp
push
popf
in
pop
jns
mov
or
dec
jnp
ficompl
jge
cs
push
xchg
xor
fucomp
xchg
insb
out
jmp
stc
mov
cmpsl
hlt
adc
mov
jl
jo
mov
xchg
cmp
scas
or
aam
push
mov
fsubs
mov
ds
mov
lcall
xchg
lahf
jns
inc
loop
bswap
xchg
sbb
mov
cmpsb
mov
pop
add
insb
mov
js
jno
call
lock
roll
push
mov
aaa
sub
lcall
inc
pop
jl
jmp
rcl
sub
notb
cmp
xchg
pop
xor
push
mov
cli
ds
pop
jo
out
xchg
inc
xor
push
adc
scas
xor
mov
pop
mov
push
mov
push
shlb
test
test
aaa
jnp
nop
mov
in
out
mov
jne
loop
lods
jb
sahf
pushl
shufps
fsin
mov
jl
cmp
out
sbb
adc
mov
rcrb
jb
pop
add
push
dec
cmp
call
jl
pop
push
mov
mov
pop
stos
aaa
test
fsubl
cmp
mov
push
sbb
push
sub
mul
repz
pop
xor
fisubrl
xchg
nop
xchg
imul
mov
jg
adc
cltd
popa
hlt
push
test
data16
jmp
and
aas
loope
cltd
cmp
ja
pushf
push
mov
jp
loope
mov
xor
jecxz
mov
in
cltd
adc
repnz
xorl
outsl
out
push
sbb
push
xchg
xorl
mov
jbe
xchg
mov
inc
xor
jae
push
push
lcall
std
mov
mov
mov
add
or
shll
je
jns
sbb
pop
out
sbb
push
sbb
add
imul
xchg
xchg
lods
push
iret
negb
xchg
js
jo
or
divl
and
les
pop
out
imul
iret
lret
mov
popf
into
testb
cs
sub
push
or
mov
dec
inc
adc
sbb
je
inc
fiaddl
jmp
es
rclb
xorb
and
xchg
clc
cmpsb
mov
or
jmp
mov
lea
out
pushf
xchg
pop
inc
pop
sub
mov
int
sbb
or
or
shll
mov
xchg
push
mov
pusha
pop
add
jecxz
bound
inc
fadds
test
sbb
lods
and
call
arpl
addr16
jnp
jb
scas
sub
mov
sub
add
lods
dec
or
pop
pop
dec
lahf
pop
addr16
je
cmpsl
movsb
sub
cmp
iret
cmc
mov
push
push
fdivrl
dec
addl
sbb
mov
xor
stos
inc
test
pop
mov
daa
pop
andl
xor
in
jmp
jge
jl
in
cmp
in
mov
addr16
repz
ss
lds
mov
fisubl
daa
xchg
daa
cmp
adc
mov
xor
scas
add
xor
leave
pop
dec
pop
dec
mov
inc
push
add
cli
and
jp
cmp
outsb
fwait
cld
pop
pusha
fisttpll
popf
hlt
add
hlt
inc
ret
mov
ficomps
fidivs
and
xor
scas
xchg
rolb
push
and
aas
or
cmp
mov
pop
dec
int3
jmp
or
push
sub
mov
aas
loop
test
dec
add
movsl
imul
cld
dec
fsubs
jp
add
xchg
test
or
or
adc
out
mov
inc
data16
xchg
mov
int
insl
dec
jns
fsubrs
call
dec
sbbl
xchg
sub
push
bswap
out
jns
sbb
dec
pop
xor
out
andl
in
test
push
lock
sub
out
push
lds
or
jo
add
jecxz
cmp
dec
lods
mov
inc
or
subb
outsl
gs
sahf
jle
std
mov
cmp
je
cltd
test
imul
add
call
divl
leave
xchg
sbb
inc
loop
hlt
xlat
or
fnstcw
inc
adc
push
pusha
pop
add
add
cmp
and
lret
fs
inc
das
stos
pop
xchg
mov
cmp
ficoms
daa
lods
sti
cli
dec
icebp
jp
das
adc
jb
test
popa
lea
cs
gs
and
fs
add
rolb
xchg
test
pushl
xchg
cmc
pop
mov
xor
and
mov
cld
nop
jecxz
mov
stc
sub
adc
das
imul
pop
imul
mov
ds
xchg
std
lds
push
loopne
ss
cmp
in
mov
roll
jne
add
daa
dec
cmp
cmc
popa
cs
nop
sub
ret
es
mov
sbb
aas
xchg
mov
add
sub
out
xchg
xchg
inc
lret
adc
fnstenv
aas
dec
jbe
stos
add
jle
dec
mov
jnp
aaa
clc
ret
incl
sbb
movsl
shll
stc
cli
movsb
in
fsubrl
out
notb
or
sbb
mov
call
inc
push
cs
dec
push
mov
adc
iret
mov
sub
les
push
pop
fldcw
push
mov
jge
shlb
insb
sbb
xor
xor
cli
in
push
cmpsb
mov
lods
xlat
pusha
sub
dec
push
jmp
les
add
cmpsl
push
push
jns
movsb
or
sub
xor
movsb
push
test
mov
jp
mov
sbb
xor
dec
jns
jo
lcall
cmpl
mov
outsb
xchg
mov
xor
out
push
mov
in
das
jle
sbb
pop
rclb
jns
movsl
mov
push
stos
cmp
mov
fdivl
push
std
xchg
movsl
add
pop
lret
push
dec
dec
fstp
sti
or
das
testl
inc
and
aam
test
push
lods
sbb
mov
dec
pop
jne
push
add
mov
xchg
stc
sub
adc
and
or
or
mov
cmp
and
sub
xlat
cmp
fidivl
dec
loope
push
cmp
push
loop
or
imul
je
fdivl
mov
fs
outsb
mov
cmp
mov
mov
mov
out
dec
outsl
xor
inc
loope
or
hlt
jne
pop
jp
jp
mul
outsb
mov
ja
insl
jnp
pop
jbe
loopne
xchg
or
test
movsb
cmpb
inc
clc
testb
dec
fwait
mov
xorl
xor
mov
addr16
in
dec
ja
mov
push
movsl
jae
adc
add
jae
cmc
adcb
enter
fidivs
cmp
pop
dec
pop
scas
insb
leave
xor
js
rcll
inc
mov
fwait
out
repz
cld
ret
adc
jno
sbb
pop
test
inc
popl
push
pusha
add
ss
rcr
adc
mov
push
outsb
adc
add
outsb
sub
xor
mov
popl
push
inc
les
fstpl
mov
add
xchg
push
incb
jl
fwait
inc
jnp
jne
fldcw
sbb
and
add
cmc
cmp
lds
and
ret
shlb
fidivl
test
fldl
rcl
mov
inc
cld
popa
lock
lods
pop
inc
jl
imul
xchg
pop
jno
repnz
and
pusha
scas
outsb
add
stos
dec
les
cmp
orb
int3
nop
dec
xor
xor
imulb
and
push
leave
addr16
dec
stc
xchg
sti
ret
mov
xchg
ds
out
sbb
or
and
mov
lea
lret
sahf
outsb
sbb
mov
cltd
rolb
andb
adc
mov
pop
push
add
dec
faddl
call
inc
sub
jb
xchg
js
dec
mov
lock
cld
jge
loop
into
call
mov
imul
loope
or
push
pop
out
out
mov
js
addl
xor
mov
outsl
mov
jo
repnz
push
lock
inc
pop
push
sub
pop
std
sbb
add
xor
pop
xchg
lahf
jno
xor
jle
shrl
ret
push
ss
cmp
subb
cltd
negb
fsqrt
push
pop
lock
add
sub
jl
push
adc
stc
xchg
cmp
ja
mov
rolb
mov
loope
mov
dec
adc
and
stos
rcl
mov
and
inc
mov
jmp
jae
pusha
fstl
jmp
inc
jge
pop
lds
enter
xchg
ret
xor
jb
mov
movsb
ret
jecxz
aam
fisubs
pop
mov
stos
scas
les
xor
test
xor
loopne
add
mov
dec
dec
mov
xchg
sbb
push
and
fs
mov
inc
pop
sub
and
sbbb
fbstp
cli
adc
dec
inc
add
in
stos
inc
test
inc
xchg
add
cwtl
ret
out
testl
sub
int
jge
xchg
in
xchg
mov
bound
ja
call
mov
test
cmpsb
and
testl
and
jmp
popf
xor
dec
fmulp
dec
mov
clc
jle
cmp
sahf
sub
arpl
sbb
inc
fcomip
mov
call
lcall
leave
pushf
xchg
out
in
xor
stos
scas
sbb
or
shrb
push
pop
add
shrl
mov
call
sub
das
jmp
shlb
dec
pop
push
ret
cmpsl
xor
dec
adc
dec
add
int3
mov
fcmovbe
or
jne
filds
bound
dec
jo
insb
aad
and
jbe
negb
push
pop
add
lret
or
xchg
call
enter
outsb
sub
mov
sti
idiv
stos
aad
pop
hlt
xlat
cld
and
mov
and
add
sub
sub
or
fnstenv
sub
mov
jns
arpl
xchg
push
hlt
dec
gs
loopne
ja
xchg
in
and
dec
out
mov
inc
adc
jge
xchg
dec
int
xchg
adc
aad
repnz
int
sbb
cs
pop
stos
dec
dec
push
add
pushf
ret
jmp
xchg
mov
es
shl
adc
cmp
fs
insl
adc
mov
cmpsb
mov
push
shl
xchg
rolb
pop
jae
mov
sbb
add
add
jns
or
mov
jb
int3
mov
push
push
push
mov
xor
out
pop
dec
or
xchg
shll
nop
jns
lcall
sub
imul
jo
sbb
mov
ret
jns
mov
fs
mov
shll
outsb
cltd
or
std
jg
cwtl
or
nop
arpl
addb
dec
add
js
mov
or
xchg
sahf
lods
add
test
cld
rsm
or
add
mov
loop
add
les
mov
jo
punpckhdq
sub
dec
xor
add
cmp
and
push
adc
arpl
scas
cmp
mov
ret
dec
daa
sub
sahf
mov
shr
dec
lret
cmpsl
in
mov
lods
xchg
popa
iret
aas
inc
xchg
fwait
xchg
sarl
into
int3
lahf
imul
clc
sub
xchg
mov
daa
pop
test
mov
or
outsl
dec
add
rolb
jecxz
push
xchg
aad
xor
jne
dec
cmpsl
cld
inc
fwait
and
xor
xor
jp
cld
hlt
mov
cmp
push
out
cmp
scas
addb
dec
push
jle
cld
insl
sar
adc
xor
dec
mov
test
sub
push
jne
mov
pop
popa
mov
sub
stos
mov
mov
lds
nop
lds
out
scas
in
mov
push
xchg
xchg
push
in
jmpw
or
shll
mov
jle
jp
enter
lods
notl
aad
push
xchg
mov
in
test
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
sub
mov
jp
pop
jp
mov
mov
ja
cmc
push
insb
dec
xor
in
dec
dec
jp
les
imul
out
faddl
iret
hlt
cmpsl
push
sarb
pop
pop
push
pop
push
inc
rcrb
jae
adc
push
adc
and
dec
jge
mov
sbb
mov
xor
orb
sbbb
lods
mov
add
sti
adc
sarb
mov
les
mov
push
jg
aaa
cmpsl
and
insb
sbb
mov
sbb
or
int
jge
xor
mov
orb
movsl
sub
in
loopne
jge
aaa
cwtl
add
xchg
pop
push
cmp
xor
jo
mov
mov
adc
movsl
push
loop
cmp
sbb
lock
jno
jno
inc
insb
jmp
mov
daa
imul
xchg
cmp
cli
or
cmp
jg
cmp
and
fadds
dec
clc
jb
xchg
in
jge
xor
inc
or
sbb
js
push
mov
inc
std
cmp
test
aaa
mov
cmp
rcrl
dec
nop
jecxz
mov
jno
xchg
sub
jmp
or
out
mov
fcomps
dec
test
sbb
inc
fwait
mov
jmp
jbe
xchg
sarb
dec
push
push
inc
jne
fdivrs
ss
sub
mov
cs
inc
push
outsl
jmp
sahf
hlt
mov
call
push
add
test
pop
cmp
out
arpl
pop
jp
cmp
jae
std
push
mov
in
in
mov
xchg
jb
push
mov
out
aaa
or
dec
les
xlat
in
push
xchg
cmc
jnp
lds
repz
lret
jbe
jmp
xchg
xchg
cltd
mov
jns
aad
sub
pop
pop
push
lret
mov
dec
pop
aad
mov
add
inc
adcb
lods
scas
mov
pop
cmp
je
jmp
jnp
inc
add
jge
rol
jmp
cld
jnp
jmp
cmp
lods
es
test
push
mul
add
inc
sti
add
cmp
cmpsb
idivb
in
loop
and
push
sbb
pmaxsw
ds
sahf
loop
mov
push
push
jae
std
addr16
jp
int3
add
xor
gs
and
shl
das
xlat
ret
mov
out
dec
arpl
inc
mov
dec
dec
repz
xlat
or
cmpsl
insb
xchg
es
data16
daa
stos
cwtl
rcrb
pop
mov
ljmp
data16
xchg
adc
test
in
jno
push
enter
fldenv
scas
cmp
into
mov
sbb
jecxz
mov
inc
cmpsl
xchg
lods
sbb
test
dec
out
mov
jbe
repz
push
jmp
daa
push
outsb
test
insb
dec
mov
repnz
addr16
pushf
mov
mov
and
mov
jl
push
or
int
pop
lea
ficompl
rcll
in
cmp
or
jae
pop
mov
xchg
fimuls
pop
mov
inc
xchg
jge
and
outsl
dec
loope
fs
js
sub
movsb
adc
lret
out
and
lods
push
mov
cmpsl
dec
mov
xchg
jmp
mov
mov
ret
pop
or
rol
push
leave
lahf
sub
ret
int3
loopne
and
sahf
cmpsl
mov
mov
lcall
das
rcl
cmpsb
cmp
sbb
sub
sub
cmp
push
xchg
sub
lea
sbb
int
ret
clc
movsl
jo
pop
out
fcmovnu
out
adc
popa
sar
daa
cs
xor
push
pop
lods
repz
pop
and
sahf
mov
dec
ja
jl
push
push
aaa
jo
xor
push
incb
ffree
adc
jo
mov
inc
jmp
outsb
les
cmc
movsl
mov
mov
push
push
xchg
enter
fdivrl
nop
mov
mov
jle
incl
xchg
lock
jge
das
pop
and
shr
or
and
je
inc
sahf
lds
mov
ljmp
mov
or
mov
or
pop
pop
mov
enterw
aas
mov
cmpsb
mov
and
outsl
inc
es
mov
dec
sub
shr
fisubrs
xchg
fimull
test
inc
shll
shlb
jmp
movsb
jb
mov
and
insb
ljmp
jecxz
ret
rorl
lods
mov
je
mov
insl
loope
fdivrp
jg
out
mov
push
sub
dec
ja
mov
xchg
xchg
fimuls
cmc
addr16
inc
negb
mov
ds
sbb
out
xor
inc
lahf
inc
sbb
fwait
idiv
nop
sbb
mov
neg
sahf
cmp
fcoms
jae
aad
aam
stc
xchg
inc
sub
enter
ret
pop
dec
hlt
enter
mov
cmp
punpckldq
out
xchg
sbb
pop
dec
xor
std
arpl
add
sahf
inc
mov
jns
rcrb
or
lret
pop
xchg
out
or
leave
sti
inc
mov
inc
inc
loope
sub
sbbl
in
fmull
dec
sbb
push
mov
es
mov
das
aas
dec
push
ret
aaa
into
sbb
add
mov
imul
mov
push
jno
xor
inc
inc
movsb
stc
cwtl
add
adc
cwtl
push
nop
scas
mov
jns
out
add
out
push
das
mov
aas
es
jne
outsb
ror
inc
gs
dec
push
scas
jb
call
imul
les
and
and
rol
pop
dec
int
jecxz
mov
jbe
outsl
push
inc
jo
xchg
adc
rep
mov
pop
cli
jo
sti
mov
sahf
outsb
pop
dec
jge
out
roll
and
xchg
adc
in
ror
insl
hlt
sbb
xlat
adc
push
mov
sahf
cs
adc
mov
das
scas
bound
inc
daa
mov
lock
cmpl
lods
cmp
cltd
mov
cmpsb
dec
into
arpl
sub
popa
jns
les
mov
xchg
xor
pushl
fnstsw
mov
insb
outsb
mov
cmp
jl,pn
ds
test
inc
ret
mov
push
loope
lock
inc
inc
mov
xorb
xor
ret
mov
cld
mov
push
adc
xor
and
mov
cmpsb
out
pop
mov
mov
and
sbb
hlt
dec
sbb
xor
sub
test
in
cmp
repz
leave
test
push
aas
mov
jbe
imul
dec
pusha
mov
movsl
mov
fldt
fistpl
orb
pop
scas
xchg
daa
dec
frstor
aad
xor
mov
add
jb
inc
push
mov
xor
jmp
aam
push
push
sub
fadd
nop
xor
mov
cld
pop
jcxz
push
jb
mov
insb
popf
lods
mov
out
lret
mov
loop
fsubr
adc
cmc
jl
add
scas
out
cmp
arpl
pop
cmp
cwtl
xor
popa
in
shrb
push
xchg
xchg
lret
mov
popa
out
pop
sbb
sbb
or
mov
aas
les
cmp
in
inc
mov
xor
and
scas
add
push
cli
cmpsl
lds
jne
push
sbb
outsl
mov
mov
mov
cmpl
push
mov
or
add
jle
sub
cmpsb
push
adc
decb
mov
adc
hlt
mov
or
fidivs
sub
fidivl
mov
int
fcmovnb
iret
mov
sbb
imul
or
jg
jle
or
jno
out
lods
jbe
jmp
inc
mov
imul
in
mov
aas
test
cld
sahf
push
movsb
out
push
stos
cmc
xchg
scas
mov
dec
mov
fwait
into
inc
imul
jle
jmp
mov
loope
cmp
sarl
movsb
lret
inc
mov
js
xchg
pop
jp
addr16
push
xchg
jae
mov
jecxz
lods
pop
icebp
inc
fistps
sahf
mov
jle
add
jl
repnz
xchg
loope
lcall
mov
leave
cmp
jnp
stc
scas
pop
cmpsb
daa
sub
inc
sbb
or
cmpsb
and
icebp
cltd
xchg
outsb
aad
repz
test
insl
shufps
outsb
adc
dec
and
xchg
test
andb
popf
mov
lahf
loopne
out
or
outsb
cli
out
mov
inc
dec
scas
data16
popa
mov
xor
lods
lahf
push
mov
out
xchg
push
mov
mov
std
sub
out
leave
aaa
jns
mov
leave
adc
sti
lcall
jne
adc
sbb
jbe
mov
jge
in
int3
nop
adc
loope
arpl
lea
sub
add
jle
fwait
add
push
pop
fs
std
xlat
xchg
insb
xchg
inc
cs
cmp
and
addl
fstpt
outsl
ret
or
fwait
lahf
rorb
stos
incl
cmp
xchg
jno
mov
in
mov
lds
dec
inc
inc
jp
sub
jg
icebp
cli
sbb
or
imul
les
push
in
jne
lods
xchg
and
sti
add
sbb
adc
sbb
push
push
mov
fimull
or
test
loop
jmp
or
cmpsl
pop
push
mov
sub
jg
loop
jns
mov
mov
loope
jg
adc
jb
movsl
xchg
stc
sahf
cld
inc
jbe
dec
xchg
add
rolb
mov
nop
scas
shll
or
adc
fidivrs
and
jp
xor
add
shrb
movsl
xlat
add
mov
cltd
dec
xor
dec
mov
sbb
jle
or
loop
nop
cmp
push
add
fidivl
sbb
and
call
call
cmp
mov
ficoml
sarl
inc
mov
xchg
dec
ja
loopne
outsl
push
cmc
cli
inc
add
cmc
aad
pop
ljmp
sbb
add
push
push
and
scas
out
in
pop
rol
or
ljmp
rcrb
push
xlat
sbb
pop
xchg
pop
fdivl
gs
push
cmp
xchg
hlt
adc
scas
rorl
repz
popf
sarb
cmp
std
mov
and
es
inc
and
movsb
cmpsl
cmpsl
call
and
xchg
push
mov
sub
nop
mov
fdivrp
cmp
pop
inc
adc
jmp
fld
daa
popf
xchg
mov
xor
fsubl
scas
add
lock
ds
push
sbb
mov
and
xor
out
pop
mov
add
adc
jmp
cwtl
sbb
jge
shlb
pusha
leave
xchg
nop
pop
nop
mov
jl
xor
inc
and
js
inc
out
pop
inc
dec
and
dec
pop
add
int3
push
clc
cmc
dec
fld
xchg
lahf
leave
xor
jecxz
pop
pop
xchg
fnstsw
fsubrs
cmp
mov
test
aam
sub
mov
fbstp
inc
sarb
push
dec
stc
jne
jns
or
ja
cmpsl
incl
pop
mov
push
jnp
mov
xor
call
pop
inc
mov
add
sub
in
sbb
jo
mov
and
imul
shrb
sub
pushf
cmp
out
add
adc
xor
mov
ja
push
adc
xchg
xchg
sub
mov
adc
or
mov
pop
pop
fs
adc
roll
ja
into
sbb
cmp
arpl
int3
push
mov
ficoms
arpl
std
jb
inc
sahf
cmc
cld
mov
testb
int
rolb
xchg
and
lods
add
adc
aas
dec
dec
sbb
in
test
pop
int
cmp
shlb
or
movsl
insb
testl
das
cmpsb
mov
sub
shlb
cmp
dec
pop
sub
jns
push
dec
xchg
inc
and
in
jbe
pop
mov
jb
sti
addb
movb
cmp
icebp
loope
add
loope
jl
dec
fadd
lods
push
push
pop
inc
shrl
cmp
in
sub
ror
jmp
ja
and
andb
cmp
fs
dec
je
sbb
sub
subl
inc
test
out
mov
add
mov
sahf
out
lock
mov
xchg
imul
xchg
stc
in
mov
leave
sbbl
jnp
fwait
in
jmp
js
mov
cmp
lcall
add
xchg
xor
fwait
sub
sbb
out
jo
jnp
in
pop
cmp
inc
shlb
outsb
sbbl
add
lcall
mov
or
add
push
mov
int
jp
dec
adc
imul
jnp
xor
sub
dec
pop
pop
mov
inc
xor
sbb
or
adc
pop
cmp
fmull
outsb
in
mov
fstl
and
xchg
mov
stos
popl
popa
shr
scas
lcall
jge
divl
mov
mov
pushf
xor
imul
addr16
sbb
mov
dec
imul
add
sub
sub
in
ljmp
pop
mov
cmp
push
push
repnz
insb
push
adc
rorb
imul
jae
cmove
cld
or
jg
xchg
loopne
mov
pusha
loope
push
fdivr
hlt
lods
xor
fisubl
mov
mov
mov
cmp
in
jmp
adc
jmp
inc
stc
in
loopne
cmp
pushf
cmc
inc
lea
bound
dec
aam
and
dec
add
adc
mov
inc
jp
push
xor
inc
ss
fs
dec
rcrl
jecxz
dec
add
popf
cli
xor
inc
jno
cmp
push
pop
ret
or
es
xchg
mov
pop
xor
xorl
ljmp
pop
cltd
cli
fs
popf
xor
dec
push
or
repz
lods
shll
outsb
jno
mov
jbe
movsl
int3
sub
ja
fcmovnb
ds
mov
jecxz
ret
scas
inc
adc
std
addr16
test
stc
mov
loop
mov
outsl
mov
cmp
push
ret
mov
pop
sub
das
sbb
or
inc
or
shl
pop
pop
mov
xlat
mov
mov
mov
and
in
imulb
adcl
xor
das
cli
cltd
pop
sbb
outsb
gs
inc
ds
mov
sbb
mov
movsb
mov
das
adcl
or
sbb
scas
sub
pop
push
xchg
stos
mov
jns
ftst
lahf
and
and
mov
fists
out
sahf
shr
aad
addr16
shr
mov
jnp
xchg
sub
mov
rep
push
jecxz
cmp
pop
daa
jg
fidivs
jmp
dec
addr16
xchg
pop
fidivrl
lods
enter
pushf
sbb
push
repz
inc
mov
stos
sar
add
push
mov
fsubrs
test
cs
je
mov
jg
dec
push
cli
imul
push
push
inc
aas
scas
and
gs
jecxz
dec
and
push
or
jns
push
sbb
mov
rcl
inc
mov
cli
int
xchg
imul
test
loopne
mov
lret
add
movsb
repz
cmp
mov
cld
lret
lods
pop
jg
mov
lret
ror
mov
mov
fmul
outsl
mov
mov
xor
ljmp
fwait
nop
or
mov
mov
dec
sub
cltd
pop
data16
dec
rcl
cmp
outsb
push
js
fwait
gs
arpl
xchg
test
jne
das
or
mov
cs
mov
cltd
and
ss
into
sahf
jo
sbb
sbb
push
subl
mov
cltd
testl
iret
inc
mov
xchg
rorl
mov
xchg
jo
insb
iret
mov
loop
inc
lock
xor
inc
and
sub
cld
cmp
pusha
and
sbb
loopne
call
add
sti
xor
test
pop
fwait
or
dec
cmpb
sbb
ret
push
filds
cmc
lcall
scas
aad
xor
into
lock
xchg
stc
add
repz
mov
fdivrs
mov
sbb
and
addr16
js
jl
subb
dec
mov
pop
mov
mov
subb
out
pop
xchg
xor
decl
lret
dec
push
and
jae
xchg
mov
jge
stc
jns
inc
in
mov
ljmp
lea
insb
orb
inc
je
jmp
gs
outsl
and
mov
pop
jp
push
dec
xorb
aaa
jo
lock
data16
repnz
leave
imul
fistpl
sub
jge
das
addr16
xchg
or
in
imul
enter
xchg
arpl
push
and
xlat
add
mov
adc
push
and
fisttpl
repnz
filds
jp
adc
lret
aad
jecxz
cmc
sub
scas
ds
addr16
out
gs
hlt
sbb
add
js
das
jl
inc
sub
dec
out
hlt
push
cli
pusha
adc
dec
mov
arpl
ja
push
add
jmp
jecxz
fimull
int
mov
imull
jb
nop
mov
cmp
stos
push
jae
mov
dec
inc
jg
or
vxorps
xor
pusha
ret
adc
sti
push
rclb
pop
insl
lods
sarl
lcall
aaa
fsubrl
pop
lock
out
xchg
je
aas
fidivrs
jecxz
outsl
push
pop
and
rolb
shrl
push
mov
xor
scas
and
xor
mov
cli
lahf
nop
outsb
mov
outsl
or
and
test
mov
stos
roll
loopne
sbb
lods
cwtl
outsl
dec
iret
jnp
insl
ficomps
dec
cld
data16
push
icebp
jg
sti
outsb
shlb
es
lret
add
xchg
sbb
mov
lahf
int3
fbld
pop
shll
mov
adc
xchg
imul
push
std
icebp
adc
xchg
outsl
sbb
and
ja
xchg
dec
inc
push
iret
sahf
mov
pop
test
mov
jb
and
mov
mov
stos
mov
loop
insl
push
scas
sub
nopl
fcoml
lret
lods
ds
sbb
or
mov
cld
lret
mov
fldz
sub
outsb
outsb
out
jbe
add
cltd
add
test
test
fistpl
fs
insl
mov
mov
sahf
sub
rorb
test
movsl
lret
inc
xchg
mov
dec
fdivp
lcall
mov
sub
jge
scas
fwait
sub
sbb
mov
scas
xor
add
jno
xchg
sar
rorl
adc
cld
adc
dec
loop
scas
aaa
adc
sub
adc
lahf
shlb
pop
fldt
insb
movsl
stos
mov
loope
push
sbb
mov
jl
xchg
pop
or
repz
jle
loope
es
mov
xchg
cs
xor
or
sub
aam
imulb
pop
andl
or
xor
dec
mov
stos
ror
in
lcall
push
jne
je
xchg
xorb
mov
in
repnz
fisubrs
jb
pop
test
push
jge
pop
cltd
and
fwait
jne
inc
xchg
test
inc
jo
sub
cmp
bound
sbb
shl
rcrb
jl
rcll
outsb
enter
push
pop
rol
push
xorb
inc
cmpsl
xor
push
ret
and
cltd
scas
je
ret
or
aaa
into
jl
int3
std
and
imul
dec
jl
fs
xor
aam
sarl
sub
outsl
loope
xor
sahf
jmp
mov
add
orl
call
in
sub
and
cli
jns
shl
test
push
sub
add
xor
and
movsb
cmpsb
pop
aaa
mov
imul
cli
in
jno
pop
inc
lea
push
adc
shr
fcmovb
push
xchg
cld
mov
adc
fisubrl
inc
add
test
lds
lea
sub
mov
out
inc
inc
mov
inc
into
jo
shrb
jg
dec
sub
lret
xchg
shl
std
pop
mov
xchg
and
icebp
test
adc
pop
jns
sbb
lods
inc
xchg
mov
cmp
sbbb
dec
aas
push
lods
pusha
ljmp
test
xor
pop
pop
adc
adc
notl
xchg
jmp
ret
je
outsl
xor
std
jg
mov
add
sbb
inc
outsb
mov
aas
fcmovnbe
xchg
jl
arpl
cmp
fs
and
popa
cwtl
xor
mov
and
and
add
add
sar
adc
push
mov
pop
mov
out
in
les
adcl
xor
fnstsw
push
pusha
xchg
cmp
iret
jle
es
mov
dec
sub
lods
jbe
and
inc
pop
fcoms
and
out
insb
sbb
and
jno
dec
sub
hlt
jb
das
in
cwtl
das
fstps
cmp
pop
fdivrl
cmc
jns
jno
add
into
pop
or
mov
ljmp
mov
fs
daa
mov
push
ret
jle
sub
xchg
dec
lahf
decl
add
out
clc
outsl
addr16
cmp
mov
cmp
add
mov
sub
loop
imul
xchg
xor
push
mov
xor
push
shll
sbbb
fiaddl
sub
pop
arpl
add
mov
adc
inc
in
pop
push
lods
ret
lock
test
pop
sub
mov
out
decl
outsb
sahf
jnp
fists
jl
mov
leave
pop
roll
mov
pop
xchg
out
leave
mov
data16
out
les
mov
sub
lcall
lret
int3
jp
xor
out
dec
dec
cmp
add
nop
and
cs
out
cltd
adc
dec
cmp
es
cmpl
cmp
psubq
add
jnp
mov
jnp
lock
es
xchg
inc
cmp
mov
loope
jne
and
imul
push
inc
dec
lret
mov
push
jl
sbb
cmpsl
in
in
jb
xchg
lods
xchg
xorl
sbb
adc
stc
jmp
test
mov
sahf
in
loop,pn
jl
in
scas
popa
cld
xlat
test
adc
mov
and
mov
addl
ficompl
daa
inc
mov
mov
mov
test
popa
inc
inc
push
cmp
lcall
out
fwait
lods
je
sbb
mov
pop
arpl
inc
sarl
or
xor
lods
cmp
cmp
inc
cltd
mov
sbb
cmp
sbb
cmp
in
aas
ljmp
cs
mov
xor
test
int
push
sbb
and
fs
mov
ja
xchg
enter
popa
add
xor
adc
fimuls
lcall
aaa
aam
sub
idiv
mov
pusha
jl
mov
xchg
lock
pop
fistps
xchg
cmp
in
sub
jl
sub
push
outsb
dec
jmp
jnp
jl
ja
cmp
pop
call
jp
mov
pop
adc
or
add
cmc
add
sub
dec
add
mov
stos
adc
ss
pop
aad
lret
cmp
loope
call
ja
scas
fldt
cmp
mov
xlat
xchg
adc
xchg
sbb
dec
fdiv
xchg
adc
imul
mov
sbb
dec
lret
enter
mov
ss
xchg
jns
inc
std
inc
sbbb
lea
mov
push
imul
in
xlat
pop
push
pop
and
andl
icebp
call
in
iret
xor
xchg
xchg
fsubrs
xor
sbb
outsb
sahf
shll
cs
push
repz
jle
out
iret
mov
enter
hlt
sbb
xchg
adc
inc
adc
fdivl
xchg
push
rcrb
notb
enter
pusha
icebp
jecxz
dec
adc
inc
mov
and
insl
jno
aad
inc
fcoms
mov
xor
and
int3
test
adcb
cs
mov
mov
jecxz
dec
jns
sbb
out
add
stos
ficoms
fsubrp
cmpsl
sub
add
jno
fndisi(8087
sub
inc
dec
xor
fwait
mov
outsb
dec
pop
mov
mov
xchg
aaa
sbb
popl
push
push
dec
mov
jb
sbb
or
arpl
ds
ret
test
scas
in
out
jmp
add
jp
hlt
test
scas
ds
repnz
pushf
popf
lods
ror
mov
xchg
jae
xchg
lret
out
lds
loope
dec
iret
cmp
mov
lods
mov
cmpl
popl
sub
jno
rep
pop
dec
sub
sub
test
xchg
and
dec
xor
push
stc
stc
push
push
sti
js
scas
imul
jecxz
cmp
out
mov
in
pop
xor
pop
movsb
in
add
addr16
outsl
dec
and
mov
pop
or
imul
mov
rol
jae
cwtl
mov
mov
scas
pop
pusha
push
xchg
pop
ret
pusha
pop
push
loop
pop
daa
cmpsb
mov
inc
cmpsb
jnp
and
scas
sti
xchg
jnp
adc
xor
mov
faddl
mov
idiv
sub
cli
lret
into
cmpsl
push
adc
sub
pop
xchg
xor
test
mov
pushf
adc
dec
sub
les
pop
jo
ret
out
sub
pop
test
adc
addb
test
sub
pop
leave
dec
mov
test
push
lods
add
das
icebp
pop
mov
scas
adc
xor
sub
xchg
in
sub
xor
fdivs
enter
or
aas
movsl
push
xchg
popf
orl
mov
cwtl
adc
fiaddl
fdivrp
movsl
mov
je
scas
lods
pop
ret
jnp
pop
fbstp
pop
xlat
ss
mov
xchg
fdivl
adc
pushf
std
fistpll
mov
ret
repz
js
xlat
test
cmp
mov
imul
fcoml
fcomp
mov
inc
and
hlt
cmpsb
addps
pop
lods
add
je
les
xchg
mov
in
cmp
adc
jl
jb
add
popf
dec
outsb
subb
xor
pop
pop
lea
popa
jle
imul
into
dec
loopne
jecxz
pop
rorb
xchg
jnp
lret
ds
fmuls
dec
fwait
data16
xchg
or
adc
mov
insl
and
or
in
lret
data16
adc
mov
in
in
dec
or
xor
mov
jb
fisubl
ret
out
add
insl
xchg
mov
enter
or
sahf
cmp
fnstenv
addr16
mov
imul
or
mov
jno
inc
ds
loopne
lcall
mov
mov
in
dec
andb
hlt
mov
jno
outsl
paddsb
xchg
push
andl
adc
or
xor
mov
outsl
adc
or
add
inc
repz
icebp
xor
std
icebp
sbb
fcomps
rorl
xchg
add
mov
pushf
and
loop
sbb
mov
xor
mov
dec
cmp
push
sbb
xor
fisubrs
push
inc
jb
or
out
xchg
xchg
mov
dec
push
mov
aas
mov
xor
ja
cmpsb
xchg
aam
xor
sbb
cmpsl
push
js
sbb
pop
push
ja
cmp
mov
lahf
xlat
test
push
ds
out
xorb
jb
decl
lret
mov
jle
mov
test
and
divb
and
push
add
int3
xchg
sbb
test
dec
push
les
or
and
ljmp
insb
fsubrs
repz
push
shl
out
mov
push
xchg
cmp
pop
jno
out
pop
outsb
sbb
xlat
sbb
hlt
aam
jo
and
scas
in
sub
cld
xchg
push
into
out
mov
mov
fstl
fildll
and
imul
add
sarl
xchg
scas
adc
jmp
cli
adc
int3
push
aas
aam
fildl
sbb
push
inc
insb
and
sbb
dec
inc
inc
repnz
rorl
das
std
aad
fcompl
aaa
scas
mov
mov
cmp
pop
dec
iret
cmpsb
xchg
ljmp
in
sub
iret
daa
cld
movsb
mov
pop
and
leave
fdivrs
push
test
je
cmc
jmp
push
adc
int
push
cltd
mov
xchg
in
divl
jbe
pop
test
inc
lcall
cli
es
xchg
jle
mov
cmovge
xor
mov
and
jge
mov
sub
jne
xchg
sub
inc
popa
jne
in
stos
or
push
jge
fdivrs
enter
insl
inc
pop
insl
lret
int
stos
lcall
clc
sbb
icebp
xor
lcall
sbb
inc
lret
and
push
and
stc
push
imul
pop
jg
call
cs
sub
jmp
aas
push
ss
push
xchg
and
xchg
lods
dec
lahf
nop
push
xor
lods
in
sbb
repz
mov
mov
inc
dec
xchg
cmpsb
shll
lods
lret
mov
ret
int
rolb
divl
ficoms
in
xchg
mov
sbb
push
pop
add
bound
fwait
cmp
imul
fst
xor
mov
lods
popfw
mov
jecxz
push
in
xchg
xlat
sti
in
loope
lods
daa
in
mov
mov
mov
insl
mov
insl
ror
cmp
sbb
add
xchg
mov
sti
and
imul
je
fmuls
or
addl
mov
adc
inc
shl
fldenv
repz
mov
and
xchg
jl
push
dec
mov
sub
xor
pop
jo
jge
fmul
into
mov
lcall
cmp
lcall
xor
aam
cmpb
add
shrl
cmp
inc
sub
scas
lea
cmp
mov
fisubrl
jmp
test
cmc
stc
pop
inc
loop
sbb
push
mov
sub
sahf
jns
and
jae
mov
inc
inc
jbe
loop
lret
outsl
pop
pushf
sarl
int
pop
call
or
mov
sub
stos
jp
js
sub
mov
sub
pop
sub
jo
sbb
cmp
fwait
mov
mov
inc
xor
popf
lods
je
lods
idivb
fidivl
leave
xchg
hlt
es
je
jae
jno,pt
aaa
fisubrl
inc
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
jl
ja
dec
push
jge
or
jp
and
out
insb
mov
and
cmpsb
mov
sti
cmpsb
push
jmp
mov
mov
addb
mov
in
sub
insb
lods
leave
xor
rolb
or
daa
ljmp
dec
push
cmp
dec
jns
enter
scas
adc
js
add
imul
test
sbb
sub
jae
cmp
enter
mov
mov
cmp
inc
pop
out
pop
iret
sub
rolb
emms
negl
out
fs
add
repnz
jle
sub
popa
scas
and
jmp
sbb
pop
loope
add
popf
test
xchg
iret
push
in
mov
jae
daa
aam
xchg
cmpsb
bound
mov
adc
lret
mov
ret
push
stos
fistpll
pop
mov
xchg
xchg
int3
je
cmpsb
in
adc
std
pop
xchg
push
pop
cmpsl
scas
fists
xor
sarb
push
push
or
jmp
cmc
scas
shufps
rcl
cltd
or
fisubrl
mov
in
mov
call
int3
int
mov
ds
rcrl
cmp
ja
add
test
hlt
out
testb
aas
lds
inc
jecxz
pop
cmp
cld
mov
and
mov
xchg
xchg
lret
sahf
sarl
lods
pop
negb
andl
sbb
lahf
aad
jo
fstpt
idivb
cmp
rorb
cmpsl
xchg
icebp
pop
jl
ficomps
notb
dec
dec
loop
cmpsl
jo
daa
insb
sarl
in
adc
sub
stc
push
addb
movl
mov
adc
shlb
decl
mov
mov
je
std
rorl
add
ds
dec
and
ror
iret
xchg
aaa
jecxz
popa
cld
xchg
pop
mov
mov
cld
dec
test
push
fcompl
and
pop
sub
ret
xchg
bound
aas
add
out
clc
subl
shlb
pop
xchg
push
inc
mov
and
xorl
jns
test
push
mov
pop
mov
mov
inc
or
sub
inc
adc
mov
je
cmc
adc
mov
inc
hlt
inc
cmp
sarb
xchg
test
test
add
data16
sub
inc
or
inc
sub
stos
jbe
in
pop
dec
mov
aas
mov
aaa
shlb
jl,pt
sub
mov
push
inc
sub
cs
maskmovq
divl
add
inc
nop
dec
mov
divb
jl
and
insl
int
mov
mov
in
xor
test
gs
cmp
fcmovb
and
aas
iret
xchg
addr16
mov
shll
inc
xor
dec
jecxz
stc
sub
or
mov
or
repnz
xor
in
iret
outsb
sbb
add
adc
data16
mov
mov
cmpsl
out
mov
jbe
mov
leave
loop
faddl
sarb
mov
movsl
xchg
jo
inc
inc
fdivrl
rol
scas
test
push
mov
fisttps
push
inc
adc
jp
in
call
pushw
leave
push
pop
sti
cmp
outsl
push
fisubrl
dec
jno
in
xor
jne
frstor
xor
push
ds
ja
aaa
add
push
gs
lods
stc
xchg
pusha
subb
fwait
dec
add
in
rcrb
call
xor
cmp
int
cmp
icebp
and
cmpsb
mov
cmp
or
xor
test
mov
bound
jno
ljmp
push
xchg
cli
andl
andl
testl
cmp
pop
xchg
lds
cltd
push
dec
aam
lret
call
xlat
sbb
dec
popf
push
loop
jle
test
dec
xchg
cmpsb
ds
xchg
test
neg
stos
les
pop
inc
mov
add
fcoml
icebp
add
sbb
js
orb
inc
push
gs
aaa
pop
jle
cmp
int
pop
or
push
inc
xor
fcoml
cmp
push
int3
mov
in
dec
add
test
out
cmp
jbe
jnp
out
jnp
pusha
or
sub
pcmpeqb
cmpsb
fwait
loopne
inc
repnz
sbb
in
sub
mov
mov
xor
outsb
and
fldenv
mov
pop
fimull
or
xchg
les
lahf
or
jae
pop
enter
pop
dec
push
movl
popl
cmp
in
sar
incl
shlb
dec
inc
mov
jg
push
mov
xchg
les
adc
out
cmp
aas
jmp
mov
cmp
mov
imul
movsl
jns
and
mov
es
inc
mov
out
cmp
cmp
test
neg
pusha
xor
mov
das
mov
iret
adc
or
cltd
xchg
pop
loope
and
ljmp
pop
mov
sub
mov
jmp
fidivl
mov
test
out
inc
and
jg
test
or
push
jb
and
sbb
bound
sub
iret
pushf
jge
jge
pop
pusha
jl,pt
inc
test
mov
test
notl
scas
lods
cmp
bnd
push
jmp
or
xlat
pop
sub
test
dec
xchg
pop
fcmovu
lea
and
stc
push
sbb
sub
push
mov
iret
call
stc
mov
enter
loope
mov
incl
jbe
xchg
adc
sbb
adc
jl
add
bound
add
inc
sbb
lahf
pop
push
pop
jp
pop
dec
popa
data16
sti
shlb
arpl
push
adc
cmp
clc
push
movsl
outsb
pop
lret
xlat
sub
xor
int
lds
ret
les
jge
hlt
lods
fsubs
ret
add
lret
sub
inc
mov
and
or
jo
out
push
out
cmpsl
popa
ss
jb
mov
int3
dec
push
lods
jle
lret
movsl
add
in
xor
jmp
hlt
divl
lahf
stos
sahf
js,pt
mov
popa
inc
mov
xor
data16
lret
cmc
xor
adc
mov
rcr
pop
sbb
lcall
pop
xchg
xor
pop
dec
push
loope
adc
cwtl
lock
pop
pop
cmp
or
push
adcb
lcall
mov
aas
cmpl
fs
adc
lret
lock
xor
jmp
shll
loope
xchg
gs
mov
mov
out
add
adc
jle
movsb
movsb
fisttps
mov
out
pop
xchg
xchg
fs
adc
sbb
lods
outsb
es
stos
mov
dec
enter
mov
cmpsl
and
rorl
mov
int3
fldl
repnz
pop
add
je
aas
xchg
movsl
popf
insl
add
cli
cltd
ficoms
popf
adc
and
mov
push
jg
fisttpl
fwait
or
inc
pop
and
ffree
mov
sahf
add
gs
data16
add
ljmp
jg
out
pop
adc
jl
pop
xchg
or
fs
stos
adc
pusha
out
cmp
sub
sub
or
jae
mov
push
dec
dec
jae
jg
out
or
mov
mov
daa
inc
das
push
mov
and
sub
cmp
jae
sbbl
mov
mov
xor
lahf
pop
stos
mov
adc
in
cmp
in
sarb
test
xor
pop
lea
fcompl
and
mov
addr16
push
dec
xor
cmpsl
fiaddl
ljmp
arpl
ja
repz
aad
fildll
test
stc
pop
call
sbb
xor
movsb
and
fs
xchg
iret
adc
pop
dec
sbb
testb
and
adc
mov
mulps
cmp
mov
arpl
test
movsb
mov
adc
push
xchg
addb
lock
jge
test
cltd
stc
aam
and
lds
add
mov
lods
mov
sub
mov
mov
lods
and
cltd
fldz
mov
ja
repnz
repz
fistl
in
sbb
cld
out
jl
xchg
lds
dec
jbe
fmuls
jns
loope
jns
mov
push
shlb
test
popf
popf
adc
decl
dec
adc
mov
pusha
test
xchg
mov
mov
xor
es
jmp
stc
xor
mov
stos
push
icebp
jne
fprem1
xchg
xor
xchg
lods
add
mov
mov
push
repz
pop
pop
sbb
stos
push
push
push
sbb
jns
add
fsubl
and
xor
mov
out
pop
cmp
add
mov
testl
mov
test
cwtl
sti
adc
sbb
fidivrl
inc
fisubrs
add
outsl
movsb
in
and
xor
les
pop
ss
mov
mov
push
jecxz
hlt
xchg
pop
add
pop
stc
adcl
in
in
add
in
mov
test
clc
loop
int3
ret
pop
or
mov
mov
jnp
dec
jge
push
imul
mov
cmpl
mulb
xchg
ret
inc
mov
pop
push
xor
pop
mov
sahf
xchg
lods
js
ss
ror
or
or
cmp
mov
pop
int
incb
out
repnz
adc
popf
cmp
out
scas
sbb
inc
xor
xchg
pop
es
dec
leave
xor
mov
push
mov
jnp
and
js
xchg
xor
jne
pop
jnp,pt
mov
fcomi
imul
jns
loopne
in
sbb
into
or
pop
ja
or
xor
cmp
repnz
jb
popa
test
mov
scas
add
xor
dec
pusha
out
and
mov
sub
jbe
cmpsl
push
add
cmp
loope
pop
lods
sub
adc
xor
jae
fwait
adc
shrl
test
leave
push
add
stc
or
inc
add
adc
jle
adc
mov
push
push
in
xor
or
ficoml
xor
jnp
js
insl
inc
pushf
cld
nop
int3
int3
xor
popa
movsb
or
pop
cs
lds
jbe
cmpsb
nop
frstor
xchg
lret
pop
jge
inc
pop
out
adc
cwtl
mov
mov
push
xor
or
jbe
outsb
or
jns
imul
mov
push
dec
cmovle
aaa
sti
push
aam
ljmp
pop
push
mov
xchg
pop
fs
mov
cmc
lcall
inc
mov
add
xchg
cmpl
lock
cmp
sub
push
rolb
sbb
cmp
cmp
add
pop
decl
dec
sbb
mov
pop
xchg
mov
rclb
sbb
les
aas
pop
or
xlat
mov
mov
pop
rclb
sub
xor
inc
stos
xor
xlat
fldcw
jmp
inc
rorb
mov
fnsave
insl
jbe
push
xchg
jg
shrl
cwtl
sbb
fnsave
fwait
rcrb
lret
and
int3
or
lods
push
push
xor
hlt
xor
xor
jg
in
out
cmp
shr
flds
mov
sbb
push
cmp
push
aaa
enter
or
sahf
mov
mov
fst
fsubr
xchg
dec
test
daa
jl
vpminub
mov
daa
sub
je
pop
inc
sub
cld
in
sub
mov
fstpl
ds
xchg
out
ss
cmc
int3
pop
js
sub
cmpsl
fs
in
dec
adc
pop
mov
adc
dec
sti
dec
repz
and
xor
adc
jb
cs
pop
arpl
inc
xchg
les
push
pop
mov
mov
push
in
mov
push
mov
mov
or
push
ffreep
xor
push
jno
mov
ja
push
fs
mov
imul
mov
adc
xchg
idiv
adc
in
push
pop
aaa
jp
push
aas
fbld
mov
or
movsb
add
sub
in
xchg
xor
mov
test
outsb
ja
sbb
mov
sbb
pop
xlat
leave
test
addr16
push
pushf
sub
mov
push
inc
xchg
les
in
jno
aam
imul
sub
into
lods
xchg
push
sub
fstl
call
lea
cmpsl
push
cmp
inc
pop
rcrb
mov
bound
in
subb
cld
xchg
leave
aaa
loop
jp
inc
incb
fadd
inc
out
xchg
js
adc
je
or
xor
out
inc
jno
insb
pop
mov
std
lret
pushf
std
shlb
int3
ja
ds
xor
inc
daa
xor
stos
outsl
cmp
pop
ljmp
cltd
loopne
addr16
push
xor
jle
imul
dec
jge
xorb
push
sahf
and
insb
mov
jl
js
push
inc
fs
rcrb
mov
fisttpl
dec
lods
out
pop
cmpsb
mov
dec
mov
xor
lods
rsqrtps
mov
test
scas
test
inc
std
xor
cmpsb
test
cmc
mov
jnp
ds
lret
stos
fildl
jbe
int3
aaa
xlat
cmp
arpl
push
iret
clc
nop
push
ds
loope
and
mov
addr16
ljmp
aad
cli
les
adc
test
imull
xor
movsl
mov
inc
test
rcrl
cld
pop
mov
sbb
mov
sarl
lahf
dec
push
leave
addr16
add
int3
cmp
ret
mov
mov
js
lods
cmove
push
pop
xor
mov
mov
push
or
and
add
pop
fucomi
mov
das
leave
sbb
lea
dec
nop
cmpb
push
cmpsb
lds
jb
pop
addb
repnz
sub
and
or
mov
sbb
pxor
popa
call
jns
pop
addr16
push
testb
mov
std
lea
cltd
pop
push
sub
mov
cltd
hlt
adc
adc
fistpll
sbb
fistps
add
out
mov
aaa
ror
push
cli
outsl
or
xchg
dec
sahf
sub
stos
pop
push
adc
outsl
cmpsb
jns
adc
add
out
outsb
cs
add
dec
push
in
lds
ljmp
pop
mov
jg
sahf
cmp
inc
ja
lock
cmp
int3
lret
push
out
shll
push
pop
fmulp
pop
sahf
into
jno
arpl
cmp
outsl
mov
mov
or
cwtl
mov
mov
xchg
add
movsb
jg
idivl
sbbl
fisttps
nop
cltd
cmpb
ret
lea
fs
js
mov
mov
das
jno
add
mov
mull
fistl
jecxz
pop
gs
sahf
dec
in
dec
push
shlb
in
fildl
pop
jge
jo
xor
jl
mov
out
pop
pop
pop
mov
xchg
mov
mov
or
insl
out
cltd
cmp
insb
xor
sahf
and
mov
loopne
pop
iret
clc
pop
aas
pop
push
stos
fs
dec
mov
outsb
movb
mov
sbb
sbb
push
sbbl
gs
add
xor
scas
sub
mov
arpl
sarb
or
sub
xor
fwait
outsl
es
push
in
icebp
adc
iret
add
mov
xchg
adc
dec
cwtl
xor
lcall
pop
cmp
mov
mov
adc
leave
scas
inc
scas
pcmpgtb
xor
aam
mov
test
andl
cmpl
xor
mov
leave
mov
js
dec
icebp
pop
movl
add
inc
fbstp
pop
add
add
cmp
outsl
mov
jns
or
dec
lcall
cmpsl
stos
cmp
jmp
lods
xorl
lahf
orl
fdivp
and
fnstsw
scas
dec
in
xchg
rcr
mov
scas
push
gs
cmp
les
add
xor
out
add
notl
pop
or
jg
add
and
and
arpl
arpl
mov
dec
adc
pop
dec
mov
sub
dec
mov
inc
imul
xlat
push
sbb
daa
push
add
in
out
arpl
sub
mov
and
insl
pop
add
js
fcmovb
pop
push
inc
sbb
cli
je
or
add
mov
pop
scas
mov
or
push
cmp
icebp
cmp
add
sub
mov
out
lds
push
adc
gs
shll
rcrl
popa
nop
xor
fisttpll
arpl
and
shll
cmc
outsb
and
sub
and
or
ss
cmp
and
or
jl
pop
out
imul
jle
jbe
and
pop
in
and
aaa
push
inc
fldcw
or
cmp
mov
fs
loope
mov
int
xchg
mov
push
sbb
into
daa
iret
mov
mov
mov
jg
in
mov
push
add
aad
jo
or
or
out
outsb
xchg
mov
push
gs
mov
mov
or
or
push
push
push
cmpl
stc
dec
ljmp
mov
add
mov
ret
adc
mov
cmpsb
push
daa
test
idivl
shll
test
in
push
add
inc
mov
daa
sbb
mov
dec
jl
xor
fdivs
pop
in
je
pop
lock
movzbl
insb
in
mov
xchg
xchg
or
xchg
mov
fdivrl
jp
test
stos
leave
jnp
ds
fwait
daa
jecxz
mov
insl
mov
lds
dec
add
lret
outsb
mov
xchg
adc
push
cli
add
push
icebp
push
arpl
pop
mov
cmp
mov
daa
fnstcw
mov
fldpi
push
cmc
jl
pop
xor
iret
xor
addl
pop
in
hlt
fsub
adc
mov
mov
lcall
and
faddl
dec
mov
push
jb
loopne
jbe
andb
and
js
fisubrl
add
mov
jle
je
xlat
sbb
sahf
insb
das
lods
dec
jno
xchg
fdivr
in
sub
cmp
xor
and
or
and
ljmp
call
xor
mov
jns
iret
inc
jge
jns
int3
cmovp
shr
sbb
fiaddl
repz
mov
pop
out
aas
lcall
jb
or
call
int3
in
lret
sti
xchg
js
andb
lcall
pop
outsl
addl
xor
lret
xchg
fldt
insb
arpl
xor
pop
bound
mov
orl
fwait
mov
mov
push
xchg
mov
mov
cs
repnz
mov
mov
and
out
outsb
mov
mov
ficoms
pop
jmp
ljmp
imul
popa
into
aad
cmp
mov
int
repnz
enter
stos
jo
inc
adc
dec
movsb
aam
cmpl
mov
daa
call
sub
cs
mov
in
push
out
mov
testl
xor
out
xchg
stos
mov
pop
lds
mov
push
lock
inc
adc
mov
push
xchg
jbe
inc
cmp
ja
xchg
mov
dec
add
inc
imul
sarl
mov
scas
sbb
push
pop
iret
add
inc
rcrb
mov
shrb
xor
subl
fnsave
out
insl
cwtl
fwait
es
pop
loopne
push
fldt
xchg
dec
outsb
jb
dec
cmpsl
inc
add
idiv
push
mov
or
ljmp
jp
lcall
inc
xchg
xchg
aas
or
insb
enter
xchg
dec
push
jo
mov
sbb
and
aaa
pop
jns
fadds
jl
push
stos
sbb
out
aas
les
jge
fisttps
pop
mov
push
dec
cmp
lds
mov
rcl
jns
mov
jbe
call
adc
lret
inc
outsb
inc
shlb
ds
jle
cmp
std
or
pop
push
gs
adc
cmp
ja
sub
mov
inc
sub
insb
pop
mov
ret
das
or
lret
jecxz
addb
inc
dec
int
push
push
lret
dec
repnz
aad
cli
pop
iret
push
std
inc
andb
in
sub
sbb
push
daa
push
sbb
cmp
sub
xchg
mov
push
mov
xchg
inc
mov
jl
inc
cwtl
cltd
adc
sbb
and
push
xor
rolb
and
mov
pop
data16
insl
mov
sbb
bound
cmp
xchg
daa
dec
popa
je
call
mov
popf
out
xchg
stos
jle
mov
xor
xchg
adc
dec
ds
lds
dec
inc
sbb
pop
fwait
inc
mov
bnd
and
mov
int3
loope
jle
sbb
sub
loope
jnp
imul
sub
pop
cmpsb
and
test
movsl
lret
dec
loopw
loopne
xchg
xchg
bound
or
mov
bound
ljmp
xchg
lret
jns
rcr
out
outsb
xchg
leave
adc
xchg
mov
jbe
std
cli
pop
rcl
jl
rolb
dec
movsl
leave
cmp
cltd
jecxz
inc
cs
std
cmp
scas
jecxz
fldl
pop
xchg
cmc
mov
outsl
xchg
je
xchg
lcall
cltd
cmp
jle
shl
fnsave
push
xchg
inc
cld
fwait
dec
aad
out
pop
xor
cmp
pushf
push
lahf
pop
dec
ljmp
in
shlb
inc
cmp
jnp
mov
fs
fstl
xlat
popf
dec
inc
push
xchg
mov
mov
cmc
fistpl
pop
es
mov
push
into
and
xor
inc
aam
push
jge
fisubs
les
ja
xor
movsl
je
dec
add
jle
mov
inc
xchg
psubusb
xor
lcall
mov
hlt
jecxz
cmp
lods
sar
xor
sbb
push
jnp
pop
orl
cmc
xchg
sbb
mov
xchg
imul
cmp
jge
push
fadd
lahf
fwait
dec
push
sahf
inc
divl
push
pop
cs
jge
js,pt
inc
mov
ds
fcom
mov
sbb
inc
cmp
add
push
sub
pop
stos
sbb
push
push
push
stos
aad
jp
pop
xor
mov
je
cmc
int
push
filds
mov
xchg
inc
xor
les
and
aam
in
cmp
fistps
xorb
out
xor
adc
das
iret
cmp
or
push
or
inc
aas
push
scas
mov
pushf
cmovge
mov
xchg
stos
adc
mov
inc
sbbb
fldcw
in
into
outsl
stos
xchg
sbb
lods
rolb
or
push
imul
jo
mov
repnz
std
lahf
pusha
fwait
mov
sbb
fsubr
xor
push
and
jb
push
in
or
movsl
outsb
test
cmp
leave
jge
push
out
in
into
cmp
pop
sub
ljmp
mov
pop
arpl
jb
pop
mov
jbe
add
scas
inc
dec
imul
dec
sbb
push
push
int3
push
xor
jae
push
adc
outsb
popa
outsb
xor
stos
punpcklbw
icebp
lret
sub
jnp
aaa
mov
sub
adc
ret
cli
push
or
push
mov
xchg
mov
mov
mov
ja
inc
imul
add
and
mov
xor
fcompl
pop
add
adc
inc
in
add
gs
ret
nop
sbb
sbb
fmuls
sub
ds
ja
or
lods
clc
jle
jnp
and
jp
cltd
pop
sbb
sub
in
dec
xor
sbb
fiadds
aam
ss
fdivrl
out
lods
jecxz
jbe
shlb
mov
loopne
cmp
std
mov
inc
mov
sub
xor
movsl
lock
addr16
bound
stc
adc
sub
test
aaa
dec
cwtl
jmp
sub
sbb
inc
les
arpl
fisubl
mov
jmp
ja
fsubrl
push
hlt
ljmp
test
fs
imull
add
ss
cwtl
jno
jge
push
popa
push
mov
cmpsl
mov
or
mov
js
jbe
xor
sub
cmpl
xchg
mov
outsl
cmp
scas
push
push
shlb
cmp
call
aaa
push
mov
mov
rcrl
lock
cmc
lock
repz
incl
sbb
or
insl
xchg
neg
loope
cmp
dec
jae
xor
jae
or
sbb
jg
sahf
popa
jnp
mov
repnz
fbstp
mov
xlat
adc
xor
and
aam
ror
mov
cmp
imul
mov
lock
push
sub
lret
push
xchg
orb
ret
and
in
mov
outsb
ds
mov
jno
out
pusha
test
inc
dec
imul
and
and
jmp
push
sbb
cmp
divl
cmp
xchg
pop
lret
push
and
mov
pop
cmc
xor
out
sarb
lock
push
shll
jo
add
inc
mov
cld
shrb
pop
out
dec
mov
push
xchg
inc
cwtl
call
les
scas
addr16
fs
in
int
movsl
test
repnz
xor
pop
mov
adc
repnz
fs
mov
jecxz
dec
call
addb
mov
or
arpl
rcl
inc
enter
lcall
shlb
pop
add
ljmp
push
sahf
sub
sahf
ret
dec
add
mov
bndstx
xchg
pop
fmull
int3
fcmovnb
mov
fsubrl
jns
fisttpll
mov
cwtl
pop
ret
ret
insl
out
mov
repnz
mov
ret
or
arpl
mov
dec
lcall
imul
mov
testb
bnd
addl
fnstcw
mov
loopne
jp
mov
data16
je
test
testl
add
cld
cmp
shrl
leave
mov
xchg
sub
or
fstpt
fcomp
jno
lds
out
aam
je
sbb
xchg
jecxz
sbbb
out
jno
insl
push
dec
ret
sub
stos
push
xchg
jge
cmp
in
lahf
imul
movsb
out
scas
fmul
jo
popa
push
in
ds
push
jae
jle
sub
xor
aad
push
jecxz
lcall
dec
cmpsl
push
sub
push
leave
push
cmp
fisubs
jo
jecxz
pop
pop
xor
rcr
inc
push
shrb
ret
outsl
subl
int3
sbb
xor
xchg
adc
or
ret
adc
sub
sub
xlat
sub
cmp
lock
adc
or
sub
roll
stos
lahf
loop
mov
es
sarb
mov
sbb
xor
leave
int3
or
call
enter
cwtl
lahf
adcl
and
push
je
xor
loope
pop
aaa
popa
jnp
add
inc
ror
das
push
imul
xchg
test
lret
test
test
add
inc
aas
mov
out
ss
arpl
sti
xor
mov
jmp
inc
mov
out
mov
push
mov
lods
add
sub
mov
adc
jmp
xor
es
jne
scas
loope
sub
les
pop
adc
jp
xchg
or
jmp
ja
jl
dec
cli
lods
inc
aam
adc
add
imul
lahf
adc
sub
xor
xchg
dec
in
sub
in
stos
js
iret
cld
pop
push
out
ss
jle
imul
pusha
pop
pop
or
jne
push
xchg
not
mov
add
cmovl
cld
clc
xchg
and
lods
filds
push
sub
orb
or
mov
adc
sub
fwait
cmp
jne
mov
xor
daa
dec
stos
in
xchg
repz
mov
jp
stos
mov
sbb
xchg
jbe
into
sbb
dec
int
sub
das
dec
inc
movsl
cld
test
xor
daa
int3
jp
add
jns
lock
lods
push
or
xor
lcall
gs
lret
fsubs
repz
add
mov
jp
jl
pop
cs
shl
inc
sub
inc
and
mov
jl
and
mov
pop
lods
out
pop
cmp
jnp
push
jno,pt
sti
xchg
dec
cmp
cmp
ljmp
call
daa
fcos
aaa
rorl
inc
sub
pop
int
pop
or
inc
movsl
mov
outsb
xchg
in
js
xor
sbb
rcrb
push
jecxz
add
test
mov
sub
jle
pushf
mov
jl
mov
in
adc
shl
addr16
ja
adc
fisubrl
outsl
xlat
push
adc
pop
and
leave
ret
jno
roll
mov
rcrb
sub
lods
dec
adc
cmp
push
sbb
sarl
icebp
cmp
mov
sbb
fs
dec
and
out
hlt
xor
inc
dec
js
mov
mov
cld
adc
mov
test
pop
pop
xchg
cmp
push
out
rcrl
mov
mov
or
sub
inc
mov
je
mov
xchg
mov
push
shll
sbb
lcall
loop
add
js
jp
mov
nop
sub
pop
leave
sbb
jle
add
pop
push
xchg
sbb
jns
and
mov
insl
pop
mov
int
mov
xchg
out
sub
jg
fwait
mov
dec
lea
add
inc
cmpsb
jle
mov
insl
lods
aas
xor
mov
jo
inc
lods
shlb
shll
xchg
pop
sbb
cmp
filds
push
jnp
lds
fdivs
jb
cmp
outsl
mov
pop
mov
add
insl
mov
jno
xchg
sbb
sub
loopne
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
flds
inc
mov
or
jp
or
cmpsl
and
dec
add
icebp
ret
sbb
dec
mov
rolb
inc
dec
paddq
shl
cmpsb
mov
int3
adc
xor
loop
adc
popa
xor
and
push
and
inc
jp
xor
pop
pop
push
pop
adc
dec
cli
pop
and
cwtd
nop
divl
test
push
mov
leave
inc
sar
push
mov
insb
je
ret
cmpsb
repz
sub
mov
in
jno
jp
and
push
bnd
out
cmp
push
call
out
inc
arpl
xchg
rcll
lods
inc
pop
stos
dec
adc
jge,pn
sbbl
jno
mov
insl
das
sahf
push
mov
rcrb
xorb
inc
sub
jo
nop
and
mov
lods
sahf
xlat
mov
xor
xor
ret
cmpsb
mov
push
inc
call
mov
sub
imul
hlt
push
jae
gs
mov
mov
sbb
bound
or
sbb
lods
jae
ret
and
iret
leave
inc
popf
fldl
mov
or
sbb
jmp
mov
adc
frstor
stos
inc
ficoml
out
lahf
push
inc
push
ror
mov
xor
add
call
cli
dec
sti
imul
sub
sahf
pushf
iret
mov
inc
nop
mov
mov
aaa
cwtl
mov
add
int
sub
xlat
mov
cmp
or
xorb
lods
lret
push
mov
andb
cld
push
mov
mov
sahf
lahf
pop
push
mov
cld
mov
add
mov
dec
push
cmp
je
cmp
fs
mov
ret
hlt
cltd
cmp
repnz
push
lea
inc
pop
dec
push
mov
cmovge
jnp
mov
xchg
push
and
xchg
inc
adc
mov
bnd
outsb
ljmp
and
adc
jbe
jmp
ret
adc
clc
jecxz
pusha
lret
adc
cmp
leave
orl
sbb
pop
ret
test
pop
mov
push
jo
daa
or
pop
mov
cwtl
ja
sti
pop
xor
pop
aaa
xchg
lods
test
push
icebp
shrl
sub
je
das
mov
dec
je
cmp
fcmovb
icebp
clc
std
popf
decb
mov
xor
aaa
insl
lahf
push
lret
lret
pop
call
ja
shr
add
inc
inc
inc
lods
jns
fiaddl
mov
push
lahf
xchg
and
repz
sbb
aaa
inc
std
add
jp
and
and
out
cltd
add
outsb
adc
cmc
jg
insb
or
add
jbe
xor
fwait
inc
cltd
fcoml
mov
or
outsl
jae
xchg
push
push
pushf
jmp
cmc
adc
mov
jno
pop
enter
mov
jl
neg
adc
incb
and
call
xchg
ret
mov
mov
mov
jmp
enter
sub
mov
dec
xor
inc
gs
pushf
ja
jne
icebp
sbb
mov
pop
daa
lods
insb
push
cmp
xchg
pop
mov
xor
jl
call
ror
shrb
push
scas
mov
lret
shlb
loopne
push
aad
add
sbb
clc
xor
adc
cmpl
or
sarb
in
scas
lods
push
mov
mov
out
ljmp
aas
loope
push
addl
addl
jge
daa
stc
mov
stos
cmp
adc
sahf
pusha
cmp
sbb
popf
fdivs
jb
daa
dec
dec
bound
out
mov
cmp
subps
jg
adc
shll
addr16
xchg
hlt
push
jl
jecxz
lods
ficomps
les
mov
jno
push
stos
in
neg
mov
out
or
lcall
out
dec
cmp
pushf
inc
jno
cmp
mov
aaa
testb
push
xchg
pop
and
das
test
mov
in
xchg
push
xor
sbb
pop
shrl
mov
mov
sbb
sbb
xlat
fdivr
int3
dec
in
mov
ss
icebp
in
mov
lret
ret
in
shll
stos
popa
pop
popa
mov
mov
test
dec
cmp
aaa
andl
out
and
ds
push
movsl
negl
jg
cld
mov
sub
cmp
mov
and
cmc
mov
push
js
das
lret
inc
mov
mov
in
insl
and
pop
shlb
adc
mov
sub
mov
and
jne
xchg
fsubs
hlt
sub
pop
xchg
xchg
rolb
aaa
bound
jo
ret
xchg
xor
in
mov
in
push
jb
cmpsb
adc
mov
in
out
leave
add
adc
mov
loopne
lahf
push
mov
fucomi
xchg
loopne
and
test
xchg
xor
adc
jg
mov
push
xchg
jle
fstl
fstl
mov
bound
push
aaa
stos
imul
into
into
pop
jge
aaa
jecxz
ret
pop
pop
sub
jno
les
jle
push
xchg
mov
sti
or
in
add
out
int3
in
pop
outsb
jno
loop
or
ret
xor
cmpsl
xchg
outsb
je
rolb
ret
pop
cs
mov
or
or
sub
scas
adc
inc
adc
mov
sbb
outsl
xchg
dec
or
lock
inc
xor
dec
stos
xchg
xchg
mov
cs
repnz
or
add
adc
jge
sub
sub
loop
xchg
cmpsb
sub
mov
andb
or
mov
fsubrs
movsl
xor
and
add
ret
jno
fisttpll
test
or
pop
fdivl
jb
adc
hlt
sub
xchg
div
imul
pop
mov
xchg
hlt
and
sti
push
mov
xchg
dec
mov
push
or
dec
pop
mov
sub
mov
lock
and
push
adc
popf
outsl
fsubrl
jmp
out
fwait
mov
loope
xor
out
add
sbb
add
cld
aam
and
aam
push
sbb
jle
cmp
imul
sbb
inc
int3
mov
test
movl
fldl
and
jl
inc
dec
sub
fdivrl
insb
pusha
loop
popf
test
insl
mov
inc
andl
jo
repnz
sub
jmp
cmp
in
pop
push
test
sahf
out
test
or
movsl
sub
sub
push
dec
cmpsb
xchg
push
sbb
pop
out
jmp
loopne
xlat
shlb
sbb
mov
fcoms
movsl
mov
xchg
adc
mov
pop
adc
sti
daa
or
cld
xchg
jns
sbb
mov
jae
addr16
and
fsubs
cmc
pushf
push
push
cmpsl
sub
addr16
out
in
lea
push
out
repz
jbe
pop
dec
push
enter
sti
sub
push
cmp
push
mov
test
dec
jb
je
cmpsb
push
inc
fidivrl
loope
mov
sbb
idivb
xlat
repz
dec
int
iret
xchg
es
cmp
ss
mov
jge,pt
int
cmp
mov
push
pop
je
psubusb
sub
pop
xchg
shl
ret
cmpsb
mov
iret
push
sub
inc
jp
mov
fldenv
roll
movzbl
xchg
ljmp
stc
jge
repnz
and
divb
jae
fcom
clc
inc
push
xchg
push
rcrl
stc
jp
rcll
into
ljmp
fdivrl
orl
mov
data16
sti
test
fisubrs
sub
adc
hlt
push
dec
or
jl
pop
popa
sub
je
cltd
je
fldt
dec
into
clc
insb
pop
or
sub
mov
jb
andb
lret
mov
insb
jge
pop
pop
cwtl
cmpsl
cltd
out
xor
push
mov
test
mov
aam
clc
add
movsl
dec
cmp
pop
mov
mov
insb
jle
cwtl
inc
push
cmc
addr16
adc
sbb
cmp
dec
xchg
icebp
mov
xor
inc
aas
fidivl
jp
xchg
cli
sub
mov
icebp
mov
cltd
es
popa
fidivs
scas
or
dec
add
jnp
addr16
popa
int
mov
scas
js
mov
into
sbb
andb
shll
mov
xchg
xor
adc
test
pop
shll
insl
pmaddwd
cmp
xchg
movsb
and
mov
xor
jp
inc
scas
arpl
inc
ds
inc
inc
adc
rol
add
xchg
test
test
lret
in
adc
scas
gs
adc
push
xchg
call
lock
aad
in
bound
pop
int
inc
dec
mov
shlb
jno
push
movhps
data16
js
jge
mov
packuswb
jmp
mov
inc
movsl
add
gs
jne
les
adc
je
add
pushf
fildl
rcrl
aas
pop
push
cmp
pop
mov
popf
mov
loope
push
shrb
bound
push
addr16
inc
insb
sub
inc
and
pop
imul
insb
add
aaa
out
cmpsl
inc
and
xor
mov
push
cmp
xchg
mov
mov
mov
mov
icebp
mov
test
xlat
leave
stos
mov
stc
add
mov
xor
push
and
imul
mov
call
jmp
adc
pop
enter
cmp
and
lcall
stos
scas
pop
push
leave
sbb
jns
or
adc
outsb
sarl
fucomi
test
add
xor
jmp
lcall
clc
pop
call
push
pop
lret
hlt
pop
les
movsb
xorb
and
out
jbe
sbb
adc
ljmp
adc
fwait
sub
sbb
mov
inc
jmp
addr16
xchg
je
pop
inc
fld
sahf
xchg
xchg
test
imul
das
dec
adc
imulb
dec
pop
fwait
stos
mov
dec
sub
fidivrl
adcl
loop
push
jns
mov
inc
ret
dec
push
lcall
pusha
add
mov
cmpsl
arpl
lds
movsb
ret
fidivrl
add
mov
fsubr
inc
pop
or
test
lods
push
dec
push
das
mov
out
adc
cmp
xchg
dec
xchg
movsl
mov
and
cmp
sbb
mov
pop
xor
push
sbb
rclb
xchg
pop
ds
dec
lock
das
dec
fsub
lods
fdivp
loopne
and
or
inc
testl
jp
xor
jmp
cmp
rcrl
push
sub
or
jns
pop
xchg
pop
cmovb
stos
inc
adc
or
aas
adcb
or
jge
into
test
cmpb
adc
jns
xlat
cmp
mov
adc
dec
cmp
pop
jmp
mov
cwtl
push
sub
out
mov
push
mov
cmp
xchg
movsb
add
inc
xchg
jp
push
add
cmp
cmc
pop
negl
sarb
sbbb
mov
daa
xor
xor
sbb
ret
out
sub
pop
sbbb
addb
mov
xchg
fadds
and
lret
enter
add
daa
outsl
std
sarb
jae
mov
cld
cld
mov
aad
hlt
enter
and
jbe
xchg
mov
pushf
cmp
in
loop
xor
and
scas
ja
lods
push
cwtl
jbe
es
sub
mov
ljmp
xor
les
in
rorb
addr16
jbe
sub
lahf
cs
ret
or
icebp
addl
pop
cli
jp
mov
lahf
imul
mov
pop
je
cmp
cmp
pop
and
int
sub
ds
rolb
fcmovnu
inc
sub
test
or
arpl
loope
insb
orb
shrb
sub
mov
in
mov
ret
in
jne
imul
sub
ret
idivl
cmp
push
popf
ret
push
lds
cli
das
aas
jmp
leave
loopne
or
or
inc
data16
jo
movsb
and
test
in
or
mov
ss
inc
push
lds
pop
popa
aad
mov
ja
inc
cmp
popa
cmp
add
push
pop
testb
lahf
mov
sub
mov
iret
xor
icebp
pop
push
pop
push
dec
inc
sbb
je
loopne
subl
ljmp
lods
call
inc
adc
and
mov
cmpsl
mov
pop
ljmp
xorl
push
push
add
lods
sub
adc
scas
shlb
idiv
xlat
pushf
sbb
scas
push
sbb
cmc
cmpsb
sub
mov
add
bound
or
in
jae
in
adc
or
push
pop
mov
js
dec
icebp
pop
es
dec
mov
add
fcmovne
enter
push
sbb
jmp
gs
ret
out
shll
popf
into
jmp
ret
fwait
ss
insb
dec
test
popa
mov
push
jns
xchg
xor
ret
data16
call
dec
pusha
jecxz
ss
pop
addr16
xchg
int
int3
ret
mov
leave
push
nop
xor
pop
repnz
cmp
dec
pop
and
sbb
push
jno
mov
loopne
into
sarl
fidivs
shlb
add
pop
push
mov
leave
out
mov
stos
sbb
lret
rcll
adc
rolb
in
stos
mov
ret
hlt
cmp
stos
hlt
test
int
fadd
push
clc
xchg
movsl
pop
xchg
sbb
ficoms
fidivrs
in
inc
sahf
add
bound
in
loope
adc
jne,pt
in
fmull
jp
push
push
cs
mov
addb
hlt
sub
sub
xor
jp
fwait
movsl
pop
andb
cmp
sbb
scas
fimull
pop
jo
ret
or
leave
dec
lret
adc
test
push
sub
movsl
fstpt
xchg
push
out
xor
push
int
shll
pop
or
inc
cmpsb
xlat
adc
jae
push
xor
inc
loop
push
pusha
stos
fcompl
dec
cli
sub
push
das
shrb
imul
jns
xor
ja
pusha
lea
clc
ljmp
shl
sahf
stc
adc
ja
lock
push
fdivs
gs
adc
mov
adc
mov
pop
arpl
iret
or
imul
sub
push
stos
cltd
mov
adc
inc
cs
repz
pusha
popa
test
and
dec
ss
or
inc
call
sti
repz
call
into
in
sbb
xor
and
movl
xchg
push
jo
aad
pushf
cmpsl
inc
and
repnz
fcoms
mov
push
adc
out
and
popf
add
scas
shlb
enter
jecxz
pop
in
mov
lahf
and
enter
sbb
pop
or
inc
mov
cli
push
popa
scas
mov
mov
jecxz
pop
add
mov
adcb
arpl
outsb
and
ds
shll
and
sbb
add
cwtl
mov
fistl
inc
insl
xor
ss
lcall
rcrl
orl
push
cmp
fdivl
jb
fldcw
fbld
sahf
inc
cmc
pop
or
stc
mov
scas
inc
in
test
nop
or
push
add
sbb
sub
shll
ror
xchg
hlt
enter
lds
sbb
xchg
adc
fsubrl
dec
and
shrb
pushl
dec
push
cli
shlb
cld
ljmp
jno
enter
call
jmp
ja
or
xlat
mov
aaa
lret
lock
sub
stc
mov
jmp
lret
mov
out
xor
les
repnz
pop
or
pop
test
cmp
dec
dec
jmp
xchg
sub
loop
out
std
cmp
fcoms
in
xor
adcb
psubd
or
aaa
jle
xchg
jns
pop
push
insb
cld
sbb
dec
adc
push
test
enter
push
dec
sbb
repnz
ss
stos
roll
ret
adc
xchg
out
scas
aad
pop
sbb
mov
shrl
fs
adc
jae
mov
inc
cmp
cmp
push
ljmp
rolb
adc
jne
or
jae
inc
or
cmpsb
mov
xchg
mov
lds
adc
out
push
sub
scas
enter
orb
xchg
es
mov
mov
add
adc
mov
mov
movsl
sub
test
mov
pop
push
jle
js
daa
int
fisubrl
fisubl
dec
cmp
scas
fmulp
jnp
mov
imul
das
mov
add
dec
add
jmp
mov
cwtl
or
fs
push
mov
aaa
insl
dec
and
mov
sub
push
mov
pop
cmp
scas
fistpl
hlt
mov
xchg
jns
cmp
cmp
ret
rcl
cmp
call
sbb
pop
hlt
xor
pop
xchg
stos
mov
or
xor
pop
cmp
push
push
xor
scas
loopne
in
xor
hlt
cmp
pop
xor
aad
lret
mov
dec
fmull
sbb
movsl
cltd
xabort
leave
jecxz
leave
jp
outsb
jno
in
ja
inc
mov
inc
pop
scas
lea
xlat
stos
add
pop
dec
cmp
iret
in
icebp
repz
adc
cmp
jmp
cli
mov
lret
jae
inc
xor
mov
stc
addr16
pushf
sahf
rolb
dec
fildll
into
and
xchg
outsb
addr16
fbld
cmp
jl
sub
aad
mov
mov
test
fldcw
test
sti
push
jl
mov
add
mov
or
imul
es
push
test
ja
mov
mov
or
dec
push
dec
sub
adc
mov
or
jle
out
loope
inc
cmp
hlt
insb
filds
ficompl
out
dec
or
ds
lea
fidivs
mov
lods
inc
pop
dec
xor
dec
jb
cmpl
or
cmp
mov
mov
in
cld
jae
mov
mov
and
xchg
loope
cli
gs
jae
mov
xor
xchg
xchg
imul
push
push
jnp
jne
inc
sub
ds
add
sub
fbstp
fwait
mov
call
movsl
add
pop
int
cltd
jb
lahf
xor
xchg
push
repnz
push
jo
or
xchg
ja
movb
inc
mov
adc
clc
cmp
mov
cmc
je
lods
ljmp
add
nop
ss
adc
jnp
popa
cmp
and
movsl
sar
push
and
out
adc
fbstp
jmp
data16
jb
dec
fcoml
xchg
add
test
je
mov
jbe
cli
dec
cmp
xor
or
jmp
sbbl
fldt
cmp
mov
jns
cs
cli
mov
cmc
pop
mov
cmpsb
mov
iret
jecxz
mov
fwait
out
mov
in
xchg
jg
and
popf
jb
cmc
adc
jnp
jns
insl
aaa
and
mov
sarl
jl
push
popa
fildll
cmc
or
shll
cmpsl
das
decl
xlat
fmulp
in
sub
dec
icebp
aam
xchg
mov
pop
in
iret
inc
or
mov
sbb
pop
shlb
xor
xor
fists
xchg
lret
cld
mov
sbb
pop
inc
inc
mov
mov
out
rcrb
loopne
in
movsb
test
mov
call
inc
adc
test
ja
test
out
or
ja
rclb
loopne
jae
inc
inc
add
xchg
sbbl
pop
push
xor
ja
pop
out
push
mov
push
push
filds
in
insl
pop
pop
es
push
cmp
cli
adc
jg
mov
fidivl
jns
adc
and
adc
pop
or
fisubl
sarl
push
inc
jo
cmp
divl
jmp
adc
out
inc
lods
xchg
dec
inc
sbb
cmpsl
rcl
xor
stc
xchg
cmc
mov
popa
test
mov
jp
adc
mov
dec
push
cli
lock
les
aas
out
jle
mov
xchg
aaa
outsb
shlb
fwait
mov
cltd
mov
test
dec
outsb
jnp
inc
call
fcmovnb
jno
lcall
mov
fwait
mov
and
stos
lret
lods
cld
movw
mov
xor
push
pop
xor
inc
pop
arpl
cwtl
mov
and
inc
ja
mov
cmp
mov
enter
add
xchg
mov
xor
lds
daa
sbb
push
fnstsw
inc
fwait
popf
pusha
roll
and
int
push
out
xchg
adc
imul
add
das
mov
cmp
insb
or
outsb
jae
pop
add
push
decl
or
dec
mov
stc
enter
orb
cli
dec
mov
ljmp
push
repz
sbb
pop
call
mov
fsub
and
icebp
pop
or
mov
shlb
out
push
sub
lock
sbb
repnz
mov
rorl
xchg
pop
jmp
insl
lods
cmpsl
or
mov
jg
out
and
adc
add
fnstenv
inc
pop
lock
cltd
mov
xor
pusha
cmp
xchg
jmp
push
shrl
in
cmpl
jle
pop
xchg
xchg
fcomp
mov
lock
in
lds
test
sti
popa
jp
loope
jmp
iret
in
lcall
adc
inc
hlt
aam
orb
adc
lret
enter
idivb
inc
sbb
xchg
iret
sub
xchg
pop
sub
out
adc
dec
outsb
jp
loope
lahf
xchg
cli
inc
push
cmp
lret
add
xor
or
push
mov
jecxz
mov
pop
mov
test
add
xchg
jb
cmc
addr16
pop
mov
in
loope
or
push
shr
sbb
mov
xchg
pop
popf
je
in
pop
push
ret
xor
sub
aad
inc
mov
jle
scas
jg
lea
scas
shrb
faddl
bound
xor
push
sub
dec
sub
pop
fs
jmp
mov
add
jno
xchg
push
test
mov
mov
dec
and
push
fisubrs
sbb
xor
pop
dec
or
sub
fwait
loop
cmp
add
mov
xor
mov
subb
outsl
push
ds
mov
test
xchg
test
dec
pop
aam
jo
out
cmp
das
sbb
jecxz
je
cmp
xor
and
hlt
mov
inc
jbe
dec
fldenv
imul
stc
cmc
lods
pusha
pop
sti
fistl
xchg
mov
int
aas
dec
xchg
hlt
sbb
xor
add
inc
mov
pop
xchg
mov
scas
stos
push
scas
push
or
xor
and
pushl
jae
clc
std
push
lds
loope
add
jne
xchg
push
call
orl
inc
inc
jmp
dec
pusha
xchg
lea
mov
popa
mov
add
add
dec
inc
jecxz
push
aam
insb
aas
bound
cmp
dec
in
mov
push
xchg
dec
add
and
cmp
xlat
notb
mov
sti
dec
pop
pop
pop
popa
jbe
outsb
in
jecxz
add
cmc
in
pop
jecxz
shl
int
popf
push
ljmp
jb
sbb
repnz
push
out
lods
mov
aaa
mov
mov
sahf
dec
cmp
aas
cmp
xchg
sysenter
xchg
pop
mov
nop
dec
fimull
sbb
lahf
mov
push
fbld
pop
jle
movsl
fbld
xchg
pop
mov
xor
adc
sbb
sbb
sbb
int
lcall
icebp
pop
pop
xor
adc
fimuls
add
mov
aad
sub
jae
mov
cmpsb
xchg
mov
dec
mov
push
mov
add
iret
sbb
arpl
movsl
cli
dec
aas
stos
push
xchg
xchg
cmp
jbe
pusha
mov
xchg
mov
mov
mov
jnp
dec
arpl
xchg
inc
mov
pop
inc
xchg
cmp
arpl
dec
xchg
adc
ja
lret
flds
lea
nop
xchg
orb
mov
or
xor
imul
scas
adc
mov
insl
lods
ja
pop
cmpsb
mov
pop
pop
or
cmp
std
mov
adc
in
leave
cwtl
xchg
adc
xchg
shl
loopne
ja
testl
scas
and
adc
push
cld
mov
push
dec
popf
outsl
push
mov
cmpsb
in
stos
xor
fdivrs
sbb
dec
pop
iret
add
mov
sbb
push
xor
xchg
xchg
or
cmp
sbb
fisubrl
jnp
fisttpll
mov
jp
adc
and
or
adc
jne
into
mov
sub
lret
fcoml
test
imul
push
sub
sbb
and
lds
add
mov
cmpsl
pop
sahf
shr
sbb
xchg
ds
xchg
filds
mov
mov
mov
and
sti
jns
rcll
fcomps
fiaddl
roll
pop
lret
adc
or
subb
jnp
xor
sti
test
leave
xor
iret
cli
cmp
push
inc
scas
push
inc
out
imul
pop
xorb
stos
mov
mov
xchg
in
fstpl
add
mov
dec
xor
hlt
dec
iretw
popa
scas
out
das
push
ljmp
xor
cwtl
pop
and
cmp
gs
mov
fdiv
shlb
inc
mov
fdivrs
pop
dec
ljmp
pop
and
xor
or
roll
in
xlat
xchg
test
je
sbb
mov
xor
pushf
mov
sbb
insl
rcll
in
dec
pop
cli
mov
jle
push
cli
mov
loop
jecxz
mov
sub
rorl
adc
cs
pop
sub
sarl
xor
and
push
add
into
dec
add
mov
mov
insl
test
scas
xor
and
test
or
ret
cli
jae
mov
adc
mov
jmp
popl
test
out
mov
and
jl
into
mov
mov
ja
ss
inc
lret
push
and
mov
pop
stc
adc
dec
or
jno
cwtl
sbb
xchg
mov
push
in
fwait
xor
fiadds
push
pop
outsb
aad
xor
rcrw
and
cmp
dec
and
hlt
sbb
cmp
addb
repz
sbb
dec
cltd
fldl
xchg
mov
add
pop
gs
push
jmp
pop
sbb
fsubs
aad
orb
pop
push
cli
inc
mov
inc
xchg
jp
mov
xchg
dec
push
mov
add
xor
cld
adc
push
je
pop
lahf
adc
sbb
jo
cmc
jle
lods
lret
pop
cmc
push
bound
repnz
mov
shr
jmp
sub
mov
sbb
movsb
dec
fcoms
pop
in
jno
in
mov
pushf
jmp
jmp
popf
scas
rol
mov
out
je
xlat
inc
repz
push
mov
sub
xchg
cld
xor
test
insb
inc
dec
call
add
xchg
xchg
ret
fsts
sbb
sub
in
aad
es
fisubrs
sub
push
ja
or
dec
push
imul
sub
sahf
fisubl
pop
cmp
xchg
push
cld
dec
outsl
jecxz
mull
fisubrl
dec
dec
inc
pushf
cmpb
jmp
push
imull
pop
inc
mov
and
int
xor
lcall
addb
fisubrl
xchg
sbb
and
xor
movsl
cmp
in
movsb
adcl
shrb
mov
data16
mov
mov
sbb
jle
push
lods
mov
sub
mov
dec
or
imull
dec
inc
sahf
repz
das
test
or
cltd
cmp
and
lcall
mov
inc
adc
or
dec
out
mov
mov
ret
lods
dec
adc
mov
cmp
je
mov
and
dec
ja
inc
adc
mov
pop
or
movsl
and
push
addb
mov
mov
repz
jo
xor
sub
dec
fistl
sub
lcall
mov
call
push
cmp
dec
mov
cltd
pushf
jns
dec
out
out
xchg
or
in
add
nop
fcomps
jo
xor
pop
sbb
xchg
mov
arpl
jg
das
ret
sub
mov
mov
sbb
rolb
lods
out
hlt
iret
andl
sbb
in
shll
pop
adc
mov
cmpb
test
and
sbb
cli
sbb
cltd
add
addr16
les
add
jnp
scas
enter
lcall
mov
subb
ljmp
add
xchg
jmp
mov
push
mov
aam
fwait
std
mov
in
jmp
xor
push
or
add
ficomps
jecxz
subl
lea
or
adc
mov
jg
rcl
push
rorb
sahf
fcmovne
pop
ret
xchg
das
addr16
mov
in
aam
mov
cs
push
loop
mov
push
out
or
sti
cmp
stos
addr16
mov
cmpsl
bound
icebp
mov
dec
lock
fcmovnb
adcb
mov
clc
lcall
lret
cmpsb
imul
add
inc
sbb
jl
std
cmp
ljmp
out
push
hlt
scas
adc
fsubs
aam
stos
push
ljmp
sti
gs
xcrypt-ctr
cmpsl
lcall
sub
push
fisttpll
pushf
and
mov
xchg
inc
sahf
cld
pusha
mov
add
xchg
sbb
and
sbb
testb
incb
stos
lea
xchg
pop
test
not
outsb
rcrl
or
cmpsb
out
jge
pop
push
push
loop
adc
xchg
cmp
test
sahf
mulb
mov
sub
pop
pusha
sbb
repz
jne
divl
push
sahf
fsubrs
dec
or
xchg
test
popa
adc
cmpsl
sbb
mov
cmp
int
push
cli
cmp
out
scas
push
lahf
mov
dec
hlt
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
js
sub
jge
or
jp
imul
inc
movsl
mov
sbb
sbb
aaa
jle
push
mov
hlt
inc
inc
jl
enter
inc
addr16
mov
mov
dec
cmp
inc
cld
sbb
xchg
ljmp
fs
insl
pop
int
ds
shlb
sahf
adc
lea
popf
mov
mov
leave
call
test
and
mov
mov
dec
fwait
and
jecxz
xchg
sarl
lret
nop
nop
mov
mov
insl
mov
fwait
sbb
inc
add
xchg
jecxz
imul
inc
mov
dec
pop
pop
add
jmp
insb
sub
push
xor
push
add
pop
push
out
scas
rorl
mov
sbb
adc
or
stc
addr16
dec
cmp
pop
adc
jg
jo
cwtl
adc
test
popf
pop
jmp
leave
xchg
ret
rol
mov
aad
adc
scas
mov
adc
in
fwait
dec
mov
inc
jo
add
inc
rcr
sbb
insl
xor
movsb
and
lahf
jl
ds
adc
pop
out
jle
dec
inc
add
pop
bound
jle
mov
call
popf
inc
inc
or
inc
insl
fisubs
stos
xchg
mov
mov
xchg
ss
push
insl
pop
mov
stc
rol
mov
pop
and
mov
sbb
mov
movsb
push
movsb
jne
mov
push
shl
push
ljmp
lock
loope
mov
xor
or
icebp
jl
fs
xor
xchg
icebp
cwtl
insb
loope
out
xchg
je
or
lahf
hlt
mov
dec
mov
push
test
stos
dec
das
push
push
and
imul
repz
add
add
addb
mov
push
sub
adc
in
rol
lret
adc
enter
in
mov
xchg
push
pop
icebp
push
xchg
xchg
jg
call
xchg
fists
mov
fcomp
mov
mov
cltd
sti
mov
pop
dec
sbb
jae
push
orl
xor
sbb
cmp
inc
mov
fisttps
add
jg
xor
arpl
leave
addr16
popa
mov
in
cs
nop
push
jecxz
or
mov
sbbb
and
xchg
es
and
mov
jg
mov
loopne
je
cmp
fsts
cltd
addl
sub
mov
jmp
cltd
iret
cmpsb
popf
mov
test
repz
xlat
sbb
xchg
push
adc
aaa
jle
and
dec
bound
mov
lcall
or
pop
shrb
inc
imul
push
jmp
stos
push
or
jge
xor
pop
jmp
xchg
int3
push
sahf
das
mov
sbb
mov
xor
fildl
sbb
cmp
das
push
popf
sub
stos
lea
inc
test
mov
dec
cmp
pop
ret
adc
ret
lret
repnz
lcall
pop
lds
jmp
cs
mov
mov
mov
dec
fists
das
out
mov
inc
popa
push
adc
lret
repz
movl
jnp
mov
mov
push
inc
arpl
fcmovne
or
push
fnstenv
xchg
mov
popf
jle
xchg
repnz
sbb
fdivl
sub
leave
mov
push
jne
in
adc
adc
ficompl
inc
mov
xchg
adc
sub
inc
cmpsb
jb
jl
xorl
cld
imul
mov
mov
mov
jnp
loop
clc
and
sbb
imul
aam
and
pop
inc
pop
and
push
dec
cmpsb
mov
orl
inc
ror
pop
jnp
div
vmovsd
fisttps
into
lods
pop
test
sbb
lret
out
pop
addr16
push
inc
sbb
mov
pop
add
bound
pop
mov
fsub
pop
popf
dec
push
fcoml
push
popa
rcr
push
inc
mov
dec
inc
xchg
cmp
add
into
cmp
mov
mov
and
es
stc
int
popf
imul
test
cmp
sti
add
sbb
xchg
add
mov
sti
xchg
std
cmpsb
xchg
push
fsubrs
cmp
cmp
leave
shr
lock
jle
outsb
or
call
add
mov
mov
fs
shrb
push
addr16
mov
dec
sub
into
sbb
mov
sbb
mov
aaa
inc
cli
push
mov
mov
mov
pop
fcmovnbe
adc
mov
or
lds
js
sbb
out
stos
fucom
mov
pop
and
push
mov
sets
push
xchg
jge
inc
cwtl
cwtl
xchg
mov
push
pop
cmp
data16
cmp
push
mov
lea
xor
aas
rcll
mov
addr16
xchg
add
adc
fcmovnb
xor
mov
rcrb
push
sti
sahf
cltd
pusha
xor
adcl
fs
lcall
sub
je
jecxz
out
out
xor
lahf
mov
sbb
mov
mov
mov
in
inc
jl
cmp
sahf
rdseed
add
prefetcht2
cs
hlt
push
jg
or
dec
addr16
push
xor
pop
scas
inc
daa
in
enter
dec
cmp
mov
mov
xor
loope
and
or
out
xor
das
aad
jmp
mov
popa
daa
xchg
add
or
aam
xor
sbb
mov
test
test
jo
push
bound
test
mov
les
mov
cwtl
inc
scas
in
add
popa
cmpsl
repnz
xchg
lret
mov
jecxz
fcompl
leave
notb
ret
cmp
mov
rorl
inc
cmp
mov
xor
aas
mov
repnz
aam
mov
arpl
dec
fdivrl
pop
stc
adc
jnp
in
jecxz
stos
jb
popa
cmpsb
cmp
push
inc
fstpt
inc
push
or
in
xchg
push
cmpsl
xchg
cli
outsb
orl
sbbl
mov
push
aam
add
cld
pop
ljmp
jge
hlt
stc
mov
sbb
je
mov
fwait
outsl
pusha
lret
in
pop
arpl
subb
sub
leave
inc
dec
cmpsb
iret
jge
xchg
sti
dec
xchg
mul
inc
and
fiaddl
mov
jp
pop
sbb
push
cmp
lods
or
xchg
mov
inc
jno
andl
dec
ss
sbb
mov
inc
push
fisttpl
cltd
sbb
out
jmp
xchg
mov
lea
sti
fsts
xchg
pop
mov
pop
ret
lcall
mov
inc
addr16
mulps
pop
jo
cmc
and
mov
mov
xor
test
sbb
out
or
sub
mov
or
in
jbe
cmp
cmp
cmp
dec
jmp
pop
popa
jne
enter
imul
out
ret
xchg
insl
xchg
sub
adc
mov
call
xor
insb
adc
mov
icebp
pop
mov
pop
pop
std
mov
dec
adc
call
cmp
mov
lahf
stos
decb
lcallw
push
sub
mov
sahf
push
push
jae
mov
or
pop
adc
cmp
hlt
xchg
scas
cmpsl
mov
fdiv
cmp
das
scas
sub
incb
repz
das
push
xchg
jmp
pop
push
cmp
addb
jg
add
push
cmpsb
js
dec
pop
adc
and
xor
stc
lock
in
data16
dec
std
adc
dec
adc
out
loope
hlt
cmpsb
jp
andb
jno
jno
ja
ret
xor
mov
cmc
pop
addl
in
xchg
xchg
cld
mov
cmpsl
mov
lods
jno
pop
xlat
push
lods
call
nop
ret
out
inc
rorl
imul
inc
inc
insb
add
call
mov
test
outsl
jl
push
mov
adc
fidivrl
repz
insb
mov
cli
pop
sbb
xchg
dec
mov
into
ss
dec
std
push
leave
push
mov
adc
lahf
jmp
mov
fmuls
test
in
mov
inc
push
stos
or
rclb
sub
mov
lods
and
mov
insb
push
loope
out
cmp
popf
lea
mov
fs
test
adc
adc
adcl
addl
rcll
arpl
js
int
mov
push
mov
stc
mov
xor
mov
add
shrb
pop
sub
fst
inc
xchg
xchg
cmpsl
pop
push
mov
or
mov
push
lcall
inc
notl
mov
jecxz
xchg
test
lret
dec
hlt
add
leave
stc
cmp
jmp
inc
push
pop
das
rcpps
jno
mov
loopne
pop
dec
jne
out
sahf
mov
movsl
insb
push
push
imul
jp
loop
add
ds
bound
xchg
mov
es
jl
pop
rorl
cmc
fwait
mov
add
jle
pop
dec
inc
scas
cld
sub
and
mov
xchg
loopne
jne
and
popa
adc
std
nop
sbb
lea
push
lret
call
in
xor
cmpsb
pop
mov
jbe
fs
sub
jle
pop
pusha
fimuls
dec
pop
jmp
ss
add
sbbl
adc
mov
xchg
fwait
movsb
inc
insb
les
aaa
add
sbb
ficompl
ss
scas
popf
movsl
jb
int3
mov
enter
cmp
dec
sub
hlt
inc
or
jae
sti
test
mov
popa
push
lods
pop
jecxz
out
lea
pop
out
sbb
iret
push
les
sbb
cmp
or
xchg
rcrl
gs
jge
in
push
xor
scas
push
arpl
addr16
adc
push
imul
inc
in
push
repnz
fcmovnb
xchg
xchg
mov
push
fmull
lods
or
sub
sbb
fwait
jnp
cmp
ja
mov
sub
cmpsb
in
nop
cmp
xchg
and
mov
int
call
clc
fcoml
sarb
stc
mov
jmp
mov
pop
or
jp
lock
mov
xchg
shlb
outsl
int3
inc
fs
les
fcoms
ds
int3
mov
cwtl
stos
push
cmpsl
add
mov
ss
aad
add
pusha
jno
je
xor
test
jnp
mov
test
ret
mov
dec
cli
cwtl
or
fs
dec
dec
inc
jge
xchg
out
dec
pushf
lahf
cld
sbb
hlt
out
or
insb
icebp
test
ds
pop
enter
rorb
push
xlat
xchg
rolb
das
or
mov
out
add
jle
xorl
mov
rorl
add
jbe
ret
sub
cmp
jp
andl
popf
loopne
mov
jecxz
mov
xchg
pop
je
movaps
jns
push
in
mov
cli
leave
mov
mov
shr
jae
out
dec
mov
push
pop
pushl
fdivr
pop
pop
mov
sbb
shlb
mov
or
insl
inc
xchg
repnz
lret
addb
xor
sbb
adc
cmpsb
out
js
inc
push
in
jmp
jge
in
das
xchg
jmp
test
pushf
xchg
popf
ret
mov
xchg
cmp
push
mov
cld
mov
jb
and
dec
lock
xlat
xchg
adc
gs
push
or
sbbb
cltd
cli
inc
roll
pop
and
pop
mov
push
clc
xchg
mov
mov
xchg
in
cmp
pop
scas
xchg
mov
bnd
xor
pop
ljmp
xor
jb
push
mov
push
sub
sub
mov
mov
pop
push
fldlg2
mull
out
fcomps
mov
sub
inc
cmp
xchg
mov
xchg
inc
sahf
push
inc
cmpsb
fiaddl
cmovl
push
outsl
push
xor
insl
sbb
and
xchg
aad
ficompl
je
mov
pop
push
mov
and
outsb
sahf
fs
sbb
inc
xchg
cmc
cmc
inc
or
inc
insl
movsb
jne
call
xor
insb
stos
and
insl
sbb
lahf
cmp
mov
jo
sahf
push
lods
ret
cwtl
dec
jbe
fst
xchg
cmpl
les
push
cld
test
jbe
addr16
cli
mov
shlb
in
xor
push
jb
dec
fistpl
pop
adc
lods
gs
stos
jb
mov
movsb
adc
out
test
fdivl
mov
mov
mulb
jle
xor
es
lea
xor
push
jp
lock
sbb
shrl
sbb
dec
push
push
jno
push
movsl
push
pop
mov
mov
adc
push
lcall
jle
mov
cmp
and
shll
imul
ljmp
push
les
jb
xor
cmp
mov
aaa
rol
mov
xchg
aas
jp
push
pop
mov
xchg
mov
out
sar
daa
lret
push
int
imul
cmp
testl
push
xchg
mov
hlt
xor
repnz
loope
cmp
les
sub
das
ret
dec
lcall
rcrl
dec
lods
mov
cli
pop
inc
fcmovnbe
inc
adc
lea
inc
push
jecxz
mov
adc
lock
out
sub
and
lret
sub
int3
push
in
jmp
cltd
pushf
ret
rcrl
inc
adc
and
mov
push
aaa
xor
push
cli
ror
pop
loope
das
iret
xchg
jl
mov
adc
iret
mov
cmp
adc
pop
and
fadd
test
add
mov
aas
imul
mov
leave
sbb
sbb
mov
sbb
leave
and
aad
fwait
mov
shlb
rolb
dec
add
pslld
mov
notl
sarl
movsl
mov
push
mov
inc
lret
sbb
inc
test
mov
sbb
in
or
cmpl
cmpsl
arpl
clc
sub
pushf
cmp
scas
mov
push
mov
jbe
leave
stc
inc
jb
inc
xchg
jne
lahf
inc
popf
mov
add
push
sub
sahf
jno
gs
in
ret
rcll
out
mov
outsl
rclb
mov
jo
into
inc
mov
mov
sti
pop
sub
push
mov
mov
push
lods
and
cmp
jg
ljmp
std
adc
dec
out
ficoms
fdiv
jae
fnsave
dec
data16
roll
mov
adc
or
lock
lahf
jae
sbb
inc
mov
pop
sub
das
fisubl
jbe
int3
aad
icebp
pop
sti
mov
imul
test
sub
in
ret
sub
xchg
aad
sbbb
loop
lcall
lods
mov
jo
cmc
xchg
inc
push
mov
xchg
or
icebp
jl
andl
arpl
cwtl
cld
leave
cs
mov
clc
cli
test
inc
pop
es
sti
pusha
xchg
jbe
enter
out
fcomip
mov
pushf
movsl
sbb
rcrl
insb
int3
push
pop
cld
xor
jbe
cmp
stos
sbb
sti
into
scas
scas
shlb
pop
push
and
lock
lods
or
cs
int3
add
cmp
jp
mov
add
sub
lahf
sbb
cmc
jmp
push
xchg
aaa
adc
xor
inc
insb
daa
push
dec
addr16
call
lahf
xchg
leave
lds
or
fnstsw
mov
into
sbb
mov
mov
jg
push
std
fstpt
fidivrl
popf
mov
pop
xchg
fidivl
mov
or
mov
add
and
dec
pop
lea
jp
ret
nop
inc
jbe
mov
inc
jecxz
ret
pop
push
in
push
xlat
adc
mov
mov
lret
sbb
jecxz
insb
jae
fmul
subb
cmpsl
xor
inc
pop
sahf
sbb
cmp
sbb
mov
inc
pushf
arpl
lock
cmp
push
jns
add
scas
outsl
xchg
mov
in
mov
pop
int3
mov
push
sbb
stc
adc
cmpsl
mov
int3
adc
stos
mov
mov
push
inc
mov
rorl
or
add
cmpsb
lcall
dec
nop
shlb
jae
mov
aaa
subl
ret
add
in
dec
lea
inc
fisubrs
mov
imul
stc
sub
insl
and
xor
or
pushf
es
aad
dec
push
dec
clc
stos
mov
aad
out
addr16
int3
ljmp
rolb
adcb
cmc
or
mulb
outsb
icebp
in
sti
push
push
ss
add
xchg
jo
pusha
xorb
decb
je
and
arpl
xchg
sub
add
push
pop
dec
jg
icebp
rorb
pop
push
out
mov
adc
dec
decb
add
xchg
divb
sub
movsl
lea
push
ffree
imul
or
add
sub
testb
insb
ss
andl
pop
and
jle
jmp
bound
fstps
cmpsb
into
pushl
ljmp
sub
xchg
adc
mov
shr
ficoms
sub
scas
mov
or
adc
sub
cmp
xor
adc
add
loopne
mov
xor
jg
sbb
fsubs
js
sbb
push
sub
in
roll
adc
mov
push
bound
jp
mov
xor
sti
add
lods
inc
repnz
mov
jae
shll
and
mov
cmp
rep
lret
stos
das
scas
mov
ljmp
sub
pop
outsl
not
xor
ja
mov
int
repz
lcall
jmp
sbb
mov
in
jne
ja
adc
mov
mov
sub
lock
pop
jb
jp
sbb
cwtl
adc
jb
mov
shrl
sub
push
popa
sub
out
lock
insl
imul
int
xchg
add
cltd
test
lahf
lahf
inc
stos
add
shlb
or
in
mov
mov
pop
jmp
loope
test
cmp
jge
test
inc
push
stc
inc
inc
and
imul
rol
inc
xor
xchg
sbb
mov
jnp
inc
ljmp
push
gs
rol
or
and
je
into
inc
scas
push
inc
cs
dec
or
jno
lods
push
add
inc
fsub
sub
or
out
ret
pop
xchg
mulb
in
sub
fsubp
into
or
mov
stos
pusha
fidivrs
push
xor
cmp
cmpsb
sbb
sbb
jb
fistps
inc
mov
fnsave
fs
add
add
ret
sbb
dec
pop
cmp
push
es
push
mov
dec
mov
call
outsl
in
push
sub
sbb
jl
dec
mov
test
sbb
inc
int3
gs
cmpsb
sbb
xor
enter
test
sbb
mov
lds
and
stc
mov
cwtl
mov
fidivs
jae
mov
scas
and
mov
and
push
ljmp
push
xor
jno,pn
dec
shr
and
ja
mov
xchg
cmp
das
jb
cmpsl
push
icebp
sbb
push
fdivl
sub
xor
and
repnz
das
mov
mov
jmp
cmove
dec
push
pop
add
mov
xor
jl
pop
fldcw
test
mov
or
enter
mov
jl
div
jno
xchg
dec
sbb
aaa
into
xor
jne
adc
and
pushf
or
adc
popf
gs
cmpsl
int3
sbb
pop
jbe
repz
sbb
or
sti
orl
or
sti
jnp
cli
jne
dec
pop
adc
adc
or
daa
mov
jno
pushf
add
loopne
xchg
jge
test
mov
pop
fisubrs
dec
sbb
ror
push
xchg
cmpsb
pop
rcll
or
sbb
fsubrl
mov
fnstsw
test
push
stc
aam
mov
push
cmp
mov
out
cmc
scas
gs
or
es
les
and
xor
xor
lahf
movaps
cmp
je
stos
add
pop
repnz
jge
scas
rcll
pop
popa
jns
mov
xlat
add
mov
shrb
push
es
push
lods
pop
or
and
outsl
insl
xlat
push
push
xor
neg
pop
pop
shll
adc
lods
jp
dec
int
mov
inc
or
add
lods
mov
jmp
jp
outsw
outsl
or
cmp
lock
xchg
push
rorl
push
fwait
stc
jmp
jmp
test
sbb
js
mov
mov
aam
fcompl
imul
push
aas
push
jecxz
push
inc
push
pop
jle
or
fwait
jle
fisubl
pop
mov
jg
jmp
sbb
dec
pop
and
sbb
mov
stos
lahf
pop
or
add
aam
dec
push
popa
call
jmp
mov
negb
loopne
mov
in
push
das
mov
jbe
push
xchg
shrb
jae
add
repz
stos
dec
adcl
jg
mov
or
sbb
insb
fcomps
lock
xchg
stc
pop
pop
test
xchg
adc
call
adc
mov
sub
push
stc
cmc
sbb
loop
mov
or
adcl
mov
mov
lahf
fstl
rcll
repnz
cmpsl
xchg
test
cli
loop
and
pop
scas
dec
inc
leave
sti
cs
inc
push
stos
inc
mov
mov
inc
adc
roll
cmovg
lahf
sub
js
and
sbb
shrb
popa
testl
inc
adc
push
iret
fnstenv
stos
aaa
dec
inc
imul
dec
jo
pop
mov
fmuls
imulb
dec
cmc
mov
cli
xor
sub
lds
cli
pop
ret
rcl
sub
push
adc
in
js
inc
int3
fwait
dec
out
notw
xchg
push
icebp
jns
fidivs
xchg
test
fstpt
mov
xor
push
dec
cmp
jbe
push
or
fcompl
clc
jl
mov
shlb
xor
mov
add
lret
aad
cmp
gs
clc
shlb
add
lds
enter
xor
xlat
rcrb
lahf
orb
ljmp
mov
mov
pop
pop
pushf
dec
in
cmp
adc
push
ja
xchg
shll
jl
xchg
cmp
leave
fldln2
dec
adcl
add
hlt
sub
push
in
lods
in
loop
iret
testl
push
sub
outsb
lea
dec
pop
shlb
inc
ljmp
rclb
cmp
jge
sub
pop
pushf
adc
icebp
movsl
inc
mov
jge
psllw
mov
pop
mov
dec
or
ja
push
mov
sahf
xor
and
xchg
jp
xor
xor
mov
daa
jae
jecxz
adc
ret
and
movsl
inc
cmp
bound
clc
push
fsts
and
mov
dec
std
push
pop
or
rorl
mov
ljmp
and
mov
jg
fisubrl
int
lcall
mov
jecxz
imul
outsb
xorl
dec
loopne
int
insb
adc
xchg
push
sahf
and
jae
inc
hlt
inc
ret
outsb
or
and
fildll
adc
jne
sub
cmp
fnsave
aas
mov
ja
and
loope
push
push
xchg
dec
cmc
adc
pusha
mov
push
test
dec
das
sbbl
sub
sbb
mov
and
xor
idivb
mov
jbe
sbb
cmpsb
clc
inc
dec
pop
repnz
ret
sub
fwait
lahf
nop
jns
call
movsl
mov
jmp
jae
xor
add
aas
cmp
mov
inc
xor
and
mov
pop
jno
jecxz
stc
jecxz
aad
pushf
repz
or
or
addb
sbb
lret
inc
or
xlat
scas
mov
jnp
mov
push
xlat
xchg
and
out
pop
mov
out
rorl
loop
leave
push
mov
sbb
sbbb
mov
sarb
outsb
movb
test
dec
loopne
repz
dec
aaa
pop
pop
imul
outsl
mov
and
push
aad
push
ja
push
imul
xor
sbb
int3
push
jp
jecxz
movsb
cli
das
dec
mov
mov
mov
cmpsb
sub
cltd
pop
lea
mov
pusha
popa
repnz
mov
int3
dec
sub
pop
leave
dec
aas
push
fstpt
xor
insb
sbb
jl
jns
lock
scas
mov
pop
test
mov
mov
shll
mov
cwtl
jo
xor
daa
xor
or
test
add
shll
mov
dec
mov
push
lret
cmp
pop
push
inc
and
sbb
pop
mulb
pop
sub
cmp
shrl
mov
incl
adc
cmp
xchg
popl
test
loope
or
adc
insb
or
and
cmp
test
cmpsl
shll
inc
mov
test
push
pusha
mov
insb
jg
sbb
inc
mov
xor
cmpb
sbb
inc
or
dec
add
dec
cmp
add
cltd
pmaxub
jge
mov
mov
dec
clc
and
fdiv
imulb
das
mov
scas
xchg
adc
adc
addr16
push
sahf
sbb
scas
pop
cmp
sbb
jmp
es
xor
adc
les
in
add
or
hlt
or
out
stos
adc
aad
mov
aad
es
aas
inc
cmp
mov
loop
test
xor
mov
loope
movsb
inc
scas
negb
and
or
xchg
fucomp
pushf
mov
arpl
and
loope
and
jl
insb
idiv
xor
xchg
hlt
pop
test
mov
mov
push
outsb
dec
loope
mov
testl
aas
cmc
push
bound
lea
xor
iret
mov
aad
imul
or
movsb
aaa
insb
and
lret
mov
add
jnp
loop
sbb
data16
cmp
or
sbb
lds
jno
jo
mov
fwait
sbb
mov
xchg
and
xchg
jo
and
insb
popf
mov
add
fldl
xchg
cmp
test
or
lock
pop
mov
adc
imul
test
aam
dec
scas
fmul
pusha
sahf
cwtl
and
ljmp
cmp
push
pusha
inc
push
push
sbbl
sbb
dec
or
cltd
xchg
xchg
dec
cmc
push
add
jge
cwtl
rclb
xchg
cmp
cmp
mov
lret
cwtl
rcrb
inc
lret
sahf
pop
cmp
jmp
es
sub
test
test
out
scas
ret
roll
les
imul
loopne
adc
push
xor
xchg
push
xchg
sub
xchg
mov
hlt
mov
adc
cli
and
ss
in
mov
mov
ja
pop
outsl
mov
pop
popl
jae
push
out
je
and
inc
sarl
inc
outsb
pop
or
fwait
jnp
cwtl
rcrb
rorl
mov
cmp
repnz
stc
sub
and
rorb
add
pop
fidivl
cmp
pop
inc
add
push
jge
stos
inc
push
fcos
jle
fidivrl
mov
cmpsb
movq
push
popf
mov
aas
aas
shrl
jle
shlw
xchg
sahf
cwtl
push
filds
sti
mov
fldl
inc
cmp
xchg
cmc
adc
push
push
mov
mov
shrl
pop
in
or
ret
ja
or
loop
dec
rorl
dec
push
fldl2e
loope
into
sbb
cmp
lret
mov
addr16
jg
or
xchg
ficoml
mov
data16
adc
pop
jb
mov
sahf
xchg
xchg
sbb
rep
das
add
jbe
fdivrl
xchg
dec
inc
ret
bnd
and
dec
xlat
sbb
loope
sbbl
fwait
mov
jno
cmc
pushf
loopne
std
lock
add
jb
push
cmc
scas
mov
roll
cmp
dec
ds
cmpsl
xchg
mov
xchg
rcl
pop
enter
push
xchg
adc
xchg
mov
shll
out
lock
dec
add
inc
or
pop
inc
pushf
cmp
jmp
stc
pushf
mov
popf
scas
jne
fbld
mov
outsb
movsl
jg
push
mov
mov
adc
xchg
mov
movsb
push
es
int
sub
cs
lock
cltd
jge
rcrl
push
lea
sbb
ss
in
xchg
das
xor
jne
cmpb
sbb
push
test
cmp
push
push
rorl
inc
clc
sub
xchg
sub
xchg
sbb
mov
sahf
jbe
xchg
mov
xchg
cmp
adcb
repz
int
sub
les
inc
sahf
jmp
lods
mov
sub
inc
test
stc
mov
jl
pop
xor
jge
lea
cmp
push
sub
jle
pop
mov
sub
or
je
rol
scas
mov
or
jno
out
inc
sbb
loopne
repz
pop
sub
push
jne
mov
mov
xor
data16
add
idivl
lods
fildll
cli
and
in
pusha
lret
mov
jno
popf
pop
cmp
scas
and
stos
inc
mov
into
lock
or
cmp
notl
push
hlt
adc
mov
cwtl
data16
das
mov
out
pop
mov
fsubl
imul
xchg
stos
xor
mov
test
arpl
outsl
cwtl
xlat
gs
fmull
outsb
push
test
incb
mov
fstpl
mov
pop
mov
xor
ficoms
mov
ja
mov
lret
xchg
xchg
imul
sub
loop
sahf
ljmp
or
test
fwait
ljmp
es
clc
push
mov
mov
enter
add
push
dec
mov
xchg
and
scas
lock
loope
mov
pop
pop
xor
sbb
js
dec
js
popf
subl
add
shrb
ret
scas
xchg
mov
xor
aas
adc
dec
xor
out
adc
inc
pushf
xor
adc
aaa
xor
out
mov
adc
enter
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
xchg
loop
enter
jp
pop
jp
out
add
call
mov
push
jbe
dec
jo
outsb
in
repz
pop
push
cmp
insb
sbb
xchg
push
push
xor
inc
pushf
mov
mov
clc
dec
insl
pop
int3
sbb
imulb
ret
aam
mov
and
mov
mov
mov
jbe
popl
cld
mov
mov
sub
daa
adc
outsl
xchg
push
mov
inc
push
add
or
adc
ss
pop
lock
les
or
jg
pop
pusha
mov
xchg
adc
icebp
fisttpl
bound
push
les
insl
imul
imul
inc
xchg
mov
and
add
mov
mov
mov
sbb
mov
and
loop
cwtl
cmp
adc
push
cmp
bound
push
pop
mov
add
outsb
cmp
daa
sub
mov
in
pop
xchg
pop
push
inc
std
mov
js
outsb
mov
adc
movsl
icebp
xchg
fldcw
mov
loopne
test
rorl
popa
pop
push
lds
ror
ror
aam
add
mov
inc
mov
adc
repz
mov
mov
lcall
mov
inc
nop
in
ja
push
jmp
jns
testb
push
sub
xchg
sti
call
push
scas
scas
dec
adcl
daa
popa
push
lea
push
jns
js
sbb
leave
jecxz
lock
sbb
daa
repz
sub
sbb
fstp
mov
cmp
adc
imul
ss
rcrb
in
adc
cmp
jb
test
mov
pusha
and
mov
mov
jnp
adc
xor
pop
popa
mov
jnp
es
pop
pushf
popa
dec
ret
lods
shll
mov
cmpsl
stc
or
out
jge
inc
xchg
mov
sub
mov
jl
xchg
lcall
loope
fmull
add
repz
add
add
nop
cmp
sbb
or
jg
aaa
xor
fsubrs
lret
inc
aas
or
mov
roll
out
call
test
pushf
dec
test
mov
push
lret
movsb
inc
repnz
mov
jp
popf
or
stos
subb
pop
jo
mov
mov
adc
pop
rclb
aaa
dec
divl
sub
enter
scas
dec
dec
popa
mov
bound
push
cmp
or
test
std
push
adc
mov
xchg
ss
je
inc
push
test
sub
mov
popf
push
outsl
addr16
fsubrs
xchg
iret
iret
dec
and
insb
pop
dec
xor
cmp
jb
jnp
mov
filds
int
jnp
or
lea
ret
rcrl
notb
adc
shl
pop
cmc
roll
or
cwtl
call
xchg
xchg
xlat
fnstsw
xor
ja
cwtl
out
dec
adc
aas
xor
bound
cli
push
outsl
cmpsl
aam
int3
shlb
fldcw
imul
dec
into
inc
dec
jmp
movhps
sub
dec
adcb
sbb
dec
ret
dec
or
loope
push
imul
clc
scas
test
test
decb
mov
xor
xor
mov
lcall
ret
cmp
sub
sahf
mov
cmpsl
pop
jp
adc
shll
movsb
push
pop
rolb
push
sbb
aam
in
push
dec
dec
dec
xor
jg
ljmp
pusha
pop
mov
test
stos
sub
icebp
iret
pop
push
mov
inc
outsl
les
push
ljmp
jl
ss
cmp
aam
outsb
xchg
outsb
addb
sahf
and
or
idiv
scas
es
add
outsb
fisttps
jnp
add
lret
push
outsl
pop
cmp
cs
iret
testb
nop
ljmp
push
icebp
push
ljmp
in
mov
push
cwtl
xor
or
or
xor
mov
pop
fimull
mov
ficomps
pop
andl
mov
mov
pop
insb
inc
xchg
cmp
push
adc
outsl
test
int3
inc
inc
mov
xchg
mov
es
andl
pop
sub
mov
inc
lods
add
mov
inc
mov
jle
das
adcb
jmp
push
cs
pop
push
imul
lods
fdivrs
adc
mov
cltd
dec
or
add
jae
testb
insl
insl
mov
mov
dec
push
pop
dec
adc
inc
fwait
mov
bnd
adc
test
xchg
fdivrs
fisttpl
aad
int3
push
outsb
pusha
cli
and
scas
incl
cld
or
inc
loop
push
push
flds
les
jge
js
xlat
pop
adc
inc
jnp
out
xchg
adc
pop
adcb
lret
fidivl
cld
decb
mov
and
cmp
mov
cmp
cmp
sub
pop
mov
sub
lock
add
pop
inc
mov
mov
in
test
mov
sbb
jo
push
push
sbb
repnz
inc
and
fcoml
movsl
xor
xchg
cmp
in
scas
mov
inc
lds
pop
jns
sbb
dec
fsubp
adc
es
adc
mov
mov
pop
mov
loope
mov
jge
mov
adc
ja
mov
insl
and
mov
aad
in
xchg
call
pop
fiadds
jle
cmp
fadd
cmp
sub
adc
inc
mov
aaa
mov
dec
js
jno
lea
jb
adcl
push
xchg
lret
rolb
addr16
data16
mov
pop
mov
test
idivl
lods
movsb
or
in
in
std
mov
mov
popf
mov
sub
inc
jp
lock
cs
mov
dec
pop
mov
popa
push
lea
mov
sub
fwait
cmp
pop
jo
push
or
xor
inc
mov
aas
mov
lahf
int
jg
mov
sbb
or
repz
aas
cld
hlt
aad
dec
pop
pushf
and
sti
xchg
ss
jb
in
les
adc
jb
sbb
das
insl
pop
icebp
loope
sub
lods
dec
cld
pop
testl
fdivr
cmc
imul
mov
inc
cltd
scas
adc
idivb
jp
mov
xor
push
out
push
lret
pop
xchg
mov
insl
dec
fcompl
sbbb
pusha
mov
das
inc
add
push
insb
cld
pop
imul
shlb
sub
jno
jnp
gs
mov
xchg
cmpsl
pusha
dec
adcb
push
dec
testl
out
push
inc
lahf
insl
imul
test
mov
int
int3
leave
stos
daa
add
jecxz
divl
imul
dec
cmp
xchg
pop
lea
out
jmp
add
leave
adc
sub
xor
mov
cmpsl
xor
xor
arpl
mov
mov
cmp
clc
mov
lahf
lods
aad
movsb
testb
ljmp
arpl
repz
insl
xchg
push
mov
cltd
sub
xchg
xor
hlt
popf
cltd
frstor
mov
mov
jl
inc
dec
jbe
addr16
dec
clc
inc
lret
outsl
mov
dec
xchg
nop
xchg
insb
cwtl
mov
jp
xor
jbe
sub
xor
xchg
push
ds
pop
test
out
popa
test
js
test
pop
mov
mov
sbb
cmp
mov
mov
data16
dec
cld
xor
pop
rclb
mov
pushf
sbb
push
xor
jbe
dec
inc
xchg
or
bound
addl
jae
stos
ficomps
les
mov
in
punpckhdq
mov
stos
cli
les
xchg
cmpb
test
dec
std
stos
jle
xchg
gs
test
ret
cli
xchg
push
cmp
jbe
aad
int
mov
mov
add
mov
test
mov
cmp
pop
int
fwait
inc
push
mov
push
or
test
jge
int
cmpsl
dec
cmpsb
mov
ja
scas
or
push
sbb
rol
jg
mov
das
jecxz
pop
cmpl
push
into
xorb
imul
adc
jmp
test
sbb
sbb
and
inc
mov
mov
sahf
push
in
push
gs
xchg
icebp
mov
pop
add
xor
rclb
lock
stc
or
xchg
fistl
pop
std
sbb
lea
sub
les
jmp
xor
hlt
adc
xor
int3
adc
xlat
adc
scas
bound
ds
scas
fdivrl
inc
cmc
dec
xchg
rorl
fwait
aad
ret
lods
jnp
dec
dec
imul
scas
cs
push
and
dec
sub
inc
fldcw
loop
enter
jp
daa
mov
pop
cltd
add
ds
push
sbb
inc
fcmovne
sahf
mov
in
psrad
jo
pop
ret
xchg
adcb
subb
mov
push
movsl
ljmp
cwtl
adc
loop
cmp
test
rcll
jns
add
js
bound
in
mov
leave
arpl
mov
pop
xchg
mov
jl
and
push
hlt
push
fcoml
test
cs
into
jno
pop
into
out
sbb
dec
popf
mov
fidivrl
add
ds
sbb
inc
mov
sbb
popf
fsubrl
mov
add
inc
loopne
cmp
out
icebp
ret
fsubr
mov
sbb
xor
xchg
mov
je
ljmp
lahf
outsb
mov
dec
rcll
out
lret
inc
mov
xlat
outsl
and
mov
data16
nop
fst
pusha
loopne
mov
scas
mov
cmp
adc
dec
mov
push
add
xor
mov
xor
sub
scas
pop
mov
sub
pop
lret
pusha
lret
das
cmpsl
in
cmp
lret
int3
and
sti
cmp
mov
sbb
sbb
mov
sub
mov
jg
loope
and
sahf
jae
sub
push
mov
add
inc
jl
sub
push
in
data16
popa
add
push
dec
out
adc
push
int
test
pop
in
lcall
xchg
and
and
mov
sbb
dec
mov
gs
cmpb
xchg
popa
mov
or
rcll
sbb
push
push
pop
aas
xchg
adc
xchg
rcrb
loop
jno
pop
dec
test
push
inc
pop
and
dec
jne
hlt
jg
sbb
movsb
and
mov
mov
jecxz
jno
in
add
xchg
jl
push
push
imul
adc
mov
add
daa
fsubrs
push
lcall
push
xorb
call
mov
cld
cmc
lock
out
lods
lahf
repnz
insb
fbstp
lret
adc
cmp
sub
jnp
cmp
add
shlb
iret
push
cmp
or
cmp
dec
mov
sti
inc
cwtl
cmpb
cwtl
dec
xchg
hlt
push
notl
dec
mov
push
shll
pop
dec
dec
push
adc
stc
mov
orb
push
jae
jmp
test
pushf
push
outsb
in
mov
lahf
pop
rorb
cmp
sbb
fs
loop
cmp
xchg
test
movsl
test
hlt
mov
mov
fsincos
xor
xlat
mov
xor
push
push
jns
cli
call
dec
loope
mov
das
jge
lret
ja
add
sbb
inc
and
lds
movl
repz
xor
dec
adc
or
rorl
lea
repnz
push
jge
fdivs
lret
mov
ret
xchg
mov
sub
and
dec
sahf
jb
xlat
cmp
ret
jg
push
movb
repz
mov
mov
movsl
lahf
imul
gs
lret
into
pop
xor
mov
push
sub
xor
cltd
imul
and
pop
scas
sub
jge
lret
rcr
in
sbb
jae
inc
and
std
sub
mov
mov
jg
int
jb
ljmp
sahf
jb
xsaveopt
adc
popa
add
incl
shlb
jle
repz
dec
rolb
push
out
mov
and
imul
lods
adc
int
add
sbb
or
xor
leave
fs
test
or
add
repnz
cs
adc
pop
lods
xchg
sahf
inc
mov
shlb
das
pextrw
jno
nop
push
pop
xchg
mov
mov
and
xchg
pop
push
dec
cmp
imul
jae
jae
sbb
jge
cmp
insb
dec
shrl
orb
mov
popa
in
cld
lds
in
mov
cmp
add
ret
cli
pop
mov
or
lret
mov
pop
jb
cltd
mov
mov
sub
clc
or
bound
pop
sub
pop
sbb
adc
add
fsubrs
nop
cmp
xchg
sub
scas
push
lods
scas
out
scas
and
loop
outsl
pop
push
outsl
or
jl
pop
shlb
pop
test
jmp
ja
push
xchg
mov
push
push
fdivrs
jp
xchg
xchg
aam
inc
jo
push
mov
add
cmp
dec
xor
lea
add
pop
fdivrl
das
test
xor
xchg
fsubrs
inc
cmp
ja
iret
mov
fdivp
ds
push
mov
arpl
adc
mov
sub
enter
out
imul
ret
imul
adc
xchg
xor
popf
jp
test
int
xchg
or
push
sbb
xor
dec
and
jbe
pusha
loopne
popa
ficompl
stc
ss
ret
adcl
pop
jmp
repz
decl
pop
push
fidivrl
pushf
cmp
jp
inc
andl
jg
dec
pop
mov
sbb
xor
adc
rorl
movsl
movsl
mov
push
push
lods
pop
mov
or
mov
xor
mov
push
stc
mov
in
out
in
fwait
adc
test
mov
clc
icebp
hlt
sbb
inc
aam
push
aaa
clc
fs
das
dec
in
adc
scas
icebp
dec
mov
scas
adc
cmp
sbbl
cmpsb
mov
jne
ljmp
movsb
mov
mov
push
pop
cltd
cmpsl
xor
movb
ret
jne
das
test
jl
lods
and
cmp
sti
pushf
dec
test
sub
push
sub
xchg
xor
sub
cs
ret
jmp
add
sti
aas
or
xchg
jl
cli
sbbl
xchg
out
insb
sti
std
ret
inc
push
call
fs
or
mov
pop
out
push
dec
loope
fdiv
nop
icebp
int
nop
or
pop
push
popa
and
in
xor
or
or
push
and
push
shl
fsubrl
arpl
jo
rcl
mov
dec
jb
gs
dec
push
dec
dec
je
sti
add
roll
sub
or
cs
mov
cmc
or
mov
xchg
mov
or
out
cmpsb
hlt
nop
repnz
test
aam
subl
test
sbbl
lret
xlat
adc
push
fnsave
mov
jmp
int3
cmpsb
enter
es
inc
inc
nop
or
sub
and
popf
mov
pop
push
dec
pop
xor
clc
xor
ja
inc
dec
xor
jbe
fcompl
lcall
lds
das
stos
cmp
aam
es
or
and
lcall
cmp
pop
ja
je
adc
adc
out
jl
scas
icebp
pushf
jb
test
adc
jo
mov
lea
les
sti
stos
popa
nop
xor
test
push
lea
add
outsb
cmpsl
out
lahf
add
pop
inc
lock
xchg
jno
xlat
xchg
sub
loopne
jl
icebp
mov
popf
xchg
scas
in
push
xchg
sar
aad
sub
js
in
in
fst
mov
sub
cmp
cwtl
mov
outsb
mov
cmp
stc
sub
adc
adc
imul
outsb
add
pusha
mov
dec
xor
fmuls
cmp
and
insb
lahf
into
pushf
xor
inc
jle
aam
xor
xchg
int3
addr16
jo
mov
inc
test
int
jg
mov
or
daa
mov
pop
jecxz
xlat
movsl
adc
xchg
std
andl
in
xchg
sbb
mov
mov
lods
outsb
scas
ds
push
pusha
shrl
pop
out
bound
mov
mov
cmp
xchg
pop
movsb
add
mov
or
sbb
xchg
mov
pop
push
inc
mov
int
mov
cltd
cmp
push
cmpb
test
xchg
outsb
cmp
cmp
dec
sbb
sahf
jnp
ret
add
sbb
cld
adc
cmp
sbb
mov
jg
adc
shl
int
out
mov
fwait
jmp
adc
or
add
jbe
fs
movsl
imul
xchg
pop
ljmp
dec
sbb
leave
dec
sub
lods
sub
into
push
movsb
jnp
dec
xor
stos
mov
adc
ret
arpl
stos
xlat
lret
ljmp
test
pop
cmpsb
addb
inc
pop
shll
sbb
dec
push
inc
jb
in
jo
ja
iret
out
sti
or
jge
pop
add
xchg
xor
push
mov
sti
aad
xchg
lret
sub
lods
mov
cmpb
lods
xor
stc
movsl
xor
das
icebp
sahf
xchg
cs
in
jge
cmpsb
loopne
or
dec
inc
sub
xor
es
loopne
push
mov
lock
lds
sbb
lret
jno,pn
gs
and
aas
ret
das
in
mov
rol
sbb
mov
mov
pop
mov
loope
jecxz
sub
imul
push
and
cmp
imul
jp
jmp
das
and
sub
pusha
mov
mov
push
xor
jne
xor
xor
cmp
loope
xchg
ljmp
dec
inc
push
push
jb
jns
lret
inc
in
sbb
push
xchg
pushf
or
pop
scas
mov
das
sub
cmp
cmpsl
out
jge
nop
dec
aad
jo
int
outsl
xchg
leave
jecxz
rolb
pop
icebp
fwait
xchg
add
js
loope
dec
mov
jae
sbb
push
cmp
fsubp
inc
or
repnz
cltd
mov
mov
pop
push
hlt
jp
jo
popa
jo
rclb
xlat
jns
add
lret
lods
subl
xor
outsl
inc
int
fldt
jbe
dec
into
idivb
and
das
mov
push
pop
das
clc
xchg
push
add
shrl
loop
daa
call
jnp
mov
pop
add
rcrb
lret
push
xchg
push
sub
jmp
lcall
out
das
sahf
sub
xchg
not
jae
adc
mov
clc
jp
iret
dec
fidivrs
jbe
std
mov
add
cwtl
mov
push
es
test
or
dec
mov
adc
addl
imul
out
xchg
ljmp
xchg
adc
dec
jnp
call
add
into
jmp
cmc
and
jl
or
mov
lret
inc
xor
hlt
imul
add
lods
imul
push
and
les
repnz
xor
sub
pusha
pop
stos
jmp
test
aad
xchg
frstor
inc
push
adc
push
inc
fldcw
mov
jb
and
inc
lea
je
cmp
cmp
and
cli
lcall
sti
pop
cmpsb
xchg
cmp
and
repnz
loopne
jle
xor
xchg
sbb
xchg
call
add
cmp
lgs
mov
dec
adc
in
cmc
mov
arpl
sbb
fidivs
ljmpw
adc
ror
loope
jmp
call
shrl
push
cmp
push
sub
xchg
sbb
sub
addb
inc
mov
das
dec
or
xchg
cs
fdiv
cmp
pop
je
leave
mov
outsb
dec
xchg
inc
cmpl
test
mov
ljmp
fucomp
mov
dec
idivl
cmpxchg
jmp
and
sbb
cli
mov
icebp
jns
cmp
les
hlt
imul
das
bound
cwtl
and
jp
pop
sbb
push
shrl
paddw
jne
test
sbb
sti
ror
add
push
mov
mov
push
out
jl
ss
and
gs
and
fst
movsl
mov
js
jb
aad
ljmp
in
pshufw
out
xor
scas
in
cltd
roll
gs
sbb
mov
je
stos
xchg
push
push
imul
jbe
pusha
cmc
data16
jg
out
lea
lret
scas
jno
outsl
mov
dec
out
icebp
and
jb,pt
and
or
repz
mov
and
or
stc
mov
or
inc
push
inc
cmp
push
mov
lods
rcrb
pop
and
push
jge
xchg
pop
scas
call
shrb
bound
lahf
or
mov
das
ja
cwtl
add
mov
ret
dec
cmpsl
aam
stos
add
outsl
push
mov
and
std
in
aam
push
pop
popa
add
stos
lods
aam
iret
out
aam
cmp
pop
jp
popf
cmp
pop
test
or
cmc
adc
adc
loope
and
pushf
daa
jne
addr16
sub
cmpsb
mov
push
xor
cmp
cli
pop
xchg
movsb
xchg
jp
negb
fisttpl
fs
inc
cmp
and
adc
and
xchg
mov
cs
stos
clc
js
loop
mov
mov
loopne
dec
fwait
icebp
jmp
fistpl
pop
sbb
mov
test
dec
and
jmp
repnz
fsubrs
fistpll
or
aas
cmp
cld
orl
and
aam
movl
dec
jns
xor
sub
sbb
inc
mov
jne
sti
or
push
out
scas
out
into
mov
cmp
add
or
mov
les
mov
lahf
push
push
cmp
pop
push
and
xor
repnz
inc
test
ja
mov
xor
sub
lret
insl
mov
push
inc
mov
mov
insb
pusha
sub
add
or
add
jb
aad
pop
xchg
adc
dec
push
dec
rcrb
mov
jno
dec
sti
popa
movsl
loopne
in
inc
sub
fisubs
xchg
xchg
pushf
adc
xchg
xchg
or
add
jl
ds
pop
pop
lret
mov
push
mov
jle
inc
push
add
dec
scas
lds
daa
subb
mov
ja
add
mov
jnp
push
ret
lock
or
pop
in
out
push
hlt
rcll
dec
dec
scas
decl
test
aaa
cmp
stos
fsub
mov
cmp
int
arpl
inc
nop
scas
mov
push
cmp
aam
xchg
inc
jo
cld
xor
and
push
cltd
pushf
add
int3
inc
mov
movsb
pop
cmpsb
lret
cltd
cmp
shlb
notl
push
sub
iret
mov
and
jg
stc
mov
aad
test
dec
cmpsb
jne
mov
mov
sti
leave
addl
cmp
es
test
xor
cmp
lods
ljmp
inc
loop
pop
sub
mov
sbb
cmp
push
lods
dec
imul
add
mov
add
pop
mov
mov
repz
mov
or
mov
dec
cmp
out
stos
jb
shlb
ljmp
add
sbb
and
insl
nop
scas
je
cmp
aam
int
pop
lahf
jbe
repnz
repz
hlt
andb
ret
shlb
lret
mov
clc
mov
hlt
sbb
cmp
mov
dec
pop
fsub
loope
mov
popf
mov
mov
xchg
and
rcrb
inc
jno
and
cmp
push
cmp
dec
jnp
mov
loope
adc
daa
sbb
inc
data16
jne
stc
out
out
insb
push
enter
decb
mov
or
jle
test
inc
push
xorb
pop
fxch
fists
subb
mov
sbb
out
stos
imul
pop
push
and
cld
xor
imul
sahf
scas
faddl
leave
mov
mov
in
fstpt
scas
xor
xchg
sbb
cwtl
mov
lods
cmp
jge
dec
xchg
or
inc
push
je
sbb
out
inc
fmulp
cmp
loop
xchg
lcall
fcompl
sub
nop
out
pop
inc
push
xchg
cmpsl
mov
push
dec
or
sahf
mul
cld
pop
ror
push
iret
add
adc
push
xchg
sbb
jb
mov
dec
test
scas
pop
mov
inc
addr16
xor
mov
push
jg
lret
shrb
jae
cwtl
aas
lock
dec
inc
dec
add
or
int3
xor
mov
jae
testl
sbb
sbb
fldenv
in
sub
rorb
sub
hlt
mov
ror
pop
inc
pop
sub
cmc
aaa
jnp
fdiv
scas
xchg
mov
ficoml
dec
xor
push
push
jb
push
into
out
pop
testb
jecxz
jmp
pop
jo
mov
popf
ret
shrb
mov
pushf
fiaddl
call
xor
mov
sub
test
loope
sub
add
loope
jmp
lcall
clc
mov
push
je
lret
sti
movsl
in
je
ss
dec
test
fsubrl
or
jae
cmp
add
popf
cwtl
sti
cmc
outsb
mov
jmp
insb
testl
jl
stc
aam
mov
inc
test
sbb
push
add
jg
shrl
cmp
mov
mov
pop
dec
pop
push
fisttpl
rorb
cmp
mov
xchg
aas
sbb
stos
and
jp
inc
into
clc
test
pusha
insl
xchg
cmc
outsl
pop
in
lock
nop
jnp
or
js
stos
out
push
mov
test
pop
or
cli
adc
sub
std
mov
dec
jmp
adc
shl
shr
movsb
or
test
fdivr
es
cwtl
adc
pop
cmp
mov
data16
imul
rclb
inc
mov
xchg
aaa
cmpsl
push
xchg
loopne
pop
add
insl
aad
pusha
xchg
push
xor
jmp
and
out
cwtl
repz
xchg
jbe
pushf
sbb
pop
shll
mov
push
faddl
push
out
movsb
mov
nop
jae
xchg
mov
popf
repz
xchg
aam
mov
dec
or
add
int3
xor
je
cmp
mov
es
push
lahf
mov
jp
sbb
subb
icebp
inc
out
mov
adc
jne
push
insb
lock
sahf
pop
adc
repz
push
fmulp
xchg
adc
clc
ret
popa
loopne
inc
mov
cmp
and
lds
stos
out
xchg
add
xchg
lahf
cmp
mov
and
pop
mov
daa
xchg
add
lret
mov
aas
sbb
mov
aaa
pusha
jg
dec
lock
jge
repz
add
jae
push
out
int
mov
sub
bound
xchg
push
cmp
push
xchg
pop
int3
push
cmp
rolb
popf
shlb
sbb
ss
fcoml
dec
mov
inc
inc
scas
je
jp
pop
aas
pop
pop
fisubrs
pop
sub
fisttpl
mov
aam
and
out
push
xor
js
xchg
jae
ja
in
pop
pop
scas
xchg
in
scas
xchg
decl
push
or
into
jg
dec
xchg
rolb
mov
or
adc
pop
dec
push
out
fsubs
in
mov
mov
jp
lods
sbb
test
cmp
mov
in
lods
mov
push
mov
test
scas
jbe
ficoml
into
scas
mov
mov
mov
dec
ror
icebp
mov
popf
in
fnsave
fstpl
jecxz
repz
out
inc
cwtl
adcb
sbb
imul
out
and
xor
aas
fnstenv
imul
cmp
ljmp
stc
cmp
sbb
ljmp
repnz
shlb
jb
orb
mov
jl
mov
inc
inc
out
insb
sbb
arpl
outsl
push
sub
jle
jmp
xor
and
inc
add
jp
push
mov
sub
lahf
movsb
mov
cld
mov
fdivl
ret
mov
push
adc
mov
mov
or
out
jp
push
std
out
test
or
and
std
jb
out
inc
fsubs
inc
xchg
xor
sub
mov
into
push
cld
cltd
pop
or
push
jns
sbb
test
pusha
and
imul
std
sub
lret
sub
dec
mov
out
test
cmpsb
mov
push
repnz
mov
jae
je
sbb
jnp
rcl
dec
andl
pop
mov
cwtl
pop
pop
dec
jno
xor
dec
fdivl
stos
pushl
sub
push
out
das
pop
cmc
sub
sarl
and
jl
push
je
inc
xorb
loope
stos
xor
mov
mov
subl
ja,pt
aaa
imul
adc
les
test
mov
sbb
add
inc
mov
mov
es
jns
or
sahf
out
cmpsb
mov
add
mov
sub
xor
mov
push
pushf
insl
rolb
sti
into
cmp
sub
mov
adc
mov
daa
iret
pushf
and
pop
xor
jno
jne
mov
xchg
jle
pop
jae
fistl
je
mov
arpl
mov
and
and
sub
mov
push
iret
aam
aad
xchg
jecxz
popf
cmp
and
adc
fstps
mov
fistps
out
xlat
fxch
bswap
xor
bound
pop
and
sbb
sub
leave
mov
in
dec
inc
lock
mov
enter
xchg
mov
jmp
and
sti
std
clc
and
pop
push
adc
mov
mov
mov
xchg
dec
adc
idivl
add
and
outsb
push
loopne
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
xchg
and
mov
jge
or
jp
add
push
bswap
pop
mov
loop
popf
xlat
jge
sahf
xor
je
sub
sub
imull
test
xchg
in
jge
cmpsl
mov
adc
jecxz
cmp
mov
bound
pop
mov
jmp
mov
insl
pop
xchg
outsb
aam
out
into
mov
xor
pop
aad
mov
sub
clc
mov
lods
test
xchg
mov
and
in
add
lcall
mulb
push
leave
int3
imul
jmp
push
jbe
jo
lods
push
fcoml
fsubrp
mov
xchg
adc
adc
mov
hlt
insb
outsl
lods
pop
sbb
es
mov
mov
pop
push
inc
icebp
mov
and
setno
cmp
mov
idivl
movsl
add
mov
ret
mov
mov
stos
pop
xchg
cs
add
adc
aad
mov
adcl
sar
mov
mov
jns
loope
adc
leave
push
push
sbb
das
lods
movsl
lret
jnp
loop
or
ljmp
xor
pop
jno
fcmovb
adc
push
repz
aas
xchg
stc
dec
aam
in
sbb
mov
hlt
mov
insl
cli
rclb
cmp
scas
cs
xor
xchg
pop
jp
movsb
imul
push
xor
repnz
sub
insl
and
pop
fcoms
push
mov
pop
testb
and
popf
insl
mov
ss
sbb
jnp
rcl
in
lock
mov
xchg
xor
hlt
add
fisttpll
subl
cli
push
into
test
sti
and
imul
mov
std
dec
lock
mov
dec
inc
sbb
xchg
adc
push
pushf
cmpsb
aad
into
adc
add
pop
mov
subl
test
daa
mov
xor
les
dec
fcmovnb
xchg
push
imul
sahf
lods
popa
xlat
jae
insl
sbb
mov
xchg
into
sbb
sub
push
ljmp
xor
nop
dec
lahf
mov
xor
int3
xor
inc
or
sahf
jbe
cmp
add
in
xor
inc
std
into
sbb
scas
sbbb
mov
data16
inc
ja
mov
clc
dec
sbb
jae
adc
shlb
stos
repz
pop
cmp
push
icebp
jmp
hlt
hlt
pop
adc
punpckldq
loope
or
cmp
sbb
xchg
push
mov
orb
lock
lods
mov
lock
dec
push
pop
cs
daa
jg
cwtl
or
mov
popa
adc
or
pop
push
hlt
jns
cmc
mov
aas
sbbl
lea
repz
dec
ret
sti
sbb
imul
sub
cmc
sbb
xor
orb
sub
xor
test
push
lods
inc
jmp
sbb
sbb
mov
or
out
cli
andb
add
mov
repnz
lret
lahf
nop
pushf
repz
repz
ljmp
push
pop
ret
imull
loopne
ficoml
ret
jmp
shrb
push
andb
call
or
mov
pop
dec
dec
cmp
aas
adc
fcoms
insl
cld
in
enter
mov
cmc
adc
rcr
cs
pop
dec
and
clc
ret
out
into
cmp
sbb
push
xchg
adc
mov
pop
popa
dec
imul
in
repnz
lahf
pop
rclb
dec
push
push
inc
and
pop
std
adc
sbb
outsb
push
sbb
mov
mov
dec
mov
pop
int3
int3
sbb
jbe
xor
sbb
incl
subl
mov
movsb
lods
add
into
arpl
dec
popfw
lods
fildl
push
dec
test
mov
cmpl
xchg
xor
sub
fistps
jle
pop
mov
pop
cmp
mov
cli
mov
icebp
mov
cmp
fisubrl
xor
scas
lods
ja
push
xchg
and
mov
stos
fwait
dec
jb
lock
gs
jno
inc
sahf
nop
clc
xchg
mov
sbb
lret
and
arpl
sbb
icebp
xchg
jns
push
imul
adc
leave
shlb
addr16
mov
fdivl
loope
inc
loopne
sub
push
pusha
fdivp
and
cmpsb
mov
xchg
mov
lret
and
pop
mov
jb
movsb
jno
jmp
jle
ret
jno
js
pop
jl
call
and
push
ljmp
or
push
outsb
es
mov
jno
push
dec
aam
fisttpll
cld
out
push
dec
mov
repz
add
lds
lret
lcall
add
jmp
cmp
popf
mov
sti
push
std
mov
push
xchg
bound
fmul
mov
push
mov
jle
mov
insb
and
mov
stc
insb
fiadds
shlb
lods
es
or
pop
xchg
mov
outsl
lock
lret
aaa
jnp
cmp
add
jp
stc
fwait
test
cmpb
mov
mov
push
add
addb
subl
cmpl
or
cmc
addl
dec
insb
sbb
inc
roll
jg
notb
or
lret
mov
icebp
lret
frstor
lahf
or
insl
in
mov
add
enter
cltd
xchg
shl
inc
cwtl
iret
test
dec
shrl
mov
cmc
pushf
add
test
push
xor
dec
xchg
push
cmp
in
lret
test
jo
or
add
out
cli
xchg
pop
scas
pop
inc
repz
mov
jno
out
or
and
push
add
push
aad
popa
or
into
shrl
push
adc
aam
movb
add
push
arpl
nop
dec
inc
in
repz
pop
sub
sbb
ret
add
sub
mov
xchg
shrl
push
add
in
sub
dec
sbb
bound
lret
xchg
pop
mov
scas
jnp
sub
imul
repnz
subl
loope
jge
jns
lds
clc
push
xchg
in
js
lock
xchg
jmp
xchg
leave
xlat
sub
mov
push
xchg
jp
dec
aaa
dec
es
and
push
shr
or
inc
push
scas
xorb
test
mov
adc
std
push
jns
int3
mov
xchg
adc
pop
in
dec
sub
jbe
jno
xor
mov
mov
lret
sahf
jns
xchg
ret
xchg
scas
sub
adc
ja
or
pop
loop
xor
pop
add
push
xchg
xlat
outsl
pop
mov
popf
clc
in
aas
rolb
hlt
pop
ljmp
mov
ja
pop
push
test
scas
dec
sti
mov
das
inc
aas
mov
cmc
mov
sahf
dec
mov
mov
imul
cmp
sbb
mov
fsubrl
mov
xor
inc
repnz
mov
lea
mov
loope
sub
cld
push
insb
fcmovne
sub
mov
sti
inc
xlat
inc
gs
imul
adc
ficoml
fwait
mov
rcrb
cmp
jno
call
push
pop
loopne
jl
mov
in
mov
imul
dec
mov
mov
arpl
lds
adc
jle
out
les
insb
std
add
stos
cmpsb
jns
jno
shlb
cwtl
xchg
aaa
rcrl
add
mov
jno
adc
push
mov
loope
mov
fwait
insl
outsl
mov
aas
andl
aaa
aam
movhps
adcb
fimuls
popa
and
je
inc
pushf
inc
dec
dec
cmp
lock
ffree
mov
add
aam
cltd
push
repz
mov
imul
sub
repz
sti
adc
mov
js
les
popf
les
xor
ret
addr16
ret
add
cwtl
imul
in
fldcw
push
inc
sbb
arpl
addb
pusha
fdivrs
fwait
or
adc
into
mov
xor
sti
sub
subl
jb
ja
xor
push
insl
cld
mov
dec
inc
enter
push
cmp
mov
or
mov
xchg
aaa
xor
divb
outsl
mov
cmpsb
xorl
sub
xlat
je
pop
rcrb
or
mov
or
and
mov
adc
ret
push
dec
dec
cwtl
cli
and
push
mov
or
pop
mov
or
mov
sbb
lret
jle
int
imul
and
or
add
pop
mov
into
jmp
in
fnsave
xorl
mov
fstpl
jl
cmpsb
dec
push
pop
addl
cmp
dec
fwait
movsl
pop
imul
jbe
ss
out
hlt
push
lds
ss
mov
daa
fnstsw
and
fnstenv
adc
sahf
push
mov
add
mov
add
lahf
rcrl
mov
hlt
or
lcall
outsb
je
bound
fidivrl
xchg
mov
lock
mov
icebp
stos
insb
xor
dec
test
mov
xchg
dec
inc
pushf
cld
inc
dec
mov
push
dec
xchg
cmp
cmp
xchg
sbb
xor
sti
repnz
pop
add
pop
lods
cli
mov
push
push
frstors
ss
inc
pusha
mull
and
adc
cmc
cltd
pop
mov
lahf
mov
xor
ror
std
insb
subb
push
insb
scas
lret
adc
cmp
sbb
and
mov
pop
loopne,pt
mov
fimull
mov
inc
js
test
and
lcall
lcall
sbb
adcl
pop
push
mov
mulb
sub
dec
shlb
mov
popa
adc
fimull
mov
mov
ficoml
cwtl
int3
and
in
daa
mov
push
hlt
cli
mov
shrl
sbb
mov
notb
lcall
cmpsb
inc
into
leave
imul
dec
mov
sbb
movsb
adcb
mov
jb
cmp
in
hlt
cmp
add
xor
out
mov
adc
leavew
jecxz
fistpll
cs
jno
fbld
dec
jp
push
int3
fstpl
adc
ja
cs
mov
and
in
lds
mov
ficoml
outsb
sarl
jecxz
js
cmp
pop
push
test
sbb
fsubrl
xchg
dec
mov
mov
fnsave
mov
enter
inc
mov
dec
loope
loop
out
or
popa
xor
sbb
rorb
adc
mov
call
xchg
dec
dec
sbb
sub
adc
or
fwait
xlat
sub
inc
pop
loopne
je
popf
mov
fstpl
sub
aad
dec
xchg
es
or
cmp
cmpsl
cmp
mov
push
pop
mov
push
sub
es
xor
inc
pop
push
adc
ret
mov
in
add
mov
decb
idivl
aam
into
sbb
addr16
clc
xchg
test
mov
mov
mov
and
popf
and
cmp
xchg
ljmp
inc
jg
cmc
sub
add
cmpsb
fdivrl
fcoml
push
hlt
cmpsl
sbb
sub
lock
jbe
xchg
add
ja
cmp
mov
out
add
xchg
xchg
aam
add
adc
les
sbb
subl
xor
and
mov
mov
imul
aad
push
shll
pop
xor
test
and
cld
sub
fucomp
lret
sbb
lret
cmp
and
sti
mov
cmp
mov
jp
mov
out
cmpsb
test
inc
daa
sbb
mov
adc
flds
rclb
rolb
repnz
adc
iret
ret
xchg
jecxz
sub
and
push
sub
pop
mov
pop
add
movsb
sbb
mov
xchg
aaa
mov
xchg
push
push
cmp
ficomps
mov
and
cmp
mov
ss
mov
sub
outsl
fldcw
call
gs
mov
pop
push
and
test
inc
jno
fistpll
sti
jae
cmp
or
sbbb
xchg
or
dec
jne
sysenter
mov
cmp
mov
mov
jl
jno
inc
adc
jbe
mov
popf
insb
cmp
fs
pop
lock
mov
lds
lret
gs
or
cmc
sub
sub
lret
mov
lret
lahf
aaa
jnp
mov
gs
je
aaa
inc
andl
gs
das
cmp
int3
sahf
cmp
hlt
sbb
leave
cmp
pop
cli
stos
jae
rcll
loop
lret
stos
ljmp
imul
xor
adc
insb
shrl
xchg
mov
mov
testb
std
dec
jbe
out
fildl
mov
mov
arpl
jp
push
mov
push
inc
and
aas
jae
xor
pop
cmp
call
xchg
outsl
sub
add
fmull
ror
mov
sahf
cld
pop
shll
arpl
dec
sbb
arpl
inc
cmp
xor
in
adc
add
mov
sub
data16
or
cwtl
icebp
cltd
mov
jge
push
or
cli
daa
inc
sub
movsb
cvtpi2ps
dec
cli
pop
xor
bound
add
adcb
test
ret
in
addr16
dec
repnz
repz
test
add
jns
shl
jl
jmp
pushf
mov
adc
mov
pusha
xchg
inc
cwtl
stc
fmull
xor
add
in
out
push
sub
movsb
movsl
mov
jl
das
add
rorl
shll
lock
cmc
pusha
test
out
mov
in
xlat
addr16
cmp
cmp
jg
fsubrl
cmpsl
enter
jle
mov
push
stos
or
sub
test
sub
mov
mov
xchg
add
dec
subl
cmp
and
xchg
ljmp
jl
loopne
bound
sub
or
cmp
rcrl
or
imul
mov
les
jl
rcll
cwtl
cs
addr16
jae
mov
fstl
in
aas
dec
lds
push
sti
lock
mov
jae
cmp
mov
jb
jns
or
jecxz
out
test
insb
ret
scas
or
dec
mov
out
cwtl
repz
push
aam
imul
fs
ds
lock
jp
jmp
add
push
push
adc
pop
sbb
xor
out
pop
sbb
jno
ja
push
loopne
shl
out
std
orl
or
shrl
das
int
push
adc
sub
jp
pop
sbb
and
adcl
mov
xchg
add
cmp
or
insb
fcoms
lods
mov
mov
push
rcrl
dec
loope
dec
stc
jmp
cltd
push
dec
cmp
orl
xchg
inc
push
in
push
jo
or
mov
xlat
pop
std
addb
mov
js
pusha
imul
out
sbb
push
data16
or
inc
adc
addr16
std
shl
jo
push
stc
sbb
std
test
fs
jnp
push
addr16
push
sub
mov
xor
and
jne
aad
loope
into
dec
jmp
mov
loope
inc
or
jnp,pt
pushf
shl
sub
cmp
es
and
dec
or
sub
lret
jmp
xchg
insl
mov
xor
fisubl
fimuls
imul
loop
xorl
lret
subl
inc
lret
jb
or
in
pop
dec
cmpb
dec
les
cmp
mov
xor
loope
repz
out
push
dec
daa
stos
pop
inc
mov
and
xor
jg
sub
sbb
xlat
les
stos
gs
js
pop
inc
adc
jecxz
pop
and
cli
ret
aad
add
xchg
cmp
and
fildl
mov
dec
cwtl
xor
in
repnz
mov
outsb
push
daa
mov
cmp
push
fdivrl
ja
data16
mov
dec
mov
ret
test
arpl
cmp
jno
adc
xor
push
je
cwtl
cmp
leave
sbb
pop
pop
inc
mov
loope
std
cld
cmp
lcall
jnp
adc
call
mov
test
fsubl
xor
data16
adc
sarl
arpl
lcall
mov
iret
xchg
ffree
out
icebp
out
pop
scas
lods
cmpsl
in
cmp
pop
add
pop
xchg
xchg
add
iret
arpl
push
dec
dec
inc
push
je
mov
pop
mov
dec
xchg
pop
leave
mov
in
push
pop
das
sub
call
push
add
mov
and
in
cmp
add
loop
aas
insl
mov
adc
cwtl
shr
aam
sub
aas
adcb
xchg
mov
inc
inc
dec
sub
rcll
pusha
shlb
add
fwait
sbb
mov
insb
mov
movl
in
test
fadds
inc
mov
ss
insb
mov
pusha
inc
xchg
int3
pop
cmpl
sub
int
mov
add
xchg
push
xorl
xor
sarl
aaa
cmp
xor
outsb
dec
stos
and
jmp
sahf
jmp
lcall
pushf
cli
pop
scas
jne
insb
pop
loop
sbb
sti
loop
push
insl
in
mov
mov
add
mov
cmpsb
clc
cmpsb
lods
orb
movsb
aad
xchg
rorb
push
int3
and
mov
lock
lret
gs
imulb
test
mov
mov
aad
cmp
fcmovnb
cli
sub
cmpsb
insb
jge
sub
mov
pop
flds
std
test
sub
out
xchg
sbb
jl
and
mov
repz
or
clc
or
aas
pop
xchg
shll
stos
fldl
adc
adc
les
loopne
loopne
popf
jne
notl
sub
mov
add
stc
jbe
xor
push
test
dec
cmp
insl
fwait
in
jl
cmpb
jecxz
mov
movsb
aad
fldenv
add
ftst
sbb
xlat
aam
xchg
adc
inc
sarb
sbb
mov
repnz
ja
xor
cmp
xchg
mov
or
jle
ret
subb
cwtl
sub
ja
cwtl
jns
mov
pop
and
arpl
fs
or
gs
orb
movsb
aad
inc
call
call
cs
mov
sbb
sbb
icebp
jo
adc
cwtl
jno
jb
push
or
mov
nop
js
pop
rol
test
in
idiv
lods
jae
push
ds
sub
xchg
or
bound
loop
xchg
outsb
adc
mov
xchg
push
jne
pop
pop
jl
lcall
jo
fldcw
xor
push
test
adc
xchg
or
sarb
loope
pop
in
dec
fisttpll
jns
cli
adc
sub
inc
pop
lahf
inc
cmpl
je
jae
mov
in
dec
sub
xchg
movsb
outsl
or
inc
lock
sub
icebp
cmc
dec
or
out
sahf
xorb
jbe
mov
mov
orl
rcrb
pop
mov
mov
lock
xor
xor
popf
inc
push
shrl
aad
mov
mov
adc
orb
jge
ret
sub
pushl
pop
fmuls
inc
jo
je
mov
rcl
das
pop
xchg
push
xchg
jb
sahf
inc
add
rorl
gs
sbb
mov
cwtl
mov
pushf
lods
sbb
ss
outsl
dec
cmp
push
or
stos
arpl
adc
sub
and
mov
inc
cmp
or
add
mov
jp
lds
and
or
cwtl
dec
int3
push
pop
jl
ja
pop
mov
jmp
sub
in
ljmp
adc
insl
jecxz
or
call
cmpsl
adc
jp
insl
xchg
shl
push
sbb
movsl
and
dec
popf
test
fmull
test
lret
sub
pop
sahf
adc
push
sub
push
inc
lods
ss
sahf
pop
jae
out
or
jbe
push
lea
movsb
cli
divl
insl
call
in
push
jge
sub
mov
addr16
scas
jnp
jmp
push
addb
test
jno
mov
mov
jecxz
shrl
insl
enter
push
xchg
fs
push
sub
or
call
cltd
dec
imul
mov
inc
test
pushf
sub
pop
mov
sbb
inc
test
jno
push
push
loopne
jb
loopne
jae
rcrb
pop
or
sub
jno
dec
cwtl
pop
ljmp
add
mov
dec
in
jo
cmp
xchg
stos
pusha
jbe
pop
mov
xchg
pop
jp
movb
test
pop
jp
jbe
sbb
out
cmpsl
ret
or
cli
pop
aaa
aas
xor
loopne
add
xor
inc
xchg
roll
inc
xor
push
push
rcrb
bound
sbb
pusha
mov
andl
outsl
outsb
sbb
inc
movsl
sbb
lods
cmp
fisubl
dec
out
pop
lods
sysret
fdivl
stos
gs
or
mov
fsubr
jno
lret
pushf
les
jmp
enter
stc
cmpsb
xchg
hlt
jno
lcall
mov
leave
scas
mov
hlt
pop
and
lods
enter
js
add
sbb
iret
test
sbb
and
in
mov
movaps
outsl
sahf
jns
cld
sub
add
call
addr16
cmpsw
xor
sahf
arpl
xchg
outsb
pop
lret
xlat
push
mov
in
test
dec
sub
adc
mov
repz
mov
and
pop
pop
or
clc
repz
mov
and
xor
and
xchg
jp
into
dec
lods
lods
ja
mov
data16
sub
fisttps
sbb
fs
sbbb
into
sub
push
stos
add
push
in
or
sub
xchg
faddl
lods
push
xor
insb
lods
in
xlat
flds
jbe,pn
ret
mov
sbb
mov
xor
or
insl
push
orl
data16
dec
cs
add
jae
push
pop
sbb
in
dec
dec
cmpsb
cmp
outsb
xchg
xlat
mov
pop
jecxz
dec
std
data16
xor
rclb
jnp
mov
js
mov
jp
push
push
pushf
mov
inc
aaa
pop
mov
add
jg
push
jle
jo
movsl
inc
inc
leave
jno
jl
inc
bound
mov
mov
jecxz
hlt
aam
inc
sahf
pop
or
lret
gs
fsubp
add
movsl
movaps
loop
mov
idivl
mov
subb
pop
pop
and
dec
test
cmp
pop
and
sub
sbbb
cmp
cld
push
in
xchg
mov
xorl
jg
jno
push
lods
and
popl
xchg
lea
orl
loop
push
inc
or
sahf
popf
pop
in
push
xor
dec
push
insb
dec
push
mov
cmc
push
mov
mov
inc
xchg
insb
xorl
inc
aaa
inc
sbb
or
rcr
sub
jmp
sbb
bound
or
pop
and
xor
pop
addb
or
cs
dec
xor
pop
jnp
cmp
jne
dec
pop
mov
stos
push
insb
sbb
pop
lods
xchg
jno
sbb
cmp
add
es
xchg
fimull
inc
in
daa
loop
cmpb
dec
sbb
xchg
pushf
lahf
push
out
push
cmp
sbb
mov
mov
pop
push
stos
clc
loopne
sbb
add
add
push
fsubrl
loope
pusha
cmp
or
or
sbb
lahf
mov
daa
cmc
cmovbe
jge
dec
out
add
jl
addb
mov
imul
js
repnz
in
adcl
sbb
jns
cmpsb
scas
mov
sbb
imul
clc
icebp
lcall
sub
push
sbb
xchg
icebp
inc
xor
data16
iret
cmpsl
movsb
lahf
aad
in
je
loopne
popa
cltd
mov
push
sbb
insl
xor
jnp
inc
rorb
inc
ljmp
sbb
add
add
push
pop
jne
test
mov
pusha
jge
pop
and
sahf
and
jae
rorl
push
aad
divb
cld
jnp
lret
aaa
stos
add
lret
mov
cltd
clc
lods
sub
lea
dec
arpl
in
sarb
sub
mov
cmp
fcoms
outsl
iret
pop
xor
pop
adc
inc
lods
xchg
mov
into
es
fndisi(8087
fcom
mov
pmaddwd
xor
push
imul
inc
fildll
dec
add
repz
into
or
addl
sbb
jp
js
mov
ficompl
fisubs
loope
xor
cs
call
mov
addr16
ffree
adc
fdivs
leave
outsl
in
popf
push
jo
cmp
iret
push
mov
dec
in
xor
xchg
xchg
jbe
pop
lea
sbb
popa
insb
popa
add
and
mov
insb
ret
fdivl
iret
sub
mov
fsub
jg
push
dec
in
xchg
outsb
sub
fwait
cwtl
jno
stos
shlb
inc
je
lret
sbb
shr
xchg
hlt
arpl
add
mov
subb
int3
push
add
dec
fs
loope
push
icebp
es
dec
je
fs
mov
je
or
xchg
or
xor
sub
rcr
xchg
lods
mov
popa
dec
lcall
dec
jnp
aam
ds
xlat
dec
sub
into
push
jle
in
xchg
and
cmpsl
fwait
pop
mov
sub
push
gs
nop
mov
mov
call
jmp
div
pop
movsb
js
mov
in
cmp
lret
mov
mov
mov
je
dec
in
ljmp
hlt
pop
fisttps
ret
pop
in
cld
dec
imul
mov
or
mov
cmp
repnz
jne
jno
fwait
xchg
dec
inc
int3
test
es
xor
bound
xor
and
adc
cmp
jne
jno
dec
rorb
ret
cmp
popa
sub
movsb
pop
adc
add
mov
push
inc
fsubrs
push
mov
add
daa
adc
and
pop
dec
add
xchg
and
outsl
push
jnp
scas
out
cmpsb
sub
xor
gs
in
sub
sbb
arpl
out
lret
mov
imul
push
dec
push
call
in
shrd
sub
adc
loop
xor
clc
aaa
aas
loope
adc
sbb
xor
jl
or
push
mov
sbb
jno
or
or
adc
scas
inc
leave
vxorpd
sub
loop
jne
es
data16
ljmp
cli
loopne
pop
cmp
fldcw
popa
mov
sbbb
mov
add
je
jg
test
pop
pop
test
inc
js
stos
cli
sbb
fs
stos
leave
shlb
loop
xchg
mov
clc
fnstenv
icebp
fwait
std
int3
jno
outsb
and
lds
or
add
repnz
and
xchg
cmp
fwait
into
and
mov
xor
inc
dec
aaa
ds
int3
inc
les
xor
jecxz
movsl
stos
and
aad
js
jnp
lahf
cltd
mov
outsb
or
pop
das
cmpsb
lds
add
ds
dec
dec
dec
sahf
cmp
sbb
adc
mov
cld
lcall
mov
xor
xor
adc
add
add
pushf
adc
outsb
and
push
adc
lret
rolb
imul
and
dec
mov
inc
adc
jp,pn
jge
xor
divl
push
aam
dec
or
ret
sub
and
outsb
outsb
jnp
pop
push
mov
out
fistpll
jns
xchg
outsb
xchg
mov
mov
or
push
jnp
dec
aad
lods
into
push
call
cmc
dec
cld
cmp
add
out
aaa
inc
xor
push
in
dec
jo
aad
scas
fidivl
mov
add
cltd
inc
jno
aaa
test
imul
flds
mov
in
and
jl
pop
jmp
or
lods
xor
mov
mov
jns
icebp
xchg
add
inc
shll
push
fneni(8087
sub
shrb
aad
push
dec
cmpb
rclb
frstor
fildll
in
cmp
xor
xchg
out
push
cmpsl
mov
or
pop
or
or
dec
push
add
push
push
dec
adc
xor
xor
push
sbbl
push
add
inc
adc
scas
iret
fisttpll
ret
jg
ror
or
std
mov
sbb
push
test
out
aad
dec
mov
dec
pop
xor
test
cmp
dec
cltd
dec
dec
dec
hlt
dec
in
pop
jne
push
push
mov
xlat
gs
loopne
pop
push
sub
jbe
push
ret
rcr
loop
outsl
pushf
xor
ret
add
cmpsl
mov
xor
popf
xor
imul
jmp
add
sbb
mov
sbb
mov
clc
push
xor
scas
movsl
push
test
mov
je
mulb
pop
not
xchg
xor
dec
test
sub
imul
pop
mov
jmp
out
fcom
pop
pop
cmp
clc
pop
or
cmc
jmp
mov
out
pop
ljmp
pop
adc
and
jmp
xchg
lods
mov
jae
xor
out
sub
xchg
mov
out
or
test
imul
pop
sbbl
xchg
push
call
xchg
imul
sbb
in
cmp
cmc
push
cwtl
ret
mov
adc
imul
stos
add
mov
mov
sub
dec
and
not
adc
fnsave
fs
inc
call
jb
mov
push
lret
jns
cmp
sahf
sub
in
mov
in
mov
jo
daa
sub
jnp
aad
xor
dec
fidivrl
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
adc
jl
sub
jmp
xchg
mov
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
