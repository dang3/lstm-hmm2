mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
lret
cmp
nopl
jmp
mov
xlat
les
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
xchg
aam
adc
add
shll
testl
sbb
mov
test
mov
pop
jmp
insl
inc
xor
inc
cmp
rcrb
mov
flds
xor
xor
inc
rolb
pusha
sbb
sbb
or
push
fwait
mov
mov
add
sub
movsb
enter
mov
xor
lcall
pop
lcall
jno
adc
pop
daa
loop
add
xchg
adc
ret
and
adcb
sbb
in
cmp
popf
outsl
fwait
movsl
mov
mov
pop
cmp
dec
sub
push
sbb
sbb
arpl
adc
insb
xor
stos
mov
ret
icebp
fisttpl
push
inc
jecxz
scas
and
arpl
mov
ret
push
das
popf
aaa
rorl
mov
mov
pop
push
sub
inc
lods
mov
push
add
pop
nop
daa
flds
adc
inc
aad
xorl
int
jp
jo
nop
out
cmpsl
inc
fdivp
aad
pop
and
jb
fdivl
cs
lock
clc
daa
scas
inc
fdivrs
pop
pusha
sub
cli
pop
xor
pop
jae
out
mov
cmp
sti
test
stos
pminub
pop
loop
popa
xchg
fildl
jecxz
add
clc
cmp
lcallw
add
jl
enter
and
xchg
fsubrp
addl
imul
lret
mov
leave
add
mov
shr
or
in
movaps
dec
push
push
cmp
jge
das
imul
dec
hlt
rorb
xchg
and
in
pop
and
mov
fwait
xorl
xchg
mov
jns
jp
sbb
out
dec
icebp
push
aad
mov
mov
add
mov
js
repnz
mov
pushf
insb
sbb
and
pop
push
outsb
lret
adc
hlt
xor
push
fimull
mov
cmp
out
fisttps
mov
test
add
xor
or
jne
cmp
xchg
aad
lret
mov
in
sahf
and
push
fsubs
mov
daa
rclb
dec
stos
sub
dec
std
aad
in
xchg
es
push
rcrl
cmp
xchg
push
or
jae
fs
fistpl
popf
sub
mov
sub
and
push
sbb
jle
adc
mov
cmpsl
mov
adc
out
sbb
pop
push
jl
and
cmpsb
repz
lcall
test
inc
mov
mov
pop
xorb
lds
insl
mov
sbb
call
stc
add
stc
inc
lods
mov
cld
lret
or
daa
mov
push
sahf
push
and
fsubs
cltd
push
movsb
mov
inc
icebp
pop
xchg
push
and
and
pushl
imul
mov
sbbb
mov
popa
push
adc
clc
cmp
cli
cltd
add
sbb
gs
mov
rcrl
jecxz
push
mov
ljmp
sbb
xchg
mov
inc
adc
js
cli
and
shl
call
push
pop
jecxz
lret
in
fisubrs
mov
std
movsb
bound
jns
dec
imul
mov
lds
idivb
arpl
xchg
hlt
rclw
data16
inc
jl
hlt
stc
dec
test
iret
xor
dec
add
inc
sarb
xchg
pop
sub
add
fwait
or
inc
xor
xchg
nop
and
xchg
or
loop
fcoml
rolb
mov
stc
mov
mov
push
loope
cmc
push
xchg
jl
mov
lds
xor
scas
xlat
lds
mov
test
cmp
mov
inc
lret
in
xchg
fnstsw
fsubl
sbb
cltd
test
mov
xchg
test
pop
add
idiv
xchg
dec
shll
movlps
ljmp
mov
loop
mov
mov
mov
add
push
and
lret
cmp
sbb
xor
nop
fsubl
fwait
xlat
rcrl
sub
and
mov
int
mov
xchg
mov
repnz
cmpsl
push
cltd
mov
jg
mov
loope
mov
dec
shll
cmp
add
lods
cmp
adc
in
jae
lea
pop
sbb
lods
sbb
or
pop
inc
adc
std
mov
stos
cmpsl
pop
push
adc
sbb
dec
lock
add
in
icebp
inc
add
pushf
pop
cmp
call
pusha
imul
aad
dec
push
pop
cltd
pop
insb
aad
cltd
lret
cltd
pop
out
negb
and
lret
or
loope
push
xor
mov
pop
lds
cmp
sbb
fdiv
or
lea
inc
sbb
daa
xchg
push
jbe
push
jne
shrb
push
loop
loope
mov
xchg
lret
lods
fstpt
test
sub
inc
scas
fildll
enter
flds
push
push
sub
orb
fidivrl
pop
cmpsl
dec
cli
cld
ja
cs
xor
hlt
add
jno
add
xchg
ss
dec
sub
adc
cmpsb
aam
fwait
mov
xchg
frstor
xor
bswap
loopne
jg
aam
shlb
loopne
iret
cmp
pop
test
cs
pusha
mov
push
jle
add
push
sti
xchg
dec
mov
adc
adc
ficomps
clc
sahf
out
incl
mulb
jne
out
jle
imul
push
lea
subb
call
loope
loopne
sbb
popf
call
scas
or
sub
dec
jecxz
in
popl
jbe
sbb
xchg
cmpsb
nop
mov
fstl
sarl
mov
cmpsb
lcall
cmp
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pmaxsw
mov
inc
cmp
orb
int3
fcoms
aam
jecxz
adc
rcll
shl
das
cli
cmp
mov
and
push
lret
mov
add
mov
jne
out
aad
push
xchg
incb
cwtl
dec
dec
adc
add
pop
jl
dec
cli
icebp
cmp
jg
in
stos
lods
les
cmp
push
jns
fdivl
out
cmp
cld
mov
jns
test
js
lea
scas
stc
fs
lods
adc
testb
jo
popa
popf
cmpsl
pop
popa
jp
rorb
push
or
dec
sbb
mov
inc
lods
mov
incl
lahf
outsl
push
in
jnp
cmp
inc
pusha
dec
cli
push
repnz
dec
mov
mov
in
add
ret
stc
dec
and
movsb
les
shlb
std
jecxz
mov
xchg
mov
pushf
sub
xchg
aam
rcrl
pop
imul
jb
push
ss
mov
push
xor
push
inc
push
jle
and
shlb
dec
addb
mov
or
loopne
pop
mov
push
in
lock
pop
or
pop
out
jno
ljmp
dec
outsb
cld
add
lock
bound
push
sub
pop
adc
push
fnstsw
daa
dec
sbb
fnstenv
and
and
sbb
dec
dec
adc
add
and
mov
testl
hlt
notl
lret
jle
inc
mov
fcomp
ljmp
aas
inc
xchg
aam
push
pop
mov
movb
mov
in
inc
jl
fistl
outsb
pop
imul
in
sub
cld
mov
sub
lock
sub
out
aaa
fs
jle
push
pusha
fstp
fdivl
fistpll
fwait
icebp
push
add
add
std
add
fsubrl
push
cmc
pop
mov
aad
lock
or
int
scas
mov
or
cmp
sbb
jo
xor
scas
cmp
xlat
data16
lea
adc
cltd
es
jb
or
test
rcr
lret
imul
aam
xor
mov
idiv
mov
imul
jnp
fcompl
lods
ds
mov
push
mov
jae
jbe
movsb
movsl
mov
xchg
xchg
outsl
xchg
add
xchg
mov
push
mov
stc
pusha
outsb
pop
sbb
mov
add
mov
jno
sbb
ror
push
stos
js
hlt
out
add
push
dec
inc
repz
loop
fsubl
dec
jne
popa
cld
jecxz
in
subb
or
mov
push
dec
fnstenv
jnp
rcll
ja
add
push
lea
jmp
and
or
sub
pop
fsubrp
in
cmp
mov
adc
dec
add
lds
or
pop
outsb
aaa
fwait
mov
testb
ljmp
ret
inc
icebp
jno
xor
lret
dec
jne
push
adc
mov
aas
aas
or
dec
mov
cmc
mov
sbb
and
sbb
ja
rcr
cmpsl
cmp
stc
lahf
icebp
pop
adc
push
cmp
xchg
lea
je
mov
stc
cmp
test
pop
daa
fistl
int3
pop
ljmp
or
add
movsb
add
dec
xor
xor
add
outsl
mov
xchg
pop
jb
inc
in
into
add
mov
push
jmp
enter
cli
fbld
push
jns
jae
inc
xor
aaa
stos
push
xor
mov
clc
fwait
mov
in
dec
xchg
cs
inc
cmp
js
popf
enter
jbe
into
mov
in
int3
xchg
cltd
dec
or
out
xchg
pop
arpl
loope
and
cld
and
mov
push
cmp
nop
jg
int
ss
pop
mov
xchg
mov
jno
cld
pop
inc
out
jecxz,pn
xchg
add
out
jmp
insb
jb
cmc
ret
loopne
mov
icebp
push
fdivrp
pop
cld
push
push
shrb
mov
int
jns
sub
int
ss
xor
je
cld
mov
mov
sarl
iret
xor
sahf
sbb
fs
lcall
xor
xchg
jmp
jb
mov
ficompl
std
xor
jne
dec
dec
jge
inc
inc
movsl
jle
ja
sub
les
cwtl
fld
push
push
xchg
or
mull
into
xchg
cmpsl
mov
jecxz
jbe
dec
xchg
and
cli
call
dec
arpl
mov
mov
mov
cmp
xchg
mov
dec
loopne
mov
hlt
jmp
push
adc
mov
bound
scas
fiaddl
fcoms
shlb
adc
lods
pop
test
mov
flds
inc
pop
outsb
mov
flds
inc
push
or
push
clc
jb
fs
std
xor
cmp
stos
sbb
insb
cld
scas
scas
cmp
adc
loop
test
fucom
mov
js
or
inc
imul
or
mov
nop
jl,pn
imul
jg
push
jl
clc
lret
cmp
scas
mov
mov
aad
xor
push
popa
sbb
xchg
pop
xor
sbb
ret
jmp
mov
bnd
or
and
pop
aaa
sysexit
mov
jl
test
imul
add
fsubrs
push
jno
inc
cmc
mov
xchg
sbb
mov
pop
pop
pop
xchg
xchg
jae
fsub
mov
and
jecxz
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
punpckldq
fstps
jecxz
aam
jmp
dec
dec
ret
cmpsb
ret
aaa
dec
shll
pop
icebp
xchg
inc
push
ficoml
mov
and
dec
mov
jge
xchg
mov
xchg
inc
cmp
mov
push
call
and
push
mov
sbbl
pop
sti
jb
jbe
pop
pop
cli
mov
cmp
mov
scas
insb
inc
ljmp
adc
mov
cmpsl
inc
inc
mov
sub
mov
mov
or
call
jmp
push
sbb
jmp
jbe
inc
or
pop
lret
sub
rcr
sub
mov
xor
insb
lahf
add
lahf
cmc
insb
add
int3
daa
inc
das
push
inc
in
enter
xbegin
icebp
add
lahf
dec
or
jg
inc
orb
fdivs
loopne
gs
adc
fsts
xchg
les
les
push
addl
sbb
cmp
add
xchg
or
xchg
imul
xchg
mov
cmp
in
add
in
in
sbb
ja
pushf
sub
inc
lods
push
push
mov
fsubs
dec
push
hlt
loopne
push
testb
xchg
es
mov
or
cmpxchg
jg
cmp
xchg
ficoms
sub
out
testb
mov
iret
inc
das
adc
fwait
enter
xor
addr16
add
mov
xor
loop
arpl
mov
dec
inc
add
mov
in
mov
jle
loope
sbb
and
lahf
mov
or
out
cmp
sbb
das
sbb
cmpb
shll
js
in
pop
push
xor
bound
movsl
mov
push
inc
jp
fists
sbb
rolb
lcall
stc
mov
push
xchg
ret
hlt
repnz
and
xchg
push
cmp
and
in
dec
jbe
fcoms
sbb
outsl
xchg
cmp
jmp
icebp
pop
add
dec
xchg
mov
mov
jmp
push
push
std
xor
sbb
jecxz
pop
add
mov
outsl
sahf
call
out
int
jg
insl
adc
jecxz
cmp
test
dec
mov
js
int3
ret
lret
mov
cld
jge
sbb
sbb
pusha
mov
into
xchg
in
push
mov
jge
int3
lods
pop
cltd
aas
sbbl
adc
sub
pop
mov
mov
repz
xchg
mov
cld
push
imulb
ret
movsl
inc
or
pop
inc
cmp
jg
xchg
add
and
cltd
roll
inc
or
gs
lret
cltd
dec
adc
pop
jno
hlt
or
sti
enter
stos
sbb
push
xor
int
mov
push
mov
push
ss
into
scas
cmp
dec
sarb
pop
adc
mov
call
and
push
jne
aaa
mov
mov
push
lock
cmp
xchg
add
inc
pop
sar
add
push
je
sbb
sub
inc
or
iret
shll
fisubrs
push
cmpl
in
fidivl
in
daa
jb
test
sbb
xor
lea
iret
xchg
fdivs
or
icebp
xchg
out
pushf
js
test
stos
in
pop
jl
enter
or
pushf
js
dec
lret
cmp
adc
movsb
fwait
mov
push
add
not
dec
stos
jmp
mov
loope
cli
mov
mov
cmp
sbb
adc
xchg
add
add
mov
adc
addr16
jl
ljmp
outsb
pop
outsb
sub
xchg
mov
out
xchg
ja
jp
push
adc
push
and
mov
out
pop
rol
xlat
xchg
std
test
add
ftst
rcl
sub
or
je
pop
push
imul
inc
shrl
arpl
jb
notb
repz
pop
pop
inc
cs
call
and
and
mov
xor
adc
test
ret
movsb
sbb
insb
xchg
int3
mov
adc
pop
das
loope
in
mov
xor
mov
popf
mov
xor
leave
cmp
xor
mov
pop
and
dec
jge
ret
cmp
fimull
lea
pop
dec
stc
add
cli
movsb
jnp
mov
aam
jmp
mov
jg
cld
mov
je
test
std
adc
mov
pop
movsl
mov
stc
insl
jmp
lea
test
sbb
dec
int3
mov
push
inc
mov
pop
inc
pop
repz
pop
jge
sti
mov
mov
dec
les
ss
int
mov
or
jl
scas
outsl
adc
stc
sub
int3
insl
dec
xor
int
add
adc
xor
or
cld
mov
jle
fiadds
aam
inc
addr16
mov
adcl
out
mov
add
or
xor
or
sahf
push
push
and
mov
cmc
jbe
jne
add
scas
sbb
xchg
xlat
xor
in
xchg
js
pop
fildll
xlat
xor
xchg
imul
sbbl
adc
shrb
push
push
push
cmp
hlt
int3
cmp
je
or
push
int3
inc
pushf
je
mov
mov
add
fxch
inc
into
cmp
sbb
flds
mov
popa
push
imulb
mov
cli
xchg
dec
call
adc
ficoms
push
or
xlat
ljmp
or
fs
int
dec
mov
orb
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
push
cs
xchg
fimuls
pinsrw
lsl
mov
pop
cld
inc
insb
shrl
out
stc
in
add
jmp
movb
adc
pop
cwtl
nop
and
jno
pop
in
data16
movsb
and
mov
pop
jne
dec
imul
out
movsb
pop
adc
or
stos
cmp
out
push
lcall
lret
testb
rolb
pop
mov
cs
ud1
andb
and
lcall
xlat
jmp
aad
inc
cld
cmp
sarb
lds
mov
aas
mov
inc
shrb
insb
in
xchg
push
add
pop
negb
lret
xchg
push
fwait
in
push
jle
mov
std
enter
fistpll
cmpsl
jnp
pop
inc
adc
sub
fldl2e
push
dec
xchg
in
gs
fmuls
shlb
push
adc
ss
dec
mov
push
cmp
imul
lock
dec
insl
fcmovu
push
bound
aam
bound
rcrl
fidivrs
out
dec
push
mov
jecxz
test
clc
xchg
test
add
int
adc
icebp
mov
xorb
dec
rorb
lds
ds
loope
lods
jge
mov
add
fisttps
lds
fistps
imul
adc
push
xchg
jbe
pop
add
sub
mov
pop
mov
arpl
inc
adc
cmc
mov
lods
shlb
jns
int3
mov
cmp
sbb
test
adc
lret
xor
or
lahf
adc
jl
cmp
or
adc
jo
add
popa
test
mov
mov
jb
push
jg
fstl
adc
rol
movsl
pop
imul
bound
or
pop
push
mov
and
jno
xchg
mov
jns
or
push
jle
int
ret
add
dec
xor
or
cmp
mov
pop
xor
fucom
js
push
and
lret
jnp
je
shlb
aad
and
xchg
std
xor
dec
and
rclw
std
adc
inc
shll
lret
inc
xchg
lahf
movhps
mov
xchg
bound
mov
rclb
bound
and
scas
std
test
mov
inc
push
lahf
push
mov
pop
pop
incl
enter
cli
mov
int
lods
rcr
in
fiadds
cli
mov
test
leave
and
push
out
mov
int
cmp
cmp
sub
rcrb
in
roll
dec
dec
cmp
mov
js
sub
into
lods
subl
popf
push
push
int
xchg
pop
push
and
dec
pop
or
iret
xor
out
xchg
cmp
sbb
in
adc
cmc
mov
push
movb
dec
out
push
or
xchg
enter
imul
mov
xlat
xchg
into
sbb
popf
dec
fs
fs
in
lea
jecxz
rolb
pop
stc
xchg
sub
pop
pop
addr16
xor
mov
inc
sti
test
in
cmp
shlb
movsl
flds
test
stos
fisubrs
into
dec
inc
cmp
mov
jne
xchg
stc
mov
fists
mov
mov
fcoml
decb
jbe
add
jo
enter
jno
loopne
lds
xor
mov
mov
sbb
test
push
subb
iret
fiaddl
xor
arpl
rolb
out
test
pushf
sarl
add
rcrb
sub
imul
jnp
setne
cltd
jno
sti
or
xchg
push
loop
push
sti
add
jmp
or
mov
and
divl
repz
mov
pushf
adc
hlt
jl
je
xor
push
pop
push
inc
stos
sahf
cmc
fimuls
cs
fnstsw
dec
adc
jmp
fcoml
sahf
and
mov
out
idivb
adc
push
hlt
xor
xchg
mov
nop
ja
rol
jecxz
in
push
cmp
jmp
mov
pop
jge
pextrw
sbb
mov
mov
loop
cmp
mov
sub
icebp
lret
sbb
jb
mov
das
nop
sbb
pop
and
fistps
int3
mov
push
and
fdivrl
int
lret
adc
lahf
inc
scas
xchg
stos
es
pop
jnp
jge
js
xchg
add
or
aad
mov
sbb
pusha
mov
add
dec
pop
shrd
mov
xchg
inc
sbb
dec
push
stos
dec
dec
stos
pop
sub
sub
pop
dec
xchg
xchg
pop
xchg
jg
fwait
inc
fs
repnz
popf
fistpll
out
adc
dec
push
push
popf
mov
fcoms
jns
push
lods
jl
inc
inc
jmp
push
les
leave
repnz
or
ret
pop
jl
notl
pop
inc
xchg
and
pop
dec
loopne
add
in
ds
jmp
and
aam
in
dec
and
pop
jge
cmpl
ficoms
pushf
je
cmp
mov
int
sub
sub
cmc
xor
xor
lock
adc
imul
or
lret
stc
ja
jmp
jge
sbb
adc
popa
sub
ss
fidivl
test
in
cld
packuswb
scas
or
dec
mov
insb
decl
or
ljmp
inc
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
pcmpgtw
subb
jl
or
cmc
outsb
sti
enter
add
xor
aam
lods
pop
xchg
inc
xor
aam
add
scas
fimull
push
jns
cmp
mov
fprem
lahf
in
jecxz
out
pop
int3
scas
jle
cmpsl
sbb
inc
inc
out
cld
xchg
inc
mov
mov
sar
push
sbb
push
fs
cmp
sub
imul
jo
mov
cli
xchg
das
sub
xor
mov
jno
in
stos
movsb
mov
xchg
or
or
jle
cs
pop
jns
rcll
je
fildll
lahf
xchg
je
push
cwtl
outsb
mov
gs
sub
cmovno
stc
xor
sti
popa
inc
push
mov
lcall
call
scas
out
dec
mov
jne
mov
mov
cmp
mov
int
mov
jl
stos
bound
cwtl
mov
mov
gs
xor
xchg
mov
ds
cmp
enter
jl
pop
jb
cmp
icebp
cmp
stos
insl
test
mov
hlt
mov
mov
mov
jno
daa
mov
sub
ljmp
mov
sub
sub
rorl
inc
out
mov
push
ss
adc
jb
rorb
lock
and
and
in
imul
movsb
push
dec
sub
sbb
fildl
repnz
pop
int
push
ficompl
xor
scas
pop
sub
insl
std
je
mov
dec
or
cmp
xchg
cmovnp
pop
dec
pop
mov
das
subl
sub
cmp
outsb
aas
adc
icebp
jne
mov
in
popf
mov
pop
lcall
stos
mov
push
fstl
pop
cmp
jecxz
mov
inc
mov
dec
andl
rcrl
rorb
das
xchg
xor
jae
mov
rclb
jno
jns
out
ret
mov
push
jnp
xchg
cld
out
fstl
jns
aaa
shlb
xchg
dec
aas
ja
or
pusha
ja
mov
sub
stos
arpl
and
xchg
fmull
hlt
in
mov
mov
push
mov
aas
out
push
sub
jbe
adc
nop
pop
test
pop
jno
mov
hlt
bound
hlt
jbe
lock
stc
xor
daa
mov
adc
xchg
mov
mov
sub
sbb
sahf
pop
jmp
lods
mov
repnz
push
push
int3
test
arpl
inc
jns
cwtl
mov
inc
fimuls
cmp
test
pop
xchg
lods
mov
sbb
cmp
cmpsb
scas
xchg
shr
or
addr16
dec
mov
adc
mov
mov
scas
loope
sar
subb
orl
imul
rcll
mov
adc
mov
and
cs
fwait
scas
insl
out
insl
dec
in
scas
sbb
pusha
ds
or
ret
mov
fnsave
push
out
cmp
mov
jo
lock
test
notb
mov
xor
mov
cmp
sahf
adc
sub
mov
js
clc
call
arpl
fmull
arpl
inc
jp
pushf
iret
sbb
cwtl
dec
xor
int
ret
sub
inc
mov
setne
adcl
jmp
mov
lods
add
mov
out
lock
cld
insb
mov
scas
jb
clc
popf
mov
cmpsb
and
fs
xor
inc
pop
vmread
popf
dec
push
in
and
jae
mov
cld
sbb
negl
loope
std
sub
mov
addb
mov
pop
stos
loope
stos
or
fnstcw
test
jb
jmp
out
rolb
pop
je
xor
arpl
arpl
jecxz,pt
jbe
add
je
cwtd
inc
jb
inc
add
add
add
daa
je
getsec
insb
push
pop
das
stc
jns
mov
icebp
xlat
movsl
mov
popa
pop
or
sbb
ss
mov
inc
rcr
and
popa
cli
rclb
and
xor
imul
xchg
inc
xor
lds
xor
and
jl
or
shrl
hlt
aas
into
pusha
scas
and
lods
or
les
in
mov
and
push
inc
sbb
xor
in
gs
sarl
sahf
dec
out
sbb
xchg
imul
inc
add
jae
mov
push
fisubrl
jge
fdivs
loope
bound
dec
push
dec
adc
iret
popa
lret
inc
mov
xchg
add
ja
rol
mov
add
jl
incl
mov
adc
mov
pop
push
jbe
loop
inc
les
test
imul
ja
sub
jns
add
push
inc
popa
lahf
rcrb
fdivs
xor
stos
or
sbb
sub
xchg
jge
imul
rorl
push
xor
inc
xchg
cli
inc
data16
cmp
in
arpl
push
xor
divb
push
icebp
mov
in
inc
inc
cmpl
in
fisubrs
dec
in
cmp
mov
push
arpl
push
inc
add
stc
test
dec
mov
sub
and
lret
lods
shrl
stc
mov
mov
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
dec
push
in
rorb
pinsrw
cvtdq2ps
push
and
stos
flds
adc
mov
or
xor
imul
lods
fcmovnb
subl
mov
cmp
mov
dec
mov
ja
fbld
add
jle
xchg
xor
sub
and
cmp
sarl
and
jle
dec
sbb
or
in
stc
pop
pop
xor
mov
mov
xchg
mov
outsl
pushf
ljmp
adc
cmp
hlt
adc
jb
jo
stc
movsb
stos
adc
rorl
fwait
mov
dec
dec
scas
sub
push
mov
xchg
imul
pop
jge
cmpsb
xchg
rcll
xchg
adc
scas
movsb
jmp
sti
mov
cmpsl
imul
jb
fcmovbe
push
movsb
int
aad
mov
addb
mov
sbb
mov
mov
xchg
push
mov
jl
sub
jge
xor
and
cmp
nop
ror
stos
enter
mov
sbb
pop
arpl
mov
imul
gs
pop
push
test
inc
js
fists
sbb
loopne
push
or
mov
pop
clc
jno
icebp
in
mov
sahf
or
nop
or
mov
xchg
sbb
mov
push
mov
mov
in
or
enter
popf
or
cmp
lock
dec
sbb
jbe,pn
out
mov
pop
fs
addb
test
fmull
sbb
js
jbe
popf
add
out
loop
fists
xchg
inc
push
sbb
les
jecxz
sar
mov
outsl
sahf
movsb
inc
dec
daa
push
cltd
test
mov
decl
push
and
rclb
daa
sbbb
arpl
repnz
fldt
cmp
cmp
test
data16
sbb
jo
fcoml
push
jno
mov
pushf
add
es
jmp
imul
pop
imul
ret
outsl
dec
adc
adc
sbb
test
inc
inc
mov
mov
mov
xor
or
clc
cmc
insb
mov
cmp
popa
sbb
lret
pop
les
sbb
mov
scas
call
inc
jl
rorl
push
jl
xor
hlt
adc
cmp
sbb
push
and
push
sbb
mov
push
pop
daa
adc
mov
rolb
dec
das
adc
cmp
fiaddl
adc
sbb
mov
pusha
mov
icebp
dec
imul
out
and
test
aas
xor
repz
cmp
mov
or
push
sub
cmp
sbb
xchg
insb
mov
add
das
xor
pop
clc
inc
sub
push
lahf
cmp
aad
push
mov
mov
mov
lret
mov
mov
pop
cmc
cwtl
fsts
xor
mov
adc
ds
loop
inc
sbb
mov
fbstp
mov
scas
xor
mov
cmpsl
sbbl
mov
nop
ds
imul
int
mov
adc
je
xor
jne
sbb
mov
fdivs
xchg
out
movsl
mov
lret
imul
xor
xchg
insl
cli
je
rorb
mov
loope
std
dec
in
pop
jns
rcrb
popf
inc
fstps
adc
ret
test
pop
mov
lret
xor
dec
aas
movsl
xor
mov
into
dec
jle
scas
outsb
xchg
fidivrs
xor
add
stos
sub
cltd
repz
out
cmp
mov
cmp
shll
movsb
scas
scas
iret
xchg
cwtl
into
fldenv
inc
dec
clc
hlt
sbb
les
sub
pop
and
divb
cmp
dec
dec
pop
xchg
push
ljmp
push
sbb
in
mov
movsl
rorb
pavgw
push
aaa
ss
xor
ficompl
mov
sbb
repz
sbb
and
pop
inc
jbe
insb
cmp
out
aad
jae
scas
test
mov
in
mov
adc
add
cmp
add
push
lods
mov
jecxz
dec
test
cmpsl
loope
or
mov
pop
sub
mov
in
or
jno
mov
lods
and
test
mov
pop
push
cli
push
clc
xchg
adc
dec
femms
inc
jb
in
cmp
jnp
enter
cmpsl
addr16
push
outsl
dec
les
lcall
movsl
js
andl
xchg
mov
push
idivl
jb
sub
adc
sbb
lock
pushf
push
int3
push
xlat
cmp
add
sub
stos
jbe
pop
in
xor
ficoms
dec
add
xorl
test
jecxz
mov
sub
mov
sbb
and
adc
inc
mov
gs
shl
ret
out
inc
inc
out
push
mov
lcall
cmp
sbb
pushf
jo
push
shl
fistl
cwtl
outsl
mov
inc
imul
scas
add
ss
test
movsw
pushf
cmp
mov
outsb
lahf
jg
stc
js
inc
sbb
loopne
jecxz
faddl
jbe
sub
dec
mov
lods
les
arpl
frstor
jl
mov
adc
push
or
pop
sbb
mov
movsl
stos
cmp
xor
negl
mov
add
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
cmpsb
adcb
les
movnti
and
cmc
pop
push
dec
push
cmc
jecxz
jnp
xlat
mov
inc
push
mov
int
in
mov
inc
inc
stc
sub
or
out
pushf
xchg
pop
jge
cli
nop
cli
sub
xchg
cmp
mov
test
subb
or
hlt
or
sbb
test
insl
dec
dec
gs
add
add
push
and
push
sbb
fisttps
cmpl
rclb
faddp
cltd
fst
fidivs
fsts
push
ja
pop
dec
sub
sbb
mov
mov
je
je
je
test
xor
xchg
mov
ljmp
aas
aaa
dec
rep
xor
enter
xchg
je
popf
in
rcl
inc
pop
mov
jnp
ret
inc
stc
mov
andl
std
xor
push
addb
cmp
addb
push
inc
cmp
mov
jmp
pop
enter
test
loopne
or
add
out
es
jecxz
dec
add
mov
lock
aaa
lock
jns
sbb
or
inc
mov
iret
sub
dec
jp
inc
leave
jno
gs
arpl
jnp
dec
movsb
inc
xchg
cmp
cmp
or
loopne
and
adc
mov
popa
mov
shlb
ljmp
and
push
lds
or
daa
aad
leave
xor
in
stc
cli
loope
dec
shl
ja
adc
push
sub
sbb
stc
insl
int
sbb
adc
cmc
lcall
aad
fistl
fnstcw
icebp
pop
cmc
js
lret
loop
push
mov
jb
add
rcrl
sub
and
lret
xchg
inc
sbb
add
shlb
lods
adc
ret
aaa
mov
out
xchg
outsl
out
cmp
mov
mov
cmp
in
scas
add
faddl
mov
add
sarb
xchg
fdivr
lock
lret
mov
fwait
mov
daa
push
xchg
test
in
mov
repnz
sbb
out
rcrl
cmp
pop
push
xor
jne
add
add
in
jp
loope
mov
or
sarl
sbb
mov
push
xchg
lcall
orl
ret
roll
adc
jns
aam
aam
sbb
mov
jmp
nop
jne
enter
shrb
sbb
or
mov
int3
fs
sbb
rcl
sbb
jle
cs
dec
mov
lcall
rcrl
or
scas
pop
movsb
push
lret
out
es
pop
add
dec
mov
mov
sbb
sahf
mov
jmp
adc
jno
mov
out
fisttps
call
lea
push
add
xorb
add
jns
xchg
sub
enter
inc
lea
arpl
dec
pushl
mov
lcall
sbb
loope
and
aas
insl
xchg
jne
mov
ljmp
rcpps
add
ficoms
push
or
and
adc
rorb
outsb
cmp
xchg
push
sbb
rolb
dec
inc
in
scas
popf
mov
cmp
adc
or
fnsave
add
int
xor
fs
pop
mov
dec
jmp
push
notb
int3
and
mov
or
xor
push
icebp
mov
cmc
and
pop
dec
push
aam
bound
inc
jns
jp
aam
push
push
test
add
shll
shlb
outsl
xor
ret
insl
mov
jo
in
push
dec
rcl
in
testl
pop
int3
dec
cmp
stc
ftst
cmp
xchg
int
or
adc
pop
push
inc
dec
jne
insl
loop
bound
mov
jl
and
js
push
or
ret
mov
loopne
imul
mov
out
nop
or
idivl
mov
push
jg
mov
popl
out
pop
mov
and
jb
and
sbb
mov
out
jno
bound
stc
mov
ficoms
mov
rolb
in
mov
iret
sbb
iret
and
inc
das
add
xor
mov
dec
sbb
sti
cmp
jne
out
scas
cltd
jb
enter
add
movsb
xchg
scas
popa
adc
sub
inc
mov
mov
pop
nop
lods
jmp
je
mov
outsl
pop
imul
repz
sbb
jo
push
sub
pop
lods
mov
cltd
cmp
fsubrs
xor
adc
jb
jne
into
repz
inc
movsb
popa
loope
xchg
fldl
jo
jne
ret
jg
jecxz
add
inc
xchg
es
sub
mov
dec
jnp
add
adc
addl
fs
mov
inc
call
std
add
mov
and
test
xchg
jle
ror
sub
adcb
inc
adc
cmp
xor
xchg
daa
test
ds
fstps
jle
fistl
ljmp
cmp
mov
or
pusha
push
lcall
fwait
cmp
mov
mov
and
stos
jp
pop
test
lds
pusha
pop
jl
stc
add
shlb
cmp
and
xor
movsb
enter
out
dec
es
es
les
popa
cli
jno
mov
push
or
dec
dec
fcompl
fldcw
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
fs
data16
pinsrw
cmova
mov
pop
hlt
fstpl
mov
jp
jno
sub
mov
push
repnz
aaa
or
into
popa
mov
lahf
repz
adc
xchg
mov
fwait
outsl
nop
loopne
push
pop
pop
adc
fadds
adc
adc
jne
mov
cmp
jno
in
inc
push
adc
pusha
lret
jb
adc
imul
adc
push
repnz
sbb
sub
ds
stc
mov
mov
xchg
in
pusha
outsb
inc
repnz
pop
add
or
test
dec
movsl
fldl
cmp
int3
xchg
rorb
cmp
mov
fwait
mov
and
scas
rcr
jl
and
fwait
arpl
out
push
je
arpl
lahf
sbb
mov
test
inc
add
fidivl
icebp
sbb
cmp
or
fwait
sahf
sub
pop
inc
rclb
lcall
mov
add
aad
in
mov
stos
enter
jg
mov
sub
add
xchg
add
pop
xchg
jmp
decb
or
push
push
mov
dec
js
push
fsubrs
inc
in
cmp
or
sbbl
nop
jge
out
add
push
and
lret
js
into
and
movsl
xor
popf
adc
repnz
pop
add
jnp
sti
iret
pop
fs
mov
pop
movsb
sbb
mov
push
lds
sub
adc
cmpb
pop
mov
adc
and
mov
loope
xor
mov
clc
leave
sbb
lret
sub
lock
add
xor
dec
fs
ret
adc
pop
inc
push
call
mov
add
loopne
adc
or
pop
mov
xchg
jmp
sbb
iret
dec
out
cltd
aad
jge
daa
pop
stos
js
cltd
shll
inc
adc
pop
push
sbb
jmp
inc
aas
cli
ja
jle
push
call
sub
dec
repnz
rolb
leave
xchg
outsl
sbb
test
push
mov
dec
ja
mov
xchg
das
and
sbb
sbb
test
mov
sti
cmpsl
stc
test
loopne
stos
imul
xor
xchg
je
inc
push
sub
jmp
mov
outsb
mov
out
xlat
insb
xchg
sti
sbb
out
stos
std
xchg
pop
std
jb
int3
cli
jne
rcll
enter
pusha
add
movsl
lea
cmc
int3
jnp
cmp
mulb
add
fisttpll
and
pop
dec
push
aas
mov
popf
icebp
mov
jno
icebp
adc
mov
cmp
cs
lret
jp
fst
mov
dec
out
cli
mov
sti
or
adc
pop
pavgw
fadd
fsubr
cmp
xor
xor
adc
xchg
xchg
push
aaa
imul
movsl
iret
add
dec
jl
das
cmp
xor
in
ret
out
push
mov
dec
sub
push
pop
inc
mov
mov
testl
jle
xchg
pop
or
lock
push
adc
jge
push
pop
dec
addr16
sub
jmp
loopne
push
xchg
arpl
scas
pop
lret
xchg
shll
and
in
pop
scas
shll
and
push
imul
ret
jl
mov
push
dec
sub
stos
into
sbb
pop
and
daa
push
adc
test
cmp
addb
jp
arpl
add
out
bound
sbb
dec
push
das
ds
shll
jg
in
lock
dec
sub
inc
push
rcr
mov
int
aad
jp
fdivl
xor
mov
jb
fnstcw
iret
push
shl
into
dec
pushf
std
dec
push
fs
lret
add
sub
sub
dec
insl
mov
cmp
mov
xchg
out
and
xor
xor
and
cs
inc
inc
add
jb
test
cwtl
fisttps
clc
and
lods
mov
fs
out
jne
movsl
push
aam
loope
adc
lret
jae
inc
loope
sub
xchg
leave
pop
std
or
outsl
int3
lret
mov
dec
push
outsl
mov
cmp
inc
les
dec
jns
notb
dec
mov
pop
mov
das
jnp
popf
fs
mov
enter
mov
imul
movsl
addb
pop
sbb
int
xchg
mov
xchg
das
push
ja
sbb
mov
das
add
cmp
jne
hlt
lahf
jno
mov
or
sahf
xchg
jecxz
pop
xor
repnz
jno
jo
xlat
lock
test
or
adc
inc
insl
cltd
add
insl
inc
jmp
hlt
je
sbb
pop
test
outsb
add
cs
xchg
mov
movb
xor
subl
test
add
jmp
addr16
leave
or
push
outsb
lds
cmpsb
mov
xchg
add
leave
xchg
lahf
mov
stc
mov
xchg
leave
pop
pop
cwtl
or
sarb
loope
scas
out
add
dec
ret
sbb
lods
jno
xor
stc
jo
aaa
jno
outsl
std
push
shlb
sub
push
jns
pop
push
into
mov
cmc
xchg
add
push
pop
inc
bswap
or
xlat
jne
insl
jmp
stc
popf
inc
cmpl
pop
lcall
adc
push
cmp
daa
sbb
in
jg
and
in
gs
outsb
pushf
divl
test
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
jp
pop
xchg
or
lgs
adc
cmp
mov
xor
out
cmp
cmp
mov
jg
test
dec
aaa
inc
xchg
add
inc
hlt
ds
mov
or
sub
push
xchg
or
test
add
mov
push
mov
cwtl
pop
jbe
hlt
test
outsb
mov
sbb
arpl
add
rcll
cmpsl
lods
xor
gs
and
bound
dec
int3
fdivrl
stos
mov
cmc
int3
adcl
gs
adc
xchg
xchg
mov
test
inc
loopne
lods
push
jae
push
xchg
and
arpl
sbb
cmp
and
push
shlb
ret
push
push
xchg
sbb
xor
fwait
sbbb
cmp
cli
or
dec
add
clc
or
jbe
inc
pop
pop
jne
fldt
scas
cmpl
dec
sbb
fistps
imul
push
daa
jne
mov
negb
mov
inc
pushf
shr
lods
lea
sti
inc
dec
int3
add
mov
inc
xor
push
jge
push
or
out
pop
xchg
xchg
inc
mov
sbb
in
and
in
mov
cli
orl
mov
scas
enter
test
into
das
mov
outsl
add
push
rolb
inc
loope
loopne
xor
mov
arpl
clc
pop
outsl
aad
cmp
and
jne
or
xor
aas
xchg
dec
outsb
les
enter
jno
pop
mov
mov
adc
fidivrl
scas
xchg
push
push
mov
in
arpl
idivl
push
and
pop
ds
lret
mov
push
fsts
lods
mov
xor
cmp
stc
je
jbe
pop
or
add
gs
lcall
sub
sbb
cli
push
imulb
cwtl
std
adc
inc
stc
push
mov
fidivs
adc
in
int3
mov
mov
test
jl
xchg
push
fldt
xor
enter
adc
mov
inc
mov
orb
aad
adc
ret
int
dec
mov
hlt
mov
lret
mov
cmpsb
mov
test
jecxz
stos
mov
pop
and
push
mov
aaa
add
dec
insl
lock
adc
dec
lret
into
loopne
mov
push
mov
int
add
or
xorb
scas
push
or
xor
push
xchg
mov
sbb
jae
jl
dec
mov
sbb
into
sbb
sahf
xor
xor
push
cltd
adc
dec
jno
cmp
pop
shll
test
cwtl
loope
out
push
inc
adc
mov
push
and
andl
jae
jecxz
repz
fisubl
push
gs
rcrl
lds
fldcw
adc
sbb
and
lret
sub
orl
fbstp
sbbb
imul
sbb
and
and
mov
pushf
scas
push
or
lds
call
mul
out
ja
push
sub
into
adc
fcomps
jl
enter
mov
push
mov
dec
pusha
xor
inc
lds
adc
add
ja
mov
xor
mulb
mov
jl
push
dec
loop
fildl
push
nop
sub
mov
and
ja
sub
jno
xchg
insb
or
cmp
jmp
or
pop
fucomi
shrb
mov
xchg
int3
imul
mov
outsl
shrb
imul
fstl
sub
cmp
push
push
imul
add
ret
add
sbb
mov
jno
stos
pop
cld
mov
adc
fsin
rcr
jno
or
and
lods
pop
pop
inc
outsb
sub
xor
mov
jns
xor
popf
adc
jmp
mov
jp
mov
fdivrs
fmul
push
mov
popa
movsb
repz
push
stos
jb
cwtl
fwait
repnz
adc
inc
andl
mov
push
scas
rcll
and
add
jae
push
lds
dec
cltd
mov
pop
shrb
test
and
ret
and
jle
sbb
pop
sbb
mov
enter
pop
or
push
fldt
inc
cmp
addl
lahf
test
sarl
mov
push
push
push
daa
in
or
stc
adc
sahf
sub
dec
scas
mov
sub
sub
fdivr
fwait
add
lahf
inc
mov
hlt
pushf
lods
xor
lods
cld
jno
mov
shr
jb
sbb
xchg
cltd
es
rolb
cmc
repnz
jno
bswap
mov
dec
and
and
xor
arpl
mov
mov
cmp
xchg
lahf
sarl
sub
ffree
or
fucomip
in
push
xchg
testl
sbb
aaa
faddl
pop
mov
popf
ficoms
and
or
testl
pop
fisubl
rclb
and
jnp
push
fdivr
popa
bound
jne
sub
enter
or
mov
jns
inc
xchg
sub
lock
sarl
fisubrl
add
mov
dec
sub
mov
mov
xor
fidivl
rcr
sbb
jne
jecxz
sti
jl
std
xlat
push
pop
push
and
lret
pop
and
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
call
mov
ucomiss
test
inc
shll
popf
mov
sbb
pop
push
cmp
cmpsl
mov
add
jmp
pop
xor
movsb
inc
pop
fiaddl
sub
push
push
fwait
xlat
test
and
push
xor
jb
pop
inc
add
sbb
or
dec
push
xor
xor
int3
sub
out
xchg
inc
xor
in
aas
xchg
dec
push
fnstsw
add
mov
out
jge
dec
adc
mov
lods
in
sbb
jbe
shlb
adc
pop
push
and
or
cmp
push
xlat
das
sub
mov
push
pop
xchg
or
pop
cmp
outsb
cmc
add
sbb
mov
fldcw
iret
adc
int
ficoms
xor
jb
clc
orb
mov
call
stos
fs
pop
sub
cwtl
cmp
jmp
mov
test
and
or
lahf
gs
jmp
add
pop
shll
mov
inc
jl
pop
sbb
fwait
add
sbb
out
push
cmp
lock
int
mov
in
and
xchg
pop
mov
push
ret
data16
mov
cmp
xor
pop
fmuls
adc
daa
and
xchg
add
cmpsb
pop
call
and
out
adc
xorl
inc
pop
test
mov
shll
adc
xchg
cmp
push
mov
jb
sbb
stos
ss
mov
inc
nop
lret
fistl
mov
je
sub
pop
add
mov
in
int3
in
jb
xchg
or
sbb
insl
mov
jnp
imul
int3
mov
jno
cmp
aaa
repz
fstpt
ret
xor
sub
cmp
or
inc
and
inc
xchg
lahf
mov
jl
sub
in
imul
mov
push
mov
fldl
dec
ret
inc
inc
mov
imul
adc
xor
fcomps
xchg
lods
cs
push
inc
faddl
mov
jb
movsl
cmpb
mov
dec
jg
dec
ss
ret
and
lods
push
cli
call
xchg
sar
jg
sbb
test
cmpsb
sbb
fisubs
adc
pop
adc
push
sarl
cld
sbb
outsb
xchg
or
mov
imul
pop
push
popa
sub
add
out
adc
xor
adc
imul
push
test
sub
scas
sbb
mov
lret
jbe
or
shr
xchg
daa
fsub
inc
inc
sbb
mov
push
xor
enter
jo
ds
and
mov
or
mov
dec
mov
sbb
push
mov
sub
pop
inc
ret
jl
add
adc
push
sub
add
mov
imul
xor
push
test
fisubl
mov
and
sub
sti
jecxz
sbb
pop
xor
addr16
leave
stos
mov
dec
clc
pop
test
mull
mov
lret
popa
jnp
iret
push
sub
in
popa
xchg
out
xchg
jecxz
cmpsl
cmpsb
jb
into
sub
int3
cs
daa
rcrl
sub
dec
lods
dec
or
nop
mov
test
pusha
mov
xchg
pop
loopne
pop
xor
idivl
dec
push
mov
mov
and
add
or
xchg
test
sbb
jecxz
arpl
mov
jecxz
ljmp
aas
into
dec
mov
pop
add
sti
pop
andl
cmp
outsb
lret
hlt
loopne
push
mov
pop
mulb
bound
loopne
push
nop
cs
jnp
dec
out
ret
jge
mov
ss
sbb
fwait
mov
mov
and
subb
test
jmp
inc
mov
shll
and
sbb
into
je
xchg
dec
mov
pop
dec
lea
cmp
dec
in
mov
cmp
push
push
lock
sub
repnz
bound
mov
mov
push
sbb
rcl
pop
repnz
les
sti
jnp
jmp
cmp
jnp
ja
push
mov
xlat
sar
xor
xor
mov
ja
clc
stos
shlb
out
in
dec
sarl
cld
xor
stc
sbbl
stos
xchg
xor
clc
pop
shll
jg
mov
mov
cmpsl
or
sbb
mov
add
mov
add
lods
es
dec
xlat
aaa
xor
orb
jbe
imul
lea
out
rorl
in
mov
cwtl
xlat
inc
shrb
pop
dec
cmp
pusha
shrb
mov
aaa
sahf
jle
aaa
xchg
lods
test
sub
jne
xchg
mov
push
daa
push
insb
scas
fmull
pop
gs
xchg
or
dec
and
mov
hlt
mov
mov
sahf
xor
and
xor
dec
pusha
xchg
ret
jmp
add
or
and
js
sub
scas
jnp
sti
flds
jnp
mov
fcomps
cltd
lret
ljmp
pusha
mov
lea
push
fwait
lahf
daa
je
mov
rcl
mov
and
and
es
mulb
xchg
mov
icebp
leave
push
cltd
sub
out
rorb
inc
repz
adc
int3
adc
and
add
cmp
lcall
inc
add
jge
call
sub
inc
add
xor
stc
arpl
xor
push
je
hlt
jmp
repz
bound
sbb
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
pop
xchg
adcl
jns
sbb
sbb
jne
fcmovu
xchg
lods
cmp
mov
or
test
in
movsl
mov
lds
ss
and
popf
int3
rcrl
mov
jl
sbb
adc
movsl
xchg
push
outsl
fsts
xchg
sub
ds
cmp
sbb
fdivrs
test
inc
daa
into
ljmp
mov
xchg
mul
xchg
push
cmpsb
cmp
xchg
in
or
fistpll
mov
add
inc
mov
fstl
lcall
push
dec
push
add
repnz
xchg
outsl
insl
out
mov
hlt
pop
lock
cld
scas
js
fistpll
and
fbld
shl
add
jo
add
scas
mov
add
mov
ss
nop
add
out
mov
jo
out
movsl
inc
pop
jle
xchg
mov
pop
add
add
inc
test
stc
cwtl
into
mov
adc
pushf
cs
rolb
fiadds
and
mov
sbb
ja
push
add
rcll
adc
lret
pop
gs
xor
icebp
mov
pop
fildl
imul
repnz
mov
add
add
or
mov
cmp
iret
jl
fisttpl
sub
jecxz
ret
data16
loopne
inc
outsl
ss
mov
lahf
cmp
xchg
pmulhuw
lahf
push
pop
movsl
mov
enter
ret
std
les
hlt
push
mov
and
or
pop
dec
mov
xchg
sub
add
lcall
push
lcallw
add
mov
mov
fcomip
add
mov
xor
ja
in
mov
mov
inc
xchg
pop
xchg
fdivrs
ficoms
push
fs
jmp
push
rcrb
nop
mov
mov
xchg
sbb
push
cli
and
fdivl
scas
lods
js
jae
cs
mov
int3
pop
mov
aad
xchg
clc
aam
or
addr16
das
scas
cmpb
inc
stos
jo
icebp
adcb
mov
mov
mov
jnp
pop
lds
jmp
sarl
and
push
fcomi
push
js
jg
push
movsl
aad
xchg
mov
aam
stc
loope
cmp
mov
inc
sbbb
mov
arpl
popa
lods
icebp
mov
cmp
add
jnp
lods
in
out
fimull
mov
testb
mov
out
aam
stos
jo
push
jb
dec
ljmp
clc
mov
fs
xor
jmp
pusha
les
cmp
daa
xchg
inc
xlat
adc
dec
mov
into
adc
test
xchg
ret
pop
inc
sub
or
ret
out
sub
sbb
mov
xor
in
hlt
hlt
xlat
push
imul
daa
and
mov
in
enter
icebp
pop
xchg
dec
aaa
out
or
das
cmp
aaa
push
fnstcw
lods
mov
lahf
fstpl
jae
sarl
or
testl
test
xor
mov
mov
sub
jp
cmp
out
bound
fisttpll
dec
cld
ds
xchg
jb
xchg
loope
leave
mov
shlb
and
outsb
ja
push
cmpsb
push
mov
pop
std
cmp
cs
xchg
jae
flds
aam
scas
add
mov
jmp
lods
jg
into
ret
jnp
iret
loope
scas
sub
shrb
dec
and
inc
sti
xorl
mov
stc
sahf
sbb
mov
pop
data16
out
jns
scas
mov
fs
or
add
dec
ljmp
add
or
scas
andb
cmp
test
subl
lods
pushf
subb
sub
mov
mov
adc
push
dec
add
adc
adc
dec
sbb
insl
dec
aad
pushf
and
xchg
fs
data16
aaa
adc
das
mov
int3
outsb
add
insl
cmp
movsl
dec
fdivrp
or
xchg
and
cmpsb
dec
mov
test
push
or
sbb
jno
and
outsl
mov
mov
or
xor
mov
imul
lret
sub
js
ret
mov
xor
leave
jmp
scas
daa
mov
push
xchg
icebp
repz
push
in
outsb
jbe
jecxz
aas
adc
shlb
jb
stos
cli
cmp
inc
aad
mov
and
sub
iret
loopne
mov
mov
ret
sub
pop
dec
add
cld
aas
jg
leave
movsb
push
jns
clc
std
test
sub
inc
into
ss
cs
mov
xor
movsl
adc
inc
mov
cmp
in
push
push
repnz
mov
int
sub
xchg
dec
sti
sub
xchg
or
aam
sub
scas
jb
lock
jmp
sbb
lret
pop
push
repz
mov
adc
jne
xchg
mov
sub
adc
dec
pop
mov
xor
mov
mov
pop
ljmp
sbb
js
and
data16
xchg
rolb
scas
ljmp
mov
lcall
iret
xor
into
push
in
mov
cmp
dec
sti
ret
jae
pop
cs
adc
imull
push
jg
xchg
cwtl
jb
ss
movsb
icebp
sti
pusha
pushf
jno
das
add
fwait
sbb
cmpsl
mov
add
ffreep
in
mov
fsubs
push
pop
popa
dec
jl
mov
and
cltd
fiaddl
dec
xor
adc
aam
rol
inc
xor
or
mov
aas
add
cwtl
int3
jle
pop
dec
and
int
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
mov
push
mov
add
arpl
jae
adc
int3
adc
mov
aam
ss
stos
jbe
arpl
jb
out
nop
sbb
mov
cmpsb
pop
xor
rclb
dec
cltd
mov
mov
cmp
stos
pop
or
mov
add
movl
imul
pop
enter
sbb
sarb
sub
adcl
notb
or
jnp
jmp
arpl
aad
negb
lret
push
adcb
push
dec
adc
sarl
jge
fsub
loope
aas
mov
fst
push
shlb
and
dec
dec
pop
data16
ljmp
sbb
jge
fdivr
cmp
mov
jmp
jmp
cltd
pop
lods
faddl
jle
add
scas
repnz
add
and
std
sbb
cli
mov
addr16
cld
add
xchg
pushf
repz
loop
hlt
push
xor
shr
data16
xor
mov
mov
jmp
pop
aas
insb
scas
mov
cmp
jne
cmp
movsl
or
cmp
jno
xor
mov
push
xchg
outsb
out
xchg
fnstcw
lods
out
cmp
leave
daa
cmp
arpl
xchg
cmpsb
call
fldcw
mov
mov
mov
mov
xchg
popa
ret
xchg
jbe
jbe
fs
scas
in
rorb
daa
or
out
adcl
arpl
inc
jmp
mov
mov
mov
pusha
jge
pop
or
mov
xchg
aaa
jg
fnstsw
addr16
into
fadds
adc
filds
sbb
dec
mov
int
adc
icebp
imul
and
cs
xchg
mov
fwait
test
cmp
je
or
hlt
adc
stc
mov
shrb
add
xorl
jne
sbbl
std
or
pop
and
insb
jmp
pusha
icebp
adc
icebp
lods
sub
sbb
inc
fwait
imul
push
add
pop
xchg
scas
xchg
sbb
mov
mov
and
mov
sbb
scas
pop
inc
ret
xor
push
mov
sub
adc
in
sub
scas
clc
sbb
arpl
cwtl
lds
imulb
cmp
int
jb
mov
cwtl
mov
lea
mov
mov
fwait
sub
ss
test
je
fistpll
ljmp
sbb
in
sbb
pop
cmp
mov
aas
dec
fsubrs
shl
inc
mov
mov
andb
sub
fldenv
scas
jns
or
dec
cmp
sub
inc
and
aam
cmp
adc
jg
std
jno
outsl
jb
xchg
sub
repz
pusha
cmp
xchg
sub
inc
subb
push
cmp
loop
mov
cmp
and
fmull
push
sub
in
inc
iret
dec
mov
or
jge
xchg
sbb
dec
pop
adc
std
add
pushf
sti
stos
add
adc
leave
testb
insb
lods
pop
cs
xchg
cwtl
outsb
jns
adc
inc
push
cli
sub
pop
sub
adc
add
jae
push
xor
stc
rcr
popf
xchg
int
into
mov
dec
push
jo
fsubs
or
adc
loope
lea
jge
mov
xchg
sub
xchg
std
les
jnp
fisubrs
pop
sahf
sbb
out
out
gs
bound
loope
jp
stc
nopl
inc
leave
add
cwtl
sub
cli
pop
xor
inc
iret
ret
in
xor
mov
cmp
nop
inc
psrlw
xchg
repz
or
cmp
lds
jae
cltd
add
into
sub
std
adc
or
test
hlt
inc
in
popw
ja
stos
addr16
adc
dec
enter
dec
mov
imul
mov
addb
jnp
andl
or
sbb
cmc
cmpb
popa
sbb
lcall
sarb
sarl
cld
jg
jno
dec
inc
jg
mov
xor
pop
push
mov
hlt
rcr
aas
mov
pushf
mov
ds
aaa
in
jo
cwtl
jecxz
push
in
sbb
inc
popa
push
add
movsb
cmp
jmp
fdivrl
fs
mov
and
push
push
cmp
mov
mov
iretw
std
outsb
test
pop
adc
in
lret
and
adc
pop
xchg
or
clc
pop
test
inc
cld
sbb
xchg
mov
mov
jmp
test
out
xchg
add
int3
push
dec
bound
stc
movsl
repz
fdivl
and
cmp
dec
jno
ficoms
in
mov
ja
testw
in
jmpw
jns
int3
jmp
std
sbb
popa
mov
cmpsb
add
fldl
daa
jle
xchg
push
fmul
frstor
aaa
mov
mov
mov
and
mov
adc
mov
or
lahf
jne
mov
insb
jne
dec
push
fwait
lods
sub
add
jbe
cltd
aam
inc
xchg
dec
sbb
mov
cld
jb
insb
outsl
adc
in
inc
and
and
cmp
lea
mov
inc
sbb
sti
xlat
pop
push
xchg
xlat
or
leave
mov
mov
in
push
dec
das
add
and
cmp
jp
inc
loope
add
jnp
xchg
mov
stc
clc
jne
dec
and
in
outsb
loope
loope
outsl
lods
pop
cmp
mov
std
mov
mov
adc
cmp
iret
sbb
into
dec
std
pop
ret
inc
imul
sub
xchg
clc
add
das
shll
push
subl
pop
jg
iret
pop
mov
test
cmp
mov
stc
lods
stc
scas
dec
xor
rorl
loop
add
sbb
sub
stc
test
pop
mov
push
pushf
pop
out
mov
push
cld
jmp
xor
jb
push
dec
outsb
mov
jns
stos
mov
cmpsb
dec
ret
mov
notl
ds
xchg
fldenv
mov
xor
loop
icebp
pop
rolb
sti
jge
fidivrs
stos
pop
sbb
sar
or
je
icebp
icebp
jmp
xchg
fdivp
push
push
jb
inc
lahf
addr16
inc
sub
mov
je
mov
je
lret
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
dec
rclb
add
mov
xchg
dec
mov
push
cmp
in
pop
mov
and
movsb
ret
push
cmpsl
clc
mov
sub
jne
dec
sbb
jb
test
xchg
mov
shl
mov
xor
mov
loope
sub
sub
setbe
xchg
dec
outsl
add
cltd
fcmovnu
cmp
sbb
sub
add
adc
mov
fs
scas
sti
enter
loop
or
sub
dec
inc
sbb
mov
fildl
out
dec
push
xor
push
jae
xchg
pop
in
add
adc
mov
test
int
pop
push
repz
lret
sahf
jo
in
test
xchg
ud2
adc
rcrl
sbb
cmp
sub
icebp
pop
jmp
xchg
adc
dec
ja
mov
xor
cwtl
cmpsl
adc
or
push
loope
mov
mov
orl
xor
mov
xor
xor
push
pop
xor
insb
pop
lock
push
or
pop
out
das
in
inc
push
pop
imul
jbe
mov
jmp
xchg
test
insl
xchg
adc
or
call
hlt
push
icebp
stos
or
aas
jg
xchg
ret
test
inc
sbb
dec
int3
bswap
and
pop
stc
jbe
cmp
imul
or
mov
dec
jl
and
sub
mov
pop
and
xchg
or
rolb
arpl
std
add
stos
movsb
cltd
cltd
movsl
push
cmp
pop
cmp
push
mov
mov
adc
shl
jns
pop
fidivl
xchg
push
loope
pop
jne
push
and
test
enter
and
adc
std
jecxz
mov
mov
fs
mov
pop
fucomi
mov
shl
aam
jnp
sub
pop
aam
sbb
jno
fidivrs
or
cltd
jmp
mov
fwait
add
mov
push
push
push
fldl
xlat
clc
push
jnp
stos
jo
and
pushf
in
inc
and
stos
jne
mov
cltd
ret
mov
mov
push
in
fnstsw
fs
push
push
hlt
mov
mov
inc
mov
test
or
pop
xchg
mov
cmpsb
or
gs
adc
popf
ret
push
mov
mov
ja
dec
pop
ss
in
std
sbb
cmp
lods
push
sbb
jle
rorl
pop
pop
rcrl
xor
cmpsb
repz
test
mov
pusha
inc
pop
or
icebp
sub
and
shl
jl
in
cmpsb
jne
negl
call
or
popf
cmc
mov
fnsave
call
dec
dec
fnstenv
inc
jns
push
cmc
xchg
cltd
stos
jbe
cli
pushf
mov
shrb
out
pusha
out
shl
inc
push
push
outsl
mov
int3
adc
xor
clc
gs
jp
ds
xchg
mov
xlat
xor
xchg
jb
repz
jmp
lahf
and
push
mov
test
popa
cmp
shrl
xchg
dec
sbb
daa
mov
clc
pop
xorl
mov
jae
mov
mov
rcll
shrl
test
sub
xor
add
lds
adc
mov
out
jnp
inc
fs
jnp
jnp
in
hlt
mov
cmpsl
mov
orb
lods
jge
jl
addr16
xchg
enter
test
out
imul
shrd
cmc
pusha
mulb
inc
daa
cmpsb
cmpsb
mov
jmp
dec
cmc
pop
push
andb
dec
mov
inc
out
dec
sbb
int3
adc
arpl
fistps
movsb
inc
xchg
dec
arpl
sti
in
rorb
aaa
pop
sub
ss
mov
int3
pop
sbbb
mov
sbb
stos
mov
dec
pop
pop
or
jb
cmc
out
into
arpl
push
fs
pop
imul
pushf
stos
push
mov
jo
outsl
iret
fisubrl
stc
int
xchg
fidivrl
add
das
push
inc
mov
cmp
int
jmp
out
xor
sbb
das
cli
inc
mov
jl
mov
sub
cs
enter
rcrl
ret
mov
pop
fmuls
scas
dec
sbb
lret
cmp
rclb
test
add
xchg
arpl
stos
fldt
loopne
subb
jo
cwtl
ret
cs
movsl
xor
jecxz
push
clc
inc
les
mov
dec
sub
lret
andb
int
notb
xchg
in
push
mov
pop
or
cmc
stc
js
jbe
mov
inc
adc
arpl
or
xchg
mov
aad
cmp
xchg
imul
inc
mov
ljmp
in
rcl
ds
maskmovq
imull
inc
push
lcall
cli
js
pop
and
mov
lret
inc
rorb
addr16
dec
aad
adc
jmp
gs
scas
test
inc
push
pop
mov
push
and
inc
decl
sub
mov
adc
sar
jg
in
setae
into
nop
test
pop
sub
scas
mov
pop
and
mov
xchg
nop
cmp
xor
adc
dec
outsl
aaa
mov
inc
repz
fs
es
push
lret
jmp
push
jno
or
lcall
sbb
mov
xchg
mov
adc
mov
les
push
push
mov
in
std
stos
jno
testl
insl
and
pushl
xchg
xchg
fs
jae
bound
add
mov
out
call
jecxz
dec
or
stc
xor
insb
arpl
sbb
bound
mov
xchg
lret
popf
and
and
push
lret
dec
add
ljmp
mov
add
inc
push
add
lock
xchg
lods
jae
fidivrl
and
inc
test
sbb
in
movsl
in
or
outsl
scas
mov
cmc
xor
fidivl
cmc
pop
xchg
mov
pop
xchg
in
rcrl
cmp
jmp
insl
push
out
xchg
pop
mov
or
push
sub
inc
pop
mov
sub
xabort
movsl
xchg
flds
mov
fcoms
xor
cmp
std
sbb
adc
mov
bound
fidivrs
cmp
cld
mov
xchg
xor
push
and
mov
into
dec
sub
inc
mov
ja
xor
pushf
cmp
push
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
stc
inc
jp
stos
pop
add
cmp
insl
cmovle
pop
cmpsb
add
aad
mov
in
in
pop
xor
out
in
cs
lret
mov
ljmp
add
enter
mov
icebp
ds
fnstcw
leave
enter
fsubrp
mov
insl
ds
fnsave
xor
inc
jno
shll
jbe
scas
xchg
ret
ficomps
mov
jno
pop
gs
xchg
push
int3
orl
jns
in
inc
cwtl
cmpsb
imul
data16
dec
mov
lods
insb
mov
add
es
xchg
sahf
fs
sub
xorl
sbb
or
push
bound
lods
lods
cmc
bound
jle
cwtl
mov
movsl
mov
mov
out
iret
cltd
shll
mov
jg
inc
cli
jp
jbe
ljmp
lret
add
sbb
xlat
inc
outsl
into
jg
mov
add
dec
aaa
jno
xchg
je
out
hlt
outsl
cmp
push
rcl
fcmovb
mov
or
enter
mov
xor
loopne
int3
adc
ljmp
out
push
pushf
push
leave
xchg
adc
sub
inc
imul
sbb
xor
das
cmp
or
and
xchg
insl
sbb
cmp
dec
adc
loopne
jo
inc
movb
js
testl
jmp
and
and
jnp
fidivs
xchg
lods
mov
mov
popl
into
insb
xor
mov
inc
adc
mov
insl
xchg
cltd
fiadds
shrb
testb
xchg
inc
cs
mov
dec
stos
test
mov
bound
adc
jl
test
popf
mov
jns
push
xor
xchg
pop
je
cwtl
mov
inc
push
push
mov
mov
inc
dec
rcl
mov
rcrl
or
hlt
xor
rcll
imul
or
or
test
stos
in
shl
push
xchg
or
lret
fimuls
sub
ret
rcrb
int
test
mov
pop
out
jl
add
and
enter
pop
outsl
imul
jecxz
inc
fs
and
jno
adc
cltd
push
test
add
in
cmp
pop
stc
data16
adc
and
and
adc
out
xchg
fsub
xor
xchg
xchg
adc
pop
ljmp
xor
sbb
pop
add
adc
push
lret
ret
add
fdivr
mov
ss
out
maxps
clc
test
jns
ds
mov
push
daa
nopl
xchg
push
ljmp
aas
sub
in
mov
fidivs
pop
mov
cmp
test
xchg
ss
xor
fstps
int3
idivl
es
je,pt
adc
sub
fs
pop
push
movl
mov
loopne
adc
popf
jg
cmp
jnp
mov
cltd
jnp
cmp
iret
ja
mov
push
jne
pop
jno
dec
mov
js
enter
jae
lods
addr16
cmc
cwtl
fnsave
jmp
lahf
cltd
adc
clc
push
aas
icebp
and
dec
jp
in
or
scas
dec
rol
mov
lock
les
insb
cwtl
and
les
dec
loopne
sbb
mov
enter
xchg
outsb
dec
mov
push
or
ja
xor
lock
xorl
pusha
push
loop
fwait
sbb
loopne
add
mov
cmpsl
mov
xlat
pusha
sbb
arpl
sub
subb
mov
fldenv
js
adc
divl
aam
dec
xchg
adc
gs
insl
aaa
sarl
jmp
lock
fstps
mov
and
or
jno
xchg
mov
inc
or
sub
fadds
xchg
test
lahf
jo
xchg
mov
jns
xor
push
enter
addb
cmpsb
dec
mov
pop
mov
les
jge
fwait
ss
sub
push
lock
lods
dec
scas
mov
ljmp
daa
push
push
outsl
mov
mov
std
mov
cmpsl
or
adc
lcall
xor
pop
ret
and
inc
cs
dec
cmpsl
clc
pusha
mov
lret
movsl
jne
mov
loopne
insb
mov
push
loop
imul
sub
pop
fldl
fwait
lcall
cmp
inc
inc
lahf
jmp
insb
in
push
or
xor
outsl
hlt
mov
pop
lods
push
jns
aad
pop
mov
shrl
ss
or
xchg
out
push
inc
sti
cmp
mov
push
call
lret
ret
dec
hlt
aad
and
and
xor
shlb
and
and
jp
jbe
ror
and
fsubrl
sbb
mov
dec
sbb
cltd
jb
je
pusha
sti
xor
dec
dec
subb
shr
les
int
or
stos
inc
jmp
imul
sarl
sbb
dec
jge
mov
icebp
and
cmp
je
repnz
jns
fwait
dec
adc
test
insb
fsubrs
xor
daa
mov
jns
test
xor
decb
lock
gs
addb
push
std
sbb
push
and
les
sub
pop
jo
adc
cltd
movsb
movsl
bound
cmp
jne
mov
pushl
mov
xlat
jbe
xchg
mov
movsb
push
outsb
push
shll
movsl
out
mov
mov
push
xor
jno
inc
lret
jmp
in
dec
inc
dec
or
shll
inc
push
adc
mov
cmp
mov
test
hlt
lea
cmp
outsl
mov
mov
push
fiadds
sbb
mov
addr16
mov
jecxz
jmp
xchg
lcall
dec
outsb
test
mov
inc
das
sbb
push
mov
inc
fwait
mov
je
mov
sahf
xor
add
aad
xchg
mov
popa
add
repz
cmpsb
loopne
pop
in
repnz
or
mov
pop
out
cmp
dec
lret
push
lahf
test
inc
test
leave
or
push
and
pop
mov
push
imul
push
mov
or
add
ja
mov
sub
push
jnp
lds
test
or
mov
negl
xchg
xor
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
or
dec
add
addr16
lds
push
test
pushf
mov
movsl
movsb
mov
cli
adc
pop
lods
in
adc
xor
jno
jp
js
inc
mov
fistl
mov
adc
jbe
arpl
xchg
fs
mov
gs
and
xor
lret
pop
sub
dec
sbb
loop
hlt
push
sub
das
and
hlt
pop
in
popf
loopne
and
sarl
or
jne
xchg
aad
mov
and
mov
aam
lahf
xchg
mov
mov
fistpl
neg
popf
mov
push
sbb
aam
rolb
lods
jno
jp
jbe
pop
sub
fwait
repnz
jmp
mov
fcompl
dec
cmp
inc
push
push
iret
bound
push
xor
mov
in
inc
push
scas
xor
mov
inc
push
ss
and
test
add
je
inc
scas
add
and
lcall
mov
xor
fldcw
xor
add
cwtl
cmp
push
adc
subb
cmpb
in
lcall
aaa
ret
jge
jne
lock
mov
lds
mov
or
cmc
call
jl
aad
mov
push
sbbb
mov
xchg
imul
addb
test
jl
mov
test
mov
je
mov
or
cmpsb
cwtl
in
in
mov
stos
xchg
faddp
mov
mov
add
jle
or
out
aas
jne
addr16
sub
adc
sti
es
jno
cmpsb
push
sahf
out
add
sti
add
subb
cmp
fidivl
cmp
pop
or
cmp
cmovbe
jae
xlat
cmp
add
pop
add
or
mov
test
movsl
cmpsl
jecxz
dec
test
or
add
inc
jge
dec
jae
mov
stos
or
inc
aaa
aaa
stos
sub
dec
movsl
int3
insb
sbb
stos
subl
call
sti
iret
pop
loopne
push
dec
and
push
fucom
imul
jo
dec
ljmp
adc
pop
lret
popa
pop
add
divl
test
xchg
jl
mov
in
movsl
jg
push
cmp
outsb
mov
scas
mov
fwait
mov
stos
test
mov
pop
mov
test
stc
jno
imul
sub
adc
mov
jge
repz
pushf
test
xorl
stos
cltd
out
mov
sbb
test
and
dec
divps
inc
xchg
adc
mov
out
rcr
xchg
cwtl
jno
fxch
cmpsl
push
push
sar
adc
es
das
push
rclb
mov
ret
and
rcrb
push
or
push
pop
cmp
fsts
push
sti
flds
fdiv
mov
mov
push
jmp
xchg
int
sti
aad
pop
and
inc
inc
mov
sahf
jae
sub
and
mov
push
test
sti
add
fstpt
sarb
in
js
cmp
in
jo
dec
loop
push
insb
es
lea
mov
arpl
leave
jmp
pop
sahf
inc
roll
mov
sub
jo
adc
gs
push
lret
cltd
gs
int
in
and
pop
popf
xor
pop
loope
or
inc
rcrl
cs
ljmp
add
out
xchg
xor
test
inc
push
pop
mov
cmpsl
push
mov
ss
inc
mov
cmc
adc
adc
insb
and
and
mov
and
mov
pop
add
scas
loop
add
ror
push
dec
fimuls
aam
mov
scas
cmpsl
insl
sbb
sahf
mov
lock
popf
pushw
test
adc
cmp
popa
push
jg
in
fadd
call
outsb
popf
cmp
xchg
sub
mov
gs
lds
int3
dec
xor
sbb
shll
dec
fwait
pushf
dec
mov
or
imul
sub
es
pop
cmc
mov
jecxz
sti
inc
inc
xor
iret
fldenv
mov
lret
stos
inc
xor
push
mov
push
gs
and
push
pop
pusha
jge
push
into
scas
inc
cmpsl
inc
gs
dec
push
sub
mov
cmp
cld
xor
push
xorb
or
sarl
popf
xchg
addr16
movsl
movsl
shll
push
lret
or
shlb
cmp
pop
sbb
push
push
pushf
mov
jns
or
push
sub
push
testb
aas
xchg
push
sub
mov
out
clc
dec
push
mov
aas
cmp
das
push
adc
js
dec
adc
addr16
into
sarb
push
add
cmp
js
mov
daa
test
mov
movsl
outsl
xchg
mov
or
and
jbe
sub
outsl
outsb
int
jb
inc
lea
dec
mov
mov
icebp
cmp
mov
cmp
stos
lahf
push
shl
lock
push
sub
andl
movl
lods
sub
adcb
scas
xchg
pop
pop
adc
inc
inc
ror
and
test
insl
icebp
mov
stos
ds
movsl
mov
movsb
push
and
xchg
pop
mov
mov
cld
fadds
enter
mov
jl
orb
xchg
inc
sbb
fsubl
ficoms
sbb
frstor
dec
fisttpl
jmp
mov
stc
mull
dec
sbb
sub
jmp
jne
xor
dec
pop
stos
mov
xchg
xchg
xlat
dec
jne
mov
dec
lods
std
fiadds
test
es
xor
gs
xorl
std
sbb
cmp
mov
andl
fs
add
ret
in
mov
jle
push
test
push
dec
pop
sar
shr
mov
sub
add
pop
dec
stos
bound
andb
mov
pusha
divb
mov
in
hlt
repnz
js
std
fdivr
and
mov
pop
imul
adc
mov
pop
lret
sbb
adc
mov
dec
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
pop
fs
push
add
dec
inc
add
ret
sbb
adc
out
ss
mov
jb
cwtl
sti
std
lds
inc
fidivrs
xchg
hlt
lock
mulb
pop
add
adcb
push
cmp
shl
push
les
cmp
xchg
pop
insl
cmp
mov
jecxz
out
mov
out
jmp
xlat
cmp
xchg
xor
insl
sbb
fadds
popa
jle
cmc
mov
ret
mov
xchg
or
jmp
push
es
inc
dec
xor
in
pop
lds
pop
inc
mov
or
push
stc
lret
push
out
lock
add
jmp
push
push
inc
ret
lods
mov
cs
cmpsl
cwtl
ja
mov
dec
push
pushf
popa
loopne
add
test
rol
scas
cmpsl
movsl
dec
cli
fidivs
xor
inc
movsb
cs
mov
dec
and
pop
inc
nop
dec
out
push
sub
loopne
aam
lea
pop
cli
lock
xchg
push
leave
loope
loope
adc
push
cmp
lahf
jb
pushf
push
pop
divl
sub
pusha
xlat
arpl
or
cmp
movsl
add
mov
rcrb
adc
mov
pusha
int3
aas
dec
cmpsb
xchg
ds
push
xorb
sbb
mov
mov
cmpb
push
insb
stc
xor
add
cli
iret
mov
repz
test
mov
out
pop
jbe
xchg
sti
sub
leave
mov
xchg
cmp
jb
fidivl
lcall
pop
data16
in
std
stos
out
lahf
jl
cmp
adc
mov
aam
adc
push
cmp
xchg
mov
ror
mov
mov
mov
scas
in
movsb
push
fnstsw
cmp
bound
pop
mov
xlat
xchg
fildll
movsl
stc
aad
sbb
mov
enter
orl
jmp
nop
mov
mov
adc
mov
inc
sbb
orl
cmp
dec
cmpsl
fsts
in
pusha
cmc
clc
out
ljmp
lock
test
insb
mov
das
dec
sti
sti
dec
ficompl
insb
outsb
push
jb
lret
stos
enter
or
sbb
cli
int3
ret
in
mov
and
inc
lock
mov
pop
jno
lea
ds
movsb
sti
pop
xchg
leave
pushf
fstl
lret
push
aas
sub
sahf
or
pop
xchg
or
xor
repnz
cmp
lods
mov
repz
outsb
nop
sub
stos
hlt
das
and
pop
call
dec
js
mov
adc
cmpsl
sbb
add
shrb
fwait
and
mov
stc
std
aaa
outsb
sbb
dec
push
mov
fldcw
xor
xor
dec
dec
out
push
cs
pop
sbb
lock
mov
movsb
push
mov
call
pop
repz
cmpsb
mov
sbb
and
pop
arpl
pop
xlat
std
ret
inc
push
popf
push
adc
push
fldenv
addb
inc
dec
push
gs
add
sbb
jg
mov
pop
mov
loopne
jno
mov
adc
js
jae
inc
daa
imul
aas
ficoml
push
mov
das
mov
ret
xchg
aaa
or
pop
mov
pop
jle
mov
adc
mov
mov
test
jmp
mov
mov
stc
stc
daa
cmp
pop
stos
cld
ja
mov
stos
pop
sub
lods
data16
sbbb
int3
jb
sub
add
int
lret
sub
es
add
addr16
ret
inc
call
aas
and
fisttpl
adc
enter
xchg
fst
sbb
add
ja
jp
jbe
xchg
mov
rolb
mov
out
mov
in
daa
movsb
out
and
mov
sbb
gs
js
dec
leave
cmp
lds
cmp
xor
aaa
fisttpll
pop
in
arpl
push
sbb
inc
es
ljmp
mov
cmp
pop
not
dec
jmp
inc
data16
in
mov
scas
add
dec
popa
dec
push
pop
mov
icebp
fwait
jne
shrl
std
mov
repnz
out
lods
out
stc
adc
xchg
inc
pop
in
pop
leave
pop
or
call
sbb
dec
mov
lea
cmp
out
test
enter
rol
mov
ret
insb
pushf
cld
sub
movsl
js
nop
push
mov
fldl2e
adc
int3
push
dec
sbb
insl
out
adc
jo
xchg
push
pop
adc
in
fistpl
adc
nop
xchg
sub
push
mov
mov
mov
cmp
lock
iret
dec
cvtps2pd
dec
faddl
movsb
xor
aas
jne
pop
push
rcrb
pop
jecxz
or
stc
jmp
pusha
xor
push
inc
push
nop
or
xchg
adc
xor
xchg
jle
inc
loop
js
dec
sbb
das
leave
jbe
gs
cmp
add
or
jne
adc
jo
aas
scas
in
or
sub
ss
sbb
fcoms
sbb
cmp
nop
mov
push
push
cmc
nop
addr16
lahf
push
adc
test
pushf
push
ret
sbb
dec
push
ja
add
inc
xchg
lods
xchg
jecxz
xor
out
jmp
inc
imul
stos
iret
adc
add
xchg
sub
dec
cmp
pop
xor
cmp
pop
shrl
pop
outsl
sahf
mov
mov
imulb
pop
sub
xchg
insb
add
arpl
push
inc
pop
ret
scas
push
pop
ss
mov
mov
push
ja
jo
cmc
jmp
sub
loopne
inc
mov
dec
mov
pop
pop
adc
outsb
adc
comiss
bound
frstor
popf
push
aam
or
frstor
pop
shlb
out
outsb
dec
jmp
dec
and
push
in
mov
sbb
dec
out
rcrb
loopne
imul
imul
mov
or
inc
pop
sub
negl
cmp
cltd
cmp
test
jae
mov
gs
ja
in
icebp
insb
scas
jecxz
ficoms
aad
negb
cmp
int3
js
jge
push
mov
nop
in
insb
out
mov
cmpsb
pop
stos
adc
adc
pop
xor
mov
insl
fisttpl
mov
inc
rorb
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
adc
add
es
call
mov
repz
pushf
adc
loopne
fcompl
jnp
push
mulb
dec
and
mov
jp
dec
mov
mov
sbb
dec
ret
mov
mov
rcrb
pop
outsl
add
shrb
jle
out
push
cmp
adc
mov
popa
addb
loop
push
lea
fucom
xchg
and
cmpsb
mov
push
lret
xor
xor
movsl
jmp
pop
jle
cmp
mov
cmpsb
xorb
add
popf
aaa
add
dec
mov
mov
ficomps
shlb
pop
cs
rcll
xchg
pop
stc
cmpsl
loopne
add
imul
iret
daa
xchg
pop
movsb
mov
inc
arpl
sbb
movsl
xor
ljmp
and
sub
sbb
cmp
or
and
push
and
mov
dec
adc
sub
and
pop
in
pcmpeqb
outsb
enter
sbb
add
jnp
lock
loope
ffreep
cmc
int3
pop
jno
lret
rcr
xchg
sar
xchg
fxch
and
dec
mov
and
lret
rcll
orb
sbb
jmp
in
inc
mov
adcb
xor
dec
gs
push
or
inc
in
popa
rolb
lret
jmp
out
adc
jbe
out
pop
and
push
add
xchg
inc
pop
push
mov
push
sbb
mov
fs
lods
cmpsl
stos
pop
cs
push
sbb
xchg
sbb
cwtl
add
cmp
mov
sti
cltd
push
cmp
inc
inc
std
xor
daa
dec
movsl
fsubs
mov
in
repz
sbb
mov
mov
imul
in
arpl
in
mov
adc
into
insb
or
add
sbb
and
jbe
inc
xchg
dec
data16
xor
ret
cmp
icebp
jns
fmull
repnz
cmpsl
pop
push
pop
jns
push
jb
and
test
push
sub
in
sub
cmp
sbb
rcrb
xchg
std
rcrl
dec
mov
test
clc
jge
fdivl
cltd
sbb
dec
sub
mov
pop
sti
inc
and
out
cld
lock
push
mov
call
and
lea
xchg
lret
data16
shrl
mov
lahf
sub
cs
test
pop
xchg
jns
mov
out
mov
mov
cmpsb
and
outsb
sub
jmp
xor
jge
mov
sub
pushf
mov
nop
fs
push
into
jge
jmp
pop
jno
mov
push
add
out
std
jae
out
jb
jmp
mov
mov
lods
mov
cltd
clc
out
jnp
jns
jae
nop
sar
adc
mov
add
aad
es
call
hlt
es
sub
fs
xor
adc
xor
sub
js
insl
jne
aas
imul
les
gs
or
in
jnp
sub
jg
dec
out
fs
mov
adc
stos
fistpll
out
inc
fs
jno
scas
pop
jno
lods
xor
jno
mov
pop
icebp
jno
std
dec
insb
fisttpl
add
dec
movsb
fsub
ja
mov
mov
jnp
xchg
sub
cwtl
xchg
bound
inc
rcll
mov
enter
shl
sub
jmp
jge
js
loope
lods
or
into
cmpsl
pop
loopne
dec
std
aam
mov
movb
shlb
ficomps
cmp
and
mov
icebp
clc
dec
add
enter
add
jge
rorl
aaa
sbb
inc
ret
mov
cmpsl
cli
adc
inc
dec
ljmp
mov
in
push
ds
dec
add
sub
outsl
and
es
out
insb
pop
pushf
lea
inc
aas
imul
pop
jmp
dec
inc
mov
dec
enter
icebp
leave
cltd
call
ret
sub
dec
jne
jle
or
xor
or
push
inc
or
jb
ljmp
pusha
arpl
adc
sub
js
ds
xor
fwait
test
adc
rolb
jnp
lods
sbb
in
imul
inc
mov
leave
inc
inc
std
xchg
cs
xchg
lods
stos
pop
sub
inc
mov
enter
jge
dec
xor
out
mov
fst
or
hlt
pop
jnp
jmp
inc
jns
popf
fnstenv
mov
push
fidivrs
pusha
dec
rorl
cwtl
mov
sahf
or
mov
es
dec
pop
add
stos
loopne
or
bound
xchg
inc
sub
jle
push
test
sub
push
and
jo
xchg
add
std
pop
dec
out
mov
push
inc
mov
pop
xchg
in
pop
adc
and
pop
cltd
bnd
fstpt
dec
or
sub
dec
xchg
in
jbe
cmp
aas
stc
mov
adc
cwtl
pop
fildll
mov
cmp
lcall
int3
int3
imul
jne
xchg
jno
imul
xchg
sub
cmpsl
xlat
rcrb
je
les
dec
push
jo
and
push
push
leave
sbb
in
lret
mov
or
add
cltd
and
in
out
dec
and
in
pop
mov
cmp
adc
incl
ret
pop
xor
xchg
jb
leave
xor
xchg
lgs
cs
and
out
mov
sti
rorb
jb
ss
push
movsl
adc
andl
dec
fistps
mov
lret
jl
scas
adc
xor
add
inc
push
xchg
mov
xor
mov
out
mov
aad
or
ror
stos
outsb
fcmove
sbb
pop
insl
daa
or
mov
out
decb
ret
mov
movsl
lahf
add
jle
sub
ret
jae
xchg
pusha
sbb
fmul
cmp
xchg
and
repnz
adc
imul
mov
outsl
xchg
test
push
stos
jnp
arpl
lea
add
ret
and
xor
adc
into
leave
or
jb
sub
jl
dec
int
mov
adc
push
adc
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
sub
shll
add
out
iret
xchg
inc
push
mov
push
add
fs
pop
outsb
fldenv
xor
in
mov
test
fs
pop
jge
and
xchg
mov
bound
and
mov
movsb
je
lahf
shrd
xchg
jge
flds
xchg
lods
loopne
subl
push
xor
adc
test
push
push
sub
out
cmp
movsl
dec
movsl
aad
cmp
mov
pop
sarl
pop
dec
cltd
ljmp
inc
stc
push
fwait
mov
inc
jno
adcb
enter
add
inc
mov
div
stos
arpl
dec
cmpsl
mov
lds
testl
mov
sbb
xchg
daa
lcall
gs
xchg
ret
xchg
sub
cld
subl
adc
pop
sahf
inc
and
lahf
cmp
mov
jno
mov
popf
xchg
lret
std
ss
xor
shlb
movb
popa
jmp
ds
mov
push
ds
out
sahf
psllw
lahf
mov
or
xchg
fsub
mov
outsb
les
sub
cmp
leave
sub
les
push
and
shlb
dec
jns
scas
jns
add
aas
jl
fucomp
into
repnz
mov
jno
sbb
inc
movsb
adc
movsl
push
adc
xor
pop
dec
inc
arpl
out
mov
cmp
sbb
and
inc
pop
inc
pop
pop
mov
int3
jp
rcrl
sti
cmpsl
push
and
mov
pop
dec
mov
repz
xchg
jbe
aaa
pop
shll
add
mov
fildl
mov
xchg
push
mov
repnz
push
inc
stc
loop
es
call
subl
pushf
xchg
push
rorb
ret
xsaveopt
pop
and
jae
cmp
movsb
jge
adcb
daa
repz
xchg
imul
mov
popa
and
mov
outsl
xor
pop
addr16
inc
mov
jb
cmp
mov
iret
push
push
popf
aad
adc
sbb
xor
sbb
cli
cmp
je
decb
dec
sub
cmpsl
sbb
jecxz
pop
mov
popa
adc
cld
mov
ja
les
mov
inc
int3
add
jnp
sbb
xlat
mov
xor
pop
mov
pop
inc
pop
cmp
pop
cmp
mov
pop
add
adc
call
imul
mov
mov
mov
into
mov
mov
cs
dec
lds
lret
andl
sub
loopne
stos
xor
inc
int3
or
push
movsl
xor
and
and
mov
mov
xchg
stos
in
inc
decl
and
mov
popa
push
scas
das
lcall
sub
cwtl
mov
in
out
fs
pushf
in
jl
sub
adc
pop
xor
push
dec
cmpl
rol
scas
add
call
cmc
push
xchg
scas
jecxz
cwtl
sbb
jbe
call
jp
mov
jecxz
jmp
mov
scas
push
fcoms
cli
sub
lods
xchg
pop
aas
add
iret
lock
xlat
fs
add
cltd
adc
icebp
xor
jno
adc
stc
mov
sbb
mov
adc
fildl
or
dec
inc
sub
add
das
out
mov
test
cs
std
pop
jle
mov
adc
hlt
scas
jae
cmp
mov
sub
cmp
repnz
les
fwait
mov
fdivrs
mov
push
adc
sub
and
std
dec
loopne
pop
dec
pop
xchg
adc
sub
mov
loop
xchg
mov
xchg
int
jmp
les
mov
cmpsl
test
xchg
cltd
insb
rolb
movsl
mov
into
cmp
dec
adc
scas
jb
cld
test
lcall
aas
xchg
cs
cmp
int
jae
mov
mov
inc
mov
mov
gs
push
push
shll
jge
mov
add
int
stos
cltd
repz
pop
shlb
mov
xchg
xor
test
cmp
shll
push
data16
fnsave
insl
mov
mov
cmc
imul
fsubrs
sub
inc
dec
jge
push
sbb
pop
or
loopne
in
cld
xchg
push
out
stos
inc
scas
rolb
lret
mov
pop
jno
mov
mov
adc
mov
mov
fimull
lret
cld
or
dec
ss
in
dec
enter
xchg
sub
add
daa
gs
mov
xchg
cmp
or
mov
filds
push
scas
sub
push
lahf
cmp
sub
xchg
stos
dec
call
mov
pop
incb
iret
loopne
call
cld
daa
inc
pushf
add
sbb
aaa
aad
pop
jae
fisttps
loop
or
cmpsl
adc
leave
into
loope
push
fisttpll
ss
daa
adc
lock
mov
or
mov
vmovshdup
xor
pop
insb
jp
sbb
jno
and
cld
mov
xor
pop
test
mov
xchg
nop
dec
sub
mov
xchg
lods
ret
mov
mov
jb
mov
inc
and
jno
out
jge
xchg
and
sub
jno
lods
imul
fisttpll
dec
icebp
lods
neg
out
mov
xchg
stos
or
and
shrl
pusha
insb
adc
xor
xor
jge
fwait
jl
in
lods
out
jg
inc
sarl
ja
and
popw
and
adc
and
das
pop
fs
jbe
popa
lret
shlb
inc
in
andb
mov
add
ds
and
data16
cli
xor
adcb
mov
push
cmpsl
mov
std
mov
mov
roll
inc
fldlg2
jecxz
cltd
inc
sub
add
pop
ljmp
imul
mov
clc
stos
or
scas
pop
je
inc
mov
repz
nop
cmc
icebp
cmc
hlt
dec
mov
xchg
clc
sub
loop
dec
dec
lds
and
cmp
jne
ret
fistpl
jb
stos
cmp
mov
inc
rorl
clc
repnz
pop
and
push
sub
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
add
add
mov
sbb
add
mov
xor
add
popf
mov
xor
icebp
mov
dec
mov
and
jp
hlt
pusha
sub
addb
jo
pop
and
jae
sbb
mov
test
dec
repz
sti
mov
dec
lcall
icebp
pushf
cmp
dec
push
les
xor
roll
sub
out
and
or
sub
cmp
lock
push
clc
lods
es
sub
mov
lcall
cmp
push
mov
movl
sbb
insl
sub
call
hlt
or
stc
frstor
icebp
cltd
ss
jp
lods
lret
jne
mov
dec
loopne
ss
hlt
mov
pop
adc
scas
rcl
add
or
jbe
mov
and
into
jge
ret
insl
scas
jbe
lds
outsl
in
ja,pt
les
test
test
lret
pop
lea
js
add
xor
mov
sbb
mov
sbb
jo
dec
fs
or
iret
jp
daa
jmp
push
pop
out
inc
stos
jmp
mov
cltd
pop
xor
or
sub
aaa
adc
xchg
mov
mov
incb
cmc
insl
jp
insl
std
xor
stc
adc
dec
fildl
aad
add
xchg
jnp
sbbb
sub
pop
jbe
sbb
xchg
cmp
into
loope
je
loopne
fs
orl
ror
mov
stos
dec
out
lcall
test
leave
cmp
and
mov
xchg
test
test
jl
fnsave
lds
xchg
push
movsb
xlat
jne
jl
jle
test
aam
ljmp
std
sub
mov
test
and
mov
push
push
sbb
xor
jmp
pop
sub
lock
icebp
outsb
mov
push
push
shl
fcoms
xchg
push
mov
mov
cltd
loopne
icebp
ret
ja
cmp
push
mov
sarb
test
stc
ljmp
xchg
mov
mov
aad
or
mov
mov
and
das
jp
rcl
adc
cmc
push
pop
adc
xchg
jbe
repnz
in
or
outsl
std
sahf
jp
cmpsb
push
movb
orb
jbe
add
dec
cltd
jg
push
push
sbb
sub
push
and
sbb
pop
inc
adc
inc
mov
cmc
repnz
sub
cmp
xor
aam
call
mov
cmpsl
cmp
sbb
sub
test
std
xlat
jno
pop
sbb
mov
and
pushf
fs
and
xor
push
jmp
hlt
pop
pushf
adc
ja
mov
loop
aam
jbe
jge
adc
xorl
aas
rolb
jne
loop
in
dec
push
ret
bound
jne
cmc
ret
shll
jp
dec
cmc
mov
cmp
dec
inc
test
ds
cmpb
fcompl
imul
incb
mov
sbb
sub
fistpl
std
push
test
stos
pusha
stos
pop
fwait
fwait
push
push
jecxz
jg
in
hlt
mov
movsb
lods
pushf
push
xor
imul
stos
or
inc
mov
cwtl
popa
iret
mov
or
loopne
sbb
fst
mov
xlat
add
push
cmp
lock
and
iret
inc
push
and
adc
xchg
or
rcl
xor
jne
leave
bound
adc
enter
mov
faddl
pop
jecxz
xchg
mov
sub
daa
out
adc
les
sar
cli
xor
lahf
leave
lock
adc
jae
test
xchg
cmp
aam
in
jns
or
lods
es
aad
les
xor
stos
in
jo
ljmp
pop
push
mov
push
sub
das
stos
popl
sub
dec
hlt
xorb
inc
mov
sub
in
jae
in
xchg
shll
push
pop
adc
dec
es
mov
popf
out
lock
stc
stos
je
adc
inc
cs
xchg
inc
cld
insb
jb
mov
out
rcrl
cmpsb
icebp
loopne
test
push
add
or
mov
js
fwait
push
fs
lods
sbb
pushf
outsb
daa
daa
testl
movsl
and
ror
sub
push
cmpsl
jae
and
cmpsl
push
cmpsl
aad
push
mov
push
inc
rclb
std
imul
mov
dec
popf
xor
icebp
loope
ja
in
add
arpl
hlt
pop
aam
jbe
icebp
mov
push
iret
ljmp
popf
pusha
inc
out
addr16
popa
mov
je
shrl
adc
orl
push
mov
pushf
mov
push
scas
xor
in
push
push
cmpsb
fidivrs
sbb
dec
xchg
aad
pop
pop
movsb
dec
dec
popf
adc
in
mov
lods
xlat
mov
pop
and
jbe
std
mov
or
inc
sbb
mov
jge
insl
and
cmpsb
ficomps
and
popa
pop
cli
push
data16
lds
add
mov
push
gs
out
mov
mov
jge
xchg
cltd
scas
cmp
imul
fwait
iret
cwtl
ficomps
dec
cmp
lret
xchg
push
xor
rcr
lock
mov
pop
repz
push
xchg
loopne
enter
stc
lcall
out
inc
mov
or
std
in
idivl
stc
add
in
adc
jmp
pop
xor
xor
in
inc
nop
cmpsb
inc
outsb
pushf
xchg
adcl
and
les
rclb
add
inc
leave
fisttpl
shlb
lods
or
sbb
cmp
adc
lods
sub
cwtl
xchg
sbb
hlt
pop
sbb
hlt
push
repnz
jmp
adc
jno
lahf
stos
pop
js
cmc
es
popf
into
dec
lock
push
xor
lods
adc
int
jns
dec
mov
mov
nop
and
adc
inc
test
push
inc
pop
jo
clc
dec
jb
in
dec
enter
das
ja
pop
mov
repnz
hlt
lods
jns
repnz
lret
aas
popf
xchg
pop
subb
xchg
dec
ja
and
dec
push
mov
inc
jb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
inc
or
add
or
popf
outsl
push
fists
xchg
inc
add
pop
push
pop
pushf
push
inc
mov
fstpl
pop
jle
sbb
mov
mov
sub
jmp
jb
xchg
ret
stos
scas
inc
andl
test
fdivrs
push
pop
inc
pop
aas
push
cmp
pop
inc
and
int
gs
dec
inc
inc
fstpt
into
inc
in
xlat
xor
push
daa
cwtl
inc
jne
adc
pop
or
xchg
fstpt
enter
leave
test
push
cmpsb
das
add
mov
dec
stos
ljmp
pop
jae
add
cld
aam
xor
repnz
gs
bound
push
sbb
movsb
pop
cld
inc
jb
clc
test
adc
sbb
mov
cs
add
sbb
sbb
inc
xchg
pushl
iret
push
push
dec
std
cld
idivb
aad
leave
mov
cmc
repz
jne
cltd
inc
je
cmpsl
aas
mov
bound
cs
dec
jbe
test
out
mov
fwait
inc
sbb
sub
mov
outsl
cmp
insl
enter
test
jmp
mov
pop
dec
outsl
bnd
rorl
jnp
jae
rcr
movsl
push
pop
mov
or
mov
ret
in
xor
sbb
mov
mov
sub
test
push
adc
sbb
shl
test
rcrl
cwtl
inc
dec
xchg
bound
dec
leave
cs
rclb
xlat
add
mov
xchg
cwtl
out
sub
mov
dec
pop
rorl
nop
mov
inc
fstps
js
xchg
xor
test
add
popa
mov
call
mov
into
mov
xchg
mov
addl
aas
mov
sahf
sub
inc
mov
bound
pop
jnp
cmp
push
jl
mov
loope
push
dec
insb
and
and
sub
xchg
outsb
jb
out
insb
dec
pop
xor
les
lret
pop
out
jg
inc
sub
inc
mov
xchg
roll
push
mov
out
repnz
push
repz
xchg
mov
sub
mov
out
xchg
shrl
xchg
inc
aaa
out
xchg
sub
aam
fstps
or
sbb
inc
pop
mov
cltd
out
dec
jl
jnp
aas
mov
cmp
xchg
sarl
outsb
adc
fmulp
cmp
jmp
pop
push
mov
icebp
pop
imul
inc
add
jo
out
dec
sub
mov
xorl
hlt
popf
pop
inc
out
dec
pop
lds
pop
or
mov
cld
xchg
dec
cmp
push
cmpsb
lds
inc
sbb
popa
push
lcall
jmp
xchg
cmp
xchg
movb
cmp
cmp
lcall
insb
push
icebp
mov
or
dec
push
rol
das
xchg
ret
dec
lods
push
int3
cmpsb
or
jne
lret
mov
cmp
aaa
inc
xchg
and
sbb
ja
ret
mov
lahf
xchg
fistpll
pop
je
inc
add
pop
mov
xchg
dec
and
lret
and
lea
mov
push
adc
adc
in
mov
mov
push
inc
xor
movsb
popf
or
push
sbb
test
mov
leave
dec
jae
into
hlt
ss
cmc
and
ret
ss
clc
in
pop
inc
js
pop
sub
mov
sbb
std
cmpsl
popf
mov
sub
dec
movsb
les
lods
sbb
mov
enter
pop
dec
push
outsl
dec
mov
and
mov
ret
movsl
mov
sub
lods
imul
fsubrs
mov
aaa
jle
inc
inc
mov
orl
sahf
clc
inc
out
loopne
xchg
ret
fimull
in
xor
sub
pushf
and
adc
fisubl
movsb
mov
repz
out
sub
mov
scas
xchg
cmp
imul
mov
fmuls
cmpsb
ljmp
or
mov
in
daa
mov
bound
dec
inc
cmp
adc
lret
jns
ss
sbb
dec
insl
lea
aaa
idiv
xchg
icebp
fs
push
leave
ret
sub
sub
das
add
xor
push
dec
fidivrl
mov
dec
xlat
or
push
mov
and
aaa
or
jne
jmp
inc
jecxz
dec
bound
sub
orl
add
je
dec
xor
aaa
mov
inc
clc
aas
and
lods
and
jbe
inc
iret
outsl
mov
dec
xchg
das
mov
mov
icebp
xchg
push
sbb
adc
cmp
jns
fbld
xchg
jmp
icebp
cmc
dec
mov
jns
and
sub
cli
scas
dec
xor
int3
dec
stc
je
xchg
sub
popa
sub
xor
lds
imul
xor
stos
enter
sbb
sub
loope
repz
lcall
add
or
imul
jle
mov
add
test
mov
mov
popa
lahf
popa
jo
mov
mov
add
mov
lds
sarl
and
and
lcall
cli
adc
jne
adc
jg
je
loopne
popa
or
sbb
dec
sbb
aaa
mov
mov
cmp
dec
stos
xor
sahf
adc
arpl
flds
mov
sbb
push
sub
xor
sub
inc
out
sub
stc
xor
stc
jl
fidivrs
adc
cmp
das
sbb
push
adc
test
bound
cmp
mov
lcall
or
push
xchg
popa
push
out
les
loope
xchg
clc
mov
dec
out
popa
pop
clc
test
cmpsl
jp
sbb
dec
movsb
add
insb
jbe
movsl
xor
test
rcrl
cltd
adc
std
jne
pop
imull
jl
cwtl
and
dec
cmp
add
xchg
scas
out
jecxz
mov
bound
test
pop
in
lea
push
mov
lods
push
mov
mov
sub
push
mov
xor
orb
imul
add
mov
lock
out
cmp
sub
shll
pop
jmp
dec
inc
lods
nop
mov
cmpsl
es
lret
pop
mov
lcall
into
cmp
push
pop
add
sti
cld
aam
aad
xchg
pop
mov
mov
sbb
xor
jmp
mov
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
xor
add
stc
lret
mov
bound
mov
movsl
insb
jns
movsb
xchg
cmp
mov
pop
aam
or
repz
neg
xor
in
dec
dec
sub
jg
sub
jmp
test
dec
xlat
roll
cmp
std
daa
xchg
shr
cli
and
addr16
pusha
stos
jne
loopne
fwait
rcrl
rcrl
loope
jo
adc
mov
xor
adc
js
or
pop
gs
enter
gs
leave
add
sub
sbb
xchg
leave
sub
rcrb
clc
pop
or
addr16
mov
or
and
dec
cmpsb
sahf
xlat
in
daa
mov
xor
fs
ret
arpl
addr16
hlt
xchg
out
fisubs
in
enter
sub
loope
adc
xchg
dec
rcrb
or
in
xor
loope
push
adc
lods
jecxz
sub
nop
fwait
xor
fs
push
cwtl
add
inc
aaa
jecxz
sbbl
xchg
jo
fisttps
mov
clc
lods
lock
mov
mov
out
cmc
xor
xor
sahf
and
test
xor
xchg
or
std
iret
in
popf
aad
cli
mov
sub
in
cli
and
pusha
cmp
xchg
orb
lcall
mov
pop
push
out
cmp
add
mov
not
adc
in
aad
xor
loop
mov
and
pop
xchg
inc
sub
inc
mov
lock
pop
cmp
jb
lods
pop
loopne
pop
fldcw
sub
xor
gs
cmpsb
sub
dec
aas
ljmp
mov
lret
jb
or
push
xorl
cmp
aaa
jb
icebp
iret
lds
fimuls
mov
push
test
jne
test
mov
cmpsl
sub
pop
mov
mov
xor
inc
data16
sub
and
inc
and
test
out
pop
sub
adc
sub
dec
dec
fs
lods
sti
insl
cld
testb
mov
fcmovnu
inc
lock
pop
push
mov
mov
adc
into
mov
jae
iret
pop
pusha
sub
mov
sub
pushf
push
in
out
jae
sub
add
inc
xor
ljmp
shl
jp
ror
fwait
adc
mov
gs
jge
outsl
rcll
cmp
shrl
sbb
xor
fs
lea
in
push
sahf
dec
test
xor
cmp
scas
pop
jmp
int
jp
pop
aas
call
inc
loop
jae
cltd
les
mov
push
scas
mov
mov
push
or
pop
push
xchg
dec
cltd
orb
fs
or
jae
fs
mov
add
cmpsb
cmc
loop
add
sahf
jl
repz
out
jl
or
es
roll
ja
dec
fisubrl
lock
adc
les
mov
fsubs
dec
inc
daa
pop
xor
test
and
jno
mov
mov
mov
orb
push
loopne
ljmp
dec
fdivrp
dec
push
les
xor
pop
stc
cwtl
lock
push
rcrb
pop
cs
sub
xchg
mov
enter
cmc
and
push
inc
mov
mov
aad
aaa
fbld
addr16
adc
jp
sti
mov
fwait
or
mov
cmp
ja
mov
xchg
in
aas
push
mov
cmpsb
and
mov
push
subl
lds
or
push
and
inc
lds
adc
jmp
sub
cmp
mulb
mov
repnz
nop
dec
mov
test
mov
jb
add
adc
cmp
or
popf
out
xlat
bound
jb
icebp
dec
jbe
adc
add
aad
repnz
mov
jne
and
or
mov
pop
dec
push
pop
dec
adc
mov
js
sti
ficoms
pop
mov
cmp
div
insl
cmp
lds
jb
add
mov
jae
iret
pop
test
popf
xor
in
jo
xorl
addr16
jns
xlat
hlt
scas
pop
or
mov
xchg
cmpsb
adc
hlt
notl
add
mov
cmc
pop
cmp
pop
leave
lea
in
jb
das
addr16
pop
dec
insb
mov
pop
jb
rorl
repnz
mov
sub
je
aas
rcll
xor
xor
mov
add
cmpsl
push
aad
cld
cld
xchg
pop
lods
pop
sbb
jae
push
aam
test
and
dec
orl
jmp
cltd
mov
fiaddl
in
cmp
adc
dec
add
imul
int3
and
int3
pop
push
outsl
jnp
mov
mov
push
mov
ffreep
incl
gs
sub
ret
push
jmp
and
fdivrl
je
ss
fnstenv
push
inc
sbb
sbb
or
pop
cmp
daa
int
inc
xor
aad
in
lret
push
sbb
ds
jb
loopne
cs
jne
jbe
fnstcw
test
xor
decl
test
jae
pop
loopne
stos
push
xor
or
dec
adc
aaa
incb
int
out
flds
xchg
mov
and
clc
mov
fdivs
loope
cld
ret
ja
das
mov
xlat
lods
insl
pusha
inc
addr16
call
jle
mov
jbe
ds
in
loope
test
imul
add
xor
xchg
frstors
sub
or
scas
aas
dec
sti
xor
fcoml
gs
loope
in
or
in
push
call
dec
leave
sbb
data16
inc
jmp
xor
insl
test
pop
fsubl
gs
addr16
iret
loopne
cmp
pop
xor
mov
jg
sbb
ret
prefetchw
inc
fwait
in
inc
popf
enter
sahf
push
jmp
jle
movlps
sbb
adc
out
repz
push
pop
cld
repz
out
push
xchg
push
icebp
dec
inc
jns
xlat
outsl
mov
xchg
je
fadds
ljmp
mov
mov
add
ret
test
into
mov
push
push
push
push
call
push
push
jmp
add
lds
cltd
roll
add
bnd
and
outsb
lahf
lcall
jge
add
add
push
adc
movsl
jnp
inc
test
inc
sbb
aaa
push
lret
push
pop
or
mov
fwait
leave
mov
lods
aam
jbe
outsl
rclb
cmpsb
aas
and
das
in
add
sub
stos
jl
lcall
lahf
lds
xchg
fldl
xor
mov
lds
add
les
sbb
fiadds
mov
cmpsl
jbe
fidivl
xor
and
shl
adcl
sub
lock
mov
rclb
mov
mov
addr16
imul
adc
dec
push
push
inc
jbe
je
inc
jo
xchg
js
lahf
jg
pop
mov
xchg
or
xchg
sbb
fcompl
pop
inc
xchg
sub
push
cmp
lcall
jb
int3
inc
std
insl
int3
jo
scas
cmp
out
and
xchg
cmp
test
adc
dec
or
mov
push
mov
shlb
sbb
cmpsl
imul
push
lret
or
aas
inc
adc
lret
jg
push
dec
js
sahf
clc
imul
push
out
nop
inc
fisubrs
test
sahf
insb
cmp
daa
insb
aaa
cmpl
mov
fcmovu
xchg
jns
in
mov
gs
mov
pusha
add
mov
and
cld
insb
cltd
orl
jmp
xor
in
dec
test
setno
fistps
pop
movsl
inc
mov
fstl
jae
aam
lret
xchg
jns
xchg
sub
shlb
cwtl
or
sahf
push
mov
sbb
xchg
or
roll
jg
std
mov
mov
dec
sbb
div
insb
rcrl
sub
out
and
enter
out
dec
outsb
mov
daa
mov
mov
pop
mov
idiv
or
lcall
mov
rorl
xchg
dec
dec
dec
lret
icebp
jl
inc
add
jnp
adc
stos
mov
jle
adc
sub
pop
leave
and
hlt
xor
jnp
add
push
sub
pop
adc
fadd
pop
jbe
xchg
imul
out
xor
mov
sbb
std
sbb
test
mov
loope
xchg
ss
pop
and
shrb
cwtl
leave
mov
out
in
pop
lcall
insl
std
pop
xor
into
and
and
or
dec
add
ret
dec
add
xor
outsl
sub
sub
mov
cmp
xchg
or
cmp
cmp
inc
jg
lds
dec
lds
push
xchg
push
inc
jb
push
or
sbb
xlat
mov
jae
xchg
pop
add
frstor
movsb
mov
je
es
inc
mov
arpl
aam
repnz
rclb
dec
inc
mov
and
sbb
sbb
into
arpl
scas
push
pop
rolb
jnp
jl
xor
add
mov
push
out
mov
scas
cwtl
adc
movsl
movsl
inc
loop
mov
inc
data16
inc
pop
or
cmp
sahf
dec
jae
xchg
fcomp
out
outsb
scas
xchg
push
call
testl
mov
aas
scas
add
inc
and
je
lret
fnstsw
ret
ret
dec
mov
adc
rcrb
imul
jno
aam
pop
lret
sbb
ljmp
dec
fwait
add
mov
jne
push
sub
dec
xchg
pop
popf
subb
fmull
adc
inc
out
repnz
fcompl
gs
add
cmpsl
call
repz
mov
inc
xchg
lods
xchg
es
and
pop
lods
mov
push
jg
cmpsl
push
or
addr16
ret
mov
jns
test
out
jl
aas
lods
sub
xchg
dec
lahf
adc
int3
in
or
xchg
inc
mov
push
sub
outsl
ja
push
inc
push
mov
cltd
arpl
lock
loop
or
pop
pushl
pop
cmpsl
leave
lds
mov
jle
lcall
movsb
xchg
pop
cmp
mov
cmp
ljmp
notl
ret
loop
std
sti
adcb
ss
pop
dec
icebp
jns
cwtl
ret
lret
push
dec
std
std
push
std
add
xchg
outsl
mov
jge
and
insb
jns
pusha
xchg
scas
push
add
pop
daa
daa
in
cld
pop
adc
es
pop
scas
push
xor
loope
jl
pushf
pop
sbb
aam
aam
push
jecxz
add
push
add
subb
add
call
mov
iret
lret
and
push
data16
jmp
cmp
xchg
sahf
in
jb
fistpl
aad
fmulp
and
jmp
in
jb
cli
in
call
mov
pop
std
rorl
mov
clc
inc
fs
test
pushf
push
cmc
pop
and
in
movsl
cli
sarl
and
mov
inc
mov
lds
cmp
dec
sub
das
hlt
aas
xchg
scas
inc
mov
ftst
sbb
dec
mov
dec
push
mov
adc
adc
or
jp
mov
jae
ljmp
pushf
outsl
mov
cmp
leave
fs
cmp
scas
lcall
sbb
cmp
mov
add
arpl
repnz
push
cmpsl
test
or
pop
xchg
cmp
jmp
loopne
dec
pusha
aam
add
pop
push
ret
add
xor
mov
dec
test
mov
jno
je
jle
pop
mov
jnp,pn
icebp
xchg
add
dec
add
jne
call
lcall
out
push
mov
repnz
andl
xor
dec
ret
cmpsl
and
cmp
inc
inc
jnp
ficompl
mov
xchg
mov
dec
mov
cmp
sbb
add
outsb
outsl
or
mov
mov
xlat
or
pusha
cs
sti
push
lret
fs
sub
pop
xor
inc
sbb
pusha
mov
inc
pop
push
adc
pop
popa
dec
jle
int3
sub
bound
sub
repnz
in
jbe
push
mov
faddl
push
into
jp
and
pop
insl
out
ret
cltd
insb
in
dec
sub
or
inc
cmp
and
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
jge
mov
mov
sti
insl
aas
les
cltd
sub
dec
dec
in
jno
dec
jge
jge
mov
or
pop
mov
push
fnsave
out
xor
pop
out
fmull
cmpsl
pop
fdivl
xchg
shlb
xchg
cmp
aaa
sbb
sbb
notl
or
mov
inc
push
sub
rol
stos
and
mov
arpl
jne
mov
shll
cmovl
out
mov
dec
push
imul
aam
inc
test
push
sahf
cmp
imul
mull
jo
scas
mov
cmpl
imul
fadd
cmp
fwait
adc
pop
ljmp
dec
mov
xchg
jle
in
adc
popf
dec
inc
mov
and
pop
outsb
adc
xchg
and
adc
mov
jecxz
xchg
dec
aad
mov
jecxz
stos
cmpsl
mov
fsts
adc
or
pop
lds
xor
adc
arpl
lock
add
ds
fdivrs
std
in
je,pt
push
mov
dec
cmp
and
mov
push
adc
add
mov
sbb
or
mov
test
dec
pop
xchg
jno
xor
xor
enter
outsb
and
sub
in
fdivl
cli
std
iret
cmp
sbb
popa
mov
loope
repz
in
insb
sub
adc
mov
pushf
jle
stc
pop
add
or
test
sub
cltd
push
cmp
in
adc
pop
pop
rcrb
jae
dec
pusha
popa
pop
pop
lret
xchg
scas
add
push
add
mov
cmp
jp
jmp
mov
fdivl
andl
les
scas
jne
stos
xchg
add
imul
jne
scas
adc
out
lods
mov
daa
xor
adc
ss
inc
call
mov
sub
cmp
jmp
adc
cwtl
cmpsb
outsl
xor
jb
sti
jne
jmp
mov
pop
fs
fnsave
push
mov
jmp
ja
cmp
or
mov
mov
and
mov
lcall
xchg
ljmp
inc
pop
jecxz
cltd
sub
arpl
inc
pop
sbb
test
std
mov
int3
mov
dec
scas
add
mov
int
jo
out
adc
test
pusha
and
fildl
xor
mov
sub
bound
in
scas
sbb
mov
jns
enter
or
out
fsts
cld
push
jg
outsl
xor
push
in
xchg
hlt
dec
pop
and
cmp
mov
fsubrs
mov
hlt
push
mov
push
push
mov
sbb
ljmp
movsl
sbb
lods
xor
dec
mov
mov
fwait
scas
xor
pop
mov
xlat
fstps
mov
scas
mov
icebp
push
jmp
popa
stos
fs
inc
mov
xchg
test
xchg
sub
sbb
cltd
mov
mov
hlt
cmp
mov
rolb
sub
add
xchg
into
lcall
push
icebp
stos
add
ret
push
push
test
rorb
dec
mov
test
mov
xchg
pop
inc
repnz
jae
nop
out
and
xchg
sbb
subl
stc
fwait
mov
mov
jmp
mov
xchg
and
mov
lods
cmc
mov
test
imul
es
mov
test
pop
xor
pop
loopne
adc
xchg
push
jecxz
lods
push
mov
addr16
add
out
outsl
jbe
inc
cli
popf
out
add
cld
addl
and
loope
call
inc
cmp
dec
fmull
lods
iret
stos
push
xor
dec
icebp
ret
shll
cmc
pop
repnz
xor
xor
sbb
push
into
sbb
dec
fisubrl
add
jbe
mov
sti
movsb
cmp
pop
in
xchg
fwait
pop
movsb
fcmovne
pushf
push
lds
sbb
and
jmp
fsts
jns
in
cwtl
rol
pop
cmp
and
in
or
add
jmp
push
push
adc
lahf
jmp
fst
stc
sub
test
jle
sub
xorl
out
in
pop
cli
xchg
adc
xchg
repz
or
repnz
push
adc
scas
sti
pop
and
aas
pop
or
jno
sti
clc
ja
xor
or
rolb
in
call
out
mov
lret
repz
loope
fs
jns
adc
mov
aam
push
fbstp
lea
les
int3
lds
jns,pn
outsb
xor
in
fidivrs
sub
xchg
mov
inc
xchg
and
mov
push
dec
pop
xchg
cli
add
sbb
fistl
mov
inc
sbb
pop
mov
adc
sbb
fbld
pop
dec
and
data16
jge
movntq
lods
cwtl
aam
sbb
scas
add
repnz
mov
cltd
sub
cmpsb
les
into
push
add
cmc
push
outsb
push
xchg
mov
pop
imul
xor
repnz
jb
stos
into
hlt
outsb
sahf
add
pop
leave
or
cmc
sarb
inc
out
repz
movsb
mov
cmp
addr16
inc
out
push
lods
mov
xchg
jp
or
sub
xchg
nop
int
push
movsl
mov
mov
add
xchg
jecxz
mov
sbb
cmp
mov
into
sub
and
mov
pushf
ljmp
in
out
popf
mov
lds
test
pop
mov
pop
cwtl
cs
dec
into
xchg
push
bound
push
mov
stos
lcall
imul
cmp
sub
mov
daa
or
mov
fldcw
inc
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
scas
dec
nop
push
loope
invd
add
sete
dec
loopne
clc
add
pop
jb
sbb
mov
jb
cmpsb
stos
aad
xchg
mov
push
pop
or
rorb
mov
out
loope
mov
cld
repnz
inc
mov
sub
test
sub
dec
aaa
bound
jle
loope
pop
sarb
mov
loope
stc
and
mov
cmc
xchg
sbb
and
cmpsb
cmp
stos
dec
lahf
dec
nop
mov
popf
sti
sbb
push
les
sahf
test
outsb
cmpsb
or
mov
pop
test
jle
lea
xchg
inc
test
mov
cmpl
movsl
adc
pop
mov
inc
xor
cmc
mov
aaa
dec
mov
inc
sub
gs
test
dec
imul
adcb
xchg
pop
je
xorl
jle
sub
or
push
addr16
cmc
push
jge
pop
in
sbb
std
popf
pop
cld
sub
xor
pusha
sub
adc
test
das
cwtl
andb
aam
mov
pop
and
add
leave
inc
lret
mov
insl
cltd
xor
and
iret
fistps
or
hlt
and
add
add
test
fsts
cmp
mov
xchg
mov
sahf
mov
es
ss
xchg
push
adc
je
mov
or
add
fwait
pop
test
vmwrite
sbb
stos
mov
int
fistpl
fdivrp
xor
push
sbb
loope
rcl
cld
filds
fidivl
add
or
or
lcall
and
adc
adc
xor
ret
cmp
xor
xchg
iret
data16
arpl
push
mov
js
dec
add
push
outsb
jno
je
mov
imul
int
sbb
pop
int3
xchg
fsts
mov
push
daa
mov
sub
mov
dec
push
addb
mov
enter
fidivl
inc
xchg
mov
sub
mov
dec
int
leave
jo
pop
xchg
int3
iret
cmp
mov
mov
xor
stc
sub
std
cltd
ja
cmp
sub
dec
inc
enter
sub
and
inc
inc
cmc
stos
shlb
lods
dec
xchg
xchg
lods
scas
mov
pop
pop
inc
and
mov
repz
jmp
in
aam
outsl
xchg
aad
jb
fadds
jbe
sub
ret
in
mov
lret
and
popa
arpl
nop
jb
daa
insl
ljmp
mov
int
jbe
push
and
mov
cs
adc
jae
add
adc
sbb
dec
incl
and
dec
stc
cmp
shr
dec
ret
fidivrl
lcall
lods
jle
push
mov
fidivl
inc
pop
sub
push
jp
xor
sbb
ss
mov
bound
mov
xor
adc
bound
je
mov
cltd
jge
loopne
xorl
sub
iret
inc
sbb
int
int
dec
aam
mov
or
xchg
and
push
cmp
mov
push
in
cmpsl
js
mov
rolb
ss
test
dec
xchg
repnz
jecxz
mov
jae
lahf
leave
jle
outsl
lcall
inc
sub
sub
jb
insl
or
sbb
cs
push
mov
mov
aas
push
fnstsw
fsubl
jae
nop
cwtl
mulb
xchg
dec
push
cwtl
adcb
cli
dec
and
mov
fstpt
push
mov
outsb
or
mov
cmpsb
adc
mul
dec
lock
pop
dec
sub
mov
hlt
andb
mov
int3
addr16
in
dec
push
das
pop
test
testb
add
test
inc
xchg
insb
or
lock
pop
cmp
dec
cmp
sbb
dec
dec
add
pop
mov
jp
jno
daa
inc
sub
xchg
mov
hlt
addr16
dec
cmp
xor
fistpll
arpl
cmp
mov
or
ljmp
sbb
scas
push
shl
sbb
ds
xchg
jp
sarb
fwait
cmp
cli
imul
loope
mov
stos
pop
inc
sbbb
sbb
push
add
pop
gs
cwtl
out
cwtl
jbe
insb
sbb
inc
xchg
fiaddl
adc
pop
leave
mov
cmpl
cmp
in
sub
sub
pushl
cmpsl
mov
faddl
outsl
mov
lret
call
jecxz
popa
jl
lret
repnz
icebp
add
fs
inc
push
bound
jge
push
les
and
mov
mov
push
jge
outsl
fbstp
icebp
dec
cs
cmp
mov
pop
lret
pop
push
lret
insl
or
adc
stc
xlat
icebp
push
popa
adc
jne
xchg
adc
sarl
mov
pushf
adc
int
xchg
sbb
pop
cmpsl
ja
sbb
cld
lods
push
mov
pushf
inc
adc
mov
je
cmp
or
fnstenv
mov
adc
mov
insl
or
adc
xor
pop
xchg
mov
inc
dec
pop
add
lcall
cmp
jbe
pop
js
das
mov
fcmovne
push
add
jbe
dec
jbe
popf
movsl
xchg
xor
xor
mov
mov
pop
arpl
mov
ret
mov
stos
dec
dec
mov
es
loope
add
pop
cmp
mov
sahf
jle
mov
or
pop
ss
add
and
lods
mov
jb
sbb
push
fs
xlat
scas
test
or
xor
or
jne
xor
cmp
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
xchg
add
vmread
int
lods
popa
dec
lds
adc
sbb
fucomi
cltd
out
stos
xor
xor
ja
int
mov
and
mov
push
pop
jno
fists
or
mov
sub
xchg
in
sbb
divps
adc
enter
adc
xor
jle
sub
movsl
or
pop
fidivl
jnp
pop
xchg
or
mov
xchg
jecxz
or
ret
jo
ss
cmp
push
lret
pop
xor
mov
cltd
vmread
mov
data16
int
ja
test
js
test
sbb
push
mov
shll
movsb
mov
dec
shlb
movsb
loopne
repz
jg
mov
dec
sub
add
fcoms
aas
test
dec
loop
cmp
or
xchg
out
mov
mov
mov
add
and
sti
lea
sub
in
imul
jmp
rclb
out
and
xchg
stos
jb
pop
add
ficomps
fisubrl
loope
mov
mov
jbe
rcr
mov
lret
cmp
shlb
nop
into
outsb
ret
lock
subb
cmp
insl
pop
mov
adcb
adc
cmp
jae
add
loop
lods
testb
xchg
mov
xchg
or
push
stos
fiadds
out
add
cmpsb
std
cmpsl
pop
and
xlat
adc
shrl
and
mov
pop
mov
jne
cmc
aad
adc
sub
jo
and
or
loopne
in
sub
push
sti
ds
or
sbb
jno,pn
es
cmp
imul
or
mov
loope
lods
jl
outsb
mov
cmpsl
lcall
xorb
idivl
ljmp
add
or
xor
jae
jg
dec
jecxz
jp
notl
jae
cli
out
adc
cmc
hlt
add
jno
lcall
ds
fcompl
fidivl
or
inc
cmp
lret
cs
cs
push
scas
jmp
out
push
dec
enter
pop
fs
and
lods
push
sahf
jle
test
cmpl
inc
mov
mov
xchg
jecxz
xor
mov
cmp
push
xlat
es
push
cmp
push
adc
pop
mov
and
pop
xchg
ret
fcmove
outsb
shll
and
outsl
jl
xor
sti
xor
xorb
lods
out
and
push
pushf
jno
dec
ja
or
cmpsb
adc
xchg
sub
jno
int3
out
pop
or
xchg
mul
outsl
stc
xor
ret
add
jmp
repnz
jnp
cmp
loope
sahf
add
or
lock
cwtl
hlt
fs
test
shlb
movsb
push
jne
sub
adcl
xchg
stos
inc
fildll
cmp
sbbl
scas
imul
test
mov
push
insl
add
cmp
dec
inc
xchg
call
push
xchg
inc
pop
pop
mov
test
push
inc
inc
push
dec
push
fnstsw
stos
jo
movhps
mov
lods
cmc
add
mov
or
lds
dec
cs
out
or
xchg
ja
and
inc
sub
rolb
xor
sbb
jmp
mov
fwait
repz
pop
sbb
add
in
mov
in
xor
lock
outsl
movsl
outsb
in
negb
jmp
std
rcr
cwtl
dec
jp
xor
sub
test
repnz
in
push
jmp
mov
sub
data16
hlt
ss
pop
and
cmp
scas
test
mov
addr16
lret
push
or
mov
xchg
lret
or
mov
jne
scas
out
iret
ja
loopne
cld
es
cmpsl
jnp
sbb
jo
rol
mov
cmp
xor
add
jge
adc
cmp
out
insl
mov
inc
adcb
cmp
lods
cmp
ret
pop
addr16
mov
fucom
jecxz
mov
mov
jo
ja
ret
lods
scas
dec
out
int
push
shrl
add
les
add
and
cmpb
pop
shll
icebp
sbb
lods
lahf
fldcw
xchg
daa
sub
in
in
push
lock
ss
adc
popf
cli
cmp
imul
cmp
leave
pop
out
inc
cwtl
mov
jle
idivb
mov
andb
jecxz
mov
loopne
mov
xchg
jnp
dec
push
xor
dec
imull
push
je
sub
out
dec
add
shlb
push
add
xlat
stc
sahf
jg
sub
adcb
xor
inc
jg
pushf
or
mov
pop
cmc
into
inc
out
and
xor
dec
push
fmull
push
mov
and
xorl
xchg
je
test
cmc
xor
mulb
dec
dec
jb
sub
push
cmp
dec
jne
sbb
or
pop
outsb
frstpm(287
fwait
add
test
rcrl
mov
or
mov
and
leave
test
scas
int3
pop
cld
jno
neg
cmpsb
cmpsl
loop
jge
jp
jae
jle
xchg
test
in
xlat
mov
sbb
xchg
test
sbb
add
jmp
inc
push
test
mov
inc
lcall
xchg
stos
into
sbb
sbb
mov
test
in
fimull
mov
mov
cmp
rorb
xchg
or
aaa
jge
lret
pop
jns,pn
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
bsr
dec
roll
adc
dec
aaa
fcmovbe
cmpb
add
xor
push
xchg
push
fimull
test
pop
lahf
push
push
sti
stos
xor
inc
push
lea
leave
sub
push
xchg
nop
mov
xchg
mov
add
push
mov
outsb
pop
mov
add
and
rorb
pop
lcall
sti
fwait
mov
in
loopne
push
lock
jns
push
cld
push
add
imul
add
xor
jo
lock
or
lret
jnp
mov
jge
lret
xchg
negl
mov
out
in
mov
scas
cli
xchg
cmpb
sarl
fxch
mov
stos
test
jb
add
add
sbb
insl
jecxz
inc
jb
mov
fadd
scas
shll
mov
mov
mov
or
sbb
add
sub
nop
push
lods
mov
sub
in
lods
mov
mov
add
jp
inc
xchg
sbb
mov
es
outsb
fistpll
pop
ds
incb
es
leave
inc
cmpl
push
adc
hlt
dec
or
jo
mov
scas
push
push
adc
xor
das
xchg
push
out
push
mov
stos
push
out
mov
add
push
arpl
sub
adc
or
mov
jnp
loope
mov
jb
xlat
loop
ret
data16
push
xchg
mov
mov
xlat
xchg
sbb
mov
adc
adc
adc
lods
inc
rcl
decb
lahf
and
adc
xchg
addr16
fcmovu
aas
lret
test
push
sub
mov
pop
jae
xchg
or
lock
data16
mov
sub
rolb
and
aas
adc
mov
scas
pop
dec
mov
mov
call
out
fimull
repnz
out
outsl
jle
xlat
mov
cmp
addr16
scas
imul
pand
mov
pop
inc
cmp
in
inc
movsb
int3
outsl
adc
push
enter
sub
stos
imul
jecxz
jge
stos
add
pop
sub
inc
std
outsb
push
pop
adc
mov
mov
repnz
push
push
pop
fisubrs
and
fldenv
xchg
jecxz
fs
cwtl
ret
xchg
outsl
xchg
push
pop
nop
roll
inc
jp
mov
jle
pop
or
mov
sbb
fldl2e
sahf
inc
inc
inc
inc
pop
jge
mov
add
pop
push
jp
inc
cmp
orb
inc
cltd
orb
inc
add
xchg
push
mov
aaa
jp
add
jecxz
sbb
mov
jecxz
xchg
insl
inc
repnz
test
and
pop
push
fcmovb
das
dec
mov
test
mov
and
repz
xor
or
sysret
push
repnz
push
ss
std
mov
scas
stos
dec
hlt
cwtl
jbe
jb
or
lock
push
pop
jl
add
fcmovne
cld
aas
dec
jle
lea
cltd
mov
sub
mov
fsubrs
and
jg
test
ja
sahf
pop
pusha
push
adc
mov
cmp
lds
xchg
inc
xor
mov
daa
shlb
and
cmp
loop
dec
inc
and
push
adc
adc
movhlps
gs
ret
iret
push
faddl
cmp
mov
test
dec
fcmove
call
stos
xchg
aad
mov
mov
jne
mov
inc
ret
add
xchg
jecxz
inc
add
sbbb
icebp
bound
hlt
sbb
jnp
mov
inc
clc
sar
std
enter
cmp
lods
sub
cmpsl
push
jns
pop
mov
int3
pop
push
outsl
lods
dec
shlb
pushf
stos
stos
add
aam
nopl
test
repz
mov
shll
mov
mov
cs
or
imul
sbb
mov
sbb
pop
add
enter
aaa
into
mov
comiss
jg
fistps
mov
sub
sar
lcall
sbb
fmul
xorl
adc
cmp
lahf
pop
push
inc
fnsave
mov
push
das
and
sub
out
gs
pop
out
mov
push
rorl
push
add
enter
out
inc
out
roll
mov
sarb
adcl
push
or
loopne
xchg
inc
popa
mov
pop
jno
shlb
imul
push
push
mov
xor
push
idivl
mov
dec
hlt
and
sub
xchg
and
jo
das
jp
stos
xchg
mov
int
pop
dec
insl
push
sarb
ss
stos
bnd
out
fsubl
iret
dec
not
mov
mov
cmp
dec
test
push
adc
mov
adc
fsubp
cmpsl
mov
daa
sub
and
sbb
jg
nop
pusha
and
lea
mov
sahf
and
dec
pop
mov
fdivrl
push
xor
inc
test
fwait
push
cli
mov
iret
cmp
das
std
dec
aam
mov
stos
lcall
or
jo
clc
push
rclb
and
clc
xchg
daa
pusha
fcomip
mov
arpl
adc
lods
int3
mov
ror
arpl
lret
mov
lds
dec
sub
bound
out
clc
leave
xchg
dec
sarl
xor
jne
inc
dec
loope
shrl
add
inc
andb
sbb
popa
add
jns
sub
jmp
jl
fldenv
les
mov
imul
mov
mov
andl
mov
outsb
test
mov
mov
movsl
and
out
inc
inc
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
sbb
test
setle
add
std
mov
lahf
mov
pop
stos
addb
lock
fnsave
insl
mov
lahf
clc
lods
insb
adc
icebp
cmp
loop
shll
jb
sbb
sub
push
arpl
or
xor
mov
xor
add
ljmp
pop
and
mov
sti
mov
sahf
or
jl
dec
loopne
mulb
cmpsb
or
cmp
rcll
les
jmp
out
jo
jno
lock
push
xor
out
xor
mov
xor
outsl
fucomp
movsl
cmc
cmp
pop
cmc
dec
je
push
xchg
sub
lods
movsb
and
xchg
cmp
out
mov
add
jae
pushf
sbb
cwtl
inc
sbb
cmp
nop
push
leave
rorb
or
jmp
jg
je
aas
jbe
jg
arpl
xor
mov
repz
mov
and
roll
push
popf
mov
stos
dec
adc
pop
mov
mov
andl
shll
sar
sub
or
xor
pop
mov
out
sbb
nop
cmp
mov
cs
adc
mov
scas
mov
out
into
test
xor
mov
pop
out
xchg
dec
test
mov
lcall
sbb
popa
inc
repz
cld
jge
std
mov
mov
push
dec
mov
jo
xchg
cmpsl
dec
push
dec
push
jns
mov
push
dec
mov
jp
adc
push
repz
shll
mov
ljmp
adc
test
decb
adc
sahf
sbb
mov
sub
outsb
push
out
or
cmp
push
cli
mov
xor
push
rorb
cmpsl
rcll
popl
ror
or
test
aad
orl
outsb
jo
inc
cmp
sbb
aam
mov
sarb
scas
sbb
stos
fisttpll
cmc
jne
mov
test
or
popa
jo
pop
mov
testb
push
pop
daa
or
add
cld
xor
imul
sbb
xchg
lods
mov
pop
cmpsb
jle
xchg
lds
jns
cli
sbb
push
sbb
sbb
sbb
pop
enter
jecxz
or
mov
mov
push
or
addr16
pop
ds
xlat
or
mov
dec
pop
push
pop
insb
pop
xchg
les
iret
ror
insl
pop
inc
js
sbb
movl
mov
push
push
jns
dec
fwait
and
jae
jns
mov
bound
pop
pop
jecxz
add
jae
inc
jno
enter
insb
daa
xchg
and
clc
pop
jmp
aaa
jb
movsl
dec
add
aas
rolb
mov
add
mull
or
push
mov
mov
pushf
add
imul
in
aad
xor
jbe
not
lock
dec
mov
jo
xor
sahf
sbb
outsl
pop
xchg
fcompl
mov
xor
pminsw
orb
std
jle
xlat
cmpsl
mov
lret
icebp
dec
pop
sub
cmp
sub
jmp
std
pusha
cmp
mov
das
loopne
adc
fistpl
sub
mov
cmp
negb
inc
out
les
fs
insb
sub
jecxz
pop
fwait
jp
data16
or
or
int
xor
sbb
mov
pop
sub
sbb
movsb
stos
mov
fsubs
jne
and
pop
mov
fbld
imul
pop
mov
pusha
lods
xchg
xor
dec
cmp
rclb
ror
lock
test
cmp
shlb
sub
pop
mov
adc
xchg
in
add
fidivl
call
add
mov
sbb
cmp
rorb
sub
jge
add
mov
shrl
cwtl
mov
xchg
or
fcmovne
sbb
call
jbe
rorb
mov
push
add
ja
mov
push
int
add
fistps
xchg
add
fdivrs
pop
pop
cmc
jbe
cmpsb
inc
add
movsl
mov
test
mov
out
iret
adc
outsl
and
push
imul
cmp
dec
sti
insl
mov
lea
loope
push
lds
xor
mov
fnsave
ret
push
pop
ljmp
and
movsl
jl
call
dec
rcll
pop
divb
ss
inc
push
adc
loopne
lret
push
dec
mov
int3
sarw
int3
jl
or
sbb
fwait
lret
in
ja
xor
fsubl
add
out
xchg
call
mov
dec
insb
or
jmp
xchg
arpl
ficomps
ss
out
pushf
dec
inc
inc
lea
mov
call
adc
je
pushf
movsb
adc
inc
fistps
push
stc
imul
sti
call
xor
push
bound
stos
jp
pop
cli
ret
mov
add
cld
push
and
mov
inc
mov
adc
jecxz
cmp
push
add
sbb
xchg
mov
dec
f2xm1
mov
cmp
pushf
add
mov
test
cmp
movsl
xchg
es
pop
pop
cmp
cmp
fldcw
mov
shl
nop
std
push
scas
xchg
out
cmc
push
ljmp
push
les
and
pushf
cmp
aas
adc
inc
xchg
jg
movsb
adc
aam
out
jb
in
jb
lcall
ficoms
lods
pop
jge
pushf
mov
stc
jmp
mov
xchg
mov
push
cmpsb
js
popf
invd
add
punpcklbw
out
mov
icebp
mov
pop
jb
and
cli
int
call
ljmp
mov
mov
and
add
repnz
leave
dec
in
les
das
mov
sahf
push
mov
out
jo
fildll
mov
push
push
in
push
xchg
rcll
gs
adc
mov
push
lods
inc
mov
inc
push
mov
aaa
or
enter
cmpsl
jno
fidivs
fucom
repz
mov
pop
test
push
je
sub
lock
adc
xchg
sbb
or
xchg
cmpsb
scas
push
stos
aaa
push
xchg
add
shrl
mov
dec
fdiv
test
cmp
push
aaa
repz
clc
fmull
cmp
dec
enter
inc
pop
cmp
es
xchg
fsubrs
inc
loop
and
mov
jl
sti
into
mov
push
push
cmpsb
mov
push
mov
in
stos
or
pop
jmp
aas
inc
xchg
xchg
orl
ficoms
mov
push
pop
mov
incb
pop
hlt
push
mov
in
enter
xlat
in
and
mov
jbe
mov
adc
mov
xor
mov
cltd
mov
stc
push
xor
and
dec
cmc
fsubrs
daa
mov
int3
dec
pop
and
data16
cmp
ret
jecxz
arpl
mov
dec
lahf
sub
scas
jle
jbe
movsb
les
mov
hlt
jecxz
out
cs
test
pop
pop
inc
sub
cmpsb
js
ja
or
movsb
mov
inc
sbb
mov
aam
dec
sub
daa
and
pop
into
xchg
int3
mov
idivl
push
test
xor
aas
notl
addl
sbb
js
dec
mov
rep
dec
leave
xchg
jb
iret
test
push
lsl
incl
cmp
dec
nop
outsb
jge
ret
mov
mov
shrb
cld
cmpsb
bound
movsb
shlb
cmp
into
dec
or
nop
ja
insl
dec
inc
cmp
mov
mov
mov
mov
fstpl
or
sub
mov
jns
or
movsb
rolb
mov
fs
dec
or
ret
lock
fisubl
daa
push
jo
int3
daa
mov
loope
imul
loop
xlat
or
ss
dec
push
mov
lea
cmpsb
out
in
jmp
movsb
ja
loop
xor
dec
cmpsl
push
dec
in
add
sar
in
aad
aam
mov
mov
adc
fisubrl
cmp
pushf
xchg
cmpsb
pop
jecxz
mov
jo
sub
rolb
pop
cwtl
fistpll
cmpsl
mov
test
js
inc
add
mov
rolb
mov
pushf
jle
daa
or
jbe
cmp
cltd
jno
mov
cmp
sbb
dec
test
js
daa
adc
int3
repnz
negb
in
mov
mov
fidivrs
pop
inc
pop
inc
push
or
inc
clc
push
mov
pop
pop
xchg
hlt
mov
in
pop
and
fistpll
fcomip
inc
sub
adc
sbb
les
popaw
pop
sbb
mov
and
clc
xchg
dec
sub
push
inc
mov
mov
jbe
cmpsb
jbe
xor
push
ds
ret
in
pop
clc
push
lret
imul
xchg
add
shlb
cmp
mov
pop
stos
lahf
inc
mov
mov
ljmp
rcrl
scas
mov
loop
xchg
loope
out
lret
inc
test
cmpsl
sbb
insl
scas
mov
jae
imul
sti
div
psrld
xchg
clc
enter
enter
add
adc
bswap
or
mov
lds
mov
mov
xchg
adc
inc
or
sahf
sub
mov
enter
push
into
mov
movsl
arpl
sbb
add
stc
pop
xlat
rolb
mov
inc
loopne
fimull
sahf
les
and
lods
pop
lock
dec
aas
leave
dec
sbb
cmpsb
das
xchg
ds
cli
fstpt
xchg
xchg
or
jb
lods
decl
arpl
std
js
jno
repz
shlb
mov
push
roll
and
push
pushf
jge
cmpsl
sub
xor
call
ffree
jle
mov
shlb
mov
in
pop
mov
and
adc
pop
jns
cli
jno
lea
negl
or
das
inc
jmp
popa
rcrb
imull
or
and
or
dec
xor
test
daa
test
clc
int3
pop
xchg
cmp
xor
and
xchg
cmp
adc
mov
out
add
inc
and
and
xor
sbb
mov
insb
shlb
cmpsb
push
mov
add
leave
pop
and
aaa
and
int3
pop
pop
out
fcmovnu
push
mov
icebp
int3
imul
sbb
stos
jl
mov
mov
into
pop
sarl
xor
xor
jmp
int3
sub
sete
and
outsl
sub
fsubrl
int3
test
mov
outsl
mov
mov
rcll
jp
movsl
iret
sbb
pop
ret
ljmp
out
dec
fnsave
sahf
into
lret
loope
movsb
stos
mov
mov
mov
cmp
mov
cmp
mov
cmpsl
push
jmp
inc
and
sti
mov
out
inc
movsb
mov
icebp
inc
jne
mov
lcall
clc
mov
jnp
mov
cltd
cmpsb
mov
jb
rorb
gs
roll
cwtl
pop
adc
xor
sub
push
cli
into
xor
mov
aam
test
pushf
shl
xchg
aas
shl
mov
cwtl
inc
or
pop
lret
je
cld
dec
outsb
lahf
xor
repnz
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
dec
test
invd
add
bswap
je
sbb
std
pusha
inc
jg
mov
inc
inc
fucomp
dec
mov
add
cli
push
lods
pop
sub
pop
jmp
dec
cld
fidivl
inc
inc
clc
fidivrs
insb
push
popa
and
push
and
cmp
pushf
cs
pop
jge
fld1
mov
push
in
in
cmpsl
divb
test
xchg
rcl
insl
pop
popf
leave
mov
mov
int3
sbb
stos
adc
ja
xor
mov
adc
jae
adc
sti
aas
xchg
mov
dec
adc
mov
leave
inc
jno
mov
mov
xorb
cmpsb
bound
in
pop
outsb
fcompl
push
popa
dec
ljmp
sbb
mov
jle
cmp
or
dec
mov
and
into
jne
std
and
mov
dec
pop
jge
loopne
adc
jbe
shll
adc
lods
pop
inc
pusha
test
sbb
xor
push
inc
addr16
inc
sahf
test
push
push
imul
adc
or
cli
into
sub
cmp
les
movsl
and
stos
mov
xor
fdivrs
pusha
daa
lds
cmp
stc
mov
cmc
mov
pop
cmp
xchg
sub
sub
movsb
mov
or
loopne
sbb
lods
enter
icebp
xchg
rol
imul
je
sbb
add
inc
call
sub
out
mov
jl
pop
mov
xchg
sbb
mov
nop
aam
xadd
pop
jl
sar
bound
sub
mull
scas
push
test
js
aas
jnp
mov
and
cmc
loopne
lahf
and
jle
out
test
pop
aaa
rcl
xchg
xor
imul
addl
mov
lahf
mov
jg
cwtl
jb
sbb
mov
cmpsb
aam
scas
mov
jle
inc
pop
cmp
or
inc
add
cmc
push
pop
in
cli
fstps
fsubs
cmp
mov
fcompl
cld
and
push
mov
popa
adcl
pop
movsb
dec
aam
aam
cmp
mov
jne
or
jle
adc
and
mov
test
pop
mov
push
or
pop
xchg
jle
or
add
addb
cmpsl
cmp
cmp
mov
push
or
dec
jb
xchg
jns
or
push
stos
fisttpl
jmp
jb
push
psubq
mov
lcall
outsl
cli
mov
mov
push
mov
rcl
stc
sbb
daa
cmpsl
ret
stos
das
mov
mov
jbe
xor
subb
bound
decb
sbb
call
pop
fldl
nop
mov
inc
icebp
dec
mov
mov
fldenv
pcmpgtb
push
sbbb
leave
sub
push
push
lcall
daa
push
push
xor
cmpb
test
movsb
sahf
mov
mov
mov
movsb
rolb
int
xchg
add
cltd
pushf
xchg
leave
pmulhw
clc
fnstcw
xchg
inc
pop
mov
into
ljmp
sarb
jmp
out
enter
in
in
cmp
fcomps
stos
mov
in
sub
cmp
clc
clc
lds
fwait
lea
das
add
mov
jno
stos
lahf
xor
xor
push
pop
popf
ljmp
fisubrl
inc
bound
mov
sbb
ret
mov
sbb
pop
pop
das
cmp
enter
or
xor
mov
mov
outsl
push
cmp
or
fwait
sub
sarb
sti
lret
pop
add
push
jno
fwait
sbb
fs
sbb
shufps
aas
xor
xchg
fstpt
mov
push
testb
mov
push
push
mov
int3
mov
cmp
test
xor
jae
mov
jmp
loopne
cmp
inc
into
outsl
mov
mov
test
mov
out
push
pop
mulb
ja
in
addb
xor
or
adc
std
sar
lea
mov
add
and
dec
mov
cmp
mov
dec
es
xchg
aaa
ror
mov
lret
stos
pushf
xor
jle
hlt
lret
inc
lds
fs
aad
clc
lahf
mov
jmp
push
cltd
aam
mov
mov
rorb
data16
push
jle,pt
ret
ss
popa
into
jp
je
es
mov
xor
std
mov
sub
and
mov
push
xchg
jg
inc
shlb
mov
mov
mov
mov
sti
cmp
mov
out
cmp
iret
frstor
int
pushf
imul
sbb
es
mov
aaa
sub
inc
sti
loopne
in
fisubs
inc
xor
enter
push
jge
dec
test
rcl
aad
lcall
mov
lret
and
test
mov
test
insl
lret
in
sbb
cmp
push
stos
pop
push
idiv
push
lret
shlb
pop
rcrb
cmpsb
scas
pop
mulb
imul
lock
repnz
scas
or
sbb
mov
xor
out
dec
aas
push
push
into
sbb
in
sarb
sbb
pop
cltd
pop
aam
jecxz
stc
jno
push
outsl
jbe
gs
insl
and
mov
mov
add
flds
in
push
cmp
imulb
in
sbb
and
and
les
test
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
push
invd
add
mov
cmpsl
inc
mov
adc
dec
fadd
xor
inc
push
mov
jb
xchg
or
movsb
popa
test
xchg
iret
fld
stos
ja
xlat
push
xor
lds
jle
int
ss
mov
loope
mov
push
and
stos
adc
and
mov
sbb
inc
dec
ficoml
int3
adc
mov
cwtl
in
in
sub
pop
add
add
pop
iret
inc
add
or
in
int3
cmc
ss
dec
xchg
add
sbb
sub
push
mov
nop
push
lock
je
dec
jp
xchg
test
out
jge
inc
loope
xchg
fucomip
les
imul
sub
fsubs
lret
icebp
fnstcw
pusha
xor
aas
call
or
lcall
sbb
sub
out
pop
xor
adc
mov
mov
fcompl
popf
fcmovne
dec
shlb
mov
ss
xlat
pop
jecxz
fisubrs
inc
out
imul
dec
mov
shl
pop
sbb
push
loope
push
push
jne
insl
xor
mov
out
adc
add
fadd
xor
pop
in
cmpsb
xor
repnz
xchg
or
repnz
cmp
push
les
mov
outsb
ja
push
inc
dec
int3
test
inc
mulb
jns
inc
xchg
out
xchg
lcall
test
mov
cmp
xor
xor
aas
imul
push
mov
repz
xchg
add
or
pop
pop
push
daa
aas
imulb
fistl
outsb
dec
or
sbb
pop
stc
clc
out
lea
push
mov
jne
rcl
jcxz
gs
sub
add
pop
clc
cmpsb
adc
and
mov
dec
mov
ret
cmpsl
pop
clc
stos
shll
out
into
jmp
movsl
push
push
insb
cli
pushf
and
cmpsb
pop
sbb
and
insl
js
enter
inc
dec
mov
fs
pop
inc
and
test
add
xor
adc
jno
out
ljmp
lahf
bound
add
xor
xchg
and
sub
push
or
imul
add
push
and
shlb
pop
mov
or
mov
xor
cmp
adc
mov
cmp
loopne
ja
dec
and
or
cs
push
dec
dec
jne
sbb
stos
fiaddl
cwtl
and
repnz
fstl
ret
and
mov
pop
pushf
cmp
adc
xlat
mov
fstpl
and
ret
in
ja
adc
add
cltd
hlt
add
or
and
mov
mov
and
std
xorb
pusha
imul
out
mov
imul
gs
shl
mov
dec
dec
lock
fisttpl
aad
pop
or
jbe
adc
sub
and
jne
mov
push
mov
pop
pop
jmp
add
and
push
adc
sahf
jecxz
mov
pop
aam
ds
inc
repz
pop
mov
cmp
stc
sahf
ljmp
addb
adc
repz
cmc
inc
iret
mov
pop
sbb
add
pop
xchg
mov
cmpsb
roll
cmovno
cmpsb
and
pop
and
inc
push
mov
rcl
dec
fmuls
mov
fimuls
arpl
jge
pop
mul
sbb
push
push
jns
xor
xchg
sbb
nop
xorb
xchg
or
push
aaa
jnp
and
mov
in
je
in
pushf
jp
dec
push
mov
jnp
jl
cmpsb
inc
pop
sub
mov
and
cld
jo
addr16
jae
jmp
fs
stos
jae
mov
mov
push
in
cmp
mov
dec
add
dec
sbb
mov
pop
or
mov
pop
sbb
aad
jecxz
sahf
sbb
lock
mov
adc
adc
sub
sub
xor
adc
cmpsl
mov
sub
mov
hlt
pop
sub
jb
inc
mov
xchg
adc
test
rclb
ja
adc
ret
adc
leave
in
xor
insl
jmp
insb
or
vmovlps
popa
fs
xor
mov
and
xchg
loopne
inc
add
je
xchg
fs
ror
dec
das
cli
loop
add
sarb
xchg
int3
mov
mov
mov
lock
iret
add
test
rolb
sahf
mov
cmpb
mov
int
mov
or
cmp
in
xor
push
jnp
imul
jb
inc
adc
sbb
jbe
lods
push
lahf
dec
sbb
dec
and
add
imul
lds
jbe
orb
xchg
cmp
or
aas
jl
and
cmc
jge
mov
pop
seta
adcb
fwait
repnz
adc
sti
ss
sbb
lahf
mov
xchg
idiv
shlb
pop
add
cwtl
mov
je
outsl
cltd
push
repnz
out
push
mov
xor
cmpb
lods
aad
dec
lods
pop
sub
jae
jecxz
mov
push
and
adc
cmp
mov
pop
cmpsl
or
shlb
stc
dec
mov
push
mov
dec
xchg
or
push
into
fst
add
lea
dec
pop
xchg
pop
sub
sbb
push
adc
mov
jnp
pop
lcall
dec
insb
insb
lret
cmpsl
mov
insb
dec
in
clc
xor
xchg
fidivs
fcom
daa
sbb
jmp
and
xchg
iret
sub
mov
lods
clc
aad
mov
fwait
adc
rcr
sbb
dec
sbb
aam
cwtl
push
call
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
mov
invd
add
cmovbe
mov
call
in
jns
push
hlt
xor
fisubl
jle
outsl
pop
orb
pop
and
xorb
daa
jns
not
shl
inc
shlb
out
push
fadds
jno
out
jecxz
inc
and
cs
iret
mov
push
syscall
or
push
stos
or
xchg
jp
cs
ss
rorb
cs
outsb
and
lahf
push
andb
shll
sub
imul
push
mov
nop
pop
push
sub
fwait
divb
lock
pushf
mov
push
xchg
mov
sub
aad
fwait
pop
pop
in
push
xchg
mov
sub
outsl
popa
fwait
movsl
adc
cmp
or
popf
call
push
sbb
adc
push
sub
mov
jl
stc
inc
test
inc
push
in
add
cmpb
aam
scas
inc
rol
xor
mov
nop
lock
out
dec
punpcklwd
push
lret
mov
in
cmpl
inc
mov
ljmp
pop
mov
or
pop
add
add
xchg
das
push
shlb
cwtl
mov
jbe
dec
mov
sub
gs
out
fstps
xor
jb
sub
shll
scas
adc
inc
sub
out
jecxz
daa
iret
mov
fxch
mov
gs
inc
dec
sbb
lahf
in
int3
xchg
sti
xor
out
mov
mov
mov
popa
loope
cwtl
arpl
inc
les
cmp
out
push
dec
mov
test
jns
sbb
inc
sbb
pop
or
push
push
jle
out
xor
jl
pop
pop
xor
shrb
mov
push
ja
jae
lods
mov
sahf
push
mov
into
mov
pop
es
repnz
xchg
add
jp,pn
nop
jmp
push
lock
int3
fnstenv
inc
sub
xchg
mov
xor
lods
sahf
addl
addr16
in
subl
inc
mov
pop
inc
clc
test
lcall
dec
xor
cmp
push
mov
jae
xchg
fcmovnb
call
scas
adc
sbb
jae
xor
popa
lcall
pop
xor
push
repz
xchg
pop
jnp
stos
ds
jns
aas
insl
test
dec
addr16
stos
mov
inc
pushf
pop
ret
xchg
cmp
fwait
inc
sbb
cmc
jecxz
jmp
pop
mov
pusha
popf
test
mov
hlt
add
rcll
les
add
sti
fmuls
ret
jno
push
imul
xchg
add
test
out
cmp
cmp
lahf
popa
cmp
sahf
insb
rolb
sti
stos
sbb
imul
push
popa
into
dec
jmp
orl
orb
jge
mov
mov
stos
xor
icebp
lret
and
sbb
ret
mov
xor
mov
addr16
mov
imul
pop
or
mov
repz
xchg
mov
cmp
cld
inc
mov
xchg
out
ss
mov
sbb
jg
ficomps
push
cmp
fstpl
paddusw
pusha
out
subl
popa
dec
stos
dec
pop
push
jnp
test
jp
xlat
push
dec
dec
mov
test
loop
adc
pop
jnp
and
jl
mov
addr16
rcll
loop
out
inc
lods
xchg
out
daa
out
repnz
iret
mov
loop
pop
in
sub
fisttps
pop
pushf
aad
mov
push
fcoml
orl
scas
jb
lret
xor
cmpsb
nop
add
push
push
data16
lods
imul
outsl
outsl
bound
sub
pushf
sbbb
push
cmp
inc
in
in
aas
xchg
inc
cs
pop
test
dec
push
fldl
mov
inc
cmp
adc
subb
add
xchg
popf
ljmp
mov
pop
int
stos
aam
adc
outsb
push
jmp
fcmovne
push
xchg
xchg
add
mov
sarb
mov
jp
fimuls
in
loop
add
push
dec
jp
call
daa
gs
scas
pushf
sub
adc
fldt
pop
lods
or
sahf
pop
dec
xchg
cs
xor
lods
jmp
adc
sub
xchg
mov
xchg
adc
jmp
jae
mov
xor
mov
aad
lahf
mov
in
movl
pop
ds
lret
loopne
sbb
mov
test
mov
in
int3
pop
test
xchg
inc
and
das
aad
xchg
xor
sub
mov
scas
or
xchg
sbb
cwtl
sub
popf
dec
lret
mov
adc
outsl
xchg
popa
loopne
clc
cmp
nop
push
jae
rcrl
xchg
aad
pop
stc
adcb
adc
jmp
or
jmp
rcll
notl
inc
fyl2x
repnz
nop
cmp
mov
lcall
imul
mov
push
out
xor
test
sub
outsb
mov
adc
test
fcmovne
ja
stos
or
out
aaa
into
add
stc
icebp
inc
jae
jbe
shrl
stc
insl
enter
or
lret
push
mov
mov
push
mov
leave
mov
fmull
scas
inc
lea
ja
imul
adcb
add
ljmp
dec
sti
outsl
repnz
mov
das
and
sbb
das
sbb
adc
push
sub
lds
jnp
xlat
sbb
push
xchg
ds
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
psubq
rcll
testl
js
push
jns
cmp
mov
loop
scas
jns
adc
mov
mov
arpl
push
fisubrs
push
shlb
scas
in
mov
insb
rorl
cmp
pop
in
int
jge
xor
xlat
sub
ror
and
out
jl
and
jae
repnz
jp
leave
movsb
xor
mov
add
mov
inc
add
xlat
jmp
das
and
js
les
xchg
push
int3
adc
out
in
fcmovnbe
xchg
std
add
add
out
jle
push
xchg
sub
lcall
lods
mov
and
in
popa
lret
mov
addb
sbb
mov
psubq
iret
jno
add
pop
jns
gs
test
in
scas
mov
sub
xchg
push
outsl
cmc
addr16
dec
out
jmp
mov
sahf
jecxz
mov
ljmp
cmc
push
xchg
lods
pop
xor
scas
push
data16
movsb
sub
lea
stos
stc
sub
daa
sbb
out
repz
jns
pop
mov
adc
xchg
push
jnp
jns
xor
fs
push
lods
adc
lahf
xchg
pusha
xchg
inc
xor
imul
aas
mov
add
loopne
and
fildll
dec
testl
or
imul
add
xchg
mov
fs
imul
or
push
out
sbb
push
inc
decb
loopne
adc
movsl
cli
push
jno
repz
cmp
pinsrw
add
arpl
cmp
test
std
insl
fstl
cmp
mov
inc
xor
int
xchg
xor
sti
xchg
mov
adc
in
jecxz
out
clc
push
xchg
adc
sub
push
pop
adc
cwtl
push
bound
xchg
in
pop
push
mov
adc
rorb
or
imul
lods
xlat
ljmp
sbb
sub
in
shrb
xorb
test
sbb
clc
inc
sbb
jno
scas
xor
shll
rcl
faddl
push
sti
jge
adc
notl
dec
xlat
andl
dec
inc
and
inc
lcall
divl
clc
inc
jp
idiv
or
cwtl
or
call
mov
sbb
addb
gs
stc
inc
xor
jle
lods
divb
push
fsts
pusha
jo
mov
std
pop
xchg
pop
cmp
jle
clc
jg
rcrb
rol
mov
pop
pop
inc
xchg
push
cltd
lock
xorl
pop
xor
mov
jns
enter
sbb
mov
sub
loopne
jmp
sub
xchg
fidivrs
idivb
jmp
xorb
mov
andl
fs
xlat
out
in
jo
dec
lahf
xchg
inc
lds
js
into
fnstenv
adc
mov
xchg
cmpsl
jbe
push
mov
jmp
es
mov
sub
mov
dec
jecxz
xchg
adc
pop
mov
xchg
jp
into
adc
loopne
repz
mov
pop
je
xlat
ja
iret
adc
js
lret
pop
call
in
sub
imul
test
adc
inc
clc
bound
adc
cmp
or
sub
mov
out
add
out
xor
mov
jbe
dec
in
inc
xchg
insl
mov
pop
push
adc
aas
and
jg
int3
sahf
xor
sub
je
and
into
cmp
popa
ds
frstor
pop
mov
int
mov
fisubl
rcll
js
cmp
jl
icebp
js
xor
pop
into
aam
and
xor
mov
push
jne
adc
int
sub
mov
stos
out
fnstsw
push
xor
imul
sub
dec
push
movsl
rep
lret
fs
lahf
stos
repz
pop
imul
dec
int3
test
pop
sbb
add
fwait
loop
jnp
fwait
dec
fdiv
adc
mull
xchg
cmp
mov
cld
pop
or
sub
out
sub
jne
mov
push
mov
pushf
cld
cmp
movsl
push
bound
popf
rorl
fbld
cmpl
xchg
dec
cs
xlat
bound
xchg
subb
scas
sub
repz
les
pop
cmpsl
and
add
jecxz
or
or
in
fists
ret
push
cli
aaa
push
lds
sbb
push
jns
or
arpl
push
inc
jns
xchg
enter
out
push
das
mov
mov
inc
push
mov
adc
mov
cmp
outsl
loope
loope
scas
pop
pop
sbb
jne
cli
adcl
lods
jecxz
inc
out
call
je
and
rcrb
inc
cmp
mov
pop
or
mov
xchg
push
and
jne
push
enter
sbb
imul
lret
dec
or
xchg
stc
jmp
sub
pop
mov
add
add
xor
add
mov
into
jmp
pop
xchg
ja
sbb
out
inc
sti
mov
mov
mov
push
imul
xor
sbb
jge
and
iret
xor
dec
add
push
jb
movsl
xchg
divl
outsl
jb
mov
adc
rcrb
pop
sub
mov
inc
stos
lret
mov
stos
jo
iret
add
cmovbe
lods
mov
fadd
out
rol
into
iret
inc
push
push
or
cmp
add
pushf
fbld
fsubrl
cmp
sbb
lea
fs
mov
imul
aaa
sub
dec
pushf
dec
mov
lret
pop
mov
or
repz
nop
inc
hlt
mov
mov
subb
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
push
dec
mov
enter
or
punpckhbw
loop
in
in
xchg
push
shlb
fiaddl
and
pop
lods
cwtl
cmp
inc
lret
in
int
mov
in
jge
push
sbb
test
test
inc
dec
xchg
gs
fldt
jl
xchg
jnp
xchg
cmp
add
push
fcoml
roll
cltd
mov
pop
cs
repz
gs
movsb
inc
xchg
icebp
lahf
xchg
push
jge
and
adc
hlt
daa
add
and
pop
jmp
xchg
mov
xchg
cwtl
out
insl
add
aad
xlat
cld
in
das
add
sub
mov
push
outsb
push
xchg
iret
push
pop
icebp
or
jl
mov
or
jmp
push
sbb
bound
sbb
dec
daa
dec
sti
xlat
mov
push
pop
pop
add
xchg
js
jmp
sbb
pop
xchg
add
mov
cs
cltd
inc
lea
out
fimull
sbb
mov
mov
cli
cmp
sti
cmp
or
push
cmp
dec
jg
push
clc
push
sarl
repnz
cld
loopne
lea
aaa
hlt
fwait
nop
fisttpll
mov
iret
dec
mov
mov
loopne
nop
cmp
ss
loopne
in
stos
lcall
xor
dec
and
dec
and
push
lods
repz
cmpsb
es
dec
in
mov
aam
pop
jmp
lods
test
out
nop
push
xor
push
sub
and
in
inc
inc
jns
jae
mov
push
xchg
inc
jmp
add
and
fimull
pushf
dec
std
aad
in
and
out
mov
ds
adc
mov
push
test
xchg
or
cmp
jl
inc
iret
jecxz
pop
mov
add
cmp
jmp
test
pop
cmpb
push
fsubrl
shr
mov
or
push
sahf
dec
mov
clc
pop
pushf
push
fwait
or
movsl
jmp
call
inc
int
push
call
mov
pop
shlb
cmp
and
sbb
xor
call
cmp
adc
sbb
or
ret
mov
mov
xchg
cmpsb
cmp
out
in
mov
mov
push
arpl
lea
test
cmpsb
jo
adc
jmp
insl
out
ja
sbb
call
xor
jle
ret
sub
or
mov
cmp
add
call
xchg
add
adc
test
fbld
stos
mov
mov
je
lret
sbb
inc
jmp
dec
lock
mov
call
push
xchg
dec
xchg
xor
inc
inc
pop
cmp
and
xchg
jecxz
pop
lret
cwtl
les
push
lods
das
push
mov
lock
fisttpll
sahf
lahf
mov
dec
imul
pop
or
mov
sub
mov
mov
sub
rcrl
sub
in
pushf
dec
fiaddl
ret
sub
xor
mov
lcall
push
inc
movsb
pop
popf
push
jle
sub
jg
mov
dec
sub
inc
jecxz
mov
xchg
jmp
imul
gs
cmp
scas
or
outsl
add
nop
sahf
test
adc
insb
loope
arpl
cmp
popa
fdivl
cs
push
fldcw
rolb
cld
incb
jb
dec
arpl
add
xor
xchg
gs
js
inc
test
adc
dec
pop
loopne
dec
dec
movsb
jg
push
or
sbb
mov
mov
popf
cs
push
mov
ja
test
jo
out
cmp
ss
cwtl
pop
int
push
pop
xchg
sub
jo
push
mov
bound
loope
sahf
std
rcrl
push
ss
mov
cmp
popf
std
insb
hlt
loope
je,pt
movsl
dec
jecxz
mov
loope
sbb
adc
cmpsb
std
faddl
sahf
pushf
mov
aas
ret
push
dec
fwait
or
mov
inc
adc
fs
cmp
loope
sbb
push
mov
in
adc
decb
push
outsb
sar
inc
xchg
jle
call
dec
sub
and
mov
xchg
movsl
jecxz
cmc
out
sbb
sub
insl
lds
rclb
movsl
or
pop
jl
pop
inc
dec
xchg
inc
pop
pop
scas
jo
ljmp
xchg
add
and
lds
ds
lret
in
cmpsb
stc
fcoms
push
mov
das
xor
xor
movsl
out
cmp
data16
push
sbb
xchg
dec
xchg
out
cmp
fistpll
xchg
mov
icebp
lahf
inc
xchg
adc
repz
mov
imul
and
push
add
xchg
dec
inc
iret
jp
mov
jp
xchg
in
push
loop
or
inc
test
dec
lret
add
aad
popa
inc
sub
xchg
mov
mov
add
sub
adc
fsub
cmp
mov
and
jbe
rcrl
jno
es
and
loope
push
pop
bound
push
mov
jmp
dec
scas
jnp
mov
icebp
insb
xchg
loopw
aaa
cmp
fdivrs
or
pop
jmp
testl
sub
gs
lods
insb
cmp
jp
dec
repz
adc
shrl
sub
sub
aas
rclb
xor
inc
pop
push
sub
in
call
pop
icebp
cmc
popa
popa
pop
cld
divl
insb
inc
mov
in
inc
jae
mulb
sbb
sbb
add
mov
cltd
push
jl
dec
xchg
mov
flds
bnd
inc
mov
cmc
push
or
mov
add
xor
inc
inc
dec
jl
pop
adc
sub
js
xchg
ljmp
add
pusha
lahf
aas
sti
aas
pop
or
ss
in
ret
jo
fisttps
invd
add
movaps
mov
sub
cmp
and
mov
fadd
push
ljmp
pop
mov
push
stc
les
insl
dec
push
int
sub
test
in
adc
cli
cs
jle
inc
daa
cmp
call
inc
jb
push
push
test
xchg
xchg
sbbl
lret
xchg
mov
jp
xor
std
push
dec
pop
sti
clc
stos
or
jmp
insb
dec
xor
das
jge
ret
mov
or
scas
dec
and
xchg
aaa
leave
es
adcb
mov
push
rcll
out
lea
movsl
lret
pop
fcomp
pop
cmp
and
insl
adc
xor
subl
mov
lret
iret
outsl
dec
xchg
dec
outsb
sbb
jle
imul
enter
out
adc
scas
mov
inc
int3
imul
push
mov
pop
push
lea
push
sti
ljmp
stc
sbb
and
mov
leave
sub
cmpsb
repnz
sbb
aam
out
add
cli
aas
ss
out
pop
mov
jae
stos
scas
jg
mov
pop
scas
ss
jmp
aaa
sbb
jp
pop
dec
mov
xor
mov
js
xchg
mov
lods
je
rol
in
idivl
test
idivb
inc
jmp
mov
jo
mov
push
ret
fsub
aas
movsl
jge
lret
ficompl
fwait
aad
lcall
or
mov
test
mov
rcll
adc
cmp
ret
les
call
sbb
mov
pop
xor
or
adc
pop
xchg
outsb
test
outsl
inc
lds
cld
jnp
jecxz
lcall
jnp
cmp
add
jg
cmp
loopne
in
dec
and
ret
mov
jmp
jmp
cmp
mov
mov
repnz
sti
mov
out
cltd
nop
or
push
or
lock
push
fistpll
push
cmp
lret
cld
inc
xchg
push
pop
and
aaa
xor
sub
cli
fsts
aaa
xor
xchg
pop
sub
fisubrl
lret
scas
or
pop
ret
sbb
lret
in
jnp
xlat
xor
sbb
scas
mov
cmp
inc
jo
xor
pop
push
rcr
fdivl
xchg
and
adc
dec
aad
addl
cmp
popa
xchg
or
add
jno
sub
push
lcall
aam
testb
sbb
psubw
mov
out
cmpb
xor
mov
add
and
pop
mov
inc
fnstcw
mov
push
mov
ljmp
xchg
mov
aam
cs
test
shll
sub
pop
add
mov
imul
mov
push
mov
pop
pop
test
or
mov
sub
mulb
inc
sarl
and
int
mov
imul
adc
jl
stos
pop
decb
aas
sbb
sub
lods
loopne
jb
or
movsb
and
call
lock
das
stc
sub
lret
mov
in
mov
xor
sbb
iret
pop
jge
sub
out
aas
filds
and
jl
and
jecxz
data16
sbbl
push
pop
std
or
jns
push
sub
mov
mov
das
std
mov
pop
orb
pop
add
lret
sub
adc
lcall
add
mov
cmp
sub
xlat
jp
dec
jle
pusha
loop
call
cmp
pop
cmc
xchg
roll
scas
ficomps
notb
ljmp
add
cs
xchg
aas
gs
lods
push
and
popf
cwtl
jg
and
cwtl
push
push
and
aas
mov
xchg
dec
fwait
shlb
fpatan
pop
adc
lods
imul
mov
leave
xchg
leave
jle
imul
xor
sbbb
mov
jecxz
sbb
sbb
jae
xor
into
push
aas
or
jns
insb
mov
adcb
in
jmp
and
jmp
inc
xchg
daa
xor
xor
aaa
ffreep
mov
add
rclb
jmp
lea
xor
mov
js
pop
scas
jge
jle
mov
xchg
push
sbb
lcall
mov
and
jle
inc
mov
jne
mov
cwtl
pop
mov
sbb
shl
test
daa
nop
js
in
int3
push
push
iret
movsl
sahf
arpl
rol
mov
cltd
push
xchg
mov
aaa
inc
in
sub
lock
pop
mov
or
stc
add
ljmp
jmp
mov
inc
push
aaa
jbe
cmp
std
jbe
cltd
inc
mov
mov
mov
or
addr16
pop
fsts
in
faddl
xchg
test
jge
xor
mov
mov
add
hlt
add
push
jle
xchg
jmp
pop
adc
ja
icebp
cld
shll
xchg
test
push
push
fists
or
mov
xchg
xchg
daa
imul
mov
in
fcom
idivl
adc
dec
stos
int
adc
cmp
adc
sahf
sub
fadd
outsl
rol
push
pop
inc
addr16
ret
xchg
not
fsub
mov
aas
lea
cmp
and
add
jmp
in
fcomp
push
mov
sahf
lods
mov
pop
ds
xchg
testb
add
ja
and
xchg
dec
sarl
jge
jge
sbb
adc
mov
dec
push
or
enter
jbe
sti
mov
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
rdpmc
out
js
sbb
adc
mov
mov
xlat
inc
push
jge
les
data16
mov
mov
mov
and
rep
dec
cmp
cmc
push
insw
xchg
or
jae
fstpl
icebp
inc
xor
lret
cmp
int
pop
popf
or
push
mov
aas
pusha
sahf
or
nop
sub
icebp
cld
jecxz
rcll
mov
nop
cmpsb
pop
jg
jnp
cmp
ja
mov
pop
sbb
loopne
push
fs
xchg
mov
and
inc
mov
dec
add
cs
mov
jne
and
ds
test
lods
ljmp
adc
cmp
mov
scas
mov
xchg
push
jp
mov
cmpl
iret
xor
push
movsl
movsl
or
adc
mov
push
add
xchg
mov
sbb
iret
xor
test
add
mov
pop
xor
lret
mov
and
call
out
inc
add
fnstsw
pop
pop
and
stos
push
jno
sbbb
sub
add
sahf
push
jl
pop
into
fildll
add
xchg
sub
jb
adc
push
pop
or
jmp
roll
dec
popl
popa
sbb
in
int
mov
add
xchg
cmpsl
repz
cmp
lea
dec
loopne
fistpl
pop
cmp
scas
movsl
or
sahf
mov
cmp
fwait
add
push
rolb
xchg
fldenv
shlb
mov
sub
imul
loop
das
stos
bound
mov
and
test
loopne
xchg
adc
orl
jns
pop
adc
adc
mov
jae
and
scas
loope
lea
sub
into
mov
jg
mov
push
lea
fs
shlb
and
leave
pop
push
mov
movsb
int3
xchg
call
inc
fwait
inc
subl
push
dec
divb
fmuls
mov
xor
cwtl
cltd
and
and
push
ret
cltd
jns
jge
dec
sbb
ret
aad
xor
fdivs
xchg
jnp
test
test
ja
and
mov
add
cwtl
and
ljmp
jle
dec
cld
int3
aaa
and
lahf
push
dec
test
mov
mov
adc
xchg
es
jbe
sub
jmp
sbb
iret
loop
adc
fmulp
je
push
inc
sarb
push
push
inc
adc
xlat
xor
jmp
lods
lea
ror
dec
test
push
lahf
lea
jno
add
adc
pop
jge
movsl
movsl
jp
inc
add
jb
lds
das
push
xchg
sti
inc
stc
aad
ficoml
cmp
and
adc
out
ss
sub
push
ljmp
inc
lods
cmp
outsb
push
pop
push
loop
mov
aas
ja
mov
mov
sub
loope
jmp
jmp
push
pop
push
push
popw
inc
test
popf
pusha
xchg
jge
mov
ja
sbbb
ja
pop
repnz
lea
cli
mov
mov
ror
fnsave
sbb
sub
push
fistl
flds
int
and
and
push
jbe
lahf
dec
cmp
add
dec
or
fildl
fisttps
mov
repnz
scas
cmp
icebp
fistpll
mov
adc
jge
popa
mov
cmp
std
push
xor
jne
pop
add
xchg
and
ljmp
mov
insb
and
mov
jno
adc
pop
mov
pop
scas
call
jl
mov
shll
out
xchg
pop
in
lods
pop
lds
jmp
push
dec
mov
jbe
aad
push
sti
xchg
mov
imull
dec
push
mov
das
push
push
mov
js
push
mov
mov
mov
sbb
mov
jle
iret
rcrb
mov
in
enter
inc
fcmovb
in
or
add
xchg
shll
sub
out
cltd
inc
cmovo
xchg
imul
ret
shl
ss
movsl
xlat
movsb
jae
bnd
shll
out
mov
std
shr
stos
outsb
add
out
loope
mov
and
sub
jbe
icebp
jne
loop
mov
push
pop
dec
addl
and
imul
cmp
mov
lds
dec
pop
push
or
fwait
mov
mov
ds
popa
pop
jmp
sbb
jo
stos
adc
mov
pushf
inc
daa
pop
cltd
mov
lock
aam
jno
add
negl
jmp
loope
mov
and
mov
or
mov
and
cmc
push
fisubl
ficoml
das
mov
ja
sbb
push
hlt
idivl
fmul
add
and
out
dec
mov
lret
into
sbb
aaa
xchg
pop
xor
add
push
jl
mov
imul
es
stos
lods
ret
pop
mov
insl
add
clc
ret
stos
xchg
cmp
dec
adc
stos
popa
cmp
dec
cmp
test
jbe
cs
sub
mov
in
xchg
add
ret
movsl
xlat
push
xchg
pusha
xchg
and
jo
inc
and
pop
int
fldenv
les
rclb
enter
mov
sub
inc
mov
das
outsb
ret
add
mov
lods
adc
jle
js
push
data16
push
pop
out
and
sarl
and
inc
mov
xor
in
add
jae
push
ret
jo
gs
shrl
lea
pop
inc
xor
call
lret
sti
outsl
iret
jge
sub
mov
outsb
xchg
lods
fldcw
jno
or
shl
jmp
push
mov
cli
sbb
fnstenv
dec
imul
invd
add
adc
mov
insb
mov
push
insb
jg
push
or
mov
lock
inc
inc
mov
push
repnz
rol
ljmp
adc
outsl
loopne
mov
cmpsb
dec
daa
mov
and
xchg
movsl
scas
and
dec
movsb
std
and
stos
cmc
and
and
xchg
push
ljmp
lahf
add
ret
iret
loope
or
cmp
sahf
sub
sti
cmp
jno
or
les
pop
mov
ficoms
test
int3
pusha
push
push
sub
out
xchg
cwtl
adc
scas
ss
fbld
cmp
mov
rol
dec
dec
mov
sbb
mov
sub
hlt
popa
xchg
mov
and
mov
fprem1
arpl
insb
inc
mov
call
jg
stos
cmpsb
les
jge
int3
xor
cmc
fs
pushf
push
jbe
daa
dec
xor
mov
inc
ljmp
inc
or
jo
fucomip
sub
push
mov
hlt
pop
loop
pop
movsl
clc
hlt
pop
mov
adc
or
mov
add
pop
aam
mov
imul
stos
and
cmc
mov
pushf
subb
les
xchg
add
pop
repnz
daa
sbb
push
fs
cmp
imul
inc
xchg
popf
shlw
jbe
push
cs
fimull
and
mov
sbb
fsubl
add
call
pusha
adc
inc
xchg
sub
ds
stos
mov
sub
test
cli
sub
hlt
or
in
pop
aaa
mov
movsl
std
sub
sub
xchg
mov
pop
jnp
icebp
jg
out
and
repnz
adcl
out
cmp
mov
jnp
add
js
fiaddl
jne
shl
push
push
hlt
xchg
rcll
xlat
iret
push
pop
aaa
mov
and
jb
lret
jns
mov
or
cmp
ret
popa
aad
push
loope
movsb
cwtl
xor
pop
adc
add
push
lret
jne
xlat
cmpsl
hlt
mov
cld
and
dec
pop
mov
adc
aam
lods
mov
mov
xor
jle
add
pusha
out
add
xchg
jmp
inc
testb
gs
out
into
add
sbb
mov
nop
lods
cmp
pop
mov
sbb
stos
arpl
movsb
and
jmp
pop
and
incl
push
in
in
mov
pop
sub
imul
mov
cmpsb
pop
iret
mov
loop
and
in
push
subb
cmp
sub
xor
stc
outsb
pop
aaa
jbe
xor
in
mov
shlb
inc
ret
push
out
test
pushf
outsb
ficompl
inc
pop
xchg
aad
jns
into
cmp
inc
stos
mov
or
loop
or
dec
sub
pop
in
enter
mov
in
cld
icebp
sbb
cmp
xlat
mov
in
mov
leave
les
mov
mov
in
jbe
sbb
sarl
addb
xor
or
lds
sub
out
dec
mov
popa
js
int
jbe
cmpl
lods
or
pop
fildl
cmc
pop
mov
test
sbb
sub
sub
adc
pop
dec
jbe
lahf
bound
mov
fs
pop
xchg
out
xchg
adc
jg
popf
jecxz
xlat
xor
xchg
mov
imul
addb
mov
adcb
sbb
sahf
lea
clc
sub
cmpsl
addr16
mov
mov
add
sbb
and
lds
jl
pop
pop
or
scas
sub
mul
jb
cmp
adc
pop
pop
test
sub
pop
js
int3
jge
or
in
sub
or
mov
dec
fcoml
xor
xchg
int
imul
inc
cmp
cli
scas
xchg
adc
shrl
push
notl
jno
shl
xchg
loop
setae
sti
mov
push
sub
inc
pop
stc
loope
adc
add
inc
fmuls
sbb
inc
js
sti
dec
mov
adc
xlat
inc
cmp
lods
inc
lcall
jno
xor
adc
xchg
fdivr
jecxz
lret
jmp
hlt
xchg
andb
mov
stos
dec
xor
sbb
and
xor
push
mov
loop
movsb
mov
and
mov
add
fldt
nop
or
loop
adc
lret
js
pop
inc
pop
xor
sbb
aas
lods
pop
repz
xlat
fstpl
cld
push
or
ret
sub
imul
inc
jmp
call
mov
push
sub
push
adc
int
js
dec
dec
es
mov
lock
iret
xlat
pushf
mov
outsl
inc
mov
and
dec
push
mov
rorb
xchg
imul
adc
push
fcomps
jp
stos
popf
cli
mov
inc
std
das
pop
mov
movsl
test
dec
pop
mov
iret
fbstp
mov
icebp
cmp
sbb
int
int
inc
sarl
inc
inc
or
xchg
pop
gs
cmp
scas
mov
mov
popf
scas
sbb
cmp
jbe
pop
mov
aad
xor
sub
adc
aam
mov
fmul
subl
sub
mov
ss
fcmovnbe
xchg
fists
cli
test
leave
mov
sub
in
pop
fimull
or
push
scas
jne
jmp
in
fadds
shl
and
xor
mov
jmp
std
gs
xlat
mov
ret
fs
or
scas
and
lock
aam
jb
shl
clc
xchg
fsqrt
cmp
sub
arpl
xor
xor
imul
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
pushf
xchg
out
mov
ud0
imul
testl
sub
sbb
fisubs
cmp
rcl
pop
testb
fdivs
test
xorl
dec
adcl
subb
jmp
aas
cli
cmp
cltd
lahf
and
xor
es
mov
inc
or
fsubl
fdivrs
adc
arpl
repnz
mov
push
mov
mov
dec
ja
mov
fdivrl
scas
std
mov
xor
ja
iret
cmp
je
sub
rol
sbb
xchg
add
stos
lret
adcl
xor
xchg
cmpsb
mov
notb
jb
jmp
mov
addr16
cmpsb
cs
cmp
stos
jp
orb
insl
jne
sti
out
cmpsb
fildl
cmp
push
ret
movsl
andb
movsl
icebp
flds
nop
cbtw
cmpl
imull
inc
fsubp
pop
out
shl
out
cmpl
push
jae
hlt
push
ja
loop
inc
cld
push
outsl
add
lds
adc
sub
cmpb
fcoms
xchg
rcll
int3
lahf
push
sub
rcrl
xchg
lahf
pop
imul
push
enter
hlt
xor
aad
fimuls
push
arpl
jae
push
hlt
js
mov
jp
sbb
mov
in
adc
arpl
xchg
jae
mov
in
imul
pop
push
out
mov
dec
cld
gs
fstps
je
test
mov
dec
xor
cmc
fsubs
or
adc
push
test
and
movsl
cmpsb
dec
lcall
addr16
nop
xlat
lahf
xchg
jb
iret
leave
jno
or
ret
mov
testb
push
outsl
popa
jl
dec
sub
test
add
pop
push
std
mov
adc
sub
mov
and
pop
mov
adc
add
dec
imul
push
cmpsb
inc
in
sbb
push
mov
lds
out
push
cmpsb
adc
xchg
arpl
cmpl
pop
fwait
push
outsl
add
sub
or
inc
dec
js
xchg
xchg
out
pop
clc
lret
das
jae
into
shlb
sbb
inc
add
push
pop
mov
les
xchg
add
mov
imul
and
mov
ffreep
xchg
xchg
push
sub
outsl
clc
sub
shrl
xor
add
sbb
das
xchg
adc
in
stos
dec
test
fcmovnu
xchg
xchg
loop
arpl
lret
pop
sbb
les
jae
push
decb
loop
xchg
out
push
and
cld
mov
ret
sbb
jo
cwtl
stos
push
clc
sbb
movsl
lock
dec
pop
adcl
or
xor
add
push
out
cld
aad
ds
mov
sub
jge
dec
pop
call
xchg
mov
mov
mov
bound
mov
popa
cmp
addr16
ret
sbb
jl
fsts
lret
cmp
jl
rolb
int
js
push
ret
inc
int3
xor
xchg
arpl
xor
lret
add
ret
sub
ljmp
add
mov
lcall
sbb
pop
repz
mov
popa
std
lock
addr16
mov
mov
and
stos
in
sub
sub
mov
sub
leave
push
or
dec
jns
mov
js
roll
test
imul
clc
pop
mov
rcrl
aad
sub
pop
dec
js
jp
pop
xchg
mov
adc
jae
jecxz
clc
cltd
aam
data16
je
push
push
xor
jo
or
xor
cmpb
mov
mov
dec
adc
mov
adc
ret
pop
cltd
sbb
aad
mov
pop
dec
dec
jnp
cltd
dec
cmc
pop
scas
xor
cmp
mov
fnstenv
pop
xchg
imul
mov
mov
mov
or
fildl
movsb
ljmp
bound
sub
roll
xchg
and
shll
and
daa
push
sub
aaa
dec
push
jns
or
and
repz
js
loopne
int
gs
mov
sub
popa
inc
fincstp
call
addr16
mov
fwait
outsb
mov
mov
jb
int
jne
lods
sti
push
ja
mov
leave
loopne
mov
stos
mov
push
iret
gs
jle
xchg
or
stc
cmp
shlb
test
lahf
ret
sahf
daa
sbb
insb
lcall
mov
mov
mov
in
popa
out
cmc
xor
mov
push
in
pop
loopne
push
and
or
aas
nop
popf
lds
fcomps
mov
jle
or
sub
je
lret
ja
sahf
mov
add
sahf
pushf
cmp
test
xchg
aas
pop
pusha
mull
cmp
xchg
push
repz
aad
ss
push
lcall
adcb
push
and
outsl
dec
pop
int3
ja
icebp
and
call
or
das
test
ficomps
jmp
and
sbb
movsb
and
cmp
jecxz
mov
imul
sub
cld
scas
and
je
movsb
mov
jo
xchg
sub
mov
inc
cs
pushf
outsb
dec
and
icebp
cmc
inc
jbe
xor
arpl
bound
in
fmul
mov
fwait
pop
test
fs
jnp
sbb
jns
inc
lcall
insb
jo
add
dec
mov
mov
call
insl
scas
dec
pop
mov
jnp
xchg
inc
insb
popf
test
push
adc
shll
add
lods
lcall
cmp
push
mov
hlt
repz
jb
std
pop
subl
sub
cmc
and
add
mov
lods
sbb
jg
cwtl
xchg
bound
jo
cmp
aas
popl
mov
out
pop
push
mov
shr
stos
inc
int3
bound
sub
dec
movsl
movsl
or
inc
out
lods
jbe
xchg
je
sbb
aaa
mov
adc
or
dec
in
icebp
sub
or
negb
push
push
pusha
std
xor
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
or
dec
clc
sbb
mov
psrlq
cmp
mov
jl
inc
shlb
lret
test
xor
roll
ja
rorl
or
jg
inc
xchg
adc
js
scas
cmp
aaa
jo
sub
mov
je
cli
mov
pop
popw
cmp
test
loopne
or
mov
and
fnstsw
push
int
push
into
cmc
fsub
mov
and
push
mov
xchg
lahf
adc
cli
xor
add
gs
jno
sbb
sub
cmp
out
xchg
inc
mov
or
and
out
mov
std
pop
mov
jl
and
push
loopne
mov
lcall
aad
sub
sbb
bound
not
stos
inc
mov
pop
repz
es
mov
mov
cmp
dec
outsl
dec
loope
add
cmp
out
mov
inc
mov
lds
sub
adc
int3
sub
mov
lahf
cmp
movsl
xchg
sti
and
stos
or
dec
dec
mov
inc
mov
xchg
fucom
mov
mov
cwtl
out
leave
sbb
dec
xchg
push
nop
daa
insl
pop
jae
imul
js
in
jo
mov
push
jmp
aaa
mov
xor
pusha
shl
push
xlat
pop
sbb
sub
mov
fmul
cmpsb
mov
sbb
xlat
cmp
out
xchg
pop
push
jno
cs
sbb
mov
insb
movsb
sbb
push
inc
cltd
xchg
pop
mov
dec
jns
jae
ss
pushf
push
inc
cmp
jg
push
sub
cs
in
cmp
cmp
sbb
arpl
aaa
mov
mov
pop
and
pusha
lahf
cmp
sbb
repnz
repz
aaa
sub
sahf
stc
pop
push
arpl
cltd
lcall
test
cmp
push
push
xchg
mov
int3
xchg
stos
addb
inc
and
push
rol
into
mov
mov
jo,pt
into
fprem
inc
lods
dec
das
and
mov
mov
into
negl
mov
sbb
pop
or
jae
xchg
imul
pop
mov
jb
mov
pushf
pusha
jbe
cmp
mov
add
rclb
fbld
loopne
ja
adc
pop
mov
xor
and
subb
cmc
lret
cmp
push
add
out
mov
inc
mov
rclb
outsb
sbb
cwtl
call
orl
sbb
mov
xchg
andb
das
test
add
testl
imul
dec
scas
movsb
ja
jns
mov
jae
and
lds
adc
ret
push
outsl
movsb
in
imul
push
inc
add
ja
add
pop
and
es
jnp
sti
jmp
data16
sub
jo
lret
xchg
mov
adcb
and
inc
int3
pusha
daa
mov
mov
lcall
daa
pop
sub
ret
mov
or
fwait
push
adc
cmp
jb
or
lret
add
leave
push
mov
mov
int
cwtl
divb
and
mov
xchg
mov
and
out
add
adc
lea
mov
inc
mov
dec
cltd
mov
ret
jbe
addr16
bound
lock
fsubl
mov
xchg
popf
movsl
and
stos
in
xchg
dec
add
cmp
lods
cmp
dec
fisttps
gs
xor
sub
add
xor
test
xor
gs
aam
aam
lock
sub
hlt
push
rolb
loope
xor
rorl
xor
add
fiaddl
adc
push
dec
fbstp
stos
fdivrl
add
xor
pop
ja
pusha
cmpsb
sbb
pop
xor
adc
andb
lret
movsb
hlt
xor
shll
dec
sub
std
sub
stos
dec
mov
adc
push
pushf
loop
leave
xor
hlt
and
enter
iret
pushl
ds
aad
adc
mov
mov
out
out
test
push
mov
inc
mov
mov
lcall
sub
test
outsb
or
push
mov
adcl
or
les
inc
repz
pushl
jmp
inc
push
mov
xor
in
outsl
scas
test
adc
in
js
enter
test
ja
mov
adc
push
imul
jne
or
pop
push
jno
outsl
fld
int
fstps
adc
outsl
xchg
iret
je
push
sbb
xchg
subb
dec
inc
cmp
cmpsb
sub
mov
cli
sub
loopne
xchg
cmp
push
icebp
js
rorl
cmp
cmp
ret
outsb
push
mov
sub
icebp
cwtl
push
mov
subl
cmp
dec
or
testb
push
in
aam
scas
adc
jmp
mov
insl
jmp
ficomps
shlb
xchg
or
fistps
outsb
out
sbb
out
xchg
cmp
out
mov
sub
bound
push
in
push
jns
jle
or
jge
aaa
cmp
iret
dec
push
adc
jne
xor
pusha
sub
roll
pushl
dec
outsb
xor
pop
mov
mov
mov
adcl
mov
push
cmp
out
sti
aas
inc
inc
lahf
jmp
js
mov
in
add
daa
test
cmpsb
outsl
push
cli
xchg
xchg
lahf
pop
test
popf
mull
or
push
fldt
push
and
or
xchg
cmp
pusha
push
dec
and
movsl
push
add
jge
test
inc
rorl
ljmp
lret
adc
pop
stos
sub
mov
add
rclb
and
push
fs
adc
cmp
xor
leave
scas
xchg
xchg
sbb
cmpsb
test
cmp
stos
dec
fs
pop
sub
sub
mov
movl
mov
data16
mov
mov
sub
fs
cwtl
jg
pop
dec
pop
lock
sub
cmp
das
mov
outsl
mov
notl
mov
mov
les
or
adc
push
negb
dec
mov
cwtl
addr16
negl
mov
aad
repnz
inc
mov
cli
outsl
jp
jns
lods
cmp
testb
imul
xchg
js
outsb
push
cmp
jge
sarl
in
and
cmc
in
aas
lods
pop
sbb
pop
jo
imul
jno
outsb
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
or
mov
cmpps
add
mov
jnp
out
xor
pop
leave
aaa
aam
pop
inc
icebp
mov
and
mov
lods
and
mov
mov
pop
cld
jle
add
mov
adc
aas
and
jno
cmpsb
popf
and
in
fcomip
cmp
and
lcall
xor
dec
fsubs
pop
js
cmp
sbb
lods
pop
cwtl
inc
fs
mov
in
outsb
in
xchg
and
popa
sbb
inc
push
xchg
push
fnstenv
fidivrl
push
filds
mov
bnd
dec
out
xor
add
fisubrl
rorl
or
aam
test
cmc
inc
inc
xchg
mov
dec
adc
push
xchg
add
push
or
jo
lahf
push
xchg
jg
aam
xlat
jbe
add
movsb
mov
xlat
shrb
xchg
mov
push
pop
mov
dec
push
outsb
shll
outsl
cli
roll
sub
stc
lret
clc
jmp
andl
jns
lods
jge
lahf
xchg
add
and
inc
inc
sti
lahf
inc
mov
sti
xor
pop
jge
xchg
or
push
aad
bound
scas
aam
bound
insb
repnz
adc
ja
mov
pusha
daa
jge
imul
jl
mov
ljmp
inc
fistpll
mov
pop
jb
ret
or
xor
outsl
ret
mov
movsl
add
sub
inc
pop
adc
test
daa
out
push
mov
jae
loopne
inc
lods
data16
hlt
sbb
lock
and
cli
lahf
sub
xorb
jbe
repz
mov
lcall
xor
xchg
orl
pop
mov
cmpl
inc
or
sbb
push
mov
aas
wbinvd
lods
scas
jno
sub
mov
outsb
in
push
inc
sti
mov
cmp
push
lds
les
sub
pop
dec
jmp
push
adc
mov
cmp
xor
jecxz
adc
pusha
jne
stos
xor
adc
pop
loop
icebp
jp
dec
aas
jmp
jnp
adc
in
xor
xlat
mov
daa
jnp
pop
std
pop
lret
cmp
dec
sbb
xchg
jns
add
in
jg
cltd
js
aaa
rcl
push
fucomp
inc
inc
pop
orb
xor
movsl
ficomps
movsb
aad
cmp
scas
lahf
and
adc
xor
pop
insl
sar
test
mov
sbb
ljmp
lret
cltd
jg
pusha
mov
pop
cld
mov
lods
movsl
lds
int3
iret
mov
popa
cmp
je
out
sub
roll
fsubl
mov
lock
mov
test
test
out
js
cli
popf
jge
daa
mov
dec
mov
sub
add
inc
movsb
andb
aad
movb
adc
or
mov
fwait
sub
sub
xchg
inc
fwait
cltd
jne
in
packuswb
mov
nop
sbb
jne
test
je
fmull
int
leave
xor
pop
data16
sbb
fistps
dec
sbb
xchg
and
outsb
test
mov
jnp
insl
sub
push
dec
mov
xor
scas
arpl
cmp
sub
inc
icebp
inc
sahf
jb
hlt
out
outsb
push
popa
mov
cmpsb
cltd
dec
cmpb
stos
mov
xchg
arpl
and
xchg
pop
mov
inc
push
and
sbb
pop
dec
pop
ja
or
dec
mov
xchg
adc
jae
imul
or
inc
aam
xor
xchg
ljmp
mov
inc
add
jp
jnp
adc
ljmp
mov
scas
scas
xchg
rcl
mov
fstp
pop
mov
sar
mov
xchg
inc
idiv
int
pushf
scas
das
push
test
cmp
push
inc
outsl
fs
in
mov
inc
pop
mov
sbb
jnp
cli
mov
inc
pop
rorl
ret
ljmp
or
xlat
stos
mov
aad
push
leave
sbb
jno
shrl
lcall
add
mov
inc
push
jno
shlb
mov
xor
pushf
sbb
test
jmp
pop
xchg
pop
dec
packsswb
repz
sub
push
cli
mov
das
mov
dec
cmp
mov
and
adc
pop
and
xor
push
mov
push
push
mov
bound
mov
mov
dec
mov
out
push
ret
xor
fcoml
jnp
inc
divb
cmp
xorl
in
mov
xchg
or
mov
pop
mov
sub
dec
das
pop
xor
push
nop
popa
iret
mov
ret
icebp
mov
or
lret
adc
mov
jecxz
mov
pop
loope
xor
and
mov
cli
dec
test
aas
jl
leave
mov
in
cld
cltd
sbb
push
cmp
or
cmp
dec
ret
in
movsb
cld
sub
popa
shll
ss
daa
inc
test
rorb
xlat
adc
outsl
imul
scas
clc
in
into
ja
lahf
imul
les
add
adc
js
repnz
jmp
ljmp
sar
fdiv
sub
sbb
iret
aas
lods
pop
js
adc
mov
subb
insl
sti
stos
in
push
scas
xor
jnp
mov
push
fmul
jecxz
xchg
hlt
xchg
ficoml
movsl
jl
adc
jge
outsl
out
das
xchg
pop
andb
outsb
mov
pusha
les
cmp
ja
xchg
lahf
inc
and
shr
test
loopne
shrb
adc
repz
out
xchg
dec
sbb
cmc
test
es
lret
dec
pushf
xorb
mov
adc
aaa
sub
mov
xor
mov
adc
mov
fs
xchg
lea
xchg
popa
xor
pusha
xor
int3
xchg
add
mov
cs
movsb
sti
xchg
mov
lods
push
inc
jno
je
bound
iret
sbb
das
jns
jle
cmp
decl
cmp
jg
pop
pushf
fucomi
ja
js
ljmp
out
daa
mov
into
or
pop
test
or
xchg
adc
mov
add
or
mov
inc
or
ljmp
movsl
cmc
cmp
mov
lock
adc
or
shll
bound
repnz
loopne
xor
lcall
xchg
stos
dec
testb
jmp
into
add
or
orl
sbb
adc
and
testl
cmp
and
lret
sbb
xchg
sub
enter
mov
mov
add
movsb
mov
inc
movsl
cli
sub
test
mov
fwait
aas
test
lret
jg
loope
mov
jmp
fsubs
xchg
push
aad
inc
pop
sbb
jg
inc
testl
dec
into
jo
ljmp
hlt
and
jo
xchg
cmc
mov
fs
jge,pn
cli
jae
in
mov
jp
push
sahf
cmp
lods
repz
jecxz
mov
xor
test
sti
mov
sub
mov
lea
jg
mov
dec
arpl
or
jb
loope
sub
inc
int
imul
stos
stos
fwait
mulb
xchg
into
push
dec
outsb
xor
jecxz
shlb
pop
out
or
data16
pop
pop
xchg
jnp
xchg
pushl
pop
push
sub
pop
shr
jnp
fs
dec
or
mov
cmp
mov
xchg
popf
inc
sub
ja
lock
or
sbb
jne,pt
imul
dec
sbb
adc
rorl
fistpl
aad
addl
lds
mov
push
popl
mov
mov
in
mov
lcall
hlt
lret
push
lahf
adc
fdivs
inc
jp
inc
cltd
loop
ffree
out
push
lcall
test
sub
daa
xor
inc
mov
mov
xor
xchg
add
fcomps
imul
fldcw
ljmp
pop
jl
fnstenv
add
je
push
out
or
xchg
cmp
repnz
hlt
and
in
mov
fs
jnp
sbb
inc
mov
cli
into
jecxz
xchg
sbb
fwait
aaa
cs
aaa
pop
xchg
les
stos
mov
insb
or
mov
jno
int
out
mov
insb
mov
adc
add
cld
jl
cmp
mov
lea
es
dec
fbstp
pop
sbb
rcll
xchg
mov
popa
lret
cmp
add
out
mov
loop
mov
push
dec
xchg
jno
mov
cwtl
mov
add
push
fs
jecxz
pop
mov
movl
jle
sbb
scas
in
sub
jno
xor
xchg
repnz
sbb
inc
popf
sahf
push
pushf
popa
or
shrl
jecxz
push
jge
sbb
jmp
or
xchg
push
repz
shl
pusha
xchg
xchg
shr
xor
movsb
mov
xor
ja
xor
rcrl
mov
pop
add
adc
add
stos
clc
xchg
add
fadd
stc
sbb
mov
push
push
dec
mov
ret
int
pop
insb
cld
mov
jmp
les
mov
and
adc
fstl
mov
fstps
dec
iret
xchg
dec
mov
popa
jb
stos
xor
xor
rcrl
adc
rcrb
aad
addl
xor
mov
mov
movsl
jns
dec
inc
jle
mov
cmpsl
rorl
popf
mov
cmpsl
and
scas
mov
aam
sbb
push
iret
inc
jne
cmp
arpl
ret
daa
stos
or
cmc
fldenv
out
pop
shrb
adc
jle
sets
in
cmp
scas
jns
fcmovbe
adc
je
pushf
lcall
cs
inc
fmull
movsb
push
mov
push
mov
cwtl
push
or
fsubl
jge
and
xchg
and
movsb
mov
incb
popa
mov
shlb
bound
cwtl
lea
stos
xchg
push
add
test
scas
sbb
xchg
cmp
push
adc
cmp
jae
jb
cmp
sub
leave
pop
mov
mov
sub
movsb
push
cmp
jge
jmp
loope
mov
das
mov
out
mov
sbb
adc
jp
in
andl
loope
mov
call
fistpl
ds
cmp
dec
test
cld
sarb
loopne
mov
test
cmp
sbb
movsb
gs
jns
push
shlb
ds
sub
movsl
fistps
xchg
cmpsl
xchg
je
lods
loop
arpl
pop
xor
cld
dec
xchg
scas
xchg
insl
mov
mov
or
rcl
loope
pop
push
ret
mov
mov
int
pushf
cmpb
mov
cmp
jmp
repz
fildl
les
ret
inc
ljmp
inc
jg
pop
cmp
and
add
add
lods
mov
sbb
mov
jae
fistpl
aaa
adc
jl
xchg
push
sbb
test
and
sbb
adc
add
lcall
sbb
movsl
insb
mov
arpl
loop
scas
rcrb
aam
dec
rclb
popf
repnz
fnsave
dec
idivl
clc
inc
push
and
fcomip
cwtl
cmp
xlat
test
push
mov
cltd
or
lahf
mov
adc
mov
sbb
dec
xor
inc
add
fstps
imul
lahf
pop
pop
cmp
jl
xchg
inc
test
cmc
mov
call
int
lea
sub
sub
jo
ja
sub
fisubs
inc
ds
sahf
push
cmp
lock
pushf
outsl
xor
inc
adc
mov
int3
pop
out
fidivrl
sbb
jbe
rol
nop
or
fimuls
call
jg
insb
test
add
fldcw
out
fldcw
stos
cs
cwtl
fldl
or
faddl
or
inc
mov
lret
xor
mov
sub
or
inc
scas
jb
mov
stos
lcall
mov
add
lahf
testb
repnz
stc
lret
jge
or
push
push
pop
pop
popl
pop
dec
mov
idiv
mov
add
xor
or
stos
ror
lea
cmc
movsl
adc
pushf
or
push
sbb
cmc
or
jge
stos
ljmp
jae
std
jecxz
xchg
dec
fcoms
jbe
cli
jmp
cmp
mov
lea
stos
mov
adc
cmp
cmp
sbb
mov
ljmp
push
scas
outsb
ret
lods
mov
in
adc
mov
inc
xchg
movsl
xorl
clc
jmp
jnp
aad
adc
and
mov
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
cmp
daa
in
adc
and
push
mov
or
xchg
and
and
enter
aad
inc
out
push
out
push
sub
or
and
push
add
sbb
xchg
sbb
fcoml
int
dec
movsl
mov
sub
add
xor
inc
mov
jge
out
sub
les
xchg
sti
stos
lcall
dec
pop
mov
mov
sbb
push
rclb
inc
inc
repz
jge
ret
sub
push
js
loopne
ret
test
or
pop
jmp
xchg
or
cli
sti
push
addr16
push
out
dec
pop
add
in
add
fdivrl
rcll
inc
in
sbb
xor
cmp
pop
sub
ss
pop
push
ficoms
mov
mov
int
lea
cmpsl
jmp
je
or
dec
xchg
inc
imul
bound
mov
int
jle
arpl
aaa
add
loop
add
sbb
mov
ljmp
int3
stc
push
mov
add
ficoml
loopne
adc
stos
mov
lock
mov
mov
adc
nop
jne
call
xor
cmp
cmp
mov
repnz
leave
jmp
jae
inc
fldcw
add
mov
lock
decb
lahf
add
inc
or
mov
mov
stos
fldpi
inc
stos
push
mov
mov
add
xor
mov
js
push
in
test
mov
rcll
jno
aaa
aam
dec
push
push
pop
decl
xchg
sti
data16
pusha
arpl
jb
sti
cmp
jnp
add
xchg
out
mov
test
dec
imul
push
inc
cmp
adc
fldcw
push
in
inc
les
int
mov
jae,pt
into
xchg
mov
push
cli
cwtl
call
or
imul
pop
popf
sbbl
insb
shrb
push
divl
xchg
xor
xchg
sbbl
dec
add
inc
cs
mov
or
mov
add
adc
cmp
in
sbb
adc
ja
cld
xchg
jmp
loope
pushf
cmp
xchg
leave
imul
imul
and
scas
daa
fistpl
dec
bound
mov
add
sub
pop
out
sub
adc
out
push
aam
push
cmpsl
iret
pop
sbb
in
movb
cmpsl
add
loopne
jecxz
out
pop
xor
xchg
orb
sbb
push
and
pop
mov
xchg
sahf
adc
pop
bnd
aaa
jbe
xorl
jle
xor
jp
mov
xchg
and
popf
cmpsl
mov
xchg
jne
scas
rorb
rol
add
cmpb
push
mov
mov
mov
fstps
lahf
ljmp
testb
sarl
lahf
adc
shr
ja
inc
pop
iret
aad
inc
inc
inc
cmp
test
or
cmp
ss
jmp
xor
xchg
pop
dec
mov
out
xchg
push
ja
mov
int
pop
nop
fidivrl
sub
jo
jnp
mov
xor
bound
lea
cmpsb
mov
lcall
xchg
push
add
pop
dec
dec
dec
scas
test
les
jns
into
xor
ret
enter
sti
dec
fwait
jnp
stc
push
sub
push
lods
subl
in
push
pop
dec
or
mov
shlb
cmp
inc
int3
pop
addr16
xchg
add
xor
sub
stos
cltd
into
adc
fwait
or
push
lods
xchg
mov
mov
pusha
hlt
sbb
sarl
pop
or
test
sbb
cmpsb
cmpsb
in
cli
push
loope
dec
insb
add
dec
sbb
sbb
cmp
dec
pushf
data16
lods
jmp
add
addl
and
mov
test
in
repz
test
in
repz
sub
pop
inc
cli
or
push
sarl
pushf
loopne
sbb
dec
cltd
push
mov
push
dec
loop
mov
sbb
popf
or
mov
or
jb
loop
jo
dec
imul
fcmovnbe
push
ds
dec
int
sti
fdivrl
hlt
fimull
add
jp
mov
sbb
xchg
popf
xchg
nop
ljmp
add
aas
sub
cmpsl
jns
negl
sbb
cmc
xor
inc
add
movsb
or
xchg
push
ds
js
in
mov
and
fs
lcall
adc
push
les
pop
xchg
or
sub
lds
mov
mov
dec
es
fsubrs
cmp
stc
mov
gs
cwtl
mov
xor
jmp
mov
fidivl
or
out
int
cmp
fsub
and
pushw
adc
pop
mov
out
cmp
add
push
sbb
add
or
roll
cmp
jb
mov
in
mov
in
adc
inc
xchg
mov
nop
hlt
sub
insl
out
movsb
movsb
xor
faddl
or
or
add
push
and
into
in
adc
push
mov
fs
jg
lahf
mov
cmp
in
int
push
mov
jmp
add
insl
nop
cmp
fcmove
shll
int3
push
lcall
aam
insb
repnz
into
std
ret
dec
lahf
adc
je
jo
seto
shll
and
sarl
inc
mov
insl
shlb
push
in
inc
repnz
cli
cmp
arpl
mov
test
xchg
push
cmp
add
cmp
pop
xorl
mov
mov
mov
xchg
test
test
movsl
cmp
inc
repnz
mov
test
out
mov
push
fisubrs
enter
addr16
dec
and
lods
mov
pop
das
dec
cmc
sub
mulb
mov
lock
and
or
insl
or
das
dec
xlat
cwtl
xor
mov
inc
and
mov
js
sbb
fwait
xor
ror
xchg
cmp
stos
jmp
test
mov
jg
mov
adcb
adc
mov
clc
test
aad
cmp
in
mov
mov
pusha
addr16
sbb
stc
mov
inc
pop
lea
je
push
xor
lret
cltd
lahf
mov
je
push
push
push
mov
movb
scas
push
pop
lea
and
mov
xor
repz
sbb
lcall
add
lods
mov
fs
xchg
xchg
mov
xor
and
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
xor
adc
and
add
test
adc
loop
adc
or
js
aaa
xor
push
rorb
ror
xor
out
xchg
in
jne
fwait
paddusw
sub
and
add
jp
lods
das
mulb
sbb
out
rolb
das
fidivrl
mov
cmp
dec
pop
nop
ret
jmp
add
mov
push
test
adc
push
xchg
lcall
mov
cmp
inc
mov
pop
dec
int3
stos
push
push
ja
cmpsl
jg
mov
out
sub
outsl
push
sbbb
xor
xor
jbe
push
push
sub
push
sub
cli
cmp
xchg
mov
jg
inc
push
xchg
adc
enter
add
xor
out
loop
pop
loop
fwait
push
mov
lods
mov
pop
and
xchg
enter
loope
lcall
add
into
jl
xchg
sub
mov
das
jns
ret
dec
test
outsb
es
es
movsb
lahf
jb
mov
pop
jne
sub
jbe
cld
cs
mov
popa
rorb
loop
and
cmpsl
lcall
mov
jecxz
mov
stos
inc
xor
loope
cltd
jnp
mov
mov
pop
adc
shlb
inc
inc
mov
cmp
sub
adc
sbb
cltd
adc
movsb
push
mov
xchg
mov
push
sarb
jecxz
adc
clc
in
fisttpll
test
test
test
push
hlt
push
sti
inc
jp
pop
jl
push
dec
jno
sub
gs
push
aas
enter
push
fnstenv
jnp
jo
mov
or
jns
inc
cltd
nop
mov
xor
jae
aas
fstsw
fsub
lcall
jle
and
call
cli
movsb
fists
and
andb
jmp
adc
cmp
mov
mov
pop
lods
lret
nop
or
jecxz
pop
cwtl
inc
mov
sbb
pop
test
arpl
ret
mov
xchg
and
push
mov
mov
icebp
push
sbb
fisubrl
or
test
shrb
and
push
mov
sbb
mov
or
mov
repnz
rorl
adc
andl
mov
xchg
out
mov
mov
repnz
js
dec
out
sub
xor
xor
jecxz
pop
mov
cmp
orb
mov
movl
jb
mov
or
aaa
pop
popa
stc
lods
lcall
arpl
aam
insb
xchg
iret
out
pushf
and
sbb
dec
sbb
and
mov
dec
or
pop
and
stos
xor
dec
adc
arpl
jnp
clc
aam
push
add
or
out
dec
outsl
inc
pop
push
imul
mov
int
pop
add
mov
xchg
sub
pop
pop
or
aas
mov
mov
add
ret
adc
cli
pop
out
adc
lea
mov
or
test
pop
test
dec
aad
js
iret
pop
adc
std
dec
aad
xchg
mov
cld
mov
push
ret
push
adc
ret
xchg
push
add
popa
and
xlat
cmp
negl
faddl
dec
lret
sub
popf
mov
push
inc
cld
adc
adc
mov
lods
cmc
or
sti
cmpl
sub
pop
arpl
insb
bound
add
jns
jns
xchg
cmp
aaa
and
rcrl
dec
pusha
jl
or
and
pop
mov
test
and
adc
sub
xchg
enter
loope
cltd
dec
and
jbe
push
cmp
cmp
pop
adc
outsl
faddl
insb
adc
ja
out
cwtl
push
mov
iret
rcl
sahf
mov
aas
cmpl
cmc
aaa
cwtl
cltd
popa
jns
mov
scas
adc
xor
iret
fisttpl
int3
iret
popf
loopne
pop
mov
sahf
dec
lods
shlb
pop
adc
cmp
insl
xor
jge
or
test
cmpsb
pop
push
mov
cmpsb
xor
pop
xchg
stc
or
or
mov
jns
add
comiss
aad
adc
add
mov
lahf
jmp
aas
ret
and
loopne
aad
lcall
jp
cltd
call
sbb
cmp
mov
push
popl
add
hlt
cld
adc
ja
mov
aaa
inc
inc
xor
insb
xor
aam
and
fwait
cmp
adc
mov
movsl
fcompl
xchg
aad
imul
pop
sub
jb
out
dec
push
adc
stos
jl
xchg
in
add
inc
in
lods
sub
sbb
out
or
xchg
lods
clc
jmp
inc
push
fsubp
aam
xchg
sbb
and
xchg
fxtract
mov
push
negb
mov
jl
lea
popa
pop
call
mov
pop
shl
test
sbb
mov
movsb
test
dec
sbb
cli
cmp
dec
cmc
decl
ds
add
or
sub
jnp
xor
dec
movsb
arpl
std
pop
pop
iret
fidivs
les
pop
aad
sbb
sub
mov
fwait
push
aaa
jmp
hlt
out
cvtps2pi
adc
movsl
jns
insl
in
mov
mov
dec
ret
or
xchg
jb
ret
xchg
and
cmp
es
pop
fimull
cmpsb
mov
xorl
out
mov
test
mov
ss
inc
je
xchg
adc
loop
pusha
jbe
in
sub
sbb
inc
mov
ja
lret
cmc
and
mov
mov
sub
push
sub
mov
aad
jl
movsl
jge
push
mov
add
push
sbb
rorl
add
pop
aas
mov
or
lods
clc
mov
inc
aas
shll
push
cltd
call
rclb
call
insl
testl
and
stc
cwtl
cld
mov
out
aas
jl
mov
lods
cltd
cmp
call
fstpt
int
ffree
sub
dec
out
fs
push
push
pop
inc
or
adc
or
cmp
icebp
dec
and
push
xor
popa
mov
xchg
add
mov
jp
shrb
push
movsb
sub
mov
pushf
xor
mov
adcb
loopne
jl
jne
andl
fs
push
fs
add
test
push
test
inc
ss
sahf
sub
test
inc
sbb
je
mov
jnp
ror
shlb
mov
mov
jns
lcall
hlt
inc
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
cmpsl
pushf
xchg
inc
int3
adc
and
jmp
mov
inc
clc
fwait
add
insb
add
mov
dec
or
jge
test
add
push
rcrb
jg
push
lahf
clc
out
loope
sbb
div
test
repz
xor
ret
pusha
mov
and
test
in
dec
ret
xchg
pusha
cli
or
mov
or
adc
cmpsb
int3
cmp
cmpsb
mov
aaa
cmp
and
roll
jbe
pop
icebp
add
add
or
test
aas
mov
push
int3
mov
in
jge
and
repnz
dec
jno
lea
test
dec
fcoms
jnp
jmp
mov
test
cld
ror
xchg
xchg
jge
sahf
enter
ja
data16
adc
sub
and
insb
fdivrl
sahf
mov
sbb
and
jge
loope
daa
lods
xor
insb
pop
pop
or
mov
mov
loop
xor
fcomp
data16
xor
xchg
bnd
mov
outsl
pop
add
cmp
or
xlat
adcl
add
mov
test
dec
xchg
inc
jo
inc
fildl
sub
add
jg
xor
sbb
xchg
out
cmp
xor
incl
ror
idivl
es
aam
xchg
dec
repz
jno
fldpi
nop
dec
xchg
push
or
mov
imul
jno
aaa
inc
push
incl
sar
sbb
insl
jecxz
js
jp
push
daa
fisttpl
adcl
mov
pusha
sub
jae
push
sub
bound
out
cmp
cmp
and
mov
sbb
inc
out
xchg
jp
je
mov
test
adc
pop
push
ja
rcrb
push
cld
shll
mov
sub
inc
jo
cmpsb
ja
dec
ljmp
mov
mov
into
ss
mov
adc
and
scas
inc
cli
stc
fisubrl
sti
lahf
inc
xchg
decb
in
incl
ja
sbb
jbe
adc
dec
les
mov
test
sbb
ss
mov
adc
mov
push
shll
mov
or
cmp
jno
mov
sbb
jp
mov
insl
cmp
push
stos
testb
or
fidivl
arpl
jle
out
push
in
pop
inc
and
mov
sbb
lret
loopne
cld
dec
pop
pop
jmp
adc
lea
out
and
enter
mov
cmp
inc
adc
shlb
dec
pop
xchg
mov
aaa
std
push
cmp
mov
push
int3
shlb
or
mov
stc
xchg
outsl
mov
pop
ret
call
test
loopne
ds
add
and
and
push
pop
popa
ja
push
push
out
insl
xchg
jle
or
adc
and
or
aam
and
xor
test
std
sahf
and
ss
cltd
push
lret
std
repnz
or
cld
cmpsb
lret
add
shrb
test
nop
bound
xor
and
push
mov
xor
mov
mov
loope
cmp
mov
std
push
mov
xchg
mov
imul
imul
stos
jl
ss
in
nop
jnp
orb
out
loope
mov
clc
ficompl
inc
sbb
mov
adc
hlt
insb
sub
sahf
mov
xchg
sub
sub
jmp
call
cmp
lods
and
sbb
inc
adc
mov
arpl
jne
dec
push
bound
into
leave
lahf
pop
dec
std
leave
push
inc
pushf
dec
bound
lcall
xchg
aas
push
push
je
push
adc
ds
gs
mov
push
jnp
scas
mov
jae
in
sbb
adc
inc
dec
mov
cmpsl
shll
xlat
adc
mov
cmp
mov
mov
jnp
mov
mov
movsl
les
shrb
sbb
cmp
repnz
pop
sarb
add
jnp
cmc
sbb
xor
lret
cli
jno
into
imul
test
arpl
outsb
les
and
enter
clc
out
cmp
mov
test
xchg
nop
fimuls
sahf
mov
add
add
dec
jmp
das
inc
and
out
mov
jp
scas
dec
mov
jae
dec
daa
daa
fs
adc
pop
adc
lds
std
add
cli
mov
pusha
out
inc
enter
lret
push
mov
mov
xor
ss
inc
sbb
push
and
scas
out
mov
inc
add
outsl
pop
and
shrb
rcrl
mov
popf
push
aam
mov
testl
scas
aaa
cmpsb
jl
mov
ljmp
jmp
sub
sub
or
ficoml
aam
and
dec
adc
lea
outsb
stos
rcl
pop
jb
pop
scas
or
lea
cmp
jb
fdivs
shll
in
sub
mov
pushf
out
jecxz
sub
into
dec
fidivs
inc
cltd
std
sbb
sub
fwait
imul
and
jmp
inc
sbb
mov
add
scas
in
push
mov
fnstcw
xor
jmp
sbb
sbb
sbb
adc
pop
dec
inc
int3
insl
daa
and
mov
les
mov
pop
pusha
inc
test
or
fimull
movsb
sbb
jecxz
sbb
pop
xor
push
cli
adc
xor
fmul
fs
repz
jecxz
jg
pop
in
jl
sbb
test
dec
sbb
mov
mov
mov
dec
sub
inc
sub
mov
mov
inc
sub
add
xchg
jne
iret
and
dec
push
dec
xchg
rcrl
jp
lods
movsl
hlt
test
cmp
outsl
mov
shlb
cmp
sbb
mov
xchg
mov
push
cld
popa
pop
mov
addr16
arpl
les
iret
push
outsb
sbb
out
push
xchg
insb
lcall
lret
push
dec
into
mov
les
xorl
jo
cmp
scas
add
jle
scas
shlb
fidivrl
push
ret
and
and
es
repz
idiv
xchg
pop
dec
dec
push
add
mov
push
add
pop
add
xor
mov
lea
and
mov
jmp
scas
sbb
pop
cld
jbe
stc
hlt
push
and
sbb
inc
ss
and
lcall
popf
pusha
sub
push
or
aas
jmp
iret
test
inc
cltd
xor
insb
sub
cmpsl
mov
jb
leave
pop
inc
rcrl
push
mov
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
pusha
push
pop
mov
mov
shrb
sub
jnp
adc
dec
add
cld
xchg
pop
and
or
and
xor
and
sub
mov
and
test
hlt
jmp
aam
js
jbe
mov
cltd
pop
gs
test
and
mov
loope
and
cmc
ss
outsl
arpl
inc
jmp
aam
ja
testl
sti
out
adc
fiaddl
push
sbb
lods
sbb
gs
test
nop
scas
sub
mov
pop
sarb
jb
xchg
lcall
insl
int3
and
into
aam
sti
shl
gs
and
push
in
sbb
cwtl
mov
and
loopne
andb
mov
cmpsl
shlb
repz
pushf
imul
mov
dec
and
data16
xchg
shll
cmp
enter
pop
into
jne
cli
mov
adc
rolb
test
jl
out
pop
into
test
xor
dec
pop
xchg
adc
cltd
test
ret
jo
or
adc
and
push
aad
subl
jb
lret
das
imulb
xor
movsl
out
sbb
dec
mov
xchg
xlat
inc
xlat
inc
cmp
std
cmpsb
adc
repnz
cmp
lds
loop
jno
lcall
jb
aaa
sub
ror
in
test
lods
mov
push
mov
cmp
or
shlb
xor
dec
dec
adc
test
xor
push
or
jg
sub
mov
or
push
enter
rclb
dec
hlt
in
jno
sbb
or
mov
shr
outsl
test
fdivl
mov
jae
test
cmp
dec
mov
xor
test
push
pop
pushf
aam
mov
jge
lahf
cmc
or
push
sbb
or
pusha
inc
sub
lcall
xchg
cmp
xchg
mov
iret
test
push
cmpsb
es
lahf
and
or
outsb
push
arpl
movsb
xchg
loop
std
or
push
stos
push
adc
xor
loopne
mov
adc
scas
fs
outsb
fs
mov
mov
cmp
leave
cld
lcall
sti
scas
scas
push
and
pop
push
pop
and
bound
cmp
inc
inc
sbb
fstps
movsb
adc
jno
aas
mov
xorb
sbb
fcoml
jmp
xchg
lods
mov
and
sbb
mov
dec
subb
clc
xchg
iret
lret
jg
mov
mov
push
sahf
call
inc
scas
andb
jae
mov
dec
and
mov
xor
fs
fisttpll
dec
sub
scas
jp
push
inc
dec
hlt
stos
xchg
and
test
push
jbe
mov
pop
frstor
pop
inc
push
xor
cld
lahf
mov
sub
sti
sbbl
loop
add
xchg
and
mov
push
sbb
cwtl
push
mov
dec
clc
mov
xor
and
xor
pop
sbb
shrl
shl
push
xchg
pop
hlt
pop
mov
js
sub
jb
xchg
dec
testl
inc
push
fsubrl
imul
cmp
fimull
mov
and
cmp
je
pop
fmuls
jg
jo
ss
fists
mov
jecxz
or
call
fsubrs
dec
shrb
inc
leave
push
pop
movsl
mov
outsl
fadds
call
daa
dec
sub
jmp
jae
movsb
cli
push
push
in
and
fisubrl
das
sarl
outsb
roll
dec
jl
aam
in
sbb
push
stc
aad
dec
and
vminps
and
das
cmp
jmp
mov
icebp
push
fldcw
sbb
fimuls
mov
mov
in
out
scas
jp
jecxz,pn
add
out
lock
scas
add
fildl
sbb
movsl
sbb
clc
pop
popa
ja
stos
pop
testl
subl
xchg
mov
call
repnz
insb
mov
jecxz
dec
cwtl
std
adc
test
mov
jl
or
gs
jnp
xchg
ja
mov
mov
add
mov
mov
sbb
sub
push
stos
int3
iret
pop
pop
dec
mov
jg
inc
rol
test
sarl
adc
test
jmp
movsl
insb
rep
lods
repz
sbb
test
jmp
dec
push
subb
inc
gs
adc
mov
cmpl
push
or
das
push
lea
std
xchg
push
in
mov
mov
lret
fcmovnb
or
add
mov
icebp
std
fidivs
notb
push
fmull
add
out
js
push
ficoms
loope
int
and
push
and
adc
cs
lret
mov
pop
cmp
and
pop
sub
leave
xchg
push
lock
imul
fnstenv
mov
test
rcrb
adc
hlt
add
call
inc
xchg
xchg
mov
and
lret
and
adc
pop
ficoms
enter
cmp
and
ljmp
dec
mov
es
out
dec
bound
out
mov
test
out
xor
rorb
pop
pop
push
add
and
sti
roll
dec
les
fcoml
lods
mov
push
lret
cltd
xchg
push
aas
adc
sbb
inc
aaa
and
mov
mov
popf
jo
mov
adc
in
repnz
xchg
js
sub
stos
or
or
ret
jmp
and
xchg
mov
add
hlt
popa
jns
sub
xchg
cmc
pusha
mov
xchg
rcl
add
fsubp
pop
insb
nop
addr16
fbld
xor
mov
dec
adc
lret
pushf
fcomp
sbb
or
xchg
sbbl
xor
jg
cmp
push
xor
aam
and
movsl
fs
inc
dec
pop
sub
xor
inc
xchg
push
cli
test
cmp
mov
xor
mov
cltd
and
adc
imul
testl
push
gs
push
xorb
add
in
adc
inc
push
inc
push
inc
test
and
pop
inc
fdivrl
dec
dec
lret
and
add
repz
int3
cmpsl
cmp
xchg
push
std
dec
or
lods
mov
testl
pop
lret
ds
xor
and
jmp
jne
add
subl
xchg
inc
jge
mov
and
jmp
scas
jle
pop
mov
push
fimull
aam
aaa
js
mov
cwtl
sbb
lret
fstl
cli
nop
adc
lea
ja
pop
adc
lahf
pop
lcall
mov
push
call
imul
daa
cltd
jmp
mov
add
or
shr
in
dec
fisubrs
jge
lcall
sahf
pop
and
fdivr
adc
std
dec
lret
inc
pop
inc
in
fadds
pop
pop
or
jecxz
dec
js
lods
jb
ja
das
sub
xor
mov
lock
mov
sbb
sbb
sub
in
ficompl
mov
pop
dec
ret
insl
jnp
addl
mov
test
push
add
ljmp
loop
adc
sahf
mov
cmp
cmpsb
stc
inc
cltd
mov
mov
sub
mov
inc
push
inc
xor
mov
xchg
xchg
aad
mov
xchg
mov
add
xchg
mov
sub
aad
pop
sbb
fisubrs
xchg
insb
popf
roll
fadds
mov
ds
xchg
push
lret
mov
add
andl
pusha
pop
test
mov
add
in
dec
inc
dec
push
pop
ja
xlat
mov
andb
or
in
cmpsl
xchg
pop
lds
inc
push
sub
and
fst
xchg
xor
mov
scas
scas
mov
aaa
xsha256
cmpsb
adc
mov
pop
mov
jmp
ror
cmc
fs
aas
icebp
cs
mov
xor
imul
loopne
xchg
scas
sub
sub
xchg
imul
arpl
or
adcl
es
test
imul
cs
std
adc
jl
movsb
dec
out
fdivl
and
cmp
jge
dec
push
je
mov
cmpsb
sbb
xchg
pop
pop
outsb
xchg
cmpsl
insl
lret
jl
push
daa
xor
nop
sbb
aaa
mov
jb
call
inc
aas
adc
cwtl
sbb
push
inc
xorps
and
mov
lahf
sbb
jnp
rcl
iret
cltd
dec
out
mov
sub
mov
or
add
push
xchg
mov
jle
xchg
jmp
fcmovnb
jle
out
xchg
dec
or
aad
insb
data16
loop
mov
jb
pop
sub
dec
pop
push
pop
xor
addb
mov
jno
scas
pop
mov
pop
call
cmp
aas
and
fs
leave
mov
mov
and
stc
push
outsl
mov
loop
jno
xchg
dec
and
loope
rclb
dec
lahf
jl
jbe
fistpl
mov
push
stos
mov
mov
pop
push
lahf
mov
dec
xor
sbb
flds
dec
das
mov
adcl
in
or
mov
adc
xor
es
lds
mov
icebp
das
xchg
loopne
aad
cmp
jns
rcr
in
int
ss
xor
dec
and
popf
in
repz
icebp
add
push
push
mov
inc
and
xor
adc
adc
mov
daa
push
jecxz
and
nop
mov
mov
popa
dec
aad
inc
fldcw
or
push
pusha
xor
sarb
and
enter
xor
imul
xor
mov
int3
inc
or
adc
xor
notl
sahf
aad
loopne
daa
and
in
cltd
outsl
into
cmp
mov
test
fcoms
fwait
jnp
xor
and
loope
dec
sub
movsb
or
mov
and
pop
roll
xchg
fwait
in
cli
cmp
jne
xchg
lret
idiv
fiadds
cmp
pop
clc
and
out
pop
loopne
aam
std
cmp
mov
jns
adcb
icebp
cmp
sbb
mov
adc
jo
repnz
pop
dec
test
lcall
mov
aam
out
jno
xchg
add
gs
mov
test
xchg
xor
or
mov
adc
pop
inc
jo
add
icebp
lds
mov
adc
push
mov
sti
dec
jno
inc
dec
js
xor
jmp
or
push
xchg
cwtl
mov
jno
test
mov
xchg
aaa
dec
xchg
stos
mov
imul
xlat
jl
pop
xor
shl
arpl
push
test
push
push
out
jbe
mov
stos
jp
cmp
xchg
jmp
scas
fcomip
jae
into
negl
push
cld
adc
fs
nop
jno
pop
dec
pop
fildll
lock
shll
sbb
das
jle
in
xlat
dec
cs
int3
sti
sbb
out
and
push
push
sbb
and
aad
in
inc
sbb
sbb
int3
mov
lds
test
rorl
lret
xor
je
push
jne
adc
ret
xchg
loope
cmpsb
popl
js
mov
push
add
ljmp
mov
js
pop
push
pop
mov
lock
mov
mov
lods
jno
cli
cmp
repnz
popa
pop
std
out
lods
mov
in
mov
hlt
decl
lcall
jp
lcall
pop
int3
or
lahf
insb
addr16
ja
sbb
int3
jmp
pop
pop
or
outsl
jnp
cmp
push
call
clc
mov
cs
mov
neg
and
adc
insb
and
fisttpl
inc
mov
jns
lret
imulb
movl
leave
push
jg
adc
pop
call
jne
push
cld
jle
jl
mov
in
divl
jno
stc
int3
xor
inc
inc
orb
and
ret
dec
les
je
lods
test
iret
enter
xchg
addr16
testl
scas
out
mov
iret
repnz
push
and
push
shlb
or
push
insb
adc
pop
outsb
fstps
mov
push
mov
fs
mov
dec
jp
popf
into
popa
inc
mov
sarb
clc
pop
jp
cmp
popa
sbb
test
icebp
add
popl
mov
inc
cmp
add
and
mov
sub
xchg
ficoms
jl
inc
or
repnz
dec
mov
dec
and
mov
sbb
sub
pop
or
push
cs
je
mov
insb
cmc
dec
jbe
out
test
mov
xchg
out
and
cwtl
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
jmp
mov
mov
jmp
and
ljmp
icebp
dec
inc
jbe
repz
dec
imul
stc
int
sub
imul
sub
sub
xor
adc
or
jecxz
adcb
inc
jbe
mov
call
cmc
mov
xchg
xchg
addr16
outsl
pop
or
add
mov
push
shlb
mov
ffree
inc
sub
movsb
cmc
pop
dec
jg
mov
dec
xchg
out
bound
in
lods
lahf
adc
hlt
cmpsb
jo
stc
jno
cmpsb
add
cmp
mov
gs
sub
inc
popa
xchg
sahf
sti
roll
cli
test
cli
mov
jecxz
cmpsl
mov
or
fmuls
xor
jmp
leave
leave
hlt
and
enter
mov
aam
repz
sub
xchg
jno
cmpsl
test
test
adc
aam
xchg
rcll
lock
jno
inc
push
sub
loop
jo
dec
clc
or
mov
in
js
push
inc
xor
cmp
out
mov
ja
imul
inc
pop
cli
movntps
fstps
movsb
sbb
xor
cmc
rcll
dec
adc
mov
or
mov
negb
xchg
cmpsl
std
mov
ret
mov
sub
inc
scas
dec
icebp
mov
xor
arpl
into
mov
pop
test
lods
cmpsl
gs
sbb
iret
sub
pop
mov
cli
push
pop
outsb
pop
xchg
daa
or
push
push
mul
add
les
ss
inc
cmp
pop
dec
or
inc
and
dec
mov
sahf
and
orb
add
pop
mov
out
and
movl
mov
pop
sbbb
daa
ds
fbld
enter
pop
ljmp
sbb
mov
dec
mov
imul
dec
aad
pop
inc
jl
push
arpl
sbb
mov
mull
inc
mov
in
cli
leave
fcomi
movsb
jno
pop
pop
int3
shrb
pop
mov
adc
pop
fdivl
sbb
rclw
pop
adc
loop
hlt
mov
jo
movsb
xor
repz
leave
sarl
mov
int
in
pop
cmp
mov
jbe
sti
push
mov
pop
bound
ss
xor
xor
scas
in
mov
xor
fcmovb
movsb
movsl
jecxz
adc
push
mov
adc
sub
in
add
out
mov
imul
jne
or
jns
xor
pop
inc
mov
pop
into
mov
sbb
int
jmp
adcb
pusha
sub
pop
xor
movsl
xchg
les
add
insl
xor
mov
out
sbb
dec
push
dec
inc
cmpb
les
bound
cmpsb
cmp
stos
mov
in
xor
push
hlt
sbbb
sbb
adc
pop
xchg
outsb
sub
clc
in
repz
out
insl
lds
dec
in
ficomps
and
xchg
inc
cld
fs
lods
out
sar
dec
mov
inc
loop
fwait
aad
aaa
inc
add
mov
aam
push
scas
mov
sarb
int
aam
cltd
cmp
lock
ret
mov
sti
pop
enter
and
and
adc
rcrl
jmp
dec
in
mov
popa
cli
fdivs
xchg
imul
ret
cmpsl
js
mov
mov
fisubrs
mov
cmc
movsl
out
loop
push
xor
dec
mov
incl
jo
push
movsb
lret
push
pushf
xor
fsubrs
aas
mov
leave
inc
sbbb
mov
push
into
repz
arpl
sub
push
sbb
sbb
das
pop
fwait
mov
push
data16
cmp
inc
add
fcompp
sub
loopne
out
sbb
call
push
scas
mov
or
add
int3
fcomp
xchg
es
dec
leave
jnp
sahf
add
sub
jmp
loopne
fwait
dec
sarb
les
or
xorb
out
xor
jne
or
mov
push
idivl
mov
test
testl
ficompl
shl
decb
bound
mov
xchg
cmp
and
cld
ret
in
int
adc
xor
mov
dec
mov
dec
or
inc
pop
sbb
xor
sahf
inc
mov
mov
ds
jp
test
aam
xor
xor
mov
loop
sub
add
jp
mov
movsb
sub
int3
movsl
push
out
push
int
sbb
xor
imul
push
cmpsb
mov
inc
dec
testl
aaa
mov
pop
rorl
jbe
rcrl
xor
idivb
ljmp
mov
push
scas
aas
sub
dec
dec
repz
jbe
mov
mov
adc
out
sub
in
or
stos
mov
push
xor
pop
lahf
inc
imul
popf
mov
dec
and
mov
fwait
daa
jo
mov
xchg
jp
xchg
push
fimuls
sahf
stos
xor
dec
popf
imul
mov
mov
into
sbb
jge
adc
xor
push
inc
leave
mov
xor
inc
sahf
xchg
xchg
push
out
inc
dec
aad
ja
rorl
pop
pop
daa
mov
push
lock
int3
cs
jno
and
mov
ficoms
add
arpl
fsts
sub
fsubs
mov
cmp
mov
leave
out
dec
clc
in
std
and
scas
sub
sub
popf
push
test
fistpl
outsb
rcrl
mov
adc
jbe
fisttpll
in
mov
lcall
jbe
cltd
aam
repz
sub
cmpsb
inc
mov
push
popa
push
mov
add
xchg
mov
stc
imul
dec
stos
int
dec
movsl
inc
fxam
mov
stos
out
stc
lds
mov
mov
fcom
into
or
and
mov
outsb
fiaddl
pop
ja
adc
mov
pop
xlat
jbe
push
mov
dec
std
aam
mov
or
add
inc
in
ja
jb
push
pop
jbe
push
dec
fldl
inc
shrl
ljmp
jmp
cmpsb
aam
mov
xor
sbb
cmp
fwait
xchg
and
fwait
popa
or
ss
sahf
push
jp
sarl
addb
mov
push
push
invd
adc
mov
imul
add
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
fimull
mov
cmovle
ss
loop
enter
push
sbb
inc
pop
mul
mov
lea
or
lahf
mov
xor
aas
out
addb
mov
push
lds
dec
out
inc
inc
je
mov
push
inc
jg
push
aaa
push
cwtl
dec
cwtl
jmp
or
je
jbe
es
and
test
xchg
sub
mov
jmp
inc
pop
and
dec
mov
xlat
insl
sbb
jmp
sub
ds
push
cmp
xor
add
mov
push
fmuls
dec
add
popa
or
test
imul
gs
xchg
mov
cmc
and
cmp
push
dec
cmp
xor
push
and
dec
sar
repz
inc
xor
sub
cmp
xor
jp
in
mov
fcmovnb
add
inc
popa
sub
mov
in
xchg
sub
adc
sbb
das
ss
cwtl
jnp
adc
les
xor
adc
pop
push
popf
repz
and
jno
add
rcr
cli
cld
cs
filds
push
inc
mov
jb
mov
jnp
push
scas
or
fnstcw
jp
adc
stc
jp
adc
push
mov
and
cs
ljmp
inc
xor
and
cmpsl
popa
cmp
jp
and
negl
jle
mov
or
mov
jo
adc
dec
fdivr
addl
out
pop
lret
fnstsw
loop
lea
lds
dec
arpl
cmp
les
push
popa
mov
dec
push
test
or
fdivrl
int
rcrl
and
into
pop
rcrb
mov
inc
lcall
cmp
lret
mov
and
adc
dec
xchg
shrl
outsb
push
sbb
sbb
fwait
ja
imul
sbb
xchg
push
outsl
adcb
cmpsl
gs
or
mov
cmp
test
jnp
add
fdivrs
imul
je
inc
xlat
sbb
mov
aas
sarl
mov
adc
jno
call
and
ja
sub
adc
xchg
mul
pop
jge
fists
nop
cs
fistl
dec
hlt
aam
jg
pop
mov
cld
daa
jae
popf
pop
jbe
jg
cmp
shr
test
and
test
stos
shl
add
xor
pusha
or
cmpsb
push
mov
rorb
push
xor
adc
and
adc
rcrb
ret
rcl
pop
in
bound
jecxz
shrl
adc
sbb
mov
mov
and
and
cmp
sti
nop
jge
jo
cmp
divb
sbb
jo
into
mov
adc
push
lock
insl
xchg
and
mov
mov
subb
ds
sbbb
lods
jg
mov
mov
jne
gs
mov
decb
sarl
aam
push
jmp
insl
xor
cmp
pusha
in
push
mov
in
icebp
dec
ljmp
add
movsl
xchg
sbb
sub
adc
and
mov
mov
lock
jmp
or
cmp
pop
out
jnp
ja
cmp
pop
loop
xchg
movsb
les
sbb
jno
mov
adc
shrb
ret
fbstp
jmp
insl
jmp
fdivrl
sbb
test
js
ret
xorb
pcmpeqw
mov
and
std
xchg
hlt
pop
movsl
mov
clc
adc
push
inc
jne
push
cmp
mov
loopne
in
mov
cmp
wbinvd
dec
pmulhuw
fsubr
jmp
sbb
mov
les
push
aaa
add
mov
inc
or
lea
sbb
jne
pop
mov
daa
int
pusha
cltd
cwtl
push
flds
xchg
out
mov
mov
test
dec
pop
icebp
push
sbb
popa
push
mov
and
jnp
and
adc
or
or
cmpsb
daa
sbb
mov
and
mov
lahf
fs
cli
adc
aam
jo
jge
or
daa
jmp
and
xchg
lcall
std
adc
and
es
xchg
pop
sub
push
add
mov
fcoms
scas
sbb
fdivp
sub
jno
xchg
xchg
pop
ret
enter
ljmp
jge
push
jmp
icebp
or
inc
and
lods
xor
sbb
mov
sub
sbb
lahf
scas
rolb
xor
cwtl
fiaddl
cmp
dec
fildll
sub
pop
xchg
fisubl
push
pop
jecxz
push
push
xor
in
aaa
in
movsl
cmp
xlat
mov
jge
scas
fnsave
pop
jno
push
xchg
jmp
cwtl
or
dec
out
push
aam
sbb
adc
sbb
push
shl
fwait
mov
cs
pop
fdivs
pop
daa
dec
jmp
add
sub
fnstcw
mov
mov
and
fcmovbe
pop
xor
adc
and
into
arpl
xchg
and
xchg
pop
jmp
sbb
cmp
sbb
jecxz
arpl
in
mov
cmp
xor
inc
imul
dec
lahf
rcll
ret
push
divl
mov
cmpsb
jecxz
pop
ljmp
iret
into
add
loop
std
inc
inc
dec
cmpsl
pop
sub
fiaddl
repz
mov
sub
fstps
sahf
shlb
sub
mov
ljmp
and
les
jmp
pop
add
ljmp
xor
push
mov
ret
cmp
inc
fs
push
inc
cli
fwait
lret
test
imul
test
test
lahf
add
std
loop
cmp
popa
or
add
inc
push
jle
dec
adc
or
hlt
inc
sbb
arpl
jg
movsl
jns
mov
pop
es
and
repnz
aad
push
dec
loopne
fildll
cmpsb
jno,pt
fcmovnbe
mov
inc
scas
shrb
test
mov
push
and
outsl
cmpsb
aas
mov
fisttpll
dec
jg
jno
insl
dec
mov
jns
pusha
ss
push
int
sarb
mov
outsb
fsts
inc
mov
sti
cmp
sub
push
or
iret
xor
sbb
es
push
dec
ja
xor
nop
lcall
adcl
stc
cltd
and
jnp
xchg
in
popa
aam
inc
and
iret
shrl
push
jmp
sbb
push
adc
xchg
int3
xchg
inc
mov
add
call
sbb
cmp
sti
dec
adc
icebp
fidivs
and
cmpsb
leave
sub
les
xchg
lods
in
pop
cld
xor
orl
mov
test
orl
push
pushf
stc
or
sub
jb
push
test
pop
std
or
mov
inc
int
sub
sbb
jg
mov
xlat
dec
add
fdivr
xchg
or
push
outsl
push
sahf
je
roll
xor
xor
es
lcall
lahf
mov
cmp
fstl
cwtl
xor
shlb
test
and
adc
mov
push
insl
mov
mov
mov
aad
fadds
or
imul
cmp
stos
push
sahf
cmpsb
mov
sbb
stc
jno
gs
jo
mov
insb
and
jmp
out
movl
inc
sahf
icebp
dec
xchg
mov
out
mov
roll
data16
mov
inc
movl
add
aad
and
data16
cli
subb
aaa
push
js
cmpsb
cmpsl
aad
aad
and
add
hlt
pop
add
addb
shrb
hlt
sbb
test
jne
cmp
aam
call
repnz
add
or
or
and
fistl
or
movl
lahf
push
repnz
and
ljmp
scas
cmp
int
mov
pop
movsl
bound
bound
sub
adc
push
xchg
jmp
mov
nop
adc
sbb
and
sbb
pop
xor
jle
int3
jo
iret
aaa
mov
pop
mov
or
fstl
push
xchg
mov
pop
xchg
mov
fisubs
fsub
es
test
arpl
sub
stc
aad
sarl
es
push
pop
lcall
jns
test
cmp
bound
xchg
pop
xor
daa
or
or
ret
push
xchg
clc
or
dec
pop
mov
push
aad
xor
pop
popf
fldcw
call
ret
mov
fimuls
je
mov
ja
imul
jge
outsb
in
int3
pusha
sbb
mov
std
shr
inc
mov
mull
bswap
push
ja
xchg
xor
mov
not
push
jp
arpl
into
outsb
sarl
sub
mov
cmp
fisttpll
mov
lret
push
push
ficomps
push
xchg
icebp
and
jns
stos
mov
or
int
push
shl
sbb
icebp
mov
sub
mov
je
fwait
inc
cwtl
ss
push
lods
test
ljmp
shll
adc
pop
or
pop
inc
cmp
mov
inc
inc
data16
loope
mov
xchg
mov
xor
jp
fnstenv
push
jmp
ret
push
mull
lock
pop
fnsetpm(287
fs
mov
push
rorl
xchg
pop
inc
dec
je
repz
call
outsl
clc
imul
cmp
lret
sub
test
shll
cwtl
push
mov
icebp
mov
sub
inc
pop
sahf
mov
in
inc
shlb
sarb
in
sbb
mov
out
stos
aad
mov
icebp
nop
cmp
fstpt
push
fsub
sarl
xor
setno
push
in
dec
adc
test
les
push
and
xchg
sbb
and
je
mov
dec
push
loope
fcomp
sbb
push
and
xchg
sub
inc
insl
jle
cli
jle
push
mov
pop
sarb
cmp
sbb
in
mov
and
dec
push
sbb
cs
repz
mov
dec
dec
mov
pop
cltd
sti
rol
push
stos
pop
push
pop
ret
js
repz
jnp
dec
loopne
addr16
sbb
adc
xchg
inc
lds
dec
out
fsubr
add
mov
pop
add
shll
bound
ds
insb
xchg
sbbb
lds
dec
cmp
mov
inc
add
cmc
cs
test
mov
mov
add
and
add
scas
mov
and
nop
inc
push
xchg
int3
sarl
lds
mov
inc
add
mov
sbb
pop
popf
repz
inc
mul
jge
aam
mov
inc
xlat
sbb
mov
hlt
out
push
cwtl
out
fistpll
push
xor
jbe
and
lods
xor
loopne
mov
je
cld
add
dec
inc
dec
ja
stos
faddp
sbb
shl
icebp
popf
xor
push
pop
sbb
xlat
adc
mov
pop
adc
sahf
xor
cmp
adc
movsl
push
dec
xchg
rolb
addr16
or
dec
hlt
std
pop
add
xor
sbbl
imul
movsb
push
mov
dec
gs
adc
mov
or
inc
xchg
mov
push
data16
mov
sahf
xor
or
int
sub
repnz
sbb
outsb
dec
pusha
pusha
in
and
or
jae
pop
jnp
adc
pop
ljmp
leave
inc
loopne
aaa
mov
outsl
and
fnstsw
stos
imul
fcoml
push
and
xorb
aad
andl
int
scas
mov
mov
stos
ljmp
xchg
sbb
adc
ljmp
sbb
mov
and
adc
imul
js
js
and
fists
insl
sub
imul
in
in
push
ret
test
sti
fnstenv
out
orb
addl
lahf
pop
aaa
aad
das
jle
jmp
xchg
movl
xor
xchg
pop
sub
lods
adc
push
cmp
and
sub
popa
cli
jmp
dec
rclb
sbb
dec
sub
lret
lcall
scas
sbb
sarl
mov
shr
pop
jns
fnstcw
aad
das
lods
cs
stos
mov
pop
mov
push
ds
jge
js
xchg
xchg
mov
add
addb
cmp
sbb
xor
scas
mov
xchg
stos
lea
fsubp
std
aaa
lahf
addb
cwtl
lods
adc
mov
sub
loop
gs
and
fdivrl
mov
inc
ds
in
and
xchg
dec
mov
mov
std
cmpsl
or
mov
adc
add
addr16
loopne
fs
push
lock
sub
cld
repz
sti
outsl
dec
fwait
or
stos
xor
jecxz
cmpsb
andb
and
pop
push
mov
leave
sub
fistl
xor
mov
add
xor
add
insl
add
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
mov
xchg
jno
lahf
cmpsb
nop
popa
scas
and
in
pop
xor
cli
add
or
int3
lahf
add
test
jns
dec
gs
imul
lods
lahf
test
pusha
push
lret
jp
imul
fwait
enter
mov
nop
adc
mov
movswl
cltd
aaa
cltd
inc
jae
aaa
ja
cmp
in
push
aad
test
pop
mov
shll
rorl
mov
sarb
push
jmp
fstl
popf
jno
in
shrb
jmp
fs
test
sub
inc
jle
xchg
jp
ds
or
dec
sub
cmp
ds
sub
xchg
sub
inc
xor
xchg
xchg
cmpsl
stos
ja
in
hlt
imul
inc
jmp
dec
fnstcw
xchg
rolb
aaa
jecxz
jae
push
lret
popa
pop
dec
inc
popa
sbb
and
leave
mov
in
movsb
fs
loop
test
push
lret
arpl
orb
jg
mov
and
loop
mov
sarl
push
inc
stc
and
jnp
test
mov
pop
pop
mov
cltd
and
ja
bound
gs
pop
cmpsb
add
mov
mov
je
outsb
dec
jmp
mov
movsb
aad
dec
and
stos
jmp
stos
pop
push
pop
xor
ds
adc
pop
sahf
fs
or
sbb
dec
jns
aad
rcrb
sub
jb
loope
pop
dec
outsl
dec
scas
jbe
cmp
rorb
imul
ret
xchg
add
arpl
mov
stos
in
xchg
pushf
add
cwtl
mov
nop
scas
push
push
lds
fdivrs
xor
jle
loopne
ds
sbb
das
mov
dec
xor
adc
das
push
mov
sahf
push
jle
popf
adc
dec
lods
gs
mov
repz
insl
push
and
dec
into
aad
mov
xor
lock
push
test
movsl
pusha
pop
rolb
pop
push
cmp
pop
inc
push
sahf
int
fsubr
subl
sbb
aaa
jmp
aas
xor
lods
cmp
in
xchg
cmp
sahf
fs
std
xor
ret
cmc
insl
mov
sbb
and
mov
xchg
int
test
je
outsb
adc
test
jmp
rcr
sbb
xchg
and
shll
xchg
loop
lret
popa
shl
sbb
dec
xchg
mov
xchg
and
and
sbb
shlb
aam
sti
jb
pop
pop
push
inc
mov
int3
idivl
aaa
push
and
mov
fxam
push
add
lods
out
pop
xchg
ljmp
lods
pop
ja
dec
cwtl
fcmovu
in
pop
sbbl
mov
loopne
push
pinsrw
std
test
dec
cs
popa
add
jnp
cmp
or
sar
shr
out
xor
mov
pop
hlt
add
dec
shll
adc
insb
add
fisubrl
xor
push
jb
mov
icebp
adc
inc
cld
or
add
imul
pop
xchg
shlb
cmp
dec
jmp
loop
andnps
sbb
iret
push
in
push
xor
sub
mov
lret
xlat
ss
shl
pop
outsb
in
cmp
stc
std
out
or
cli
scas
inc
fs
xchg
loopne
or
push
xlat
push
add
inc
stos
popa
push
dec
sbb
dec
loope
lds
inc
test
js
lock
data16
into
mov
lcall
jo
movsb
out
sti
xorl
mov
mov
enter
cmp
mov
mov
xor
mov
mov
xchg
xlat
pushf
mov
loop
adc
xchg
call
cmp
stc
add
daa
jp
test
push
mov
adcl
inc
pop
xchg
dec
jp
dec
loop
xchg
loopne
mov
cmp
dec
repnz
cmc
jnp
xchg
fstpt
xorb
loope
inc
or
push
movntps
outsb
shll
jp
sub
dec
repnz
xor
mov
inc
outsb
sbb
lahf
fdivr
jg
push
movsb
pop
sub
in
cltd
dec
add
xchg
movsl
and
scas
pop
sub
fisubrs
xchg
jle
xchg
mov
das
lock
iret
sahf
adcl
dec
lods
mov
inc
fcmovnbe
fiadds
push
iret
jp
mov
outsl
mov
xorl
xchg
clc
into
mov
jne
movsl
fwait
int3
jmp
xrelease
pusha
fnstenv
sbb
mov
and
fildl
ret
mov
push
xchg
imul
rolb
outsb
imul
adc
jnp
jo
push
jge
stos
es
movsb
xchg
aaa
mov
or
push
xchg
lcall
leave
mov
gs
stos
es
cmp
add
cmc
mov
sub
outsb
cmp
mov
inc
or
ss
mov
ret
icebp
adc
mov
rorl
jns
mov
mov
movsb
mov
jmp
pop
xor
outsb
mov
sbb
iret
shrb
cltd
loopne,pn
push
inc
pop
ret
lds
push
add
jnp
and
movsl
inc
xchg
scas
out
ljmp
outsb
adc
adc
testl
mov
cmp
mov
sbb
ret
xchg
pop
jmp
js
es
dec
sub
sub
stos
push
arpl
cmc
or
sbb
sub
xor
lods
xor
pop
ret
inc
int
inc
push
jmp
jmp
pushf
mov
mov
mov
and
push
inc
iret
xor
push
ja
repz
scas
dec
mov
mov
das
fneni(8087
or
mov
cli
fisttpll
addr16
cmpsb
imul
xchg
jle
das
es
dec
adc
inc
adc
shlw
aaa
iret
cltd
jnp
jmp
fildl
lcall
jmp
shll
pop
punpcklwd
test
adc
jge
movsl
push
pop
pushf
rcrb
push
sbb
shl
xor
inc
pop
ret
test
push
dec
lds
adc
stc
pusha
lds
fdivrs
sbb
addr16
out
int
jbe
and
xor
jl
mov
push
mov
lods
mov
adc
pusha
cs
xchg
pop
xor
outsl
nop
das
xor
cmpsl
xchg
rorl
test
mov
push
decb
bound
and
fildl
fsubrl
dec
lret
mov
mov
jge
sub
lcall
movsl
sbb
movsb
addl
popf
push
mov
data16
xlat
cmpsb
jbe
adc
mov
or
add
fnstcw
pop
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
fwait
sbb
jbe
jno
mov
inc
fsubp
out
fcmovu
xor
je
cmp
dec
dec
inc
mov
aam
mov
cmp
sbb
add
shll
jp
pushf
lret
sti
shl
xor
cmp
rolb
lods
in
mov
add
fsubl
pop
imul
add
pop
loope
push
sub
fcmove
jns
jo
jp
das
adc
movsb
jb
lcall
out
leave
mov
cmc
mov
cmp
outsl
stos
mov
push
and
lods
rcll
pop
or
adc
icebp
popf
xlat
sbb
mov
das
pop
add
sub
jbe
xchg
cmp
jg
cli
insl
cld
adc
sahf
xor
jmp
in
jb
hlt
cmp
mov
add
lret
fwait
int
hlt
push
in
xor
push
xor
out
ret
jne
fwait
and
dec
or
adc
pushf
sbb
sahf
sub
adc
adc
lods
in
out
das
mov
fcom
cmc
arpl
lret
jle
call
jle
js
cwtl
jmp
insl
notb
mov
xor
xchg
cli
jle
xchg
mov
inc
shr
sbb
in
in
cs
and
iret
inc
sbb
inc
ret
hlt
cmp
adc
cmpsl
mov
inc
mov
or
int3
add
testb
call
ss
xor
imul
xchg
test
add
xchg
and
int
mov
push
push
pop
adc
inc
xchg
jne
mov
scas
xchg
sarl
xchg
inc
stos
test
inc
sub
cmp
sbb
iret
inc
push
nop
stc
mov
jb
jbe
jecxz
sbb
mov
aam
daa
jmp
insb
das
pop
psrlq
push
adc
mov
dec
xchg
fs
push
xlat
xchg
stos
bound
repnz
shrb
adc
aad
jg
iret
popf
xlat
and
xor
cmp
lret
sbb
arpl
mov
ds
jp
or
mov
fsts
push
add
mov
mov
out
lds
adc
add
rorb
clc
xor
int
and
int
je
mov
sub
movsb
pushw
inc
decb
mov
in
movsb
ljmp
mov
mov
fisubrs
cmp
and
add
mov
adc
mov
cli
mov
loope
mull
mov
pusha
repnz
shlb
pop
add
mov
test
nop
jmp
nop
or
jp
mov
shll
ljmp
mov
push
ja
cmpsl
lahf
add
repz
cli
mov
in
aam
xchg
fnstsw
mov
call
cmc
add
aas
mov
mov
cltd
bound
lahf
pop
jnp
scas
pop
jmp
push
fidivrs
arpl
dec
shr
push
pop
stos
inc
and
bound
pop
dec
sub
push
pushf
xchg
lahf
cmpsb
pop
inc
cltd
cmpsb
push
mov
loope
popa
movsl
inc
and
or
inc
cltd
shll
add
xor
xor
xchg
out
mov
aaa
mov
daa
in
add
sbb
in
or
sbb
jmp
adc
or
mov
push
add
lods
pop
pop
push
dec
cltd
mov
ja
pop
imul
add
cmp
ss
cmp
loopne
loopne
add
push
push
sub
jecxz
out
sub
test
dec
adc
jo
gs
inc
loope
dec
test
mov
mov
sar
std
push
js
je
imul
xchg
es
jmp
cmc
popf
scas
jl
jne
ret
repz
push
or
push
sbb
and
dec
outsb
movsl
sahf
jg
pop
jne
xor
xchg
add
jp
jo
mov
popa
jo
mov
test
je
push
int
mov
outsb
inc
sub
mov
loopne
xchg
sub
call
push
mov
rcrb
mov
sti
arpl
jnp
xchg
pop
fwait
jg
add
sbb
popa
and
mov
push
mov
incl
mov
add
jmp
pop
cmp
sub
in
push
icebp
pop
push
repnz
push
adc
call
xchg
in
cmpsl
add
mov
inc
in
adc
jg
xchg
and
test
into
dec
jae
fadd
xchg
pop
jp
jb
push
fistpl
daa
ficoml
popf
stos
xor
pop
push
cmp
xchg
pop
call
pop
mov
cmp
or
jp
roll
and
and
lock
aaa
lock
fwait
jns
clc
in
in
or
inc
aaa
push
mov
leave
mov
das
loopne
icebp
mov
cmc
push
mov
push
pop
jp
cmp
aam
test
je
fisttpll
adc
out
clc
inc
pop
outsb
add
decb
pop
out
repz
fmull
jp
dec
dec
sub
mov
popf
xchg
sbb
mov
cmp
data16
insb
shlb
xor
ja
push
popa
in
push
push
aam
icebp
mov
mov
push
test
stos
clc
pusha
adc
adc
test
xchg
pop
out
movsl
daa
dec
mov
adc
lea
insl
pushf
xchg
mov
rclb
xchg
out
rcr
xorb
xor
insb
icebp
xchg
in
roll
pop
mov
jae
jecxz
adc
pushf
mov
jmp
push
sahf
lock
loop
cmp
add
arpl
lret
lahf
push
jl
push
icebp
mov
sbb
mov
call
sub
xchg
stc
psubw
aam
mov
lods
inc
adc
and
pop
push
inc
lahf
enter
ljmp
icebp
xlat
mov
adc
in
inc
or
cld
movnti
clc
mov
sbb
test
mov
inc
dec
jmp
mov
sahf
jp
ret
jle
sti
jnp
rol
aam
jle
xchg
mov
sahf
mov
mov
ja
pop
roll
mov
push
xchg
adc
ret
pop
xor
xor
arpl
je
fcmovbe
ds
es
cmp
fs
mov
int3
imul
dec
push
mov
push
pop
inc
cmp
ja
and
dec
or
push
aas
jnp
stc
ret
or
pop
cmc
and
jle
and
repz
dec
aad
add
aaa
fcomps
mov
dec
jno
push
push
pop
add
movsb
mov
xor
ret
dec
or
dec
and
adc
adc
imul
testb
xor
and
sbb
add
sub
xchg
movsl
into
dec
outsb
ss
dec
jb
call
stos
adc
test
push
sbbl
pusha
lods
pusha
or
mov
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
inc
push
pushf
xchg
xchg
adc
addl
ret
push
mov
ret
xor
rorl
mov
les
xor
or
lahf
sub
inc
cmp
sti
mov
loop
dec
add
dec
stos
repnz
xor
sub
xchg
push
mov
inc
je
in
fsts
mov
pop
or
js
pop
pop
add
cmp
mov
inc
xor
cmp
sub
dec
aam
movsb
movsl
rclb
mov
cmp
xchg
popf
pop
lret
dec
mov
popf
test
pusha
cli
mov
xchg
sbb
push
push
call
jbe
sub
dec
cmp
mov
jmp
sub
push
sahf
mov
data16
mov
pushf
sbb
movsl
je
ds
adcl
leave
clc
push
or
out
sahf
sbb
popa
fmul
sub
inc
mov
pop
lods
adc
mov
js
push
sbb
and
jo
jns
mov
imul
pop
mov
sbbb
rclb
test
clc
fdiv
aas
leave
inc
faddl
xchg
in
mov
and
mov
gs
negb
cmp
icebp
jb
testl
mov
or
stos
add
push
cmc
icebp
cmpsl
or
cwtl
and
outsl
jmp
mov
cmp
add
pop
cmp
fsubl
cltd
xlat
cmp
mov
and
xchg
add
xchg
inc
pop
push
or
cmp
leave
popa
in
cltd
sbb
pop
loop
mov
sbb
sub
pushf
movsl
sub
sahf
pop
mov
ror
inc
push
ljmp
sub
mov
inc
push
pop
mov
aad
push
add
push
mov
das
iret
ret
jmp
in
cmp
xor
xchg
fcmovu
and
cwtl
add
mov
sub
and
test
pop
test
movsl
dec
inc
push
sbb
xchg
popf
cmp
adc
daa
push
adc
adc
test
cwtl
pop
sbb
mov
dec
dec
mov
xchg
inc
pop
adc
lds
sub
cmp
mov
or
in
push
mov
mov
cmp
jae
out
push
cmp
sub
pop
repnz
inc
arpl
out
add
repnz
sub
push
scas
sub
mov
xor
jmp
mov
cmp
repz
sti
dec
arpl
jecxz
add
and
xchg
enter
or
mov
sarb
test
fnstcw
enter
int3
mov
adc
ret
mov
pop
cwtl
cmp
rcrl
push
push
sub
sub
jns
mov
xor
xchg
and
mov
clc
or
out
adc
cmpsb
ficompl
mov
movsb
jno
mov
mov
mov
and
push
in
and
popf
add
pop
sahf
ja
push
and
adc
sub
pop
push
adc
out
clc
and
fadds
jmp
adc
insb
jmp
stos
mov
push
jg
jl
lret
xchg
xor
int
pusha
xchg
fstpt
jo
or
mov
xchg
inc
xchg
shll
cmpsl
xchg
xchg
jle
scas
adc
cmp
lcall
push
sub
or
push
aad
cmp
mov
fmull
insb
outsb
jo
pushf
je
rcrb
mov
rcr
loope
add
int
sub
add
imulb
fs
and
lds
in
leave
sarl
cmc
dec
fmull
push
mov
add
push
rcll
and
pushl
ror
shll
push
adc
shlb
adc
inc
cld
push
int3
lods
bound
mov
mov
fisttpll
pop
dec
mov
filds
mov
sahf
and
loopne
sbb
cmp
push
xor
dec
add
xchg
xlat
dec
idiv
dec
pop
imul
icebp
jge
test
int
int3
mov
xchg
sbb
mov
lret
mov
cmpsl
dec
push
pop
adc
iret
loope
fmull
sub
int3
dec
addr16
push
in
adc
push
shll
cmp
out
inc
mov
sub
and
xchg
aad
pop
mov
cld
dec
and
xor
jle
cmp
stos
add
xchg
xchg
xchg
add
rclb
sub
xchg
push
push
and
jnp
push
xor
loopne
mov
jg
clc
mov
clc
fldt
ret
sbb
rolb
mov
imul
hlt
add
insb
xchg
rol
jecxz
imul
icebp
add
sub
rcrb
xchg
adc
rclb
je
sub
xchg
das
subl
sub
lcall
lret
adc
cli
repnz
mov
adc
pushf
lea
popa
testb
bound
cmpsl
or
adcb
mov
dec
adc
sbb
js
sub
xor
cld
jns
enter
repnz
andl
sbbb
inc
in
sbb
addr16
pop
xor
clc
sahf
lahf
inc
mov
mov
push
push
popf
std
int3
ficoms
ss
inc
in
outsb
cmp
js
sarb
pop
repnz
xor
xchg
rcl
push
loop
push
repnz
fadd
enter
js
aam
jecxz
lds
cmp
enter
mov
cmpsl
adc
mov
push
or
xor
dec
adc
mov
aad
jg
into
movsb
insb
hlt
cmp
mov
arpl
mov
punpckhwd
mov
cltd
aaa
dec
test
xchg
into
mov
jp
pop
dec
jg
test
mov
dec
arpl
pop
cmp
cmp
cli
jns
inc
je
or
xor
scas
rorb
jb
rcll
xchg
and
out
popa
ret
enter
sbbb
or
lods
push
cwtl
mov
mov
xchg
aad
adc
xor
scas
aad
fidivrl
add
mov
mov
sub
push
out
shrb
xchg
ss
out
mov
or
mov
mov
lods
outsb
push
and
mov
adc
test
stc
cltd
stc
out
jg
adc
rcrb
daa
fwait
repz
push
mov
add
jmp
push
mov
add
in
push
pop
push
loop,pt
fldenv
notl
fwait
enter
imul
and
push
sub
in
divps
pop
imul
aaa
pop
push
enter
sub
mov
jg
into
test
sahf
addr16
nopl
lret
pop
aad
sub
dec
mov
pop
mov
inc
sbb
iret
mov
shrb
sbbb
sbb
cmp
sub
cmp
aas
popf
insl
ds
dec
test
xchg
mov
cld
cwtl
pop
pop
and
mov
and
pop
outsb
cmp
sub
outsb
jg
insb
jo
aas
insb
xchg
dec
je
xchg
fsubrp
mov
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
cwtl
js
push
adc
addl
xor
sub
and
sub
mov
xchg
push
pop
sarl
adc
ds
xchg
mov
sbb
mov
ret
xchg
les
jo
imul
jle
mov
call
outsl
scas
lret
mov
hlt
xor
pop
dec
loope
mov
fucomip
inc
movaps
stos
xchg
negl
into
cmc
adc
outsb
xchg
lods
cmp
jno
pushl
sub
jmp
cwtl
push
lods
sbb
addr16
insl
or
enter
pop
sbb
push
clc
xchg
cmpsb
movsl
lock
ljmp
sub
or
pop
popf
mov
jecxz
shlb
jae
popa
stos
cmp
enter
popa
into
ss
jno
inc
in
pop
scas
data16
mov
cmp
or
xor
pop
repnz
mov
shll
mov
mov
lock
stos
cmp
out
inc
and
mov
test
push
jmp
lock
add
stos
call
lock
push
das
mov
xchg
mov
fmull
sbb
icebp
jb
scas
imul
inc
icebp
lods
popa
mov
adc
xchg
data16
pop
inc
out
je
sub
dec
or
and
jle
cld
imul
std
pop
xchg
data16
push
fdivrs
dec
cmp
dec
out
mov
fimuls
bound
pop
and
lret
xor
pop
cs
mov
fwait
jge
push
pop
xlat
icebp
sub
push
lea
out
jmp
sbb
popa
cmp
inc
testl
iret
lcall
daa
cmp
fadds
add
push
xor
loope
add
inc
orl
pop
outsl
jmp
mov
shl
sbb
shll
fsubrs
push
or
jae
mov
divl
adc
add
sbb
int3
fwait
sbb
icebp
push
mull
adc
inc
inc
lcall
inc
mov
add
adc
ljmp
sarb
cwtl
and
ds
adc
sub
int
jae
lret
pusha
jmp
inc
test
pop
mov
fstps
scas
and
or
out
mov
push
mov
push
jge
mov
xorb
sahf
sbbl
xor
dec
lods
rorb
mov
dec
mov
pop
jns
movsb
xor
mov
or
jle
shl
sub
mov
out
addr16
xcrypt-cbc
xchg
jno
loopew
xchg
movsl
adc
mov
cs
jae
xchg
cmp
test
aaa
lret
mov
push
lds
jmp
sub
jecxz
sbbl
dec
outsb
push
mov
das
mov
in
push
int3
cli
fwait
xlat
dec
cwtl
inc
mov
jp
es
or
push
mov
xchg
ds
aad
movsb
mov
insb
push
loopne
lret
lock
mov
enter
cmp
rolb
push
aas
push
and
stc
call
ds
mov
in
pop
xor
les
iret
ds
subb
or
mov
cwtl
pop
call
mov
lock
imul
fbld
shrl
out
stc
pop
je
enter
loopne
lods
xor
popf
cmp
lods
xchg
pop
fcomps
or
mov
push
mov
shlb
mov
lahf
subl
jns
loop
dec
and
shl
cmp
jl
aaa
mov
jno
cmp
sub
add
cmp
sahf
test
sbb
imul
insl
pop
mov
mov
mov
sub
cltd
sub
mov
shrb
mov
jns
ds
xchg
into
fcomip
xchg
stos
lock
mov
imul
or
xchg
dec
cli
imul
loopne
pushf
cmp
or
mov
pop
dec
jo
data16
cs
gs
or
xchg
cmpb
fisttpl
dec
add
mov
aam
cmpsl
dec
call
fstpl
notb
loope
xchg
int
fnstenv
mov
and
jle
inc
sti
cmpsl
out
and
and
and
xchg
gs
sahf
fwait
ss
aaa
sahf
mov
ljmp
aad
mov
dec
aad
das
ret
int
in
push
shl
rcl
mov
xchg
inc
lret
jg
incl
insb
test
xor
in
push
xlat
push
adc
shlb
arpl
repz
cmp
dec
sbb
fisttpl
jb
lahf
jb
arpl
dec
add
insb
inc
jmp
adc
fwait
adc
out
add
mov
pop
ret
push
pop
aam
add
arpl
jge
push
mov
lret
mov
or
rcrl
test
and
mov
into
iret
cmc
pop
clc
aad
mov
mov
mov
fbstp
add
repz
push
xchg
xchg
in
mov
neg
jmp
sahf
out
xchg
lcall
ja
call
hlt
scas
ds
jecxz
mov
enter
fs
jl
lcall
or
loopne
int
bound
cmpb
inc
sbb
enter
std
push
lock
dec
sub
and
push
cmpsb
mov
xor
popf
aas
daa
das
in
dec
xor
mov
mov
fs
sbb
js
jl
and
mov
arpl
inc
gs
hlt
fistps
pop
ret
push
in
bound
jnp
scas
sub
push
adc
cmc
sbb
mov
test
mov
out
aas
add
std
xor
jns
sbb
roll
pop
adc
or
jmp
push
mov
jnp
mov
lret
imul
sahf
pop
inc
in
js
into
call
mov
xlat
cltd
xor
mov
pop
roll
xor
ret
adc
sahf
mov
insl
fcomp
push
mov
sbb
repz
jae
ret
out
jmp
mov
add
jo
ds
leave
xor
push
sarl
cs
stc
cmc
rolb
xchg
cmp
pop
push
fnstcw
fildl
pop
vprotd
mov
imul
and
rorl
ljmp
hlt
mov
push
leave
subb
adc
stos
and
xor
ficomps
es
dec
loopne
add
inc
frstor
pushf
arpl
dec
mov
roll
xchg
fs
outsb
test
clc
insl
and
insl
lret
mov
mov
dec
and
dec
dec
outsl
cmpsl
sbb
rolb
inc
sbb
xchg
cltd
sbb
clc
add
jp
cltd
cmpsb
mov
into
in
lret
add
xchg
sbb
loope
arpl
fildll
cli
fcoms
iret
fmull
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
xor
out
mov
out
sqrtps
in
push
inc
and
xchg
jecxz
out
out
lock
int3
int3
sub
lods
leave
sahf
jae
cmp
and
adc
and
je
and
mov
mov
dec
cltd
push
sub
out
subl
insb
pop
lret
sub
jmp
inc
mov
test
sub
sub
ret
jg
ret
stos
stos
stos
mov
lret
lret
push
push
movsl
add
add
xorl
xor
clc
fucom
outsb
pcmpeqd
in
jbe
lcall
jo
jno
push
fcoms
push
rclb
xchg
outsb
int
sbb
sahf
pop
sarl
pop
popf
jns
fwait
addr16
lea
jae
cwtl
mov
sub
adc
mov
addr16
pop
cld
ja
jecxz
lret
push
dec
add
lods
mov
pop
mov
and
std
mov
imulb
stos
mov
addr16
push
and
shrb
inc
or
ret
mov
add
xchg
das
cwtl
jl
dec
loope
aaa
ss
popa
push
dec
movsl
cld
adc
push
mov
sbb
int3
xchg
push
dec
cmp
leave
adc
mov
sbb
aaa
jb
sub
aas
cwtl
out
cltd
xor
sub
cmc
push
fstps
lret
pop
fnstcw
iret
push
xchg
popa
mull
inc
dec
cmp
dec
xrelease
sub
loop
push
xor
jle
jmp
imul
sbb
inc
xlat
dec
das
rorb
lret
or
jp
jbe
lods
in
mov
jnp
mov
mov
es
out
inc
cmpsl
shll
or
or
decl
or
in
ja
popa
int
push
xor
and
adcl
sahf
sub
in
sub
pop
xor
jge
jg
jnp
shrb
outsb
dec
into
mov
xor
addr16
xor
sbb
call
add
mov
popa
xor
cwtl
jge
push
push
dec
adc
lock
or
js
push
mov
adc
out
mov
push
pushf
pop
ficompl
int3
lds
stos
xchg
ret
mov
mov
jno
mov
and
jno
clc
dec
fs
or
sbb
mov
stos
pop
jge
pop
mov
sub
sbb
in
insb
inc
mov
out
stos
nop
nop
sub
fwait
arpl
lcall
daa
repnz
stos
sub
mov
or
orl
sub
imul
scas
mov
adc
lret
aaa
mov
pop
shlb
push
or
int3
ljmp
out
js
cmp
andl
jnp
loope
or
dec
pop
mov
dec
mov
inc
pop
sub
mov
in
cld
arpl
push
pop
faddl
imul
pop
out
pop
rcl
inc
cmp
arpl
in
dec
daa
into
dec
mov
ljmp
in
push
fsubrs
jmp
or
cmp
repz
dec
lahf
imul
paddb
scas
xor
xchg
adc
decl
mov
in
in
xchg
out
sub
xchg
push
jge
dec
js
pop
mov
xlat
gs
xor
stc
add
cmp
icebp
sbb
out
aas
cmp
insb
arpl
loop
clc
or
cmc
inc
das
sbb
jge
fistpll
xchg
pop
test
adc
nop
xchg
test
pushf
jb
imul
xlat
push
mov
and
add
and
inc
clc
mov
mov
mov
shl
mov
inc
inc
shl
xor
daa
gs
xchg
jge
dec
xor
pop
and
push
jbe
xor
pop
jge
mov
add
mov
mov
sbb
stc
or
dec
dec
lods
inc
lock
and
dec
mov
je
data16
mov
or
iret
or
out
cmp
flds
cmc
jmp
or
jb
push
mov
shlb
fs
subw
dec
xchg
xchg
push
inc
xor
scas
jecxz
ss
dec
into
cmpsb
mov
sbb
mov
cmp
fnstenv
test
push
jnp
setge
mov
loop
js
or
push
jbe
pop
mov
jno
push
push
mov
cmpsl
in
fistpll
addr16
mov
negb
arpl
int
or
repz
stos
inc
fildll
sub
cmc
stos
cmp
idivb
xor
paddusb
jo
mov
movsb
adc
out
loopne
pop
outsb
and
pop
ljmp
mov
lods
ficoml
inc
jno
jae
xor
stc
xor
scas
xchg
imul
int
pop
dec
fsubs
shll
mov
xchg
outsl
sub
and
hlt
iret
push
cwtl
xor
push
jbe
jecxz
jne
and
push
mov
sub
out
mov
es
mov
fidivl
es
mov
mov
cmp
ret
cmpsl
mov
sbb
mov
aas
fistpl
in
mov
and
and
xchg
dec
cmp
ret
sahf
adc
mov
dec
pop
or
xor
cmp
push
daa
mov
hlt
jle
mulb
dec
call
cmp
call
insb
xchg
sarb
rol
and
daa
fstpl
xor
cli
dec
mov
jl
mov
int
leave
jmp
push
add
jp
std
push
xchg
cwtl
shlb
fmul
arpl
lcall
or
lds
mov
or
or
push
push
dec
idivb
mov
cmp
ja
sti
pop
je
push
lods
mov
fcompl
pop
xor
inc
rcrl
aas
xchg
scas
pop
xchg
push
cmpsb
and
loope
clc
or
shlb
push
addr16
imul
repz
sbb
sbb
int
jge
jge
rcll
pusha
fs
inc
push
sub
jg
sahf
adc
frstor
decb
xchg
rep
and
inc
mov
pop
inc
xchg
push
fiadds
jbe
das
adc
and
and
cld
inc
inc
je
xorb
or
fwait
loope
xor
lret
aam
cmc
xor
dec
push
hlt
pop
repz
sub
stos
test
cli
or
hlt
pop
push
and
mov
jmp
push
cli
xchg
cmp
lods
sbb
test
mov
insl
jp
jbe
pop
cmp
jnp
daa
cmpsb
inc
aad
out
out
or
add
ret
or
ds
sub
mov
push
add
fnstenv
fdivrs
js
xchg
fnstenv
jne
xchg
mull
scas
int
xor
fisttpl
dec
mov
std
mov
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
aad
cmp
addl
jge
out
aam
pusha
fldenv
insb
xor
cltd
mov
jp
pop
fldcw
inc
arpl
mov
mov
out
push
push
inc
pop
mov
push
jo
mov
push
movsl
add
pop
lret
push
xchg
repnz
mov
push
lea
mov
add
mov
xchg
mov
add
xor
popf
les
push
lods
lret
push
aaa
bound
test
mov
mov
sahf
jge
adc
dec
xchg
imul
sahf
std
lods
inc
sub
push
inc
push
shrl
pop
imul
sbb
clc
xchg
aaa
push
and
sub
push
mov
cmp
adc
mov
mov
test
or
stc
or
cmp
sbb
cmpsl
hlt
mov
bound
adc
pop
cwtl
rcrl
test
pop
and
adc
pop
push
in
imul
mov
mov
test
pop
int3
or
xor
xor
out
leave
test
dec
leave
dec
inc
push
dec
mov
sub
fs
lea
sub
nop
testl
jp
scas
cli
mov
cs
pusha
sbb
lock
add
mov
add
lods
and
cmc
sbb
jmp
fwait
dec
leave
icebp
hlt
adc
or
repz
inc
jge
icebp
jecxz
push
sub
notl
pop
das
cmp
ja
xor
push
cwtl
cmp
push
mov
xlat
out
inc
push
sub
pusha
cmp
movsb
fnstsw
cmp
jb
and
cli
add
cwtl
adc
dec
push
mov
xchg
fisttpl
sub
mov
xchg
rolb
aaa
adc
test
enter
or
out
xchg
jae
out
out
test
mov
lcall
inc
fisttpll
xchg
stc
push
xor
jp
dec
fdivp
rorl
out
or
cld
pop
adc
ljmp
jne
push
loope
pusha
jge
and
or
fisubl
mov
into
mov
or
ret
push
popf
sub
stc
xchg
push
adc
data16
jge
xor
sub
adc
mov
add
mov
ret
pop
adc
jne
outsl
mov
push
decb
faddl
fdivr
push
in
sbb
into
stos
out
stos
data16
lcall
jmp
aas
test
xchg
cmp
and
shlb
add
mov
jae
add
pop
pop
push
sar
xor
mov
xor
lcall
mov
pop
mov
dec
stc
jge
in
lret
popl
or
lds
cwtl
leave
fcmovb
out
jb
jmp
xchg
or
arpl
imul
jl
jecxz
cmp
sbb
cmc
es
xor
adc
imul
out
mov
test
mov
add
mov
stos
ffreep
xchg
dec
mov
sub
sub
xor
jge
mov
mov
xlat
push
dec
pop
es
imul
stos
xchg
inc
cmp
iret
inc
cmp
in
cmp
int3
ds
sti
xchg
jo
xor
sbb
arpl
pop
fstpt
loop
xor
mov
fidivrl
pop
movsb
adc
rcl
addr16
push
add
andl
ljmp
mov
loopne
divl
js
rcr
inc
cmpsb
or
sub
insl
jno
leave
lods
pop
jmp
xorb
dec
dec
push
fwait
sub
or
cmp
popa
cmc
mov
pop
inc
rolb
sub
in
pop
sbb
inc
sahf
test
push
test
or
imul
orl
sub
aaa
arpl
dec
push
jp
popa
push
xchg
mov
jae
dec
jns
inc
shll
xchg
dec
lcall
xchg
sub
jle
mov
popa
fwait
and
push
mov
dec
int
jmp
add
inc
adc
outsb
push
daa
cmc
and
in
fbld
rclb
aas
jno
mov
mov
out
inc
add
aaa
addr16
xor
fldt
in
push
jmp
aas
adc
xor
xor
or
in
jns
aas
pop
sbb
dec
ss
bound
sbb
xor
sti
call
push
xor
pop
popa
sti
xchg
mov
out
test
orb
insl
lahf
adc
push
dec
aad
sub
inc
inc
fistl
loope
mov
pop
add
fs
ss
mov
sbb
imul
popf
xchg
and
mov
xor
mov
xor
enter
fsubrp
dec
sub
mov
stos
popa
hlt
mov
xor
scas
daa
or
mov
or
mov
cmp
lds
cli
adc
mov
les
std
adc
inc
addr16
test
jge
enter
sti
aam
dec
sbb
mov
aaa
arpl
int
stos
push
push
je
sbb
jbe
inc
loop
mov
aam
jle,pn
and
pop
inc
out
rcll
jp
out
inc
or
std
or
push
stos
aam
mov
push
pop
leave
call
es
jmp
and
ss
sbb
cmp
adc
jo
add
pop
pop
ss
push
fiadds
pop
dec
cmp
fwait
sub
jge
fbstp
lock
call
in
nop
leave
push
and
mov
or
addl
cmpsb
jecxz
push
pusha
jae
icebp
push
lods
push
sbb
int3
jp
xor
faddl
outsl
fucom
mov
xchg
test
push
repz
popf
xor
mov
dec
jle
xchg
mov
je
xor
xchg
inc
inc
mov
dec
addr16
movsl
lea
inc
scas
xchg
push
jge
mov
xor
pusha
dec
push
cmc
adc
stos
popa
xchg
add
int3
mov
mov
outsb
mov
sub
loope
jne
cmp
add
sub
aas
lds
pop
mov
push
stos
sbb
out
popf
xor
adc
push
push
das
pop
or
aas
rcrl
mov
call
mov
fwait
stos
shll
push
das
or
pop
sbb
xchg
mov
mov
xor
jns
pop
inc
and
jecxz
push
adcb
in
pop
dec
cmp
lods
xchg
cmp
adc
jnp
inc
cmp
outsb
push
lods
sub
jg
mov
andb
outsl
in
lock
mov
nop
loope
outsl
lds
insl
sbb
mov
mov
loopne
xlat
mov
mov
daa
jo
fs
jg
sbb
dec
jp
cmpsb
jecxz
movl
sub
mov
in
call
push
into
xchg
push
xor
fs
dec
lods
negl
scas
jmp
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
sub
imul
lods
aas
push
retw
subl
sub
add
and
push
mov
push
hlt
sahf
das
pop
pop
daa
out
xor
cwtl
scas
inc
pop
jecxz
mov
dec
pop
xor
aad
outsl
jle
mov
xor
sub
add
mov
popa
cmp
mov
rol
lods
push
shrb
mov
fs
dec
pop
inc
adc
mov
out
xchg
mov
loop
ret
test
mov
mov
mov
pop
test
inc
inc
fidivs
fcomps
and
and
daa
sub
lret
cli
mov
cmp
lcall
lahf
jae
fcomi
ljmp
into
add
mov
pop
cld
cmc
mov
jnp
cmp
or
pop
test
idiv
or
mov
das
inc
out
mov
dec
add
adc
and
les
sti
out
jbe
test
aad
add
int3
pop
push
dec
or
sub
push
cli
bound
xchg
push
mov
ds
jp
jno
or
sbb
jnp
mov
popa
lods
fs
enter
lahf
je
pusha
or
and
and
inc
popa
mov
mov
in
aas
add
fwait
dec
arpl
aam
out
ret
js
jne
icebp
fisubs
jle
fstpt
daa
ss
or
stos
and
push
cltd
sbb
test
jnp
les
in
in
loop
idivb
inc
pop
push
jmp
cmpl
xorl
dec
cmp
add
lret
dec
mov
mov
fcoms
fs
mov
cmp
mov
aaa
sub
mov
mov
sarb
test
add
iret
outsl
in
mov
lods
jae
adc
sub
dec
push
sbb
lds
or
mov
pop
pop
fsubrl
adc
pop
adc
pop
or
clc
inc
lcall
pop
hlt
loop
xchg
test
or
imul
icebp
dec
addr16
daa
scas
pop
test
dec
lret
inc
pop
mov
sbb
vmread
idiv
and
mov
mov
pop
jo
pop
xor
push
jmp
or
sub
divb
cmp
and
sub
cs
addr16
loopne
jo
rorl
stos
xor
psraw
int
ds
shll
pop
sahf
mov
aas
lods
mov
addl
jecxz
pop
ret
out
lods
inc
pop
mov
xchg
push
xchg
dec
repz
xchg
shll
or
mov
pushf
mov
ljmp
dec
xchg
out
xchg
scas
lods
adcl
sbb
adc
push
popa
xchg
mov
inc
shrl
jg
mulb
and
mov
sbb
aas
and
xor
fs
out
enter
mov
mov
sbb
sbb
cwtl
dec
mov
sti
cld
mov
sbb
fcomps
jl
mov
pop
stos
and
xchg
aam
mov
push
adc
mov
mov
dec
add
jo
aad
filds
roll
or
fdivrl
shll
push
push
ret
or
pop
pop
pop
pop
push
dec
jnp
add
cmp
out
hlt
dec
inc
fwait
sti
rorl
sbb
jno
shll
cmp
pop
scas
enter
clc
adc
xor
cmpl
and
shrl
aam
ret
add
pop
or
xor
and
pop
mov
cmp
mov
daa
pop
int3
jno
inc
fisubs
popf
and
pushf
aas
pop
jne
test
and
popf
mov
adc
push
clc
aas
lds
jmp
push
mov
jae
adc
sbb
cmp
lahf
cmp
xlat
xchg
pop
xor
xor
ret
push
movnti
gs
pop
jl
inc
or
data16
sahf
ljmp
xchg
test
sbb
mov
sti
and
loop
orb
jno
xchg
out
mov
xchg
repnz
pop
fisubl
mov
test
jmp
pushf
mov
stos
stos
inc
lcall
cltd
mov
cmp
pop
mov
add
scas
inc
sti
adc
cli
mov
adc
repz
test
mov
pop
jno
les
aad
out
aas
fists
mov
ja
iret
mov
pop
xlat
mov
out
mov
ret
push
sub
inc
sub
cmp
aad
xor
push
xor
aaa
push
pop
sub
cmp
loopne
mov
fmuls
cmp
leave
lods
mov
popa
push
cmpsl
dec
out
in
pop
fstl
loopne
sahf
testb
mov
jecxz
es
push
pop
dec
outsl
dec
scas
iret
or
lods
sbb
subb
inc
cmp
xor
inc
xor
out
xchg
sbb
imul
aam
push
jmp
in
sbb
adcb
in
xchg
pushf
pop
int3
clc
stos
lcall
out
or
xchg
adc
xchg
mov
add
jge
jge
jecxz
add
push
push
pushf
icebp
push
xor
repz
imul
stos
cmp
lea
cwtl
lods
ljmp
xchg
ret
add
iret
sbb
pop
pop
pop
loopne
adc
sub
push
dec
loop
dec
mov
mov
nop
popa
popf
jmp
cmp
or
add
xor
pop
lret
test
adc
or
pop
popf
sbb
push
adc
xor
add
dec
cwtl
sub
add
push
pop
dec
ficoml
movsl
outsb
cmp
push
mov
fdiv
push
ss
mov
sub
pop
decl
jle
movsb
stc
jno
pop
mov
jae
push
and
test
scas
lock
dec
and
repz
dec
mov
icebp
mov
sbbb
jg
xchg
cmp
push
or
mov
mov
js
imul
and
mov
fdiv
aaa
leave
fwait
push
cmp
jecxz
je
hlt
les
xchg
xchg
jmp
sub
cltd
cld
pop
rdpmc
fwait
mov
icebp
push
mov
pop
or
scas
mov
adc
btc
repz
xchg
mov
pop
sbb
push
push
es
xchg
add
dec
and
push
push
daa
push
stos
push
push
inc
add
lods
lds
insl
cld
mov
test
es
int
iret
mov
hlt
mov
cmc
outsl
subl
repnz
inc
iret
dec
sbb
sbb
pop
sub
dec
add
jo
pop
test
mov
pop
adc
pop
sub
fdivrs
inc
outsl
out
and
add
sbb
pop
mov
cwtl
insb
inc
inc
popa
push
xchg
xorb
jmp
xchg
mov
das
mov
cs
stos
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
dec
push
xchg
add
adc
ds
adc
or
and
mov
ljmp
push
xchg
mov
sarb
jle
mov
dec
pop
mov
cmp
xor
sarl
pop
jmp
lahf
inc
hlt
sbb
sbb
mov
cmp
js
scas
add
dec
sahf
dec
rclb
sbb
cmp
pop
lods
add
inc
cmpsl
loop
push
and
loop
xor
mov
decl
loopne
fwait
and
loope
ljmp
inc
fwait
pop
sub
sbb
mov
sbb
test
movsb
and
jmpw
test
dec
ljmp
push
dec
rcrb
dec
ljmp
adc
push
xor
fs
mov
adc
sbb
jmp
in
outsb
test
js
ret
adc
dec
mov
ret
dec
lea
add
mov
dec
leave
pop
mov
repz
adc
jae
mov
mov
push
xchg
jne
pop
jno
ss
push
mov
les
xor
sbb
push
mov
iret
imul
xor
mov
dec
mov
hlt
cmp
iret
fcomps
xlat
add
cmpsb
test
fisttpl
or
sahf
dec
lahf
into
test
adc
pop
xor
lret
xor
dec
insl
xorl
cli
xor
or
aam
subl
jp
shrl
lock
cmp
add
xor
mov
outsl
cwtl
int
or
stos
sub
xor
push
mov
adc
rorb
xchg
mov
mov
lcall
and
inc
in
fiaddl
mov
sbb
add
repnz
pop
or
stos
popl
cmp
cmc
push
cmpsb
jg
jp
inc
into
push
loop
mov
jmp
jbe
mov
ds
cli
xchg
mov
int
int3
and
shll
aas
cs
mov
stc
sti
fistl
add
dec
xorb
mov
mov
int
sub
out
mov
push
nop
jmp
fmull
xor
dec
xor
outsl
adc
sub
shll
es
xlat
xchg
xchg
mov
lea
divb
pop
cld
mov
ja
mov
lods
icebp
cld
insl
std
push
add
aas
scas
inc
dec
sahf
mov
imul
std
pop
es
leave
hlt
cld
push
gs
xlat
jg
addb
stc
sbb
fcomps
xchg
gs
int3
jbe
dec
xchg
scas
push
aam
push
mov
dec
mov
insb
sbb
push
ja
les
or
sub
sbb
movsb
das
inc
daa
ret
cs
xchg
mov
decl
adc
dec
adc
das
popa
in
fs
lods
out
inc
inc
icebp
pop
mov
lods
out
rcrb
enter
push
adc
mov
in
and
and
lods
and
adc
dec
lret
popf
faddp
pop
jp
pop
add
les
sti
fcoms
jbe
jl,pt
addr16
jns
test
fs
dec
push
popf
jge
stos
hlt
loopne
mov
ret
movsl
pop
xchg
rorb
fistps
mov
insb
and
mov
jp
arpl
subl
int
pop
mov
xchg
push
jp
mov
js
je
dec
xor
pop
jae
pop
aam
push
cmpsl
fidivs
inc
ret
les
cs
out
out
xor
cmpsb
sarl
xor
sub
pop
sahf
adc
dec
mov
inc
fistpl
stc
test
sub
xor
ja
mov
popa
les
sub
rclb
cwtl
sub
fcomps
pusha
xchg
push
jmp
popa
rcll
push
retw
and
or
lcall
adc
xchg
sub
xchg
mov
das
mov
pop
imul
pop
data16
and
xchg
pop
out
cmp
std
bound
pop
sub
push
cmp
mov
jmp
cmpsl
fsubrs
xlat
sub
mov
push
xchg
insl
aaa
vsubpd
pushf
ja
or
fistpl
dec
and
jmp
jle
mov
out
push
leave
mov
xchg
dec
pop
int
adc
push
out
int3
add
js
or
inc
pop
dec
dec
inc
jmp
xchg
aad
cwtl
aaa
or
mov
cld
fdivl
dec
imul
orps
out
xor
pushf
jnp
add
add
test
and
mov
xor
xor
jg
test
xor
daa
inc
push
cmp
push
jae
je
pop
adc
inc
sub
stos
xchg
sbb
outsb
jno
imul
adc
sbb
mov
lds
cwtl
mov
ret
cld
mov
fisubrl
jns
mov
roll
popa
mov
and
push
addr16
in
bound
mov
stos
cltd
negb
fildl
rcll
orl
mov
jae
sub
xchg
ret
les
xchg
pop
xor
push
xchg
fimull
mov
inc
cmp
and
nop
popa
test
xchg
lds
mov
int3
fidivl
mov
subl
inc
push
repnz
xchg
mov
popa
or
popl
push
je
and
mov
mov
dec
lods
lret
iret
cmp
jb
call
mov
rcrb
clc
fs
mov
test
sahf
mov
inc
aaa
mov
fdivl
loopne
jle,pt
xchg
dec
pop
sti
leave
jo
rcrb
jg
stos
ficompl
jg
and
mov
ljmp
pop
imul
hlt
push
fisttps
push
js
push
pushf
and
icebp
sbb
push
testb
out
dec
cmp
outsb
push
lds
mov
push
aas
adc
mov
aam
jge
jge
push
push
pushf
out
cld
test
popa
fists
cld
and
testb
adc
test
fucomip
addr16
movsb
inc
movsb
ljmp
loopne
and
cmp
into
adc
ret
aaa
adc
stos
das
sub
popf
roll
std
fsincos
pop
xchg
cld
fwait
jmp
outsb
jge
test
ss
mov
sti
repnz
xchg
imul
fldt
into
es
loop
mov
shrb
lcall
fld
aaa
sbb
adc
mov
inc
jo
das
jl
or
pop
mov
xchg
mov
jecxz
mov
test
lock
mov
jecxz
shrl
and
aam
xorb
mov
cli
out
pop
sub
jbe
cmpsl
sbb
lods
xor
ljmp
fucom
inc
test
faddl
lret
jl
xchg
repz
dec
mov
jmp
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
pop
pushf
jbe
push
adc
seto
cld
or
in
je
aad
into
cmp
sub
outsl
movsb
fnstcw
data16
dec
xchg
pusha
test
mov
shlb
roll
xchg
andb
imulb
jae
test
lcall
cmp
repz
and
scas
push
mov
sarl
in
lahf
int3
add
comiss
imul
mov
cld
test
jae
ret
inc
out
insb
out
mov
sti
cs
and
xchg
and
pop
shl
jle
aas
insl
ret
pop
or
aad
and
xchg
cmp
xchg
les
and
fdivrs
or
leave
mov
cmp
xor
outsl
pop
pop
push
lahf
xor
dec
mov
jp
dec
inc
je
fimuls
dec
sub
xor
iret
fnsave
fwait
and
fistpl
lret
repz
mov
inc
xchg
cld
sti
pop
mov
mov
push
iret
fldt
testl
ret
enter
mov
arpl
add
out
clc
iret
jno
iret
ret
and
cmc
lret
or
jp
test
pop
pusha
loope
mov
xor
push
fwait
sbb
stc
fadd
es
leave
seta
loop
out
mov
cmpb
mov
cmpsl
sbb
fldt
push
stc
add
jae
outsb
xchg
jnp
sbb
std
stos
out
lret
sbb
mov
mov
test
pop
sub
test
sbb
sti
pop
lret
push
pop
in
pop
daa
sbb
mov
hlt
int3
mov
fisttpl
fimull
pop
ss
into
dec
xchg
mov
adc
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
