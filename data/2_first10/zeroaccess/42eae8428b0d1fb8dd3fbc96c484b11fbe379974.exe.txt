push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
subl
jl
adc
and
popa
pusha
add
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
enter
arpl
push
cmp
inc
mov
imul
xor
lcall
add
xchg
sub
xor
cmp
or
inc
adc
into
adc
pop
js
cmp
out
shl
pop
or
jl
cld
int3
xor
cmpsl
xor
xchg
xor
adc
clc
or
rep
push
ret
jbe
sub
addr16
popa
pop
js
lret
sbb
sub
lea
scas
jne
lcall
cs
push
add
xor
call
inc
stos
stos
ljmp
popa
mov
repnz
mov
add
xchg
out
dec
shll
std
ljmp
es
or
mov
das
adc
dec
sub
stos
cmpsb
or
push
adc
ret
fsubp
ljmp
and
sahf
add
jbe
int3
rcll
test
cltd
aad
aaa
xchg
mov
cmp
shrb
inc
es
dec
mov
mov
push
mov
xchg
or
roll
lods
lcall
add
int
push
scas
enter
shl
mov
push
out
xchg
inc
push
cld
push
ja
roll
clc
mov
and
jns
dec
or
daa
sbb
cmp
cmp
adc
je
pop
sbb
outsb
pop
addr16
scas
cmp
fwait
or
mov
ja
movsl
test
fisttpll
and
sbb
inc
fdivl
ret
jecxz
jno
lcall
ss
and
inc
xor
fstl
and
sbb
int
sbb
add
push
out
inc
jae
sarl
cmove
out
or
scas
lret
xor
cmp
mov
xchg
xchg
pop
xorl
nop
leave
inc
mov
mov
dec
mov
shrl
daa
arpl
mov
jo
xchg
mov
push
frstor
mov
and
fwait
mov
sbb
pop
cmp
mov
mov
pop
out
rorl
dec
leave
mov
mov
cmp
movsb
dec
addl
jne
pop
out
xchg
les
jno
push
push
out
or
push
ret
jo
add
push
imul
mov
fsubrp
leave
clc
push
mov
les
out
imul
xor
std
and
cmpsb
fadd
call
adc
mov
add
in
ror
popa
mov
add
pop
jnp
fcomps
mov
mov
xor
push
mov
addr16
into
int
sub
inc
add
rcl
mov
sub
sub
mov
adc
mov
stc
fs
dec
or
xchg
sbb
dec
adc
test
lea
pushf
aad
sti
int3
pop
and
sub
into
mov
loope
adc
adc
adc
mov
or
movsb
icebp
shll
mov
js
and
mov
push
nop
jg
jmp
push
xor
lea
in
out
jmp
mov
lock
inc
adc
jbe
jne
mov
mov
push
sbb
arpl
icebp
or
cmp
inc
xor
out
es
mov
pushf
xor
mov
xor
icebp
adc
jns
mov
mov
imul
lret
xchg
loope
xchg
lcall
adc
push
rclb
cmc
jl
es
stc
lds
add
push
into
add
imul
or
push
int3
mov
and
mov
call
test
xor
je
push
movl
jne
push
int
and
add
cltd
out
sbb
mov
jecxz
cmp
sub
mov
push
aam
scas
bound
mov
cmp
in
push
lea
and
icebp
clc
lods
push
push
pop
add
xor
mov
push
xlat
into
xor
xchg
pop
ljmp
in
jb
decl
cmp
scas
es
inc
loope
mov
pop
cmc
xchg
out
js
repz
mov
test
cli
lds
das
insl
mov
jmp
lods
push
cld
mov
subl
sbb
rolb
xor
pusha
aaa
test
xchg
fs
dec
jno
mov
pop
loopne
jno
cld
mov
sarl
push
push
inc
das
mov
ret
scas
sub
dec
and
and
cmp
mov
pop
inc
outsb
lcall
pop
sbb
jbe
cltd
xchg
mov
clc
mov
repnz
dec
jns
lret
hlt
sub
jns
mov
mov
xchg
testl
frstor
mov
ucomiss
gs
aad
or
push
test
cmc
push
popa
cmp
popf
out
jae
inc
fnsave
dec
ret
inc
mov
inc
jge
xor
insb
jle
mov
pop
sbb
lods
ljmp
xor
idivl
xor
or
fiaddl
shlb
jo
xor
pop
pop
mov
repz
push
mov
bound
mov
or
add
imul
dec
nopl
fs
icebp
or
or
out
and
inc
xchg
sbb
lcall
addr16
mov
icebp
adc
or
test
out
mov
fs
test
pusha
inc
xor
cmc
fidivrl
xchg
jge
inc
pushf
into
mov
out
pop
mov
dec
jb
cltd
out
pop
cmp
adc
ret
pop
mov
stos
cmp
push
addr16
dec
mov
add
in
add
or
sbb
cld
push
lods
addl
sub
add
lods
mov
sub
sar
or
mov
add
adc
cmp
stos
mov
les
inc
jecxz
xor
test
mov
fiadds
movsl
inc
jmp
mov
add
aad
sub
daa
jl
cmp
push
xchg
sbb
pop
loope
cli
iret
mov
stos
paddsw
cwtl
mov
sbb
mov
push
jmp
xchg
and
jle
adc
push
push
into
lret
xchg
mov
fisubs
dec
subl
cld
cmp
push
dec
lods
aad
add
aaa
mov
push
sbb
dec
pop
ficoms
fsts
sbb
xor
fcomip
mov
cs
or
aas
lret
outsl
shrb
enter
out
mov
enter
mov
pop
mov
jp
jne
loopne
push
aas
mov
cmc
dec
cmp
cmpsl
pop
test
push
je
push
out
adc
int
pop
pop
xchg
dec
sbb
bound
mov
push
xchg
xchg
adc
nop
dec
incb
adc
adc
cmpsl
add
or
lea
lds
mov
and
lcall
int
and
inc
and
cmp
stc
push
xchg
enter
and
clc
pop
xor
xchg
cld
adc
push
in
dec
inc
rolb
hlt
and
pop
scas
jbe
jmp
add
popa
add
sub
insl
push
dec
and
mov
test
pop
inc
lock
lret
adc
dec
ljmp
nop
push
dec
jmp
mov
decb
sbb
pop
and
add
and
pop
mov
test
ljmp
dec
dec
dec
aaa
xchg
cmc
pop
ja
or
xchg
fists
mov
movsl
lds
xor
lret
rorl
add
lods
int3
adc
mov
test
mov
dec
add
ficompl
jo
je
push
pop
loop
sbb
sub
pop
pop
pop
push
mov
add
stos
sbb
int3
idiv
mov
pop
sbb
enter
and
sub
mov
mov
sbb
jne
movsl
mov
gs
pusha
bound
loop
jl
insl
and
arpl
nop
xchg
lods
stc
aaa
xchg
xor
lock
inc
add
add
adc
add
xor
aas
rcrb
pop
ds
push
sub
xchg
or
push
aaa
sbb
mov
imul
pop
icebp
sub
jge
outsb
loop
push
adc
pop
les
insl
dec
ja
std
xchg
mov
leave
mov
test
lahf
xor
loope
cmpsb
mov
mov
icebp
sub
enter
data16
push
mov
addl
outsl
int3
out
or
arpl
xchg
lahf
sbb
fsubrl
fst
cwtl
cmpsl
ds
push
cmpsl
je
subl
or
mov
xchg
scas
adc
shll
inc
dec
std
xor
xchg
jo
stc
adc
dec
xchg
rclb
jae
sbb
test
sbb
sub
jns
xor
mov
dec
mov
xor
mov
add
stos
push
dec
mov
lods
shrb
and
addr16
push
and
push
test
fcoml
cwtl
cmp
adc
mov
sbb
inc
sub
mov
and
mov
or
jnp
movsb
cli
sub
inc
xor
or
call
out
inc
fnstsw
mov
mov
outsl
mov
dec
test
inc
sub
adc
lahf
in
mov
mov
es
out
jle
int
idivb
inc
or
gs
push
xor
cmpsl
mov
inc
into
xchg
mov
pop
pop
es
cmpsl
mov
ljmp
or
sbbb
jo
or
sbb
or
and
outsb
add
pop
bound
imul
adc
gs
jb
or
lods
push
inc
in
push
jge
loope
and
sbb
add
int
cs
sbb
mov
xchg
sub
cmp
mov
int3
or
ret
push
pop
dec
xor
ret
shr
ret
mov
dec
jnp
jbe
inc
scas
push
and
cmp
ss
jg
fidivs
push
push
test
mov
loopne
je
fdivs
sahf
ret
sarb
jnp
pop
aam
ret
xor
and
jge
clc
pop
jp
pop
out
adcb
pop
push
sub
and
test
clc
ror
es
pop
push
push
imul
dec
xchg
or
adc
fbstp
ffree
jle
inc
jmp
mov
mov
add
push
pop
push
std
in
cwtl
jg
dec
or
add
xor
xchg
gs
mov
dec
mov
adc
inc
cmp
mov
test
aas
nop
xchg
dec
xor
arpl
mov
sti
adc
cmp
data16
ret
mov
xor
mov
popf
enter
cwtl
mov
mov
fwait
stos
push
popf
js
jecxz
jno
movsb
mov
push
mov
addb
scas
rcll
ja
or
mov
fldl
into
cmc
sti
inc
mov
sbb
hlt
sbb
iret
and
mov
mov
add
mov
add
sub
or
in
call
enter
push
test
repz
repnz
inc
inc
ret
push
je
jl
mov
inc
negb
mov
inc
and
jmp
gs
dec
sbbb
or
neg
scas
lcall
jbe
sbb
test
fsub
adc
mov
push
inc
cltd
aad
js
fdivp
insl
flds
push
test
imul
inc
popf
loop
sbb
in
mov
or
push
mov
mov
jle
jp
cmp
cli
xlat
sub
dec
xorl
sbb
dec
mov
or
leave
xor
mov
loopne
lds
mov
jae
mov
xor
mov
gs
pop
cli
pop
and
movsb
filds
icebp
xchg
push
or
dec
mov
and
sbb
push
mov
xor
lret
or
jmp
mov
mov
repz
inc
xchg
imul
or
xchg
mov
sub
mov
sbb
nop
sti
ja
cmp
push
call
or
adc
dec
inc
ds
jno
pop
and
out
sbb
adc
stos
or
fadds
fsubr
es
mov
xchg
int
lock
pop
int
into
jb
ret
sub
scas
push
xor
lods
adc
or
maxps
fisubrl
mov
push
jo
scas
daa
xor
pop
add
xchg
add
push
test
add
mov
pop
mov
xor
jg
popf
sbb
pop
dec
xchg
cmpsl
mov
popa
add
fnsave
dec
add
and
push
cmc
or
pop
dec
sub
cmpsb
inc
ja
pop
mov
out
addr16
xchg
arpl
add
sbb
mov
lods
dec
rcll
jl
scas
add
mov
fisubs
mov
imull
pop
icebp
jo
cs
aad
pop
cltd
or
leave
rcrb
pop
jmp
aam
xor
fs
or
xor
and
dec
pop
xchg
les
xchg
cmp
loop
push
push
mov
nop
push
push
mov
movsb
in
jo
mov
sub
mov
pusha
negl
movsl
mov
arpl
loope
subl
ljmp
cmp
outsb
outsl
aam
aaa
pop
movb
repnz
xchg
or
hlt
loope
aas
or
ret
cld
inc
insl
mov
adc
imul
push
shrl
push
out
cs
fstpl
mov
fidivrl
mov
test
pushf
sbb
hlt
js
jbe
int
mov
aam
loopne
out
loope
sbb
mov
jg
cmpb
lret
jne
lods
add
int
int
xorb
mov
pop
pop
sub
stos
xor
ret
adc
and
test
fmull
enter
or
call
push
sub
inc
out
iret
rorl
sbb
push
inc
push
aas
lds
mov
mov
sub
loop
pop
and
sbb
jp
fnsave
push
sub
decb
mov
mov
imul
jp
scas
inc
dec
mov
xor
aas
insb
inc
push
xor
dec
xchg
shl
inc
cltd
jnp
mov
and
cs
cmpsl
shrb
call
rclb
sbb
insb
add
sbb
iret
inc
ror
xlat
jmp
std
mov
inc
mov
jbe
inc
out
lods
test
iret
inc
imul
mov
or
mov
mov
js
fimuls
mov
call
out
je
hlt
jo
push
mov
cmp
push
jb
fcmovnu
shlb
sbb
fdivl
stc
xor
pop
inc
dec
mov
pushf
xor
insb
ret
dec
ror
push
fnsave
mov
rorb
add
jae
push
fs
push
je
xor
ret
sub
imul
mov
and
sbb
add
out
sti
adc
loopne
dec
cld
push
push
jne
lock
pushl
loope
cmp
andl
jbe
add
sbb
cwtl
leave
inc
int3
inc
faddp
push
add
jmp
test
in
out
add
jo
aad
mov
int3
or
and
add
mov
ud2
sub
sbb
ret
lret
popf
pop
adc
inc
jl
mov
cld
push
adc
into
rcrl
mov
fsubrl
stc
je
cmpsb
mov
adc
mov
xor
jo
std
sub
daa
mov
jmp
aam
andl
cltd
cmpsb
mov
pusha
jae
push
stos
mov
cli
cmp
jl
stc
mov
ja
and
call
mov
in
dec
add
movsl
mov
inc
aaa
adc
cld
push
dec
mov
xor
icebp
jle
pop
clc
outsl
mov
lret
mov
mov
pop
push
test
xor
jmp
sub
int
shl
hlt
fwait
sahf
lahf
jb
divl
sahf
adc
rcr
adc
mov
inc
push
std
test
ret
xor
push
add
int3
xchg
sub
add
les
out
ret
push
adc
mov
stos
pusha
jae
jno
sbb
or
in
cmp
je
mov
popf
push
je
xor
fists
xor
idivl
cmp
adc
popa
sahf
jbe
fildl
cmp
loopne
imul
sub
fstpt
movb
sub
push
fidivrs
das
sbb
mov
pop
aad
push
sub
clc
clc
xor
push
xchg
mov
lock
sbb
push
testb
lret
ja
pop
fsin
movsb
pop
lds
test
movsl
imul
sub
test
cmpl
adc
push
add
sub
pop
mov
push
xor
lods
dec
outsl
jnp
call
das
push
outsl
inc
pop
and
pop
add
int
dec
jp
out
xchg
push
movsb
fstl
or
sbb
adc
shrb
ss
jne
adc
lods
inc
pop
outsl
jne
xchg
xchg
xchg
maxps
push
das
push
leave
pop
test
mov
popf
enter
jo
sbb
adc
mov
sbb
aaa
mov
fistps
sub
sbb
sbb
stc
fs
mov
and
xor
add
or
mov
fidivrs
adc
imull
mov
add
fcomps
and
js
inc
mov
divl
not
mov
push
fs
movsb
addr16
gs
repz
xor
mov
xchg
lods
push
jnp
popf
lret
rcrl
mov
movsl
jmp
mov
dec
sub
ret
xor
xchg
pop
mov
out
push
imul
leave
adc
scas
fcomps
aas
adc
xchg
bnd
dec
push
dec
and
add
xchg
ret
pop
adc
adc
xchg
mov
arpl
add
in
push
lds
icebp
mov
rcl
cmpsl
in
jl
mov
sbb
out
push
mov
dec
in
xchg
js
push
enter
rolb
mov
gs
push
xlat
out
outsb
push
jecxz
ja
pop
push
pop
lods
add
mov
orb
xor
lahf
ss
insb
xchg
mov
int3
push
push
jb
imull
rclb
inc
adc
sahf
hlt
mov
cmpsl
mov
push
xor
test
in
mov
add
ds
and
repz
jmp
lock
fcmove
or
aaa
cmp
adc
mov
aad
mov
jb
inc
jmp
test
push
adc
add
pop
xchg
imul
mov
pop
insb
lret
roll
in
and
mov
cmp
inc
ret
pop
mov
aaa
repz
adc
ss
sub
jae
xor
daa
js
mov
ss
pushf
dec
lea
outsb
and
or
xor
daa
add
pop
and
movsb
sbb
jns
sbb
dec
pop
in
jecxz
inc
and
fstl
pop
das
inc
inc
lret
cltd
mov
adc
cmpsl
fadds
out
pop
mulb
lods
xor
sub
subb
sarb
or
lock
aas
mov
lods
imul
add
adc
cld
xor
ja
xchg
xchg
rolb
inc
popf
in
mov
pop
mov
adc
popf
mov
mov
or
cmpsb
inc
lds
sahf
movb
popf
dec
call
out
or
inc
cmp
or
push
lds
js
cli
xor
test
call
lcall
or
sub
lcall
push
ds
xor
push
ss
mov
xlat
xor
js
loop
mulb
notl
fs
popa
adc
xchg
dec
push
cmpsl
push
addr16
inc
dec
movsb
shlb
cs
je
sbb
loopne
out
push
xor
pop
pop
jge
mov
xor
xchg
mul
repz
jp
xor
pop
shlb
cmc
mov
push
xor
lahf
jmp
pop
dec
mov
fisubl
outsl
cs
popa
pop
sub
dec
mov
adc
xor
pusha
push
or
xor
fwait
movsb
mull
cmc
cmp
pop
cmpsb
pop
and
mov
inc
fdivrs
and
xchg
or
xchg
aaa
sub
ficomps
and
jmp
fldenv
pop
mov
pop
fdivrs
sub
sbb
push
push
fsts
cwtl
cmp
mov
pusha
mov
mov
mov
pusha
cmc
inc
leave
cmp
cltd
cmp
mov
adc
pop
int3
repz
dec
sbb
mov
aad
mov
out
jle
cli
adcb
outsb
cmpsl
xor
sbb
adc
mov
int
sahf
mov
dec
inc
iret
adc
outsl
pop
or
jge
mov
into
push
sub
je
add
int3
xchg
daa
iret
mov
jp
std
push
dec
add
and
lods
cmc
ss
inc
xor
push
or
dec
jmp
enter
ja
fcomps
imul
sbbl
test
push
dec
sub
add
fmuls
mov
clc
adc
cmc
outsb
pop
pop
or
daa
sub
hlt
sbb
or
lcall
test
arpl
fdivs
push
popa
cltd
add
mov
cmp
popa
dec
insl
dec
ds
jns
sub
mov
and
mov
push
inc
mov
pop
push
shrb
dec
inc
pusha
cltd
jbe
mov
cmc
mov
icebp
push
inc
xlat
bndldx
movsb
or
cmp
popf
arpl
sub
or
fnsave
jp
imul
push
pop
int
ret
sahf
or
mov
movsb
in
sbb
js
pop
ja
dec
in
mov
hlt
fistl
dec
adc
xchg
dec
fs
lret
push
stos
sar
mulb
and
rclb
mov
sub
pusha
add
mov
inc
pop
xchg
mov
jno
pop
cltd
daa
xor
inc
inc
mov
xchg
shlb
xorb
add
cld
dec
cmp
bound
pop
xor
loope
mov
push
or
cmpsl
rorl
cmpsb
cmpb
lods
sbb
pop
xor
jg
sbb
popa
rcrl
fmul
inc
psadbw
ficompl
shrb
loope
imul
cmc
ljmp
adc
push
inc
adc
push
push
dec
jae
stos
in
cli
ror
push
push
sar
leave
mov
add
ds
sbb
push
jg
push
add
mov
fisubl
add
imul
jp
cmp
pop
cs
sub
xlat
fdivr
out
ret
mov
pop
cwtl
into
pop
inc
sbb
push
jmp
sub
mov
sbb
cmp
sub
pop
push
pop
dec
add
push
andl
push
mov
js
mov
mov
loopne
pusha
imul
push
ljmp
rorb
sbbb
arpl
adc
or
mov
add
pop
mov
xchg
fmull
insb
lods
jecxz
imull
test
push
dec
imul
mov
rorl
mov
dec
mov
in
mov
inc
scas
mov
adc
inc
sbb
mov
cmc
pop
cmp
push
int3
dec
insl
and
adc
loope
loope
cs
out
mov
adc
mov
add
inc
xchg
adc
lahf
adcl
shl
or
outsl
mov
push
inc
int
mov
jnp
mov
pop
adc
out
push
ret
or
lcall
int3
cli
jecxz
leave
ret
adc
adcl
fisubs
pop
mov
les
dec
bound
lods
cmpb
sub
or
push
push
stos
sub
int
adc
cli
xchg
sbb
and
jbe
in
or
jmp
sahf
adc
arpl
pop
xlat
jp
fld
lods
rolb
cmpsl
decl
add
dec
push
cmp
inc
push
jmp
lahf
andl
repz
int3
pushf
lock
or
mov
into
jge
aaa
shrl
mov
sub
lea
sub
das
test
outsl
cltd
es
fidivrs
sbb
or
jo
mov
cmpsb
aaa
or
inc
mov
mov
push
fucomip
sahf
jl
inc
hlt
push
adc
dec
es
out
in
cli
out
dec
dec
mov
add
fildll
dec
or
lahf
jae
inc
lea
jnp
divb
dec
sub
inc
andl
xchg
int3
mov
fimull
stc
mov
cmc
je
pop
mov
xchg
push
mov
push
ret
pop
ss
xlat
ds
push
xchg
ljmp
iret
gs
outsl
sub
sub
and
std
xchg
in
in
ss
xchg
pop
scas
push
sahf
shll
jne
stc
sbb
addr16
jbe
inc
sarl
mov
shlb
add
pop
jne
xor
rcrb
jns
insb
cld
mov
xorb
mov
mov
les
and
cmp
dec
and
rcll
repnz
outsb
push
sbb
mov
ret
es
push
and
xor
jg
xchg
int
cmp
das
aas
add
pusha
jp
mov
daa
lcall
dec
cmpsl
dec
cli
popf
push
adc
movsb
cmp
mov
outsl
test
rolb
fisttpl
mov
xor
sbb
insb
out
repz
adc
int3
hlt
pusha
daa
or
push
out
inc
andl
mov
out
push
rorl
sub
pusha
inc
int3
int
lods
xor
push
xchg
xlat
inc
fwait
xchg
pop
xchg
jge
sbb
aam
inc
jge
mov
lret
rolb
jp
add
bound
mov
scas
dec
stos
inc
xchg
jno
out
xchg
mov
or
ret
xor
and
out
fadd
and
cmpsl
sahf
pop
mov
addr16
push
into
ret
adc
jne
sbb
lock
icebp
cwtl
push
fsubrl
enter
mov
call
and
fnstenv
fs
scas
jp
jne
les
aad
inc
jle
and
cs
movsb
cmpb
movsb
ljmp
cmp
mov
pop
rorb
cld
sub
repz
xchg
mov
mov
inc
sbb
loope
icebp
sti
stc
adc
scas
sbbb
shll
lods
cmp
sbb
adc
mov
sbb
push
jb
mov
and
xchg
lcall
jmp
cmpl
in
dec
gs
and
les
mov
movsl
sarl
mov
fistpll
insl
or
iret
mov
xchg
jne
cmpsb
cmpsb
mov
std
push
lea
jb
cmp
dec
cmp
dec
dec
jecxz
mov
jae
inc
fcoms
out
or
aam
insl
cmp
out
lods
cmp
hlt
inc
cvtpi2ps
call
cmpsl
sbb
mov
mov
sbb
or
outsl
mov
into
lret
ret
int3
sbb
pop
ds
adc
out
mov
es
mov
stos
xchg
pop
bound
mov
int3
and
in
mov
scas
xchg
fisubrs
lcall
jno
push
leave
xor
jbe
sbb
push
push
ficoms
and
fiadds
xchg
add
mov
pop
lds
lods
out
pop
push
and
out
add
mov
sbb
jge
sbb
jg
and
roll
push
jo
loopne
mov
xchg
push
fld
cltd
adc
into
cmpxchg
dec
js
cmpb
push
bound
xchg
fs
mov
arpl
inc
pop
cltd
inc
ljmp
push
jp
mov
pop
mul
jmp
ja
lods
mov
pop
mov
sarl
fadds
pop
lods
mov
pop
jo
jo
fisubrl
mov
fidivs
xchg
daa
pop
imul
cltd
rorb
sub
jbe
mov
mov
dec
sbb
cmpsl
cmp
adc
sbb
sub
jg
mov
rcr
gs
loopne
insb
inc
in
pop
icebp
xchg
lret
jp
les
loop
mov
fbld
jae
test
add
lret
adc
in
mov
insl
lods
sub
xchg
lret
in
add
aad
test
out
mov
jmp
xchg
add
jae
iret
arpl
sub
into
ss
mov
aad
mov
pushf
rcrl
mov
leave
and
rorb
popf
mov
js
loope
xor
imul
inc
je
mov
aad
call
iret
xchg
dec
out
pop
in
and
adc
xchg
push
add
cmpsl
add
jmp
jae
cs
push
int3
rorb
test
sahf
fdivrl
movsl
out
loope
push
insb
incl
xchg
mov
xchg
mov
mov
out
lock
insl
in
enter
fsubr
add
out
sbbl
cmp
xor
enter
rclb
fbstp
rcl
lret
inc
cltd
cmp
cs
adc
jbe
adc
mov
mov
cmp
sahf
pop
loopne
and
push
ds
loope
mov
rol
popf
cltd
cmp
cli
mov
xor
xchg
fwait
test
loopne
or
fwait
test
sbb
repz
or
mov
movl
lret
or
push
fcompl
pop
movsb
sti
mov
cmp
add
leave
rcrb
insl
lret
iret
xchg
repnz
and
push
mov
pop
jmp
stos
pop
sbb
dec
mov
inc
cmp
pop
mov
adc
cwtl
ja
out
push
das
dec
mov
mov
cmp
xchg
dec
gs
leave
mov
sbb
cmc
add
movsb
hlt
popf
cmpb
xchg
add
ja
aaa
sub
cmp
rcl
stc
pop
out
or
add
in
xor
xchg
pop
fdivrl
cmpsb
aam
xchg
imulb
jae
insb
pop
pop
sub
sub
push
jae
mov
rcr
lds
mov
arpl
lret
adcl
addr16
adcl
sub
test
idiv
int3
sub
int
sbb
push
mov
roll
add
ja
cmp
xlat
push
aas
ljmp
std
and
ljmp
mov
adc
roll
ror
add
hlt
jge
mov
cmp
repnz
jecxz
push
xor
stos
push
insl
cli
and
mov
xchg
inc
xor
xchg
fs
into
lock
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
rcrl
jl
pop
jl
leave
aad
push
mov
jmp
push
sbb
mov
add
std
jns
pop
lret
popa
mov
mov
and
fdivr
pusha
std
adc
fsubs
mov
lock
dec
cmc
add
push
jl
adc
sub
gs
dec
dec
cld
loope
sbb
test
inc
sti
push
dec
cltd
fs
gs
cld
int3
and
shlb
imul
lret
lcall
stos
push
ret
outsl
cmp
lock
dec
inc
mov
pop
js
mov
imul
fxch
mov
xor
out
shlb
fnstsw
mov
adc
mov
jle
loopne
and
sbb
add
daa
rcll
pop
xchg
xor
cmpsb
jmp
add
cs
ficoml
and
mov
pop
rcll
sub
mov
mov
mov
sbb
mov
pop
jmp
jecxz
cwtl
addr16
jb
aad
jno
dec
in
cmpsb
xchg
mov
je
shr
ret
add
scas
repnz
sbb
mov
sbb
jge
fistpl
mov
push
xchg
lds
popa
jbe
dec
bound
jmp
gs
loope
jl
daa
flds
push
mov
push
push
add
rolb
rol
cwtl
das
arpl
lret
sbb
pusha
mov
jp
out
jbe
repnz
fisubs
add
pop
cltd
cmp
idivl
fs
xchg
mov
push
imul
xchg
inc
test
ror
cmp
jns
mov
aaa
mov
adc
in
cmp
sbb
cmp
cmp
xor
aam
cmpsl
adc
jg
xor
cwtl
dec
mov
xchg
lahf
je
cltd
sbb
dec
pop
xlat
mov
aaa
add
mov
in
sub
mov
pop
or
lahf
in
cmpsl
pushf
loope
outsl
add
add
test
add
movsb
mov
and
ss
inc
addl
or
call
dec
hlt
lds
js
or
mov
dec
test
cs
inc
ret
test
mov
sbb
and
ds
mov
inc
loope
cmp
loope
cmp
jl
pop
stc
fcompl
dec
lcall
pushf
out
cmpl
xchg
cmp
cltd
lahf
push
mov
nop
ljmp
fistpll
xor
scas
pop
out
mov
dec
pop
push
addr16
imul
mov
mov
mov
repnz
lcall
mov
iret
mov
testb
mov
pop
jge
rcrb
xor
mov
dec
mov
movsb
mov
fs
xchg
lret
les
aad
insl
sub
inc
dec
pop
xor
and
or
loope
scas
inc
push
lret
mov
and
push
cmpsl
fstpl
jne
pusha
xor
push
push
test
rorb
cmp
cwtl
shll
test
cltd
and
jg
or
sub
out
imul
cmp
cmp
fcomi
mov
adc
push
mov
xorb
mov
mov
cmp
cmp
cmp
bound
aad
in
ds
add
and
clc
pop
insb
and
in
arpl
call
out
lock
lahf
loop
out
loopne
add
lret
fldt
sbb
mov
out
jle
inc
subb
insl
push
movsb
sahf
stos
add
push
jg
push
and
mull
cs
aam
pop
rcl
loop
cli
loopne
int
xor
adc
movsb
aad
shrb
cmp
xchg
and
fnstsw
xchg
fwait
xor
aam
out
add
dec
repz
inc
mov
loope
idivl
mov
sub
add
mov
xchg
daa
fadds
std
enter
aad
mov
pop
push
imul
es
sub
in
pusha
lds
stc
pop
xlat
jnp
mov
pop
mov
ret
imul
jbe
and
sbbl
out
stos
or
pushf
mov
inc
jle
mov
sbb
mov
orb
add
pop
out
xchg
mov
cltd
or
out
les
lock
mov
pop
xchg
call
jne
test
stos
cmc
pop
or
sub
push
lock
dec
xchg
testb
add
pushf
sbb
fdivp
mov
xorb
fwait
add
adc
es
out
scas
rcrl
push
fs
pop
aam
xchg
mov
fcoms
sbb
pop
stos
sub
inc
imul
aam
or
ljmp
or
and
scas
xchg
int3
jp
test
data16
aam
mov
sbb
mov
dec
xor
xlat
inc
imul
mov
cli
xchg
mov
mov
cmp
mov
rolb
out
cltd
int3
jmp
call
sbb
or
add
repz
sub
test
pusha
pop
emms
mov
bound
sub
adc
icebp
mov
adc
sub
ret
mov
sub
pop
aam
add
popf
fsubrs
xchg
sub
pop
shll
add
push
mov
hlt
cmc
test
xor
sbb
push
adc
jb
stos
out
cld
stc
pop
imul
push
les
es
push
nop
pop
stos
sbb
push
sbb
push
sahf
mov
mov
fs
mov
daa
dec
aaa
lds
cmp
mov
in
cmc
cld
insl
jmp
mov
add
mov
dec
mov
sub
in
nop
push
insb
fsubs
ficompl
sub
jne
pop
out
adc
mov
in
enter
js
lret
ficoml
mov
in
pop
jecxz
mov
push
sahf
in
mov
adc
adc
add
fiaddl
cmp
inc
mov
adc
in
inc
mov
and
pop
xor
out
and
ja
xor
mov
mov
cwtl
mov
add
or
andl
sti
clc
mov
into
lahf
mov
push
jmp
mov
inc
sahf
inc
adc
pop
negl
mull
out
fxch
enter
inc
jecxz,pn
mov
pop
xlat
rcll
fdivrl
arpl
int
enter
mov
sbb
stos
imul
or
fsubrl
push
sti
outsb
adc
bound
push
lods
call
in
jae
cmp
shll
in
leave
fs
push
inc
rcll
insl
andb
std
add
repz
xor
jbe
sahf
xor
sahf
jmp
sti
inc
negb
fs
adc
or
mov
xchg
fwait
mov
scas
gs
jo
inc
aad
sub
jmp
icebp
aaa
mov
pop
inc
mov
dec
jge
ds
sbb
not
push
mov
xor
and
fmull
movsb
les
sbb
outsl
xchg
and
adc
repz
and
inc
fstp
add
in
int3
lret
arpl
push
cs
cli
add
xchg
popa
lods
xchg
xchg
jle
ss
push
fistpl
push
dec
push
mov
pusha
xor
aad
cmp
fnstsw
xchg
in
sub
push
push
push
add
inc
movsl
lock
push
lret
ret
in
fistpl
shrw
xor
bound
or
test
sub
hlt
jmp
adc
aad
iret
mov
mov
mov
sbb
cmp
rorl
jnp
sti
xor
mov
inc
mov
es
sbb
repnz
das
push
loopne
and
shll
bound
cmc
push
ret
add
fnstcw
fcmovb
mov
xchg
ret
push
insb
mov
mov
cmp
ss
test
lods
jbe
or
add
test
mov
cmpsb
shll
mov
mov
neg
ret
push
cmp
mov
sub
push
mov
sbb
cmp
cmc
mov
nop
hlt
jp
daa
test
mov
push
imul
jl
mov
jb
xchg
ljmp
in
fsubs
jecxz
jmp
mov
loope
add
xchg
add
jnp
mov
aas
ds
dec
xor
hlt
jbe
jp
roll
cmc
or
stos
aaa
or
xor
out
cltd
dec
mov
add
inc
shl
mov
les
adc
icebp
pop
sbb
push
in
cmp
fcmovb
aam
stc
and
or
or
iret
scas
inc
ret
cmpsb
arpl
idivl
mov
idivb
mov
punpckhdq
lret
clc
aad
icebp
mov
push
sahf
add
dec
fidivrl
ljmp
stc
sarl
lods
cli
in
mov
stos
jne
lcall
mov
sbb
xor
cmovno
jg
mov
cmp
lods
negl
sub
enter
jno
push
ljmp
adc
movsl
sti
xor
adc
dec
in
xchg
cld
xchg
push
xor
cmp
mov
push
repz
sbb
out
mov
xchg
out
dec
push
push
out
sub
fimull
or
insb
std
push
inc
addl
inc
cld
push
xor
or
dec
jecxz
lods
xchg
mov
mov
cltd
add
fnstcw
jnp
dec
icebp
popl
sbb
mov
mov
xor
sahf
xchg
in
xchg
addr16
pop
ret
jmp
clc
push
inc
loop
and
fprem1
mov
xchg
pop
jle
cmpsl
sbb
mov
adc
jge
xchg
xor
xchg
fimull
repz
setb
frndint
xor
in
les
jbe
inc
mov
clc
and
lret
stos
shll
dec
mov
fstpt
inc
lret
mov
jne
sub
xor
ret
dec
int
hlt
mov
popf
inc
xchg
jnp
into
adc
mov
push
dec
cwtl
imul
stos
push
cmp
jmp
fldl
ja
cmc
cmpsb
pop
adc
inc
mov
jmp
or
loopne
mov
or
pop
pop
sub
in
pop
lea
sub
fucomp
xchg
lahf
jae
dec
mov
out
sub
cmp
sti
jne
enter
push
cmp
add
mov
mov
imull
fildl
andb
jge
out
sbb
fcmovbe
sbb
popf
jp
shll
arpl
or
add
sub
and
mov
adc
or
popa
cmpsl
xchg
rcll
mov
fidivrs
add
sbb
and
shrb
jg
ss
xchg
aas
cmc
jle
mov
jnp
xor
fsubl
add
cmp
mov
inc
add
ret
xlat
out
gs
cmpsl
dec
or
push
xor
invd
cli
pop
pop
ret
int3
add
pop
sbb
pop
adc
inc
mov
dec
movsl
sbb
mov
or
xor
clc
fistl
mov
out
data16
jmp
fidivl
or
dec
jne
loopw
push
inc
jnp
in
andl
daa
xorl
int
or
xor
pop
pushf
sub
rclb
mov
outsl
xor
js
pop
push
scas
lahf
jecxz
test
adc
fldcw
scas
shlb
xchg
pop
adc
push
test
pop
xor
adc
and
sub
test
hlt
cmp
fs
addr16
repz
arpl
adc
sub
mov
cmc
adc
shr
mov
fwait
jp
ret
shll
and
insb
icebp
cltd
aad
adc
xlat
decb
mov
mov
test
addl
arpl
sub
push
mov
mov
inc
lcall
pushf
mov
rcrb
dec
jne
mov
push
insl
and
mov
push
ret
xchg
adc
test
sti
addr16
xchg
inc
test
pop
fnstcw
mov
test
mov
jns
jno
imul
outsl
xor
xchg
cmpb
pushf
mov
push
xorl
mov
ret
scas
cmpsl
je
xlat
loopne
jb
gs
mov
mov
lret
dec
adc
test
cld
in
and
les
clc
pop
aam
sub
ret
dec
mov
fmul
mov
dec
xlat
neg
add
pop
cmp
fdiv
lret
dec
push
stc
xchg
int3
lcall
pusha
out
cltd
das
xor
lock
or
out
das
lcall
clc
lret
flds
imul
xchg
mov
fisubrl
movsl
filds
vcmpsd
stc
subb
and
xlat
ret
add
out
push
jnp
int3
jp
popf
in
enter
push
or
mov
pop
push
scas
push
shr
mov
data16
add
dec
stc
pop
lcall
xchg
insb
ret
in
int3
add
xchg
outsl
lods
in
sub
push
cmp
les
pop
inc
shlb
push
mov
pop
mov
mov
jno
dec
daa
add
icebp
fstl
or
sbb
inc
in
cmc
out
xchg
cmpxchg
push
push
sub
mov
frstor
inc
out
lret
cs
shlb
xlat
nop
add
addr16
bound
jno
lods
inc
lcall
ss
test
das
fstpl
cmp
popf
xor
mov
or
ljmp
mov
int3
movsb
rolb
or
fldcw
push
dec
mov
sub
in
in
add
mov
repz
int3
jecxz
xlat
jb
add
outsl
mov
or
lcall
mov
sbb
sub
aaa
mov
mov
jnp
xchg
lods
in
test
mov
jge
in
xchg
bound
movsb
add
dec
bnd
xor
xlat
sbb
std
outsb
cs
daa
mov
mov
ds
rcrl
sarb
and
daa
out
int
pop
add
cmp
add
xchg
pop
sbb
out
fnstenv
sub
test
push
mov
or
lahf
push
lea
rorb
xchg
ret
int3
pop
mov
int
push
shld
scas
mov
mov
inc
icebp
xchg
loop
pusha
enter
call
fmul
xchg
loop
shll
cmp
in
cs
mov
add
insb
stos
mov
ds
out
int3
jo
hlt
mov
mov
mov
out
add
enter
icebp
pop
popa
or
mov
mov
imul
mov
imul
lods
push
pusha
jno
outsb
adc
add
mov
mov
jecxz
in
std
sarl
inc
clc
push
subb
test
rcl
pop
mov
in
data16
shrb
push
fisubrs
add
mov
inc
pop
stos
sub
fcompl
repnz
or
add
push
cmc
scas
sahf
jg
test
adc
mov
xchg
or
cs
scas
xchg
pop
je
clc
in
stos
cmp
adc
push
mov
imul
jo
arpl
xor
sub
jecxz
and
xor
mov
sbb
jb
int3
int
stc
in
mov
inc
adc
fistps
aad
adc
rcll
mov
add
inc
pop
mov
push
adc
shrl
rcrb
mov
xchg
adc
minps
xchg
repz
clc
pop
sbb
inc
popa
adc
ficompl
mov
out
in
pop
sbb
jge
push
inc
lcall
mov
push
aas
std
insl
rcll
push
stos
xchg
push
pop
push
xor
in
shll
sbb
das
mov
dec
test
mov
push
mov
frstor
lock
mov
pop
fisubl
mov
int3
orb
sbb
adc
mov
divb
mov
jle
xchg
loope
or
aaa
daa
fbstp
clc
lods
cmpsl
push
loope
pop
xor
sbb
adc
sbb
sbb
aad
bound
out
and
dec
dec
and
push
cli
cmpsl
lret
mov
iret
lods
cli
stos
in
ljmp
mov
hlt
push
fsubrs
and
add
jl
xchg
leave
cld
jb
repnz
rolb
stc
sbb
lods
repnz
adc
dec
in
push
and
xor
out
divl
ret
shll
icebp
xchg
jnp
cs
sahf
xor
xor
gs
pop
stc
or
js
in
push
push
xor
cmp
ss
add
mov
loope
push
pop
adc
inc
xor
xchg
lcall
sbb
jae
cmp
mov
mov
jne
int
dec
incb
or
stos
jge
into
jg
cwtl
mov
outsb
out
lret
into
lea
bound
and
push
and
xor
adc
mov
sbb
js
adc
out
push
addr16
dec
and
in
imul
or
adc
mov
cld
ja
pop
xor
mov
pop
ja
dec
in
add
inc
fidivrl
lcall
or
sbb
inc
cmp
iret
push
xchg
mov
sub
push
or
cmp
cmp
pop
lret
gs
icebp
mov
sub
cmc
int
inc
ljmp
js
push
xlat
fisttps
aaa
lcall
sub
pushw
jl
imul
call
lahf
push
mov
adc
fisubrs
mov
in
dec
mov
test
mov
sbb
aad
jae
out
push
dec
sub
add
jae
test
jp
jae
add
cmp
jnp
inc
pop
sbb
fs
test
out
or
xchg
repnz
fimull
xchg
mov
pop
cwtl
add
sbb
cmp
lea
xchg
sbb
movsl
jnp
pushf
or
aad
testb
test
mov
movsb
cmp
xchg
sub
int
stos
sbb
jle
ds
rclb
sub
call
push
jae
add
mov
xchg
and
add
pop
pop
mov
mov
push
jne
push
adc
sub
sub
add
sbb
mov
mov
mov
fs
mov
push
mov
push
int3
mov
rclb
lock
popa
xchg
or
into
fldt
xor
adc
xorl
jae
insl
inc
fdiv
and
in
loopne
cmp
lret
scas
sub
pop
pop
lods
mov
in
dec
push
push
cmp
ret
mov
jo
in
inc
dec
mov
push
jo
xchg
loope
push
cld
pop
cmc
js
xchg
sub
pop
ja
and
add
inc
sti
pop
cld
push
stc
mov
decl
out
fcoms
xchg
sub
fiaddl
mov
jo
sbb
rorb
xchg
inc
and
cmpsb
add
insl
stos
inc
out
sub
jmp
push
nop
cmp
scas
ljmp
cmp
inc
mov
insl
ss
rol
push
push
jae
dec
pop
cmp
jmp
mov
movsb
call
jge
mov
ret
pop
fs
sbb
lock
push
gs
std
aas
les
xchg
sub
sub
popa
out
outsb
aas
mov
lods
ja
inc
test
mov
sbb
and
insb
xor
mov
insb
sahf
mov
pxor
jl
pop
lret
mov
shll
leave
test
jmp
adc
sti
push
lods
push
mov
xchg
mov
gs
and
repz
xlat
mov
mov
adc
fnsave
in
movsl
loop
mov
call
int3
jae
inc
jns
xchg
inc
movsb
jne
rcll
and
cmpsb
cs
lea
jg
and
addr16
pushf
jns
push
fisubl
sbb
sbbl
imull
mov
mov
push
dec
lcall
inc
fildll
mov
orb
pop
and
mov
xor
and
loop
popa
pop
sbb
or
or
sbb
and
xchg
inc
fisubrl
sbb
fistpl
jg
adc
jle
add
out
loop
stos
pop
pop
mov
es
ds
sbb
lcall
sbb
shlb
adc
or
sbb
xchg
insb
ss
mov
ja
xor
jmp
cmpsl
pop
push
mov
dec
insl
add
push
jp
cmpsb
call
test
dec
add
imul
or
andb
mov
sub
and
iret
jecxz
icebp
sub
inc
sbb
mov
push
ret
jnp
mov
or
icebp
sahf
cmp
xchg
inc
xchg
add
shrb
popf
sbb
sbb
pop
add
mov
ds
rorb
fmuls
add
iret
inc
fistpl
xlat
clc
ss
loopne
cmp
jno
stos
xor
pusha
movsl
cmp
inc
jns
xchg
pop
cmpsl
rclb
jle
mov
sbb
sub
or
stos
call
rolb
clc
inc
mov
mov
mov
lret
push
imul
cmpsb
psubw
sti
add
out
int
lahf
shlb
rcl
std
or
loopne
push
adc
jnp
psrlw
bound
stos
adc
mov
mov
divb
out
out
repnz
sub
cmp
push
stc
bound
add
lds
sti
xor
rolb
outsl
pushf
aaa
mov
into
loop
mov
cli
out
shrl
pop
in
sahf
cmp
test
imul
push
int3
push
mov
outsl
push
outsl
dec
push
ret
stc
mov
outsl
jp
pop
add
inc
lcall
test
lods
or
jnp
and
fwait
mov
dec
aaa
test
fsubs
test
test
test
hlt
inc
in
pop
in
pop
sub
lcall
out
mov
test
fwait
mov
in
popl
sbb
xor
pop
test
or
jo
imulb
pop
sarb
out
xchg
loope
popa
sbb
mov
pop
sarl
loopne
mov
pop
ficoml
jg
mov
int3
test
shll
and
pop
add
outsl
xchg
cld
fwait
pop
icebp
sbb
pop
or
push
in
lods
cmp
or
xchg
ljmp
pop
aam
xchg
loop
fwait
pop
mov
and
hlt
dec
imul
imul
pop
or
cmp
xchg
rcl
out
out
pushf
xchg
cmp
mov
in
lods
pop
sbb
xor
or
mov
int3
aam
lods
or
add
lret
mov
daa
fistpll
ss
cwtl
clc
and
fidivs
mov
inc
fisttpll
sbbl
mov
sub
inc
xchg
push
stc
aaa
test
fnstenv
jmp
jle
stc
gs
xor
adcl
and
add
cmpl
sub
sbb
ja
adc
adc
mov
lret
xchg
and
mov
outsl
fsubr
dec
dec
cmp
adc
out
loope
in
inc
xor
xor
dec
adc
arpl
popa
test
mov
jne
and
mov
xlat
push
rol
in
ret
jno
mov
das
stc
jmp
test
sub
push
les
cwtl
xchg
repz
pop
mov
fs
addl
ss
or
stc
ficompl
mov
out
and
insl
es
push
rol
insb
xchg
adc
arpl
pushl
lock
sarb
cs
cmpsl
mov
popa
jl
dec
loope
or
cmp
aas
or
mull
mov
lods
fimull
xor
jno
inc
test
cmp
cmp
and
clc
and
rorl
jmp
inc
push
add
push
out
out
imul
and
adcl
arpl
xor
stos
leave
jle
jecxz
test
jns
arpl
fdivs
daa
push
mov
pop
cmp
pop
std
outsl
ds
cmp
jbe
je
test
outsl
xchg
xor
mov
std
pop
sti
sbb
pop
jo
leave
adc
push
mov
aaa
push
enter
sub
jmp
jns
mov
and
out
sub
test
add
test
mov
lahf
adc
outsl
icebp
jno
aam
stos
int3
push
ja
js
add
xor
iret
stc
shll
je
lret
clc
pop
xor
cli
fstpt
push
ret
leave
pop
test
scas
mov
ds
out
adc
fucom
mov
js
popa
mov
inc
dec
js
outsb
dec
push
out
bound
xor
xchg
push
xchg
xor
lock
xchg
ljmp
xor
dec
adc
mov
or
jmp
dec
into
icebp
mov
push
inc
inc
lret
pop
pop
sub
inc
js
inc
jo
mov
das
dec
cli
sub
in
inc
jb
push
sub
dec
icebp
fs
bound
mov
cld
test
jo
xor
pop
imul
mov
pop
add
lret
dec
mov
inc
mov
clc
imul
lahf
mov
push
pop
jbe
cwtl
push
mov
mov
mov
xor
fdivp
push
lea
leave
call
in
mull
push
ja
inc
sub
sahf
leave
dec
add
aam
rcrb
cs
mov
push
loope
push
mov
stos
pushf
lcall
flds
rorl
inc
mov
xor
clc
movsb
or
push
xchg
ljmp
xor
cmp
mov
inc
fisubrl
mov
stos
or
cmp
int
xor
push
cs
mov
ds
cmp
les
mov
push
fstp
pop
je
fldt
dec
dec
dec
out
fnsave
pop
adc
scas
int
push
shll
jge
push
fldl
bound
imul
jns
loope
push
sub
push
pop
push
adc
rorl
and
dec
in
mov
ficoml
jnp
jp
mov
outsl
lock
imul
ss
inc
fwait
mov
sti
in
lods
ja
adc
aad
or
xor
gs
pop
fildl
sahf
js
pop
shlb
or
xchg
das
cmc
daa
xchg
data16
jbe
sub
scas
xchg
out
push
rorb
and
push
mov
sbb
outsb
dec
mov
rcr
in
je,pn
das
out
xchg
mov
push
cmp
cli
mov
push
mov
scas
mov
aad
insb
add
test
xchg
mov
cltd
repz
pop
cmpsl
or
fcoms
xor
addr16
push
test
cs
lods
or
outsl
sub
mov
cld
jge
add
push
add
and
cmp
mov
push
aam
pop
sbb
aaa
or
jo
and
mov
inc
int3
xor
jecxz
cmpsb
mov
lret
xchg
jle
in
and
insl
cs
push
jae
fdivl
push
jae
cld
mov
out
dec
pusha
fidivs
jle
and
fadds
cmp
and
cwtl
aas
ss
jns
mov
push
jmp
or
mov
jecxz
stc
mov
and
hlt
inc
imul
mov
mov
cmp
mov
iret
js
sub
dec
mulb
sbb
adc
lea
out
inc
add
ss
test
fadds
bnd
roll
mov
fistpll
xchg
push
push
aam
rorb
mov
pop
jg
sbb
fbstp
adc
outsl
popf
adc
inc
pop
lret
pop
mov
push
sub
mov
lock
adc
fld
je
pop
adc
dec
push
cmc
out
insl
push
mov
bound
inc
sub
stc
jcxz
lds
insb
push
lock
or
cmpsl
shlb
dec
pop
adc
dec
jns
mov
repnz
push
inc
lock
add
fisubs
inc
leave
xchg
out
nop
decb
fs
loopne
mov
push
shlb
add
js
mov
jmp
scas
lahf
mov
adc
loop
inc
push
and
jmp
mov
insl
dec
cld
mov
movsl
pushf
fsubrs
lock
js
ficomps
sarb
subl
gs
dec
mov
jb
arpl
and
stos
fucomp
addb
pusha
dec
pop
mov
shrl
js
xchg
aam
test
fcomps
aad
add
dec
rcrl
arpl
in
add
jae
add
cwtl
xor
cld
mov
dec
xchg
lods
ss
inc
mov
mov
sbb
pop
icebp
push
xor
xor
or
ret
out
dec
cmc
insl
lods
mov
pushf
clc
cmp
popf
in
push
adc
fnsave
jg
cli
rclb
les
push
in
cmp
sub
call
adc
andb
into
xchg
push
mov
mov
test
scas
enter
sub
cmp
je
pop
or
mov
xor
mov
fadds
cmp
add
mov
push
jo
mov
mov
sub
dec
mov
or
sub
dec
into
jno
pop
mov
inc
inc
shlb
imul
repz
xchg
pop
jne
mov
insb
push
or
gs
js
out
dec
mov
sbb
xchg
inc
cmpb
push
mov
mov
and
and
push
or
aaa
shlb
inc
into
popa
xchg
out
stos
jmp
imul
or
ja
out
movsl
inc
jns
stc
lea
inc
cmp
sbb
mov
pop
push
clc
mov
pop
icebp
jae
mov
shll
mov
sub
jns
fdivr
movsb
jb
loop
xor
add
out
paddw
insb
ljmp
push
lret
xor
cmpsb
mov
sarb
jg
adc
sbbl
mov
ja
push
sub
sub
mov
sbb
bound
cmp
push
pop
fwait
pop
mov
icebp
int
xchg
push
adc
ds
mov
xchg
xor
add
jbe
sbb
mov
inc
das
cmp
gs
fsub
insb
filds
call
addr16
idivb
and
and
and
pop
loope
fists
adc
adc
loopne
fdivrs
and
xor
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
xchg
aas
xchg
ret
xor
pop
inc
and
jg
pop
mov
shll
dec
or
dec
sbbl
mov
add
and
sub
jg
cli
add
cmp
test
ret
push
lock
test
sbb
sub
mov
adc
mov
daa
into
lahf
add
iret
mov
hlt
jne
insb
rolb
dec
shlb
xchg
imull
xchg
add
or
and
xchg
dec
jmp
ret
call
and
pop
clc
xorb
loope
shrb
add
lret
cmc
cltd
add
stos
sti
dec
sbb
fsub
sbbl
std
jp
sbb
stos
pop
push
pop
mov
pop
pop
or
test
xchg
bound
icebp
jb
iret
subl
fcmovnb
xor
clc
lret
pop
imul
sti
jmp
fistps
inc
bound
xchg
icebp
inc
mov
sbb
std
sti
lods
push
xchg
pop
cmp
mov
fsubrl
dec
les
lods
popf
lods
sbb
mov
dec
or
adc
mov
mov
jp
lds
push
lods
test
mov
mov
lahf
push
gs
popf
inc
in
push
cmpsb
fwait
pop
mov
test
sbb
shlb
sahf
jecxz
popa
rcll
mov
mov
jg
andl
mov
cmpsb
mov
mov
insb
sbb
mov
xor
push
or
stc
jmp
mov
jb
jl
lods
add
icebp
enter
loopne
arpl
jno
pusha
fmull
cmp
mov
pop
fcomps
and
pop
xor
inc
divl
push
loop
std
or
mov
aad
push
push
xchg
sub
push
xor
mov
adc
inc
fsubr
adc
jns
testb
pushf
mov
sub
mov
mov
test
in
in
fidivl
stos
xchg
clc
add
repz
sub
jg
pop
stos
jp
pop
aam
push
movsb
xchg
insl
cmpsl
fcmovnb
mull
xor
lea
sbb
bound
cmp
in
mov
aad
shlb
xor
adc
fldcw
xor
mov
mov
cmp
cli
xchg
sub
mov
stos
mov
xorl
rclb
loop
pop
xor
shlb
outsl
mov
dec
mov
lods
and
inc
sti
or
and
cli
shl
repnz
adc
push
sahf
fiaddl
sbb
aam
mov
daa
adc
dec
dec
cmp
scas
fcoml
enter
scas
jp
roll
push
mov
je
sub
fstpt
int3
outsb
or
testl
sarb
sahf
xor
rorl
sub
lods
add
sbb
in
flds
sbb
or
mov
xor
push
lods
insl
ret
data16
lds
xor
jne
mov
dec
fwait
add
and
mov
sahf
push
push
push
dec
jmp
fisubl
push
inc
ret
repnz
nop
inc
pop
inc
and
push
cli
iret
ret
cmp
xchg
sub
pop
pop
pushf
dec
ret
shlb
cld
jg
sub
mov
stc
xchg
add
pop
xor
ret
or
mov
add
cli
xor
stos
in
or
cmc
test
test
scas
pop
xor
jle
mov
popa
nop
ja
scas
inc
repnz
cmp
jo
cmp
scas
repnz
adc
and
pop
mov
mov
popf
pop
push
push
imul
adc
subb
push
aam
and
adc
adc
shlb
sub
xchg
push
divb
pushf
ds
clc
loopne
or
int3
cmp
repz
jmp
loope
into
cld
mov
xchg
out
push
jne
mov
sub
out
lret
push
mov
xchg
mov
sub
xchg
das
add
xchg
cmp
push
rcrb
xor
bound
pop
and
imul
bnd
add
shrb
add
scas
xchg
cmp
lods
push
mov
adc
dec
push
dec
adc
xor
inc
sub
addr16
movsl
repnz
mov
pop
test
mov
or
test
inc
or
lods
inc
cmp
mov
xchg
adc
pop
inc
jecxz
pop
sub
mov
push
out
loopne
cmp
adc
out
pop
mov
or
push
mov
test
cs
push
stos
lret
xchg
hlt
jp
mov
jge
in
cwtl
test
mov
cmp
adc
rol
cltd
jmp
cmp
and
lods
mov
jmp
inc
imull
xor
dec
mov
daa
xchg
mov
pop
jp
mov
fstl
rep
dec
xor
push
inc
mov
rcll
add
mov
les
sti
mov
pop
xchg
jmp
popa
roll
mov
cmp
int3
jbe
jnp
addb
xchg
nop
andb
divb
mov
ljmp
insl
in
addr16
and
mov
push
daa
or
movsl
xchg
cmpsl
leave
repnz
lret
sub
fucomi
adc
daa
mov
adc
xor
subl
jb
adc
sbb
xchg
xchg
sbb
cld
add
adc
enter
mov
repz
add
jecxz
mov
push
scas
push
xor
mov
jo
iret
mov
mov
clc
pop
mov
loope
mov
imulb
add
add
lret
lods
sub
pop
push
add
nop
adc
pop
mov
xor
arpl
jmp
ljmp
fldl
cmp
xor
imul
cs
fistps
imul
push
adc
mov
clc
enter
and
in
loope
addb
aaa
nop
and
pop
sub
inc
mov
std
sub
aas
scas
cmp
mov
sub
bound
or
ss
push
andb
insl
jne
mov
mov
adc
sub
aas
rcl
es
push
mov
xchg
jno
mov
dec
mov
add
mov
jo
jle
popa
inc
pop
scas
push
and
push
cmpb
jno
jae
push
inc
xor
popa
ss
movsb
sub
leave
out
testb
addr16
push
jg
aad
mov
mov
test
mov
push
int3
inc
shl
xchg
pop
js
add
icebp
xchg
cmp
in
repnz
shrl
sbb
insb
jp
scas
minps
xor
inc
xchg
insl
pop
add
push
fs
push
dec
shr
loop
or
dec
cmp
enter
movsb
mov
cmpsl
imulb
jb
add
pop
xlat
sbb
iret
push
sub
enter
and
fmull
ret
enter
enter
and
cmp
stos
fnstsw
cld
pop
daa
inc
xchg
aaa
iret
inc
ja
dec
sbb
cmpl
pop
sub
andl
cmpsl
sub
das
sub
jmp
push
pop
rcl
cwtl
mov
gs
insb
mov
or
adc
sbb
out
fucomi
out
pop
pop
cmpsl
xchg
inc
add
xchg
xor
pop
lock
push
inc
sub
jae
mov
xor
fdivrs
shlb
dec
jno
js
jmp
imul
fmull
int3
jecxz
dec
outsb
loopne
adc
test
and
loope
xor
jl
xor
ss
aaa
mov
jg
out
or
mov
cmpsb
imul
jno
push
jge
sub
test
daa
lahf
shlb
mov
sbb
jns
outsl
xor
xor
xchg
loopne
adc
aaa
insb
arpl
pop
cmp
mov
mov
sub
call
sub
movsl
sar
pop
aaa
mov
add
sub
push
out
sbb
push
push
sahf
lock
or
mov
pushf
ds
loop
in
sbb
sub
inc
push
not
cld
jne
rorl
mov
push
lods
xchg
mov
inc
outsl
daa
xchg
sub
repnz
repz
push
xchg
fcomp
dec
mov
mov
jl
xor
xor
adc
jecxz
inc
dec
adc
inc
xchg
push
sub
xor
adc
aam
and
jle
mov
push
incb
lret
xor
cmp
push
es
pop
in
mov
lock
and
push
dec
mov
cmp
sbb
xor
jae
lds
xchg
in
inc
gs
push
lret
mov
movswl
sbb
cmp
sbb
sbb
dec
clc
cli
enter
cmp
pusha
dec
lds
xchg
and
pop
in
lods
popf
scas
in
sub
or
mov
jge
pop
popa
mov
repnz
lods
fsubl
fstps
mov
fiadds
lds
pop
cmp
or
xor
icebp
push
mov
inc
loopne
add
sub
dec
push
addr16
ljmpw
add
jb
insb
das
xchg
outsl
or
sysret
add
push
or
idivb
push
add
arpl
popa
into
enter
sub
rorb
xchg
std
insb
repnz
sub
mov
idivl
or
cltd
cmpb
pushf
pusha
xor
inc
ret
push
loopne
lcall
and
ret
sahf
mov
mov
clc
jno
bound
xor
or
aas
out
adcl
cltd
or
sbb
sub
sub
jnp
xchg
mov
mov
shll
inc
leave
repz
sbb
clc
scas
mov
out
sbb
lods
or
sbb
daa
int
cld
in
mov
fildl
imul
pop
insb
mov
jmp
fldt
jmp
xchg
fwait
scas
push
das
adc
dec
xchg
cmp
fidivs
and
add
push
push
pop
dec
or
movsb
ror
loopne
inc
mov
lods
dec
inc
cmp
pop
pop
or
dec
arpl
outsb
cmp
test
popf
xor
sub
adc
jns
dec
rolb
fnstenv
mov
into
xchg
push
sti
jp
and
jmp
sub
test
adc
inc
inc
add
mov
and
sub
pop
popf
push
pop
pushf
cld
out
out
mov
sahf
push
repnz
shl
jo
push
inc
mov
sub
jb
xchg
mov
mov
fistps
ds
sbb
popa
iret
cmpsb
in
add
and
mov
aas
and
loopne
sub
mov
xor
or
mov
icebp
and
xlat
inc
inc
xor
inc
push
jnp
mov
sub
inc
setg
bnd
cmp
inc
xor
add
mov
sub
sbbl
fs
mov
adc
jns
stos
test
sbb
test
sbb
ficompl
adc
cs
fstl
add
mov
das
test
rol
clc
lahf
dec
das
cwtl
adc
mov
dec
insl
sub
int3
popf
rcrb
rorl
daa
and
test
mov
sbb
out
ret
aaa
es
lahf
push
xchg
daa
mov
mov
in
sbbb
and
pop
jo
pop
lret
inc
mov
push
js
mov
push
mov
aad
pop
fcmovne
push
jmp
push
ret
stc
pop
jp
push
lcall
sub
or
dec
aaa
ret
imul
or
jle
xchg
out
shlb
mov
mov
dec
and
out
pop
adc
loope
shl
jae
xorb
cs
mov
add
sbb
stos
or
das
jge
jg
fsubrp
fwait
sbb
jl
mov
or
insl
push
pop
shl
stc
mov
lods
cmp
jmp
subb
xor
inc
inc
dec
ljmp
adc
test
les
dec
aad
ljmp
and
shl
pop
pop
in
pop
push
xor
outsl
out
pop
pop
gs
pop
test
loopne
add
aaa
in
adc
aas
mov
setle
sub
sbb
cltd
sub
scas
push
addl
xor
lds
jge
sbb
mov
push
lock
xor
loopne
and
ss
mov
loop
leave
mov
test
lods
dec
xchg
cmpsl
fidivs
cmp
fwait
add
movl
movsl
daa
aam
jge
mov
mov
push
xor
sub
mov
mov
lea
pop
in
pop
pop
jg
dec
insl
insl
push
push
cmp
xor
fiaddl
dec
cmp
push
pop
push
mov
pop
dec
pop
mov
xchg
add
sbb
popf
sbb
adc
jne
xor
sbb
fsubrl
aam
sbb
push
out
lahf
cltd
icebp
incb
push
cmc
cwtl
xchg
dec
mov
cmp
pop
inc
cmpsb
jnp
fimuls
jmp
mov
push
xchg
mov
jb
adc
rcr
jae
push
daa
add
sub
out
or
inc
xor
cmpsb
movl
rorl
and
or
mov
push
inc
test
addr16
and
cltd
jbe
movsl
ret
mov
bound
lcall
sub
push
pop
fcmovu
jno
js
push
mov
pop
in
mov
das
jns
jg
test
fcoml
dec
mov
in
in
dec
insl
repz
loope
stos
inc
mov
mov
ljmp
or
mov
mov
aaa
jbe
mov
ljmp
outsb
leave
stc
add
mov
loop
out
ret
stos
test
out
xor
push
inc
jbe
xchg
addr16
xor
mov
nop
inc
adc
repnz
jp
pop
daa
shlb
rolb
rcll
jecxz
lock
jl
dec
cmpsl
inc
mov
das
xchg
pop
ret
sub
cmp
fcoms
mov
xchg
out
push
in
add
iret
mov
arpl
fcomp
sub
xor
or
xchg
jo
add
out
xchg
ljmp
mov
xchg
lret
sub
mov
or
jge
mov
lret
push
jle
mov
dec
mov
or
in
mov
adc
and
jge
lahf
add
xchg
xchg
imul
adc
or
sbb
or
sub
jo
lahf
iret
out
js
jbe
cmp
pop
xchg
inc
mov
sarl
dec
ret
dec
cltd
cs
scas
lea
xlat
mov
xchg
pop
mov
enter
xchg
or
nop
xchg
lret
mov
shrl
pop
divl
mov
imul
int3
es
jecxz
xor
movl
xchg
add
xchg
mov
pop
adc
xchg
ret
mov
push
test
push
push
aas
pushf
in
sbb
sbb
push
aad
mul
add
rol
js
xchg
pop
lods
push
ds
or
lds
cwtl
mov
jo
jge
jbe
xor
push
into
fdivrs
xor
cmp
insb
dec
jg
cld
fldz
cmpsb
pop
sub
or
fucomp
mov
stc
dec
xchg
inc
push
mov
aam
lods
cmc
jno
js
imul
cmpb
shl
js
lods
sbb
sub
div
inc
cmpl
mov
rolb
popf
cmp
cmc
inc
push
fiaddl
add
push
or
outsl
push
leave
mov
fstps
xor
mov
xor
call
mov
out
xchg
cld
add
in
sbb
icebp
dec
cmpsl
hlt
fisubrs
xchg
sub
jge
rcl
add
mov
and
pop
out
aam
inc
sub
lea
jnp
popa
insb
xchg
add
dec
adc
je
xor
jae
out
insb
cld
cltd
popa
cmp
sti
jb
cmp
aaa
xchg
sbb
adc
mov
cmp
int3
bound
sbb
inc
imul
or
ja
sti
pop
insl
out
cs
push
jp
xor
scas
incl
pop
push
pop
xchg
je
test
dec
cwtl
xor
int
push
mov
test
cmpsl
pop
movb
push
xchg
sbb
int3
cmpb
lock
cltd
xor
fnstenv
out
lahf
fwait
daa
lock
js
rcrl
fadd
aaa
dec
or
and
push
jmp
cwtl
mov
and
jmp
xchg
lcall
gs
sahf
mov
stc
dec
in
mov
push
jae
aas
int
mov
xchg
decl
pop
sub
or
insb
xchg
scas
cmp
enter
stos
adc
icebp
add
sbb
jns
sbb
mov
sub
and
dec
in
pop
out
and
xchg
mov
mov
push
aaa
xor
pop
inc
cmp
push
into
xchg
push
das
jno
inc
mov
xor
rcl
adc
pop
cmp
and
movsl
cmp
icebp
cld
scas
outsb
int3
pop
lret
inc
inc
pop
mov
and
dec
std
fcomps
mov
add
hlt
or
jecxz
push
inc
addw
in
inc
jle
sub
stos
in
bound
scas
pop
cmp
pop
mov
insb
pop
loopne
or
jge
push
cmp
xchg
mov
pop
ss
movsb
mov
add
add
lcall
inc
push
mov
push
xchg
lcall
rclb
adc
in
dec
std
xor
into
lahf
mov
fsts
andps
roll
cmovno
popa
mov
xchg
or
fistpl
lret
rolb
dec
jns
push
pop
enter
jge
movsl
sbbb
repnz
mov
xor
imul
xchg
cmpsb
outsb
hlt
cmc
call
ljmp
pop
iret
shl
cwtl
push
hlt
scas
leave
xlat
jo
mov
cmp
movsb
fnstsw
sub
loopne
loopne
mov
je
push
mov
jnp
lahf
loope
inc
add
jo
push
mov
adc
fwait
mov
adc
jnp
lret
pop
loope
add
adc
das
fimuls
icebp
out
mov
pop
icebp
test
negb
cmp
and
jae
mov
dec
push
fildl
pop
push
xor
imul
inc
add
mov
stos
mov
inc
sub
shlb
test
pop
sbb
loope
call
dec
lcall
lcall
aam
lods
sbb
push
jmp
mov
fcmovne
fnstcw
add
jg
cmpsb
or
pop
and
pop
cld
or
nop
sub
or
jo
int3
sbb
cmp
stc
pushf
out
push
add
or
movl
test
aad
dec
and
fistl
mov
aaa
repz
cmp
orb
jp
push
lahf
nop
lahf
and
jg
js
test
clc
test
imul
movsb
js
jg
cmc
fildl
out
add
into
add
cmpsl
jb
in
in
jbe
cmpsl
std
mov
out
dec
xor
adcb
xchg
sbb
and
dec
dec
inc
out
fdivl
inc
bound
cmpsl
cmp
gs
or
lret
je
sub
jb
ljmp
cwtl
int
mov
ljmp
lcall
or
das
and
shlb
push
pop
popf
inc
inc
jl
and
dec
pop
rclb
nop
test
cltd
cmp
dec
cli
push
cmp
mov
pop
adc
xacquire
mov
sbb
stos
in
rorb
ret
out
lcall
pop
mov
shll
cli
fs
and
pop
mov
lea
push
or
sub
lods
fsubr
dec
pop
pop
pusha
cli
stos
cmpsl
arpl
movsl
inc
inc
mov
dec
sub
jg
lds
out
pop
out
jg
daa
add
pop
mov
fisttpll
insl
xor
push
jne
and
fnstcw
and
push
cmpsb
sub
xchg
add
cmp
or
ret
dec
inc
inc
jle
mov
sub
nop
pop
scas
ljmp
fiadds
sahf
mov
idiv
sub
xchg
shlb
daa
push
jno
push
enter
xlat
out
inc
hlt
push
mov
stc
adc
push
cmp
ret
aam
and
mov
mov
adc
leave
iret
add
iret
lahf
mov
arpl
incb
popa
mov
fcomi
insl
in
loopne
and
movsl
push
cmp
adc
inc
inc
out
mov
inc
adc
int3
lret
sbb
push
pop
xchg
dec
dec
inc
jns
jo
mov
or
es
js
push
add
sub
adc
int3
test
pop
mov
leave
jecxz
ret
ret
imul
std
fcoms
aas
aam
sbb
std
xlat
outsl
sbb
rorb
sti
roll
inc
int
in
ds
cmp
ficoms
mov
sub
cmc
jecxz
fmuls
stos
pop
repnz
xlat
xor
xchg
cs
and
inc
jge
aad
sbb
rorb
pop
jp
mov
dec
jecxz
push
xchg
pop
push
xchg
outsl
mov
rcll
cwtl
xor
jns
pop
adc
sahf
mov
int
scas
mov
scas
mov
out
mov
cmc
push
bnd
pop
idivb
cmpsl
movsb
cmp
pop
std
aam
cltd
xchg
movl
and
jmp
insb
dec
out
test
dec
pop
mov
jge
cwtl
mov
xchg
adc
movb
clc
jb,pt
mov
adc
mov
sub
or
lret
push
out
xor
stos
test
jns
stc
inc
shl
xor
adc
jg
js
nop
add
test
xchg
in
or
mov
fcomps
mov
clc
mov
insb
sub
sbb
cmp
loop
mov
push
out
stos
lcall
push
fsubrs
loopne
xchg
mov
inc
pop
jnp
fldt
icebp
std
pop
rorl
cmpsl
subl
popa
mov
test
sbb
xchg
sub
adc
mov
outsb
icebp
mov
inc
push
xchg
mov
xchg
dec
sbb
movsb
sarl
xchg
push
cmp
scas
jnp
repnz
dec
jne
add
xchg
jg
cld
test
and
mov
les
out
daa
cmp
mov
push
lea
dec
aad
mov
mov
jb
pop
pop
inc
das
sbb
rcrl
jo
xor
push
mov
fdivp
mov
and
jecxz
adc
faddl
clc
std
test
dec
adc
inc
gs
xchg
fcomip
sbb
or
ds
stos
fildll
sbb
sub
lahf
mov
sbb
add
outsl
ja
sub
mov
push
js
ljmp
stos
mov
mov
sarl
add
push
imul
xchg
shll
push
mov
add
ret
int3
mov
sti
xlat
lods
sbb
xchg
jecxz
pop
test
jmp
mov
rcll
push
push
jmp
mov
int3
sarl
adcb
je
pop
pop
push
imul
rcrb
shl
testl
jno
fnstcw
add
push
mov
test
out
negl
test
sbb
dec
and
mov
sbb
pop
xchg
and
lea
jl
mov
mov
or
fisubl
les
jp
scas
xor
cli
subb
add
lea
cltd
mov
xchg
or
mov
cmp
dec
push
je
jbe
mov
ret
sub
lahf
lods
clc
testl
mov
xchg
adc
mov
repnz
add
adcb
push
into
xor
divl
sbbb
xor
pop
fmuls
adc
sub
adc
ljmp
test
mov
inc
mov
lock
sub
scas
test
and
out
sub
add
cmp
es
loopne
dec
imul
adc
insl
mov
outsb
nop
adc
fmulp
cmp
fdivs
ret
fwait
jns
xchg
test
pop
ljmp
test
jle
add
lcall
lock
lods
mov
mov
insb
ljmp
sarl
ret
movsl
and
imul
out
leave
setnp
or
sub
int
mov
clc
stos
flds
stc
lcall
push
jo
push
inc
in
mov
push
and
popa
mov
jne
insl
shll
cmpb
inc
jb
sbb
fcomps
mov
aaa
and
orb
scas
popa
cmc
mov
out
push
pop
push
addr16
jmp
into
loop
nop
call
mov
pop
rorb
mov
pop
fcoms
cmp
sub
popa
xchg
mov
jmp
cwtl
add
pop
or
dec
jmp
pop
int3
adc
lret
movsl
imul
pop
xor
icebp
mov
test
out
into
fidivs
pop
fcmovu
jo
adc
stos
push
outsb
mov
sub
cwtl
and
and
ds
mov
jbe
jbe
es
int3
test
lods
sti
mov
xchg
popf
xchg
out
jle
out
fs
pop
inc
mov
in
in
clc
incb
loopne
push
jg
outsb
xchg
jg
inc
fistpll
ret
xor
test
out
mov
ffreep
aad
inc
jmp
movl
int3
cmp
arpl
imul
es
andb
xor
push
les
mov
popf
jecxz
subb
sub
adc
or
adc
push
push
pop
xchg
gs
lret
mov
in
lret
dec
popf
lods
je
imul
pop
sub
ss
push
dec
mov
hlt
sub
inc
jl
into
jle
mov
sub
aaa
mov
jp
clc
fucom
inc
test
xchg
cltd
push
fwait
imul
adc
dec
xor
xor
in
jns
or
mov
push
test
mov
sub
loop
aad
test
repz
ds
cld
sbb
lret
adc
push
pushf
int
aam
out
cld
jg
pop
inc
loopne
insl
das
mov
rorl
enter
sarl
inc
inc
es
and
mov
bound
inc
cmpsl
or
dec
lds
cmc
syscall
ss
push
scas
adc
or
jns
lea
divb
jmp
or
mov
fcompl
shl
sbb
mov
scas
mov
adc
sub
fs
leave
or
shl
int
lock
clc
adcb
out
into
jmp
jo
and
push
xor
cltd
int3
icebp
xor
ret
or
movsb
push
movsb
addr16
nop
mov
fldl
inc
mov
mov
shrb
pop
fsubr
mov
mov
inc
dec
in
push
aad
or
mov
cmp
cmp
ja
imul
sub
sbbb
xor
sub
push
xchg
xchg
or
mov
sti
xchg
dec
rcrb
and
shlb
add
sti
jp
inc
lock
mov
cli
call
ror
xchg
loop
fwait
les
cmp
or
adcb
ss
mov
and
jnp
jp
cmpb
jae
sub
imul
test
nop
cmp
and
lea
movsb
push
push
add
pop
das
mov
mov
dec
iret
or
addr16
push
jae
mov
ds
xchg
xchg
sub
sti
add
jle
cltd
pushf
and
rclb
fs
pop
jae
movb
cs
and
jg
inc
orb
xchg
adc
out
mov
push
andb
das
sub
xchg
inc
std
lods
lods
push
jno
sub
dec
pop
jle
and
movsb
pop
gs
sub
lods
xlat
inc
insb
sub
and
inc
sbb
push
or
lahf
ljmp
and
or
cmpsb
mov
dec
push
rcrl
fmuls
mov
sti
jge
sub
dec
divb
repz
scas
or
arpl
mov
inc
sub
dec
adc
ret
jns
lret
mov
mov
addr16
test
push
add
cmp
or
cwtl
xchg
xor
cltd
cmp
cmp
add
mov
jnp
enter
cld
es
push
mov
hlt
js
test
xchg
out
out
popf
adc
xor
push
pop
data16
out
or
push
mov
inc
bound
xchg
xorb
dec
push
add
int3
stos
push
mov
repnz
pop
inc
pop
mov
ds
je
mov
push
add
ss
sbb
pop
jb
or
and
mov
sbb
pop
inc
pop
repnz
xor
dec
je
std
in
jbe
loop
clc
sbb
and
pushf
rorb
ja
xchg
add
ljmp
dec
hlt
sbb
or
cmc
and
xorb
sets
mov
sarl
pop
or
dec
sbbl
outsl
cmp
imul
repz
dec
lcall
fdivrl
inc
cli
enter
sub
adc
ret
adc
out
pop
and
cmp
adc
rcrl
nop
into
xor
xchg
inc
or
fadds
das
insl
out
iret
nop
sbb
mov
push
mov
or
adc
xor
cmpl
loope
jge
or
xchg
repz
aas
adc
hlt
push
les
loope
addb
jo
in
fisubl
es
ret
fmul
shl
sub
or
addr16
aam
inc
loop
mov
inc
mov
xchg
je
sub
mov
incb
or
dec
dec
hlt
mov
mov
lods
lret
jl
imul
or
and
pop
icebp
mov
int3
pop
cmpsb
movsl
inc
shl
cmpsb
ljmp
xor
or
mov
jbe
push
out
loop
mov
or
jo
sub
inc
jge
xchg
xchg
sub
shlb
xchg
test
xchg
imul
pop
sbb
sub
test
jp
sbbl
icebp
xchg
je,pt
addr16
sbb
cli
xor
xchg
scas
sti
mov
jmp
aas
dec
lds
int
in
testl
or
stc
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
mov
push
jl
jmp
jl
mov
and
popa
mov
in
mov
inc
adcb
push
xor
inc
push
cmp
repnz
outsb
notl
cmp
pop
dec
or
mov
jle
dec
or
jae
sbb
dec
mov
addr16
and
push
fcmovnu
imulb
test
addr16
aas
sar
pushf
fidivl
mov
sbb
stos
dec
push
fmuls
xor
and
mov
roll
sbb
adc
out
jae
fs
addr16
jle
out
adc
stos
sbb
movsb
or
xchg
leave
roll
test
mov
loopne
mov
xor
mov
xor
lds
repnz
pop
out
rcrb
fs
add
sbb
push
sub
mov
mov
or
mov
dec
mov
inc
mov
and
jmp
add
cmc
ret
loopne
push
fs
mov
or
ss
push
add
cltd
invd
outsl
test
inc
sub
out
jnp
and
out
mov
xchg
mov
sub
les
lock
pop
push
jecxz
fsubr
bound
sahf
or
or
out
lret
push
xor
mov
movsl
fwait
cmc
xchg
push
ja
clc
pushf
xchg
std
jbe
mov
aaa
je
jbe
sub
call
xchg
and
adc
lcall
xor
inc
bnd
push
test
loop
leave
loop
mov
mov
js
shll
dec
shrb
mov
inc
cmpsl
inc
cmp
fistpl
lcall
pop
or
out
jle
cld
xor
mov
xchg
dec
les
pop
cmpsb
xchg
mov
and
mov
dec
outsl
cld
mov
insb
sbb
push
push
cmpsb
stos
stos
fldl
pop
popf
jle
inc
movsb
sub
hlt
cltd
adc
xchg
sahf
mov
adc
and
dec
and
mov
pop
daa
in
repz
jns
cli
je
xor
enter
fdivp
dec
mov
jne
or
aam
add
mov
enter
push
sbb
rcrl
push
clc
data16
cmp
mov
sub
pop
sbb
enter
jle
mov
in
inc
xchg
pop
push
das
dec
js
adc
in
mov
roll
push
lahf
cld
icebp
pop
test
sub
xor
adc
sahf
negl
adc
lcall
pop
jo
adc
adc
cmp
aaa
scas
and
jecxz
mov
and
cwtl
and
daa
add
lret
ja
jns
inc
testb
pop
outsb
mov
add
cmp
dec
adc
popf
dec
mov
ja
inc
test
popa
sbb
push
dec
mov
fcmovu
out
ljmp
mov
and
xchg
push
add
push
aam
je
pop
sub
fldt
stos
xchg
mov
lea
mov
mov
call
adc
fidivl
pop
pop
lret
cltd
cmp
mulb
jbe
das
xor
pop
xchg
inc
xchg
es
inc
lods
pop
pop
testb
scas
and
scas
fwait
cltd
sahf
loopne
adc
add
xlat
fistl
mov
fs
cwtl
shll
fisubl
push
xchg
sbb
cmpsl
pop
inc
dec
jp
jge
pop
xchg
ret
mov
cld
xor
jne
adc
pop
mov
loopne
push
stc
push
cwtl
dec
js
fcmovu
mov
mov
add
ljmp
mov
ficompl
push
rcr
roll
lcall
test
mov
jp
ds
push
sbb
push
loop
inc
ljmp
jo
cmp
int
aam
out
in
xchg
sbb
sbb
adc
lret
iret
and
scas
mov
or
push
push
jl
mov
test
sahf
sub
or
mov
jnp
sarl
loope
add
pop
xor
pop
lea
pop
mov
adc
arpl
inc
sbb
inc
push
cmp
mov
jb
xchg
push
test
movsl
or
cli
out
lahf
jge
or
xor
sub
sub
jae
sahf
pop
or
pop
test
cli
lea
cmpsl
lcall
xlat
mov
pop
push
lcall
mov
jmp
push
mov
dec
filds
xchg
outsl
mov
add
fcmovne
ja
push
out
daa
cmp
mov
sbb
sbb
xchg
mulb
adc
inc
pop
mov
out
mov
sbb
cmp
pop
testl
add
xor
jl
loope
popa
js
test
leave
lods
into
push
mov
jp
movsl
movsl
jb
lret
jns
test
mov
cmp
dec
fdivrs
aad
push
out
xchg
sub
ja
mov
dec
stc
inc
push
lods
sub
fildl
cmp
mov
jno
rcr
dec
cmc
stos
xor
aam
cmpsl
mov
adc
ss
adc
jno
adc
pop
jo
add
in
push
pop
add
pop
mov
xor
out
jo
sarl
outsb
nop
ficomps
push
cli
mov
push
xchg
or
mov
sub
sbb
sub
in
fsubs
xor
push
sub
cmp
lock
dec
mov
lods
out
aaa
cmc
push
or
dec
pop
mov
seto
inc
sub
dec
sub
fsubrp
lea
test
pop
sbb
sbb
or
and
call
ja
rol
jne
icebp
int3
in
out
imul
cmp
rcll
rol
xor
clc
ror
adc
adc
cmp
ret
inc
xlat
es
fs
xchg
and
cmc
popa
into
out
adc
fcom
xor
pop
pop
cmp
mov
and
rclb
not
and
cmp
pushf
xchg
decl
jns
dec
xchg
in
arpl
sub
bound
popf
scas
addr16
lods
popf
sub
inc
out
fs
adc
pop
lods
clc
sub
jle
dec
pop
push
add
pop
xchg
outsl
movsl
sbb
fistpl
inc
push
push
repz
and
nop
std
mov
xchg
jge
pop
iret
add
insb
adc
jae
pushf
push
push
fdivrl
pop
lea
adc
fwait
push
lea
mov
xor
test
es
roll
hlt
push
cli
lds
shll
cmp
jecxz
or
mov
es
mov
cmp
push
cmc
ss
lods
and
adc
or
int3
sub
pop
pusha
lcall
pop
mov
sbb
xor
dec
mov
or
and
movb
int
stc
inc
adc
xchg
add
shll
mov
fs
hlt
add
pop
mov
call
cmpsb
pop
sbb
sbb
mov
dec
ss
movnti
sbbl
cmp
jb
stos
mov
or
and
mov
nop
jp
or
xchg
mov
mov
or
repnz
dec
inc
aam
pop
daa
jns
pop
lods
dec
or
pushf
push
or
mov
and
inc
je
inc
mov
cmp
mov
imul
ret
cmp
mov
loope
icebp
movsl
mov
call
jne
and
in
sahf
lret
sbb
mov
mov
dec
hlt
call
shl
inc
xchg
xor
lock
add
adc
bound
int
dec
xchg
leave
loopne
scas
dec
bound
lods
lods
lock
inc
incl
mov
mov
dec
aas
lods
mov
outsb
rcr
pop
into
psubd
push
pop
jns
inc
pop
lahf
test
frstor
mov
pop
cmpsb
inc
jae
mov
xchg
sub
jecxz
movb
fcompl
sub
pop
das
ret
bound
mov
les
cmpsb
pop
push
cltd
add
jmp
sahf
xor
stos
add
mov
pop
sub
jnp
add
sub
push
fadds
ds
xchg
cmp
inc
aaa
into
insb
pop
sbb
cs
pusha
insb
cmp
test
rcrb
push
imul
lods
sbb
or
and
jns
leave
loope
mov
ja
pop
jecxz
and
xchg
mov
or
mov
push
xchg
sub
shlb
mov
pop
push
lods
mov
and
adc
imul
sbb
rorb
rcrl
mov
jo
xrstor
push
xchg
outsl
enter
pop
push
es
sbb
mov
cmp
xor
jle
sub
mov
push
aad
adc
xor
fldt
shl
mov
adc
call
test
cmc
xchg
cwtl
out
jg
push
mov
mov
pop
or
mov
xor
sbb
daa
mov
push
outsb
loope
mov
push
cmc
scas
add
lcall
dec
cmc
insl
add
pop
out
stos
mov
inc
xor
mov
roll
je
das
pop
jp
lret
roll
psubusb
and
in
inc
push
mov
fdiv
xor
in
filds
add
ja
mov
js
shrl
fwait
sbb
mov
adc
test
shr
xor
stos
mov
xchg
mov
hlt
sub
cltd
in
insb
lret
aam
dec
pop
scas
inc
test
cld
lahf
adc
push
aas
out
pop
push
pop
jne
jl
mov
test
hlt
pop
pop
adc
popa
shlb
add
pop
mov
outsl
lahf
adc
xchg
add
aaa
sbb
and
test
cmpsl
sti
das
xchg
js
jae
jge
sbb
ds
repnz
push
mov
inc
lret
sarl
jp
xchg
std
ja
adc
xchg
cmp
imul
fildl
adc
inc
xor
pop
rol
mov
mov
lods
cmp
xchg
std
loopne
div
mov
aam
jae
ret
or
pop
push
or
loopne
inc
clc
sbb
pop
mov
cli
pop
fsubrl
pop
ss
xchg
negl
xchg
test
or
es
jo
pop
in
cmp
pop
jg
fsubrl
sbb
push
scas
mov
outsl
lret
adcb
xchg
inc
pop
jno
xchg
jo
xrelease
cmpsl
push
dec
idivl
pop
movl
add
xor
xor
movsl
mov
mov
test
shrl
clc
and
arpl
and
nop
lcall
fisubrs
cld
pop
push
iret
outsb
or
xor
cmp
ljmp
pop
pop
xchg
popf
std
xchg
mov
and
mov
push
movsb
not
out
and
pop
nop
inc
jnp
lret
and
scas
outsl
sbb
ror
lcall
and
inc
xchg
popa
dec
inc
test
icebp
pop
cltd
dec
jnp
inc
pop
lods
push
inc
movsb
repnz
or
xor
fidivrl
adcb
aam
out
out
and
inc
popf
dec
icebp
xlat
xchg
push
pop
xlat
repz
lock
lock
push
je
test
add
xchg
loop
adc
push
add
sti
add
mov
je
mov
push
pop
outsb
scas
and
in
pushf
xchg
dec
cmp
jne
jns
sti
dec
jge
popa
std
push
lock
cld
sbb
ds
xchg
jb
fidivl
cmp
mov
js
bound
adcb
xor
add
testl
rolb
mov
sub
dec
xchg
fsts
adcl
addr16
mov
out
push
cltd
adc
ljmp
call
mov
cld
je
dec
push
sbb
mov
addb
push
xchg
negl
enter
cltd
mov
arpl
sbb
xchg
pop
orl
repnz
jp
mov
std
dec
arpl
rcr
mov
shll
les
jge
xor
loopne
aaa
mov
fstpl
repnz
sahf
mov
cmp
das
bound
cmp
push
pushl
or
xchg
cwtl
mov
jne
lret
sbb
mov
pop
inc
mov
mov
xchg
dec
stos
or
outsb
scas
mov
sub
out
je
add
dec
inc
pop
add
dec
lods
sub
and
das
shlb
data16
adc
sbb
add
ljmp
lret
adc
aam
imul
aas
popf
mov
iret
mov
cmpsl
aaa
into
sbb
jp
dec
cmp
or
shlb
fmull
stos
popf
fcompl
or
das
mov
test
jb
pop
sbb
xorl
add
adc
inc
xor
in
sub
jno
jo
ret
sub
into
and
gs
insl
outsl
inc
aam
inc
fldl
loopne
not
or
xlat
dec
cmp
xchg
push
dec
dec
xchg
in
outsl
mov
mov
stc
mov
imul
cmpsl
pop
jp
fiadds
cld
add
test
push
inc
adcl
mov
sub
cmp
ja
clc
xor
in
int
pop
cmp
cmpl
mov
and
movsl
sub
dec
cmp
lahf
in
jns
cmp
sub
into
imul
adc
popf
jmp
push
pop
mov
push
icebp
lods
insl
and
xchg
pop
test
call
dec
insb
push
imul
inc
test
push
push
aaa
jmp
adc
cmc
cmpsl
lds
nop
loopne
mov
stc
mov
and
mov
cmp
and
jl
cmp
addb
sub
add
mov
sub
xor
push
shr
mov
mov
fdivs
adc
icebp
adc
dec
sbb
jno
mov
cs
push
aam
lock
add
bound
cmp
mov
call
dec
dec
std
adc
subl
jmp
inc
lds
sub
pop
movsl
cmpsb
jmp
jb
aam
shrl
jmp
mov
inc
jbe
mov
xorl
sti
xchg
nop
inc
lods
cmp
imul
adc
mov
outsb
lar
and
inc
repz
add
lods
and
aas
xchg
lea
mov
mov
adc
push
divl
aad
push
xchg
in
test
add
push
cmp
jmp
adc
aas
jmp
or
push
gs
xchg
adc
inc
xor
sub
xor
psraw
xchg
sub
mov
cmpl
nop
push
xor
xchg
xchg
leave
stos
xchg
cmpsl
arpl
or
mov
out
push
mov
loope
push
dec
push
xorb
stc
insb
xchg
pop
lea
aas
in
pop
outsl
ss
das
imul
or
out
adc
leave
in
call
aad
sbb
mov
cmpl
sbb
cltd
test
jb
jae
jg
jg
adc
popf
iret
dec
xor
mov
lea
xchg
dec
or
push
sub
fbld
pop
insb
adc
movsl
cmp
sub
lock
push
icebp
jecxz
lcall
aad
test
push
sub
mov
jo
inc
pop
loop
mov
dec
testb
xchg
ficompl
dec
ds
xchg
repnz
pop
in
scas
adc
filds
lret
jge
mulb
sub
clc
subb
mov
es
mull
and
adc
pushl
mov
ret
push
loope
xchg
and
test
test
xchg
xlat
cltd
xor
ficomps
repnz
mov
xchg
cmp
xor
frstor
outsl
and
gs
dec
adc
pop
cmp
jl
in
mov
movsl
or
push
cmp
jnp
pop
in
mov
pop
xor
ret
outsl
aaa
add
adc
mov
int3
dec
fidivs
pop
enter
lret
lock
movsl
xchg
adc
sub
adc
mov
cmp
lods
std
lods
mov
jmp
push
sbb
popl
sub
fnstcw
and
sbb
push
xchg
outsb
fcmovnb
cmp
gs
jns
out
push
scas
roll
out
imull
pusha
inc
sub
je
mov
lock
gs
lea
sbb
dec
out
scas
lods
gs
aad
imul
bound
rolb
arpl
out
mov
jmp
sti
lock
jmp
sbb
jno
pop
cmp
in
mov
pop
jnp
mov
jecxz
sbb
roll
flds
roll
cwtl
idivb
fiaddl
and
jo
ret
ljmp
lcall
dec
or
loope
in
inc
andl
mov
test
and
lcall
lret
insb
dec
mov
lahf
push
inc
sub
mov
addr16
sbbb
push
fwait
cwtl
sbb
cmp
and
cmp
iret
mov
xchg
cmp
int
cltd
dec
jmp
and
scas
movsl
pop
push
in
push
cmp
inc
pop
cld
imul
push
popf
xor
aas
or
xor
jmp
cmp
sbb
adc
add
fnstcw
jbe
daa
pushf
xchg
ja
out
cmpsl
ret
lea
jecxz
dec
scas
test
out
daa
aam
sbb
xchg
push
sarl
xlat
lret
add
push
xchg
jp
gs
mov
xor
xchg
popf
fsubrs
and
jl
pop
shrb
jg
shlb
int
jp
enter
aaa
dec
mov
cmp
push
sbb
xlat
ja
sbbl
adc
imul
or
xchg
mov
jl
ljmp
repz
jo
dec
pop
add
adc
sub
and
pop
mov
add
push
jo
cmp
aas
xor
lods
out
das
faddl
lret
mov
mov
adc
stos
add
bound
orb
lcall
push
xchg
xor
aad
out
pushf
xchg
add
into
insb
imul
adcl
scas
mov
stos
out
notl
adc
xchg
rorb
pop
ret
aaa
jnp
sbbl
dec
stos
movswl
int
mov
int3
push
fbld
cld
sub
pop
fwait
ret
mov
jae
xor
lcall
cmp
addr16
mov
mov
cmp
sbb
in
mov
and
mov
cmp
pop
addl
repnz
scas
hlt
je
sbb
lods
pop
inc
orb
cmc
les
sti
imul
mov
insb
jmp
and
xlat
sub
lds
std
movlps
int3
repz
inc
jmp
mov
int3
mov
jle
adc
iret
mov
and
dec
das
mov
hlt
jb
add
push
adc
test
inc
add
fsubl
mov
lret
add
add
shr
jmp
lret
mov
xchg
popa
or
xlat
dec
test
push
pop
sbb
cmpsb
dec
dec
shl
sub
xchg
adc
cmc
pop
cmp
in
dec
xchg
mov
push
sub
xor
jle
sbb
xabort
leave
push
mov
xor
adc
mov
mov
lahf
and
mov
out
push
xchg
cmp
das
jne
lods
push
cmp
inc
fstps
daa
movsl
lret
daa
int
shlb
mov
mov
enter
adc
or
lock
fdivp
dec
clc
and
jl
test
xchg
push
or
gs
dec
pop
cmpsl
or
pop
push
mov
into
mov
leave
gs
je
or
repz
mov
bound
int3
mov
jecxz
mulb
and
imul
cmc
scas
mov
or
mov
inc
cs
adc
cli
sub
out
jne
pop
insl
xchg
inc
pop
push
dec
jmp
sar
cmp
test
sbb
add
mov
outsb
jae
movsl
xchg
sub
add
xor
ret
push
mov
aam
add
enter
mov
pop
inc
test
scas
lods
pop
inc
jmp
push
xchg
pop
jl
mov
fdivrs
cmp
cli
xor
xchg
cmc
mov
leave
mov
push
insb
xor
xor
pop
dec
sub
insl
xor
add
mov
adc
cmp
jns
enter
cmp
mov
stos
add
in
stos
out
xor
sub
dec
jne
lret
push
clc
adcl
mov
xchg
and
inc
addr16
sbb
xor
outsb
sub
xchg
add
push
pop
sti
cs
mov
fcomps
xchg
cmp
push
lds
popf
fidivrl
inc
dec
mov
sbb
mov
pushf
mov
cld
mov
mov
ss
repz
xor
leave
fldl
push
jno
and
pop
sahf
mov
pop
adc
mov
push
mov
push
mov
and
int
inc
mov
test
cmp
and
ret
jecxz
jge
hlt
inc
aaa
mov
pop
mov
lret
iret
ss
aas
and
xchg
outsl
in
jnp
lock
xor
sbb
cmpsb
and
cmc
jbe
mov
fs
dec
sbb
mov
lret
in
sub
xchg
orl
xlat
insl
and
fisttpll
cmpsb
pop
inc
sub
filds
jnp
and
pop
inc
xor
jae
lock
lea
imull
inc
stos
sub
into
and
test
stos
mov
sti
jecxz
mov
test
and
xor
adc
add
aad
pop
test
lock
xchg
and
xchg
cs
xchg
mov
xchg
pop
inc
hlt
fdivrl
pop
pop
ljmp
cmp
mov
push
gs
and
sahf
jne
pop
mov
rclb
rcrl
ret
mov
xchg
and
fcompl
hlt
stos
xlat
ret
sahf
lret
xchg
ljmp
js
and
sbb
and
cmp
adc
dec
sub
mov
cmp
popf
mov
cs
mov
loop
xchg
mov
cmpsl
pop
pop
ja
xchg
mov
and
mov
cld
rcl
nop
repnz
leave
jne
mov
mov
inc
icebp
jne
bound
push
pop
fmull
lahf
xchg
inc
inc
lahf
pop
jno
lea
sbb
lods
push
daa
popf
in
mov
push
mov
inc
imul
push
in
cltd
loope
cmc
xchg
sbb
shl
rorb
flds
xor
cmp
mov
dec
ret
fiadds
and
cwtl
dec
aad
hlt
sub
lods
adcb
fistpll
pop
lds
and
cli
mov
and
and
call
ljmp
or
add
lods
mov
push
jo
lahf
jb
cmp
mov
mov
mov
and
aaa
xchg
dec
out
negb
dec
mov
sahf
bound
stos
sub
inc
lret
test
fwait
repnz
lret
and
sbb
sbb
adc
call
jns
repz
pop
xchg
fs
jmp
mov
cli
mov
shlb
xchg
push
xchg
cmpsl
pop
lret
ja,pt
popf
jne
pusha
jae
jbe
ja
or
into
je
pop
in
ja
cmp
repz
mov
jbe
sti
daa
or
inc
or
adc
sahf
adc
or
in
push
and
insb
dec
add
cmp
xor
mov
cmp
in
aam
adc
mov
stos
sbb
dec
aas
xor
xchg
mov
push
mov
dec
add
inc
mov
daa
sbb
push
dec
push
cld
inc
jae
push
movsb
or
fnsave
cmp
je
push
movsb
add
inc
daa
xor
scas
mov
mov
mov
push
xor
aad
sbb
dec
and
movl
sbb
andl
push
add
dec
inc
inc
adc
dec
and
lahf
mov
push
inc
inc
mov
out
pcmpgtd
mov
pop
hlt
push
cli
fcmove
fisubl
cld
or
push
pop
int
lret
pop
insb
lea
push
leave
inc
roll
test
ss
ret
insl
xchg
xchg
and
sti
nop
int3
sub
or
jno
sbb
add
fists
add
adc
into
dec
add
jno
mov
adc
jmp
lret
cmp
out
or
fs
push
out
data16
xlat
inc
mov
fucomp
sarl
xor
pop
out
cmp
mov
sbb
dec
and
loop
pop
movsl
cmp
push
andl
pushf
aam
outsl
xor
repnz
adc
mov
pushf
test
cmp
imul
or
out
sahf
or
cmpsl
scas
fwait
xor
popf
ljmp
hlt
push
xor
mov
or
popf
push
pop
les
arpl
mov
mov
or
push
lods
dec
ret
xor
mov
xor
hlt
lahf
lods
arpl
xchg
icebp
call
dec
cmp
lods
cmpsb
inc
fistl
shrb
push
pop
addr16
jl
inc
nop
ljmp
add
and
pusha
nop
mov
mov
call
pop
or
or
adc
nop
mov
test
lret
ffreep
aam
cmp
out
xchg
outsb
stc
xchg
xchg
mov
outsl
pop
addr16
xor
adc
or
iret
icebp
shrl
mov
adc
movsb
cmpsb
inc
idivb
push
mov
and
sbbb
stc
xchg
out
clc
adc
pop
mov
xchg
je
cmpsl
movsl
mov
mov
out
cltd
adc
sbb
xchg
dec
push
mov
jnp
cmp
pop
nop
inc
rcrb
es
outsl
sub
popa
fnstenv
mov
mov
dec
leave
notb
mov
jae
lahf
hlt
and
or
jge
cmpsl
mov
shll
inc
cmp
std
mov
adc
cs
loopne
fisubl
push
in
movsb
fcoml
out
adc
lods
pusha
mov
in
pop
cmp
inc
int3
int3
push
ret
xor
add
fld
cld
rcr
test
lahf
jl
cmp
dec
bound
rorb
add
mov
lcall
push
shlb
inc
jmp
imul
jmp
lea
inc
adc
mov
adc
es
negl
and
xor
mov
pop
xor
add
dec
sbb
lods
int
data16
int3
and
xchg
mov
jp
mov
roll
add
inc
xchg
xchg
ds
pop
cmp
popa
adc
mov
jnp
xchg
lcall
idivb
lcall
xor
test
imul
mov
addr16
cli
es
daa
lcall
pop
test
jecxz
and
dec
mov
push
jns
adc
adc
cmpsb
xor
fnstsw
fnstenv
bound
cmp
mov
cmpsl
leave
pop
sbb
xchg
push
cmp
and
xchg
lods
adc
sub
adc
inc
jp
sbb
lods
push
cmc
add
cs
mov
mov
rcll
xor
rcr
add
mov
je
mov
mov
out
xor
mov
in
das
or
xor
pop
jle
jb
mov
sub
mov
out
stos
dec
add
adc
scas
mov
inc
push
pop
xor
aad
mov
ljmp
popf
mov
mov
test
adc
mov
loop
jmp
ror
push
xchg
adc
sti
imul
cli
loop
push
loopne
cmpsl
scas
mov
cli
lods
sub
fisttps
out
scas
xor
adc
iret
cmp
cmp
jo
les
mov
push
adc
lods
popf
xchg
inc
shll
pop
addr16
mov
lret
dec
nop
or
sti
add
outsb
pushf
lds
dec
sub
mov
cmp
movsb
or
jle
fisttpll
inc
push
fnsave
sti
loop
adc
fmull
inc
fdivr
xchg
inc
sub
nop
fcmovnb
sub
out
das
fidivl
pop
lock
push
mov
fsubs
rolb
cltd
mov
push
stos
push
scas
rcrb
push
xor
test
fdivs
nop
popf
jg
lods
xor
mov
mov
pop
or
testl
push
sub
scas
mov
dec
pop
xchg
inc
cltd
lods
push
in
cmpb
mov
lahf
ds
les
xor
outsl
std
in
push
pop
enter
icebp
cs
mov
mov
cmpsl
sbb
pop
mov
mov
jmp
inc
cmp
inc
insl
fs
lret
outsb
out
add
push
adc
fidivrl
adc
int3
ds
mov
xor
daa
jp
dec
adc
fadds
fcmovnb
fnstenv
arpl
xor
push
add
dec
mov
dec
int
cmpsl
xchg
jns
mov
jo
lods
scas
sub
lods
jge
daa
add
fistpl
in
or
das
ret
cld
jmp
xor
data16
fdiv
pop
adc
or
fdivr
bound
in
sub
outsb
in
jl
cltd
xor
push
xchg
sbbl
daa
push
push
bound
xor
movsb
add
in
cld
pop
add
lock
fidivrs
fmuls
inc
test
cmp
leave
test
int
into
idivb
push
xchg
push
das
int3
jae
les
mov
in
cld
or
hlt
leave
jecxz
pushf
daa
das
cmp
pop
mov
dec
mov
sarb
hlt
add
and
lret
loopne
lret
mov
inc
pop
sti
lock
push
sub
ljmp
fstps
xor
insl
roll
fsubs
inc
xchg
or
add
cmp
scas
ror
xchg
aad
bound
push
xor
or
ja
inc
lock
inc
mov
stos
or
bnd
adc
movsb
pop
cmp
inc
fnstsw
popf
fcmovne
inc
jg
daa
push
add
aaa
xchg
cmpsl
popf
cs
cmp
mov
xor
sub
jb
std
scas
xor
fsubrl
dec
mov
shlb
sbb
push
das
fnsave
adc
stos
sub
push
or
mov
jge
sub
scas
lock
add
add
and
xchg
jecxz
daa
add
ds
dec
int
fcom
and
test
sbb
or
repz
mov
in
mov
fsubs
enter
out
mov
push
mov
rorb
dec
les
pop
sbb
push
test
push
xchg
fdivr
mov
in
cli
stos
test
pop
sbb
js
jl
bound
xchg
movsl
aas
mov
sbbb
add
leave
stos
das
push
sarb
sbbb
or
nop
or
xchg
outsb
cmp
arpl
xor
sub
push
rorl
add
sbb
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
scas
out
add
jmp
jl
cmpsb
pop
test
clc
loope
dec
lock
fmuls
push
pop
mov
xchg
insb
ds
cmpsl
les
xchg
setnp
sub
mov
mov
lds
jl
flds
cmp
call
cs
cmpsl
cld
jae
xchg
cmp
aam
mov
cmp
and
sub
fldt
aad
loop
inc
in
push
push
pusha
and
dec
or
lret
inc
jmp
dec
mov
gs
aas
cmp
ffreep
sbb
movsl
add
push
lock
push
fnsave
cmp
cld
xchg
xor
rclb
push
push
xlat
outsb
cwtl
push
aaa
sbb
push
rcrb
dec
std
push
sbb
and
ds
cvttps2pi
arpl
jecxz
ljmp
inc
cs
out
adc
lock
jo
xor
rcrb
mov
in
nop
xlat
fs
sbb
stos
inc
inc
outsb
inc
and
cmp
in
into
pop
sahf
sbb
ja
cmp
xor
push
loope
sarl
mov
inc
orb
cmp
daa
or
ror
inc
stc
mov
jno
insb
in
test
fnstsw
adc
mov
outsl
pushf
dec
mov
loopne
in
popa
cli
pop
xor
test
in
hlt
or
dec
jnp
xchg
aaa
dec
insl
inc
mov
mov
in
jne
sbb
mov
loope
push
cmp
or
xor
cmp
repz
jle
sub
or
pushf
add
jne
into
sub
push
cmpsb
imul
xchg
movsl
xchg
das
jb
aam
ja
xchg
sub
stos
out
mov
adc
adc
and
mov
jle
aaa
jge
push
pop
mov
mov
push
mov
pop
xor
xchg
shlb
jb
xchg
insl
mov
shlb
add
lahf
ret
xchg
pop
pop
dec
push
jmp
pushf
rcll
in
add
pop
js
popf
jns
push
or
mov
cmp
pop
fsubl
inc
sub
mov
xchg
ss
int3
repnz
inc
mov
repnz
add
mov
fistpl
dec
dec
cwtl
push
or
add
cld
or
jnp
jecxz
lods
xchg
mov
ret
mov
js
push
pusha
mov
jmp
into
and
inc
cmc
sub
push
sbb
in
xchg
jge
jge
aad
mov
scas
repz
or
std
loop
pop
fisubl
in
pop
push
sub
pop
iret
mov
lret
jo
mov
in
out
inc
lahf
xor
sbb
pop
test
leave
insb
sbb
pop
ss
mov
pushf
adc
adc
lods
xor
cli
lds
stos
test
outsl
adc
rcll
cmp
mov
adc
pop
lret
pop
mov
ss
xchg
adc
push
sub
enter
call
in
lret
test
and
loopne
iret
adc
ss
test
cmpsb
xorb
lahf
das
js
test
xchg
arpl
push
dec
int3
cmpsb
xchg
add
jns
cmpsl
xchg
pop
in
xchg
xor
mov
dec
push
sub
pop
lods
push
pop
in
dec
inc
inc
stos
shl
mov
sbb
adc
jnp
sub
or
sbb
xor
sub
dec
ss
ret
in
cmpsb
mov
ficoms
mov
repnz
jo
push
dec
cmpb
rcpps
jge
push
lcall
adc
cmp
and
scas
cmp
scas
and
std
je
add
pop
adc
imul
or
or
sub
mov
sbb
faddl
add
cmp
scas
enter
mov
mov
aas
lea
incl
nop
shll
lahf
sbb
push
mov
ja
cmp
mov
vpmullw
bound
je
sar
push
pusha
push
xchg
inc
in
and
xorb
inc
cmp
out
pop
into
mov
xchg
xchg
pop
stos
xchg
cmp
inc
jno
xchg
and
mov
fstl
add
jb
sub
push
and
mov
pop
inc
mov
push
and
icebp
xor
and
lock
ret
pop
sbbb
cmp
clc
imul
popa
pop
out
movsb
scas
adc
cmp
mov
out
cmp
fsubrl
rcrl
mov
cmc
rcll
dec
dec
push
iret
bound
mov
mov
jne
clc
dec
jmp
xchg
ret
data16
inc
cwtl
pop
xor
sub
pusha
mov
or
jecxz
aad
fmuls
mov
pop
std
lods
inc
jle
add
xchg
add
in
out
fwait
aam
push
lds
cs
popl
push
mov
xchg
adc
sbb
adc
mov
mov
pop
sti
mov
jmp
cli
icebp
popa
jmp
pop
xchg
xor
in
inc
imul
push
cmp
pop
xchg
inc
lds
in
lods
jg
mov
pop
pop
mov
call
test
and
add
add
xchg
fstpl
test
or
cmpsl
inc
xchg
frstor
cmpb
mov
sbb
mov
lret
mov
flds
pop
xchg
cmp
push
and
not
roll
filds
test
out
addl
sub
js
push
fmull
xlat
jg
jns
xchg
sti
std
iret
vorps
push
lods
and
lock
push
lds
mov
jecxz
nop
fsts
mov
int3
test
fwait
sub
or
add
push
pusha
cmc
lret
xor
aas
jp
mov
icebp
xor
popa
xchg
test
cmp
or
inc
inc
jle
push
popf
sti
gs
cmp
pop
pop
jae
push
push
loopne
add
stos
ds
ds
movb
inc
xor
divl
and
inc
push
cmp
mov
mov
mov
lret
loopne
stos
jle
or
jmp
shl
loope
testl
ret
fidivl
cmp
and
insl
pop
mov
jbe
nop
insb
test
pop
fnstcw
arpl
ss
ret
sti
scas
mov
andb
lods
adc
lea
xlat
cs
lods
adc
inc
icebp
xchg
sbbb
sbb
sub
sbb
out
mov
or
dec
sub
pushf
xchg
fnsave
adc
jmp
xchg
inc
mul
pop
ja
repnz
lods
inc
dec
scas
insl
adc
lcall
icebp
push
dec
add
loope
imul
call
int
lods
insl
in
push
lods
sbb
mov
and
or
addr16
out
test
fsubl
cmp
inc
lds
add
test
mov
out
loop
popa
cs
mul
decl
nop
js
repz
int3
nop
xchg
rcrb
fwait
test
iret
mov
push
and
push
or
jbe
outsb
maskmovq
testl
xchg
push
jp
and
mov
insl
jg
std
cmpsl
mov
mov
insb
inc
inc
xor
mov
call
ja
dec
popl
cmpsl
cmp
or
pop
aad
cmc
mov
int
jnp
xchg
cwtl
test
outsb
addr16
sbb
xor
pop
loopne
pop
xorb
cmp
xor
mov
pop
mov
jo
xor
repnz
add
add
pop
inc
dec
rcrb
xchg
push
xor
xchg
loop
push
mov
or
lahf
ficoml
sbb
push
clc
scas
mov
sub
imul
fwait
subl
bound
imul
push
cmp
cmc
lret
mov
cmp
mov
lcall
push
sbb
adc
xchg
xchg
rcl
lock
fcmovnbe
test
push
push
into
imul
or
push
pop
lods
xor
shrb
pop
lds
sub
ret
in
mov
in
or
adc
and
incb
cwtl
xchg
pop
jno
data16
out
cmpsb
test
mov
iret
xor
or
jg
lds
insl
into
sub
sbb
inc
jp
sub
cmp
jle
fstpl
jle
and
stc
fcoml
mov
add
add
cltd
pop
int3
rorl
push
xchg
lea
bound
jns
gs
sub
les
lods
js
stos
ljmp
cmp
xchg
mov
add
ds
in
add
add
cmp
ja
pop
xor
outsl
in
add
xor
icebp
pusha
movzbl
and
int3
xchg
dec
sbb
test
push
pop
mov
mov
pop
push
xchg
shl
and
repnz
xchg
cli
pop
in
imul
xor
mov
and
mov
leave
mov
loop
repnz
stc
inc
adc
fbld
add
inc
popf
mov
les
inc
add
xlat
or
std
stos
jg,pn
push
push
mov
cmp
cwtl
pop
js
movsl
add
les
adcl
add
in
pop
mov
xchg
xchg
cmpl
push
mov
xor
addr16
mov
or
sbb
popf
xchg
or
leave
xor
lahf
xor
in
pop
pop
in
sub
mov
ss
imul
push
scas
test
clc
fsubl
clc
bound
inc
push
shll
pop
in
dec
lods
es
sti
aam
mull
fistl
xchg
adc
dec
js
out
xchg
jge
xchg
ret
sti
mov
inc
or
adc
push
push
arpl
test
inc
mov
xlat
jno
xchg
jp
loope
and
mov
addr16
insb
imul
daa
mov
sti
and
outsb
scas
scas
inc
aaa
std
mov
mov
stos
mov
shrl
cmpsl
xrelease
cmp
jmp
push
cmc
push
mov
and
lret
mov
add
mov
pinsrw
xchg
mov
inc
dec
cs
pop
rolb
daa
cs
xlat
and
shll
ret
mov
push
or
or
xchg
and
mov
jg
cmp
insb
xchg
mov
mov
push
and
cli
aam
inc
or
jmp
fistl
std
jo
hlt
dec
shr
mov
stc
les
jg
lcall
enter
mov
push
mov
add
pop
fidivl
jbe
cmp
imul
cld
mov
cli
test
mov
pop
push
jle
andb
ss
mov
das
mov
xor
dec
push
mov
fistps
cs
xor
mov
mov
jmp
insb
and
mov
jl
cltd
mov
test
push
xlat
sahf
fcmovne
dec
and
inc
cli
cmp
outsb
nop
cmp
xor
push
and
mov
data16
sbb
icebp
mov
fbstp
iret
loope
push
popf
xchg
shl
rolb
lret
push
and
adc
push
aaa
pop
arpl
ss
jns
inc
inc
push
pushf
or
mov
cltd
and
lcall
push
int
dec
in
call
push
popf
in
mov
or
arpl
jb
icebp
scas
add
int
lods
mov
test
ret
sbb
and
inc
out
dec
xor
or
dec
sub
scas
mov
stos
jbe
loop
adc
cld
iret
arpl
ds
mov
fmul
stos
pop
aaa
bnd
inc
inc
and
adc
addr16
mov
fcompl
lahf
bound
push
dec
imul
fs
pop
cmp
inc
xor
mov
ret
in
sbb
enter
jns
test
lds
pop
cmp
dec
test
xchg
and
cmp
scas
add
cli
stos
push
jnp
cmp
push
pop
andb
xor
mov
push
test
mov
dec
sbb
pop
mov
repz
outsb
dec
and
cmp
sbb
add
outsb
cmp
into
aad
dec
insl
or
cmp
push
daa
pop
mov
iret
dec
je
je
push
in
xchg
icebp
cltd
pop
scas
cmp
enter
inc
xchg
ds
mov
fwait
pushf
js
sub
je
fcompl
xor
and
add
xor
leave
hlt
or
daa
je
rolb
in
xchg
cwtl
call
mov
push
int3
cmp
ret
repz
push
mov
cli
sub
mov
dec
fldl
aaa
jecxz
mov
xchg
inc
adc
les
divl
adc
mov
pop
xor
out
xchg
dec
lods
fistpll
cltd
aad
xchg
mov
sbb
add
xor
jp
cmp
stos
add
mov
insb
or
imul
dec
jo
fnstsw
popa
jb
js
ret
enter
movsb
cwtl
xor
test
inc
sbb
cld
push
shrl
push
ret
add
adc
jns
mov
mov
and
call
rcrl
lret
push
add
pop
repz
les
loopne
sub
dec
mov
ret
shr
jb
jae
std
and
mov
lock
lods
push
std
adc
xchg
xor
loopne
sbb
cmp
or
cmp
icebp
adc
mov
mov
add
jo
movsl
dec
aaa
jns
lea
pop
pop
pop
testl
ljmp
mov
jno
in
jns
mov
es
lods
out
movsb
out
xor
cmc
pop
inc
xchg
sarl
jecxz
xchg
cmp
adc
scas
dec
es
jo
jle
sbb
clc
jecxz
push
sub
das
outsl
mov
mov
dec
lret
movsl
jg
dec
fsts
mov
lcall
scas
push
xchg
dec
jbe
cld
jbe
push
bound
les
loopne
lret
sarl
mov
ds
cld
test
daa
lods
mov
cltd
mov
or
jp
ljmp
imul
outsb
fbld
nop
add
std
jnp
rclb
faddl
scas
ret
out
lock
icebp
add
adc
ds
hlt
js
mov
gs
and
xor
sbb
imul
adc
inc
mov
dec
hlt
js
stos
lods
stc
jo
push
xchg
jbe
jle
popa
call
mov
cmp
inc
es
pop
aad
hlt
pop
mov
xor
test
pop
mov
xor
jne
loopne
andl
pushf
xchg
fcomi
or
inc
sub
fbstp
or
addr16
rcrl
pop
jp
or
and
xchg
daa
test
imul
and
fwait
push
pop
inc
jns
fwait
rcrb
das
mov
sub
jmp
sub
push
pop
cmp
or
movsb
cwtl
mov
pusha
and
test
jle
mov
pop
aad
sbb
hlt
xor
jecxz
cwtl
xor
js
pusha
stc
clc
addr16
sbb
outsb
cltd
or
das
aaa
fiaddl
xchg
push
xor
xlat
inc
xor
in
in
inc
insb
sub
mov
inc
cmp
xchg
in
cmp
daa
popf
dec
pusha
cmp
fistl
mov
out
pop
mov
adc
outsl
mov
push
jb
and
lods
mov
push
pushf
insl
loop
mov
mov
add
orl
inc
jle
in
push
mov
ror
rcll
mov
cs
mov
pop
int
lea
push
stos
popa
mov
icebp
hlt
repnz
push
mov
mov
inc
insb
sbb
aas
add
adc
or
jmp
repz
mov
in
xor
test
xor
jg
mov
int3
clc
sarl
outsb
pop
andl
or
mov
sub
dec
sbb
test
jg
ficoms
nop
sbb
fldl
cmpxchg
jecxz
incb
negl
add
adc
daa
jge
lret
icebp
xchg
mov
shr
and
push
fmull
stos
jne
mov
mov
inc
sub
jmp
pop
aas
rol
lods
repnz
inc
aaa
or
sahf
inc
add
addr16
xchg
mov
sbbl
pop
mov
fildll
xchg
loop
mov
js
mov
add
pop
cmp
pop
sbb
and
ja
mov
inc
pop
jmp
ss
add
xchg
xchg
xchg
lret
fistpll
and
or
mov
in
pop
ljmp
adcl
in
add
test
mov
sub
xor
insb
push
push
test
or
dec
pop
mov
insb
ret
fcoml
jbe
loopne
and
rcrb
cmc
jne
insl
shll
push
subl
sarl
jno
sbb
mov
loope
push
test
xchg
scas
jns
imul
push
je
fsubrp
adc
imul
or
dec
out
push
jo
mov
add
int
fcmovnb
push
sub
fs
or
mov
pushf
fcmovnbe
mov
sti
jbe
insl
jge
pop
pop
cwtl
sub
mov
adc
imul
adc
dec
push
adc
mov
push
ja
pop
movsb
push
pushl
mov
je
hlt
mov
in
mov
add
pushf
xchg
push
xor
aaa
mov
ljmp
aas
cmp
mov
sti
jo
pop
add
mov
xchg
dec
or
sub
inc
je
lcall
pop
inc
inc
pop
mov
repnz
cmp
ja
clc
lock
push
dec
outsl
loop
fisubs
test
cmp
int3
insl
js
lret
cmpsb
in
sbb
push
in
movsl
pop
jp
popf
cmp
into
mov
xchg
and
adc
sti
jbe
pop
movsb
loopne
dec
sub
sub
or
xchg
jbe
jle
xchg
push
push
ja
pop
je
orl
orl
rcll
int3
scas
out
add
xor
xor
insb
rcrl
add
sub
pop
or
mov
inc
mov
cmp
pop
outsl
fcmovbe
lret
mov
mov
je
cmp
or
inc
gs
int
dec
out
out
rdpmc
inc
xorb
xor
scas
or
out
xlat
fsubrs
int3
xchg
add
dec
xlat
imul
pop
lea
adc
bound
imul
mov
pop
enter
je
push
push
mov
jb
push
jb
mov
inc
popa
sub
push
lea
push
jmp
adc
clc
dec
hlt
scas
fildl
inc
or
mov
mov
mov
fisubl
cs
mov
add
lret
pop
addr16
cmc
dec
xchg
push
inc
jmp
shrb
popa
mov
and
incl
mov
push
pop
ret
mov
pop
inc
loopne
add
jecxz
jno
shrb
sti
xchg
cltd
add
dec
jle
shr
enter
nop
xchg
mov
cmp
add
jo
mov
sub
in
sbb
adc
daa
ss
scas
add
lahf
push
cmp
and
in
pop
sub
cmpsb
mov
in
xchg
jbe
jae
hlt
push
insb
ret
imul
or
dec
jnp
and
sbb
cmp
sbb
jge
daa
imul
sub
and
mov
adcb
ss
or
add
cmpsl
outsb
mov
in
inc
shl
std
mov
xor
xor
and
adc
in
scas
mov
stc
mov
add
cs
pop
jae
adc
cmpsl
test
outsw
lock
add
xchg
xchg
loope
sbb
hlt
hlt
bound
mov
sub
and
pusha
out
dec
aam
jg
pop
pushf
adc
adc
fs
lcall
imul
enter
rdmsr
ror
stos
cmp
daa
add
outsb
mov
jno
add
bound
daa
and
in
jae
dec
mov
push
nop
mov
dec
repz
adc
lea
mov
repz
jg
rep
rcl
xor
ficoml
mov
push
dec
clc
and
jle
pop
push
cmpsb
loope
push
aad
mov
push
jge
mov
sbb
sbb
inc
lahf
pop
fs
dec
cld
repnz
enter
aaa
jg
sbb
addr16
add
nop
decb
xchg
sub
andb
push
fiaddl
pop
fsubl
and
dec
daa
out
dec
pop
jl
pop
xor
push
insb
popf
mov
push
push
push
cs
xchg
ret
mov
dec
in
adc
xor
cmpsb
add
int3
fs
mov
xor
packssdw
jecxz
rolb
incl
leave
mov
fcompl
int3
stc
or
mov
clc
das
out
pop
inc
test
mov
lahf
or
dec
cmp
pop
inc
sub
pop
mov
je
clc
imul
jno
outsb
push
adc
ja
xlat
jecxz
mov
clc
decl
mov
dec
test
jbe
fildl
or
inc
jns
push
cmc
leave
inc
int3
mov
fmull
js
imul
mov
test
out
rolb
or
in
lods
mov
mov
xor
pop
adc
jo
cld
fcoml
push
mov
add
es
push
inc
fdivs
add
sub
or
js
jne
sub
rorb
shll
adc
insb
dec
cs
imul
mov
in
stos
or
mov
inc
pop
mov
mov
pop
mov
sub
scas
jmp
xchg
mov
xor
sub
dec
iret
push
xlat
nop
filds
xlat
and
punpcklwd
mov
orb
addb
jne
or
push
stos
mov
xchg
xor
test
fwait
call
xchg
popa
ret
sub
jg
xchg
shlb
sbb
adc
inc
push
or
mov
adc
mov
jo
and
push
and
cmp
shll
sti
xor
pop
push
pop
mov
jno
xchg
out
test
ljmp
pop
adc
es
stc
adc
inc
cmp
arpl
add
mov
xor
jo
fstpl
xchg
mov
dec
mov
shll
or
sarl
leave
popf
movsl
xchg
daa
sbb
js
xchg
cmpsl
aas
jno
xor
add
int3
jl
dec
jnp
cmp
mov
add
shll
inc
and
inc
cmp
cli
mov
sbb
xchg
adc
sahf
xchg
xchg
pop
cmpsb
or
addr16
cld
sub
cmp
dec
test
mov
loop
sbb
fsub
aam
inc
inc
xchg
pop
jg
jo
in
cmp
adc
sysexit
bound
mov
pop
pop
pop
loopne
cmp
and
jno
push
sbb
mov
ss
sub
push
mov
or
int3
inc
in
adc
movsl
lahf
scas
mov
std
adc
pop
loop
pop
jecxz
aam
ja
xor
jl
inc
cmp
leave
or
es
ror
push
lret
pop
insb
xchg
mov
mov
lods
in
aaa
aaa
cld
cli
pusha
pushf
fiaddl
fiaddl
inc
clc
dec
jbe
cmpsb
pop
shl
in
pop
mov
or
fwait
sub
or
push
adc
rorl
lret
call
inc
test
imul
pop
icebp
das
mov
dec
pop
stc
xor
daa
data16
pop
dec
lahf
out
pop
cmpsb
cmc
jbe
pop
andl
stos
cmpsl
cmp
mov
inc
pop
jns,pt
cmp
and
xchg
mov
sbb
pop
fdivr
adc
inc
fsts
add
movsb
aas
and
sti
cld
movsb
fdivrl
cmp
adc
inc
ja
or
nop
lea
sbb
xor
mov
and
lcall
push
arpl
cmp
out
jge
test
mov
mov
popa
addr16
sub
je
adc
mov
xchg
fstpt
pusha
aaa
lea
add
xorl
loop
leave
aam
mov
adc
icebp
push
rcll
out
push
fldl
cltd
test
inc
sbb
mov
push
pop
imul
inc
adc
pop
hlt
sub
stos
gs
push
repz
xchg
in
and
pushf
inc
inc
mov
and
mov
pusha
rolb
or
fs
fbstp
dec
sbbb
daa
xchg
dec
lea
xchg
xor
add
or
xchg
xor
fwait
xor
out
xchg
or
popa
dec
or
rolb
add
sbb
aaa
test
ss
and
mov
iret
jae
jecxz
mov
pop
pushf
into
imul
sbb
mul
xchg
gs
daa
pop
jmp
jbe
adc
xchg
cwtl
inc
inc
inc
xchg
mov
test
clc
cmpsl
cld
cmp
push
stc
xor
imul
inc
xor
lret
push
mov
xchg
push
jg
and
out
inc
jne,pt
bswap
mov
inc
rol
dec
test
pop
fisubs
jmp
test
push
push
jge
xor
pop
push
shr
dec
lods
push
adc
mov
sub
adcb
nop
cli
mov
iret
mov
mov
pop
sbb
nop
cs
and
dec
je
fdiv
repz
scas
add
scas
sti
push
cmc
mov
lahf
mov
aad
add
std
mov
shrl
es
test
dec
sbb
cmp
fs
js
lea
scas
cmp
mov
in
push
rcr
sub
test
push
imul
cmp
cmp
or
daa
lret
ljmp
pop
jbe
push
mov
int3
sbb
xchg
aad
pop
jbe
mov
aaa
scas
and
lds
psubusb
and
cs
pop
aaa
or
and
arpl
lret
shlb
add
ljmp
scas
xor
push
sub
mov
mov
movsl
stc
push
out
jae
push
inc
enter
sbb
xchg
push
jno
andl
lock
std
pushf
test
in
and
inc
push
xor
mov
leave
stos
inc
jbe
inc
add
adc
sbb
xchg
test
push
movsb
xchg
xchg
stos
icebp
cs
mov
test
xchg
xor
mov
fcmovne
in
imul
or
mov
dec
inc
fs
in
les
and
xor
into
or
cmp
movsl
push
idivl
fwait
sub
mov
add
or
adc
iret
idivl
mov
jp
mov
sbb
loop
sub
ret
cmp
ss
dec
pop
je
icebp
add
adc
mov
cwtl
pushf
add
repnz
push
cmp
orb
jo
out
lea
imul
paddsw
mov
in
stos
push
pop
adc
jae
loop
cltd
repnz
mov
jno
aad
test
cmp
and
pop
mov
into
das
sar
movsl
inc
insl
inc
jl
daa
push
push
mov
lret
add
push
inc
or
outsl
lock
or
xchg
push
jmp
cmpsl
out
dec
and
insl
enter
lods
cmc
mov
jge
push
fs
rol
je
cmpsl
cmpsb
jecxz
call
push
xor
push
cmc
aas
mov
sbb
cmp
sub
rcrb
cwtl
and
dec
push
add
xor
or
mov
sub
push
pusha
inc
shll
dec
shll
stc
lea
popf
inc
sbb
or
add
mov
mov
out
aaa
dec
outsl
mov
sahf
mov
subl
inc
sub
adc
cmpsl
inc
popa
repz
movl
adc
sbb
and
mov
xor
dec
mov
dec
xchg
data16
adc
xor
dec
hlt
dec
gs
sbb
call
repz
and
inc
adc
pushl
nop
mov
cs
js
insl
imul
pop
lock
pushf
adc
inc
and
mov
mov
push
out
jns
or
insl
sub
xchg
dec
push
mov
adc
push
mov
jae
repnz
clc
push
fmul
cmp
dec
mov
fimull
sbbl
rorl
cmp
mov
and
mov
push
xor
int
rsqrtps
xor
sub
mov
mov
mov
out
stos
and
sbb
popf
mov
push
ret
pop
sub
push
jb
jb
jge
cmpsb
mov
dec
sti
xchg
addr16
or
mov
movsl
add
cs
punpckhbw
pop
mov
std
inc
cltd
sub
popf
div
shll
movsl
ficoms
mov
cmp
outsl
cmpsl
imul
test
sti
sub
inc
add
mov
shll
pop
in
clc
jge
and
pushf
cmp
pop
fwait
pop
jp
out
mov
jg
mov
jno
je
or
orl
push
inc
rorb
mov
gs
cmp
push
mov
mov
inc
loop
push
xor
and
mov
dec
mov
or
frstor
bound
cmp
sbb
aas
cmp
xor
lods
enter
data16
imul
daa
cmp
mov
cmp
and
insl
lods
mov
inc
mov
dec
insl
xchg
push
fwait
dec
fs
jno
pop
leave
inc
sbb
mov
cmpsb
repnz
aaa
mov
lea
push
pop
cmpsb
sbb
fidivl
sbb
imul
int3
test
lock
sahf
and
push
inc
ja
in
les
imul
sbb
iret
cmp
inc
push
sub
imul
cmc
and
and
std
sbb
or
pop
mov
scas
movsb
dec
movsb
add
test
adc
pop
es
sahf
mov
mov
xchg
clc
pushf
iret
es
mov
mov
fsubl
cmpsl
test
xchg
jmp
mov
sub
clc
shlb
push
sub
mov
shll
insl
pop
out
inc
out
lcall
dec
sbb
lds
arpl
repz
rcll
in
pop
xor
je
out
outsb
mov
ret
fimull
xor
push
out
outsl
scas
scas
lds
lahf
pop
into
adc
cld
sbb
dec
sbb
mov
ja
cmp
xlat
pop
pop
stos
pop
stc
pop
inc
mov
aas
cmp
iret
insl
aaa
out
xchg
fidivrl
jle
ds
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
test
xchg
push
int
jl
pop
jl
mov
cmc
std
inc
sbb
mov
jnp
xchg
leave
sbb
lds
inc
rcrb
fimull
sbb
dec
add
call
sti
sub
mov
jecxz
lds
jmp
xor
into
jle
fcmovbe
loop
or
jae
adc
dec
sbb
es
fsubs
mov
cmp
outsb
sub
lret
pushf
out
jecxz
sbbl
push
out
xchg
pop
shll
stos
out
add
push
je
fadds
cwtl
aam
adc
lock
test
sub
push
or
lret
pop
xor
cli
clc
or
jle
stos
mov
sub
jb
sbb
dec
sub
mov
push
inc
gs
mov
jae
pushf
aam
scas
scas
ds
dec
jo
test
push
hlt
mov
loop
mov
mov
scas
cltd
addr16
adc
in
mov
adc
dec
and
add
xlat
int
fmuls
cmpsl
shl
aaa
int
dec
cs
ret
pop
push
jb
dec
aad
lock
dec
push
cwtl
adc
adc
popf
and
jp,pn
push
cmp
add
mov
dec
out
mov
inc
in
addr16
insl
jl
mov
inc
jmp
pop
mov
jg
jb
ds
sbb
rcrb
xchg
cmp
call
cmc
push
insl
stos
cmpsl
push
add
popl
je
dec
arpl
cli
dec
aad
lret
jp
ret
or
js
sbb
out
or
je
mov
jle
adc
mov
inc
adc
stos
pop
repnz
pop
dec
pop
ljmp
jno
mov
aad
xor
inc
aad
fstl
adc
mov
xchg
mov
mov
sub
loop
in
and
mov
dec
cmp
pushf
dec
mov
mov
xchg
lcall
je
fcoms
data16
fcompl
sbb
in
lcall
push
pop
fldt
jecxz
pop
inc
cli
jle
aad
xor
gs
aad
mov
mov
shlb
movsl
mov
xchg
push
sbb
pop
push
inc
ret
js
xor
jo
push
jae
add
jecxz
into
insb
repnz
movsb
pusha
adc
jbe
repz
add
bound
cwtl
sbb
ret
add
cmp
subb
fldcw
repz
pop
outsb
in
jns
jp
test
xor
insb
lcall
jb
dec
ljmp
adc
cmpl
lahf
pop
sbb
add
loope
cmpsb
mov
lea
xchg
inc
cmp
es
and
lods
pop
adc
push
dec
xchg
sbb
add
push
dec
aaa
cmp
cmp
xchg
inc
push
fisubrl
mov
sub
adc
dec
aaa
sub
lock
and
adc
cmp
push
lods
fsqrt
ljmp
nop
dec
jno
in
or
fs
lods
sub
cmp
iret
sbb
cmp
into
rol
dec
imul
out
pusha
xchg
mov
sbb
sbb
fs
sbb
and
cltd
jge
imul
mov
mov
mov
je
insl
sbb
outsb
pop
dec
cmp
loope
hlt
aaa
pop
fimuls
scas
cwtl
mov
sbb
dec
sub
and
inc
jp
mov
test
mov
jmp
add
mov
js
add
push
cmp
inc
inc
orb
mov
or
cmp
dec
aam
or
hlt
imul
jle
shl
shlb
andl
sub
rcr
stc
mov
jecxz
data16
iret
pop
mov
xchg
sbb
mov
jo
arpl
mov
rclb
cmp
or
xchg
pop
mov
push
movsb
xchg
inc
in
enter
and
mov
stos
repnz
inc
xor
out
inc
adc
fisttpll
aad
inc
cmc
pop
cmc
dec
sti
rcl
repnz
cld
xor
jns
inc
adc
xor
into
xlat
stos
xchg
jnp
jmp
jbe
outsl
hlt
call
shrb
jo
repz
mov
jmp
push
mov
gs
roll
sbb
cld
xchg
jmp
or
jnp
aas
imul
test
ss
fwait
data16
dec
sub
xchg
jl
ss
sbb
mov
mov
cmc
subb
push
cmp
test
out
inc
xchg
aas
adc
mov
mov
repz
add
jmp
sbb
jnp
adc
stc
mov
push
adc
cs
aaa
iret
lahf
daa
mov
stos
fs
outsl
cli
jb
lock
fstpt
pop
mov
jp
mov
mov
aaa
out
data16
jmp
mov
and
ret
sbb
iret
inc
adc
outsb
int
mov
movsl
sbb
adc
add
imul
mov
pop
inc
add
dec
inc
push
push
cmpsl
lret
dec
mov
or
cltd
pop
adc
xor
mov
mov
movsl
bound
insb
pusha
mov
bound
loopne
mov
sbb
scas
in
outsb
mov
xor
fcompl
mov
mov
push
pushf
shlb
mov
jecxz
ja
cltd
xchg
ret
xchg
mov
insb
pop
inc
fucom
ret
jne
int3
or
imul
je
arpl
mov
decb
mov
popa
cmp
add
sbb
in
and
mov
jnp
push
int3
and
lods
jnp
test
ss
push
jle
pop
jnp
push
test
repnz
out
ljmp
mov
pop
sub
ret
pop
data16
outsb
icebp
cmp
add
cltd
push
ja
lcall
sbb
in
cmpsb
test
lock
mov
mov
test
js
lahf
pop
lea
fisttpll
sbb
loope
and
mov
clc
rolb
rorl
subb
and
push
sub
cmpsb
mov
test
mov
fadds
pop
jle
das
inc
lds
jp
xchg
mov
sub
inc
push
cmove
aas
sub
pop
repnz
mov
call
icebp
int
adc
lea
lahf
and
mov
ljmp
push
sarb
xor
jg
mov
int
adc
dec
mov
fcmovb
or
lods
dec
test
adc
mov
sub
mov
xlat
push
inc
jmp
lret
push
les
out
subb
mov
iret
mov
xchg
nop
mov
fs
js
mov
lahf
stos
or
enter
mov
mov
int
cwtl
lods
mov
push
push
sbb
pop
fwait
xchg
cmp
mov
int
adcb
push
shrl
jnp
mov
pop
adc
ja
mov
mov
dec
sahf
in
push
inc
pop
shll
dec
push
mov
push
fsubl
mov
cltd
leave
stos
pop
ds
lcall
mov
and
mov
mov
std
mov
add
adc
xchg
imul
fists
lods
push
add
jge
inc
pop
jnp
dec
cmp
shll
and
push
pushf
push
xorb
loope
mov
pop
aad
mov
cmpsb
mov
push
ret
jns
xchg
mov
mov
ss
ja
push
pop
fstpl
popf
xor
inc
ds
lds
add
jae
adc
popf
mov
movsb
cmpb
xlat
mov
or
popa
rcr
hlt
lods
lahf
cmpsb
cltd
or
ret
mov
loop
in
mov
dec
dec
or
cmpsl
or
enter
shlb
push
adc
mov
cmp
push
ret
xchg
jge
and
dec
std
loop
push
sub
add
mov
into
cli
push
push
pop
pop
dec
ja
mov
repnz
sub
push
cmp
xor
mov
xchg
ret
fisubl
dec
rolb
mov
andnps
iret
fwait
and
xchg
lock
loopne
mov
loope
stc
dec
mov
sub
ljmp
stos
fdivr
mov
inc
xchg
adc
add
or
idivb
popa
stos
xchg
ret
inc
add
mov
les
cmp
push
xchg
mov
out
sub
fstps
or
inc
mov
pop
lods
data16
xchg
scas
stos
xchg
lock
mov
mov
cmp
aad
pop
test
int3
inc
mov
ja
xor
int3
out
add
jp
nop
xor
and
sarl
dec
je
dec
adc
mov
sbb
adc
clc
push
mov
inc
inc
jae
mov
lea
or
insb
roll
xor
test
fscale
xchg
sahf
sub
jae
mov
sub
push
jp
lock
add
ret
inc
jecxz
jae
aam
sbb
test
loope
es
pop
cmp
insb
jbe
lock
dec
add
movsb
sbb
xchg
test
xchg
xchg
cmp
push
or
dec
push
scas
daa
pop
dec
dec
fcmovnu
rol
imulb
add
nop
sbb
xchg
int3
fbstp
or
xor
fdivrp
daa
int
out
sahf
mov
lret
jno
dec
popw
clc
adc
pop
or
ja
daa
push
sub
lods
and
aas
scas
mov
jnp
int3
rclb
add
cmp
jno
xor
xlat
pop
fcmovu
sub
pop
cmp
adc
faddl
mov
aaa
dec
test
adc
and
shl
clc
inc
pop
mov
mov
and
loopne
es
pushf
and
ja
jb
test
pop
sub
pop
adc
inc
mov
mov
das
pusha
mov
push
lods
cmp
stos
ret
mov
imul
stc
adc
shrl
loope
adc
sub
jbe
cmp
push
push
fucom
adc
xchg
pusha
lods
or
cpuid
cmpsb
movsb
xchg
sbb
sub
mov
push
bound
icebp
push
push
cmp
cld
loopne
or
dec
js
mov
in
sbb
cmpsl
imull
adc
orl
push
test
xchg
xchg
test
std
lock
insb
movsl
test
hlt
insl
inc
into
dec
rcrl
popl
push
ljmp
insl
mov
and
adc
push
cs
fldt
das
inc
mul
loopne
sbb
mov
outsl
ja
inc
in
mov
stos
lret
push
outsb
adc
orb
mov
xor
cmpsb
xor
in
push
and
jne
pop
imul
pop
dec
inc
les
mov
imulb
divb
cmp
outsb
lcall
cmpsl
lea
stos
or
notl
cmp
inc
int
cmpsb
sub
shr
fldl
and
and
scas
movsb
movsl
xlat
jbe
aad
xchg
fldl2t
xchg
xchg
xchg
xchg
je
jp
jns
lock
pop
mov
sti
pop
insb
mov
je
mov
cltd
or
mov
out
lret
or
inc
cmpsl
mov
or
sbbb
mov
rorb
mov
fsubp
xor
jb
mov
sub
push
mov
ficoml
add
insl
xor
rolb
ss
ret
push
push
pop
rcr
pop
insb
push
hlt
aas
jmp
cmp
ljmp
mov
xchg
shll
mov
lret
sbb
add
jecxz
sbb
out
xorl
pushf
int3
out
and
mov
push
xchg
mov
repz
jp
add
jbe
xor
push
cs
mov
sub
inc
inc
pop
or
jl
jb
stos
jle
xchg
ljmp
adc
xchg
fsubs
cmpsl
out
push
test
dec
in
es
pop
pop
inc
lcall
das
sub
loop
mov
cltd
lods
and
jg
or
in
int
nop
jg
or
sub
hlt
movsb
jle
mov
cmc
cmp
adc
cwtl
adc
and
and
divb
movsl
pop
aam
sti
faddl
or
repz
test
jl
lods
inc
push
xlat
insb
jmp
lahf
cltd
mov
mov
add
or
repz
pusha
cmc
push
lds
jle
lods
adcb
or
add
ljmp
arpl
int3
rcll
xor
mov
scas
pop
jo
mov
lcall
jg
lret
fs
add
pop
seto
jl
sub
xchg
enter
xor
mov
jl
popa
inc
lds
call
lcall
or
adc
inc
rcll
add
inc
add
sub
js
push
in
lods
cli
in
push
stos
sbb
push
cs
std
adc
sbb
movsl
push
sub
pop
and
insb
nop
push
mov
adc
inc
sbb
jle
and
movsl
inc
stos
imul
pop
rolb
inc
jns
movnti
sbb
mov
mov
adc
mov
cwtl
pop
loopne
or
push
fwait
push
out
loop
ljmp
cli
clc
mov
push
lret
bound
call
mov
sbb
xor
push
test
jle
push
mov
sbb
lret
lea
cmp
or
push
aad
jmp
mov
sbb
sbb
and
pop
mov
mov
pop
inc
sub
in
int3
mov
addr16
in
shlb
sbb
mov
rcrb
sub
jbe
xchg
mov
dec
stos
fildl
lds
jmp
xor
jmp
pop
ss
pop
aam
mov
inc
nop
sbb
jne
ss
jle
aad
aam
jg
cltd
stc
dec
insl
and
ss
mov
or
sbb
hlt
stos
into
int3
enter
push
les
gs
orl
or
mov
repz
test
cmp
fstpt
movsb
push
mov
jnp
dec
insb
testl
outsl
adc
sarb
call
jle
iret
pop
xorb
in
or
js
dec
icebp
stc
cmp
test
xchg
in
mov
dec
jo
sub
cmpsb
add
shl
add
cmp
aam
mov
mov
clc
imul
inc
adc
out
stos
jae
cmpsb
mov
jae
sahf
mov
ss
hlt
mov
push
xor
rolb
mov
ret
pop
gs
and
pop
popa
xor
push
sar
inc
sbb
push
stos
cmp
outsb
xchg
push
push
fisubl
in
mov
icebp
pop
stc
cmp
std
add
roll
adc
mov
pop
sub
flds
jo
inc
mov
jp
mov
mov
and
stos
cmp
lods
idivl
push
xor
pop
cli
decb
into
ds
mov
lods
loope
sti
push
lods
push
fisttpl
jmp
mov
test
mov
and
mov
imul
bound
testb
roll
icebp
push
xchg
or
test
daa
dec
xchg
in
push
xor
fdiv
pop
in
in
call
xchg
daa
dec
cmp
adc
xor
sbb
adc
data16
jne
lret
jp
subb
ret
mov
jo
push
sbb
gs
xor
jno
mov
pusha
into
or
push
jge
pusha
pop
loop
mov
cwtl
or
push
and
test
push
adc
stos
inc
aad
xchg
inc
and
mov
push
inc
sahf
ss
sub
bnd
js
lds
mov
popa
insb
jle
xchg
sarb
arpl
inc
sbbb
scas
jmp
js
mov
jnp
cmp
fisttpl
fnstcw
imul
push
pop
dec
fs
jbe
sbb
daa
and
cld
adc
push
mov
aam
push
push
call
push
pop
outsl
pop
int
sub
cld
add
nop
pop
sbb
mov
int
inc
dec
sbb
insb
mov
xchg
sub
aam
into
xchg
mov
dec
push
adcl
and
push
add
sbb
pop
pop
mov
aas
push
mov
shlb
lea
mov
loopne
lahf
sti
fs
loope
jecxz
dec
pop
dec
icebp
faddl
lret
push
rcrl
subl
or
notb
aaa
fsubrs
bound
int3
push
mov
xchg
sbb
pushf
adc
dec
adc
fdivr
outsb
xchg
sbb
and
out
les
mov
pop
adc
mov
pop
adc
mov
mov
or
and
mov
adc
mov
arpl
add
inc
inc
loopne
mov
xchg
mov
sarb
pusha
ljmp
sub
and
mov
dec
or
xor
jnp
jo
jl
adc
adc
dec
sub
add
xchg
imul
fistps
mov
xlat
jge
and
inc
aaa
sarb
pop
sbb
xchg
jne
push
int
dec
gs
aas
iret
and
inc
push
sbb
mov
repnz
sub
aaa
cmp
or
out
jmp
mov
mov
scas
movsb
jmp
rolb
inc
aaa
xor
inc
mov
outsb
xchg
arpl
inc
les
in
pop
outsb
adc
je
sub
mov
arpl
sbb
jmp
shll
pop
lods
cltd
call
ret
add
and
icebp
ds
mov
test
mov
cwtl
repz
inc
jns
xlat
dec
test
jle
insl
sbb
pop
sbb
adc
imul
ljmp
mov
movsl
mov
cmp
push
adc
jecxz
mov
pop
xlat
clc
data16
xchg
mov
pop
mov
cwtl
je
pop
nop
psubsb
pop
mov
mov
jecxz
rclb
jmp
dec
mov
jecxz
test
mov
push
pop
jb
pusha
pop
aas
fstl
xchg
mov
out
cmp
nop
pop
lock
lods
daa
dec
jae
das
or
mov
cld
repnz
mov
add
mov
sub
mov
subl
pop
sbb
inc
adc
push
icebp
sub
cmp
stos
test
fcomps
jge
xor
fcomi
cmc
dec
das
shlb
clc
jge
inc
lahf
adc
mov
jnp
in
pop
dec
jne
fisubrl
subl
ljmp
daa
dec
push
mov
or
cmc
in
xor
mov
pop
push
xchg
mov
jne
dec
lahf
xchg
inc
jle
enter
push
and
in
aas
pop
movl
add
xchg
xchg
movsb
mov
in
shl
jl
dec
sahf
scas
in
inc
xchg
pusha
pop
push
ja
mov
fldl
or
or
insl
mov
pop
pop
dec
std
push
out
and
mov
js
test
lock
leave
sahf
pop
pop
cs
cmp
jo
adcl
sbb
leave
test
sarb
in
test
add
or
cmpsl
aam
lea
kxorw
mov
movsl
jg
push
or
mov
cmpsb
or
or
jno
lods
mov
decl
subb
dec
or
rolb
sbbl
ret
adc
xchg
cmp
iret
daa
xchg
push
fdivr
add
inc
cld
push
and
js
ljmp
aam
movsb
repnz
test
mov
call
mov
cmpsb
mov
ljmp
shlb
jle
sbb
data16
jecxz
jns
shll
pop
sbbl
sti
mov
divps
jbe
lods
jno
scas
mov
or
je
psraw
mov
fcompl
dec
test
pop
int3
cmp
cld
jno
mov
ss
fadds
mov
xorl
lods
xor
es
pop
mov
ret
inc
mov
xchg
movsl
push
sarb
data16
adc
aam
pop
xchg
out
xchg
mov
mov
adc
cmpsl
mov
and
xlat
lahf
mov
sub
das
and
adc
cmp
and
ds
clc
mov
mov
cld
es
loopne
enter
ret
mov
out
int3
xor
mov
js
stc
sbb
xchg
addl
rclb
daa
addr16
lods
mov
outsl
cld
outsl
sub
shlb
jb
in
cmp
cmc
data16
xor
stos
mov
mov
dec
jecxz
je
cwtl
add
push
xchg
fldenv
aad
sub
aam
or
xor
cmp
ja
stc
pusha
cmc
fcompl
jno
jnp
add
push
add
int3
fildl
lret
loop
je
or
mov
mov
daa
cs
mulb
sarl
movsb
adc
pop
dec
xor
jge
in
push
xchg
cltd
push
imul
cmc
pop
inc
dec
je
scas
inc
jp
faddp
jp
pop
lods
outsb
out
cmpsl
pop
jbe
lahf
sbb
sbb
dec
adc
jno
cmp
fisttpll
in
dec
ret
pushf
scas
mov
bound
add
sub
mov
push
xchg
lock
push
mov
sarb
push
shll
in
imul
sub
xor
cmp
dec
icebp
dec
jne
in
jg
xchg
out
xchg
adc
lahf
in
xchg
or
int3
add
jo
hlt
lret
push
scas
fdivr
fcmovbe
movsb
push
inc
icebp
aam
ret
test
icebp
push
jmp
fsubp
test
adc
lret
mov
jb
cmp
mov
mov
dec
sbb
aad
in
imul
js
jg
or
imul
aaa
call
push
xchg
add
sbb
fidivrs
pop
test
adc
aam
cld
pop
inc
andb
in
mov
lcall
les
pushf
mov
icebp
jne
inc
orb
push
leave
mov
insl
pop
adc
faddl
into
xchg
push
test
lret
test
mov
cmp
repnz
into
add
dec
inc
mov
adc
stc
push
in
xor
add
cmp
test
push
cli
rcrl
flds
push
mov
pop
cltd
lods
mov
test
jl
cli
aas
lret
xor
in
sbb
iret
pop
push
jbe
pop
sbb
mov
fwait
orb
or
mov
loop
or
int
push
pop
sub
int3
packsswb
add
add
cmpsb
test
loop
add
into
cld
addr16
push
push
shll
mov
ds
movsb
xor
lcall
ss
stc
je
idivb
or
rorb
xchg
adc
test
cmpsl
into
stos
jb
fwait
xchg
fbld
fidivs
mov
mov
inc
cmpsl
jb
add
int3
test
fdivl
push
out
cmp
sbb
gs
xlat
dec
ret
push
pop
dec
and
into
sbb
daa
xor
nop
jg
push
jg
aad
lahf
pop
cltd
shlb
rcrb
sar
inc
test
mov
sub
aam
fistl
sbb
jp
dec
aam
es
xor
mov
lahf
sub
pop
mov
cmp
and
aas
pop
mov
int3
or
fildl
shll
inc
or
mov
int
mov
dec
push
xor
push
add
push
xchg
add
cld
adc
and
dec
xlat
lock
addl
int3
dec
pop
inc
push
fisttps
cmpsb
dec
fimuls
sub
addr16
movsb
cmpb
dec
pop
shl
outsl
mov
enter
push
sbbb
fwait
iret
jno
shl
mov
mov
arpl
lahf
testl
fcomp
jmp
push
nop
jnp,pn
stos
shl
mov
and
dec
into
and
inc
lods
lret
adc
add
inc
popa
loope
mov
pop
jmp
jmp
cmp
mov
cld
lock
in
cwtl
mov
inc
sbb
push
pop
inc
lcall
pop
mov
addb
mov
into
cltd
add
sbb
pop
les
mov
inc
cmp
mov
es
dec
push
sti
lret
xchg
pop
pop
mov
loope
jno
loopne
and
sahf
negl
push
cwtl
xchg
sbb
mulb
lods
lods
sti
push
xchg
hlt
imul
ja
xchg
dec
outsb
add
adc
insl
xor
lahf
mov
sbb
nop
insl
lea
lret
pop
adcb
enter
and
xchg
dec
cmc
movsl
and
and
mov
xor
std
dec
mov
mov
sbb
push
rcl
push
add
addl
sub
adc
arpl
jne
fistpll
xor
in
dec
enter
shlb
push
pop
cmpsl
mov
shll
mov
in
ja
sahf
sbb
or
ret
stos
call
mov
pop
fldt
push
xor
iret
jp
push
push
add
mov
mov
xchg
jecxz
pop
xorl
push
cltd
push
push
test
clc
add
lret
jp
dec
adc
mov
out
inc
test
add
sbb
andl
add
mov
mov
xchg
xor
fnstsw
imul
push
push
aas
xchg
enter
cwtl
scas
cltd
ss
stos
int3
mov
jb
sbb
out
arpl
mov
scas
sti
mov
and
pop
lret
mov
ret
cmpsl
lret
imull
out
push
sahf
push
push
mov
mov
add
in
inc
sbb
cmp
jecxz
int3
mov
jmp
outsl
mov
mov
subb
pushf
pushf
mov
fdivrl
xor
loope
repnz
cmc
jno
sub
loop
mov
adc
lahf
xor
push
mov
xor
mov
out
aad
xchg
mov
dec
mov
sub
shrl
cmp
popf
imul
stos
cmp
xor
arpl
xchg
mov
sbb
dec
cltd
push
aam
andl
out
and
js
dec
mov
xchg
fwait
jmp
sub
jp
lock
pop
sub
int3
pop
mov
outsb
into
adc
mov
rclb
jge
add
out
pop
xor
shll
xor
aaa
mov
mov
jbe
cld
imulb
add
cmp
pop
fisttpll
out
cld
sbb
fldl
adc
mov
inc
movsl
or
clc
les
loopne
adc
lret
xor
sub
xchg
push
sub
sbb
push
psubb
inc
cmp
orl
ret
jo
push
xchg
repnz
mov
inc
leave
iret
inc
nop
push
adc
fstps
jle
ljmp
or
test
mov
lods
sti
cmp
and
sbb
cmpxchg
fs
push
lahf
and
sub
mov
mov
dec
push
decl
hlt
ja
sub
xor
push
test
or
lcall
divl
flds
xor
aad
cli
or
sbb
pop
dec
fldl
xchg
ss
imul
jecxz
and
push
sbb
push
scas
and
scas
inc
ds
cld
lods
or
cs
jae
pop
int3
and
movsl
icebp
nop
mov
sbb
data16
sbb
adcb
xchg
mov
jno
push
jno
scas
scas
pop
add
std
inc
pop
jne
mov
push
dec
jb
shll
or
jl
jns
out
pop
pop
movsb
mov
pop
fldenv
dec
xor
pop
inc
mov
mov
jmp
pushf
push
or
dec
lds
xor
out
test
inc
sbb
ja
out
pop
out
ret
sub
jne
cmp
pop
mov
mov
lods
sti
iret
imul
pushf
fisubl
ss
ljmp
jmp
add
push
pop
dec
shlb
aaa
scas
inc
mov
sub
push
mov
add
popf
inc
push
mov
popf
pop
add
clc
adcb
cmp
and
rol
cmp
jo
cli
or
inc
cmp
lods
jmp
pop
cmc
int
xchg
mov
cld
push
mov
xchg
dec
dec
jo
outsl
sti
sbb
ljmp
or
divb
or
pop
movsl
in
mov
push
xor
les
and
shrl
inc
sub
jl
push
fistpl
jecxz
icebp
fstps
popf
sub
subl
fsubs
popa
sbb
adc
mov
call
leave
or
jle
and
ret
push
outsb
pop
data16
in
adc
movsb
pop
cmp
jns
je
in
cmpsl
or
idivb
adc
out
xchg
mov
xchg
jb
in
adc
pop
pusha
add
lock
pop
inc
pusha
cltd
nop
loop
mov
adc
stos
dec
and
dec
push
repnz
imul
sbb
pusha
inc
pop
adc
sub
jp
int3
push
testb
push
mov
add
es
xor
fiadds
xchg
lods
repz
push
cmp
sub
outsb
mov
cmp
inc
test
mov
fmulp
adc
in
notl
inc
jp
xlat
jmp
sbb
cmpsl
imul
addr16
and
mov
mov
pop
loop
or
fldt
cld
dec
push
add
adc
and
ja
mov
push
or
mov
push
stc
dec
pop
xor
inc
xchg
clc
shlb
adc
mov
out
push
xor
xor
sbb
mov
pop
cmp
hlt
lret
or
adc
cmp
mov
das
test
ret
inc
dec
mov
rol
test
and
movsb
mov
test
sbb
je
pop
add
and
in
rcll
mov
movsb
gs
out
and
insl
rcll
fcompl
lods
push
jle
sbb
pop
insb
sbb
subb
xlat
xchg
sbb
aad
sub
xlat
sbb
mov
and
or
ret
or
jg
or
adcb
pop
jne
loopne
mov
ret
movsb
std
lahf
inc
mov
jb
clc
jp
push
mov
int
pushf
sub
add
lret
push
mov
xor
sub
lock
xlat
push
les
int3
rclb
adc
mov
sub
js
add
pop
mov
cmpsl
inc
nop
mov
cmpsl
in
fistpll
mov
and
jae
jge
adc
cmp
add
pop
subl
fisttpl
xor
mov
dec
test
loop
jl
cs
stos
cmp
fisubl
sahf
fistl
int
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
data16
scas
rorb
jl
pop
jl
shll
test
andl
in
imul
push
aad
pushf
jge
shll
mov
lods
and
or
addr16
mov
pop
testl
test
sahf
loope
mov
mov
sbb
or
mov
sub
into
das
xor
lret
dec
nop
xor
mov
cmp
or
add
mov
popa
aam
inc
ret
xchg
xchg
add
pop
cmpsb
arpl
or
cmp
mov
jns
ret
pop
lods
and
mov
sub
repz
in
sbb
int3
dec
push
popa
lahf
mov
scas
mov
cmpsl
subb
je
lahf
loopne
mov
aam
xor
int3
insb
cmpsl
clc
sub
xor
sub
mov
in
adc
popw
movups
mov
nop
push
mov
fs
and
inc
int
shr
std
fld
repnz
sbb
call
inc
popa
fidivrs
int
sub
loopne
push
cmp
adc
fucomi
inc
cmp
cmp
cmc
sbb
hlt
sbbl
int3
xor
mov
push
cmp
add
mov
sub
stos
sub
cltd
icebp
mov
cltd
mov
rorl
lds
mov
fwait
lods
inc
adc
xor
cltd
mov
lods
shlb
dec
scas
ror
fdivr
enter
scas
push
and
pop
je
movsl
out
mov
cmpsb
add
mov
jmp
jno
xor
inc
sub
push
mov
mov
fwait
mov
cmp
mov
dec
stos
sub
sar
jl
cmp
xchg
loope
cld
xor
adc
testb
inc
adc
mov
pop
pushf
mov
pop
out
scas
inc
dec
mov
fbld
sbb
ss
int
and
sub
pop
ljmp
lods
loop
ja
movsl
fdivs
mov
mov
jge
out
mov
mov
cmp
xchg
dec
or
fs
mov
inc
cmpl
sarl
je
setno
push
ja
sar
testb
cmc
adc
daa
les
jecxz
jnp
push
pop
cmpsl
and
addb
xchg
xlat
jl
popa
mov
ds
repnz
sbb
xlat
int
mov
andb
cmpsl
sub
mov
xchg
cmpsb
loop
mov
mov
sbb
bnd
mov
jle
mov
dec
test
cltd
or
cmp
clc
aas
hlt
aaa
in
cmp
lds
dec
cmp
cmp
fwait
sub
fcom
ret
mov
or
lods
js
imul
push
push
mov
insl
in
adc
rorb
das
nop
imul
popa
test
out
xchg
pop
in
cmpl
pop
sbb
ds
push
in
jmp
cmp
imul
jnp
in
pop
mov
jle
sub
jg
push
shll
mov
clc
cltd
fcoml
jmp
mov
push
imul
lahf
or
push
enter
and
xchg
dec
sbb
xchg
push
pushf
out
pop
call
insb
outsl
movsl
lahf
inc
popa
xchg
sbb
mov
fwait
inc
xchg
out
sbb
rcr
jne
push
pop
cmp
ja
sbb
out
popa
cli
jg
dec
mov
clc
xor
and
pop
lock
outsb
or
mov
mov
lahf
sti
data16
int
mov
or
fstl
mov
jmp
cmp
lret
insb
push
inc
rolb
dec
fsts
jecxz
add
pop
shl
adc
add
int3
test
jb
ljmp
adc
jp
inc
xor
loope
dec
stos
es
rclb
inc
inc
cmc
cmp
adc
mov
out
jo
push
fs
clc
ss
into
inc
pop
les
pop
test
fwait
aas
sbbl
xchg
add
jb
rol
iret
xor
sarl
icebp
shr
ficoml
or
pop
mov
mov
pop
int3
negb
sbb
adc
push
or
cmc
nop
loope
inc
mov
daa
loope
rcrl
adc
sahf
jmp
repz
sarb
mov
lods
stos
aam
mov
lods
inc
ret
ret
mov
sahf
mov
xor
mov
je
out
or
jnp
mov
lea
mov
dec
out
cwtl
into
add
iret
push
test
pop
and
out
out
nop
mov
fisubl
ror
jge
inc
sbb
loopne
lahf
sti
xor
iret
pop
aas
rcr
roll
push
and
ljmp
iret
jle
sahf
xlat
popa
cmp
movsl
cwtd
inc
mov
mov
xchg
stc
xlat
fidivrl
cld
xor
cli
sub
sub
mull
jle
pushf
mov
lods
push
mov
int3
push
test
pushf
mov
jae
sbbl
pop
jmp
in
xlat
ret
mov
and
jg
mov
lcall
pop
cmp
adc
cmp
aam
fnstcw
jle
sub
les
jnp
sbb
ret
jb
cmp
mov
and
imul
xor
xchg
inc
outsb
and
push
jmp
outsb
aaa
psubsb
mov
ret
sti
sub
lock
aam
out
xchg
sub
mov
xchg
mov
sub
ret
pusha
dec
pop
dec
gs
aas
int3
cli
dec
imul
adc
xchg
pop
xchg
xor
sub
push
test
and
sbb
iret
dec
sbb
pop
dec
and
xchg
pop
mov
jg
aad
sbb
dec
filds
inc
xchg
js
xor
lods
in
adc
pop
push
leave
daa
dec
push
push
push
jmp
enter
iret
inc
mov
sbb
sub
lret
pop
push
pop
adc
stos
sbb
mov
scas
xor
or
in
faddp
scas
fdivl
inc
mov
add
push
aaa
dec
sub
cmc
sbb
mov
mov
add
je
dec
mov
xor
rclb
mov
dec
rcrl
pop
adc
push
ljmp
mov
sbb
mov
mov
mov
mov
mov
loop
sti
cmpb
negb
in
jl
jmp
cmp
ja
stc
call
movsb
scas
test
fldenv
inc
push
ds
push
sub
ljmp
mov
sub
les
xchg
pop
cli
pop
or
scas
and
jb
sarl
push
mov
fscale
fnstcw
dec
sbb
fsubrs
psrld
idivb
out
jle
rorl
add
je
jo
std
sbbl
sar
xchg
xchg
push
inc
insb
push
pushf
add
mov
leave
out
and
int
mov
mov
int3
lea
pusha
jge
mov
into
lds
dec
push
test
out
bound
popf
pop
test
mov
fdivp
adc
push
push
insb
pop
cld
fwait
loopne
loope
ja
xchg
cmp
push
xchg
jbe
cmp
sub
pop
mov
push
push
mov
shll
add
rcrl
outsb
inc
xor
repnz
pop
mov
push
sbbb
repz
lock
pop
movsl
lret
push
testb
popf
and
sub
xlat
lea
and
add
add
bound
inc
or
jb
dec
cmp
bound
mov
cmp
in
repnz
sbb
sub
cmpsb
cmp
addr16
mov
jbe
sbb
sbb
sub
inc
inc
sub
iret
shl
or
ret
loopne
dec
cmp
cmp
xor
in
push
stos
xchg
xchg
adc
pop
fs
cmp
imul
push
mov
mov
or
or
fwait
push
mov
movb
mov
rclb
out
call
cmc
pop
icebp
sbb
xchg
into
inc
xor
inc
pop
sarb
test
into
ja
shr
xchg
mov
push
jbe
and
adc
push
and
add
andl
stc
and
ds
and
shlb
aaa
frstor
bound
daa
cmp
push
in
pop
push
and
ret
push
loope
jae
sub
pop
push
rcr
or
add
fcoml
popf
xchg
packsswb
xchg
daa
mov
pop
and
mov
mov
jne
aad
cli
movsl
es
cli
xor
lods
lret
and
cmp
add
mov
inc
and
loopne
jo
jb
fwait
jno
mov
or
inc
and
repz
xchg
out
aaa
pop
stos
jp
stos
mov
and
inc
std
cltd
jns
dec
fidivrs
sub
sub
jo
iret
inc
push
test
xchg
lea
inc
xor
sub
insb
sbb
fidivl
dec
idiv
mov
jo
fiadds
or
lods
addr16
imul
mov
push
sbb
fstpl
dec
push
cmp
jge
adc
ds
shl
outsb
pop
adc
and
loopne
mov
jg
cwtl
out
pop
jae,pt
fcoms
in
inc
jmp
scas
dec
mov
sbb
js
push
outsb
inc
xchg
and
inc
enter
incb
cmp
pop
in
leave
and
add
push
cmp
int
add
rclb
pusha
mov
fsts
xchg
push
ret
mov
popf
nop
jns
les
dec
push
loop
nop
cli
sub
inc
jecxz
pushf
xchg
pop
movsb
add
aas
xchg
lods
pop
or
testb
xchg
mov
ret
xor
dec
xchg
xor
in
xchg
xchg
sbb
call
scas
nop
stos
insl
ret
sbb
movsb
inc
bound
pusha
out
icebp
lds
mov
adc
push
xchg
movsb
faddl
orl
push
sti
in
jmp
xchg
out
inc
fadds
mov
sbb
ss
mov
test
inc
mov
mov
ret
dec
mov
addr16
les
or
sarl
adc
clc
in
in
dec
and
mov
push
mov
sbb
int3
push
push
xchg
sub
clc
dec
lods
jmp
lahf
scas
dec
js
mov
or
test
ret
mov
dec
mov
ret
into
popa
loopne
imull
jne
xchg
dec
ret
inc
test
mov
cs
or
and
xor
iret
dec
adc
inc
mov
sbb
dec
loope
jp
jae
vcvtss2sd
adc
adc
mov
jmp
mov
dec
cmp
mov
pop
les
mov
fdiv
aad
pop
pop
lahf
mov
cld
xchg
out
test
or
inc
addl
sub
cmc
and
in
daa
mov
dec
cmp
and
xchg
dec
fs
popl
fsubrl
cmp
fimull
outsl
out
stos
xchg
out
shl
inc
dec
pusha
sub
or
xchg
or
in
and
arpl
test
scas
sarl
jnp
mov
mov
or
sub
pushl
stc
ljmp
cmp
jle
dec
test
ret
rorb
cmp
inc
rorb
fdivrs
faddl
and
xchg
pop
imul
add
push
cmc
mov
cwtl
and
stos
dec
sub
mov
or
jns
in
mov
mov
adc
idiv
in
adc
or
inc
push
mov
push
std
add
cld
out
push
enter
imul
and
lds
js
pop
jae
xchg
movsl
sar
sbb
or
leave
adc
jne
push
sti
xchg
and
ret
sbb
sbb
pop
mov
iret
gs
lret
mov
lea
in
lds
lret
data16
gs
fwait
test
ds
xchg
test
add
pop
push
imul
jl
stos
and
imul
js
jae
jnp
scas
push
mov
mov
std
loop
xchg
scas
mov
outsb
dec
sbb
aaa
popf
das
pusha
sbb
push
aaa
jp
cmp
fwait
jge
mov
sbb
pop
and
sbb
push
jmp
cmp
test
and
inc
jl
pop
movsb
scas
or
or
stc
imull
pusha
push
pop
loope
jmp
nop
push
orb
mov
lds
fs
je
shr
or
mov
hlt
imull
dec
out
aam
incl
adc
xchg
inc
mov
sahf
push
arpl
mov
mov
sub
xchg
push
shrb
push
test
es
shll
pop
les
arpl
dec
adcb
push
or
jl
into
je
sub
or
dec
jnp
jp
dec
sti
int
and
mov
xchg
pop
xchg
movsl
mov
out
cmpsb
dec
jg
add
sub
pop
cmp
leave
mov
in
dec
jle
rcll
stos
ds
dec
mov
stos
out
sbb
xchg
aaa
ret
subl
repz
into
jmp
lea
sbb
mov
cs
test
xchg
test
sbb
movb
fiaddl
sub
es
fcmovb
jecxz
mov
lds
out
lods
sti
mov
inc
inc
fidivrs
mov
popa
mov
adc
push
pop
mov
fildll
or
push
out
pusha
jg
dec
mov
insl
xchg
jecxz
xor
fs
sbb
lds
lret
lcall
jae
and
out
xchg
and
push
ret
dec
cmc
push
lahf
into
test
sub
lock
int3
sbb
inc
es
mov
js
jo
pop
repnz
mov
mov
inc
cmc
insl
aam
cmp
ljmp
mov
dec
loope
mov
das
sarl
pop
inc
sub
xchg
cmpsb
mov
xchg
push
movsl
push
in
mov
push
jne
mov
pop
cmc
push
jns
xchg
jecxz
fistps
mov
fistps
push
lds
pop
push
lds
mov
idivb
ljmp
popf
ljmp
call
jo
adc
and
in
mov
xchg
frstor
repnz
cld
xor
mov
nop
insl
stos
xchg
ficompl
ja
jl
cmp
adc
lahf
bnd
add
add
inc
mov
xchg
stos
xor
imul
push
scas
loope
cwtl
subb
dec
inc
clc
inc
mov
out
in
mov
mov
cmovbe
je
sbb
rclb
mov
adc
add
dec
scas
lock
or
ja
ret
xchg
inc
out
or
repnz
push
insl
jle
clc
int
xchg
or
imul
jae
pop
es
cld
in
pop
out
fwait
test
and
inc
leave
rcll
sbb
insl
lds
jbe
add
jge
mov
mov
mov
imul
sbb
test
push
fsts
dec
leave
mov
movsl
outsb
rcrb
jae
push
or
ljmp
aaa
adc
dec
adc
jns
cmp
aam
jnp,pt
mov
and
push
and
dec
sub
dec
dec
and
adc
mov
je
fsts
mul
js
movsb
mov
pop
imul
adc
and
jp
aas
adc
aaa
xchg
mov
push
inc
popf
pop
xchg
xchg
jbe
fcompl
add
loope
xchg
adc
mov
push
lds
into
in
es
inc
inc
subb
mov
gs
xor
mov
psraw
dec
sbb
cmovae
sarw
pop
or
push
aad
outsb
in
ret
dec
sbb
mov
scas
and
shrl
lds
or
push
push
push
pop
das
jge
call
adcb
fnstenv
push
lret
push
andl
pop
mov
stc
and
out
or
in
mov
jge
pushf
sbb
mov
jnp
pop
lock
pop
xchg
incl
mov
test
popa
movsb
pop
jno
dec
lods
mov
xor
inc
and
int
inc
jecxz
iret
in
and
lock
xchg
push
cwtl
push
icebp
and
dec
rorb
loop
inc
fwait
jl
orl
push
mov
mov
or
sbb
mov
adc
enter
shrl
cwtl
or
fmul
hlt
test
adc
cmpsb
jno
jne
push
xor
bound
and
mov
jno
in
jmp
leave
call
scas
mov
xor
stos
mov
pusha
in
mov
xchg
data16
mov
into
mov
mov
adc
mov
in
mov
jnp
jecxz
mov
push
orb
xchg
sbb
mov
int3
pop
int
rorl
ljmp
jl
pop
push
les
xor
jo
cli
xchg
xchg
inc
fcompl
jle
xor
jge
cld
pop
jecxz
sub
popa
and
subl
loope
or
pushf
daa
inc
jb
pop
jb
inc
orb
adc
leave
bound
jge
jb
jo
cmp
xchg
push
add
lahf
or
xchg
mov
pop
dec
push
loope
push
dec
pop
or
jb
scas
mov
cltd
jp
icebp
iret
ljmp
push
xor
mov
and
inc
bswap
loopne
push
stc
and
push
lds
and
cltd
lret
push
mov
mov
insb
rorl
pop
add
fstpt
or
int3
lods
xchg
xadd
mov
movsl
jle
shll
sub
lds
dec
movsb
sbb
pop
push
dec
xchg
iret
pop
cli
cmc
bound
enter
test
adc
ds
insb
test
lret
fwait
mov
popa
out
data16
inc
aam
jno
lds
jnp
js
das
leave
mov
je
fisubrl
inc
jnp
pop
sbb
cmp
aaa
adc
jg
gs
inc
or
fcomps
xor
adc
repnz
test
lcall
add
cs
push
jns
and
xchg
add
pop
es
out
jecxz
sub
arpl
adc
clc
daa
sbb
lock
mov
mov
mov
pop
clc
cs
xchg
divb
rolb
out
inc
sbb
xchg
repnz
pop
mov
add
sbbb
loopne
cmc
lcall
xchg
mov
mov
cmpsl
sub
out
or
hlt
sub
fnstenv
xchg
loope
dec
in
inc
xor
add
insb
push
cmpsb
orl
jle
in
push
and
int3
or
sbb
movb
pop
lcall
and
test
test
xchg
cld
cmp
fwait
loope
dec
sub
scas
cli
mov
sub
ficompl
fistpl
mov
push
xor
jb
arpl
repz
pusha
xor
cltd
mov
cli
sarb
sbb
and
push
movsb
push
add
das
cmc
enter
push
mov
je
mov
sahf
enter
imul
lods
sbb
and
mov
imul
call
popf
or
fs
aas
outsl
add
out
sbb
push
or
ljmp
out
outsb
imul
int3
pop
shr
mov
aad
int3
subl
pop
sub
lret
popa
inc
mov
icebp
adc
xor
outsl
shll
pop
cmpsl
jne
mov
push
mov
cmp
and
pop
stos
iret
push
js
scas
and
or
xor
jmp
cmp
rorb
gs
lods
stos
lret
movsl
adc
xchg
in
mov
out
cmp
or
add
push
cs
pop
adcl
inc
xor
pop
inc
test
jno
adc
lret
push
lods
xchg
movsb
hlt
jge
jg
lods
xor
test
push
outsb
dec
add
aam
or
pop
and
sbb
pop
jmp
pop
arpl
daa
cmp
xchg
pop
mov
mov
jl
repz
fildl
pop
cli
jle
in
enter
ja
lret
dec
pop
or
xchg
dec
cmp
jo
movsl
push
inc
and
test
pushf
scas
stc
pop
and
and
mov
arpl
mov
fidivrs
mov
into
dec
fsubrl
jl
adc
es
cmp
mov
jo
and
and
std
xor
movsb
nop
loop
movsl
adc
inc
pop
adc
insb
out
arpl
pop
sbb
pop
sub
gs
fmul
test
and
dec
inc
mov
mov
into
or
stos
leave
repz
mov
shrb
push
je
sub
xlat
mov
or
add
outsb
bound
ds
cld
inc
lock
cmovae
mov
test
decl
dec
jb
das
pop
mov
xor
test
inc
lea
outsb
lds
mov
aas
mov
icebp
adc
push
jge
mov
aaa
mov
sub
dec
out
add
sahf
ljmp
ds
sub
jl
xor
inc
push
sbb
call
jne
pop
mov
jmp
bound
and
cmp
lods
jns
mov
mov
cmp
adc
mov
imul
andl
insl
in
nop
popf
in
add
movsl
fs
hlt
cltd
and
and
add
inc
mov
inc
xor
adc
jne
jle
cmc
or
jecxz
sub
adc
mov
pusha
fstps
cmp
mov
ss
xchg
or
push
lret
mov
push
push
sbb
adc
leave
notl
xchg
inc
lahf
sbb
adc
jge
neg
dec
into
cmp
adc
cs
mov
test
pop
lods
lret
inc
mov
cmpb
dec
fstl
bound
div
dec
loop
es
repnz
pop
push
in
fidivrs
std
push
jg
test
in
addr16
inc
je
repnz
push
push
xchg
rcrb
mov
adc
adc
push
ljmp
sbb
mov
in
cmp
jae
jg
in
in
xchg
xchg
clc
jl
fnstcw
mov
cmpl
mov
testl
scas
sbb
xchg
aad
test
jp
jmp
ret
scas
add
jp
mov
test
out
inc
divb
mov
push
test
fmull
pop
imul
cltd
jge
mov
push
inc
testb
cli
cmp
push
es
mov
add
dec
pop
pop
sbbb
push
movl
jbe
xor
xchg
jp
and
std
test
sub
push
mov
pop
inc
adc
mov
cwtl
cmp
pop
outsb
push
mov
ror
ja
pop
mov
incb
leave
ds
je
and
xor
jne
stos
stos
les
xor
sub
or
das
jle
add
out
jp
push
adc
and
cltd
pushl
imul
out
hlt
stos
inc
clc
or
enter
in
dec
cmp
xchg
std
and
out
andl
sbb
lock
adc
fcomps
mov
sahf
xor
in
repnz
fs
jnp
sub
in
cmpsb
cmp
arpl
jno
in
xchg
mov
add
pop
or
fstpt
sub
test
sub
scas
icebp
xchg
sub
out
mov
jo
push
or
fnstcw
inc
pop
pop
push
repnz
pop
pushl
mov
clc
cli
xchg
bound
mov
jno
es
pop
sahf
cmpsl
jmp
cmp
pop
jno
jg
and
pushf
xchg
or
cmpl
fnstsw
das
pop
fisubrs
inc
xchg
rcrb
js
gs
pop
fs
adc
or
rcrl
mov
ret
push
lret
dec
and
stc
outsl
sbb
movsb
push
or
outsl
jno
aas
pop
add
sub
ljmp
pusha
jp
and
pop
popa
xor
xchg
scas
aas
adc
adc
ret
mov
dec
movsl
shll
inc
jns
ret
imul
int3
scas
push
cmpsb
pop
test
dec
push
push
cmp
aaa
mov
xchg
int3
inc
and
nop
fsubs
xchg
mov
pushf
mov
push
aad
adc
out
aam
out
push
cs
aam
fs
in
cli
jge
or
push
movb
push
add
jl
push
jae
mov
stos
xchg
shlb
ljmp
fstps
frstor
daa
push
pop
pop
push
sub
cmp
pop
not
stc
sub
leave
cmp
sahf
fsubrs
xchg
mov
out
jne
call
mov
aas
test
cli
iret
jg
mov
add
xchg
mov
fimuls
fistpll
inc
mov
mov
popf
inc
idivl
and
nop
fnstcw
cmpsb
shl
test
idivl
aaa
ljmp
das
add
lea
mov
orps
ret
add
or
cmp
pop
sub
int3
pop
and
sbb
mov
leave
negb
sti
stos
fdiv
decl
adc
adc
xchg
ret
loope
xor
dec
clc
xor
fnsave
ret
add
and
es
jl
add
mov
cmovnp
sarl
je
or
dec
lods
ret
mov
xchg
rorb
mov
cmp
cmp
mov
xchg
test
sbb
pop
and
in
push
fistpl
sbb
cmp
adc
fstpt
ficoms
xchg
notl
ljmpw
fwait
add
xor
cmpsb
mov
or
popf
sahf
inc
mov
sahf
fsubl
sbb
outsb
rolb
fiadds
xor
cmp
push
inc
push
iret
mov
stos
dec
dec
mov
sbb
xchg
fs
xor
pop
lods
add
push
cs
cli
push
cli
fisttpl
mov
push
mov
lahf
ror
enter
and
jbe
push
movl
jp
int
and
xlat
mov
mov
testb
push
or
dec
js
and
sbb
imul
js
add
nop
push
mov
fwait
scas
out
std
inc
or
adc
or
popa
imul
push
out
dec
sbb
cltd
cmp
dec
lcall
shrl
cmpsb
jecxz
loope
cli
mov
xor
mov
sarl
or
add
insb
mov
jl
fsts
les
cmpl
popa
dec
insb
outsb
aam
inc
or
sarl
sbb
mov
lock
lcall
and
in
js
jno
cwtl
lods
and
dec
loop
mov
repz
or
sbb
mov
int
outsl
dec
or
dec
dec
and
insl
lahf
repz
mov
sub
fnsave
pop
nop
pop
fsubrp
ja
pushl
xchg
cmc
inc
fadd
inc
fdivrl
push
add
xchg
push
and
mov
or
jns
push
lods
enter
jge
jnp
dec
inc
jg
mov
pop
push
fistl
int
fistpl
pop
lcall
pop
mov
pusha
ror
in
sbb
push
rcll
out
into
cmp
xchg
xor
or
out
jae
xchg
sub
hlt
cltd
mov
push
es
sub
je
fisttps
outsl
pop
aas
adc
inc
ljmp
cmp
shl
pop
int3
add
pushf
xor
cs
ror
pop
and
and
or
mov
dec
pop
fsubrs
ror
push
jne
or
xchg
and
add
mov
hlt
add
adc
arpl
stc
fildl
mov
sbb
aaa
adc
xor
fisttpl
jge
scas
inc
shl
stc
or
sbb
sub
sub
movsb
sbb
mov
pop
popf
cmp
pop
or
ret
scas
scas
or
push
scas
mov
mov
jo
cld
add
mov
test
xchg
pop
movb
lea
fisubl
jmp
sub
or
iret
cmp
push
stos
rorl
dec
pinsrw
lea
jnp
int3
and
stos
cmpsl
inc
scas
outsl
dec
adc
cli
fidivs
push
in
ja
adcb
fdivr
ss
add
push
imul
out
or
out
frstor
popf
int3
sub
divl
inc
mov
mov
xor
sbb
leave
inc
pop
sub
xchg
push
xor
push
jmp
insb
xchg
add
ret
insb
pop
cmp
call
enter
cltd
fs
mov
movsb
cmp
add
in
mov
out
sub
or
movsl
dec
dec
loope
scas
adcb
pop
movsl
push
push
push
fildl
push
ljmp
shr
aas
iret
faddl
aad
xor
rorl
idivl
jp
jne
adc
lods
and
adc
xor
fs
repnz
fcompl
mov
push
dec
push
scas
std
ret
pop
mov
dec
inc
mov
xchg
lods
pop
mov
ds
cwtl
in
inc
sub
ret
addr16
lock
out
gs
push
mov
into
movsb
fidivs
pop
xchg
ja
das
and
bound
in
rcrl
sbb
mov
or
shrb
call
and
mov
adc
or
ds
cmp
out
jns
jmp
xchg
add
jge
push
jmp
lods
inc
scas
sbb
hlt
frstor
dec
incl
fwait
into
dec
mov
shll
sbb
mov
repnz
cmpsb
popf
jnp
adc
or
daa
mov
xor
shll
fs
mov
sub
mov
repz
dec
mov
sub
dec
sbb
subb
sub
stos
xchg
adc
mov
movsl
pop
pop
mov
int3
js
jbe
pop
xor
cmp
lret
inc
aas
in
jl
repnz
aad
adc
cld
pop
pop
ffreep
xchg
inc
mov
sub
divl
fildl
repnz
fdivrl
mov
pop
jle
add
push
ljmp
add
mov
xor
pop
xchg
les
ficoml
sub
out
add
xchg
into
or
mov
daa
cmp
testl
loop
adc
aaa
jecxz
sub
leave
jbe
test
and
xor
outsb
mov
jmp
js
nop
rorl
or
in
ja
and
push
lret
pop
sub
pop
and
test
ds
outsb
je
in
xor
add
pushf
push
xor
mov
outsl
ret
jg
imul
xchg
mov
push
push
pop
and
adc
mov
test
xor
push
xchg
mov
sbb
jle
arpl
pop
inc
loopne
shrl
test
pop
ljmp
fisttps
or
push
add
mov
cmpsl
popf
push
push
mov
subb
adc
sbb
cmp
or
and
fwait
cltd
hlt
in
in
pop
push
and
mov
xchg
lcall
ret
inc
out
jo
jno
aaa
mov
sub
or
hlt
aam
cmp
and
scas
nop
decb
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
sbb
int3
mov
pop
jl
push
pop
xchg
popf
mov
pop
lahf
xor
cmp
lcall
xchg
shlb
popa
repnz
mov
xchg
pop
pushf
adc
mov
aaa
push
addr16
hlt
mov
sub
push
jnp
pop
pushf
andb
hlt
mov
ret
iret
lcall
fwait
mov
loop
pop
jg
inc
insb
fildl
cmpsl
aas
call
cmp
xchg
arpl
cwtl
aam
mov
push
scas
ret
push
subl
out
daa
and
sbb
clc
das
mov
pop
aad
stc
and
int3
cmp
mov
mov
mov
push
jmp
dec
add
cmc
aam
jno
push
pop
pop
in
mov
jns
pop
mov
mov
cmc
repz
cmpsl
add
dec
movsb
scas
pop
loopne
rorl
mov
repz
or
push
dec
bound
cmpsl
cmp
dec
xchg
xor
mov
dec
scas
mov
decl
arpl
push
pusha
cmpsl
enter
push
adc
aaa
test
mov
mov
das
sbb
adc
or
lods
out
int
sub
xchg
lcall
add
xlat
push
sarl
lds
jo
adc
xor
ds
bnd
pushf
ret
outsb
in
or
cli
scas
test
lds
das
add
movsl
inc
pop
xchg
pop
pop
sarl
jno
dec
adc
cmp
push
dec
adcb
decb
jmp
cli
pusha
mov
and
rclb
push
cwtl
in
ss
std
out
cs
arpl
mov
xchg
adc
sbb
or
sbb
das
pop
pop
or
sbb
loope
in
enter
movsl
mov
add
outsb
scas
inc
in
adc
dec
sbb
adc
notb
lret
dec
test
mov
cmp
sbb
aam
mov
fistps
fsub
lahf
lock
xchg
dec
call
sub
and
push
rcl
movb
adc
mov
cmpsl
clc
lret
ss
jbe
sbbb
pop
or
pop
inc
dec
out
jnp
xchg
lret
inc
xchg
inc
je
lcall
stos
out
add
ss
xchg
mov
stos
xchg
test
jg
inc
lods
out
sub
stc
out
incb
or
rclb
cwtl
in
stos
cltd
out
frstor
xlat
dec
cmpsl
fimuls
bnd
addr16
in
addr16
rolb
imull
push
inc
push
cld
mov
call
push
scas
push
insb
test
movb
jmp
xor
xchg
mov
nop
orb
call
stos
lods
stos
rorl
ret
xchg
movsl
mov
dec
fmul
jns
push
sbb
xor
pop
xchg
in
aam
fisttps
outsl
jl
test
addl
inc
inc
xchg
dec
rol
push
aad
aaa
sarb
sbb
lods
gs
lret
jnp
pushl
sarb
mov
mov
xlat
out
xchg
pusha
jecxz
sahf
cwtl
insl
fwait
push
test
mov
jno
or
pop
cltd
add
mov
lods
push
aad
xor
xchg
and
push
inc
cmp
mov
mov
mov
sub
jle
mov
popa
sub
mov
das
or
arpl
rcrb
pop
pop
aaa
dec
inc
outsb
sbb
loopne
push
pop
out
mov
or
adc
aas
mov
stos
jecxz
lret
test
pop
xchg
xchg
sahf
xor
push
mov
mov
mov
pop
aaa
push
mov
loop
aas
iret
push
or
out
push
and
test
sub
push
pop
lea
lret
stos
gs
push
inc
push
mov
inc
pop
clc
and
pop
push
sahf
fsubs
pop
mov
mov
lcall
and
or
jns
adc
sahf
movsl
sbb
xchg
divb
dec
fbstp
into
lret
cmp
push
inc
mov
scas
push
imul
sub
das
pop
fwait
add
sbb
adc
mov
xchg
adc
push
outsl
movsl
testb
push
or
cmc
jl
jb
mov
jns
loop
enter
inc
add
sub
push
mov
call
int3
inc
jb
inc
jge
inc
pop
data16
out
leave
fwait
lock
xchg
lret
int
icebp
push
jns
mov
mov
dec
and
rolb
push
push
jb
push
cmp
fld
das
lock
cmp
jno
pop
repz
pop
decl
mov
in
inc
fisubs
xchg
dec
data16
stos
jp
in
outsb
push
mov
inc
or
cld
rorl
inc
popa
inc
es
sahf
sbbl
push
pop
scas
cltd
lahf
in
mov
das
mov
adc
stos
in
cmp
shll
sbb
aad
shl
inc
call
inc
sti
push
push
jns
stos
fisubrs
dec
cli
jg
pop
xchg
jbe
adc
pop
push
lods
push
add
mov
fsubl
push
iret
xor
mov
pusha
sub
iret
stc
je
dec
jp
mov
and
movzwl
stc
lret
mov
pop
mov
insb
jb
sti
cmp
add
divl
enter
sbb
push
lret
jne
stos
jae
add
adc
mov
push
out
push
scas
in
int
or
mov
cmp
test
pop
dec
cld
es
push
adc
push
mov
xor
push
aaa
scas
test
cli
mov
pop
inc
xor
adc
pushf
xor
es
hlt
inc
adc
mov
pop
add
or
mov
jp
xor
pop
insb
add
mov
jne
push
mov
ljmp
pop
fsub
test
mov
stc
movl
test
mov
fidivs
or
popa
add
in
push
mov
fildll
das
and
adc
sub
jmp
in
clc
push
ret
idiv
adc
xor
xchg
jecxz
jp
cmpl
lcall
mov
fmul
jl
or
xchg
mov
iret
push
pop
pusha
cmpsb
gs
out
lods
mov
sbb
sub
sbb
add
scas
sbb
test
fstpt
cmp
sbb
add
inc
push
addb
add
xor
cmp
mov
push
pmaxsw
mov
inc
jge
and
mov
out
lret
into
adc
xchg
pusha
and
stc
jbe
jecxz
shlb
fbld
rorl
sbb
aaa
inc
inc
aaa
pop
add
dec
in
or
fwait
xchg
dec
xchg
test
arpl
mov
xchg
add
sbb
push
pop
lcall
ret
ljmp
imul
mov
ja
push
push
mov
push
fistl
mov
xchg
sub
pushf
mov
in
hlt
xchg
loopne
jecxz
or
inc
sub
xchg
or
mov
jbe
int3
add
iret
jne
xor
cmp
movsl
gs
sbb
xchg
and
jnp
mov
push
dec
stc
pop
into
dec
sbb
jg,pn
sub
repnz
cmp
je
and
mov
lcall
hlt
andb
sbb
cmpb
mov
jle
mov
mov
add
outsb
jecxz
lret
rcl
ljmp
lock
stos
ret
out
pop
and
and
sbb
mov
sbb
inc
cs
cli
in
cmp
mov
cltd
push
cld
sub
pop
loope
fwait
mov
fsubrl
push
addr16
inc
sub
jns
mov
insl
mov
lock
xor
xor
adc
mov
cmpsl
push
inc
push
repnz
push
jg
inc
xor
xchg
mov
loop
fyl2x
dec
out
cmpsb
and
jge
cmp
cli
imul
sbb
leave
orl
cltd
adc
aad
pop
in
lahf
negb
cmp
push
repz
adc
sbb
int
jbe
cmpsl
inc
xchg
enter
pop
jmp
xchg
cmp
ret
jl
ss
mov
dec
in
add
cli
xchg
scas
mov
ret
lret
das
rol
andb
pop
dec
lret
mov
scas
mov
jp
xor
and
bound
pop
call
jbe
jle
sahf
call
sbb
inc
dec
and
dec
or
dec
xor
daa
pop
aas
mov
cmp
stos
icebp
loopne
sti
jg
and
mov
cmp
adc
cmp
jb
iret
adc
pushf
fnstenv
xlat
push
add
icebp
int
xor
into
inc
or
cmp
cmp
jge
cmpl
cli
mov
je
lret
mov
add
in
mov
int
lret
js
shll
push
std
pop
or
xor
adc
sbb
aaa
enter
jae
jo,pn
std
out
mov
sbb
ret
ljmp
xor
out
shrl
rorb
and
stos
cmpl
leave
jle
les
add
movsb
mov
ss
aam
sub
je
mov
xlat
and
loopne
mov
outsl
loope
xor
mov
sub
gs
xchg
mov
jb
lods
mov
dec
mov
lds
mov
sbb
leave
jae
push
jo
mov
sahf
andb
push
xor
and
js
pop
adc
push
mov
insb
push
add
mov
fldcw
or
push
flds
or
movb
mov
movq
jne
in
in
xor
add
add
stos
aaa
xchg
cmpsl
inc
mov
jmp
and
xor
sbb
mov
add
lods
in
sub
inc
pop
testb
or
mov
mov
outsb
inc
enter
push
xor
iret
and
shll
ret
push
adc
mov
mov
xlat
jo
jne
adc
dec
adc
fldt
xor
sub
xchg
push
lock
or
rcrb
cmp
push
push
mov
mov
and
stc
add
pop
adc
fsubrp
push
int
popf
add
pop
scas
mov
pop
icebp
sarb
cmp
lock
jne
mov
push
mov
and
add
mov
js
inc
daa
mov
mov
fdivl
dec
fidivrs
jb
repnz
aam
xchg
cmpsb
fldenv
sub
sti
sbb
pusha
and
jge
pop
repz
jnp
xor
push
mov
sub
in
jp
fisttpl
adc
sub
xchg
jno
stc
lea
xchg
into
jge
cwtl
iret
popl
jb
jl
and
xchg
and
sbb
pop
nop
stos
push
or
fisubrl
scas
and
repnz
pop
jnp
mov
mov
ljmp
and
testl
bound
mov
vprotq
sbb
push
sti
out
inc
loopne
dec
ds
decb
mov
push
sbb
or
or
jae
and
mov
inc
inc
pushf
lea
test
out
xchg
inc
clc
dec
scas
xor
pop
xchg
sub
test
jg
and
sbb
push
cltd
pusha
adc
xor
jne
pop
mov
dec
stos
test
or
fsubrl
xor
xchg
in
arpl
and
xor
sub
add
inc
gs
scas
add
je
add
cltd
mov
fdivs
xchg
incl
dec
dec
in
adc
fisubrl
mov
jge
hlt
cmc
jg
inc
aas
pop
sub
adc
adc
fists
mov
adc
nop
lcall
pop
repnz
sbb
test
mov
pop
out
adc
push
and
adc
push
inc
pop
cmp
loopne
mov
pop
les
cmp
xchg
xchg
and
mov
sub
jbe
cmp
mov
les
sarb
leave
ret
sub
out
inc
ficompl
adcb
data16
repnz
sbb
mov
lcall
and
lret
fbld
mov
mov
mov
cmp
or
arpl
pop
jmp
add
inc
das
xor
test
mov
imul
sub
pop
aam
in
adc
ja
adc
int3
loopne
and
sub
es
lods
dec
xchg
cli
lcall
es
int
mov
hlt
ds
sbb
mov
pusha
push
iret
pop
adc
ljmp
pop
je
shr
fiaddl
xor
jle
lret
loop
xchg
and
repz
incl
and
int3
mov
fs
popf
push
push
ja
dec
dec
leave
mov
inc
rcrb
or
arpl
add
dec
outsl
xor
test
fs
movsl
dec
mov
pop
in
and
scas
and
jp
sub
mov
mov
shl
inc
xor
push
jo
test
repz
push
cs
movsb
aad
xchg
jg
and
adc
cli
hlt
or
push
dec
cmp
imul
jg
mov
out
test
push
jl
fucomip
push
xlat
push
pop
mov
sub
dec
push
popf
push
call
loop
push
xchg
daa
mov
push
mov
mov
js
jne
sahf
loop
add
mov
in
outsl
jmp
movsl
movsl
cmc
pop
mov
jmp
sub
jbe
sbbl
nop
pop
fcomip
xchg
jmp
lock
add
dec
jecxz
fisttps
xchg
push
xchg
push
arpl
jl
fwait
movsb
inc
adc
and
ds
or
mov
lods
xlat
pop
add
lahf
mov
fdivp
adc
ds
loop
ficoml
xor
ret
leave
adc
cmc
push
push
dec
or
lahf
testl
icebp
mov
sub
or
xchg
mov
cmp
push
sbb
jo
cmp
xorps
and
sbb
xchg
fwait
sti
mov
or
xchg
adc
mov
inc
mov
sahf
pop
arpl
jne
sbb
inc
dec
add
push
lods
lock
test
cmp
mov
stc
push
cmp
aaa
pop
fimuls
loopne
pop
out
fstps
sub
test
popa
test
rep
ret
mov
push
inc
rolb
mov
cwtl
and
repnz
pop
mov
adc
sti
jl
sub
push
mov
dec
cmp
fistl
into
pop
cmc
shl
and
mov
sub
jnp
fs
aad
mov
mov
jmp
stos
mov
cltd
mov
iret
or
jo
js
aas
sti
sbb
cmp
pop
test
test
cmp
movsb
xchg
dec
add
add
clc
mov
cli
mov
sub
mov
mov
mov
and
loop
ret
xor
jmp
shlb
loope
mov
fs
sub
and
push
inc
xchg
iret
lock
lret
ret
ret
rcll
sub
pop
ret
imul
adc
fwait
out
ss
and
jge
daa
gs
mov
mov
pop
in
jb
in
jae
pop
int
insb
push
leave
mov
mov
fsubr
xchg
xorb
shll
or
pusha
mov
imul
dec
fabs
mov
ret
lods
lahf
or
sub
cltd
push
mov
nop
mov
shl
insl
lret
or
sbb
mov
cmp
mov
fcomps
push
lods
and
int3
xor
pop
mov
repz
and
inc
dec
mov
pop
push
mov
loopne
jne
lret
adc
adc
and
fs
jnp
cmp
mov
adc
test
idivb
dec
jle
pop
ds
or
pop
mov
inc
sbb
sub
stc
clc
je
mov
adc
popf
inc
sub
mov
aad
repnz
dec
enter
ljmp
int
sbb
push
loope
hlt
fcoms
leave
loope
rolb
dec
mov
mov
pop
out
sub
ds
pop
rcll
popf
push
jge
push
xchg
lret
loop
sbb
push
psrld
add
or
inc
mov
sbbl
das
mov
sar
jle
repnz
sbb
out
cmpsl
pop
repnz
andl
push
inc
sbb
sbb
out
fnstcw
and
jb
test
inc
sub
sti
decb
mov
inc
sub
clc
inc
lods
or
int
push
add
insl
cmp
mov
or
lods
bound
sti
or
sahf
aaa
in
xlat
push
sbb
movb
pop
sbb
push
mov
retw
jg
inc
ror
cmp
scas
or
jle
pop
mov
lock
push
xchg
das
pop
sbb
jmp
inc
xlat
add
fwait
scas
add
test
scas
arpl
mov
in
dec
dec
insb
or
cmc
ljmp
mov
fs
xor
fsubp
fstpt
mov
mov
jecxz
push
lret
xor
fcomps
cmpsb
fcmovb
push
clc
xlat
lods
xchg
dec
orb
lock
stos
std
xorb
cmp
int
jo
sbbl
sbbl
or
fdivl
test
out
ss
jmp
insl
in
lods
push
jb
mov
xor
cmc
or
aaa
call
data16
lcall
xor
jge
cld
pop
lea
fsubrs
hlt
fwait
jae
sbb
and
jmp
dec
and
idiv
jp
mov
fsubrs
mov
mov
rcll
popa
lods
sub
aam
shl
sti
lock
dec
mov
pusha
xor
jp
sbb
jecxz
lahf
jae
test
xor
inc
test
test
nop
enter
or
aam
mov
jo
pop
jo
cltd
xchg
push
mov
icebp
ret
pusha
and
push
sbb
or
imul
popf
mov
mov
outsb
imul
adc
sbb
fldcw
mov
ret
popf
je
movsl
popa
clc
pop
ja
loop
pop
adc
imul
int
dec
mov
cs
jnp
outsl
jge
repz
or
cs
pop
dec
mov
xor
sbb
in
icebp
mov
ret
and
push
mov
dec
dec
lds
mov
pop
pop
pop
mov
cmpl
push
sub
mov
cmpsl
imul
popf
std
pop
movsl
and
pop
lods
and
call
or
inc
xor
in
je
push
push
adc
arpl
ret
sbb
ret
cmpsl
fcoml
xchg
and
psraw
add
or
fs
iret
movsl
cmp
jno
sub
pushf
xor
dec
mov
outsl
adc
mov
mov
mov
push
xor
leave
jecxz
mov
aaa
pop
shrl
aas
xor
repnz
mov
mov
xchg
cmpsb
les
inc
push
addr16
test
add
cmc
shll
mov
pop
popa
lcall
push
cmp
mov
and
ret
mov
push
in
lock
push
sbb
dec
shlb
inc
inc
push
xchg
ds
dec
cs
sub
add
test
in
cmp
mov
pop
fsts
rorl
std
ljmp
sub
pop
ficoms
out
jns
lods
sar
outsl
es
add
xor
jnp
loope
inc
scas
sub
sahf
pop
xor
lods
mov
xor
inc
ss
pop
pop
out
pop
outsb
mov
aad
add
jae
push
jnp
ss
cmp
jmp
add
jmp
cmp
inc
xchg
cld
dec
andb
imul
lcall
xchg
cmpb
faddp
jae
lret
aaa
sub
dec
std
into
push
aaa
fucomip
sbb
pop
out
cmp
fstpt
push
xor
outsl
xor
das
das
nop
outsb
cmp
repz
jns
xchg
dec
fildll
push
ss
out
loop
das
iret
jae
mov
mov
or
inc
lret
push
outsb
xor
inc
stos
enter
or
inc
cs
xchg
popf
cs
shrb
jns
jmp
clc
dec
ret
dec
xchg
add
push
repz
mov
mov
jbe
push
xor
pop
andl
ljmp
loope
inc
adcl
pop
mov
int
mov
shlb
out
add
lods
in
movsl
pop
push
dec
jecxz
loope
pop
mov
lds
dec
sbb
test
pop
in
pop
scas
cmc
lret
prefetch
add
xlat
add
fsubl
inc
mov
shlb
imul
jmp
push
pop
insb
lea
xor
add
pop
arpl
mov
cmpsl
dec
cmp
pop
push
shll
ds
sbb
pop
xor
cmp
in
cmp
lret
in
lock
mov
jmp
xchg
jge
cmp
fsubrs
xchg
jmp
adc
js
mov
lods
xor
jne
mov
lods
mov
jg
pop
aam
sbbb
push
adc
enter
shrb
arpl
fisttps
pop
mov
hlt
aad
mov
insb
cmp
xchg
adc
cmp
xchg
lods
std
xlat
jl
shlb
xchg
dec
inc
push
sub
push
test
cmovne
pop
sbb
xchg
or
xor
push
add
outsl
mov
fs
jnp
jp
sub
xchg
insb
adc
mov
xchg
cmp
imul
inc
pop
xorl
dec
lret
mov
push
mov
sub
loop
push
popa
imul
cs
xchg
lret
cmp
cmp
cmpsl
cmp
enter
jecxz
pop
sti
je
je
pusha
cmp
push
cmpsb
sbb
push
cmpb
adc
jo
sar
loopne
test
lods
add
mov
xchg
pop
rorb
in
dec
mov
push
sub
je
mov
inc
add
push
push
fdivrp
push
mov
dec
mov
inc
inc
add
sti
push
insb
lds
outsl
mov
xor
out
jno
mov
push
loopne
clc
sub
cli
aam
or
out
cmpsb
icebp
and
xchg
jbe
shl
sub
dec
pop
xchg
test
or
and
int
adc
lret
jle
inc
shl
mov
mov
xchg
xor
sbb
mov
jo
clc
inc
int3
int3
sti
mov
outsl
leave
inc
push
ss
imulb
xchg
cmpsb
push
pop
pop
ss
jmp
aad
scas
jle
xchg
adc
mov
aad
mov
pop
int3
or
mov
jge
cmp
jbe
inc
mov
xchg
push
jmp
call
add
std
scas
xchg
loop
sub
jnp
xor
push
inc
adc
jmp
pop
scas
mov
adc
outsb
rcll
mov
mov
or
fdivl
outsb
sbb
xorb
ficompl
pop
jae
xor
cwtl
out
push
push
push
add
arpl
mov
test
cmp
push
lcall
ljmp
mov
xchg
movsl
mov
enter
fwait
add
push
in
sub
inc
ret
cltd
mov
or
or
adcl
pop
push
shlb
and
xchg
cmp
adc
mov
ficompl
loop
adc
out
in
cmp
hlt
fbld
xor
push
adc
push
mov
sbb
adc
jne
or
lea
cmp
adc
fwait
xor
mov
push
lods
outsl
xchg
pop
lds
jns
mov
push
ret
sub
test
lea
lret
lahf
jns
push
cmc
sbb
sub
rcll
mov
and
pop
inc
iret
notl
adc
andl
add
mov
add
sub
aam
mov
mov
pop
or
xor
push
sbb
jno
jecxz
dec
pop
or
enter
adc
xlat
dec
leave
out
nop
loopne
pop
incb
cld
push
sbb
out
lea
push
add
or
mov
popa
pop
sbbl
push
push
aas
xor
add
clc
or
data16
cli
cmpsb
js
adc
cmp
aaa
xchg
inc
cltd
dec
cmp
cltd
push
sub
aam
mov
inc
stos
scas
jp
out
mov
imul
fpatan
adc
adc
xchg
mov
cli
pop
adc
or
call
sub
jg
arpl
pop
xor
sarb
imul
add
notl
push
test
mov
leave
push
push
xchg
ds
lea
rcr
jno
pop
out
lahf
mov
in
gs
cmpsb
or
sahf
lds
ljmp
mov
clc
push
push
sbb
adc
call
testl
inc
mov
fnstenv
mov
fstl
and
cmpsb
mov
dec
xchg
sub
xor
adc
xchg
sub
imul
aas
pop
mov
icebp
mov
adc
xor
testb
cwtl
loope
push
lock
scas
call
and
jbe
or
add
in
jne
es
and
lret
inc
das
jp
add
sbb
xor
push
or
cmpsl
mov
fwait
idivb
adc
dec
daa
add
sbb
push
popf
xchg
push
int
in
push
notl
enter
gs
test
testl
adc
inc
mov
daa
xchg
push
cmp
pusha
dec
mov
xchg
stos
xchg
in
hlt
inc
imul
mov
adc
or
sbb
pushf
jb
adc
mov
jo
sbbb
loopne
repz
aam
imul
sub
push
data16
push
incl
loop
jmp
fxch
fs
mov
mov
sbb
inc
movsl
add
stos
and
xchg
aas
adc
je
movl
and
jne
icebp
in
push
jae
rol
mov
push
xchg
movsb
rep
cmpsl
mov
enter
push
js
std
push
pushf
or
lock
test
popf
int3
mov
leave
enter
fldcw
pusha
fldl
imul
push
inc
cmpsb
add
mov
cmc
cmp
xchg
or
jecxz
shll
jmp
cmc
push
or
xchg
mov
imul
pushl
aas
cmc
pop
ja
incb
pop
rcrb
or
iret
pop
mov
add
addr16
jg
call
lds
xor
mov
mov
es
adc
ds
xchg
adc
ljmp
int
push
out
idiv
ss
add
cmp
mov
adcl
sub
mov
dec
daa
mov
aas
adc
movsb
clc
stos
cli
xor
inc
sti
mov
nop
scas
mov
pushf
arpl
jge
fistpll
jae
out
mov
add
fmulp
mov
dec
inc
xchg
and
fcmovnb
adc
jge
aam
push
or
jns
idiv
in
adc
push
push
pop
inc
std
icebp
push
int
dec
mov
xchg
push
imulb
push
int3
xchg
add
pop
sbb
iret
imul
inc
xor
push
mov
pop
dec
subl
dec
lock
push
into
mov
ss
dec
scas
repnz
cmpsl
jl
pop
ja
sbb
ss
mov
imulb
xlat
stc
and
nop
add
xlat
je
dec
inc
dec
xor
adcb
jbe
push
orb
gs
dec
hlt
mov
test
fisttpl
mov
jne
adc
push
lods
mov
dec
jae
jl
mov
sbb
xor
xor
stos
pop
push
mov
int3
in
cwtl
and
cmp
icebp
aam
push
pop
push
jmp
movzwl
incl
testb
pop
xchg
imul
sub
mov
pop
iret
push
daa
sub
lcall
in
jno
mov
insl
xor
or
fucomip
mov
sahf
and
sub
sbb
mov
fildl
insb
popf
adcb
jp
in
jb
lea
shrb
sub
shlb
in
xchg
push
add
jmp
stos
jb
add
adc
ss
jge
mov
cmp
push
fisttps
into
jp
in
arpl
push
xchg
leave
ret
fmuls
cmp
cs
xchg
fs
lahf
xchg
test
jo
jne
shll
addr16
addr16
sbbl
das
les
fstpl
test
mov
cmp
insl
jmp
outsb
in
mov
cmpsb
mov
lds
jle
sbb
out
inc
fcomps
dec
inc
loopne
sbb
sbb
dec
lods
or
loope
or
cmp
jnp
pop
fwait
mov
dec
data16
add
pop
jno
cmp
arpl
das
sbb
xor
dec
and
call
std
sub
jle
inc
ja
xor
or
pop
ss
call
pop
mov
popf
lock
js
arpl
pop
add
icebp
ja,pn
test
movsb
rclb
xchg
sbb
cmpsb
je
and
or
adc
ljmp
mov
mov
hlt
adc
xchg
pop
mov
inc
xchg
or
sarl
arpl
gs
call
adc
pop
adc
sub
xor
pop
sub
jmp
jnp
jmp
dec
out
or
or
scas
inc
rolb
inc
mov
in
cmp
loop
icebp
sbb
cmpsl
loop
lds
xchg
push
fs
outsl
pop
mov
pop
leave
push
adc
xchg
daa
mov
sbb
cli
sub
xadd
out
mov
outsb
cmpl
daa
inc
std
xor
daa
jne
sub
bound
push
xor
jp
imul
xchg
sbb
inc
outsl
test
in
lret
push
shll
cmp
jbe
or
repnz
push
lahf
lods
mov
lcall
in
adc
add
pop
mov
test
ret
mov
movsb
xchg
fwait
inc
and
out
add
aas
adc
xorb
push
mov
push
add
dec
pop
cli
mov
adc
xor
fsubrs
pop
lea
pop
js
xchg
out
mov
enter
add
jae
mov
sub
ss
outsb
je
int3
scas
add
stc
jns
mov
lods
cmc
shll
pop
sub
inc
xchg
lds
ret
ja
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
jl
push
pop
fsubl
mov
add
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
jge
mov
imul
sti
jno
popa
or
test
clc
sti
mov
dec
mov
sbb
dec
push
and
push
pop
push
int3
aad
inc
inc
jno
std
xor
js
out
and
lahf
sbb
mov
mov
ret
pop
aam
stc
bnd
push
inc
rclb
iret
xchg
and
cltd
pusha
imul
mov
xchg
push
push
subl
daa
lret
addb
lds
sub
iret
mov
loope
jns
icebp
xlat
outsb
test
jge
mov
lods
ret
mov
das
into
sar
inc
insb
ficompl
add
mov
adc
jae
mov
push
pop
mov
cld
pop
inc
ror
xchg
notl
lret
inc
sub
pop
mov
adc
insb
jl
sub
push
movsl
in
repnz
test
and
fstps
cmc
mov
or
loopne
test
pop
insl
les
scas
imul
adc
cltd
jle
in
inc
jbe
push
and
cmp
jae
xor
mov
xor
xor
mov
sbb
fsubr
repnz
in
xchg
shr
cmp
insl
mov
test
mov
mov
mov
hlt
movsb
jle
out
or
adc
cmp
jmp
inc
jno
cmp
mov
pop
add
push
fildll
mov
and
mov
dec
push
fcmovne
in
dec
xchg
subb
jae
add
jns
xchg
out
test
fstl
xchg
mov
cmp
pop
and
push
sarb
dec
add
insl
push
mov
mov
jmp
pop
fsubp
push
divl
jnp
dec
and
add
pop
xor
mov
cmp
orb
xchg
bound
push
jle
xlat
inc
xchg
jo
and
hlt
cmp
insb
push
inc
xor
or
sbb
es
ror
inc
sub
cmp
les
lods
les
mov
xchg
push
xchg
push
push
icebp
in
cltd
pop
jbe
cs
mov
jecxz
addr16
lock
lret
bound
mov
xchg
pusha
and
dec
push
out
sbb
pusha
cwtl
dec
jne
mov
pop
xlat
fscale
pusha
ja
cltd
adc
movsb
add
xor
int3
lds
cmp
jne
lock
ljmp
ret
sbb
jns
push
ret
nop
out
xor
xchg
pop
scas
push
or
pushf
xlat
pop
cs
or
lret
insb
push
cltd
pop
clc
cmp
mov
cmpsl
jmp
clc
jmp
lcall
mov
and
clc
pop
scas
and
add
cwtl
sub
pop
dec
cmp
fwait
movb
shr
inc
xchg
ret
outsb
mov
dec
test
mov
xor
xor
mov
ret
cmp
insb
xor
ljmp
xchg
and
loopne
gs
hlt
in
bound
out
inc
test
pusha
mov
pop
mov
mov
stos
pop
lock
jmp
les
inc
fiadds
or
rclb
popl
aaa
mov
scas
add
mov
mov
insb
adc
movsl
sbb
and
add
adc
aad
xor
mov
xor
jo
jp
jmp
stos
lock
insl
rorb
cli
shl
xor
xor
jp
push
pushf
or
cwtl
adcb
scas
cmp
sahf
xor
inc
inc
sbbb
xchg
xor
mov
push
xchg
ret
out
dec
mov
push
cmp
xor
push
outsb
inc
andl
test
cwtl
icebp
cmp
incl
xchg
daa
add
ret
mov
cmp
sbbb
loopew
cmp
push
movsl
js
sbb
pusha
mov
adc
jo
arpl
test
and
xchg
outsb
jge
pop
jo
clc
jnp
inc
push
call
jnp
mov
in
cmp
xchg
sbb
pop
leave
repnz
outsb
xor
sbb
outsb
mov
or
in
jo
addb
pop
cmp
push
fisttpl
pushf
sbb
push
xchg
or
sbbl
cmp
adc
lock
add
jmp
pushf
jge
inc
push
sbb
pop
push
cmp
mov
test
mov
rcr
lahf
sbb
pop
stos
scas
sub
push
sub
adc
mov
push
decb
and
data16
sbb
and
roll
adc
cs
sub
in
mov
sub
aad
dec
jg
or
int3
jle
flds
mov
push
pop
cmp
shlb
pop
mov
cmp
cmp
push
add
rol
dec
gs
pop
add
adc
xchg
jno
inc
or
fs
ret
popf
xchg
in
jnp
cltd
int
jb
push
in
mov
push
mov
jno
add
popa
mov
xor
push
jne
push
mov
or
cmove
loope
imul
in
addr16
push
or
pop
gs
jnp
pop
adc
popf
push
cmp
jp
mov
push
fnstsw
lcall
arpl
cwtl
push
mov
jb
lea
je
sub
sub
dec
mov
pop
and
mov
hlt
cwtl
sub
ss
repnz
std
jecxz
inc
nop
sbb
test
mov
inc
pushf
cmp
inc
push
pusha
data16
mov
sahf
sbb
mov
test
mov
scas
xor
mov
imul
lret
jnp
fstpt
cmpsl
push
fidivs
and
and
das
das
xor
xor
movsl
aaa
test
push
pop
call
lahf
cmp
ljmp
into
sub
out
xchg
das
ss
sub
mov
sbb
enter
fistl
data16
ds
push
rclb
sub
mov
jmp
mov
xor
aaa
mov
bnd
test
jb
and
mov
jge
test
arpl
mov
jmp
push
fimuls
test
ds
sahf
test
push
sahf
in
sub
mov
dec
inc
les
dec
jecxz
add
sbb
push
pop
sysexit
das
push
and
sbb
test
mov
jae
lea
loop
test
mov
in
das
push
sub
push
pop
sbb
push
ds
pop
mov
loopne
jp
fistpll
mov
add
mov
or
lcall
and
add
xor
sarb
sub
roll
add
xlat
jno
stc
popf
push
push
xchg
mov
loop
lods
add
icebp
push
in
mov
cld
lods
bswap
push
sbb
sbb
xchg
lds
inc
cmp
sbb
test
stos
pop
push
loop,pn
je
sub
add
jecxz
int3
inc
pop
lds
pop
or
rolb
dec
xchg
cmp
out
ss
xchg
cmp
xor
push
sub
jmp
test
je
xlat
cmp
aam
mov
adc
mov
dec
and
cmpsb
out
stos
stos
bound
and
repnz
mov
push
xchg
jle
lcall
lea
ja
push
push
int3
mov
lds
data16
jl
mov
cwtl
mov
les
mov
cmp
dec
adc
fldenv
jae
mov
sub
imul
in
iret
pusha
xor
xchg
scas
mov
xchg
sub
mov
lret
iret
cs
sub
fwait
or
out
repz
lcall
lods
inc
jae,pn
push
dec
shll
pop
and
lods
test
dec
loope
xor
mov
cmpsb
mov
push
or
mov
pop
jb
mov
xor
add
shl
lcall
add
rcll
cld
sbb
xlat
jmp
scas
rcrb
mov
adc
or
movsl
lods
or
jb
sub
fsts
add
les
shll
dec
dec
movlhps
dec
data16
jg
adc
in
mov
fstpt
in
sarb
insl
sarl
js
inc
fs
lea
negb
pushf
std
pop
or
pop
cli
fiaddl
adc
push
adc
or
dec
or
xor
xchg
adc
aaa
jecxz
pop
and
inc
mov
fidivrl
mov
adc
mov
inc
inc
dec
fwait
movsl
cmp
das
ror
xchg
cmpsl
fneni(8087
sub
ss
push
push
and
insl
sbb
ret
mov
add
pop
test
mov
ds
lock
add
inc
mov
dec
jae
repz
aas
sbb
xor
add
dec
scas
xor
push
cmpsb
into
stos
and
xchg
xchg
int3
sub
push
in
pop
addb
mov
xchg
rclb
inc
jp
lock
out
mov
sbb
fisubs
xor
cmpsb
fistl
je
js
xchg
lahf
clc
int3
mov
mov
push
push
push
inc
jge
stos
mov
stos
test
mov
dec
das
lcall
mov
mov
mov
out
imul
sub
pop
jp
je
xlat
lcall
cmp
cmp
fimull
rolb
sbb
sti
out
jle
mov
or
adc
mov
loop
and
or
lcall
mov
push
cmp
fsubrl
cli
xchg
scas
xchg
sub
scas
mov
dec
scas
jb
jecxz
popa
call
jno
adc
xor
jnp
adc
es
hlt
mov
clc
imul
mov
mov
add
gs
popf
jg
mov
dec
sahf
add
adc
add
stos
add
add
dec
stos
jns
lahf
mov
add
mov
pop
cmc
nop
cs
ret
pop
shlb
aad
dec
jb
sub
add
mov
fdivrp
and
adc
dec
clc
hlt
push
mov
sub
lret
mov
mov
jnp
testl
imul
mov
int
lock
cmpsl
pop
fs
std
sub
jecxz
mov
xchg
mov
or
xchg
inc
clc
sub
sub
in
mov
jns
lahf
push
stc
out
add
js
pop
sub
imul
push
sub
mov
scas
push
fidivs
arpl
jmpw
lods
out
addl
mov
aam
mov
mov
imul
lock
mov
fmul
push
jb
int
sub
icebp
push
ja
pushl
test
inc
push
and
sti
pusha
jb
cli
xchg
sub
ficompl
lcall
dec
xor
push
divb
gs
or
inc
pop
mov
addr16
enter
mov
ret
out
mov
out
cmp
dec
aas
push
mov
adc
outsb
xchg
sbb
in
xor
push
cwtl
fstpl
ret
gs
jmp
xchg
test
or
lcall
ss
sbb
leave
mov
pop
jge
test
cmp
jne
ss
mov
push
xor
push
test
sub
jle
xchg
add
hlt
pop
lret
push
aas
mov
leave
in
inc
adc
xchg
pop
shrb
jecxz
mov
in
shrl
testb
jmp
outsb
scas
add
fisubl
cmp
sbb
ljmp
loope
jle
pushf
mov
stos
lock
and
mov
xlat
add
loopne
loop
cmp
mov
xchg
jge
loop
add
insb
add
mov
stos
insl
roll
mov
or
mov
cmp
std
das
aaa
fs
xchg
xchg
dec
into
jb
iret
cmpsb
iret
ret
or
sbb
dec
sbb
iret
and
inc
mov
jbe
js
lahf
addr16
pop
mov
push
adc
or
xlat
push
push
pop
push
pushf
sbb
and
int
push
push
shll
mov
pop
les
mov
push
daa
mov
cmp
lock
push
cmpsb
mov
arpl
lret
push
int3
cmp
push
push
jecxz
popf
jae
push
dec
sub
cmp
test
push
push
into
cwtl
pop
sub
leave
rcrb
mov
int
es
push
aad
xchg
dec
dec
cmc
repz
fs
xchg
shlb
adc
std
in
mov
nop
fwait
jb
leave
fisubrl
mov
iret
mov
daa
and
adc
pop
mov
xchg
mov
xor
enter
rorb
std
stc
xlat
dec
sar
loope
inc
and
lods
xlat
push
and
adc
mov
inc
shrb
push
nop
out
js
in
jnp
jbe
jo
jp
test
aam
xor
out
lods
and
adc
addl
pop
fucomp
jnp
test
int3
lcall
pop
lcall
cwtl
jne
pop
sbbb
dec
imul
sub
add
mov
xor
inc
fcmovnu
insb
mov
or
jle
inc
adc
push
jle
mov
testl
mov
jae
push
ret
mov
xchg
scas
adc
shlb
std
push
das
xchg
lea
mov
mov
in
xor
lock
push
pop
xchg
out
es
movsb
popf
and
movsl
mov
testb
and
cli
cmp
mov
or
push
sub
inc
dec
cli
cmp
and
test
ror
mov
jnp
js
cmp
xor
or
adc
xchg
repz
or
pusha
mull
push
pop
mov
pop
push
sbb
mov
pop
ds
int3
push
xor
loope
push
int3
mov
dec
test
je
leave
pop
inc
pop
adc
inc
sti
cli
mov
sbb
int3
nop
mov
dec
add
dec
push
lea
xor
jecxz
mov
loopne
in
push
xchg
or
test
push
out
push
aaa
scas
rep
cmp
pop
mov
add
mov
test
dec
mov
inc
sbb
mov
cwtl
add
cmpb
jns
jmp
pop
cltd
adc
xchg
in
push
adc
mov
int3
loop
xchg
add
insb
pop
std
jecxz
adcl
pop
xchg
fst
in
pop
jl
lret
jp
mov
flds
ljmp
xchg
jns
adc
xor
test
lahf
mov
mov
out
mov
dec
xchg
mov
xor
mov
or
std
lret
pop
arpl
ljmp
cmp
fucomip
pop
sub
adc
mov
js
sub
fisttpll
sbb
cmp
js
fs
jbe
and
mov
adc
mov
cld
repz
pop
stos
dec
aad
inc
rolb
les
cld
inc
inc
fimuls
cmp
aad
pushf
dec
xchg
rorb
jmp
daa
roll
int
pop
scas
cmp
aaa
rcr
subb
stc
jge
jle
mov
lcall
fs
ljmpw
arpl
std
mov
pop
push
dec
xor
dec
xchg
popf
inc
mov
dec
pop
imul
enter
std
or
xorb
jo
lods
xlat
inc
pop
sbb
ljmp
dec
inc
jae
mov
inc
cmp
jge
aaa
jns
das
stos
push
popf
ret
cwtl
mov
sbb
xor
jge
in
cmpsb
loope
cmp
or
add
pop
mov
sub
jp
mov
cmp
mov
mov
in
adc
jmp
jmp
shrb
int
adc
js
dec
sub
gs
sbb
mov
mov
lock
sub
dec
mov
pcmpgtd
fistpll
imul
stc
arpl
push
add
pushf
mov
movsb
push
sarb
outsb
adcl
jg
sbb
and
into
jne
shrb
insb
inc
or
push
and
cmpb
xor
mov
and
ljmp
adcb
mov
push
cmc
pop
lea
add
call
jecxz
jns
shr
sbb
add
xchg
xchg
inc
inc
jle
addr16
popf
mov
add
and
inc
ljmp
icebp
es
pusha
pop
add
into
or
push
push
rcr
call
lahf
aam
andb
xchg
repz
movsb
lods
and
pushf
sbb
mov
xor
test
xor
iret
xor
xor
bsf
js
repz
jmp
out
xchg
sub
and
cli
mov
mov
mov
ss
cltd
push
pop
cmp
stos
jmp
fildll
lret
es
mov
or
xlat
insl
jl
mov
lcall
dec
xlat
ret
sbb
int
addr16
or
fcomp
ror
fiadds
add
lahf
mov
popa
lods
mov
jl
mov
mov
outsb
into
push
push
mov
out
jbe
in
lea
movb
mov
mov
xor
inc
jmp
mov
clc
xor
inc
repnz
sub
sub
in
pop
out
out
add
xlat
cmp
fdivrs
gs
outsb
sbb
sbb
push
test
ss
into
daa
in
push
jo
rorb
iret
xchg
mov
jno
push
mov
popf
or
pop
stc
ljmp
mov
test
push
jge
mov
or
outsl
lods
xor
popf
jge
jecxz
ret
hlt
les
aas
test
outsl
imul
jb
jg
xor
in
or
and
lods
mov
xor
push
stc
stos
movsb
mov
sarl
inc
adc
movsl
sahf
add
push
jecxz
out
pushf
lods
xchg
sbbl
subb
mov
jg
xchg
jne
or
sbb
ret
das
adc
sub
mov
hlt
hlt
and
ds
hlt
hlt
jmp
mov
pop
xor
mov
insl
in
pop
in
lahf
aam
pop
sti
or
in
jnp
insl
jl
mov
or
or
mov
mov
and
and
ds
cmp
call
into
mov
pushl
pop
adc
aam
daa
out
mov
cltd
push
xor
inc
jbe
lea
jge
sbb
js
insl
insb
aam
xchg
jmp
sub
inc
inc
inc
fnstenv
dec
adc
fdivrs
push
adc
in
dec
dec
lahf
xor
stc
das
mov
loop
xchg
pop
cmpsl
inc
xchg
xchg
cwtl
les
imul
dec
mov
mov
dec
sti
inc
mov
and
mov
call
xchg
add
adc
mov
sub
subl
ja
cmc
push
jmp
sub
jae
mov
pop
les
aam
and
adc
adc
pop
xchg
loope
dec
cmpsl
data16
mov
ret
mov
test
frstor
cmp
add
ljmp
adc
sub
orl
scas
or
enter
mov
add
dec
sbb
ljmp
push
cwtl
mov
xchg
int
pause
nop
test
xchg
jb
nop
in
adc
push
mov
movsb
popa
cli
rclb
push
stc
outsl
sub
add
out
data16
lods
cld
mov
hlt
xor
xor
add
inc
mov
xchg
popf
pop
js
jle
cmovge
lods
push
xchg
xorb
mov
ds
push
sbb
sub
into
js
sub
stos
int3
pop
mov
sgdtl
test
cmpsl
test
hlt
sahf
lcall
jl
and
push
in
les
mov
mov
jecxz
xor
nop
jmp
scas
inc
addr16
lret
xchg
out
repz
or
jnp
rcrb
es
jge
cmpsl
nop
inc
cmp
jmp
stos
sub
xor
mov
xor
jae
test
mov
pop
cld
dec
push
mov
loop
sbbl
lods
adc
das
sbbl
xchg
stos
pop
shl
jb
inc
xor
dec
mov
call
aam
mov
fcmovb
sbb
orl
xchg
pop
ja
lea
adcb
mov
cs
repnz
gs
aaa
and
sbb
mov
sahf
push
das
je
lods
cmp
xor
insb
xor
lret
fiadds
mov
push
sub
out
in
call
and
popf
sub
jge
xchg
les
add
repz
aaa
pop
cmp
jmp
xor
inc
int
pop
out
sbb
cmpsl
dec
mov
loope
insb
fsubrs
fdivrl
pushf
mov
int
dec
mov
aam
repnz
jg
arpl
ret
jne
nop
xor
mov
test
xchg
jns
mov
jns
int3
and
pop
repnz
cmpsb
or
fs
stos
xchg
or
pop
or
jg
roll
sbb
sub
pop
in
push
fdivrl
insl
xchg
fidivs
shr
push
sbb
nop
out
add
mov
inc
pop
loope
sub
push
fmuls
pop
pop
dec
xor
or
stc
aad
push
sub
cmc
pop
and
xchg
add
push
sarl
add
mov
jo
push
fnstcw
mov
pop
outsb
cltd
mov
push
sti
jmp
ss
js
dec
xor
negl
call
notb
mov
aaa
xlat
imul
shrl
cmpb
loopne
js
addr16
lock
loop
push
in
pop
add
cmp
xor
daa
lods
insb
shll
and
cs
mov
test
pusha
xchg
hlt
mov
nop
mov
mov
inc
xchg
dec
jns
or
xlat
sub
xor
int3
pop
add
mov
loop
hlt
ja
sti
shl
sub
inc
out
mov
arpl
testb
pushf
rolb
sub
push
icebp
dec
xchg
cltd
outsl
push
mov
roll
fwait
sub
mov
dec
lds
cmp
jecxz
sub
cmp
ds
repnz
dec
push
xchg
dec
pushf
popf
mov
dec
mov
lods
and
lahf
pop
xchg
sbb
fsubr
inc
and
xchg
lahf
and
clc
jg
popf
or
sub
cli
movsl
aam
and
fs
mov
jbe
stos
adc
add
mull
movsb
pop
aad
out
mov
cmc
push
cs
mov
push
and
out
pop
int3
in
add
xlat
jno
sub
movb
add
add
neg
jmp
cli
and
gs
adc
add
stos
add
add
mov
cmc
fs
sub
push
inc
mov
cmp
or
push
xor
cmp
cwtl
jge
mov
xchg
cmp
stos
mov
jae
scas
mov
and
test
test
push
das
pop
xchg
jecxz
jp
aas
aad
in
jae
bound
popf
out
scas
push
cmp
xchg
ja
je
dec
xchg
pop
xor
test
movsl
in
rcll
out
ret
mov
fistpl
jle
out
xchg
pop
insb
push
pop
fimuls
pop
mov
and
nop
and
mov
es
fistps
aaa
inc
xor
cmp
clc
pop
in
or
sarb
mov
lret
jg
lds
mov
enter
adc
mov
pop
in
pop
jno
xor
sub
or
inc
xchg
dec
cmp
inc
mov
ret
jne
ja
in
aad
loop
out
repnz
jg
push
popa
aaa
bswap
xchg
stos
bound
jae
lods
adc
les
and
dec
iret
lods
test
cmpsl
add
aas
xlat
dec
or
int3
mov
xor
pushf
arpl
fwait
add
mov
das
fstps
jno
test
nop
adc
iret
xor
out
jo
inc
mov
jp
jne
adc
add
aaa
xchg
pop
aam
mov
fistpll
sub
xor
lahf
jmp
pop
push
loop
sbb
xor
and
sbb
ljmp
nop
sbb
xor
cltd
sub
mov
sub
sbb
push
insl
sbb
dec
xchg
outsl
aam
xchg
lcall
xor
shll
mov
lret
bound
sub
idivb
xchg
jp
push
pusha
sbb
inc
shrl
sub
ror
mov
adc
jo
cmp
inc
pop
mov
push
cmp
sub
adc
pop
mov
shll
xor
outsl
cltd
das
dec
mov
negl
cmp
and
pusha
cmp
dec
mov
mov
lock
rcll
push
cmp
mov
jge
mov
pop
je
mov
lds
push
cmp
mov
inc
stc
cld
xchg
leave
ret
jle
sub
jg
mov
dec
outsl
add
or
adc
add
into
pop
out
les
repz
and
nop
filds
fadds
fs
stos
std
push
mov
add
dec
fs
and
mov
loop
cltd
push
fldl
xor
pop
cmc
fs
mov
push
add
movsb
jb
roll
in
sarb
jecxz
outsb
cmp
imul
in
xchg
jae
lahf
jns
add
sub
into
aad
shl
movsl
jae
jns
fcom
xor
xorl
mov
mov
sar
repnz
jge
adc
repz
or
inc
xchg
out
and
cli
add
addr16
mov
aad
call
xchg
sbb
lret
mov
pop
test
xor
push
xor
mov
popf
lahf
incb
mov
fwait
mov
hlt
out
sarb
sbb
dec
pop
popf
sub
fsubrs
insb
sub
cmp
add
cld
mov
and
jmp
loop
pop
pop
mov
add
add
shll
mov
loope
and
jae
inc
nop
les
add
rorl
or
sbb
adc
gs
pop
arpl
mov
fwait
test
iret
gs
add
imul
mov
in
mov
dec
in
jno
imul
cmpsl
cmc
ljmp
enter
jae
pop
cmc
xchg
inc
ret
cmp
xchg
add
adc
mov
inc
cs
popf
mov
mov
enter
mov
rep
mov
cmp
mov
mov
ret
int
or
aas
addr16
sub
sbb
lea
inc
dec
mov
jo
test
adc
cmpsb
xor
scas
cmc
pop
pop
cmpsl
sub
aaa
push
cltd
lock
imul
jle
xchg
inc
mov
xchg
and
mov
aam
jnp
scas
or
loop
push
neg
fwait
repnz
in
xchg
cltd
fsubs
and
imul
cld
pusha
dec
pop
insb
sbb
fcmovnb
sbb
ret
dec
jne
and
icebp
loope
nop
cmp
pop
xchg
fistps
repnz
lods
cmp
int
jnp
push
dec
dec
iret
fnstsw
adc
cmp
mov
out
es
pop
data16
push
cmpl
aad
or
js
push
xchg
add
pop
jmp
xor
ljmp
arpl
dec
fstpl
mov
push
mov
popf
sub
and
mov
xor
push
mul
sbb
inc
xchg
pushf
in
mov
mov
sbb
into
add
aaa
jnp
sbb
test
push
out
pop
and
aas
movsb
dec
cmp
out
icebp
cmp
jno
ljmp
or
jle
push
mov
cmp
mulb
lret
adcb
test
jnp
xor
cmpsl
das
int
das
push
dec
filds
in
or
sahf
into
mov
sbb
int3
xchg
sbbl
adc
loop
js
cmpsb
ds
xor
orb
mov
add
stos
popa
jae
cwtl
imul
pop
into
rcl
xor
loopne
inc
idiv
mov
sarb
cmp
mov
ret
je
mov
test
repz
ljmp
add
faddl
and
push
in
add
iret
cmpsl
mov
mov
mov
std
int
test
fldt
fwait
xor
test
pop
sub
fcmovnbe
mov
jns
loopne
sbb
imul
and
push
into
scas
iret
sub
in
mov
dec
xorb
xor
pop
out
adc
repnz
mov
mov
pop
lods
imul
sub
out
in
mov
lock
subl
xchg
lcall
xchg
out
push
das
cmp
sub
insl
mov
iret
inc
sub
mov
push
cmpsl
outsb
push
bound
jl
push
dec
bound
jbe
xor
jne
mov
adc
subb
jb
jb,pt
iret
fs
loopne
xchg
xchg
in
pop
ja
xchg
sbb
ja
daa
xchg
in
icebp
inc
add
lods
mov
and
add
xchg
lret
test
sbb
dec
fisubl
dec
push
cmpsb
push
add
add
test
push
adc
andl
les
rorl
mov
loopne
sbb
icebp
push
jge
jno
adc
and
lret
push
cmp
lcall
into
fs
mov
cmc
repnz
pop
cwtl
push
sub
gs
pushf
je
rcrb
icebp
xchg
bound
hlt
pop
dec
jp
sub
xor
adc
push
test
mov
or
mov
adc
add
pop
popa
mov
aad
pop
mov
fs
cli
popa
cmp
dec
ja
lcall
pop
jbe
adc
pop
movsl
fildl
push
xlat
stc
dec
stos
xor
fsubr
push
push
inc
jae
jl
ss
imul
or
rcl
cmp
out
imul
in
aas
repnz
sbb
test
pop
fsubs
lahf
scas
jg
scas
push
popf
cmp
pop
mov
bound
or
insl
aam
xor
loopne
xor
inc
cmp
loope
cmp
scas
sub
test
daa
or
or
shlb
pushf
cmp
ja
ja
xchg
or
cmp
add
xchg
dec
push
cmp
mov
test
insl
push
dec
add
pop
movsb
jns
mov
pusha
or
lcall
loopne
jp
mov
add
sbb
sbb
push
push
xor
mov
outsl
cmp
out
sbb
inc
or
xchg
rorb
dec
mov
shll
hlt
iret
dec
lcall
and
sbb
mov
push
mov
and
lock
sarb
stc
pop
bound
dec
xchg
push
mov
cmpsl
adc
sbb
push
lock
mov
lcall
andl
movsb
lar
in
or
lcall
stos
cmp
test
cmpsl
test
mov
pop
fwait
xor
adc
cmpsl
jl
add
and
xor
push
and
cmp
cmpsl
xchg
push
add
and
sub
xor
aad
mov
adc
dec
out
mov
cld
outsl
adc
cmp
int3
inc
out
test
cmp
cwtl
push
cs
cmp
lcall
repnz
and
mov
dec
rclb
cmp
mov
lods
ja
mov
ljmp
or
add
mov
movsb
std
adcl
jle
adc
cmc
push
testl
xchg
test
or
shlb
test
in
insb
testb
add
lahf
dec
lcall
shlb
out
or
adc
incl
adc
mov
mov
lds
sub
ret
and
jp
xchg
mov
std
mov
cwtl
addl
xchg
jb
jno
mov
xchg
and
ja
mov
int
popf
jg
xchg
adc
or
sub
pop
ljmp
shrb
or
pop
mov
jne
std
lret
bound
add
pop
sub
addr16
add
or
dec
ret
inc
addb
xchg
sub
mov
outsl
push
cwtl
push
outsl
jb
popa
mov
stc
lock
or
and
mov
sbb
call
out
inc
dec
add
jne
inc
add
stos
add
add
xor
fisubrs
xchg
stc
cmp
add
jno
inc
imul
dec
or
xchg
add
cs
ss
or
ret
xchg
inc
testb
push
imulb
fisttpl
mov
test
in
push
js
lds
jb
pop
fnstenv
shlb
mov
mov
jbe
add
sub
mov
scas
mov
mov
movsb
and
jno
inc
add
push
out
push
lods
push
lods
bound
inc
and
pop
cltd
aas
loop
sbb
js
fidivs
mov
shufps
sub
cld
push
xchg
xor
out
sub
mov
loopne
cwtl
jb
ljmp
in
lret
sub
imul
ljmp
sbb
mov
xor
aad
repnz
mov
lods
cli
adc
nop
xor
cmp
cmp
movsl
les
push
es
scas
in
jge
xor
rorb
add
push
xor
sub
pop
mov
adc
pop
lret
cs
addr16
add
ljmp
stc
mov
mov
push
out
pop
repz
aaa
mov
aad
push
into
xlat
and
mov
aad
scas
dec
lret
gs
iret
je
iret
mov
fldcw
fistl
add
dec
xchg
lret
push
pop
scas
enter
loope
push
popa
js
insl
dec
push
xor
push
cmp
fwait
fwait
jmp
std
push
popa
mov
out
sbb
popf
mulps
std
aas
inc
test
shl
nop
add
mov
push
dec
jle
sub
xor
dec
ja
sub
pop
aam
bound
ja
out
test
out
insl
sub
adc
call
dec
jecxz
or
enter
hlt
sub
loopne
fildll
cld
cmp
add
cld
push
mov
leave
sub
push
sub
ljmp
ud1
insb
mov
addr16
arpl
mov
addb
pushw
imul
xor
ja
sahf
push
pusha
dec
xorl
aad
fstpl
rcrl
cmp
icebp
ficoms
inc
jecxz
add
jnp
pop
sub
clc
out
cmp
fwait
aaa
xchg
out
movsl
andb
setnp
mov
out
xlat
xchg
sbb
lods
sub
roll
push
and
repz
xchg
inc
pop
mov
xchg
aas
jg
mov
ret
pop
fildl
xor
enter
rcr
cmp
pop
add
popa
inc
add
nop
bound
or
jbe
mov
push
dec
lret
push
push
mov
cmc
fwait
out
mov
adc
imul
or
pusha
xchg
dec
outsl
lods
loop
sub
xor
loope
xchg
or
xchg
ds
int3
fs
mov
outsb
adc
shrb
adc
jge
cmp
aam
sarb
js
xchg
es
mov
in
sub
imul
or
mov
pop
mov
sbb
fcompl
and
mov
fisubs
lods
cltd
mov
add
sub
fucomi
add
movsb
dec
repnz
add
leave
or
add
or
mov
stos
add
add
push
ja
cs
push
arpl
add
movb
stos
ds
mov
mov
stc
popa
fstl
jmp
ljmp
pushl
jle
sahf
adc
or
icebp
pusha
or
cmp
adc
aad
cltd
cmp
push
adc
xchg
out
lds
leave
lds
add
push
jno
sbb
sbb
sbb
fs
push
shll
je
rol
push
test
ljmp
xor
add
sub
aas
jbe
imul
daa
mov
ficomps
ljmp
dec
add
add
and
xchg
aam
sahf
inc
xchg
frstor
rcrl
sbb
jne
mov
test
push
pop
mov
lcall
jg
scas
inc
sbb
push
xor
xchg
clc
mov
push
scas
mov
das
fs
es
shll
insb
add
adc
inc
std
adc
push
push
lods
rcrl
loopne
push
xchg
fadd
idiv
dec
dec
in
add
jecxz
pop
pop
and
pop
in
jmp
add
and
dec
mov
pop
push
shll
outsl
pushf
xor
in
jb
pushf
sub
shl
test
pop
shll
mov
pop
ret
push
mov
xchg
mov
arpl
ret
inc
or
add
test
ficoms
and
ljmp
out
jl
clc
push
ret
movsb
loop
push
pop
loop
and
mov
sbb
mov
sub
out
dec
push
pop
scas
ds
adc
jbe
jbe
iret
out
fs
mov
lcall
or
mov
sbb
and
mov
sub
das
sub
scas
pusha
xchg
add
and
dec
jnp
das
mov
aaa
cmpsl
jmp
test
mov
mul
pop
sti
mov
aam
mov
fimull
jb
loop
cld
sub
push
pop
inc
add
pop
push
lea
repz
test
andl
in
mov
outsb
fs
pop
xor
xor
mov
pop
hlt
push
test
outsl
sub
pop
adc
fnstenv
push
imul
rorb
dec
sbb
xchg
cmpl
xchg
adc
in
cwtl
dec
pop
lods
repnz
xor
push
nop
adc
jb
ds
push
fwait
lock
mov
cmc
push
in
dec
xchg
jbe
iret
xor
test
inc
or
mov
testb
dec
pop
jbe
push
das
jb
xor
fistps
ljmp
adc
sub
test
jae
or
add
mov
pop
out
fnsave
ret
enter
adcl
ret
cmc
xor
or
jmp
adc
aaa
mov
andl
push
in
outsb
in
das
sbb
divl
push
mov
ljmp
xor
shrl
mov
js
xor
jne
mov
mov
xchg
icebp
in
inc
mov
jns
lea
cs
jmp
jae
mov
mov
mov
push
cmp
pop
jmp
or
jns
fwait
and
sub
repz
repnz
add
cltd
ja
out
out
cltd
ja
daa
xor
imul
add
pop
icebp
sub
push
mov
push
incl
stc
dec
cmpsl
jle
pop
mov
add
imul
jg
cmp
or
shrb
insl
pop
add
jmp
or
into
popf
mull
xchg
mov
pop
sarl
cmp
cmc
pop
je
adc
pushf
inc
inc
pop
cmp
loope
mov
mov
leave
add
mov
lar
cmp
jmp
adc
mov
dec
aas
adc
les
mov
mov
test
jle
jle
imull
fs
out
mov
adc
ds
lcall
rorl
push
xchg
cmp
pop
pushf
jg
add
fstpt
push
rol
xchg
mov
xchg
fdivrs
scas
gs
pop
insl
movsl
out
pop
mov
out
and
out
sbb
outsb
ja
les
das
or
xchg
out
jno
pop
add
lret
pop
outsb
cwtl
das
pop
cmp
push
and
dec
xchg
cs
mov
adc
inc
xor
mov
or
cmp
pop
xlat
call
ret
xorb
pop
lcall
mov
mov
mov
pop
cmpsl
dec
mov
lods
pop
xchg
ljmp
inc
pop
pop
mov
push
jecxz
inc
lock
push
adc
push
xchg
xlat
jne
lea
punpckhdq
push
dec
movsb
pop
add
adc
xor
xchg
sub
dec
fdivr
xor
add
add
mov
push
addr16
xchg
xor
stos
cs
mov
inc
aam
les
cmp
ljmp
mov
or
aad
add
jo
addb
pop
adc
sbb
leave
inc
aaa
mov
dec
sub
rcrl
cmpsl
push
pop
mov
and
inc
sub
fildll
lods
mov
stc
and
mov
fstpl
cwtl
scas
xchg
es
mov
lea
mov
out
cmp
aad
push
daa
jne
nop
ret
and
pop
ret
aad
int
mov
push
je
lock
aam
add
cmp
mov
data16
xor
jae
mov
mov
push
push
adc
xor
push
dec
or
lcall
mov
outsl
out
leave
ret
sti
and
xor
cmpl
mov
mov
cmp
push
insl
push
scas
scas
mov
push
pop
mov
mov
movsl
mov
xchg
orl
or
nop
sub
adc
ret
in
repnz
imul
xchg
aad
inc
add
out
jne
arpl
xor
mov
ror
jno
filds
lea
int
sbb
iret
loope
iret
movsl
mov
pusha
adc
mov
mov
or
in
or
cmp
xchg
jmp
fs
dec
mov
jo
sub
cmp
lds
incb
ret
shl
cmp
dec
xchg
add
fwait
mov
xchg
pop
inc
in
iret
mov
cmpsl
xchg
xchg
es
cld
sub
insl
xchg
sahf
jo
addr16
aad
movsb
dec
mov
mov
js
je
jle
and
js
arpl
xor
add
add
iret
lahf
push
loop
aad
xchg
xor
add
movsb
and
jl
jb
fsubrl
es
cld
lret
lea
out
push
popa
and
dec
jl
andb
lret
push
jmp
bound
stos
out
jns
cwtl
pop
push
inc
lods
pop
jle
push
outsl
sub
pushf
mov
icebp
add
cmpsl
sub
and
xorl
cmpl
jmp
pop
xor
mov
sub
mov
lods
jg
mov
mov
dec
cltd
sbb
push
mov
andl
jecxz
and
movsbl
mov
jb,pt
dec
cmp
lock
filds
adc
xchg
xchg
push
sbb
mov
add
test
pop
push
les
xor
ds
or
lret
das
pop
xchg
cmp
xor
mov
sbb
aas
push
cmc
ja
pop
inc
test
jnp
push
mov
test
mov
pop
aam
fsubs
pusha
cmc
jns
xorb
xchg
repz
xor
loope
xor
dec
fstp
or
out
ds
or
addr16
inc
cmpsb
push
push
mov
out
xor
mov
out
cmpl
push
adcl
jbe
xchg
popf
sahf
push
pop
adc
cmp
js
pop
sub
pop
xor
push
sub
jne
or
rclb
xchg
sbb
add
loope
xchg
dec
popf
jecxz
sbb
adc
pushf
mov
popf
lea
push
xor
mov
arpl
aas
ret
out
stc
and
fistps
sbb
push
lods
dec
lea
test
movsb
stc
testl
insl
mov
mov
mov
push
push
add
dec
aaa
mov
sbb
xor
and
movsb
or
push
int
inc
pusha
sbb
xor
ret
mov
call
cmpsb
jp
lret
jg
fcompl
nop
dec
hlt
mov
faddl
mov
jo
ret
stos
pushf
pop
cmp
mov
adc
and
adc
push
pop
adc
pop
cmpsl
mov
rolb
outsl
and
and
mov
fdivrl
sbb
add
lcall
add
dec
stos
shr
push
js
push
jecxz
outsl
pop
cs
inc
push
cwtl
xchg
cmc
jae
jge
in
push
xchg
out
or
xchg
jge
mov
pop
call
adc
sbb
dec
sbb
aaa
push
dec
imul
adc
mov
adc
mov
mov
or
lcall
mov
push
scas
fldcw
jg
in
push
lods
sbb
aad
and
mov
lcall
inc
add
push
add
and
inc
inc
fiaddl
inc
in
les
push
jae
lea
jae
mov
push
jecxz
mov
cmp
sub
push
pop
insl
test
push
mov
test
push
add
jae
insb
pop
shll
aam
or
add
and
push
mov
jp
enter
push
add
mov
dec
jmp
pusha
xor
xchg
test
lahf
jns
fdivrl
fisttpll
mov
mov
lcall
jg
push
jecxz
sub
movsl
pop
mov
add
add
dec
add
sbb
mov
pop
push
je
xchg
jns
mov
out
outsl
icebp
add
inc
pop
or
jp
adc
je
hlt
mov
dec
in
add
jns
cmp
roll
add
enter
jp
inc
sbb
lea
pop
sar
ds
pusha
lret
sub
loop
sub
js
mov
add
xlat
dec
xor
nop
mov
pop
mov
jge
leave
leave
pop
cmp
and
int
mov
and
or
imul
or
lahf
dec
test
fdivl
and
ret
xor
pop
dec
scas
sub
jge
or
add
movsl
popfw
ficoml
xor
and
scas
negb
pop
fimuls
lret
fisubs
stos
inc
dec
jecxz
es
movsl
sub
shlb
xchg
push
pop
test
leave
xchg
movsl
imul
imul
mov
js
sbb
xor
jmp
jmp
inc
mov
xlat
stc
mov
mov
vmovhpd
stos
inc
mov
gs
outsl
shlb
sbb
pop
lods
push
daa
sbb
mov
inc
sub
mov
imul
cmpsl
pmaddwd
call
adc
test
test
pushf
pop
cmp
cmpsl
scas
lock
and
xor
das
push
pop
fsubr
popf
ja
push
adc
out
fisubs
fnstsw
daa
xlat
fwait
mov
mov
pop
call
inc
sub
xchg
imul
cmpsb
ss
lret
subl
shrb
lods
dec
pop
pop
int3
sbb
cmp
adc
inc
notl
stos
hlt
sub
sarb
stos
dec
mull
imul
pusha
pusha
sbb
in
sahf
push
jae
or
xchg
mov
or
inc
push
movsb
sub
sub
jmp
mov
jns
or
mov
lods
inc
sub
jne
in
or
adc
ljmp
mov
xchg
mov
incl
stos
flds
test
es
jns
push
or
and
mov
imul
repnz
xchg
in
fcompl
scas
dec
jle
lods
std
sub
dec
cmp
sub
xor
nop
enter
xlat
inc
lds
test
mov
daa
test
ret
push
lcall
test
int3
xchg
call
test
int
loop
shlb
outsb
in
sub
out
sbb
sbb
sbb
pushl
in
fs
out
js
jge
add
xchg
aaa
outsb
sbb
mov
out
sti
and
outsl
jl
sbb
adc
cltd
out
test
inc
jns
outsb
mov
inc
sti
dec
daa
mov
ja,pt
daa
push
inc
mov
xchg
push
dec
inc
andb
aaa
dec
push
je
or
and
cli
out
jne
repnz
outsl
dec
movsb
imul
aas
or
mov
aas
iret
sub
mov
ds
in
xchg
jg
mull
dec
or
adc
adc
fs
pushf
daa
popa
into
sarl
ficompl
icebp
jbe
push
xchg
dec
push
jno
add
cmpsb
ret
mov
out
aad
pop
xor
lahf
mov
add
xlat
dec
call
adc
fs
push
add
stos
add
add
js
mov
shrl
call
clc
mov
xchg
daa
xlat
jns
rcrb
cmc
pop
dec
mov
mov
int
fnsave
aad
call
mov
fs
mov
lcall
cmp
ljmp
mov
mov
pushf
test
jle
ss
push
jno
in
mov
jne
add
add
sub
sbb
mov
int
ret
scas
pop
addr16
inc
dec
mov
arpl
cld
xchg
mov
and
mov
ret
daa
jne
lea
arpl
pop
push
pop
movsl
mov
cwtl
jbe
or
pop
or
ljmp
mov
pop
sbb
push
popf
ret
jbe
inc
pushf
fwait
jecxz
push
rcll
inc
mov
js
testb
jo
into
mov
aam
pop
scas
pop
call
arpl
cmp
ds
xchg
stos
jmp
pop
sahf
filds
sbb
inc
fs
dec
movsl
add
add
adc
xor
leave
loope
sbb
push
xchg
mov
lds
sarb
ss
dec
push
xor
add
pop
pop
lods
push
ficomps
ret
fbld
inc
out
jb
add
pop
int3
xor
mov
jmp
sarl
push
ret
mov
mov
fcomp
lods
xchg
jmp
cmp
xchg
inc
cld
pop
outsb
das
push
push
jmp
icebp
adcl
loope
test
ds
nop
movsb
decb
cmpsl
add
cmp
jecxz
loopne
fbstp
and
and
mov
mov
pop
aad
je
lods
add
loope
jge
hlt
xchg
ja
popf
lock
lcall
mov
pop
sbb
push
jb
loope
sbb
out
lods
mov
push
xor
ljmp
inc
testb
dec
xlat
inc
or
xor
jbe
lods
ror
aaa
out
sbb
xchg
pop
adc
fbld
sbb
scas
xlat
dec
mov
sub
repnz
or
stos
dec
repz
fstpl
rcrl
outsl
cmp
mov
mov
xor
sub
cmp
inc
ljmp
orl
cli
test
dec
fistpl
sti
movsb
inc
pop
fcoml
outsb
data16
or
and
push
cmp
insl
es
xor
cmp
mov
adc
mov
int3
mov
mov
bound
sbb
mov
dec
sbbb
stos
das
jae
clc
xchg
and
std
data16
pop
push
mov
test
bound
pop
in
jmp
cmp
and
sub
push
adc
hlt
xchg
add
adc
test
and
cs
fistpll
cwtl
shr
add
icebp
xlat
cmp
js
adc
or
or
mov
fildl
aad
into
leave
loop
mov
push
cli
out
push
add
cmpsl
mov
roll
inc
jbe
loope
arpl
loope
cwtl
lret
std
push
dec
adc
shr
mov
xchg
sub
ja
cmp
and
lret
mov
inc
out
jnp
mov
cmp
adc
add
add
sub
inc
mov
out
fdiv
push
imul
or
push
in
movsl
jns
adc
add
cmp
dec
and
push
daa
imul
dec
inc
lods
xchg
dec
imulb
jg
jmp
dec
push
punpckldq
rcrl
mov
add
xorl
cmpsl
data16
jp
dec
mov
outsl
jge
cmpsb
mov
adc
adc
mov
scas
lret
pop
scas
dec
hlt
ja
es
fwait
mov
inc
pop
int3
cmp
xchg
in
sbb
popa
mov
mov
push
xor
loopne
jbe
mov
inc
inc
jl
popa
ret
and
outsb
ja
iret
or
jnp
mov
insl
adc
ret
cmp
ja
inc
fisttps
pop
pusha
in
das
enter
cs
test
je
sbb
movsb
sub
out
call
dec
add
add
pushaw
or
xor
or
mov
insb
xchg
mov
mov
out
adc
mov
addr16
add
ljmp
mov
cmp
int
testl
fistpll
inc
cwtl
sbb
dec
dec
inc
xor
nop
push
xor
and
cmp
lods
pop
push
rcl
mov
mov
inc
loopne
ja
pop
adc
add
adc
mov
popa
mov
sub
push
jg
mov
jbe
pop
ds
jmp
adc
sub
outsb
daa
fisubl
cmp
idivl
std
pop
add
jnp
in
jno,pt
fwait
lcall
adc
xor
jecxz
cmp
out
idiv
pusha
jae
fildll
pusha
xchg
pop
push
mov
jnp
cli
jb
and
rorl
jne
movsb
mov
ljmp
adc
orb
mov
jmp
push
cwtl
or
movsl
js
orb
push
mov
icebp
les
imul
xchg
or
sbb
mov
fcoms
and
sbb
insb
insb
scas
xchg
xchg
mov
inc
pop
fcmovnb
add
mov
cmp
sbb
dec
test
adc
cli
xchg
mov
push
mov
dec
mov
lock
xor
or
and
jne
ret
push
insb
push
sub
inc
or
fistpll
lds
jo
outsl
nop
sbb
cwtl
orb
fadds
cltd
roll
and
xor
pop
loope
xchg
adc
and
notl
sti
rcl
jne
jo
shll
push
or
dec
cld
dec
sub
sbb
push
bound
movsb
cvtps2pd
dec
sub
mov
popf
insl
mov
adc
adc
ror
out
lods
daa
popf
or
adcl
dec
push
push
cmp
je
jle
push
sbbb
xor
adc
sub
test
jge
scas
adc
lock
sub
frstor
icebp
mov
aas
push
dec
rclb
push
and
inc
movsb
ds
or
cmc
int3
sbb
mov
add
add
test
pop
cwtl
cmp
jmp
mov
sub
lods
sub
jge
xchg
hlt
mov
into
push
xchg
aam
rolb
adc
jg
jns
pop
cmpb
arpl
rcrb
stos
add
add
mov
sti
xchg
popf
popf
aas
pop
stc
in
in
cmp
lret
clc
pop
or
gs
xor
mov
sbbl
mov
sbb
fistpl
inc
push
fcoml
mov
andb
sbb
dec
ja
fists
adc
pop
mov
lods
cmp
pop
pop
addl
enter
sbb
fisubl
xchg
push
sub
jmp
inc
fcmovb
add
cld
xor
incl
iret
psubusw
enter
and
mov
cmp
pop
insl
xchg
js
mov
cli
jmp
mov
bound
stos
outsl
xchg
lahf
cmp
inc
inc
cmpsl
xor
sub
lods
mov
cmp
push
xchg
mulb
sti
inc
js
add
popf
fwait
jne
and
lret
jp
push
hlt
aam
pop
test
inc
add
xor
jge
push
pop
jno
sahf
sbb
push
pop
inc
mov
xor
xor
cmp
dec
xor
ljmp
ror
pop
add
mov
orl
es
sub
jae
mov
xchg
xlat
mov
push
aad
pop
fistpll
cmp
xchg
fwait
inc
popf
or
push
std
cmp
adc
adc
sbbb
fwait
sub
dec
das
mov
xor
loop
jp
cltd
lea
test
sub
test
push
das
mov
add
nop
loop
cmp
imul
scas
pop
mov
in
out
call
dec
in
lcall
mov
push
and
enter
dec
std
mov
add
dec
sub
mov
xchg
mov
or
bsr
pop
pop
shr
pop
sub
jb
mov
fisttpll
push
pop
mov
scas
movsb
cmp
and
repz
in
jg
fstl
xchg
loop
dec
loopne
stos
cmp
jne
jecxz
push
cwtl
jne
xor
out
dec
test
dec
inc
push
inc
jbe
adc
dec
add
inc
jp
scas
adc
popa
mov
jge
dec
or
cli
xor
cmp
mov
push
out
cmp
popa
jmp
sbb
mov
aas
outsb
rcrl
cmc
xchg
dec
ljmp
cs
mov
cmp
inc
mov
push
mov
fs
cld
ficoml
shll
jno
jge
lods
push
mov
sub
iret
mov
icebp
push
or
sbb
test
xchg
mov
mov
pop
and
mov
sub
add
jnp
popa
enter
and
pushf
push
std
ret
jne
mov
xor
mov
sbb
push
lret
aas
repz
outsb
mov
ljmp
mov
lods
aaa
inc
inc
outsl
dec
mov
push
in
repnz
mov
mov
enter
fisubrl
sub
insb
and
lret
cmpsb
xchg
imul
sub
test
or
jb
sbb
add
adc
in
push
int
xlat
xchg
int
idivl
mov
xchg
or
in
add
stos
cmp
pushf
or
pop
fucomi
int3
push
lods
inc
or
outsb
idivl
notl
pop
out
jno
imul
stos
add
add
les
sbb
int
jnp
mov
loopne
data16
xchg
mov
inc
inc
pop
std
xchg
cs
iret
int
out
movsb
out
popf
cmp
jp
in
jbe
mov
arpl
and
mov
imul
adc
imul
fadds
dec
pop
inc
xor
cmp
sbb
dec
inc
xor
inc
fwait
hlt
cld
and
pop
das
daa
cld
push
jae
jnp
mov
test
inc
jmp
push
pusha
add
mov
shl
xor
pop
das
ds
je
lock
pusha
rsm
fnstsw
mov
lret
add
adc
xchg
cmpsl
cmc
pop
bound
push
ss
test
outsl
xlat
jmp
test
mov
xchg
stc
mov
int3
scas
sti
nop
adc
test
clc
or
lahf
push
cmp
fld
push
imul
adc
lods
ret
mov
ret
jne
mov
pop
popa
push
push
out
mov
pop
mov
out
cmp
pop
dec
pop
imulb
and
dec
jl
test
mov
pop
int3
inc
add
pop
cmp
jo
fs
mov
test
pop
inc
popa
popl
das
add
test
jecxz
cmpsl
nop
dec
bswap
lret
mov
ret
pop
lahf
jns
pop
sahf
mov
xchg
xchg
or
lea
or
xor
and
sbb
cs
cltd
push
add
or
xchg
xchg
jb
xchg
fwait
notl
cld
pop
jmp
je
sub
out
push
test
jmp
xchg
cmpsl
cli
pushf
adc
mov
daa
call
cmc
iret
aaa
add
or
fbld
xchg
xchg
jmp
xchg
addr16
mov
jnp
xchg
lods
sbb
xor
mov
mov
mov
ja
iret
sub
icebp
lahf
cld
arpl
cs
or
arpl
leave
cmp
jecxz
lock
loop
stos
lahf
in
or
fs
or
mov
jne
adc
mov
sub
mov
stos
pop
data16
jnp
pop
fsubs
adc
jmp
rorl
nop
sbb
mov
unpcklps
cmp
push
pushf
rorl
into
stc
and
ret
inc
sub
adc
out
push
push
and
and
pop
add
scas
aaa
dec
stos
fmull
daa
fcmovb
pop
icebp
repz
mov
pop
aam
movsb
loope
rcrb
mov
repnz
jmp
cmpsl
push
push
xor
xor
fstpt
fwait
jae
push
sbb
or
add
sub
aas
pushf
add
stc
pop
cmp
inc
xor
push
ret
sbb
mov
mov
fistl
loopne
cmpsb
clc
rcll
mov
fcomps
rcl
push
cwtl
dec
xlat
adc
pop
push
insb
scas
icebp
imul
dec
cmpsb
jge
or
fsubl
ljmp
cmp
movsl
sub
sub
out
mov
push
or
setae
xor
shlb
xor
pusha
mov
jbe
jb
jle
repnz
call
cmp
lcall
inc
repz
mov
pushf
lds
cli
shl
xchg
push
mov
pop
jle
push
mov
loope,pt
popf
imul
idivb
add
nop
inc
les
and
leave
adc
cli
push
sub
cs
and
insl
fsubr
xor
daa
or
add
sti
lods
or
jmp
test
bound
add
loop
out
add
adc
popf
add
mov
xchg
fcoms
ret
js
inc
lret
rclb
lahf
add
adc
xor
pop
fstpl
mov
or
movsb
push
lahf
add
xor
pop
loope
int3
lea
subl
fistl
xor
fdivrs
aaa
mov
movsb
lea
sbbb
mov
add
dec
mov
nop
std
pop
out
cmc
sbb
fimuls
mov
in
sbb
ds
sub
mov
pop
clc
std
jmp
xor
addr16
sbb
cmpsl
xchg
fldt
mov
addr16
xlat
popf
mov
popa
or
movsb
xchg
mov
repnz
inc
jne
inc
cwtl
sbb
nop
icebp
xor
push
rolb
inc
movsb
adc
lahf
sbb
push
dec
jl
dec
pop
mov
ljmp
clc
add
mov
arpl
cli
out
xchg
adc
shll
adc
push
int
pop
sbb
xor
or
pop
add
mov
imul
cmp
fwait
dec
fidivs
mov
mov
hlt
xchg
int3
cmc
jo
rorb
mov
outsl
jno
mov
push
push
jecxz
adc
mov
out
pop
xor
int
in
testb
and
sbb
cwtl
inc
mov
dec
mov
stos
jmp
inc
or
loopne
pop
leave
in
sti
xor
mov
arpl
mov
in
cmc
inc
xchg
loop
ficomps
fldenv
adc
jmp
cs
jne
imul
dec
or
add
test
leave
mov
mov
push
push
sbb
ret
cmp
push
jmp
lcall
mov
or
xchg
inc
ficoml
cmc
sbb
xchg
lret
dec
xchg
jmp
xchg
mov
nop
xor
and
stos
cmp
push
cmpsl
sbbb
push
pop
or
jecxz
xor
push
push
into
or
inc
push
lea
mov
jge
shlb
imul
add
outsb
cmp
loope
sbb
subb
jmp
jmp
lret
add
mov
aam
and
pop
sbb
sbb
pusha
ljmp
gs
sbb
and
xorb
adc
pop
xchg
dec
stos
shrb
mov
pop
push
inc
rorl
adc
outsb
rcl
enter
jb
mov
ljmp
inc
loopne
or
pushl
mov
movsb
les
pop
pop
lds
rcl
dec
push
add
fs
dec
cmpsb
xor
test
mov
mov
xor
lds
pop
call
ljmp
sbb
cmp
std
popa
push
int3
jno
adc
fistl
cmpsl
arpl
cmp
lock
push
cmp
stos
sub
cmp
mov
jle
pop
xchg
sbb
and
push
pop
jno
in
icebp
adc
cwtl
shlb
xchg
pushf
jg
cli
xchg
and
js
mov
sub
jb
sub
and
lret
mov
aam
pusha
pop
gs
mov
adc
lods
xchg
jb
and
push
or
cltd
stos
call
sub
dec
sub
and
adc
mov
ljmp
pop
xor
mov
shll
add
add
in
push
cld
cs
repnz
add
xor
std
shll
stos
add
add
shrl
fs
aam
xchg
xlat
inc
mov
cmpb
sub
cmp
addl
clc
sub
or
add
mov
into
add
repz
mov
mov
cmp
cli
leave
sbb
lea
clc
cmp
adc
movl
jns
inc
cmp
outsl
in
xor
dec
dec
cmp
fwait
inc
pop
or
imulb
imul
cmpsb
fiadds
lahf
xor
jge
fiaddl
sub
adc
xor
mov
xchg
cmp
ja
mov
test
loopne
daa
adc
push
and
icebp
xchg
cmp
ret
imul
mov
out
mov
and
mov
es
cltd
orl
in
cmc
repnz
mov
loop
hlt
cmp
mov
mov
fiaddl
or
pop
lret
scas
pushf
aam
rcrl
rolb
mov
inc
push
adc
or
and
add
insl
sub
jbe
es
push
test
aaa
xor
ds
js
popl
fstps
test
xchg
lock
lret
fldenv
sbb
mov
or
xor
push
aad
mov
in
ret
cmp
aad
push
mov
jae
or
mov
mov
jbe
cmp
xor
subb
jmp
jmp
stos
adc
mov
in
mov
jmp
adc
and
sub
gs
rolb
adc
jg
lea
outsl
and
add
paddusw
xchg
add
dec
leave
dec
mov
repz
test
stos
in
rorb
add
repnz
icebp
push
or
mov
dec
push
movsb
mov
xor
or
icebp
xchg
es
lods
loop
movsl
loopne
cs
jle
pop
dec
cld
xchg
cwtl
pusha
sub
adcl
test
xor
test
jne
lods
jne
outsl
xor
jl
push
in
xor
pop
or
and
in
xchg
sbb
pushf
pusha
mov
aas
insb
pusha
push
sub
mov
dec
xlat
mov
adc
cmp
in
or
movl
dec
jp
jmp
add
sub
sub
dec
fisubrs
mov
testb
sub
aad
adc
mov
add
inc
sub
sahf
dec
pop
inc
movsl
lret
negb
cmp
and
lret
test
movsb
xchg
shlb
orl
lret
adc
mov
fisttpll
sahf
testl
shrl
push
push
cltd
inc
sbb
mov
mov
push
push
outsb
push
cmp
pushf
or
mov
mov
mov
xchg
pop
fnstcw
sub
adc
mov
xchg
push
adcb
pusha
jmp
sbb
xchg
xor
mov
or
rcr
adc
add
ljmp
inc
xchg
mov
or
jmp
mov
in
xchg
lods
out
jae
jne
aaa
int3
mov
xor
lahf
jmp
enter
int3
ret
xchg
shr
repnz
push
je
shrl
popa
iret
push
je
stos
pop
fstpt
push
hlt
add
add
add
mov
fadds
add
out
jl
push
cmp
push
fsubs
aad
call
push
aad
push
shl
bound
stos
xchg
dec
xor
adc
jnp
mov
popf
cmp
inc
test
dec
mov
adc
sbb
mov
pop
sar
leave
rclb
jmp
fbld
shll
mov
inc
push
sarb
mov
enter
fsubrp
into
je
test
and
adc
push
dec
sub
dec
pop
loopne
out
cmp
ja
dec
xchg
cli
cmp
inc
xchg
sub
mov
sub
dec
adc
repnz
ds
rclb
cmp
int
addr16
sbb
enter
pop
dec
jo
fwait
mov
or
rcll
or
pop
scas
jle
daa
xor
mov
repnz
dec
sti
lock
ja
popa
sub
adc
cmp
leave
orb
in
cmpsl
lods
cld
dec
mov
xchg
pop
and
pushf
jle
xchg
push
addb
pop
pop
cmp
add
xchg
bound
sub
mov
inc
and
jns
push
dec
cmpsb
and
aad
insb
inc
mov
jae
mov
int3
ja
push
and
jg
dec
push
jae
inc
xchg
rcl
or
rol
xor
pushf
in
adc
int3
mov
or
outsb
jmp
sbb
dec
sbb
imul
ret
in
test
shl
xchg
dec
xor
sbb
pop
test
fucomp
jbe
addr16
movsb
mov
mov
arpl
jmp
mov
pusha
xor
mov
mov
push
lods
sahf
pop
daa
inc
jg
cmc
sbb
jae
jb
insl
sub
sub
sbb
adc
ds
sbb
sub
std
xchg
push
aam
jnp
mov
outsl
dec
sub
imulb
pop
in
sbb
popa
cmpsb
or
es
in
pop
jle
movsl
xor
sbb
jae
stc
call
inc
cmpsl
pop
mov
dec
out
inc
insb
cmpsb
sub
mov
data16
pop
xchg
adc
jns
push
and
int
xor
mov
mov
sbb
ds
sbb
into
inc
cltd
push
xchg
cmpsl
or
push
out
cltd
adc
inc
enter
cli
negl
and
sbb
cli
aaa
dec
mov
and
lret
xchg
jo
mov
mov
adc
cmpsl
or
mov
shlb
test
aad
rolb
sbb
test
ljmp
testl
sub
sub
mov
repnz
sub
push
xchg
push
leave
push
mov
or
jl
xor
mov
and
or
jecxz
and
xchg
xor
pop
aaa
push
in
mov
mov
arpl
inc
ss
or
fs
cld
enter
cmp
sbb
dec
lock
repz
lods
jmp
xchg
imulb
inc
imul
pushf
push
or
or
bound
call
hlt
pop
test
inc
outsb
in
mov
mov
jl
cltd
repnz
aam
rolb
pop
nop
xchg
jg
leave
mov
push
into
clc
adc
add
pop
arpl
adc
pmulhw
std
std
insb
xchg
test
add
ret
repz
fcmovnb
pop
sbb
pop
jecxz
pop
insl
add
stos
add
add
sbb
mov
xor
add
orl
fdivrs
dec
add
or
negl
push
sbb
in
ret
mov
and
push
jae
sub
daa
out
mov
test
adcl
clc
popa
add
inc
pop
mov
std
stos
data16
repz
sub
mov
fnstenv
pusha
mulb
hlt
adc
cli
in
sbb
push
test
jo
cmc
clc
pop
pop
add
jmp
cmp
sub
xchg
push
fwait
dec
inc
push
mov
popa
mov
mov
loop
loope
lods
cmpsb
lcall
movsb
mov
sbb
and
fisttps
cs
test
push
push
fisubrl
out
into
insl
jle
lret
scas
xor
mov
in
jae
aad
lret
fldenv
mov
sub
or
push
ret
nop
enter
in
jmp
and
hlt
sub
push
int3
xor
call
mov
loopne
stc
adc
push
gs
fisubrl
test
mov
xchg
add
push
xor
addr16
in
dec
cmpsb
adc
push
and
test
push
xchg
imul
sub
cmpsl
lahf
repz
dec
and
addl
and
inc
inc
pop
xchg
push
dec
dec
lret
add
pop
push
fwait
mov
cmp
lds
and
in
push
mov
mov
stc
orb
xor
add
mov
adc
idivb
xchg
add
jae
adc
paddsb
push
lds
add
pusha
and
shlb
lods
xor
adc
jae
scas
mov
mov
ds
cmpsb
push
aam
inc
pop
lods
cmc
or
and
loop
adc
jne
cld
movsl
pop
into
inc
jge
push
mov
int3
in
fdivr
lods
lret
inc
and
sub
int
fcmovbe
lcall
add
adc
adc
sub
enter
and
jmp
shll
inc
std
outsl
cmpsb
add
cwtl
push
lret
ljmp
ja
or
loope
jp
dec
addr16
sub
sub
stc
mov
pop
addr16
fwait
mov
data16
cs
stos
mov
jl
xlat
dec
sarl
jle
adc
mov
movsl
test
push
pop
fstp
mov
xor
les
mov
xchg
mov
fnstcw
sub
sbb
sahf
sbb
cmp
dec
fwait
sbb
jmp
sti
movsl
ret
xor
fisttpll
xor
inc
test
scas
scas
in
fwait
imul
sbb
jns
inc
sub
out
shl
xchg
mov
fidivrs
mov
dec
jl
test
addr16
mov
pop
aad
cmp
xchg
and
inc
in
in
cmp
fidivl
inc
and
xchg
pop
loop
in
pop
iret
arpl
std
jo
mov
cmpsl
mov
jbe
pop
leave
lea
pop
pusha
xchg
cmp
cwtl
sarl
jns
lods
mov
xchg
xchg
sub
dec
out
push
movsl
and
or
ret
dec
sbb
xchg
in
divb
jbe
sti
pop
pop
xor
stos
pop
std
push
add
and
gs
daa
sti
mov
push
pusha
dec
cs
ret
add
cmpsb
sub
jle
mov
sbb
push
add
inc
xlat
push
imull
test
push
and
jbe
pop
and
jnp
or
stos
push
push
outsb
dec
fwait
in
sub
sti
sub
add
jo
cld
push
test
jle
fiaddl
rcrl
push
adc
mov
mul
movl
add
fs
insl
sub
out
test
mov
push
inc
pop
scas
sbb
cmpsl
sahf
lds
dec
rcrl
mov
out
or
add
pop
cmp
inc
pop
adc
shl
xchg
mov
dec
sbb
lock
std
push
jmp
stc
in
ret
pop
push
cwtl
sbb
jge
mov
xchg
iret
into
shl
sbb
sti
xor
enter
push
dec
stos
dec
xchg
testl
dec
js
pusha
mov
push
fsubl
sub
dec
dec
addb
jae
das
xchg
pop
lret
addr16
xchg
mov
mov
xor
mov
mov
loop
ja
cmpsb
push
xor
jecxz
add
or
cmp
fidivrs
sbb
out
ja
jp
and
push
inc
sarl
sarl
adc
out
sti
cwtl
cltd
mov
insl
das
xor
cmp
pop
movsl
inc
mov
dec
inc
ficoms
xchg
xchg
cld
mov
inc
lea
icebp
scas
sub
ds
jecxz
jecxz
subl
sarb
fidivl
insl
push
pushl
shlb
mov
sahf
repz
loop
adc
movsb
mov
fwait
and
sub
xlat
jle
hlt
arpl
cwtl
mov
or
lea
inc
xor
es
mov
jne
stos
fstpl
ror
xchg
out
mov
pop
inc
cmpsl
and
push
fimuls
enter
adc
dec
mov
gs
cltd
loop
sti
xchg
iret
mov
repnz
cmp
ss
rcr
or
push
insb
shll
bound
inc
jb
and
iret
mov
insl
inc
fldcw
mov
xor
leave
sbb
leave
adc
sub
dec
sub
out
imulb
sti
dec
movsb
cmp
push
pop
push
pushf
cmp
into
xor
cld
add
mov
sahf
mov
movsb
push
push
ret
mov
stos
jo
stos
dec
sub
leave
lret
fnstcw
stc
repnz
cld
jl
fs
sbb
out
sbb
sub
ret
mov
enter
jb
out
cmp
pop
subl
dec
negb
jnp
add
cmp
sub
jbe
jecxz
xchg
cltd
movsb
pushl
ds
add
mov
pushf
cmp
add
mov
nop
sarb
enter
sub
into
pop
into
pop
shrl
mov
lcall
jg
inc
xor
xchg
repz
xor
mov
dec
xchg
das
fisubrl
pushf
stos
xchg
adc
cmp
mov
lret
pop
test
nop
dec
stos
or
lods
fldenv
repz
mov
xor
into
ljmp
in
lds
cmp
loop
jg
cli
or
cmp
leave
pop
out
sti
push
movsb
or
cmp
dec
mov
hlt
mov
ljmp
add
mov
aas
sysexit
pop
push
out
outsl
hlt
insl
je
add
fidivl
lcall
or
sub
call
push
mov
js
orb
loopne
imul
data16
aad
out
pop
xchg
jne
mov
mov
push
and
mov
repz
mov
mov
out
push
sub
xor
add
inc
into
dec
mov
or
fcoml
outsb
mov
mov
cli
adc
mov
sub
scas
test
add
pop
stc
cmp
fs
imul
mov
push
mov
jne
in
cmpsb
cmp
insb
mov
dec
arpl
pop
jmp
ja
in
les
testl
xchg
enter
dec
jbe
xor
pop
mov
jmp
push
mov
loope
ljmp
jns
sbb
jb
xor
cmpsl
push
fcoms
pop
or
and
push
movsl
sahf
jae
icebp
es
inc
adc
add
arpl
pop
inc
adc
pop
mov
ljmp
es
mov
mov
pop
pop
int
and
das
jg
cmp
inc
pop
rcl
ret
cmp
aam
movsl
sub
add
cmpsl
pop
adc
adc
in
aam
inc
mov
mov
mov
mov
movsb
push
xchg
mov
nop
cltd
iret
and
xchg
fistps
sbb
outsb
rcrb
inc
jp
inc
pop
adc
ret
int
scas
mov
sahf
stc
shlb
sub
sub
push
rorb
daa
mov
cmp
adc
lret
push
and
imul
fistps
pop
xchg
setge
lea
inc
out
repz
dec
pop
or
orl
mov
cmp
stos
cmc
push
xchg
xor
jns
insl
jo
mov
add
test
xchg
mov
jmp
or
sub
shll
push
jo
mov
fiaddl
shr
push
cld
std
fmul
loop
push
es
jmp
mov
or
inc
icebp
and
xor
cmp
shlb
or
jb
enter
dec
push
subl
pop
ret
int3
sbb
add
xlat
fnstcw
repz
cs
push
pop
jp
jecxz
ret
and
dec
sbb
inc
cs
mov
mov
jl
loop
fucom
push
mov
pop
leave
xor
pop
cmp
jmp
daa
lock
scas
jo
jle
xchg
cmp
or
mov
into
pop
lcall
mov
and
adc
inc
sbb
sbb
iret
mov
pusha
xor
or
push
sbb
icebp
ret
jle
lahf
test
mov
out
lea
add
stc
stos
cs
test
bound
jns
cli
and
int3
and
fdivr
fidivrl
stos
jno
push
fs
icebp
lret
xchg
mov
fs
push
sub
mull
popl
fdivl
push
inc
scas
pop
aaa
mov
bnd
sbb
pop
movb
cmpsb
arpl
test
cld
dec
xor
jbe
jno
mov
ljmp
scas
jb
cld
or
clc
mov
xchg
jle
xor
test
mov
pop
cli
sub
mov
push
test
or
and
daa
aam
in
arpl
sub
push
cwtl
call
repz
in
mov
push
cmp
push
js
add
shlb
add
imul
or
jns
or
lods
push
ljmp
push
pop
jp
gs
arpl
hlt
fmull
jbe
cmc
loopne
je
xchg
into
lret
mov
out
lahf
inc
xchg
inc
imul
movsb
cld
add
movsl
fs
push
mov
mov
fdivl
push
and
inc
stos
shlb
bound
loope
pop
and
xchg
xchg
or
jmp
fbld
jns
data16
jg
mov
mov
int
xchg
xchg
in
mov
das
or
das
fstpl
jo
outsb
inc
fistps
jecxz
mov
and
mov
pusha
mov
xchg
mov
sahf
in
imul
movsl
fists
xlat
scas
fwait
scas
lcall
ror
int
xchg
int3
fs
mov
outsb
out
mov
jbe
jp
hlt
sub
andb
scas
out
xchg
cmpb
data16
sbb
sbbb
mov
neg
pop
outsb
cmp
cmp
into
ja
inc
mov
xor
sahf
subl
inc
enter
pop
mov
xor
iret
inc
jnp
int
sub
cmp
loopne
mov
repz
mov
lods
inc
push
rcll
inc
nop
icebp
dec
test
sub
push
je
cmp
cmp
jl
jmp
js
pop
push
sub
jns
ret
int
mov
lods
xor
mov
sarb
ss
sub
mov
incl
loop
lahf
and
shll
icebp
push
rcrl
mov
sbb
push
adcb
jnp
cmp
and
cwtl
push
das
repz
pop
xchg
and
imulb
stos
inc
and
sbb
jmp
mov
jns
jno
lods
xor
mov
dec
les
movsl
xor
test
push
jb
pop
pushf
jne
inc
dec
adc
inc
test
aad
cmp
int3
or
imul
inc
mov
gs
jl
adc
sbb
aaa
sbb
sbb
jo
sahf
outsl
lret
mov
cmp
and
loope
jbe
rorb
adc
mov
ja
jl
iret
jge
xchg
nop
push
add
scas
stos
xchg
xchg
test
stos
test
push
dec
sub
push
inc
adc
insl
xchg
sahf
adc
cwtl
in
int
outsb
pop
mov
sbb
mov
jp
sar
stos
idivl
mov
js
push
movsb
adc
dec
sub
xor
fildl
pusha
loopne
adc
sub
push
lods
mov
popf
pop
xchg
sbb
mov
scas
dec
lds
imul
mov
cmp
test
pushf
or
std
jecxz
xor
nop
daa
insl
cli
popa
and
leave
jb
push
lahf
cmpsb
adc
mov
pop
sbb
ds
or
mov
pop
pop
imul
popf
pop
xor
pop
imul
in
fimuls
mov
imul
xchg
jbe
or
jb
fwait
cs
jno
add
mov
sub
bound
jns
inc
mov
xlat
add
movl
push
cmp
xor
test
inc
xchg
xchg
loop
pop
or
mov
cwtl
lock
add
xchg
lcall
outsl
sbb
jnp
add
loope
add
lock
xor
lcall
jecxz
jge
adc
sub
and
sahf
inc
popf
cmp
pop
mov
repz
enter
adc
ret
movsl
mov
std
adc
sbb
or
ret
xchg
hlt
inc
hlt
sub
jno
lahf
cmp
sub
fadds
add
sbb
lods
add
dec
xchg
pop
cwtl
pop
mov
cmc
fadds
dec
aad
mov
fdivr
pusha
je
inc
adc
xchg
sti
popf
out
outsl
xchg
add
insl
xchg
or
sbb
insb
repnz
rcll
iret
jmp
sbb
jecxz
mov
jae
in
fiadds
cmp
ret
pushf
adc
ss
lahf
rorb
lds
push
jmp
add
xor
int3
repnz
cmp
jo
push
scas
mov
adc
cmp
loope
fdivr
lock
nop
mov
sahf
cmp
xor
mov
adc
pop
roll
repnz
repz
insb
lock
pop
cmc
xchg
hlt
daa
mov
jl
pop
sub
sub
mov
repnz
mov
or
repz
mov
ret
jns
inc
mov
mov
push
sar
pop
mov
jno
push
or
sbb
test
add
xchg
dec
jmp
sub
stos
call
adc
cltd
mov
addr16
mov
lret
xchg
inc
fsubrs
ret
aas
sti
add
push
cmp
mov
or
enter
jb
inc
push
add
sub
mov
out
in
mov
mov
adc
push
push
test
pop
pop
add
pop
xchg
add
inc
ss
or
mov
jmp
rorl
mov
pop
jl
mov
call
fldl
add
in
lcall
andb
test
fldenv
and
daa
rolb
mov
and
movsl
jb
add
inc
incb
pushf
or
sarb
stos
inc
push
push
mov
fs
outsb
push
outsb
cli
jbe
in
into
orb
jle
cld
sbb
shll
sub
jne
jae
clc
mov
fnstsw
add
add
mov
cmp
fisubrl
xchg
stos
fwait
aad
jns
pop
or
push
test
pop
dec
jp
movsl
and
cmp
lcall
movsl
test
cmp
out
jae
mov
insl
lret
imul
insl
imul
hlt
cs
lock
dec
daa
aas
dec
es
in
inc
mov
jns
fdiv
lret
jns
xchg
ret
loop
enter
dec
sbb
pushf
xchg
fwait
iret
pop
dec
ficomps
push
cmp
fimull
aam
adc
loope
gs
sbb
pushf
mov
sti
cmp
popf
pop
push
mov
orl
or
es
mov
xchg
cmpsb
rolb
or
jle
outsb
addr16
outsl
xor
push
dec
pop
repz
addr16
mov
push
cmpsb
icebp
filds
in
add
test
cld
arpl
ds
or
ljmp
popa
jbe
mov
inc
and
lret
and
insb
add
call
jmp
and
adcb
outsb
jg
add
push
out
adc
leave
mov
mov
pop
xchg
push
sti
aas
dec
sub
loop
rorb
mov
addr16
inc
vmread
jle
and
dec
fimuls
jmp
rclb
sarb
add
movsl
mov
cwtl
add
xchg
inc
out
int3
shll
popf
xor
movsl
in
test
out
dec
xlat
xor
mov
loop
push
nop
shlb
dec
xchg
insb
fiaddl
cmp
mov
lret
and
jle
ljmp
call
js
lods
add
ja
in
add
shl
frstor
aam
mov
add
sbb
adc
es
enter
xchg
shr
je
jp
jmp
dec
jnp
fisttpl
inc
shll
push
xor
jns
mov
in
add
jmp
loopne
imul
and
daa
mov
dec
and
sbb
dec
scas
dec
enter
imul
and
xlat
xor
push
push
push
out
adc
mov
imul
das
xor
shrb
movsb
push
aas
loopne
jae
into
into
jg
popf
dec
rcll
insb
sbb
test
js
cld
mov
push
pushf
add
arpl
dec
pop
shr
ja
arpl
mov
adc
rcrl
sub
jecxz
enter
sbb
sbb
cmp
xchg
cmp
and
popa
mov
jmp
out
out
fnsetpm(287
pushw
rorb
ret
cwtl
lcall
ljmp
xor
sti
jge
add
or
mov
sub
fwait
xchg
mov
inc
mov
frstors
lods
jb
dec
pop
ss
sub
adc
and
arpl
pop
and
mov
loop
sbbb
les
inc
mov
xchg
imul
jecxz
mov
faddl
push
sub
cmp
mov
lcall
mov
call
pop
ret
push
jae
aad
and
aaa
inc
bound
lock
cld
sub
test
movsl
push
inc
cmpsl
pop
mov
nop
pop
int
insb
les
push
aad
aas
popf
cmc
inc
mov
sub
cmp
sahf
or
lods
out
ds
test
and
negl
rorb
mov
inc
outsb
movsl
jp
adc
shrb
xorb
rcrl
mov
cmp
pop
mov
xchg
out
pop
xchg
test
mov
push
and
loope
insl
mov
jne
fdivrs
xor
push
or
or
ja
push
push
pop
sbb
out
enter
push
roll
and
cmp
shll
lcall
xchg
xchg
shr
mov
lret
inc
sub
sub
pushf
cmpsb
es
insb
pusha
rorb
cltd
or
push
into
mov
insb
cs
mov
test
dec
sbb
in
pop
mov
jb
stos
loop
das
lods
aaa
cmp
repnz
pop
mov
lcall
bound
cmp
cmp
dec
test
pop
jle
imul
sub
add
mov
mov
fs
ljmp
xor
xchg
popa
aam
lahf
mov
and
jl
mov
jle
cli
pop
loopnew
jle
sub
xchg
imul
arpl
push
mov
arpl
mov
jae
into
in
jmp
loope
test
jno
cwtl
add
cmp
pop
rcrb
addl
stos
add
add
push
push
fistpl
adc
ror
cmp
out
fimuls
repz
and
push
sub
mov
xor
pop
mov
stos
sub
loop
xor
xchg
aad
repnz
mov
sbb
xchg
fsubrl
daa
add
imul
or
stc
ss
hlt
popa
push
je
xor
adc
les
sbb
mov
dec
inc
popa
cmp
roll
les
jb
xchg
dec
das
push
pop
loope
xchg
stos
rol
int3
xor
xchg
mov
pop
jnp
or
in
mov
and
pop
xor
inc
sbb
data16
into
js
dec
test
pop
mov
push
add
xchg
adc
mov
pop
xchg
inc
and
iret
cmp
cltd
loopne
adc
fs
jb
loop
mov
push
xchg
sahf
ficompl
jne
mov
std
js
jge
cld
push
pop
jo
leave
fmuls
dec
cmpsl
sbb
dec
divl
ss
flds
out
mov
jg
insb
mov
adc
mov
mov
shlb
fwait
xchg
add
scas
lods
iret
stos
cmp
adcb
dec
pusha
jmp
out
xor
lret
push
xchg
or
cmp
xchg
pop
push
mov
pop
dec
aad
xor
les
cwtl
in
sbb
xor
adc
out
xor
xor
cld
mov
imul
pop
jmp
mov
and
icebp
cli
cmpsl
pop
pop
xor
xor
mov
or
push
mov
movsb
cvtps2pi
sub
jp
mov
adc
aad
and
xor
aas
mov
xchg
ljmp
adcb
adc
or
cltd
sbb
and
fwait
mov
mov
pop
cmp
dec
xor
dec
enter
pop
imul
test
int3
push
sub
jg
jnp
dec
cmp
movsb
jl
dec
and
hlt
push
jae
inc
mov
adc
xor
push
aad
or
push
js
mov
cwtl
fildll
scas
dec
out
sub
fwait
lahf
xchg
xor
mov
and
xchg
xor
insl
inc
scas
in
sbb
pop
and
gs
cmp
fistl
cmp
mov
test
mov
nop
add
mov
std
cmp
daa
loop
outsl
or
inc
dec
pushl
xchg
sub
repnz
adc
sub
mov
inc
movsl
subb
sub
aad
loop
mov
or
xchg
adc
mov
nop
xor
pop
mov
and
inc
or
jle
xchg
sub
mov
xchg
ror
sub
dec
and
in
push
jecxz
ror
lea
push
sbb
incb
pop
xchg
addr16
or
insb
or
fidivs
xchg
dec
jmp
popa
std
ficoms
push
cld
or
xor
mov
in
mov
inc
sub
ror
sub
addl
filds
mov
push
pop
mov
mov
popf
push
push
outsl
js
std
roll
movsl
fistpl
test
pop
sub
cmpsl
inc
sbb
and
cmc
lods
inc
ja
sti
subb
out
xchg
push
sbb
push
filds
test
addb
add
es
cmpsb
mov
repnz
les
add
lds
mov
xchg
scas
hlt
stc
xchg
pop
xor
mov
outsb
xlat
jmp
mov
sti
mov
push
shrb
xor
lock
fwait
cmp
sub
lahf
outsb
dec
xor
ds
mov
loop
adc
mov
or
aaa
test
insl
into
dec
pop
sub
sub
sub
sti
or
aas
mov
xchg
cltd
cmc
in
in
fidivs
aas
pusha
leave
fcompl
or
mov
repz
data16
jge
adc
popa
adc
jp
fs
test
mov
ror
test
push
jmp
les
fdivrs
das
fldt
cmp
inc
stos
mov
mov
shrb
adc
push
imul
mov
jbe
mov
rcrl
xlat
addr16
push
test
inc
dec
out
cli
adc
mov
jecxz
pop
sti
lea
pop
mov
sbb
jecxz
enter
inc
lods
testl
fcmovu
stos
mov
pop
test
lds
stos
cs
cmp
into
pop
inc
icebp
and
mov
mov
inc
mov
xor
pop
mov
mov
or
add
sbb
jp
repz
imul
xchg
cmpsl
cltd
std
mov
repz
cli
dec
cmp
cmc
fs
inc
shld
mov
icebp
out
cltd
roll
xchg
test
cmpsl
repnz
rcl
aaa
and
lret
and
cmp
fiaddl
and
loope
and
sub
or
enter
imulb
mov
or
lahf
push
sti
not
cmpsb
call
sub
stos
inc
pop
and
sahf
xor
pop
leave
movsl
in
repnz
ret
jae
mov
mov
inc
sub
xchg
jg
or
push
pop
mov
dec
push
adc
and
sub
xchg
mov
cmp
int3
lods
outsb
loope
adc
pop
dec
ljmp
mov
mov
dec
loope
ret
or
jb
add
sbb
popf
das
subb
push
mov
repz
cmpb
lock
or
jmp
clts
cmpsb
jmp
add
mov
fdivrl
shr
rorl
clc
push
arpl
inc
pop
test
roll
movsl
mov
and
popa
call
push
pop
sbb
jns
mov
xchg
popf
inc
xor
mov
and
bound
mov
cmp
lods
pop
outsb
pop
stc
jmp
test
or
pop
dec
into
mov
xor
and
mov
stos
inc
xor
lods
or
dec
adc
pop
imul
mov
fs
or
mov
xchg
dec
push
lds
xor
in
push
enter
rolb
jb
sbb
mov
fs
mov
adc
push
fisubs
clc
push
push
in
xchg
lock
jmp
mov
rclb
outsl
inc
call
icebp
icebp
jne
inc
lcall
sbb
mov
test
in
mov
leave
jecxz,pn
imulb
cs
sub
test
roll
dec
jo
jl
cld
out
jbe
outsl
cmp
xor
jb
mov
add
scas
rcrb
in
cli
cs
add
addr16
test
adc
cmpsl
sbb
gs
cmpsb
mov
js
push
not
xchg
stos
mov
orb
repz
nop
jb
jnp
add
inc
faddl
inc
int3
cmp
ret
and
mov
mov
sub
nop
test
je
cmp
jg
repnz
sub
inc
lods
xor
ss
add
jae
add
loope
adc
jno
mov
jl
xor
pop
add
cmp
pop
negl
or
sub
jecxz
and
lret
xchg
lods
imull
mov
push
shlb
test
push
push
fwait
sbb
bound
add
or
in
repz
into
cmp
enter
negl
xor
or
push
lcall
call
mov
std
mov
call
in
pop
inc
add
sub
pop
dec
mov
fs
loopne
mov
mov
mov
and
jl
gs
sub
or
and
repz
dec
pop
cmpb
out
das
iret
mov
jp
push
mov
insl
cmp
jp
scas
inc
rolb
xor
movsl
xchg
arpl
int
xor
mov
shl
or
pushf
jb
pushf
add
aas
pop
xchg
cmp
in
aas
cs
add
jbe
cli
xchg
cld
das
insb
call
mov
mov
insl
mov
sub
movsl
mov
inc
xor
inc
add
repnz
aam
adc
inc
pop
sub
sbb
or
mov
mov
call
adc
pushf
insl
sbb
inc
ret
jp
call
sbb
pop
add
mov
xchg
movsl
aaa
sub
cmp
cmp
lcall
push
cmp
out
cmpsl
insb
mov
into
ret
mov
xchg
jle
xchg
add
lea
xchg
fs
jp
or
cmpsb
push
out
push
dec
arpl
push
push
push
es
icebp
sbb
push
rclb
or
cmpsl
scas
les
push
cmpb
loope
jo
xchg
or
push
stos
or
movsl
add
push
inc
mov
dec
jmp
mov
mov
mov
les
imul
pop
add
pop
sub
gs
xchg
pop
sahf
pop
fiadds
test
add
cmp
ror
adc
dec
pop
dec
inc
aad
xlat
rcrb
add
hlt
pop
jecxz
dec
cmp
iret
es
sub
rcl
repnz
jno
std
lret
out
neg
inc
icebp
xchg
push
xchg
adc
in
xchg
mov
and
and
rcll
sbb
lahf
xor
scas
fldl
out
adc
aam
mov
lds
lcall
jle
sbb
pop
mov
in
int
in
lods
dec
mov
cmp
pop
push
cmpsl
fsubl
mov
add
flds
jp
dec
cmp
adc
lcall
jb
enter
test
pop
sub
dec
mov
jmp
push
jne
notb
movsl
mov
or
dec
add
test
push
jbe
push
dec
mov
cmp
fcmovb
ret
out
sti
pop
sbb
fldl
fstpl
jecxz
mov
mov
add
pop
xor
and
push
mov
lds
mov
dec
lcall
pop
jbe
in
out
lods
adc
jno
dec
aam
add
sbb
mov
jbe
js
jecxz
out
mov
cld
push
jecxz
dec
mov
dec
ret
jmp
add
aam
mov
lods
pop
lret
fcmovb
js
aas
cs
fdiv
lret
dec
fildl
ss
imul
mov
jb
ret
mov
stos
das
dec
cmp
dec
mov
mov
pop
push
cld
jne
mov
mov
cmpsb
cltd
repz
loope
xchg
adc
xor
inc
lahf
rorl
leave
loopne
dec
inc
xchg
pop
cmp
fistpl
cmpl
sbb
inc
jne
ja
mov
and
movsl
out
out
cmpsb
sahf
inc
movsl
push
xchg
xor
out
mov
adc
rcr
stos
std
test
jmp
or
ret
out
cmp
add
push
xor
mov
xchg
call
dec
lahf
ret
add
lea
mov
loopne
ja
mov
add
mov
insb
in
jns
std
mov
xor
xchg
xor
ficoml
icebp
add
sub
inc
jecxz
addr16
or
push
cltd
sbb
ret
xchg
mov
ror
mov
popf
pop
daa
lds
or
faddl
fidivl
sbb
inc
dec
sbb
jge
mov
and
add
and
das
mull
xchg
sub
pusha
imul
mov
pop
int
jecxz
fdivrl
dec
lret
testl
faddl
mov
jmp
test
cmp
xchg
fstps
lock
leave
add
push
int
xor
bound
sti
ficompl
mov
cmp
adc
xor
and
mov
ficompl
into
dec
ljmp
adc
pop
xchg
or
cmc
or
dec
insb
pop
popa
mov
imul
shl
cmp
les
and
cmpsl
out
mov
sub
lds
push
js
push
cwtl
arpl
mov
sub
inc
xlat
outsb
lea
nop
sbb
std
jge
imull
push
fldcw
andl
jb
inc
mov
push
loop
bound
dec
stc
aas
movsl
sti
frstor
and
add
sbb
dec
rorb
mov
mov
sub
push
cltd
mov
inc
xchg
xor
jg
and
lea
cmpsl
rcrl
rcrl
or
and
cmp
xchg
loopne
lds
xchg
adc
add
jno
xor
mov
mov
pop
sbb
xor
scas
jecxz
xor
into
mov
mov
popf
call
xor
ss
test
xchg
mov
xor
daa
lret
mov
in
cmpsl
mov
iret
in
jmp
pop
pop
imul
add
add
push
xor
push
sub
leave
sti
js
aad
pusha
mov
je
cmpsl
cmp
xor
xor
mov
imul
push
mov
lea
xchg
imul
lds
xchg
xchg
stc
popf
ret
jg
filds
fwait
xor
mov
mov
and
mov
ds
dec
mov
popa
dec
push
sbb
xchg
add
stos
add
add
inc
jmp
fdivrp
xlat
dec
cmp
sahf
adc
push
frstor
ja
mov
jno
sti
loopne
cmp
nop
fidivrs
ret
jmp
dec
jne
xchg
pushl
sub
xchg
outsb
mov
pop
add
push
mov
inc
mov
cmpsb
add
mov
sub
call
jns
adc
sub
push
sbb
push
adc
jle
mov
mov
mov
push
test
data16
push
addb
mov
cltd
sbb
dec
test
inc
and
dec
les
imul
cmpsl
push
xor
stos
xchg
mov
mov
add
mov
cmc
scas
std
mov
inc
dec
mov
mov
cmc
out
popa
mov
stos
jge
push
lock
sbbl
cmp
xor
mov
mov
adc
sub
push
mov
mov
push
fstpt
xchg
inc
or
lods
xchg
icebp
ja
xor
xchg
das
fdivp
mov
nop
outsb
jbe
in
clc
ret
sbb
mov
dec
or
mov
jl
mov
pop
lods
adc
pop
mov
sub
adc
adc
xchg
fcoms
mov
fchs
sysexit
mov
sysenter
inc
test
lods
sub
pop
rorb
dec
in
mov
inc
or
incl
sub
mov
pop
ja
pop
movsl
clc
cmc
cmp
jbe
jb
pop
cmp
incl
fdivp
push
aam
mov
push
mul
dec
push
pop
pop
push
mov
mov
aas
cmp
leave
mov
pop
sub
mov
lods
aam
sub
das
call
loop
cmp
mov
mov
mov
mov
jb
cmp
test
fildll
or
mov
addr16
js
sub
test
leave
daa
or
xorl
sub
enter
imul
mov
pop
sar
sub
xchg
inc
mov
lret
mov
fstps
mov
lods
aam
in
lock
das
mov
aad
xor
cmovp
loope
and
sbb
clc
not
fs
outsb
adc
decb
mov
iret
push
fwait
jle
repnz
ret
lock
mov
lret
cmp
adc
dec
mov
and
sbb
out
int3
lret
jmp
mov
fnstenv
mov
repz
xor
dec
fsubr
imull
xchg
mov
push
mov
xchg
bound
fldl
mov
stos
cltd
aaa
push
push
cmp
mull
insl
push
sbb
fidivrs
movsb
sbb
sub
mov
xchg
xchg
push
lret
in
outsl
mov
int3
movsb
push
cmp
mov
or
xchg
rcrb
stos
jmp
mov
shll
test
dec
push
ret
mov
sub
dec
sbb
movsb
test
or
xchg
ljmp
fsub
xor
xchg
mov
stc
xchg
mov
xchg
mov
jmp
mov
or
xlat
and
aaa
std
out
and
sbb
add
stos
add
add
jp
ljmp
push
pushf
stos
aad
push
push
mov
ret
ret
out
xor
cmpsl
ja
jge
cmp
rcll
vpsraw
dec
lcall
sahf
jne
adc
cmpb
dec
add
decl
dec
xchg
sub
pop
out
gs
ja
icebp
add
adc
pop
adc
push
pop
ljmp
lret
out
push
mov
enter
lods
aam
fisttpll
xor
inc
movsb
arpl
cmp
cltd
inc
inc
and
mov
inc
xchg
aam
inc
ret
push
dec
lcall
arpl
mov
loopne
es
mov
popf
ficoml
push
cmc
bound
leave
inc
aad
xor
js
push
pusha
mov
push
sbb
sbb
in
cmpl
loope
movsb
fisubrl
stos
pop
sbbl
in
imul
mov
lahf
dec
shrl
lods
cmp
data16
and
pop
sub
add
pushfw
fcoml
inc
lea
pop
jae
cwtl
and
add
dec
mov
xchg
pop
test
xchg
add
jo
call
lret
dec
mov
adc
sbb
mov
push
add
mov
sub
rcr
out
rcll
jnp
pop
sbb
inc
cwtl
sbb
cmp
inc
stc
mov
cmpsl
push
call
xchg
dec
xor
or
inc
jge
xor
test
lcall
xchg
sbb
jecxz
add
shlb
loop
cwtl
adc
push
push
add
lock
xchg
mov
xchg
out
pop
xchg
out
mov
sahf
outsl
out
jg
cmp
std
xchg
mov
jl
pmuludq
insl
mov
xor
rcrl
call
lret
es
popa
ret
mov
enter
mov
roll
out
xchg
push
icebp
adc
push
mov
jmp
mov
or
xchg
movsb
sub
ljmp
mov
scas
pop
mov
cmp
jg
push
xor
mov
xor
lret
jne
adcb
dec
lods
xchg
std
and
mov
or
stos
rorb
xor
sbb
xor
inc
sub
pop
adc
jmp
cmpsl
lods
rcrl
pop
jp
gs
lods
mov
mov
testb
int
enter
repnz
sub
pop
push
std
iret
jmp
hlt
std
repnz
mov
mull
mov
int
mov
addr16
xor
dec
lret
dec
jns
sbb
leave
mov
iret
mov
je
into
push
lea
fldl2e
adc
aas
imul
mov
lret
fstp
sub
es
repnz
sub
fsubs
fwait
jae
dec
loopne
bound
in
xor
cmp
cmp
sbb
jo
mov
and
in
mov
in
and
int
mov
shlb
pop
icebp
dec
es
sti
ret
push
jecxz
fistl
js
pop
out
xchg
imull
adc
dec
in
lock
or
add
or
int3
daa
lds
enter
and
inc
jp
jle
inc
dec
nop
int3
popf
fistps
lea
jmp
aas
sbb
add
js
adcb
push
popa
pop
lret
bnd
lret
sbb
ljmp
lods
popa
push
xchg
fisubrs
sbb
mov
jns
or
and
push
popf
jge
add
lods
or
daa
aas
push
ja
xchg
push
mov
and
cwtl
lahf
lret
ret
lods
cmp
cltd
lea
and
cmc
js
aam
repnz
sub
mov
leave
xchg
mov
mov
ljmp
jne
cmpsb
out
lcall
insb
pop
aaa
cmp
das
adc
lret
xchg
movsl
xor
push
mov
lret
jmp
popf
insb
ficompl
sub
jno
ret
adc
int
dec
outsb
mov
arpl
ss
aaa
pop
jno
add
adc
push
leave
xchg
mov
call
pop
or
inc
in
mov
in
lret
test
mov
jb
add
movsb
int3
adc
in
loope
mov
sti
mov
mov
stos
mov
cli
cmp
outsb
cld
mov
push
sbb
popf
adc
rolb
cmp
push
cwtl
cmp
bound
mov
mov
lods
lock
push
in
roll
inc
mov
pop
icebp
mov
ljmp
or
mov
cmpb
pop
push
insl
push
faddl
sub
int3
testl
xchg
testl
das
cld
ss
int3
jns
mov
fistpll
xchg
mov
daa
add
push
mov
call
xchg
je
mov
adc
popa
scas
std
dec
or
sbb
roll
push
and
int3
cmp
push
add
sub
inc
sub
es
jae
leave
adc
adc
inc
push
scas
pusha
ja
inc
sbb
mov
outsb
inc
daa
test
mov
lock
outsl
and
add
and
insl
imul
insl
push
cmp
in
adc
sbb
addl
xchg
push
cmp
callw
fldenv
xchg
daa
jbe
movsl
lret
add
in
pop
negl
bound
popa
push
cmpsb
xchg
xchg
in
push
nop
js
mov
sub
lock
int3
xchg
roll
mov
pop
mov
xor
sub
sub
out
lods
ret
pop
test
and
das
daa
jbe
stos
faddl
push
jge
push
out
es
movsl
jge
add
in
testb
outsb
push
cmpl
push
ret
pop
ds
xlat
test
pop
loope
fwait
into
mov
mov
mov
cmp
jge
jecxz
jae
add
jge
movsb
mov
in
pop
sub
pop
xchg
pop
repz
movsb
test
or
add
repz
dec
and
jne
push
loopne
inc
cli
and
imulb
lea
hlt
fucomp
jge
bound
pusha
inc
arpl
jne
mov
mov
and
popf
test
fstp
adc
gs
xchg
mov
adc
add
or
cmpsl
out
pop
inc
sbb
xchg
out
sbb
das
jg
aad
ja
xor
stc
jns
push
js
mov
iret
mov
or
jmp
loop
fs
testb
pushf
adcl
cmp
shl
imul
cmp
shlb
cltd
aaa
lods
addl
data16
mov
pop
mov
sahf
sbb
pushf
add
stos
add
add
rol
pop
rdtsc
rorl
xchg
xor
cmp
test
inc
jbe
leave
insb
test
sub
in
mov
leave
icebp
popf
orl
pusha
mov
xor
lret
pop
xor
fisubrl
lods
fisttpll
ss
nop
cli
and
int3
pop
int
outsl
push
xor
jp
xchg
nop
in
cmp
fsubrs
outsb
imul
fists
push
popa
cltd
xchg
push
push
sahf
xchg
aam
add
mov
adc
xchg
repz
and
out
fisttps
mov
or
stos
or
lcall
daa
mov
xchg
mov
push
scas
and
lds
mov
dec
je
ret
ror
fistpl
sub
push
mov
lret
jnp
cltd
outsb
in
pop
jle
inc
lahf
mov
cli
cld
sti
fisttps
subb
aad
addr16
das
sahf
add
mov
add
xchg
xor
mov
inc
cmpsl
xchg
dec
pop
xor
ds
xchg
xor
sti
sub
out
out
and
xchg
aas
fwait
fs
lret
mov
and
arpl
dec
sti
in
cmp
cmp
repz
xchg
jbe,pn
inc
das
adc
adc
push
fstpl
mov
cmpsl
in
insl
rolb
fnsave
sub
stos
stos
xchg
xchg
in
scas
xlat
stos
pop
outsb
jo
or
or
stos
jno
dec
sbb
xchg
jnp
jae
out
push
pop
adc
das
cmpsl
mov
jmp
cltd
sti
jnp
or
jg
inc
rorl
loop
pop
insl
cwtl
sbb
ret
mov
jp
pop
stc
fiadds
movsb
or
cli
mov
nop
into
cmp
call
rolb
ss
flds
nop
lcall
push
and
test
sub
fbld
movsl
jns
js
filds
int3
add
mov
jge
imul
add
push
rcl
xor
test
fdivp
cltd
in
lock
int3
popf
mov
loop
inc
xchg
jae
or
outsl
std
jmp
mov
stc
cmp
sahf
adc
punpckhwd
adc
jecxz
or
push
or
lea
pop
mov
imul
scas
inc
jecxz
sahf
hlt
mov
mov
xchg
movsl
lcall
inc
in
push
adc
pop
inc
xchg
inc
aaa
shrl
mull
lcall
xor
imul
mov
add
xor
mov
imul
or
std
loop
add
and
xchg
inc
fs
or
sahf
inc
sti
inc
outsl
pop
cwtl
dec
jae
popa
mov
scas
jae
loope
inc
call
xlat
aas
and
pop
jbe
xchg
cmp
sub
dec
pop
pop
in
or
sbb
dec
call
add
aam
xor
popa
loop
push
sbb
adc
inc
pop
jp
out
int3
adc
bnd
inc
cltd
notl
shll
mov
stos
adc
ror
js
xchg
jae
sti
mov
xor
sbbl
aam
test
cmp
in
mov
dec
std
stos
notb
xchg
data16
cmp
and
dec
lods
xchg
jmp
xchg
mov
es
ss
loop
jl
out
pop
nop
outsb
xor
addr16
inc
fdivrp
out
ja
or
pop
jl
push
add
jb
movsb
lock
inc
iret
xchg
cld
or
dec
sub
sub
cmp
in
push
and
popf
fdivs
inc
ficoms
ja
inc
and
jle
add
inc
adcl
pop
adc
lahf
dec
lods
sbb
mov
mov
xchg
push
inc
dec
es
adc
adcl
dec
add
mov
out
xor
div
cwtl
dec
adc
xor
cmpsl
scas
inc
mov
pop
popl
pusha
insb
adc
dec
out
adc
enter
dec
hlt
mov
scas
xor
or
and
cmp
mov
stos
test
adc
syscall
sbb
ja
jle
imul
inc
pop
ja
xor
outsb
push
mov
mov
add
les
mov
inc
inc
mul
inc
popa
aaa
xor
mov
cmc
out
inc
ficomps
lcall
jecxz
rorb
xor
sub
mov
xchg
call
shrb
sub
lods
jbe
das
jnp
inc
loope
popf
addb
ljmp
imul
add
fcoms
cmpsb
xchg
lods
clc
sbb
jbe
dec
xchg
outsl
inc
dec
inc
mov
mov
jbe
or
xor
or
call
fcomip
lcall
test
inc
aas
clc
push
ret
inc
lods
je
dec
sub
pop
push
jle
out
mov
cltd
mov
dec
ficompl
addr16
xlat
int3
sbb
lret
mov
out
and
lahf
jbe
out
imul
push
fwait
sbb
push
stos
je
mov
and
es
mov
leave
es
add
int
jns
testb
push
mov
mov
test
test
int3
jg
int3
sub
stc
jl
or
movsl
shrl
push
pop
pop
das
jecxz
testl
inc
call
scas
jbe
and
andl
push
pop
cmpb
add
adc
je
cmpsl
icebp
leave
addb
sub
adc
clc
filds
in
jns
push
mov
stos
cmc
cltd
test
dec
mov
imul
dec
mov
pop
dec
lret
ficompl
ljmp
jae
addr16
or
out
je
cmc
ret
scas
dec
mov
fmuls
pushf
ret
or
jge
push
test
aas
jns
add
insb
inc
mov
out
sarl
repz
pop
shrl
xchg
popa
inc
push
push
cmp
adc
jo
sbb
mov
into
into
push
imul
orl
sub
mov
ret
imul
inc
jp
gs
sbb
xchg
pusha
push
ss
insb
mov
jl
cs
pop
xor
jg
pop
loope
lcall
sub
dec
inc
jl
pushl
adc
dec
mov
mov
enter
fdivs
pop
test
add
addl
aad
test
inc
adc
jge
cmp
cli
cs
out
jbe
and
lcall
ja
jmp
out
mov
pop
sbb
mov
pop
idivb
mov
lret
js
stc
xchg
gs
in
int3
pop
fwait
loopne
sub
in
imul
test
js
dec
add
cltd
mov
xor
movsb
add
stos
add
add
mov
sub
and
mov
cmpsl
push
dec
dec
lahf
push
stos
es
hlt
scas
add
imulb
sub
std
shll
in
adc
sahf
stos
cmp
xor
pop
imul
gs
sbb
int3
xchg
nop
xor
jmp
add
mov
mov
rclb
dec
inc
jo
rcrb
test
lds
int
push
jg
lock
mov
arpl
jge
cmp
inc
and
sbbl
gs
das
pop
inc
shlb
add
mov
roll
aad
sbb
push
out
rep
or
shrl
nop
jne
movsb
and
inc
movsl
mov
jbe
and
jecxz
movsl
arpl
jl
sbb
push
inc
cwtl
adc
jp
cmp
mov
fwait
pmulhw
aas
xchg
ja
nop
sti
jle
dec
cmpl
mov
and
daa
cmp
test
fwait
movsl
jo
rorb
movsl
push
fisubrs
inc
les
cmc
mov
xlat
scas
mov
daa
int
out
loope
mov
xchg
inc
rcrl
add
mov
ljmp
popa
inc
pop
orb
call
xchg
add
push
xchg
and
xor
idivl
xchg
sbb
imul
inc
movsb
mov
xor
mov
repz
mov
jno
add
into
xchg
jecxz
inc
mov
xchg
jo,pt
or
aaa
push
addr16
jns
sub
repz
lcall
cmp
mov
mov
sbb
cmp
adc
loope
les
cwtl
adc
daa
popa
sbb
ljmp
mov
cmp
mov
ljmp
pop
mov
xchg
adc
push
or
mov
adc
imul
mov
mov
ret
push
lock
gs
lds
adc
add
lret
push
jle
fidivrl
sbbl
cs
daa
aaa
push
mov
insb
mov
mov
push
inc
fcomps
ljmp
scas
enter
xchg
sbb
int
repz
xor
aas
xlat
stos
outsb
xor
pop
jg
subl
int
or
out
bound
popf
add
es
jge
jl
sbb
jae
fwait
mov
jp
pop
and
xchg
imul
shlb
mov
push
mov
mov
mov
cmp
int
pusha
add
repz
aad
cld
outsl
call
mov
aad
pop
test
out
mov
lock
inc
rcll
dec
dec
out
std
insb
xchg
pusha
push
aaa
mov
fwait
out
fcmovne
jmp
cmp
imul
push
and
adcb
aam
mov
sarl
sub
jmp
outsl
aaa
lods
cmp
sbb
jo
rep
push
lret
cmpsl
mov
inc
add
xor
mov
push
lret
punpcklbw
jne
pop
inc
scas
cmp
mov
xchg
mov
dec
popa
pop
pop
bound
fsubs
dec
cmp
flds
jae
jo
xor
add
xor
cmp
push
bound
cmpsl
add
stos
add
add
dec
dec
or
icebp
and
test
js
outsb
sbb
and
xlat
mov
push
sub
mov
cltd
icebp
es
test
popa
arpl
or
into
std
iret
sahf
cld
out
sub
repz
and
clc
pop
jb
movsb
xchg
sbb
xchg
xorb
push
xor
push
cmp
fidivl
cmpsb
scas
sbb
sub
sub
addr16
negb
push
test
andb
das
lahf
leave
jmp
fiaddl
ret
xchg
push
mov
jbe
call
inc
mov
and
es
adcl
push
scas
loope
dec
lds
rol
inc
push
inc
sub
sarb
inc
sub
jns
fs
pop
int
adc
icebp
daa
hlt
and
int
inc
and
fisttpl
fnstcw
push
imul
mov
mov
outsb
pop
jae
insb
cwtl
aad
xlat
jne
and
jmp
test
pop
icebp
je
out
pushf
popa
daa
gs
jle
lcall
gs
sbb
inc
cmc
scas
mov
adc
dec
push
jne
les
push
js
popa
daa
ret
addr16
jnp
shrl
push
mov
mov
mov
cmp
pop
int3
sub
fistpll
xbegin
shll
dec
adc
mov
xor
xor
fldenv
push
fldt
test
push
js
movb
jmp
inc
cmc
pop
push
or
out
add
add
xchg
xchg
sub
pop
sub
in
pop
bswap
daa
xor
or
daa
repnz
mov
xchg
jecxz
and
insl
test
sub
jp
xor
data16
outsb
mov
and
or
mov
and
repnz
add
aas
dec
lods
aaa
gs
sub
cmp
xchg
sub
lods
pop
sbb
call
inc
sbb
je
push
arpl
push
mov
fadds
jae
or
sbb
shrl
lret
add
pop
mov
lcall
sub
jle
xchg
xchg
leave
loop
add
imul
pop
leave
cmpsl
test
imul
rorb
dec
cmp
pop
jecxz
mov
mov
int3
pushf
dec
in
addr16
mov
or
cs
cmp
sub
and
sti
movb
sbb
call
int3
xor
jae
sbb
mov
pop
mov
mov
ret
sbb
mov
push
inc
insb
ds
jno
inc
pop
lret
push
fistpl
jnp
jp
dec
mov
adc
sbb
jno
stos
data16
push
add
push
xchg
add
pop
cwtl
fildll
mov
and
jmp
xchg
shrl
mov
push
das
fcoml
and
int3
nop
xchg
icebp
xchg
adc
repnz
add
mov
aad
cltd
adc
xchg
ja
test
jl
jg
jecxz
dec
mov
fidivrs
adc
pop
add
inc
loope
in
sub
xchg
jg
shl
popf
adc
loop
lret
jge
loop
xchg
sbb
xor
aad
insl
mov
or
inc
cs
cmp
or
ss
inc
add
cmpsb
inc
jo
and
jno
adcb
push
add
add
dec
push
ret
mov
jge
cmp
in
jecxz
inc
jb
add
stos
add
add
mov
jmp
shll
addr16
and
pop
sub
pop
repz
enter
mov
stos
cs
pop
sbb
les
inc
or
loopne
test
sbb
push
pop
and
xchg
push
push
jns
decl
dec
in
inc
std
movsl
dec
xor
mov
mov
xor
adc
push
push
push
push
mov
stc
jns
push
add
push
mov
arpl
je
aas
and
loopne
sarb
add
call
mov
dec
movsl
push
jae
bound
out
mov
test
jmp
ret
loope
ss
jns
add
mov
sbb
push
rcr
pop
mov
cmc
mov
cs
dec
adc
mov
mov
sub
ss
jb
aas
sbb
lahf
mov
inc
add
pop
push
nop
dec
stos
dec
sbb
or
mull
adc
inc
pop
mov
push
cmpsl
mov
push
flds
or
add
mov
xor
fcomi
cmp
gs
mov
ljmp
dec
ret
mov
into
aad
pushf
or
jmp
inc
jle
imul
neg
aaa
mulb
lcall
and
pop
ret
pop
out
les
inc
inc
in
ficoml
jbe
sbb
jae
fwait
js
test
xor
mov
shlb
aad
or
cli
inc
sbb
nop
sahf
and
fildl
mov
inc
jb
or
imul
push
sub
clc
jae
shl
mov
mov
rclb
inc
cmpsl
scas
lods
scas
dec
inc
xlat
lcall
negb
jge
mov
push
mov
pop
mov
adc
test
cmp
xchg
dec
push
mov
push
addr16
fnstsw
pushl
sub
push
fstpl
xor
cmp
xor
fs
je
inc
mov
dec
or
xchg
outsb
pop
and
pop
xor
and
mov
or
xchg
cmp
pop
test
incl
stc
xchg
pop
stc
xchg
cmpsl
and
sbb
cmp
mov
xchg
into
movl
mov
push
push
icebp
cmp
pop
shr
cmp
cmp
bound
neg
bound
lock
dec
rolb
cmp
dec
mov
icebp
decl
inc
test
les
add
movsb
or
push
dec
cbtw
xorl
imul
mov
push
sbb
pop
data16
mov
push
cmp
es
movsl
cmpsb
inc
fs
sbb
sub
ret
mov
addr16
hlt
lock
gs
dec
adc
mov
mov
int3
into
fidivrl
popa
add
movsb
xchg
js
test
dec
out
out
rcll
aad
int3
in
into
dec
cmp
add
daa
rcrb
or
ficompl
out
xchg
cld
insb
adc
mov
xchg
mov
iret
xchg
adc
push
jae
add
dec
mov
lahf
and
sub
mov
out
call
cmpsb
adc
ja
mov
popf
jns
arpl
dec
sbb
out
sub
imul
cmp
add
sbb
in
jmp
lahf
jle
stos
xchg
sbb
add
add
sub
fsubp
mov
lea
xchg
and
das
pop
sbb
icebp
enter
sbb
scas
divb
mov
sti
mov
cmpsb
adc
and
mov
and
mov
or
in
je
pop
int
adc
pop
mov
xchg
dec
fwait
imul
sbb
mov
in
fimuls
mov
outsl
adcb
pop
aaa
test
mov
mov
cwtl
cmp
pusha
mov
cltd
pusha
dec
ds
sahf
and
push
dec
fs
in
jl
bound
add
mulb
lock
push
mov
sbb
adc
outsb
pop
dec
sbb
sub
dec
and
out
mov
dec
clc
andb
test
mov
pop
bound
loop
dec
aaa
and
loop
push
xor
mov
inc
sbb
and
in
lahf
addr16
cmp
test
mov
hlt
jmp
sub
add
jno
inc
aaa
and
hlt
xchg
iret
jae
mov
aas
push
pop
mov
imul
sbb
adc
and
adc
pusha
sbb
mov
ja
mov
loopne
enter
adc
sub
popa
gs
push
adc
scas
and
xchg
in
imul
dec
mov
stos
pslld
negb
call
addl
inc
cwtl
push
dec
mov
jns
fsubl
ja
and
sub
dec
dec
jns
or
mov
cmovge
adc
mov
mov
in
hlt
sbb
outsl
les
fdivrs
lahf
add
inc
xchg
dec
and
xor
mov
pop
dec
test
sub
std
mov
jbe
sbb
pop
aas
dec
lcall
dec
test
scas
mov
orl
add
lods
xchg
outsl
shr
xlat
lds
repz
test
sbb
aaa
adc
in
loopne
bound
cli
rcrb
dec
pop
mov
fs
and
pop
or
ss
mov
lret
pop
jbe
bound
aaa
stos
daa
lods
cli
enter
mov
lcall
inc
add
arpl
jbe
sbb
int
sub
mov
lods
shlb
xor
popf
imul
movsl
inc
mov
mov
add
xor
adc
sbb
pop
adc
insl
push
jle
push
push
or
out
push
push
cmpsl
test
test
imull
dec
xor
pushf
outsb
inc
in
pop
data16
mov
lods
mov
movsl
mov
lods
call
push
sbb
sar
inc
ret
sub
mov
out
icebp
cs
lock
cmc
dec
mov
subps
dec
sub
rol
fiadds
cs
mov
mov
add
addb
push
pop
fisubrl
addr16
xchg
test
sbb
pop
movsb
pop
and
pop
call
or
push
push
aaa
cmpsb
inc
jnp
pusha
mov
xchg
or
mov
fs
adc
add
push
gs
sub
mov
pushf
movsb
dec
dec
push
shll
aam
je
cmp
aad
nop
mov
fwait
push
lds
add
mov
decl
mov
pop
ror
add
stos
add
add
cmp
ror
jb
push
inc
pop
ret
mov
adc
mov
out
shlb
adc
loop
movzbl
in
inc
mov
lret
push
dec
mov
insl
add
inc
filds
xlat
push
cmp
sbb
mov
add
jl
inc
loop
data16
mov
mov
imul
sahf
test
pop
inc
ss
jle
add
imul
dec
push
xchg
ret
push
or
push
mov
mov
aaa
nopl
push
xor
test
push
mov
mov
movsb
fldl
inc
jae
dec
outsl
test
test
adc
scas
or
pop
push
xchg
sbbl
mov
dec
rcrl
nop
cmp
pop
inc
inc
faddl
mov
fisubs
ljmp
fcoml
pushl
addb
sub
das
je
sub
sbb
imul
mov
movsl
insl
dec
ja
push
mov
and
push
jmp
xchg
jbe
xchg
sbb
cs
mov
in
inc
movaps
mov
ret
insb
es
pop
dec
adc
and
cmpb
es
mov
cmp
cmp
js
pop
mov
mov
rcr
jns
sti
push
sbb
stos
add
enter
bound
rolb
push
test
cmpsb
sbb
mov
push
rcll
lcall
jae
ds
mov
in
shll
test
leave
push
ret
popf
scas
mov
jno
xor
jnp
xchg
rdtsc
pushf
or
and
mov
mov
orb
push
popa
push
or
pop
roll
mov
dec
cmp
adc
xor
mov
add
movsb
js
adc
lret
mov
or
cli
das
out
xchg
xchg
aam
sub
mov
rolb
jo
inc
mov
mov
add
rolb
sub
jmp
out
push
data16
mov
test
jo
pushl
repnz
push
scas
add
dec
mov
xor
stos
jns
push
xor
ds
int3
xor
fldenv
or
cmpsb
jns
sbb
sub
lcall
push
out
loopne
out
pusha
mov
add
dec
pop
mov
adc
cmp
jle
mov
xchg
lods
sbbb
lcall
and
stos
xor
ljmp
test
adc
push
dec
cmpsb
jle
pusha
rcll
sub
mov
outsb
call
cmp
enter
outsb
insl
out
shll
lds
jb
daa
int
adc
movsl
xchg
and
imul
mov
fdivrl
jb
gs
add
std
sbb
mov
in
dec
dec
add
repz
dec
pop
inc
and
sbb
xor
mov
mov
mov
sub
jne
pop
cmpsb
push
call
in
aam
mov
sti
mov
xlat
lcall
fwait
pop
pop
xchg
mov
jne
inc
jmp
movsl
add
dec
inc
cmp
xor
xorb
icebp
lret
aam
imul
lret
imulb
mov
add
adc
add
jge
jo
jge
decb
scas
xchg
mov
dec
add
mov
add
add
pop
pop
repnz
pop
arpl
sub
loope
jp
lods
or
mov
jne
mov
gs
popa
inc
data16
negl
in
push
xchg
pop
mov
xchg
les
mov
jp
rolb
sub
rcr
adc
pop
or
lahf
in
or
daa
cwtl
leave
in
out
imul
pop
pusha
mov
xchg
aaa
sub
dec
xor
test
test
add
jl
outsl
dec
xlat
insb
mov
jg
sti
idiv
sub
fwait
dec
pop
xchg
scas
and
popf
aad
sub
pusha
je
pop
sbbl
daa
push
cltd
ljmp
ljmp
out
cmpsb
pop
mov
pop
cwtl
gs
clc
dec
inc
mov
cmp
dec
lcall
jbe
sti
sti
fisttpll
push
and
cmp
pop
call
les
stc
rcll
pop
nop
ds
add
aad
rolb
movsl
xchg
into
inc
sbb
inc
addl
jae
rcrl
pop
in
add
insb
mov
ret
push
or
ffreep
add
sbb
test
cmp
subb
inc
les
aad
push
and
scas
xchg
mov
insb
fwait
mov
add
push
test
mov
pmaxsw
je
shrl
pop
jge
shr
cmp
out
push
add
sbb
mov
xor
add
push
mov
mov
das
inc
dec
xlat
loop
out
shl
dec
scas
aad
push
shrb
add
sbb
pop
imul
loope
mov
lret
mov
cmpsl
push
out
and
mov
int
or
xor
or
sub
mov
xor
mov
push
pushl
cmp
mov
test
mov
icebp
or
mov
sub
lahf
hlt
aas
fadd
mov
push
aaa
mov
loopne
ret
cmp
pop
sub
push
loope
loop
jp
lahf
stos
rcll
jae
xchg
sbb
mov
in
inc
mov
jge
mov
rclb
test
pop
cmp
push
hlt
push
mov
icebp
and
das
fdivl
dec
adc
xchg
jne
movsb
je
cmpsb
push
jg
cltd
xchg
mov
push
jecxz
rorl
xchg
mov
mov
enter
lret
sub
out
jae
mov
mov
test
insl
or
mov
cmp
mov
mov
fisubs
loopne
mov
mov
dec
sub
lret
insb
stos
pop
push
stc
out
int3
fbstp
nop
mov
and
sti
out
sub
and
int
jmp
xchg
mov
gs
repz
popa
mov
test
add
addb
ud2
pop
jecxz
mov
mov
lret
out
pop
stos
push
sub
aas
pop
mov
xchg
and
ja
test
out
std
cmpb
push
ret
leave
lret
sbb
push
jbe
push
imul
arpl
frstor
or
loope
cld
and
sbb
ret
mov
cld
xchg
loop
sbb
in
insl
cs
add
dec
add
in
jp
jp
in
sarl
data16
push
mov
add
push
cmpsb
out
add
jge
iret
fisttps
mov
push
xchg
push
sub
or
jbe
mov
mov
cmc
mov
or
jo
std
in
or
sbb
fistl
aaa
inc
and
subl
stc
pop
dec
xor
mov
les
xorl
mov
test
fdivl
cmp
bound
inc
push
jl
arpl
sbb
ret
add
pop
or
test
movsl
jecxz
imul
jns
cmpsl
and
mov
sbb
or
movb
sbb
xchg
cmp
std
dec
sbb
dec
push
sahf
xor
lds
movl
fistps
cmpsl
addl
or
jge
jns
cmpsl
ret
cmp
add
mov
pop
xchg
shll
add
push
aaa
addr16
movd
rclb
shl
into
aad
xor
aaa
sub
xchg
leave
out
movsl
dec
icebp
test
test
scas
cltd
scas
inc
lock
sbb
pop
sar
dec
mov
xor
push
bound
insl
in
mov
aam
in
arpl
inc
dec
int3
xchg
dec
push
lahf
cmp
xchg
dec
push
icebp
lret
push
das
ret
xor
loop
adc
adc
in
ljmp
xchg
mov
or
push
mov
popa
outsl
xchg
sbbl
sbb
pop
and
sub
push
in
xor
jg
lods
mov
mov
push
mov
pop
sahf
cmp
cmp
mov
xchg
xor
jno
movsb
pusha
adc
lods
lcall
mov
mov
arpl
or
mov
insl
sbb
outsb
inc
stos
dec
popa
push
cli
loopne
fimuls
icebp
add
fwait
insl
push
push
xor
pop
mov
or
fists
pop
add
cmp
or
inc
inc
mov
sub
or
sbbb
push
xchg
or
sbb
test
xlat
mov
xor
call
sti
mov
stos
mov
add
insb
test
clc
jle
scas
xchg
int
sub
mov
dec
mov
dec
lahf
stos
or
fmulp
cmpsl
int
mov
dec
mov
fmull
fcmovnb
inc
pop
push
ljmp
pop
xor
out
adc
xor
jg
and
outsl
cmp
lock
xor
lods
adc
test
std
fldcw
mov
add
pop
mov
scas
inc
cmc
test
rorb
roll
outsb
adc
into
call
cmp
shrb
xor
lahf
mov
and
nop
lret
push
orl
mov
push
jmp
aas
mov
cmp
imul
dec
sarb
dec
stc
and
jns
xchg
push
push
mov
ja
pop
pop
cli
data16
cmpsb
sub
lea
iret
sbb
mov
ja
hlt
xchg
scas
dec
stos
dec
repz
jp
jae
push
xchg
aaa
mov
fxsave
pop
or
dec
push
pop
xchg
jns
and
iret
inc
icebp
notl
add
push
pop
push
inc
xlat
xchg
imul
push
mov
push
dec
xchg
mov
mov
pop
dec
ljmp
and
xor
push
fcomps
mov
mov
fmuls
rolb
imul
lahf
push
jl
dec
mov
mov
add
lds
test
xlat
adc
inc
add
xor
cmp
repz
ljmp
imul
xchg
xlat
sbb
imul
xchg
inc
test
jecxz
mov
movsb
mov
sub
jns
fistps
movsl
fstpl
loope
jnp,pt
adc
shll
fidivrs
mov
out
sbb
fisttpll
sub
fdivs
std
push
into
push
shll
repz
mov
cmc
repz
adcl
ja
dec
fistl
add
pushf
jle
cmp
fcoms
gs
js
mov
pusha
and
jecxz
or
or
cwtl
jl
jmp
loop
mov
daa
sbb
push
insb
pop
rcrb
xchg
xchg
sahf
lock
push
inc
pop
outsl
loop
jg
add
sti
ret
test
jnp
jnp
in
sar
pop
mov
sbb
xor
aam
jbe
dec
add
push
fsubl
inc
sub
jne
outsb
push
lea
push
out
jp
pop
inc
lods
sbb
inc
unpcklps
cmp
mov
sub
jb
insl
jmp
adc
nop
push
js
mov
push
dec
dec
mov
test
mov
mov
jle
pop
fs
int3
adc
mov
mov
sub
loopne
int3
pop
xor
push
sub
das
pop
jo
mov
jle
stos
mov
cmp
inc
xchg
jp
xor
fsubrs
push
lock
adc
scas
enter
dec
sub
lods
mov
jne
and
scas
jo
popa
sbb
xchg
mov
gs
inc
jge
cmpsl
dec
and
adc
aad
les
fists
cmp
add
shrb
dec
outsb
xchg
cpuid
pop
js
cmc
fdivs
xor
xchg
scas
xchg
popf
mov
imul
fs
sub
xor
into
icebp
sahf
sub
or
sarb
rclb
pop
popa
test
in
sarb
in
mov
mov
mov
loopne
jb
xor
je
add
nop
ss
stc
fisttpl
inc
ret
fstpl
ror
fnstenv
arpl
jmp
push
or
cwtl
xlat
sbb
cwtl
mov
or
fs
mov
push
adc
sbb
pop
rclb
push
cmp
flds
jno
shrb
daa
sbb
mov
xor
pop
aad
pop
push
sbb
push
ret
jmp
fdivs
adc
xor
pop
bound
aas
gs
xchg
sub
pop
test
sub
sarl
stos
jg
add
or
and
adc
hlt
or
rorb
xchg
adc
das
cmp
repnz
jmp
dec
int3
js
jg
jae
hlt
les
repz
sub
jle
mov
pop
and
cli
mov
inc
imul
sbbb
cld
and
fisubrs
test
xor
icebp
and
mov
lods
aas
push
aas
sub
jecxz
push
shlb
push
or
js
and
add
mov
divl
aaa
shll
dec
lret
dec
sub
xor
jmp
repz
inc
call
sub
out
or
cbtw
les
add
add
out
mov
cmp
dec
mov
bnd
add
stos
add
add
lods
movsb
pop
cmp
push
mov
addr16
push
rclb
arpl
stos
lods
dec
pop
dec
push
push
lret
mov
mov
and
arpl
xchg
xchg
gs
inc
dec
sub
xlat
jno
push
pop
push
sub
fidivl
and
mov
pop
bound
daa
mov
mov
int3
sahf
repz
cmp
cwtl
sbb
fidivs
pop
pop
test
loop
imul
push
lret
fnstsw
push
adc
fdivl
xor
pop
lret
aaa
jg
and
insl
jne
or
sbb
pop
ret
insl
sub
sub
je
sti
sbb
jb
sbb
mov
or
dec
mov
decb
adc
lahf
adc
jmp
in
adc
or
pop
jo
dec
adc
fcmovnu
pextrw
inc
sbb
xorl
adc
shl
enter
pmaxsw
cmp
jne
pop
cmpsb
js
and
fidivrl
es
inc
jle
popa
cmp
sti
sub
mov
add
and
dec
jmp
lret
mov
jp
dec
xchg
lea
fildll
jp
insl
push
mul
jp
push
lldt
xor
in
aaa
sbb
xchg
int
mov
lcall
cmpsl
popf
out
jp
sub
addr16
mov
adc
sbb
jmp
and
jne
add
test
push
mov
imul
fwait
or
scas
sbb
push
dec
inc
ret
adc
jmp
out
adc
or
cmp
pushf
pop
xchg
adc
xor
pushf
imul
jl
mov
dec
imul
pop
add
aam
incl
and
loope
add
dec
push
mov
out
mov
add
jb
add
inc
loope
call
cmp
fisttpl
shlb
jns
xor
mov
adc
mov
test
faddl
sbb
or
add
out
cmpb
gs
bound
pop
sti
sbb
adc
mov
xor
sub
clc
pop
jnp
testb
jg
lock
push
pop
and
push
roll
test
jg
adc
icebp
pop
mov
popa
pop
loope
and
sub
lret
xchg
mov
cli
scas
fistps
mov
movsb
jne
jmp
jnp
dec
clc
sarb
add
in
jbe
ret
movsb
and
data16
or
shll
push
xorl
mov
lea
aaa
xchg
insl
adc
lret
xchg
and
sbb
scas
cmp
mov
jl
adc
movsl
mov
and
insl
pop
adc
aaa
mov
sub
push
ja
outsl
in
gs
mov
jg
mov
pop
fdivl
jne
or
scas
icebp
sti
enter
xor
lahf
pop
pop
sahf
adc
outsl
test
xchg
jb
jmp
dec
xor
cmp
mov
inc
sbb
pop
xor
cmp
sbb
cmp
fxch
mov
lahf
sbb
ss
xchg
cli
jmp
dec
mov
pop
push
xor
add
mov
xor
icebp
lret
add
stos
add
add
xlat
aaa
sbb
lds
nop
fadds
push
leave
pop
jecxz
or
cmp
test
out
sahf
inc
shrb
dec
insl
mov
mov
addr16
lds
pop
dec
lds
popf
outsl
dec
push
setl
jbe
fnstenv
mov
or
fs
sbb
not
push
scas
jne
pop
enter
pop
xor
pop
push
mov
lods
mov
xor
fistpl
clc
adc
fcomi
cld
out
test
push
and
pop
fildll
push
push
inc
insb
or
mov
rolb
das
pop
jmp
aad
les
lahf
adcl
out
xor
sbb
out
inc
jnp
adc
or
rol
sub
adc
push
mov
fidivrl
lods
adc
out
xchg
jg
lods
sbb
mov
dec
jb
mov
loope
adc
xor
aas
mov
sti
xlat
fwait
push
push
inc
aas
jge
push
adc
cmpsb
xor
idivb
fsubrs
sbb
std
xor
add
sbb
ficompl
add
call
lock
sti
das
test
gs
and
mov
push
insl
fcmovu
sbb
push
push
adc
mov
notb
push
pushfw
test
popa
and
mov
pop
mov
jg
jns
rorb
std
clc
arpl
rcrl
push
or
scas
mov
inc
or
ljmp
cmp
mov
sarl
out
aam
jle
xchg
mov
imul
call
bound
xchg
xor
mov
xchg
xchg
stos
popa
inc
popf
adc
add
mov
pop
xlat
push
imul
xchg
aaa
scas
movsb
jns
cltd
inc
or
mul
fnstcw
movsl
cmp
and
push
push
das
mov
add
insb
or
cmp
mov
sarb
cmp
jns
ds
ja
sub
shll
mov
xor
cmp
ret
iret
imul
fimuls
xor
inc
mov
ficoms
or
out
test
pop
mov
cli
ds
inc
test
jge
loop
outsb
pushf
aad
lret
btr
xor
and
enter
jle
xor
adc
cmpsb
adc
mov
mov
adc
jo
inc
cmp
gs
inc
mov
sbb
push
inc
dec
inc
testb
out
sbb
mov
incl
mov
in
aad
pop
shrb
mov
cltd
mov
add
sub
jns
dec
mov
ret
mov
mov
out
leave
test
jbe
ds
xlat
in
mov
jg
jae
shrl
lret
mov
sbb
testl
cli
icebp
sbb
fmuls
cli
inc
mov
adc
add
hlt
add
lea
push
popf
cmpsl
lret
mov
xor
push
daa
popa
or
sarl
cmc
mov
stc
cmp
cmp
ja
or
jbe
lcall
mulb
jne
add
popa
mov
adcl
jecxz
push
cmp
pop
xchg
lahf
and
dec
sbb
jmp
sbb
add
mov
cltd
push
mov
add
lods
add
mov
sbb
sbb
add
cmp
jnp
dec
pop
out
test
add
push
dec
loop
loope
adc
fprem1
addr16
mov
cmp
push
cld
and
mov
sbb
mov
sbb
mov
dec
jge
pop
popf
sub
adc
outsl
sti
mov
pushf
mov
mov
sub
ja
and
in
mov
fucomi
pushf
mov
jg
das
mov
in
out
mov
push
mov
mov
push
or
ja
mov
imul
aas
mov
mov
ja
pop
cmp
push
push
add
xor
rorb
fldt
push
cs
loopne
mov
addl
fs
push
dec
pop
cmp
jnp
xchg
mov
mov
test
and
or
stc
mov
sub
insl
cmpb
sub
xchg
imul
inc
jb
adcb
hlt
iret
es
dec
test
jmp
push
pusha
pop
shrl
lahf
xchg
pop
jbe
mov
pop
cs
shll
xchg
pop
shrl
dec
rclb
mov
notb
xchg
cmc
lds
arpl
test
ljmp
and
sub
insb
push
shl
sbb
inc
ror
xchg
inc
xchg
lods
add
loope
push
mov
mov
push
fldcw
in
cmp
fwait
push
inc
std
and
push
jp
dec
mov
dec
add
lods
push
mov
loop
push
scas
roll
or
xor
cmp
lcall
xor
lea
aad
push
xor
aam
jge
xlat
shr
push
pop
je
jns
in
push
sahf
sbb
jo
mov
arpl
inc
das
lock
mov
xlat
lcallw
dec
fdivl
or
out
mov
xor
ja
cmp
sub
pop
pop
mov
lret
lea
mov
xchg
push
and
popl
xchg
int3
push
shrb
push
mov
lahf
sub
cmp
fldenv
in
js
movsl
push
pop
xchg
repz
xchg
in
dec
out
das
int
push
dec
inc
sbb
mov
or
in
sahf
loopne
mul
loope
push
cmp
pop
mov
inc
movsb
ret
xor
nop
lods
sub
cmp
mov
movsl
jns
rorb
push
dec
inc
clc
sbb
pop
mov
sub
push
fcompl
xchg
cmp
adc
addr16
dec
xor
subb
push
bound
or
stc
mov
mov
inc
inc
ret
mov
jbe
push
je
outsb
dec
ljmp
addr16
push
push
loop
fcmovb
or
imul
push
pop
cmp
pusha
and
ficoml
loope
bound
shrb
lret
mov
mov
xchg
and
jecxz
scas
sbb
addr16
jg
or
pop
jl
xor
cltd
mov
outsb
lcall
jl
lret
mov
sahf
push
add
fcoml
test
cmp
cmp
xor
in
cmp
add
aaa
or
add
sub
cmpsb
jno
in
cmp
cs
ret
lret
sub
in
mov
jge
push
lcall
ljmp
es
iret
pop
add
dec
or
scas
jmp
popa
mov
or
iret
xorb
add
aam
mov
mov
fs
fcomi
pop
test
into
lret
mov
mov
pop
jnp
pop
ficomps
cmp
fwait
pop
push
cmp
pop
test
dec
testb
fs
iret
lcall
jl
or
movsl
dec
push
or
popf
imul
pop
repnz
mov
jg
shlb
xor
pop
jb
jno
sahf
push
sub
loop
dec
sub
adc
test
movsl
jl
notb
outsb
cmp
adc
push
popa
ss
pop
fdivs
cmpsl
fstps
out
out
sub
mul
xor
or
fwait
ret
xor
push
cmpsl
mov
rorl
jecxz
lahf
dec
jb
movsl
aam
movsl
mov
pop
out
push
test
sbb
hlt
pop
rorl
arpl
test
pop
pop
inc
cld
inc
insb
mov
and
imul
inc
add
sub
jge
jne
testl
cs
cmpsl
xlat
ljmp
loop
mov
push
lock
pushf
or
sub
xchg
pop
stc
mul
mov
repnz
add
xor
andl
inc
cld
popf
mov
in
sbb
jb
shr
fstpl
mov
sub
pop
loopne
dec
test
nop
cli
inc
or
cwtl
push
mov
sbb
insl
sbb
mov
pop
out
stos
out
cld
dec
int
lret
cmp
jns
fdivr
out
dec
push
xor
push
adc
or
in
push
mov
adc
cmp
pop
add
shll
rclb
mov
jns
inc
dec
ja
adc
fsubp
adc
or
pop
stc
repz
out
sub
xor
xchg
mov
repz
js
adc
data16
outsl
xchg
loope
jg
andb
xor
pop
sbb
dec
rcrb
inc
arpl
popa
mov
subb
shlb
or
loop
cmpsl
std
jb
imulb
cli
test
mov
mov
pop
pusha
cli
roll
sub
pusha
mov
into
push
popa
mov
es
insb
test
or
lret
lret
xchg
lret
cwtl
pusha
adc
cmp
push
pop
shll
fcomip
xchg
pop
dec
test
cltd
mov
cmpsl
cmpsb
sbb
cmovns
pop
mov
adc
dec
andl
inc
sub
mov
scas
pop
imul
cmp
sbb
xchg
sub
sahf
inc
aad
aas
xchg
in
push
fsub
xchg
inc
cmp
and
adc
in
mov
inc
and
inc
pop
fsubrl
cmp
sbb
hlt
repnz
in
jnp
sub
mov
pop
sbb
bound
xor
scas
loope
out
gs
loop
ds
add
fbstp
shl
push
inc
mov
add
cmp
and
repnz
cld
and
adc
push
fisttpll
and
or
adc
repnz
je
lret
nop
fdivr
loope
in
iret
hlt
testb
dec
xchg
loope
sbb
popf
push
add
mov
jno
fidivl
pop
pop
cmovnp
push
mov
ss
or
addl
lods
clc
push
mov
mov
dec
mov
add
test
push
cld
mov
and
add
stos
add
add
lahf
mov
loopne
push
xor
mov
jle
add
loope
adc
pop
add
ret
add
pop
jo
pop
fdivl
adc
js
shll
inc
push
cmp
fstpl
add
or
sbb
mov
push
int3
je
push
loopne
lods
jmp
adc
push
xchg
cmpsb
mov
push
xlat
and
repz
pop
cmp
cmpl
and
ja
sub
je
or
jb
mov
lods
mov
nop
add
cmp
sub
inc
push
pop
xchg
cmp
mov
sbb
jg
adc
lahf
dec
jg
ja
or
ficompl
aaa
add
mov
dec
fwait
jbe
xor
push
cmp
push
jl
adc
xlat
jle
rorb
mov
roll
fwait
gs
pop
rorb
rcll
dec
es
cmpsl
daa
jecxz
xchg
stos
movsb
into
mov
pop
fisttpl
or
filds
ljmp
ret
test
shl
lret
ficompl
iret
push
outsl
sbb
xchg
test
sub
push
lret
pushf
mov
sub
les
addb
mov
mov
daa
in
cmp
or
loopne
push
imul
cmpsl
push
ja
fisubrs
popa
outsl
call
inc
or
stos
cmpsb
scas
mulb
test
mov
das
fildll
or
mov
pusha
lea
pop
lock
sub
sub
hlt
pop
shlb
cmp
cltd
ret
sub
jl
mov
and
lods
and
mov
ficoms
dec
inc
icebp
adc
xlat
push
shll
xor
rol
sbb
sbb
push
inc
cld
stos
xchg
xchg
cld
or
fmul
ret
dec
cmp
aam
pop
sub
and
and
test
data16
aad
push
mov
stos
ret
mov
inc
outsw
mov
xor
dec
in
mov
sahf
dec
hlt
jmp
jle
or
or
in
aaa
popa
fwait
pop
inc
cld
scas
imul
jmp
xor
push
mov
jp
jno
adc
inc
mov
leave
mov
jecxz
and
in
gs
out
mov
adc
sbb
inc
fwait
scas
mov
pushl
mov
popa
fwait
and
bswap
mov
cmp
jo
pop
jb
aaa
repnz
cmc
mov
cmp
pop
xchg
fs
cmc
cmp
ja
xchg
popf
adc
andl
xchg
test
mov
mov
push
imul
testb
addb
sub
lret
int
addr16
sub
or
pop
push
clc
lods
mov
push
aaa
stc
outsb
pop
cltd
test
xchg
out
scas
add
aas
out
notb
cmp
ljmp
fbstp
lods
int3
ds
jne
insl
adc
jp
in
or
sub
je
and
push
add
pop
ds
loope
xorl
insb
lahf
xchg
jo
cmp
shlb
adc
aam
cmp
arpl
add
dec
test
imul
stos
mov
or
mov
push
aam
aas
and
pop
push
leave
popf
lret
popf
pop
xlat
loope
fs
into
lret
roll
add
dec
sbb
mov
mov
mov
xchg
sbb
mov
mov
shll
cld
mov
cmp
dec
leave
pop
mov
leave
pushf
sbb
adc
adc
loope
and
fs
cmp
ljmp
lcall
or
std
push
inc
sub
cmp
or
adc
call
in
enter
and
dec
imul
xor
fs
push
rol
sub
test
ljmp
jle
push
mov
in
dec
xor
notl
dec
in
jle
stos
xor
add
cltd
aam
mov
mov
mov
dec
lea
xchg
mov
cmpl
insl
roll
xor
stc
adc
pop
ja
or
mov
fildl
fldenv
cltd
sbb
in
mov
lret
inc
mov
inc
adc
xor
mov
cmp
ret
pop
sti
push
xchg
inc
rcl
adc
xor
popa
out
js
push
adc
sub
sbb
mov
or
fwait
xchg
in
add
xor
push
jne
xor
mov
xchg
mov
shl
ss
pushf
ss
cmpl
mov
jecxz
int3
jo
xchg
jnp
out
movsb
leave
imul
inc
fsubs
int3
xchg
cmpsb
push
mov
cli
or
cmpsl
jmp
mov
shll
mov
sbb
jle
jecxz
and
sahf
or
lock
dec
mov
sub
test
or
inc
ret
xor
xchg
cmp
rolb
cmpsl
fistpll
mov
cmpsl
or
call
fistpl
dec
jbe
sahf
mov
cmp
shll
and
dec
icebp
cli
cmp
xchg
aam
rolb
test
pushf
jp
scas
ret
sbbb
inc
mov
scas
scas
pop
sbb
dec
in
pop
adc
mov
stos
loop
nop
loopne
cmp
xchg
cmp
repz
cld
pop
mov
mov
mov
nop
aad
push
hlt
mov
int3
and
bound
aam
dec
xor
dec
jne
orl
ljmp
mov
test
std
movq
push
jne
and
or
mov
lahf
dec
add
cmp
mov
push
insl
shrl
decb
rcrl
inc
es
lods
hlt
imul
or
jge
or
int3
inc
adc
add
and
in
aaa
add
in
je
mov
cli
jbe
sub
mov
fidivrs
les
mov
mov
adcl
and
fwait
mov
mov
adc
jb
inc
and
jnp
xchg
cli
mov
sbbb
push
mov
shlb
daa
push
shll
mov
or
xor
fldenv
in
or
mov
int
stos
xchg
mov
ljmp
lds
or
xlat
insb
pop
and
jecxz
aaa
movsb
cs
or
add
mov
jbe
imul
loop
dec
pop
mov
sarb
inc
push
mov
xchg
icebp
and
insl
ret
mov
jecxz
addr16
daa
popf
add
call
pop
out
dec
pop
popa
sub
repz
mov
xlat
add
stos
add
add
push
sbb
mov
mov
test
das
into
lahf
add
push
mov
xor
jb
and
mov
and
mov
mov
mov
cmp
pop
push
xor
aam
inc
insl
or
jae
pop
jecxz
jge
inc
fnstsw
sub
iret
push
and
enter
sub
sarb
push
or
ss
fisubs
sbb
xor
stc
dec
xor
jo
sbb
fdivs
dec
data16
xor
push
push
insl
inc
xor
pop
loope
sti
dec
xchg
sbb
je
repnz
mov
or
bound
pop
mov
pop
insl
sbb
and
in
aad
pop
or
and
scas
pusha
push
add
sub
loopne
sbb
jmp
stc
sub
and
dec
cmp
cltd
popf
cmp
mov
jp
inc
xor
mov
sbb
dec
adc
lock
xchg
clc
add
cli
fcoml
jl
dec
xchg
adc
frstor
stc
sarb
imul
mov
sub
cmp
test
pop
mov
insb
dec
rolb
adc
int3
sahf
pushf
fs
adc
mov
testl
sbb
test
inc
scas
pop
or
testl
cmp
jmp
fcomps
dec
sub
push
add
sti
aas
repnz
sub
lcall
imul
mov
cmp
dec
pop
jno
inc
jns
add
cs
fidivrs
mov
pop
jo
push
fldpi
je
ljmp
inc
rcrb
fs
pop
mov
adc
cs
mov
icebp
faddl
and
andb
mov
call
mov
push
cmp
filds
adcl
cmp
movb
dec
das
mov
jle
cmpsb
adc
sub
push
jle
lcall
pop
or
repz
mov
inc
sahf
mov
lods
fistl
fisttpll
imul
jp
ds
std
push
enter
lahf
repz
lret
das
rorl
jg
hlt
xor
cmc
stos
popf
imul
inc
mov
mov
in
mov
dec
fistpll
testl
jae
insb
and
inc
or
xchg
cmp
outsl
jnp
int3
or
fstpt
imul
mov
pushf
mov
xchg
fsubl
jecxz
imul
test
or
lret
das
cltd
ret
dec
das
sub
jecxz
jno
enter
imull
fbld
pop
push
mov
jp
ret
ret
test
mov
rolb
out
mov
push
pop
pop
daa
adc
dec
imul
jnp
shr
sbb
adc
push
mov
adc
jl
loop
adc
inc
dec
and
dec
mov
push
hlt
movsb
mov
xchg
dec
andb
add
popa
int
imul
mov
cwtl
jle
je
mov
mov
add
mov
fdivrs
sbb
pop
scas
scas
sub
mull
xor
sub
adc
icebp
icebp
lea
adcb
out
mov
inc
loopne
lods
test
push
shrl
xlat
jnp
jae
sbb
imul
xchg
pushf
mov
imul
faddp
stc
jno
mov
xchg
out
add
add
jnp
data16
decl
std
or
fildl
add
push
shl
out
or
aam
les
or
nop
or
mov
cld
icebp
clc
xchg
xchg
xchg
addl
js
addl
fcom
add
ljmp
push
pop
loop
sub
stos
or
insl
hlt
jne
or
cld
mov
insb
call
pop
xor
fs
cmp
mov
test
pop
stos
orl
test
faddl
dec
popa
cmc
pusha
cmp
std
fwait
add
pop
mov
mov
loop
jo
sub
test
iret
int3
sahf
mov
loopne
mov
pushf
inc
fldt
fs
push
dec
aam
or
add
or
sbb
adc
or
testl
test
stc
lods
ds
ljmp
mov
xorl
test
pop
subb
rsqrtps
loopne
or
lods
adc
data16
neg
jg
inc
mov
mov
cmp
movsl
sub
inc
and
xchg
sbb
repz
sub
cmc
cli
jle
lock
ss
inc
mov
mov
inc
in
fadds
test
or
jecxz
lock
mov
xchg
jns
enter
cmp
fcmovnb
jg
repnz
imull
nop
ss
and
clc
mov
xor
jmp
stos
enter
out
stos
jp
pop
sbb
jge
rcrb
dec
jle
or
jmp
out
fstl
das
mov
or
sbb
sub
in
nop
adc
dec
inc
lcall
add
aad
lret
pop
fisubs
xchg
sahf
push
stos
xor
jmp
pop
leave
and
or
mov
lcall
and
cmp
shrl
and
mov
mov
push
daa
lret
sti
mov
mov
mov
adcl
and
ss
xchg
lods
mov
arpl
sti
cmp
cmp
or
cmpsb
mov
repnz
jb
cltd
pop
incb
mov
adc
aam
dec
add
in
mov
or
inc
outsb
std
pop
adc
xlat
inc
mov
cld
mov
in
scas
pushf
push
adc
in
cmp
ret
push
fmul
pop
mov
call
dec
xor
or
iret
lahf
insb
loope
mov
cmpsl
xor
popf
test
insb
rclb
jno
mov
xor
push
xorb
or
sbb
std
daa
cmpsb
xchg
pop
bound
dec
scas
or
addr16
mov
inc
and
outsb
or
jo
cwtl
cmp
stos
sarl
jl
ljmp
jae
ss
std
mov
or
sar
mov
out
int3
faddl
inc
out
adc
out
fwait
or
jge
lock
sbb
rclb
bound
jns
xchg
into
xchg
sub
mov
out
ds
lods
jp
xchg
divb
je
nop
lds
jb
and
dec
dec
into
loop
int3
pop
lahf
inc
test
dec
data16
in
test
inc
dec
inc
cmpsb
add
sarb
inc
int
jl
frstor
imul
mov
lret
adc
ror
rorb
rcr
fistpll
push
arpl
bound
stos
add
add
int3
icebp
les
xor
insb
fisttpll
mov
lods
pop
cmp
je
dec
pop
repz
lcall
or
cmp
push
add
ds
in
mov
push
push
cld
pop
pop
mov
mov
cmp
fwait
push
push
push
mov
add
sub
cmc
out
xlat
or
jecxz
imul
sti
mov
shll
lcall
jle
mov
adc
repz
cmp
in
lods
out
jb
in
xchg
cmpb
pop
mov
push
mov
test
dec
xchg
add
nop
jno
push
pop
jb
js
test
jo
into
outsl
cmp
or
dec
xlat
nop
xlat
xor
sub
addr16
shll
pop
xchg
mov
mov
mulb
cwtl
decb
xor
pop
xchg
add
lods
test
adc
jecxz
movsl
xlat
lret
mov
arpl
scas
push
jle
ja
std
sbb
inc
mov
pop
fistpl
lret
divb
or
testb
insl
mov
add
sarb
fistps
insb
repnz
pop
into
inc
xor
sbb
xor
cs
xchg
aam
mov
loopne
mov
sbb
stc
mov
mov
imul
andl
sbb
aas
xchg
aaa
test
dec
es
lock
loop
inc
pop
fidivrl
cld
data16
std
cmp
inc
push
stc
lock
imul
incl
pop
inc
cmp
lock
in
ja
std
jo
push
xor
popf
sub
sub
xchg
xchg
test
mov
sbb
out
insl
ljmp
rorb
fisubl
ret
lcall
enter
push
mov
cmc
repnz
sub
xchg
jle
aad
fldenv
or
lea
or
addr16
jno
arpl
das
int3
scas
and
or
imul
aad
mov
addb
and
inc
sub
jno
add
shl
out
jmp
bound
nop
xchg
pop
divl
sbb
fstpt
jns
lods
test
filds
lods
jge,pt
or
arpl
sbb
push
cmpsb
subb
inc
mov
xor
sub
jnp
push
xor
jbe
pushf
cli
mov
sbb
mov
jnp
pusha
cmp
dec
sub
and
mov
mov
inc
daa
adc
or
mov
xor
insl
sub
and
test
or
notl
leave
and
mov
cmp
xor
lret
sub
shlb
sbb
pop
out
inc
cwtl
test
sarb
movsl
fdivr
mov
push
pop
mov
push
pushf
xchg
jbe
mov
iret
xchg
pop
pop
pop
push
scas
cmp
mov
xor
lods
push
push
adc
dec
jns
jnp
xor
jmp
std
xchg
cmpsb
int3
ret
xlat
hlt
sub
push
rcll
popa
and
mov
jecxz
push
andl
lock
shrl
dec
jbe
mov
xor
es
and
dec
jecxz
sbb
mov
cmp
movsl
inc
lahf
push
loop
jp
sub
pop
in
push
pop
aas
mov
popa
mov
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
push
movsb
enter
add
inc
ficompl
mov
je
out
movaps
dec
cmp
jp
test
imull
and
outsb
pop
jnp
ret
xor
data16
pop
pop
adc
mov
xlat
cli
rcrw
pop
repnz
enter
insb
cwtl
daa
push
pusha
xchg
pop
xchg
pand
fptan
fwait
les
mov
out
popf
jno
cmp
scas
pop
sbbb
data16
les
jmp
test
push
shlb
jne
int
scas
cmp
xor
inc
shlb
sarb
cmp
xchg
or
push
jecxz
imul
jmp
cwtl
cmpsb
pop
pusha
cmp
sub
push
mov
mov
jg
ss
cmpsl
lea
mov
pop
pop
fimull
rorl
notl
and
hlt
fcomip
sahf
cld
jge
mov
fs
cwtl
sarl
data16
mov
and
dec
clc
lea
jne
fwait
sbb
jb
mov
inc
push
cmp
add
fsubrl
les
jo
scas
jp
dec
cmovp
aam
push
aas
dec
movsb
push
cmp
dec
shrl
ss
call
popa
out
adc
push
or
sahf
mov
sub
int3
mov
and
or
loopne
jecxz
loop
xchg
xor
clc
sbb
jp
mov
cmp
cs
xchg
pop
je
ljmp
jge
sbb
jg
or
shlb
fsqrt
xorl
pop
enter
cmp
stos
sbb
insl
ret
cmpsb
xchg
xchg
inc
cmp
push
xor
cmp
imul
fwait
push
mov
inc
nop
mov
pop
jo
add
cltd
jnp
mov
out
scas
inc
inc
lea
pushf
cltd
jno
fldt
clc
mull
ret
fwait
notb
je
adcb
cltd
jg
mov
inc
inc
add
mov
jge
js
sub
mov
jl
fistps
clc
aaa
outsb
test
shll
add
pop
dec
mov
inc
sub
xchg
lret
std
popf
pop
push
cs
xchg
pop
idivl
mov
mov
pop
aaa
iret
ja
das
dec
lea
mov
or
cld
cmp
add
adc
ds
jp
mov
sub
jmp
xchg
push
outsl
mov
inc
mov
inc
subl
jecxz
pop
repnz
imul
and
aas
in
loopne
pop
jo
inc
add
sub
ss
dec
ds
mov
arpl
leave
jmp
jge
dec
ja
push
mov
loopne
cmpsb
fcomps
daa
es
movsl
ja
es
shll
dec
out
sbb
mov
sub
add
push
add
adcb
push
subl
je
bound
mov
inc
inc
push
int
stos
rol
mov
xchg
xchg
jge
adc
add
ret
dec
cmp
ret
jg
or
push
dec
in
popa
dec
dec
fwait
cmp
xor
repz
dec
bnd
sbb
aas
xchg
jmp
hlt
jmp
je
push
cmp
jp
cmp
mov
jl
sub
cmp
dec
mov
fnstenv
add
inc
gs
jg
mov
rorb
fwait
pop
and
add
stos
add
add
iret
and
and
mov
xchg
neg
mov
jmp
xchg
movsl
cmp
mov
mov
std
push
cmp
xchg
or
and
pop
mov
or
xchg
ljmp
int
sti
adc
lcall
insl
xor
add
mov
imul
adc
fs
xor
test
out
lcall
ror
jmp
stos
movaps
lock
cmc
pop
xor
mov
repnz
xchg
jb
aad
scas
push
outsb
pop
ret
push
mov
pop
lret
int
iret
sbb
xchg
lods
cmp
in
fstp
mov
lods
data16
data16
out
fcmovnu
ret
cli
push
mov
outsl
shrb
push
addb
sub
jl
mov
adc
mov
popa
xor
out
cmpsl
xchg
mov
mov
shll
stc
fadds
fcmovb
iret
rolb
cmp
ffree
push
and
pop
xchg
fwait
sub
xchg
mov
in
js
insl
cmpsb
aam
mov
sbb
sub
or
mov
or
mov
and
adc
jne
jecxz
or
incl
popa
lds
dec
shr
cmp
xchg
sbbb
cmc
rcll
aaa
sahf
push
lods
and
out
jb
jp
clc
shl
scas
xor
push
fdivl
sbbb
mov
fldcw
xor
out
scas
lock
std
das
push
mov
and
mov
out
push
push
test
test
es
fs
jno
aad
or
mov
cmp
nop
and
stos
imul
dec
cmp
gs
cmovs
inc
and
sub
mov
add
cmp
les
push
fidivl
push
hlt
rcl
out
hlt
sub
jge
dec
les
jo
push
dec
ljmp
push
pop
nop
xor
dec
xchg
out
xchg
int
sbb
mov
iret
repz
lock
out
lahf
fcmovnb
adc
movsb
stos
push
dec
xchg
inc
jp
movl
mov
push
dec
es
or
insb
pop
clc
and
icebp
adc
fnstcw
shlb
add
push
jge
insl
out
nop
add
adc
mov
bound
dec
arpl
fstpl
mull
xor
imul
xor
lock
outsb
cltd
std
fucom
mov
mov
mov
dec
movsb
mov
mov
inc
push
je
inc
and
fcomps
out
mov
adc
inc
int
mov
dec
dec
mov
add
mov
inc
sbb
xchg
aam
jp
js
sbb
sbb
adc
insb
or
aas
and
ret
jle
or
mov
pop
mov
jecxz
or
pop
bnd
mov
xor
lret
stos
cs
iret
call
mov
pop
mov
imul
mov
repz
mov
add
mov
or
repnz
fiaddl
or
inc
xchg
dec
xchg
mov
sbb
dec
int
add
stos
add
add
jbe
dec
dec
push
js
cmp
jp
cmc
imul
fadd
js
ret
shlb
roll
sbb
jmp
push
mov
jbe
xor
adc
in
rcr
pop
mov
mov
fiaddl
lods
rorb
xor
adc
lret
pop
pop
xchg
cld
xorl
pop
cmp
js
loop
into
or
and
mov
xor
iret
mov
movsl
dec
add
mov
lods
ja
mov
jo
mov
push
std
jnp
cmp
and
pop
test
mov
sahf
add
fdivrl
jno
cmp
es
pop
xor
dec
pop
jae
add
inc
mulb
push
jp
inc
pop
icebp
sti
fs
sbb
push
in
and
push
enter
xor
mulb
sti
xlat
adc
push
ds
and
imull
mov
xchg
mov
pushf
inc
test
ds
addr16
pop
mov
pushf
cs
xor
xchg
jae
sub
dec
xchg
es
orb
fwait
pop
unpcklps
push
sbb
jp
subb
mov
out
mov
fisubl
mov
popf
pop
mov
scas
test
cmpsb
bound
movaps
or
lahf
xcrypt-ofb
cmpsl
stos
movb
xor
aad
mov
stos
and
xchg
lcall
jmp
jge
cmpsb
or
dec
or
dec
xor
daa
mov
mov
ret
popf
jecxz
lcall
sub
and
rcll
push
mov
dec
iret
add
jmp
add
repnz
sbb
sub
inc
jns
mov
in
jns
subb
sub
xchg
les
notl
and
sahf
inc
lods
push
out
cmp
pop
adc
and
dec
pop
mov
shl
fs
dec
out
dec
cltd
stc
xor
cmp
nop
pop
jge
fdivrs
inc
mov
jnp
outsl
mov
outsl
inc
jle
cmp
and
jo
sbb
int
insl
insb
mov
mov
and
mov
mov
inc
cmpsb
adc
movb
clc
sti
das
or
mov
push
pop
xorl
jnp
push
mov
mov
lret
ficomps
es
xor
jle
outsl
fs
add
or
push
adc
testl
jnp
push
dec
mov
cltd
mov
and
in
in
in
xor
pop
xchg
int3
or
in
fisubrs
push
dec
aam
jmp
xchg
in
ja
xchg
or
test
shl
cwtl
pop
mov
mov
aam
popf
fxtract
popa
mov
addr16
push
mov
lock
ljmp
pop
movsb
push
inc
mov
jecxz
gs
dec
mov
fsubr
and
pop
inc
insl
mov
and
cli
jmp
mov
jnp
and
xchg
mov
addr16
pop
cmp
add
xchg
pop
or
popa
loopne
mov
clc
scas
xchg
fildll
cmpsb
or
bound
sub
sub
and
jg
push
adc
lods
or
add
stos
add
add
adc
push
iret
sub
stc
ja
lahf
das
loop
aam
movsb
jno
sbb
mov
mov
mov
sahf
mov
pop
sbb
mov
sub
add
aad
xchg
push
jae
js
lds
idivb
mov
rcll
sti
dec
lea
repnz
jge
cs
inc
xchg
xchg
xchg
xor
test
jl
testb
mov
loopne
push
push
lds
sub
mov
push
test
sti
clc
iret
hlt
inc
test
and
fsubr
iret
dec
jecxz
mov
fisubrs
sub
push
pusha
popa
gs
mov
sbb
add
sub
loope
ja
scas
dec
sbb
icebp
mov
add
xchg
push
jecxz
mov
aam
arpl
and
arpl
sbb
mov
repz
int
pop
xor
das
test
xchg
cmp
pop
ror
xchg
es
jp
jp
inc
or
aad
jle
pusha
test
out
das
bound
test
imul
jno
jo
jo
and
sbb
jbe
insb
add
cmpsb
sbb
inc
jle
push
je
lahf
lds
dec
jg
pop
fistps
lahf
repz
pop
cmp
test
or
and
enter
fwait
jp
and
dec
xchg
popa
sarb
dec
push
out
in
sub
mov
outsb
leave
or
pop
pop
divb
dec
fmull
jne
addb
sbb
hlt
test
ss
shll
addr16
mov
out
jno
aas
roll
pop
mov
enter
jbe
stc
ljmp
je
inc
out
inc
dec
and
cmp
mov
testl
lret
iret
adc
cltd
lret
pop
sub
or
sub
cmpsl
push
xor
inc
cwtl
in
cmpsb
das
fld
dec
cli
cmp
fadds
out
movsb
scas
pusha
nop
cmp
jp
fmull
fstpt
test
fdivrl
and
aam
or
out
repz
in
or
mov
lea
jp
dec
jns
mov
out
fcoms
loope
adc
xchg
adc
lcall
mov
sbb
cmp
test
xchg
mov
aaa
bound
arpl
push
mov
enter
push
test
scas
fcompl
stos
iret
outsl
dec
dec
or
fwait
into
jge
mov
and
movsb
mov
stos
loope
outsb
lret
es
push
outsb
pop
insb
fimuls
stos
pop
ljmp
daa
les
add
sbbb
aad
xor
int3
loopne
fcomps
imul
jge
aas
ljmp
mov
aas
adc
repz
in
mov
xor
push
les
mov
scas
aam
xchg
stos
les
ret
roll
clc
dec
push
enter
mov
mov
or
shll
mov
pop
dec
lcall
adc
shlb
fmuls
imul
pop
hlt
adc
addr16
jecxz
rolb
cmp
fdivrl
or
lea
mov
lret
notl
xchg
jae
cmpsb
cmp
pop
adc
adc
icebp
dec
jecxz
jns
fsub
inc
lods
lock
fdivrl
cmovo
sub
mov
mov
jge
test
add
loopne
cmp
mov
aaa
mov
icebp
add
stos
add
add
mov
fsts
std
dec
rclb
nop
dec
adc
inc
cmp
repz
mov
clc
test
cmpsb
sub
pop
aaa
jb
mov
cmp
xchg
dec
mov
xor
call
sub
repz
in
mov
aas
mov
icebp
ds
das
mov
rcr
sub
fisttpll
pop
movb
push
or
aam
push
cmp
sti
mov
je
jp
dec
xchg
adc
aad
mov
pop
dec
pop
leave
rcrl
mov
bound
pop
insl
imul
push
cmc
xor
mov
outsl
fwait
es
call
mov
loopne
scas
pop
hlt
pop
pop
mov
add
add
inc
iret
stos
mov
jb
mov
ror
test
popf
int
mov
int
lock
push
add
cmp
adc
dec
movsl
mov
pop
push
mov
jbe
cmp
pusha
jo
mov
mov
mov
inc
loop
out
mov
push
pop
mov
xor
and
rorb
or
shll
out
mov
fisubs
mov
and
imul
or
in
sbb
mov
mov
add
aam
xor
in
cmp
inc
sbb
mov
dec
out
xor
testl
sbb
out
jp
mov
pop
sbb
pop
pop
inc
ljmp
add
mov
pop
inc
test
insb
push
mov
mov
lock
ret
inc
mov
pop
dec
cld
xchg
mov
and
push
pop
jl
pop
adc
pop
inc
xor
or
cwtl
push
jae
pop
jb
mov
inc
inc
add
inc
pop
sbb
ret
mov
filds
mov
je
fwait
out
and
adc
cmpsb
loope
out
fs
enter
inc
xchg
sub
and
or
mov
bound
in
cmpb
mov
mov
xchg
pop
rcrb
clc
aas
inc
cmpsb
xor
and
pop
or
xor
xor
int
mov
add
cmp
push
ljmp
sbb
adc
insb
scas
and
push
xlat
adc
pop
mov
icebp
push
fnstenv
jne
mov
test
repnz
pop
out
mov
in
xchg
mov
js
enter
das
inc
fs
and
mov
movsb
test
push
mov
stos
loopne
jb,pt
out
sarb
push
movsl
pop
int
mov
add
out
fldcw
ss
inc
sub
stos
pop
cltd
arpl
sub
pop
jb
loop
cli
inc
pop
mov
cmp
push
lcall
cs
jbe
push
add
xchg
adc
lds
or
fwait
jecxz
cmp
std
xor
and
js
sub
repnz
mov
push
pop
mov
lret
add
es
cwtl
mov
mov
enter
xchg
add
add
dec
mov
inc
or
shrb
inc
pop
mov
rol
xor
pop
gs
mov
leave
jns
js
jo
mov
mov
fbstp
mov
into
hlt
add
mov
sarb
enter
adc
scas
mov
mov
or
inc
js
ret
inc
jb
fists
subl
push
cli
fisttps
es
and
aam
daa
mov
rcrl
bound
mov
imul
cmc
cmpsl
movsb
imul
in
jle
test
pop
jl
sub
daa
insl
xor
xchg
std
mov
shrl
cltd
xchg
fnstenv
push
lcall
pop
insl
inc
iret
out
in
xchg
xchg
imul
jae
adc
movsl
and
or
jnp
aaa
cwtl
sbb
fisubl
pop
mov
in
xor
cmp
dec
or
rorl
std
in
and
insb
add
icebp
mov
jge
gs
insl
jbe
push
push
adc
adcb
mov
mov
insb
into
adc
sub
add
jmp
test
jp
fbld
sbb
xchg
mov
pop
sub
sahf
sub
push
fists
repz
dec
dec
pop
push
inc
mov
inc
int
push
xchg
insl
push
ljmp
into
and
adc
add
mov
add
add
fildl
jecxz
mov
sbb
push
inc
push
movsl
addr16
mov
test
enter
jecxz
jecxz
movsb
rcl
or
mov
aas
add
push
stc
xchg
xchg
mov
sub
xchg
loopne
add
push
inc
dec
into
mov
cmp
mov
fsubl
dec
push
lea
sbb
jae
inc
or
movsl
xor
add
jle
xchg
jae
xchg
push
push
lahf
out
lods
filds
dec
ret
pop
add
mull
sub
insb
out
xchg
inc
mov
dec
xchg
nop
fdivrs
out
or
in
gs
lock
repnz
inc
insb
inc
mov
push
jp
or
aam
mov
lret
sbb
popa
fwait
xor
push
loop
outsl
into
push
cmp
inc
xchg
jle
and
fnsave
inc
call
daa
sbb
in
fwait
pop
pop
int3
xchg
in
inc
xlat
sbb
outsl
and
pop
sub
cmp
imul
or
mov
push
xlat
adc
mov
test
push
jb
fisttps
ret
push
outsb
pop
mov
lret
and
cli
xor
pushf
inc
jecxz
jmp
xor
outsb
push
lcall
bound
sub
daa
sarb
mov
inc
mov
cmp
add
pop
xor
lods
or
ds
les
aam
jp
xchg
sub
sbb
xor
sub
mov
pop
push
inc
or
out
mov
mov
stos
pop
arpl
jb
in
out
push
sub
cltd
mov
mov
scas
jecxz
jo
push
cli
pop
add
in
xchg
xor
add
push
jno
in
out
mov
repnz
mov
mov
ficomps
in
stc
xchg
data16
lahf
shrl
ljmp
mov
ljmp
adc
dec
leave
mov
outsl
sub
cmp
pop
push
dec
in
inc
hlt
mov
inc
inc
imul
xor
cmpsb
and
xor
or
sbb
add
sub
mov
