push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
insb
dec
std
jl
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
push
mov
mov
cli
stos
int3
shlb
loop,pt
mov
sub
push
pop
sub
cmc
xor
loop
std
or
dec
loop
fstpl
shll
arpl
out
inc
inc
ficomps
call
mov
inc
lret
aaa
outsl
push
incb
sarb
mov
int
test
int
jp
dec
into
lar
pop
pop
dec
dec
jle
testb
ret
das
popa
cli
xor
add
sub
push
loope
jno
push
adc
jp
add
aam
rcl
add
mov
out
rcll
sub
xchg
sti
jle
jle
mov
cmp
pop
je
js
cld
shlb
dec
insb
xor
mov
sbb
adc
mov
pop
xor
daa
and
dec
sub
in
xor
sbb
and
subl
stc
jno
ljmp
cmp
leave
adc
xchg
es
mov
test
fcomps
inc
fcmovb
insb
pop
push
adcb
pop
xchg
xchg
fdivs
push
mov
sub
dec
jg
out
push
pop
xchg
dec
xor
in
dec
mov
or
enter
jnp
or
jne
lahf
ret
push
cmp
pop
mov
or
pushf
out
popa
ret
fsubrs
lods
outsl
popf
cmc
mov
hlt
data16
es
pop
shrl
sub
dec
push
popa
int3
loope
rorl
out
dec
mov
sti
cmp
pop
dec
push
inc
in
test
popf
inc
sahf
jg
inc
je
pop
std
jle
and
mov
pop
stos
add
and
imul
cmp
sti
jo
andl
setbe
xchg
mov
jbe
xchg
mov
je
out
mov
jns
ja
and
jnp
dec
sbb
mov
jb
sti
pop
mov
ret
cmp
fisttpll
sbb
push
xchg
in
fwait
fs
push
mov
lcall
jns
enter
sbb
movsb
mov
pop
inc
mov
add
sub
mov
fucomi
testb
aaa
lcall
repz
dec
sbb
xor
std
push
or
js
mov
mov
mov
in
imul
mov
iret
cltd
sbb
sub
push
cmp
cmp
inc
sub
adcl
popa
iret
cmp
and
data16
icebp
lock
divb
xchg
mov
ret
push
arpl
shrl
cltd
cmp
push
adc
sbb
sbb
lods
push
out
fwait
js
je
add
hlt
sbb
mov
dec
push
into
arpl
push
mov
sub
or
xchg
int
ds
cwtl
mov
push
cmp
les
stc
xchg
xchg
adc
dec
mov
cwtl
adc
push
push
push
ficomps
test
lods
fisttps
or
test
ret
inc
and
popa
mov
or
push
das
pop
ret
xor
push
rcl
sub
mov
in
cwtl
cmp
out
mov
cmpsl
push
loopne
stc
stos
lea
negl
scas
lcall
sahf
jns
aaa
inc
lahf
xchg
xor
aaa
xor
dec
fnsave
push
mov
mov
pop
sub
hlt
dec
mov
nopl
xchg
mov
dec
lcall
sub
xchg
es
in
jnp
sar
push
imul
dec
fcoml
xor
popf
outsl
call
enter
lock
cs
in
adc
arpl
and
jl
enter
cmc
popa
or
or
inc
into
lret
in
jo
inc
mov
rcll
xor
sar
enter
fisubl
ror
jle
lahf
int3
adc
add
movb
lock
imul
in
mov
ljmp
arpl
dec
jns
pusha
adc
push
fwait
sahf
pop
pop
std
sub
movsb
xchg
into
aas
cwtl
mov
xchg
mov
or
mov
xchg
cmp
add
stos
pop
mov
lahf
lret
loop
xor
popa
jmp
jae,pn
xlat
and
or
sub
pop
aad
cmpsl
arpl
insl
jns
push
mov
and
push
popl
icebp
add
es
xchg
mov
fs
add
and
arpl
and
jp
arpl
rcl
dec
pop
adc
pop
mov
ror
xor
movsl
cmp
addr16
mov
das
xchg
jg
xor
push
cmp
mov
lds
or
cmp
jae
rolb
cmc
jbe
enter
scas
push
stos
push
int
add
mov
int
insb
in
xchg
push
xchg
adc
dec
cltd
pop
xchg
xor
iret
adc
jecxz
fcompl
insb
in
popf
push
movsl
sub
pop
or
cli
js
cmp
lret
jnp
xchg
call
test
and
cmc
mov
cld
xchg
mov
add
mov
xor
shll
adc
loop
xchg
or
ds
jbe
mov
push
nop
dec
sub
fs
fcmovbe
rorl
mov
divl
std
in
and
shl
sub
pop
sub
fcompl
dec
xchg
cltd
out
or
pop
out
in
shr
sahf
mov
lret
inc
outsl
add
mov
gs
pop
mov
inc
mov
call
insl
mov
xchg
fsubs
ret
mov
jl
pop
and
inc
cmp
aas
dec
sub
shll
lods
or
xor
jbe
cmp
sar
in
mov
dec
mov
sbb
sub
movsl
ja
inc
or
inc
mov
adc
mov
add
and
xchg
and
iret
ret
pushw
test
dec
mov
clc
imul
je
test
push
pusha
push
dec
sbb
lret
sub
and
pushf
sahf
in
sub
lcall
push
into
pop
push
in
jl
scas
and
sub
pop
testb
stos
and
pop
clc
es
test
jns
mov
out
jne
lds
mov
push
xor
jo
sub
sbb
dec
cs
sahf
mov
cmp
rorb
loopne
jnp
call
ds
aad
cmpl
ja
orb
pop
aas
in
neg
fisttpll
movsb
in
in
adc
pop
out
subl
pop
cld
in
fwait
test
sub
pop
cs
das
and
lret
gs
xor
cmpsb
or
data16
xchg
mov
pshufw
add
xor
xchg
xchg
fdivl
fldt
fnstenv
cmp
fdivp
xlat
xor
jp
jmp
stos
sbb
lret
lgs
orl
sub
movsl
mov
cmpsb
cld
lret
pusha
pop
je
shrl
xor
mov
cld
int
push
fwait
mov
adc
add
shll
sarb
aaa
dec
fyl2xp1
stc
mov
cmp
subb
lds
fmull
or
dec
test
test
int3
mov
sbb
gs
pushf
std
jo
fwait
xchg
shrl
inc
arpl
roll
scas
and
int3
pusha
cmp
add
imul
add
xchg
add
push
repnz
and
outsl
jno
mov
scas
sbb
sbbl
dec
or
lds
or
xchg
in
cs
jns
daa
push
shrl
or
sti
pop
push
lret
or
adc
sub
push
sub
push
cltd
outsb
out
je
fsubl
cs
fldenv
sub
es
int
xchg
les
fmuls
sub
orb
jl
lcall
add
mov
push
cld
jmp
rcll
cli
sbb
dec
test
lahf
jecxz
xchg
mov
mov
or
or
inc
cmc
or
sub
adc
jp
dec
fnstsw
cmp
lock
je
pop
movsb
call
mov
lret
sbb
ficoms
mov
aaa
mov
or
int
xchg
mov
js
insl
dec
pop
movsb
ss
fwait
mov
or
lret
mov
js
xor
fdiv
lret
out
push
push
xor
xor
pop
cld
xchg
inc
dec
fsub
aam
nop
daa
lock
loope
in
iret
test
push
into
mov
daa
mov
cs
out
rcrb
test
outsb
call
dec
jp
bound
push
je
subl
jb
and
bound
xchg
jmp
adc
xchg
inc
pop
jno
mov
mov
ljmp
in
shl
lods
dec
pop
arpl
dec
cmpsb
stos
nop
stos
aaa
mov
adc
push
sub
fcompl
test
divl
push
sub
or
or
cli
sbbl
adc
sbbl
cmc
pusha
jo
fiaddl
rol
pop
lds
cmp
cmp
pusha
int3
cwtl
dec
dec
or
dec
stc
mov
xchg
push
out
jle
aas
or
roll
xor
cmp
lcall
fadds
pop
inc
push
loop
jns
iret
jecxz
jge
imul
les
out
push
pop
test
sub
pop
cs
imul
mov
xchg
testb
repnz
repnz
sbb
adc
aaa
test
push
or
pop
dec
dec
inc
xchg
pop
dec
orl
add
dec
push
cli
add
cwtl
mov
sbb
clc
das
push
mov
mulb
mov
xchg
inc
lods
in
jmp
and
das
stos
rclb
test
add
shlb
sahf
in
rol
pop
pop
es
pop
and
cmp
push
fisttps
mov
xor
je
mov
arpl
sub
or
mov
jge
in
sub
fistpl
jbe
dec
out
jne
in
adc
adc
push
mov
fistpll
js
and
mov
negb
jns
dec
and
dec
popf
lods
pop
pusha
xor
fcmovnu
pop
lret
in
iret
sub
movsl
adc
push
test
xchg
mov
mov
adc
ret
loopne
popf
lock
aad
out
and
mov
inc
xchg
inc
je
and
and
cmp
adc
jae
jecxz
push
jmp
rolb
jno
pop
out
sub
cmpsl
mov
psubw
fistpl
xchg
jbe
cmpunordps
lret
fs
mov
nop
push
pop
add
vshufps
push
fabs
pop
test
lret
jmp
mov
mov
shl
mov
xchg
cmc
push
pop
fidivs
stos
in
mov
push
inc
or
iret
roll
lcall
ret
popf
sub
lods
mov
cmp
es
js
in
add
push
cmp
jnp
enter
push
sbb
fwait
xchg
inc
loop
xor
insl
push
pop
bound
test
cltd
or
xchg
fdivl
sub
xor
outsl
movsl
cmp
in
cmpsl
add
cmp
sub
mov
or
inc
push
add
mov
push
sbb
push
xchg
push
call
in
int3
and
int3
sbb
adc
xchg
lock
scas
adc
jge
jg
leave
bswap
cmpsl
std
inc
sub
loope
fadds
fcom
pusha
hlt
sbbl
mov
pop
sub
inc
push
ja
push
adc
cmp
iret
or
ja
movsl
cmpsb
insl
xchg
mov
ret
popa
jb
dec
dec
jl
aaa
out
hlt
lret
mov
sahf
add
fdivrs
jbe
shrl
lock
inc
sbb
ret
mov
push
or
cmpsl
jmp
in
clc
leave
push
push
cmpsb
cmp
mov
in
adc
xor
insl
sbb
fsts
xchg
inc
pop
fwait
adc
add
out
mov
cmp
push
stc
gs
stos
sahf
jb
sub
fidivrs
sbb
xchg
lods
inc
mov
divb
xchg
dec
mov
icebp
adc
cmp
dec
mov
mov
jp
sbb
negb
loopne
sbb
and
cmp
and
jne
pop
adc
and
push
icebp
xchg
push
dec
mov
cs
sub
xor
icebp
cmpsb
addb
cmpsb
es
imul
xchg
dec
lret
and
or
aam
mov
lahf
xor
fldl2t
add
mov
jecxz
pop
mov
cmp
addr16
fbld
out
mov
pop
push
mov
scas
pushf
push
shll
mov
inc
xchg
les
rcll
adc
rcll
xor
and
push
xchg
mov
pop
jp
loopne
mov
mov
mov
bound
add
gs
xchg
incb
jle
js
adc
out
pop
loopne
call
jg
push
fucomi
xor
mov
inc
mov
xchg
fwait
lea
or
mov
mov
xor
mov
shlb
sbb
in
push
loopne
shr
jg
enter
pop
add
dec
leave
pop
mov
call
inc
cmp
push
out
jmp
jp
fistl
popf
dec
test
jg
aad
imul
or
mov
adc
inc
or
mov
bound
sbb
sbb
test
or
mov
mov
or
stos
int
popa
add
bound
movsl
mov
push
mov
scas
jae
inc
sbb
imul
xor
push
ficompl
mov
ds
fbld
xchg
fdivrl
in
cmpl
adc
jae
imul
sar
mov
sbb
es
push
int3
push
fucomip
pushf
outsl
rcll
jmp
int3
popf
xor
mov
jp
les
pop
ret
repz
iret
push
gs
dec
and
sub
xchg
fwait
enter
mov
mov
in
fisubrs
push
iret
dec
mov
mov
push
sbb
push
loope
fabs
jmp
icebp
dec
pop
enter
imul
test
mov
sarb
mov
mov
ret
mov
out
cwtl
push
arpl
mov
jle
xor
add
sahf
mov
cmp
xchg
jbe
scas
pushf
mov
popa
dec
cltd
shll
stos
pop
lods
scas
dec
add
cltd
jo
scas
lahf
lea
loope
dec
mov
jae
pop
push
mov
cltd
sarl
ret
mov
mov
jl
stc
popa
xchg
push
xor
pop
cmc
mov
mov
pop
pop
daa
out
aas
call
or
sub
std
add
dec
ja
mov
xchg
lock
mov
repz
das
add
pop
sar
iret
les
insl
fists
mov
in
lahf
jle
xchg
cmp
scas
and
cmp
adc
sarl
and
in
negl
loope
jg
sbb
xchg
jmp
lret
mov
in
shlb
mov
lret
adc
fsin
rcrl
cmp
icebp
insb
sti
ss
daa
into
in
out
jnp
scas
xchg
mov
out
cs
cmpsl
dec
xchg
xor
fwait
adc
add
mov
popa
fidivrl
pop
push
pusha
xor
pop
sub
sub
jle
cmp
mov
push
cmp
jmp
adc
xchg
test
dec
lods
adcl
xor
pop
call
xchg
int
jecxz
push
fcoml
cmpsb
adc
mov
stc
push
xor
fdivrs
div
dec
xchg
ror
jge
sub
ljmp
stos
js
es
les
xlat
insl
andl
call
xor
into
dec
test
idiv
ja
pop
add
outsb
mov
frstor
cli
lods
lds
sbb
test
nop
jmp
jnp
and
lock
xlat
jns
mov
sbb
gs
add
jge
or
push
pop
push
dec
out
scas
push
int3
mov
and
add
shl
mov
loopne
test
hlt
repz
dec
sub
loope
jnp
lds
pop
cli
icebp
nop
adc
push
shrl
rcrl
data16
je
ret
arpl
mov
rclb
push
xor
dec
xchg
add
or
push
jo
pop
inc
insl
sti
cmpsb
jle
jne
xchg
push
in
mov
sbb
lret
fcom
sub
push
ljmp
cmp
fucomi
popa
sbb
cs
mov
or
xchg
pop
packuswb
inc
xchg
fstpl
imul
mov
jno
sarb
xchg
cmpsb
mov
cs
mov
fmul
jp
addr16
sbb
mov
jnp
jmp
jb
lods
cmp
cld
fimull
mov
jmp
dec
fcoml
out
push
xor
adc
leave
sub
xchg
or
test
push
call
inc
mov
add
ja
push
es
adc
adc
vpmacssww
mov
add
xchg
pop
dec
cmp
cmp
push
push
addr16
dec
lock
jmp
es
xchg
bound
push
or
mov
lahf
inc
sbb
inc
not
jl
add
jle
cmp
mov
xor
ret
jge
or
inc
sti
push
lcall
cmp
add
or
pop
repnz
dec
push
inc
inc
arpl
dec
pop
clc
mov
inc
enter
cwtl
ljmp
and
popf
pop
fldl
push
mov
arpl
push
incl
xor
xor
pop
mov
and
mov
pop
jmp
adc
xchg
push
dec
arpl
xchg
call
mov
fisubs
jp
pop
sar
scas
and
arpl
dec
push
orb
pushf
movsb
sub
lahf
mov
sbb
aad
jnp
inc
ss
shl
xchg
std
aam
aam
nop/reserved
stc
test
mov
fldcw
cmc
mov
dec
test
scas
dec
aad
dec
push
cld
xchg
push
dec
pop
insb
xlat
pop
pop
sbb
lods
sbb
sub
adc
mov
rcrl
rclb
mov
push
cld
lret
js
adc
xor
xchg
adc
mov
fcmovne
adc
jnp
pop
fistpl
mov
push
stos
ds
rclb
mov
scas
je
popa
pop
jecxz
lods
mov
pusha
mov
neg
dec
sbb
loopne
push
shll
repz
mov
inc
xchg
cmp
cmp
es
adc
xchg
insl
push
shl
mov
cs
stc
sahf
lret
call
je
int3
out
movsl
repz
adc
sbb
inc
je
or
dec
stos
lea
mov
sbb
jne
mov
outsl
rorb
cmp
inc
cmp
pushf
sub
pop
rcrb
sbb
adc
into
inc
mov
add
xor
stos
bound
ret
fstps
or
or
mov
sbb
push
xchg
jae
ja
cmpsb
xchg
imul
mov
cmp
cmpsl
enter
mov
inc
or
xchg
shlb
fisubrl
dec
mov
mov
test
out
sbb
loop
adc
mov
cmp
dec
mov
or
fcomp
rorl
add
bound
cmp
stos
and
ret
dec
dec
std
clc
imul
lea
mov
or
fidivs
inc
pushf
mov
sarb
out
ret
push
filds
mov
insl
rcr
adc
adc
shl
out
stos
mov
imull
daa
mov
into
mov
lea
sbb
pushf
pop
or
mov
popf
mov
jge
inc
and
push
lods
in
inc
cltd
mov
in
ret
bound
jecxz
fcompl
adc
orl
ret
call
mov
and
mov
lea
or
lret
lds
dec
icebp
dec
in
das
mov
ds
cmp
repnz
scas
or
xchg
fcoml
sub
int
lock
aad
mov
int3
mov
in
cli
pushf
cmpb
ret
movsb
lret
test
ja
xchg
cmp
fsubrs
jg
jg
cld
xor
sarb
jp
dec
nop
ja
pop
mov
mov
xchg
inc
jo
insb
pop
das
lahf
pushf
push
fimull
les
push
ret
es
and
dec
test
jno
iret
push
xchg
pop
mov
or
xchg
push
inc
call
adc
push
test
sahf
or
mov
or
cmp
dec
sub
jp
fs
cmp
push
sti
je,pt
mov
adc
ja
dec
fwait
pop
cmpb
nop
pop
pop
insb
mov
xchg
push
imul
not
in
pop
push
jns
mov
lds
dec
test
cmp
outsb
fstl
pop
rcll
sbb
adc
jl
out
xlat
loop
xchg
inc
cld
out
adc
pop
daa
imul
adc
inc
fsubrl
addr16
add
in
push
dec
xor
test
add
outsb
jae
nop
divl
pushf
pop
negb
pop
push
rcl
and
lea
test
addr16
xchg
sbb
hlt
out
mov
or
in
xor
jmp
dec
sbb
mov
jb
cmp
jnp
mov
lret
loop
insl
jl
jl
push
lea
jae
aas
add
mov
cmp
sarb
add
xor
pop
xor
push
ljmp
cmp
push
lods
push
jae
aam
cmp
sahf
out
dec
aam
aaa
addl
iret
or
mov
scas
shrb
cmp
int
xor
mov
xor
data16
xacquire
sub
mov
mov
out
add
outsb
and
push
mov
and
mov
sbb
fnstcw
jb
lret
and
test
adc
std
pop
dec
in
cmp
fs
mov
mov
xchg
adc
shlb
xchg
xchg
in
mov
inc
cs
stos
cmp
mov
xchg
leave
mov
inc
aad
repnz
jecxz
rorb
gs
push
push
popf
cmp
fidivrs
pop
cmc
add
ljmp
mov
incl
adc
out
jl
pop
pop
loope
jb
cmp
repz
int
and
jl
mov
stc
push
pop
loopne
jns
jle
push
xor
pop
stos
xchg
lret
mov
aad
mov
adcl
ljmp
dec
movsl
fs
xchg
aam
xchg
sarl
push
pop
xchg
jl
jecxz
shlb
or
sbb
sbb
pushf
sarb
test
or
adc
movsl
fisttpl
push
pop
cwtl
push
or
test
movsl
icebp
adc
push
ret
scas
xchg
mov
fxtract
out
sub
and
mov
add
pop
adc
imul
add
sbb
mov
test
mov
inc
mov
mov
imul
mov
sub
mov
stos
mov
lret
inc
test
cmpsl
xor
add
xchg
add
add
mov
aad
or
cld
iret
pop
out
xchg
test
rcl
jmp
jb
out
adc
das
shlb
lods
push
outsb
test
lods
loope
inc
sbb
and
xchg
push
sub
rcl
dec
int3
lret
bound
add
push
mov
lret
jnp
fisttpll
cmp
jle
jo
add
dec
xor
push
mov
pop
pusha
adc
and
popa
dec
ret
dec
xchg
sub
push
call
jl
popa
cmpsl
sbb
in
es
imul
leave
or
xchg
and
enter
roll
mov
das
adc
and
and
andl
xchg
mov
jb
bound
cmp
outsb
pop
andb
sbb
cmp
mov
jo
lea
clc
iret
cltd
das
lods
push
xchg
push
pop
add
push
inc
xchg
push
pushf
sbb
shr
fldcw
dec
push
fistpl
adc
push
dec
sub
mov
test
push
cmp
in
mov
cmpsb
ret
test
xchg
inc
sub
pop
inc
imul
cmp
movl
lret
mov
sub
sub
xchg
ja
push
xor
sub
scas
add
hlt
cmp
jne,pn
cmc
mov
cmp
xchg
leave
aas
insl
push
or
pop
jp
arpl
mov
add
call
push
mov
fcmovnu
js
jmp
fdivrs
fldl
je
adc
fimull
pusha
mov
cs
mov
adc
mov
mov
push
sbb
push
fs
pop
pop
inc
jnp
and
shrb
jmp
das
arpl
and
leave
pop
push
sub
dec
xor
in
iret
gs
aad
shll
mov
cli
mov
outsl
repnz
xchg
push
out
push
loope
popf
push
dec
or
scas
out
es
jbe
sahf
insb
cmpsl
int3
adc
cmpsl
jo
mov
movsl
inc
xor
loope
add
mov
gs
push
jno
xchg
subl
scas
movsb
fisttpl
pop
xchg
js
dec
sti
pop
and
test
inc
fistps
shlb
shl
inc
sbb
mov
dec
dec
cs
out
and
xchg
in
arpl
test
les
loop
pmaxsw
push
mov
inc
and
or
pushf
clc
push
ficompl
lods
xor
cmpsb
pop
pop
enter
aas
int3
xchg
sub
rolb
ss
pop
push
pushf
jmp
dec
sub
mov
push
daa
scas
or
rorl
mov
and
or
mov
pop
xchg
repz
ljmp
xchg
or
mov
imul
mov
dec
in
cmp
sbb
dec
into
aad
jo
mov
mov
hlt
xor
cmp
test
jmp
into
lea
pop
push
pop
jl
leave
addr16
repz
cs
icebp
inc
stos
sbb
xchg
ds
sub
xor
or
inc
xchg
or
push
cmp
or
or
es
add
xor
mov
sbb
lcall
add
fisttpl
push
inc
je
adc
ret
mov
fdivrs
cmp
cmpsb
cwtl
mov
push
testl
lds
xchg
sarl
pop
sbb
scas
pusha
push
inc
negb
pop
fists
pop
push
or
lret
jno
sbb
push
popa
pop
dec
mov
dec
mov
pop
sbb
jne
ret
stos
test
inc
and
jg
clc
xchg
and
rorb
add
jbe
lock
jl
and
stos
cmp
mov
add
pop
sbb
push
movsb
out
mov
test
das
xor
addb
cmp
cmp
aad
sbb
scas
adc
pop
jle
sbb
fwait
out
sub
out
and
sbb
lahf
xchg
loop
push
xor
dec
rolb
xchg
jge
adc
lock
aad
fsubr
leave
xor
xlat
sub
sbb
ret
aad
mov
ret
cmp
adc
lret
xchg
inc
pop
rcll
sbb
dec
inc
js
adc
dec
cmp
std
insb
ret
or
push
int
aam
test
call
mov
sub
push
xor
lcall
rcrl
cmpsb
lcall
pop
add
clc
or
and
pop
pushl
xor
jle
mov
call
lahf
and
add
movsb
inc
xchg
xlat
outsb
or
ljmp
pop
xchg
fidivrl
rcrb
inc
pop
push
pop
inc
aas
or
mov
dec
push
sbb
adc
icebp
mov
inc
adc
add
adc
insl
jns
adcl
lds
out
inc
mov
mov
es
sub
rolb
cmc
adc
push
jne
lret
cmc
repnz
and
xchg
rcrl
jo
jo
add
cmpsb
ss
arpl
out
inc
ja
pcmpeqb
in
data16
inc
sbb
and
ret
cmpsl
das
mov
lock
std
jle
inc
mov
mov
xor
test
xor
add
test
in
mov
jne
mov
mov
dec
mov
cltd
push
or
aas
jle
test
pop
adc
or
push
jns
xor
cmovbe
and
pop
add
nop
clc
pushf
pop
mov
ss
xchg
orb
xchg
int
mov
out
xor
aam
add
push
leave
xchg
leave
mov
and
clc
dec
das
inc
arpl
sbb
js
mov
in
test
adc
pop
imul
xchg
repz
and
and
lods
and
movsl
inc
mov
sbb
cld
aam
imul
mov
xchg
inc
lret
pop
test
and
insl
inc
push
rcr
or
xchg
arpl
mov
sti
and
rcl
repz
gs
fistl
pop
loop
push
xchg
leave
add
or
cmp
sbb
inc
std
mov
int3
fprem
repnz
dec
shll
arpl
sbb
xchg
push
movsl
cmp
jnp
pusha
add
outsl
push
jp
sub
lcall
sbb
aad
roll
mov
bound
ljmp
and
mov
jne
inc
jbe
movsl
int
jno
mov
cmpsb
repz
fnstsw
adc
out
jecxz
add
xor
dec
int
mov
imul
in
mov
lods
loop
xor
cwtl
xchg
loop
sbb
cwtl
jae
sahf
enter
fidivs
outsl
adc
lock
xchg
jo
inc
sbb
inc
add
or
xchg
test
inc
inc
xchg
jne
inc
cli
call
jno
adc
jb
xor
sub
fwait
daa
lods
mov
sbb
xor
in
pop
lcall
mov
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
and
loopne
jl
dec
pop
jl
std
cmp
leave
xor
popa
push
add
orb
ror
jmp
pop
fs
cmp
test
out
xor
push
shrl
and
push
adc
aad
pop
pusha
push
cmp
mov
push
cmp
cmp
push
aaa
or
and
add
js
repnz
movsb
lods
int3
sahf
add
inc
sbb
rcrl
xchg
orb
mov
inc
pop
add
incb
add
or
dec
jo
xchg
sbbl
stos
sbb
add
mov
and
xlat
scas
push
ret
push
sbb
and
ljmp
or
data16
ss
and
dec
pop
mov
nop
rcrb
lcall
movsl
aad
inc
sbb
loop
fs
mov
push
scas
mov
and
into
pop
out
dec
out
in
ds
add
hlt
mov
insb
xchg
dec
xor
pusha
mov
and
xor
ret
jle
inc
repnz
push
mov
pop
out
add
daa
pusha
pushf
cltd
pusha
in
add
mov
mov
fwait
les
into
js
adc
ds
test
rcll
pusha
xor
mov
sbb
push
sbb
mov
ss
mov
push
push
or
adc
mov
and
push
outsb
stos
clc
fisubrs
in
ljmp
jl
cmp
test
lret
mov
xor
or
sub
sbb
iret
or
out
ret
sub
mov
mov
sub
xor
mov
out
mov
sarl
or
jo
adc
int3
shrl
and
jl
xor
js
mov
loopne
imul
mov
arpl
inc
repz
scas
xchg
jmp
mov
and
mov
push
scas
adc
cltd
lea
loopne
mov
ss
cs
shrb
pop
xor
xchg
subps
les
out
lret
loop
loop
jle
nop
or
pop
or
aam
jb
rcl
in
aaa
xor
icebp
pop
or
shl
pop
shl
cli
and
fwait
adc
es
sub
out
sbb
repnz
jl
mov
cli
push
pop
aaa
or
pop
adc
dec
add
inc
hlt
mov
and
test
and
aam
aad
repnz
in
adc
push
iret
out
mov
popf
fnstenv
outsb
jp
iret
mov
mov
add
leave
mov
in
hlt
cmp
fistps
dec
pop
and
ja
cli
pop
not
xchg
sbb
sar
outsl
rolb
popa
pop
orl
adc
outsb
addr16
test
mov
inc
cmp
mov
fbstp
sti
dec
mov
stos
mov
inc
lods
call
mov
push
sbb
scas
jne
push
cmp
testl
cmp
enter
bnd
dec
daa
lcall
out
jg
addb
stos
add
adc
pop
inc
xor
add
and
or
adc
rolb
addr16
jmp
adcb
in
test
mov
and
pop
pop
cmpsl
outsb
cmp
pop
and
rolb
stos
ret
orl
cmc
rcr
outsb
jnp
xchg
ss
inc
inc
repnz
aas
fimuls
call
sub
mov
xchg
imul
scas
push
adcb
push
sbb
mov
mov
testb
ja
je,pn
in
hlt
fdivrs
ret
fnstcw
stos
nopl
sbb
mov
popa
lods
pushf
mov
dec
std
mov
pop
lahf
lds
mov
mov
sbb
jp
popf
jb
adc
jg
lcall
xchg
push
xchg
stos
ret
mov
push
mov
xor
test
aam
mov
jno
in
cwtl
js
xor
sub
push
sarl
xor
out
jne
mov
sub
out
setg
add
xor
xchg
movsb
lea
sub
rorl
jo
add
in
dec
or
sub
inc
shrb
or
push
stos
das
sub
inc
and
jp
sub
shlb
push
test
scas
cmp
xlat
jo
pop
je
jge
lret
and
ljmp
jecxz
xor
jb
repz
or
cld
sbb
fsubs
pop
shlb
in
cmp
je
pusha
test
adcb
pop
mov
push
jno
mov
cmp
cmpsb
sub
fprem
nop
sbb
xchg
inc
popf
push
dec
dec
inc
inc
jmp
sub
mov
lea
inc
jle
jge
add
xchg
fcmovnu
stc
dec
popa
mov
cmp
inc
and
cs
enter
inc
adc
pop
loopne
or
or
test
and
andb
movsb
loop
test
sbb
dec
movsb
mov
and
xchg
add
addb
mov
into
ret
add
pop
jge
fcmovnb
lock
xlat
xlat
dec
xchg
arpl
sub
out
sub
adc
outsb
add
lods
repnz
mov
les
fs
testw
aad
fwait
pop
in
dec
stc
mov
and
push
sbb
jo
xlat
xchg
xchg
cmp
mov
aad
loop
xchg
lret
adc
dec
inc
arpl
sub
and
popa
insl
cmpsl
xor
les
and
jo
mov
jmp
int3
ret
add
or
leave
cmpsb
scas
xor
adc
outsl
mov
out
mov
jne
mov
aam
dec
xor
fmul
adc
mov
fldcw
outsb
or
cld
pop
mov
loopne
sbb
enter
fistl
inc
stc
sub
pushf
insl
int
das
int
gs
or
cwtl
jbe
lods
push
fiaddl
xchg
sub
repnz
xchg
mov
cltd
xchg
fcoms
fs
or
mov
fistl
dec
push
leave
mov
or
pop
inc
cld
add
push
jns
call
addl
cld
xchg
jl
mov
push
push
or
adc
enter
xlat
ret
cli
or
pop
xor
xchg
jnp
ss
lahf
add
push
push
nop
and
jno
sbb
inc
mov
xor
xchg
jecxz
inc
and
into
out
outsb
cwtl
xor
fldenv
filds
cmpsb
scas
imul
pop
cmpsb
push
test
orb
xchg
xchg
push
xor
or
xchg
inc
enter
jae
or
mov
and
addr16
in
shl
lods
xor
cmc
cmpsl
sub
adc
inc
or
push
dec
imul
scas
inc
lret
int
dec
inc
inc
pop
adc
out
jne
mov
notb
or
mov
mov
sub
pop
and
jl
pop
lods
mov
sti
cld
stos
popf
cmc
xchg
push
or
subb
ret
andl
rclb
insb
add
push
add
insb
and
insb
hlt
or
cmpsb
fdiv
into
mov
sub
lock
pop
outsb
xchg
andb
std
pop
out
fldl2t
mov
inc
aaa
rcrl
inc
scas
xchg
cmp
dec
call
aad
xlat
jg
jmp
loope
push
sub
adc
add
jle
rorb
inc
dec
xor
mov
mov
movsl
sti
sub
add
xor
pop
jae
or
mov
pop
fs
push
div
xchg
add
sbb
mov
stos
add
les
pusha
pushf
out
xlat
mov
data16
movsl
add
or
je
data16
pop
mov
std
and
jno
mov
adc
fucomip
jg
movb
outsl
and
mov
shrl
sbb
jmp
add
pop
bound
and
out
sub
outsb
push
sbb
mov
int3
mov
scas
xchg
call
xchg
sbb
sub
push
and
adc
sbb
cltd
outsl
rcrb
inc
fbld
xor
jmp
cmpsl
inc
test
mov
xor
add
jo
clc
mov
or
scas
mov
fnstsw
testl
pop
cmp
test
aaa
subb
sub
inc
subl
mov
ljmp
sti
mov
inc
xor
push
push
sub
call
ja
or
imul
inc
adc
fadd
jmp
repnz
fimull
jb
pop
clc
aaa
cmp
out
das
icebp
lea
mov
fisubrs
testb
pop
pop
stc
mov
test
fwait
sub
push
aam
mov
imul
cmpsb
sbb
jnp
cmp
clc
cs
out
sbb
push
orb
lea
cmp
call
mov
push
rorl
ljmp
test
add
lret
in
adc
sub
incl
inc
mov
pop
jl
cmp
inc
cs
sub
movsl
fisttpl
mov
mov
mov
pop
incl
sub
data16
dec
mov
mov
repnz
dec
aas
sbb
cmp
imul
cmp
pop
and
sub
inc
enter
aas
dec
fistpl
cmp
in
stos
cmp
iret
stos
mov
call
pop
xchg
push
adc
or
mov
fs
jg
aam
mov
lock
sbb
hlt
fmul
jnp
test
jb
cld
mov
mov
dec
lea
xlat
scas
push
push
pusha
loopne
or
mov
add
dec
dec
and
and
in
popa
mov
jp
lahf
divps
fninit
lahf
sti
loope
cmpsl
in
stos
std
cld
mov
outsl
je
adc
cmp
adc
mov
les
jge
icebp
and
or
or
stc
popf
dec
rcrl
stos
pop
movsl
push
les
adc
adc
mov
jb
pop
pop
jno
roll
pop
lods
iret
in
sub
add
gs
jmp
fistps
and
stc
roll
inc
inc
out
in
inc
into
jno
leave
in
or
shl
test
out
push
sub
sbb
push
sti
stos
dec
dec
iret
divl
xchg
xchg
aad
lret
cmp
jmp
xchg
jmp
add
in
mov
and
imul
and
xor
sbb
xor
mov
int3
fcomps
cld
leave
ljmp
and
push
sub
rclb
jne
gs
test
rorb
mov
ret
lahf
scas
fcompl
adc
cmpsl
dec
outsb
and
push
cmc
in
cmp
xchg
inc
ficomps
fidivrs
imul
aam
mov
enter
jp
xchg
mov
sbb
sub
xchg
xchg
or
filds
ret
xorb
mov
cwtl
idivb
dec
mov
push
push
add
popf
rclb
cmp
pop
sub
mov
xor
cs
test
stc
bnd
stos
add
and
clc
adc
adc
popa
cmp
in
ror
dec
cmp
inc
xchg
aas
jb
dec
or
pop
gs
mov
bound
push
int3
stos
push
int
fs
push
mov
dec
or
mov
add
pop
mov
and
mov
cltd
subb
stc
aad
scas
push
cli
movsl
jne
inc
cltd
loopne
jmp
jmp
arpl
rcrl
adc
arpl
daa
sbb
imul
insl
mov
aas
out
iret
in
cwtl
movsb
hlt
or
sbb
int
aaa
xchg
jmp
mov
out
ror
ja
or
xor
popf
insb
enter
mov
push
inc
jnp
test
addl
movhps
shlb
bound
or
ret
movsl
in
cwtl
sub
or
xor
and
xchg
jg
cmp
push
pop
inc
mov
cld
cmp
arpl
or
insl
in
cmp
jb
repnz
mov
loop
js
flds
xor
mov
mov
dec
and
pop
outsb
testb
jmp
into
sbb
jb
ret
sbb
mov
call
dec
movsl
mov
loopne
xor
rorb
cmp
test
jns
push
ret
divb
ja
xchg
sarl
sub
mov
add
inc
push
add
push
ret
rorb
mov
scas
add
sbb
imul
mov
jne
frstor
lods
xor
push
add
fcom
cmp
mov
adc
mov
mov
cmpsb
jne
jno
lds
das
sub
inc
pop
xchg
pop
sbb
mov
std
into
lea
aam
aas
pop
mov
imul
jl
loope
ds
cltd
sbb
fwait
xchg
pop
sub
lret
dec
pop
aas
add
insb
jle
push
andl
xor
jne
push
repnz
or
mov
fstl
das
call
xor
arpl
fwait
popa
test
push
add
fldenv
fs
and
inc
test
jge
arpl
pop
je
in
xor
call
lds
fisttps
nop
daa
or
sbb
outsl
jb
imul
add
jo
push
cmpsb
scas
mov
nop
mov
aas
movsl
jae
addr16
sarl
aas
rorb
sub
addr16
or
imul
and
pop
mov
mov
imul
mov
cmpsl
js
stos
mov
inc
lea
jle
lods
cmp
mov
xor
pop
gs
aaa
inc
stc
jp
insb
xor
or
es
push
xor
mov
push
hlt
addb
lahf
push
add
jecxz
lds
or
adc
gs
mov
pushf
ss
es
lea
out
iret
pop
adc
jmp
fstpt
cmp
jle
lock
dec
pop
inc
repz
dec
xchg
fidivl
in
fcmovu
jl
or
xchg
push
pop
lret
adc
test
addr16
jbe
and
pop
jp
lods
loope
andb
pop
es
mov
sarb
dec
inc
movsb
push
fwait
movsb
xchg
mov
xchg
and
dec
push
cltd
xchg
cmpsb
scas
xor
rorb
xorl
es
sbb
shrl
sbbl
in
mov
inc
add
aad
mov
xor
aaa
mov
inc
daa
imul
cli
aaa
es
fists
sahf
stos
cmpsl
fsubrs
scas
mov
xchg
rol
cmp
lcall
sub
mov
das
add
clc
inc
jle
push
test
pop
fst
mov
inc
inc
fsubs
jmp
or
dec
mov
cmpsb
enter
pushf
mov
sti
sbb
fsubrl
dec
fwait
sub
pop
pop
mov
stos
push
loop
mov
popf
sbb
fxtract
je
decb
sub
jnp
mov
mov
adc
sbb
inc
fsubl
add
mov
loope
fisttps
psrlw
mov
or
dec
mov
xor
sbb
cmp
mov
jns
fs
shll
sbb
dec
sub
lcall
and
dec
xchg
and
mov
aaa
jle
test
lods
push
add
mov
scas
mov
lods
inc
mov
out
xchg
mov
mov
ss
pop
xlat
dec
mov
xchg
add
andb
cmp
xchg
jecxz
cli
daa
jmp
add
cmp
and
lock
sub
or
imul
add
dec
sbb
push
xlat
outsb
std
fwait
cmpsl
xchg
int3
xor
ror
adc
stos
lods
jmp
cmp
xchg
or
imul
movsl
adcb
lods
aam
pop
sub
mov
sbb
push
inc
adc
lea
push
aad
lcall
adc
mov
xor
mov
lea
pop
mov
lret
fstps
push
idivb
xchg
test
jb
jbe
pop
lret
jmp
clc
shlb
jge
mov
cmpsl
idiv
pop
loop
mov
or
sbb
vpmacsdd
mov
dec
add
push
jb
lret
mov
in
ret
pop
sbb
fildll
push
mov
mov
aad
aad
jg
andb
mov
push
add
jmp
xor
mov
jo
cmc
insb
aaa
xchg
xchg
test
cmpsl
mov
mov
jmp
out
mov
in
inc
popa
int
xchg
pop
xor
cwtl
pop
xchg
cli
jecxz
jns
add
xor
popa
call
in
dec
pop
mov
lods
fs
int3
xor
int3
inc
or
pop
dec
add
test
and
mov
lahf
jle
sahf
mov
mov
fs
xor
inc
push
jo
jl
insb
pop
mov
or
lcall
repnz
cmpl
jb
mov
push
sub
leave
cmp
cmp
test
and
xchg
pushf
pop
test
mov
insb
jecxz
push
testl
fcmovu
ss
xchg
xor
les
xchg
lcall
xchg
xchg
pop
int3
fists
sub
stos
dec
cmp
cwtl
rclb
enter
jl
ret
test
test
mov
and
rorb
movsl
mov
push
dec
pop
jae
dec
bound
clc
movsl
aas
mov
cmp
loopne
dec
mov
mov
push
adc
ret
gs
sbb
fs
jns
in
cmpsb
data16
jbe
pop
mov
push
stos
sbb
in
xchg
out
dec
shrb
aad
pop
cmp
push
shll
cs
pop
mov
push
pop
int
cmp
mov
sbb
pusha
mov
mov
cmp
or
cmp
pushf
out
aas
dec
int
sbb
ret
inc
pop
mov
jae
imul
dec
mov
xchg
pop
js
sub
fimuls
stc
arpl
sbb
pop
cmp
fisttpll
xchg
fidivl
scas
loop
insl
xor
stc
cwtl
mov
sar
fmull
js
jle
and
mov
mov
lds
mov
mov
adc
push
xchg
stos
adc
jl
push
nop
into
add
das
jg
sbb
pop
xchg
xor
lahf
iret
lods
cmc
aaa
mov
pop
add
pop
inc
xlat
stos
in
flds
test
push
mov
das
pop
sbbb
call
stos
js
mov
cmp
pop
adc
test
dec
scas
cmp
and
es
inc
popf
shr
inc
stc
ret
mov
cmp
fucom
dec
dec
loope
fsubr
mov
cs
pushf
ds
iret
test
xor
js
and
shlb
mov
jmp
in
dec
ljmp
movsb
xlat
and
xchg
scas
push
and
aaa
dec
inc
les
cmp
data16
jp
mov
sub
rol
push
int
sbb
jle
or
jmp
loopne
dec
xlat
add
loopne
inc
inc
mov
mov
mov
bound
fstps
pop
incb
dec
inc
add
imul
nop
repnz
jge
pop
push
das
push
cmpsb
pop
fisttpll
mull
enter
out
andb
push
arpl
stos
inc
jg
mov
sbb
rorb
das
mov
js
sahf
pop
stos
ss
into
in
imul
xchg
jecxz
mov
pop
mov
pop
push
pop
add
loop
mov
aaa
or
sub
frstor
fnsave
mov
jmp
inc
ss
jge
dec
test
test
sarl
jnp
sbb
out
lock
push
dec
and
xchg
xchg
addr16
jmp
and
hlt
lahf
hlt
fidivrl
cmp
lock
mov
sub
test
cmc
sub
cmp
orb
push
mov
xlat
cwtl
mov
into
insb
mov
add
sbb
add
mov
jnp
sbb
int
xor
sub
andl
mov
js
mov
xchg
call
cmpsb
pop
add
push
jb
xor
fidivl
pop
lahf
ret
push
adc
mov
xor
push
dec
rolb
jo
cmp
adc
pop
arpl
mov
sar
je
outsl
jge
and
test
into
mov
bound
ror
je
daa
nop
scas
sbb
sbb
xor
test
hlt
jmp
int3
jmp
cmp
ljmp
xchg
inc
mov
ret
and
stos
xchg
xor
leave
popf
call
mov
fdiv
shr
inc
pop
xor
jae
hlt
fdivr
movsl
mov
cltd
xor
inc
int3
fs
faddp
xor
scas
mov
jno
jo
mov
ljmp
mov
lods
in
xchg
jle
inc
mov
in
jns,pn
popf
pop
pushf
aam
out
hlt
xchg
and
lret
daa
pusha
popa
mov
rol
and
jl
jo
sbb
jg
xor
ja
movsb
mov
push
ret
dec
enter
in
mov
push
dec
or
pop
push
stos
loop
jns
or
insb
xchg
sbb
push
mov
adc
call
xlat
jo
ficomps
pop
bswap
aam
popf
inc
ds
mov
es
ljmp
icebp
ss
ret
cmp
fwait
or
jp
fsts
add
movsb
in
test
add
adc
cwtl
lds
ds
xor
cwtl
push
or
popf
xchg
mov
out
mov
rorl
test
les
and
jo
mov
call
orl
hlt
inc
arpl
dec
lahf
inc
popa
and
mov
into
dec
js
lret
xor
mov
stos
mov
cli
jl,pn
mov
xchg
sbb
insb
jp
mov
sub
cli
adc
iret
pusha
jbe
scas
add
aaa
xor
jge
cmp
out
cmp
inc
std
jmp
lret
lcall
sub
dec
out
cmp
jge
inc
fsubrp
pop
xchg
adc
lahf
jnp
adc
cmc
jge
sbb
and
jmp
nop
cmpsb
dec
adc
cwtl
dec
por
repz
mov
imul
fidivrl
xchg
cmpsl
mov
push
std
outsb
add
lret
xchg
imul
or
xchg
mov
mov
jns
or
cmp
or
leave
sbb
shrl
xor
lea
jg
repnz
out
sub
jmp
sub
pusha
sahf
add
enter
pop
mov
push
and
and
push
pop
in
and
hlt
sub
mov
fadd
push
lea
call
aam
xchg
in
test
in
cmpsl
int3
je
push
cmp
punpckhbw
imul
into
or
add
xchg
ss
mov
mov
repnz
scas
fabs
push
loop
rcrl
xor
in
lcall
roll
jb
cli
ret
mov
movsl
arpl
mov
fndisi(8087
add
xor
push
movsb
xchg
add
outsb
or
dec
inc
inc
or
es
jge
push
pop
fistpll
fldcw
mov
and
ss
jecxz
aaa
mov
jle
nop
mov
pop
push
cltd
mov
ljmp
cmpsb
and
mov
popf
pop
aad
jnp
shrl
xor
int
rcll
xchg
inc
cmc
dec
nop
fwait
ret
mov
fcmove
iret
shlb
hlt
mulb
sbb
adc
js
push
and
notl
iret
fst
in
dec
and
stos
mov
lods
ljmp
ret
pop
add
lea
pop
adc
nop
aaa
test
jnp
push
xchg
cltd
mov
out
mov
sbb
mov
sub
dec
fmuls
and
inc
aas
subl
sbb
mov
xchg
call
adc
cmpsb
and
xchg
adc
aas
add
das
fwait
jecxz
jb
int3
sbb
sbb
ja
fsts
pusha
fistpl
push
pop
push
test
push
enter
sub
movsl
mov
jo
push
xchg
pop
pop
ss
daa
dec
lahf
aam
push
push
pop
ficoms
mov
aaa
je
or
das
sub
pop
pusha
mov
lods
out
mov
pop
sbb
rorl
adcl
xlat
xchg
mov
loop
in
dec
ja
mov
xorl
repz
cmp
ret
sarb
pop
cltd
pop
dec
sub
sbb
lret
add
add
ret
mov
xchg
sub
pop
enter
and
jne
pop
and
imul
les
mov
or
cmp
cltd
add
fimull
sub
ror
das
cwtl
pop
stc
push
jle
cmp
fmulp
push
aaa
in
sub
sbb
lcall
ds
out
xor
rol
mull
dec
jne
iret
andl
cmp
mov
nop
push
cli
popf
push
cli
push
pop
or
lds
push
mov
mov
jp
xchg
pop
outsl
int3
xchg
ljmp
inc
push
shll
mov
mov
repnz
or
xchg
add
and
orl
orl
sahf
std
cmp
insl
test
scas
rcrb
and
out
mov
test
js
jo
mov
cltd
std
jmp
roll
bound
cmp
jno
inc
std
int
sbb
mov
aaa
mov
out
test
inc
ja
push
inc
neg
sbb
mov
scas
sbb
out
adc
pop
roll
sbb
mov
gs
xchg
sub
or
stos
test
rclb
push
xor
stos
push
sahf
push
add
loop
xor
pop
sub
sbb
dec
add
cmp
adcl
mov
ljmp
ja
loop
pop
rcrl
loop
nop
add
adc
jne
xchg
jae,pn
test
push
push
mov
sub
cmp
into
pop
decb
cmp
adc
data16
cmpsl
loop
out
pop
and
into
jp
mov
js
inc
add
ja,pt
mov
and
or
xchg
pop
mov
xchg
test
push
and
mov
adcl
push
mov
mov
mov
fidivrl
orb
xchg
pushl
xor
xor
adc
and
mov
outsb
fs
jnp
popf
cmpsl
xchg
cltd
dec
rcll
fisubrs
cmp
pushw
ret
and
pop
jg
and
and
ja
or
andb
outsb
fistl
out
sar
adc
aas
sahf
cli
adcl
cmp
xchg
int
sbb
popa
xchg
leave
daa
xchg
iret
in
jno
mov
dec
dec
lea
gs
fldt
mov
int
out
mov
lock
imul
lahf
sub
dec
cmp
arpl
jno
stos
mov
dec
shll
inc
out
xor
roll
jp
loop
out
fdivrl
jl
cwtl
leave
out
imul
test
in
arpl
pop
cmpsb
aas
push
jle
fstpl
outsl
fistpll
lds
in
push
mov
xchg
nop
pop
test
shrb
in
pop
out
ds
xchg
dec
roll
push
cli
and
imul
data16
fdiv
cmp
jle
divl
aas
jnp
stos
push
ljmp
movsl
popf
and
jle
add
inc
repnz
cltd
mov
jmp
leave
pop
mov
iret
cmp
sarl
cmpsb
pop
lahf
push
pusha
movsb
mov
rcrl
sbb
fsubr
mov
daa
fcmovnb
push
subb
out
push
test
fadds
outsl
in
sub
pop
fimull
cmpsb
addl
outsl
jbe
add
cmp
iret
loope
dec
fs
and
mov
rolb
dec
loopne
nop
adc
inc
std
stc
mov
and
push
ljmp
addr16
mov
cld
mov
inc
jb
jne
jbe
sahf
adc
add
dec
and
pop
lock
movsl
pop
xor
pusha
aas
cmpsl
or
xor
mov
ljmp
in
shll
pop
dec
arpl
dec
outsb
xchg
dec
into
mov
and
lea
dec
ds
sbb
ret
ja
jge
sbb
fs
xor
cmp
xchg
lds
clc
fidivl
loopne
les
and
out
jmp
test
inc
or
int
mov
mov
pop
outsb
dec
sub
lock
or
lret
push
cmc
jmp
push
fiaddl
or
adc
imul
jno
sti
cltd
cmp
nop
and
popa
sahf
adc
mov
movsb
ret
loop
jno
lea
popf
mov
fld
movsl
subb
sahf
push
movsl
mov
and
repnz
outsl
cmp
aaa
sub
outsb
sub
leave
imul
dec
adc
jno
cmpsl
shll
xor
scas
out
test
push
shll
jnp
sbbl
jnp
and
fs
fcmovbe
xchg
mov
and
jle
movsl
push
in
ss
push
lret
incb
mov
sub
test
and
subb
nop
mov
or
pop
shlb
inc
push
cmp
fstpt
pushf
iretw
push
xchg
mov
scas
enter
pop
jl
in
stos
into
xor
leave
clc
ja
sub
dec
and
add
imul
aas
jge
dec
leave
mov
fcmovu
pop
es
inc
mov
addr16
out
stc
pop
inc
cmp
loope
lea
in
stos
sbb
imul
mov
adc
dec
mov
mov
addb
cwtl
es
adc
cld
pop
jp
adc
stc
mov
inc
sbb
into
jg
add
pushf
mov
cmp
sti
in
mov
aam
dec
inc
in
js
outsl
mov
cld
jbe
test
add
jmp
and
int
inc
or
sahf
mov
xor
sbb
int
je
out
cmp
add
faddp
enter
bnd
into
ds
jb
xor
imul
push
cmp
fdivrs
ret
pop
lahf
aad
and
sar
jns
incl
xchg
lcall
gs
xor
xchg
shlb
je
mov
mov
xchg
out
adc
fldt
faddl
cld
sub
push
pop
xchg
or
sub
sub
fcmovu
out
fidivl
mov
fimuls
fsubrs
cmp
sub
jg
movsb
insl
repz
inc
adc
or
jbe
imul
hlt
lea
out
sarl
push
and
mov
stc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
dec
cwtl
iret
and
pop
jl
jge
sbb
icebp
mov
cmp
faddp
cmp
add
pop
xor
and
xchg
sbb
sti
fs
aas
gs
movsb
dec
add
scas
cltd
iret
sub
push
cmp
ds
xor
cmp
and
or
loope
and
aaa
sub
sti
rolb
xlat
pop
loope
adc
add
sbb
not
and
push
es
nop
ret
movl
jae
dec
in
test
dec
mov
pop
stos
testl
inc
sbb
rcrb
divb
dec
pop
test
es
clc
sub
sub
stos
outsb
or
jecxz
lea
les
sti
sub
push
addr16
push
sbb
stos
imul
mov
jl
loope
enter
int3
sub
jno
cmp
and
imul
pop
xchg
fisubs
jmp
rorl
sub
or
dec
inc
push
mov
ss
mov
pop
xor
lahf
mov
and
inc
add
jl
inc
js
mov
inc
xchg
mov
xchg
rcll
mov
aas
jns
pusha
adc
sub
pop
and
sbb
adc
adc
in
gs
jg
inc
push
push
jl
div
scas
movsl
out
cld
mov
or
jle
js
sbb
push
mov
inc
iret
push
add
push
int3
sti
pusha
push
pop
cltd
add
pushf
lods
mov
idiv
dec
lret
push
insb
test
mov
arpl
adc
insl
pop
js
pop
push
mov
push
mov
inc
mov
or
dec
cmp
pushf
mov
fwait
xor
xchg
push
sub
cmp
mov
ret
adc
loope
lock
lods
jns
push
adc
outsb
or
leave
pop
pop
pop
cwtl
xor
gs
je
sahf
into
popf
push
cmp
lods
pop
mov
add
loop
fidivrl
gs
das
outsb
sti
mov
dec
lahf
add
sahf
and
dec
xchg
xor
daa
adc
push
fbstp
aaa
outsl
outsb
repz
pop
adc
lgs
jmp
outsl
daa
inc
sub
popa
push
pop
repnz
insl
jecxz
and
xor
adc
insl
aam
inc
es
pop
xchg
es
out
sahf
ret
incb
add
call
sar
outsl
xchg
fldenv
les
lahf
push
and
cmpsb
test
aas
mov
gs
push
fisubrs
pusha
pusha
jae
add
insl
testb
movsl
xchg
idiv
aaa
xchg
cmp
sub
mov
dec
addb
in
mov
adc
or
inc
jp
xor
push
fistl
ret
stos
pop
cmp
repnz
or
push
mov
xor
out
dec
sbb
mov
adc
inc
jnp
lock
mul
sbb
mov
mov
outsl
add
out
mov
sub
ret
lock
sbb
mov
movsb
dec
xchg
inc
in
pop
les
insl
add
jecxz
cmc
fsubrs
test
push
lods
lcall
sti
cwtl
stos
sahf
dec
push
popa
or
insb
shr
sbb
hlt
push
je
mov
xor
cmp
and
sub
cwtl
adc
loope
cmp
mov
dec
pop
add
jecxz
stos
dec
lea
or
and
mov
sarl
mov
mov
rcll
ja
test
ljmp
inc
icebp
xchg
dec
pop
sarl
cwtl
sub
xor
into
cmpsb
xchg
ss
lods
lods
dec
jno
lret
dec
pop
sbb
jo
bound
fisttps
adc
add
outsl
add
cmp
mov
shr
rcrb
mov
mov
movsb
cld
adcb
aas
dec
push
sbb
push
jmp
in
xor
jle
sub
aam
mov
push
inc
mov
repnz
cmpsb
xor
xor
pop
xchg
aad
mov
arpl
xchg
enter
hlt
shrl
sub
das
jl
jbe
call
xchg
rcll
adc
add
jb
movsl
fs
int3
push
xchg
push
cmp
stos
ja
cwtl
sarl
push
je
dec
in
add
in
xor
mov
cmpsl
icebp
loop
loopne
frstor
pusha
imul
repz
sbb
pop
outsb
fldt
jno
fcmovnbe
out
mov
mov
insl
shrb
frstor
jno
les
add
inc
ds
jnp
cmpsb
cmp
inc
adc
pop
xor
lahf
mov
mov
push
xlat
push
subb
nop
sti
and
add
mov
mov
push
pop
adc
or
pop
mov
xor
push
iret
mov
inc
lods
push
jle
push
add
add
lds
inc
rorb
loopne
daa
jb
jp
aaa
iret
pushf
sarb
push
adc
in
pop
inc
and
add
mov
repz
push
mov
fwait
daa
es
popa
and
fisttps
pop
fstl
test
xchg
es
iret
mov
std
rcll
xor
inc
ror
xchg
or
jne
ror
std
xor
outsb
ret
push
pop
inc
in
ret
stc
push
stos
cmp
int
cwtl
cmp
push
adc
andl
shll
shl
and
cltd
insb
sbb
imul
test
std
push
rorb
mov
dec
fnstsw
cli
mov
cs
inc
mov
lahf
xchg
faddl
inc
out
sub
dec
int
cmp
cmp
push
lahf
in
shr
fstps
mov
mov
lea
push
rolb
repnz
testb
cli
xchg
stc
lock
pop
pop
insl
jne
jg
ret
flds
cmp
adc
and
jecxz
ds
adc
jmp
dec
repz
push
mov
mov
jno
cmpsb
arpl
fisttps
test
pop
cmp
mov
das
add
jno
outsl
movsb
sub
jbe
and
inc
test
add
xor
aaa
dec
jge
aaa
sysenter
pop
inc
pop
pop
insl
jnp
mov
inc
icebp
or
sbb
push
and
sub
in
adc
jb
mov
add
outsl
rorb
ret
sahf
cltd
sbb
inc
push
sub
test
loopne
mov
fldenv
pop
inc
mov
or
ds
cwtl
int
lcall
lret
and
xchg
push
sub
lds
loopne
adc
aas
es
xor
push
sub
xchg
add
inc
jecxz
es
sub
jne,pn
mov
lock
test
test
add
inc
shl
push
add
daa
pop
sarl
mov
lods
mov
mov
dec
push
mov
aaa
jl
int3
add
in
sbb
xchg
lea
cs
sti
lock
sbb
stos
pop
loope
ficompl
jl
int
sub
xchg
lcall
push
inc
cmp
mov
or
aad
jmp
push
inc
lret
incb
and
nop
dec
test
jmp
jne
into
adc
arpl
pop
in
in
test
mov
lahf
adc
incl
repz
lods
aad
fwait
dec
jmp
mov
sub
sti
mov
dec
sahf
out
in
and
incb
fwait
and
mov
stos
cmp
inc
rcr
pop
fsub
pop
push
fstpl
pop
add
repnz
sbb
mov
cld
in
movsbl
or
sbb
cmpl
xorl
jmp
lods
xchg
mov
faddl
or
repnz
jmp
xchg
mov
or
mov
lahf
adc
aam
fistpl
inc
sbb
xchg
hlt
dec
pop
mov
cmpsl
xor
jne
sbb
dec
pop
cmp
pop
jbe
mov
dec
scas
popa
push
popa
fwait
xchg
add
jge
clc
pop
pop
and
notb
push
dec
sub
and
adc
pop
int3
xor
mov
into
mov
enter
pop
xchg
scas
ds
hlt
pop
lods
pop
arpl
in
jbe
pop
loop
push
inc
xchg
and
shl
cmp
lcall
jns
imul
popf
sub
loop
add
mov
dec
into
ss
xor
aas
adc
add
mov
into
out
fcmovnbe
incb
movsb
push
fbld
in
cmpsl
push
jb
ds
inc
xor
cmpsb
adc
adc
out
in
in
pop
cltd
cwtl
adc
jl
cmpsl
in
or
lea
sbb
mov
jmp
jnp
cmpl
cmp
nop
or
cmpsl
rolb
adc
adc
add
js
pop
fimuls
mov
sbb
mov
cmp
jb
add
imul
push
cmc
loop
dec
fldt
push
ds
les
mov
test
cmp
jle
mov
cwtl
dec
dec
adc
sbb
xchg
adc
leave
dec
and
std
ljmp
jp
mov
cs
mov
jnp
pop
inc
adc
adc
leave
push
xchg
in
or
cmpsl
mov
aad
adc
ret
lret
xchg
scas
inc
xorl
cld
sbb
sub
scas
jae
push
fidivl
inc
mov
pop
stos
sub
sti
rolb
pop
int3
mov
cmp
pop
and
push
stos
mov
ss
mov
pop
fdivl
xor
push
cs
cmp
lock
xchg
leave
in
stos
pushf
or
dec
sub
pop
aam
stos
lods
cmpsl
ss
xchg
xlat
mov
mov
jbe
jp
cmp
adcb
jl
mov
jg
pop
mov
mov
ret
cltd
rolb
dec
sub
rorl
mov
or
xchg
jns
mov
rol
lcall
sbb
bound
cmp
ror
cli
mov
mov
ds
into
shr
adc
loop
movsl
push
jle
rorb
mov
fstps
mov
dec
cmp
mov
daa
sbb
inc
lcall
jecxz
sti
lret
mov
ret
iret
fsubr
cwtl
stos
frstor
cltd
inc
lods
cmc
lods
inc
ret
pop
lcall
ljmp
movsb
mov
inc
arpl
cwtl
mov
adc
stos
call
mov
ficoml
clc
sti
mov
ret
into
ret
outsl
add
enter
and
clc
divl
sbb
sbb
divl
xchg
inc
arpl
mov
dec
push
repz
push
int
in
data16
out
andb
sub
rorl
jne
into
mov
ja
lods
xchg
out
push
xor
aaa
cld
ret
aad
clc
jmp
mov
movsb
es
push
inc
pop
sub
int
leave
mov
cmp
mov
mov
cmp
adc
loop
mov
xchg
xlat
lret
push
adc
mov
adc
test
mov
aad
or
out
xchg
inc
cltd
mov
xor
pop
mov
pop
push
test
xchg
push
vpsrlq
adcb
loopne
or
mov
dec
out
test
xor
push
out
fnstsw
shr
fdivp
sbb
outsb
adc
pushf
sbb
cmp
mov
xchg
xchg
sbb
jbe
push
clc
pusha
adc
je
jg
jo
adc
nopl
fcmovbe
add
les
pop
sbb
fs
sbbl
add
xchg
sbb
data16
jnp
stos
popa
cmp
in
cmpsb
lret
lods
out
jge,pt
sub
xor
xor
mov
leave
cmp
jne
popa
sbb
std
sbb
inc
fnstenv
popf
cltd
and
push
sbb
rcll
addb
call
pop
stos
pop
aas
roll
sub
or
les
test
and
and
pop
inc
call
cmpsl
repz
xchg
sti
xlat
mov
lahf
sbb
cmp
pop
adc
call
push
cmp
mov
mov
xor
cmp
mov
loop
cmp
repz
pop
std
movsb
mov
lcall
cmp
jno
jno
popf
dec
mov
ja
inc
fnclex
add
int3
inc
mov
paddd
xchg
jns
push
mov
push
rclb
js
mov
cmpsb
xchg
inc
cli
mov
dec
cmpsb
push
mov
sti
sub
jp
into
std
cwtd
daa
adc
pop
movsb
pop
fwait
dec
jne
pop
push
mov
or
pop
jmp
out
dec
fiaddl
adc
aad
push
stos
cmp
std
sbb
cmp
mov
bound
mov
xor
ds
mov
mov
sti
xor
in
sarl
filds
jp
stos
jno
gs
mov
or
iret
mov
test
imul
ljmp
xor
out
lcall
leave
jo
ffreep
xor
out
aaa
mov
mov
mov
push
out
inc
and
dec
xor
cwtl
pop
aas
stos
pop
inc
mov
into
iret
divb
mov
mov
sub
jno
xchg
xchg
iret
adc
test
add
dec
ret
push
stc
out
jo
lcall
jo
pop
pop
pop
cmp
dec
aaa
sahf
sbb
cmp
inc
mov
cli
lret
mov
movsb
popa
lahf
rolb
add
loopne
cmpsl
fsubs
test
cltd
out
loop
push
icebp
cmp
daa
imul
outsl
insb
arpl
in
add
pop
inc
cmpsl
popa
mov
mov
enter
push
cli
sbb
adc
pop
test
cld
andl
cmp
add
outsl
daa
mov
cmpsb
fidivrs
sub
cmp
mov
ret
mov
xchg
pop
jmp
in
les
test
add
push
jmp
mov
fidivl
lret
mov
mov
mov
std
sub
into
js
add
lea
dec
mov
scas
int
sbb
shl
add
or
ficompl
sbb
adc
mov
cmpsb
pop
ret
jbe
out
inc
mov
adc
loop
xchg
outsl
mov
fstpt
xchg
hlt
mov
xor
jge
sbb
add
inc
jmp
and
jge
xchg
xchg
mov
sub
lcall
mov
mov
or
jp
inc
icebp
pop
imul
outsb
mov
imul
mov
push
ret
movsl
movsb
mov
sub
nop
add
pop
lret
loop
pusha
mov
in
xor
inc
mov
mov
icebp
cmp
jo
adc
sbb
out
shlb
add
scas
bound
mov
mulb
mov
cmc
repz
dec
inc
cmp
inc
cmp
lahf
or
scas
sbb
dec
jo
loopne
insl
mov
rcrl
lods
xchg
push
ficompl
cmp
pop
stos
sub
jo
stos
les
jg
jns
dec
cmp
push
jnp
xor
aaa
xor
es
or
cmpsb
pop
cli
lahf
and
loop
or
imul
clts
data16
arpl
fs
mov
jge
cmp
xor
mov
test
insl
cmpsl
imul
mov
mov
testl
gs
mov
xor
dec
inc
cmpsl
fbstp
pop
mov
cmp
aas
mov
push
test
js
push
in
ja
lret
je
scas
test
fs
or
leave
enter
test
iret
arpl
fucomp
aaa
mov
sub
jp
scas
push
mov
aaa
jle
mov
jle
cmpsl
jns
insb
adc
popa
in
loope
stos
xor
mov
sub
xor
inc
xchg
mov
cwtl
bound
mov
or
pop
sbb
jnp
das
daa
pop
xor
cmp
daa
iret
negb
xchg
sti
in
mov
loope
sbb
rorl
inc
jnp
push
shll
mov
rol
jl
outsl
mov
popf
jnp
cmpsb
pop
inc
add
stos
jg
in
sub
cs
movsl
lods
mov
sbb
pop
mov
js
popf
sbb
inc
dec
lret
sub
std
stos
xchg
xlat
mov
fdivrs
pop
stos
sub
outsb
push
bound
adc
sub
je
mov
pusha
push
out
cmp
adc
cmc
cmp
mov
xchg
mov
fnstenv
inc
cmpl
or
or
ficompl
mov
pop
loope
inc
fimull
mov
jecxz
loope
and
outsb
dec
subl
insb
gs
push
inc
xor
cmp
xchg
ret
cs
popf
jecxz
fwait
inc
sahf
and
lahf
inc
shlb
jae
sub
mov
sub
sub
shrb
pop
mov
data16
xchg
lods
scas
mov
test
lods
push
mov
pusha
xor
mov
cs
mov
cmpsl
dec
pop
aad
mov
jmp
icebp
jmp
sub
das
dec
mov
lret
pop
in
sarl
jmp
movsb
mov
scas
fildll
aad
pop
push
out
repz
cmpsl
xor
scas
mov
xchg
fdivl
add
push
shlb
orl
sub
pop
pop
pop
ss
jo
mov
jnp
cmp
subb
int3
popa
aas
cmpsb
sub
mov
push
xchg
push
lods
or
cmp
andb
test
push
out
mov
push
fimull
cmp
or
mov
je
push
jecxz
pop
out
les
mov
sub
or
rolb
inc
out
insl
add
sar
dec
fstl
clc
inc
call
clc
sbb
xor
or
cmpsl
mov
xor
and
in
fcomi
adc
movsl
pusha
mov
subb
jns
adc
mov
out
xor
jmp
adc
and
sub
cmp
xchg
cmp
leave
push
lahf
orl
add
mov
lods
rorl
sbb
jnp
rcll
dec
ds
ss
lds
xor
or
mov
es
cmp
lods
add
sbb
sub
imul
divb
mov
jb
mov
andl
jge
dec
adc
cmc
fdivs
popa
sbb
and
aas
sub
dec
cmp
inc
xchg
and
add
loop
jns
aaa
jg
push
jl
dec
sub
or
inc
ror
clc
mov
push
dec
cmp
and
adc
dec
xor
enter
shl
insb
ds
inc
xchg
popf
mov
or
pop
cmp
insl
or
inc
sbb
xor
sahf
cmp
push
mov
stc
sbb
mov
fidivrl
stos
pop
sbb
cmp
lcall
add
fnstcw
stc
sbb
lcall
stos
lods
cmp
test
push
test
fidivs
pushf
fs
xor
fbld
push
dec
dec
ds
push
ret
pop
fistpll
or
dec
push
lcall
lret
data16
sbb
imul
outsl
push
movsb
jp
mov
mov
pusha
pushf
mov
ljmp
into
sub
push
dec
mov
or
imul
push
cltd
xor
lcall
shr
in
mov
and
in
out
clc
push
lock
cld
jecxz
mov
inc
xchg
lea
pop
rorl
jo
jno
les
and
mov
jmp
loop
dec
xor
fisubrl
push
out
popa
cmp
xchg
fcom
mov
sub
cltd
das
lods
adc
test
test
jmp
lahf
imul
cmp
call
mov
pop
xchg
das
mov
dec
pop
adcb
or
xchg
pushf
jnp
out
in
hlt
mov
leave
lret
stos
inc
sub
adc
popa
and
add
mov
lods
enter
into
mov
mov
pusha
roll
push
sub
mov
test
lock
or
mov
xchg
sub
movsl
dec
aam
push
movsb
jnp
js,pn
je
out
sbb
gs
arpl
push
movsb
dec
jo
loop
push
in
mov
add
nop
pop
in
push
scas
dec
aas
hlt
leave
btc
mov
inc
sbb
and
sahf
cmp
sub
jo
push
sbb
push
dec
out
repz
sbb
cmc
adc
cmp
pop
xor
pop
fbld
scas
leave
cltd
mov
jl
imul
dec
rorl
inc
andl
les
icebp
mov
adc
int3
icebp
clc
xchg
mov
stc
jl
or
mov
mov
sar
lret
in
mov
fxch
add
shl
idiv
dec
lock
pop
fisttpl
outsl
pop
push
sbbl
cmp
or
or
pop
jle
int
pushf
pop
lods
push
mov
fucomi
xchg
mov
or
shl
jns
ret
js
push
or
lods
jno,pn
rol
lret
movsb
in
push
mov
cmp
xchg
cmp
mov
ds
pop
inc
int
xor
sbbb
test
ret
gs
adc
jo
fs
mov
sbb
les
enter
insb
cmp
adc
sahf
lds
sarb
sub
cmp
mov
dec
inc
add
pop
loop
nop
addr16
pop
adc
xchg
mov
dec
scas
xchg
in
int
aad
stos
icebp
mov
jb
push
and
aaa
jle
pop
cmc
jnp
push
push
mov
data16
fmuls
out
sbb
push
jg
idiv
mulb
pop
xor
pop
pop
test
scas
test
push
add
sahf
rcl
sub
insl
pop
or
imull
test
sbb
ja
xchg
js
mov
ds
sbb
and
inc
xchg
int
and
es
add
das
inc
mov
lock
xchg
lds
push
cmpsl
lret
mov
push
cmpsl
lods
movsl
jecxz
cld
rorb
xchg
stos
jbe
or
imul
pop
jmp
sbb
mov
shll
add
cltd
sahf
xchg
and
scas
lret
mov
aam
mov
adc
xchg
sub
lods
cmpsl
xchg
repz
mov
mov
cmpsb
adc
aam
es
js
leave
mov
mov
stos
aaa
negb
cmp
jo
cwtl
shrb
addl
dec
loop
pop
test
inc
jns
jns
xor
repz
mov
nop
pop
lret
xchg
adc
jmp
inc
dec
pop
fwait
pop
adc
cmpsl
stc
jmp
and
mov
repnz
dec
and
push
mov
lcall
loopne
sbb
repz
pushf
sub
pop
ret
xchg
leave
xchg
orl
dec
jmp
lret
btr
mov
mov
push
pop
pop
in
movb
xor
pop
in
or
xchg
dec
je
aam
fldt
lret
mov
inc
xchg
cli
adcb
data16
pcmpeqb
lcall
inc
jmp
sbb
int
or
ljmp
ret
xor
movsb
pop
mov
mov
aaa
xchg
mov
jl
push
jle
pop
inc
test
lock
lods
push
lret
icebp
lcall
nop
sub
popf
add
int3
push
inc
xchg
mov
scas
fisubl
jns
lods
xchg
cmp
das
loopne
lea
aad
mov
andb
dec
repz
loope
int3
scas
pop
sbb
divl
lahf
mov
xor
jge
ret
aaa
int3
sub
inc
push
or
in
jp
flds
and
jl
add
mov
xchg
xlat
mov
inc
jnp
scas
inc
loope
push
sub
loope
dec
dec
repnz
popa
les
nop
dec
jbe
test
in
insl
neg
xor
adc
jle
sbb
push
jecxz
push
cli
cmp
sbb
ja
xor
in
pop
pop
mov
mov
dec
add
jae
adc
ja
jns
daa
add
ljmp
jg
cld
movb
xchg
call
xchg
mov
dec
popf
pusha
mov
push
int
data16
cmp
dec
sbb
mov
add
outsb
pop
pop
fwait
lock
inc
enter
fwait
dec
leave
push
dec
push
scas
mov
adc
cmp
inc
fisubrl
xlat
ljmp
test
lods
popaw
dec
jne
loope
xchg
add
fidivs
push
cmp
mov
les
adc
xor
rclb
xchg
push
fstpt
call
jl
aad
aaa
or
mov
xor
dec
mov
mov
lods
fldenv
sarl
xor
mov
sti
popf
lahf
icebp
push
jbe
xlat
sub
mov
cmp
daa
orb
test
stc
insb
jnp
rcrl
dec
clc
lret
cmp
pop
mov
jle
mov
int3
cmp
xchg
cmc
shrl
xchg
mov
mov
enter
adc
push
mov
stos
jb
movsb
test
jb
cmp
push
shlb
lcall
cmp
test
mov
add
stos
cmp
xchg
js
xchg
aas
and
ljmp
cmpsl
mov
out
pop
or
iret
cmpsl
out
and
and
ds
dec
leave
hlt
inc
add
pushf
out
mov
rcrl
sbb
cmp
std
sbb
cmp
lods
adc
xchg
pushf
stos
fdiv
jno
out
mov
sti
inc
jl
inc
call
xor
cmp
xchg
mov
mov
sbb
jl
pop
movsl
sarb
out
popf
test
dec
andb
dec
enter
ffree
xchg
dec
push
jmp
repnz
push
out
test
mov
push
sub
test
cmpsl
loop
out
lods
lret
adc
pop
in
adc
fs
jg
popa
sub
xchg
add
test
dec
out
stos
clc
pop
insb
and
push
flds
mov
sti
push
pop
orb
mov
jl
sub
add
pop
call
icebp
hlt
push
je
lcall
jnp
mov
andb
add
mov
jno
sti
data16
push
jnp
loope
mov
int3
stos
pop
xor
cmc
cmpb
pop
inc
fnstenv
gs
inc
pop
mov
aaa
movsb
mov
push
mov
scas
repnz
xchg
loopne
sahf
jg
cmp
add
inc
out
xchg
dec
test
fcomps
pop
add
rcrb
cmp
xchg
lock
push
lahf
jg
xor
lea
test
outsl
movsl
loop
test
inc
inc
loop
pop
add
xor
mov
arpl
dec
push
jb
sti
add
inc
std
cmp
fwait
add
dec
mov
xor
or
aaa
lds
jno
inc
inc
jp
pop
out
adc
imul
jb
clc
jns
mov
mov
in
aad
sbb
sub
in
or
inc
je
inc
inc
shr
pushf
dec
mov
fwait
adc
in
add
push
arpl
mov
orb
dec
xchg
xchg
adc
xor
mov
shlb
inc
inc
hlt
pop
ljmp
sub
mov
cmp
push
scas
shlb
ret
mov
cmc
add
outsl
push
pop
jo
cli
dec
mov
out
aad
scas
mov
test
scas
shll
xor
jmp
scas
push
push
push
sti
faddl
jle
sub
loopne
repz
clc
add
mov
mov
in
pop
push
or
fstl
mov
jno
lods
test
mov
sbbl
mov
in
sbb
xor
stos
mov
mov
lods
dec
ss
mov
inc
fimull
push
push
add
cmp
inc
add
outsb
add
ret
add
mov
jns
sbb
or
into
fldt
pop
leave
or
cli
cmp
adc
aad
jge
repnz
push
xchg
notb
sbb
mov
push
xchg
scas
mov
sub
mov
gs
push
ja
pop
jno
pop
cmc
jge
movsb
aam
rorl
pop
cmp
push
mov
pop
std
dec
cmp
insl
movsl
jg
xor
or
or
repz
mov
je
outsb
inc
scas
aas
cmpsb
xchg
xchg
adc
rcll
aaa
inc
push
sar
std
test
jg
inc
dec
sub
push
fcomps
or
fs
sti
sbb
fnstenv
mov
adcb
mov
jle
cmc
or
sbb
insb
divb
int
enter
mov
cs
fcomi
push
lret
mov
mov
inc
xchg
das
shll
sub
dec
add
andb
es
pop
mov
xchg
test
outsb
push
fidivl
mov
inc
mov
pop
push
jle
ficomps
loope
hlt
lds
dec
scas
loop
sub
in
push
fwait
test
and
sahf
cmpsb
sub
xchg
jle
int
out
pop
or
call
sub
push
outsb
fildll
cs
xchg
mov
movsl
iret
cmp
cmpsb
cmp
jge
call
int3
fdivrp
sub
je
fiaddl
mov
retw
add
inc
ja
decb
lret
fistpl
pop
fwait
gs
shrl
enter
and
xor
fmull
scas
mov
cmp
add
js
fsubs
fimull
lods
rorb
inc
mov
xor
ss
inc
xchg
push
cs
int3
or
into
lods
into
in
push
push
int
cmp
sbb
xor
out
orb
test
inc
or
repz
mov
xchg
rdtsc
dec
push
les
popf
xor
mov
xor
sbb
clc
cs
aaa
ljmp
fstp
aam
pop
fstpl
aad
mov
mov
xchg
gs
jp
fmulp
push
push
loop
jns
fisttpll
or
sub
or
daa
sbb
sahf
mov
loop
hlt
sub
push
sahf
cmpl
imulb
aaa
popa
popf
pop
pushl
jnp
adc
repz
mov
outsl
xor
fiaddl
push
fmul
clc
out
jns
addr16
push
pop
outsb
data16
xor
mov
cmp
or
xor
aaa
cmpsb
and
test
daa
test
pop
xor
xchg
imul
jge
ss
jmp
or
xchg
mov
fcmovu
test
mov
popf
sbb
mov
mov
lock
jns
scas
pop
xchg
jbe
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
lds
sbb
daa
push
jl
pop
pop
jl
mov
sub
nop
sub
sub
sbb
aas
call
ja
pop
inc
je
enter
sub
aad
adc
push
or
inc
outsb
jne
add
int
mov
test
andb
jne
int3
cld
jmp
fldenv
push
inc
jge
adc
pop
xor
dec
dec
insb
not
fxch
sbb
push
dec
pop
inc
pop
xor
sti
and
xchg
mov
xor
inc
add
lock
jno
ret
scas
add
or
sub
scas
xchg
adc
mov
int3
aas
add
sbb
pushf
notb
aas
xor
lea
pop
incl
mov
jo
sbb
push
and
aaa
or
andb
negb
mov
out
or
js
mov
xor
cs
jno
pop
adc
enter
repnz
mov
cli
push
mov
faddl
fs
lret
add
jnp
flds
mov
lods
xor
subb
lahf
inc
shl
sti
push
addl
add
sub
out
out
mov
fucom
jmp
sub
scas
stc
adc
cs
inc
cmp
popa
std
jmp
imul
bound
push
xchg
xor
xchg
aas
sub
int
add
test
mov
mov
xor
lret
inc
insl
ds
lods
bound
push
fstl
notrack
das
je
jmp
scas
sub
popf
fsubl
mov
adc
js
in
sbb
mov
and
or
je
sbb
lods
leave
sbb
repz
fmuls
push
popf
xchg
add
js
xchg
mov
mov
jo
out
in
cmp
fldl
cli
lret
in
mov
ret
js
mov
dec
mov
ljmp
subb
jne
je
mov
outsl
push
int3
jbe
add
dec
out
jnp
into
sahf
scas
jo
add
jae
and
inc
adc
incb
or
push
rcrl
testb
andl
scas
outsb
daa
iret
imul
xorl
shrb
shl
incb
test
push
and
fcmovbe
dec
dec
call
rolb
push
rorl
xchg
pop
sub
dec
ficoml
xor
xor
mov
adc
stos
push
imul
clc
add
jae
lea
mov
mov
mov
mov
dec
mov
clc
mov
dec
jge
popf
xor
pop
mov
popw
test
jle
mov
cmc
arpl
imul
lret
adc
clc
or
mov
outsl
jne
sub
xor
inc
dec
and
xorb
test
pop
inc
sub
xchg
xchg
test
pushf
movsb
mov
mov
out
mov
dec
xchg
jge
sahf
pop
std
adc
data16
lret
xor
mov
jns
add
mov
mov
push
and
je
xorl
xchg
nop
and
orl
or
push
push
test
imul
and
xchg
pop
clc
mov
xchg
dec
jo
test
rcrl
in
sahf
mov
xchg
out
bound
pop
xchg
inc
inc
popf
mov
int
int
cld
add
dec
cltd
add
jmp
pop
or
das
xor
es
inc
loop
sub
mov
pop
mov
call
sub
and
fisubrl
and
roll
dec
and
insb
aad
outsl
mov
call
push
sub
pop
movsb
shl
mov
jo
scas
cmp
bnd
dec
outsb
push
adc
repz
out
push
popa
aas
mov
ja
inc
fdivp
ret
fstpl
repnz
cmp
fsubrl
dec
mov
sub
sbb
insb
mov
out
lods
push
pop
fidivl
push
cmpsb
je
xlat
cs
int
or
fnstsw
push
outsl
sti
jl
jns
cs
or
pop
jp
push
sbb
cmp
leave
std
movsb
push
jno
icebp
xchg
dec
xchg
add
ljmp
pop
ret
xor
fsub
aaa
pop
fsubrs
adc
cli
imul
xor
fs
mov
cmpsb
mov
or
leave
lea
sbb
add
xlat
xchg
ror
and
cmp
sbb
fsubl
mov
inc
scas
inc
xchg
jbe
cmp
jne,pn
or
push
adc
and
adc
or
and
aam
ss
mov
push
pop
loopne
sbb
cmp
mov
ja
int
xor
cmp
pop
or
jge
and
lods
jecxz
addb
jp
sbb
scas
fwait
loopne
sub
inc
and
fisubs
icebp
mov
stos
movsl
sub
unpcklps
imul
cli
cmp
cmp
jp
cmp
imul
imul
mov
or
test
jecxz
xor
push
pop
repz
adc
dec
push
arpl
loope
cld
dec
adc
les
std
sbb
in
and
lea
int
stos
dec
jbe
cmp
mov
out
sub
push
jo
jmp
or
mov
test
mov
test
push
jle
test
loope
inc
fprem1
addb
mov
push
or
orl
sub
mov
lret
pop
cmp
test
push
enter
lret
pop
cmpb
jge
lcall
ret
jge
mov
sub
lock
jo
dec
cmp
cwtl
and
mov
aad
adc
das
lahf
int
rorb
lock
fimull
outsl
pop
in
je
mov
cmp
test
rcl
pop
push
push
jnp
add
sub
arpl
ss
xor
fwait
ret
xchg
push
sbb
inc
mov
dec
jae
push
or
mov
dec
nop
adc
sbb
push
in
outsl
cmpsb
inc
sbb
inc
stos
out
push
lea
jmp
push
int
lods
cmp
inc
xor
dec
mov
roll
lea
adc
jns
test
aas
scas
cs
jb
into
addr16
outsl
or
add
pop
iret
push
add
push
das
xchg
out
and
mov
xchg
ret
adc
jg
cmp
sbb
inc
out
scas
mov
inc
movsb
popf
aam
adc
dec
pop
clc
dec
push
xchg
jb
rolb
xchg
sbb
mov
push
daa
add
push
mov
data16
pop
ja
rorl
iret
int3
test
mov
idivl
xchg
mov
shll
pop
sub
outsb
test
push
leave
sahf
push
in
sub
pop
cmpsb
and
in
or
push
sbbb
andb
cltd
std
iret
out
fstpt
lods
jne
dec
ret
inc
mov
out
lahf
std
aad
inc
dec
int
ror
lcall
mov
add
pop
into
xchg
inc
sarl
xchg
pop
add
ret
testl
fwait
push
cwtl
int3
xchg
cmp
jbe
ror
loopne
dec
adc
clc
mov
sbb
addr16
pop
call
stc
out
pop
lock
cmpsb
inc
push
push
inc
insb
cmpsl
notl
popf
les
cmpsb
lcall
mov
in
and
movsb
dec
mov
jl
push
mov
mov
push
stc
repz
inc
sub
fstps
xchg
nop
xchg
insl
jecxz
mov
popa
test
iret
and
xchg
ds
into
lock
lea
subb
pop
dec
repnz
sbb
rolb
inc
sub
add
stos
loop
xchg
adc
sbb
jge
jno
jmp
mov
lods
xchg
js
mov
stos
mov
mov
pop
sbbl
mov
js
push
sbb
mov
into
hlt
fcmovnb
gs
out
rcr
inc
fnclex
pop
testb
xchg
and
jp
mov
or
add
mov
inc
sarl
stos
addr16
aad
test
bound
rol
hlt
loope
lock
hlt
es
pop
fst
fs
mov
inc
and
adc
lahf
xor
dec
mov
sbb
or
mov
pushf
sbb
gs
push
xchg
mov
push
or
xchg
sahf
fsub
sub
pusha
push
mov
rcrb
inc
es
mov
gs
aam
sbb
xchg
xchg
enter
lret
xchg
push
lcall
xchg
sub
or
inc
loop
inc
dec
xlat
aam
and
cmp
pop
pop
inc
or
add
dec
jp
mov
and
je
sbb
push
xchg
shrb
ret
xor
inc
es
push
and
sbb
jl
add
sbb
pop
add
out
push
stos
pop
fbstp
jne
fistpll
gs
int3
xchg
int
sbb
inc
push
lret
xchg
aad
jae
loope
fcomp
out
jmp
lahf
mov
xor
mov
movsb
or
out
sbb
jge
push
adc
sub
xor
pop
xchg
test
js
mov
push
lret
add
in
jp
out
dec
jle
adc
pmulhuw
lcall
push
adc
into
xor
sub
pop
out
shl
and
mov
cmp
scas
lods
cld
sbb
cmc
cmp
ds
aas
push
sahf
xor
cltd
test
aaa
je
xchg
lahf
fwait
aam
mov
mov
xchg
fs
aam
test
dec
pop
mov
das
mov
and
sbb
xchg
iret
iret
dec
fcomps
and
pop
dec
out
outsl
cmpsl
pop
mov
push
mov
add
scas
pusha
rep
into
test
cmp
daa
pop
std
ret
and
mov
mov
repz
jl
aad
mov
cwtl
xchg
jecxz
cs
cs
mov
iret
mov
ret
push
xor
rcrl
jg
or
insb
and
repnz
in
clc
xor
aam
fwait
and
mov
lea
add
xor
pushf
dec
movsb
into
out
gs
lock
mov
sub
adc
je
xchg
flds
jl
xchg
jge
stc
inc
cmp
push
push
add
mov
push
shll
shr
pusha
xor
jb
or
insl
push
nop
out
jo
and
mov
dec
scas
mov
shll
adc
rcr
stos
jne
test
inc
mov
jo
mov
hlt
sub
pop
jae
shll
or
cwtl
jbe
test
xor
lcall
and
adcb
jno
sub
jp
push
pop
jl
push
shl
sub
lcall
xchg
cmp
out
iret
jo
mov
or
mov
push
out
sahf
adc
ret
fstpt
mov
out
std
mov
orl
fsubr
ljmp
hlt
cmp
clc
or
jb
pop
add
xchg
push
repz
aad
fcom
add
in
das
ds
xchg
dec
aas
push
mov
dec
cld
mov
jge
out
adc
dec
ss
mov
mul
loopne
add
enter
and
mov
cmp
sbb
jb
out
push
and
cmp
add
lea
mov
add
mov
cmpsl
daa
rcrl
jl
mov
aas
push
nop
out
push
adc
test
repnz
out
iret
jae
pop
jb
pop
xchg
pop
sbb
movsb
adc
lods
into
mov
enter
test
in
cmc
cmp
frstor
insl
in
lods
andl
mov
ljmp
cmp
inc
jle
jno
rorb
push
pop
xchg
loopne
sti
push
jge
xor
enter
sbb
leave
mov
ret
add
aas
and
ss
jns
push
loopne
sbb
mov
in
loopne
or
fsts
push
movsb
cmpsb
dec
mov
mov
out
pop
aam
out
inc
aaa
sbb
lret
or
inc
aas
or
adc
addl
jmp
out
scas
cmpb
xor
dec
or
sub
out
pop
mov
test
inc
pusha
sahf
aad
fidivl
mov
movsb
out
ljmp
lret
aad
and
add
cld
loopne
pop
in
lds
push
mov
movl
jno
cmpsl
jnp
and
daa
mov
add
icebp
data16
pusha
pop
lock
test
inc
mov
push
out
lahf
notb
cmp
loop
cwtl
inc
jb
mov
mov
add
fcomi
jg
mov
and
adc
inc
push
mov
into
pop
inc
fs
jbe
imul
push
rorl
xchg
hlt
and
jno
jmp
inc
cmp
rorl
push
aas
test
or
dec
and
pop
arpl
test
rolb
ja
lret
je
out
sub
lock
shrb
mov
rol
mov
pop
mov
or
inc
mov
and
sub
mov
dec
shlb
lods
jl
out
add
push
mov
cltd
int
jbe
lret
fisubrl
cmpsb
nop
push
mov
test
push
sub
sub
imul
dec
cmpl
insb
push
dec
cmpsb
mov
xlat
jecxz
gs
jp
out
sbb
cmpl
jecxz
mov
xchg
or
or
mov
push
fwait
cmp
icebp
stos
adc
cmpsl
mov
xchg
mov
jle
pop
cmp
jne
das
cmp
mov
and
xor
outsl
mov
lods
repz
mov
inc
fdivrl
outsb
mov
pop
or
xchg
stc
dec
inc
rorb
mov
cld
inc
dec
jecxz
movsl
fadd
mov
pop
or
negl
roll
add
aad
movsl
inc
xorb
sbb
mov
lock
repnz
sub
add
sbb
xor
cmpl
and
test
cmp
dec
outsb
cmp
in
sarb
fadds
sarb
dec
pop
add
pop
nop
adcl
popf
xchg
dec
dec
je
or
push
adc
mov
int
leave
jmp
add
pop
adcb
test
or
fwait
loop
mov
xchg
pop
add
sti
jge
leave
sbb
fs
lds
fdivr
lds
addr16
mov
push
test
adc
add
add
arpl
mov
sbb
push
outsb
inc
sub
cli
mov
bnd
addl
sub
and
sbb
inc
sub
xchg
xchg
imul
pop
je
dec
imul
bswap
mov
addr16
jp
jb
sub
js
insb
ljmp
shl
fldcw
jnp
movsb
data16
lret
and
rcrb
test
mov
push
or
mov
mov
loope
loopne
lds
mov
les
test
xchg
fs
and
xlat
not
xchg
jns
sbb
xor
sbb
or
fimuls
rcll
icebp
test
nop
int
test
outsb
shll
sarl
adc
addr16
sbb
mov
scas
int3
or
popf
lock
sub
fs
inc
stos
and
inc
mov
mov
dec
and
sahf
and
in
out
push
mov
jl
push
sub
mov
sbb
ja
jl
sub
sub
push
lret
stos
in
leave
add
daa
mov
and
std
mov
jb
test
dec
dec
sti
pop
out
js
dec
je
sub
xor
adc
dec
xchg
nop
adc
pop
sahf
cmpsl
dec
scas
sahf
pusha
pushf
mov
lock
adc
push
pop
xor
or
ljmp
into
pop
enter
outsl
or
sbbl
mov
pop
jb
cmp
xchg
outsl
test
fld
pop
sbb
push
mov
into
add
stc
adc
adc
sub
and
mov
enter
xchg
mov
add
lret
adc
out
fisubrl
test
push
jle
mov
cltd
mov
std
aaa
outsb
jo
pop
inc
add
icebp
mov
rol
sahf
jnp,pn
fistps
add
lds
dec
mov
lahf
out
add
mov
sbb
cwtl
jbe
lock
pop
clc
push
mov
ret
cmp
pop
push
out
xchg
mov
in
ljmp
inc
popf
sub
ficompl
xor
dec
dec
cwtl
jmp
mov
cmp
mov
jmp
mov
sbb
cmp
notb
or
call
ds
imul
sbb
xor
lcall
jb
mov
push
arpl
mov
jecxz
scas
dec
movb
xor
or
adc
ret
xorb
cltd
add
lahf
adc
lods
jmp
adc
and
jb
mov
adc
rorl
inc
push
push
or
dec
fisttps
mov
cmp
andl
mov
into
in
sahf
fcomps
jo
push
pop
push
mov
cmp
in
rcrl
inc
inc
lret
outsl
sbbl
push
mov
out
jmp
inc
aad
ds
adc
adc
ds
or
rcrl
fldcw
icebp
insb
fistl
icebp
push
xchg
jp
adc
mov
xchg
mov
outsl
push
xlat
mov
push
push
jbe
nop
scas
and
mov
rcl
daa
add
jbe
fnstenv
test
mov
fwait
lcall
cs
xchg
pushf
clc
stos
std
les
aas
dec
into
xchg
fists
dec
pop
nop
cmpsl
outsb
ret
divl
push
shl
cmp
xchg
dec
outsl
mov
sub
into
cs
test
inc
dec
sub
dec
dec
ror
jbe
mov
aam
mov
rcrl
das
inc
push
push
mov
dec
and
and
gs
pop
pop
jb
add
and
cltd
loope
sub
or
push
aaa
xchg
fldt
adc
fwait
insb
lods
cmpsb
mov
dec
xor
ror
sbb
stos
scas
cmc
rcr
sub
mov
popa
leave
pop
dec
shll
in
cmpl
adc
pop
xchg
bound
popl
jne
jbe
dec
insb
mov
mov
in
ret
jle
pop
mov
mov
dec
int3
lea
pop
stos
mov
fsubl
or
fists
fnsave
cmc
xchg
mull
xchg
push
add
das
sahf
mov
daa
fildl
mov
clc
xor
dec
pop
loop
pop
pop
rcll
dec
pop
ret
ljmp
test
cmp
int3
mulb
jmp
xchg
and
hlt
enter
cs
scas
adc
enter
aas
xor
hlt
mov
jne
ja
cmp
jb
movsb
dec
pop
hlt
inc
data16
jno
sbb
int
movsl
aaa
sub
cmp
daa
and
outsl
fcoms
push
aam
cli
roll
roll
mov
mov
pop
mov
or
sti
xor
imul
or
mov
test
scas
out
sahf
push
cmp
aam
std
test
jl
mov
into
repnz
lock
inc
out
adc
jecxz
jge
dec
cld
cltd
fistpll
pop
fwait
arpl
sbb
lcall
cmp
mov
repnz
mov
sbb
pop
loop
popa
adc
lods
and
or
jb
loope
sahf
xchg
xchg
pop
js
cwtl
pusha
xlat
adcl
push
sub
fisttpl
inc
mov
adc
cmp
mov
cmp
dec
push
dec
push
sub
lds
lds
xchg
mov
out
dec
in
inc
xor
movsl
inc
cmp
jne
out
mov
mov
push
call
pop
ret
xchg
test
loopne
jl,pn
lock
jge
in
xchg
xchg
hlt
dec
gs
int
push
push
or
clc
cmpsl
icebp
push
jne
and
lods
pop
les
pop
int
xchg
inc
or
inc
cmpsl
aam
les
pusha
hlt
and
mov
sub
jmp
jnp
adc
adc
push
rcrl
imul
mov
addl
jo
sarl
shl
std
clc
cmp
ret
addr16
sbb
xchg
and
hlt
cmc
mov
sbb
movsl
sub
jno
out
repnz
cmp
enter
mov
fucomp
mov
xchg
and
aad
fmull
pop
cmp
and
aad
rol
xor
jp
cmp
enter
jbe
cmp
xchg
mov
sub
cwtl
and
inc
pop
call
gs
lds
and
dec
inc
and
test
data16
push
popa
inc
jae
push
mov
mov
jmp
jo
enter
dec
or
ja
jge
xor
xchg
imul
add
stos
cmp
scas
into
lods
jmp
shll
mov
fdivs
xchg
xor
cmp
sbb
xor
movsb
test
icebp
cmc
scas
sbb
fistpll
sbb
cld
or
cmp
xor
addr16
and
popa
out
adc
ret
push
push
pop
mov
mov
cmp
inc
jo
mov
adc
js
loopne
sbb
sub
popa
ss
fwait
rcl
push
ja
in
cmp
movw
push
aas
cli
iret
adc
lods
call
mov
sbb
adc
cli
mov
jge
xorb
or
fucom
aam
adc
lcall
in
dec
adc
inc
mov
mov
rorb
outsl
out
cmpsb
fwait
imul
or
or
cmp
loopne
sbb
stos
lea
cmc
rolb
xor
int
push
loopne
rcll
inc
sbb
loope
shl
inc
fcompl
std
inc
xor
outsb
cs
jo
inc
hlt
outsb
rcll
leave
dec
out
sbb
enter
sub
jns
mov
adc
xchg
xchg
push
jp
push
push
pop
inc
cmovp
in
int3
aad
inc
and
and
rcrl
mov
pop
or
aaa
rcrl
je
xorb
push
int3
mov
fstpl
sbb
inc
xor
ret
push
jecxz
lret
or
xor
into
fwait
mov
dec
insl
sub
stos
mov
xorb
out
cld
pusha
orl
daa
ds
or
mov
push
and
cmc
mov
or
popa
mov
mov
jno
xor
mov
stc
mov
mov
jle
xchg
sub
rorl
pop
scas
aam
imul
aad
data16
in
fldt
int3
pop
lahf
aam
cwtl
xchg
lahf
dec
add
lret
rcrl
fdivrp
pusha
mov
out
bound
shrb
and
into
cld
jo
cmp
enter
jno
mov
shll
jo
inc
jle
or
sahf
lods
insl
je
pop
dec
fldenv
dec
mov
lods
jbe
push
push
jle
lahf
push
aad
lods
mov
cmp
xchg
cmp
jge
inc
inc
push
gs
inc
mulb
push
pop
scas
or
ret
mov
mov
in
in
gs
jp
inc
mov
push
sbbl
inc
in
push
loope
adc
push
vpsrlq
adc
into
dec
xlat
imul
sahf
inc
xlat
mov
hlt
jae
add
outsl
or
push
fldenv
iret
xchg
repnz
push
push
ljmp
xchg
js
cmc
leave
xor
and
sbb
push
xor
cmp
out
ja
rol
add
mov
mov
insb
es
in
sbb
je
arpl
push
mov
jl
stos
lcall
push
mov
xchg
mov
or
fs
lds
push
ret
xchg
and
mov
dec
push
lahf
aam
jns
imul
fsubrl
ja
sti
sti
lods
and
sbb
cmp
mov
aam
insb
mov
and
fildll
fs
lret
jecxz
in
cld
sahf
cmc
push
movsl
test
or
testl
or
ds
or
test
repnz
push
or
and
add
jno
cld
pop
jne
je
xchg
aad
adc
adc
std
cmp
xor
popa
out
cmp
imul
scas
jge
sbb
fldcw
insl
add
push
push
cmpsl
sbb
jl
dec
ds
jnp
rorl
jg
mov
aam
mov
cwtl
jo
cmpsl
out
jmp
call
mov
outsb
cmpsb
and
pop
pop
xchg
lahf
aam
adc
fdivrl
mov
dec
mov
push
mov
lds
mov
pop
cmpsb
fimuls
pop
call
cltd
in
push
xchg
pop
ja
pop
sbb
popf
call
dec
pop
negl
push
adc
inc
lret
sub
sbb
cmpsl
and
push
in
cwtl
push
cmc
jl
inc
push
hlt
jbe
mov
cmp
pop
out
rcrb
mov
roll
mov
add
dec
movsb
mov
jmp
sbb
jmp
cld
sti
lret
fstl
xchg
outsl
sub
xor
jns
adc
pop
sub
dec
repz
pop
jmp
mov
shll
adc
cmp
sub
push
pop
hlt
negl
adcb
das
xchg
sub
std
ret
mov
rcrb
xor
sub
mov
ljmp
cmpl
and
arpl
xchg
push
dec
outsb
mov
and
mov
dec
jecxz
adc
xchg
stos
xchg
xchg
aam
icebp
call
into
sub
or
insl
scas
mov
sbb
inc
stos
push
les
xchg
in
push
call
fcomps
ret
icebp
push
dec
mov
mov
mov
jnp
into
aas
idivb
aam
out
sarb
pop
xchg
mov
jb
mov
std
adc
pushf
test
and
ud2
cmp
mov
es
xchg
lret
adc
sub
cli
and
shl
inc
xor
inc
outsb
ss
in
adc
roll
mov
jo
imul
add
add
inc
icebp
jle
scas
stc
lock
ror
add
psubq
push
lea
fcompl
popa
xchg
xchg
mov
xor
pop
addr16
hlt
outsb
xlat
ss
test
mov
std
mov
out
xor
mov
jns
mov
mov
push
ds
push
lds
sub
jb
insb
xchg
cmp
ss
fld
jp
inc
or
add
mov
lahf
jp
sbbl
jnp
outsb
insb
addr16
fsubl
dec
andb
mov
rcll
sub
dec
testl
pop
xchg
mov
xchg
mov
lret
shrb
shrb
xchg
or
mov
cmpb
mov
inc
mov
sti
add
lret
aas
mov
mov
cmpsb
das
and
jnp
sub
adc
pop
repz
aaa
pop
int
sbb
nop
xchg
imul
rolb
test
jno
ja
rclb
les
leave
push
jae
dec
clc
xor
call
rcr
insb
lds
sbb
mov
adc
out
push
xlat
ja
xchg
xor
hlt
jl
mov
stc
les
je
mov
roll
pop
xchg
shrl
mov
dec
data16
mov
jb
lock
sti
sub
dec
pop
mov
jp
cmpb
neg
clc
jmp
inc
xchg
in
mov
mov
push
scas
mov
xchg
and
popa
push
lret
std
or
pushf
decl
pop
loop
and
inc
mov
movsb
in
aad
push
ret
movsb
sbbl
jl
fadds
das
pushf
outsl
stos
inc
mov
dec
cmp
cltd
xchg
lahf
out
fisubrl
lods
adc
jmp
ss
xor
in
std
push
adc
and
lock
mov
and
shll
mov
out
dec
test
mov
mov
jae
inc
xor
lock
and
fidivs
nop
lcall
mov
mov
xchg
mov
fdivp
pop
in
shl
pop
test
adc
mov
mov
sbb
mov
test
pusha
cmp
ret
lods
adc
jmp
mov
inc
jge
in
xor
repz
call
stos
fistl
add
in
or
stos
cmp
pop
dec
inc
lock
or
xor
js
mov
outsl
and
xor
xchg
xchg
xor
out
sti
inc
sbb
dec
xchg
mov
xlat
adc
dec
fsubrs
or
or
mov
sarl
fsubl
sbb
sqrtps
stc
sbb
lods
mov
mov
xchg
pop
sub
repnz
xchg
test
sbbb
lcall
fs
push
add
hlt
push
xor
inc
dec
movsl
dec
movsl
mov
fadds
clc
and
xchg
adcb
push
mov
push
add
rcr
cmp
mov
mov
adc
dec
int
fs
add
add
hlt
test
add
clc
sub
add
or
sahf
xlat
and
stos
dec
dec
xlat
mov
or
rcrb
fwait
cmp
push
stos
clc
and
in
mov
cmc
jno
stos
rcrl
subb
inc
pushf
jl
xchg
mov
cmp
notl
dec
inc
add
rclb
push
js
and
cmp
das
fnstcw
fsubs
xchg
mov
mov
cld
das
js
sbb
rcll
je
mov
cltd
dec
scas
fildll
inc
mov
mov
sub
sbb
cli
lods
mov
lcall
push
inc
das
repz
rep
insb
inc
test
cwtl
into
push
sbb
cmp
and
imul
lods
jbe
push
dec
fsubrs
test
mov
aaa
hlt
divb
loop
pushf
ja
and
inc
in
dec
cmp
movsb
mov
dec
std
xor
cli
push
ja
jmp
adc
push
add
sub
and
jecxz
out
adc
data16
fisttpll
xor
mov
mov
mov
out
subb
jb
sbb
jge
xchg
xor
cmp
sbb
out
push
xchg
sub
arpl
dec
das
daa
test
lcall
mov
push
sbb
push
lods
xchg
pop
dec
inc
push
cmovg
xchg
jl
mov
leave
jle
das
lds
or
fidivl
mov
in
xchg
pop
jmp
mov
push
cmp
shll
cmp
inc
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
mov
jl
pop
pop
jl
inc
jle
sbb
rorl
enter
mov
add
sahf
nop
aaa
pop
inc
sub
xor
dec
and
push
pop
sub
test
pushf
xchg
in
aas
mov
jne
mov
pop
jmp
or
bound
mov
shll
sbb
mov
inc
ret
lret
push
cmc
xchg
sub
add
ret
or
or
xchg
fwait
rclb
int3
adc
xchg
sbb
mov
mov
jns
adc
loopne
pop
jo
jp
ja
shrl
or
jp
fsub
loop
inc
pop
xor
scas
push
adc
rolb
pop
imul
icebp
test
aas
adc
stos
xlat
pushf
push
mov
mov
mov
aad
test
adc
pop
xor
jnp
test
adc
sbb
and
leave
out
adc
ror
iret
rolb
in
in
xor
enter
push
mov
xor
mov
sahf
jge
push
cmp
je
cld
adc
cmpsb
and
leave
xor
fsubr
sahf
ss
in
out
movsb
icebp
push
fsub
leave
pushf
nop
loop
inc
jg
pop
or
pop
stos
dec
into
rolb
dec
and
mov
jmp
and
sahf
pop
pop
mov
jg
cmpsl
adc
xor
mov
fwait
lds
xchg
push
out
xor
push
jge
mov
add
bound
dec
js
cmp
and
mov
loop
add
adc
cwtl
lahf
dec
sbb
in
jnp
mov
repnz
sbb
mov
xor
jg
sbb
aad
aas
loopne
in
leave
ret
or
movsl
xor
ret
jbe
mov
sbb
stos
jle
inc
mov
push
xchg
and
popa
imul
inc
jno
shlb
movsl
push
dec
jnp
stos
push
ret
push
divl
loope
lods
aad
test
xor
data16
in
cltd
dec
xor
fwait
adc
testl
push
sbb
stc
stos
enter
push
fiadds
iret
pop
sti
out
out
cs
sahf
jmp
and
xchg
xor
add
mov
test
and
fcomip
cld
push
add
mulb
hlt
and
push
xor
das
add
mov
xchg
int3
cmc
and
add
and
add
or
add
test
mov
pop
mov
repz
sub
adc
xchg
nop
roll
sahf
xlat
push
das
jne
call
insb
jle
dec
xchg
mov
lret
jmp
jb
mov
jae
clc
mov
cmc
stc
sbbl
xchg
test
jecxz
lods
test
sub
pop
dec
cltd
sbbl
jmp
pop
std
xchg
xlat
pop
cmp
nop
xchg
mov
sbb
popf
pop
addr16
js
bound
xchg
daa
ret
sbb
lds
adc
cmp
pop
xchg
push
push
jns
std
sbb
xor
shrb
movsl
jecxz
sahf
and
ss
adc
dec
mov
lock
dec
cli
xor
in
popf
and
aam
mov
inc
mov
scas
gs
pop
dec
adc
adc
js
push
push
jp
test
mov
fabs
xchg
inc
scas
test
dec
sub
stos
int
mov
add
inc
sbb
repnz
cmp
int
cmp
mov
outsb
jge
pushf
and
dec
pop
sub
pop
and
ret
out
notb
sbb
loop
rcll
sbb
inc
ret
or
rclb
ljmp
mov
sbb
push
arpl
data16
int
push
pop
fldl
mov
jmp
outsl
fcmovne
jmp
pop
and
pop
add
mov
leave
jo
das
add
fwait
outsl
jbe
xchg
mov
sub
jmp
mov
mov
loopne
dec
cwtl
scas
dec
cmp
js
cmp
mov
mov
sub
sub
jnp,pn
scas
notl
jle
or
mov
cmp
loope
mov
fcmovnbe
pop
dec
jo
mov
lcall
scas
int3
mov
cmp
cmpsb
lret
jle
ss
stos
xchg
mov
dec
pop
or
lret
mov
mov
push
loop
lods
int
dec
adc
pop
mov
jo
bound
mov
cmovg
push
rcrb
call
push
add
stos
adc
lea
flds
ret
add
lods
in
dec
xchg
imul
stc
xor
sbbl
in
xlat
xor
stos
jno
out
imul
mov
add
fucomi
stc
jp
jge
adc
mov
jbe
inc
cld
inc
orl
testl
add
xchg
mov
lcall
cmp
xchg
push
lahf
add
fiaddl
xor
inc
pop
xchg
add
xor
sbb
enter
loope
adc
loop,pt
js
sbb
pop
addr16
xor
lret
fisubl
test
in
mov
dec
mov
movb
jge
aas
xor
cmc
cs
and
mov
les
mov
mov
mov
or
pop
clc
gs
icebp
push
pop
js
jnp
mov
in
sub
dec
aaa
ljmp
sbb
out
push
add
mull
push
pusha
ja
sti
dec
pop
fdiv
je
sub
mov
stos
movsl
cmpsl
mov
popl
jno
add
push
xchg
iret
icebp
or
pop
or
inc
inc
mov
jb
add
push
enter
mov
add
insl
fs
cltd
mov
into
movsb
scas
xor
sbb
dec
pop
les
sbb
sub
scas
jbe
dec
sbb
lcall
jb
cmp
xor
mov
fdivs
popf
adc
lock
sbb
rcr
jb
out
lock
push
nop
aas
mov
dec
aam
push
outsl
ss
out
cwtl
xchg
dec
adc
add
mov
mov
call
sahf
repnz
or
xchg
add
push
subl
or
cli
or
jp
and
cld
das
jno
fadds
outsl
jecxz
out
loope
sbb
mov
jns
jne
pop
rorl
push
orl
dec
pop
fnstenv
mov
mov
je
add
cmp
mov
dec
sub
mov
push
xchg
addr16
push
cmc
pop
or
rclb
mov
adc
dec
shll
imul
xchg
cmpsb
daa
out
sbb
sub
shrl
add
or
lahf
sub
fiaddl
pop
inc
inc
jb
inc
int
push
xor
fldl
and
cwtl
repz
repz
imul
sub
jnp
sarb
pop
xchg
aam
xor
push
faddl
xor
mov
dec
loope
mov
mov
stos
mov
xchg
mov
and
xor
jo
jo
fcmovne
pop
mov
rcrl
testl
repnz
mov
and
rorl
data16
xchg
stos
push
sub
sahf
insb
push
pop
sub
jne
jo
daa
add
xor
pop
into
mov
lahf
fnstsw
push
mov
sub
test
dec
test
mov
push
cmp
ja
jecxz
and
pusha
adc
data16
hlt
popf
jns
cmc
in
xchg
sub
lods
mov
out
adc
xchg
cmp
lods
scas
adc
inc
fdivrl
xchg
xchg
punpcklbw
cmc
cmc
imul
and
repz
cmp
sub
vshufps
aad
mov
mov
mov
test
mov
jg
xchg
inc
nop
or
scas
adc
lret
out
cmp
add
pushf
cltd
lds
and
pop
jmp
adcb
adc
pop
xor
int3
cltd
inc
inc
jg
fucomi
lds
rclb
popa
aas
xchg
daa
subl
movsl
mov
inc
in
inc
push
insl
sbb
es
xor
inc
fidivl
add
push
jp
or
mov
test
arpl
arpl
adc
rol
pop
mov
arpl
jae
gs
iret
mov
jnp
xor
outsl
sbbb
ss
mov
pop
xchg
movsb
mov
add
inc
mov
aas
out
loop
data16
loope
xchg
inc
iret
xchg
fldl
flds
int3
orb
mov
ret
push
and
xor
or
adc
cmc
and
adc
ret
mov
mov
ja
test
pop
movsb
xor
std
jmp
fldt
std
mov
xor
xchg
jbe
pop
out
mov
fiaddl
push
movsl
adc
jae
orl
loopne
sar
adc
mov
add
inc
cld
push
sbb
or
call
sbb
dec
sub
mov
or
popa
sbb
movsb
sub
test
mov
or
cwtl
fucom
sbb
adc
inc
subps
cs
inc
fs
lea
rorb
arpl
xchg
stos
movsb
sbb
add
xchg
decb
int
shll
inc
or
test
mov
in
push
sbb
orl
lds
and
jmp
inc
rcrb
mull
pusha
rcll
sbb
push
mov
ds
stos
mov
lds
jbe
pop
mov
sub
inc
mov
pop
jecxz
xchg
lds
cli
js
mov
mov
xchg
outsb
shr
dec
loope
sub
fimull
or
les
add
out
cmp
adc
ds
xlat
mov
js
jbe
je
js
adc
mov
sub
jge
gs
sbb
and
notb
popa
outsb
xor
pushf
leave
ja
out
dec
js
push
or
dec
xorl
lds
aad
sbb
leave
add
adc
fwait
pushf
fsubrs
lea
xrelease
xchg
aad
es
fdivrs
xor
sbb
xchg
insl
lret
popa
mov
fsts
movsl
cmp
pop
jmp
test
sbb
sub
cmp
enter
mov
aam
hlt
adc
mov
stc
mov
ja
add
cs
fistpl
jle
stos
and
and
in
rcrb
xor
adc
sub
gs
jp
lcall
fcompl
int
inc
pusha
mov
int3
xor
xorl
stc
hlt
int
dec
cmc
jnp
test
dec
adc
cltd
cld
addr16
add
jp
and
dec
add
cmpl
ljmp
rolb
push
inc
inc
fisubrl
data16
dec
cltd
pop
or
ja
lret
sti
scas
pop
xchg
lret
push
sbbl
cmp
xorb
add
xchg
or
mov
cmpsb
mov
mov
cmp
pop
jge
dec
push
outsb
adc
sbb
jp
icebp
push
sarb
mov
xor
fwait
mov
mov
cmp
movsl
aas
push
dec
cli
jnp
xchg
adc
and
lcall
jnp
dec
or
xchg
push
loop
shll
sub
cmp
or
lcall
xchg
bound
and
andb
mov
sub
dec
rolb
add
mov
jne
pop
call
inc
jl
outsb
xorl
cld
sbb
mov
xchg
pusha
mov
out
add
adc
xchg
jl
mov
cmp
and
scas
lock
scas
out
push
nop
ficomps
adc
mov
sar
je
pop
scas
ret
mov
xor
arpl
push
fsubl
adc
xchg
xor
loop
dec
cmp
dec
and
xor
pop
popf
fsubrs
sub
dec
cmp
xorl
jl
push
nop
mov
pop
xlat
les
stos
testb
xchg
cmp
sbb
xchg
or
mov
sub
xchg
pop
scas
bound
push
adc
xchg
adc
and
shll
dec
add
rorb
mov
into
in
cmp
add
or
aas
in
jno
shll
or
inc
mov
repz
mov
adc
ss
aaa
repnz
sbb
sbb
in
scas
xchg
xor
dec
sub
inc
dec
jp
sub
mov
pop
mov
jl
push
movsb
add
sub
push
cld
dec
out
push
gs
sahf
fisttpll
idivb
ror
jne
push
jmp
sub
cwtl
out
jp
mov
mov
fiadds
adc
push
or
or
xor
lcall
mov
push
jmp
xchg
pop
xor
jno
or
test
mov
dec
mov
testl
clc
jle
adc
imul
stc
pop
pop
arpl
lret
sub
addl
add
out
aad
cmpsb
dec
cmp
mov
icebp
cmp
stos
pop
outsl
fnstcw
pop
clc
pop
lret
and
xor
mov
scas
push
ja
stc
or
adc
rolb
js
in
filds
in
jne
mov
inc
sub
xor
daa
inc
add
push
sub
fldenv
push
jae
filds
xchg
mov
shlb
cs
popa
nop
push
mov
mov
pushf
push
mov
test
sar
scas
test
jns
bnd
insb
xor
push
enter
ds
mov
mov
scas
fstpt
xchg
push
rcr
jle
jecxz
jo
movsb
out
cmpsl
loopne
cmp
push
mov
pop
in
push
mov
bound
pop
je
cmp
fdivrs
ljmp
pop
fbstp
loopne
push
enter
sbb
out
adc
xor
jge
push
mov
xchg
dec
pop
add
in
pop
jge
outsl
mov
mov
inc
push
jo
fwait
ds
cmpsb
ljmp
imul
lds
sbb
cli
sbb
inc
mov
out
test
push
ret
hlt
fists
dec
lea
add
sahf
cmpsb
sbb
lea
lock
insl
cmpsb
daa
lods
or
out
mov
stos
and
sub
in
dec
or
and
neg
sub
cld
jnp
testb
xor
pop
sbb
jne
mov
stos
sub
lods
in
imul
into
sti
mov
xchg
cmc
mov
es
psllw
lret
pusha
lds
pop
mov
cmp
in
push
popa
aam
pop
mov
and
sbb
pushf
fcmovu
mov
jg
bound
cli
pusha
in
mov
in
ficoms
insl
jb
jno
lcall
es
mov
mov
cmp
daa
sub
jmp
ss
daa
lods
shrl
or
sbb
andb
mov
dec
cs
push
xchg
or
mov
inc
mov
xor
nop
pusha
ja
and
int3
outsb
arpl
outsb
mov
mov
or
mov
xor
push
pop
add
rcl
xor
or
outsb
jmp
sbb
sbb
mov
lcall
sti
add
lret
cld
popa
test
das
cmpsb
testl
cwtl
jl
les
outsl
inc
xchg
sbb
adc
adc
cmpsl
daa
xor
mov
dec
jg
jns
jp
aaa
xchg
rcrl
inc
clc
stos
ss
icebp
lcall
outsl
inc
push
icebp
add
mov
ss
push
and
sbb
mul
push
out
mov
sti
and
shlb
ss
push
fsubs
lods
and
out
repnz
mov
out
ficoms
adc
push
and
test
push
adc
jno
pop
jns
pop
cmc
push
mov
mov
or
into
or
adc
iret
bound
repnz
ja
scas
jnp
das
js
or
insl
sbb
clc
popf
in
adc
fidivs
js
in
push
cwtl
adc
xor
mov
pop
and
fmulp
mov
dec
xor
and
mov
cmc
xor
repnz
rcl
pop
pop
adc
xchg
pop
test
mov
ret
xor
movsl
sub
add
sahf
fsubr
push
and
xor
ret
cmpsl
and
das
mov
mov
divl
or
mov
rorl
jg
mov
cmp
outsb
push
call
and
test
mov
lods
mov
jmp
cwtl
pop
ret
subl
push
cmpsb
fwait
out
ja
push
cmp
mov
mov
cltd
push
sub
loop
sar
lret
mov
andb
cld
jo
mov
lock
hlt
jp
cmp
loope
mov
adc
arpl
mov
test
jne
cltd
mov
or
pop
clc
out
sub
xor
mov
push
jno
incl
push
dec
fsubr
ljmp
es
pop
lods
sub
pop
xchg
sarb
mov
mov
push
mov
fcoms
xchg
lret
data16
push
mov
daa
xchg
sbb
xchg
dec
inc
cwtl
es
xor
fsubrl
or
fisubs
subb
int3
into
or
rcll
pop
popa
mov
sahf
je
sub
xchg
dec
pop
inc
mov
jl
push
jp
pop
jp
out
adc
sub
fdivl
inc
lret
mov
fisttps
ret
ret
int3
jno
cmp
cmpsb
and
push
ds
jns
and
jg
movsb
rorb
jecxz
inc
fwait
adc
lea
fstpl
dec
add
ljmp
jbe
int3
leave
daa
cld
mov
push
mov
mov
mov
xchg
inc
sub
mov
icebp
shr
or
push
or
push
push
cmpsl
push
inc
inc
mov
sbb
cmp
sbb
sbb
fcoml
sub
xchg
leave
iret
adc
or
push
sbb
pop
dec
je
out
rorl
mov
xchg
mov
loopne
or
adc
mov
cmp
pop
cmpsl
adc
out
sub
lea
inc
mov
rcll
mov
jp
movsb
std
dec
mov
and
mov
adc
imul
xchg
arpl
jmp
mov
test
xor
sti
add
aas
jbe
mov
inc
mov
or
push
cmpsl
stc
pop
add
cltd
ljmp
cwtl
inc
mov
mov
lea
mov
mov
sar
and
pusha
je
std
inc
fucompp
loopne
icebp
mov
and
jne
in
and
inc
icebp
xchg
sarl
je
cmp
ret
mov
push
cmc
mov
ljmp
jbe
lahf
sub
cmp
div
and
xor
pop
addr16
gs
fs
in
push
bound
xchg
sbb
cwtl
popa
fiadds
jp
shlb
sbb
adc
xchg
in
sbb
xor
test
mov
ljmp
notl
in
mov
adc
push
mov
dec
out
lds
dec
out
ljmp
lcall
out
stos
lods
loope
mov
cmp
xchg
cmc
dec
aad
jecxz
jmp
in
push
push
sbb
loopne
xchg
out
mov
fdivs
data16
rcrl
rcrb
mov
and
leave
icebp
daa
push
inc
movsb
fistpl
not
jmp
mov
sub
jp
rcll
push
out
mov
pop
sub
push
in
pop
call
dec
push
inc
sbb
jecxz
dec
add
push
sbb
rcr
insb
addl
aad
in
scas
push
or
adc
jne
mov
fadds
stc
hlt
shl
cmp
lds
shl
les
and
pop
add
adc
push
lock
pop
stos
dec
ret
pop
push
sbb
fcmove
movsb
enter
xchg
xor
std
lods
mov
mov
or
xor
or
push
push
sub
push
into
mov
mov
cs
adcb
in
cs
push
test
push
jg
js
xchg
lcall
xchg
sub
sub
in
scas
and
in
push
test
push
call
outsb
into
daa
repz
adc
pop
adc
es
mov
hlt
xor
cmpsl
iret
into
out
faddl
mov
mov
sahf
out
mov
in
shrb
xchg
imul
adc
mov
stos
negl
dec
xchg
cmpsb
call
test
cld
sarb
mov
mov
les
mov
inc
push
jge
mov
out
pop
mov
bound
push
ds
xchg
cmp
push
insb
loop
stos
rorl
stc
xchg
xchg
pushf
int3
adc
popf
or
add
out
add
adc
mov
or
ljmp
aad
mov
adcl
sub
mov
dec
arpl
iret
mov
ffree
loop
dec
jmp
lea
adc
add
push
mov
pop
xchg
cmc
pop
ljmp
push
adc
fcmovu
sub
inc
in
mov
mov
adc
icebp
in
pop
sub
clc
lds
fs
or
cmp
cmc
cmp
aam
xchg
pusha
mov
pop
mov
movsb
push
aas
rcl
cmp
vpsubd
push
js
in
xlat
and
or
movsl
or
sbbb
mov
stos
jnp
cltd
pusha
and
sbb
sarb
add
pop
jne
repz
sbb
add
rcl
aam
or
dec
mov
rcr
mov
leave
xor
push
and
shlb
fcomps
push
adc
sbb
mov
movsl
mov
add
inc
inc
pop
add
sub
lea
ja
adc
pop
pop
push
mov
insl
mov
push
ror
xchg
jp
hlt
and
lret
xchg
cmp
jg
out
pop
insl
ljmp
mov
mov
dec
outsb
push
fsts
mov
negb
and
xchg
jns
mov
push
daa
mov
aam
pop
dec
pop
int3
add
shll
in
push
out
pop
add
ret
imul
jnp
in
cltd
adc
cwtl
jne
out
mull
les
loop
ret
jge
in
mov
inc
aad
out
test
cmp
cli
xchg
fisttpl
cmpsb
pop
xor
push
imul
aad
repnz
jbe
or
sub
in
dec
les
mov
jmp
test
movsl
loopne
push
addl
inc
imul
shrb
add
pop
iret
outsb
lock
pop
push
push
repz
mul
dec
mov
pop
in
mov
push
std
adcl
sbb
sub
jg
mov
push
fldl
dec
or
cli
pop
dec
mov
fwait
and
repz
into
dec
stc
jmp
add
sub
clc
mov
mov
mov
jge
test
shlb
subl
dec
dec
jns
cmc
or
stos
imul
xor
lods
push
cmp
pop
sub
mov
jle
cld
and
xor
pop
insl
insl
jge
cmp
pop
mov
dec
les
call
dec
addr16
xorb
mov
mov
lds
or
add
test
push
mov
les
fs
adc
or
lock
and
push
cmp
or
jmp
cmp
and
push
iret
push
aam
lods
mov
jmp
and
dec
add
xchg
mov
fwait
bnd
pop
dec
xor
sub
adc
shll
data16
cwtl
loope
test
xor
repnz
xchg
scas
into
hlt
jo
lods
jno
xchg
in
jne
cmp
push
loopne
add
dec
mov
int3
and
inc
je
mov
push
dec
pop
int
cmpsb
in
or
adc
iret
cmp
mov
fld
into
jl
xor
and
pop
mov
mov
mov
pop
call
xchg
or
cmpsl
out
adc
out
mov
and
add
mov
out
je
cmp
xchg
icebp
cli
dec
pop
xor
aam
push
xchg
pop
adc
add
insl
lods
mov
aad
lods
push
int
xchg
test
push
pop
inc
fistpl
mov
push
jo
ljmp
sbb
cltd
test
fisubs
cmpsb
add
pusha
rcrb
popa
xor
mov
inc
xchg
out
pop
push
lcall
cmpb
cld
mov
rcll
loop
xor
pop
notb
std
push
sub
mov
and
enter
cmp
insl
cmp
pop
or
inc
jbe
mov
cmp
out
sub
dec
aam
xchg
pop
jmp
subl
or
mov
lock
jp
sbb
push
test
sti
xor
outsl
push
fmull
jmp
push
sbb
xor
stos
cli
cmp
xor
mov
jno
nop
mov
ljmp
fnstsw
std
mov
ja
dec
fdiv
stc
jbe
xchg
idivl
sub
cld
js
les
add
lret
mov
imul
sbbl
sbb
xchg
mov
mov
insl
dec
sarl
add
loope
push
xchg
arpl
clc
sub
cmp
sbb
mov
sub
rcll
std
int3
gs
push
pop
push
sbb
sbb
inc
mov
jo
test
adc
dec
lretw
pop
das
pusha
dec
ljmp
or
jb
or
imul
in
push
loope
lret
xchg
mov
add
scas
add
mov
ljmp
mov
inc
or
mov
xchg
pushf
mov
mov
jnp
or
mov
and
adcl
cli
iret
jmp
shlb
xchg
and
pop
enter
ret
and
sti
inc
xchg
or
gs
shl
shlb
push
mov
and
jns
mov
sub
inc
push
fwait
push
call
leave
or
mov
test
daa
mov
gs
in
cmpsl
test
mov
fidivrs
or
fsubl
out
jnp
jae
cmpsl
mov
xchg
stc
out
sub
sub
ret
jp
sub
or
out
cmpsl
lods
ljmp
pop
iret
ljmp
cmpsb
pushl
xor
xor
jae
push
push
pop
push
lahf
mov
mov
xchg
les
aaa
shlb
jne
sub
fsts
push
into
test
scas
sahf
xchg
dec
mov
mov
cli
into
mov
out
adc
sub
insb
cmpl
xor
pop
jno
xor
jno
ret
push
pop
sub
add
test
sub
mov
dec
xchg
adc
dec
mov
push
stos
mov
inc
pusha
jle
xchg
in
xor
insb
jns
mov
push
jnp
inc
sti
mov
icebp
popf
test
cwtl
mov
adc
dec
test
jb
loopne
dec
clc
fadds
fs
push
rolb
fldl2e
scas
es
cli
orl
ja
ljmp
shr
vfrczsd
mov
dec
mov
pop
mov
fisubrl
pop
mov
addb
mov
sub
testb
mov
dec
and
mov
shll
movsl
xor
stos
jno
mov
pop
outsb
sbb
mov
shr
jecxz
out
xor
jg
xor
cmp
push
jb
rcll
mov
push
test
push
rolb
inc
jae
shl
adc
xchg
xchg
cmpb
and
rcll
sub
sub
cli
idivl
cmp
xchg
data16
add
push
roll
lods
mov
pop
pop
pusha
mov
mov
push
mov
xor
jo
push
cmp
notl
imul
pop
inc
cmpsb
xchg
cmp
in
pop
pop
sub
pop
das
push
aaa
and
add
idivl
cmp
pusha
and
push
mov
aad
add
clc
pop
xor
aas
lods
lea
and
shr
lods
and
insb
mov
aam
lods
pop
adc
dec
pop
xor
pop
sbb
mov
sub
sti
mov
mov
pop
bound
pop
adc
enter
inc
mov
daa
loope
pop
mov
jp
jecxz
sub
xchg
inc
push
mov
jg
test
push
cwtl
std
decb
pop
stos
push
les
mov
pop
lcall
roll
icebp
int3
fdivrs
pop
xor
push
in
fstpt
aaa
out
mov
cwtl
sbbb
push
xor
mov
lea
repnz
mov
or
cwtl
or
fsubr
insb
xor
sbb
sub
mov
pop
mov
pop
mov
sub
cmp
arpl
adc
add
ret
dec
shl
and
fs
fldl
lods
repz
std
aam
and
cmp
and
jae
sub
in
jne
mov
mov
add
out
les
fsubr
fnstenv
mov
and
xorl
fcom
xchg
cmpsb
push
mov
int3
scas
aad
mov
addb
mov
sub
jo
pop
arpl
test
mov
jno
mov
je
icebp
pop
or
pop
xchg
mov
ror
arpl
mov
or
mov
lods
pop
mov
fucom
mov
outsb
jp
ja
les
cmc
or
mov
cli
push
or
icebp
cmpsb
adc
and
push
stos
jmp
inc
dec
cmp
ds
cwtl
adc
out
cmpsl
test
punpckhbw
enter
repnz
pop
or
mov
popa
subb
adc
adc
sbb
pop
icebp
in
add
xlat
push
dec
or
pop
jns
xor
in
xchg
xchg
add
pop
sbb
cwtl
and
call
call
xchg
mov
push
es
cwtl
push
int
inc
lahf
sti
jno
inc
shlb
fwait
add
push
ljmp
jno
mov
popa
mov
orl
test
jmp
sbb
cmp
pop
push
addr16
or
sub
mov
out
xchg
mov
dec
xchg
jnp
jno
sub
dec
add
popf
push
std
pop
in
aas
inc
arpl
daa
sbb
test
sbb
mov
pop
pusha
jo
test
fidivs
fimuls
dec
inc
mov
pop
mov
sti
mov
dec
mov
jnp
das
jo
addr16
insb
test
into
loopne
inc
movsl
cmp
dec
xor
jbe
sbb
adc
jno
pushf
je
lock
imul
in
mov
int3
scas
dec
lods
aam
adc
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
mov
pop
or
adc
mov
jp
sahf
pusha
jle
fsubrs
addr16
jl
icebp
out
mov
shlb
fs
test
out
jp
addr16
rorb
xchg
mov
mov
rolb
mov
jge
enter
out
ljmp
push
mov
jmp
or
xchg
add
cli
pop
push
xchg
jno
xchg
into
push
pop
push
fwait
in
push
jo
insl
test
push
xor
and
mov
fs
cmc
aam
dec
xchg
adc
xchg
xchg
jno
pop
cmp
gs
inc
movb
and
adc
adc
cmc
sar
pop
adc
and
mov
ret
iret
cmp
dec
add
xor
xchg
das
imul
xchg
insl
or
arpl
mov
cld
jg
gs
shrb
push
push
mov
jne
push
jne
xchg
xchg
mov
sbb
xchg
push
ret
adc
mov
mov
pop
sbb
pushf
leave
mov
add
xor
subb
andb
ret
sub
sti
iret
xchg
xor
sub
rcl
jns
dec
jbe
mov
lods
cmpsl
cmp
sub
dec
add
sahf
sbbl
inc
adc
add
int3
int
fistpll
push
scas
gs
and
mov
adc
sub
pop
fiaddl
adc
jae
sbb
xchg
mov
pop
mov
sbb
imul
and
adc
and
mov
ret
sub
jecxz
jmp
lcall
ds
and
add
push
test
lods
je
cmpsl
xlat
sbb
leave
mov
enter
test
cmp
std
sub
lods
je
sti
ss
inc
lods
mov
sarb
loop
movsl
push
or
movsb
andps
out
dec
mov
pop
cmp
cltd
push
int3
loope
je
or
bound
jne
mov
sub
movsb
sahf
aas
iret
sti
loopne
fsubrs
lret
adc
sub
mov
xchg
adc
jae
push
jbe
inc
inc
sub
dec
mov
xor
scas
pop
icebp
lods
sub
int
push
mov
adc
inc
dec
sbb
add
sub
movsl
mov
bound
inc
ds
or
sahf
imul
imul
xlat
das
cmp
xor
mov
and
xchg
mov
jnp
incl
repnz
aam
pop
test
push
std
pop
jl
xchg
divl
fdiv
repnz
inc
fdiv
mov
sbb
jo
pusha
mov
mov
ret
fmull
scas
test
in
lcall
gs
mov
cmp
adc
movsb
jo
rcll
sub
aas
cmp
add
and
xchg
stos
jne
lret
bound
iret
adc
xchg
fdivp
cmp
sub
xchg
add
and
xor
sub
push
pop
fidivs
aam
jno
mov
ret
xchg
pop
lret
jae
lods
aad
lret
or
inc
out
test
dec
and
faddl
lcall
into
scas
add
fwait
int
aaa
mov
jbe
or
lods
fnstsw
and
adc
inc
adc
and
insl
xchg
xor
lock
cmp
lods
or
cmp
in
data16
sahf
mov
call
jno
jb
test
mov
mov
push
jae
stos
and
mov
jne
xchg
stos
inc
jge
add
push
mov
jne
fdivl
inc
cmp
inc
cmpsb
stos
push
ret
bound
xchg
mov
push
adc
insb
and
pop
into
inc
addr16
push
add
sbb
shll
js
cmpsb
mov
cld
nop
fwait
ljmp
into
cmovle
cmp
sub
push
pop
lods
fsts
mov
mov
xchg
xor
ret
xchg
movsb
loop
int
inc
mov
dec
ret
data16
xor
pop
ds
or
fnstenv
push
or
sbb
or
pushf
or
inc
jle
lret
mov
inc
stos
lds
xor
movsl
mov
add
push
int
fldenv
sbb
adc
in
rolb
pop
aad
mov
enter
iret
sub
dec
sbb
gs
push
mov
sbb
add
mov
jb
add
inc
or
cmp
into
cli
mov
cs
push
pop
popa
pop
xchg
xor
icebp
lret
push
mov
pop
sub
jg
gs
ret
leave
mov
lds
dec
cmp
fldenv
lods
hlt
mov
jmp
icebp
adc
or
nop
ret
and
mov
cmp
cwtl
cld
subb
mov
testb
jge
shl
fsubrp
xor
adc
es
jns
outsl
pop
adc
ret
sbb
xor
cld
repnz
or
add
popa
mov
fadd
roll
cmp
in
mov
pop
in
cmpsb
mov
cltd
loope
pop
sub
xor
push
adc
adc
and
xlat
xor
adc
cmc
into
daa
push
jg
or
fidivl
sub
shlb
das
xor
and
adc
pop
xchg
inc
in
inc
add
xor
std
pop
push
jg
stos
and
pop
mov
push
lods
iret
sbb
inc
mov
push
fcmovb
xor
jl
fcom
lea
insl
lods
jmp
pop
sbb
mov
jp
adc
push
mov
xchg
or
pushf
jne
dec
aas
and
jmp
lds
mov
push
pop
jbe
jae
cmp
jg
cmpsl
imul
mov
insb
lock
dec
mov
call
stos
mov
adc
out
sub
or
fwait
jp
cmp
sbb
xor
add
icebp
mov
ficomps
inc
jl
rcrl
jnp
jp
popf
std
sub
lods
mov
push
je
add
inc
push
inc
mov
lds
inc
pushf
enter
and
rcrb
dec
repnz
cmpsb
cmc
sub
pop
ja
mov
lea
adc
mov
inc
push
cmp
sbb
jo
js
inc
mov
adc
adc
mov
insb
mov
push
ror
inc
cwtl
or
adc
mov
mov
pop
xchg
hlt
imul
inc
add
dec
and
push
stos
jle
sbb
mov
adc
push
lret
push
xchg
cmp
mov
jo
push
inc
lods
mov
push
lahf
adcb
out
or
aad
xchg
loope
add
mov
pop
push
xor
pop
out
push
lahf
jmp
call
mov
jp
shll
aas
lock
adc
lahf
in
add
xlat
jne
cltd
ja
mov
outsl
pop
push
loope
aam
pop
and
jmp
and
inc
jnp
mov
jecxz
movl
in
mov
jbe
popa
cmpb
pop
add
jmp
mov
push
or
sub
bnd
lcall
loope
and
push
rol
jge
std
repnz
or
xlat
iret
xor
push
xchg
sar
inc
mov
mov
ret
sahf
xor
cmp
jb
inc
push
sbb
fcoms
xchg
fcoml
cld
scas
arpl
and
rcr
xor
or
shl
or
lods
mov
or
dec
cli
je
fsubs
xor
int3
mov
jg
push
mov
inc
mov
insb
test
das
movsl
or
aaa
push
add
adc
cmc
xor
rol
sahf
and
sbb
ja
ja
sahf
push
xchg
inc
pop
push
jl
insb
js
clc
fstps
mov
scas
jns
push
lahf
sub
add
leave
sbb
iret
jg
cmp
sahf
lcall
push
pop
mov
int3
mov
jo
jbe
inc
cmc
xorb
xlat
orl
inc
xchg
aad
cmp
push
clc
xor
dec
scas
cmp
cmc
inc
jns
adc
inc
push
push
xlat
mov
aaa
inc
sarb
cmpsl
or
and
mov
sbbb
xchg
inc
cmp
mov
cmp
inc
loope
fwait
jne
call
out
in
ret
mov
xor
stos
test
call
mov
dec
lods
jbe
xchg
and
mov
fs
cld
pushl
push
pop
addl
push
out
push
daa
add
pop
inc
and
xor
loop
popf
xor
jne
jmp
cltd
pop
pop
pop
pop
mov
cld
dec
stos
shlb
fcom
or
orb
add
and
sarb
fiaddl
sbb
icebp
mov
int
loopne
and
out
mov
jg
addr16
mov
sub
movsl
xchg
test
sub
or
mov
fidivrl
lret
adc
xor
js
popf
cmp
lret
ja
xchg
dec
adcb
mov
mov
jns
enter
inc
aam
popf
sbb
sbb
and
fistl
push
xor
and
das
dec
push
int3
scas
mov
cmp
in
cmp
dec
mov
sub
jne
sub
pop
push
add
lahf
fcomps
push
cmpsl
mov
das
fsub
out
jns
call
sub
jp
mov
push
imul
les
xlat
aas
push
mov
lods
xor
xchg
arpl
mov
out
jbe
pusha
dec
jmp
mov
hlt
mov
adc
xchg
fimuls
pop
dec
sahf
sbb
jb
gs
mov
jb
pop
and
stos
sbb
xor
add
aad
add
iret
arpl
pop
inc
popf
sbb
sarl
leave
adc
nop
call
xchg
popw
cmp
fldl
cmpb
mov
dec
xchg
and
sbb
loope
or
jmp
es
fldcw
mov
and
ds
mov
daa
outsb
cs
es
pop
mov
enter
jecxz
shll
lea
fdivrs
leave
loop
ss
fbld
sbb
jle
dec
cwtl
mov
sbb
addb
adc
push
cmp
fistpll
test
xor
inc
xor
sub
dec
mov
or
arpl
lods
subb
cmp
inc
jl
xor
cmc
aas
ja
pop
cwtl
push
mov
decb
push
lret
jp
sbb
rorl
jmp
sub
lahf
in
xlat
bound
and
pop
sahf
mov
sub
cwtl
pusha
outsb
fimull
push
in
xchg
pop
outsl
shl
in
push
rcll
push
and
hlt
push
mov
xchg
pop
testl
sub
mov
dec
std
ss
pushf
fcoms
add
test
hlt
jp
pop
and
push
push
repnz
sub
cmp
cmpb
andb
test
bound
call
push
cltd
jo
push
lods
sbb
repz
out
xor
add
lret
clc
pop
cmc
sbb
xor
sahf
mov
cmp
nop
add
pop
push
jbe
scas
imul
xor
repnz
inc
sbb
in
pop
lret
jl
test
shl
test
popf
mov
xor
data16
xchg
fnstenv
inc
push
mov
int
jbe
bound
mov
cli
xchg
xchg
inc
pop
mov
xchg
sub
xchg
dec
mov
nop
pop
sbb
mov
jb
jg
js
pushf
movsl
lcall
cmp
mov
ficompl
mov
jge
jecxz
int3
or
stc
xor
dec
mov
xchg
xor
je
lock
inc
inc
add
jge
insb
jp
jb
sti
fwait
bound
inc
fldl
fidivrl
roll
sub
fldl
push
jne
test
ljmp
push
pushf
jbe
mov
subl
adc
int
mov
sarl
aas
cmp
fmuls
cmpsb
push
push
mov
or
arpl
mov
loope
shll
mov
popf
std
sub
sahf
ds
aam
negl
roll
lds
aad
dec
test
frstor
mov
inc
dec
jle
sbb
jns
scas
outsb
movsb
mov
test
lods
jp
clc
mov
sahf
cmp
jmp
in
sahf
jge
in
jno
adc
bound
or
cmp
js
fmuls
sti
adc
cmp
sub
mov
push
or
imul
mov
add
out
mov
push
adc
popa
or
in
test
enter
dec
stc
dec
daa
inc
pop
pushf
shll
imul
pusha
jmp
lods
jmp
cmpsb
inc
mov
push
stos
jle
pushf
xchg
fbld
cmp
jo
inc
pop
in
in
jmp
mov
jne
idivl
push
xchg
scas
lods
rcrl
jecxz
lret
mov
aad
adc
cmp
jp
dec
sbb
add
icebp
push
mov
mov
insb
jmp
mov
lds
xchg
push
mov
mov
divl
sbb
mov
ror
inc
addr16
shll
enter
mov
dec
push
xchg
ja
jg
lock
mov
add
leave
int3
add
cmpsl
dec
mov
mov
jmp
mov
push
jae
pop
lea
xor
push
mov
sub
insb
xor
lret
jne
dec
mov
and
jnp
pop
mov
pop
dec
push
pop
lods
insl
mov
xchg
vmwrite
sbb
pusha
lea
enter
xchg
push
dec
stc
nop
arpl
int3
leave
outsl
mov
dec
xchg
push
int
xchg
xor
xchg
pop
xchg
out
mov
push
xchg
inc
inc
jo
addr16
repz
sti
push
mov
xor
add
xor
dec
cmp
stos
mov
iret
lcall
fsubrl
mov
push
jns
cmp
leave
xchg
fidivs
cld
xchg
mov
lahf
out
shll
pop
addr16
xor
out
int3
push
in
addb
repnz
mov
add
cmc
ret
xlat
fldl
cwtl
scas
popa
cmc
and
fwait
jle
fcomps
daa
push
in
adc
add
in
iret
mov
imulb
adc
test
and
inc
or
shrl
stos
mov
cs
xchg
enter
pop
stos
xchg
and
lds
jnp
jge
into
dec
dec
or
mov
mov
enter
lahf
les
in
sub
lret
pop
push
xor
push
mov
push
les
sub
lock
xchg
test
les
hlt
out
pop
or
rorb
pop
sub
ja
les
aad
cltd
xchg
mov
xchg
jecxz
rclb
mov
adc
test
sub
in
test
pop
mov
out
outsl
inc
dec
mov
scas
cmp
es
cwtl
loope
fbld
in
add
cmp
xchg
fs
sub
adc
pop
push
ret
jne
pop
ficoms
pop
sub
sbb
mov
xchg
stc
push
push
jnp
jnp
jnp
scas
not
out
or
movsb
jnp
cld
orl
add
pop
popa
fsubrp
std
outsb
unpckhps
int
iret
clc
xor
push
sbbl
nop
rol
mov
test
mov
jg
mov
mov
mov
dec
push
mov
cmp
xor
fwait
out
aad
roll
mov
mov
daa
or
sub
cltd
scas
int
aaa
popl
int3
cmp
add
sbb
aam
cs
aas
mov
mov
adc
inc
pop
in
orl
sub
mov
loope
std
jmp
jnp
bound
cmc
mov
mov
xor
mov
mov
fnstsw
filds
mov
dec
adc
and
mov
dec
cld
call
sahf
mov
mov
out
mov
imul
mov
inc
jne
sbb
mov
imul
xor
stos
mov
add
sub
mov
in
fistps
les
add
jb
or
sbb
dec
mov
adc
int
or
rorb
stos
int
mov
push
pop
mov
pop
out
imul
js
shl
add
adc
mov
cmp
insb
sbb
push
add
dec
sar
fdiv
sti
addr16
cmp
lock
pushf
ror
insl
icebp
movsl
jge
dec
jl
add
pop
or
decl
js
sarl
das
lret
in
adc
icebp
dec
mov
adc
cmp
std
outsb
jmp
add
aad
fwait
rorl
scas
cld
fld1
jmp
pop
lds
jbe
lods
addl
imul
mov
out
fs
xchg
cmp
daa
rcrb
lea
sti
aaa
sbb
mov
fldenv
lret
enter
popf
cld
and
scas
mov
loope
cmp
inc
hlt
push
js
imul
lods
inc
iret
icebp
fwait
sub
push
nop
movsl
ret
outsl
cld
repz
jp
scas
lret
add
bound
enter
aaa
sbb
outsl
into
mov
mov
add
jle
leave
repnz
or
addr16
in
xchg
aas
cs
lret
hlt
fnstsw
jne
fsubrl
xchg
adc
stos
pop
jne
out
mov
in
pop
test
and
stos
in
mov
xor
push
rcrl
pop
push
xchg
xchg
sub
movsl
lock
rorl
imul
push
push
and
rorb
std
pop
out
rcrb
and
mov
aaa
cmp
push
mov
je
adc
xchg
imul
ljmp
dec
or
pop
pop
mov
cmpsl
shrl
xor
pop
gs
jp
adc
outsb
adc
in
cli
xchg
xchg
aaa
xor
out
pop
push
lds
je
int3
stos
pop
push
loopne
dec
clc
sub
pop
daa
int
fistl
mov
or
sbb
jbe
shrb
push
jl
in
lods
aam
xor
fwait
mov
aad
push
push
pop
sbbb
ljmp
idivl
mov
sub
sahf
mov
aas
jns
lock
mov
sbb
sti
and
add
pusha
dec
pop
andl
and
cmp
add
add
orl
pop
sbb
into
out
bound
aaa
cmc
jp
sub
das
outsb
push
dec
cmp
icebp
clc
ficompl
arpl
test
mov
lahf
xchg
ret
mov
popa
fbstp
xchg
ss
leave
mov
jo
adc
ja
out
das
sarb
mov
add
push
dec
pushf
xchg
adc
xchg
lret
push
xor
movsl
pop
inc
into
push
movsb
pop
cmpsb
lcall
adc
cmp
pop
and
int
push
clc
stos
mov
movsb
dec
nop
and
jmp
or
hlt
popa
mov
mov
add
jbe
inc
cmp
jmp
pop
pusha
inc
dec
js
imul
mov
mov
mov
inc
fdivs
loope
sahf
cmp
dec
jp
ret
mov
rcl
pop
jb
jmp
jb
cmp
cmc
add
xor
jnp
inc
jge
cmpsb
adc
aas
cmp
sub
mov
pop
adcl
push
add
sbb
dec
nop
mov
bnd
pusha
mov
lods
sbbb
icebp
add
pusha
sub
bound
mov
push
es
inc
sbbl
or
lahf
lcall
push
fidivrs
mov
fs
nop
jecxz
jae
stc
adc
xchg
mov
xchg
sbb
lods
fwait
dec
popa
adc
fldcw
or
mov
dec
xor
cmpsl
or
pop
sahf
popf
inc
subl
push
xchg
dec
cwtl
enter
jnp
shrb
jecxz
out
pop
jle
dec
popa
mov
rorb
dec
arpl
out
insb
cmp
insb
xchg
les
push
stc
dec
and
addr16
mov
es
orl
push
adc
cmp
mov
mov
dec
in
das
cmp
jae
sbb
jb
push
pop
out
adc
xchg
or
xchg
sbb
push
inc
out
jle
mov
dec
inc
sub
fcmovbe
push
das
mov
xlat
cs
mov
rcll
inc
ret
nop
test
mov
lods
mov
and
cmc
inc
ds
ss
sbb
aad
mov
lock
jle
lds
sub
jae
adc
mov
ds
mov
dec
sbb
jns
mov
or
mov
xor
pop
nop
mov
add
jno
fcmove
bound
xchg
icebp
insb
insb
sbb
jo
cmp
gs
push
aas
loope
mov
sbb
loope
mov
enter
rcll
lret
sub
dec
pusha
mov
sarl
push
shll
aad
xchg
aad
jl
rol
mov
mov
imul
lock
mov
cmp
push
leave
pop
sub
adc
sbb
das
repnz
outsl
cmp
pop
aam
hlt
cmp
sub
mov
out
push
jmp
rolb
sub
test
xchg
sbb
xor
and
dec
jecxz
outsl
lret
sti
xchg
push
sti
ret
das
cmpsb
fmul
shrb
movb
mov
lods
dec
adc
in
mov
and
stos
mov
cmp
dec
lcall
ja
pop
push
mov
and
mov
push
pop
enter
insb
jbe
lds
mov
push
rcrb
jno
mov
js
fmulp
stos
cmp
mov
movsl
lahf
mov
mov
mov
cwtl
jne
jge
arpl
jg
cmpsb
nop
jno
add
pop
jecxz
insb
ljmp
pop
pop
cmpsl
push
fcmovu
dec
imul
inc
rolb
int3
push
hlt
fcomps
les
add
add
sbb
loop
adc
mov
ret
mov
lds
icebp
xor
jle
jne
roll
inc
add
and
stos
mov
ret
and
mov
adc
push
mov
adc
stc
out
jge
fdivrs
lea
repnz
mov
add
mov
xlat
ret
mov
adc
jbe
xchg
das
push
xor
jecxz
cmpsl
ja
xchg
mov
dec
push
dec
cmp
stos
call
pop
cmp
loope
repnz
sbb
jg
dec
outsb
notb
or
cmp
lods
xor
arpl
arpl
in
or
fcmovnbe
sahf
or
and
icebp
inc
jp
or
cltd
mov
les
or
lea
cmpsl
jecxz
ja
clc
test
popa
xor
jl
adc
jle
add
stc
push
nop
and
mov
loop
dec
jns
repz
loop
aad
sbbl
les
pop
jg
ret
mov
xchg
add
movsb
stc
jo
sub
add
inc
mov
mov
and
fwait
xchg
dec
lods
ret
adc
inc
das
xor
inc
aad
test
fcmovnb
jbe
inc
sub
push
dec
sub
cs
jne
mov
and
test
sub
into
ret
or
sub
adc
mov
push
testb
into
adc
mov
addr16
mov
fwait
push
pop
push
insl
repz
cmpsb
enter
xor
dec
ss
xor
ss
bnd
testl
sub
imul
into
sbb
push
es
fimull
mov
sahf
push
in
jno
leave
std
ds
lcall
jp
mov
mov
jge
xchg
sar
mov
sub
ror
sahf
pop
sbb
rcll
jmp
lock
mov
dec
lea
stc
mov
ja
or
push
xchg
in
pop
pop
mov
xchg
mov
push
rol
mov
sbb
in
rorb
stos
in
insb
jb
sub
popa
add
int3
mov
outsb
sbb
arpl
push
mov
mov
and
xchg
dec
cld
and
push
jb
dec
test
mov
imulb
adc
mov
sbb
mov
inc
hlt
aam
cmp
cwtl
cmp
jmp
enter
scas
dec
insb
arpl
mov
mov
push
sbb
ficoms
inc
jge
sub
mov
movsl
mov
cmc
stos
sti
mov
lds
sarb
mov
ljmp
shl
or
mov
xchg
push
push
adc
pop
test
push
scas
int3
push
cmp
mov
sbb
mov
fwait
psubsw
sub
aas
and
in
xchg
pop
push
jae
sbb
xchg
fstpt
dec
bnd
mov
test
pop
scas
adc
dec
clc
adc
xorb
pusha
out
mov
fwait
dec
jl
dec
leave
test
sbb
loope
scas
mov
shlb
mov
pop
dec
push
or
es
jne
inc
mov
jae
pop
adc
cmpsl
mov
inc
dec
enter
shr
lock
stos
in
fdivs
sbb
add
mov
mov
xchg
scas
mov
inc
out
or
cmp
mov
or
dec
cmp
push
repnz
jg
dec
sub
xlat
or
xchg
inc
mov
test
and
cmc
filds
cmc
repnz
or
add
push
std
insb
shrb
xchg
hlt
mov
movsb
mov
xchg
push
je
lock
push
loopne
nop
add
cmp
fisubs
sbb
sti
lret
jnp
fdivp
or
jmp
sbb
push
lret
dec
xchg
mov
rorb
fwait
in
or
fildl
add
jge
sbb
cmpsl
fstl
push
xchg
cmc
mov
scas
sbb
repnz
add
daa
in
ljmp
and
sarl
jno
cmp
adc
imul
jg
lds
cmp
sbb
fbld
addr16
andb
mov
insl
or
add
inc
xchg
push
xor
xchg
pop
xchg
xor
sarl
push
push
push
sbb
sahf
lods
les
les
nop
leave
popf
sub
sub
pop
mov
sbb
lods
sub
lods
popf
push
xor
stos
dec
in
ret
rcrl
data16
xor
shll
pop
lock
adc
dec
lock
dec
lahf
flds
sub
sbb
mov
push
js
sbb
pop
or
pop
mov
push
mov
stos
aaa
inc
cwtl
out
xchg
mov
pop
sub
adc
pop
adc
pusha
xchg
lods
das
mov
iret
nop
jae
gs
in
mov
cmp
imul
movsb
lods
sub
inc
rorb
dec
in
pop
xor
sbb
cmp
lea
mov
insl
cmc
movsb
ds
aad
sahf
int
dec
fidivl
es
into
jb
dec
or
aam
dec
clc
les
into
cmp
xor
loope
bound
stc
push
mov
adc
movhpd
push
jae
pop
pop
dec
mov
movsb
aam
jno
pop
pop
incl
adc
and
push
xchg
jmp
xlat
filds
pop
js
popf
adc
xor
push
je
popf
out
or
mov
mov
mov
cmp
push
aas
xlat
nop
rcl
mov
fstl
and
lds
cmp
in
lret
mov
or
mov
in
loop
adc
xchg
and
clc
mov
mov
jl
lret
or
mov
sbb
pop
arpl
jge
shl
or
scas
std
bound
loope
out
sub
jle
sub
sbb
xchg
inc
fiaddl
xor
fcompp
xchg
es
adc
jae
mov
leave
ljmp
xchg
sub
fistpll
push
icebp
call
push
into
or
pop
and
mov
leave
mov
cld
iret
fmull
sub
lret
lock
sbb
sub
mov
test
push
stos
test
das
pop
add
in
stos
std
xchg
or
push
icebp
or
das
scas
jmp
fistl
lret
aam
lret
addr16
aad
push
xor
popa
pop
and
inc
cmp
fsts
and
jp
fucomip
pop
loopne
jae
mov
bound
in
and
insb
cmp
lock
cld
or
mov
dec
mov
idivl
fldt
adc
inc
lahf
loopne
cmp
push
or
push
lcall
incb
xor
jl
cwtl
pop
mov
mov
stos
push
mov
loopne
jns
fldenv
ss
push
mov
movzbl
aad
mov
or
sbb
out
aad
mov
add
cli
push
cmp
inc
inc
xor
add
enter
or
xchg
stc
call
dec
mov
imul
mov
jnp
pop
mov
xor
cmp
leave
mov
lret
cmpb
push
pusha
out
test
arpl
enter
negb
fisttps
inc
mov
outsb
divl
lods
cmpsl
cmpsb
jl
mov
dec
stos
lret
inc
mov
push
mov
push
dec
les
loop
and
into
sti
add
out
aad
mov
push
lods
movb
lods
push
cmc
js
notb
jno
dec
int
xor
jne
push
arpl
test
push
pop
lcall
and
loope
push
scas
pop
mov
les
push
xlat
mov
outsb
sbb
push
sbb
mov
pop
adc
pusha
and
popf
cmp
push
out
loop
sbb
and
inc
mov
ret
xor
movsb
call
lods
cmp
mov
xchg
psllq
inc
testl
sti
xchg
push
add
jg
jmp
cld
dec
icebp
adc
rolb
mov
sbb
adc
inc
push
shlb
sbb
in
add
and
adc
push
popf
xadd
aaa
mov
and
scas
shlb
out
inc
jp
mov
and
mov
sub
stos
inc
mov
pop
lea
xor
sbb
cmp
pop
xor
cmp
daa
xor
imul
pop
mov
in
pop
sbb
and
pop
push
divl
inc
jb
repz
std
fldt
lret
sub
mov
mov
fistpl
aas
arpl
insl
pop
sbb
mov
and
lock
lock
cli
pop
xor
mov
xor
test
xor
inc
lock
aam
cmc
pop
cld
clc
addr16
lret
insb
pop
mov
add
jmp
aas
and
push
mov
lock
les
mov
daa
imul
cli
xor
and
aad
mov
sub
movsb
xchg
addb
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
adc
jne
nop
jl
pop
pop
jl
test
xchg
loop
imul
mov
js
mov
dec
sub
jae
cmp
push
add
dec
add
xor
rcrb
push
repz
nop
or
movntq
push
ficoms
clc
lahf
into
sub
ds
xor
test
and
or
je
stos
sub
popa
lock
sbb
bound
sti
jb
and
inc
out
add
jmp
mov
mov
in
out
pop
popa
push
out
or
popa
push
pop
or
sub
jp
stos
adc
pop
les
cmpsl
popa
jb
xchg
pop
sub
or
or
fsubrs
or
enter
test
and
inc
mov
in
int3
cmp
mov
mov
sbb
inc
lea
dec
lods
fimull
push
pop
aas
pop
lcall
repz
imul
inc
cmp
movsl
fiaddl
push
pop
jg
cmp
sbb
in
in
mov
jg
fwait
adc
xor
cwtl
pusha
mov
ja
xor
insl
mov
pop
imul
mov
sahf
fs
cs
push
xchg
or
es
dec
daa
fadds
ljmp
dec
and
cmp
fcomps
repnz
test
mov
pop
push
aam
jne
jecxz
mov
jns
fwait
lahf
push
loopne
test
punpcklwd
dec
sub
xchg
add
mov
jecxz
sub
repz
inc
inc
mov
out
daa
lock
push
mov
in
push
adc
xchg
pop
pop
mov
dec
fs
stos
fisttpl
sub
xor
xor
pop
mov
and
xchg
lret
imul
push
das
out
push
pusha
sub
in
jmp
adc
mov
aaa
cli
push
into
es
repz
inc
or
pop
das
lcall
fnstsw
in
cmp
mov
xor
mov
or
jp
psubb
xor
mov
std
mov
add
sbb
jb
ja
jne
outsl
rolb
cs
paddsb
mov
es
mov
pop
pop
sbb
addl
ret
cmp
or
mov
repz
stos
push
or
outsl
bound
int3
jl
xorl
cld
sbb
add
inc
mov
sahf
lret
bswap
mov
adcl
lahf
dec
shll
insl
sbb
jae
std
shlb
fldcw
or
jb
and
shl
push
mov
cmp
fistpll
out
hlt
push
jle,pn
js
jle
pop
in
sti
xor
clc
dec
pop
push
jmp
imulb
sub
das
xchg
enter
cmpsb
hlt
mov
dec
add
pop
sub
mov
mov
ljmp
shrb
movsl
test
in
or
test
mov
pop
push
faddl
pop
lods
pop
dec
dec
xchg
mov
pop
push
ds
imul
daa
mov
sbb
add
loopne
cld
mov
in
cld
iret
out
mov
popf
xlat
repnz
or
jecxz
add
push
adc
cmc
push
fisttpl
out
into
mov
ret
mov
pusha
mov
call
sub
inc
cmp
cmp
and
mov
subb
test
push
adc
mov
clc
rol
push
sub
dec
ja
shrb
jmp
push
int
push
xor
hlt
in
imul
cmp
mov
add
xor
lcall
leave
mov
jp
iret
mov
mov
jbe
jne
test
jo
lock
aas
jno
sbb
in
cmpsl
mov
push
mov
xchg
lret
scas
pop
je
mov
xor
adc
popa
ret
lea
sbb
adc
incl
stc
sbb
subl
call
pop
or
inc
cmc
stos
iret
rcll
sub
cmp
inc
insl
jno
out
mov
xlat
cmc
loope
ret
adc
jne
or
xchg
aad
and
cmp
mov
inc
cmc
pop
add
cmp
test
or
and
and
je
rorb
stos
inc
in
cli
rcrl
mov
add
xchg
dec
dec
aam
xor
or
loope
mov
jo
sahf
push
testb
push
push
mov
mov
test
flds
push
leave
mov
sbb
sbb
sub
icebp
xor
in
sbb
pop
enter
bound
test
sub
jecxz
in
cmp
popa
arpl
insl
or
dec
mov
sbb
sbb
mov
inc
fisttps
stos
push
rclb
aas
int3
sbb
cmp
pusha
les
mov
pop
shll
pop
std
sbb
cmp
cli
fcoms
inc
mov
cmpsb
push
jno
jle
shl
inc
leave
ljmp
enter
adc
jecxz
xchg
jne
addr16
add
sarl
pop
add
xor
roll
cmc
jecxz
scas
push
iret
aam
or
fisubrs
sub
cltd
shlb
stos
jb
dec
or
add
das
mov
xor
fidivs
mov
in
pusha
or
lods
lea
jnp
pop
pusha
outsb
fists
mov
add
mov
dec
shrl
mov
sub
mov
dec
ja
imul
or
mov
adc
idivl
sub
inc
icebp
pop
and
int3
and
jbe
inc
jmp
scas
adc
in
push
movsb
lret
mov
sub
insl
inc
pushf
inc
outsl
test
add
adc
sub
es
push
mov
and
dec
jae
pop
jle
mov
nop
adc
cmp
mov
pop
leave
sbbb
sub
xorb
dec
subb
outsl
test
cmp
mov
mov
movsl
jnp
mov
mov
mov
call
mov
in
je
loope
mulb
test
leave
mov
jns
test
mov
les
lret
mov
popf
stos
pop
jbe
adc
into
inc
in
addr16
mov
lock
jne
pushf
add
in
fmull
shlb
xchg
mov
jns
add
repz
ret
ret
mov
bound
negb
inc
cli
inc
in
jmp
adc
rcr
shrb
jg
fidivrl
mov
test
out
mov
mov
mov
fisubl
dec
pusha
fnstcw
add
cmpsl
mov
rcrb
ret
negl
shll
inc
inc
jnp
repnz
jae
cli
ds
or
or
mov
movsl
aas
pop
clc
push
jecxz
movsl
cltd
pop
leave
push
or
add
fldenv
cmc
iret
out
rclb
adc
jno
pushf
fldt
mov
mov
stos
cmp
xchg
cmpb
gs
imul
addr16
sub
mov
pop
rcl
icebp
ret
and
sbb
mov
add
ja
lret
push
in
fstl
ljmp
call
mov
jo
scas
or
fnsave
fstp
adc
pop
sbb
mov
out
mov
pop
fstps
jae
sbb
adc
xchg
mov
inc
lahf
add
mov
and
test
daa
test
loop
lds
cmp
ret
adc
push
outsl
push
movsb
lock
insb
cmpsb
or
xor
andb
or
mov
repnz
pop
mov
mov
add
mov
and
insb
jp
sub
ret
gs
aam
or
enter
pop
sub
nop
dec
xor
call
lret
negb
or
neg
outsl
push
call
aad
push
sbb
mov
int
stos
add
inc
repnz
mov
decb
icebp
loopne
test
inc
cmp
mov
cmpsl
int
and
lret
fimull
mov
sbb
add
cmp
ja
inc
test
aad
aas
movsb
mov
dec
insb
jno
imul
sub
test
xorb
xchg
cwtl
outsb
jecxz
popf
sbb
addl
popa
loope
jle
xchg
sbb
sbb
insb
mov
pop
cltd
push
cmp
icebp
outsl
cmpsb
inc
mov
jae
fmull
mov
mov
push
add
test
fbstp
sbb
stos
test
imul
pop
sar
bound
negl
push
and
imull
add
or
sub
test
xchg
in
xchg
fwait
sub
pushf
pop
sub
ss
and
xor
sub
or
or
dec
or
out
adc
out
out
mov
lods
dec
loope
cmp
test
adc
and
add
jbe
sbb
jb
jg
int3
mov
pop
or
mov
cmpb
sti
pop
enter
stos
lcall
cmp
inc
mov
fimuls
mov
mov
ljmp
clc
cltd
mov
push
daa
cmpb
pop
gs
dec
fs
xor
stos
xchg
xchg
outsl
pop
pop
push
adc
jmp
and
comiss
mov
pop
dec
sub
data16
lods
sub
cld
jecxz
push
negb
xor
or
push
in
decb
pop
hlt
push
xor
pop
into
test
sbb
scas
and
adc
outsb
rclb
xchg
leave
outsl
adc
xchg
icebp
xchg
fiaddl
cmp
push
bound
negl
in
adc
popa
insb
add
test
vhaddpd
cld
adcb
clc
test
xor
mov
push
lret
inc
and
jae
and
and
mov
mov
inc
cmp
add
repz
es
cmpsb
mov
sbb
loopne
sbb
push
push
mov
push
pushf
jne
aaa
or
out
cltd
mov
cmp
mov
lea
insb
fneni(8087
add
add
pop
and
aaa
lcall
lods
jbe
mov
dec
pop
lds
fucomp
push
sbb
test
mov
ficompl
mov
ja
scas
je
pop
cmp
orb
ss
vshufps
jmp
push
lret
mov
pop
dec
dec
pop
pop
xor
rorb
cmc
retw
mov
dec
mov
loopne
or
cmp
movsb
mov
repnz
ficoms
in
mov
jnp
fdivs
jle
data16
test
cmp
sub
das
daa
je
pushf
das
mov
mov
and
inc
xor
mov
mov
mov
mov
mov
push
out
sahf
pop
inc
call
enter
sub
dec
test
in
sub
stos
inc
push
add
push
mov
data16
sbb
xor
fsubrl
imul
andb
xchg
xchg
pop
mov
xchg
cmpsl
inc
mov
loop
shl
fcmovnb
add
fldenv
sar
push
and
lods
push
jl
mov
in
xchg
movsb
lock
pop
nop
fs
mov
enter
ja
and
pop
pushf
xor
fisubs
jnp
xchg
jo
ret
stos
iret
insb
shrb
sub
inc
aam
test
mov
sbb
pop
insb
xchg
pushf
lods
cmc
xor
dec
fcmovne
int
cmp
push
cli
sub
xchg
mov
push
add
add
inc
in
int3
push
enter
mov
imul
xlat
shrl
sbb
dec
test
add
arpl
call
mov
aam
jmp
inc
sub
push
out
gs
jno
and
sub
or
mov
ja
addl
pop
pop
xchg
mov
mov
cmp
mov
test
insl
popl
push
cmp
outsb
push
push
shrl
mov
pop
or
fwait
jne
neg
sub
sar
cmp
sbb
arpl
sub
ljmp
imul
push
shr
ret
clc
aas
scas
pop
and
and
scas
sub
int3
xorb
or
adc
and
mov
int3
frstor
dec
inc
jo
sbb
push
out
mov
xchg
mov
sub
in
ret
xor
xchg
sahf
mov
mov
jno
and
popa
jmp
mov
stos
sbb
cltd
pop
ret
push
push
adc
imul
scas
jb
pop
hlt
cmp
adc
dec
in
sub
sbb
pop
cmp
xchg
xchg
lret
cld
cld
jg
lds
ret
lock
mov
dec
add
xchg
in
shll
mov
xlat
adc
pushf
stc
mov
cmp
rcr
in
hlt
or
cltd
inc
idivb
js
mov
mov
cmp
jnp
inc
repz
negb
or
call
out
das
gs
rclb
sbb
or
add
into
incl
cmp
mov
xchg
xchg
scas
mov
imul
xchg
mov
test
pop
out
pop
xlat
mov
cmp
mov
cmp
incl
jmp
clc
cmc
or
sub
push
mov
sub
inc
je
jo
mov
movsl
adc
pop
sbb
insl
flds
movsl
insl
mov
inc
lds
dec
outsl
scas
arpl
mov
pusha
inc
test
lcall
cmp
adc
loope
jae
shrl
imull
adc
jnp
push
cmpsl
rorb
into
stos
jmp
sbb
jno
andps
insb
jo
mov
ficompl
mov
dec
mov
inc
lock
loopne
dec
ret
add
shll
adc
xor
dec
jmp
pusha
dec
mov
mov
cmp
jo
add
sub
popa
arpl
les
enter
xchg
pavgw
fcoms
imul
jg
sbb
imul
scas
pop
mov
and
add
sub
pop
cmpsb
jbe
fdivs
test
pusha
xor
out
mov
mov
xchg
mov
sub
sbb
fsub
scas
ror
xor
jnp
mov
in
fadds
jle
movsl
ss
cli
dec
mov
push
mov
out
dec
sub
testl
xchg
out
mov
dec
or
mov
cmp
cmp
shlb
fs
sub
test
add
cmpb
xor
aas
mov
adc
lds
mov
mov
xchg
fld
lods
push
sub
pop
ja
test
adc
push
ja
pushl
push
lret
jecxz,pn
mov
cmp
int
outsb
lea
mov
jno
push
sbbl
sbb
mov
xor
jl
dec
cs
idivb
mov
test
shlb
mov
inc
jmp
enter
push
and
mov
sbb
int
das
xor
sti
enter
dec
js
test
cmp
je
inc
sti
lods
mov
clc
xchg
mov
push
repnz
loop
loop
xchg
cmp
add
sbb
insl
daa
rclb
dec
sti
loope
mov
ret
clc
mov
repz
push
inc
popa
mov
mov
out
arpl
mov
jb
aam
jne
pop
sahf
mov
loopne
ret
push
rorb
dec
mov
sbb
iret
lea
or
mov
sbb
cmpsb
mov
aaa
lock
iret
push
cmpsl
push
wrmsr
mov
jge
das
fdivs
mov
jp
gs
fwait
sub
jl
push
fldt
and
cld
xor
lahf
inc
adc
jne
lock
fmuls
aas
and
int3
mull
lea
xchg
add
das
mov
jno
jecxz
xchg
js
jns
jne
mov
stos
mov
stos
or
lock
gs
lds
mov
or
sub
sub
mov
dec
lods
cli
aam
inc
insb
xchg
inc
jb
xchg
xor
and
xor
cmpsb
push
jmp
pop
fsubs
out
test
pop
rcr
cmp
cmp
outsb
imulb
jo
mov
dec
mov
lret
add
pop
fadd
xor
mov
pop
mov
cmpsl
pop
and
loop
sbb
das
push
out
negl
sub
lds
sti
movsl
sti
cmc
int
sbb
std
js
hlt
es
mov
sub
movsl
mov
or
aam
mov
addl
popf
ds
sbb
pop
stc
loop
mov
sarb
xchg
rcll
cld
je
ss
fs
cmc
pop
push
mov
inc
gs
das
mov
into
movsl
or
test
fdivr
idivb
mov
jmp
pushf
xor
sbb
es
xchg
cmp
insl
mov
cld
adc
js
mov
rorb
lds
test
test
jnp
mov
std
pushf
in
into
adc
in
push
cbtw
icebp
cmp
mov
jg
xchg
std
stos
mov
xchg
lds
and
xchg
lock
mov
nop
add
rorl
lret
fistl
hlt
push
sub
xor
dec
cmp
push
das
xor
xchg
xor
std
jl
and
std
jno
sti
and
shll
dec
mov
push
lods
adc
jns
cmp
jo
scas
push
bound
lret
sahf
add
mov
into
or
xchg
outsl
stos
xor
mov
adc
jnp
fisubl
jmp
das
test
mov
add
inc
fcmovu
mov
pop
ss
imul
rcl
xchg
sub
stos
mov
shlb
mov
pop
clc
inc
pop
dec
addr16
lret
jne
adc
jo
rol
mov
in
cli
popf
cmc
jecxz
inc
mov
ds
mov
cmc
aam
lahf
sub
shl
stos
or
sub
outsl
inc
sub
mov
fadds
das
in
jbe
lret
cmp
xchg
pop
inc
mov
mov
xchg
cmc
jne
loope
pop
inc
adc
xchg
imul
movsb
out
decl
repz
or
scas
cmp
sbb
outsb
push
add
inc
mov
lcall
test
lods
out
cmp
in
clc
sbb
fistpll
xchg
cvtdq2ps
mov
lret
xchg
adc
testl
arpl
push
mov
push
push
addr16
insl
pop
lods
lret
lods
mov
je
stos
or
and
sar
pop
mov
and
mov
or
call
movsl
pop
insl
stos
inc
jl
add
in
test
jbe
or
jbe
gs
sahf
jge
jbe
lock
in
mov
fwait
test
jno
fwait
ss
lock
xchg
and
push
cmp
popa
mov
pop
lock
jl
add
lahf
pop
jp
add
imul
test
ret
mov
push
jo
sbb
jbe
sbb
stos
sub
sbb
andl
push
adc
push
jbe
int
push
or
sbb
or
shll
sub
sub
or
data16
enter
lret
loop
hlt
add
in
add
in
add
gs
mov
inc
mov
jns
imul
cmpsb
insl
inc
lcall
cmp
dec
insb
fnstenv
jne
int
cmc
lret
inc
out
sbb
gs
mov
xor
push
sub
mov
in
inc
jle
dec
or
insb
mov
adc
mov
dec
shl
sub
push
sbb
cmp
sub
mov
dec
scas
add
sarl
mov
mov
cmp
mov
cmp
flds
lods
js
sbb
push
aad
mov
nop
jne
and
push
movsb
xchg
popf
and
fistpll
pop
sub
movsb
repz
ljmp
mov
in
cli
addb
iret
bound
cltd
stos
movsl
mov
cmp
pop
iret
fldt
les
push
rolb
cltd
ss
lret
jb
push
cmp
cli
pop
das
ja
mov
leave
mov
push
out
fwait
adc
repz
fisttps
leave
add
lret
mov
out
jge
sub
jb
adc
aas
jecxz
outsl
fmull
out
ja
aaa
mov
pop
data16
loop
push
pop
jno
add
xor
lock
push
mov
mov
sbb
sub
mov
out
and
faddl
pop
xchg
mov
push
push
xor
xchg
xor
mov
xchg
sub
lods
jmp
mov
xchg
push
mov
mov
popa
in
fdiv
lahf
mov
ss
adc
mov
add
scas
out
imul
or
fcomps
sbb
cli
gs
mov
popf
setl
out
out
setb
mov
inc
outsb
gs
cmp
loop
cmp
jmp
sbb
repnz
cs
mov
nop
insb
dec
gs
imul
ja
or
nop
lods
inc
inc
mov
cmp
mov
stos
xor
rcl
xchg
into
movsl
ret
test
shlb
push
fninit
scas
leave
movb
or
fmul
divb
dec
imul
adc
mov
jg
popf
push
sti
jbe
sbb
pop
lock
iret
repz
orl
ret
dec
jb
cmpsl
imul
sub
nop
ss
movsb
movsb
push
enter
sbb
sbb
adc
cmp
xchg
loope
lods
xchg
pmaddwd
cmpsl
mov
cmp
jae
sarl
and
mov
lret
inc
movsl
dec
in
cmc
aam
xchg
inc
mov
dec
ret
fldcw
xlat
into
scas
lret
in
and
push
jbe
dec
stos
cltd
jg
test
mov
outsb
ror
xor
and
mov
ficoml
pop
mov
pop
inc
scas
and
test
sahf
scas
pop
adc
jecxz
inc
movsl
bound
bound
aam
dec
test
dec
jmp
je
and
jns
test
jle
mov
fs
cmp
xor
and
add
mov
or
jp
jbe
sbb
gs
andb
and
mov
mov
sub
pop
daa
rolb
pop
xlat
xchg
xchg
jmp
cld
adc
cmp
mov
jnp
shlb
sti
stc
sub
cli
dec
xor
adc
lea
ret
jp
or
push
mov
cmp
js
cmp
pop
ss
fistl
xchg
call
hlt
mov
sub
dec
mov
ljmp
sbb
and
call
insb
lret
adc
and
mov
mov
outsl
push
xor
scas
jnp
pop
sub
sbb
js
push
push
cmp
and
jle
and
dec
sbb
sub
jns
stos
shll
pop
scas
add
adc
rcrb
sbb
rorl
adc
jle
jle
aaa
out
test
movsb
cltd
mov
fmul
shlb
movsl
repnz
xor
scas
lea
stc
in
xchg
jg
js
call
push
adc
inc
sub
or
mov
fiadds
jp
and
jmp
divl
lcall
in
xchg
daa
cmp
dec
insb
add
lret
into
push
push
rclb
inc
aaa
sbb
xchg
lcall
jecxz
jne
dec
je
insb
mov
test
mov
out
mov
lcall
jbe
xchg
jmp
cmp
pop
les
and
xchg
or
jecxz
pop
nop
loope
mov
lret
mov
sub
sub
or
sbb
pop
xchg
dec
push
outsb
inc
aad
mov
mov
lahf
xchg
or
lods
xor
jmp
cmp
lcall
lock
fwait
jb
xchg
mov
bnd
mov
stos
xor
mov
mov
dec
mov
mov
mov
iret
add
cli
mov
int3
push
addr16
sub
in
push
stc
clc
int
lock
push
push
xchg
icebp
cmp
inc
lods
jmp
rclb
push
int
inc
mov
cmp
in
jecxz
mov
stos
les
outsb
fdivl
xor
adc
cmp
inc
lcall
mov
xchg
add
mov
data16
outsb
lcall
pushf
push
mov
cmpsl
cmp
fnstenv
sub
xchg
sub
pop
das
or
popa
jg
std
lods
imul
sbb
mov
mov
int
xchg
les
jne
in
imul
icebp
push
repz
mov
and
jge
cmp
outsl
std
cmp
lret
jb
out
pop
adc
and
push
or
cmp
ror
adc
add
mov
out
fiaddl
cmc
mov
mov
jg
xor
xchg
mov
sahf
fcmovb
daa
sub
dec
ret
sub
inc
mov
popa
sbb
xchg
idivb
cmp
sub
jb
divl
scas
fwait
jo
int3
cmp
add
movsb
sub
adc
mov
add
push
xchg
or
ja
xor
and
sub
and
int
ss
es
aad
lahf
add
out
pop
sbb
mov
push
push
mov
outsb
popa
mov
lret
loope
rcll
lcall
add
add
mov
cmp
mov
loopne
gs
mov
jg
mov
cmp
xchg
roll
xlat
je
xchg
int3
in
cmp
into
pop
sbb
mov
in
shrl
lret
inc
mov
lods
cmp
addr16
dec
insb
push
xlat
or
daa
lret
mov
mov
mov
outsb
mov
nop
xchg
xor
repz
ljmp
inc
lret
mov
mov
dec
pop
sahf
xchg
xor
push
inc
test
pop
dec
iret
test
loop
addr16
data16
shl
insb
test
cmpsb
push
lock
movsl
or
cmp
mov
dec
adc
in
sbb
cmp
pusha
jns
repz
lds
fwait
hlt
and
leave
xor
jge
push
mov
fisttpl
jle
xchg
sub
add
out
lret
out
loopne
sbb
ss
inc
repz
jge
push
adc
cmp
and
roll
aas
cmp
adc
cmpsb
xchg
fbstp
sub
and
or
movsb
xor
call
sbbl
out
dec
sar
mov
or
sbb
jns
fstpt
lcall
jge
in
sbb
sub
mov
mov
and
insl
pop
mov
pushf
add
aad
popf
aaa
std
ja
sub
pop
bound
mov
ret
stos
push
push
fsubrs
loope
push
lods
add
sub
cmc
sbb
xlat
lahf
gs
jge
mov
in
imul
push
cmp
adc
dec
push
inc
out
mov
lds
cltd
sub
jle
adc
repnz
int3
addl
mov
lret
sbb
clc
lods
into
xchg
call
mov
sbb
aas
adc
sbb
xchg
imul
insl
cmpsl
jle
sub
repnz
aaa
lcall
mov
push
out
mov
xchg
inc
lea
ds
call
test
bound
add
dec
dec
xchg
sbb
arpl
aad
test
pushf
pop
xchg
pop
repz
adc
xchg
and
mov
or
inc
or
add
idivb
fdivp
ficoms
mov
insl
hlt
punpckldq
adc
aad
das
mov
mov
dec
mov
dec
mov
jae
pop
icebp
pop
xchg
stos
lods
test
push
sbb
dec
mov
push
push
adc
stos
pop
outsl
and
mov
cmc
mov
add
outsl
shlb
jg
lods
xor
xorl
mov
push
pop
enter
and
lret
shlb
mov
mov
adc
pop
out
xchg
pop
jmp
jne
ret
cmc
cs
push
jl
out
and
test
or
lods
push
adc
dec
dec
test
aas
enter
adc
dec
stos
cmp
mov
subb
or
lret
sub
add
sbb
push
jnp
xchg
ret
adc
push
fmulp
clc
outsl
bound
das
xor
mov
jb
aad
push
inc
repz
fldcw
inc
fs
dec
push
xlat
inc
or
add
ljmp
sbb
stos
jns
and
dec
push
pop
daa
aam
gs
sbb
xchg
and
xchg
dec
inc
or
or
shrd
cmpsl
push
and
xor
jns
sarb
lds
push
rcl
cmp
clc
jg
repnz
scas
aad
ret
je
arpl
xchg
ljmp
mov
shlb
and
out
data16
mov
cli
xchg
ds
imul
sar
jb
push
adc
sub
cmp
addb
push
imulb
aas
jno
shlb
fwait
mov
pop
mov
lock
mov
ds
adc
dec
mov
pusha
clc
stos
rolb
pop
mov
roll
ljmp
stc
lods
xor
movsl
jl
into
mov
leave
out
mov
push
pop
les
dec
or
xchg
outsl
xor
mov
sub
sti
enter
imul
and
outsb
mov
sub
xor
out
lahf
cli
push
fs
cmc
icebp
adcb
mov
add
shlb
push
push
fmull
out
sub
daa
mov
mov
mov
xor
cli
outsb
fstl
pop
sub
rcr
pop
fsubr
jmp
shlb
sub
std
cmp
pop
lahf
test
lock
sbb
shlb
dec
xchg
outsb
aaa
imul
bound
jge
and
xor
xchg
decb
push
inc
pop
sub
cmp
in
pop
lahf
out
mov
add
arpl
cmp
mov
int3
sub
dec
add
js
xlat
xlat
sub
add
push
xchg
cli
pop
mov
rcl
ds
jnp
sti
push
in
inc
adc
test
ds
ret
sbb
pushf
movsl
cwtl
stc
inc
mov
jo
and
mov
fiadds
outsl
mov
cmp
adc
popf
xchg
test
divl
dec
inc
subl
sahf
jo
cltd
imul
push
cli
test
cmp
aas
pusha
xor
outsb
adc
jno
call
call
inc
fisttpll
enter
lahf
fucomp
call
lds
jno
stos
mov
dec
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
cli
adc
or
xchg
add
call
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
