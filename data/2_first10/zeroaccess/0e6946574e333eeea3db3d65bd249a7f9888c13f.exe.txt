push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
mov
addl
subl
sub
cmp
jp
jbe
divl
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
sbb
mov
shrl
data16
pop
mov
loope
mov
cmpl
jecxz
cmp
pop
out
jno
and
scas
inc
mov
mov
lock
iret
ret
loope
adc
lret
cmc
cmc
aaa
in
shl
sbb
mov
xor
push
shll
cltd
dec
mov
loope
arpl
mov
in
das
loop
sbb
dec
lcall
add
add
inc
jle
aas
int3
jmp
xchg
lods
mov
or
addr16
call
icebp
mov
sbb
jecxz
adc
jl
pop
xchg
in
add
dec
stos
lahf
andb
scas
dec
mov
xchg
add
push
rcrb
add
jmp
adc
mov
xchg
jecxz
cmc
dec
push
push
hlt
mov
ror
iret
movsl
xchg
add
mov
lods
int
int
or
mov
mov
jo
inc
sub
test
cmp
or
or
iret
test
rcl
lret
inc
loopne
data16
movsb
cmc
push
mul
pop
cmpsl
cmp
lcall
hlt
mov
jne
xor
or
sbb
lods
cs
das
cmpsl
push
mov
inc
scas
sbb
pop
xor
ret
jecxz
fiaddl
addr16
inc
mov
cmp
and
aaa
and
cmpsb
dec
cmc
out
push
jg
jno
movsl
lcall
and
sub
hlt
loopne
or
cmc
mov
stos
into
dec
dec
aaa
mov
fimull
insl
iret
mov
insb
test
sbb
out
int
adc
out
mov
scas
aam
negb
pushf
dec
push
jne
xchg
mov
add
movsl
cmpb
mov
add
insl
sub
push
int3
mov
repz
pop
cmpsl
xchg
add
decl
jg
inc
ds
push
push
fwait
gs
add
dec
bound
in
ud0
inc
dec
insl
mov
call
out
mov
cmp
sbbb
sbb
push
add
mov
shrl
inc
js
push
fsubr
xor
js
rorb
outsl
and
iret
stos
aad
jne
pop
mov
addb
mov
and
jmp
dec
and
add
out
and
push
movsb
or
sar
mov
xchg
mov
testb
fcmove
pop
ret
fdivs
sub
fiaddl
adc
test
xchg
mov
mov
mov
add
dec
inc
cmp
ss
fstps
mov
mov
stos
int3
imul
cld
std
leave
mov
mull
lret
fiaddl
aas
sub
sbb
push
inc
insb
and
fsubr
push
mov
dec
je
jle
lods
mov
ret
xor
dec
outsl
jecxz
mov
xchg
xchg
push
loop
fnstsw
jne
xor
icebp
neg
leave
rcrb
pop
jns
addl
int
sbb
mov
inc
pop
sarl
shll
mov
adc
jne
push
add
cmc
cmp
inc
test
xchg
and
leave
pop
cmc
imul
xor
sbb
cwtl
mov
jge
mov
mov
mov
int
lcall
xor
cmp
xlat
test
inc
push
mov
and
loopne
outsb
adcl
lds
add
push
int
inc
orb
cmp
popf
cmpsl
mov
mov
out
jge
hlt
pop
cmpsl
js
int3
pop
dec
sti
mov
out
push
aad
or
pop
mov
mov
cmpb
or
dec
insl
in
mov
movsb
filds
pop
stc
loop
test
ss
cs
stc
xchg
add
jp
outsl
sbb
pop
adc
push
or
jb
cld
in
pop
dec
stos
std
insl
icebp
loope
inc
test
push
mov
mov
sub
inc
mov
pop
lock
dec
pop
adc
inc
imul
rcl
icebp
pop
jmp
leave
icebp
dec
jmp
out
shlb
jp
mov
sub
scas
push
xor
int
inc
pop
bound
rcrb
mov
out
arpl
jmp
push
mov
addb
aas
xchg
dec
out
sub
fadds
push
scas
and
mov
adc
cmp
jecxz
pop
aad
lods
cmp
fldt
into
jb
push
sbb
imul
stos
adc
or
fmull
mov
xor
repz
add
fbld
sub
scas
jg
push
sbb
scas
icebp
in
mov
jns
push
test
sbb
pop
aad
xchg
out
add
rcrl
scas
data16
and
pop
sub
or
sub
jo
ljmp
dec
push
das
inc
lret
scas
insb
ret
dec
mov
in
pop
mov
jp
cwtl
jne
cli
cmp
xchg
mov
aad
test
jecxz
ss
stos
lahf
jmp
in
xor
cmpsl
int3
add
in
sbbb
cmp
xchg
adc
outsb
xor
fimull
lret
test
and
loop
imul
inc
and
mov
push
jmp
popf
pop
or
push
xor
push
sahf
push
imul
cmc
das
gs
push
aaa
pop
or
cli
lock
test
inc
repz
loop
adc
jnp
ljmp
test
inc
sbb
into
mov
sub
ja
fstp
lret
push
call
iret
cmp
movsl
inc
sar
push
dec
insb
rcrb
adc
xchg
das
mov
ja
and
lods
mov
shlb
hlt
cmp
insl
xchg
adc
inc
sahf
dec
shlb
cltd
nop
adcb
push
push
inc
pop
jmp
sub
push
adc
jne
pop
cmp
adcl
mov
mov
cmp
jo
bound
test
cmpsb
movsl
nop
leave
movsb
jbe,pn
pop
movsl
pop
adc
push
xchg
or
xlat
leave
xchg
xor
add
divb
jecxz
xor
in
lea
insb
mov
movsl
es
les
fmull
popa
sbb
and
int3
xchg
int
scas
cmc
popf
cmp
push
pop
imul
jnp
push
mov
gs
sbb
pop
pop
fsubrl
sub
aam
lock
add
xor
sub
bound
daa
jb
fmuls
leave
mov
mov
hlt
repz
loope
rolb
push
inc
inc
sbb
je
aam
ss
lahf
or
cmp
pop
out
jl
test
call
int3
in
fstpl
mov
xor
push
es
enter
pop
out
xchg
adc
rorb
inc
or
add
fwait
adc
dec
das
inc
rclb
sbb
add
xor
push
xchg
std
js
jae
fcoml
stc
jp
mov
std
sbb
jb
jge
jmp
push
out
aam
lods
fadd
add
jmp
xchg
and
sbb
push
cmpsb
out
push
inc
fldl
pop
loop
clc
fs
dec
mov
sbb
fstpl
arpl
jecxz
inc
add
xor
mov
int3
mov
dec
add
stos
hlt
leave
and
and
js
es
in
fists
or
ljmp
call
iret
sarb
xchg
das
mov
dec
xchg
xchg
pushf
test
fwait
in
cld
rcrl
xor
orb
sbb
sbb
imul
adc
xor
xchg
mov
sbb
aaa
jl
mov
in
add
sti
pop
push
mov
mov
pop
repz
cmp
ljmp
fdivrs
rolb
aad
fdivs
repz
lea
pop
in
push
pop
pop
scas
mov
lds
jbe
out
hlt
aas
shlb
sub
frstor
loope
mov
mov
roll
xchg
nop
stos
dec
xchg
insb
cmp
fisttpl
jns
daa
push
ja
or
cmp
in
dec
mov
into
push
cmpsl
push
sbb
subl
data16
in
fidivs
js
shl
and
les
adc
scas
xchg
push
ja
data16
adc
in
mov
jns
fidivs
test
imul
aas
ret
outsl
mov
sbb
scas
pushf
pop
push
lock
push
sub
shlb
xchg
ss
jp
push
xchg
movsb
lock
and
in
mov
jl
mov
push
je
jp
mov
sbb
movsl
xor
addb
mov
and
movsb
bound
scas
fs
and
gs
mov
xor
sbb
aaa
adc
icebp
ljmp
xchg
jnp
lods
mov
fcompl
xchg
inc
bound
xchg
pop
sub
adc
push
pop
sub
test
ja
jecxz
inc
ja
aas
push
outsl
lods
rcrl
mov
dec
ficompl
iret
sub
xchg
rol
add
mov
pop
cmp
shrb
pusha
xchg
mov
mov
imul
xchg
push
pop
out
adc
rolb
ljmp
cmpsl
cmp
mov
hlt
xor
sub
mov
popf
mov
mov
adc
adc
loope
out
int3
shll
sub
cmc
xor
inc
pop
std
fstps
pop
aas
dec
mov
push
lds
out
in
scas
sub
inc
dec
sahf
mov
cmpsb
pop
sbb
fcmove
xchg
stos
sub
pop
pop
xor
aam
pop
test
adc
or
xchg
insb
sbb
vpslld
daa
sub
mov
mov
inc
sbb
push
into
sti
test
addr16
push
mov
dec
cmp
inc
jecxz
inc
dec
sbb
xchg
inc
fstpl
sbb
sbb
push
jo
xor
outsb
dec
or
imulb
aad
aas
fs
cmp
aas
outsb
mov
shlb
loope
aad
or
outsb
xchg
test
ficoml
sarl
mov
add
movsl
aaa
lahf
xlat
enter
cld
push
xor
xchg
lret
fcmovnb
stos
mov
fidivl
add
cmp
push
and
out
xchg
cli
mov
cmpsl
xor
push
or
lea
int
add
or
je
addb
dec
inc
lods
addl
stos
add
and
add
sbb
pusha
adc
out
divl
hlt
les
or
and
inc
adc
add
js
mov
push
xchg
aaa
mov
push
outsl
dec
ljmp
mov
pop
das
lret
loopne
lcall
stos
gs
dec
push
xchg
dec
push
insb
sbb
pop
outsb
xor
mov
push
loope
clc
insb
lcall
movsl
je
mov
leave
mov
stc
les
out
sti
mov
in
sbb
lahf
cmpl
and
cmpsl
imul
push
mov
dec
rcrl
aaa
shrl
cmp
dec
cwtl
fs
enter
inc
cwtl
jbe
jb
push
shlb
pop
and
cli
sub
cmp
call
sahf
inc
int3
roll
popa
mov
pop
loope
sbb
mov
jge
jl
xor
pusha
jg
add
dec
inc
pop
sub
jne
sub
sub
lds
mov
psubusb
inc
movsb
out
jle
negb
cltd
jnp
pcmpeqw
dec
add
loop
jmp
mov
shll
mov
mov
or
cs
mov
cmc
insl
int3
bound
out
inc
sahf
das
int3
sbb
inc
jno
test
dec
mov
movsl
lock
lds
push
sahf
cli
sbb
int
and
jg
cmp
pop
aas
jecxz
daa
fistpll
push
pop
ss
popa
hlt
movsb
xchg
fs
rcrb
mov
and
xchg
outsl
or
je
add
aaa
cmp
sub
or
jle
xor
inc
dec
std
sbb
jo
or
fstpl
loop
out
xor
mov
shlb
mov
pop
xor
cs
loope
lods
adc
repz
jns
inc
sub
fldenv
lds
clc
jo
repz
in
mov
adc
popf
dec
cld
add
sub
push
inc
mov
jp
fisttpl
movsl
lret
pop
sarl
inc
cmp
test
call
pop
es
push
fdivrs
sahf
fnstenv
cltd
aaa
jmp
sahf
popf
loope
imul
int3
gs
jp
and
mov
sub
add
hlt
stc
fisubl
adc
xchg
add
sbb
dec
int3
call
jnp
mov
or
fistpll
xorl
es
icebp
fisttps
or
fwait
fs
jp
xchg
nop
cmp
int
les
outsl
mov
fs
and
mov
pusha
xchg
ljmp
bound
popa
inc
cmp
in
je
jg
mov
mov
mov
push
jmp
add
das
lods
pop
adcb
jp
mov
cwtl
dec
pop
sub
mov
cmpsb
hlt
inc
mov
outsl
mov
punpcklbw
imul
in
cld
mov
mov
shl
in
push
fwait
xor
in
in
daa
or
js
ret
bound
lahf
and
mov
push
mov
in
mov
test
cmp
out
add
outsl
push
inc
or
pop
mov
test
clc
xsavec
dec
and
xor
int3
fdivl
lods
scas
or
ret
negb
mov
or
lret
mov
pushf
sub
jno
repnz
push
dec
lea
std
push
mov
adc
xor
cs
arpl
adc
scas
sahf
push
or
xchg
and
xor
and
sbb
inc
je
repz
add
mov
rcll
je
mov
mov
push
cmp
stc
movsl
xchg
sarl
mov
inc
mov
jo
insl
xor
stc
insb
movsl
gs
push
mov
in
movsb
dec
movsl
testb
jb
xchg
jnp
sub
mov
lcall
test
js
lods
jno
mov
jb
test
fwait
xchg
dec
out
ds
cmp
lea
xchg
mov
mov
fadds
dec
push
xor
ljmp
pop
push
mov
and
push
iret
addr16
mov
and
jle
push
or
lods
outsl
mov
adc
and
push
call
repnz
into
pop
inc
ja
lret
cmc
mov
enter
ret
pop
bound
or
mov
lods
or
in
outsb
call
pusha
jns
push
outsb
out
pop
adc
and
lret
add
or
jbe
sub
call
jb
fsubs
mov
pusha
mov
or
dec
xlat
jl
out
add
and
xchg
out
addl
sub
mov
out
cmpsl
push
repnz
push
repz
mov
push
inc
sub
sahf
xlat
fsubs
add
xchg
add
inc
jecxz
clc
cld
jp
leave
imul
leave
inc
bound
test
mov
mov
mov
xchg
aas
lods
push
cmpb
jnp
cmpsl
arpl
lahf
jle
jne
adc
jg
dec
cmp
mov
outsl
mov
into
cli
dec
cmpsb
ss
sbb
xor
sbb
lock
jnp
push
dec
inc
fildl
shrl
sub
xor
sbb
jno
fs
pop
pop
mov
repnz
jb
sbb
push
mov
js
mov
sahf
adc
test
cltd
mov
xor
jnp
inc
outsb
cmpsb
test
loope
mov
cmp
push
es
inc
pop
inc
les
adc
cmp
popf
push
sbb
push
sbb
mov
cmpsl
dec
inc
dec
shl
or
jle
jmp
mov
in
jo
insb
jl
int3
xchg
adc
ud2
stos
lock
pop
sub
cmp
push
stos
sbb
xor
and
cmp
pop
movsb
xor
mov
loop
fwait
xor
fwait
xchg
fs
pop
jle
stos
icebp
or
cli
sbb
push
aaa
push
mov
leave
xor
xchg
mov
add
jb
pushf
push
insl
push
inc
sbb
jns
insb
aas
dec
mov
or
adc
aas
sbbl
mov
rclb
sbbb
cmpsb
inc
jle
scas
dec
sbb
pop
in
and
pop
pop
lret
lods
fisttpl
push
lods
es
repnz
sahf
lods
adc
aaa
fs
fiadds
push
shrl
out
aam
mov
xor
sub
and
mov
sub
lods
xchg
bound
cmp
icebp
xor
mov
xchg
mov
pop
faddp
scas
js
cli
test
push
testl
jno
sub
out
fs
dec
push
jmp
fisubrs
gs
sbb
mov
out
sbb
mov
mov
add
mov
pop
and
pop
push
cmp
mov
mov
cs
filds
xchg
and
adc
movsb
xlat
lods
pop
out
xorl
ret
scas
cmpsl
pushl
orb
insb
cmp
xchg
cmp
sbb
shl
jo
cmp
mov
cmpl
pop
movsl
mov
pop
dec
mov
jmp
xor
pop
test
sahf
lret
out
test
js
insl
mov
dec
aad
adcl
xor
andb
movsl
cli
ficomps
or
icebp
mov
xor
out
push
adc
stos
loope
push
xchg
pop
cltd
mov
out
push
pop
xchg
in
sub
cmp
fmull
ret
or
dec
lcall
cmp
cmpsl
sub
push
inc
xor
test
adc
and
out
mov
out
shl
ficompl
sbb
into
pop
cmp
sbb
in
or
lods
and
xchg
xor
daa
mov
ja
pop
fists
fcomip
es
cmp
jle
rclb
jbe
inc
mov
jae
shrb
into
les
mov
dec
bound
jbe
push
mov
xchg
shlb
inc
test
cmp
add
sbb
shrl
push
pop
cmp
pop
or
imul
fisubs
daa
jne
cmpsl
add
fsubrl
std
pusha
sahf
out
int
jle
inc
pop
dec
push
mov
not
jge
xchg
fcompl
add
mov
xlat
mov
imul
fists
jnp
jl
popf
jl
and
and
push
iret
jg
fsts
lret
dec
adc
mov
cmp
xchg
inc
sbb
pop
lret
xor
out
cmc
lret
sub
jmp
mov
xchg
mov
loopne
mov
xor
sub
vpsubusb
push
xchg
dec
out
xchg
cmpsl
adc
push
int3
mov
xchg
mov
dec
nop
or
rorb
xor
xchg
lret
dec
mov
movsl
pop
jle
jb
shll
rclb
pop
or
lock
repz
ja
xchg
mov
mov
js
je
inc
je
push
mov
je
into
dec
sub
shl
loopne
repnz
xor
cmc
mov
fists
ss
add
dec
daa
sub
ret
adc
lods
xchg
pop
inc
push
cmp
fwait
mov
mov
push
outsb
pushf
push
lahf
and
jo
mov
jg
sbbb
in
mov
data16
push
in
mov
cmp
sub
adc
add
stos
pop
js
sbb
outsl
lret
pop
mov
jl
in
outsb
xor
sub
or
mov
cmp
stc
pop
xlat
mov
or
jns
enter
imul
xor
cmp
or
or
mov
outsb
cmp
sbb
xchg
fs
push
loope
jbe
movsl
clc
les
push
aas
mov
dec
pop
fmulp
repz
inc
mov
sub
pop
inc
jnp
fbstp
mov
imul
test
cli
push
add
pop
andb
fmull
xor
idiv
mov
jae
sbb
push
pop
test
loopne
jb
test
data16
sbb
xchg
popf
jne
fadds
stos
jmp
fwait
movsb
loope
les
inc
xchg
xchg
sti
aaa
cmpb
punpckhwd
sbbb
test
cmp
enter
sbb
shl
push
adc
mov
pop
hlt
sbb
mov
sub
jnp
cltd
lds
mov
push
leave
sti
and
int
lods
rcrl
shl
std
jnp
mov
mov
mov
mov
sub
decl
rolb
adc
inc
sub
mov
add
inc
incl
adc
mov
and
stos
lds
xor
lock
xor
scas
or
imul
dec
imul
popf
rcrl
mov
adc
xchg
add
mov
xlat
fcmovnu
shrl
mov
notl
scas
dec
imul
cmovne
ss
or
outsb
mov
imul
popa
cmp
adc
mov
jne
shrl
pop
jne
les
daa
mov
stos
loop
cmc
inc
fdivs
sub
xchg
push
jp
xlat
out
cld
pop
out
aaa
pop
sub
leave
xor
rorl
pop
xlat
icebp
adc
imul
aad
ret
sbb
cmpsb
jg
xchg
into
mov
scas
stc
xchg
scas
in
xchg
or
loopne
mov
or
inc
shlb
cmpl
enter
cmp
push
in
cltd
xor
sub
mov
jnp
aaa
mov
cmp
testb
push
popa
leave
pop
pop
dec
and
jg
xchg
test
and
lods
sub
mov
ss
scas
movsl
add
adc
scas
ss
cwtl
xor
mov
out
sub
adc
pop
test
or
cmpb
push
jge
lret
mov
or
inc
flds
xchg
sbb
cmpl
fwait
xchg
cmp
and
repz
dec
addw
xor
xchg
in
lret
xchg
out
sbb
fldenv
xchg
jb
sarb
add
mov
loop
dec
out
mov
adc
cltd
es
cmpsl
inc
cld
mov
pop
mov
xchg
push
sarl
je
in
imul
pop
mov
jo
mov
mov
jbe
and
add
jg
popf
sti
stos
push
push
stos
sti
mov
inc
xlat
mov
sub
imul
and
ljmp
jno
jle
mov
push
mov
mov
jb
and
adc
addr16
sahf
push
sub
fldl
rorl
inc
mov
into
nop
pop
inc
mov
loopne
push
or
jae
xchg
sub
sbbb
daa
movsb
xor
and
inc
rorb
sub
out
and
add
cmpsl
mov
in
into
cmpb
bound
pop
dec
adc
jbe
dec
stos
out
lds
jmp
jmp
xor
mov
sbb
addr16
inc
fs
jb
lret
out
pop
dec
icebp
daa
fs
je
cld
out
sbb
pushf
mov
jnp
nop
mov
push
jmp
movsb
sub
push
mov
xor
aad
sub
loope
xor
pop
adc
adc
pop
nop
inc
or
out
jbe
inc
stos
jp
push
mov
pop
negl
add
add
ja
aas
into
jb
adc
or
es
jge
pusha
dec
testb
out
fwait
popf
and
jo
dec
mov
daa
push
push
sub
mov
xchg
push
jle
test
mov
orb
leave
cs
jne
mov
jae
es
out
jae
push
out
mov
pop
test
mov
adc
pop
inc
add
jae
popa
sbbb
je
jnp
mov
aad
sub
pop
shlb
cli
pushf
fsubrs
sub
popa
addr16
xor
mov
gs
cmp
subl
xor
ljmp
dec
hlt
pop
dec
mov
cmp
lods
mov
xchg
xchg
notb
out
inc
cmp
idivb
ret
inc
pop
xor
inc
fisttpl
dec
jns
cltd
adc
xor
popa
add
out
lret
shrl
pushf
cmpsl
sub
jo
test
idiv
pop
push
adc
bound
int
xchg
xchg
iret
imul
mov
jb
stos
fs
fsubl
sbb
mov
jmp
mov
inc
out
jecxz
dec
ljmp
cli
int
std
or
push
jl
scas
push
jne
cmpsb
sbb
movl
dec
mov
bound
popa
in
dec
movsl
xor
jnp
and
adc
je
inc
push
jae
fmuls
fs
mov
out
or
scas
pop
scas
sub
lock
loope
mov
ljmp
in
jae
jbe
adc
lcall
insb
pop
fs
xor
add
inc
sarb
add
mov
xchg
loop
cmpsl
test
std
fdivrs
test
stc
ds
lods
jno
sbb
mov
mov
ljmp
adc
popf
icebp
mov
sbb
lods
or
div
mov
loope
in
xchg
pop
xchg
sarl
notl
mov
loop
cwtl
movsl
fisttpll
xchg
insl
stc
add
lret
gs
inc
pop
add
mov
outsb
fstpl
mov
push
rolb
cmpsb
mov
adc
shll
sbb
outsb
mov
xor
push
mov
inc
cmp
subl
xchg
scas
mov
rorl
jmp
fists
imul
in
or
sub
fs
insb
daa
test
lods
cmpsl
imull
pop
dec
lock
mov
mov
les
and
push
lods
xor
inc
push
adc
imul
repnz
ja
mov
mov
mov
mov
mov
and
addr16
mov
xorb
xor
pop
sbb
push
push
rcrb
es
fcoms
jns
mov
xor
shrb
fcoms
jle
sbb
push
sbb
mov
push
idivl
lea
jno
movsb
jne
adc
outsb
jne
cmpsl
loopne
mov
hlt
iret
and
dec
in
dec
in
xchg
cmp
aas
or
int3
mov
and
sub
inc
repz
std
into
aas
dec
movsb
or
lods
xchg
or
data16
cmp
imul
add
sub
jle
push
mov
jnp
inc
pushf
ja
ljmp
shrb
xchg
mov
and
clc
lock
pop
addl
sahf
movsl
jnp
cli
xlat
mov
mov
cmc
or
push
stos
lret
inc
out
jecxz
jo
dec
fadd
pop
pop
xor
and
or
pop
fisttpll
divb
and
jecxz
jg
mov
and
push
aaa
lock
ja
ds
call
push
repnz
repz
insl
mov
adc
test
mov
fsubrs
xor
test
jns
cmp
pushf
push
bound
mov
outsl
xor
movsb
call
bound
cltd
or
cli
mov
ftst
clc
inc
sarb
lcall
sub
lea
push
mov
popa
mov
dec
cmp
mov
or
pop
pop
dec
pop
ljmp
enter
loope
xor
outsb
add
xor
dec
notl
rcrb
jg
es
and
arpl
lret
es
xchg
idiv
sub
push
sbb
and
out
sub
jb
and
nop
mov
mov
pop
mov
dec
mov
ss
cmp
jmp
clc
int3
test
adc
mov
sub
lods
ljmp
xchg
dec
iret
jnp
pop
and
adc
mov
pop
int
and
inc
imulb
je
push
rorb
add
cmp
jg
xchg
xorb
cmp
dec
xor
in
pop
mov
cmp
sub
xchg
add
push
movb
add
pop
je
push
xor
int
cmp
lahf
jno
ficompl
xor
cld
and
popf
fistpll
cmp
pop
sti
out
mov
out
jl
cmp
xchg
stos
aam
push
pushf
cmpsb
jmp
push
ljmp
lahf
nop
aaa
push
mov
mov
inc
fildll
cmp
int
pop
lods
jns
pop
int3
adc
or
shlb
test
add
dec
push
mov
mov
mov
pop
and
leave
dec
aam
aas
xlat
ret
mov
int
xchg
je
orb
pop
and
push
push
jecxz
push
lods
push
add
scas
outsl
test
rcrl
sbb
mov
xchg
xorb
js
movsb
push
add
mov
std
push
inc
jle
dec
mov
push
cmpsb
scas
push
xor
xor
cmp
mov
sbb
add
in
mov
pop
xchg
jb
sbb
inc
cmp
xchg
je
pop
mov
cmp
add
jge
or
test
nop
scas
or
mov
jne
pop
pop
lods
push
mov
inc
push
out
movsb
mov
jg
push
xchg
outsl
or
lahf
loopne
xor
dec
popf
cmp
push
aas
mov
pop
or
hlt
sbb
mov
dec
mov
aam
mov
push
adc
sti
int3
int
es
pop
int
and
sbb
or
dec
push
xor
jne
adc
xor
sbb
sub
jmp
fs
mov
push
sbb
inc
cld
rcrl
inc
jge
push
xorb
inc
adc
rorb
int
push
repnz
inc
jl
gs
pop
stos
movsb
fdivp
outsb
lea
xchg
insl
push
mov
adcl
jns
mov
test
aam
daa
scas
pop
rolb
inc
dec
loopne
incl
dec
mov
jnp
dec
cmp
pop
add
mov
out
push
pop
sbb
mov
test
xchg
incb
dec
int3
int
ja
jge
ss
jae
or
pop
repz
xchg
adc
inc
xor
add
mov
aad
xchg
xor
fsts
or
jg
jae,pn
inc
lock
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
movsb
mov
jg
pusha
addl
loope
push
adc
xor
in
scas
das
mov
scas
dec
pop
inc
mov
xchg
dec
xchg
add
xor
xor
andb
sub
ficompl
int3
ret
icebp
sbb
call
scas
push
pop
push
mov
in
lea
lcall
aad
and
inc
aam
sub
xor
xchg
rcll
fiaddl
sub
adc
stc
sbb
adc
xchg
inc
addr16
scas
sbbb
sbb
jbe
add
push
out
mov
mov
jne
mov
pextrw
push
pop
jnp
mov
mov
pop
xchg
rolb
sbbb
and
xchg
in
into
in
lods
lret
inc
pop
or
push
mov
test
and
int3
scas
pusha
push
popa
cmp
mov
imul
xchg
cmp
ja
xor
sub
push
out
inc
jmp
dec
cmp
fildl
iret
aad
out
lock
mov
insb
or
int3
stc
xchg
xor
jp
adc
ds
mov
dec
cmp
insl
les
mov
pop
into
xor
cmp
sub
xlat
or
cli
lods
jmp
lret
xchg
loope
mov
outsb
xchg
jne
and
xorl
and
adc
mov
aaa
testb
xchg
adc
mov
xor
movsl
int
ret
push
cmp
jl
jl
jmp
outsb
sbb
fists
mov
xchg
mov
out
xor
insl
cmp
mov
fistps
lcall
add
aad
inc
cmpsl
xor
rcll
push
not
pop
inc
and
xchg
dec
xchg
idiv
push
inc
lods
repz
jnp
out
push
fs
rorb
jp
add
and
pop
xchg
testl
mov
adc
lods
nop
fdivl
cmp
lea
loope
inc
bound
ds
dec
shr
jne
add
add
lret
push
lcall
ja
imul
xor
imul
loopne
loope
push
and
fidivs
scas
cmpsl
outsb
test
clc
pop
hlt
shll
aad
cmp
mov
mov
in
leave
aam
mov
mov
push
pop
bound
sub
gs
xchg
sbb
cwtl
es
mov
dec
pop
jbe
mov
nop
fs
std
leave
jns
and
les
and
mov
aaa
mov
pop
inc
stc
gs
mov
pop
adc
inc
test
mov
mov
out
or
xchg
cmp
int
daa
adc
ret
mov
xor
and
bound
pop
into
push
shl
insl
pushf
test
inc
jmp
inc
jne
jbe
jbe
push
dec
sbb
and
fidivrl
jno
lods
dec
jb
nop
pop
inc
hlt
adc
aam
pop
mov
insb
inc
out
mov
popa
sbb
jle
mov
push
lds
xor
rorb
clc
sbb
test
repz
add
jno
scas
mov
mov
icebp
jbe
xlat
insl
xchg
data16
mov
repz
cmp
push
and
jne
mov
jns
jl
ja
addl
aad
mov
jge
sub
out
mov
jg
in
and
xlat
negl
or
add
cltd
and
repnz
mov
cmp
mov
clc
jle
out
inc
scas
jae
inc
outsb
lcall
stc
or
inc
popa
outsb
scas
stc
nop
xlat
shl
mov
mov
in
imul
inc
dec
jo
test
mov
cmp
mov
lret
inc
adc
fcmovnu
jge
or
shl
loopne
repz
and
ret
push
add
pop
sbb
xor
dec
and
out
pop
lea
jne
xchg
ja
xlat
xchg
pop
fsubrl
jge
push
and
mov
add
test
testb
sahf
xchg
mov
sub
adc
imul
xchg
out
sbb
loop
push
das
cltd
cwtl
test
cld
cmp
sub
sub
sub
dec
out
in
dec
scas
xor
pop
pop
push
dec
in
add
fists
jmp
pop
push
fidivrs
aaa
xchg
aaa
mov
xchg
sti
in
xor
lods
lds
es
adc
sub
and
add
and
cmc
addr16
dec
hlt
adc
jne
add
mov
adc
adc
mov
js
in
int
in
notl
push
data16
ffree
pusha
sar
xchg
jno
dec
lea
mov
jl
aad
mov
shrl
aad
xor
jge
cwtl
nop
push
mov
mov
imul
repz
movsb
mov
mov
jne
add
mov
jl
cli
mov
sbb
mov
mov
rcr
rclb
sbb
add
mov
and
xchg
enter
push
lea
cld
hlt
jge
push
into
mov
jp
stc
stos
add
roll
xchg
mov
or
mulb
int3
lods
adc
push
push
scas
dec
jmp
mov
mov
in
pop
je
cmp
clc
lret
in
adc
or
enter
lret
and
imul
push
lods
in
xchg
dec
cmp
mov
sub
sahf
inc
fld
fistpl
mov
jmp
rorb
pop
and
shlb
daa
aam
xchg
lods
jno
jge
push
outsb
sbb
fs
and
testl
int3
in
js
xor
outsl
fs
xchg
mov
lea
cmp
popa
cmpsb
lret
shll
mov
inc
sahf
push
pop
js
out
hlt
aam
push
and
inc
mov
imul
fbld
in
sbb
imul
adc
cwtl
dec
fsubrs
jns
cltd
cli
mov
add
int
xchg
xlat
scas
clc
push
stos
xchg
sti
lds
fst
clc
loopne
jl
xchg
jg
sbb
sbb
jmp
in
int3
jb
cmp
scas
add
add
push
test
sub
xchg
scas
inc
rcrb
mov
jge
loope
mov
std
arpl
pop
inc
add
xor
pop
mov
sti
or
mov
in
sub
out
push
mov
lret
cmp
push
test
lods
cld
inc
stos
sbb
js
sbb
std
les
jnp
lods
repz
clc
nop
cmp
imul
push
mov
cld
in
xor
lret
add
lret
jno
std
pop
out
mov
test
lret
mov
mov
test
shrb
xor
cwtl
scas
in
outsl
adc
jl
std
gs
movl
bound
ficoms
scas
je
test
pop
stos
mov
mov
ffreep
add
test
cld
andb
add
lock
cli
loope
popf
add
mov
and
imul
imul
sub
pop
mov
mov
xor
movsb
adcl
into
adc
or
inc
mov
pop
and
cmp
inc
xchg
fwait
dec
and
test
lret
repz
in
icebp
int3
adc
aad
loope
sbb
sub
sbb
xchg
es
dec
and
inc
loopne
jmp
fldl
mov
faddl
cmp
das
cmp
xchg
or
xchg
into
pop
inc
mov
xor
xor
repnz
rcrb
outsl
lcall
out
and
lahf
js
sbb
mov
cli
xor
mov
mov
lea
inc
inc
sbb
sbb
divl
sti
fisttpl
mov
lea
jno
loope
pop
and
outsb
inc
mov
inc
jnp
prefetchwt1
or
mov
push
cmpb
dec
jne
add
or
in
stos
sub
and
add
push
xor
push
int
jp
stc
mul
int3
cld
pop
pop
fadd
cmp
push
mov
sbb
push
pop
roll
sbb
jbe
sbb
sub
rcl
inc
and
dec
loop
in
add
mov
popf
cmp
call
aas
jne
inc
rcr
pushf
mov
mov
mov
fstpt
jp
dec
xchg
imul
xchg
sub
lcall
gs
push
mov
orl
pop
xor
arpl
lods
mov
popa
insl
aaa
jns
adc
push
int
dec
je
aad
je
ja
bound
jmp
lds
jg
movsl
jle
sbb
add
cmp
ljmp
ss
mov
push
sbbb
cmp
jnp
xor
mov
jnp
cmp
cwtl
sbb
sbb
xchg
imul
stc
clc
lods
fs
sti
daa
and
cmp
fdivs
fwait
bound
pop
in
add
and
fisttpl
sahf
mov
loop
into
lods
mov
aas
mov
push
mov
pop
xlat
mov
lret
jno
mov
lds
xchg
sub
sbb
xchg
mov
rolb
lods
lret
rcrl
push
cs
sbb
fsub
test
shl
out
adc
or
mov
add
sbb
or
cmp
push
add
je
arpl
or
push
mov
add
fldt
jge
push
mov
in
test
mov
in
or
loope
xchg
jno
jecxz
iret
adc
xchg
mov
jno
mov
enter
adc
add
dec
sarl
ds
mov
mov
sub
xchg
mov
xchg
setbe
jp
addr16
inc
dec
ficoms
lea
push
lret
push
fdiv
popf
cmp
pop
jno
xor
outsl
rcrl
push
jbe
pushf
fisubrs
pop
sub
xchg
cmp
test
mov
push
fmull
jp
lea
xchg
cmc
call
loopne,pt
test
lods
mov
rcl
sbb
xchg
push
loopne
les
jge
jmp
inc
sub
push
lahf
sahf
ret
jge
addr16
addr16
repnz
loope
push
pop
sbb
lahf
insb
pop
pop
xchg
mov
js
insb
aas
arpl
popa
cmp
xchg
lahf
js
mulb
jns
js
sbb
jae
push
pop
pop
test
mov
aam
mov
pop
sbb
arpl
pop
push
stos
imul
fstpl
cmc
inc
dec
xchg
cmp
arpl
mov
imul
add
fldt
mov
fisttpl
movsb
jmp
and
call
xchg
xchg
mov
fs
xcrypt-ofb
cmpsl
test
pop
jns
push
outsl
dec
mov
lds
lcallw
mov
scas
in
popa
jle
inc
inc
inc
fiadds
imul
mov
imul
testb
jge
lret
jge
dec
push
mov
xor
dec
lret
fwait
dec
ds
xor
int3
fdivrs
fs
sbb
mov
out
inc
push
pop
add
ja
sti
dec
sbb
jg
sahf
mov
cmp
xchg
or
pushf
outsl
pop
pcmpgtw
xlat
mov
add
addr16
ljmp
or
fimull
and
push
fisubrl
adc
notl
aaa
fcompl
jle
and
and
cs
rcr
jns
data16
roll
popa
adc
imul
int3
sbb
push
in
fmull
push
lds
mov
push
popf
int
and
repz
add
call
rorb
mov
in
mov
leave
rorb
mov
sbbl
test
dec
mov
mov
sti
loop
hlt
sub
lret
shlb
fistl
xchg
cmp
sub
mov
ficoms
popa
xchg
lds
fmulp
sti
in
out
scas
mov
mov
jmp
sub
xchg
fs
ja
cmpsl
push
adc
fdivl
addr16
test
sub
add
mov
cli
aaa
jp
cmp
fcoms
rolb
fmull
cmpsl
jnp
jo
push
sbb
sbb
bound
icebp
test
in
je
dec
and
cmp
pushf
das
xor
mov
adc
xor
rol
mov
in
pop
cmp
repnz
mov
ljmp
aad
mov
sbb
sub
cwtl
sub
push
and
sbb
cmpsl
inc
lret
xchg
fwait
xor
jbe
xchg
call
xor
movl
jbe
jle
imul
mov
aad
out
ja
push
fs
gs
mov
sahf
ret
shlb
lods
pop
jae
or
or
adc
add
push
adc
mov
mov
imul
sbb
rorb
lock
sub
mov
push
cli
sbb
call
inc
in
push
xor
int
mov
in
iret
loop
and
pop
mov
repz
or
mov
hlt
and
scas
mov
cmp
stos
mov
dec
sub
ja
insb
cmpsb
dec
mov
out
push
aas
adc
xchg
aaa
test
push
ret
xchg
mov
or
in
sbb
fstp
or
mulb
test
testb
jmp
repnz
inc
aad
pop
cmp
ljmp
orl
jae
imul
or
repnz
mov
add
scas
loop
lahf
pop
mov
pop
xchg
minps
or
add
jge
mov
or
and
add
inc
pop
push
pop
rorb
cmp
and
fcmovne
les
loope
mov
xor
lret
cmp
dec
mov
xchg
xchg
lds
testl
mov
inc
and
xchg
add
dec
dec
fadds
cs
inc
xchg
and
pop
adc
arpl
xor
sahf
jmp
mov
dec
fsubl
xchg
cltd
pushf
sub
adcb
cmp
in
dec
xor
xorb
push
addr16
fwait
adc
push
sub
clc
cmp
stos
fnstenv
addr16
xchg
fcmovb
mov
jne
test
test
insb
add
and
scas
sar
jno
and
dec
jecxz
rcl
add
ljmp
inc
in
lds
dec
mov
sbb
or
adc
cmp
lret
roll
jne
pushf
rclb
lds
das
jne
mov
fwait
jg
push
sub
sbb
pop
filds
push
sarb
clc
test
adc
and
jo
jne
jbe
pop
jns
pusha
jne
mov
or
pushf
xchg
adc
sahf
xchg
xchg
fwait
push
mov
ret
xor
push
or
push
inc
push
cld
jbe
ss
sub
rol
adc
push
arpl
pop
shll
notl
sbb
or
lock
stos
dec
mov
jno
fiaddl
mov
popa
outsb
dec
mov
sbb
dec
sub
stos
xor
push
addps
dec
movsb
lret
scas
dec
jmp
lea
pusha
dec
arpl
push
push
dec
sbb
push
and
jo
pop
popa
je
or
lods
out
scas
cld
dec
aas
mov
pop
xchg
sub
js
push
and
mov
ds
in
or
es
push
stc
out
mov
or
pushf
or
fdivl
mov
inc
adc
daa
stos
pop
mov
jne
mov
pusha
das
icebp
sahf
push
xchg
fsub
shlb
pop
push
imul
sub
bound
xchg
add
or
jns
mov
arpl
sahf
stos
stos
push
mov
lds
push
pop
or
mov
inc
dec
sbb
jae,pt
out
addb
fsubrp
sbb
dec
test
addr16
aas
mov
mov
mov
sbb
lahf
jns
adc
flds
ret
xlat
data16
dec
inc
scas
and
push
ret
cmpsb
lcall
mov
ss
enter
hlt
xchg
ret
fstl
push
cltd
loope
cmp
aad
pusha
mov
out
or
out
fnstsw
push
add
mov
mov
mov
lods
inc
jl
nop
imul
test
dec
mov
and
and
lock
pop
xchg
fcmove
jns
and
in
sbb
js
jl
fistpll
dec
outsl
or
adc
dec
push
ljmp
test
dec
pop
jno
and
imul
mov
sti
insl
jo
popl
out
cmp
dec
mov
sub
scas
cmp
mov
decb
mov
stc
nop
aas
or
negl
mov
cmp
xor
add
fwait
mov
out
mov
cld
cwtl
add
pusha
scas
shll
ftst
jbe
lcall
rcrl
xor
xor
push
pop
ret
mov
adc
push
or
or
in
fwait
mov
sub
jmp
lret
mov
cmp
jne,pt
sub
jns
mov
je
popa
jle
inc
push
out
jb
mov
mov
xchg
push
sub
pop
movsb
repz
insl
dec
pop
jg
out
push
js
mov
cmp
stc
xor
and
or
fneni(8087
fiadds
pop
jp
adc
loope
sbb
push
xchg
into
je
outsl
add
repz
call
push
push
xor
testl
leave
lods
mov
jae
adc
dec
stc
dec
jne
or
scas
xchg
out
sbb
inc
ret
int
mov
fists
mov
sub
lea
stos
or
jmp
mov
push
xor
add
mov
cltd
arpl
call
sbb
mov
xor
add
stos
loopne
ficoms
pop
cld
stc
ss
add
frstor
mov
add
aaa
aam
scas
aam
mov
push
daa
or
adc
in
jae
xchg
mov
or
into
leave
mov
mov
gs
stc
movsb
and
mov
push
ror
jbe
mov
repnz
repz
xchg
sti
arpl
xchg
rcl
pop
pop
xor
mov
call
cmp
xor
add
push
add
std
or
movl
mov
inc
dec
mov
sbb
lods
and
mov
inc
push
pop
sbb
imul
or
jne
repz
test
cs
aad
mov
aaa
negl
and
cmp
cmp
cld
cmp
mov
push
ja
loop
cltd
inc
sub
insb
pop
cmpsb
enter
push
xor
pop
ja
dec
sub
and
in
lods
cmp
sub
loopne
gs
xor
jne
add
in
daa
jmp
clc
sbb
push
fadds
hlt
push
cmp
dec
inc
jne
sbb
in
int3
mov
aad
xchg
inc
mov
pop
xchg
test
xor
loope
cld
dec
inc
loop
loop
sub
xchg
lahf
sbb
lret
cmp
xlat
mov
rolb
dec
loopne
pop
jmp
mov
mov
xchg
xor
popf
test
pusha
cmp
xor
dec
lret
cs
jne
sbb
mov
sub
jmp
test
or
ret
fsubl
stc
cs
xor
sub
cltd
loop
mov
loop
notb
inc
mov
inc
or
xchg
loop
pop
lock
xor
push
mov
fdiv
jnp
push
sarb
pop
adc
ficompl
ljmp
push
xor
clc
mov
jl
add
pop
mov
movsl
stos
push
les
push
xor
dec
in
out
sub
mov
jl
out
and
sbb
fdivl
daa
shl
mov
push
cld
fstps
jne
stos
repnz
mov
mov
dec
pop
sbb
sbb
gs
cmp
daa
mov
std
pop
mov
rclb
jl
xchg
imul
cltd
cmp
ret
ret
inc
pop
lret
or
jne
test
cmp
mov
inc
test
es
in
mov
lea
dec
out
cld
stos
hlt
aaa
mov
and
adc
outsl
push
ljmp
int
and
scas
mov
pop
xchg
push
mov
out
inc
dec
adc
out
ret
fstl
shrl
jb
add
outsb
test
sbb
rcll
mov
test
cli
or
nop
fisubs
add
push
or
popa
repnz
je
add
rcrl
daa
and
divb
mov
outsb
ret
lret
mov
sub
rcl
daa
cltd
xchg
loop
adc
jmp
push
repz
xchg
mov
pop
inc
cmp
and
inc
imul
push
add
pop
mov
aad
push
outsl
rcrl
cmp
negb
adc
mov
mov
inc
sahf
xchg
inc
inc
push
adc
mov
jae
xchg
mov
mov
jnp
out
cs
mov
push
fnclex
in
inc
lods
xchg
xchg
pop
dec
push
add
sti
dec
pop
fiadds
and
lods
out
cmp
seta
inc
mov
inc
popf
mov
dec
bound
pop
outsb
sbb
aas
mov
ja
fnsave
push
sbb
mov
sbb
inc
dec
int3
sub
adc
cltd
aad
jae
xor
cmp
jns
pop
sbb
int3
popf
push
in
push
rolb
fcompl
jbe
jge
and
mov
mov
neg
jo
iret
xchg
in
stc
hlt
cli
in
cmpsl
xchg
test
push
bnd
divl
mov
inc
dec
jg
inc
lret
inc
dec
das
cmp
push
mov
mov
xchg
in
test
lods
inc
lahf
sbb
xor
dec
sub
push
jmp
lcall
loopne
dec
shll
pop
aaa
sti
or
aad
int
xchg
repz
fcmovnb
or
push
aam
in
mov
add
jl
mov
jbe
jne
and
adc
or
ds
sbb
dec
test
xchg
std
mov
mov
pop
adc
cmpsb
lret
stos
mov
jmp
or
pusha
xor
int3
sbb
jge
imul
lret
adc
push
pop
add
fsubs
mov
and
mov
das
xor
dec
xor
or
aad
pop
pop
movsb
jbe
std
xchg
and
mov
cmp
mov
aaa
lahf
xchg
mov
out
mov
jbe
jae
jo
xor
and
sbb
scas
sbb
in
out
test
lea
push
jge
int
ficompl
push
lahf
xchg
push
jg
pop
jb
or
pop
adc
xchg
push
and
pop
add
sti
inc
leave
push
loop
sub
jae
rcll
jno
dec
stc
leave
sahf
and
aam
sar
stos
mov
xchg
dec
xor
dec
mov
mov
push
pusha
scas
cmpsl
mov
push
jae
fsubrs
bnd
and
sub
clc
mov
xor
mov
hlt
stos
popa
cmp
jb
mov
out
dec
xchg
mov
int3
and
pop
push
shll
rol
imul
mov
jnp
test
nop
jge
cs
sub
mov
mov
hlt
je
mov
call
aas
int3
repz
and
sbb
mov
push
dec
insl
and
lcall
int
repnz
and
inc
push
scas
jle
mov
std
scas
insl
icebp
enter
pop
mov
xchg
pop
sarl
cmp
popf
lret
mov
mov
cmp
dec
adc
sbbb
fwait
jae
add
mov
fnstcw
pop
lds
and
jno
cmp
hlt
and
pop
data16
fiadds
sbb
sahf
add
pop
in
std
ja
dec
pop
mov
aam
sbb
cld
out
xchg
pop
cli
inc
rcrl
int
mov
iret
cs
sub
add
pop
fnstsw
add
in
xor
mov
push
rcll
cld
mov
jns
inc
test
and
xlat
add
xor
or
icebp
repz
dec
clc
out
mov
repnz
test
xchg
popa
ja
in
xor
stos
adc
das
jnp
das
je
sbb
bnd
sbb
sub
pop
popf
sbb
out
or
ret
or
and
dec
xchg
out
sbb
xchg
inc
insb
leave
dec
add
fnstcw
jle
xchg
lods
pusha
jmp
jp
push
aaa
fstpt
fwait
in
fwait
das
sub
lret
shll
push
adc
incb
jecxz
insl
pop
cmp
push
mov
lock
adc
xor
repz
cmp
outsb
mov
cli
dec
cwtl
pushf
lret
jbe
pop
sub
xlat
jl
push
sub
and
test
les
in
test
mov
jns
cmp
leave
pop
movsb
dec
repz
xor
into
cmp
call
pusha
or
fistpl
push
xor
nop
sub
aam
pop
pop
mov
fcoms
jmp
dec
rolb
xlat
add
daa
out
dec
and
mov
pop
lods
cmp
push
mov
dec
loope
fsubr
cld
aad
mov
cwtl
imul
xor
shrb
lret
imul
sbb
adc
clc
les
lahf
cmp
loopne
inc
neg
inc
cmpsl
add
orb
jge
sbb
cmc
in
aaa
jle
bound
icebp
pushw
pop
xchg
scas
xchg
insb
mov
mov
mov
or
cmp
outsl
outsl
int
sbbl
mov
mov
add
in
pop
adc
mov
xlat
inc
adc
nop
xor
dec
jns
push
dec
adc
insl
add
dec
and
ret
lods
cltd
lds
pop
add
lods
push
in
mov
or
and
pop
cmp
mov
mov
xchg
adc
adc
adc
repnz
push
int3
xor
mov
aaa
xor
xchg
or
ret
inc
xor
in
ficompl
mov
inc
adcb
cltd
pop
rcr
nop
pop
pop
jne
fdivl
arpl
jno
or
lcall
sub
stos
loop
outsl
adc
and
mov
pop
sbb
movsb
sub
lods
pop
jg
sub
sbb
push
roll
mov
adc
test
jnp
add
cmpsl
xor
mov
lahf
xor
push
dec
pop
push
adc
xor
shll
dec
sahf
adc
push
push
lret
pop
and
jbe
dec
mov
xor
rol
mov
sbb
daa
out
stos
shrl
cmpsb
shlb
sbbl
lea
shlb
mov
repnz
call
add
cmp
movsb
inc
add
mov
es
cmp
in
or
les
xchg
and
adc
sub
test
nop
nop
or
imul
testl
push
xor
pop
outsb
hlt
imul
jp
movsb
movsb
xchg
or
ljmp
adc
mov
in
dec
dec
add
pop
test
sub
shr
in
and
push
fs
int3
and
lea
dec
lds
call
out
jmp
mov
enter
mov
push
stos
cmpsb
aaa
test
and
sbb
imul
in
imul
loope
mov
push
jle
daa
fstps
lods
push
js
pminsw
out
leave
cld
push
jecxz
dec
cmp
negl
mov
mov
outsl
fidivl
cld
ja
cmpsb
bound
pmovmskb
mov
es
jne
add
stos
and
or
ja
cmp
imul
ret
pop
jge
jb
ret
mov
jno
testb
arpl
fsubrl
cltd
cmp
push
addr16
stos
adc
bound
adc
imul
lret
push
dec
or
movsb
and
scas
popf
lock
popa
push
scas
or
xorb
and
mov
adc
into
in
fsubrs
sub
cmp
xchg
lods
pop
mov
and
out
pop
lcall
lock
fadds
popf
xchg
add
dec
xor
pusha
sub
mov
int
loope
out
call
sbbb
iret
sahf
mov
inc
mov
cwtl
push
gs
fwait
cmp
xor
shll
les
outsb
or
test
ds
int3
and
icebp
test
inc
dec
data16
cmpsl
and
mov
xchg
aam
fbstp
repz
mov
mov
push
faddl
mov
outsl
jle
fsubrl
sbb
rcrl
push
jp
cs
mov
aas
and
push
inc
mov
test
pop
lret
push
pop
dec
push
bnd
fcom
repnz
mov
sbb
insl
inc
mov
inc
push
stos
sub
inc
ja
pop
adc
daa
push
mov
lds
loop
and
sti
jl
inc
std
cmp
jmp
dec
mov
cmp
out
fnstsw
into
pop
push
enter
rcrl
xor
xor
sahf
cmp
sub
dec
xor
test
adc
call
in
jne
sarb
pop
pusha
cmpsl
pop
jbe
jno
sbb
pusha
cmpsl
cmc
push
cli
and
sbb
sbb
inc
jmp
lods
sbb
push
sbb
add
mov
sbb
das
aaa
scas
iret
mull
xchg
ret
xchg
dec
xor
add
cmpsl
mov
pop
sarb
imul
pop
xor
in
dec
mov
inc
insb
notb
out
xor
mov
mov
xor
test
shl
lods
test
les
cmp
mov
fimuls
pop
lods
jbe
dec
jo
and
int3
sub
negb
int
or
cmp
push
rorb
mov
movsl
out
adc
lods
xor
in
inc
pop
add
lret
pop
xor
in
roll
or
sbb
in
adc
ss
sub
jp
or
addr16
jl
repnz
call
push
fstpt
sbb
and
mov
push
mov
lock
sbb
inc
xchg
ret
sbb
test
ljmp
lods
cmc
mov
sub
adc
ja
lea
add
arpl
dec
aam
out
xchg
ficoms
or
pop
push
mov
adc
div
dec
cmpsl
pop
push
push
pop
push
or
cs
in
data16
mov
jmp
mov
lcall
jg
jmp
insl
lods
call
sarl
cmc
and
rorb
insb
mov
mov
sub
add
cs
movsl
mov
push
sahf
jle
std
repnz
nop
outsl
and
dec
lahf
push
jns
cmc
mov
jns
and
test
divb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
aaa
out
shlb
cmp
addl
push
add
add
add
test
inc
mov
popf
and
dec
shlb
lahf
xor
xor
cmp
xchg
jne
push
cmp
xor
cld
and
pop
xchg
incl
insl
jmp
sub
rolb
out
add
xchg
int
mov
stos
jle
mov
push
mov
cmp
mov
mov
and
int
ljmp
mov
stos
and
ds
mov
sbb
arpl
lea
call
emms
push
hlt
fisttps
sbb
movsb
ret
insb
add
insb
and
call
xchg
call
adc
int3
ja
and
hlt
cmc
xor
loopne
dec
pushf
iret
dec
sahf
pop
aad
inc
loopne
insb
xor
pop
pop
inc
jle
mov
std
add
xchg
and
in
or
enter
ds
out
push
ss
mov
lcall
rcrl
inc
dec
stc
stos
jmp
in
jl
inc
jne
fistl
loope
loope
pop
cmpsb
cwtl
scas
mov
stos
cmpsb
jl
sub
ja
aaa
in
mov
test
and
dec
dec
int3
or
pop
mov
je
sub
fildl
mov
add
sarb
dec
adc
hlt
fcomi
pop
lods
test
daa
aad
pop
and
sub
fwait
xchg
sbb
fchs
mov
dec
les
lock
cld
dec
xchg
add
mov
add
cltd
rcrl
aaa
push
loope
push
mov
xor
pop
xlat
dec
arpl
cmp
fnsave
mov
pop
and
push
ret
fwait
loopne
ret
int
mov
es
test
movsb
add
in
in
adc
adc
adc
add
stc
pop
outsb
icebp
popf
arpl
dec
mov
ror
mov
sbb
adcb
inc
scas
movsl
ljmp
loopne
stos
xor
sbb
outsl
addr16
mov
leave
pushf
ja
push
push
sub
dec
xor
cmp
cmp
scas
test
add
and
fisttpl
pop
std
arpl
in
fldt
ds
mov
xor
gs
inc
sbb
mov
cld
mov
cld
jno
dec
aam
mov
push
js
pop
pop
inc
push
icebp
aaa
lods
pop
js
xchg
and
testb
xor
movsl
mov
out
addr16
xchg
push
fwait
pusha
mov
xchg
dec
jl
aaa
and
insb
pop
inc
mov
pop
or
jl
ret
cmpsb
sub
cmp
test
daa
aam
fiaddl
cmpsb
movsl
fidivl
push
xchg
aam
adc
push
ja
sti
shlb
fstp
scas
mov
ljmp
inc
mov
mov
cmp
cmp
jns
int3
dec
mov
fs
je
mov
and
or
or
neg
popf
jg
jns
test
push
push
sahf
andb
lret
cwtl
adc
sar
or
jecxz
add
lret
pop
jecxz
push
and
imul
jle
or
adc
outsb
pop
mov
inc
xchg
cmpsl
aam
xor
push
add
lcall
pop
movsl
pop
lds
jae
mov
jmp
data16
pop
aaa
mov
add
lcall
outsb
or
push
aam
aad
sub
aaa
and
jl
scas
sahf
lds
sahf
xlat
xor
sti
mov
shrl
xor
inc
jle
mull
fdivl
cmpsb
add
add
or
cwtl
push
inc
jne
mov
popa
repz
out
dec
das
xor
xor
push
adc
enter
inc
leave
lea
sub
stos
xchg
imul
cmp
shll
gs
repz
jns
les
ljmp
loopne
jns
mov
not
je
pop
xor
push
cwtl
dec
mov
fs
cmpsb
sub
out
push
out
out
or
mov
cmpsl
mov
xor
daa
mov
nop
or
fldl
addr16
leave
test
sub
add
xor
xorl
mov
addl
test
inc
and
mov
cmp
sbb
outsb
lods
sbb
sub
dec
xchg
out
pop
cmp
movsl
push
cmpsl
inc
xchg
push
cmp
pop
loope
lahf
cmp
sub
leave
das
inc
sub
add
sbb
dec
cmp
jbe
shrb
jbe
pop
popf
es
push
cmp
lcall
adc
jmp
jae
cld
cs
xchg
pop
mov
lds
call
aad
into
mov
pop
call
js
movsl
nop
mov
inc
dec
or
or
aaa
das
cmp
push
lcall
pop
int3
add
popa
repnz
pushf
rolb
aaa
loope
call
outsl
cli
insl
pop
ds
cmpsb
mov
sub
insl
push
jne
fwait
outsl
sbb
cmp
lahf
cli
dec
cmpsl
cmpsl
inc
jo
test
cmpsb
int3
ret
mov
xchg
inc
imul
rol
and
andl
lcall
testb
scas
push
mov
mov
jl
notl
jns
jmp
xchg
xchg
or
repz
cmpsl
cmp
loop
xchg
adc
push
pop
les
pop
mov
mov
rorl
push
pop
addb
and
adc
xchg
push
add
out
std
daa
jb
and
push
adc
lret
outsl
stos
in
dec
lods
cmp
xor
mov
sahf
fscale
rorl
and
or
sbb
lret
in
dec
xchg
cmp
test
cltd
scas
ss
mov
push
pop
push
fucomi
xchg
stc
fmull
stos
popf
xor
xchg
shrl
out
dec
ficoml
addr16
dec
aad
dec
push
sbb
and
shl
mov
fcmovu
pop
cmc
jne
and
push
loopne
leave
cwtl
roll
mov
addl
pop
test
xor
fcmovnu
mov
and
xchg
test
stos
sub
hlt
rclb
mov
inc
jl
add
cmp
sarb
imul
roll
xlat
enter
sti
push
dec
data16
mov
out
mov
and
aaa
hlt
fmuls
insl
and
add
rolb
cld
gs
daa
or
mov
pop
mov
ret
cmp
mov
jecxz
sahf
lahf
cld
mov
and
iret
mov
jecxz
lea
pop
cltd
out
incb
lcall
and
inc
repnz
int
outsl
pusha
fcoms
jg
mov
inc
jmp
adc
sbb
inc
repnz
add
fidivs
mov
dec
in
cmp
sbb
jo
and
rcrl
cltd
loope
shrb
js
popf
xchg
mov
pop
sub
shlb
dec
push
imul
cmovb
and
or
das
dec
add
ss
loope
sub
adc
cli
int
into
mov
scas
int3
push
jle
dec
add
xor
aam
push
mov
jmp
inc
jmp
adc
mov
mov
sbb
lds
mov
jge
mov
je
repz
sub
test
sbb
je
cmc
mov
cmpsb
mov
and
mov
aam
push
pop
jo
jno
scas
ret
fisubs
add
je
aad
jb
test
xchg
xchg
and
and
or
daa
int3
xor
fwait
xchg
cmp
cmpsl
sar
sbb
frstor
jo
cmp
pop
in
aas
popf
notl
pop
jbe
int
sub
xchg
push
pop
movsl
repz
int3
cmp
mov
hlt
js
push
pop
sbb
fabs
xor
arpl
jmp
push
mov
cmp
icebp
xchg
push
dec
incb
xchg
cmc
inc
mov
movsl
cltd
mov
insl
test
cmp
pop
rclb
adc
sub
aaa
or
fidivs
fcomps
aaa
jmp
adc
cltd
lods
push
pop
arpl
xor
mov
sbb
mov
or
adc
lea
addr16
mov
or
mov
push
mov
imul
mov
movsl
loop
inc
mov
dec
jl
push
pop
and
adc
cmp
outsl
popf
jmp
lahf
jne
xchg
or
data16
lea
push
bound
add
std
push
call
scas
mov
lcall
xchg
fmul
or
mov
and
cs
into
add
jno
mov
in
adcb
xchg
repnz
out
cmpsb
lret
mov
in
and
fisttpll
outsl
pop
xor
dec
jecxz
mov
sbb
mov
or
inc
aad
pop
mov
lahf
push
adc
mov
xchg
movsl
mov
mov
loope
adc
xchg
jmp
jge
jecxz
xchg
cwtl
push
leave
aaa
xorl
aaa
jb
mov
mov
mov
cld
cmp
sbb
cmp
pop
add
movsl
decl
and
xchg
bound
mov
repnz
mov
cmp
lahf
loop
push
push
inc
sbb
arpl
imul
movsb
xchg
fsubs
sti
fildl
adc
jge
push
dec
test
adc
xor
pop
push
popf
add
clc
imul
imul
push
mov
sub
adc
dec
sub
dec
cmp
mov
add
mov
gs
mov
mov
push
cmpb
inc
cmpb
pop
shrd
mov
cmp
push
inc
cmpsl
daa
adc
mov
cmpsb
push
or
push
sbbb
add
xchg
ret
repz
popf
lret
and
jle
aam
jmp
lcall
outsb
daa
sti
inc
outsl
xchg
sti
cmp
cmpsb
jo
mov
mov
jl
cmpsb
mov
add
fisubrl
iret
mov
stc
sub
pop
repnz
fidivs
scas
mov
cwtl
sub
jge
pop
mov
push
imul
aaa
in
inc
xor
daa
inc
clc
or
ret
sub
sub
loopne
hlt
pop
xor
stos
fsubrs
fnsave
jae
scas
or
je
inc
inc
int3
jnp
imul
inc
push
jle
mov
xchg
and
inc
outsl
mov
adc
push
sbb
and
lods
jp
mov
or
adc
icebp
pop
mov
ret
sbb
inc
inc
pushf
jmp
daa
pushf
cmpsb
push
fucompp
add
out
jns
mov
jl
add
in
cmc
in
cltd
sti
out
mov
sub
pop
adc
subb
loop
cmpsb
std
arpl
dec
adc
sahf
loop
jbe
out
cmp
loopne
mov
ror
dec
sbb
std
push
imul
sub
movsb
aas
cltd
add
dec
sub
js
icebp
jne
or
stos
cmp
ljmp
or
jnp
out
mov
xchg
fs
cmpsb
mov
aaa
testl
mov
icebp
push
lds
sti
inc
push
cmpsl
sbb
pop
and
mov
push
icebp
jbe
pop
rcl
push
xchg
int3
push
push
outsl
xor
fsubrs
jne
cmp
add
lret
pavgw
mov
sbb
pop
inc
sbb
inc
repz
lods
divb
cmp
mulb
pop
xchg
cmpl
outsb
pushw
ljmp
xchg
ficoml
jl
sub
leave
xchg
mov
xor
cmpsl
test
and
xor
cltd
aad
xlat
or
dec
xor
mov
sub
movsl
shl
cmpsl
cmpsb
imul
outsl
ds
inc
lcall
rol
or
je
xchg
test
pop
arpl
outsb
sbb
pop
fimull
jmp
neg
jmp
sub
aaa
push
or
cltd
sub
out
push
stos
adc
pop
aad
mov
add
pop
sbb
jnp
mov
jge
in
fcmovnu
xor
pop
out
into
xor
mov
lahf
int
aas
test
ljmp
shl
enter
stc
dec
iret
ficoms
inc
popf
cmpsl
gs
xor
xchg
dec
pop
mov
pop
lcall
pop
pop
sbbb
sbb
jns
mov
and
push
jno
ja
imul
mov
sub
sbb
jmp
push
add
mov
fnstenv
loope
sbb
rol
stos
sbb
test
or
jb
pop
pop
push
adc
out
jge
pop
xchg
repnz
push
add
imul
cmpsl
outsl
or
pop
test
dec
sub
mov
ret
and
inc
push
jge
test
sbb
or
jp
test
xor
fdivrl
jb
mov
sub
outsl
rorl
mov
push
mov
lea
cmpsb
mov
movsl
fs
fldenv
push
das
iret
inc
shrl
cmc
ss
pop
pop
in
cmpsl
pusha
dec
inc
ficomps
aaa
ja
outsl
sbbb
mov
cmp
iret
push
mov
inc
out
xchg
sbb
scas
cmp
cmp
adc
fmul
sub
mov
into
dec
lret
sbb
nop
stos
mov
jnp
mov
loopne
push
mov
xchg
and
nop
jg
and
out
fsubr
or
mov
add
push
std
add
iret
jp
and
idivb
cmp
and
outsl
pop
jnp
pop
out
aam
out
jo
mov
sarl
add
pop
ret
icebp
mov
mov
into
das
ret
fidivrs
ret
mov
enter
inc
dec
sub
pop
jns
or
incb
xchg
in
sti
jo
xchg
movq
mov
aas
inc
jge
gs
cmp
cld
cmp
pop
lahf
call
shlb
or
stc
int3
xchg
adc
bound
or
test
sbb
aam
popf
into
or
mov
les
pushf
pop
or
xlat
mov
pop
mov
movl
fwait
jmp
pop
and
rolb
addb
rorb
icebp
not
leave
arpl
and
mov
fidivs
pop
fs
inc
cmpsb
loopne
adc
mov
adcl
mov
fldl
dec
test
jo
xor
cs
cmp
xchg
cs
jle
jmp
inc
cmp
sub
inc
data16
xchg
scas
insl
iret
inc
xchg
sbb
int
fstps
sbb
nop
cmp
jp
lret
shrl
adc
sbb
add
mov
divl
out
jbe
push
movsb
jge
std
fs
test
xchg
and
rolb
mull
jl
dec
cmpsl
lret
jl
lea
adc
gs
mov
and
fcoml
xchg
adc
ds
sbb
out
cwtl
dec
mov
stos
xorb
mov
lods
inc
incb
mov
or
dec
mov
gs
ja
incb
je
repz
aad
scas
fmul
inc
pop
sbb
cmc
xchg
mov
notb
sub
add
popa
cs
ret
dec
sub
mov
push
mov
mov
fdivl
orl
mov
cmpsl
sub
xor
ret
jle
ljmp
shl
fs
mov
lcall
std
or
adc
into
xor
xchg
mov
mov
adc
sbbl
lock
mov
push
and
push
sbb
stos
fcompl
mov
test
cmp
and
jg
fnstsw
arpl
stos
sbb
sbb
pop
cltd
jae
test
lea
add
sbb
adc
jl,pt
sbb
jno
push
mov
nop
cmpsb
sub
cmc
lods
ret
jnp
inc
loope
je
rcrb
addb
xlat
mov
ja
jp
pop
mov
lds
addr16
jne
mov
bound
dec
add
nop
push
dec
stos
add
bound
push
fisttpll
rcrl
clc
jns
notb
mov
push
in
faddl
add
sub
xor
adc
inc
jo
repz
das
pop
mov
mov
sub
or
dec
add
out
insl
mov
mov
mov
cmp
inc
sbb
icebp
inc
sbb
ret
mov
shlb
sub
fsubs
orb
loope
and
push
sub
inc
jecxz
fiadds
mov
out
xor
js
dec
sbb
fwait
cld
fidivrs
scas
jb
sub
xorl
adc
aad
inc
mov
push
cmp
mov
add
ljmp
cmp
arpl
add
enter
adcl
lea
fwait
sbb
push
in
cmpl
push
in
jo
iret
outsb
mov
xchg
aad
mov
popl
pop
push
adc
inc
mov
sti
imul
pushf
test
inc
cmc
repnz
add
ficoml
aad
inc
sub
mov
addb
adc
xchg
cld
mov
fiadds
mov
repnz
pop
cs
subb
fistpll
and
add
cmc
movsl
div
jne
sbbb
stc
orl
push
inc
add
mov
int3
jno
fists
das
popa
lret
add
push
lahf
adc
mov
ret
call
mov
lret
lcall
mov
xchg
inc
in
cmp
push
or
or
xchg
xor
fmuls
mov
outsb
iret
stos
jb
out
out
jge
and
cmpl
out
std
push
adc
stc
cmp
rolb
ret
xor
ret
jns
mov
js
xor
and
cmp
pusha
ja
mov
sbbl
shlb
pmulhw
test
aad
jnp
movsl
sub
out
ljmp
pop
dec
out
cmpsb
pop
xchg
mov
clc
inc
sbb
and
mov
pop
bound
and
rorb
es
in
xor
incb
sti
or
in
idiv
in
notb
jle
sbbl
xlat
mov
cmp
lods
add
pop
add
gs
or
fistl
jecxz
fcomps
inc
xchg
xchg
xor
ret
ret
pop
testl
cmpl
ss
pop
popa
push
mov
cmp
das
mov
int
subb
sbb
sub
out
jb
in
fstpl
mov
cmp
cltd
leave
loopne
sar
adc
add
sbb
ret
imul
cmpsl
and
or
ds
aad
out
add
fdivrs
xchg
adc
xor
repnz
lods
jecxz
rolb
sub
jbe
adc
mov
int
adc
mov
into
shll
adc
test
cmp
xchg
fldl
sti
cli
sbb
test
add
pop
loope
pop
mov
stc
subb
sbb
add
cli
imul
cmp
jb
or
xchg
das
insl
push
dec
movsb
icebp
jae
xlat
mov
mov
mov
mov
sbb
dec
imul
loopne
push
sub
arpl
mov
inc
sub
adc
cmpsl
xor
cmp
sub
arpl
rcrb
or
clc
rcr
cmp
lods
adc
jp
inc
aam
pop
aam
push
xor
xchg
push
mov
inc
xchg
mov
xchg
push
sub
mov
cld
cwtl
aaa
cli
lahf
jae
and
mov
xchg
pop
rolb
mov
hlt
stos
push
andb
adc
out
cli
shll
subl
or
cmpsb
push
daa
dec
fsts
xor
cmp
int3
xchg
jae
mov
push
mov
mov
and
popa
outsb
add
mov
imul
or
mov
jnp
sub
mov
inc
leave
push
jb
push
xchg
arpl
xor
into
test
jo
dec
enter
mov
fwait
xchg
outsl
add
outsl
jno
pop
or
popl
sub
lods
mov
stos
sahf
leave
inc
ds
fcmovnu
icebp
test
push
add
lea
dec
ret
es
addr16
mov
xor
mov
addl
mov
stos
xor
ljmp
or
sbb
mov
and
hlt
sub
mov
ss
test
jle
int
arpl
into
ljmp
jb
fs
pushf
lret
xchg
jbe
mov
ja
inc
aad
add
in
repz
lea
mov
in
inc
jbe
mov
jg
ja
pop
ficoms
sub
lcall
ja
push
repz
cmp
mov
sub
negl
mov
jnp
lret
sub
xchg
ss
mov
or
pop
jb
inc
and
loopne
mov
mov
outsb
repnz
add
adc
test
push
inc
insl
pop
adcl
dec
cmpsl
jno
mov
cmpsb
stos
mov
repnz
fldl
add
cmpsb
pop
cmp
call
sbb
sbb
add
xchg
addr16
imulb
pop
daa
clc
lods
and
lods
push
popa
leave
cltd
outsb
mov
mov
adc
xlat
sbb
push
addr16
test
enter
push
dec
repz
or
fisttpll
push
aaa
inc
repnz
ds
sbb
and
lods
arpl
lret
in
ds
inc
inc
dec
pop
push
stc
sbb
bound
mov
or
mov
ljmp
push
inc
nop
mov
pop
mov
enter
ficoms
add
xchg
jnp
pushf
sub
push
ror
pop
mov
ret
and
int3
inc
jne
xor
enter
or
pcmpgtd
ljmp
test
imul
xor
mov
push
std
and
imul
sub
insb
adc
popa
push
mov
loopne
mov
lahf
lods
out
dec
cmc
ret
add
xchg
sarl
mov
sub
call
mov
flds
mov
cmp
and
mov
add
ret
dec
jge
xchg
js
cmp
cmp
enter
cltd
test
in
xchg
insl
loopne
mov
push
ds
push
stos
xor
pop
addb
xchg
pop
inc
loop
test
and
clc
into
imul
sbb
clc
enter
xor
mov
mov
mov
je
cmp
jecxz
pushf
sbb
in
sti
fisttpll
mov
test
cmpsb
adc
xchg
stos
or
mov
sbb
sub
push
aam
call
fdivrs
xchg
dec
pop
add
ja
dec
into
dec
pushf
test
pop
mov
sub
mov
sub
lds
mov
icebp
lods
in
lds
pop
jg
push
sub
mov
mov
jle
xlat
enter
push
loope
inc
imul
pop
dec
push
pop
ret
inc
mov
das
ja
xorb
cltd
jmp
aad
sub
stos
sub
xchg
fidivrs
cmp
or
sbb
cltd
push
ret
orl
das
out
je
inc
out
fld
mov
inc
sub
cltd
sub
and
shl
das
fnsave
lret
push
add
mov
addl
fcoml
imul
mov
mov
cld
adc
je
hlt
mov
movsb
and
outsb
out
jno
cmp
lea
sbb
es
ja
and
sbb
imul
loop
lods
inc
rep
push
cmp
call
cmc
add
ds
jo
shrb
add
dec
test
mov
jle
push
out
xchg
and
mov
sbb
jp
mov
mov
in
cwtl
outsb
ljmp
mov
int
dec
std
sub
or
call
in
push
or
adc
dec
dec
push
shrb
mov
cli
pushf
int
xlat
xchg
int3
and
dec
and
stc
adc
adc
or
mov
mov
stos
imul
out
mov
fiadds
fiaddl
stos
sub
iret
jne
mov
mov
sbb
sub
pop
push
pop
data16
in
sarb
sti
pop
inc
sub
jne
in
or
xchg
xchg
xchg
fmull
add
push
xchg
dec
out
jns
push
int
lret
inc
scas
outsl
inc
movsl
mov
xlat
mov
sti
lret
sbb
shl
imul
xor
jmp
into
dec
int3
mov
xchg
in
out
imull
je
test
iret
out
insb
add
mov
pop
push
fisubl
and
and
aas
push
daa
clc
lds
in
jo
push
xchg
cmpsb
dec
xorb
cmp
xchg
mov
daa
mov
cld
movsl
jo
inc
pop
inc
das
insb
daa
out
dec
sbb
mov
out
cltd
ja
jno
xchg
hlt
push
mov
test
scas
jle
jnp
jecxz
dec
and
rolw
inc
mov
pop
inc
inc
pop
xchg
fsub
rcl
jno
push
sub
cmp
push
ficoml
jns
push
leave
lahf
cmp
rcll
fxch
ljmp
pop
and
inc
dec
movsb
dec
in
enter
sub
sub
ss
or
pop
inc
xchg
and
pop
dec
cld
and
mov
nop
add
push
test
xor
cmpsb
cld
stos
cmp
jb
push
xchg
xchg
rcrb
push
push
pop
xchg
icebp
imul
lock
enter
mov
popf
fidivrs
popf
aaa
nop
cmc
pop
int3
sbb
ret
pop
mov
mov
in
ucomiss
scas
mov
xchg
sub
das
push
movsb
mov
repnz
jae
nop
fidivrs
pop
and
outsl
sbb
je
push
push
popa
dec
push
test
rcll
lahf
scas
lods
inc
nop
adc
xchg
fbstp
jnp
xchg
xchg
rolb
mov
mov
inc
jno
loopne
pop
xchg
imul
pushf
xchg
pusha
add
lds
xchg
xchg
popf
pop
call
gs
ds
xchg
outsb
in
pop
sub
sub
mov
cmc
sub
xchg
cmpsb
ficoml
shlb
push
fwait
dec
jnp
dec
or
or
repnz
sbb
lea
arpl
jecxz
dec
adc
jp
jns
dec
in
bound
fcmovnb
sbbb
mov
add
outsl
andb
or
mov
push
insl
jge
push
add
pop
loop
test
mov
xchg
inc
sahf
xchg
mov
gs
std
scas
pop
hlt
mov
add
cmpsb
dec
clc
pushf
gs
push
xor
dec
cmp
mov
in
mov
out
fs
mov
cmp
shlb
jae
mul
push
sub
aas
sub
nop
loop
sti
mov
lahf
push
jp
mov
insl
xchg
fnstenv
mov
push
sub
add
jl
test
mov
sahf
pop
push
adc
scas
cwtl
es
movntps
arpl
aas
cmp
gs
nop
sub
out
jae
dec
arpl
push
loope
adcl
pop
sub
pushf
jne
xlat
mov
jbe
hlt
data16
mov
xchg
inc
loope
icebp
fdivs
xchg
icebp
es
cmp
ror
sbb
and
imul
sbb
aas
jl
pop
lret
pop
addl
pop
outsl
mov
sub
mov
jl
in
sub
stos
call
lds
clc
cmp
xor
pcmpeqw
rcrb
cmp
sub
sub
cmpl
lea
xorb
repnz
ret
mov
stc
mov
int
mov
xlat
push
je
stos
mov
cli
scas
add
es
pop
shl
mov
or
and
outsb
push
mov
pop
xor
fsts
jl
mov
dec
add
jge
inc
xor
or
xchg
movsl
or
fwait
dec
pop
cmp
fnsave
cmc
pop
rorl
jno
enter
add
and
fimull
xor
mov
es
and
pop
lock
jns
and
andl
jb
xor
daa
int
test
sub
sub
icebp
xchg
outsl
out
ss
mov
sub
push
ja
mov
cmp
or
mov
xor
lock
cs
fcmovnbe
jecxz
into
pop
stos
int
out
repz
leave
cltd
mov
jnp
popa
jecxz
pop
clc
lcall
xchg
movsl
or
mov
sbb
mov
cmp
cld
inc
mov
aaa
aaa
sbb
daa
lret
shrl
or
test
push
mov
loopne
dec
or
je
test
dec
fs
sbb
xor
push
out
sahf
adc
mov
cltd
in
outsb
cmpb
mov
xor
xor
cmp
xchg
push
arpl
int3
test
xor
jl
mov
test
cmpsl
mov
add
add
adc
dec
xchg
repnz
cmpsb
cmp
pop
mov
jnp
lcall
test
sub
lea
jbe
bound
push
pop
cmpsl
lcall
in
out
sbb
fwait
test
bound
xchg
sti
ljmp
or
int3
fisubl
xchg
jns
divb
dec
fisubrl
add
sbb
xchg
sahf
mov
mov
imull
cmp
sti
push
in
repnz
dec
faddl
push
and
adc
daa
add
mov
div
mov
mov
outsb
in
xchg
push
inc
int3
pop
ds
dec
out
out
xchg
adc
int
stos
ret
mov
icebp
aad
fidivl
add
jg,pn
add
sbb
dec
mov
fidivrl
in
inc
insl
ffreep
imul
int
test
push
xlat
dec
pop
and
pop
divl
lock
test
repz
push
mov
or
lea
fsubr
and
adc
xor
and
mov
push
repz
jmp
stc
call
into
pop
dec
ljmp
std
add
adcb
stos
jl
jae
insb
ficomps
sub
fldl
lods
fcmovnb
std
adc
fadd
pushf
loope
mov
pop
out
lahf
lods
mov
sub
push
scas
mov
mov
push
add
xor
mov
incl
in
sbb
inc
fbld
std
jl
push
lret
lds
cmp
out
inc
dec
cmc
movl
mov
jmp
sbb
les
push
leave
sub
jns
addl
cmpsl
jnp
inc
rcrl
xor
pop
fldenv
jns
xchg
scas
cmp
dec
jl
clc
inc
icebp
mov
dec
int
or
sbb
cmp
out
pop
cmp
js
sub
lahf
dec
or
inc
mov
in
and
pop
stc
push
jle
cli
clc
xor
lods
cwtl
jp
push
js
fstpt
mov
lcall
add
adc
repnz
int
stc
inc
jp
sub
subb
mov
or
cwtl
jbe
push
call
xchg
push
pop
lds
imul
push
aad
push
nop
jnp
mov
inc
push
and
lock
test
dec
decl
fs
or
dec
cmp
inc
sub
push
in
in
sub
mov
movsl
add
icebp
decl
pop
or
sbb
pushl
mov
pushf
test
movb
pushf
dec
adcb
sub
das
and
fldl
push
icebp
xor
dec
pusha
mov
mov
cmp
subl
mov
call
push
aam
and
je
mov
xchg
add
jmp
ret
sti
mov
push
ja
adc
add
sbb
add
shll
mov
loopne
and
mov
outsb
stos
in
sar
sbb
mov
gs
mov
xor
cmp
adc
fwait
jae
pop
adc
mov
cld
stc
loopne
mov
in
pop
imul
repz
rolb
movsl
rsqrtps
clc
sub
call
in
test
jmp
inc
pop
aam
mov
lahf
or
adc
add
in
adc
xor
data16
cwtl
pop
adc
adc
inc
pop
adc
test
push
sbb
mov
cltd
pop
int
sub
fistpll
lods
lahf
jbe
or
mov
fidivs
dec
out
push
ja
roll
fcoms
push
imul
or
jp
xchg
test
add
dec
insl
test
sbb
fimuls
jns
xlat
inc
lods
jnp
and
push
jbe
xor
inc
push
setns
imul
inc
xchg
addr16
sbb
popf
lock
mov
lds
test
xor
cmp
sub
adc
in
shl
pop
test
inc
call
leave
mov
fmull
in
sbb
cli
cltd
cmp
movsb
sbb
and
xchg
xchg
push
add
or
test
inc
dec
mov
and
lock
pushf
sub
nop
stos
fbld
mov
push
xchg
int
or
out
or
jnp
or
fstpl
rolb
les
adc
or
push
adc
push
imul
mov
fcomip
cmpsl
add
inc
daa
js
inc
nop
push
sbb
cmpsb
mov
add
xorl
pop
cli
pop
cmp
imul
pop
ret
inc
adc
fisubrs
in
icebp
pop
in
push
cmc
mov
jmp
add
pop
sahf
and
out
lods
push
test
mov
shlb
adc
addr16
add
mov
jecxz
cli
jo
and
or
xor
pop
xchg
cld
and
xor
mov
dec
fidivl
in
loop
ljmp
ret
cwtl
cmp
and
icebp
mov
push
out
push
mov
into
hlt
add
mov
dec
in
cmp
andb
xor
ds
cmpsl
ret
xor
lods
xchg
shll
xchg
pop
bts
sub
pop
lret
arpl
sub
dec
and
jns
int3
push
cmp
enter
xchg
call
or
icebp
mov
sahf
mov
cmpsl
dec
lcall
test
mov
in
inc
jg
mov
mov
add
xchg
mov
push
icebp
movsb
sbb
push
jb
dec
sub
push
xlat
inc
insl
jb
pop
pushf
mov
jp
pushf
fsts
lock
inc
pop
iret
scas
insl
xchg
mov
lods
pop
cmp
sar
fsin
imul
lret
and
loope
sbb
jmp
xchg
cmp
dec
sbb
jns
insl
pop
daa
xchg
inc
cs
inc
loope
mov
data16
sub
loope
sbbl
adc
insb
jb
dec
pop
aas
fwait
lods
dec
fnstenv
xor
iret
xor
xlat
xchg
add
or
dec
pusha
pop
lds
mov
leave
das
cs
arpl
cmp
insb
and
rcl
mov
dec
into
xor
fsts
jno
mov
les
fisubrs
push
imul
jle
pop
xchg
mov
imul
es
jae
ja
mov
pop
iret
ljmp
sub
xor
pop
or
fs
pushf
or
les
stos
add
ror
or
mov
stos
test
jecxz
test
xor
adcl
mov
jbe
sub
dec
jne
push
in
sub
push
push
leave
fidivrs
scas
stc
js
jbe
enter
xchg
push
xchg
mov
jl
push
cwtl
push
in
js
pop
xor
aad
call
pop
insl
dec
or
mov
shrb
lods
inc
fwait
arpl
push
inc
addb
mov
dec
push
cli
xchg
xor
fildl
out
jmp
data16
int3
lock
test
mov
cmc
mov
loop
pop
jp
pop
stos
mov
add
xchg
xor
lahf
add
fmulp
nop
jne
shll
enter
xor
push
inc
mov
aas
das
jae
sbb
jge
ds
fistpl
sarl
hlt
aam
sbb
shll
ret
call
xor
in
add
adc
pop
xchg
jl
xchg
sub
adc
jbe
test
push
shll
in
inc
push
pop
jl
push
outsb
jg
in
pop
cmpsl
imul
sbb
pushf
jns
inc
stos
daa
cmpsb
mov
cs
bound
xchg
push
pushf
adc
arpl
fcomi
pop
inc
sub
sbb
mov
mov
shlb
nop
sbb
xor
xchg
cmp
ds
dec
fnstcw
ret
inc
stos
in
mov
std
and
push
scas
pop
orl
subb
nop
shrl
lcall
sbb
lds
mov
outsb
mov
outsb
sti
scas
and
mov
lahf
mov
mov
mov
addr16
aad
in
sub
aaa
inc
shrb
xor
and
xor
pop
shlb
add
mov
imul
sub
pop
int
or
rcll
or
lret
ja
aas
sbbb
rol
call
push
adc
xchg
dec
daa
lcall
dec
pop
sub
mov
ret
cld
xor
sub
adc
dec
sub
mov
scas
pop
push
iret
cmp
xchg
xor
sub
adc
int
cwtl
lock
stos
jns
nop
gs
jbe
iret
mov
mov
fwait
out
into
xor
adc
inc
filds
gs
fcoml
jle
or
jl
and
xchg
and
inc
mov
xchg
mov
xchg
sub
test
imul
cmc
add
or
or
mov
dec
add
lret
xor
addr16
mov
jecxz
stos
je
xor
push
shll
adc
xchg
cmp
adc
in
bound
icebp
sbb
or
cmp
inc
inc
fstpt
lahf
loopne
xchg
jo
and
mov
pop
addr16
lods
sub
sbb
xchg
jb
adc
int
xorl
inc
and
jp
sub
mov
push
cmpb
jecxz
fs
mov
shll
pushf
stc
adc
dec
cwtl
test
in
shrb
cmp
sub
push
cmp
ljmp
add
das
push
xchg
cmp
push
pop
cmp
jmp
push
icebp
xchg
lods
test
cltd
push
test
pusha
sbb
and
xor
sub
imul
pop
mov
pop
add
push
push
sahf
pop
aas
sahf
out
sub
call
je
inc
popa
idivl
mov
xchg
or
lret
subl
pusha
loope
or
das
and
inc
cmp
sub
lret
cmp
bt
aas
scas
push
data16
js
les
xor
mov
into
ja
mov
jmp
aas
ljmp
lahf
or
loope
cmp
cmp
add
jne
out
mov
sub
lahf
outsl
and
push
push
lods
adcl
adc
pushf
dec
mov
fdivs
cmp
mov
sbb
popf
pop
mov
jnp
out
loop
ret
pop
test
xchg
push
lods
ss
es
das
or
adc
inc
aaa
ds
sbb
ret
icebp
sub
cmp
fstl
push
frstor
dec
mov
sbb
xor
jb
mov
push
inc
ds
xchg
push
push
outsl
stos
std
insb
sbb
cmp
jbe
sarl
xchg
ss
int3
cld
jge
or
pop
bound
lods
sub
pop
test
stos
dec
xchg
add
adc
push
push
mov
mov
sbbb
mov
jge
mov
pushf
xchg
rorb
jecxz
inc
push
lret
in
in
imul
outsb
xchg
add
std
sub
mov
xor
lret
das
jge
cmp
cmp
outsl
mov
in
cmc
fistps
or
adc
or
in
add
jae
inc
mov
mov
jae
xchg
into
push
pop
mov
lods
fwait
sub
adc
js
hlt
inc
repnz
mul
jecxz
rclb
movsb
pop
rclb
push
clc
andl
in
add
or
iret
ret
idivb
movsb
loope
dec
shll
mov
lea
and
mov
fdivl
mov
dec
mov
push
loop
dec
xor
dec
cmpsb
xchg
iret
mov
out
je
pop
fnstsw
repnz
cmp
dec
cmp
lea
aas
lods
lea
testl
xor
dec
nop
stos
dec
ljmp
push
stos
lahf
and
cs
sub
outsb
dec
jmp
aam
dec
mov
sub
sbb
cs
mov
std
mov
push
or
sti
xchg
or
xlat
push
data16
loopne
sahf
jb
mov
push
ljmp
iret
jns
loopne
leave
jp
cmc
mov
or
mov
mov
insb
jl
out
add
xchg
mov
pop
movsl
data16
xchg
jae
rclb
mov
add
add
cmp
push
push
push
push
xlat
cs
ret
mov
mov
sub
scas
aam
mov
dec
xchg
js
jae
pop
mov
pop
dec
xchg
xchg
add
jb
out
add
dec
sub
xor
mov
mov
xor
push
add
push
out
xor
xchg
lock
sbb
jmp
xor
pop
cli
gs
lods
ret
mov
imul
dec
push
cmp
sub
sub
mov
ret
fisubrl
fisubl
xchg
cmp
dec
mov
fdivrl
outsl
popa
adc
pop
push
sub
or
sbb
jle
inc
loop
scas
mov
mov
inc
jmp
push
adc
scas
int
daa
xchg
pop
leave
jge
adc
jmp
cmpsl
pop
sub
ljmp
ds
jecxz
xchg
repnz
dec
out
jle
and
loop
lods
sbb
into
pop
xor
cmp
and
lcall
mov
ss
pop
ja
int3
js
pop
mov
fsubp
shrl
pop
mov
jne
rcll
and
int3
lock
mov
push
insb
fnstenv
dec
xchg
xor
push
shll
and
icebp
lock
inc
mov
and
test
les
fs
insl
add
cltd
ucomiss
out
mov
leave
mov
orb
xlat
pushf
rcll
call
shlb
sti
xchg
jmp
je
push
test
test
xor
pop
xchg
ret
cmp
xor
mov
nop
pop
sub
jmp
pop
mov
add
mov
out
aad
gs
mov
xor
imul
push
sbb
testb
push
or
push
js
subl
andl
or
xchg
pusha
negb
loop
sbb
out
jge
es
push
inc
in
movsl
out
cmp
sahf
sarb
insl
push
xor
inc
and
pop
mov
fists
leave
add
inc
add
fmul
mov
xor
xchg
daa
ffree
jno
pop
popf
popa
loopne
xchg
sbb
sub
pop
jae
adc
inc
xchg
push
leave
data16
pop
sub
nop
pop
ss
cmp
push
cmpl
arpl
repz
ror
jecxz
push
or
mov
movsb
roll
stc
jo
push
inc
pop
pop
jg
syscall
aam
mov
cmp
dec
mov
pushf
fsts
xchg
xchg
mov
movsb
adc
or
je
mov
arpl
jb
aad
das
mov
jo
lahf
daa
ret
pushf
addb
dec
mov
bound
lods
pop
add
xchg
mov
je
push
inc
add
cli
repnz
push
jmp
enter
sbb
adc
cmp
and
lods
inc
stc
xchg
subl
test
dec
cmp
movaps
out
int
mov
mov
cmp
jne
cs
sbb
push
cmp
push
adc
ret
lahf
dec
test
or
xrelease
and
leave
jge
aaa
sub
aad
sbb
or
and
fidivl
or
outsl
push
xchg
rcl
hlt
mov
scas
inc
test
pop
out
jns
xor
loop
mov
out
pop
outsl
popf
cmp
loope
push
xchg
sti
inc
cli
cmp
enter
je
sub
rclb
pushf
lret
push
subb
dec
mov
loopne
in
and
mov
cld
xchg
inc
push
inc
test
imul
stos
mov
sbb
jle
or
jg
adc
xor
shl
xor
imul
mov
and
in
push
push
jle
xchg
xor
lret
aam
and
repz
jle
lods
data16
cmp
inc
bound
push
pop
ds
or
cmp
xor
sbb
inc
xchg
addr16
xor
daa
ja
js
push
call
mov
addr16
dec
xchg
inc
jmp
fnstenv
jg
jl
push
je
clc
push
cmpsl
nop
jbe
gs
cltd
mov
outsl
scas
ss
cmpsb
shll
js
push
mov
ja
push
fadd
int3
inc
pushf
sbb
jae
in
add
jno
mov
dec
cmp
out
std
cmp
stc
jle
lret
in
jecxz
imul
shlb
js
sbbb
sub
punpckldq
push
add
loopne
or
stos
mov
and
pop
inc
scas
lods
imul
imul
or
test
jmp
and
out
sub
xchg
enter
pop
push
pop
cmp
insb
xor
mov
pop
mov
pop
dec
push
popa
jge
jle
mov
xor
or
lods
je
xor
popf
out
sbb
pop
sbb
xchg
jmp
push
pop
push
in
push
idivb
sub
pop
mov
out
jmp
lods
jmp
fisubrs
mov
mov
jp
dec
mov
scas
adc
sub
sahf
lahf
adc
sbb
aaa
or
lds
iret
xor
xchg
inc
gs
xor
dec
or
mov
mov
jecxz
push
leave
push
es
arpl
fisttpl
loop
pop
scas
frstor
sub
pop
or
and
push
lock
jp
jno
inc
sub
lret
jmp
inc
lret
faddl
pop
mov
pop
push
cltd
cmc
sahf
mov
mov
pusha
push
xchg
sti
jle
inc
push
add
push
sbb
mov
insl
out
jns
out
sub
jp
inc
in
lods
push
insl
loope
aaa
and
ret
dec
mov
adc
out
cmpsl
fs
mov
inc
iret
out
xor
popfw
and
cltd
leave
out
mov
dec
sub
fs
inc
aas
or
sub
xorl
loop
aam
inc
xor
call
cmp
lea
cmp
imul
sub
and
lock
enter
push
es
mov
xor
adc
fwait
jne
repz
jle
ret
jns
mov
js
out
pushf
mov
sbb
mov
pushl
fisubl
sahf
imul
mov
jbe
js
test
cmp
pop
insl
lds
pop
pop
leave
gs
cmpsl
sti
mov
xor
inc
pop
aam
js
mov
enter
and
lds
cmp
aas
fnstenv
pop
ljmp
push
cmp
dec
sub
roll
mov
sub
jb
xor
pop
lods
mov
icebp
xorb
cmp
push
arpl
dec
push
sub
mov
repz
mov
jno
push
adc
pop
loop
or
xchg
mov
out
fcomps
rcr
push
or
push
lret
fldenv
pop
notl
mov
std
pop
ds
inc
add
stc
pop
sarl
lods
sbb
or
lahf
add
arpl
push
lahf
aaa
push
pushf
jns
jne
int3
mov
mov
lods
addr16
jne
test
mulb
dec
pop
mov
push
addr16
ret
add
adc
push
push
add
sbb
dec
cmpsb
pop
bound
out
ret
sub
push
xchg
adc
fs
movsl
sbb
in
xor
rcr
xchg
xor
scas
out
test
out
mov
stc
xchg
sub
mov
sti
add
sub
pop
imul
jl
ljmp
fisubrs
or
out
and
adc
pop
push
sarl
sbb
idivl
mov
mov
xor
bound
aaa
mov
and
enter
in
xchg
mov
and
imul
addl
inc
sti
movsl
repnz
gs
mov
xchg
repz
xchg
daa
mov
loop,pn
sub
mov
loopne
into
lds
xchg
pop
inc
shlb
dec
mov
sub
cmpb
xchg
sbb
pop
mov
adc
stos
cmc
lahf
or
inc
mov
pusha
dec
dec
mov
into
mov
jns
xchg
ret
mov
je
mov
xor
jnp
es
cwtl
mov
sub
cmp
mov
jmp
in
sbb
loop
mov
test
adc
lock
adc
mov
xchg
cmp
pushf
mov
xor
bound
dec
testb
xchg
or
cmp
jbe
aam
les
inc
cs
and
loop
mov
mov
dec
cmpsl
pop
jno
push
cmpsb
push
adc
or
cmp
fisttpll
mov
cli
cltd
add
add
mov
ds
lahf
add
rorl
imul
punpckldq
hlt
sbb
push
shlb
fs
mov
xor
in
popa
cld
sub
mov
mov
mov
test
lcall
js
sbb
mov
mov
aam
js
scas
rclb
cmp
mov
lcall
rorb
fstpt
sbb
negl
or
jno
dec
sarl
iret
xchg
cltd
scas
outsl
mov
pop
jne
outsb
adc
in
xchg
test
jae
push
mov
mov
fwait
dec
mov
stc
pop
outsb
inc
add
jge
xchg
cmp
push
mov
xor
popf
inc
test
dec
adc
xor
and
xchg
push
ds
imul
stc
jns
mov
test
inc
js
mov
add
imul
aad
outsl
mov
mov
jp
push
adc
and
adc
arpl
cmp
insb
imul
push
loope
sub
lock
imul
es
out
lock
adc
aaa
or
jo
push
sbb
cli
scas
outsb
andl
mov
jno
scas
xchg
mov
cmp
or
add
mov
cmp
cmp
ds
insl
jnp
call
adc
mov
in
pop
lods
inc
adc
mov
repnz
pushf
clc
cmp
jbe
clc
mov
test
mov
rorl
jns
subb
mov
add
inc
jb
push
in
sbb
outsl
lea
inc
pop
in
nop
leave
pop
cmpsb
fstps
pop
jp
scas
les
sub
int
mov
mov
jle
fidivrs
jo
mov
pusha
insl
push
mov
ja
pop
stos
or
push
cmpsl
push
xor
je
dec
loope
add
push
insl
jg
jb
sub
lock
or
insl
aad
mov
pop
dec
cmp
and
inc
jns
inc
lock
sahf
inc
mov
mov
jecxz
das
stos
jle
push
dec
xor
pop
loopne
push
jecxz
popa
and
add
dec
in
andl
loop
dec
jle
xchg
bound
pop
mov
rolb
mov
loop
dec
push
outsb
mov
or
xchg
ret
xchg
out
jge
std
jge
xchg
adc
sbb
add
push
lret
inc
mov
test
mov
gs
sbb
aam
mov
cmp
aas
mov
jne
xchg
sub
das
inc
adc
cmp
stos
jbe
sbb
mov
test
cmp
mov
gs
sub
push
fwait
testb
mov
scas
sti
adc
ret
mov
lret
insl
lods
fdivrp
mov
mov
cmp
punpcklbw
shrl
xor
and
pop
add
test
pop
aad
loopne
xchg
cmp
jge
add
inc
bound
ret
xchg
cli
cli
inc
or
test
divb
sti
jne
push
pop
nop
daa
mov
aam
cmp
xchg
xchg
fldcw
lds
xchg
scas
lcall
jae
jo
inc
push
gs
lods
repz
lods
popa
sub
lods
cwtl
icebp
xchg
insl
pop
mov
outsl
fstpl
or
add
add
cmc
inc
loopne
lret
das
pop
aam
mov
fsubs
push
nop
pop
xchg
nop
pop
sbb
cli
mov
jmp
ret
mov
nop
jg
daa
cmc
mov
jecxz
into
or
andb
mov
inc
test
jge
es
xor
push
outsl
lea
mov
test
lods
xchg
sub
jle
mov
lock
pop
pop
mov
dec
sahf
sbb
xor
inc
add
mov
fdivl
call
pop
fwait
push
pop
and
js
test
mov
les
aad
inc
movsl
mov
push
inc
or
and
inc
and
data16
dec
popf
cmpsl
sub
xchg
dec
movsb
jns
mov
mov
loop
xor
cmp
add
ret
add
bound
mov
dec
add
xchg
push
mov
jae
pusha
add
add
push
pop
imul
pop
sbbl
or
sar
dec
lcall
fcom
fwait
and
jne
inc
inc
sbb
xchg
xchg
cmp
call
in
xor
fistps
and
sarl
loop
mov
xchg
sub
popf
adc
je
dec
pop
cmp
repnz
rclb
adc
adc
clc
mov
or
inc
ret
mov
in
stc
and
mov
test
and
and
add
cmp
or
pop
push
sub
adc
xor
jbe
and
xchg
adc
popf
inc
andl
sahf
adc
in
adcl
pop
mov
sub
and
mov
mov
sbb
repz
fsts
xchg
aam
sbb
xchg
mov
cs
loope
sbb
dec
push
add
cwtl
popl
sub
xor
pushf
cmc
call
movsl
adc
sbb
sbb
sbb
inc
sti
cmp
xor
js
xchg
sbb
xchg
xchg
neg
jne
dec
xchg
std
xor
xor
mov
in
xor
insl
mulb
fnstenv
push
lods
dec
and
xor
dec
dec
inc
leave
fistpl
jp
mov
imul
mov
cltd
aas
dec
daa
xlat
jmp
out
std
push
xchg
mov
scas
enter
inc
pop
mov
xchg
push
jbe
mov
sbb
mov
test
push
fisubl
jb
leave
mov
or
push
lds
cmp
aam
out
and
jae
push
shrb
sbb
sbb
jae
inc
xchg
sti
stos
dec
xor
add
dec
sub
lahf
shll
mov
jns
gs
mov
fcmovne
cmpl
or
and
mov
mov
mov
lea
movl
pop
in
cmpsb
ret
push
jo
push
mov
push
mov
dec
mov
push
mov
repnz
xlat
mov
inc
or
sarl
jl
xchg
out
xorl
sbb
mov
loopne
jns
incb
incl
orl
enter
pushl
out
rol
adc
sub
adc
cs
imul
in
cltd
mov
pop
sbb
imul
dec
xchg
gs
sub
cmp
push
out
imulb
repnz
dec
shl
cwtl
add
shl
je
insb
lods
div
mov
aas
ljmp
jle
push
lods
imul
dec
jp
repz
pusha
repz
sbb
xchg
add
fsubl
iret
std
inc
sahf
clc
nop
int
jne
and
test
imul
cmpsb
push
aas
xor
out
mov
fwait
in
pop
fmulp
mov
sub
cmpsl
cmp
xor
xchg
mov
outsl
xchg
push
mov
ret
inc
ljmp
dec
iret
subl
mov
push
rcrb
cmp
pushf
cltd
pushf
inc
cmpsb
pop
dec
add
jmp
movl
ficoms
rorb
adcb
call
cmp
sbb
or
dec
jge
cmc
fscale
or
cmpsb
inc
inc
inc
loope
push
add
cmpsb
jae
sbb
outsl
into
push
and
test
lcall
jmp
add
mov
mov
mov
sub
hlt
dec
push
jg
fidivs
sub
mov
bound
inc
jg
xchg
inc
inc
js
fldpi
mov
shlb
inc
pause
push
jmp
neg
mov
xchg
call
or
dec
dec
jno
add
les
mov
inc
aam
adc
pop
ja
pop
iret
sbb
dec
or
shlb
push
hlt
divb
rcrb
fldt
outsb
xor
mov
add
inc
mov
lcall
jl
repz
adc
imul
inc
xor
mov
cmp
into
ret
mov
cmp
sbb
mov
addb
sbb
movsb
jmp
mov
adc
sbb
xchg
inc
lds
movsl
mov
jge
adc
pop
inc
cmp
push
add
out
in
sti
lea
insb
hlt
test
cs
rdmsr
lock
fcmovnbe
jg
dec
das
aad
xor
out
mov
enter
into
xchg
jg
xchg
adc
sbb
mov
and
aam
loopne
or
sbb
sbb
adc
xchg
hlt
mov
aam
sbb
jae
fsubr
clc
ss
mov
call
rcrl
shrb
loop
jecxz
jnp
loope
xchg
sub
mov
dec
push
jle
aaa
movsb
jmp
push
mov
scas
pop
sub
sbb
arpl
leave
add
mov
or
cmpl
aad
jns
sbb
leave
sahf
sub
sbb
dec
sub
mov
bound
stos
mov
mov
and
or
push
pop
ret
fstpl
add
dec
jmp
lock
sub
cmp
fnstenv
data16
add
mov
mov
and
mov
push
inc
push
loopne
les
xchg
adc
jmp
mov
cmc
sbb
pop
test
or
sbb
sar
jle
inc
cmp
push
ja
mov
cmp
out
cmp
frstor
xchg
nop
push
pop
rolb
rcrl
add
dec
sub
clc
and
or
mov
mov
andb
add
rorb
xchg
mov
cli
int
jmp
and
dec
xlat
rolb
call
mov
cmp
repz
or
inc
and
or
pop
or
fadds
sbb
jno
and
jmp
mov
sti
loope
xor
inc
cmp
jp
push
mov
inc
inc
push
and
or
ds
rolb
pop
sti
sbb
sahf
in
fwait
cmp
cwtl
adc
js
pop
int3
lcall
fstp
stc
dec
jp
push
rcrb
sbb
and
cmc
lock
lock
aam
mov
pop
in
iret
scas
adc
imull
leave
dec
out
fsubr
cmpsl
cmpsb
sbb
sub
and
call
imul
mov
sbb
arpl
ret
sti
adc
and
mov
scas
add
rorl
clc
repnz
arpl
mov
dec
sahf
inc
aaa
pop
push
adc
sbb
pop
adc
nop
daa
stc
aam
sbb
adc
fstps
add
jb
gs
outsb
cltd
xchg
icebp
jp
ljmp
das
pop
adc
sub
popf
je
cld
adc
movb
and
push
sub
sbb
popf
sbb
mov
push
lahf
cmp
cmpsl
enter
testl
jo
packsswb
or
cmp
inc
scas
cli
in
and
orl
jg
fucom
es
and
inc
cmp
mov
out
add
out
jmp
out
cmpsb
jb
dec
in
sahf
add
sub
push
push
add
insb
pop
xchg
sbb
movsl
xchg
sarb
decl
add
inc
xchg
push
mov
or
xor
jg
jmp
xchg
jp
mov
dec
aas
popf
xchg
mov
push
pop
data16
jl
fs
xchg
leave
pop
jb
cli
pusha
stos
cmp
dec
sub
outsb
cmpsl
hlt
mov
and
pushf
mov
jmp
sub
fisubrl
xchg
leave
cmp
test
rcrl
call
xchg
xchg
cmp
ss
lret
pop
addl
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
mov
testb
mov
mov
test
and
add
cmp
and
sahf
daa
scas
outsl
stos
std
pop
sbb
int3
dec
cmp
test
arpl
xlat
pushf
dec
pop
or
lds
push
shll
mov
mov
push
add
pop
insl
out
pop
and
mov
push
sub
or
dec
cwtl
cwtl
loop,pn
int
jbe
mov
cmp
mov
xchg
ss
sbb
rcl
in
xchg
call
flds
loopne
lock
mov
cmp
pop
mov
pop
adc
push
data16
roll
imul
cmpsb
out
inc
les
and
dec
or
inc
mov
andb
pop
add
clc
jecxz
cmp
jae
cmpl
mov
pop
rcl
mov
mov
repz
or
fs
and
and
adc
pop
xchg
ret
ret
int3
add
push
idivl
jecxz
cwtl
scas
xor
and
jns
pop
mov
nop
cld
lods
test
fbld
jge
les
sbb
adc
loopne
aas
fmulp
pop
add
nop
mov
cmp
lds
jecxz
add
inc
mov
sar
xor
sub
push
adc
lea
in
fisttpl
insl
fnstsw
out
out
dec
cli
sub
adc
inc
fmul
mov
or
adc
shrb
pop
mov
jns
jle
jecxz
mov
lock
and
js
in
cmc
fsubl
push
lahf
outsb
add
jae
cmpl
or
and
push
aas
test
cwtl
inc
fndisi(8087
xchg
sub
aas
movsl
stc
push
ja
xchg
and
cs
mov
xor
jne
mov
jb
push
scas
lahf
mov
icebp
aad
xchg
mov
das
test
stc
jne
out
hlt
imul
insl
xchg
cmp
jbe
nop
add
adc
out
fwait
test
or
pop
insb
pop
ss
fwait
icebp
shr
cmp
fdivr
dec
mov
push
cmp
sti
lahf
aaa
push
mov
and
jns
sub
or
or
mull
pop
add
outsb
cli
sbb
cld
lds
sub
cmp
mov
fs
sub
and
mov
and
push
mov
or
ss
sub
adc
movsl
jbe
pushf
gs
xor
ret
pop
sub
inc
pop
int
out
inc
pop
lret
nop
data16
daa
xchg
imul
lea
mov
std
push
or
xchg
pop
mov
jge
rcr
jmp
out
inc
or
fbld
addl
jno
push
in
je
or
inc
stos
cmp
enter
dec
mov
dec
int3
cmp
xchg
fadd
mov
pop
mov
rclb
loope
les
out
pop
adc
sub
addb
sbb
xchg
and
in
jnp
call
outsb
in
push
bound
jne
xchg
mov
dec
jmp
cmp
dec
xchg
std
mov
inc
subl
and
jl
or
pop
dec
jge
xchg
mov
movsb
out
mov
pop
sbb
adc
adc
hlt
inc
loopne
xchg
push
xor
cli
cmc
pop
mov
push
mov
and
xchg
mov
jle
shlb
idivl
rorl
test
outsl
sub
sbb
pop
sbb
dec
pop
push
adcl
jmp
lock
mov
popf
icebp
mov
add
addr16
add
stos
jns
nop
add
pop
bound
and
xor
inc
mov
adc
push
dec
jno
pop
cld
sbb
js
pop
je
jmp
cmp
xchg
ret
adc
ret
and
push
pop
cmp
xchg
add
adc
int3
jno
xor
or
lods
test
lds
adc
mov
test
push
fwait
adc
popl
or
in
mov
in
dec
fs
loope
mov
loop
jmp
cmpsb
lret
stos
pop
cmp
outsl
imul
xor
iret
or
pop
sarl
add
aas
and
or
movb
push
sbb
or
iret
or
icebp
out
xor
data16
mov
or
shlb
push
loop
cs
jo
and
pop
jae
xchg
or
bound
cmc
mov
mov
dec
sub
vpcmpgtd
hlt
cli
xchg
sub
scas
mov
xchg
int3
jp
pop
push
dec
out
jns
hlt
inc
imul
dec
cltd
mov
ja
sbbl
jmp
jnp
aaa
fs
jl
imul
mov
out
push
scas
sub
cmpsl
icebp
mov
mov
add
aaa
or
pop
imull
call
sbb
dec
jb
dec
cld
jbe
and
jp
lea
fwait
ljmp
dec
sti
addl
mov
xchg
dec
stos
and
xor
xor
shrl
js
pop
mov
mov
lea
xchg
sbb
inc
nop
loop
xor
mov
xor
mov
icebp
incl
arpl
dec
push
lods
adcl
data16
cmp
test
push
outsb
aad
lock
inc
icebp
push
cmovo
jecxz
ret
push
xor
lods
fistl
push
fsubr
xor
sti
loopne
rcr
cli
ret
mov
xchg
fsubrp
ljmp
pop
lret
test
ud1
pop
adc
es
jl
sub
mov
xchg
cmp
pop
stos
add
jo
scas
aad
add
sarb
mov
jmp
mov
ret
data16
sahf
xlat
mov
outsb
lds
pop
sar
pop
les
repnz
mov
call
rolb
repnz
es
js
into
aam
aad
mov
sbb
aas
add
cmp
js
sti
cmp
cmp
xor
cmpsb
mov
int3
jne
dec
sub
xchg
xor
mov
daa
leave
adc
repz
in
ljmp
cmp
dec
sub
mov
addr16
flds
mov
mov
daa
arpl
mov
xlat
dec
sub
adc
scas
and
push
push
xor
test
mul
inc
adc
push
addr16
insb
and
sbb
fidivrs
mov
sbb
mov
pusha
adc
cmp
enter
ljmp
in
cmp
lea
sbb
rcl
push
icebp
push
rorl
and
mull
lret
out
and
fcmovnb
cmpsl
jge
adc
push
dec
mov
add
pop
dec
mov
push
adc
lret
inc
push
imul
sub
add
hlt
fwait
rol
sbb
fdivl
jmp
sub
and
cwtl
shl
jg
jp
ficomps
stos
jle
jge
sbb
ja
cli
fwait
xor
loopne
into
repnz
adc
or
pop
push
movsb
sbb
cmp
adc
inc
lods
loop
push
mov
push
cmp
and
sarl
mov
or
or
movsb
sbb
jnp
call
imul
pop
movsl
leave
add
mov
or
jno
push
push
lea
cmp
int3
mov
and
fistps
jb
sbb
cmp
jmp
cs
call
cmpsb
sbb
adc
inc
jge
push
push
cmp
orb
mov
cmp
in
icebp
test
jp
iret
pop
out
sub
mov
jmp
add
std
xor
pop
jno
ja
pusha
adc
dec
mov
loope
jp
outsb
xlat
inc
xor
insl
cwtl
stos
push
push
es
xor
mov
mov
jg
pop
inc
jmp
mov
loope,pn
adc
pop
push
add
js
jnp
or
xchg
and
popl
dec
sti
test
xor
ret
mov
sbb
pop
jl
cli
andl
je
pop
lret
data16
xor
sbb
popa
es
push
insb
adc
adc
fistpl
cmpsb
xchg
jnp
call
jecxz
aad
cmpsl
test
nop
pop
jle
mov
popa
jae
mov
stos
pop
mov
inc
orl
adc
popf
ret
jle
int3
incb
mov
cmp
or
leave
xchg
imul
outsl
repz
mov
sbb
loope
sub
adc
mov
xchg
pop
xchg
sub
jne
pop
inc
call
cmp
xor
std
pusha
arpl
loop
call
das
push
jle
shll
adc
out
enter
dec
dec
int
xchg
jl
repnz
mov
out
cmp
push
pop
not
dec
xchg
sub
or
dec
mov
test
sub
iret
mov
xchg
shrl
lds
nop
mov
mov
or
sub
fmull
sbbb
nop
dec
decl
das
mov
aas
aam
and
cmp
xchg
jmp
stos
sub
cmc
fcmovu
xchg
fdivrl
data16
in
add
int3
xor
jp
and
fnstcw
adc
push
mov
pushl
sbb
dec
xlat
pop
cmc
push
xlat
shll
pop
add
xchg
push
dec
add
sbb
clc
test
or
cmp
inc
test
mov
dec
inc
mov
test
mov
dec
jb
mov
sbb
ss
sbb
mov
xor
adc
jmp
lcall
mov
adc
out
fldt
movl
outsl
adc
pop
dec
cltd
out
outsl
xchg
int3
frstor
pop
xor
push
jg
jmp
cld
cmp
mov
sbb
in
ret
cmpsb
adcb
jge
push
or
pop
ljmp
fisubs
int3
push
test
inc
xor
aad
das
xlat
popa
xchg
out
xchg
fimull
push
addl
jns
jo
dec
mov
pop
push
mov
xor
ds
ljmp
sarl
cmpsb
pop
ret
xor
add
sbb
jb
or
test
mov
cli
xor
outsl
testl
pop
inc
ja
mov
ja
cmpb
add
data16
or
pop
rcl
movsb
inc
jge
addr16
xor
jmp
sbb
mov
jo
mov
iret
mov
cmp
loopne
mov
mov
mov
rol
lret
jne
mov
out
jle
cmovg
int
mov
add
rclb
or
inc
mov
mov
pop
or
pop
or
jp
das
and
push
fdivl
pusha
fs
xchg
or
inc
stc
stc
or
adc
pusha
fmuls
pop
not
mov
or
and
sahf
fsubl
outsb
and
adc
adc
repnz
cmpsl
int3
pop
imul
sbb
xor
call
push
sub
pop
hlt
daa
xlat
sub
push
xchg
sbb
mov
push
repz
out
and
mov
jno
push
popf
xchg
xor
sbb
ficomps
add
add
popa
fimuls
or
lahf
sti
dec
jle
push
shrl
mov
mov
loop
dec
lds
inc
test
stc
ljmp
mov
mov
mov
lcall
dec
test
ret
call
inc
mov
adc
movsl
decb
push
js
jmp
fidivl
fsubl
ss
push
notl
mov
hlt
jmp
sub
pop
in
fs
int3
mov
inc
pushf
xchg
push
std
dec
pushf
rorl
shlb
mov
test
test
aas
mov
int3
and
inc
inc
pop
adc
in
sub
push
lahf
movsl
mov
push
push
arpl
repnz
or
xchg
jge
sbb
push
scas
das
push
in
pop
incl
cs
stos
cmc
loope
movsl
orl
stc
xchg
pop
xchg
sub
push
in
call
arpl
adc
shlb
incb
add
inc
jae
mov
lahf
push
push
stos
int3
sub
lea
mov
dec
xor
push
sbb
inc
shlb
pop
jle
mov
insb
mov
ljmp
iret
fiadds
nop
and
imul
aas
loop
stos
or
cmp
push
fnstcw
adc
aaa
cmpsl
int
and
lcall
dec
sti
ret
or
stc
into
call
inc
repnz
rorb
and
inc
jne
mov
xor
icebp
xor
sarl
pop
daa
sbb
dec
fdivrl
adc
jbe
js
add
fldt
in
jnp
lods
out
dec
lods
xor
es
adc
pop
sbb
cmp
or
das
popa
in
mov
pop
xor
mov
jae
push
xchg
add
in
jno
shll
mov
cmp
roll
mov
fmull
data16
inc
cvtps2pi
loopne
inc
jnp
test
mov
stc
clc
mov
adc
shll
lock
dec
adc
cli
jg
pop
jle
or
mov
push
ret
or
test
mov
shlb
scas
sub
jmp
lret
popf
mov
data16
and
pop
dec
filds
push
data16
xor
cld
sbbl
int
mov
mov
mov
shlb
dec
iret
mov
jns
jp
loope
push
dec
aaa
cmpl
mov
les
shll
sbb
pop
test
xlat
mov
sbb
push
inc
das
into
cmp
in
xchg
insb
stc
out
push
cmpsl
jae
push
jne
orl
xchg
roll
mov
xchg
fbld
cmc
lods
fidivs
loope
inc
pushf
mov
addl
add
imul
data16
inc
int3
sbb
repz
xchg
and
movsl
cmp
vcvtpd2dqy
mov
mov
mov
insl
sbb
mov
movsl
in
sub
repnz
mov
iret
outsl
xchg
sub
xor
call
adc
dec
xor
sub
test
stos
pop
cmp
lods
push
push
fadds
and
sbb
fisttpl
dec
int
test
add
lods
jp
xchg
cmpl
and
push
push
jle
or
push
push
inc
push
inc
negb
int3
jl
pop
mov
mov
pusha
push
cmc
cs
arpl
out
dec
or
push
rorb
xor
sarl
out
out
push
aaa
cmp
jns
push
jg
pop
cld
loop
sub
call
pushf
xchg
incb
pop
ss
pop
pop
jno
pop
dec
scas
sub
ljmp
push
xchg
xchg
popf
divps
aad
lcall
jb
xor
jnp
les
cli
add
ds
and
add
mov
cmpsl
in
shrl
das
in
dec
orl
dec
out
test
add
hlt
adc
test
xchg
mov
xlat
xor
pop
adc
lea
dec
daa
arpl
sbb
jns
pop
insb
dec
cmp
aam
icebp
sbb
nop
pop
mov
enter
and
dec
repnz
aas
add
sbb
insb
outsl
mov
out
mov
pop
push
pop
inc
jl
sti
push
push
sub
push
sub
test
stos
ret
pop
jnp
jnp
mov
negb
dec
sub
incl
add
push
popa
dec
iret
jae
and
rcll
bound
pop
into
pop
push
adc
mov
repnz
aam
shll
out
push
test
mov
in
add
xchg
arpl
mov
into
ss
out
cmp
in
xchg
or
mov
addr16
xchg
imul
inc
out
inc
jne
pop
movsl
adc
iret
push
aad
mov
push
jns
cltd
cmc
xor
out
jnp
pop
add
test
jle
sub
mov
jg
xchg
ds
jge
aam
outsb
lds
roll
mov
or
mov
in
dec
sbb
pop
mov
push
cmp
subl
jnp
cmp
or
dec
jg
mov
loope
jg
out
insb
push
cmp
xor
shlb
inc
fisubrs
jp
in
stos
mov
and
pop
ffreep
pop
pop
sbb
adcl
mov
xor
push
repnz
dec
inc
enter
hlt
pop
adcb
out
ss
sub
pop
lret
data16
dec
into
pop
push
ds
or
pusha
xor
mov
sbb
mov
inc
jmp
fldl
cmp
out
fistps
jno
pop
loopne
pop
pop
sahf
and
inc
stc
push
and
or
scas
mov
loopne
add
xchg
fnstcw
mov
mov
scas
imul
mov
enter
sub
mov
dec
xlat
cmpsl
into
push
mov
lods
xor
sbb
push
arpl
or
mov
and
dec
fidivrl
push
add
cmp
xor
mov
adcl
lds
scas
push
add
add
pop
jo
mov
xchg
movsb
iret
leave
loope
xlat
scas
out
into
sbb
cmp
mov
loopne
mov
movsl
pop
inc
push
addr16
push
fistps
inc
mov
xchg
cmpsb
dec
test
jl
std
jge
popf
cmp
ds
jnp
dec
mov
out
imul
sarb
loop
jle
adc
adc
jns,pn
loopne
pusha
int3
jne
leave
repz
mov
out
scas
add
test
shll
ja
push
jno
push
jb
push
dec
xor
push
shr
sahf
lds
sbb
mov
stc
pop
cld
mov
daa
mov
push
jns
out
fs
push
and
mov
outsl
lahf
out
push
pop
pop
mov
or
dec
or
push
xchg
mov
popf
pop
cli
pop
and
loop
ret
mov
add
or
sbb
xor
and
inc
enter
clc
test
push
inc
cwtl
cmp
arpl
orb
mov
push
add
mull
pop
nop
repz
push
lahf
push
sub
push
add
or
jle
out
ficomps
shlb
imul
lea
push
mov
sub
pop
loope
rolb
lea
or
lods
sbb
das
les
push
imul
or
xor
mov
sbbb
out
cmp
mov
idivl
out
fs
lods
mov
cmp
xchg
pop
loopne
into
loopne
scas
adc
sbb
fadds
push
mov
push
xchg
mov
or
ficoms
jnp
jns
fwait
push
scas
je
rorb
push
inc
jbe
fs
pop
aaa
nop
leave
mov
rcrl
add
push
out
rcll
adc
insl
subl
xchg
dec
sahf
jae
sahf
out
mov
in
push
add
xor
insb
aad
pop
movsl
pop
mov
push
out
ret
push
and
sbb
je
icebp
loopne
lret
xchg
ficompl
rcrl
es
das
mov
adc
xchg
or
mov
int
adc
mov
mov
jp
je
add
addr16
mov
imul
fcmovnu
mov
ljmp
push
pop
in
dec
mov
sub
mov
iret
fstl
mull
mov
add
sti
cld
iret
sbb
stos
clc
loop
inc
mov
pop
cmp
ljmp
cmp
sbb
sti
push
aad
daa
into
movsl
out
cld
dec
dec
pusha
testb
push
je
inc
push
in
aam
jl
int3
cmp
lea
push
push
outsb
or
dec
stos
mov
in
lret
adc
cs
sbb
in
xchg
mov
sbbb
seta
sub
negb
inc
dec
enter
adc
jle
push
stos
pop
bound
das
dec
sub
xor
call
imul
aas
dec
rcrl
adc
xchg
lock
insb
call
or
xchg
sub
bnd
out
loopne
jb
xchg
in
stos
fidivs
cmpsb
mov
stos
adc
mov
clc
inc
ret
outsl
or
pop
mov
cwtl
dec
dec
dec
cmpsl
enter
incl
je
aas
cmp
lods
gs
cmpsl
sub
dec
xor
mov
sbb
jl
gs
test
push
iret
imul
in
je
or
cmp
adc
mov
aad
xor
inc
in
mov
dec
ret
call
xor
fwait
aam
fimull
pop
jmp
add
popa
push
push
jne
mov
xor
arpl
pop
ja
test
lock
inc
cwtl
push
xor
fmulp
pop
lahf
repnz
or
rcrl
pop
ljmp
jle
popa
lea
loope
mov
mov
ret
mov
adc
imul
in
mov
cmovp
imul
ds
mov
push
jle
jl
mov
push
dec
lds
popf
lds
fisttps
fdivl
out
hlt
push
push
and
fdivr
mov
insb
loop
dec
cmpsb
clc
pop
movsb
das
mov
xor
dec
popf
inc
cltd
jmp
jg
ret
ljmp
mov
mov
adc
or
out
cld
cmc
cli
in
adc
notl
decb
test
hlt
sub
pushl
xchg
push
xor
add
push
sbb
sti
sub
mov
mov
repnz
sbb
mov
mov
out
xchg
xchg
xchg
cltd
pop
and
or
daa
es
push
jno
jb
push
fisubrs
loopne
inc
roll
in
insl
lock
rolb
push
or
push
lds
je
fdivl
push
sub
lret
xchg
jle
ret
aas
ss
test
pop
adc
iret
popf
xor
shrl
jp
push
xlat
adc
inc
mov
push
mov
out
hlt
out
push
jecxz
lret
gs
outsl
dec
mov
sbb
lret
dec
push
shlb
lods
pop
adc
add
mov
dec
ljmp
in
fisubl
dec
jbe
xor
push
fsubr
ret
and
dec
cmp
es
popa
mov
out
inc
fisubl
nop
xor
ljmp
sahf
outsl
fists
inc
push
test
add
xor
test
loope
cmp
lds
xor
sbb
int
cmp
sub
std
lock
pop
xchg
in
aaa
fs
push
adcl
stc
loop
sbb
add
sbb
xor
add
jmp
jnp
scas
lds
loop
scas
or
jp
cmp
jbe
movb
das
xchg
ds
fs
enter
fstpt
pusha
sub
cli
repz
push
or
into
pop
out
clc
ret
clc
mov
sbb
xor
shlb
int3
xchg
jbe
sbb
adc
inc
lock
mov
and
lret
stos
daa
hlt
into
mov
and
repnz
lea
pop
lea
pop
and
xor
stc
outsl
push
pop
adc
sub
xchg
repnz
sarb
push
test
add
int3
mov
jmp
dec
adc
mov
iret
push
pop
idivb
mov
out
in
adc
mov
xchg
ja
dec
into
mov
cld
or
out
test
ds
xchg
or
cmp
xchg
cmp
imul
sub
mov
sbb
push
sti
mov
push
add
popf
clc
pop
sbb
inc
mov
ficoml
pop
jb
fmul
sub
les
or
cmpsl
cmpsb
lea
movsb
xlat
pop
ja
jnp
sub
sub
out
sbb
inc
das
and
mov
sbb
and
aaa
mov
dec
pop
pop
lods
sub
adc
xor
add
and
xchg
cs
lods
fcompl
lcall
inc
in
adc
sarb
sub
idivb
je
adc
adc
sbb
ljmp
loop
fadd
loopne
and
cmp
xor
jecxz
mov
lea
imul
sub
push
mulb
sbb
cld
in
pushf
jnp
lds
jl
rorl
jno
popa
sub
and
mov
outsl
jecxz
pop
rcll
out
lea
jbe
push
cmpsl
jnp
popa
xor
pop
shrb
ds
popf
call
jb
mov
loope
pop
int3
or
enter
jbe
out
icebp
icebp
movsl
cmp
sbb
cmp
push
xor
cmp
sub
dec
pop
sarl
mov
stos
sbb
enter
inc
jg
mov
xor
lea
in
dec
fs
cmp
cs
cmpsl
fldt
and
outsl
mov
sarl
inc
ret
fxch
dec
test
sub
push
negb
sub
jae
sbb
sub
dec
mov
mov
mov
test
popf
orb
out
jo
jecxz
push
xor
adc
test
pop
stos
ss
aaa
call
out
stos
cmp
sarl
jns
jo
adc
gs
out
mov
loop
inc
stc
dec
cmp
xor
outsl
cltd
lret
mov
jmp
dec
aas
push
ja
out
or
lcall
add
pop
xchg
add
adc
push
dec
or
je
in
cmp
add
inc
in
dec
ret
aam
mov
xor
lea
pop
incl
in
addr16
ss
pop
insb
inc
loope,pn
repz
into
push
push
xor
rol
out
cli
sbb
xchg
adc
fisubrl
daa
jns
dec
aad
mov
xchg
dec
jp
test
aam
out
cli
jg
daa
xlat
pop
mov
cmc
or
mov
out
adc
imul
lds
pop
dec
jno
cmp
out
lods
orl
stos
in
jl
movsb
and
xor
into
cmpsl
add
mov
or
mov
in
push
mov
mov
cwtl
and
add
fbstp
hlt
xor
aaa
xchg
cmp
daa
pop
and
sub
scas
and
sub
dec
arpl
push
cld
push
inc
mov
test
rol
js
mov
popf
ja
inc
and
push
cmpsl
dec
push
icebp
fiaddl
pusha
fistl
mov
bound
adc
pop
inc
mov
push
stos
or
jae
mov
data16
add
sub
mov
mov
shl
mov
addr16
dec
fldl
lods
push
xor
dec
and
icebp
test
enter
in
out
push
insb
insb
and
fisttpll
and
in
lods
std
xor
or
jle
insb
enter
and
stc
xorb
adc
mov
shlb
mov
xchg
mov
ljmp
xchg
lods
push
xchg
push
loope
jg
loop
adc
out
or
repnz
fdivrs
test
popa
mov
and
js
int3
cs
lea
cli
int3
idivb
dec
sub
add
jo
addr16
xor
mov
inc
push
stos
jmp
sbb
test
mov
sti
jno
jp
push
popf
movsl
dec
and
jle
loope
test
mov
and
pop
push
xchg
add
jp
add
xor
xor
cmp
loopne
shll
inc
cld
add
sbb
pop
sub
add
clc
xchg
pop
and
add
sbb
mov
ss
jecxz
sbb
adc
inc
arpl
adc
bnd
inc
pop
add
imul
sbb
cmpsb
call
xchg
dec
or
mov
inc
pusha
fldcw
inc
bound
mov
mov
mov
jo
std
dec
xchg
ja
test
xor
scas
inc
out
xor
aas
insl
xchg
xlat
pop
or
sub
jb
scas
cmpsb
imul
aas
int3
pop
pop
sbb
jp
cmpsl
push
lock
jle
enter
enter
in
clc
test
dec
jle
xchg
or
es
sub
and
icebp
push
int
arpl
mov
mov
js
es
bound
mov
arpl
fwait
mov
cltd
lock
adc
fcom
push
subl
cmp
fisubl
push
sbb
addb
test
iret
cmp
xor
push
xor
cmp
pop
outsb
loope
cs
xor
dec
jge
shrb
xor
cmpsb
lcall
adc
push
mov
mov
mov
enter
inc
and
daa
fdivp
enter
iret
rcrb
lea
cli
ds
fcomip
paddq
push
adcb
scas
push
int
fwait
test
push
inc
jo
xchg
outsb
cwtl
inc
inc
xchg
pop
xor
sub
mov
mov
mov
xchg
mov
imul
mov
mov
fisubs
sub
xor
cmc
mov
bound
xor
in
icebp
pop
jecxz
fcompl
inc
inc
fldcw
sub
sub
rorl
mov
dec
movsb
rolb
dec
pop
add
mov
adc
aas
mov
add
into
push
fistps
push
inc
outsl
adc
lock
fnstenv
inc
sub
sbbb
mov
addr16
pop
push
inc
stos
mov
lret
sahf
jbe
pop
push
mov
lea
jecxz
sbb
and
xchg
insl
add
scas
mov
fcoml
sub
jecxz
adcl
jne
repnz
addr16
insl
test
lahf
mov
xor
pop
xchg
out
aad
popf
mov
dec
lds
mov
mov
push
mov
loop
and
es
mov
dec
rorl
fdivrs
cs
loopne
inc
mov
mov
xor
sub
push
or
fstps
fldcw
jbe
fdivrs
mov
loop
add
rcl
faddl
ds
or
jno
cmpsb
jb
push
inc
arpl
or
inc
pop
mov
cmp
rcrl
andb
leave
inc
data16
or
xor
sub
sub
les
mov
dec
xchg
aas
lret
xchg
dec
addl
pushf
inc
pop
fs
jmp
pop
push
loop
and
std
jb
cwtl
inc
push
inc
push
adc
xchg
nopl
mov
push
cmp
push
xchg
and
lock
cmp
xor
mov
insl
mov
lret
out
rolb
sbb
stos
mov
push
add
add
add
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
add
rolb
orl
and
in
mov
out
pop
xor
fsubs
xlat
xor
loop
icebp
lds
mov
je
dec
dec
push
jge
add
and
mov
jno
je
pop
mov
out
pop
iret
cmp
sbb
sub
into
rolb
mov
mov
sub
and
jle
mov
xor
mov
stos
test
add
sbb
inc
je
int
pop
or
orb
push
call
xchg
add
inc
in
push
add
mov
out
mov
dec
int
outsl
push
fadd
pop
inc
les
rcrb
adc
movsl
lcall
pusha
sbb
ds
call
cmp
pop
shll
xor
ljmp
push
push
add
fistpll
and
xchg
ret
dec
lret
lods
or
sbb
out
in
in
jne
les
adc
dec
movsl
push
lret
leave
pop
sub
sbb
rorb
jg
into
fiaddl
iret
clc
adc
fldt
xor
jmp
shr
xor
push
sub
push
dec
jbe
and
mov
xchg
jnp
fisttps
mov
dec
sub
jle
inc
dec
ljmp
scas
cmp
sbb
je
orb
fsts
test
ror
inc
jp
jecxz
rorl
sub
dec
mov
pusha
sbb
daa
add
lahf
mov
lret
inc
mov
fldl
lret
cmp
cmc
int
lret
lock
sbb
fxch
mov
lret
clc
cmp
inc
ficoml
jge
jnp
or
aas
inc
jge
push
mov
xor
popf
ljmp
pop
repz
popa
imul
jle
sarl
into
dec
repz
lret
jbe
clc
sbb
mov
movsb
sti
dec
sub
push
sahf
lret
xchg
jo
inc
mov
rcrb
int
mov
cmpsl
add
or
jns
add
push
lret
mov
sbb
stc
xlat
ss
and
je
movsl
out
dec
inc
dec
jbe
jmp
in
jo
loopne
repnz
cmp
cmp
mov
sbb
mov
hlt
repz
xor
fdivrs
sbb
cmp
pop
dec
pop
mov
fs
in
sub
mov
pop
notb
pushf
cmp
imul
aad
xor
flds
or
inc
psubusb
mov
cli
push
xchg
jne
stc
andb
sahf
dec
stos
push
fcomps
lods
stos
push
sbb
adc
adc
cmp
adc
xchg
aad
stos
ret
jae
inc
xchg
cwtl
out
addl
scas
out
sahf
dec
bound
or
mov
das
orb
sbb
test
filds
sub
ja
sub
cmc
xchg
mov
popa
repnz
outsl
scas
inc
inc
enter
shrb
cli
add
mov
cli
mov
push
xor
cmc
lods
lea
xchg
cmpsb
insl
js
aad
sarl
fsts
push
and
dec
or
or
mov
mov
mov
sbb
or
and
fstpt
addl
insb
xorl
out
js
xor
pop
adc
sbb
rorb
pop
icebp
test
push
pop
mov
loopne
lret
lret
jns
jmp
sbbb
mov
pop
sti
stc
dec
loop
or
jp
div
icebp
jb
sbb
lea
cld
adc
xor
shlb
aas
sub
shl
cmp
or
sarl
cmp
sub
mov
test
cwtl
mov
test
xlat
and
mov
jbe
or
popa
cmc
mov
leave
xor
and
inc
sbb
les
xchg
mov
jne
stos
sbb
movsl
sub
or
stos
pushf
cld
xor
push
cld
hlt
jb
out
push
lock
adc
push
cmpsb
and
jo
icebp
test
lods
push
sub
aas
arpl
sub
sbb
setl
enter
lds
jle
fwait
adc
sub
pushf
dec
test
idivb
pop
pusha
test
sbb
cmp
aaa
jno
out
push
dec
mov
mov
add
adc
mul
mov
adc
xchg
repnz
mov
sub
arpl
lock
and
mov
lea
out
xor
test
call
mov
sub
mov
xchg
cmpsl
mov
add
cs
jl
out
xchg
inc
insb
loopne
mov
jne
pop
arpl
and
loopne
add
pop
and
mov
mov
mov
ja
movsl
pop
in
mov
adcl
jmp
ss
dec
sub
aas
xor
test
loopne
mulb
cli
mov
and
fmul
pop
stos
sub
mov
in
clc
dec
imul
cwtl
dec
adc
test
nop
rcrl
outsl
pop
cmp
mov
jo
inc
pop
pop
mov
cli
inc
push
jbe
xor
mov
mov
add
mov
es
repnz
inc
adc
add
sahf
push
jl
in
xlat
mov
mov
pop
jle
ss
mov
mov
xor
sub
cltd
mov
loop
inc
sub
xchg
out
inc
dec
icebp
arpl
adc
xchg
or
xchg
jp
adcl
addl
daa
mov
push
cmp
adc
loopnew
inc
inc
mov
lret
xchg
xorl
mull
lock
outsb
push
xchg
into
xchg
rcr
dec
mov
mov
or
sub
pushf
cmpsl
pop
lcall
nop
cmp
pop
sub
pushf
sbb
std
shl
out
je
repnz
xchg
jae
push
mov
outsl
xor
popa
fists
or
lea
cmpsb
push
pop
jmp
sbb
andl
ljmp
test
das
inc
lods
xlat
filds
pop
xor
cmp
or
dec
cmp
out
push
lock
pop
stos
adc
sub
and
sub
decb
push
fldt
push
in
inc
fcmovnb
mov
xchg
movsl
xchg
pop
loope
or
lods
lret
mov
mov
hlt
push
int3
push
ds
loop
lock
lret
inc
jecxz
movsl
std
xchg
mov
shlb
jp
push
je
cltd
out
or
outsb
mov
fildl
jb
adc
and
cmp
fpatan
mov
xchg
popf
xchg
nop
fadds
stos
pop
je
mov
hlt
sti
add
xlat
lods
xor
insb
inc
xchg
out
jae
push
insl
shlb
sub
in
mov
and
es
out
dec
lea
and
adc
inc
or
loopne
test
arpl
add
mov
sub
out
scas
inc
jecxz
fisubrl
mov
or
inc
cltd
stos
adc
xlat
mov
add
das
ja
inc
push
and
inc
cli
loopne
push
mov
fsubs
push
sub
rorl
xor
mov
dec
adc
adc
lods
add
inc
popa
adc
xchg
and
test
aam
cwtl
and
jge
mov
push
ss
lea
add
aaa
jle
sbb
lcall
outsl
push
push
mov
ja
sti
adc
fidivs
adc
dec
repnz
cs
cmp
push
mov
jnp
movsl
jns
jnp
scas
out
adc
sti
jecxz
aas
cmp
cmp
lret
into
out
fwait
outsb
ds
mov
sbb
test
xor
scas
testb
fmull
xor
and
mov
sbbb
or
adc
out
daa
cmpsl
or
jmpw
sti
sub
lcall
xor
inc
mov
test
add
aaa
cli
sub
xor
loopne
pop
mov
push
test
mov
xor
inc
jmp
cmpsl
xor
ficoms
sub
mov
ret
mov
push
sub
cmpb
addr16
adc
lcall
shll
loopne
pop
or
mov
lds
sahf
ja
push
dec
fs
and
shrl
push
cltd
orl
pop
out
pop
aad
push
or
cmpsl
fwait
sub
cmp
imul
not
inc
jmp
lcall
testl
push
xchg
pop
xor
pop
pop
sbb
fdivrl
clc
ror
push
js
imul
out
lea
imulb
pop
ja
xchg
ss
jno
pop
xor
xchg
fildll
mov
mov
cmp
loopne
jge
fbld
insb
invd
push
andl
sbb
mov
xchg
and
xor
cmp
out
pop
lds
sbb
popl
inc
adc
fnsave
out
lahf
push
hlt
xor
dec
jo
ret
or
imul
dec
daa
into
add
xor
ret
aas
inc
stc
test
or
out
xor
stc
push
out
xor
mov
jae
aad
ss
xor
xchg
jmp
enter
add
adc
aas
loope
daa
loope
fwait
ljmp
iret
out
or
outsl
pop
xchg
cmp
push
cli
loop
insb
pop
mov
xor
inc
loop
mov
outsl
sarl
outsb
push
outsl
rcll
and
xchg
sbbl
lea
pop
push
rcll
ss
cwtl
lcall
mov
mov
jno
cmpsb
aad
faddl
outsl
in
lret
iret
mov
jae
adc
ret
jne
or
push
push
xchg
sub
scas
clc
sub
and
cwtl
in
xchg
inc
jmp
daa
bound
jecxz
mov
jno
and
pop
sub
data16
in
pop
stc
mov
jle
jg
popa
movsl
in
out
into
stc
loope
push
imul
in
push
or
shld
sbb
shll
mov
testl
daa
cmp
out
nop
adc
in
test
sar
mov
mov
in
pop
int
arpl
mov
dec
fiaddl
adc
xchg
ss
jge
or
std
sbb
shr
mov
add
stc
sub
dec
lret
lock
daa
pop
shrb
dec
repz
and
lods
addr16
lock
stos
push
or
add
cmp
jns
mov
daa
dec
sub
cs
dec
cwtl
pop
sub
test
sub
sub
mov
mov
sbb
or
int
enter
xchg
xchg
mov
and
sub
cmp
clc
pop
jp
shll
popa
hlt
mov
push
cmpb
mov
stos
gs
jle
mov
ljmp
xchg
xchg
popa
xor
test
iret
je
adc
xor
add
mov
sub
gs
push
mov
jg
clc
mov
repnz
rorl
sub
adc
lret
jg
je
mov
fnstenv
jmp
inc
loope
int3
add
and
out
xor
push
push
and
outsl
jg
jno
in
fs
gs
enter
mov
mov
mov
sbb
mov
pop
push
hlt
andl
cmp
cmp
xor
mov
add
dec
or
and
shlb
aad
cli
sbb
mov
dec
std
inc
addr16
push
lds
jae
xchg
lock
ret
mov
inc
ja
ljmp
mov
fisubrl
vpmacswd
roll
sbb
mov
incl
aas
jae
pop
addl
mov
movl
adc
in
stos
dec
and
test
das
sbb
fcmovu
outsb
push
sbb
cmc
mov
es
loopne
ds
dec
lcall
mov
movsb
dec
in
adc
imul
sub
jle
xchg
lahf
test
mov
aaa
xchg
shll
rclb
outsl
lea
mov
rcl
shlb
pop
loop
add
je
add
xor
sbb
mov
mov
ja
mov
mov
mov
pop
insb
jle
xchg
dec
pop
sub
repnz
push
mov
adc
sbb
lods
push
jmp
or
inc
cwtl
out
test
cmp
sub
xchg
shll
push
in
cli
mov
xor
inc
adc
iret
push
out
jge
inc
aas
mov
cmp
arpl
subb
std
and
xchg
mov
add
xchg
sbb
adc
inc
fimuls
sti
mov
mov
xchg
inc
push
inc
pop
int3
cmp
jns
in
lods
xorl
iret
pop
dec
pop
movsl
jl
jnp
nop
mov
bswap
out
jb
test
inc
pop
xchg
cmp
ret
and
rorb
inc
mov
out
lods
stc
mov
jae
sbb
xchg
xor
push
add
scas
push
loopne
xor
mov
rclb
fsubl
pushf
adc
or
andb
daa
les
ret
inc
pop
xchg
inc
loop
notl
ret
inc
out
pop
mov
or
jno
fstpl
inc
jle
xchg
out
adc
cmpsl
jae
push
roll
adc
lret
mov
scas
jnp
in
dec
mov
add
push
shrl
aaa
sbb
jle
outsl
xor
jnp
pop
loop
sbb
fwait
pop
push
ja
sub
sti
cmp
sti
sub
inc
shll
xchg
xchg
xchg
repnz
mov
jno
mov
cld
cmp
mov
aaa
loope
inc
insl
add
add
lea
pusha
mov
dec
push
push
popf
mov
aaa
and
fisubrl
addr16
leave
add
rolb
push
push
mov
cmpsl
adc
sbb
pop
ljmp
movl
inc
cmp
dec
push
in
jg
dec
sub
ret
push
push
mov
push
out
or
lahf
xor
xchg
cld
pop
js
pop
dec
push
in
int
xchg
rolb
push
es
adc
cmp
das
push
loopne
ret
adc
mov
int
add
pop
push
cli
movsl
cmp
sbb
jge
stos
fidivrl
dec
mov
stc
flds
jg
shll
insl
repz
xchg
leave
pop
dec
push
jno
ja
sub
outsb
jns
movsb
sbb
ret
in
xlat
mov
and
shr
adc
mov
rcrl
cmp
test
or
out
aaa
mov
push
push
mov
call
scas
gs
shl
jne
lods
stos
sub
dec
xor
xor
xor
popf
mov
shrl
and
cltd
adc
fildll
in
lahf
dec
push
sub
testb
in
es
mov
inc
dec
xchg
out
mov
out
xchg
cmp
or
pop
lar
jno
push
sub
rorb
cmc
mov
sbb
pusha
or
and
orl
push
cmp
insb
nop
lock
xor
popa
in
aad
jmp
jl
dec
pop
xchg
inc
imul
xor
dec
jae
jbe
mov
sub
fmul
out
mov
mov
ds
pop
mov
add
shr
mov
jno
mov
lcall
jne
leave
push
cmp
into
mov
cmc
inc
push
rcll
mov
add
fadds
popf
sbb
dec
sbb
xchg
sbb
je
in
outsl
dec
movsl
sub
xchg
test
mov
fwait
jbe,pt
test
and
xchg
sbb
jp
dec
mov
pop
sub
dec
sbb
inc
xlat
movsl
shl
jmp
mov
cmpsb
ret
lea
dec
xor
imul
dec
push
scas
mov
outsl
imul
sub
dec
mov
in
mov
sbb
imul
lret
cmp
mov
and
stc
jp
pop
ljmpw
outsb
lods
ja
aad
loope
mov
add
pushf
xchg
cs
enter
mov
daa
jmp
cmc
or
cmp
sahf
ret
fcmovnb
push
xchg
es
or
loope
jp
push
dec
out
shrl
jns
rolb
test
cli
mov
sahf
loopne
or
mov
lds
loop
mov
cmpsl
imul
and
mov
movsb
fcompl
push
mov
nop
mov
test
ror
cmpsb
lcall
fcoml
or
push
iret
pushl
faddp
lds
outsb
mov
stc
cmp
sbb
arpl
sbb
test
test
lods
add
sub
icebp
jae
rcrl
movb
into
test
loopne
jmp
jecxz
gs
and
or
in
push
adc
add
mov
cld
mov
jnp
in
or
imul
and
and
add
outsl
sbb
adc
rcrl
or
data16
pop
pop
es
xchg
inc
pop
fmulp
dec
mov
cmp
mov
xchg
test
mov
sar
adc
mov
in
pop
jnp
insl
in
push
out
add
or
int3
cltd
mov
pop
cmpsb
scas
adc
or
adc
outsl
xor
shlb
test
xor
cmp
cmc
inc
out
ret
push
sbb
dec
pop
incb
pop
out
negb
or
cmc
aad
pop
sahf
xchg
outsl
test
std
sahf
fiaddl
xchg
mov
xchg
mov
stc
movsb
cmp
inc
and
mov
das
insl
lret
sbb
jp
pushl
mov
push
sbb
aad
push
adc
and
cmc
cmp
clc
sbb
jbe
jns
inc
jns
xchg
dec
mov
mov
xor
mov
adcl
sti
or
dec
inc
loope
and
imul
or
mov
xor
js
xchg
in
push
pop
mov
iret
mov
cmp
aad
outsl
and
icebp
cmp
mov
jle
outsb
out
fidivl
sbb
icebp
mov
fsubrl
fmuls
jecxz
inc
cmovbe
fnsave
pushf
lret
jne
mov
into
xchg
and
inc
adc
int
sub
ds
mov
and
mov
dec
cli
push
mulb
and
stos
xchg
xor
and
xchg
cmpsl
jecxz
stos
or
rcrb
mov
cli
aaa
sub
pop
out
std
xlat
jmp
mov
shr
movb
cmp
xchg
and
sbb
sbb
fstl
js
mov
shr
inc
repnz
scas
pop
push
popa
cmpsl
cmpsl
jno
dec
cwtl
cmp
iret
popl
inc
das
pop
adc
sbb
add
in
bound
jmp
mov
fwait
push
lds
add
in
sahf
push
call
pop
fs
popa
mov
paddw
into
sub
mov
mov
inc
jmp
stos
jae
jnp
push
bnd
fsubs
mov
adc
push
push
mov
inc
sub
movsb
add
fld
mov
rcrl
stos
pop
ret
call
outsb
leave
pop
in
movsb
mov
lods
test
mov
jae
fsubrl
dec
loop
xor
sub
adc
pop
xchg
mov
cmp
movsl
arpl
inc
aaa
dec
fadd
scas
inc
dec
cmp
jmp
adc
sub
pop
pop
mov
mov
cmp
movsl
inc
cmpsb
jae
enter
sbb
daa
jge
dec
outsl
mov
jg
mov
xor
lds
xchg
aad
sbb
aad
and
into
sbb
sti
sub
andb
pop
xor
and
inc
iret
push
test
sub
push
test
andb
into
pop
enter
aam
cmpsl
xchg
inc
mov
nop
shlb
sti
addr16
fsubrp
and
addr16
mov
ja
dec
lret
out
int3
movl
or
or
push
pushf
pop
test
lods
movsl
sub
jecxz
push
in
stc
xor
imul
xchg
mov
emms
adc
push
jae
push
movsl
mov
mov
fst
pop
cmp
xchg
mov
cltd
cld
pop
pop
cmpsl
dec
lcall
xor
mov
test
popl
sbb
dec
gs
jge
rcrl
pop
fwait
or
cmpsb
add
ds
imul
mov
mov
jle
adc
jne
jecxz
mov
nop
xlat
lods
sub
icebp
aam
jo
inc
inc
or
lret
jbe
jbe
ja
xor
ja
and
sbb
or
add
xchg
xchg
lds
cmp
add
mov
lea
inc
push
adc
xchg
jmp
and
inc
insb
jp
push
pop
and
idivb
loop
add
and
incb
fsub
mov
and
int3
sub
mov
jns
and
or
movsb
call
hlt
sbb
add
pop
push
mov
xchg
pop
mov
out
push
roll
sbb
push
mov
arpl
mov
test
mov
pop
sbb
xlat
shr
fstpl
leave
adc
lods
jl
dec
dec
dec
cld
push
adc
inc
xor
stc
cmp
xor
cmp
jb
in
and
outsb
adc
adc
ret
daa
dec
mov
mov
pop
ljmp
ja
jb
in
les
shll
repnz
pusha
fs
fistpl
sbb
add
daa
mov
adc
gs
push
fwait
or
add
test
es
lods
jns
sub
incb
jbe
ret
xchg
lret
add
dec
push
xlat
mul
out
daa
ds
add
int3
pop
loop
add
mov
inc
stc
out
cltd
xlat
dec
xchg
push
mov
jnp
test
push
call
sub
or
fsubs
stos
cmp
inc
jmp
push
push
dec
int3
ficoms
aaa
cmpsl
fs
inc
mov
inc
lcall
or
ret
out
pop
push
daa
pop
cmpsl
mov
shrl
inc
adc
arpl
das
sub
iret
and
sbb
jmp
add
cmpsb
jmp
dec
iret
mov
out
jle
xchg
push
in
xchg
mov
xorl
hlt
sub
fsubl
push
shrl
add
and
nop
add
jecxz
mov
pop
inc
fisubrs
cmp
push
rorl
dec
fstpl
out
in
cmpsl
loop
jecxz
addr16
iret
adc
sti
dec
xchg
insl
mov
mov
test
leave
mov
cmpb
inc
xor
je
dec
xor
lock
insl
cwtl
and
lds
push
cmp
mov
in
ret
in
push
outsb
xchg
hlt
mov
ret
add
das
inc
out
push
mov
movsl
hlt
hlt
jne
inc
mov
int
lds
xor
inc
xchg
mov
rcrb
imul
jnp
fmull
subb
push
jae
xor
paddusb
push
push
es
rcll
int
add
jne
add
ficompl
inc
mov
lcall
jl
xchg
fcmovb
shrl
push
lret
int3
sub
add
cld
out
xchg
dec
jp
inc
cmp
push
add
push
sysret
jl
sub
sbb
mov
xchg
loope
mov
cmp
jns
mul
add
adc
mov
nop
cli
cmp
lock
daa
jo
outsb
lock
sub
test
mov
xor
mov
mov
xchg
fwait
inc
fwait
mull
push
andb
stos
adc
and
jb,pn
stos
ja
adc
loop
push
dec
enter
dec
test
test
or
sub
and
xchg
subb
ror
xor
movntps
clc
stos
rclb
jmp
jnp
cmp
cmpsl
in
into
jle
or
jecxz
out
xlat
or
sub
inc
fiaddl
jge
rcl
inc
jnp
sub
loop
mov
inc
fcoms
stc
add
aad
xchg
xchg
xchg
fisttpl
pop
mov
sahf
mov
cmp
js
push
dec
jg
stos
xor
test
mov
lock
shld
dec
mov
call
idivb
bnd
mov
cmp
out
pop
rcrb
lods
xor
scas
icebp
stos
ret
mov
addr16
jle
xlat
aad
sub
stos
cld
ljmp
jl
sti
adc
dec
add
out
mov
pop
daa
dec
and
ficomps
jl
in
and
pop
jmp
pushf
fdivrl
inc
aas
jns
fldcw
and
cwtl
outsl
add
cmp
and
push
stc
mov
leave
les
jnp
pop
push
mov
aad
ret
negl
sub
mov
iret
sub
loopne
adc
mov
icebp
inc
adc
push
xchg
rolb
scas
fimull
insl
popf
clc
xchg
inc
call
mov
popf
mull
xchg
sbb
mov
insl
insb
into
mov
leave
mov
add
lods
out
xor
ja
in
add
jp
fs
xchg
add
inc
ljmp
out
jne
mov
xchg
or
inc
nop
dec
cmp
std
das
xchg
scas
pop
sahf
int
fcomip
or
dec
icebp
jle
mov
sub
cmp
setae
pushf
fldl
dec
inc
fnstcw
lods
push
or
mov
jmp
jns
sbb
movsl
mov
rclb
adc
scas
stos
adc
outsb
aas
pushaw
jle
mov
les
mov
or
aas
bound
in
adc
ret
xlat
das
add
js
lret
xor
movsb
add
es
push
pop
and
cmc
add
and
sub
imul
icebp
push
add
adc
mov
sub
push
ds
popf
or
sub
and
lea
cld
insb
aam
or
lret
outsb
push
test
mov
xchg
pop
imul
mov
mov
rolb
dec
in
mov
pusha
xchg
push
sar
not
arpl
lea
xchg
pop
call
push
xchg
jecxz
notb
xchg
popf
std
ficompl
rorb
lock
mov
add
and
mov
xchg
cmp
or
mov
movsl
pop
pop
lock
idiv
lods
dec
idivl
rcrl
mov
scas
adc
push
adc
cmp
ds
adc
mov
popf
xor
xchg
xchg
sahf
xor
insb
xchg
dec
clc
daa
sbb
stc
xchg
adcb
iret
out
jns
jmp
dec
mov
xor
or
fdivrp
xchg
jnp
push
jo
data16
xchg
mov
push
imul
loop
fs
sti
inc
mov
rcrb
sbb
push
ss
int
add
adc
pop
adc
shlb
pop
push
sub
call
mov
xchg
out
xor
mov
pop
and
jle
dec
lods
and
pop
pop
shlb
cmp
jno
mov
push
sub
dec
fucomp
lods
jbe
inc
or
stc
xorl
jg
cmp
mov
sbb
push
out
ds
adc
sub
jg
movsl
out
mov
fmull
mov
cwtl
xor
xchg
add
sbb
inc
fdivrs
jne
enter
and
hlt
gs
jae
or
sahf
mov
imul
mov
add
mov
xor
jmp
dec
push
int3
dec
aaa
cwtl
repz
imul
cmp
lock
in
pop
add
cld
and
adc
jmp
dec
mov
or
jmp
adc
icebp
jle
jno
popa
addl
imul
test
xor
add
sub
add
iret
daa
mov
icebp
repz
pop
sbb
lea
mov
push
xorb
add
cltd
je
inc
mov
sub
mov
lret
and
pushf
xor
mov
mulb
pop
mov
shlb
mov
xchg
in
mov
pop
push
call
pop
sarl
je
out
pop
sub
push
imul
popf
or
and
loopne
sbb
aad
pop
mov
lret
inc
jmp
pop
sbb
push
push
pop
test
fisubrl
movsl
fidivl
jo
shrl
pop
mov
and
mov
sbb
movsb
sbb
xchg
push
or
aam
xor
aas
std
cmp
stos
xchg
test
fisttpl
addl
and
inc
rcl
jo
push
sbb
inc
jno
pop
scas
inc
cmpsb
aaa
push
dec
xor
xor
xor
mov
jb
mov
adc
loop
hlt
clc
lahf
adc
call
ret
shl
rorb
push
mov
mov
lret
lock
xchg
rorl
in
dec
adc
sub
or
jno
and
inc
adc
sahf
movsb
out
shrb
jecxz
lahf
jle
mov
in
pop
mov
adc
enter
sbb
adc
mov
xor
pop
dec
pcmpgtd
into
insl
cld
into
orl
dec
xor
pop
bound
lods
xorl
rcl
or
icebp
cli
pop
sub
test
into
and
jo
jne
lret
jb
es
inc
add
adc
ret
add
hlt
xor
xchg
pop
loopne
xchg
inc
mov
adc
popa
mov
mov
rorb
cmc
pop
jb
movsb
mov
cmpl
mov
mov
fimuls
dec
sahf
ss
icebp
int3
fisubl
inc
and
int
fmull
inc
movsb
stc
movsl
sbb
aas
pop
inc
divb
push
ja
lret
dec
mov
shrl
enter
jbe
mov
data16
leave
xorb
pop
gs
jbe
cmp
and
in
mov
sub
sbbl
cwtl
mov
sahf
push
arpl
or
mov
jo
sbb
loope
cmpsl
jno
pop
leave
xchg
clc
mov
xchg
pop
fnstcw
mov
inc
pop
cmpsb
jmp
das
ret
xor
out
xchg
mov
push
jg
and
test
dec
pop
mov
in
mov
sbb
mov
imul
and
int3
xchg
lds
inc
xchg
xchg
sbbb
lahf
loop
mov
add
dec
and
push
sahf
inc
push
pop
add
sbb
out
xchg
cmp
mov
push
andb
mov
enter
shrb
sub
orl
in
test
fs
std
pusha
mov
mov
adc
and
stos
sbb
dec
sbb
pop
push
cmp
enter
push
dec
cs
xchg
std
xbegin
enter
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
out
lods
ffreep
scas
addl
test
sub
lcall
inc
je
cmp
iret
aam
nop
xchg
aad
clc
test
pusha
mov
or
fs
nop
mov
fcoms
imul
imul
xchg
aas
pop
rorb
inc
movsl
xorl
stos
ljmp
repz
out
sbb
popa
lret
cmp
shlb
shll
popf
int3
fsubs
push
push
loope
out
inc
mov
jno
movsl
jo
mov
sub
outsl
les
ficomps
lret
adc
out
test
ja
xor
in
pop
fmull
mov
pop
jb
cmp
out
insl
int
shlb
fists
test
out
mov
ja
pop
xlat
inc
repz
mov
or
push
cmp
mov
fs
repnz
cwtl
pop
ljmp
in
mov
in
mov
pop
loop
and
dec
mov
dec
and
xchg
cmp
and
in
push
lret
xchg
aam
lods
insb
and
les
cmp
mov
or
xchg
loop
sub
mov
lret
mov
sbb
andl
inc
stc
jbe
lea
ret
in
jmp
jp
in
or
sub
pop
bnd
xchg
mov
and
cltd
xchg
jmp
push
xchg
mov
xchg
cmp
clc
jne
jne
pop
cli
and
sbbb
xlat
nop
cmpl
test
loopne
and
mov
imul
into
mov
addr16
lods
mov
repnz
les
pop
mov
test
cmp
sub
movsb
arpl
ss
scas
hlt
ret
xor
icebp
scas
mov
lds
sbb
lock
and
frstor
xchg
xor
sbb
inc
push
xor
mov
cmp
dec
cmp
mov
loop
lret
xor
ss
fpatan
dec
cmp
imul
or
test
ljmp
scas
lea
je
pop
punpckhdq
dec
inc
push
jo
cmpsb
popl
fistpl
shlb
notl
xor
arpl
xor
cmp
cli
jmp
sub
mov
sbb
nop
jns
and
repz
fisubl
sti
pop
std
js
jmp
int
add
dec
in
push
push
mull
out
movsl
lret
cmp
add
cli
push
negl
push
test
scas
or
int3
push
sbbb
cmp
dec
fistpll
cs
popf
bound
rorb
ss
shll
stos
stos
xlat
insl
jno
pop
movsb
es
aaa
dec
lcall
je
add
movsl
or
shll
push
inc
xchg
ret
mov
push
xchg
cltd
cmp
fcomp
arpl
xchg
adc
lcall
push
mov
xchg
cwtl
lahf
out
or
mov
aas
aad
push
pop
mov
push
dec
repz
xchg
push
push
in
mov
xor
rol
fsub
fwait
lcall
sub
sahf
xchg
js
test
test
push
test
pop
scas
loope
jae
push
cli
ds
into
pop
cmpsl
test
pop
insb
jnp
adc
fdivrs
sahf
xchg
jp
test
dec
inc
jae
jb
les
xlat
or
out
data16
clc
jb
out
jne
sbb
nop
hlt
pop
xor
inc
mov
sub
cmc
xor
sti
sub
pop
mov
jns
fcoms
hlt
out
loope
sbb
fistpl
adc
fnstenv
inc
bound
rcl
mov
mov
icebp
test
iret
jg
cld
push
jmp
scas
mov
xlat
jb
cmp
cmp
repz
shll
or
mov
test
pop
xchg
jnp
cmpsb
rep
cmp
jp
pop
sbb
test
pop
int3
push
cmp
inc
push
sbbb
or
jge
inc
shrb
pop
mov
jns
roll
lock
adc
cld
push
sar
es
sub
stc
xor
mov
data16
out
pop
jg
sub
cmpsl
xchg
loopne
xchg
inc
dec
cld
pop
cmp
mov
jnp
nop
pop
push
inc
ja
jo
push
aam
dec
push
orb
dec
loopne
fmull
outsb
div
push
fidivl
iret
lret
jmp
adc
aad
rcll
mov
dec
jle
mov
or
out
pop
adc
mov
into
mov
test
jg
shrl
xchg
out
sbb
sub
je
pop
cmp
aaa
pushf
shrb
mov
mov
push
or
dec
ss
jmp
sub
xor
mov
xchg
test
lahf
jbe
adc
outsb
andb
aad
mov
and
pusha
or
mov
out
or
fildl
subl
xchg
and
nop
jl
je
gs
jbe
adc
jae
mov
insl
repz
and
sub
push
ret
std
xor
sbb
mov
jle
xor
test
lock
mov
aam
adcb
roll
pop
nop
jge
mov
push
mov
inc
lcall
pop
test
mov
sbb
out
xchg
daa
pusha
adc
and
test
cmp
xor
lods
jecxz
sbb
and
movsb
pop
cmp
pop
divb
pop
pushf
dec
mov
mov
sbb
popf
call
test
jns
out
xor
push
sti
jp
mov
fprem1
nop
dec
mov
pop
jns
jge
sti
pop
cmp
out
jnp
and
fistpll
pop
adc
inc
fwait
iret
stos
fstpt
jne
inc
inc
cmpb
jmp
add
adc
aam
insb
repz
add
add
add
mov
cmp
andb
or
pop
lds
repnz
sub
pop
addr16
dec
and
insb
xor
jle
adcb
cmp
lcall
inc
adc
lahf
or
pop
scas
sub
mov
movsl
xchg
rep
pop
cwtl
cmp
lds
cmpsb
sbb
int3
pop
or
or
mov
pop
cmp
popf
sub
xor
fldenv
dec
stos
dec
xchg
push
call
test
dec
and
xchg
sarb
aas
xor
aaa
ret
sub
xor
in
js
mov
xchg
fxch
inc
or
mov
jae
dec
inc
mov
fidivs
outsl
cmp
push
add
xchg
adc
mov
mov
xor
cmpsb
cmpsb
dec
mov
addl
iret
or
or
inc
mov
sbb
insb
sbb
icebp
shl
cmp
push
fnstenv
push
cmp
pusha
push
pop
dec
xor
fiadds
int
xor
jno
jecxz
xor
dec
ret
repz
mov
test
cmpsb
pop
sti
cmp
sub
adc
sbb
popf
mov
sbb
repnz
sbb
lahf
sarb
push
jne
mov
gs
mov
lds
cwtl
cmc
adc
add
out
sbb
push
cwtl
cs
adc
lret
cmc
shll
and
lret
mov
hlt
jb
stos
sbb
mov
call
push
pushf
jp
pop
cmpsb
je
addr16
cmp
mov
adcl
mov
xchg
ss
ljmp
es
sbb
data16
jmp
cmpsl
inc
shlb
mov
hlt
repnz
push
lahf
sub
lods
call
popa
test
mov
fimuls
imull
and
fs
fcmovnb
or
push
push
or
sbbl
movsb
inc
mov
or
jecxz
lcall
push
inc
out
push
mov
lea
incl
fdivs
fmulp
repz
cmp
es
jno
jge
test
icebp
aad
fs
les
sti
jecxz
inc
sub
outsb
ret
idiv
sub
jmp
adc
jl
pop
pop
pop
pop
jp
inc
ds
jl
loopne
pop
xchg
push
test
adc
xchg
cld
lds
mov
fldcw
lea
and
fs
push
stos
popa
pop
and
lret
pop
call
or
push
mov
add
add
gs
xor
jg
push
dec
fldenv
push
pop
lret
jne
or
xchg
cmp
into
push
fimull
lret
lcall
push
mov
xor
inc
xchg
stos
adc
into
add
inc
cmpl
inc
and
sbb
outsb
jge
int3
cltd
push
stos
pop
inc
sbb
pop
int
or
mov
jge
adc
pop
fildl
pusha
jne
cli
out
clc
cmp
xchg
fstpt
fsub
push
adc
adc
pop
rcrl
mov
pop
test
loope
jecxz
inc
or
mov
adc
fmull
xchg
or
repnz
movsb
je
adc
inc
fucomp
mov
scas
mov
out
pop
sarb
sbb
cltd
sti
mov
addr16
xor
mov
pop
push
ljmp
lcall
pusha
and
stc
data16
push
les
aas
insb
andl
filds
popf
out
and
inc
sub
into
lahf
dec
stos
jge
stc
sub
nopl
jle
lods
test
push
jae
test
aas
mov
jnp
and
mov
pop
lods
mov
mov
xchg
xor
push
push
mov
jb
pop
loope
test
jecxz
inc
jle
dec
cli
sbb
xchg
sti
push
clc
imul
pop
ds
repnz
movsl
sub
add
and
or
repz
and
sub
in
test
insb
inc
xlat
mov
imul
adc
sbb
mov
push
cld
inc
addr16
xchg
sbb
repz
insl
jno
cmpsl
insl
dec
sub
ficomps
jge
or
inc
pop
mov
hlt
and
pusha
das
addr16
mov
lret
andl
lods
mov
fcoml
mov
addr16
add
inc
clc
fwait
lcall
mov
pop
jae
lretw
push
aad
mov
sub
push
std
cmp
mov
cmp
mov
jge
call
repnz
jae
adc
in
lea
les
ds
ljmp
sbb
xor
jle
leave
fwait
dec
push
dec
les
aad
arpl
jmp
testb
into
xor
fwait
testb
or
hlt
jne
mov
sub
test
mov
insl
pop
enterw
mov
dec
dec
leave
out
pushf
popf
dec
xlat
int
into
sub
jg
pop
pop
mov
jl
mov
sbb
cmp
insb
mulps
aaa
sbb
rcl
pop
repnz
jecxz
push
loop
data16
pusha
aad
lods
das
je
xchg
sbb
in
pop
dec
mov
jbe
add
repz
pusha
jg
fwait
dec
lret
out
dec
enter
mov
xor
repz
ficomps
adc
hlt
mov
xor
hlt
stc
mov
jae
repz
fists
bound
in
push
lcall
sahf
push
in
push
repz
aad
sbbb
repz
pop
stc
insb
daa
int3
add
and
iret
push
dec
fdivrl
pop
aaa
pop
das
pop
mov
fsub
ss
stos
repnz
xchg
clc
mov
fidivrs
pop
popf
insl
ret
dec
subl
adc
and
pop
xchg
fidivrl
into
or
std
inc
jne
lods
dec
or
mov
cmp
cltd
sahf
sbb
in
xchg
or
add
cmpl
adc
into
cmp
dec
test
movsl
mov
jl
arpl
popa
or
push
lds
inc
push
mov
mov
testl
subb
fdivrl
pop
or
mov
adc
add
clc
sbb
jo
sar
xchg
rcrb
iret
in
hlt
cmp
jmp
jae
xchg
enter
shlb
in
pop
xchg
xor
sbb
lods
cmc
outsb
ljmp
push
subb
dec
xchg
jae
std
xchg
call
adc
mov
movsl
sbb
cwtl
mov
loope
xor
fwait
shrb
or
pop
imul
int3
fs
movsl
cld
stos
xchg
jne
adc
pop
mov
mov
push
hlt
into
imul
scas
clc
js
lcall
push
in
test
push
hlt
xor
in
sti
cs
imul
inc
mov
and
inc
bound
adc
mull
mov
cld
out
movsl
ja
aaa
add
out
cmpsl
mov
repnz
fsubrp
test
push
bound
testb
lock
sub
xorl
lods
pop
mov
mov
jge
cmp
ss
outsb
and
inc
jno
inc
fdivrs
bt
cmc
cmp
push
popa
inc
and
xchg
scas
out
movsb
popa
cmc
sarl
ss
xchg
xchg
add
shlb
rorb
push
add
and
mov
neg
lods
les
cmp
lret
mov
movsb
sbb
imul
imul
mov
and
sbb
mov
sub
cmp
jl
shl
dec
pop
lahf
inc
enter
popf
xor
sti
jb
jns
cld
xlat
add
xor
int
and
jae
pop
bound
mov
adc
das
sbb
lea
inc
dec
push
popf
xor
pop
sbb
pushf
mov
out
dec
push
cmp
les
iret
fwait
xchg
jnp
adc
jbe
xchg
cmp
push
xor
loope
aad
xchg
es
cmp
clc
movsl
int
lods
sub
scas
mov
mov
mov
nop
dec
push
adc
add
or
popa
sub
push
cmc
inc
sahf
daa
iret
test
cmp
mov
mov
xor
or
pop
and
negl
push
cmp
jge
or
clc
lret
xchg
aaa
or
jp
adc
gs
cmp
sbb
fiadds
call
pusha
xchg
jno
les
mov
fimuls
ja
fldt
lock
mov
push
pop
div
pop
ss
into
test
mov
adc
outsb
xchg
push
daa
xchg
ss
fldenv
fmuls
out
and
jl
sbb
pop
xchg
mov
clc
push
xor
inc
addr16
or
aam
pop
xor
fildl
push
and
sbb
pop
aam
push
and
cli
stos
imul
inc
and
jg
stc
aad
mov
inc
dec
cmp
and
shlb
push
jne
in
jns
call
loope
adc
ljmp
in
aam
mov
cld
shll
add
jecxz
mov
scas
unpcklps
xor
mov
xchg
add
scas
subb
mov
dec
push
lret
jno
data16
adc
pop
xchg
mov
mov
mov
aas
lods
push
xchg
js
mov
and
cwtl
scas
jl
xor
ja
cli
mov
in
dec
jge
sub
or
mov
xchg
dec
rolb
pop
adc
hlt
fldenv
sub
leave
popf
mov
lods
or
and
sbb
sub
xchg
dec
inc
cmp
jg
add
xchg
or
xorl
shll
add
popa
jae
sbb
xchg
dec
dec
outsb
mov
sub
xor
ss
jge
test
mov
mov
in
pop
mov
test
popf
inc
mov
lcall
xchg
fadds
jle
in
or
dec
fwait
jb
cmpsl
push
test
aam
adc
arpl
fstl
mov
mov
pushf
mov
pushf
cmp
dec
ja
or
sbb
idivb
jmp
cmp
fldl
shr
sub
popa
fstpl
test
movsb
lret
cmp
adc
xchg
lahf
add
xor
pusha
cmpb
mov
mov
in
outsb
test
sub
or
mov
mov
mov
nop
mov
xchg
inc
sub
sub
or
jb
sbb
sbb
push
lea
mov
mov
jge
sahf
push
insb
jae
iret
mov
insl
and
mov
and
cmp
mov
or
xchg
loopne
lods
pop
cli
cmpsl
frstor
test
out
mov
add
adc
test
ret
in
mov
fscale
rcrb
lcall
cld
sub
jbe
mov
push
and
ret
iret
xchg
inc
and
push
gs
pop
les
stc
jno
mov
movsbl
test
orb
inc
add
call
data16
mov
movsb
fistpl
movsl
imul
cmc
fistps
inc
inc
lock
sub
scas
mov
adc
mov
pop
fdecstp
and
rcrb
in
mov
scas
mov
cmp
aam
outsl
xchg
incb
jb
scas
fs
pop
mov
lret
in
rcrb
shrl
and
ret
stos
notb
adc
dec
out
push
dec
jp
push
xor
xchg
add
dec
or
aas
inc
test
subb
sub
mov
into
add
xchg
sbb
mov
stos
jl
jbe
in
sysexit
add
gs
scas
ret
jne
pusha
repz
mov
imul
ret
daa
imul
xor
xor
std
and
inc
sbb
lret
inc
cmp
xchg
lods
int3
sub
mov
movsl
addr16
out
outsb
xchg
cmpb
jmp
ds
pop
xchg
repz
incl
add
jbe
out
sbb
dec
xorl
and
roll
test
rcl
lods
mov
jle
push
or
dec
pop
and
stc
xor
fldl
scas
pop
xchg
add
push
cs
and
andb
mov
test
movsl
and
insb
cmp
push
test
dec
int3
or
movsl
lcall
jb
sbb
xor
out
mov
sub
nop
dec
stc
lea
arpl
pop
inc
or
pop
popa
or
xchg
pop
mov
pop
mov
xchg
xor
fcomps
insl
aaa
movsb
movl
mull
pop
fwait
push
sbb
cmp
in
cmc
in
push
mov
sbb
xchg
xchg
xor
cmpb
or
and
inc
loop
adc
iret
dec
dec
mov
and
adc
shlb
std
sub
add
jb
or
dec
xchg
dec
mov
sahf
push
dec
inc
sub
inc
stos
int3
jecxz
fcoml
pop
mov
loope
in
pop
shlb
insb
fistl
mov
rcrb
inc
popf
fmull
movsl
test
sub
jecxz
jmp
cmp
repz
and
movsl
movsl
stos
mov
mov
dec
sbb
sahf
arpl
shlb
sub
xchg
addr16
mov
mov
lds
cs
or
popf
gs
stc
mov
imul
add
das
int
iret
lcall
ljmp
nop
inc
loop
fmuls
insb
pop
pop
repz
fidivrs
pop
inc
inc
pop
scas
mov
xor
dec
sub
jl
dec
push
dec
out
shl
add
in
jbe
rolb
jo
sbb
testb
lret
lret
push
rol
add
bound
leave
jae
shl
push
or
call
xchg
mov
incl
ss
pop
incb
push
movsl
dec
xchg
or
sbb
clc
out
xchg
sbb
aam
rcl
adcb
xor
aad
cmc
aam
rcrl
stos
add
out
pop
clc
sub
cmp
sbb
pop
mov
rcll
aas
dec
add
cld
inc
ja
xchg
lock
add
push
dec
push
add
fbld
aam
je
add
push
test
sbb
inc
and
add
shl
arpl
out
mov
sub
int3
adc
scas
cli
and
and
data16
lds
xchg
jb
pushf
adc
mov
imul
test
in
pop
pop
cld
in
rcl
sbb
cmpsl
out
sar
jbe
push
clc
push
cmp
xlat
lret
dec
les
cltd
lods
fwait
pushf
sub
pop
leave
outsl
lods
xchg
dec
cwtl
mov
nop
outsl
mov
sub
in
add
push
outsl
dec
pop
add
orl
add
in
mov
sbb
adc
jmp
xorl
sbb
fcomi
sahf
outsb
and
xor
pop
mov
jge
sub
lret
and
sub
stos
in
jge
jg
push
pop
xor
imul
fdivrs
fnstcw
in
inc
stc
sub
adc
mov
test
push
jns
stc
dec
xchg
rclb
mov
pop
aam
rcrl
jl
repz
dec
add
mov
or
cmp
adc
or
ud2
or
mov
or
jle
xchg
int3
imul
test
lds
mov
inc
sbbb
mov
push
test
jno
pop
xchg
add
push
nop
ret
sub
scas
push
add
sti
test
fnstenv
in
pusha
inc
in
loope
lret
add
add
jmp
dec
std
push
xchg
jge
sub
mov
xchg
jb
stos
add
sub
mov
ss
jbe
fidivl
sbb
stc
es
imul
jge
pop
icebp
out
test
mov
jno
insl
inc
dec
add
mov
mov
imul
popl
mov
pop
lahf
orb
nop
ja
inc
xchg
sub
ret
hlt
xchg
cwtl
test
mov
mov
data16
cmp
mov
sbb
loop
cli
cmp
loope
xchg
mov
pop
daa
pop
xchg
in
sub
add
mov
out
or
sub
cmp
jns
movsb
cmpsb
fisubl
and
std
mov
mov
jo
clc
nop
ficoml
push
mov
mov
cmovb
cs
test
and
pop
push
lods
pop
mov
out
add
pop
inc
cmp
dec
push
pop
adc
xchg
xchg
pop
into
in
mull
dec
rclb
and
ss
shll
jmp
and
stos
dec
and
and
iret
sub
sub
xchg
jle
loop
push
mov
sbb
clc
test
and
inc
test
daa
cs
or
mov
scas
push
pop
lds
sub
gs
pushf
add
lahf
or
outsb
cmp
xor
loope
mov
xchg
cmpsl
xor
pop
xchg
push
or
out
and
push
jge
cmp
jnp
rorb
sbb
shlb
sub
loop
mov
test
std
push
aas
mov
cmc
fadd
mov
mov
xchg
sub
dec
scas
lcall
mov
mov
fstpl
xchg
shl
xchg
xchg
push
daa
fdivs
aaa
arpl
cmp
dec
add
jecxz
loope
les
lea
adc
push
sub
mov
add
sbb
test
pop
mov
cmpsl
sub
and
ds
pop
icebp
fcomp
jecxz
cmpb
xor
arpl
adc
lods
fwait
in
in
jbe
negl
insb
sbbl
dec
inc
fisttps
sub
mov
push
in
sbb
push
mov
push
daa
cmp
xor
cltd
cld
inc
movsb
xor
xchg
jno
push
xchg
fidivl
nop
inc
sahf
std
add
pop
or
lds
pop
incl
mov
cmp
and
jnp
adc
cmp
fwait
aam
cs
jecxz
or
cmpsl
cld
xor
add
dec
dec
fdivs
adc
jno
xchg
cld
das
add
das
pop
mov
clc
pop
in
hlt
push
add
inc
nop
leave
add
sti
pop
loopne
or
arpl
add
hlt
loop
mov
or
push
repz
les
cmp
adc
sbb
jmp
push
cmp
into
mov
mov
xchg
rol
push
das
syscall
sub
insb
imul
arpl
push
mov
and
pop
push
movsl
sub
lea
push
lahf
sbb
xor
and
sub
ds
ficompl
iret
mov
add
mov
fiadds
stos
pop
xchg
les
cmp
push
movsl
cmpb
cld
mov
cmpsb
cwtl
popa
imul
xchg
fisttps
xor
and
clc
xor
outsb
lret
hlt
lea
push
aaa
mov
lods
fistps
fldenv
cmc
mov
popf
adc
imul
inc
sbb
pop
into
push
sbb
and
imul
les
fisubrs
sbbl
pusha
daa
repnz
or
mov
fstp
js
mov
dec
loopne
stc
mov
les
xchg
jle
xor
pusha
dec
inc
repz
das
dec
sbb
mov
xchg
jg
ljmp
mov
jge
scas
push
mov
lea
add
out
dec
into
mov
in
jmp
push
daa
fmull
push
xor
sub
jbe,pn
jl
div
addb
xorb
lahf
or
pusha
into
into
rcrb
mov
nop
pop
fsubrl
mov
fs
push
xchg
outsb
inc
mov
ret
jb
jmp
data16
mov
data16
xlat
rcrl
mov
adc
int3
sub
and
fs
jg
xchg
inc
lcall
fdivs
mov
cmpsb
mov
and
lret
stc
ret
fsubp
inc
dec
adc
mov
xlat
pop
and
xor
push
cld
mov
xchg
fdivr
fcoms
sbb
inc
xchg
cld
aaa
loope
dec
mov
xchg
sbb
xor
lods
xor
add
inc
mov
pop
push
filds
mov
ret
ss
insl
mov
sbb
or
xor
push
loop
xor
xchg
lods
lcall
and
aam
scas
pop
mov
mov
sar
pop
jnp
sub
and
mov
in
ds
mov
add
lret
nop
xor
sub
xorl
add
fidivs
gs
add
mov
icebp
add
mov
fmul
mov
inc
lcall
sbb
inc
sub
aaa
mov
xor
xchg
sub
mov
hlt
inc
cmp
push
shlb
mov
roll
jb
sub
sbb
out
dec
jbe
insl
sti
mov
xchg
pusha
mov
daa
ficompl
ss
fs
add
leave
dec
xchg
cltd
das
jbe
mov
addr16
mov
push
cmp
loope
out
xchg
repnz
add
jo
and
mov
inc
dec
mov
jle
cmc
jnp
xchg
push
std
and
clc
lahf
push
in
insb
mov
repnz
cli
push
std
inc
aaa
call
repnz
ss
fcmovu
es
fnstenv
popf
mov
sbb
enter
pop
lret
addr16
xor
xor
lret
jmp
daa
jb
xlat
add
out
dec
inc
sub
adc
adc
xchg
cwtl
dec
sub
or
mov
test
ds
or
imul
xlat
inc
nop
test
mov
jne
dec
add
inc
sti
push
cmp
mov
mov
push
jecxz
fisubl
pop
in
sub
jo
das
cmp
lret
jg
shrl
cs
dec
mov
jge
loop
loop
enter
jle
ljmp
fbstp
inc
mov
push
into
shlb
js
test
jno
jg
clc
xchg
scas
dec
jo
jo
or
repz
mov
mov
test
enter
dec
jg
mov
fisubrl
aam
sub
aad
mov
dec
pop
daa
lock
inc
sbb
pusha
mov
inc
iret
sbb
fsubrl
scas
mov
adc
lock
ret
mov
inc
sub
lcall
adc
sub
or
test
sbb
sti
out
mov
mov
adc
cmp
sbb
or
inc
cli
outsl
pop
in
frstor
loope
dec
lock
adc
mov
mov
add
jle
lret
cld
gs
xor
jno
in
xchg
mov
shrb
xor
addr16
ficoml
nop
xchg
pushf
push
ljmp
add
xchg
jge
mov
repz
cmp
adc
ret
insb
pusha
fxtract
ja
leave
cmp
push
popf
nop
mov
inc
sbb
loope
sub
arpl
outsl
out
addb
pop
jp
bound
mov
ficompl
lret
xchg
add
aaa
sbb
addl
xchg
mov
or
lcall
jl
mov
iret
dec
mov
push
orl
sub
push
lret
stc
pop
push
hlt
adc
mov
in
in
mov
mov
inc
ret
and
inc
mov
addb
hlt
repnz
es
mov
cld
sub
mov
insb
jp
push
aad
sub
cs
cmp
loop
pop
movsb
mov
and
fiadds
std
ljmp
jno
jge
dec
inc
cmc
sub
out
lcall
cmp
cld
push
roll
xchg
stos
or
jae
xchg
shrl
cmp
sbb
sbb
push
push
ret
dec
add
cli
push
cwtl
dec
mov
jnp
xlat
xchg
xor
or
jle
and
mov
movsb
loope
iret
cmp
flds
mov
mov
hlt
lret
mov
in
sbb
insb
pop
jl
jno,pn
mov
into
mov
dec
push
mov
out
int
push
cwtl
aad
mov
and
lods
xchg
lds
in
sbb
ss
pop
or
mov
mov
in
lcall
fs
add
mov
mov
notl
movsb
call
enter
mov
push
pop
fisttpll
int3
hlt
push
push
inc
adc
fs
sbb
insb
aas
out
ret
ja
ds
loopne
scas
cwtl
lret
and
test
aaa
lahf
fwait
es
pop
mov
adc
xchg
sub
test
adc
pop
movsl
sbb
and
add
lret
daa
sub
mov
rcrl
pusha
pushf
push
cs
jbe
icebp
fnsave
pop
push
cmp
stc
or
mov
je
mov
or
out
test
int
in
fcompl
jnp
dec
add
fprem1
push
movsb
mov
int3
mov
push
cs
mov
repz
pushf
jmp
jnp
adc
jg
aas
or
ss
xor
xchg
xor
insb
mov
mov
out
outsl
int3
push
test
xor
loopne
fs
and
sbb
jg
adc
add
loope
lret
pop
mov
ljmp
lock
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
sub
stos
mov
jo
adc
insl
sahf
les
jg
xor
loope
out
xor
jae
adc
fdivl
arpl
cmpsl
nop
mov
jp
mov
int3
aaa
notl
test
in
arpl
js
fisubs
ret
sbb
mov
inc
jg
or
jl
dec
pop
das
dec
lahf
dec
pop
scas
mov
das
stc
pop
icebp
jmp
add
std
pop
cmp
fwait
push
mov
dec
push
je
in
loopne
in
fidivl
ret
xor
and
pop
notb
test
sbb
cld
fcomps
mov
cli
jl
insb
repz
cmpsl
pop
movsl
inc
lret
inc
mov
fdivl
popf
add
lea
popf
iret
sbb
pop
fwait
icebp
and
jnp
fwait
sbb
insb
inc
imul
and
gs
sbb
movsl
pop
and
inc
mov
es
push
mov
push
mov
ret
or
pushf
je
pop
inc
mov
pusha
jb
fwait
jno
add
scas
xchg
and
cmp
and
loop
popa
push
push
lcall
rorb
sub
fiadds
outsb
js
add
mov
xchg
movsb
cmc
test
push
mov
mov
aaa
push
decb
outsl
ret
pop
cmp
mov
sbbb
fidivl
jbe
rolb
dec
shr
xchg
in
jle
pop
les
cmpsb
add
cmc
mov
jg
dec
sub
sbb
das
mov
stos
sub
jno
fdivrl
mov
dec
pop
jae
xor
lock
flds
push
mov
out
xor
pop
stc
mov
xchg
and
testb
pop
ja
jb
test
push
pop
jns
sub
inc
in
mov
js
je
inc
and
xor
mov
inc
push
repz
xor
and
sub
cmpsb
inc
repz
adc
popl
popf
call
sbb
dec
lea
or
sbb
test
mov
xlat
std
test
cmp
or
or
in
cmp
mov
sbb
ja
xchg
or
cmp
dec
sub
sti
pop
mov
mov
adc
push
in
sbb
outsl
ror
cltd
jg
pushf
mov
hlt
mov
fwait
mov
stos
shl
jne
lock
inc
cs
scas
stc
int3
adc
subb
push
scas
xchg
push
xlat
mov
add
mov
data16
mov
xchg
aas
les
sub
es
repz
sbb
popa
push
and
xor
mov
xor
sarl
dec
xor
pop
mov
sub
push
mov
lock
xor
xor
inc
cmpsb
jge
mov
sub
or
mulb
hlt
stos
sbb
cwtl
fldenv
call
inc
jmp
mov
pushf
or
ja
add
cmc
inc
xchg
xchg
and
or
or
xor
pushf
mov
jg
push
es
pusha
inc
pop
xchg
mov
dec
xchg
adc
mov
jne
dec
cmp
test
xor
mov
inc
pop
pop
out
incl
shrb
cmpsb
mov
add
pop
in
aas
mov
hlt
call
jb
or
ljmp
push
push
pushf
in
stos
insl
idiv
adc
push
inc
mov
mov
inc
mov
add
cmc
fstps
inc
movsb
xchg
mov
dec
icebp
dec
or
jno
xor
cs
dec
xchg
add
sub
int
ret
in
dec
hlt
bound
or
xchg
icebp
lock
add
cmpsl
insl
dec
dec
mov
loop
std
or
jo
mov
es
mov
push
mov
inc
dec
imul
sbb
adcl
xorl
push
xor
mov
inc
fsts
push
xchg
sub
cmp
mov
les
vpmaddwd
jl
arpl
inc
add
loope
je
cltd
sub
adc
out
pusha
push
in
push
pop
data16
push
dec
cmp
repz
push
mov
lods
cmpsl
enter
dec
movd
jmp
xchg
mov
stc
int3
push
xor
sub
push
repz
sub
inc
ret
loopne
sub
mov
sub
cmp
pop
inc
std
mov
cmpsl
repnz
dec
add
push
repz
fimuls
lahf
js
add
inc
inc
outsl
mov
push
out
out
mov
cmpsl
cmpsb
das
out
fnstcw
xor
pop
fcoms
jno
mov
sbb
das
pop
jecxz
xor
jb
sbb
out
xchg
inc
xchg
add
lret
pop
xchg
mov
imul
lods
and
jo
ds
mov
mov
push
jp
cwtl
sbb
and
enter
mov
cmpsb
inc
xchg
in
fbstp
xlat
cmp
and
pusha
xchg
jmp
int3
sar
mov
xchg
mov
out
inc
inc
sub
push
and
ss
push
xchg
cmp
test
ljmp
sub
das
repz
test
xchg
in
pop
cmovp
add
jo
jl
sub
imul
xor
mov
mov
inc
cmp
daa
stc
lea
push
cmpsl
add
xchg
mov
cmpsl
les
in
xor
jl
out
leave
push
add
jbe
inc
dec
mov
jno
aad
loope
enter
icebp
cmpsl
push
cmp
jns
nop
lcall
in
ret
fisttpl
and
xchg
or
nop/reserved
pop
out
mov
mov
stc
insl
and
mov
popa
adc
arpl
inc
arpl
xchg
mov
leave
inc
dec
sub
pop
pop
mov
stos
out
dec
jns
int3
addr16
pop
jno
cld
dec
push
add
push
andl
gs
xor
mov
dec
scas
cltd
add
mov
enter
sar
rcrb
pop
loope
lock
hlt
lcall
push
jmp
lret
cs
fldenv
test
push
cs
add
cwtl
loope
loop
mov
aam
xchg
sbb
pop
outsl
std
push
xor
cmp
pop
mov
outsl
aas
push
mov
and
iret
cmp
lcall
and
out
xor
cmp
cltd
sbbl
mov
test
mov
pop
icebp
imul
pop
movsb
mov
in
bound
pop
sbb
pusha
or
popa
mov
loope
and
add
mov
pop
ficoml
inc
dec
cmpsl
js
jb
cmp
mov
push
xor
call
orl
dec
sahf
xor
cmp
test
mov
lods
xchg
xchg
popl
data16
xchg
push
mov
jae
fmull
push
cmp
rorl
in
repz
loopne
adc
add
test
cmp
jns
hlt
ret
ror
mov
aaa
icebp
add
test
adc
mov
cwtl
pop
xchg
lahf
andl
or
sub
adc
sarl
lcall
add
ret
inc
and
cmpsl
test
add
daa
adc
dec
ret
loop
dec
push
cwtl
cli
out
and
cli
jp
mov
dec
inc
ficoml
sarb
and
jle
test
add
aas
xor
jle
xor
int3
and
inc
xchg
call
and
xor
mov
sbb
out
dec
mov
inc
sbb
shr
or
movsb
scas
mov
mov
push
ja
dec
push
fisubs
sbb
js
mov
cmp
xchg
cli
xchg
mov
jns
outsb
push
negl
int3
cli
and
adc
insb
mov
add
fcmovu
stos
adc
pop
pop
jp
sub
xchg
sub
push
sbb
pop
negb
jmp
int
mov
cmpsl
pop
test
div
insl
push
jbe
mov
cmp
xchg
lahf
fdivs
jle
push
dec
xor
push
push
jmp
mov
mov
rorb
jb
rorl
push
mov
out
pop
fsubs
xchg
sbb
xlat
fstpl
imul
mov
insl
jge
es
mov
ja
out
dec
popa
jae
std
adc
das
loope
jno
outsb
ljmp
inc
xchg
mov
mov
and
push
mov
or
sahf
and
arpl
mov
cwtl
jne
insl
add
mov
xor
add
cli
and
out
mov
sti
cwtl
add
pop
aas
out
jne
mov
inc
ret
loop
jmp
fwait
push
xchg
adcl
ret
outsl
sbb
test
mov
imul
cli
in
pushf
les
in
sub
jmp
add
dec
inc
mov
mov
stos
pop
movsl
dec
xchg
cmc
fnsave
sub
inc
cmpsl
mov
cld
inc
js
int3
mov
mov
jmp
inc
pop
sub
mov
mov
push
xor
aaa
add
out
pop
sbbl
mov
lock
xor
mov
xchg
adc
mov
xchg
mov
and
fisubrl
xchg
inc
shrl
xchg
mov
mov
push
push
andl
arpl
mov
sub
daa
pop
xchg
bound
je
mov
xlat
sti
mov
push
add
pusha
sbb
mov
jae
mov
sti
test
dec
cmpsb
jmp
sub
jns
out
hlt
or
or
push
lods
aaa
add
or
enter
stos
notl
push
cmpsb
aam
push
fidivrs
scas
push
or
mov
xor
fcompl
pushf
jo
dec
shrl
repnz
sbb
aas
cmp
pop
adc
mov
push
sbb
das
pop
fimuls
or
scas
dec
les
aas
stos
dec
mov
data16
shrl
test
jne
xor
jge
negl
adc
lods
mov
push
mov
push
push
pop
xor
mov
mov
mulb
and
or
inc
push
xor
jmp
pop
addr16
lret
add
loop
in
xchg
aam
repz
in
pop
jp
aam
xor
xchg
and
ds
lcall
sarb
push
jg
mov
js
xchg
cmp
cld
faddl
fmulp
xor
pop
fcmovu
scas
pop
pop
rcrb
push
clc
xor
out
adc
add
pop
ret
push
push
enter
xlat
test
push
movb
pop
icebp
add
adc
jns
push
pop
add
mov
cmpsb
adc
pusha
lds
insb
mov
test
ss
jecxz
xchg
xchg
aad
dec
or
cltd
push
or
call
or
mov
shll
xchg
sub
js
in
fcmovne
or
pop
imul
jnp
je
test
xor
gs
imul
jge
jne
fsub
mov
and
hlt
cmp
mov
dec
dec
xor
adcb
sub
adcb
dec
and
sbb
mov
fxch
xchg
imul
pushf
bound
andb
ret
cs
sbb
test
inc
dec
bound
sub
aaa
into
filds
adc
out
pop
sbb
scas
pop
repz
pop
rorb
push
cmp
adc
or
insl
mov
xorl
bound
xchg
mov
insl
and
rcll
sub
jle
sbb
mov
shll
lahf
jl
les
dec
push
push
mov
fdivrs
nop
adc
sub
push
adc
adc
loop
pop
and
notl
leave
les
mov
sbb
dec
and
and
lods
inc
pop
stos
sub
lret
and
and
sahf
ret
sbb
xorl
outsb
cmp
xor
test
push
or
in
add
es
sub
fnstenv
pop
pop
lret
push
xchg
cwtl
and
xchg
dec
mov
xor
cmpsb
jo
daa
xor
cli
lods
jp
repnz
cwtl
insb
clc
and
push
xor
lds
jbe
cmpsl
xchg
sub
in
ret
arpl
mov
jnp
adc
mov
mov
mov
daa
dec
jle
xor
icebp
nop
mov
dec
add
sbb
mov
dec
sub
cld
js
fcoml
add
mov
repz
jecxz
mov
inc
in
add
jge
sub
addr16
repz
hlt
add
fmul
cmpsb
inc
sbb
push
into
mov
mov
cli
add
and
mov
xchg
aam
mov
lods
mov
js
mov
xor
jmp
jne
inc
lcall
jae
fwait
sub
or
sub
jae
neg
jne
and
xor
adc
popa
mov
roll
inc
pop
sub
lods
mov
sbbb
push
pusha
loop
xor
daa
cmpsb
push
push
push
lahf
fwait
xlat
cmp
dec
dec
and
inc
pand
jmp
jg
popa
dec
jae
sbb
mov
dec
add
insl
test
ret
pop
sbb
or
pop
push
sti
out
in
cmp
jle
jl
xchg
dec
inc
or
mov
cs
in
shr
inc
lea
or
in
movsl
push
dec
jo
and
jae
ds
mov
rcrl
mov
clc
sub
inc
jns
adc
jne,pn
test
stc
mov
movsb
adc
mov
pushf
scas
dec
sbb
cmpsb
movsl
cwtl
jb
popa
xchg
loopne,pn
testl
je
adc
mov
adc
dec
push
mov
repnz
repnz
inc
lods
in
aaa
adc
jecxz
imul
xor
xor
jecxz
out
cltd
rcr
xlat
in
test
mov
aam
inc
fimull
xlat
sarl
mov
push
add
ds
push
jl
xor
mov
pop
pop
pop
jge
push
xchg
fidivrl
dec
pop
mov
mov
ret
hlt
and
lret
cltd
je
lea
pop
stc
aad
fstps
pop
mul
mov
pop
inc
lock
xlat
jb
mov
jbe
or
arpl
adc
test
xchg
xchg
stc
mov
fdivs
ljmp
push
pop
in
xor
or
xchg
sbb
mov
js
cwtl
std
lret
aad
add
sub
adc
jo
mov
stos
jg
xchg
mov
xchg
mov
aas
out
movsb
add
push
adc
sbb
icebp
sbb
xor
mov
sub
in
test
adc
inc
mov
les
arpl
inc
test
outsb
mov
dec
xor
sbb
imul
jecxz
jg
imull
or
pop
xor
xor
aaa
jge
mov
mov
mov
pop
mov
outsb
repz
sub
popa
sub
and
mov
push
mov
pop
add
push
jnp
repz
mov
fs
lds
and
mov
inc
and
push
mov
rclb
add
pop
nop
xchg
into
test
inc
in
rcll
xchg
data16
xchg
negb
pop
fwait
lret
mov
inc
cld
fdivl
sub
lret
xchg
fimull
scas
icebp
cmp
dec
push
push
push
xor
sbb
inc
adc
sbb
jge
dec
inc
stos
push
push
mov
stos
pop
sub
or
and
xor
push
test
inc
jmp
jne
into
add
pop
xor
scas
cli
data16
outsb
pop
iret
lock
rorb
repnz
stos
and
jnp
testb
jle
xor
and
shll
adcb
add
sub
pop
sbb
int3
jo
fnstsw
mov
or
sarl
jge
xchg
mov
inc
fsubrp
into
inc
test
in
jb
jns
jmp
clc
leave
in
sbb
pop
add
jmp
mov
pop
adc
movsl
ret
idivb
mov
inc
lcall
sub
lcall
loopne
fbstp
sti
inc
xor
loope
ret
sub
loopne
cmc
mov
inc
xchg
inc
dec
adc
clc
or
push
xchg
test
ret
iret
ja
fisubrl
mov
mov
adc
push
rcll
inc
inc
xchg
pop
ja
mov
pushf
sbb
push
enter
fidivl
xor
jle
jmp
jle
xchg
test
xorb
cmp
pop
enter
fbstp
jp
fsubs
fistpll
inc
sub
adc
test
dec
inc
test
add
jo
push
pop
dec
xchg
or
stos
sub
push
incb
mov
pop
xor
movsl
icebp
mov
mov
jns
xor
pop
test
aam
loope
sub
sbb
stos
inc
mov
pop
cmp
pop
test
dec
jnp
jmp
and
xchg
bound
inc
ficomps
int
jmp
test
int
sub
loopne
les
push
imul
sahf
sbb
cli
sub
out
mov
in
mov
imul
mov
call
lods
wrmsr
mov
pop
sbb
cmc
rorb
out
mov
sbb
sbb
xor
ljmp
faddl
loop
imul
adc
or
pop
popa
pop
movsb
int3
xchg
xor
dec
push
cs
stc
lods
pop
inc
jae
ljmp
sarb
lods
outsl
lea
jl
mov
aad
leave
dec
xor
pop
mov
add
or
or
push
push
mov
mov
hlt
pop
jg
fs
pop
mov
pop
jmp
dec
mov
adc
stos
popl
sbb
fsubrs
dec
xchg
aam
jl
enter
dec
cmpsb
out
jge
sbb
and
cmc
cmp
out
aam
lods
es
xchg
bound
in
in
pop
rcrb
lret
xchg
mov
cmp
call
adc
ds
push
fists
jg
push
cmp
lock
xor
cmp
cmpsl
cmc
jle
xor
pop
movsb
mov
push
test
cmp
clc
scas
jp
std
insb
push
add
xchg
fnstenv
in
mov
fldenv
vsubss
fstl
cwtl
inc
icebp
add
inc
jge
out
call
xor
les
incb
xchg
and
pop
adc
int
repz
je
out
mov
call
lods
inc
inc
or
mov
pop
es
addr16
or
daa
dec
add
dec
mov
out
mov
and
nop
mov
fildl
jp
mov
ja
das
in
loopne
dec
cli
lods
mov
and
mov
mov
xlat
std
adc
hlt
ja
lock
rclb
test
dec
jl
lock
cs
loop
fidivrs
lahf
addr16
xchg
mov
or
or
movsb
bound
cli
cld
sti
cmpsl
pop
icebp
ljmp
aam
inc
faddl
push
jg
xor
scas
enter
clc
xor
xor
xlat
outsl
stc
push
jmp
movsb
imul
and
pop
lret
pop
negb
jmp
dec
imul
adc
mov
pop
insl
mov
test
jle
and
adc
shlb
ret
mov
push
insb
in
inc
out
shll
fstp
cmpsl
cld
jne
insb
xchg
test
jl
jno
dec
test
inc
fldenv
xor
push
mov
hlt
mov
leave
xor
mov
pop
mov
dec
ret
xchg
mov
cmp
sarl
cli
rcrb
cmpsl
and
es
mov
jcxz
xor
mov
cpuid
loopne
xlat
cmp
cmp
jb
pop
les
jmp
jp
stc
xlat
mov
dec
xchg
xchg
or
std
mull
sub
adcl
adc
je
icebp
mov
mull
and
bound
xchg
rcl
xor
pop
push
sti
aam
pusha
mov
and
xor
push
pusha
or
adc
jge
fprem1
and
push
imul
lahf
rcr
sub
iret
xor
ja
sbb
sahf
inc
popf
insl
pop
push
jns
sbb
out
ja
or
mov
rorl
cmpsb
push
dec
mov
pushf
out
lcall
dec
ret
ret
dec
popf
and
mov
mov
push
int3
pop
lret
cmp
ret
dec
test
mov
imul
clc
and
rcrl
jg
adc
push
add
xchg
inc
push
and
jnp
cli
jg
push
inc
adc
and
cmpsl
daa
jb
add
in
add
iret
adc
mov
aam
pop
out
call
js
xor
xor
movsl
jmp
push
fdiv
rclb
out
mov
mov
cmp
leave
jecxz
pop
push
nop
aas
sbb
in
aas
push
scas
sub
and
ss
jbe
jae
or
push
fdivrs
xor
cmp
jg
jecxz
jns
in
fs
lea
sbb
xrelease
mov
lock
icebp
sbb
aam
cld
jns
sbb
jo
in
notb
mov
mov
mov
xor
icebp
cmpsl
notl
imull
jo
sbb
arpl
enter
shrl
lcall
out
int
mov
ljmpw
mov
inc
jge
push
mov
and
pop
call
mov
xor
ja
lret
frstor
sar
sbb
and
adc
rdtsc
jl
push
pop
push
cmp
xchg
pop
cmp
xchg
jmp
push
pop
test
pop
repnz
inc
xor
sub
lods
or
push
add
pop
je
cwtl
lods
xorb
pop
insl
and
pop
inc
adc
mov
fs
es
xchg
jae
jnp
bound
xchg
mov
ffreep
mov
in
shll
mov
push
mov
jno
sub
fiaddl
jle
cmp
cmp
mov
adc
outsb
out
or
xor
mov
bsf
stos
int
jb
ja
inc
hlt
cwtl
mov
xchg
mov
in
test
icebp
lods
mov
mov
cmp
fnstcw
xchg
pop
lods
push
pop
fdivp
fstps
pop
scas
hlt
bound
outsb
leave
popa
jg
es
call
push
scas
pshufw
inc
push
popa
sbb
mull
dec
xchg
arpl
int
lods
push
dec
repz
scas
push
mov
xor
sbb
repz
lds
mov
out
std
icebp
mov
rcr
xor
outsl
inc
popa
jne
sub
xor
lods
sub
adc
repnz
cmpsb
gs
pop
mov
outsb
in
lcall
fucomp
add
xor
cmpsb
int
sbb
mov
pop
push
and
enter
and
into
cmp
sarb
jns
fldcw
mov
add
faddp
pop
jns
cmp
test
int
pop
outsb
jge
incb
andb
cmpb
fsubs
fiaddl
pop
xchg
aas
jns
dec
stos
insl
jno
enter
push
test
cmp
iret
sub
jb
add
movsb
stos
pop
out
mov
aad
dec
jle
repz
adc
test
inc
inc
pop
insl
or
in
int3
xor
mov
cmp
mov
loopne
xor
stc
dec
adc
xor
inc
sub
sbb
fistps
fisttpll
fadds
std
mov
enter
lahf
sbb
mov
push
inc
and
imul
push
adc
cltd
xchg
cmpsb
std
arpl
xor
insl
jno
loope
movsl
repz
add
mov
sub
mov
mov
adc
inc
sbb
add
aaa
loop
aad
enter
into
nop
cmp
fwait
xor
jl
push
int3
sahf
xor
shr
cmpsb
stc
test
lds
scas
xchg
jb
daa
mov
incb
aam
adc
aam
mov
xchg
movl
add
aas
imul
loop
xchg
mov
xorl
lea
sbbl
mov
sbb
daa
iret
imul
pop
insb
repnz
push
std
pop
bound
test
mov
mov
mov
push
mov
int
ficomps
dec
xchg
jnp
imul
sbb
adcl
xlat
sub
dec
cli
xchg
sub
movsb
mov
test
jl
push
nop
aaa
out
or
int3
arpl
fidivrs
mov
pop
mov
pop
cltd
cmp
out
xor
adc
cmp
cmc
imul
push
stc
fs
mov
xor
clc
nop
lret
out
mov
lock
jb
sub
popa
sahf
mov
push
rcll
repz
shl
cmp
ds
bound
mov
and
insb
xchg
cli
and
pop
cmpsl
sub
push
xor
into
movsl
lods
aad
inc
shl
inc
fcomps
fs
imul
lret
rep
jl
nop
repz
test
jns
adc
ja
sbb
cmp
aas
xor
adc
lret
jbe
inc
mov
mov
cmp
cmp
jmp
inc
lock
cli
pop
std
mov
enter
sub
arpl
adc
lahf
incl
xor
or
mov
sti
pop
add
jp
or
cwtl
mov
xchg
or
push
push
mul
les
outsl
inc
repz
test
lock
dec
mov
xchg
loope
into
fs
aad
adc
inc
add
dec
iret
ret
mov
jmp
mov
sbb
leave
pop
dec
loop
mov
movsl
inc
mov
adc
jecxz
cs
add
test
bound
mov
clc
enter
loope
cmpsb
shll
mov
test
icebp
push
inc
or
sub
sbb
push
jne
add
mov
into
and
mov
lock
pop
sbb
in
xor
scas
mov
cmp
mov
ljmp
inc
rorb
xchg
xor
aas
add
jmp
xor
cmc
in
clc
pop
mov
mov
sbb
jmp
xor
and
out
mov
out
je
push
ja
mov
mov
mov
adc
add
pop
in
jg
or
sub
adcb
dec
lcall
cmp
repz
cltd
out
pop
jecxz
jne
popf
cmp
in
sahf
cmc
pop
add
cmpsl
popa
cmpsb
dec
cmpsb
adc
bound
mov
push
in
cld
mov
jne
cmpsb
or
ficomps
dec
loopne
in
pop
insl
es
roll
adc
pushl
ficompl
fnsave
enter
in
mov
mov
lds
jo
mov
es
mov
add
in
clc
xchg
sub
mov
shrb
push
outsl
and
stos
fs
lds
arpl
divb
mov
cld
ljmp
and
mov
push
adc
out
clc
out
pusha
les
bnd
stc
push
js
test
mov
aas
jo
pop
jp
int
mov
insl
push
insb
icebp
pop
mov
push
dec
in
je
call
xchg
cmpsl
cmc
cltd
adc
xchg
push
xchg
sbb
jne
movsl
cmp
test
pop
inc
nop
mov
std
call
push
jge
loopne
sti
adc
inc
jbe
push
adc
outsl
rep
jnp
mov
stos
cmpl
push
loope
pop
sub
int
mov
xor
push
push
push
inc
outsb
xchg
and
jle
and
sbb
jae
int3
stos
mov
jb
dec
out
jg
roll
mov
scas
add
mov
sub
sbb
or
mov
jl
out
xchg
jo
push
cmp
out
pop
inc
add
movsb
ds
std
jg
out
stos
dec
mov
je
mov
lahf
jmp
addr16
loope
ret
jg
outsl
mov
pop
gs
add
pop
popf
stos
add
lret
addr16
jb
mov
call
lcall
cld
sbb
dec
mov
or
pop
aam
jne
stos
mov
mov
push
push
andl
adc
in
insl
push
dec
fs
sub
jns
sbb
xor
xor
lea
cmp
jp
inc
xor
cld
add
cmpl
fs
cs
add
cld
mov
cld
adc
push
iret
popf
cmpsl
sub
xchg
fisubs
xchg
or
add
dec
jnp
mov
lods
mov
outsl
pop
dec
inc
add
pusha
cmp
push
nop
jle
add
lcall
lcallw
pop
pop
loopne
scas
jne
mov
fmull
in
xlat
cmp
pop
lcall
push
lret
scas
inc
pop
xchg
sub
test
pushl
cmp
outsl
push
je
adc
mov
add
pop
push
sub
jne
pop
fistpl
jo
push
aaa
ljmp
lcall
adc
sbb
or
jecxz
mov
cmp
jno
popl
mov
stos
pop
negb
mov
fisubl
sbb
cmp
lea
or
bswap
sahf
and
jnp
aad
cltd
fldt
jp
mov
xlat
es
outsb
leave
cmc
lock
and
mov
or
sub
cmp
inc
mov
cmpsb
sbb
test
stos
out
mov
notl
sbb
adc
cld
sub
mov
mov
outsl
cmp
xor
hlt
jge
std
aaa
and
stos
jmp
jmp
mov
pop
testb
enter
loopne
pop
mov
add
arpl
insb
aam
adc
push
jl
int
out
test
in
les
and
mov
outsb
mov
cli
push
pop
dec
in
mov
adc
fdivs
inc
xchg
lods
scas
jge
and
pop
fcomps
pop
lds
mov
mov
decl
mov
mov
stos
push
or
and
call
orb
adc
adc
aad
cli
mov
jl
stos
imul
testl
dec
xchg
stos
push
cmp
shrb
pop
sub
test
or
test
mov
xor
mov
lahf
into
sti
pop
lret
daa
push
sbb
mov
insl
or
xchg
jo
push
cwtl
sahf
in
or
mov
sub
jecxz
stos
call
mov
push
call
pop
push
pop
or
movsl
and
add
js
gs
lea
lret
mov
ret
adc
add
movsl
and
cwtl
cmp
xor
jo
or
push
ss
inc
scas
repz
mov
add
mov
xchg
fdiv
adc
scas
or
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
out
sbb
and
addl
pop
xor
push
jne
loopne
push
dec
cmp
hlt
lods
clc
outsb
sub
push
mov
or
add
cltd
sbb
mov
test
aad
push
pop
pop
lock
clc
jae
or
fcompl
sti
mov
jno
jg
arpl
dec
fcmovne
jl
sbb
scas
push
fdivr
cmp
repnz
mov
fadd
push
add
and
sbb
cmpsl
ficoml
ret
mov
adc
addr16
xchg
lahf
cmp
sbb
jmp
lods
inc
adc
loope
leave
inc
inc
mov
jo
cmp
test
mov
jns
pop
outsb
lds
push
xchg
xor
aaa
pop
stc
lods
outsl
inc
pop
sti
add
xor
rcrb
ljmp
in
fcmovbe
lea
push
mov
arpl
push
stc
outsb
mov
dec
mov
sahf
fwait
lcall
push
jne
or
loop
adcb
lods
push
jmp
pop
insl
adc
dec
push
jl
sbb
inc
push
les
mov
and
or
cmp
inc
nop
mov
pop
in
pop
fisttpl
ss
dec
cs
and
or
xchg
jae
test
mov
cltd
xchg
aam
add
test
in
data16
testl
mov
sti
fisubrl
cmp
sbbl
repnz
in
pop
js
fildl
or
mov
and
mov
into
lret
mov
xor
pop
jb
lahf
cmp
mov
lret
pop
out
sub
pop
ss
pop
inc
cli
sahf
jne
mov
ret
add
push
inc
mov
ret
stos
mov
rclb
lock
repz
sbb
subb
test
es
sti
mov
lahf
jecxz
out
pusha
mov
insl
mov
sbb
jae
call
push
dec
lds
sub
add
mov
sahf
test
sahf
leave
bswap
fcmovb
mov
js
add
inc
and
sbb
push
push
pop
loop
outsl
pop
mov
out
test
fisubrl
pop
call
in
stc
mov
adc
clc
or
mov
lahf
inc
ja
xlat
outsb
push
mov
popa
or
loopne
push
fcoml
cmp
lahf
stos
cmp
pop
shll
add
sbb
fldcw
adc
lea
sahf
pop
sahf
fadds
ret
sahf
mov
xchg
in
rclb
in
mov
mov
loop
push
js
push
mov
pop
and
dec
fdivs
cli
ja
inc
fs
out
mov
dec
movsb
mov
dec
in
jl
ljmp
cmpl
push
clc
sar
pop
inc
cmpsb
pop
pop
mov
and
lds
xchg
mov
sbb
ss
lcall
cli
xchg
cwtl
pop
icebp
nop
sub
mov
inc
push
or
call
fwait
neg
icebp
xor
xor
std
icebp
pusha
cs
mov
push
add
add
repz
adc
cli
lods
out
mov
out
loope
ja
aas
push
jmp
in
shrb
das
bound
jne
lods
mov
add
in
or
dec
cwtl
ljmp
scas
cld
std
aad
cltd
cmp
test
rcl
std
rcrb
jge
and
or
inc
imul
lea
adc
jmp
out
jne
dec
outsl
mov
or
movsb
mov
mov
lds
shlb
cmp
sub
ss
ficompl
ret
aam
fisttps
mov
sub
fisubl
jbe
and
cmp
mov
scas
lahf
push
push
pop
lret
in
push
dec
xor
cltd
fs
and
insb
cmp
push
sub
call
daa
movb
andb
imul
gs
iret
pop
mov
in
mov
dec
popa
stc
add
jae
call
or
movsb
jmp
jbe
mov
jle
loop
or
scas
fadds
dec
or
cmp
pop
jecxz
inc
ds
mov
in
inc
in
nop
cmpsl
sub
sub
push
add
in
sub
dec
sbb
aaa
pusha
add
push
jl
pusha
clc
ffree
cmp
lods
or
andl
stc
and
ljmp
outsl
or
sbb
popf
xor
mov
sub
out
pop
cmp
mov
mov
out
mov
mov
enter
jl
jle
neg
xchg
pop
mov
imul
daa
insb
jae
sbb
dec
add
das
jne
mov
and
inc
cmp
test
daa
fdivr
out
repnz
xor
lods
sarl
cmpsl
adc
enter
in
xor
adc
scas
loop
dec
shl
pop
cmpsb
xchg
fists
cli
push
int
mov
push
push
fs
and
adc
mov
fldenv
xchg
push
sub
scas
ja
push
hlt
mov
stos
call
insl
add
shl
add
movsb
lods
out
fcmovnbe
mov
xor
and
or
inc
cs
adc
xlat
pop
test
aaa
push
add
rcrl
loopw
testb
stos
decb
xor
push
adc
hlt
push
cld
mov
xchg
inc
in
or
sub
dec
dec
adc
adc
and
pop
sub
aas
mov
stos
roll
and
xchg
jae
mov
adc
dec
sub
sbb
jp
mov
scas
in
xchg
shr
sbb
dec
sahf
ret
das
mov
in
push
mov
je
push
xchg
mov
lods
inc
jmp
xchg
xor
add
mov
xor
enter
add
jne
fbld
shll
mov
mov
lret
arpl
xchg
lret
jne
or
pusha
sbb
lret
inc
mov
lea
cmc
add
mov
and
pop
inc
ja
aam
mov
adc
scas
or
rcrl
cmpsb
mov
fs
hlt
adc
lcall
and
in
decb
jne
sti
adc
inc
xor
mov
dec
mov
dec
and
scas
test
dec
stos
or
inc
mov
bound
cld
ljmp
in
into
or
dec
xchg
mov
pop
cmpsl
add
fidivl
or
nop
call
fimuls
daa
jp
jg
shl
xor
inc
lret
into
rclb
int
insl
sbb
lea
je
xor
sub
insl
adc
adc
mov
jae
jne
xchg
mov
bound
cmp
dec
xchg
cltd
jno
adc
mov
les
dec
sub
add
jbe
mov
dec
test
xchg
movsb
adc
sbb
mov
sub
scas
push
ret
jg
js
ss
mov
and
sub
cmpsl
sub
mov
mov
and
fdivs
xchg
test
jmp
stos
jecxz
cmpsb
rol
rcrl
lds
sarl
add
les
dec
jbe
mov
loopne
js
push
sar
sub
cmp
mov
cli
mov
insb
iret
sub
cli
imul
stos
mov
cmp
cmpsb
dec
dec
shll
push
int
pop
daa
std
shlb
mov
mov
icebp
aad
cmpl
ret
xchg
repnz
mov
push
gs
and
mov
inc
cmc
adc
leave
xchg
mov
dec
outsb
cltd
scas
sub
icebp
rorb
popa
shlb
jne
cld
ret
pop
add
adc
je
add
inc
out
mov
pop
cmc
cli
mov
mov
sbb
call
ret
imul
lret
cmp
sbb
mov
or
xor
mov
jns
mov
push
fs
dec
fs
add
mov
xchg
popf
or
sbb
dec
mov
cmpsl
fsubs
adc
xchg
or
cli
mov
stc
and
insl
fimull
pop
xchg
testb
dec
popf
arpl
push
mov
add
jecxz
stos
imull
adc
xor
ret
or
pop
fdivrp
adc
mov
int
movsl
ljmp
add
mov
pop
sub
movsb
imul
lds
fnstenv
add
fwait
or
dec
jecxz
js
scas
mov
dec
pop
aas
andb
in
movsl
cmp
clc
push
test
negb
lods
cmpsl
movsl
push
cmp
cmp
mov
add
imul
lcall
xchg
ljmp
rcr
out
dec
mov
loope
xor
add
lds
daa
outsb
cmc
mov
sub
loop
dec
jg
and
shll
in
mov
sbb
cmpsl
jecxz
xor
adc
jnp
fistps
xlat
sub
aad
pop
int
movsb
push
mov
pushl
out
sub
imul
mov
pop
test
mov
dec
outsb
sarl
pop
jmp
js
dec
test
in
sti
jne
gs
std
mov
sbb
lret
jnp
add
gs
lds
call
dec
sub
xchg
xchg
mov
imul
sub
xor
int3
xchg
ss
mov
stos
jmp
xlat
and
adc
push
and
cld
ja
jb
imul
out
xor
xchg
jl
push
mov
mov
shl
and
jmp
adc
popa
and
repz
andb
push
lds
push
lret
out
lea
mov
aas
leave
pop
shlw
mov
pop
cld
jne
imul
push
dec
jmp
jns
rcrl
cmp
fucom
jp
in
enter
fs
inc
shrl
cmp
push
lock
idiv
adc
pop
rcll
or
cmp
xchg
scas
jg
adc
rolb
inc
push
add
les
call
daa
lods
dec
loop
xor
xor
stos
test
xchg
hlt
pop
push
xor
roll
clc
push
adc
mov
cwtl
in
push
xchg
js
lahf
es
dec
bsr
pop
pop
jbe
ficoms
aam
insb
dec
dec
jmp
mov
mov
sti
iret
lcall
iret
int
aaa
mov
xchg
leave
cwtl
mov
add
xchg
jle
sub
cmpsb
clc
inc
jg
sub
arpl
xor
std
into
cmp
popf
jecxz
pusha
or
sub
mov
xchg
addr16
dec
mov
aas
into
push
sbb
adc
clc
out
pop
int
add
cmp
mov
arpl
cmpsl
or
xor
push
xor
add
ror
mov
lods
cmp
inc
xor
adc
ss
adc
and
repz
sub
aad
rcr
std
mov
or
popa
std
test
call
mov
inc
dec
jg
mov
sbb
inc
cli
mov
jno
mov
xchg
push
dec
cli
jb
out
aas
jae
and
cltd
xchg
inc
pop
arpl
xchg
push
or
and
jl
inc
fidivrs
push
pop
cmp
xchg
aad
shl
pop
xchg
xchg
addr16
pop
cld
inc
test
inc
aaa
adc
jb
or
xchg
sub
aas
out
outsl
add
inc
cs
lods
arpl
push
es
icebp
loope
lds
xchg
mov
js
cld
jmp
xchg
pushf
loop
hlt
mov
in
mov
rorb
push
lods
sbb
push
faddl
fdiv
add
outsb
jbe
pop
sub
dec
mov
dec
jmp
sbb
xchg
sbb
cmp
lods
xchg
sbb
push
mov
xchg
movsb
aam
outsb
rcr
mov
jl
and
inc
mov
fistps
jmp
pop
jbe
cmpb
mov
imul
fcoml
arpl
cmp
loopne
popa
addb
iret
lods
leave
out
cmp
mov
sub
add
or
insl
push
orl
cwtl
mov
xchg
xchg
pop
mov
mov
or
daa
pop
movsb
test
add
fisttpll
in
sbb
cwtl
and
pop
icebp
dec
filds
mull
and
sub
push
inc
mov
dec
nop
sub
jecxz
pop
pop
repnz
mov
mov
pop
sub
mov
and
push
in
icebp
push
pop
lahf
push
lea
and
shrl
adc
xchg
mov
movsl
dec
sbb
inc
ss
call
mov
and
outsl
pop
and
movsl
jno
lods
inc
push
sub
xchg
dec
loope
or
pusha
call
fs
push
mov
lods
sti
mov
push
cmp
or
sahf
inc
inc
add
mov
jg
andl
jbe
jb
push
in
or
mov
inc
mov
sbb
cmp
rcll
add
mov
data16
lsl
sbb
pop
cmp
cmp
rclb
mov
cmp
or
fucomp
pushf
movsb
in
cwtl
mov
arpl
mov
or
rorl
jne
cmp
lcall
inc
dec
imul
into
or
fsubrl
shrl
lret
gs
xor
cmc
xor
insl
inc
lahf
inc
bound
cmp
testl
ds
mov
inc
mov
dec
ds
dec
icebp
xor
in
mov
ljmp
test
fldenv
mov
lret
xor
or
in
mov
inc
cwtl
dec
roll
push
lods
or
push
xchg
push
outsl
cmpsb
stc
push
mov
cld
dec
ja
xchg
pushf
fstpt
pop
neg
dec
push
aad
mov
in
add
mov
lahf
or
xchg
xchg
lea
test
xor
out
int
popf
pop
push
fnstenv
sti
xor
aam
pop
adc
add
dec
arpl
ljmp
push
fidivl
mov
cwtl
jecxz
adc
fidivl
pop
fnstsw
sub
jo
lock
xor
fwait
and
call
fists
dec
fs
pop
pushf
mov
pop
fldl
dec
fsubs
jg
fcmovnu
inc
sarb
iret
call
cmpsb
negl
sub
and
push
pop
cmp
aas
shlb
bound
popa
push
ljmp
sub
sub
pop
lods
les
sbb
rolb
test
test
popa
shrl
inc
mov
push
es
inc
mov
je
and
inc
daa
xor
push
xchg
push
xchg
sbb
orb
subb
addr16
jns
sub
repz
in
imul
and
sbb
and
aas
ret
xor
and
js
push
push
cli
jg
ja
ljmp
enter
dec
mov
sbb
addr16
leave
inc
push
inc
in
mov
es
mov
scas
cmp
dec
and
dec
mov
scas
aas
sbb
xchg
and
mov
add
lret
inc
stos
xor
aad
add
mov
out
push
jmp
mov
pop
pop
jle
cwtl
mov
mov
push
clc
pushf
incl
cmp
xchg
xchg
movsb
mov
stc
clc
mov
outsb
mov
orb
imul
stos
xchg
cmpsl
adc
mov
inc
or
ljmp
sbb
gs
testl
aas
int3
add
jg
push
jle
mov
or
outsl
repz
mov
xchg
mov
fistps
inc
nop
inc
aas
fisubl
jne
mov
xchg
loop
cmp
mov
dec
imul
sub
mov
xchg
xlat
mov
mov
fdivl
ror
repz
dec
jmp
push
movsl
jns
adc
sbbb
cmp
iret
into
xchg
fidivrl
rcrl
cwtl
dec
mov
fldcw
mov
roll
add
jp
outsl
in
lret
repz
pop
movsb
or
call
fwait
add
mov
cmp
aaa
in
cmp
mov
fisttpll
js
scas
popa
flds
push
outsb
cmp
jg
out
sub
inc
cmp
aam
loope
sbb
mov
inc
clc
sahf
cltd
popa
lods
xchg
cmpl
insb
and
cld
mov
pop
adc
iret
mov
int3
shl
test
into
arpl
add
mov
popa
lea
jne
loop
aam
mov
and
jp
fs
cmpb
adc
mov
xchg
cmp
and
mov
addr16
sub
je
fdivrl
fdivl
fs
inc
mov
int
add
es
xor
lret
cli
out
lods
xor
lock
and
inc
mov
mov
dec
cmp
ja
subb
mov
mov
ficomps
test
bound
pop
enter
xorb
test
jecxz
inc
xor
xchg
outsb
fnstcw
jge
decb
ljmp
jl
pop
sub
imul
sub
lret
and
rcrl
dec
fmull
mov
pop
mov
jge
inc
sub
mov
pop
add
mov
add
push
xchg
fwait
sbb
dec
add
loop
push
jmp
mov
jae
mov
cmpsb
in
test
dec
jno
popf
push
ss
sub
ljmp
mov
push
adc
sahf
push
sbb
shll
cmp
rdmsr
dec
xor
xchg
inc
roll
fsubs
mov
mov
scas
lock
ja
popf
jo
out
rclb
punpckhwd
scas
lea
hlt
jb
push
imul
xchg
stc
inc
pop
jbe
and
decl
inc
push
loop
idivl
int3
imul
dec
ret
and
adc
push
stos
shlb
dec
mov
inc
adc
dec
xorb
cli
mov
sbb
stos
mov
inc
and
cmp
xchg
and
pop
js
pushf
sub
jbe
cmp
decb
insl
push
xlat
inc
xchg
stos
or
ficoms
fidivrs
mov
push
inc
call
dec
mov
gs
pop
and
rcl
arpl
jmp
or
push
cmp
fwait
inc
cmpsl
mov
jnp
inc
shlb
outsb
and
stc
pop
lods
mov
inc
add
add
and
cmp
add
pop
ret
sbb
mov
clc
push
sub
int3
mov
cmpl
and
cmp
imul
mov
lods
mov
inc
decl
mov
ljmp
pop
push
cmc
xchg
jno
adc
mov
lretw
out
adc
push
xor
ret
out
cs
xor
loope
push
xchg
movsl
xchg
or
enter
les
xchg
fistps
dec
xchg
in
adc
cmpb
rcl
sbb
pop
rcr
mov
adc
sub
jl
test
aam
popf
xchg
rclb
or
mov
enter
or
and
jl
xor
adc
enter
xchg
push
scas
adc
ljmp
pop
lret
popa
mov
mov
jmp
es
and
mov
pop
icebp
imul
mov
and
mov
fstps
mov
mov
pushf
add
dec
mov
div
mov
addl
lahf
mov
push
in
aad
into
push
idivl
lret
adc
std
inc
mov
enter
rorl
mov
mov
jbe
repnz
dec
mov
aad
das
dec
dec
mov
pusha
repz
jns
cltd
xchg
adc
test
dec
mov
adc
cli
sub
std
lea
xchg
pop
xor
scas
xchg
dec
in
mov
adc
jo
pop
xorl
jle
push
sti
rorb
mov
fwait
data16
imul
mov
shlb
pop
mov
subl
stos
or
xchg
insl
jp
loopne
inc
test
xchg
xor
cmp
and
and
pushf
push
jb
jae
dec
clc
fdivrs
pop
out
pop
icebp
adc
jecxz
das
popa
pop
add
jb
int
cmp
cld
mov
mov
mov
sbb
pop
add
aas
mov
mov
icebp
inc
cmc
add
pop
cmpsb
je
xchg
test
mov
or
test
jge
jmp
inc
mov
lea
jbe
xchg
movsl
and
data16
in
enter
fstl
inc
pushf
aas
jae
fcom
pushf
addr16
lds
out
lahf
jmp
jmp
int
jp
jbe
pop
cmp
push
lahf
aam
push
jnp
dec
push
push
pop
pop
pop
int
jle
mov
pop
ret
dec
pop
sub
lahf
push
loopne
dec
pop
fcmovnbe
pusha
test
mov
inc
and
test
mov
or
popf
pop
and
push
ljmp
push
mov
pop
repnz
out
repnz
fldenv
jecxz
mov
sub
insb
popa
rorb
imull
bound
mov
or
test
dec
clc
mov
les
mov
inc
xor
loopne
add
mov
jo
movsb
jge
mov
std
mov
dec
aad
adc
pop
imul
bound
jp
mov
lahf
lret
lret
imul
mov
add
push
xor
pop
sub
mov
cwtl
lret
push
mov
jmp
cmc
cli
lds
pop
sub
aas
and
jo
call
jp
mov
mov
xorb
add
test
jp
jmp
scas
push
test
mov
adc
adc
mov
sti
dec
push
or
push
cli
fwait
jmp
add
pusha
cmp
addr16
int3
or
dec
add
push
adc
add
stc
mov
fwait
mov
adc
add
jnp
clc
push
cli
jbe
add
jmp
cmc
mov
pop
or
idivl
jmp
loop
ja
in
mov
in
xchg
jno
sbb
insl
push
cmc
mov
clc
mov
mov
cmp
dec
test
test
xlat
popa
sub
sbb
mov
xlat
and
repnz
int
je
push
lcall
mov
mov
xchg
sbb
dec
mov
scas
mov
push
loop
lods
or
mov
cmp
addr16
lock
sti
adc
push
hlt
add
adc
lahf
jp
popa
fidivrs
add
fwait
cmp
push
cmp
sahf
sub
bound
sbb
outsl
pop
gs
pop
or
lret
mov
jle
xchg
adc
pop
xor
inc
out
jnp
inc
loope
das
lods
mov
add
je
out
add
fwait
mov
out
adc
sub
fwait
shrb
ret
or
mov
loopne
movl
mov
test
in
movsl
sbb
inc
lods
enter
lock
push
inc
jbe
ds
mov
push
pop
hlt
mov
and
add
aas
add
je
push
dec
push
push
pop
or
test
fildl
gs
xchg
pop
or
mov
sub
cwtl
push
add
xlat
cmp
jmp
sbb
sub
inc
dec
fnsave
pop
in
repnz
loopne
andb
jne
fimuls
in
ret
enter
or
scas
int
xlat
dec
loope
enter
mov
fucomp
jo
jae
cld
movsl
fsubs
push
add
push
mov
bound
ret
inc
cwtl
xor
mov
dec
jo
adc
es
xchg
sahf
sbb
ds
adc
jmp
imul
xchg
in
les
sbb
cmc
testb
xlat
pop
pop
jg
mov
lcall
cmp
sub
push
sbb
pop
jno
and
inc
pop
xchg
xchg
adc
ds
jb
add
test
je
add
icebp
xor
mov
fstpl
stos
fs
and
sahf
je
or
push
jae
scas
adc
fnsave
repnz
enter
add
jecxz,pt
dec
out
xor
xchg
cmp
ret
push
ret
dec
hlt
jae
mov
sbb
or
xchg
inc
jecxz
mov
push
dec
lret
aas
neg
xor
adc
les
jne
mov
fildll
adc
pushf
push
lcall
cmp
dec
in
or
or
mov
cltd
fsubr
pop
jmp
ret
bound
pop
sub
in
popa
icebp
addr16
mov
mov
dec
sub
cmp
push
stos
outsl
inc
lret
xchg
sub
and
and
aad
pop
lds
arpl
xchg
sub
pop
pop
ret
fisttpll
shrb
stc
lret
mov
mov
xchg
inc
cli
mov
xchg
in
pop
insb
out
push
cltd
cmc
mov
sub
or
xor
inc
xchg
cbtw
mov
into
pop
call
sub
scas
fwait
adc
fmull
and
jnp
xchg
xor
lods
hlt
stos
lods
fwait
pop
es
repz
js
and
sub
in
loope
pmullw
adc
jne
dec
cld
leave
fldt
xchg
push
xchg
das
shlb
aad
cmp
popl
popf
mov
cmp
insb
cmp
ret
fildl
scas
fimull
outsl
cs
fldcw
pop
xchg
cmp
call
jmp
cld
fnstenv
je
or
testb
jmp
shr
inc
int
subb
add
je
push
pop
inc
movsb
jg
xchg
xor
clc
mov
in
repz
adc
mov
ja
mov
adc
jns
lahf
test
inc
mov
push
cmpl
sbb
xchg
mov
xor
dec
loopne
rcrl
idivl
inc
fisttpll
into
jns
push
add
rcrl
cld
sbb
xor
lods
mov
aaa
and
sahf
push
nop
pop
pusha
gs
pop
sub
mov
and
and
mov
mov
ja
sub
out
test
or
jno
inc
sbb
out
out
jg
enter
and
push
movsl
jbe
push
int3
aam
frndint
mov
in
ss
xor
dec
roll
push
mov
cmp
incb
sbb
xchg
enter
repz
jo
xchg
cwtl
not
cmp
push
icebp
decl
cmp
and
popa
xchg
fsub
leave
pop
and
jbe
and
mov
pop
and
xlat
aas
cs
ds
dec
cmp
push
jb
in
cmpsl
push
enter
addr16
fsubrs
or
lahf
push
pop
dec
rolb
lods
sbb
jecxz
mov
jecxz
movsb
aad
movsl
adc
push
mov
add
or
mov
mov
jo
mov
outsb
push
sbbb
mov
xchg
mov
int
adc
in
shll
xchg
lock
mov
xchg
loopne
inc
addr16
push
cld
test
cmp
ljmp
nop
cmp
add
stos
push
adc
popa
mov
enter
sub
pop
add
mov
jns
sbb
jmp
mov
and
mov
popf
cmc
push
pop
jbe
movsb
or
pop
mov
inc
cmpsb
hlt
imul
or
mov
sub
or
pushl
dec
sbb
xchg
push
and
and
add
or
dec
aam
cmpsl
adc
aad
inc
inc
out
sti
sarl
test
xor
inc
popa
xchg
gs
pusha
ljmp
mov
mov
or
push
hlt
outsb
leave
in
pop
pop
shl
inc
shlb
dec
repnz
out
jno
sub
ficoms
imul
fs
movsb
leave
and
out
pop
daa
cli
addl
xchg
cmp
test
push
jg
xor
or
pop
sbb
xchg
iret
mov
jle
fmuls
push
xor
andl
sub
rorb
lock
jns
jecxz
repz
pop
push
add
add
mov
repz
pop
sbb
cmpsb
stos
cmp
sbb
xlat
div
movsb
mov
add
cwtl
jecxz
dec
pusha
xchg
loop
out
movsb
fisttpl
cli
sub
pop
and
sub
fxch
ret
int
iret
push
rcrl
push
lcall
dec
outsl
adc
test
fdiv
pop
pop
push
sbb
cmpb
inc
icebp
sbb
imul
push
fisubrs
call
or
or
aas
mov
lret
insl
adc
inc
and
test
push
cmp
xchg
dec
cmp
add
adc
aad
mov
pop
dec
pusha
subb
pop
gs
inc
xorps
sti
mov
imul
test
cmc
mov
dec
aam
les
dec
lcall
sbb
sub
daa
add
xorb
lock
mov
lods
sar
push
shr
nop
ds
cli
fstpt
pop
adc
push
fimuls
dec
sub
or
xor
jnp
loopne
and
push
pushf
mov
and
pop
mov
in
adc
push
lcall
sbb
out
jnp
inc
sarl
scas
les
lds
cmp
and
push
xor
or
roll
mov
cwtl
stos
cli
push
fisttpll
scas
fadds
clc
outsl
cwtl
pop
or
and
cmp
push
push
insb
push
xchg
jne
movsb
pop
int
js
push
and
mov
sbb
xor
xor
in
lds
pop
dec
mov
scas
movsb
adcl
cwtl
data16
js
lods
movsl
inc
data16
call
out
jg
rcrb
mov
pop
push
xchg
arpl
sbb
jbe
sarb
pop
xlat
lea
sti
ljmp
xchg
out
inc
lret
jnp
enter
fs
and
je
mov
mov
mov
adc
fldt
or
pop
jmp
add
lret
mov
ficomps
stos
cmp
cmpsb
cwtl
int
push
push
inc
js
push
sub
jge
popl
test
xchg
jns
xchg
sti
mov
das
xchg
mov
test
lahf
push
sbb
out
decb
out
mov
cmp
adc
add
pusha
and
daa
push
sbb
xchg
mov
or
sbb
fdivrp
repnz
icebp
push
lahf
jbe
pop
xor
insl
iret
dec
mov
xchg
sbb
cmp
aam
addr16
stos
shll
je
pop
push
or
aas
push
mov
xor
jecxz
pop
jl
adc
mov
leave
hlt
in
push
les
add
enter
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
lods
xchg
cltd
repz
inc
addb
push
sub
mov
xchg
fs
xchg
loop
xchg
fsub
not
inc
repz
fcmove
loope
rorl
pop
mov
add
jae
and
stc
cmp
pop
ret
fwait
scas
ja
jnp
or
fsubrl
in
outsl
std
shrl
test
lds
mov
loope
outsl
popf
dec
xor
loop
xchg
fisubl
scas
stos
fdiv
or
scas
xor
add
adc
sbbb
and
repnz
jbe
dec
jp
sub
jo
inc
rcll
mov
lea
add
push
sbb
imul
jg
inc
mov
fs
xor
cmp
cs
daa
push
decb
pusha
imul
inc
enter
cmp
sbb
pop
sbb
jmp
fisttpll
arpl
inc
sbbb
adc
xor
test
mov
leave
imul
dec
xchg
cmp
cmpsl
arpl
xchg
aas
inc
and
inc
xchg
inc
or
repz
movsb
xor
mov
adc
into
mov
jae
sbb
pop
and
xchg
inc
fdivl
dec
and
add
rol
inc
mov
mov
dec
dec
cli
rolb
add
sbb
imul
repnz
xor
btr
pop
cld
fmull
adc
sbb
adcb
sar
pop
in
js
ret
add
xchg
jmp
insb
loopne
add
adc
push
dec
nop
and
xlat
mov
pop
repnz
jb
lahf
addb
lret
pop
aas
pop
aas
cmp
clc
repnz
xor
daa
in
or
sbb
loope
xor
gs
xor
ret
inc
daa
ljmp
xchg
pop
or
pop
xchg
push
mov
mov
sub
sbb
mov
ret
lret
and
push
push
fdivs
addr16
outsl
ljmp
adc
aam
pop
cmp
xchg
jns
inc
cmp
fsubs
xchg
xor
daa
nop
or
rclb
mov
mov
sub
xor
in
ja
sub
push
or
jp
dec
mov
and
clc
sbb
mov
xor
fs
xor
jmp
xchg
xchg
xor
inc
cmp
xchg
mov
pop
pop
jp
xchg
push
int
cmp
std
int
mov
jmp
sbb
lcall
jno
fs
sub
push
fistpl
ficoml
cld
shrb
out
movsl
xchg
and
inc
adc
int
mov
fldenv
test
shll
cld
pushf
aas
in
xchg
sbb
jae
xchg
notl
sub
sbb
iret
out
or
repnz
jle
ret
pop
adc
xchg
or
out
rcrl
sub
cmp
clc
rol
and
push
inc
mov
shlb
repnz
je
push
mov
mov
fistpll
mov
pop
sbb
mov
cld
loope
lahf
icebp
repnz
aas
sbb
cmp
pop
dec
insl
jl
add
inc
sub
popa
bound
mov
sti
stos
sar
repz
xchg
pop
rorb
mov
div
or
and
dec
sub
inc
bound
stos
into
bound
dec
jmp
inc
scas
aad
jb
mov
adc
shlb
dec
ficompl
std
movsb
mov
es
xchg
dec
shlb
mov
test
mov
lods
mov
outsb
call
out
fistpll
xlat
lret
fwait
xchg
mov
js
into
mov
out
not
jae
sbb
imul
jbe
jecxz
in
xorl
les
shl
aad
lds
sub
or
iret
mov
sub
jp
xchg
into
insb
sbb
mov
test
fisttpl
sbb
icebp
fldcw
add
ficompl
in
mov
and
pop
movsl
add
adcb
pop
or
movsl
insb
push
lea
call
pop
push
mov
push
scas
rorl
scas
aaa
mov
aam
push
pushf
ret
pushf
fcoms
push
xchg
in
jecxz
add
inc
mov
pop
loop
mov
out
mov
xchg
icebp
call
jecxz
add
pop
dec
out
aam
jge
dec
out
call
int3
fisttpl
sarl
outsl
inc
xchg
test
ljmp
nop
shl
sarb
and
dec
lret
sub
push
arpl
adc
sbb
jo
rorb
mov
mov
add
or
adc
dec
addl
sub
jmp
vmaxss
add
rclb
mov
sbb
mov
imul
idivl
push
mov
sbb
mov
add
jb
sahf
inc
sbb
add
clc
mov
jp
push
ljmp
jg
mov
out
rclb
jnp
orl
cmpsb
and
push
cs
push
nop
adc
pop
adc
mov
xchg
scas
push
sub
sub
mov
sbb
out
xchg
xor
add
aam
ss
sub
fwait
shll
or
cltd
mov
mov
mov
ret
repz
inc
leave
xchg
inc
bound
sti
inc
pop
add
xchg
das
dec
call
xchg
pop
lods
and
sub
fs
dec
inc
bound
mov
jne
mov
pop
lret
rorl
add
pop
add
cmp
mov
and
pop
xor
push
or
xchg
xor
pop
arpl
inc
repz
mov
fs
out
mov
out
mov
cwtl
cmpsb
jl
xchg
cmpsl
gs
or
lea
add
repz
outsb
nop
sahf
fstp
mov
pusha
push
pop
or
pop
jo
jp
js
pop
xor
in
les
push
mov
ljmp
adc
mov
cmp
adc
jp
jbe
jbe
pop
mov
hlt
xchg
push
orb
adc
jp
mov
icebp
adc
rcll
push
enterw
imul
insl
pop
pop
loopne
out
and
dec
cli
rcll
enter
imul
rcrb
mov
mulps
adc
inc
adc
leave
das
add
imulb
or
outsb
xor
test
lods
in
es
pushf
dec
mov
cmpl
adc
sub
mov
sub
into
cli
mov
pop
mov
push
pop
push
jo
jp
rcll
mov
inc
mov
inc
pop
jbe
push
ret
jne
out
ret
dec
pop
pop
movsb
rolb
dec
out
mov
adc
cmpsl
cmp
mov
js
js
adc
sbb
and
dec
call
call
daa
in
repnz
and
sub
in
enter
inc
daa
rol
movsb
aas
int3
inc
in
xchg
lret
mov
sub
inc
xchg
adc
loopne
mov
cmp
pop
mov
jbe
insb
out
daa
sbb
sbb
add
cmpsl
xchg
or
push
shll
mov
mov
mov
imul
ds
jb
inc
dec
cmc
xor
arpl
jb
xchg
je
cmc
sbb
dec
dec
mov
test
xor
hlt
cs
pop
fdivrp
test
daa
mov
ret
jns
xchg
je
dec
inc
in
sub
sti
cmp
inc
push
in
rol
pop
jecxz
inc
sub
repz
inc
inc
pop
mov
shr
mov
add
adc
pop
add
lret
jnp
cmp
add
in
pop
push
fs
mov
cwtl
imul
and
xlat
jo
mov
fisttpl
xchg
and
mov
insb
pop
test
xor
push
xchg
push
jmp
pop
fists
fldt
sub
inc
xorl
or
fcoml
sahf
jle
add
jl
das
insb
mov
sub
mov
mov
mov
mov
lret
jb
int3
jmp
sbb
lea
adc
scas
mov
mov
jmp
add
cltd
cwtl
in
cwtl
mov
cmp
cmp
jecxz
fdivl
dec
dec
fimuls
mov
fbstp
push
xchg
mov
mov
imul
in
clc
ja
or
call
rolb
dec
mov
into
xor
cmp
jbe
gs
aaa
xchg
jp
mov
test
shrl
or
or
fistps
inc
inc
push
mov
xor
orb
int
sbb
mov
fs
icebp
leave
pusha
aad
xchg
sub
push
mov
repz
aaa
mov
fbstp
aas
lods
lea
popa
add
iret
xchg
pusha
pop
dec
mov
and
jmp
push
pusha
adc
repnz
ret
cmpsb
push
aaa
out
cmpsl
and
or
test
sub
cmp
mov
mov
jecxz
daa
dec
fs
pop
call
xchg
stos
into
sbb
dec
cld
stos
mov
mov
in
inc
sub
and
jmp
push
decl
mov
test
fnstcw
dec
dec
pop
sbb
inc
mov
aaa
fst
loopne
lea
xor
roll
lods
jne
gs
idiv
inc
inc
pop
inc
dec
mov
and
cmp
mov
xor
jecxz
push
pop
sub
arpl
dec
arpl
push
call
jns
jge
inc
adc
aas
mov
mov
into
mov
testb
stc
cmp
pop
mov
movsl
inc
pop
sbb
jne
call
xor
scas
outsb
pop
leave
xchg
jle
ret
shrb
inc
in
xchg
test
and
inc
or
aas
push
lods
jge
addr16
loop
sbb
inc
and
in
cmp
adc
xchg
rcrl
fistl
shr
mov
js
mov
mov
push
jae
aam
ss
inc
pop
push
int3
popf
xor
xchg
outsl
xchg
and
xor
ret
sub
daa
fcomp
loope
jae
inc
mov
xchg
mov
jg
dec
dec
stc
rcll
test
mov
jno
xrelease
addr16
insb
aam
adc
mov
fadds
mov
ret
test
jl
nop
and
sti
adc
leave
jb
jmp
mov
or
and
and
and
ficomps
out
jnp
or
insb
mov
lds
mov
mov
and
push
jge
in
popa
pop
stos
cmp
push
mov
shrl
mov
inc
cmpsb
mov
mov
into
sub
mov
cli
mov
cwtl
loope
testl
sbb
xor
cwtl
sbb
jns
push
popa
inc
lea
jg
adc
je
lret
popa
sub
ja
jbe
sub
pushf
aam
aam
mov
jno
lahf
or
inc
cmc
jbe
add
adc
mov
xlat
push
sub
sbb
std
pop
xchg
dec
movsb
sarl
and
out
mov
loope
push
clc
pop
push
std
inc
xchg
pop
aad
add
inc
mov
inc
jns
movsb
xor
mov
mov
mov
imul
mov
mov
push
syscall
addb
imul
cmp
test
pop
and
adc
or
sub
sbb
lcall
outsl
mov
jnp
pop
inc
pop
mov
jl
insb
fdivrl
mov
or
inc
xchg
mov
les
jne
dec
cli
loopne
push
gs
mov
xchg
xchg
lock
push
dec
nop
pop
mov
imul
dec
jne
test
dec
cmp
xchg
inc
jnp
dec
lcall
mov
dec
repz
sub
mov
lcall
mov
mov
repz
pop
aad
add
push
push
mov
pop
aam
shrl
xor
scas
popa
add
add
push
dec
aas
hlt
in
repz
testb
mov
fidivrs
fsubrl
push
adc
sub
into
mov
mov
repnz
cs
int3
stos
scas
out
mov
add
pop
push
mov
push
imul
fcompl
push
insl
mov
call
pushf
xchg
lock
xchg
shr
push
int
sbb
pop
sub
or
cmp
jno
pop
push
inc
fdivl
lds
fstp
mov
dec
imul
fbstp
jb
out
xchg
icebp
sub
xchg
sbb
divb
pop
popf
out
cld
and
sti
std
push
xchg
aad
pop
mov
iret
add
cmpsb
test
fsubrl
rorb
mov
or
mov
lcall
xor
inc
stc
dec
pop
and
cltd
loope
sbb
out
fnstcw
in
ljmp
mov
push
xlat
mov
push
add
stc
das
mov
sub
cmp
in
cmp
fnstsw
dec
jae
loopne
test
add
pop
and
adcl
je
cmp
add
xchg
xchg
inc
scas
fs
cmc
sbb
cmpsl
cmp
push
sub
stos
push
xchg
insl
aam
cs
lods
sbbb
aam
es
or
lods
inc
push
punpcklwd
ds
loope
xor
sbbb
mov
xchg
xor
out
jl
cmp
inc
ret
xorb
cmp
and
aaa
xchg
dec
add
sub
test
mov
outsl
push
pop
fwait
mov
data16
push
ficoml
mov
jmp
dec
and
push
mov
jg
xor
popa
pop
ret
aaa
popf
nop
in
inc
das
prefetch
or
lods
xchg
lods
sub
sahf
test
loop
pop
sbb
js
ja
pop
lcall
dec
aad
pushf
shlb
jbe
or
sbb
adc
push
daa
cmp
sahf
and
adc
and
fsubs
mov
aaa
test
mov
lods
xchg
lret
adc
addl
cwtl
and
cld
aaa
xchg
dec
aad
es
inc
add
daa
jecxz
cmp
notb
jb
jg
mov
stos
mov
orl
mov
cmp
push
sbb
adc
mov
into
das
fisttpl
aas
or
jg
push
fimull
mov
lahf
mov
out
inc
mov
aaa
scas
inc
out
jge
aaa
push
sub
add
dec
int3
shlb
imul
daa
push
inc
int
imul
test
pop
nop
es
addl
adc
inc
testb
sbb
dec
fdivrl
mov
xor
js
and
ret
jbe
repz
enter
xchg
test
xchg
sbb
sbb
les
sbb
or
call
aam
incb
xchg
mov
sbbl
mov
popf
arpl
dec
mov
pop
jne
stc
jae
sub
test
stc
mov
add
pusha
dec
adc
and
notl
inc
fucomip
push
add
orl
stos
out
jbe
and
out
mov
inc
mov
imul
imul
jno
mov
jns
pop
inc
sub
dec
lods
and
xchg
dec
sub
add
stc
cmp
xchg
mov
inc
mov
jae
gs
outsb
dec
imul
inc
fstpl
mov
movb
fisttpl
cmp
cwtl
std
mov
cld
es
inc
cmp
adc
pop
push
sti
add
sub
jne
addb
push
xchg
push
sbb
cmp
lods
in
aaa
shlb
cmpsb
xorb
jmp
nop
mov
and
inc
sub
cltd
in
or
data16
or
pop
movsb
sub
xlat
stos
xchg
fnsave
cmpl
sahf
sub
lods
dec
jmp
cmp
fdiv
dec
insb
dec
pop
or
ret
leave
data16
and
fdivr
mov
js
int3
cmc
shrl
xor
into
imul
pop
icebp
test
dec
add
xor
pop
fidivs
jbe
vmovhps
popf
mov
and
iret
jno
int
arpl
fstps
jl
insb
out
sarb
stos
mov
ljmp
ret
xchg
sbb
outsl
mov
ss
aaa
sub
xchg
int
popa
sub
bswap
add
push
jns
scas
mov
dec
int3
out
scas
mov
lret
loope
outsb
fs
pop
sbb
aaa
dec
push
pop
add
rclb
jnp
ja
or
sub
pop
imul
std
pop
push
cld
mov
sub
cmp
imul
rolb
icebp
sbb
add
aad
fcmovb
mov
in
push
dec
jle
cmc
test
mov
mov
inc
sti
leave
and
std
in
xor
arpl
lods
and
xor
pop
pop
adc
data16
pushf
mov
fiadds
adc
outsb
sub
add
stos
pop
repz
ja
adc
jg
call
or
popa
push
out
mov
insl
enter
mov
inc
lcall
inc
aaa
dec
shll
aas
add
sbb
jp
pop
cmp
adc
inc
push
push
pop
rcll
je
scas
jo
aaa
nop
or
data16
pop
jecxz
fiadds
aas
cmp
aas
sbb
stc
in
xchg
adc
aas
cmp
sub
into
jb
es
ja
outsb
call
xor
push
icebp
cmp
testl
sahf
add
add
jne
scas
iret
push
imul
inc
icebp
and
mov
into
das
aam
xor
shr
sbbl
adc
mov
fistl
in
add
mov
jae
mov
imul
sti
jl
mov
pop
jnp
stc
in
xchg
pop
mov
les
mov
lea
add
in
clc
cmp
lods
imul
or
std
fstl
jmp
sbb
dec
inc
sub
sub
add
add
out
into
out
inc
push
imul
mov
jb
dec
xchg
xchg
in
or
xchg
ficoms
rorb
dec
cmc
nop
daa
daa
or
test
and
pusha
js
push
inc
jae
mov
out
in
adc
sar
fistpll
outsb
stos
mov
test
adc
pop
pushf
xor
arpl
vpsubd
insb
mov
das
push
xor
shl
insl
fsubl
add
not
xor
cs
sub
js
cli
xor
push
cmp
cmp
inc
sub
xor
sbb
jecxz
inc
iret
test
cmp
ret
pop
xor
xor
lret
adc
sub
dec
mov
jp
test
sbb
xor
ja
fsubrl
shr
adc
dec
adc
mov
push
and
arpl
lret
lock
and
sub
rcrb
jp
mov
or
sub
loope
iret
push
hlt
cmc
pop
xchg
cwtl
scas
cli
mov
movsb
nop
xchg
mov
sub
push
push
repnz
mov
sbb
pop
push
leave
lret
lret
aas
dec
inc
das
frstor
sbb
fcomip
push
adc
mov
mov
in
fdivl
sub
xlat
xor
pop
push
aas
es
dec
insl
bound
inc
rcrl
fwait
insb
roll
jecxz
mov
or
cld
adc
push
mov
pop
pop
inc
out
cmp
loopne
lea
sub
push
xchg
fdivrl
ficompl
push
call
int
les
lea
sub
nop
lods
call
data16
popf
iret
insl
es
or
shlb
mov
popa
sub
pop
xchg
aad
ds
sbb
inc
ss
mov
mov
inc
and
shl
or
ret
les
mov
ret
inc
cltd
aad
das
adc
sub
cmp
add
stos
test
icebp
cmp
popa
mov
or
cli
inc
mov
fildl
lods
addr16
mov
pop
mov
cli
mov
lret
addr16
inc
movsb
test
pushf
rorb
dec
sbb
daa
sub
dec
test
pop
imul
fwait
sbb
xor
mov
popa
dec
add
mov
cmc
cwtl
rcl
into
out
sub
or
test
pop
cmp
inc
js
shr
cld
dec
aam
rcl
push
sub
movsb
pop
es
and
jge
xlat
mov
cmp
je
fldt
pop
in
sbb
add
pop
push
push
aam
sub
add
scas
jo
pop
pop
and
push
fldcw
inc
mov
inc
shrb
nop
arpl
mov
xchg
addb
cmp
fnstsw
sbb
sub
dec
test
stos
in
test
xchg
clc
ret
mov
add
call
imul
xor
mov
test
sbbb
loopne
lds
mov
jno
repz
or
push
jge
sti
jl
je
mov
aad
pop
pop
aad
cmpb
lcall
push
xor
adc
mov
in
test
pop
sbb
jmp
jae
cmp
test
loop
outsl
psubw
sub
pop
cli
sub
loop
sarl
jmp
inc
shrl
notb
les
xchg
mov
fiadds
icebp
sbb
lahf
cmp
and
iret
xor
mov
repnz
dec
or
stos
imull
add
hlt
cmp
out
int3
js
leave
lahf
sbb
ss
jg
icebp
push
sbbl
pop
xchg
mov
lahf
jmp
decb
jmp
sub
scas
xchg
xor
shll
mov
jns
pop
mov
cmp
sub
in
jg
inc
mov
mov
decb
jnp
mov
mov
les
aad
pop
movb
push
shl
sub
scas
cmp
sub
jns
or
xchg
inc
sbb
imul
into
in
push
inc
mov
or
jb
cwtl
mov
mov
push
inc
fnstcw
loope
mov
xchg
mov
sub
inc
loopne
xor
pop
dec
lock
fistl
or
data16
push
ret
in
pop
sub
xchg
adc
dec
add
mov
adc
jge
jae
add
lds
mov
jne
xchg
ret
fnstenv
inc
cmpsl
adc
mov
lahf
shrb
push
fsts
sbb
out
add
jne
dec
ret
outsb
rol
out
stos
or
mov
hlt
cmp
xor
fcomip
jbe
xor
roll
xchg
das
sbb
mov
pop
dec
icebp
push
ret
lods
jecxz
les
jae
mov
sbb
sub
pop
iret
push
dec
sub
les
lret
mov
fnstcw
movsl
xchg
xor
loope
or
mov
inc
dec
lret
mov
fimull
sub
inc
or
fwait
iret
xlat
mulb
ja
notl
int3
jmp
pop
sbb
push
xlat
mov
subb
scas
mov
inc
mov
loopne
leave
out
cld
mov
mov
pop
and
sbb
mov
mov
movsl
leave
pop
sub
inc
dec
sarl
jecxz
push
das
sbb
bound
push
sub
movsl
cld
call
inc
stos
out
push
rcr
dec
ja
mov
cmc
pop
adc
xchg
jns
cmp
test
ljmp
popa
inc
lods
fdivrs
mov
pop
jl
mov
xor
mov
add
cltd
es
xchg
stos
movsl
in
mov
sub
push
pop
dec
cmp
mov
adc
stos
or
jns
test
sbb
mov
outsl
xor
scas
cmc
dec
push
push
xor
popa
cmp
lret
jne
scas
jp
inc
adc
sbb
jl
jecxz
mov
sub
adc
fstpt
cmc
stos
rcll
xlat
xor
rclb
lcall
iret
xchg
pop
xor
push
mov
arpl
push
mov
mov
orb
and
mov
dec
inc
add
in
les
xchg
arpl
adc
lahf
mov
push
fwait
or
jl
lcall
loop
push
sbb
mov
push
ret
pandn
shll
ja
sub
stc
cmp
ret
arpl
and
push
dec
and
mov
cmp
mov
lea
inc
not
push
scas
pushf
jbe
pop
dec
fimuls
mov
ret
pop
fisubs
mov
ljmp
mov
dec
movsl
inc
xchg
xchg
mov
xor
dec
mov
mov
adc
movsl
popa
clc
nop
enter
pop
loopne
push
add
mov
or
jbe
gs
fldenv
mov
xchg
cmp
push
jle
ja
cwtl
adc
xchg
pop
outsl
pop
mov
push
dec
std
je
or
inc
loop
dec
les
in
mov
fiaddl
jo
jge
pushl
or
push
xchg
outsb
fld
hlt
cmp
inc
pop
shr
inc
fcoms
ljmp
lret
mov
nop
lods
push
cs
ja
xchg
test
mov
xchg
movsb
pop
adc
sub
ja
loop
sbb
cmp
pop
mov
out
jmp
out
lods
dec
mov
test
adc
outsl
fsts
inc
ljmp
je
inc
push
cwtl
push
mov
mov
and
mov
mov
popf
scas
cmp
lods
insl
push
push
mul
call
inc
sub
fimuls
pop
ljmp
fcmove
scas
sbb
mov
sbb
leave
loop
xor
js
jbe
fidivs
mov
push
mov
aam
dec
sahf
test
lods
xor
xlat
bound
cld
mov
adc
inc
lcall
adcl
mov
xchg
push
arpl
sbb
jle
test
cmp
push
nop
xchg
inc
pop
xchg
enter
rolb
notl
push
int
aad
shlb
cltd
js
pop
in
sbb
push
and
daa
jmp
js
push
lret
imul
rclb
je
sbb
add
outsb
movsb
movsl
imul
mov
and
shr
add
data16
stc
mov
insb
decl
sub
repnz
shrl
mov
out
sub
mov
insb
test
or
sbb
mov
cmpsb
lods
inc
xchg
mov
ror
lea
ss
mov
imul
pop
pop
daa
stc
jp
mov
mov
xchg
ss
in
inc
dec
jo
mov
ds
xor
ja
mov
mov
sub
fsubp
in
push
xor
sub
test
pop
outsl
ficoms
sti
je
call
lods
scas
cli
mov
adc
dec
jb
push
scas
jbe
mov
and
pop
cmp
movl
mov
lret
movsl
icebp
dec
add
cmp
mov
xchg
popf
sahf
adc
cmp
add
jo
xor
mov
lds
add
popa
push
adc
jo
rcrl
xchg
out
adc
jae
jecxz
fs
fnstcw
scas
push
mov
inc
jo
adc
lahf
mov
pop
int3
std
add
dec
sbbb
xchg
inc
and
pushf
or
mov
sahf
popf
gs
into
test
pop
xchg
and
call
inc
jbe
jle
cmpsl
test
into
xlat
push
arpl
jge
and
das
sbb
ret
arpl
add
fnstenv
mov
mov
leave
int
or
mov
testb
jmp
push
push
jp
outsl
outsb
sahf
cmpsb
shrl
mov
pusha
and
sub
dec
fwait
xor
and
leave
addl
idivb
pop
jecxz
icebp
add
std
cltd
fnstsw
mov
adc
fsubl
cs
aas
or
cwtl
sbb
push
out
and
jmp
orb
pop
pop
dec
inc
dec
jge
repz
and
dec
pop
mov
dec
inc
popf
fiadds
fcompl
or
testb
loopne
dec
orb
fidivrs
psubb
sbb
sub
stc
pop
dec
scas
push
pop
and
ret
insb
adc
cwtl
push
adc
sahf
popf
push
jecxz
jb
pop
or
rcrl
movsl
add
xor
mov
sbb
inc
cmpsl
rcrl
inc
lea
sbb
adc
aaa
stos
xchg
mov
inc
sub
pop
dec
jo
mov
repz
inc
push
scas
pop
mov
push
lcall
bound
jno
jns
roll
sbb
in
ja
push
daa
sahf
sub
movsl
rolb
mov
lret
ss
mov
xor
test
inc
mov
mov
je
stos
inc
call
inc
xor
sub
inc
mov
sub
inc
mov
adc
ret
inc
scas
mov
mov
xchg
test
mov
addl
dec
push
loopne
or
sbb
push
sbb
ret
sti
mov
into
add
inc
lcall
mov
push
xor
sub
push
xor
arpl
push
div
test
rclb
lea
sbb
jmp
cmpsb
dec
jl
leave
adc
hlt
daa
sarl
mov
arpl
cmpsb
pop
mov
icebp
fadds
aaa
cmc
leave
test
loop
mov
jbe
popw
jge
sbbl
loopne
js
out
fnsave
mov
dec
std
mov
mov
dec
sub
pop
cld
mov
xor
cltd
in
js
mov
xchg
mov
cmpsl
cli
jg
sub
sarb
adc
jl
jecxz
cli
mov
stos
repnz
leave
out
call
ljmp
mov
popf
iret
jl
aas
into
out
inc
scas
pop
ss
sbb
sbb
les
cmp
movl
stos
subl
sbb
add
mov
inc
mulb
sahf
dec
sbb
adc
mov
ss
push
fstpt
scas
jns
sub
sbb
iret
in
shll
xor
out
aam
shlb
cld
or
cmc
lahf
inc
lcall
cmpsb
xchg
sbb
sub
xchg
imul
jne
xor
shl
jnp
mov
pusha
push
lret
adc
jecxz
pop
mov
or
fisubrs
push
test
inc
xchg
int3
repnz
push
pop
cmp
xchg
mov
movups
and
sbb
sbb
add
cwtl
clc
adc
cmp
cli
and
stos
sbb
movsb
scas
pushf
repnz
je
das
push
sbb
cs
cmpsl
insl
ret
add
cli
xor
dec
fldenv
jmp
xor
cmp
stos
pop
inc
sub
cmpb
fcmovne
pop
setns
or
stc
ljmp
mov
and
and
inc
int3
sbb
mov
xlat
in
sub
ss
sbb
dec
pusha
cmp
jno
jl
or
stos
cmp
jg
aad
test
fisubrs
mov
xor
jmp
incl
insl
mov
in
sub
pop
dec
ja
xchg
fsub
pushf
pop
or
jne
cmp
mov
incb
xchg
cltd
test
dec
cmp
inc
dec
test
pop
outsb
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
jl
push
jl
and
sbbl
adcl
pop
les
mov
lock
shl
mov
adc
mov
push
test
mov
mov
mov
ljmp
push
je
mov
cmp
test
arpl
rcll
cmc
jge
mov
push
inc
shlb
cmp
push
add
cltd
sbb
dec
iret
sbb
lods
fstl
jb
stos
out
pop
test
hlt
xchg
bswap
je
les
stos
sub
mov
cmp
push
jmp
jp
mov
adc
dec
push
jnp
mov
sub
xor
int
nop
aaa
mov
fldcw
out
push
les
jmp
cmp
mov
and
sub
mov
cmp
mov
mov
sahf
ljmp
dec
cli
sbb
and
xchg
lret
and
and
lcall
scas
sub
js
and
fmull
dec
sub
mov
and
xchg
cmp
pop
lahf
pop
mov
notl
ljmp
jp
imul
sarb
xlat
mov
addr16
addr16
in
or
xlat
iret
stc
aaa
or
popl
and
inc
movsl
mov
jns
or
xor
fnstcw
sbb
jo
lcall
andl
mov
pop
enter
jle
sbb
mov
lahf
sub
and
push
jb
mov
jno
mov
loope
shrl
lds
xor
lds
mov
leave
sti
popa
ds
mov
icebp
ss
sbb
sti
adc
sub
mov
adc
push
cmp
rcr
stos
cmp
xchg
add
cltd
cwtl
pop
sbb
lock
push
xchg
jns
mov
push
ret
jge
cld
pushf
xchg
push
bound
or
and
and
es
push
sbb
fistps
xchg
sbb
mov
data16
shrb
repnz
cld
adc
outsl
fdivrs
loope,pn
arpl
fwait
stos
xchg
pop
jno
sbb
inc
cld
nop
fisubl
inc
adc
mov
testl
pop
or
arpl
sbb
lea
lods
mov
nop
std
and
sub
loope
adc
jo
inc
jg
outsl
jle
dec
fdivl
cs
lcall
bound
mov
jns
mov
push
popaw
or
frstor
sbb
push
int3
aaa
iret
mov
mul
lret
sub
add
fidivrs
pop
and
jns
sbb
inc
cltd
sbb
ror
pop
fcoml
gs
jnp
jae
push
rorb
cwtl
aaa
mov
in
lock
mov
int
ficompl
js
push
ficompl
dec
int3
inc
inc
icebp
test
icebp
jp
shlb
sub
popl
imul
jge
jae
gs
dec
mov
andb
xchg
pop
sub
outsb
jae
pop
cwtl
pop
into
adc
jnp
mov
adc
cltd
icebp
enter
cwtl
fisttps
std
mov
mov
xchg
sbb
fwait
jge
movsb
jne
fdivrs
int
fisubs
inc
adc
or
cmp
add
lock
pop
std
fucomip
mov
xchg
sbb
xchg
mov
daa
xchg
or
cmpsl
rol
cmp
fs
loope
fnsave
mov
test
mov
sub
les
les
or
sub
mov
mov
mov
push
mov
movb
mov
movsb
in
jecxz
inc
ret
adc
popf
insb
lock
repnz
pop
test
notl
in
mov
pop
ja
cwtl
stc
mov
stc
aam
xor
cmp
push
es
arpl
mov
and
aad
xor
pop
mov
sahf
sub
xchg
outsl
fistps
popf
adc
or
je
or
jo
aas
lds
mov
ss
jecxz
cmp
loope
sarl
jp
add
dec
je
rcrl
xor
push
into
iret
out
out
xor
xchg
aam
jmp
loope
cmpsb
loopne
hlt
cwtl
sub
popa
scas
adc
adc
mov
push
push
mov
je
pusha
sub
jmp
pushf
cmpsb
test
nop
imul
or
jmp
fidivrs
cmp
shlb
subb
fst
adc
mov
pop
push
pushf
out
dec
cmpsb
xchg
xchg
adc
mov
je
mov
adc
in
clc
js
sub
xor
push
jmp
out
xchg
jnp
jns
pop
mov
daa
pop
jns
bndstx
out
mov
loopne
int
and
pop
jg
push
and
les
pop
pop
or
mov
jne
loop
shlb
lcall
pop
mov
mov
mov
xchg
nop
jbe
imul
inc
xchg
sbb
sub
xchg
xchg
popf
cmp
pop
and
sub
int
mov
into
nop
pop
inc
adc
xchg
add
add
in
mov
aad
arpl
sub
cmc
mov
mov
adc
sbb
popa
call
push
xchg
int3
sarl
jb
pusha
cmc
std
ljmp
js
aas
lahf
cmpsl
mov
int
into
xor
sbb
mov
int3
cmp
xor
sti
fs
xchg
jne
jecxz
fcoml
mov
sub
cmpsl
dec
popf
push
adc
sti
daa
xchg
mov
das
sarl
cmc
mov
xor
imul
jmp
leave
mov
enter
ja
das
xchg
jb
in
mov
inc
xor
or
fbld
inc
fcomps
inc
cmp
or
out
fisubrl
sbb
pop
jmp
jmp
jae
or
cld
cmc
cmc
addr16
in
sbb
rcrl
xchg
dec
mov
fbstp
popa
cmpsl
jl
xor
sbbb
push
rcll
mov
andw
leave
shrl
mov
popf
mov
leave
icebp
int3
inc
ds
mov
mov
jno
jnp
xor
fcmovnb
pop
adc
ja
or
add
push
push
cmp
in
std
mov
add
fldt
jecxz
fs
ss
mov
in
popf
lahf
lret
cmpsb
bound
xlat
fs
cmp
push
popf
cmp
add
sbb
adcl
mov
push
jl
fxch
dec
scas
push
mov
mov
mov
xor
mov
mov
sub
out
mov
push
fcmovb
push
push
push
pop
flds
call
or
clc
shl
test
clc
lods
mov
pushf
xor
stos
mov
or
push
mov
mov
mov
or
sbb
loop
imul
mov
ret
adc
xchg
aam
ficompl
cmpsl
lret
sbb
add
mov
jmp
push
xor
jl
pop
es
divb
push
imul
xchg
nop
nop
and
jg
in
negl
inc
sbb
pop
test
mov
jns
sbb
insb
insb
ret
mov
fs
mov
mov
jle
out
dec
fiaddl
ret
sbb
stos
adc
xchg
mov
mov
dec
dec
jecxz
mov
push
jp
cld
in
testb
pop
jnp
add
pop
out
xor
popa
jne
mov
dec
incb
xor
push
mulb
adc
push
jg
push
jmp
sbb
pop
pop
lock
popfw
out
xor
jne
in
loope
test
ljmp
cmp
sbb
les
adc
call
push
inc
dec
dec
add
imul
int3
popl
sub
sbb
mov
mov
cli
mov
ret
sub
sub
call
jae
xchg
cli
mov
dec
dec
jge
arpl
lock
adc
xchg
loopne
inc
ljmp
nop
loop
in
cmp
cmp
sbb
mov
cmpsl
xchg
push
int3
adc
push
cmpsb
sti
cmovae
dec
cmpsl
loop
push
push
adc
mov
push
and
ficoms
dec
test
insb
or
ja
shrl
cwtl
mov
xor
mov
sbb
jae
loopne
les
push
std
fsubrp
lret
push
mov
roll
add
adc
push
leave
ror
sbb
pop
or
ja
enter
inc
notb
mov
sahf
jecxz
adc
mov
sub
lock
mov
lahf
inc
and
rol
jl
ds
cmp
adc
sub
scas
dec
mov
xchg
adc
jae
dec
cltd
scas
fs
in
test
aas
scas
in
jb
mov
xchg
sbb
jl
subb
mov
rorb
mov
popa
out
shr
lea
pop
inc
adc
fisubl
jecxz
mov
or
xor
in
insb
cwtl
aam
xchg
shr
dec
xchg
lret
push
sub
mov
fsubrl
or
mov
fcoms
xlat
cs
inc
adc
gs
outsb
pop
xchg
fsincos
sub
ficoml
xchg
jne
cmpsb
jns
push
shlb
inc
xlat
andb
lcall
imul
js
fwait
mov
dec
dec
rorl
scas
mov
iret
mov
xchg
addl
lret
js
xor
push
mov
dec
pop
inc
jae
jae
mov
push
subl
data16
jg
add
cli
add
pop
mov
inc
por
inc
dec
pusha
xchg
into
cmp
adc
in
xchg
push
cmp
mov
mulps
lds
sarl
cmc
cli
jmp
inc
and
out
sub
pop
adc
pop
outsb
ds
std
fwait
imull
mov
shlb
xor
xor
sti
sahf
scas
sahf
xor
in
dec
push
lods
jmp
cli
shrb
lea
iret
mov
lret
xor
les
in
sti
mov
out
jo
loop
inc
pusha
xor
mov
and
mov
dec
popa
adc
mov
fcoms
ds
scas
sub
dec
cmpsb
mov
ret
sbb
xchg
fcmovnbe
loop
jae
mov
or
mov
fisubrs
lock
movsb
or
sbb
lods
xlat
filds
push
jns
sbb
pop
dec
mov
add
sub
jae
cmc
jne
or
int3
push
or
mov
pop
xchg
lcall
push
pop
leave
jae
cmp
mov
nop
and
aas
jl
aas
jp
cli
fcmove
addr16
sbb
mov
dec
fldenv
cwtl
sarb
orl
sub
mov
lds
fs
scas
test
lea
mov
rcrb
cmpsl
pop
dec
out
jmp
xor
leave
hlt
shll
or
ror
mov
daa
push
pop
test
fisubl
xor
nop
mov
dec
int3
jg
jno
sbb
lret
mov
pusha
repz
lret
xchg
scas
lcall
out
inc
orl
sbb
aaa
lock
fcmovnbe
roll
out
pushf
sbb
and
fs
cmpsl
dec
shrb
xor
clc
arpl
push
push
testb
pop
adc
jo
jnp
xchg
mov
loope
sbb
pop
push
jecxz
mov
ljmp
repnz
cmpsb
and
push
mov
inc
lahf
cli
or
inc
addr16
adc
pop
cs
cmp
mul
in
ret
inc
jmp
fisttps
leave
mov
iret
insl
lods
subb
orb
xchg
or
inc
adc
adcb
dec
dec
in
les
mov
adc
cmc
pop
lcall
into
cmpsb
jp
out
xchg
mov
out
mov
sti
aas
sub
mov
pop
cmp
lcall
imul
add
imulb
cltd
push
xchg
push
mov
shlb
js
and
imul
hlt
dec
and
stos
and
into
push
jecxz
addr16
push
mov
adc
subl
pop
and
inc
mov
outsl
pop
sub
push
aas
imul
out
mov
pop
dec
sub
add
add
push
fcoms
or
int
gs
lcall
xor
push
push
pop
insl
mov
insl
push
push
lods
jb
out
xor
inc
push
xchg
orl
or
jo
nop
jl
leave
pop
daa
sub
cmc
stos
or
sahf
push
mov
sub
jecxz
fisttpll
pushf
and
shll
cmpb
dec
add
sbb
pop
cmp
mov
icebp
pop
jae
rorb
sti
or
xor
xor
xchg
xchg
xlat
js
out
stos
sbb
ljmp
or
adcl
ror
sbb
fisttpll
loope
jg
cmpl
adc
std
fdivp
jp,pn
xor
sbb
xor
cmp
jae
pop
adc
sub
push
subl
ficoml
dec
movups
outsb
mov
pop
push
out
dec
push
push
pop
ret
push
popf
sbb
mov
xchg
ljmp
fs
mov
xchg
ret
stc
add
xchg
xchg
lods
in
jmp
pop
jo
aad
repz
lods
cltd
adcb
divl
setne
mov
xchg
sbbb
mov
in
movsb
sbb
ds
mov
movsb
cld
incb
ret
add
jne
push
addr16
cmpsl
cs
repnz
or
sub
fiaddl
iret
jmp
gs
dec
lds
push
insb
shrb
mov
cmp
xor
jns
ret
or
xchg
shl
shrl
sbb
inc
push
roll
jle
movsb
push
mov
mov
shlb
fwait
orl
cmp
movsb
das
leave
inc
test
jns
rep
mov
repz
xor
push
push
sbb
es
mov
lcall
sbb
mov
inc
test
adc
ficompl
sub
xchg
mov
inc
inc
and
xor
xlat
push
shlb
pop
arpl
mov
jae
je
pop
mov
scas
lods
or
sbb
movl
iret
mov
mov
and
popf
or
cwtl
xor
daa
inc
jle
into
iret
push
mov
xchg
sub
in
push
sahf
jg
mov
and
adc
lock
lret
push
cltd
jnp
sbb
out
push
lods
lret
mov
cmp
sub
fstps
nop
popa
mov
pop
sbb
push
shl
sbb
xor
insb
mov
lea
mov
adc
adc
daa
scas
cmp
xchg
push
xor
cmc
sub
pop
jae
mov
adc
imul
imul
pop
push
add
xchg
sahf
dec
out
push
aam
pop
cs
out
data16
sbb
and
mov
out
xor
xlat
iret
push
push
and
push
jnp
daa
ficomps
sub
sbbb
es
mov
xchg
inc
adc
pushf
inc
sbb
mov
cmp
hlt
outsb
pop
or
and
mov
scas
incb
push
je
rcrb
imul
sbb
mov
inc
xlat
inc
lahf
cmp
mov
cmp
pop
sbb
lcall
int3
data16
repnz
jno
insb
repz
dec
push
out
ret
mov
movsb
cltd
incl
mov
mov
in
sbb
jns
shrl
jb
stos
ret
mov
push
cli
xchg
push
mov
fiadds
pop
je
cmp
push
in
repnz
adc
pop
add
ljmp
pop
ffreep
push
flds
jge
and
das
mov
rclb
rcrb
ljmp
bound
cmp
cmc
mov
mov
add
mov
aas
das
pop
sub
sub
cmpsb
int3
dec
xor
xor
scas
shlb
dec
push
pop
adc
and
lahf
mov
stc
mov
xchg
pop
popa
pop
push
jg
mov
mov
mov
iret
pop
mov
xchg
mov
pop
and
push
scas
icebp
fimuls
sub
cmp
pop
mov
loopne
ljmp
adc
imul
idivb
scas
dec
xchg
mov
mov
inc
in
jne
jecxz
push
mov
ljmp
clc
sub
jg
jb
fbstp
cltd
jge
js
xchg
sbb
sub
and
stos
xchg
jae
pop
dec
sti
sub
sub
sub
mov
orb
dec
xchg
cwtl
pusha
outsl
mov
jmp
push
xchg
cmp
dec
dec
scas
cwtl
pop
or
iret
push
pop
outsb
hlt
sbb
fnsave
jmp
sbb
dec
inc
push
mov
push
push
idiv
pop
sbb
mov
adc
leave
lret
mov
pushf
xchg
pop
aas
pop
outsl
pusha
push
test
imul
mov
or
xlat
adc
jns
hlt
inc
pop
into
cmp
jmp
sub
xor
jmp
cltd
push
andb
dec
out
jge
cmp
shll
in
icebp
lock
jmp
push
rcr
cmp
mov
cmpsl
fwait
and
mov
repz
shlb
lret
arpl
imul
pop
mov
push
fsubrl
jp
int3
adc
ucomiss
mov
int
das
sbb
lds
or
and
inc
push
or
cs
sbbb
sub
jge
in
adc
mov
mov
outsl
and
pop
or
xor
inc
fs
ret
adc
and
lret
or
jecxz
add
inc
pop
ja
fs
push
ss
add
rcr
mov
aam
adc
lods
aaa
pushf
pop
sbb
aas
pop
xchg
call
imul
and
jbe
lds
jmp
je
dec
or
loope
dec
or
leave
mov
mov
pop
xor
pop
cmp
inc
xchg
shll
sbb
hlt
lret
pop
ja
inc
jne
imul
orb
add
std
loop
inc
ret
cmp
ret
jecxz
push
imul
cmp
ret
mov
faddp
push
mov
dec
fidivrl
arpl
rcrb
jnp
sbb
sbb
jbe
clc
inc
stos
sub
mov
mov
daa
mov
mov
iret
add
loope
dec
push
shrl
pop
cli
jne
cmc
daa
dec
mov
add
out
insl
sub
mov
ret
hlt
ret
or
pusha
rcrl
arpl
xchg
push
aaa
lea
push
js
dec
loopne
sub
inc
andl
test
mov
into
inc
sbb
movsl
xor
notl
and
adc
mov
enter
mov
inc
popf
fwait
shlb
mov
cld
outsb
pusha
cmc
cld
mov
jnp
jmp
pop
xor
or
dec
out
test
aas
fildl
sub
mov
mov
jecxz
aad
je
push
adc
pop
rcl
scas
adc
pop
dec
cmp
cwtl
or
mov
xchg
clc
aaa
mov
push
pop
test
out
dec
loopne
hlt
adcb
push
popf
div
or
add
cmpsb
mov
pop
imul
jg
inc
mov
mov
es
and
outsb
loope
push
jne
fcomps
push
pop
jbe
es
shrb
cli
lahf
fildll
jbe
mov
imul
cmp
test
imul
jae
jmp
daa
rcrl
ds
xchg
das
lret
jne
jmp
in
add
pusha
decl
rolb
inc
lret
sub
push
outsl
sub
jne
and
sub
fisubs
mov
stc
xor
cmp
jbe
adc
jl
ljmp
movsl
jmp
xchg
loop
cwtl
sub
js
push
ljmp
xor
outsb
jbe
movsb
shrl
clc
popl
es
adc
clc
push
add
xor
mov
lods
lea
sbb
inc
push
pusha
testb
ljmp
lcall
xchg
mov
sub
sub
ds
cmp
jns
gs
lret
stc
mov
cmp
hlt
push
add
inc
or
jl
push
mov
cmp
and
pop
outsb
push
or
add
aas
pop
mov
or
adc
sarb
sbb
mov
divb
sub
test
mov
out
loop
push
in
sti
call
or
outsb
mov
pushf
xchg
cltd
pop
stc
push
outsb
mov
xor
ljmp
and
xchg
inc
mov
dec
push
inc
sbb
cmpsl
shll
test
mov
cmpsl
loope
lock
out
outsb
stos
fldpi
rorl
enter
sbb
in
icebp
test
rolb
adc
mov
sbb
rcll
xor
xor
add
push
xor
aam
dec
mov
mov
jp
mov
push
xor
stc
push
sbb
or
pop
cmp
adc
int
das
dec
sar
jmp
xor
das
addr16
mov
lods
lahf
and
cmpsb
cmp
lds
into
sub
jae
and
jno
stos
dec
mov
add
fnstenv
cmp
imul
aas
clc
stos
inc
rclb
mov
push
sub
mov
outsl
in
pop
int
mov
popf
loopne
pusha
ds
adc
sbb
les
lock
xchg
in
rcll
sbb
imul
push
jp
mov
mov
jo
ret
push
fists
dec
hlt
les
aad
loopne
rcl
mov
lods
push
mov
inc
fcompl
je
loop
cmp
adc
xor
arpl
mov
mov
fbstp
mov
repz
fcompl
jb
test
mov
clc
stos
cld
cmpsl
int3
sbb
pminsw
cli
xor
xor
movl
test
ret
test
jb
in
push
add
cmp
adc
pop
mov
push
dec
aaa
mov
popf
popa
xchg
rcl
fstpl
sub
pop
mov
add
sbb
inc
bound
jle
popa
or
mov
stc
xor
fstps
pop
adc
in
fcompl
subl
fldenv
inc
sar
adc
dec
xor
xor
dec
xorb
push
or
fisttpl
stc
not
sub
clc
push
add
adc
push
jbe
adc
repnz
inc
pusha
cmp
orb
test
hlt
or
sbb
sti
lock
xchg
mov
mov
gs
and
jmp
push
inc
imulb
xor
imul
or
pop
icebp
mov
inc
pop
leave
shl
adc
push
js
sti
fldt
and
pop
cmpsl
or
mov
cmp
jns
inc
mov
jecxz
sbbb
fistpl
loop
mov
cmp
pop
ret
pop
push
es
ret
add
fimuls
xchg
gs
test
test
loope
lods
push
mov
inc
aam
sub
jo
push
std
xchg
cmpsl
dec
dec
scas
mov
lock
cmp
sbb
je
jp
stos
aas
jg
and
add
sti
shr
xor
nop
in
mov
lret
mov
cltd
jne
mov
mov
xor
fildl
scas
mov
aas
out
sub
mov
xchg
push
mov
push
xchg
call
pop
push
out
aam
jle
inc
jge
pop
mov
nop
iret
dec
jle
test
sbb
lock
testl
fs
xchg
sahf
sub
test
pop
mov
dec
popf
push
inc
sub
mull
cmpsb
inc
sub
sbb
in
sub
push
decl
push
in
adc
fstps
mov
jg
and
loop
arpl
aas
inc
hlt
xchg
mov
bound
sbb
into
add
incl
arpl
iret
mov
inc
xlat
sub
inc
or
dec
stc
or
xor
filds
inc
rcll
sbb
xor
icebp
mov
pusha
fnsave
cmp
pop
dec
mov
test
repz
add
stc
lods
pop
loop
out
into
jge
out
xchg
push
js
fwait
ret
push
test
fcoml
inc
adc
dec
sbb
push
fildl
lret
pop
add
sbb
jae
movsb
mov
mov
shrl
scas
popf
jo
jl
adc
cwtl
lock
dec
into
inc
mov
fsubrl
push
jmp
or
adc
cmp
adc
jne
cltd
mov
mov
loopne
test
sbb
pop
mov
jne
cmp
rclb
popf
ss
and
fstpl
dec
in
jg
je
repz
test
repnz
cmp
in
arpl
cwtl
ret
pop
dec
xor
fidivrs
cmp
stc
out
jbe
mov
out
test
cmc
mov
mov
hlt
sub
cltd
fisubrs
shld
ror
insl
lret
or
js
aam
imul
or
jg
and
mov
cmp
cmp
and
lret
call
lret
adc
jae
outsb
call
adc
jb
adc
icebp
or
xchg
mov
xchg
inc
mov
and
and
pop
fidivrl
cld
add
dec
inc
add
out
mov
pop
xchg
ljmp
popa
cmc
test
push
enter
add
js
fildll
sarl
inc
shll
or
stc
jle
arpl
in
lock
jb
mov
faddl
lret
fisttpll
mov
xchg
lahf
jb
loope
mov
jmp
mov
sbb
loop
dec
mov
js
rcrl
mov
pop
lret
loope
test
sub
jl
and
inc
js
cli
add
cld
or
bound
pop
cmp
ds
jmp
dec
out
jmp
push
dec
adc
jl
push
push
xchg
dec
pop
cmc
mov
and
insb
adc
lret
incl
mov
pop
mov
scas
pop
and
in
repnz
outsl
sar
jecxz
push
push
inc
movsb
jbe
movsb
imul
in
or
dec
ret
pusha
xchg
gs
xchg
jmp
adcb
mov
out
sbb
pop
loopne
adc
cwtl
ss
aad
fbstp
mov
dec
and
push
jne
pop
je
imul
shlb
popa
mov
out
std
mov
push
or
mov
add
inc
and
jnp
mov
xchg
fs
dec
iret
mov
sbb
sbb
sub
or
jmp
loop
sbb
mov
add
sbb
push
in
add
and
mov
and
cmpsl
push
pop
stos
or
fildll
sbb
mov
mov
xchg
add
sbb
hlt
popf
stos
or
arpl
rcrb
idivb
int
jle
inc
pop
daa
xchg
cmc
movsl
mov
sub
add
lds
cmpl
stos
mov
add
jo
addr16
dec
mov
movsb
mov
push
jg
mov
rclb
cmp
push
pop
jmp
data16
jp
xchg
in
addr16
andl
mov
movsb
lds
xchg
fs
insl
test
mov
je
fdivl
mov
mov
xchg
cwtl
pop
fcomps
sbb
xor
push
push
lret
insl
adc
mov
adc
xchg
sub
repnz
stc
arpl
add
mov
sarb
cli
dec
subl
xor
mov
popf
xchg
inc
inc
iret
pop
dec
xor
jbe
mov
ret
dec
shl
gs
cs
jle
add
data16
add
mov
push
imul
cs
push
nop
pop
es
jae
dec
push
xchg
ljmp
or
shll
call
mov
aad
aad
push
sbb
int3
stos
cwtl
fbstp
xlat
adc
aaa
movsl
or
rolb
xor
fisttpll
add
outsl
cmpsb
lds
inc
mov
cwtl
cmpsb
not
inc
ss
stos
negb
push
in
and
adc
shl
inc
or
jmp
inc
sbb
mov
int
push
jo
sub
mov
and
jle
jg
jbe
in
ret
or
cmpsl
ds
mov
push
pop
or
cmpsb
and
mov
sbb
add
gs
adc
negl
adc
fs
inc
xchg
dec
sbb
mov
xor
test
nop
iret
movlps
adc
cmp
imul
or
add
and
ret
js
shrl
mov
push
mov
fidivs
add
dec
cmpsb
jp
xor
xchg
cmpsb
cmp
shll
fcompl
adc
out
mov
push
xchg
push
cmp
les
adc
stc
mov
sub
jo
aaa
pusha
sbb
shl
jae
js
pop
nop
loopne
or
cld
mov
mov
mov
cmp
sbb
and
and
adc
fcompl
repnz
jl
imul
jb
rclb
into
xchg
sub
lcall
pop
and
xchg
mov
jo
xchg
jne
xor
test
mov
jle
cmp
push
mov
inc
xor
xor
ret
or
inc
popa
aaa
fucomp
lahf
fcom
mov
sbb
fsubrs
inc
cmp
cltd
lahf
cmpsb
fcomp
insb
lahf
hlt
and
jno
hlt
aaa
lds
rorb
xor
mov
pop
inc
lea
pop
mov
push
mov
jnp
inc
push
cmc
mov
adc
arpl
mov
popf
cmp
mov
mov
sti
das
loopne
xor
imul
mov
mov
repz
sti
mov
cs
jecxz
leave
push
jmp
mov
idiv
test
xlat
mov
jg
cmpsb
test
test
xor
ja
scas
add
call
int
cmp
lods
dec
push
fbstp
adc
jbe
pop
cmp
int3
sti
lret
adc
inc
push
adc
loopne
jb
or
shl
xchg
mov
mov
test
and
stos
cmp
pusha
gs
mov
xor
xor
jp
push
incb
mov
and
xchg
cmp
ret
push
mov
push
sarl
and
in
xor
add
rorl
mov
aad
add
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
cld
mov
addb
test
aas
lret
mov
std
call
movsb
iret
jmp
jnp
xor
jb
sub
enter
and
lret
cmpl
and
pushf
test
stc
in
je
pop
xor
addb
pop
les
in
push
adc
xchg
sbb
or
aam
or
mov
sti
xchg
pusha
mov
inc
movsl
lahf
adc
xlat
push
push
inc
xchg
pusha
jle
mov
pusha
jnp
les
lock
ds
dec
arpl
cmp
ficomps
mov
mov
push
popa
xor
push
mov
repnz
jo
sbb
inc
push
and
mov
psrlq
test
lds
lods
lods
inc
je
loopne
ljmp
repnz
shll
jg
jne
les
cwtl
ds
adc
xchg
mov
cmp
lock
scas
cld
sbb
fs
icebp
pop
cmp
mov
lahf
mov
jne
pop
push
sti
insl
das
pop
cs
pop
sbb
dec
lahf
mov
addr16
clc
fistps
cld
xchg
sub
mov
push
hlt
add
das
or
xchg
stc
push
push
cmp
push
inc
push
mov
cmp
mov
iret
mov
cmp
lods
inc
xor
movsl
fwait
inc
add
pop
inc
mov
add
mov
mov
lcall
imul
jmp
ja
aam
js
and
scas
mov
call
push
adc
sahf
pop
jp
shll
cmpsb
cmp
dec
insl
rorl
iret
clc
jg
into
rcrb
xchg
xor
and
ljmp
sbb
cld
adc
jo
aam
insb
push
fmuls
pop
mov
mov
dec
enter
push
stc
call
mov
stos
imul
inc
xchg
sub
sahf
pop
or
jmp
hlt
mov
fdivl
lods
pop
or
sub
sbb
pop
jecxz
sbb
jge
loopne
in
scas
shll
test
movsl
sbb
fiadds
sbb
pop
enter
int
inc
add
inc
roll
daa
test
cmp
inc
push
movsb
cmp
in
aad
test
adc
sbb
push
mov
scas
xchg
or
and
xor
add
pop
pop
bound
xor
lock
fs
shlb
jmp
cmp
adc
add
sub
ss
mov
in
cld
std
stos
dec
int
mov
dec
sub
test
inc
inc
push
iret
push
push
dec
jle
xor
dec
and
dec
jp
fiadds
scas
int
add
cwtl
or
cs
xchg
push
movsb
popa
test
sbb
jbe
rcrl
les
enter
ljmp
dec
fwait
adc
mov
jb
pop
fiadds
sub
mov
mov
mov
push
stos
out
pusha
mov
orb
test
insl
mov
inc
in
shl
adc
push
jmp
or
ds
sbb
inc
jg
pop
mov
xor
adc
xchg
mov
aaa
das
pop
mov
add
ss
mov
sub
and
pop
pop
das
pop
call
rclb
push
mov
sub
fwait
jp
jnp
pop
inc
lods
ret
pop
cmc
jb
stc
cmp
inc
out
xorl
mov
inc
mov
xchg
stc
and
movb
jecxz
jge
jnp
inc
std
xor
xchg
mov
sbb
mov
xchg
jo
xor
mov
mov
inc
push
addr16
add
and
inc
pop
fs
jbe
fcoms
cmpsb
stos
adcl
jle
pop
or
ret
paddq
jno
inc
jb
ret
inc
jp
nop
and
addr16
jae
lcall
xorl
scas
xor
sub
sti
mov
mov
or
jne
gs
pusha
add
lcall
add
outsb
sbb
cld
mov
aas
jmp
push
mov
mov
xchg
hlt
add
and
xchg
pop
pop
mov
xchg
jmp
sbb
ret
ss
mov
add
into
lcall
daa
int3
push
mov
mov
inc
mov
push
inc
push
cltd
xchg
dec
pop
adc
rorb
out
pop
xor
xorb
andb
orl
jnp
sbb
push
int
sbb
pop
test
std
sbb
fwait
mov
popf
dec
push
push
cmp
dec
push
fsubs
push
add
xor
movsl
sbb
xor
clc
fsts
dec
fmull
sbb
movsl
loope
lret
lock
inc
inc
cmp
pop
cmp
pop
or
addb
in
div
js
stc
add
jp
lret
sub
add
mov
popf
lea
gs
out
jmp
sbb
sbb
cmpsl
push
std
lahf
icebp
fs
test
popa
bound
aas
movsl
push
ljmp
popa
test
push
dec
dec
push
xchg
or
xchg
push
int3
xchg
rol
ds
hlt
xchg
xchg
orb
or
xchg
cmpsb
movsb
jle
stos
outsb
cmp
mov
scas
add
sbb
pop
cmp
jge
cmpsb
subb
pushf
jbe
ficoml
stos
aam
insl
pop
add
movb
mov
dec
mov
js
pop
inc
sbb
pusha
push
and
push
jg
out
stc
subl
cmp
and
or
mov
outsl
sbb
aaa
cld
push
movsb
mov
clc
mov
sarl
cmp
loopne
cmc
mov
out
mov
jno
lock
push
mov
lea
fwait
imul
push
fwait
push
ret
cmp
mov
inc
aam
push
sub
imul
push
sbb
mov
jmp
pop
ret
xor
inc
scas
pop
sub
sub
js
not
mov
jmp
ljmp
jle
ret
ds
jp
xchg
lahf
sbb
push
pushf
lret
lods
xchg
int3
adc
mov
inc
lds
cli
out
ficoml
push
dec
add
testb
mov
mov
das
ja
ja
add
mov
inc
lcall
push
fnstcw
lods
xchg
popf
ljmp
push
call
test
mov
lods
adc
and
or
das
inc
xlat
mov
int
rcr
ljmp
sub
test
pop
cltd
fs
std
out
and
xor
mov
rcrb
add
and
add
jb
movl
push
out
test
cwtl
insb
sbbl
adc
push
jno
jecxz
dec
sbb
xor
mov
leave
out
pop
aaa
in
loope
jnp
xchg
dec
addr16
mov
cmp
mov
pop
push
mov
adc
lret
xor
clc
sbbb
icebp
ss
nop
es
xor
xchg
sbb
dec
jmp
fs
insl
es
fwait
ja
incb
cmp
out
lret
mov
dec
adc
mov
add
mov
shr
fldcw
stc
mov
call
ds
push
add
jge
ljmp
mov
mov
test
xchg
mov
fisubs
adc
fidivrs
lds
sub
les
mov
lcall
mov
mov
cltd
dec
inc
lods
out
cwtl
or
push
fsubs
cld
lock
xor
lgs
shrb
lret
jbe
xlat
xorb
pusha
in
push
jo
mov
or
cmp
out
mov
mov
cld
push
or
xchg
je
dec
sti
mov
mov
adc
insl
pusha
ficompl
adc
sbb
int3
push
hlt
mov
mov
mov
dec
cs
test
movsl
sbb
and
repz
or
subb
out
mov
scas
mov
loopne
inc
lds
mov
pop
mov
or
push
cmp
or
repnz
push
lds
repz
out
dec
cs
hlt
addr16
mov
add
and
pop
repz
sub
lea
cli
popa
cmp
mov
loopne
cltd
pop
jo
das
push
pushf
insl
js
jecxz
arpl
mov
scas
and
sub
cmp
aas
jnp
mov
or
mov
and
pop
adc
and
daa
into
or
add
sbb
test
mov
ljmp
jne
aad
inc
stc
iret
jmp
out
jp
out
aam
fisubl
mov
adc
dec
xchg
test
inc
inc
je
fmuls
pop
mov
in
lods
mov
pop
sub
icebp
jge
stos
mov
ret
xchg
clc
cmp
or
or
repnz
mov
jle
add
push
fldt
ds
movsl
inc
lods
mull
mov
dec
pop
test
or
popf
loopne
mov
imull
in
mov
orl
mov
into
push
std
jmp
xacquire
out
sub
and
into
shrl
jg
adc
xchg
jmp
mov
popf
clc
jns
inc
ret
add
lret
lods
sahf
or
in
mov
orb
mov
sti
sbb
dec
test
xor
lcall
repz
sarb
rolb
or
cli
in
mov
dec
xor
stos
repnz
pop
pop
pop
sbb
xor
ss
mov
and
les
lahf
mov
jle
xchg
xor
fucomip
test
sbb
out
xchg
loop
dec
fwait
aad
pop
add
xlat
and
loop
pop
xor
dec
mov
sub
outsb
mov
movsl
jbe
nop
mov
pop
outsb
jmp
rorb
xor
mov
test
fwait
sub
mov
pop
es
adc
cltd
scas
jge
out
ja
jnp
cmp
jl
push
add
scas
cli
push
insl
mov
aas
inc
sub
aam
xchg
das
sbb
or
inc
shlb
in
mov
ficompl
inc
xchg
sbb
push
push
xor
and
mov
adc
add
lret
cmc
rolb
aam
or
leave
sti
adc
andl
jnp
xlat
adcl
push
in
enter
lea
sub
stos
fnstcw
das
mov
stos
xor
xchg
xchg
mov
mov
sbb
ja
xor
ficoms
dec
gs
popa
and
inc
int3
imul
out
pushf
cltd
test
sub
inc
rol
adc
add
sbb
jns
pop
sbb
pop
int
add
and
jg
in
adc
movsl
mov
mov
xor
fcoms
cltd
push
mov
sub
in
push
fistps
sbb
xchg
sbb
pop
pop
mov
bound
inc
mov
dec
pop
xor
sub
mov
lret
loopne
ljmp
mov
fdivl
cmp
movsl
in
cmc
inc
mov
insb
int3
mov
popa
pop
pop
mov
push
jo
nop
pop
js
popa
adc
mov
stos
mov
xlat
sbb
inc
addb
mov
cmc
push
add
add
push
adc
loopne
push
xor
es
mov
jp
rcll
insl
push
pop
dec
decl
cltd
cmp
outsl
pop
pop
bound
test
dec
fucom
ja
pop
adcl
rorl
inc
add
jmp
mov
dec
stos
dec
lahf
cltd
or
sarb
out
fmulp
and
xlat
and
cmp
cs
pop
sub
aaa
mov
and
mov
push
sbbb
loopne
cltd
inc
mov
movups
xor
fsubs
popa
push
jns
pusha
lods
lds
enter
dec
fisubrl
aas
dec
lret
cmpsl
sti
inc
int
mov
into
imul
xchg
aam
sbb
jb
push
pop
movl
mov
jns
mov
sbb
shlb
jno
inc
dec
adc
aam
jmp
leave
and
lret
ret
xchg
fwait
sub
rcll
cld
jg
and
xchg
or
dec
fisubrl
mov
push
pop
bound
pop
cltd
add
jp
stos
mov
cltd
mov
scas
lea
leave
pushf
cmpsb
movsl
add
imul
in
daa
lea
loope
mov
fnclex
aad
inc
mov
in
sbb
outsl
test
movsb
out
pusha
sub
adc
xor
das
stos
ds
xchg
jge
test
addr16
das
sub
push
mov
pop
rorb
adc
les
or
add
mov
stos
lahf
mov
call
adc
inc
nop
subl
mov
mov
aas
inc
push
xchg
pop
or
sahf
dec
mov
sub
outsb
xlat
in
dec
inc
das
les
fsubrl
fsub
jp
mov
mov
ret
aas
outsl
push
ds
jns
and
adc
mov
add
andl
hlt
xchg
adc
mov
jl
lods
pop
leave
into
stc
scas
testl
out
test
aam
mov
cli
sbb
jnp
lret
mov
dec
outsl
xchg
pushf
adc
roll
scas
cmp
jmp
inc
aas
lahf
pop
cmp
enter
cli
pop
cmpsl
or
sub
pushf
int3
mov
arpl
aaa
xchg
cmpsb
push
gs
aad
push
sbb
mov
shr
pop
ja
pop
xlat
xchg
clc
cmc
or
jae
mov
mov
aaa
xchg
ftst
mov
adcl
ret
jmp
repnz
xchg
scas
test
test
jnp
rol
dec
sbb
adc
jb
and
je
bnd
cmc
lock
add
push
gs
pop
int3
lock
push
rcrb
adc
sti
mov
cmp
gs
aad
out
int3
js
daa
aaa
ret
jne
mov
cli
and
jge
imul
jge
xor
call
jae
mov
pop
into
push
and
jb
fldcw
mov
out
push
xor
mov
nop
push
and
stc
fwait
or
int3
out
mov
dec
jl
ffree
pop
out
cmp
mov
ds
sbb
fstpl
pop
jg
push
adc
and
jae
add
xor
leave
pop
fcmove
pop
int
and
in
or
sbbl
pusha
and
into
scas
sar
nop
fdivp
or
add
loop
lods
xchg
outsb
lock
cmp
inc
inc
push
push
fiaddl
lcall
push
push
adc
sub
cmp
dec
jge
inc
call
add
inc
jo
addr16
stos
int
adc
fiaddl
bound
aad
sbb
push
mov
sbbl
adc
fdivl
cltd
insb
pop
addb
mov
int
ss
fcompl
push
loopne
sbb
sub
push
fistpl
jmp
or
xor
ja
inc
popa
push
sub
in
mov
icebp
jge
and
shll
inc
mov
pop
pushf
scas
sahf
cs
push
stc
sahf
out
mov
out
mov
inc
lock
pop
aad
jo
repz
shll
int3
mov
call
inc
dec
loop
jle
cwtl
push
inc
and
push
mov
and
fadds
fcmovnb
imul
out
pop
scas
and
jp
lahf
frstor
repnz
rcrl
stc
shll
add
enterw
mov
ja
ds
adc
clc
sarl
jmp
mov
dec
mov
scas
mov
jnp
sbb
les
sub
movsb
mov
or
les
jmp
jae
aad
ja
add
mov
shrb
test
scas
cmpsb
push
jmp
dec
and
add
arpl
ja
and
test
mov
loop
test
js
dec
xor
add
adc
pop
xor
aas
and
jecxz
dec
mov
icebp
fdivrl
jbe
stc
sbb
jno
fsubrl
add
mov
and
lods
cwtl
mov
lods
ljmp
jne
add
mov
adc
repnz
adcb
bound
sub
sub
aaa
pusha
clc
xor
mov
push
fldl
idivb
popa
or
pop
dec
shrb
insb
shll
sbb
sbb
lcall
outsl
pop
pop
jp
pop
inc
sub
add
and
mov
push
insl
push
push
sahf
call
push
jg
fnstcw
scas
adc
jecxz
loopne
push
push
and
inc
or
push
mov
push
call
mov
inc
xlat
adc
adc
dec
outsb
div
xor
inc
cld
outsb
sub
xor
sub
shll
xchg
aam
int
pop
xor
and
mov
enter
adc
adc
test
inc
roll
xor
into
mov
dec
adc
aad
mov
das
push
sub
xchg
loope
out
push
mov
fdiv
loope
and
cs
jl
fdivrp
fwait
xor
sub
mov
or
push
ss
dec
rcll
mov
xchg
xchg
push
aam
roll
dec
jl
lret
pop
ja
nop
xor
jb
jno
sub
xchg
jecxz
daa
ja
mov
sbb
enter
mov
mov
cld
ffree
scas
imul
xchg
fwait
shlb
scas
fxam
cmp
ja
mov
xor
mov
lret
jmp
jmp
test
es
aad
sub
ljmp
mov
mov
adc
out
mov
adc
xchg
testl
je
cwtl
iret
mov
ja
jmp
clc
lret
loop
dec
mov
push
mov
push
cmpb
or
or
jb
sti
addr16
dec
sbb
cld
shlb
fs
push
aam
sbb
cmp
jb
inc
jns
push
cmp
ftst
lcall
sub
xchg
or
icebp
mov
xor
cmp
mov
push
pop
xor
aas
addr16
fwait
hlt
adc
cmp
out
ljmp
movsb
fiadds
jns
stc
shlb
mov
cmc
adc
and
mov
and
xchg
daa
roll
xlat
jns
xor
xorl
xor
in
negb
adc
jo
cltd
mov
in
and
push
push
ljmp
mov
xlat
mov
inc
imul
rcll
jb
or
jg
inc
jns
push
fistpl
pushf
xor
stos
jnp
pop
push
mov
idivb
lahf
pusha
mov
addb
mov
mov
add
mov
outsb
negb
sti
lock
cmp
jp
inc
pop
push
mov
and
or
cmp
cmp
test
insb
or
aad
dec
sbb
add
mov
sahf
ret
xchg
and
imul
sbb
push
mov
sbb
mov
inc
and
aad
mov
pop
xchg
jmp
and
fucomp
push
push
sub
push
aaa
std
xor
orl
cltd
loopne
xchg
push
cs
fcom
pop
aam
push
push
inc
xchg
inc
shr
pop
dec
or
lret
mov
and
push
xchg
loop,pt
xor
cs
rorl
mov
sub
imulb
in
lds
sbb
out
outsl
add
and
cltd
cmc
js
mov
xor
dec
pop
jno
hlt
bound
add
add
popf
pop
cmc
nop
xchg
push
jmp
push
stc
call
cmp
mov
pop
in
push
test
out
jp
je
xadd
mov
iret
daa
xor
ljmp
pop
adc
pminsw
jmp
mov
test
adc
push
lret
mov
fdivl
xor
inc
cwtl
inc
inc
rcll
mov
stos
fisubrl
shrd
xchg
mov
imul
dec
add
xchg
xor
dec
shrl
les
jge
repz
xchg
fldt
inc
cmpsl
adc
xchg
sti
cmp
mov
imul
dec
adc
into
mov
test
push
cmc
adc
sbb
stos
xchg
in
loope
xlat
shlb
bound
jl
pop
aas
aaa
icebp
push
cmc
ficoml
pusha
xlat
out
bound
mov
add
je
and
lods
sbb
sub
push
add
adc
pusha
dec
jnp,pn
inc
dec
push
jge
mul
outsb
or
daa
mov
outsb
test
mov
or
xchg
imul
mov
sub
and
add
pop
cmpsb
std
jns
in
jne
outsb
cwtl
sub
xor
xchg
push
pop
lret
or
fcompl
sbb
fidivrl
and
mov
cmp
js
push
sub
fisubrs
mov
scas
mov
adc
insl
loope
loope
in
test
cmp
mov
fcoms
push
pop
or
cmpsl
add
pop
jmp
pop
iret
mov
pop
mov
mov
mov
mov
fwait
movsl
lods
cmp
pop
pop
cld
lods
sbb
dec
into
test
add
jmp
add
aad
pop
dec
pop
adc
std
push
pop
inc
scas
mov
gs
repz
mov
jae
mov
addr16
jmp
ret
cld
arpl
incb
inc
and
sbb
xchg
bound
sub
lret
mov
push
mov
jmp
arpl
xor
pop
repnz
outsl
mov
xchg
mov
sbb
popa
cli
aam
aad
xlat
popa
jmp
jbe
pop
or
les
pop
jb
das
jge
sbb
or
lret
pop
push
sbb
hlt
clc
push
or
add
mov
fdivp
push
mov
cltd
cmp
cltd
mov
pop
xchg
sbb
push
jne
fsubl
pop
test
cli
mov
mov
cmp
lret
ret
out
mov
mov
mov
ds
mov
shl
adc
inc
lret
lds
lcall
es
and
imul
jmp
insb
add
mov
clc
and
scas
mov
popf
fsubl
jnp
push
roll
cmp
test
mov
dec
sbb
push
xchg
xor
out
stos
xchg
add
adc
cmc
iret
ss
adc
aad
int3
lcall
xor
test
jns
stc
cmp
popa
lcall
xchg
js
jns
mov
xor
jne
dec
lock
lds
jecxz
stc
insb
dec
call
cwtl
pop
cmp
scas
pushl
push
fsubp
call
je
adc
xor
mov
sbb
jb
inc
add
lods
or
or
sarb
dec
sbb
jmp
sub
mov
cld
xchg
xchg
test
xor
sub
mov
or
xor
add
pop
sub
vmovss
ficoms
cmp
mov
mov
subb
shlb
dec
and
sub
add
push
cwtl
mov
ds
arpl
test
scas
mov
loop
test
jno
sub
dec
sub
and
sub
xchg
scas
mov
fdivrl
sahf
lret
test
xchg
push
loopne
mov
out
xchg
inc
dec
push
inc
rorb
fucomp
arpl
cmp
cmc
xchg
push
mov
jns,pt
push
imul
fldenv
dec
mov
cli
lods
aaa
sub
bound
sbb
mov
jo
adc
dec
nop
push
push
fidivl
fimuls
clc
subb
sbb
int
xchg
cld
test
loop
push
push
mov
jmp
je
jno
cmovl
fdivs
push
push
scas
nop
jp
repnz
push
cmpsl
push
ror
sbb
cli
jno
add
push
mov
cmp
movups
xchg
ds
pop
cmp
sub
stos
sub
pop
xchg
xor
mov
jecxz
or
pop
push
push
and
cwtl
cmp
jae
sub
hlt
lods
and
pop
mov
outsl
inc
rcl
mov
cmp
pop
in
and
icebp
mov
inc
jle
pop
or
jbe
cmp
add
and
aaa
sub
pop
mov
loop
in
pop
fs
xchg
push
rclb
shl
cltd
test
std
ud2
mov
cmp
push
jp
imul
in
xchg
mov
or
lock
push
cmpsb
movsl
push
push
jne
mov
xchg
sbb
and
scas
cmc
inc
add
loopne
sub
adc
leave
inc
stc
push
jecxz
scas
xchg
aas
mov
test
popa
std
xlat
imul
cltd
into
jmp
dec
iret
popa
inc
inc
jge
daa
jne
popa
scas
push
push
arpl
gs
and
popf
mov
test
ret
pushf
and
adc
fincstp
cs
mov
loopne
dec
in
fdivl
icebp
mov
mov
rolb
lods
pop
lret
stos
add
jg
sar
push
jbe
out
xor
adc
jae
rolb
cmp
cmpsl
imulb
pop
jbe
loop
sbb
sub
mov
sub
mov
and
dec
add
xchg
arpl
mov
fwait
jo,pn
pop
jnp
data16
pusha
fbld
inc
nop
or
cmp
movsb
pop
rcll
push
aad
dec
add
push
inc
push
int
imul
or
jge
mov
sbb
pusha
bnd
push
loopne
or
mov
shl
pop
cmp
inc
sub
insb
fmulp
std
ss
loopne
add
lods
mov
adc
mov
adc
lds
bound
imul
jns
adc
enter
out
inc
insb
out
xlat
sbb
lret
insb
or
mov
out
icebp
mov
mov
mov
pop
fcoms
add
fisubrs
inc
into
jl
test
adcl
popf
enter
mov
adc
pop
mov
aad
push
lods
dec
sti
jno
adc
xor
push
stos
mov
and
xor
cmc
mov
cwtl
push
lcall
cmpl
push
scas
inc
add
test
shlb
frstpm(287
xchg
pop
ret
negl
jecxz
xor
insb
sub
fsubl
push
mov
inc
pop
lods
jbe
and
rol
stc
nop
dec
pop
daa
xchg
enter
cld
push
mov
lds
cmc
inc
push
cmp
adc
pop
dec
mov
mov
cltd
test
xor
xchg
cmpb
mov
add
xor
lahf
mov
or
fisttps
add
or
out
js
sar
mov
xchg
push
xor
fwait
push
mov
xlat
bound
xchg
cmp
pop
movb
push
bound
mov
and
xor
cmc
xor
out
fwait
xchg
jp
xchg
adc
add
dec
iret
sub
sbb
rsm
add
add
aad
loope
fnstsw
inc
mov
mov
cmp
getsec
bound
pop
mov
int3
jb
rcrb
rcrb
cli
mov
inc
outsb
cmp
sbb
push
rclb
jl
or
lret
dec
mov
popa
push
mov
adc
pop
adc
inc
cmpsl
push
or
jmp
pop
pushf
mov
sub
cmp
int3
testb
test
inc
cmp
xchg
cli
fsubl
js
inc
xor
mov
inc
jecxz
push
cwtl
pop
mov
sarl
dec
sti
cmp
jnp
aas
repz
pslld
push
pop
mov
imul
jmp
loopne
sbb
pop
inc
and
inc
shll
aad
pusha
lahf
fnsave
outsl
aaa
lea
xor
movsb
fcmovnu
stc
mov
push
stos
xchg
mov
pop
add
xchg
idiv
stos
jp
xchg
lret
xor
push
dec
mov
imul
lods
sub
adc
inc
adc
aam
bound
mov
jge
dec
jno
adc
clc
jmp
sbb
xchg
lods
jl
jno
inc
pop
icebp
or
xchg
int
sahf
invd
lea
pop
in
out
mov
pushw
and
rolb
xchg
mov
xlat
mov
sti
mov
mov
fstl
int3
sub
mov
imul
push
out
fiadds
dec
mov
inc
movsw
out
sub
dec
sub
dec
scas
mov
bnd
jbe
or
subb
sub
jo
adc
or
mov
xchg
mov
dec
mov
push
std
rcrb
andl
jnp
push
adcl
cmp
fcmovnu
pop
loop
push
insb
mov
or
sub
shr
xrelease
das
mov
cli
rcll
js
add
test
and
loop
popf
lret
lea
cmp
or
pop
jbe
xor
aam
adc
outsb
adc
cmp
sbb
lods
cmpb
addr16
or
push
inc
arpl
fnsave
add
cli
incb
pop
out
lods
lea
cwtl
cmpl
loopew
or
test
mov
push
fwait
jle
xor
add
cmpsl
loop
notb
add
out
pop
neg
shlb
aaa
test
adc
mov
mov
xor
cmpsb
or
adc
mov
dec
adc
jg
or
inc
popf
push
lea
fisubrs
sub
jns
outsb
loop
mulps
pop
into
or
inc
sbb
inc
jecxz
popa
stos
mov
int3
add
push
xchg
mov
push
pop
or
sbb
rolb
popf
clc
repz
mov
inc
fcmovnbe
mov
sbb
adc
jne
scas
cmp
jp
shlb
ja
sbb
xor
mov
imulb
scas
lock
sbb
cmp
je
dec
stc
dec
bound
mov
dec
ljmp
aam
or
sbb
add
fidivrs
add
push
add
fsubp
mov
sub
inc
xchg
jno
ret
pop
outsb
cmp
cld
and
mov
mov
mov
scas
pop
dec
cli
imulb
push
push
sub
movsl
aas
lret
lds
leave
jl
call
out
mov
cmp
lahf
ja
int
movsb
dec
scas
lret
mov
imul
mov
or
in
dec
xlat
loopne
inc
arpl
adc
pop
add
fwait
push
fnstsw
mov
aas
outsl
jbe
or
stc
sbb
cmp
movl
jne
cmp
movl
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
inc
mov
fiaddl
adcl
mov
pusha
pop
orb
adc
in
jns
adc
aas
inc
cwtl
fldcw
mov
xchg
add
dec
dec
cli
dec
inc
sbb
push
jp
dec
pop
lock
xchg
test
lcall
mov
jnp
stos
mov
aad
mov
aad
fnstcw
pop
int3
int3
lahf
daa
std
ljmp
mov
cmc
pop
rolb
aad
pop
insl
push
or
pop
mov
divl
je
aad
popf
in
push
testb
xor
pop
lea
jnp
test
scas
out
xor
je
or
xchg
or
xchg
and
adc
addr16
xchg
mov
and
sbb
push
es
and
cli
enter
mov
mov
jbe
aam
fwait
aad
mov
inc
xor
push
jp
cmp
in
jl
ljmp
lock
cwtl
pop
add
xchg
pop
mov
sahf
sbb
xchg
flds
je
push
sti
sub
imul
pusha
or
sahf
xchg
jp
or
sti
jnp
jo
in
repnz
push
inc
lcall
std
shll
xchg
clc
cld
daa
fwait
lds
adc
out
call
mov
enter
pop
inc
call
inc
xlat
xchg
adc
cmp
lods
sbb
push
adc
aam
out
lret
push
or
mov
pop
jo
cmp
sub
fisttpl
mov
cld
push
jbe
sub
mov
test
lret
mov
leave
popa
scas
fisubs
into
ja
ret
mov
in
dec
rolb
pop
stos
and
adc
push
pop
fmulp
cmp
xor
outsb
mov
popa
out
test
lret
ds
out
inc
test
xchg
mov
scas
mov
push
jle
add
aaa
push
lds
mov
or
or
push
shrl
xor
jae
jb
dec
stos
adc
jge
mov
pop
jmp
xor
inc
aad
mov
popf
out
pushf
shrl
or
jnp
adc
movsb
aas
sbb
iret
inc
test
faddp
call
jle
mov
shl
scas
mov
nop
push
and
mov
mov
or
xor
inc
cmp
js
push
scas
pop
fiadds
cmp
test
mov
mov
outsb
xchg
lcall
cmpsb
mov
addb
inc
or
in
data16
lods
imul
xchg
ffree
ljmp
fxch
lods
add
fcmovnb
mov
pusha
leave
out
mov
or
in
sbb
les
xchg
mov
add
lea
adc
fnstcw
push
out
mov
dec
clc
or
std
jnp
mov
sbb
test
mov
push
xchg
les
iret
mov
cmc
mov
jecxz
in
dec
jno
cmp
fbstp
arpl
and
adc
push
push
hlt
dec
xor
pop
adc
ret
and
ficoms
ror
xor
adc
jbe
or
inc
sub
and
add
test
adc
inc
outsb
out
mov
rcrb
add
iret
mov
lds
sbb
mov
cld
cmp
xchg
fcomp
orl
mov
call
fnstenv
hlt
pop
dec
sub
les
fs
jecxz
stos
cs
dec
iret
mov
pop
xchg
ret
insl
rorl
pusha
push
pop
inc
ret
dec
jle
mov
out
in
cmpsl
pop
imul
sahf
movsb
stc
sbb
aaa
movsb
lret
pop
inc
jae
pop
and
sbb
cld
sbb
sbb
arpl
lahf
push
xchg
cmp
out
negl
add
mov
inc
jo
cmc
loopne
scas
fldt
cld
adc
ja
sub
pop
sbb
aaa
ret
xchg
in
mov
sub
bound
xchg
or
mov
cld
idivl
adc
pop
mov
jo
rol
cmp
outsl
jmp
in
sub
neg
and
push
bound
adc
cmp
loopne
out
pop
jo
les
insl
inc
push
in
mov
mov
inc
sti
adc
nop
loop
imul
xchg
pop
outsb
into
jecxz
dec
icebp
mov
jo
les
dec
movlhps
js
fildll
mov
test
hlt
out
adc
outsl
dec
das
inc
xchg
in
pmulhw
les
mov
mov
push
jl
das
jns
fs
sub
cmp
push
jo
push
frstor
mov
pusha
dec
mov
jb
leave
jmp
cmp
pop
mov
popf
jge
fldt
movsb
daa
push
test
pop
mov
and
out
addr16
xor
sbb
xor
rolb
in
xchg
daa
pushf
mov
add
pop
sbb
push
xor
fsubl
mov
push
cmpsb
test
nop
mov
loope
cwtl
mov
mov
loopne
je
fstl
rolb
cmpsl
xor
in
popa
add
int3
lret
dec
imul
call
arpl
fadds
xchg
dec
imul
push
push
js
and
or
mov
mov
pop
ss
xorl
cmpsb
clc
push
mov
call
mov
jne
mov
cs
aam
ret
xchg
test
stos
jg
mov
mov
jne
inc
mov
pop
mov
enter
pop
outsb
loope
fwait
xchg
cld
mov
cmp
pop
pop
arpl
loop
jp
pusha
jge
push
enter
inc
clc
imul
popa
ss
sahf
mov
addr16
fwait
rcrl
addr16
cmp
xlat
dec
pop
ficoms
clc
mov
jl
jno
in
adc
add
and
stos
rol
arpl
data16
add
loop
lods
jle
aad
ja
inc
add
out
jb
or
jmp
inc
stos
lahf
ret
stc
jne
fsubs
lret
repz
pop
stc
insb
stos
gs
cmp
loope
leave
addb
fadds
hlt
ret
lea
push
xor
sbb
and
loopne
jno
cmp
int
sti
and
xor
add
mov
lcall
adc
push
les
xor
stos
mov
fwait
testb
aas
xchg
xchg
dec
daa
pop
or
pop
outsb
fiadds
jge
push
lcall
cmpsb
pop
mov
add
mov
imul
test
repnz
or
pop
lcall
add
loop
or
mov
int3
push
push
mov
jecxz
pop
cmp
movsl
cli
call
sysret
stos
lods
jno,pn
andb
test
push
es
xor
lret
mov
clc
sbb
or
rolb
xchg
xor
sbb
or
push
test
lods
cli
jmp
cmpsb
rorb
sub
ds
xchg
or
enter
inc
mov
mov
stc
test
sbb
popl
andl
rclb
cmp
test
pop
addl
add
xchg
sub
je
pop
mov
imul
inc
test
push
cmpsl
lret
mov
mov
hlt
out
fadds
rcr
push
cli
push
icebp
and
jge
push
int
test
adc
inc
stc
lods
loop
add
jmp
fldt
jecxz
mov
es
outsb
aad
dec
adc
int3
js
stos
rcl
mov
outsb
stos
mov
shlb
fdiv
pop
cmp
daa
push
repz
inc
mov
sbb
shll
mov
into
les
test
shlb
cmp
push
lods
std
sub
test
daa
sbb
shrb
loope
jmp
shufps
cmp
cmpsb
jecxz
sar
lea
sarb
test
inc
mov
inc
cli
outsl
cmpsl
clc
aaa
adc
add
inc
call
fsts
xchg
decb
add
rclb
incb
or
xor
inc
push
loopne
xchg
xchg
jns
leave
fwait
leave
test
jp
adc
mov
dec
lret
mov
xchg
das
filds
outsl
sub
and
fdivrl
ja
adc
sub
dec
out
aaa
out
mov
cmp
jg
aaa
fsubl
rcr
rcrb
call
inc
or
out
imul
movb
clc
filds
notl
aas
pusha
sub
sahf
mov
and
xchg
movsb
stos
and
and
hlt
mov
inc
jns
jl
lret
inc
xchg
fildll
push
fnstcw
outsb
int
or
hlt
dec
imul
sbb
mov
insb
jns
in
jl
inc
mov
xor
notb
mov
test
fcomip
cmp
or
sbb
mov
mov
cltd
lcall
or
int3
mov
and
mov
xlat
ja
cmp
sbb
or
insl
mov
fmull
lds
and
mov
fdivrs
rcrl
push
xlat
fwait
pop
inc
pop
jp
and
sti
jl
out
or
xchg
adc
add
repz
mov
aas
adc
and
mov
cmp
test
jae
pop
and
jp
lcall
lahf
dec
sbb
js
scas
xor
cmc
inc
rep
push
pop
lods
dec
pop
adc
jnp
dec
loope
mov
or
lret
xchg
lahf
stos
dec
leave
and
or
pusha
pop
jns
jo
clc
sub
out
shll
std
mov
and
cmp
outsl
xor
add
mov
inc
mov
sbb
adc
leave
adc
in
js
into
popf
fistl
adc
loop
mov
pusha
mov
icebp
mov
mov
cli
pop
lahf
aas
cwtl
push
nop
xchg
std
rcll
es
ss
inc
es
inc
gs
mov
fstps
fnstsw
xchg
sub
lods
and
das
jp
xchg
jnp
insl
outsl
pop
cmp
pop
test
lock
rclb
jmp
or
popf
push
inc
gs
push
xchg
sub
pop
push
push
in
test
out
and
jns
sti
and
xor
add
push
shr
adcl
les
lds
sub
mov
and
cli
mov
xchg
icebp
inc
adc
pop
xor
pop
aam
xchg
mov
or
cli
ret
out
arpl
int
repnz
aad
pop
jle
add
xchg
mov
xlat
mov
lcall
hlt
cmp
fcmovbe
daa
push
pop
leave
ja
or
leave
out
jmp
inc
mov
mov
loopne
leave
add
xor
push
lds
out
stc
lock
mov
insb
lret
jb
jp
mov
sbb
fs
sub
mov
jmp
ficoms
inc
test
stos
sbb
jl
scas
inc
pop
iret
mov
jb
jge
mov
in
lcall
push
cmp
lret
dec
test
cmpsb
pop
sub
dec
adc
push
add
xchg
outsb
daa
in
jle
int
lods
inc
xchg
aaa
jmp
into
jnp
xorb
xchg
mov
jmp
pop
sbb
pop
inc
fidivl
fistpll
or
fstp
fcompl
shrb
sub
movsl
out
mov
std
cltd
mov
js
imul
xor
and
dec
dec
mov
push
sub
test
add
xchg
sahf
adc
jne
mov
pushf
add
repz
mov
data16
xor
inc
inc
aam
add
mov
outsl
pop
or
fiadds
jns
sub
pop
push
leave
add
scas
ficoml
cmpsl
in
enter
sahf
iret
dec
add
imul
xor
popf
ja
lock
push
push
add
cmp
fmul
mov
lret
cmpsl
jg
mov
jmp
cld
dec
enter
lcall
ror
int3
lcall
in
imul
mov
sbb
lret
cmp
cmp
xlat
iret
popa
out
adc
mov
xorl
push
push
xor
xchg
and
push
mov
and
test
insb
sub
adc
mov
int
pop
ret
mov
jle
cmp
rorb
enter
adc
out
pop
daa
xchg
push
cwtl
movsb
sbb
lock
loope
fcmovu
ja
dec
jno
jb
adc
inc
inc
lret
dec
jge
jle
sbb
push
jle
jge
xlat
add
movd
mov
pop
fists
adc
cs
sarl
jg
xor
inc
rorl
pop
adc
cwtl
push
lret
xlat
hlt
jno
adc
pop
arpl
push
inc
add
outsb
scas
mov
cmpsl
xchg
dec
mov
sbb
sahf
ds
fstpt
sbb
pop
je
imul
movl
and
call
cmp
jb
mov
movlps
ret
into
sub
in
dec
adc
adc
imul
stc
xor
cs
dec
dec
and
adc
adc
push
enter
and
je
inc
scas
negb
andps
adc
mov
jne
jmp
inc
mov
xchg
pushf
out
dec
loopne
or
push
fisubrs
pop
xlat
fstp
push
call
push
negl
das
jp
push
test
pop
test
adc
rolb
adc
mov
ljmp
mov
ljmp
mov
jmp
nop
jbe
add
xor
inc
mov
ljmp
ja
pop
cli
xor
cmp
in
fucomp
jo
fucom
dec
sbb
movsb
loop
lahf
and
mov
jae
adc
test
shll
sbb
jo
stos
push
out
cmp
jle
out
rcrl
pop
xchg
mov
jns
or
mov
sbb
imul
xchg
movsb
ljmp
outsb
nop
add
clc
inc
movsl
mov
jnp
sarb
add
add
mov
mov
dec
and
push
aaa
add
dec
adc
sti
shrb
test
mov
add
jp
mov
push
cwtl
sub
add
or
adc
mov
mov
cs
push
add
sbb
xchg
mov
ss
xchg
outsb
movsl
repz
jae
cmpsl
cli
out
sub
or
pop
push
push
mov
add
int
dec
fldcw
xor
ljmp
jb
sbb
iret
rol
and
nop
leave
sub
pop
rcrb
leave
xor
sub
push
sti
addb
jmp
inc
mov
lea
test
aad
rorl
cs
mov
fiadds
pop
jle
fsub
rol
push
or
sub
movsl
mov
loope
nop
pop
cli
out
leave
into
les
leave
sbb
inc
loope
shll
insb
push
les
cmp
jno
in
inc
push
mov
out
popf
insb
test
mov
and
push
ja
add
pop
sub
rorl
sbb
xor
ss
xor
sbb
pusha
test
xchg
aas
arpl
sub
pusha
in
pop
xorl
mov
inc
mov
mov
cs
jmp
decb
mov
and
jno
test
lret
int
cmc
inc
orl
lret
cmp
adc
jb
std
daa
and
mov
js
cmp
outsb
cmp
dec
sub
test
push
sbb
lock
mov
cmp
imul
push
je
int3
in
inc
cltd
cmp
movsl
mov
inc
xchg
or
xor
mov
jge
orb
mov
or
add
shlb
std
jo
mov
push
cmpsb
jno
cld
jae
mov
int3
dec
adc
mov
mov
repnz
imul
jl
mov
adc
jge
mov
sbb
sti
adc
push
mov
mov
jmp
xor
dec
xor
fwait
jle
ret
adc
fisubs
mov
xchg
iret
daa
sbb
jo
pop
sbb
insb
cmp
dec
jg
mov
clc
mov
aad
mov
mov
lcall
shll
addr16
imul
push
sbb
jbe
mov
dec
add
in
push
fdiv
data16
mov
sbb
outsl
je
adc
add
in
mov
cmp
pushf
cwtl
sub
lahf
dec
sub
je
aas
dec
mov
cmpsb
fstpt
xchg
movzwl
fcompl
push
xchg
cli
add
and
jne
or
into
call
add
ss
adc
xchg
fsts
test
dec
sub
scas
push
int3
jae
sub
mov
ret
fucom
in
jge
inc
and
int3
and
popf
scas
inc
pop
push
aad
dec
and
out
pushf
xlat
pushf
cltd
fldt
dec
es
xchg
out
or
pop
clc
sub
ret
dec
jae
pop
out
sbb
popa
inc
lea
push
cmp
sub
lahf
xor
add
xchg
cld
fs
jae
push
dec
testb
cmp
pop
or
add
iret
es
in
pop
popf
sub
jae
fwait
cwtl
test
iret
ljmp
jno
sub
loop
lea
mov
cmp
inc
lahf
mov
or
inc
sub
fmull
popf
clc
cmp
xchg
fwait
gs
push
cmp
sarl
xor
mov
movq
mov
dec
sbbl
pop
cmc
sub
pushf
stc
dec
fiaddl
jb
jmp
push
sub
stos
shll
hlt
cmp
xchg
xlat
jmp
shl
cmp
imul
sbb
adc
dec
paddw
das
or
out
inc
js
imul
fistpll
push
call
pop
mov
std
xlat
out
jp
mov
lahf
xor
push
test
jae
pusha
ss
lds
push
das
push
jp,pt
mov
std
cmp
mov
push
push
xor
mov
push
sahf
testl
andl
jae
stos
rclb
fwait
add
scas
sbb
popa
add
and
stc
push
dec
xchg
fstps
cmp
inc
dec
je
cmp
pop
les
ror
mov
insl
add
lcall
mov
mov
sub
cmp
pop
mov
jo
lea
out
push
inc
mov
inc
mov
ja
int
fnstsw
or
xchg
imul
test
fstl
testl
orb
mov
mov
and
mov
and
js
add
loopne
clc
cmp
add
loope
jg
out
ss
mov
cmpl
ss
mov
inc
inc
mov
cmp
dec
fbstp
nop
mov
mov
mov
push
add
push
repnz
mov
gs
adc
cmp
sbb
hlt
shrl
andb
out
arpl
cwtl
push
iret
mov
lcall
ror
rolb
loop
mov
xchg
pop
mov
arpl
jl
enter
adc
out
sahf
mov
sbb
inc
push
iret
cmp
mov
fmuls
adc
js
dec
adc
adc
add
sub
push
fidivrs
cmp
mov
sub
daa
call
sub
data16
sub
sti
sarb
lock
cmpsl
shll
nop
jl
cwtl
pop
dec
inc
into
fwait
stc
pop
mov
test
jnp
jecxz
ljmp
mov
xchg
pop
pop
lcall
lret
inc
inc
pcmpeqw
mov
push
or
in
cli
ja
sub
ror
inc
xor
shll
pop
dec
inc
adc
pop
push
xor
and
sbb
int
fwait
push
sbbb
dec
or
sti
imul
jle
fnstenv
and
xchg
in
int3
imul
jns
data16
pop
rcrl
in
sub
mov
arpl
repnz
mov
movb
push
xor
mov
enter
rcrl
and
into
jae
push
inc
mov
add
fnstcw
lds
inc
fidivl
xor
lods
idivl
jb
sahf
mulb
cmp
sarb
out
addr16
movsb
lods
push
lcall
in
jge
jbe
in
jmp
xchg
dec
push
out
xchg
lret
stos
pushf
js
inc
mov
roll
lret
movsb
aam
int
inc
ret
pop
and
add
mov
xor
push
popf
mov
imul
out
iret
imul
ljmp
xchg
cs
xor
negb
insl
cmc
mov
mov
xor
and
xor
outsl
popa
jg
jmp
mov
enter
mov
xlat
sahf
adc
loop
pop
xchg
ss
push
repnz
movsl
cmc
xorl
aad
pop
sahf
lock
xor
xlat
ds
test
push
stos
dec
xchg
adc
addl
stc
div
xor
pop
fldcw
out
cmc
cli
sub
sbb
lds
insl
andb
insb
jl
jne
fisubs
jnp
test
nop
js
loopne
ss
mov
mov
pop
leave
int3
add
adc
add
pop
in
pop
std
mov
mov
add
xor
or
inc
ds
xor
test
push
adc
pop
ss
pop
inc
jne
push
push
fwait
inc
and
jmp
mov
fcomp
cmp
outsb
inc
cmp
cmp
mov
add
popa
xor
push
or
sarb
inc
in
ds
push
sub
adc
orl
pop
mov
xchg
and
xor
and
mov
inc
jns
rcrl
mov
cmpsl
pop
xchg
cltd
outsl
jl
and
push
lea
loop
ss
icebp
mov
lret
jge
sti
int3
out
jbe
dec
outsb
cmp
shl
out
test
cmp
xor
or
add
add
dec
clc
jle
rorb
daa
jmp
xchg
fsubr
outsl
push
dec
pop
push
push
ret
loopne
jg
push
pop
rcll
lods
xchg
rol
adc
jmp
repz
mov
or
jle
into
out
jp
add
shll
andl
jae
sti
or
inc
movups
mov
lcall
xor
mov
into
mov
pop
ds
adc
ja
add
adc
pop
push
pop
ds
pop
xchg
popa
sub
xor
mov
mov
adc
jge
shrb
push
push
popf
rcrb
or
mov
pop
jbe
insb
and
adc
outsl
push
lret
or
imul
ds
fnstsw
cmp
jne
in
xchg
jmp
push
int3
pop
add
sbb
pushf
pop
out
std
xchg
aad
ljmp
out
ds
loopne
ret
popa
add
and
inc
pop
or
mov
ret
or
cwtl
adc
aad
or
adc
jb
add
lret
mov
fxch
xorb
test
lret
pop
out
js
sahf
shll
and
sbb
scas
mov
arpl
inc
inc
adc
in
add
ret
add
xor
out
imul
stos
mov
adc
push
mov
loope
daa
jge
push
mov
sti
sbb
insl
insb
xor
mov
dec
sub
jb
sti
pop
add
or
add
xchg
mov
push
out
shrl
imul
je
scas
inc
cmp
rcll
or
jo
inc
sahf
sar
mov
xor
pop
lahf
dec
push
xchg
jg
js
daa
pop
jnp
or
notl
adc
mov
ds
and
lcallw
psrld
inc
mov
rorl
nop
sbbl
mov
sub
cmp
cmpsb
and
xor
enter
pushl
pop
xor
dec
jge
cwtl
inc
subl
shrb
push
mov
jnp
push
xor
outsl
or
dec
int3
stos
aaa
push
mov
lcall
outsl
js
sub
pop
lods
adc
vandnpd
rclb
jmp
out
or
jle
xchg
pop
sub
adc
arpl
cli
cmpsb
icebp
xchg
sahf
cmp
push
push
and
rcrb
sub
push
fildll
xchg
js
addb
jp
mov
shlb
sbb
shll
push
aas
insl
js
cwtl
fsubl
adc
mov
mov
mov
push
movl
xchg
mov
dec
shlb
js
push
xchg
mov
test
cmp
mov
call
cli
xchg
je
dec
pop
leave
incb
cmp
cmp
int
in
int
stos
aam
dec
adc
adc
cmp
ljmp
push
jmp
daa
push
dec
sub
pushf
pop
jo
lret
fistpl
pop
push
xchg
pop
lcall
jnp
xor
adc
xchg
pop
adcb
mov
cmpsl
loop
mov
push
adc
aas
es
and
xchg
popf
push
roll
xchg
mov
adc
cmp
nop
dec
scas
push
repnz
lret
xchg
pop
fdivp
and
mov
leave
xchg
pop
out
push
test
popf
iret
pop
mov
jl
cmp
sbb
fsub
push
hlt
xchg
jmp
loopne
jno
ja
jg
mov
xchg
xor
mov
sti
loop
leave
int3
clc
mov
jno
cwtl
inc
jns
cwtl
xor
std
xchg
add
mov
int
sbb
outsb
cmc
addb
add
inc
lea
jnp
popf
and
imul
std
sub
mov
mov
cwtl
jno
in
inc
mov
outsl
jl
stos
sbb
jp
lahf
jmp
lcall
and
ss
cmpsb
loope
jecxz
out
dec
adc
in
in
stos
sbb
sti
fistpl
xorl
aam
idivl
cmp
call
outsl
test
xor
movsl
sub
adc
in
jne
enter
mov
test
sbb
pop
test
dec
dec
jne
cltd
or
out
mov
jecxz
rcr
dec
decl
sub
pop
pop
push
inc
lahf
cli
es
jg
mov
repz
hlt
imul
push
pop
push
adc
mov
lahf
hlt
cmp
mov
in
sti
imul
sbb
pop
xor
sub
enter
pop
sub
dec
mov
mov
sti
divl
sub
mov
dec
and
mov
pop
cld
out
mov
pop
dec
adc
hlt
add
inc
cmp
sahf
push
movsl
loope
shll
mov
lret
cmc
jns
mov
cs
jp
xchg
push
imul
dec
inc
data16
dec
mov
pop
imul
mov
cwtl
adc
movsb
loop
push
push
cmp
cmp
xchg
sub
mul
sbb
cli
mov
add
push
data16
and
adc
xchg
mov
and
nop
daa
and
push
arpl
dec
pop
add
ljmp
dec
aaa
out
in
xor
cmp
jnp
sahf
mov
pop
jbe
push
dec
lcall
push
pop
les
push
adc
jae
and
inc
adc
mov
pop
add
loope
jmp
xor
jae
out
lahf
cmp
or
or
jg
or
loope
or
iret
dec
mov
outsb
jle
dec
in
mov
dec
inc
lahf
xchg
lods
gs
sub
sbb
fnsave
xchg
push
dec
mov
pop
sub
sbb
cli
jmp
xor
mov
imul
leave
jnp
aaa
aas
sti
ret
cmp
loop
popa
cli
imull
jle
popfw
aas
pop
ret
int
pop
test
in
jns
insl
jo
enter
ds
ret
dec
rcrl
aaa
xchg
or
lcall
dec
jo
dec
mov
cmp
dec
pop
movb
decl
xor
push
in
lods
push
repnz
or
popf
incb
unpckhps
xor
addr16
jp
pop
cli
mov
xor
lret
xor
insb
inc
pushf
cmp
out
popa
xor
lods
inc
repz
gs
or
mov
pop
inc
dec
jb
shrb
mul
loope
sub
jns
lock
jnp
ret
mov
xchg
cmp
fldenv
fildl
jmp
lds
mov
popf
or
shll
mov
mov
xor
xchg
insb
test
ret
jae
insl
mov
stos
xchg
adc
fincstp
popf
out
jp
mov
sub
dec
inc
ja
inc
cwtl
aam
decb
test
push
sbb
in
in
and
imul
pop
push
int
mov
daa
jo
ret
push
incl
fisubrs
lods
shl
outsl
add
mov
add
jmp
lods
clc
les
cmp
and
sbb
mov
fsubl
jmp
loope
xchg
xor
xor
mov
into
das
pop
int
sbb
testb
mov
into
mov
jmp
popf
xor
dec
addb
add
sub
lret
push
faddl
mov
jl
cli
cmp
mov
mov
sarb
aas
jne
mov
jae
popa
push
xlat
mov
xchg
mov
fwait
incl
jo
cmpsb
scas
sbb
aas
push
test
xor
sahf
and
jae
arpl
sbb
cmp
lcall
mov
add
sub
lock
iret
loop
lcall
pop
lret
data16
mov
js
add
jnp
dec
gs
test
mov
sbb
jg
mov
rolb
jmp
sbb
fcomp
sub
mov
and
adc
or
push
aam
out
subl
repnz
cmpsb
pop
shll
dec
dec
mov
stos
fsubrs
xlat
fdivrs
jb
and
push
nop
add
mov
jl
lock
jmp
rcrb
push
in
sub
inc
inc
sbb
mov
fidivs
aaa
fsubl
ljmp
fwait
dec
mov
jbe
clc
arpl
icebp
mov
ss
adc
imul
addl
insb
lretw
adc
xchg
mov
push
push
insb
push
mull
cmpsb
roll
pop
cmpl
mov
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
ret
outsl
mov
sbbl
xorl
push
inc
and
cld
int
cmpsl
out
xor
mov
cs
dec
adc
push
add
cs
out
jbe
lcall
shl
pop
ficompl
shll
add
lds
dec
fs
jl
inc
jecxz
popa
and
sub
mov
pop
dec
iret
or
fldt
xor
mov
enter
enter
and
xchg
in
push
ret
iret
and
jnp
cmc
scas
add
mov
pop
stos
test
filds
icebp
cmp
sbb
xchg
push
mov
cltd
out
fcmovu
sbb
mov
out
out
fildl
insl
faddp
loop
jg
jae
fsubrl
rcrl
shlb
add
das
fstl
push
inc
aad
xchg
in
or
xor
jg
pop
dec
mov
dec
lret
push
jg
test
divb
xor
imul
sbb
adc
call
cld
and
inc
scas
lret
movsl
jo
insl
dec
xchg
mov
pop
pushf
sub
and
andl
mov
mov
dec
mov
mov
jecxz,pn
mov
mov
push
and
xor
arpl
xor
addr16
mov
cmp
hlt
mov
xchg
or
lret
inc
mov
inc
sbb
sbb
lret
js
repnz
push
insl
or
mov
in
mov
push
in
bound
stos
jns
xor
jl
out
inc
jo
fisubrs
arpl
inc
shrl
xchg
push
and
xchg
sbb
scas
or
fcomip
leave
nop
sub
pop
in
movsb
pusha
lahf
rorl
mov
lods
pusha
insb
push
inc
gs
cmp
inc
and
scas
adc
mov
cld
jmp
daa
ljmp
dec
fs
cwtl
jmp
pop
adc
out
mov
add
dec
stos
test
sbbb
mov
cs
pushl
imul
lds
test
jnp
add
movsb
test
in
push
fcomi
xor
arpl
popl
and
rcrl
and
scas
sar
mov
inc
xchg
int
sub
call
sarb
call
addr16
in
ficoml
jp
fistl
jge
sbb
sub
cmp
add
aas
xchg
in
test
into
cmp
outsb
popa
rol
inc
and
sbbb
mov
jmp
sub
xor
fwait
mov
in
add
fcmovnu
sub
aas
xor
pop
aaa
mov
js
xor
lods
adc
pop
sub
popa
sub
je
pop
and
cli
in
bnd
mov
and
pop
fld
cwtl
rcrb
pop
fdivrl
sar
bound
out
push
lahf
mov
or
mov
mov
js
adc
push
push
add
cmc
nop
xchg
pop
adc
xor
cmp
pop
cmp
xlat
add
scas
out
pop
sub
inc
pushf
loopew
test
loopne
push
dec
fisubs
out
xchg
test
xchg
inc
push
in
add
mov
out
pop
sbb
adc
loope
mov
inc
mov
and
sub
cmp
pop
mov
test
out
inc
shrl
roll
fcomip
push
jo
movsl
lock
cmp
int3
lods
scas
mov
add
pop
push
cmp
cltd
dec
dec
cld
cld
and
cwtl
fcom
or
mov
push
inc
xor
or
std
jge
imul
hlt
mov
lahf
ljmp
lea
xchg
daa
ds
pop
adcl
cltd
mov
popl
int
add
adc
das
mov
shrb
jns
ss
jmp
lds
inc
fwait
in
loopne
sbb
inc
clc
je
fsubrl
inc
xchg
adc
mov
inc
pop
jns
repz
adc
mov
icebp
je
mov
ret
js
outsb
dec
mov
std
or
ja
ret
jae
ss
cmp
stos
sub
mov
pop
outsb
insl
std
sub
addr16
push
lods
bound
lret
mov
push
sub
notb
inc
mov
int
jae
or
into
jle
icebp
js
push
rcrb
fcomip
sbb
test
sti
push
daa
cs
push
cmp
clc
cli
clc
and
and
mov
cmp
push
dec
rcr
pop
adc
pusha
out
add
sub
cmp
xor
mov
aam
mov
cmp
in
pushf
sbb
in
mov
add
push
lahf
dec
int3
jge
mov
pop
sbb
mov
jg
jo
adc
dec
rcr
mov
pop
push
sbb
dec
notl
or
inc
add
or
repnz
shlb
cwtl
dec
shrb
es
movsb
notl
push
in
jecxz
xchg
cmc
scas
mov
mov
stos
lea
sbb
in
dec
pop
ja
das
clc
mov
sub
sbb
fimull
mov
dec
mov
in
dec
mov
jecxz
lahf
add
rcrb
fimuls
popf
lods
xchg
and
jp
xor
adc
insl
scas
enter
add
fmul
or
dec
xchg
inc
dec
std
mov
jp
cmp
jmp
loopne
neg
mov
xor
outsl
xlat
xor
mov
mov
test
addr16
xchg
shrb
rcll
jge
mov
ljmp
iret
jns
ficomps
fistpl
add
loopne
dec
popf
mov
adc
bound
adc
pmaddwd
or
test
into
mov
inc
fcompl
jg
gs
aad
jge
lods
add
sbb
leave
sub
jno
fldenv
dec
push
test
ja
lret
sub
mov
mov
js
mov
aas
bnd
test
push
les
jge
mov
fsubrs
xchg
shl
sar
lods
cs
dec
push
test
adc
mov
lods
jmp
loopne
lods
mov
xlat
fcmovnbe
mov
bnd
or
faddl
es
pop
jg
ret
stc
mov
jg
cli
cmp
shll
or
sbb
repz
adc
fcoml
les
cli
mov
push
not
xor
enter
cmp
test
jae
stos
call
pop
mov
lds
sbb
data16
mov
jo
lahf
sti
adc
fldl
int
xchg
leave
test
aad
dec
lret
icebp
mov
aaa
movsb
add
cli
and
xor
mov
fs
xor
andl
scas
aaa
rolb
movsb
mov
data16
adc
push
es
jg
ficoml
jbe
shrb
jle
add
or
xchg
test
jecxz
nop
add
daa
mov
frstpm(287
das
aad
pushf
movsl
or
and
mov
gs
mov
repnz
daa
nopl
xchg
mov
fcoms
mov
cs
dec
lds
repz
sbb
push
out
test
or
sahf
pop
push
xchg
addr16
add
lret
fcomps
mov
nop
and
aas
mov
fbstp
pop
or
jae
lahf
xchg
and
hlt
jmp
lods
sub
and
mov
ds
out
clc
jmp
inc
cmp
cltd
ds
sbb
insl
sarl
arpl
jmp
push
pop
sarl
jnp
popa
nop
cli
mov
jno
les
in
xchg
or
pop
je
fdivl
sbb
dec
add
loop
clc
add
mov
sti
ss
mov
pop
mov
cmpl
push
xlat
mov
popf
js
andl
add
scas
or
mov
lret
jg
adc
mov
fsubs
jbe
add
mov
adc
lea
xor
pop
push
aam
pop
add
outsl
movsb
int3
cmpsb
lcall
lret
cmp
jp
test
out
call
inc
cwtl
repz
icebp
mov
loop
pop
repnz
aas
inc
pop
arpl
test
mov
shl
xchg
iret
out
insb
lods
cmpsl
push
loope
mov
cli
and
xchg
sub
pop
adc
dec
push
andl
test
stc
mov
cmp
jmp
stc
outsl
mov
xchg
adc
sbb
sub
insl
imul
cmp
cld
xchg
jnp
sbb
jo
insl
cmp
jmp
fldt
pop
pusha
xor
push
pop
mov
test
stos
stc
dec
pop
fs
add
push
lds
aas
jb
lret
pop
fisubl
or
push
sbb
push
fwait
imul
aaa
shrb
ret
aam
inc
cmp
in
clc
xor
add
mov
jns
mov
dec
into
mov
call
mov
inc
dec
rolb
push
sbb
out
aas
xchg
or
out
adc
dec
push
cmp
ret
xchg
inc
cmp
test
test
xchg
push
aam
pop
dec
sub
jge
jo,pt
or
loop
mov
enter
outsb
gs
pusha
int3
add
in
jo
rcll
imul
arpl
jge
imul
fstpl
and
dec
push
xor
aam
jle
add
jo
and
mov
jae
stos
outsb
mov
or
pop
sti
jbe
or
inc
cld
lds
jnp,pt
arpl
nop
and
sbb
hlt
in
xchg
daa
loop
loope
jp
aaa
mov
jbe
clc
jnp
repz
or
sbb
mov
adc
adc
cmp
js
leave
cwtl
arpl
stos
xor
jle
sub
adc
mov
out
or
and
jno
jbe
ja
ret
mov
leave
sub
lods
add
fmuls
jbe
push
loopne
jb
fldenv
pop
pop
les
or
inc
pop
mov
insl
push
and
roll
loopne
clc
fisttpl
jmp
into
cmp
or
and
mov
mov
imul
jbe
lods
jns
cmp
push
mov
cs
push
mov
dec
jbe
mov
test
test
mov
cmc
xchg
pop
pop
dec
push
dec
lret
rorb
ficoms
or
jl
lods
jp
insb
cwtl
pusha
unpckhps
jbe
fdivl
in
daa
fdivrs
sub
ficoms
subl
dec
dec
xlat
call
addr16
dec
add
rol
sbb
adc
fs
jg
xor
ret
bnd
inc
lahf
and
add
inc
iret
mov
jmp
add
movsb
sub
jo
shrl
and
and
pop
out
dec
cmp
xchg
jo
dec
loopne
xchg
xor
cmp
in
popa
inc
mov
aam
fimuls
cltd
push
sub
jle
inc
sarb
add
or
jno
insl
aas
dec
lods
mov
push
js
lea
imul
dec
mov
rorb
pop
lods
cmp
inc
sub
adc
outsl
fildll
adc
sub
loope
outsl
lret
mov
xchg
jmp
cmp
leave
and
popa
stc
lret
mov
shrb
shrl
jnp
sub
add
in
lret
pop
xor
pop
ret
subl
insb
or
movsl
xchg
dec
cmc
clc
mov
hlt
rorl
and
dec
cmp
xchg
mov
dec
lds
fwait
daa
add
push
fwait
inc
jg
outsb
imul
mov
arpl
stos
xor
negb
inc
push
pusha
jle
jg
cmp
mov
stos
sub
clc
pop
dec
pop
loope
inc
mov
pop
daa
and
int3
push
or
ljmp
out
movsb
lahf
and
mov
repz
dec
lret
in
pushf
push
movsl
sub
sbb
lahf
pushf
nop
loope
sbb
inc
xor
dec
pop
jle
pop
std
movsl
ds
rcll
fwait
shll
out
mov
push
cmp
cmp
jno
inc
test
loopne
push
sub
into
sub
icebp
imul
cmp
inc
adc
out
orl
movb
adc
xchg
out
stos
jne
pop
js
stos
inc
iret
daa
dec
sti
orl
push
cmpsl
or
shl
jmp
dec
jnp
pop
jmp
adc
lods
mov
xor
adc
movsb
hlt
loope
sub
gs
sbb
push
bound
andb
dec
test
push
add
inc
aad
mov
add
outsl
loop
nop
rclb
sahf
add
das
jo
clc
mov
sub
jl
jnp
jl
xchg
pop
es
scas
jl
popa
push
push
adc
dec
adc
sbb
xchg
sbb
out
out
pop
lods
mov
cltd
xchg
imul
fs
sbb
sbb
cmpsb
sahf
push
sub
sub
imul
push
xor
push
jg
cltd
loopne
ds
push
in
inc
bound
das
sti
scas
fistps
adc
cmp
or
imul
dec
adc
push
outsb
mov
test
in
cmc
mov
pushw
and
add
pop
adc
pop
into
aam
fldcw
add
adc
aam
clc
notb
bound
sbb
inc
mov
push
and
mov
rcrl
xor
mov
mov
sbb
mov
icebp
leave
xor
js
xchg
dec
repnz
test
cmpsb
dec
inc
sbb
pop
add
xchg
xor
add
adc
mov
sbb
int3
jg
and
clc
mov
fwait
mov
mov
gs
jnp
imul
in
pop
rcl
fstl
testb
test
insb
jo
mov
push
mov
loop
and
and
mov
jo
pushf
out
jno
in
push
cmpsb
and
adc
add
fcomps
jge
loopne
xorb
lret
jne
adc
jle
jge
movsb
jns
ja
shlb
adc
jae
mov
negb
orb
jle
das
mov
movsl
in
xlat
dec
inc
subb
lahf
xchg
or
jbe
xor
mov
xor
ds
push
clc
loop
cmp
ss
add
in
out
mov
stos
dec
push
pop
add
pop
outsb
mov
cmp
ljmp
cltd
push
mov
cltd
shlb
fldenv
mov
sbb
inc
cld
aad
jmp
les
xchg
repnz
adc
mov
in
jecxz
and
adc
cmp
rcll
cmp
adc
pop
sub
mov
into
div
lret
mov
repnz
jnp
xor
xor
js
xor
fisubs
popa
xor
out
mov
sar
xchg
movsl
pop
sub
imul
sbb
adc
add
jbe
shlb
jg
and
pop
andb
pop
sub
mov
fucomi
mov
fidivrs
rcrb
and
xor
std
test
stos
subb
sub
push
push
jmp
leave
xchg
lock
dec
mov
addr16
cmp
jmp
pop
test
loopne
in
xchg
enter
test
xchg
xchg
lock
inc
cmp
cmp
mov
mov
int3
pop
pop
xchg
push
xchg
rcl
mov
mov
sub
bound
pushf
popf
insl
inc
frstor
fistps
sbb
adc
sub
pop
sar
bound
push
rcrl
pop
imul
pop
int3
insb
fimuls
dec
xchg
adc
addr16
loope
inc
cmp
jne
shl
mov
mov
lahf
pop
xchg
dec
adc
jecxz
push
push
adc
mov
add
pop
push
fistpl
outsl
negb
js
dec
push
cmpsb
fisttpl
pop
xor
pushf
lret
inc
in
mov
mov
shlb
pop
fiaddl
push
imul
cmp
cmp
movb
and
insb
jnp
in
test
dec
push
dec
inc
je
and
loop
test
jg
mov
loope
orb
xor
mov
mov
sbb
cwtl
cmp
inc
lock
xor
ret
clc
ja
pop
test
mov
je
fnstcw
test
or
pop
rclb
mov
jbe
mov
lds
lcall
clc
insl
adc
or
hlt
lock
insl
cld
dec
pop
adc
sub
mov
mov
jg
adc
jp
mov
add
shll
push
mov
jmp
mov
jnp
lods
popf
sbb
push
fs
jecxz
add
jmp
pop
mov
mov
push
adc
enter
adc
into
xchg
fcomi
lret
repz
sar
pop
and
sub
mov
sahf
pop
mov
add
aad
jne
lret
and
cmp
pop
shlb
dec
std
clc
in
ds
aaa
fildl
popa
imul
mov
sub
lret
pop
mov
gs
call
adc
and
int3
mov
push
or
jmp
xor
insb
mov
cmp
jae
sub
inc
nop
jns
push
jo
dec
mov
scas
xor
mov
mov
mov
fcompl
jo
jg
hlt
push
dec
in
test
and
mov
cltd
in
jns
jg
ret
aad
xchg
enterw
iret
outsl
mov
leave
mov
test
pop
mov
mov
pop
push
pop
insb
mov
jmp
add
scas
or
sub
mov
je
shl
rorl
sub
pop
xlat
mov
test
push
shlb
lods
inc
inc
movsb
mov
movl
pop
cmp
sub
xchg
cmp
jecxz
push
repz
test
stc
mov
nop
pop
je
mov
ret
cwtl
ljmp
adc
aam
in
jg
loop
sub
dec
mov
mov
pop
jmp
test
js
rcr
cmp
xchg
jl
repnz
inc
dec
xor
jo
dec
pop
xchg
mov
insb
pop
repnz
and
rcrl
inc
loopne
xlat
or
cmp
mov
lds
xor
or
cltd
fistpll
in
mov
xor
cs
sub
add
inc
jp
and
or
push
inc
pop
mov
pop
int3
scas
mov
aas
loopne
ror
jno
inc
sbb
pop
fcoml
test
push
xlat
mov
add
xchg
inc
or
xchg
push
rcll
dec
shlb
jg
imul
jbe
xor
nop
out
insb
xorb
mov
pushf
idivb
jnp
sbbb
pop
aam
iret
adc
subb
das
jno
pop
push
sub
mov
jmp
test
mull
int3
pusha
push
jbe
loopne
out
and
push
test
jmp
dec
mov
or
lahf
inc
out
cmp
jecxz
mov
subb
sti
cmpl
adc
enter
jns
sub
divl
mov
xchg
scas
jp,pn
in
in
push
add
out
xchg
lea
pop
push
mov
inc
inc
js
mov
mov
andl
fidivs
xchg
sub
inc
xchg
xor
out
xor
movsl
aas
iret
lds
jmp
in
inc
xchg
xchg
xchg
jecxz
sbb
arpl
loop
add
fcmovnbe
xchg
subl
jno
mov
xchg
and
push
push
xchg
cwtl
xchg
sbb
int3
cmc
pop
jecxz
or
mov
fs
xchg
rorl
pop
in
push
inc
dec
fsts
int3
in
lods
mov
sub
mov
fimuls
pop
sub
mov
sti
mov
inc
mov
jns
shlb
lcall
arpl
int3
mov
push
sti
shlb
push
aaa
jb
sarb
inc
mov
fcmove
xchg
mov
pop
pop
lea
loope
jl
shlb
push
clc
scas
test
xchg
jl
adcl
or
and
mov
jmp
sbb
or
xchg
xlat
data16
jle
int
cmp
sar
stc
sub
cli
mov
fistps
sbb
je
stos
lods
mov
mov
cmp
xchg
and
mov
cltd
cs
addr16
pop
sbb
cmp
stos
pop
test
daa
jne
and
pop
pop
cmp
sbb
lock
sub
idivb
and
js
and
in
inc
push
mov
cmp
mov
cmpsl
ss
jecxz
ja
or
stos
pop
jl
and
lock
out
inc
inc
lds
insl
cmp
sub
cs
and
fbstp
xchg
loope
leave
div
subps
push
jecxz
cltd
sarb
aad
stos
mov
leave
sub
inc
out
sub
dec
xchg
cmpsl
sub
adc
pop
loope
and
repz
cmpsl
xchg
les
jnp
out
shr
sub
xlat
imul
pop
mov
xchg
mov
je
sti
inc
cmp
jmp
jmp
incb
jo
mov
cwtl
or
mov
push
mov
pop
les
mov
daa
sub
cmc
das
jg
dec
ret
fiaddl
call
int3
movsl
sahf
bound
cwtl
jmp
adc
push
into
test
out
icebp
out
inc
mov
push
lock
xor
xor
mov
leave
fcomps
shlb
jo
mov
mov
xor
sbb
lods
jae
cli
out
xor
out
and
lods
popf
sbbb
cltd
adc
or
mov
adc
fistpl
xchg
push
xchg
fnstsw
aam
push
or
dec
xchg
outsl
decb
add
adc
xchg
mov
sbb
mov
movsl
cmpsb
mov
shll
xchg
lcall
std
push
mov
aas
pop
push
xchg
jae
mov
test
inc
dec
cs
scas
push
shlb
in
push
je
mov
fimull
mov
xchg
mov
mov
dec
inc
pop
int3
dec
rorb
adc
lds
cmp
push
scas
pop
insb
cmp
inc
aam
pop
xchg
lods
mov
cmp
hlt
and
aam
cmpb
pop
aas
rcll
mov
sbb
lock
mov
pop
add
or
jmp
and
mov
push
cmc
jg
outsb
in
pop
cmp
sbb
push
pop
adc
shrb
pop
js
xchg
sub
ret
xchg
enter
and
aad
and
test
pushl
dec
jge
sub
and
sbb
xchg
gs
pmuludq
imul
jl
nop
inc
push
xor
cmp
scas
dec
rolb
ljmp
loop
popf
cmp
sub
adc
add
movsb
test
cmc
jmp
shlb
add
or
in
dec
cmp
cld
xchg
push
movsl
push
sub
sti
aam
ret
xor
addr16
add
mov
push
int
out
cmp
mov
mov
int3
ja
mov
js
and
fiadds
push
popa
aam
xor
add
fsubrl
adc
add
scas
daa
iret
daa
scas
outsl
jbe
pop
jnp
scas
cmpsb
daa
ja
xor
xchg
or
cmp
sub
fdivrs
xor
xor
scas
xchg
push
pop
loop
sbb
aaa
or
testb
imul
or
xchg
lds
sbb
test
push
add
movsb
nop
mov
in
mov
aas
out
ljmp
popa
hlt
lahf
and
mov
or
ja
dec
cmpsl
mov
jle
sub
mov
xchg
scas
sub
add
mov
or
ss
mov
loop
push
mov
je
hlt
ss
push
and
pop
jg
andb
rcll
loopne
ret
dec
jge
dec
dec
inc
sbb
sub
push
push
or
in
ret
mov
daa
out
mov
sti
dec
inc
das
add
sbb
ds
orl
push
pop
mov
mov
imul
mov
fisttpll
daa
in
test
xor
paddusb
data16
mov
das
cmpsl
sbb
stc
stos
test
dec
ljmp
mov
cmp
mov
scas
mov
or
mov
cmpsl
jp
push
movsb
lock
shll
pop
jl
jmp
add
inc
lods
mov
and
mov
mov
sbb
jp
cmp
mov
mov
shrb
rclb
mov
xor
mov
push
out
dec
insl
mov
fcmove
mov
js
cltd
push
test
mov
cs
sbb
imul
pop
xor
dec
mov
and
fdiv
cmp
fs
sbb
in
adc
sub
push
in
mov
push
leave
loopne
inc
mov
lds
insb
pop
in
sbb
or
cld
clc
pop
enter
jnp
pusha
pop
fdivs
or
fdivrl
lcall
test
add
cwtl
cltd
add
add
push
adc
popa
insl
push
jecxz
lret
xchg
call
test
lret
dec
iret
mov
mov
imul
cmp
iret
inc
outsb
pop
lret
daa
fwait
add
ret
pop
and
out
sbbl
dec
out
xor
dec
mov
fstpl
aad
psrlw
imul
mov
or
test
mov
movl
dec
xor
mov
das
mov
int
xorb
das
dec
inc
mov
inc
je
add
xchg
enter
dec
inc
xchg
ljmp
xchg
cwtl
subl
jb
rorl
daa
aam
in
lea
cmp
sarb
out
cmp
notb
mov
je
pop
jo
jle
ret
rorl
jnp
aam
in
loope
jl
adc
lcall
lds
add
jp
rcrl
mov
pop
movsb
lret
xorl
pushf
ljmp
inc
push
push
xchg
xchg
push
pop
xchg
xchg
sub
xchg
sbb
xchg
sbb
cmpsl
cmpsb
pop
popa
stos
sbb
sub
and
jecxz
add
movsb
or
loopne
jo
mov
jecxz
fwait
push
pop
fimuls
pop
push
enter
out
pop
cli
jb
gs
jno
jecxz
sub
adc
hlt
inc
pop
arpl
jno
or
mov
mov
cwtl
ds
stos
aas
sbb
cmp
xor
scas
hlt
sbb
cmp
add
add
lret
loope
popa
out
cmp
test
fs
mov
inc
stc
sti
sarl
or
xchg
iret
xor
jne
mov
int3
cmp
cmc
ud0
jnp
out
xchg
scas
adc
dec
sbb
lods
aam
imul
subb
xchg
test
bnd
sbb
int3
fnstenv
ret
xor
jecxz
jb
cltd
adc
ss
lea
sahf
pop
xlat
push
dec
xchg
cmpsl
sub
cmpb
fmul
sbb
xchg
std
imul
std
cmp
or
and
or
imul
aam
mov
std
pop
pop
cmp
pop
fsts
jmp
and
inc
inc
xchg
shl
fdivp
sub
movsb
adc
sbb
inc
cli
insb
jecxz
mov
stos
mov
bound
pop
add
mov
jmp
stc
ljmp
pusha
pop
outsb
push
cli
ret
adc
push
cli
jmp
adcl
scas
ret
push
xorl
xchg
repz
mov
adc
call
fildll
mov
cld
xor
inc
movsl
dec
mov
scas
int3
mov
lret
fs
iret
jnp
jge
mov
fidivl
in
fisubs
push
and
sub
xchg
mov
lret
xchg
xchg
enter
inc
insb
mov
dec
ficoms
fwait
inc
out
jp
pop
leave
push
mov
int3
and
imul
dec
fstpt
in
hlt
shlb
lret
outsb
scas
ljmp
inc
xchg
pop
xchg
and
add
add
call
jl
cmc
lret
shll
mov
push
repz
xorb
pop
cmpb
js
pop
sub
sub
out
mov
and
dec
icebp
push
sbb
mov
pop
stc
stos
inc
mov
push
cmpsb
jl
stc
cwtl
jle
imul
in
cld
push
mov
in
cltd
int
ljmp
insb
push
sub
xor
sbb
or
xor
mov
fldcw
stos
lods
gs
sub
es
and
repnz
pushf
adc
mov
outsl
sbb
xchg
cli
mov
mov
inc
dec
mov
in
pop
notl
fdivs
mov
into
insb
movsl
pop
fs
add
cmp
add
xorb
insb
outsl
jecxz
or
orl
fwait
jge
js
or
aaa
sahf
mov
sbb
scas
cmp
cmpsb
pop
mov
loop
outsl
test
fs
adc
jmp
jo,pn
int
lods
cmp
int3
aam
xor
mov
mov
bound
outsb
pop
inc
push
pop
inc
and
fists
shr
pusha
je
lret
adc
pop
les
push
push
popf
lock
pop
xchg
jne
ds
push
xor
sbb
lea
jmp
std
stos
aam
inc
add
in
cs
mov
xor
jmp
push
sbb
mov
jge
in
inc
fnstsw
fcomp
add
movsb
pop
or
out
push
xchg
pop
sub
xchg
data16
daa
je
orb
mov
adc
jecxz
lods
testb
aad
test
stos
xchg
test
xchg
loop
xor
lods
dec
ret
rorl
xor
loop
jmp
icebp
dec
xchg
dec
insl
inc
stos
mov
push
jle
sub
mov
or
xor
rorl
jle
fsts
add
jno
add
mov
neg
xchg
or
fcoml
je
dec
repz
pop
jle
push
lret
xchg
cmp
xchg
mov
adcb
pop
in
lret
pop
mov
xchg
mov
sub
mov
lds
dec
gs
sbb
mov
dec
cltd
mov
icebp
xadd
inc
aam
cmpsl
les
les
jne
test
jg
jp
insb
aaa
out
xor
xor
int
mov
adc
sbb
aam
call
lret
aam
fcoms
in
dec
pop
pushl
push
pop
pop
sub
sbb
mov
or
sahf
or
fisubs
sahf
pushf
test
fs
icebp
std
call
push
sbb
dec
sub
xchg
in
int3
int3
leave
in
enter
pop
lahf
adc
and
mov
cli
and
and
mov
daa
fisttpl
jbe
in
ds
lds
push
add
xchg
shll
mov
loope
cld
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
repz
mov
mov
inc
mov
xor
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
