push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
clc
fisubrl
fstpl
bound
sub
pop
add
pop
jne
in
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
lock
in
inc
pop
in
xor
dec
add
pop
xchg
insl
movb
adc
sbb
imul
or
cmp
push
inc
out
and
in
es
push
int3
jnp
xchg
cmpsl
jl
jecxz
test
mov
arpl
cmovb
test
ja
cmp
sub
mov
pop
jne
insl
lret
leave
or
test
xchg
xlat
addr16
mov
das
fidivl
jl
test
lea
lods
pusha
test
sbb
jecxz
rorb
fwait
bswap
shlb
lds
inc
jb
sbb
fwait
insl
push
fstpt
movsl
dec
jb
out
push
scas
int
fisttps
mov
pop
and
dec
pop
adc
xor
jecxz
pop
xchg
pop
lret
cli
xchg
mov
dec
dec
push
sarl
mov
ret
loope
mov
daa
push
scas
int3
stos
and
mov
test
in
xchg
scas
adc
je
and
lahf
jge
insl
adc
inc
test
insb
shlb
adc
pop
or
stos
ret
sub
into
xchg
jno
out
xchg
sbb
in
idivb
mov
cs
addr16
mov
pop
mov
jo
xor
xchg
push
jg
jl
mov
test
mov
dec
jnp
xor
stc
inc
or
fs
pop
and
add
loope
xchg
mov
in
mov
jge
mov
sbb
arpl
push
ss
lret
xchg
pop
lahf
cltd
dec
adc
pop
sub
or
mov
psllw
shlb
je
mov
inc
imul
inc
loopne
cmp
add
lods
adc
movsb
pop
or
shrb
or
and
popa
lret
cmc
loope
or
push
mov
and
cld
daa
fstpl
rol
mov
loopne
sub
add
dec
pop
outsb
loop
mov
lds
lret
pop
add
mov
mov
in
cmc
mov
mull
repnz
sarl
push
imul
jge
movsb
fwait
mov
jne
mov
dec
mull
shl
mov
push
dec
ds
sbb
mov
fisubs
pop
jmp
bound
cs
push
xchg
shlb
push
fsubs
push
or
sbb
das
sahf
cmp
add
xor
add
adc
jo
adc
lods
popa
push
dec
cli
mov
mov
and
out
add
mov
loop
shlb
out
adc
sub
dec
cmp
in
xlat
jp
gs
inc
hlt
loope
pop
aad
js
mov
pop
fcmovnbe
xorl
cmpl
ja
negb
lret
clc
jo
push
xchg
xchg
or
cmovle
jmp
repz
out
sbb
arpl
jo
iret
test
ret
and
adc
bound
shl
gs
loop
or
gs
sbb
je
mov
int
inc
les
leave
and
ss
cmp
ss
fwait
ret
jge
pop
inc
add
shl
inc
ret
jb
mov
mov
mov
cmp
jb
lahf
cmpsb
jbe
cmp
cli
xchg
cmpsb
mov
and
int3
stos
incb
inc
push
xor
js
sbb
sbb
mov
mov
xchg
cs
mov
insl
fmuls
cli
loopne
xchg
inc
mov
jle
add
xchg
pusha
sbb
jne
leave
mov
sub
inc
jno
test
rcrb
dec
dec
in
push
push
popa
std
repnz
jns
loope
icebp
push
inc
xchg
cmp
arpl
mov
cli
aad
cltd
adc
pop
sahf
fnstcw
shr
lea
insb
pop
adc
add
lret
sub
lret
daa
adc
dec
pop
pop
fstp
inc
das
mov
lds
dec
test
xchg
nop
inc
jmp
dec
xchg
setl
movsb
lds
sbb
sbb
xor
test
cmp
into
lahf
in
cmp
popf
pop
out
in
fistps
and
cmp
stos
aas
fcompl
lcall
xchg
xchg
enter
sub
dec
mov
mov
dec
repz
sbb
shr
mull
enter
mov
push
mov
mov
jne
mov
insb
cmp
lds
push
pop
add
in
push
pop
pop
aaa
icebp
add
fs
xchg
add
sarb
nop
ds
sbb
jo
scas
mov
xor
inc
jb
cmpsb
lret
xchg
and
ljmp
fs
test
mov
inc
cmc
jno
pop
sbb
add
inc
iret
and
mov
and
inc
fs
and
sbb
aad
fisttps
movsl
les
and
repz
mov
icebp
scas
lcall
sarb
push
jo
push
iret
fldl
cli
xchg
pop
test
mov
pop
mov
arpl
ds
add
push
jg
popf
or
jbe
cmp
mov
mov
je
xchg
stc
daa
lds
test
mov
imul
cli
test
ja
xchg
xor
inc
mov
xchg
xor
stc
incb
lock
das
pop
lods
shr
sub
jl
stos
adc
dec
pop
cmp
xor
nop
or
rolb
cmp
leave
mov
jle
daa
dec
sbb
sbb
xchg
sarb
mov
cmpsl
add
lret
mov
sbb
add
xchg
inc
aad
aaa
cltd
pop
andl
and
mov
inc
pop
xor
lcall
mov
xchg
push
adcb
jcxz
das
mov
push
sti
cmpsb
lcall
test
daa
jb
cmp
xchg
pop
lods
push
popf
adc
lods
imul
sbb
xor
cmp
push
inc
mov
sarb
repz
sahf
or
stos
addr16
test
inc
in
dec
add
jmp
call
loop
pop
fists
pop
mulb
out
jl
in
push
rclb
inc
xor
int
add
push
push
xchg
call
arpl
fisubs
mov
cmp
cmp
jge
and
pop
inc
repnz
jb
mov
mov
bound
outsb
imul
sbb
es
mov
mov
xchg
mov
hlt
mov
or
pop
mov
mov
mov
call
lock
lock
jg
insl
sub
mov
and
mov
mov
pop
add
daa
push
xchg
jmp
test
xlat
and
cmpb
dec
add
mov
fadds
jle
push
add
sahf
jl
in
outsb
or
xchg
pop
mov
divb
les
mov
cmp
add
iret
pop
cmpsl
pop
lds
imul
xor
cmpsl
enter
or
xor
mov
jns
mov
sbb
test
sbb
xchg
int3
jbe
pop
mov
and
mov
push
or
inc
outsl
sub
pop
arpl
add
push
and
repz
dec
sbb
loop
out
add
jnp
fidivrl
jmp
xorb
fs
stos
xor
cltd
inc
push
push
xor
push
push
bound
cli
je
cmp
aas
or
lret
lds
add
jbe
jle
add
pop
mov
dec
mov
mov
icebp
es
push
cmpsb
mov
push
loopne
into
push
movsb
loop
es
lock
je
jbe
sub
jle
add
popa
xor
shll
sbb
push
into
loope
mov
je
jecxz
jo
test
mov
pop
adc
jbe
and
push
pop
mov
cmp
loop
or
bound
push
sarb
rcrb
in
sbb
pop
adc
ljmp
rcrl
push
adc
insl
cmp
out
add
sub
je
jns
add
xchg
movsb
int
in
cmp
testl
movsl
test
loope
jb
xchg
push
adc
js
xchg
push
jnp
insb
pop
xor
out
sub
sub
in
and
xchg
xor
sbb
jmp
xor
ret
sbb
mov
adc
in
shlb
bound
and
xor
repnz
cli
push
rorb
adc
mov
or
inc
cwtl
es
adc
ret
adc
and
bnd
mov
aam
dec
movsb
jp
jne
push
outsl
dec
jne
pop
mov
mov
stos
fbstp
fs
cmp
inc
sub
mov
mov
jne
jno
fsts
subb
hlt
pop
test
lcall
test
pop
icebp
out
cwtl
inc
sbb
adc
stos
shrb
pushl
add
push
push
dec
xchg
filds
imull
push
adc
xlat
dec
shrl
mov
icebp
adc
sub
dec
iret
xchg
outsb
fistpl
jmp
int
or
or
in
add
push
fnsave
lods
inc
out
adc
adc
enter
test
xor
xor
sub
fcmovnu
sbb
into
pop
std
cld
inc
divb
gs
sbb
stc
ds
adc
jl
movsl
cwtl
and
pop
sub
sub
dec
mov
xorl
inc
mov
push
je
xor
int
mov
ja
imul
pusha
je
xor
inc
decl
hlt
push
fistl
fcoml
testb
pop
idivb
addr16
bound
insb
push
inc
out
pop
jne
sbb
mov
cmp
enter
dec
pop
jecxz
inc
aaa
repz
fcoms
inc
out
mov
jnp
cmp
test
out
jns
movsl
scas
lcall
sbb
jno
outsl
ret
outsl
outsb
add
xchg
mov
mov
icebp
aaa
sbb
jno
in
sub
aaa
dec
cltd
test
fldcw
rcr
mov
lret
xor
mov
cs
cmp
addb
pop
xchg
shrl
mov
xor
inc
outsb
dec
inc
dec
mov
orl
lods
jb
adc
pop
rcr
cmp
shl
cwtl
push
push
jbe
adc
push
pushf
shrd
popf
jle
xor
jecxz
cs
mov
lds
jle
push
out
lds
cmpsb
sarb
sbb
daa
and
loopne
pop
int
dec
jle
lds
jae
jns
fwait
arpl
es
inc
rcrl
fstps
mov
int3
xor
cmp
add
mov
in
mov
lret
hlt
leave
dec
dec
push
and
or
std
out
divl
rolb
adc
add
imul
lret
xchg
jns
jl
outsl
sbb
std
sub
jle
pop
cltd
sbb
lods
lahf
fsubrp
xchg
mov
or
jns
or
sub
lea
adc
sbb
fdivrl
testl
popl
and
das
dec
aaa
fstl
pop
adc
pop
lea
fmul
clc
repnz
or
js
call
mov
xorb
leave
into
adc
pop
mov
fsubrs
test
pushf
leave
pop
rcrb
lds
icebp
jae
adc
push
fdiv
push
test
add
je
push
mov
dec
xchg
lods
sub
ljmp
inc
pop
test
add
cltd
xchg
and
push
sbb
mov
subl
outsb
cmpsb
rcrb
xchg
hlt
lret
push
mov
jmp
xor
nop
in
or
cmp
cmp
sbb
ja
not
push
rorb
loopne
sbb
jg
mov
and
sbb
mov
add
shll
pop
inc
dec
xlat
scas
ljmp
pop
fsubs
adc
dec
mov
movsb
pushf
dec
cmp
adc
and
and
hlt
je
adc
les
shl
in
cld
pusha
inc
cmpb
mov
push
cwtl
int
test
outsb
and
jmp
shl
dec
mov
loope
divb
sub
test
cmc
mov
or
jb
mov
cld
popa
dec
int3
test
jg
pop
adc
les
or
pop
test
aaa
sbb
sbb
mov
inc
cwtl
pop
aaa
inc
jmp
in
jns
mov
mov
cmp
dec
shlb
das
mov
mov
jb
xor
out
jmp
popf
cmp
cmp
add
cmp
arpl
lret
sub
arpl
pop
xor
pusha
add
xor
stos
dec
stos
dec
or
repnz
mov
sub
adc
dec
cld
sub
adc
popf
jmp
ret
aad
add
xor
addr16
lods
pop
cmp
xchg
mov
addr16
in
add
nop
push
ficompl
stos
lcall
pushf
int3
dec
adc
adc
or
dec
fstl
jns
dec
pop
outsb
fldln2
ljmp
arpl
pop
hlt
sbb
xchg
push
cmp
insl
test
ret
in
or
jnp
les
and
push
xchg
inc
fsubrs
into
mov
sbb
add
fcmovnb
jb
js
add
aad
adc
das
xchg
leave
test
loop
push
add
ret
inc
xorl
mov
notl
mov
xor
hlt
sbb
iret
sbb
outsb
ror
int
cmp
aam
ffree
jg
xchg
mov
fnstsw
push
adc
or
jecxz
loop
sub
loopne
cmp
pop
lret
out
insb
sub
cmpsb
push
lods
xor
sbb
std
int
sub
dec
je
loope
or
cld
int
jnp
mov
test
xchg
out
rcrl
repnz
loope
jbe
push
mov
or
ljmp
inc
xlat
test
fwait
lret
es
rorl
shlb
pop
mov
and
in
aas
out
fs
lock
fcoms
cmp
das
int3
inc
mov
adc
xor
push
std
fcom
sub
and
jg
adc
mov
push
inc
fisttpl
jb
xchg
lock
lahf
push
mov
dec
jmp
pop
js
sahf
cld
dec
cmc
sub
aad
je
xchg
notl
call
loop
outsb
imul
add
dec
xor
aas
xor
movsl
mov
test
cmp
xor
jne
das
test
popa
mov
sar
jecxz
push
movsb
ficoml
fnsave
insb
jmp
aaa
lret
xchg
xchg
aam
leave
js
sub
jns
push
xchg
dec
add
xchg
mov
dec
ja
cmp
push
imul
pop
or
push
sub
xchg
jne
aas
push
sub
sub
rolb
xchg
jae
add
lods
mov
pusha
filds
sti
ja
sbb
int3
push
mov
fstpl
stos
rcrl
sahf
fs
lock
inc
out
fs
lcall
fwait
sbb
jle
fwait
mov
bound
adc
std
sbb
insl
bound
xchg
lods
inc
add
jmp
ja
popl
dec
mov
inc
cmc
add
adc
scas
sbb
push
es
and
sub
add
push
dec
in
xchg
lahf
std
dec
xchg
movb
mov
aaa
cld
jl
cltd
dec
mov
cmp
cmp
cwtl
dec
add
cmp
out
sub
ffree
cmp
sbb
mov
dec
jne
inc
xor
fstpt
xchg
sub
fmull
pop
adc
inc
and
xchg
pop
adc
push
repz
jb
shl
add
scas
lret
mov
inc
jl
inc
cmpsb
push
xor
cmp
fiadds
sbb
mov
pop
sahf
iret
ss
sub
inc
xlat
test
cwtl
push
adc
cltd
sub
jb
xor
add
or
jmp
sub
jbe
sar
popf
les
fdivp
sub
push
push
push
jge,pn
add
cwtl
fcoms
mov
nop
rorb
sbb
fnsave
xchg
pop
inc
sub
outsb
flds
fwait
adc
and
jmp
and
out
jb
cmp
pop
adc
stc
ret
in
xchg
dec
imul
inc
mov
mov
loopne
pop
imul
push
or
mov
adc
and
and
outsb
inc
movsl
and
lods
and
jne
sub
xchg
xchg
sbb
pop
or
lret
popa
flds
rcl
dec
cwtl
test
dec
call
push
cld
push
pop
and
adc
lret
sbb
adc
jle
sbb
push
push
cltd
aad
loop
xchg
inc
mov
xor
cltd
inc
sub
inc
inc
mov
mov
push
inc
sbb
sti
test
mov
cs
cmp
mov
push
inc
adc
sbb
fistpl
cwtl
cltd
addr16
push
xchg
xchg
test
push
adc
jp
stos
lea
out
add
daa
dec
jo
cmpb
add
lds
push
xchg
out
lods
xchg
mov
out
mov
adc
sub
push
fwait
pop
sbb
sub
in
rcrb
daa
cwtl
out
imul
sub
xor
push
vdivps
addr16
scas
into
test
xor
enter
and
or
sbb
int3
mov
sarb
push
iret
mov
inc
jbe
loopne
xchg
sub
sbb
cmp
lods
push
popa
adc
test
cmp
out
fdivs
xor
lea
or
lret
xor
lea
out
sbb
xchg
out
jle
sbb
jl
push
xor
xchg
outsl
addr16
les
mov
rorb
repnz
cmp
leave
mov
jge
outsl
xor
adc
lret
add
sbb
je
bnd
loope
rcrl
and
or
fnstcw
jle
xchg
xchg
adc
and
xchg
sub
imul
sti
call
daa
mov
imul
sahf
push
hlt
imull
cmp
jle
gs
add
lock
add
stos
sub
shrb
jmp
in
scas
push
mov
inc
xor
fidivrs
scas
stos
adc
pop
test
cwtl
mov
jbe
cmp
adc
arpl
js
imul
into
sub
xchg
add
cwtl
scas
inc
dec
jae
sub
shll
xor
popa
jb
fimull
lods
fstpl
mov
mov
xchg
pop
mov
mul
push
std
lods
pusha
adc
xlat
sbb
fisttps
add
inc
inc
add
inc
adc
jae
and
jp
divb
xorb
and
adc
push
jne
sti
outsb
mov
sahf
add
cmp
mov
insb
sub
popf
jmp
sbb
mov
pop
push
leave
jg
pop
mov
je
daa
jg
mov
jbe
insb
push
cmp
jbe
roll
sub
inc
sub
mov
cs
cwtl
sub
ret
fisttps
push
or
jno
jns
fsubl
push
test
pop
sbb
push
mov
mov
push
scas
testl
imul
push
jnp
mov
scas
add
sbb
arpl
sbb
dec
adc
xor
pop
dec
pusha
lea
cmp
jp
xor
xchg
sub
shrl
mov
testl
jnp
fmuls
shr
movsb
rcll
popf
pop
push
mov
ret
inc
and
cmp
xchg
insl
pop
xchg
scas
push
out
pop
notl
jae
jb
inc
icebp
loope
cwtl
push
jge
sub
sarl
sbb
add
inc
pop
es
and
loope
adc
push
mov
push
rorl
adc
lock
je
popa
dec
fsubl
or
cmp
mov
ss
stos
mov
jp
cmpsb
ljmp
gs
adc
and
xchg
lods
fiadds
ljmp
test
rolw
cld
sarl
sbb
xchg
lret
lcall
jge
cmp
leave
ljmp
mov
pop
nop
pushf
push
adc
adcb
push
or
leave
hlt
pop
sub
mov
push
sbb
dec
sahf
fcomps
mov
hlt
adc
in
or
gs
lret
or
cmp
pop
cwtl
testb
xor
dec
inc
jb
imulb
fcoms
mov
sbb
ss
cmpsl
shll
cmp
cmp
jg
lcall
loop
cmp
ret
aaa
pop
mov
icebp
ret
mov
orb
jp
pop
cmpb
outsb
dec
and
pop
fldl
cwtl
fsub
jns
xchg
push
mov
and
nop
aaa
pop
push
push
outsb
lea
sbb
movsl
push
pop
jb
pop
cmova
or
add
repz
push
mov
sahf
lret
mov
dec
ret
nop
inc
mov
push
jns
and
ss
es
cmc
sub
inc
inc
mov
lds
or
jo
rcrl
mov
or
or
cs
pop
mov
shrl
int3
mov
pop
shr
movaps
push
or
jle
lods
push
xchg
inc
jmp
aad
lea
cmpsl
or
pop
stos
jb
scas
mov
pop
mov
jecxz
adc
les
inc
pop
dec
ret
shl
push
push
js
or
jge
addr16
insb
in
xchg
lahf
pop
sub
push
add
aad
out
mov
dec
xor
aaa
xchg
scas
into
and
push
mov
cld
and
popa
and
lock
pop
enter
add
psraw
mov
aaa
pop
pop
adc
dec
mov
shrl
cmc
in
in
inc
imul
or
fdivrp
dec
ficoms
lcall
icebp
imul
leave
enter
jl,pn
sub
nop
loope
mov
push
mov
pop
ds
outsl
sbb
sub
cli
jp
dec
push
push
dec
dec
jle
ljmp
push
jecxz
push
push
sbb
mov
aaa
shlb
cmp
sbb
cmp
je
fcoml
adc
mov
and
fcmovnb
xchg
pop
xchg
shlb
or
shrl
andl
rclb
xlat
cmpsl
pop
dec
insl
jno
xchg
pop
js
mov
mov
dec
daa
push
mov
push
dec
call
dec
scas
loope
int3
pop
lret
pop
xchg
and
jo
leave
adc
test
fiadds
aam
add
int
aas
push
popa
mov
push
dec
inc
sub
xchg
sub
and
inc
aad
nop
addr16
pop
inc
orl
adc
push
clc
daa
sbb
or
mov
adc
jne
shlb
int3
jno
mov
mov
bound
jge
nop
mov
cmc
push
xor
fmuls
divl
mov
xor
negb
pop
nop
icebp
push
ljmp
xor
or
lods
fsubrs
int3
pop
rcr
loop
stos
xlat
jbe
cmp
mov
insl
push
sub
cmpb
lret
pop
or
fsqrt
bt
mov
or
sub
mov
in
clc
mov
adc
cmp
mov
rorb
stc
push
ret
fwait
in
aad
imul
fstpl
mov
inc
lret
sbb
adc
lret
fistl
pop
push
rcrb
in
mov
jo
adc
clc
addr16
push
loop
or
shlb
lods
sti
mov
dec
in
pushf
mov
mov
hlt
imul
adc
mov
or
mov
fstp
adc
mov
inc
js
shll
cmpsb
xor
out
std
pop
int
mov
xor
pop
inc
and
jb
ret
ds
xor
inc
fcmovb
faddl
jg
imul
rclb
mov
cmp
jg
popf
std
cltd
stc
xchg
add
sbb
ja
push
test
xor
push
pop
xchg
repnz
dec
addl
inc
insb
enter
xor
push
in
fisttpl
mov
testl
pop
xor
stos
aaa
sar
fsub
xchg
es
or
sbb
data16
stc
inc
add
mov
add
andb
or
adc
add
sub
or
cmpsb
push
dec
sub
mov
rorl
decb
mov
sbb
sub
cmpsb
rorl
dec
mov
icebp
push
test
jo
inc
pop
outsl
fmull
fwait
and
enter
cmpsl
andl
call
lea
aad
ja
mov
push
jo
jno
cmc
rcrl
add
jno
out
lea
outsl
mov
inc
ja
mov
bnd
mov
in
repnz
fnsave
cwtl
rorw
dec
test
shlb
add
test
sub
fcompl
mov
jecxz
sbb
ja
imull
fidivs
bsr
xor
mov
into
out
clc
jns
dec
mov
and
add
add
dec
sbb
sub
testl
jo
jl
in
dec
cwtl
in
mov
pushf
dec
and
push
xchg
and
or
push
mov
dec
leave
fdivrp
ljmp
pop
repz
or
aad
nop
adc
mov
cmp
mov
push
insb
outsb
cmc
divl
lcall
leave
jle
test
mov
testb
lock
mov
fsubrp
dec
mov
pop
stc
adc
fs
fnstcw
mov
imulb
cmp
xchg
lahf
fsubr
fcomps
pop
pop
xchg
std
sub
movsl
popa
sbb
cmp
sub
ja
lods
fistl
test
push
lret
loopne
inc
iret
push
pop
sub
or
xchg
jno
push
sbb
cld
gs
mov
mov
imull
dec
cmpsl
sub
outsb
fisubl
insb
dec
clc
pop
flds
xchg
into
out
icebp
je
push
nop
pop
push
lock
mov
pop
in
pushf
xchg
cmpsl
xchg
insl
and
add
push
sub
fcomps
cmp
mov
cli
push
push
enter
xor
test
jl
popa
shl
mov
xor
cmpsl
dec
cs
adcl
push
mov
aas
xchg
lock
adc
arpl
mov
sbb
add
add
pop
cmp
sbb
xchg
fisubrs
jns
and
pop
xchg
cmp
lcall
xacquire
cmpsl
jmp
and
mov
test
lods
mov
mov
lret
hlt
arpl
pop
lret
popf
rorl
dec
jg
inc
mov
loopne
push
xchg
daa
mov
shrb
sbb
addr16
call
mov
mov
adc
lock
jns
lea
adc
hlt
xor
mov
ss
cld
lret
and
in
xchg
mov
arpl
or
lahf
mov
mov
dec
and
xchg
in
push
jb
sub
bound
bound
xor
push
ss
lds
mull
push
pop
add
insb
or
outsb
mov
xchg
repnz
sbb
data16
bound
pop
hlt
mov
in
mov
xor
je
xor
dec
dec
xor
enter
add
ja
cmp
mov
cwtl
push
and
std
adc
add
adc
xchg
test
add
sub
add
jns
sbb
pop
ret
mov
xchg
inc
mov
and
sbb
mov
out
dec
cmp
gs
out
imul
es
cmp
in
fidivrs
lcall
push
xchg
push
lds
aas
jmp
out
xor
scas
andl
test
xor
add
fwait
adc
sub
or
ds
sarb
imul
fcoml
jge
shlb
cmpsl
je
cld
jns
shr
in
push
cwtl
orl
fiaddl
out
lret
jbe
ss
push
jno
xor
repz
lcall
xchg
adc
mov
xchg
arpl
test
fldenv
ficoms
imul
mov
sub
daa
add
xchg
adcl
adc
mov
xchg
pop
cli
ja
js
loope
jb
shlb
pop
jb
xchg
pop
dec
mov
das
pop
push
movsl
inc
dec
inc
ljmp
pop
jecxz
arpl
fcmovnb
out
std
or
in
icebp
push
in
xor
stos
mov
mov
jne
push
repnz
movsl
push
test
pushf
movsl
call
bound
pusha
mov
inc
fisubs
push
xor
jae
daa
in
pop
cmp
stos
mov
jae
push
mov
cmpsl
addb
dec
push
push
lret
push
fscale
std
adc
imul
jp
jmp
hlt
popa
mov
pop
stos
hlt
push
stc
mov
dec
mov
push
fldt
rorl
icebp
fcompl
inc
pop
xor
stos
xchg
cmp
dec
push
scas
jae
push
push
push
dec
dec
and
out
leave
movsl
shrl
xor
cmp
cmp
es
cli
jbe
fisubrs
or
inc
out
fsub
out
sub
cmp
jge
fiaddl
or
mov
out
or
jbe
adc
jne
push
mov
movsb
iret
shll
or
sub
or
aas
jmp
xor
mov
or
add
mov
jo
xchg
loope
cli
ret
xchg
inc
pop
movsb
push
lods
jbe
stos
in
test
jo
xchg
fwait
sbb
dec
bound
mov
jae
loop
std
add
fadds
int3
sbbb
outsl
das
sbb
pop
repnz
sbb
ljmp
jg
fimuls
and
inc
push
xor
mov
jb
cltd
fldl
shrb
incb
sbb
or
add
mov
xor
test
sub
adc
jbe
pop
dec
xchg
push
add
mov
lock
xchg
test
clc
pushf
xchg
jle
ficomps
cmpsb
xchg
clc
loope
push
jge
fcoms
inc
scas
rcl
lea
test
movsb
cltd
push
mov
sub
stos
outsb
adc
shlb
loopne
mov
dec
sbb
mov
push
lcall
into
dec
sti
add
mov
mull
mov
nop
push
in
or
adc
iret
rcl
or
cmp
xor
fiaddl
mull
jbe
mov
or
lahf
repz
outsl
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
mov
fstpl
fstpl
bound
pop
jns
call
or
out
adc
dec
aas
int
ss
cmp
outsb
lods
arpl
sbb
popf
nop
aas
sbb
dec
sti
fwait
pop
shl
sahf
xchg
icebp
fsts
push
aad
dec
in
mov
test
imul
arpl
inc
mov
sti
aas
and
ds
js
scas
mul
lcall
xchg
iret
add
cld
cmp
cmp
clc
inc
mov
cmc
add
cli
pop
in
popa
mov
in
or
dec
cmp
js
les
je
inc
pusha
push
sub
dec
and
movsl
pop
mov
jb
mov
in
jbe
enter
mov
mov
mov
pop
cmc
cmp
aas
cmp
int
dec
cld
mov
pop
or
scas
xor
ud0
enter
and
pushl
sbb
push
jno
test
jge
cmp
aad
fmul
add
test
cwtl
sbb
in
mov
and
dec
cmp
or
dec
movsl
test
and
nop
pop
inc
pop
mov
push
out
mov
insb
mov
addl
adc
sahf
fiaddl
mov
ror
int
cmpsl
pop
daa
inc
rcrl
and
lock
cmp
add
or
aam
mov
lret
jle
mov
out
and
inc
bnd
jge
in
cli
repz
pop
pop
inc
in
sbb
jb
or
dec
sub
and
mov
dec
popf
jg
test
nop
and
push
jl
xchg
adc
pusha
test
and
pop
scas
arpl
dec
int
in
mov
xchg
sub
mov
sub
aaa
shl
outsb
loope
enter
pop
pop
lods
repnz
mov
imul
mov
sub
or
ss
cmp
cmp
orb
movsb
clc
les
cmp
mov
lods
shll
pusha
loopne
scas
aad
cli
test
pop
or
out
and
cmpsb
movl
clc
jnp
scas
and
daa
fidivs
fsubl
mov
xlat
mov
aam
iret
fisubl
lds
pop
or
ss
fildll
inc
punpckhbw
and
dec
ficoms
imul
rorl
xor
jae
divl
xchg
pop
pop
aam
rsm
leave
and
inc
xchg
inc
and
jle
movsl
jg
dec
int
inc
cmpsl
outsl
lods
sbb
insb
fwait
cld
in
xchg
into
lret
or
push
pop
dec
ja
mov
lea
ud0
int3
fbld
xor
scas
add
fadd
or
mov
or
adc
sahf
add
dec
out
test
inc
pop
aas
std
sub
or
out
or
add
sub
and
icebp
ja
adc
xorb
xchg
push
cmp
cltd
dec
adc
rclb
pop
jmp
in
mov
sbb
nop
es
sub
cmp
dec
test
jne
dec
add
sub
push
fwait
mov
arpl
scas
sbb
mov
daa
jo
inc
xchg
pusha
mov
sahf
and
les
xchg
mov
cmp
push
sbb
loope
scas
sar
cs
or
movsb
rep
jle
inc
pop
mov
sbb
push
aaa
xor
xchg
and
xchg
popa
sbb
movsb
movl
mov
je
mov
mov
lock
outsb
int
jge,pt
fimuls
out
jl
mov
ret
xchg
pop
xchg
sub
mov
push
clc
ljmp
imul
sub
andl
push
lret
dec
pop
notb
jne
mov
push
cmpsb
inc
mov
jne
xchg
mov
insb
jo
cmp
pop
mov
mov
and
sub
push
xchg
mov
fmuls
mov
ror
mov
fbld
inc
add
stos
sub
icebp
cmp
push
rcrl
pop
xor
rclb
int
push
push
mov
xchg
cmp
fadd
out
out
xor
jnp
sbb
xor
push
outsb
addr16
mov
mov
jb
add
add
or
jb
rcll
xchg
xchg
push
lods
xor
andl
mov
loop
jnp
xlat
std
and
rol
pop
stos
cld
clc
jg
arpl
mov
outsb
mov
jb
mov
bound
popf
pusha
mov
pop
adc
ljmp
insb
aas
and
inc
jo
ror
jnp
jo
daa
xchg
pop
je
xor
sbb
inc
or
xchg
xlat
add
pop
lahf
out
cwtl
dec
fcoml
jle
cvtps2pi
mov
sub
add
ss
lds
andb
andnps
mov
pusha
fdivr
sbbl
dec
or
push
or
mov
ret
aad
mov
jl
lret
aad
aas
mov
dec
cwtl
in
jle
pop
or
sahf
arpl
in
fimull
pop
in
stos
inc
pop
enter
roll
mov
pop
incb
or
ds
dec
xor
sub
pop
or
fs
inc
add
in
dec
mov
inc
dec
cvttps2pi
mov
lds
into
lea
repnz
inc
das
xchg
or
or
inc
sarb
sti
into
stos
push
jge
in
aad
fmull
xor
imul
mov
stos
inc
loopne
fwait
pop
push
dec
shrl
fcoml
or
out
add
mov
out
xor
sub
cmp
sbb
pushf
repz
imul
in
mov
loopne
sub
rolb
jne
push
push
or
xor
sub
pop
ja
dec
das
mov
pop
add
test
mov
add
mov
xchg
mov
mov
sti
jle
fldenv
jmp
mov
into
insb
arpl
ja
dec
push
add
cmp
leave
and
dec
std
fcomip
out
fldl
sub
mov
jne
iret
insb
xor
shrb
outsl
mov
sub
rol
mov
cmpsb
sub
add
mov
mov
pusha
repz
negl
imul
je
jno
and
pop
js
pop
stos
stc
ret
jle
test
not
or
frstor
jbe
rolb
push
mov
int3
in
cmc
sub
cmp
imul
sbb
mov
fwait
mov
sarb
inc
xchg
sarl
push
pop
inc
mov
mov
fst
mov
mov
xor
jno
pop
shlb
fsubs
bnd
push
add
stc
pop
imul
mov
fisttps
in
fistl
cmc
add
dec
add
movsb
mov
push
test
shll
jo
push
inc
mov
push
out
jns
pop
or
jmp
in
sbb
mov
fildl
shll
jns
lds
xor
pop
cmp
ret
sti
fsubp
inc
add
pop
dec
nop
shrl
movsl
jbe
or
mov
les
sub
adc
mov
fwait
loopne
sub
aad
mov
lods
addr16
cs
sub
or
fwait
or
iret
xor
pop
je
es
insl
cmp
stc
push
js
jne
imul
adc
out
xor
rcrl
jb
inc
mov
and
cmp
or
or
lods
sub
sub
dec
pop
push
dec
pop
lret
shlb
int
xchg
test
mov
adc
aas
jg
lret
daa
cmp
inc
daa
xor
lret
adc
pop
add
ja
ljmp
mov
dec
stc
mov
leave
xchg
and
xlat
mov
aad
inc
jno
fdivrs
jns
xor
lret
pop
dec
pop
enter
mov
mov
cmc
pop
or
fdivrl
bound
jno
lds
mov
and
sahf
ret
addr16
mov
cwtl
jge
mov
adc
int3
sbb
jbe
repnz
and
xchg
sbb
cwtl
xchg
scas
imul
adc
out
cltd
das
imul
jae
mov
sarb
mov
push
mov
std
arpl
or
std
sbb
cmpsl
xchg
push
mov
pop
mov
cmp
in
sbb
and
test
sub
in
add
aam
dec
mov
mov
xchg
repz
in
fwait
pop
addr16
adc
dec
pop
je
orl
shll
fisttpl
xchg
lcall
aaa
add
sub
mov
add
cmp
mov
cmpsb
mov
es
aam
in
sar
in
adc
xor
xchg
mov
ljmp
outsl
call
jae
loopne
mov
add
add
dec
jmp
cmp
pop
icebp
int3
addr16
in
stos
ss
shlb
test
mov
sbb
sub
ds
jae
outsl
pop
rolb
in
lea
inc
inc
mov
dec
in
or
pop
sarl
and
mov
jl
dec
push
ficomps
iret
inc
lods
push
cli
ret
fists
inc
arpl
gs
ss
mov
adc
mov
insb
icebp
loop
aam
std
shrl
and
xor
sbb
cmpsl
and
jb
cmpsb
lret
cwtl
fwait
sbb
test
push
mov
xchg
iret
sub
cmp
pop
pop
pop
aas
subl
pop
pushf
jle
decb
mov
pop
arpl
lods
push
push
mov
push
cmpsl
inc
push
stc
pop
je
mov
dec
aam
popa
push
inc
iret
xlat
fwait
and
dec
push
add
out
lret
or
sub
std
repz
loopne
shll
loop
out
xchg
and
dec
vpmacswd
inc
xchg
fldl
pusha
mov
iret
jae
lret
leave
xchg
inc
pushf
pop
dec
mov
or
insb
xor
ror
mov
mov
or
lahf
pop
pop
js
or
mov
mov
icebp
imul
push
inc
dec
shlb
pop
push
pop
int3
xlat
sub
pop
daa
stc
sub
sbb
mov
out
or
icebp
imul
xor
sbb
dec
xchg
das
jle
sbb
es
xor
and
subb
sbb
mov
hlt
mov
sub
adc
dec
jne
lea
cwtl
test
or
xchg
sbb
je
subl
daa
in
arpl
in
sbbb
dec
mov
test
jb
icebp
repz
scas
sbb
in
daa
sub
xchg
push
cmp
mov
in
mov
adc
in
leave
jg
sbb
pop
jp
out
les
dec
dec
outsl
out
fcompp
out
jg
orl
icebp
sbb
popf
jge
rorl
push
sub
cmp
iret
or
push
lods
loope
test
jg
xchg
std
inc
mov
mov
out
cmp
mov
xor
sbb
xchg
adc
icebp
jmp
cld
fidivs
jbe
movb
adc
xor
adc
push
and
cmpsb
fstps
shll
in
push
push
das
and
xchg
cmp
pop
push
pushf
xchg
jns
popf
mov
test
jb
sti
jmp
andb
pop
cmp
aas
pop
es
pop
loop
mov
stos
repz
fistps
test
xchg
ficompl
lods
lods
sti
push
pushf
mov
push
jnp
inc
dec
adc
ja
and
jns
mov
pushf
lds
sub
std
or
fildl
xor
in
fsubrl
pop
mov
add
loopne
fcmovne
dec
sub
test
and
and
jbe
mov
int3
push
lahf
loopne
xor
adc
mov
sbb
jae
cmp
dec
lret
add
lods
xchg
mov
fstpt
sbb
daa
movsb
and
es
adc
cmp
dec
rcll
subb
aad
ficompl
xorb
cltd
fld1
push
or
xor
push
pushf
jae
imul
stos
cwtl
pop
lea
sub
jp
adc
mov
pop
dec
ret
scas
bound
out
jl
in
sub
mov
push
call
mov
roll
cmp
test
pop
dec
dec
or
dec
pop
cmp
add
and
xchg
fbstp
lock
testl
mov
mov
xchg
jbe
faddl
pushf
ja
xor
and
sub
ds
fstl
jg
iret
cmpsl
leave
adc
cs
cmp
clc
shrl
ret
test
mov
mov
xchg
xchg
ja
and
xor
pop
pop
in
mov
mov
std
and
sti
lods
inc
fisubrs
popa
shl
in
stos
xlat
push
push
adc
cmp
es
ficompl
int3
sub
dec
enter
cwtl
xchg
mov
clc
sarb
adc
loope
std
lahf
pop
xchg
mov
int
mov
rorb
inc
mov
mov
xor
lret
mov
sti
and
aaa
int
push
loopne
cmp
xlat
mov
jg
fstpl
inc
mov
scas
in
inc
dec
sbb
fldcw
add
adc
xchg
jg
fcompl
stos
dec
les
outsl
outsb
cmp
sub
cmp
in
adc
cmp
xlat
adc
xor
pusha
add
inc
inc
pop
dec
pop
jb
mov
fldcw
in
mov
xchg
mov
cwtl
mov
or
jo
fcmovbe
es
rcl
sub
mov
lcall
sub
cld
sti
add
or
cmp
push
enter
inc
fisubrs
cmp
adc
mov
fcoml
inc
xor
pop
dec
or
mov
add
inc
pop
xchg
add
dec
sbb
subl
jno
mov
cmp
mul
call
xor
push
pop
dec
mov
outsb
and
inc
mov
mov
jg
test
pop
aas
cmp
inc
notl
imul
add
dec
in
cld
idiv
aad
call
pop
jno
test
in
into
or
cli
dec
and
aaa
mov
cmp
jle
dec
mov
test
xchg
jne,pt
movsb
insb
or
outsb
inc
mov
inc
sbbl
idiv
sbb
sub
sti
cmp
pop
cmpl
and
cmp
fdivl
ljmp
icebp
adc
cmpsb
lods
sub
imull
movsl
fs
add
add
andl
dec
adc
dec
pop
repz
hlt
ja
mov
fadds
filds
loop
jp
or
arpl
lcall
dec
push
mov
jb
loopne
push
xchg
add
and
xor
outsl
push
dec
add
mov
adc
scas
out
sbb
nop
notb
popf
mov
in
sub
mov
cmp
pusha
add
mov
outsb
ret
pop
dec
sarb
into
mov
add
and
in
pushl
out
jne
divl
or
xor
scas
xchg
daa
divl
in
cmp
pop
mov
lea
xchg
nop
cmpsl
sbb
xchg
mov
and
add
pusha
das
xchg
cs
cmc
fwait
je
mov
cwtl
add
mov
test
fisttpl
andps
movsb
mov
fsubrl
sbb
data16
sbb
test
mov
les
cmp
push
cmc
cmp
pop
mov
adc
mov
jle
ja
int
cmp
jo
dec
pop
cltd
dec
adc
insl
mov
xchg
rcr
scas
daa
adc
pop
test
mov
xchg
aad
jecxz
call
xchg
dec
jmp
enter
xor
pop
enter
pusha
mov
inc
jp
mov
push
addb
mov
fadds
add
sbb
movsl
fs
scas
or
mov
sub
fmulp
hlt
dec
repz
mov
jne
mov
rcll
mov
lret
cmp
sbb
push
inc
cmp
mov
inc
jb
sub
pop
jmp
sahf
cmp
dec
dec
adc
sbb
add
cltd
xor
cmp
inc
adc
and
repz
ror
fdiv
pop
sub
shlb
shrl
sar
pushf
idivb
pop
pop
jl
js
scas
insl
aaa
daa
jecxz
xor
mov
out
cmpsl
pop
notb
add
or
add
sub
push
lock
cmpsl
xchg
adc
jo
addr16
les
and
test
imul
out
mov
in
fwait
ret
clc
cmp
and
ret
mov
and
adc
fdivs
jle
xchg
adc
jecxz
pop
into
mov
inc
sbb
xor
je
jae
popf
or
pusha
leave
gs
enter
jl
loop
jno
lds
enter
jae
iret
ljmp
stos
cmp
jns
sbb
daa
jl
ja
inc
loopne
out
cli
xchg
xor
xor
and
inc
jge
and
addr16
xchg
aaa
pop
je
lods
push
mov
jns
xchg
and
in
aad
stos
sub
ss
fwait
mov
sbb
std
mov
dec
xor
enter
sbb
pop
mov
pop
decl
adc
pushf
jl
cltd
adc
loope
mov
add
push
dec
enter
cmp
mov
lods
cmp
jle
and
pop
sbb
das
inc
andl
add
and
movsl
xchg
mov
push
das
rclb
stos
clc
aas
dec
push
xor
mov
out
sar
outsl
insb
test
and
and
in
mov
cli
js
flds
pop
pop
test
pop
fcoms
dec
enter
push
dec
repz
sbb
test
jbe
je,pn
jge
and
stc
stos
daa
ret
cli
pop
xchg
call
sahf
push
inc
in
inc
les
mov
dec
sub
cmc
cltd
sbbb
mov
adc
mov
in
mov
mov
outsb
and
mov
pop
out
test
fimuls
mov
incb
fwait
lods
cltd
imul
fsubrs
arpl
leave
dec
stos
mov
loope
frstor
cmpsl
xlat
add
xor
fimuls
and
addr16
mov
ljmp
push
fsubrs
mov
xchg
push
or
loop
xor
or
mov
sbb
adc
cld
int
xchg
adc
pop
shll
cmp
xchg
out
adc
scas
lret
movsb
repnz
inc
jbe
push
int
fidivs
sbb
mov
xchg
icebp
out
pop
scas
and
jecxz
pop
into
jle
test
xor
jne
stos
les
and
jo
mov
jo
pop
enter
mov
lds
lcall
mov
pushf
inc
sbb
pusha
and
mov
xor
cltd
fnstcw
pusha
mov
in
aam
mov
pusha
call
mov
sbb
mov
fmull
push
hlt
pushf
int
aas
cmp
inc
jl
inc
icebp
inc
ja
cmp
inc
int
enter
pushf
aad
push
inc
pop
mov
lock
jg
test
lahf
xor
in
dec
test
aad
add
add
add
lods
xor
icebp
or
mov
fnstenv
add
scas
pop
lret
mov
mov
mov
daa
mov
fstps
mov
fidivrs
adc
sbb
add
clc
add
in
mov
cli
and
call
popa
shll
xchg
imul
push
lea
mov
out
inc
push
roll
stos
inc
ljmp
enter
push
inc
add
popa
push
mov
pop
ja
test
or
out
in
fimull
jb
lods
ljmp
sub
or
add
call
jns
push
stos
imul
mov
pop
daa
int3
mov
adc
out
mov
ja
arpl
flds
test
add
repz
lds
addr16
ljmp
pop
mov
ret
fs
xchg
sub
rorl
xchg
pop
je
sbb
stos
mov
neg
dec
in
cmp
mov
dec
sbb
dec
ret
test
add
adc
pop
sbb
popa
mov
or
mov
jmp
test
mov
fiaddl
mov
and
push
and
push
sub
mov
or
in
mov
xor
data16
pop
push
bound
adc
lock
cmp
push
ret
fwait
mov
jo
aas
pop
pop
movsl
and
xor
fistpll
aam
fdivs
inc
mov
xor
push
sbb
enter
cmp
mov
imul
mov
hlt
lock
and
test
fistl
and
test
dec
pop
int3
jmp
bound
cmpsb
xor
test
mov
dec
fs
pop
clc
and
jae
adc
xchg
pop
jp
rolb
xchg
pusha
inc
mov
xchg
pop
aam
mov
add
in
xchg
mov
jbe
js
ss
push
and
pop
and
jge
push
fistpl
insl
rolb
es
jno
sbbl
add
outsl
mov
cmpb
aaa
aad
mov
xor
mov
mov
lret
jl
xorl
xor
loope
sahf
pop
sbbl
fsubrl
mov
sub
imull
loopne
adc
sti
sub
xchg
and
push
jp
test
push
mov
mov
mov
mov
cs
lea
sub
fldenv
jno
je
das
pop
adc
mov
push
or
cmc
or
lods
adc
adc
hlt
mov
lret
jp
sahf
hlt
jns
sub
lock
cmp
movsl
fsubl
mov
testl
insb
xor
fnsave
or
and
push
pop
das
hlt
or
mov
xorb
dec
stos
fcoms
push
or
mov
test
and
xchg
mov
test
test
fisubrs
sbb
push
fisubs
out
mov
sbb
loop
push
test
sti
pop
pop
xchg
inc
mov
pop
jo
push
fcompl
mov
pop
popa
jp
mov
jle
int3
orl
mov
mov
ljmp
xchg
jnp
loope
nop
cmp
mov
nop
bnd
jmp
dec
adcb
aam
cmc
jne
hlt
daa
cltd
sub
xor
mov
cmp
mov
pop
sbb
cmp
sahf
aam
leave
mov
popf
or
add
lahf
adc
jmp
adc
xor
xchg
bound
test
mov
adc
das
sbb
stos
in
out
mov
pop
outsl
adcl
adc
lcall
std
orl
xchg
add
jnp
popa
mov
cmpsb
movsl
loop
cwtl
mov
push
pop
adc
sar
in
fxch
jg
jbe
lds
faddl
mov
pop
push
jbe
scas
pop
mov
pop
lds
add
inc
les
xchg
std
adc
push
loop
push
jne
mov
std
subl
mov
jo
int
sti
push
out
repz
std
aaa
mov
imul
iret
inc
mov
sbb
add
sub
sbb
sub
sahf
int3
cmc
shrl
fldt
movsb
mov
xchg
jbe
pop
scas
addr16
fsincos
outsl
lcall
rcr
imul
fwait
repnz
sbb
mov
xchg
adc
adc
lods
test
pop
cltd
jecxz
clc
mov
out
ljmp
dec
push
lds
inc
enter
pusha
mov
pushf
lret
push
cmp
inc
mov
incb
mov
aaa
lods
jnp
mov
pop
adc
mov
mov
sub
xor
sbb
cmpl
filds
pop
xor
into
push
jg
mov
and
xor
and
outsb
jns
pop
lods
lret
daa
mov
pop
mov
jne
mov
push
outsb
enter
add
stos
xchg
orb
pop
mov
jmp
fsubrl
jbe
pop
pop
rcll
int
cmpsl
out
pop
in
fnstcw
out
lea
dec
test
lds
popa
inc
mov
test
mov
add
fmull
sub
int
sbb
jg
data16
mov
add
bound
pop
mov
mov
dec
shrb
popa
sahf
adc
fsub
je
and
loop
mov
cmpsb
cmp
pop
and
adc
pop
jno
xor
in
mov
call
lahf
inc
jl
mov
mov
in
testl
dec
repnz
mov
incl
xchg
xchg
roll
mov
pop
add
daa
lods
inc
mov
adc
dec
mov
cltd
dec
push
inc
stos
nop
popa
mov
mov
push
aam
push
pop
stc
stc
pop
sbb
ljmp
mov
ret
sbb
dec
in
enter
xchg
fiaddl
fwait
jb
cmpsl
push
adc
fidivrl
fidivl
xchg
test
js
xchg
jnp
ss
add
loop
inc
pop
stos
ret
js
sti
aam
ret
jae
sub
pop
lods
pusha
decl
mov
arpl
out
das
in
sbb
mov
lcall
int
jbe
mov
xchg
insb
cs
cld
scas
mov
fdiv
xchg
call
enter
or
adcb
test
adc
xchg
into
ljmp
lahf
fs
pushf
jl
lret
sub
cmpsb
push
rorb
jmp
pop
sbb
fildl
insb
sub
push
fistpl
imul
xchg
cmp
dec
ficoml
ja
xchg
push
test
arpl
jmp
sbb
sbb
cmc
lret
pop
je
mov
xchg
lret
popf
cmp
stos
mov
sbb
in
xor
pop
cmpsb
pop
movzwl
mov
jp
fdivl
inc
mov
pop
xchg
ret
xlat
std
jo
fnstenv
push
fs
add
cmp
es
int
mov
jmp
mov
cltd
sbb
orb
into
dec
inc
lret
mov
sbb
mov
iret
int
lcall
shrl
pop
push
jmp
cmpsb
push
or
icebp
out
mov
test
pop
in
adc
mov
call
fxtract
push
jl
push
shlb
lods
sbb
jg
pop
loop
xchg
xor
inc
sbb
loop
popf
xorb
fsubrl
jnp
mov
mov
cld
jne
scas
rolb
dec
push
push
fwait
rcrl
clc
repz
divb
mov
or
out
outsb
arpl
dec
stos
popl
or
pop
lods
jg
stc
nop
insl
push
in
je
xchg
mov
and
mov
mov
jp
mov
out
stos
cld
pop
fiaddl
mov
xorl
pop
sub
in
ja
cs
in
push
pusha
stos
mov
xchg
outsl
shr
loop
mov
mov
mov
in
fildl
pusha
in
cmc
jg
or
add
sbb
stc
std
mov
fadds
jle
adc
cld
or
rcr
push
and
setle
pop
fisttpll
sub
xor
sbb
ds
xchg
iret
fwait
mov
bound
lret
pop
jo
mov
arpl
fnsave
sub
dec
mov
je
loop
adc
pop
jmp
inc
cwtl
imul
inc
ljmp
pop
jne
or
lods
mov
mov
xor
aam
add
cmp
or
das
scas
dec
es
pop
shll
inc
mov
pop
into
add
sbb
cmc
popf
xor
and
xor
push
movsl
movsl
aam
lcall
add
adcb
inc
push
sbb
fisttpll
in
sbb
push
push
in
fstps
xchg
jbe
cld
loope
das
mov
adc
mov
and
inc
in
rorb
or
cmp
paddsw
shlb
and
jnp
ror
sbbl
in
jmp
rcrb
shl
push
scas
mov
fiadds
clc
cmp
sbb
js
mov
mov
loopne
mov
push
ret
mov
inc
sub
addr16
loop
push
jge
les
out
mov
xchg
insb
jl
lods
sub
imul
jae
jge
stos
and
push
pop
jbe
adc
push
cmp
das
and
fistl
and
fwait
sub
inc
inc
push
nop
sub
andl
pop
jo
dec
movsl
in
mov
in
mov
std
imull
cmp
sti
jmp
js
push
or
fidivl
or
mov
outsb
fs
ljmp
sub
call
aas
dec
aam
insl
jecxz
cmpsl
xor
cwtl
pop
insl
cmp
cmp
mov
inc
and
or
and
xchg
jl
sbb
or
adcb
xor
sbb
pop
ret
add
cli
fs
jle
imul
dec
mov
mov
xor
pop
sub
jecxz
jg
xchg
dec
das
and
jmp
and
gs
dec
xchg
xchg
mov
and
scas
push
xchg
ja
jl
or
jle
cmp
mov
iret
add
jmp
fcmovnb
jne
sub
out
mov
rorb
js
jno
xor
aam
aas
nop
sbb
fs
mov
movsb
sbb
inc
lods
rcll
cld
loope
movsl
mov
inc
je
mov
xor
popl
scas
daa
inc
mov
inc
pusha
cmp
sbb
xchg
mov
movsl
fsubs
cmc
mov
mov
ljmp
test
test
cmpsl
xchg
cwtl
mov
push
mov
shrb
sbbl
mov
pop
das
leave
rorb
mov
ret
dec
insb
jle
mov
pop
iret
sub
aad
pop
jno
xchg
jle
lcall
movl
cli
adc
roll
es
setne
lock
imul
push
les
push
fists
js
inc
out
mov
call
fldcw
mov
loopne
push
inc
test
nop
push
xchg
cwtl
dec
xchg
push
sbb
cmpsb
faddl
mov
lcall
mov
mov
insb
out
and
cltd
int
aas
rorl
sbb
scas
rcr
mov
xor
cltd
shll
or
mov
mov
mov
stc
cs
add
push
adc
sub
xchg
sbb
iret
jmp
mov
dec
pop
inc
pop
cmp
push
pop
mov
stc
mov
mov
adc
test
aad
xor
xchg
stos
outsl
mov
aad
je
mov
and
cs
and
xchg
xchg
mov
data16
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
push
inc
imul
pop
bound
lock
stos
jecxz
and
dec
pop
gs
frstor
les
mov
inc
popf
sbb
addr16
inc
dec
cmp
push
inc
dec
adc
scas
sahf
mov
ds
popa
out
mov
jle
sbb
lcall
push
aam
push
daa
out
iret
addr16
stos
push
cmp
out
das
vmovq
js
cli
sbb
sahf
add
mov
outsl
bound
sub
inc
dec
adc
xchg
adc
sbb
add
into
jmp
dec
call
jmp
xchg
insl
mov
in
lcall
pop
lods
push
rolb
js
enter
lds
movsb
jg
orl
pop
mov
inc
xor
sub
jp
test
adc
add
jae
jne
out
dec
ret
gs
jp
cmpsl
jl
cmp
push
cmpsb
loope
cmp
jb
add
adc
jp
mov
add
into
xchg
inc
in
xor
data16
les
mov
gs
jle
test
sbb
gs
add
lods
jne
ss
push
std
repnz
out
dec
mov
out
popf
or
pop
push
pop
adc
lods
cmpsb
add
pop
jne
fwait
hlt
cmp
mov
dec
in
cmp
inc
mov
adc
out
bound
ret
outsl
jge
cld
mov
or
mov
das
dec
jge
adc
sbb
pop
xor
cmp
jne
mov
pop
dec
mov
stos
xorb
nop
push
inc
pushf
arpl
daa
dec
sub
jecxz
outsl
decl
andl
ja
sarb
adc
or
arpl
adc
loop
divb
fwait
jae
mov
lea
push
jno
aam
xor
orb
push
rolb
mov
in
ret
movsb
push
mov
xor
incb
push
cmp
cmc
lods
push
mov
adc
mov
inc
loop
and
out
jmp
stos
cmp
in
xchg
and
pop
inc
test
movsl
mov
xchg
mov
jns
sti
lds
stc
inc
imul
pop
add
adc
aas
pop
sbb
les
inc
movsb
sub
and
mov
or
test
mov
add
clc
xor
clc
cmp
xor
imul
cld
inc
in
movsb
outsl
adc
push
pusha
loope
jmp
add
test
mulb
inc
punpcklwd
mov
adc
mov
mov
cmovns
scas
mov
loopne
push
and
je
cmp
cmp
insl
mov
sbb
pop
jmp
mov
fwait
inc
incl
jp
aas
cmova
cld
and
and
jno
lods
mov
fs
mov
loope
outsb
sahf
arpl
mov
std
fisttps
mov
lods
int
sti
jnp
popa
sahf
dec
addr16
dec
dec
insl
test
push
sbb
mov
shlb
adc
in
jo
je
jmp
in
iret
dec
neg
jp
add
out
aam
push
into
lods
mul
jg
xchg
jge
push
iret
stos
mov
push
rcrl
mov
int3
jg
xchg
mov
in
fcoml
stos
les
jge
fidivl
test
or
pop
sub
movsl
sbb
mov
in
mov
and
cld
leave
es
mov
pop
filds
mov
add
pop
imul
cltd
pushf
and
les
pop
cs
int3
sub
xchg
adc
sti
and
dec
loope
xchg
mov
sahf
mov
mov
dec
popf
push
mov
enter
mov
test
and
jge
add
xor
pop
stos
adc
testb
jmp
adc
sub
mov
ret
in
sbb
ret
pop
or
stos
outsb
xor
enter
pop
fdivrl
call
cmp
jg
shll
xor
enter
xor
xchg
mov
jp
dec
clc
mov
rolb
and
stos
and
mov
inc
ficoml
xor
in
icebp
sti
test
push
dec
cmpb
dec
aam
push
jnp
stc
cmp
gs
stos
and
lods
xor
out
insb
imul
jecxz
sti
xchg
andl
cmp
insl
pop
in
inc
push
imulb
enter
data16
ds
ss
cs
pop
popf
mov
inc
jmp
cmpsl
repz
xor
or
mov
out
subb
fsubrl
pop
mov
add
aaa
fnstcw
dec
pop
test
shlb
std
sbb
inc
roll
cmp
inc
xor
dec
mov
push
sti
add
sti
dec
lods
cmpsl
pop
decb
rorl
negl
pop
pop
outsl
sbb
mov
or
loop
pop
sub
sahf
aad
adc
push
xchg
test
cltd
hlt
or
mov
push
add
inc
cwtl
adc
xchg
sbb
loopne
jb
dec
dec
jmp
mov
scas
es
sbb
add
jecxz
and
outsl
call
outsb
push
add
iretw
aam
mov
sub
rcll
xor
xchg
lret
sbb
adc
xor
stos
and
pusha
sar
int3
out
pop
cli
jle
inc
call
dec
sbb
pop
pop
cmp
test
test
cwtl
insb
lock
in
inc
pop
stos
pop
push
out
rorb
popf
inc
je
enter
std
imul
das
xchg
ja
loopne
mov
mov
adc
cmpsl
lret
cmp
andl
test
jne
in
out
push
popa
mov
fwait
lret
mov
fisttpll
push
push
pushf
lret
test
xchg
fldcw
test
cmp
lahf
push
xor
es
andl
data16
cmp
lock
jno
jg
roll
adc
inc
sub
pusha
addl
stos
dec
mov
fisubs
dec
jmp
scas
mov
popf
cs
push
dec
sub
push
xor
inc
inc
adc
mov
dec
roll
lock
xor
in
outsl
mov
scas
or
mov
pmulhuw
or
xor
cmpsb
sbb
push
test
or
mov
fidivrs
mov
xor
sub
in
test
inc
mov
stc
or
sub
add
xchg
xchg
popf
jmp
imul
insb
and
inc
pop
fwait
xchg
jno
js
mov
adc
inc
push
cmp
jg
xchg
bts
push
push
xchg
pop
mov
ds
xor
jnp
pop
jno
loopne
mov
mov
jae
iret
in
adc
sub
push
inc
xchg
mov
imul
xlat
adc
mov
aas
test
xor
fsts
or
movsb
subb
pop
jae
popf
xor
cli
pop
jecxz
dec
and
in
add
aam
ja
mov
addr16
jp
cmp
mov
outsl
mov
lods
pop
sub
gs
out
int
mov
cs
mov
popa
mov
inc
pop
mov
mov
inc
repz
and
pop
int
loope
mov
addr16
scas
loope
inc
in
sub
mov
repz
push
and
gs
jo
test
in
pop
jno
xchg
test
sub
or
insl
mov
jmp
rorb
or
jae
fs
or
cmpb
jae
pop
push
cmpsb
std
mov
push
jecxz
push
dec
fdivl
cltd
jb
mov
stos
outsb
mov
xchg
ljmp
inc
push
sub
scas
cmpsb
push
aaa
dec
notl
add
rcl
into
cwtl
dec
mov
inc
rcll
jns
push
xor
addr16
inc
fs
es
xor
xor
insl
sbb
cmp
and
jb
aad
sahf
lahf
pop
fdivs
mov
in
mov
les
incb
decl
sbb
adc
adc
aad
and
add
and
mov
pop
pop
iret
pop
dec
iret
xor
clc
xchg
xor
jp
movb
je
popf
xor
shr
adc
movsb
xchg
movsb
xchg
sbb
pop
popf
adc
ja
shrb
mov
xchg
ljmp
sbb
cmp
pop
jl
pop
scas
pop
aam
adcb
test
fwait
pop
outsb
xchg
add
stos
ljmp
mov
dec
in
daa
scas
xlat
inc
jecxz
pop
sub
or
and
and
sbb
popa
call
jg
push
stc
inc
push
lahf
pop
pop
xlat
stos
punpckhbw
jo
out
and
mov
stos
dec
jp
mov
sbb
scas
adc
push
sbb
mov
loop
ljmp
cltd
lcall
push
xchg
sti
sti
or
push
dec
lea
mov
mov
mov
loopne
jns
aaa
xchg
js
in
jge
pop
mov
pop
je
mov
mov
add
faddp
xor
or
int
lods
cmpsb
bound
mov
frstor
add
rorb
fisttpl
rcrl
ss
cmc
dec
and
fstp
adc
pop
cld
add
je
jo
xchg
cmp
in
aam
jae
outsl
add
orl
movsl
dec
cmp
sub
lret
aaa
cltd
lcall
lods
pop
cmp
mov
xor
popf
int3
jne
notl
pop
inc
cmpl
sahf
cmp
and
push
xchg
inc
in
and
adc
fwait
adc
and
daa
cld
outsl
xchg
push
cmp
pop
fstpl
insb
push
mov
or
xchg
jbe
ja
pop
xchg
pop
jo
fisubrs
inc
sub
xchg
cmc
shrb
in
les
inc
jecxz
sub
popf
xchg
mov
pushf
mov
aad
mov
movsl
rorl
add
sahf
lea
inc
jne
test
dec
and
fsubrs
fdivrl
enter
push
test
mov
fcmovb
mov
jle
sahf
data16
inc
push
push
rclb
mov
in
mov
jg
ficoms
insb
cltd
pop
and
pop
inc
inc
xchg
rol
jo
push
loopne
xchg
ljmp
xor
in
add
mov
push
cmp
xor
scas
push
fisubs
sbb
out
call
lods
add
push
iret
xchg
in
mov
pushf
xor
sysexit
xchg
xor
in
jge
adc
mov
add
pushf
ret
test
ret
pop
pop
cltd
loopne
loop
adcl
in
mov
sbb
jp
cld
in
ret
or
iret
cmp
mul
and
mov
inc
push
adc
pop
iret
and
inc
cmp
rcl
push
dec
jg
arpl
push
adc
std
xchg
ljmp
out
fisubrs
adc
xor
or
add
out
subb
test
inc
or
jecxz
cmp
and
lods
lahf
lahf
leave
mov
in
xor
mov
shrl
scas
iret
aam
mov
push
fisttpl
leave
mov
lea
pop
jge
fisttpll
sbb
xchg
rcrl
inc
call
test
cmp
jae
mov
std
fstpt
mov
and
lock
daa
pop
nop
rol
mov
adc
sahf
cs
pop
sbb
cmp
aad
adc
daa
loop
es
jecxz
xchg
jmp
notl
pop
lcall
cmpsb
mov
fcompl
scas
jnp
push
push
xor
xor
and
cmpsl
jbe
xchg
push
xchg
pushf
test
scas
mov
sbb
fimuls
clc
pop
push
jae
jp
inc
lahf
mov
std
push
rclb
inc
rcrb
dec
pop
movsl
loop
mov
and
add
inc
jg
leave
cmp
decl
lret
add
and
push
dec
test
repnz
cmp
mov
mov
fldenv
loopne
dec
mov
push
ljmp
mov
outsb
jecxz
push
xor
push
insl
popa
aas
xchg
or
mov
and
or
push
mov
or
push
ja
and
adc
pop
fistpll
xor
cmpsl
into
jle
mov
psrlq
sbb
leave
or
arpl
notl
mov
popa
xor
mov
movsb
xchg
xchg
adcl
negl
data16
scas
pop
cltd
popf
mov
inc
lcall
cmpl
mov
cmpsb
xchg
inc
sti
lret
leave
xor
das
mov
xor
in
xor
data16
push
jne
test
or
push
pop
test
xchg
inc
int
icebp
loop
pop
hlt
dec
je
mov
pop
pop
mov
or
xchg
loopne
jg
sbb
mov
pop
jmp
mov
shl
dec
sub
xor
arpl
pop
pop
push
test
popa
add
xlat
sbb
jg
loop
pop
add
push
xor
dec
fwait
ja
mov
hlt
lock
sbb
push
arpl
xchg
outsl
xor
add
scas
test
js
int
mov
mov
cmp
dec
cmc
jo
mov
mov
and
and
lods
stos
jmp
shll
cmp
xchg
inc
push
sbb
clc
in
sbb
pop
mov
test
pop
pop
xchg
das
and
int
cmp
mov
fisubrs
ds
pop
fstl
call
and
dec
adc
shrl
or
aam
lea
clc
xlat
xchg
in
cs
mov
jmp
sarb
mov
test
pusha
subb
pop
and
popa
jns
xchg
mov
test
mov
lahf
lds
loope
and
ffree
inc
cld
sub
inc
sub
cs
cmpsb
lock
lds
jmp
sbb
cmp
mov
lahf
push
cmp
mov
int
btc
and
sbb
jl
and
test
lahf
inc
inc
sarb
mov
pop
ljmp
pop
aaa
cmp
cmp
push
adc
nop
push
inc
dec
je
and
lahf
std
pop
gs
test
test
jnp
leave
std
addr16
neg
and
scas
jno
fsubl
xorb
and
mov
into
xchg
inc
dec
lea
and
iret
cmp
lea
xchg
and
mov
and
xor
pop
push
cwtl
insb
mov
addb
xchg
shr
aad
dec
rorb
aam
fidivl
jg
xor
sub
cmc
in
movsb
outsb
or
jge
outsb
ja
push
mov
cmp
cs
fs
test
jns
mov
and
adc
pop
out
fs
and
mov
jb
imul
sarl
fsts
imul
mov
cmp
mov
je
cmpsb
in
lds
lahf
or
fildll
xchg
adc
ljmp
and
dec
jle
cmp
in
adc
pop
xchg
mov
mov
pushf
cmp
mov
cmp
scas
inc
ret
adc
jle
jl
mov
add
adc
mov
sbbl
arpl
cmp
cmpsl
cmpsl
pop
pop
sbb
xor
push
push
mov
inc
or
lea
xlat
lret
or
sub
jge,pn
jp
mov
mov
testb
sub
sbb
cltd
outsl
out
jae
repnz
or
cmp
inc
mov
add
int3
jne
repz
int3
outsl
adc
mov
sub
or
adc
and
mov
mov
sbb
shrl
ret
into
sub
roll
js
icebp
mov
xchg
cmpb
jmp
add
jecxz
aad
cwtl
inc
sbb
mov
dec
sub
xor
xchg
push
loopne,pn
arpl
pop
ret
sahf
stos
lock
pop
sbb
data16
sti
mov
mov
mov
sbb
scas
mov
jnp
add
addr16
iret
cmp
shll
mov
andb
daa
into
jge
fidivrl
jge
scas
sbb
add
mov
push
xchg
cli
stos
scas
aam
jne
sahf
cmpsb
mov
jp
stos
push
add
stos
dec
pop
repnz
sub
adc
rol
andb
cmp
aam
popf
pop
fwait
mov
test
imul
or
loop
jg
sub
lcall
popf
sbb
sub
scas
xlat
movsb
mov
jbe
lods
negb
popf
sahf
xchg
hlt
ret
add
rcr
sub
jp
out
xor
imul
dec
sub
adc
sub
mov
imul
scas
and
sbb
mov
inc
movsl
inc
adc
push
add
lahf
sbb
adc
ljmp
cmp
pusha
lea
cmp
xor
gs
bound
inc
xchg
enter
push
rcrb
or
pop
les
sbb
push
and
mov
bound
call
rorl
shll
cld
xor
pop
cmp
cs
xor
dec
into
add
sub
xchg
outsb
popf
nop
stos
hlt
xchg
push
in
pop
inc
pushf
sub
or
adc
out
jge
xor
fs
jae
scas
into
inc
mov
hlt
push
push
testb
lret
cmp
or
jg
add
pop
or
sub
sbb
add
pop
cmp
xchg
scas
inc
jns
test
xchg
cld
xchg
movsb
jle
sbb
dec
les
lea
sbb
lods
repnz
std
push
inc
shrl
inc
push
push
lahf
and
cmp
add
aas
rcrb
pop
aaa
sti
and
ljmp
xchg
adcl
inc
aas
lahf
or
lods
mov
push
sbb
sub
cmpsl
ja
jnp
sbb
mov
push
push
sbb
cmpsl
rcll
mov
std
xchg
in
xor
add
stc
ret
outsl
adc
add
fldenv
test
jne
dec
jb
sub
mov
mov
add
adc
ds
adc
lret
dec
push
xor
and
cwtl
jno
push
je
push
fnsave
daa
scas
mov
lahf
jne
fsubr
adc
jno
sub
aam
push
cmp
sub
data16
pop
jge
in
add
lret
mov
cltd
out
fs
pusha
imul
jl
and
or
scas
les
shll
dec
mov
xlat
mov
pushf
fbld
dec
sbb
pop
jge
pop
sub
mov
mov
arpl
mov
popa
dec
inc
imul
cmc
movzwl
fdivs
loop
sbb
xor
jae
nop
repnz
daa
loopne
out
lahf
enter
push
test
adc
loop
lret
dec
add
jo
cmp
dec
pop
call
insb
xchg
test
sub
jbe
bound
xchg
and
test
aaa
jo
clc
push
mov
int
stos
mov
int3
into
xor
lods
bound
aam
rorb
enter
or
pop
and
push
jmp
jbe
gs
aas
mov
sti
and
out
add
pop
dec
sbb
cmpsb
leave
inc
mov
sub
sbb
fisttpl
ret
jbe
or
xchg
les
pop
gs
xor
inc
das
insb
xchg
or
jo
add
mov
and
rolb
sub
test
cmp
das
sbb
or
inc
repz
sub
lret
and
sub
add
sub
xchg
fcmovb
dec
push
cld
push
scas
stc
jg
cmpsl
cmp
mov
je
es
adc
jne
mov
shlb
repz
scas
jge
cli
mov
mov
push
pop
into
nop
add
in
sub
lahf
jmp
adc
pop
or
stc
leave
cmp
inc
jmp
add
jge
out
mov
add
push
sahf
sbb
jge
enter
mov
jns
push
add
add
js
mov
out
mov
mov
adc
insl
sub
pop
add
repnz
lods
scas
add
jno
inc
add
mov
mov
fidivl
jbe
pop
test
iret
and
xchg
sbb
jg
jb
pop
mov
sub
lret
jns
scas
in
sarl
add
cmp
inc
dec
or
aam
repz
sbb
out
push
into
test
push
xor
xchg
js
mov
sub
idivb
rep
cmp
jb
jo
fisttpll
insl
or
pop
dec
pop
adc
pop
sub
adc
mov
leave
jbe
sub
jno
fsubrl
and
in
jl
inc
and
sub
shlb
adc
test
jno
cltd
xchg
lea
dec
fcom
rcll
scas
insb
sbb
sbb
mov
jnp
fdiv
test
inc
enter
and
and
sub
push
ret
shl
testl
mov
mov
dec
mov
pop
daa
inc
fmuls
stos
adc
loop
push
jmp
jmp
xchg
fimull
push
lea
out
pushf
pop
and
adc
enter
sbb
adc
jp
pop
movsb
sahf
pop
pmaxub
jmp
lods
out
orb
imul
stc
sub
pushf
lret
scas
sub
daa
clc
pop
pop
fmuls
enter
cld
jg
fisubs
mov
mov
sbb
ds
js
cltd
sub
aam
push
jo
jp
sbb
addr16
jge
inc
aad
sub
movl
add
inc
mov
push
icebp
mov
mov
push
imul
out
push
mov
aaa
testl
cli
jg
adc
pop
inc
push
push
jecxz
ss
cmpsb
mov
mov
or
loopne
add
jo
dec
in
and
fwait
jle
xor
inc
push
incb
mov
cmp
rol
in
jl
filds
mov
lock
icebp
pop
add
cmp
sub
dec
push
inc
int3
cmp
sbb
add
mov
arpl
cld
lock
xor
adc
mov
leave
push
xchg
add
ret
mov
cmpsl
std
cli
xor
or
subl
dec
daa
aam
and
add
cs
fisttpll
lock
dec
enter
psraw
shlb
or
cmp
test
pop
jnp
incl
bound
jmp
mov
mov
test
pusha
add
shl
ds
out
stos
mov
lahf
ljmp
out
fbld
mov
pushf
dec
out
sub
pushf
out
push
je
or
xchg
lcall
pop
repz
lahf
mov
jae
pop
mov
fs
mov
xchg
adc
jg
and
cwtl
and
stc
jmp
insl
movsl
scas
mov
std
sbb
test
pop
add
xor
ficoml
in
cmp
mov
xor
add
sub
movsb
inc
inc
inc
push
sbb
lods
inc
push
scas
rorb
mov
mov
sub
inc
pop
imul
test
or
outsb
mov
jmp
in
and
cld
adc
adcl
aad
std
movsb
dec
outsl
in
jp
cld
cmp
xor
bound
in
jne
adc
addr16
aaa
ret
and
dec
and
add
jns
aaa
mov
inc
pushf
pop
pop
and
cmp
xor
adc
jle
pop
adc
add
sub
cmpsl
sbb
mov
cmpsb
dec
adc
dec
loope
xor
add
hlt
fisttps
mov
cmpb
scas
pop
push
cld
les
je
sbb
pop
rcll
insb
sub
jle
and
fisubrl
insl
aam
xchg
icebp
fprem1
sub
mov
std
shll
jp
leave
sbb
cmp
sub
ret
jb
mov
bound
cmp
mov
dec
and
sarl
cwtl
clc
mov
ror
lea
lcall
test
pushl
loopne
call
fstp
sub
lock
jp
push
shr
popf
insl
lock
jmp
cmp
insl
dec
push
jp
mov
lods
shrl
bound
dec
int3
shrb
js
sub
sti
push
int3
fisttpl
xchg
ss
push
add
push
mov
jecxz
scas
mov
jle
enter
outsl
out
mov
jp
nop
mov
scas
scas
pop
mov
push
cmp
xorb
fsubrl
fldt
push
into
jns
cmp
lsl
dec
mov
mov
out
fildl
jno
shlb
fstpl
mov
dec
mov
mov
mov
cs
mov
cmpsl
jmp
pushf
or
push
dec
imul
into
and
pop
mov
xchg
or
dec
ret
jg
sub
pop
lods
clc
mov
jecxz
bnd
dec
jecxz
xchg
pop
xchg
in
imul
jae
aam
jmp
sub
lds
inc
aad
inc
pusha
push
add
shlb
stos
popf
test
push
jb
xor
jno
xor
lea
fstpl
mov
add
popf
adc
xchg
push
inc
shrl
add
add
mov
jle
es
adc
inc
mov
popf
sub
push
add
lahf
das
jnp
fldlg2
sbb
dec
inc
into
xor
clc
lods
shrb
add
ret
sbb
mov
call
jg
movsb
jl
icebp
das
mov
pop
inc
xor
fisubrl
pop
cmp
out
shll
in
movsl
jno,pn
mov
mov
nop
test
mov
push
daa
popa
sbb
add
jmp
cld
push
cmp
test
xchg
push
aam
clc
mov
jge
push
jg
adc
jmp
pop
mov
mov
jle
or
mov
cld
icebp
jle
xchg
dec
lods
push
imul
outsb
out
sub
mov
push
lock
ffreep
rorl
repnz
cmp
sub
lret
mov
out
clc
sub
sub
pop
cmpsl
xchg
std
sub
sbb
cmp
pop
jae
rol
sti
xor
or
sbb
outsl
int3
in
inc
in
mov
jns
xchg
les
popf
add
push
jle
jmp
shlb
mov
inc
xor
fwait
cmovb
xchg
test
inc
cld
add
out
in
xlat
iret
das
cmp
cmp
dec
iret
jae
jmp
test
dec
inc
inc
idivl
sbb
push
bnd
mov
mov
movsb
fimuls
js
xchg
cltd
lahf
data16
cmpsl
jne
jne
fdivl
mov
loope
inc
ret
outsb
outsb
es
push
cli
ja
push
mov
out
rol
fld
cmp
cs
mov
loope
adc
xor
daa
mov
dec
lea
sbbl
loope
add
js
in
outsb
xchg
jmp
cmpb
gs
mov
stos
push
repnz
hlt
sbbl
dec
scas
xlat
mov
ret
adc
mov
or
and
inc
testb
mov
andl
mov
outsl
add
push
mov
adc
ficoms
outsl
pop
aaa
lods
das
iret
inc
rcr
jb
mov
add
mov
fwait
and
sti
jmp
add
test
lret
mov
inc
jns
mov
jmp
cmp
push
cmp
outsb
shrl
out
pop
mov
jae
jmp
cmp
pushf
cli
jae
or
hlt
cmp
jae
and
shlb
jb
in
pop
sub
js
mov
test
push
xor
rcll
inc
mov
outsl
es
inc
lret
mov
jbe
mov
sub
sub
mov
xor
std
jnp
aam
push
and
mov
push
fs
jmp
scas
mov
lods
jge
enter
pop
fs
hlt
fisttpll
ret
ds
pop
movsb
xchg
inc
push
pop
sub
int3
iret
sbb
inc
aam
push
push
add
dec
jb
inc
ret
xor
lahf
cmp
mov
mov
loop
aaa
push
js
mov
gs
push
insl
test
add
pop
inc
sbb
mov
dec
sbb
in
outsb
daa
popa
mov
pushf
push
mov
cmpsb
outsl
test
cmp
xchg
leave
xchg
jae
pop
xchg
fldcw
mov
jmp
xchg
adc
test
imull
stc
jb
sub
xchg
pop
les
fucom
pop
aaa
push
push
iret
pop
or
arpl
mov
test
loopne
loop
dec
pop
cmpsb
lds
lods
or
mov
cmp
jge
push
dec
stos
cltd
jge
cmp
cmc
cmc
add
xor
iret
fbstp
jmp
cltd
cmp
push
test
fsubs
iret
fidivs
es
cmp
adcl
stc
js
mov
push
roll
add
pop
sub
repnz
adc
inc
jo
push
xor
sub
dec
cwtl
add
mov
cltd
and
std
das
lret
aam
and
outsl
push
je
adc
nop
gs
xor
shl
dec
xlat
and
push
adc
sti
pusha
les
out
push
icebp
cwtl
ljmp
insb
shll
call
movsb
aam
jno
cli
into
iret
rclb
fcomp
push
mov
mov
mov
aas
fimull
cmp
inc
test
jmp
lahf
and
sub
pop
dec
je
fistps
pushf
push
and
jmp
add
adcl
popa
jg
add
and
imul
es
sbb
nop
mov
pop
xchg
faddl
pop
lcall
std
push
xor
test
adc
daa
xor
jbe
adc
add
in
ja
xchg
pop
aad
pusha
ror
dec
es
and
lds
xchg
jb
test
jns
movsb
jl
adc
imul
pusha
or
stc
aad
and
hlt
mov
idivl
shll
xor
inc
aad
xchg
xchg
js
xchg
adc
aad
pop
and
sbb
pop
add
xrelease
rcr
mov
sbb
xor
lods
lds
das
adc
sub
cwtl
xchg
cmp
push
jne
add
adc
insb
sbb
enter
or
and
es
push
jne
sub
out
cmpsb
mov
scas
repnz
adc
and
lret
scas
notb
insb
dec
scas
test
aam
fisttps
and
in
sub
jp
adc
xchg
clc
inc
cmp
add
arpl
call
jecxz
or
pop
adc
pop
xchg
mov
push
lcall
int3
mov
dec
and
jl
mov
push
adcb
pop
lret
xlat
out
jecxz
mov
sbb
add
gs
loop
sbb
into
pop
push
imul
pop
and
fldl
jg
mov
stos
sub
cwtl
xchg
xor
cli
jb
outsl
imul
pop
aaa
xchg
adc
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
or
iret
stos
or
aam
filds
out
cmp
sub
mov
jecxz
cs
xchg
push
arpl
aam
pop
jecxz
adc
bound
cwtl
outsl
pop
dec
add
mov
push
lods
imul
lds
xor
insb
pop
fcomi
push
fs
sub
sub
and
ja
push
dec
jb
pop
bound
cmp
mov
cmc
movsl
clc
inc
jns
mov
fstps
xor
push
lahf
fxch
movsl
dec
add
dec
fildll
push
adc
adc
xchg
gs
xorl
sub
pop
add
stos
ret
pop
xor
bound
lods
xchg
sbb
sub
cmp
push
xchg
subb
imul
mov
loop
rcrl
loop
cmp
icebp
cmp
stos
pop
push
daa
mov
pop
das
sub
scas
push
js
movsb
and
mov
jnp
xchg
sbb
es
outsl
cmp
iret
mov
xchg
mov
icebp
loopne
cmp
mov
das
push
cmp
jge
mov
sub
inc
ja
xor
in
sub
dec
push
sbb
pop
bnd
repnz
sbb
mov
lret
fidivl
add
jecxz
add
push
mov
into
fsubrl
enter
sub
sti
and
adc
out
cld
sbb
ss
cmpsl
sub
sub
pop
ljmp
mov
push
inc
cs
and
and
jmp
ja
mov
leave
jns
je
ret
lds
pusha
imul
cmp
clc
mov
mov
and
outsb
adc
shll
aam
push
rcrl
xchg
push
jge
stos
push
and
and
xchg
scas
or
jecxz
into
add
add
js
inc
xor
jb
shrl
push
sahf
pop
jns
inc
out
mov
pop
stc
pop
lds
jae
scas
xchg
ss
lods
xor
mov
adc
sub
mov
sub
inc
nop
aam
mov
dec
jae
mov
sahf
push
lcall
cltd
out
xchg
das
call
or
iret
sbb
lahf
cmpl
gs
push
scas
adc
arpl
lcall
and
cmpsl
sbb
dec
xor
fimuls
or
adc
xorl
int3
enter
stos
scas
inc
lret
dec
jge
movl
push
outsb
lock
aaa
cmp
lcall
adc
or
loope
xlat
mov
sbb
jbe
addr16
and
filds
lods
out
fdivs
xchg
or
shr
sub
mov
data16
into
lret
push
mov
mov
roll
inc
jae
outsb
out
roll
and
popa
adcb
inc
movsl
inc
xchg
imul
lret
xchg
pop
pop
addl
xchg
in
push
mul
aad
push
pop
out
fld1
cmp
sbb
push
jns
aad
xchg
push
cmp
pop
rorb
dec
in
push
int
inc
cmp
icebp
push
cmp
cmc
shlb
ror
test
aas
push
jecxz
cmp
int3
sbb
cmp
subl
popa
mov
cmp
or
xlat
mov
mov
dec
ss
adc
mov
insl
in
fsubrl
xchg
xor
cltd
pop
push
int
fnstcw
shr
push
jae
pop
cmp
mov
inc
fcompl
push
jmp
jge
std
mov
shl
push
jle
shl
out
outsb
cmp
call
sbb
dec
push
push
repnz
jge
inc
sbb
int3
pop
cmp
xchg
dec
cmp
dec
or
xor
out
jno
cmp
inc
add
out
xchg
into
andb
in
sub
push
and
das
mov
in
push
mov
arpl
in
mov
repnz
jge
frstor
dec
push
movsb
imul
sub
and
inc
jnp
imul
int
inc
std
xchg
cmp
push
jge
and
or
aaa
outsb
mov
or
bound
or
movsl
std
push
sbb
xor
jne
sub
ds
test
jns
ja
scas
pushf
mov
and
pop
loope
or
loop
stc
or
mov
fwait
inc
and
cmpl
and
sbb
cmpsb
mov
mov
repz
in
push
shrb
dec
inc
jl
stc
test
and
mov
jno
fsts
push
xchg
loope
add
lea
stos
mov
imul
push
scas
inc
lods
inc
fsubr
lahf
dec
data16
or
lcall
nop
lds
add
lea
insb
clc
xchg
pop
icebp
inc
lcall
jp
cmc
cmpsl
sub
adc
adc
repnz
scas
xchg
mov
or
add
ds
in
push
jo
mov
test
and
popf
xchg
adc
in
inc
mov
xchg
inc
or
movsb
xchg
push
inc
dec
adc
push
sete
pop
jecxz
and
xlat
cltd
inc
icebp
negb
mov
filds
cmpsl
mov
xor
sbb
sub
jp
daa
inc
fbld
pop
xor
daa
data16
repz
lds
cmpsb
mov
jae
dec
adc
jle
pop
je
inc
loop
shrl
inc
std
aad
xchg
mov
adc
lcall
cmp
ja
mov
das
add
in
adc
call
scas
or
out
and
test
adc
mov
mov
sub
and
aaa
pop
xor
mov
push
dec
out
mov
and
mov
out
icebp
loopne
dec
scas
loopne
in
fsts
cmpl
imul
rsqrtps
push
dec
rorb
lahf
out
ds
mov
out
shrb
push
mov
fldcw
pop
aas
call
icebp
dec
mov
out
push
push
xchg
adc
ret
push
pop
pop
fisttps
daa
test
adc
neg
jb
test
mov
xchg
f2xm1
dec
lahf
mov
test
test
mov
or
jge
push
iret
sbb
ja
mov
xor
dec
sahf
xchg
pop
sub
test
inc
mov
xor
xchg
jns
and
push
push
xchg
das
inc
sbb
or
fld
mov
push
std
out
sbb
imul
sub
xchg
jno
mov
pushf
jmp
xchg
subl
xor
pop
aad
push
xor
or
icebp
or
in
out
cmp
dec
aas
xchg
xchg
lret
and
pop
sbb
push
leave
insb
adc
sbb
orb
jle
cmp
xchg
pop
pop
or
jns
and
in
xor
and
ja
repz
sbbl
mov
mov
jecxz
push
jnp
inc
in
test
xor
mov
scas
pop
pop
adc
sub
fwait
sbb
das
mov
into
add
cwtl
dec
sbb
cmpb
in
add
fsubrl
sarb
add
fiadds
jno
cmc
sbb
scas
lcall
call
dec
divb
fcompl
cmc
push
jl
sub
sub
or
mov
dec
and
mov
mov
cmp
sti
cmpsl
lret
and
pcmpeqw
lret
cmc
mov
data16
jmp
ss
in
cmpsb
jb
jg
xor
xor
xor
arpl
xchg
jnp
mov
loopne
add
xchg
xor
and
mov
andb
push
in
fisubrs
or
call
jge
jno
pop
jns
mov
lret
sbb
insl
mul
cld
pop
out
xchg
mov
mov
insb
sbb
add
pcmpgtw
cld
test
cmp
xor
movsb
imul
jae
hlt
sbb
adc
in
inc
jae
adc
lret
lahf
gs
loop
sub
or
jbe
imul
psadbw
loopne
xor
or
jae
fistpll
push
testl
lret
mov
shll
jb
mov
adc
lret
lret
adc
out
jl
ficompl
jge
mull
push
sbb
mov
loopne
add
dec
and
or
leave
and
rclb
adc
movsl
push
out
mov
ss
stos
jb
je
mov
pop
imul
and
or
movsl
insb
cmp
test
cmp
push
inc
imul
ljmp
sarl
sbb
aam
cltd
inc
loopne
gs
xchg
cmc
ss
sub
adc
dec
xor
aam
cmp
fdivr
out
xchg
and
dec
test
pop
jae
sub
loope
mov
xchg
jnp
cmpsl
scas
pop
mov
sbb
mov
fnstenv
inc
xchg
int3
test
add
lock
sbb
roll
call
aad
push
xchg
sub
add
shrb
lea
pop
nop
cs
lahf
jnp
fdivs
mov
repnz
int3
xor
jmp
jmp
adc
mov
inc
cmc
cmp
out
pop
sub
loop
sbb
sub
scas
jp
sub
loop
in
cmp
loope
mov
icebp
mov
sub
pop
loope
fucomp
pop
insb
jl
movsl
scas
aam
dec
les
outsb
and
and
mov
jo
ss
sub
popf
pop
xor
fucomi
fists
adc
inc
stc
sub
jmp
cmpsl
in
das
add
pop
std
pop
lock
push
jnp
mov
xchg
aas
push
shl
scas
and
mov
out
cmp
xor
cltd
inc
add
push
ljmp
add
xchg
pop
or
jl
mov
sub
pop
xor
xor
cltd
sbb
mov
scas
clc
ficoml
jo
cli
mov
std
xchg
dec
or
xor
push
je
jmp
sbb
arpl
sbb
iret
fs
jnp
add
faddl
aam
adc
inc
push
xchg
rolb
dec
push
mov
jnp
sbb
mov
dec
lock
iret
jecxz
dec
dec
pop
or
in
pusha
cmp
shll
jno
push
adc
cld
mov
repz
jle
sbb
xchg
call
mull
sti
cmc
leave
push
test
ret
xor
aad
sbb
push
or
aam
in
fistl
jns
or
dec
xor
mov
fadd
mov
ret
adc
int
loop
mov
aaa
fwait
dec
add
out
test
and
outsb
add
jge
iret
cwtl
push
test
mov
mov
js
jne
add
and
mov
in
push
xor
aas
popa
mov
out
negl
jb
adc
iret
fcompl
ret
sbb
cmp
adc
sub
sub
dec
pop
stos
add
xchg
mov
rorb
loope
iret
cmc
idivb
imul
xchg
mov
rclb
mov
enter
mov
pop
and
insl
movsl
sbb
or
dec
mov
aas
movsb
jecxz
push
inc
pop
inc
addr16
cmp
adc
xchg
out
inc
jnp
add
or
dec
mov
imul
fstl
adc
sti
or
pop
jl
enter
aas
sub
add
pushf
pop
int
mov
lods
sub
jg
mov
fmul
insl
stc
mov
or
les
stos
pop
inc
mov
in
sbb
das
lock
jg
out
das
sti
mov
pop
push
jns
repz
and
addr16
cld
dec
jecxz
jne
sti
movsl
popf
mov
in
fnsetpm(287
cmc
push
leave
mov
cmp
and
or
popa
in
cli
xor
ljmp
insb
push
jl
push
in
pop
adc
sbb
cld
clc
pusha
mov
add
icebp
adc
rclb
mov
jb
in
inc
fbstp
xchg
cli
or
popa
mov
stos
stos
jle
xor
je
shlb
mov
pop
jb
xor
mov
pop
mov
inc
mov
ds
sbb
mov
loop
loopne
inc
std
jmp
call
lret
int
and
aam
pop
or
add
in
cs
jg
ret
mov
lahf
imul
or
adc
jecxz
jmp
or
sbb
ret
sub
lret
stos
loop
sbb
arpl
movsl
dec
push
mov
ja
les
inc
shlb
push
addl
fldl
jo
out
in
jmp
push
or
gs
enter
and
fldenv
xor
insl
dec
or
test
xor
loopne
sbb
push
xor
xlat
jge
adc
enter
adc
test
pop
pop
or
test
push
add
mov
popf
rcrb
and
cmpsb
mov
mov
add
fdivrs
popa
sub
dec
mov
pop
iret
call
mov
pop
fimuls
js
ret
test
fwait
mov
jae
clc
ds
popf
aaa
sbb
xor
icebp
scas
test
push
bound
es
dec
loopne
push
ficomps
nop
pop
call
jbe
leave
insl
divb
add
pop
stos
push
cli
loop
stos
push
push
or
in
insl
jp
mov
or
jge
fcomps
imul
or
xor
xor
fcoml
adc
mov
ljmp
punpckhdq
subb
movl
jge
cmc
sbbb
mov
sub
std
cmc
iret
mov
testl
push
or
inc
clc
jo
and
hlt
push
mov
inc
arpl
jl
cmp
mov
outsb
mov
in
int3
cli
icebp
insb
and
call
scas
ret
pop
cmp
test
lcall
shl
cmp
fcmovnbe
imul
dec
xchg
sbb
shl
ljmp
or
push
movsl
and
xchg
dec
inc
ds
inc
adc
pop
cmp
sub
sub
push
xchg
cmp
testl
call
jmp
cmp
fwait
pop
aam
popa
out
add
lea
mov
lods
adc
scas
push
nop
adc
into
push
mov
cmc
js
lcall
mov
sub
xchg
js
add
xchg
inc
add
imul
loopne
dec
mov
insl
or
push
insl
pop
in
out
mov
add
je
jg
or
jl
inc
mov
dec
sbb
xchg
repz
dec
mov
shr
add
mov
sbb
andb
xchg
stos
xchg
jmp
or
in
bound
cltd
lret
mov
xchg
lds
jmp
sub
int
sub
leave
push
frstor
push
in
mov
adc
cmp
push
sahf
adc
insb
movb
aam
imul
imul
sub
dec
push
inc
mov
loope
sahf
out
pop
repz
les
sahf
xor
bound
sbb
jbe
add
cmp
mov
sti
cmc
adc
xchg
jle
sbb
fldl
jp
sbbl
int
cld
fs
leave
sbb
xchg
cmp
bound
mov
inc
jnp
stos
cld
sti
insl
lret
push
hlt
dec
xor
je
xchg
mov
mov
dec
orb
mov
sub
and
lods
jecxz
xor
ljmp
repz
lods
push
mov
mov
test
out
data16
sbb
in
xchg
lds
or
mov
jo
jne
jb,pn
jle
les
clc
sbb
testb
movsb
in
mov
testb
sub
imulb
in
int
sbb
test
imull
ret
cmc
push
dec
addr16
out
test
movsl
pusha
clc
pop
sub
out
push
inc
test
sbb
dec
fcmovb
push
jnp
adc
add
lret
cmp
jge
stos
sbb
adc
dec
sub
mov
xchg
fidivrl
int3
outsl
aas
push
inc
jmp
mov
sarl
dec
and
jnp
out
pop
push
cmp
xchg
mov
mov
inc
cmp
clc
pop
std
out
mov
mov
insb
add
arpl
cwtl
add
xchg
nop
mov
cmpps
ljmp
rcll
daa
mov
addb
push
fldcw
outsl
fs
push
mov
cmpsl
test
test
push
aad
inc
pusha
ljmp
add
jp
cmp
outsl
enter
push
popa
orb
add
mov
cld
pop
xlat
pop
add
jge
int
jb
jb
inc
les
inc
pusha
lahf
jnp
imul
mov
lea
idivb
push
mov
push
sub
dec
mov
mov
loopne
xchg
jne
jl
stos
add
mov
inc
je
sub
outsb
repz
add
mov
fbld
xor
int
hlt
mov
sahf
imul
push
inc
nop
imul
pop
push
add
addb
jae
mov
les
out
jbe
daa
or
dec
sub
dec
push
popa
pop
xor
outsl
shr
in
inc
cmovge
pop
or
cld
test
jle
stos
outsl
jle
inc
xor
nop
push
xchg
es
pusha
lea
dec
daa
xchg
in
mov
ret
or
bnd
and
pop
sbb
rcrb
pop
and
imul
inc
mov
inc
insl
out
jg
shl
jbe
es
xor
xchg
das
movsb
aam
imul
loope
imul
inc
cli
sbb
jl
mov
cmp
cmp
mov
aam
hlt
mov
repz
sahf
sbb
xchg
das
leave
sbb
xor
xor
outsl
nop
pop
in
xchg
shrl
adc
stos
outsb
and
pusha
pusha
int
mov
push
ftst
pusha
pop
mov
or
and
std
mov
in
rol
inc
jg
xor
xor
addr16
stos
fsts
in
sub
mov
dec
xchg
in
cmp
lahf
sahf
push
adc
push
adc
sahf
sub
and
out
enter
je
or
addr16
and
and
fimuls
mov
inc
inc
stc
jp
test
dec
dec
adc
rolb
out
pop
mov
notl
xchg
dec
mov
mov
dec
pusha
cmp
push
les
data16
cwtl
loop
je
or
add
fimull
lds
jno
pusha
mov
test
pop
adc
mov
mov
mov
test
mov
xchg
jnp
push
out
shr
pushf
cmp
lea
insl
rcl
mov
hlt
or
sbb
dec
xchg
sub
push
icebp
sbb
pop
xchg
movl
loope
and
xchg
pushf
mov
xchg
js
fwait
and
sbb
mov
inc
lock
cmc
icebp
or
arpl
aad
and
mov
es
repz
stos
data16
sbb
pushfw
int3
inc
pop
addr16
adc
jno
mov
mov
cmpsl
subb
add
or
add
and
jg
sbb
in
xchg
and
shlb
scas
inc
inc
push
pop
stc
jmp
lods
clc
xchg
pusha
leave
inc
mov
cwtl
cmp
mov
cmpsl
ja
call
dec
mov
push
fsubs
hlt
cmp
ret
xor
and
mov
int
loopne
sbb
jns
xor
lret
js
cmp
cmp
enter
add
and
int
sub
xchg
lahf
clc
lret
adc
pusha
pop
xchg
ret
test
mov
loopne
mov
xchg
sbb
mov
fsts
or
mov
mov
pop
mov
enter
jnp
mov
pop
push
int3
sub
push
jns
popf
leave
popa
mov
push
add
push
iret
add
lahf
lcall
adc
fimuls
aad
push
ja
int
jmp
jl
leave
dec
mov
mov
mov
aaa
notl
fisttpll
add
jl
push
cmp
jo
add
mov
addr16
loope
filds
out
ja
fwait
push
xor
out
aaa
mov
inc
cmc
lock
and
sbb
fiaddl
je
mov
or
fcmovu
inc
in
inc
dec
imul
ljmp
fimuls
pop
xchg
outsl
insb
out
sbb
movsl
cmp
test
xchg
fwait
insb
ret
testl
rclb
xchg
mov
and
adc
xor
lds
clc
outsl
pop
adc
sbb
dec
mov
jns
out
stc
inc
xchg
adcl
ret
stc
shlb
outsl
popa
jp
out
sub
push
aam
adc
adc
popf
mov
shlb
pop
mov
mov
rcl
sbb
loop
outsl
dec
test
fiadds
sbb
jp
int
jecxz,pn
testl
and
xor
leave
ss
cmp
pop
xchg
lret
pusha
or
mov
popa
fildl
pop
movsb
scas
push
insb
sub
dec
adcb
xchg
ja
mov
mov
push
dec
pop
ss
movsb
shll
test
mov
lods
sbb
cltd
mov
or
lret
push
cmpsb
mov
sbb
sub
les
lds
imul
pop
mov
dec
push
or
pusha
fisubs
ljmp
sti
mov
lea
popa
lret
pop
adc
xchg
ljmp
inc
stos
sub
xlat
push
mov
cli
cmpsb
popf
dec
je
outsb
mov
mov
daa
or
push
lods
daa
fsts
add
in
mov
and
in
loopne
insl
xor
clc
ljmp
lcall
aas
movl
test
mov
adcl
das
xchg
xchg
rol
imul
pop
leave
adc
sbb
stos
arpl
scas
push
and
xor
sbb
in
js
add
test
mov
xchg
rorl
adc
dec
nop
lcall
mov
in
fiaddl
or
adc
mov
lods
lock
cltd
arpl
into
jmp
int3
test
fldenv
shrl
insb
fstpl
fisubs
lret
fdivs
cltd
mov
inc
dec
lds
lahf
pop
adc
mov
pop
mov
repnz
mov
rorl
out
pop
shlb
jns
pop
jb
push
and
xchg
cmc
negb
jmp
nop
repz
mov
into
mov
mov
scas
adc
mov
pusha
std
stos
push
cmp
push
push
aaa
pop
rcr
int
lods
and
push
cwtl
xchg
dec
lret
inc
jge
push
add
cmp
and
ret
and
movsb
mov
xor
sbb
dec
repnz
cld
xchg
xor
mov
js
push
sbb
iret
or
mov
xor
or
mov
mov
cmp
xor
mov
mov
dec
test
ret
bound
mov
dec
aam
pushf
pop
push
cmp
and
cmp
jbe
adc
mov
jnp
fucom
stc
lods
jle
cmp
adc
mov
sbb
jge
sub
cmpb
push
jg
add
loop
clc
loopne
mov
idiv
cwtl
sbb
and
mov
cltd
outsl
aas
sbb
loop
iret
lcall
mov
pop
addr16
fnstenv
cwtl
mov
jp,pn
and
lahf
or
packssdw
mov
sbb
inc
cmp
test
pop
imul
xlat
dec
ljmp
pusha
divb
xor
pusha
repnz
dec
jae
aad
nop
daa
fadd
sbb
cwtl
or
and
pop
mov
or
dec
in
mov
jmp
push
xor
mov
lods
xchg
mov
pop
jmp
roll
cmp
adc
dec
inc
add
das
pop
clc
and
ljmp
xchg
cmp
leave
mov
imul
adc
aam
mov
fidivrs
and
sarb
mov
jle
stc
xchg
mov
arpl
xor
inc
clc
add
lret
movsl
ds
pushf
and
test
jle
push
and
dec
cld
inc
jno
add
das
test
fnstenv
jnp
pop
sarb
std
in
pop
xlat
push
and
mov
pushl
fidivrs
scas
xor
shl
jns
dec
ja
jbe
icebp
cmp
pop
pop
mov
fnstsw
clc
je
dec
out
xchg
mov
pop
pop
mov
push
lods
push
dec
mov
sahf
pop
jne
pop
shrl
mov
xor
ror
dec
outsl
out
dec
outsb
movsb
mull
or
xor
or
mov
sbb
rcrb
push
sub
dec
sbb
je
ljmp
stc
test
cltd
cmp
mov
sbb
lods
inc
mov
fs
push
dec
fiaddl
movsl
or
cmp
mov
les
in
mov
xchg
and
divl
sub
jg
sub
cmpsl
xchg
mov
movsl
jmp
xor
lds
cld
add
in
lods
pusha
fs
jg
or
cwtl
mov
sbb
in
lock
xlat
fucom
loop
adc
cmp
cli
lods
popa
subl
fisubrl
fadd
aaa
bound
rorb
xchg
sbb
push
mov
pop
shl
arpl
lds
dec
dec
xor
fs
mov
jle
and
subb
xchg
test
in
dec
mov
cmp
subl
imul
lods
push
mov
pushf
aam
aaa
js
cmp
pop
out
int3
and
dec
movsl
pop
push
mov
jno
lret
mov
cmp
sahf
fwait
add
xchg
add
adc
bound
xchg
jno
mov
mov
cmp
int
sub
dec
add
insl
fcomps
mov
cltd
stc
xchg
lock
lods
out
insl
ljmp
les
mov
cld
aam
sbb
ret
lret
mov
rolb
pop
xor
lea
sbb
inc
fstpt
imul
lret
lock
movsl
push
xchg
dec
nop
pusha
jb
jne
push
enter
je
pop
cs
ret
pop
addr16
cmp
addr16
insl
mov
sti
popa
mov
rep
lods
leave
add
dec
push
lcall
sbb
daa
mov
imul
sub
and
cmp
dec
imul
jmp
cmp
insl
cltd
cltd
test
cmp
sti
fcmovbe
popa
push
add
mov
or
mov
xor
inc
jmp
std
xor
out
jmp
je
mov
fwait
jp
mov
push
adc
or
divb
fidivrl
xchg
out
xchg
lds
repz
jb
aaa
outsl
jb
test
mov
jne
mov
dec
xchg
lret
push
ret
int3
stos
lds
adc
xchg
adc
cmp
sbb
xchg
cmc
jo
lret
ljmp
test
mov
loop
sbb
scas
xor
out
ss
mov
xchg
inc
hlt
push
sbb
adc
mov
pop
icebp
jae
scas
repz
and
scas
mov
push
loop
in
insb
mov
mov
and
mov
outsb
repnz
inc
repnz
jmp
xchg
movsl
sub
push
pop
pushf
cmc
sbb
lret
out
roll
inc
js
jnp
loop
mov
inc
leave
ss
jmp
hlt
mov
mov
inc
dec
movsb
aam
cmp
mov
adc
movb
popf
dec
jmp
pop
lahf
ret
cmp
cmp
repnz
jbe
idivl
xor
lahf
jb
mov
dec
xchg
call
jp
sti
sbb
insb
loopne
je
dec
xor
mov
add
std
xor
push
sub
repnz
data16
gs
movsb
push
daa
fildll
fwait
mov
push
repnz
jae
mov
fsubs
adc
loope
push
or
and
or
test
xchg
andl
scas
lods
out
dec
psubsw
pushf
push
mov
stos
data16
cmp
mov
mov
idivl
pop
ret
fisttpl
jle
inc
fsub
xchg
pop
jne
dec
push
and
lea
jge
xor
clc
outsb
lahf
shlb
adc
add
pusha
repnz
call
inc
dec
push
mov
add
shll
testl
add
mov
add
adcb
out
leave
icebp
pop
dec
popa
push
sub
push
push
icebp
rcr
clc
sbb
test
xor
mov
mov
mov
rcll
mov
subl
scas
xchg
das
cmp
xlat
stos
das
sbb
int
or
and
xorl
adcl
fdivr
sbbl
test
mov
fidivs
mov
sbb
cmp
jnp
andb
sti
push
ljmp
lret
out
mov
mov
sub
nop
xchg
lahf
or
cmpl
xchg
test
nop
adc
mov
push
pusha
mov
inc
sahf
stos
aas
xor
pop
push
int
lret
cmp
adc
lea
bound
int
mov
movsb
lret
out
arpl
fwait
loopne
push
iret
aad
pusha
mov
inc
jae
out
xchg
testl
cltd
shl
jbe
adc
xorl
movsb
in
xchg
dec
pop
inc
xchg
xchg
in
mov
and
in
bound
pop
xor
inc
mov
push
add
scas
sub
push
iret
cmp
cmpsb
stc
lods
or
or
inc
xchg
out
imul
out
lahf
inc
sahf
cmp
div
lret
adc
movsl
adc
and
pop
in
in
rcll
xchg
mov
int3
mov
mov
fwait
in
push
shll
les
jbe
ss
loopne
shll
sub
or
push
push
stc
and
scas
jb
xchg
xor
filds
push
dec
ds
lds
sti
lret
lds
or
outsl
inc
push
add
inc
mov
rorb
in
adc
sti
movsl
loopne
or
popa
imul
mov
mov
rcl
js
shlb
push
mov
mov
popa
jl
cmc
push
sub
pop
lds
test
jo
popa
les
cmp
lods
or
or
push
dec
pop
ds
in
or
out
icebp
fwait
into
adc
xor
push
popa
mov
add
imul
push
xchg
and
lea
xchg
pop
fcompl
jno
das
jle
add
adc
push
icebp
xor
xchg
push
mov
push
and
add
inc
push
adc
add
movsb
inc
inc
and
mov
call
sbbb
jmp
adc
cmpsl
adc
jbe
jecxz
xor
xchg
ds
jb
div
push
sbb
xorb
fiaddl
push
mov
int
push
push
arpl
push
popf
adcb
insl
jb
test
xchg
fwait
shll
icebp
mov
ljmp
pop
sub
mov
into
and
xor
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
push
push
hlt
bound
pop
bound
arpl
adc
flds
movl
or
std
cmp
and
stc
test
imul
mov
jo
pop
dec
push
pusha
xlat
rorb
ret
jb
enter
sub
jns
das
shrl
jmp
jle
push
call
fwait
out
cli
call
xchg
inc
sub
movsl
ljmp
nop
xor
fwait
rolb
notb
pop
fstl
jnp
out
lcall
or
cwtl
enter
scas
and
push
cld
shll
mov
add
jns
inc
loop
out
test
pop
into
fcomps
cmp
pop
xchg
xor
sub
and
lock
xchg
and
mov
cltd
pop
sti
scas
stos
arpl
inc
cmp
stos
and
stc
or
add
adc
stos
sbb
jo
pop
repz
outsb
jmp
adc
push
and
pop
arpl
rcll
xchg
push
test
inc
sti
adc
sub
or
shrl
lahf
lock
mov
mov
add
std
add
sub
or
push
arpl
pop
lds
fcompl
pusha
xor
aas
jo
cmp
pushf
or
or
repnz
or
imul
xchg
jbe
out
pop
pop
call
jns
jnp
pop
add
cli
nop
add
inc
jo
repnz
add
or
pop
or
push
mov
ss
mov
inc
jae
jl
sahf
push
lock
jge
les
in
insb
pop
sub
push
xchg
aam
push
mov
add
dec
xchg
dec
cltd
pop
jbe
and
pop
and
adc
into
movsb
mov
test
cmp
inc
jno
push
mov
sub
movsb
adcl
sub
insb
movsl
adcl
leave
cli
movsl
lret
stos
call
daa
jae
lret
mov
out
outsb
pop
inc
lahf
hlt
pushf
inc
insl
mov
sahf
popf
popa
push
pop
add
push
sarl
push
jge
pop
lea
loope
outsb
leave
cmc
aas
in
insb
fsubs
and
add
push
test
les
pop
stos
push
stos
movswl
pusha
ficoms
add
jae
push
xor
and
insl
sub
pop
leave
cwtl
nop
fcoms
jmp
jl
add
mov
sub
rdtsc
bound
test
iret
daa
push
push
push
mov
cltd
in
pop
cli
sub
push
dec
adc
lahf
lods
ret
imul
ds
sbb
adc
jmp
push
or
mov
jb
mov
mov
lds
scas
andl
lret
ljmp
fldcw
pop
stos
dec
push
mov
sub
push
pop
fdivrs
pushf
outsb
test
add
pop
lea
mov
pop
out
add
sbb
jb
shr
xor
jge
int3
or
cli
mov
mov
jmp
sbb
pop
pushf
sbb
inc
lcall
ja
mov
lods
icebp
xor
push
cmp
icebp
out
xchg
daa
xchg
mov
xor
pop
imul
adc
pushf
mov
push
out
fs
push
pusha
stos
sub
les
fdivrp
ret
jecxz
into
daa
dec
loop,pn
cld
jo
xchg
sbb
jmp
notl
or
stc
and
dec
dec
and
cmc
jl
fs
cmp
ss
xchg
jno,pn
adc
pop
or
insb
ror
pop
and
xchg
jnp
inc
xlat
aaa
pop
idivb
dec
imul
dec
bound
mov
bound
and
and
inc
loope
lcall
sub
jbe
les
stos
je
and
bound
incb
dec
dec
sar
jge
scas
sarl
outsb
sbb
mov
fs
fnsave
pop
call
dec
fmull
mov
ret
movsb
cs
or
int3
xchg
push
ja
adc
pop
mov
and
sbb
mov
out
xchg
lods
sub
cmp
add
in
and
js
test
loopne
icebp
or
fldenv
xchg
pop
fidivl
mov
pushf
mov
or
or
mov
or
pusha
xor
shlb
jns
stos
pop
out
outsl
js
test
clc
jp
aaa
sbb
ja
fmulp
ds
fisubrl
loop
rclb
int3
xlat
subb
je
or
sbb
test
fisttpl
out
int
lock
push
sbb
inc
aaa
lcall
fs
fisttpll
fildll
xchg
fldenv
add
mov
rorb
push
xor
mov
stc
lret
hlt
in
mov
fdivrl
rclb
xchg
mov
sahf
ja
sbb
aad
add
fs
addr16
and
adc
lock
adc
cmpsl
pop
aas
in
jnp
pop
xlat
aam
les
lahf
mov
out
jecxz
mov
popa
in
aad
shr
aaa
lea
idivl
or
cmpsb
and
adc
xchg
cmc
sub
lret
outsb
dec
es
cmpsb
fwait
cmp
sub
and
outsl
fsubp
test
xchg
test
jno
cmpsb
jl
sbb
xchg
mov
xchg
jle
inc
adc
inc
sub
daa
sbb
imul
cs
inc
cmp
jp
test
xchg
sub
add
jbe
lods
xor
push
sbb
int
xor
and
mov
leave
addr16
xchg
cltd
xchg
mov
pop
lret
mov
stos
stos
or
and
dec
js
sub
fdivrs
aam
inc
scas
dec
mov
cwtl
xchg
movsl
ja
stos
mov
push
inc
mov
mov
hlt
mov
ds
sti
sub
inc
jle
call
dec
dec
pop
pop
ret
mov
scas
dec
test
clc
xchg
xchg
inc
fdivrs
or
push
pushf
inc
jno
xor
pop
jb
sbb
nop
daa
pushf
or
add
nop
out
lods
lcall
push
and
jo
pop
mov
inc
add
lret
dec
push
cmpsb
xor
je
add
rorb
mov
add
sub
mov
push
and
jnp
out
mov
inc
stos
mov
pop
fisttps
shll
movsl
sub
in
jle
mov
inc
rol
mull
mov
add
andb
int
jge
outsl
loop
adc
in
xor
scas
out
xchg
divl
icebp
mov
sbb
xchg
mov
idivb
mov
jnp
popa
xchg
lea
out
xchg
xchg
cmc
dec
out
mov
cmp
jmp
push
mov
fidivrs
jmp
mov
sub
xchg
push
add
sbb
pop
sub
jge
sahf
jns
movsb
scas
jg
ss
inc
ljmp
je
xchg
fdivr
lods
xchg
xchg
mov
popf
pop
fcmovnbe
inc
jo
pop
push
sahf
sub
cmp
test
cmp
fisubrs
adc
mov
imul
insb
jge
jge
push
dec
inc
mov
mov
imul
test
rcrl
sahf
ret
loope
pusha
in
mov
pop
jg
cli
ret
mov
adc
pusha
das
cmp
push
movsb
jns
push
fs
leave
mov
in
sub
jnp
pop
jb
mov
dec
stc
imul
movsl
cld
in
push
test
mov
fs
addr16
dec
xchg
cmpsl
out
add
sahf
repnz
ds
lahf
cmpsl
loop
rolb
lock
mov
das
das
mov
test
dec
mov
mov
mov
sub
push
sub
scas
xor
jno
cmp
cs
xchg
mov
js
xor
pop
inc
mov
or
jo
or
pop
sarl
sub
pop
mov
push
in
xchg
xor
dec
mov
icebp
jb
adc
pcmpeqd
mov
rolb
shll
scas
dec
std
mov
mov
pop
push
sub
dec
leave
mov
out
repz
mov
shll
aam
or
js
jl
hlt
lods
mov
cmp
insl
cmp
into
stos
gs
push
notb
jl
inc
stc
fdiv
subl
es
pop
dec
sub
add
mov
sbb
sbb
int3
js
mov
ds
push
dec
out
xchg
dec
add
add
push
lods
xor
sub
xor
adc
out
icebp
mov
inc
cltd
test
dec
mov
andb
or
daa
jle
and
push
out
rorl
imul
pop
test
lea
repz
ss
popa
sub
cs
pusha
fstpl
lods
mov
cmp
push
loop
cmpsl
in
sub
push
notb
aam
leave
add
subb
in
int
add
mov
mov
clc
or
dec
loop
data16
xchg
and
push
imul
xchg
jge
sub
addr16
aas
cmp
cmp
or
and
mov
icebp
push
hlt
xchg
sarl
sub
push
push
bound
les
jnp
or
adc
jg
sbb
imul
pop
xor
push
sub
mov
cmp
jecxz
std
insl
push
adc
mov
lods
jp
cmp
adc
mov
push
push
fs
xchg
pop
or
rorl
imul
xchg
or
pop
xchg
out
xor
scas
inc
ljmp
push
xchg
jo
sti
sub
mov
imul
notb
scas
ror
sahf
les
sub
sbb
mov
lahf
mov
push
fcomps
push
mov
daa
mov
and
enter
xor
addr16
ja
aad
push
cmpsl
cwtl
inc
adc
in
xor
dec
mov
dec
and
push
lahf
ds
push
addr16
insl
insl
add
mov
fisttps
es
adc
call
aaa
dec
add
push
jb
sub
jns
and
push
popa
insb
jno
fld
pop
cmp
mov
call
adc
enter
lods
and
jo
mov
sbb
xor
cmpsb
jp
xor
push
sbb
lods
iret
cli
lret
sbb
cmp
in
push
adc
icebp
mov
xor
inc
call
outsl
pop
sub
rolb
aas
add
cwtl
jp
sbb
xlat
push
sbb
mov
fidivs
and
push
pop
add
push
gs
inc
xor
jl
sub
popa
mov
adc
cmova
js
movl
fcmovu
jo
adc
rcrl
jl
mov
scas
mov
cmp
xchg
leave
arpl
cmpsb
int
daa
jns
adc
int
sbb
mov
sub
add
das
inc
pop
jecxz
and
mov
cmp
jno
test
rol
sti
or
sbb
mov
out
xchg
add
pusha
push
inc
call
or
mov
sbb
dec
mov
popa
jbe
push
fwait
aas
aad
orb
mov
dec
push
push
mov
pop
sub
add
mov
lock
notb
fwait
pop
jl
jae
int
xor
adc
xor
mov
mov
pushf
mov
jl
xor
fadds
mov
sbb
in
jge,pt
test
dec
or
cmc
sbb
mov
imul
xor
push
punpckhwd
adc
jmp
add
in
xchg
clc
inc
loopne
and
xor
out
fdivrl
test
push
mov
push
mov
mov
push
in
dec
dec
mov
lods
daa
stos
negl
popaw
mov
jno
hlt
cmp
call
das
xchg
in
mov
dec
adc
pop
cld
mov
cmp
xor
dec
or
xor
mov
int3
mov
inc
aam
mov
shlb
icebp
add
fistpll
ret
dec
cli
push
xchg
lahf
add
in
xor
leave
shrl
and
push
test
pop
dec
fadds
stc
pop
mov
rorl
addb
xchg
mov
pop
dec
dec
push
mov
out
daa
jo
stos
pop
dec
test
mov
xchg
or
imul
ss
mov
sete
mov
addb
xchg
and
mov
push
not
mov
arpl
push
out
pop
xchg
push
push
dec
iret
xchg
mov
xor
shll
stos
loop
pop
mov
out
and
xchg
es
mov
addr16
stc
mov
enter
scas
dec
xlat
fildll
or
icebp
sub
out
pop
rcrl
cmpsl
xor
push
sbb
push
add
adc
dec
xor
cwtl
imul
icebp
push
std
dec
jg
stc
sbb
call
jb
ror
lret
ret
lods
jae
cmp
enter
fimull
in
scas
ljmp
push
dec
mov
fabs
shrb
jno
inc
dec
dec
jecxz
lock
fxch
xchg
dec
fs
dec
mov
js
lret
mov
out
or
int3
ja
and
xor
mov
addl
and
enter
cmp
mov
xor
xor
scas
rorb
jecxz
movsl
jo
jl
ret
in
je,pn
push
push
inc
mov
icebp
xchg
mov
adc
stos
jmp
push
xor
jne
jae
jns
mov
sub
jp
mov
cmp
rorb
pop
mov
and
inc
or
cli
mov
sub
leave
jbe
movsl
jbe
or
sub
and
xorl
jmp
rolb
cltd
dec
adc
mov
decb
xchg
imul
mov
pop
sbb
loop
repz
jne
andb
call
xchg
inc
int
test
int
xchg
test
inc
or
jns
in
push
inc
adc
mov
ljmp
sub
nop
lea
mov
fisttpl
mov
jg
jb
mov
loope
and
outsb
or
xchg
fwait
sbb
and
sub
jb
push
xchg
jbe
mov
push
mov
je
dec
add
jmp
add
and
xchg
pop
and
in
cli
jecxz
jns
dec
push
and
leave
pop
std
pop
dec
jo
je
cmpsl
or
fcoms
mov
mov
stos
sbb
popa
stos
mov
push
cmc
mov
lahf
push
repnz
pop
loope
aaa
mov
adcb
stc
adc
into
pop
ret
adc
in
clc
push
jmp
fdivr
clc
inc
pop
lret
shlb
inc
fcmovnu
aam
jae
ja
xchg
out
xor
cmp
cmpsb
aaa
mov
bound
les
pushf
scas
add
sub
push
push
inc
je
jp
js
jo
int
inc
ret
hlt
jbe
xchg
bound
xchg
nop
push
cmpsl
shrb
stc
xor
adc
cmp
jp
pop
fdiv
adc
and
gs
push
adc
sahf
cltd
sbb
orb
jp
fsubrl
scas
push
push
cwtl
inc
outsl
cmp
adc
cltd
mov
leave
les
xchg
lods
rcrb
xchg
cmpsl
imul
adc
cmp
pop
push
movsb
mov
add
arpl
imul
sub
xor
pop
xchg
mov
push
jecxz
or
jae
mov
mov
inc
mov
jge
and
ficompl
push
cld
popa
cmp
outsb
fs
rclb
or
and
addr16
loop
fcomps
icebp
daa
ret
sbb
rolb
aaa
jmp
and
out
popa
aad
lahf
mov
pop
movsl
cmc
add
ja
popf
mov
cmpsl
std
in
int3
add
sbb
adc
push
or
test
cld
mov
adc
lock
mov
or
imul
nop
mov
mov
clc
push
xchg
push
push
pop
adc
or
hlt
inc
arpl
or
jp
sahf
call
push
jns
sbb
push
test
push
and
imul
mov
ret
sti
cmp
pusha
popf
and
inc
icebp
pop
pop
dec
cwtl
das
iret
aaa
mov
mov
nop
cmp
pop
les
pop
push
dec
and
jbe
adc
jge
sub
je
xor
push
ljmp
jno
dec
aad
push
xor
and
push
movsb
cmp
test
out
jne
popf
popf
push
aad
pop
pop
xor
sbb
mov
inc
push
sbb
outsl
pop
icebp
dec
sub
imul
out
int3
jecxz
movhps
mov
data16
xor
dec
and
fisttpl
aas
cmc
rcll
adc
dec
cmp
sbb
adc
mov
jns
cmp
mov
popf
pop
ss
adc
pop
rolb
insl
fsubs
cs
aaa
loopne
or
outsl
sbb
ss
pop
mov
pop
mov
mov
frstor
lahf
push
pop
jb
stc
rolb
cmp
shll
stc
loopne
test
pop
or
push
in
and
jne
dec
leave
push
icebp
mov
test
call
mov
clc
sub
and
es
and
movsb
ss
test
sar
mov
jbe
rorl
inc
sbb
imul
repnz
push
in
sub
mov
int3
inc
daa
lea
lea
inc
inc
inc
inc
std
int3
mov
sbb
cmp
ficoml
push
das
nop
cmp
push
and
jle
inc
xchg
mov
mov
inc
jmp
sbb
imul
sub
cmp
or
repnz
pushf
pop
xor
jp
fdivrl
ja
lcall
popf
dec
jne
dec
roll
adc
jns
in
jne
into
add
inc
das
xchg
mov
mulb
sbb
jmp
sub
ficomps
in
pop
cmp
cltd
call
pop
adc
jg
cmp
push
or
jb
call
sbb
sbb
dec
inc
test
inc
popa
jp
mov
or
out
xchg
out
xor
int3
jp
and
push
in
lods
imull
jns
negb
add
jg
jle
dec
inc
ret
fbstp
dec
mov
cs
int3
xchg
in
push
hlt
fnstenv
aad
push
inc
cs
xchg
lods
mov
ret
loop
push
lcall
cmpsb
iret
mov
adc
aam
adc
sbb
xchg
dec
pop
mov
dec
dec
mov
cmp
rcrb
nop
xchg
outsl
push
movsb
push
mov
lea
mul
jecxz
jno
cmp
insb
jge
inc
or
pop
mov
jmp
push
jnp
ret
cltd
xchg
pop
call
jnp
mov
fstpt
mov
jmp
add
mov
xchg
test
mov
dec
stos
or
cmp
sahf
or
outsb
pop
lea
aam
pop
frstor
jno
inc
push
mov
shr
js
out
or
mov
les
and
sub
sub
mov
mov
mov
pop
aaa
and
jb
jge
or
das
scas
pop
outsl
inc
and
jle
mov
sub
lods
jno
mov
or
fwait
test
movsb
dec
xor
jae
insl
dec
js
scas
push
nop
int3
push
enter
mov
iret
insl
jmp
arpl
rolb
adc
push
fwait
xchg
push
sub
shlb
and
out
or
and
inc
mov
hlt
data16
test
push
rcrl
icebp
or
lret
cmpsl
fisubrl
sub
adc
jnp
cmc
dec
jg
nopl
adc
mov
stc
xchg
les
loope
xchg
scas
mov
rcrb
dec
call
and
ss
test
add
or
xchg
dec
mov
imul
stos
mov
cs
mov
popa
jae
out
cltd
lds
aam
in
stos
aad
pause
das
jne
aam
cmc
mov
pop
add
cmp
rcll
rolb
pop
dec
cwtl
loop
outsl
inc
enter
xchg
jns
add
mov
push
mov
aaa
bound
outsb
and
sbb
jae
ret
ja,pn
pop
leave
out
lds
imul
dec
sub
inc
loopne
jmp
jmp
ss
int3
shll
mov
mov
dec
cmc
or
cltd
xchg
mov
fsubs
or
pop
adc
test
mov
xchg
outsl
or
mov
lret
or
int
add
fwait
or
repnz
and
daa
test
add
test
es
sbb
popf
hlt
dec
in
and
ds
pop
jnp
mov
daa
into
xchg
mov
loope
sahf
sub
mov
dec
lret
inc
push
das
popf
movsl
xacquire
cs
pop
xchg
push
lcall
dec
sub
jl
cmp
aad
jge
dec
sti
mov
loope
add
fbstp
mov
or
arpl
jle
jmp
sub
clc
fld
jno
mov
dec
add
pop
mov
cmp
jno
out
das
push
in
aad
inc
and
jp
dec
pop
ss
and
in
stos
in
inc
mov
lods
or
ret
push
faddp
mov
push
lds
je
jge
add
fdivl
pushf
push
mov
xchg
fimull
addr16
fdivrl
adc
or
xor
and
maskmovq
push
add
lock
addr16
fsubrl
inc
push
jno
sbb
shll
cmp
inc
xor
test
ljmp
add
mov
push
jge
out
imul
mov
sub
jmp
jb
push
clc
out
pusha
sub
inc
cmp
xchg
jnp
and
dec
xchg
jp
jecxz
pop
sub
cltd
push
pop
je
sarl
jb
cs
cwtl
cmpl
sbb
xchg
xchg
xor
loop
sub
jne
loope
outsl
in
xchg
add
dec
xchg
jg
mov
in
clc
sub
aaa
lcall
inc
add
cs
or
mov
clc
nop
mov
movsl
xor
mov
mov
hlt
push
lods
push
mov
and
push
push
mov
push
pop
mov
push
add
aam
adc
jne
xchg
xor
shlb
stos
movsl
push
sub
dec
dec
push
xlat
jl
sahf
sub
insl
pop
lret
lea
xchg
rorl
mov
sub
clc
ja
rclb
in
fsubrs
push
xchg
jnp
add
sahf
mov
mov
stc
add
push
int
nop
sub
lcall
cmp
sti
fadd
movups
out
popf
iret
int
jb
and
mov
lret
xor
test
push
jg
push
and
jecxz
jno
jo
cli
outsl
sti
pushf
mov
and
mov
gs
das
ror
pop
xor
movsb
jne
scas
xchg
cmp
js
aaa
pop
push
dec
stc
pop
jne
xor
insb
popa
scas
adc
and
rclb
mov
lods
jl
xor
imul
pusha
repz
xor
enter
xchg
aaa
jne
cmpsl
adc
out
pop
jb
or
mov
and
in
sbb
jmp
jmp
test
sbb
sub
dec
ds
fstpt
push
xchg
xchg
mulb
mov
pop
and
xor
arpl
mov
mov
xor
inc
add
lods
lret
dec
mov
rcrb
enter
cs
cli
mov
jge
xchg
sub
cmpsb
stos
mov
sub
movsb
push
add
adc
test
popa
mov
jno
sbb
lods
je
mov
lret
outsb
aad
inc
mov
xor
leave
pushf
sbb
std
fwait
or
shrb
dec
or
hlt
pop
add
push
or
mov
sbb
push
cmpsl
dec
add
cld
rep
push
adc
pop
sub
rcl
out
adc
inc
pop
fnstcw
subl
mov
inc
ret
imul
notb
repz
cltd
dec
rcrl
rolb
inc
mov
je
adc
dec
lea
icebp
mov
outsl
addr16
inc
xchg
pop
cli
inc
lds
inc
out
pop
cmp
inc
mov
addr16
fs
iret
je
or
enter
stos
sub
fmuls
adc
mov
cli
fsub
stos
push
pop
fldl2e
es
into
mov
int
cwtl
xor
sti
xchg
pop
stos
scas
push
push
hlt
pushf
or
fistpl
icebp
xchg
int3
clc
icebp
test
mov
or
sbb
notl
mov
nop
pushf
sbb
xchg
push
or
and
and
dec
popf
fstpt
mov
roll
pop
in
sub
lcall
lahf
sbb
or
dec
lret
dec
pop
movsl
dec
imul
push
jl
dec
cld
push
jae
adc
fidivrs
lds
mov
push
in
call
xchg
popf
cmp
test
pop
aam
sti
ljmp
fwait
cmp
cmc
add
nop
out
jb
mov
mov
idivb
xor
ret
bound
stos
jle
sbb
cmp
sar
lcall
push
bound
xchg
dec
inc
dec
ja
inc
pop
or
and
int
insl
cmc
sub
jle
fisubs
xor
cwtl
xchg
sub
fsubr
aas
movsl
push
dec
loopne
in
into
mov
pusha
rcrb
or
leave
cmc
xor
int3
dec
enter
nop
out
adc
stos
stos
or
loopne
fidivrs
cmp
test
shlb
sbb
fadd
cmpsl
lcall
dec
testb
loope
cmp
inc
mov
iret
jmp
ret
andb
mov
stos
and
mov
hlt
mov
clc
xchg
jecxz
sub
jecxz
mov
xor
push
pop
mov
cld
lret
or
enter
insb
adc
mov
loope
test
adc
sbb
enter
or
and
repnz
push
sub
push
mov
cmc
mov
pop
cmpsl
loope
sub
or
xchg
mov
loopne
lock
sbb
enter
push
inc
lea
xor
mov
dec
dec
xchg
mov
sub
or
mov
les
xchg
jno
cmc
repz
lret
aas
imul
mov
jnp
or
loopne
dec
mov
push
fcomi
or
fnstenv
add
sbb
push
jle
add
mov
adc
scas
dec
std
fistl
shr
sub
lock
pop
add
dec
push
test
mov
jns
lret
pushf
shrb
jecxz
int3
adc
test
shlb
outsl
pusha
out
fisttpl
xchg
shrb
or
jnp
mov
xorl
push
add
pop
sti
inc
xchg
dec
or
sbb
add
mov
loope
adc
pop
hlt
sbbb
int
mov
lret
insl
jne
ret
mov
jae
fwait
push
ds
push
cmp
aas
cli
rcrl
push
mov
out
pop
rclb
lods
mov
sub
sbb
adcl
mov
cmp
add
stos
cs
mov
test
aas
call
orl
mov
sbb
jge
jmp
adc
inc
lret
mov
out
cmp
das
or
repz
scas
pop
lock
out
ljmp
add
lahf
scas
nop
addl
lds
xor
in
xchg
mov
sub
sbb
jae
fwait
jp
pop
pop
sub
cmp
shlb
call
out
jo
xor
sbb
shlb
lcall
ljmp
mov
les
mov
pop
mov
mov
push
imul
enter
sbb
mov
cmc
je
cmpsl
mov
les
jns
cwtl
push
inc
in
or
and
fdivrs
loop
mov
or
or
in
dec
xor
nop
xor
jmp
jns
je
or
xchg
mov
add
repnz
pop
add
fsubrl
xchg
fwait
cli
xchg
xchg
ret
inc
ja
jl
repz
xor
mov
mov
bound
stc
mov
mov
jmp
jnp
adc
cwtl
push
lea
cmpsl
shlb
sti
icebp
ret
mov
jp
je
cmc
out
xor
shrl
popf
int3
out
insb
das
sbb
and
leave
pop
xchg
mov
xchg
pop
and
cmpsl
clc
outsl
fldcw
mov
dec
js
daa
jg
enter
sarl
jmp
je
jl
mov
int
ljmp
pop
mov
ss
movl
js
jge
pop
inc
xchg
mov
sub
push
push
repnz
add
jg
push
loop
push
jmp
ss
jbe
cmp
lret
lahf
push
jbe
mov
push
aad
sbb
add
cwtl
inc
pop
fwait
dec
jecxz
mov
or
test
dec
mov
jnp
dec
push
push
mov
jnp
xchg
sbb
mov
xchg
jne
sub
mov
fsubl
adc
shl
dec
mov
xchg
bound
lods
push
in
mov
adc
scas
scas
dec
push
aad
jns
adcl
test
loopne
push
cli
dec
inc
stos
push
enter
loope
fdivl
lds
mov
scas
add
push
pop
push
fldcw
rcr
orl
int
jmp
aam
jecxz
and
mov
movsl
mov
das
fisttpl
rcl
add
pusha
sbb
dec
popa
jbe
insl
inc
jl
pop
jecxz
loopne
xor
mov
pop
cli
mov
pop
push
int3
add
adc
cmp
jg
xchg
test
dec
enter
pop
xor
jl
push
idivl
rol
xchg
in
ja
cmc
adc
sti
mov
push
pop
jb
adcl
jle
movl
mov
lcall
dec
cmpl
cmp
stc
test
nop
in
adc
add
xchg
aam
pushf
test
stos
mov
sbb
xor
sti
pop
inc
dec
mov
imul
fwait
pop
gs
sub
fnsave
loop
leave
mov
mov
and
call
in
mov
add
in
dec
fs
movsb
and
iret
jo
mov
inc
lahf
shll
jo
sub
push
inc
mov
cltd
mov
and
push
add
mov
dec
std
out
in
xor
inc
cwtl
push
cmp
es
movsl
push
mov
push
lods
xchg
lcall
and
push
in
xor
jmp
jecxz
inc
jne
push
fsubp
add
xchg
sub
std
xchg
pop
lahf
xor
mov
pushf
push
xchg
ret
imul
dec
adc
lods
push
bound
cmpsl
gs
iret
dec
jnp
test
adc
sub
xchg
ss
outsb
in
mov
add
pop
incb
jmp
pop
ja
xor
fwait
rclb
jb
lret
mov
jo
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
ret
imul
jmp
bound
orb
jp
push
dec
scas
push
pop
out
xchg
push
mov
mov
pop
insl
xor
jp
xchg
pop
jecxz
mov
pop
scas
sub
push
negb
je
repnz
cwtl
dec
jno
loope
stos
dec
dec
das
fstpt
and
test
ss
jae
fsubl
sbb
jbe
dec
jns
repz
inc
sub
sub
rdpmc
imul
addr16
or
adc
iret
mov
fwait
and
mov
pop
shll
adc
inc
mov
scas
repz
and
inc
pop
push
arpl
call
push
cmp
push
fs
jl
xchg
popa
xor
aad
add
in
jnp
enter
in
lret
jnp
clc
push
or
repnz
push
div
fstpt
xor
inc
in
scas
jp
or
jg
pop
adc
lods
icebp
inc
lahf
cld
pop
cmp
xor
jl
shrl
mov
jo
sti
mov
pop
sbb
es
pushw
and
push
mov
mov
push
add
fcomip
push
jns
add
mov
cltd
dec
jmp
pop
into
test
push
xchg
jbe
inc
hlt
hlt
inc
jno
insb
insb
imul
loope
pop
add
test
imul
out
sbb
je
xor
add
bound
mov
dec
mov
js
jne
mov
scas
jb
insb
shrb
pop
dec
out
sbb
out
adc
scas
inc
dec
fsubrl
push
mov
in
insb
or
nop
and
adc
fnstcw
popf
pop
shll
jle
jnp
sbb
add
mov
jge
mov
int
xor
push
push
shr
dec
insb
adc
arpl
out
cmpsl
std
inc
xor
repnz
js
lock
stos
jbe
lock
scas
into
dec
imul
bound
mov
xchg
jle
push
mov
iret
push
pop
mov
dec
cmpb
and
imul
inc
jb
push
lea
sbb
fwait
ja
clc
mov
adcb
adc
sbb
pop
and
repnz
xor
push
or
xchg
sbb
lret
xor
jp
aam
sub
test
sub
sbb
xchg
inc
repz
sbb
mov
stos
sbb
adc
dec
je
and
divl
pop
adc
add
and
stos
cmp
mov
adc
or
adc
int3
out
push
mov
pop
fnstsw
shr
add
movsl
dec
ds
call
push
jnp
pop
add
addb
pop
add
xchg
iret
or
push
sub
inc
popf
sti
xchg
lahf
jmp
jp
add
das
fcmovbe
dec
ljmp
int3
xor
leave
mov
mov
push
enter
push
arpl
or
and
sbb
cmp
mov
sbb
sbb
adc
xchg
arpl
cmp
xor
or
call
mov
mov
pop
and
add
jae
pop
or
cwtl
adc
mov
adcb
scas
movsl
mov
cmp
outsb
clc
xlat
jno
rolb
mov
and
pop
sbb
mov
les
adc
int
mov
mov
and
pop
inc
pop
int3
leave
insl
mov
sbbb
mov
je
and
andb
adc
pop
or
fsubrl
xchg
mov
xor
mov
or
inc
sti
mov
fbld
sbb
lock
shl
and
mov
int
jge
adc
cld
addb
mov
pop
push
in
xor
add
test
cmpsb
cmp
add
int
push
cwtl
mov
xchg
jo
inc
pop
lea
sub
lock
mov
cmp
mov
jae
push
cs
ljmp
mov
add
ja
xor
icebp
add
mov
rcll
push
jb
cmp
in
aaa
mov
xchg
inc
ljmp
add
fimull
inc
ds
aaa
into
inc
xchg
shrb
xchg
sub
imul
test
sub
sub
jnp
xchg
fmul
sahf
sub
push
imul
in
fstpt
inc
pop
int3
movsl
mov
push
mov
popa
push
or
subb
scas
ds
mov
push
clc
cwtl
push
cmp
xchg
leave
jge
sbb
dec
inc
xor
dec
lcall
pushf
mov
push
push
push
ror
addl
int
fistpll
gs
aas
aam
lret
mov
and
adc
jg
inc
test
rcl
xor
jp,pn
in
pop
movb
mov
mov
adc
mov
jp
cmp
pop
cs
xchg
mov
or
es
cmp
pop
pop
das
imul
cmpsl
data16
in
pop
mov
push
xchg
mov
dec
mulb
je
add
inc
hlt
fnstcw
or
sub
stc
pop
lret
dec
retw
jo
jl
sub
sub
std
and
les
inc
sbb
adc
repnz
inc
mov
pop
lcall
lods
mov
lret
pushw
mov
dec
mov
xchg
aam
stc
in
mov
mov
push
and
popa
dec
loopne
stos
incb
adc
mov
push
dec
icebp
nop
fstl
push
iret
cmc
xlat
add
aaa
or
push
adc
pop
jb
in
xorb
pushf
loop
cs
xchg
cld
sbb
mov
cmp
sbb
cmpsl
aas
adc
xchg
sub
mov
ss
cmpb
inc
cltd
loope
out
out
pop
jmp
adc
add
xor
fdivl
mov
dec
mov
repnz
jl
mov
mov
cmp
clc
daa
fnstcw
mov
aas
rclb
in
pop
mov
xor
cmp
push
insb
inc
in
or
add
mov
dec
outsb
jo
pushf
mov
jg
movsb
in
mov
fwait
jle
mov
jno
outsl
sub
jns
jg
dec
movb
xchg
lea
cmc
pusha
xlat
ljmp
les
scas
cmp
test
outsl
push
cmp
mov
or
sub
test
ja
jno
or
movb
or
shll
icebp
lods
sub
cli
cmc
stos
lret
inc
inc
adc
and
add
sbb
cli
add
dec
sti
adc
inc
mov
enter
into
loope
xchg
jecxz
jl
cmp
mov
jg
pop
ljmp
sub
jp
imul
test
pusha
mov
mov
jns
popf
insb
jae
push
sbb
out
mov
popa
dec
cld
adc
ja
cmp
ss
dec
xor
jecxz
mov
incb
cmp
loopne
mov
or
insl
call
test
mov
push
decl
pop
dec
push
mov
mov
cmpl
push
repnz
add
pop
xchg
adc
push
mov
aaa
dec
cwtl
jne
cmp
push
lea
ret
sub
andl
push
xchg
outsb
cli
fcmovb
push
pop
mov
mov
jnp
xchg
inc
jo
test
push
rcr
mov
fwait
into
movsl
es
jecxz
in
and
imul
jecxz
mov
mov
fimull
inc
add
add
mov
fildl
stc
pop
movsl
mov
sbb
xor
mov
fs
push
mov
into
push
js
xor
adc
rorb
lahf
add
xchg
xchg
push
outsl
leave
push
push
sbb
jno
sub
jb
std
stc
mov
inc
jle
push
and
fs
loopne
mov
mov
and
call
jae
xor
bnd
lea
jnp
ss
xchg
jl
out
push
lret
push
das
cmp
in
mov
ret
lods
mov
push
jp
sub
xor
inc
jecxz
ret
cmp
rcll
inc
sbb
shl
xchg
sub
xchg
mov
pop
dec
push
cmp
bound
mov
push
lock
andl
push
sbb
pop
mov
int3
push
inc
sub
jmp
mov
sub
xor
stc
xor
icebp
dec
jb
push
jnp
jnp
pop
lods
mov
mov
into
adc
jg
fwait
mov
jne
test
inc
lea
cmp
xchg
pop
jmp
in
inc
outsl
xchg
push
fwait
cs
rcrb
mov
xchg
sbb
sti
ljmp
dec
and
cmp
fadds
je
aam
imul
loop
inc
xchg
sub
xchg
in
addr16
scas
lahf
dec
mov
in
das
out
mov
mov
and
pop
outsl
into
add
sub
xchg
push
dec
mov
add
ja
or
pop
xchg
and
fadd
pusha
adc
loope
jg
pcmpgtd
mov
daa
adc
lcall
jae
and
fs
dec
mov
imul
icebp
pop
jp
cmp
dec
sbb
jns
and
cmp
jge
dec
test
add
in
xchg
repz
bound
pop
leave
xor
int3
mov
mov
popf
adc
inc
or
imul
xlat
inc
or
xorl
cmc
ljmp
addr16
ret
rorl
outsl
ret
adc
lcall
fistpl
imul
mov
sbb
jae
jmp
hlt
mov
insl
xchg
movsb
inc
das
ret
sbb
test
pop
cmp
and
pop
hlt
dec
sub
ds
or
loope
sub
or
push
fs
aad
lds
dec
test
and
iret
push
push
push
not
mov
idivl
into
scas
clc
mov
fdivrs
xchg
test
popa
mov
test
sbb
cmc
mulb
lar
into
jnp
pop
adc
scas
andb
gs
dec
push
pop
test
imul
push
and
clc
pop
or
in
add
sbb
in
dec
pop
roll
adc
out
orb
mov
fxch
sbb
repz
out
adc
rclb
pop
xor
and
or
fstpl
cmp
sub
mov
imul
mov
push
push
daa
xchg
push
sti
xor
aaa
mov
sub
jae
enter
filds
inc
out
loop
sub
decl
nop
out
pop
lea
cmp
pop
sbb
enter
mov
test
das
scas
add
ja
mov
sub
mov
cmc
jno
push
or
inc
fmulp
or
clc
out
jmp
jle
nop
jp
in
loope
mov
das
arpl
xor
cmp
in
mov
out
mov
and
or
ljmp
jmp
and
sub
adc
pop
jmp
aas
and
pop
mov
sbb
repnz
cltd
adc
jmp
adc
mov
pop
pop
movsl
push
imulb
fwait
jbe
xchg
in
hlt
inc
add
pushf
sbb
shll
es
mov
xchg
mov
dec
xchg
push
pop
cmc
sti
and
push
jge
sub
addb
enter
inc
pop
cltd
insb
rorl
lahf
lahf
sar
mov
push
movsb
push
pushf
add
jmp
sar
xor
cmp
out
in
inc
lcall
outsl
xchg
cmpsb
rol
cmp
js
cwtl
movsl
iret
hlt
pop
std
xor
add
filds
sbb
inc
mov
mov
jl
shrl
stc
scas
clc
sub
push
insl
xchg
cmpsl
add
pop
mov
push
decl
mov
sbbl
enter
sub
mov
int3
or
add
addl
loopne
stos
push
adc
mov
roll
fs
xor
test
mov
dec
dec
mov
add
bound
fidivs
lock
and
clc
lcall
fbld
jae
pop
cmp
lds
repz
mov
xor
popf
xchg
add
jg
dec
fs
jnp
repz
jmp
mov
xchg
ffree
arpl
sbb
adc
pop
ljmp
mulb
js
bound
mov
inc
cmp
cmp
cli
jp
jae
sub
mov
push
push
pop
insl
adc
and
fs
sbb
sti
cmovg
or
inc
bndstx
sub
push
or
pusha
mov
pop
sbb
js
dec
movsl
jno
daa
xchg
enter
sahf
lods
mov
mov
mov
movsl
xchg
cmp
pop
pop
inc
nop
fs
sbb
lock
adc
or
lods
push
inc
mov
or
xor
pop
push
call
jnp
bound
add
in
xchg
lods
leave
sbb
outsb
adc
rclb
mov
xchg
fisttpl
idivl
popf
and
dec
leave
loopne
jecxz
xor
sbb
call
push
stos
or
nop
or
mov
adc
mov
sbb
push
pop
and
mov
mov
enter
test
mov
mov
adc
loopne
repnz
popa
mov
dec
inc
cwtl
sub
cmp
sbbb
adc
sub
inc
push
push
test
push
sarl
cld
lret
xlat
sub
adc
jl
pop
inc
lcall
mov
lahf
fsts
add
movsl
test
sbb
pusha
fnstsw
lds
cld
loope
out
mov
inc
scas
cmp
xorl
pop
fidivs
outsb
pop
adc
rol
or
imul
test
jno
stc
or
mov
out
lock
jns
out
iret
mov
fcmovb
cmp
xchg
ss
loope
adc
lods
je
inc
sbb
stos
mov
pop
aas
jnp
add
mov
cs
lea
add
jl
mov
xor
dec
js
lret
loop
jecxz
lcall
push
jno
mov
or
shlb
adc
or
xchg
xlat
out
inc
lret
adc
xchg
outsl
dec
lds
push
fildll
adc
stos
inc
mov
sbb
negb
iret
and
sbb
sbb
cmc
fiaddl
mov
and
add
pop
fcomps
pop
aaa
mov
fnstsw
adc
test
push
imulb
call
icebp
popl
lret
das
imul
or
repz
cmpb
sbb
xchg
push
lds
ds
inc
stos
sbb
out
bound
jne
sub
jbe
insb
push
scas
cmp
lcall
arpl
adc
adc
imul
jo,pn
fst
icebp
jecxz
jnp
mov
push
mov
pop
mov
add
lcall
mov
pop
push
bnd
xchg
dec
or
stos
neg
fistps
jle
lahf
jle
cmp
adc
call
and
scas
xchg
ror
push
and
fs
pop
xor
mov
lods
inc
add
imul
into
neg
cli
or
in
cld
cld
push
int3
popa
pop
or
lods
or
inc
and
divl
mov
xchg
int3
fwait
push
xchg
pop
cmp
lret
inc
mov
ret
push
clc
mull
in
test
inc
sbb
inc
jns
pop
mov
mov
xor
lcall
or
xchg
enter
xlat
mov
data16
sbbb
movsl
push
sub
clc
imul
mov
mov
mov
aas
mov
jae
loop
mov
sub
stc
lret
and
fld
fcmovne
xchg
push
pop
and
lods
jmp
jp
sub
js
add
or
dec
add
dec
cmpsl
lods
imul
sahf
sub
fisubrs
js
out
inc
cs
icebp
loop
mov
mov
fildl
jae
pop
in
scas
adc
nop
inc
xor
push
or
test
outsb
cwtl
test
int3
adc
push
divb
lods
rolb
pop
pushf
les
mov
dec
pushl
cmp
test
pop
popa
sbb
push
xchg
sbb
jb
repnz
sub
leave
jl
inc
arpl
sbb
inc
xchg
scas
js
scas
sbb
push
ret
mov
sbb
xchg
cmp
mov
sbb
jmp
fnstcw
push
xchg
and
pop
addl
inc
cmpsb
push
sub
sbb
or
pop
mov
mov
decl
jb
push
mov
mov
push
cmp
xchg
movsl
sarb
mov
mov
jp
cmp
scas
enter
adc
insl
or
xor
in
lds
movsl
mov
inc
adc
mov
cmp
movsl
cmp
cmp
pop
or
sti
xchg
sub
dec
and
fldenv
jge
jl
into
pop
insb
shld
lcall
fcomps
nop
jae
adc
sbb
fs
mov
cmp
cld
dec
or
arpl
addl
in
pushf
push
adc
testb
and
sub
or
push
jl
mov
inc
aam
decl
or
popa
icebp
int3
lret
inc
sti
popf
test
lret
aam
movsb
xlat
mov
test
cmp
popa
jns
les
pop
pop
mov
scas
and
out
cmpsl
push
add
cmpsb
xor
cli
xchg
pop
jns
cmp
in
sar
mov
mov
repnz
jne
sub
xchg
int
shll
cmp
inc
test
lock
jge
faddp
dec
jle
pop
mov
aaa
in
push
or
jmp
or
sub
insb
or
fsubrs
xor
enter
cmpsb
shll
push
pusha
dec
test
mov
xchg
in
push
int3
outsb
jle
cltd
sbb
sbb
mov
sbb
inc
mov
nop
pop
mov
xor
js
push
jg
fs
mov
inc
jae
mov
dec
ret
dec
fnstcw
mov
mov
lods
enter
rcr
fiadds
in
xorl
jb
negl
mov
cli
sti
test
sub
xor
loopne
or
testb
fs
inc
es
movsl
std
mov
es
pusha
aaa
cmpsb
cltd
sbb
loop
sbb
cmpsl
fxch
cli
fdivrs
cmp
cltd
xor
add
out
imul
xor
sbb
bound
jge
nop
jecxz
inc
xor
icebp
jbe
pop
cwtl
push
in
jo
popa
enter
push
das
mov
ret
aas
cmp
dec
shll
jle
cmc
mov
sbb
jno
sbb
mov
loope
inc
push
loope
mov
mov
addb
pop
sub
jae
mov
pusha
add
rcrl
in
mov
dec
xchg
or
dec
mov
lods
inc
xlat
and
add
cmp
and
push
test
clc
shl
mov
jae
pop
sub
inc
sub
cwtl
sbb
lcall
mov
and
push
xchg
enter
addr16
xchg
pop
adc
inc
mov
repnz
int
sub
dec
adc
pop
cli
pushf
pusha
lods
fcomps
jl
das
insl
cmp
push
xchg
nop
lcall
add
sti
adc
sbb
pop
mov
add
or
in
push
cmpsl
mov
cmc
mov
xor
movsl
pop
jns
inc
mov
xor
inc
imul
pop
stos
sub
lcall
jecxz
xchg
dec
push
jl
xor
loopne
ljmp
push
xchg
mov
mov
dec
sbbb
adc
jl
and
icebp
es
repnz
push
mov
stos
out
inc
cmp
dec
fwait
push
inc
or
pop
or
rcll
push
addr16
inc
adc
mov
rol
pop
cwtl
push
sub
lret
int3
push
or
test
cmp
mov
aad
jne
fisubrl
push
and
jle
xchg
inc
sbbb
outsl
int
loop
clc
shrl
push
mov
adc
and
test
xor
test
cs
dec
inc
add
sub
inc
push
iret
or
movsb
dec
nop
inc
fcomp
inc
mov
in
dec
mov
scas
jb
mov
out
sbb
in
pop
xor
cmp
in
mov
sti
or
dec
push
adc
push
cmp
scas
cmpb
ret
cwtl
cmp
pop
mov
dec
jle,pt
out
mov
and
js
imul
jo
adc
fs
clc
pop
in
dec
addr16
in
push
jbe
lods
add
lret
dec
lret
inc
pop
push
xor
xchg
adc
cli
insl
std
js
dec
sub
lret
push
or
lret
insb
es
xor
jle
cmp
pop
push
cld
aad
xor
frstor
leave
xor
mov
repz
jbe
adc
xchg
push
stc
cmc
mov
mov
cs
mov
cmp
pop
scas
mull
inc
sbbb
popa
jp
push
jae
popa
aam
mov
inc
cmp
jno
xchg
shlb
data16
movntps
loop,pt
sub
jbe
mov
je
icebp
mov
push
popa
repz
or
push
outsb
lcall
loop
add
cmp
sub
pushf
xor
pushf
ljmp
je
push
test
xor
mov
cmp
loop
scas
out
sbb
sbb
or
add
pop
sbb
icebp
xor
int
int
xor
push
push
push
sbb
nop
js
int
mov
loopne
lods
and
mov
jne
mov
cmp
stos
xchg
mov
repnz
out
xchg
fcoml
jmp
sub
pushf
iret
out
sbb
mov
test
jne
outsl
mov
dec
ljmp
jnp
sbb
idivl
dec
pop
lret
movsb
movl
jnp
jg
enter
ja
or
idivl
int3
adc
cmpsl
cmp
push
and
xchg
cmp
mov
sub
cmpsl
loopne
rcr
cmpsb
mov
mov
inc
xor
jns
and
mov
xor
push
rcrl
sarl
dec
adc
mov
jb
cmp
popf
outsb
rorb
and
push
push
mov
clc
mov
jae
imul
push
pop
mov
sbb
orl
push
inc
stc
lock
movsb
mov
pop
pop
xor
and
jl
ljmp
push
fmull
pop
andl
or
dec
fwait
ds
jne
popa
popf
jmp
and
mov
push
xchg
stos
and
mov
out
adc
stc
js
pop
xchg
pop
xchg
add
dec
ss
push
shl
ljmp
movb
xor
pop
add
xor
fstpl
es
fstpl
sbb
repz
bound
mov
pop
mov
loop
mov
jmp
dec
pop
shrl
addr16
and
outsb
cmp
sarb
in
jne
hlt
dec
sub
mov
fstps
ss
ss
pop
pushl
cwtl
mov
sub
out
repnz
mov
in
or
hlt
fiaddl
jnp
pop
rclb
mov
jmp
cmp
int3
or
mov
decb
push
dec
mov
test
cmpsl
pop
movsl
sti
dec
or
push
call
push
push
stos
sbb
subl
add
sbb
pop
hlt
ret
fstps
hlt
lea
jbe
aam
in
dec
pop
adc
mov
loopne
jb
jge
shlb
xchg
push
icebp
rorb
mov
fisubrl
push
clc
out
arpl
sub
mov
lock
idivl
insb
dec
data16
pop
jecxz
jmp
aaa
jbe
mov
lods
psrld
sbb
dec
mov
test
daa
mov
mov
jne
enter
ret
aas
mov
cmp
cmp
or
jmp
jle
fdivl
cmp
mov
hlt
int3
pop
mov
push
sbb
je
mov
sub
pusha
das
not
cmp
mov
mov
inc
imul
or
shll
or
scas
mov
xchg
dec
pop
sbb
fmuls
ret
cmc
inc
pop
rol
loopne
stos
add
stos
mul
sbb
les
push
insb
jbe
fs
aas
mov
xor
cmpsl
cmp
mov
sbb
push
jmp
and
sti
add
jo
insl
je
scas
add
or
xor
pop
imul
aad
adc
testb
jg
insb
jno
lahf
pop
lods
nop
xchg
jnp
sahf
cli
mov
mov
and
sbb
xorb
xchg
xchg
xchg
xlat
and
sarb
push
stos
popa
into
add
out
arpl
loop
ds
inc
xchg
mov
mov
loope
push
push
fstl
rol
push
pop
movsl
jg
scas
jbe
xchg
test
out
push
imul
add
stc
int3
xor
in
pop
mov
cmp
inc
jge
push
fnsetpm(287
cli
or
aas
imul
ret
imul
pop
ljmp
lcall
shrl
mov
sbb
push
enter
inc
push
mov
into
xchg
pop
xor
inc
outsl
int
pop
rcrl
es
repz
imul
out
cmp
xchg
jecxz
ljmp
lds
xchg
test
shll
pop
xchg
into
rorl
or
es
cmp
aam
push
insb
push
add
jnp
fs
mov
jmp
addr16
lret
and
mov
mov
ret
lret
pop
aad
adc
sub
stos
jbe
pusha
cmp
cli
scas
fldcw
or
pop
mov
cmc
clc
pop
aas
cltd
pop
jns
sbb
jno
fs
pushl
jge
add
dec
insb
sub
pop
arpl
cmpl
push
sub
inc
loope
pop
mov
cwtl
sbb
inc
fadd
adc
jno
dec
in
add
cmp
lea
ds
xchg
pop
fsubr
insw
loopne
lods
clc
inc
mov
xchg
inc
lds
rcl
gs
repz
cld
dec
inc
int3
pop
mov
loop
mov
aas
lods
pop
push
lret
fwait
or
xchg
lret
jl
loopne
call
jns
and
in
stos
dec
jo
clc
or
test
xchg
jmp
lea
push
ss
pushf
fildll
bound
nop
arpl
sbb
sub
dec
cmp
pop
std
icebp
lahf
pusha
loopne
jmp
je
or
sub
lahf
test
cmp
xchg
cmp
into
popa
or
je
mov
xchg
cmp
sub
and
adc
and
aas
es
jp
popa
jmp
insl
mov
les
xchg
je
bound
adc
mov
fnstenv
and
and
adc
lret
xchg
dec
fcomps
mov
popf
xlat
scas
pop
push
push
dec
xor
popf
pop
push
mov
xor
mov
in
push
sub
mov
jmp
mov
ret
adc
xorl
mov
rcll
pop
montmul
cmpsb
stos
jae
sub
fs
cli
xor
lcall
ret
or
xlat
push
xchg
mov
js
cmc
call
das
jecxz
cmc
pop
push
out
das
leave
icebp
cmp
add
push
or
fnstsw
sub
fwait
addr16
dec
pop
adc
pop
xor
dec
pop
push
inc
stos
jle
jecxz
insb
mov
bound
mov
cmp
fs
mov
repz
pop
pusha
inc
cs
add
mov
push
popa
jo
leave
pop
xchg
ds
or
mov
dec
in
push
sti
jp
add
incb
imulb
dec
dec
in
in
dec
mov
sub
jae
or
push
insb
aad
mov
jge
pop
cmp
in
aas
scas
add
cs
les
shlb
out
rol
jb
fisttps
xchg
pusha
fcmove
sbb
dec
popf
xchg
sub
int
xchg
iret
into
dec
int3
mov
xchg
and
int3
push
lock
dec
inc
movsl
add
loope
insl
mov
jmp
cmp
in
dec
sub
fisubs
add
inc
scas
jle
push
pop
out
dec
shld
testl
lods
and
fsubrl
adc
addl
mov
push
mov
xchg
lock
xlat
xor
adc
out
fs
mov
mov
xor
pop
pop
mov
and
mov
pop
xchg
jae
ret
adc
ret
lcall
inc
mov
imul
fwait
inc
inc
pop
cmp
mov
mov
lods
lcall
cmpsl
and
pop
aam
scas
cmp
popa
outsb
dec
add
push
add
mov
push
std
or
mov
mov
imull
fildl
or
test
imul
adc
jno
out
mov
call
push
icebp
jb
jl
rcrl
popa
les
mov
sbb
mov
rcl
leave
xor
pusha
add
filds
pop
inc
xchg
jle
mov
in
rclb
ret
pop
sub
out
std
jmp
push
je
aaa
mov
out
adc
mov
into
in
clc
pop
test
popf
stos
pop
add
ljmp
mov
jge
cltd
inc
lret
jg
mov
mov
push
jge
push
call
adc
adc
mov
aam
clc
sbb
push
out
jecxz
jne
mov
xchg
jg
push
inc
sub
mov
dec
sbb
xchg
cmpsl
push
js
leave
fstp
fdivs
lahf
xor
push
sub
outsl
ss
adc
ret
cmp
das
fsubs
iret
movsl
aam
inc
scas
gs
adc
fsubl
dec
jmp
and
push
or
aas
out
mov
or
dec
xchg
rorl
stos
test
ja
popa
cld
and
shl
jl
sbb
mov
lret
add
push
pop
test
aad
lahf
adc
jb
repz
dec
ss
or
lods
test
lret
mov
mov
add
call
push
jmp
arpl
mov
insb
aaa
inc
pop
inc
jecxz
xchg
push
ss
jle
xor
pop
loopne
dec
outsb
push
ss
addr16
repz
cmp
jecxz
adc
add
xor
mov
notb
add
and
add
mov
xchg
movsl
jecxz
pop
sbb
movsl
push
xchg
dec
lea
jmp
bound
mov
adc
out
in
or
mov
xor
sub
subb
add
pop
fdivs
mov
aad
inc
xor
mov
cwtl
leave
inc
mov
int3
jmp
int
mov
jb
in
sbb
cwtl
cmp
repz
imul
addr16
je
cmpsl
mov
mov
dec
in
adc
out
lods
jge
mov
push
cli
xor
sub
mov
pop
lds
sbb
sub
pushf
bound
pop
imul
xchg
call
inc
inc
pusha
dec
jbe
pop
shll
add
cmp
outsl
mov
jp
mov
xor
out
les
add
fldt
loope
pop
arpl
push
ja
mov
xchg
push
aas
sbb
shlb
sub
pop
je
aaa
mov
push
or
and
cmpsl
movsb
jnp
mov
or
gs
add
ds
test
pop
jae
nop
roll
xchg
das
add
fstpl
in
pop
cmp
xchg
fldenv
dec
and
add
cmp
sub
mov
xchg
stos
push
icebp
sub
orl
test
mov
ret
jecxz
inc
test
shl
or
mov
xlat
mov
addr16
lock
dec
sbb
or
adc
aas
ss
cltd
xor
jo
xor
mov
cmpsb
enter
ret
push
iret
cwtl
lods
aaa
es
icebp
xchg
xor
mov
mov
test
aam
push
jne
inc
push
xchg
cmp
dec
xchg
add
jp
daa
popa
xchg
fnsave
cmpsl
dec
leave
lret
push
dec
xchg
push
pop
ret
lea
mov
popa
or
dec
sub
cmp
imul
psrlw
sarb
or
pop
lods
test
xchg
call
cwtl
xchg
xchg
movb
gs
dec
data16
jno
push
inc
aad
adc
in
pop
xor
enter
daa
scas
inc
aam
or
cltd
cld
cmc
mov
cld
fwait
lret
dec
je
leave
push
xor
negl
add
sti
stc
and
xor
xchg
sbb
mov
fdivrs
xorb
mov
fldcw
jo
xchg
data16
jg
pop
xchg
sbb
cwtl
pop
or
inc
sub
fimuls
sbb
dec
lods
jns
dec
ja
mov
imul
push
cmp
inc
push
and
sti
fdivrl
roll
adc
xchg
mov
sbb
sub
clc
sbb
stos
adc
mov
lods
xchg
ss
lret
pop
sub
inc
xchg
jo
inc
xor
test
frndint
test
movsb
jmp
push
jns
rcl
leave
mov
or
sbb
les
adcl
xor
loopne
fmull
int
fnstsw
aaa
ret
ja
out
mov
imul
test
call
cmp
gs
movsb
out
add
push
sbb
fcomps
cmc
rorl
aas
daa
fmulp
int3
daa
rorb
adc
aad
adc
test
jmp
data16
dec
scas
xchg
in
adc
or
clc
daa
and
stos
test
stos
fwait
mov
mov
pop
push
push
into
fcoml
nop
in
jmp
into
mov
outsl
imul
cwtl
jne
sbb
das
pop
push
or
jno
dec
add
jmp
push
mov
xchg
mov
movsb
jecxz
insl
or
or
xchg
sub
stos
nop
fiadds
or
adc
lahf
outsl
and
mov
shr
das
idiv
sbb
scas
dec
lea
pushf
aas
mov
sub
test
gs
xorb
adc
dec
imulb
insb
sbb
xor
stc
es
cmp
xchg
icebp
outsl
jle
sarl
inc
ficomps
lods
loopne
nop
or
push
pop
xchg
int
inc
out
adc
lret
push
bound
repz
stc
es
std
mov
pushf
in
test
jo
nop
cld
repnz
ror
int3
push
adc
fidivrl
aad
add
adc
pop
push
mov
movsb
and
ror
aaa
mov
out
ret
lea
sub
sub
jl
sahf
cmp
cmp
cli
adc
push
xchg
mov
loope
xor
push
dec
scas
and
mov
add
sub
cmc
adc
pop
lea
fcoml
jmp
add
je
add
test
shrb
jp
push
call
paddd
out
xchg
inc
add
lock
lahf
xchg
sbb
jmp
add
xor
fsubrs
nop
lret
jne
pop
pop
stos
and
mov
out
cmpsl
xor
scas
es
pop
sbb
outsb
cli
sti
cmc
pop
xor
cltd
dec
test
rcr
mov
xchg
arpl
push
lret
insb
jb
rclb
pushf
push
sub
gs
cmp
inc
ds
dec
adc
rorl
pop
pushf
pop
mov
adc
sti
movsl
cmp
subb
adc
mulb
xchg
adc
pushf
pop
mov
cmpl
jl
or
jmp
scas
or
jnp
dec
fadds
adcb
xor
push
or
dec
fisttpl
lret
orb
push
rol
in
sub
aam
or
enter
mov
mov
insb
push
sbb
dec
ja
test
fst
and
pop
push
mov
leave
jne
cmp
push
cmp
loopne
mov
out
in
mov
or
je
out
jb
inc
mov
mov
jbe
mov
inc
fldl
data16
lahf
mov
cltd
test
sub
jecxz
mov
std
jg
jo
jl
testb
out
push
or
dec
call
lcall
mov
sbb
divb
out
and
xlat
fdivrl
sbb
stos
cmp
cld
xor
pushf
inc
pop
stos
adc
xchg
pushf
jle
push
lret
je
xor
pop
inc
sub
mov
cld
stos
jecxz
test
inc
les
sbb
jno
or
loopne
rcl
loopne
sbb
inc
or
mov
pop
in
push
movsl
or
addr16
xor
call
cmp
pop
mov
iret
inc
out
xchg
xchg
mov
call
fisubrl
loopne
cmp
call
xchg
arpl
int3
cmpsb
or
cs
dec
ds
lods
imul
daa
scas
into
push
cmc
push
or
push
repnz
pop
wbinvd
cltd
shll
je
dec
call
inc
dec
cvtpi2ps
xor
dec
fistpl
clc
mov
add
inc
lret
jge
loop
rclb
adc
inc
fs
or
divps
loope
dec
in
testl
aad
dec
jle
imul
test
pop
shrl
cs
push
loope
or
pop
and
dec
or
mov
xchg
push
pop
daa
mov
loope
push
in
adc
dec
jecxz
jo
pop
insb
mov
mov
xor
inc
lds
mov
pop
insl
inc
arpl
pop
sbb
shrl
jno
cmp
pop
mov
mov
jecxz
fdivs
push
aad
mov
cmp
cmp
into
and
jl
sub
popa
mov
fildll
push
imul
lods
test
mov
out
movsb
adc
rcr
pop
jle
dec
pop
in
lods
outsl
cwtl
or
xor
ret
add
inc
ljmp
scas
pusha
or
inc
icebp
push
adc
mov
int3
pop
dec
sti
cmp
imul
xor
lods
outsl
fstpt
movl
jg
rorb
jbe
repnz
test
xor
cmc
mov
into
cli
insb
scas
ljmp
popa
outsl
mov
cmp
cltd
js
or
test
imull
test
cs
lds
xchg
mov
push
pop
push
paddb
inc
hlt
add
push
xchg
dec
iret
xchg
dec
or
jns
std
mov
jo
aam
mov
ucomiss
mov
push
aam
lahf
dec
mov
dec
fmuls
les
fwait
lods
sbb
test
mov
pop
inc
js
lcall
lcall
xchg
movsl
iret
pop
pushf
or
pusha
ror
das
mov
sbb
mov
cltd
push
enter
hlt
xchg
cmpsb
mov
inc
scas
sti
mov
nop
mov
ficoml
pop
mov
jne
xchg
ljmp
aas
sbb
outsl
fwait
push
arpl
mov
and
mov
out
rcr
cltd
dec
jae
sub
mov
hlt
cmp
in
ja
mov
push
lock
xchg
ret
dec
lret
xchg
pop
pop
xorb
inc
mov
aas
movsl
scas
or
pop
sub
sub
sti
push
clc
xor
jo
adc
clc
jmp
mov
lock
fisttpll
push
xchg
repnz
push
push
sub
xchg
lock
repz
sahf
popa
jae
mov
jae
ret
inc
fldl
loopne
mov
xor
mov
popf
or
mov
sub
roll
lock
sub
mov
icebp
lcall
repnz
pop
and
loope
addr16
outsl
mov
cmp
xchg
filds
xor
es
jne
test
or
jb
cld
sti
push
imul
sub
enter
mov
jge
jl
scas
mov
mov
add
mov
jb
pop
shrb
push
sti
xor
lret
nop
stc
sbb
movsb
addb
mov
shl
mov
mov
mov
int3
mov
in
mov
adc
mov
std
xor
not
sub
fwait
sub
pop
jle
dec
mov
cmp
mov
pop
mov
mov
outsb
roll
jbe
mov
jns
inc
loop
cmp
imul
dec
add
jg
fisubrl
iret
inc
inc
jle
mov
inc
adc
pop
lret
mov
fcmovnb
decb
shlb
sub
pop
add
adc
jae
sbb
daa
shl
test
pop
mov
lea
or
push
imull
shlb
xor
ret
outsl
leave
in
push
fs
ficomps
dec
or
je
inc
adc
sbb
jnp
mov
mov
push
or
mov
gs
stos
xor
and
aad
aad
jle
push
dec
pop
addr16
adc
stos
adc
into
cmp
pop
push
nop
mov
inc
shlb
insl
sub
repnz
and
out
loop,pn
call
pusha
push
cld
loop
and
out
sti
test
adc
and
add
movb
and
daa
xchg
test
fbstp
push
lods
cmpsb
and
daa
pop
jae
inc
mov
lahf
xchg
insl
mov
dec
lock
test
or
hlt
repz
stos
ljmp
shl
shl
test
mov
jb
outsl
inc
sbbl
cmpsb
stos
sub
movsl
jae
and
ret
inc
dec
ja
dec
mov
fdivrs
sarl
xor
or
lahf
mov
mov
add
negl
push
jnp
ljmp
mov
out
jmp
mov
clc
gs
pop
pop
xor
push
ja
cmp
xlat
cmpsb
dec
js
mov
sub
out
loope
xchg
and
push
test
mov
or
rol
push
fmul
insl
mov
cmp
mov
jno
inc
scas
push
repz
push
xlat
repnz
xchg
xor
lds
mov
cltd
cmp
dec
dec
xchg
sub
fnstsw
inc
ret
out
inc
lods
leave
sbb
sub
sbb
push
cmpsl
xor
aad
ficoml
fmul
ror
loope
push
mov
push
dec
pop
test
shll
mov
sbb
test
mov
aad
andl
xor
shrb
or
stc
mov
xchg
push
fwait
inc
std
jnp
jo
xlat
mull
jecxz
inc
addl
scas
aas
inc
or
adc
fsts
xor
sub
pop
lock
dec
imul
mov
aas
mov
aad
sbb
inc
push
stc
std
je
pop
or
out
cwtl
mov
es
xor
inc
dec
jo
dec
lds
jae
lahf
dec
flds
xlat
jg
lret
sub
gs
scas
push
std
pushf
inc
rcrb
dec
gs
add
sarl
dec
jp
mov
adc
xlat
push
cli
shll
cmpsl
and
push
fwait
out
pop
push
dec
sub
xbegin
mov
daa
xor
test
mov
ror
lahf
adc
addr16
mov
mov
movb
jl
adc
xor
mov
jge
mov
add
stc
or
sbb
mov
sub
add
mov
ret
test
push
in
xor
aad
jl
jbe
or
mov
insl
cmp
into
mov
mul
xor
sub
sub
or
lcall
push
jmp
mov
xchg
not
push
push
sub
adc
or
test
sbbb
jo,pt
fs
je
sbb
lock
cmpsb
and
push
scas
sbb
shll
scas
push
mov
push
fsubrl
scas
call
mov
loope
cli
je
jbe
lods
sub
hlt
ds
jle
in
movsl
fsubrs
daa
xor
shlb
loopne
sub
adc
pop
pusha
subl
mov
add
push
xchg
push
fwait
orl
outsb
mov
xor
mov
gs
xlat
mov
vpsraw
rolb
jecxz
aam
into
xor
or
or
mov
cli
sub
jae
ja
or
pushf
mov
int
daa
fwait
shll
cltd
xorb
imull
or
dec
mov
into
sbb
dec
das
insb
loop
in
or
cmp
mov
mov
shlb
lods
ljmp
xchg
pop
lods
push
inc
pop
mov
or
jno
out
push
testb
xchg
ja
mov
fisubrs
cmpb
popa
mov
enter
repz
pop
cmp
add
roll
fidivs
mov
jg
push
arpl
inc
or
test
push
call
out
mov
mov
addr16
rcl
les
scas
cld
and
mov
pop
pop
pop
leave
pop
or
push
arpl
rcrb
or
mov
add
sbb
fdivl
mov
sbb
aam
ja
mov
movsl
test
push
out
xchg
icebp
shlb
fadd
inc
subl
movsl
and
clc
fistpl
ss
jnp
sub
cltd
inc
notb
dec
insb
and
cmp
sbb
pop
push
mov
shrb
xchg
sub
and
xorb
or
jno
fnstsw
rorb
fistpll
mov
popf
cmp
fs
cwtl
jo
shrl
adc
mov
mov
fwait
cmp
mov
ss
add
call
int3
xor
out
cs
ja
sahf
push
push
lds
sbb
dec
mov
movsb
jns
mov
fadds
pop
sbb
xor
sub
pop
sub
xchg
shll
add
pmaxsw
push
xor
movsb
inc
das
shrb
cmp
mov
and
fldenv
test
pop
mov
mov
ljmp
dec
inc
mov
inc
aam
pop
mov
jp
push
and
out
fwait
cli
adc
cltd
imul
stos
xor
and
jecxz
and
ret
pop
pop
loope
cltd
aad
push
cmp
in
inc
out
push
xor
sbb
iret
jmp
rcll
pusha
sbb
jno
lods
ljmp
inc
jmp
fwait
negl
or
pop
ljmp
orl
ds
fldl
ljmp
and
pushf
jae
out
js
scas
je
jno
mov
mov
mov
pop
jmp
jg
jno
ljmp
scas
mov
out
inc
inc
popa
xor
lods
into
les
clc
arpl
cmp
adc
mov
lock
push
gs
rolb
push
xchg
cs
test
xchg
movsl
decl
sbb
pushf
outsb
cld
jae
cld
imulb
out
xor
jo
das
in
adc
mov
enter
mov
in
push
ss
push
inc
subps
int3
inc
out
shlb
adc
add
mov
iret
sti
adc
ds
lret
outsl
mov
push
out
sub
pusha
rolb
jecxz
fdivrp
pushfw
loop
adc
sti
stc
push
ss
repz
or
add
mov
mov
jne
mov
aam
add
mov
std
adcl
orb
pop
mov
addb
aas
or
xchg
xlat
lds
movsb
pop
mov
sub
lods
push
cmpsl
clc
fsubrs
and
loop
aad
outsb
pusha
lcall
xor
or
add
sub
pop
int3
and
mov
ds
loop
xchg
dec
in
leave
lahf
mov
clc
sahf
shll
inc
imul
test
mov
je
sbb
inc
cmpsl
cmc
ja
or
mov
and
in
push
ss
stos
sbb
pushf
aaa
pop
xchg
icebp
fsubrs
aaa
imul
cmc
scas
fcomip
and
hlt
jg
mov
popf
cmp
or
push
fsub
lock
lods
cmp
push
push
lods
jae
fwait
xchg
inc
pop
and
inc
cmc
rolb
dec
xor
mov
test
and
xchg
sub
icebp
rcrl
dec
hlt
adc
sbb
lods
add
scas
push
loop
add
rclb
out
jmp
ds
mov
fwait
cmc
lods
pushf
pop
lock
iret
test
and
loop
xchg
test
popa
mov
cmp
ret
aad
ss
clc
fcoms
repz
pop
fnstsw
test
and
adc
fiadds
out
in
lods
insb
mov
mov
push
cmp
test
xchg
inc
vphsubbw
out
cmpsb
jle
lock
xor
movsb
test
into
ret
mov
call
push
jne
sub
pop
sub
cmpsb
insb
cld
sub
mov
fidivs
popf
push
aas
mov
mov
lods
orb
sub
rolb
xchg
fstpl
popa
cmp
dec
imul
add
clc
lret
ljmp
jge
mov
stc
stc
sbb
out
ficoms
jmp
fdivrp
idivb
add
pop
xor
sbb
mov
cs
clc
test
pop
add
push
daa
dec
jg
fwait
loopne
mov
movsb
bound
ret
mov
mov
lret
adc
sbb
pop
shl
lods
sub
nop
cmp
setl
or
mov
jbe
sbb
add
pushf
imul
pop
pop
insb
enter
or
nop
sti
in
add
cltd
aaa
inc
push
in
leave
shrl
pop
insl
jns
movsl
bound
aaa
and
push
imul
lret
out
imul
mov
xor
and
ljmp
arpl
push
push
sub
imul
rolb
and
inc
popa
dec
pusha
fstl
sbb
inc
mov
sub
dec
rcrl
push
push
mov
push
je
mov
shrb
adc
jbe
mov
sbb
leave
cmp
and
lods
mov
pop
lods
jle
sub
or
jb
inc
sbb
es
idivb
jae
inc
or
or
sub
popa
fistpll
outsb
dec
sbb
test
sti
xchg
push
jmp
fnstcw
daa
sub
mov
and
js
int
mov
cwtl
pusha
sbb
sub
pop
call
inc
iret
pop
scas
sub
push
arpl
out
xlat
in
mov
cmp
mov
push
adc
repz
sub
dec
mov
adc
inc
mov
cmp
push
js
rcrb
sbb
xchg
sub
adc
in
call
shr
xchg
lods
in
stos
sub
aaa
sbb
push
inc
int
push
rcrb
xor
dec
fisubrs
adc
inc
mov
xchg
xor
cmp
push
dec
push
jne
xchg
jecxz
sub
sub
in
lret
aas
ljmp
inc
into
mov
addl
mov
mov
dec
add
pushf
test
xchg
out
into
leave
test
rorl
xor
outsl
dec
fmull
xlat
jb
lea
shrl
and
hlt
inc
mov
notl
add
mov
cmp
push
dec
sub
ror
in
xor
xor
jge
pop
cmp
in
daa
xchg
jns
fdivrs
jno
cmpl
fmull
out
xchg
mov
jne
xor
fadds
mov
cli
xlat
cmp
inc
aam
ret
adc
fisubrl
mov
ret
mov
daa
pushl
mov
mov
pop
xlat
shrl
jbe
gs
push
xor
loopne
aaa
add
push
fidivrl
jb
add
adc
inc
cli
call
jg
adc
pop
pop
mov
mov
addb
imul
insb
bound
subb
outsl
xor
cli
xchg
push
xlat
fimull
sbb
mov
inc
loopne
out
or
enter
dec
or
pop
push
addr16
sbb
cmp
adc
and
pop
imul
mov
stos
lods
outsb
roll
dec
popf
pop
mov
add
test
nop
scas
imul
dec
pop
xchg
push
fs
sahf
push
ljmp
cld
jle
pop
pushf
add
push
lea
cmp
js
cmp
and
jne
icebp
out
arpl
mov
roll
clc
xchg
pushf
scas
sub
xchg
xchg
mov
mov
aas
xlat
lea
popf
or
jle
ficompl
out
add
aam
imul
mov
je
sbb
cwtl
sbb
in
adcl
addr16
mov
mov
fldcw
and
out
iret
mov
mov
mov
mov
stc
mov
inc
repz
test
lods
inc
inc
stos
mov
jno
cmp
xor
jb
cld
mov
nop
es
sub
orb
sbb
ja
jle
inc
aam
nop
fsubl
leave
jnp
jge
in
ja
stos
js
enter
sbb
lret
fisttps
mov
lcall
mov
push
cltd
mov
inc
rcrb
lds
mov
sbb
dec
pop
fsubp
push
loopne
das
and
mov
pop
push
add
int3
adc
fidivs
imul
inc
movsb
jne
pop
insb
and
push
loope
xchg
sbbb
sbb
jmp
cld
xor
or
aam
dec
repnz
cmp
out
nop
lret
and
xchg
fstpt
pushf
sbb
adc
shlb
adc
das
dec
pusha
sub
mov
mov
call
cld
pushf
mov
mov
push
shll
add
inc
or
pop
cmp
xchg
or
hlt
adc
fisubrs
negw
mov
push
lods
shll
es
pop
sbb
ja
roll
xor
lods
jb
adc
rcr
sub
int
cmpsl
lea
cmpsb
aam
les
ret
loopne
adc
lods
int3
or
xlat
xchg
push
pop
add
clc
xor
add
xor
in
push
push
ljmp
dec
rorl
mov
mov
xchg
je
mov
adcb
push
mov
mov
sub
fs
or
repnz
push
cmp
cmp
lea
in
mov
daa
push
add
and
sub
insb
pop
jns
or
cmp
data16
icebp
mov
out
lea
push
orl
sub
imul
jae
xlat
push
pop
je
inc
mov
or
repnz
push
sar
out
cltd
pop
not
pushf
jns
leave
jg
add
and
ljmp
xlat
loope
sbbl
dec
lds
add
sbb
jmp
add
xchg
movsb
cltd
or
cmpsb
or
mov
in
loope
ret
notl
imul
inc
fistps
sub
mov
xor
mov
idivb
in
mov
in
xchg
push
xchg
lea
cmp
or
add
lahf
pusha
mov
jbe
movsb
lret
popa
popf
cmp
arpl
rolb
and
and
cmpl
jp
js
or
hlt
aaa
sbb
jbe
adcl
sub
out
push
pusha
xor
cs
xchg
push
es
push
repz
scas
test
gs
test
push
mov
mov
or
pop
lcall
cmp
cmp
ljmp
or
iret
jae
jb
and
into
loope
dec
or
dec
add
aam
mov
xor
dec
mov
xorb
push
shl
imul
lret
fisttpl
ja
jg
inc
mov
jns
and
shrb
dec
es
mov
pop
cmp
xlat
shlb
ror
push
shrb
and
ss
sarb
push
mov
dec
je
or
sub
outsb
int3
subl
clc
push
gs
adc
jo
lock
xor
andl
add
add
aaa
dec
ret
push
in
dec
js
sub
insb
insl
or
sub
mov
pop
add
xor
xchg
ret
and
adc
movsb
or
inc
in
roll
and
jge
lock
loopne
fisttpl
add
pop
out
and
lods
jle
push
loope
jg
bound
mov
subb
cmp
inc
sti
xchg
loope
aaa
cltd
and
sbb
jae
mov
sar
cmp
data16
push
mov
int3
xchg
shlb
adc
ret
jne
inc
scas
rorl
xor
push
jecxz
sbb
mov
sbb
out
lods
daa
xor
adc
add
mov
mov
pop
pop
mov
je
and
repz
mov
xor
push
or
cltd
add
adc
sub
mov
push
push
in
jmp
out
in
cld
add
inc
push
mov
pop
mov
dec
movsl
or
aad
or
jecxz
jae
test
pop
mov
and
out
sbb
fimuls
lock
or
mov
pusha
xchg
je
xchg
cli
std
ja
pop
out
or
mov
inc
leave
call
jae
nop
clc
adc
xor
loopne
push
pushf
jp
pop
sbb
mov
cmp
cmc
nop
mov
fadds
jecxz
and
mov
into
out
fistpll
dec
mov
cmpsl
push
jns
mov
mov
outsl
or
into
sar
pop
mov
into
and
cmp
les
inc
lock
mov
jecxz
sahf
sub
push
and
icebp
leave
sub
clc
icebp
add
jno
daa
repnz
jns
into
cmpsl
outsl
cmpsl
adc
xchg
add
mov
out
add
test
pushf
cmp
in
and
add
mov
pushf
cmc
test
mov
cmp
lds
fstl
dec
pop
lock
scas
js
mov
inc
mov
enter
fwait
pop
jmp
iret
jmp
push
cmpsl
mov
in
sub
mov
popf
jno
mov
aam
dec
aad
daa
sbb
je
ret
dec
in
jno
test
sub
xor
das
aam
and
pop
dec
xor
cmpsb
aas
shll
pop
jb
sti
adc
sbb
loop
dec
dec
mov
dec
cmpsl
dec
inc
jecxz
shlb
dec
insl
push
icebp
andb
pop
xchg
and
sub
in
cmp
mov
sbb
jbe
cmpsb
or
scas
xchg
xor
ret
repnz
imul
fistpl
mov
add
mov
clc
jg
mov
push
inc
aad
clc
mov
fisttpl
jge
inc
mov
sbb
inc
outsl
roll
jbe
gs
fildl
shrl
xchg
jno
mov
cwtl
and
mov
add
dec
add
iret
sbb
xchg
push
loopne
in
out
xchg
cmp
int3
shl
fists
xchg
sub
or
push
cmp
addb
cwtl
repnz
nop
and
cltd
and
mov
imul
shlb
sbbb
sub
lahf
xchg
and
das
out
loopne
hlt
enter
mov
loop
notb
push
stos
cmp
cmp
mov
pop
lret
mov
mov
dec
in
jae
pop
ficoml
push
cmp
fnstsw
cmc
xor
aaa
pop
push
data16
mov
popf
jo
aad
add
or
cmp
int3
rolb
stc
push
jne
xor
mov
cld
repnz
imul
loope
aam
cld
iret
outsl
insl
hlt
sbb
ds
or
mov
rcl
sub
stc
loopne
mov
arpl
out
aaa
xchg
pusha
ficoms
jbe
movsl
mov
dec
jg
fsubl
mov
or
popf
mov
mov
fisttps
loopne
sbb
jge
sbb
aam
jecxz
leave
push
mov
aad
sti
arpl
mov
mov
movsl
insl
movb
sar
mov
push
addps
fs
jnp
cld
sar
jns
mov
push
sbb
lock
lea
mov
int
popa
ja
sbb
out
popa
ret
subl
push
jae
jecxz
xchg
int3
push
lds
aaa
cltd
mov
lock
mov
stos
jae
sub
xchg
add
jo
lds
mov
push
xchg
pop
jno
jbe
stos
xor
pop
sbb
clc
outsl
cmc
or
push
js
dec
stc
xor
iret
push
mov
js
jmp
add
ret
test
fucomip
sbb
rolb
xlat
loop
cli
movsl
daa
orl
inc
xchg
push
add
pop
fadd
mov
jmp
ret
and
sti
add
nop
dec
cmp
sete
or
jne
js
testb
insb
add
xor
jns
dec
xor
xchg
cwtl
in
lods
pop
ljmp
pop
sti
xor
sub
cs
cmp
jae
push
inc
clc
repnz
pop
divl
jo
aad
or
mov
cmp
adc
in
popf
dec
sub
pushf
and
mov
dec
faddp
sub
pop
out
data16
inc
aas
xchg
pop
imul
push
lea
push
aaa
lods
inc
cs
mov
push
pop
lret
lods
jo
shrl
int
andl
sahf
aas
inc
adc
fdivs
gs
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
ljmp
pop
bound
cwtl
in
rcr
gs
push
jo
fisubl
fisttpl
adc
add
xchg
push
pop
jns
mov
mov
out
gs
pusha
xchg
scas
and
test
and
daa
and
lods
lds
nop
movsl
lods
or
sti
push
mov
xor
sahf
je
iret
ss
data16
xchg
test
sub
andl
inc
out
xchg
xchg
dec
insl
mov
adc
mov
mov
shrb
push
sti
mov
hlt
push
and
xor
sbb
rcl
lret
push
enter
mov
mov
orl
add
xor
flds
jl
push
or
sub
jo
or
pop
mov
idivb
arpl
loop
stos
mov
and
mov
adc
dec
jp
push
push
or
add
push
lods
mov
push
push
inc
xchg
cmpsb
in
arpl
xchg
testl
add
push
pop
add
xchg
add
int3
cmpl
pop
jge
aas
xlat
or
dec
stos
dec
mov
jl
scas
mulb
add
out
xchg
repz
ss
test
je
inc
push
test
inc
les
leave
outsb
inc
adc
lods
mov
pusha
push
xchg
mov
cltd
cmc
sbb
sbb
shlb
mov
adc
aam
lcall
pop
xorl
stos
inc
pop
lcall
jns
jae
cld
xchg
xchg
js
jle
jge
pop
xchg
mov
cmp
mov
fildl
jnp
mov
xor
xchg
scas
outsl
cmpsb
lret
pushf
jbe
outsl
xor
dec
dec
cli
xchg
out
hlt
sub
or
lods
dec
push
or
lret
aad
out
pop
dec
jg
xor
add
aas
mov
cmc
push
mov
mov
adcb
fisubrs
jmp
sbb
push
cmpsb
push
jbe
mov
push
jecxz
and
sbb
xor
sarl
jg
xor
xchg
mov
aaa
sbb
std
cli
insl
sub
push
xor
cmp
in
iret
mov
in
mov
pop
lods
xor
push
push
repz
push
and
push
dec
xchg
pop
jne
bound
je
push
cmc
sub
inc
push
cmp
adc
test
or
mov
loop
loop
data16
push
inc
mov
push
sbb
xchg
insb
daa
into
add
push
enter
inc
sahf
fnstenv
sbb
mov
daa
push
test
adc
jae
jno
xorl
aad
mov
and
pop
nop
xchg
jg
jmp
xor
cmpsl
dec
mov
mov
and
outsl
shlb
push
cwtl
mov
pop
pop
or
mov
shlb
adc
lcall
or
pop
xor
cmp
push
ss
push
scas
jo
push
imul
fcomps
cs
xchg
xchg
inc
pop
in
lret
pushf
pop
aaa
clc
lahf
pop
out
mov
clc
ja
ss
ljmp
out
jmp
cwtl
fstps
or
pop
add
andl
jo
sbb
inc
sbb
push
cmp
and
push
decl
jmp
imul
lcall
cmp
in
aaa
add
pusha
std
dec
test
out
loope
cmc
fldl
inc
pop
mov
dec
jnp
ds
dec
leave
and
sbb
sub
mov
xadd
xchg
push
insl
cli
or
sbbl
jecxz
push
sbb
outsb
test
mov
cwtl
mov
aaa
pusha
test
int
or
push
testb
jmp
aas
sbb
cli
mov
push
test
add
cmp
push
jp
jne
out
lcall
mov
fnsave
add
lahf
jp
mov
mov
les
inc
mov
xchg
imul
ret
scas
icebp
jb
push
push
xchg
out
jecxz
cltd
outsl
outsb
enter
orb
scas
ficoml
int3
mov
sbb
or
ja
int3
int3
out
pushf
jecxz
xlat
fisubrl
dec
ficoms
inc
ljmp
jecxz
test
jne
push
jns
fdivrs
xchg
fnstsw
pusha
cmp
jp
push
sbb
cmp
cmp
lods
xchg
mov
sub
dec
hlt
or
or
hlt
jnp
dec
outsl
sbb
fs
aam
out
adc
je
movl
fldl
nopl
or
pop
ja
cmp
sbb
jge
jp
test
ret
shrl
pop
test
jnp
inc
sahf
pop
xchg
shl
stos
pop
fbstp
mov
sub
aad
testb
mov
jae
xor
aad
sub
cmp
or
fsubs
jns
adc
sbbl
add
sub
js
jbe
pop
ds
pop
cmc
sub
mov
fimull
push
shl
xor
fisttpl
rcl
xchg
mov
icebp
pop
cmp
lret
fidivs
pop
or
in
dec
xchg
in
xchg
cltd
addr16
add
fisttps
mov
hlt
mov
repz
adc
and
dec
movsl
cmp
cmpsb
test
loop
fcomps
insb
pop
jp
mov
mov
subb
cmc
movsb
mov
xchg
ficompl
sti
dec
sti
orb
push
das
pop
xchg
enter
fs
stos
xchg
dec
ret
pop
jbe
mov
jno
xchg
orl
sub
push
xchg
mov
ss
nop
cld
clc
add
jmp
pop
js
pop
adc
in
or
add
cwtl
and
inc
bound
jnp
push
xchg
push
push
stos
daa
das
aad
std
aad
add
sbb
mov
test
jecxz
push
and
outsl
mov
push
arpl
cmp
dec
call
mov
mov
add
test
enter
fucomi
shlb
int
outsb
push
repz
rcrb
std
xchg
adc
pop
iret
outsl
dec
push
push
cld
sub
test
push
sub
in
cmp
in
adc
fisubl
jmp
test
inc
rcrl
or
js
addb
gs
popf
orl
sbb
shrb
sbb
xlat
icebp
pop
or
dec
dec
push
push
insl
daa
cmp
pop
or
outsl
out
adc
sub
pop
xor
push
es
and
cltd
incl
popf
cli
mov
sbb
jecxz
rcrl
rcrl
xor
es
cmp
in
test
cmp
lods
psubq
aaa
aad
sub
jmp
test
clc
pop
sub
xchg
jo
push
fwait
mov
add
int
ret
jmp
shll
out
jp
call
mov
mov
pop
or
adc
arpl
jo
jle
inc
sahf
jg
insl
jmp
into
jne
and
lcall
mov
pop
sbb
inc
adc
xchg
add
sub
ret
xlat
xor
dec
sub
clc
nop
call
ret
push
jmp
mov
leave
loope
inc
or
sub
or
leave
xchg
push
jg
inc
arpl
or
push
inc
pop
cmp
cmp
mov
cmpsl
iret
pcmpgtb
and
stc
test
xor
inc
daa
repz
cmp
cmpsb
aaa
icebp
add
cmp
aad
cld
idivb
hlt
dec
mov
sbb
jmp
mov
insb
dec
in
add
and
inc
popa
inc
jnp
ja
sbb
add
mov
mov
inc
adc
add
sub
mov
jl
pusha
shll
sub
cmp
mov
ret
sbb
cmp
out
mov
int
pop
psadbw
jl
push
dec
insb
repz
pushf
cmc
shl
push
lods
fidivs
push
imul
dec
cmc
adc
stc
inc
divb
nop
sub
add
or
into
insb
sub
cmp
out
cmp
bswap
mov
fmul
orl
test
mov
jae
and
ror
stc
jp
stos
pop
adc
push
sbb
and
enter
sarb
mov
dec
leave
fwait
cwtl
mov
jb
shl
push
mov
lods
jg
jge
outsb
mov
mov
or
imul
xchg
bound
lahf
cmp
add
fisubl
cmp
test
mov
mov
dec
xlat
mov
cmp
adc
test
in
and
push
jge
aaa
add
cmp
jo
roll
leave
in
push
xchg
push
ljmp
push
mov
in
fwait
jg
fmull
push
mov
repz
add
je
dec
lret
cmpsl
aam
mov
ds
int3
mov
repz
mov
je
out
pop
test
push
jecxz
shrl
les
das
jl
loopne
dec
lock
gs
pop
pop
call
adc
js
cld
fcomi
xchg
xor
test
fbstp
push
xchg
xchg
pop
imul
cs
enter
push
or
into
das
fmuls
dec
or
addr16
pop
pop
std
addb
push
xor
lea
cmpl
xchg
lods
xchg
out
or
mov
loopne
js
push
jp
or
repnz
lahf
add
mov
outsl
inc
mov
aad
scas
jge
out
out
or
mov
ds
lahf
sbb
aam
in
sub
sub
jmp
inc
mov
add
and
adc
sub
stos
stc
ss
scas
imul
arpl
loop
test
cs
int
or
xor
cmp
add
insl
inc
inc
mov
sub
sub
lds
or
adc
jns
nop
xchg
dec
insl
adc
xor
mov
sbb
ret
idivb
mov
ret
and
icebp
mov
pop
aam
jb
cmpsl
scas
sbb
ret
or
pop
dec
movsl
fidivl
fs
xchg
cli
cs
sti
add
outsb
movsb
sbb
outsb
ljmp
or
xchg
push
addb
int
mov
xor
cmc
push
mov
xlat
sbb
jbe
loop
mov
cmp
js
mov
mov
push
test
pop
daa
xchg
mov
mov
sbb
insb
xor
loopne
out
mov
xor
decb
bound
mov
rcr
ret
xchg
lahf
stc
push
fidivs
stos
mov
ret
inc
icebp
test
movsb
or
jno
mov
adc
add
xlat
lahf
mov
pushf
insl
push
fldl
add
inc
es
adc
adc
and
aad
scas
insb
js
jmp
add
aad
aaa
xchg
int3
iret
enter
je
push
inc
xchg
xchg
jnp
dec
cmpsb
and
mov
adc
jnp
sub
sbb
movsb
cld
jno
pop
shll
dec
jp
int3
in
push
push
mov
clc
cld
das
mov
cltd
out
xchg
cmp
cs
mov
jge
aad
push
mov
lret
add
jb
xchg
xchg
mov
or
xchg
aaa
jle
jo
popf
pop
sbb
je
rorb
shll
add
test
test
lds
popa
out
lcall
imul
push
pand
jge
fwait
adc
dec
xlat
cmp
jo
and
pop
andl
in
sbb
adc
xchg
icebp
sbb
fcompl
popf
test
test
fists
or
js
jmp
int
ret
movsl
insb
jbe
pop
out
or
cwtl
push
adc
loope
jb
add
mov
test
inc
jb
sbb
inc
push
push
aam
inc
jo
cmc
sbb
sub
scas
sbb
jg
js
aad
dec
stos
test
and
dec
inc
mov
fstps
mov
inc
lock
fisttpll
pusha
pop
lcall
cld
jbe
jp
bound
add
adc
lcall
mov
or
mov
xlat
cmp
inc
xchg
gs
mov
mov
arpl
dec
leave
aaa
jae
test
nop
cli
ficoml
imull
add
sub
or
xor
ds
xchg
jle
xor
mov
test
gs
jle
or
sub
xor
mov
outsl
sbb
mov
jg
lods
arpl
in
out
jle
dec
aam
or
push
xor
popf
mov
or
lods
cli
shrb
fdivl
repz
std
adc
pop
repz
fs
sahf
insl
test
adc
test
in
iret
loopne
cmp
setae
cmp
dec
in
dec
mov
shlb
call
stc
mov
icebp
and
pushf
aam
xchg
jmp
mov
and
inc
stos
mov
popl
into
xchg
outsb
cmp
imul
sbb
ror
repz
pop
and
movsb
ret
daa
push
lret
push
inc
in
out
inc
lea
mov
das
push
dec
in
and
or
cs
cwtl
xor
dec
arpl
or
and
sbbb
inc
push
dec
fcomp
pop
mov
mov
pop
lcall
dec
shrb
mov
mov
adc
mov
decb
inc
in
sahf
sub
lea
js
je
lcall
jl
cmp
push
adc
into
data16
ret
adc
sti
jmp
aaa
push
repz
lahf
js
and
lcall
out
test
and
jo
and
ret
mov
sbbl
jp,pn
scas
pop
sub
ficoml
push
inc
cs
mov
in
mov
add
mov
test
icebp
push
test
je
cli
jo
cmp
enter
push
orb
fisttpll
call
ja
mov
jecxz
adc
mov
insl
mov
mov
sete
sub
or
repz
xor
lahf
inc
ds
shl
sub
sbb
jmp
inc
loop
subb
xlat
lcall
dec
loopne
or
rorl
fcoml
xchg
cmpsl
fwait
je
add
dec
fsts
sbb
dec
and
push
out
lea
aad
mov
and
cs
test
shr
jecxz
inc
sub
mov
enter
pushf
mov
jmp
out
sbb
xchg
cmpsb
iret
sarb
pusha
mov
mov
push
xchg
push
push
in
jg
mov
sbb
xchg
sbb
xor
sahf
jp
xor
lods
pop
cmc
push
cli
jbe
lcall
push
frstor
movsl
pop
xor
lcall
cmovnp
jnp
lods
ds
and
jmp
and
mov
mov
jge
adc
ret
jle
and
push
lods
mov
pop
mov
hlt
mov
mov
mov
inc
test
mov
std
imul
mov
mov
inc
std
cmp
jmp
lods
pop
popa
adc
inc
mov
lods
rorl
cld
out
out
adc
adc
int3
addw
imul
lods
push
adc
or
mov
or
or
ret
cli
cwtl
popa
mov
fstps
adc
lret
mov
leave
sub
nop
sub
pop
rorb
cli
in
lea
lret
inc
mov
inc
les
sbb
pop
repz
or
xlat
dec
das
fsubl
rclb
xchg
les
dec
jnp
mov
loope
mov
pushf
lea
xor
jb
cld
loop
into
sahf
push
adc
movsl
mov
movl
jl
ret
mov
add
aam
in
pop
fcomi
push
jb
ljmp
addr16
jno
sub
jno
push
lcall
fwait
and
fsubs
hlt
jbe
and
mov
sub
xchg
jecxz
lods
popa
stos
or
fwait
mov
lret
cmp
inc
mov
outsl
mov
xlat
push
dec
scas
jp
dec
sub
xor
shll
popa
or
in
lds
push
jo
jnp
inc
aad
dec
mov
sbb
mov
dec
leave
adc
and
lods
mulb
cwtl
inc
pop
scas
mov
mov
pop
add
xor
fcoml
sub
stos
xchg
xchg
into
int
js
xchg
into
push
cs
hlt
mov
xchg
stc
xor
fisttpl
fldenv
mov
inc
cmp
push
jo,pt
mov
or
push
pop
add
loopne
movsl
arpl
in
loop
and
xor
sub
mov
xor
jle
xor
aaa
inc
aam
ud2
outsl
and
jecxz
rcrb
test
pop
aad
insb
inc
dec
xor
aas
imul
xor
sbb
xor
mov
cmp
xchg
gs
leave
dec
jecxz
adc
sub
lods
cmp
aaa
xor
mov
xchg
push
pop
mov
xchg
nop
push
or
inc
xchg
ljmp
xor
scas
jae
ret
outsb
movntps
xchg
jl
js
lret
data16
and
pop
mov
jge
shrl
out
xlat
sti
or
insb
or
in
je
test
pop
aam
in
std
add
sub
inc
lahf
cwtl
sbb
mov
xorl
adc
data16
sub
push
xchg
pop
pop
inc
sti
push
sub
lret
mov
mov
mov
adc
and
or
mov
ds
fiaddl
xchg
push
xchg
jl
pop
scas
hlt
mov
stos
pop
iret
cld
xchg
add
jno
leave
cs
int3
js
scas
aaa
lea
rep
dec
inc
bound
adc
adc
mov
test
jae
pop
pop
loope
ljmp
test
mov
cmpl
mov
mov
push
sbb
jbe
jmp
dec
add
std
std
sub
leave
movsl
cmp
std
push
clc
fidivrs
xlat
cld
outsb
ja
pop
pusha
lea
push
aad
push
fsubrl
out
aam
movb
ret
sub
mov
adc
les
es
cmpsb
cltd
or
es
inc
pop
push
cmp
mov
xor
sbb
adc
cwtl
test
andb
lods
mov
dec
repz
mov
mov
flds
gs
aam
fcoms
and
in
btr
add
stos
cmp
dec
aad
call
push
xchg
add
or
popf
xor
xchg
sub
pshufw
sub
addr16
push
xor
mov
and
icebp
stos
fimuls
in
popa
xchg
push
lcall
dec
int
into
ror
mov
outsb
mov
fisttpl
mov
aam
pop
add
lcall
pop
sbb
push
aam
stc
mov
shl
roll
push
pusha
add
jnp
cli
cmp
scas
inc
es
push
mov
sbb
in
cmpsb
xchg
jle
scas
stos
shlb
out
sti
jle
mov
mov
ffree
pop
mov
xchg
xchg
fdivrs
mov
dec
out
pop
aad
pop
or
fdivrs
mov
jnp
sub
pop
loope
shll
sub
cmp
enter
decl
scas
adc
ljmp
call
push
mov
jnp
xor
cltd
sbb
inc
jl
dec
lea
sub
outsb
fbstp
fwait
or
or
mov
cmp
sbb
jbe
xor
sub
gs
push
dec
lcall
into
xor
cmp
sbb
outsb
loop
xchg
pop
stos
std
mov
out
mov
adc
in
jge
add
rcrl
mov
mov
lcall
cmpsl
cld
les
sub
out
push
lock
mov
push
add
mov
xchg
cli
mov
sbb
lahf
pop
dec
lahf
cmp
mov
mov
ss
nop
cmpsl
add
mov
push
push
or
movsl
ljmp
or
add
jg
cmp
ret
out
or
pop
hlt
mov
add
rclb
mov
inc
inc
sbb
aas
cli
stos
jbe
cmpsb
push
jns
xor
rclb
jnp
xchg
cmpsb
mov
sub
imul
addr16
or
fists
call
push
add
dec
sub
or
push
mov
fcompl
outsb
add
jge
lock
pop
mul
inc
or
daa
sub
cmp
loopne
scas
push
inc
loope
roll
in
mov
and
rcrb
mov
and
mov
pusha
cli
or
fnstsw
fistpll
hlt
dec
xor
jecxz
stos
ret
jnp
add
pop
cmc
dec
mov
inc
sbb
xchg
das
mov
icebp
xchg
mov
dec
adc
cmc
stos
dec
sbb
fcmovnu
fiadds
aaa
pushf
xor
lahf
aaa
xor
in
jbe
mov
sbb
fcompl
dec
daa
push
lock
arpl
adc
fdivs
pop
mov
mov
sbb
xchg
push
adc
fildll
jnp
mov
cmp
jg
mov
cmp
mov
outsl
ret
add
jns
mov
lods
hlt
push
mov
loop
cs
cmp
inc
and
cmp
push
jno
push
testl
ja
or
fcmovnbe
cmp
leave
inc
cmpl
pop
mov
sub
ds
addr16
out
lods
or
pop
cmp
or
arpl
ja
dec
mov
sub
jb
mov
cmpsb
sub
dec
dec
dec
pop
cmpsb
test
sha1nexte
loopne
cmp
sbb
fidivrs
sbb
in
fisubs
mov
popf
mov
ljmp
sbb
arpl
inc
mov
scas
inc
in
cmp
hlt
push
cmc
mov
cs
inc
movsl
dec
ret
dec
xchg
xor
rolb
decl
ror
inc
xchg
xchg
mov
outsb
into
jae
push
rorl
in
loop
nop
mov
add
jo
fstl
mov
adc
push
and
jl
dec
cwtl
aaa
ja
sbb
mov
and
clc
fdivl
lcall
add
shrl
test
in
cltd
pop
mov
pop
popl
sbb
xchg
fimull
xchg
xor
xchg
mov
test
and
shll
fsubs
mov
scas
loopne
mov
sbb
cli
popa
int3
les
mov
lods
addb
aaa
nop
test
and
mov
adc
jns
sbb
gs
test
pop
push
cmp
sub
and
ljmp
aam
aam
mov
jle
mov
jle
jnp
xchg
pop
xchg
in
enter
js
mov
jno
testl
dec
push
les
jmp
js
jbe
inc
scas
fstl
pop
cmp
jmp
repnz
jbe
pop
and
add
push
mov
xchg
and
mov
xlat
imul
scas
gs
int
jne
cld
jge
push
inc
sub
xchg
jnp
iret
mov
lea
fwait
popf
mov
or
or
push
dec
icebp
aad
dec
cmp
xchg
inc
mov
add
jp
adc
test
movsl
sbb
mov
js
rol
shl
test
mov
mov
jmp
xor
dec
nop
cs
aaa
xor
add
push
pop
push
adc
mov
lea
adc
stc
inc
cwtl
adc
testb
and
sub
or
jbe
shlb
pop
fucomi
jnp
std
add
rorl
fists
test
jl
cmp
and
sbb
adc
xchg
push
cmp
pop
jg
inc
adc
sub
and
and
and
fs
xchg
fisttpll
aam
repnz
inc
movb
push
stos
jb
pop
add
mov
xchg
xchg
je
jecxz
outsb
scas
sbb
xchg
or
cwtl
sarl
pop
mov
std
push
das
push
push
es
inc
adc
lret
stos
sub
outsl
je
stos
inc
out
pushf
cltd
ja
and
push
lcall
repnz
call
int
fimuls
addr16
add
test
lea
sbb
fbstp
sbb
out
xchg
jle
jl
mov
fsubrp
push
dec
mov
ficoms
hlt
lods
jg
jge
shlb
mov
dec
scas
pop
movsl
dec
xchg
mov
add
push
insl
xchg
and
dec
push
fidivrl
rolb
data16
ret
dec
xchg
enter
stos
in
inc
lock
and
sbb
scas
cmp
mov
sub
aaa
jo
sub
sub
push
add
enter
loop
ljmp
enter
sub
adc
iret
test
dec
mov
pop
addl
icebp
cld
daa
jmp
and
xor
movsb
subb
jae
dec
ljmp
repz
add
or
test
fsubrs
xlat
jmp
push
imul
mov
push
icebp
lea
insb
mov
xchg
mov
ja
stos
das
lret
mov
sbb
pop
mov
or
dec
jno
aad
jo
xchg
arpl
jae
cmp
ret
in
mov
subb
pop
push
fists
lea
lock
cmp
adc
fisttpll
jne
mov
addl
in
xor
sbb
lahf
popf
dec
bound
dec
push
cmpsl
das
cmp
and
test
sub
dec
xchg
fs
pop
inc
cmp
jns
or
pop
pop
iret
in
xchg
cli
adc
test
and
inc
loopne
mov
push
or
hlt
mov
add
xor
pop
arpl
dec
add
sbbl
test
enter
fwait
dec
xor
cmp
mov
mov
sbb
push
mov
pop
lods
orl
pop
sti
lcall
lds
cmp
pop
xor
scas
movsl
push
sti
mov
cld
inc
aad
lret
imul
cmpb
or
xchg
xchg
popa
inc
xor
pop
push
push
inc
xchg
clc
jbe
sub
mov
mov
mov
cmc
ljmp
pop
filds
sbb
mov
out
pop
call
cmc
outsl
mov
mov
add
scas
in
push
xchg
data16
cs
out
dec
push
jne
jle
push
cld
ss
xorl
lock
ds
push
lods
mov
mov
andl
sbb
rorb
incb
add
rolb
subl
hlt
cmp
scas
hlt
dec
repnz
mov
sub
sub
dec
in
and
inc
cwtl
wbinvd
lcall
cmp
fisubs
adc
roll
pop
mov
aad
es
fnstcw
sbb
lods
ljmp
negl
scas
push
mov
or
lret
and
pop
test
mov
inc
jge
mov
filds
push
movsl
sub
add
mov
sub
aam
mov
lret
sahf
adc
or
adc
and
jno
test
sbb
mov
add
std
mov
ljmp
jg
mov
test
fnstenv
and
push
and
pop
sub
cmc
dec
dec
cld
insb
popa
pusha
repz
add
cmp
jge
pop
sbb
xor
cwtl
xlat
sub
popf
sub
inc
out
std
jbe
pushf
sbb
and
xchg
cwtl
dec
inc
dec
push
mov
jae
daa
outsb
fldt
lret
negb
mov
mov
int3
fdivp
ds
push
inc
pop
jno
stos
xchg
scas
pusha
pusha
shr
insb
dec
fcomps
inc
sub
scas
adc
push
xlat
and
dec
pop
pop
xor
ja
fsts
insb
push
pop
in
leave
pop
push
push
xor
stos
cli
or
ja
lea
ja
clc
pop
mov
xchg
cmc
jne
sub
cmc
xchg
push
out
jnp
loopne
add
fadds
loope
dec
insb
shlb
cvttps2pi
mov
aaa
push
out
lret
add
and
jbe
mov
aam
jne
mov
or
inc
stc
mov
cmpsl
push
adc
mov
inc
lret
add
out
frstor
dec
xchg
fsub
push
push
data16
sub
mov
push
fisttpll
mov
lahf
arpl
sbb
rorb
push
dec
lahf
jne
mov
adc
cwtl
mov
filds
loop
push
dec
imul
sub
aas
pop
mov
pop
xchg
cmp
call
jns
adc
add
push
cmp
mov
cmc
fdivl
sarb
ljmp
cwtl
or
lret
or
bound
mov
jnp
es
fld1
stc
in
roll
fldl
jb
fstp
lods
sub
sub
dec
adcl
idivb
and
xor
pop
mov
push
inc
xor
dec
adc
inc
jae
repz
push
inc
dec
add
push
out
fisubs
mov
out
orl
test
push
inc
xor
das
sub
and
cmpsl
xchg
xchg
insb
shrl
mov
in
loopne
and
loopne
jp
dec
mov
aas
mov
pop
int3
insl
mov
or
inc
scas
repnz
xchg
xchg
mov
outsb
testb
cmp
mov
icebp
dec
shr
sbb
dec
outsb
push
xlat
push
dec
cmpl
xor
cmp
and
cmpsb
xor
out
xor
pop
pusha
xor
sbb
xchg
shrb
mov
or
mov
rcrl
push
shrl
mov
aaa
mov
out
pop
mov
or
popf
or
sub
adc
call
fidivrs
sbb
fcomip
lods
es
shll
sbb
ficoms
xchg
sub
dec
xchg
jmp
leave
jecxz
aas
adc
sub
mov
lcall
pusha
xor
dec
pop
sbb
add
jg
cmpsl
push
push
popa
gs
daa
int3
jno
cmp
iret
cmpsb
gs
jo
add
adc
ficomps
adc
xor
add
jb
out
dec
mov
jno
push
inc
xor
and
cmp
test
dec
xchg
push
notb
lds
je
or
rclb
jle
jae
aad
mov
adc
ss
and
mov
outsb
mov
mov
push
lea
mov
and
fs
sbb
fdivs
jne
dec
insl
arpl
jge
cmp
mov
pop
out
sub
loope
popf
cld
dec
test
push
inc
sbb
lods
xor
ss
ljmp
aad
jg
mov
mov
fists
sub
jle
rcl
shr
xor
mov
fcomps
repz
enter
cmc
in
adc
jnp
inc
cs
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
sbb
popa
rcrb
push
cmp
adc
pop
cmc
push
add
stos
shlb
gs
xor
nop
icebp
cmp
jmp
outsl
pop
push
icebp
mov
adc
mov
pop
push
movsb
adc
jo
pop
insb
ds
adc
xor
ss
popa
movsb
clc
push
cmp
nop
or
aad
pop
jae
mov
in
ret
cmp
push
mov
mov
jg
and
mov
push
in
adc
and
pusha
arpl
aam
test
call
dec
daa
adc
in
addr16
adc
js
xchg
lods
or
mov
nop
or
out
mov
pop
adc
in
mov
insl
mov
insl
mov
push
cli
inc
or
adc
popa
sbb
push
dec
pusha
clc
lcall
in
jecxz
push
jl
outsb
les
jbe
loop
add
call
mov
mov
mov
add
push
dec
mov
iret
adc
ficoml
jmp
inc
fnstsw
cmp
adc
cmp
sub
push
in
jnp
mov
sbb
sbb
pusha
pop
dec
xor
cmp
cmpsb
push
scas
insb
out
aam
mov
pop
rorl
ja
fmuls
sbb
out
imul
jmp
xchg
scas
mov
cmp
fbld
xor
out
mov
mov
sbb
test
in
ljmp
mov
outsl
ret
mov
rcrl
hlt
jns
cmpsl
add
sub
das
pop
lea
pop
incb
mov
mov
jb
dec
adc
cltd
inc
and
sub
push
sub
push
lods
test
cltd
imul
gs
bound
cmp
mov
cmp
out
inc
leave
and
mov
cmp
add
xlat
mov
movsl
mov
shr
push
jmp
mov
jnp
add
push
jae
mov
clc
pop
pop
fs
mov
fimull
in
jle
arpl
jg
xchg
lea
and
into
pop
cltd
dec
dec
test
orb
jne
jo
sbb
jno
aaa
shlb
push
push
sbb
inc
repnz
jle
xor
mov
stos
data16
ljmp
xor
mov
pop
clc
xchg
clc
sbb
dec
insb
popf
lahf
push
sbb
push
pop
sbb
xchg
xor
pop
popl
sbb
inc
les
dec
sub
xor
lods
push
jmp
scas
and
decb
bound
lret
es
rcr
add
lret
hlt
mov
xor
inc
icebp
out
shrl
inc
rcll
or
imul
fdivrp
pop
xchg
lods
mov
or
loope
mov
insl
jge
mov
or
rclb
scas
es
pop
pop
scas
shrd
lds
insb
jno
daa
test
xorl
bound
mov
movsl
mov
ffree
xor
jnp
jns
outsb
daa
sub
jmp
mov
ds
mov
gs
jge
push
fbld
fs
mov
mov
jmp
sarw
cmp
stos
cs
sub
or
inc
sub
adc
call
jecxz
outsl
mov
push
mov
insl
mov
in
sub
sub
stc
jns
ja
mov
rorl
movsb
push
mov
xchg
jp
mov
lods
adc
push
imull
call
or
sub
xlat
lret
repnz
jge
ljmp
cmc
shll
and
testb
test
aam
pop
adc
cmp
pop
mov
cmc
and
push
out
push
cltd
ds
jae
push
test
mov
jg
mov
cmp
mov
adc
lret
adc
add
push
jge
or
add
gs
mov
dec
mul
xchg
push
cltd
xor
mov
stc
dec
in
out
push
xchg
adc
enter
sub
gs
dec
mov
sub
ret
cs
test
out
stos
in
jo
sbb
mov
insl
dec
jecxz
add
hlt
add
iret
enter
movsl
repz
lret
outsb
lock
fistl
insb
lods
sub
mov
mov
dec
jns
daa
mov
subb
aaa
dec
adc
push
ljmp
sbb
xchg
cmp
and
imulb
lods
mov
mov
dec
pop
loopne
cmp
or
add
aas
pop
mov
iret
push
pop
sub
pop
addr16
dec
cmpsl
scas
mov
movsb
mov
sarl
adc
jne
mov
push
mov
add
rcrb
movsb
pop
sub
adc
sti
mov
lds
int
jle
ljmp
and
or
das
fisttpll
fs
mov
movsb
adc
jbe
int
into
jns
mov
mov
add
push
jmp
popa
fdiv
fadd
out
mov
out
add
xchg
int3
ret
ds
aas
in
dec
inc
push
lock
test
push
inc
imul
shll
inc
scas
ret
fldenv
inc
je
and
fdivl
movsb
mov
lods
push
pop
les
cli
fwait
xchg
mov
cmp
xchg
test
fistpl
pushf
loope
cmp
adc
pop
out
les
mov
inc
cmpl
xchg
in
dec
and
add
sbb
in
jmp
std
loopne
xchg
pop
and
jne
loop
into
dec
xchg
cmp
ficomps
add
sti
mov
cmpsl
sbb
pushf
dec
inc
mov
lods
test
test
rcll
enter
jbe
add
imul
stos
lcall
mov
mov
mov
pop
aam
lret
aam
pop
popf
push
cmp
sbb
cld
push
into
pop
and
push
imul
and
jnp
js
jo
adc
mov
add
daa
jl
jge
movsb
add
dec
ljmp
pop
ret
mov
outsl
rcrl
mov
fwait
jno
fmul
adc
dec
jb
imull
cltd
jp
loop
repnz
pop
sub
jo
arpl
mov
jecxz
jl
int3
mov
mov
movsl
lea
xor
mov
inc
sbb
stos
push
xlat
adc
inc
jns
arpl
cwtl
jmp
std
imul
push
sub
jge
adc
ds
mov
pop
mov
adc
pop
rclb
xchg
pushf
xor
popa
rcl
in
xchg
push
sbb
or
loopne
ja
add
xorl
xor
mov
pop
out
xor
xchg
jnp
push
push
jae
and
mov
out
movsb
push
inc
cmp
aad
lret
movsl
cmp
add
std
iret
lods
xchg
mov
clc
outsl
and
add
jnp
test
mov
cltd
nop
in
nop
mov
xchg
adc
pushf
push
jmp
std
nop
in
stc
jo
shll
insl
scas
and
out
aad
mov
aad
ror
shrb
aaa
cmpsl
cmp
mov
inc
xchg
out
fisubrs
and
cmpsl
inc
sti
or
popf
stos
shr
int3
enter
mov
fisubs
and
nop
rol
inc
xchg
popa
int
and
mov
int
sbb
rcll
je
insb
ss
aaa
mov
sbb
lret
and
ds
mov
fdivrs
sub
push
jbe
and
cs
xchg
dec
cmpsl
cs
lcall
unpckhps
ret
test
mov
mov
out
pop
pop
jp
inc
push
dec
imulb
ss
sbb
push
lods
in
daa
mov
outsl
cmp
dec
or
mov
aam
cmp
repz
pushf
sbb
adc
mov
jl
ret
jge
int
shll
jbe
loope
push
jne
xor
inc
and
out
fists
jge
jecxz
jo
dec
xlat
or
add
cvttps2pi
je
inc
pop
mov
shrl
push
or
sbb
mov
sbb
aam
inc
dec
push
imul
or
push
inc
into
jmp
jecxz
and
js
fs
mov
sbb
in
or
or
movsb
inc
leave
pop
or
pop
scas
push
lahf
mov
insl
mov
rep
xchg
lock
xchg
cmpsl
stc
inc
cwtl
xchg
mov
push
jge
mov
jns
cmpsl
cmp
aam
and
cmp
iret
add
inc
cli
pop
adc
gs
mov
xchg
repz
xor
insb
fldcw
inc
jecxz
test
mov
adc
push
xlat
cmp
les
push
repz
push
mov
mov
clc
popl
xor
pop
pop
enter
push
je
pusha
cmpb
fisubs
push
jl
mov
lock
mov
lcall
sbb
cmp
inc
xor
gs
push
cmp
adc
adc
xchg
stos
mov
adc
les
push
lock
lcall
enter
orb
pushf
sbb
xor
movsb
jns
fimull
cld
cltd
adc
mov
inc
push
lds
push
iret
sub
js
xchg
pop
mov
shrb
test
or
test
add
lea
xchg
sbb
and
adc
mov
xchg
cmc
cmpsl
jl
cmpsb
ds
dec
decb
cmc
cmp
xor
test
push
ffreep
xchg
sub
out
jno
outsb
push
cmc
xchg
out
repnz
xor
xchg
or
lret
sub
or
mov
ss
imul
fldenv
pop
push
fdivrp
xchg
mov
loop
fsubrs
bound
lods
daa
add
mov
inc
mov
ret
mov
mov
push
ljmp
movsl
in
bound
push
enter
insb
ret
cld
iretw
inc
xchg
in
int
jne
mov
adc
pop
pop
mov
add
sbb
push
shrb
fmull
dec
jmp
pushf
rep
or
aas
jl
lds
out
cmp
cmp
out
in
jns
mov
enter
fistpl
mov
and
lods
or
xchg
fwait
push
mov
adc
xor
loop
pop
xor
aad
inc
xchg
int
adc
add
call
andl
add
mull
stos
jg
lret
movsl
cmc
rcrb
mov
or
dec
sahf
mov
inc
mov
fidivrs
xor
repnz
cmp
call
push
into
pop
push
inc
sub
ret
nop
cmp
lcall
mov
mov
mov
pushf
rcrb
ljmp
xchg
add
cmp
insb
pop
les
xor
lret
aas
push
mov
mov
dec
cmp
mov
sbbl
or
sbb
sti
out
adc
add
mov
inc
test
js
mov
sbb
add
push
in
test
push
cmp
jae
xor
es
mov
lret
test
or
sbb
cmp
rcr
jle
loopne
push
and
mov
shrb
test
shlb
pop
arpl
mov
xchg
add
fldenv
lret
cmpsw
inc
add
in
push
push
sti
adc
lods
dec
mov
jle
or
or
popa
xlat
jno
notl
inc
call
sub
or
out
dec
push
mov
in
in
mov
xor
jo
push
pop
mov
loop
shrb
test
dec
mov
xor
cmp
mov
mov
dec
call
ss
push
mulb
test
xchg
cmpsl
cmp
imul
aaa
ss
and
pop
pusha
xchg
adc
mov
pop
test
out
adc
js
repz
mov
pop
sub
pusha
aaa
and
sbb
sub
xor
cli
dec
jg
cmp
call
mov
mov
push
sbbl
xchg
xor
mov
into
in
dec
out
push
jns
int
insl
arpl
mov
dec
gs
cmpb
jmp
xchg
cmp
mov
sbb
adc
adc
mov
mov
fidivrl
imul
pop
stc
cmpsl
and
dec
iret
or
jle
mov
lret
xor
and
in
rorl
mov
lret
lcall
in
push
pop
int
int
int
mov
inc
test
test
mov
push
arpl
mov
xchg
rcl
scas
mov
test
mov
mov
loopne
add
add
cmp
mov
int
or
cmp
add
or
inc
or
js
mov
ret
rcr
int
dec
xchg
std
ja
push
and
inc
jbe
pop
addr16
fbld
ret
insb
test
dec
nop
pop
scas
sbb
fimull
or
push
shll
lcall
jne
add
mov
outsl
or
outsb
cli
cmp
cmp
xor
dec
es
sub
mov
in
and
mov
bound
das
mov
call
subl
add
xchg
dec
add
jb
xor
sub
sbb
dec
fdivl
lock
jbe
jmp
inc
fwait
xchg
insl
std
clc
ret
dec
ret
fnstenv
out
lahf
outsl
or
lahf
mov
leave
fistpl
imul
mov
push
xchg
imulb
jb
je
sbb
stos
pushf
cmp
icebp
cltd
mov
dec
jns
adc
sbb
in
cld
dec
pop
js
shll
dec
les
clc
and
xchg
dec
dec
xchg
push
fwait
test
inc
lock
xlat
xchg
xor
xor
repnz
mov
sbb
jmp
or
in
mov
mov
jecxz
push
fstpl
call
mov
std
push
pop
lret
mov
pop
call
add
icebp
call
rcll
sub
jmp
mov
mov
gs
les
and
jge
dec
cmp
lret
inc
adc
dec
mov
ss
ret
das
scas
popa
adc
dec
xchg
in
repz
add
loope
ds
jne
adc
pop
rcrb
data16
and
cmp
rcrl
std
fsts
popf
dec
add
notl
jecxz
sub
and
pusha
cmp
cwtl
je
iret
adc
bnd
mov
xchg
int
push
in
add
lea
xchg
out
xchg
jg
adc
lock
add
fstl
cmp
add
mov
jno
out
popa
in
sub
out
inc
fs
ret
mov
xchg
push
lds
int3
push
push
aas
arpl
pop
or
jbe
or
adc
cwtl
mov
movsb
xchg
add
iret
push
dec
shrl
ds
mov
xchg
icebp
mov
nop
sbb
sub
pop
xchg
andl
ljmp
sub
lea
pop
and
xchg
sub
mov
out
mov
insb
push
adc
mull
imul
mov
rorb
nop
in
dec
movsl
pop
imul
in
movsb
icebp
xchg
push
enter
mov
icebp
sti
jnp
cmp
push
cmpsb
add
cli
leave
shrl
and
subl
mov
xchg
lahf
arpl
or
jp
xchg
xchg
jmp
jbe
push
and
jmp
jo
daa
xchg
sarb
repnz
lret
xchg
sub
xchg
and
lea
mov
sahf
mov
in
insb
ds
mov
mov
mov
fs
cld
iret
xchg
mov
inc
aas
dec
enter
jne
loop
xchg
pop
mov
push
jae
mov
clc
shrl
inc
xchg
rcr
push
sub
adcl
outsl
test
mov
push
or
pop
int
int
subl
mov
loop
scas
cmp
mov
adc
lods
jbe
cld
cwtl
jmp
out
and
enter
jl
test
xor
or
sub
les
loope
jl
mov
dec
jecxz
fxch
decl
pusha
imul
std
aad
add
enter
les
aaa
and
inc
bound
arpl
dec
int3
jmp
push
jns
popf
add
fists
mov
xchg
pop
call
cmp
cs
clc
mov
sbb
imul
mov
xchg
sbb
aaa
xchg
adc
xchg
outsb
shll
jecxz
and
mov
insl
in
xlat
jp
fisttpl
mov
mov
add
inc
inc
pop
popa
xor
into
repz
and
pop
daa
push
mov
push
test
dec
push
ja
pop
cmp
rcrl
mov
dec
jae
movnti
pop
arpl
add
in
and
sub
or
jo
insl
and
testl
xor
sub
shr
inc
jns
cmp
lret
ret
sbb
mov
jl
cmp
fisubs
lods
mov
adc
sub
div
fcmovnbe
les
pop
add
push
and
rcll
dec
xchg
sbb
mull
jecxz
repz
cmc
popf
ss
aaa
loop
inc
mov
rorb
xor
push
sarl
sbbb
lret
xchg
push
xchg
jbe
and
mov
in
aam
imul
pop
iret
mov
inc
ret
pop
and
jo
adc
std
cmc
cmpxchg
xor
push
into
fdivs
dec
je
xor
divb
dec
scas
loop
addr16
and
movsb
jno
jle
xor
into
push
cmpsb
icebp
iret
push
adc
mov
and
sub
mov
inc
je
fwait
add
hlt
ret
mov
xchg
out
pop
xor
add
cmpsl
sub
lret
jl
es
mov
scas
adc
mov
mov
adcb
sub
pop
jae
mov
xchg
mov
lcall
aad
jge
pop
insl
jb
push
hlt
adc
and
mov
iret
insl
xchg
stos
loop
pop
mov
jne
jae
adc
mov
stos
sbb
push
je
fimull
repz
test
and
dec
fistps
decb
xor
fsts
std
mov
stc
mov
cmpsb
mov
mov
push
sbb
jbe
incl
mov
mov
and
in
sti
lret
push
or
cld
repnz
mov
icebp
dec
aam
inc
jns
fcom
mov
aad
xchg
out
mov
sub
or
adc
adc
dec
cmp
test
xchg
jb
ffreep
adc
adc
daa
pop
pop
sarb
iret
lret
fidivrs
insl
adc
mov
cmp
fists
stos
int
incl
shlb
lods
stos
aad
pop
sub
mov
orb
cmpsl
cmpsb
cltd
cmp
mov
or
push
imul
sbb
scas
inc
sahf
inc
add
imul
jp
nop
aas
push
ja
or
das
push
mov
mov
push
int
cmpsl
lahf
ss
es
fbld
je
mov
fxtract
adc
push
aad
mov
in
rorl
mov
leave
add
push
insb
add
jp
mov
nop
push
and
fsubrp
jae
mov
cmp
pop
loopne
xor
push
data16
cmp
adc
icebp
ljmp
jge
ret
sarb
addr16
mov
xor
int
imul
xchg
loope
dec
xchg
or
cmc
jmp
cmpsb
mov
adc
and
jmp
mov
sbb
mov
cmp
loop
fwait
pop
jp
lcall
inc
or
scas
pop
fwait
pop
loopne
cmpsl
jb
jl
push
inc
or
dec
stos
dec
sub
data16
lret
jl
cltd
mov
jg
ja
out
mov
or
fisttpl
mov
dec
sbb
jne
mov
pop
xchg
jno
adc
lahf
loope,pn
mov
and
popl
cmp
xor
loope
arpl
xor
lea
shll
jp
sbb
and
pushf
mov
negb
fdivrs
push
ja
addr16
mov
je
lock
jmp
sbb
shl
lret
fcomps
cmp
mov
mov
lcall
xchg
pop
and
fisubrl
adc
out
insb
addr16
mov
incb
adc
scas
popa
negb
int3
outsl
in
xor
jecxz
jge
push
lahf
adc
push
xlat
sbb
adcb
or
xor
das
and
sbb
adc
pusha
clc
cli
into
cmpsl
mov
in
lahf
xor
fstp
mov
gs
popf
xor
mov
mov
ret
repnz
jno
adc
jno
add
mov
hlt
insl
fisttpll
adc
and
negl
inc
cmpsl
mov
lods
push
pop
push
add
shrb
push
rcrb
mov
xchg
inc
add
and
sub
popl
data16
daa
and
nop
sub
jle
push
mov
adc
mov
outsb
add
and
push
out
xlat
movsb
leave
gs
dec
enter
inc
lea
jnp
scas
divb
aad
pop
xchg
outsb
sub
xor
std
leave
sub
pop
rolb
rclb
jl
xor
out
inc
movsl
nop
cmc
mov
sub
insb
inc
scas
cwtl
fstl
inc
in
outsb
or
movsl
mov
jg
dec
ljmp
xchg
jmp
rol
and
enter
mov
fucomi
pop
lahf
inc
cltd
ret
mov
pusha
jmp
std
jl
mov
ljmp
jns
cltd
jns
xlat
lods
adc
mov
xor
out
mov
iret
lcall
out
inc
fisttpll
stc
xor
cmpsb
push
xchg
mov
ret
xchg
mov
dec
lods
or
sbb
xchg
jle
mov
jnp
test
xor
jecxz
xchg
iret
gs
pop
pop
sbb
fidivrs
stos
adc
push
into
dec
lret
cltd
add
adc
push
inc
loop
dec
or
and
pop
or
mov
rolb
insl
xchg
sbb
rol
cmp
xchg
sub
xor
adc
in
xchg
sub
push
or
xchg
arpl
jns
lret
inc
or
daa
dec
cmp
insl
es
std
pushf
or
push
lahf
cwtl
cmpl
jns
bnd
push
jno
push
not
iret
dec
loope
jo
jno
incl
cmp
mov
mov
mov
test
aam
scas
or
inc
mov
outsb
jns
add
into
xchg
clc
fimull
mov
mov
pop
adc
fadds
cmc
orl
lret
and
mov
test
aaa
mov
sub
dec
psubusw
insb
mov
icebp
dec
fs
jecxz
and
adc
cltd
or
fstl
xor
jge
add
cmp
xlat
pop
xor
mov
hlt
mov
mov
into
enter
iret
flds
pop
jo
pushf
xor
jno
xchg
pop
mov
rcrb
scas
or
arpl
sarl
add
mov
xchg
jbe
and
movsb
cmp
pop
sbb
addr16
mov
iret
cmpsb
aaa
add
shl
push
sti
shrb
adc
inc
mov
jno
pop
in
vpsrlq
cmp
pop
jl
cmp
js
sub
into
aaa
push
jo,pt
jns
lock
in
jge
iretw
push
adc
add
sbb
cmp
out
sub
arpl
xorb
daa
inc
test
icebp
aaa
sub
jo
mov
xchg
imul
cmp
lds
stos
inc
rcrl
dec
repz
lods
sbb
mov
fs
stc
inc
push
xor
jbe
cld
test
inc
stc
add
shrb
icebp
cmp
fwait
mov
mov
leave
jns
push
cmp
int3
xchg
pop
lea
sub
ljmp
ret
sbb
into
sti
in
push
scas
or
inc
push
js
adc
jae
mov
push
add
and
in
sub
pushf
loope
adc
dec
fisubs
sbb
addr16
sbb
sbb
mov
cld
jl
mov
stc
scas
mov
pop
ret
and
aaa
mov
rcrl
clc
daa
pop
lahf
fidivrl
dec
test
push
stc
cmp
jbe
std
inc
ret
or
pop
mov
sub
mov
xor
mov
cmp
inc
movsb
subb
rorb
je
enter
cmp
push
jg
sbb
test
mov
adc
pop
andl
adc
jne
lock
push
adc
test
ja
xchg
rorb
cmpsl
xlat
std
or
mov
adc
pop
nop
adc
push
mov
cld
mov
mov
fcoms
or
pop
and
inc
fidivrs
mov
js
negb
fsubr
or
imul
inc
jo
out
push
xchg
mov
sti
push
cltd
cmpsb
add
adc
pop
pop
test
loope
pop
push
cmpb
sbb
xor
jno
imul
xor
mov
push
add
xchg
and
adc
pop
mov
xchg
in
pop
cli
mov
mull
call
jae
sub
add
mov
cmc
mov
in
and
out
lock
fnsave
lods
xor
iret
pop
pusha
push
and
loope
or
pop
lret
cld
adc
sbb
add
sub
xor
and
push
not
jmp
add
mov
scas
xor
xlat
sbb
push
cmp
and
mov
roll
or
or
gs
cli
les
mov
xor
mov
ret
insb
jg
mov
cltd
sub
scas
sub
dec
push
sbbb
cmp
inc
mov
rcl
imul
cmpsb
push
addl
sub
stos
pop
jmp
xchg
dec
es
cs
into
hlt
out
adc
repz
scas
and
push
mov
in
push
orl
mov
pop
cltd
adc
sub
clc
mov
leave
decl
adc
cmp
pop
mov
in
xchg
lods
inc
lret
pushf
mov
cli
dec
sbb
push
aas
not
inc
cmpsb
xchg
and
adc
data16
int3
das
movsb
lock
lods
cmp
shr
in
push
enter
out
stos
arpl
jnp
hlt
popa
pop
jae
in
or
inc
pop
xlat
movsl
iret
pop
sbb
out
xchg
jmp
xor
aas
loop
mov
test
jle
popa
into
mov
movsl
int3
cmpsl
jb
cmpsb
data16
negb
mov
out
and
inc
pusha
ret
nop
ret
icebp
ja
mov
add
outsl
ljmp
nop
arpl
mov
out
push
mov
adc
movsl
outsb
rorb
and
dec
loop
mov
jmp
mov
adc
dec
mov
rclb
adc
adc
jne
out
push
loopne
cmp
arpl
jg
aaa
mov
sbb
movsb
pop
divb
lcall
cli
jns
lahf
inc
adc
add
int
clc
cmpsb
inc
mov
sbb
inc
fcomps
ficoml
xlat
push
in
daa
test
push
in
mov
popf
mov
xchg
mov
push
sahf
lcall
daa
xchg
dec
test
es
dec
add
sahf
les
lret
lret
rcr
mov
fs
leave
scas
jae
xchg
xchg
addr16
mov
out
lea
sub
jp
daa
ljmp
mov
aas
clc
nop
lcall
cmp
sahf
xor
sti
add
xchg
pop
outsb
jle
das
dec
pop
filds
std
and
andl
lret
push
xor
pop
bound
inc
mov
rcrb
repnz
push
ja
insb
addb
sti
rorl
sti
push
insb
scas
mov
pop
or
insl
fildll
push
mov
xor
aas
mov
adc
out
jp
stc
mov
xchg
mov
or
cmp
inc
sbb
sub
sub
push
stc
xchg
lcall
or
in
rcl
jbe
mov
outsl
inc
sbbl
pop
mov
imulb
leave
push
adc
rorl
and
or
xor
push
pop
xchg
jnp
pop
nop
dec
ss
inc
inc
jne
out
test
xchg
push
xchg
std
mov
movsl
and
and
dec
mov
leave
sarl
xor
pop
sub
inc
mov
push
mov
lret
mov
rcr
cmpsl
xchg
sbb
adc
push
jo
jge
dec
push
and
push
lds
repz
sahf
mov
adc
adcb
in
adc
fdivrs
enter
jge
mov
inc
dec
sub
iret
pop
int
js
push
add
mov
xchg
jne
inc
or
ret
inc
jecxz
je
lcall
adc
sbb
bound
ret
pop
push
loope
out
into
inc
add
fmull
testb
and
xor
push
pop
enter
pop
ret
pop
in
or
cwtl
mov
jp
insl
fs
xor
in
inc
icebp
js
xchg
mov
dec
dec
pop
sahf
iret
mov
push
andl
or
push
imul
xchg
and
pusha
or
sub
pushf
push
jge
add
clc
sub
loope
cmp
stos
fs
repz
aas
daa
lahf
push
mov
test
mov
fcmove
scas
and
mov
sub
ret
jns
pop
sbb
movsb
jg
je
jae
aad
xor
sub
int3
pop
mov
adc
push
ljmp
or
fwait
jmp
xchg
mov
scas
xor
sahf
mov
inc
xor
adc
cmc
jns
add
pushf
xor
jnp
xchg
inc
lret
mov
push
lods
insl
push
xor
in
les
add
xchg
mov
shll
mov
test
jns
divl
add
cmp
sub
cmp
sbb
xchg
scas
mov
loope
movsb
inc
push
cmp
inc
mov
fisubrs
add
push
lods
nop
jb
inc
ljmp
loope
in
pushl
call
sub
mov
pop
mov
pop
lcall
cltd
popa
cs
out
pop
lcall
dec
add
dec
loope
mov
aam
sbb
fucomi
cwtl
ljmp
sarb
inc
arpl
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
repz
popa
rcrb
leave
cmp
xor
cli
stos
bound
hlt
fcmovnbe
or
pop
cmp
bound
call
dec
dec
mov
jno
push
cltd
jle
test
add
leave
fildl
sbb
xchg
jns
or
push
cld
mov
pop
pop
sub
popa
divl
icebp
xchg
sub
push
pop
jmp
imul
mov
out
fadd
mov
xchg
push
insb
out
iret
xor
les
dec
out
lods
cmc
mov
dec
addb
jl
mov
fdivrs
sub
jle
cmp
in
push
pusha
mov
cmp
icebp
dec
or
enter
lcall
adc
xor
jbe
test
jbe
cwtl
jns
lock
inc
ret
cmp
xchg
imul
jg
cmp
sub
mov
in
shlb
or
xchg
mov
call
adc
mov
lcall
aas
dec
add
rcl
bound
imull
xor
out
mov
pop
ja
xchg
jp
xor
ss
pushf
pop
xlat
push
dec
or
jo
popaw
andl
arpl
scas
or
pop
adc
negl
xor
cltd
and
fdivrs
and
fsubrl
popa
mov
push
outsl
aad
add
lds
lret
dec
adc
push
push
jle
not
inc
aam
in
cmpsb
scas
shlb
mov
xorb
test
push
jae
inc
lahf
movsb
mov
and
sti
mov
sbb
and
add
aam
mov
add
add
mov
loope
pop
das
and
jle
shlb
or
mov
cmpsl
mov
lds
sub
mov
sahf
rcrb
add
dec
adc
jbe
lret
out
cmp
cmp
pop
fucompp
pop
mov
or
lods
leave
mov
push
xorl
dec
xchg
push
dec
vmwrite
mov
movsl
add
shll
sbb
or
cmpsl
hlt
xchg
call
pop
or
inc
jne
loopne
mov
xchg
inc
push
mov
xor
inc
push
jle
and
sub
jno
jg
cld
sub
pop
mov
lret
mov
int
mov
mov
fildl
mov
cmpb
cmp
push
sbb
dec
in
xchg
cld
loopne
xchg
dec
jge
xchg
jmp
adc
lock
mov
mov
jns
jne
lea
addr16
mov
sub
sbb
pusha
mov
shll
mov
in
push
lock
inc
mov
dec
ljmp
adc
pop
pop
xchg
add
jmp
into
add
xor
mov
inc
pop
leave
stos
cmp
pop
jmp
call
into
jno
ret
sbb
nop
daa
imul
ss
mov
fcmovne
sbb
in
in
scas
lods
dec
lods
jns
jo
iret
xor
dec
push
push
mov
test
leave
xlat
jp
or
add
mov
mov
addr16
pop
decl
jle
test
repz
in
lcall
ror
pop
xor
subb
out
mov
pop
mov
orl
movsl
hlt
sub
cli
into
lcall
fsubl
xchg
push
movsb
fwait
pushf
xchg
stc
mov
mov
sbb
pop
shll
pushl
icebp
inc
push
shlb
mov
xchg
pop
sbb
xchg
movsb
mov
lock
jmp
push
inc
add
idivl
repz
aaa
stc
in
and
rcl
cmc
mov
mov
inc
or
frstor
mov
sahf
pop
in
push
lret
cmpsb
push
lret
and
adc
adc
xor
push
or
jo
adc
fdivp
repz
cmp
push
in
outsl
jne
xchg
add
pop
pop
lret
pop
mov
push
fnstenv
xchg
mov
call
mov
aam
shrb
sub
aas
fisttps
stc
xchg
adc
push
mov
pop
les
aad
dec
dec
push
pop
pop
rcl
sar
cmc
mov
ljmp
lock
ret
push
sbb
sahf
sbb
clc
in
and
sub
jl
mov
push
repnz
ja
enter
lds
mov
rorb
pop
adc
lods
leave
mov
fnstcw
jle
push
test
inc
jg
or
js
inc
xorl
or
pop
leave
mov
arpl
loop
add
push
or
xor
fisubl
mov
dec
into
loope
stos
mov
inc
cmp
mov
jbe
lcall
dec
jecxz
rcl
je
mov
push
leave
gs
rcll
cmp
aas
cwtl
cmp
pushf
xor
dec
jo
xchg
loop
push
jbe
push
sub
or
mov
mov
pop
sbbl
pop
loop
push
xlat
push
test
sbb
leave
cmc
add
lea
repz
dec
or
pop
popf
add
sub
push
pop
sub
push
mov
and
repz
imul
adc
dec
sbb
popf
dec
jl
and
cmp
arpl
setnp
xor
jecxz
xor
cmc
mov
push
mov
mov
mov
push
icebp
scas
les
and
xchg
les
and
shrl
and
ret
push
in
lock
xlat
imul
and
rorl
push
mov
mov
outsl
cltd
sbb
or
and
pop
add
aam
mov
je
jmp
cmp
sahf
icebp
cmc
xchg
out
push
std
jo
cmp
cs
sbb
mov
je
in
mov
stc
pop
jmp
mov
mov
aaa
xchg
cmpsl
popa
and
jp
add
fsubrs
lret
mov
sbb
jno
sub
popf
scas
push
je
xchg
or
data16
jnp
loope
sbb
fs
shrb
pop
shrb
in
cs
mov
xchg
movsb
fbstp
imul
in
inc
sbb
and
push
shlb
sub
inc
sbb
adc
or
sub
and
jbe
test
jl
mov
mov
pop
lea
movsl
sbb
and
push
movsl
shll
hlt
mov
mov
pmaxub
popf
mov
push
in
es
push
and
mov
in
or
movsl
push
cs
adc
push
push
push
out
jne
mov
fisubs
push
xchg
cli
push
out
pop
add
es
scas
out
push
outsb
add
repz
push
add
movb
push
xor
pop
in
mov
sub
or
loop
and
mov
adcl
inc
jmp
or
fld
imul
ret
jg
mov
push
jns
xchg
sub
and
cs
mov
and
cltd
or
cld
fcomp
xor
or
notb
insl
filds
mov
push
xchg
dec
fistpll
xchg
pop
sub
add
cltd
sbb
xchg
jne
lods
mov
jb
lods
or
iret
jns
xor
push
mov
or
in
lahf
adc
movsl
xchg
jne
xlat
cmp
div
inc
pop
cmp
std
inc
mov
addr16
xor
mov
vmwrite
sub
inc
push
mov
sbb
push
dec
dec
sbb
inc
filds
mov
jns
stos
push
rolb
xchg
mov
outsl
mov
in
mov
xchg
out
mov
je
daa
out
mov
cmpsl
fists
test
imul
outsl
popf
sub
adc
push
fwait
pop
push
or
inc
xor
jo
jns
push
jge
mov
cmp
add
jmp
mov
xor
fcomps
repnz
inc
loope
ret
sub
cmpsb
leave
ljmp
es
es
inc
xor
push
aam
aaa
test
pop
xor
and
xchg
into
mov
insl
mov
and
push
cmp
jmp
cmp
mov
mov
jle
in
inc
mov
hlt
add
xor
or
daa
cmp
in
lds
pop
add
xor
cli
pop
jbe
and
cmc
fwait
dec
push
das
dec
mov
pop
shlb
mov
push
cli
std
xchg
pcmpeqw
xor
adc
outsl
clc
icebp
sbb
cld
lods
imul
dec
iret
and
xchg
sbb
inc
cmp
mov
jle
insl
pop
push
stc
test
fwait
popa
push
adc
mov
jo
xor
or
pop
adc
mov
dec
outsl
xor
in
dec
lods
pop
xchg
ds
jns
mov
dec
int
ds
mov
dec
loop
mov
push
test
mov
mov
or
pop
in
popa
jmp
rol
and
movsl
ret
cmpsb
rcll
mov
test
dec
mov
sbb
std
xchg
and
in
rclb
mov
enter
and
lock
sbb
ja
cmp
jl
xchg
inc
bound
xchg
jb
sub
in
insl
nop
xor
and
sub
iret
pop
pushf
out
jb
aad
mov
aaa
ds
cmp
jmp
aam
test
xor
jo
jp
inc
push
inc
pop
or
ficompl
lock
xlat
hlt
adc
mov
out
jo
mov
jno
push
and
sbb
mov
cs
imul
sar
popa
inc
fucomi
jecxz
js
sti
pop
sbb
pop
mov
je
mov
xchg
cmc
jp
shll
push
adc
inc
imul
mov
lea
into
orl
jns
inc
sbb
and
sub
imul
les
xchg
filds
sbb
fadd
gs
daa
mov
in
imul
cmc
jge
cmp
dec
popa
fsub
and
xor
mov
cmp
add
ja
mov
sti
xor
jmp
in
sbb
jo
pop
rorb
je
and
xchg
and
sbb
xchg
pop
data16
or
cmp
push
mov
clc
sub
mov
or
pop
ja
mov
mov
outsl
in
cmp
lcall
inc
stos
push
add
fs
sarl
push
std
mov
add
and
add
sahf
lret
push
jg
pop
pop
roll
bound
out
add
sahf
movb
aas
mov
sub
and
test
test
pop
imul
push
and
sbb
test
lret
or
or
adc
add
inc
push
ret
into
mov
adc
fstl
mov
popa
mov
push
outsl
cmpsl
icebp
lods
in
push
pop
ss
in
das
int
shll
les
scas
inc
lock
mov
fisttpll
movsl
mov
repnz
mov
xchg
int
inc
shr
cmpsl
push
sbb
cwtl
cld
pushf
sti
popf
sbb
mov
nop
mov
sti
je
in
fcompl
push
cwtl
xor
jae
std
mov
and
pusha
loopne
scas
push
in
orl
addr16
and
push
xchg
pop
cltd
jecxz
cld
int3
mov
test
sub
pop
sahf
xor
mov
leave
call
push
mov
cwtl
pop
adc
and
cli
jno
sbb
out
lcall
sbb
pop
sbb
dec
pop
adc
xchg
icebp
xlat
mov
fdivl
cmp
dec
xor
clc
fstpl
pop
pop
dec
jne
idivl
jge
outsb
fadd
sub
xor
dec
or
mov
shlb
lret
mov
xchg
lcall
push
or
ret
sub
incb
cltd
add
xchg
push
ss
jns
xor
inc
cltd
xchg
pop
outsb
push
dec
leave
inc
or
xchg
push
out
jl
xchg
dec
sbb
popa
inc
loope
sbb
sub
fdivrl
int3
pop
lds
cld
dec
jl
xor
add
lea
imul
fsubrl
ret
xchg
sub
push
sbb
inc
test
lahf
mov
inc
gs
das
nop
cmpsb
xor
aaa
into
cld
or
mov
stos
leave
ds
cmp
loop
mov
cmc
adc
xchg
xor
mov
sbb
in
test
idivl
jle
rcll
lret
mov
iret
pop
xchg
mov
sbb
pop
adc
cwtl
sub
xchg
mov
add
cmpsb
dec
mov
bound
cmp
jbe
sbb
loopne
adc
das
orl
push
mov
jl
test
or
dec
adc
pusha
ja
or
inc
dec
sbb
adc
pop
sub
inc
rorb
and
pop
popa
out
xor
fwait
cmp
cmp
push
sti
xchg
out
sbb
mov
sub
je
sbb
push
ss
int3
in
or
mov
popf
movsl
inc
xor
movsl
cmp
jl
or
in
movsb
cmc
pop
cmp
cmp
cs
mov
aad
jae
push
int3
roll
push
test
jge
jle
repz
rsm
cmp
mov
mov
pop
add
aaa
inc
insb
mov
adc
int
ss
test
push
push
movsb
inc
adcl
and
xor
dec
ffree
cmpsl
rcll
dec
adc
stc
cmp
fucomip
jne
sbb
dec
add
xorl
in
cwtl
fldt
shll
jnp
cmc
pop
pop
jmp
adc
ljmp
mov
std
daa
xor
xchg
jo
lcall
adc
mov
jbe
cmp
push
stos
mov
push
ja
mov
ftst
ljmp
inc
iret
add
in
rcrl
mov
adc
test
fsubs
out
imul
adc
mov
add
popl
inc
int3
adc
fildll
inc
stos
dec
repz
fnstenv
pop
clc
js
loop
test
push
fidivrl
push
loopne
ret
lds
js
das
xchg
stos
mov
jge
mov
imul
or
push
lea
cmp
out
mov
insb
out
lods
xchg
call
cs
stc
lock
jb
decb
cmp
pop
lahf
cmp
mov
scas
popf
lret
inc
cmpl
cmp
or
mov
cmp
cli
aad
in
div
jns
in
pop
aad
das
sub
in
cld
dec
push
out
outsb
clc
ficomps
push
pop
repz
mov
pop
jae
fcomp
adc
movsb
bound
orb
in
mov
push
out
xchg
inc
adc
addb
push
fwait
or
cmpsb
cmpl
mov
rorl
jne
lret
test
jle
in
xchg
out
ret
arpl
add
loope
decb
xchg
rcrb
test
cli
lods
fcoms
fisubrl
test
cmp
xchg
and
push
mov
dec
and
or
pop
sub
sub
dec
sbb
dec
add
cmp
mov
add
jl
incl
es
insl
imul
lfs
das
sbb
dec
sbb
mov
ret
in
mov
vpmullw
loop
fsubr
lcall
in
mov
cmp
sbb
pop
clc
mov
dec
test
sbb
push
jno
mov
push
mov
fcomps
subb
in
sub
jbe
test
sbb
jae
pop
pop
and
lcall
pop
pusha
cmp
test
lea
loope
sbb
fs
movl
pushf
inc
ljmp
mov
xchg
jle
push
movb
fsubp
mov
push
push
in
inc
iret
popa
and
cmp
lock
mov
sub
pop
lahf
out
cmp
xor
dec
jno
frstor
outsl
add
mov
out
jnp
call
push
mov
add
ss
adc
jl
loop
icebp
outsb
mov
stc
scas
jg
pop
lcall
das
lock
sub
mov
shrl
sti
call
inc
sti
xchg
clc
add
mov
movsb
ss
testl
iret
push
add
in
arpl
std
adc
fiaddl
dec
lods
push
fistpl
out
rclb
cmp
cltd
pop
push
dec
test
pop
fwait
push
pop
pop
lds
push
push
mov
push
mov
cld
cwtl
push
subl
adc
cmp
sbb
xchg
sahf
push
int3
rorb
and
iret
outsb
pop
mov
dec
fisubrs
loop
movsb
call
mov
scas
shll
pop
les
jbe
outsb
shlb
xor
das
push
xchg
lock
push
xchg
jge
or
inc
push
push
sub
sahf
or
in
add
ss
sbb
inc
fstp
and
pop
subl
in
sbb
dec
jl
pop
xor
dec
fs
or
lcall
xchg
fidivrl
das
dec
sarb
scas
jb
xchg
inc
dec
sarl
push
dec
scas
enter
mov
aaa
add
popf
mov
cmc
xor
xchg
push
inc
add
repnz
leave
push
add
js
int3
lods
test
add
and
adc
ja
inc
call
rclb
or
xlat
cs
out
test
in
xchg
and
mov
mov
cmpsl
cmpsl
jbe
push
xchg
insb
lret
mov
jle
dec
cmp
movsl
jg
fdivp
push
dec
pushf
jge
cmpps
movsb
sbb
sarl
pop
arpl
xchg
lods
inc
xchg
xchg
and
or
pushf
xchg
test
les
push
add
shl
je
jbe
int
loopne
adc
cmpsb
lcall
dec
fiaddl
mov
data16
rclb
testl
int
fcmove
sbbl
cld
insb
push
sbb
and
pop
push
dec
dec
xor
xchg
iret
jmp
pusha
xchg
mov
push
out
jge
xor
pop
leave
pop
scas
push
mov
in
sbb
jnp
les
jno
or
cld
imul
xchg
icebp
jmp
lcall
xchg
mov
adc
fisubs
jl
push
pop
sub
jle
push
xchg
jae
sahf
jns
stc
xchg
rcll
out
push
sbb
inc
leave
enter
cmpb
cmpsl
jnp
enter
cmp
daa
repnz
mov
lds
imul
pushf
popf
int
popa
add
aaa
push
xchg
movb
xor
push
pushf
test
outsl
or
cmpsb
mov
sub
or
fucomip
mov
rcll
pop
dec
lret
mov
ds
jns
adc
jecxz
push
rclb
vmwrite
inc
cmpsb
cmp
mov
or
adc
or
xor
cmp
pop
mov
scas
call
test
xchg
add
mov
cld
pop
xor
cmpsl
scas
inc
cmp
addr16
insb
mov
ljmp
xor
stos
js
loopne
fdivl
jne
push
push
xor
cld
ljmp
xchg
nop
cs
jns
xor
stos
roll
mov
or
cmp
push
jl
mov
dec
inc
in
xchg
xorb
sub
filds
insb
test
mov
mov
xor
int
jb
cmp
repnz
mov
mov
mov
stos
cltd
cmpsb
fistl
dec
pop
adc
jbe
add
divb
xor
mov
or
push
fs
xchg
mov
push
xor
cld
xchg
jmp
lock
andl
outsb
les
jo,pt
dec
fwait
popf
adc
in
xchg
inc
or
mov
xor
xlat
mov
imul
mov
mov
enter
test
test
or
mov
xlat
or
stos
cmp
fs
ret
cmc
leave
mov
jmp
shrb
lock
sbb
push
in
mov
add
shrl
mov
sti
in
in
notb
cmp
testb
pushf
fsubs
xchg
in
outsl
sub
pop
sub
mov
inc
push
push
xlat
out
lcall
pushf
mov
or
adc
mov
mov
fnop
loop
sti
jns
fdivl
ficomps
xchg
data16
cmp
ja
xchg
out
cmc
xchg
sub
enter
and
ret
push
fldl
pop
aad
xor
xor
dec
nop
jg
cli
push
rorb
push
lret
call
fwait
xchg
rep
adc
in
out
and
loope
adc
sub
push
in
xchg
pop
pusha
roll
sub
push
cmp
adc
sbb
pop
and
lret
ljmp
dec
cwtl
int3
fcos
pop
add
negl
inc
jb
sub
insb
sarl
in
sti
mov
addr16
cli
or
jl
dec
mov
mov
popf
icebp
pop
push
dec
mov
dec
cmpsl
mov
adc
int
in
js
inc
outsl
jo
mov
testl
jb
iret
nop
mov
pop
aad
inc
aam
subb
fsub
xlat
dec
cmp
lods
jle
ret
fiadds
push
fbld
out
cli
pop
dec
mov
and
icebp
push
mov
xchg
jmp
fisttpl
add
cwtl
pop
inc
dec
movsb
cmp
in
pop
adc
cmp
pushf
dec
bound
cmp
fs
out
inc
outsl
mov
fsubs
push
pop
pop
ds
pop
and
and
ret
lods
ret
in
xor
mov
mov
push
jecxz
mov
sub
push
rorl
gs
sub
add
cmp
cltd
xchg
or
sub
out
sahf
mov
mov
subl
cmp
ret
push
pushf
aas
stos
sub
mov
sub
jg
test
cmpsb
cmp
insb
xor
mov
and
adc
adc
xchg
sti
push
and
vpand
push
repnz
nop
mov
mov
or
cwtl
sub
stos
fwait
jbe
repz
or
pop
cmp
mov
loop
pop
mov
repnz
ret
add
lret
jl
ret
push
and
push
imul
jmp
or
xchg
andb
ss
push
lea
cmc
push
add
or
dec
outsb
test
sbb
jae
mov
repnz
mov
pop
cmp
cmc
fwait
push
dec
dec
in
inc
gs
dec
and
test
ljmp
data16
inc
or
pop
inc
outsl
pop
daa
fidivrs
test
adc
pop
jg
ret
rorb
adc
fprem1
mov
test
lcall
sub
or
rcrl
inc
int3
inc
xchg
jno
sbb
sub
dec
mov
cwtl
jge
cmp
sub
fisttpll
pop
lahf
xlat
iret
aaa
mov
dec
jae
aam
movsl
add
inc
dec
cmpl
das
cmp
push
cmpl
gs
cs
lods
sub
cmp
mov
stos
pop
das
lock
in
sbb
stos
loope
mov
cmpsb
push
pop
dec
jbe
cld
js
lods
push
cmp
mov
rorl
dec
loopne
insb
add
add
je
or
scas
dec
shll
sbb
mov
sub
cmpsb
ja
inc
int
gs
sti
jae
aaa
and
cmp
cmp
xchg
jnp
rcrb
es
js
psrlw
sub
add
mov
lret
or
cltd
cmpsb
jmp
pop
cmp
mov
imul
jle
fadd
jg
xor
xor
mov
int3
sub
sahf
fisubrs
sub
and
addr16
test
enter
pop
dec
jns
pop
int
mov
xor
mov
mov
add
test
mov
or
in
jno
push
inc
mov
xchg
xor
cmp
mov
fcompl
sbb
mov
fcomip
out
xchg
inc
adc
jns
test
arpl
xchg
andb
pop
dec
cltd
cmp
loope
dec
cwtl
inc
or
enter
movsl
imul
iret
lods
scas
test
xor
adc
xchg
ja
test
or
nop
and
in
cmc
sbb
fld
ja
xor
ret
adc
inc
sub
sub
xchg
mov
xchg
dec
or
gs
test
mov
pop
mov
icebp
mov
jno
jnp
sarl
xorl
sub
into
rorl
jmp
mov
xor
imul
pushl
and
test
push
inc
adc
scas
inc
lods
xchg
mov
sub
mov
xchg
jns
int3
push
and
cmp
push
int
push
pop
adc
rcr
sbb
out
nop
adc
xor
mov
pusha
xchg
nop
sbb
jo
pop
mov
xchg
pop
insl
insl
jae
push
mov
out
sub
or
dec
shrl
inc
jle
mov
sub
xlat
push
in
fidivl
xchg
inc
mov
shll
xchg
das
cmpsb
fldcw
inc
loopne
inc
mov
std
mov
fisubrs
rolb
fsts
sbb
testb
push
dec
es
fwait
in
fisttps
cmpl
mov
xchg
outsb
je
push
fucomi
xchg
mov
imul
addr16
pop
cmp
imul
nop
inc
jl
xchg
mov
xchg
sar
sti
test
or
mov
sahf
aam
arpl
mov
fdiv
es
mov
xchg
fs
jg
aam
xchg
arpl
nop
jno
pop
jle
mov
push
jle
nop
mov
std
rcrl
pop
pop
mov
jb
outsl
dec
sti
pop
mov
add
xchg
mov
pop
ret
inc
cmp
and
call
xor
int3
fwait
sbb
and
and
sbbl
aam
sbb
std
jne
btr
int3
icebp
daa
cmp
jb
add
pop
dec
and
and
hlt
and
mov
hlt
test
add
inc
cmc
adc
insl
dec
adc
sarb
cmpb
jns
adc
and
incb
adc
jae
out
inc
and
push
lods
push
mov
repnz
daa
cmp
in
dec
jnp
out
lock
cmp
pop
lret
pop
mov
mov
dec
xor
sub
std
out
xchg
add
pop
arpl
aas
lods
inc
cmp
mov
outsl
xorl
pop
inc
les
addb
movswl
in
pop
in
push
mov
and
xchg
dec
lcall
mov
fistpl
andb
mov
nop
call
lcall
push
inc
adc
jge
sti
insl
mov
jp
xchg
adc
push
scas
or
jae
fs
in
sbb
das
pusha
xlat
dec
jp
cmp
push
mov
cmpsl
and
jmp
test
push
cmp
das
cmp
cmp
mov
jnp
adc
or
mov
mov
jbe
jmp
and
pop
push
jnp
stc
mov
mov
dec
mov
xchg
das
in
testb
sub
iret
cmp
dec
or
iret
test
ljmp
push
cmp
es
mov
lods
out
mov
add
call
jecxz
aam
mov
mov
pusha
inc
mov
jg
lahf
test
mov
xor
mov
fldcw
pop
mov
inc
push
jne
inc
sbb
in
pop
mov
aam
lahf
lock
ja
push
push
call
pop
inc
popf
fiadds
and
js
push
addr16
ror
jle
inc
add
mov
inc
and
sbb
cmp
pop
or
mov
addb
mov
and
ljmp
jge
out
in
xchg
das
add
add
and
in
lret
mov
stc
xor
mov
cmpb
daa
testb
lods
mov
dec
cwtl
xor
repnz
or
jns
jp
mov
xor
push
add
enter
test
jle
sbb
jl
jge
mov
add
push
iret
cmp
lods
daa
stos
push
jbe
mov
add
push
mov
xor
in
test
xchg
mov
stos
mov
popf
sbb
mov
sub
cmc
push
mov
xchg
xchg
arpl
dec
push
jno
mov
ret
pop
fcoms
jbe
in
xchg
and
stos
and
push
out
out
fistps
cmp
add
adc
and
jae
xchg
ds
xchg
and
imul
cli
imul
lahf
fndisi(8087
or
xchg
dec
dec
push
scas
inc
jnp
mov
out
push
adc
push
popl
adc
nop
or
pop
xor
jge
dec
repnz
xlat
rorl
fisubrs
fcompl
jno
sti
stos
mov
mov
inc
out
xchg
js
sahf
or
cmp
out
add
jecxz
dec
inc
faddp
in
xor
nop
dec
push
fs
jae
addr16
push
dec
pop
mov
int3
lods
scas
pop
aas
pop
xor
xchg
out
sbb
and
sub
lods
loope
cwtl
or
cwtl
pop
cltd
and
xchg
xchg
adc
sub
cmpsl
int3
add
xchg
mov
inc
add
icebp
add
cmp
dec
cmp
cmp
std
mov
pop
xchg
bound
jno
out
pop
fisttpl
mov
cmp
inc
or
cmp
rcrb
mov
loopne
dec
cmp
pop
outsb
iret
dec
and
pop
rcrb
dec
xchg
and
inc
jp
leave
sub
push
repz
cmp
mov
out
sub
xchg
push
pop
jge
and
int3
int3
and
loopne
and
out
sbb
xor
xchg
xchg
cltd
mov
or
mov
movsl
aas
sub
lock
enter
or
call
inc
rolb
adc
out
inc
or
lret
cli
mov
cmp
sar
dec
or
insb
fwait
std
ror
mov
fmul
jae
cmc
jmp
sbb
pop
add
out
mov
scas
sbb
cmpsl
sbbb
popa
mov
shrb
es
xchg
test
sub
in
inc
mov
mov
mov
xor
pop
sbb
rclb
and
shlb
sbb
mov
mov
cld
mov
sub
out
nop
inc
push
dec
push
jl
lret
in
shll
lcall
dec
cmpsb
pop
fimull
loopne
std
ror
adc
rcr
jmp
icebp
aaa
sub
into
rol
das
popa
add
ret
testb
std
imul
lds
xor
lcall
and
lods
cmpsl
rol
out
pop
sbb
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
jecxz
je
cmp
popa
rcrb
xchg
out
pusha
jnp
std
push
xchg
call
sbb
das
push
mov
xor
pop
ss
mov
cli
cmpsl
test
lret
mov
icebp
sbb
andl
add
push
outsl
dec
mov
repz
jne
stos
enter
adc
dec
out
inc
xlat
lahf
in
lods
mov
push
jns
test
lahf
inc
jmp
mov
dec
pop
stc
pop
xorb
out
jo
loopne
test
dec
push
sub
je
adc
daa
shlb
fucomip
adc
and
jo
push
test
or
inc
mov
ds
push
lret
loop
lds
mov
cmpsb
pushf
add
xor
dec
cmc
icebp
jge
pop
cmpsb
dec
fnstenv
scas
adc
mov
sbb
mov
mov
lea
insl
fiaddl
je
rcrl
add
test
pop
push
jbe
jge
add
jb
xor
jnp
ja
pop
and
jbe
sbb
lods
insb
inc
imull
mov
mov
xchg
nop
stc
sub
test
test
gs
mov
ret
sub
mov
lahf
push
negl
add
icebp
cmp
add
ja
mov
mov
repz
or
ljmp
cmp
or
cld
sbb
xor
mov
ss
xor
mov
outsb
adc
cmp
fstpt
or
stos
mov
adcl
and
and
out
mov
sti
into
int
das
int
ds
shlb
data16
out
and
cmpsl
in
leave
insb
inc
jl
movsb
adc
jo
leave
ds
negl
pusha
fwait
movsl
sahf
or
cmp
cli
out
push
inc
cmp
push
stos
adc
pop
cs
cmp
xor
cmp
mov
xchg
mov
push
sbb
insb
loop
fwait
cld
fcos
xor
pop
ljmp
xor
dec
add
and
sub
bound
ljmp
push
lods
aad
xchg
ja
mov
popf
sar
cmc
inc
xorb
pop
mov
adc
push
mov
pusha
stc
ss
jecxz
adc
add
leave
sarb
pop
stos
xchg
mov
or
sbb
mov
xor
hlt
fadd
pop
cmp
stos
and
mov
scas
cmpsb
cmp
les
dec
xor
enter
daa
push
lret
enter
std
in
xor
ret
jmp
mov
push
xchg
test
jg
dec
jmp
dec
xor
loopne
nop
mov
push
lods
cmp
cmp
sub
arpl
cwtl
push
push
dec
mov
int3
mov
push
mov
cmp
sub
sub
clc
xorb
fsubs
pop
xchg
jo
daa
jae
mov
lods
iret
mov
sub
and
shlb
mov
xor
jno
pop
add
aad
arpl
jnp
cmp
mov
and
pop
mov
xchg
sbb
arpl
fwait
test
push
call
push
fstps
cmp
pop
popf
mov
xchg
addl
jno
add
jno
lcall
jmp
bound
lret
mov
lods
int3
jl
outsl
or
adc
mov
enter
inc
pop
inc
and
add
mov
divl
mov
cmp
adc
mov
and
pop
mov
mov
sbb
inc
clc
test
and
into
jmp
sbb
dec
mov
movaps
sbb
ffree
ret
test
fcmovnbe
stos
mov
pushf
rcr
rcr
rcll
fisttps
xlat
mov
out
das
push
daa
xor
add
xchg
cltd
jnp
daa
mov
inc
leave
mov
mov
stos
in
scas
xor
sbb
sbb
xor
dec
mov
in
xor
movsb
sbb
xchg
rorl
jmp
pop
dec
fucomip
jne
clc
lods
inc
clc
in
cs
push
push
sete
or
jae
sub
sub
xchg
aam
inc
fisubl
pop
out
push
test
sbb
sarl
mov
shrb
insb
push
dec
cwtl
ret
dec
sar
clc
lock
cmpsb
out
xchg
cli
movsb
stc
sub
rol
jge
and
inc
lcall
xor
mov
stos
sbb
aam
lods
xor
jbe
xor
insb
fistps
icebp
xchg
jmp
in
fdivl
xorl
loope
pop
cmc
mov
push
call
and
jmp
and
shrl
lods
sub
fnstenv
push
lahf
movsl
pop
ljmp
lods
cmp
push
dec
pop
arpl
inc
or
pop
and
xchg
and
mov
lahf
and
imul
lods
test
xor
ja
sbb
cltd
inc
xchg
ljmp
push
cmp
pop
sub
pop
sub
mov
jle
inc
jp
and
pop
mov
sbb
or
mov
push
pop
dec
add
inc
cmc
dec
std
in
cwtl
mov
data16
jecxz
sbb
test
test
lret
xchg
enter
mov
adc
scas
gs
jnp
imul
aaa
loopne
insl
cwtl
call
mov
push
or
aam
mov
mov
push
mov
sahf
test
mov
dec
push
push
imul
cmp
mov
rcll
xchg
cmp
adc
repnz
jmp
pop
or
bound
jno
rcrb
sbb
fsubp
dec
and
shrl
loop
xchg
cmp
ds
jns
and
xlat
adc
dec
cmpsb
mov
xchg
mov
out
stc
or
jae
pop
daa
pop
and
dec
data16
xchg
incl
mov
test
jb
out
jb
imul
mov
dec
cli
rorl
sub
mov
rorl
xlat
sbb
pop
sahf
inc
xor
stos
shll
jno
pop
test
cmc
xor
jne
sub
or
gs
cmp
add
out
sub
dec
sbb
pop
ja
sub
insl
mul
xchg
sbb
clc
cmpsl
pop
add
jb
lahf
arpl
and
out
sbb
dec
jle
loope
es
dec
fildll
xor
imul
xor
subb
sub
mov
pushf
inc
mov
rolb
jnp
jmp
rcrb
loopne
xor
pushf
pop
add
shlb
ret
ds
ds
ja
cmpsl
adc
and
lds
movsl
mov
pop
cmp
and
add
xchg
sbb
sub
pop
xlat
sub
inc
add
xor
test
rol
es
lret
lods
add
inc
shrl
mov
roll
push
nop
mov
and
dec
scas
test
cli
in
cmp
je
jbe
and
das
enter
inc
cltd
sbb
lret
add
out
in
fwait
rcr
jg
in
ss
pop
xor
ds
cmp
xor
test
hlt
outsb
push
aad
ds
push
mov
pop
mov
shll
int3
or
addb
fcoms
shr
sub
xlat
test
mov
cmpsl
lds
das
inc
jo
push
cmp
inc
jp
cmp
xor
add
stos
pop
push
cmpsb
stos
jbe,pt
and
sbb
cmp
xchg
stc
mov
fstl
les
movsl
adc
xor
push
add
push
adc
lock
jge
push
hlt
mov
ret
and
xchg
in
mov
aad
or
sbb
jmp
in
and
les
jnp
xchg
push
jns
in
lcall
ja
inc
jp
ja
lock
jmp
add
push
sub
into
pop
dec
out
repnz
fs
es
cmpsb
addl
cmp
subb
cltd
sbb
cmp
mov
psadbw
outsl
inc
xchg
pop
sbb
bound
pop
adc
push
push
out
and
push
aad
mov
add
or
jno
das
push
adc
stc
pop
mov
xor
repz
orb
popa
fnstsw
or
ja
sub
js
mov
lahf
mov
pop
push
push
fwait
jle
popl
mov
movsb
sub
xor
pop
xchg
xor
push
inc
ljmp
loopne
jno
mov
or
jecxz
mov
mov
popl
push
or
push
mov
movsb
mov
or
adc
pop
sbb
cmpsb
loope
insb
gs
gs
daa
pop
lret
mov
cmpsl
pop
dec
scas
jmp
mov
in
adc
jle
adc
jo
loope
sbb
rep
test
cmp
aas
mov
inc
rcll
dec
mov
xor
adc
sub
inc
aam
mov
pop
or
adc
rcl
scas
cltd
aas
mov
leave
dec
rcll
int3
hlt
dec
mov
inc
movlps
lcall
mov
orl
mov
xchg
jmp
lret
xchg
aas
inc
inc
das
push
xor
xchg
popa
out
adc
xor
int
nop
je
lea
scas
enter
idivb
inc
iret
mov
mov
dec
lcall
pop
pop
jg
mov
pop
aad
mov
pop
sbb
dec
xchg
mov
add
hlt
in
hlt
mov
xchg
roll
and
adc
lea
insb
icebp
and
add
push
scas
test
jo
fnstsw
in
push
adc
push
loop
call
mov
or
sbb
sub
imul
pop
mov
push
and
jo
mov
ss
add
test
cmp
mov
xchg
pushf
leave
jle
jb
movsl
clc
xor
repz
test
jno
pop
mov
xor
sub
mov
mov
sbb
aaa
jno
in
mov
dec
sahf
loope
daa
jne
ja
sbb
outsl
jmp
dec
mov
outsl
out
aam
fnsave
into
adc
mov
or
subb
jb
push
pusha
inc
push
mov
cmc
sub
fwait
out
div
add
js
in
sub
lcall
std
mov
jo
call
adc
push
inc
icebp
insl
or
call
cwtl
insl
inc
dec
xchg
sub
popa
mov
xor
jecxz
fmull
lcall
xchg
scas
ds
cmpsb
pop
outsb
stos
xchg
pop
cmc
dec
xlat
popa
mov
je
enter
ja
mov
inc
into
outsl
enter
sub
jmp
inc
stc
scas
jbe
xchg
shrl
icebp
popf
int3
cmpsb
xchg
imulb
in
mov
aas
mov
aas
bound
into
sbb
jge
and
lds
mov
cld
push
mov
vpsllq
push
into
imul
daa
lahf
insb
and
and
btr
push
dec
lock
and
test
imul
adcl
fsubrp
scas
ds
push
push
sub
ror
jmp
add
add
test
cmpsb
cmpsb
into
adc
mulb
and
jnp
popf
fdiv
xchg
das
les
jmp
mov
stc
push
adc
fists
pop
xor
pop
js
repz
test
addr16
xor
pusha
lret
clc
inc
jno
dec
pop
push
or
aaa
sub
daa
lahf
outsb
imul
add
inc
rolb
jae
lods
test
dec
mov
push
fs
cmp
lahf
pop
jg
jno
test
mov
inc
shl
xchg
mov
fidivl
sub
dec
cmp
out
cltd
mov
and
leave
add
cltd
pop
mov
xor
mov
jg
loopne
adc
dec
sub
iret
sub
push
fcoms
push
xor
push
lahf
inc
mov
ss
stos
cmp
movb
loope
pop
in
imul
dec
imul
lods
inc
xchg
inc
ret
and
mov
dec
imul
add
sub
adc
xchg
ds
adc
filds
inc
dec
outsl
and
stos
dec
lahf
mov
sarb
xchg
push
std
dec
ljmp
repz
cld
stos
cmp
mov
iret
cmp
stos
sti
cld
pop
cmc
jbe
subl
push
insb
repnz
add
out
fistpl
daa
addr16
jno
push
pusha
and
fcmovnbe
xchg
out
int3
inc
jne
orb
xchg
xchg
outsl
and
stos
lds
mov
xchg
mov
jnp
roll
sbb
xchg
cwtl
cmc
mov
mov
mov
test
ffree
inc
lcall
stos
test
lahf
add
push
sbb
imul
repz
push
or
sub
fidivrl
hlt
mov
xchg
rolb
pop
mov
addr16
leave
fldenv
loopne
sub
adc
fucom
xchg
in
fisubs
mov
pusha
arpl
jmp
push
inc
rcll
imul
into
push
fisttps
pop
or
into
add
push
jmp
arpl
lahf
dec
mov
inc
cmp
insl
mov
cmp
sbb
fistl
insl
into
jo
gs
mov
loopne
cmp
clc
sbb
jle
push
xor
jl
or
lret
add
leave
xchg
pop
xchg
xor
mov
mov
pusha
jmp
loop
dec
loopne
faddl
test
iret
inc
sahf
pop
hlt
das
cmp
mov
adcl
rclb
inc
lret
xchg
push
imul
aam
adc
ret
fstl
sub
ja
mov
jmp
add
shlb
jmp
push
repz
add
aaa
or
mov
mov
add
jle
hlt
clc
push
jmp
jno
xchg
loope
sti
movsl
insl
pop
xor
test
jo
inc
push
pusha
in
fwait
push
shll
stos
outsl
jb
stos
stos
pop
jae
mov
push
lret
arpl
jmp
incb
es
enter
daa
repz
cmp
aad
sub
xlat
dec
pop
enter
leave
sub
add
sub
push
cli
cmp
mov
in
pushf
add
test
ret
xor
jge
out
dec
fstpt
adc
ja
push
or
adc
mov
and
sbb
inc
leave
imull
jnp
sti
out
or
bound
cmp
sbb
jno
xchg
cltd
js
in
or
mulb
testb
fidivrl
adc
xorl
cmp
leave
push
lcall
lret
push
and
inc
fidivl
jecxz
xchg
fcomps
and
ret
pop
aas
bound
adc
test
xor
arpl
jle
jmp
pop
jo
fbstp
les
and
mov
sbb
in
lea
mov
cld
jne
cmp
leave
or
mov
ss
mov
mov
push
stos
mov
rol
mov
aas
loope
or
xchg
adc
pop
xchg
xchg
or
in
jmp
sbb
mov
imul
push
rcll
fwait
cmp
jbe
out
outsl
lock
nop
cmp
xor
cmp
cmp
add
adc
out
je
je
mov
sub
movb
and
sub
jge
inc
ficoml
fiaddl
test
cmpsb
jecxz
fwait
dec
mov
push
adc
or
loope
jne
fs
out
push
jnp
int
invd
xchg
loop
or
jmp
insb
and
jle
xor
and
adc
sbb
push
jb
and
popa
repz
pop
push
sub
int
repnz
lea
cmp
hlt
imul
jle
bound
hlt
pushf
sahf
mov
adc
inc
pop
in
lcall
int3
in
jl
mov
push
cmp
mov
or
fstpl
pop
fidivs
in
jecxz
sub
push
int
inc
pop
push
sub
push
data16
fs
aad
icebp
repnz
jmp
aas
push
incl
aas
xchg
lret
cmp
jmp
dec
pushf
mov
add
aas
jns
and
subl
adc
cmp
es
xor
pusha
push
xchg
sub
out
fldt
or
inc
sub
fucomi
adc
cmpsb
dec
push
daa
fsts
pop
mov
push
pop
mov
mov
mov
stc
clc
clc
mov
adc
add
mov
xor
xor
dec
sbb
inc
or
xor
adc
in
xor
in
jle
hlt
inc
dec
add
ss
notw
aam
addl
fisttpll
lods
sub
bound
stos
mov
inc
pop
adc
pop
mov
js
push
ljmp
test
mov
std
cmpsb
fs
daa
jns
xlat
mov
mov
pushf
movsb
outsb
mov
mov
int3
cmp
std
jp
jmp
or
call
pop
sub
imul
mov
loop
inc
xchg
mov
push
xor
stos
es
fnstenv
push
xorl
or
sbb
jns
insl
insl
test
daa
sub
arpl
test
jge
andb
aaa
loopne
lock
jecxz
out
dec
iret
mov
gs
outsb
xchg
out
xor
or
cltd
ja
js
mov
cmp
xor
adc
fcmovnb
push
jo
adc
push
inc
inc
or
fucom
pop
xchg
rolb
mov
xor
adc
pop
stos
mov
out
dec
mov
movsb
adcb
xlat
cmc
jge
icebp
dec
push
push
inc
mov
jo
mov
xorl
sbb
lds
sbb
cs
sarb
jge
jle
adc
push
pop
out
inc
mov
sbb
mov
mov
pop
shl
dec
int3
loope
lea
mov
push
mov
push
sarl
scas
xchg
insb
std
jmp
pusha
mov
or
xchg
loopne
fwait
cwtl
mov
pop
sbb
addb
sti
cmp
andl
sbbb
std
add
test
sahf
and
fidivs
push
jns
call
push
es
mov
dec
jg
mov
pushf
shlb
ljmp
lea
leave
pop
push
dec
or
mov
leave
or
pop
loopne
and
repz
cmp
and
test
pushf
sub
ret
sbb
or
push
pusha
dec
pusha
xor
push
jg
ljmp
aad
push
ljmp
movsl
dec
ja
push
cmpsb
addr16
mov
add
add
mov
and
add
inc
movsb
push
sti
sbb
jno
ja
sub
fwait
mov
roll
mov
mov
and
pop
cmpsb
push
sub
ss
jne
fistps
in
pop
sub
lock
adc
insb
insb
push
out
mov
dec
jg
pop
xor
aas
adc
cmp
cli
sarl
cs
cld
push
dec
add
pop
or
es
test
out
mov
fsub
out
loopne
xchg
push
jmp
mov
aam
stos
data16
outsb
addr16
fsubp
mov
xor
mov
into
nop
lock
mov
xchg
push
add
imul
mov
push
lret
fcoms
insb
jle
xor
jge
jbe
adc
and
jmp
das
jl
into
cmp
mov
mov
out
mov
sbbb
mov
leave
std
sub
dec
adc
out
jmp
or
jno
adcb
cwtl
mov
movl
clc
notl
inc
int
sbb
stos
sub
pop
push
gs
hlt
sbb
ds
xor
adc
nop
cmpsb
and
test
test
add
cmp
fdivrp
push
pushf
xchg
push
jle
push
rorb
adc
or
out
mul
movl
pusha
xchg
add
xor
inc
andl
int
jo
in
jo
inc
hlt
rcll
test
push
lahf
js
lods
in
jns
push
pop
pop
aam
mov
pop
inc
mov
sti
fcmovnu
cmpsb
and
xor
pushl
or
sub
jnp
dec
push
inc
stos
fbstp
imul
and
cmpsb
mov
stos
push
jo
push
jno
jecxz
sbb
lock
cli
fdivrl
scas
lods
jl
mov
dec
cmpsb
sbb
adc
out
in
inc
pop
jp
iret
jg
xchg
mov
addr16
movsl
mov
lret
ds
sarl
movsl
dec
inc
inc
cwtl
mov
mov
loop
ja
push
mov
fcompl
flds
pusha
out
rorl
daa
push
iret
xor
mov
mov
xor
push
call
xchg
mov
jo
lret
xchg
ficoml
movsl
lret
jp
fwait
enter
pop
push
pop
in
mov
punpckldq
shrb
xor
mov
cwtl
push
ja
rcr
cltd
sub
sahf
mov
push
add
add
and
sbb
enter
scas
pop
inc
pop
je
mov
mov
fiaddl
cmpsl
push
lahf
add
add
sbb
inc
mov
cmp
or
jae
mov
fcmove
add
in
test
pop
movsl
fiaddl
xor
int
add
ja
movsb
cmp
nop
jb
mov
fmuls
std
repz
sub
movsb
mov
jns
add
ret
iret
add
sub
fisubrs
push
pop
add
dec
icebp
mov
sbb
shlb
je
bound
add
inc
lds
mov
push
jo
push
sub
or
mov
sbb
sub
pop
pop
sbb
pop
movsl
push
xchg
dec
pop
hlt
popf
cmp
dec
mov
mov
push
fstpl
ja
xlat
push
and
data16
stc
xchg
mov
mov
ffree
repz
and
and
sbb
leave
ja
pusha
std
lock
fs
dec
aaa
in
stos
mov
lods
fiaddl
inc
in
loop
imul
arpl
fldcw
and
jb
icebp
lock
rorl
jecxz
push
mov
lds
leave
int3
sbb
xor
lds
add
pop
psllq
adc
mov
dec
xchg
add
xlat
out
fcoms
mov
aas
sahf
cmp
inc
sub
push
or
jg
loop
js
lds
fisubrl
aam
mov
mov
in
dec
fisubrl
rcr
icebp
movsl
sbb
ja
xchg
out
xchg
and
pop
sbb
movaps
rolb
int3
sarb
add
push
lcall
subl
or
stos
fisttps
xchg
out
outsb
sub
mov
inc
xor
and
mov
sahf
xor
mov
jg
ret
dec
out
sbb
cmpsb
loopne
or
adc
jns
lds
pop
xor
fsubl
jne
daa
test
and
adc
in
insl
cmp
inc
jl
rolb
add
out
pop
mov
lea
insb
aas
call
iret
push
jle
fbld
dec
mov
push
bnd
out
mov
adc
push
xor
add
xchg
mov
mov
xchg
sbb
js
stos
fistpll
popf
notb
roll
add
mov
insb
scas
in
push
mov
je
out
lcall
lods
cs
pop
mov
mov
sbb
or
test
jbe
and
icebp
loopne
sarl
add
je
xor
aad
cmp
rclb
xchg
sbb
or
lea
dec
mov
cmp
pop
insb
test
dec
sti
fld
insb
test
add
rcr
fs
in
ret
push
cmpsl
out
js
push
pushf
mov
cld
cmp
jge
out
jle
pop
jmp
mov
or
ljmp
jecxz
mov
cwtl
jno
pop
fsts
jg
popf
xor
adc
fs
lcall
dec
mov
mov
daa
lds
fwait
dec
cwtl
leave
adc
push
mov
rcrl
sbb
repz
movl
xchg
popf
mov
in
inc
cmpsl
ss
cwtl
fiadds
mov
test
repz
dec
pop
into
mov
pop
mov
mov
inc
les
mov
lret
mov
pop
inc
push
mov
or
pop
push
shlb
mov
cmp
xchg
fcoml
push
wbinvd
push
jb
lahf
mov
lahf
fbstp
outsb
scas
mov
inc
popf
and
and
xchg
push
and
jne
mov
sbb
mov
xor
mov
mov
adcl
clc
inc
pushf
pop
mov
push
cwtl
pop
in
stos
fs
ljmp
push
push
jp
or
push
outsl
xchg
mulb
jnp
sbbb
mov
aaa
ss
bnd
addr16
mov
jecxz
daa
aas
push
stos
popa
jmp
addr16
test
out
fwait
fwait
jmp
sbb
xor
ja
inc
jmp
outsl
leave
out
testb
fidivs
xchg
xor
mov
push
mov
daa
mov
mov
scas
pop
xchg
fcompl
sarb
dec
int
loope
aam
or
addl
out
iret
mov
mov
aaa
or
cmp
aad
pop
icebp
mov
jle
inc
lods
push
or
loopne
cmp
lods
cmp
pop
sarb
and
pop
push
push
xor
mov
js
mov
sub
xchg
es
inc
jle
add
and
and
mov
cld
aas
jl,pt
push
stc
push
xchg
cmpl
idiv
jge
scas
jecxz
cmc
xor
or
mov
gs
push
dec
andnps
pop
gs
jbe
xor
movsl
push
mov
jl
call
inc
xchg
pop
std
push
ret
mov
pusha
mov
test
subl
subl
addr16
xor
adc
push
fyl2x
out
and
jns
loope
push
call
jb
mov
xchg
fisubrl
lock
inc
mov
pop
push
cmp
mov
cs
nop
push
add
push
aam
leave
arpl
sbb
sbb
stos
jp
lods
imul
ds
rcr
mov
aad
cmp
adc
ss
aam
es
mov
inc
in
mov
cmp
pop
rorb
or
outsb
sbb
mov
jecxz
sub
sub
rorb
xor
add
inc
and
or
inc
sbb
mov
or
mov
mov
pop
jmp
fdivr
aaa
xchg
jnp
jl
push
ret
popf
inc
add
mov
mov
xchg
xor
ds
aas
outsb
arpl
mov
popf
adc
fidivrl
mov
scas
cmp
sahf
stos
leave
movb
repnz
and
cmp
jo
or
ljmp
lahf
insl
ja
xor
dec
adc
add
push
shll
fwait
add
xor
orb
adc
inc
and
in
cwtl
push
inc
adc
push
xchg
shlb
orps
mov
adc
sbb
ja
ret
inc
push
je
clc
jg
mov
stc
inc
pop
out
mov
jecxz
push
pop
sbb
sub
lret
cs
mov
pop
jns
push
scas
dec
sub
jp
cli
lcall
xor
xor
mov
and
sbb
sbbb
leave
rclb
aad
ja
imul
and
mov
mov
lds
pop
ljmp
aaa
or
sbbb
aaa
in
mov
lahf
push
dec
lods
mov
xchg
jmp
into
outsl
jae
ficompl
leave
inc
lcall
jmp
dec
cmpsl
sub
fdivr
les
mov
loopne
shll
pusha
adc
jnp
scas
jae
dec
sarb
or
jne
sbbb
enter
in
movsl
movl
jl
insl
pop
fwait
pop
repz
daa
addb
movsb
jns
les
outsl
orl
mov
xchg
push
dec
stos
inc
xchg
fsubr
sub
shlb
jae
movsl
pop
dec
cmpsl
outsl
imul
xchg
ret
lds
and
jb
xchg
pop
int3
lcall
jns
xor
bound
lret
ja
ret
xchg
mov
xchg
sahf
pusha
fs
clc
mov
push
subl
push
cmc
int
lock
nop
mov
xchg
les
daa
dec
sub
jecxz
mov
xor
aaa
jae
int3
jns
lret
jge
rcrb
addb
mov
pushf
adc
cmpl
out
out
cltd
sbb
push
mov
push
lcall
and
test
aam
fcompl
add
mov
inc
les
clc
sbb
leave
bound
jnp
push
fwait
cmc
xor
cmp
jg
dec
scas
mov
shll
mov
fstpt
gs
cmp
sub
sbb
mov
stc
dec
sub
dec
push
push
inc
inc
in
push
jns
or
call
pop
cltd
arpl
das
push
push
cmp
inc
pop
pop
jg
pushf
dec
xorb
cmp
sub
xor
jecxz
sub
popf
incb
in
stos
xchg
hlt
into
lock
movsl
mov
mov
xor
or
cs
jge
mov
or
mov
loopne
hlt
out
sbb
dec
sub
mov
jo
outsb
mov
test
outsb
ficoml
nop
jl
cld
dec
sahf
mov
add
lcall
cmp
inc
cmpsb
push
push
add
push
ds
xor
push
sub
aam
std
add
inc
jmp
or
addl
int
and
pop
jl
cld
sub
loopne
push
mov
push
xchg
xor
les
in
jp
sahf
push
add
ret
int
aam
adc
lret
sbb
js
cwtl
xor
xchg
test
mov
negb
int3
xchg
imul
std
sbb
out
sbb
mov
jne
cmpsl
mov
sti
ret
pop
pop
xor
ja
sub
lea
pop
test
or
push
inc
popf
ret
sub
and
div
inc
sahf
dec
jmp
mov
cwtl
lods
cmpsb
mov
sarl
inc
ret
xchg
xor
jne
jg
mov
in
push
xor
clc
and
das
sub
dec
or
enter
out
repz
push
fst
xchg
iret
mov
or
jecxz
ret
xchg
imul
lcall
cli
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
addr16
bound
bound
fidivrs
shrl
aad
mov
lds
ds
xchg
aaa
jmp
mov
push
aam
jg
mov
je
push
jp
popf
jp
sbbb
cltd
sbb
cmp
js
ja
push
es
push
arpl
adc
sub
fnsave
inc
add
add
test
adc
negb
inc
hlt
push
sbb
test
mov
mov
dec
popf
ja
test
inc
adc
pop
xchg
dec
stos
sti
pop
sub
data16
inc
xchg
repnz
iret
sti
sbb
push
stc
pop
or
fwait
lods
and
or
aas
jge
inc
or
mov
fnstcw
ss
cs
outsl
ret
bound
jle
sbb
repnz
fs
test
cmpl
jl
mov
orb
push
sub
jo
or
stc
push
aaa
cmp
xor
sub
sub
pop
imul
stos
mov
jne
icebp
and
enter
sbb
bound
sub
jnp
jno
cltd
movsl
xchg
cmc
sub
jl
in
pop
xchg
punpckhbw
js
in
cld
pop
sbb
inc
mov
dec
mov
aam
push
jecxz
aaa
dec
inc
testb
jb
jmp
mov
push
loope
cli
push
out
cmp
int
pushf
mov
dec
mov
out
fnstsw
xchg
nop
ja
adc
cmpps
aaa
fimuls
xchg
fisttpl
rorl
xchg
dec
inc
sbb
roll
inc
ret
out
add
int3
fucomp
bound
lret
leave
mov
xchg
mov
xchg
jle
outsl
fcmovnbe
dec
fisttps
jbe
cmp
adc
pop
in
push
xchg
adc
popa
movsl
sahf
les
outsb
repnz
adc
arpl
out
sbb
mov
stos
leave
stc
mov
jb
ljmp
cltd
fcmove
iret
test
movsl
fdivrs
lcall
push
fidivs
imul
repnz
pushf
cmpsb
sub
pop
pop
adc
dec
imul
adc
xchg
cld
ret
push
fidivl
or
dec
sub
negl
fstps
scas
addr16
das
cmp
mov
in
xor
enter
test
push
cwtl
cltd
jns
nop
cmp
into
pusha
pop
inc
mov
inc
daa
inc
mov
push
or
mov
ret
pop
pop
inc
out
test
add
mov
mov
mov
adc
pop
mov
mov
outsl
push
jae
mov
pop
movsb
ja
pop
lods
xchg
sub
pop
test
aam
rcl
adc
out
hlt
xor
push
mov
dec
dec
fs
iret
pushf
inc
push
bound
hlt
jnp
or
ror
pushf
daa
fcomip
fcmovnb
adcl
inc
mov
sub
arpl
adc
out
nop
dec
arpl
jbe
sarb
sub
mov
mov
enter
pop
xchg
loopne
icebp
gs
add
xchg
push
mov
push
stos
jb
inc
sbb
popf
and
scas
in
xchg
sub
loope
je
or
jp
xchg
out
jns
mov
scas
aaa
test
nop
add
and
mov
aas
xchg
fs
push
inc
dec
mov
arpl
cmpsb
es
sub
push
test
lods
bound
out
mov
sahf
push
add
jo
fucom
ficompl
mov
add
xchg
je
movsb
adc
test
mov
push
clc
dec
sbb
arpl
stos
out
subl
and
cmp
push
push
mov
ja
test
and
pop
lret
loope
mov
lods
sub
imul
add
xchg
cmc
clc
mov
outsb
mov
dec
sub
test
push
daa
test
es
es
adc
mov
and
mulb
lods
jbe
bnd
adc
cs
xor
mov
push
nop
imull
cwtl
add
cli
stos
fdivrs
jmp
int3
mov
pusha
insb
lcall
xchg
ret
addr16
lret
icebp
xchg
mov
mov
xchg
adc
xor
mov
into
mov
sub
xor
lahf
sti
daa
pop
add
test
cld
ljmp
imul
data16
test
add
cld
imul
repnz
jp
in
sub
pop
adc
or
inc
push
lods
pop
push
shlb
pop
xor
movl
sbb
jb
inc
or
into
into
sub
adc
mov
jns
std
dec
mov
paddusb
out
sbb
pop
imul
cmpl
leave
scas
movsl
add
das
testl
roll
inc
out
sbb
arpl
js
or
shl
mov
adc
add
inc
aas
lods
lcall
push
scas
jg
mov
lcall
scas
cmpsb
ss
roll
xor
test
mov
jo
in
insb
sti
cmp
or
lcall
pushf
arpl
fs
test
in
push
inc
sub
sbb
daa
pushf
add
fnstsw
lcall
xchg
dec
jl
cmpb
jp
imul
jp
dec
in
scas
loopne
std
enter
or
push
arpl
cmp
enter
dec
and
imul
jge
test
inc
mov
aaa
pop
lods
cmpsb
dec
loop
fdiv
stc
and
les
lods
push
jle
clc
fistps
adc
in
faddl
out
push
lods
test
push
dec
andb
das
pslld
dec
mov
outsb
sbb
lods
inc
and
xchg
sti
cmpsb
fisubl
mov
xor
dec
xchg
test
ljmp
insl
xor
lods
scas
dec
jae
mov
fists
aad
pop
mov
shl
jp
mov
xchg
xchg
mov
pop
jmp
fwait
insl
sub
in
loop
popf
cmp
jne
or
rclb
and
pop
inc
bound
add
outsl
lcall
push
sub
das
jae
daa
mov
into
sbb
pop
je
in
mov
fidivs
in
sbb
hlt
mov
aam
subb
push
sub
cmp
xor
sub
pushf
pop
clc
pop
leave
stos
repnz
clc
push
call
loopne
out
sbb
aam
lods
pop
in
mov
pop
lods
jl
lret
mov
cld
lds
and
push
lcall
mov
add
adc
rcr
jae
outsb
cmpsb
mov
push
dec
xchg
test
shrb
in
sbb
cmp
data16
aas
pop
loop
pushf
adc
adc
arpl
cwtl
adc
cs
dec
pop
dec
jo
add
insl
sbb
insb
outsl
in
iret
pop
or
sub
mov
jmp
jecxz
insb
sub
popa
sbb
out
fwait
xchg
jmp
mov
fisubs
jb
sbb
popa
mov
scas
repz
mov
xchg
cmp
sbb
xchg
push
cwtl
jnp
cmp
sub
cmpl
mov
testl
jbe
jo
clc
repnz
loope
and
and
mov
iret
mov
ljmp
orb
xchg
aad
dec
push
mov
sbb
test
enter
sahf
mov
or
jae
jle
mov
xchg
sahf
aas
pusha
iret
cmp
ja
pop
ret
ss
in
sub
lods
aaa
aam
nop
push
cmp
insl
fsubs
stos
icebp
lea
stc
xchg
movl
mov
bound
add
jl
jmp
cmp
sub
and
jecxz
mov
popf
and
imul
inc
pop
lahf
loop
push
sbb
jb
adcl
sbb
pop
int
inc
push
shrb
xor
negb
sbb
hlt
inc
mov
push
xchg
mov
dec
inc
jge
pop
dec
sbb
sahf
call
or
adc
sbb
dec
enter
push
andb
sarb
jo
out
out
hlt
popf
and
lock
mull
aas
or
xchg
add
add
jp
jmp
movsb
sub
cmp
test
sub
fists
mov
jo
out
and
xchg
cld
mov
pop
fwait
int
dec
pop
xchg
jg
inc
fwait
out
insb
stos
jle
test
iret
mov
mov
pop
lock
or
lock
adc
jnp
push
in
lods
scas
adc
mov
pop
call
popf
xor
dec
add
xor
cmp
or
mov
inc
mov
mov
and
add
cmp
inc
test
cmpsb
loop
stos
mov
or
stos
mov
jbe
pop
popa
mov
cmpsl
mov
dec
add
out
lock
jmp
frstor
loopne
and
test
ljmp
pop
dec
popf
mov
mov
mov
pusha
jge
stos
fwait
pushf
xchg
jp
and
xchg
lcall
mov
pop
sub
mov
push
je
mov
add
cmpsl
add
int3
dec
pop
jp,pn
sub
out
adc
icebp
loop
add
sbb
sbb
mov
and
mov
out
repz
sbb
push
adc
fistps
lret
cmc
push
mov
xchg
and
mov
ljmp
lds
out
xchg
fisttps
push
mov
xor
adc
lret
push
int3
stos
mov
insb
xor
mov
inc
push
int
pushf
lods
jle
sahf
hlt
insl
mov
pop
mov
jnp
leave
jecxz
mov
es
aaa
cmp
jns
stos
loopne
pusha
sub
fisubrl
or
mov
mov
sbb
dec
mov
hlt
mov
outsl
je
dec
inc
lret
je
mov
stos
fdivrl
fst
mov
lods
je
popa
add
jp
pop
push
mov
sub
mov
in
loope
loopne
arpl
jo
pop
push
outsb
xchg
mov
and
push
cmp
cltd
nop
xor
fadds
dec
lret
mov
pop
inc
movsb
into
adc
out
call
cmpl
or
sub
xor
out
arpl
subb
dec
out
mov
add
iret
insb
rcll
lods
push
fadds
sbb
xor
sbbb
into
push
mov
xchg
jge
adc
push
and
cmp
add
fs
cs
loope
movsb
mov
lret
leave
rclb
mov
dec
loopne
jmp
pop
cwtl
xchg
imul
or
enter
sarl
push
mov
and
sti
xor
push
test
test
andl
adc
loop
adc
mov
into
and
sub
in
pop
cmp
js
xchg
or
or
cmp
test
sbb
mov
push
shll
pop
repnz
mov
cmp
jle
popa
out
sbb
mov
add
ss
xorl
inc
pop
popf
mov
fsubrp
mov
daa
inc
add
movsl
aas
shlb
jmp
scas
xor
sarb
rcll
fisttpll
rolb
pop
jmp
xchg
aaa
cmp
pop
aas
add
in
popa
nop
cmp
xchg
jbe
addl
stc
sbb
sbb
sbb
mov
xchg
or
enter
sub
int
stc
inc
jle
cmpsb
sub
das
das
jnp
pop
bound
push
es
mov
fs
adc
jg
lods
sbb
xchg
out
sub
xchg
and
jnp
into
mov
xchg
push
subb
jmp
sahf
outsl
rclb
popf
int3
cmp
lahf
or
pop
mov
cmp
jno
pop
lcall
fcmove
les
repnz
and
lock
or
cmp
xor
ss
dec
jle
cs
mov
ret
lds
or
xchg
mov
pop
sbb
mov
cmp
sbb
or
decl
ret
stos
lock
or
rcrb
push
out
dec
bound
push
jge
inc
les
loop
mov
scas
push
sbb
mov
push
mov
jne
dec
pop
movsl
insb
ret
or
pop
and
lret
lahf
pop
aaa
lds
int3
sbb
mov
call
push
jne
mull
xchg
and
stos
adc
sbbb
adc
vmovups
addr16
cmpsl
popf
loope
xchg
not
das
test
or
cmp
mov
inc
adcb
imulb
fisubrl
sbb
dec
xor
out
lea
mov
addr16
mov
in
add
cwtl
inc
outsl
popa
jae
divl
pop
xchg
imul
pop
clc
dec
arpl
cmpsb
cli
bound
ret
int
pop
pop
mov
push
xchg
and
xor
xacquire
xchg
stos
mov
xor
hlt
sub
mov
fnstcw
pop
cwtl
arpl
dec
inc
or
fdivl
movsl
add
movsb
xchg
stos
push
repnz
xor
and
sub
jge
aad
stos
incl
fs
hlt
push
in
popa
lahf
les
fcompl
enter
loope
jae
lahf
ret
cmc
lods
inc
cwtl
push
adc
mov
jns
or
cmpsb
cmpsb
enter
out
mov
addb
cmp
loopne
imul
out
push
ret
cmp
xchg
loope
push
push
pop
dec
add
imul
sbb
lret
mov
out
sub
dec
fdivrs
mov
data16
adcb
pushf
fwait
sub
or
orb
push
fistpll
push
int
sub
inc
inc
test
arpl
jnp
ret
mov
xor
cmpb
roll
cli
inc
or
movsl
ret
ret
xor
ja
jl
inc
test
xor
shl
stc
or
push
mov
arpl
rsm
xor
sbb
jno
jmp
mov
pushf
subl
xchg
in
shr
push
mov
mov
inc
in
les
jns
lods
inc
pop
inc
stos
nop
addb
test
and
xchg
push
dec
lods
adc
jno
push
cwtl
pop
loop
scas
jecxz
fidivl
sbb
frstor
jecxz
and
sub
cmp
scas
mov
mov
popa
push
lds
idivl
jae
jle
sbbl
sbb
imul
adc
cs
lahf
push
jnp
ljmp
popa
and
outsl
sub
pop
movl
pop
mov
jle
sub
sbb
pop
mov
sub
insl
ljmp
cmp
dec
jnp
lods
lods
push
jo
leave
sbb
push
mov
in
nop
mov
mov
pavgb
push
aas
insb
in
mov
inc
inc
inc
dec
stc
daa
outsl
add
cmp
hlt
xor
add
inc
clc
jne
add
xchg
cmp
adc
ss
lret
imul
mov
or
mov
nop
sub
pop
xchg
out
adc
push
mov
mov
bound
and
mov
sub
add
push
lret
jns
push
pop
xor
movsb
pop
jge
inc
mov
push
ljmp
mov
pop
pop
out
nop
andb
repnz
xor
push
and
divb
sub
fwait
jg
dec
out
bound
loope
xor
pop
rol
cmp
jl
popf
pop
test
inc
ficomps
popl
into
mov
lock
adc
and
jp
xor
inc
jbe
icebp
icebp
sub
lret
mov
int
dec
xchg
jle
js
lock
adc
mov
fidivrl
inc
xchg
inc
pop
mov
sbb
jnp
pop
cs
sub
cwtl
sti
out
sub
pop
sbb
outsl
xor
adc
dec
imul
adc
jmp
movsb
jae
fsubl
xorb
rcl
lret
mov
xor
fidivrs
loopne
fs
scas
sar
je
mov
dec
pushf
pop
aad
addr16
out
push
xor
jge
sti
nop
xchg
mov
aas
fdiv
pop
jns
pop
pop
xchg
test
push
add
xcrypt-cbc
cmpsl
push
sub
cmpsl
cwtl
or
sbb
fisttpll
mov
or
pop
iret
les
das
dec
lods
and
ret
js
inc
cmp
and
jmp
test
add
cltd
push
sbb
fs
xchg
je
imul
stos
or
sub
mov
lds
int3
cmc
test
jge
sbb
cltd
add
je
dec
add
ja
add
pushf
rcll
dec
push
add
xchg
lods
insl
leave
mov
mov
stos
out
faddl
cltd
sub
lock
cmp
movsl
xchg
or
add
je
inc
xchg
test
outsb
push
xchg
sbb
push
mov
or
stos
scas
mov
sahf
scas
jno
test
jmp
jo
push
test
ljmp
mov
iret
push
xor
cmp
ret
cmp
or
popf
js
or
xor
mov
inc
into
fnstcw
pop
pushf
jle
dec
rcl
rcrl
das
mov
xlat
loopne
sub
xchg
fidivrl
fnsave
mov
pop
jno
dec
pop
or
adc
push
mov
inc
mov
cli
out
sbb
test
push
gs
and
loopne
and
jge
sub
mov
daa
aam
and
fsubrs
sub
mov
jno
mov
fcomip
mov
jmp
ljmp
roll
or
dec
aam
inc
and
popa
xchg
add
popf
subb
jae
xor
addb
or
dec
push
inc
add
fadds
aas
push
mov
adc
xlat
dec
faddp
sbbl
mov
mov
cli
sub
ljmp
mov
dec
les
fsubr
fsubrs
sub
mov
ficoml
in
adc
rclb
push
dec
out
xchg
mov
les
xor
out
lret
es
jbe
cmpsl
aad
out
pop
je
nop
xor
pop
fsts
outsb
mov
lcall
cmp
push
push
adcl
out
cld
sbb
or
dec
sti
mov
inc
push
imul
neg
xor
mov
inc
es
lods
mov
aad
adc
loope
loope
push
dec
mov
push
icebp
push
lds
cmp
mov
jns
pop
test
pop
lret
dec
xchg
xchg
adc
inc
sti
jle
and
out
lea
add
inc
adc
and
inc
rep
out
mov
addl
clc
cmp
xchg
inc
in
or
rol
jns
xchg
fsts
in
xor
push
push
push
mov
cld
xchg
lods
or
shrb
fnsave
js
movsl
dec
lret
jmp
roll
xor
pop
cmp
add
in
ds
lods
sbb
pop
pop
leave
sbb
aam
inc
adc
hlt
pop
xor
xor
xorl
stos
xor
sar
inc
fisttps
dec
xchg
mov
vandps
sub
loope
pop
je
outsb
ret
loop
nop
push
out
cmp
sub
loope,pn
inc
mov
fsubl
adc
ljmp
dec
ss
mov
pusha
mov
repnz
in
sbb
jns
mov
or
push
push
jns
lds
test
fimull
sbb
cmpsl
outsl
loop
push
sar
ljmp
pop
sub
popa
mov
mov
add
xor
mov
push
cmpsb
lods
adc
sub
das
add
test
roll
and
lock
xlat
push
sbbb
dec
cli
add
in
imul
mov
repz
sub
sbb
dec
lods
or
dec
int
shrb
adc
xor
jp
dec
and
push
sub
xor
in
shll
jae
test
pop
adc
movsl
cltd
aas
xchg
pop
jo
push
push
mov
negl
add
sbb
dec
out
and
nop
xlat
mov
push
pusha
jb
mov
flds
daa
mov
sub
lods
xchg
fidivl
fldcw
andb
sahf
and
jmp
push
ds
mov
jb
in
mov
mov
in
and
ss
loope
mov
cmp
jb
out
cmp
repnz
les
mov
jl
loop
hlt
push
ret
es
dec
mov
xlat
push
pop
lea
mov
sbb
hlt
es
sub
pusha
inc
mull
je
cwtl
jb
out
es
mov
or
dec
dec
insl
mov
push
cwtl
les
sbb
pop
mov
in
rolb
mov
nop
and
push
and
movsl
fwait
enter
dec
pop
movsb
mov
js
rcrl
jp
repz
out
mov
arpl
cwtl
ss
add
or
jne
aaa
jl
fnstenv
push
stos
pop
xor
cltd
inc
sbb
mov
jle
loopne
nop
or
add
sub
pop
pop
xchg
mov
jo
xchg
call
ja
shll
or
sbb
sbb
imul
pop
xchg
pop
jae
inc
orl
inc
mov
ds
push
xchg
rol
push
dec
sub
ud2
pop
dec
ret
and
in
mov
cmp
and
pop
inc
mov
pop
test
jbe
or
fs
cmp
mov
lret
mov
pop
push
jge
es
std
push
xor
call
or
xchg
and
rcrl
mov
loop
jno
jmp
add
push
mov
aad
mov
inc
sti
call
inc
or
and
jg
inc
or
mov
mov
cltd
lea
xchg
stc
pop
ret
inc
pop
imul
push
pop
mov
movsl
xchg
xor
lahf
mov
icebp
cld
sbb
xlat
test
cmp
shl
and
jl
dec
loopne
lcall
loop
push
fadd
rcr
jmp
fdivrp
addr16
lcall
inc
mov
add
jmp
lock
lcall
daa
add
jge
cld
pushf
push
add
mov
mov
ret
stc
push
lods
hlt
mov
mov
pop
in
sbb
lods
shl
pop
xlat
es
mov
inc
pop
pushf
xchg
icebp
jecxz
jbe
fmuls
rorl
adc
stos
xchg
add
push
iret
repz
pop
sbb
pop
mov
mov
push
pop
imul
sbb
and
cwtl
jo
es
fmull
shr
sbb
cwtl
lea
stc
xor
add
in
cmp
sub
js
cmpsl
push
cmp
sbb
es
mov
jmp
jne
ret
ljmp
adc
popa
pop
mov
ror
or
fmuls
mov
jge
jnp
test
cs
mov
leave
cmp
lds
popf
jmp
mov
push
pop
add
insl
in
cmp
cmp
mov
arpl
cmpsl
dec
hlt
adc
repz
mov
mov
mov
out
leave
enter
mov
adc
adc
pop
jnp
inc
jg
jno
out
hlt
js
int3
lcall
lods
or
or
jno
pusha
push
in
or
dec
dec
sub
mov
fsubl
push
jae
cmp
aam
push
jle
xor
insl
push
fsubl
lret
jle
popf
jns
inc
pop
mull
inc
jg
add
rolb
sbb
bound
fwait
es
xor
add
sbb
jle
sbb
inc
jecxz
mov
inc
dec
push
inc
pop
xor
test
dec
mov
xor
sub
sti
xchg
ret
inc
lret
push
idivl
out
jo
jo
ja
push
adc
adc
stos
add
cmp
fwait
pop
fistps
and
mov
mov
dec
mov
mov
ret
or
cmpl
mov
shll
sub
daa
pop
ret
cltd
mov
xor
add
sbb
loope
cmpsb
jmp
xor
cmp
xor
repnz
negl
and
ljmp
mov
nop
xchg
xchg
lods
test
mov
push
cmp
inc
cmp
sub
jmp
mov
flds
shl
and
rcrl
test
xchg
sbb
pop
movsl
jae
outsb
cmp
sbb
addb
and
lret
inc
decl
pop
imul
xor
aad
cmp
xor
repz
mov
addr16
xchg
adc
repnz
pop
sub
pop
and
test
sub
outsb
fs
scas
arpl
ja
xbegin
cmp
cmp
push
cmp
outsl
add
test
loopne
xchg
push
adc
cs
jp
fwait
adc
cmpsb
call
repz
jae
call
leave
ds
mov
adc
jnp
aad
cmc
mov
fwait
mov
xchg
add
mov
mov
pop
or
add
cmp
dec
dec
push
push
sar
and
loopne
xlat
rcrl
les
xlat
adc
fdivrs
lret
inc
pop
xchg
sbb
sti
cmp
fisttps
stos
adc
pusha
jmp
push
xchg
orb
jae
pop
cmp
lds
mov
lock
pop
lock
and
dec
xor
xchg
jmp
fdivl
sub
adc
loope
and
test
pop
xlat
lret
shlb
mov
ds
add
add
inc
enter
add
leave
jb
adc
dec
lds
dec
lcall
daa
jecxz
loop
cmp
mov
pusha
shlb
mov
aaa
cld
inc
add
in
inc
mov
xchg
jns
jp
popa
add
push
or
mov
int
arpl
cwtl
mov
cltd
inc
jmp
jl
das
pop
popf
pushf
fadds
rorb
aaa
sub
mov
dec
lret
cs
scas
aam
pop
int3
dec
mov
out
add
sbb
addr16
adc
mov
mov
loopne
mov
mov
mov
call
movsb
idivb
pop
stc
pop
sub
mov
nop
sbb
lods
sub
inc
xor
add
push
inc
cmpsb
outsl
mov
sub
dec
mov
aam
dec
mov
test
decb
int3
add
xchg
pop
xlat
xchg
cmp
movsl
adc
incb
leave
cli
lret
cld
dec
mov
dec
test
lcall
push
xlat
push
ret
icebp
shlb
jne
push
ljmp
inc
inc
push
add
add
inc
push
test
daa
dec
mov
mov
cmp
js
mov
jge
mov
dec
das
movsl
sub
add
loop
pop
xchg
insl
ljmp
clc
sub
sub
inc
adc
notb
push
mov
mov
xor
loopne
pop
fisubrl
les
nop
pop
in
std
push
dec
dec
adc
jle
mov
mov
mov
ja
mov
repz
and
mov
sub
and
cwtl
sbb
in
cmp
ljmp
aas
inc
repnz
push
into
push
push
adc
pop
push
ja
pop
les
js
popf
jg
jecxz
iret
add
inc
jmp
aam
sbb
dec
lods
dec
mov
jmp
jg
jne
out
push
and
xor
fdivp
mov
jle
mov
std
sahf
call
lahf
or
sahf
xor
add
and
cli
add
lcall
rolb
movsl
enter
faddl
insb
push
cltd
ret
clc
sbb
dec
cmp
mov
std
xchg
fiaddl
stos
jmp
push
push
and
outsb
adc
insb
mov
lret
bound
pop
sub
es
addr16
cmpsb
fwait
loope
test
mov
ds
jl
jmp
lret
mov
out
movsb
lods
out
mov
ds
push
inc
mov
in
xchg
mov
lea
roll
cwtl
push
dec
fnstsw
movsb
incl
insl
rol
pop
dec
rcrl
int3
pop
mov
fistpll
jl
ds
push
jmp
ds
data16
push
adc
lods
cmp
int3
enter
or
scas
dec
insl
fs
aam
call
pushl
inc
mov
xchg
mov
xchg
cli
mov
push
ret
loop
mov
jne
push
lock
adc
insl
mov
jnp
ds
scas
jle
pop
addr16
mov
stmxcsr
dec
pop
in
pop
sbb
ret
jg
push
popf
repz
mov
idivl
jle
push
mov
stc
loop
and
inc
pop
divl
and
insb
xor
sbb
or
dec
cmp
and
jmp
mov
inc
fdivs
fadd
xchg
or
ret
adc
xor
pop
jne
push
out
fstl
cltd
aad
movsl
pushf
or
mov
xchg
push
pop
in
cmp
sub
xchg
jo
aam
xchg
into
rcr
es
jo
jmp
nop
mov
and
push
dec
stc
mov
into
aam
xchg
ret
and
ror
idivl
push
push
dec
cwtl
mov
stc
inc
in
mov
stos
jne
sub
push
shrb
das
or
mov
sub
shll
xlat
xor
add
xchg
stc
clc
mov
cmp
scas
loopnew
and
pop
jns
fs
jnp
std
int
push
jae
mov
inc
xor
push
fbstp
std
push
jmp
sbbl
jp
icebp
das
pop
mov
xchg
inc
xchg
push
movsl
xchg
gs
aam
aas
ret
jns
in
pop
mov
lret
test
adc
fldt
sub
dec
and
xor
pop
loope
or
fadds
cmp
lods
sbb
inc
pop
jle
mov
jle
dec
nop
push
pop
negl
lret
adc
iret
std
and
fnstenv
mov
popa
mov
andb
pop
dec
push
xchg
push
push
jbe
sbb
daa
push
call
sub
mov
mov
xor
jp
or
cmp
mov
dec
movsl
out
sti
lret
cmpsb
out
repnz
xchg
shlb
cmp
pusha
or
mov
lret
mov
pop
and
xchg
pop
aas
in
int3
enter
mov
daa
jmp
xor
sub
lret
lock
and
and
cltd
add
push
lods
jle
mov
jbe
xor
dec
push
xchg
lea
jne
mov
mov
mov
shl
in
xchg
mov
add
cmpsb
nop
fsubr
push
mov
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
into
mov
fsubs
cmp
bound
rorl
ja
add
push
stos
jmp
enter
cmc
pop
shll
mov
scas
add
or
inc
sbb
push
mov
leave
and
mov
in
test
pop
xor
js
flds
or
dec
popf
in
call
inc
in
lret
pop
inc
imul
les
ja
icebp
pmulhw
cld
mov
lods
dec
mov
lahf
sub
out
push
cmp
or
add
cltd
and
dec
and
push
stos
cmp
subb
cmp
jbe
push
push
and
dec
xchg
inc
imul
into
daa
notb
push
xchg
ficoms
push
mov
cmp
pop
and
lahf
in
inc
and
and
pop
sbb
push
mov
shl
inc
rcl
sub
scas
les
loop
mov
lret
pop
jae
addr16
dec
mov
or
in
imul
lret
xchg
mov
cmp
xchg
mov
inc
aad
mov
mov
mov
test
lods
out
jecxz
lock
daa
das
dec
not
repz
sub
pusha
jbe
addb
icebp
cld
add
nop
les
mov
or
push
jle
or
das
aaa
add
shrb
pop
cld
add
xchg
daa
fs
inc
lahf
out
dec
push
shll
sbbl
dec
fnstenv
xchg
sbb
and
into
lea
daa
sub
cmc
jo
pop
aas
mov
ss
sbb
fdivrs
ret
pop
lea
xlat
jmp
lea
dec
sbb
xchg
movsl
rcrb
sti
xchg
repnz
xchg
mov
gs
out
pop
xchg
jp
popf
stos
jne
imulb
daa
negl
lea
lahf
mov
fdivr
mov
loop
sarl
mov
or
scas
pop
imul
adc
imul
xorl
aad
fidivl
dec
sbb
sbb
push
fbstp
mov
ficompl
imul
sub
inc
pusha
repz
out
sbb
pusha
pop
pop
adc
vsubpd
divb
mov
testl
scas
mov
sbb
sahf
outsl
punpcklbw
test
xor
or
push
pop
pusha
fcmovnbe
movsb
push
lret
mov
stos
sub
sbb
sbb
mov
push
sbb
mov
jae
pop
insl
imul
aam
in
lods
jae
sbb
sbb
mov
pop
fsubrs
hlt
cmp
das
int3
xor
inc
ja
add
inc
das
sbb
add
enter
mov
pop
scas
scas
inc
jb
pop
lahf
push
mov
jp
pop
mov
xchg
ret
cs
sub
mov
clc
orl
add
cmpsl
popf
shrb
outsl
jle
pop
push
outsl
movsb
lahf
lods
xchg
ja
or
mov
mulb
lret
cld
mov
pop
sbb
or
jp
xchg
in
jne
or
add
pop
sub
fstpl
and
stos
inc
sahf
sahf
loope
jb,pt
cwtl
int
pushf
and
sarl
popf
or
dec
inc
or
pusha
lods
inc
enter
outsl
add
out
xchg
scas
loopne
push
std
add
movsb
xchg
inc
je
mov
and
jl
inc
test
mov
sbb
mov
sbb
inc
test
adc
hlt
lock
out
mov
lea
xchg
stc
cli
mov
add
jbe
xor
loop
popa
mov
hlt
in
push
xchg
mov
push
add
lret
cltd
mov
sub
mov
cld
bound
cwtl
sub
ret
je
jmp
jl
and
ss
ljmp
frstor
cmc
mov
ja
ja
xor
movsb
movsb
ror
sub
pop
sti
in
pop
mov
xorb
enter
xchg
mov
std
es
mov
xor
lock
lds
loopne
adc
cmpsb
es
sub
test
out
mov
dec
add
stos
xor
jns
loop
add
icebp
ret
xor
pop
nop
stc
sub
xchg
add
data16
dec
sti
loope
cwtl
jb
addb
push
mov
mov
insb
cs
ja
xchg
xchg
or
and
in
pusha
dec
add
ja
out
movsl
test
scas
add
fs
pop
shlb
jno
roll
int3
cld
inc
push
cmpsb
js
and
jp
inc
dec
mov
mov
gs
mov
lds
xor
inc
insb
movl
xor
es
pop
in
jmp
inc
hlt
xchg
sarl
or
xor
mov
ja
loope
mov
add
lcall
cld
ja
adc
fcomi
das
xchg
out
mov
pusha
into
push
stos
lods
cmp
test
push
fstpl
loope
loop
mov
aaa
sub
repnz
xchg
nop
inc
lods
push
fwait
lahf
and
int
pop
repnz
mov
sbb
out
es
mov
addl
test
jbe
dec
dec
sbb
pop
test
inc
addl
push
jns
aaa
jecxz
jno
mov
jp
mov
add
pop
cld
es
arpl
mov
mov
mov
adc
xor
in
sbb
cld
loop
pop
std
out
cmp
cmpsb
xor
or
leave
mov
jg
idivb
aad
jo
in
cwtl
and
rcll
stos
ja
mov
mov
and
add
jmp
loopne
jge
xchg
mov
cmp
cwtl
or
in
out
pop
jge
mov
repz
loop
dec
jl
test
in
stos
xchg
jns
sub
ret
aaa
hlt
push
xor
dec
xchg
or
inc
divb
pop
sub
cmp
jns
jbe
cmpsb
jne
sub
jge
xlat
dec
lds
std
enter
call
and
aam
sbb
ds
je
xor
mov
adc
jne
int3
mov
push
jl
cwtl
hlt
xchg
daa
iret
fwait
mov
cltd
mov
jb
xchg
adc
sbb
mov
enter
fs
or
jns
jge
push
push
hlt
ss
aaa
sbb
dec
jae
pop
xchg
dec
push
loopne
lret
cs
inc
loopne
inc
lods
outsb
and
pop
shlb
sarb
xor
mov
in
push
call
jmp
faddl
inc
push
dec
dec
and
test
push
in
jbe
stos
out
and
jecxz
pop
rcll
int
scas
ret
mov
mov
mov
int
inc
xchg
adc
sbbb
dec
fwait
popf
inc
ret
jo
jns
jecxz
fcmove
jecxz
shll
andl
adc
xchg
xorl
lcall
jmp
jle
rcrb
mov
cltd
shll
dec
jp
dec
xlat
insl
mov
add
nop
idivb
fidivrs
inc
push
push
add
sub
cmpsl
shlb
cmp
adc
cmpsl
sub
xchg
adc
sub
add
neg
mov
mov
xchg
out
cmp
imul
add
dec
add
pop
lock
fs
cmp
fisttpl
nop
rol
mov
mov
add
adc
mov
mulb
push
mov
xlat
fdivrp
xchg
pop
loope
test
push
rcl
pusha
inc
sarl
sub
js
xchg
mov
push
sbb
jp
mov
jbe
arpl
ficomps
and
in
mov
ror
popf
cmc
andb
movsb
aas
and
out
xor
sub
push
sbb
sub
push
or
mov
mov
cmp
mov
cmc
push
jle
inc
jns
push
test
mov
fmull
inc
out
and
ja
fsubr
test
jg
test
repz
inc
jo
iret
ret
and
sub
xor
cmpsl
test
gs
jno
and
lret
subl
cmpl
push
rcl
test
mov
std
jbe
xchg
cltd
mov
inc
movsl
sbb
pop
push
imul
dec
mov
lcall
fimuls
mov
rclb
xor
mov
bound
ret
scas
bound
cmc
subl
pop
int3
mov
cmp
rorb
cmp
imul
mov
cli
ds
add
ret
dec
or
lret
mov
sub
add
xchg
shll
sub
pushf
xchg
stc
mov
push
adc
ficoms
in
aad
add
int3
dec
in
inc
mov
iret
dec
popa
and
test
push
pop
aad
fnclex
and
inc
pop
mov
pop
idiv
push
loope
or
or
inc
or
pop
repz
les
pop
and
out
cmp
cs
cmp
mov
in
mov
fisttpll
cmp
data16
mov
in
mov
adc
fwait
mov
mov
or
mov
insl
fistl
lods
stos
pop
aad
jae
insl
shlb
add
stc
push
inc
es
fbld
loopne
pop
bound
frstpm(287
sbb
cmpsb
adc
push
sub
jecxz
sti
jmp
inc
js
xchg
or
std
sub
mov
xor
mov
push
xchg
mov
fisttps
arpl
nop
mov
pop
or
jecxz
add
sbb
jg
lds
mov
xchg
aas
or
movsb
mov
and
mov
pop
mov
mov
mov
stos
mov
in
rcrb
sbbl
sti
push
pop
jecxz
dec
xor
xlat
jmp
popl
faddl
cwtl
jmp
mov
mov
xlat
insb
lods
call
mov
fstps
sbb
pop
leave
aad
enter
add
cs
mov
inc
outsb
cmpsb
lea
in
test
jne
inc
inc
xor
sbb
ljmp
cmp
test
fmuls
ret
scas
mov
imul
rep
sbb
mov
jne
xchg
add
sti
in
jp
pop
rcrb
xor
popa
or
out
ljmp
fistl
mov
xchg
add
jmp
jo
aad
xchg
les
jo
mov
or
es
xchg
int
fists
lahf
xchg
stos
insl
cmp
popf
mov
mov
cld
jb
mov
cltd
or
jnp
orb
jno
adc
adc
adc
xlat
and
ss
mov
test
or
push
out
xchg
dec
cli
insb
adc
rcll
jle
xor
mov
mov
lock
cwtl
xchg
jbe
mov
push
sub
in
shrl
sti
push
negb
arpl
sub
xor
fadds
push
aaa
pop
movaps
inc
pop
dec
addr16
dec
popa
cwtl
or
ja
and
in
push
mov
dec
dec
repz
fdivrl
xchg
test
ficompl
jecxz
icebp
and
jo
pop
mov
gs
cmp
adc
and
mov
jno
adc
lock
cmp
scas
cltd
adc
scas
jg
jmp
push
sub
mov
inc
pop
cmp
xchg
in
fs
lods
jbe
sub
daa
sub
add
arpl
xor
bound
and
sbb
in
sbb
out
and
push
div
jnp
insl
mov
pop
xor
sbb
pop
lods
popa
call
movsl
add
adc
mov
daa
and
xchg
cwtl
mov
call
in
ljmpw
in
sub
or
dec
ret
dec
mov
mov
arpl
mov
adc
mov
je
add
out
fcoms
push
test
in
fists
fistl
xchg
adc
and
mov
add
add
mov
nop
cs
dec
sub
test
mov
jp
or
jae
out
std
mov
adc
andb
dec
push
lods
sbb
out
stos
cmp
cld
shlb
jp
aaa
rcrl
xchg
mov
popf
nop
pop
xchg
xchg
sbb
add
repnz
aad
cmp
mov
stc
int
imul
adc
fcmovnb
mov
jne
cld
inc
pop
std
imul
sbb
sub
mov
scas
into
fsts
iret
fisttpl
cmpb
cltd
aas
or
movsl
popa
mov
mov
movsl
jae
inc
jbe
jne
push
imul
push
test
dec
xor
mov
insb
and
addr16
mov
and
inc
les
xor
addb
push
xlat
xchg
mov
and
lahf
cmp
andb
bound
in
popf
sub
or
lret
cmpsb
inc
ret
pop
adc
clc
movsl
ljmp
cs
xchg
pop
xchg
fnstsw
das
lret
cmp
inc
sahf
shlb
or
push
das
xchg
add
loopne
sbb
in
insl
push
dec
sub
stos
xor
mov
lret
loope
pop
and
sub
or
clc
jge
in
adc
xchg
jp
and
push
xchg
push
push
mov
faddl
dec
mov
rcrl
popf
rcrb
or
cmp
xchg
jo
nop
repnz
pusha
iret
cmp
insl
arpl
fstl
iret
push
scas
jmp
xchg
sub
or
in
mov
mov
gs
mov
popa
push
popa
push
lahf
pop
sbb
adc
adc
sti
rcll
imul
pop
ss
std
ljmp
mov
mov
icebp
lea
neg
xor
xchg
cs
adc
lock
pusha
xor
test
ret
mov
pop
fisubl
cmp
stos
ret
lret
lods
jne
adc
and
mov
inc
loop
cmp
sbb
ret
leave
rcll
call
inc
cmc
aam
pop
sub
repnz
daa
mov
shlb
out
jnp
jle
xor
repz
rcrb
sahf
dec
ss
and
nop
stc
pop
cmp
repnz
inc
inc
cli
inc
and
fistl
mov
call
pop
jb
stc
cld
aad
out
mov
dec
movsb
xor
sbb
jmp
inc
scas
insl
add
sbb
sbb
hlt
cmp
call
mov
roll
sbb
out
aad
mov
pop
mov
cltd
dec
sbb
sub
lds
dec
push
in
std
and
mov
mov
xchg
gs
leave
mov
les
cmc
mov
jb
add
fadds
rcr
jnp
xor
xchg
fnstenv
xchg
xor
lock
pop
xchg
mov
jns
cmpsl
xlat
push
mov
inc
stc
data16
pop
and
mov
and
addb
cmp
out
pop
pop
jno
ljmp
xchg
fimull
jno
dec
scas
or
dec
cmp
jne
daa
movl
add
stos
cmp
jmp
dec
lods
push
loopne
pop
sbb
aam
movsb
or
insl
push
pop
cmp
xor
push
sbb
outsl
stos
cmp
lods
cmp
mov
mov
dec
roll
pop
jnp
sbb
std
jae
cli
repz
sar
rorl
ja
sbb
mov
xchg
fstl
call
xchg
loopne
daa
lods
shll
shlb
stos
nop
cmp
jmp
js
daa
push
cmp
add
jecxz
jo
outsl
lock
xor
push
cli
ds
in
lfs
popf
pop
jle
lods
push
inc
push
push
pop
test
subl
out
or
shll
xor
push
stc
test
push
gs
pop
popa
sub
mov
cmp
pop
push
or
xor
les
fldl
jnp
aam
pop
jg
mov
adc
in
fcoms
pop
les
out
fistl
mov
pop
sbb
popa
mul
testb
jo
cmc
loop
cmp
cmp
and
jle
repnz
inc
popf
pop
dec
xor
and
and
ljmp
xor
xor
cmpsl
loope
or
inc
cmp
rcll
dec
mov
dec
ret
or
sub
icebp
dec
jno
rcrb
mov
mov
test
pop
lret
push
fistps
pop
pop
lods
jge
rcrl
scas
or
in
pop
cmp
push
jle
les
fildl
fwait
lods
add
and
inc
gs
inc
movsb
ds
test
xor
mov
xlat
scas
shl
jns
xchg
popf
les
movb
cmp
mov
mov
andl
cmp
xor
insl
lock
in
lret
enter
pop
pop
add
mov
enter
stos
adc
jbe
rcrb
mov
jmp
push
adc
jmp
fdivrs
mov
rcl
xchg
pusha
xchg
sbb
fxch
nop
addr16
xor
mov
push
loopne
imul
ds
cmp
mov
xor
icebp
jnp
cmp
lret
test
fwait
xor
aas
mov
sub
pop
xchg
add
mov
lret
decb
jnp
sub
mov
pop
sti
cmc
pop
or
xor
push
ret
xor
js
shl
mov
mov
stc
icebp
test
or
adcb
jo
cwtl
xor
leave
dec
mov
jle
lcall
add
jmp
mov
add
sbb
sbb
popf
pop
adc
jbe
mov
or
lcall
inc
adc
data16
lods
loop
mov
pop
les
mov
inc
addr16
fs
jg
cmovb
cltd
and
stc
dec
in
clc
dec
out
dec
and
adc
adc
xor
adc
mov
xor
sahf
push
mov
xor
out
inc
pusha
adc
push
cli
mov
ljmp
rorb
iret
or
ja
fmull
mov
dec
adc
das
and
xchg
sbb
adc
ja
pop
push
shlb
pushf
test
adc
jno
test
rorb
ds
mov
ds
movsb
mov
sub
rdtsc
pavgb
push
jb
jno
mov
iret
adc
out
inc
pop
loopne
movsl
mov
xor
cmp
fisubl
lds
orl
js
xor
adc
mov
sub
xchg
inc
lds
xchg
in
fstpl
dec
roll
xchg
arpl
jge
outsl
inc
inc
cmp
not
cmp
lcall
icebp
hlt
call
mov
sbb
jns
and
push
and
roll
jl
xlat
adc
xchg
mov
fwait
cmp
mov
adc
and
inc
insb
jge
fiaddl
add
mov
inc
hlt
ja
or
push
sub
adc
mov
js
std
syscall
push
adc
pop
mov
push
lahf
sbb
sub
inc
pop
and
dec
pop
push
ss
fistps
adc
sbb
xor
mov
adcl
xor
mov
mov
xchg
pop
cld
in
sub
xchg
imul
fiaddl
jo
pop
mov
in
adc
notl
or
or
lock
inc
pop
cmpl
test
add
fstps
repnz
lods
cld
ja
ljmp
cmp
sti
sahf
xchg
cltd
push
pop
xor
add
push
mov
test
sbb
sub
jmp
inc
push
and
sub
inc
call
out
stos
fiaddl
jno
popf
push
mov
imul
pop
pushw
lcall
xchg
hlt
pop
mov
mov
adc
nop
pushf
loopne
je
jge
xor
outsl
add
iret
test
pop
sub
mov
jmp
cmp
cld
push
inc
iret
mov
and
cmp
cmp
jmp
xor
rorl
dec
mov
mov
out
add
test
cmp
add
dec
in
addl
adc
ja
jecxz
sub
push
cli
leave
push
addb
ss
dec
adc
add
adc
out
in
sub
xor
lods
cmp
mov
push
fs
and
cmpb
push
scas
mov
popa
hlt
int
fildll
in
mov
push
mov
fmull
xchg
in
or
in
data16
dec
sbb
int
clc
clc
push
push
int3
sahf
mov
pop
jle
decl
stos
aad
imul
mov
fs
mov
lds
inc
repz
mov
repz
outsl
xor
pop
addb
mov
or
and
cmp
ss
and
push
sbb
lmsw
pushf
xchg
mov
lcall
mov
fstpt
rorb
cmc
cld
and
pop
pop
xchg
rolb
mov
jmp
pop
jmp
sub
iret
pushf
cli
push
add
movb
in
ret
dec
dec
mov
jle,pn
push
notl
ret
and
add
je
or
subb
orl
negb
sub
clc
push
flds
rorb
xor
or
sub
mov
add
jno
jb
stos
sti
neg
mov
movsl
std
daa
es
sar
test
or
fdivrs
fs
je
xchg
lds
movsb
rcrb
dec
popa
mov
xor
mov
xor
push
pusha
jne
jl
pushf
cli
jo
roll
xchg
and
ffree
cld
pushf
and
mov
mov
movsl
xchg
mov
je
jbe
test
ds
xchg
mov
fisttps
shl
push
nop
cmp
sub
jmp
mov
repnz
and
push
loopne
aam
mov
addb
adc
jmp
xchg
enter
jae
je
test
inc
xchg
inc
lods
xor
sbbl
lahf
push
mov
mov
cmp
inc
mov
jb
and
pop
mov
push
mov
cmc
faddl
push
loopne
fwait
pop
cmp
jecxz
sbb
mov
mov
add
lahf
fs
call
jge
push
sub
pusha
push
aas
mov
pop
mov
repz
in
stc
jno
cmc
cmp
int3
sub
sbb
mov
add
stc
into
rol
test
xor
xor
and
mov
fstps
leave
sbb
pushfw
addr16
mov
je
imul
cmp
std
jp
int
insb
fwait
in
adc
icebp
or
notl
sub
mov
daa
sub
loope
or
push
rol
shll
and
fadds
inc
mov
cltd
ret
lea
mov
int3
and
mov
scas
xchg
dec
or
roll
into
fdivp
ljmp
pop
inc
in
add
bound
ds
adc
bnd
and
xor
data16
and
clc
loopne
inc
ret
push
leave
sub
out
mov
cmpl
mov
cmp
cmpl
mov
mov
jg
push
popf
push
sbb
stos
out
aas
fndisi(8087
dec
adc
leave
insl
push
es
ret
jb
or
push
mov
and
pop
popa
insl
int3
jl
push
pop
cmp
fstl
ja
cltd
sbb
or
movsl
sbb
pop
lock
aam
sbb
lds
xchg
dec
adc
inc
sbb
xor
mov
in
fucomi
cli
loop
bound
pop
frstor
cmp
add
sbb
pop
xchg
ljmp
in
sbb
fnstsw
pop
call
shrl
cmpl
hlt
lods
mov
cwtl
mov
sub
mov
jo
movsb
movsb
dec
scas
lret
mov
add
add
je
add
ror
imul
sbb
push
mov
pop
jmp
movsl
sbb
mov
cmp
adc
jb
cmpl
dec
scas
dec
push
mov
stc
add
jnp
roll
jmp
mov
push
push
xor
std
into
cmpsb
shr
xor
ljmp
outsl
scas
add
pusha
lock
jne
outsb
lock
les
and
jns
stos
pop
addl
xchg
mov
sbb
gs
xchg
push
mov
push
call
ret
lock
dec
cmp
push
push
jo
addr16
mov
jge
stos
cltd
inc
leave
xchg
loope
outsb
inc
rcr
stos
ss
lods
daa
aas
push
sbb
sub
xchg
sub
pushf
test
ret
push
mov
adc
popa
lahf
outsb
aam
out
aaa
push
mov
push
sbb
ret
inc
iret
int
std
out
stos
sti
xchg
imul
push
fwait
mov
and
ja
sub
insb
nop
rdpmc
push
pushf
xchg
adc
out
mov
sub
pop
int3
scas
xor
les
mov
mov
adc
adc
bound
jecxz
addl
jmp
push
icebp
adc
push
jae
and
lret
fidivl
out
pop
rcrl
hlt
push
ficoms
push
xchg
jnp
push
or
aas
push
stos
les
add
dec
ror
add
jp
mov
and
in
xor
loope
push
cmpl
imul
aas
add
jmp
jmp
and
pushf
sub
push
sbb
inc
adc
cltd
nop
imulb
loop
and
dec
lret
cmp
mov
pop
pusha
add
movsb
mov
fs
inc
pop
out
stc
mov
ss
movsl
andl
nop
ret
outsb
cmc
cmpsb
ja
cmc
xchg
mov
inc
push
xor
pusha
sbb
lods
jg
jb
mov
sbb
push
test
bound
cld
pop
inc
sbb
push
pop
icebp
test
adc
mov
shrl
in
pushf
addl
mov
jecxz
sbb
mov
cmp
mov
out
ja
mov
jno
xchg
into
lahf
nop
jo
and
lods
xchg
inc
inc
sbb
aas
stos
mov
enter
xchg
jmp
xchg
push
in
mov
test
ja
xchg
add
testb
jmp
inc
inc
shrl
and
add
std
lcall
sbbb
sbb
xor
sub
out
pop
mov
roll
fcoml
push
lods
ret
fdivrp
add
fsubr
fnstsw
ja
or
push
sti
cmc
inc
push
or
dec
push
or
int
fcoml
jae
test
adcb
test
stc
data16
cmp
sub
stos
jne
int
jae
adc
cmp
imul
shrb
jmp
jbe
mov
xchg
mov
out
mov
inc
pop
fisubrl
sbb
andl
push
push
add
jg
jle
rclb
ret
aam
xchg
jnp
or
or
lcall
mov
mov
cltd
dec
push
cltd
test
inc
add
addr16
xchg
sbb
dec
outsb
fs
mov
inc
and
push
cltd
mov
shlb
mov
addb
popf
push
push
xlat
fwait
pop
cmp
ficomps
cmc
les
mov
icebp
aas
cmp
cmp
pop
jo
cmp
add
stos
pop
or
xor
or
xchg
sub
add
and
test
sbb
das
mov
xchg
es
push
fsubs
inc
push
aas
subb
pop
test
xor
inc
dec
ds
inc
jp
mov
cmpsb
aam
cltd
and
shr
jle
push
xlat
cltd
sbb
mov
cmp
jg
imul
stc
adc
das
scas
inc
xchg
pusha
add
push
hlt
and
popa
jl
pop
lods
call
popa
rcll
insl
into
pushf
ret
mov
jbe
ljmp
incb
push
push
arpl
arpl
adc
pop
mov
out
jmp
mov
push
xor
je
mov
push
mov
pop
lods
stc
je
movsb
pop
sbb
int
cwtl
pop
ret
out
cwtl
ret
aad
mov
add
xchg
cmp
pop
into
mov
jno
fs
out
cwtl
fwait
mov
fsubl
loop
inc
nop
push
sub
jge
pushf
push
scas
lock
mov
pop
rcl
fistpll
xchg
jmp
add
pop
les
cmove
mov
sub
jne
mulb
mov
lahf
push
lret
push
mov
mov
adc
mov
cmp
xchg
or
sub
cwtl
std
addr16
jp
shrb
test
jae
inc
test
dec
pushf
dec
iret
mov
pop
mov
lcall
adc
sub
sahf
dec
adc
out
jb
sbb
push
xlat
inc
nop
stos
shll
mov
icebp
das
mov
test
and
push
test
pop
dec
xacquire
aaa
outsl
lods
ret
adc
adc
shll
sub
pushf
hlt
and
mov
cmp
movsb
add
out
lcall
cmp
add
or
inc
inc
int
cltd
push
pop
daa
ret
mov
push
repnz
push
cmpb
test
mov
ja
pop
loope
mov
ljmp
orb
add
into
pop
out
xchg
push
adc
cs
sub
or
ret
mov
pusha
push
popa
aaa
popa
mulb
test
add
jle
mov
cmp
lahf
cmpsb
addr16
mov
lret
in
sub
cld
sti
mov
dec
icebp
cltd
xorb
dec
icebp
in
js
mov
sub
and
add
push
push
imul
scas
inc
jl
lods
mov
inc
in
sub
push
jne
out
add
mov
das
inc
enter
lret
mov
les
fistl
xchg
fyl2x
dec
sbb
mov
mov
pop
and
sub
or
leave
aaa
vpmuludq
pop
das
and
jle
mov
shl
sbb
mov
cld
jmp
inc
mov
and
adc
lods
inc
aam
push
add
out
dec
add
dec
je
inc
pop
mov
call
jbe
lcall
push
cwtl
xchg
push
mov
ljmp
cli
mov
icebp
mov
add
test
or
lea
sahf
outsl
inc
push
mov
push
push
mov
pop
jmp
dec
ret
cmp
sub
lret
lret
jmp
cmpsl
out
loop
mov
call
add
jmp
push
fcomip
scas
or
jnp
cld
mov
shlb
ja
dec
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
push
add
bound
add
fstpt
es
add
add
xchg
loope
pop
or
pop
fbld
xchg
cltd
mov
and
dec
loopne
pop
xlat
cmp
repz
in
xchg
popf
repnz
push
and
push
push
mov
aam
push
cltd
adc
adcb
ror
mov
mov
pop
je
cwtl
int
xchg
inc
imul
add
add
add
shrl
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
jmp
gs
enter
cmp
orl
mov
push
xchg
jno
adc
sub
pop
leave
xchg
adc
xlat
mov
dec
dec
push
pop
mov
testb
iret
xchg
scas
into
adc
xor
mov
test
push
add
push
pop
cmp
push
bound
mov
repnz
add
add
pop
sub
sub
addb
into
add
bound
add
xchg
lods
sbb
movsb
mov
push
ret
test
sub
loop
rol
adc
rcrl
pusha
inc
adc
into
mov
and
inc
push
enter
sbb
inc
cmpsl
aas
pop
mov
pop
sbb
add
in
enter
pop
jge
jle
cmpsb
add
leave
push
inc
nop
sti
outsb
sahf
cmpsl
mov
add
das
and
aam
aam
ljmp
je
jnp
jbe
popf
into
add
bound
add
sbbl
pop
mov
push
fildl
test
mov
enter
push
adc
adc
divb
add
ljmp
or
inc
mov
aas
push
add
push
fstl
out
andb
mov
push
sahf
sub
fimull
daa
jg
iret
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
push
pop
pop
xor
dec
mov
pushf
std
cmpsl
int
and
rclb
push
lcall
in
cmp
pushw
out
jns
insb
add
int3
and
pop
pop
aam
add
out
push
jnp
mov
or
xor
ficoml
ss
ss
sub
xor
in
daa
add
add
add
out
lods
cmp
stc
stc
cmp
add
add
insb
dec
sar
gs
loop
lods
push
or
in
cmpsl
adc
mov
adc
sub
sub
or
test
push
dec
stos
test
push
shrb
das
sahf
sbbb
in
pop
sar
loope
xchg
lcall
aaa
xor
jne
les
stos
scas
lock
popa
rclb
add
add
inc
gs
aaa
push
or
test
iret
add
bound
add
pop
cmp
mov
scas
dec
cli
loopne
outsb
xor
rolb
insl
lahf
je
xor
mov
insl
pushf
xor
int3
stos
dec
dec
sub
jecxz
jno
and
mov
int
gs
or
xor
pop
rcrb
pop
and
push
fldt
test
enter
pop
lret
pop
rorl
shlb
add
add
dec
inc
sub
das
jle
jg
imul
push
loop
add
add
movsl
pop
lret
xor
mov
insb
mov
int3
push
xor
sbb
jp
les
popa
cmp
adc
sbb
insb
sub
cmp
imul
or
dec
aas
movsb
push
pop
out
adc
cmc
pop
push
cs
dec
push
movsl
lock
jmp
es
ffreep
pop
aaa
mov
add
add
add
addr16
and
mov
mov
push
stos
dec
jecxz
add
add
into
cmp
xchg
push
roll
cs
fwait
pop
pop
and
adc
add
or
push
add
add
jbe
jp
mov
outsl
push
dec
ja
iret
inc
and
scas
fisubl
sub
push
out
pop
mov
dec
aad
ds
in
shlb
into
and
add
add
add
ret
or
ret
lods
sub
mov
jnp
jecxz
add
add
mov
cmc
out
daa
imul
add
jecxz
in
pop
ret
push
adc
adc
cmpsb
cmp
into
pop
into
adc
pop
push
adc
into
and
fstpt
notb
addr16
cmpsl
js
and
pushf
rolb
rcll
loop
dec
jecxz
jo
inc
add
mov
add
add
add
add
fld
add
ror
outsl
clc
shl
shll
or
add
add
out
mov
movsl
dec
cmpsb
stc
mov
sbb
xchg
or
mov
pusha
or
mov
mov
data16
lcall
fnstsw
scas
mov
and
mov
sub
ja
das
and
push
dec
addl
int
imulb
cmp
push
xor
sldt
add
add
popa
pop
lock
out
repz
mov
ret
in
fmul
xchg
push
outsl
in
add
add
add
test
ficompl
pop
mov
fidivrl
sub
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
scas
sbb
mov
sbb
add
inc
add
push
inc
add
sbb
add
push
inc
add
sbb
add
mov
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
inc
add
or
xorl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
sahf
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
xchg
sbb
add
sbb
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
push
imul
bound
add
out
fstpt
dec
mov
mov
lods
inc
icebp
loope
and
inc
or
popa
sub
and
ja
sbb
cld
das
cmc
sub
aad
lock
xlat
inc
stc
add
push
idivb
dec
out
sbb
lcall
jmp
or
sbb
addr16
mov
lods
xchg
dec
dec
add
loopne
xchg
pop
xchg
and
add
add
add
mov
push
mov
xlat
push
movsl
sub
imul
add
add
out
bound
sti
xchg
ss
je
ds
add
and
clc
push
jno
push
bound
stos
call
dec
jecxz
addr16
mov
inc
out
shr
xor
ret
mov
addr16
push
hlt
jecxz
mov
in
adc
sub
mov
dec
clc
dec
imul
pop
mov
add
add
add
stos
pushl
xchg
push
pop
int
add
bound
add
inc
push
mov
mov
dec
shll
mov
cmp
adc
sub
jecxz
mov
cld
xchg
jp
mov
inc
loopne
xchg
test
cmpsb
pop
ror
iret
push
inc
loopne
loope
popa
and
insl
pop
scas
pop
pop
faddl
xchg
mov
stc
in
jns
loope
push
fldenv
imul
add
add
cmp
in
fimuls
mov
add
bound
add
test
fists
mov
sub
sbb
cmc
pop
xlat
sbb
or
dec
test
ss
fwait
insb
sbb
xadd
scas
xchg
out
lea
jle
xor
lods
mull
cmp
mov
fsubl
iret
mov
cld
loop
pop
je
imul
jae
push
data16
add
add
add
mov
sbb
std
negb
sub
std
adc
xchg
fadds
add
add
adc
mov
xchg
add
test
fldl
andl
mov
sub
ret
dec
dec
xchg
adc
mov
sti
es
mov
loope
mov
incb
das
mov
fistpll
insb
dec
xchg
cmp
inc
loop
je
cmp
dec
inc
orb
test
inc
jg
push
add
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
repz
add
add
dec
sub
ljmp
movsl
mov
pop
loop
or
mov
pop
pop
mov
push
scas
aas
int3
add
insb
int3
sub
popa
jns
loope
mov
xchg
sub
add
pop
int3
or
push
repz
mov
lcall
jge
test
add
rcl
add
sub
add
add
add
dec
in
fwait
scas
fdiv
pop
sub
push
flds
add
add
sub
imul
gs
pop
inc
mov
sarl
cmp
int3
aaa
mov
gs
xchg
ret
adc
fmulp
fwait
lret
test
mov
or
pop
int3
mov
or
pop
repnz
mov
fbld
xor
and
repz
add
add
add
mov
aam
xor
and
mov
add
bound
add
into
push
cs
sbbb
pop
cmp
in
pop
movsl
dec
cld
test
dec
add
xchg
cmp
shrb
xchg
ret
dec
pop
insl
test
sub
mov
cli
les
inc
mov
movsl
and
ss
subb
and
dec
scas
aad
add
dec
push
add
add
push
add
mov
out
lods
int3
sbb
add
bound
add
or
adc
das
ret
push
or
sbb
add
cmc
add
cld
aaa
xlat
arpl
dec
lret
mov
shrb
sahf
ret
lods
or
iret
cmp
jo
or
dec
addl
ret
mov
insl
dec
aaa
orl
lea
pop
mov
xchg
inc
fsubrp
out
stos
dec
push
lret
add
add
add
mov
jmp
fimull
fnsave
mov
bound
add
sbbb
push
cli
int3
adc
cmpsb
fldl
and
cmp
pop
xchg
xchg
into
inc
popa
xchg
popa
sbb
and
mov
cmp
inc
sub
lret
mov
jne
lea
clc
out
mov
jo
jnp
sar
std
rclb
fdivrs
dec
xor
or
jnp
pop
xlat
jle
lret
xor
add
add
add
pop
iret
pop
aad
ss
dec
mov
fmull
add
add
inc
add
jl
fisubs
push
repnz
push
cmp
cli
xor
sub
and
inc
jo
sub
stos
loop
pop
jp
enter
pusha
lret
popl
push
scas
insl
xor
push
fdivs
adc
ds
in
into
in
inc
pop
jmp
incl
add
add
add
cld
fiaddl
ljmp
add
popf
or
adc
mov
adcl
cltd
mov
stos
fbstp
mov
sarl
leave
jnp
jecxz
inc
mov
mov
sub
clc
push
dec
fs
and
stc
xorl
loope
push
call
sbb
sub
fcoms
sub
int
cmp
repnz
add
add
add
lock
jle
repz
mov
mov
add
add
sub
push
pop
in
jmp
cwtl
aas
jb
nop
and
dec
popa
pop
sbb
dec
iret
ficoms
daa
adc
inc
jle
xorl
adc
cmp
fs
and
aaa
mov
and
or
enter
adc
mov
lret
ret
jmp
add
add
add
adc
adc
mov
lds
add
add
bound
add
imul
not
aam
cli
add
inc
stc
inc
hlt
push
rol
iret
xchg
pop
mov
inc
aad
dec
into
cld
push
into
fldln2
xchg
fidivs
loop
lcall
scas
and
dec
xchg
ret
lods
stc
out
movsl
sbb
xchg
cltd
lods
xchg
lds
cltd
repnz
inc
test
inc
pop
insb
scas
mov
imul
dec
test
add
add
add
mov
lock
mov
sarb
add
bound
add
xchg
push
pusha
cmp
movsb
add
sbb
push
mov
andb
arpl
shl
xchg
fsubl
mov
roll
in
mov
movnti
popa
iret
mov
movsb
lods
add
cmp
mov
arpl
pop
sub
pop
daa
cmp
mov
insb
mov
push
clc
fists
int3
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
and
or
faddl
add
add
lret
push
in
mov
sbb
pop
pop
mov
in
or
and
mov
shlb
xchg
sbb
jae
ds
sbb
xchg
addr16
mov
rolb
jge
enter
lcall
enter
xor
xor
stos
fisttps
push
adc
push
fildll
add
add
sub
fildll
das
pop
mov
bound
add
inc
mov
notl
xor
xchg
sahf
test
dec
or
out
push
repz
idivl
adc
ret
inc
arpl
scas
test
stos
pop
pushf
pop
mov
pop
dec
out
addl
pop
jl
daa
ja
xchg
push
cld
cmp
pop
fdivrs
cmp
or
add
add
add
fs
testl
orl
fldl
add
add
push
cmpsb
cmpb
jne
iret
jle
dec
cmpsb
jne
xor
pop
arpl
add
inc
jns
jbe
aas
lds
push
jg
jmp
lret
sbb
adc
pop
iret
mov
or
mov
imul
cmp
or
repz
cwtl
mov
out
test
std
sbb
iret
mov
add
add
add
push
imul
pop
pop
ret
fldl
add
add
pop
inc
mov
mov
sbb
mov
aam
adc
dec
int3
mov
jo
xor
adc
mov
in
add
dec
cs
outsb
xchg
test
pop
lret
pop
sbb
or
jae
shr
addr16
and
shrl
dec
int
add
add
add
add
jne
jg
clc
cs
push
and
add
add
lret
dec
xlat
mov
insb
lret
movsb
mov
mov
arpl
cmp
popa
int3
sahf
push
jbe
mov
cld
sub
mov
add
mov
jge
xor
ja
or
xor
fldt
mov
dec
fwait
decb
stos
pop
js
lods
jl
lds
or
xchg
mov
dec
out
popa
mov
roll
add
add
or
dec
mov
je
lcall
add
bound
add
and
in
push
sbbl
test
mov
rol
xchg
dec
mov
in
loopne
pushf
popa
pop
sar
jo
iret
push
jo
mov
fld
sahf
pop
clc
xor
xchg
rcrl
push
into
mov
sbb
nop
stos
sbb
jle
push
add
sbb
ja
test
xchg
or
add
add
add
push
mov
mov
xchg
adc
push
stc
pop
jmp
add
add
std
mov
aam
lds
mov
jnp
aad
stc
out
or
loope
mov
loop
mov
cmp
or
cmpsb
mov
test
pushf
sub
and
cli
cwtl
js
push
dec
push
call
add
mov
popl
mov
cli
ja
xor
add
add
add
xchg
fcmovu
fisttps
push
rorb
sub
add
bound
add
loop
add
mov
lock
xchg
mov
insb
mov
add
xor
das
or
lds
daa
cmp
rorl
pop
call
and
push
outsb
lret
add
fidivs
lds
imul
jmp
inc
ret
xchg
orb
add
jmp
cmp
lea
cmp
fucomp
outsb
add
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
dec
pusha
xorl
pop
push
push
aaa
in
push
pop
inc
add
cmp
push
or
ss
mov
bound
and
adc
push
sbbb
rolb
mov
rorb
gs
sarl
iret
js
les
or
loop,pn
push
cmpsl
in
nop
icebp
xor
mov
or
add
add
add
and
cmp
je
into
psrld
add
add
or
js
outsl
movsl
data16
add
pop
push
movsl
or
test
cld
fmulp
cld
pop
push
add
pop
cmp
dec
push
pop
or
and
pop
iret
xchg
pop
push
arpl
adc
es
dec
cmp
es
inc
mov
sub
fists
sub
add
mov
add
add
add
xchg
nop
ffree
popf
aam
inc
inc
inc
jno
add
bound
add
add
push
push
insl
cltd
fldenv
push
xchg
stc
xchg
sbb
ds
push
jbe
dec
dec
les
mov
lret
push
leave
dec
in
addr16
push
pushl
lret
outsl
push
push
aam
dec
lret
push
lock
xchg
daa
in
stos
fdivr
ljmp
pop
ljmp
add
add
mov
jbe
hlt
mov
and
cmpsb
cmp
mov
add
add
ret
sbb
negl
cmpsb
mov
lcall
insl
iret
inc
xchg
xor
mov
lods
sahf
arpl
cmpsb
jae
and
fidivs
adc
mov
movsl
push
aaa
cs
and
ret
dec
xchg
lock
fidivl
dec
clc
lcall
shll
popl
add
add
add
ror
mov
sub
out
lods
rcrl
adc
add
add
cmpsl
into
and
jp
movsl
pop
push
addl
pusha
out
xchg
mov
xor
bound
mov
lcall
jbe
ljmp
hlt
jbe
mov
mov
shr
daa
movsl
test
mov
cwtl
dec
popa
jns
aad
mov
cmp
stos
pop
cmpsb
daa
orl
push
cmp
inc
dec
add
add
add
fucomi
outsb
and
pop
mov
xchg
roll
add
add
mov
or
std
sarl
mov
sub
bound
sub
mov
je
xchg
cmp
pop
aas
xchg
into
adc
movsl
imul
mov
fnstsw
cmp
push
or
xor
daa
adc
xor
sub
gs
sahf
out
pop
scas
js
inc
pop
dec
stc
add
add
add
add
mov
and
fdivr
roll
add
add
mov
icebp
pop
pusha
cmpl
cmp
stos
fwait
cmp
fmuls
xchg
arpl
inc
mov
lds
sub
cli
nop
lods
out
shlb
inc
mov
subb
push
xor
pop
mov
cmpsb
xchg
jbe
mov
inc
mov
cmp
lret
jae
dec
repz
add
add
mov
and
jg
call
into
inc
mov
ja
test
add
add
loop
mov
sbb
xlat
sub
dec
pop
pop
jmp
xchg
ret
cld
movsb
mov
cmpsb
call
inc
fcomip
out
mov
add
push
mov
adc
fdivs
cld
and
int
jae
push
enter
mov
lods
mov
mov
jge
stos
aam
push
repz
in
inc
adc
and
ret
add
add
add
sub
sub
outsb
mov
add
bound
add
xchg
jno
xchg
outsl
jmp
mov
jmp
xchg
outsl
movsl
pop
repz
jo
aam
clc
mov
and
add
outsb
mov
and
xlat
lcall
adc
cmp
shlb
stc
sub
mov
clc
adc
enter
cmpsb
xchg
xor
clc
or
add
add
add
dec
aas
int3
sbb
out
loopne
lods
icebp
addr16
add
add
or
icebp
push
push
arpl
mov
loop
inc
sbb
mov
dec
add
mov
push
outsb
movsb
sub
sbb
mov
adc
out
mov
lods
je
pushf
loopne
sar
pop
into
mov
mov
imul
sbb
add
sub
mov
inc
add
add
add
push
test
fildll
lret
xchg
adc
add
jle
cmpb
imul
xlat
int
push
fistps
test
xchg
lea
std
sbb
jge
lock
or
dec
ja
int
jns
shll
push
ja
lret
sub
imul
sbb
insb
shll
data16
adc
xchg
lret
or
mov
add
add
add
fwait
loope
sub
sarb
add
mov
add
add
cmpsb
cli
movsl
mov
sbb
cld
add
cmp
or
mov
lods
das
nop
stc
lcall
and
negl
es
jb
push
in
push
pop
stos
inc
rcr
mov
mov
cmp
into
roll
test
adc
push
ljmp
and
add
or
ja
dec
cmp
dec
subb
add
bound
add
cwtl
loop
or
imul
ss
in
pop
cwtl
out
adc
and
push
lret
mov
cmp
xchg
or
push
lods
mov
std
inc
sbb
add
push
mov
fwait
rorl
imul
lds
in
scas
push
clts
sbb
pop
rcr
adc
push
je
add
jo
inc
add
add
add
arpl
jge
mov
daa
nop
mov
mov
bound
add
push
insl
push
xor
adc
lds
jle
fs
es
mov
mov
hlt
xor
call
pusha
outsb
repz
dec
xchg
push
rcrb
jecxz
dec
stc
test
inc
movsb
sti
cmp
lret
repz
outsb
mov
jge
js
lahf
data16
loopne
imul
shrl
add
add
add
daa
ss
xor
and
cmpsb
leave
dec
fiadds
add
add
cmpsl
out
pop
and
or
inc
nop
jp
or
sub
jge
add
out
mov
sub
and
out
movl
cmp
inc
out
jecxz
inc
cwtl
mov
mov
or
cs
dec
lods
adc
mov
adc
or
imul
repz
int
repz
jne
add
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
pop
mov
cmp
inc
adc
push
dec
inc
lea
mov
lods
cmpsb
add
xchg
sti
lea
bound
mov
xor
or
xor
pop
cmpsb
and
ret
cs
aaa
rolb
stos
pushf
dec
pmaxsw
or
enter
loopne
pushf
and
fucom
pslld
add
add
add
aad
out
fucomip
ss
cmp
mov
bound
add
test
sbb
pusha
iret
adc
aas
mov
mov
push
xor
xor
fmuls
bswap
jle
idiv
lret
clc
sbb
fstps
pop
std
dec
fists
ja
pusha
les
shlb
jp
loope
jecxz
in
xchg
dec
invd
stos
out
or
ficoms
pop
out
jmp
pop
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jne
add
bound
add
cmp
mov
mov
push
mov
test
xchg
and
sub
rorl
jmp
xor
rcl
dec
je
cmpsl
daa
cltd
subl
push
mov
mov
xchg
push
cli
fiaddl
lea
push
jmp
cmc
inc
cmp
jmp
push
mov
add
add
add
push
les
in
lahf
sti
ja
rcll
mov
bound
add
lea
mov
and
push
push
push
jmp
aad
adc
mov
lcall
test
push
daa
rcl
fsubl
scas
stos
fldl
or
mov
in
dec
into
push
mov
clc
xchg
mov
sub
fsub
sub
les
or
add
add
add
xchg
cmpl
push
loopne
lcall
add
bound
add
fistpl
aas
jae
imul
loope
push
jbe
sub
lahf
xor
ds
scas
sbb
and
rolb
icebp
lret
or
lret
jge
loopne
test
ret
fidivl
outsb
ficoms
jp
cmp
leave
mov
fnstcw
stos
out
mov
add
add
add
fincstp
shl
frstor
pop
dec
rol
int
fwait
loopne
add
add
xchg
push
decl
pop
mov
fisttpll
adc
loop
mov
pop
jl
subl
ret
dec
fcomps
movsb
jne
mulb
orb
es
mov
pop
mov
or
pop
in
cmpsl
mov
mov
and
cs
aas
push
pusha
add
inc
stos
sbb
add
add
add
aam
fnstsw
out
fcmovu
in
pop
ljmp
add
add
jg
rcll
ljmp
inc
data16
aaa
pop
out
mov
cmp
mov
mov
xchg
push
or
adc
sbb
cmp
test
repz
dec
ds
add
aam
jecxz
lds
dec
cmpsl
cmpb
in
lret
push
add
add
add
sbb
inc
jecxz
mov
daa
lds
mov
bound
add
xchg
push
ds
xchg
popa
fsub
and
in
sbb
jae
dec
inc
sub
mov
fidivrs
dec
adc
mov
cmpb
sub
aam
lret
xor
loope
mov
add
xchg
lods
push
cs
inc
xchg
fs
jge
gs
cmp
pop
push
xchg
jmp
add
mov
mov
icebp
and
popa
cmpsb
shl
add
add
mov
mov
fs
dec
xor
cs
inc
push
aaa
lcall
sbb
or
cltd
xchg
in
mov
or
mov
adc
jmp
gs
xor
fadds
lcall
push
cltd
xchg
sbb
xorb
pop
ljmp
add
pop
out
push
pusha
push
or
add
add
add
xlat
repz
das
cli
fists
dec
es
dec
and
add
loop
add
add
and
pop
sub
dec
mov
repz
pop
adc
add
and
cli
pop
jo
iret
adc
add
out
lock
xor
lea
mov
and
xchg
dec
mov
mov
sahf
mov
sbb
outsb
out
jo
aam
jmp
or
inc
push
cld
xchg
xor
xchg
popa
sbb
xlat
test
add
add
add
mov
push
adc
cwtl
out
arpl
add
add
mov
stos
decb
mov
es
fiadds
sbb
inc
cmpsl
xchg
lods
adc
adc
loopne
adc
arpl
or
mov
cmp
sti
jecxz
aad
and
shl
inc
inc
cmpsb
or
push
xchg
xlat
mov
fs
or
xchg
pop
inc
cmp
xchg
mov
add
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
push
cmp
add
add
add
add
add
add
add
add
dec
cmp
add
add
inc
iret
add
pop
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
