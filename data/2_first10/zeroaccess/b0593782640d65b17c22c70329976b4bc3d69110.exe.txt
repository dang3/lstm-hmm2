push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
jmp
adc
xor
test
jg
mov
or
jp
cld
pop
jp
and
daa
cmp
jno
jne
adc
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
sbb
mov
pop
cwtl
push
mov
adc
inc
les
pop
push
pop
lret
dec
daa
jecxz
rcll
cwtl
mov
mov
push
stos
mov
xor
enter
sbb
push
xchg
aaa
adc
bound
ds
xor
or
lods
mov
les
and
push
cmp
imul
daa
cltd
xchg
adc
test
and
xchg
decb
ret
add
adc
iret
xchg
mov
stos
and
inc
xor
mov
stos
subb
lret
dec
sub
jne
xchg
mov
and
andb
cmp
imulb
mov
push
inc
lret
mov
adc
cmp
or
pop
sbb
into
iret
lds
stos
jbe
inc
mov
cmp
sbb
sub
jge
lods
fisubs
pop
inc
jmp
xchg
cltd
xor
mov
test
sub
lret
inc
je
fdivs
pop
push
out
jg
and
push
fcomps
xchg
int
popw
and
xchg
sbb
mov
sbb
cmp
cmp
scas
cmp
jmp
roll
xor
sbb
outsb
inc
jae
outsb
test
int
jb
gs
xchg
mov
dec
mov
repnz
push
sbb
mov
jg
sub
icebp
nop
adc
cmp
dec
jb
sbb
lods
push
or
push
cmpsb
stos
cltd
pop
jno
addb
add
lret
push
insl
dec
push
cmp
mov
stos
mov
mov
inc
xor
jb
ss
sti
mov
shrb
jp
test
xchg
dec
pusha
cmp
push
sbb
cmpsb
xor
sbb
repz
add
lock
cmc
sub
and
sbb
xchg
adc
test
loope
cs
cld
aad
mov
mov
sub
jns
mov
inc
pop
mov
or
mov
or
sub
call
mov
add
cli
xchg
jmp
sub
testb
stos
mov
fdivs
cmpsl
push
cwtl
nop
jle
pop
mov
jp
mov
lds
lret
iret
adc
and
sub
inc
mov
xchg
jp
push
bound
clc
iret
inc
call
addr16
mov
sarl
pop
jnp
fwait
rolb
xor
adc
mov
sub
sbb
push
insb
shl
lcall
loopne
dec
insb
jb
mov
enter
xor
addr16
das
loop
movsl
mov
scas
jns
sbb
jae
lea
shll
fadd
xchg
cmp
daa
push
int3
cwtl
mov
jbe
dec
inc
xchg
xor
push
lock
mov
jne
or
cmp
cmpl
daa
cmp
mov
mov
adc
pop
sbb
mov
xchg
shl
sbb
cmp
lcall
jg
and
pop
das
lds
test
jmp
xlat
cmp
in
jo
sub
dec
xchg
mov
insb
lret
push
push
loope
xchg
insl
enter
lret
mov
add
imulb
shl
call
sti
jb
outsb
movsb
pop
popf
lcall
mov
cmp
push
adc
pusha
jo
jmp
mov
test
sub
cwtl
popf
sub
enterw
add
fildll
dec
adc
lret
xlat
stos
lcall
test
out
dec
jb
sti
fmul
pop
pop
repnz
dec
add
inc
xor
fisttpl
pop
push
pop
das
xor
nop
jmp
or
add
das
push
xor
mov
std
pusha
or
add
scas
iret
aaa
addr16
stc
inc
mov
ss
xchg
push
xor
and
ror
cli
mov
idivl
outsb
sti
jge
lea
cmp
mov
xor
in
cld
mov
out
in
popa
int
mov
mov
or
xor
and
or
push
fimuls
and
sahf
cli
xchg
ja
mov
mov
add
loope
scas
popf
xchg
add
sahf
mov
addr16
insl
sbb
sbb
into
add
xchg
and
jns
inc
lock
push
pusha
lret
jb
fstl
jecxz
add
pop
xor
sub
mov
push
repnz
out
cmpb
mov
mov
xchg
push
push
push
or
cs
cmp
mov
cmp
xchg
bnd
into
loop
ret
cmc
xor
fstps
jge
push
jle
or
cli
adc
loopne
testb
icebp
std
dec
pop
sub
das
adc
mov
js
lret
jns
repnz
sub
mov
shll
jo
jle
or
stc
inc
pop
adc
mov
loope
jbe
aam
pop
inc
sub
ror
hlt
mov
insb
andl
mov
add
popf
mov
fs
xor
aas
jecxz
jmp
out
ja
mov
or
jl
movsb
arpl
mov
je
popf
sub
jns,pt
movsb
in
inc
sub
fisubrs
xchg
lods
pop
pushf
pxor
mov
loopne
inc
mov
mov
sbb
rcr
adc
or
lret
xor
popf
adc
sbb
inc
inc
bound
push
shlb
aad
das
and
hlt
lds
enter
jne
loope
cmp
cmpsl
jp
adc
add
pop
cmp
push
test
adcb
movsl
je
sbb
mov
loop
xor
or
jmp
lods
inc
or
dec
mov
ss
mov
dec
jne
or
mov
int
negl
xchg
arpl
mov
out
int
and
cmp
outsl
ret
popf
jb
xor
frstor
loop
gs
push
fadd
test
adc
imul
jnp
push
sub
pop
mov
sbb
jne
subl
inc
jns
repz
fidivrs
outsb
push
es
repz
push
mov
mov
adc
test
inc
daa
sub
jmp
in
test
push
rcrb
mov
lea
mov
aam
xchg
jmp
sub
stos
jne
frstor
sub
dec
cmc
push
and
insl
jp
push
jg
insb
xor
fstl
add
adc
mov
inc
jns
mov
fdivrp
clc
dec
mov
dec
and
sbb
dec
test
sub
pop
xor
xor
mov
flds
add
ficoms
mov
jmp
sbb
fisttpl
xchg
cmpsl
test
fimuls
sub
addr16
out
nop
testl
xchg
lock
xlat
mov
daa
ret
aas
adc
pusha
inc
int3
imul
bound
mov
fldl
mov
cwtl
fsts
mov
mov
jae
pop
dec
out
frstor
cmpsl
mov
daa
pop
dec
cmp
lahf
add
sbb
mov
roll
loope
jae
xchg
mov
dec
loope
imul
leave
mov
mov
std
ret
popa
inc
or
sub
xchg
scas
daa
ret
bound
mov
fcomps
mov
aas
mov
dec
call
xchg
das
mov
lock
mov
fisubl
loopne
push
and
addr16
inc
test
fldcw
subb
fs
cmp
jecxz
xor
movsl
add
xchg
push
xor
test
push
mov
xlat
movsl
icebp
pushf
push
inc
lea
pop
das
or
push
scas
lcall
pusha
nop
cmp
cmp
aad
xor
push
inc
jbe
jo
out
xor
mov
xor
fs
rcrb
mov
jl
vcmpps
sub
cmpb
loop
dec
out
cmp
push
mov
mov
stos
dec
cli
jmp
sti
aad
dec
scas
iret
stos
data16
sbb
adc
arpl
mov
shll
ud2
mov
ret
es
inc
das
adc
mov
in
ljmp
clc
pop
popa
sub
scas
dec
stos
mov
jmp
pop
xor
fisubrl
in
pop
movsl
lods
inc
dec
insl
add
pushf
stos
ret
sbb
out
stos
aad
adc
loop
and
dec
mov
mov
and
cltd
jmp
add
shll
out
and
imul
mov
xchg
or
cmpsb
mov
dec
sbb
inc
sub
test
cld
dec
inc
cmp
sahf
rorl
push
cltd
popa
outsl
mov
mov
lret
neg
jns
pushaw
and
adc
mov
sub
pop
lret
mov
mov
loop,pt
int3
adc
adc
push
jns
xchg
adc
add
call
jno
or
out
lods
xchg
sbb
or
xchg
xorl
xor
mov
adc
popf
in
cmp
adc
lea
mov
in
xchg
add
cmc
cmp
in
loop
xor
mov
pop
mov
mov
mov
push
pushf
insb
or
aam
mov
cltd
mov
jae
ljmp
shll
repnz
fcomip
jns
push
cmp
mov
mov
jmp
sub
xor
xchg
out
sbb
cmc
mov
jnp
iret
xor
push
imul
insb
jae
sbb
aam
push
adc
or
xchg
inc
test
jl
pop
in
outsl
add
fldcw
pop
push
out
movsb
push
xor
xor
shrl
insb
cmp
xchg
fwait
cwtl
cli
mov
ljmp
sahf
das
mov
and
inc
sbb
mov
psubusb
std
movsb
lds
jmp
sub
clc
es
fstl
imul
lds
dec
mov
enter
aad
xchg
lcall
test
adc
in
lret
jmp
sub
mov
jb
and
stos
xchg
insl
js
or
inc
dec
or
ja
shl
mov
cmpsb
push
jbe
dec
sub
mov
out
test
mov
fxch
mov
mov
dec
sbbb
les
dec
jp
or
add
cmc
and
daa
mov
dec
sbb
cmpsb
test
push
cwtl
mov
xlat
push
loopne
push
pop
pushf
testl
add
inc
pushf
mov
dec
push
and
lcall
xchg
mov
add
fstpl
ds
pop
cld
push
sbb
cltd
fcmovnb
enter
cwtl
xor
aaa
lcall
mov
repz
rclb
push
gs
sub
into
dec
pop
jb
dec
dec
xchg
lret
jle
pop
test
push
clc
adc
sbbb
and
or
lods
notl
or
add
xor
lods
jb
or
incl
jg
lcall
inc
scas
inc
cmc
xchg
lahf
in
test
add
push
negb
or
sub
fs
mov
mov
fldlg2
sub
xchg
addb
clc
mov
or
cmp
in
or
stc
cmpsb
lcall
ds
shr
xchg
jg
lods
add
testb
cmp
lcall
std
iret
push
cli
mov
fwait
out
popa
sub
aad
pop
push
xchg
in
or
push
sub
dec
mov
sarb
pop
mov
out
adc
mov
out
inc
cmp
inc
sar
mov
fsubrp
add
and
or
popl
cmc
jg
in
stos
mov
sbb
mov
cmp
ds
cs
pop
cmp
ja
mov
inc
out
add
push
dec
mull
daa
push
xchg
push
pop
fs
out
stc
inc
or
fnstsw
mov
and
or
push
test
inc
pusha
mov
sbb
loopne
fcompl
lret
dec
xlat
stos
pop
data16
mov
pop
data16
arpl
lods
stc
lods
mov
inc
enter
jb
xor
xor
orb
mov
out
adc
fcompl
js
sub
insb
cld
jae
adc
cmp
jae
push
mov
in
popa
or
push
adc
fcomip
push
mov
cld
es
inc
fimuls
sub
lret
mov
adc
pusha
add
test
adcl
pop
data16
lahf
and
aaa
inc
xchg
out
inc
sbb
xchg
nop
xlat
add
mov
das
pushf
or
mov
or
mov
sub
fisttpll
outsl
inc
fnstsw
xor
ret
mov
and
aam
lock
cmp
sbb
js
push
or
shlb
std
push
test
jns
fimuls
jecxz
jle
je
mov
das
push
adc
add
xor
xchg
rcrl
cmp
xorl
leave
push
or
xor
das
adc
adc
test
cmp
pop
mov
enter
add
pop
jne
or
jbe
xchg
ss
jnp
fwait
and
aaa
fcoms
out
aad
int
sbb
mov
in
mov
sti
mov
int3
test
or
in
push
and
xchg
jae
pop
in
jl
lret
cmpsl
sbb
jle
aad
sub
or
cwtl
or
ret
sub
mov
xchg
inc
sub
mov
mov
push
aas
imul
mov
outsl
test
lods
ret
cltd
push
movsb
pop
out
push
pop
shlw
or
sub
pop
dec
lret
xchg
lcall
daa
mov
lods
test
std
outsb
scas
jae
nop
popf
addb
adc
sub
push
cwtl
cli
cs
mov
sbb
sti
mov
jae
gs
aad
ljmp
xor
jg
divb
pop
adc
dec
jg
pop
sti
iret
repnz
mov
jle
loope
xchg
xchg
shlb
and
inc
out
push
adc
pop
negl
pop
dec
fisttpl
push
push
jae
mov
fildl
int3
mov
push
mov
jns
xchg
pop
adc
xlat
mov
nop
movsb
push
push
jp
fmuls
xor
dec
dec
mov
pop
xor
xchg
xlat
repnz
pusha
mov
fildll
icebp
repz
mov
mov
out
push
imul
xor
xchg
or
sub
sub
jnp
pushf
jnp
stos
ror
sub
xchg
shll
mov
push
sbbl
mov
dec
mov
pop
jne
out
push
sub
xchg
push
or
jae
adc
and
adc
dec
sbb
cld
pop
in
and
mov
inc
and
add
xor
das
js
push
inc
mov
pop
mov
inc
mov
or
xchg
add
iret
mov
lret
scas
mov
out
icebp
cmp
stos
pop
mov
js
push
in
shr
dec
inc
pushf
or
lods
ret
jecxz
mov
and
push
cmp
push
jbe
loope
inc
mov
lahf
mov
sarl
inc
mov
inc
cmp
push
sub
cmp
jg
je
sbb
incb
sub
sbb
repz
cmp
div
xchg
mov
sbb
pop
fwait
jp
fs
xchg
adc
xchg
fldl
dec
cwtl
cmp
xor
test
in
dec
int3
inc
imul
sahf
xor
dec
test
aad
adcb
add
sbb
movsl
lds
lock
inc
fimuls
outsl
jnp
lcall
add
lcall
pushl
insb
bound
nop
jns
xchg
mov
push
fs
int
jl
aaa
add
stc
mov
xor
iret
mov
test
fnstsw
into
pushf
je
faddl
loop
daa
int
ds
aas
add
out
dec
pop
mov
hlt
subl
jmp
jg
mov
stc
hlt
aam
stos
jmp
loop
pop
inc
mov
loope
jl
orb
cmp
jne
fstps
sarl
mov
int
push
push
aad
fcomps
rcll
xor
enter
mov
xor
std
lods
inc
mov
xchg
or
jl
jae
mov
inc
adc
or
in
fcoms
scas
stos
mov
and
add
sbb
inc
popf
sbb
test
mov
enter
in
xor
mov
dec
int3
out
lods
ss
and
cmp
xlat
orl
je
in
cmp
jecxz
cmc
inc
sti
arpl
movl
jp
cmpsl
aas
xorb
fimull
jnp
mov
push
cmpsb
outsb
scas
pop
push
orb
push
jne
mov
and
int3
nop
mov
repnz
cs
push
lods
pop
xchg
sbb
outsl
in
test
in
adcb
imul
cmp
jl
dec
gs
test
cmpsb
push
push
xor
aas
inc
adc
inc
arpl
mov
and
jmp
mov
xlat
pop
sub
loopne
dec
pop
ret
mov
mov
push
mov
fisubs
js
mov
jb
enter
mov
cli
mov
mov
jne
mov
test
movl
stos
dec
mov
push
push
test
fdivrl
mov
mov
inc
inc
sahf
mov
iret
inc
mov
jge
xchg
bound
fs
dec
outsb
fwait
cmp
mov
pop
enter
out
iret
call
cld
and
scas
cmp
pop
pop
lods
adc
push
sbb
xor
je
mov
sahf
test
lock
jb
js
shrb
sub
pop
fwait
int
gs
imul
or
cmp
pusha
test
xchg
xchg
jecxz
push
movsl
in
fwait
ljmp
loopne
jae
sub
jmp
imul
loope
popf
sbb
jne
jl
call
cmp
pop
xchg
bound
sub
sbb
mov
sbb
jb
sbb
cmp
or
nop
call
jbe
adc
subl
sbb
dec
dec
pushf
notb
popl
xchg
scas
fstl
dec
stos
mov
fdivrl
bound
popa
mov
pushf
mov
neg
ljmp
mov
jle
fisttpl
mov
aam
mov
cmp
pusha
test
lods
mov
fs
jmp
scas
mov
mov
or
cmpsb
and
or
dec
je
mov
mov
fcoml
popa
std
push
sub
clc
adc
push
aaa
popf
loope
xchg
call
adc
xchg
mov
mov
iret
xchg
ficoml
inc
ss
mov
push
idivb
cs
bound
add
fs
cwtl
test
out
cmp
cmp
mov
dec
sar
xchg
adc
jo
lea
lret
dec
cmpsb
inc
mov
clc
push
sbb
pop
scas
xor
test
sbb
dec
loope
andb
adc
sbb
cmp
cwtl
imul
jp
aaa
and
sbb
fdivrs
lock
fwait
mov
add
std
mov
leave
int
ret
pop
mov
rcll
xchg
and
aam
dec
mov
xchg
jb
push
xchg
cmp
xor
xchg
xor
rcrb
lahf
shrl
jne
sarb
mov
je
and
jl
add
inc
sub
loop
add
jl
and
jp
mov
adc
jnp
xchg
outsl
xchg
mov
and
cmp
stc
jno
cmp
fdivrl
adcb
adc
lods
xchg
cmp
dec
enter
insb
fwait
push
lret
fwait
ret
and
push
mov
daa
mov
and
xchg
lods
jnp
xlat
push
adc
adc
cmp
incl
frstor
pop
fbstp
mov
pushf
bound
mov
addb
xchg
data16
mov
insb
jp
jge
aad
pop
sbb
cmpsb
aam
xchg
aas
fucomi
push
push
xlat
add
imul
sub
lock
outsb
push
push
mov
push
xchg
mov
dec
aas
outsb
and
cmp
aas
ja
out
sub
or
or
mov
arpl
push
mov
imul
ss
adc
push
decl
subl
dec
sub
cmp
jo
and
lds
push
sub
jl
fsub
mov
xchg
mov
adc
shr
test
leave
push
xchg
andl
unpcklps
imul
shll
cmp
pop
repnz
dec
imul
jbe
inc
sub
dec
mov
arpl
sahf
mov
and
mov
xor
in
dec
cmpb
data16
sub
xchg
xor
lea
adc
ficomps
icebp
sbb
in
in
and
js
ficoml
mov
inc
movsl
ds
fsts
push
ret
push
or
gs
dec
and
sbb
sub
movlps
dec
dec
inc
jecxz
xorb
cmp
xchg
pushw
in
lods
jae
shrl
or
sub
addl
xchg
adc
shll
hlt
dec
pop
insl
andl
xor
out
mov
rorb
ret
lcall
xor
jmp
enter
cmp
out
scas
jecxz
fstps
sub
mov
daa
out
mov
les
push
push
shr
hlt
inc
inc
cmp
aas
fwait
cli
in
in
dec
rol
xor
leave
and
daa
imul
lcall
push
mov
push
mov
fwait
mov
dec
jbe
ja
dec
cmp
dec
jl
mov
daa
sbb
les
pop
mov
mov
and
loope
rcrb
es
adc
jl
aad
lret
push
stos
sub
mov
mov
jne
mov
loopne
adc
andb
enter
xchg
push
dec
xchg
insb
rorl
jge
jb
lret
decl
rcll
sbb
add
enter
xchg
or
xchg
push
outsl
and
adc
jno
ret
or
psrad
jmp
cmp
repnz
fimull
cmpsb
js
sub
xchg
ss
pop
out
and
push
pop
inc
rcrl
adc
add
inc
adc
or
add
jecxz
aad
iret
add
sub
pop
jo
and
hlt
rol
insl
and
jl
es
mov
pop
imul
ret
dec
mov
add
in
add
cmc
push
pop
jp
scas
and
jno
out
jge
lock
xor
icebp
or
pop
fidivl
test
push
bound
aad
jns
xor
jecxz
mov
out
sahf
cmp
out
fcompl
mov
push
sbb
icebp
hlt
push
cmp
xchg
pop
push
or
sub
sub
pop
loop
jns
and
sub
mov
adc
std
xchg
xchg
sbb
fmull
mov
pop
pop
xor
test
cmp
dec
shlb
lea
mov
pop
fwait
aaa
inc
mov
dec
rorb
mov
cmp
pop
scas
inc
repnz
divl
sbb
outsl
ds
rorb
or
mov
sub
adc
int
cmc
and
xchg
movsl
dec
fistps
pop
mov
or
pop
mov
aam
arpl
scas
xchg
cli
sub
xchg
lds
mov
mov
jmp
pop
inc
and
lcall
or
xor
xor
lods
arpl
pop
fst
and
cld
sbb
cmc
orb
jbe
sub
or
lods
std
pop
and
cmc
int
ljmp
cli
stos
aaa
mov
dec
decb
enter
iret
jle
mov
je
ror
mov
shlb
lret
push
mov
imul
push
xor
push
rcr
inc
jecxz
andl
jp
push
jo
jle
lods
fs
dec
scas
dec
into
dec
in
sbb
inc
mov
push
mov
test
jbe
jo
in
push
jno
sub
or
inc
inc
inc
cmc
push
aad
push
repz
sbb
add
std
inc
popa
lds
mov
loop
xor
loopne
cmp
inc
outsb
repz
repz
sahf
test
sbb
insb
mov
xor
lret
lods
fnstenv
fisubl
in
daa
int
stos
pushf
dec
sbb
fcmove
outsl
and
call
ja
mov
push
add
jmp
pop
divb
adc
pop
scas
and
dec
notl
mov
inc
test
outsl
inc
imul
decb
outsb
das
push
hlt
jl
popf
aas
in
ret
jno
out
xor
mov
scas
lock
mov
cmp
mov
sub
mov
pop
pop
aas
jbe
jne
jb
cmpsl
imulb
sarl
adc
lret
xor
faddl
xchg
call
mov
iret
ljmp
xchg
pop
cltd
jecxz
fldenv
cld
lret
in
dec
jnp
fstps
and
jle
lods
loopne
xchg
pop
cwtl
push
or
jmp
inc
jmp
loop
xchg
stos
lahf
xchg
pop
rol
movsl
movsl
or
jecxz
cmp
int3
dec
scas
and
xchg
push
mov
std
fwait
xchg
mov
cmc
icebp
xor
insb
add
int
iret
adcb
ja
testl
jnp
dec
or
pop
inc
ss
call
cmp
orl
push
sbb
jg
adc
jno
fcompl
jbe
dec
mov
scas
cmp
outsb
lea
movsb
cmp
jmp
inc
bound
lods
dec
lcall
jmp
lcall
push
push
mov
fbstp
and
xor
push
cmp
or
test
push
add
cmp
int3
fcomi
pushf
cmp
stos
push
les
add
inc
and
frstor
leave
jbe
xchg
dec
hlt
mov
cmpsb
jp
das
mov
xor
nop
into
jne
dec
sub
and
loope
decl
test
add
fisttpll
push
in
stos
dec
cmp
fsts
mov
and
addb
adc
pop
cwtl
inc
dec
xchg
imul
ret
not
jge
pop
mov
loop
fwait
xor
add
mov
push
push
mov
mov
inc
or
popa
out
adc
mov
pop
add
push
jns
int
cmp
ja
ret
in
xchg
iret
insl
mov
test
js
mov
jno
mov
mov
adc
gs
mov
adc
jge
xor
ret
mov
lret
push
push
lret
lret
setle
es
cmpsl
inc
mov
fdivrp
push
out
push
cld
sub
jne
inc
imul
jo
lea
mov
lds
cmp
sub
lret
js
jns
dec
dec
test
pop
xchg
jmp
std
flds
js
sti
mov
in
sub
shr
clc
or
sar
jne
rorb
aad
inc
enter
int
or
stc
ret
inc
sahf
mov
jae
or
cmp
ljmp
iret
fidivs
pop
mov
or
cmp
adc
cltd
dec
inc
mov
inc
mov
push
dec
push
in
dec
pop
pop
das
inc
jbe
loopne
popa
sbb
xchg
cltd
push
fcmovu
adc
push
dec
or
fadd
jb
xchg
push
dec
aad
jns
ss
push
stos
jmp
imul
mov
xlat
or
loope
in
lcall
test
lret
jnp
fs
sbb
mov
dec
lret
jo
adc
mov
or
clc
pop
andl
sbb
xor
and
pop
xchg
cld
cmp
std
daa
shll
push
cld
movsl
hlt
ja
push
mov
lret
mov
incl
xchg
lods
dec
repnz
sbb
fucomip
fstps
mov
push
sub
dec
popa
inc
mov
mov
xor
loop
add
bound
out
aas
pop
xchg
les
cli
into
xchg
jno
and
hlt
mov
popa
aad
addb
and
cmp
xchg
pop
or
jl
fwait
jno
ljmp
movsb
sub
mov
mov
mov
std
in
sbb
adc
insb
cmp
lods
jp
and
lahf
pushf
push
dec
int3
js
jnp
cmc
cmc
popaw
adc
sahf
test
or
xchg
inc
sub
cwtl
inc
rol
clc
pop
mov
and
aam
cmpsl
lret
test
sti
pusha
sub
icebp
cli
adc
insl
jge
jle
jbe
fisubl
mov
ljmp
jecxz
dec
icebp
dec
xchg
test
push
pushl
jl
push
add
fldln2
inc
out
xor
int
pop
xchg
mov
repz
xchg
cmp
inc
pop
fidivrl
stc
clc
push
cld
mov
jnp
cmp
divb
mov
bound
xor
sbb
movsl
jnp
stos
mov
out
ds
jns
dec
lock
or
push
insl
jae
stos
xchg
js
out
filds
cmpsl
test
push
mov
adc
clc
cwtl
icebp
inc
sti
or
push
dec
lea
inc
jp
sbb
cmp
cmpsl
mov
and
sbb
jge
stc
ljmp
mov
inc
add
inc
and
sti
jno
jecxz
loopne
sub
lcall
adc
nop
and
or
cld
xor
int
add
mov
push
subps
rcl
add
mov
and
test
mov
cwtl
cld
ret
fnstcw
decl
mov
aaa
lods
out
jl
jp
sarl
in
aas
hlt
test
xor
lock
cmp
and
inc
jnp
std
das
popa
std
daa
push
mov
outsl
in
fcoml
out
push
add
jno
fcoml
push
cmp
je
out
les
nop
rolb
dec
xchg
jle
into
cmp
dec
popf
or
out
sub
shll
or
mov
pop
mov
popf
ret
les
cld
cs
cwtl
sub
jmp
inc
mov
cmp
int3
xor
adc
xor
fwait
add
and
adc
stos
ret
gs
mov
ss
fbstp
aaa
repz
std
jl
cmp
xchg
ljmp
jmp
jnp
jle
insl
adc
adc
pop
mov
icebp
movsb
dec
movsb
fiaddl
mul
ja
mov
loopne
sbb
arpl
cmp
popf
adc
adc
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
mov
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
jmp
cmc
cld
mov
test
sbb
pop
jp
cld
pop
jp
mov
loopne
and
add
repz
mov
add
out
push
jno
mov
inc
sbbl
fs
lea
test
cmp
xor
pop
loop
lock
fidivrs
idiv
mov
cmp
aad
sbb
add
pop
out
stos
push
clc
and
add
dec
leave
jp
sbb
jb
es
inc
faddl
push
add
jnp
scas
pop
xchg
jp
les
insl
js
hlt
pop
push
dec
sbb
inc
ds
jno
or
adc
or
pop
stos
cs
xchg
pop
xor
pusha
or
pop
jle
les
mov
pusha
inc
insl
xchg
mov
out
ret
dec
push
ljmp
pop
and
adc
sbb
push
mov
testl
and
xchg
sbb
iret
enter
outsl
sub
es
jp
sub
push
jg
in
fs
inc
lret
and
mov
inc
rorl
push
inc
insl
cwtl
sbbl
notb
inc
pop
pop
in
add
in
push
mov
mov
adc
jnp
fwait
pop
dec
inc
cmp
ret
roll
pop
or
xchg
in
jg
or
icebp
jp
push
cmp
dec
mov
mov
mov
adc
dec
jecxz
and
sbb
adc
sub
out
out
pop
clc
push
fcoml
dec
jmp
push
ret
mov
aas
not
cmp
push
pop
test
mov
out
call
pop
enter
pop
dec
inc
mov
or
out
fwait
or
cmp
cmp
popf
or
mov
inc
jmp
pop
ficompl
jmp
addr16
pop
shl
jp
fisttps
aam
les
shrl
mov
fiadds
out
cmpsb
sbb
lds
jecxz
dec
jae
aad
pop
xchg
push
add
fcmovne
dec
aam
imulb
push
inc
adc
ror
in
or
pop
jmp
and
sub
push
xor
jg
out
imul
pop
sar
mov
jge
pop
xor
dec
scas
cmp
rolb
sbb
addr16
and
je
xchg
xlat
repnz
mov
jg
cli
jmp
xchg
dec
mov
dec
ret
mov
or
stc
mov
movq
mov
call
jecxz
scas
pop
fs
mov
fbld
jge
outsl
xor
insb
mov
imul
jmp
ds
cmpsl
popf
ds
ja
mov
jg
jle
cs
into
pop
nop
and
sub
sub
ds
sarb
sahf
mov
xchg
jne
jl
out
add
mov
pop
bound
loope
push
add
jmp
js
jbe
push
ret
sub
ret
mov
ret
push
or
test
lret
rcr
dec
xor
test
out
jae
insl
mov
xor
mov
xchg
sub
mov
nop
mov
push
repz
jns
jne
xchg
call
dec
sub
addr16
in
jl
inc
sbb
dec
mov
sub
pop
mov
mov
push
movsl
std
loop
adc
xchg
sub
fsubrl
xor
addr16
xor
push
daa
scas
and
sub
in
mov
sbb
xor
push
rorb
movsb
ja
in
fwait
sub
lret
js
or
add
inc
insb
cmp
xchg
push
testl
enter
cmp
loop
jne
fstps
sbb
sub
stos
xor
adc
stos
and
das
iret
xchg
pop
jecxz
xchg
incl
lea
stos
test
sbb
aas
jg
push
mov
imul
jle
jnp
pop
cmc
repnz
cmpsb
or
insl
inc
call
mov
dec
jnp
pop
dec
mov
aas
stc
dec
sub
mov
flds
data16
push
add
jmp
mov
mov
mov
ss
xor
mov
sub
push
dec
jmp
data16
push
repnz
sub
inc
pushaw
mov
lods
ret
in
and
cwtl
inc
loopne
std
pop
ret
repnz
push
lods
scas
pop
pop
adc
jae
stos
or
sahf
scas
gs
inc
push
xor
leave
or
or
and
mov
out
sub
pop
push
mov
add
aaa
imul
mov
std
in
adc
sar
push
int3
mov
sbb
mov
imul
mov
dec
jne
hlt
jp
ficomps
into
movsl
xor
xchg
outsb
ljmp
int
leave
mov
dec
lret
mov
xchg
lds
cmp
xchg
inc
push
out
cltd
adc
sahf
rorl
movsb
cmpsl
lcall
cmpsl
aam
rcll
arpl
jge
and
cmpsb
pop
movsb
adc
in
cwtl
fistl
and
dec
add
dec
jne
cmovle
loop
mov
fisubl
test
or
pop
xchg
sub
pop
jle
mov
fstpl
pop
int
jne,pn
mov
add
mov
mov
jnp
dec
pop
jp
pop
cmp
jg
dec
push
rclb
jp
aad
inc
iret
adc
out
adc
ret
clc
xchg
leave
push
or
out
mov
sub
push
sahf
out
insl
pop
out
pop
cmp
inc
push
push
cmpl
dec
xchg
in
xor
shlb
dec
daa
fstpl
pop
mov
movsl
aaa
bnd
push
dec
xchg
stc
dec
mov
xchg
pop
jecxz
xchg
dec
stos
in
pop
sub
mov
mov
popf
lea
pushf
jge
pop
dec
pushf
in
sub
ret
scas
push
xchg
test
pop
mov
xchg
cld
and
mov
pop
testl
mov
sbb
rcl
fildl
xchg
push
mov
sub
call
cmc
repnz
sbb
pop
stos
pusha
fdivs
push
dec
stc
sub
loop
xchg
pop
and
or
sub
mov
mov
push
mov
adc
fwait
inc
sub
lods
idivb
dec
fidivl
inc
sub
and
xchg
loop
jl
jns
int
or
bound
and
std
xor
cltd
xchg
mov
mov
scas
jno
daa
ja
xor
cmpsl
push
subb
sti
pop
and
jnp
sbb
push
aad
loope
faddl
adc
ret
pop
inc
add
lcall
push
sbb
mov
mov
pop
push
into
cmpsl
jne
movsl
enter
inc
mov
and
aam
xor
xlat
and
bound
pop
cs
push
dec
insl
xchg
mov
sub
jbe
aaa
hlt
xchg
inc
or
iret
jle
test
sbb
lods
adc
add
loopne
cmp
xor
lds
lods
adc
rcl
dec
xor
cltd
add
adc
movhps
add
sub
add
push
fs
in
cwtl
arpl
cmp
or
add
mov
in
adc
cmpsl
scas
add
pushf
es
xorb
or
test
jg
fwait
insl
mov
or
data16
mov
push
xchg
pop
aas
and
and
roll
pop
jecxz
mov
add
push
sbb
imul
ret
int
in
inc
jmp
filds
outsb
enter
pop
sbb
cmp
sbb
orl
fabs
sbb
call
lahf
mov
dec
ret
and
xchg
inc
pushf
shrb
aas
mov
stos
mov
adc
bound
fildll
pushf
jno
fnsave
fwait
xchg
dec
jecxz
int3
fstps
xchg
loopne
mov
push
xchg
and
adc
imull
push
lret
push
xor
dec
inc
stos
and
cmpsl
jo
add
xchg
mov
mov
cmp
mov
outsb
imul
xchg
and
cwtl
pushf
sub
inc
test
ret
jns
push
jne
aad
outsb
jb
mov
xchg
shr
mov
jecxz
enter
lcall
and
jb
or
mov
push
insb
sarb
data16
and
sbb
mov
fcoml
and
das
and
jmp
mov
pop
jg
pop
in
int3
ret
xor
adc
mov
out
or
sub
xchg
mov
xor
arpl
sub
push
je
les
negb
sti
pop
loopne
adc
push
das
test
push
push
data16
jp
mulb
sbb
and
pcmpgtd
aaa
mov
lea
mov
sub
jo
cmc
scas
sub
adc
mov
aad
push
push
pushf
dec
rcll
clc
cmp
dec
xchg
call
pusha
fwait
xor
and
xorl
push
sbbl
mov
dec
popf
leave
popf
lds
or
jl
sbb
xchg
fucomip
jae
push
jo
lret
pop
loop
or
adc
add
loope
scas
rcrl
jmp
mov
add
or
ljmp
xchg
lcall
stos
cmp
mov
mov
pop
mov
add
or
into
dec
js
xchg
sub
push
push
adc
loopne
dec
pop
push
pop
mov
imul
hlt
iret
out
std
hlt
rolb
lea
push
test
mov
stos
sbb
aad
aad
scas
pushf
divb
xchg
lods
sbb
adc
cmp
xor
xchg
xchg
mov
xor
mov
dec
jnp
lds
push
mov
push
das
lods
jns
sub
mov
aas
jg
popf
repnz
sti
rcll
push
stos
fwait
jle
or
jge
mov
aam
mov
pop
fstp
inc
jns
and
or
cmp
mov
adc
cmp
or
imul
andl
inc
sub
ror
repz
push
or
stos
ljmp
aas
int3
jmp
pop
icebp
xor
gs
adc
pushf
clc
mov
jg
inc
and
mov
out
aad
inc
mov
fbstp
rorb
mov
repz
or
mov
cli
xchg
clc
xchg
clc
fsts
xor
mov
xor
popa
stc
insb
out
xchg
inc
cmp
mov
xor
xchg
sub
pop
in
push
and
lret
fsubrs
int3
mov
mov
aas
and
sahf
xchg
andb
xor
loopne
outsb
std
jge
cmp
jnp
in
outsb
adcb
sbb
dec
pop
pop
addr16
and
push
sbb
fwait
or
sbb
add
out
fistps
cmpsb
sub
push
xchg
mov
jmp
test
cmc
aad
imul
cmp
std
sub
mov
sub
push
dec
fsubrp
add
pop
sar
lods
out
push
cmc
mov
enter
incb
faddp
cs
add
std
mov
popf
leave
addr16
dec
call
mov
outsb
dec
aaa
adcb
add
xchg
lods
daa
leave
in
push
dec
dec
cmp
sbbl
inc
cs
cmp
xchg
out
stos
add
ficoms
adcl
jb
mov
dec
jle
xorb
jns
fildl
loop
insb
insl
mov
lahf
sbb
xor
xchg
into
xor
clc
adc
pushf
scas
in
ja
js
icebp
push
jnp
mov
rcrb
ljmp
mov
mov
dec
daa
cs
mov
clc
mov
mov
repnz
xorl
sbb
sub
sbb
cmpsb
int
sub
notl
das
push
stc
cmpsb
test
enter
sbb
repnz
shll
cld
cmp
addb
mov
jo
les
fmull
lahf
inc
int3
cmp
ljmp
cli
loope
das
test
aas
jmp
inc
push
out
push
dec
mov
outsb
cltd
add
js
scas
in
out
xchg
and
aas
fstp
aad
cld
push
popa
or
fisttpll
cmpsb
stos
pop
in
mov
lcall
imul
ficompl
and
mov
xor
xor
cmc
xchg
sahf
jg
movsb
sub
std
repnz
rclb
stc
add
out
std
sbb
pop
xchg
jae
dec
jecxz
mov
fstps
inc
enter
mov
mov
andb
dec
xchg
out
test
nop
mov
mov
or
movsl
cmc
popf
lret
push
inc
aaa
fiadds
mov
mov
dec
add
bound
std
jmp
fmuls
inc
push
mov
push
jge
jl
push
push
imul
jns
mov
and
inc
das
lds
add
add
incb
cmp
or
icebp
xlat
in
loopne
add
aas
cmp
fnstcw
cltd
test
or
mov
or
jae
push
pop
aad
stos
add
xor
push
rol
adc
cmp
pushf
rcrb
daa
in
lahf
push
jno
in
or
test
mov
mov
mov
cs
push
inc
inc
xchg
out
or
jb
pop
in
lcall
stos
adc
and
push
jge
adc
arpl
in
mov
jge
sti
addb
mov
sbbl
fstl
sub
inc
fcmovb
test
fwait
aas
enter
mov
adc
call
fdivrl
sti
data16
xor
push
add
push
mov
stos
push
mov
pop
stc
leave
lock
shrb
cvtpi2ps
and
mov
pop
stos
mov
out
push
inc
sub
sub
lds
rolb
shll
xor
push
imul
and
out
mov
aad
jno
pusha
lods
sbb
test
movsl
mov
push
inc
repnz
aaa
lcall
loop
mov
out
repnz
jg
int
repz
stos
test
mov
pop
scas
mov
cmpsl
sbb
pop
push
mov
test
jg
inc
add
or
pop
pop
bswap
popf
mov
in
add
xor
sbb
pop
xchg
arpl
fimuls
in
inc
call
mov
sub
pop
add
fs
mov
add
dec
mov
fxam
insb
lcall
add
or
inc
mov
repz
out
jl
test
pop
addr16
int3
popf
loopne
loope
test
lds
and
insl
xchg
or
sti
xchg
fwait
std
jmp
mov
icebp
xor
popf
das
lea
xor
or
aaa
mov
mov
int3
aas
loope
les
enter
shrb
mov
pop
aas
mov
cmp
mov
mov
lock
jge
push
mov
or
iret
imul
cmpsb
rcll
andl
mov
sbb
ret
xchg
enter
and
hlt
sub
in
ja
cmp
jns
ss
jbe
hlt
fnsave
fildll
gs
mov
sahf
xchg
inc
inc
mov
inc
xlat
xor
jl
push
dec
js
test
adc
dec
cmp
daa
mov
scas
clc
cmp
std
xchg
aad
inc
out
lods
punpckhdq
lret
push
mov
or
dec
sub
adc
xchg
ljmp
cmp
ficompl
insl
mov
in
jl
cmp
mov
cs
sahf
lods
jmp
pop
mov
jne
loopne
lock
sub
or
scas
jns
mov
addr16
push
inc
cmp
jae
rclb
stc
inc
jg
rolb
les
add
mov
aaa
push
insb
pop
ds
lahf
cmpsl
mov
mov
insl
mov
and
mov
repz
jmp
adc
je
sbb
add
testl
scas
xchg
ret
in
mov
test
mov
xchg
xchg
dec
add
loope
loopne
push
xchg
insb
aaa
jmp
call
xor
adc
daa
lret
enter
push
lret
sarl
imul
std
mov
int
cltd
in
cltd
cltd
out
rcll
add
lds
insb
fwait
sahf
xor
pop
push
dec
loopne
je
rorb
pushw
inc
aaa
pop
aaa
dec
pop
daa
fucomip
jmp
mov
adc
rcrb
sub
jbe
ret
sbb
enter
inc
cmp
cld
stc
sahf
pushf
mov
ret
ja
inc
je
popa
mov
adc
test
push
in
sub
dec
pop
enter
cmpsl
push
sub
dec
inc
push
imul
cs
and
pushf
or
cmc
addl
xchg
test
pop
xor
jne
pop
repz
xchg
pop
xor
je
mov
cmp
loopne
pushf
push
lahf
mov
xor
pop
jo
adc
xor
lods
mov
aaa
in
add
dec
lret
pop
inc
shl
or
jecxz
jne
sub
cli
dec
shlb
je
and
fucom
pop
popa
dec
in
cltd
flds
mov
pop
add
stos
cmpl
cltd
je
icebp
xchg
aam
lahf
out
repz
ret
sub
pop
nop
jo
xchg
sarl
out
add
shrl
dec
inc
movsb
mov
dec
jl
mov
pop
push
adc
shll
push
lds
in
in
dec
xor
ds
sbb
int3
push
dec
mov
and
movsl
inc
add
out
inc
daa
repz
inc
xchg
jp
xchg
loop
sahf
pop
out
lock
ret
jp
rcll
mov
mov
sahf
cmp
jg
xchg
sahf
shr
insl
lret
cmp
fsubrl
call
push
inc
insl
add
addb
mov
jmp
xchg
xor
lods
insb
pop
sub
sub
or
pop
call
mov
scas
sbb
cwtl
jl
and
mov
out
int
jns
push
insb
mov
push
mov
xchg
push
mov
xchg
fs
pop
pop
xlat
lret
dec
dec
mov
ret
lcall
jecxz
jmp
jg
shl
push
add
mov
dec
push
xchg
cmp
insb
mov
leave
movsl
xchg
adc
push
jl
xor
push
sbb
mov
mov
int3
mov
iret
add
jno
and
xlat
shrl
jno
cs
aam
aaa
dec
jle
adc
mov
dec
lret
jae
pushf
jp
fstl
out
push
outsb
std
xchg
or
cmpsl
xor
and
fsts
and
loop
movsl
gs
sub
je
sbb
cmc
out
inc
push
int3
push
popf
mov
pop
mov
xor
cltd
mov
xchg
cli
jge
fdivrl
pop
xlat
jg
rolb
mov
pop
lcall
cmp
xorl
cmc
and
ds
xor
sahf
dec
ret
or
repz
fsubl
mov
inc
inc
push
shrb
pushf
movswl
outsl
sub
je
test
pop
lret
inc
scas
mov
jp
iret
stos
xor
divb
xchg
dec
jle
shll
aaa
adc
ret
test
aad
ret
loope
fsts
jne
inc
push
jnp
or
or
and
lods
sub
outsb
mov
xor
clc
lret
sub
sar
fistps
mov
mov
cltd
push
mov
sbb
mov
jp
push
adc
lock
cld
movsb
clc
cltd
xor
inc
fsubp
mov
mov
nop
fstps
inc
imul
push
shlb
fdivrp
imul
int
int
lcall
xchg
call
rcrl
jns
js
nop
or
xor
mov
sub
mov
fstl
das
scas
or
sub
add
cmpb
popa
fisubl
stos
cs
repz
fwait
ds
xlat
mov
xchg
cwtl
or
scas
mov
jns
fdivs
add
out
pop
mov
jno
cmp
sbb
push
lahf
ret
adc
sbb
shll
shrl
stos
aad
test
ret
add
xchg
push
test
push
dec
dec
inc
ret
pop
xchg
fs
jge
aad
fisubrl
sub
push
xor
xchg
xchg
push
mov
test
mov
jge
insl
fdivrl
mov
or
or
mov
add
sbb
mov
das
mov
mov
jb
stc
push
sub
dec
pop
mov
jecxz
fwait
in
mov
aad
xchg
out
xchg
add
pushf
pop
jecxz
cltd
inc
push
mov
xchg
xchg
lock
cmp
sub
div
or
lahf
dec
push
dec
jp
xchg
shrl
popf
or
frstor
sbb
adc
push
lahf
movsl
es
in
pop
loop
sub
int
out
fsubrl
pusha
jbe
or
mov
push
push
mov
dec
lahf
adc
push
scas
xor
inc
insl
or
jmp
insb
lds
add
add
mov
call
lea
jns
in
inc
sub
fistps
cmp
sub
fadd
and
bound
cmp
pop
nop
mov
mov
adc
pop
xor
xchg
jmp
je
daa
sbb
inc
repnz
push
or
xchg
cld
dec
lds
outsl
push
out
fs
dec
jecxz
and
dec
or
pop
int3
stos
shlb
sahf
fistpll
mov
fstl
js
add
adc
std
in
xor
cmc
dec
out
fwait
repnz
fdivrl
sub
sub
loope
xor
cmp
insl
jmp
js
scas
jbe
lret
add
mov
push
mov
add
mov
jno
hlt
push
fisttpl
or
inc
mov
cwtl
cs
hlt
and
push
xchg
jno
or
mov
loop
inc
xor
pusha
out
push
or
mov
fwait
mov
in
xor
call
cwtl
mov
push
adc
cmp
inc
daa
adc
inc
pop
adc
jg
inc
cwtl
call
cmp
inc
xchg
pop
mov
std
subl
out
mov
jne
mov
push
mov
ret
loopne
inc
pop
or
aas
call
popa
icebp
stos
gs
sub
sbb
fxch
scas
in
xchg
pop
nop
adcl
jb
xchg
dec
xchg
loopne
fidivs
cmp
add
rclb
jmp
xchg
inc
stc
insl
lea
out
insb
aas
xor
push
dec
push
add
hlt
pop
cmp
arpl
xor
adcb
stc
jno
mov
mov
int
sbb
add
pop
scas
pop
scas
jmp
jle
sbb
inc
fsubrs
jo
jmp
adc
cmp
push
add
aam
arpl
cmp
cmpl
xchg
sbb
push
cmc
push
mov
jecxz
lcall
push
push
inc
cmp
sbb
outsb
sub
mov
cmc
jnp
push
lock
into
sub
xor
testl
bound
xor
cwtl
cmpsl
popa
comiss
dec
ret
cmp
mov
sub
cwtl
inc
in
shrl
movsb
lea
mov
aad
push
ja
ljmp
out
stos
lea
call
xchg
pop
push
stos
es
adc
loope
jl
insl
mov
aam
mov
aas
ljmp
jecxz
xchg
cmp
fptan
test
sub
out
int
pop
ljmp
xchg
and
mov
test
mov
or
in
dec
movups
mov
add
adcb
xchg
fstpt
popf
js
mov
cltd
cmp
xchg
out
insb
or
sub
ficoml
stos
xor
outsb
mov
push
pusha
jecxz
lock
inc
cli
cmp
repz
icebp
pop
and
mov
adc
xchg
jge
mov
fnstsw
dec
jl
fnstsw
mov
xchg
dec
aas
stos
lret
push
jp
or
sbb
in
inc
sbb
push
pop
mov
cmp
jne
and
adc
jmp
nop
jp
push
adc
adc
sub
cmp
push
push
jmp
incl
inc
inc
pmulhw
stos
cmp
xchg
fiaddl
arpl
nop
sbb
popa
fnstsw
insb
xchg
add
mov
xor
rorb
lcall
xor
cmp
cmp
call
repnz
adc
mov
subb
in
rcr
jle
sbb
es
outsl
inc
pop
inc
fsubs
mov
in
das
pop
outsb
dec
and
mov
inc
out
mov
outsb
jne
push
and
xor
or
adc
mov
cmpsb
shlb
fisubs
lret
lods
test
pop
jge
pop
sub
stos
inc
dec
add
adc
rolb
jge
xor
cmp
jecxz
add
and
or
aaa
out
mov
ja
mov
sub
dec
loop
cmpsb
jmp
test
ficompl
and
test
dec
mov
ret
sbb
jns
mov
add
sbbb
icebp
sbb
cmpsl
lods
movsl
rcl
jo
cmpsb
pushf
xorw
mov
jns
xchg
push
js
mov
pop
and
jmp
orb
negl
pop
adc
in
sub
mov
aaa
xchg
push
call
rol
inc
loopne
rol
je
push
ss
ret
and
shll
aas
and
add
mov
pop
or
adc
xchg
dec
or
sbbb
adc
test
push
inc
sub
leave
sete
xchg
cmpsl
and
mov
aas
cmc
stos
jae
lods
mov
inc
inc
out
or
mov
xor
push
fisubl
lods
cld
adc
lds
mov
stos
loopne
push
stc
cmp
mov
in
bound
dec
insb
add
sbb
incb
int
shrl
dec
filds
fadd
xor
and
mov
xlat
bound
loopne
add
xor
inc
xor
jmp
xor
sarb
das
cmc
dec
sahf
loopne
mov
shl
lahf
inc
cmp
fidivrl
aam
mov
dec
cmp
pop
movsb
sbb
fildll
jecxz
aam
mov
int3
sub
sub
popf
mov
jne
in
repz
add
leave
ja
mov
sub
je
cmpsb
mov
stos
mov
and
jge
mov
and
jno
out
setns
sbb
lahf
mov
lahf
ror
sbb
lea
inc
sub
movsl
xchg
mov
or
gs
enter
dec
gs
sub
jg
and
jbe
jl
loopne
lret
sbb
cmp
aas
in
add
pop
inc
lahf
mov
mov
mov
or
lret
cmpsb
cmpsl
leave
fcomi
dec
push
or
mov
add
dec
adc
mov
ret
outsl
in
scas
mov
dec
enter
xchg
pop
inc
das
int
ss
lods
mov
sbb
xor
clc
std
loope
mov
mov
pop
or
or
inc
notb
dec
imul
jge
sbb
adc
insb
roll
imul
aaa
lods
pop
into
test
push
pusha
inc
pop
lea
push
jl
or
mov
mov
mov
in
mov
xchg
rol
sbb
mov
ljmp
dec
or
test
push
xchg
jmp
rorl
mov
iret
imul
arpl
adc
loop
cli
lahf
pop
or
cmp
subb
pop
pop
jecxz
cmp
lret
mov
dec
arpl
clc
push
push
wbinvd
lahf
inc
insl
add
sub
mov
push
push
icebp
jl
out
xchg
mov
pop
in
imul
leave
add
imulb
insl
and
inc
out
mov
aaa
scas
repnz
sti
es
in
and
iret
fsubrs
push
imul
add
inc
mov
jl
lock
cmovle
or
pusha
gs
fadd
popf
xchg
xor
leave
cs
mov
aaa
inc
mov
jnp
in
mov
dec
or
roll
or
inc
mov
jg
rcl
mov
test
xchg
mov
and
xor
fnsave
cmpsb
xchg
es
push
and
lcall
or
cwtl
pop
loope
subb
arpl
mov
ror
sub
adc
cmpsl
adc
push
std
std
pusha
dec
adc
push
add
sbb
movsb
jb
sbb
sub
and
mov
cmc
pop
xchg
rcll
js
ja
sub
mov
arpl
xor
movsl
mov
pusha
movsb
inc
popf
sahf
test
dec
cmc
xchg
inc
xor
adc
mov
rcll
fisttpl
inc
adc
imulb
cmp
inc
in
cmp
lahf
xchg
adc
clc
call
dec
cs
scas
add
sbb
xor
xchg
fwait
jmp
adc
gs
test
popa
or
and
mov
clc
mov
cmp
mov
push
cmp
clc
imul
out
into
mov
or
in
or
jne
fcoms
cmp
pop
inc
mov
mov
clc
pop
mov
popf
sub
leave
xorb
fcomps
lret
fnstsw
sbb
sar
xor
out
imul
and
add
pop
adc
cs
or
push
rcrl
mov
push
fs
mov
sub
xor
mov
cli
xchg
dec
loopne
shlb
sti
add
jl
inc
mov
dec
push
inc
in
jge
mov
sub
dec
and
rolb
jge
jo
push
xor
xor
adc
fdivrp
data16
lds
cmc
add
xor
jecxz
cmp
pop
fldenv
adc
sbb
pop
sbb
push
push
add
adc
mov
pop
mov
hlt
sub
out
jb
cmpsl
pop
xchg
in
test
mov
lods
mov
mov
jmp
ret
int
push
jmp
lea
inc
push
sbb
sahf
pop
mov
cmp
inc
pop
jnp
imul
ret
sbbb
loope
cmp
pop
outsl
in
sub
dec
adc
inc
lret
mov
jle
and
outsb
mov
cltd
roll
test
sbb
fdivrl
adc
lcall
pusha
and
sbb
add
ret
fsubl
add
out
jo
inc
push
xor
ja
test
outsl
dec
mov
insb
in
gs
in
cmp
cmp
test
adc
push
cmpsl
ss
dec
outsl
fistpl
bound
jns
mov
jg
ja
push
xor
dec
mov
and
inc
int3
or
add
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
jmp
pop
add
add
xor
cli
leave
jbe
jp
cld
pop
jp
mov
pushf
fldenv
mov
dec
outsl
subb
popl
add
or
pushf
or
fmulp
push
xchg
je
int
jecxz
outsb
fcmovnbe
scas
mov
add
out
mov
xor
hlt
dec
sbb
mov
inc
enter
out
mov
stos
cs
jnp
pop
or
xor
jb
sub
loope
pop
stos
outsl
repz
and
test
xlat
mov
add
xor
push
mov
jl,pt
dec
push
imul
std
scas
popf
push
daa
sbb
cmp
cmp
lock
addr16
cmpsb
icebp
insl
xor
cmp
frstor
mov
and
sub
cs
or
stos
ljmp
or
bound
loopne
xor
xor
pop
pop
loope
punpckldq
lods
rorl
lcall
ficomps
push
mov
mov
cli
sbb
les
mov
dec
ljmp
roll
loopne
in
or
adc
jl
pop
fmul
fcom
cltd
mov
inc
cmpsb
shlb
cli
ret
cmp
out
fimuls
lcall
outsl
hlt
neg
scas
jae
cmp
cmc
icebp
aad
push
xor
fildll
je
lock
push
mov
popf
fistpll
stos
inc
push
inc
pop
clc
in
js
xchg
sbb
rcll
jmp
dec
jl
inc
push
cmp
inc
pop
stc
xchg
jae
adc
xchg
lods
ret
sub
mov
xchg
fnstsw
ljmp
inc
push
or
fildll
push
sub
xor
jbe
data16
movsb
gs
adc
ja
mov
xchg
add
ljmp
imul
jo
sub
jbe
in
insl
and
and
inc
insl
push
scas
ret
inc
lock
repz
jecxz
or
dec
mov
mov
mov
test
jmp
ljmp
add
and
addl
scas
pop
into
inc
movsl
js
push
xchg
jecxz
cmp
push
or
sbb
in
fiadds
or
andl
lods
or
adc
fldcw
pop
xlat
aas
lret
pusha
push
leave
xorb
test
call
jbe
jle
rcr
rol
sub
xchg
ss
repz
aad
fnstenv
lcall
gs
cltd
fiadds
mov
pop
lret
clc
dec
mov
arpl
mov
mov
call
mov
inc
incb
jecxz
testl
sbb
loope
les
or
mov
aad
adc
or
push
in
ja
paddsw
or
cld
mov
and
enter
push
mov
push
lea
lcall
pusha
jb
scas
or
addr16
addr16
mov
fnstenv
repz
inc
les
pop
add
jecxz
push
or
mov
mov
wrmsr
adc
fidivl
xor
lret
es
sub
pop
lea
mov
xchg
shr
push
mov
push
mov
mov
iret
or
out
and
pop
jns
shlb
into
and
jecxz
pop
inc
inc
bndldx
mov
push
xchg
or
push
dec
pop
cld
daa
adc
sub
out
xor
cmp
mov
cmp
inc
mov
pop
mov
pop
ret
xlat
xchg
subb
popa
movsl
jae
dec
jb
stos
shrb
jle
daa
add
fdivr
leave
test
xchg
xor
lds
mov
mov
sbb
pop
js
cwtl
dec
dec
fwait
std
xor
inc
lret
add
filds
sub
push
lock
test
lcall
cmc
adc
push
cld
loopne
std
enter
pop
pop
xchg
in
fwait
jb
dec
mov
push
dec
add
push
lcall
daa
or
xchg
int3
pushf
loopne
ret
mov
loopne
ficoml
enter
aad
inc
pop
loop
push
jle
idivl
xlat
stos
loopne
push
jnp,pt
rorl
in
sub
xor
fadd
flds
hlt
pop
mov
fnstenv
call
or
pop
xchg
cmpsb
imul
mov
out
xlat
daa
in
sub
sub
clc
xchg
mov
cmp
and
std
dec
cmc
dec
xor
in
ficoml
sbb
cmp
hlt
push
rcrl
mov
icebp
insl
stc
add
ret
mov
jns
mov
mov
ds
loop
push
cwtl
test
lcall
jbe
outsl
cli
popf
fninit
daa
xor
push
sti
leave
call
and
mov
aam
jnp
jecxz
pop
mov
addr16
lret
testl
gs
add
and
cmc
mov
ud1
or
cmpl
lock
sub
xchg
movsl
lds
ljmp
push
adc
es
cmp
or
sub
pop
cwtl
sub
rcrl
pop
fimull
sub
gs
push
mov
imul
push
mov
cmpsl
rclb
out
mov
xchg
hlt
popa
cld
add
outsl
movsb
xchg
adc
pop
push
and
mov
out
mov
rcl
test
fcompl
scas
inc
into
loopne
xor
mov
dec
xchg
incl
sub
cwtl
stc
insl
mov
sbb
mull
cmc
add
test
inc
mov
data16
sub
mov
push
daa
cs
cmp
movsb
icebp
stos
int3
mov
data16
cmpsl
mov
sub
test
cld
or
xchg
mov
adc
inc
call
xor
jb
add
mov
fldl
daa
pop
ljmp
or
lods
sub
leave
jecxz
pcmpgtd
inc
mov
pop
hlt
dec
gs
push
push
je
pop
mov
pusha
fstpt
mov
inc
sub
addr16
adc
cli
sbb
iret
jne
or
scas
fwait
cmpsl
sbb
mov
ja
push
faddl
roll
push
test
imul
mov
dec
mov
and
imul
imull
inc
std
pushf
out
aad
jmp
mov
es
lods
leave
cmc
sub
jg
inc
in
test
add
cli
push
decl
call
sub
dec
fs
xchg
mov
incb
xorb
mov
stc
sarb
stos
pop
sub
cmpsb
leave
mov
popf
ret
orb
ss
in
jno
sbbb
and
call
jecxz
stc
je
cli
popf
out
aaa
mov
push
jmp
lret
das
cmpsb
push
pop
push
out
bound
sbb
dec
iret
cs
jp
pushf
test
test
sub
add
incb
mov
push
aam
add
dec
push
jmp
push
inc
adc
cmpsl
jb
jecxz
shrl
imul
sub
stos
jge
mov
lods
arpl
adc
mov
sub
xor
jg
cmp
jl
add
adcb
cwtl
daa
minps
or
test
shufps
push
push
pop
pop
les
add
dec
outsb
mov
aad
sarb
lock
xchg
lret
sahf
xor
push
lds
dec
aaa
pop
cmp
jecxz
or
or
sbb
bound
fdivl
pop
push
pop
pop
xchg
ljmp
ljmp
fucom
push
orl
push
int
in
push
mov
xchg
pop
notl
sti
data16
cmc
add
stos
bound
fistps
negb
jge
jb
xchg
sbb
dec
cld
fwait
lahf
movsl
rorb
stos
loopne
xchg
or
movl
push
cmp
stos
repz
push
xchg
je
dec
jmp
or
mov
lret
call
push
std
fadds
cwtl
inc
push
jg
xchg
in
clc
mov
adc
sub
adc
jmp
mov
ds
dec
xchg
inc
cmp
xor
mov
adc
inc
push
call
or
loope
leave
push
bound
push
daa
ljmp
lea
in
mov
xor
sti
pop
pop
repz
mov
enter
cli
les
dec
add
mov
pusha
cmp
repnz
lea
mov
mov
xor
sarb
inc
inc
aaa
sbb
sub
xchg
hlt
outsl
add
aam
test
loopne
push
lods
adc
cld
hlt
sbb
sbb
cmc
mov
jne
and
adc
notb
sbb
xor
push
pop
imul
add
mov
mov
ja
les
cmc
push
iret
nop
and
int
pop
lods
xor
out
mov
xchg
pop
lods
test
filds
xor
pop
loope
and
lret
mov
jb
out
xlat
test
gs
lock
jg
js
jbe
or
push
outsb
mov
jmp
dec
adc
shlb
popa
xor
jg
gs
mov
xchg
bound
and
push
xor
add
call
bound
push
cmp
out
pushf
cwtl
adc
lock
les
ret
mov
inc
lods
fs
es
xchg
xor
xlat
fwait
sub
std
xchg
lahf
push
jge
jge
xor
jge
mov
jg
sbb
fildll
shr
movsb
scas
rol
bound
xor
jp
xor
out
inc
pop
cmp
cmp
dec
jg
xchg
mov
incb
rcll
movsl
inc
mov
and
add
and
mov
ftst
aad
jbe
mov
ss
rorl
or
dec
xchg
lcall
dec
mov
out
inc
and
sbb
mov
int
mov
adc
pusha
imul
mov
xor
inc
mov
cmc
fs
or
je
xchg
inc
gs
mov
js
xchg
insb
cs
repz
lds
jne
call
push
cmp
out
add
jns
adc
js
pop
xchg
mov
dec
int3
cmp
or
xchg
dec
mov
ffreep
jmp
rcrl
xor
aas
xchg
adc
ja
pop
test
pop
jb
das
push
jle
mov
mov
fimull
je
repz
push
pop
aas
mov
inc
test
fsubl
fildll
fisubrs
in
fisubrl
dec
inc
cmp
mov
dec
jg
aaa
push
sbb
scas
hlt
jne
in
mov
push
je
fbstp
into
mov
mov
mov
pushf
dec
lret
jb
loope
aaa
pop
cmp
push
stos
lods
sub
cwtl
cmp
jnp
jno
insl
xchg
ret
xor
cmp
xor
imul
cltd
inc
dec
or
mov
jnp
dec
ljmp
pusha
int3
imul
sarl
inc
hlt
sbb
xchg
leave
fxrstor
ja
in
push
out
les
or
sbb
sbbb
pop
mov
rorl
cwtl
mov
mov
test
data16
addb
xor
and
in
fisubrl
push
push
jns
sarb
xchg
fmulp
sub
dec
push
add
mov
mov
or
pop
pop
push
pop
sub
fst
push
jbe
out
mov
add
pusha
sbb
adc
jmp
and
stos
cmc
sub
jge
lcall
rolb
or
movsb
cmp
imul
fisttps
adc
call
imul
adc
dec
pop
xchg
fsubs
push
lcall
lea
sbb
fisttpl
inc
nop
pop
movsb
mov
jle
cmpsb
mov
xlat
mov
and
lret
pop
arpl
stos
pusha
enter
jle
mov
movsb
mov
push
add
popf
pop
cmp
test
mov
mov
jp
mov
pop
sarb
sub
loope
leave
mov
mov
scas
ljmp
out
inc
mov
gs
loopne
pop
fsubl
rcrl
add
ret
loop
pop
dec
repnz
push
lock
push
test
dec
inc
mov
insl
lret
jle
cmp
mov
shll
or
adc
daa
loopne
in
or
cwtl
push
ret
outsl
sti
xor
dec
aaa
add
loop
add
lahf
popa
cmp
pop
dec
lds
sbb
mov
adc
ret
mov
pop
add
push
cwtl
cmp
and
mov
mov
mov
cmp
mov
test
or
add
sbb
or
xchg
jnp
jae
int
push
nop
loopne
dec
shll
or
pop
outsl
mov
and
dec
sarl
cld
iret
pop
movsb
adc
mov
das
xor
cmp
push
mov
in
nop
or
inc
jne
xor
cmp
add
stc
adc
scas
js
call
icebp
insl
int3
sti
in
inc
or
lret
adc
or
pop
add
aam
xor
jnp
sbb
cltd
in
adc
adc
ficompl
shrb
and
cmp
push
enter
popa
add
mov
outsb
and
xchg
and
mov
popf
popf
add
outsl
test
sbb
shrl
je
and
or
xchg
fdivr
insl
pop
xlat
lods
cmpsb
cmpsl
xchg
fmuls
les
mov
push
cmp
push
js
lods
int
jo
inc
cwtl
ficomps
mov
dec
stos
xor
inc
cmpsb
mov
cmp
lret
outsl
cmp
mov
fimull
sarl
push
jne
sub
ficomps
mov
inc
pushf
dec
out
inc
jns
xlat
test
scas
add
sub
adc
push
nop
push
loope
call
test
lret
js,pn
push
gs
pusha
idivb
in
push
test
mov
jne
fmul
cltd
cmp
andb
lods
int3
ljmp
pop
add
xor
jo
mov
ljmp
std
jne
pop
clc
ror
lods
xor
ret
scas
mov
jg
cmp
jg
mov
inc
and
sbb
int
mov
hlt
mov
std
xor
bound
pop
movsb
mov
sti
push
scas
cmp
ret
push
fsub
pushf
or
fxch
xor
ljmp
mov
xchg
sub
ja
sbb
cmp
mov
xor
sbb
push
mov
sar
cmp
xor
or
enter
mov
mov
push
mov
stos
inc
and
add
movsl
mov
push
mov
jae
ja
dec
mov
cmp
xor
mov
sbb
loope
push
out
fdivl
mov
sti
mov
jl
jmp
cltd
hlt
std
outsl
and
data16
xlat
pop
ret
lahf
jmp
popf
pop
sbb
lahf
jnp
dec
and
insb
out
out
scas
ss
mov
cmp
jns
bound
xor
adc
inc
in
dec
xchg
push
xchg
add
les
push
mov
repz
lds
cmp
dec
cli
and
jbe
mov
lods
imul
inc
sti
mov
sbb
mov
mov
filds
lods
cli
mov
fadds
shrl
imul
jg
adc
jecxz
or
fs
es
and
hlt
fsubl
mov
test
pop
sbb
loopne
add
das
xchg
mov
jg
adc
push
mov
and
xor
adc
mov
jge
pop
movsl
out
lea
out
xchg
xlat
add
cltd
mov
lds
sub
mov
push
dec
pop
iret
jge
faddl
shlb
adc
outsl
popa
xor
out
lahf
push
stc
int3
pop
xor
push
push
insl
xlat
out
pop
dec
out
inc
enter
cmpsl
mov
std
ds
dec
mov
push
in
and
xor
mov
pop
cmp
pushf
nop
push
popa
inc
movsb
inc
ds
push
aaa
stos
outsb
out
lret
xchg
gs
add
add
pop
inc
rcll
movzwl
add
xor
mov
jno
cmc
and
pushf
popa
scas
insb
idivb
mov
loopne
xchg
ret
jbe
push
adc
xchg
xchg
jnp,pt
pop
xor
adc
lods
cmpsl
insb
and
int3
cltd
push
out
inc
dec
arpl
nop
inc
daa
jo
pop
outsb
rolb
icebp
xor
cmp
jo
mov
mov
bnd
and
mov
xchg
movsl
jmp
adc
jbe
iret
pop
notl
rolb
or
shrb
mov
cmp
xor
sbb
stos
nop
repnz
mov
pop
add
jecxz
mov
sub
rolb
leave
ljmp
cmp
pop
pop
les
hlt
mov
mov
sub
mull
xchg
stc
mov
mov
sub
stc
cmp
repnz
or
add
cmc
cvtps2pi
xor
jno
inc
test
xor
mov
out
inc
out
pop
pop
xchg
movsl
add
jl
cltd
cmp
out
movl
add
inc
mov
je
cs
pushf
outsb
adcl
das
shrl
dec
push
cmp
imull
sbb
movsb
mov
mov
mov
xlat
fwait
pop
loop
int
jp
lret
mov
mov
nop
mov
ss
scas
inc
cmc
mov
push
andl
or
out
push
push
fs
or
out
nop
and
dec
fidivs
mull
push
cmc
push
outsl
std
pop
pop
add
push
inc
std
outsl
lcall
andb
mov
adcl
stos
xor
jge
pop
adc
xlat
aam
mov
sbb
mov
mov
sub
dec
loop
enter
sub
pop
pop
cs
cs
popa
adcb
push
hlt
lret
gs
xchg
add
test
mov
bound
ja
mov
mov
dec
lods
outsl
adc
cwtl
adc
cmp
repz
push
sbb
js
push
cs
adc
fwait
push
in
fnstcw
fs
adc
sub
enter
push
or
lods
insl
int
test
fsubp
sub
fdivrs
cmp
dec
push
pop
pop
xor
xchg
adc
popa
or
popf
shr
dec
aad
or
fcmove
test
enter
fwait
rorl
dec
jns
clc
gs
jl
mov
int
push
xor
pop
adc
jle
out
mov
out
xor
sub
mov
call
add
hlt
xchg
xor
mov
xchg
rorl
outsl
sbb
push
mov
pop
sub
test
fidivs
mov
test
dec
rcr
lahf
into
pop
cmp
subb
xchg
sub
stos
push
outsb
js
xor
pop
pusha
aaa
pop
mov
fdivl
lods
mov
xlat
daa
shl
shrb
push
cmpsb
and
sub
lds
xor
stos
and
fcomps
movsl
test
popf
jle
sbb
mov
mov
aam
xchg
pusha
bound
arpl
imul
shl
pop
mov
pusha
rorl
jmp
fcomps
cmp
jae
pop
bound
outsl
iret
pop
daa
xchg
fidivl
imul
les
pop
pop
lret
cmpsb
pop
mov
mov
ds
lds
mov
ljmp
mov
int3
scas
xchg
outsl
xchg
out
push
sub
fsubrl
xchg
aaa
adcl
jno
sbb
xchg
jae
pop
repz
icebp
arpl
mov
test
cltd
mov
mov
pusha
push
je
mov
or
fistps
mov
jae
and
adc
push
jecxz
pop
pop
lret
outsb
out
rclb
std
stc
jge
mov
dec
mov
movsb
dec
scas
test
mov
mov
outsl
arpl
cmpsl
add
in
push
mov
pusha
nop
sub
push
jo
iret
push
xor
jns
push
xchg
mov
xor
sti
fidivl
fisubs
dec
cmp
pop
adcl
cmp
mov
jns
fistpll
out
mov
push
mov
cmp
and
aad
add
mov
int3
std
fdivrl
mov
sti
cmpsl
clc
and
xor
sub
incl
or
roll
movsl
and
adc
push
out
adc
mov
mov
bound
dec
add
sarb
mov
in
ds
jo
xchg
out
push
cwtl
mov
int
inc
lret
pushf
sub
adc
sbb
idiv
insb
data16
inc
std
mov
xchg
shl
xchg
ja
adc
and
ja
das
jp
dec
cmp
xor
mull
stos
pop
imul
pop
loopne
push
std
in
push
push
xchg
jecxz
jne
xor
stc
into
pop
cmpsb
out
jmp
pop
outsb
lock
fidivrs
bound
addr16
cmp
stos
add
jp
mov
jecxz
bound
ret
stc
test
out
in
in
add
in
ds
xorl
aad
sbb
adc
das
into
cmp
dec
xor
lahf
sbb
daa
jecxz
int
insb
xchg
inc
push
jg
pop
mov
push
shlb
shl
and
push
aas
movsl
es
dec
hlt
jg
fnsave
in
jmp
xchg
test
push
lods
mull
test
pop
sbb
pop
mov
add
and
xlat
push
lret
push
cwtl
cltd
mov
bound
inc
out
inc
cmp
neg
sbb
pop
popf
or
xor
data16
push
dec
loope
add
adc
movsl
xchg
sti
jg
jb
aas
mov
ja
loopne
jmp
testb
push
rclb
or
add
mov
xchg
sbb
add
cltd
aad
ficompl
jns
ljmp
or
pop
jb
cmp
out
fsts
das
cmp
stos
mov
aas
int3
mov
pop
or
mov
jbe
adc
sbb
movsl
out
mov
push
dec
addl
mov
call
xchg
clc
stos
add
ret
into
jp
jns
lea
pop
pop
fisubrs
lret
mov
push
cs
jnp
fs
or
js
ja
push
cltd
popa
jg
sub
popa
sbb
lahf
push
inc
cmc
or
shlb
adc
lods
jae
xchg
mov
push
shll
addr16
fdivrs
cmpsb
cltd
mov
repnz
or
mov
jnp
add
sub
cld
ss
lret
jns
or
repz
sti
je
loop
pop
hlt
mov
fs
daa
insl
data16
addb
adc
data16
sbb
add
pop
mov
and
inc
pop
es
clc
jb
inc
sbb
xchg
mov
xchg
rol
or
add
xchg
jbe
sub
jecxz
cmc
push
fdivrs
fmull
adc
jecxz
add
test
jge
hlt
pop
ret
fcmovu
add
jno
fiadds
mov
sahf
dec
idivb
arpl
and
std
rcr
test
cld
sbb
rol
add
add
jmp
add
mov
cmc
jle
outsb
lods
int3
or
dec
adc
push
xor
cmp
push
inc
shl
out
push
jp
lahf
cmc
push
shlb
rorl
add
fistpll
sub
in
sahf
fnsave
ret
mov
shrl
in
aaa
out
jp
fcomi
int3
xchg
jmp
leave
adc
fdecstp
pop
movsb
imul
test
lds
je
xchg
push
push
xor
mov
std
nop
je
mov
jmp
xorl
subl
mov
jns
les
into
leave
ljmp
hlt
jb
sarl
test
dec
push
mov
mov
fldt
mov
xor
adc
push
test
jge
mov
push
jge
es
rorl
adc
sbb
imul
xchg
repnz
dec
cmpsl
arpl
movsl
lahf
ret
adc
xchg
push
fisubrl
sbb
adc
cmp
dec
jb
inc
mov
mov
out
aas
cwtl
cmpl
xchg
mov
xchg
mov
add
ds
movsl
jne
popa
test
push
lahf
fildl
add
dec
arpl
pushf
es
adc
cld
xor
adc
mov
lahf
in
out
ljmp
movsl
sbb
neg
jl
shlb
jo
cmp
mul
xchg
cmpsl
lea
pushf
or
or
lods
sbb
lock
enter
mov
cmp
aaa
sbb
daa
movsb
out
add
mov
jno
pop
or
add
loopne
enter
pop
pop
mov
xchg
xor
or
std
cmpl
std
repnz
mov
push
out
jle
jae
call
pushf
test
cmp
mov
imul
xorl
scas
iret
mov
sbb
mov
sub
iret
fistpl
lock
fisubl
insb
ds
push
xor
popa
clc
flds
push
sahf
xchg
xor
cmpsb
pop
ffreep
pop
push
mov
jp
repnz
push
sahf
xor
dec
sahf
hlt
scas
dec
mov
adc
xchg
test
cmp
int
repz
out
push
and
dec
in
js
cmp
mov
pop
cmp
and
mov
rcrb
jne
cwtl
in
jnp
roll
push
pop
fisubs
jns
les
repz
fucomp
ds
fldl
push
sub
dec
fsts
mov
fcoms
ss
or
sbb
fisttps
push
add
test
das
add
stc
jnp
clc
mov
pop
out
imul
rcl
pop
xchg
adc
cld
mov
stos
inc
adc
rep
cmp
pusha
out
shlb
out
out
sub
mov
jno
xchg
shlb
cli
pop
sub
das
pusha
sub
inc
sbb
stc
mov
lds
jno
out
pusha
pusha
push
cwtl
push
inc
and
in
pop
pop
popf
mov
nop
lods
mov
popf
xorl
fmul
sub
xchg
xchg
cmp
mov
pop
or
pop
fcomps
mov
push
push
adc
mov
hlt
in
leave
jbe
out
pop
add
stos
stos
mov
add
lds
push
aam
sub
sub
fldt
dec
mov
add
test
or
mov
sbb
cs
cmp
shr
sub
sbb
dec
xchg
int3
and
jo
jge
insl
xlat
jmp
mov
daa
or
out
sahf
or
sub
xor
jbe
sbb
int3
lret
scas
test
sbb
push
xor
dec
testb
cmp
inc
adc
sbb
aad
inc
repnz
std
rcrb
test
or
sub
je
daa
xchg
dec
cmp
jo
in
fs
int
lds
stmxcsr
insb
popf
push
pusha
das
popw
push
add
imulb
out
outsl
push
lea
add
hlt
xor
mov
add
gs
or
addl
sub
leave
ljmp
fidivrs
sbb
test
xor
aaa
insl
xchg
daa
jbe
inc
pop
stc
std
xchg
sub
jo
jbe
sar
adc
xlat
adc
jae
sbb
cltd
iret
test
add
icebp
adc
sbb
cld
jp
jns
or
jmp
test
cltd
xchg
ja
inc
push
loopne
pushw
daa
push
or
iret
mov
enter
outsb
mov
inc
push
sub
and
mov
into
add
hlt
pop
stos
ficoml
adcb
cmp
int
mov
in
sbb
orl
ss
xchg
mov
add
mov
arpl
pushf
jl
inc
and
cmp
insb
xor
lods
loope
jb
cltd
mov
loop
fcoml
add
xor
adc
shrl
sub
jmp
shl
push
jl
ficoms
shlb
mov
push
jb
mov
xchg
inc
iret
add
fisubrs
or
cltd
lock
ret
sub
push
mov
lods
imull
cmp
aad
pop
cmp
mov
out
inc
imul
fadds
and
pushf
jp
and
xor
jl
out
xchg
lea
push
xchg
and
dec
mov
xchg
mov
lock
add
mov
mov
push
add
hlt
mov
sbb
cmp
xchg
bnd
subb
mov
sbb
cs
repnz
loope
jecxz
movsb
rcr
cmc
inc
ds
pop
jle
data16
aaa
pop
js
add
adc
jp
sub
adc
push
mov
cmpsb
sarl
data16
shll
jmp
or
into
pop
jne
ret
fnstcw
pushf
int3
push
and
arpl
jno
sbb
push
stos
test
lock
adcb
xchg
xchg
mov
cs
mov
lea
out
inc
fwait
mov
xchg
dec
mov
outsb
jnp
sarl
mov
int
lock
out
in
xchg
mov
aam
arpl
mov
cmp
xchg
call
cmp
sub
xor
add
push
jb
cmp
xchg
in
fnstcw
sbb
in
pushf
cld
in
imul
ds
cmpb
xchg
xchg
roll
fwait
and
push
pop
hlt
push
xor
es
bound
ret
sbb
push
rclb
lock
mov
push
cs
adc
adc
cmp
subb
or
data16
jb
lret
call
mov
insl
pop
scas
mov
sbb
popa
xchg
mov
inc
mov
imul
xlat
addb
mov
pusha
popl
sti
fcomps
popa
pop
ret
cmp
push
inc
ja
lret
insl
lock
je
sbb
jnp
mov
insb
lahf
sbbb
mov
shll
popf
xchg
dec
aad
dec
mov
out
gs
pop
or
aad
jae
ret
andb
sti
test
ret
cmpsb
cli
and
inc
je
scas
add
push
lret
sarl
jbe
into
aas
add
sub
push
mov
mov
in
loop
fcomp
insb
lock
lds
enter
xor
mov
out
jne
dec
sbb
mov
and
lds
movsb
in
jle
inc
repz
mov
xchg
cli
aam
inc
mov
imul
iret
pop
pop
pop
sbb
cmc
cli
mov
xor
fstps
jp
mov
sub
outsl
jl
mov
in
sub
ss
xchg
pop
xchg
outsb
outsl
pusha
stc
push
inc
cmp
push
jp
adc
jns
add
push
adcl
das
lods
fstps
jmp
push
push
mov
mov
ret
popf
scas
push
sahf
or
leave
xorb
fisubl
aam
inc
pop
ret
mov
push
clc
mov
mov
mov
jmp
and
notb
xchg
dec
in
jnp
in
mov
adc
cld
pop
jp
lcall
dec
lahf
push
data16
notl
jbe
adc
mov
jae
aas
ljmp
adc
or
and
popf
rcrl
test
jg
insb
lods
pusha
mov
notl
ret
add
add
movb
lods
xor
mov
sbb
hlt
adc
scas
mov
push
out
lods
popf
mov
ret
fisubrs
fcomps
and
cwtl
mov
pop
and
push
mov
mov
lods
and
and
cmp
or
and
cld
xchg
in
pop
ljmp
pop
xchg
jo
outsl
inc
push
es
data16
xchg
icebp
or
ss
popa
jns
fcompl
arpl
mov
fsubrs
cwtl
cltd
aad
mov
mov
mov
es
addr16
mov
call
mov
bnd
inc
jne
cmpsl
scas
push
mov
pop
pop
push
or
sti
xchg
xchg
es
cmpsl
pop
lods
lahf
mov
cmpsl
push
xor
add
repnz
sbb
es
inc
inc
movsl
mov
insb
cmpsl
push
nop
pop
mov
lret
mov
adc
push
push
daa
and
bound
rclb
xchg
mov
cmp
xchg
mov
and
lahf
push
push
add
pop
adc
dec
jl
and
mov
das
mov
jo
jmp
cmp
out
das
mov
mov
fisttps
cmp
aad
fildl
fwait
dec
xchg
cmpsl
xchg
push
or
fsubrl
rcl
and
mov
fildl
mov
test
aaa
sbb
sub
aaa
or
iret
add
pop
inc
fmul
aam
loopne
nop
and
lahf
xchg
out
fcomip
sbb
push
sbb
sub
pop
mov
push
popa
xor
xlat
mov
dec
sahf
push
sarl
ljmp
push
popl
push
les
out
leave
data16
mov
mov
gs
pushf
adc
jne
and
push
mov
shrb
mov
lock
jp
pop
sarb
in
push
adc
sub
scas
sbb
jl
push
mov
push
adc
xchg
mov
mov
or
std
or
roll
es
icebp
lret
add
dec
gs
cltd
mov
add
call
inc
movsb
jg
stos
daa
insl
in
xchg
mov
pop
mov
jb
jae
sbb
lcall
mov
cmp
mov
jl
and
sbb
sbb
jp
into
sub
jnp
lock
fs
xor
inc
jnp
mov
das
or
inc
ret
sbb
ss
inc
aaa
jg
clc
adc
lods
or
scas
push
mov
loopne
shlb
mov
mov
jmp
push
fbstp
aad
cmp
inc
stc
sbb
hlt
adc
xor
ljmp
push
movsl
insl
inc
icebp
loopne
stc
popa
iret
ficoml
mov
lea
rol
mov
push
mov
dec
mov
popf
stos
pushf
fsubr
sub
aaa
bound
lahf
hlt
xchg
lahf
jge
push
lret
push
stc
out
mov
add
jb
loop
stc
fstl
repnz
xchg
xor
adc
adc
xchg
dec
gs
arpl
fadds
inc
cmpsb
pop
lcall
dec
lcall
loop
test
lock
fisttpl
mov
add
or
ret
mov
leave
sahf
insl
je
pop
lds
push
mov
loopne
lds
pop
mov
sbb
jnp
fdiv
jb
std
cld
lods
hlt
xchg
dec
aam
xchg
mov
or
cmp
mov
out
push
subl
xchg
popl
and
inc
ret
adc
lea
in
xchg
out
dec
imul
sti
sar
sub
pop
out
loope
stos
jp
xchg
xor
mov
lahf
pop
in
xor
and
shrb
push
inc
sbb
add
dec
js
insl
xchg
lea
dec
lods
push
sarl
sbbb
cltd
out
popa
adc
iret
xor
dec
mov
pop
xor
int3
adc
jg
aas
je
cs
loop
fincstp
test
push
and
dec
in
sub
data16
pop
mov
sbb
test
sbb
js
inc
test
cmpsb
pop
leave
das
xor
and
jmp
xchg
nop
jmp
mov
pop
outsl
add
sar
test
ret
jecxz
cmp
cmp
leave
push
out
lock
mov
dec
lret
popa
push
testb
jmp
out
cltd
int3
inc
and
ljmp
fcmovnb
negb
xchg
sub
push
mov
call
cld
in
imul
xlat
inc
cmpsl
lret
mov
xchg
sti
or
xor
adc
adc
cmp
insb
pop
pushf
cli
movsb
rcl
xor
adc
push
mov
pop
mov
in
fdivl
dec
inc
sbb
pop
imul
iret
insl
icebp
in
mov
cltd
icebp
xor
cmpsl
cs
inc
popa
ss
fistpll
loope
pop
lret
orb
rorb
aam
popa
jb
daa
mov
adc
sub
adc
or
inc
sbb
jo
push
push
xchg
setge
cld
out
stc
dec
jb
pushf
addl
mov
inc
mov
xchg
into
adc
stos
nop
jns
inc
or
push
mov
or
insl
daa
mov
loopne
or
aam
enter
jb
js
sub
enter
clc
test
daa
lods
sub
cltd
out
sarb
pop
fdivrl
lods
pushf
imul
jno
test
mov
movsl
mov
push
decb
or
nop
pop
mov
lea
push
fsubrp
pop
xorb
xor
xor
sbb
dec
pop
stos
cmp
out
pushf
sub
jnp
mov
sahf
int3
jp
stos
iret
aad
hlt
aas
rclb
adc
lds
mov
cli
pop
mov
xlat
push
cmpsb
mov
lods
mov
lahf
imul
inc
loop
sbb
popf
inc
in
push
aad
mov
dec
testl
pop
xor
adc
mov
out
or
shlb
shll
das
ja
pop
jge
sub
xchg
and
es
jno
cmp
adc
popf
adc
mov
and
out
lea
aaa
fcoml
popf
in
and
rorl
dec
into
fcompl
xchg
xchg
js
mov
mov
addr16
nop
inc
inc
out
adc
xchg
lret
aad
fcoml
pcmpgtw
pushf
lret
adc
xor
cmp
inc
push
ret
lret
rep
lcall
in
int3
inc
cmp
mov
popa
xchg
and
inc
cwtl
sar
mov
xchg
mov
pusha
dec
pop
mov
nop
popf
adc
out
and
xor
ss
dec
jae
jl
pop
pop
add
xchg
cmp
insl
pop
sti
out
test
stc
sbb
sub
int3
aaa
aas
mov
and
sub
xchg
or
mov
ror
lcall
outsl
sbb
inc
mov
or
stc
shlb
stos
push
inc
inc
les
mov
pop
test
add
insb
cmp
out
xor
mov
insl
sti
loope
adc
rep
mov
in
test
adc
clc
stos
test
lret
pop
jge
adc
in
outsl
sub
adc
test
sbb
je
inc
clc
addb
test
aad
cmc
decb
repz
xchg
roll
fwait
adc
pop
push
sub
push
push
mov
or
cmp
pop
ja
cld
mov
add
add
orb
push
pushf
leave
adc
idivb
test
jge
sub
cmpsb
pop
and
pop
sbb
mov
fdivs
pop
bound
jne
nop
repnz
or
adc
stc
in
rcrb
scas
andb
insb
lcall
ljmp
in
loope
xchg
add
leave
leave
shrl
icebp
push
aaa
ja
es
add
cmpb
xlat
fstpt
es
cmp
adc
cli
inc
add
ja
push
mov
cmp
dec
shlb
daa
jmp
cmp
ror
popa
pop
push
imul
movsb
jge
notl
mov
and
lock
pop
inc
ror
mov
jo
xchg
adc
xchg
rcr
mov
xor
fistpll
push
inc
data16
repz
pop
fistps
inc
xchg
in
xor
out
das
roll
lret
cmc
jmp
mov
addb
lods
add
sbb
push
mov
and
loope
xchg
icebp
sbbl
dec
int
mov
mov
pop
lcall
sbbb
sti
jns
jle
push
jl
inc
fs
enter
jmp
or
cmp
fistl
addr16
add
cltd
fsts
cmp
push
mov
hlt
adc
pusha
push
cmc
fs
repz
add
add
in
lret
into
jne
jge
loope
or
cmp
xchg
xchg
dec
xchg
aam
aas
pop
scas
dec
cmp
imul
cmp
mov
test
pusha
xchg
mov
sbb
mov
mov
sbbl
cmc
enter
neg
imul
stos
mov
xor
mov
fwait
imul
mov
mov
mov
cli
xor
loope
mov
repz
roll
orl
pusha
cmp
fmull
ret
push
adc
iret
je
cwtl
pop
mov
iret
leave
adc
sub
addl
or
cmp
cmp
loope
mov
mov
dec
pop
into
testl
mov
jl,pn
jmp
mov
gs
nop
aad
adc
aaa
cltd
push
inc
mov
inc
lea
gs
aas
outsb
sub
jns
iret
rolb
call
call
aam
insl
sbb
adcl
sub
addb
in
ljmp
jnp
sbb
je
push
xor
outsb
adc
mov
orl
pop
fwait
lods
fbstp
addb
or
out
mov
and
xchg
dec
cmp
adc
xchg
int3
jae
cmp
add
and
push
loope
xchg
loope
ljmp
rclb
nop
dec
out
or
test
pop
add
inc
jne
lcall
rol
cmp
dec
popa
mov
scas
jnp
in
addr16
popf
rcl
or
mov
es
push
movsl
or
es
cmpsl
cltd
push
shlb
test
jg
ret
dec
pusha
or
sbb
lahf
lea
sub
int
cs
mov
movsb
dec
mov
in
cmp
clc
cmc
pop
rolb
mov
and
and
lahf
fdiv
cmp
push
repz
cmpsb
popf
push
xor
inc
pushl
shlb
mov
mov
fxch
inc
inc
xchg
jl
or
test
fisubl
lea
sub
enter
sub
mov
mov
sbb
pop
loopne
shll
test
xchg
insl
jp
jmp
mov
and
mov
mov
pop
cmp
inc
lea
sub
sub
xchg
fstl
daa
push
jne
fisttpl
loopw
shll
leave
nop
xchg
fsubrs
dec
inc
je
and
sbb
gs
mov
or
insl
pop
int
std
mov
hlt
lcall
pop
cmp
adc
flds
cld
mov
popa
sbb
fisubs
add
insb
and
pusha
xor
mov
repz
mov
push
mov
sbb
cmp
or
or
sarb
push
mov
out
std
and
fdivrs
mov
insb
xchg
fdiv
orl
push
iret
jno
cmp
adc
test
popf
adc
int3
int3
xchg
or
or
mov
push
mov
testb
sbb
arpl
and
stc
push
icebp
sbb
adc
xor
xchg
mov
in
push
push
lods
push
cmp
ljmp
pop
adc
mov
aas
bound
sub
pop
ret
sub
mov
or
mov
push
outsb
xchg
or
adc
mov
iret
adc
rol
movsb
loop
mov
dec
inc
repnz
arpl
lds
sbb
repnz
lret
cld
or
lcall
std
xor
insl
pop
scas
pop
ja
mov
lods
dec
insb
cmpb
shll
dec
mov
jno
jno
mov
sbb
loope
mov
sbb
sti
cmp
aam
inc
popa
mov
into
xchg
fsubrl
sti
mov
jp
lcall
fnstcw
jb
cld
insb
repnz
ret
cmpsl
icebp
inc
mov
jo
push
jae
dec
daa
movsb
mov
jno
and
loop
inc
das
fidivrl
dec
sahf
shlb
outsl
mov
shr
ss
bound
xchg
or
xchg
lret
rorl
js
dec
loopne
or
shl
test
push
jmp
sbb
sbb
or
xchg
jp
imul
lods
xor
mov
sarb
mov
mov
les
pop
add
clc
xor
and
push
dec
out
add
frstor
jo
jne
jns
xor
or
push
in
sbb
ljmp
xchg
sbb
and
push
sub
ja
mov
or
add
adc
inc
mov
mov
add
sub
add
fcomps
fs
push
lock
fcompl
icebp
push
enter
enter
outsb
test
lea
xchg
shr
cmp
mull
scas
in
ss
popa
mov
inc
cmp
jp
push
movsl
fbstp
fbstp
sub
fcompl
out
lods
rclb
hlt
sbb
mov
rorb
adc
pop
and
out
fwait
pop
addb
xor
push
xor
xchg
repz
loop
out
xrelease
pop
ret
test
inc
jecxz
mov
jb
inc
leave
stos
mov
or
std
cmpsl
or
push
jns
push
push
gs
movsl
adc
mov
cld
jne
cmpsb
push
add
into
in
inc
out
out
dec
cmc
jp
push
js
mov
lds
pop
mov
in
inc
pop
cmp
or
pushf
sub
mov
clc
fld
aad
je
ja
jle
inc
je
imul
outsb
mov
repz
repnz
and
jb
pop
or
and
and
add
pop
mov
sub
pop
xchg
inc
mov
mov
icebp
loope
mov
fbld
sti
xchg
ret
stc
fidivl
pop
dec
xchg
shl
pop
out
pop
pop
insl
adc
fwait
adc
addl
inc
mov
mov
int3
fcoml
mov
scas
sarb
stos
outsl
dec
pop
sbb
mov
aas
pop
push
mov
add
dec
sbb
stos
stos
rcll
loop
fldt
ror
xor
xchg
sbb
jo
pop
je
je
clc
lret
scas
iret
xlat
lock
sub
scas
xorb
jns
lcall
xchg
jmp
pop
jg
call
mov
clc
movsl
push
inc
icebp
mov
pop
mov
sub
popf
imulb
cmp
les
out
cmp
lahf
repz
fadd
push
out
fsubrs
out
mov
lcall
or
xchg
jl
ja
add
sbb
roll
test
sti
cli
loopne
sbbl
sub
das
push
adc
add
fs
mov
lret
testb
mov
andb
js
fcmovu
xchg
sbb
cmpl
int
dec
iret
pop
xor
test
dec
negl
add
jae
js
lds
insl
jg
in
sub
sub
in
pop
dec
test
jl,pt
shll
aam
arpl
ret
push
sti
adc
daa
aaa
adc
fadds
outsl
inc
ret
and
inc
stc
dec
add
inc
push
out
jo
stos
lret
lcall
add
xor
cmp
sbb
add
xchg
lea
cmpsl
loope
and
fucomp
sub
outsb
add
dec
push
test
mov
sbb
fiaddl
fnstenv
jl
xchg
dec
pop
sub
addr16
daa
inc
pop
aaa
inc
inc
repnz
dec
and
sbb
movb
jb
verw
movsw
int3
xchg
cmp
sub
mov
inc
in
inc
xor
dec
pop
mov
movsb
loop
shll
cmpsb
add
mov
jle
sub
pop
imul
lods
nop
mov
fdiv
mov
shll
inc
add
push
lret
or
in
pop
adc
out
dec
imul
fstpl
and
pop
xor
push
loope
pop
outsb
sub
mov
stc
cmpsl
or
mov
loopne
in
push
adc
hlt
mov
or
cmp
mov
dec
aad
jmp
dec
xchg
arpl
in
xchg
xchg
imul
adc
jecxz
aad
mov
stos
cmp
or
ja
fcmovbe
scas
jae
shrl
sti
push
lock
out
aas
lock
out
arpl
je
nop
mov
dec
setl
imul
mov
jle
mov
pusha
mov
into
test
mov
xor
mov
and
pop
and
and
jg
cld
iret
stc
outsl
xor
sub
in
lea
add
out
xor
mov
lahf
stos
push
cmp
or
loop
mov
cmp
js
out
shl
pop
ljmp
sbb
icebp
lea
stos
mov
sub
in
loope
pop
mov
pop
mov
push
push
popa
arpl
out
or
lods
mov
fcomps
jge
cmpsl
mov
in
dec
movsl
es
cld
aad
lret
add
push
stos
icebp
add
mov
or
rep
fistl
cmpsb
dec
rolb
sbb
lods
pop
out
jp
sub
jle
pop
out
push
push
cwtl
cld
sti
push
jge
cs
decb
imul
lea
sub
shl
xchg
imul
mov
or
push
mov
mov
mov
and
jl
mov
sahf
sbb
push
ja
dec
pop
pop
rcll
jo
test
jmp
movsb
push
scas
lods
movsb
pusha
in
mov
mov
xchg
cmc
inc
mov
dec
push
insb
sar
push
clc
pop
push
cli
push
rorl
pop
mov
cmp
ds
and
fimull
fbstp
and
push
mov
repz
test
mov
add
jecxz
mov
mov
push
daa
shl
aam
or
fs
scas
pop
mov
and
stc
call
or
cwtl
xchg
mov
insb
push
inc
dec
xchg
jnp
dec
lods
sbb
test
fcos
cmc
das
dec
push
cwtl
rorb
pop
rolb
jg
test
push
fsubrl
movsb
in
pop
pop
rclb
rcrl
das
jl
jae
in
ret
jb
out
jne
jecxz
inc
ret
es
test
inc
es
cmp
or
jmp
push
xchg
aas
sbb
mov
dec
scas
test
push
cltd
insl
xchg
scas
test
rol
ljmp
mov
xadd
js
xchg
adc
int
cmp
mov
pop
mov
cmp
and
clc
sub
push
mov
push
sbbb
inc
in
sub
mov
jno
push
jmp
mov
dec
xor
adc
arpl
or
inc
das
out
cmp
xchg
pop
sarb
jle
mov
dec
adcl
in
push
pop
std
mov
test
push
push
cmp
push
imul
mov
cld
push
test
icebp
lods
xor
stc
fsts
mov
sub
push
push
inc
in
andb
fucomp
clc
jmp
stos
xchg
stc
inc
sub
add
lcall
jns
shrl
inc
sti
loop
push
int
bound
push
dec
ja
xchg
jne
dec
or
xchg
add
and
imul
push
daa
and
rolb
fwait
ja
movsl
imul
int
ud2
and
ljmp
inc
scas
mov
repz
cmpsl
test
mov
pop
xchg
mov
jle
je
loope
inc
sub
xchg
int
daa
fwait
sub
mov
shll
mov
outsb
jo
ficomps
repz
push
mov
movsl
jmp
xchg
inc
outsb
and
sti
addl
idivb
sahf
int3
mov
inc
fwait
movsl
pushl
out
aas
js
push
xor
mov
add
in
inc
jmp
mov
cwtl
mov
in
out
fldcw
mov
push
fs
jmp
fyl2x
loopne
stc
pop
jmp
dec
mov
cmp
adc
sbb
fimull
fidivrl
loope
inc
insb
or
aam
pushf
adc
pop
fsubs
paddusb
fiaddl
mov
loope
js
xchg
dec
cmp
fisubl
out
test
and
and
test
fimuls
dec
or
divb
push
lahf
xchg
mov
cld
mov
icebp
pop
jns
and
jecxz
xchg
add
cmpl
or
mov
cli
or
jb
dec
push
inc
pop
nop
mov
mov
imul
inc
lcall
stos
cmp
movsl
cmpsl
aas
loopne
pop
lods
loopne
xchg
rolb
mov
push
imul
mov
test
clc
jge
rcrl
fs
and
mov
filds
mov
imulb
sub
pushf
out
imul
adc
and
dec
xor
cmp
xchg
loop
mov
out
fcoml
pop
sub
insb
out
stos
inc
leave
and
mov
fwait
dec
pop
or
xor
rorl
inc
pop
xor
int
call
lret
sbb
aas
xchg
imul
add
dec
loopne
aas
repnz
jae
inc
xchg
into
mov
stos
jno
ret
mov
lahf
push
inc
sbb
out
jg
fcomps
jb
push
pushf
adc
push
js
adc
jmp
loop
adc
and
scas
sti
pop
inc
dec
lret
call
addr16
lcall
pop
sahf
lahf
lret
inc
xchg
mov
test
repz
inc
mov
xchg
inc
out
inc
sub
mov
or
push
shrl
sbb
bound
loopne
dec
mov
nop
stos
and
mulb
or
and
es
scas
imul
fisttpll
adc
cmp
sti
jns
or
jp
jns
jb
and
in
pop
dec
mov
and
in
nop
pop
mov
sahf
adc
pop
xchg
pop
sar
sub
sub
cld
repnz
pop
push
mov
push
sbb
add
and
sbb
sbb
mov
inc
in
loop
pop
pop
pop
std
add
and
xchg
dec
mov
aam
lret
cmc
pushf
jo
sbb
sti
mov
addr16
lahf
push
shlb
cmp
cmp
jg
add
in
push
lds
sbb
inc
xchg
sub
pop
cmp
mov
insb
pop
mov
jge
and
or
mov
addl
add
pop
inc
lock
xchg
jae
xor
jno
adc
mov
popa
mov
mov
pop
inc
sub
or
fisubrl
mov
dec
insl
daa
mov
and
jmp
in
and
xchg
js
cld
mov
sbb
push
repnz
xchg
loopne
mov
pop
jne
inc
pop
lret
lahf
loopne,pt
sarb
into
insl
pop
pop
pop
and
pop
rcrb
push
mov
fadds
push
sahf
sarb
lret
aas
add
fmuls
pop
jns
mov
popa
push
xor
pop
dec
and
test
ficomps
adc
sbb
jl
push
lods
jmp
ljmp
bound
and
fldl
dec
jnp
xchg
testl
pop
shrb
add
dec
jle
test
leave
xor
sub
push
cmpsb
aad
or
outsb
test
mov
popf
pop
sbbl
dec
pop
push
insb
sub
fdivl
fcomps
fnstcw
int
sbb
lea
inc
add
iret
fcomp
push
cmpsb
leave
xchg
push
mov
ljmp
and
cmpb
andb
fildll
cltd
mov
add
mov
cmpsl
stos
imull
sub
jns
add
sub
push
sub
xor
pop
fisubrl
lea
and
lret
sub
pop
or
daa
add
mov
lret
arpl
stos
dec
lcall
mov
or
inc
dec
ja
ret
xor
and
sub
imull
loopne
mov
popf
outsl
fldpi
mov
xchg
daa
aas
call
adc
jae
orl
jns
jl
inc
stos
push
dec
adc
jp
mov
xchg
dec
jo
es
loop
xor
data16
or
mov
mov
mov
jg
adc
sbb
jae
push
push
cmp
jo
adc
push
xchg
mov
std
test
mov
lods
or
cmp
loop
ret
and
sub
and
std
inc
inc
imul
int3
fisubrl
ja
insb
pop
divl
in
and
movsb
cmpsb
jp
shll
cli
nop
lock
pusha
mov
pop
imul
lock
mov
jo
out
jno
jne
lahf
aad
inc
leave
push
cltd
jne
fidivrs
test
movsl
in
int
addr16
lock
push
xor
lods
mov
jmp
imul
ret
mov
mov
repnz
scas
lahf
sbb
cli
cltd
adcl
mov
or
movsl
or
cmc
outsb
xor
xor
sub
in
mov
icebp
dec
not
mov
test
lret
fcmovne
push
jne
pop
enter
xchg
les
out
arpl
sub
push
mov
bound
jnp
in
adc
outsl
jmp
mov
add
mov
mov
fsubr
inc
pop
stc
int3
lods
dec
iret
jp
sbbb
xchg
and
icebp
sbbl
lea
push
int3
inc
xor
inc
xor
inc
pop
jnp
or
in
cltd
add
and
sbb
mov
lcall
icebp
imul
mov
inc
les
movsb
mov
enter
xchg
out
shrb
mov
and
imul
in
sbbl
sub
push
add
aam
sub
mov
xchg
bound
test
push
sahf
aas
lock
pop
cmp
mov
jmp
pop
js
xor
cmp
jg
lret
lods
fistpll
mov
cltd
dec
xchg
into
push
mov
mov
mov
mov
es
repnz
aaa
xor
dec
cmp
mov
fs
loope
daa
adc
push
jle
loopne
jp
das
pop
negl
lods
push
jnp
aam
movsb
fsubl
test
jo
ret
out
push
sub
fildll
push
jl
stos
std
int3
sbb
mov
mov
in
jne
lcall
jne
sbb
pop
lods
jnp
mov
adc
push
aam
or
xchg
jmp
scas
push
jg
mov
cmp
mov
sti
movsb
mov
or
sbb
xor
xchg
inc
xchg
iret
out
sar
sbb
mov
scas
imul
mov
mov
xchg
or
pop
and
pusha
cmpsl
test
imul
cmp
mulb
mov
leave
pop
fs
pop
mov
pop
push
out
mov
vmread
out
ret
out
dec
scas
rolb
into
cmpsb
or
xchg
daa
mov
into
dec
jno
sub
push
mov
stc
pop
pop
in
in
push
sbb
xchg
sub
mov
loopne
ret
xchg
inc
adc
std
aad
fstpt
adc
insb
andl
inc
push
xchg
bnd
mov
aaa
sub
rcll
sbb
mov
aaa
or
gs
mov
push
pop
xchg
rcr
cmp
dec
bound
add
jae
cmp
scas
push
adc
subb
or
mov
adc
sti
bound
insl
inc
add
add
dec
adc
scas
ret
pushf
jmp
mov
push
lods
jbe
outsl
jle
std
cltd
ja
sbb
jg
sbb
outsb
and
mov
in
out
ret
dec
push
les
insb
test
xor
push
sub
sti
push
and
cmp
mov
shlb
loop
test
cmpsb
rcrb
ljmp
xchg
mov
lahf
test
pop
lds
adc
inc
fadds
and
sbb
dec
sbb
iret
data16
jne
push
push
fwait
cmp
frstor
jmp
daa
xor
ffree
test
in
xchg
test
pop
stos
jne
jmp
out
ret
pop
imul
jecxz
sub
xchg
call
and
sub
sti
insl
ret
adc
dec
icebp
lret
cmpsl
aam
cmp
sbb
xlat
xor
shlb
or
outsl
orl
jecxz
push
cmpsl
dec
mov
dec
xchg
ret
out
lret
mov
mov
or
mov
dec
add
cli
mov
aaa
mov
or
shl
lret
loopne
frstor
stc
or
inc
aam
pop
lods
lret
iret
add
pop
dec
mov
dec
jbe
ret
push
dec
lock
sbb
shl
and
or
jg
mov
les
sub
lcall
fucom
dec
or
mov
add
shll
rcr
aad
cmp
xchg
clc
je
xor
pop
loopne
push
adc
jp
popa
fcmovbe
and
or
hlt
rol
add
in
pop
jp
mov
shlb
inc
xchg
out
xchg
test
sbb
xor
in
into
jge
int3
adc
stos
dec
adc
mov
pop
lret
cmc
insb
incb
or
jle
mov
out
mov
es
mov
add
shll
lcall
mov
and
pcmpgtb
push
mov
outsl
push
add
ds
icebp
dec
sbb
gs
insb
cmp
test
pop
arpl
xchg
fbstp
sub
sub
bound
inc
and
movsb
ret
je
adc
fmuls
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
xor
jmp
push
cmpb
mov
icebp
cltd
xchg
ret
shll
jp
pop
jp
jne
sbb
adc
sbb
mov
mov
cmc
push
cmp
mov
dec
sub
push
adc
in
cmp
jae
xor
test
pushf
iret
ja
sti
dec
hlt
mov
icebp
inc
jecxz
sbb
dec
hlt
int3
cmp
or
pop
dec
int
clc
ficoms
adc
out
das
cmpb
mov
inc
or
lcall
dec
daa
bnd
inc
sub
loopne
mov
xchg
outsb
add
adc
sahf
mov
fwait
mov
xor
cmpl
repz
cmpsb
test
sar
add
mov
push
dec
xor
sbb
js
xor
inc
dec
xchg
out
lock
popf
pop
and
subl
popf
repnz
faddl
mov
cmp
mov
test
sbb
mov
mov
stos
and
dec
xchg
xor
in
popa
jecxz
dec
fmul
mov
lock
adc
aad
rcrl
movsb
movsl
fmul
xor
sbb
mov
stos
lret
mov
push
xor
jno
les
mov
jb
mov
mov
stos
sbb
mov
hlt
mov
aam
fildll
sbb
fstl
lods
push
rcl
add
lret
subb
jp
std
cs
lods
cmp
push
andb
push
push
mov
mov
xchg
pop
int3
sbb
fs
loop
mov
pushf
dec
or
mov
pop
clc
mov
mov
and
mov
pop
mov
xlat
sub
repnz
subl
loope
xor
repnz
ret
sbb
push
xchg
xchg
and
mov
and
call
fwait
xor
leave
cwtl
jle
out
sbb
mov
pop
aas
push
mov
loop
cs
and
inc
sub
sub
stos
mov
push
nop
cmpsb
and
mov
jge
mov
jnp
test
icebp
or
mov
sub
adcl
mov
inc
std
mov
mov
cmp
repz
sub
jle
pop
sti
push
mov
cltd
lret
xchg
jne
sbb
sbb
scas
mov
and
push
adc
gs
push
cltd
lret
std
loope
cmc
xchg
shr
lahf
adc
pop
js
into
and
mov
add
cltd
mov
sub
lods
scas
adc
ret
gs
subl
shrl
dec
repz
repnz
in
test
dec
pushf
push
sub
or
orl
repz
dec
test
fldt
fs
push
jne
sub
daa
xor
push
cmpsl
pop
dec
adc
das
or
adc
fmull
btc
loopne
mov
mov
pop
mov
cmpsb
mov
sbb
stc
cmp
mov
mov
xchg
test
into
mov
xchg
mov
nop
cwtl
inc
add
mov
mov
daa
inc
mov
mov
loop
pop
call
push
scas
adcb
sbb
test
insb
pop
testb
push
icebp
lds
pop
inc
mov
ja
and
pop
es
stos
and
fildll
out
add
test
test
rcrb
jmp
inc
xor
add
pop
addr16
outsl
mov
movsl
das
cmpsl
xor
mov
cmp
xor
cmp
and
out
pusha
pop
rcrb
mov
movb
adc
push
pop
int3
push
pop
inc
push
mov
das
push
sbb
mov
xchg
push
mov
inc
das
lcall
sbb
hlt
aam
xchg
and
mov
cwtl
fildll
push
xor
push
jp
pop
sub
mov
cwtl
fidivrl
xlat
popa
dec
aaa
pop
mov
cmpsl
cmp
lods
mov
jnp
addr16
ja
daa
sarb
orb
push
stc
jp
xor
cmp
dec
imul
pop
ficoms
cmp
mov
out
inc
cld
iret
dec
into
lret
xchg
mov
cld
cmp
mov
dec
das
inc
aam
aam
pop
nop
sub
stos
sahf
cld
ljmp
cli
xor
pop
pushf
loopne
lahf
test
or
mov
jge
mov
lcall
loopne
mov
jne
out
test
push
add
xchg
inc
xchg
dec
sub
fisubs
sub
faddl
popa
adc
mov
es
inc
xchg
pop
mov
mov
push
aaa
pop
test
and
mov
dec
jno
bound
sub
fldl
cmp
push
mov
dec
xlat
sti
mov
mov
xchg
add
ljmp
add
mov
dec
jae
mov
mov
lret
pop
pop
xor
sbb
adc
orb
jb
lret
xchg
xor
das
sub
insl
aas
fnsave
repz
fnstenv
sti
mov
repz
xchg
gs
mov
fstpt
int3
mov
push
push
mov
inc
jg
sbb
idivb
mov
out
push
fcompl
jbe
shrl
addb
test
sub
and
push
push
jnp
addl
frstor
outsl
push
fucomi
addl
xchg
sti
jl
sbbb
mov
push
push
push
ss
je
fistpl
fsubp
dec
mov
dec
pop
mov
jns
in
popa
dec
lods
add
pop
int
push
icebp
cmpsl
jb
das
mov
inc
ds
out
enter
out
imul
dec
dec
or
ret
lods
or
jecxz
dec
cmpsb
push
idivl
mov
ret
mov
sub
aas
adc
push
mov
inc
lret
add
rcll
jno
push
lods
loope
lahf
rclb
jle
subl
mov
jne
gs
jns
into
jo
aaa
jecxz
mov
xchg
inc
mov
dec
movsb
lcall
dec
and
cmpsl
nop
mov
dec
inc
fs
pop
jns
push
icebp
pavgb
jbe
js
push
push
or
jno
psllq
inc
psrad
sbb
cmpsb
imul
jns
add
in
xchg
scas
jno
push
fiaddl
test
inc
outsl
repz
add
je
pop
sbb
lods
push
inc
ret
jmp
idivb
cltd
dec
xlat
push
mov
lcall
or
cmpsb
mov
or
inc
scas
add
std
adc
fimull
jo
xchg
fiadds
adc
and
dec
jae
sarl
sbb
xor
inc
inc
xor
xor
test
ds
aad
out
lock
sub
mov
cmp
mov
or
rcrl
jbe
sbb
inc
pushf
in
and
pop
xor
mov
mov
xor
int
xorb
scas
cmpsb
xchg
pop
dec
lahf
adc
sti
iret
stos
mov
or
imul
jg
aam
loopne
movsl
xor
mov
adc
cmc
or
and
mov
mov
dec
sbb
xor
pop
cmp
scas
dec
aas
jno
jp
adc
push
mov
ret
mov
mov
leave
lods
in
lods
lahf
xorl
fsubrl
cli
mov
stos
test
cld
mov
mov
aam
or
ss
in
jle
repnz
loope
enter
lahf
and
inc
hlt
test
dec
inc
jmp
push
mov
xlat
xor
inc
pop
fdivl
sahf
cmc
mov
sbb
adc
out
lods
pop
popf
in
imul
adc
hlt
ds
loope
js
xor
inc
stos
cmp
fcoms
sub
cwtl
outsb
in
xor
scas
fisubs
shrl
fisttpl
js
rclb
cli
es
jns
sub
push
jb
cmc
ja
mov
mov
loopne
push
push
lds
out
mov
dec
fcmovne
and
adc
inc
xor
scas
js
inc
sub
cmp
mov
xchg
in
notb
pop
sbb
aaa
ret
fldcw
cmp
lea
or
test
popf
and
inc
push
stos
aas
xchg
or
push
in
das
inc
outsb
stos
shll
in
inc
xchg
dec
cmp
sub
scas
mov
int
hlt
sub
sbb
jmp
sub
int
lar
pop
lahf
jmp
lar
popa
xchg
icebp
or
jae
in
mov
inc
push
mov
shlb
adc
idivb
lret
ds
dec
mov
jle
pop
mov
sub
dec
pop
out
out
mov
aad
dec
mov
inc
imul
iret
jne
cwtl
lahf
outsb
xor
shlb
leave
xchg
inc
fisubrl
cmc
push
je
dec
call
das
lods
push
imul
sub
inc
dec
roll
sub
out
xlat
movsl
addr16
stos
jnp
mov
cmc
jmp
sub
mov
js
jbe
repz
hlt
sub
sbb
pusha
cmp
nop
daa
in
push
fldcw
lods
sub
out
fwait
test
mov
mov
in
fs
and
sti
leave
xchg
shlb
jae
repz
cwtl
cmpsb
addr16
or
lods
xchg
jo
and
bound
dec
in
fsubr
stos
pop
shl
cmp
xchg
mov
insl
sbb
iret
fidivs
cmp
xchg
xchg
popa
fst
push
in
cld
cmp
pop
mov
xchg
jo
hlt
dec
inc
adc
jae
sbb
adc
out
nop
cmp
repz
call
adc
es
jl
ljmp
addr16
mov
adc
jmp
jbe
aam
mov
sarl
js
cmp
xchg
mov
add
shr
inc
out
sahf
mov
lret
popf
nop
jg
inc
ja
mov
mov
sub
mov
mov
mov
fs
push
icebp
xchg
sub
mov
or
and
dec
pushf
xchg
and
add
xor
xor
es
xor
pop
push
mov
xchg
ljmp
xchg
xchg
ss
and
jge
mov
add
roll
dec
shll
fiadds
sub
lahf
shlb
std
sbb
pop
sbb
insl
out
inc
das
pop
xchg
ret
sti
rcrl
jbe
lret
shrb
loop
test
xor
cli
sub
repz
add
mov
cmp
cltd
daa
fldl
mov
pop
sub
add
hlt
rorb
lea
jbe
mov
xchg
lods
loopne
push
sbb
addr16
jmp
jl
lea
addr16
and
lcall
out
test
jge
lgdtl
stos
pop
sub
in
mov
xorb
pushl
ss
sbb
dec
dec
mov
gs
inc
sahf
jb
add
dec
jmp
push
dec
jmp
nop
xor
lea
daa
mov
add
inc
mov
mov
inc
cwtl
push
int
ficoms
mov
or
out
jmp
cs
ret
mov
cmpsb
fbstp
mov
insb
gs
fmuls
adc
fcomps
mov
int3
sbb
adc
pop
arpl
sbb
sbb
lahf
repnz
xchg
mov
and
pop
arpl
mov
addr16
push
clc
xor
xchg
in
pop
inc
cmpsl
xor
jle
cli
pop
push
add
and
xor
in
sbb
pop
orl
cmp
orl
push
mov
jl
and
pop
push
push
mov
push
out
push
je
adc
pop
add
sbb
mov
ret
stc
call
ja
in
adc
add
push
sbb
cmpsl
cmp
and
pop
in
mov
mov
or
out
imul
loopne
or
jg
mov
mov
shll
call
repnz
loop
add
and
or
push
xchg
xchg
into
inc
xchg
sbb
push
es
pop
mov
inc
movsb
push
jmp
inc
sbb
lret
dec
mov
adc
push
psubb
pop
fs
pop
lock
aaa
mov
loop
add
pushf
and
add
xchg
insl
cmp
cmp
push
inc
test
dec
sti
mov
mov
inc
mov
jge
and
xorb
fdivr
cltd
loopne
push
hlt
xor
ja
jmp
adc
loop
cwtl
mov
lods
xchg
pop
cmp
rclb
mov
push
inc
jp
aas
cmp
sbb
jbe
or
js
fwait
orb
outsl
loopne
leave
push
sub
hlt
mov
adc
icebp
mov
mov
pop
jno
or
xchg
mov
in
dec
adc
mov
fistpl
sbbl
adc
dec
shll
mov
mov
push
lret
jbe
fsubs
imul
jp
je
repz
imul
in
push
stos
mov
adc
leave
mov
mov
mov
mov
xchg
stc
insb
out
sub
jle
or
push
jno
fcomi
scas
push
enter
sbb
andb
nop
xor
mov
js
aad
pusha
lcall
add
push
xor
jo
movsl
loop
xorb
cmp
or
adc
mov
and
aas
aaa
or
das
adc
enter
xchg
fwait
or
xor
jp
mov
xchg
sub
sbb
and
sub
bound
xlat
xlat
mov
sub
aas
ret
jp
and
fbld
sub
sbb
in
add
test
enter
out
or
mov
into
or
sti
repnz
inc
or
cmp
sub
je
jb
pop
jne
fwait
test
or
mov
cld
fildl
rorb
cltd
and
pop
mov
lods
xchg
adc
inc
pop
mov
add
mov
fs
jmp
inc
cwtl
lds
mov
faddl
push
mov
cld
sbb
insl
add
fwait
icebp
call
lods
jle
jb
decb
dec
mov
or
push
lock
and
mov
sbb
inc
push
inc
or
jg
inc
sub
jbe
pop
shlb
jl
add
imul
mov
aad
xlat
pop
cmc
dec
mov
pop
ret
inc
inc
cs
cmp
mov
cmc
mov
movsl
inc
shlb
cmp
mov
inc
mov
mov
shll
add
shll
subb
test
xchg
push
or
add
repz
sbb
addr16
cltd
and
xorl
call
sarl
clc
push
rolb
rorl
repz
mov
xchg
mov
xchg
sarl
cmpsb
test
lods
cmpsb
lock
mov
and
aad
push
or
xchg
add
mov
lods
lds
inc
lret
push
cld
out
pop
xlat
addb
jns
shlb
cmp
pop
fsts
cli
push
idiv
loop
dec
into
mul
mov
xchg
push
stc
mov
dec
xchg
ficompl
and
sarl
lret
ds
insl
call
dec
fs
xor
les
fldl
jge
pop
mov
repz
fs
pop
pop
sub
repz
imul
mov
nop
sbb
xchg
pop
jle
and
xchg
idivb
or
rol
dec
stc
mov
mov
mov
mov
lret
cmp
stos
xchg
cli
lcall
jmp
cmp
jp
repz
mov
mov
pushf
xchg
cmp
enter
hlt
mov
xchg
mov
mov
push
dec
scas
xor
jnp
imul
cwtl
mov
push
sar
inc
aas
iret
cmp
pop
lahf
xlat
jp
jle
push
in
je
addr16
and
and
cmp
fdivrl
jo
negb
pxor
add
cmp
dec
mov
dec
jecxz
ficompl
mov
nop
mov
je
outsb
cmp
xor
inc
sub
bound
xchg
cmp
les
xchg
xchg
outsl
xchg
scas
fcoms
icebp
test
lea
jg
xor
lods
mulb
push
xchg
addb
pop
xor
stc
dec
sub
loope
test
mov
xor
mov
sbb
rcll
push
dec
mov
mov
iret
aaa
mov
movsb
mov
cmp
pop
ja
imul
jge
xchg
cld
pop
dec
mov
imul
neg
stc
into
jns
pop
and
iret
notb
inc
sbb
mov
fpatan
mov
loope
pop
idiv
jnp
sbb
lea
sbb
ret
pop
mov
fiadds
sbb
popf
out
push
test
arpl
pop
daa
insb
sub
rcr
aad
out
and
sub
cwtl
loope
pusha
mov
mov
push
pop
test
lret
add
pop
cmpsl
and
jl
int
jbe
popf
mov
inc
loop
push
int
stos
xor
cli
xchg
cwtl
adcl
addr16
in
movups
sub
mov
je
clc
aad
sbbl
or
mov
sbb
sbb
andb
sub
loop
dec
inc
fld
mov
and
pop
stos
xchg
mov
sbb
int
mov
bound
in
je
xchg
pop
out
mov
xchg
les
loopne
cwtl
push
jecxz
jp
loop
fldpi
and
sbb
cmpsb
sub
cltd
jne
xor
adc
shrb
lahf
subb
jnp
sbb
nop
adc
jl
add
les
cltd
pop
in
and
mov
js
dec
test
jp
stc
ds
adc
loope
mov
test
xlat
aam
sbb
sbb
test
mov
xor
xlat
jle
sub
in
fdivr
test
fldcw
and
add
jae
arpl
sub
pop
cmp
push
lret
push
orl
mov
out
xchg
int
adc
inc
or
pop
sbb
push
sbb
cmp
pop
pusha
dec
mov
mov
jge
loope
push
mull
hlt
sub
repnz
gs
insb
lods
jns
xchg
mov
stc
lret
and
pop
lods
stos
pop
jmp
lcall
mov
mov
push
int
cmpb
lods
cmp
subl
leave
in
xor
jbe
hlt
inc
pusha
outsb
negb
addr16
out
rcrb
and
out
jle
xor
push
adc
or
push
hlt
repz
jnp
addb
xor
cs
xor
xchg
sub
ds
cwtl
cmpsb
call
mov
inc
addl
psubusw
xor
xor
ret
cwtl
data16
jne
out
in
inc
adc
sahf
adc
jmp
leave
fsubs
sbb
lods
out
push
push
into
push
je
sarb
push
stos
and
lret
pop
insl
mov
mov
sub
and
rol
cld
arpl
add
pop
into
sbb
mov
enter
out
jmp
lret
xor
subb
pop
push
inc
leave
jecxz
pop
sbb
shlb
dec
pop
out
cmpsb
jl
stos
mov
jmp
mul
arpl
mov
popf
and
cmp
mov
imul
test
jl
xchg
mov
jbe
repnz
xchg
int
lods
subb
cmp
push
cmp
xor
xchg
cmpsl
in
sub
push
stos
or
lea
enter
stos
rorb
sbb
mov
fbld
adc
pushf
add
sbb
bound
ljmpw
iret
push
and
push
push
fs
cmp
adc
mov
notl
xor
daa
push
dec
dec
daa
inc
dec
add
jg
imul
jecxz
mov
cmp
mov
subl
call
jno
shlb
cmovge
jno
and
jecxz
repz
xchg
lods
xchg
in
add
lds
stos
nop
fadd
cmpsl
xchg
mov
ret
lahf
sbb
jge
push
add
xchg
lahf
pop
mov
out
enter
cld
mov
xchg
jle
xor
adc
test
ffreep
mov
in
addb
daa
inc
push
fs
jl
sub
fidivl
pop
outsl
les
pop
jo
js
add
pop
aam
aam
mov
les
popa
insl
arpl
add
inc
xchg
dec
insw
sahf
mov
lret
rclb
adc
push
add
icebp
xor
out
adc
movsb
or
rol
lock
loop
lahf
fsubs
push
mov
cmp
rcl
push
out
dec
stos
or
mov
mov
push
inc
jns
out
mov
sbb
pop
aaa
xchg
adc
lock
or
mov
sbb
fwait
jl
jne
jo
inc
fstp
cmc
push
sbb
sbbb
jns
pop
mov
add
pop
jnp
inc
outsl
adcl
jo
mov
add
pop
adc
ja
xchg
jne
repz
pusha
push
rorb
rclb
mov
stc
dec
cmpsl
cmp
cmc
or
movsl
and
in
push
popl
ja
push
pop
int
mov
pop
and
jle
fs
call
xchg
test
xchg
mov
pop
xchg
cld
cli
pop
mov
outsl
mov
pushf
add
repnz
push
cmp
mov
inc
aas
loop
sub
inc
lods
cwtl
stos
cmc
leave
js
loopne
adc
sub
sbb
sbb
ljmp
stos
inc
sub
jmp
or
add
ror
jp
inc
adc
cmp
inc
or
dec
jns
mov
sbb
pushf
xchg
loopne
pop
add
mov
mov
hlt
out
cmpsl
leave
add
mov
mov
fcoms
mov
stc
dec
jecxz
cld
push
ds
pop
icebp
test
mov
loope
push
sahf
test
push
and
sbbl
sub
pop
dec
pusha
aam
je
cmpsb
leave
inc
into
ret
es
mov
lahf
dec
dec
jle
pop
les
mov
lret
inc
mov
mov
lock
lahf
pop
push
into
je
mov
fistps
mov
outsl
sub
rol
and
sahf
out
out
jg
push
rcr
idiv
adc
aad
shlb
adc
xor
adc
call
sub
sbb
mov
fmuls
bound
test
xchg
ds
jl
scas
xor
push
jecxz
or
stos
xor
gs
xchg
roll
call
aas
push
and
sub
addr16
mov
jg
loopne
mov
scas
pop
xor
movsb
mov
notb
lds
cmpl
pusha
push
sahf
aam
xor
jmp
sub
push
sub
mov
mov
stc
aas
in
push
insb
jp
cmp
enter
and
or
inc
sar
call
rep
pop
sbbb
cli
add
inc
cltd
xor
shrl
adc
dec
imul
rorl
add
push
mov
mov
cmp
cmp
sahf
loop
mov
dec
sub
or
pusha
xchg
pop
xor
subb
sbb
jne
pop
clc
or
xchg
sub
jecxz
xor
push
and
pop
aam
out
int
jmp
fsubrs
leave
cld
pop
jl
sbb
mov
or
jb
mov
sub
test
gs
loope
fcoms
mov
and
xlat
mov
enter
xchg
or
pop
dec
xor
mov
out
cmp
and
outsb
ljmp
aad
out
mov
lods
popf
pop
idiv
stos
add
fstpl
sbb
pop
push
sbb
loope
or
test
add
mov
dec
orb
aaa
xchg
pusha
add
testb
pop
fisubrs
cwtl
outsb
into
test
cmp
rdpmc
sub
gs
xor
leave
out
into
movzbl
mov
mov
movsl
cwtl
or
clc
push
sub
dec
movsb
js
sub
mov
adc
lret
daa
mov
aam
repnz
notl
sbb
test
push
fistps
add
addb
ja
ret
mov
pop
mov
adc
lods
mov
inc
rcl
cwtl
jae
dec
inc
insb
and
aam
sahf
mov
rep
xor
mov
out
push
xor
dec
in
mov
and
pop
test
loope
rcrl
cmp
aas
out
inc
imul
scas
nop
lods
pusha
rorb
cwtl
in
mov
into
loop
fidivs
xor
mov
jnp
cltd
mov
pinsrw
mov
sub
lret
cld
pop
sub
ds
push
add
jge
jns
mov
mov
jo
fincstp
sahf
in
mov
jbe
mov
inc
std
pop
jno
mov
popf
outsl
xor
outsb
dec
aas
jge
jle
faddp
mov
shlb
dec
pop
movsb
or
adc
rcrl
mov
in
cli
lds
push
jp
call
dec
repnz
mov
ret
push
jns
std
mov
adc
lcall
adc
lret
jp
ficoms
mov
push
jl
pop
push
out
xchg
sbb
xor
pop
add
push
hlt
leave
rorb
enter
mov
mov
out
movsl
xchg
sbb
adc
enter
lcall
test
pusha
jae
jo
mov
or
jge
jns
mov
lods
adc
rcrl
cmp
xchg
cmp
inc
mov
repz
pop
in
mov
push
inc
adcl
cmp
je
push
cmp
mov
jno
adc
xlat
dec
lods
or
aaa
jnp
cld
push
add
dec
lods
jne
mov
movsb
aad
xchg
and
mov
stc
movsb
jg
loopne
jbe
or
add
out
xchg
flds
sbb
dec
insl
dec
inc
sub
and
mov
push
jno
les
push
ds
sti
mov
leave
jecxz
add
lret
sbb
js
shlb
mov
or
fscale
xchg
jnp
inc
cs
scas
mov
sub
or
loop
fnstcw
xchg
mov
test
std
adc
mov
loopne
jmp
xor
jl
cmpsl
mov
and
pop
jbe
loope
mov
repz
inc
jp
sub
scas
sub
cmp
xlat
xor
adc
dec
mov
pop
out
mov
pop
lods
dec
shlb
stos
fcompl
push
outsb
mov
iret
mov
xor
jb
push
clc
out
popa
std
and
pushf
jae
iret
mov
test
daa
sub
sub
hlt
pusha
xor
lret
mov
insl
out
shrb
mov
out
jb
add
fcomip
or
xor
sub
add
cltd
outsb
mov
dec
sahf
negl
ds
dec
push
mov
adc
imull
gs
jne
enter
and
xor
aaa
sbb
int3
pop
in
ds
mov
stos
lods
or
pushf
or
jge
xchg
cwtl
mov
dec
cs
cmp
mov
insl
xchg
jns
push
and
dec
adc
aam
lret
sbb
mov
pop
add
jle
push
enter
mov
sbb
dec
lods
lods
push
add
movsb
fs
icebp
dec
inc
adc
jno
fnstsw
sbb
pop
loop
pop
clc
lret
fmull
mov
lret
add
rolb
pop
xorl
es
mov
aad
mov
pop
sbbb
jns
mov
mov
cmp
outsb
je
hlt
mov
lcall
ljmp
lock
sub
int
or
out
sub
xchg
dec
in
dec
jb
add
and
pop
sbb
lret
adc
jge
dec
fcompl
mov
cmp
or
adc
jmp
out
push
inc
jae
ja
jbe
jne
enter
and
jmp
inc
cli
outsb
or
push
sub
mov
xor
xchg
mov
mov
icebp
push
xchg
mov
jns
cmc
lods
iret
hlt
fisubrs
rol
jae
mov
xor
hlt
or
mov
jp
xchg
xchg
popa
xor
inc
dec
jl
push
mov
xchg
imul
or
mov
push
jmp
xor
daa
or
pop
rorl
sbb
clc
jno
mov
sbb
not
mov
hlt
inc
movsb
cli
xor
dec
and
and
clc
fmul
mov
xchg
testb
xchg
lea
mov
push
jae
in
xchg
and
lock
shl
adc
mov
ficomps
push
movsb
push
jnp
mov
cmp
xor
mov
cltd
xchg
add
insb
pop
clc
mov
pushf
out
jbe
outsl
bound
ret
lods
out
adc
or
adc
pop
push
mov
lods
test
psubq
inc
popa
mov
push
cwtl
cmp
cli
enter
jge
dec
fisttpl
js
push
cs
push
sub
lods
mov
mov
test
add
scas
ds
cmp
adc
clc
pop
fcoms
out
mov
lods
sarl
push
mov
cli
repnz
push
nop
movsl
call
push
cld
sbb
cwtl
and
loope
mov
in
addr16
mov
fisttpll
out
xchg
jbe
add
adc
xorl
movl
mov
outsb
jge
add
sub
sbb
data16
mov
insl
scas
rorl
mov
push
lea
push
mov
pushf
jns
cmpsb
mov
test
jp
rol
push
sbb
add
lock
or
xchg
lcall
movsb
pop
lock
sti
shrl
sbbb
mov
mov
les
out
int
jmp
pop
jp
std
mov
sub
jge
jge
jae
in
fnstenv
enter
jns
test
mov
scas
popa
jg
jmp
ss
adc
inc
ljmp
xchg
addr16
test
inc
jb
jo
sub
enter
pop
sti
push
outsb
mov
pop
rorb
jg
mov
imul
repnz
rcll
mov
call
xor
add
push
test
imul
xor
lods
cmp
data16
out
stos
shll
lods
xchg
into
pop
dec
das
fisubl
sbb
ret
xchg
jle
mov
cld
xchg
fdivl
sub
mov
mov
outsl
hlt
jnp
popa
mov
cwtl
mov
inc
and
out
xorl
push
pushf
mov
cmp
stc
sbb
adc
in
pop
mov
xor
xchg
xor
fbstp
sbb
pop
sahf
imull
and
push
icebp
and
jecxz
sbb
dec
mov
or
mov
add
adc
add
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
andl
push
adcl
mov
andl
xor
push
neg
mov
subl
add
mov
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
sbb
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
mov
mov
sbbl
xor
mov
sbb
add
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
sub
lea
orl
xor
subl
xor
cmp
je
inc
mov
addl
xor
xorl
add
movl
cmp
jne
xorl
pushl
call
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
add
and
mov
mov
addl
mov
notl
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
ja
test
mov
testb
leave
jp
fstpl
jp
or
pop
push
push
sbb
bound
mov
sar
inc
sub
pop
int3
mov
hlt
xchg
inc
mov
mov
idivb
dec
movsb
sub
add
cmp
add
andl
orb
pop
cmp
jbe
inc
xchg
mov
jo
adc
inc
out
adc
stos
int
int3
or
xchg
mov
dec
jne,pn
in
sub
sbb
outsb
cmp
bnd
arpl
adcl
add
jp
pop
fcmovnb
std
insb
dec
add
mov
xor
and
iret
aas
push
popa
add
xchg
push
in
inc
and
into
lods
jg
fcmovbe
xor
sbb
mov
insl
scas
push
addr16
imul
movl
xlat
enter
test
test
jg
stos
stos
mov
xchg
lret
dec
mov
aas
cltd
sub
je
scas
and
sar
rorl
enter
mov
cmp
mov
scas
push
dec
scas
jb
jno
pushf
out
call
mov
xchg
popf
adc
js
jl
dec
sbb
mov
xchg
in
aad
cmpsl
gs
loopne
or
jns
mov
and
sub
push
push
sbb
cmpb
lock
sbb
cs
movsl
jl
mov
cltd
dec
jns
sbb
imulb
add
adc
lcall
xchg
test
xchg
pop
frstor
adc
subb
cld
mov
lds
aas
dec
mov
les
in
cmp
js
or
adcl
xor
push
fidivrs
jl
mov
std
or
dec
fwait
out
inc
dec
sub
push
cmc
or
cmpsb
adc
fdivs
fisttpll
xchg
push
xchg
cmp
call
adc
adc
and
mov
aaa
icebp
insl
data16
lods
jne
ret
fists
call
mov
pop
cmpsb
into
and
scas
inc
jmp
aad
outsb
adc
push
jno
jbe
int3
xchg
mov
sbb
sbb
pop
mov
clc
fwait
cmp
xchg
xlat
xor
clc
je
sub
and
jp
inc
inc
xlat
dec
arpl
or
sub
sahf
faddl
out
sub
out
bound
inc
shl
pushf
sub
xchg
push
idivb
insb
xchg
inc
testb
xor
imul
popa
pop
jmp
and
sub
inc
dec
loop
sbb
push
jno
orl
adc
dec
xor
mov
jnp
adc
shlb
lea
sbb
xchg
dec
jne
arpl
dec
or
xchg
mov
jge
sbb
adc
nop
outsl
inc
dec
mov
test
loope
test
pushf
cmp
daa
sahf
mov
or
inc
cmpb
mov
jnp
inc
popa
test
roll
lods
fs
imul
add
cwtl
out
mov
addb
fs
fwait
ljmp
cmp
es
shrl
mov
pop
rclb
xor
xchg
jns
dec
in
dec
stos
lods
clc
lock
push
mov
pusha
jp
cmp
mov
push
mov
and
push
or
jg
fisttpl
aaa
sbb
and
adc
fcoml
test
lods
xor
mov
sbbl
mov
addr16
ss
pop
and
cwtl
pop
pusha
stc
mov
inc
jge
dec
ret
adc
push
mov
dec
rcll
cwtl
pop
push
pop
jmp
pop
sbb
cmp
mov
pop
test
jbe
xchg
cli
sbb
lds
std
mov
xorb
fcomps
inc
insl
ror
adc
inc
sahf
xchg
jmp
imull
or
hlt
jns
inc
cmpsl
mov
mov
and
push
out
adc
mov
lea
inc
sbb
loop
sahf
and
mov
mov
dec
xchg
pop
mov
frstor
or
pushf
xor
ret
sti
mov
cmpsl
add
add
fwait
inc
pop
popf
xchg
ljmp
cmpl
enter
and
loopne
fdivrs
and
in
push
stos
sahf
cli
clc
out
gs
popa
in
xor
nop
inc
jg
sbb
or
mov
bound
ret
xor
and
jle
je
mov
aas
mov
mov
scas
push
outsl
ds
popf
outsl
pop
jl
shll
stos
pop
dec
xorl
daa
dec
mov
pmullw
add
cmp
idiv
lahf
lock
mov
test
cld
inc
clc
adc
push
cmp
and
mov
adc
fistps
cs
into
fisttpl
add
sbb
and
pop
shl
jle
hlt
push
add
into
lock
ds
xchg
jno
inc
nop
push
inc
add
mov
gs
pop
jmp
inc
mov
imul
sub
mov
lods
xor
lods
sub
inc
nop
mov
gs
popf
or
out
sbb
les
pop
cmp
shll
in
mov
and
jl
aad
and
mov
dec
mov
sbb
enter
cmp
paddsw
testb
pop
push
or
cs
pop
sbb
and
nop
dec
sub
int
jle
movsl
int
jb
mov
inc
inc
mov
ss
jo
sbb
sbb
cmc
mov
pop
push
fs
inc
add
xor
cmp
sbb
jne
mov
popf
inc
xchg
leave
xor
sub
lods
mov
pop
mov
cmpsl
or
cmpsb
loop
enter
scas
stc
add
lret
das
test
xor
or
pop
pop
pop
mov
enter
aad
inc
mov
dec
cmp
outsl
jmp
leave
dec
sti
pop
add
or
push
iret
xor
out
ljmp
pop
jno
ret
iret
int3
aas
mov
mov
jmp
xchg
inc
sub
out
xor
sbb
mov
fidivrl
mov
cmpb
add
sub
and
outsl
fbld
xchg
sub
xor
sbb
in
popf
gs
subb
insl
ss
adc
cmc
mov
dec
push
mov
fists
xor
lock
lret
sarl
pop
mov
sbb
xor
insb
inc
cwtl
dec
sti
push
js
lea
mov
test
sbb
and
lcall
or
nop
inc
jge
test
dec
stos
cmpsb
lcall
adc
cli
call
push
mov
shll
ffree
add
outsl
int3
inc
sbbb
ljmp
add
incb
sbb
loope
mov
jle
add
fcoml
cmpl
xchg
aas
inc
dec
ret
jl
ret
xchg
cmc
ret
dec
push
push
call
or
lcall
sti
jge
pop
outsb
adc
inc
out
push
and
outsb
xor
js
mov
arpl
push
fcomp
pop
push
pop
mov
mov
in
ffree
lahf
aaa
enter
adc
in
insb
and
and
shll
sub
inc
rcl
mov
test
aad
and
sub
loope
movsb
aaa
and
add
fwait
icebp
jge
pushf
push
xor
and
inc
imul
test
or
jns
stc
adc
std
mov
push
mov
test
xchg
enter
movsb
lret
cli
imul
movsb
cmp
and
dec
xchg
mov
mov
inc
cmp
in
mull
fcmovnbe
pop
loop
sbb
push
fisttps
adc
push
outsl
sbb
push
xor
test
ds
hlt
xchg
and
jge
rclb
into
aam
inc
sub
cmp
mov
sub
xchg
jg
adc
and
sarb
push
inc
sbb
push
pop
mov
pop
and
jecxz
out
insb
cmpxchg
push
jbe,pt
pop
je
adc
cmp
sub
orb
das
cltd
add
mov
outsb
fldpi
imull
jge
adcb
fnsave
rclb
pop
jl
mov
adc
push
adc
mov
jns
jp
pop
jb
ret
aaa
adc
pop
pop
clc
push
xor
xchg
dec
inc
lret
jmp
mov
pop
mov
xchg
jg
out
mov
mov
xor
cmp
xor
xlat
repnz
pop
dec
cmpsb
dec
inc
or
xchg
xchg
sar
and
mov
cmpsl
add
jne
pop
mov
jl
dec
xor
stos
iret
push
inc
add
inc
jecxz
mov
cltd
jecxz
or
test
ljmp
pushf
test
sbb
enter
sub
lcall
cmp
test
jecxz,pn
lcall
and
sub
lcall
arpl
mov
add
or
mov
test
cmp
lock
jns
add
push
hlt
inc
sub
test
call
adc
dec
adc
mov
or
jle
data16
movsb
nop
or
push
mov
out
stc
pop
rclb
shrl
jo
mov
call
push
xor
pop
fldenv
or
adc
and
lods
ja
push
shl
jo
fstp
fiaddl
add
ss
call
sahf
mov
mov
dec
outsl
and
adc
sbb
sbb
push
ja
push
xchg
adc
fsub
inc
or
outsb
xchg
xchg
subb
fmuls
mov
or
popf
xchg
dec
mov
push
mov
scas
test
add
aad
subl
lea
test
mov
mov
cmpb
dec
add
push
inc
push
pop
jnp
xchg
test
and
dec
cmp
jb
inc
test
and
movsb
cmp
push
pop
notl
dec
frstor
or
aad
mov
inc
pop
add
push
jmp
imul
pusha
sbb
lods
mov
sti
add
divl
push
inc
hlt
out
xor
push
imull
jne
arpl
dec
sbb
inc
jnp
pop
xor
cld
mov
xchg
adc
test
lock
jno
aas
push
aam
mov
sbb
movsb
xchg
mov
xor
nop
mov
enter
int3
sbb
pop
push
or
mov
mov
or
and
and
fwait
sti
cs
movsb
xchg
loop
decl
push
pushf
xor
pop
mov
outsb
mov
lock
sub
rolb
adc
cmp
add
ja
pop
cmp
ljmp
sbbl
shrb
sahf
rol
pop
lods
cbtw
je
and
cltd
lret
sub
test
mov
cmp
addb
mov
popf
push
add
bound
fs
sti
jmp
fildl
adc
in
inc
in
pop
sbb
test
dec
fsubrs
cmp
lea
mov
mov
cmpb
or
mov
in
flds
mov
outsb
mov
lret
sub
repnz
jge
adc
push
push
fimull
repz
mov
in
out
mov
push
or
xor
push
shlb
sti
jmp
adc
idivb
cli
test
in
mov
jae
cmpsb
jno
mov
sub
push
and
mov
cmpsl
das
cmp
pop
mov
dec
xor
aas
or
daa
pop
jne
incb
or
dec
sbb
jecxz
test
roll
insl
mov
repz
mov
andb
ds
out
sbb
or
add
loopne
xchg
xchg
jne
xor
mov
or
or
scas
xchg
jmp
call
fsts
imul
ljmp
mov
incb
and
aad
mov
aam
arpl
sbb
add
ja
push
test
mov
add
mov
or
inc
out
add
pop
stos
sub
mov
fyl2xp1
sbb
inc
pop
in
enter
scas
xor
fists
sahf
xchg
add
jl
push
test
lret
sti
ds
in
sbb
insb
push
push
xor
xchg
nop
aaa
mov
xchg
sbb
scas
in
aad
cli
into
int3
lea
out
sub
sub
ret
lea
outsl
sub
scas
sahf
mov
pop
jbe
fstpt
cmp
jmp
dec
std
push
das
mov
jp
inc
lahf
jge
xchg
xlat
hlt
jo
gs
into
or
dec
sarl
pop
inc
scas
dec
cmpsl
in
enter
cmp
cld
lods
sbb
adc
push
push
mov
jmp
sbbl
sbbl
sub
sbb
xchg
push
aam
xor
psubusw
and
push
push
cmc
pop
xchg
inc
mov
les
ja
jns
inc
xchg
loop
sub
push
cmp
or
sar
xor
add
dec
inc
rcl
shlb
scas
cmp
call
pop
adc
push
add
cmc
mov
mov
dec
adc
jge
xor
add
ud0
mov
jl
pop
je
sbb
mov
out
cmp
cmp
jl
fsubrl
movsb
jo
imul
pop
gs
les
xor
dec
lods
comiss
iret
xlat
jecxz
sbb
mov
movsb
add
in
push
fisubl
push
lock
add
out
fs
add
push
xchg
jbe
or
testl
sbb
jno
sub
dec
jne
xchg
pop
bnd
push
push
xchg
shrl
push
xor
mov
sub
cmp
stos
mov
hlt
cmc
add
cmp
jne
aas
lret
aas
hlt
mov
lock
rcrb
sbb
xlat
push
and
or
sbb
mov
inc
leave
dec
sbb
push
jg
push
mov
inc
out
lret
flds
enter
mov
sub
mov
pop
sbb
dec
in
cwtl
adc
pop
leave
dec
pop
repnz
xor
aam
and
and
in
inc
add
ret
mov
inc
lods
outsb
in
mov
and
shll
cs
xchg
mov
jne
scas
jns
xor
push
sahf
loop
test
fs
or
xchg
arpl
add
adc
or
enter
and
sub
gs
push
inc
mov
xor
push
popf
pop
punpcklwd
aas
sub
add
sub
bound
leave
add
fisttps
movsb
mov
mov
je
adc
or
sub
pop
add
mov
xchg
cwtl
rorb
popa
pop
mov
popf
loopne
sbb
aam
hlt
fidivrl
xor
call
shr
sbb
test
cli
sbb
mov
adc
push
push
dec
pop
xchg
mov
test
jb
in
movb
loope
adc
gs
xchg
idivl
insb
jp
push
push
pop
add
mov
cmp
cmp
sub
insl
adc
xor
mov
mov
push
mov
out
add
xchg
cld
inc
mov
and
lcall
hlt
xor
mov
int3
mov
lock
jo
dec
pop
sub
mov
mov
mov
cmp
push
imul
add
cli
xchg
push
pop
test
cmp
cmpsb
or
aas
xchg
push
adc
pop
pop
rcrb
sub
dec
fwait
mov
fstpl
inc
test
subl
xor
aaa
adc
sbb
mov
jmp
mov
add
hlt
outsb
movsl
cmp
cmp
jp
stos
mov
dec
ficomps
sbb
fbld
mov
add
xor
mov
test
popf
adc
jb
inc
and
les
lret
das
jne
or
xchg
rcl
dec
xchg
dec
or
adc
dec
push
daa
popf
adc
sub
add
out
jns
adc
jae
clc
cmp
add
fwait
xor
js
out
pushf
and
scas
sarl
xchg
pop
popa
vpaddd
pop
push
push
ja
test
or
mov
js
std
divl
dec
cwtl
movsl
jp
mov
dec
jg
andl
sbb
xor
pop
fists
lret
cmpsl
js
orl
nop
es
hlt
hlt
lret
jmp
aas
push
adc
cmp
jo
push
pop
push
jb
out
cmpsl
cld
mov
pop
hlt
fs
ret
test
xchg
sbbl
add
mov
test
xchg
cmp
into
sbb
mov
ds
dec
push
or
xchg
adcb
shr
lcall
jmp
mov
xchg
jae
scas
cmp
repz
stos
lock
xor
enter
imul
movsl
insl
ret
rcrb
repnz
add
dec
xor
loope
iret
sub
movsb
pop
xor
add
cmp
jns
jmp
sbb
sbb
dec
lods
popf
push
cmp
jne
es
sbb
xchg
inc
jno
dec
test
inc
xchg
mov
sub
xchg
xchg
shrb
cs
mov
dec
scas
pop
jmp
ljmp
lock
std
js
pop
fwait
mov
or
cmp
inc
mov
xor
xchg
cmp
loope
lods
mov
movsb
fbld
xor
jl
or
int
movsb
ret
sbb
mov
add
xchg
insb
inc
lret
addr16
xchg
ds
add
xor
xor
inc
push
jmp
xchg
xchg
enter
jbe
mov
shll
fsts
imul
jecxz
and
push
sub
shlb
insb
push
jnp
andb
fcomip
push
sbb
inc
cmp
sbb
jo
dec
cmp
stc
jbe
mov
loop
and
aas
cmc
mov
sub
add
mov
out
and
out
mov
sahf
or
bound
cmpsb
sbb
call
cli
jns
enter
or
add
mov
xchg
push
adc
insl
add
sbb
sub
aad
mov
jge
jmp
inc
clc
and
sahf
add
sub
or
iret
test
addr16
add
movsl
jp
push
fbstp
test
mov
into
stos
mov
xchg
aam
mov
inc
mov
rolb
in
popa
jecxz
dec
scas
cmpsb
xorl
ss
pop
adc
adc
cmp
ficomps
pop
cs
scas
pop
icebp
and
add
and
cmp
rcrb
pop
or
adc
jg
mov
dec
mov
mov
movsl
sub
pop
rorl
in
dec
cld
pop
add
loopne
addl
fnstsw
dec
ss
jnp
add
push
mov
sub
lcall
push
or
push
or
mov
mov
sub
addl
rcll
arpl
push
jno
mov
mov
stos
aas
and
cwtl
cmp
subb
cmp
test
pop
arpl
iret
sbb
arpl
add
xor
jns
add
xchg
xor
cwtl
cltd
sub
test
push
pop
push
in
sbb
jmp
mov
dec
sub
sub
jge
lea
adc
pushf
and
push
test
sarb
inc
jmp
cmc
sbb
adc
and
imul
mov
push
cmpsb
scas
and
xlat
pop
lea
dec
xchg
mov
adcl
pop
add
sahf
iret
inc
mov
add
stos
cmp
sub
jbe
push
mov
les
nop
inc
mov
pop
add
push
mov
cmc
mov
arpl
daa
aam
fdivs
pop
pop
jne
sbb
pop
jae
add
shl
mov
jne
push
xchg
jecxz
adc
pop
sbb
enter
pop
and
out
push
movsb
jnp
mov
lahf
shll
mov
xchg
xchg
lds
xor
popf
subb
ds
xor
out
rcrl
push
xchg
sub
xchg
adc
setg
rorl
idivb
adc
adc
out
mov
mov
inc
ret
je
mov
cmp
mov
lcall
jne
sub
sub
popf
mov
arpl
pop
pop
mov
jne
add
test
repz
sub
test
out
sbbl
sbb
aas
int3
xor
jb
pop
aam
and
jp
mov
ret
sbb
stos
sahf
in
cmp
icebp
ds
mov
cld
into
testl
sbb
mov
mov
mov
lock
subl
call
shl
ds
nop
insb
fs
pushf
adc
negl
fldl
cmp
lcall
mov
xlat
cs
enter
mov
jge
out
push
pop
jmp
adc
xchg
dec
popa
mov
add
mov
gs
mov
jne
xorb
ja
enter
xor
mov
ss
xchg
fists
inc
xor
rclb
push
jno
mov
jp
insl
pop
push
push
mov
iret
arpl
xchg
testl
test
inc
aaa
lods
lcall
ja
sahf
or
fxch
sbb
or
sarl
xor
mov
sbb
fwait
push
push
xor
jmp
add
rclb
xor
pushl
movsb
jp
sbb
xchg
jne
out
sahf
mov
add
cmp
aaa
lds
push
insl
xor
ret
or
adc
rolb
scas
mov
jmp
lods
dec
dec
or
fimuls
pushf
cmp
lods
aas
test
scas
xchg
aas
mov
lret
decb
inc
jb
adc
scas
out
push
mov
into
inc
orl
fst
cmp
jae
test
cli
adc
jno
xchg
ficoml
in
sbb
call
add
stos
movl
outsb
movsl
jle
ficoml
jecxz
cmpsb
and
or
orb
add
inc
iret
lret
pop
fcoml
and
or
sbb
push
adc
push
pop
sahf
idiv
add
hlt
jmp
push
ds
mov
pop
fs
fwait
mov
or
push
mov
movsb
leave
testl
call
mov
xor
mov
and
mov
sahf
dec
push
cmpsl
pushf
rorb
mov
jae
fwait
or
sbb
and
xchg
out
insb
sbb
nop
pop
mov
inc
test
subl
stos
ja
dec
adc
xchg
xchg
push
test
xchg
imul
lcall
add
imul
sti
push
leave
out
push
cmp
xorb
or
mov
movsl
adc
adc
jo
mov
jmp
push
fs
inc
jecxz
fwait
test
popa
mov
and
push
dec
push
xchg
pop
sbb
cmp
mov
pop
pop
pop
xchg
add
add
mov
xor
repnz
cmpb
shl
lea
sub
xchg
xchg
sbb
xor
fidivs
fldt
adc
and
xchg
aaa
mov
sbb
add
push
outsb
xor
push
jg
cmp
cltd
pop
cmp
xchg
adc
pop
call
jbe
frstpm(287
outsl
adc
mov
int3
push
cmp
mov
sti
xor
and
mov
push
push
not
sarl
pop
mov
add
cmp
lcall
push
imul
in
gs
clc
repnz
inc
ss
leave
shrl
cmpb
pop
xchg
shlb
jecxz
lret
push
cmpsb
and
and
das
dec
xor
jnp
jp
insl
mov
fldt
xor
pop
cli
cmp
stos
add
jbe
add
fidivrl
push
add
popf
clc
int3
mov
dec
jl
sub
mov
fists
ss
jl
rclb
or
xchg
xcrypt-cfb
cmpsl
mov
push
sbb
pop
push
test
dec
pop
ret
adc
cmpsl
jbe
cmpsl
add
sbb
ds
pop
pop
add
ret
xchg
pusha
roll
movsl
xchg
call
test
fimuls
xchg
jecxz
pop
cmp
rcl
popa
bound
mov
loop
test
and
add
and
sbb
jg
insl
lds
arpl
decl
pushf
nop
pop
push
pusha
scas
jle
jle
lods
or
leave
pop
cmp
sbb
imul
movsl
dec
pusha
adc
cmc
pusha
stos
outsl
stos
rcrb
push
jbe
adc
sti
fwait
jbe
add
and
repnz
mov
lcall
pop
rorb
push
pop
fmuls
add
addr16
mov
or
ret
mov
mov
out
add
push
mov
shll
incb
push
jae
cli
sbb
into
lods
jmp
test
add
aam
das
mov
andl
mov
in
cmp
push
int3
test
test
lock
out
mov
out
fcmovnb
sarb
rolb
inc
icebp
out
les
ret
and
cmpsb
mov
lahf
jbe
pushf
test
sbb
push
loopne
and
je
shr
xor
fnsave
test
pop
stos
sub
cmpsl
les
adc
xchg
lods
leave
andb
mov
leave
loop
je
or
call
test
mov
sahf
js
pop
cmp
clc
sub
fidivl
xchg
roll
ret
cmpsl
sti
popl
int
es
add
sarb
arpl
jns
cmp
inc
shlb
adc
ja
es
roll
inc
jle
popl
das
pusha
add
imul
xlat
inc
inc
stos
jne
rcrl
enter
aad
push
mov
cmp
jb
in
sbb
stc
dec
dec
or
push
cmp
xchg
mov
jg
mov
mov
jmp
sub
cli
xor
cmc
add
xor
add
lea
loope
dec
inc
lods
push
outsb
cmp
jae
sub
pop
repz
adcl
ret
andb
mov
or
fcoml
inc
mov
push
pop
dec
andps
sub
pop
sbb
ss
iret
cmp
mov
lds
push
xor
nop
cmp
mov
xchg
test
js
push
pop
aad
out
mov
mov
fcomps
jge
fbld
cmpsl
pop
inc
sub
cmp
adc
test
js
pop
jg
add
mov
jae
jmp
or
and
cs
adcl
adcb
cmp
testb
cmp
cltd
nop
icebp
jno
and
ss
xchg
inc
mov
imul
or
add
or
sbb
lods
aaa
aam
cmp
aam
push
inc
popa
jae
jg
fisubrl
xchg
xchg
jo
into
das
pop
pop
push
jle
xchg
rcrb
adcl
mov
clc
inc
add
push
dec
or
or
pop
ficoml
adc
cmpsl
adc
sub
jbe
test
sti
sahf
sbb
in
sbb
dec
cmp
mov
shl
inc
cmp
cs
imul
cmp
jp
xor
nop
test
lahf
iret
les
adc
push
adc
cmp
imul
push
add
mov
sub
cmpsb
add
or
cwtl
dec
or
mov
push
dec
les
ds
lock
push
jge
out
push
shll
xor
scas
jle
pop
imul
jecxz
test
mov
loop
xchg
fwait
mov
loopne
pushf
sbb
xchg
repz
jo
sbb
push
out
inc
sub
mov
dec
mov
int
dec
pop
jb
sub
push
mov
mov
pop
xchg
loop
mov
mov
jle
shll
mov
sbb
aam
sbb
add
fstl
xor
sarl
xchg
dec
mulb
shrb
fcmove
push
mov
add
push
pop
lret
push
add
scas
mov
ror
add
shrb
ret
mov
data16
in
fdivrs
mov
stos
aad
loopne
push
subl
mov
xor
cmp
sbb
xchg
fdivrl
ss
aaa
test
lea
inc
repz
outsl
sarl
mov
mov
add
or
xor
stc
mov
pop
sbb
test
fldt
jno
das
std
fcmovu
adc
ret
push
lods
push
loop
fcmove
or
ret
inc
pop
std
xchg
jl
jle
jo
pop
pop
fidivrs
vpshaq
mov
jle
les
adc
or
xor
aam
sub
cmpsb
lcall
mov
nop
cld
in
pop
dec
aaa
pop
hlt
daa
pusha
dec
lock
gs
jo
dec
jl
add
sbb
xchg
xor
xor
mov
mov
outsb
jb
add
push
aad
or
rolb
movsb
int
pusha
or
repnz
xor
ss
rclb
dec
fimuls
mov
sub
add
cmc
jns
pusha
fisubrl
push
pushf
je
ja
inc
mov
into
sbb
mov
dec
xorb
in
sbb
mov
jmp
fimull
inc
std
mov
inc
daa
xor
sbb
inc
fmul
nop
in
inc
pushf
fistpl
pop
sub
cmpsl
xor
aam
jne
xor
cmp
andb
push
push
call
inc
sbb
stc
aas
ljmp
insl
sbb
call
stc
in
dec
jp
ret
xchg
aam
cmpsl
lock
outsb
inc
sub
outsl
or
nop
arpl
mov
fwait
aam
mov
adc
fcom
push
inc
aad
dec
insb
in
push
cltd
decb
pop
popa
shll
dec
repnz
jns
orb
arpl
push
sbb
jns
mov
mov
xchg
add
cmp
es
cmp
cmp
sti
lea
xchg
and
sub
dec
mov
pop
aad
dec
sbb
decl
or
rorl
ljmp
sub
leave
lea
ja
in
outsb
and
mov
sbb
xlat
add
insb
sahf
outsb
imul
rol
rcpps
pushf
cmp
jne
test
sub
xchg
lret
mov
ret
std
les
sti
fidivrs
nop
jmp
pushf
sbb
out
cli
mov
adc
sbb
cli
dec
fwait
adc
xchg
lock
adc
insb
in
inc
ret
repz
cmp
sbb
int
xor
imul
rcrb
pop
dec
nop
add
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
sbbl
movl
andl
mov
mov
mov
addl
xor
xorl
add
andl
mov
and
mov
xor
push
mov
mov
adcl
add
mov
and
mov
sub
mov
mov
mov
movzwl
sbb
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
sbb
mov
or
movb
lea
movl
cmpl
je
cmpl
jle
jmp
push
pushl
call
mov
dec
mov
jmp
mov
adcl
mov
mov
xor
dec
addl
mov
and
movl
jmp
sub
call
ret
int3
pop
mov
sbb
and
pop
pop
jp
test
add
in
cltd
and
cmpsl
hlt
sbbb
scas
aad
jmp
dec
shlb
ljmp
insl
rclb
imul
cmp
gs
mov
aaa
ds
stos
cli
jb
push
jp
add
stos
or
lock
mov
imul
xchg
hlt
test
inc
enter
mov
gs
lock
mov
inc
movsl
or
aaa
jnp
shlb
or
int3
lret
aas
aam
pop
cli
cmc
mov
xchg
repz
sub
cmpb
pop
sub
outsl
pop
mov
push
lahf
imul
push
mov
xor
add
in
jns
ss
jae
sub
ljmp
rclb
push
dec
adc
push
dec
ds
int
pop
and
sub
jge
sub
repnz
or
into
sar
mov
xchg
pushf
push
data16
xchg
jecxz
push
dec
aam
fidivl
mov
mov
fidivs
xorb
mov
aas
or
mov
inc
out
lret
decb
mov
jns
movsl
loopne
aam
add
mov
jge
les
in
push
adc
xor
nop
loope
pop
jmp
daa
fildll
aam
and
cmp
in
mov
jmp
ja
push
clc
sahf
popl
cli
pop
dec
jl
ret
mov
nop
fisttpll
mov
inc
stos
test
out
mov
or
jo
pop
inc
xchg
cmpsl
sub
add
mov
test
adcl
jmp
rorb
test
jmp
xor
xor
push
mov
add
push
mov
pusha
scas
stos
xor
movsb
scas
decb
fistps
mov
testl
js
sbb
pushf
int3
pop
popf
sbbl
hlt
mov
and
jl
les
jb
sbb
mov
mov
xor
je
jecxz
push
scas
xor
sbb
or
popa
aad
outsl
adc
inc
lcall
xchg
push
pushf
mov
js
pusha
cmp
jnp
in
adc
aaa
or
or
sbb
xor
stos
test
arpl
sarl
sub
fcmovnb
cmp
jge
mov
in
repnz
hlt
add
and
mov
or
push
xor
arpl
scas
pop
xor
add
xorl
sahf
cmp
arpl
test
shll
les
clc
mov
mov
outsb
ret
push
push
pop
add
mov
aaa
mov
popf
xor
adc
xchg
idivl
out
mov
inc
call
xchg
add
test
xchg
adc
cli
out
call
add
inc
or
je
addl
arpl
enter
ss
and
iret
jl
jbe
inc
sbb
xchg
in
andb
lea
adc
and
dec
pusha
icebp
pop
xchg
mov
xchg
mov
int
and
sbb
jae
cwtl
xor
stos
push
lods
ret
ja
je
jge
mov
jbe
jne
adc
sub
jge
fstl
xor
mov
xchg
in
stos
sbb
or
xchg
xchg
cmp
jne
mov
add
xchg
lods
in
mov
dec
ss
jnp
dec
adc
in
aam
fnstcw
add
add
data16
ss
mov
adc
jge
in
xor
pushf
je
sbb
imul
popf
adc
xchg
or
add
jae
in
stc
cltd
int3
adc
mov
pop
lea
inc
pushf
cwtl
push
or
push
and
xchg
sbb
xchg
outsl
jno
xchg
fwait
dec
mov
pop
push
pop
lcall
xchg
dec
ret
jbe
sub
pop
insl
mov
ja
mov
mov
mov
cmpb
cmp
adc
stc
repz
jmp
push
sbbl
add
mov
sub
mov
mov
cwtl
jo
dec
jne
inc
push
push
aam
hlt
push
fwait
mov
rcrl
int3
xchg
ret
imul
mov
mov
or
jge
mov
int3
xor
lret
dec
sbb
adc
and
inc
push
fincstp
adc
adc
iret
das
jmp
scas
cmp
xchg
xchg
out
inc
pusha
bound
dec
xchg
fnstcw
mov
pop
pop
mov
lods
mulb
std
les
lcall
outsb
aaa
jp
ja
imul
push
and
sub
js
push
test
lods
mov
adc
mov
mov
movsb
lret
sbb
loopne
inc
pop
cmp
inc
test
sti
jbe
je
mov
mov
sub
in
cvtpi2ps
or
daa
imul
push
and
inc
out
into
aad
outsb
jb
es
ffree
fldt
sub
mov
out
sub
pushf
fdiv
xlat
stos
repz
push
loopne
inc
jecxz
out
inc
mov
and
sti
push
popa
ret
jnp
pop
popf
mov
jmp
mov
jg
push
pusha
jmp
push
hlt
ficompl
jne
jecxz
cld
xchg
inc
push
icebp
out
xchg
jb
out
cltd
fdivl
push
adc
ja
aas
add
sub
inc
pop
fildl
out
aas
cmp
aas
adc
sahf
or
cli
jo
sbbb
rolb
in
das
xor
insb
cmp
or
jae
lods
adc
arpl
push
mov
mov
dec
or
testb
add
fistps
pop
cmp
dec
mov
jne
or
adc
orb
mov
xor
insl
push
outsb
mov
mov
cmpb
nop
sub
mov
mov
sub
lret
jmp
int
inc
pusha
sbb
inc
cmp
jle
das
dec
add
xor
ret
mov
mov
cld
test
ds
sbb
inc
push
add
cwtl
lds
in
frstor
stos
xchg
mov
je
mov
jae
cmpsb
mov
test
jle
int3
push
imul
insl
push
or
mov
sub
nop
add
mov
xor
stc
call
test
out
cmp
dec
lret
ret
stos
push
lds
xchg
xchg
stos
cmp
into
sbb
sub
mov
adc
and
sbb
mov
stos
cmp
shlb
pop
shrl
sti
push
outsb
imull
imul
enter
out
lcall
popa
sub
adc
inc
xchg
ret
gs
mov
push
jmp
lret
pop
subl
adc
inc
aam
sbb
popa
ja
lret
sbb
or
jae
loope
divb
mov
mov
orl
xchg
leave
fcmovnbe
pop
and
ja
jl
cmp
jno
shlb
inc
add
sbb
jg
xchg
roll
xor
in
or
adc
es
iret
ret
gs
imul
ljmp
cmc
cs
pusha
xchg
inc
cld
add
cwtl
pop
xor
arpl
daa
stos
outsb
mov
ret
outsl
jno
pop
and
jg
cld
fs
fcmovu
stc
pop
out
ficoml
xor
hlt
dec
or
xlat
mov
mov
lock
in
icebp
inc
gs
movsl
sahf
xchg
jg
and
fwait
gs
xorb
pushf
push
nop
fsubl
xor
mov
jno
adc
sub
dec
or
pushf
and
fcmovbe
dec
xor
das
add
xor
pusha
mov
mov
dec
imul
push
ss
mov
orl
cltd
cmp
jb
pop
negb
ss
mov
xchg
movsb
jecxz
loope
jns
and
clc
test
cmpsl
add
push
popa
movsl
insw
lods
push
cli
adc
in
mov
xchg
in
das
pop
push
cmp
jno
adcl
cmp
dec
pop
mov
popa
pop
decb
adc
je
fidivl
mov
xchg
push
ffreep
hlt
movsb
test
push
in
push
ds
icebp
ja
add
inc
push
out
xchg
fidivl
add
pop
inc
stos
xor
std
sti
sbb
pop
repz
xor
fdivrs
aas
dec
inc
dec
push
and
stos
scas
jl
inc
ficoms
and
sbb
inc
xchg
push
testl
mov
mov
xchg
in
xchg
cltd
pop
and
add
ror
cltd
lods
jbe
divl
mov
les
into
jg
fwait
shlb
dec
mov
insb
push
addr16
ja
jle
mov
cmpsl
ljmp
xchg
ret
jecxz
cwtl
shll
stos
addr16
cmp
mov
aad
pop
roll
jno
push
jecxz
adc
int3
inc
fs
inc
xor
pop
pop
hlt
scas
mov
sub
in
xchg
imul
mov
add
jno
nop
mov
cmpsb
push
mov
cltd
jbe
mov
push
sub
mov
jge
addr16
add
loopne
mov
adc
aad
scas
in
cli
scas
mov
call
mov
lret
sahf
jp
mov
jl
ljmp
aaa
xchg
or
mov
pop
push
jge
mov
mov
jnp
iret
push
cmp
outsl
outsb
and
sub
xor
pushf
loop
or
add
cmp
lods
sbb
dec
add
xchg
dec
cs
mov
add
into
pop
sti
push
ficompl
in
mov
jbe
shl
jo
xor
ret
mov
stc
aas
ds
adc
cmpsl
and
adc
pop
add
xchg
mov
test
cmp
out
inc
push
sarl
xorl
and
fisubrs
sbb
xor
mov
push
sub
clc
mov
cmp
mov
adcl
icebp
inc
cmp
ljmp
jne
lods
pop
inc
jle
sarb
bound
dec
cltd
xor
out
and
xchg
mov
xor
jbe
inc
xor
or
test
push
add
insl
jecxz
xchg
inc
pop
aad
dec
jmp
sub
mov
inc
shr
xchg
sbb
outsb
xchg
push
dec
mov
hlt
sbb
dec
sub
sbb
jns
pop
sbb
mov
push
jmp
sub
scas
cmp
pop
lds
dec
sti
inc
repz
imul
rcrb
addl
lods
cli
lret
jnp
inc
stos
rcrb
lock
mov
enter
bound
pop
add
mov
adc
cmpl
mov
je
and
pop
jge
mov
aad
enter
js
sti
push
stc
push
pop
test
adc
add
cmp
ret
and
pop
in
scas
lods
push
jecxz
xchg
out
xor
mov
rclb
mov
adc
lahf
call
lods
std
leave
xchg
cltd
cs
iret
scas
leave
mov
das
dec
scas
lds
fwait
enter
mov
lods
in
bound
mov
mov
pop
add
push
popf
pop
jge
mov
pusha
lret
icebp
jmp
enter
ret
inc
in
jge
dec
outsl
push
mov
mov
sub
pushf
js
out
insl
add
push
pop
and
pop
mov
sub
sahf
xor
lret
fldt
mov
and
push
xor
mov
movsb
pop
outsl
ss
andl
mov
mov
push
cmp
add
hlt
cmp
rcl
loopne
push
int3
into
idivb
pop
xchg
roll
stc
sub
mov
push
movsb
inc
mov
adc
mov
adc
cwtl
lret
ljmp
sub
aam
ljmp
rclb
ljmp
stc
int
and
mov
dec
pop
mov
or
scas
dec
lea
cltd
lods
test
out
mov
cmp
cmp
mov
or
dec
and
outsb
jnp
dec
xchg
ficomps
adc
sub
mov
stos
ja
lcall
int3
nop
test
pop
xchg
or
out
add
int3
inc
push
shl
jecxz
add
mov
inc
je
scas
sub
cmp
jae
insb
mov
ret
insb
xchg
aaa
out
clc
in
out
push
push
iret
lahf
jl
outsb
fdivp
pop
mov
test
pop
frstor
imul
into
xchg
sub
jecxz
lds
aad
popf
xchg
inc
ret
jae
cmp
loop
and
push
sub
xor
jne
jbe
fdivr
aas
or
test
add
cltd
and
insb
mov
mov
ret
cmp
xor
sub
addr16
ljmp
scas
and
addr16
mov
push
pop
cld
sbb
xor
fsts
mov
add
and
mov
in
cld
jmp
adc
mov
jns
in
lds
lods
jg
movsl
xchg
hlt
out
jnp
mov
imul
sbb
cmpsb
adc
xor
pop
push
push
in
cmpsl
lods
mov
fnsave
dec
adc
mov
mov
lcall
pop
pop
call
pop
and
aaa
sub
jle
mov
es
mov
adc
ds
mov
xchg
and
inc
mov
cmc
xor
cmpsl
xor
out
inc
out
jbe
dec
add
xchg
inc
cmp
stos
scas
leave
push
inc
xor
ja
test
pop
scas
mov
mov
sub
pushf
inc
xor
push
mov
icebp
cmp
pop
pop
cs
jno
nop
lods
sub
sbb
pop
inc
int3
mov
add
ret
ret
jmp
mov
inc
cltd
dec
xchg
in
popa
inc
popa
dec
fbstp
lahf
cmp
adc
fistpll
jp
pusha
stos
cld
pop
rcrb
push
fninit
cmp
clc
adc
outsl
add
je
or
xor
jl
lret
xchg
pop
and
mov
arpl
xor
es
lea
jle
and
addr16
inc
ds
mov
xchg
lock
aaa
and
loope
sbb
sub
cmp
push
mov
loop
popa
movsl
add
vmread
andb
ret
lcall
push
and
test
xor
dec
aam
jle
mov
xchg
lret
dec
repnz
fwait
xchg
outsl
adc
mov
sti
out
sbb
jb
jbe
lret
xor
adc
cmpl
inc
pop
fs
inc
addr16
adc
dec
test
pop
subb
lret
loop
mov
fcomip
mov
mov
push
and
sbb
mov
mov
orl
ljmp
pop
push
mov
xor
repnz
int
or
push
dec
mov
dec
mov
jmp
jle
add
rorb
mov
jecxz
lock
fdivs
cmp
push
push
lds
xor
push
pop
fistl
cmp
popf
aad
subb
cmp
inc
cmp
pop
jle
pushf
mov
int3
xchg
xchg
mov
mov
mov
pop
mov
fidivrs
sbb
pop
inc
leave
out
lods
les
inc
inc
sub
nop
rorl
xor
or
addb
jp
sub
mov
push
or
cmp
call
push
sahf
mov
aam
fwait
push
sahf
sbb
repz
std
cld
sub
mov
xchg
adc
pushf
add
sbb
inc
add
mov
and
jl
sub
pop
lds
fimuls
clc
jle
mov
insb
dec
out
int
pushw
negl
int
cs
dec
and
add
outsb
fisttps
add
xchg
sub
jne
fists
cld
mov
mov
js
das
imul
jns
cmpb
fildll
sbb
int3
rolb
pop
xchg
pop
ljmp
pop
dec
popa
loope
xchg
pop
popf
aas
ret
sbb
inc
lcall
or
movsb
lock
loopne
add
pop
outsb
mov
sbb
lds
sbb
outsb
out
bound
xchg
dec
insl
adc
mov
mull
inc
loope
xor
rcrl
sub
and
jnp
dec
dec
data16
jo
in
in
int3
out
flds
and
pop
pop
adc
daa
sub
push
iret
js
lea
aaa
lea
mov
mov
mov
sbb
shll
shl
lret
shll
scas
push
lcall
push
lea
ss
lods
gs
mov
and
sbb
stc
movq
cltd
xor
mov
divb
js
pop
and
movb
jno
dec
leave
mov
mov
and
and
in
inc
dec
fstpt
orl
std
mov
int3
pop
ds
inc
pop
loope
pop
jecxz
scas
lea
sbb
add
out
clc
or
lds
add
in
sbb
movsl
test
outsl
out
or
push
xor
dec
out
adc
xchg
testb
or
jae
notl
and
shl
xchg
jmp
or
pop
push
jae
push
xchg
jle
in
mov
cmp
int3
fadd
imul
xor
ja
fists
loop
jecxz
pop
mov
gs
push
pop
and
mov
xchg
or
xor
loope
push
pop
es
pop
push
dec
mov
lods
mov
mov
push
test
fucomip
fwait
outsl
test
adc
pop
lods
test
jns
data16
cmp
or
push
adc
fwait
hlt
test
mov
mov
lret
mov
jp,pn
in
mov
sbb
ss
lock
cmp
push
mov
sub
inc
call
repz
pusha
adcb
leave
inc
sbb
mov
xor
imull
xchg
out
push
lcall
outsl
aad
mov
mov
dec
cmp
lods
mov
pop
pop
je
in
adc
lods
fnstenv
incl
pop
sub
enter
sbb
mov
cwtl
popa
cmp
xorb
ljmp
sub
jle
loope
pop
mov
mov
xchg
adc
shll
fnstsw
mov
push
adc
sub
mov
stos
mov
ja
sarb
lds
lods
std
cmp
jg
jle
ficompl
fwait
out
popa
fcmovnbe
shll
mov
pop
cmc
jns
mov
es
pop
add
xchg
pop
mov
cmp
adc
jns
mov
mov
fs
cld
jbe
arpl
fidivrl
movsl
test
lock
push
js
and
and
movsb
adc
insb
lea
arpl
shll
cs
lahf
cmp
aas
xchg
mov
or
push
jle
pop
fistl
daa
cmc
das
xchg
adc
mov
push
scas
sub
mov
pop
stos
shrl
insb
das
inc
cltd
imul
xchg
fs
int
pusha
je
pushf
add
shlb
test
sub
jg
scas
push
and
dec
test
es
push
bound
sub
leavew
sbb
pop
push
jbe
mov
inc
es
add
adc
cmp
jl
ret
inc
dec
or
leave
in
xchg
das
pop
shll
subl
fwait
or
sub
ficoml
stos
pop
adc
out
or
int
pop
sbb
mov
or
sbb
dec
ljmp
loop
sbb
inc
enter
pop
fists
rcr
and
xor
orb
xor
out
jmp
aad
shrl
xchg
pop
or
jns
shrl
loopne
dec
outsb
outsl
addr16
dec
in
in
in
mov
and
mov
int3
xchg
jae
sub
stos
dec
ja
call
or
je
jl
popf
pop
jne
add
xchg
mov
sbb
push
ret
lods
fwait
daa
push
icebp
push
lret
sub
fdivp
lds
pop
push
push
jecxz
addr16
pop
lods
cltd
pop
jae
sub
sahf
enter
and
sti
popa
push
jo
stc
and
nop
cmc
sub
dec
pop
loop
jb
outsb
push
lret
inc
mov
std
out
imul
jb
in
push
hlt
lcall
jle
xor
stos
mov
daa
cmp
inc
stos
in
fwait
sub
xchg
addr16
sbb
out
mov
sahf
push
or
ja
cmp
xchg
xchg
insb
cltd
jg
loopne
mov
jle
push
push
out
and
loopne
test
pop
push
ror
out
mov
imul
dec
xor
or
testl
loope
lods
test
stc
test
loope
jno
in
pop
or
dec
or
adcl
mov
jecxz
imul
fs
sbb
xchg
sub
xchg
gs
in
cmp
jmp
sahf
xor
sbb
mov
call
dec
push
rolb
mov
jnp
xor
sbb
loopne
and
push
and
dec
jp
js
movsl
insb
cli
mov
mov
mov
out
add
das
inc
inc
jno
inc
jg
mov
lods
mov
dec
aam
repnz
ja
mov
loope
and
cmp
bound
sbb
mov
mov
cld
mov
bound
xchg
aaa
mov
loop
cmp
mov
movsl
dec
jno
mov
fidivrl
pop
mov
shl
sbb
cli
into
mov
jb
cli
sahf
jae
out
mov
out
dec
cmp
jle
push
fistps
mov
push
mov
pop
inc
lcall
mov
aam
push
shlb
pusha
mov
in
push
dec
xchg
mov
mov
pop
sub
repz
outsl
shll
pop
jbe
fcmovne
adc
and
mov
in
jp
cmpsb
sbb
push
insb
stc
cld
sub
aaa
inc
dec
add
imul
xchg
push
je
pop
decb
xchg
loop
xor
jmp
mov
adc
fidivs
fs
fmuls
flds
lcall
bound
movsb
mov
jb
mov
jp
push
jne
xchg
mov
dec
lret
sbb
mov
mov
push
hlt
push
js
fdivrl
movsb
aam
mov
jbe
dec
lds
fdiv
adcb
out
sub
js
sbb
and
mov
mov
xchg
dec
jge
add
jl
fbld
aam
push
pop
clc
dec
movsb
dec
pop
outsb
and
leave
push
or
or
movsb
mov
fcompl
adc
rol
pop
aad
xor
jmp
xchg
fs
mov
fsubrs
mov
fsts
in
sub
pushf
cltd
push
jl
dec
ret
cwtl
sarl
scas
out
popa
push
popa
ds
test
aas
cmp
fidivrl
inc
fisttpll
sarl
insb
cmpb
pop
test
sarb
xor
xchg
stos
dec
push
mov
call
jnp
std
cltd
add
pop
hlt
fistps
test
push
shlb
push
add
mov
jb
ds
dec
and
adc
out
outsl
arpl
push
mov
xchg
popf
or
lret
lea
fsubl
cli
dec
rcl
loope
pop
test
movsb
xchg
insl
push
mov
mov
imul
push
mov
cld
cmc
fwait
mov
loopne
adc
push
pusha
and
mov
jg
and
xchg
or
shrl
jle
inc
movsb
aas
pop
cs
cmp
sub
dec
mov
push
or
pop
push
cli
loop
ret
and
mov
cmp
fs
jne
sbb
fwait
lock
std
xchg
in
push
xchg
mov
mov
daa
adc
jo
lock
lcall
inc
cwtl
insl
lahf
cmpsb
clc
inc
lods
dec
stc
fstl
aaa
movsl
rcrl
leave
bound
mov
adc
addl
mov
outsb
pop
push
mov
cmpsl
mov
xor
mov
mov
sbb
test
mov
xor
leave
add
imul
jb
popf
push
shld
movsb
pop
push
jae
fcomp
das
or
push
les
leave
in
popa
mov
dec
jns
popa
fcmovb
test
idivl
hlt
ja
dec
icebp
mov
cmpb
adc
add
xor
lock
pop
adc
jo
xor
sti
inc
in
jno
dec
jle
pop
arpl
mov
cmp
sahf
jg
nop
test
loope
stos
xor
mov
mov
aaa
mov
adc
gs
xchg
adc
and
hlt
in
mov
push
adc
sarb
and
jle
aaa
loope
push
out
pop
jne
lods
lahf
cltd
repz
cld
jle
fistpll
xor
pop
ds
dec
jbe
sub
into
popf
inc
mov
mov
into
test
inc
ret
ret
pop
arpl
mov
inc
cmpsb
out
jb
inc
addr16
loop
push
adc
popa
sbb
loope,pn
push
add
pop
lahf
jne
xchg
loop
fidivrs
mov
dec
mov
cltd
mov
mov
jb
mov
push
adc
sbb
lods
push
test
subb
bound
fs
sub
adc
outsb
arpl
or
cmp
add
mov
loope
insl
dec
out
sbb
sti
imul
and
push
add
pusha
aad
int3
or
push
in
or
repnz
pop
pop
sub
sbb
jns
mov
lcall
cli
mov
loop
int3
jno
jo
popa
lods
mov
ja
cmpsb
je
shrl
adc
addr16
in
ja
aad
lods
jl
cwtl
cli
cmp
lret
mov
cmc
pop
xchg
sbb
push
dec
fsubrs
pop
inc
sub
ret
lods
std
cmp
clc
lcallw
sbb
shr
add
add
pusha
fistl
cmpsl
inc
adc
xchg
popa
dec
icebp
push
inc
sbb
cwtl
and
test
popa
ret
out
push
sub
out
int
jge
sbb
adc
mov
popf
iret
jge
in
test
jbe
inc
out
add
sbb
call
push
je
sbbl
pop
cmp
arpl
fnstcw
xchg
lret
push
ja
lods
hlt
cmpsl
adc
rcrl
scas
dec
insl
xchg
cwtl
sub
fisttpll
sub
sti
push
xlat
jb
pop
lcall
nop
and
push
lds
std
mov
pop
in
inc
push
mov
ss
mov
es
adc
jl
push
in
dec
jg
faddp
int3
inc
pop
pop
out
test
inc
sbb
sub
or
adcl
outsb
lahf
clc
or
ss
pushf
stos
in
sub
in
mov
sub
mov
jns
adc
pop
iret
jo
xchg
mov
imul
std
aas
push
fmull
pop
popa
push
push
addl
rcll
fildll
aaa
in
mov
stos
loop
fwait
sbb
outsb
fildl
popf
dec
add
int3
cs
xor
pop
mov
jmp
in
into
in
sahf
push
ds
sub
lds
addr16
test
lahf
pop
sub
testb
leave
es
jge
jno
stos
inc
addr16
dec
inc
mov
inc
jno
jnp
cmp
push
mov
pop
add
sti
pop
movsl
or
jne
jl
in
js
and
sbb
jae
std
es
pop
add
and
cs
push
outsl
pop
add
or
or
popf
xor
push
adc
jo
movsb
fmul
sub
mov
jns
jmp
incb
mov
pop
inc
sti
orl
popf
push
loop
sbb
jecxz
ja
mov
sub
mov
sub
push
dec
push
leave
and
in
pop
test
lea
fsubs
jo
cmc
or
inc
popa
or
inc
pushf
mov
test
mov
lock
cmp
dec
cld
stos
leave
repz
orl
repnz
loopne
xchg
mov
into
fwait
push
and
out
pop
addr16
notl
and
mov
lock
pop
jmp
jb
mov
cmp
cmp
out
loope
pusha
dec
mov
xchg
inc
pusha
lret
push
cwtl
mov
arpl
inc
sbbb
sbb
pop
mov
push
sub
ds
push
lret
push
cmp
cmp
and
xchg
cmpsl
cmp
repz
aam
dec
rorb
or
cmp
pop
pop
ret
mov
mov
ljmp
push
mov
sbbb
xlat
imul
or
pushf
adc
pop
movsl
faddp
imul
xchg
jecxz
mov
decb
pushf
cltd
aad
push
int3
das
fldcw
mov
sti
daa
mov
cmp
pop
loope
das
mov
mov
inc
pop
xlat
mov
in
dec
mov
mov
icebp
or
out
cmp
xchg
lds
dec
cmp
or
push
xchg
pop
repnz
dec
xor
outsb
jns
enter
gs
shll
and
sti
out
jmp
or
std
mov
ret
pop
stc
addl
push
or
movsl
ss
sahf
leave
andb
jge
ret
sub
pushf
push
xchg
int3
es
mov
es
notl
fwait
cmp
ja
ja
out
loopne
lea
mov
int3
orl
jae
mov
pop
adc
dec
enter
and
mov
je
out
repz
adc
push
aad
test
cmp
mov
fidivl
das
aaa
add
aam
add
mov
xchg
pusha
arpl
mov
in
xchg
sbb
dec
movsl
sbb
push
sub
mov
sbb
mov
roll
push
test
mov
in
stos
stc
mov
ror
dec
ret
rol
mov
aam
xchg
adc
xor
aam
xbegin
fnstsw
fdivrl
popf
inc
movb
push
xchg
mov
inc
arpl
push
xchg
mov
repnz
mov
mov
add
outsl
dec
mov
lahf
mov
shrb
clc
sub
push
push
pop
aad
cwtl
mov
cs
dec
add
ret
mov
push
call
xchg
xorb
push
test
sub
ffree
push
scas
imul
jg
pop
ret
add
xchg
and
sub
les
fidivrs
mov
jno
push
clc
inc
push
pop
movsb
mov
in
push
sub
dec
jbe
mov
mov
push
negl
or
inc
mov
push
cmpsl
sahf
pop
mov
or
mov
fbld
scas
adc
and
dec
loope
ds
sbb
in
mov
cwtl
xchg
and
push
clc
test
ds
das
mov
int
pusha
xchg
pop
js
adc
stc
hlt
mov
mov
roll
faddl
or
xor
xchg
add
movl
sub
jmp
adc
lea
cmp
jp
pop
pop
jp
ds
xchg
repnz
cwtl
std
popa
pop
add
dec
mov
pop
mov
fldl
dec
and
ret
xchg
cbtw
aam
andb
arpl
test
scas
sub
out
pushf
or
cli
mov
aas
dec
adc
push
mov
hlt
repnz
rclb
pop
popa
or
nop
mov
or
enter
xchg
inc
das
movsl
xor
pop
xor
mov
lahf
and
nop
jp
int
sub
pop
sbb
xor
sub
push
andb
xchg
inc
pop
stos
js
push
mov
adc
jge
and
add
xor
mov
in
orb
mov
shl
cmp
sub
adc
cmp
divb
aaa
xchg
mov
mov
je
cmpsb
loope
mov
xchg
enter
pusha
aam
add
mov
mov
mov
push
testl
stos
repz
das
dec
jns
jno
out
jl
dec
mov
mov
cs
jp
cmpsb
cmp
je
add
push
jo
sub
dec
lock
popw
movsl
clc
mov
in
mov
jle
pop
rcrb
insb
add
xchg
pop
cltd
sub
xchg
sahf
and
adc
int
sbb
push
pushl
mov
jnp
xor
add
fcoms
cmp
jne
jmp
cmp
or
fnstsw
lret
scas
movsl
in
sub
mov
xor
insb
xorl
call
push
clc
add
cmc
andb
movsl
lods
loop
and
popa
mov
adc
mov
rolb
pusha
stc
in
dec
cmpsb
outsb
call
cmpsl
pushf
addr16
stos
mov
xchg
mov
out
inc
aam
add
mov
sbb
jae
sbb
jne
sub
cmp
add
aaa
inc
movsb
xchg
ds
push
jae
mov
lcall
ja
jmp
je
and
mov
and
xchg
jo
arpl
mov
fimull
icebp
mov
fdivrl
rcl
mov
lock
shrl
pop
stos
in
jnp
sbb
in
and
int
pop
pop
loope
add
add
jno
jp
in
aaa
fldt
mov
cmpl
add
sahf
sahf
sbb
mov
pop
pop
xor
fwait
sub
cmpsl
test
or
mov
int
pop
jae
adc
sbb
mov
adc
movsl
scas
lret
or
jmp
pop
repz
fisttpll
inc
push
mov
lds
ljmp
lods
fs
fwait
jb
jle
pop
lock
orb
cmp
pop
adcb
push
loop
xor
mov
jge
jb
pop
sub
ljmp
mov
fimull
sarl
lds
xlat
mov
jmp
imul
sub
xor
pop
mov
lret
outsb
xchg
mov
movlps
lcall
cmpsl
cmp
scas
xor
sbb
ret
nop
sub
das
outsb
dec
mov
lcall
dec
mov
jbe
dec
mov
stc
aam
addl
les
xor
inc
pop
cmp
sbb
ficomps
pop
mov
xor
sub
cmpsl
mov
sub
in
repnz
xchg
push
mov
xor
call
inc
leave
fs
repz
ds
pop
jae
mov
mov
dec
pop
fdivr
das
or
push
xchg
cmp
push
negl
sub
lods
jnp
xorl
lods
pop
scas
xchg
call
sbb
les
add
pop
ljmp
out
and
out
shll
out
push
mov
hlt
cltd
or
cltd
pop
out
inc
pop
pop
adc
xor
inc
ret
pop
das
push
add
mov
rolb
xor
lret
das
mov
push
add
std
inc
pop
rorl
sbb
fcmovu
push
enter
push
inc
fwait
xlat
inc
data16
aad
movsb
loope
aad
pop
mov
pop
pushf
cmp
push
test
leave
pushf
loop
push
test
mov
aad
gs
stc
lahf
pop
stos
out
pop
xor
jbe
daa
jne
inc
mov
jne
xor
mov
mov
cmp
ss
sbb
dec
lea
xor
sbb
pop
repz
imul
dec
jp
cmp
cmpsl
daa
xlat
lcall
mov
outsl
mov
fdivrl
xor
jb
daa
or
mov
xchg
iret
xor
loop
push
addb
push
adc
es
xlat
je
repnz
mov
xchg
jl
add
jmp
mov
je
inc
jp
icebp
call
je
cmpb
std
repz
shll
movsb
sbbl
movl
mov
xchg
pop
daa
xchg
push
cmp
push
cmp
pop
lret
mov
mov
dec
flds
popa
lds
xchg
xor
jmp
mov
dec
fisubs
scas
lds
jns
dec
xchg
pop
mov
adc
test
in
dec
adc
adc
pop
adc
or
enter
xchg
lret
idivb
mov
fildl
adc
loope
jae
cmp
sub
aam
inc
clc
push
pop
jnp
mov
jae
sbb
add
fisttpl
cltd
xchg
jmp
outsl
dec
xor
fisttpl
jmp
jns
sti
out
aad
mov
imul
add
rcrl
fsub
call
inc
insb
push
xchg
ss
xchg
aas
sub
stos
and
fldenv
add
jp
jge
in
jns
mov
lcall
clc
fsubs
inc
xor
jbe
mov
mov
aas
fcomps
pop
les
and
shlb
stos
sbbl
les
movsb
daa
inc
mov
adc
xor
jge
jns
inc
sahf
push
stc
fldt
iret
in
mov
xchg
insl
out
inc
aas
inc
cmp
xor
and
test
mov
mov
cmp
sub
mov
push
jne
adc
lock
dec
cmp
mov
jge
add
mov
add
pop
dec
sbb
shlb
imul
lret
cmc
movsb
jmp
clc
cs
test
xchg
sbb
ss
jne
or
pop
cmc
mov
shlb
cmpb
and
loop
imul
ss
add
xor
daa
sti
add
icebp
mov
fistpll
jecxz
fcmovbe
divb
pop
push
pushf
fsubs
adc
addr16
add
lods
loop
lea
jle
das
or
movsl
dec
pop
mov
cmp
mov
or
iret
std
push
sbb
add
mov
or
bound
adc
fildll
adcb
arpl
adc
scas
dec
jb
push
jle
mov
mov
mov
add
and
rcll
js
ss
push
mov
ljmp
dec
out
add
and
daa
jle
jle
icebp
xchg
cld
jge
inc
push
pop
jns
mov
enter
lea
push
ja
pop
cmpsl
std
outsl
cli
and
leave
in
push
jae
pop
loopne
xchg
loop
ljmp
outsl
push
test
and
jnp
lahf
mov
divb
mov
loope
shlb
mov
loope
cmp
out
repnz
testb
jae
sub
pop
push
add
mov
stos
mov
mov
fs
pop
jae
push
cmp
loope
lock
inc
jns
xchg
adc
inc
dec
ret
div
sub
hlt
push
into
push
fwait
mov
xchg
or
push
mov
cmc
lahf
inc
jae
pop
bound
leave
subb
popa
shrb
sub
cmp
jae
mov
insb
push
dec
mov
testl
stos
out
xor
xchg
jns
jno
jo
jae
xchg
in
mulb
rcrb
mov
movsb
cmpsl
sbb
mov
jp
xchg
pusha
push
arpl
in
sub
pop
mov
in
push
dec
sbb
inc
enter
push
fidivs
outsl
sbbl
cwtl
cmp
pop
sbb
in
jnp
ret
inc
cs
xchg
and
jmp
imul
in
xchg
fwait
sub
sti
xor
push
dec
into
pop
shrb
loopne
pop
movsl
xlat
ret
fstl
jp
shlb
sub
cwtl
inc
leave
inc
movsl
or
jg
mov
mov
pushl
cmp
jecxz
shlb
inc
adc
sub
cmp
xchg
icebp
loope
fimull
adc
roll
xchg
adc
cmp
and
xor
ja
insl
cmp
push
ljmp
jp
sub
sub
jbe
push
mov
mov
insl
mov
idiv
push
xor
push
lcall
addr16
sbb
cmp
inc
dec
adc
sub
push
xchg
out
add
cmp
mov
fwait
pop
and
jns
pop
push
rcrb
aaa
add
fsubrl
popa
lds
shrb
stc
xchg
not
xchg
pop
xchg
imul
sahf
xrelease
jns
or
adc
jmp
lahf
cmpsb
scas
push
jmp
sub
push
lahf
mov
adc
cmp
mov
mov
stos
stos
pushf
cmpsb
add
jecxz
adc
jns
push
lahf
jbe
sahf
decb
xor
xor
aad
sbb
adc
pop
mov
iret
or
or
adcb
scas
jg
js
cmp
or
in
bnd
pop
push
call
daa
inc
push
dec
jns
outsl
cld
sbb
sahf
xor
lods
pop
or
loope
aas
and
mov
aam
xchg
cltd
mov
dec
mov
icebp
movsl
ss
aad
xchg
callw
or
add
daa
ficoml
out
stc
push
sbb
sbb
add
xchg
out
add
hlt
push
data16
xchg
jae
xorl
ds
jnp
rclb
add
push
es
loope
jo
testb
int
cltd
repnz
flds
jecxz
mov
dec
xor
push
inc
xchg
or
cmp
or
rcr
inc
lret
aad
dec
aaa
sbb
sbb
jmp
ret
xchg
or
mov
and
std
into
sti
rorb
push
sbb
clc
jo
push
clc
stos
add
sbb
jl
adc
roll
adc
in
cmpsl
cld
fisubl
dec
or
adc
sbb
add
jle
push
mov
mov
stos
inc
jne
push
lock
mov
jne
sbb
insl
shrl
in
inc
cli
jmp
mov
cmp
add
shl
rcl
xchg
lods
fsubl
mov
push
jb
and
or
subl
adc
mov
orl
cmpl
dec
int3
push
sbb
lods
scas
roll
mov
clc
xchg
mov
or
add
sub
addb
xchg
in
jo
cmpsb
jnp
pop
dec
int3
insb
push
pop
sarl
pop
xchg
jmp
jl
jmp
test
jg
mul
into
push
aas
pop
jg
leave
jae
xchg
dec
pop
push
inc
pop
cli
mov
mov
aam
loop
sbb
imul
lret
cmp
mov
rcrb
dec
push
mov
push
xlat
mov
dec
xor
iret
pop
jo
loopne
adc
mov
movsb
aam
mov
scas
mov
sub
nop
dec
repnz
pop
je
xor
daa
out
mov
and
adc
lock
ss
dec
test
xor
sbbb
mov
xchg
rcll
insb
repz
sbb
inc
pop
lock
arpl
cs
ret
into
and
pushf
lea
lods
js
adcl
shrl
dec
repz
lock
jb
xor
imul
jnp
jo
lods
sbb
pop
push
iret
imul
and
fs
jmp
mov
ret
xchg
fsts
cmpsl
sti
test
and
aas
es
and
mov
neg
mov
movsb
fstp
xor
scas
or
repnz
inc
int3
jbe
cmp
mov
addl
pop
and
pop
mov
cmpsb
rorb
cwtl
test
pusha
bound
roll
mov
das
pop
cmp
jb
fdivrl
aam
jmp
mov
dec
jo
xor
jle
lea
push
ja
add
cltd
cmp
dec
sbb
in
bound
push
push
das
jae
jmp
sub
jle
xchg
test
test
and
xchg
sub
push
xorb
lds
mov
xlat
imul
cld
inc
rolb
bswap
xchg
lock
fucomip
xchg
or
clc
or
in
rcrl
cltd
rol
add
aam
rcr
iret
test
repnz
scas
scas
inc
dec
and
and
js
test
jl
sbb
icebp
das
dec
sub
cmc
in
fsubr
sbbl
idivb
push
jg
sub
flds
in
scas
jl
push
jge
je
sti
lahf
fmull
test
lods
add
test
fucomi
push
cwtl
popa
leave
push
jmp
fcmovb
jne
mov
adc
int3
mov
mov
sti
dec
movsl
out
xchg
pop
push
push
xchg
lcall
sub
xor
lods
xchg
push
push
xchg
xor
mov
jmp
push
je
jle
add
ret
lods
lahf
lds
mov
insl
mov
in
insb
hlt
jnp
or
pop
push
jb
add
loop
push
or
pop
xor
adc
cltd
outsb
add
and
jbe
int3
pop
icebp
sbb
push
xor
dec
outsb
je
sbb
rcll
shll
xchg
into
xchg
sarl
imul
dec
adc
jb
sbb
xchg
or
not
ret
cmpsl
mov
sar
bound
mov
mov
sub
jne
loopne
test
cs
push
mov
punpckldq
mov
test
mov
loop
sub
jecxz
xlat
or
rorl
into
in
mov
enter
fldenv
flds
ljmp
add
xor
jb
mov
cwtl
or
movsl
jns
dec
test
lock
iret
aaa
mov
jp
add
add
cmp
xchg
fs
push
add
cld
adcb
sbb
or
or
sub
idivl
mov
or
popf
adc
mov
bound
mov
and
jle
sub
fwait
fwait
jmp
pop
cmp
jns
lods
shlb
test
scas
jno
cmp
pop
aas
add
test
orl
or
arpl
les
jb
xchg
xchg
sti
movb
adc
and
addr16
stos
fwait
out
dec
mov
adc
push
repz
in
mov
aaa
xchg
call
fcom
and
push
shlb
jns
and
fxch
and
push
imul
pop
outsb
push
jge
lock
mov
js
loope
movsb
dec
iret
stc
fisttpl
js
rclb
ret
sbb
call
fldcw
jp
pop
jnp
xorb
in
mov
pop
stos
ret
imul
loop
dec
xor
repz
lahf
filds
fdivl
jo
ret
scas
and
sbb
inc
pushf
scas
pop
sub
jo
push
ja
xlat
leave
inc
mov
mov
cmpsb
and
add
lods
pop
lods
or
pusha
aam
mov
aad
add
sub
mov
cmp
dec
in
xor
leave
push
pop
sbb
clc
pushf
sub
imulb
push
fwait
popf
jnp
std
std
cmc
das
out
ret
test
jmp
iret
adc
fs
push
jbe
and
add
js
cli
jo
es
adc
xchg
loope
xchg
cmp
inc
jo
dec
hlt
push
test
cs
pop
mov
divl
fisttpl
xchg
mov
les
pop
sub
sub
in
add
mov
loope
adc
fcoms
sti
pop
mov
xor
push
push
adc
push
mov
aam
jne
add
rcrl
mov
fiadds
ja
out
jae
sbb
jmp
fcmove
sub
add
iret
repz
sbb
xchg
cmpsl
rcll
inc
pop
test
mov
in
aas
je
dec
cli
mov
jnp
inc
jb
iret
int3
stos
xor
sub
adc
pop
dec
jo
data16
shl
inc
adc
jp
addb
ljmp
cmp
lock
sbb
jl
push
push
inc
sub
or
loopne
dec
sbbl
aaa
adc
add
jbe
call
stos
dec
inc
jge
xchg
xor
mov
fadds
movsl
stos
cs
iret
or
out
sti
sbb
xor
sarb
jns
adc
ss
inc
test
add
fisttpl
cmp
xchg
inc
cld
push
lret
push
push
popa
push
push
push
xor
js
xor
popa
and
shlb
in
jge
leave
mov
insl
ljmp
mov
pop
insb
call
fcoms
fcmovu
cmp
int3
jnp
dec
loope
push
cmpsb
cmp
mov
int3
loop
andl
cmp
lods
cmpsl
inc
sbb
out
push
sar
xchg
lret
mov
scas
mov
xchg
lcall
aad
sub
movsb
pop
inc
sub
sbb
lsl
jp
movsl
inc
popa
lods
push
loope
rcl
jl
mov
imul
adc
mov
adc
jecxz
shl
xlat
sbb
out
push
aas
mov
push
into
pop
xlat
add
pusha
je
iret
dec
inc
lcall
mov
test
mov
dec
cmp
cmpsl
xor
addr16
add
dec
pop
dec
xchg
pop
jge
xor
push
xchg
cli
push
pusha
mov
sub
or
in
xor
gs
in
push
jmp
jge
ja
dec
rcr
or
lcall
xchg
loope
repnz
pop
lahf
dec
into
mov
sti
adc
adc
sub
mov
add
mov
push
xchg
adc
pop
nop
xchg
mulb
mov
sub
push
aas
dec
mov
cld
xchg
pop
jno
sub
hlt
sbb
and
pushf
loope
xorb
adcb
add
sub
icebp
push
mov
fcmovnbe
fistpll
negl
and
sbb
pusha
stos
orl
out
leave
cld
xchg
jo
push
fistpll
outsl
fidivl
adc
xchg
or
mov
arpl
lret
pop
dec
aad
inc
mov
aaa
push
jae
or
loopne
outsl
jmp
xor
and
fwait
stos
stc
fmul
push
mov
lret
lcall
pop
adc
pop
stc
cmp
xlat
jp
pusha
jg
ret
mov
push
lods
mov
adc
fcomip
sub
sbb
jne
mov
sub
push
icebp
and
gs
pop
adc
dec
out
push
xlat
xor
and
push
and
add
testl
jo
pop
sbb
fidivl
mov
xchg
mov
xchg
push
mov
insl
int3
inc
out
mov
dec
popf
jo
sub
inc
ret
or
xchg
ret
in
mov
jge
and
icebp
pop
das
sarl
leave
scas
mov
push
lret
cmp
adc
sbb
cmp
stc
mov
push
mov
add
in
dec
xchg
icebp
mov
jge
add
mov
gs
jae
xor
jbe
ss
jo
sti
sub
mov
pop
leave
xorb
fldenv
xchg
hlt
fdivrp
add
mull
mov
sub
pop
testb
sbb
ja
sbb
or
orb
arpl
scas
cmp
insb
xchg
and
cld
les
jmp
call
cwtl
lock
jb
mov
push
andb
mov
add
pop
shll
dec
ret
push
dec
dec
gs
call
mov
inc
filds
dec
in
data16
jp
xchg
pop
xorl
pop
lds
pop
pop
dec
insl
testl
or
xor
sahf
adc
add
out
call
jmp
jge
or
pusha
mov
arpl
mov
add
cmp
data16
pop
cmp
cmp
or
testl
inc
inc
push
repnz
insb
fsubs
scas
les
and
cwtl
in
mov
mov
loopne,pt
xchg
nop
cmp
int
sbb
cltd
jp
in
inc
cmc
in
sub
iret
loop
fidivs
rcr
cmp
xor
in
pop
or
mov
repnz
cmpsl
cmpsl
inc
jecxz,pt
test
or
mov
push
js
jae
cmp
jno
and
hlt
mov
jmp
xchg
sub
int
nop
subb
je
xchg
roll
push
rclb
pop
stos
mov
mov
stc
es
mov
aam
sbb
jo
pop
cmp
cwtl
add
frstor
push
ja
sarb
filds
sub
cli
idiv
test
inc
mov
aam
pusha
lds
je
test
adc
push
inc
ljmp
dec
rolb
int3
sub
aaa
lods
fisubl
mov
dec
push
mov
enter
mov
mov
pop
jae
fdiv
jns
sub
push
test
pop
adc
mov
sahf
scas
add
shlb
scas
sbb
sbbb
or
inc
or
jne
jg
test
sub
insb
inc
mov
in
hlt
pusha
sub
sbb
sub
mov
les
add
test
xchg
or
mov
xchg
mov
aam
dec
jne
test
xlat
movsl
mov
sbb
aad
xchg
push
addr16
push
inc
gs
popl
xlat
lret
sub
pop
dec
pop
push
arpl
pop
adc
cwtl
subl
roll
cmp
cmpsl
popf
fistl
mov
jne
popf
notb
mov
sti
and
jle
cmp
in
pop
xor
call
mov
pop
mov
pop
cltd
mov
xchg
lock
xchg
in
andl
sub
outsb
push
sub
xchg
cmpsb
mov
fwait
les
aaa
push
pop
jmp
sahf
push
repz
push
jb
aad
pushf
lcall
sbb
in
push
cmpsb
push
pop
mov
cmp
xchg
out
mov
stos
sub
lods
mov
in
inc
mov
addl
ja
xchg
or
mov
adc
int3
mov
negb
cmp
xchg
xchg
add
rcrl
cwtl
dec
pop
pusha
test
sbb
jmp
mov
sub
dec
rclb
xchg
iret
sti
push
dec
xchg
adc
fistl
mov
mov
jmp
add
dec
xchg
mov
and
add
mov
pop
popf
outsl
sub
sbb
sbb
imul
jg
lods
xor
push
and
fmuls
inc
adc
jo
testl
or
mov
test
ret
stos
aas
xchg
and
pop
mov
repnz
and
scas
add
out
movups
mov
mov
cmp
pop
mov
aam
cmpsl
xor
xchg
sub
adc
ss
and
sarb
out
int
sahf
and
out
pop
xchg
pop
pop
xchg
icebp
adc
leave
mov
push
aam
leave
add
xlat
push
sub
pop
mov
inc
mov
inc
jbe
shll
mov
mov
ret
jle
inc
and
leave
jne
xchg
ja
pop
mov
out
dec
dec
int
jo
mov
pop
xchg
mov
pop
insl
add
push
divl
sbb
xchg
ret
addl
xor
add
test
es
cmp
cmp
cmp
pop
pop
mov
rclb
adc
xor
and
push
and
dec
jb
orps
jbe
sub
jecxz
xor
mov
sub
sbb
and
jecxz
cltd
mov
fnstcw
jecxz
ljmp
or
stos
dec
and
lock
push
or
sub
loop
mov
mov
addl
outsl
mov
pushf
pop
pop
pop
aaa
mov
lods
cmp
xor
inc
je
test
into
xchg
mov
daa
cmp
dec
pushf
and
popa
push
lret
pop
inc
inc
pop
mov
or
rorl
dec
into
pop
jl
loopne
cmp
cwtl
je
dec
pop
popf
imul
xchg
mov
mov
insb
sub
test
clc
mov
and
cmp
fbstp
mov
iret
add
add
mov
xchg
xor
jo
or
push
xor
dec
add
xor
lahf
clc
jg
lock
sbb
cmp
fcompl
lods
mov
and
sub
or
in
movsb
rolb
and
sbb
pop
aam
loope
faddl
inc
cmp
sub
inc
outsb
pop
sarl
cs
inc
cld
jg
popf
fsts
pop
sbb
cmpsl
pop
insl
mov
mov
repz
jno
mov
jns
sub
shr
sub
dec
or
mov
sti
xchg
fildll
pop
mov
lods
mov
mov
pop
out
inc
xchg
pop
ret
shlb
mov
sarl
arpl
addl
or
adc
add
repnz
mov
or
inc
push
jmp
xor
mov
push
and
push
inc
add
out
ja
enter
add
xchg
dec
mov
inc
mov
adc
dec
jle
mulb
push
jb
mov
mov
cmpxchg
cmp
icebp
loop
faddp
pop
iret
xor
out
das
out
dec
lock
push
xor
xchg
out
cmp
xchg
fisttpl
scas
lahf
inc
jg
inc
cmp
cld
jg
xor
jae
pop
xor
fsubrs
sub
into
and
mov
inc
scas
test
mov
xchg
and
push
mov
add
xor
imul
adc
test
outsl
push
and
jmp
mov
mov
je
les
insb
rclb
addr16
repz
cli
mov
imul
test
dec
xchg
push
ret
mov
out
adc
test
inc
jle
pop
jns
lret
jmp
mov
pop
roll
rcrb
lea
fldl
inc
fcomps
nop
mov
jns
dec
lret
cmp
imul
std
gs
in
addb
xor
addr16
stos
insb
adcb
cs
jbe
sbb
out
mov
sub
add
test
loope
jae
inc
sbb
test
add
xchg
xchg
lock
test
fsubl
cmc
pop
push
rolb
sub
jmp
leave
mov
push
and
dec
xlat
insl
mov
nop
jecxz
pop
pop
push
mov
mov
aad
and
push
scas
ret
sub
icebp
sbb
data16
dec
mov
lds
push
jns
push
sbb
pop
adc
mov
and
xchg
std
jl
mov
popa
dec
inc
or
nop
ja
ret
testb
out
rcrb
inc
cmp
xchg
call
add
sub
mov
inc
sbb
daa
xor
mov
stc
cmp
mov
clc
test
fs
lea
std
and
jg
pop
xor
out
push
jo
sahf
push
popf
inc
xor
cmp
ret
loopne
mov
jae
adc
shlb
pop
dec
sbb
fnsave
mov
stos
test
sbb
pop
mov
pop
jg
xchg
out
and
push
xchg
mov
dec
sub
cmp
mov
cmp
jne
lret
xorl
arpl
jne
shrl
pop
push
fidivrs
adc
pop
add
sub
imul
and
test
popa
cmp
pop
inc
mov
cld
add
roll
push
mov
je
push
or
inc
stc
mov
mov
add
data16
ja
adcb
lds
inc
pop
jae
ds
mov
xlat
in
inc
or
popf
int3
adc
jo
pushf
push
adc
mov
xor
pop
and
push
mov
cwtl
outsb
pushf
lock
push
rorb
jb
das
clc
cmp
popf
andb
jge
mov
xchg
jne
mov
jno
mov
dec
movsl
fwait
xchg
xchg
jl
push
out
fs
shr
sbb
xchg
cmp
sbb
dec
jle
fcomp
pusha
mov
xlat
inc
mov
or
inc
subl
cmp
mov
mov
cmp
sbb
mov
testl
out
aaa
mov
jge
adc
addr16
add
adc
cmp
popf
xchg
xchg
add
push
push
shll
nop
mov
sub
jns
lret
call
cmc
mov
dec
insb
xchg
leave
add
test
pop
hlt
sub
insb
popf
scas
mov
bound
fsubs
and
or
mov
fisubs
shrd
scas
add
outsl
mov
or
in
lds
pop
lret
fcmovnbe
mov
arpl
xor
mov
lea
push
sub
cs
jecxz
or
xchg
push
addl
rol
jo
sti
mov
mov
add
mov
mov
inc
test
push
mov
in
inc
push
inc
adc
lret
mov
xorb
lahf
push
cmp
jmp
push
jge
pop
sbb
sarb
leave
add
push
mov
push
jb
shlb
out
push
loopne
mov
sar
sahf
sbb
pop
fistpll
sub
stc
daa
or
lea
ljmp
xchg
imul
lea
xchg
jb
mov
push
gs
jae
aas
mov
das
ljmp
aaa
je
push
inc
divb
mov
loope
and
mov
mov
aam
xchg
imul
call
addr16
fldl
dec
add
xchg
orl
or
xchg
or
stc
scas
imul
push
push
arpl
imul
or
rcl
xor
movsl
out
dec
loope
lahf
int3
adc
mov
and
add
push
enter
pop
dec
jecxz,pn
ljmp
aam
pop
add
jmp
mov
mov
leave
icebp
pop
movsl
in
test
cmp
sub
xorl
push
pop
and
or
push
dec
fdiv
adc
xchg
cli
mov
test
adc
jl
outsl
mov
lret
xchg
sub
iret
addb
push
sub
stos
and
scas
and
ficomps
mov
add
inc
sub
or
sub
das
int3
popa
push
jae
inc
dec
in
pusha
imul
iret
lds
push
inc
push
and
jbe
fsts
add
push
mov
sbbl
xor
and
mov
push
sbbl
add
movl
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
sbbl
xor
add
jmp
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jb
mov
mov
xor
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
mov
add
movzwl
mov
adc
mov
negl
movzwl
xor
add
mov
mov
mov
inc
mov
movl
cmp
jne
add
mov
mov
add
xor
add
sub
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
add
mov
and
movl
sbbl
movl
movl
mov
mov
neg
mov
movzbl
sub
xor
add
mov
mov
mov
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
adcl
xor
xor
xorl
sub
sbbl
sub
xor
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
imul
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
or
mov
sbb
mov
add
mov
movl
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
add
adcl
and
mov
neg
mov
mov
lea
mov
mov
mov
and
mov
mov
movl
sub
add
mov
subl
mov
xor
add
movl
jne
movl
jmp
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
subl
mov
xor
xor
orl
sub
sub
andl
xor
mov
mov
mov
mov
jmp
and
mov
mov
subl
xor
adcl
xor
addl
sub
notl
sub
xor
mov
sbb
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
push
and
mov
xchg
repz
jns
pop
pop
jp
inc
mov
sub
or
lea
cmpsb
or
nop
icebp
dec
mov
sub
outsl
mov
push
popf
add
adc
sub
in
lret
sbb
dec
dec
pusha
push
mov
pop
or
dec
jmp
jle
xor
jno
scas
xchg
movsb
lds
pop
push
insb
cld
fisubrs
dec
ss
sub
cli
dec
outsl
enter
jbe
inc
adc
cltd
sar
lahf
out
adc
pop
jno
movsl
js
popf
fcompl
sbb
xchg
outsl
lock
arpl
ja
xor
gs
movsl
pop
cmp
mov
lods
sahf
cld
jg
mov
orl
fnsave
add
add
add
stc
jl
and
cli
lods
xchg
pop
das
scas
daa
mov
rorb
iret
xchg
pop
push
push
jp
dec
push
test
scas
cmpb
subl
ret
push
cmp
fdiv
mov
dec
icebp
xlat
shr
sub
int
push
fimull
sahf
pop
into
mov
pop
cltd
xor
repnz
adc
sti
pop
mov
ret
sub
es
cmp
clc
push
ficomps
cmpsl
xor
test
gs
test
jns
int3
jl
lcall
push
testl
cmpsl
je
sbb
fildl
cmc
or
addr16
sbb
adc
fisttpll
xchg
pop
xor
inc
out
xor
xor
out
mov
daa
lcall
xchg
sub
jb
dec
mov
jb
mov
aam
sbb
mov
les
cltd
xor
aam
jg
rcrl
int3
lock
push
dec
lret
push
cmpsb
xor
mov
mov
mov
data16
xchg
inc
push
and
add
cld
stc
dec
rorl
loop
repz
jle
xorl
je
mov
std
pushf
test
popf
jmp
cmp
or
fldenv
fs
sbb
mulb
or
jle
sub
test
nop
clc
or
xor
cwtl
pop
cwtl
jg
xor
fimull
mov
in
out
xchg
je
xchg
and
orb
fwait
mov
push
xorl
lea
das
lahf
pop
mov
jb
clc
jmp
fildll
mov
xchg
fs
xor
jno
int
add
jns
cs
int
push
iret
mov
jno
xchg
lock
mov
jnp
call
sahf
pop
jmp
mov
inc
call
xchg
sbb
lods
pop
popa
cmp
shl
notl
aam
stos
outsl
mov
xor
mov
mov
cmp
clc
fnsave
xchg
push
mov
fisubs
sti
mov
jl
call
in
loope
sub
test
scas
data16
ss
je
fwait
std
mov
push
out
test
aad
mul
iret
jle
in
and
nop
or
mov
enter
leave
inc
fwait
ret
xlat
cmpsb
mov
sub
push
xor
mov
sahf
add
add
mov
js
mov
mov
mov
loopne
dec
pop
adc
mov
es
mov
ja
enter
and
addb
push
pop
insl
push
dec
shlb
rcrl
into
test
sbb
lods
pushf
leave
jl
jmp
loop
mov
inc
xrelease
test
and
add
mov
mov
pop
inc
xlat
and
clc
mov
test
mov
enter
add
sub
cmp
and
cmp
sub
or
pushf
outsl
addb
ja
or
jae
push
or
pop
addb
push
pop
or
and
scas
pop
cmp
popf
and
adc
lods
es
mov
dec
and
lods
sbb
insl
popa
xchg
jecxz
jecxz
pop
loop
rolb
frstor
outsb
jb
mov
rol
in
adcb
jp
loopne
icebp
insb
pop
or
add
test
cmpl
rorb
rorb
icebp
adc
ret
arpl
cmpsb
fistps
addr16
xchg
gs
mov
outsb
sti
rolb
or
inc
jge
outsl
push
inc
rcrb
icebp
dec
test
aam
fistl
arpl
and
aam
sbb
pop
out
rcl
xchg
mov
mov
shrl
and
xlat
add
or
pop
cltd
enter
ja
jno
flds
repnz
and
bound
sub
test
dec
cmp
cld
jp
aaa
jns
insb
pop
xchg
xchg
push
int
cli
hlt
clc
mov
dec
fs
mov
std
lea
cmp
fimuls
push
push
sti
iret
daa
jl
cmp
jo
sarb
pop
repz
cmc
mov
jb
inc
xchg
fidivrl
mov
aaa
popa
cmp
add
mov
iret
sbb
in
or
push
mov
inc
adc
push
imul
lahf
add
fdivl
and
cmp
aas
jmp
mov
xlat
gs
jno
cmp
push
jne
cmpl
xor
jae
mov
inc
push
mov
xlat
shl
adc
insb
pop
push
dec
in
sbb
ds
jnp
pushl
push
rclb
rolb
fistps
sbb
in
mov
add
stc
test
icebp
push
ja
mov
push
aad
adc
aaa
out
mov
sbb
imull
in
cmp
out
clc
mov
arpl
pop
pop
loopne
cmp
lret
jno
jne
xor
mov
push
bnd
push
insl
adc
loope
loopne
iret
and
xorl
xor
aaa
push
and
add
dec
mov
js
and
xchg
repnz
jne
and
dec
cmpsb
popf
std
in
in
push
orb
pop
pop
pop
out
jle
push
and
pushl
in
aam
mov
push
notb
and
repz
mov
lret
mov
lea
mov
xchg
xor
pop
es
cwtl
push
rolb
imul
add
mov
mov
push
cld
pop
xor
ja
sbb
sti
jbe
andb
inc
sub
lahf
es
movd
xlat
ds
sbb
vcvtsi2sdl
mov
cmpl
stc
mov
add
push
sub
mov
sub
daa
std
push
sub
lea
pop
imul
push
aam
gs
inc
or
rcrl
mov
mov
mov
inc
xor
sti
inc
mov
dec
jae
xchg
jmp
mov
mov
test
mov
adc
out
ja
xor
stos
pop
psrad
sbb
jp
test
loopne
push
sub
repnz
cmp
xchg
inc
pop
mov
jle
or
insb
in
jle
mov
mov
nop
cmp
fcoml
repnz
std
and
test
outsb
pop
jge
les
mov
je
sbb
cmp
cmc
fs
lea
jne
mov
mov
sti
fsubrs
add
das
mov
ret
pop
pop
out
jmp
stos
mov
mov
fucomip
fimuls
mov
mov
subb
fs
dec
bound
int3
adc
jle
jg
cli
in
lret
cld
sub
ja,pt
mov
imul
andl
lock
loop
aas
inc
adc
lods
movsb
cli
cmp
mov
test
pop
rolb
jb
pop
or
push
test
add
mov
imul
cmp
add
mov
sbb
ror
xor
sub
daa
out
dec
push
lret
clc
xor
adc
lret
mov
mov
inc
jl
enter
xchg
stos
sub
mov
enter
lret
sbb
loope
cwtl
mov
enter
jle
add
outsb
fwait
jmp
bswap
psrlw
loopne
push
cli
outsb
dec
xchg
sub
pop
pusha
jmp
shr
cltd
mov
ret
pop
adc
adc
fiadds
mov
pop
inc
popa
inc
cmp
fstps
lcall
push
or
adc
adcb
imul
dec
frstor
push
sti
push
je
mov
cmp
pop
xchg
notb
push
pop
sbb
and
je
cltd
test
cmp
pop
push
data16
xchg
adc
xor
mov
ss
sub
and
pop
push
pop
adc
mov
lods
jb
insl
xor
adc
js
int3
fdivrl
xchg
fwait
nop
sti
and
xchg
in
lods
rol
mov
int3
sbb
push
addr16
scas
jmp
dec
subb
cmp
out
js
cmp
enter
xor
sbb
lahf
addr16
ja
push
sbb
daa
das
jno
sbbl
mov
je
ja
int
adc
ds
xlat
sub
pop
xor
jnp
cmpl
icebp
lret
and
xchg
out
cmc
mov
les
pop
or
lret
iret
push
lcall
mov
xchg
fmuls
fcomps
iret
cmp
push
rcrl
sub
fldl
add
lahf
or
pushl
and
jp
iret
sbb
outsl
jns
ret
xchg
cld
es
test
cmp
in
mov
xchg
xchg
cmp
mov
mov
mov
or
in
inc
cmp
mov
lods
sarb
rcrb
push
cltd
jne
call
jo
popa
outsl
mov
adc
add
mov
lcall
xchg
sub
pand
mov
out
les
fcomip
push
push
inc
mov
dec
dec
imull
out
pop
into
push
add
or
repnz
mov
sub
mov
xchg
dec
mov
fadds
notb
pushf
jg
test
adc
fadd
jb
adc
mov
lods
push
pop
outsb
lahf
shlb
popa
das
in
push
dec
fldl
test
xlat
aas
mov
mov
mov
inc
push
aam
mov
mov
test
sbb
leave
or
xchg
fnsave
sbb
push
shlb
std
xchg
xchg
fildl
cmp
pop
incb
add
adc
mov
inc
pushl
add
push
inc
cmp
add
insb
xor
pop
or
pop
add
push
jne
add
ret
dec
xor
mov
cmp
xchg
lahf
js
pusha
imul
sub
sub
sbb
mov
xchg
je
xorl
mov
inc
jg
jecxz
fidivs
repnz
mov
fisubrl
das
aaa
pop
xchg
push
lock
aas
in
sbb
aam
dec
cmp
in
dec
mov
aaa
jae
xchg
int3
xor
adc
out
mov
movsl
mov
mov
cltd
jns
add
dec
cmpsb
shrl
cld
bound
pop
in
cmp
ljmp
xlat
enter
or
cli
sub
add
mov
mov
inc
test
cmp
cmp
scas
faddl
mov
imul
and
cmpsl
mov
pop
inc
outsb
ds
pop
fdivrl
shrb
int3
jle
sub
lcall
jbe
dec
out
cmp
test
mov
push
inc
cmp
cmpsb
mov
jmp
xchg
cmpsl
xlat
adc
jns
push
push
fisttpll
jmp
xlat
cmpsl
movsb
pop
ss
push
movsl
jbe
xchg
out
push
mov
inc
push
je
lods
cmp
inc
push
out
dec
inc
jg
lock
or
insl
xchg
imul
pop
pop
and
aaa
push
mov
iret
and
bound
inc
dec
and
xor
jae
xchg
jo
sbb
cmp
ret
mov
xchg
add
mov
cld
aam
lahf
mov
mov
icebp
pop
xor
scas
push
jmp
xchg
fs
jbe
add
mov
outsl
lods
jecxz
xchg
pop
mov
mov
je
dec
add
and
jle
ret
xchg
inc
jo
lea
repz
or
push
and
movl
add
aad
mov
fwait
pushf
push
out
mov
xchg
ret
ficoms
je
fisubl
popf
mov
dec
in
insl
add
pop
ret
dec
push
shlb
xor
je
frstor
lds
dec
sbb
mov
das
and
mov
xor
lcall
std
xor
sbb
sub
fcoml
nop
or
pop
mov
pop
xor
or
push
cmp
sbb
aas
jb
push
inc
fsubrl
fcompl
inc
adc
rclb
bnd
loopne
jmp
jp
jbe
mov
add
jle
mov
into
inc
mov
xor
daa
jmp
xchg
mov
lcall
ds
stc
mov
add
xlat
xchg
push
cmp
out
fwait
sbb
push
inc
cmpsl
lods
push
movsb
mov
insb
push
fcoms
loope
push
dec
mov
into
mov
mov
push
cld
cmc
loope
out
mov
out
inc
popa
inc
outsb
mov
aam
sbb
xor
cwtl
mov
outsl
sbb
push
aam
iret
xor
rcr
xchg
fldenv
xchg
neg
jecxz
push
in
xor
inc
jp
lods
lock
les
dec
out
stos
in
cmp
stos
mov
clc
pop
and
xchg
repnz
push
repnz
adc
popa
pcmpgtb
out
into
fistpll
in
bound
into
dec
jge
out
dec
dec
ds
xlat
lret
inc
outsl
mov
nop
xchg
dec
push
mov
mov
push
cmp
xchg
push
inc
fwait
scas
lret
inc
lahf
sbb
xchg
sub
in
imul
add
xlat
loope
adc
jp
icebp
push
push
in
sub
and
subb
cmpsb
xchg
add
add
lret
sbb
jmp
movsb
dec
mov
icebp
mov
sub
dec
adc
lods
leave
and
inc
cli
xchg
add
inc
pop
jp
jo
sub
jecxz
not
shll
jmp
mov
jne
sub
cmp
and
mov
movsb
sbb
inc
fldcw
jne
or
xor
push
mov
mov
push
out
jnp
lea
rcrb
lods
xchg
bound
sub
sbb
mov
adc
pop
fcmovbe
cltd
mov
add
dec
mov
pop
ret
xchg
sbb
insb
add
or
pop
dec
stos
inc
hlt
sbb
dec
test
js
shll
mov
sub
cmp
or
pop
rolb
mov
sbb
inc
ret
ret
stos
mov
out
add
subb
dec
and
sub
dec
xchg
cmp
das
adc
mov
iret
scas
imul
sarb
mov
mov
sub
enter
out
adc
mov
xor
leave
fldt
bound
shr
dec
dec
stos
shll
bound
movl
loopne
mov
push
jmp
out
gs
push
push
scas
inc
aam
insl
int3
cmp
cs
clc
or
jns
jnp
inc
mov
adc
sbb
pushl
sbb
fcmovbe
adc
fldl
push
rclb
popa
jae
inc
ficompl
stos
dec
aas
mov
xor
lret
mov
aaa
or
icebp
movsl
xchg
sub
subl
mov
mov
jnp
add
jns
enter
andb
push
clc
jne
lea
clc
sbb
xchg
xlat
adc
popa
jb
lods
lds
int
push
or
jp
es
and
and
in
mov
pop
add
pop
sbb
lahf
mov
stc
inc
pop
iret
outsb
sbbl
mov
pop
stc
mov
lods
fdivs
imul
mov
push
xorb
xchg
mov
mov
xchg
lahf
xor
xchg
sub
int3
fwait
pop
movl
mov
cwtl
push
cmc
repnz
dec
pusha
pop
es
jns
jmp
push
jp
faddp
sahf
xor
mov
loopne
js
mov
add
push
pop
jns
jmp
xchg
dec
jp
mov
dec
insl
inc
mov
andl
enter
mov
xor
ds
jno,pn
or
and
jb
mov
out
cmp
out
jg
lods
int
xchg
mov
pop
orl
adc
add
mov
sub
mov
xchg
and
dec
orl
sub
and
inc
push
sub
adc
push
test
or
push
inc
out
or
or
lods
cwtl
lret
add
movsl
push
in
andb
jle
jl
out
inc
mov
mov
dec
add
addr16
sahf
lcall
shrb
ds
jnp
jecxz
fs
mov
cmp
stos
bnd
add
lds
loop
dec
push
out
addl
scas
fwait
mov
add
pop
out
int
xor
push
fsts
stc
adc
shlb
mov
mov
push
cwtl
js
ja
mov
dec
sub
aas
into
push
les
xchg
imul
jnp
fsts
lods
imul
mov
scas
insb
mov
mov
test
repnz
aad
pusha
test
int
xchg
mulb
inc
popa
aad
pushf
xor
lahf
cmp
outsl
pushf
insb
and
jae
xchg
sahf
in
add
popf
push
mov
les
repnz
xor
inc
pop
fwait
and
outsl
dec
imul
push
gs
test
mov
dec
addr16
xor
fucomp
jnp
cmp
imul
out
inc
orl
and
cmpsl
xor
push
out
mov
ja
inc
cli
aam
xor
jnp
movsl
pop
dec
and
fisttpll
scas
xchg
repz
dec
jg
mov
sub
test
mov
fwait
jg
or
adc
push
add
and
cmp
das
dec
mov
sbb
xor
mov
ret
decb
dec
sbb
push
pusha
mulb
sub
int3
nop
xor
adc
mov
pushf
push
xchg
xor
scas
xor
scas
push
and
cli
cmc
imul
in
jp
mov
or
sub
pop
aas
outsl
sub
aaa
dec
add
add
dec
and
pop
sub
cmp
jnp
mov
ret
stos
incl
imul
cli
or
movsl
cmp
out
dec
xor
in
pushf
dec
lds
xor
pop
cs
push
mov
movsb
cltd
imul
adc
imul
js
sbb
addr16
mov
cs
jp
jne
xchg
xchg
push
lret
ja
js
into
daa
popf
stc
mov
fucomi
mov
mov
loop
jno
mov
rcll
imul
inc
test
xor
sbb
push
mov
icebp
repnz
push
movsl
fwait
test
rcll
fsub
ret
lcall
leave
push
lahf
sub
sub
mov
cltd
sbbl
cltd
dec
push
pop
lahf
mov
decb
cs
push
adc
icebp
inc
sti
push
nop
aam
xor
fidivrl
rcl
push
xchg
imul
das
mov
popl
cmpsb
jle
aas
call
and
clc
add
lret
jg
or
xchg
mov
in
xchg
sub
add
ljmp
in
jnp
pop
das
pop
sub
mov
es
jle
arpl
add
aam
sarl
sbb
pop
mov
nop
mov
xor
lcall
test
pop
dec
or
popa
ds
cmp
mov
fsubrl
jo
push
fbstp
mov
les
adc
adc
and
imul
mov
add
add
outsb
cli
fwait
imul
into
jge
pop
add
add
mov
sar
sbb
cs
rcr
daa
stos
repnz
arpl
dec
fs
inc
aas
adc
mov
jbe
inc
loop
call
enter
push
jecxz
mov
cmpsl
push
pushf
stos
jo
mov
test
mov
leave
mov
push
jnp
adc
mov
add
out
and
ret
cs
dec
imul
cmpsb
sti
jg
cmpsl
stos
push
nop
mov
or
push
sub
lock
mov
call
mov
ljmp
push
push
jne
mov
loopne
idivl
in
adc
pop
sub
pushf
mov
mov
adc
cmpsb
aaa
xor
fadd
mov
push
mov
xor
scas
addr16
inc
arpl
lods
add
fucomi
ffreep
and
ret
scas
shlb
and
push
xor
adc
inc
int
ja
mov
sub
xorb
and
data16
inc
cli
lock
gs
jnp
test
sbb
jnp
sub
cmp
cmp
into
fstps
xor
lcall
push
dec
movsl
mov
pop
mov
add
int
repnz
scas
or
into
jecxz
dec
jb
fcmovnu
pop
roll
adc
leave
mov
das
insl
or
testb
out
call
mov
sbb
popf
add
fucom
rcl
push
pop
fnstsw
loop
jae
sub
cmp
cltd
scas
adc
push
lret
mov
hlt
mov
div
mov
mov
leave
fidivs
adc
into
es
inc
sbb
popa
imul
fnstsw
loop
pop
jno
pop
lods
jg
pop
sbb
hlt
repz
xor
xchg
xor
sbb
scas
pop
cmp
pop
mov
cmp
cmpsb
push
repz
pop
pop
adc
mov
fisttps
push
jle
inc
adc
sbb
sbb
push
jns
lcall
test
gs
inc
jp
shll
xchg
nop
sbb
ja
aad
or
xorb
xor
xchg
xchg
daa
clc
push
pop
lea
mov
inc
or
outsb
inc
lcall
adc
insb
mov
push
arpl
pop
pop
ds
mov
in
add
aas
ja
adc
int3
lds
sub
add
inc
dec
cmp
sub
sub
push
xor
subl
pop
insb
dec
push
mov
flds
je
out
push
into
lock
fcoms
popa
xor
ret
inc
jmp
shrl
stos
dec
mov
out
or
movsl
movsl
jge
cmp
mov
and
testl
xchg
mov
lcall
push
push
aas
cmp
out
xchg
push
mov
mov
jo,pt
aas
mov
mov
jbe
jnp,pn
xlat
mov
cmp
push
lea
or
je
pusha
inc
lahf
dec
test
jbe
lods
les
aam
and
ja
add
mov
and
dec
nop
mov
push
dec
test
je
and
cmpsb
mov
iret
pushf
adc
sbb
out
enter
insb
fcomp
mov
rclb
adc
cli
loop
mov
daa
xor
jae
mov
lcall
cld
inc
push
shll
in
push
jbe
pop
mov
fdivrl
in
mov
jecxz
xchg
outsb
jg
sub
lods
mov
dec
das
add
and
movsl
mov
jae
lahf
je
cmp
in
pop
add
or
in
pop
bound
lods
lock
nop
cmp
cld
mov
cmp
cmp
into
gs
adc
jge
xchg
movsb
out
sbb
pop
cmp
call
fmull
call
adcb
setge
hlt
xor
mov
dec
pop
ret
std
call
mov
adc
xor
xor
mov
test
sub
and
adc
inc
loopne
int
or
add
mov
insb
or
out
sbb
addl
repnz
test
int
icebp
mov
enter
fisttps
int
je
add
inc
cmp
lds
add
fcmovne
insl
push
aad
lds
cld
or
shlb
adcl
jo
jecxz
mov
cli
inc
or
adc
sub
inc
out
push
scas
std
rcrl
in
ds
pop
fsubrl
bound
xor
pusha
fmuls
sbb
test
mov
sub
scas
ret
push
dec
outsl
pop
adc
xchg
inc
add
stc
into
dec
adc
push
cmp
mov
fisubs
xchg
mov
pop
fiadds
lds
fistl
cs
xchg
pop
adc
and
lahf
loop
push
cwtl
ja
dec
hlt
or
push
shll
pushf
cld
fwait
add
test
xor
iret
xchg
imul
adc
out
xor
dec
scas
imul
xchg
into
and
push
jge
dec
jno
outsl
jp
in
lahf
push
stc
pop
hlt
ljmp
divb
jae
in
push
int
or
mov
push
jno
clc
cmc
and
cli
in
sub
add
adc
das
outsl
adc
mov
xor
push
dec
outsb
ljmp
mov
adc
lea
test
ret
mov
fcmovnbe
iret
aas
sub
insb
inc
inc
jg
into
sub
pop
xchg
lea
inc
rclb
lock
ja
aas
dec
inc
das
jb
vandps
in
lahf
stc
inc
gs
ja
push
xor
mov
dec
arpl
sti
movsb
cltd
jge
inc
cmp
jle
lret
mov
mov
inc
cltd
hlt
jp
and
adc
cmpl
popa
mov
cmp
jae
lret
and
push
cmpsb
xchg
imul
test
sub
add
sbb
cld
popf
jge
or
add
adc
sbb
es
adc
ds
push
int
pop
jle
adc
arpl
jmp
test
daa
push
jo
dec
mov
repz
subb
sbb
testw
and
push
mov
and
mov
popf
or
jo
ficomps
repz
out
pushf
xchg
fcoml
nop
or
aam
mov
movsb
adc
inc
in
xor
xor
inc
mov
mov
adc
pop
movsb
push
mov
lret
or
jmp
hlt
arpl
sbbb
adc
push
sbb
imul
xchg
pop
xchg
mov
inc
roll
inc
add
js
stos
popf
inc
in
mov
jbe
mov
scas
cmp
sti
xchg
mov
lret
and
jle
in
xchg
sbb
addl
push
dec
cltd
jmp
shr
cmc
xchg
or
mov
push
data16
inc
mov
adc
test
in
cmpsl
dec
adc
mov
mov
ja
adcb
pop
xchg
push
pop
stc
fwait
adc
inc
lods
movsb
mov
rep
addl
jl
xor
orl
lahf
push
rorb
inc
dec
xor
mov
fcomps
mov
mov
in
xchg
inc
xchg
mov
xor
clc
and
cld
dec
test
mov
cmpsl
lahf
je
mov
push
mov
xchg
test
into
in
fwait
mov
sub
insb
pop
jno
pop
jecxz
mov
dec
push
pop
and
mov
mov
fstps
lret
inc
pop
scas
es
movsb
mov
enter
hlt
xchg
sar
sub
adc
mov
sbb
sub
xchg
sbb
sbb
out
js
stos
push
mov
ja
pop
mov
dec
std
lret
xlat
adc
inc
pop
push
mov
gs
mov
jmp
push
test
inc
sub
andb
mov
stc
push
xchg
dec
dec
mov
pop
push
cwtl
or
imul
mov
mov
add
mov
mov
sub
sahf
mov
pop
lcall
xor
enter
mov
scas
mov
fimuls
scas
pop
pop
cltd
enter
shll
xor
pop
push
outsb
insl
jge
push
out
roll
shrb
mov
push
jns
in
rcll
rcll
add
push
repz
imul
ret
int3
mov
sarl
leave
flds
mov
mov
jecxz
sub
dec
ljmp
loopne
dec
adc
hlt
push
or
es
out
imul
mov
dec
sbb
into
insl
or
cli
push
and
jecxz
inc
inc
andl
sub
xor
aas
adc
push
pop
or
push
fadds
xor
je
mov
add
out
or
rolb
mov
ss
dec
push
movsb
pop
jne
pop
sbb
scas
add
ja
lret
cmpsb
stos
dec
add
stos
sbb
lods
add
in
lods
ds
outsl
inc
inc
div
sbb
test
pop
lock
mov
xchg
or
xor
inc
fs
xor
jge
cmp
test
add
leave
sub
repz
icebp
out
add
or
jno
pop
inc
pop
lret
lock
push
xchg
dec
lret
test
out
aaa
lcall
push
cmpxchg
das
stos
pop
test
stc
jle
sti
push
data16
mov
mov
test
lods
cmc
jb
push
jbe
mov
shll
enter
sbb
lret
dec
lods
xor
insl
fsubr
shll
lods
addl
call
or
push
mov
sbb
cli
cmp
xchg
jbe
xor
cld
gs
sti
hlt
es
addr16
pop
mov
incb
scas
mov
int3
xor
outsb
outsl
inc
cmp
jp
inc
std
or
mov
aaa
dec
sub
cmc
cld
call
sub
or
dec
sub
rol
pop
sub
push
movsl
rcl
cwtl
inc
sbb
and
xchg
and
xchg
int3
sub
cbtw
or
fmuls
inc
cmp
cli
sbb
jbe
mov
adc
jecxz
int3
addr16
push
lods
cltd
lods
dec
loopne
popa
mov
cmp
mov
sub
xor
jno
sub
hlt
jp
sub
cmc
inc
pop
dec
xchg
add
sub
dec
cwtl
arpl
lret
add
adc
xor
stc
loop
lret
xor
popa
idiv
and
rolb
jnp
adc
push
jo
insl
mov
mov
sbb
sbb
jbe
mov
push
in
or
or
xlat
push
dec
cmp
and
jmp
test
add
into
and
fadd
sub
pop
push
dec
repz
imul
call
dec
jb
inc
push
inc
xchg
mov
aad
adc
push
out
dec
mov
pop
lret
cmc
lock
xchg
les
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
jmp
aam
sbb
test
imul
lods
adc
and
test
xor
repnz
std
ficoml
cmpsl
in
in
jb
jl
lret
leave
mov
mov
jns
ficoms
imul
fisttpll
and
aaa
inc
add
or
js
and
sbb
pop
sbb
pop
add
data16
fisttps
popl
dec
test
es
sahf
mov
cmp
fxch
dec
push
push
loopne
test
jnp
scas
xchg
add
cs
ret
ja
ljmp
sbb
xchg
jbe
adc
push
into
cltd
sbb
xchg
aaa
adc
adc
out
push
iret
or
daa
dec
add
lcall
cmpsb
sub
xchg
lds
cmp
daa
sbb
rcrl
bound
xchg
idivb
cmc
jns
imul
push
scas
sahf
mov
ret
mov
cmp
jle
dec
ss
inc
xor
pop
sub
jno
xor
or
rorl
test
in
in
sar
mov
repz
mull
das
cmp
or
fsubrl
call
ficoml
pop
clc
xor
test
loop
aam
adc
ss
out
mov
scas
shl
add
es
ja
jp
pop
in
imul
addl
pop
or
sub
lods
sbb
fldenv
xlat
out
sbb
mov
lea
jbe
imul
pop
ret
call
lds
dec
fisubl
mov
dec
adc
and
fsubp
fmulp
jo
and
inc
mov
adc
fs
add
add
mov
adc
pushf
int3
lret
aaa
pop
jb
and
bound
mov
sub
push
fsub
push
or
push
mov
ret
xorps
scas
jo
sbb
lret
or
shll
jg
fistl
test
stc
jecxz
cs
sbb
jmp
movsb
inc
xchg
adc
lods
cmp
lretw
or
xor
mov
mov
mov
jbe
push
xor
outsl
cmpsl
shrl
scas
add
xchg
ja
repz
or
or
aad
pop
repz
push
fs
hlt
or
jns
sbb
and
and
jl
pop
and
pushf
cmp
push
push
adc
or
and
xor
pop
repnz
push
mov
and
neg
jnp
mov
mov
fucom
in
loop
in
cmp
mov
xlat
xchg
sti
outsl
nop
xchg
shl
jle
scas
sbb
xacquire
mov
scas
pop
adc
ds
into
pusha
insl
jnp
in
negl
cld
mov
scas
pop
mov
test
rcl
aam
fbstp
out
leave
mov
test
mov
pop
sbb
jg
push
hlt
dec
enter
gs
das
adc
inc
jg
or
mov
add
xor
or
call
mov
imul
cltd
add
adc
mov
cmp
rolb
in
add
insb
dec
jns
ficoms
test
bound
pop
add
inc
aam
pop
push
fstl
add
mov
or
jl
cmp
iret
push
sub
jmp
cwtl
ror
loop
aad
mov
dec
pop
xchg
xchg
lea
dec
ljmp
cltd
inc
sbb
imul
cmp
pusha
mov
loop
or
add
and
push
cltd
pushf
xchg
je
mov
add
mov
jge
aad
out
dec
xchg
rcrb
mov
cmpsb
dec
iret
out
ret
fwait
adc
dec
jg
xlat
pop
out
push
mov
pop
ret
jno
pop
pop
xor
cli
sub
or
aad
repz
into
xor
cmp
sbb
hlt
out
bound
test
addr16
or
cmp
or
pop
mov
ret
mov
xchg
lds
rcrl
cwtl
iret
pushf
rorb
stc
mov
inc
sub
les
fld1
push
dec
out
addl
mov
in
push
rcrb
scas
mov
xchg
jp
and
fwait
and
dec
push
icebp
cmp
or
into
pop
push
push
scas
xor
pop
pop
repnz
cld
xor
xor
cmp
das
sbb
movsl
and
adc
loop
mov
divb
and
sub
inc
psubb
fcoms
mov
and
shl
add
dec
iret
push
cli
add
sub
mov
loop
mov
push
add
in
das
add
xor
out
dec
mov
mov
faddl
sbb
in
addr16
movsl
lock
fs
mov
fldln2
mov
movsb
ds
mov
push
sbb
insl
add
cmpsb
ja
aad
test
adc
jno
bound
pop
push
fildll
and
sub
fcomps
shll
inc
sbb
imul
lock
repnz
pop
jge
imul
rcll
in
lret
adc
dec
lret
pop
pop
test
pushf
enter
mov
repz
cmp
pop
and
int
dec
cmpsl
adc
xchg
out
pop
repz
popl
push
enter
imul
aam
pop
fwait
pop
aam
lahf
cmc
test
push
mov
sub
sub
sub
cmp
sub
jmp
loope
aam
xchg
adc
notb
dec
push
scas
sbb
and
scas
cmp
adc
and
lea
jns
scas
push
mov
dec
shlb
dec
xlat
fidivs
adc
mov
les
inc
fsubrl
mov
xchg
repnz
pop
test
mov
pop
call
aas
xor
push
xlat
sti
or
or
lods
or
fcompl
jle
mov
fstpl
ja
add
add
movsl
jne
pop
sti
stc
shll
mov
and
push
add
mov
mov
pop
or
dec
xlat
or
xchg
dec
in
jmp
push
pop
jl
xor
daa
jle
xchg
xchg
cmp
in
jns
pop
icebp
inc
jl
xor
sbb
add
andl
mov
fcmovu
shrl
mov
jae
push
scas
jae
add
iret
and
inc
dec
push
dec
mov
pop
std
xor
fsts
mov
jmp
ss
repnz
je
push
int
sti
cmpsb
pop
pusha
inc
and
cmp
sahf
jecxz
icebp
adcl
dec
xor
cmp
push
push
adc
test
insb
lods
sbb
dec
gs
inc
test
adc
femms
je
test
mov
imul
repz
or
and
push
xor
pop
inc
jecxz
xchg
jbe
enter
data16
mov
add
dec
arpl
xchg
daa
add
lea
aam
iret
xchg
subl
xchg
cmpsb
or
loop
mov
mov
imul
test
and
and
cmp
adc
dec
shrl
mov
push
lret
das
je
shrb
mov
out
mov
mov
push
dec
repnz
sahf
es
xor
pop
mov
push
scas
aas
xchg
lret
loopne
xchg
pop
nop
sub
into
roll
sahf
cmpsl
cltd
in
mov
das
adc
dec
push
push
mov
sub
sub
fnop
or
popf
push
cmpsl
mov
fiadds
or
push
in
je
stos
mov
out
sbb
sbb
sub
fstps
data16
scas
mov
imul
and
mov
leave
das
add
mov
lods
cld
ds
es
or
xchg
push
mov
adc
mov
push
and
aam
push
inc
mov
pop
call
push
mov
pop
xchg
testl
adc
loopne
mov
test
lods
mov
sbb
add
pop
adc
sbb
jg
add
mov
cmp
imul
lds
adc
loopne
shl
sub
dec
or
popf
out
push
mov
or
cmp
mov
lods
subb
in
push
bnd
push
dec
ds
push
jns
outsb
jns
insl
leave
jo
or
sub
mov
lret
into
dec
and
fnstenv
jle
bnd
add
fs
test
shll
dec
fmuls
inc
mov
xor
mov
inc
loope
iret
sub
mov
xchg
and
sbb
test
arpl
pop
sub
and
insb
leave
sub
xor
dec
dec
lea
test
pop
test
std
inc
mov
lds
mov
out
adc
jnp
mov
fsubrs
fwait
cmc
fdivrl
or
cmp
loop
out
shll
pushf
jge
push
pop
pop
mov
cld
psllq
loopne
xchg
and
test
fs
inc
cltd
call
and
adc
sbb
out
loop
xor
repz
or
cmp
or
or
cmpsb
adc
and
insb
sbb
xchg
xchg
dec
xor
cmpsb
mov
dec
lea
loop
cmpsb
inc
scas
enter
dec
sbb
outsl
push
orl
sub
lods
xchg
test
jnp
mov
jmp
xchg
shrl
push
out
ljmp
imul
scas
je
xor
aam
mov
test
movsl
ds
out
enter
xchg
out
push
sahf
add
sbb
mov
inc
and
and
orb
loop
fwait
xchg
mov
gs
aas
add
jp
out
adc
je
cmp
jle
fsubs
daa
fwait
bound
mov
push
arpl
rcrl
inc
lds
mov
jae
push
rclb
imul
cltd
fidivrl
or
jp
sahf
push
jnp
mov
mov
pop
data16
dec
das
jo
dec
jo
push
xchg
nop
dec
popf
rclb
pop
roll
clc
mov
xlat
xchg
jne
dec
jne
int
lods
push
or
ret
ss
cmp
inc
aad
jbe
jecxz
or
xchg
push
inc
ss
add
sub
mov
jl,pt
je
aad
cld
inc
xor
cmpsl
sub
cmovno
inc
mov
cld
outsb
jl,pt
ret
into
mov
cs
test
xlat
pop
xor
adc
imul
mov
fisubl
mov
xor
popa
xlat
repnz
sahf
sbb
push
divb
push
mov
push
mov
subb
jo
fwait
add
mov
je
mov
outsb
cmp
mov
fcmovne
jno
shl
xor
ror
stos
dec
mov
pop
pop
jnp
into
cltd
pusha
mov
dec
loop
sub
ret
mov
out
xlat
lods
or
arpl
dec
pop
lahf
js
and
bound
movsl
ret
mov
xorb
dec
lock
cmpsl
rcrb
mov
call
pop
inc
mov
iret
cmpsb
pusha
pushf
xchg
fistpll
cmpsb
psllq
adc
ret
shrl
adc
mov
xor
add
jmp
cmpsl
js
pop
jg
fsubrs
dec
or
test
or
out
jp
mov
mov
sbb
daa
push
sbb
popf
lea
push
xchg
mov
mov
fwait
mov
cli
movsb
dec
add
xor
xchg
push
mov
fdivs
dec
xor
lretw
dec
repnz
movsl
aas
test
das
xor
les
movsl
and
cs
adc
outsb
mov
cld
stos
jg
sbb
cmp
mov
mov
push
pop
fidivs
cli
or
insb
shrb
sub
das
or
mov
sub
jnp
subl
cmc
es
decb
cli
pop
mov
xorl
in
inc
push
xor
into
cmp
adc
cs
jp
push
add
stc
xor
xor
sbb
lea
shld
jbe
mov
mov
xchg
mov
ja
push
icebp
cld
int3
sbb
add
or
mov
push
sub
repnz
mov
iret
ljmp
cli
jge
jae
int3
fcomps
lcall
lods
in
cmpsl
cld
rorb
pop
xchg
gs
cmp
lods
pop
inc
ret
pop
jecxz
cltd
idivl
mov
mov
jnp
jns
inc
mov
jno
jp
add
push
ja
insl
adc
adc
jbe
jecxz
stc
les
ds
adc
sti
addr16
daa
js
lods
dec
call
jle
adc
divb
test
jecxz
jecxz
pop
cwtl
xchg
mov
sahf
imul
inc
inc
mov
pop
sbb
push
pop
repz
mov
subb
in
or
xorl
iret
fstps
jne
cmp
adc
mov
pop
inc
out
xlat
ds
ljmp
adc
jns
push
loope
les
sub
sub
cs
jb
aaa
xchg
sbb
xor
out
rol
pop
daa
scas
test
xchg
xchg
aam
push
in
sub
push
push
push
and
cmpsb
lods
xchg
call
popa
jp
lea
inc
das
push
pop
mov
std
pop
jmp
mov
push
cmp
mov
aaa
jle
addr16
mov
into
mov
push
dec
shrl
bound
js
jb
jecxz
or
sub
icebp
in
push
ret
jge
cmp
fsubs
mov
adc
dec
push
cmpsl
mov
cmp
or
notb
mov
rcrb
dec
adc
pop
mov
xor
cmp
adc
mov
pop
and
xchg
aaa
repz
or
js
lcall
daa
cwtl
jmp
sbb
push
or
mov
cmc
ss
lock
cwtl
pushw
js
mov
sub
fs
xchg
push
cmpsb
cld
adc
jmp
push
bound
lods
push
jge
mov
ja
fisttpl
insb
xor
mov
lahf
lcall
pop
jb
shll
xchg
movsl
fucom
mov
out
dec
add
pusha
aad
add
cli
and
mov
push
pop
lods
js
xchg
mov
xlat
andb
add
sub
sbb
jns
pop
pop
mov
rcrb
dec
stos
popf
enter
sub
push
and
dec
sub
xchg
jns
out
loop
inc
fbld
mov
adc
arpl
out
fs
mov
push
out
pop
mov
in
mov
imul
push
push
lcall
in
mov
xor
xchg
add
mov
dec
rclb
or
jle
pushf
push
cmpsl
dec
xchg
mov
lods
mov
lds
ror
notb
push
inc
cli
fldenv
fsubl
movsl
scas
xchg
cld
lods
cmp
mov
fwait
pop
pop
or
lock
insl
andl
sub
dec
scas
push
arpl
out
add
sub
lods
ja
mov
out
fmul
xchg
mov
mov
cmp
push
test
ret
cs
test
dec
sub
iret
and
inc
shll
insl
dec
into
lret
mov
lods
dec
cmpsb
fsubp
pop
movl
inc
jecxz
and
in
insl
daa
lods
inc
pop
je
loopne
or
notl
outsl
sti
arpl
add
lahf
cmc
mov
push
sub
mov
shll
add
push
aad
or
inc
sub
loop
mov
test
shl
loop
cmpsb
sti
cmpsl
stos
lahf
add
pop
and
cmpsl
movsb
mov
enter
cmp
xchg
mov
jecxz
test
mov
vdivsd
jo
inc
outsb
in
xor
xchg
adc
xor
addl
popf
add
dec
leave
xor
xchg
test
movsb
and
pop
ja
scas
dec
inc
jecxz
outsb
cmp
mov
and
mov
xchg
mov
and
xor
cmp
or
pop
imul
pop
mov
push
or
add
fimuls
inc
and
mov
jbe
pop
stc
loope
scas
rcrl
or
call
aas
in
jns
xor
ds
xor
pop
repz
sbb
inc
push
push
push
lret
filds
add
rcl
or
pop
inc
stos
notb
fimull
inc
add
lahf
mov
out
pop
jae
aas
sbb
jecxz
ljmp
pop
add
push
inc
pop
adc
sub
lods
push
mov
pusha
or
cltd
mov
sub
xchg
sbb
pushl
jp
ret
fistpll
aaa
push
xor
push
add
in
data16
mov
hlt
imul
test
adc
das
lcall
fdivl
ja
ret
pop
je
sahf
dec
sub
movsb
stos
das
xor
and
mov
icebp
or
cmp
jno
mov
imul
incl
bound
adc
es
pop
aaa
int3
xchg
xchg
pop
out
pop
jnp
xchg
imul
in
fwait
test
jbe
and
sbb
repz
enter
fcoms
leave
imul
mov
xchg
xor
sbb
jp
ds
shl
dec
mov
or
mov
dec
add
daa
add
lods
leave
lret
in
pop
pop
and
adc
insb
fcompl
mov
lret
lret
pop
pop
or
bound
xor
mov
pop
int
rcrb
mov
int
and
or
fwait
xchg
insb
cs
hlt
data16
or
dec
movsb
scas
add
scas
repnz
aam
fcmovb
pop
fdiv
add
testb
leave
mov
ljmp
fisttps
aaa
jnp
sbb
pusha
add
add
loope
push
arpl
lret
loop
in
dec
icebp
pop
mov
xor
or
jge
inc
nop
outsb
nop
lods
xchg
stc
out
xchg
popf
dec
xchg
aas
xor
jns
jp
leave
sahf
insb
pop
xor
push
orl
pop
into
loop
mov
dec
push
lods
sbb
sahf
sti
cwtl
scas
sbb
aam
push
mov
rorl
inc
movl
ja
inc
jmp
add
mov
pop
push
jmp
add
mov
or
call
push
pop
nop
mov
inc
es
cmp
rcrb
popf
xor
pop
addl
rcrl
inc
mov
mov
cmp
mov
or
sbb
push
mov
push
mov
xor
sarl
cmc
jle
jmp
insl
sbb
cmp
jne
outsl
loope
loope
xor
popf
lds
shlb
mov
sbb
pushf
icebp
push
jmp
mov
insb
or
jl
push
xor
adc
movsb
cld
popa
mov
ljmp
jns
pop
xchg
xlat
push
in
lds
push
cmp
les
bound
push
mov
cmp
lcall
cmp
mov
xor
js
insb
mov
and
cltd
lret
sbb
xor
or
dec
mov
cs
fld
cmpsl
sub
ficomps
dec
sub
lahf
movsb
push
jmp
std
movsl
add
and
inc
jbe
jo
les
mov
cld
into
mov
pop
cmpsl
in
mov
xchg
lahf
bound
xchg
xorb
jecxz
mov
addr16
dec
nop
cmpsl
sti
dec
push
push
cmp
ss
xchg
mov
lcall
sub
mov
inc
insl
xor
out
out
jp
cmpsl
stos
push
in
enter
sub
inc
mov
sbb
mov
adc
fldcw
rcl
push
in
das
bound
add
rorl
sbb
lea
sub
inc
mov
iret
setns
aad
sbb
int3
sti
cmp
cmp
int3
and
push
sti
xchg
xchg
mov
fistl
lock
stos
push
stos
dec
cmp
xchg
lock
mov
xchg
pop
sub
cmp
mov
pop
sbb
dec
fwait
jge
mov
test
pushf
pop
sub
add
fdivrs
lods
jo
mov
and
add
incl
pop
mov
sbb
ret
mov
call
xchg
or
pop
aas
mov
dec
sbb
pop
xchg
add
aad
loop
jmp
cmp
addl
ja
dec
adc
sbb
fwait
pop
push
gs
and
mov
xor
add
dec
xchg
mov
aam
movsl
das
inc
xor
xchg
mov
in
dec
fidivrs
pop
sub
mov
fildl
cli
mov
mov
lods
mov
test
cmp
pop
jns
pusha
mov
imull
sub
mov
rcrl
inc
orl
roll
pop
out
lahf
xor
sbb
arpl
xchg
dec
hlt
arpl
sbb
repz
push
aas
jge
popa
mov
push
inc
in
mov
cmpl
std
inc
cmp
jp
lds
mov
jge
lds
adc
scas
jo
lret
sbbl
fwait
les
daa
pop
sbb
xbegin
movsl
push
ds
push
push
inc
pushf
xchg
mul
sahf
sub
jp
xchg
cli
xor
xchg
push
dec
mov
imul
les
test
idiv
adc
and
adc
jae
mov
out
es
adc
push
and
inc
in
adc
stos
std
clc
mov
daa
adc
hlt
popa
movsbl
in
sbb
sbb
and
imul
test
dec
mov
pop
mov
pop
dec
insb
adc
jae
pop
lds
aad
fildll
lock
push
add
or
cmpsb
ds
dec
fstpt
and
js
mov
lods
inc
dec
in
es
mov
mov
mov
out
push
dec
xor
stos
dec
or
int
popf
push
sub
ja
cmp
aaa
clc
and
in
inc
inc
inc
sbb
add
mov
sub
or
or
push
imul
xchg
or
in
cld
pop
and
lock
push
movsl
mov
push
out
nop
mov
mov
ret
cs
push
sub
out
arpl
dec
outsb
jns
inc
push
xor
notb
hlt
sub
fsubrl
lcall
std
or
mov
loop
and
hlt
in
add
fcmovu
inc
adc
lods
cli
iret
sbb
sbb
dec
fcompl
push
push
mov
pop
sbb
xor
sti
adcb
mov
data16
ret
xor
lea
insl
cmpb
loop
lret
lock
jb
std
loope
mov
inc
push
mov
dec
ss
in
push
cmp
mov
rcll
scas
clc
orl
mov
shll
gs
mov
lret
mov
add
adc
pushf
stc
adc
inc
jmp
jno
cwtl
mov
mov
mov
push
fidivrl
sbb
jp
mov
adc
xchg
xchg
pop
les
inc
dec
cli
dec
cwtl
xchg
out
loop
push
cmp
mov
sbb
and
bound
in
ret
scas
fwait
inc
xchg
sub
push
addl
push
mov
bound
jae
fistl
cmp
call
fdivrs
sub
leave
xorb
sbb
dec
mov
rorb
dec
pop
xorl
fsub
popf
mov
sub
jge
sbbl
xor
daa
add
dec
test
push
cs
sub
mov
mov
dec
insl
seto
dec
jae
lea
mov
repz
popf
xor
mov
fbld
cltd
daa
sub
outsl
cmpsb
pop
mov
or
sub
push
jae
jo
sbb
xchg
inc
in
dec
jb
aam
xchg
lret
int
flds
sbb
out
mov
pop
imul
push
ficomps
fwait
stc
enter
push
sub
jns
or
mov
icebp
jns
jle
insb
push
jbe
call
and
mov
and
lcall
outsb
cwtl
imul
inc
dec
push
push
push
jmp
lods
sbb
test
mov
hlt
pop
push
mov
dec
iret
or
ss
int3
enter
and
popa
outsb
dec
pop
cmpsb
xlat
xchg
or
hlt
fdivs
test
add
mov
add
cmp
int
outsl
stc
imul
mov
movsl
daa
lods
jmp
push
mov
jg
aam
movsb
fiadds
and
cmp
jmp
fsubl
testl
jp
or
ljmp
inc
cmc
fs
int3
mov
scas
xchg
das
xor
and
out
icebp
scas
dec
repnz
daa
add
mov
sub
sub
in
and
lahf
xchg
push
or
add
incb
out
leave
fidivrs
dec
notb
fcmovnu
add
dec
mov
mov
xor
jbe
div
dec
push
and
inc
in
sbb
jne
xchg
mov
dec
ret
into
or
rcrb
fs
or
aad
lret
out
add
cmpsl
pop
inc
repz
hlt
push
mov
sbb
mov
adcl
call
mov
aam
movsb
call
sub
jns
jns
int
das
adcl
sbb
in
pop
mov
es
jg
mov
dec
mov
mov
shll
scas
aaa
mov
sbb
out
dec
push
inc
nop
xor
jns
pusha
pusha
jnp
fadds
jae
sti
or
fcomps
pusha
mov
adc
push
lret
xlat
push
scas
sbb
fucomip
in
cmp
aad
ficoms
inc
iret
inc
mov
popf
push
lcall
icebp
mov
mov
xor
xlat
and
ljmp
sub
pop
ja
icebp
sub
loopne
mov
dec
jo
int3
adc
shlb
ret
cltd
xchg
xor
test
mov
test
add
sub
in
scas
sub
add
xchg
std
repz
test
out
aas
int
pop
clc
mov
jmp
clc
cmp
pusha
fdivs
pop
dec
inc
mov
mov
cmc
movsb
dec
repnz
jp
mov
in
inc
test
imul
scas
or
mov
pop
bound
mov
push
out
cmp
cmp
or
in
dec
sub
aas
pop
sub
std
dec
dec
iret
call
lret
sbb
sbb
outsl
and
sub
and
mov
push
dec
xchg
ss
jo
adc
push
or
cmc
jmp
int
pop
cmp
jo
popa
jecxz
mov
int
dec
mov
fists
adc
fcomps
mov
fdivl
lock
orb
inc
xor
arpl
inc
iret
jmp
push
xor
jae
fwait
and
aam
stc
add
int
sbb
adc
xor
in
out
mov
xorl
adc
dec
dec
roll
data16
xor
inc
push
push
fsts
mov
mov
test
adc
roll
xlat
mov
add
shlb
movsl
int
sub
lret
push
cmp
and
xlat
nop
clc
adc
repnz
lock
push
cld
push
push
push
lods
sbb
adc
or
jb
loope
mov
jge
in
sub
adc
pop
leave
xor
sbb
loopne
ret
insb
insl
cmc
inc
imul
pop
sbb
aas
jle
mov
push
mov
add
xchg
sbb
push
or
push
xchg
push
mov
cmp
dec
mov
inc
jmp
in
jecxz
mov
fistpll
cwtl
fabs
push
out
push
insb
scas
cmp
cli
pop
js
adc
cmp
loopne
pushl
inc
add
mov
ds
cld
jl
and
mov
pop
divl
inc
sti
xchg
add
es
inc
fwait
mov
iret
push
ficoml
scas
xchg
push
int3
mov
and
push
or
test
lds
cmpsb
jb
push
cmovne
cli
dec
subl
mov
std
bound
xchg
push
adc
imul
sub
fucom
mov
scas
or
roll
fwait
lea
sub
xchg
or
sti
loop
sbb
scas
mov
in
out
mov
mov
jnp
sbb
mov
mov
pop
data16
xlat
aaa
mov
pushf
test
cli
fs
cmpsb
dec
sub
enter
lcall
adc
aam
loopne
sbb
clc
dec
int3
mov
push
imul
adc
mov
and
das
sub
jns
stc
lock
lods
cmp
xlat
sar
sbb
jmp
mov
loope
fidivrl
pusha
fdivs
add
ficompl
push
push
cld
pop
addr16
gs
mov
fidivrl
or
addr16
in
fidivs
adc
pop
xor
and
rcrb
clc
jno
mov
rorl
jecxz
sub
imull
shld
cwtl
insl
test
push
mov
mov
xor
inc
jecxz
repz
mov
pusha
push
outsb
push
jae
sbb
negl
sbb
test
lods
cmpb
push
mov
sub
and
sub
ret
inc
leave
fbld
dec
xchg
lods
es
rorb
mov
out
xchg
gs
jle
lds
pop
test
in
lods
adc
mov
mov
push
gs
pop
add
jnp
xchg
jo
fs
and
push
pop
out
aaa
mov
in
pusha
mov
fsubr
cmp
ljmp
addl
inc
xchg
pop
push
or
xor
sarb
xchg
jp
cmp
adcb
ja
ret
fistpll
inc
loop
in
lsl
fwait
inc
or
arpl
into
movsb
test
ss
lds
fs
mov
rclb
and
sarl
xor
pop
cmc
inc
jl
fwait
jl
cmp
jnp
dec
jl
scas
and
lcall
push
dec
adc
push
mov
add
xchg
jge
add
mov
mov
scas
cmp
xor
lods
int
repnz
sbb
cmp
out
mov
lods
shlb
pop
test
jns
dec
xor
xor
call
inc
daa
mov
sarb
decb
pop
js
or
dec
fdivr
leave
adc
inc
mov
xchg
movsb
dec
or
leave
or
filds
mov
int
jl
je
imul
dec
pushf
jecxz
xor
cli
rolw
cmp
xchg
fisttpll
movsl
xchg
imul
mov
xchg
cltd
sbb
push
cli
inc
push
push
cmp
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
inc
push
xor
push
mov
mov
add
mov
decl
mov
mov
mov
xor
movl
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
movl
sub
mov
or
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xorl
add
mov
mov
sub
mov
orl
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
call
cmpl
jb
mov
addl
mov
adc
sub
or
mov
orl
subl
mov
mov
sbb
sub
adc
mov
add
orl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
xor
add
dec
mov
jmp
mov
mov
sub
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
jmp
jge
pop
add
sti
jge
jne
pop
in
aas
xchg
sti
je
jns
pop
pop
jp
xchg
mov
inc
jl,pn
in
sub
pop
inc
fs
jns
mull
sbb
pop
in
pop
cmp
data16
adc
pop
mov
add
dec
cmpsb
adc
sbb
push
insl
pop
pop
push
sub
mov
imul
bound
pusha
add
test
pop
inc
inc
pop
daa
ljmp
push
xchg
cld
fs
or
pop
cld
scas
and
add
jg
xchg
inc
xchg
dec
daa
adc
jge
xchg
add
std
push
xor
or
movsb
imul
add
add
imul
mov
cli
or
jnp
cmp
or
lret
idivl
ss
mov
ret
int
fdivrl
mov
adc
add
jne
mov
fisttpll
in
adc
fmuls
movsb
out
addb
sub
sub
je
dec
push
inc
movsb
mov
cltd
mov
pop
mov
cltd
imul
aas
lahf
inc
lods
sub
mov
xlat
mov
cltd
pop
xchg
xchg
xor
inc
dec
sarw
loopne
dec
popa
mov
push
shlb
push
jp
aad
lahf
jne
jns
arpl
mov
dec
xor
stos
movsb
stc
cltd
mov
pop
int
push
imul
rclb
fnstsw
jmp
pop
push
ja
iret
out
jg
pop
cmc
mov
xchg
jmp
dec
lods
out
scas
iret
les
fldl
push
imul
adc
imul
pusha
xor
lds
sbb
xor
incb
fidivrl
sbb
pop
sbb
stos
cltd
pushf
sub
mov
dec
mov
xor
fbld
aas
sbb
push
xchg
in
cmp
adc
cmc
and
les
push
data16
sarl
pop
nop
fwait
and
in
push
adc
out
jge
jns
ds
mov
cwtl
push
or
inc
push
stos
fcomip
dec
imul
pop
jle
aam
jne
pop
sbb
sub
shll
jge
lahf
dec
jg
push
inc
mov
popf
pusha
pop
pop
addr16
les
mov
xchg
and
pop
xchg
pusha
fidivrs
xchg
mov
rcll
test
cmp
stc
mov
std
sar
lret
ficomps
xor
add
mov
mov
lods
jne
ds
sbb
stos
arpl
mov
std
jnp
out
outsb
mov
sub
clc
cmpsl
mov
mov
pop
xchg
pop
std
das
inc
jl
mov
add
stos
push
clc
orb
cmpsb
xor
shll
cmpsb
sar
popa
xchg
or
out
pop
daa
inc
sub
add
stos
insl
repz
rorb
call
lock
pop
imul
scas
ficoms
pop
inc
ds
jge
add
mov
push
inc
out
cli
mov
leave
shll
repz
jns
sbb
jmp
cli
test
nop
scas
sbb
pushf
xlat
mov
jmp
out
gs
movsb
int
mov
orb
mov
inc
ljmp
mov
notb
clc
loopne
and
aaa
mov
xchg
movsl
das
aad
scas
gs
add
mov
xchg
popf
out
pop
movsl
jl
jecxz
js
daa
xlat
fists
jecxz
adc
push
fmul
jo
out
push
mov
fdivl
aad
cmpsl
ret
into
mov
mov
push
lea
repz
xchg
mov
xchg
cmp
xchg
test
icebp
jl
fs
sahf
flds
pop
std
rclb
pop
int3
repz
stc
lcall
jmp
mov
insl
lret
dec
aaa
aad
icebp
int
pop
scas
jecxz
mov
jp
mov
add
or
gs
addr16
push
push
mov
sti
xor
and
mov
inc
add
sbb
xorl
and
push
into
xchg
inc
ret
insb
push
shlb
popf
push
cmpsb
aas
and
in
push
shlb
or
lods
xlat
or
call
and
stos
stc
xchg
movsb
inc
xchg
inc
and
imul
mov
int
jg
adc
shll
aas
ret
xlat
addl
pop
jno
out
repnz
scas
iret
fbstp
in
cld
inc
dec
lock
rorl
mov
mov
inc
dec
adc
fstpt
jecxz
push
les
mov
add
mov
inc
test
mov
sbb
cmp
adc
mov
ret
leave
xchg
bound
xorl
lock
out
add
and
lods
cmp
sbb
and
jmp
enter
mov
add
repz
mov
jmp
loop
in
shll
add
push
xor
mov
nop
lret
test
sbbl
ja
sbbb
outsl
push
or
stc
cmp
insb
mov
das
push
std
dec
xor
xchg
fwait
test
pop
hlt
dec
jecxz
jg
lcall
mov
add
shl
add
sbb
popa
into
mov
dec
cmp
dec
push
mov
lcall
add
xor
or
lahf
mov
cwtl
mov
xor
xchg
cmp
xlat
icebp
pop
inc
aas
jg
push
xor
add
inc
sarb
ret
scas
dec
jecxz
shl
push
call
lds
hlt
cmp
das
xchg
cld
adc
lcall
and
sub
shl
mov
cmpsb
filds
jns
adc
pop
test
fdivl
ret
jmp
or
jno
cmp
mov
push
in
sbb
jmp
pop
icebp
divb
dec
jmp
jp
inc
adc
pop
pop
cmpsb
cmp
xchg
aam
dec
jb
sahf
push
pop
sbb
push
mov
les
jbe
les
inc
mov
int3
js
mov
shrb
push
xor
or
inc
and
data16
orl
xchg
mov
sub
cmpsl
xor
mov
stc
xchg
pop
or
and
lahf
rcrb
cmpsb
jl
lret
push
xor
inc
int3
xor
inc
inc
xor
rorl
sbb
cmp
pop
das
and
jno
fldenv
or
and
lret
stos
add
popa
mov
repz
data16
lock
fwait
cmc
js
stos
fcmove
push
out
arpl
repz
pop
lahf
mov
fstps
aam
imul
outsb
in
fwait
lds
lret
or
fidivs
hlt
pushf
jne
xlat
lret
scas
xor
in
loope
cmpsl
les
xchg
adc
add
mov
pop
mov
cmp
lret
jmp
xchg
xchg
sub
int3
fmul
dec
push
les
rorl
cmp
jmp
aaa
es
cmpsb
mov
sub
inc
mov
sub
inc
mov
int
mov
cmp
sbb
mov
dec
add
sbb
push
push
lahf
das
insb
ret
imul
jbe
sbb
fs
pop
xchg
mov
push
xor
gs
sti
push
sti
mov
pop
mov
stc
pop
mov
lods
mov
and
gs
out
je
scas
mov
cmp
loope
jp
into
or
xlat
push
movsb
int3
mov
fistpll
or
aaa
aaa
push
lds
xor
jecxz
sbb
cmp
lahf
popf
clc
dec
mov
mov
dec
xlat
sub
rcl
das
jbe
pop
out
fsubs
pop
pop
in
xor
and
fcoml
sahf
pop
pop
and
fs
pop
pop
rorl
fs
push
dec
loopnew
insb
mov
leave
adc
push
xchg
out
push
ds
sub
pop
jp
pop
mov
int
xchg
xlat
in
jl
push
scas
push
pop
lock
adc
mov
cmp
in
idivb
stc
shl
fs
es
mov
cmp
xchg
je
inc
nop
out
sbb
out
repz
sub
xchg
ljmp
pop
mov
adc
inc
jmp
pop
cld
loope
dec
subl
ss
jns
bound
mov
mov
xor
daa
sub
and
repz
mov
sub
bnd
loope
into
hlt
loope
fistps
inc
inc
adc
jmp
nop
mov
sbb
int
xor
mov
fbld
filds
adc
mov
push
xor
sub
in
arpl
cs
jno
bound
flds
int
mov
sub
imull
xor
addr16
fcomi
push
movl
pop
lea
inc
scas
and
daa
in
mov
divl
arpl
insl
dec
cmp
mov
or
sarb
repz
aaa
and
pop
xor
arpl
ja
inc
les
pop
mov
inc
lcall
rcrl
cltd
lds
aad
sub
scas
ret
repnz
punpcklwd
in
mov
pop
sbb
jp
in
sub
lods
out
mov
jne
fisubrs
adc
mov
fcmovu
lret
inc
gs
movsl
xchg
bound
es
test
je
xor
xor
insb
addr16
in
fisubl
das
out
cltd
or
push
xchg
cltd
lds
mov
pop
orb
loope
lret
cmp
out
das
fnstcw
push
lock
aad
or
sbb
xor
fdivrl
xor
xchg
mov
xlat
mov
in
add
outsl
scas
mov
icebp
rcrb
inc
cld
inc
or
in
adc
shr
inc
and
mov
jg
jne
popa
cli
cmp
or
lock
cmpxchg
xchg
arpl
inc
cmp
ret
movl
scas
mov
into
stos
idivb
repnz
fisubl
mov
push
jns
mov
add
push
aam
insb
and
aaa
lods
cmp
loop
mov
jecxz
in
xchg
or
es
popf
mov
xchg
repnz
int
push
xchg
subb
pop
inc
inc
lods
sbb
pop
test
rorb
sub
mov
jp
stc
push
push
and
jmp
mov
pop
or
std
sarl
in
cmpsb
rclb
nop
daa
inc
xchg
repz
dec
leave
push
and
adc
sbb
ss
add
into
inc
je
dec
or
lods
cmp
add
sub
mov
push
sbb
fldenv
rep
out
mov
add
and
es
ljmp
mov
lcall
or
sub
sbb
cmpsb
sub
or
repnz
pop
xchg
imul
ret
mov
mov
sub
rcl
and
es
adc
aam
adc
mov
push
mov
jnp
fcomp
xorl
push
ds
xchg
mov
cmc
xchg
repnz
mov
stos
popa
stc
incb
inc
mov
cli
xor
enter
push
test
das
out
aam
ljmp
jb
mov
mov
mov
test
ret
pusha
xchg
adc
data16
push
testl
dec
or
lea
or
adc
addl
mov
int
jmp
xchg
loop
push
dec
add
pop
dec
pandn
iret
sti
jg
shr
dec
hlt
sahf
and
pop
sub
push
dec
aad
enter
cmp
arpl
or
loope
add
pushf
pop
test
es
ljmp
dec
mov
ret
add
add
cmp
pop
adc
pop
aam
jg
dec
xor
xchg
pop
sub
pushf
dec
cmp
xchg
mull
pop
jns
test
data16
in
dec
popf
rcl
sahf
mov
gs
or
ds
hlt
adc
push
inc
repnz
rorl
fsts
sbb
or
lret
pop
cmp
shr
mov
sub
fs
aam
mov
cli
hlt
nop
popl
mov
ja
mov
shl
lds
mov
icebp
jae
push
out
push
sub
pop
mov
outsl
mov
fcmove
mov
in
mov
mov
in
mov
loop
push
mov
loop
andl
mov
add
xchg
fcompp
ret
shr
dec
dec
mov
jle
push
jae
bound
imul
enter
mov
sub
fistl
inc
mov
addr16
pop
dec
jae
jmp
daa
add
divl
or
mov
jae
in
or
jne
mov
pushf
jb
icebp
xchg
test
sbb
inc
lea
fidivrs
xlat
and
leave
je
inc
popa
out
xchg
or
mov
call
rclb
popf
or
cli
xor
adc
call
fldcw
mov
outsb
bnd
dec
adc
and
int3
cmp
push
pop
cltd
filds
insb
sub
arpl
fcoms
fisubl
ret
popf
loope
cmp
or
inc
xchg
test
and
sahf
push
movsl
push
sbb
sbb
in
sbb
repz
fucomi
dec
addr16
cmp
pop
sbb
cmp
repnz
push
out
push
dec
mov
mov
vpmacsswd
fwait
push
in
push
push
push
test
dec
sbb
add
popa
sub
pop
pop
xchg
int
repz
cmp
pusha
sbb
jecxz
mov
inc
adc
inc
cmp
jmp
aam
cwtl
sub
mov
and
call
imul
rolb
das
call
stos
movsb
push
cmp
fsubrl
adc
das
inc
into
ds
xor
pop
jmp
bound
and
orl
fstpl
and
in
add
iret
or
in
or
jb
andl
pop
mov
mov
shrb
les
push
add
dec
add
fsubrl
loopne
inc
jns
mov
rolb
add
cld
mov
jb
js
out
mov
outsl
and
popf
inc
test
and
push
jae
addb
jbe
dec
shll
fiaddl
mov
daa
andb
jbe
sbb
push
ljmp
in
jb
neg
lock
push
jb
in
out
add
out
in
aaa
pop
in
push
scas
adc
mov
stc
test
das
jae
or
fistpll
adc
mov
bswap
jne
fidivrs
fiaddl
insb
mov
pusha
push
mov
ss
xchg
cmp
in
push
push
sarl
fstpt
cmp
adc
dec
ljmp
fwait
adc
push
popf
jg
cltd
daa
subb
mov
pop
lea
inc
and
cmp
sub
inc
cli
bswap
aas
cvtps2pd
mov
shl
add
nop
adc
jmp
leave
movsb
pop
fldcw
adc
jge
or
mov
jns
test
mov
add
std
in
jb
dec
scas
lret
sbb
fiaddl
jecxz
inc
xlat
dec
rcr
mov
lds
mov
dec
jmp
je
fcmovnu
lea
xor
and
mov
gs
xchg
dec
inc
ret
mov
out
push
outsb
aad
inc
lret
arpl
xchg
ret
dec
sub
mov
movsw
je
and
push
xchg
cwtl
cs
loop
cmp
pop
jg
outsl
rol
rorb
and
ret
push
or
je
add
pushf
out
mov
pop
clc
js
fsubs
xchg
outsb
cmp
cmp
es
adc
and
popf
jle
mov
rcr
inc
mov
icebp
sarl
ds
xchg
mov
icebp
call
jp
dec
inc
xor
or
out
rorb
mov
xchg
mov
inc
jmp
mov
or
daa
mov
out
fucomi
bound
imul
pop
sahf
and
rol
jnp
sub
out
or
push
ret
add
scas
mov
and
cmp
dec
xor
xchg
shrb
fadd
push
mov
sbb
push
fcmove
stc
ljmp
fidivrl
clc
cltd
pop
shlb
mov
fsts
cmp
sub
cltd
and
jae
jno
sbb
mov
push
mov
fcmovnbe
es
adc
mov
icebp
or
sti
xlat
popa
pop
arpl
mov
add
mov
ljmp
pop
or
cmp
xchg
dec
lds
mov
pop
sub
push
test
inc
jae
or
cmp
into
mov
xor
out
mov
add
xor
aam
xor
out
pop
insl
xchg
insb
xchg
popf
in
imul
frstor
xchg
out
adc
cmp
inc
aaa
js
sbb
push
aam
fwait
ljmp
mov
push
xchg
popf
das
je
ss
mov
das
sub
loope
mov
incl
cmp
sub
mov
or
adc
add
sti
add
sbb
aas
adc
leave
fisttpll
cmpl
ja
lret
sbb
xchg
jl
pop
loop
add
mov
adc
inc
or
xchg
sbb
call
cmpsb
cmpsb
imul
push
xchg
adc
cmpsb
iret
xlat
push
mov
jb
mov
jecxz
inc
int
lret
lock
jo
cmp
test
je
mov
ja
jp
fwait
je
stos
out
dec
push
dec
add
stos
dec
leave
push
enter
out
push
sti
cmpsl
ljmp
fs
aad
mov
fdivs
and
add
or
xor
sub
mov
xchg
jp
push
pop
std
dec
add
sub
ret
mov
movsb
in
nop
lret
cmp
fdivl
push
testl
nop
shll
les
repz
cltd
jnp
adc
lret
mull
repz
xchg
add
sti
test
stc
arpl
inc
inc
sub
xchg
dec
xchg
aas
shlb
cmpsb
cmp
ljmp
xor
outsb
ja
push
or
jbe
push
xchg
lahf
cli
or
dec
adc
mov
ret
sbb
pusha
jnp
xchg
mov
mov
roll
test
in
push
sub
scas
cmp
fstp
pop
push
ficoml
mov
ficoms
enter
cmc
arpl
popa
and
hlt
popf
loopne
test
push
push
fldenv
rcrl
cmp
cmpsb
nop
pop
shr
jge
jl
and
int
ret
xchg
data16
test
inc
jge
jl
add
xchg
movsb
rolb
in
adc
jge
mov
lret
dec
pusha
xor
outsl
bound
andl
jmp
dec
sub
add
mov
sti
stc
les
in
scas
cmp
inc
pop
fstps
les
stc
je
data16
mov
and
or
mov
and
stos
cmpsl
movsl
lret
jae
arpl
or
into
loope
rorl
dec
test
and
mov
mov
pop
push
loope
push
inc
repnz
test
stos
fsubrl
pop
out
xchg
int3
sbb
fwait
icebp
test
add
sub
cli
mov
jge
mov
adc
dec
loope
popf
sbb
sub
cmp
sub
mov
jl
and
ret
insl
and
cmp
lea
adc
mov
setb
and
cld
and
aad
addr16
cmp
inc
cmp
mov
jmp
outsb
adc
vaddsd
hlt
pop
stos
andb
cmp
pop
jl
or
add
jl
xchg
movb
out
or
aad
xchg
mov
cwtl
subl
cld
test
push
loop
popa
sbb
add
xor
aad
lcall
jnp
adc
mov
inc
fimull
jg
std
in
mov
mov
cmc
cmp
je
mov
in
pop
es
ret
push
fisubrs
lret
inc
cs
out
sahf
mov
arpl
push
dec
jnp
add
jnp
cltd
and
ss
call
mov
lock
in
fwait
cmpsl
push
mov
push
push
hlt
mov
nop
out
nop
outsb
and
imul
lods
nop
bswap
lods
fnsave
lret
push
shll
lods
mov
jo
pop
fwait
cltd
gs
dec
mov
lret
xchg
xor
xor
add
mov
dec
mov
sti
push
xchg
xor
sti
repnz
movsb
mov
push
mov
adc
in
mov
mov
mov
inc
add
cmovl
jmp
pop
dec
sbb
jge
inc
jno
push
loop
gs
imul
aaa
bsf
lock
xchg
push
push
mov
mov
bound
jge
jae
xor
jnp
pusha
les
add
pop
rorl
jns
sbb
outsb
test
movsl
xchg
or
fistpl
loope
dec
dec
mov
cs
jne
iret
or
nop
stos
add
jb
and
sbb
in
ljmp
inc
mov
fbstp
das
imul
mov
add
fistl
fdivs
aas
movsl
fidivs
xchg
into
repz
sahf
iret
jl
jns
dec
aaa
sbb
jmp
jns
fldenv
ds
push
js
and
push
add
push
pop
sti
ljmp
or
and
or
add
loope
xchg
cs
xchg
jmp
imul
and
pop
es
aaa
jbe
xchg
sub
pop
out
cwtl
xor
sub
add
pop
jbe
xchg
in
mov
inc
jmp
pop
rcrb
adcl
enter
mov
mov
pop
mov
dec
cltd
scas
insl
movsl
ret
cmp
je
call
daa
xchg
sub
pop
dec
or
aam
cld
in
dec
lret
test
cmp
mov
loopne
enter
pop
lret
shlb
in
dec
and
fwait
setle
and
add
push
pop
xchg
jne
adc
js
inc
shrl
adc
cmp
scas
testb
push
movsb
scas
sub
adc
cli
mov
hlt
mov
das
fisubl
add
sbb
mov
dec
unpcklpd
nop
push
adc
sub
pop
lds
scas
sub
enter
xor
mov
mov
inc
jmp
fsubl
jp
movsl
and
adc
dec
lods
and
int
dec
dec
mov
das
fdivl
push
sbb
dec
mov
or
iret
inc
pop
add
fldl
popa
push
sub
outsb
ror
mov
mov
xchg
xlat
mov
jg
adc
cmp
cmpsb
fildl
or
mov
pop
fadds
es
cmpl
dec
js
adc
into
jl
fisubrs
dec
push
imul
popf
sbbl
sbb
sti
ds
lret
je
sti
xor
push
loope
xchg
sbb
cltd
jp
inc
mov
pop
jbe
jp
xchg
inc
pop
out
push
into
gs
mov
add
in
push
shll
or
les
test
mov
mov
jnp
repz
sub
cltd
and
scas
int3
and
das
test
ljmp
sbbb
jmp
stos
in
xchg
pop
ret
test
xor
inc
pop
fsub
pop
cmpsb
mov
jp
lods
dec
ret
ljmp
adc
mov
loope
jle
mov
adc
jp
and
sbbb
pop
xchg
mov
mov
mov
aam
fucom
adc
push
push
lcall
aas
into
callw
mov
mov
sub
xchg
sub
adc
fs
nop
or
stos
inc
popl
jecxz
xor
xchg
cs
pop
jle
push
lock
sbb
dec
sbb
sub
pop
mov
inc
pop
loop
pop
inc
sub
push
cmpsb
imul
gs
int3
xor
mov
stc
mov
push
negb
cmp
into
mov
bound
xor
out
add
mov
xchg
jo
dec
sbb
or
insl
dec
mov
inc
push
mov
call
jecxz
ss
xorl
push
cli
mov
cld
inc
adc
mov
out
aaa
push
rcll
jge
jne
arpl
jb
pop
jle
movsl
ficoms
jg
leave
ja
cmp
je
inc
pop
pop
adc
push
sbb
cmp
arpl
push
cmpsl
in
or
dec
push
or
sub
ret
data16
int3
push
mov
sbb
insb
ret
lret
fsubrs
push
scas
icebp
xlat
sbb
ja
loopne
imul
lcall
rcrl
add
pop
jp
xchg
data16
or
pop
mov
xchg
les
mov
fdiv
call
not
xchg
in
mov
iret
jl
pop
mov
xchg
adc
push
xor
pusha
fisubrl
aad
jo
lock
cli
mov
popa
mov
adc
mov
mov
mov
and
arpl
xor
enter
xchg
mov
loop
movsb
cmp
mull
or
push
inc
xchg
mov
add
enter
cwtl
mov
add
mov
push
lods
clc
iret
or
lcall
inc
aaa
or
inc
jbe
or
out
xchg
sbb
adc
mov
mov
jg
push
lret
das
mov
fdivl
ss
dec
mov
add
insb
es
jg
adc
adc
stos
mov
mov
xchg
and
iret
push
in
mov
ljmp
inc
add
jbe
cld
xchg
sub
inc
mov
lret
cmc
imul
popa
jmp
js
cmc
mov
das
testb
imul
dec
ret
sub
enter
test
outsb
nop
aam
jl
lret
push
sbb
bound
test
mov
pop
or
sbb
cs
test
in
repz
scas
test
int
mov
push
in
cwtl
jns
rol
es
cmp
popf
sbb
xchg
stc
popa
mov
push
stos
mov
jb
movsb
or
outsb
mov
push
push
pop
cmp
outsb
push
gs
jge
jne
lret
dec
pop
fdivs
xor
cld
cmc
nop
enter
jo
sub
cmp
shlb
xchg
popf
mov
lahf
fisubs
add
sahf
cwtl
xor
fidivrs
shrl
sbb
adc
loopne
adc
push
mov
mov
sub
insb
mov
in
in
add
fcompl
cmp
mov
mov
add
jecxz
jp
dec
inc
lcall
inc
dec
xor
or
jg
inc
adc
fisttps
incb
xchg
cmp
xlat
jno
rcr
int
inc
mov
add
push
cmp
imul
stc
out
sbbl
dec
outsl
sahf
in
or
sub
ljmp
imul
pop
mov
in
lea
mov
ja
or
in
shll
pop
push
or
xchg
test
mov
jmp
sbb
xchg
jl
lock
loope
cmp
aad
or
jge
mov
adc
mov
mov
pop
xchg
xchg
popa
icebp
inc
into
ss
jbe
xor
push
cmc
push
xor
cli
clc
push
xchg
mov
shll
mov
cmpsl
dec
out
and
mov
ja
rolb
sbb
mov
mov
pusha
xchg
sahf
mov
lea
test
mov
outsl
test
add
mov
bound
and
icebp
lds
jp
cli
sub
ret
pop
addr16
jae
cld
sti
out
xchg
dec
sarl
add
mov
mov
ret
stos
stos
sub
xchg
roll
xchg
int3
jno
popf
in
or
es
aas
mov
or
fnstsw
cmp
cmp
xchg
or
mov
not
cltd
pop
out
orb
scas
adc
movl
dec
inc
mov
fiaddl
sbb
pop
lods
xlat
push
xchg
and
xchg
fcomi
jl
test
mov
ret
xor
cwtl
cmp
pusha
push
xchg
sub
nop
fildll
pushf
push
outsb
adc
or
sub
fadds
and
ss
xchg
andb
ret
pop
in
add
test
adc
or
jae
test
cld
dec
fnsave
pushf
add
mov
jne
stos
jne
jo
adc
xor
lahf
dec
jl
loopne
lods
cmp
loope
xchg
sbb
sub
lods
in
sbb
sub
inc
loope
adcb
das
addr16
mov
push
aas
leave
mov
and
xor
leave
out
or
and
add
lahf
sbb
cwtl
push
into
cmp
out
test
mov
sysexit
xchg
adc
adc
fistpl
cmpsb
and
dec
cmp
xor
aas
xor
out
jmp
or
push
rcr
or
repz
int3
cmp
fmuls
push
jmp
aam
jle
clc
jge
cmc
dec
loope
iret
push
or
pop
add
cld
jmp
int3
icebp
cs
popa
mov
mov
pop
mov
jne
pop
clc
imul
adc
pop
aas
push
push
cmp
sub
sub
fs
cs
inc
jecxz
and
int3
lcall
inc
push
ds
stos
sub
lahf
mov
loop
mov
fidivl
fldcw
int
sub
test
clc
ret
shlb
es
mov
sub
pop
sbb
jp
in
mov
lahf
fsts
push
sbb
out
data16
out
push
enter
mov
jl
bound
ja,pt
lcall
outsl
dec
push
push
es
pop
lock
sub
xchg
xchg
add
enter
idiv
cld
mov
sub
mov
jl
sub
call
dec
xor
mov
aad
ficompl
mov
xchg
xor
bound
idivl
imul
icebp
xor
lahf
cltd
adc
aas
sub
mov
jecxz
pop
enter
jns
xchg
adc
xlat
test
clc
dec
in
repz
clc
ja
pop
rol
rcl
mov
mov
pusha
and
inc
fimuls
dec
ljmp
out
fists
pop
icebp
xchg
sbb
jae
push
push
sub
data16
xor
inc
xchg
adc
dec
shll
or
and
mov
xchg
push
ret
pop
adc
sti
xchg
iret
insb
xor
dec
mov
les
cmp
jns
add
push
xchg
inc
add
add
mov
jmp
jb
sbb
lret
mov
mull
jp
pop
jp
in
xor
xor
push
loope
push
pushf
jmp
pop
add
sbb
js
add
scas
fwait
cmp
jns
imul
pop
movups
in
inc
mov
or
jns
lock
add
mov
jle
das
test
mov
lock
pop
cltd
insb
mov
cs
data16
mov
mov
mov
es
jp
sub
in
sub
sub
push
cmp
cmp
leave
fcom
mov
mov
loop
popf
sbb
js
inc
and
cmpsb
jno
xlat
aad
fs
mov
xor
popf
dec
leave
test
or
inc
aas
cltd
and
push
pushf
sbb
in
test
orb
mov
int3
ljmp
in
push
jns
sbb
loopne
xchg
mov
add
adcb
nop
fs
add
test
jnp
push
push
sbb
push
xor
adc
leave
adc
shr
mov
out
pop
jle
je
pop
mov
fwait
pushf
mov
push
jmp
xor
gs
cmpsl
lods
jno
jge
jmp
mov
lcall
negb
or
pop
sbb
fstpl
hlt
jge
push
pop
pop
inc
cwtl
mov
push
sub
rol
ret
sub
adc
sbb
sub
push
loopne
jnp
pushw
push
push
fsubrs
js
xorl
cmp
lahf
mov
mov
xor
outsb
gs
jp
test
xlat
or
jmp
adc
imul
hlt
scas
adc
in
les
cmp
sti
into
jle
xor
and
out
filds
mov
loope
scas
stos
pushl
hlt
pop
xchg
xchg
insb
in
fld
mov
aaa
add
mov
loopne
push
sti
fs
lret
mov
and
stos
fcoml
xor
jl
xor
roll
mov
pop
adc
sahf
aad
and
jns
pop
or
adc
sub
mov
pop
aam
sarb
mov
outsl
add
jmp
jnp
cmpsl
cmp
pop
cmpsb
stos
mov
ficoml
inc
mov
sub
mov
cmp
jo
sti
push
jnp
hlt
mov
or
mov
or
xor
mov
dec
cmpsb
pop
and
scas
pop
inc
in
xchg
xchg
out
mov
ret
push
stos
adc
outsl
sbb
or
ds
fsubr
pop
push
mov
mov
ret
adc
jbe
mov
inc
sahf
cmp
les
xchg
lahf
clc
push
push
push
jae
sti
rcrb
movsl
mov
in
dec
mov
icebp
pop
mov
test
dec
inc
push
xchg
lock
aam
dec
popf
adc
out
into
rcrl
pop
cmpsl
mov
pop
or
enter
popl
mov
test
xchg
fsts
adc
pop
cmp
mov
push
aas
add
sbb
loopne
push
ret
push
or
jg
lret
cmp
dec
cmp
jle
or
fs
mov
outsl
cmp
ss
outsb
jle
icebp
mov
pop
and
inc
sub
xor
sub
aam
movsl
daa
dec
test
add
dec
mov
out
sub
fsts
in
inc
inc
int
jnp
test
in
lods
xchg
pusha
push
insl
arpl
sub
pushf
sbb
mov
jns
aas
daa
xchg
mov
out
xchg
pusha
push
shl
push
je
sbb
xor
mov
jp
or
cltd
icebp
cmp
adc
cmpsb
jne
xchg
shl
inc
and
pop
gs
push
icebp
xchg
leave
push
jg
mov
fistpll
sbb
divb
clc
mov
xor
push
insl
in
mov
out
cltd
sub
sbb
arpl
les
mov
jnp
sbb
xchg
sbb
roll
adc
testl
pop
pop
push
jo
pop
insl
push
xchg
pop
xor
cwtl
xor
clc
faddl
and
ror
popf
rcrb
mov
outsl
dec
xor
rclb
arpl
sbb
call
xchg
adc
int
js
push
mov
mov
fbld
fdivl
push
jb
xchg
scas
cltd
lahf
pop
mov
nop
in
notl
out
inc
sbb
sbb
add
addb
outsb
es
sti
rorb
js
mov
dec
xor
jmp
imull
fwait
mov
adcl
popf
pop
jmp
sbbl
in
sbb
inc
sbb
sub
fadds
sub
dec
mov
aas
loopne
or
jecxz
scas
ds
cvtps2pd
sbb
shrl
iret
mov
sub
es
lret
popf
ljmp
jns
ret
popf
cmp
pop
jb
xchg
dec
jb
jnp
and
stc
jno
aam
add
sbb
int
cmp
dec
or
xor
dec
mov
fisttps
pop
sbb
hlt
xchg
cli
adc
cld
pop
pop
pop
pusha
mov
adc
ljmp
pop
imul
cs
aaa
imul
addl
cwtl
pop
sar
movb
hlt
pop
xchg
inc
cmp
loope
jnp
mov
jge
fisubrl
imul
jg
or
push
adc
mov
out
pop
cmp
roll
aam
jl
push
lods
je
scas
rorb
pop
xor
aas
jb
sbb
jo
inc
fucomp
xchg
xchg
sbb
cltd
mov
sbb
ret
pop
int
std
sub
loope
mov
nop
repz
pop
fnsave
out
mov
sub
movsb
test
and
jno
lock
ffree
das
fdivl
sti
push
jp
jl
daa
or
jbe
test
push
push
pushf
aas
rcll
push
inc
pop
imul
jb
sub
sbb
pop
sysexit
jmp
cmp
lods
ss
lds
or
enter
lret
xor
mov
gs
shrb
jmp
cmp
cmpsb
outsl
cmp
push
stc
lret
cwtl
jl
jl
movsb
jo
cld
jmp
or
xchg
mov
out
aam
sub
gs
xchg
popf
rcll
inc
loop
jmp
movsb
idivb
adc
fldcw
push
je
mov
inc
pop
pusha
icebp
mov
cmpsl
xorb
xor
xchg
dec
stos
into
cmp
lock
jb
lret
mov
dec
mov
test
mov
inc
ja
and
sub
cli
xor
mov
shlb
or
mov
jmp
daa
sbb
idivl
shrl
cmp
dec
jle
mov
rorl
lea
sbb
mov
sbb
adc
in
push
pop
test
loopne
mov
cli
mov
jb
sbb
insb
mov
sahf
rcrl
data16
cmp
mov
mov
jo
mov
pop
in
or
lds
pop
ja
ret
pop
icebp
loopne
adc
push
lods
mov
mov
cmp
filds
xlat
lods
iret
sbbl
in
and
jg
loopne
fwait
mov
cli
fistps
int
bound
push
jo
add
cmp
cmpl
sbbl
daa
test
push
imul
sbb
cmp
rol
cmpsb
or
fists
sub
in
insl
into
sbb
cmp
or
shll
or
and
sub
push
sbb
adc
or
fst
and
sub
aam
push
xchg
out
inc
repz
pop
pusha
icebp
lret
ret
mov
xor
iret
outsl
mov
push
push
xchg
jmp
dec
mov
adc
aad
sbb
inc
dec
test
xlat
and
push
in
out
add
adc
add
hlt
lock
xchg
mov
and
movsb
or
fadds
jo
pusha
test
loop
cmp
and
vmovdqa
es
outsb
or
nop
pop
mov
fcomip
lret
pop
sarb
popf
mov
outsl
xor
jnp
pop
repz
ja
dec
push
xor
pop
push
xchg
jb
xor
add
mov
loopne
xor
in
cli
insl
ss
jne
cmp
cltd
scas
stos
xor
in
mov
mov
cmpsl
jmp
dec
jne
xchg
movsl
cmp
insb
push
es
mov
adc
mov
mov
test
cltd
dec
jb
mov
jge
into
nop
jmp
in
out
or
mov
dec
xor
insl
pusha
test
mov
outsl
fwait
popa
outsb
lods
mov
dec
daa
fmuls
push
xchg
sti
add
dec
dec
sub
das
jle
aas
fwait
aaa
int
xor
sbb
ret
sub
cmc
cwtl
in
rclb
leave
jle
dec
add
push
repnz
js
fnsave
ljmp
fmul
xor
pop
cmp
pusha
inc
dec
stos
pop
pop
adc
pushf
sub
jge
sub
rcl
ror
jno
push
inc
lret
xor
cwtl
and
dec
mov
pop
testb
mov
jns
xchg
cld
inc
xchg
fimuls
sahf
xor
xor
pusha
gs
xchg
or
pushf
in
pop
push
ds
sub
loop
add
adc
minps
xorb
jmp
pop
xchg
xor
mov
in
lods
jmp
add
jmp
inc
add
mov
orl
dec
lods
mov
or
jle
push
test
and
push
jecxz
push
icebp
inc
or
mov
mov
out
fwait
jg
cmp
in
fiadds
xlat
jbe
mov
mov
push
push
fldl
xchg
cmovl
or
push
mov
cld
stc
sub
adc
mov
sbb
loop
cli
insl
pusha
adc
ret
rolb
mov
dec
test
cltd
mov
jo
pop
pop
pop
aam
sub
and
sub
xchg
sbb
inc
movsb
sbb
in
loopne
mov
daa
sub
cmpsl
adcb
cmc
ja
imul
iret
aam
lcall
xor
neg
dec
repnz
mov
dec
je
sbb
mov
in
xlat
fucom
jl
jecxz
lock
mov
inc
mov
nop
push
in
jecxz
lock
mov
dec
push
in
jg
and
or
into
or
in
jl
dec
cmp
push
sbbb
and
cmp
xchg
clc
fldcw
jns
mov
cmp
and
xor
stc
lcall
push
or
int
xchg
adc
fstpt
fwait
ret
sub
mov
mov
push
push
xchg
mov
scas
and
inc
test
mov
testb
or
aad
loop
or
lock
outsl
mov
mov
jp
iret
mov
movsb
inc
fidivs
inc
cwtl
sbb
pusha
adc
lds
pop
insl
lcall
pop
and
add
sti
and
jno
push
adc
push
sub
pop
jg
ss
sub
push
cmp
aam
push
cmp
cmp
cmc
sti
mov
sbb
add
jmp
arpl
mov
mov
movsl
mov
jbe
dec
mov
stc
pop
mov
das
mov
cmpsl
in
pop
cmp
cmp
mov
scas
outsb
daa
pop
push
hlt
cmp
mov
pop
cwtl
je
into
test
je
mov
mov
cmp
imul
aam
lahf
sub
push
test
faddl
enter
fmuls
pop
jbe
cmpsl
xchg
mov
cmp
mov
in
ja,pn
sub
sbb
pop
sub
outsl
negl
repnz
pop
fwait
stc
add
or
addr16
js
adc
xor
aam
shr
bound
sarl
xor
pop
or
imul
ljmp
loop
add
add
pop
aam
je
push
dec
jmp
mov
sbb
jg
push
pop
inc
mov
xchg
sbb
cld
sbb
xchg
or
and
mov
pusha
test
lea
mov
clc
cwtl
sub
cld
xchg
and
mov
daa
into
idivl
adc
inc
dec
inc
inc
mov
jle
and
ss
cwtl
push
dec
and
fs
mov
leave
cld
ss
lret
test
movsb
jns
aam
stc
jb
jnp
jl
mov
test
ja
loopne
xor
test
imul
cmpsl
repnz
cmp
andb
cmp
dec
lods
push
scas
hlt
mov
cmp
push
addb
sti
bound
sub
mov
sbb
jg
jae
sbb
mov
sub
roll
adc
clc
xor
push
in
pusha
dec
lret
ljmp
stos
in
mov
dec
pop
cmp
imul
adc
xor
stc
push
aas
pop
and
sub
arpl
fidivrs
jno
shrl
neg
cld
fidivs
aaa
imul
mov
dec
xor
push
fstl
xchg
push
inc
ficoms
and
leave
dec
push
sarb
cmc
mov
jecxz
in
int3
clc
in
aaa
cmp
sbb
outsb
fcompl
cmp
imul
int3
in
or
dec
xchg
imul
testb
pop
roll
or
xlat
mov
cmp
push
rclb
fimull
pop
inc
add
xchg
dec
cmpsl
xlat
xchg
fcomps
xchg
iret
sbb
shrb
aaa
icebp
ljmp
jb
popf
lods
stos
pop
ds
jb
adc
jecxz
cli
inc
and
loope
dec
lret
pop
cltd
ret
ljmp
shll
test
or
lret
shll
cs
jne
dec
cmp
andl
icebp
mov
push
lahf
clc
lds
sub
jp
mov
sbb
push
inc
sub
push
jg
pop
or
inc
add
push
mov
enter
xchg
inc
sarl
or
dec
lock
jno
pop
in
mov
fwait
inc
xchg
es
scas
fdivl
cmp
fldl
xchg
outsb
jle
cli
cmp
sub
rorb
cs
loop
shl
sbb
cmp
sahf
mov
aas
xor
sub
shll
add
inc
out
cmp
aaa
jmp
stos
add
inc
fcmovu
shlb
jno
mov
mov
dec
andb
adc
mov
mov
inc
out
inc
jne
mov
xor
xor
push
out
xchg
inc
test
and
or
pushf
jmp
xchg
pop
cld
rcrl
fsubs
lret
imul
call
sub
fldenv
mov
cs
xchg
rorl
push
sbb
add
nop
out
mov
jg
mov
mov
outsb
jns
addb
jg
bound
out
fidivrs
adc
mov
iret
jae
lock
add
jge
xor
pushf
pop
mov
clc
loopne
cmpsb
outsb
fsubr
pop
and
or
and
mov
dec
and
xorb
hlt
sbb
cmpsl
jp
push
mov
mov
push
movsl
sub
sbb
add
pop
sub
cmp
arpl
ror
jb
pop
jmp
leave
int
lods
add
push
add
pusha
inc
and
push
xor
or
xchg
and
push
mov
push
or
mov
scas
inc
sub
mov
insb
rcrl
pop
orl
ja
testl
mov
js
mov
outsb
rclb
popa
push
jns
pusha
jp
dec
pop
out
call
inc
add
xor
ret
inc
bound
push
dec
jb
pop
into
outsl
push
scas
push
or
add
subb
push
fdivrl
roll
lcall
arpl
shrl
push
mov
loope
cld
ja
mov
ficompl
push
sub
imul
fidivs
testl
sub
or
sub
stos
dec
xchg
cltd
in
movsb
jb
mov
inc
insl
mov
push
mov
mov
inc
scas
movsl
cmp
adc
cld
loopne
enter
add
push
dec
inc
insl
popf
inc
cmp
fcoml
mov
std
or
jne
xor
idivl
inc
push
lods
cmp
lret
cmp
jae
fs
call
repz
push
mov
xchg
daa
test
cmp
push
adc
mov
or
inc
rorb
pop
test
dec
jne
push
push
sub
xchg
dec
mov
das
sub
and
icebp
inc
test
dec
popa
xchg
and
cld
in
push
scas
push
emms
pusha
cmp
ret
fwait
jp
cmp
dec
mov
shll
movsb
inc
daa
test
imul
push
sti
loop
icebp
lret
adc
cmp
pop
push
cmp
out
jb
sarb
out
inc
lret
xchg
dec
loope
aaa
icebp
sbb
mov
loopne
mov
shrl
and
in
jmp
mov
mov
mov
add
pop
imul
jmp
cmc
mov
xchg
xchg
inc
test
loop
iret
pop
jo
pop
sub
mov
dec
fs
pop
and
xchg
push
pop
xchg
adc
xchg
pop
push
mov
arpl
sbb
sti
dec
insl
adc
sar
bswap
jmp
test
pop
add
negb
xchg
add
mov
push
mov
fidivs
aaa
out
inc
sbb
mov
ds
aas
mov
add
inc
pop
mov
aaa
lcall
inc
mov
dec
push
in
mov
and
mov
jg
call
inc
adc
xor
mov
jge
xchg
loope
stos
adc
and
outsl
bound
or
push
sahf
cs
imul
pop
stos
lock
cmc
push
cmc
mov
dec
aas
js
sub
cmovge
pushf
cmp
outsl
push
or
mov
jae
xor
push
cmc
lds
fs
cmp
mov
push
mov
notb
sbb
lds
jl
shll
dec
pop
dec
dec
lahf
idivl
mov
push
push
test
ja
rol
lret
test
xchg
fwait
or
dec
fisubrs
add
cmpsb
div
out
push
dec
inc
aam
push
cs
inc
ret
test
mov
lods
push
pop
ret
sbb
add
pop
push
out
mov
lods
xor
ljmp
out
out
ds
iret
xor
ja
rcr
bnd
mov
fisttps
push
add
adc
pop
cmpsb
jge
jnp
stos
push
out
mov
popa
outsb
jo
jge
jge
or
sahf
cmpsb
jge
push
inc
out
insl
pop
xchg
sbb
ficoms
sbb
mov
and
lcall
xor
pop
adc
lea
pop
jne
jne
je
sub
mov
mov
xor
int
imul
nop
sbb
xchg
call
cmpsl
jmp
push
test
scas
adc
push
xchg
cmpsb
mov
fs
stos
daa
test
inc
push
push
pop
xchg
or
ficoms
mov
ret
cmc
fs
inc
adc
xor
mov
cwtl
das
cmp
mov
mov
xlat
jns
sbb
mov
fsubl
or
int3
ss
cmp
sub
fisttpll
sub
adc
dec
call
cmc
mov
sbb
or
leave
inc
pushf
dec
mov
test
pop
dec
sahf
enter
xor
or
fisubs
ss
js
dec
xor
sbb
ljmp
inc
rcl
and
adc
and
xchg
out
xorb
cltd
movsl
loope
xchg
cmp
stc
fsubrs
dec
adc
fstpt
movsb
mov
lahf
cmpsb
and
imul
bound
repz
or
inc
imul
imul
push
xchg
jmp
insl
hlt
lret
inc
repnz
jg
ljmp
repz
pop
icebp
ret
add
mov
js
xlat
sbb
pop
lret
fisubl
push
outsb
mov
jns
lods
jne
call
mov
jmp
dec
pop
push
mov
dec
sbb
ss
mov
cmp
adc
inc
pop
inc
pop
popf
sub
push
xchg
aam
sbb
xor
stc
sbb
or
test
push
jmp
adc
ja
sub
push
adc
push
mov
pop
mov
xchg
sbb
nop
dec
movsb
int3
leave
xlat
iret
and
mov
outsl
je
xchg
icebp
pop
add
pop
push
xchg
mov
dec
sahf
xchg
stc
push
out
and
sub
outsl
adc
popf
fidivrl
inc
fs
mov
popa
lea
mov
fbstp
push
out
push
adc
pop
fsts
jle
sbb
repz
push
jno
and
mov
xor
inc
xor
mov
cwtl
mov
cmp
sub
add
jle
mov
ja
ja
enter
xchg
into
insl
inc
adcl
xorb
lods
mov
icebp
mov
push
fstpt
xchg
sarb
lret
push
outsb
int
popa
ldmxcsr
stos
xor
stos
dec
adc
pop
dec
scas
and
jb
pop
jo
ret
add
stos
jne
pushf
cmp
fiaddl
dec
mov
pop
in
fucomp
scas
inc
sbb
stos
push
mov
xchg
fldl2e
xchg
nop
lcall
xchg
scas
lods
testl
mov
mov
xor
cmp
xchg
in
fisubs
imul
test
sbb
mov
inc
jp
mov
xchg
in
mov
js
subl
sarb
mov
ljmp
out
enter
test
jge
arpl
int
mov
pop
dec
jp,pt
movb
arpl
outsb
es
pushf
fwait
adc
mov
mov
lret
dec
popa
cmpsb
shll
shrb
sub
inc
pop
push
push
es
pop
mov
mov
mov
inc
insl
cwtl
xchg
mov
dec
mov
mov
mov
jmp
cmpsb
insb
or
push
fs
or
cs
xchg
cltd
jge
inc
int
shlb
loop
pop
add
xlat
jbe
xor
aas
fcmovnb
hlt
movsb
push
inc
popa
pop
xchg
stc
cmpb
mov
or
sbb
push
js
dec
fimuls
repnz
outsl
push
sub
inc
scas
pop
and
mov
js
and
int
jecxz
mov
jl
lods
ffreep
rep
lret
mov
es
rcrl
pop
xchg
cli
xor
adc
xchg
imul
and
sub
icebp
mov
stos
or
sub
mov
loope
repnz
js
sbb
pop
xor
push
push
pop
pusha
nop
push
into
jge
mov
outsl
sbb
imul
push
mov
test
fsubrl
loopne
insb
in
out
int
push
xor
pop
aaa
mov
in
ret
mov
sub
in
hlt
ljmp
jmp
jno
jnp
dec
xchg
xorl
sub
repnz
insb
jno
mov
out
cwtl
cmpb
je
mov
ret
xor
lock
sahf
pop
sti
lcall
fbld
cltd
stc
pop
mov
add
xchg
aas
xorb
lcall
add
mov
rolb
leave
or
pop
mov
jle
jns
xchg
loopne
xor
xchg
adc
hlt
lea
push
out
xchg
fcoml
pop
and
inc
adcb
fisubl
stc
bound
ja
mov
push
out
cmp
xor
es
mov
enter
inc
jle
inc
je
cld
shlb
adc
cli
outsl
ljmp
iret
push
ret
push
popf
es
push
jb
cmp
bound
outsb
test
push
insl
imul
mov
cmp
and
std
push
push
mov
jl
imul
sbb
xchg
mov
ljmp
mov
xor
les
aas
lods
add
scas
clc
cli
mov
fcoml
shll
negb
fwait
mov
stos
or
push
push
test
cmpl
pop
add
add
sub
mov
inc
aad
stc
mov
xchg
enter
pop
adc
and
xchg
pop
mov
aas
and
mov
cmp
or
hlt
push
pop
lds
es
lods
pushf
filds
adc
mov
jno
cmpsl
xchg
out
push
push
pop
pop
push
mov
push
ljmp
fs
fwait
fwait
movl
fstpl
test
insl
jnp
ret
cwtl
xchg
bound
fstps
aaa
xor
pop
xchg
inc
clc
jle
xchg
xchg
ss
jnp
pop
sbbl
pop
mov
adc
jbe
jb
cmp
fdivs
sbb
stos
sub
xor
jae
fcoml
call
xor
cld
mov
into
add
ljmp
stc
sbb
enter
inc
rorl
pusha
hlt
outsl
and
push
fistl
mov
insb
mov
inc
imul
jno
insl
testl
mov
imul
xor
sbb
mov
add
fs
mov
jg
sbb
repz
hlt
out
jns
pop
psubsb
es
mov
cmp
lods
sbb
lods
xor
inc
adc
dec
cmpsb
adc
lcall
jecxz
jge
pop
icebp
shlb
lea
sahf
adc
aaa
jne
cmc
jge
les
or
inc
inc
jbe
rclb
pop
mov
push
cmpl
imulb
adc
in
out
testl
cmp
cwtl
mov
cmp
mov
in
mov
inc
int3
aas
add
adc
mov
jns
jbe
adc
ret
aad
pop
icebp
mov
aas
jo
pop
jb
lcall
push
and
ror
jne
cmpsl
adc
pop
cmp
mov
push
insb
adc
into
xor
cmp
add
mov
dec
push
add
ret
rcll
nop
iret
or
fwait
xor
jno
or
add
pop
frstor
xchg
fdivl
jmp
clc
mov
out
dec
adc
out
jle
sbb
sub
testb
add
lahf
mov
addr16
xchg
cmp
push
jl
xor
jns
jl
aaa
push
int3
or
sbb
sub
subl
mov
mov
mov
dec
push
inc
mov
insl
in
les
inc
cmp
pop
clc
repnz
adc
mov
add
mov
xchg
imul
test
cmp
add
adc
fucomip
outsl
mov
test
cli
and
fistpl
jae
cmp
js
pop
jns
fisubrs
inc
pop
std
push
push
decb
aaa
push
cmc
dec
pop
icebp
jp
mov
sub
and
xchg
xchg
shll
das
sub
push
call
mov
add
pop
jns
pop
push
add
icebp
ret
jge
call
outsl
sbb
repz
dec
aas
in
cmpsb
inc
leave
inc
in
cmp
addr16
dec
xchg
mov
and
jo
cmp
or
movhps
je
repz
cwtl
or
rcll
sub
xor
sti
inc
jne
xchg
outsl
push
inc
sbb
sub
mov
ret
adc
hlt
push
sub
cld
hlt
popf
rcrl
pop
and
jp
in
inc
sub
ret
xchg
pushf
push
pop
xorl
ljmp
icebp
jnp
jmp
push
filds
and
xchg
fldenv
mov
in
jg
cmp
add
lea
frstor
mov
pop
and
xchg
inc
jmp
sub
pop
pop
push
leave
mov
dec
cmpsb
push
adc
inc
push
mov
xor
pop
push
jno
into
mov
or
inc
daa
jle
loop
ja
scas
add
xor
xchg
xchg
mov
cli
ficompl
jae
das
divb
in
jns
pop
xchg
cmp
mov
fldl
scas
mov
scas
adc
pop
inc
mov
inc
pop
imulb
push
call
aas
mov
push
mov
test
sub
popf
xor
dec
mov
movsl
lods
cld
in
pop
add
ret
or
fcmovbe
and
mov
jno
icebp
push
stos
adc
lds
xor
movsl
inc
pop
jnp
xor
enter
inc
mov
out
push
xor
xchg
imul
or
push
push
mov
cmovbe
cs
xchg
and
push
mov
bound
add
orb
xchg
movsb
negb
ss
jne
xchg
inc
decb
nop
or
mov
lea
daa
aas
in
mov
mov
int
sub
test
mov
jns
jbe
ss
xchg
dec
inc
ljmp
movsb
test
sarl
sub
sarb
add
push
js
add
mov
aas
pop
xchg
lret
mov
xchg
push
push
pop
stos
ljmp
lock
mov
lcall
pop
lock
xchg
lret
rclb
xor
jns
fucomi
aad
add
test
sub
sahf
out
aad
std
mov
push
out
add
jbe
xor
sub
fsubrl
add
hlt
xchg
not
addr16
mov
and
mov
jmp
sub
js
sbbb
test
inc
cmp
dec
xor
cltd
jge
test
mov
movsl
out
adc
add
mov
ror
and
xchg
add
lds
xchg
push
xchg
or
fistps
sub
aad
sub
je
mov
jne
inc
cmp
push
push
jb
ss
hlt
repnz
cmpsl
je
daa
es
mov
lret
call
adc
pop
subb
popa
sub
fcmovnu
dec
sti
xchg
fcoml
popa
movsl
in
jne
adc
mov
scas
cmp
dec
cmpsb
ljmp
dec
in
cmp
mov
arpl
and
ds
ss
jmp
adc
xor
adc
faddl
ds
pusha
and
mov
pusha
mov
xor
or
cli
adc
cmp
adcl
sub
jbe
xchg
sub
or
iret
shl
mov
ret
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
lea
or
mov
xor
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
addl
mov
sbbl
xor
subl
add
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
sbb
push
adcl
mov
adc
mov
mov
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
pushl
call
cmpl
jb
xor
mov
andl
add
cmp
movl
je
mov
jmp
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
subl
xor
push
sbb
add
add
xor
mov
add
push
mov
adc
mov
xor
movl
xor
movl
cmp
jne
movl
cmp
jne
movl
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
xor
mov
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
addl
push
push
xor
movl
push
call
mov
notl
push
mov
addl
lea
andl
push
push
subl
push
push
sbbl
call
movl
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
push
xorl
call
test
movl
jne
orl
push
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
push
call
test
movl
jne
movl
mov
mov
xor
addl
lea
orl
push
mov
sbbl
xor
lea
push
and
mov
sbbl
pushl
addl
call
adcl
mov
andl
mov
movzbl
sub
xor
lea
sub
mov
mov
incl
xor
addl
xor
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
call
cmpl
jb
mov
subl
xor
lea
movl
mov
push
cmp
movl
jbe
sub
mov
xor
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
movl
sub
orl
xor
andl
mov
adcl
lea
sbbl
mov
xorl
lea
orl
mov
subl
lea
andl
push
push
push
push
xorl
call
movl
shl
cmp
jne
notl
push
call
adcl
test
movl
jne
addl
push
call
test
jne
push
lea
xorl
push
push
adcl
push
push
call
shl
cmp
jne
push
call
test
movl
jne
sbbl
push
xorl
call
test
movl
jne
sbbl
push
lea
push
push
push
adcl
push
call
movl
shl
movl
cmp
movl
jne
push
subl
call
adcl
test
movl
jne
orl
push
call
adcl
test
jne
orl
push
lea
subl
push
notl
push
subl
push
xorl
push
call
shl
movl
cmp
movl
jne
push
call
subl
test
movl
jne
subl
push
call
test
jne
negl
push
lea
push
push
addl
push
notl
push
movl
call
shl
cmp
jne
push
addl
call
orl
test
jne
andl
push
xorl
call
orl
test
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
shl
cmp
movl
jne
xorl
push
call
orl
test
jne
push
subl
call
test
jne
orl
push
orl
lea
andl
push
addl
push
push
adcl
push
call
shl
movl
cmp
movl
jne
push
call
test
movl
jne
incl
push
sbbl
call
test
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
push
call
test
jne
xorl
push
lea
push
xorl
push
andl
push
push
decl
call
movl
shl
movl
cmp
movl
jne
sbbl
push
orl
call
test
jne
andl
push
call
xorl
test
movl
jne
push
incl
lea
push
xorl
push
xorl
push
adcl
push
call
movl
shl
movl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
je
xor
jmp
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
or
mov
sub
mov
mov
adc
movl
sub
mov
and
jmp
and
push
sti
shlb
jg
push
xchg
dec
scas
sarl
sbb
jp
pop
fildll
mov
out
out
xchg
inc
cwtl
sub
mov
rcrb
insl
loopne
insb
and
jb
in
cmp
lds
mov
movsb
lock
push
dec
mov
xor
and
bound
mov
lods
ss
jmp
sbbl
aaa
into
jge
stc
mov
push
push
test
ds
cmp
cld
les
adc
shlb
cmc
sbb
ds
mov
js
xor
loopne
sub
pushf
aad
fwait
movsb
dec
and
pusha
mov
adcb
xchg
jo
sub
ja
mov
sub
sub
pop
xlat
enter
bound
test
ljmp
mov
push
cmpsl
push
xchg
xor
loopne
shlb
mov
inc
lds
mov
leave
mov
pop
enter
adc
mov
cmp
sarl
xor
in
loopne
pop
mov
stos
pop
or
shll
dec
mov
jg
rcrl
push
pop
daa
data16
push
add
sbb
fucompp
mov
iret
fdivr
or
lret
adc
sbb
insl
bound
mov
imul
daa
das
jno,pn
cmp
push
mov
or
xor
cmpsb
shr
repz
push
and
orl
aas
js
mov
xchg
mov
push
pop
mov
xor
jl
out
push
stos
fdivs
cmp
add
xlat
sbb
fwait
mov
push
lret
aas
sub
mov
xor
jno
push
mov
pop
loopne
jnp
dec
push
lods
sub
cmp
int3
fists
cmc
dec
xor
stos
rep
cwtl
cmpsb
dec
sub
lock
inc
ficompl
mov
push
inc
insl
mov
sti
scas
cmpsb
and
add
insl
mov
mov
adc
cs
sbb
mov
je
mov
js
mov
dec
sbb
mov
push
xor
or
rcrl
test
bound
lods
inc
jge
test
mov
lahf
fs
mov
cli
ljmp
ljmp
mov
and
jne
sbb
xor
xor
inc
repnz
leave
push
cwtl
lret
dec
cltd
sbb
nop
out
ds
jbe
add
xchg
dec
mov
daa
les
sbbl
mov
das
push
sub
stc
jl
dec
pop
jmp
lods
add
cmc
jo
les
xchg
pop
xor
aam
aam
add
push
aas
pop
mov
xor
stos
into
sbb
dec
iret
jns
jnp
rclb
aas
xor
cmp
stc
rcl
rorl
add
cltd
jecxz,pt
jns
mov
inc
sahf
mov
sub
xor
movsb
in
jbe
add
lret
daa
push
push
adcb
mov
push
sbb
dec
and
or
push
inc
xor
xor
mov
outsl
dec
repnz
std
js
mov
add
adc
adc
adc
inc
xor
sub
pop
xchg
movsl
pop
lods
add
shrb
sbb
adc
test
adc
stc
test
xor
enter
jne
mov
pop
mov
mov
mov
nop
xchg
inc
pop
push
inc
das
dec
icebp
pop
mov
dec
nop
cmp
push
pusha
fisubrs
scas
imul
test
pop
clc
jno
sbb
outsb
ss
mov
arpl
popa
lahf
fsubs
ja
aaa
xor
lret
pop
mov
mov
scas
dec
imul
adc
mov
rol
mov
cltd
or
sub
notb
jns
or
mov
pop
jno
pop
mov
clc
push
fbstp
rcl
xor
ret
out
and
add
adc
push
ret
iret
jl
test
adc
ret
nop
or
xchg
addl
inc
pop
cmp
push
pop
loope
imul
es
dec
dec
jno
fadds
push
insb
xor
push
ja
inc
add
add
pop
rclb
mov
aam
or
into
ss
dec
pop
cmpsb
mov
iret
mov
jecxz
insl
mov
lcall
enter
jp
xlat
xchg
mov
add
fs
cmp
adc
or
and
cmp
es
jb
jb
add
mov
popa
or
add
dec
clc
and
push
push
je
decl
cmpsl
mov
insb
daa
and
mov
rcrl
mov
insl
dec
mov
imul
cmp
rcrl
out
adcl
out
ret
jb
and
les
mov
rcrb
out
cmp
or
hlt
sbb
mov
jnp
add
mov
xchg
sbb
out
xchg
pop
insl
nop
dec
pusha
loop
adc
mov
push
negb
dec
enter
imul
dec
xlat
push
rcr
inc
add
test
addr16
shr
test
popa
outsb
adc
in
add
stos
loope
fwait
push
mov
dec
mov
xchg
in
or
inc
dec
xor
jns
nop
sub
pop
sbb
out
push
xorl
xor
and
cmpsb
mov
iret
mov
insl
pop
jb
jnp
cmpl
push
cwtl
test
leave
out
push
out
jp
pop
imul
ds
jmp
add
dec
cwtl
xchg
sub
je
arpl
xor
scas
or
or
push
mov
cwtl
das
sub
add
stos
rcr
add
sub
push
add
adcl
xchg
jns
daa
mulb
ret
bnd
pushf
push
xor
loop
adc
lea
xlat
aad
movsb
or
cmp
fisubrs
iret
icebp
lds
or
cli
sub
sbb
bnd
test
fmulp
add
pop
decb
push
cmp
sarb
inc
and
add
mov
iret
inc
mov
sbb
push
fmul
call
jmp
shlb
pop
cmp
out
or
out
notl
and
fdivl
jae
inc
xor
add
inc
fnstcw
push
add
enter
imul
pusha
ret
add
out
fwait
jne
rorl
xchg
xchg
loope
xchg
jp
pop
mov
cmc
outsb
sbbl
das
jmp
or
push
iret
pop
lahf
jne
cmp
std
mov
and
rcr
fcoml
mov
mov
clc
rcrb
add
cmp
inc
pushf
adc
in
roll
push
outsb
lea
leave
or
cmc
testb
fwait
dec
sbb
cmc
imul
inc
sub
mov
push
push
ffreep
insl
sbb
sbb
fldcw
or
push
pop
sti
stos
call
cmpsl
rclb
lret
mov
loopne
cmp
outsb
fadd
sub
push
pop
sub
mulb
popf
xchg
or
fdivrp
inc
mov
or
and
mov
fwait
and
out
pop
mov
addr16
aaa
data16
divl
xor
ss
pop
and
dec
arpl
jno
jp
sub
les
nop
popa
ds
mov
jle
fidivs
int
insl
mov
push
lea
push
adc
out
inc
xchg
xchg
icebp
mov
fwait
and
pop
lock
inc
popa
adc
loopne
push
fisubs
dec
xor
inc
fwait
loope
xchg
dec
sub
push
icebp
or
loopne
loopne
addr16
pop
sub
sub
shr
mov
adc
rcr
and
movsb
cwtl
insb
shrb
js
xlat
pop
inc
sbbb
push
outsb
push
inc
mov
mov
add
cmovne
xor
pop
jmp
mov
outsb
imul
sbb
lahf
adc
mov
mov
js
and
dec
add
mov
in
adcl
sbb
dec
daa
cmp
push
push
mov
mov
cmc
in
test
insl
pop
mov
adc
adc
and
pop
shll
test
lret
cmp
je
push
test
xchg
rcr
fwait
sub
lods
xor
inc
inc
push
repz
je
loop
incb
push
call
insb
mov
mov
sti
jmp
movsb
add
aam
pop
xor
jl
cmp
sarl
cli
xlat
push
lcall
pusha
cmp
cmp
inc
loop
out
pop
mov
mov
cmp
sub
xchg
stos
jl
xchg
pop
mov
xchg
sarl
sbb
gs
movsl
frstor
push
xchg
in
into
test
jb
sub
dec
mov
pop
into
enter
popa
fildll
cmpsl
add
mov
or
jp
jle
rorb
inc
cli
mov
sub
outsl
stos
add
cs
xchg
divl
jmp
shrb
inc
fwait
and
jns
gs
add
mov
shll
arpl
loope
pushf
sbb
shrb
xchg
xchg
add
mov
mov
outsl
fcmovnu
std
inc
xlat
mov
fsin
or
pop
movsl
fisubl
pop
inc
insl
pushf
or
loopne
mov
ret
and
pushf
sub
int3
adc
jle
lcall
aas
mov
es
sub
fdivrl
leave
lahf
inc
outsl
and
sub
mov
jp
in
fsub
mov
ja
test
push
xor
mov
inc
movsl
inc
sub
daa
pop
inc
mov
adc
imul
fadd
push
mov
mov
pop
mov
stc
pop
mov
mov
and
mov
in
sti
ljmp
lcall
pushf
jo
xchg
xor
push
lods
fs
or
stos
push
jecxz
add
xchg
or
psubq
xor
pop
xchg
add
inc
sub
jbe
cmp
jle
mov
cwtl
ret
sbbb
inc
scas
jno
cmp
fwait
ljmp
xchg
aam
adc
inc
and
ja
outsb
and
mov
ss
adc
jmp
jle,pt
mov
mov
and
int3
dec
mov
xchg
dec
je
popa
pop
addr16
pushf
ret
and
pop
cld
mov
jnp
fisttpl
addr16
fbld
imul
je,pn
and
nop
adc
mov
aas
repnz
insb
push
lret
test
jmp
or
insb
mov
xor
sub
cld
push
lea
xchg
lcall
test
jge
adc
ret
sub
and
insb
add
dec
aad
in
mov
fldt
repnz
cmp
rorl
adc
cmc
mov
mov
call
dec
inc
mov
adc
xchg
mov
ret
int3
xor
call
dec
push
test
cmp
out
inc
pushf
notb
sbb
mov
push
repnz
dec
adc
adc
popl
xlat
fnstcw
or
lds
pop
in
loope
pop
push
mov
sub
dec
dec
inc
and
sbb
pop
test
adc
inc
das
and
mov
gs
int
dec
cmp
ret
mov
xlat
adc
cmp
dec
insl
cmc
xchg
sbb
inc
rolb
add
mov
js
add
add
cltd
pop
cmp
cmc
sub
jns
cli
or
rolb
fwait
inc
lock
mov
mov
mov
popa
or
aam
andb
cltd
std
mov
push
xchg
adc
imul
ret
scas
leave
daa
rcl
adc
lods
arpl
xchg
clc
xchg
mov
inc
daa
fdivl
sbb
or
das
pop
pop
pop
imul
mov
cs
lcall
xor
push
pop
sub
jp
add
jge
mov
lock
or
sbb
data16
out
jo
and
sbb
fwait
pop
mov
and
icebp
popf
pop
dec
call
sub
mov
jnp
push
movsb
mov
mov
es
pop
sbb
inc
ret
stos
fisttpll
aas
xlat
xchg
fucomp
pop
lahf
pusha
sub
popa
lods
mov
jo
cld
int3
repnz
mov
inc
sbb
push
adc
sahf
jmp
add
cmpsl
adc
std
dec
test
mov
sbb
inc
push
lods
pop
fwait
pushf
inc
jo
pop
inc
jp
pop
in
aaa
adc
pop
xor
cli
mov
fsts
sbb
les
lret
lret
cmc
dec
and
add
jge
add
incb
mov
dec
adc
jb
push
push
dec
stos
mov
aas
faddp
add
mov
fistpll
xor
sub
pop
outsl
ret
dec
notb
lcall
xlat
call
sbb
add
lods
dec
push
inc
pop
insl
or
clc
int
mov
cmc
shll
push
mov
push
js
imul
out
cmp
scas
test
push
adc
and
and
mov
insb
out
imul
hlt
je
out
in
ret
jno
popf
push
data16
lcall
ja
repnz
std
cmp
mov
inc
fisubrs
mov
popf
inc
int3
lcall
add
pushf
outsl
and
push
dec
popa
popf
sahf
or
mov
add
outsl
les
adc
ret
add
xor
cmc
mov
xor
pop
or
nop
push
gs
je
andb
inc
rolb
out
inc
sbb
les
idivb
adc
push
lock
add
popf
insl
sbb
jae
mov
sti
je
inc
mov
test
sub
or
mull
mov
mov
fimull
sub
aaa
and
push
loopne
movsb
push
adc
sbb
in
pop
cmp
loop
pop
and
mov
add
scas
call
pop
ss
adc
test
dec
pop
dec
das
js
data16
adc
mov
xor
xchg
std
cmp
aas
cmp
fildl
negb
lods
adc
jb
shlb
ret
lret
rcll
je
jno
sub
les
in
pushf
int
cmp
add
jmp
mov
sbb
loop
cmp
sbb
mov
pop
imul
mov
push
loopne
sub
dec
sub
stos
jge
xor
xchg
inc
cwtl
pop
jae
icebp
push
cmpsb
jbe
xor
sbb
popa
ret
jnp
repz
sub
pop
fxam
test
xchg
pop
mul
aam
mov
inc
sbb
rcrb
cmpsl
popf
fcompl
outsb
and
iret
push
fstpt
pop
xchg
out
insl
push
fcoml
jno
sbb
outsl
ret
xsaves
inc
add
sbb
shll
fmul
pop
mov
fnstsw
ficomps
sub
push
sbb
adc
inc
cli
pop
or
sub
imul
std
int
jecxz
mov
mov
es
jg
jne
sub
xchg
lock
int
inc
pusha
enter
pop
shrb
or
hlt
mov
xchg
push
xor
push
sub
adc
imul
fs
aam
mov
insl
call
jge
dec
push
data16
mov
ffree
ja
fdivrp
mov
hlt
dec
sbb
or
imul
cmpsl
jb
in
adc
inc
dec
jno
jge
int
nop
loopne
ret
les
jne
mov
test
cld
push
dec
scas
test
mov
outsb
lds
arpl
mov
out
sub
fwait
pop
mov
jb
cltd
fisttpl
lock
fistl
pop
sub
mov
inc
mov
push
lret
shl
in
dec
or
nop
dec
jmp
imul
lret
ficoms
mov
or
int
aaa
xor
cld
sbb
xor
out
pushf
or
mov
dec
sar
loop
dec
int
xor
iret
adc
ljmp
or
sbb
sub
pop
pusha
out
mov
xchg
fsubrs
arpl
dec
pop
xchg
xor
jle
add
push
adc
push
sahf
mov
adc
stc
cmp
movsb
int3
xor
movsl
lret
jge
sbb
shrb
es
mov
dec
and
movsb
lahf
cmp
lods
int3
add
movl
mov
add
sbb
out
lea
inc
test
cs
mov
pop
xchg
fisttpll
cli
movsl
call
mov
unpcklps
and
jmp
clc
sbb
pop
mov
movsl
out
lahf
xor
aad
bound
icebp
jo
xchg
and
mov
or
pop
insl
dec
jl
insl
xor
mov
pmuludq
xchg
test
mov
dec
jle,pt
popf
sub
mov
lcall
jmp
xchg
mov
mov
popf
test
mov
add
or
popf
push
xchg
sbb
xchg
mov
push
mov
stc
movsb
mov
push
or
jle
gs
rclb
add
fsubrs
add
mov
mov
xor
xor
xchg
js
mov
mov
shrb
rorl
frstor
cmpsb
mov
hlt
stc
dec
aad
inc
loop
sbb
repnz
sbb
sub
push
adc
add
inc
cs
scas
dec
push
add
shr
imul
enter
add
test
jle
xorb
sahf
call
mov
aam
jbe
rclb
xchg
sbb
and
and
stos
pop
adc
aas
jnp
cltd
fstpl
insl
aad
jl
shlb
pop
sub
mov
sti
into
ret
ljmp
out
jmp
mov
lods
cmp
jecxz
int3
jbe
inc
add
jmp
test
push
jne
xor
add
cmp
add
std
icebp
push
fcmovnb
shrl
push
mov
cmp
xacquire
arpl
pshufw
xor
outsl
in
inc
or
sub
sub
dec
mov
js
or
call
ret
pop
lods
mov
sbb
fdiv
outsb
std
mov
adc
cmp
hlt
and
frstor
sub
dec
hlt
cmp
pop
hlt
rorl
push
frstor
fs
fs
mov
fs
xor
hlt
mov
adc
adc
jge
jbe
pop
sub
stos
jne
jge
gs
mov
idiv
fs
je
test
pop
lcall
pop
pop
xchg
imul
dec
popf
mov
mov
add
jg
jnp
ljmp
push
push
std
adc
adc
int
imul
sub
cmp
xchg
and
or
aaa
push
cmp
ficompl
aam
pop
mov
sbbb
adc
sub
repnz
jne
stos
std
fsubl
and
cmpsl
and
inc
dec
and
adc
or
xor
sahf
xchg
mov
out
aas
mov
push
and
inc
push
js
mov
pop
into
dec
fistpl
jno
addr16
in
js
aad
and
popf
pushf
shll
jmp
xor
adc
jne
scas
lods
pop
jbe
adc
mov
pop
or
gs
insb
sub
pop
push
rorb
sbb
push
and
mov
testb
xorb
sti
addl
icebp
jnp
bswap
rcl
les
test
lods
dec
adc
iret
lsl
xchg
std
cli
fs
add
aad
mov
fs
test
dec
jne
mov
js
sti
cmp
cld
inc
mov
mov
outsl
jbe
fstps
sahf
xor
sub
fsub
mov
push
push
gs
sbb
repnz
sahf
sbbb
stos
shrb
int3
loop
out
rolb
xchg
mov
jp
js
adc
les
xchg
add
push
in
cli
or
rcl
sub
dec
shrl
fisubs
sbb
nop
lock
rcrl
mov
rclb
add
daa
mov
mov
xor
push
les
std
nop
stos
mov
lods
mov
mov
rep
push
std
cmp
pop
sbb
int3
add
sti
out
pop
push
or
inc
jmp
js
arpl
push
cmp
xchg
es
test
test
pop
pusha
and
inc
scas
pop
gs
mov
push
sbb
xchg
or
stos
xchg
push
cld
dec
mov
imul
sub
add
test
push
aad
fisttpll
lods
push
iret
nop
adc
lods
scas
xor
mov
loopne
push
out
xorl
into
mov
out
std
xchg
enter
fwait
js
fs
jne
jno
int
pop
mov
inc
call
mov
mov
and
fisttpll
iret
outsl
data16
mov
js
or
nop
leave
or
sahf
iret
outsb
hlt
popa
test
xor
jp
dec
ud0
mov
add
test
or
movsl
xchg
jne
dec
cltd
and
mov
movsl
pop
stc
push
push
xor
add
fidivrs
and
dec
cltd
adcb
push
int
push
inc
movsb
lods
push
in
mov
push
mov
or
stc
jecxz
mov
add
test
adc
mov
dec
fwait
int3
aam
push
enter
mov
or
pop
lret
test
fsubp
ljmp
push
mov
push
jo
add
and
push
and
dec
call
sbb
jge
aaa
dec
jnp
and
call
icebp
pusha
popf
data16
arpl
gs
jecxz
out
dec
or
sbbb
stc
out
sbb
jae
and
jl
mov
add
cmp
lods
push
repz
fcoms
xchg
mov
enter
in
loopne
dec
push
mov
push
jge
jl
push
or
and
adc
subl
rolb
pop
push
inc
cmpsl
adc
in
and
and
ds
lds
mov
pop
lds
add
mov
xorb
dec
stos
das
mov
adc
jge
xchg
pop
aas
jns
push
lods
js
sbb
and
or
imul
sbb
fdivrs
jb
jno
or
sbb
jge
cmp
cmp
fistpl
aam
inc
adc
jae
lds
mov
imul
sti
int3
lret
push
mov
xchg
push
mov
mov
jp
or
sub
and
adc
data16
cmp
sarb
push
hlt
insb
sbb
mov
es
fsubs
mov
xor
mov
mov
mov
jae
jns
outsb
mov
xchg
xlat
mov
jmp
push
shll
adc
andb
jae
mov
adc
sub
lods
pop
lret
or
nop
in
push
adc
dec
push
xorl
aad
mov
stos
lods
shlb
sahf
add
mov
enter
std
scas
movsl
push
loopne
cmp
subl
imul
test
xor
aam
push
push
cmp
push
scas
rorl
je
mov
fdivl
lds
mov
xlat
int3
mov
push
inc
js
sti
pop
pop
xchg
adc
sub
icebp
xor
aas
test
fwait
xchg
push
shl
jne
je
xor
push
cmpl
push
mov
sub
dec
mov
mov
mov
cmp
jg
jecxz
push
dec
repnz
dec
add
jmp
int3
arpl
jb
mov
push
outsl
mov
es
dec
ljmp
cmpb
loope
fwait
stos
int
mov
insl
lock
cmp
cmp
ljmp
dec
fldl
hlt
cmp
or
pop
ret
sbb
inc
lcallw
out
or
jno
xor
ja
aas
dec
cmp
push
outsb
and
les
frstor
mov
adc
jb
add
pop
pop
jb
es
xor
daa
in
jo
dec
sbb
imull
je
jg
adc
xchg
loopne
bound
stos
fimull
scas
sbb
ss
sub
cs
pop
mov
shl
jb
into
pop
adc
mov
lock
arpl
sub
lods
mov
push
lds
adcb
cmpsl
or
add
popf
repnz
out
add
cltd
sahf
andl
scas
std
dec
leave
imul
and
jl
or
out
xor
outsb
push
inc
sub
mov
xchg
push
mov
dec
push
and
xor
inc
loope
je
andl
push
and
lret
inc
sbb
adc
mull
daa
adc
cwtl
out
call
mov
xchg
mov
xchg
pusha
jl
push
xor
cmp
call
leave
cmp
xchg
dec
ljmp
inc
hlt
fnsave
movsb
stos
lods
mov
aam
mov
cmp
fcoml
cmp
xor
mov
or
sub
and
jg
movsb
mov
cs
in
sahf
shlb
add
pop
lea
cmp
inc
out
jne
sub
les
in
test
outsl
sub
push
jmp
xchg
push
js
aas
stos
mov
dec
dec
movsl
push
mov
sbb
js
ds
xor
jns
cmp
scas
xchg
je
or
psubq
xchg
imul
repnz
int3
mov
cmpsb
sbb
pop
xor
mov
xchg
out
fwait
mov
or
out
movb
loope
jl
mov
mov
add
xor
test
pop
gs
push
out
or
and
jge
aad
repz
dec
or
ja
xchg
mov
add
xor
or
loop
mov
mov
jmp
orb
dec
add
repnz
inc
icebp
outsl
ss
lds
push
mov
lret
add
and
push
test
push
out
adc
and
popa
push
add
mov
mov
inc
mov
sbb
out
pop
test
insl
fdivrl
lahf
xchg
nop
ja
shrl
decb
inc
test
or
mov
pop
fnsave
addr16
test
cmp
sub
jnp
or
cmp
ror
in
push
cmpsl
lock
iret
lret
xor
jno
adc
fistps
icebp
scas
mov
fnstenv
data16
mov
lret
jecxz
mov
adc
inc
cmp
icebp
bound
adc
imul
jae
cld
out
jns
scas
jno
cmpsl
hlt
imul
in
sbb
rol
cwtl
popf
fnsave
scas
scas
or
in
and
test
lods
mov
outsb
cli
inc
add
mov
repnz
dec
imul
lret
or
mov
mov
imul
xchg
test
xlat
imull
xor
push
mov
inc
jmp
cmp
inc
inc
mov
adc
mov
aaa
add
ret
sbb
sub
adc
adc
lods
mov
out
jmp
les
sbb
pushw
popf
mov
in
js
imul
sbbb
loope
std
push
lods
int
inc
mov
sbb
pusha
ss
movsl
add
cmp
out
push
addr16
mov
mov
popa
sbbb
shrb
jge
mov
lcall
daa
in
lock
notl
and
lret
aas
push
xchg
ljmp
cwtl
test
push
adc
loop
dec
int3
jne
stos
jmp
cmp
xchg
sub
xor
inc
xchg
nop
inc
cmp
notb
adc
adc
inc
jle
xchg
adc
sbb
pop
ljmp
mov
cmp
jge
cmc
push
loopne
inc
test
mov
sbb
sub
shlb
mov
pop
xor
jecxz
nop
xchg
ss
mov
adc
jns
js
shrl
fwait
mov
fistl
rcll
adc
das
xchg
imul
cs
cli
mov
jmp
into
ret
cmc
mov
outsl
jmp
add
and
ja
stos
adc
lock
inc
and
jecxz
shrb
sub
jle
jo
shll
aas
ds
push
dec
insb
push
lahf
sub
repnz
pop
popa
xor
pop
icebp
add
inc
repz
fcmovne
sbb
mov
pop
pop
andb
jbe
pop
icebp
jb
test
movsb
lock
lods
or
add
fisttpl
jmp
imul
lret
pop
mov
cmp
jge
inc
fsubl
and
repz
pop
adc
cmp
or
adc
adc
jnp
aad
jno
lahf
fdivr
arpl
les
mov
pushf
scas
movsl
push
repz
sub
sbbb
push
data16
inc
adc
and
adc
mov
fidivrs
in
pop
enter
jp
cmp
inc
lcall
mov
xor
je
cmc
adc
sub
mov
ror
pop
cmpsb
pop
test
lahf
subl
les
in
pop
cli
mov
int3
xor
fildll
imul
or
pusha
mov
cmp
outsl
xor
test
pushfw
add
jno
leave
imul
xchg
js
nop
push
data16
in
jge
dec
cmp
add
sub
aam
cmpsb
popf
adc
mov
in
mov
inc
lock
mov
testb
mov
in
pop
xor
lock
inc
cmpsb
daa
pop
cmpsl
and
mul
cmp
outsl
into
std
cmpsb
push
decb
aad
nop
int
inc
pop
sti
imul
push
or
jbe
push
fs
faddl
push
lcall
loop
or
xor
dec
cmp
push
jg
out
pop
push
xchg
icebp
cmp
shll
inc
out
in
xchg
test
lret
jl
std
sbbb
push
pop
mov
lock
arpl
jnp
or
movsb
jne
pop
pop
mov
cmp
outsl
out
xchg
mov
push
cltd
cmp
dec
pop
sbb
outsb
sub
xlat
cmc
insb
inc
or
dec
ret
shrb
xor
sahf
jo
ficomps
pushw
ljmp
cmc
cmpsb
sub
jecxz
dec
push
xorb
xor
lods
xor
and
fucomi
je
js
clc
adc
adc
mov
inc
imul
jbe
pop
je
cmp
mov
xchg
jne
icebp
stos
xor
dec
sbb
jae
sub
push
adc
cli
jae
mov
mov
scas
add
lea
ret
or
sub
pop
sub
mov
adc
pop
mov
loopne
sub
pop
add
jns
in
adc
xchg
icebp
js
xchg
jnp
mov
nop
jb
xchg
mov
sub
test
dec
jnp
js
lret
shlb
or
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
and
xor
xor
mov
subl
push
mov
add
cmp
je
adc
mov
mov
adc
mov
xor
xor
orl
add
adcl
add
movl
adc
adcl
xor
movl
mov
push
adc
xor
xor
add
mov
add
movl
adc
subl
xor
xor
cmp
movl
jne
cmp
jmp
xor
stos
sub
cmc
jb
xchg
ss
mov
jp
pop
jp
dec
aas
adc
sahf
xchg
pusha
outsb
xor
rorb
or
ljmp
je
xchg
or
or
jbe
adc
mov
mov
popa
loope
jge
es
lods
adc
mov
dec
and
faddl
dec
or
inc
or
mov
dec
fstpl
add
or
out
jmp
pop
imul
aam
jns
outsl
fstpl
stc
enter
test
cmp
out
rolb
mov
push
dec
movl
aam
xchg
jmp
push
mov
lds
into
and
imul
pusha
push
push
leave
data16
mov
dec
push
pop
out
xchg
icebp
and
push
scas
loopne
add
sub
dec
jg
inc
std
adc
iret
iret
outsb
inc
dec
inc
add
cmp
fsubp
sbb
hlt
ficoml
pushf
push
sub
jp
xor
dec
push
cmp
es
and
cmp
mov
sahf
adc
pop
fadds
pop
dec
lods
pusha
mov
fxch
repnz
insl
ds
adc
sbb
mov
fstpl
aaa
clc
pop
sub
icebp
test
xchg
xchg
fcmovu
add
dec
out
loope
pop
mov
xchg
push
insb
cltd
adc
adc
shl
or
cmp
cs
icebp
insb
adc
jo
xor
cli
sahf
sahf
cmc
shlb
test
push
xchg
imul
inc
xchg
lcall
add
push
dec
leave
ds
imul
dec
adc
pop
xor
and
jne
xchg
leave
jne
out
or
sub
test
cmpsb
lods
push
xchg
outsb
adc
fbld
sbb
xchg
js
or
xorl
cmp
lcall
movsl
ret
faddp
mov
push
adc
fwait
scas
roll
xorb
loope
lea
jbe
xchg
call
sbb
fs
stos
rorb
xor
loopne
leave
sbb
mov
cld
lret
insl
orl
and
xchg
adc
inc
mov
mov
js
sub
cmpsl
fisubs
pusha
adc
push
je
mov
add
dec
push
sub
inc
pop
aas
lods
pop
pop
aas
in
or
xchg
adc
outsl
pop
scas
fidivrl
pop
lcall
and
dec
lock
jae
lods
cli
out
or
in
jo
in
mov
xor
or
mov
mov
les
ret
ljmp
pop
xchg
mov
outsb
jge
cmpsl
sub
add
sub
out
pushf
aad
faddp
and
icebp
pusha
dec
and
or
pushw
sbb
popa
sbb
xlat
rclb
add
bound
decl
pop
leave
lret
add
les
inc
ret
fdivp
push
fmul
add
mov
call
xor
add
in
push
jnp
mov
xchg
lret
xor
mov
sub
in
mov
push
ds
mov
xor
adc
inc
adc
adc
cwtl
mov
inc
mov
dec
xor
mov
push
sarl
dec
les
scas
ror
or
dec
mov
dec
xor
mov
inc
add
mov
cli
sahf
xor
out
jb
push
rcll
aam
std
scas
cltd
xor
sbb
dec
int
loopne
outsb
xor
inc
gs
sti
popf
into
xor
stc
xchg
aaa
push
outsl
cli
cmpsb
jge
sub
rorb
pop
cwtl
incl
push
test
mov
scas
xor
mov
pop
sbb
cmc
ds
push
loope
lahf
cmp
and
cmpsb
jmp
push
das
adc
shl
xchg
fisttpll
mov
mov
push
mov
push
adc
subl
inc
icebp
jg
popa
movsb
push
xlat
sub
pop
frstor
mov
inc
sarl
push
mov
sarl
mov
aad
mov
into
jp
fisttpl
js
scas
shll
loope
push
pusha
fcoms
std
pop
sti
cmpsl
inc
sub
fidivl
rcll
bound
push
jno
pop
insb
cs
fnstcw
sbb
push
pop
inc
sbb
fidivrs
jb
mov
pop
fsubrp
inc
pop
push
mov
stc
sbb
js
push
mov
inc
nop
pop
rcll
sub
leave
aad
push
jge
imul
aad
sbb
cmc
mov
out
hlt
mov
mov
mov
cmp
std
fistl
ret
insb
mov
jp
pop
pop
rol
ljmp
popf
pop
sub
rclb
test
repz
test
inc
push
push
mov
pop
xor
pop
push
add
ret
or
xchg
mov
jno
inc
popa
scas
sub
mov
mov
insl
dec
ret
nop
fnsave
xchg
inc
cmpsl
cwtl
ja
ret
insb
mov
add
pop
push
int
repnz
in
imul
pushf
mov
les
icebp
test
fmul
int3
cmp
inc
scas
gs
cmp
mov
inc
pop
movq
arpl
out
pop
jne,pn
pushf
or
leave
mov
or
idivb
daa
mov
sbb
sahf
rcrl
fwait
popf
fisubs
sub
dec
dec
add
stc
addr16
xchg
ret
adc
aad
je
jbe
inc
mov
mov
imul
jo
cmpsl
in
mov
lock
outsl
xor
inc
add
sahf
or
repz
lods
sub
sbbl
ljmp
mov
ss
add
dec
adc
sbb
jmp
xor
push
sub
jmp
pop
mov
int
add
jl
andb
test
xor
adc
mov
lret
fmull
div
mov
ret
xchg
cmpsl
push
insb
and
add
or
push
icebp
mov
out
sahf
iret
push
push
out
mov
xor
cwtl
out
fdivr
mov
fwait
xor
js
cmp
fcompl
xchg
jle
push
mov
jne
cmp
dec
fldenv
xchg
movsb
jo
pop
mov
mov
xorl
out
inc
jnp
dec
pop
enter
cltd
inc
push
sub
mov
loop
test
xchg
not
push
pop
sar
repz
mov
push
icebp
mov
test
test
cmc
jg
cmp
sbb
ficoms
mov
push
sar
ja
sbb
aam
mov
jp
out
xchg
sbb
mov
mov
out
cmp
inc
add
xchg
xchg
or
sbb
aas
mov
arpl
or
ds
or
sbb
movsl
stc
incl
xor
aaa
lret
repz
es
jge
cmpsb
fnsave
push
outsl
insb
ds
or
jmp
dec
call
ja
xor
pop
mov
xor
test
xchg
xor
insl
add
das
mov
dec
or
ds
pop
pushf
push
xchg
or
push
bound
sbb
mov
dec
sbb
or
mov
repz
jno
sub
push
push
inc
fiaddl
xor
popf
cmp
dec
mov
sbb
sub
jge
mov
call
dec
inc
test
test
fmuls
and
jne
pavgw
pop
stc
and
mov
fldenv
xchg
in
js
ja
jns
es
mov
mov
xor
cs
aam
cltd
mov
add
cmp
int3
lods
sbb
pop
es
mov
add
xchg
push
and
jne
cmp
pop
or
xchg
add
pop
div
ret
sbb
filds
xchg
in
shl
ficoml
in
cmp
and
or
or
movsb
mov
ss
push
movsb
lds
cmpsl
mov
jmp
and
aad
adc
mov
xchg
mov
mov
out
push
dec
xchg
lret
push
or
addb
sahf
shrl
dec
xchg
cmp
fnstenv
rcl
insb
lea
jl
ror
inc
jl
mov
inc
loope
int3
sbb
inc
and
jge
js
sbb
xchg
pusha
sti
cwtd
cmp
push
test
jno
orl
push
insb
mov
xor
add
push
dec
xchg
mov
aad
mov
add
push
dec
jmp
loopne
cld
les
cmpsl
mov
sarb
cli
mov
cmp
cmpl
dec
testl
jno
fnstsw
adc
fisubl
in
jmp
inc
enter
mov
push
jecxz
movsb
or
sbb
inc
mov
xor
cltd
pop
rorl
inc
xchg
sbb
mov
mov
out
xchg
pushf
xor
leave
and
xchg
aaa
jb
pop
cmovnp
rorb
push
mov
jmp
xchg
hlt
xorb
dec
mov
pop
fisubl
push
lods
add
movsl
rcl
arpl
mov
loope
mov
out
xchg
out
and
xor
xor
push
mov
test
mov
hlt
std
mov
add
pusha
jae
push
sub
in
inc
stc
dec
je
lret
cmpsb
push
or
stc
mov
sbb
and
cmc
lea
psubw
and
fstpl
lock
clc
out
in
fcomp
adc
insl
add
lret
mov
xor
fcoml
push
push
and
xchg
pop
rorb
sbb
je
loop
cmp
adc
fmull
stos
jb
dec
or
stos
lods
stos
out
ret
pop
enter
xchg
sub
lcall
adc
adcb
rep
pop
pop
outsb
movl
push
dec
sub
and
fcomps
lret
pop
jb
out
mov
and
ret
out
dec
pop
jl
cltd
adcb
jl
dec
dec
push
push
jno
pop
rcrl
xchg
xchg
jno
jns
cmp
pop
jne
mov
lahf
data16
aas
jp
fstpt
dec
xor
mov
jp
jae
pop
fcomp
mov
cld
test
les
enter
std
mov
repz
jle
jmp
icebp
lea
cmp
mov
jns
call
cs
testl
pop
js
cmp
sub
les
clc
inc
mov
out
hlt
addr16
iret
pop
jnp
lretw
mov
pop
in
mov
test
push
out
lret
sub
mov
nop
jnp
push
mov
pop
mov
call
xchg
fmuls
mov
repz
jb
in
bound
movsl
dec
or
xor
inc
outsl
les
mov
fwait
loopne
xchg
insl
faddl
or
lods
xor
loop
or
push
clc
cmp
push
xchg
mov
cmpsl
outsl
outsb
mov
pop
mov
rep
addr16
mov
in
xor
add
sbb
mov
gs
jmp
shlb
or
jg
mov
mov
sti
ds
lods
inc
add
scas
int
cmpsb
pop
out
test
mov
xchg
or
cmp
push
push
push
push
ds
sahf
sbb
mov
shr
pop
in
lret
pop
jne
inc
std
mov
dec
xchg
icebp
xor
xlat
mov
fstpl
cs
inc
add
mov
dec
pop
movsl
mov
and
jge
mov
mov
shrl
int
sbbl
jo
pop
insb
aas
arpl
addl
scas
das
mov
push
mov
add
clc
movsb
sub
rcr
test
adc
xor
ret
mov
jb
xchg
jge
in
adc
push
jecxz
xlat
lods
pop
imul
jle
outsb
int3
stos
sbb
mov
cmpsl
cmp
push
jg
inc
sub
loope
jb
pop
repz
mov
mov
aad
lods
and
stos
jno
test
jno
lea
shll
mov
lahf
into
push
xchg
mov
pop
repz
sbb
pop
and
inc
mov
adc
jge
popf
adc
dec
test
jmp
clc
mov
pop
pop
test
jmp
push
movsl
push
jmp
jge
mov
mov
mov
ret
mov
outsb
icebp
add
mov
loope
test
ljmp
xor
loop
pop
cli
in
jmp
jmp
fwait
xor
mov
and
mov
and
imul
jne
movlps
repnz
subb
xor
fdivp
je
push
outsl
pextrw
xchg
cmpsl
fdivrs
push
addl
mov
push
cmc
push
push
ds
mov
pop
jmp
enter
jp
mov
pop
int
push
adc
push
or
pushf
mov
popf
dec
in
mov
push
sarl
push
add
out
std
or
dec
leave
mov
insb
pop
xor
out
lret
sbb
test
push
stos
or
ljmp
shrl
call
mov
cmpsb
pop
inc
push
and
sahf
cld
pop
repz
pop
pusha
lret
xchg
xchg
dec
xchg
cmpsb
shrb
dec
push
mov
xchg
mov
das
mov
stos
dec
loop
push
xchg
push
dec
adc
inc
sbb
std
cli
dec
xchg
xchg
jmp
subl
inc
or
cmpsl
push
mov
sub
jl
loope
daa
inc
xchg
data16
mov
add
test
loop
mov
ret
jg
adc
and
xchg
cmp
testb
mov
xchg
sub
mov
jge
pusha
sbb
xchg
and
mov
jbe
adc
adc
jmp
loop
mov
ds
popa
and
add
fnstenv
clc
outsb
push
jp
and
sbb
mov
ret
push
icebp
out
test
loope
sub
xor
fsincos
add
xchg
or
pop
dec
fistps
fists
test
bound
cmc
insl
and
icebp
or
scas
add
sbb
sub
xchg
mov
mov
add
jbe
inc
sub
xchg
test
test
push
push
je
dec
cmpsl
cmpsl
xor
sub
mov
cmp
repnz
lods
addl
inc
pop
neg
xchg
into
sbb
inc
sbb
bound
fincstp
call
hlt
inc
xorl
push
jle
insb
cmpsl
sub
jmp
xor
cmpsb
sub
add
int
adc
push
cmp
jne
xor
call
mov
inc
outsb
in
sbbl
or
shlb
pop
inc
sti
add
dec
ret
dec
cld
cwtl
cld
test
add
iret
jb
pop
ror
cli
int3
inc
mov
and
jp
sbb
fildll
jp
cmc
pop
test
cmpsl
push
sbb
dec
inc
and
mov
mov
insb
cwtl
insl
pop
inc
mov
sarl
push
pop
pushf
pop
es
fs
mov
jmp
lea
mov
repz
test
xlat
movsl
sub
mov
stos
mov
inc
mov
repz
clc
mov
mov
mov
xlat
in
sub
sti
dec
sbb
scas
xlat
adc
lea
pop
or
xchg
sti
mov
xchg
pop
adc
pop
scas
mov
rcl
dec
in
push
pop
adc
sti
jmp
cli
xlat
enter
xchg
fwait
enter
mov
push
pop
mov
insl
ds
pop
or
dec
jne
fimuls
sbb
pop
in
inc
add
arpl
pop
scas
jle
movsl
pop
fists
mov
jge
cmc
test
ds
icebp
incb
push
test
xchg
arpl
xor
add
aas
mov
jg
and
pushf
fidivrs
cmp
push
pop
push
jp
xor
shrb
repnz
inc
sub
mov
xchg
nop
cmpsb
cmpsl
test
add
xor
sbb
mov
inc
xor
xchg
cmc
stos
mov
or
mov
jne
jle
push
lods
inc
sbb
or
xchg
xchg
pushf
ss
cli
in
sub
cmc
lret
push
mov
iret
xchg
rcr
or
xchg
and
mov
push
push
and
mov
lock
or
shl
fcompl
das
push
int3
add
es
cmp
daa
fdivrs
std
jbe
sbb
data16
cmp
mov
or
jb
mov
lret
sbb
pop
cmp
cmpsb
aaa
ss
bound
push
cltd
stc
loop
mov
mov
addr16
loop
cmp
sbb
inc
add
xor
mov
pusha
inc
cmp
pmaddwd
cmc
push
inc
roll
adc
cli
mov
jecxz
cmp
mov
shlb
and
push
or
daa
leave
popl
hlt
stc
test
gs
pop
scas
push
lret
ljmp
jnp
mov
mov
enter
inc
les
jo
mov
push
fxch
jp
sbbl
xlat
loopne
cs
enter
movsb
inc
aas
cmc
aaa
adc
lods
ret
lcall
push
mov
adc
movsb
mov
int
hlt
mov
jp
sahf
sbb
and
xor
cltd
xchg
sti
es
xor
sub
sbb
push
decl
lahf
or
rclb
inc
cmp
stos
adc
cmpsl
int3
ljmp
bound
into
mov
decb
sub
dec
or
jmp
xchg
out
inc
out
jns
js
stos
xor
jb
shll
cld
lahf
xor
pop
pusha
ds
push
cmp
inc
int
adc
addl
lahf
mov
addr16
xchg
pop
xchg
jne
cwtl
int3
adc
loopne
adc
xchg
jmp
push
fdivrs
adc
dec
xchg
fisttpl
subb
inc
mov
clc
dec
xchg
jecxz
or
xchg
push
enter
out
out
das
xor
movsb
mov
mov
cmp
mov
ja
mov
shrb
or
nop
jecxz
sbb
inc
lahf
xchg
stos
cmp
cmp
or
mov
jnp
add
cmc
je,pn
xchg
jl
cs
mov
xchg
ds
or
ret
jb
pop
pop
cmpsl
dec
filds
sub
pop
movsl
adc
fld
and
jg
push
jb
movsw
movsb
dec
cs
js
std
daa
into
test
pop
pusha
std
fwait
mov
cld
js
push
fstpl
jno
repnz
xchg
lock
ret
fs
pusha
fistl
loope,pt
inc
fimuls
pop
fsubrl
xchg
jle,pn
sti
mov
pop
lds
pop
or
sbb
mov
clc
dec
pusha
dec
add
xchg
pushf
mov
jo
mov
mov
jnp
pop
mov
xor
scas
daa
lods
mov
xchg
std
rcrl
jb
dec
jno
mov
clc
dec
sbb
lret
mov
loope
sbb
fistl
adc
imul
push
shll
xchg
add
sbb
and
fidivrl
ret
and
sti
adcb
notl
cld
jno
and
cmpsl
std
mov
pop
adc
lret
push
stos
push
aas
repnz
popa
inc
sti
cmpsb
inc
mov
and
lea
into
ljmp
push
cmp
stc
les
mov
lahf
cld
scas
popf
lcall
sub
push
xchg
push
jo
sahf
jno
gs
xchg
add
pushf
loope
mov
ds
pop
and
xchg
rcll
repz
lahf
pop
fwait
pop
push
dec
pop
mov
or
pop
jmp
stc
xchg
pop
arpl
jle
xor
push
test
add
adc
sub
pop
pop
push
sahf
adc
and
adc
rcr
xchg
mov
fs
loop
push
sub
dec
loopne
fstps
pusha
xchg
push
inc
out
mov
xlat
imul
inc
sbb
add
sbbl
sahf
mov
loopne
stc
call
and
mov
inc
xchg
test
rcrb
push
loopne
daa
jp
int3
loopne
aad
cmpsb
popf
push
repz
icebp
call
pop
pop
mov
inc
cwtl
vcvtsi2sdl
orl
mov
es
std
dec
sub
add
add
clc
inc
test
js
sub
mov
sub
call
mov
cmp
divl
stos
adc
sbb
and
and
dec
and
aas
sbb
mov
imull
lahf
push
test
leave
cmc
cmp
push
push
xchg
and
inc
imul
cltd
sahf
pop
push
cmp
ljmp
or
inc
es
xor
insl
push
hlt
mov
movsl
jb
sar
js
jl
and
xchg
adc
add
cwtl
aad
lcall
lret
cmp
cmpsl
jecxz
inc
bound
mov
adc
push
dec
icebp
inc
xchg
jns
and
push
cmp
add
into
push
pop
cmp
pop
add
sbb
ficompl
xchg
cld
xor
fidivrl
inc
cmp
imul
gs
sbb
adc
sarb
popa
je
pop
push
scas
into
std
subb
scas
pop
add
inc
cmc
imulb
sbb
outsl
xchg
add
imul
cld
cmp
mov
mov
adc
iret
vxorps
fcmovu
lods
xchg
sub
jge
cmp
cmpsb
xor
or
sbb
ljmp
mov
inc
dec
jb
rorl
divl
ss
xor
pop
arpl
stc
enter
add
jno
dec
je
push
or
jge
jle,pt
mov
sub
cld
mov
test
pop
adc
pop
xor
ja
xchg
idivb
leave
out
pusha
sub
mov
push
cmp
push
cltd
fsubr
dec
add
aad
out
push
mov
sub
ret
cltd
adc
add
add
adc
sti
fwait
cmpsl
mov
and
jmp
cmp
ljmp
inc
mov
ror
cmp
and
sbb
jp
mov
xchg
push
lods
xor
xlat
jmp
into
stos
add
or
sub
dec
cmp
pop
ret
dec
xchg
test
scas
mov
dec
repz
sar
out
test
stos
loop
insb
aam
mov
ret
pop
cmp
mov
outsl
bswap
ss
mov
stos
test
push
icebp
adc
cmpb
cwtl
popf
ret
cmp
clc
aas
lods
ja
out
push
cld
dec
dec
push
xor
and
bnd
nop
jmp
push
sbb
inc
cs
fcoml
dec
lcall
bound
mov
test
js
add
adc
sub
add
std
pop
clc
pop
out
cmpsl
out
jo
jbe
jecxz
jne
jp
cmp
xchg
es
inc
jle
pushf
mov
clc
mov
jae
aad
xchg
in
les
loopne
cmpsl
mov
mov
sub
aas
inc
adc
mov
xchg
leave
adc
int
movsb
pusha
lret
dec
mov
mov
jp
xchg
sub
or
mov
sbb
xor
xchg
ret
xchg
fnstcw
adc
into
insb
insl
stos
add
pop
mov
insb
xor
iret
out
out
xchg
jg
stc
lea
xrelease
mov
cmp
sbb
fs
out
andb
mov
es
scas
rcrb
shrb
das
inc
xor
mov
xor
repz
mov
pop
lods
jbe
fcoml
pop
fdivrs
notb
inc
xor
xchg
pop
mov
mov
imul
and
cli
adc
push
pusha
xchg
xor
je
test
xchg
cmp
cmp
imul
and
mov
xchg
rolw
sub
test
nop
mov
clc
pop
dec
and
loop
mov
xchg
pop
into
mov
mov
mov
xchg
xchg
mov
mov
mov
cmp
or
add
mov
and
scas
dec
inc
test
enter
mov
push
adc
pop
repnz
loop
ret
adc
cli
inc
xchg
gs
out
and
xchg
push
mov
dec
loope
loope
insb
pop
add
fisttpll
cmp
mov
mov
outsl
fdivs
add
arpl
cmpsb
outsl
repnz
popa
cmc
notl
pop
jb
cs
sbb
mov
push
dec
je
push
jae
and
outsl
roll
and
mov
and
ret
cmpsb
iret
xor
scas
sbb
lret
mov
xorb
inc
cmp
cli
lcall
push
lret
sub
xchg
mov
mov
ja
test
and
cmp
lds
jl
hlt
adc
dec
jnp
xchg
dec
xchg
inc
xlat
mov
or
adc
jl
pop
bound
xcrypt-ofb
cmpsl
sub
das
and
sbb
push
mov
push
mov
mov
inc
jp
lods
and
leave
and
call
push
jbe
cld
call
xor
dec
les
imull
adc
pusha
enter
xchg
ss
outsl
popf
dec
aam
jl
or
inc
inc
push
mov
xchg
cmp
xlat
icebp
rol
loop
add
xchg
mov
int3
jbe
push
lahf
lods
call
push
sbb
in
iret
lahf
mov
mov
sub
adc
mov
fimull
popa
jle
sub
sbb
mov
xchg
pop
data16
xor
out
pop
ss
imul
pop
out
mov
daa
add
cmp
push
js
or
stc
and
lret
int3
dec
out
dec
lods
aas
jl
subps
mov
xorb
jae
rclb
push
js
loope
rolb
xchg
push
lods
insb
pop
xchg
rcll
ret
ds
pop
fisubs
cmpsb
test
xchg
inc
push
ret
sbb
movsb
lods
xchg
pop
xor
lods
loope
std
sub
and
push
imul
mov
cmp
fisttps
cmp
mov
jge
js
ja
andb
mov
sub
xor
lock
aas
stc
cmp
jl
lcall
scas
int
ja
inc
cmp
pushf
incl
test
test
push
rcrb
shrl
sbb
dec
fdivr
push
lret
imul
mov
cmp
nop
inc
mov
mov
or
imul
mov
rorl
sbb
mov
daa
in
fisubs
sbb
add
mov
inc
xchg
xor
movsb
roll
mov
sub
nop
add
or
sbb
or
and
rclb
push
fwait
dec
pop
ret
push
lock
rcrl
aad
dec
imul
xchg
inc
fwait
outsb
and
pop
mov
pusha
sbb
xor
repnz
sbb
mov
dec
sub
mov
xor
cltd
sub
ss
ss
int3
repnz
mov
scas
leave
in
pop
adc
outsb
cs
adc
push
sti
out
leave
mov
cmp
fdivl
adc
or
je
inc
pop
nop
out
mov
xchg
and
je
into
rcrb
dec
xchg
mov
sbb
cmp
dec
push
jns
sub
pop
loop
addr16
test
adc
test
push
gs
sti
lahf
out
add
bound
imul
cmc
mov
push
imul
push
pop
jo
dec
test
movsb
jecxz
and
add
fldenv
dec
aaa
sbb
cmpsb
pushf
test
rclb
ss
dec
pop
fidivrs
sub
fdivl
js
aad
imul
into
faddp
inc
jle
dec
aaa
pop
sub
dec
hlt
pop
and
movsl
fidivl
and
sbb
mov
mov
inc
sub
scas
pop
inc
sub
mov
fucom
jnp
xlat
xchg
cmp
pusha
mov
dec
loope
push
xchg
or
iret
popa
inc
xor
or
scas
sub
movsb
push
or
fucomp
test
jnp
ficompl
hlt
mov
lods
outsl
xchg
fimuls
je
adc
push
insl
pop
or
aad
sbb
xlat
das
sub
cmp
xchg
imul
ljmp
or
and
ret
sub
popa
pop
push
sub
mov
push
clc
dec
pop
repnz
clc
xor
mov
add
js
and
adc
int
push
inc
fidivrl
es
addr16
pop
lcall
add
repz
lods
sbb
mov
repz
dec
adcl
stos
test
aas
sahf
ss
imul
scas
enter
cmpsb
aam
addr16
xlat
push
add
jne
mov
mov
dec
dec
fs
and
enter
int
mov
dec
icebp
push
cmp
xchg
hlt
loope
cmp
push
mov
fs
dec
call
dec
cs
imul
sub
ss
cmp
or
lods
add
addr16
test
movsl
lds
clc
cltd
adc
jns
les
jp
mov
enter
xchg
add
subl
call
lahf
mov
not
cli
push
call
pop
inc
iret
arpl
xor
dec
stos
testb
pop
es
or
movsb
arpl
push
notb
test
loop
scas
or
sub
int
sti
pop
or
mov
mov
pop
sub
icebp
in
pop
std
mov
push
inc
test
lahf
pusha
pop
shr
xor
std
and
cli
lock
fisubl
mov
dec
fs
aam
sbb
std
push
std
adc
stc
xor
jmp
adc
fadds
mov
cmpsb
lret
add
hlt
cmp
or
push
rcll
testb
outsl
inc
mov
push
in
or
add
jae
jae
lods
mov
arpl
adc
jbe
lea
lret
ss
scas
enter
icebp
jae
jge
out
nop
rol
hlt
ds
lret
mov
or
pop
pop
insl
das
repnz
cltd
insb
int
xorl
in
data16
jge
out
mov
das
adc
ljmp
adc
mov
add
lods
lods
sbb
xchg
dec
sbbl
adc
inc
scas
cmp
nop
ffreep
jp
ss
or
cmp
sub
out
or
adc
jnp
outsl
shll
insl
mov
push
stos
nop
in
in
sbb
rcr
idivb
cmp
push
adc
clc
jecxz
fwait
push
sahf
xor
xchg
inc
sub
jae
push
mov
cltd
mov
adc
sub
push
rcr
xor
ljmp
icebp
fsubrl
jno
enter
notl
mul
ljmp
push
add
jmp
sub
mov
mov
mov
xor
jmp
sbb
stc
sti
xchg
xchg
pushl
jns
cmpsb
jne
jp
mov
and
mov
pusha
aas
push
inc
lahf
out
and
loop
sbb
dec
insb
cmpsb
fcmovnb
or
add
out
xor
and
sub
in
pop
and
pop
neg
jne
xor
xchg
loope
mov
mov
in
pop
jmp
call
push
fs
pop
pop
xchg
pop
jae
xor
jp
shll
sbbl
jnp
mov
lods
test
test
adc
pop
xchg
mov
xor
imul
outsl
ss
pop
push
or
jp
mov
loopne
daa
icebp
push
test
shll
mull
es
push
in
es
jns
test
sbb
pushf
add
popa
sub
clc
sub
les
xchg
ss
adc
add
add
mulb
lret
xlat
jnp
add
popf
insb
lea
sub
jle
or
cmp
mov
lret
daa
cmp
mov
negl
cld
loopne
cltd
mov
fnsave
mov
int3
test
insl
inc
inc
xchg
pusha
fcmove
mov
in
xor
outsl
sbb
clc
mov
mov
push
inc
and
or
sub
dec
outsb
cli
cmpsb
in
sub
push
cmp
mov
lods
pop
xchg
jmp
insl
rcl
inc
or
adc
out
or
mov
xchg
pop
sbb
inc
inc
jg
add
lods
inc
stos
push
add
push
add
aad
loop
pop
shl
lods
push
mov
jne
fwait
pop
popa
sub
or
push
hlt
sbb
dec
hlt
outsl
test
out
adc
xchg
fdivr
adc
lahf
data16
cmp
cmp
cli
daa
bound
imul
sbb
mov
popf
roll
cmp
pop
scas
test
pusha
fs
dec
mov
popa
jle
ret
scas
mov
inc
cmp
pop
shrl
out
mov
shrl
mov
stc
psraw
cs
push
rolb
sub
push
pop
push
or
aad
imul
cmp
dec
outsb
scas
cli
das
cmp
adc
push
fdiv
mov
imul
mov
xor
push
inc
lods
nop
je
cmp
push
dec
loopne
je
outsl
fcmovb
lds
lea
aas
jbe,pt
mov
je
das
sub
int
imul
xchg
lds
sbb
addr16
fmuls
cmpsb
add
adc
divl
mov
mov
cmp
jmp
aam
lahf
xor
insb
lods
cwtl
stos
into
dec
cld
pop
mov
shll
imul
insb
sbb
push
pop
lret
pop
push
mov
push
out
dec
and
ret
test
pop
cmp
push
fisttps
xor
out
cmp
nop
pop
repnz
sub
add
pusha
stos
scas
pop
xchg
xchg
and
fbstp
adc
decb
roll
int
pop
sub
jnp
ret
rclb
jae
hlt
push
daa
fs
and
sahf
xchg
sti
bound
call
out
mov
jg
jl
test
mov
and
cmp
popa
jo
lret
mov
jg
ja
push
mov
push
push
pop
jae
or
inc
mov
xchg
inc
pop
aaa
mov
push
sub
arpl
push
addr16
inc
push
push
jno
xchg
or
push
leave
or
cli
inc
adc
pop
aaa
xchg
adc
je
insl
and
gs
xor
mov
mov
repz
xor
adc
std
cli
xor
shr
fisubrs
ds
pop
daa
and
jl
mov
sbb
xchg
mov
roll
pop
mov
in
push
loope
inc
sbb
dec
sbb
and
fdivrp
jmp
inc
std
mov
filds
mov
loop
scas
ja
mov
mov
xor
cmp
and
pusha
xchg
cmpsb
add
sbb
mov
int3
mov
addr16
dec
test
dec
cmp
loopne
cmc
xchg
loope
inc
push
in
lahf
cltd
mov
jnp
pop
push
lret
push
call
negl
pop
hlt
movsb
sub
jg
push
xor
dec
loop
das
into
mov
sub
mov
movsb
adc
xchg
bound
add
jnp
xor
sarl
aad
in
shll
cmc
test
inc
ds
mov
mov
imul
and
sub
pop
add
out
daa
in
je
arpl
cmc
mov
aad
sbb
fldcw
or
sbb
out
cmpsb
roll
push
xchg
push
adc
push
cmp
or
sub
gs
ss
adc
aad
sbb
lods
out
xchg
lds
add
adc
mov
jle
psllq
xchg
pop
test
cmp
jae
ret
imul
ljmp
int3
subl
sbb
aaa
pop
push
mov
rclb
nop
mov
mov
inc
jge
fwait
lahf
push
mov
push
xor
xchg
or
or
jp
dec
mov
sub
mov
pop
push
jae
mov
cli
enter
add
dec
lea
mov
sub
mov
pushl
pop
cmpsl
movb
stc
jecxz
and
pop
stos
inc
stos
pushf
adcb
lea
roll
add
in
cmpsb
lahf
sub
mov
test
mov
adc
aad
cmp
adc
push
ds
xor
jg
outsl
sbb
sbb
mov
mov
mov
leave
stos
dec
push
popf
mov
std
int3
stc
lcall
add
jns
sahf
test
orb
repnz
fisttpl
ret
repnz
aam
cmc
je
xchg
xor
ret
fsubl
dec
fistl
bound
push
pop
rorb
pop
insl
stos
push
and
cltd
sbb
movb
aas
push
jl
stc
call
xorl
dec
or
out
addl
jmp
xchg
rcr
cmp
mov
xchg
scas
cmp
or
call
ja
sub
stc
in
mov
jle
xchg
mov
pop
xor
mov
mov
jge
xchg
ja
mov
shrl
adc
jb
xor
test
sub
test
mov
ja
test
push
lock
jg
icebp
add
sub
insl
inc
call
xchg
jp
movsb
enter
stc
negb
test
shlb
rolb
stos
ja
div
xchg
mov
sbb
dec
clc
pop
fildll
scas
test
pop
cld
rcrl
mov
fucomi
sbb
xor
sbb
adc
adc
jbe
cltd
jg
cltd
in
arpl
out
cmpsb
mov
test
xchg
mov
mov
xor
into
bound
pop
ss
sbb
push
orb
bound
mov
lcall
imul
xorl
mov
jbe
xchg
cltd
pop
cltd
mov
cmc
add
repnz
ja
sub
ja
dec
inc
lods
dec
sbb
inc
pop
add
push
sbb
cli
dec
inc
pop
jne
jno
xchg
push
or
roll
data16
in
imul
int
jno
repnz
mov
je
pusha
push
pop
sbb
test
shll
pop
mov
fwait
in
loop
shr
cwtl
xchg
push
repnz
mov
jne
ficompl
sub
lea
les
fidivl
rcrl
ss
data16
xor
mov
mov
and
stos
jecxz
mov
jo
out
xchg
fs
mov
dec
push
into
addr16
add
push
mov
pop
loop
leave
xchg
in
pop
and
sub
fcomp
test
sub
cmp
and
dec
mov
in
or
xchg
adc
mov
xor
xlat
loope
jne
out
adc
jl
lods
dec
push
jge
sbb
cmpsb
in
pop
imul
and
xchg
push
scas
mov
les
jecxz
outsb
dec
out
mov
pop
or
or
jne
xorl
add
jge
mov
in
cmp
sarb
sub
jbe
sub
out
lcall
jo
pushf
lahf
in
or
negl
pop
lret
lret
cmp
lea
outsb
inc
mov
mov
sarl
mov
push
insb
sbb
stc
lret
stc
sbb
mov
mov
jge
clc
adc
adc
loop
insb
popa
jbe
mov
xchg
and
aas
push
cmp
push
jns
int3
mov
out
clc
test
inc
or
xor
jg
andl
jb
pop
aaa
dec
icebp
push
jecxz
out
mov
pop
or
mov
stos
fdivs
inc
mov
sub
movsb
popf
ss
xchg
shl
and
xchg
push
jle
sbb
enter
cmpl
cmpsl
shrb
pushl
push
fs
or
in
push
sahf
cmpb
fistps
jno
test
loop
mov
jle
push
mov
dec
inc
or
inc
lahf
or
fldl
cmp
mov
pop
push
std
and
and
in
call
or
inc
push
cmp
stos
xor
push
fistpll
out
fstpl
cld
call
cmpsb
outsl
cs
jne
push
cmp
fdivl
pop
js
test
push
out
mov
cmp
loope
es
xchg
aam
pop
push
in
movsb
cmp
cli
push
addr16
adcb
into
rcr
mov
dec
xor
lods
shlb
jo
ror
xchg
mov
hlt
mov
or
testb
pushf
adc
jg
popa
xor
mov
dec
scas
dec
jg
push
mov
mov
mov
sub
mov
std
int
in
sub
dec
jae
mov
mov
dec
in
jae
or
dec
sub
add
notl
test
rolb
ret
sbb
es
and
mov
mov
dec
cli
pop
inc
pusha
inc
lret
lcall
cmpsl
jae
jmp
cli
hlt
push
imul
mov
xor
ficompl
cs
and
add
pop
sub
jecxz
repz
sti
sub
and
pushf
or
lret
xchg
cmpsl
inc
and
cmpsl
scas
push
mov
xchg
push
lock
divl
add
fdivl
fistpll
inc
daa
sub
dec
pop
rcrl
lret
sarl
jns
mull
jnp
js
mov
xchg
xchg
sbb
inc
cmp
cmp
cmpsl
scas
jge
hlt
cmp
int3
xchg
add
popa
cs
sarb
xor
and
mov
dec
adc
add
lods
out
xor
adc
lock
loop
test
cmpl
icebp
in
enter
sbb
or
ret
pop
mov
rcll
loope
dec
inc
pushf
daa
jne
hlt
ret
das
add
aam
adc
stos
mov
ficoms
mov
jb
inc
xor
pop
enter
shlb
cmc
sbb
push
mov
lods
sub
push
add
sahf
in
mov
mov
in
sub
lret
jae
out
jmp
jnp
jnp
test
repnz
andb
mov
add
or
xor
test
mov
ss
shrl
stos
inc
les
dec
inc
popf
cltd
cmp
test
jb
adc
jmp
or
adcb
call
mov
jnp
and
adc
pop
xor
sub
jl
push
mov
aaa
lahf
mov
clc
jb
push
insl
push
xor
pushf
ret
test
das
push
mulb
push
mov
aad
sbb
jae
lahf
push
inc
push
icebp
cli
pushf
in
loopne
inc
mov
leave
pop
in
clc
xchg
push
loope
inc
pop
sarl
js
mov
jne
loopne
jns
xchg
je
fstl
ss
cmp
jecxz
dec
or
in
inc
fisttpll
mov
fwait
bound
decb
stc
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
movsbl
or
mov
mov
mov
sub
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
push
andl
mov
mov
movl
mov
or
push
mov
mov
mov
and
mov
or
xor
xor
and
mov
subl
add
sbbl
add
imul
movl
mov
movl
cmp
je
or
mov
mov
mov
xorl
xor
sbbl
lea
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
pushl
push
push
pushl
call
jmp
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
outsb
sti
ss
add
add
add
add
xor
add
mov
inc
add
add
add
push
push
inc
push
loope
or
inc
nop
cmp
loop
add
add
pop
push
popa
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
