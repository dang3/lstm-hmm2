push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
movsb
pusha
jl
jl
addr16
jl
xlat
cmp
ffree
pop
push
add
cmpps
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
inc
pop
loop
lock
adc
ret
push
hlt
mov
into
imul
cmp
inc
fcmovne
insl
mov
cmp
sbb
lock
enter
insl
mov
add
sarl
gs
pop
push
loope
jns
andb
ret
cld
and
test
sbb
iret
mov
sti
xor
push
adc
movq
or
mov
movsb
stos
push
je
test
lock
add
call
pop
jnp
add
mov
jae
adc
fcomps
leave
add
inc
test
vmovntps
lock
pop
sub
mov
jg
jne
pushf
cmp
mov
jmp
cld
lods
test
push
or
addl
or
mov
out
imul
xchg
add
rcll
dec
ficoml
cmp
dec
mov
rclb
imul
sub
test
aam
jo
mov
inc
sbb
add
mov
data16
and
dec
in
das
stos
adc
dec
ss
out
xchg
xchg
js
mov
pop
xor
movsl
mov
push
les
inc
test
pop
dec
push
adc
nop
and
les
test
or
ret
lcall
mov
adcb
pop
mov
push
add
adc
ljmp
stos
jo
sbb
mov
jecxz
sbb
mov
test
sar
outsb
fldt
ror
icebp
jne
push
xor
jae
cltd
ffreep
dec
pop
pop
data16
aas
and
sbb
hlt
mov
adc
loope
push
cmpsb
nop
mov
aas
cmp
outsl
ljmp
ljmp
mov
ljmp
cmp
sub
out
cmp
add
shrb
sub
lea
sbb
sarb
mov
xor
push
jp
xchg
pop
and
and
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
jg
and
addr16
jl
jle
jl
out
pusha
movsb
push
mov
dec
lods
jno
fwait
mov
push
add
pop
cmp
lret
mov
rolb
jnp
fbstp
xchg
dec
test
sub
shll
rclb
iret
arpl
lret
push
cld
push
inc
fcmovnb
sub
add
dec
xchg
pop
jne
stos
push
sbb
xchg
movsb
sbb
push
mov
xchg
push
daa
mov
dec
push
pop
pop
sub
jb
adc
cwtl
mov
jne
in
aas
pop
push
repz
dec
int3
testl
fxch
repnz
shlb
or
mov
inc
pop
shlb
sub
mov
movsb
test
jae
aas
xor
sub
fwait
sbb
mov
jmp
push
mov
mov
and
or
cmp
add
cmpsl
inc
repnz
inc
fwait
lcall
mov
add
xchg
shrl
adc
insb
mov
mov
push
sbbl
pop
outsl
mov
xchg
out
dec
insb
sbb
popf
cmpsb
insb
cmp
fmuls
mov
fwait
arpl
push
jb
sbb
lret
mov
int3
adc
mov
imul
xor
pushf
outsb
bound
add
xor
adc
push
aas
psubw
xchg
mov
pop
scas
dec
or
mov
or
jb
and
push
dec
call
pop
out
in
aad
adc
cmp
stc
pop
adc
sbb
movsl
push
sbb
aas
jecxz
adc
in
adc
pop
xor
inc
and
cltd
cmp
mov
or
insb
xchg
cwtl
rclb
es
in
cmp
out
mov
push
mov
out
adc
adc
pop
jmp
stc
fisubl
insl
mov
adc
jnp
push
lods
repnz
ljmp
popa
mov
xchg
pop
jno
mov
outsl
inc
loop
xor
xor
jbe
jmp
xchg
sahf
das
lods
out
push
imul
sbb
negb
push
mov
pop
lds
andb
sub
push
sahf
cmp
xor
xor
mov
mov
jle
loopne
lods
sub
roll
mov
cmp
pop
or
add
jbe
inc
xchg
lods
fs
fsubs
repnz
fadd
pop
aam
repnz
cmp
hlt
or
test
lods
inc
cmp
sbb
jo
sbb
shll
out
inc
in
rclb
shll
ds
or
lcall
push
adc
stos
xchg
push
mov
lods
push
cmp
mov
mov
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
sub
jl
addr16
jl
jae
jo
jge
cwtl
jae
sub
adc
das
cli
inc
add
std
xchg
cmp
pop
cmpsb
aad
test
pop
lahf
sub
mov
icebp
push
sbb
cli
scas
add
push
in
in
into
cmp
sub
mov
out
shl
test
ret
rcll
popf
mov
das
mov
jne
xchg
cmp
popf
inc
imul
add
shr
fs
sahf
mov
scas
lods
aad
and
pop
xor
mov
dec
cmp
mov
xchg
adc
das
out
movsl
push
adc
inc
int3
mov
jl
test
xchg
ret
movsl
inc
popa
pop
mov
test
cmpsb
jo
gs
cmp
cwtl
pop
jb
jae
add
cmp
xchg
fisubs
inc
xchg
cmp
add
cmp
ret
in
push
cmpsl
cmp
hlt
pop
add
xor
js
fs
inc
cmpsl
in
push
ss
rorb
mov
mov
pusha
test
out
mov
dec
imul
nop
popa
fimuls
fwait
jae
daa
xchg
or
sti
stos
jmp
mov
mov
inc
jg
mov
xor
cmp
sbb
sub
mov
shll
jo
pop
or
add
ds
mov
add
pop
mov
xor
sbb
mov
push
pop
jp
repnz
lods
ret
pop
jmp
ljmp
lret
pop
add
out
shlb
in
addr16
lcall
into
xchg
inc
rorl
jle
dec
loop
arpl
pop
test
push
push
inc
rorb
out
outsb
push
inc
aas
or
scas
pop
and
fidivl
imul
sarb
dec
cwtl
out
js
inc
test
push
jmp
and
scas
pushf
lcall
popa
xchg
cmp
lock
enter
and
sbb
xchg
js
inc
dec
and
mov
enter
loope
rcrb
add
idiv
push
imul
imul
and
cld
or
in
xor
packuswb
jg
xchg
jmp
mov
fs
mov
shl
sbb
sub
inc
out
or
or
xor
in
imul
mov
mov
add
add
jbe
mov
mov
mov
push
push
fs
sarl
push
xor
mov
jnp
ficoml
mov
jns
and
mov
push
mov
mov
in
repz
fwait
test
adc
data16
int
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
jecxz
pop
pop
jmp
fadds
arpl
or
cmp
out
adc
pop
js
out
dec
and
sbbb
xchg
mov
add
dec
sarb
cmp
dec
popw
xchg
sbb
xlat
xchg
ret
popa
push
push
or
cwtl
loop
mov
or
xor
out
fistpl
xchg
iret
push
and
movsb
popf
aaa
inc
jns
cmp
mov
clc
lds
pop
addr16
mov
push
sarl
dec
popf
aaa
xor
ljmp
sti
rclb
stos
imul
pop
push
movsl
xchg
mov
in
test
adc
test
push
cmp
dec
adc
inc
dec
xchg
shll
incb
mov
lea
std
int3
repnz
test
enter
mov
popf
daa
jge
or
out
jno
dec
xchg
in
test
lret
mov
int3
je
pop
sub
push
and
inc
cmc
and
and
jnp
sbb
aas
loop
pop
xchg
inc
inc
mov
in
mov
lds
mov
out
lcall
andl
loop
std
jecxz
mulb
mov
mov
jecxz
cwtl
scas
mov
daa
mov
sarb
adc
scas
pop
outsl
fdivs
xchg
pop
and
add
mov
popa
fsubrp
sti
mov
xor
jp
adc
nop
mov
lsl
mov
popf
and
ret
addr16
loope
scas
push
xchg
jae
shlb
fimuls
sbb
jl
pusha
repz
pop
adc
test
xchg
mov
jmp
clc
push
test
push
and
aad
sub
adc
cmc
lock
lret
aas
mov
mov
out
sahf
or
lret
and
pushf
test
pop
mov
imul
inc
lahf
sbbl
mov
add
dec
dec
mov
jg
xchg
push
sahf
icebp
rolb
and
aas
or
xchg
icebp
mov
or
inc
in
adc
push
sub
dec
mov
pop
push
mov
iret
mov
ds
stos
xor
and
mov
adcb
adc
adc
aad
jge
cmpsb
in
addr16
sbb
jno
out
movsl
adc
ds
sti
and
dec
fs
dec
inc
in
mov
pop
mov
sbb
mov
mov
cmpsb
cli
loopne
mov
jg
bound
jg
gs
push
jecxz
loopne
xchg
mov
cmp
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
and
jle
jl
xor
mov
mov
hlt
test
xchg
insl
xor
mov
das
xor
add
cld
adc
xor
scas
icebp
gs
lret
jmp
pop
sbb
out
mov
add
mov
rcrl
mov
pop
pop
xchg
mov
sahf
mov
cmp
mov
fisubl
loope
pusha
lret
inc
and
test
xchg
sub
mov
or
ja
insl
aam
outsl
adc
pop
in
xchg
xlat
pop
loope
cmp
outsb
outsl
add
inc
rcrl
dec
bound
loope
and
mov
mov
or
dec
fwait
cld
sub
dec
mov
jp
mov
xor
pop
sbb
hlt
jnp
adc
ror
fdivl
fcompl
pop
hlt
hlt
bnd
cmp
es
mov
aad
sub
das
sbb
rolb
in
int3
push
mov
sbbb
inc
in
in
or
stos
mov
jmp
ret
movsl
fadds
pop
jno
push
or
xor
jecxz
dec
xorb
clc
mov
xor
push
test
mov
push
cld
or
mov
nop
mov
jle
add
xor
inc
mov
cmovo
mov
sar
outsl
fwait
cmc
insb
fs
and
nop
cmpsb
cli
jl
mov
enter
xchg
add
lods
pop
out
loope
fwait
mov
out
aaa
cltd
push
jmp
adc
ret
xlat
gs
dec
mov
outsb
add
mov
xlat
inc
inc
cs
sbb
iret
fsubs
data16
push
push
out
mov
jmp
lock
aaa
add
loopne
sub
or
pop
mov
add
jmp
pop
push
ret
mov
out
lods
daa
xchg
adc
and
sub
enter
cmpsb
lahf
pop
sub
bound
das
xchg
adc
mov
leave
push
in
push
xchg
xor
je
or
jo
enter
jmp
fisttpl
in
dec
jp
aaa
lcall
and
repz
out
jg
popa
dec
fs
ljmp
add
sbb
shll
sub
bound
xchg
repnz
sbb
sarl
adc
pop
icebp
dec
sahf
add
loopne
mov
fdivs
xchg
cld
inc
sub
push
mov
imulb
add
adc
inc
push
cld
and
pop
adc
ret
and
cmp
or
sar
cmp
xchg
mov
fcoms
pop
lods
and
je
dec
or
sub
fldt
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
push
movsb
sti
mov
pop
out
sbb
push
sarl
aaa
repnz
push
addb
outsb
mov
and
lahf
sbb
cli
xchg
pop
mov
data16
adc
and
mov
dec
sbb
pop
dec
test
sti
fsubrl
shlb
adc
and
test
jbe
andl
xor
add
fadd
std
mov
out
xor
dec
es
pop
or
enter
lds
lahf
ret
sbb
push
add
sub
sbb
popl
stc
clc
xor
mov
addr16
and
flds
jge
int
mov
shl
mov
rcll
xchg
gs
jge
movsb
jae
neg
negb
neg
xchg
cmc
fwait
jb
push
push
ja
mov
mov
mov
mov
cmc
sub
rcrb
sub
fpatan
cmp
enter
sub
je
insl
xchg
jge
push
loop
xor
pushf
adc
add
iret
inc
mov
mov
cmc
inc
mov
iret
adc
arpl
pop
ret
xchg
lods
mov
cmp
push
loopne
ljmp
xor
push
fnstsw
pop
outsl
insl
mov
pop
pusha
xchg
push
les
xchg
and
lods
aaa
imul
stos
je
iretw
fdivl
int
cli
shr
jo
mov
mov
not
addr16
pop
sub
imul
mov
loope
jae
lret
aam
pop
push
leave
aad
mov
adc
cmp
out
cmp
inc
push
addr16
mov
jg
bnd
xlat
loope
sbb
test
ret
push
fidivs
sti
xor
adc
rcll
mov
addr16
sbb
jns
nop
jnp
stc
cmp
push
mov
add
mov
cmpsb
adc
push
inc
jmp
push
cmpsl
movswl
int
sub
jmp
jp
enter
and
pop
add
vpcmpeqd
and
xor
inc
xchg
sub
adc
push
test
pop
and
push
pop
adc
cmp
mov
enter
ret
pop
out
rcll
les
or
or
mov
lcall
fdivrs
push
lret
jns
aas
hlt
xor
xlat
or
mov
adc
je
cmpsb
push
jle
mov
sysret
push
mov
add
ffreep
and
add
cmp
jle
clc
incb
inc
mov
mov
std
es
pop
mov
divl
lea
mov
mov
cmp
jmp
mov
jne
adcb
pop
xchg
push
ljmp
jl
mov
ljmp
sub
stos
insb
outsb
mov
inc
cltd
push
pop
leave
xor
pop
movsl
adc
mov
sub
nop
inc
inc
sbb
jbe
filds
inc
loope
insb
pop
and
cmp
cmp
adc
aad
mov
or
jge
aad
stc
loopne
loopne
and
mov
daa
sarl
add
std
add
sahf
in
bound
ds
push
outsl
fildl
dec
test
xor
es
cld
lds
imul
pop
adc
push
scas
pop
mov
mov
jg
into
jle
xchg
xlat
jecxz
push
add
sbb
add
pop
lcall
pop
cli
inc
pop
test
sbb
fs
xor
push
inc
mov
sub
ror
xlat
xchg
pop
lret
push
addr16
mov
out
andl
and
or
sub
or
int
inc
pop
in
and
test
sbb
call
mov
and
xchg
ret
outsb
fisubs
out
mov
mov
push
into
jecxz
sbb
out
fwait
inc
push
xor
adc
in
je
dec
push
jl
xor
bound
pop
push
nop
mov
push
mov
outsl
push
fimull
ret
sbb
and
inc
push
sub
xor
ficompl
call
cmp
mov
pop
jnp
ds
dec
mov
jb
add
sti
push
out
aad
xor
jp
and
ret
sti
dec
sub
push
jae
mov
mov
cwtl
subl
adc
lahf
frstor
and
cli
lret
lods
arpl
repz
pop
stc
mov
fimull
cmp
cwtl
push
lret
cli
sub
dec
jmp
loope
sbb
push
inc
xchg
inc
das
cmp
pushf
sbb
cmc
add
nop
icebp
push
arpl
sub
and
hlt
dec
loopne
sti
mov
or
sbb
and
jo
mov
sub
js
jno
jns
cmc
push
fbld
inc
lds
sub
xlat
jne
loopne
test
popf
mov
adc
in
jb
scas
push
testl
mov
dec
lea
pop
xchg
sub
rorl
mov
insb
pop
add
imul
push
cld
sub
add
sti
sub
pop
ss
sbb
mov
jno
inc
or
outsl
sahf
shlb
cwtl
xchg
pop
sar
add
add
nop
out
cwtl
add
testb
aas
xor
add
sbb
sbb
test
add
add
lea
xor
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
sub
negl
addr16
jl
stc
add
les
aam
jb
andl
cmpsl
pop
test
dec
add
lret
es
and
add
mov
lahf
jnp
stos
pushf
scas
or
lcall
and
in
push
sbb
mov
and
out
push
imul
sbb
std
mov
pushf
sbb
outsb
aam
fs
daa
add
jo
mov
add
inc
aas
xor
or
and
aaa
or
mov
xchg
dec
leave
push
sahf
nop
hlt
mul
stc
lahf
pop
dec
add
inc
in
pop
or
popf
pop
cmc
jns
pop
lods
push
pop
xchg
in
bound
mov
dec
loope
dec
outsb
rolb
jl,pt
cltd
out
fnstsw
daa
pop
in
repnz
xchg
out
ja
ljmp
aam
xor
fidivrl
cmp
add
add
rcll
js
rcrb
xor
adc
test
lret
xor
dec
push
push
loope
cld
lods
mov
jne
mov
es
leave
add
jg
out
mov
test
outsl
inc
mov
adc
cs
test
or
pop
adc
int3
push
push
aaa
cwtl
rorl
repz
cmp
push
mov
jecxz
leave
inc
sub
push
enter
das
loopne
test
xchg
push
jecxz
push
cwtl
shrb
cmc
ret
mov
adc
pop
stc
pop
rcrl
jg
mov
enter
xchg
insb
and
pusha
inc
ja
cmp
cltd
inc
and
mov
pop
aas
in
adc
mov
or
push
rclb
dec
cmpsb
dec
pop
insb
lahf
add
fs
cmp
inc
lds
int3
int
movsb
and
dec
rcl
fiaddl
inc
fsts
add
loope
dec
and
dec
aaa
mov
cmpsb
dec
ret
fimuls
mov
shll
arpl
and
mov
lods
push
daa
sub
xor
icebp
sbb
mov
push
das
daa
and
and
addr16
adc
std
push
xchg
test
sbb
mov
push
test
das
or
push
mov
sbb
pcmpeqb
xchg
xchg
call
mov
mov
or
je
and
mov
and
outsl
arpl
pop
pushf
add
cmp
or
mov
int3
sbbl
pop
mov
es
in
xor
dec
cmp
sub
insb
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
lahf
fwait
pop
out
les
jl
adc
pop
iret
es
aas
push
cmp
mov
jb
pop
iret
dec
mov
gs
jle
jbe
mov
jnp
mov
mov
cmp
test
cltd
xchg
jne
xlat
mov
out
shll
repz
pusha
mov
fcomip
mov
mov
mov
add
mov
filds
mov
dec
cli
movsb
ljmp
mov
dec
icebp
push
mov
lds
mov
inc
out
jl
push
adc
fwait
pop
pop
rcll
sbb
leave
negb
dec
push
inc
dec
push
shrb
mov
scas
jns
lahf
imul
lods
pusha
inc
inc
adc
or
jmp
xor
push
lock
or
repz
mov
mov
add
repz
mov
addr16
push
pop
ffree
outsl
insl
loope
jno
jns
movsl
sub
sbb
sbb
sub
aas
fsubr
cltd
cmp
pop
aam
in
cmp
add
mov
movsl
cmp
pop
mov
negb
jne
fcoms
fsubrl
sbb
mov
or
leave
ljmp
pop
cmp
bound
jle
pusha
imulb
sarb
jns
cmc
jmp
push
out
cmp
and
or
mov
lret
sub
inc
and
sub
jns
mov
mov
fnstsw
movsb
inc
xor
xchg
pusha
cmp
fldt
push
jbe
fidivs
xchg
aam
out
je
dec
add
mov
outsl
ficoms
mov
sarb
mov
push
fnstcw
jbe
mulb
sbb
scas
lret
lret
addr16
leave
ja
or
gs
adc
cmpsl
xchg
or
psrlq
xchg
arpl
xor
add
jp
ds
lret
cmp
test
popf
lods
xor
stos
mov
pop
repnz
aas
cld
lret
or
cld
clc
cmpsb
push
xchg
cmp
in
aad
jno
test
aaa
cmp
insl
call
push
add
sub
inc
scas
ljmp
leave
add
ret
mov
popf
in
or
call
cmpl
xchg
jle
mov
insl
ret
jne
pop
arpl
aam
mov
adc
adc
or
nop
ret
icebp
mov
or
stc
mov
mov
dec
arpl
mov
cmp
rclb
jbe
or
fidivrl
xor
push
jg
inc
add
jmp
jl
aaa
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
daa
adc
push
jl
addr16
jl
or
lret
cmpsb
pop
ret
idivl
sahf
rcll
loop
inc
mov
xor
fnstsw
imull
psubusw
stos
cmpsb
jne
jmp
test
jp
pop
mov
shll
push
lcall
loop
jne
cld
jns
insb
int
xchg
mov
fcoms
xor
mov
data16
ret
popa
lds
dec
loop
cwtl
test
or
mov
pop
pushf
int3
sbb
push
xchg
ret
push
or
or
push
ror
imul
dec
push
mov
lret
add
mov
inc
cmp
jo
mov
rsqrtps
or
push
clc
test
ljmp
push
fcom
xor
xchg
push
cmpb
push
test
pavgb
test
ljmp
icebp
scas
add
jle
int
or
rcl
imul
xor
pop
inc
aad
pusha
push
mov
in
sub
in
xchg
xchg
xchg
adc
or
cld
cmp
repz
adc
and
inc
ds
xchg
icebp
jns
mov
scas
loope
cmpsb
mov
sub
dec
add
or
push
dec
pop
and
mov
dec
lahf
push
mov
adc
loopne
out
push
fstps
push
add
sti
fmuls
lock
mov
aam
dec
in
aaa
mov
scas
inc
xlat
out
cmpsl
mov
int3
or
sub
lret
mov
pushf
dec
cld
inc
fsts
call
adc
repz
loopne
shrl
xchg
out
jns
bound
ja
out
mov
inc
xchg
test
inc
mov
and
fcomip
sub
or
loop
int3
enter
ret
out
adc
in
stos
xchg
in
repz
jecxz
push
dec
cmp
inc
stos
stos
mov
stos
rorl
mov
xchg
aam
bound
jb
push
mov
jb
xchg
lcall
push
add
adc
les
jmp
jmp
and
cs
shll
jge
mov
jl
sub
repz
adc
les
jge
data16
pop
push
and
jb
mov
je
add
std
ret
aam
lret
xor
mov
cwtl
vmwrite
fstp
ret
pop
lcall
inc
int3
jmp
fimuls
sub
dec
sarl
xor
movsl
mov
xchg
ja
cli
fldenv
popa
mov
dec
aad
dec
hlt
fcomps
or
inc
cld
in
dec
mov
or
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
nop
jecxz
icebp
push
adc
jg
jl
pop
mov
xchg
xchg
adc
je
test
sarl
jle
cmpsl
mov
jb
fwait
add
adc
nop
mov
mov
cmp
les
rol
mov
push
or
sub
insl
mov
dec
lods
into
xchg
jae
cmp
dec
sbb
push
adc
mov
mov
js
fcmove
dec
jl
pop
lahf
cmpsl
popf
fldl2t
cmp
mov
gs
lcall
inc
cmc
outsb
jp
adc
mov
add
out
push
fidivrs
jae
mov
push
scas
test
sbb
aas
shlb
movsl
repnz
lods
mov
jmp
or
mov
cmpl
movsb
test
lock
xchg
out
repz
pop
insb
mov
and
add
mov
jno
mov
mov
add
nop
adc
push
sbb
and
sbb
add
popf
pop
dec
jo
outsl
mov
and
fptan
and
inc
les
xor
lahf
add
lods
cmp
mov
and
andb
in
mov
out
mov
jnp
lcall
fisubs
inc
mov
push
xor
nop
add
xchg
bound
push
and
and
sub
push
lods
xchg
and
aaa
push
add
test
and
stc
or
rolb
dec
inc
addr16
pop
and
push
dec
adc
mov
popa
test
loop
fidivl
orb
dec
ret
popa
xor
sbb
movsl
push
fs
sub
cmp
jg
ja
out
push
mov
xchg
in
cli
imul
pop
fucom
fstpl
xchg
sbb
ds
jbe
xor
rorb
inc
jmp
mov
cmp
addr16
pop
jnp
test
into
stos
push
pop
sti
or
cld
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
adc
sbb
jl
daa
fcmovb
xor
xchg
cmpl
add
inc
sub
pushf
push
movsb
adcl
outsb
cmp
lock
leave
lds
insb
test
push
jo
test
je
sub
fs
in
dec
inc
xchg
push
out
adc
in
daa
xchg
cmpb
jns
cmpsl
cmp
xchg
dec
aad
std
or
insl
sub
stc
pusha
push
cs
push
sbbb
mov
fwait
mov
mov
mov
push
or
in
data16
adc
out
sub
xchg
enter
adc
aad
in
inc
dec
pushf
aaa
xor
cmp
cld
jle
lds
ds
jg
pop
mov
cli
and
mov
iret
cmp
shll
jnp
stos
fs
pop
mov
arpl
mov
mov
mov
lea
push
pop
dec
inc
pop
cltd
pop
pushf
in
in
lahf
scas
sbb
cmp
jnp
outsl
mov
sbb
adc
outsl
ljmp
out
jl
cltd
xchg
aam
pop
inc
inc
xchg
xchg
push
pop
xlat
push
inc
sub
mov
lahf
ja
xor
dec
or
inc
data16
jae
fists
lock
dec
and
dec
xlat
sbbl
jle
cmpsb
or
in
jns
push
sbb
rcrl
ljmp
movsb
pushf
sub
out
mov
mov
mov
les
pusha
cmp
xor
scas
mov
loop
scas
mov
add
ret
push
push
mov
inc
and
scas
sbb
mov
lods
jg
repnz
jno
pmulhw
icebp
insl
pop
push
mov
jmp
sarb
sarl
mov
sbb
jl
jg
jl
mov
scas
repnz
add
rorl
aam
push
mov
jmp
cwtl
jbe
fwait
dec
mov
mov
mov
adc
cmp
adc
xlat
loope
inc
int3
pop
ljmp
inc
insb
dec
sub
gs
sub
fmull
loopne
andl
xchg
add
mov
jb
es
out
ss
sub
imul
mov
lret
adc
bound
cmc
pusha
jg
push
shlb
push
jp
gs
xchg
mov
pop
jmp
xchg
mov
jmp
mov
adc
mov
ss
xchg
js
mov
inc
out
and
adc
and
shl
and
loopne
add
das
mov
fs
ja
mov
xor
or
int3
push
ret
jmp
jmp
or
negb
mov
loope
mov
stc
cmpsb
jns
push
pushf
xlat
xchg
sarl
push
enter
out
dec
das
lods
push
mov
pop
inc
and
clc
mov
push
mov
sub
fcoml
and
inc
rcrl
sbbl
push
jns
test
jp
leave
push
xor
mov
test
pop
dec
icebp
or
mov
xchg
lcall
dec
pop
call
lock
lock
iret
iret
push
fld1
xlat
xchg
inc
js
arpl
inc
pop
cli
in
cmp
clc
inc
sbb
pop
adc
xchg
sbb
pushf
scas
mov
pop
push
inc
dec
sbbl
stos
lret
xchg
imul
or
movsb
lea
xchg
call
mov
push
pusha
jg
test
mov
in
test
cmp
mov
jmp
addr16
or
arpl
aas
cwtl
pop
inc
adcl
jl
or
mov
mov
add
xchg
out
jp
data16
ffree
outsb
ss
outsb
pushf
xchg
jo
data16
cmp
aas
mov
jmp
ret
dec
shll
loope
mulb
inc
lods
add
bnd
mov
sub
ljmp
jg
adc
roll
sub
addr16
cli
mov
sbb
dec
std
jl
shl
jae
lock
int3
jbe
cmp
lea
outsb
aam
xor
repnz
data16
test
aaa
mov
loop
adcl
dec
xlat
cmp
inc
repz
push
cwtl
out
push
pop
fcompl
stos
dec
gs
mov
add
jecxz
lods
inc
dec
pop
sti
push
cld
xchg
in
pushl
xor
sub
sbb
adc
jb
push
inc
push
adc
adc
push
cmc
clc
dec
pop
add
cmp
xorb
mov
jbe
push
xchg
out
push
into
in
mov
out
or
ret
out
cmp
sbb
push
hlt
pop
sub
iret
xchg
adc
and
add
add
sbb
int
and
xor
lahf
pop
mov
xor
cmp
icebp
incl
xchg
in
push
sahf
mov
shlb
pop
outsl
pushf
roll
cmp
mov
push
mov
or
fsts
ljmp
and
out
jno
aad
or
inc
test
pop
test
pop
les
mov
arpl
popa
sbb
mov
jmp
xacquire
dec
add
push
or
mov
jp
mov
xor
inc
cmc
inc
pop
inc
fsubs
cmp
add
push
xchg
and
sub
jb
xchg
inc
xor
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
js
sbb
jg
jl
jae
aaa
aad
pop
addb
push
std
insl
mov
mov
mov
adc
dec
push
sbb
div
test
rcl
inc
scas
xchg
fstpl
nop
cmc
dec
sahf
clc
jno
movsl
lahf
movsb
or
psubusw
mov
adc
xor
mov
and
pop
sub
add
xchg
or
out
xor
in
mov
inc
xorl
mov
mov
inc
push
inc
out
add
jg
xor
cmp
push
or
jg
arpl
pusha
sub
mov
cmp
sbb
xor
push
and
out
je
mov
jne
mov
cmc
pop
jae
jbe
mov
aaa
sti
push
loope
aaa
or
lret
loopne
jnp
shr
mov
pop
mov
test
dec
sarl
aaa
push
mov
fildl
mov
dec
ret
mov
sub
add
popf
or
testb
sub
movsl
ja
mov
popf
add
xchg
scas
in
scas
bound
mov
sbb
add
in
push
xor
daa
popa
lcall
lods
cmp
mov
add
adc
lods
sti
sub
mov
insl
mov
test
mov
repz
aas
stos
jne
loopne
inc
mov
test
pop
push
adc
and
push
fstpl
xchg
stos
movsl
lahf
pusha
push
mov
fwait
dec
pop
stos
inc
stos
sub
xchg
mov
cs
lods
ds
icebp
fmuls
inc
scas
adc
hlt
pop
pop
mov
pusha
fmul
mov
adc
jb
shrb
xchg
fisttpl
mov
mov
dec
test
xlat
cmpb
lods
hlt
dec
or
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
jo
fs
icebp
sbb
std
mov
xchg
dec
aaa
xor
aam
sbb
cwtl
push
das
mov
arpl
insb
cmp
sub
mov
push
mov
sub
imul
or
dec
sbb
jmp
jg
xor
jbe
push
adc
mov
jns
push
jbe
pop
mov
scas
cmpsl
jo
dec
mov
scas
add
roll
scas
sub
mov
stc
add
and
mov
out
sti
jmp
jl
mov
mov
sub
fisubrl
cmp
fcoml
imul
and
sub
pop
fwait
push
pop
pop
sbb
push
xor
std
and
outsl
mov
adc
xchg
loopne
lods
add
rcll
dec
sbb
ljmp
jae
cmp
inc
lds
inc
shlb
or
adc
jecxz
repnz
notb
adc
lcall
addr16
shrw
cmp
sbb
sbbl
mov
loope
mov
lods
jecxz
mov
adc
jecxz
shll
mov
hlt
jmp
addl
loope
out
jp
test
inc
fnsave
jg
dec
imul
arpl
std
repz
mov
push
push
adc
movsl
or
xchg
mov
and
dec
pop
and
mov
add
inc
mov
dec
cmpsl
push
test
repnz
test
mov
dec
adc
fildll
pop
js
jbe
aas
fs
test
cmc
pushf
lods
jmp
dec
rorb
leave
mov
mov
nop
or
call
inc
xchg
pop
lods
negb
push
orl
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
movsl
popf
xchg
jg
jl
cld
jmp
cmp
push
lahf
outsb
popf
mov
lods
sahf
movsl
out
cmc
std
dec
xlat
or
loop
dec
aaa
sbb
les
mov
nop
loop
mov
loopne
xlat
xchg
outsl
dec
arpl
push
jp
out
xor
insb
ficoms
int
aam
jmp
add
and
push
or
sub
inc
xlat
clc
fsub
mov
mov
mov
bound
adc
or
push
or
dec
mov
jge
lret
inc
scas
lret
js
and
mov
jmp
pop
pop
test
push
and
andb
xorb
insb
pop
lods
cwtl
stos
xchg
out
cmp
adc
push
enter
in
inc
dec
icebp
dec
fmuls
xchg
jge
lods
cmpsl
dec
pusha
mov
pop
push
push
bound
sub
loopne
add
pop
test
imul
jno
lahf
test
ds
mov
aam
dec
add
imul
or
sub
mov
push
out
cmpsl
repnz
adc
adc
jb
out
adc
lret
test
stc
loop
insl
cmp
loopne
push
adc
cld
jmp
out
int
mov
clc
into
stos
pusha
mov
jge
lret
cmpsl
jecxz
lea
push
fcmovnbe
in
lcall
sbb
adcl
fisttpl
scas
insb
mov
push
hlt
call
shll
cmp
faddl
daa
or
xlat
aas
stc
mov
shlb
aad
in
cmpl
and
xor
mov
les
or
aaa
inc
add
add
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
stc
and
out
jl
stos
jg
jl
leave
popa
in
dec
popf
and
sub
idiv
push
push
aaa
scas
mov
movsl
xlat
rclb
lcall
shll
pop
push
jnp
stc
jne
sub
loopne
jle
mov
movsl
push
mov
xchg
subb
dec
aas
cltd
xchg
dec
push
decb
divb
dec
or
cmp
test
lcall
mov
lahf
sub
pop
pop
rorb
loop
and
push
sbb
lcall
mov
pusha
pop
cmc
and
rcll
jp
scas
push
inc
sub
fcoml
repz
psrlw
sbb
ret
ret
out
shrl
imul
test
xchg
jae
in
mov
mov
mov
popa
into
dec
mov
push
icebp
mov
insb
or
inc
inc
into
dec
out
inc
lea
frstor
inc
data16
cmp
es
stos
push
mov
xor
ss
mov
mov
icebp
xlat
or
add
arpl
mov
inc
stc
lret
js
xor
mov
pop
xor
adc
or
iret
xchg
pop
mov
aam
cmp
outsl
xchg
adc
push
je
xchg
addr16
mov
jb
mov
mov
inc
test
push
subb
movsb
push
test
add
test
push
xchg
sbb
daa
jmp
stc
jmp
test
mov
mov
lret
bound
mov
and
js
loop
aas
pop
fs
stos
lods
xchg
or
add
movsl
push
aam
lds
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
push
imul
jg
jl
mov
mov
adc
fwait
dec
scas
pop
mov
aam
mov
repz
xorl
iret
addr16
imul
inc
sbb
fs
mov
inc
sarl
fldenv
jle
xchg
add
testw
add
test
xchg
lret
stos
and
and
out
loop
mov
hlt
xchg
pop
mov
imul
jnp
sbb
sub
outsl
mov
mov
mov
ds
xor
lahf
push
xchg
sub
es
mov
mov
mov
daa
mov
mov
mov
jnp
mov
icebp
mov
mov
add
cli
xchg
enter
mov
repz
fcomps
cmp
jae
sub
and
mov
jmp
mov
dec
fldenv
or
les
ds
xor
lock
ret
pop
add
sub
add
jl
call
dec
lcall
pop
or
flds
mov
icebp
stos
inc
jae
push
push
push
aam
js
mov
fistpl
loopne
jle
sbb
out
or
imul
daa
jl
push
call
mov
pop
cwtl
ss
lahf
mov
sub
shrl
fwait
mov
test
jmp
imul
inc
iret
pop
pop
xchg
xchg
jp
lcall
shr
pop
cmc
adcb
popa
mov
mov
mov
inc
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
pop
cmp
dec
and
jg
jl
pop
pop
insb
sbb
xchg
lret
sub
lods
push
push
add
or
and
cld
lods
xchg
cld
xchg
pop
cmc
insl
add
or
out
and
in
push
js
xor
aas
mov
cmpsb
push
pusha
ds
xor
xor
in
into
fidivl
rcl
in
mov
dec
adc
xchg
inc
shll
inc
sbb
mov
pop
js
cmp
and
cmp
push
push
xchg
bound
mov
dec
aas
nop
adc
sbb
and
int3
icebp
lcall
test
push
mov
repnz
jl
out
xorps
hlt
jle
aas
fistl
mov
xor
dec
mov
fs
les
fwait
jecxz
mov
inc
inc
inc
push
cmp
xchg
lret
andl
arpl
mov
call
inc
aas
xor
xchg
inc
adc
dec
or
pushf
sub
and
adc
inc
adc
ret
icebp
mov
out
xor
inc
jno
xor
popa
aaa
insl
xchg
mov
sbb
cmpsl
pushl
xchg
lahf
pop
mov
loopne
add
cmpsb
jmp
ficoml
sbb
fwait
lahf
std
inc
mov
insb
fsubrl
aas
jp
mov
pop
pop
es
lock
stos
imul
mov
cmp
dec
cmpsl
xlat
jg
jae
mov
out
aas
leave
bound
xor
fdivrl
testl
pushf
xlat
dec
jno
push
adcb
ret
cmp
mov
data16
repnz
mov
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
mov
jl
stos
jg
jl
pop
repnz
movsl
cli
in
iret
xlat
test
lock
adc
out
jnp
test
sahf
stos
mov
pop
fcmovu
push
in
std
jb
cmp
adc
clc
adc
aaa
sbbl
lahf
stos
flds
cmp
push
das
je
mov
dec
push
and
in
cmpsb
cltd
jmp
pop
clc
rep
jecxz
jmp
inc
fistpll
scas
out
dec
push
sbb
pop
fidivrs
out
ret
sbb
mov
push
inc
xchg
sub
mov
add
lock
mov
out
sub
pop
rcr
sti
jnp
ret
inc
jae
ficomps
dec
popf
jno
mov
jl
mov
mov
outsl
cltd
int3
cltd
xchg
sub
mov
add
pop
imul
fs
and
pushf
pop
sub
dec
cmpsl
cmp
loopne
inc
sbb
mov
dec
dec
sbb
pop
mov
loopne
cmp
mov
push
call
jb
leave
sub
adc
or
inc
loopne
dec
mov
push
mov
add
fsubrl
and
mov
incb
cmp
and
pop
icebp
pop
add
fildll
loopne
cmp
ret
mov
incl
adc
movsl
inc
sahf
inc
jo
pop
jmp
add
adc
mov
into
bound
out
xchg
xlat
stos
out
mov
mov
inc
xorb
int
pusha
jmp
dec
or
push
sarl
pop
lds
sub
and
addl
insl
shlb
mov
sub
leave
and
roll
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
sbb
das
jl
stos
jg
jl
mov
add
imul
sbb
das
into
insl
ss
add
enter
xlat
cmp
sahf
cld
cltd
mov
pop
pop
jl
add
xchg
pop
mov
jne
js
subb
cltd
dec
imul
inc
dec
jmp
aad
push
popl
xor
sarb
repnz
shrl
mov
push
push
iret
inc
negb
pop
xor
outsl
inc
and
stc
and
push
mov
lock
mov
pop
xchg
aas
ret
ss
mov
loope
pop
push
insb
std
fst
loop
int
lret
subl
dec
jle
mov
fs
lcall
pop
inc
pop
and
or
xchg
push
adc
xlat
out
sub
leave
mov
std
mov
pop
cli
xor
cs
and
jle
pop
stc
mov
pop
pop
in
outsb
outsb
rcrl
pop
mov
inc
std
or
je
insb
imul
testl
push
add
aas
xor
shlw
mov
int
movsl
mov
clc
lods
mov
outsb
arpl
cli
test
push
rcrb
mov
adc
jno
inc
push
adc
in
scas
lock
push
mov
adc
xchg
loop
and
fisubl
push
cmp
out
lahf
push
push
mov
adc
bound
dec
mov
jbe
lods
jmp
mov
out
sarb
cwtl
xchg
aas
inc
sahf
jo
aaa
inc
lret
pop
xor
add
add
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
sbb
aas
jg
ljmp
dec
jbe
mov
xor
jp
out
jmp
dec
cli
push
add
mov
push
outsb
cmp
test
icebp
sbb
and
xchg
movsb
sub
inc
cli
pop
jno
fwait
lods
fwait
add
jne
lea
outsb
leave
pushf
cld
xor
lahf
fnsave
sbb
loopne
in
lret
cli
cli
dec
cmpsl
push
into
imul
push
dec
test
imul
stos
jns
mov
popf
adc
call
inc
push
je
add
sbb
inc
cli
inc
pop
icebp
lret
sbb
mov
inc
pop
ds
xchg
inc
xchg
xchg
leave
pop
xor
mov
repz
dec
scas
xchg
outsl
push
mov
out
sahf
aaa
lret
sub
shrb
ret
mov
lods
sub
pop
adc
mov
nop
push
jmp
jnp
lock
out
add
cs
lods
fsts
popf
mov
mov
int
push
push
sub
lcall
ljmp
loopne
imulb
jb
and
fistps
xor
fcmovu
int
adc
inc
add
jle
push
pop
out
out
test
fcoml
cmp
cmpsb
enter
ja
pop
aas
mov
nop
mov
clc
incb
int3
mov
sub
insl
cli
mov
add
cmp
sbb
popa
sbb
shll
inc
fs
mov
roll
add
pop
cmp
cltd
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
add
scas
movsl
sub
jg
jl
rorl
fidivs
or
ror
movsl
xor
mov
cld
or
sub
mov
insb
adc
xor
push
aas
in
adc
loop
arpl
or
mov
bnd
mov
mov
xchg
pusha
pop
pushf
inc
sub
xor
mov
jge
mov
lret
sarb
idiv
cmpsb
popf
insb
int
in
pop
jge
mov
add
lock
mov
outsb
fstpl
out
inc
mov
repz
push
addl
sbb
mov
mov
cmp
jmp
dec
mov
cmp
test
loop
sub
pop
sub
je
sbb
addr16
out
mov
sahf
pop
xchg
cmpsl
jb
cmp
cmc
je
call
sbb
fiadds
jg
sub
icebp
roll
sti
lods
mov
dec
es
dec
jbe
aad
arpl
cmp
sahf
shll
and
mov
into
add
and
mov
mov
nop
mov
jle
xor
vcvtss2sd
mov
mov
xchg
std
pop
sbb
sub
enter
cli
dec
or
pop
adcb
cli
sbb
lret
lcall
pop
dec
pop
pxor
insb
xchg
push
bound
xchg
push
sbb
mov
idivb
xchg
scas
xor
daa
or
repnz
xchg
push
jecxz
or
xor
stos
sbb
stos
imul
push
push
mov
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
jge
mov
jl
jns
jl
add
pop
xchg
xor
sarb
jb
test
xchg
fld
cmpsb
sub
push
in
jae
loopne
pop
in
js
std
pushf
sub
mov
mov
fnsave
repz
mov
sbb
dec
rclb
fmulp
inc
cwtl
sub
adc
aas
pop
pop
ds
fstpl
dec
sbb
push
push
cltd
fcoms
pop
test
cli
inc
out
int3
mov
mov
icebp
les
dec
adc
mov
push
push
cmp
push
fs
stos
jo
movsl
pop
shll
popf
test
xchg
fsubrp
subb
rolb
movsb
pop
test
arpl
sub
adc
sti
call
push
leave
xor
mov
push
in
arpl
subb
scas
inc
dec
inc
dec
pop
pop
daa
mov
push
pop
mov
lods
push
push
sub
sub
mov
push
xchg
lods
insl
mov
aaa
push
sahf
or
scas
icebp
fwait
loop
cmp
imul
adc
add
es
fwait
fs
xor
cmp
xchg
sahf
fidivrl
out
out
mov
pop
xor
cmp
loopne
push
and
pop
popa
fs
sub
inc
jne
adc
rolb
hlt
mov
iret
jns
jmp
jb
fs
sarb
mov
lret
repnz
jo
movsl
and
sub
add
es
stos
in
cmpl
sub
xor
mov
add
shrl
sbb
adc
dec
adc
xchg
jbe
hlt
cmp
cwtl
mov
dec
inc
imul
fisttpll
sar
jo
jg
mov
call
inc
sub
int3
xchg
push
sbb
jae
fisttpl
sub
cmpsb
or
pop
sub
cmp
sbb
inc
in
pop
push
jb
iret
sbb
fstpt
iret
lock
pop
cli
ja
sub
lock
int3
in
inc
cmp
fbstp
or
sahf
push
push
or
push
mov
lods
jne
lahf
push
xchg
out
aaa
cmc
sbb
test
mov
mov
test
rcll
push
ret
std
fiadds
and
adc
mov
shll
sbb
inc
mov
loope
aam
repz
xorb
lret
cmc
lea
jmp
xchg
add
xchg
sbb
push
inc
ret
negb
xchg
pop
movsb
mov
in
lahf
mov
in
add
fwait
mov
add
push
stos
adc
sti
mov
jns
inc
dec
call
sti
jb
idivl
jge
negl
scas
cwtl
jmp
aad
movsb
aam
outsb
mov
lret
jl
movsl
xchg
imulb
notb
adc
jge
and
cmp
pop
dec
fiaddl
jmp
into
sub
inc
out
push
mov
sbb
pop
add
xchg
jmp
gs
push
mov
pop
and
les
jg
jnp
sbb
pop
sub
adc
mov
insl
ret
movsb
ja
bound
arpl
mov
or
ret
pop
jae
lahf
cld
repz
aaa
mov
or
and
test
sbb
push
push
lret
jle
insb
flds
int3
push
imul
jb
in
pop
imull
cmpsl
repz
iret
push
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
aam
push
sub
mov
jl
lahf
xchg
je
pop
cmc
repnz
hlt
pop
sarl
push
xchg
xorb
daa
out
xlat
ss
push
or
push
lcall
jo
ja
push
loopne
xor
cmp
or
mov
jle
aaa
add
push
clc
push
xlat
mov
sub
fs
cwtl
enter
mov
add
push
loopne
adc
mov
mov
cmp
mov
jbe
push
mov
popa
inc
adc
leave
mov
sbb
or
fstpt
test
jl
pusha
mov
dec
push
repnz
addr16
mov
sub
sahf
fcomps
outsb
mov
mov
pop
inc
je
rcll
mov
jae
test
int3
jmp
enter
jp
and
and
cwtl
mov
and
add
fs
jne
adc
mov
lret
movsb
sub
cmp
xchg
dec
jmp
jmp
mov
inc
cmp
and
notl
pop
aam
jl
clc
dec
add
xor
mov
xchg
add
dec
ljmp
sbbb
iret
pop
subb
movsb
out
lock
mov
lret
xchg
in
fnstsw
xor
out
imul
mov
fnstenv
repnz
cs
aas
ret
in
sbb
lods
cmp
imull
add
mov
das
xchg
ret
insl
mov
hlt
cwtl
lds
and
cmp
int
mov
dec
jo
or
push
popf
xor
movsl
jno
js
xor
scas
add
sarl
jmp
stc
fwait
subl
mov
movsl
cld
stc
loope
mov
mov
or
arpl
mov
shl
push
mov
out
stos
sti
xchg
pop
adc
ljmp
lret
imull
mov
xchg
sti
in
jnp
pop
xchg
lcall
ficoms
or
popf
rolw
insl
jp
pop
dec
add
push
dec
mov
jmp
sub
sbb
loopne
xor
aam
in
pusha
leave
int
jp
inc
call
enter
add
cli
arpl
insl
jbe
insb
add
sbb
adc
or
test
out
lret
adc
push
dec
xchg
add
add
mov
xchg
fucomip
cmpsl
sub
aaa
push
addl
push
bswap
or
out
push
mov
xlat
mov
adc
mov
mov
jb
int
mov
sbb
scas
xchg
or
sbb
fistpl
and
sub
insb
insb
inc
jbe
inc
repz
cmp
enter
mov
or
lahf
mov
mov
out
mov
mov
clc
mov
dec
mov
push
enter
lods
push
add
rorb
fucomip
divl
jne
dec
xor
loopne
pop
fwait
aam
pop
jg
push
xor
ljmp
lret
push
shrl
pop
add
push
test
repnz
cltd
daa
les
xchg
or
fidivrl
hlt
jnp
sarb
pop
in
mov
mov
push
inc
jo
mov
add
pop
dec
mov
out
xchg
push
insl
adc
inc
cltd
int3
lret
popf
sub
inc
mov
loop
or
or
fsub
and
and
mov
adc
mov
cli
aas
adc
inc
cld
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
in
xchg
push
cmp
add
cwtl
into
cwtl
or
and
imul
mov
lods
lock
fisubrl
sub
xchg
lret
daa
jg
cmpsl
sbb
mov
pop
sbb
sub
or
mov
idivb
jbe
fsubr
addr16
fwait
mov
jle
cld
int3
jecxz
andl
lret
stos
pop
mov
pop
cmp
pop
mov
ljmp
pop
inc
call
push
int3
jl
and
sbb
dec
and
loop
or
pusha
daa
xchg
popf
cmp
aaa
lcall
les
inc
ror
sub
repz
shrb
pop
test
push
add
sbb
add
ljmp
push
aad
loopne
outsl
fnstcw
sbb
sub
push
imul
push
sbbl
xor
mov
icebp
arpl
jl
inc
divl
test
add
jae
mov
lea
shll
test
fnstenv
jb
sbb
and
insl
arpl
push
leave
int
and
repz
ja
jnp
xchg
cmp
sar
push
cmc
inc
adc
adc
adc
pushf
insb
ror
fmull
mov
shll
jno
mov
mov
xchg
imull
lock
arpl
xchg
jne
jle
lcall
rolb
xchg
test
dec
imull
js
dec
movsb
dec
mov
pop
mov
sbb
jp
sub
lret
das
inc
outsb
stc
out
sub
pop
aad
mov
and
cwtl
out
movsl
or
jb
aad
loop
jo
insb
psubsb
pop
ret
cmp
sbb
js
or
aaa
into
xor
push
cmp
ljmp
sub
fwait
inc
mov
pop
addr16
jg
out
push
add
inc
shrl
jbe
cmpsb
test
enter
loope
cli
fldcw
and
pushf
lods
inc
or
outsb
push
leave
mov
pop
lea
dec
imul
and
mov
mov
imul
pop
mov
loop
out
inc
mov
fists
xor
shr
mov
add
outsl
mov
inc
test
xchg
rclb
arpl
inc
add
movsl
push
jle
and
add
inc
sbb
push
mov
mov
jle
and
lods
jge
ret
fs
adc
iret
test
outsb
xor
xor
loop
sbb
fldt
xchg
js
test
clc
jle
je
lretw
lret
scas
les
insl
mov
js
pop
inc
jae
test
inc
mov
mov
punpckhwd
lods
aaa
add
enter
mov
insl
repnz
imul
push
xor
pop
push
push
insl
and
test
lahf
stc
jnp
xor
into
imul
daa
mov
jg
aam
add
mov
and
jbe
push
inc
iret
outsl
cmpsb
add
push
sub
xchg
xchg
ds
xor
pushf
lock
inc
outsb
sub
cmp
sbb
sbb
stos
aaa
dec
cmp
mov
ljmp
pop
std
mov
shrb
dec
lret
jno
mov
daa
stc
adc
pusha
xchg
fsubl
insb
and
cmp
cmp
fbstp
add
cwtl
push
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
dec
xor
adc
mov
jb
sub
test
cs
and
or
addr16
xchg
or
adc
outsb
outsb
out
sub
mov
mov
add
sti
and
cmc
sub
add
test
and
xor
mov
bound
jne
jne
sub
push
fisubl
push
push
mov
bound
sbb
outsl
xchg
mov
repz
cmp
or
enter
fsubrl
sysenter
rcrl
dec
jb
in
push
shl
sbb
pusha
out
pop
sbb
inc
testl
dec
push
add
push
mov
cmp
inc
orb
loope
sub
je
in
jl
shll
xchg
xchg
call
stos
xchg
and
xor
test
enter
push
clc
insb
imul
ret
sub
ja
xorb
pop
push
ljmp
xchg
mov
add
dec
adc
cld
lock
push
arpl
or
lcall
sub
push
mov
jl
mov
dec
repz
data16
inc
lret
jnp
mov
std
add
inc
stos
adc
test
cmpsb
cld
xchg
adc
mov
and
push
sub
out
mov
popf
mov
mov
out
mov
in
stc
mov
adc
sbb
adc
lock
stos
jb
cmp
in
cld
cmp
lret
jge
mov
mov
jge
lcall
dec
xchg
sub
adc
loope
insl
mov
jo
adcl
test
mov
stc
push
pushf
mov
pop
inc
add
push
sbb
lret
scas
or
gs
loope
dec
jle
xchg
jge
repz
sub
out
push
movlps
adc
cmp
push
push
bound
cmp
mov
pop
and
fwait
lds
ja
je
shl
xlat
test
or
inc
jnp
outsl
repnz
shrb
rorb
rclb
loope
out
dec
mov
add
pop
js
int3
pop
enter
push
hlt
sub
xlat
enter
aam
jno
dec
xchg
xchg
mov
sub
arpl
sbbb
xchg
add
mov
lods
adc
sub
or
push
cltd
cmp
int
xor
sbb
add
subb
adc
lret
stos
jecxz
dec
xchg
int
call
sbb
lahf
cmp
sbb
inc
and
pushl
jno
cmpsl
xchg
enter
scas
nop
xor
mov
scas
dec
in
inc
push
in
push
inc
xor
hlt
xchg
fwait
scas
xchg
orb
dec
xor
rcrl
or
mov
sbb
xchg
push
lcall
gs
rcrl
xchg
sub
scas
ret
int
mov
xchg
sbb
setle
or
fcomps
sbb
es
addr16
out
dec
dec
inc
mov
insb
jle
or
adc
sub
xor
daa
into
pusha
shlb
mov
ljmp
dec
out
and
cwtl
hlt
push
leave
and
ss
shrb
test
mov
orl
jo
xor
cmc
add
cmp
push
pop
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
int
mov
jl
jle
jl
pop
jl
inc
addb
mov
inc
inc
insb
cmp
cs
stos
jle
enter
scas
cmp
mov
sti
mov
lods
add
pop
into
in
jp
xchg
lret
pop
pop
lock
pop
mov
pop
xor
sarb
cli
push
sbb
push
adc
std
push
scas
sahf
popa
xlat
inc
arpl
mov
mov
xchg
es
sub
xor
ds
sub
and
lret
mov
sahf
mov
adc
call
es
jecxz
mov
js
fisttpll
xor
adc
cs
mov
insl
out
push
lock
or
cmp
or
sub
imul
jno
mov
inc
cmpsl
mov
jle
add
mov
dec
addr16
test
mov
dec
pop
data16
push
repz
test
add
leave
pop
fisubs
add
and
movsl
sbb
jp
les
jbe
jnp
sbb
popf
ret
sbbl
test
pop
stos
or
cmpsl
cmpsb
and
rcr
test
cld
xor
sub
dec
repnz
dec
mov
cmp
outsl
sbb
mov
mov
loopne
es
test
xor
loop
repz
sub
add
test
sbb
mov
daa
jae
lock
lret
mov
push
cmpsl
mov
idiv
mov
daa
fwait
add
ja
xchg
cli
lcall
push
push
sbb
xchg
xchg
jmp
sub
lds
andb
bswap
addr16
cmp
jle
cmp
gs
cmp
xor
add
dec
jnp
fstpt
mov
xchg
push
rol
popa
test
or
cltd
cmp
inc
adc
push
das
lret
push
jge
or
mov
push
push
in
adc
or
push
clc
repz
cmp
addr16
push
das
adc
aad
loope
stos
insl
mov
mov
fsts
pop
or
orl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
adcl
jl
aam
mov
je
mov
in
jbe
pop
cli
in
cs
sbb
pop
xor
xchg
or
dec
iret
add
and
adc
in
jbe
inc
and
pop
cwtl
sbb
or
lds
dec
inc
fs
test
inc
mov
sarb
jo
enter
dec
add
mov
loop
dec
icebp
pop
es
imulb
fimuls
and
call
jecxz
inc
and
pop
in
xchg
gs
push
cmpsb
dec
aam
test
cs
bnd
add
shll
stos
cwtl
jno
jl
movsb
jge
popa
pop
mov
arpl
cmp
cld
sti
add
mov
ja
mov
jg
shl
in
scas
jne
jo
sub
or
cmpsb
or
cmp
sbb
pop
js
mov
movsl
or
das
jmp
call
mov
stc
andb
fs
xchg
popa
orb
stos
sbb
jmp
mov
and
jo
aad
pop
push
cltd
dec
push
push
jmp
sbb
and
adc
addr16
sub
pop
ja
icebp
aaa
rorl
cld
cmpsl
lods
pop
add
lret
mov
xchg
pop
icebp
jns
sub
fs
pop
cmp
lret
xor
cwtl
ljmp
cmp
push
aas
les
in
xchg
outsb
sub
cwtl
pusha
sti
pop
pop
mov
xchg
loopne
or
ljmp
push
out
jb
ret
aam
xchg
and
add
insb
fmuls
int3
loope
push
mov
gs
out
push
fwait
stc
loop
mov
in
cltd
fbstp
jno
sar
fildl
pop
or
sahf
mov
ffree
fcomip
lret
mov
ret
cmc
roll
jnp
popf
lret
fsubrl
pop
data16
or
sub
js
imul
mov
jbe
ret
xor
in
mov
insl
sub
mov
push
adc
and
adc
test
push
es
jmp
or
mov
jo
xchg
jmp
push
test
jmp
xor
jl
outsl
xchg
movsb
xchg
pushl
jmp
lahf
push
lods
loopne
lret
jbe
push
out
loopne
pop
mov
inc
sbbl
aaa
popa
lret
xchg
mov
test
xchg
cmpsl
push
inc
dec
push
out
fnstcw
push
enter
loope
pop
lods
adc
cmp
mov
adc
push
in
lods
xchg
mov
mov
cmp
push
ljmp
call
mov
inc
jge
and
push
add
adc
into
jno
mov
mov
addr16
hlt
inc
or
mov
lods
pop
imul
add
orb
jb
ss
adcb
fwait
pushf
mov
mov
ja
sbb
xor
sbb
dec
stos
lahf
adc
lret
push
sbb
jae
xchg
push
inc
ret
add
jl
lods
xor
cmc
adc
jbe
xor
sbbl
iret
mov
hlt
push
mov
dec
repnz
jmp
add
xchg
adc
call
pop
icebp
cmp
repnz
leave
je
lret
push
push
in
xchg
mov
popf
mov
arpl
mov
nop
daa
movsl
mov
gs
jnp
mov
dec
and
into
lds
jle
sub
or
mov
push
mov
dec
xor
mov
dec
fwait
sahf
iret
inc
dec
or
rolb
rep
xor
out
adc
imul
pop
loope
or
into
jno
jg
scas
add
dec
or
and
outsl
dec
test
pop
fwait
and
inc
push
das
fnsave
fdivr
dec
dec
in
and
mov
lcall
or
mov
arpl
jno
idivl
sub
loop
jo
test
sub
jb
lea
shll
jl
notb
push
faddp
das
bound
mov
shll
jno
sub
mov
sub
aam
pushf
inc
sbb
xor
push
lods
dec
or
cmp
in
nop
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
hlt
add
xor
jl
xchg
mov
clc
cmp
jmp
std
leave
cmp
mov
int
jns
test
and
arpl
push
dec
push
mov
mov
xchg
dec
fbld
loope
inc
pop
enter
rorl
cmovg
mov
into
pop
aas
jno,pn
in
cltd
mov
lahf
ret
pop
loope
les
xchg
subb
cmp
sbb
addb
jbe
stos
movsb
pop
pop
fs
fdivrs
xchg
adc
jae
xchg
and
jle
push
jbe
imul
loop
lret
dec
add
arpl
or
sub
xor
out
movsl
rcll
test
jmp
pop
mov
mov
lods
dec
push
fwait
mov
in
fs
jmp
ss
and
loope
dec
mov
mov
stos
lret
int
cmpsb
pop
jne
js
out
xor
jae
pop
sbb
fldcw
cmp
push
inc
jnp
sbb
mov
pop
lock
loopne
test
push
or
inc
loopne
jl
mov
stos
pop
filds
cmc
mov
fldt
mov
jle
adc
pushf
fisubl
xchg
fisubl
and
fsubrl
mov
inc
cmp
outsb
jecxz
shll
adc
mov
mov
loope
in
lret
dec
popf
mov
in
sti
test
dec
mov
inc
cmp
ret
int
add
push
pop
stc
pop
ja
lcall
icebp
stc
cld
sahf
sub
nop
mov
sahf
push
xchg
popa
std
mov
out
fsub
mov
and
iret
sub
dec
out
stos
aad
jo
sarb
sbb
daa
repnz
nop
sbb
stos
out
aad
xchg
mov
pop
inc
leave
ret
or
ret
cmpsb
scas
mov
dec
cmp
mov
fidivrs
mov
bound
loopne
jns
outsl
jge
add
push
inc
mov
hlt
mov
xor
mov
inc
xor
ljmp
orl
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
ret
xlat
jns
jl
mov
in
add
shll
fldcw
mov
inc
mov
add
and
and
xchg
xchg
sub
cltd
mov
xor
outsb
mov
xorb
faddp
inc
push
out
xchg
cmp
lcall
cmc
dec
push
cld
fidivrs
leave
roll
aad
aam
mov
nop
mulb
cltd
in
or
aaa
sbb
pop
cwtl
and
mov
jnp
into
repz
daa
pusha
out
inc
xchg
add
jle
ds
int
pop
xchg
pop
inc
repnz
out
jmp
mov
push
subl
adc
sahf
xchg
pop
dec
negl
xchg
mov
push
scas
das
pop
jp
or
leave
rcr
cld
jge
push
push
fs
jge
pop
push
fcmovnu
jae
fidivrs
fisttpl
inc
pop
sahf
pop
dec
lret
xchg
mov
test
fadds
loope
pop
test
sbb
in
adc
es
imul
jmp
push
cmp
fstps
fldenv
shll
sbb
lahf
shr
in
iret
sbb
mov
mov
cld
and
mov
icebp
xchg
adc
sarb
inc
adc
sbb
adc
push
outsb
cmc
push
psrlw
test
and
jmp
push
shr
dec
cltd
adcb
sub
push
imull
mov
bound
daa
iret
arpl
jg
imul
pop
cmpsl
sbb
inc
fsts
adc
pop
or
mov
scas
mov
sbb
into
sbb
clc
loope
mov
push
sti
ret
push
mov
aas
and
xor
nop
sti
stos
in
jg
push
mov
fwait
xchg
mov
popf
mov
ficoml
shll
push
adc
lock
mov
scas
scas
test
pushf
sahf
repnz
inc
fldcw
jb
mov
in
pop
lret
out
mov
mov
inc
mov
pop
and
or
sbbl
xchg
xor
mov
outsb
ret
adc
ss
lret
push
lock
lahf
or
sub
stc
cmp
dec
cmp
or
jnp
iret
or
in
adc
mov
cs
jmp
sbb
xchg
pop
orb
inc
ja
mov
dec
movsb
cmp
xchg
imul
adc
imul
je
pop
push
les
cwtl
sbb
cmp
dec
sahf
mov
stos
push
pop
outsl
xchg
xchg
sub
mov
push
mov
fldenv
pop
push
push
mov
fwait
pushf
in
loope
notl
mov
and
xor
cs
pop
stos
xor
lret
adc
cmp
jge
jp
repz
shlb
andl
push
cmp
xor
push
or
insl
sub
and
sahf
xor
jo
movsl
cld
mov
cmovbe
sub
sbb
dec
lea
cmp
xor
rorl
hlt
pop
jl
jmp
sbb
outsb
icebp
stos
enter
mov
cmp
ret
or
adc
or
idiv
dec
daa
xor
xchg
jnp
adc
fadds
add
add
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
jmp
inc
scas
sub
iret
jl
xlat
jns
jl
push
out
scas
xor
leave
mov
call
inc
lea
pop
add
pop
jae
mov
xchg
pop
adc
orb
stos
sub
push
and
cs
adc
popa
rcll
out
dec
sbb
in
pop
mov
dec
mov
rcrb
xchg
xchg
lret
sub
in
cmpsb
push
lret
mov
or
dec
and
mov
insb
gs
lahf
mov
mov
pop
mov
mov
sbb
scas
enter
pop
data16
jbe
or
pop
add
rorb
push
xchg
xchg
push
addb
add
test
lds
adcb
and
inc
lds
and
pop
mov
shlb
sbb
and
push
xor
xor
fisttpl
imul
adc
jns
gs
jno
sbb
leave
ds
jnp
leave
in
pop
std
shl
push
xchg
jne
clc
rol
inc
xchg
jmp
mov
and
hlt
add
addr16
jo
aad
arpl
pop
icebp
hlt
push
or
mov
rclb
mov
iret
fcomip
movl
mov
mul
sti
jno
or
adc
movsl
or
fdivrs
jp
dec
cmp
ret
sub
xchg
mov
out
push
sub
jne
xchg
pusha
cmpl
sahf
jns
stc
push
mov
ljmp
jae
fwait
adc
lods
jmp
fisttps
ss
dec
std
cmp
xor
sti
xor
movsb
test
inc
insl
fucomip
xor
or
sti
testl
movsl
mov
out
ss
jae,pn
out
aad
out
stc
mov
mov
sub
popa
xchg
xchg
inc
cmp
mov
add
insl
dec
cmp
loop
add
mov
mov
xchg
xchg
je
jbe
cmpsb
add
or
push
data16
loop
mov
jge
ret
mov
or
ds
mov
inc
dec
cmpsb
dec
jns
icebp
push
fsubs
push
out
sub
bound
adc
sbb
mov
test
sarl
lcall
sbb
scas
je
int
clc
push
pop
in
push
cmp
lret
lods
add
pop
ss
xchg
rorl
scas
and
jmp
cli
sbb
inc
sbb
sti
enter
dec
push
jl
pop
cmc
cmp
sti
out
adc
sub
mov
push
inc
ud1
push
hlt
addr16
mov
repnz
or
push
xchg
js
jge
loopne
clc
pop
dec
outsb
repnz
mov
sbb
mov
stos
add
push
mov
stc
lahf
push
jo
push
jp
in
data16
cmp
cmp
mov
popa
jb
repz
dec
icebp
cmp
adc
xchg
add
xchg
loopne
push
sub
pop
arpl
jle
testb
out
setg
pop
aaa
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
xchg
push
fistpll
enter
jns
jl
jp
addr16
or
mov
inc
jmp
mov
ret
dec
mov
shlb
loope
push
jb
and
inc
mov
pusha
leave
jl
cwtl
int
icebp
nop
cmp
sub
pop
lret
and
and
out
inc
sub
jl
inc
ljmp
mov
or
cmpsb
push
sti
mov
adc
sub
inc
std
mov
movsb
sbb
shl
dec
xor
sub
sub
popl
add
sub
sbb
jg
sub
fcmove
and
mov
cmp
jl
out
mov
ficompl
arpl
data16
iret
daa
mov
jp
scas
add
pop
mov
fwait
stos
lret
pop
cwtl
mov
imulb
lods
into
xlat
dec
js
sub
pop
aas
imul
mov
and
ret
jge
xchg
inc
jmp
xchg
pmaddwd
mov
and
adc
mov
cs
das
loop
cltd
aad
jnp
inc
loope
mov
push
inc
mulb
out
push
int3
jg
push
fwait
sub
fwait
scas
hlt
loope
add
jp
cltd
jg
insb
cmp
push
jae
lret
loop
lods
ljmp
clc
mov
outsb
fiaddl
xchg
jecxz
and
or
mov
add
in
sub
lea
jmp
dec
and
int
sub
rcrl
xor
call
inc
stc
mov
mov
push
sbbl
adc
movsl
lock
imul
rcr
add
in
sahf
lahf
xlat
gs
xchg
out
xchg
cmpsb
inc
dec
orl
frstor
out
xor
xchg
xorl
mov
xlat
mov
cli
push
xchg
xchg
outsb
in
sub
xchg
dec
jae
stos
pop
jbe
fistpl
cmp
xchg
dec
and
xchg
mov
dec
inc
xor
add
fisubrs
in
pop
jge
xor
stc
call
xor
sub
insb
addr16
lods
in
out
pop
mov
mov
sahf
xor
in
fisubl
jbe
fs
popa
cmpsb
flds
mov
rcrl
pop
pop
xchg
icebp
jbe
sbb
push
push
cmp
and
icebp
xchg
mov
push
adc
dec
or
fwait
ljmp
xchg
roll
loopne
stos
loop
bnd
or
pop
rol
sub
stos
add
sti
popa
or
mov
and
or
mov
cs
ret
sbb
pop
sbb
push
lcall
sahf
dec
mov
rolb
xor
loop
addr16
fnstsw
add
mov
negb
jb
adc
mov
les
int
pushf
xchg
clc
popa
orl
xor
xchg
or
mov
in
xor
pop
sbb
fldenv
xlat
pop
cmc
shll
jge
pop
jecxz
lret
pop
cmpl
pushf
xchg
cli
inc
push
ret
adc
test
es
in
add
jge
jbe
aaa
movsb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
repz
call
xlat
jns
jl
ja
mov
fsts
cmp
scas
outsl
and
in
add
dec
scas
adc
add
inc
xchg
sub
cli
push
dec
repnz
lock
stos
xchg
inc
mov
inc
mov
jnp
sbb
inc
outsl
dec
shl
dec
xor
push
push
and
jl
mov
push
js
ud1
dec
js
lcall
fbstp
loope
dec
jle
jmp
outsb
int3
movsb
mov
jb
cltd
dec
and
sub
sbb
jbe
arpl
and
push
pushf
adc
add
daa
cwtl
lret
and
cmpsl
pop
pop
pusha
ja
lock
mov
inc
addr16
outsb
mov
mov
mov
jle
popa
cmpsl
repz
inc
or
cwtl
movsbl
cld
inc
push
cmc
lock
fwait
inc
test
or
dec
inc
xor
fs
mov
add
out
repz
mov
jns
pop
push
out
xchg
push
jl
fisttpl
adc
mov
inc
int3
sahf
mov
xchg
adc
and
test
jae
outsb
loopne
popf
or
xor
shl
ljmp
sbb
sti
aad
mov
pop
add
pop
mov
xor
jb
push
popa
cmc
sub
dec
dec
outsb
sbb
sub
mov
mov
push
sar
xchg
pop
orb
rcll
es
inc
push
or
and
push
jno
or
in
or
arpl
das
test
lcall
or
xchg
mov
dec
adc
xlat
bound
into
les
xor
outsb
xchg
xchg
jmp
jl
fidivrl
addps
addr16
adcb
pop
fistl
sub
mov
sbb
rcr
in
mov
xor
cmp
hlt
push
mov
popl
das
inc
out
sub
movsl
adc
inc
mov
movsb
jae
ljmp
ss
loop
push
push
pop
and
mov
imul
mov
mov
jecxz
xor
dec
jmp
mov
testl
xchg
mov
push
enter
call
pusha
push
and
adc
push
xchg
mov
outsl
cmpl
pop
fidivs
xchg
push
jne
loop
adc
loop
xlat
repnz
and
ffreep
aas
jb
aaa
inc
data16
xor
out
dec
mov
adc
and
push
sar
popa
lahf
mul
outsb
push
pop
fidivrl
daa
lea
jl
and
stos
dec
out
dec
adc
ja
ret
sbb
fisttpll
sarb
push
stc
sub
push
mov
mov
sbb
pop
mov
sbb
js
out
adc
mov
or
jl
mov
pop
mov
leave
inc
add
gs
push
cld
dec
aaa
inc
sbb
inc
mov
jmp
lret
dec
jne
mov
aad
aaa
faddl
nop
hlt
jp
aam
mov
imul
mov
mov
cmp
jmp
cwtl
mov
mov
or
iret
inc
xchg
adc
jl
jns
jl
repnz
mov
sbb
das
imul
out
lahf
mov
pop
testb
iret
mov
pop
jnp
add
cmp
mov
icebp
inc
cmpsl
stos
aam
xor
push
sahf
xor
mov
mov
xor
js
pop
subl
nop
dec
jne
fdivrl
xchg
sarb
xchg
fwait
jg
jnp
cmp
mov
and
cmp
add
add
push
mov
add
loop
aam
fwait
pushf
mov
dec
push
dec
test
inc
adc
fucomip
lock
adc
xchg
mov
es
pop
push
cltd
fsubrs
dec
dec
push
jecxz
and
and
xlat
fstl
pop
into
xchg
outsl
hlt
mov
sbb
pop
sti
data16
adc
rclb
mov
call
lods
xchg
enter
flds
int
fbstp
shrl
jge
std
fwait
cmp
nop
rcrb
sbb
sbb
inc
lea
mov
es
and
mov
out
push
out
push
into
mov
lret
outsb
dec
mov
inc
push
pusha
mov
pop
pop
sbbb
daa
adc
xchg
outsb
jmp
fnstcw
cld
dec
mov
iret
mov
inc
pop
rcrb
stos
imul
mov
cwtl
push
cld
test
xchg
add
xchg
jp
nop
test
lahf
inc
xor
inc
push
in
repz
xchg
pop
adc
cmpsl
push
xchg
add
dec
lahf
gs
xchg
xchg
iret
and
fnstsw
lret
fsubl
push
add
mov
cmpsb
aas
cmp
jg
lods
test
inc
data16
xchg
mov
testl
jecxz
xchg
in
jle
ucomiss
loop
add
sub
xor
xor
jns
js
xor
pop
add
lcall
jge
lret
hlt
testb
jne
rorb
mov
xorl
mov
mov
xchg
jae
sub
sbb
stos
shll
popa
mov
repnz
jne
sahf
push
pop
adc
pop
cli
mov
xor
inc
mov
xor
or
testb
mov
push
and
dec
aas
xor
mov
adc
add
sbb
lds
fildll
cmc
aam
je
movsl
dec
sbb
test
pop
mov
pusha
std
push
test
rcrb
adc
add
dec
and
jbe
scas
sub
inc
movb
popa
mov
loop
out
fldenv
and
ret
sahf
cmp
lock
fistl
jg
outsb
aad
pop
dec
mov
xchg
nop
in
dec
jmp
stc
lods
mov
pusha
xchg
mov
aaa
mov
mov
sub
cmp
push
fcmovu
dec
dec
dec
jnp
lods
jo
incl
fwait
push
xorb
mov
lahf
pop
in
pop
inc
xchg
inc
xchg
inc
push
cwtl
and
push
bound
sub
xor
hlt
sub
mov
mov
inc
pop
outsb
xor
aas
je
mov
orl
jmp
pop
jns
fs
add
push
sbb
out
in
fstpl
jl
xlat
jns
jl
mov
inc
fucomp
lds
sahf
ds
and
mov
add
lods
popf
inc
ret
add
push
jae
xor
mov
addr16
mov
jno
lods
notb
and
mov
mov
adc
pusha
sarw
cmp
lahf
mov
mov
arpl
stc
xor
dec
mov
mov
mov
test
cld
inc
mov
aaa
call
sub
lock
or
fsubp
cld
in
je
mov
cmp
stc
xchg
js
xlat
or
outsb
dec
mov
mov
int
and
xor
jl
cmp
pop
hlt
add
pushf
test
ja
xor
popf
sti
cltd
rcrb
inc
inc
jns
or
je
mov
daa
dec
cmp
add
and
dec
dec
mov
je
xlat
push
pop
mov
repz
pop
mov
aam
dec
daa
stos
sbb
in
add
pushf
push
sbb
mov
cmp
and
es
add
add
mov
stos
ss
or
outsl
in
mov
in
cs
pop
popf
jae
xchg
or
add
lret
pushf
stos
data16
jp
jmp
sbb
dec
fisubs
nop
repnz
pusha
and
mov
out
jnp
jbe
push
es
cmp
mov
jbe
imul
lds
sub
les
inc
cmp
dec
inc
in
fidivrs
movsl
xor
xchg
in
mov
arpl
aaa
jl
xor
aad
iret
lods
inc
add
arpl
push
mov
xor
fsubr
pop
jns
pop
mov
inc
push
dec
outsl
nop
mov
add
jbe
lods
sub
je
es
jne
mov
arpl
cmp
call
mov
fucomp
fistpll
push
mov
xor
adc
aad
repz
ja
inc
scas
clc
cld
shrl
jne
sub
jnp
dec
jns
sti
mov
das
scas
push
filds
push
fcoml
or
adc
pop
inc
rorb
xchg
push
popf
mov
ret
out
inc
adc
and
mov
outsl
sahf
mov
or
fs
lret
dec
push
push
or
je
inc
adc
in
push
push
fisttpll
addr16
and
jae
fsubrp
popf
fld
cltd
loope
jns
mov
les
mov
adc
push
lock
outsl
scas
xor
sti
mov
loop
pusha
pop
push
adc
jns
jge
lret
ja
cmp
fisttpl
add
push
repz
into
fstpl
adcb
repnz
adc
sub
nop
or
sub
xlat
sub
lahf
repnz
push
test
stos
inc
add
jne
rcrb
xor
add
cmpsl
lock
adc
adc
mov
xchg
enter
xor
and
pop
push
xor
and
dec
cmpsl
pop
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
test
fidivrs
jns
jl
dec
sub
stos
sub
je
fldcw
mov
xchg
lea
imul
std
and
imul
ljmp
outsl
sti
xor
xchg
xor
popf
mov
jg
int3
push
inc
popl
idivl
sbb
sub
movsl
cmp
test
call
fst
inc
fimull
mov
rcrb
aaa
inc
push
mov
add
cmp
nop
pop
or
cli
sub
imul
dec
cmp
jmp
test
pop
push
xor
loopne
mov
pop
popa
loope
xor
sahf
and
mov
dec
fildl
dec
cwtl
std
dec
test
shlb
ss
mov
imul
xchg
jne
xchg
into
inc
and
not
jae
xchg
sbb
call
xchg
mov
fistl
adc
cltd
and
mov
test
in
cmpsl
adc
mov
cwtl
mov
jnp
xor
stos
cmpsb
jnp
ljmp
insl
clc
popa
je
or
sarb
jp
add
sub
mov
enter
cmc
add
jns
mull
mov
dec
cltd
and
mov
dec
mov
js
sbb
clc
sub
out
mov
and
adc
dec
lods
ja
inc
mov
adc
int3
inc
push
mov
gs
pop
and
sbb
test
mov
push
push
and
fcmovne
cmp
loopne
push
das
into
sub
mulb
lret
xor
dec
dec
add
and
out
pop
add
sbbl
int3
mov
test
adc
enter
or
cmc
inc
xchg
push
mov
pop
sbb
push
jmp
leave
imul
add
or
xchg
and
or
or
mov
cs
fldcw
cmp
mov
mov
cs
pop
pop
mov
dec
inc
jno
divb
lret
xor
ds
push
dec
scas
jg
lods
adc
mov
test
cmp
pop
rcpps
jne
icebp
xlat
xlat
xchg
mov
adc
pop
mov
fwait
xchg
push
mov
mov
insb
cmp
inc
ficomps
pop
push
xchg
data16
mov
xchg
mov
inc
and
mov
scas
adc
mov
lret
add
mov
mov
pop
jg
mov
addr16
int
loop
js
mov
outsb
xor
or
sub
jmp
test
test
xor
dec
iret
outsb
push
jle
lcall
and
pop
adc
mov
pop
lock
jnp
push
int3
xchg
mov
mov
cwtl
ss
jne
add
test
out
push
mov
sub
popf
jl
and
or
sub
xor
adc
sub
push
pop
sub
rcll
aam
push
cmp
jl
fs
addr16
pop
and
sbb
pop
inc
mov
xchg
mov
xor
addl
push
es
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
fs
xchg
fstpt
jns
jl
bound
adc
test
mov
xor
aad
pop
je
insb
xor
aad
rcll
sub
and
fildl
rol
xchg
enter
and
fs
adc
cli
mov
push
out
and
loope
sub
test
sub
push
jne
push
cli
push
gs
pop
sbb
cmp
or
ljmp
int3
rolb
dec
xchg
push
jp
fsubr
sub
add
cmp
add
decl
test
cwtl
mov
cmp
xor
push
aas
dec
jl
xchg
push
xchg
dec
inc
or
push
fadds
add
in
and
stos
scas
bound
sbb
lret
xor
scas
push
add
push
clc
iret
lret
int3
int3
cld
adc
scas
mulb
add
sbb
xor
xor
lcall
cbtw
outsb
inc
aad
jae
mov
sub
out
pop
outsl
adc
and
sbb
inc
jge
lret
ss
imull
cmpsl
mov
adc
testb
cmpsb
sahf
into
shll
dec
xchg
popf
or
int3
jno
rcll
add
mov
ja
mov
push
int
sbb
and
dec
aas
leave
jg
inc
xor
stos
pop
mov
mov
div
fwait
mov
push
inc
cmp
xchg
imul
xor
push
xchg
and
add
jo
es
or
dec
mov
dec
out
lods
mov
mov
push
ret
add
jae
mov
insb
fiadds
mov
cmpsl
sbb
xchg
pop
jg
pop
jae
sub
jmp
push
rcrb
sub
and
cmp
mov
mov
cmp
cmc
xchg
xchg
fistpl
adc
fists
out
bnd
adc
and
mov
sahf
fwait
dec
daa
push
jo
cwtl
dec
xchg
sub
inc
outsb
adc
xor
or
and
sbb
mov
and
and
cltd
xchg
jns
ss
cmc
xchg
xor
popa
xchg
mov
fldcw
idivl
sarb
jecxz
pop
dec
ds
push
mov
pusha
xchg
subl
pop
mov
inc
std
add
rolb
in
aaa
loop
pop
mov
adc
add
mov
sub
xor
in
rcl
dec
mov
push
negb
xchg
call
push
xchg
or
or
and
sub
adc
andl
cmp
cli
jbe
inc
rolb
clc
sahf
and
cmp
adc
lahf
lock
test
xchg
cli
aam
mov
dec
bound
pop
shrb
and
pop
hlt
jo
popf
or
xor
or
cmpsl
int
inc
jl
scas
cmp
xor
call
or
leave
lea
jg
sbb
scas
sbb
add
fcomps
cmc
dec
fimuls
pop
add
into
mov
adc
cmp
cmp
popf
xor
shr
or
sahf
adc
sbb
mov
mov
mov
xor
jmp
inc
pusha
sub
sub
int
jae
insb
in
jl
jns
jl
dec
cmp
aas
jne
mov
push
fwait
gs
pop
insl
xlat
js
pop
push
cmp
lcall
imul
dec
cmp
out
jmp
cmpsb
mov
adc
xchg
add
jne
and
aam
sbbl
fidivl
jae
xor
xchg
sarb
fsubl
aam
or
andl
sbb
idivl
sub
lods
sarb
sbb
xor
or
mov
push
movsl
xchg
jmp
mov
call
out
in
mov
lret
sub
insb
in
add
jb
es
push
inc
lods
imull
clc
in
cmpsl
lret
cmp
andb
frstor
movsb
mov
js
pop
cmp
aaa
fldt
testl
mov
fsubrs
mov
out
xor
in
scas
mov
xchg
cmp
test
mov
call
dec
pop
mov
test
mov
lea
cmp
in
xchg
std
loope
mov
popf
out
andl
clc
dec
dec
test
aam
xchg
fdivrs
lods
mov
or
push
sub
xchg
loopne
lcall
lods
xor
pop
mov
sub
dec
fisttps
jp
or
clc
outsb
inc
stos
inc
aaa
cmp
mov
lahf
aam
mov
jle
adc
jo
repz
andl
leave
sbb
in
sahf
sbb
popa
mov
xorl
push
mov
icebp
les
xlat
and
imul
and
pxor
pop
mov
cmpsl
fs
adc
or
dec
dec
mov
push
sub
out
cmp
aam
and
jno
les
icebp
cmp
sbbl
dec
push
std
xchg
jle
add
jnp
popf
es
cmc
scas
pop
loope
inc
loope
fstl
cmpsl
sub
xchg
or
sbb
sub
popa
or
cld
movsl
pop
inc
dec
inc
push
popf
push
adc
loope
dec
popf
fbstp
or
and
fidivrs
push
std
and
xor
loope
push
arpl
push
iret
mov
rcrb
mov
movsl
pop
sbb
sbb
clc
pop
std
aaa
int
and
adc
out
pop
fs
fsubp
addr16
jne
xor
adc
decb
test
shlb
xor
dec
outsl
xchg
xchg
in
sbb
sti
pop
or
pop
into
xchg
dec
sahf
mov
mov
insb
lods
mov
dec
cmp
pop
or
lods
scas
xor
cmp
sub
jg
jno
cmp
adcl
int3
out
leave
les
jns
push
xchg
mov
mov
pop
in
mov
sahf
sub
pop
jno
std
ret
ds
and
sbb
lret
sbb
add
pop
aam
mov
nop
adc
push
test
popf
cltd
nop
xchg
mov
inc
pop
into
std
or
mov
adc
cwtl
xor
push
ja
pop
in
dec
shlb
xlat
sub
jmp
or
jb
mov
push
sbb
push
loopne
jl
jns
jl
dec
sub
cmp
mov
mov
movsl
stos
pop
daa
fs
mov
mov
aad
das
inc
dec
scas
mov
push
insb
jae
sbb
ja
movsb
mov
jle
aas
jge
push
sahf
mov
add
in
movsl
push
xchg
out
mov
int3
pop
inc
out
in
jle
leave
push
lahf
pop
sub
or
les
xor
out
add
mov
or
or
push
ss
rcll
inc
mov
cmpsl
ret
sub
push
push
cmp
mov
inc
lret
mov
sub
ja
xchg
inc
adc
fbld
loop
or
mov
push
jge
cmp
mov
dec
mov
push
inc
daa
ret
sbb
adc
nop
mov
inc
inc
pusha
add
pop
pusha
sti
push
int3
jle
lds
push
daa
std
shlb
notl
cmp
add
das
lret
sub
push
enter
stos
fyl2xp1
test
mov
mov
adc
in
out
inc
xchg
push
pusha
pop
sti
mov
add
daa
lock
fidivrs
adc
sub
lcall
pop
int
mov
add
movq
popa
jns
movsl
sbb
xchg
mov
fsts
sarb
std
cmp
leave
movb
fwait
inc
push
je
popa
int
pop
and
or
push
mov
xchg
lock
stc
mov
cli
jbe
and
mov
out
insl
mov
sti
bswap
cmp
mov
xlat
adc
movsb
pushw
inc
out
jle
push
cs
jmp
jmp
call
popa
inc
jns
dec
pop
mov
fs
sbb
xor
mov
in
inc
inc
inc
adc
lds
xchg
mov
sbb
mov
or
outsl
bound
jnp
xchg
pop
out
cmpsb
testb
movsl
xchg
or
and
test
ret
inc
jl
sbb
jmp
cmp
cmp
cltd
push
hlt
test
je
or
jge
fidivs
inc
imul
sub
data16
or
cltd
push
mul
adc
push
sbbb
pop
sbb
fsts
aas
add
nop
fiaddl
pusha
outsl
jmp
mov
adc
mov
data16
jae
test
sub
mov
test
jnp
mov
fs
out
repz
push
ss
jmp
das
pop
push
out
lock
mov
mov
pop
xchg
mov
pusha
movsl
jbe
in
enter
inc
mov
adc
xchg
aad
mov
ret
stc
mov
mov
sbb
sti
sar
pushf
push
hlt
xor
jne
mov
lahf
mov
sbb
into
push
sub
into
xchg
adc
test
jecxz
iret
jne
add
inc
cmp
std
push
pop
repnz
fmull
sbb
das
inc
jbe
push
or
push
repnz
push
or
stc
jmp
inc
test
ret
or
xor
das
pop
adc
stos
les
xor
outsb
adc
push
pop
incb
inc
in
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
hlt
lret
sahf
in
jl
adc
and
sub
inc
into
stc
mov
clc
mov
adc
in
mov
cmp
stos
adc
jb
adc
inc
jae
cmp
jle
inc
ljmp
cwtl
sbb
sub
aad
jb
bound
jmp
and
mov
bound
add
jns
inc
xor
int3
stc
jno
wrmsr
adc
leave
out
orl
stos
ret
and
mov
stos
adc
aas
pusha
push
cmovnp
inc
dec
test
xchg
fldcw
mov
adc
daa
iret
adc
mov
aam
jle
jns
push
lcall
mov
arpl
mov
sub
fsincos
outsb
and
fcomip
inc
ret
call
jb
pop
or
js
nop
cmp
adc
adcb
loope
add
rcr
adc
push
mov
and
sbb
or
movsb
inc
jge
jno
xchg
pop
xor
pop
adc
or
jo
or
pop
sub
leave
pop
fs
lret
flds
mov
orl
push
adcl
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
pop
add
jl
jg
jl
mov
movb
mov
sub
data16
mov
and
sbb
into
fistpll
xorl
pop
sub
push
addb
push
mov
xchg
cmp
push
pop
popf
loopne
add
adc
fcmovne
add
mov
add
movsb
mov
cs
nop
scas
add
cmp
fiadds
ss
jg
movl
add
cmc
and
imul
adc
sub
sahf
dec
inc
pop
popa
jmp
sub
inc
jg
pop
in
inc
in
loope
stc
xchg
in
sahf
jbe
ja
or
sbb
xchg
jg
scas
in
std
mov
test
in
mov
mov
lret
pop
cmp
xchg
lret
sub
adc
lcall
mov
adc
and
pop
or
outsb
mov
aaa
sub
and
sbb
in
mov
fcmovb
in
in
insl
cmp
movl
jne
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
aad
adc
adc
ds
xor
fwait
lcall
fistpl
add
xor
iret
lret
mov
inc
pusha
jnp
rolb
sbb
aas
cld
sbb
and
pop
mov
cwtl
sub
pop
xor
call
int
cmc
lea
xor
jb
push
insb
bound
test
mov
dec
jno
fwait
mov
rcr
ljmp
mov
mov
mov
mov
jbe
sub
cmp
stos
jbe
mov
hlt
sbb
js
jg
or
loopne
dec
lcall
out
pop
repnz
and
xor
jecxz
adc
adc
in
lock
adc
rclb
ds
clc
loope
cltd
test
pop
inc
mov
pop
int3
inc
mov
sub
out
je
cli
jp
ja
js
push
cmp
mov
add
int
lds
push
fwait
inc
cmpsb
xchg
sub
inc
bound
cmpsl
dec
adc
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
jl
enter
xchg
adc
aaa
mov
cmc
aad
dec
in
cmpsl
sub
inc
in
dec
ss
jb
repz
fsubp
cmp
rolb
les
xor
out
mov
mov
icebp
lds
aas
out
movsl
repz
sub
fdivrs
xlat
or
sbb
add
pusha
adc
out
mov
sbb
adc
pop
sarl
out
gs
jle
inc
xchg
jmp
pop
lret
or
and
mov
or
cmp
push
je
ret
jae
pop
daa
cmp
push
fimuls
fadd
leave
test
imul
imul
in
and
push
push
pop
sbb
jns
mov
xchg
sub
lods
into
jecxz
adc
pop
dec
push
push
mov
into
cs
jb
pop
mov
in
loopne
xor
cmp
rorl
int
jb
aaa
ss
lret
scas
mov
fistpl
cmpsl
and
ja
frstor
in
movsb
xlat
int3
ftst
out
mov
jle
mov
mov
ljmp
out
lahf
scas
sbb
pop
pop
or
pop
push
mov
bound
mov
sub
jle
loop
mov
sbb
and
in
ss
push
dec
jae
mov
fisubl
pop
lret
pop
pop
lds
repnz
pop
lea
jno
scas
rclb
cmp
mov
jo
cmc
leave
dec
and
roll
jb
mov
mov
dec
lcall
movb
pop
cs
jmp
mov
enter
push
das
nop
in
in
fisttpll
std
sbb
sti
loop
and
or
jmp
ja
imul
ror
repz
mov
sub
mov
mov
fiaddl
ret
or
xor
xchg
ret
aam
test
push
data16
and
in
enter
imul
push
test
notb
xchg
lods
leave
rorb
cmpsb
pop
pop
push
cmp
inc
into
cmpsl
clc
stos
es
das
inc
cmp
push
ficoms
outsb
xor
fcmovnb
cwtl
jno
push
mov
push
cli
xlat
call
lcall
test
repz
ljmp
dec
or
xor
outsb
cmp
leave
in
pop
sbb
inc
stos
xchg
addr16
dec
fnop
mov
mov
mov
push
gs
jmp
sbb
cmp
lea
cmp
add
push
roll
mov
bound
push
out
sti
loop
jb
mov
loop
les
scas
mov
and
adc
les
xchg
pusha
and
pop
daa
ja
dec
dec
push
mov
sub
sub
loope
enter
sub
cmpsb
cld
icebp
adc
hlt
pop
inc
or
xor
xor
lea
or
and
outsl
mov
arpl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
sbbb
js
ljmp
jb
adc
cs
push
ja
sub
mov
push
add
push
lods
jmp
jae
and
cmp
dec
jmp
sub
pop
aad
inc
fimuls
movsl
rol
dec
pop
stc
repnz
out
std
cmp
daa
sbb
shlb
mov
add
lret
test
jns
or
icebp
aad
pop
rol
or
dec
lds
ret
lds
push
daa
push
mov
add
mov
mov
scas
mov
outsl
add
mov
nop
push
add
test
scas
and
out
lahf
fdiv
cwtl
repz
outsb
mov
idiv
add
xchg
lock
mov
xchg
add
mov
pushf
negb
shrb
or
or
mov
fstps
cmpsl
xchg
inc
mulb
jo
imull
pop
adc
cs
lret
in
dec
push
mov
mov
sahf
mov
xor
push
or
sub
outsl
data16
in
bound
pop
inc
xchg
jae
push
sahf
mov
test
je
or
fisttps
iret
dec
std
fidivrs
clc
xchg
repz
hlt
aad
fwait
pop
add
and
in
xchg
movsl
mov
sti
mov
or
push
scas
cmpb
jbe
xor
lods
enter
in
fwait
insl
jecxz
test
xchg
jne
ret
sbb
xor
jno
adc
clc
inc
cmp
stos
leave
lahf
or
out
and
mov
sbb
int3
jle
dec
fdivrl
rcll
or
lret
or
add
adc
jp
flds
fwait
mov
stc
or
cld
rcrb
insl
sub
push
stc
pop
sarl
div
xor
inc
fsubp
out
and
push
lahf
insb
vpsubw
mov
movb
pop
pop
inc
add
dec
jbe
mov
jno
xor
cwtl
xchg
mov
das
dec
xchg
mov
fwait
pop
mov
adc
jno
fsubr
cwtl
cmpsb
shlb
inc
lret
or
mov
cmpsl
xchg
cli
mov
les
pop
mov
sub
addr16
jg,pt
ds
push
stos
mov
out
ret
mov
mov
es
or
and
or
iret
push
jp
cmp
pop
adc
xchg
jb
push
cs
push
sbb
stos
push
rcrl
hlt
loopne
mov
push
flds
fcomps
sbb
clc
repnz
mov
cwtl
adc
lods
fidivs
inc
push
ficoms
je
rcrl
xchg
mov
xchg
inc
mov
je
sbb
or
mov
add
pushf
mov
pop
lock
sbb
gs
repnz
push
cmp
or
sbb
xchg
js
stos
out
inc
jne
dec
sbb
in
xchg
adc
in
jo
push
das
push
lret
jmp
or
cmpsl
push
jno
lahf
xchg
movsl
scas
inc
imul
fimull
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
cltd
nop
mov
jl
lret
jl
xor
jbe
dec
cs
cmp
cmpsl
pop
adc
add
jecxz
pop
xchg
fwait
sbb
sub
and
cmp
into
cmp
sub
inc
outsl
orl
loopne
out
nop
sbb
jb
xor
sbb
daa
inc
fadd
adc
dec
ds
lods
ret
cmp
in
negl
and
push
lea
and
andl
cwtl
or
orb
xor
xchg
xchg
xchg
cmp
push
xor
test
ret
sub
ds
xchg
inc
stos
sub
in
addr16
mov
push
dec
pop
imul
cltd
inc
movsl
fistps
ds
jmp
jb
or
imul
subw
mov
cltd
popa
mov
xchg
lcall
lahf
in
lods
shrb
mov
cmpsb
adc
or
xor
int3
mov
mov
imul
adc
lahf
mov
adcb
mov
mov
fcomp
jo
int
aam
das
push
xor
mov
jg
mov
clc
outsl
and
and
mov
cmp
xlat
add
mov
jmp
aaa
fnstenv
ljmp
add
dec
sub
xchg
loope
mov
into
cmp
push
aam
mov
test
xor
iret
push
xchg
or
nop
dec
jne
std
jbe
lret
xor
jl
push
dec
xchg
mov
inc
adc
lock
stc
dec
decl
mov
cmp
pop
cmc
test
aam
fldcw
jbe
cld
sbb
fistl
inc
sti
mov
js
jl
fstl
nop
add
icebp
mov
ss
fnstenv
jmp
push
and
mov
scas
sahf
xor
mov
pusha
or
stos
mov
sbb
mov
movsl
pop
inc
adc
mov
test
dec
mov
loop
lcall
in
dec
adc
pop
push
push
jp
push
mov
icebp
clc
inc
and
or
and
xchg
mov
notb
adcb
rep
dec
in
lcall
sahf
pop
add
jno
cmp
into
loope
and
xrelease
cmp
movsl
push
cmpsb
add
xchg
lahf
into
add
xor
add
jmp
push
sbb
shrb
notb
xor
fbstp
fwait
inc
negb
adc
movsl
pop
lret
push
xor
cmp
adc
stos
daa
aas
outsb
mov
lret
mov
out
jl
fcomps
mov
mov
fs
nop
dec
xlat
stos
sbb
dec
jle
nop
or
pop
sub
out
daa
ret
add
jge
fdivr
cmc
dec
jl
popf
shl
inc
dec
jbe
jns
sbb
adc
adc
out
ljmp
mov
mov
and
pop
add
dec
adc
lods
push
sbb
cmp
scas
xlat
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
outsb
cmp
cmpsl
addr16
lret
jl
cmc
les
inc
mov
clc
pop
dec
push
mov
test
xchg
fs
inc
lret
popf
mov
xorb
ret
shll
mov
xor
mov
enter
enter
and
cltd
jbe
cmc
inc
lret
loope
sbb
xor
dec
movsl
pop
or
mov
push
sub
pusha
inc
loopne
cli
add
or
shl
or
aaa
cli
dec
adc
cmp
and
repz
hlt
xor
lahf
bound
stos
cli
imul
push
push
je
jne
shlb
mov
scas
mov
cmp
test
pop
rolb
jbe
hlt
dec
mov
ror
shrl
add
pushf
jl
mov
adc
std
add
adc
or
xchg
pop
add
sbb
or
xor
iret
jecxz
jae
ss
hlt
lcall
mov
dec
fisttpll
pop
lcall
mov
add
jmp
movsb
outsb
cltd
xchg
addr16
xchg
lcall
scas
mov
jge
inc
pop
cmpsl
mov
or
pop
xor
pop
ret
mov
fstps
mov
push
std
jne
lock
loopne
mov
dec
ret
mov
lea
mov
mov
stos
fistps
sub
imul
lock
fdiv
jnp
aaa
cmpsb
dec
jecxz
push
inc
cmpsl
push
stc
loopne
dec
add
or
and
mov
ret
das
xchg
mov
dec
pop
rcrb
cwtl
jno
stos
mov
jecxz
pushf
inc
and
orb
mov
std
aas
dec
jbe
iret
mov
push
sub
sbb
xchg
fisttpl
xchg
sahf
push
cmp
nop
lahf
add
jmp
das
mov
leave
mov
mov
mov
popa
mov
sub
nop
cld
sub
mov
int
fwait
push
push
push
sub
inc
nop
inc
sarb
or
cmp
clc
call
arpl
rol
mov
pop
push
arpl
push
mov
cli
mov
int3
lea
jge
mov
sbb
xor
fcoml
outsl
inc
popa
inc
out
xchg
lods
cli
add
mov
or
mov
iret
adc
or
xchg
out
imul
jg
lds
jb
popf
xchg
fs
std
fucomip
cmpsl
sub
das
jo
sti
or
fistpl
mov
xchg
pop
push
push
and
xor
mov
cli
push
rclb
imul
adc
shrl
mov
sbb
xor
out
xchg
pop
mov
mov
out
push
lds
mov
gs
mov
idivl
mov
pushf
cwtl
fwait
hlt
add
mov
add
add
or
inc
push
loope
mov
mov
xchg
lock
lods
mov
test
mov
add
inc
cwtl
adc
mov
into
outsl
gs
mov
adc
jmp
nop
xchg
inc
cwtl
sbb
pop
es
lods
xchg
out
add
add
imul
mov
jmp
icebp
cs
ja
jno
mov
andl
jl
lret
jl
movsl
in
jbe
lea
adc
daa
xor
mov
test
cmpl
dec
pop
mov
dec
lock
rcrb
inc
mov
les
xor
xor
dec
and
xchg
mov
mov
sub
mov
shlb
push
xchg
mov
mov
cmpsb
mov
mov
push
scas
push
ret
jmp
test
pop
jmp
filds
add
dec
out
dec
out
add
fwait
jmp
std
jp
inc
es
inc
adc
mov
leave
scas
and
pop
mov
push
ret
mov
mov
js
aad
push
mov
xchg
lock
pop
loopne
iret
outsb
into
je
stos
cli
jmp
into
insb
mov
int
imulb
lahf
mov
xchg
test
dec
add
adc
leave
cs
xchg
jge
iret
fimull
mov
filds
enter
lahf
out
imul
loope
sbb
arpl
fcomp
push
pop
ret
push
mov
lahf
loope
mov
lods
flds
mov
repnz
push
repnz
pusha
inc
into
and
and
mov
dec
inc
push
dec
mov
iret
aas
mov
popa
mov
cmp
pusha
mov
test
icebp
jno
add
mov
fnstcw
sub
imul
inc
cmp
mov
pushf
pop
insb
inc
sub
dec
lcall
lahf
aam
jl
or
mov
add
pop
pop
in
call
cmp
xchg
sub
xor
sahf
movsl
xchg
repnz
test
cs
rcrb
push
or
hlt
jo
cmp
jl
cwtl
or
cmp
pavgb
rcl
jbe,pn
sub
cmp
sbb
inc
insl
sbb
adc
cmp
imul
mov
dec
es
test
push
jae
andb
aas
imull
call
out
mov
ljmp
ss
ret
xor
scas
gs
xchg
insl
mov
addr16
punpckhbw
push
lahf
rcl
lcall
cmp
dec
push
test
inc
mov
movsl
pop
jne
call
minps
ds
push
lods
das
js
lahf
add
cmp
xchg
sarl
sub
add
pop
adc
mov
mov
and
add
push
ds
dec
sub
cmp
push
inc
faddl
add
str
jp
sub
call
sub
sti
outsl
testl
lahf
add
popf
mov
dec
push
pop
cli
repnz
ret
cmp
loop
test
mov
push
les
cmp
imul
in
movsl
or
xor
mov
sub
fdivr
add
loope
loop
xchg
fildll
mov
cmp
pop
mov
prefetcht2
outsb
sbb
sbbb
cmpb
add
cmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fsubs
stc
jl
lret
jl
loopne
mov
add
sub
ja
mov
xchg
sbb
or
popf
mov
pop
cli
lods
ret
inc
lcall
pop
loopne
sub
mov
lret
jmp
arpl
ljmp
andl
call
loop
cmpsl
scas
test
mov
test
cld
jae
dec
out
or
dec
pop
and
push
xchg
and
outsb
sbb
cld
mov
adc
flds
sub
mov
mov
xchg
out
mov
dec
push
adc
movsl
gs
jbe
in
insb
sarb
sti
or
add
sbb
adc
je
out
jmp
sub
pop
aad
adc
repnz
xor
sbb
sub
rcrl
mov
jecxz
adc
cmc
fcom
push
cmp
mov
rcl
movsb
int
jmp
fwait
outsb
fmuls
xchg
mov
pop
imul
mov
sub
mov
cmp
push
and
jns
bound
xchg
pop
test
and
mov
inc
mov
std
lods
pop
cmp
rcrb
stc
adcb
xchg
mov
shll
jg
or
movsl
mov
lahf
add
mov
movsb
notb
add
in
pop
and
xchg
mov
or
adc
or
cmp
repz
mov
push
sbb
fisubrl
hlt
sbb
mov
mov
jbe
out
stc
jmp
cld
sahf
stc
test
xchg
pop
or
add
fstl
sub
not
adc
mov
pop
js
testl
pop
push
mov
dec
arpl
mov
std
mov
insl
pop
jne
and
inc
add
scas
rorl
mov
add
mov
push
jge
mov
clc
stos
cmp
ss
mov
bound
rcrb
adc
jne
inc
in
aaa
icebp
pop
inc
pop
dec
pop
sarl
push
leave
nop
sahf
jecxz
pop
out
or
cs
pop
mov
fiaddl
mov
xchg
sub
imul
stc
fxtract
ljmp
movsb
inc
pop
xor
ljmp
fidivs
add
sbb
inc
movsb
into
mov
xchg
dec
imul
dec
js
sbbb
inc
shll
jecxz
scas
popa
xchg
fbstp
push
mov
iret
movsb
cmpsb
sub
aas
in
pop
adc
fisubrs
stos
fld1
sti
scas
jmp
leave
std
xlat
inc
sub
pop
iret
sub
std
sub
out
inc
test
dec
pop
repnz
lea
aas
pusha
sub
xlat
fstp
je
out
or
push
rcrl
pop
push
js
xlat
xchg
cmp
pop
out
scas
shrl
sbb
add
push
sahf
lahf
in
imul
and
xor
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
mov
sbb
jl
lret
jl
push
mov
and
add
add
aam
mov
scas
add
fstpl
test
fimull
mov
ja
mov
jbe
ret
sbb
imul
pop
inc
jae
pop
pop
jb
shrb
mov
push
ret
scas
std
dec
mov
pop
sbb
mov
xor
out
inc
ljmp
int3
xchg
arpl
push
sahf
repnz
xchg
jge
daa
mov
in
cs
jge
jp
cltd
push
mov
insl
xchg
cmp
push
sub
xor
push
pop
shrb
mov
xor
adcb
sub
ja
lods
mov
sbb
xlat
ds
push
loope
jg
push
rcll
loope
adc
stos
pop
popf
int3
nop
call
ss
fbld
xchg
push
mov
fadd
repz
daa
jnp
arpl
out
and
inc
hlt
push
divb
mov
inc
cmp
mov
jns
pop
or
aas
mov
fs
push
lods
mov
push
cmp
sbb
add
sbb
ficompl
inc
xchg
push
lods
jmp
push
mov
mov
dec
sub
pop
fs
insl
fidivrs
mov
subb
ja
ficoml
inc
cmpsb
dec
lods
add
jle,pn
das
add
push
rorb
notb
repnz
adc
mov
adc
and
inc
mov
adc
push
lods
dec
loopne
aaa
sbb
movl
mov
aaa
fwait
pop
rorl
push
sub
outsb
leave
pop
mov
negl
adc
sub
sbbl
add
stos
inc
sub
push
aaa
in
push
jl
xchg
xor
movsl
cmpsb
pusha
lods
sub
sbb
test
sub
adc
inc
jle
repz
fadd
jne
sbb
enter
and
call
jl
rclb
out
out
sbb
ficomps
sub
jae
insl
cmc
fs
je
adc
bound
dec
notl
or
mov
movsb
pushf
mov
and
xchg
out
je
xor
pop
sub
inc
dec
mov
daa
sub
dec
and
mov
icebp
cltd
fldlg2
jmp
push
dec
sbb
jne
fstl
inc
out
scas
jne
ret
int
lea
xchg
movsl
js
push
stc
and
in
leave
test
adc
dec
ret
jmp
mov
ficoml
mov
ret
int3
inc
xchg
mov
outsl
jge
loopne
pop
cli
repnz
inc
xor
outsw
addr16
mov
enter
cmpsb
xchg
insl
inc
jl
pop
fidivrs
inc
push
push
mov
and
shll
test
sbb
xchg
jmp
jl
mov
pop
sbb
xchg
jnp
push
cli
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
lods
inc
or
xchg
jns
jl
loope
jmp
jb
xchg
leave
outsl
insl
xchg
stc
test
lcall
xor
xor
dec
jno
ret
dec
xchg
lods
add
mov
mov
adc
push
leave
adc
sub
sbb
adc
subb
sub
scas
lret
aaa
xor
sub
pop
pop
in
mov
in
inc
lcall
mov
popa
mov
xchg
jl
or
push
mov
pushf
call
mov
aad
and
dec
jns
inc
inc
je
inc
loope
mov
insb
mov
addps
daa
imul
pop
movsl
pop
arpl
mov
out
mov
push
jle
mov
cwtl
pushf
jns
enter
punpcklbw
mov
lret
into
jo
aad
movsl
pop
push
mov
add
jb
push
pusha
je
mov
mov
in
jne
fimuls
sbb
cmpsb
out
inc
cli
xor
or
mov
repz
xor
and
jb
test
push
push
inc
xorb
pusha
rolb
sub
mov
xor
push
bound
test
clc
lods
or
mov
cmpsb
or
into
repz
lds
daa
jle
roll
mov
shl
inc
dec
repz
pop
pop
mov
mov
pop
in
push
sub
jns
enter
shll
pop
test
pushl
js
int3
jae
pusha
cwtl
mov
dec
sbb
xchg
mov
inc
mov
add
ds
cmp
mov
ret
stos
popf
and
mov
inc
gs
insl
pop
movsl
out
nop
inc
jne,pt
xchg
lret
dec
dec
pop
fldcw
int
mov
popa
in
imul
aam
or
loop
push
enter
inc
or
aas
add
cmp
scas
xchg
into
aaa
frstor
jp
mov
adc
mov
lret
dec
fistpl
hlt
push
test
inc
or
mov
and
sub
in
lods
sub
sub
adcl
push
rclb
mov
iret
outsb
jno
out
ja
dec
push
sbb
xchg
xor
pop
ret
or
icebp
adc
mov
in
lods
dec
fxch
faddl
cmpsb
scas
lahf
jo
xchg
xlat
inc
movsl
adc
popa
and
jle
jo
pop
adc
fiaddl
js
lahf
jecxz
addr16
shrb
cmp
push
inc
es
ja
iret
test
scas
daa
outsl
mov
xchg
repnz
movsl
cmp
dec
xlat
stos
jp
popa
lods
scas
enter
pop
jg
jle
shlb
aas
cmp
sbb
add
shr
cmp
xchg
mov
mov
xor
shlb
pop
cmp
pop
int3
inc
sub
aas
or
inc
sub
adc
iret
cmp
ret
mov
frstor
add
outsl
in
xchg
mov
sbb
mov
int3
fdivrs
test
dec
xchg
inc
jae
cmc
sub
or
dec
xor
loopne
mov
mov
cld
xor
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
cltd
sahf
mov
xchg
cmpl
jl
ja
leave
jg
pop
or
adc
dec
and
add
lods
movsb
or
mov
test
or
push
sub
and
or
cld
stos
lds
lret
ja
mov
mov
andb
lock
test
cs
push
popf
push
pop
jl
fstpl
sub
jb
daa
ret
out
and
mov
dec
jle
popa
stos
pop
cli
ljmp
mov
movsl
cmp
adc
dec
mov
pop
loop
icebp
fwait
enter
shl
sysenter
push
xor
gs
stos
scas
cmpsb
fidivl
jo
sbb
idivb
in
pop
mov
ss
gs
mov
popa
cld
repz
in
in
and
icebp
ret
cli
fmulp
mov
mov
add
adc
sbb
popa
ret
cmpsb
push
loope
sahf
sub
and
scas
adc
push
adc
xchg
les
stos
inc
outsl
mov
jge
jle
orb
inc
fsub
push
imulb
js
dec
push
sub
fdivl
lods
adc
inc
dec
mov
adc
es
out
jp
ds
or
xor
push
push
mov
push
loop,pt
packuswb
cmp
in
push
mov
mov
dec
pusha
leave
mov
lods
jp
popf
movb
leave
ret
fiaddl
stos
inc
jne
lea
repz
sbb
lds
mov
dec
add
pop
jmp
add
adc
bound
or
mov
inc
dec
test
ss
sbb
pop
lock
decb
cmpsl
cld
mov
mov
dec
jno
cmp
sbb
add
ret
or
scas
inc
jmp
pop
cmpsb
insb
jae
jne
lods
sub
leave
add
loope
mov
fldt
jl
iret
push
or
xlat
jo
adc
outsl
movsb
test
inc
loop
arpl
xor
cwtl
push
sub
mov
or
ljmp
or
subb
icebp
inc
in
dec
test
clc
loop
cltd
cmpsb
sbb
xor
fistpll
jno
push
dec
adc
outsl
push
sbbb
push
psrad
inc
jl
jne
and
cwtl
adc
jmp
dec
enter
pushf
adc
nop
cmp
xlat
add
dec
shrb
les
popf
cmp
aam
cmp
ficompl
scas
das
fisttps
std
hlt
sub
pop
icebp
mov
mov
sahf
out
xor
and
jecxz
mov
push
dec
xorl
imul
lods
sbb
dec
popf
in
test
pop
dec
mov
movsl
mov
fisubrs
fsts
les
cli
popf
out
lods
adc
inc
movsb
jecxz
ljmp
bound
test
out
sti
fadds
xchg
inc
and
xor
loope
repz
decl
pop
add
iret
outsb
out
orl
add
movl
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
nop
mov
sbb
lret
jl
les
mov
xor
xorb
adc
jno
cmc
pop
out
lea
mov
cmp
lahf
stos
and
jo
push
shr
popf
call
adc
sbb
ret
jle
inc
push
js
xor
and
mov
xor
mov
ds
lea
fists
jp
cmc
jg
not
popf
xorl
adc
jmp
cmp
mov
jge
push
pop
or
test
mov
adc
jecxz
mov
push
fnstenv
mov
xor
sub
test
pop
xchg
pusha
jno
xchg
adc
in
or
adc
push
fcoms
sbb
testl
icebp
xchg
pop
inc
jbe
test
or
cltd
imul
jae
and
popa
xchg
ja
popa
std
sbb
arpl
in
mov
leave
lret
jae
mov
ds
lcall
stos
cs
xlat
add
pop
add
fiaddl
loopne
inc
ss
push
fdivl
push
sbb
out
cmp
mull
mov
jbe
and
mulb
loop
push
push
cwtl
out
jmp
movsl
lds
in
rorb
icebp
mov
inc
mov
sub
std
mov
in
adc
push
xchg
mov
jle
mov
mov
push
push
pusha
sti
push
sub
push
and
adc
test
cltd
outsl
filds
add
jns
and
loop
icebp
in
xchg
cmc
inc
xchg
lret
mov
adc
fistpl
flds
pop
lods
mov
ljmp
jg
or
bound
nop
shlb
cs
mov
cmp
mov
ja
fldz
lahf
pop
fnstenv
jmp
pop
in
pop
xchg
jp
ss
cmp
loop
mov
fcomp
enter
add
push
ret
adc
mov
and
into
stc
fdivrs
dec
push
repz
lcall
repnz
ret
xlat
inc
xor
je
orl
pop
lods
pop
orb
imul
cmpl
enter
xchg
mov
movsb
pop
push
push
jmp
imul
push
loop
lret
and
mov
repnz
leave
subb
jnp
cwtl
das
lods
out
data16
adc
int
push
push
mov
repz
movsb
sub
dec
lods
cli
and
es
rclb
inc
icebp
pand
sub
mov
push
nop
xlat
jo
stos
sub
nop
push
or
mov
out
popf
inc
xchg
cltd
mov
cmp
cld
shrl
adc
dec
push
imul
mov
pop
daa
push
dec
push
and
dec
lock
out
mov
jmp
shlb
or
into
or
push
cmp
sbb
sub
push
mov
popa
insl
sub
inc
mov
pop
out
and
dec
mov
in
push
jl
ret
add
imul
or
add
outsb
add
add
daa
inc
imul
xchg
popf
scas
fcoms
lret
jl
and
mov
aaa
jg
xor
mov
mov
push
fdivr
dec
jmp
in
fwait
shrl
loope
push
inc
add
adc
pop
mov
test
mov
mov
xchg
js
popf
mov
std
and
inc
dec
mov
es
sbb
shr
sbb
lods
mov
nop
inc
cs
jmp
mov
and
arpl
push
mov
rcrl
mov
mov
add
pop
mov
jb
xlat
xchg
stos
sbb
lahf
vpmaddwd
aad
dec
sbb
mov
mov
cmpsb
xchg
aas
xchg
add
pop
jnp
push
shll
cmc
fs
jae
mov
push
lock
dec
cltd
push
cmp
scas
push
ss
sub
xlat
push
cmpsl
leave
xor
xor
mov
insb
data16
mov
stos
jno
cld
dec
movsl
and
add
mov
lods
jns
scas
stos
jge
aad
or
pusha
out
sub
les
mov
xchg
rol
xor
fs
push
scas
out
add
out
ss
fdivs
mov
or
xor
jb
jle
je
or
fisttpll
bound
jg
adc
jb
add
push
or
pop
sahf
pop
mov
cmp
hlt
jne
sbb
xchg
push
dec
fistpl
scas
sarb
or
jb
outsb
pop
lea
add
dec
les
mov
push
js
arpl
pop
adc
bnd
out
jo
lret
sti
or
fsubs
jae
lods
sub
inc
aam
ss
lahf
add
lret
dec
dec
jg
icebp
and
mov
xor
cmp
movsl
movsl
lock
pop
sbb
insb
jle
test
mov
push
mov
mov
jecxz
add
test
cvttps2pi
std
jb
call
aaa
mov
lds
js
jg
in
cld
jo
jae
loopne
push
jno
adc
ja
sub
hlt
add
sti
jns
add
popf
mov
adc
sub
outsb
outsb
pop
or
mov
adc
jmp
bsr
jnp
ljmp
push
jmp
pushf
push
jle
lahf
adc
rol
stc
adc
add
add
cs
daa
ret
rcl
ja
jno
rorb
mov
in
ficompl
jnp
ss
cli
out
enter
rorl
in
je
adc
sti
shll
or
ds
lahf
lcall
mov
mov
daa
cltd
lea
mov
push
push
cmpsb
nop
orl
inc
xor
aad
mov
mov
in
out
scas
sbb
data16
outsl
bnd
ljmp
shll
pop
inc
sub
repz
lea
addr16
in
push
xchg
pop
xchg
cmp
mov
mov
mov
jno
leave
cmc
aam
push
dec
mov
fcompp
std
inc
pop
in
inc
push
in
repnz
fiadds
xor
push
call
in
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
call
jl
lret
jl
sbb
outsl
or
sbb
cs
adc
mov
xor
xchg
pop
int3
std
enter
popf
cmpsb
lock
jg
sub
pop
sbb
jb
pop
sahf
enter
sub
les
xchg
repnz
loopne
mov
popf
dec
cmp
out
aas
add
mov
sbb
daa
cmc
xlat
repz
mov
cmp
xchg
inc
jne
xchg
pop
or
lds
test
push
mov
cltd
sbb
movsb
fistpl
ret
into
xchg
aam
mov
cmp
into
stos
pop
es
rcrb
adc
sbb
jg
push
and
mov
mov
xor
adc
lahf
fidivs
jl
inc
add
jnp
pop
and
test
cmp
movl
rorl
xor
mov
xchg
js
or
ret
insl
and
adc
fcoml
rcrl
popa
sbb
mov
or
fwait
loope
pop
adc
mov
jmp
js
xchg
mov
xchg
jne
fwait
mov
leave
setne
ljmp
ljmp
jle
fimuls
fs
push
arpl
push
ljmp
jecxz
pop
scas
sub
loope
xchg
jp
mov
pushf
rolb
or
jo
aam
data16
fs
mov
ret
mov
adc
aaa
mov
call
or
sub
sbbb
es
xchg
test
jnp
jl
add
mov
shl
adc
push
fcmovnu
push
test
stos
pop
test
lock
aam
mov
mov
fcompl
negl
aad
int3
jbe
aam
leave
mov
lahf
ds
lret
mov
cmp
jmp
push
mov
dec
push
xchg
inc
into
insl
inc
cld
bound
push
dec
stos
lock
leave
inc
mov
imul
cmp
nop
mov
fimuls
arpl
fdivl
sub
adc
jmp
loop
sbb
sbb
and
mov
push
call
movsb
xor
dec
and
std
and
lods
jp
in
add
repnz
outsl
dec
jo,pn
xchg
mov
jl
inc
nopl
sub
in
mov
popa
leave
stos
in
cmp
lds
adc
jne
xchg
inc
movsl
gs
adcl
movsl
stc
jbe
mov
jae
in
sar
call
pushf
pusha
ficompl
dec
dec
scas
imul
cli
push
or
dec
test
push
pop
insb
cld
pop
arpl
lret
aaa
push
lret
xchg
divl
sub
das
xchg
xchg
inc
and
in
imul
jmp
jbe
int
inc
in
adc
push
data16
add
fldcw
mov
jmp
pushf
jmp
pop
mov
sbb
into
in
push
cmpsb
not
or
ret
add
outsl
stos
iret
lock
jbe
mov
icebp
mov
out
imul
incb
aad
lahf
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
xchg
xchg
insl
xchg
jl
lret
jl
cmp
push
inc
in
push
mov
outsl
push
cli
mov
xor
pop
dec
hlt
addb
sbb
popf
outsl
fbld
mov
pop
jecxz
xchg
movsl
sub
cmpsb
lds
push
xchg
enter
cmpsb
push
adc
call
cltd
fildll
jno
bound
add
imul
jae
and
pop
sahf
sub
nop
jp
or
jnp
xchg
add
ljmp
pusha
pop
mov
test
jle
add
mov
jns
mov
in
sbb
cmc
add
stos
pop
xchg
insb
loopne
dec
dec
shrl
int
bound
jmp
adc
xor
rclb
mov
idivb
dec
test
popf
adc
lret
add
daa
or
inc
pusha
mov
jnp
lcall
stos
sbb
and
outsb
xchg
mov
negl
mov
sbb
xlat
in
or
loope
xchg
jge
fnstcw
filds
xlat
adc
or
add
fs
loop
fistpl
imul
pop
icebp
lods
add
outsl
and
out
pop
out
and
loop
xchg
mov
mov
mov
push
jmp
scas
push
jb
je
and
out
clc
mov
push
in
scas
ret
jnp
add
mov
cmc
cwtl
fcoml
ljmp
pop
cmp
dec
jne
jp
or
leave
call
out
jae
repnz
dec
ret
ficoml
xchg
push
fidivrs
shld
popf
or
sahf
cmpsb
aas
inc
icebp
mov
inc
out
lcall
adc
jne
pop
daa
lods
cs
shlb
dec
xchg
pop
pop
popa
cmp
push
or
das
push
dec
add
mov
sub
or
add
fisttpll
or
loope
xlat
or
lods
pop
add
test
cmpsb
data16
pop
inc
sahf
fimuls
into
cmpsb
scas
push
jp
pop
inc
add
in
sahf
sbb
add
fwait
push
pop
std
cld
pop
jp
nop
mov
sahf
int
pop
mov
add
sbb
jbe
push
sub
scas
add
dec
cmp
inc
insb
clc
pop
inc
addl
pusha
fldl
and
pop
cld
inc
mov
pop
das
xor
xchg
mov
dec
fndisi(8087
mov
add
push
lds
add
inc
fmuls
xor
jno
fstpl
ret
adc
ljmp
jecxz
into
repz
testl
movb
or
scas
xor
scas
inc
cmp
mov
fmull
sub
testb
aad
pop
xchg
les
notl
mov
push
ljmp
nop
jne
aaa
jp
sbb
push
inc
sahf
dec
mov
or
scas
repz
lods
push
aaa
std
sub
push
xor
push
sbb
shl
lods
cmc
inc
mov
fadd
movsl
jle
cmp
fscale
mov
cli
dec
sarl
jp
adc
or
nop
mov
add
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
jo
je
cmp
jl
push
lock
leave
adc
ret
mov
sbb
jno
mov
lods
xchg
dec
xor
push
xchg
cmp
je
daa
or
adc
data16
push
cmp
jae
repz
mov
add
xchg
mov
decl
inc
jnp,pn
cmp
enter
xchg
xchg
inc
sub
roll
addb
jecxz
add
add
imul
push
ja
clc
mov
mov
cmp
ficompl
fs
je
scas
dec
int
divl
push
movswl
out
jl
addr16
cmp
xchg
in
mov
jo
popf
mov
scas
xor
scas
pop
dec
inc
divl
mov
push
and
add
pop
mov
cmc
adc
mov
push
mov
negl
push
add
sbb
mov
mov
cmp
xchg
cmp
xor
dec
adc
jnp
sub
or
aas
mov
repz
pop
dec
mov
aaa
decl
mov
sub
test
aam
xchg
or
cmovne
jmp
jecxz
loop
add
adc
push
push
sub
push
jmp
das
arpl
xor
aas
sub
negb
add
cs
adc
lock
push
arpl
je
xor
xchg
mov
jp
ja
stos
sbb
jg
movsb
shll
sbbl
mov
mov
xor
or
dec
mov
or
test
fisubs
jnp
scas
inc
fmuls
mov
adc
add
add
sbb
pop
mov
inc
inc
std
mov
repz
sub
push
std
scas
std
jmp
push
stos
jne
jge
ljmp
pop
and
mov
inc
push
jg
or
mov
lret
sbb
mov
stos
xor
aam
add
sub
xchg
inc
test
push
jle
mov
push
into
mov
movsb
insl
je
push
xor
cmp
dec
pop
lea
pusha
fists
jecxz
bound
subb
in
jg
mov
pop
ds
les
fcom
inc
iret
push
or
fiaddl
aaa
adc
mov
xchg
add
xlat
and
rcrl
cmpsb
cmp
adc
adc
lret
shlb
js
repnz
or
psraw
and
iret
sarl
scas
pusha
sub
pop
xchg
jge
aaa
jbe
out
adc
or
shll
mov
arpl
int3
xchg
xor
dec
or
dec
iret
test
and
cmpsl
stos
cmp
std
adc
sub
out
add
xchg
imul
fmul
sbb
popa
shlb
ss
mov
ss
insb
sbb
dec
and
sub
jge
sub
insb
sub
push
add
sub
outsb
cmp
sbb
jle
lods
push
and
dec
sbb
leave
push
mov
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
dec
pusha
jle
xchg
lahf
jl
lret
jl
cmp
pop
mov
xchg
push
xor
mov
xchg
sub
insb
mov
nop
push
subl
and
push
pop
inc
cmp
adc
rorl
pop
sbb
cmp
mov
cwtl
scas
int
inc
outsb
pop
fisubrl
mov
imul
dec
xor
mov
cmp
aaa
fbstp
test
in
sub
mov
fistl
cld
dec
test
in
xchg
inc
or
movsl
mov
lea
scas
aam
push
jnp
push
adc
add
divl
jb,pt
mov
xor
xor
aam
aaa
cwtl
mov
fs
and
cmp
cld
fldt
inc
daa
cmp
and
fdiv
lret
repnz
jns
movsl
imul
push
mov
push
jne
shrl
lahf
push
mov
add
or
int3
imul
mov
pop
jg
or
mov
insb
je
mov
dec
js
imul
mov
int
test
and
sbb
mov
rclb
dec
call
repz
mov
dec
imul
mov
out
mov
nop
cli
mov
mov
bound
daa
les
pop
inc
shll
popf
and
shlb
test
sbb
mov
out
les
dec
andb
mov
cmc
mov
pop
add
dec
push
mov
arpl
mov
fwait
or
pushf
push
pop
xchg
mov
sti
aam
pop
mov
ss
xor
mov
popa
or
jno
lds
cmp
ss
push
das
enter
xchg
int
and
cmpxchg
cltd
leave
jg
lahf
mov
in
add
std
aas
fistps
scas
rcr
rcrl
imul
sub
inc
test
je
cmp
jo
mov
and
pop
and
jg
cmp
xor
mov
inc
push
inc
das
pop
mov
inc
leave
pop
dec
dec
pop
mov
xor
jo
loop
push
xchg
adc
push
in
addr16
add
jnp
mov
mov
dec
bound
ds
daa
dec
out
outsl
sub
mov
les
or
in
bnd
cmpsb
pop
cmp
lock
mov
and
push
lahf
mov
and
aas
test
out
sbbb
dec
push
ret
or
out
call
push
outsl
bound
jle
cwtl
imul
cltd
mov
mov
test
imulb
xchg
insl
pop
xchg
pop
dec
mov
gs
mov
xor
out
push
fimuls
int3
cli
repz
or
sub
fsubl
cwtl
xchg
push
je
in
mov
pop
jo
mov
dec
mov
js
inc
scas
int3
mov
testb
in
jmp
test
sbb
pop
stc
add
lcall
imul
xor
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
pop
outsl
sub
lret
jl
idiv
or
xchg
clc
hlt
pop
lods
in
add
cmp
and
lret
adc
pop
ss
push
cwtl
test
insb
mov
ljmp
mov
pop
cmp
xchg
out
icebp
pusha
divl
and
jp
out
inc
pop
dec
sub
sub
mov
xchg
dec
jecxz
mov
pop
sti
shlb
subl
roll
mov
push
push
mov
mov
stos
jge
xor
cltd
das
clc
pop
dec
mov
call
jns
mov
fildll
pop
push
jl
repz
inc
lock
repnz
mov
jl
sbb
test
pop
iret
push
add
ret
ljmp
or
pop
dec
insb
cmc
cmp
nop
mov
rorb
or
lock
mov
inc
cmp
loop
imul
push
in
aas
push
jbe
inc
dec
outsl
push
rcl
add
mov
xchg
popa
cld
jmp
mov
mov
lret
mov
loop
addb
sti
mov
fdivs
push
out
sbb
int3
xchg
xor
cltd
xor
les
jnp
sbb
in
push
pop
pop
movsl
daa
mov
imul
mov
mov
or
mov
insb
push
scas
cmp
rcrb
inc
aas
mov
push
cwtl
das
or
addb
repnz
aaa
fs
lcall
jecxz
lcall
rclb
fisubrs
in
and
sbb
and
cltd
ds
ja
mov
jl
loopne
and
lahf
pop
xor
sub
dec
jne
xchg
xor
inc
test
fs
imul
scas
dec
push
sub
fcmovne
loopne
arpl
or
inc
push
addr16
pop
mov
dec
leave
cltd
int3
scas
fiadds
mov
push
lods
ret
insl
jmp
lret
test
inc
mov
test
pop
inc
leave
xchg
lods
outsl
inc
xor
fxch
and
cmp
js
popf
imull
lds
lds
push
ss
and
or
shll
inc
xor
cld
fisubl
jp
xor
sub
jmp
popa
cmpsb
xor
mov
ffreep
add
jl
inc
add
mov
push
pusha
sub
ljmp
pushf
pop
shll
std
xchg
xor
pop
clc
popf
filds
dec
pop
or
mov
cmp
xchg
js
inc
dec
inc
fwait
lcall
lods
insl
lea
add
clc
cmp
push
xlat
imull
ljmp
cli
mov
inc
push
mov
sub
adc
popa
vrcpps
inc
cltd
jae
in
fisttpll
ljmp
cwtl
push
iret
stc
jg
leave
stos
sub
sub
imul
icebp
xchg
shll
xchg
push
mov
icebp
jmp
inc
push
enter
out
insl
dec
push
and
dec
ljmp
test
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
sbb
movsb
jl
cmpsl
jns
jl
jcxz
mov
push
out
xor
daa
xchg
jne
lods
dec
mov
outsl
pop
mov
lea
rclb
js
lahf
and
xor
push
push
aaa
mov
scas
std
lcall
mov
repnz
or
pop
int3
lahf
insb
lret
mov
mov
stos
pop
into
aaa
lods
gs
inc
aad
xchg
pusha
mov
xor
int
fnstsw
mov
xchg
xchg
push
lret
popa
fs
mov
les
adc
int
pop
mov
test
repz
lds
adc
push
jae
gs
cmpsb
stos
and
mov
dec
mov
xor
sbb
inc
inc
add
pop
lods
nop
add
sbb
sti
xlat
shrb
push
imul
push
int3
cli
adc
mov
std
sub
call
ljmp
ds
call
icebp
cmc
roll
sbb
mov
mov
pop
in
sub
push
xor
pushf
pop
sbb
mov
adc
cmp
pop
sbbl
mov
into
mov
add
inc
xor
sbb
xor
sub
bound
pop
ror
sahf
or
adc
imul
sub
sti
in
inc
std
pop
mov
sub
cmp
daa
popf
mov
pop
ficoml
test
cmpsl
cmc
add
cmc
mov
in
mov
mov
xchg
xchg
or
notb
and
push
sbb
add
arpl
and
nop
addr16
ljmp
xor
fstp
mov
cmp
mov
cltd
cmc
add
imul
sbb
mov
dec
xor
xchg
adc
push
add
pop
and
test
add
les
decl
adc
sar
push
xchg
testb
out
push
aad
and
fwait
mov
pop
xor
andb
mov
dec
push
inc
or
aas
scas
push
xchg
std
cld
sbb
lahf
cmp
daa
call
sbb
add
jp
lock
pop
sub
fcompl
aas
jne
pop
shlb
dec
xchg
sbb
lret
adc
jne
add
mov
insl
jl
mov
lret
mov
cmp
mov
icebp
dec
andb
push
test
pop
sub
dec
icebp
cmp
sahf
rolb
or
jnp
out
push
in
or
push
inc
sbb
leave
fsts
mov
js
scas
xchg
cmp
aas
rcll
mov
iret
mov
xchg
cli
push
outsl
mov
inc
pushf
mov
and
mov
push
fildll
in
mov
negb
dec
xlat
aaa
jnp
sbb
data16
lds
rcll
out
and
mov
enter
sbb
push
aas
loop
pushf
push
jge
mov
sub
or
mov
lahf
pushf
sub
aas
lahf
int3
mov
sub
scas
mov
xor
pminsw
sahf
ja
mov
orl
or
mov
add
inc
or
fcmovbe
xchg
jo
xchg
insl
outsl
add
imul
jecxz
push
shl
lcall
add
roll
add
push
aam
jns
xchg
insb
mov
jl
loope
lods
inc
out
inc
cmp
adc
imul
dec
cmp
shrl
adc
fnstsw
and
jge
js
fcmovnu
xor
adc
outsb
stc
jmp
push
shrl
or
lds
inc
imul
int
push
nop
dec
sub
push
pushf
mov
inc
fadds
or
inc
mov
lock
push
daa
mov
or
loope
pop
sub
insl
sbb
or
inc
scas
loope
sub
mov
stos
xchg
mov
lods
cmp
cmp
or
cmp
gs
xchg
inc
add
int3
xchg
adc
fwait
pop
mov
test
or
pop
mov
ljmp
pop
jo
mov
sarb
lret
fistpll
fistps
push
inc
inc
dec
jbe
adc
outsb
inc
xor
test
push
std
xlat
jb
or
pop
in
arpl
scas
in
jmp
addr16
mov
sub
pop
cld
cltd
sub
cmp
lock
xor
int
xchg
xchg
mov
jo
xor
mov
and
sbb
and
mov
push
ffree
ret
leave
repz
fnstsw
nop
mov
adc
jbe
pop
int
fidivs
mov
inc
lahf
pop
add
aas
cld
adc
sbb
fiaddl
and
cmp
testl
push
ja
popf
push
adc
or
xor
lock
pop
xor
dec
shll
push
mov
icebp
int
mov
adc
or
ret
dec
jmp
pop
lret
jl
pop
sub
cwtl
fadd
test
shll
mull
xorb
ret
loope
jmp
in
movb
orb
mov
and
or
mov
fnsave
inc
xchg
imul
mov
sti
std
sti
sub
lods
and
fs
les
inc
sbb
fstl
pop
pop
nop
hlt
dec
test
imul
shrl
jecxz
jae
in
into
xlat
pop
mov
pop
xchg
mov
andl
stos
sbb
data16
dec
adc
dec
mov
cli
hlt
push
sahf
pushw
xchg
add
cld
fs
dec
mov
xchg
mov
rcr
push
inc
int3
mov
into
shrl
adc
loope
je
sub
jp
xorb
ljmp
sub
add
fs
pop
and
mov
lcall
xchg
popf
bound
insb
scas
add
sub
cmp
pusha
std
sarl
and
adc
loopne
insl
ficompl
stos
shlb
mov
test
sub
sarb
imul
mov
push
lods
ret
fs
jmp
pop
aaa
aam
je
outsb
cmp
push
cli
adc
sbb
lahf
rcrl
negb
mov
pop
mov
xchg
pop
jge
xchg
push
add
sti
movsb
mov
xor
inc
mov
int3
scas
and
jl
mov
hlt
pop
cmpsl
insl
aad
sub
jle
scas
rorl
aam
adc
dec
dec
mov
ret
cmc
pusha
xor
dec
bt
pop
add
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
inc
jle
xchg
lods
jl
cmpsl
jns
jl
loope
jnp
pop
imul
lahf
int3
mov
icebp
repz
pop
jmp
add
jl
jg
gs
sub
cmp
js
sarl
insl
std
ret
js
jns
add
xchg
or
sub
or
fisttpll
inc
imul
sub
roll
test
mov
mov
test
lcall
xor
adc
sti
add
cld
pop
pop
push
or
dec
xor
cmpsl
jbe
in
inc
mov
aaa
jnp
dec
loop
jecxz
das
mov
and
push
adc
add
scas
movsl
inc
push
int3
cs
sub
scas
dec
test
dec
jnp
add
fcompl
pop
mov
cld
icebp
add
push
pop
jl
shl
jae
pop
shl
push
mov
add
gs
ds
sub
fimull
inc
cmpsb
and
fiadds
cmp
mov
mov
add
xchg
cmp
xlat
dec
sbb
mov
fcmovnb
nop
sti
into
and
aas
cmpsl
test
rcrb
sub
cmp
in
mov
xor
int
aad
mov
push
into
inc
ss
arpl
sbb
sbb
cmp
adc
or
rcrl
sti
test
out
xchg
dec
add
cmp
in
popf
jp
xchg
jnp
sub
lcall
hlt
out
popa
mov
jp
dec
das
outsb
adc
test
pusha
push
outsl
xchg
and
push
cltd
mov
pop
adc
in
ja
xchg
shlb
push
shl
stos
popl
xchg
negl
insb
pop
subl
mov
les
enter
and
pop
or
jo
xor
fsubl
jmp
sub
and
repnz
mov
pop
xchg
fistl
cld
out
daa
jmp
push
cmp
pop
lcall
mov
mov
sub
push
cmp
inc
pop
pop
in
sub
jmp
jnp
jbe
inc
cld
mov
in
sub
mov
cs
jb
push
jg
out
iret
scas
fldcw
lret
push
push
imul
pop
js
mov
xor
pop
mov
rcll
and
fildl
lret
push
subl
sbb
stos
mov
sub
or
sbb
out
cwtl
adc
or
adc
mov
mov
dec
insb
mov
out
dec
adc
sarb
push
adc
jb
stc
push
ja
clc
add
loope
adc
sub
daa
mov
sbb
mov
out
ljmpw
xor
cmp
mov
xor
loopne
lahf
mov
pop
out
push
pop
dec
movsl
adc
cmc
mov
outsl
push
enter
outsb
iret
lods
jae
mov
push
cmp
push
fs
mov
or
adc
xor
sub
lret
lahf
dec
fdivs
nop
jp
mov
dec
cmp
popa
addr16
lea
dec
sbb
cld
xchg
mov
fbstp
inc
cmp
popa
std
pushf
xchg
fcoml
rolb
cmp
xor
jg
mov
pushf
test
imul
popf
xchg
enter
pop
aad
fwait
jl
mov
mov
xor
add
mov
jmp
push
mov
test
dec
subl
cmpsl
jns
jl
dec
scas
ret
lock
cmp
jl
adc
mov
push
stc
push
inc
cmpsl
sub
testb
jmp
cmpsl
sub
jnp
cmc
xor
mov
fsubr
fiadds
iret
xchg
mov
pop
ret
pop
fdivrl
fsts
or
push
stos
mov
dec
xchg
push
push
out
inc
das
or
rcrb
lret
pop
add
insl
imulb
jecxz
xchg
xchg
dec
lods
dec
mov
pop
and
andl
cmpsb
xor
ja
xor
aad
inc
and
inc
aam
cmp
add
mov
insl
dec
and
cmp
roll
fcmove
out
ss
add
inc
leave
push
cmp
mov
or
cmp
xchg
xchg
jae
popf
mov
repz
ds
aas
mov
divl
mov
icebp
je
test
mov
push
mov
xchg
cmpsl
mov
xor
sub
inc
and
fidivrs
les
push
mov
fstpl
ficompl
dec
dec
in
push
je
in
xor
mov
andb
jb,pt
bound
subl
push
sub
ds
mov
cmp
xchg
out
or
mov
mov
dec
fdivs
adc
mull
inc
nop
sbb
dec
call
popf
cmc
mov
sbb
inc
cmp
sub
mov
dec
rol
push
or
pusha
std
xlat
inc
scas
cltd
into
lock
or
cmpl
push
jne
sbb
outsb
push
bound
scas
xchg
test
pop
and
filds
xor
mov
push
pop
out
adc
out
adc
vxorps
sbb
and
or
mov
jl
sti
jecxz
jge
push
aas
or
js
sbb
ljmp
movsl
das
xor
enter
pop
cwtl
movsl
cli
mov
out
outsb
outsb
dec
pop
sbb
popf
imul
cli
fwait
or
mov
add
mov
inc
xor
add
push
and
mov
std
mov
es
sub
shl
inc
cmp
xor
cld
push
push
out
insb
sti
or
adc
mov
or
stc
pop
jnp
std
push
lods
and
mov
lods
cmp
sub
ficomps
push
add
push
jae
clc
fdivrp
nop
push
push
or
lcall
adc
sub
jns
popf
add
das
jo
push
or
and
or
and
inc
inc
push
push
test
mov
cli
jnp
cmpsb
cs
dec
jnp
vpor
mov
nop
xor
lds
data16
sbb
scas
iret
lods
xchg
cmpsl
popf
in
cmp
cmc
inc
aam
mov
sbb
sbb
dec
outsb
jo
xor
xchg
mov
in
js
mov
out
pop
mov
fs
sbb
in
jb
movsb
add
xchg
or
cltd
cmp
xchg
sarl
dec
or
jne
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
andb
jl
jns
jl
dec
loop
mov
mov
insb
in
imul
sub
leave
adc
pop
mov
jae
test
push
jmp
mov
lods
popa
mov
fwait
lcall
jno
gs
mov
scas
mov
sbb
mov
jmp
mov
std
jle
fstpt
pop
ljmp
sub
test
adc
lret
les
incl
dec
dec
jmp
das
or
ficoms
jb
add
lcall
hlt
fcom
and
lock
or
or
sti
adc
daa
sub
jne
mov
test
in
lock
adcb
in
push
jnp
in
aas
outsb
bound
hlt
jp
jbe
fcomps
shrb
mov
ret
cltd
daa
addr16
scas
and
test
movl
imul
fcmovne
daa
push
das
xor
in
add
adc
data16
xchg
inc
movsl
imul
aas
arpl
mov
nop
pop
xchg
pop
loope
in
cli
xchg
outsl
shl
and
les
ficompl
fucom
add
fwait
les
jb
mov
lret
mov
fwait
scas
test
pop
fsubrl
daa
or
mov
mov
loope
adc
insb
fisubrl
mov
ficomps
pop
mov
or
cwtl
iret
cmp
xlat
fs
xchg
or
test
inc
sti
cmc
mov
dec
pop
sahf
inc
push
lods
imul
mov
scas
scas
cmp
ljmp
pop
push
add
in
js
icebp
cmp
subb
pop
push
dec
add
inc
std
adc
in
lret
inc
repz
xor
add
cmpsl
outsl
push
in
sub
mov
cmp
jmp
hlt
jp
sub
adc
sub
mov
adc
dec
inc
fcoms
push
popa
or
loope
les
movsl
mov
test
sbb
cmp
jp
add
flds
mov
jb
sbb
xor
je
inc
ljmp
aad
jbe
xchg
les
fdivs
pop
les
jl
pushf
cmp
pop
lcall
jecxz
gs
decl
mov
push
cs
cmpsl
push
js
sbb
pop
pop
push
and
es
lahf
pusha
fs
inc
xlat
dec
mov
out
loopne
scas
inc
out
in
cmpsl
sbb
imul
dec
ljmp
adc
loope
or
je
xlat
adc
add
in
pop
imul
repnz
shr
pop
push
stc
dec
ffree
xor
push
inc
cld
inc
icebp
jne
mov
push
mov
dec
mov
enter
out
stc
scas
cs
insb
loope
movsl
in
mov
pop
insb
lods
call
f2xm1
nop
orl
loopne
xchg
into
jns
or
sbb
int3
or
sbb
dec
cltd
mov
shrl
ret
adc
jnp
xchg
mull
out
ja
xchg
mov
xchg
xor
add
jbe
or
movsb
icebp
loopne
insl
cld
lret
jbe
push
jns
mov
fucomip
mov
push
pop
pop
pop
int
shr
jmp
and
xor
dec
test
pop
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
jl
rcrl
in
pop
fisttpl
dec
sbb
ror
inc
sbb
test
push
cs
icebp
adc
pop
sbb
sbb
subl
rol
ret
jle
sti
ja
sbb
lods
jo
lret
aas
mov
push
ja
shlb
jns
add
icebp
xchg
xchg
ficoml
les
cmp
das
mov
and
or
stc
sti
pusha
pop
cld
push
cli
or
jmp
enter
ret
outsl
dec
add
push
fidivrl
sbb
addb
jmp
icebp
push
out
lret
adc
test
and
and
pop
imul
xchg
xor
nop
or
in
mov
or
test
cli
adc
xor
add
xlat
or
ss
lds
sbb
pusha
test
dec
push
les
sbb
sub
mov
xchg
scas
ja
in
push
push
and
pop
xor
dec
mov
lods
incb
daa
pop
sbb
mov
adc
aaa
dec
sub
int3
sbb
les
sbb
loop
fs
fwait
lock
add
jmp
mov
lcall
aaa
test
sbb
xchg
mov
xchg
sub
add
fwait
adc
push
adc
cmp
sub
out
sbb
lds
mov
push
push
insb
out
sub
mov
rclb
dec
cwtl
test
sub
aam
aad
int3
mov
xchg
xchg
xorl
mov
loop
jmp
enter
loope
jo
cmpsl
mov
popa
int3
and
loope
pusha
sbb
shlb
int
mov
shll
mov
and
in
xor
cmpsl
shrb
lods
sbb
xchg
sub
cs
popf
push
dec
aaa
inc
push
add
stos
sub
fdivrl
or
cmpsb
sub
outsl
xchg
enter
mov
inc
sbb
test
lods
mov
cmp
or
mov
fistl
sub
jl
pop
das
mov
fldl
rcl
adc
jl
ret
pop
call
adc
rclb
cmp
mov
shll
adcl
adc
inc
xor
push
mov
push
mov
sbb
les
in
in
dec
test
es
jno
inc
fwait
or
jp
mov
lods
int
shll
add
andl
xor
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
negl
cmp
cmp
jle
jl
inc
jmp
cmovns
cmpsl
sub
dec
dec
pop
fcoms
shr
xchg
in
cltd
lds
and
lcall
push
into
fwait
aad
ds
out
inc
jo
or
fistps
jnp
popa
mov
pop
jecxz,pn
push
scas
jo
xchg
loope
mov
test
negl
or
pusha
cmp
shl
mov
adc
sbb
sbb
fwait
and
addl
in
mov
or
and
out
iret
pop
jmp
dec
fsts
test
loopne
popl
imul
dec
cmp
mov
jo
loope
inc
cmc
and
sub
jl
xchg
fisubrl
or
pop
ret
or
sarb
xor
mov
fistpl
test
inc
dec
push
xchg
sbb
adc
push
xchg
adc
jno
mov
jns
inc
cmp
cld
popl
add
in
jmp
or
roll
inc
pusha
pop
insl
test
and
inc
pop
pop
inc
loope
and
sub
sbb
in
xchg
addl
adc
in
mov
mov
test
pop
xchg
hlt
dec
ja
dec
pop
hlt
cmpsb
mov
dec
fmuls
and
cltd
xor
sub
mov
pop
cld
lods
frstor
ljmp
lock
lods
jnp
test
je
out
adc
pop
js
cmp
pop
adc
mov
xor
mov
nopl
dec
mov
push
or
push
sbbb
inc
ret
stc
insl
lret
add
lods
sbb
call
mov
clc
jmp
pop
fnstcw
std
jae
in
inc
add
push
xchg
or
dec
push
adc
ljmp
lret
inc
pop
out
inc
test
add
dec
outsl
pop
icebp
push
negl
pop
les
insl
jbe
ljmp
sub
inc
loopne
mov
pusha
inc
repz
add
mov
ds
add
ja
cld
shll
pop
aad
outsb
xor
nop
ficoml
popf
or
in
jo,pn
outsb
inc
xchg
cmp
xor
lcall
adc
pop
push
inc
std
sub
mov
add
and
pop
pop
cmp
and
aam
xchg
iret
fs
xlat
mov
jno
lret
insb
divb
pop
sub
jo
or
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
ret
inc
outsl
mov
jl
loopne
cmp
mov
xchg
test
xor
dec
jae
xchg
ljmp
in
sti
mov
inc
ss
or
pop
or
stos
or
or
jne
sub
inc
fimull
xor
imul
add
pop
sbb
dec
aaa
into
add
lods
push
test
mov
sub
inc
mov
jl
and
sbb
imul
and
adc
loopne
mov
push
test
xor
xchg
pop
cltd
jge
cmpsl
call
dec
jl
jp
bound
push
push
int
shrl
mov
jle
insb
imul
pop
mov
cmp
sub
stos
test
or
add
cmp
and
mov
insl
xacquire
nop
cmpsl
pop
cmpsb
shll
test
in
or
cmp
repz
push
inc
stc
clc
test
out
push
fs
cltd
rorl
int3
xchg
addr16
insl
mov
cmp
in
sub
jge
xchg
jb
pop
xchg
sub
enter
out
xchg
test
outsl
incb
or
pop
xlat
fistps
push
pop
push
inc
fnstenv
test
fdivr
jp
xchg
sbb
cwtl
push
jno
cmp
or
lcall
test
inc
jo
mov
mov
mov
jle
add
or
adc
xlat
outsb
lahf
mov
sub
sbb
inc
vunpcklps
test
or
out
xor
jb
mov
es
in
sti
mov
ljmp
or
insl
mov
jmp
add
outsb
stc
stos
push
fnstcw
sbb
sub
inc
pop
cmpsl
sub
cld
testl
fbld
sbb
mov
ret
cld
push
fs
scas
dec
adc
lret
stos
push
pop
ficoms
inc
mov
xor
add
fisttpll
testl
mov
test
aam
dec
push
scas
mov
sub
sti
gs
xchg
fs
sbb
fdivp
sbb
clc
cmp
cmpsl
aam
pop
jmp
add
movsl
nop
xor
xor
clc
push
jo
push
add
pop
jae
outsb
outsl
std
sub
add
push
pop
jle
fcom
mov
es
out
pop
lods
mov
stc
cs
daa
inc
mov
xchg
repz
jnp
aas
xchg
sub
leave
aad
inc
adc
rorb
push
add
add
xor
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
push
xor
and
adc
jl
adc
sbb
mov
xchg
into
fsubr
or
jb
addr16
or
jge
inc
xchg
lock
enter
pop
pop
lock
sbb
scas
xchg
push
sub
dec
pop
enter
js
mov
mov
lcall
sbb
dec
xchg
fldl
jmp
test
xor
mov
cmove
adc
outsl
dec
xchg
ror
enter
lods
mov
jge
nop
or
fisubl
repz
xlat
in
les
mov
lcall
push
xchg
rcll
pop
shlb
xchg
lds
hlt
mov
das
nop
jp
out
sub
jp
test
lahf
or
pop
xchg
ljmp
jecxz
mov
in
negl
outsb
cmpsl
jmp
sub
push
jnp
inc
shrl
jae
les
pop
pop
rol
sbb
inc
pop
shrl
pusha
mov
iret
mov
add
into
gs
and
and
jmp
out
pop
mov
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
aaa
pop
sarl
jg
jl
cmp
cmp
cmp
mov
push
das
loop
mov
push
jmp
and
add
xchg
leave
fwait
mov
int3
repnz
outsb
arpl
cmp
sbbb
scas
or
mov
cld
ds
shll
loopne
mov
sbb
hlt
sti
aas
pop
dec
push
mov
inc
sub
mov
cld
ljmp
lock
in
ficoms
enter
subb
mov
andl
adc
mov
lret
push
mov
mov
fmul
outsl
cwtl
lea
lock
sbb
bts
lea
rcrl
fucomi
or
dec
mov
cmp
mov
sbb
adc
sbb
adc
sub
scas
inc
push
mov
shlb
push
xchg
push
or
fistpll
dec
xor
dec
sbb
add
jmp
add
jnp
hlt
daa
or
and
fdivrs
lcall
test
dec
dec
inc
insl
fstpt
scas
mov
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
into
add
jl
adc
jl
inc
out
adc
cmovp
mov
or
sbb
scas
bound
xor
sbb
aad
out
test
mov
cltd
js
pop
lea
call
loope
cmp
in
mov
pop
inc
sub
aaa
cmp
roll
int
inc
xor
ficoml
icebp
jge
nop
xor
sub
jmp
sbb
xchg
push
test
flds
leave
fcmove
mov
fdivr
push
mov
ret
movsb
dec
mov
mov
dec
xlat
enter
pusha
bound
leave
ret
adc
sub
push
popf
xor
xor
or
pusha
test
enter
pushf
and
insl
lret
in
test
pop
lret
jnp
cld
inc
inc
mov
out
ret
and
push
push
mov
push
fldcw
sbb
mov
dec
sub
loope
xchg
stos
jbe
cmp
lods
sub
mov
add
xor
in
sub
sahf
pop
lret
xor
jl
enter
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
bound
adc
jl
xor
andl
cmc
or
mov
or
jno
fnstcw
popf
xchg
or
xchg
mov
ret
adc
fadd
jge
push
xor
cmpsl
mov
iret
dec
mov
jne
fcmovu
sbb
pop
ret
pusha
scas
dec
sub
inc
out
cld
sub
andb
fcomps
cmp
push
inc
stc
adc
test
mov
add
mull
lock
adc
cltd
jle
int
mov
shll
fsts
orb
lahf
sbb
push
nop
xor
orl
mov
mov
xor
pop
orb
xchg
mov
daa
adc
shll
mov
xor
incb
movsb
jnp
pop
sub
cmp
pop
xchg
cli
push
out
inc
mov
pop
cmp
sub
pop
lds
xor
mov
xor
jne
loopne
stc
pop
testl
or
sub
insl
or
xlat
add
mov
mov
test
je
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fdivrl
sub
adc
jl
jg
jl
ss
lcall
inc
and
test
sbb
rol
fildll
arpl
test
jo
fidivrs
test
add
movsb
sbb
test
shlb
adc
mov
mov
js
fisttpll
cli
jle
add
pop
push
adc
sub
xchg
cltd
xrelease
lods
push
mov
xchg
xor
es
stos
adc
cmp
adc
ds
push
shrb
movb
loopne
pop
enter
xor
daa
std
xchg
push
mov
xlat
mov
mov
sub
mov
sub
add
into
mov
jle
test
push
pop
cwtl
iret
dec
adc
outsb
clc
mov
stos
jb
xchg
jle
int
test
xchg
les
push
xchg
push
repnz
in
dec
and
push
scas
fadd
aad
in
inc
fdivs
fildl
cmp
stc
mov
or
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
sti
in
lock
aaa
inc
jl
adc
jl
mov
push
dec
imul
loop
nopl
popa
incb
int3
xchg
add
push
xchg
inc
in
pop
hlt
pop
aaa
test
push
scas
pop
inc
sub
jns
push
mov
int
repz
cmc
or
decb
stc
pop
add
fsubl
icebp
leave
insl
inc
add
adc
imul
add
and
ds
nop
or
scas
jle
sub
xor
pushf
cmp
sbb
in
divl
xchg
pop
jl
dec
dec
ds
pop
xchg
cmp
add
cmp
frstor
adc
rorb
lds
lret
jno
and
int
xchg
inc
in
inc
int
cmp
mov
sub
sbb
push
xchg
sub
call
push
insb
pop
sbb
cltd
jmp
mov
jnp
adc
push
fmull
push
pop
and
jno
cld
daa
scas
mov
mov
jns
outsl
into
add
lret
sub
push
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
dec
aad
jl
adc
jl
in
jb
lods
and
fsubs
xchg
adc
call
add
dec
inc
and
xor
lds
fadd
jmp
cmc
sbb
daa
jp
ds
lea
lret
mov
mov
aas
testl
hlt
xchg
les
mov
nop
mov
gs
mov
mov
inc
lods
jg
imul
push
movsl
push
lds
push
inc
pop
push
sti
cmpsb
xchg
mulb
cld
xchg
repnz
inc
enter
inc
fwait
pop
push
jmp
mov
call
jne
push
movswl
jecxz
mov
ds
push
add
hlt
in
cmp
clc
jge
roll
test
xor
movsl
insb
add
mull
mov
lods
fildll
and
addr16
orb
xchg
in
jecxz
lahf
nop
mov
jg
sub
out
out
xchg
pop
in
fwait
or
addr16
bound
adc
xlat
in
add
imul
mov
xor
mov
jmp
pop
shlb
mov
cmp
outsl
int3
sbb
inc
jl
adc
jl
dec
imul
pop
dec
sub
cmp
jns
mov
fcom
cmpsb
rcrb
in
cmpsl
and
jg
push
int
in
cwtl
dec
push
xchg
mov
int3
andl
mov
mov
ja
mov
aaa
popa
and
xor
pop
cmpsl
mov
pop
pop
xchg
repz
inc
ja
jno
dec
sbb
movsl
ds
in
xor
stc
sbb
pop
sub
inc
mov
dec
push
pop
js
or
mov
lock
jp
xor
outsl
and
dec
push
sub
jp
loopne
jmp
pop
repz
mov
xchg
imul
jg
dec
mov
mov
shr
sarl
sarl
mov
ret
and
shl
pop
decb
cltd
loope
and
nop
or
negb
sub
mov
pop
les
cmp
mov
xchg
mov
int
in
push
fs
je
mov
xor
push
cmp
mov
xor
or
enter
sti
decl
add
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
shlb
es
adc
jl
repnz
in
jbe
xchg
push
cmp
sub
fstpl
aaa
sbb
jmp
pop
std
xchg
xchg
cmp
fsub
or
push
jae
sbb
pop
sti
cltd
les
gs
sbb
bound
inc
mov
mov
arpl
cmpsl
mov
sub
inc
mov
or
imul
ret
inc
call
lret
iret
inc
ss
jg
xchg
scas
icebp
sti
cld
jl
pop
mov
imul
outsb
cli
scas
fisubl
mov
test
xor
loope
cld
pop
xlat
push
fsubrp
mov
pop
push
fstps
and
stos
int
je
lds
xor
pop
xor
sar
dec
sbb
jne
ds
sub
data16
lock
lcall
add
inc
and
mov
xlat
sub
in
pop
add
xlat
cli
and
add
mov
push
in
push
push
mov
sbb
shll
fildl
pop
adc
test
add
xchg
jmp
push
fsubr
imul
enter
adc
jl
jg
jl
mov
jns
push
shll
mov
pop
dec
and
test
and
and
mov
subb
shr
test
adc
outsb
push
mov
popa
mov
cltd
cli
pop
jns
mov
mov
lock
push
shrb
test
gs
or
push
and
sbb
fstps
iret
add
jnp
inc
clc
loope
inc
mov
btc
cmp
and
scas
pushl
sbb
mov
ret
mov
addr16
push
leave
sahf
xor
mov
mov
scas
cmp
sbb
cltd
rorl
sub
mov
dec
in
sub
xchg
push
loope
lods
das
insl
push
mov
loopne
enter
fcomi
scas
jl
pop
jle
dec
push
mov
js
cmp
pusha
mov
mov
lret
div
jmp
jbe
loop
loope
mov
test
repz
inc
sub
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
mov
cmp
dec
inc
jl
adc
jl
push
xchg
mov
mov
fdivrl
mov
jne
gs
mov
jmp
clc
mov
lock
mov
push
push
sub
mov
repnz
xchg
repz
mov
and
in
push
sbb
test
jae
cs
push
mov
push
out
popf
gs
cli
dec
cld
dec
je
mov
in
nop
xor
andb
inc
shrb
push
loop
mov
sub
jge
lahf
jmp
sub
xor
pushf
add
push
and
push
and
jmp
sbb
jmp
ret
adc
rcrb
movsb
or
out
xchg
push
cwtl
jmp
dec
pop
and
xchg
pop
mov
sub
cmp
fcmovbe
xchg
mov
mov
pop
out
or
pushf
push
mov
aad
push
and
fs
popf
lret
adc
dec
mov
add
adc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
push
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
xchg
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
mov
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
lahf
mov
pop
add
add
fwait
and
sbb
jle
imul
mov
cs
jmp
ljmp
fisttpl
mov
xor
pop
pop
add
xchg
and
add
mov
push
sbb
in
out
clc
add
lea
leave
rcr
add
mov
jnp
sbb
xchg
adc
shll
fs
in
sub
insb
addr16
jmp
icebp
pop
out
bound
xchg
test
mov
fmull
sub
inc
loop
pop
jne
cs
mov
mov
adc
fnstcw
xchg
fildll
lret
fucomip
and
or
insl
sub
pop
dec
repnz
fimuls
push
dec
aam
pusha
negl
jne
fwait
jbe
pop
jne
mov
fidivrs
js
pop
xchg
cmc
out
jecxz
cli
mov
push
fwait
mov
je
sub
sbb
pop
ficoml
in
jle
mov
cmp
fcomip
iret
add
pop
add
add
cmp
andl
cmp
stos
imul
and
mov
jo
jns
subl
mov
mov
loop
call
pop
mov
and
sub
lret
jge
sahf
fldt
mov
out
pop
mov
mov
div
std
shll
mov
fwait
pop
decb
es
hlt
fdivrs
jge
sbb
mov
loope
les
lret
dec
shll
pop
mov
and
pop
frstor
or
loope
test
fwait
orl
pop
nop
xchg
mov
or
cmp
inc
ja
pop
push
push
imul
add
rcrl
das
roll
jno
ret
int
sub
cwtl
stos
mov
add
loop
in
popf
jns
push
das
in
cmp
lock
jne
or
cmp
lcall
js
push
fisttpll
add
add
push
add
mov
rolb
add
add
add
dec
dec
xorb
mov
lcall
and
jmp
add
jle
xor
out
in
movsl
imul
ror
and
mov
or
dec
in
lods
ljmp
or
cld
sub
mov
adc
hlt
repnz
aaa
dec
cmp
in
inc
insb
mov
out
fwait
je
and
lods
cmp
push
cwtl
push
mov
js
push
and
popf
jmp
push
mov
add
fcomp
fidivrl
lods
inc
stos
mov
dec
jno
pop
or
dec
xor
dec
cld
pop
and
jno
aas
repnz
dec
and
xchg
mov
inc
mov
or
lock
push
lret
adc
repnz
jge
push
mov
mov
movsb
dec
dec
cltd
sbb
cmp
std
lcall
nop
inc
xchg
push
sub
xlat
xor
adc
add
mov
idivb
mov
add
add
pop
add
add
xchg
pop
xor
mov
adc
push
push
mov
jle
sub
outsl
data16
or
mov
aam
out
or
sarb
jbe
add
hlt
aam
fs
dec
push
addr16
lret
jge
xchg
aaa
jl
icebp
or
cmpsl
cmp
ret
or
in
rcl
cmp
lods
imul
add
and
sti
or
aas
jmp
mov
das
pop
lock
addr16
jbe
xchg
out
xchg
fistps
rclb
ja
inc
mov
mov
frstor
rcrb
inc
and
mov
jbe
mov
or
ret
or
xchg
add
push
imul
pop
pushf
loope
scas
test
les
add
cmpb
sbb
pop
push
add
daa
add
in
idivl
adc
arpl
iret
ljmp
stc
cmp
mulb
or
icebp
jle
sbb
icebp
jbe
dec
cmp
movl
pop
jae
or
ss
pop
xchg
or
cmp
roll
add
add
add
rol
jg
mov
sub
jl
imul
mov
adc
sub
dec
insl
jo
int3
aas
lcall
mov
stos
gs
inc
and
jne
stc
sbb
jmp
or
push
add
push
mov
mov
and
pop
mul
add
and
mov
or
lods
mov
pop
popa
les
jg
adc
sti
in
push
loop
sub
xor
xor
sub
push
jmp
in
or
dec
pop
sbb
or
test
imul
std
adc
xor
out
ret
mov
gs
dec
test
mov
js
adcb
ret
cmp
sbb
mov
shrb
pop
enter
sub
mov
sub
mov
sahf
xchg
cmp
adc
inc
inc
fs
push
cmpsl
mov
dec
ja
lds
sarl
add
add
cmc
insl
cmc
out
lcall
mov
pop
inc
adc
add
pop
add
add
pop
loopne
ja
icebp
test
sbb
je
push
jmp
or
mov
adc
jl
cmpsl
js
jo
mov
test
pop
push
mov
xchg
popf
or
hlt
mov
popa
push
shrl
xor
out
insb
mov
jge
push
xchg
or
or
pop
dec
xor
dec
frstors
shll
mov
popa
pop
sub
testb
pop
xchg
push
lcall
pop
clc
pop
push
push
outsb
js
and
xchg
push
lahf
mov
mov
popf
subb
loope
cmp
xchg
sub
popa
rol
fnstenv
enter
repnz
sub
call
sub
pop
xchg
sbb
mov
daa
pushf
xor
mov
mov
ljmp
sbb
jecxz
int3
sarl
add
add
add
outsl
jle
aam
aam
test
ljmp
add
add
loop
pop
pushf
xor
push
ffreep
or
mov
out
sbb
lret
mov
jecxz
pop
es
lahf
cmp
inc
test
xchg
cmp
jmp
pop
add
mov
stos
add
and
dec
aaa
rorb
xchg
and
push
mov
rolb
mov
and
bound
sub
js
xor
insl
push
or
adc
xchg
orb
cs
mov
mov
pop
je
jo
cmp
jo
mov
cmc
mov
adc
fwait
lock
jg
fidivrl
scas
xchg
jns
inc
arpl
stos
repnz
xchg
jecxz
outsb
xor
cmpl
aad
sbb
dec
and
jmp
add
push
ds
fdivl
sub
push
sub
push
js
dec
push
or
ja
mov
add
adc
imul
mov
or
clc
push
lea
add
add
jle
and
scas
sti
jle
sbb
sbb
pop
add
add
cmp
add
xor
xchg
inc
cpuid
gs
in
es
and
pop
xchg
pop
lods
xchg
cmp
inc
sub
leave
jle
outsl
rcrl
cmp
sbb
addr16
sub
mov
stc
in
mov
sbb
pop
idivl
adc
popa
jbe
adc
in
pusha
jge
cmp
dec
cltd
mov
popa
xorl
xor
or
xor
mov
dec
ss
lret
jl
cmp
or
or
sub
imulb
pop
repz
pop
mov
movsl
out
push
insb
mov
mov
mov
or
xchg
cmc
dec
pop
push
je
sbb
xor
cmp
incl
sub
xor
mov
push
shll
fisttpll
jge
and
pushf
mul
mov
sub
pusha
movsl
or
lret
or
jae
push
sub
es
mov
jp
add
lahf
fnstcw
ss
lahf
stc
and
mov
fidivs
cmpsb
and
add
add
add
mov
fwait
inc
pop
cmpsl
imul
add
loop
rcr
sahf
jne
jns
fwait
pusha
or
loopne
adc
jns
out
xchg
movsb
mov
xor
in
in
in
pop
push
xor
aam
loopne
pop
idivb
pop
sbb
xor
xor
pop
sahf
pop
in
xor
fs
call
fistl
imul
pop
and
pushf
adc
clc
push
jge
in
lds
lret
cmp
loope
fcoml
mov
xchg
jmp
inc
cmp
mov
fucompp
xchg
jp
pop
mov
xchg
adc
movsb
jne
mov
jae
test
jae
pop
sti
push
jecxz
inc
xor
das
jmp
sbb
push
push
push
push
outsl
mov
aas
pop
xchg
in
into
push
jbe
les
push
dec
cmpsl
nop
xchg
push
sbb
clc
fnstsw
roll
flds
flds
xor
push
jl
jle
insb
inc
xor
push
ret
pusha
xchg
add
add
pop
add
add
jle
fxch
add
int
mov
add
repz
movsl
xlat
addr16
leave
push
or
lret
out
mov
call
dec
add
orb
stos
xchg
fbstp
xor
daa
mov
mov
mov
aas
test
stos
xchg
test
cbtw
fimuls
or
ds
test
int
cltd
inc
jmp
out
adc
ret
loope
xor
mov
jg
ljmp
push
stc
cli
add
mov
mov
lret
jne
outsl
aaa
mov
iret
adc
fwait
leave
ret
lcall
add
cs
pop
xchg
xchg
in
push
loope
icebp
popf
bound
jecxz
arpl
movsb
pop
test
fsubl
pop
dec
mov
sbb
pop
cld
leave
inc
mul
xchg
sub
xchg
les
jmp
add
mov
adc
sbb
mov
add
add
add
pop
fsubrl
fsubs
and
loop
cmpsl
emms
adc
in
cmpb
jno
adc
or
cmc
sbbl
sub
call
mov
push
jge
std
and
scas
imul
pop
mov
lods
flds
repnz
scas
dec
arpl
je
test
ret
or
mov
pop
loop
into
repz
inc
ret
inc
lods
push
orl
push
sbb
and
sub
sub
sbb
or
jns
cmpsb
adc
mov
mov
in
fisubs
mov
xchg
in
movsl
inc
pop
mov
or
sbb
repnz
jle
lods
test
dec
xor
cmpsb
in
es
xchg
fs
test
xchg
xchg
adcb
xchg
imul
and
aaa
data16
jne
mov
xchg
aas
xchg
pop
add
add
xor
icebp
enter
push
fldenv
xchg
ret
push
in
cld
call
cmp
inc
in
cmp
xor
adc
mov
xchg
mov
les
or
lret
mov
stos
outsb
push
mov
cmp
ljmp
daa
pop
jbe
or
mov
pushf
aad
mov
ss
popa
mov
jp
pop
mov
or
xchg
or
aaa
mov
adc
mov
loope
into
sbb
loope
sub
fldenv
nop
or
xor
popa
divb
cwtl
cld
adc
imull
sub
cmp
scas
in
cmp
data16
stc
add
sbb
jmp
xchg
sub
pop
mov
mov
rolb
sti
add
std
cmp
dec
mov
dec
sub
mov
add
imul
in
xchg
push
pop
mov
in
cs
fstpt
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
out
cltd
fcmovnb
pop
push
aad
outsb
pop
in
ljmp
ret
jne
icebp
push
add
int3
into
test
shl
inc
lea
pop
pop
daa
test
cmc
sbb
imul
test
dec
xor
dec
jecxz
mov
dec
xchg
into
cmc
pop
push
sti
and
insl
test
cmc
sbb
cmp
inc
mov
push
add
xor
cld
adc
xor
stc
push
pop
dec
test
xlat
push
stc
cmp
pop
push
icebp
rcll
in
pop
adc
fdivrl
mov
jmp
mov
xor
jl
icebp
lds
jl
xor
cmp
or
xor
adc
xchg
push
mov
out
mov
pop
decl
nop
xor
lods
mov
je
sbb
pop
fisubrl
dec
inc
xchg
adc
icebp
inc
aas
cmp
leave
in
sti
push
ds
and
add
pop
sarl
lods
std
mov
cmp
add
pop
add
add
fnstcw
test
mov
out
out
test
prefetch
or
xorl
dec
jge
int
adc
mull
and
ds
mov
or
add
popa
and
dec
push
lcall
xor
push
adc
cld
mov
fnsave
outsb
or
pop
scas
xchg
jmp
loope
je
mov
outsb
in
jg
dec
outsl
stos
int
adc
xor
mov
add
in
xchg
sub
clc
inc
xchg
in
push
jmp
imul
arpl
decl
pop
imul
shr
iret
ret
adc
push
sub
mov
mov
inc
ss
sarl
nop
jle
push
scas
pop
lock
movsl
loop
xlat
cwtl
xchg
push
mov
sbb
int
mulb
xchg
adc
mov
xchg
repnz
pop
in
stos
or
inc
jno
add
repz
std
repz
push
pop
push
dec
fldl
add
add
add
aad
and
mov
out
mov
aaa
lds
testb
adc
gs
and
mov
sub
jle
xor
aas
sbb
xlat
cmp
out
mov
es
and
rcrl
sbb
cmp
mov
fchs
lock
aam
loope
push
pop
imul
cmp
sub
es
and
ret
gs
lret
dec
sbb
loopne
fs
rcrb
nop
iret
inc
out
bound
out
or
jmp
stos
push
add
outsl
loopne
pop
lcall
enter
add
aam
ret
jnp
stos
test
shl
mov
sub
ja
mov
jnp
cmc
arpl
sti
aam
idivb
test
sub
jl
and
dec
addb
mov
imul
push
das
mov
add
add
lock
cmp
cmp
pop
sub
add
pop
add
add
mov
add
or
sti
and
push
mov
jp
inc
lar
push
lahf
add
mov
int3
add
push
jb
test
xchg
sbb
jmp
pop
sub
lea
icebp
divb
cwtl
push
mov
sbb
push
xchg
ret
clc
cmc
xor
and
xor
rcl
sbb
inc
mov
pop
dec
lret
jmp
dec
jge
mov
sahf
xor
lea
mov
inc
mov
jmp
out
adc
adc
adc
icebp
xlat
jle
pop
sub
aam
out
mov
adc
faddl
dec
and
daa
sahf
fsubs
mov
push
mov
enter
dec
dec
lcall
popa
les
std
cmpsl
stos
imul
lahf
pop
lcall
aaa
dec
xchg
sub
cmp
int3
jp
lret
in
call
aaa
sarb
cmpsl
sub
adc
sahf
mov
add
mov
mov
pop
mov
push
pop
filds
add
add
add
fsubs
inc
arpl
push
sub
sbbb
mov
int
inc
and
dec
mov
push
dec
fistps
sub
sub
loope
imul
in
in
shlb
lret
inc
pop
daa
das
out
fstps
pusha
xchg
scas
into
jne
ja
mov
xchg
cmpsl
push
rorb
in
dec
in
addr16
jae
nop
rclb
ds
mov
es
dec
xchg
mov
xlat
sub
push
push
in
sarb
dec
lods
or
lret
aas
pushl
and
cmc
xchg
adc
mov
fxch
mov
jmp
loopne
pop
sarl
add
adc
jno
pop
sub
jp,pt
cmp
outsl
ret
sub
push
dec
loopne
cmp
cmp
or
leave
mov
lock
aas
popf
test
cli
mov
jno
xchg
xor
sub
add
xchg
in
mov
incl
shlb
add
add
add
cmpsl
push
inc
ficomps
cli
int3
inc
xchg
inc
or
add
popf
decl
cmpsl
insb
lahf
int
inc
sarb
outsl
shlb
jnp
adc
adc
adc
sbb
lcall
pop
lret
fstpl
pop
push
cmp
lods
inc
jg
mov
push
add
inc
insl
push
cmp
and
mov
dec
popa
or
aaa
and
dec
inc
push
xor
xchg
mov
bound
xor
mov
popa
sub
insl
int3
mov
loop
push
stos
lret
imul
mov
cld
aam
pop
sbb
and
mov
arpl
testb
jo
inc
popa
inc
in
adc
scas
lock
lret
iret
lea
sub
or
outsl
adc
cli
lahf
cmp
hlt
adc
mov
xchg
popa
rol
jne
and
movlps
xchg
pop
das
push
pop
sbb
sbb
fcomps
add
add
sub
in
negl
es
int
mov
add
loope
add
add
add
xor
push
fs
pusha
or
and
mov
loopne
iret
repz
dec
inc
add
andl
rcll
adc
lds
mov
int3
inc
sbb
push
lods
lods
jg
mov
xor
call
mov
adc
mov
push
test
pop
push
jg
pop
inc
sbbb
test
cltd
lret
out
dec
push
cmp
inc
push
mov
imul
mov
dec
sbb
cltd
xchg
js
sbb
dec
ret
cli
xchg
icebp
mov
mov
repz
popf
push
pop
loop
scas
adc
loopne
enter
stos
orl
mov
aas
or
push
call
add
pop
xchg
mov
fdivl
sti
adc
add
addb
or
cmp
inc
xchg
loopne
and
mov
adcb
xchg
std
add
mov
jge
nop
mov
jb
add
pop
add
add
inc
mov
data16
pushaw
mov
mov
mov
sub
add
aam
pushf
xchg
mov
test
xchg
dec
cmpsb
adc
mov
shl
int
in
mov
or
xchg
mov
push
in
sub
pop
arpl
mov
or
mov
xor
stos
arpl
mov
cmc
mov
and
mov
popa
mov
daa
xor
mov
leave
sub
push
das
rclb
rorl
leave
cli
pushw
jmp
test
stos
xchg
cmpsl
scas
pop
icebp
sub
repz
adc
les
xor
insb
outsb
and
leave
adc
jmp
inc
push
mov
sbb
cmp
mov
jge
xchg
leave
jae
test
jne
sbb
sbb
popa
aaa
and
stc
and
add
add
adc
push
jno
mov
imul
add
xor
out
push
jg
lcall
inc
fimuls
cmp
xchg
jae
repnz
movsb
fstl
pop
inc
adc
cs
inc
ljmp
mov
dec
and
mov
cmpl
cmp
push
decb
xchg
loop
mov
popf
add
int
xchg
inc
jne
adc
push
cli
jo
mov
mov
psubusb
push
mov
dec
dec
addr16
aaa
inc
mov
das
add
leave
adc
xor
add
cmp
in
push
push
pusha
int3
cmp
faddp
jl
jle
test
lea
pop
mov
fdivrs
mov
or
dec
cs
dec
out
icebp
dec
or
movsb
pop
lcall
xchg
sub
mov
inc
cltd
xor
std
mov
rorb
push
mov
fisubs
cmp
or
ficomps
or
jo
or
sbb
mov
pop
test
out
repnz
add
pop
call
mov
sbb
pop
add
add
addb
push
mov
xlat
arpl
or
adc
pop
std
test
mov
mov
add
lret
jl
iret
aas
and
pop
sub
fdiv
movsl
add
decl
pop
ficompl
in
pushf
xor
xchg
push
mov
data16
push
xor
in
fidivl
stos
ja
data16
mov
fiadds
fldl
cmp
and
lret
cmp
stc
loope
jnp
test
adc
cmp
ret
jle
nop
lea
mov
or
mov
fstpt
ds
icebp
cli
scas
dec
shll
sub
cld
xor
stos
sbb
pop
pop
pop
jmp
ret
pusha
push
dec
add
cmp
out
pop
xlat
lret
jae
insl
iret
mov
xchg
loope
sbb
or
xcrypt-ecb
cmpsl
or
push
faddl
sbb
mov
imul
add
add
mov
push
decl
sbb
pop
popl
add
add
fstl
or
popa
pop
scas
or
shlb
cmp
jb
inc
inc
pop
xor
je
insb
mov
jle
mov
inc
aaa
add
and
popa
mov
popa
js
dec
cmpsl
mov
lret
pop
lods
pop
and
insb
push
or
mov
std
dec
imul
adc
jg
or
jbe
lret
xor
out
cmc
mov
sub
and
push
push
ret
or
and
std
inc
out
inc
add
cmp
cmp
mov
leave
xor
xlat
dec
mov
mov
addps
or
push
out
aam
and
add
inc
or
xor
lcall
mov
out
pusha
add
and
jp
add
cltd
xchg
jmp
cmp
in
icebp
es
sahf
fldpi
loope
cld
dec
lahf
je
inc
cs
out
sbb
jno
je
and
cmp
sti
fsubp
jmp
fwait
xchg
addr16
out
mov
add
pop
add
add
push
shrl
insl
push
cmp
mov
sub
lret
xor
out
pop
xor
jno
mov
movsb
pop
andl
movsl
ret
mov
fisubs
negb
xchg
push
nop
in
sahf
mov
or
push
dec
push
sub
inc
cltd
push
mov
mov
insb
and
stos
notl
lcall
imul
sub
jb
push
inc
xor
xchg
adcl
imul
enter
aaa
mov
fdivl
cs
xchg
pop
shld
data16
mov
or
pop
jg
pop
push
fcomp
xchg
dec
inc
adc
add
ss
ficompl
add
aaa
adc
cmpb
lea
test
adc
out
pop
nop
ret
dec
sbb
fists
pop
jo
out
ficompl
add
dec
mov
dec
sbb
stc
mov
mov
ficomps
int3
add
outsb
xor
test
negl
out
add
add
add
mov
adc
icebp
out
sbbl
es
call
mov
xorl
je
int3
fdiv
cmp
inc
push
adc
push
inc
or
ficoml
aas
cmp
dec
pop
jl
lret
enter
insb
call
aam
fwait
pop
cltd
fsubrs
fldt
dec
mov
mov
sub
xchg
lock
lret
push
push
pushl
popa
fdivs
std
jnp
adc
jbe
xchg
jb
dec
repz
loopne
sub
lods
sbb
out
add
loopne
loop
les
loopne
pop
or
roll
imul
jbe
clc
adc
add
cmp
xchg
popa
mov
testl
fldcw
scas
shrl
in
es
or
pop
push
mov
push
cwtl
scas
mov
scas
pop
imul
repz
ror
lock
jnp
xchg
cmp
pushf
call
add
js
push
mov
hlt
je
iret
fs
push
or
outsb
jo
rcll
or
sub
out
arpl
jbe
int
scas
in
sbb
jns
in
scas
and
call
mov
mov
or
imul
es
push
push
out
and
sbb
popf
aaa
dec
adc
iret
push
jbe
sub
inc
stc
loope
in
and
inc
add
xor
js
mov
in
fisttps
outsl
scas
jg
bswap
lock
adc
out
and
xor
js
outsb
adc
push
xchg
pop
jp
inc
xlat
nop
lcall
push
in
jne
adc
adc
cmpb
js
mov
and
jmp
mov
outsl
xchg
loopne
sub
mov
push
mov
cmp
add
repz
fisubrs
jno
das
adc
pop
add
add
sbb
mov
pop
sub
lods
push
inc
pop
adc
push
bound
xchg
mov
xor
test
les
int
mov
rorb
xchg
popa
movsl
cmp
fisttpl
pop
mov
fdivrp
cmp
push
aam
int
xchg
test
sbb
fimuls
sub
idivl
cli
aad
and
stos
jle
push
sbb
push
out
jg
cld
enter
jbe
jns
pop
and
mov
sbb
stos
popa
pop
loop
or
sub
int3
leave
cmp
fwait
cmp
call
daa
xchg
cmc
push
adc
aad
pop
int3
in
mov
or
push
js,pn
or
aaa
ss
fadd
mov
mov
xchg
dec
imul
adc
mov
fcomi
jae
add
adc
scas
aaa
pop
jg
jb
clc
hlt
mov
cmp
jbe
jae
pushf
test
push
lods
stos
sbb
push
es
add
xchg
mov
jecxz
out
mov
mov
aaa
push
mov
stos
ljmp
cli
mov
xlat
das
repnz
pop
movl
inc
pop
cmp
push
mov
sar
rcll
cmp
testl
loope
adc
mov
popf
pop
hlt
ret
lret
xchg
mov
xchg
mov
mov
loopne
cmp
mov
adcb
decl
orl
movsl
clc
shlb
sbb
jb
fs
mov
pop
sbb
mov
cwtl
mov
sbbb
pop
cmc
movsb
aad
shlb
adc
punpckhdq
inc
outsl
push
arpl
stc
sub
loopne
std
je
sub
adc
add
xchg
xlat
xor
mov
les
and
mov
ficompl
sub
inc
cmp
mov
xchg
orb
push
and
jb
cmp
rcll
mov
shrl
cmc
scas
cwtl
sub
repnz
xchg
fwait
mov
pop
add
add
cmp
inc
imul
test
data16
jp
xchg
adc
sbb
pop
mov
mov
jns
in
inc
cld
test
ss
je
xor
lret
jbe
xor
dec
test
out
and
fmull
sbbl
pop
and
movsl
ret
fstl
popa
popf
ret
out
aad
rorb
insl
int
pop
sbb
rcl
in
push
mov
push
idivb
mov
lea
testb
dec
mov
cmp
fstps
or
loope
mov
rcrb
fistl
xchg
and
adc
dec
test
inc
cmp
mov
push
pop
lcall
imul
mov
jecxz
mov
movsb
xlat
test
pop
xchg
adc
sub
inc
fildll
xor
dec
cmc
popf
cmc
jge
lret
pusha
rorb
enter
icebp
insl
icebp
xchg
mov
add
add
leave
loopne
ss
fwait
push
xchg
xchg
incl
inc
sub
ficoms
mov
cmpsl
lock
ss
pop
pusha
test
pop
xchg
mov
adc
mov
mov
sti
sbb
xchg
mov
fucom
pop
pop
push
lods
and
outsl
lret
mov
xor
jb
push
aaa
fimull
pop
pop
shrl
out
inc
mov
jae
lods
out
xor
gs
popa
mov
push
shlb
data16
mov
stc
push
repz
ljmp
jb
add
jmp
mov
jg
out
pop
in
lahf
es
dec
scas
xchg
xchg
mov
sub
popa
and
xchg
mov
jecxz
je
out
out
cmc
adc
jge
fisttpll
mov
cmp
cmp
push
jnp
sarb
cwtl
pop
xchg
jmp
pop
cmp
std
movsl
sbb
pop
aaa
repz
mov
mov
cmc
push
das
jg
push
testb
faddl
jecxz
push
testl
out
pop
mov
add
add
sbb
push
js
pop
jb
or
divb
pop
cli
mov
adc
aas
lds
adc
sbb
dec
aaa
adc
push
arpl
and
cmpsl
loop
xchg
jb
mov
insl
icebp
leave
jl
push
lods
loopne
mov
jp
xor
fistpll
sub
fs
adc
hlt
sub
fxch
jp
ja
dec
insl
and
cmp
roll
std
push
dec
push
jo
mov
fwait
aad
mov
inc
mov
and
mov
jo
mov
fmuls
in
inc
in
ja
and
adc
enter
sbb
dec
stc
test
xor
cmp
inc
lcall
pop
clc
mov
add
mov
fcom
mov
sti
mov
xchg
xchg
inc
outsl
rcrl
repnz
cmp
ret
iret
outsl
clc
repnz
push
mov
lock
add
xchg
mov
or
cmp
add
pop
add
add
scas
sub
ret
adc
add
std
or
das
cmp
add
imul
push
ja
cwtl
mov
dec
rol
fsubr
repz
pop
fwait
cs
je
sbb
pop
push
dec
insb
sbb
add
out
mov
mov
stc
fcoml
jo
adc
pop
cltd
mov
ret
lcall
fld
xlat
ss
enter
loope
loope
sub
gs
push
sub
lock
mov
pop
mov
sahf
hlt
mov
pushf
mov
loopne
rolb
sbb
xchg
ss
lods
shl
or
fimull
fldcw
mov
cmpsl
jnp
mov
pop
pop
int
ja
insl
adc
mov
sbb
push
push
stos
scas
loope
sub
fmul
loope
shrl
lds
sub
stos
and
ds
jecxz
mov
test
add
fstpl
int
add
pop
add
add
xlat
cmpsb
lods
adc
cmc
fdiv
sbb
and
cltd
inc
insl
sub
mov
pop
xor
icebp
stos
push
or
aam
xchg
mul
adc
jno
jae
pop
into
popl
ffree
dec
xchg
out
ret
into
mov
adcb
cmp
and
fs
sbb
aas
mov
push
mov
push
pop
push
xchg
dec
or
pop
fsub
inc
ret
test
xor
inc
addr16
dec
stc
inc
cmp
fwait
std
mov
mov
ljmp
push
sub
lods
aam
repnz
sbb
bound
dec
jne
shrb
jb
popf
movsb
loopne
mov
mov
xor
inc
inc
inc
pop
pop
dec
mov
pusha
push
push
mov
shrb
mov
insl
jecxz
dec
sbbb
dec
enter
or
mov
xchg
jbe
push
inc
pop
jns
aas
lods
fmull
or
or
pop
add
add
inc
push
cmp
add
ljmp
leave
xchg
adc
mov
lret
dec
in
pushf
jp
sbb
pop
adc
imul
dec
pslld
ret
test
lods
shl
mov
hlt
or
ljmp
pop
pop
sarb
mov
push
shrl
arpl
jecxz
mov
push
push
pop
lcall
mov
incb
push
popa
pop
arpl
imul
inc
enter
inc
iret
ds
jns
cwtl
inc
or
cmp
mov
sbb
imulb
fcomip
repnz
lret
pop
insl
add
xlat
pop
rorl
push
stos
movsl
inc
jnp
ret
in
imul
lret
pop
inc
aaa
sub
jle
out
pop
inc
test
sub
aas
jae
test
nop
sbb
jl
mov
out
jnp
inc
push
inc
xchg
fildll
jns
xchg
pop
ret
xor
xchg
in
clc
bts
push
add
jnp
mov
in
adc
add
add
add
mov
cmp
aaa
xchg
aad
stc
push
push
push
andl
push
bound
mov
jmp
stos
insb
xor
push
dec
popf
cld
ljmp
shll
testl
jae
pushf
sub
inc
fwait
jmp
xchg
cmpsl
xchg
push
push
xchg
dec
push
or
pop
lock
js
cmp
or
insb
ds
mov
xchg
enter
jb
pop
mov
jns
xchg
xchg
adc
and
ret
mov
sub
inc
aad
push
test
fsts
aaa
in
mov
rolb
cmpsb
jp
jg
cmp
out
sub
nop
fs
mov
pop
test
xchg
cmp
xchg
loop
int
out
jno
insb
sbbl
scas
jb
lods
or
dec
and
rclb
jl
mov
xchg
adc
xchg
out
xchg
stos
mov
push
pusha
jae
jp
mov
xor
pop
dec
das
mov
add
xlat
pop
xlat
jg
mov
xor
stc
pop
loop
add
pop
add
add
pop
jg
jbe
dec
mov
sub
and
out
fiaddl
imul
scas
outsb
fildll
or
mov
ficomps
imul
cmp
mov
ss
jle
inc
xor
xchg
jbe
sbb
testb
outsb
pusha
outsb
xlat
test
inc
cmpsb
jno
mov
jmp
pop
sub
enter
gs
mov
movsb
test
insb
push
fnsave
mov
test
mov
mov
push
add
mov
clc
xchg
sbb
jecxz
imul
cmpsb
fdiv
out
xchg
push
jg
imul
mov
mov
fwait
enter
push
stos
mov
xchg
push
inc
cmovs
pop
fsubr
sti
pusha
lods
push
push
movsl
jns
testl
outsb
dec
bound
add
fdiv
mov
pop
pop
jmp
jmp
add
add
pop
add
adc
inc
jns
jge
int
pop
mov
sbb
mov
mov
cltd
push
push
test
mov
jmp
inc
sbb
aas
pop
shll
mov
jmp
pop
cmp
std
xchg
xchg
ja
aas
scas
pop
in
inc
and
sbb
movsl
adc
lock
jle
inc
push
pop
out
jbe
in
in
sar
or
sbb
jnp
ja
rcl
notl
mull
daa
ret
push
pop
or
stc
inc
aam
sub
xor
int
pop
out
inc
mov
cwtl
stc
jo
push
push
jno
cmp
aaa
jp
fsubrs
int
fs
in
cmp
hlt
aas
test
iret
popa
fdivrs
aas
sub
call
pop
xchg
sub
mov
sbb
pop
rol
in
test
mov
xor
fwait
stos
add
mov
fcomp
stc
adc
lock
add
pop
add
add
dec
jg
cmp
sbb
mov
mov
add
push
movsb
js
fldt
mov
sbb
adc
daa
lock
mov
test
xor
addb
popl
test
xor
lret
je
pop
cmpsl
cli
insl
mov
add
dec
in
call
and
cmp
lret
mov
or
add
dec
ret
or
sbb
dec
lds
je
push
in
call
pop
mov
mov
add
sbb
push
dec
or
xchg
sbb
popa
or
pop
lods
out
mov
dec
std
gs
pop
cmpsl
mov
call
cs
lods
or
fldenv
sub
das
sbb
shll
stos
pop
push
push
add
or
mov
push
mov
jmp
jnp
shlb
dec
outsl
jae
std
mov
push
sbb
jne
push
add
push
pop
push
jmp
sbb
cmc
add
pop
add
add
jb
dec
cmc
lret
mov
dec
mov
das
jle
sub
adc
and
loopne
icebp
xchg
jb
jecxz
in
and
enter
inc
or
mov
aam
int
clc
movsl
mov
loopne
sub
movsbl
mov
outsb
repz
inc
fcomps
clc
lods
adcl
push
test
ficomps
cld
lods
jne
xor
out
cmc
cmpsl
push
xchg
ja
mov
shll
adc
push
add
xchg
or
daa
add
pop
mov
or
test
or
mov
enter
gs
push
enter
push
dec
cmp
cmp
or
lds
xor
in
add
cmpsb
repz
aas
ret
iret
in
jle
pop
mov
jle
test
xchg
int
pop
adc
fnstsw
aas
fisttps
enter
pop
inc
rclb
mov
mov
push
push
stc
ret
aad
outsb
aam
pop
inc
pop
lods
pop
cli
cmc
mov
and
add
pop
add
add
pop
or
pop
test
scas
addr16
ja
sbb
lock
repnz
xorl
in
mov
jns
and
inc
movsb
imul
mov
cli
xor
cld
bound
sbb
sbbb
nopl
xchg
out
stos
jg
adc
popl
sbb
push
xchg
pop
inc
fildll
pop
push
enter
push
sbb
mov
in
ss
ret
xbegin
sub
jle
pusha
mov
inc
shll
jp
and
xor
pop
jb
mov
push
enter
mov
pop
inc
pop
mov
push
push
aam
dec
pop
mov
cmp
push
ljmp
lahf
or
jns
mov
sbb
stos
fisttpl
iret
jbe
test
mov
mov
mov
stc
xor
xchg
leave
call
test
scas
lods
sub
cmpsl
lods
jo
add
loopne
add
stos
cltd
inc
popf
jae
out
pop
dec
add
es
add
add
add
inc
jne
pop
mov
ret
sbb
pusha
mov
jne
clc
pop
subl
outsb
pop
rcrb
jmp
loopne
mov
mov
cmp
xor
jne
jle
lods
pop
dec
push
mov
fcomps
xchg
scas
dec
fstpl
je
or
jno
imul
cld
jg
push
jns
jmp
mov
ds
outsl
outsl
ja
loope
inc
pop
pop
mov
dec
cmp
lahf
sbb
push
jge
scas
clc
outsb
test
sbb
mov
xchg
cmpsb
js
jle
add
xchg
lock
shll
or
inc
mov
xchg
scas
cmp
mov
stc
stc
or
icebp
inc
xchg
jmp
dec
cmc
or
xchg
sbb
mov
push
push
jb
cmpsb
dec
fisubs
repnz
into
jae
shll
sbb
stos
aas
pop
loopne
lcall
add
aam
int
mov
mov
or
les
add
pop
add
add
pop
inc
xchg
mov
xor
cmp
fldcw
inc
cs
inc
jb
xchg
xchg
outsl
mov
adc
and
fs
pop
pop
inc
out
adc
repz
mov
daa
dec
sbb
jl
dec
inc
push
mov
xchg
clc
iret
scas
dec
cmp
loope
push
or
imul
lods
std
or
cmp
mov
dec
ss
xchg
jle
daa
pop
lahf
jae
and
inc
adcl
jmp
cli
jb
js
stos
jge
repz
add
arpl
incl
dec
xchg
cwtl
xor
push
inc
add
cs
fwait
sbb
push
inc
ret
mov
repz
sti
cmp
sti
mov
das
pop
subb
fisttpl
dec
bound
je
mov
pop
lds
pop
dec
sbb
sbb
sarb
mov
jne
mov
cmpb
add
add
arpl
addr16
add
mov
pop
or
pop
add
add
add
push
xlat
scas
enter
fldcw
daa
sbb
adc
dec
das
or
setae
add
stos
fwait
mov
adc
jb
cltd
xor
subl
xchg
or
jmp
inc
inc
rorb
test
jg
ret
cmp
or
sbb
mov
push
xor
jns
jns
addb
pop
add
mov
mov
sub
lahf
xor
jbe
mov
decl
test
mov
or
dec
sub
dec
push
movsb
out
popf
xchg
sub
or
insb
sarl
cmc
loope
mov
aam
int
xlat
fwait
sarl
xchg
push
sarl
repz
dec
or
outsl
dec
enter
fldln2
mov
mov
shl
aas
aas
xchg
or
enter
cmp
sub
in
cmpsl
subl
out
cmp
cmp
pushl
ja
jp
xor
sti
add
pop
add
add
jb
xchg
or
lcall
jno
and
sbb
mov
insl
icebp
mov
add
xchg
fwait
aas
jne
ret
xchg
dec
jb
xchg
js
inc
inc
adc
aad
daa
out
mov
mov
ljmp
push
and
insl
lods
jmp
sbb
les
hlt
in
mov
cmpsb
cmp
jbe
jge
lret
push
scas
data16
addr16
sbb
aad
enter
cmp
add
inc
rcll
stos
in
loopne
xor
subb
imul
mov
push
or
and
fistpl
mov
cmpsl
push
jb
mov
cltd
aas
or
scas
sbb
cmpsl
and
in
insl
data16
dec
adc
add
adcb
sub
and
cld
pop
jmp
lods
jle
rcr
into
cmp
aas
lods
bound
mov
pop
dec
add
push
scas
decb
fiadds
cld
add
pop
add
add
stos
mov
popa
or
sub
fwait
sbb
jg,pt
nop
das
ja
xor
adc
dec
fiaddl
lock
or
push
xor
pop
rorl
ljmp
lds
ficompl
enter
pop
mov
fs
sbb
sarb
cmp
icebp
sbb
fsubl
cmp
inc
in
or
lret
test
xor
and
sub
jo
and
mov
and
lcall
stos
das
cli
rolb
fdivr
aaa
test
scas
adc
xchg
rorb
jge
jecxz
xchg
inc
fmull
xchg
in
mov
sbb
pop
imul
lret
xchg
sbb
jae
jp
lea
xchg
hlt
rorb
xchg
jb
cld
dec
das
xor
xchg
shlb
insl
jno
sbb
or
or
push
in
in
cmp
pop
insb
jecxz
scas
adc
ds
das
iret
lea
fs
jo
in
aaa
xchg
and
movsl
mov
mov
mov
sub
jne
sub
add
pop
add
add
xchg
mov
int
test
test
js
test
mov
ret
push
push
rcr
int3
and
xchg
jnp
sub
ror
dec
int
getsec
mov
add
mov
jno
pop
and
out
mov
sub
pop
cs
push
cli
add
cmpsl
push
pop
cld
mov
adc
aaa
leave
cmp
daa
cmp
inc
cmp
sbb
daa
push
es
out
cmpb
fdivrl
mov
dec
and
scas
stc
cltd
out
sbb
lods
push
mov
iret
test
inc
sub
cmpsl
add
jl
lcall
repnz
jecxz
push
lahf
ss
pop
pop
mov
pushw
fisttpl
sbb
lock
hlt
xchg
mov
jp
test
stos
inc
addl
repz
jge
add
sbb
andl
cmpsb
ret
nop
rcrb
add
fdivl
mov
xor
dec
js
incb
add
add
add
insb
in
aad
mov
mov
jecxz
xchg
adc
adc
mov
rolb
pop
dec
adc
mov
sbb
popa
mov
or
mov
sbb
jmp
add
imul
repz
sub
push
repnz
cltd
push
jmp
or
enter
pop
and
dec
cmc
or
dec
dec
lods
mov
adc
jo
pop
aas
mov
inc
pop
mov
inc
icebp
insb
or
jl
cmpsl
aas
xor
mov
push
inc
std
cmpsl
movsb
lock
sbb
cmp
cmp
aaa
in
ffree
rcrl
stos
pop
jae
loop
sub
fisttpl
mov
add
add
aad
or
loope
dec
add
out
adc
push
int3
sub
mov
imul
pop
sbb
rorb
loope
mov
adc
inc
stc
mov
mov
xchg
mov
incl
add
add
add
dec
xchg
xchg
lods
jl
icebp
inc
inc
call
fadd
inc
push
and
sbb
shrl
hlt
dec
loop
xor
mov
fildl
fs
xchg
repz
daa
movsb
fcomps
ret
inc
and
cmp
xchg
fwait
scas
dec
cmp
xchg
lret
mov
cmpsb
test
lcall
jecxz
roll
or
out
and
test
iret
outsb
mov
jg
push
mov
pop
aaa
shlw
ret
jae
add
dec
aas
iret
jmp
xor
cmp
mov
jae
rorl
das
and
mov
and
int3
push
dec
adc
nop
mov
lcall
ljmp
in
jne
ss
xor
faddl
pop
aaa
andb
dec
mov
xchg
jg
dec
cmp
mov
daa
push
inc
std
cmp
add
xchg
sub
scas
pop
mov
sub
cmp
add
add
test
icebp
cmc
test
or
dec
add
dec
icebp
shll
lds
push
shll
std
bound
dec
mov
xor
mov
jne
fisubl
popa
jge
jle
mov
lods
xor
xor
jecxz
jl
dec
jae
out
dec
lret
stos
hlt
in
fldl
aaa
mov
repz
mov
outsb
adc
push
dec
xor
add
and
mov
sbb
js
add
out
dec
popa
notl
mov
inc
in
out
std
add
and
pusha
imul
dec
pop
and
sbb
push
cli
sbb
xor
push
inc
inc
add
xor
jo
mov
add
std
cli
test
xchg
mov
lcall
jle
out
into
mov
pop
int
jne
mov
in
cli
shl
add
or
mov
sub
loope
xor
ret
add
hlt
fisttps
test
cmpsl
pop
inc
add
add
add
add
aam
push
lret
push
mov
cwtl
jns
sbb
mov
sbb
cmp
sarb
in
ret
push
nop
xor
lods
into
pop
call
call
pop
ljmp
js
pop
pop
jb
cmp
sbb
idivb
rcll
or
imulb
mov
insl
inc
mov
pusha
lcall
cmp
sbb
or
hlt
sti
xchg
jbe
iret
push
outsl
out
cmp
imul
jmp
push
adc
ss
ficomps
mov
jns
mov
push
push
aad
sbb
pop
pop
cli
stos
out
lcall
aaa
dec
sbb
inc
sbb
cwtl
stos
stos
adc
fldcw
jb
divb
stos
adc
dec
mov
pop
adc
jmp
cld
scas
xchg
bound
adc
flds
test
enter
xchg
ja
cmovle
mov
into
fwait
cmc
pop
sub
dec
add
add
add
add
ret
add
in
pushf
addr16
cmp
pop
and
xchg
sbb
add
push
dec
jl
add
pop
jae
xor
outsb
insb
in
xchg
insb
aas
fiadds
mov
out
orb
jb
cmp
jno
cmp
xchg
fcmovu
xor
loop
into
lock
sti
cmp
ss
xor
lret
dec
xor
sub
stc
out
push
dec
test
notb
dec
pop
adcb
rol
fistl
lcall
insb
lods
cmpsb
cli
dec
aas
imul
into
dec
adc
sub
pop
push
push
mov
daa
jle
dec
mov
sbb
cmp
fistl
push
in
push
into
xchg
xor
and
xchg
imul
rolb
push
cmp
clc
cmpsl
push
mov
js
or
jne
xchg
dec
in
gs
test
xchg
sbb
ret
jp
add
xor
mov
pop
mov
icebp
fimull
pop
add
add
sbb
xor
inc
bnd
jb
xor
iret
inc
jns
xchg
inc
inc
pop
xor
dec
pop
outsl
push
xchg
pusha
dec
notb
push
repz
mov
mov
push
cmp
and
cwtl
es
jmp
mov
scas
movsb
push
push
mov
repnz
je
pop
aaa
dec
sbb
xchg
shrl
xor
cmp
adc
add
and
push
pop
test
es
xor
loope
sbb
mov
jo
std
mov
ret
or
dec
fisubrs
sbb
inc
out
sub
xchg
fcomps
out
iret
sub
cli
or
fnstcw
ret
aaa
xchg
adc
xchg
lahf
sarb
cmpb
push
xchg
test
dec
mov
mov
or
shl
push
sbbl
clc
lahf
push
ret
jge
lods
and
iret
mov
sti
inc
out
aas
mov
scas
adc
ljmp
add
add
sbb
ficomps
mov
mov
dec
sub
mov
xorl
int
rorb
movsl
pop
xchg
sbb
xchg
stos
lret
jl
incl
inc
aaa
negl
fwait
lahf
cmpsl
mov
mov
jno
in
cld
mov
xchg
imul
dec
add
repnz
add
inc
cmp
imul
or
ss
and
lahf
cmp
in
jp
scas
adc
sbb
mov
mov
jo
mov
add
mov
xor
cld
mov
cmpsl
in
cmp
test
stos
sub
xchg
mov
jmp
std
cmp
adc
ljmp
adc
jb
fdivrl
cmpsb
in
sbb
sahf
pusha
into
inc
lret
inc
div
mov
test
mov
ret
sbb
xor
add
bnd
jl
movsb
mov
pusha
add
add
and
dec
js
stos
aam
dec
dec
xor
lahf
inc
or
nop
dec
jbe
insb
adc
adc
adc
ljmp
hlt
rcr
mov
stos
pop
sarl
mov
sub
sar
or
fcompl
add
test
jb
xor
sahf
fnsave
fmuls
enter
or
lds
call
push
shrl
jl
lods
lock
mov
mov
popa
pop
add
fbstp
lds
cmp
adcb
inc
pop
adc
insl
mov
in
mov
mov
mov
pop
pop
adc
inc
jle
insb
push
jne
jno
jae
stos
shr
lea
ret
ja
cmp
cmc
xchg
insl
inc
add
testl
subl
test
push
push
add
enter
mov
sub
rcll
ja
pop
test
add
add
in
out
ja
fists
ss
pushf
addr16
add
pop
add
add
pop
dec
adcl
aad
xchg
jecxz
mov
orb
xchg
or
mov
pop
dec
push
gs
nop
sub
daa
and
sarb
add
inc
cwtl
cwtl
push
jecxz
push
pop
loopne
hlt
and
lods
jns
daa
hlt
test
stos
loopne
shr
push
mov
outsl
add
jnp
pop
test
jbe
mov
jmp
sub
adc
cmp
sbb
lods
out
dec
inc
mov
xor
xor
push
jns
xchg
sub
pusha
mov
fsts
lret
or
xor
leave
psrlq
in
mov
and
jg
push
mov
mov
lret
lods
sbb
mov
lret
dec
outsb
mov
cwtl
inc
shrl
xor
imul
fldcw
dec
sbb
repz
dec
or
xchg
sbb
and
scas
cld
sbb
call
xchg
insb
clc
and
cmpsl
into
xor
decb
add
add
add
pop
in
daa
jle
add
inc
mov
outsb
pop
add
pop
add
add
cs
insl
aas
and
mov
mov
cmp
fisttpl
dec
or
cld
jae
dec
fidivs
cwtl
or
mov
ljmp
aad
add
rcr
sub
mov
jae
movb
data16
jp
cmp
cmp
or
lahf
inc
cltd
push
lcall
dec
fldl
jb
mov
mov
lea
fdivl
or
gs
int
dec
es
into
mov
idiv
jno
lcall
flds
sbb
in
popa
mov
sbb
inc
js
dec
aad
incb
push
cs
mov
notl
mov
mul
add
jns
outsl
mov
adc
xor
xchg
rorb
repnz
xchg
imul
cmpsl
cmpl
cs
and
lahf
or
lret
dec
xchg
insb
jo
pop
or
xchg
sub
mov
jg
idivl
mov
inc
jne
add
pop
add
add
iret
sbb
sub
icebp
insb
es
test
adc
push
xorb
test
adc
or
fadds
add
xor
fptan
sbb
mov
lcall
add
lcall
addr16
inc
sbb
insl
add
loope
jno
sahf
adc
mov
inc
outsb
cmpsl
xchg
sahf
pop
out
mov
ss
mov
loope
jb
addr16
lcall
xchg
icebp
cltd
loop
lds
sarl
jnp
mov
pop
js
out
mov
jae
sub
aad
adc
pop
pop
pop
stos
ljmp
sbb
movsb
ja
xchg
decb
pop
lahf
loope
loope
cmp
jno
sbb
test
dec
and
mov
jge
push
les
xchg
lahf
lret
sbb
mov
xchg
and
shlb
mov
xchg
add
sti
jg
les
push
jl
add
pop
add
add
iret
mov
xchg
xchg
repnz
jp
fbld
cmc
mov
lock
lret
ret
sub
aad
ror
add
inc
sbb
mov
or
addr16
or
andb
enter
mov
or
std
jbe
sbb
clc
gs
cmp
inc
mov
cli
sbb
or
es
pop
out
fldl
xchg
xor
test
and
call
sbb
sbb
inc
push
pop
inc
ja
and
xor
daa
lea
jns
rcrb
push
xor
sbb
inc
xor
dec
xchg
xchg
fwait
jo
scas
mov
lahf
inc
lods
in
and
out
dec
jmp
cmp
xor
lret
es
add
mov
mov
pop
fcmovnbe
add
lcall
fnsave
out
xlat
lahf
and
add
jnp
fnsave
xchg
notb
jbe
orl
add
add
add
push
mov
bound
add
add
mov
xchg
aad
inc
mov
adc
jle
call
imul
or
pushf
mov
out
sbb
stos
mov
or
leave
sbb
jg
jg
and
int3
cmp
mov
pushf
cltd
add
jns
insb
cmpsb
popa
cmp
dec
aas
jl
das
xchg
and
out
pop
nop
push
mov
movsl
ficoml
rorb
xor
cmp
fisttpl
fdivr
loopne
mov
xchg
push
andl
mov
fldcw
call
int
ja
cwtl
lret
daa
sub
test
push
out
imul
jb
icebp
fdiv
push
jge
in
movsl
das
sbb
mov
cmpsl
imul
jne
jae
in
aaa
imul
aam
cmp
mov
add
scas
scas
sub
or
aam
push
jns
mov
in
addl
add
add
outsl
mov
inc
loop
dec
aam
andl
add
add
pop
xlat
cmp
adc
mov
outsb
iret
push
jno
in
sbb
fwait
enter
loopne
fcomip
cmp
cmp
repz
sbb
dec
push
xor
xchg
movsb
xor
mov
ds
xorl
es
int
mov
gs
pop
or
repnz
imul
ss
fistpll
pop
sub
mov
pushf
into
inc
sbbl
push
fxch
ret
mov
push
out
pushf
imul
mov
lea
xchg
sub
inc
or
mov
mov
jns
jp
fstp
loop
mov
cli
shrb
out
pop
xchg
jmp
mov
jle
frstor
test
nop
outsl
flds
rol
sub
outsl
shll
sbb
push
dec
sbb
mov
mov
mov
jg
ja
fwait
and
out
mov
lods
push
mov
fwait
hlt
mov
adc
inc
add
jmp
fidivl
fs
xchg
or
add
add
add
lret
or
inc
test
sub
mov
shlb
lahf
cs
out
rorl
in
shlb
sbb
push
dec
jmp
pop
shrl
fwait
xchg
int
iret
jl
mov
mov
aaa
decl
dec
dec
mov
mov
mov
sub
or
orl
movsb
pusha
xor
sub
bound
and
dec
mov
jno
push
fwait
push
sub
lods
sbb
push
repnz
or
iret
in
sub
dec
xchg
lret
sti
arpl
dec
jae
fcomps
gs
jno
xor
loope
nop
adc
and
lods
outsl
fwait
xchg
ret
adc
stos
mov
bound
and
and
jno
push
xchg
mov
shll
leave
mov
adc
je
push
or
out
filds
lret
jb
cmpsl
shlb
xor
loopne
cmp
stos
hlt
repz
daa
icebp
in
push
pop
add
xor
negl
mov
out
cwtl
or
add
sub
xor
dec
or
in
ret
std
pop
bound
xchg
sbb
loope
adc
xchg
shll
ss
adc
repz
and
daa
inc
test
idivb
jl
in
ja
aad
pop
mov
or
jmp
sub
mov
scas
adc
sbb
ds
sarl
inc
aam
not
xlat
sbb
mov
cld
and
ret
sbb
jbe
rclb
and
dec
loop
out
dec
cltd
pop
cmp
call
xchg
rep
xchg
inc
inc
sub
cmp
cmpsb
ja
pop
jmp
fstps
xchg
scas
add
testl
jl,pn
js
cmp
jnp
jb
rcl
out
jp
divl
cmp
xchg
xor
pop
je
int
lods
pop
inc
mov
bnd
sbb
fucomi
into
lods
mov
out
je
jmp
mov
cmpsb
jge
repnz
and
add
cli
inc
jg
int
cs
addr16
xlat
lahf
push
add
pop
add
add
mov
push
jb
fstpt
adc
dec
mov
repz
in
loope
jp
xchg
imul
loope
mov
hlt
and
add
dec
jle
insl
inc
roll
mov
pop
les
dec
scas
inc
jecxz
push
lahf
or
push
sub
fucomi
ss
push
pop
fwait
sbb
stos
mov
sar
iret
idivl
mov
shll
rcl
dec
push
mov
fstl
pop
scas
push
xor
out
push
sbb
sub
inc
jo
divl
dec
ja
xor
sti
lds
clc
push
and
std
sub
stos
xchg
sahf
xchg
gs
xlat
inc
in
xlat
and
jne
add
les
or
out
cmp
in
into
cmp
idivb
jg
into
cld
xor
push
inc
aas
out
xchg
mov
cmpsb
push
cli
mov
xor
push
nop
dec
test
push
insb
cmp
mov
jne
push
aaa
mov
cli
xor
test
add
xchg
std
cmp
jle
fistps
push
sbb
pop
add
add
mov
mov
aam
cmp
sub
in
pop
cld
inc
cmp
adc
push
adc
jg
cmc
push
leave
fdivr
jecxz
sub
cmp
decl
arpl
int3
add
mov
scas
xchg
lahf
push
je
cmp
pop
and
or
data16
cs
or
pop
push
push
test
in
mov
add
out
dec
popl
mov
mov
pusha
or
out
scas
jbe
mov
test
into
xor
push
fistps
inc
pop
lret
ds
lret
test
mov
pop
xor
mov
popf
pop
push
mov
in
gs
and
jbe
add
cmp
cmpsb
fdivs
daa
ljmp
ljmp
cmpsl
les
inc
bound
mov
mov
popa
add
mov
pop
leave
xor
popa
hlt
add
iret
xlat
fimull
int
cmpsb
lods
adc
add
add
add
push
movl
mov
jmp
arpl
and
xor
loop
outsb
rcll
daa
mov
jmp
and
add
mov
add
ret
add
aas
sub
ds
jmp
jb
mov
sub
inc
popa
sbb
mov
enter
xor
push
out
mov
imul
fidivl
cmc
sub
out
bound
and
xor
data16
or
and
cmp
hlt
push
in
inc
repnz
clc
cwtl
inc
pop
mov
imul
das
sbb
pop
sbb
lds
scas
mov
outsb
mov
andl
nop
mov
aam
mov
cmp
loope
jmp
out
jne
fmull
pop
aad
inc
inc
rorb
jb
fbld
or
push
sbbl
sbb
je
hlt
fs
ja
cli
add
sub
iret
outsb
jmp
in
pop
outsl
mov
adc
add
add
add
test
push
movsl
sub
xchg
outsb
mov
mov
xor
sbb
inc
xchg
shll
and
gs
clc
rcll
fsub
add
or
das
scas
or
mov
sbb
mov
inc
out
ret
cli
jl
iret
jbe
add
sub
push
xchg
popa
push
or
adc
aaa
into
pop
out
lcall
fcompl
pop
or
int3
push
std
pop
pop
xor
movsl
cmp
pushf
loopne
test
push
movl
into
mov
sahf
sub
dec
testl
sbb
cmp
add
mov
push
repz
out
fldt
ljmp
inc
sbb
das
dec
insl
mov
sub
mov
and
dec
pop
ret
mov
stos
inc
lea
or
lock
mov
daa
pop
hlt
mov
das
xor
stos
sbb
sbb
std
sbb
stc
cld
or
dec
outsl
stos
lcall
add
lahf
repnz
pop
xor
mov
cmc
xor
and
pop
out
adc
test
xchg
add
mov
scas
movsl
mov
xchg
fcompl
sub
lcall
mov
mov
notb
cmp
inc
and
xchg
inc
popa
dec
test
shl
sub
icebp
mov
lret
mov
test
fwait
dec
imul
movsb
adc
movsl
xchg
ja
divb
in
mov
mov
mov
jae
sbb
loopne
icebp
xor
lahf
xchg
sbb
inc
inc
adc
cmp
add
mov
mov
xor
ret
addb
xchg
jbe
movsb
out
push
push
or
add
add
nop
hlt
push
out
dec
shll
xor
xchg
test
adc
sub
push
stos
or
dec
pop
test
scas
cmpsb
push
stos
shll
cmp
sub
push
push
pop
scas
ss
ret
mov
rorb
jp
inc
cmpsb
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
cli
call
jbe
push
lock
xor
inc
popf
xchg
or
add
sbb
inc
push
rorb
inc
jbe
rorb
test
out
mov
sub
or
mov
dec
cmpsb
lahf
outsb
test
or
ja
jns
and
cmp
push
dec
push
dec
clc
out
das
jg
or
in
inc
stos
mov
xchg
clc
mov
es
hlt
ljmp
lods
xor
lahf
in
mov
adc
sti
shrb
sbb
lods
sbb
jecxz
sbb
je
xchg
icebp
dec
mov
inc
push
ds
lret
ret
mov
imul
sti
stc
mov
or
inc
into
std
daa
cld
lret
adc
jb
dec
push
inc
push
xor
xor
lahf
and
orb
loop
aam
repnz
mov
sahf
pop
xchg
dec
sbb
adc
jno
pop
pop
es
fnstcw
add
mov
dec
pushl
iret
out
pop
leave
adc
add
add
add
add
xor
mov
cmp
jge
xor
jb
push
mov
ljmp
pop
cmp
fldl
cmp
jp
push
stos
xchg
mov
popa
mov
sub
xchg
sbb
push
push
shlb
bound
inc
mov
call
push
hlt
shrl
sahf
add
pop
mov
mov
mov
adcl
push
mov
dec
sarl
jp
and
sti
xchg
hlt
mov
jge
xor
add
mov
xor
subb
cmc
cs
popf
repnz
jbe
aas
aas
or
xchg
or
and
xchg
pop
jbe
mov
stos
mov
fldt
scas
loop
push
xor
and
int
mov
adc
xchg
xchg
mov
sbb
cmp
lods
jo
pop
sub
inc
ja
pop
aas
pop
jmp
mov
rclb
add
sbb
cmp
cmpsl
pop
cltd
hlt
loopne
outsb
jno
pop
mov
cmpsb
mov
imulb
cmp
mov
cmp
mov
cmp
stos
aam
iret
mov
push
sub
fwait
mov
outsl
fsubrl
adc
lods
stc
test
ds
lret
faddl
add
es
inc
shll
pop
popa
mov
daa
add
fnstcw
mov
rol
int3
cwtl
push
adc
sub
scas
push
adc
mov
ljmp
xorl
sbb
mov
sub
and
mov
je
andb
xchg
flds
jns
adc
call
cli
dec
add
mov
les
mov
mov
movsl
and
push
sbb
mov
inc
das
pop
out
imul
in
movb
insl
xor
cmpsl
sub
mov
add
xchg
jae
ja
div
fisttpll
cmpsl
push
add
pop
add
add
or
pop
cmp
push
dec
dec
stos
in
fsubrl
and
mov
mov
sub
push
cmc
cmp
pop
in
xchg
pop
push
xlat
pop
mov
xchg
or
gs
mov
sarb
adc
imul
lret
push
inc
push
popa
in
fsubl
and
jbe
jbe
inc
jns
int3
mov
jecxz
into
jns
xor
fistps
leave
inc
or
sub
mov
adc
pop
sbb
mov
enter
stos
and
jb
jbe
shrb
rcrl
and
pop
jb
in
xor
shll
fildll
mov
inc
test
cmp
mov
sub
and
add
pop
imul
push
insl
add
std
fidivl
mov
sub
add
cli
std
jg
mov
cs
ficoms
add
pop
add
add
xchg
lods
mov
sub
les
aam
xchg
gs
lods
rcrb
ljmp
mov
les
mov
pusha
mov
aaa
lock
add
jo
xchg
adc
or
and
loopne
adc
xchg
in
fistps
js
icebp
sub
dec
jb
sbb
add
fdivs
cmc
repnz
aam
mov
data16
add
rcl
inc
imul
sbb
cmc
pop
adc
mov
or
rolb
jg
in
mov
popa
shr
mov
inc
jns
jge
mov
leave
dec
cs
mov
cmp
ja
jge
outsb
cmpsb
sbb
mov
mov
call
leave
repnz
cmpsb
push
dec
sbb
add
ss
sbb
lahf
jne
cmc
xchg
cli
jmp
mov
lods
cwtl
outsb
sbb
adc
js
cmc
lods
pop
aaa
popf
push
inc
mov
jb
add
add
mov
std
incl
mov
movsl
hlt
in
add
pop
add
add
sahf
jae
dec
adc
out
xor
repnz
aad
imulb
sahf
jne
pop
comiss
lcall
sahf
xchg
cmp
mov
js
sbb
sub
adc
cmp
jl
sar
lret
pushf
pushf
cs
sub
int
cmc
mov
es
jp
cmpsb
nop
lahf
das
insl
jmp
or
add
pop
push
mov
fdivl
mov
clc
call
adc
in
dec
xchg
pop
mov
ds
mov
aaa
in
and
fwait
pop
lods
mov
push
jb
je
lea
loope
cmpsb
stos
add
leave
xlat
dec
mov
sbb
push
push
xchg
dec
sub
sub
movsl
fsts
inc
mov
add
mov
stc
dec
mov
loopne
les
sub
mov
dec
insb
mov
mov
sbb
mov
jp
inc
jb
xor
jns
loope
stc
adc
in
sbb
mov
fdivs
loop
pop
iret
aaa
jle
add
es
jg
pop
pop
mov
and
pop
add
add
jp
mov
aad
loop
jl
dec
ret
mov
add
adc
sahf
fildl
fildl
bound
fnsave
insb
push
inc
mov
mov
cld
push
xlat
inc
jmp
mov
adc
rcrl
add
sbb
adc
mov
sbb
stos
mov
in
in
or
rcr
sub
out
sub
ja
aaa
in
mov
ror
sbb
aaa
scas
and
push
f2xm1
xchg
mov
push
xor
sbb
lahf
std
shlb
aas
lods
fnstsw
loopne
ret
gs
xchg
jne
test
fbld
fwait
out
jo
fidivs
push
pop
out
aaa
mov
pop
in
mov
enter
adcb
push
jge
in
cld
test
jp
sbb
lods
xor
in
icebp
jge
adcb
xor
scas
idivl
jl
fildl
push
clc
or
mov
add
add
pop
add
add
fwait
lods
in
or
mov
inc
inc
jb
xchg
mov
pop
sti
xchg
xor
les
cmp
sub
ficompl
cmp
sbb
or
adc
shll
pop
pushf
add
movsb
inc
fiadds
pusha
mov
stos
movsl
addl
and
pop
sbb
push
mov
jecxz
test
enter
or
xor
xor
or
and
dec
test
cmp
add
mov
stos
orl
mov
cmp
fldcw
inc
jnp
notb
jb
rcl
movsl
outsl
cld
idiv
xchg
pushf
jno
call
test
and
push
repz
sbb
xor
push
xchg
ds
fistl
mov
dec
repz
mov
push
test
push
jo
aaa
mov
jp
lahf
xchg
adc
mov
mov
cmp
mov
add
stc
lods
xor
xor
loop
pop
jg
cli
sbb
add
add
add
inc
scas
nop
mov
sub
test
mov
bound
int3
dec
push
popf
mov
hlt
jle
sti
movsb
lds
div
jl
pop
push
stc
adc
adc
lods
mov
xor
movsb
pop
shlb
fadds
inc
push
fldl
nop
aaa
sbb
jae
sbb
xchg
insb
push
mov
out
int
dec
push
adcb
jno
push
fwait
mov
push
mov
aas
or
enter
mov
shlb
mov
xor
xor
adc
rcrb
into
inc
pushf
fwait
outsb
dec
shlb
cs
cmp
test
jg
mov
push
jnp
sbb
stos
ds
jl
mov
xor
or
jmp
jmp
pop
xchg
out
jbe
jmp
inc
lcall
pop
outsb
lret
lods
mov
out
xchg
dec
jmp
jae
cltd
dec
ficomps
es
dec
cli
cltd
dec
cmp
fmull
lahf
push
aaa
add
ficoms
stos
sbb
jmp
ljmp
jae
sbb
add
mov
sub
repnz
fwait
push
jge
mov
pushf
jo
and
dec
push
movsb
xor
cmpsl
imul
fwait
adc
pop
dec
mov
stos
jno
mov
gs
out
adc
xchg
cld
bswap
lods
mov
pop
jns
inc
roll
adc
mov
xchg
jae
add
mov
dec
aam
cs
xchg
xchg
fnstenv
stos
shll
jp
sbbb
vaddps
or
add
imul
imul
arpl
les
xchg
insl
arpl
fucomp
mov
jge
inc
int3
in
scas
loope
repnz
out
pop
int3
push
xchg
push
push
outsl
mov
mov
aaa
aad
pusha
dec
rcrl
sub
mov
sbb
xlat
adc
mov
mov
and
in
aaa
jo
lods
inc
loop
fcoms
lods
add
inc
int
jne
jae
sbb
popa
fwait
add
in
out
arpl
aas
in
xchg
or
add
pop
add
add
lds
push
xorb
dec
mov
sbb
movsb
aaa
ret
inc
icebp
hlt
mov
int3
ja
adc
sbbl
dec
ret
jno
pop
out
mov
lock
divl
push
pop
pop
and
sbb
cmc
pop
addl
jo
or
push
add
fstp
std
push
sahf
jne
lock
and
pop
ds
add
pushf
in
int
lret
cmp
les
rorb
cld
or
ret
jae
scas
ret
inc
shlb
xor
clc
mov
addb
mov
add
lahf
outsb
jmp
push
notb
push
fistps
mov
sub
repz
rsm
push
sti
into
aam
pushf
add
cli
cmp
fcmovb
adc
nop
cmp
andl
add
mov
mov
or
arpl
outsb
out
jg
xchg
push
inc
in
dec
or
out
cld
mov
andl
add
add
add
or
addl
push
loope
jp
add
insb
jnp
notl
xchg
call
sbb
imul
scas
cmp
fnstenv
pop
ds
mov
sti
out
in
sbbl
sbb
outsl
adc
xchg
xchg
or
or
mov
fsub
push
adc
dec
aaa
push
ret
xor
dec
mov
insl
test
mov
enter
outsl
lret
jnp
sub
lods
fimuls
loope
lock
popf
cmp
into
clc
cmpsl
mov
loope
or
sub
dec
sbb
pop
stc
push
fcompl
scas
jg
fcoms
insb
jbe
cmpsb
add
mov
sti
repz
jl
mov
pop
dec
push
lods
push
idiv
fsubrs
andl
jne
and
add
xor
int3
cld
pop
out
outsb
stos
xor
test
popa
mov
push
sti
bound
mov
aam
add
cmp
out
lock
dec
int3
jp
push
and
add
add
add
pusha
mov
int3
popf
in
sahf
bsr
movsl
adc
add
test
insb
divb
xor
sarb
jbe
inc
sub
jne
push
nop
dec
mov
dec
loop
pop
xor
sahf
mov
fmulp
dec
push
repnz
mov
popa
xchg
add
scas
jae
dec
sub
fdivrs
adcb
xorb
mov
dec
add
xor
push
cmpsb
dec
push
repnz
mov
push
into
cmp
add
pusha
add
jb
outsl
inc
dec
pop
enter
out
add
out
jge
test
loope
push
std
in
mov
jns
jp
xor
push
cmp
mov
aas
jns
out
bound
test
adc
mov
jns
fldenv
mov
lcall
mov
stos
xchg
dec
pop
fbld
inc
hlt
daa
xor
add
test
sbb
cmp
rolb
jno
aas
outsl
sbb
add
add
popa
icebp
ss
lea
fisubrs
lock
cmp
jge
arpl
pop
ja
movsb
pop
fwait
ret
inc
mov
aas
outsb
cld
int
cmp
cltd
sub
cmpsl
fcmovne
fcomps
pusha
pop
in
adc
push
sbb
out
cmp
pop
ja
daa
dec
mov
mov
lods
push
pop
xchg
test
xlat
or
pushf
lret
xchg
xor
lahf
jae
inc
sbb
pop
fsub
lret
test
sbb
mov
xorl
mov
jne
sbbb
sahf
test
and
andb
mull
lock
mov
clc
or
add
mov
scas
subw
pop
psraw
arpl
push
lods
stc
les
testl
lock
sbb
repnz
ret
mov
pop
sub
inc
scas
jne
pop
rcll
fildl
mov
dec
idivl
cld
fcmovbe
out
enter
and
add
add
add
fwait
add
mov
fists
xchg
jle
movsb
mov
insl
dec
jp
jmp
mov
sub
pop
dec
cmpsl
xor
jmp
dec
jns
jge
jne
push
xchg
sub
sbb
or
jbe
ljmp
add
movsl
nopl
mov
shlb
into
rol
adc
in
nop
cmc
leave
sbb
xchg
cmp
mov
xor
cmp
dec
mov
cld
adc
mov
arpl
loopne
cmp
mov
repnz
jno
mov
iret
mov
mov
test
cmp
in
aam
test
divb
stos
data16
dec
pushf
leave
mov
hlt
test
nop
jns
je
pop
sbb
pushf
psrlw
push
dec
cmp
push
imul
adc
add
ficomps
pop
sbb
jge
test
add
mov
iret
mov
adc
pop
mov
pop
add
add
cmp
mov
fldenv
xchg
jo
push
and
jne
ficoms
sub
or
fnsave
mov
pop
mov
adc
sbb
into
sbb
test
jb
lahf
cwtl
cmpsl
aaa
inc
sbb
out
dec
cmp
xchg
jnp
int3
and
cmp
inc
testb
mov
test
push
pusha
in
pushf
xchg
cltd
add
push
jbe
xchg
inc
push
pusha
or
and
dec
scas
into
add
dec
lock
andl
jmp
inc
stos
push
sbb
xor
mov
inc
repz
mov
dec
loope
in
ror
js
dec
cmc
adc
xor
cmp
dec
pop
and
jae
enter
mov
jmp
por
or
test
icebp
cmp
adc
dec
scas
xchg
sbb
mov
stos
clc
and
add
mov
lahf
and
cmp
data16
add
add
add
repz
mov
test
fcompl
sbb
jmp
mov
sub
daa
sahf
lods
ficoml
cmp
mov
sahf
fnstcw
pusha
dec
dec
sbb
and
iret
ljmp
pop
repz
inc
dec
mov
or
inc
pop
je
popl
cli
dec
jnp
ja
fdivrp
fnstenv
xchg
aas
nop
popa
adc
lret
aas
sti
mov
cld
aas
pop
or
test
insl
outsb
mov
or
or
fsts
sarl
mov
pusha
add
push
test
lods
out
sbb
jnp
and
inc
test
int3
ljmp
xor
mov
and
roll
jo
mov
pop
out
sbb
dec
or
shll
inc
repz
or
mov
testl
int
test
xchg
jmp
add
lahf
jg,pn
adc
lret
ljmp
test
out
rolb
shlb
cli
clc
cli
clc
sarb
js
mov
cmp
add
lret
sub
jl
loop
movsb
test
repz
in
aad
sub
rorl
fwait
sub
lea
inc
lcall
dec
lcall
mov
out
lock
xchg
cmpsb
shrb
adc
lds
flds
mov
mov
pop
xor
inc
popf
pop
dec
jns
sbb
cmc
sbb
mov
jmp
into
pop
punpckhbw
inc
repz
clc
and
push
testl
inc
int
lret
pop
or
pop
cmp
in
fs
clc
add
push
ds
lods
jno
icebp
repz
inc
inc
jp
push
mov
out
cmp
into
jge
fstpt
mov
xor
jg
iret
enter
xor
loope
ss
pop
xchg
cltd
cmp
movsb
mov
and
into
add
push
push
jbe
stos
adc
jne
inc
call
fnstenv
cld
add
jnp
out
add
push
rep
mov
add
pop
add
add
rolb
aaa
test
lock
dec
mov
js
mov
leave
xor
mov
scas
xchg
xor
inc
xchg
xor
stc
mov
xchg
mov
mov
lods
sarl
daa
push
adc
jno
ret
jno
xor
cmp
adc
lcall
sarl
ds
push
inc
mov
jp
dec
dec
cs
mov
xor
xlat
mov
in
sub
int3
adcb
test
cmp
dec
std
mov
insl
aam
cmp
pop
fadd
stos
inc
test
dec
add
sub
add
cmp
stc
fs
shll
inc
call
repz
lret
xor
aas
push
arpl
adc
call
cltd
dec
jle
divl
mov
mov
cmp
pusha
loope
out
fildll
pop
mov
xor
sub
icebp
icebp
add
es
data16
pop
sub
daa
leave
and
sbb
add
pop
add
add
or
push
ret
pop
repz
shrl
or
sbb
cli
push
lods
loopne
xchg
and
or
ret
inc
cwtl
das
pop
mov
addr16
inc
cld
pusha
outsl
test
pop
lock
mov
xchg
insb
aaa
cld
sbb
test
push
test
in
int
xchg
sbb
sbb
mov
inc
ljmp
lea
or
loop
orb
pop
loope
xor
iret
xlat
repnz
nop
mov
pop
add
test
xchg
add
cmc
mov
cmp
xchg
repz
adc
movsb
fimull
jmp
xchg
ds
fwait
int
pop
mov
mov
or
icebp
fcom
mov
fdivl
loop
popa
xchg
mov
xchg
aaa
xor
lahf
cmc
sbb
lock
lret
clc
mov
fldcw
xlat
mov
inc
dec
sub
add
add
add
scas
sti
stos
shl
lret
xchg
pop
jno
rcrb
push
xor
pop
jle
cmp
lods
pop
dec
inc
addr16
stos
fisubl
in
div
cmpl
cmpsb
inc
mov
hlt
imul
outsl
add
push
jmp
out
ds
xchg
in
push
or
std
and
aas
and
dec
cmp
out
cmp
cld
mov
aaa
mov
sbb
pop
push
sbb
icebp
sbb
or
push
cmpsl
dec
pop
imul
xor
mov
mov
mov
repnz
or
sbb
lods
inc
imul
or
add
add
fcomps
shrl
dec
adc
and
sbb
or
jo
ja
cmpsb
cmp
mov
iret
add
ret
sbb
ffreep
lds
inc
cmp
pop
mov
lret
add
pop
inc
inc
sub
add
or
popf
jbe
pop
xchg
cmpsb
sub
ret
ret
add
add
and
push
sti
cmpsl
push
mov
int
mov
pop
add
add
call
push
sub
adc
lock
in
push
sti
push
jno
cmp
pop
add
pop
inc
add
pop
out
ljmp
lods
xor
loopne
xchg
or
and
adc
movsl
and
or
sbb
inc
arpl
scas
mov
ret
call
mov
rcl
pop
or
or
enter
mov
fdiv
jno
sub
cld
cli
aad
push
shrl
insb
mov
xchg
lcall
fiadds
aam
or
mov
ret
ror
popf
mov
mov
or
push
and
xchg
jmp
inc
sbb
sub
or
shrb
mov
push
mov
rclb
push
arpl
sub
dec
mov
daa
push
xor
je
sbb
mov
lahf
xchg
xchg
jae
cltd
pop
addr16
dec
inc
loope
adc
mov
push
and
std
mov
ljmp
shl
pop
sub
add
add
add
aaa
xor
into
repnz
pop
xor
dec
rcrl
cld
dec
mov
pop
scas
pop
lahf
arpl
mov
pop
xchg
lock
mov
jnp
xchg
fs
pop
push
push
lods
ds
aaa
jp
rep
cmpsb
sarb
mov
das
cmpsb
sti
add
add
pop
push
movsb
pop
xchg
push
jmp
xchg
into
in
dec
test
arpl
ret
sub
int3
mov
std
xchg
mull
ds
pop
test
je
dec
outsl
imul
lock
aaa
adc
in
mov
sub
adcb
imul
mov
xchg
cld
sub
push
subb
xchg
push
sub
sub
scas
jo
cs
aaa
loop
xchg
sub
and
mov
adc
aaa
push
jb
lods
adc
adcb
mov
xor
lds
xchg
and
sbb
stc
add
mov
arpl
add
pop
add
add
xor
add
cmp
jp
push
clc
rclb
pop
xchg
jb
insb
in
jbe
cmpsl
fnclex
push
leave
push
jge
call
mov
imul
and
or
jne
cmpsb
mov
pop
les
sbb
test
pop
popf
xchg
daa
pop
cmp
js
sbb
push
int
mov
test
fildl
lods
arpl
sar
sbb
aam
iret
pop
test
repnz
cwtl
jge
cwtl
mov
in
pop
sub
shlb
fldt
in
rcr
sub
sahf
aam
cmp
push
loopne
fistps
movsb
call
dec
inc
sbb
outsb
cwtl
hlt
mov
rcll
and
jbe
mov
loopne
subl
jge
adc
fs
mov
notl
lret
cli
pop
popf
xor
mov
cs
inc
xchg
push
test
inc
cmc
mov
or
pop
mov
fiaddl
ret
ficomps
cmp
sub
jo
push
add
pop
add
add
or
push
hlt
rcr
and
dec
xchg
ss
push
leave
push
add
sahf
les
add
mov
mov
ja
out
fmull
pop
xor
xor
mov
cmp
adc
std
adc
push
cmp
lret
popl
dec
sbb
and
cmc
mov
jp
mov
lret
xor
pop
dec
mov
push
adc
sbb
mov
lods
mov
dec
dec
shlb
bound
repz
push
bound
pop
daa
xor
lcall
sbb
xor
xchg
leave
data16
outsl
gs
jle
adc
test
jl
dec
mov
jl
enter
and
xchg
xor
xor
mov
xchg
popf
leave
cmp
adc
sub
mov
inc
icebp
mov
pop
mov
add
inc
cld
pop
push
sbb
das
sub
cmp
sub
hlt
leave
adcl
mov
mov
jbe
sbb
iret
push
jle
push
cmp
arpl
ja
js,pn
lcall
pop
add
add
sahf
xchg
xor
inc
push
das
or
inc
call
in
fwait
inc
aas
xor
enter
icebp
fwait
aas
push
push
mov
xor
jb
push
mov
push
sbb
ss
stos
cmpsl
inc
aad
icebp
fsubs
sbb
add
jns
sbb
loop
xor
jl
imul
jb
lods
imul
xchg
cmp
sub
pop
sbb
mov
xchg
ret
in
pop
cld
aaa
add
inc
cmp
xchg
and
test
inc
insl
xchg
add
push
arpl
ror
jb
push
andb
push
pop
add
test
push
adc
inc
jo
sti
imul
js
mov
popf
or
scas
mov
cmp
inc
add
cmp
into
push
mov
xor
dec
inc
dec
andl
fbstp
jle
scas
sub
movsl
inc
lds
dec
jg
add
stos
inc
cmc
outsl
cmp
dec
add
lret
mov
sub
test
js
add
pop
add
add
or
adc
xsaves
push
orl
lods
cmp
mov
and
imulb
jecxz
add
inc
sbb
ljmp
jo
js
mov
jl
ret
addb
nop
test
xor
xchg
jmp
ret
ja
aad
jp
adc
push
adc
or
js
xor
mov
xor
push
add
aam
test
decl
ljmp
add
out
rcrb
cmp
fs
outsl
push
sbb
ljmp
mov
call
stc
jmp
dec
xchg
jo
mov
paddusw
mull
ds
pop
lds
fstps
sarb
pop
or
cli
inc
les
fwait
ljmp
inc
outsb
ret
es
mov
jne
icebp
xchg
add
sti
pop
jge
divb
adc
adc
pop
add
add
cltd
pop
dec
popa
push
push
sti
sbb
inc
mov
std
enter
lods
addr16
iret
pop
jbe
dec
jmp
cmp
mov
lods
adc
mov
xchg
jge
cwtl
aaa
int3
pop
sbb
std
inc
push
aad
loopne
xor
xor
or
icebp
mov
xor
negl
lods
movb
xor
jbe
inc
aad
jns
adc
sbb
aas
add
loope
xchg
mov
add
or
cmp
pop
adc
xlat
dec
push
sub
nop
xor
sub
inc
push
mov
into
and
leave
xchg
inc
call
jo
ss
aad
sbb
icebp
out
push
adc
mov
add
jp
in
push
fstpt
sub
sub
dec
cmp
or
mov
call
inc
rolb
jne
push
add
fsub
std
in
popf
dec
int
hlt
pop
xchg
xchg
add
pop
add
add
push
mov
cltd
sbb
arpl
mov
aas
test
aas
iret
scas
jp
cmpsb
mov
in
dec
xor
popa
jg
adc
cwtl
and
sbb
ror
jb
dec
mov
lret
mov
cld
mov
push
pop
sbb
dec
sub
int
testb
jge
es
cmc
jle
or
inc
mov
and
std
sub
fs
lock
mov
xchg
mov
pop
das
xor
pop
dec
int
out
cmc
jns
mov
dec
ds
sub
add
lock
repnz
dec
loope
and
into
insb
hlt
test
test
adcl
jmp
mov
fs
jl
xlat
xchg
mov
push
mov
pop
shl
lea
movsl
push
fsubr
lret
adc
mov
mov
sub
dec
lret
fiadds
aaa
sub
inc
mov
lods
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
and
popf
jns
xorb
out
jbe
fdivl
add
in
push
neg
mov
aas
adc
add
decl
imul
les
sbb
xchg
pop
jnp
ja
out
shl
bnd
lahf
shll
imul
insl
add
rcrb
and
clc
jge
sbb
inc
enter
int
push
pop
jl
mov
cltd
jecxz
push
addr16
inc
and
jno
xor
test
or
push
hlt
jge
jmp
addb
daa
or
add
call
out
repnz
pop
popa
aas
mov
sti
sti
dec
repnz
ret
dec
sbb
stos
enter
subl
aaa
pop
data16
out
movsl
add
scas
nop
mov
iret
sbb
sbb
pop
mov
add
dec
in
bnd
mov
jnp
movsl
inc
repnz
and
mov
das
cltd
mov
add
add
push
sti
das
ret
lods
daa
nop
rclb
push
xchg
xor
add
add
add
cmpsl
pop
or
push
lcall
popa
nop
push
and
andl
xchg
add
xchg
icebp
xor
jno
cmp
cmpb
or
mov
stos
ja
std
insb
sub
stc
mov
gs
sbb
subps
fstpt
daa
mov
dec
push
int3
or
fwait
mov
out
scas
mov
scas
out
inc
in
insb
je
push
sub
mov
stc
xor
pop
jo
ss
mov
mov
das
rorl
push
mov
divb
inc
inc
popf
mov
jl
adc
call
pop
sub
in
or
addl
ret
lahf
inc
xchg
lret
jne
mov
cltd
xchg
dec
adc
fnstenv
ljmp
std
mov
sbb
jb
mov
fs
pop
sbb
in
loope
aaa
out
roll
add
cmp
sti
aad
loopne
mov
pop
fwait
xor
add
add
add
cmp
pushf
or
pop
fwait
dec
xorb
int
xchg
push
pop
lock
repnz
xlat
mov
bound
stos
mov
jl
add
mov
loop
fsubrs
notl
adc
sbb
cmp
hlt
lods
mov
mov
out
rorb
add
sti
dec
testl
pop
out
movsl
and
test
dec
out
inc
pop
inc
sbb
scas
in
xor
mov
mov
aad
and
jmp
push
xlat
clc
sub
das
sbb
inc
xor
popf
call
xchg
mov
xor
mov
lahf
icebp
push
xor
mov
pushf
jmp
ljmp
popf
sbb
nop
out
sbb
xchg
push
jge
mov
push
mov
and
cmp
xchg
cs
stos
ficomps
mov
dec
or
incb
ljmp
sbb
xor
add
add
add
add
cmp
add
bnd
data16
rcrb
cmp
adc
dec
xorl
dec
lcall
mov
xchg
xor
imul
out
sarb
hlt
sbb
jae
or
clc
xchg
mov
repnz
shll
imul
stos
cmc
pop
insl
sbb
inc
sub
mov
and
ja
and
stos
outsb
pop
int3
mov
jns
lods
cli
push
fmulp
cmpsl
outsl
push
sub
inc
inc
ret
ret
andb
nop
xlat
dec
aaa
xchg
enter
xchg
cmp
leave
movsl
mov
mov
aaa
cmpsb
andl
pop
sahf
out
cmpsb
stos
incl
sbb
mov
add
aad
fimuls
stos
xchg
inc
jbe
mov
dec
xor
sahf
ds
push
xor
add
add
rclb
fwait
aad
bound
add
pop
add
add
cmpsb
pop
inc
ljmp
jge
std
or
pop
js
int
int
mov
mov
cmp
pop
out
enter
fistl
cltd
fadds
pop
stos
jp
fstps
push
ljmp
shll
dec
dec
push
dec
mov
popa
mov
push
mov
pop
nop
adc
cmc
in
push
xor
mov
dec
cmp
mov
pop
repnz
or
sub
xor
in
negb
inc
fstp
cmpsb
fiadds
jge
pop
cmpsb
les
bound
pop
lds
dec
movsb
xchg
arpl
jbe
mov
or
jo
add
ljmp
pop
add
lods
mov
and
scas
and
xor
adc
arpl
cmpsl
idiv
inc
add
push
jp
stc
pop
and
and
cmp
out
test
sbb
xchg
cmp
stos
add
jbe
idivl
mov
aas
push
mov
add
pop
add
add
into
stos
and
aas
cld
cltd
adc
ljmp
mov
jbe
mov
je
adc
ss
addr16
and
pop
imul
cltd
cwtl
ss
xlat
idivb
cltd
aam
pop
imul
jecxz
dec
or
adc
sbb
js
fisubrs
push
pop
add
inc
cld
xor
sbbb
popa
add
or
imul
out
mov
cmp
mov
jae
clc
repnz
push
fldenv
ljmp
or
xchg
sub
sub
xchg
out
out
xchg
in
movsl
jo
push
inc
dec
cltd
add
outsl
aas
aas
fisttpll
cmc
jge
stc
mov
lahf
pushf
subb
xor
stc
repz
inc
mov
jae
nop
jg
neg
lock
jle
pop
lods
ret
dec
fdiv
cmp
dec
add
sbb
test
insl
pop
fcoms
add
gs
jge
and
outsb
sub
stos
fs
push
pop
or
and
sbb
pop
add
add
popf
cs
mov
fdivrs
sub
push
out
rcll
or
arpl
push
lods
jp
repnz
out
lahf
loopne
mov
jge
int3
dec
xor
xor
mov
call
or
jp
loopne
pushf
sbb
or
aam
and
cmp
sbb
fwait
or
cmp
sbb
inc
int
negl
xchg
rol
popf
sbb
xor
pop
and
dec
push
push
xchg
ljmp
lahf
mov
lds
mov
rorl
cli
push
cmp
dec
and
mov
jbe
mov
lret
or
adc
subb
pusha
mov
test
xchg
outsb
or
iret
dec
or
adc
pop
rcll
ljmp
push
outsb
int3
bound
jne
xchg
push
int3
and
lea
cs
int
bound
popf
fdivp
movsb
mov
push
int3
pop
and
cltd
lret
add
insb
pop
pushf
scas
fistpll
inc
ljmp
add
pop
add
add
cmp
fisttps
clts
jmp
ret
movsl
jmp
inc
mov
fildll
adc
jp
outsl
adc
fwait
sbb
dec
push
fsubrl
pusha
ficompl
int3
xchg
xchg
push
jp
inc
xchg
mov
sbb
ja
cs
mov
mov
xchg
repz
push
sbb
stc
mov
rcll
mov
adc
mov
shl
sub
jae
lds
sbb
outsl
jne
mov
std
jo
stos
sub
ljmp
push
push
repz
rcrl
popa
shll
mov
xchg
fs
dec
or
cmp
xchg
mov
aas
inc
push
out
pop
test
iret
mov
sti
pop
aas
paddd
mov
lcall
sub
mov
adc
dec
push
dec
mov
sbb
sbb
adc
jo
arpl
inc
pop
shl
scas
movsl
jae
push
lret
sub
inc
in
enter
add
add
cmp
out
lahf
push
pop
test
out
add
cmp
add
add
add
lahf
mov
cmp
sub
and
push
test
or
jge
and
bound
fucomp
dec
push
fldenv
loope
lods
xor
clc
fimuls
aaa
cmp
mov
lret
pop
fwait
call
mov
cmp
into
push
lret
mov
cmpb
mov
dec
fldlg2
sbb
outsl
movsl
sub
es
mov
mov
push
mov
mov
pushf
popa
dec
xor
dec
xor
lret
icebp
or
lret
and
pop
hlt
cmpsl
jne
test
inc
clc
or
out
in
mov
jns
es
xor
mov
jg
push
stc
ret
addr16
xchg
gs
mov
jmp
movsb
leave
sub
jo
in
sub
cmp
adc
out
cmp
pop
sarl
imul
sbb
aas
ss
pop
inc
dec
push
scas
dec
and
or
add
adc
dec
ja
aas
push
sub
add
pop
add
add
je
inc
out
repnz
mov
aas
add
sub
scas
lahf
hlt
xchg
jbe
fsubrp
cld
andb
rcll
and
sbb
jno
sub
pop
pop
daa
xor
push
scas
push
test
stc
mov
gs
push
and
mov
push
dec
and
mov
push
sbb
fdivrs
cltd
pop
rcrl
ss
jns
inc
jns
jne
adc
mov
pop
add
pop
adc
fcomps
push
int
jbe
add
out
or
mov
mov
or
xchg
cmp
repz
xor
adc
mov
mov
xchg
jns
test
rcl
pop
xchg
lea
xchg
ja
mov
or
data16
pop
mov
dec
pop
xor
fistps
mov
jl
cwtl
xchg
and
das
cmp
lods
repz
jne
jae
cmp
add
add
add
sbb
repnz
dec
and
fnstcw
and
data16
xchg
add
cmp
call
jge
fs
and
add
add
lods
push
jnp
movsl
insb
out
rcr
cmp
or
lea
mov
divl
fists
mov
inc
push
ror
jae
movzwl
and
push
insl
arpl
jg
and
lods
adc
int3
cmp
jmp
mov
fwait
pop
mov
pop
cmpsl
daa
dec
adc
mov
test
adc
and
gs
frndint
pop
and
pop
or
cs
or
arpl
out
mov
outsb
mov
push
mov
cmpb
lea
movsb
sbb
lcall
sub
xchg
notb
fsubs
js
dec
jne
bnd
sti
xchg
popa
or
pop
cwtl
sub
into
andb
cmp
lods
loope
jno
add
add
daa
push
cld
push
std
jmp
pop
adc
dec
mov
cmp
add
add
add
sub
mov
ror
mov
test
push
cmp
addr16
xchg
adc
daa
fimuls
and
clc
int
add
out
xor
mov
repnz
sbb
xor
enter
mov
xchg
add
outsl
xchg
xor
push
sbb
mov
testb
out
mov
sbb
push
push
imull
lods
sarl
cli
jl
arpl
repz
and
clc
testb
jo
lret
dec
iret
aas
sbb
out
lahf
jmp
inc
mov
movsl
mov
xchg
push
sbb
xchg
mov
lcall
aad
push
push
xor
orl
loopne
out
mov
shlb
cmpl
cmc
push
call
push
and
adc
imul
dec
stos
lea
scas
mov
add
add
add
sbb
dec
push
out
jge
mov
cmp
add
mov
dec
aas
aam
jl
pop
pop
fadds
int3
int3
pop
sub
jl
popf
mov
xchg
mov
and
mov
arpl
loopne
mov
xor
cmp
cwtl
or
jmp
scas
push
scas
jmp
xchg
mov
mov
jnp
sub
out
les
sti
insb
adc
ret
sub
mov
xor
jmp
push
lods
cmp
sbb
cltd
loopne
pop
sub
pushf
pop
adc
xlat
enter
jle
dec
negl
insb
xchg
jl
mov
sbb
cmp
mov
cmp
mov
rcll
sbb
lods
inc
leave
mov
in
test
pop
mov
cwtl
sub
push
sbb
ret
ds
add
mov
int3
xchg
pop
xlat
xor
mov
fs
push
ret
sbb
pop
movsb
add
idivl
mov
jnp
call
add
add
call
fidivl
cmpsl
and
loop
push
lea
xor
mov
movsb
mov
cld
hlt
xlat
cs
mov
push
ljmp
and
jp
clc
adc
jle
sarl
or
xor
push
outsl
js
jnp
lock
push
test
mov
fiadds
push
push
sub
cli
sub
pop
lret
cmpsb
pop
std
aas
and
das
jp
clc
inc
mov
lret
cld
femms
pop
rcrb
ss
stc
stos
pop
adc
fidivrs
sub
cmc
dec
lods
lds
pushf
ljmp
fisttps
rcrl
stos
pop
push
xor
ds
inc
jmp
pop
mov
cmp
lods
cmovge
loop
mov
jnp
sbb
jo
mov
jl
into
xor
sbb
int3
shlb
and
stos
dec
fdivrl
shrl
jmp
lock
pushf
or
adc
pop
lcall
mov
push
jl
fildl
mov
ja
jg
xchg
cmp
sbb
add
add
add
mov
cmpsb
push
mov
mov
es
mov
mov
pop
xorl
sbb
repz
call
test
fstps
mov
add
xlat
mov
xchg
xchg
aam
cltd
pushf
imul
mov
jmp
popf
test
adc
xchg
sub
sbb
or
xchg
xor
xor
and
and
sub
add
bound
cmp
xchg
sti
std
vmovddup
jnp
mov
hlt
lret
inc
mov
push
xchg
dec
and
addr16
sub
sbb
sbb
xchg
mov
dec
leave
push
mov
inc
fdivrs
mov
outsb
fldenv
fstpt
sub
popa
fcoml
and
out
mov
repnz
push
pusha
popa
lds
or
jge
inc
jp
les
clc
fnstsw
sbb
add
add
movsb
lret
lcall
and
dec
lret
jmp
imul
push
out
mov
add
pop
add
add
es
push
iret
ficoml
lahf
sub
aaa
cli
data16
jl
push
test
mov
mov
imul
mov
pop
bound
xchg
adc
mov
jb
cmp
adc
jno
dec
ret
jae
or
cmp
loop
or
dec
test
sbb
or
lds
aam
scas
sbb
jmp
movsl
add
and
mov
js
pop
in
pop
push
jns
das
das
push
lcall
sbbl
inc
ss
or
das
mov
push
adc
add
shl
pop
sub
mov
stos
dec
call
add
stc
lods
add
cld
dec
fisttpl
sub
aas
leave
repz
bnd
divb
pop
push
or
hlt
push
movsb
or
pop
mov
push
push
popa
cmc
nop
sbb
dec
lock
lock
and
cs
dec
gs
add
add
add
cwtl
loope
std
jge
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
sub
imul
mov
cld
xchg
hlt
nop
fdivs
adc
in
mov
fcoms
jno
lds
mov
cld
cmp
mov
dec
jge
and
sub
jo
jne
sbb
fisubrl
sub
cmp
cmp
mov
push
in
mov
iret
xchg
dec
or
shl
and
dec
sti
decb
or
cmpsb
xchg
mov
movsb
xchg
outsb
sub
xchg
mov
add
idivl
mov
pop
pop
mov
and
mov
rclb
out
mov
sub
fimuls
fnstsw
jecxz
push
sbb
out
cmp
push
mov
nop
push
xor
push
loopne
idivl
mov
dec
cmp
adc
inc
mov
push
jns
pop
xrelease
xchg
and
sub
in
fistpll
xchg
sub
enter
inc
imul
and
and
in
jno
push
xchg
pop
aam
xlat
sub
sub
add
jns
imul
push
xor
add
add
pop
add
add
push
adc
jge
sahf
push
jge
fsubrs
and
jg
sbb
cmp
shll
iret
dec
iret
pop
xchg
mov
mov
push
pop
pop
or
push
fimull
and
shrb
jmp
mov
cwtl
lods
xchg
add
jno
stos
add
sbb
pop
insl
pop
mov
xor
lret
movsb
lods
cs
aam
inc
out
xor
lahf
popf
jg
jg
call
insl
icebp
add
repz
orl
daa
push
sbb
lds
roll
cmpl
les
nop
dec
aad
or
andl
mov
hlt
or
into
leave
ss
xchg
xor
shll
adc
mov
pop
movsb
add
loop
ljmp
fisttps
xchg
movsb
cmp
out
and
fildll
add
or
rorb
out
dec
push
add
ret
jg
jmp
repnz
leave
or
adc
inc
add
pop
add
add
xchg
pop
push
loop
mov
jl
xor
mov
dec
stos
mov
push
and
mov
hlt
lods
jmp
dec
xchg
xchg
inc
cmpsl
pop
rcl
dec
decb
xor
mov
ds
orl
sub
int3
fsubs
clc
jno
ret
jno
fdivrl
cmc
jecxz
adc
mov
xor
and
mov
mov
rcll
out
dec
sub
movsl
pop
dec
pushf
mov
fcmovu
push
cmpl
lock
sti
fidivs
andb
pop
ret
cmp
adc
repz
int3
add
outsb
in
call
push
pop
es
pop
add
mov
mov
mov
sub
out
push
test
xchg
mov
mov
xor
inc
pop
dec
mov
clc
inc
sbb
lds
jp
les
mov
inc
dec
or
add
push
push
ret
mov
jmp
adc
mov
and
fld
pop
push
adc
add
add
add
or
cwtl
pop
or
aad
ret
out
jp
jnp
mov
orl
dec
xchg
dec
pop
jns
inc
inc
fs
jg
mov
scas
rorl
push
cltd
cmp
out
mov
xor
iret
lds
add
decb
add
dec
or
adc
xchg
push
inc
cmp
add
mov
ss
adc
inc
cld
mov
sub
repz
fisttpll
pop
sub
jl
jbe
push
fdivr
stos
mov
add
pop
stos
call
jecxz
mov
push
xor
mov
out
fsubs
lods
jae
aam
push
insb
jb
xchg
jmp
and
xchg
mov
aas
lods
loope
in
cmpsl
movl
adc
daa
insb
lahf
loop
jge
push
mov
mov
xchg
out
imul
daa
mov
push
hlt
jns
mov
mov
add
inc
icebp
hlt
gs
adc
ficoms
jbe
mov
add
add
add
mov
inc
insb
shr
idiv
add
into
psrld
inc
mov
cmp
xchg
adc
out
test
mov
test
fwait
std
cmp
movsb
mov
and
and
fdivrs
pop
loop
add
je
jbe
lods
jns
jmp
aad
jmp
mov
movsb
push
pusha
jg
not
dec
and
push
push
adc
or
popf
leave
mov
cmp
stc
xchg
xchg
or
inc
stc
xor
pushf
insb
xchg
insb
mov
inc
jle
mov
xchg
inc
xor
jb
and
aaa
dec
out
push
shll
scas
popf
or
test
or
fidivrs
mov
inc
mov
enter
fs
jb
je
xor
ret
sbb
inc
rolb
cmp
shr
mov
and
ljmp
cmp
sbb
xchg
in
mov
adc
es
lret
pop
add
aas
gs
mov
fdivs
add
add
add
loop
mov
out
xchg
fcmovnbe
cmp
xor
mov
aas
xor
xor
mov
add
jae
xor
or
nop
icebp
or
aaa
add
lret
mov
dec
ds
xchg
gs
pop
in
push
sbb
inc
mov
ret
cmp
aas
cmp
jno
cltd
pop
outsb
fildll
rorb
jp
hlt
ds
ret
jne
fucomip
stc
leave
dec
jle
xor
popa
out
jg
mov
mov
adc
addl
jns
fdivl
xchg
jmp
adc
inc
push
jp
loop
sub
dec
jae
movsl
or
insl
movl
and
test
jae
sbb
pop
cmpl
pusha
sub
test
pop
mov
sub
mov
mov
adc
mov
mov
repz
dec
shlb
xchg
sti
sti
mov
add
mov
out
fnstsw
mov
xchg
daa
dec
add
pop
add
add
push
jmp
dec
cli
movsw
repz
int3
jl
pop
mov
insl
cli
loope
fdivp
in
push
pop
jge
dec
fnsave
mov
cwtl
rorl
pushl
sahf
fs
inc
iret
sub
fdivrl
dec
add
jb
pop
adc
mov
inc
push
stos
mov
daa
adc
lods
popf
adc
dec
inc
push
mov
and
mov
mov
mov
test
lods
stos
cmpsb
stc
xor
sub
movsl
imul
xchg
inc
das
nop
add
movsl
cmp
sahf
ja
cmp
fmull
adc
ja
push
mov
scas
push
adc
imul
inc
sbb
or
addb
sbb
inc
clc
fsin
cltd
add
xchg
out
in
xor
test
mov
pop
js
cmpsl
dec
cmpsl
adc
mov
popa
or
push
stos
pop
adc
icebp
leave
sub
les
fildll
mov
sub
cs
add
pop
add
add
xchg
stos
cmc
add
dec
bound
loopne
cmovo
int3
data16
out
pop
loopne
les
clc
gs
xchg
aam
and
sbbb
cwtl
sbb
jmp
dec
dec
inc
push
into
jle
cmpsb
and
les
cwtl
sbb
cmpsb
sbb
rcrl
std
inc
or
addr16
add
push
scas
mov
das
jb
and
in
pop
xchg
or
or
adc
ret
jle
out
loopne
mov
adc
mov
lods
in
sub
pop
pop
and
mov
je
or
add
je
and
jp
test
movsb
xor
push
shrl
cmp
xchg
lret
sub
xorl
sbb
inc
add
dec
pop
adc
dec
lock
ljmp
xchg
xor
xchg
add
call
push
mov
push
xor
mov
push
sbb
jmpw
fnstcw
push
xor
xchg
sub
dec
add
pop
add
add
call
add
loopne
or
into
aad
adc
lcall
enter
pop
movsb
adc
ds
push
pop
cmc
lahf
or
push
add
andl
mov
das
insb
inc
into
push
pop
nop
mov
sbb
mov
ret
ret
stc
inc
mov
and
or
cli
xchg
leave
mov
or
push
movsb
test
push
sub
mov
repz
ret
mov
loopne
and
imul
sbb
inc
add
inc
nop
idivb
icebp
fdivs
add
iret
stos
sarl
movsl
mov
adc
pop
sbbl
jmp
int3
pusha
mov
or
adc
or
push
scas
xor
mov
pop
jle
inc
and
jl
inc
aaa
pusha
std
mov
test
cs
pop
mov
std
pop
sub
cmp
imul
out
mov
xchg
test
imul
inc
jmp
cmpsb
pushf
mov
imul
pop
and
xchg
cwtl
xchg
sub
inc
xor
loop
clc
loopne
fmull
and
push
xlat
lret
jmp
xorl
xor
outsl
push
and
mov
int
jge
inc
xchg
xor
jo
or
push
divl
push
movsl
inc
sbb
mov
mov
and
fbstp
push
xchg
dec
ljmp
add
adc
pop
rolb
cmp
lods
data16
push
popf
mov
mov
aas
jns
ret
mov
mov
fs
jecxz
and
bound
mov
inc
ret
dec
pusha
mov
adc
xchg
adcb
jns
mov
add
sub
mov
cs
xor
mov
mov
test
mov
push
dec
dec
dec
cli
test
and
xchg
mov
gs
out
adc
repnz
sub
sbb
std
add
add
dec
stc
mov
pop
sub
and
fldl
dec
add
pop
add
add
jae
cwtl
in
loope
les
xchg
jecxz
jns
in
jecxz
pop
xchg
addr16
jno
pop
lds
pop
jne
mov
lods
jnp
xor
push
or
pop
push
sahf
push
lret
fcmove
and
inc
inc
sbb
mov
or
es
movsl
xor
outsw
mov
xchg
push
ja
and
jb
repz
shrb
mov
test
dec
dec
xchg
jo
les
add
adc
out
xlat
fiadds
mov
scas
sub
packuswb
shll
xor
jo
inc
sti
cmp
es
push
xorb
fidivrl
sbbl
sub
adc
aas
mov
sarl
loopne
add
adcl
xchg
sub
push
aas
cwtl
inc
loope
sarl
in
mov
add
stos
pushf
das
dec
aaa
hlt
mov
test
xchg
jno
fcomi
or
repnz
add
add
jg
cld
dec
loope
sbb
push
inc
ja
dec
add
pop
add
add
inc
ljmp
sub
pushf
sti
sti
adc
mov
xor
jae
or
negb
rolb
in
mov
and
in
roll
inc
jmp
sbb
subl
popa
cli
add
es
and
mov
cmpsb
stos
add
push
pop
xor
lods
jmp
int3
cltd
dec
cmc
pop
xchg
jae
push
sbb
dec
test
sbb
or
mov
nop
roll
add
loopne
scas
inc
rcll
add
mov
movsb
lret
xor
imul
loopne
fwait
pop
inc
out
movsb
test
or
fistpll
adc
jb
inc
mov
clc
pusha
repz
dec
pop
push
cmp
mov
mov
push
adc
cmp
lods
sahf
mov
adc
and
adc
scas
mov
jl
mov
add
push
add
xchg
mov
mov
dec
add
pop
add
add
lret
aaa
sahf
cld
sub
adc
xor
adc
cmp
mov
or
add
ljmp
or
stos
out
add
sbb
push
sbb
jno
shl
stos
out
lods
rorb
sub
call
mov
cmp
gs
fisttpl
cld
push
sarb
jnp
adc
push
and
subl
outsb
lahf
ret
and
data16
add
adc
cmp
pop
adc
xor
ret
mov
jl
dec
andb
fisttps
pop
fwait
sub
cmp
hlt
xorb
xor
mov
sbb
jle
mov
cmp
xchg
enter
mov
and
inc
sub
fmuls
inc
jecxz
test
movsb
pop
out
jne
jle
inc
lds
sub
sbb
add
inc
mov
push
push
jmp
mov
add
add
add
add
mov
jp
mov
aam
sahf
pop
mov
je
lret
repz
jne
pop
enter
mov
out
fs
jne
cwtl
pop
test
dec
mov
popf
imul
xlat
sbb
ljmp
pop
add
cli
int
scas
movsl
or
rcrl
pop
mov
xchg
lods
push
inc
pop
jmp
push
scas
pop
int
mov
mov
xchg
xor
cli
inc
ret
int3
call
dec
je
insb
push
stos
push
adc
fwait
arpl
sub
hlt
sarb
cmpsl
mov
mov
mov
dec
out
mov
xor
test
cmpsl
jno
in
int3
out
mov
js
mov
cmp
mov
iret
sub
jge
addb
mov
xchg
scas
lea
sub
add
sub
pop
je
push
dec
xor
out
sub
psllw
pop
lock
add
sub
cmp
cmc
push
adc
xor
push
pop
push
add
pop
add
add
iret
push
mov
imul
push
dec
adcl
test
imull
int3
ret
call
roll
pop
xor
jae
out
xchg
out
xchg
movsl
mov
inc
push
mov
and
push
jp
pop
inc
enter
push
dec
es
mov
out
addb
push
pop
in
cmc
xor
push
mov
mov
cmpsl
loope
in
sbb
mov
scas
xor
fildll
sub
test
imul
xor
dec
cmpsl
pop
fcmovne
cmc
in
aas
jae
popa
xchg
adc
sahf
dec
sub
add
lds
shr
sbb
mov
call
adc
mov
outsl
xchg
jns
xor
rolb
stos
and
xchg
xor
adc
cs
int
aam
mov
enter
adc
sahf
jecxz
or
push
es
sub
gs
mov
add
push
shll
out
je
pop
inc
outsb
ljmp
pop
add
add
loopne
xchg
push
jg
pop
mov
add
mov
sbb
push
xchg
loop
ss
out
push
stos
pop
xchg
cmpsl
and
shrb
fcoms
fcomip
lcall
mov
push
inc
popf
cmp
rol
fisttpl
mov
push
mov
out
add
fimull
pop
nop
fistpl
scas
mov
lret
dec
aam
in
cmc
pop
adc
mov
mov
push
shll
test
push
dec
cli
in
imul
pop
sbb
mov
fcmovnu
sbb
in
xor
cmp
fadds
enter
sahf
mov
clc
and
mov
xor
shlb
test
jnp
pop
sbb
jmp
add
cmp
push
or
jp
inc
arpl
nop
pop
outsb
js
cli
stos
lcall
stos
xchg
sub
mov
xlat
pop
pop
rcrl
sub
popf
mov
imulb
mov
cmp
add
add
out
lcall
lock
mov
insl
push
add
pop
add
add
hlt
xor
xchg
lods
sub
repz
outsl
cmp
add
fs
sub
xorb
or
lods
bnd
sbb
ds
std
scas
adc
adc
add
mov
std
jmp
pop
clc
cmp
mov
or
cmp
dec
fcmovbe
add
stos
sbb
in
fldcw
lods
cwtl
sti
repz
mov
mov
mov
push
ds
adc
addl
or
mov
sbb
dec
mov
mov
pop
mov
out
push
iret
sbb
inc
mov
pusha
aam
mov
dec
addb
push
push
mov
in
inc
aam
enter
and
mov
mov
test
adc
xchg
push
test
inc
mov
je
clc
dec
divb
lods
lret
add
and
push
int
or
cmpsb
or
push
jmp
cmp
bound
imul
push
push
pop
je
add
pop
add
add
push
jl
dec
fwait
orl
cmc
mov
aaa
xchg
in
divb
inc
jle
popf
and
pusha
mov
push
notl
inc
data16
cmpsb
or
in
repnz
cltd
xchg
jnp,pt
pop
or
nop
or
xor
fnsave
icebp
cmc
aaa
jl
ret
aas
in
ret
jle
xor
out
xchg
push
xlat
mov
adc
call
ret
stos
aas
mov
cmpl
out
xlat
pop
cmp
addr16
cmp
incb
call
lds
jecxz
mov
adc
push
or
rcr
mov
jmp
or
adcb
sbb
sbb
aam
lods
imul
jg
jg
or
xchg
rorb
jnp
cmp
mov
adc
sbbl
in
push
jo
ret
inc
pop
push
jmp
add
jae
fwait
cmp
xchg
xchg
dec
mov
add
pop
add
add
arpl
je
shlb
inc
mov
sbb
jbe
adc
jb
imul
jecxz
ss
dec
and
scas
mul
xor
shrb
jle
andl
cmp
out
mov
cmc
fldt
mov
cs
out
inc
insb
inc
in
push
ja
add
hlt
xchg
dec
jge
in
dec
xchg
out
ss
lea
adc
push
dec
adcl
push
mov
mov
cmp
add
lret
jl
mov
test
ja
pushw
fisttpl
mov
mov
pop
cmp
inc
test
aaa
cmp
loopne
mov
lret
dec
adc
call
push
fldenv
mov
in
cmp
test
inc
int3
lea
fildl
and
dec
flds
mov
add
push
ret
mov
add
add
add
clc
mov
mov
pop
fists
and
pop
add
add
ss
jge
inc
sbbb
imull
insl
cmp
addl
pop
adcb
and
pop
lea
mov
gs
pop
das
push
and
xor
add
shll
pop
scas
pop
mov
xor
mov
test
pop
push
mov
mov
lcall
xor
repz
dec
mov
adc
adc
mov
mov
pop
jno
in
lret
andb
cmp
adc
xor
and
jl
mov
outsb
cwtl
ss
mov
in
inc
loope
enter
pushf
inc
test
cltd
dec
ss
popa
daa
aaa
xor
fmull
mov
aas
cbtw
add
and
dec
hlt
push
and
xor
xchg
jno
cltd
mov
push
lods
shlb
adc
xor
or
lcall
add
add
shr
mov
mov
or
add
add
dec
jle
sbb
mov
ss
push
push
sbb
andb
lret
in
jo
lods
cmp
repnz
add
jmp
stos
fistps
call
fistpl
mov
repnz
pushf
pop
adc
bound
cmp
lods
xlat
stc
js
loop
cmp
bound
ds
icebp
out
cli
mov
push
mov
hlt
jmp
inc
xor
pop
xchg
mov
jno
and
enter
call
pop
sahf
stos
aaa
push
in
clc
in
or
test
arpl
int3
mov
sbb
mov
mull
xor
sub
xorb
xor
xchg
add
xor
scas
insl
cmc
mov
scas
adc
push
xchg
into
pop
lods
iret
out
sub
cmp
test
loop
sbb
jp
adc
pop
and
sar
mov
inc
add
fwait
call
fwait
mov
add
mov
btc
mov
nop
push
add
pop
add
add
dec
dec
or
dec
jnp
push
jecxz
jne
mov
mov
xor
ret
call
pop
push
cs
jecxz
jbe
add
add
movsl
push
or
insb
cmp
popf
pop
jns
pop
movsb
add
sub
lret
out
jns
jge
or
sbb
test
jge
xchg
movl
cmpsb
test
in
or
mov
push
out
sbb
popa
cld
xchg
jge
push
movsl
dec
movsl
fstl
xor
sbb
xchg
adcb
push
sbb
rclb
push
or
bnd
out
push
dec
or
ret
sub
push
sbb
push
ds
loope
icebp
mov
es
adc
cmp
shr
cmp
sub
daa
insl
outsb
out
pop
mov
xor
in
popa
sub
xchg
push
sti
negb
inc
xchg
leave
push
add
mov
sub
jo
xchg
pop
add
pop
add
add
stos
ja
cld
mov
sub
inc
or
sahf
push
lret
xchg
sbbl
aaa
lods
pop
movsb
pop
jb
lea
xchg
decl
mov
inc
popa
sbbl
add
hlt
jnp
sub
mov
cld
pop
and
fwait
and
xor
std
xchg
into
dec
xchg
inc
inc
inc
cld
decb
rolb
pop
decb
mov
je
push
fsts
adc
cmp
xor
mov
adc
mov
push
cmp
mov
cmp
cld
outsl
mov
sub
push
xchg
arpl
mov
aas
lods
fwait
fcomps
idivl
data16
fisttps
fidivs
dec
mov
push
notb
jbe
test
in
jecxz
popf
jge
mov
divl
cld
cmc
mov
xlat
imul
arpl
fsubr
je
mov
and
ja
push
xchg
add
movsb
jae
jnp
mov
jne
ret
call
sahf
pop
add
pop
add
add
out
push
shll
mov
filds
jbe
fcoms
sub
push
jne
inc
pop
add
ljmp
cmc
out
sub
sub
xchg
pop
add
mov
xor
icebp
push
pop
dec
jmp
sub
sub
pop
add
mov
fwait
mov
push
xor
cmp
cmp
aam
cltd
adc
in
mov
push
into
push
adc
jge
jle
int
imul
xchg
icebp
xchg
imul
cmp
mov
lea
xchg
pop
outsb
insb
pop
and
fs
jp
pop
xchg
adc
fisttpll
mov
pop
pop
call
ja
shr
dec
xor
sub
cmpsl
xor
pop
imul
aam
out
call
mov
cmp
cmp
pop
mov
lea
add
fbstp
scas
adc
lahf
std
test
pop
add
pop
add
add
xchg
mov
lret
pop
sub
arpl
mov
pop
xlat
mov
inc
xchg
push
orl
test
sub
jne
sub
sbb
xor
fbld
sarb
add
int
lock
shrb
js
cmp
add
inc
push
sahf
push
fsub
adc
sti
mov
xchg
icebp
call
gs
pop
push
fimull
jl
rcrb
adcl
xchg
sbbl
aas
push
xor
or
fs
pop
sbb
or
sbb
dec
out
and
xor
jb
add
test
inc
pop
enter
sbb
loop
gs
lock
in
fsubrl
ret
dec
jmp
dec
popa
fiadds
outsb
and
dec
ficoml
into
fistps
pusha
inc
repnz
cwtl
mov
movsb
hlt
cli
int3
sub
mov
vcvtps2pd
out
sbb
mov
add
mov
pop
stc
pop
push
movsb
inc
lods
pop
add
pop
add
add
pop
mov
dec
sarb
mov
fdivl
cmp
hlt
inc
adc
clc
pop
sbb
mov
xor
pop
and
fcompl
iret
popf
xchg
int3
push
mov
ficomps
loope
mov
movsb
rcrl
std
jmp
dec
dec
ss
les
ror
ret
xchg
jb
push
xor
push
in
adc
dec
and
idivl
xor
mov
rcrl
dec
push
pushf
roll
xchg
mov
jb
outsb
mov
fs
push
pushf
bnd
and
outsl
out
push
or
movsl
sub
mov
ljmp
inc
lret
lret
movb
mov
xchg
popa
jmp
mov
imul
push
call
pop
aam
xlat
push
cmp
sbb
jmp
shll
jge
ds
cmpsl
subl
test
inc
out
outsl
ss
xor
sar
scas
movsl
sti
out
stos
mov
add
push
into
push
mov
fwait
cmpsl
shll
add
xchg
mov
shl
in
popa
jb
mov
icebp
loop
mov
addl
mov
add
aam
jmp
stos
popa
or
mov
sub
inc
mov
mov
sbb
jg
inc
push
lock
sti
lea
mov
cmpsb
cmp
jbe
pop
in
jmp
dec
xchg
jns
pop
test
adc
cli
jo
nop
jg
push
lds
ret
mov
push
lcall
lret
sbb
call
or
pop
xorl
lret
add
int3
or
sub
mov
xchg
adc
ds
adc
enter
outsb
xchg
movsl
pop
repnz
movsl
movsb
in
xchg
leave
add
in
out
ljmp
fsubrl
push
mov
dec
jb
hlt
mov
in
jo
pusha
mov
mov
jo
pusha
push
add
fmuls
cld
stc
repnz
scas
stos
mov
sbb
jae
sub
xor
add
xchg
inc
shl
xlat
mov
sub
ds
lock
add
add
or
sahf
ja
sarb
dec
sub
xlat
mov
sbb
shlb
sub
out
insb
insb
nop
push
adc
mov
dec
loop
in
andnps
mov
das
sbb
xchg
fidivl
mov
lea
xchg
adc
loopne
fxam
aam
add
mov
cmp
mov
into
push
aaa
je
sub
gs
out
cmpsl
mov
sbb
or
mov
push
shll
adc
cmc
rorl
stos
popf
sub
jmp
scas
nop
push
sbb
iret
mulb
fmuls
nop
cmp
mov
add
fsts
adc
insb
or
out
or
pop
loop
shrl
pop
out
int3
lds
add
fwait
into
push
fisttpll
adc
sub
fcomps
add
in
sbb
sub
in
mov
pop
ret
in
into
add
lahf
pop
lret
inc
and
push
rcrl
pop
add
add
mov
mov
clc
lcall
sub
cmpsb
mov
test
sbb
aaa
movsl
fisubrs
push
les
add
in
lock
int
and
dec
xor
aam
mov
dec
sbb
mov
outsb
cmp
dec
das
xchg
pop
cltd
fmull
sbb
pop
dec
in
jg
loope
pushf
loop
dec
in
add
sbbb
imul
stos
add
arpl
push
mull
adc
add
pop
outsl
mov
jmp
jge
mov
mov
lods
gs
in
push
lea
in
pop
decl
jle
in
xor
cmc
xchg
mov
decl
mov
in
clc
cltd
addl
push
sbb
test
or
mov
test
jle
jae
add
push
cmpsl
int
outsl
add
adc
pusha
inc
pop
pop
mov
cmpsb
cmpsb
test
je
ret
outsl
mov
ss
in
add
idiv
jg
pop
and
sub
add
pop
add
add
shrl
dec
fcmove
push
jmp
jge
cmp
iret
inc
aam
fnsave
pop
subl
inc
loopne
cmp
cmp
lret
idiv
or
test
enter
sbb
xchg
int
jge
fbld
loop
mov
bound
int
push
cmp
jnp
push
sbb
aad
lds
add
cmp
push
push
icebp
enter
in
inc
insb
mov
loope
pop
mov
jmp
call
mov
rol
inc
inc
test
out
imul
sub
or
dec
cltd
in
jae
cmp
push
loop
dec
cmp
test
push
pop
ficoml
inc
gs
int3
mov
and
sub
inc
aad
adc
aam
out
das
and
jnp
gs
fldt
arpl
fnsave
xor
es
dec
jecxz
lea
outsl
bound
stc
scas
inc
shlb
roll
add
add
pop
mov
mov
jmp
add
pop
add
add
pop
sti
sub
fmull
pop
shll
and
lret
sti
xor
imul
push
test
mov
jno
data16
mov
je
and
std
push
inc
fwait
push
pop
jp
sbb
xor
pusha
xor
sbb
dec
mov
loope
and
fsubs
insb
in
and
adc
mov
in
push
jae
xchg
ja
insb
push
cmp
or
mov
sbb
xor
mov
mov
andb
adc
outsl
ficoml
push
mov
add
push
fs
cltd
jmp
fdivs
mov
or
jb
and
scas
js
mov
xchg
mov
lcall
adc
cwtl
in
test
jno
mov
mov
iret
ss
mov
outsb
or
or
imul
faddl
repnz
movsb
jle
stc
test
popa
pop
fstpt
add
add
add
push
sbb
pop
outsb
aaa
xchg
jo
add
stos
fistps
mov
jns
test
fcomip
pop
lods
popf
mov
fcompl
mov
adc
or
and
scas
movsl
je
cmc
cwtl
hlt
jne
fadds
jae
mov
or
xlat
and
cmp
xchg
sbb
jbe
adc
jle
js
fsub
mov
in
dec
fildll
and
in
and
mov
mov
movlps
movsb
std
lret
jecxz
inc
movsb
pop
pop
and
xor
cmp
adc
jno
xchg
cmp
push
rorl
repz
in
inc
sbb
out
das
aam
out
and
dec
js
imulb
fwait
jnp
out
ret
mov
add
lret
mov
xor
shll
or
push
inc
xchg
add
xchg
mov
mov
fs
add
stos
sub
stos
out
jmp
sub
mov
repz
bound
add
add
add
out
arpl
nop
xchg
lds
xchg
pusha
xchg
outsl
pushf
insl
aas
and
xchg
sub
add
stos
loope
sbb
hlt
mov
imul
and
add
mov
adc
rcr
fmuls
cmp
sbb
jle
js
jae
jp
add
mov
mov
mov
arpl
lods
iret
pop
lock
inc
ljmp
pushl
outsb
pop
cwtl
sbb
addr16
inc
jno
sbb
mov
movsb
mov
pushf
pop
cmp
imul
jp
cwtl
dec
insl
data16
lea
in
dec
and
jl
in
popa
das
data16
cmpsb
or
mov
or
imul
subl
mov
mov
mov
jnp
js
pop
mov
fmul
insb
push
out
push
call
mov
add
dec
and
add
mov
fnstenv
push
add
add
add
add
lea
imul
stc
mov
dec
mulb
sbb
sub
loopne
or
inc
outsl
sbb
dec
cmc
xor
sub
hlt
sub
sbb
fdivs
push
xor
push
mov
dec
ja
jnp
out
xchg
test
ljmp
mov
add
out
push
mov
movsl
xchg
adc
dec
int
sar
mov
push
outsb
sub
cmpsb
dec
aas
lahf
aaa
loope
dec
jg
cli
cli
outsb
and
fsts
mov
inc
out
fs
shlb
add
out
loop
sub
pusha
inc
test
jp
dec
adc
pushf
cmp
push
xlat
push
icebp
inc
fsts
jmp
pop
hlt
test
sti
aaa
and
push
xchg
add
lods
mov
rorb
sub
inc
sbb
xor
jecxz
xchg
testb
or
sub
mov
xchg
into
bound
add
add
cld
je
jbe
decl
rcll
add
pop
add
add
inc
pop
xor
faddl
sbb
imul
push
in
or
jnp
mov
jne
sub
or
dec
andl
add
lds
dec
cmp
fimull
push
mov
in
imul
jg
cmp
lcall
sub
pop
int
nop
fwait
shrl
lret
xchg
pushw
imul
out
mov
in
cmc
aam
push
dec
imul
pop
dec
iret
jae
mov
or
in
cwtl
jbe
scas
mov
outsl
mov
fdivs
mov
dec
daa
xor
repz
sti
movsb
in
mov
add
xor
jg
mov
pop
xchg
int3
fisubrl
push
xor
rolb
add
sar
scas
adc
mov
adc
rdmsr
leave
xlat
clc
mov
inc
dec
jmp
cmp
mov
jmp
lret
jp
mov
push
add
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
or
fsub
stos
mov
sub
pop
xor
inc
inc
jbe
add
cmpsl
lock
stc
and
jae
icebp
or
or
cmpsb
sub
frstor
imul
add
addr16
inc
jmp
lock
fisubrs
pop
jecxz
js
fistps
popaw
insl
out
rolb
jnp
ror
push
cld
sti
scas
mov
xchg
sub
hlt
insl
icebp
xlat
xor
xchg
pusha
mov
hlt
sub
xrelease
mov
dec
push
insb
xor
push
aad
test
mov
pop
or
sbb
in
test
test
repnz
mov
fidivl
je
outsl
lahf
sarb
mov
fwait
mov
add
clc
loop
inc
inc
sti
jnp
mov
mov
andb
repnz
cmp
inc
xchg
sbb
cvttps2pi
xchg
aaa
mov
add
push
jg
shll
stc
add
pop
add
add
aaa
call
loope
xor
ss
cld
xor
pop
cmp
sbb
add
mov
popa
sub
jnp
gs
jne
ret
aad
pop
mov
sbb
dec
test
and
mov
repnz
jns
add
jecxz
cmc
lds
clc
dec
test
imul
sbb
stc
loopne
inc
flds
mov
sub
loop
cmc
out
in
stos
xor
mov
pop
sub
push
stos
fisubrl
nop
xchg
loop
jns
daa
mov
fdivrl
movsb
pop
aaa
xor
jp
cmp
rolb
mov
inc
mov
cmp
jo
in
pop
test
in
ret
pop
shll
fistpl
bound
dec
int
imul
adcb
pop
das
shll
lock
push
bound
adc
shrb
test
hlt
xchg
add
mov
fucomip
lock
cmp
mov
add
pop
add
add
iret
in
mov
and
mov
push
test
cmp
push
xchg
or
jb
mov
push
dec
int3
loope
mov
leave
dec
insl
lea
cmp
pushf
addb
inc
sarb
push
and
push
jo
fbstp
rorb
nop
inc
ljmp
sub
outsb
push
stos
lret
sub
ret
fcomi
aam
loop
xchg
cmp
aam
mov
xchg
jmp
test
jge
daa
lahf
insl
cli
loop
add
rorl
filds
divb
jle
jmp
addr16
out
mov
out
ret
sahf
cld
xchg
add
aad
dec
int3
es
push
lock
loopne
jo
push
mov
mov
adc
nop
jmp
xchg
insl
jne
cmpsb
cmp
fcmovb
cmp
sub
xor
clc
punpckldq
jns
push
loope
out
jp
xchg
mov
jecxz
ja
mov
imul
dec
out
iret
jmp
das
mov
and
pop
imul
add
fnstsw
jmp
or
jge
imul
orb
mov
dec
or
add
jmp
mov
pop
push
cmp
ret
icebp
add
push
sub
test
or
jne
mov
cli
inc
push
shrb
outsb
pop
inc
lahf
fucomi
mov
cwtl
ja
test
mov
sub
inc
imulb
or
fcompl
push
int
sar
or
sbb
clc
jns
clc
outsl
es
mov
cmc
xor
movl
or
ret
shlb
xchg
adc
mov
pop
adc
dec
cmp
mov
inc
mov
inc
insb
nop
mov
fdivp
and
cmp
gs
mov
sbb
int
lock
in
pop
mov
mov
add
cmpsl
sub
xor
cmp
jle
movsl
ffreep
mov
call
adc
jno
push
aad
mov
add
std
cmpsb
pop
or
lret
out
movsb
push
push
add
add
add
pop
xchg
aas
dec
test
cmp
movsl
or
test
mov
sbbl
popf
xor
stos
and
sbb
sub
mov
or
stos
push
sub
das
inc
mov
jmp
and
mov
js
call
fwait
fwait
push
icebp
jb
cwtl
rorb
cld
ret
aaa
dec
mov
pop
je
pop
into
sub
mov
nop
shl
insb
addr16
and
fsubs
xchg
adc
sbb
jmp
fldl
in
bound
cmc
ljmp
lahf
pop
sarl
ss
push
js
push
shll
cmp
mov
js
xor
outsb
std
mov
addl
mov
in
jg
lret
inc
ficoml
mov
and
call
push
pusha
inc
ljmp
repz
jp
fldl
rcrl
in
divps
lds
add
add
neg
std
fsubrs
adc
inc
lea
adc
add
add
sbb
xchg
bound
push
jne
pop
fstp
adc
aas
loop
add
mov
popf
push
push
rol
call
jno
xor
xor
ss
stc
xchg
mov
adc
jp
aaa
aas
push
sahf
jmp
test
xchg
or
cmpl
fidivs
mov
out
popf
cmpb
dec
jmp
xchg
int3
loope
stos
dec
adc
orl
push
fldl
and
mov
lods
test
xchg
out
sbb
and
jge
sahf
fldl
outsb
dec
xchg
push
roll
out
loop
mov
xor
cli
and
dec
daa
mov
mov
sti
ja
aad
dec
and
sbb
rorl
jns
push
pushf
inc
out
jmp
iret
test
cmc
sbb
cs
scas
cs
push
roll
push
fwait
xor
xchg
adc
test
leave
add
cs
adc
xor
sbb
add
pop
add
add
lods
add
jmp
daa
data16
lods
imul
out
and
test
roll
fs
cmp
cli
push
out
push
jl
rclb
bound
inc
cmp
les
xchg
out
roll
or
add
inc
mov
mov
xorl
dec
enter
mov
pushf
ffreep
aam
into
popa
in
cli
cmp
scas
xchg
push
adc
lret
dec
jge
push
mov
dec
lods
jb
insb
nop
les
dec
jbe
add
out
adc
flds
pushf
bnd
mov
push
and
fcompl
call
or
cli
push
fiadds
leave
dec
cli
or
aaa
mov
fs
sub
adc
mov
xchg
sbb
stos
cltd
std
xchg
inc
push
add
mov
mov
popa
mov
les
push
lret
lcall
out
and
outsl
fdivrs
add
out
insl
add
pop
add
add
jmp
xchg
adc
adc
test
mov
xor
jg
js
cmp
xor
dec
cmpsl
push
ljmp
inc
insb
ja
dec
out
inc
xchg
mov
mov
and
and
pop
sbb
sub
sub
pop
pop
jnp
xchg
loope
in
sbb
pop
adc
mov
xchg
cmp
add
inc
enter
sbb
push
cmp
sbb
mov
push
imul
push
dec
dec
ss
stos
or
dec
cltd
mov
pusha
or
push
and
test
inc
aas
popf
mov
xorb
std
call
xlat
aas
outsb
popf
loope
loop
mov
fildl
jmp
adc
inc
shll
out
mov
sbb
pop
cmpsl
mov
mov
xchg
push
push
cwtl
out
adcl
test
repz
mov
add
sub
ja
aad
add
xchg
outsb
add
pop
add
add
adcl
inc
xor
jecxz
mov
addr16
out
pop
enter
xor
jmp
cmp
inc
pop
fisubl
or
inc
out
mov
daa
adc
inc
add
fcmove
dec
and
pop
rorl
cld
sti
test
mov
jg
fisubrl
cmpb
ja
dec
je
aad
xchg
mov
sbb
rolb
push
jnp
fimull
push
in
cld
push
push
push
inc
out
out
jbe
mov
mov
cmp
mov
int
inc
btc
mov
push
xchg
imul
fisttpll
ret
insb
sub
mov
jmp
cmp
int
aad
lahf
lret
lds
jecxz
jecxz
pop
scas
sbb
into
mov
inc
xor
mov
lods
clc
ljmp
mov
push
cli
and
pop
in
cmp
rorl
jb
sub
push
push
in
scas
mov
data16
add
add
cmp
jnp
inc
cmp
adc
xor
add
add
add
and
xchg
cwtl
xchg
outsb
cmpsb
out
cli
stos
pop
fstps
in
loop
inc
adc
enter
xorb
test
imul
push
test
sbb
loope
jbe
test
and
ss
pop
rol
arpl
adc
jno
repz
sub
cmpsb
imul
jno
add
stos
loop
daa
adc
outsb
and
mov
jne
jp
xchg
xor
jo
rcrb
sbbb
cli
fsubl
pop
or
mov
push
mov
push
xor
hlt
iret
add
adc
adc
push
aaa
inc
pop
push
mov
dec
xchg
mov
mov
lcall
test
mov
push
adc
sub
subl
cmp
add
adc
fimull
in
inc
mov
mov
enter
xchg
push
mov
cli
xchg
jle
rol
call
cmp
add
add
add
popa
sub
inc
adc
or
sub
push
int3
push
push
and
inc
and
test
fwait
and
in
inc
push
sti
xlat
push
inc
or
push
push
ds
and
dec
insb
testb
or
daa
in
movl
lcall
loope
les
cs
xchg
mov
out
fnstenv
in
ljmp
mov
inc
movsl
seta
mov
inc
and
push
ja
cmp
or
push
popa
dec
pminsw
fldcw
push
cmpsb
cli
iret
fbld
dec
push
je
push
jl
xor
lods
enter
in
sbb
pop
rclb
sbb
adc
ret
into
mov
or
push
shll
je
inc
xor
pushf
mov
pop
aaa
outsb
ja
sbb
stc
mull
lods
fcmove
fs
pop
rol
repnz
sti
inc
push
in
test
adc
add
inc
aaa
dec
fwait
jnp
aad
push
adc
repnz
jno
add
add
add
daa
mov
mov
and
jp
cmp
clc
inc
fstpl
rclb
stos
pop
pop
test
jno
in
xor
dec
addr16
sar
jl
xor
imul
sub
pop
xor
and
sub
and
aas
mov
scas
outsl
adc
add
xchg
cmp
jb
mov
cmp
aad
add
loop
or
nop
rcl
insl
mov
xchg
mov
push
add
out
or
sti
xchg
dec
cmp
xchg
adc
xchg
and
je
test
insb
adc
sub
outsl
pop
arpl
mov
jbe
rorl
mov
scas
cmpsl
pop
xchg
jno
pop
mov
sti
mov
mov
inc
imul
bound
int3
cltd
dec
daa
sbb
push
bound
jo
jmp
mov
pop
imul
adc
stos
dec
aas
push
push
sbb
flds
mov
std
mov
fists
jns
jb
add
add
add
sub
add
sub
nop
aas
shll
mov
adc
mov
dec
sarb
sbb
in
jo
ljmp
push
jmp
xor
adc
jmp
mov
mov
push
test
subl
or
push
push
and
cli
mov
fldcw
std
jmp
fcom
cwtl
inc
push
lock
xchg
and
jecxz
test
dec
fcoml
fstl
les
jmp
in
out
dec
movsl
test
xor
pop
mov
fisttpll
lret
jle
icebp
test
lcall
mov
jns
test
aaa
sbb
jmp
out
pop
xor
add
and
or
ror
insb
dec
add
in
fwait
mov
adcl
xchg
filds
jno
add
add
pop
add
add
mov
out
push
aaa
mov
jb
fs
mov
push
mov
xchg
int
sbb
sti
aas
jb
aas
out
and
push
cli
xchg
int
cmp
mov
dec
fbld
movntq
out
enter
mov
adc
cld
mov
lret
in
push
mov
mov
and
xorb
into
icebp
xlat
cmpsb
dec
je
xchg
sub
or
into
jmp
clc
mov
pop
adc
outsl
sbb
sbb
sbb
jmp
sbb
fldt
std
sar
ss
or
int3
mov
fnstenv
xchg
xlat
fsubr
sahf
or
sbb
mov
ds
test
dec
jno
cmp
mov
xor
sub
push
push
stc
clc
ja
and
fwait
cmp
add
pop
repz
js
gs
jl
inc
in
mov
mov
out
lahf
aaa
inc
or
jne
push
je
add
add
add
cmpsl
mov
out
jbe
inc
jae
inc
or
imul
xor
mov
rcrb
mov
out
lahf
pop
pop
mov
adc
cmp
hlt
jns
loop
mov
jp
lea
popa
jns
push
jb
call
sbb
popa
sub
std
push
push
cmp
es
fwait
sti
lret
sub
jae
mov
pop
inc
stos
xor
loop
ret
mov
test
mov
jmp
rolb
dec
add
cmp
pusha
xchg
sti
xchg
mov
dec
out
push
es
jns
mov
out
xchg
pop
scas
lock
sub
int3
and
mov
adc
sbb
or
ljmp
sbb
out
mov
dec
dec
aad
jle
ss
repz
adc
sbb
lods
ficomps
pop
in
outsl
jns
jl
sub
orl
popa
mov
add
add
divl
dec
jno
subb
add
pop
add
add
lock
sbb
sub
push
xor
jecxz
bound
pushf
dec
inc
jne
lods
mov
mov
fdivr
gs
sub
mov
lds
sets
adc
test
fs
sbb
inc
xchg
dec
jnp
shl
sahf
in
lea
xchg
popa
xor
cmpsl
mov
push
adc
xchg
push
pop
aam
jne
cmp
pop
aad
cmp
je
mov
inc
popa
cmp
mov
mov
sub
cltd
icebp
pop
mov
cmp
cmp
pusha
xchg
sbb
jb
stc
rol
fildll
mov
push
and
push
xchg
xchg
movsl
dec
ja
aam
test
xchg
jb,pn
xchg
imul
jg
cmp
lods
int
push
mov
jp
adc
lea
mov
lret
sarl
js
les
add
inc
inc
jnp
dec
lea
or
movntps
add
fisubs
mov
xchg
inc
lock
hlt
mov
xor
add
pop
add
add
xor
mov
dec
inc
add
dec
imul
nop
in
sub
fwait
pop
data16
and
xchg
jno
and
aad
mov
test
mov
pop
adc
pop
outsb
inc
adc
out
lock
and
dec
call
into
pop
ds
dec
cmp
or
jp
data16
xchg
aam
lock
jecxz
xlat
pop
sub
fcmovnb
imul
add
jecxz
push
pop
xchg
fisttpll
hlt
adc
push
mov
outsb
jle
cmp
and
xchg
movsl
rcll
test
sub
fstpl
inc
push
call
rcll
daa
and
sbb
jno
shrd
add
add
sbb
pop
jle
adc
push
sbb
outsl
push
sbb
call
paddusb
xchg
aad
jne
add
popf
and
pop
mov
sub
test
push
fidivrs
dec
outsb
imul
dec
mov
movsl
add
mov
outsl
jne
ljmp
xor
add
add
add
jb
int3
in
cmp
lret
xor
adc
popf
push
jmp
sub
imul
cld
mov
mov
lds
mov
mov
test
flds
xlat
fidivrl
cmp
inc
outsl
ds
lret
mov
cwtl
std
test
xor
in
push
mov
mov
je
sbb
in
mov
xor
mov
jno
mov
imull
stc
repz
sbb
xchg
es
mov
insb
pop
aaa
mov
sbb
pop
inc
ficomps
loop
stc
test
mov
xlat
pop
mov
fwait
push
movsl
dec
lret
mov
int
es
ds
ss
add
jnp
fcmove
lds
dec
pop
fiaddl
sub
mov
cmp
test
je
into
xchg
jmp
mov
dec
pop
scas
sub
xor
in
imul
xor
sub
push
add
testl
lea
add
pop
add
add
popa
dec
jo
out
lret
push
cmpsl
das
mov
or
lahf
or
nop
adc
mov
xchg
xchg
xor
insb
adc
lds
fnop
aad
mov
js
ret
out
push
lock
jnp
sub
daa
pop
lods
jg
neg
jbe
or
jmp
rcrb
popa
sub
sbb
pushf
inc
and
push
pop
imul
test
mov
inc
stos
mov
mov
fcom
and
jb
sbb
cmp
movsb
adc
push
in
loope
and
add
lods
in
cltd
sbbl
outsl
pop
in
jns
scas
pushf
dec
pusha
dec
mov
mov
mov
xor
das
push
lret
jge
in
jp
rcr
pop
xor
das
mov
mov
lahf
aas
xchg
push
bound
jb
sub
pop
adc
push
add
push
or
mov
sahf
fwait
xchg
addr16
or
xchg
js
mov
scas
jp
xchg
add
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
xorl
xchg
dec
xchg
les
adc
dec
jo
push
pop
adc
mov
cmp
aam
push
lock
nop
jns
and
adc
push
fnstenv
arpl
fsub
sbb
jmp
ret
push
or
sahf
sbb
pop
orl
pusha
pushf
push
aam
ljmp
jns
cld
push
xchg
jb
sub
cmp
cwtl
test
loop
mov
decl
adc
sbb
inc
mov
pop
push
scas
sbb
sbbl
js
pop
out
sub
adc
ds
inc
aaa
jno
add
idivl
mov
adc
in
pushf
in
push
inc
in
or
js
inc
cmc
icebp
mov
stos
and
incb
mov
cmp
jl
pop
mov
pop
mov
dec
push
xor
ljmp
add
cmpsb
lods
rcrb
cmp
pop
inc
stos
jle
add
pop
add
add
in
es
aaa
and
cld
and
push
jbe
push
clc
push
add
adc
int3
push
push
mov
or
add
insb
pop
mov
adc
mov
and
or
repz
insb
mov
les
jnp
cmc
xor
add
loopne
adc
or
gs
dec
clc
lret
lods
xor
imul
outsb
and
mov
int
push
adc
inc
jbe
ja
push
out
dec
and
into
in
stos
in
mov
ficompl
dec
leave
ret
orl
in
loope
xlat
sub
arpl
in
mov
and
push
subl
add
popl
xchg
int3
mov
das
or
cld
imul
adc
rcr
xor
iret
mov
mov
cmp
xor
insl
add
pop
jno
movsl
lcall
lds
movsb
sbb
lret
add
add
xor
cli
mov
insl
hlt
xlat
test
add
add
add
cmp
lock
mov
sub
jne
or
mov
les
pop
or
sti
cld
and
pop
jns
jbe
insl
inc
cmp
dec
out
dec
inc
and
dec
mov
mov
jnp
cmp
xlat
ja
in
loope
jg
pop
lock
std
mov
in
enter
mov
xchg
dec
pop
jb
xchg
pop
test
mov
dec
fsubrl
xor
cli
xchg
jle
test
addr16
dec
adc
xor
xchg
and
adc
cmp
and
mov
fbstp
jnp
movsb
sub
push
lahf
sbb
mov
and
or
push
icebp
lock
mov
lahf
mulb
lahf
or
cmp
call
int3
inc
in
imul
mov
out
out
mov
outsl
sub
fs
test
syscall
data16
in
clc
and
mov
std
test
inc
jbe
stc
mov
add
pop
add
add
cwtl
dec
xor
das
adc
inc
jno
cs
jecxz
xchg
cmp
orb
mov
leave
daa
xorl
pop
decb
cmp
fisubrl
jb
jp
test
mov
mov
cmp
and
sysenter
popf
push
add
testb
mov
stos
fsubl
add
into
push
pop
xlat
out
aam
xor
lret
sub
popf
fcom
sahf
or
not
and
jl
sbb
sti
jbe
fcoms
int
xor
or
je
jecxz
js
inc
push
inc
pushf
fs
cmp
out
fistpll
push
pop
in
jge
xchg
repz
movsb
cld
xor
xchg
loopne
and
push
pop
or
insb
fcompl
adc
mov
add
test
sahf
js
sub
arpl
and
movsl
pop
inc
lock
inc
hlt
out
dec
push
enter
sub
add
xchg
xchg
jns
dec
out
movsb
sub
inc
cmp
add
add
inc
jl
or
lahf
aam
shl
frstor
pop
fs
push
xchg
xchg
sub
gs
dec
dec
cltd
sub
int
insb
ja
inc
mov
test
mov
xchg
enter
xchg
add
add
insb
ss
aaa
aam
mov
leave
fcmovnb
shlb
hlt
int
pop
enter
aam
rcl
add
outsl
pop
jae
jns
lock
pop
mov
sti
cmp
and
inc
jno
movsl
jae
insl
jbe
ror
inc
push
rol
test
mov
pushf
dec
jb
iret
push
fimuls
icebp
int3
aad
in
or
ds
lcall
xor
push
inc
xor
push
lcall
cmpsb
add
cmp
lahf
arpl
xchg
push
mov
popa
cli
fsubrp
adc
sbb
xchg
mov
mov
jo
scas
cld
data16
ficomps
lret
mov
adc
es
das
push
push
pop
lcall
sub
inc
sbb
add
scas
lcall
xor
xchg
aad
call
pop
add
add
push
push
das
bound
into
lea
xor
mov
mov
sysret
xchg
inc
idiv
aas
mov
adc
xchg
out
outsl
xchg
mov
imul
inc
or
aam
mov
jmp
mov
dec
test
jge
mov
xlat
jl
aas
inc
dec
add
lods
adc
inc
inc
mov
clc
mov
je
arpl
mov
jb
add
sub
shlb
and
rolb
mov
sub
push
and
dec
test
testl
push
fld
imul
jmp
push
xor
jo
push
fwait
rcl
push
and
movsb
out
xchg
cmpb
ret
mov
sub
fwait
or
lcall
imul
gs
mov
and
lahf
push
mov
aaa
add
mov
idiv
fnsave
inc
shlb
mov
add
add
mov
push
mov
push
xchg
inc
ss
pop
inc
movsb
imul
mov
addr16
cld
mov
out
adc
and
daa
push
pop
incl
pop
movsb
dec
pop
repnz
std
movsl
xchg
cmp
and
pusha
push
push
push
xor
mov
cmp
cs
sub
cmp
sbb
adc
js
adc
xor
cmp
sar
mov
push
lock
or
sbb
and
into
and
lea
aaa
sub
push
pop
lret
lret
jne
fs
repz
dec
movsl
leave
iret
add
mov
lods
incl
adc
and
mov
xchg
lahf
push
jno
jmp
ljmp
jae
inc
sbb
ret
push
push
jg
mov
sub
pop
or
sub
pop
cli
xor
fsubs
lds
cmc
movsl
jl
fiadds
xchg
call
lahf
pop
inc
test
add
pop
add
add
push
jmp
iret
or
lock
stos
add
lea
jae
leave
jno
mov
ficompl
imul
mov
or
dec
mov
and
in
cmp
xor
jle
xor
fs
out
and
and
test
bound
jb
dec
inc
fstpt
or
mov
std
movsl
add
jbe
jecxz
pop
pushf
mov
cmp
mov
push
xchg
stos
cmpsl
add
push
bound
push
in
xor
pushl
xchg
xor
rolb
les
ds
mov
jb
shrb
cmc
ss
mov
xchg
mov
inc
das
mov
scas
mov
ds
lea
adc
xchg
and
lret
outsb
mov
push
fdivrs
mov
imul
add
sti
iret
test
sub
jle
dec
aad
addl
add
cs
sub
sti
push
sarl
lods
or
test
adc
cli
insl
xor
cmp
cmp
out
int
iret
inc
and
lods
jle
xchg
mov
out
mov
incb
arpl
fcompl
out
scas
movsb
mov
out
repz
add
outsb
sbb
dec
mov
fistpl
rcrl
arpl
in
jno
repz
mov
movsl
ss
ret
ss
xchg
stc
mov
frstor
stos
popa
rolb
mov
inc
gs
stc
add
andl
dec
dec
adc
push
add
addb
rorb
stos
mov
clc
pop
dec
and
adc
cwtl
aaa
add
in
aad
jle
in
mov
pop
scas
mov
add
jp
pop
ja
adc
fbld
fstpt
mov
or
adc
mov
jne
cmp
vpsrlq
loopne
xchg
inc
lahf
sti
hlt
out
mov
jg
popf
mov
add
pop
add
add
dec
mov
out
lds
sti
pushf
sbb
out
or
inc
int3
stos
dec
pop
ljmp
adc
test
into
hlt
les
imul
mov
xlat
inc
jg
mov
and
in
gs
pop
xor
ja
xchg
mov
shr
xchg
in
jge
push
mov
test
add
mov
push
into
inc
mov
sbb
shrb
repnz
cmp
sbb
push
or
cld
ss
sub
sub
test
popf
std
lds
mov
fcomps
jecxz
ss
lret
addr16
pop
fcmovnb
mov
or
lahf
xchg
mov
push
xlat
pop
testb
push
xor
mov
scas
shrb
fwait
cmc
scas
or
pop
and
sub
sbb
jl
add
imul
mov
mov
cmp
sub
add
add
add
push
lahf
cs
dec
dec
jp
push
add
or
fcmovnu
hlt
pusha
fdivl
xchg
sbb
nop
cmp
add
dec
sub
jmp
lock
cwtl
and
inc
mov
out
enter
test
push
cwtl
leave
add
or
mov
xor
fimuls
mov
test
call
mov
les
scas
xchg
pushf
mov
leave
in
stos
lods
mov
cmp
out
out
jmp
pop
ljmp
adc
or
sbb
cmc
sahf
pop
out
out
loopne
div
subb
mov
jecxz
mov
sbb
jno
xor
sub
pop
push
adc
repnz
fwait
arpl
ja
gs
jno
jb
repz
jo
mov
pop
adc
jp
and
rcrl
push
inc
sti
mov
cs
push
push
stos
mov
jg
pop
daa
xchg
in
mov
add
add
pop
test
ljmp
roll
or
test
add
add
add
push
add
mov
lock
mov
inc
fisttpl
adc
sbbb
enter
dec
push
mov
or
or
test
cmp
xchg
in
ja
in
inc
mov
mov
pop
pop
int
cli
adc
loope
sbb
lods
imulb
adc
add
push
xor
scas
sti
or
inc
pusha
add
pop
or
sahf
inc
jb
fwait
decl
in
pop
jmp
ja
sbb
adcb
aam
inc
fldl
push
fsubrs
icebp
repnz
aam
je
push
or
and
addr16
inc
pushf
aas
data16
pop
fucomi
pop
cmp
inc
dec
aaa
mov
sti
test
insb
cld
out
cld
test
mov
filds
pushf
push
sbb
loop
aam
push
icebp
out
and
scas
cmpl
cmpsl
fs
out
push
jno
mov
shll
lahf
lahf
add
arpl
jnp
sbb
adc
cmpsl
lock
test
add
add
add
hlt
mov
dec
and
pop
jmp
sbb
in
in
fsubp
jge
sub
cmp
add
mov
sub
mov
popa
test
sbb
dec
and
push
ret
mov
es
mov
jae
dec
cmp
add
sub
cmpsl
xor
jns
js
iret
loopne
lret
push
inc
pushf
out
sub
xchg
cmp
and
ds
sbb
push
push
xor
cmpsl
pop
cmpsl
repz
push
xor
shll
aad
jmp
jae
inc
mov
or
sub
lods
sarb
fdivl
rclb
inc
dec
dec
fstl
sub
icebp
addr16
cs
ret
and
dec
ja
cmp
movsb
sbb
or
mov
or
or
or
dec
or
je
mov
loopne
std
cmpsl
out
jbe
shrb
cmp
pop
jo
xchg
or
add
aas
or
mov
lret
pop
rolb
add
sbb
mov
adc
cmc
adc
jbe
aad
pop
push
movsb
adc
aam
xchg
add
movhps
std
mov
add
lea
je
push
jp
xchg
add
dec
shl
aaa
xchg
add
cmpsb
lods
fmull
outsl
out
and
insb
mov
bound
std
fstpt
jmp
out
add
pop
loope
imul
cmp
sbb
imul
dec
mov
mov
mov
sbb
rol
clc
pop
inc
pushf
sub
dec
xor
mov
xor
inc
sub
sub
je
sub
xor
adc
push
xor
hlt
sub
jg
pushf
aas
dec
jbe
ret
test
dec
dec
mov
push
xchg
pop
cltd
jecxz
add
mov
mov
sub
mov
sub
push
sti
xchg
add
xorb
jne
mov
mov
xchg
pop
add
push
outsb
fisubrs
ret
add
flds
add
in
xchg
adc
inc
sub
and
pusha
mov
jecxz
loop
ja
sub
outsl
mov
mov
gs
mov
iret
push
add
das
xchg
ret
scas
dec
shll
subl
fiaddl
mov
syscall
addl
cmp
lret
push
jge
xchg
fistl
cmp
mov
nop
sbb
jae
popa
leave
aam
ficompl
xchg
push
dec
sbb
push
outsl
mov
scas
mov
and
push
leave
push
fcmovnbe
add
outsb
dec
add
xor
mov
dec
cmp
jne
push
push
mov
mov
adc
test
repnz
mov
lahf
mov
icebp
jle
jbe
xlat
and
push
push
inc
idivb
xor
in
js
cmp
cmp
leave
nop
flds
aas
rorl
jo
xchg
pop
or
hlt
stc
gs
or
je
cmpsl
add
mov
xchg
mov
add
add
add
jmp
adc
sahf
mov
outsl
in
dec
movaps
push
and
push
aam
pop
mov
xor
lcall
dec
push
imul
mov
fiadds
or
adc
clc
int
fwait
xor
push
inc
imul
dec
rolb
cmp
push
dec
and
clc
jmp
xor
xor
fisttpll
mov
mov
fwait
stos
or
inc
pop
pop
scas
mov
add
jnp
leave
mov
push
mov
mov
icebp
addb
mov
cmp
mov
push
cmpsl
mov
scas
or
shlb
cld
lds
notb
ds
dec
movsb
test
in
sbb
pop
outsl
loope
roll
xchg
std
lea
inc
aas
xorb
js
pop
jnp
add
mov
xor
xchg
sbb
xchg
bound
sub
rcrl
add
add
add
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
jg
les
jne
jmp
fcmovne
pop
push
xchg
pop
mov
subl
daa
test
cmpsl
push
lods
sub
movsb
out
daa
lods
ds
jl
mov
inc
adc
shl
inc
add
pop
mov
and
mov
frstor
mov
pop
dec
cmp
and
aaa
out
jo
adc
xchg
cmpsl
jmp
mov
mov
dec
jp
push
mov
mov
inc
in
sub
test
das
out
xchg
sti
push
cmp
jno
out
cmp
sbb
test
sbb
cmp
rcrb
decl
push
shrl
xor
pop
mov
pushf
sub
je
out
xor
pop
js
data16
xor
inc
xchg
adc
and
add
cmp
push
rclb
das
or
das
pushf
insb
or
xchg
push
ret
pop
add
adc
std
and
xchg
rclb
fdivrl
add
add
jmp
ss
cmpsl
add
std
in
jo
and
cs
lds
mov
mov
pop
pop
scas
int
lret
dec
xchg
dec
mov
cmp
lcall
rcr
adc
xchg
xchg
mov
lea
xchg
jge
fdiv
pushf
add
pop
lds
fisttpll
insb
imul
push
jg
xchg
shlb
clc
xchg
sbb
lock
mov
clc
jmp
mov
jne
insb
std
dec
mov
mov
js
es
push
test
and
sub
popl
xchg
out
repnz
sbb
movl
data16
push
xor
inc
or
mov
test
popa
sub
inc
push
insl
psubusb
icebp
outsb
lods
fidivs
pop
sbb
es
ja
ret
sub
daa
insl
in
inc
stos
clc
cmp
das
jle
add
mov
add
cmc
mov
add
add
add
jp
mov
mov
pop
mov
sbb
setno
xor
cmpsl
push
mov
in
push
mov
dec
add
nop
and
repz
sbb
repnz
push
call
sub
dec
into
lret
push
pop
into
cmp
movb
mov
fcmovnb
dec
pop
mov
movsb
adcl
aas
sub
mov
pop
jmp
cli
scas
add
sub
mov
out
xorl
sbb
or
sbb
icebp
popa
jne
push
sar
push
xchg
and
loopne
cli
fsub
pusha
sub
fucomp
cmp
push
cmp
shrl
js
mov
sub
jecxz
nop
xchg
push
lods
adc
sub
out
out
cmpsb
xlat
outsl
mov
sub
push
xor
jns
push
jbe
jae
shr
ss
mov
sub
sbb
ja
or
ficompl
lock
add
les
out
xchg
lret
or
pop
add
add
out
dec
cmpsb
mov
add
cltd
sarl
xchg
arpl
mov
sbb
xchg
pushf
xchg
int
xchg
popf
popa
push
cmp
aaa
jo
js
out
sbb
loope
cmp
dec
mov
adc
add
cmpsb
repnz
enter
add
sbb
fldt
inc
or
daa
cmp
cs
sub
ljmp
jecxz
jae
lcall
andl
adc
adc
push
hlt
aad
lods
xchg
flds
mov
jae
mov
mov
lcall
dec
pop
out
andb
inc
cwtl
shrb
test
cmpsb
cli
cltd
push
fwait
or
sub
andl
add
pop
push
repz
movsb
loopne
sub
xor
int
lret
xchg
scas
mov
mov
fsubrs
test
mov
and
movsl
shl
out
cmpsb
or
mov
enter
ljmp
dec
push
ret
scas
fisubs
mov
add
add
add
ljmp
out
cmp
daa
ds
aad
addl
out
cs
ret
rcrb
push
rcrb
mov
mov
or
stos
out
mov
adc
push
mov
dec
mov
dec
mov
pop
mov
jo
in
lods
mov
inc
pop
lahf
jb
adc
adc
mov
push
xor
push
push
int3
and
and
fadds
fwait
cmc
xchg
lods
xor
mov
lcall
orl
pop
sbb
fildl
push
mov
lea
lods
push
imull
xchg
mov
jne
stos
sbb
sbb
fdivl
xor
stos
jge
icebp
lret
icebp
add
add
ret
jae
pop
mov
and
fdivrs
sub
mov
cmc
mov
mov
cmp
dec
sbb
adc
add
aaa
shlb
cmc
div
mov
shrl
or
add
mov
add
pop
sbb
dec
aam
stos
push
daa
std
fstpt
or
mov
jnp
xlat
out
fadd
repnz
sub
test
outsl
dec
loopne
jns
cmpb
sbb
sub
out
outsb
aas
ret
fcompl
ja
lock
sub
imul
or
stos
aam
test
pop
mov
sbb
xchg
xchg
and
insb
imul
lret
push
addr16
cmp
cmpl
in
adc
bound
in
jae
fimull
push
ljmp
or
jg
sub
test
cli
mov
lretw
mov
sbb
pop
es
jp
xor
popf
mov
inc
xchg
mov
sbb
inc
enter
xchg
stc
dec
inc
sbb
mov
in
jg
push
leave
sbb
popf
mov
pop
les
push
xchg
pop
pop
clc
stc
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
sbb
pop
xchg
insb
popf
filds
mov
mov
rol
add
cmp
sub
xchg
arpl
pop
or
push
inc
adc
xor
jg
popa
pop
in
pop
mov
loop
loop
pop
cmc
psrlw
jp
and
jge
das
mov
mov
push
nop
ret
push
xchg
mov
lea
in
or
xchg
sbb
scas
and
push
mov
mov
cmp
dec
jb
fisttpl
addr16
and
mov
inc
int3
pushf
and
shrl
cmpl
ror
jne
mov
rorl
push
add
add
and
out
pop
cmp
into
jae
push
pop
call
jnp
test
inc
inc
sbb
cmp
cmp
out
pop
fisubl
push
cmp
into
scas
insb
mov
sub
addr16
fsubs
sahf
or
ret
inc
xchg
pushf
cmp
arpl
add
lods
add
arpl
cmpsb
jcxz
mov
gs
sbb
add
push
add
les
cwtl
xchg
pop
movl
push
sarb
jecxz
xor
pop
sub
in
aaa
jle
dec
push
movsl
icebp
jge
add
pop
rcl
and
fst
xor
sub
jnp
sbb
xchg
jo
aad
rorb
and
pop
xchg
fadds
xor
push
xchg
jns
shrl
pop
pop
pop
and
sahf
pop
push
mov
or
mov
xorl
jp
repnz
in
orb
xchg
fimull
int
mov
sub
jmp
sbb
push
scas
std
stc
cmp
and
stos
movsb
lods
ret
mov
jns
das
test
sbb
mov
mov
inc
jg,pt
sub
addb
push
pop
dec
mov
lret
ret
pop
jno
sbb
adc
sbb
outsb
das
hlt
add
clc
jnp
jg
in
cli
push
jbe
adc
xchg
add
pop
add
add
xchg
xchg
lret
daa
inc
stos
or
xchg
movsb
mov
stos
mov
jg
ret
sbb
push
inc
pop
repnz
xor
daa
lahf
aaa
clc
adc
ja
test
cmp
outsl
jbe
sbb
and
push
mov
inc
jecxz
mov
or
lcall
jb
lods
xchg
sbb
pop
and
push
sbbb
ficomps
inc
sub
sti
int
dec
add
push
xlat
add
movsb
fcomp
mov
pop
shrb
jno
outsl
sbb
aam
xor
aad
or
repz
inc
inc
in
pop
dec
sbb
xchg
xchg
and
enter
jmp
jp
enter
pop
add
popa
cmp
mov
js
pusha
xchg
pop
lcall
filds
rorl
filds
js
es
fs
pop
xor
add
xchg
fcompl
rcl
repz
xlat
popa
cs
test
ljmp
cld
fidivl
in
loope
mov
pop
add
add
je
cmp
cltd
xlat
std
push
dec
sbb
jns
pop
xor
cmp
push
cmp
adc
fdivr
jae
outsb
mov
aas
bsf
xchg
movsb
sbb
sub
shr
jne
cmp
arpl
mov
pop
push
or
pop
jmp
jg
or
lahf
mov
fcomi
data16
fsubs
mov
js
fisttps
inc
lods
dec
fistps
and
lcall
push
repz
sbb
out
lahf
mov
xor
arpl
jae
add
cmp
cmp
adc
add
xchg
es
cmp
ret
adc
push
mov
lret
and
xchg
dec
les
sub
sbb
pop
and
aam
xadd
mov
sub
mov
xchg
repnz
add
mov
shrb
cmp
lret
sbb
clc
xchg
out
pushf
push
sub
jl
sar
std
jle
testb
cmp
subb
add
and
stos
movsb
je
aam
push
cmp
stos
hlt
and
pop
les
movsb
ret
movsb
xor
shl
mov
stos
sbb
jl
pop
lods
pop
in
lcall
shlb
add
push
iret
sahf
sub
inc
popa
jge
std
movsb
mov
xor
je
data16
inc
mov
lret
out
xor
xor
mov
sbb
xchg
add
xchg
sahf
jno
mov
lea
xor
xor
adc
inc
fdivr
add
loope
fistps
cmp
add
loope
xor
inc
je
mov
jle
ja
jae
jmp
jmp
enter
mov
dec
fwait
aad
mov
add
add
fstpt
dec
pop
adc
push
data16
add
lods
sub
shrb
es
mov
out
hlt
sbb
fs
stos
aaa
dec
add
cwtl
or
stos
xchg
cmp
mov
xor
add
pop
add
add
movsb
fists
inc
mov
pop
add
lret
jbe
lret
mov
pushfw
pop
test
int3
push
jb
sbb
xchg
mov
cmp
test
push
cmpsl
sbb
dec
sub
cld
jl
icebp
dec
dec
jno
pop
xor
repz
or
fs
nop
dec
sub
loope
shll
gs
rolb
mov
xor
sbb
xor
arpl
push
xchg
inc
mov
cwtl
add
jmp
xor
cmp
jo
mov
add
popa
in
in
xchg
mov
mov
xchg
int3
in
pop
cmpsb
inc
test
mov
faddp
rolb
push
pop
or
sbb
sub
xor
or
daa
mov
xor
add
stos
gs
push
test
and
int3
enter
mov
daa
add
outsl
sti
outsl
sub
pop
cmp
add
cmp
jo
cmpsl
xchg
lahf
cmp
repz
add
mov
push
stos
icebp
mov
shrb
aad
mov
and
mov
jo
in
or
je
mov
popa
outsl
sbb
rcll
into
sub
mov
loopne
pop
sub
sub
dec
scas
test
fisttpl
and
fildll
lret
add
add
sahf
out
dec
pop
jne
mov
mov
xor
jl
in
lods
fsubp
xor
jg
mov
push
aas
clc
xor
push
or
loopne
shl
mov
mov
push
cmp
or
xorb
pop
outsl
orl
lea
test
add
iret
aaa
sarl
xor
pop
and
sbb
push
loope
fcmovnb
in
leave
ret
in
pusha
scas
enter
data16
bt
add
dec
std
out
xlat
aas
insb
lods
ret
shll
pop
add
add
pop
and
sbb
clc
idivl
push
inc
mov
enter
and
push
movsl
fcmovne
pop
xor
ss
push
xlat
jmp
movsb
xor
int
stos
jl
rcl
stos
aas
pop
mov
pushf
orb
xor
shl
add
in
aad
sahf
inc
mov
cmp
out
cltd
arpl
rclb
mov
fs
stc
psubw
mov
nop
aam
and
ja
mov
in
sub
inc
push
scas
fwait
pop
mov
imul
scas
mov
mov
pop
lock
dec
lock
fildl
cwtl
test
shlb
jae
cmpsb
mov
call
and
mov
fsts
mov
daa
int3
outsl
test
ret
orl
out
fisttpl
add
add
lea
jae
inc
sbb
cmpl
das
xor
xor
ss
push
orb
and
sbb
ljmp
add
imul
outsl
fistpll
dec
test
pop
add
add
jg
jg
lds
fcmovne
std
ljmp
lret
les
mov
xchg
scas
inc
sbb
shlb
xchg
test
add
movsb
sub
daa
xchg
sbb
adc
jnp
popa
int
ret
jnp
pushf
jae
sub
aam
mov
mov
dec
adc
orl
lret
int
mov
das
add
popa
inc
add
ds
mov
pop
stc
xor
sub
lahf
js
movsb
jmp
and
orl
int3
jo
mov
iret
and
or
cltd
in
add
add
inc
pop
aas
stos
notb
scas
dec
and
xor
jo
hlt
out
xchg
jne
inc
mov
sbb
xchg
xor
mov
mov
cmp
jno
cmp
mov
pop
popf
mov
mov
stc
add
mov
xchg
add
dec
mov
sbb
sbb
mov
inc
mov
adc
sbbl
xorl
add
add
pop
add
add
pop
aam
mov
jg
in
push
mov
pop
dec
clc
repnz
inc
lods
fucomi
push
pop
in
push
mov
mov
cmc
pop
sahf
push
xorb
add
aad
xchg
sub
mov
test
cmc
xchg
lret
xor
adc
mov
movl
subl
xor
push
xor
into
sub
pop
mov
mov
cmc
inc
push
movsl
mov
adc
sub
dec
cmpsl
xchg
insl
cmpsb
mov
mov
les
sbb
push
rolb
cli
aaa
imul
fldt
mov
loope
jle
mov
sub
movsl
pop
lods
xchg
lods
fldt
xorl
sub
rcll
jnp
sti
loopne
jmp
or
ret
pop
jp
jno
sub
pusha
ja
push
addr16
mov
bound
mov
aaa
mov
adc
or
scas
nop
xor
lahf
lods
out
or
mov
imul
sbb
leave
dec
fcomps
mov
pop
add
add
xchg
in
mov
adc
adc
xchg
ss
or
mov
lock
pop
lea
lea
xor
out
pop
shll
pusha
lret
mov
icebp
mov
lods
test
sub
mov
ret
in
rcrl
daa
movb
stos
jo
sarl
mov
adc
pop
mov
dec
fcompl
mov
jbe
push
js
push
mov
mov
in
pop
push
or
call
sub
out
xor
inc
test
push
mov
and
inc
jnp
test
mov
and
cmp
pop
cld
xor
out
shll
sub
mov
push
lret
loopne
fnsave
jns
mov
rcr
out
stos
int
or
add
sti
jmp
inc
frstor
mov
scas
cltd
jmp
mov
jge
jg
ljmp
out
stos
xor
es
pop
fwait
add
pop
add
add
scas
loop
adc
rcr
dec
sbb
add
or
mov
sub
into
popa
mov
inc
stos
and
mov
jbe
mov
push
int3
adc
imul
xchg
fisttps
or
sti
fistps
lret
xchg
shl
nop
mov
and
or
pop
jp
cmc
pop
jo
leave
daa
inc
fsubs
clc
adc
push
aad
imul
push
addl
scas
ss
inc
js
insl
cmp
lahf
js
add
adc
mov
xor
andl
pop
jmp
xlat
cwtl
xor
outsb
dec
lea
pop
jo
inc
roll
pop
scas
mov
popf
repz
and
scas
addl
les
adc
push
sar
std
pop
repz
xchg
loope
int
and
scas
mov
jge
jle
out
mov
imull
in
sbb
movsl
jbe
add
ja
out
xor
cld
mov
pushf
add
pop
add
add
gs
xlat
ss
ss
sar
jae
mov
push
push
cli
cmp
inc
xor
cmp
mov
mov
out
jg
cmpsb
movsl
das
or
xor
repnz
imul
and
add
and
mov
imul
test
mov
mov
test
xchg
out
out
mov
daa
add
jmp
arpl
jns
sarb
pop
sub
cltd
sahf
fsubs
mov
dec
jmp
mov
adc
arpl
cmp
test
andl
lods
shll
leave
jbe
out
mov
cmp
pop
xor
cmp
and
sbb
ja
add
mov
sahf
fwait
push
and
inc
or
lock
or
xchg
sub
les
cmp
inc
and
sub
add
pop
int3
imul
dec
mov
test
test
pushf
mov
add
add
pusha
test
je
push
loop
xlat
popf
insb
popf
add
pop
add
add
jb
adc
addr16
fstpl
daa
daa
inc
adc
movsb
lret
add
test
int
push
out
push
jbe
rclb
mov
repz
cli
sbb
cld
mov
stos
or
cwtl
mov
in
push
dec
std
and
mov
call
jo
and
inc
lods
cmp
data16
and
xchg
addr16
out
mov
ja
es
or
mov
nop
and
sti
adc
fisubrs
aad
stos
scas
sbb
sbb
lock
repnz
pop
ffree
iret
adc
js
mov
xchg
call
incl
fimull
push
cmpsb
dec
cmp
mov
icebp
rorb
insl
imul
dec
pop
cli
jno
push
cmp
jno
pop
mov
ret
inc
or
outsb
in
sub
and
mov
adcl
mov
imul
or
sbb
mov
int3
and
mov
sub
push
shrl
add
add
mov
repz
repz
movsb
outsb
cwtl
jae
add
pop
add
add
lret
jecxz
scas
in
dec
insb
fildl
cmp
mov
mov
push
ret
enter
inc
inc
and
outsb
and
testl
jno
daa
inc
or
arpl
add
jmp
adc
ret
sbb
mov
cli
cmp
sub
xchg
inc
imul
outsl
scas
adc
bnd
inc
lods
testl
fcomi
in
sbbb
js
adc
mov
shrb
cld
pop
adc
push
adc
mov
adc
and
add
pop
jnp
sarb
xchg
mov
stos
push
mov
daa
sbb
outsl
sub
rcrl
negb
fsubrs
mov
bound
lret
push
int3
aas
mov
rcrb
xchg
sub
mov
or
ds
xor
sbb
add
mov
pop
or
test
pop
add
add
outsl
cmp
add
mov
loopne
pop
pop
sbb
jmp
mov
ss
or
and
mov
into
insb
cmp
shll
into
pop
xchg
pop
and
cld
decb
je
mov
push
inc
inc
pop
cmpsl
inc
xor
push
call
sti
cli
pop
jp
and
xor
jb
dec
push
adc
jecxz
cld
aas
in
imull
mov
cmp
xor
xchg
push
test
jg
mov
or
mov
and
pop
add
jp
dec
xchg
popa
cmp
js
cli
out
fsubrl
jne
add
out
orl
lea
lahf
loopne
lahf
mov
add
lahf
loop
je
loop
sbb
jg
inc
mov
ficomps
sub
xchg
lea
mov
sbb
rcll
repz
fsubrl
add
cli
add
aad
sbb
jge
add
std
stos
sbb
pop
andl
es
and
xor
and
inc
lods
mov
test
sbb
push
mov
inc
jecxz
or
push
std
mov
sub
cmp
pushf
and
sbb
ljmp
xchg
sbb
jbe
sub
aaa
dec
inc
pop
loope
xor
lock
xchg
std
xchg
imul
gs
pop
mov
shrl
mov
loopne
pop
daa
aam
add
sbb
in
mov
cld
xor
sti
mov
cmpsl
das
lods
inc
les
mov
xor
movsb
add
push
add
push
dec
out
xlat
js
dec
testb
jecxz
adc
dec
pop
xchg
sbb
movl
aas
xchg
int
and
lods
fsubl
out
cltd
add
dec
je
sbb
mov
jno
imul
sarl
mov
cs
mov
jno
push
in
dec
jle
mov
pushl
mov
add
push
inc
fdivl
push
push
out
mov
add
xor
lea
mov
cmp
pusha
pop
push
sub
add
or
sub
add
shl
rcrb
lods
add
adc
bound
stos
mov
jns
cmp
pop
sbb
test
aas
inc
jmp
dec
or
mov
incl
divl
mov
cmp
cmp
cmpl
pop
or
lea
call
in
cmp
pushf
repnz
adc
or
xchg
sbb
pop
int
filds
pop
scas
lods
jno
jge
pop
mov
stc
lret
inc
lahf
push
mov
mov
fcompp
gs
iret
mov
test
dec
or
xchg
xlat
lcall
jno
push
rcll
cmp
loope
in
pop
repnz
ror
jmp
aaa
minps
sbb
js
mov
cmc
test
lahf
sbb
fs
push
adc
mov
push
in
mov
add
pop
add
add
mov
es
shr
std
out
pop
add
imul
xchg
dec
xchg
inc
xchg
pop
add
push
subb
or
push
jo
scas
daa
sbb
in
jno
pop
int3
xor
aam
aaa
fcoms
sbb
pushf
bound
aad
bound
jb
icebp
jge
test
sub
dec
in
stos
or
aaa
outsb
pop
cmpsl
lock
popf
pop
mov
sbb
sbb
jge
mov
lea
js
jmp
ret
mov
fcomip
fwait
pop
imul
sarb
stos
insl
jns
mov
sbb
adc
fsubl
push
push
mov
into
sbb
ljmp
mov
cmp
push
sbb
and
adc
lahf
cmp
movsl
xchg
and
cli
jo
popa
inc
popa
rorb
pop
xor
arpl
mov
pusha
pushf
xchg
popa
jbe
in
jmp
mov
xchg
lods
xor
add
pop
test
stos
hlt
jmp
jmp
push
les
pop
add
add
fcoml
push
adc
fnstenv
stc
les
movsl
xchg
outsb
mov
jle
mov
or
enter
in
jnp
and
rcr
cmc
or
outsl
xchg
mov
bound
jmp
in
add
sub
cmp
cmpsl
sub
push
push
or
ret
shl
sub
incl
inc
and
out
xchg
testl
xor
test
jle
mov
and
or
divb
jo
int
fistpll
addr16
aas
repnz
mov
jg
mov
pop
ja
lock
jle
loop
icebp
cmp
cld
cmc
mov
push
adc
pop
int
pop
mov
add
xchg
or
push
mov
andl
stc
out
stc
andb
mov
jne
sub
lea
or
and
lods
cmpsb
cmp
popa
stos
iret
push
mov
sub
push
bound
add
push
nop
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
add
mov
std
ret
jp
in
push
mov
es
mov
lods
sub
sbb
pop
movsl
dec
mov
dec
or
cmp
popf
stos
pop
and
cmp
push
add
cmc
cltd
jb
dec
pop
jl
sbb
aas
sbb
jg
lahf
ret
mov
mov
pop
lahf
aam
sahf
loop
comiss
stos
in
add
lock
cwtl
add
mov
and
in
pusha
mov
imul
pop
mov
fiadds
jb
clc
stos
jb
push
scas
roll
push
pop
jmp
push
or
jecxz
adc
or
mov
inc
sub
jbe
mov
sbb
push
xor
or
je
mov
cmpsl
push
test
fs
adc
nop
pushl
push
stc
inc
rcl
test
jns
rorl
add
cltd
lods
mov
add
add
mov
inc
fwait
lds
push
sarl
mov
movsl
add
pop
add
add
js
mov
pop
inc
mov
mov
jl
inc
stos
pop
out
and
fwait
dec
adc
cli
xchg
mov
and
pusha
dec
jo
test
push
add
notb
mov
mov
xlat
push
lds
int
wbinvd
mov
or
mov
jb
sti
xchg
mov
test
shr
push
movsl
push
rolb
xor
ficompl
add
jnp
mov
mov
std
or
xchg
daa
xor
pusha
push
pusha
inc
xor
dec
ret
test
cmp
mov
out
and
arpl
sub
addr16
test
pop
mov
aas
jge
and
dec
cmp
test
icebp
sub
hlt
les
mov
in
adc
cmc
movsl
je
movsb
gs
mov
mov
or
lcall
std
in
mov
lret
add
pop
add
add
push
fcom
mov
adc
mov
push
bound
sbb
xor
test
scas
mov
jle
lock
add
and
pop
js
mov
cmp
jns
fldenv
jp
insb
rcrb
test
sub
and
popf
pop
pop
cs
fadds
movl
shlb
adc
pop
push
sbb
pop
xchg
popa
pop
inc
enter
and
repz
aad
fwait
push
jbe
push
shlb
in
xor
pusha
hlt
mov
cli
jno
push
mov
pop
add
sub
scas
or
mov
mov
pop
mov
neg
mov
into
push
test
cld
in
mov
cmp
cmp
mov
rclb
test
mov
xor
in
lahf
fst
pop
repnz
popf
lods
mov
push
icebp
pop
add
add
mov
push
sti
jmp
pop
dec
pop
movsb
shr
and
add
add
insb
cmp
jne
xchg
aam
xchg
add
dec
outsl
sbb
imul
add
mov
cmpsb
cmc
outsl
add
jmp
clc
mov
lret
insb
in
aas
movsb
outsb
outsb
leave
jns
mov
push
das
nop
pop
jnp
outsl
outsb
testl
subl
out
inc
fdivrl
and
dec
scas
lret
test
fcoml
or
inc
dec
or
inc
outsb
sub
icebp
jg
repz
popf
pop
pop
cmp
or
jmp
sahf
int
arpl
xor
dec
add
mov
scas
add
or
jmp
fdivl
push
push
lods
mov
and
inc
lcall
lock
insb
into
sbb
lods
or
push
mov
add
into
imul
add
mov
lret
jnp
sbb
inc
subb
add
add
jecxz
lock
fmuls
dec
mov
add
add
das
test
popf
mov
or
jno
jg
out
cmp
loop
sbb
cltd
rol
jne
and
mov
mov
pop
add
push
cmpsl
movl
mov
xor
xor
in
dec
pop
xchg
repnz
pop
out
lret
insl
or
push
and
shl
int
adcl
testl
int
and
daa
mov
stos
in
or
mov
push
push
mov
enter
mov
rclb
cwtl
mov
adc
out
pop
and
sub
inc
out
cmp
stc
scas
mov
stos
fcom
aad
test
pop
pop
xchg
xor
data16
xchg
popa
xchg
adc
inc
lods
insb
fsubr
sub
sbb
mov
push
jg
sbb
pop
pop
gs
and
mov
test
push
push
imul
dec
dec
pop
mov
fiadds
add
cld
mov
add
mov
shrb
add
xchg
push
jb
push
jbe
jae
loope
inc
and
pop
jmp
rcl
loopne
xor
mov
add
lea
jecxz
idivb
jne
mov
mov
mov
mov
jae
pop
fiadds
xchg
xchg
call
aaa
dec
jne
mov
mov
sbb
in
dec
cltd
and
mov
out
adc
xor
pop
xor
or
xor
lret
xor
and
adc
mov
dec
andb
mov
decl
inc
adc
pop
sbb
push
outsb
test
mov
inc
sub
lret
cs
mov
aaa
push
std
adc
mov
popaw
mov
ss
mov
dec
dec
push
mov
insl
sahf
aaa
dec
sbb
stos
add
cmc
repz
jmp
sbb
lock
sar
and
and
jmp
cmp
push
sub
mov
add
mov
dec
das
pop
out
cmc
mov
jns
mov
add
add
add
add
mov
imul
add
std
movsl
xchg
mov
std
movsl
test
push
mov
mov
mov
aad
mov
ret
loope
mov
call
jbe
mov
out
and
mov
inc
movb
test
push
pop
adc
sbb
lcall
sahf
pop
push
mov
mov
cmpsb
mov
xchg
push
and
stc
jecxz
pop
into
outsb
xor
aad
lahf
push
shlb
hlt
push
jg
or
cwtl
aad
or
jl
lods
leave
inc
lret
in
test
or
adc
testb
fsubl
shlb
xchg
cmpsl
xor
mov
ficomps
sbb
xchg
inc
cltd
xor
ret
aam
cwtl
sbb
sbb
loop
sbb
xor
cmp
je
lahf
cwtl
aas
in
test
inc
loopne
fsubr
push
in
and
fucomip
std
dec
std
pop
cmp
cmp
stc
imul
stos
add
pop
add
add
ja
pop
pushf
shll
cmp
clc
pushf
mov
jg
sub
push
test
sbb
lea
xchg
das
shrl
out
pop
lret
mov
cli
popf
fwait
ror
and
nop
mov
sahf
adc
cmp
js
lods
mov
cmp
push
or
sub
outsb
lds
notb
rcrl
cs
imul
fldenv
aam
mov
fisubs
in
adc
imul
lcall
push
bswap
hlt
divb
dec
stos
and
cmp
ss
ret
out
cmp
leave
shlb
and
cs
push
xchg
xchg
sahf
xor
sub
push
idivl
in
cmp
insb
stos
jg
imul
mov
insb
aad
pop
and
push
xor
stos
cld
out
ficoms
enter
ja
aad
sub
add
fidivs
loop
ljmp
addb
js
lods
add
pop
add
add
sbb
cmp
pop
sbbl
push
test
out
xchg
mov
mov
push
mov
push
mov
pusha
roll
xchg
sahf
cmc
notl
in
ljmp
into
jo
sti
ds
divl
mov
and
add
adc
inc
and
pusha
scas
adc
xchg
cmp
xchg
pop
mov
or
das
push
test
jg
push
jae
mov
cmp
pop
dec
aaa
fwait
mov
pop
inc
push
jle
icebp
ljmp
sarl
mov
sub
pop
pop
lods
sbb
out
xchg
in
stos
adc
pop
adc
pop
jg
insl
nop
into
imull
xchg
adc
es
daa
aam
loope
cmpl
sahf
js
js
add
mov
aam
ret
popf
or
pop
outsb
sub
xor
add
xchg
jg
jmp
std
push
int
incb
pop
sub
fsubrl
add
notl
cmp
mov
bound
mov
and
mov
mov
jmp
lcall
mov
fs
pop
xchg
adc
jmp
es
mov
ss
cmpsb
add
or
jns
outsl
add
mov
out
lcall
cmp
jo
cmpsb
jg
mov
xlat
pinsrw
pop
xor
imul
jae
addb
jae
lods
jmp
mov
repnz
jmp
sub
cmp
cltd
jle
pop
jno
prefetcht1
lea
call
insb
and
int3
mov
rcrl
inc
dec
std
sahf
mov
mov
ss
xor
cmpsb
scas
ret
adc
xor
inc
ror
icebp
idiv
cmpsl
sub
cli
ja
repnz
daa
iret
aas
movsl
jbe
and
xchg
in
xor
clc
outsb
cwtl
ffree
test
lds
push
divb
dec
sarb
push
push
sbbl
add
add
jle
and
dec
xchg
jno
lds
mov
repz
divb
fistpl
jnp
or
mov
jmp
xchg
sbb
int
xor
cld
out
cmp
mov
mov
test
mov
mov
cmp
mov
in
dec
and
repnz
pop
xor
call
shll
sahf
push
push
es
sub
popf
pushf
mov
ljmp
rorl
sahf
out
pop
cmpsl
dec
xchg
push
std
addr16
pop
fildll
insb
jbe
push
mov
repnz
adc
loope
sti
jg
jge
ja
xchg
std
and
addl
push
fistl
dec
jg
jp
push
cld
pushf
cli
pop
add
repnz
js
pop
lock
xchg
jo
jns
rorl
movsb
add
xor
cmp
or
ljmp
add
mov
test
stos
or
cld
sbb
xchg
and
mov
mov
xchg
xorl
fsubs
jno
xchg
out
cmp
jbe
mov
outsl
pushf
imul
mov
or
subb
adc
movsb
cli
int3
push
add
mov
mov
ret
sahf
and
out
mov
out
sub
scas
dec
rcr
pusha
xchg
mov
push
flds
add
outsl
push
and
scas
gs
mov
mov
lret
and
dec
jo
stos
leave
push
mov
mov
cmpsl
shl
push
add
negb
cmpb
xchg
cmp
sub
shrb
test
call
mov
add
scas
mov
lahf
push
inc
sub
lret
ja
mov
lea
xchg
pop
lods
mov
add
jp
les
mov
ret
ja
test
mov
add
add
add
movsb
mov
adc
into
xor
mov
in
xchg
lods
daa
pop
mov
fmuls
cld
pop
xchg
in
jns
and
or
andb
xor
cmp
mov
jp
jnp
dec
adc
mov
fimull
daa
jmp
pusha
mov
mov
dec
into
cmpsb
mov
mov
ljmp
mov
adc
add
mov
fmulp
xchg
dec
insl
insl
std
inc
sti
cmp
xor
aaa
cmp
mov
sbbl
sahf
lahf
test
push
sbb
lds
in
dec
neg
arpl
in
insb
call
and
sbb
mov
scas
lds
xchg
and
test
cld
aam
mov
add
bound
adc
jmp
or
or
push
jl
cmp
aam
dec
or
pop
stc
out
push
push
xchg
data16
outsb
ljmp
pop
add
add
das
add
inc
push
repz
cmp
sub
mov
rcrb
xchg
mov
enter
int
lods
pop
jp
lea
jle
cmc
cmp
out
mov
mov
mov
mov
iret
dec
and
sub
jbe
push
jecxz
outsb
and
or
out
aam
rcll
or
es
add
pop
mov
dec
or
mov
rorb
aad
iret
pop
push
testl
sbb
inc
push
jb
fnstcw
aad
push
mov
scas
adc
add
jge
pop
popa
mov
push
popa
cmp
or
push
int3
and
data16
pop
jge
jge
sbb
mov
push
mov
shl
movsl
outsl
and
sbb
jp
stos
and
sahf
sahf
sbb
push
ja
push
in
pushf
sahf
jg
addr16
cmp
add
pop
sub
scas
js
lds
cli
lcall
test
pushl
add
inc
test
or
mov
sub
mov
into
xor
mov
mov
sahf
inc
or
cmp
imul
dec
imul
push
pop
xchg
push
movsb
dec
pushf
es
int
mov
popf
inc
mov
in
jecxz
fdivp
outsb
jbe
dec
mov
rcrl
jge
daa
addr16
cmp
fisubrl
lret
mov
and
shr
daa
sbb
sub
mov
push
fcoml
and
clc
xor
scas
xchg
int3
add
outsb
mov
sbb
xchg
add
sbb
andb
ja
stos
adc
jbe
cmp
dec
xchg
aam
shlb
jp
jge
in
fmulp
pop
cmp
les
adc
imul
test
pop
dec
jns
mov
and
mov
shll
dec
pushf
inc
xor
add
xorl
movsl
jns
jle
daa
push
mov
add
add
add
lahf
pop
pop
je
adc
popf
add
jecxz
mov
mov
mov
dec
les
rcrl
mov
lock
insb
rolb
cmp
js
push
inc
ret
cmpsl
in
dec
fisubl
cltd
inc
jno
pop
std
dec
jnp
ljmp
jle
mov
test
add
inc
ret
fsubr
sub
inc
outsl
js
lret
add
es
aas
xchg
mov
pusha
jne
jae
xor
sbb
xchg
scas
dec
push
pop
jb
out
cmp
add
mov
out
mov
cmc
adc
int
lds
mov
or
je
lods
mov
pusha
test
test
movsb
inc
mov
inc
das
outsb
push
or
mov
cmp
mov
arpl
pop
xchg
int3
add
sarl
ret
jne
ja
sub
out
cmc
or
xor
ds
popa
incb
dec
pop
pop
sbbl
cli
test
test
add
pop
add
add
orb
xlat
cmp
lret
popf
or
lods
pop
add
div
or
jp
cli
push
mov
dec
pop
mov
insl
rcrb
jle
cwtl
aam
jne
mov
sub
sbb
pop
ja
mov
enter
or
push
jae
cmp
mov
rolb
imul
ja
or
inc
lret
add
and
adc
xlat
fwait
push
adc
ja
pop
and
scas
add
fcomps
sub
xor
xor
mov
ret
popf
or
daa
inc
pop
scas
mov
jge
push
sub
inc
lea
das
push
stos
xchg
daa
rcl
enter
xor
pop
arpl
push
dec
je
call
push
fcomp
in
jae
out
or
clc
aaa
aaa
sahf
or
push
lds
add
add
in
mov
jecxz
out
arpl
sbb
shrl
pop
add
add
mov
fwait
roll
popf
mov
mov
imul
mov
inc
das
pop
adc
xor
and
mov
leave
sbb
pusha
outsb
adc
jle
pop
stc
mov
pop
imul
mov
push
fisubrl
enter
ficoml
aam
in
pop
inc
jle
mov
xor
and
or
cmp
dec
out
pop
dec
cmpsl
sub
xchg
gs
js
in
sarl
and
mov
ljmp
xchg
add
push
lahf
cmp
test
xor
rolb
adc
push
pop
cmp
cmp
mov
jp
sub
mov
sti
ret
cltd
mov
xchg
scas
jle
dec
sub
pusha
int3
lret
add
jo
lahf
aam
inc
sbbb
outsb
xchg
ja
nop
lahf
fwait
imul
fs
cwtl
les
inc
lds
movb
add
add
std
test
jg
xor
stos
mov
mov
add
add
add
inc
sarl
sub
lret
sub
push
mov
stos
inc
leave
dec
xchg
clc
jle
cmp
dec
push
pop
mov
sar
mov
repnz
cmp
jl
stc
andb
imul
fistps
shr
push
mov
imul
std
jne
xor
inc
adc
lods
in
sub
cmp
sarb
cmc
push
jl
push
insb
jmp
adc
xchg
sbb
insb
jmp
jecxz
add
xchg
mov
xlat
jl
pop
mov
jge
mov
cltd
lea
leave
fldl2t
dec
mov
out
shll
xchg
std
les
dec
mov
xchg
cmp
sub
jns
in
fcomps
test
shr
inc
std
movsl
jne
xor
subb
scas
fbstp
movsl
loope
imul
push
out
imul
pop
sahf
add
adc
in
lcall
xor
fs
mov
add
dec
enter
in
or
adc
mov
in
jne
test
insl
dec
mov
pop
sbb
call
enter
push
popf
fcomps
pop
dec
or
xchg
iret
loop
sti
stos
mov
dec
dec
mov
xor
test
or
pop
sub
test
fistpl
mov
gs
sub
cmp
and
dec
loope
ret
test
cmc
lcall
cmp
cmp
dec
into
adc
pop
cmovs
cwtl
sub
mov
ja
loope
cmpsb
add
dec
ficomps
rcl
rclb
shlb
lods
ja
push
ja
incl
fwait
test
ds
sbb
aas
push
mov
xlat
and
dec
and
jp
outsl
inc
push
fwait
loope
sahf
sub
mov
bound
mov
xchg
and
aaa
pop
inc
outsl
mov
push
pop
aas
movsl
mov
add
sub
jg,pt
adc
outsl
xlat
adc
add
pop
add
add
adc
loopne
insb
jge
aas
or
subb
and
sbb
sbb
sub
add
pop
mov
jmp
mov
shr
arpl
enter
pop
dec
pop
andps
mov
scas
std
movsl
es
insb
inc
loop
adc
loopne
adc
cld
aaa
pop
jne
and
movsb
repz
scas
popa
or
nop
mov
fstps
jle
rcrl
fs
in
dec
sub
daa
xor
pop
jg
es
lock
mov
lock
push
and
js
in
jno
and
or
mov
cmp
ja
sti
fdivrs
mov
testl
mov
xchg
stc
and
mov
test
sbb
test
and
and
popf
sahf
push
mov
sbbl
je
faddl
outsb
jecxz
mov
mov
insb
in
enter
add
add
out
idiv
outsl
mov
mov
mov
add
pop
lock
lods
cmc
aad
add
or
int3
data16
adc
adc
sub
dec
adc
faddl
dec
or
mov
loop
loope
popa
addr16
loop
cltd
es
and
test
fldcw
push
cmpsl
jno
mov
cwtl
xor
xor
cmp
out
es
sti
xchg
loope
in
ss
or
sub
adc
mov
mov
lret
push
mov
lret
dec
enter
sbb
jmp
test
loopne
xor
xchg
jp
jbe
cmp
hlt
fdivr
mov
std
pushf
sub
fs
cmpsl
imul
cltd
fnstenv
int
cmp
es
dec
shrl
rol
jl
mov
js
imul
adc
cmpsb
mov
pop
xor
sbb
xor
dec
mov
push
int3
adc
push
adc
call
mov
mov
xor
mov
movzbl
aaa
mov
add
adc
inc
notl
mov
int
inc
or
sahf
push
dec
scas
pop
fwait
and
icebp
xchg
stc
loop
inc
dec
dec
cmpsb
pop
lock
fsubs
sbb
inc
idivb
add
xlat
add
mov
push
add
and
fnsave
fcmovb
add
nop
data16
pop
xchg
cli
lahf
jno
cmpsb
sbb
fwait
insb
test
inc
mov
mov
cltd
push
jb
ja
inc
add
gs
dec
xor
dec
fnsave
std
cmpsb
and
fcomip
mov
sbb
or
push
dec
pop
fldl
into
or
pop
sbb
ficomps
sub
cli
mov
push
test
sti
pop
xchg
adc
sbb
xor
rorl
insl
jne
push
ror
push
mov
sbb
lods
adc
stc
lods
mov
sbb
sti
and
cld
enter
and
push
fs
pop
mov
sub
and
push
outsl
outsb
add
in
into
lahf
insb
rorb
je
add
fistpll
call
out
jecxz
ds
add
punpcklwd
sbb
rorl
std
xor
insl
sbb
sub
mov
fldln2
pop
nop
xchg
pop
movsl
in
mov
cwtl
fimuls
lock
negb
dec
movsb
jne
cltd
insl
cmpsl
call
gs
or
jnp
loop
jmp
bound
xchg
adc
mov
inc
adc
lahf
sub
rorl
sub
sbb
inc
inc
rcll
mov
xchg
xchg
cltd
push
mov
aam
adc
inc
mov
arpl
jnp
push
xor
std
xor
popl
dec
test
outsl
shl
hlt
mov
std
ficompl
sbb
adc
ds
sbb
lahf
outsl
dec
jnp
push
cmp
and
sbb
sbb
lds
dec
push
dec
jo
push
sub
mov
mov
jl
or
sub
push
jecxz
inc
xor
mov
mov
fs
mov
add
into
std
sti
leave
sti
iret
jmp
dec
mov
fldl
add
pop
add
add
sbb
mov
mov
hlt
inc
fstpt
add
pusha
mov
jl,pt
mov
xchg
dec
mov
ficoms
fiadds
aam
pop
sub
repz
hlt
jnp
push
cmp
push
je
mov
aas
hlt
push
andb
push
mov
stos
int3
or
fwait
push
mov
jb
dec
sbb
add
ja
test
pushf
add
lock
jecxz
sub
or
mov
popf
lea
jb
sbb
nop
lea
cmpsb
dec
adc
sub
ret
jecxz
cmpsb
arpl
jmp
push
or
hlt
daa
jg
das
jl
and
inc
push
mov
pusha
sbb
shlb
add
jge
and
jl
stc
cld
scas
sti
ljmp
jns
push
jo
and
mov
dec
test
je
dec
sbb
pop
cmp
enter
sbb
js
mov
mov
xchg
pop
packssdw
les
add
add
add
mov
dec
ret
fdivr
inc
repz
dec
mov
call
sbb
imul
int
pop
jno
sbb
push
and
mov
pop
add
das
jb
addr16
xchg
mov
push
cmp
push
jp
jne
pop
cltd
xchg
push
outsl
adcl
xchg
push
dec
jge
imul
enter
rorl
pop
cmp
mov
jnp
jle
shl
jo
push
test
cwtl
hlt
lock
xlat
fistl
mov
push
lahf
repz
push
cmp
or
imul
push
mov
mov
adc
xchg
mov
int3
push
sub
hlt
fldenv
dec
repnz
cmp
imull
mov
stos
xlat
jmp
shrb
stc
inc
shlb
ret
mov
ljmp
push
ljmp
aaa
mov
rol
das
push
xor
lds
inc
cmp
fcompl
fwait
add
jg
mov
xor
sub
push
mov
add
lret
xor
xor
fistpl
loope
addb
insb
rcll
mov
movsb
lock
fs
fwait
aam
loope
cmp
xchg
sbb
jbe
aam
jns
xchg
loope
arpl
jl
fwait
sbb
dec
bound
bound
lods
loopne
mov
push
dec
aam
mov
sbb
in
imul
imul
push
xlat
cwtl
ret
push
or
jp
push
or
out
sbb
sub
jae
xchg
daa
inc
mov
movsl
sti
sbbl
popa
jp
mov
jne
xchg
push
das
cmp
stos
mov
jecxz
xor
mov
imul
out
rcrl
insl
xchg
js
aam
scas
jnp
loope
inc
iret
pop
stc
sahf
jbe
jp
dec
mov
sarb
mov
cmp
adc
mov
add
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
sarl
outsb
xor
inc
dec
cmp
xchg
mov
bound
push
mov
js
inc
mov
cmpsb
sbbl
movsb
xor
inc
dec
stc
adc
dec
jl
adc
mov
jecxz
and
lahf
incl
lods
jne
imul
les
mov
inc
mov
in
push
mov
sub
je
jmp
iret
lods
loopne
add
ss
pop
lret
xchg
icebp
jne
lods
fldl
into
inc
out
std
in
cmp
mov
mov
lods
mov
mov
aas
fdivr
mov
add
or
popf
push
data16
jmp
cmp
rol
xchg
adc
xor
sub
adc
addr16
mov
sti
pop
movsl
jns
and
dec
xor
dec
insl
js
mov
ljmp
pop
and
popa
lcall
ds
in
repz
jns
cltd
cmp
push
das
mov
scas
inc
lods
popa
add
pushf
shrb
xchg
mov
aad
roll
pop
add
add
xchg
or
outsl
mov
jno
mov
mov
adc
xor
mov
cld
fmuls
insb
mov
sbb
sub
stos
mov
daa
mov
lds
data16
xor
cld
outsl
xabort
xchg
movsl
int
cmc
add
pop
xchg
push
lods
pop
mov
jnp
movsl
aad
sahf
jecxz
adc
out
mov
scas
cmp
jmp
xor
ror
mov
mov
push
push
jle
insl
mov
outsb
adc
aaa
push
add
out
bound
inc
dec
adc
pop
rclb
out
xor
cmp
lret
cmp
das
or
xchg
out
scas
decl
pop
push
pop
ret
fstps
cmpsb
ret
sar
add
jg
dec
out
and
mov
mull
push
das
xor
dec
mov
mov
sub
scas
mov
fucomip
imul
add
add
fldl
fidivl
lret
lahf
cmp
outsl
leave
call
addr16
aad
jp
and
cs
mov
cmc
enter
pop
adc
adc
rep
jle
push
xchg
pop
jge
fldl
sbb
je
xchg
fsubrs
sti
pop
lcall
dec
aam
lcall
pop
and
in
sub
jbe
xor
cmp
add
dec
jg
sbb
daa
mov
inc
inc
mov
mov
ljmp
dec
daa
test
mov
cmpsl
dec
sub
pop
orl
outsl
mov
mov
int
ljmp
mov
xchg
insb
mov
loopne
sub
cmp
and
out
lcall
cli
loopne
lret
repnz
loopne
lahf
fdivl
mov
pop
xor
add
jg
jne
jne
jg
loop,pt
lret
and
add
pop
add
add
outsb
pop
and
out
aad
test
jno
mov
xlat
inc
mov
pop
inc
dec
fwait
pop
xchg
cmp
js
inc
mov
ret
adc
dec
clc
scas
sub
push
addr16
pop
testl
lcall
push
push
cmp
sbbl
pop
aad
movsb
fwait
mov
fbld
xor
xchg
xchg
cmc
cld
lods
push
sti
bound
xchg
es
testb
or
xor
pop
push
xchg
or
pop
bound
sbb
jge
inc
ror
jge
push
ret
repz
xchg
add
xchg
orl
stos
adc
xchg
in
aam
loope
sub
sub
nop
dec
jno
sbb
mov
cmp
das
jp
pop
lods
insb
cld
sbb
inc
insb
pop
pop
mov
inc
rorl
xor
mov
lcall
jg
pop
clc
popf
lahf
insb
rcll
jnp
add
lahf
or
int3
push
jae
popa
add
dec
pop
mov
mov
dec
add
stos
dec
xchg
jbe
add
pop
add
add
jbe
pusha
fwait
lret
jge
adc
push
sbb
kmovd
fiadds
orb
inc
in
push
or
push
fmulp
mov
loope
outsb
lahf
scas
into
jle
es
jmp
and
lret
enter
push
mov
mov
jmp
adc
sbb
push
inc
lahf
adc
add
push
add
not
sub
jae
int3
lods
es
jg
into
aas
xchg
push
cwtl
aam
dec
sub
pusha
and
out
mov
adc
outsl
mov
mov
lods
faddl
lcall
adc
mov
sub
jg
sub
pop
ss
popa
int3
xorl
fadd
adc
imul
fs
ret
mov
cmp
inc
ret
mov
ret
push
jb
jbe
dec
push
add
aad
mov
xor
jnp
mov
sbb
inc
mov
jle
mov
insl
fadd
std
fdivrs
fmull
rcr
xlat
or
add
add
outsb
jle
lods
testl
out
mov
pop
add
add
rclb
ss
fiaddl
and
aas
sbb
clc
push
fiaddl
icebp
repnz
mov
and
inc
aaa
jmp
nop
mov
pop
pop
mov
inc
mov
fistl
inc
add
xchg
out
xor
xchg
pop
mov
sbb
pop
cmp
out
jmp
push
adc
xorb
cmpsl
jns
xchg
xchg
adc
adc
out
rcrl
pop
push
pushl
in
cmpsl
aaa
aaa
iret
and
dec
jno
xchg
gs
fucomp
xor
dec
je
cmp
ret
not
cs
adc
and
sbb
mov
cld
sbb
ret
adc
cwtl
popa
fwait
leave
add
jnp
mov
mov
cmp
movsb
pop
or
xor
ret
sub
jl
mov
sub
ret
add
aaa
add
inc
xchg
or
in
mov
or
ljmp
negl
add
mov
arpl
ds
sub
test
add
pop
add
add
pop
jne
rorb
mov
mov
pop
insl
xor
dec
imull
cmp
mov
js
jecxz
inc
ficompl
push
sbb
mov
ljmp
fstpt
sub
stos
roll
mov
sti
in
popa
int3
inc
xchg
mov
pop
hlt
mov
mov
ja
subb
movaps
outsb
pop
pop
mov
jnp
les
sub
mov
out
jl
pop
mov
cli
sahf
sbb
ret
les
dec
sub
outsb
and
mov
cmpsb
cwtl
out
in
inc
repnz
pop
jge
sub
dec
in
mov
and
add
test
and
push
mov
bound
pop
div
out
not
loope
or
insb
push
pop
cmp
pop
test
adc
mov
rcr
rcrb
jp
mov
test
sbb
xlat
push
aam
or
inc
pop
mov
movl
add
lods
add
popa
and
out
sub
repnz
pop
mov
pushf
dec
sar
icebp
sbb
ljmp
mov
jmp
scas
mov
sarl
xchg
sbb
add
sbb
and
jle
ss
testb
sub
shrl
fstpt
pop
subb
xchg
je
rcl
in
rcrl
inc
sbb
inc
lds
inc
cmp
jae
sbbl
fxtract
jns
xor
and
inc
das
xchg
arpl
mov
data16
xadd
cmp
fisttpl
mov
mull
test
fadd
cltd
mov
cs
in
xor
lcall
sbb
mov
lds
cli
ret
adc
test
test
and
adcb
fstps
cwtl
imul
arpl
xor
push
cltd
jp
fbstp
cmp
ds
sub
cmp
jg
dec
das
pop
mov
or
add
pop
add
add
cmp
pop
pop
or
jp
ds
test
popa
fdivs
push
addr16
pop
test
ficoms
mov
lea
je
xchg
push
sbb
jb
movsl
inc
xor
or
sahf
push
dec
xor
mov
das
shr
xchg
inc
ds
jb
or
add
imul
adc
sbb
adc
gs
fstp
mov
lret
mov
aas
roll
pop
pop
fisubl
stc
into
pop
pop
dec
pop
test
inc
push
addr16
jge
cmp
hlt
cmp
xchg
cmp
inc
cltd
fcomi
and
add
insl
inc
mov
mov
lea
aas
mov
push
inc
adc
shr
sbb
xchg
insl
mov
filds
movsl
push
push
ret
xlat
loopne
popa
pop
ficomps
lcall
divl
jne
pop
xchg
data16
inc
movsl
jne
lahf
in
popa
jmp
arpl
pop
fmul
add
mov
icebp
imul
add
xor
fistpll
out
repz
cmp
cltd
leave
add
pop
add
add
xchg
jns
dec
popf
test
push
jae
icebp
push
divb
xchg
fs
cli
inc
sub
cltd
mov
lea
or
xor
scas
xchg
jo
fs
aad
scas
xchg
ret
cmp
stos
and
mov
jns
ds
dec
adc
mov
mov
jg
faddl
sub
mov
nop
les
bound
lock
sbb
add
das
sbb
cmp
push
xchg
and
mov
lock
rorb
cmp
inc
enter
jg
insb
cmpb
pop
and
mov
mov
jnp
xor
inc
add
xor
jge
adc
loope
lds
fisttps
push
mov
pop
pop
das
mov
push
adc
data16
ljmp
sarl
dec
pop
push
ja
ss
push
jnp
addb
mov
ret
imul
xchg
fcoms
stos
lea
inc
fisubs
add
mov
and
lret
pop
add
add
cmp
pop
mov
xor
and
dec
rcrl
push
push
push
div
test
insb
cltd
sti
sub
hlt
call
ljmp
push
pop
sar
jne
add
pop
addb
mov
and
fs
test
subb
fstps
nop
shr
sbb
xchg
and
ret
push
rorl
das
into
lods
in
jle
dec
jbe
xchg
jecxz
cli
cmp
fdivs
nop
jl
push
inc
fstps
xchg
loopne
sub
faddl
mov
imul
fidivrs
push
sbb
shrb
sbb
xor
and
addr16
jmp
andb
dec
xor
stos
dec
cltd
stos
pop
clc
xchg
ljmp
pusha
mov
stos
andnps
push
mov
xchg
fadd
lea
cmp
push
and
mov
push
cmp
mov
mov
jnp
inc
adc
lahf
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
add
inc
aas
shlb
pop
aaa
icebp
mov
das
xchg
push
add
loopne
lock
mov
or
dec
jae
mov
or
adc
jns
add
jns
sub
xchg
cmp
lret
dec
jne,pn
in
outsb
addl
cld
ljmp
mov
insb
xchg
rol
negb
cmc
dec
dec
sbb
cwtl
push
outsb
cmp
xor
aaa
lds
repz
outsb
push
in
push
xchg
dec
xor
push
fxch
jmp
push
data16
dec
sub
inc
dec
jb
enter
sub
cmp
mov
popf
stos
hlt
lret
bound
cmp
jmp
ss
sub
repz
bound
daa
inc
sbb
cltd
adc
mov
sub
jno
iret
jle
jns
ja
jle
lock
pushaw
mov
fwait
aas
nop
push
pop
jl
add
push
cmpsb
sub
xchg
int
pop
fnstsw
scas
mov
nop
sahf
sbb
test
mov
add
imul
cmc
decl
mov
scas
int3
add
pop
add
add
jne
stos
cmpsl
cld
inc
lods
xchg
ret
pop
lock
xchg
dec
jne
push
push
push
inc
push
data16
mov
mov
and
flds
fisttpl
xlat
add
xchg
lret
movsb
xor
mov
popf
and
inc
daa
adc
push
cld
sub
sbb
pop
pop
rorl
xor
inc
lcall
loop
jnp
mov
scas
int3
notl
push
jecxz
inc
ja
pop
mov
sub
ja
outsb
mov
mull
mov
bnd
mov
dec
insb
out
or
mov
inc
mov
jmp
scas
jle
push
imul
outsl
sbb
popf
shrl
mov
out
insl
in
andl
sub
xor
mov
rol
adc
fs
loope
lods
dec
xchg
xchg
test
or
loopne
or
add
push
fwait
fwait
cld
inc
and
loop
or
cmp
add
ja
iret
arpl
or
xor
pop
add
add
in
imul
test
or
pop
sbb
cld
cmc
rorl
add
test
aad
shl
mov
dec
lods
lahf
pop
jno
mov
pop
aam
lock
inc
mov
jae
and
pop
push
sbb
sbb
cmp
xor
xchg
mov
mov
jae
fildll
shl
cmpsl
xor
scas
mov
mov
sbb
inc
pop
cmpsb
and
adc
add
lock
pushf
daa
sub
mov
or
jg
loopne
popa
jb
fsub
mov
loopne
dec
cltd
jo
jmp
mov
decb
jns
jle
and
aam
lock
and
movsl
inc
xchg
mov
jle
in
loope
xchg
loop
jno
aam
pushf
pop
insl
enter
xor
sbb
xchg
out
popf
add
xor
jo
cwtl
push
adc
out
add
out
into
shlb
cmp
sub
add
aaa
movsl
jo
dec
decl
stos
push
fldcw
sbbb
test
lods
mov
sub
test
sbb
insb
adc
aas
cmp
jge
sub
fdivs
mov
sbb
loopne
and
mov
fcoml
cmp
rcll
pop
adc
mov
sarl
cmp
jae
and
jns
xchg
loopne
repz
imul
and
mov
xor
cmp
stc
sub
adc
adc
fcomps
out
in
add
das
cmc
pop
or
push
mov
push
mov
xchg
add
in
mov
mov
sub
fldenv
scas
mov
test
cwtl
out
sub
xchg
mov
cld
and
jne
adc
sahf
fnstenv
pushf
inc
dec
stos
je
movsb
imul
pop
adc
inc
xchg
std
xor
sbb
add
xchg
and
je
out
mov
sub
add
pop
add
add
jmp
sub
push
or
je
out
rorb
or
inc
test
xchg
jecxz
pusha
cld
dec
lret
mov
lea
xor
push
fcmovnb
clc
dec
xchg
fcmovnbe
cmpsl
imul
xchg
cmpsl
mov
dec
lcall
scas
jg
movsb
call
jle
cmp
pop
mov
pushf
inc
ja
xor
ret
dec
cmp
xor
cmp
cld
in
add
inc
sbbb
les
inc
testl
sub
xchg
cmp
jmp
sbb
jl
aam
fnstsw
add
sub
xlat
jp
push
jg
mov
add
mov
jge
cmp
inc
insb
aam
dec
lahf
xchg
fisttpll
stc
jb
jns
add
stos
xor
mov
xchg
clc
ds
push
xor
call
jb
cwtl
or
ss
lods
mov
cld
xor
dec
inc
dec
daa
dec
das
outsb
imul
sub
mov
jge
rolb
add
add
add
adc
iret
rcll
push
pusha
jg
popa
add
and
and
es
dec
out
ljmp
test
sbb
pop
insb
sar
ja
sub
outsb
xchg
stos
jno
mov
sahf
jmp
adc
ja
add
xchg
dec
ljmp
xor
mov
je
movsl
cs
aaa
in
jg
bound
xchg
rclb
or
push
push
push
loopne
cmp
lods
adc
mov
xchg
movsl
test
les
xchg
outsb
imul
jg
xchg
test
std
and
in
push
out
sbb
sbb
and
movsl
loope
sti
aas
cmp
out
xor
ffree
add
mov
fimull
pop
scas
mov
cmp
test
ror
gs
adc
test
mov
or
daa
ja
or
lea
push
xchg
stos
xor
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
lods
push
sbbl
rcrl
mov
mov
jmp
push
pop
lock
std
inc
into
cs
mov
out
jb
xchg
xchg
and
scas
shll
test
sbb
jle
adc
imul
mov
mov
push
push
cld
dec
and
xor
ret
push
inc
push
xchg
lods
test
lods
add
adc
mov
mov
fmuls
popl
inc
aad
les
mov
lret
test
stos
out
sub
test
cmp
sahf
and
ret
leave
cmp
pop
subl
fstl
imul
test
jo
xchg
and
mov
and
mov
dec
mov
mov
jge
loop
xchg
pusha
pop
popf
imull
mov
jo
sub
sahf
fnsave
js
jo
shl
push
add
neg
outsl
xor
fldcw
rolb
add
add
add
cmp
mov
setns
aas
test
iret
xchg
in
in
clc
fidivrs
or
mov
lock
inc
lods
rclb
dec
das
jne
repnz
pop
mov
adc
xor
xorl
xchg
inc
cmp
fbstp
mov
pop
das
mov
pop
insl
jo
inc
dec
cltd
mov
lods
mov
scas
xchg
jmp
pop
ja
and
push
jle
mov
jl
xchg
mov
cmp
mov
mov
lret
mov
mov
add
mov
mov
lods
cmp
or
pop
dec
push
pop
mov
int
aas
jbe
and
shrl
or
jb
popf
push
mov
pop
pop
lahf
xchg
adc
cmpb
inc
icebp
jmp
add
dec
jl
lock
lahf
jp
mov
pop
or
clc
out
test
xchg
adc
fwait
add
add
sbb
in
and
int3
and
add
pop
add
add
adc
inc
lods
outsl
jns
dec
imul
pop
mov
or
add
cwtl
out
popf
popf
mov
outsb
movsb
xchg
or
pop
push
mov
adc
out
dec
into
inc
out
lahf
sub
cmp
ljmp
push
jl
jbe
in
and
andl
das
sti
dec
push
cmc
xchg
fucomi
cmp
cmp
jecxz
sub
mov
aad
push
fldt
pop
lock
mov
xchg
or
adc
add
push
push
sub
push
loopne
cmc
aam
and
add
or
and
test
mov
andl
cmp
test
dec
call
mov
xor
lods
in
or
xor
mov
jp
jo
shll
insl
pop
mov
pop
test
aaa
movb
stc
xchg
or
mov
jae
icebp
xchg
inc
outsb
jg,pn
add
ds
stc
xchg
sub
out
add
pop
add
add
decb
stos
mov
dec
lds
incl
mov
and
jae
jno
dec
sub
jne
popf
rcll
movsl
pushf
or
fildll
into
rcl
cs
jnp
es
out
jae
fsubrp
lahf
xor
add
xchg
std
xor
or
fsubl
pusha
aad
nop
testb
into
xlat
jg
cmp
mov
int
jecxz
cltd
inc
jbe
pop
add
outsb
adc
inc
scas
idivl
in
push
rolb
xchg
lods
mov
xchg
push
es
add
push
push
sarl
xor
stc
jle
stos
fwait
loop
add
adc
xchg
sarl
leave
inc
fsubs
mov
push
pop
test
cmpsl
or
loope
addr16
hlt
test
fimull
mov
ret
push
push
in
pop
je
add
lcall
fst
push
in
in
aad
add
add
add
mov
adc
out
pop
dec
add
loope
mov
mov
rol
or
xor
xlat
fdivl
xchg
jmp
bound
inc
stc
subl
mov
mov
je
divb
mov
cld
andb
jae
or
sub
hlt
inc
rcrb
sub
imul
mov
repnz
test
inc
mov
sub
mov
pop
push
mov
fs
xchg
jmp
cmpsl
xor
inc
pop
test
loop
sub
mov
rolb
inc
ret
xchg
test
repnz
mov
fmuls
add
xlat
fsubl
cmp
dec
fsubs
fwait
add
push
fsubs
cltd
aas
out
loop
inc
pushf
faddl
aaa
jmp
inc
outsb
dec
push
inc
cmp
sub
clc
cltd
fwait
mov
jo
in
subl
add
cmp
jg
xchg
mov
and
add
add
add
mov
sub
mov
sbb
cmp
pop
mov
lods
adc
scas
out
jmp
xor
ja
or
bnd
and
clc
fsubr
cmp
mov
mov
insb
call
repz
ljmp
in
push
stos
mov
cld
int3
pop
rol
mov
mov
add
in
mulb
push
icebp
in
inc
popa
lods
lcall
mov
nop
inc
sti
repnz
in
mov
in
sub
mov
sbb
scas
pop
mov
cmc
and
leave
pop
push
pop
lret
movl
cs
lret
push
dec
cltd
fisttpll
mov
fidivrs
and
jae
fwait
xor
iret
movsb
rol
insl
pop
iret
leave
sbb
fcmovnb
or
clc
sbb
pop
mov
loope
insl
jae
into
sbb
lods
sub
loopne
clc
xor
andb
mov
movsl
add
add
int
out
out
imul
aas
cld
push
push
dec
adc
sti
xlat
add
pop
add
add
and
cmc
scas
jecxz
stc
lret
xchg
xchg
out
or
cmp
add
stos
mov
ja
dec
movhps
in
movsb
aad
dec
mov
add
popf
pop
insl
pop
mov
lcall
xchg
dec
add
xor
mov
push
int
daa
or
jbe
add
inc
ret
lret
outsb
jle
fiadds
into
lret
or
fisttpl
add
rolb
push
mov
sbb
or
inc
cmp
push
aaa
sub
inc
fucom
aaa
rcr
bound
inc
add
fnstcw
out
xchg
add
mov
aas
leave
mov
jmp
insl
mov
xchg
mov
add
xor
cltd
mov
xor
mov
push
aam
add
xchg
call
xor
addr16
inc
jmp
mov
outsl
cmpxchg
jge
data16
ljmp
add
add
psubusw
push
adc
xchg
sbb
sub
add
add
add
hlt
jbe
jne
mov
pop
fs
add
mov
dec
lea
add
mov
push
xchg
sub
dec
cmc
mov
dec
push
stos
dec
xchg
insl
sbb
cmpsb
dec
test
xchg
scas
xor
mov
fistpl
clc
and
loope
push
xor
fs
adc
xor
arpl
xlat
fcmovb
hlt
int
out
das
int
aad
xlat
push
rcrl
inc
and
dec
sar
jns
testl
cs
test
mov
xchg
sahf
mov
sub
imul
mov
or
mov
sbb
inc
xchg
cli
imul
aam
inc
mov
push
pop
pop
out
xchg
push
arpl
and
enter
push
xor
or
add
mov
jmp
fsts
out
lcall
cmp
add
xchg
add
pusha
inc
add
ror
add
sbb
sahf
cmc
fsubrp
jnp
push
xor
fiaddl
add
add
add
call
inc
cmp
jae
repz
jae
insl
rcrb
ja
les
ret
pop
dec
scas
into
lret
lcall
mov
int3
scas
push
cmp
push
sub
mov
sub
xchg
cmc
repz
jns
in
xor
and
mov
daa
in
ljmp
jb
nop
lods
push
sbbl
ja
jmp
mov
inc
ds
out
add
pusha
cmp
pop
push
fcomps
mov
inc
ret
jae
push
xchg
or
sub
repnz
outsb
push
dec
insl
pop
rcr
sbb
cmpl
rol
mov
stos
jb
push
mov
cmp
hlt
sub
mov
out
xchg
adc
mov
add
iret
lahf
jnp
push
scas
pop
mov
in
inc
fisubrl
aad
movaps
emms
xor
mov
add
jle
jg
std
fisttpl
inc
push
mov
fildl
add
add
add
sub
fldenv
mov
sub
popf
lock
cmp
mov
add
push
pop
out
push
mov
call
dec
idivb
in
mov
xchg
or
inc
lock
xchg
arpl
xchg
aam
shlb
mov
popa
ss
lret
shll
punpckhbw
aaa
jno
add
mov
imul
lods
cmp
lcall
hlt
mov
out
testl
fdivrp
fiaddl
std
imul
fdivr
mov
sub
sbbl
pop
aaa
cmp
outsb
and
xlat
adc
cmp
scas
popf
scas
ss
sub
sbbl
jecxz
adc
arpl
jmp
lods
scas
rcr
cmp
dec
pop
sbb
lahf
sub
jbe
andl
ja
or
adc
xlat
cmc
imul
cmp
ljmp
daa
jbe
fcoms
faddl
add
add
add
outsb
testb
out
insb
xlat
mov
adc
or
cs
dec
xlat
aam
xor
aas
div
adc
mov
jb
out
ret
out
push
mov
pop
pop
int3
std
enter
fs
xchg
or
hlt
faddl
test
push
push
sahf
aas
inc
pop
insl
or
mov
bound
inc
jecxz
sar
sub
xchg
pop
rcll
data16
stos
int
mov
movl
dec
inc
and
addl
mov
notb
cmp
inc
loopne
arpl
lock
in
daa
fmul
mov
xchg
aam
enter
popl
or
cmp
insl
cmovge
pop
popf
imul
dec
inc
mov
into
test
push
cmc
add
sub
mov
xchg
dec
push
pop
sti
sahf
ja
adc
leave
jmp
addr16
mov
outsb
nop
add
pop
add
add
push
imul
fimull
addl
add
nop
xlat
dec
push
lcall
adc
or
mull
xor
add
fwait
adc
or
shlb
ficoml
xor
loopne
cli
adc
movsb
fdivs
jnp
movsl
or
movsl
lods
lods
dec
fmull
sarl
dec
bound
xor
cwtl
push
xchg
dec
insb
mov
cmp
loope
pop
jle
insb
test
daa
cli
mov
pop
mov
pop
out
xor
fisubl
pop
fcomps
cmpsl
pushf
sbb
in
imul
lods
shr
adc
jecxz
andl
imul
test
cmp
mov
imul
jp
or
in
push
pop
xchg
aad
out
mov
pop
xor
in
sub
cmp
ds
or
cltd
xchg
mov
mov
xor
daa
xchg
lds
add
push
out
jb
shrl
and
add
add
xchg
adc
jmp
fwait
das
into
mov
mov
test
push
cmc
xor
andl
jno
cmp
ss
mov
mov
mov
cltd
mov
cmp
outsl
pop
fs
clc
sbb
sbb
outsl
insb
xchg
fdivrs
mov
sbb
enter
orl
mull
mov
adc
insl
std
and
pushf
in
shl
je
pop
lods
adc
add
push
ss
sub
jno
dec
adc
mov
notb
movsl
push
lret
jl
mov
frstor
and
repz
pop
cs
mov
inc
popa
sub
mov
jbe
and
lods
idivb
clc
test
popf
adcb
ljmp
adc
mov
dec
jg
cli
xor
jae
cwtl
dec
add
jg
mov
lcall
iret
mov
stc
cmc
lret
imul
add
add
add
aas
dec
inc
and
shll
mov
aad
pop
rcrb
testb
into
jae
pop
jmp
mov
mov
xor
inc
sub
fisubrs
jg
lcall
movsb
push
jae
test
mov
jns
xchg
push
dec
push
sub
adc
lds
jp
push
push
outsl
in
lock
outsb
imul
ds
jp
mov
inc
inc
cmp
dec
fs
jns
and
mov
jbe
mov
pop
fwait
or
cmpsb
call
xchg
mul
js
xor
cwtl
inc
push
or
and
scas
addb
mov
sub
aam
adc
rorb
clc
jne
repz
pop
sti
push
call
stos
mov
sub
fiaddl
js
adc
jnp
popa
or
cmpsl
aad
inc
jge
adc
inc
popf
adc
mov
sbb
jns
in
sbbl
pop
mov
push
cltd
xchg
add
test
shrl
mov
xor
pop
lock
jmp
pusha
adc
lea
hlt
inc
icebp
push
jae
sti
cmp
dec
shll
cs
jg
ficompl
in
xor
pop
es
pop
stos
adc
fistps
lcall
sub
and
pop
fwait
mov
sub
int
aam
or
pop
fcmovne
adc
ljmp
scas
iret
cld
sub
pushf
stos
xlat
or
scas
mov
and
mov
daa
xorl
push
lret
shrb
popa
cmp
aaa
nop
push
fistpll
stos
call
pop
mov
xchg
xor
pushl
icebp
inc
lahf
lods
aad
mov
pop
xchg
xor
out
or
call
subl
insb
sub
movb
push
xchg
mov
jb
fs
scas
or
jae
fadd
fsubp
jnp
mov
dec
sti
cmp
add
pop
add
add
fmuls
lahf
sub
inc
xchg
dec
mov
sbb
add
data16
aaa
mov
int3
inc
rcl
pop
jo
push
lcall
loope
mov
mov
insl
xchg
mov
repz
repnz
jmp
pop
lea
fs
or
cs
ret
aam
mov
push
int
sbb
inc
fisttpl
in
mov
lahf
andl
jne
inc
xlat
cld
add
imul
cs
fucomp
mov
jnp
fimull
std
cltd
fs
jae
jp
sarl
jge
mov
and
jl
cltd
sbb
rorl
xor
dec
pop
gs
mov
or
xchg
ret
dec
push
cs
pop
lds
stos
mov
xchg
fwait
mov
or
popa
popa
push
or
fbstp
pop
and
inc
repz
and
push
xor
mov
push
mov
je
fwait
insb
xchg
or
sub
pmaxsw
add
sub
cld
cli
jle
fmuls
jns
cld
imul
add
add
add
sub
in
pop
sub
sbbl
cs
mov
ja
lea
icebp
dec
js
sbb
aad
ss
loopne
scas
mov
xchg
cld
lods
leave
mov
cmpsl
cmpsb
push
push
out
shll
push
pop
adc
daa
mov
adc
cltd
js
pop
lods
xchg
imul
rorl
jecxz
mov
sbb
pop
popa
ret
mov
adc
lea
push
jb
inc
sub
daa
inc
mov
push
dec
pushf
lods
fcmovne
inc
insl
pop
add
clc
mov
cli
sub
icebp
xchg
dec
icebp
push
xor
sub
pop
cmpsl
fimuls
cmpsb
cmp
hlt
mov
insb
aam
shll
sub
add
sub
add
sbb
xchg
fwait
dec
insb
lds
push
mov
xchg
out
xchg
xchg
loope
push
ds
ficompl
data16
es
xor
fisubrl
add
ja
sti
ret
or
pop
mov
pop
sub
add
pop
add
add
int
push
repz
in
dec
arpl
cwtl
lea
jmp
hlt
js
call
cmp
cmpsb
nop
dec
shlb
rolb
pop
test
push
aam
xlat
or
in
mov
sbb
cld
std
push
xor
inc
fs
test
enter
sbb
shll
mov
les
push
mov
sbb
outsb
push
pop
je
mov
dec
mov
dec
mov
inc
pop
push
push
inc
movsl
pop
cld
mov
xchg
fdiv
cmp
xor
pop
aas
lods
and
dec
pop
testl
push
es
adc
in
and
inc
cmpsl
cli
aaa
xchg
aas
sub
mov
xchg
cmp
outsb
iret
cmpsb
push
mov
inc
dec
lock
dec
fstpt
dec
jno
repz
shlb
xor
fistl
xorl
xchg
pop
add
into
arpl
cmp
mov
pop
add
add
das
pusha
out
ljmp
insb
popf
push
std
mov
sbb
cmpsl
popf
jle
jmp
cmc
add
int3
shrl
push
pop
mov
daa
mov
scas
cmp
cmpsl
xor
sub
mov
gs
popa
fcomip
jecxz
mov
cld
iret
and
pop
inc
jns
stos
mov
inc
js
jns,pn
outsl
lahf
mov
in
jl
mov
leave
cmp
fcom
inc
cmp
pop
enter
cmp
aam
stos
jo
fsubrp
mov
dec
fwait
jecxz
fcompl
ljmp
das
not
sbb
rolb
and
push
jmp
ds
mov
imul
jnp
mov
jge
lret
dec
mov
xor
in
lahf
mov
lahf
and
orl
sarb
pushf
and
in
cmpxchg
cmp
push
or
add
ja
incl
add
in
push
in
add
add
add
ss
popf
cmp
mov
xchg
lcall
xchg
jno
cld
cld
lock
jnp
pop
dec
pop
inc
sub
out
xor
jecxz
test
xchg
push
pop
shlb
adc
outsl
in
sub
mov
cld
lods
dec
and
dec
xchg
push
stc
jl
xchg
push
jbe
mov
test
cs
push
add
repz
loope
pop
sbb
mov
add
rolb
adc
or
leave
xchg
stos
add
cmp
in
dec
test
aam
repnz
cmp
ret
add
fimull
inc
out
jg
mov
jp
or
lds
stos
sub
dec
mov
pop
and
and
push
cmp
xor
int3
jb
mov
xor
das
and
xchg
lret
test
jne
push
push
lods
dec
mov
repz
lock
jg
mov
cmp
pop
add
add
xchg
addr16
pop
lcall
dec
je
bound
negl
sbb
add
cmp
in
cmp
cs
and
arpl
pushf
in
int
sbb
pop
outsl
sarb
cli
adc
inc
push
xabort
or
scas
insb
pop
mov
ret
repz
cmp
xchg
lds
sbb
push
bound
mov
pushf
jl
jmp
adc
in
mov
mov
test
notb
imul
loop
les
aas
repnz
aam
cs
mov
daa
cmpsl
fsubrl
pop
fsubr
pushl
das
in
es
xchg
data16
mov
gs
mov
pushf
ljmp
mov
xor
and
adc
xchg
dec
stc
cmp
in
je
cld
jg
arpl
and
cltd
jmp
sub
pushf
xor
add
pop
xlat
fldt
push
xchg
add
add
add
jb
jp
add
iret
popa
cvttps2pi
push
inc
jg
daa
std
arpl
mov
inc
mov
mov
mov
lock
fistpl
jnp
scas
repz
jle
fcmovu
adc
fmulp
cli
sbb
jae
push
into
mov
sbb
ds
push
mov
mov
dec
mov
cwtl
mov
mov
or
out
insb
pusha
jge
sbb
cmp
loop
xchg
std
orl
lret
faddl
or
mov
in
cmp
push
jle
push
and
insl
fcompl
push
xor
mov
rcr
inc
mov
jbe
jne
ss
push
jae
outsl
mov
dec
icebp
pusha
shlb
pop
push
je
mov
mov
mov
push
jae
xchg
pop
test
push
xor
testl
mov
mov
test
and
into
add
mov
dec
js
stc
mov
mov
outsl
imul
add
add
add
mov
mov
lds
xchg
dec
mov
pop
scas
mov
sub
sub
les
fadd
sbb
mov
push
fs
mov
jbe
sbb
adc
addr16
movsl
adc
int3
inc
or
push
lds
aas
es
pushf
andb
repnz
add
lods
and
pusha
cld
dec
in
stc
push
ret
icebp
mov
ret
add
xchg
pop
sub
iret
movb
xchg
test
inc
jecxz
dec
dec
rorb
int3
popl
int3
xor
dec
sbb
push
rcll
cmp
xor
jge
cwtl
pop
push
outsl
jne
loopne
push
jae
orl
sbb
xlat
loopne
scas
pop
orb
insb
push
inc
pusha
xchg
adc
push
mov
hlt
sub
pop
xchg
mov
pop
fsubs
pushf
mov
or
cwtl
in
dec
push
into
dec
test
add
insl
repz
jae
jg
xlat
pop
mov
pop
add
add
lret
mov
stos
push
push
inc
sub
jmp
and
push
xchg
stos
mov
int3
ret
pop
call
sub
pop
dec
repnz
add
dec
mov
sarl
int
lock
shl
pop
add
out
mov
sub
cmp
out
stos
jnp
jecxz
ljmp
jp
xchg
insb
inc
cld
xor
push
cs
sub
adc
test
jns
add
adc
sub
shrl
popf
rcr
cmp
or
jo
mov
hlt
xchg
mov
pop
dec
fs
push
jge
movsb
xchg
push
test
inc
jp
repz
xchg
lahf
outsb
jmp
or
mov
mov
dec
push
iret
aas
adc
nop
xchg
insl
test
cmovnp
enter
sbb
sahf
push
pop
cs
jo
xor
sbb
bswap
mov
in
pop
js
data16
out
inc
test
out
mov
stos
int3
xor
add
cmp
jnp
es
movsl
dec
jns
add
pop
add
add
dec
sub
and
mov
xchg
sbb
stc
jl
jle
xchg
aas
rcll
repnz
pop
or
aas
pop
pop
and
sahf
lcall
push
and
inc
push
lret
in
dec
inc
mov
fcmovne
ret
push
push
xor
iret
dec
pop
mov
dec
outsl
fwait
popf
xchg
rorl
mov
pushf
mov
sbb
mov
outsb
das
sub
pop
pop
inc
aam
jle
shlb
call
cmp
xchg
in
leave
pop
fstp
pusha
cmc
xchg
push
jge
enter
mov
les
push
jae
mov
jle
cmp
adc
push
cld
insb
pushf
push
jnp
adc
cmp
mov
ss
dec
xchg
int
mov
cmp
stos
aaa
cmp
add
mov
ss
or
pop
or
nop
xchg
popl
add
je
push
xchg
sbb
js
rcrl
jp
xchg
je
out
lods
xor
aas
xlat
jns
mov
dec
sub
add
add
add
in
shlb
mov
sbb
inc
sub
popa
mov
sub
insb
in
stc
cmp
js
lods
popf
hlt
lahf
in
adc
cmpsl
pop
loope
hlt
outsl
mov
adcl
mov
xlat
lea
je
mov
mov
sbb
loope
shll
lds
lock
stos
mov
stc
mov
add
adc
rcll
mov
lods
pop
shll
loope
push
pop
sbb
inc
xor
xchg
mov
out
jae
jns
call
pop
xor
lods
mov
ljmp
dec
icebp
or
outsl
mov
out
jno
xor
fstl
xchg
sti
jae,pn
sub
inc
cmpsb
pop
adc
out
popa
push
mov
and
ret
xor
lods
cmp
pop
mov
fsubrs
lock
leave
sti
jle
push
movsb
or
add
stos
dec
dec
int
and
aaa
popf
insb
and
add
jb
scas
incb
out
dec
out
cwtl
jl
mov
pop
add
add
mov
test
sbb
aad
in
fimuls
sti
add
push
or
std
dec
aaa
inc
sub
arpl
and
jle
in
add
pop
pop
jp
sub
leave
inc
push
pop
jne
stos
mov
loope
xor
push
jns
mov
or
lcall
inc
cmpsl
sbb
js
sub
push
aam
mov
xor
lcall
xor
das
adc
jge
lcall
ljmp
dec
mov
push
push
xchg
jnp
dec
cmp
sub
mov
pop
int
pop
cmc
lds
fs
fcoms
mov
jge
mov
loope
shlb
inc
inc
stc
lods
into
push
and
sbb
mov
push
push
daa
or
bound
cli
pop
mov
int3
xchg
push
aaa
insl
xor
inc
xchg
jmp
push
cmp
dec
and
loope
loope
add
xlat
mov
sbb
mov
add
pop
add
add
scas
sbb
push
sbb
add
xchg
mov
adc
rolb
ds
int
adc
add
cmp
inc
mov
xchg
cmc
push
dec
lea
lods
in
sbb
arpl
pusha
aaa
mov
xor
push
and
cmp
test
jno
push
out
mov
pop
push
adc
std
pop
mov
add
or
xchg
mov
and
out
push
inc
out
movsl
add
cmp
xchg
push
mov
cmp
jne
aad
mov
cwtl
sbb
push
add
ja
and
test
not
subl
mov
jbe
adc
mov
mov
push
and
adc
push
lods
mov
xor
push
cmp
imul
popf
push
xchg
sbb
gs
sarb
jbe
pop
or
lret
out
lds
test
mov
lods
cmp
lods
aas
mov
mov
lcall
add
cwtl
sbb
clc
cs
xchg
negl
hlt
jns
pop
jge
shrb
sbb
cmpb
movsb
or
ja
aaa
and
rcrl
mov
mov
sbb
ss
xchg
test
fcomip
push
lcall
icebp
icebp
mov
adc
and
sbb
pop
cmpb
notl
push
and
pop
out
mov
pop
call
and
mov
mov
lret
ret
xchg
daa
inc
maskmovq
negl
jecxz
bound
es
push
imul
mov
test
movl
mov
sub
sub
addl
or
adc
imul
popa
fldt
cmp
mov
repz
testl
pop
insl
mov
insl
push
push
xor
lret
add
mov
sti
mov
mov
shll
out
add
pop
add
add
mov
add
cmp
pop
adc
ficomps
movl
fldpi
std
fs
out
ljmp
loopne
repnz
inc
andb
int3
scas
aas
cmpsb
jne
mov
sti
out
push
into
lret
adc
call
repz
inc
and
add
push
sub
fistl
pop
push
jl
add
popf
ret
int3
jns
data16
mov
push
mov
movsb
adc
dec
mov
jns
fiadds
sti
jg
sar
fs
cmpsb
push
push
les
or
xor
mov
mov
mov
sub
jae
jnp
jne
push
mov
sarl
lea
sarb
int3
dec
sub
mov
outsl
adc
insl
repz
scas
pop
into
loope
insl
stos
mov
icebp
mov
inc
push
cmp
lods
mov
test
das
cmp
xor
push
test
mov
push
cmp
adc
neg
jge
mov
stc
fwait
fwait
xor
mov
add
add
lcall
mov
mov
add
push
pop
mov
cmpsl
push
enter
inc
pop
aaa
push
add
jmp
push
dec
or
enter
cli
pop
in
add
fwait
cmpsl
loop
push
push
dec
sbb
notl
repz
cmp
pcmpgtd
mov
test
jnp
sub
cwtl
inc
cmp
aaa
out
bound
mov
inc
jmp
ss
jl
mov
mov
jecxz
mov
lret
inc
shlb
cmp
in
pop
lret
and
add
sub
pop
mov
fstpt
adc
xor
lods
ljmp
andl
int
shlb
fnstenv
pop
cwtl
cmpsl
sub
int3
ds
std
dec
mov
pop
scas
mov
mov
rcrl
aad
adc
pop
add
dec
sub
scas
xor
rcrb
pop
stos
icebp
add
pop
add
add
xor
sub
fdivr
push
rorb
jmp
mov
cmp
loopne
es
xchg
jl
ljmp
lods
mov
out
cwtl
rol
cltd
and
sar
mov
es
mov
data16
cmp
xchg
scas
out
cmpsb
into
add
sbb
mov
enter
sti
inc
loop
fbld
enter
lret
hlt
loopne
filds
outsb
lods
adc
hlt
mov
out
sub
daa
aad
cmp
jne
xchg
adc
sbb
jmp
xor
lods
jbe
roll
and
mov
push
lret
jne
sub
cmpsl
mov
not
push
addr16
adc
js
sti
xor
and
cmc
dec
pop
in
movsb
pop
pop
push
xor
out
bound
sub
push
jnp
test
sub
xor
arpl
fnsave
mov
mov
ret
ja
and
aaa
divl
or
repnz
pop
add
add
xchg
das
out
sbb
and
sbb
and
mov
and
fldl
dec
jmp
mov
imul
sbb
shl
or
fs
jmp
xchg
ss
orb
mov
adc
adc
bound
mul
mov
xchg
std
mov
mov
fistps
sahf
scas
rol
jae
insb
movsb
into
cmpsl
gs
xchg
sbb
stc
das
int3
xor
push
or
cmc
shlb
aaa
push
jae
fisubs
adc
mov
cli
cmpsl
add
clc
pop
inc
push
lea
sub
loop
ret
xchg
mov
xor
inc
movsl
pop
mov
xchg
out
ret
xor
in
lret
add
insb
or
ja
inc
cmpsb
imulb
fs
out
mov
mov
push
mov
cli
lcall
add
mov
cmc
mov
int3
jb
and
add
add
mov
xchg
gs
xor
fmull
pop
in
xor
cmp
cmp
fdivp
dec
shll
push
insb
push
mov
jmp
dec
mov
jmp
cmp
pop
cld
loop
mov
and
mov
mov
outsl
test
sub
push
test
mov
ds
mov
push
cs
and
mov
stos
or
xchg
or
cld
pusha
bound
xor
push
jae
repz
adc
push
imul
cmp
push
aad
sahf
shrl
in
mov
shlb
js
push
push
sbb
cmc
add
mov
jns
add
jge
xor
cmp
jle
mov
sub
sti
or
push
dec
jge
mov
and
fpatan
test
andl
cs
pusha
xor
jbe
push
aas
add
jne
add
mov
add
add
add
cmp
push
fcomps
or
sub
loopne
sbb
sbb
inc
and
ljmp
fstps
rol
push
and
stos
imul
in
mov
ja
nop
lret
or
xor
push
mov
cmp
out
aaa
lock
dec
sbb
mov
adc
adcb
lods
cs
mov
stc
pop
sbbl
test
loopne
or
inc
test
mov
xchg
adc
aad
call
loop
jp
repz
and
js
jns
cmp
js
jae
fcoml
sbb
ss
ja
jl
pop
mov
xchg
and
pusha
or
or
sti
fiadds
out
dec
push
fwait
mov
and
or
mov
iret
mov
test
outsl
stos
push
inc
and
mov
sub
scas
fdivr
fnstcw
mov
mov
mov
pop
add
add
dec
pop
xor
addl
xchg
dec
roll
mov
cmp
or
cmp
push
nop
pop
mov
or
mov
dec
mov
das
jo
pop
cld
mov
bound
lret
je
adc
cltd
jo
rclb
xor
movsb
jge
pop
sbb
shlb
add
adc
inc
imul
push
js
and
andb
jno
out
dec
cmpb
jne
xchg
ret
pop
sti
lds
pop
sarl
imul
dec
xor
mov
xor
jecxz
int3
add
jecxz
idiv
frstor
out
xchg
sahf
jne
xchg
sbb
inc
mov
sbb
jno
sub
jns
cmp
inc
out
pop
inc
jp
popa
push
repnz
xlat
iret
mov
or
mov
mov
and
pop
xchg
aam
lahf
jnp
les
mov
xchg
xchg
aam
jecxz
ret
add
xor
sub
push
daa
int
add
pop
add
add
sub
or
and
shlb
sbb
test
dec
jp
fildll
int
mov
sub
cmp
add
ds
mov
pop
jb
jb
mov
dec
xor
mov
cs
mov
test
les
shll
scas
adc
lcall
cltd
hlt
ss
pop
inc
fimull
fidivrl
mov
push
cltd
jle
jae
sub
insl
xchg
cmp
rclb
notl
and
int3
inc
mov
cmp
lods
push
inc
xchg
mov
stos
mov
pop
push
xchg
dec
ljmp
cmp
adc
mov
sub
es
scas
add
cmp
or
mov
jne
sbb
mov
cmpl
int3
pop
mov
push
and
dec
cmp
push
sbb
cltd
sub
xor
orb
or
and
add
ds
in
idivl
call
sbb
arpl
testl
add
push
fadds
sub
iret
imul
movsb
scas
push
mov
add
xlat
push
out
loopne
ret
bound
sbb
in
xor
xchg
cli
add
out
sbb
pop
xchg
shlb
mov
adc
lods
sarl
test
outsl
cmp
call
xchg
xor
test
test
and
or
testb
dec
or
mov
sbbb
jecxz
jp
scas
pop
cli
mov
xchg
add
jbe
mov
je
lock
mov
es
xchg
add
add
stos
out
pop
dec
push
jne
dec
and
or
dec
pop
divb
imul
ret
jmp
push
jo
mov
icebp
inc
movsb
mov
cmpsb
jo
mov
lods
neg
pop
pop
lock
insl
in
lods
jmp
mov
jb
xor
add
add
jecxz
inc
cli
aas
clc
fdiv
jne
ss
neg
clc
add
pop
add
add
fst
fwait
xor
pop
rolb
in
dec
fcmove
push
add
sahf
add
sub
je
or
addb
dec
jp
mov
xor
std
sahf
xchg
cmpsl
mov
sub
cmpsl
scas
mov
dec
inc
shll
mov
xchg
lds
sahf
push
or
mov
stc
sarb
push
xor
xchg
mov
pop
punpcklbw
ret
add
mov
adc
dec
and
in
xchg
mov
pop
das
xor
xchg
dec
sarl
loop
cmp
sub
pop
test
bound
mov
cmpb
jns
sbb
movsl
jb
jecxz
xor
movl
or
aas
out
sbb
out
add
fnsave
sub
jecxz
xor
xlat
sub
mov
cmp
inc
insl
lea
add
bound
push
popa
icebp
addr16
jle
pusha
or
add
lcall
and
repz
add
pop
add
add
mov
cmpsb
mov
sar
mov
lods
xchg
and
add
or
sub
push
shr
cmp
in
movsb
pop
push
mov
clc
sbb
inc
in
pop
pop
adc
in
pop
dec
addr16
insb
filds
fsubrs
inc
call
outsl
fistps
jnp
mov
inc
and
inc
icebp
bound
pop
xor
or
or
in
xchg
dec
cli
out
cld
push
xor
jb
pop
jecxz
push
adc
and
inc
lods
prefetchwt1
or
faddl
mov
leave
pusha
out
adc
adc
xchg
inc
shrl
lock
xchg
ret
push
adc
lea
xor
xlat
loopne
cli
jp
adc
mov
nop
test
addr16
adc
shll
pop
js
repnz
push
sub
sub
lods
and
in
iret
inc
xor
xor
stc
outsl
add
jae
cltd
dec
mov
jge
stc
mov
add
cli
add
pop
add
add
push
push
sub
andb
push
mov
adc
mov
cmp
cmc
inc
jmp
sbb
and
pop
sbb
clc
test
dec
mov
pop
daa
mov
jo
sbbb
mov
stos
addb
jg
and
xor
and
pop
rcrl
fisubrs
and
inc
cld
dec
rcrb
jae
and
mov
push
ror
jl
andl
es
mov
inc
and
push
xchg
pop
loopne
mov
nop
dec
repnz
outsl
outsb
add
cwtl
iret
cwtl
rcll
in
or
ret
adc
fbld
dec
daa
dec
imul
sub
rolb
test
sbb
xchg
subl
or
sbb
mov
xchg
cvtpi2ps
stos
lods
je
xor
ss
cld
jae
hlt
pushf
adc
daa
add
push
into
nop
out
cwtl
jle
pop
or
mov
add
pop
add
add
dec
mov
fisttps
pop
mov
push
fldenv
hlt
dec
lds
mov
mov
mov
inc
mov
mulb
popa
push
aaa
ss
push
push
imulb
dec
push
mov
outsb
sub
test
lock
dec
stos
lods
cltd
push
push
and
aaa
cmp
mov
jnp
jmp
dec
stos
in
sbb
add
push
das
hlt
cmpsl
push
scas
xor
ret
lret
addr16
adc
movsb
int3
mov
cmp
gs
bound
popl
xchg
jo
hlt
mov
push
inc
dec
push
or
aad
into
daa
adc
sub
mov
xorb
mov
sub
ds
xchg
mov
addr16
xchg
out
fwait
shl
xor
mov
arpl
out
jo
sub
icebp
into
mov
lds
inc
xchg
das
add
cwtl
mov
cmp
mov
out
mov
lds
jno
test
jg
in
jmp
push
and
idiv
add
pop
add
add
scas
hlt
in
mov
jo
or
ret
shll
or
adc
int
insb
add
outsl
sub
adc
jo
ret
mov
pop
rcrb
imul
mov
es
add
xchg
int3
pop
fwait
and
push
repz
rolb
fwait
push
into
mov
inc
test
dec
leave
pop
push
loop
sub
xchg
xlat
inc
adc
mov
stc
faddl
popf
aas
ljmp
mov
mov
test
bound
lock
jo
xor
mov
data16
jg
ljmp
fiadds
jle
jno
mov
mov
aas
mov
jl
loop
inc
mov
and
adc
call
push
arpl
pusha
lret
out
mov
fs
popa
pushf
pop
or
push
cmp
add
fcompl
add
mov
add
or
inc
sbb
jno
mov
movsl
cwtl
sub
add
adc
movsb
push
in
cmc
jne
rorl
outsl
std
add
pop
add
add
dec
fisttpl
lret
mov
dec
out
or
cmp
mov
mov
fists
xchg
sbb
cmpb
inc
xor
pop
outsl
std
adc
pushf
sub
ljmp
imul
push
aas
and
lret
dec
or
ja
in
sti
sbb
sahf
iret
jmp
enter
xorl
xchg
sub
popf
add
or
sbb
jnp
xor
out
sub
cmp
or
inc
adc
in
xchg
sahf
clc
push
xchg
out
rcl
pop
fsincos
jo
mov
xchg
fisubrl
xchg
inc
jbe
sub
scas
subb
mov
sbb
mov
pop
mov
dec
movsl
subb
shr
xchg
inc
push
vmwrite
testb
mov
out
fdivrs
mov
mov
and
add
out
shlb
aas
out
sbb
cmpsb
xor
into
add
add
add
in
aad
pop
xchg
pusha
dec
add
mov
mov
shr
idivl
push
fcomi
cmpsb
or
aam
or
testw
aam
loop
or
pop
jae
push
outsl
adc
or
out
or
gs
xchg
aam
jmp
and
int3
sarb
push
mov
dec
adc
aaa
cmp
mov
aaa
ja
into
xlat
adc
gs
mov
xchg
xor
xchg
sahf
dec
mov
cmp
sub
pushf
jge
arpl
daa
subl
cli
pop
negl
inc
cs
inc
cs
pushf
cmc
mov
and
das
sub
push
pop
or
into
hlt
lcall
inc
dec
or
into
push
movsb
jns
inc
fistpl
pop
cmp
pop
cli
in
sbb
cmpsl
pop
pusha
add
xchg
into
rcrl
ret
pop
ja
pop
sar
sbb
add
or
cmp
add
dec
push
cmp
loopne
inc
push
daa
pusha
test
leave
push
pop
jbe
jg
add
mov
lcall
sub
or
add
pop
add
add
ljmp
js
stos
scas
nop
push
cs
js
leave
cmp
idiv
mov
loop
and
sbbb
sub
push
cmpsb
enter
in
mov
mov
movsb
add
xchg
mov
cmp
xchg
mov
dec
repnz
int
les
repnz
lods
mov
jbe
pop
push
data16
dec
in
cmpsl
sti
sarl
jo
out
nop
fisttps
scas
cwtl
imul
push
sbb
in
adc
insb
add
mov
or
outsl
xchg
inc
enter
and
mov
jns
int
aaa
inc
loopne
stos
mov
out
fisttpll
inc
popf
jg
andb
mov
mov
lds
xchg
testb
lods
jecxz
sbb
mov
daa
std
lret
lods
add
xor
inc
stos
cmpsb
cmp
xor
lock
adc
out
fdivrl
mov
add
ret
bnd
int3
jae
adc
out
repnz
add
add
add
add
in
aas
mov
jge
pop
inc
pop
jecxz
push
dec
and
or
movsl
pop
and
movsb
arpl
xor
sbb
xor
cmp
xchg
pop
push
push
es
mov
and
xor
and
cmpsb
xlat
movsb
insl
xchg
sbb
nop
mulb
xchg
clc
aaa
jnp
js
shrb
bound
cmpsl
pop
xchg
mov
mov
push
inc
xchg
fwait
das
xchg
inc
mov
push
scas
in
cmp
adc
jp
mov
add
push
notl
mov
xor
je
mov
lds
mov
mov
movsl
add
out
pushf
scas
adc
iret
cmp
es
adc
sbb
shrl
adc
sbb
fwait
loop
in
sbb
lahf
push
mov
test
lret
xor
fs
icebp
lods
ja
inc
fisubl
sub
mov
cld
mov
out
call
lret
add
std
aaa
mov
mov
sbb
sbb
add
pop
add
add
push
jmp
lahf
scas
mov
cmp
out
fdivp
sbb
lahf
xchg
push
imul
push
mov
loope
iret
sar
dec
push
imul
mov
std
daa
or
jae
mov
adc
xor
stos
add
dec
mov
cmp
aaa
xchg
sti
leave
add
xor
filds
rcrb
mov
adc
mov
mov
inc
push
sub
ret
xchg
mov
dec
jb
push
aaa
repz
scas
push
push
add
sbb
or
jl
pusha
xchg
popa
mov
mov
std
daa
pop
daa
xor
subb
ret
mov
mov
filds
mov
ljmp
cmp
lods
mov
sbb
fwait
leave
adc
into
inc
fisubrs
sub
push
jmp
add
mov
xchg
cwtl
push
cmp
insl
aam
mov
mov
push
test
add
add
add
fucomp
sti
jne
js
fists
pop
inc
ficomps
mov
pop
cwtl
fwait
repz
cmp
xchg
std
push
sub
xor
push
inc
adc
cmp
in
hlt
mov
das
mov
jb
mov
inc
movsl
scas
pusha
cmp
dec
loope
lds
nop
jge
bnd
orb
test
add
adc
add
add
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
pop
enter
dec
enter
mov
and
add
dec
cmp
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
