push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
sub
addl
subl
sub
cmp
jp
jbe
lret
jae
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
dec
ret
jbe
shr
sub
pop
xor
mov
test
inc
inc
xchg
lods
adc
and
sbb
inc
cmpsb
cmc
push
dec
ja
in
mov
push
inc
data16
mov
adc
xchg
and
jge
clc
inc
fldt
xchg
aad
ja
movb
fs
repnz
mov
subb
push
pop
in
ljmp
sti
icebp
out
or
push
loopne
xchg
daa
or
jns
push
push
movsb
lods
pop
je
sub
dec
cmp
push
lahf
pop
repz
push
xor
arpl
mov
sub
out
jle
adc
inc
leave
test
ficompl
sub
fs
sbb
cld
dec
mov
and
add
imulb
test
mov
pop
jmp
push
cmp
dec
es
mov
inc
aas
mov
mov
push
push
call
es
push
addb
imul
pop
dec
push
dec
pop
sbb
fsubs
jmp
les
and
dec
int
cs
mov
sbb
push
je
sahf
mov
cmp
jb
mov
sti
push
nop
rorb
dec
outsb
sub
mov
xor
leave
ss
jp
push
mov
ret
les
ror
or
ror
or
neg
stc
sbb
outsb
and
out
jmp
cmc
xchg
inc
inc
mov
aad
ja
adcb
pop
es
repz
addr16
cmp
aam
stc
rorb
jmp
mov
mov
repnz
sub
faddl
mov
mov
es
hlt
fiadds
sbb
rcll
fs
adc
lods
and
cmp
das
and
push
adc
inc
jmp
imul
in
pop
mov
test
pop
rorb
subl
sbb
into
dec
test
fwait
in
cmp
add
adcb
sub
leave
or
out
lds
bound
inc
dec
adc
rcr
popa
sti
push
das
mov
add
fcoml
jle
rol
shr
xchg
pushf
or
sub
sti
ret
lock
out
xchg
daa
jne
shrl
out
lods
sub
fstl
and
pop
jo
outsl
cmp
lcall
xor
fisubs
cmp
xchg
mov
movsl
sub
lock
les
loopne
inc
or
jbe
stos
ficoms
mov
sub
aas
out
leave
push
dec
mov
cmp
pusha
xchg
mov
stc
mov
leave
out
mov
leave
lea
lret
cmp
int
dec
cmpsl
and
test
mov
jle
cmp
mov
dec
jae
inc
mov
add
mov
cmp
push
dec
or
add
xor
xor
mov
sub
inc
arpl
jne
pop
rcrl
idivb
push
imul
outsb
pop
mov
and
rorl
inc
or
out
xchg
xchg
arpl
lods
xchg
and
push
in
stc
sub
pop
outsb
into
pop
addr16
loopne
roll
into
mov
out
jge
sub
lods
pop
pop
fldl
out
aam
push
push
cmp
add
sub
sbb
in
inc
stos
sbb
add
mov
jns
xchg
repz
lcall
into
push
loope
jl
mov
cld
popa
fisubl
push
sarb
ret
xchg
sbb
or
sub
jmp
sub
mov
sub
inc
xchg
jno
cmp
dec
mov
jle
pop
inc
sbb
imul
in
pop
or
pop
xchg
dec
xor
loop
mov
jo
lret
add
push
xor
jns
mov
ds
push
fs
mov
ret
fsubp
or
repz
push
aaa
adc
jle
inc
iret
addl
jb
dec
lea
popa
les
xor
jge
sub
lods
enter
outsl
jo
cltd
popa
push
paddd
mov
cmp
les
add
ljmp
adcb
jl,pt
dec
or
rol
aaa
xchg
pop
or
popa
push
dec
int
popf
cld
dec
insl
cmp
roll
or
shlb
lods
fcompl
cmp
push
xor
call
pop
jb
rclb
cmp
push
fisubs
sub
dec
sbb
push
push
test
mov
cwtl
mov
xchg
pusha
insl
xor
mov
int3
fwait
sti
and
cli
cltd
xor
adcl
inc
pop
jns
mov
inc
fldl
xchg
lods
jle
sbb
fs
in
cltd
mov
xchg
sbb
dec
cmp
mov
rclb
cld
and
sub
mov
xor
ljmp
in
aaa
les
mov
vminpd
jmp
outsb
sub
adc
out
es
call
loop
push
xchg
inc
mov
cli
bound
dec
xchg
mov
push
pop
into
iret
sub
adc
test
pop
jge
or
idivl
aas
xchg
aas
pop
ret
clc
repz
pop
orl
mov
stos
mov
lret
push
sbb
repz
jae
and
vpsubusw
into
jg
std
into
test
mov
scas
mov
jmp
filds
mov
int3
aaa
push
scas
setle
pop
xlat
jl
outsl
loopne
mov
jg
and
filds
and
stc
out
adcl
insl
cmpsl
insl
and
lock
jle
ficoms
mov
test
push
into
out
dec
xchg
fwait
xlat
inc
in
mov
lret
push
dec
xor
xchg
imul
add
xor
cmp
pop
lea
imul
xlat
add
mov
hlt
xchg
repz
jo
and
add
leave
jmp
and
hlt
stc
mov
shlb
rcl
push
notb
lods
cmpsb
les
add
sahf
inc
pop
dec
cltd
lds
shlb
and
sub
pop
movsb
mov
popa
mov
insl
ss
dec
dec
repnz
sbb
push
and
aam
lds
mov
sbb
out
push
ficomps
mov
stos
mov
xor
mov
dec
nop
jb
adc
sub
sub
out
jne
pop
and
pop
scas
mov
inc
dec
movsl
jno
sbb
enter
push
inc
add
ja
loopne
shlb
sbb
mov
xor
xchg
ljmp
scas
mov
mov
fdivrs
lods
jmp
aas
pop
xchg
pop
jl
xor
xchg
ret
imul
xlat
xor
lds
jg
cs
leave
xor
dec
add
mov
push
lds
mov
inc
or
xlat
push
popa
pop
xor
std
les
out
or
dec
pop
jno
push
push
cmp
cmp
cmc
xchg
cmp
mov
cmp
ror
jge
lds
xchg
mov
call
pop
aad
push
les
daa
dec
scas
aad
and
xor
ja
jo
pop
mov
or
mov
sbb
loopne
in
test
popf
dec
or
sub
mov
clc
ja
in
fidivs
cwtl
test
iret
pop
iret
xchg
pop
push
push
sub
mov
addr16
cmp
imul
outsb
lods
popa
loop
jmp
pop
jno
and
mov
mov
push
mov
cmpb
aad
inc
xlat
or
cmp
jo
jecxz
push
and
push
arpl
push
fs
addl
adc
imul
or
push
inc
insb
movsl
push
adc
inc
adc
bts
jae
push
call
dec
jo
std
cmp
add
std
imul
mov
leave
icebp
ljmp
outsl
out
cmp
mov
jg
jne
cvtps2pi
cmp
mov
and
mov
push
lea
pop
lds
daa
jo
inc
fcoms
mov
push
jo
fistpll
add
loopne
das
sub
sub
dec
cmp
inc
lahf
xor
and
out
das
sub
pop
adc
jb
out
mov
test
add
add
add
in
stos
fdivl
inc
imul
das
loopne
add
push
lock
push
and
int
pop
je
addr16
or
or
adc
repnz
shrb
jne
mov
mov
imul
hlt
or
mov
and
dec
push
mov
or
sbb
xchg
sub
jle
dec
dec
mov
mov
cld
pop
movsl
scas
mov
movsl
nop
cld
dec
jbe
loope
and
inc
icebp
xchg
or
loope
aad
ds
popa
cmpsl
in
lahf
aaa
push
shrl
pushf
sar
adc
and
addr16
or
rolb
jno
outsl
mov
fstpl
call
repnz
cmp
fidivl
and
jno
xchg
out
xchg
cwtl
inc
pop
mov
add
sbb
insb
leave
cs
push
call
test
lcall
fstpt
fnstsw
test
test
lods
fwait
inc
push
sbb
or
hlt
sub
lret
inc
je
xlat
and
push
mov
xor
sub
or
vphaddwd
popa
bound
std
dec
rcl
shrb
sbb
pop
jnp
or
mov
inc
stos
inc
xor
aas
mov
mov
inc
mov
ja
sub
ss
jle
push
sub
mov
sub
adc
dec
pop
lods
mov
inc
cmp
cmp
repz
pop
loopne
imul
mov
mov
push
xchg
jg
sub
mov
popf
mov
xor
addr16
call
imul
push
adc
testb
xchg
sbb
into
cs
test
in
in
and
jno
cmc
xchg
jg
xchg
mov
xor
jns,pn
jp
xchg
and
push
sbb
in
xchg
into
negl
sub
decb
data16
sti
push
add
inc
stos
gs
mov
dec
je
cs
xchg
lea
std
sbb
es
repz
rol
out
fdivrl
test
call
push
pop
xchg
cmp
and
pop
or
sub
addr16
xchg
outsl
mov
inc
dec
jg
pop
xor
addr16
movsb
or
das
pop
loopne
xor
dec
push
insl
sbb
jo
push
nop
fbstp
out
sbb
inc
jno
shr
cmp
dec
mov
push
xor
sbb
repnz
mov
pop
movsb
xor
add
inc
dec
imul
fcmovnu
ds
and
jne
lret
mull
mov
mov
orb
cld
lret
sahf
lds
icebp
jns
bound
es
shlb
popf
stc
or
xor
dec
or
jno
adc
xor
shl
add
in
push
testb
std
sbb
pop
gs
push
mov
popa
addr16
negl
pop
shll
cmp
fdiv
mov
repz
nop
outsb
rcl
sahf
mov
out
je
lock
gs
push
call
cmp
mov
loop
inc
sub
sbb
jmp
push
and
sbb
fdivrs
lock
test
mov
lret
cli
fld
sbb
rclb
sbb
jp
clc
iret
dec
mov
rcl
lea
es
daa
cmpsb
fs
scas
gs
xor
pop
fimull
pop
lcall
loop
iret
dec
lods
sub
repz
repz
sub
cmp
push
notl
shl
outsb
int
lcall
xchg
cwtl
xchg
and
pop
insb
xchg
sub
out
fwait
xor
cmp
push
cmp
xchg
fdivl
movsl
inc
fcompl
sbb
lock
sbb
adc
clc
ja
mov
jns
mov
jle
subl
mov
dec
sahf
jbe
push
aaa
push
mov
xlat
xor
jle
inc
test
andl
dec
xchg
loop
movsl
sub
sbb
adc
test
test
jne
dec
push
mov
mov
pop
push
nop
cld
mov
mov
int3
xchg
mov
bound
sbb
scas
dec
or
out
adc
popf
jge
and
or
rorl
outsl
movsl
icebp
outsl
fisttps
dec
andl
sahf
sahf
mov
push
gs
mov
ss
jbe
rorb
ss
test
mov
in
scas
in
popa
xchg
xlat
mov
dec
into
les
in
sbb
out
adc
add
fsts
fwait
adc
lret
mov
iret
lret
dec
aad
js
sub
or
je
xchg
fdivrs
mov
sub
icebp
in
or
sbb
push
std
inc
jmp
sarb
ret
mov
call
dec
imul
fnstsw
mov
xchg
std
fisubl
fisttpll
cmp
mov
adc
fisubs
sarl
mov
shrl
lods
addr16
mov
mov
outsl
and
inc
outsl
push
add
dec
inc
shll
jnp
outsl
icebp
push
push
xchg
pandn
mov
push
repz
pushf
xor
and
push
mov
mov
dec
cmp
and
sub
push
adc
sub
lcall
or
sbb
sbb
push
xchg
or
imul
xor
insb
xlat
xchg
lea
lea
or
fists
sbb
inc
dec
adc
mov
loope
push
scas
xor
jecxz
add
subl
xchg
enter
popf
cmpsl
mov
add
push
mov
sarb
mov
out
popf
pop
out
sbb
stos
mov
add
adc
jg
rcll
jmp
imul
out
mov
fistps
mov
jp
test
mov
insl
cmp
mov
aam
pop
add
lret
insb
das
outsb
insb
add
call
adc
sub
add
cmp
clc
pop
and
mov
sub
xor
fisttpll
and
xlat
or
mov
mov
in
xchg
std
outsl
xchg
xchg
or
cld
mov
rclb
es
iret
fisubrs
dec
lea
dec
pminub
or
fdivrp
mov
mov
mov
mov
inc
dec
lret
add
cld
cs
push
mov
push
jbe
loopne
fs
sarl
push
jp
pop
mov
enter
inc
sarb
mov
popf
push
out
arpl
mov
xchg
mov
sub
in
or
sub
repnz
jns
test
sub
add
testl
pop
and
in
stos
iret
in
jl
outsb
fistpll
push
pop
sbb
les
imul
cmp
andb
push
les
push
dec
jmp
fs
pusha
call
test
shl
inc
aaa
pop
mov
mov
mov
mov
sbb
mov
lret
sub
xor
xchg
mov
ret
stc
cld
add
and
sbb
jnp
pop
mov
add
dec
loop
mov
popa
cmp
xor
push
or
xor
sti
or
and
add
lahf
inc
jecxz
mov
lods
scas
cmp
push
jmp
xchg
mov
movsb
cmc
aad
jno
sbb
jmp
pop
imulb
outsb
dec
js
adc
lahf
and
mov
int3
and
call
xor
cs
jo
add
push
mov
mov
scas
fmuls
pop
aam
test
lock
and
dec
lret
fisttpll
pop
ds
adc
cmp
ficomps
aam
xor
xlat
insb
ret
scas
ja
pop
push
sub
lcall
mov
icebp
dec
push
lret
jae
inc
cmpsb
imul
shll
sti
mov
pop
imul
inc
jo
sbb
test
scas
in
ret
ret
jno
mov
imul
shlb
orb
std
ret
mov
push
inc
and
les
es
dec
sbb
xor
mov
mov
mov
jg
aad
xchg
test
xor
mov
lcall
mov
sbb
dec
ja
jge
stc
xchg
jg
cmpsl
cli
lds
inc
mov
icebp
sub
adc
add
push
mov
cmpsb
mov
clc
mov
int
mov
pop
and
add
xchg
cmp
mov
xchg
shll
jp
notl
xchg
adc
dec
push
iret
adc
fnsave
stc
jno
bound
or
mov
hlt
mov
into
fistl
mov
sbb
lret
inc
scas
test
std
movl
sbb
mov
jno
es
scas
fimull
pop
fimull
mov
ja
pop
jb
mov
mov
outsb
xor
or
xchg
push
test
mov
inc
and
cs
dec
jmp
xchg
and
out
lcall
imul
add
lret
out
pop
daa
inc
pop
ds
xchg
mov
jecxz
ffree
push
popf
and
sbb
ret
push
pop
mov
dec
sub
lds
mov
mov
inc
dec
jg
dec
push
pushf
xor
pop
add
ljmp
mov
loopne
jbe
jmp
popf
insb
inc
repnz
push
jnp
jg
sub
and
aas
pop
jmp
sbb
mov
push
mov
jo
loopne
fcmovu
or
xchg
arpl
sbb
xlat
test
cli
dec
aas
fisubrs
add
push
jne
jp
into
add
sub
xor
sbb
mov
incl
add
ret
pushf
std
pusha
mov
rorl
xchg
mov
and
mov
adc
int3
mov
ja
loope
or
xchg
push
lahf
mov
mov
mov
mov
sbb
mov
cltd
add
mov
lahf
dec
mov
jae
add
xchg
scas
cmpsb
rcrb
imul
xlat
mov
movsl
rclb
dec
xchg
aad
loopne
dec
inc
rorb
sbbl
push
inc
test
cmp
dec
jg
shrb
scas
mov
jmp
and
je
mov
push
xor
cmp
aam
inc
fxch
add
sub
mov
sahf
in
loope
ds
jae,pt
les
pop
ret
lcall
mov
inc
test
out
xor
jbe
shll
divl
shll
int
or
xor
mov
dec
mov
in
arpl
lret
daa
mov
stc
test
adc
pop
sub
mov
lcall
jmp
arpl
insl
movsl
inc
and
daa
into
mov
cltd
test
xorl
pop
push
add
xchg
push
dec
mov
lcall
dec
std
inc
inc
shrd
push
cmp
jno
icebp
addr16
out
fidivs
rcr
insl
out
int
scas
mov
xor
or
push
mov
xchg
push
aam
mov
in
rol
stos
lcall
or
jno
fbstp
mov
gs
into
inc
pop
ja
in
arpl
jns
roll
pop
icebp
test
push
xchg
or
inc
inc
rol
or
lret
mov
mov
inc
repz
fmuls
iret
insb
jecxz
pop
mov
test
scas
fsubrs
incl
fwait
pop
fidivs
and
lock
mov
test
addr16
mov
push
sbb
int
jl
ss
movsb
in
mov
sbb
popa
insb
scas
cmc
cld
jo
xchg
icebp
xor
stc
test
sbb
fwait
out
and
aaa
adc
mov
inc
or
call
pop
pop
repnz
fisttpl
jo
sbb
lret
ljmp
les
in
orb
aas
fwait
xor
out
push
std
mov
lcall
inc
adc
pop
pop
xchg
ss
jne
and
adc
mov
jp
rcl
xchg
xlat
aam
rcr
sub
and
js
gs
insl
xlat
int
in
test
ds
adc
dec
je
push
shrl
scas
bndldx
lret
rolb
dec
push
mov
xchg
cmp
rcrl
cmp
mov
je
xor
sti
mov
cmpb
std
xor
ud1
jge
mov
xor
popf
imul
test
fdivrs
xchg
movb
roll
mov
adc
xor
xchg
jg
mov
mov
mov
inc
pop
jnp
jmp
jmp
daa
pop
arpl
xor
sbb
clc
inc
test
or
push
arpl
sbb
push
aad
outsb
data16
das
out
cmpsl
cmp
sbb
ret
xchg
clc
sbb
xlat
mov
inc
fcoml
cli
pop
sarb
aad
pop
mov
lea
mov
jo
bound
jp
lods
sbb
inc
jmp
sbb
xor
push
mov
inc
sbb
mov
aaa
xor
pop
xor
dec
and
push
popf
or
mov
rclb
cmp
cld
arpl
pop
cmp
cmp
icebp
inc
push
mov
insl
bound
adc
stc
addr16
fisttps
add
movsl
ror
bound
sbb
bound
pop
mov
leave
call
cmp
scas
xchg
push
lret
pop
or
jbe
lcall
inc
outsl
dec
out
gs
jmp
add
cs
or
sti
pop
pop
std
mov
fstpt
xchg
sbb
and
scas
and
sub
nop
enter
sub
sbb
gs
push
shll
xchg
loop
dec
or
and
psraw
rcl
pop
jno
push
jbe
mov
cmpsl
aaa
cmp
xor
scas
push
push
pop
mov
pop
xlat
xor
adc
or
dec
idivl
push
jnp
fbld
cmpb
adc
and
add
inc
outsb
jle
mov
xchg
lret
daa
cmp
arpl
mov
push
cld
push
push
mov
fnstenv
push
push
pop
ficoms
in
pop
shlb
test
jg,pt
adc
flds
xorb
std
cltd
xrelease
and
icebp
shl
push
jbe
dec
roll
outsl
push
dec
jmp
jp
out
inc
xor
sahf
pop
or
test
dec
repz
cwtl
cs
mov
adc
xchg
mov
push
sahf
out
xchg
rcll
push
nop
xchg
xor
mov
data16
adc
push
and
push
std
add
loop
ljmp
push
xchg
in
lahf
setne
add
mov
adc
cmpsb
dec
ret
xchg
mov
lds
cmp
ja
and
mov
int3
in
push
push
loopne
sub
stos
loop
lret
mov
std
push
sbb
push
in
stos
test
shlb
fildl
int
ret
inc
das
pop
subl
xchg
add
cmc
or
lock
push
movsb
xchg
shl
push
mov
mov
sti
jb
scas
jl
test
dec
sbb
mov
xchg
loop
rcrl
and
and
or
push
rorb
stc
stos
cmp
jo
sbb
or
adc
test
fistpl
sbb
inc
cs
push
gs
imul
adc
dec
stc
pushf
inc
sub
lock
sar
lahf
icebp
and
mov
cltd
data16
jmp
mov
in
ss
pop
cmp
add
jmp
dec
or
mov
inc
add
in
decb
pushf
xlat
adcl
dec
outsb
in
and
shl
push
push
test
incb
and
cli
xor
lea
mov
jbe
xorl
or
and
int
adc
adc
mov
adc
mov
pop
push
inc
xchg
and
outsb
es
push
jmp
dec
fstpl
fsubl
mov
ret
sbb
in
sub
das
shl
dec
push
out
xchg
and
lods
scas
xlat
mov
lret
xor
add
sahf
loopne,pt
pop
lret
shl
pop
and
sbbb
xorl
jb
mov
clc
loope
mov
dec
dec
and
and
rep
scas
movb
enter
aas
pushf
sbb
ret
cmpsl
call
nop
out
xlat
stos
sbbl
stc
xor
inc
inc
jno
xchg
jmp
scas
adc
into
mov
test
cli
out
stos
push
cltd
scas
xor
test
repnz
aad
sarl
mov
clc
rcrl
testb
insl
scas
scas
pop
jae
rcrb
rdtsc
jno
xchg
adc
mov
leave
mov
rcr
pop
jns
cmp
pop
leave
jg
push
in
popf
inc
lahf
rcrb
inc
in
mov
push
and
int
imul
mov
mov
jne
shlb
xor
dec
test
sbb
icebp
insb
cwtl
mov
in
leave
add
outsb
fstpt
adc
ss
sbb
cmp
xchg
outsl
lds
addr16
outsl
in
pop
ja
mov
insl
mov
fs
das
insl
sbb
mov
gs
jno
mov
cmp
loop
mov
sbb
enter
push
in
cmp
pushf
inc
scas
repnz
dec
lcall
mov
dec
jo
cli
mov
dec
outsl
cmp
push
fdivl
mov
scas
xchg
xor
xchg
repz
daa
loopne
fstpt
adc
cmp
and
push
icebp
ds
popf
jae
sbb
insb
jne
fcompl
mul
pop
fsub
fbstp
add
cmp
mov
push
in
ret
stos
int
test
lret
adc
mov
paddb
inc
iret
push
xlat
scas
push
jmp
mov
es
mov
push
stc
decl
stc
addr16
ret
sub
ret
mov
js
cmp
and
popf
jns
inc
je
inc
popa
dec
jecxz
and
gs
in
fisubs
jmp
in
rdpmc
inc
pop
shl
add
xor
pop
fstpl
or
out
arpl
xor
or
pop
push
jp
ljmp
je
arpl
and
xchg
mov
pushf
lds
daa
test
movsl
mov
and
mov
rcll
mov
sbb
out
insb
cltd
dec
ljmp
jmp
movzbl
or
jne
sbb
mov
mov
dec
and
rcrl
mov
pop
addr16
loope
pop
fcoml
aam
stc
lods
dec
pushf
jb
and
std
sbb
lret
das
out
mov
aaa
lds
outsl
pop
cmc
dec
add
xor
or
cwtl
xlat
push
call
outsl
mov
iret
subb
mov
add
mov
filds
in
xchg
or
pushf
into
cli
ret
inc
rcll
rcll
sub
sub
clc
lock
adc
and
outsl
imul
icebp
jno
frstor
xchg
jp
sbb
icebp
lahf
jmp
add
movsb
fcomps
ret
pop
inc
jle
jle
jno
cmp
adc
mov
cwtl
or
movsb
and
in
and
sbb
cld
xor
cltd
ficoms
add
nop
outsb
shrb
insl
add
push
fdivrs
daa
cmp
add
xor
mov
adc
pop
ss
push
outsb
out
aas
clc
in
cmp
mov
push
sub
cmpl
popa
fimuls
aas
pop
mov
aas
or
xchg
sub
ja
push
mov
sbb
loope
jmp
xor
sub
out
repnz
das
and
fbld
jb
in
jecxz
push
mov
mov
cmpsb
xchg
adc
insb
sbb
or
push
jmp
lods
inc
call
mov
add
mov
lret
daa
inc
js
cmp
mov
cmpsl
cmp
ficomps
mov
repnz
push
cld
loope
mov
test
mov
call
jl
adc
jecxz
adc
inc
repz
ficompl
xlat
lea
or
adc
and
ret
out
aam
stc
pop
mov
or
pop
jmp
add
iretw
stos
rorb
adc
mov
cmp
rcr
xchg
sbbb
movsl
xor
inc
insb
je
jmp
cli
enter
lahf
or
sub
fcoml
pusha
mov
nop
stos
insb
in
daa
ja
sub
pop
push
sub
add
jno
push
adc
pop
clc
push
in
mov
mov
scas
xor
lcall
jae
loopne
adc
pop
sub
imul
out
sbb
mov
call
xor
or
pop
add
cmp
push
cli
jp
pop
fisubl
in
mov
xor
sub
mov
hlt
xor
dec
pushf
mov
fadds
sbb
scas
and
cmpl
push
push
push
mov
mov
sbb
fmull
cmp
rcrb
push
and
sti
jg
cltd
dec
je
xchg
mov
jle
jns
stc
jnp
lahf
js
pop
mov
cmp
das
icebp
sbb
icebp
stc
outsl
push
mov
std
sbb
imul
fmul
sub
pop
ja
pop
hlt
push
and
add
dec
adc
jg
jle
lods
adc
insb
xlat
mov
pop
imul
jo,pn
cmp
xorb
out
mov
xlat
mov
sub
jno
add
fistps
cmp
mov
fldcw
adc
dec
call
ja
mov
xlat
xor
pop
dec
icebp
std
out
fbstp
mov
test
pop
xor
in
shll
cmpsb
adc
test
push
jne
cmp
shlb
into
and
jb
cltd
sbb
lahf
jbe
mov
repnz
lock
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
dec
outsl
lcall
pusha
addl
out
mov
jnp
sbb
ret
push
loope
cwtl
fs
pop
push
inc
imul
or
cmpl
int3
out
daa
xlat
dec
mov
inc
xchg
mov
out
or
dec
sub
cltd
add
sahf
mov
push
inc
imul
xor
pushf
sub
fisubrl
sbbb
add
arpl
stos
or
icebp
in
pop
popa
mov
sub
push
jp
notb
mov
add
addb
cld
int
push
cld
xchg
fists
sahf
mov
stc
mov
dec
lcall
lcall
push
stc
pop
in
test
add
aas
and
push
xor
popf
push
pusha
fs
xchg
pop
xlat
cmpsl
aam
and
mov
xchg
sbb
push
jnp
push
scas
push
mov
inc
rclb
aaa
push
jg
push
jmp
push
jo
call
adc
mov
or
jge
movsl
push
mov
add
fmuls
jge
fadd
sub
mov
scas
inc
jg
jns
std
out
jg
mov
lret
add
mov
inc
jmp
add
cmp
cwtl
aad
mov
ret
adc
shrb
ja
out
lahf
xchg
xchg
inc
or
mov
add
dec
cmp
push
add
cmp
jge
or
or
movsb
jecxz
loope
jns
popf
fstpl
jo
jmp
xchg
xchg
cli
add
sbb
out
or
adc
cmp
jl
in
cmp
aam
inc
sub
mov
scas
fmull
aad
mov
rorb
das
pop
mov
std
imul
and
mov
xchg
or
shld
ret
push
ss
cmpsl
nop
add
sub
out
lods
sub
es
lahf
mov
int
add
popf
movsl
sti
sub
aas
add
rcrl
into
negl
cmpsb
add
add
pop
mov
push
cld
sbb
test
add
mov
test
xchg
mov
inc
mov
in
push
and
shlb
negl
sahf
das
mov
fs
imul
pop
sub
jns
movsb
jl
into
ljmp
leave
pop
dec
cmpsl
mov
xchg
mov
mov
jae
dec
adc
aad
or
mov
adc
cmp
in
or
mov
ret
aad
shl
cmp
lahf
lods
sub
mov
fs
push
push
lret
mov
add
and
jle
mov
lahf
pop
lock
out
outsl
test
adc
and
cmp
mov
jmp
ljmp
icebp
push
loope
sbb
shr
adc
cs
inc
not
xchg
lods
jp
outsb
pop
sbb
call
and
loop
ret
pop
ss
sub
cs
addr16
jne
je
inc
xor
cld
xor
cmpsb
pop
or
mov
stos
sub
les
xchg
out
mov
sbb
xor
sti
sbb
xor
popf
daa
dec
inc
or
adc
xchg
fdivr
jb
inc
jae
sbb
idivl
adc
pop
pop
sbb
movsl
shlb
lcall
aam
lahf
das
cli
rorb
mov
jne
lods
stc
mov
sbb
fnstsw
jmp
insl
mov
and
fwait
movsb
arpl
andl
push
loop
mov
out
out
insl
dec
fstpl
mov
sbb
lret
scas
lock
out
xor
sub
push
test
push
out
xchg
movsl
or
and
xor
xchg
jl
dec
aam
ss
addr16
xor
jbe
cmp
lret
test
out
inc
lea
sub
jl
dec
out
out
jne
push
jne
fsts
sub
lds
loope
dec
shll
dec
les
fisubs
adcl
lret
xchg
sbb
sbb
out
scas
xchg
loopne
push
fsubr
sti
dec
jns
aad
jb
je
push
xchg
sti
insb
in
mov
xlat
push
enter
xor
jno
mov
std
inc
std
xchg
cli
stos
pushf
dec
mov
sbb
jle
jle
pop
aaa
insb
xchg
shll
movsl
and
sub
fcom
es
cmp
nop
test
data16
and
cmp
inc
in
pop
paddsw
jecxz
cmp
out
push
adc
lock
or
std
pushf
push
inc
dec
rolb
test
out
out
lods
shll
fstpt
loope
stos
jb
imul
call
lds
adc
cmc
mov
mov
gs
pop
add
pop
sti
aaa
mov
es
stos
insb
sbb
scas
shll
pextrw
lahf
cmp
or
popa
test
cld
repnz
or
push
jle
ret
push
fstpl
in
jb
iret
arpl
into
sar
or
add
gs
sub
pusha
cmpsb
add
in
in
in
jge
pop
push
int
sbb
mov
pushf
daa
mov
mov
jb
push
pop
addr16
fwait
add
sub
stos
adc
push
push
dec
hlt
or
pushf
adc
mov
adc
bound
lahf
add
dec
inc
dec
pop
push
test
jge
mov
and
outsl
ja
in
mov
cmp
mov
xchg
adc
fimuls
mov
sahf
cltd
jne
add
sbb
adc
cmp
adc
testl
xchg
scas
mov
aas
push
push
xchg
negl
ret
pushl
cmp
inc
jl
adc
mov
lock
ja
ret
rep
cli
xor
push
and
fisubrl
xor
push
rolb
and
sub
lock
ds
mov
scas
push
cld
lods
test
inc
jo
mov
insl
adc
inc
in
lea
pop
in
shll
fistpl
inc
inc
mov
cmpb
je
mov
in
data16
push
test
cmpsl
mov
mov
jg
rcrl
bnd
xchg
call
dec
out
inc
jecxz
mov
dec
cli
jmp
mov
add
aad
clc
add
cmp
addb
mov
es
add
xor
mov
sub
jg
pop
pop
loope
xor
pop
in
cmpsl
sub
lea
aam
cmp
das
nop
loopne
jg
out
adc
popf
xlat
inc
cmp
pop
mov
push
cmp
sti
into
jns
fstl
mov
push
adc
adc
pop
pop
idivl
fsubs
add
push
jmp
pop
xlat
inc
push
jmp
jmp
mov
dec
and
aam
mov
jle
dec
loope
cmp
aad
sbb
js
loop
xor
testb
rcrl
lcall
sbb
or
sbb
sahf
xlat
loope
dec
pusha
dec
mov
stos
pop
mov
jno
jbe
mov
mov
insl
je
mov
pushf
inc
push
jo
pop
jmp
xchg
inc
dec
adc
sti
jae
lods
outsb
jmp
inc
mov
sub
add
cmp
or
sbb
fstpl
fxch
mov
jecxz
and
repnz
int3
adc
lcall
or
push
jge
cmpsl
inc
mov
fldl
ss
sub
int3
scas
and
imul
sbb
int3
popa
mov
cmpsb
add
imul
test
mov
iret
push
jmp
sub
loope
xchg
sarb
gs
jge
icebp
push
ret
jg
ds
je
jmp
mov
sahf
fmul
sbb
jb
lcall
inc
push
aad
fdivrl
aaa
into
dec
push
out
jmp
addl
xchg
dec
sub
push
mov
mov
jl
divl
test
mov
and
stos
or
stos
out
nop
mov
add
pusha
cmpsl
fimuls
in
js
bound
mov
cmp
mov
arpl
out
test
fistps
inc
insb
std
jle
mov
pop
cmp
xor
cltd
ja
mov
adc
xchg
movb
push
call
in
data16
rcrl
push
mov
mov
or
sub
xchg
pop
out
push
or
arpl
cmpsl
push
push
xor
mov
mul
lret
dec
fimuls
cmpb
jl
xchg
leave
mov
fwait
cmp
cmp
xor
mov
lret
fldl2t
jne
push
dec
mov
addr16
neg
mov
cmc
sub
mov
sti
js
xchg
dec
mov
test
xor
scas
outsb
dec
ror
mov
pop
pop
dec
mov
lods
repnz
hlt
negb
ss
hlt
outsb
arpl
addr16
out
mov
icebp
lret
pop
insl
or
ss
cmp
xchg
adc
mov
pop
jmp
iret
inc
mov
nop
cld
out
js
adc
push
push
sub
inc
je
jl,pn
xor
dec
popa
loopne
cmc
mov
push
mov
mov
pushf
rol
sub
add
test
mov
adc
cmp
xchg
dec
add
sub
pushf
add
hlt
jp
fincstp
dec
into
pop
cmpsl
scas
sbb
dec
push
mov
mov
ret
inc
ror
int3
adc
out
aad
rcrl
jp
add
loope
out
mov
lds
and
movsl
js
add
dec
in
shlb
cmp
arpl
and
in
cwtl
sbb
dec
loopne
mov
add
shl
fsubr
cmp
loop
jb
ds
lock
ret
sbb
fildll
pop
je
jae
in
ret
cli
mov
inc
pop
loope
bound
pusha
jno
aad
jo
mov
push
inc
mov
lcall
push
jo
lcall
mov
jae
aad
lds
in
gs
mov
xor
inc
repnz
mov
xlat
popa
das
add
push
stos
jmp
sbb
lret
std
js
push
sub
fcom
jo
add
data16
les
dec
xor
neg
add
into
xchg
xor
pop
jge
aaa
stos
fnstenv
or
add
ss
andl
add
cmpsb
pop
cltd
adc
sbb
inc
call
movsl
mov
movsl
fsubr
sbb
mov
aam
testl
sbb
push
pushf
jmp
push
sbb
xchg
jl
pop
fwait
jae
xchg
mov
lcall
push
xchg
pop
mov
fwait
iret
xchg
dec
mov
push
pusha
pop
inc
aaa
sub
xchg
push
mov
int3
mov
mov
add
shlb
ss
loope
and
rcl
mov
mov
sbb
int
push
stc
mov
insb
fidivrs
out
ret
icebp
xchg
add
xor
xor
lcall
dec
jecxz
mov
out
cmp
stc
sti
lock
and
flds
ljmp
sbb
fisubl
das
mov
dec
call
dec
or
xchg
cmp
xor
popa
stos
dec
add
mov
xchg
jg
mov
mov
xor
andl
pop
xchg
test
dec
aam
cmpsl
inc
stos
lods
xor
shrl
xlat
mov
lcall
in
punpckldq
mov
cltd
cld
dec
lods
adc
cmp
aam
dec
mov
mov
in
adc
adc
aam
lods
in
es
mov
cli
mov
inc
push
dec
jo
cmp
or
mov
addl
mov
jl
and
movsl
inc
mov
pop
in
out
cs
adc
out
icebp
shrb
add
fidivrl
jl
cld
push
mov
pusha
pop
sub
xchg
iret
adc
fidivl
pusha
or
shll
mov
jmp
scas
inc
sub
ss
shrb
push
jl
mov
xor
ret
push
pusha
lods
jbe
mov
mov
cs
stc
mov
daa
outsl
cmpsb
inc
je
dec
xchg
mov
sbb
scas
lods
mov
dec
sti
ret
push
mov
pop
aam
testb
ffreep
mov
push
inc
shrl
insb
movsl
rcl
cmp
push
adc
aaa
xor
or
icebp
push
pop
xor
mov
push
adc
and
std
orb
fbstp
push
mulb
xlat
or
stos
mov
jnp
sti
dec
jl
cmp
int
pop
jl
xchg
adc
repnz
sub
cltd
mov
std
xor
ret
jecxz
and
jnp
pop
dec
xchg
dec
mov
add
xchg
mov
or
inc
adc
rep
lods
lcall
in
adc
insl
ljmp
push
data16
divb
stos
or
sub
out
leave
jl
jae
pop
in
jb
and
mov
roll
aaa
dec
mov
sbb
pushf
leave
je
mov
fisubrs
stos
push
xchg
xlat
out
and
mov
cmp
inc
iret
ljmp
xchg
mov
dec
inc
sbb
mov
rcl
dec
mov
inc
pop
adc
cmpb
add
and
cld
dec
and
loop
imul
cmc
sub
push
ds
xor
call
inc
arpl
je
and
push
mov
enter
in
xchg
arpl
adc
clc
mov
dec
jae
mov
and
mov
adc
arpl
push
hlt
or
cmp
xchg
sbb
mov
xorb
sahf
or
xor
rcll
cmp
cltd
add
and
loop
fucomp
pop
ret
lcall
addr16
and
dec
adc
xor
in
pop
add
mov
cmp
data16
sub
lods
andb
mov
cmc
in
adc
mov
mov
or
scas
xchg
mov
dec
insb
or
sbb
mov
clc
sub
and
mov
icebp
out
dec
pop
lds
fcoml
roll
cmp
js
sub
ja
xor
enter
jb
inc
cmpsl
mov
test
testb
mov
aam
shlb
outsl
das
sub
mov
test
repz
jnp
mov
dec
lock
les
push
call
mov
jae
or
cmpsl
subl
mov
das
out
push
and
shrl
adc
lds
push
out
mov
mov
arpl
xlat
das
jg
add
repnz
enter
icebp
cmpsl
and
xchg
mov
mov
sub
mov
cs
push
cli
xchg
mov
shr
clc
push
xchg
andl
mov
pop
shrl
push
stc
adc
pop
imulb
push
in
loopne
aaa
repz
pop
ficoml
mov
pop
stos
mov
neg
pop
out
cmpsb
adc
mov
or
negl
test
push
hlt
imul
lret
mov
sub
movsb
jbe
fists
or
sbb
jle
xchg
or
sub
cs
repz
cmp
shrb
mov
iret
int
sub
mov
mov
or
inc
push
fstpl
cli
ficomps
movsb
orl
ret
cwtl
xor
test
lcall
les
push
imulb
sbb
outsl
mov
iret
push
gs
stos
mov
repnz
mov
adc
mov
adc
fadds
inc
lods
fs
lret
ja
xor
sub
rorb
sub
add
mov
pusha
addr16
cltd
dec
ret
xor
je
pop
loopne
mov
adc
xchg
jbe
inc
into
cltd
and
cs
pop
mov
int3
sub
push
xor
notl
cwtl
push
xor
cmp
cmp
push
sub
rorl
repz
adc
lret
cli
mov
insb
jb
cs
lret
inc
imul
nop
sub
inc
repnz
repnz
xchg
and
cmp
repz
insb
stos
pop
push
jmp
imul
push
arpl
pop
pop
add
push
test
aaa
scas
fisttpl
call
nop
aas
repnz
add
inc
sbb
in
lock
lds
pop
scas
sbb
decb
xor
xchg
xor
and
mov
dec
lcall
push
push
jle
sub
cmp
ja
pop
mov
jno
cli
mov
add
push
pop
or
fucomi
out
jbe
mov
jae
mov
daa
or
cli
iret
in
mov
pop
xchg
xchg
test
dec
pop
sub
mov
inc
cmc
add
lock
cmp
insl
int3
mov
and
fidivs
jl
call
push
sbb
je
xchg
inc
push
adc
adc
mul
jae
out
sbb
js
sub
adc
jo
leave
lcall
sub
push
pop
insb
jae
movsl
jmp
xor
adc
lods
jp
jge
jne
push
test
in
xchg
pop
arpl
mov
jae
rclb
push
pop
add
push
sbb
dec
or
push
mov
imul
popf
ja
movsl
xchg
loop
negb
das
push
mov
jb
stc
shll
cmp
push
dec
cmp
adc
push
ja
fisubs
js
loope
movsl
or
lods
push
fadd
call
mov
ds
sub
jge
cld
mov
das
mov
inc
push
xor
push
out
imul
shrb
xlat
xchg
loope
cmp
lods
jp
pop
loop
inc
addl
add
push
inc
inc
mov
test
lahf
jne
shlb
ds
cmc
add
jl
repnz
jl
sahf
popf
out
loopne
jle
inc
pop
lds
cmp
sbb
jb
inc
minps
test
mov
test
cmpsl
pop
roll
pop
mov
xchg
inc
shld
pushf
nop
jae
and
mov
ljmp
mov
jno
mov
jmp
mov
inc
mov
mov
je
rcrb
imul
dec
inc
mov
mov
lds
cmp
push
std
add
mov
xlat
jno
js
out
xlat
sbb
add
fldl
js
aam
test
int
dec
and
notl
out
xorl
divb
xchg
inc
icebp
clc
stos
cmpsl
repz
adc
cli
jp
inc
xor
jmp
test
xor
cvtps2pi
xchg
hlt
addb
mov
jl
nop
and
pusha
mov
mov
pop
mov
inc
push
enter
cmp
ss
xor
popf
push
loop
test
scas
mov
jg
xchg
push
iret
xchg
sbb
daa
cs
shll
pop
mov
xchg
mov
js
and
repnz
xchg
testb
and
mov
arpl
sbb
fistl
in
call
xchg
mov
dec
fnsave
aaa
cli
xor
gs
jne
outsb
mov
leave
popf
jmp
lret
push
fidivl
jbe
daa
mov
xor
pop
leave
mov
mov
inc
das
cmp
stc
into
push
and
or
xor
or
mov
pop
pusha
and
xor
jbe,pn
lcall
or
fldenv
pop
mov
rol
xchg
push
and
add
and
and
stc
pop
pop
outsb
clc
test
lds
sbb
jge
pop
xorb
test
test
xor
add
inc
sub
pop
add
pop
jns
cmp
fistpl
mov
in
push
mov
adc
mov
jle
add
inc
sbb
xor
xor
xor
cmpsb
lock
add
insb
push
pop
push
sahf
adc
les
push
pusha
addr16
mov
add
jbe,pt
xchg
and
jmp
cmp
and
scas
mov
xchg
out
test
jo
sub
cmp
jge
js
std
inc
ret
cltd
or
cmpsl
mov
or
pop
jne
sbb
sub
add
cmp
lods
and
xor
push
out
mov
popf
outsl
sub
out
pop
pop
xor
fdivs
sub
shlb
arpl
add
push
popa
xchg
ret
cmp
pop
xor
adc
jmp
lcall
out
mov
mov
xor
lahf
testb
shlb
xchg
into
ds
repnz
fsubr
mov
lock
mov
leave
mull
mov
loop
insl
js
jg
or
mov
inc
xor
adc
or
rorb
jmp
lret
jmp
rclb
pop
push
jp
sbb
outsl
pop
dec
jmp
jge
cmpsb
mov
mov
xchg
mov
add
mov
lret
mov
daa
cmp
or
leave
inc
pop
sbb
xor
lds
push
cmc
mov
fwait
push
aad
add
push
mov
orl
dec
jle
into
dec
push
and
bound
sub
mov
fbstp
push
loop
rolb
adc
ficomps
pusha
mov
dec
stos
mov
arpl
faddp
loopne
rcrb
adc
push
mov
push
inc
sbb
and
movsl
lret
and
mov
xchg
or
jecxz
cs
pop
fdivrl
inc
adc
mov
jnp
jge
test
cmpsl
xchg
js
test
push
sbb
inc
cmp
outsl
jp
cld
icebp
bound
rorb
xor
les
loop
das
sbb
inc
mov
jecxz
ljmp
jge
xchg
or
imul
fmull
ljmp
rclb
int3
scas
fucom
popf
je
push
stos
sbb
iret
fsts
adc
adc
mov
or
out
xor
dec
cld
pushf
xchg
stos
sbb
test
jo
xchg
jae
inc
fstpt
pop
pop
push
dec
mov
outsb
leave
pop
es
sub
movsb
movsb
leave
dec
lods
push
inc
inc
pop
leave
pop
inc
int3
fs
ret
cmp
mov
adc
sub
ret
pop
pslld
cld
dec
lock
fucomp
ljmp
jne
out
adc
repz
testl
pop
and
xchg
stc
je
sarl
sub
jb
lea
xchg
aad
mov
dec
inc
popa
out
pop
jp
bound
jge
loope
mov
mov
or
jo
mov
xor
test
sti
mov
or
lock
cld
xchg
pop
andb
das
jp
xchg
sub
sbb
shl
xor
push
pop
movsl
pushf
mov
stos
adc
mov
outsl
mov
roll
mov
es
dec
pop
ret
cltd
int
xchg
mov
adc
cmp
and
sbb
jnp
xchg
out
std
lahf
gs
jae
or
hlt
imul
popa
aas
sub
inc
sub
dec
push
loop
gs
popf
loop
jecxz
pop
xor
jmp
imulb
pusha
nop
ja
test
lcall
ja
insl
cmpsb
mov
adc
and
leave
dec
iret
in
cmpsb
cli
jge
mov
or
and
xchg
pop
stos
outsl
sahf
dec
adc
cli
push
xchg
pushl
repnz
sub
mov
xor
mov
pop
cs
inc
sbb
push
xchg
adc
mov
mov
jns
insl
jne
test
mov
stc
or
adc
push
push
scas
cmp
stos
sbb
call
inc
push
xor
lea
pop
in
mov
and
add
hlt
sahf
repz
add
cmp
loop
xchg
pop
repz
xchg
dec
aam
pusha
je
into
shufps
sbb
rolb
clc
cwtl
adc
outsl
or
add
push
lret
push
fdivs
add
outsl
mov
loopne
or
repz
fs
add
dec
fstps
pop
xorl
outsb
int3
das
mov
cli
repz
push
call
fs
xchg
sti
and
jbe
movsl
mov
add
jnp
cmp
out
jno
aas
incl
xor
lret
lret
fs
xchg
and
push
fyl2xp1
sub
icebp
jecxz
jb
aas
adc
lret
cwtl
out
adc
sbb
xchg
cltd
mov
or
loopne
lea
and
ljmp
inc
in
bound
add
jmp
imul
rorb
cmc
in
aas
das
cmp
pop
lret
ds
inc
loope
flds
sub
jmp
filds
sbb
sahf
fimull
aad
pop
mov
cwtl
fnstsw
xchg
xchg
out
xchg
inc
roll
mov
punpcklwd
out
mov
sbb
xlat
int
ss
std
lret
inc
add
pavgb
in
mov
xor
mov
nop
and
xchg
xchg
mov
pop
pop
mov
test
mov
jne
cmp
cmc
ljmp
mov
aas
call
std
test
mov
add
loope
pushf
dec
mov
pop
ss
push
ds
and
mov
out
cwtl
xor
test
call
pop
mov
out
fiaddl
xchg
lods
and
nop
loope
sbb
dec
jmpw
mov
ds
std
jp
xor
loope
faddp
in
xor
inc
lods
jmp
xchg
dec
and
inc
or
je
scas
cmp
cmp
mov
popa
or
add
mov
scas
aas
dec
ret
mov
lods
ficomps
into
push
push
std
sub
sub
icebp
push
sbb
mov
daa
fs
in
mov
cld
out
xchg
dec
aad
jb
xchg
fimull
fsts
inc
lods
or
push
jp
scas
mov
lret
int
inc
adc
ficomps
dec
mov
ss
gs
into
jbe
pop
pop
sbb
icebp
mov
jge
mov
mov
push
or
lods
and
outsl
sbb
mov
xor
and
dec
add
push
gs
scas
faddp
or
dec
addr16
std
loope
jbe
mov
mov
inc
xchg
pop
push
mov
add
sbbb
pop
cmpl
je
std
pop
loop
adc
addr16
in
mov
out
inc
push
sti
sbb
int3
stc
add
int3
pop
movsl
push
orb
xchg
cli
or
mov
jp
out
mov
jno
imul
and
sub
test
mov
adc
dec
fs
or
jo
inc
jl
xchg
jl
stc
sub
cmpsl
cmpsb
stos
fisubl
mull
inc
ljmp
or
movsl
dec
subl
pop
out
lahf
mov
sub
sbb
xor
jnp
mov
popf
xor
or
cmpsb
call
mov
punpcklbw
jns
mov
js
push
stc
and
cmp
mov
js
scas
test
xchg
pop
xor
cmp
sub
and
add
jmp
push
dec
dec
arpl
push
mov
mov
sti
aas
sti
movsb
dec
pop
aam
sub
call
dec
aam
outsb
pushl
mov
loop
mov
jle
mov
mov
cmp
cmp
out
dec
or
sub
add
sbb
and
jo
push
insl
orb
scas
pop
sbb
jb
mov
ror
cmp
mov
es
aam
test
ss
lock
out
lret
pop
sub
or
and
xchg
adc
dec
inc
jmp
push
jne
pop
fwait
xor
je
xor
stos
incl
push
dec
incb
mov
or
xor
sahf
lret
rcll
repz
push
idivb
mov
cmc
inc
adc
push
adc
pop
test
mov
sub
and
fnstcw
mov
fs
std
stos
test
pop
repz
in
adcb
cmp
shll
insl
push
adc
shll
cld
les
in
imul
fwait
std
outsl
xorb
repz
adc
ret
mov
out
sti
push
xor
push
jno
leave
add
jnp
adc
insl
loope
int
inc
insb
xchg
mov
cmp
shll
cmpsl
dec
jns
xchg
push
adc
das
dec
inc
xlat
pusha
in
pop
out
jle
xchg
arpl
test
in
mov
fcoml
repz
aaa
jle
sahf
cmc
cmp
stc
int3
clc
adc
jb
push
icebp
fwait
shl
xchg
cltd
cld
or
pop
inc
jne
and
mov
push
dec
or
test
fsubrs
pop
das
mov
pop
push
enter
fmuls
ret
push
mov
es
sub
jmp
push
mov
scas
add
std
xor
mov
xchg
sti
lea
out
bound
aas
cmp
int3
or
mov
ficoml
jne
int3
push
lret
push
test
les
jmp
push
pop
nop
lea
mov
jmp
loop
adc
add
or
mov
loopne
ret
out
movsl
dec
sbb
mov
stos
cltd
mov
mov
inc
push
scas
cmp
fs
xor
clc
pop
mov
pop
and
fs
insl
jg
cmpsb
insl
dec
xchg
xorb
mov
in
cmp
scas
cmp
icebp
aaa
shr
aaa
xchg
fadds
jnp
push
xor
insb
outsl
arpl
das
mov
adcb
adc
mov
and
push
pop
jmp
mov
push
fsubrl
loop
xor
fs
into
pop
pop
pusha
xchg
sarb
scas
inc
or
and
push
jnp
push
sbb
mov
mov
push
data16
nop
xor
mov
push
and
sbb
test
inc
push
add
fwait
repz
mov
popa
adc
cmp
out
xor
inc
cmp
mov
mov
popf
data16
pop
ficoms
inc
fnstcw
dec
outsl
enter
push
xor
div
imul
test
adc
outsb
dec
push
mov
jp
inc
scas
in
ret
cmp
scas
and
repz
ljmp
dec
pop
aam
xchg
shll
lcall
int3
and
and
mov
test
adc
pop
and
xor
test
sub
push
or
push
jo
xor
xlat
fnstsw
lods
insb
movsl
fldl
cli
adc
pushf
fmul
cmp
sbb
mov
rolb
mov
fdivl
ret
mov
dec
jmp
out
ds
mov
push
and
js
sub
mov
fcom
xchg
push
xor
pop
inc
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
mov
cmp
addl
push
movsb
jg
adc
pop
ljmp
shlb
insb
ret
sysenter
sub
movsb
xchg
sar
pop
pop
repz
imul
addl
dec
ficomps
stos
stos
mov
test
hlt
clc
mov
std
dec
push
and
in
lahf
jbe
cmpl
inc
lret
jne
pushl
aas
push
dec
iret
lret
daa
out
flds
sti
cmp
insb
jp
clc
xor
ret
or
negl
icebp
mov
lcall
cli
dec
repnz
pop
popf
jb
cmp
inc
jbe
daa
incl
push
shl
and
xchg
and
push
sbb
or
fwait
and
mov
cmp
xor
add
pop
test
pushf
mov
sub
ljmp
jmp
inc
mov
push
and
or
push
jnp
mov
pop
orb
sahf
mov
outsb
cmp
pop
add
add
call
lds
add
and
dec
pop
add
mov
inc
pop
outsl
dec
enter
aam
or
inc
je
push
push
gs
dec
mov
js
push
mov
popa
sub
sbbb
rcr
pop
ret
mov
add
jecxz
xchg
add
aam
pusha
inc
or
nop
outsb
mov
push
sahf
out
inc
cld
dec
hlt
add
pop
ss
sbb
xor
repz
stos
shl
jle
push
xchg
inc
mov
loope
std
icebp
subl
xchg
mov
push
sub
xor
or
cmp
out
pop
and
mov
ret
pop
dec
movsb
clc
sub
inc
inc
ficompl
xchg
or
mov
sti
jno
jo
aas
imul
cmp
adc
ret
jns
xchg
dec
jo
mov
ja
and
incl
fs
push
pop
test
xlat
xor
hlt
xor
mov
sbb
pop
xor
pop
pop
out
mov
push
test
subb
mov
fisubs
xor
mov
push
or
call
mov
sar
iret
fbstp
cmpb
or
adc
into
fs
in
ret
test
mov
das
popf
xchg
xchg
add
adc
scas
hlt
mov
ss
push
out
cld
xchg
dec
sub
sbb
daa
out
mov
adc
mov
out
mov
xchg
testb
imul
bound
das
jmp
nop
adc
jbe
int
cmc
adc
jnp
cmc
xchg
sahf
pushf
sbb
cld
xchg
aaa
xor
mov
movsb
roll
shlb
pop
rcrl
cmp
push
mov
add
sub
mov
stos
and
ficompl
jne
xchg
xorb
inc
or
pop
jb
lcall
sub
leave
pop
cltd
outsl
jbe
aad
mov
push
xchg
fs
andb
inc
or
fisttpl
nop
scas
jp
shll
xchg
inc
jae
mov
xchg
mov
dec
divl
int3
es
mov
psllq
in
push
xor
or
lcall
fiadds
pop
fs
sbb
mov
repnz
cmp
mov
ljmp
call
stos
mov
xchg
push
cli
subb
dec
out
adc
iret
ficomps
sbb
icebp
int3
mov
push
dec
sbb
jmp
jle
ret
fwait
push
push
mov
dec
mov
mov
fcmovb
aas
clc
mov
mov
lret
enter
fildl
push
and
sub
testb
fucomi
xchg
addb
inc
xchg
sub
sbb
gs
jp
push
enter
xor
pop
and
pop
scas
and
shlb
pop
nop
xchg
mov
imull
pop
out
sub
cltd
dec
icebp
mov
cmp
insb
loop
push
ret
lret
orl
add
movsb
lods
adc
int
xor
out
cs
push
aad
es
ret
test
je
cmpsl
jb
mov
mov
cmp
pop
js
lds
cmp
hlt
add
data16
jl
ret
mov
adc
in
add
add
into
dec
cmp
sub
insb
mov
xchg
shlb
mov
and
xchg
mov
xlat
push
into
push
clc
out
cmp
stc
mov
pop
xor
add
loopne
mov
and
lahf
mov
push
push
adc
sti
mov
dec
cli
jbe
mov
fwait
pop
rcll
fisubrs
adc
iret
dec
pop
pop
cltd
cld
stos
xor
mov
call
sbb
repz
pop
jns
xorl
movl
js
inc
jae
lret
cld
dec
mov
loop
add
adc
inc
dec
arpl
popf
or
xchg
sbbl
push
mov
jne
bound
test
cmp
out
lahf
xor
scas
mov
mov
lea
int
lock
test
xor
imull
mov
mov
push
cltd
lds
and
mov
mov
jo
scas
jae
mov
xchg
or
xchg
dec
adc
fcompl
cmp
push
jb
dec
aad
xchg
shll
in
adc
and
lods
mov
mov
pushf
enter
jle
std
aaa
hlt
jno
data16
jl
jmp
dec
les
cli
pop
jbe
inc
fcoms
sti
inc
ljmp
xlat
push
pushl
push
xor
pop
arpl
mov
jmp
push
clc
aas
sub
pop
mov
dec
push
je
stos
or
sub
mov
push
flds
add
popa
test
stc
rolb
mov
xor
mov
inc
fldl
scas
inc
mov
outsl
divl
sbb
imul
mov
and
ss
call
out
cld
jae
inc
stos
xor
inc
push
gs
or
xor
pop
cmc
pop
mov
inc
test
daa
inc
js
mov
inc
dec
cmp
sbb
and
out
leave
cld
jbe
gs
xchg
leave
mov
push
mov
repz
jp
adc
shl
xchg
mov
xchg
fiaddl
inc
cltd
inc
into
mov
pop
mov
jb
dec
movsb
mov
cmpsb
mov
mov
inc
std
jmp
mov
popa
mov
and
icebp
in
shlb
loop
leave
push
in
pop
mov
pop
in
jecxz
mov
cmp
in
xchg
inc
push
jae
pop
and
sbb
jp
fcoms
xor
outsb
jbe
cmc
rcr
sbb
inc
aas
aad
xchg
mov
xor
scas
jbe
out
ds
insl
or
adc
out
xor
out
outsl
sub
dec
insb
in
mov
sbbl
jnp
xchg
cmp
call
inc
ljmp
inc
inc
adc
pop
jecxz
data16
inc
push
test
jmp
add
dec
mov
sbb
inc
push
daa
into
test
inc
sbb
into
add
xchg
jnp
inc
repnz
insb
pop
lds
out
insb
neg
mov
inc
das
xorb
adc
dec
enter
push
rcl
outsl
jecxz
shll
je
dec
out
adc
aam
mov
outsl
cmpsb
lock
pop
xchg
mov
lcall
sbb
fdiv
or
push
mov
cmp
pop
sub
hlt
daa
pop
xchg
cmp
push
rcrb
fs
insb
jae
adc
pusha
and
aam
jge
lods
or
inc
cmp
inc
push
test
test
daa
popa
sbb
cltd
out
add
je
mov
movsl
lods
mov
movsb
fbld
push
inc
jne
xor
scas
outsl
mov
pushf
popf
jmp
test
aam
lret
jg
mov
push
inc
std
stos
xchg
int3
push
js
repz
mov
dec
pushf
iret
mov
push
push
push
bound
sub
push
push
aas
or
addr16
and
mov
sbb
xchg
xchg
lret
das
mov
cmpsb
push
sbb
mov
jns
and
push
add
imul
ret
repz
in
sbb
dec
pop
arpl
dec
addr16
xchg
jecxz
adc
xlat
cmpsl
das
jns
adc
push
cli
inc
cmpsl
notb
cmp
push
test
jle
arpl
mov
xchg
into
push
xlat
dec
enter
sub
xchg
lahf
test
movsl
les
mov
sbb
push
pushf
stos
push
jmp
or
mov
mov
in
movsb
xor
add
xor
orb
stc
div
mov
mov
insl
je
test
jl
imul
pop
push
cmp
cwtl
fdivrs
ret
push
add
or
outsb
imul
dec
aad
jg
inc
mov
ret
insl
pop
into
sbbl
pop
xlat
ret
stos
in
pushf
jp
movsb
inc
fisubrl
or
mov
test
data16
cwtl
pop
mov
ficompl
lea
xchg
scas
aam
mov
mov
or
inc
jg
enter
add
out
xchg
and
jecxz
xchg
cmp
dec
and
dec
xchg
xchg
cmp
jne
fimull
xor
sub
daa
stos
mov
loope
decl
inc
push
sahf
jae
decl
shl
std
into
in
out
xor
test
xor
mov
dec
mov
fistps
cltd
adc
test
add
out
add
movsl
mov
jl
pop
pop
js
cmp
push
fcoml
mov
mov
ljmp
shll
nop
out
int3
lea
stc
mov
sbb
jo
cld
add
and
sahf
xor
iret
fwait
or
not
lret
mov
jecxz
rcr
push
loop
lea
cld
movsl
outsl
cmp
xchg
jg
cli
adcb
roll
pop
mov
or
or
pop
outsl
and
les
test
int
cmp
mov
sbb
ret
dec
jecxz
adc
xor
cmc
xlat
sarb
xlat
sub
testl
sub
xor
xchg
idiv
xchg
dec
xchg
mov
push
inc
sub
aaa
jle
cli
orb
push
cmp
cmp
dec
fs
fbstp
sbb
or
sti
int
jle
inc
mov
mov
or
push
adc
shrb
pop
imul
jne
sub
scas
jecxz
mov
inc
inc
pusha
inc
mov
pop
push
inc
jne
pop
rcll
cmpsb
mov
sub
cmpsb
lods
xchg
lods
jnp
mov
and
mov
add
adc
and
jbe
xchg
pop
outsb
jne
into
dec
sbb
fisubrs
mov
mov
sar
pushf
call
mov
loope
pop
shll
mov
dec
cmp
mov
lds
in
xor
mov
inc
lcall
and
pop
add
cmpsl
sahf
outsl
dec
fisttps
in
xlat
push
clc
and
cmpsb
dec
xchg
ds
in
ljmp
cmc
pop
jp
or
sub
je
gs
aam
inc
adc
call
aaa
mov
mov
and
jl
loopne
js
lcall
shlb
or
cs
mov
add
rorb
bound
push
dec
test
jnp
xchg
inc
jns
mov
and
jbe
fldt
aad
mov
ds
clc
arpl
fildl
mov
xchg
fs
leave
adc
shl
sub
addr16
adcb
daa
mov
pop
sti
cmpb
pop
xchg
inc
xchg
lret
sbb
mov
fnstsw
test
xor
push
mov
movsb
cmp
mov
fcmove
xchg
push
jle
jae
popf
jnp
pop
dec
mov
xchg
je
fstpt
mov
mov
xorb
mov
dec
adc
pop
mov
test
sub
cli
xchg
shl
jg
insl
popa
enter
sarb
gs
push
je
mov
insb
in
inc
xor
xchg
xchg
ja
imul
out
fldl
sub
shl
or
inc
lods
das
add
jg
sti
aas
les
or
mov
xchg
push
or
movsl
fimuls
push
mov
popa
add
iret
or
mov
add
jecxz
sbb
cmp
mov
xchg
xchg
mov
js
inc
loope
insb
inc
outsb
loope
stc
jecxz
shrb
adc
dec
mov
aaa
rcrl
cmp
mov
fldt
test
in
pop
mov
jg
loop
pop
push
or
mov
push
std
loop
int3
inc
cmpb
in
and
xor
mov
ja
mov
mov
stos
insb
pop
jmp
mov
test
xor
in
cmp
loop
icebp
sahf
shll
aas
sti
hlt
sub
aas
mov
jmp
call
mov
out
lea
or
nop/reserved
lds
xchg
push
stc
add
sbb
mov
cmpsl
arpl
dec
adc
or
shll
xchg
adc
mov
push
pop
mov
fnsave
adc
repz
sbb
sub
mov
adc
xchg
dec
inc
loopne
pop
jmp
add
add
push
int
jge
mov
cmp
lcall
xlat
push
fistpll
mov
subl
jl
into
inc
mov
xor
daa
mov
in
inc
pop
hlt
lret
push
adc
lods
sbb
pop
sub
mov
push
pop
pusha
pop
dec
movsb
aaa
push
xchg
mov
mov
daa
xchg
mov
cmp
mov
scas
adc
pop
dec
in
fs
add
add
sub
inc
fstps
pop
and
fstl
fldenv
lcall
dec
fs
lret
jge
sbb
push
ret
jbe
loope
idivl
jae
ljmp
repz
sbb
les
repnz
mov
push
lea
or
cmp
dec
adc
or
sub
aaa
leave
repz
xlat
sub
lahf
mov
xor
scas
stos
pop
cmp
inc
fdecstp
sti
dec
jg
ljmp
leave
jecxz
vpandn
stc
js
cld
repz
pop
push
ss
and
sbb
or
xor
xchg
sti
jmp
test
cltd
call
mov
stos
dec
ds
fcoml
data16
jo
cmp
or
pushl
ljmp
lods
mov
out
cld
or
lret
xorl
sub
popa
mov
mov
sbb
in
fisttpl
mov
inc
mov
cmp
sbb
sub
ja
mov
sub
dec
cmp
sub
mull
or
rcrb
mov
or
adc
fdivs
lds
dec
cltd
das
dec
or
std
je
cmp
inc
push
dec
gs
push
xor
add
into
clc
cmp
push
aad
lds
xor
or
dec
cmpsb
pop
enter
js
icebp
sub
addr16
xchg
jmp
pop
out
pop
xor
dec
xchg
in
push
lret
xchg
sub
xchg
out
adc
in
pop
mov
shlb
outsl
cs
imul
cmp
icebp
fldenv
push
ret
adc
rorl
mov
inc
or
das
jno
es
inc
xchg
jnp
ljmp
push
rcr
dec
cs
jns
in
xor
mov
sbb
xchg
mov
clc
cmpsb
jp
push
imul
call
jne
inc
cmpsl
mov
test
and
dec
inc
and
cmpl
popa
and
mov
loopne
push
cwtl
stc
in
xlat
lds
jge
pop
sub
inc
cmpsb
sub
cs
clc
popl
in
lret
push
and
sbb
ficomps
pop
adc
jnp
imul
arpl
xor
daa
lret
jg
or
inc
add
sbb
pop
xor
int3
inc
aas
mov
mov
push
jmp
int
popf
mov
gs
enter
mov
and
mov
mov
data16
ja
jecxz
mov
call
jno
stos
les
sbb
outsl
movsl
inc
push
in
inc
outsb
int3
mov
lret
popf
push
jmp
push
movsl
lcall
testb
pop
rorb
xchg
push
or
inc
imul
popf
outsl
in
aad
xchg
sbb
inc
lcall
and
cwtl
sbb
jge
stc
nop
xor
xchg
daa
mov
jns
inc
adc
enter
fsts
dec
sub
adc
dec
inc
sbb
jmp
push
in
lock
and
int
lret
hlt
shlb
std
test
cmc
into
add
push
sti
ret
addb
xor
mov
or
mov
sub
lock
test
cmp
pop
sahf
mov
icebp
or
and
ret
and
rcrl
dec
pop
fcmove
inc
xchg
test
movsl
mov
dec
cld
cmp
aaa
mov
or
mov
add
inc
jno
push
mov
mov
add
into
into
push
test
fistpl
pop
fnstenv
leave
repz
movsl
imul
mov
std
xchg
aam
push
jge
xor
ret
mov
dec
jg
sbb
jle
test
pop
add
cmpl
ljmp
mov
test
dec
dec
pop
dec
notb
pop
or
test
inc
dec
xor
add
fcoml
ficompl
icebp
popf
out
fsub
mov
dec
mov
movsl
mov
jb
gs
leave
outsl
push
stos
rol
test
mov
not
xchg
mov
and
incb
stc
hlt
aad
pop
cli
int3
lods
mov
sahf
mov
dec
cmp
inc
scas
jo
outsb
xor
and
popf
fstpl
test
mov
lret
aas
dec
mov
add
cwtl
jno
ds
sub
cwtl
jne
addr16
lahf
or
rcrl
sbb
xchg
xchg
pop
xor
lahf
lods
fsubrl
stc
dec
push
insl
xor
push
cmp
push
roll
clc
inc
roll
test
inc
testl
lea
cmpsl
shr
dec
push
call
and
mov
movsl
mov
mov
mov
jg
and
in
adc
dec
mov
adc
test
or
bnd
dec
mov
xor
call
xor
aad
mov
mov
dec
into
pushf
out
inc
add
cmpsl
loopne
xchg
hlt
shlb
mov
filds
pop
insb
sahf
in
pop
xchg
nop
sbb
mov
jmp
in
ds
and
jne
cld
xchg
sbb
les
out
mov
xor
mov
inc
fildll
sub
notb
dec
fisttpll
cwtl
dec
push
mov
mov
pop
stos
jle
call
sub
inc
ljmp
sahf
lret
hlt
mov
lret
sub
push
sarl
sbb
cmc
mov
xor
add
loopne
or
scas
sti
jne
push
inc
into
dec
cld
out
rcrl
int3
sub
mov
sub
test
push
insb
cld
out
in
inc
ja
test
jae
test
pop
arpl
lret
stos
ss
push
pop
loopne
gs
xorl
mov
adc
test
fldcw
inc
mov
jecxz
stos
andb
fcmovnu
or
xor
jbe
adc
lock
cli
adc
pop
mov
push
or
lea
pop
je
inc
adc
sbb
mov
flds
mov
cmpsl
push
xabort
and
sti
xchg
push
push
jae
call
xor
mov
adc
lcall
pmaddwd
out
testb
xchg
inc
push
in
jae
cmp
fadds
add
mov
pop
out
or
lret
xchg
pop
push
pop
xlat
xchg
mov
and
xchg
sub
out
sarb
jp
subb
fcomps
and
sarb
ds
fildll
hlt
or
or
lret
outsl
adc
xchg
jb
push
mov
out
cmp
sbb
out
cmc
std
int
sub
movlps
popa
cli
cmp
xor
mov
nop
adc
aas
testl
inc
iret
ret
pusha
rcr
lret
ret
sbb
sub
jg
lcall
mov
inc
scas
scas
into
fmull
xor
dec
in
stos
fsubp
pop
mov
adc
test
sbb
out
rolb
push
hlt
cli
pop
lret
cmp
mov
or
xchg
sbb
cwtl
icebp
mov
cld
dec
es
adc
out
pop
jae
cmp
or
dec
cmpsb
and
xchg
sarl
adc
sbb
daa
cmp
mov
sbb
lods
sahf
das
jp
sbb
out
add
xor
rcrl
leave
lods
subb
divl
mov
mov
stc
add
nop
dec
add
mov
jo
jl
mov
shrl
lret
dec
adc
aaa
sbb
loop
or
jecxz
orb
dec
pop
jae
push
lahf
adc
repnz
ds
mov
int
and
std
jp
xor
pop
or
les
xchg
int
xchg
ss
cmp
lcall
ja
mov
or
cwtl
adc
xchg
in
das
mov
dec
sbb
pusha
movsl
dec
ret
sub
sub
mov
movsl
out
push
xor
fwait
outsb
xor
inc
gs
je
arpl
das
push
cld
mov
popf
scas
pushf
or
pop
out
jno
sub
pop
arpl
pop
xor
sub
je
jmp
rcrl
adc
xchg
in
lahf
in
loopne
clc
dec
ret
test
cmp
cmp
mov
cmpsb
mov
in
sub
mov
pop
mov
sbb
outsb
inc
ja
ss
rorb
repnz
bound
lret
insl
xchg
or
in
mov
sub
rclb
inc
add
jp
push
mov
mov
jle
pushf
add
aam
xor
dec
clc
movsb
or
ret
and
and
jno
in
fidivrl
test
fwait
mov
dec
sbb
js
mov
js
sub
repz
mov
add
cli
xchg
mov
pop
sub
xor
jae
rcrl
rol
jae
inc
xchg
pop
push
ror
ficompl
inc
sbb
mov
cmp
pop
push
adc
pop
insl
ret
and
push
sub
push
mov
ficompl
movsb
sub
cmp
pop
or
dec
pop
or
andl
sub
movsl
sbb
imul
loopne
push
mov
ljmp
rcrl
adc
out
mov
mov
mov
xor
xchg
push
pop
or
stos
push
int3
mov
xchg
lods
cli
and
sbb
rorb
sbb
cmp
mov
imul
test
loope
std
mov
hlt
outsb
mov
aam
ja
xchg
or
lret
fs
pop
dec
sahf
push
fcomp
xchg
fsubs
add
rcll
loop
mov
hlt
inc
inc
lock
hlt
pop
pop
stc
pushf
inc
pushf
inc
int3
mov
jp
imul
inc
push
pop
sbb
xor
cmc
out
clc
jg
cmpsb
mov
cmc
mov
or
fisubrl
ss
cwtl
push
ss
xchg
shrb
hlt
mov
jecxz
dec
fistpl
loop
orb
mov
cli
xchg
jecxz
loope
fs
mov
push
fcmove
adc
fiadds
xor
mov
js
xor
jp
cmp
dec
inc
cltd
imul
push
pop
jmp
fwait
or
or
scas
dec
test
lock
add
pop
loopne
in
ds
pushf
push
sbb
mov
push
sub
and
and
mov
or
push
pop
sub
mov
mov
ret
lahf
cmp
loop
lock
or
out
in
inc
stc
pop
lds
add
inc
mov
outsl
adc
pop
jmp
sahf
cmp
out
inc
rol
mov
into
stos
sub
push
push
mov
test
mov
fnstcw
xchg
ds
ljmp
lods
cmp
push
mov
sub
or
lods
jmp
mov
push
cmp
lock
or
mov
cmp
adc
push
ss
lock
es
mov
bound
mov
add
jmp
dec
push
sub
call
push
xor
jae
addl
mov
xchg
sbbb
mov
stos
fsubl
fsubs
test
js
rorb
xchg
fcmovnu
cmp
idivb
adc
bound
mov
inc
cmpb
jge
popa
mov
fadd
mov
nop
lahf
sub
mov
out
cmp
jecxz
lcall
sub
movsb
cmp
pop
pop
add
mov
fs
mov
lret
push
andl
popf
sbb
lcall
xor
out
push
dec
xchg
fwait
cwtl
mov
fmul
jb
pop
or
outsb
xchg
adc
mov
push
cwtl
shl
test
mov
pop
pop
dec
mov
out
cld
pop
push
pop
inc
cmp
ds
push
push
ljmp
xor
pop
gs
scas
inc
cmpsb
lret
push
sarb
add
or
or
jp
lods
lret
xchg
mov
inc
bound
sbb
mov
mov
out
into
push
test
jle
jp
cltd
adc
or
mov
mov
std
outsb
push
into
mov
jo
push
xchg
or
shrl
xchg
aaa
dec
jp
mov
testb
aam
jmp
cmp
adc
das
jg
mov
ret
cmp
out
pop
enter
add
or
fcoms
pop
call
add
mov
push
pop
out
insl
leave
push
push
fistl
ficoml
jmp
lcall
std
cmp
rorl
loope
push
jns
sbb
mov
mov
repz
mov
ljmp
add
adc
inc
stc
mov
in
mov
mov
xor
xchg
lock
fdiv
les
sti
jp
fucomi
gs
cmpsl
push
push
les
sti
xchg
lret
mov
dec
dec
scas
fstpl
mov
jg,pt
jg
hlt
and
push
cs
xor
popf
xlat
cld
mov
and
xchg
aas
movsl
dec
mov
mov
cmovle
je
mov
cs
daa
imul
or
popf
add
arpl
pop
enter
mov
pop
adc
in
movsb
mov
fs
aaa
jle
cmp
cmp
jg
fimull
and
lret
push
aam
mov
test
imul
test
dec
push
pop
int
dec
or
cli
fs
pop
jbe
and
jnp
adc
std
jns
pop
imul
aam
jne
adcb
add
inc
cld
cld
jne
xor
cld
aad
data16
daa
pop
or
jmp
jle
xchg
lret
pop
mov
movsb
movsb
xchg
dec
and
or
jle
addr16
stos
mov
scas
mov
lea
lret
nop
xchg
roll
mov
xchg
xor
imul
movsl
lret
add
pop
pop
inc
subb
pop
mov
loopne
and
sub
int3
xchg
cltd
xor
mov
iret
ret
rcrb
push
movsl
xchg
inc
imul
add
je
and
not
stos
fdivr
xchg
xchg
adc
clc
mov
add
cmpsb
xor
add
push
mov
ret
lods
mov
scas
pop
flds
push
mov
push
fbstp
and
scas
sbb
add
sbb
mov
movsb
out
mov
fs
ret
pop
stc
iret
sbb
or
pop
jge
outsb
scas
cmp
pop
lods
push
and
repz
arpl
push
mov
and
xchg
cltd
adc
pop
jg
mov
mov
mov
test
scas
lea
hlt
mov
xlat
jo
cli
cli
cmp
jg
jae
lock
xor
fnstenv
addr16
lods
pop
rcrl
mov
push
hlt
sbb
push
push
lret
jo
adc
in
jge
lahf
sub
hlt
inc
sbb
push
jbe
sub
mov
insb
pop
bound
xchg
adc
mov
aaa
sub
push
js
cmp
sbb
push
arpl
out
and
cmp
lock
inc
mov
arpl
mov
or
sub
xor
fsts
cltd
mov
andl
pop
add
addb
mov
test
lock
mov
int3
mov
xchg
movsb
cs
cmp
push
mov
movsb
or
scas
loopne
push
arpl
ret
ret
in
mov
push
rolb
in
fsubrp
sub
mov
push
pop
cli
and
jnp
cmp
adc
out
adc
ljmp
ss
pop
pop
std
add
in
lcall
in
push
rolb
or
adc
cwtl
inc
imul
push
lahf
leave
mov
iret
das
jno
cmp
fisubl
mov
mov
dec
and
push
cmp
fsubp
cli
imul
cmp
add
cmpsl
fcoml
aam
scas
xor
push
iret
or
jne
jecxz
xor
out
add
sbb
aas
pushf
jbe
inc
and
add
repz
dec
lds
loop
mov
jmp
jg
xlat
mov
pop
jb
aas
enter
cmp
push
imul
mov
pop
out
xlat
pop
movaps
push
in
cmp
addl
sbbl
mov
and
out
cli
fucomp
xor
das
lds
inc
xor
inc
push
xchg
je
xor
pop
jo
and
jnp
sbb
adc
ljmp
mov
adc
or
data16
das
hlt
push
mov
mov
cmp
sub
addr16
push
xchg
int3
mov
test
cmpsb
cmpsl
mov
or
or
aas
dec
cmp
lahf
add
cmp
push
lcall
sub
xor
stc
repz
nop
inc
mov
cmp
repz
inc
xchg
mov
dec
jnp
xor
scas
leave
or
add
sub
jo
or
mov
sub
clc
or
stos
xlat
gs
jno
outsb
mov
add
mov
push
cmpsl
inc
add
cmp
pop
dec
sbb
mov
jle
dec
in
test
add
dec
ja
in
fiadds
aam
push
cmp
jp
mov
stc
out
movsl
jg
xchg
shrl
stos
rcl
jae
stos
sbb
outsb
sbb
mov
fldcw
sub
inc
cmpsl
insb
loope
movsl
in
lock
leave
sbb
sub
mov
or
adc
pop
or
rolb
sbb
add
leave
ret
arpl
fbld
and
out
or
or
jecxz
pop
add
dec
in
xchg
dec
add
xchg
sub
lock
push
out
sub
and
sub
xchg
push
cmp
xchg
xor
inc
hlt
movsb
test
stos
and
add
les
push
xchg
lret
jns
addl
movsl
inc
out
in
pop
lret
mov
inc
popf
cmpsl
push
std
outsl
or
mov
cmp
out
loop
mov
sbbl
icebp
pop
add
xchg
fimuls
xor
adc
sub
das
addr16
jecxz
ss
into
aas
mov
pop
ljmp
push
push
addb
add
int3
mov
jp
bound
int3
hlt
mov
inc
movsl
inc
cltd
and
mov
daa
mov
ret
xlat
ljmp
addl
sbb
mov
rcrb
mov
repnz
aad
push
pop
cmp
mull
inc
ds
cmpsl
mov
jp
push
jle
jp
dec
dec
jno
and
addr16
insb
outsl
xchg
loop
mov
fs
test
aad
mov
sbb
ret
fs
sahf
in
call
stc
inc
cs
mov
int
fimull
pop
jnp
inc
adc
cmpb
mov
out
xchg
sbb
fmull
repnz
dec
push
pop
jno
cmc
aas
xor
cmp
stos
mov
pop
fldt
sbb
fwait
push
ds
dec
xor
add
fdivl
fs
pop
xchg
cld
and
push
ret
mov
mov
js
sahf
mov
mov
stos
sub
lods
stc
pop
fildll
daa
jmp
mov
xchg
mov
cmp
outsb
mov
mov
in
sub
jae
xchg
nop
fimuls
mov
cli
fiadds
sbb
inc
mov
xchg
in
aad
mov
or
ret
std
in
add
ss
sar
jbe
mov
pop
das
mov
addr16
out
rorb
ljmp
fisttps
leave
cmp
shll
xlat
stos
outsl
add
scas
sbb
js
fs
mov
je
and
in
mov
mov
stc
sub
jge
dec
add
or
sbb
cmp
imul
cmc
dec
vpsubusw
or
fldenv
jmp
mov
push
xor
adc
inc
push
pop
in
scas
cmc
push
mov
jae
in
daa
bound
outsb
insl
cmp
lea
insb
pop
mov
pop
dec
mov
ljmp
and
add
fwait
jmp
pmulhw
pop
pop
lahf
add
dec
insl
mov
inc
ja
and
cwtl
aas
repnz
out
jecxz
test
out
inc
xlat
ds
lret
mov
jp
xor
repnz
mov
ds
or
adc
cli
or
add
push
pop
shlb
decl
inc
rorl
out
sbb
inc
or
mov
clc
movb
lds
push
mov
call
fmulp
fldenv
aad
dec
and
mov
or
xchg
ja
cmp
lret
jge
int
and
push
or
and
jecxz
xchg
xchg
das
or
and
add
xchg
inc
int3
pop
je
pop
pushf
add
mov
dec
pop
cld
mov
fstl
inc
add
or
daa
dec
das
push
mov
mov
inc
push
aad
mov
jnp
shlb
cltd
adc
sub
pop
push
call
in
mov
js
xchg
mov
lock
loope
dec
ss
mov
lods
sub
sbb
xchg
cmp
jge
add
mov
lods
sti
sbb
and
sub
loop
sub
adc
xor
cmp
nop
das
lahf
outsl
xor
mov
add
pop
adc
fnstenv
mov
sbb
push
jle
outsb
dec
sarl
lret
filds
or
outsl
push
mov
jbe
xchg
icebp
sbb
mov
and
int3
cmc
sbb
testb
cmp
cltd
jg
xchg
ss
and
cs
pop
inc
xlat
mov
in
cli
repnz
in
addl
mov
dec
mov
sbb
lcall
mov
andb
and
jno
xlat
in
ljmp
sub
push
fbld
cmpl
xchg
outsb
or
adc
js
mov
mov
pusha
les
lods
cwtl
mov
xchg
sub
xor
outsl
popa
imul
rcrb
mov
test
cmp
test
js
jo
push
mov
cmp
adc
sub
inc
push
pushf
mov
cmp
jne
add
xchg
incb
jmp
mov
outsb
icebp
popl
in
sub
stc
std
inc
mov
enter
arpl
inc
sub
fstpt
int
sar
xchg
loop
sub
xchg
push
dec
clc
aam
push
fidivrs
mov
mov
stos
cmp
stos
fst
scas
gs
mov
mov
rorl
fisubl
daa
pop
scas
push
xchg
iret
aas
pusha
lcall
into
cmp
shl
push
or
sbb
out
fisttpll
xchg
mov
mov
pop
jg
mov
out
fiaddl
mov
pop
xor
out
test
stos
cmp
lcall
adc
movsl
out
cmp
scas
dec
fwait
lods
push
in
fsts
jb
hlt
rsm
mov
adc
ja
cmp
shl
inc
dec
insl
js
nop
mulb
fsubs
cmp
mov
push
inc
add
jns
xchg
cmp
jecxz
leave
cmp
pop
inc
jbe
and
cli
ss
je
arpl
jo
bnd
loopne
push
push
inc
jno
cmp
adc
adc
fisubrl
cmc
jle
mov
lcall
sub
and
dec
dec
subl
fwait
jns
jno
stc
mov
sti
nop
mov
pop
insb
dec
gs
push
into
ss
add
and
lea
jmp
cmp
rcrl
and
pusha
mov
jg
lds
adc
or
jp,pt
imul
jg
shr
inc
pop
fdivr
ljmp
and
popa
test
sti
in
std
jne
lock
stc
addb
xchg
push
jae
dec
es
cld
arpl
jl
dec
add
add
adc
push
jne
or
out
pop
aam
insb
adc
dec
pusha
adc
push
push
pusha
les
hlt
or
cmc
movb
lret
xchg
psllw
movsb
sbb
add
stc
sub
cmc
cltd
stos
mov
xor
mov
and
sahf
movsl
mov
and
cmpsl
lea
pop
das
in
jnp
jbe
cld
and
add
jo
xchg
sbb
lahf
mov
mov
lea
xor
dec
fstl
testb
in
nop
test
xchg
ret
outsl
push
das
addr16
enter
ss
mov
je
xor
cmp
rorb
jo
sbbl
jp
mov
jnp
dec
jbe
pop
aaa
and
aam
sub
and
and
cmc
fisubs
cld
int3
and
ret
mov
icebp
mov
popf
mov
mul
icebp
pop
incb
mov
popa
fs
and
inc
sbb
push
cs
aas
sub
jbe
mov
xchg
loope
call
mov
lods
mov
adc
testb
sbb
cltd
rcll
jae
ret
test
cmp
xor
repnz
or
bound
xchg
mov
xor
pop
ror
lock
jecxz
inc
outsb
hlt
insl
sub
bound
cmp
shl
or
stos
or
sti
mov
jbe
jecxz
xor
in
scas
or
xor
mov
jle
stos
int3
repz
cmp
icebp
mov
pop
bound
mov
mov
xlat
inc
mov
std
jmp
mov
movsw
aad
mov
mov
movsb
cwtl
decb
and
sti
in
sub
ficoml
insl
xor
stos
frstor
stos
jle
pushf
fldenv
aaa
orl
decb
aad
sub
insb
jns
jb
push
xchg
dec
rcll
scas
mov
scas
insl
xchg
testb
repz
inc
sub
or
add
lret
out
mov
fadds
adc
fsubrp
mov
xchg
cmp
and
stc
scas
jg
or
inc
test
inc
mov
jmp
and
popa
push
cli
mov
inc
cmp
and
cmc
push
mov
xchg
fcmovnbe
arpl
jne
mov
push
es
jge
and
jmp
mov
cmc
adc
and
sub
xchg
pop
int
repnz
outsl
inc
xchg
sub
mov
dec
ds
sbb
push
ds
sahf
addr16
lods
test
sub
es
mov
mov
repnz
inc
xor
xchg
xchg
nop
fsubs
xor
dec
ffreep
jg
mov
push
popf
rorb
cmpl
shlb
mov
inc
dec
xor
dec
cmpsb
stc
inc
sub
push
out
adc
mov
ss
dec
and
movsl
shll
cmp
mov
insl
faddl
in
fwait
in
scas
int
popl
dec
sarb
push
stc
add
sbb
adc
xor
adc
cwtl
pop
ss
sbbb
stc
std
xor
shrl
in
mov
lods
xor
and
gs
mov
mov
popf
mov
and
test
and
cmpsb
sub
mov
xor
js
xchg
inc
cmpsb
ja
js
das
fisubs
fsubrs
icebp
pop
and
adc
ret
pop
sub
dec
faddl
sbb
jb
inc
mov
sbb
pop
outsb
pop
mov
outsl
inc
ret
push
mov
inc
lahf
sahf
sub
aas
cmpsl
sub
out
std
and
dec
jmp
add
xchg
test
cmpsl
decl
in
dec
sbb
mov
std
shll
loope
xor
cltd
notb
xor
bound
xor
enter
inc
rep
jo
xor
xor
out
sub
adc
ret
push
stc
dec
xor
dec
repz
jne
shll
xchg
mov
imul
sarl
xor
outsl
sbb
cli
and
mov
gs
dec
push
scas
push
sbb
in
xor
xchg
es
in
cld
add
add
aaa
out
outsl
push
stc
clc
fwait
ret
pop
xor
xlat
add
repnz
mov
xor
sbb
push
xchg
shlb
dec
jnp
jne
lods
or
push
xchg
mov
out
fcoms
aad
jb
ljmp
addb
into
jns
xchg
and
jae
test
insb
inc
push
adc
out
inc
ja
push
dec
daa
cmp
shrb
or
push
sub
enter
jo
into
pop
xchg
and
ret
inc
ljmp
adcl
imul
lea
jne
xchg
shl
mov
out
sub
imul
jbe
xchg
mov
fcoms
outsb
das
loope
test
mov
addr16
dec
lods
adc
shl
aam
xchg
repnz
lcall
enter
les
xchg
pop
stos
fcmovu
sub
adc
divb
cmp
or
in
sub
into
enter
imul
mov
xor
imul
lods
test
push
inc
adc
fidivl
ficompl
popf
sub
ds
xor
mov
sarl
dec
les
cld
inc
add
add
jecxz
mov
fldcw
aad
mov
cli
xchg
dec
jnp
xor
push
mul
xacquire
lock
xchg
cmp
mov
jmp
or
das
cmpsb
out
das
mov
int3
repz
mov
sub
mov
loop
inc
ds
pop
cltd
dec
jg
mov
hlt
or
xchg
cld
xchg
std
loopne
mov
dec
lret
xor
xlat
dec
ret
into
mov
insl
or
repnz
mov
stos
loopne
notb
xor
cs
push
fistpl
and
out
mov
push
stos
adcb
push
dec
aas
jecxz
pop
int
pop
xchg
sbb
mov
pushf
enter
mov
jmp
test
push
mov
fisttpll
loopne
inc
add
push
pusha
push
repz
mov
adc
and
mov
pop
inc
int
cmc
notb
cmpsl
fldt
and
ficompl
mov
nop
int3
xor
push
dec
jp
or
pop
mov
lods
jbe
inc
mov
xchg
js
mov
push
fs
xor
stos
jecxz
xor
sub
push
cli
out
or
inc
xchg
loop
and
sub
or
test
xchg
movsb
gs
sub
push
mov
pop
cs
out
mov
shrl
push
rcr
js
into
nop
push
fmull
push
fstpl
mov
mov
cmp
adc
xor
int
xchg
dec
js
add
shrl
fsts
mov
mov
adc
je
dec
fs
push
mov
mov
dec
push
in
sbb
test
push
mov
push
sbb
into
test
ss
les
pop
or
shlb
rorb
dec
mov
inc
shlb
sub
mov
push
fstps
jno
movsb
loope
aam
jo
fdiv
clc
test
std
pop
not
push
pop
sub
push
cmpsl
sbb
stc
movsl
movsb
cmp
cltd
lret
fsubl
mov
ret
cmpsb
lock
adc
loopne
or
das
incl
xor
iret
sbb
pop
mov
cli
pop
lods
fcompl
sub
dec
fsubr
jl
shll
orb
movsl
repnz
xor
pop
rorl
fdiv
xchg
or
mov
pushf
es
movsb
push
ss
test
and
cmp
lock
cmp
mov
xchg
jo
pop
xchg
iret
lock
push
dec
mov
lea
or
push
fs
jbe
add
mov
test
mov
ret
xlat
fs
mov
mov
lods
lahf
jne
pop
jecxz
pop
mov
mov
popa
paddusw
fsubrl
fistps
test
call
leave
mov
jl
lcall
sub
stos
in
xchg
ja
enter
push
cmpsb
insl
movsl
mov
sbb
pop
cmp
or
add
adc
sbb
push
mov
inc
inc
lock
nop
xor
pop
pop
sbb
fisubl
mov
sbb
adc
sbb
addr16
cmpsl
sbb
nop
cmp
cmp
je
xor
mov
cmp
inc
stos
inc
je
or
stos
fst
add
pop
rcrl
push
fiaddl
dec
adc
jo
pop
lahf
adc
cs
jge
add
cmp
nop
and
fcoml
pop
mov
pop
sbb
lds
test
int
iret
clc
sub
pushf
fmul
cmp
add
cwtl
ss
adc
mov
dec
int
fstpt
iret
insb
pusha
pop
repnz
pop
xor
cmc
ss
outsb
cs
rolb
or
subl
gs
mov
clc
hlt
cli
aaa
loop
cld
rcrb
inc
testb
cmp
rdtsc
std
sbb
jb
jmp
scas
ret
pop
jg
cwtl
mov
int
int
in
or
mov
cmp
shrl
pop
mov
lret
jge
movsb
dec
cmp
dec
nop
pushf
jle
mov
jno
push
nop
mov
popf
movsl
pop
xchg
outsb
add
ret
push
dec
add
dec
jg
or
repnz
lock
not
sbb
jmp
adc
popa
lret
enter
xchg
ror
cltd
sti
out
lcall
push
lahf
or
xor
mov
inc
jle
dec
test
push
push
pushf
mov
xchg
add
push
sbbb
lret
ret
cmp
lods
xor
jno
ljmp
imul
arpl
mov
and
std
loopne
pop
fimull
or
daa
and
ss
and
push
in
faddl
sub
testb
jb
dec
aaa
pop
and
fbstp
sbb
inc
pushf
stos
fmuls
mov
or
out
xchg
push
mov
inc
dec
and
std
test
je
loope
mov
mov
mov
sub
cmpsl
rcrl
push
sbb
cli
sbb
popa
jg
stc
mov
mov
dec
pop
push
jne
add
in
test
mov
mov
sbb
pusha
add
aaa
lods
add
adc
mov
aas
jge
out
push
mov
pop
hlt
pop
or
dec
cmp
xor
push
push
aas
je
xor
loope
lar
outsl
sbb
psrld
jmp
mov
pusha
mov
out
icebp
rcrl
scas
push
push
mov
lret
mov
push
cmpsb
stc
cmp
mov
scas
xchg
jbe
test
lods
push
jl
fwait
mov
pop
mov
pop
rclb
jge
push
ljmp
lds
mov
xchg
lret
inc
decl
xor
add
aad
xlat
inc
sar
or
cs
imul
xchg
fwait
mov
adc
sbb
adc
mov
outsl
aad
outsl
scas
testb
adc
mull
add
push
loope
data16
ljmp
and
xchg
hlt
pop
mov
loop
inc
filds
out
insl
clc
mov
or
aas
sbb
leave
inc
and
push
out
add
ljmp
aam
inc
xlat
ja
mov
xlat
fldcw
cli
push
fildl
es
mov
mov
flds
shrb
inc
lahf
js
adc
adcl
insb
and
and
push
icebp
xchg
nop
outsl
iret
pop
ja
cmc
mov
jns
jnp
xchg
shlb
daa
mov
xor
push
cmc
pusha
mov
pop
popa
sub
movsb
clc
es
inc
mov
sahf
imul
loop
loopne
ja
xor
pop
and
cmp
aaa
lods
out
adc
inc
lret
inc
xor
add
scas
mov
out
lcall
hlt
push
mov
fidivrs
sub
inc
lea
pushf
lea
or
cwtl
cmp
pcmpgtd
ljmp
lock
ret
pop
add
mov
orl
repnz
pop
inc
mov
xchg
xlat
pop
retw
aas
and
sbb
pushf
xchg
loop
arpl
lods
push
sbb
cmc
jmp
pop
and
pop
pop
sub
cmp
or
rcll
jg
adc
subb
add
pop
rol
rcrl
mov
clc
inc
shlb
and
adc
gs
insb
shr
mov
insb
jno
mov
push
es
das
lock
pop
push
rcr
scas
in
idivb
push
add
lock
in
xor
mov
sbb
jge
aas
pop
jae
sti
cwtl
adcl
shlb
dec
jnp
add
mov
lds
jge
lret
cmpsb
aas
and
lcall
js
inc
fcomp
lds
int
sbb
mov
mov
mov
xor
pop
mov
inc
fisubl
jns
out
loop
out
jnp
inc
lahf
mov
cmp
mov
inc
xchg
sub
pop
cmp
or
mov
fwait
je
adc
cmp
inc
insb
jae
lea
and
jb
adc
lods
mov
ja
notl
push
call
sub
cmp
xlat
out
jecxz
les
pop
adc
cmc
push
popa
into
push
jecxz
shl
push
out
dec
sub
xlat
pop
popa
rcrl
ret
test
fwait
pop
sub
pop
inc
aam
xor
sarb
push
out
sahf
push
or
add
pop
js
sbb
push
fldl
stos
fs
mov
test
sbb
rcll
jge
das
jp
fdivrs
pop
or
jl
push
into
stos
loopne
adc
or
imul
jbe
mov
mov
mov
rcrl
push
mov
mov
cmp
pop
stc
loope
push
inc
in
push
hlt
sub
pop
fstp
push
add
lock
iret
xlat
fbstp
xor
xlat
xor
pushf
bound
out
jmp
sub
xchg
aas
dec
dec
mov
mov
mov
iret
sbb
lret
push
int3
mov
popa
pop
adc
dec
int3
or
adc
mov
push
test
jno
cmp
mov
cmp
cmp
cmp
ja
or
pslld
inc
loope
mov
cmp
and
fnstcw
mov
xchg
imul
lea
addr16
sub
mov
arpl
lods
push
jnp
mov
outsl
cmp
mov
movsl
lea
les
cmp
jnp
jg
inc
push
dec
test
jb
scas
insb
inc
jmp
xor
cmc
sub
cmpsb
imul
pop
adc
daa
mov
sub
shr
ljmp
pop
sub
push
inc
mov
pop
les
jl
das
popa
adc
sahf
out
lahf
lods
pop
clc
and
pop
bound
stos
mov
pop
js
mov
fs
das
out
inc
mov
mov
nop
mov
mov
std
cwtl
das
push
popf
cmpl
mov
jle
ds
nop
sbb
fists
je
mov
inc
lock
out
xor
jle
nopl
mov
and
lahf
mov
jmp
iret
cs
dec
add
xchg
les
jle
jg
lret
xor
jle
adc
subl
inc
xor
xor
cmp
std
out
mov
int
adc
dec
sahf
mov
fmuls
lods
inc
inc
or
fstl
push
adc
push
je
fs
or
jg
xlat
cmp
loope
lcall
jb
icebp
repnz
pop
cmp
clc
lods
or
movsl
mov
ljmp
push
out
cmp
jno
shlb
cwtl
imul
add
sti
or
cmp
in
dec
xor
mov
jb
sbb
in
push
mov
push
xlat
inc
jge
push
mov
sub
and
xchg
scas
movsb
xchg
inc
ret
repz
push
repnz
sub
add
notl
scas
xor
adc
push
out
mov
loope
dec
inc
or
push
mov
stos
jmp
lcall
aaa
pushf
mov
je
lock
test
jns
out
mov
adc
fsubs
and
mov
insl
scas
adc
dec
jns
imul
adc
push
fmull
push
lock
fisttpll
sbb
pop
dec
xchg
out
push
scas
dec
sti
push
into
push
pop
pop
ret
and
fs
cs
je
sub
and
pop
inc
maxps
mov
mulb
push
cld
jmp
xchg
repz
stos
stc
push
inc
pop
fwait
das
ret
xchg
in
xor
les
enter
xor
xor
jnp
je
inc
loop
loope
ja
lods
sbb
rol
mov
push
push
lock
and
sbb
pushf
cmpsb
std
adc
lret
pop
sbb
mov
push
sbbl
in
mov
imul
pop
aaa
push
lahf
mov
or
jmp
dec
aas
sub
lds
cwtl
jmp
iret
das
fists
sbb
test
fidivl
mov
or
push
test
es
add
mov
sbb
xchg
movsl
adc
dec
mov
sub
adc
add
sahf
stos
stos
sub
lahf
sti
into
mov
fimuls
mov
xchg
mov
fdivs
adc
jae
mov
cli
fcoml
pop
or
es
enter
dec
into
cltd
adc
in
inc
jge
mov
pusha
mov
xor
movsb
cmp
insl
lods
shlb
les
dec
xor
sub
aad
push
aad
ret
xchg
jns
adc
adc
inc
popf
test
lds
inc
fs
sub
inc
mov
je
aad
mov
mov
mov
or
adc
mov
pop
mov
or
scas
std
pop
adc
test
add
test
pop
jnp
push
xchg
popa
divl
iret
mov
dec
sub
mov
aaa
imull
push
out
inc
sahf
push
ja
and
lock
xlat
jno
xor
add
sbb
dec
sbb
mov
push
mov
mov
mov
xor
aad
mov
pop
fadds
outsl
jns
sub
repz
dec
push
or
sbb
sbb
fnstenv
decl
and
nop
sahf
pop
adcl
in
icebp
in
aad
insb
xchg
adcb
xchg
rcrl
cs
add
test
or
ljmp
adc
mov
das
cld
and
mov
pop
subb
push
inc
mov
stos
add
and
jmp
cld
dec
xchg
sub
dec
inc
cld
pushf
lcall
jmp
push
test
adc
inc
sahf
test
pop
jecxz
inc
and
dec
inc
dec
pop
movsb
out
lcall
push
pusha
movups
pop
jb
add
add
lret
insl
mov
enter
mov
add
push
lret
xor
cli
jp
mov
lret
jns
sbb
sub
outsb
incb
rcr
fildl
cmp
xchg
mov
test
lods
fwait
xchg
pushf
sub
addr16
mov
cmp
call
pop
in
add
push
mov
cld
and
daa
aad
cmc
xlat
into
sbb
jecxz
xchg
addr16
imul
aad
call
mov
sub
pop
ljmp
lock
aad
mov
xchg
mov
mov
push
sub
xchg
stos
aaa
es
jmp
inc
stc
dec
cmp
cmp
add
ja
iret
pop
notl
es
js
sub
jecxz
mov
sub
pushf
xchg
dec
lock
into
lods
xchg
and
fs
sbb
jle
mov
lea
pop
pop
call
call
pop
loop
add
iret
enter
dec
xor
sub
ds
rolb
cmpsl
jge
jmp
insl
sbb
or
xchg
icebp
xor
das
mov
sarb
jge
xor
xchg
and
int3
sbb
pop
out
cmp
icebp
xchg
ret
in
flds
sbb
adc
stos
out
cld
in
xchg
mov
xchg
push
pop
xchg
sbb
dec
mov
xor
xor
add
pop
push
popf
add
cmp
fsubl
xor
sbb
in
inc
shr
cmp
fs
or
popf
inc
and
mov
stc
or
xor
mov
lcall
inc
fs
addr16
adc
dec
loop
test
lahf
sar
scas
cltd
test
push
dec
add
or
jp
push
or
js
out
sbb
cmpsl
pushf
fs
cwtl
in
iret
or
in
inc
mov
or
jno
jle
les
mov
or
in
out
adc
adc
and
sub
stc
push
mov
inc
xchg
aad
shr
jnp
push
es
xchg
add
jnp
mov
in
adc
push
add
push
add
flds
fldcw
or
xor
rcrb
shlb
gs
aaa
or
xor
lds
and
adc
mov
fsubrs
in
enter
movl
sbb
imul
fsubrl
ucomiss
ret
xor
mov
push
mov
jge
lods
xchg
loope
dec
stc
movsb
or
cld
or
sbb
and
cmp
dec
fwait
inc
cmpsb
iret
mov
xlat
int3
fs
dec
dec
adc
pop
push
movsb
mov
insl
push
lret
jp
mov
or
fsts
jge
sub
in
adc
add
push
adc
sub
aam
stc
lods
inc
push
out
push
mov
stc
mov
ljmp
push
icebp
and
mov
clc
xor
mov
cltd
leave
lods
fists
xor
lret
jmp
jmp
push
or
dec
sar
stos
sbb
aam
jecxz
xor
imul
nop
mov
popf
mov
jle
xchg
inc
push
int
cmp
mov
je
xor
fwait
cltd
das
out
stc
scas
call
cwtl
stc
push
jmp
mov
fwait
pop
and
div
jb
enter
pusha
sbb
clc
int3
scas
xchg
repnz
and
and
ss
pop
fcmovnbe
subl
cli
popa
test
sbb
mov
aaa
subl
sarl
pop
pop
mov
mov
push
ljmp
adc
mov
mov
clc
lods
mov
sbbl
sbb
dec
aaa
icebp
add
out
and
sbb
or
es
mov
cmpsl
inc
and
loope
in
cmp
test
jbe
fbstp
lods
and
dec
xor
dec
scas
rorb
jbe
es
or
xor
mov
out
jmp
adc
xor
xchg
or
xchg
inc
lock
mov
mov
test
rcll
jb
inc
pop
dec
jp
insb
idivl
fwait
and
imul
fwait
mov
jns
mov
mov
mov
inc
cmc
jne
xor
ret
mov
testb
dec
dec
clc
dec
pop
inc
xor
sbb
mov
outsb
ljmp
aad
sbb
dec
pop
loopne
hlt
jno
comiss
les
pop
pop
add
enter
hlt
jl
and
shlb
pop
fbstp
rep
xchg
xchg
xor
xchg
sub
sahf
push
fldt
ret
xor
dec
push
xor
sub
jmp
popf
mov
or
nop
andl
in
xchg
inc
es
add
push
cmp
push
pop
jae
lret
push
nop
sbb
pminub
jle
jmp
mov
push
mov
lret
hlt
mov
loope
pop
jg
ds
push
pop
sbb
xlat
jecxz
cli
jle
jne
pop
loope
addr16
pop
adc
adc
movsb
insl
daa
dec
mov
and
iret
mov
cmp
mov
mov
out
sub
xchg
repnz
jns
mov
adc
test
jmp
fnstsw
push
mov
lret
lods
imul
mov
jb
xchg
jg
in
pop
lock
push
bswap
divb
xchg
pop
subl
or
mov
incl
pop
and
hlt
popf
add
ds
rcl
inc
add
repnz
inc
aas
clc
inc
pushf
dec
xchg
sub
out
mov
movsl
repnz
pop
pop
mov
insb
push
jne
test
jp
cmc
cs
push
lret
cmovs
lcall
sbb
imul
push
ljmp
mov
or
loope
add
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
imul
xor
addl
loopne
xchg
movsl
xor
xlat
mov
mov
cmp
cmp
or
stos
insl
dec
test
leave
pop
out
insb
ret
orb
aad
shrb
hlt
sarb
mov
popf
and
and
mov
cli
sub
es
aam
cmpsb
cli
jge
cwtl
icebp
mov
je
sub
adc
pop
jb
jno
inc
inc
pop
sbb
decl
adc
stos
in
push
in
xchg
lret
out
imul
xchg
pop
cmp
jg
mov
std
dec
xor
insb
pop
xor
scas
les
aaa
insb
je
imul
push
outsb
xchg
mov
adc
pop
divl
mov
jge
sub
loopne
push
adc
enter
loop
mov
fists
andb
orl
jnp
fstps
rcr
mov
les
cmp
repnz
mov
inc
mov
xchg
jb
sub
icebp
dec
aas
iret
inc
iret
loope
mov
cmp
testl
push
xchg
test
adcb
testl
imul
sub
mov
mov
dec
lret
call
int3
iret
shrl
imul
int
mov
shl
cmp
ds
out
jae
bnd
pushf
scas
sarb
mov
inc
jbe
dec
jo
sar
sub
jmp
pop
xor
push
imul
clc
cmp
fstpl
sbbb
sub
mov
scas
jne
movsl
call
stos
icebp
insb
int
jle
inc
and
rcrb
mov
cwtl
dec
adc
mov
fcmovnu
mov
add
outsl
in
dec
ss
sub
sbb
adcb
dec
sbb
mov
dec
or
repnz
cvttps2pi
pushf
add
adc
inc
lahf
mov
repnz
pop
and
shr
les
and
pushf
das
sub
fs
cmp
clc
fstl
jne
jmp
fstpl
cmpb
daa
xchg
sbb
mov
xchg
push
mov
mov
test
dec
daa
mov
inc
insb
inc
shlb
into
call
push
iret
cmp
mov
and
adc
cmp
dec
sub
mov
data16
pop
push
pushf
addr16
shrb
and
xchg
pop
or
mov
mov
sti
cltd
mov
jbe
faddl
repz
jge
xchg
mov
daa
lods
jge
cs
or
jns
call
jae
int3
adc
shl
xchg
ljmp
lods
fmuls
in
add
inc
int
gs
sbb
and
popa
push
es
dec
jno
stos
jp
xchg
dec
movb
xlat
andl
jmp
and
rolb
pushf
cltd
and
imul
test
mov
and
mov
test
jg
iret
out
std
and
or
sbb
xor
loopne
mov
shll
in
xor
mov
sub
xor
and
shr
and
int3
test
dec
lret
sub
dec
or
arpl
xor
push
cmpsb
push
mov
push
out
loopne
scas
das
sbb
add
les
cmp
pop
and
dec
fstpl
xchg
adc
inc
jl
ds
fistpl
mov
ds
scas
pop
cmp
pop
pusha
mov
call
call
inc
dec
mov
test
mov
push
xlat
mov
test
mov
dec
aam
xchg
fadd
push
or
ficoms
and
xorb
sbb
xchg
rcl
sbb
push
push
inc
sbb
xor
ja
ljmp
ss
out
sub
xor
shlb
and
jnp
insl
dec
inc
or
pusha
jp
jle
pop
in
popa
loope
js
jae
ds
loopne
icebp
aas
mov
sbb
clc
lcall
pop
add
iret
fs
add
inc
out
ficoml
iret
test
scas
imul
push
push
jg
popa
xchg
jle
xchg
call
xlat
mov
ds
add
cwtl
js
scas
sbb
xchg
into
rcrl
xchg
push
bt
mov
push
movsb
lahf
js
out
mov
lds
xchg
xor
sbb
inc
mov
pop
inc
movsl
icebp
inc
dec
jle
test
ror
adc
dec
mov
iret
mov
js
pop
mov
lds
orb
data16
pop
outsb
cmpb
mov
or
xchg
fwait
mov
or
cmp
mov
inc
std
mov
add
xor
push
ljmp
outsl
imul
cmp
call
or
lea
mov
or
inc
inc
jmp
pop
jle
addb
mov
inc
ret
nop
bound
or
repz
add
int
xor
mov
and
fwait
xchg
loope
dec
adcl
pop
xchg
lret
fdivrs
fsts
xorl
aas
xor
add
jb
outsb
cmp
pop
scas
ds
jb
repnz
jmp
sbb
call
mov
sbb
flds
sbb
and
aas
lods
add
inc
cli
insl
lea
mov
movsb
imul
test
or
cli
movsl
pop
in
cmc
out
aas
iret
andb
inc
std
pushf
pop
int3
daa
inc
push
push
inc
mov
mov
or
jns
cs
popf
cmc
in
in
int
mov
push
aam
add
add
test
loopne
mov
je
inc
pshufw
push
jle
in
pop
xchg
test
lock
aad
mov
sti
scas
lret
adc
pop
jp
or
or
test
sbb
imul
negb
sbb
and
pusha
cwtl
dec
xor
subl
pop
pushf
in
stos
stos
xchg
sarl
jns
movsb
int
cmp
js
mov
lea
mov
xchg
ljmp
inc
mov
sahf
rorl
sub
dec
mov
int
dec
adc
fnstenv
add
insl
jno
out
adc
pusha
mov
push
jbe
dec
mul
adc
ljmp
es
adc
dec
movsl
sub
pop
je
pushl
adc
mov
xchg
dec
mov
lahf
ret
sbb
data16
cmp
in
pusha
les
mov
inc
mov
adc
pop
and
xchg
cmp
adc
mov
jo
jno
rcrb
lea
popa
out
sub
aaa
mov
popa
mov
xor
ret
mov
ret
or
xchg
mov
or
xchg
je
outsw
je
adc
sub
xor
into
shll
push
out
imul
inc
mov
xor
add
movsb
mov
inc
push
cld
adc
fsts
xor
xchg
out
nop
outsl
jne
adc
out
inc
imul
stc
shll
jnp
mov
mov
or
popa
cmp
add
pusha
jnp
sub
inc
shlb
mov
dec
push
mov
shlb
jno
inc
dec
add
test
rcrl
mov
or
push
rorl
test
in
inc
sbb
xor
push
jae
lods
push
push
pop
mov
inc
js
xlat
andb
loopne
in
rorl
out
jno
and
cmp
push
int
lret
repnz
iret
mov
pusha
idivl
pop
xor
arpl
add
adc
add
fwait
outsl
fxch
pushf
test
push
sbb
adc
mov
pusha
ja
cs
pusha
jns
mov
sarb
mov
mov
pop
outsb
aam
adc
shrb
in
sub
push
mov
push
ret
adc
rorb
jle
and
mov
mov
push
push
int
fidivl
mov
pop
incb
icebp
jae
xchg
mov
enterw
jecxz
inc
sbb
jbe
fs
sbb
nop
and
fdivr
xchg
call
lcall
sbb
mov
popf
mov
sub
jb
mov
movsb
or
or
or
sbb
fs
aam
mov
mov
mov
or
outsb
shlb
sbb
fdivrs
push
push
out
lcall
in
dec
inc
into
into
testl
or
int
sbb
stc
out
sub
or
cwtl
movsb
ja
mov
insb
es
daa
repz
pop
cs
bound
xchg
cmpl
cmp
scas
mov
icebp
shll
and
leave
or
fisttpll
push
leave
jp
pop
cmp
in
mov
inc
pop
mov
add
push
out
sahf
outsl
mov
xor
pushf
lds
sub
rcrb
imul
test
push
sar
out
in
sti
cmp
dec
je
arpl
pop
inc
mov
inc
sarl
dec
pop
xchg
xchg
test
mov
mov
adc
fistps
mov
push
imul
sbb
es
jnp
fisttps
imul
sahf
mov
cltd
push
repz
sub
ds
call
lods
in
rorl
cli
sarl
lret
and
xor
add
mov
or
dec
push
cmpsl
push
dec
out
andl
sbb
inc
test
xchg
or
and
or
lret
scas
xor
mov
pop
pop
in
jae
mov
sti
lods
and
mov
mov
add
ds
loope
mov
andl
cmp
inc
or
xor
stos
ss
iret
cltd
push
cmpsb
cmp
jnp
mov
cmp
loopne
inc
cmp
pop
pop
pop
iret
jl
sbb
mov
adc
out
cmp
pop
xor
int3
data16
les
imull
cmp
je
jno
loope
call
test
sub
gs
cmp
xchg
push
aad
inc
imul
push
jbe
jno
adc
push
sub
inc
mov
mov
xchg
movsb
out
mov
jb
add
lds
mov
mov
outsl
adc
xor
fsubr
mov
jmp
mov
pushf
push
push
fldt
rcrl
incb
and
scas
scas
rcrb
cmp
popf
jno
or
scas
mov
mov
in
fs
decb
sti
outsb
push
inc
push
xchg
dec
int
in
adc
fisubrl
loope
test
and
mov
rorb
lods
lods
pop
outsb
sarb
sub
and
fistps
addl
cmp
fcomps
push
in
mov
xor
jl
and
push
push
xor
icebp
loope
dec
in
int
into
insb
adc
jge
repnz
dec
inc
imul
mov
cmpsb
xlat
adc
inc
aaa
cmp
pushf
xchg
mov
push
cmp
les
int
mov
push
mov
add
and
and
sub
movsl
lds
movsb
push
subb
and
lea
or
push
test
adc
ret
mov
xchg
inc
push
leave
icebp
push
or
js
out
cmp
int3
into
fwait
incb
dec
hlt
shrl
inc
mov
mov
jns
popa
pop
push
mov
pop
rolb
out
mov
jb
mov
mov
cs
pop
mov
jne
inc
cmc
cmp
mov
sbb
jnp
xchg
add
or
sub
jl
arpl
mov
cmpsb
push
inc
adc
cmp
ljmp
pop
dec
insl
cwtl
lods
iret
and
and
xor
sub
and
test
movsl
mov
pushf
mov
jnp
aad
punpckldq
add
push
adc
rolb
cltd
xchg
mov
push
cmp
pop
or
inc
pop
pop
scas
and
fdivrl
stos
stc
scas
push
dec
loopne
mov
inc
in
push
cmp
sub
sbb
xor
pop
out
iret
ss
std
jbe
bswap
jecxz
into
cmc
lods
xor
repnz
jno
dec
add
adc
push
sub
test
arpl
decl
std
cmc
xchg
dec
sub
cmp
push
xor
rorb
loope
or
aad
jae
adc
call
dec
sub
sbb
cwtl
jmp
push
xlat
int3
rclb
cli
mov
ds
mov
adc
mov
cmp
lods
dec
out
addr16
mov
jne
mov
pop
mov
xorl
fsubl
jae
popa
aas
mov
add
sarb
jb
push
add
sub
xor
fidivrs
and
pop
xchg
dec
pop
dec
and
inc
mov
ds
fiadds
cmp
mov
lahf
push
adc
add
push
jns
mov
inc
pop
jle
out
lods
xchg
stos
es
mov
mov
ret
int
out
inc
push
clc
cmp
ds
fs
cld
adcl
enter
pop
mov
mov
mov
xchg
ss
pop
mov
push
xor
jp
cmp
push
push
fldl
cltd
cmpsb
subb
cltd
sub
mov
icebp
push
xchg
lret
xchg
jmp
jl
or
and
addl
mov
stos
adc
adc
pop
dec
mov
iret
mov
hlt
imul
inc
mov
jge
pusha
in
inc
or
pop
test
mov
shrb
push
lahf
hlt
in
cmc
xor
jnp
fdivs
jp
push
loopne
mov
flds
and
pop
fimull
mov
orb
fucomp
pop
out
sbb
xchg
imul
push
ret
mov
cmp
es
cmp
les
roll
sbb
pop
pusha
xchg
shrb
jecxz
cwtl
xor
inc
cmp
cmp
xchg
jb
jns
loop
dec
int
ds
jno
pause
mov
lods
xor
testl
hlt
popa
cmp
sbb
rolb
push
cld
das
push
test
leave
or
xor
mov
lcall
movsb
loop
mov
push
movsl
nop
push
dec
xchg
pop
inc
je
loop
je
add
fadds
test
cs
icebp
in
or
mov
dec
mov
xchg
popa
push
push
fsubrs
add
fwait
push
adc
and
cwtl
fcomps
add
push
or
add
sub
mov
sbb
jg
test
mov
jb
jmp
dec
pop
push
in
or
push
adc
sbb
cmp
mov
jle
xor
mov
lods
push
add
test
xor
nop
stos
fimuls
fisubrs
dec
sub
iret
add
xchg
cmp
sub
xor
push
mov
dec
jns
testb
dec
inc
cmp
pop
cwtl
push
jnp
xor
int
ficomps
jae
repz
int3
dec
mov
dec
rcrl
adc
push
xor
shlb
scas
mov
and
xchg
and
jnp
repnz
pop
dec
mov
cmpsl
jmp
sub
mov
mov
inc
dec
je
or
call
lods
mov
push
std
popa
jl
adc
jno
dec
sub
xor
scas
mov
adc
dec
cmc
subl
xchg
hlt
popa
out
adc
xor
jb
jae
in
stc
shlb
imul
aam
pop
mov
daa
xchg
insl
lods
mov
xchg
nop
mov
inc
roll
and
aam
mov
push
pop
call
in
jecxz
add
push
adc
shlb
subl
and
out
fildl
xor
cmp
scas
repz
mov
pop
mov
iret
inc
add
stos
add
and
dec
inc
nop
dec
mov
inc
int3
mov
imul
out
adc
mov
xor
repnz
mov
mov
int3
mov
hlt
jmp
arpl
fmull
cmpsb
icebp
pop
sar
and
leave
rcrl
leave
jl
into
pop
out
or
mov
add
xchg
jge
xlat
icebp
xlat
and
lret
roll
dec
insb
stc
mov
pop
fxch
repnz
sub
adc
popa
das
popf
insb
ljmp
rcrb
popf
pushf
push
test
test
shr
fisubrl
lret
and
sub
fldt
int3
add
xchg
push
xorl
pminsw
rorl
into
js
mov
xchg
outsl
mov
call
mov
movsb
cmp
repnz
mov
push
fsin
push
pop
adc
cmp
mov
push
stos
into
out
push
scas
xchg
mov
lret
pop
lret
pop
sub
sub
js
sbb
lahf
jae
sbb
cmp
xchg
loope
lret
inc
add
int
int
outsb
loopne
nop
cmpl
neg
mov
adc
xchg
pop
mov
mov
test
mov
in
into
ud2
in
add
sub
xor
cwtl
into
lret
inc
pushf
aas
js
je
adc
xchg
mov
ss
aam
xlat
xlat
xchg
lcall
xchg
je
out
adc
push
cmp
fstp
inc
int3
xor
lock
or
cld
jae
mov
inc
pop
pop
or
inc
inc
xchg
out
popf
std
aaa
push
clc
dec
xchg
ss
push
test
xchg
xchg
lret
jle
rcr
push
lcall
jmp
sub
jae
shlb
fisubrs
hlt
cli
inc
push
sbb
pop
xorb
in
add
mov
cli
cmc
fucomp
mov
push
mov
mov
ret
outsl
movsl
iret
mov
loop
lds
mov
push
mov
scas
outsl
or
clc
sbb
inc
in
sti
pop
repnz
inc
pop
or
xlat
andl
push
andb
add
and
xchg
xchg
shl
pop
ret
dec
push
push
jp
sahf
pop
enter
loop
loopne
pop
sarb
dec
mov
jl
add
xlat
jmp
iret
and
cmp
cs
int
je
dec
xlat
pop
and
mov
pusha
loopne
dec
cmp
or
das
imul
in
pusha
pop
fstps
pop
movsl
cmp
test
cmp
leave
outsl
sub
mov
mull
sbb
outsl
cltd
adcb
sub
inc
in
cs
clc
arpl
mov
loop
jnp
mov
inc
fwait
add
pop
sub
add
sub
xchg
sub
xchg
dec
inc
push
fbstp
adc
push
jno
dec
movsl
add
loopne
and
jno
ss
dec
sub
adc
xchg
push
aas
xchg
sahf
and
cltd
pop
and
rcl
push
loope
sub
in
imul
pop
sti
jg
inc
add
sbb
cmp
fsubrl
adc
out
inc
arpl
loope
adc
shrb
jmp
or
outsl
andl
mov
idiv
jno
push
mov
cmp
aad
or
into
sarl
dec
icebp
jl
ret
cmp
ja
sub
push
out
dec
push
jne
addr16
cmc
repnz
and
loopne
and
leave
popa
dec
xchg
pop
popa
fwait
mov
xchg
jns
leave
pushf
inc
cmp
add
push
mov
stos
push
dec
xor
jnp
out
pop
test
xchg
jp
loop
xor
in
xchg
jo
mov
bnd
pop
sbb
cmp
cltd
in
push
int
xor
mov
notl
jno
cmp
jbe
jno
lahf
movsb
xchg
loopne
loop
jns
sub
sbb
xor
dec
sbb
cli
into
and
pusha
pop
xor
push
xchg
lret
add
pop
iret
stos
dec
stos
clc
or
xstore-rng
cmpsl
pop
jo
jg
mov
sub
ljmp
pop
pop
mov
jecxz
dec
lret
popa
enter
push
popa
fimull
xchg
mov
mov
shlb
mov
mov
pop
xchg
xor
cmpb
js
imul
mov
shll
mov
lock
mov
aad
adc
outsb
sarl
enter
and
mov
out
mov
int3
add
pushf
xor
fs
dec
or
mov
xor
dec
inc
arpl
xchg
push
push
popf
aas
ret
dec
or
xlat
and
add
xchg
cli
mov
jl
cld
hlt
jecxz
cmp
stos
dec
push
mov
sbb
fistpll
mov
mov
cmp
xor
mov
push
adc
mov
push
or
jne
test
int3
mov
mov
insl
mov
addr16
push
in
push
loopne
dec
dec
popf
mov
jmp
testb
cmpl
mov
es
fistpll
push
int
addl
jns
out
xchg
ljmp
je
mov
fidivrl
cmp
aam
icebp
loope
ret
jbe
jo
mov
inc
jnp
fcoml
dec
mov
stc
stc
jge
test
inc
cltd
inc
mov
cmp
mov
push
pop
mov
mov
out
mov
sub
lds
fdivp
bound
push
test
loop
mov
adc
push
pop
shlb
test
adcl
xor
scas
adc
adc
sarb
push
jno
jbe
out
cld
xchg
nop
mov
nop
push
xor
pop
jne
cmp
pop
xchg
mov
addr16
add
into
pop
sahf
popf
shrl
iret
mov
mov
rorl
imul
mov
pop
mov
sub
push
lret
dec
mov
rcl
push
push
jae
out
push
adc
inc
sub
dec
shlb
cmpsb
fsubr
cmp
ljmp
mov
mov
pop
and
and
sbb
dec
clflush
adc
push
cmpl
and
dec
lods
push
mov
enter
xchg
jae
mov
jmp
hlt
adc
lods
mov
push
or
dec
add
xchg
push
adc
sbb
pop
in
push
cmpsb
stos
cmpsb
lret
sbb
xchg
nop
idivb
mov
sbb
adc
push
int3
sahf
pop
ljmp
xor
xchg
cmp
dec
mov
rolb
mov
xchg
imull
arpl
test
sub
lcall
sub
and
arpl
sbb
xor
shrl
mov
inc
mov
sub
mov
xor
push
imul
pusha
push
in
sbb
and
rclb
les
jns
and
lods
repnz
xor
dec
lods
mov
xchg
sbb
mov
cmpsl
adc
dec
jge
xchg
sarb
movsb
push
pop
ds
add
jnp
add
pushl
mov
in
cli
mov
gs
clc
setns
sbb
cld
sbb
cs
push
inc
int
std
sbb
daa
cli
xor
shrl
xor
sub
outsb
xor
pop
not
insl
sti
stos
and
ret
jbe
icebp
cmc
jle
fsubrs
imul
fldenv
cmp
mov
scas
pop
mov
mov
loopne
pop
loop
pop
jb
xor
sarl
jmp
test
push
jb
inc
adc
addr16
push
fsubrl
jle
addb
jp
xchg
in
inc
sub
mov
cmp
xor
addl
mov
repz
jno
add
insl
push
ljmp
pusha
push
pop
ja
aad
cltd
sbb
lods
les
cld
mov
test
push
cmc
mov
mov
aaa
mov
push
in
jmp
and
in
sub
push
push
add
mov
daa
sub
dec
mov
xor
pop
shll
dec
mov
nop
fsubs
fwait
cmp
or
rolb
aas
fidivrl
out
sub
and
push
cmc
je
mov
imul
loopne
push
cwtl
xor
inc
inc
sbb
arpl
and
out
das
and
lds
push
repnz
int3
xor
mov
mov
mov
xchg
int
xor
or
xchg
stc
into
popf
mov
push
xchg
push
jecxz
aaa
xchg
mov
jne
out
jnp
push
xlat
int3
pop
xor
sbb
inc
add
mov
dec
pop
cmp
push
cmp
rcrl
inc
mov
pusha
push
and
or
cmp
cld
ficomps
mov
sbb
aas
mov
xor
jnp
ret
icebp
xchg
jecxz
inc
test
rorb
fidivrl
mov
inc
inc
aas
hlt
fwait
cmp
xor
addr16
shrb
xor
mov
mov
lahf
decb
push
xor
and
in
mov
iret
lcall
push
shr
inc
mov
mov
sub
lea
scas
push
cmp
imul
mov
dec
fistps
pop
mov
scas
mov
jnp
jle
repnz
insb
add
mov
ret
push
mov
ret
add
sbb
inc
dec
enter
icebp
pop
outsl
push
loopne
lret
mov
inc
jp
repnz
push
mov
cmp
lret
enter
in
xchg
xchg
and
jb
sbb
pop
mov
js
mov
and
mov
jb
andw
jno
jae
push
lret
in
xchg
push
ds
jns
jns
xchg
adc
test
adcb
push
and
jl
mov
adc
jmp
fwait
sub
test
leave
adc
inc
scas
mov
mov
ds
or
inc
dec
xor
dec
fs
movl
or
mov
loop
pop
lcall
push
std
mov
xor
inc
pusha
jae
imul
or
outsl
hlt
xchg
popf
add
movl
in
movsl
sarb
push
cmpsl
jo
call
popa
mov
aaa
adcl
xorb
mov
sbb
and
movsb
jle
and
daa
dec
add
int3
and
pop
xor
pop
lahf
das
pop
jle
loopne
pop
in
leave
or
jmp
pop
inc
cmpsb
mov
pop
or
pushf
imul
cmpsb
das
jmp
ficoml
daa
insl
dec
xlat
not
push
out
pushf
and
or
pop
dec
jnp
jno
mov
xchg
repnz
mov
cmc
xorb
sub
jae
icebp
cmc
add
adc
fsubrs
cmp
mov
cmpsb
fs
shll
inc
jae
mov
jne
test
lret
sbb
mov
arpl
cmpsl
out
or
mov
jne
hlt
xchg
js
lcall
adc
aaa
call
js
sbb
pop
and
cld
iret
jb
je
xchg
lret
xchg
lret
jae
sbb
mov
sub
push
jne
or
not
mov
cltd
jg
add
inc
pushf
and
inc
test
lods
aam
or
fs
ret
test
rcr
loope
jo
pusha
add
jp
cmpsl
nop
stc
or
jl
add
les
cwtl
mov
push
nop
mov
or
push
jmp
repnz
stos
adc
lods
shrl
out
fisubrs
mov
fadds
jnp
pop
nop
push
cmp
dec
push
sbb
int
lock
dec
cmpsl
xchg
sub
xchg
sub
cli
rcll
into
fistl
push
cld
cmpsb
add
sbb
call
jno
fs
or
sbb
cld
gs
lea
push
add
insb
insl
xor
sti
std
popf
or
rorl
inc
sbbb
in
insb
dec
in
lods
xchg
stos
jp
int
ss
add
out
test
rorl
fstl
aaa
fbstp
or
add
jno
movsl
shlb
mov
push
xchg
inc
cmp
and
test
clc
fsubrs
add
cwtl
cltd
popf
or
or
mov
adc
jg
enter
shrl
pop
sbb
lds
std
outsb
mov
jns
fwait
push
jecxz
jno
les
loop
pop
xchg
ret
push
fdivl
xor
in
and
adc
xor
jb
pop
lds
or
or
dec
xor
sbb
or
mov
xlat
jecxz
leave
sbb
iret
aaa
sub
clc
or
jg
iret
mov
and
mull
xor
jmp
push
or
daa
and
or
mov
pop
dec
inc
pop
hlt
leave
push
cmpsb
mov
and
fisubs
icebp
fisubrs
dec
jno
cmpsl
cmp
xor
lcall
jns
jl
push
sbbb
icebp
popl
add
or
decl
ds
cmp
pop
pop
mov
push
daa
dec
pop
xchg
shrb
lock
jmp
and
push
jne
and
rcrl
dec
pop
sbb
cld
jmp
addr16
xor
and
out
xlat
pop
stos
cli
int3
or
xor
loopne
adc
not
int3
arpl
rclb
or
jno
out
push
jle
out
cmp
iret
icebp
das
movsb
cs
add
movb
adc
jno
stos
adc
mov
lods
test
ficoml
repnz
loopne
jp
inc
pop
cmp
repnz
dec
mov
jg
xchg
cs
mov
xchg
rorl
cmp
rorb
mov
cmp
pop
fwait
bound
clc
xor
js
jle
mov
call
pop
dec
mov
jle
loopne
dec
cmpl
sub
pop
and
mov
fs
xor
rcrb
sub
lea
adc
mov
es
pop
mov
leave
sub
jecxz
popa
rorb
and
aad
movsl
lcall
movsb
shll
xchg
mov
leave
clc
jl
inc
pop
dec
out
icebp
jmp
dec
mov
sbb
pop
inc
clc
adc
adc
sbb
mov
std
mov
rolb
and
jle
adc
popa
sbb
dec
jmp
xchg
repnz
xor
push
adc
ret
jl
pusha
sbb
cwtl
adc
clc
cmp
out
pop
fstl
lods
daa
jle
pop
loop
cmp
pop
mov
aas
and
loop
jno
push
add
fwait
adc
mov
outsl
xchg
mov
xchg
nop
movsb
cmp
push
aad
lret
mov
clc
push
inc
int3
bound
xchg
enter
mov
jge
orb
jbe
add
push
dec
xchg
pop
iret
sub
aas
xchg
mov
aad
lds
mov
ret
cmp
and
stos
subl
cmp
cmc
or
outsb
fiaddl
lea
out
mov
test
es
testb
enter
jge
push
jecxz
mov
add
and
jno
jnp
rcr
adc
mov
in
dec
and
pop
jne
sti
sbb
call
push
jmp
enter
pop
int3
mov
in
add
shrb
in
cmp
movsl
leave
test
cld
or
mov
inc
cld
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
and
push
rolb
sub
pop
fdivrs
iret
stos
lret
in
lahf
jcxz
pop
fstl
lret
js
mov
jmp
add
inc
inc
and
adc
popl
andnps
mov
dec
mov
jae
mov
ss
shlb
aam
push
jo
mov
or
add
mov
pop
leave
shrb
add
jmp
das
aas
fcoml
or
push
sub
push
or
sti
shrl
ret
cmp
cmpsb
cmp
mov
dec
mov
hlt
xor
jbe
hlt
out
mov
out
insb
insb
inc
jl
dec
mov
mov
fwait
xchg
fstl
dec
or
sbb
adc
mov
sbb
lds
popf
add
jae
rcr
divb
ljmp
dec
es
mov
mov
ss
inc
mov
pop
mov
mov
mov
sti
jle
jb
scas
mov
subl
cs
adc
les
adc
inc
lret
jg
or
mov
insb
dec
jne
enter
jl
dec
and
and
idivl
add
in
sbb
jno
xor
out
push
lret
mov
mov
dec
jb
pop
mov
adc
outsb
xchg
jge
nop
and
mov
mov
test
cltd
sub
sahf
insb
mov
rol
mov
cmp
sbb
xchg
cmp
pop
or
fisubl
aad
sbb
icebp
inc
cmpsl
mov
out
inc
int
arpl
out
push
xchg
xchg
out
lock
data16
jo
mov
in
mov
loop
jnp
int3
and
lock
cli
push
push
mov
sahf
fiadds
dec
movsb
pop
dec
jb
jecxz
pop
mov
pop
scas
mov
xchg
add
mov
dec
mov
rep
and
or
xor
mov
repz
clc
push
icebp
ret
aad
mov
out
nop
pop
mov
test
sbb
cmp
out
pushl
test
or
xchg
out
lret
test
add
cli
push
adcb
stc
adc
fiaddl
sbbl
ds
lret
enter
cmc
jmp
dec
mov
lock
sahf
call
add
inc
mov
xor
lahf
in
lahf
fdivrl
and
xor
xchg
sti
or
jo
mov
mov
cs
ret
popf
in
out
into
mov
xor
cld
push
xor
insb
add
outsl
out
adc
ret
pushf
mov
and
xor
adcl
test
sbb
pop
dec
mov
mov
xchg
cmpsb
testb
call
scas
mov
pop
and
pop
inc
rcrl
outsl
into
jb
sub
dec
imul
ret
fcomp
push
dec
sub
add
idivl
and
mov
push
xchg
inc
sbb
jbe
scas
adc
fimull
repz
mov
int3
jbe
out
filds
std
jmp
bound
test
or
jge
repnz
push
cltd
fs
aaa
or
scas
push
mov
mov
lret
andb
pop
dec
adcl
dec
fstps
mov
rolb
clc
dec
movsb
mov
pop
adc
and
outsb
cltd
dec
out
outsb
adc
aaa
fsubs
push
test
lds
adc
movsl
out
mov
lods
xchg
sub
jecxz
icebp
sub
or
dec
cmp
fabs
jg
xor
shl
lret
outsb
dec
popf
and
movb
mov
lds
outsb
sbb
lock
cmove
dec
lret
jbe
jmp
popf
xchg
sbbl
hlt
jno
adc
mov
mov
sbb
sahf
and
cmpsb
mov
push
subl
and
cmp
hlt
lock
stos
cmp
jae
or
jnp
jne
cmpsl
imul
loop
fsubrs
cmc
les
fistl
cmp
movsl
lret
mov
adc
gs
arpl
inc
inc
cmpb
data16
push
cs
cmp
sub
cmp
adc
fcomps
int
shrl
js
ret
jnp
mov
cs
aam
int
hlt
jmp
mov
mov
fdivs
mov
into
sbb
scas
hlt
push
or
sbb
or
psllq
and
cld
lock
sbb
cmp
jns
xchg
sub
data16
sbb
movsb
mov
cmpsl
scas
jmp
orb
jae
xor
enter
cltd
movsl
pop
outsl
cmpsl
cli
jns
cmc
rcll
mov
scas
test
cs
adc
jno
xor
clc
adc
cwtl
adc
movsb
int
loop
xchg
xor
or
imul
or
add
aas
imul
push
cltd
push
mov
movlhps
lea
out
ret
mov
inc
jae
dec
xchg
imul
xor
maskmovq
or
loop
mov
rcrl
mov
lcall
push
dec
mov
out
testl
fs
les
iret
out
sub
cli
sbbl
push
push
orl
pushf
cli
sub
gs
frstor
xchg
adc
stos
dec
frstor
mov
fsubl
fwait
negb
or
test
clc
cmp
icebp
push
pop
stos
stos
fdivs
add
xchg
test
scas
cmp
dec
push
or
jmp
mov
mov
out
int3
mov
jbe
mov
pushf
ret
pop
jecxz
add
inc
xor
sbb
inc
dec
sub
sub
in
call
ss
repz
lock
lods
mov
bound
xchg
push
add
cli
or
jp
test
mov
pushf
imul
and
iret
inc
cmc
jmp
popa
sbb
mov
daa
jecxz
pop
lret
xchg
xchg
scas
xchg
sti
repz
and
pop
xor
lock
leave
cltd
or
out
lea
js
scas
and
outsl
bound
in
mov
movsl
mov
lods
addr16
ljmp
test
xchg
push
cmpsb
xchg
test
jge
iret
xchg
dec
xchg
pop
repnz
xchg
orl
lods
repz
mov
mov
into
pop
test
sbb
lods
cmp
ficoms
into
pop
push
mov
loope
inc
das
rcrl
imul
adc
xchg
and
stos
inc
arpl
in
cmc
arpl
out
mov
arpl
clc
lods
add
sub
cmpsb
and
gs
push
push
hlt
loope
stos
xor
mov
cmp
cmc
push
scas
dec
fisubrs
mov
out
out
fbld
movsb
out
cltd
jge
imul
push
mov
sub
add
jle
push
mov
sub
and
cld
iret
pop
dec
pop
adc
add
xchg
jg
push
outsl
lods
in
and
jb
mov
loopne
leave
mov
push
lea
xlat
ds
shr
insl
insb
xchg
jno
and
mov
jge
push
pusha
mov
jns
cs
add
cltd
adc
jb
inc
sbb
dec
xor
jle
imul
mov
shrl
fdivrl
jg
test
add
das
sub
in
and
insb
jmp
cmp
shll
std
fwait
sahf
fwait
sbb
fucomp
dec
lret
cltd
mov
hlt
dec
je
in
push
rcl
xchg
or
out
cmpsb
ret
or
mov
jecxz
cmp
or
cmpsb
cmovge
mov
in
jnp
or
dec
outsl
or
mov
mov
ret
add
jmp
loope
dec
call
mov
inc
stc
sub
sbb
mov
and
std
pop
xchg
cmp
add
rcrl
bound
mov
cmp
loop
xor
shll
mov
cmc
divl
test
or
xor
jmp
ret
push
cltd
lods
dec
push
scas
out
iret
test
cvtps2pd
jno
pop
movhps
sti
xchg
lret
cmp
mov
sub
sar
sub
xor
push
sub
pop
cmp
lock
scas
adc
ret
mov
dec
xor
xor
flds
cli
pop
out
lcall
lock
fdivr
incl
mov
aaa
xchg
cmp
rcrb
push
fistl
repnz
and
add
mov
adc
and
inc
ror
jge
pop
es
mov
mov
xchg
mov
sub
fsubr
or
adcb
adc
add
in
mulb
sub
clc
xlat
insl
dec
cltd
les
push
iret
push
fistps
sbb
ficompl
sbb
adc
fsubs
inc
mov
mov
aas
add
stos
jno
cmp
inc
shll
jge
sbb
jmp
mov
lods
xchg
popf
loope
imul
mov
out
std
repnz
inc
pop
sub
jo
cmp
ss
mov
subb
jg
lock
fisttps
mov
mov
push
mov
addb
aad
dec
imul
mov
add
or
cmp
push
mov
leave
loopne
outsb
imul
mov
jb
and
sub
jg
xchg
faddl
fisttps
out
cmp
pusha
ljmp
jnp
sub
sub
or
insl
lods
sub
mov
imul
and
cmp
and
outsl
gs
mov
andb
es
cli
mov
jne
push
mov
add
inc
and
pop
push
loop
cld
mov
jns
fdivrs
jo
xor
jmp
mov
sub
ja
stos
xchg
inc
movsl
shrl
mov
add
mov
push
nop
test
mov
inc
hlt
lods
out
aaa
dec
bound
je
jl
xchg
mov
sbb
ja
adc
mov
pushf
xchg
aam
xor
adc
das
and
lock
or
dec
ljmp
mov
add
sbb
fsubrl
decl
aas
or
dec
adc
sbb
loop
mov
pushf
loop
push
repz
into
inc
jbe
das
iret
movsb
fst
cmp
repz
pop
mov
mov
xor
test
fwait
in
testb
mov
or
xor
push
mov
sbb
mov
clc
cmc
fadd
push
addb
lods
cli
pop
mov
mov
push
cltd
inc
arpl
lods
cs
and
stc
out
push
cmp
data16
xchg
stos
pop
je
shr
xorl
inc
dec
adc
nop
dec
ds
sub
mov
jno
xchg
push
fiaddl
fnclex
popa
aam
jge
cmp
stos
mov
inc
out
jp
insl
xchg
popl
lds
add
adc
xlat
es
inc
mov
add
jg
xchg
int3
push
loop
xchg
adc
inc
imul
mov
nop
inc
mov
lcall
aaa
bound
outsl
lcall
jo
lea
shll
pop
dec
jnp
sbb
pop
and
adcb
and
adc
xor
or
adc
jp
xchg
fsubrl
xchg
pop
inc
pop
pop
adc
push
inc
mov
dec
pop
gs
repnz
insl
inc
mov
rorb
out
call
push
inc
push
jbe
adc
test
mov
cmc
mov
adc
jmp
mov
lret
mov
jle
stos
out
cmc
adc
roll
lock
pop
push
fdivl
shlb
daa
inc
inc
jle
dec
jecxz
dec
jns
outsl
sahf
cmp
adc
scas
pop
jbe
xor
dec
mov
inc
pop
sub
les
addl
xor
in
add
add
fisubl
jne
imul
pop
sbb
lret
adc
fsts
push
push
mov
xor
fmuls
add
pop
xor
mov
lock
sub
jge
mov
test
jns
fimull
push
popf
repnz
push
push
cmpsb
push
imul
test
xor
lock
in
or
xor
or
jp
inc
mov
in
jnp
dec
in
adc
aas
inc
mov
pop
inc
push
rcll
sub
insl
sbb
inc
inc
test
mov
test
adc
pop
mov
fildll
test
adc
movsl
push
xlat
imul
sub
mov
xor
pop
iret
in
inc
punpckhbw
jmp
loopne
mov
add
mov
lds
and
inc
xchg
lahf
fld1
mov
cmp
mov
sub
sub
mov
push
pop
out
sbb
orb
jns
lods
pop
or
pop
pushf
scas
xor
lret
push
fiaddl
cli
movsl
imul
sub
push
sub
mov
sub
or
ficoml
or
es
imul
push
sbb
or
jne
or
imul
icebp
out
test
ret
cs
clc
sbb
dec
sbb
andb
push
add
pop
push
dec
idiv
fidivrl
jo
imul
inc
ficoml
out
pop
lcall
movsb
and
movsl
jle
mov
stos
cmp
test
and
cmp
xchg
mov
adc
lret
adc
xchg
ret
in
mov
xchg
xchg
repnz
jae
or
add
mov
xchg
lods
mov
add
out
lahf
cmpsl
inc
add
mov
movsb
mul
pop
dec
mov
lret
fcmovne
pushf
iret
cmc
jge
lcall
xor
xchg
jecxz
pusha
sbb
mov
xchg
xor
sbb
pop
test
cmpl
xchg
lods
stos
loop
cmp
loop
pop
mov
jnp
loop,pt
xor
sub
mov
out
xchg
and
lock
sub
sub
fcoml
sbb
outsl
and
aas
aad
mov
xchg
cmpsl
or
sarb
ret
push
cli
mov
repz
ret
mov
or
ds
push
inc
dec
aas
xor
sub
push
pushf
lahf
jnp
cmp
jae
fistl
or
jp,pt
lock
mov
mov
loop
mull
mov
dec
ret
mov
sub
xor
into
dec
sub
int
sbb
jg
xchg
jge
popa
fnstcw
imul
insl
lods
pop
cmpsl
movsl
adcb
out
shll
dec
aas
fstpl
jb
popa
and
sbb
push
ljmp
jno
mov
push
mov
shll
xchg
xchg
adc
mov
cwtl
push
xor
pop
xor
cmp
stc
sub
xchg
jno
cmp
sbb
addr16
sub
test
imul
jle
stos
inc
inc
add
rcl
jno
out
bound
addb
sti
rcr
pusha
leave
add
in
fsubrs
mov
scas
cltd
add
push
out
in
sbb
out
daa
and
sahf
leave
push
fstpl
nop
fmul
inc
jne
in
inc
jnp
aad
in
outsl
pushf
sahf
aas
rorb
ss
xchg
lcall
jl
xor
imul
lds
or
js
iret
stc
and
enter
or
cmpsl
xchg
fs
adc
popf
out
bound
fcoml
sahf
addr16
nop
jnp
arpl
sahf
outsl
jecxz
cli
lods
push
lahf
insb
pop
int3
xchg
pop
sub
repnz
in
mov
test
imul
ljmp
rol
and
push
mov
sub
sbb
xchg
xchg
mov
lock
push
nop
xchg
lods
lea
fildll
add
rol
dec
lret
fnstenv
ret
xor
in
or
xchg
xchg
dec
mov
inc
mov
lock
lea
mov
in
pop
ret
pop
pushf
adc
add
inc
je
sub
sub
lods
pop
mov
xchg
movd
les
outsb
cli
shr
aaa
xchg
pop
mov
les
mov
mov
inc
cmc
dec
inc
mov
scas
int3
sti
pop
daa
inc
jmp
pop
filds
xchg
gs
add
bound
or
xchg
fmul
test
mov
adcb
ljmp
add
mov
stc
lret
jno
adc
gs
dec
push
loop
shrb
push
int
and
jmp
sub
movsb
cwtl
cwtl
cmpsb
data16
xor
enter
cmp
jne
cli
mov
pop
sbb
sbb
pop
mov
jg
out
ss
pop
mov
dec
or
insl
sub
in
inc
xor
mov
dec
pop
mov
in
xor
or
lret
iret
xchg
mov
sub
push
mov
inc
sub
cld
xlat
insb
aad
mov
cmp
mov
jl
jmp
fs
jmp
push
out
shrb
cld
cli
mov
xchg
adc
les
in
sbb
cmp
negl
dec
imul
shll
mov
sbb
test
adc
fcompl
adc
into
cwtl
xchg
mov
cltd
or
push
xchg
fwait
nop
loopne
lea
add
popl
dec
jb
scas
mov
ss
inc
dec
inc
pushw
inc
xor
lcall
insb
push
mov
roll
push
daa
jae
shr
incb
mov
push
pop
mov
call
mov
int
shrb
insl
addr16
mov
je
in
insb
xor
repz
repnz
mov
dec
or
ss
mov
mov
cltd
lahf
dec
pop
xchg
enter
test
ja
push
gs
test
clc
ds
gs
loope
scas
cmp
shll
leave
pop
xor
mov
insb
jns
dec
dec
inc
jno
scas
les
pop
push
adc
mov
scas
mov
leave
adc
stos
inc
cmp
mov
mov
ret
sarl
pcmpeqb
imul
jg
push
adc
rcr
sub
insl
cmpsl
inc
outsb
jb
sub
xchg
dec
ljmp
gs
push
orb
data16
mov
add
jno
sbb
cmpsb
xor
push
fsubl
int3
adc
mov
ds
mov
adc
adc
pusha
decb
aad
aaa
iret
xchg
out
negl
fsubrs
xor
in
mov
cmpsl
or
and
cmpsb
rcll
or
cld
xchg
add
mov
pushf
mov
ja
icebp
push
enter
pop
pop
mov
loopne
sub
jle
pop
cmp
xchg
mov
mov
push
mov
cli
mov
out
mov
xor
inc
test
sub
xchg
sbb
add
mov
xor
scas
push
pop
sbb
call
push
push
stos
mov
push
std
xchg
in
idivl
call
call
sbb
fcmovne
pop
sub
pop
mov
add
add
std
and
push
push
add
test
sahf
lds
dec
cwtl
cmp
jge
loope
or
jl
in
imul
push
insb
sbb
stc
cmpsb
and
xor
mov
cmp
lcall
mov
sub
mov
mov
test
in
inc
mov
mov
mov
stos
inc
addr16
sbb
popf
or
lcall
into
addl
xchg
push
mov
or
or
sub
idivl
adc
sbbl
test
test
or
adcl
outsl
outsb
push
insb
or
rolb
mov
push
adc
fildl
lret
sbb
fsts
cld
std
loop
push
cmc
or
test
movsb
pop
lods
pop
inc
jp
sbb
mov
pop
dec
in
inc
int3
dec
std
and
shrb
ret
inc
jge
jae
test
dec
jecxz
or
lods
bnd
daa
and
pop
and
mov
out
jl
dec
clc
nop
add
bound
shlb
movsb
sbb
lahf
in
inc
fidivrl
out
xor
sub
dec
shrl
mov
inc
xchg
dec
int
jne
into
daa
iret
inc
cs
adcl
dec
cmp
incb
imul
addr16
adc
pop
mov
mov
imul
dec
mov
cmpsb
jg
cltd
in
and
inc
xchg
sbb
and
pop
ds
sbb
aas
sbbl
xchg
mov
mov
mov
xor
mov
out
cmp
and
sbb
in
lods
cmp
in
cmp
stc
mov
mov
sub
test
repnz
in
sbb
mov
test
sahf
arpl
mov
fstpl
xchg
add
inc
mov
rcr
lahf
jg
or
push
sahf
inc
and
scas
pop
xor
mov
aam
cs
cwtl
shl
jo
and
sti
testl
or
lahf
rorl
rcl
add
jbe
jp
inc
push
add
xlat
daa
rolb
mov
imul
int
inc
mov
lahf
mov
mov
scas
mov
sarl
pop
int
dec
mov
daa
sub
mov
pushf
das
cmp
inc
aas
adc
adc
fwait
sub
dec
bound
push
cmp
jge
xchg
sti
adc
arpl
add
fwait
out
or
add
sahf
mov
xchg
adc
subl
lock
ret
add
pop
or
jbe
insb
fwait
inc
jp
push
shll
negl
je
popf
pusha
xor
nop
push
sub
xchg
lahf
and
out
aas
ja
stos
push
roll
jl
hlt
mov
repz
ljmp
ljmp
pop
rcr
mov
mov
adc
cld
xchg
fst
addr16
out
mov
mov
cmp
leave
mov
popf
dec
data16
ljmp
adc
fs
mov
xor
stos
pop
dec
mov
xor
jnp
iret
pop
cli
or
pop
xchg
cmp
in
pop
xchg
xor
sbb
inc
and
aas
xor
loopne
xor
xor
movsb
lcall
fsubl
incl
sbb
flds
pushw
pop
mov
jmp
rclb
jmp
aaa
icebp
pop
test
mov
sbb
outsb
loope
pusha
pop
out
sahf
mov
add
add
loopne
pop
mov
xor
add
push
ficoms
push
leave
loopne
xor
lcall
xor
jbe
enter
in
cmp
xor
andl
mov
enter
xchg
and
scas
cli
movsb
into
int
outsl
xor
push
mov
hlt
and
jmp
or
into
cmp
sar
pop
repnz
fwait
pop
push
cwtl
jmp
push
clc
add
cmp
cld
and
cs
int3
push
lahf
mov
aas
fisubl
or
aas
jecxz
lock
cmc
mov
xor
and
sbb
incb
mov
lahf
dec
or
pop
cmp
in
mov
ja
stos
pop
fsincos
scas
sbb
xchg
test
int3
es
sbb
cmpsl
sti
sbb
or
loope
inc
adc
les
push
mov
push
nop
prefetch
sarl
dec
pop
inc
pop
lret
dec
in
cmpsb
ss
adc
mov
int
fcoms
pop
jno
mov
xchg
insb
mov
mov
fwait
jno
decb
imul
popa
sub
add
outsl
and
out
cmp
dec
pop
test
adc
in
fdivl
or
js
pop
jo
imul
mull
inc
clc
cmp
jl
push
imul
adc
sub
mov
push
mov
shlb
pop
imul
ljmp
sub
cld
or
inc
cwtl
sti
mov
lods
iret
xchg
mov
add
fildl
or
adc
jns
xchg
or
push
mov
iret
mov
mulb
cmp
cwtl
mov
repz
push
mov
imul
mov
ds
in
jmp
nop
push
sbb
int3
out
mov
add
dec
push
test
add
pop
xchg
shrb
xchg
adc
icebp
or
cmpsl
leave
push
jae
add
xor
push
je
pop
sbb
aas
shlb
inc
and
cs
fmull
jle
mov
push
pop
dec
pop
sbb
inc
sti
dec
ret
and
loop
mov
cmpsl
xchg
shlb
mov
xchg
inc
jnp
xchg
push
sbb
popf
addr16
lahf
xor
jno
das
dec
sub
repz
push
add
cs
jo
cmp
inc
or
or
push
mov
test
inc
pop
enter
jge
cld
push
jmp
cmp
jbe
das
xor
pop
scas
adc
push
dec
lret
push
popf
popa
xchg
cmpsl
jecxz
movsl
mov
in
adc
hlt
xchg
fistpll
mov
mov
mov
mov
jns
xlat
ss
aam
pop
sbb
roll
and
inc
and
dec
stos
sub
add
lds
fdivr
pushf
cmp
mov
and
es
imul
subb
mov
sub
rcrl
xor
jge
add
fstps
mov
push
cmp
inc
mov
enter
sbb
inc
sbb
incl
jae
vfrczps
fisubs
dec
lcall
xchg
or
jecxz
mov
push
and
jo
rcpps
and
test
inc
and
filds
or
dec
xlat
popa
jp
mov
or
add
pop
and
ret
sbb
mov
cli
xor
adc
xchg
cmc
enter
ss
lcall
mov
inc
lret
sbb
pushf
data16
or
scas
sar
aas
je
jp
aad
fwait
mov
cmc
jmp
pop
xchg
lods
fsubl
movsl
push
adc
mov
ret
dec
into
xchg
xchg
push
and
imul
std
add
pop
sub
gs
into
out
test
std
mov
push
bound
rorb
test
in
inc
pop
ret
rcll
fs
or
lods
nop
mov
pop
lcall
aas
mov
rolb
sbb
push
xchg
mov
fnstsw
push
add
cmpsl
sbb
add
in
aad
dec
std
xchg
mov
ss
rcll
rclb
pop
adc
adc
xchg
xchg
sbb
mov
jae
in
movsl
mov
and
fwait
hlt
in
and
or
les
and
mov
lret
mov
clc
push
fs
pop
aaa
fsubp
push
jmp
in
dec
call
mov
leave
xchg
movsb
jnp
xor
pop
and
mov
mov
popa
adc
jp
mov
lds
nop
pop
mov
stos
xchg
jl
roll
xchg
lret
sbb
cmp
add
jl
lods
mov
mov
fdivl
repnz
lds
push
out
jns
mov
sbb
je
push
leave
lret
push
sbb
aam
jne
mov
leave
sbb
jns
mov
adcb
testb
insl
inc
scas
push
cmp
add
jmp
push
push
jns
daa
fwait
dec
dec
dec
shlb
mov
mov
das
mov
pop
mov
push
inc
mov
mov
push
jb
sbb
and
add
cltd
lds
mov
push
lcall
adc
push
inc
addr16
cmp
outsl
test
stc
jg
sub
pop
sbb
jne
pop
rcll
adc
cmp
or
cmpsl
mov
jns
push
cmpsb
push
sbb
cmp
fimull
lds
mov
mov
xlat
and
gs
sub
add
call
pop
loopne
mov
mov
cld
jp
push
test
and
test
cmp
and
ret
sub
xor
cmp
addr16
sub
scas
int
mov
push
push
lds
dec
xor
dec
dec
jge
mov
push
or
cmpsb
loop
cmp
insl
loope
xchg
ss
bound
fwait
and
sub
add
fldcw
cmpsl
mov
ja
pop
insl
test
sarl
faddp
jg
stc
and
push
inc
sub
testb
loop
adc
enter
pop
jle
je
fldenv
mov
dec
out
push
mov
dec
sbb
lock
xchg
xchg
jmp
or
adc
addr16
dec
pop
xor
out
ljmp
adc
push
fdivrs
xchg
sbb
lods
and
sub
rcrb
imulb
scas
push
xchg
pusha
fwait
jnp
xchg
mov
clc
ja
fisubs
xor
enter
sub
outsl
jle
js
enter
out
inc
xor
mov
and
ret
sbb
scas
inc
push
mov
ds
lahf
pop
aas
inc
and
mov
fistpll
xor
ss
cmp
iret
insl
cmp
push
push
inc
mul
dec
cmp
or
das
jno
dec
inc
or
fildll
nop
mov
test
add
test
mov
in
daa
out
push
sbb
ror
or
mov
push
sub
and
test
add
cmp
mov
inc
jecxz
sbb
sbb
xchg
dec
call
lea
push
mov
and
ds
hlt
push
mov
dec
stc
test
in
mov
arpl
clc
push
push
mov
jns
sahf
sub
mov
stos
lea
push
into
pop
pushf
mov
mov
mov
push
inc
push
movb
insl
sub
xchg
insl
push
cld
sti
pop
sbb
loopne
pop
lret
hlt
int3
jne
fsubr
into
jecxz
int
push
filds
pushf
inc
push
out
fxch
or
test
nop
add
jmp
in
inc
xchg
sub
fucomip
fsubrl
test
enter
incl
push
idivl
and
mov
test
test
and
ss
fwait
sub
cltd
or
dec
push
inc
mov
push
mov
or
push
ds
int3
and
inc
inc
hlt
pop
sbb
sbb
jns
ficomps
scas
jp
mov
repz
inc
mov
in
cmp
xchg
aad
mov
sahf
jns
andl
and
jb
scas
dec
std
jne
cmovae
nop
aaa
pushf
jecxz
ret
add
rcll
ficomps
fwait
mov
cmp
push
jp
enter
shrl
inc
in
orb
jmp
xchg
orps
mov
mov
xor
aam
jno
push
inc
sub
sbb
inc
rcr
jo
pop
adcl
xor
test
xchg
fldenv
add
jle
jo
addl
sub
out
mov
xchg
sahf
stos
cmpsb
loop
js
sub
cld
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
aad
cltd
ret
scas
addl
jo
xor
call
cmpsl
mov
imul
sub
or
mov
jecxz
ss
cmp
mov
dec
ret
data16
ja
mov
jge
mov
add
rclb
fdivrl
xor
out
adc
sbb
push
push
add
xor
ljmp
std
xchg
inc
fildll
inc
subl
icebp
je
in
mov
jno
and
test
leave
int3
add
mov
lret
xchg
jl
pop
adc
mov
aam
pop
movb
and
jge
mov
insb
out
rclb
fcompl
pop
fbstp
arpl
out
out
fisubrs
cmp
rorl
push
ja
clc
mov
and
cwtl
lods
push
andl
imul
lea
sub
aad
adc
movsl
adcl
or
push
or
adc
std
fistpl
cwtl
cs
daa
nop
cmp
sub
das
aam
dec
cmp
mov
outsl
out
mov
je
sahf
lcall
or
xchg
fstl
fsubrs
push
push
dec
test
aas
pop
pop
in
test
loop
clc
cmpsl
xchg
add
lods
pop
or
push
dec
rcr
fdivr
xor
arpl
lahf
ds
pop
sub
js
xchg
mov
sbb
nop
hlt
inc
push
sbb
pop
das
sbb
xchg
jb
sub
in
call
dec
stos
ja
mov
pop
ds
xchg
xchg
neg
inc
dec
xchg
push
addr16
sub
inc
in
and
push
in
mov
dec
jmp
jb
push
lock
mov
out
lahf
scas
addl
mov
stos
sub
imul
insl
push
push
js
lret
sbb
imul
out
jno
mov
iret
jns
mov
daa
insb
lods
pop
or
sahf
out
xor
sbb
roll
fadds
push
adc
nop
jbe
mov
jmp
and
mov
xchg
addb
xchg
sub
adc
ss
pop
addb
aas
xlat
lods
add
cmpsl
into
aas
adc
jne
mov
lods
xor
gs
mov
add
add
add
dec
xchg
xchg
adc
inc
push
mov
out
xor
or
sti
push
mov
cmp
push
ficomps
clc
add
push
xchg
dec
andb
push
or
ss
stc
lahf
xchg
scas
mov
faddl
pop
icebp
les
cmp
cmpsb
mov
je
addr16
xor
jbe
jg
dec
into
out
cmp
sbb
sbb
cmp
clc
dec
pop
adc
mov
sbb
outsb
xchg
mov
les
mov
pop
pusha
iret
adc
aas
iret
xchg
sub
pushf
fbld
clc
inc
cmp
xchg
out
nop
push
arpl
and
movsl
jno
mov
inc
jp
mov
sub
lret
and
xor
inc
inc
xchg
ja
in
lcall
enter
jbe
data16
ljmp
push
scas
sub
mov
pushl
outsl
pop
mov
fcomi
cmp
mov
in
mov
pop
cld
cmc
inc
lret
repz
jno
dec
rcll
sbb
cmp
dec
xor
out
test
jbe
pusha
arpl
inc
call
dec
or
xchg
les
pop
xchg
daa
test
fwait
out
mov
sub
push
lret
xor
pusha
adc
cmpsl
xor
add
jl
int3
fs
push
cld
mov
mov
mov
jae
pop
and
xor
call
add
jbe
addb
addr16
fnstsw
fmull
imulb
mov
cli
inc
rcrl
in
pushf
lds
push
pushf
jb
in
loope
cmp
je
mov
movsb
test
sbb
sbb
jns
adc
jle
mov
lea
fs
stos
shll
cs
jae
imul
test
out
cs
outsl
scas
out
jae
adc
or
pushf
adc
fs
cmpsl
add
mov
pop
sub
push
stos
cmp
add
xchg
mov
push
push
fimull
mov
jmp
jnp
shll
pop
movsb
jo
fcmovne
out
arpl
outsb
arpl
in
sub
mov
mov
mov
pop
mov
repnz
and
pusha
rcrb
mov
mov
adc
xor
mov
xchg
jns
es
mov
arpl
push
add
int3
mov
pop
sub
mov
mov
scas
aaa
pop
jle
movsb
dec
pop
cmc
mov
dec
icebp
fldcw
jmp
cmp
xchg
sti
or
add
test
pop
mov
push
jae
jbe
fistpll
sub
popa
out
mov
sub
xor
pop
int3
xor
push
xchg
in
jp
outsb
adc
sub
push
outsb
mov
push
stc
fidivrl
loope
push
adcl
jnp
iret
and
loop
dec
sahf
mov
repz
xor
aad
mov
mov
pop
and
in
fisubrl
sbb
ss
mov
ss
in
in
stos
dec
jl
cli
shrb
lea
fcoml
pop
lock
lret
mov
cmp
xchg
jne
fdivl
mov
jmp
aam
jge
xchg
jb
es
addr16
mov
pop
sub
inc
dec
mov
repnz
sbb
and
xchg
mov
push
add
iret
push
gs
jl
mov
icebp
fmuls
xchg
mov
leave
pop
sbbb
adc
pop
clc
add
in
mov
js
and
cmp
sbb
shlb
xchg
cltd
mov
inc
outsl
xor
mov
dec
adc
xchg
in
out
mov
sub
dec
sub
pop
aas
dec
imul
lock
and
das
cltd
int3
mov
clc
in
cmc
pusha
mov
adc
pop
stos
clc
mov
mov
lods
sbb
jb
pop
clc
stc
lods
pop
leave
and
fstpl
xchg
test
shl
mov
sub
xor
or
push
xchg
je
mov
jle
xchg
in
sbb
aas
xchg
mov
ss
cli
mov
jg
scas
xchg
mov
push
pushf
lods
outsb
mov
das
jbe
hlt
sub
adc
outsl
ret
push
leave
aaa
aas
or
gs
fstpl
or
shlb
cmpl
negb
mov
lcall
test
mov
xlat
inc
mov
xchg
loop
scas
or
mov
jb
lret
repz
xor
or
out
sbb
add
aam
daa
mov
pusha
sti
cld
inc
call
inc
dec
and
je
mov
and
aam
lds
repz
scas
jl
push
stos
sbb
inc
test
xor
pushf
jg
jmp
js
adc
scas
lods
push
and
rolb
xchg
xlat
push
push
dec
ret
sarb
add
popf
push
pop
pop
out
sub
stos
leave
jbe
dec
cmpsb
into
pop
or
or
inc
jo
icebp
lea
jbe
sbb
jmp
push
mov
jmp
daa
pop
mov
scas
pop
in
mov
popf
lea
mov
xchg
outsb
leave
mov
mov
movsl
nop
cli
jno
xchg
xor
pop
lods
push
out
data16
cmpsl
xor
xchg
mov
pop
add
popa
jmp
leave
sbb
add
in
fisttpl
ret
mov
push
pop
mov
imul
inc
fsts
push
shl
bound
imul
pop
mov
mov
pop
push
icebp
inc
adc
xorps
insl
jne
cmp
je
push
stc
into
xchg
fmull
ret
and
push
xor
jg
mov
cmp
xchg
cwtl
xlat
xlat
jo
mov
gs
adc
out
nop
dec
mov
xor
pop
in
stos
mov
sbb
cmc
arpl
mov
outsb
add
and
xchg
push
jnp
pop
xchg
mov
adc
cmpsl
imul
jle
dec
sbb
mov
imul
mov
push
pop
into
and
and
jae
and
sbb
loope
fiaddl
test
mov
and
push
repz
out
lahf
pop
inc
sbb
xchg
pop
insl
les
das
adc
rclb
sub
push
imul
inc
inc
and
xor
xchg
mov
pop
movl
into
sti
adc
movsb
dec
imul
xchg
dec
loopne
xchg
or
pop
xor
sub
cmpsl
arpl
repz
fcomi
pop
stos
mov
cmc
fisubl
adc
dec
mov
pop
dec
stos
push
aad
mov
ds
ds
iret
and
sar
sbb
jl
fsts
or
adc
cltd
adc
dec
xchg
sbb
jge
push
rcl
jno
xor
jecxz
mov
out
sar
mov
sbb
mov
stc
inc
jmp
jg
sahf
and
add
sub
jo
lock
jo
outsl
mov
icebp
aas
int
pop
jb
pop
or
cltd
dec
pop
add
pop
sub
push
lods
push
sbb
fcoms
adc
mov
rcll
leave
jmp
push
pop
xchg
add
xor
push
iret
ljmp
in
jge
or
mov
mov
push
cmp
xchg
ja
lods
add
je
in
dec
loop
roll
sub
sub
rol
sbb
mov
add
rcrl
iret
inc
ficoml
pop
mov
add
int
sbb
popf
lea
mov
call
stos
or
fsubl
and
jp
push
rolb
scas
sbb
adc
repz
sti
je
adc
ljmp
mov
data16
or
jl
mov
jns
shr
add
xorl
mov
xor
daa
mov
and
hlt
dec
ret
pop
shrl
icebp
ss
pop
push
sub
iret
jle
jmp
out
xor
pop
in
and
mov
jge
cmp
and
fildl
sub
mov
jl
adc
clc
arpl
add
sti
or
xor
mov
lcall
shl
out
adc
lret
testb
cmp
jbe
in
or
cmp
jmp
xchg
sub
dec
push
pop
lea
inc
or
dec
xchg
mov
inc
in
dec
push
push
lcall
in
jmp
mov
push
mov
imulb
insl
sbb
in
fsubs
sbb
mov
pop
popf
lds
test
push
pop
lods
inc
push
js
int3
rcrl
in
inc
outsl
pop
jb
addr16
dec
push
iret
movsb
xchg
mov
inc
ffree
mov
jo
stc
and
aaa
insl
in
lret
movsl
or
lods
popf
jg
shlb
aaa
loopne
scas
inc
inc
aas
loopne
xor
test
inc
add
xlat
mov
mov
icebp
ficoml
test
add
push
pop
sbb
push
xor
inc
sbb
jg
arpl
add
out
jae
mov
aam
mov
mov
adc
out
fldenv
sbb
and
lods
lahf
leave
cmpb
rcll
pop
addl
sub
mov
repnz
mov
aam
decl
pop
pop
mov
inc
mov
xchg
int3
pop
out
in
lds
icebp
fwait
iret
cmc
pop
push
xchg
jl
out
push
push
mov
pop
xchg
sbb
push
pop
pop
add
xor
jl
pop
cmp
jo
scas
mov
push
sbb
shll
mov
jae
mov
fidivrl
js
sbb
in
sub
jmp
inc
cmp
add
inc
cmp
pop
cwtl
mov
jle
mov
out
lret
and
in
std
fucomp
imul
mov
imul
scas
adc
aaa
cmp
stos
pop
mov
push
or
dec
jo
repz
inc
xchg
mov
rcl
fmull
aad
nop
xchg
xor
or
sub
push
inc
arpl
icebp
das
push
push
mov
shrl
mov
std
jl
push
jg
call
push
xchg
cmpsb
pop
cltd
enter
stos
or
test
es
xor
icebp
sbb
mov
add
pop
fwait
sarl
clc
mov
leave
dec
mov
xchg
and
push
adc
popa
jmp
sub
mov
mov
std
cmpsl
xor
ds
push
jno
xchg
iret
fs
or
jle
xchg
mov
cmp
enter
jae
ficoms
int
inc
mov
xor
jmp
cmc
xchg
push
stos
jmp
lea
dec
iret
jmp
pop
scas
bnd
cltd
pop
xchg
cmp
orl
sbb
and
cld
jno
in
xchg
add
aam
cmp
cs
add
popf
lods
adc
test
fadd
push
sbb
xor
in
js
cmpsb
sti
clc
dec
test
inc
fstps
adc
or
jecxz
clc
mov
jge
cs
je
inc
sub
sub
cs
orb
insl
lods
test
inc
cmp
bswap
jp
enter
ficoml
inc
mov
fisubrs
jno
shll
add
int3
xchg
adc
ja
or
push
inc
movsl
stos
mov
fldl
push
loopne
mov
add
inc
notb
mov
bound
aam
push
mov
xor
sti
pop
fs
sub
ret
push
or
cmp
sbb
stc
dec
bound
cmp
daa
imul
in
stos
mov
pop
xor
and
cwtl
cmp
add
ret
cmpsb
ss
nop
sahf
movlhps
dec
jmp
rorl
pushf
pusha
pop
add
push
roll
repz
fcmovnbe
mov
lret
jns
aam
and
sti
or
pop
xchg
popf
loopne
es
je
cwtl
pushf
inc
xchg
jp
lcall
sbb
mov
xchg
lcall
mov
mov
add
or
pop
popa
ret
push
in
jns
pop
cmp
sub
sub
sbb
mov
ret
into
cltd
or
add
sub
loope
aad
mov
daa
push
imul
mov
jo
xor
imul
scas
sub
xchg
xchg
loopne
xor
push
sub
inc
repz
jne
pop
jo
mov
iret
mov
inc
jo
pop
inc
inc
sbb
lret
sub
mov
ror
mov
mov
dec
fmuls
adc
sub
jae
ret
in
lods
mov
movsl
aaa
adc
mov
leave
cmp
rorb
jg
pop
outsb
pushf
arpl
rol
xor
add
mov
scas
sbb
inc
add
lds
hlt
jnp
lods
inc
test
jg
mov
icebp
nop
out
jo
stos
sarl
fwait
dec
es
in
fstps
cltd
and
outsl
inc
movsl
sarb
mov
in
stos
jb
adc
xchg
addr16
es
jmp
ret
adc
call
popa
mov
lret
cmp
dec
pop
cld
mov
cmpsl
and
insl
xchg
push
in
cmp
arpl
dec
or
test
xchg
mov
cmp
push
inc
sbb
andl
mov
scas
testl
ret
add
cs
adc
pop
sbb
mov
outsb
jno
inc
cmp
scas
cmpsl
gs
push
push
repz
cmp
repz
jae
movsb
std
mov
pop
lods
lcall
xchg
dec
decb
popa
cmp
adcl
clc
imul
pop
mov
cld
in
sbb
xchg
aad
stos
jo
rcr
mov
or
push
dec
sub
dec
outsb
inc
mov
cmpsb
leave
ljmp
das
pop
and
imul
inc
aaa
das
xchg
repnz
jns
jge
test
inc
or
icebp
jg
add
jmp
inc
icebp
repz
pop
sarb
fisubs
in
pusha
add
xor
in
sbb
popa
outsb
cld
outsl
push
mov
jnp
dec
test
nop
cmp
mov
test
ss
inc
movl
mov
mov
xchg
sub
xorb
sarb
push
aam
lahf
jp
repz
push
mov
addl
fsubs
jg
ja
xchg
push
inc
movl
push
fists
and
cmc
add
push
icebp
dec
in
dec
xlat
mov
ret
loope
pusha
xor
pop
fwait
mov
cmp
js
imul
icebp
xchg
iret
fistps
dec
push
pop
stos
insb
sbbl
sub
dec
jbe
cld
xlat
or
sbb
arpl
pop
or
push
jb
add
push
inc
inc
jno
nop
add
inc
sub
sbb
out
and
rclb
mov
push
jb
mov
lds
push
mov
mov
movsb
add
cltd
jg
out
faddl
je
adc
jae
xor
imul
fcomps
pop
push
xor
pop
push
in
mov
arpl
sub
fwait
jl
js
jg
nop
popf
mov
adc
and
jecxz
sbb
enter
das
xlat
pop
or
lock
insb
arpl
xchg
mov
inc
xor
sbb
aad
push
daa
in
test
repz
lret
outsl
pop
dec
shll
jo
pop
pop
sub
divl
sub
lcall
out
push
js
cld
mov
pop
ja
cltd
xchg
lock
leave
xor
xlat
xor
push
inc
adc
ret
shl
push
mov
lods
testl
scas
inc
jne
daa
ficoms
fmull
xchg
loop
pop
or
sub
notl
xchg
or
inc
inc
or
loope
sbb
andl
mov
rdmsr
mov
ljmp
pop
sbb
les
cli
add
cmp
and
fwait
push
stos
inc
sub
push
lds
fucomip
xchg
pop
add
pop
scas
and
nop
add
pop
mov
xchg
push
sti
and
cmp
inc
movsl
jp
cmpsl
cvtdq2ps
aaa
or
mov
jle
lds
and
addr16
lods
fildl
cld
arpl
push
xor
add
or
push
mov
adc
jp
popa
push
inc
mov
lods
in
fidivl
leave
js
push
outsb
cmpl
jns
js
jb
fs
mov
mov
cmp
ret
adc
ds
testb
or
sbb
sbb
cmpl
frstor
adc
cmp
mov
jnp
xchg
movsl
pop
arpl
mov
add
sub
lahf
and
pushf
ror
add
pop
aas
loopne
jo
pop
es
jmp
nop
add
or
fmulp
pop
jl
aad
mov
in
fwait
clc
sarb
push
push
push
pop
and
test
jecxz
pop
mov
test
and
xchg
dec
fistl
mov
int3
int
shrl
mov
mov
je
or
imul
and
das
mov
movsb
sbb
jae
fdivrl
data16
adc
pop
mov
int
fidivl
lods
or
mov
outsl
mov
jns
ret
push
lods
xor
mov
repnz
es
push
shll
test
lret
lds
outsb
or
sbb
out
mov
inc
inc
inc
ds
mov
rclb
test
aad
outsb
repnz
fisttps
sbbl
fiaddl
negl
inc
dec
fsubp
imul
or
mov
dec
pop
out
sub
popf
testl
or
mov
cmc
sbb
scas
xor
dec
jmp
or
xchg
cwtl
or
add
daa
aad
in
jl
std
sub
sbb
xor
inc
xor
lret
popl
jb
xor
adc
nop
leave
fistpll
ds
arpl
daa
pusha
lea
imul
js
inc
or
push
pop
inc
movd
mov
xor
call
nop
shll
sub
out
fmull
add
icebp
sub
ljmp
popa
inc
pop
fwait
call
mov
mulb
dec
inc
dec
cld
imul
imul
push
cmc
mov
dec
push
and
xchg
or
rorb
movsb
lahf
test
out
push
movl
sbb
mov
test
lock
stc
push
sub
data16
mov
jmp
cmp
mov
lock
jecxz
inc
adcb
xchg
or
jle
and
sbb
jge
repnz
shr
mull
pop
loopne
lea
mov
je
xor
pop
rolb
push
fbld
loope
inc
iret
out
les
mov
jno
lods
mov
xchg
push
adc
cmp
es
xor
xor
inc
mov
add
pop
inc
mov
mov
or
xor
sub
iret
mov
insl
pop
in
call
jne
iret
sub
shrd
test
stos
mov
loope
dec
jle
inc
aas
xchg
jg
enter
mov
xchg
std
or
out
aam
std
das
pusha
sbb
movsl
or
int3
aaa
sbb
daa
fwait
add
daa
ficoms
imul
pop
dec
lods
or
scas
sub
loope
adc
daa
xchg
mov
scas
lds
pop
sbb
jmp
jne
xchg
xchg
in
movsb
cmp
fldl2e
push
and
mov
mov
dec
and
shlb
add
fmull
daa
loop
ficoml
shr
xor
scas
push
notb
pop
xlat
test
movsl
nop
cmp
and
jl
sbb
mov
pop
movsb
cmc
xlat
aam
mov
movsb
cmpsb
xchg
shll
les
dec
pop
pop
push
lcall
out
clc
mull
scas
jge
mov
clc
test
and
mov
cmp
sub
in
mov
sbb
lods
in
dec
loope
dec
fidivl
add
es
pusha
sahf
cmp
or
sarl
mov
xlat
or
enter
shll
jo
push
dec
lret
add
out
jnp
mov
in
cld
out
jp
inc
lret
and
repnz
push
mov
aad
sub
sbb
bound
pop
jae
lret
je
enter
stos
push
mov
push
jmp
push
sbb
jle
pop
pop
mov
insl
sub
push
mov
pop
and
and
outsb
loop
jb
mov
outsl
aaa
push
mov
sbb
or
and
call
mov
or
mov
mov
push
mov
cwtl
cmpsl
push
push
and
test
aam
test
in
jge
sub
pop
dec
jl
jne
fsubl
rcll
scas
cs
fwait
addl
pop
adc
sti
lock
pop
rcr
sub
fwait
xor
movswl
imul
jge
dec
imul
pop
leave
test
stos
sbb
lea
or
dec
rcrl
cltd
pop
je
mov
xchg
xchg
push
dec
insl
jl
cmpb
and
test
lahf
xor
fwait
int3
fmulp
jg
lods
mov
jno
pop
dec
inc
sub
daa
xchg
out
cwtl
insl
pop
mov
lret
adc
cmp
pop
sbb
inc
lock
test
stos
repz
adc
arpl
idivb
mov
and
add
mov
and
nop
and
ljmp
adc
daa
and
sbb
aad
or
mov
mov
xchg
adc
js
out
mov
adc
push
and
lret
push
jno
sub
xchg
mov
subb
fldcw
aam
lea
or
pop
push
dec
ljmp
adcl
loope
stos
pop
test
adc
std
test
and
jge
mov
shll
cmpsl
pop
xchg
xor
dec
jecxz
int3
aam
repz
shlb
ds
bound
add
push
sub
mov
stc
mov
dec
pop
lret
xchg
push
aas
in
je
adc
ret
cmp
dec
shlb
mov
pop
pop
aad
lret
add
in
mov
bound
test
push
push
rcrb
mov
roll
xchg
dec
mov
bnd
cmp
adc
ret
sub
sbb
lods
add
push
mov
mov
cmp
pushf
mov
jle
dec
icebp
jle
fsubr
pop
addl
pop
inc
push
mov
mov
or
jg
repnz
int3
add
cmp
fwait
sub
sbb
mov
xor
loop
mov
sahf
popa
cmpsb
leave
jbe
xor
mov
sub
scas
cmovl
xchg
push
in
jb
repz
or
push
xchg
inc
js
xchg
pop
into
imul
and
idivb
cmp
jle
xchg
adc
push
dec
fmull
add
mov
in
imul
jecxz
rcr
in
cltd
icebp
mov
jne
sbb
xchg
dec
xchg
dec
add
movsl
mov
and
mov
imul
add
insb
ja
and
inc
rorl
mulb
sbb
push
fisubs
jmp
push
xor
fsubs
data16
mov
fwait
movsb
dec
adc
cld
mov
loop
mov
popa
sbb
pusha
or
add
scas
push
mov
scas
in
jmp
or
fimuls
cltd
bound
push
arpl
sbb
data16
adc
pop
bound
dec
imul
imul
jl
and
mov
popa
mov
and
ret
jg
les
xchg
inc
cwtl
subl
push
sarl
xchg
jns
cmp
negb
lods
lea
pusha
call
pop
test
xor
sbb
mov
cmp
cmp
lcall
jge
mov
out
xlat
and
in
sbb
insl
shrb
das
mov
cmp
mov
and
xchg
jge
push
cs
adc
addb
mov
shlb
and
pop
xor
sub
es
test
mov
xchg
push
movsl
xchg
ret
cmp
pop
push
call
push
clc
mov
push
fidivrl
testl
sbb
test
jge
sbb
xor
cmp
fidivs
mov
stc
sahf
in
sbb
fbstp
jbe
pop
loop
js
call
gs
inc
sbb
ret
mov
addr16
pop
loopne
pop
andl
and
in
pshufw
jmp
mov
testb
adc
ficoms
aas
orl
shll
rcrl
ljmp
sahf
push
rorl
bound
mov
pop
int
sahf
mov
mov
inc
xorb
xor
cmp
xor
cmp
repnz
mov
add
jp
xorl
enter
cmp
xor
adc
xchg
cmp
inc
imul
fs
push
add
cmp
pop
cmpsb
cltd
fdivs
mov
and
jg
pusha
popf
cmc
movsl
sub
jmp
pop
gs
sub
mov
fs
and
sub
aas
in
or
pop
cltd
cmpsb
arpl
jle
inc
pop
ret
push
cld
mov
insl
je
loop
lods
push
jmp
bound
adc
dec
lret
cltd
sahf
icebp
add
insl
mov
mov
push
adc
dec
mov
jnp
cltd
mov
filds
outsl
pop
cmpsl
cmpsb
sub
mov
out
fwait
mov
mov
xchg
popa
xchg
and
jno
pop
dec
cmpsb
fs
pop
je
jge
add
xchg
rcrb
xchg
aaa
rdmsr
fwait
add
shrb
jo
cmpsl
incb
out
stc
lods
lahf
jno
lock
es
test
fadds
xchg
inc
fchs
or
dec
mov
nop
add
xchg
xor
gs
cmp
scas
add
loopne
cs
push
sub
cmpsl
test
jns
rolb
orl
imul
inc
rcrl
jl
insb
ljmp
je
cli
push
cmp
mov
ja
sub
pop
xchg
pop
mov
arpl
push
or
stc
adc
pushf
fldcw
sub
mov
xor
mov
ret
repz
inc
ja
adc
aaa
iret
push
fs
das
inc
insb
lahf
test
pop
lret
das
mov
pop
and
and
sbb
movsl
data16
bound
mov
push
out
dec
jno
adc
mov
outsb
dec
jno
cmp
sbb
mov
movsb
rolb
sarl
pop
addb
fsubrs
xor
shlb
adc
xchg
aad
stc
leave
mov
sahf
dec
addb
adc
inc
mov
aaa
sbb
aas
mov
sub
sub
xchg
out
xor
es
mov
cli
lcall
or
pop
xor
insb
xor
xor
js
jne
xchg
mov
stos
xchg
les
in
sub
mov
sub
xor
loope
adcb
popa
xchg
xor
imul
fstps
out
test
jb
pop
push
jmp
dec
insl
stc
mov
sbb
ds
jae
jmp
mov
add
insl
popf
subb
inc
mov
or
pop
mov
sbb
shrb
add
dec
jmp
adc
add
or
icebp
inc
mov
pop
mov
cwtl
das
inc
addb
adc
inc
mov
stc
and
in
mov
xor
dec
jle
add
inc
or
add
sti
push
cmp
mov
xor
cltd
mov
mov
dec
lcall
andb
sbb
dec
or
jmp
xorl
add
icebp
or
and
jle
sub
arpl
adc
cmpl
mov
lcall
fsub
js
lret
daa
mulb
cmp
xchg
outsb
lock
or
or
lods
mov
pop
ja
sub
pop
std
xor
call
fisttpll
sbb
loopne
shll
mov
dec
add
pop
scas
add
mov
push
adc
je
je
clc
out
lock
sbb
ss
inc
lcall
sbb
push
aaa
popa
sub
fs
pop
mov
aaa
add
jb
mov
mov
fmull
pop
xor
lret
insl
out
pop
cwtl
cmp
nop
test
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
cmp
leave
add
gs
fadd
and
sbb
mov
sbb
mov
out
ljmp
subb
mov
loope
push
sub
add
aaa
mov
xor
rcl
jmp
push
mov
nop
fistl
jne
nop
mov
ljmp
loopne
sbb
mov
and
popa
xor
insl
fistpl
or
mov
ret
loope
stos
leave
mov
gs
aas
jne
sub
popa
inc
cmpb
fbld
or
jne
and
gs
and
pop
popf
daa
scas
adc
in
sub
sub
jb
jo
or
cmpsb
mov
mov
ds
fisubs
adcl
xor
dec
dec
mov
xor
mov
pop
imul
push
pusha
mov
mov
test
dec
lock
lahf
cmp
sub
xlat
std
mov
daa
xorl
movsb
mov
inc
lds
jb
fldenv
mov
je
mov
into
mov
jae
push
popf
fucom
fildll
or
jmp
sub
inc
ret
inc
ja
rclb
jo
outsb
in
cmc
xor
pusha
rcll
add
mov
jl
pop
dec
int
cltd
into
out
cmp
inc
lea
and
fisttpll
mov
sysenter
sbb
cmp
and
cltd
xlat
xchg
add
jmp
jb
dec
push
push
test
sub
sarl
pop
test
sbb
leave
add
aam
jg
fsub
cmp
orl
mov
fidivrl
aam
cmp
pop
iret
and
sbb
pop
jle
movsb
adc
push
int
lods
daa
jg
and
cmp
call
jne
test
xchg
jg
aam
xor
leave
and
xor
pop
mov
outsb
data16
jb
daa
sbb
out
xchg
xchg
pop
testl
mov
pusha
sub
fbstp
push
push
fsubrp
rorl
ret
mov
fistps
xor
mull
push
in
pop
push
aad
dec
jge
insl
pop
arpl
jo
outsb
cmp
mov
xor
mov
bound
mov
out
out
imul
jne
je
push
sbb
and
sub
in
pop
dec
lret
scas
xor
aaa
or
repnz
mov
out
out
lods
xor
das
lea
mov
ret
das
out
movsl
in
and
mov
ret
sub
mov
xor
add
stos
push
arpl
xchg
add
inc
adc
stc
push
into
adc
push
nop
fldcw
pop
insb
or
shlb
sub
movsl
cmpl
stos
sbb
stos
sbb
shrl
xchg
cmp
sahf
loopne
xor
mov
in
ret
leave
mov
mov
negl
push
xchg
jecxz
push
push
sub
mov
or
call
jb
stos
cmp
pop
inc
test
add
push
lahf
mov
stc
pop
stos
adc
popf
pop
rcll
mov
inc
push
mov
lea
scas
shlb
cwtl
js
dec
pop
inc
ret
mov
rorl
sbb
loopne
fsub
inc
scas
lods
loop
or
xor
roll
ljmp
movsl
jge
repz
inc
sbb
imul
inc
push
cmp
dec
inc
aaa
mov
in
and
fwait
imul
std
adc
inc
aam
mov
mov
test
xchg
dec
add
sub
test
shr
je
jo
jbe
mov
rcll
or
sub
ret
pusha
mov
xlat
mov
inc
arpl
or
adc
jbe
sub
call
dec
rcll
jmp
mov
push
adc
adc
dec
out
mov
cmp
popa
loope
addps
mov
and
mov
cwtl
xchg
mov
ljmp
pushf
pop
js
cmp
mov
lea
and
jnp
outsb
es
pushf
imul
iret
mov
mov
fnstenv
ja
xor
int
fnstcw
mov
and
pop
les
xchg
les
mov
jl
fldpi
vcvtss2sd
push
cwtl
notl
movsl
jbe
cmp
nop
sarl
rcll
lods
add
and
mov
mov
sub
call
push
daa
lds
mov
add
cwtl
sub
adc
add
repnz
cmp
int
sbb
cltd
pop
xor
push
or
outsl
pop
test
dec
push
mov
pop
push
sub
mov
and
and
ficomps
sbb
ret
jp
daa
and
ficoms
into
sub
je
test
or
inc
scas
xor
inc
push
lods
and
pop
ljmp
cmp
mov
pop
fmuls
fiaddl
cli
ljmp
push
dec
adc
jg
mov
outsb
push
jo
pushf
je
pop
adcl
fistpll
outsl
aaa
lock
or
sub
popa
ret
sbb
jns
jno
sbb
cmpsl
push
gs
mov
cs
cmp
int3
sbb
test
ss
scas
xchg
jae
rcll
ds
or
xor
cmp
xor
push
ret
pop
inc
clc
cmp
and
lret
ljmp
jge
int3
pushf
imul
xchg
mov
jns
push
pop
push
jne
mov
cld
fcomp
dec
add
push
adc
or
lret
pop
push
pop
cmpsb
lcall
push
orb
cmpsb
aaa
je
in
pusha
andb
sub
inc
and
pop
clc
push
lcall
lcall
adc
or
fldenv
cltd
daa
out
mov
and
loop
pop
lock
push
icebp
ja
mov
ror
lods
loop
out
and
or
imul
inc
lcall
add
add
clc
into
std
cli
cmp
xor
icebp
add
enter
push
mov
sbb
popa
xchg
sub
mov
lcallw
test
fisttpll
int3
sbb
sbb
and
das
lds
sbbb
add
mov
adc
mov
mov
inc
adc
cmc
push
lret
push
test
sti
mov
adc
mov
xor
adc
adc
jb
dec
xor
aas
sbb
loopne
repz
test
mov
pop
lods
out
mov
repz
mov
sti
arpl
lcall
sarl
sbb
aam
cwtl
or
sarl
inc
aaa
es
xchg
jge
and
pop
rcr
push
push
testb
and
jne
mov
dec
and
mov
fstpt
out
addb
es
in
mov
pop
mov
sahf
push
in
inc
cld
cmp
in
in
cmp
imul
sahf
test
push
pop
adc
push
mov
sbb
mov
jnp
hlt
iret
pop
pop
dec
inc
and
into
xchg
mov
jmp
pop
out
xor
insb
dec
xchg
enter
jecxz
push
and
pop
shlb
and
stos
pop
cltd
test
inc
or
sbb
mov
mov
mov
gs
sub
mov
lahf
and
ds
fwait
mulb
dec
adc
dec
dec
jnp
out
testl
lret
jno
sub
jb
jge
lret
sub
pop
mov
push
clc
mov
lcall
icebp
push
jmp
push
xchg
jmp
xor
and
lods
pop
jno
idivb
add
das
sub
stc
jno
loopne
adc
jge
dec
dec
jg
iret
and
push
mov
and
mov
ret
ja
cwtl
gs
inc
push
inc
add
xlat
sub
push
les
add
fwait
movsl
pop
cmpsl
fs
adc
sub
aam
jp
call
dec
inc
pop
jle
loope
inc
jbe
xchg
adc
dec
mov
gs
sti
add
xor
inc
shrb
das
jp
pop
mov
mov
mov
mov
in
mov
test
push
addl
pop
xor
mov
xor
sub
sbb
cmp
in
call
xchg
inc
adc
popa
and
jg
outsb
sub
push
std
mov
add
jae
jg
cmpsb
and
fs
std
mov
mov
setg
call
mov
adc
jmp
lock
mov
mov
std
push
jl
sbb
add
xchg
pop
ja
jne
aas
mov
sub
lea
jecxz
and
lock
sbb
push
daa
cmp
adc
xchg
into
jns
fiadds
subl
sbb
mov
and
out
les
mov
mov
outsb
inc
cmp
cmpsl
loopne
mov
and
aas
shrb
mov
aam
subl
loopne
ds
cmp
jbe
xchg
pop
mov
scas
lds
or
aad
fildll
dec
add
nop
decb
stc
mov
addr16
push
mov
sub
mov
test
addr16
popa
xchg
mov
mov
and
pop
mov
cmp
mov
fldt
cmp
out
ret
jns
addr16
mov
lea
in
sarl
test
cmp
fstl
dec
mov
cmp
clc
fwait
mov
test
les
enter
fiadds
loope
js
pop
shll
loopne
les
test
sub
jbe
add
xor
hlt
hlt
mov
xor
xor
rcrb
inc
out
push
lret
ds
or
cmpsl
adc
dec
mov
mov
out
iret
xor
xor
sub
jbe
fs
test
je
in
jnp
popf
jo
and
dec
repnz
rcl
pop
loope
std
testb
push
cmpsl
daa
out
fnstenv
enter
pop
outsl
lret
mov
dec
cmp
nop
fs
pop
cmp
and
mov
cmc
jg
mov
or
or
and
push
popf
xchg
dec
push
shl
dec
or
mov
pop
sbb
je
pop
jl
shlb
xchg
push
jns
pop
insb
push
lea
inc
jg
imul
in
push
xchg
pop
mov
dec
test
test
pop
shl
xchg
jnp
idiv
es
rorb
add
test
test
adc
in
inc
out
mov
cli
out
out
aad
and
aas
sub
jge
mov
cs
add
mov
cmp
addl
and
clc
jl
xor
aaa
les
pop
push
enter
shlb
adc
cmp
sub
imulb
or
shrl
add
lods
out
cltd
push
out
adc
fadds
cmp
push
xchg
and
and
sbb
sbb
inc
outsl
dec
and
jo
in
push
jp
add
or
or
and
ljmp
mov
xchg
mov
jle
jp
fdivrs
mov
bound
lcall
lock
add
sti
xor
and
pop
cmp
mov
mov
cmc
cmpb
popa
fld
push
test
cmp
testb
sbb
push
push
jge
pop
pop
testb
add
pop
sbb
jle
mov
test
hlt
das
add
clc
sti
aam
andb
dec
xchg
adc
jge
xchg
nop
call
ret
dec
and
and
loop
and
pusha
ljmp
mov
lret
add
mov
jp
pop
addr16
or
lds
ljmp
out
dec
jecxz
xchg
pop
inc
mov
sbb
fstps
xor
mov
cld
repz
loopne
rorb
mov
les
sarl
idivb
test
gs
stc
icebp
rcll
sbbb
mov
cmpsl
dec
pusha
faddl
mov
cmc
ss
or
push
decb
ret
cmp
stc
lods
fdivrp
and
fldl2t
adc
popa
xor
pop
pop
fcmovbe
js
andb
jmp
inc
stc
inc
push
jge
push
push
adc
rol
lods
arpl
fsubrp
dec
add
jae
mov
fstl
int
fisttps
sarl
fwait
inc
mov
std
and
std
add
rcrb
jmp
and
mov
cltd
sbb
xlat
jo
or
adc
das
movsl
lret
add
arpl
cmpsb
scas
scas
int
dec
outsb
push
cmp
mov
sub
outsb
hlt
xchg
rcrl
push
sbb
pusha
imul
pop
imul
xor
mov
push
cwtl
sub
cli
sub
aaa
test
or
insb
icebp
dec
pop
xor
add
imul
sbb
popa
leave
lret
mov
in
xchg
inc
cmp
push
lods
insb
repnz
stos
rcr
add
or
pusha
test
arpl
pop
outsb
ljmp
xchg
and
pop
cmp
imul
sti
test
iret
repz
jle
sub
and
lods
dec
scas
mov
mov
cmp
sbb
fidivrl
arpl
stos
cmp
test
aaa
xchg
bswap
sub
mov
adc
pop
push
fs
scas
mov
lret
xchg
mov
cld
out
rcr
popf
je
fstpt
fptan
adc
dec
cmp
sti
mov
scas
popa
shll
xchg
cmpsl
pop
test
dec
aam
imul
fdivrs
sysexit
std
stos
test
nop
dec
push
dec
fildll
inc
subl
push
mov
push
dec
push
lods
xchg
push
or
mov
lods
jmp
pop
aam
imul
cltd
xchg
pop
dec
daa
es
and
sbb
sbb
push
xor
repnz
cmp
mov
inc
stc
sbb
mov
into
jo
or
notl
cltd
call
pop
shlb
bswap
push
lock
mov
sub
xorb
fbld
dec
push
jae
add
cmpb
pop
add
cld
adc
and
icebp
or
push
cmpsl
sub
xor
add
les
add
fucomi
insb
das
addb
adc
and
inc
xchg
out
cli
pop
sti
cwtl
sbb
out
xchg
bound
dec
push
jno
nop
mov
xchg
add
mov
cmp
push
sbb
rorl
pop
cli
mov
outsl
dec
mov
setle
mov
cmp
sub
sti
mov
xchg
int
movb
add
outsb
pop
das
jl
dec
ds
fwait
adc
insl
pop
sbb
sub
and
cmp
xchg
sub
sub
push
push
std
popf
or
add
dec
mov
xorb
fdiv
stos
das
imul
aaa
js
add
inc
mov
pop
imul
adc
dec
cltd
in
cmp
dec
call
es
fmul
xchg
xor
cmp
shrb
jo
lods
int
insl
fcmove
or
cmc
add
cwtl
stos
mov
imul
test
mov
jmp
mov
jae
loope
add
xor
or
popa
mov
dec
mov
das
scas
jno
mov
dec
cmp
cld
out
dec
add
scas
mov
cmc
sub
sar
cmp
mov
push
push
lret
fmull
pop
mov
addb
xchg
mov
sub
or
subl
dec
lret
xchg
xchg
int3
data16
add
subb
push
pop
mov
push
cmp
and
mov
inc
xchg
add
inc
es
and
stc
cmpsl
push
fwait
inc
cli
adc
xchg
push
mov
shlb
pop
xor
sbb
mov
movsl
nop
jmp
cmpsb
add
repz
pop
aam
mov
mov
or
xchg
cmpsb
push
sbb
xor
bound
shll
cmp
fadds
and
inc
stos
cmp
xor
push
mov
test
and
sbb
cmpsl
pop
dec
out
pop
movsb
xlat
shll
stos
push
lods
xchg
fistpl
xor
jecxz
inc
rcrb
mov
icebp
pop
mov
cmp
xor
imul
loop
adc
aaa
psrlq
sub
mov
das
adcl
fsubr
fldl
cli
addr16
cld
out
sbb
pop
cli
inc
jmp
jle
mov
mov
ja
sub
jg
pop
xorl
xchg
xchg
jle
push
and
inc
mov
daa
push
movsl
shl
mov
cmp
pop
das
sub
std
mov
sub
push
popf
sbb
xchg
nop
pop
mov
jnp
mov
iret
dec
sahf
int3
sbb
xchg
or
lahf
lahf
out
pop
sbb
popa
ds
ljmp
orb
cli
push
in
fisttps
pop
xchg
addl
sti
xchg
icebp
cmp
pause
daa
hlt
imulb
add
dec
subb
sbb
mov
sahf
add
in
leave
imul
adc
mov
add
push
or
pop
mov
xchg
inc
and
xor
faddl
loopne
mov
rclb
cwtl
sti
xorb
cmpl
dec
cmp
sbb
out
rcll
xchg
pushf
pmullw
cmc
loope
loop
push
sbbb
mov
bound
push
es
outsb
aad
push
imul
jno
push
push
pop
aas
mov
lea
ret
jne
pop
sub
fcmovnbe
mov
pop
sub
mov
adc
dec
mov
push
adc
icebp
cmp
dec
sub
xchg
sbb
sbb
gs
or
jns
shlb
mov
popa
movsb
rcr
mov
inc
push
pop
sbb
ret
aaa
sub
jbe
and
mov
or
cmc
jo
in
test
or
pop
mov
adc
call
ret
or
inc
ljmp
xchg
jne
xchg
imul
jg
jno
cmp
pop
ffree
mov
or
mov
je
fcomps
sti
ror
je
xor
mov
xchg
iret
xchg
push
mov
and
lods
fs
das
daa
mov
mov
cltd
icebp
and
jne
mov
jecxz
cmp
inc
in
or
into
sub
jnp
xor
ret
leave
push
fs
jl
fisttpll
inc
shll
test
loop
arpl
inc
push
sarl
sbb
dec
sbb
bound
rorb
aad
push
std
jg
sub
mov
jbe
dec
xchg
cmp
rcrb
sub
movsl
mov
sbb
stos
sbb
shrl
dec
call
push
cwtl
out
sbb
lret
sti
fists
jno
inc
xorl
out
iret
cld
jnp
inc
mov
or
push
xor
push
aas
inc
repz
ret
dec
pop
dec
in
or
xchg
enter
sbb
dec
lahf
inc
dec
jbe
call
jl
out
faddl
dec
into
roll
jmp
inc
sub
fprem1
inc
or
loop
dec
in
dec
jge
push
idivb
ja
das
stos
shl
test
inc
jbe
pop
test
outsb
or
jns
pop
scas
add
cmpsl
pop
scas
data16
xor
lds
sbb
arpl
mov
daa
inc
lock
addr16
mov
bound
jne
mov
push
push
into
dec
arpl
lds
xchg
mov
mov
and
js
fnstcw
fbstp
mov
in
xor
sbb
jno
js
inc
lcall
xchg
enter
sub
js
cmp
sbb
push
dec
outsb
arpl
ret
shrb
int3
inc
jno
enter
loopne
sbb
cmc
hlt
push
push
fsub
fwait
jg
outsl
dec
ja
xchg
test
ret
lods
out
adc
sub
push
lret
cmp
ja
inc
sub
mov
mov
out
jo
insb
lea
aad
stc
cmp
mov
leave
popa
inc
daa
sbb
in
push
push
sub
testb
idivl
push
daa
add
aaa
add
mov
adc
jo
sub
pop
sbb
cli
jmp
fidivrs
lahf
dec
cmp
movl
test
sahf
mov
push
adc
aaa
and
push
and
popf
data16
add
push
xor
sbb
adc
cmp
stos
popa
mov
mov
pop
jno
rorl
push
xchg
shrl
xor
xor
xor
ljmp
or
sbb
mov
jbe
movsl
cmpsb
sub
jo
pop
insl
cli
out
andl
mov
sbbb
lds
cmp
out
mov
ss
add
mov
mov
js
test
scas
sub
mov
mov
loope
loopne
or
das
clc
lds
std
mov
into
call
pop
mov
fcmovbe
movsb
scas
stos
xchg
mov
hlt
add
pop
push
rcll
filds
test
ljmp
jl
stos
dec
lock
cmp
hlt
addl
cltd
nop
fimull
in
mull
in
stos
sbb
xor
or
jge
in
and
cli
xor
lret
mov
mov
addr16
dec
and
sub
adc
add
loope
mov
daa
mov
adc
or
das
lcall
mov
lock
popa
mov
jbe
or
mov
and
clc
sbb
mov
push
pusha
fsubrs
pop
nop
gs
cmp
pop
fldl
cltd
fdivl
out
imul
insb
in
std
ja
rclb
imull
lds
int
mov
pop
mov
lahf
and
jb
les
test
in
push
shl
test
push
jp
fisubrl
and
insl
jecxz
mov
push
mov
into
xchg
mov
and
fcompl
stos
leave
fdivs
dec
lcall
stc
adc
add
xor
daa
ret
and
xchg
mov
cld
fsts
in
outsl
stc
mov
inc
fsts
dec
daa
inc
and
mov
xchg
add
leave
mov
cmp
mov
mov
stos
rclb
roll
adc
lods
pop
js
jne
lods
jno
xchg
or
roll
xor
push
mov
stos
dec
stos
pop
push
pop
jae
xlat
pop
cltd
aaa
xor
mov
fwait
mov
xchg
mov
xchg
in
aas
inc
cmovle
mov
mov
pop
dec
pop
cltd
out
sbb
scas
mov
adc
faddl
push
fs
mov
sub
popf
adc
je
adc
mov
hlt
push
das
push
fnsave
out
fildll
or
stos
cmp
clc
inc
lock
popf
dec
leave
jmp
movsb
cmp
xor
or
or
insb
mov
stc
stc
jo
sbb
sub
nop
movsl
push
cmp
out
xchg
movsb
shl
add
add
fildl
andb
push
push
cmp
xor
cmpsl
repnz
push
dec
xchg
jecxz
pop
jecxz
jns
rcl
mov
jo
push
ret
leave
adc
mov
pop
xor
add
push
es
aam
inc
out
or
mov
or
cmc
jge
test
stos
inc
fmull
add
xchg
dec
sbb
inc
mov
lods
push
xchg
kandnw
and
sub
aas
mov
sub
sub
fs
dec
pop
test
lret
cmpb
int3
fs
insl
into
pop
out
fsts
or
push
mov
dec
ljmp
data16
rolb
shlb
xchg
rcrl
bound
pusha
ljmp
mov
add
xor
rolb
scas
mov
push
or
xor
mov
add
mov
mov
push
and
ficoms
dec
sbb
mov
or
xchg
lods
test
das
xor
inc
pop
data16
pop
dec
xorb
mov
jns
lahf
inc
imul
inc
mov
nop
sub
and
lods
lods
cwtl
lgdtl
mov
movsb
adc
imul
sahf
test
inc
out
jle
mov
cmp
cmp
sar
sub
outsb
push
and
int
mov
repnz
cmp
jns
add
push
call
mull
jo
aam
sbb
mov
pop
clc
test
pop
mov
xchg
xor
mov
out
popa
popa
in
push
sbb
inc
pop
xor
call
jp
cmpsl
xor
shll
and
sub
xchg
fmull
fsub
dec
xchg
sub
push
adc
aam
fisubrs
stc
pop
xchg
cld
mov
fidivrl
cmpsl
in
inc
addb
mov
ja
imull
jmp
gs
xor
mov
rorb
push
sub
out
imul
xor
mov
insl
mov
ljmp
ds
xlat
cmp
negb
out
in
jle
mov
lds
enter
pop
sti
ss
jp
ret
scas
out
jmp
pop
mov
pop
in
dec
dec
rcll
push
jns
mov
pushf
les
inc
vmovsldup
outsl
outsl
jnp
adc
pop
mov
jg
jb
dec
pop
dec
int3
inc
in
testb
cli
or
movsl
aas
mov
dec
jmp
xchg
jbe
xchg
xchg
rol
sbbl
sub
push
std
imul
add
js
and
dec
nop
jbe
add
and
pop
out
xchg
jb
sti
movsl
jbe
adc
aam
or
outsl
mov
adc
out
insb
mov
sub
cmpb
fs
mov
mov
sub
out
lock
push
pop
xor
stos
es
or
incl
inc
sbb
or
pop
inc
fs
xchg
out
pushf
mov
xor
sub
lret
scas
push
inc
jle
add
push
das
jl
mov
push
test
inc
mov
test
addl
pop
pop
push
sub
movsl
push
pop
or
bound
mov
lret
sbb
imul
and
cld
leave
scas
shll
in
push
push
lods
ja,pt
mov
pusha
jae
mov
xchg
xchg
add
mov
ja
add
cmpsl
stos
fsubrl
jp
aaa
cmpb
cmp
jp
test
icebp
and
je
dec
rorl
in
int3
dec
pop
std
xchg
inc
fstl
xchg
sub
rclb
out
mov
imul
shll
fisttpl
fst
test
jg
add
lcall
lods
fcmove
outsb
ljmp
xor
movb
rcrb
mul
mov
ss
inc
mov
mov
imul
test
inc
cmc
into
stc
sbb
sbb
xor
mov
xor
mov
outsl
lcall
and
outsb
lret
fsubrl
adc
push
aam
sub
sahf
mov
loop
ljmp
cmp
outsl
in
push
sub
cwtl
jns
test
xor
jge
mov
ret
xorps
loop
dec
icebp
arpl
sbb
or
mov
or
sub
adc
mov
jae
in
push
add
jo
imul
leave
fdivs
inc
push
mov
arpl
xor
sub
add
xlat
push
lcall
lcall
aam
aam
cmp
orl
push
mov
adc
fistl
je
jno
or
ja
enter
aaa
nop
inc
sbbl
adc
add
jge
into
scas
jmp
mov
mov
pusha
dec
aad
ja
jp
testl
lods
jg
call
pop
push
out
div
jmp
lds
roll
inc
sub
adc
in
cmp
fstps
addr16
in
push
into
jle
pop
cmp
push
bound
out
outsl
jp
cmp
mov
cmp
cmp
cmc
addr16
xorb
xor
mov
outsl
push
jg
insb
mov
sbb
lea
mov
out
or
ret
lret
mov
mov
pop
xor
mov
inc
out
dec
xchg
aam
jno
push
adc
mov
and
ja
aaa
pop
inc
cmp
icebp
and
dec
lock
mov
mov
nop
dec
push
jmp
fmuls
mov
push
sti
xor
cmp
sub
pop
div
shll
in
xchg
mul
sbb
fists
push
outsb
rcr
inc
jle
imul
negb
icebp
mov
mov
pop
mov
ljmp
addr16
cmp
test
jle
mov
insl
jns
into
push
mov
enter
xchg
cmp
add
or
dec
loop
inc
and
and
jne
add
scas
dec
dec
mov
pop
mov
xchg
ds
rclb
cmp
sarb
ret
shlb
dec
mov
mov
mov
aad
ret
and
or
fiaddl
pop
xor
pop
pop
lcall
daa
mov
mov
iret
xchg
mov
mov
or
sbb
out
cmpsl
jge
xor
xor
cmpsl
fs
pop
adc
fists
div
lahf
ficoml
jb
jl
pop
push
in
sub
add
das
lret
jmp
pop
ds
inc
test
jl
lods
lret
pop
sbb
inc
dec
and
ret
loopne
popf
jnp
jno
push
xor
sbb
dec
fstpt
loope
addr16
movsb
lret
mov
adc
mov
lds
aaa
mov
mov
sbb
jno
inc
dec
mov
es
pop
xor
inc
mov
mov
pop
ret
cld
mov
inc
fbld
loop
jbe
daa
ret
add
aaa
scas
xor
popf
shll
dec
stc
xchg
std
lods
and
mov
fwait
adc
adc
leave
push
sbb
and
cmp
xor
iret
inc
insb
mov
aas
stos
insl
xor
xchg
mov
add
call
add
aam
push
or
jmp
push
movsb
inc
jo
lahf
add
call
lods
pushf
sbb
push
sbb
pop
pop
dec
jns
addr16
xor
ja
inc
jns
mov
insl
sbb
addr16
pop
mov
idivb
dec
cld
sbb
cmp
pop
mov
or
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
xchg
loope
xchg
push
addl
dec
mov
pavgb
cs
out
mov
lcall
pop
jbe
adc
push
pop
mov
repnz
fisttps
or
sub
xchg
jl
adc
jnp
jne
leave
mov
fnstsw
xlat
jle
insl
xorb
sbb
out
adc
rorb
daa
adc
adc
inc
mov
ret
and
sbb
or
in
jmp
sbb
push
ret
sub
adc
icebp
push
je
cld
mov
xlat
scas
lock
jne
scas
xchg
orl
mov
pusha
dec
mov
jbe
jo
inc
out
and
xor
adc
mov
sbb
pop
int
and
push
daa
lods
pop
fimuls
dec
mov
pushf
mov
jle
hlt
aam
or
lds
in
cmp
or
hlt
sar
add
lret
add
inc
insb
mov
sbb
sbb
push
testb
popa
mov
movsl
jmp
jmp
popa
mov
and
and
les
shlb
mov
mov
sub
xor
mov
adc
mov
jge
xor
int
or
xchg
dec
pop
adc
mov
push
test
xlat
out
cmpsb
add
dec
daa
mov
pop
test
inc
add
daa
shrd
fwait
fs
movsb
mov
fidivl
cltd
dec
bound
cmp
sub
adc
xchg
dec
jecxz
outsb
add
or
lods
loopne
in
bound
mov
mov
in
sbb
push
pop
mov
add
and
add
ds
jns
and
fs
rolb
loop
cmpsl
test
mov
call
adc
fcmove
mov
lock
movsl
addr16
mov
fs
sbb
push
push
int3
sti
lret
stc
add
insl
pop
bound
push
inc
mov
mov
test
leave
jo
inc
roll
stos
outsl
xchg
mov
ljmp
aad
aam
or
mov
mov
jecxz
ja
notl
in
es
adc
inc
add
mov
sbb
adc
push
add
push
out
insb
sub
jne
or
enter
jecxz
insb
je
adc
mov
jnp
add
pushf
inc
pop
cmpb
pop
jle
rcl
push
xchg
cmp
out
push
sub
jle
push
mov
sub
iret
loope
jecxz
xchg
ljmp
dec
pop
loope
aad
adc
jle
dec
cmp
out
pushf
pop
cmp
push
movsb
push
aaa
cmp
movsb
sarb
leave
and
loop
lea
ds
lret
shrl
ljmp
sbb
add
in
jne
fcoms
cmp
lahf
adc
iret
repz
divl
sbb
ret
add
mov
mov
ljmp
outsb
adc
pusha
test
dec
or
mov
xchg
bound
test
mov
push
adc
fmuls
cmp
out
sub
pop
bound
daa
iretw
stos
in
aad
jle
mov
pop
leave
sub
sbb
mov
insb
loop
dec
fnstcw
jbe
cmp
pop
mov
xor
jmp
xorb
xor
sbb
push
imull
mov
cmpsl
jl
add
jecxz
test
mov
xchg
push
movsl
popf
icebp
sahf
jb
lods
aad
lahf
pop
sub
lods
pop
idivb
sbb
jnp
movsb
imul
ljmp
push
inc
imul
mov
cmpsb
lods
mov
inc
or
xor
bound
stos
push
pushf
xchg
out
std
imul
sub
xchg
and
loope
jbe
adc
and
dec
in
push
in
mov
sahf
lahf
ucomiss
push
rcll
loopne
and
fcompl
jbe
popa
add
adc
lds
lahf
mov
cmp
aad
daa
sub
in
xchg
pop
add
mov
aad
notb
lcall
imul
mov
rcrl
inc
adc
jne
adc
pushf
mov
mov
enter
xchg
mov
sahf
aad
mov
inc
fnstcw
ret
std
mov
pop
inc
dec
dec
or
push
mov
and
cs
pop
and
std
pop
es
idivb
cmp
cmp
inc
xchg
out
xlat
pusha
xlat
dec
movsb
and
jge
cmpsl
loope
cmp
adcl
xchg
std
icebp
add
outsl
adc
imul
or
fiadds
mov
ret
out
lods
mov
sar
ja
sub
fxch
push
cmp
cmpsl
xchg
js
call
mov
dec
sahf
scas
adc
inc
ss
jge
movsl
inc
ja
and
push
dec
mov
sub
sub
adc
sub
std
dec
cmpsl
inc
push
out
dec
push
jmp
xchg
jmp
popf
out
das
adc
cmp
sub
lret
pop
aaa
adc
xor
xor
add
mov
push
popf
testb
mov
popa
xchg
shr
aas
rolb
stos
adc
xlat
fiaddl
sub
ja
fmull
mov
imul
and
mov
sub
mov
add
scas
arpl
fsubp
adc
or
mov
fistpl
sub
insl
enter
fmull
pop
repz
sub
loope
jle
xlat
sub
jbe
push
sbb
jp
stos
push
imul
add
cmp
mov
out
inc
push
mov
arpl
pop
jo
dec
add
jmp
das
lcall
sbb
sbb
inc
jge
sbb
shlb
out
mov
mov
xor
add
out
insb
sub
sub
xor
js
xor
incb
xchg
mov
xor
lods
cmpsl
sbb
fcompl
add
push
xchg
push
insb
lret
clc
or
cmp
js
xor
xchg
movl
lock
jae
jg
xlat
sbb
pop
mov
clc
faddl
loope
push
scas
leave
ss
or
pop
inc
push
cltd
xor
mov
pop
dec
dec
aaa
sub
push
mov
test
mov
xlat
mov
aaa
adc
inc
cwtl
mov
cmp
shr
hlt
fdivs
stc
repnz
add
insb
adc
xchg
in
lods
xlat
mov
rclb
inc
add
xor
sti
push
mov
inc
mov
cmp
aaa
xor
outsl
lea
aas
mov
jle
std
fwait
adc
pushf
mov
mov
dec
lds
mov
aaa
mov
les
pop
lds
inc
out
adc
and
mov
jbe
imul
das
xchg
adc
sti
mov
ret
stos
imul
dec
push
push
push
rolb
cld
lock
mov
add
or
roll
push
jecxz
mulb
stc
add
shrl
pop
push
ds
outsl
cmp
negl
xchg
add
test
add
mov
shl
sub
xchg
xchg
push
decb
lcall
out
mov
jmp
sub
rclb
jle
jb
inc
mov
aad
in
push
mov
lret
decl
repz
lock
icebp
jns
mov
sub
or
stos
jle
lods
mov
mov
popa
mov
loop
dec
test
cli
jg
mov
es
fildll
out
push
or
cmc
jmp
inc
test
cmp
push
or
inc
xchg
sub
cmp
js
add
mov
mov
mov
aam
hlt
es
mov
fists
lea
xchg
pop
clc
lods
xor
and
neg
inc
popf
cld
push
ds
je
jmp
mov
push
fst
cld
daa
daa
mov
sahf
xor
xchg
dec
add
inc
pop
lds
xor
lock
push
and
mov
push
fiadds
test
mov
rcl
daa
int
mov
lods
fcoms
push
inc
cmpsb
cs
mov
mov
or
jo
mov
mov
jg
adc
inc
and
repz
cli
lods
sbb
jns
pop
jo
dec
jns
mov
dec
sbb
lock
lcall
ret
ret
frstor
inc
and
pop
pop
or
dec
push
fwait
jbe
cmp
sbb
jae
mov
enter
push
jle
add
movsl
in
and
push
inc
cld
xchg
jb
cmp
lret
xlat
push
mov
mov
sahf
mov
xor
cmp
loop
pop
stos
sbb
jae
jmp
dec
mov
xchg
out
or
sahf
sbb
mov
or
popa
pop
xchg
out
inc
lahf
je
cltd
add
int3
xlat
lock
data16
ss
movsl
loopne
idivl
insb
das
jae
pusha
and
shlb
push
out
fstpl
mov
xlat
xchg
mov
mov
stos
or
js
repz
mov
mov
sub
dec
addr16
dec
dec
int3
mov
push
repz
add
pop
adc
or
push
js
mov
dec
push
imul
mov
xor
sub
testl
mov
ljmp
fbld
mov
outsb
sub
sub
xor
push
into
xor
xor
xor
mov
xchg
loopne
jbe
xchg
dec
mov
dec
lret
add
sar
iret
ret
rcrl
mov
ret
adc
call
push
mov
mov
dec
sbb
ror
imul
inc
jae
in
stos
push
cwtl
inc
cs
popf
es
adc
in
adc
jns
cmpsb
xchg
xchg
add
cmp
push
dec
jp
nop
push
pop
filds
xor
sbb
out
mov
or
leave
in
mov
bound
scas
sti
and
mov
and
jp
jge
jp
jnp
mov
shlb
and
bound
push
sub
xor
rcl
int3
add
ss
cmp
dec
fadd
sarl
jae
cmp
jo
pop
sahf
inc
hlt
in
lods
dec
popa
pusha
aam
out
jns
dec
test
scas
out
jbe
or
pop
test
dec
adc
out
nop
pop
stos
popa
adc
mov
sbb
or
test
bound
and
out
xor
or
push
jle
add
subb
xor
repz
ret
fwait
cs
imul
enter
stc
adc
xor
push
arpl
xor
into
mov
jne
nop
jne
jno
mov
add
xchg
add
sub
lds
pop
fs
loop
inc
imul
mov
in
jp
enter
cmpsb
adc
js
or
outsb
jmp
adc
mov
sbb
scas
mov
pop
adc
sahf
sub
mov
cmpsb
adc
into
pop
adcl
add
mov
jns
mov
test
jg
rep
aaa
stc
inc
add
adc
inc
fnstenv
add
jne
fwait
sqrtps
lcall
push
cmp
cmp
mov
rcl
push
or
mov
movsl
lcall
hlt
lods
and
jo
mov
xchg
lret
dec
mov
mov
mov
add
push
into
push
push
test
pop
orl
jbe
insl
mov
lods
movsb
lods
leave
inc
cmpsb
repz
fdivs
aas
jg
ja
dec
fisubrs
jne
mov
fsts
fildl
mov
stc
mov
in
aad
movsb
mov
in
push
push
andb
scas
push
and
push
pop
lret
xor
sub
movsl
shll
ss
shl
sub
aaa
sti
dec
jo
roll
mov
xor
or
dec
push
mov
in
mov
into
out
dec
sbb
inc
movsb
push
mov
mov
enter
divl
push
lods
dec
roll
push
movsl
or
adc
lock
push
in
test
loop
aam
cli
aaa
adc
pop
test
or
insl
add
aaa
push
je
or
sbb
pop
pop
std
inc
iret
push
inc
mov
cmp
insl
scas
sub
int3
lods
ds
cmpsb
test
repz
mov
xchg
loope
and
push
mov
mov
test
sub
fsub
in
mov
xchg
mov
dec
dec
lea
pop
dec
scas
mov
hlt
arpl
lret
add
out
jl
in
push
jo
pusha
cld
adc
iret
call
aad
imul
sub
sbb
sub
fwait
or
jp
mov
and
adc
imul
inc
dec
lret
sbb
xor
sub
sahf
mov
add
lahf
dec
add
inc
cmpsb
cmp
or
cmp
xor
into
shl
out
dec
std
iret
sbb
jmp
ss
lret
lahf
or
push
dec
fcmovu
add
arpl
clc
mov
rorb
ds
sbb
add
ljmp
clc
or
fwait
inc
mov
mov
add
xchg
loop
pusha
or
in
add
mov
lahf
fmul
aaa
cwtl
mov
jne
xchg
rclb
incl
adc
pop
ja
inc
lret
test
or
push
pushf
sub
pop
mull
fisttps
pop
sub
xchg
xor
repz
rorl
or
push
nop
or
addl
leave
stc
cwtl
stc
mov
push
cmpsl
out
push
mov
int
movd
sub
pop
mov
or
test
jns
jne
int3
out
fs
push
xor
les
pop
frstor
fldl
fistps
dec
int3
mov
test
add
scas
stos
jmp
jge
divb
pop
shlb
sti
pop
aas
aam
mov
jns
mov
xor
call
pop
aas
rorl
push
mov
out
out
xchg
adc
test
push
or
inc
mov
cmc
movsb
scas
fwait
out
stos
in
cmp
xlat
xchg
mov
pop
jnp
hlt
add
cmpsl
clc
fldt
jmp
pop
incl
nop
rorb
dec
ds
mov
push
mov
adc
dec
fwait
out
les
ja
add
push
out
pop
cmp
mov
fmull
pop
mov
out
mov
add
xor
mov
cmpsb
loope
scas
sbb
shrb
push
or
ss
mov
mov
dec
cmp
fsubs
aad
dec
popf
inc
les
jl
outsl
outsb
stos
pop
and
loop
xchg
mov
push
subb
mov
shrl
inc
lret
nop
std
push
nop
repz
push
daa
and
arpl
jg
dec
out
dec
les
mov
outsl
jae
jg
cmp
cmp
push
pop
and
mov
cmpsb
and
pop
sbb
cld
loopne
jbe
std
sub
pop
ret
mov
push
mov
jbe
scas
shr
jle
inc
pop
pop
xor
or
lret
jle
shl
jns
lock
ss
mov
add
les
pop
stc
out
lods
std
pop
mov
mov
and
dec
add
dec
mov
scas
ret
orb
icebp
mov
push
lahf
cmpsl
pop
and
add
stos
fs
out
cmpsl
mov
push
cmpsl
push
push
mov
add
lock
inc
xchg
hlt
xor
fstl
xchg
test
or
lock
addr16
repz
pop
lds
adc
jg
pop
add
mov
inc
jne
test
insl
je
aam
je
inc
mov
dec
jp
mov
inc
outsl
fsubrl
pop
pop
pop
loop
pop
adc
lds
and
dec
test
lahf
jge
shl
mov
lahf
jnp
sbb
call
icebp
bound
dec
sub
push
clc
xchg
rol
mov
test
xchg
fldl
ljmp
jb
mov
sbb
add
lock
mov
xlat
cmpsb
addr16
rcrb
inc
imul
inc
mov
lahf
mov
dec
sbb
cmpsb
mov
stos
and
int
xchg
lret
cmpb
mov
shll
pop
sti
pop
jnp
out
or
xor
jns
sub
inc
push
rcr
aas
push
outsb
sbb
sub
out
leave
popf
test
aaa
fwait
sti
pop
int
mov
sbb
pop
fisttpl
and
lds
movsb
xchg
push
rclb
cld
incl
dec
enter
imul
pop
dec
pop
iret
inc
cmc
add
xchg
data16
pushf
inc
shlb
dec
cmpsl
aaa
mov
int3
add
lret
call
nop
lods
pop
add
shll
push
inc
jle
std
hlt
dec
imul
dec
push
fbld
iret
pop
mov
lods
lds
mov
sub
es
aad
sti
jns
mov
jmp
movsl
cmp
je
hlt
xor
daa
and
sub
jmp
jle
int3
jp
lock
fmuls
or
add
jno
insb
inc
js
std
xchg
in
lcall
pop
or
xor
push
mov
pop
jnp
xchg
out
repnz
inc
into
cs
add
aam
xchg
rcrl
cmp
xor
cltd
mov
lcall
aas
enter
insl
imul
push
cmp
iret
sub
testl
es
xor
sbb
pop
aam
insb
dec
xor
sbb
jno
xor
xor
enter
cmc
mov
lds
cmp
dec
xchg
add
xchg
or
cmpsl
mov
sahf
and
test
jge
call
pop
into
and
dec
xchg
imul
xor
xor
je
xchg
xor
fldt
in
xchg
or
xchg
ret
in
lods
xchg
mov
cmpsb
aas
lods
inc
insl
outsl
in
jnp
aaa
and
and
arpl
jge
xchg
sbb
xchg
addr16
sbb
push
out
or
repnz
jns
imul
mov
dec
leave
mov
dec
add
add
rolb
cwtl
mov
xor
mov
test
mov
icebp
data16
imul
divb
es
dec
mov
and
adc
mov
gs
rcr
jecxz
push
or
mov
ds
lods
bound
fadds
push
arpl
fwait
rol
sub
dec
sbb
sub
cmp
loop
inc
ss
pop
mov
and
mov
cmpsl
inc
test
pusha
pop
pop
lods
mov
pop
hlt
cmp
mov
mov
stos
loop
jo
in
and
out
jecxz
cmpsl
xor
pushf
fidivrl
sub
jb
int3
adcb
outsb
scas
and
cmp
test
or
fnstcw
push
inc
pop
pop
rcrl
das
loopne
sbb
ret
push
imul
test
xchg
adc
cmp
pushf
cmpsl
gs
ud1
popa
idivl
je
mov
dec
add
test
jo,pt
pop
test
jl
push
xchg
lock
mov
mov
mov
call
lcall
mov
mov
shrl
je
ret
mov
sub
movsb
mov
loopne
pop
movmskps
xchg
jb
lret
mov
jae,pt
or
aas
fsts
pop
jl
mov
sub
xor
mov
inc
push
std
sbb
jmp
pop
add
test
push
mov
aad
jb
test
jmp
pusha
push
repz
psubd
lahf
popf
sbb
mov
bswap
cmp
dec
js
mov
xor
xor
mov
or
lcall
pop
jns
je
pop
aam
imul
cli
or
or
sti
mov
testb
mov
movsl
cmp
icebp
xchg
filds
sbb
push
push
clc
jge
outsb
frstor
in
gs
hlt
stos
push
or
sbb
sbb
in
or
ret
add
mov
jae
push
add
push
bound
stc
sbb
dec
dec
sbb
xor
add
jno
cli
frstor
imul
add
jnp
jae
cli
jne
sub
cmp
outsb
and
or
or
stc
pcmpgtb
iret
or
les
dec
jecxz
lea
cmp
mov
bound
mov
aad
adcl
loopne
mov
jecxz
add
sti
xor
loop
fisubl
or
test
mov
clc
test
test
push
jae
lods
lds
and
jae,pt
sbbb
lret
lahf
or
mov
mov
mov
aam
jge
or
push
mov
sbb
test
adc
test
sahf
sbb
es
in
sub
rcr
push
xchg
imul
mulb
mov
xchg
daa
dec
jmp
xor
push
mov
cmp
push
mov
pop
lea
jmp
frstor
dec
rcll
pop
add
mov
jns
xchg
dec
xor
sbb
sub
inc
sub
jecxz
lcall
fcoms
fwait
mov
lcall
xchg
push
cltd
out
dec
shll
mov
fistpl
call
sub
test
xlat
sub
mov
imul
stos
xchg
cs
out
sbb
add
lds
mov
mov
sub
xchg
out
stos
outsb
pushw
test
out
jno
fsubrs
stc
adc
inc
pop
gs
rcll
aad
dec
sub
dec
sbb
ret
addb
add
cmc
ds
ljmp
cmpsl
das
push
fmul
scas
test
nop
push
into
or
add
jl
in
data16
pop
jle
out
idivb
sub
inc
add
in
and
xchg
or
stc
imull
stos
leave
push
cmp
sbb
sub
adc
mov
xor
ror
icebp
inc
arpl
lds
jg
fcmovnb
pop
inc
movb
lahf
mov
ja
push
leave
mov
add
mov
or
loop
mov
cmp
sarb
inc
ds
arpl
jno
ja
cwtl
lock
cmpsl
loop
cmp
lods
lods
jp
xor
std
mov
xchg
imul
cltd
cltd
movsl
stos
adc
cmp
push
pop
pop
xchg
cs
jno
adc
xchg
jmp
fstpl
mov
bound
aas
push
push
xchg
daa
loop
xor
jp
add
xor
fwait
mov
xor
cs
shr
sub
xchg
rorb
adc
adc
bound
add
mov
andb
cmpsb
leave
cmp
xchg
or
sub
mov
in
add
mov
sub
jne
les
outsl
test
outsl
mov
pop
bound
sbb
xor
inc
push
inc
cs
adc
jne
dec
or
dec
jg
ds
add
pop
dec
add
pop
cs
andl
imulb
ret
adc
xor
cmp
lret
notl
mov
xlat
jecxz
mov
pop
das
mov
dec
lock
cld
adc
jbe
push
jecxz
inc
or
pop
ret
push
add
push
pop
push
sub
inc
adc
push
dec
inc
dec
aaa
push
arpl
stos
lret
mov
int3
das
out
roll
sbb
fadd
pushf
mov
and
push
cmp
lcall
xlat
out
inc
mov
pop
or
fdivrl
mov
clc
and
pushf
lds
and
pop
add
test
mov
mov
fidivrl
pusha
push
int
inc
xchg
sub
test
mov
sub
ret
jo
cld
dec
and
jg
sub
sbb
and
xchg
dec
imul
jb
xchg
mov
stos
sub
mov
mov
cmp
push
add
lret
loop
das
out
stc
cld
and
mul
sbb
fwait
pop
mov
mov
lea
mov
int
shlb
in
inc
stc
jae
xchg
mov
nop
dec
cwtl
or
popa
loopne
mov
cmp
lock
and
pop
insb
cmpsl
mov
rorb
xorl
cmp
sbb
cmp
fwait
xchg
aad
inc
cmp
clc
inc
das
mov
inc
mov
sbb
ret
idivb
imul
fisubs
mov
popf
fstl
sar
dec
stos
out
in
popf
lea
outsb
lods
pop
fs
pushf
daa
xchg
adc
mov
idivb
xchg
xor
add
sbb
fiaddl
cmpl
inc
jne
imul
mov
inc
fstpl
cmp
ret
mov
adc
jecxz
mov
bound
ds
lahf
inc
rcr
shrl
pushf
add
mov
cs
mov
push
mov
movsbl
sbb
cltd
cwtl
call
leave
inc
xchg
mov
mov
es
subl
fiaddl
mov
fsubl
inc
ret
imul
mov
sbb
loope
iret
xor
dec
push
xor
xor
xchg
enter
adc
add
out
addr16
add
lds
test
rorb
xchg
and
fwait
adc
cmpb
into
hlt
pop
jl
xor
aas
add
or
out
js
aad
dec
test
jle
lcall
mov
mov
mov
adc
mov
lods
sub
out
jecxz
fwait
enter
push
mov
mov
pop
xchg
fnsave
xchg
cli
mov
movsb
xchg
mov
dec
add
into
mov
inc
fimull
popa
shrl
in
dec
stc
sahf
and
in
push
lods
pop
push
mov
int
xor
lock
stos
lods
daa
mov
cmp
xor
outsb
pop
je
pop
xor
es
enter
and
jnp
xor
jge
loopne
in
sub
aaa
xor
das
iret
ret
xchg
sbb
ss
pavgb
dec
decb
dec
dec
pop
mov
cwtl
es
je
sbb
jl
clc
jno
ss
mov
cmp
pop
into
lret
push
jle
shl
dec
sub
popa
test
inc
mov
jb
test
xchg
jne
push
movsl
and
cmp
test
ja
dec
bound
sub
push
fidivrs
je
push
das
jns
xchg
and
sub
mov
mov
in
push
imul
add
mov
cmpsl
into
mov
inc
push
out
dec
xchg
xchg
pop
xchg
push
jmp
sbb
mov
arpl
rorl
sbb
ja
push
ret
faddl
nop
sbb
jmp
dec
leave
scas
call
pop
test
pop
mov
fsub
mov
movsl
cmp
ficomps
dec
xor
jae
std
popf
stc
jno
or
pop
notb
or
dec
mov
cmpb
xlat
lcall
das
xor
dec
pushf
or
and
add
mov
ss
push
mov
sbbb
cs
inc
fisubl
sub
rorb
pop
gs
das
push
test
mov
enter
sbb
mov
cmp
jbe
cmp
scas
popa
inc
jo
cmp
mov
cmp
in
outsl
or
movsb
sub
push
aad
insb
pop
test
gs
out
std
dec
inc
popa
pop
outsl
adc
mov
pop
mov
scas
xchg
adc
pop
sub
adc
clc
push
sub
nop
inc
push
shrl
sub
dec
xor
aas
int3
rclb
inc
jmp
sti
shrl
jg
fs
jge
das
xchg
push
sahf
mov
into
cli
divb
push
pop
call
mov
mov
fldt
into
xor
sarb
bound
xor
sbb
fistpll
cmpsb
sbb
xor
into
xchg
fcomps
lea
add
and
jecxz
lret
fsubrp
lahf
ja
push
and
sahf
jge
mov
std
mov
xor
adc
xor
orb
subl
mov
rcr
icebp
stc
pop
and
push
or
push
aaa
xchg
jp
in
mov
fnstsw
mov
or
xor
and
out
or
punpcklbw
mull
mov
aam
fstps
adc
or
lret
cmp
mov
push
xchg
cltd
or
and
mov
scas
xchg
jl
test
loope
dec
mov
mov
or
into
dec
scas
lods
sti
adcb
jle
fs
pusha
flds
fcompl
je
push
jmp
addr16
cmp
xchg
mov
into
cwtl
pop
cmc
or
push
je
or
bound
adc
mov
shrl
es
cmp
pop
inc
mov
add
push
xchg
ds
rclb
mov
or
add
pop
inc
push
jne
or
aad
inc
push
dec
lds
out
xchg
lods
mov
dec
sbb
hlt
mov
cmp
mul
sbb
xor
into
mov
dec
mov
imul
subb
sbb
stos
mov
cmc
stc
leave
dec
call
sbb
jb
jle
mov
outsl
xor
inc
xor
aaa
pop
ljmp
in
repnz
xchg
sub
aam
and
inc
jge
xchg
pushf
and
xor
gs
jp
dec
cmp
push
movsb
dec
ljmpw
cmpsl
or
mov
out
adc
or
imul
jb
mov
loop
cld
and
dec
in
out
pop
int
xchg
xchg
lret
sbb
sbb
xchg
push
push
push
and
push
sbb
or
mov
testb
repz
xchg
repz
add
cmpsl
dec
imul
dec
sbb
jge
sahf
cmp
ret
sbb
sub
repz
pop
fcoms
dec
lahf
scas
jge
lret
fcom
test
test
enter
sub
orps
fsubr
xchg
fisubs
sbb
xchg
pop
aam
repnz
divb
add
jmp
lcall
lea
adc
fwait
cmp
sbb
and
and
pop
xchg
push
scas
xchg
dec
bound
fnsave
in
inc
add
dec
loopne
sub
or
mov
fidivrl
push
fsubrp
popl
xchg
push
mov
mov
adc
push
lret
xchg
jae
pop
cltd
mov
xor
daa
jae
jl
push
push
cmp
aad
adc
xchg
pop
iret
aad
pop
jbe
in
jle
dec
fstps
movsl
loope
jmp
into
jo
push
in
jno
cld
add
cmpsl
xor
hlt
xchg
pop
push
xor
cwtl
mov
pop
mov
cmc
mov
out
cmpsb
pop
pop
mov
out
loope
add
or
test
mov
jl
push
test
sbb
push
sahf
jb
shlb
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
jle
ret
mov
out
addl
cmpsb
movsl
xchg
subb
mov
popl
mov
jg
lds
mov
and
cld
out
mov
xor
push
mov
and
sub
lcall
loopne
pop
add
cmc
loop
or
cmc
pop
rcll
adc
outsl
inc
mov
xchg
call
push
pop
xor
stos
jns
sub
popf
in
decl
or
icebp
mov
pop
outsb
xchg
aam
push
call
mov
call
push
scas
lret
xchg
popf
pop
cmp
xchg
ret
out
inc
mov
les
iret
jp
inc
cmp
pop
adc
jne
xchg
enter
mov
sar
shlb
cltd
movsl
push
shlb
stos
popf
xor
sbb
xor
mov
jl
mov
push
or
adc
pop
movsb
loope
sub
stos
push
cmpsb
jmp
sbb
fisubs
hlt
xlat
mov
outsb
push
mov
imul
sbb
or
pushf
cmp
lods
das
in
cmpsl
xor
fcmove
stos
xor
test
loopne
xor
xlat
sub
mov
jns
ljmp
lods
divb
stos
mov
pop
icebp
dec
or
dec
out
xchg
dec
enter
mov
repz
rcll
ljmp
cmc
cmp
in
and
mov
and
xor
mov
mov
shlb
mov
add
fwait
dec
pop
insl
mov
movsb
adc
pop
int
xor
fwait
xchg
cmp
out
mov
loop
adc
cmp
xchg
mov
cld
adc
aad
or
stos
cld
inc
insb
flds
and
mov
and
jcxz
fsubrl
stc
iret
lcall
std
jmp
rcll
jge
sub
cltd
jp
sub
into
jle
xor
loopne
push
sbb
mov
mov
test
scas
aam
jae
adc
in
inc
shl
jno
popf
push
pop
rcll
mov
xchg
push
and
inc
inc
ret
adc
pop
cmp
insl
fstpl
rorl
out
stos
push
imul
movsl
mov
or
push
int
loope
es
push
sub
dec
push
mov
stos
andl
mov
push
mov
sub
mulb
xor
mov
cltd
dec
add
sti
or
fidivl
cmpsb
fmuls
adc
loope
jns
xlat
adc
js
xchg
mov
outsb
push
push
ljmp
or
shlb
mov
jae
popa
jecxz
or
dec
xlat
call
mov
mov
js
mov
iret
push
call
ljmp
xchg
daa
mov
add
out
cmpl
jno
xchg
jl
frstpm(287
fsubl
pop
xor
hlt
ss
mov
add
and
jmp
fbld
sub
dec
add
or
inc
lahf
sbb
lcall
outsl
scas
mov
ficoml
shrb
pop
shl
dec
jp
dec
idivl
into
mov
adc
ss
mov
mov
pop
and
cmpsb
mov
jbe
add
data16
int
inc
mov
xchg
adc
and
mov
mov
mov
push
xchg
jmp
or
dec
mov
ret
add
push
insb
ret
fidivl
fistpl
fsubl
sti
jp
cmpsl
ss
mov
fmul
incb
mov
jmp
cld
test
arpl
popa
sbb
and
inc
iret
cmpsb
fwait
jle
add
repz
sub
test
das
out
jns
jb
jecxz
push
rolb
dec
jg
and
jnp
xorl
cltd
dec
loopne
scas
test
enter
in
sbb
sub
negb
inc
push
insl
add
push
enter
inc
inc
hlt
mov
jb
test
mov
mov
les
inc
adc
inc
nop
mov
sarb
test
sbb
ficomps
ret
cs
sub
cmp
popf
mov
cltd
test
cmp
pop
cmc
insl
insl
jae
loopne
fwait
sub
out
mov
in
inc
sbb
cmc
into
inc
jmp
dec
xlat
leave
push
jecxz
and
pop
movsb
adc
subb
pushf
mov
ret
stos
mov
pop
sbb
mov
dec
pushf
inc
jmp
lods
nop
stc
sub
mov
or
xor
jne
cltd
jl
xchg
adc
mov
cltd
inc
arpl
int
sub
or
xor
loop
xchg
test
aas
mov
les
dec
lods
jne
mov
sbb
add
mov
icebp
mov
mov
lret
js
popf
das
mov
push
lea
js
add
lds
push
xor
mull
popf
jmp
push
out
mov
dec
jg
outsb
inc
push
sarb
push
leave
jb
inc
adc
jo
test
sbb
int3
gs
iret
adc
fnstcw
inc
mov
mov
xor
pop
cmp
mov
inc
loopne
stc
rcll
pop
or
in
in
jmp
mov
dec
and
fildl
testb
push
push
into
mov
jae
cmovns
dec
orl
repnz
mov
adc
ljmp
imull
add
and
popa
sti
or
sub
movsl
jge
sbb
mov
xchg
mov
andb
inc
ljmp
fwait
mov
cli
movsb
cwtl
xor
mov
add
xchg
aas
jb
dec
jecxz
aas
in
jo
cmp
sbb
xor
sti
cmpsb
mov
aas
fnstcw
mov
mov
push
ret
xchg
mov
popa
jb
jmp
cmp
xor
inc
xchg
fmull
cltd
out
push
or
mov
fstp
cmp
repnz
push
out
push
icebp
inc
add
ja
add
fs
mov
dec
sub
push
fldcw
push
add
mov
xor
adc
gs
nop
sbbb
push
mov
adc
adc
xlat
push
sub
mov
mov
cmp
cld
enter
dec
or
lea
bound
sub
inc
sub
sbb
int3
stc
dec
scas
xor
insl
pop
xchg
dec
cli
sub
or
negb
pop
jmp
test
add
out
sub
aaa
sub
pop
xchg
movsl
mov
and
mov
inc
in
and
sub
lahf
hlt
in
sahf
or
cld
cld
lods
pop
aas
lods
xor
popa
incl
mov
das
mov
aaa
jg
pusha
mov
ret
or
mov
sahf
cmpsb
mov
lret
ret
inc
lds
shl
sbb
lret
insb
call
pop
shrb
adc
sbb
xchg
into
sbb
scas
enter
daa
cmp
mov
adc
mov
push
stc
sbbl
mov
mov
shld
add
sub
rclb
dec
in
sbb
rorb
fwait
leave
sub
push
es
leave
mov
in
imul
aas
insl
fldcw
dec
shl
or
lods
xchg
dec
out
sub
sbb
mov
pusha
aam
mov
or
out
cmc
pop
and
mul
ret
roll
add
lcall
insb
notl
into
test
loope
dec
loopne
stos
lcall
out
cli
add
daa
xor
cld
jbe
push
mov
add
mov
cmp
cli
mov
inc
sbb
lahf
and
loopne
xor
cmp
inc
outsb
inc
cmc
inc
lock
inc
cmp
lahf
mov
mov
sti
in
in
sub
in
pop
dec
rcl
outsl
xchg
adc
es
test
hlt
stos
lods
fidivl
mov
cmp
call
cli
sbb
cmp
sbb
jg
popa
lea
jns
adc
pop
mov
imul
push
add
lret
add
jecxz
fistps
lock
test
out
cmp
cmp
idivl
xor
push
push
ja
addr16
fstpl
ss
or
sbb
sub
add
dec
divb
mov
sbb
inc
loope
sub
stc
mull
dec
imul
adc
add
lcall
pop
data16
or
lret
popa
push
subb
aam
popf
mov
cltd
mov
in
mov
or
insl
inc
pop
cmpsl
into
push
xchg
test
adc
add
add
pop
stos
dec
xor
xchg
mov
ljmp
jle
push
in
addb
sbb
jo
dec
cmp
lock
movsl
xor
sbb
push
cltd
and
mov
mov
sbb
add
dec
push
mov
lret
push
pop
cltd
sti
addr16
test
in
out
popf
push
mov
xchg
adc
adc
shrl
les
mov
mov
cmp
pop
loopne
outsl
fnstcw
adcl
insb
cltd
mov
repnz
fdivrs
cmpsb
pushf
pop
pop
pop
pop
sub
jg
push
cmpsb
pop
arpl
data16
andb
push
dec
out
mov
and
adcl
je
dec
mov
fs
xor
lock
jle
imul
repnz
mov
fmul
inc
in
xchg
push
mov
xchg
imul
in
int3
mov
into
xor
mulb
or
push
or
loope,pt
cwtl
scas
dec
cmp
inc
mov
push
mov
add
cmp
xor
sub
add
jmp
ds
fs
mov
in
inc
cmp
imul
jmp
sbb
adc
jl
mov
or
jg
leave
xchg
add
lret
push
daa
out
push
push
popf
stos
mov
or
jnp
ja
repnz
rorl
and
das
cmpsb
jg
sub
adc
gs
xor
out
enter
mov
add
and
clc
repz
sub
adc
test
outsl
dec
and
daa
mov
rcl
mov
aad
mov
rol
jb
jae
dec
dec
into
xor
xor
mov
pushf
imul
push
testb
fstp
sbb
cmp
add
adc
pushf
cld
mov
mov
xlat
stos
popl
mov
inc
push
sub
inc
cmpsl
lea
push
test
loopne
mov
imul
jo
sub
mov
mov
insl
sbb
stos
ret
movsb
pop
add
imul
fimull
sbb
and
insb
iret
orl
mov
dec
sub
bound
fistl
arpl
bound
or
out
fidivrs
imul
scas
jnp
or
add
or
mov
mov
push
mov
cmp
jg
fisttpl
mov
dec
mov
sbb
or
mov
test
xchg
dec
mov
sahf
sbb
stc
je
dec
adc
lcall
add
pop
inc
sbb
xrelease
les
fxam
xchg
rclb
aas
mov
adc
jl
int3
jp
cmp
aaa
inc
loope
sub
push
lods
dec
sbb
mov
sbb
out
pop
pop
cmpsb
scas
sbb
jne
xor
inc
fstpl
cmc
mov
test
xchg
xor
into
adc
mov
and
dec
adc
sbb
sar
subb
ret
pusha
in
clc
jmp
jae
add
call
dec
das
in
xchg
pop
je
mov
mov
aaa
mov
sub
mov
scas
stc
cld
nop
jl
je
sbb
pop
fs
dec
fdivrl
movsl
sbb
xchg
and
cld
das
call
adc
fldl
pushf
leave
jl
in
call
xor
adcl
daa
inc
dec
jp
sbb
call
rcll
xor
add
sub
cbtw
dec
mov
jp
mov
lds
shll
popa
les
aam
sub
xor
sbb
adcb
xor
mov
cmpsl
xchg
mov
dec
rcrl
inc
push
outsl
pop
and
pop
iret
mov
fisttpll
hlt
lea
or
inc
lahf
jle
cmp
subb
jo
pop
or
push
daa
dec
scas
sub
and
test
aas
cmp
insl
add
sbb
in
movsl
lods
inc
push
mov
pop
stos
mov
lea
push
insb
sub
adc
cld
sahf
leave
inc
lods
mov
xchg
movsb
movsb
jge
fsubrl
mov
das
jge
das
pop
and
sti
xchg
ss
xchg
push
xchg
inc
cmp
fs
movsb
xlat
sahf
sbb
mov
jmp
or
fs
push
pop
lods
xchg
inc
imul
adc
mov
fucomip
out
sub
inc
add
testb
or
inc
mov
cs
inc
sub
outsb
aad
xchg
lahf
xlat
loope
jg
popf
mov
es
sar
arpl
icebp
mov
daa
mov
mov
and
jle
push
ds
mov
pop
out
ss
mov
nop
adc
sbb
xchg
sti
or
mov
mov
jno
mov
into
test
lcall
xchg
inc
inc
vpsllq
cltd
icebp
lcall
fstp
jbe
js
jb
mov
mov
push
push
mov
mov
add
or
cmc
loope
dec
cmc
jne
ret
push
cwtl
adc
xor
ret
popf
mov
push
pop
push
lahf
loope
pop
mov
xor
lret
jge
es
lahf
mov
fs
cmc
jle
loope
add
mov
js
js
adc
in
cli
test
inc
adc
and
or
push
fcomip
fnstenv
dec
inc
sbb
shr
mov
in
mov
cmpsl
sub
inc
push
into
and
popf
loop
shrb
rclb
pop
fldt
dec
mov
fs
aas
xchg
push
push
and
push
pop
stc
mov
mov
lods
jg
pop
add
jno
jbe
shrl
or
mov
das
inc
call
bound
ljmp
pop
test
packsswb
and
xchg
jb
xor
xor
ja
or
std
adc
call
sub
mov
stc
or
mov
rorb
fucomp
shr
js
mov
cmpsl
push
enter
pop
lods
imul
sbb
rdpmc
mov
pop
mov
nop
sbb
mov
lret
mov
stc
lea
or
inc
int3
test
inc
ljmp
jecxz
aaa
arpl
xchg
mov
cmp
ja
stos
sbb
scas
ret
pop
xlat
les
xchg
xchg
les
rcrb
cmc
jns
andl
jp
inc
setle
jmp
sub
inc
mov
sbb
imul
mov
inc
mov
cmc
dec
cmp
test
ret
cld
push
lods
jle
dec
pop
out
jb
sbb
fldenv
inc
or
rcll
and
out
jb
les
xchg
inc
or
jp
clc
rorl
add
pop
xlat
inc
das
sub
and
mov
imul
and
add
shlb
jbe
arpl
or
pop
pop
jle
or
cmc
scas
jno
mov
sbb
pop
cmp
xchg
pop
js
cmpsl
xchg
push
jo
fdivp
cmc
or
sub
and
popa
stc
sub
dec
sbb
sub
loopne
inc
xchg
pop
call
cltd
jp
mov
push
jmp
add
in
int
das
xor
mov
pushf
mov
je
xor
jg
shlb
movsb
fstpt
mov
mov
scas
push
ds
arpl
sbb
jb
mov
xchg
and
lret
cs
adc
or
xor
stc
lahf
pop
pusha
inc
push
mov
inc
ljmp
scas
mov
inc
pop
or
lahf
aad
cmpsb
mov
inc
dec
mov
push
pop
loopne
mov
gs
js
push
shlb
ss
inc
dec
lods
call
mov
movb
mov
cmp
jae
jne
inc
popa
push
sbb
in
out
clc
icebp
scas
cmpsb
daa
xchg
call
cmp
sbb
mov
into
aas
jb,pt
jne
lret
dec
lahf
mov
cwtl
jns
repnz
int
pop
rol
loopne
repz
hlt
sbb
cld
mov
and
push
push
loope
rorb
sub
mov
popa
or
dec
pop
jne
aam
or
fwait
dec
lea
and
or
pop
cmp
gs
pop
and
fidivrs
in
lret
or
mov
insb
pop
sub
xchg
cld
cld
mov
pop
sub
fldt
mov
dec
fsubrl
and
fsubp
ficompl
mov
sub
aas
lods
mov
add
xor
bound
call
outsl
mov
loop
int
int
lock
and
xchg
cwtl
enter
mov
hlt
jb
pusha
mov
add
or
imul
pushw
pop
unpckhps
fidivrl
rep
adc
inc
inc
dec
es
xor
lea
or
pop
lods
pop
jg
sbb
mov
push
in
insb
adc
push
dec
mov
stos
icebp
mov
addr16
adc
fiaddl
adc
ljmp
mov
push
and
notl
or
jle
jmp
das
xchg
and
fistl
repnz
mov
imul
inc
outsb
pop
lods
mov
aas
xchg
mov
popf
lods
lods
cwtl
lds
pop
pushf
sub
inc
or
mov
sti
sbb
and
lods
push
test
jle
enter
int
std
cmc
pop
sbb
lret
out
les
in
idivl
or
push
cmp
mov
push
das
jnp
roll
inc
movsl
pop
mov
and
or
das
dec
stos
add
test
test
or
adc
cli
pop
xchg
enter
sub
lcall
pop
sub
xchg
jne
cmp
sahf
pop
andb
or
stos
push
in
xlat
xor
in
xchg
and
movsl
clc
push
popf
push
dec
in
jp
mov
fdivp
inc
mov
stos
roll
dec
xorb
xchg
insb
and
cwtl
push
in
lcall
push
aam
mov
and
pop
in
mov
mov
adc
aad
or
aam
sbb
test
pushf
dec
mov
dec
gs
and
adc
insl
jae
aaa
xor
int
shr
add
cli
mov
mov
push
shl
les
jno
ret
loopne
or
push
xchg
push
sbb
mov
fstpl
repz
mov
das
out
xchg
add
mov
psubq
pop
fdivl
in
jnp
inc
loop
mov
fmuls
out
and
xor
mov
mov
cli
lahf
mov
dec
popf
mov
rcll
mov
cmp
fiaddl
addr16
mov
mov
loop
les
xchg
rcr
jge
mov
push
push
iret
frstor
push
jl,pn
inc
loop
popa
cli
leave
cmp
leave
cmp
into
fdivrs
outsl
cmpsb
mov
dec
xchg
cmpsb
lret
jle
lock
mov
pusha
loop
fldt
push
int
cmp
sar
xlat
imul
das
pusha
sub
xchg
movsl
mov
mov
fwait
mov
cltd
movsb
movsl
mov
inc
push
mov
popa
cld
gs
mov
test
push
insl
outsb
or
pop
lds
jo
push
test
mov
dec
mov
or
stos
enter
cmp
jg
mov
stos
mov
sbb
or
mov
pushf
sahf
and
mov
mov
icebp
mov
insb
addr16
cmp
into
push
icebp
dec
lcall
mov
fucomi
or
jne
dec
js
sti
mov
mov
mov
call
fbstp
dec
stos
std
lret
inc
shlb
repz
bound
dec
ljmp
fbstp
pop
rorb
repz
imul
jbe
enter
inc
out
cmpsb
loope
mov
ds
and
mov
imul
mov
jl
bound
pop
lret
shl
aaa
mov
mov
mov
ss
les
adc
or
cwtl
cmc
jp
xor
jb
sbb
in
roll
cltd
into
push
xchg
std
out
jecxz
sbb
inc
mov
idiv
insl
stos
insl
mov
mov
sub
inc
inc
and
in
fdiv
loope
sbb
pushf
jmp
fisttpl
jno
push
mov
adc
lods
aam
adc
mov
popf
mov
stos
mov
mov
mov
pop
push
rclb
inc
mov
insb
pop
mov
xchg
pop
pop
push
mov
sub
pop
aad
jecxz
pushf
or
mov
inc
dec
rcrl
push
or
adc
clc
lcall
daa
or
test
data16
jl
adc
sarb
mov
fiadds
ret
sbb
dec
jne
stos
fadds
pop
jns
jae
cli
mov
push
mov
sbb
push
ret
into
mov
add
adc
jmp
jg
push
push
cwtl
pop
or
and
cmp
insl
xchg
mov
jl
push
test
loope
mov
cmp
gs
das
sbb
icebp
enter
sub
mov
mov
hlt
dec
decb
jmp
dec
movsl
fisubl
daa
cmpsb
iret
xchg
mov
stc
sti
iret
out
jns
fdivl
cwtl
rcrl
ss
xor
push
jb
xor
ljmp
pop
lods
outsb
inc
inc
jge
jl
mov
sbbl
iret
mov
xchg
add
mov
push
sarb
pop
out
nop
jbe
jbe
inc
xor
pushf
mov
fidivrl
in
loope
clc
adc
aas
aad
jae
incl
dec
and
sti
jecxz
js
les
or
inc
xchg
adc
mov
pop
dec
mov
mov
mov
xchg
sti
or
aam
jmp
mov
push
cmpl
jb
jmp
in
jne
xchg
std
mov
mov
cs
cli
and
xor
jns
xor
enter
cmp
je
mov
incl
mov
add
mov
lahf
adc
or
out
and
and
xlat
sbb
fs
push
test
cmp
rolb
dec
pop
fsub
aaa
adc
in
sub
aaa
scas
pusha
iret
aaa
mov
imul
push
iret
mov
push
xchg
movsb
mov
sbb
sub
jo
jl
test
inc
dec
mov
andb
pop
dec
bound
fisttpl
pusha
mov
mov
mov
sbb
adc
call
push
sub
push
loope
rcrl
scas
lret
mov
inc
hlt
push
hlt
loope
cmp
aad
pop
xchg
call
ljmp
inc
adcb
push
cmpsl
arpl
mov
iret
mov
gs
pop
mov
arpl
fstps
xor
lret
ja
divl
xor
lret
sbb
pop
mov
or
add
xchg
add
push
dec
mov
push
popf
mov
in
mov
fsts
adc
out
mov
dec
pop
pop
xchg
xor
dec
add
mov
aaa
stc
das
movsl
mov
jno
and
cltd
rcl
arpl
and
clc
mov
pop
cwtl
xchg
mov
or
push
popa
xchg
je
mov
or
dec
mov
clc
lds
ljmp
lock
mov
sub
stos
testl
dec
pushf
xchg
js
jl
xor
sbb
xor
iret
fs
inc
shlb
mov
mov
or
ss
cmpsl
jae
int
gs
clc
xor
mov
dec
pushf
pop
lock
mov
dec
adc
lret
loope
test
jae
and
clc
push
push
add
push
imul
ljmp
bound
xchg
ss
pop
jmp
movsb
add
shll
aaa
mov
ds
pop
clc
or
mov
call
out
sub
dec
pop
push
xchg
dec
outsb
out
mov
push
and
cmp
add
lret
mov
and
test
outsl
or
inc
ret
bswap
jb
sub
sarb
lcall
fwait
test
test
or
mov
xchg
sbb
lret
shrb
outsl
push
adc
mov
mov
clc
push
sbb
adc
fwait
jg
aas
insb
cmp
add
test
xor
lret
out
pop
jae
mov
push
iret
push
lock
add
pop
jecxz
xchg
mov
inc
lahf
in
cmp
das
push
add
insl
jge
insl
cmp
pop
data16
enter
pusha
imul
xchg
mov
fs
adc
sbb
push
in
jecxz
add
jnp
sub
enter
cs
mov
fnstcw
xchg
in
jns
add
add
or
test
stos
popa
xor
ret
dec
insb
dec
out
fdivp
lds
in
jns
imul
xchg
fwait
ret
mov
cmp
mov
cmp
hlt
fcoms
mov
sub
adc
adc
les
loope
les
mov
sbb
cmp
lcall
mov
pop
pusha
jns
icebp
out
stos
jecxz
adc
test
in
push
arpl
fdivs
xchg
mov
cmc
stos
or
mov
ficoml
pop
lods
mov
ljmp
dec
cs
pop
cld
sub
addr16
aaa
ds
inc
jbe
fcomps
std
gs
push
inc
jp
in
rorb
mov
loope
lods
mov
leave
arpl
out
imul
loope
mov
xchg
and
nop
leave
jge
or
movsl
xor
repz
pop
jbe,pt
add
push
loope
lahf
scas
shll
in
sarb
xor
fsubrs
or
in
cmpsl
inc
mov
and
mov
push
or
pusha
or
cli
cmpl
mov
mov
call
jbe
inc
repz
jnp
hlt
dec
xchg
mov
scas
mov
cs
jmp
cmp
jge
pop
out
add
shlb
jmp
test
mov
cmpsl
scas
mov
jecxz
adc
mov
push
inc
push
mov
jl
ret
das
fcomip
rorl
fxch
inc
fwait
and
clc
in
and
hlt
sbb
cmpsl
push
sub
gs
cli
stos
xchg
test
aas
leave
imul
aaa
xchg
shll
mov
and
mov
mov
and
add
fldln2
lret
xor
dec
mov
rcrb
mov
aad
cmc
add
movb
leave
rcll
adc
cmp
jne
sbb
and
clc
leave
insb
sbb
sub
pop
addr16
ss
jecxz
mov
xlat
inc
ret
adc
dec
aam
outsl
xor
aaa
pusha
dec
and
out
add
push
inc
cmp
or
or
cmp
loop
adc
push
cli
cmp
insb
aaa
inc
dec
hlt
lret
cmp
paddw
mov
xchg
and
mov
insb
and
sub
adc
gs
mov
cmpsb
inc
xchg
nop
adcb
mov
arpl
fstpl
xchg
xchg
jne
fsubrl
test
push
lods
mov
pop
xchg
xchg
jmp
pop
stos
imul
cmp
ret
rol
add
push
loope
in
fsubrp
ljmp
push
push
and
push
dec
addr16
jl
mov
sub
mov
pop
add
or
jne
aas
les
mov
jno
sub
dec
imul
mov
xchg
mov
add
push
jge
add
sub
addr16
int3
std
cwtl
add
outsl
push
xchg
rep
ljmp
or
dec
addl
sub
in
fwait
arpl
xor
add
test
mov
mov
dec
adc
dec
jo
pop
arpl
add
adc
lds
push
mov
aaa
or
mov
jp
mov
lods
cmpsb
lods
cmpsl
or
pop
faddp
jge
aam
movsl
adc
orl
leave
sbb
daa
push
into
fstpt
lds
fcoms
mov
sub
in
out
pop
cmp
shll
xchg
cmc
pcmpeqd
popa
add
fwait
mov
test
fwait
sbb
inc
test
jae
jno
addr16
mov
xchg
ljmp
cs
in
sbb
push
iret
cltd
sub
lret
clc
mov
out
fadds
fwait
mov
loope
fistps
daa
fistpll
lahf
or
xchg
dec
sub
scas
test
push
jp
mov
and
push
xor
xor
jmp
mov
andb
adc
push
xchg
popf
movsl
add
jp
sbb
add
xchg
into
mov
ja
inc
out
cltd
aam
ds
out
mov
sbb
pop
xor
cmpsb
mov
jge
xchg
imul
das
insl
adc
adc
loope
adc
popa
hlt
je
movsl
out
mov
gs
jae
mov
adc
mov
jp
jnp
mov
xchg
lock
in
imul
jne,pn
cmp
repnz
fimuls
lret
outsl
mov
mov
sbbb
test
cmc
out
ret
sub
insl
mov
pop
lret
push
cmp
lret
dec
mov
popa
cmp
insl
fcoml
int3
xor
jbe
push
aaa
mov
pause
divl
dec
inc
adc
mov
or
lods
pop
cld
inc
fwait
mov
xchg
test
in
pop
add
dec
jnp
xchg
out
inc
cmp
arpl
or
push
sbb
loopne
xchg
in
fsubrs
mov
add
mov
fidivl
in
and
xchg
aas
sbb
in
adc
pushf
nop
and
and
ret
addl
mov
popf
adc
sub
out
in
pop
test
fs
lcall
dec
ret
jg
stos
push
int3
sbb
sbb
dec
mov
stos
mov
mov
aaa
insb
or
subb
das
aaa
fsubl
cmpl
pop
sub
xchg
aaa
out
lahf
out
cli
fs
cmpsl
dec
xor
pop
pusha
fs
loope
and
xchg
or
aad
lahf
push
test
mov
inc
push
mov
inc
cmp
and
rolb
and
or
mov
mov
sti
xchg
xor
sahf
sbb
mov
nop
sub
mov
loope
sahf
lret
jnp
lock
sub
mov
jnp
adc
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
add
addb
cli
cld
jae
cmp
mov
test
xor
add
iret
xchg
cmp
dec
pop
addr16
jb
push
sub
mov
lret
daa
dec
jbe
or
mov
or
mov
and
test
andl
add
shlb
jns
cs
pop
push
test
insl
popa
cmp
stos
add
pop
pop
dec
roll
je
sub
cli
rclb
xor
pop
fsubrl
popa
adc
cs
mov
das
xchg
scas
ja
and
sahf
add
xor
push
jae
pop
pop
inc
loop
je
fnstsw
adc
pop
data16
sbb
push
inc
enter
pushf
out
inc
clc
xchg
sahf
pushf
sarb
sbb
scas
repnz
clc
sub
in
push
pop
ja
jle
ds
xchg
inc
xchg
ret
dec
inc
mov
rorb
nop
mov
push
lret
mov
pop
fmull
adc
jecxz
push
sub
pop
fmul
cmp
ret
std
pop
inc
sub
pop
xlat
dec
mov
sbb
sarb
pop
pop
mov
dec
andl
jmp
mov
pop
rcr
mov
xchg
mov
icebp
adc
jno
subb
cwtl
ficomps
test
test
adc
inc
scas
das
inc
inc
mov
push
int3
xchg
adc
cmp
mov
push
mov
or
mov
sub
insl
push
imul
rcl
dec
jno
imul
and
xchg
mov
pop
insl
pop
mov
hlt
add
ja
adc
cwtl
ret
pop
dec
xor
cmp
in
sbb
imull
adc
sbb
movsl
dec
in
push
xor
adc
out
add
lds
in
or
mov
mov
psllq
gs
inc
jle
rclb
lahf
call
fisubl
dec
jp
loop
dec
xchg
jb
mov
and
jp
out
or
mov
xchg
filds
lret
sbb
push
mov
mov
aad
mov
shr
sub
adc
push
mov
aaa
sub
in
leave
nop
push
popf
sub
xor
out
push
test
test
jmp
xorl
add
decl
mov
lahf
out
push
rcll
hlt
inc
xchg
xor
inc
mov
fimull
bound
std
xor
aam
bnd
jle
rcrl
sbb
inc
in
in
test
les
add
pusha
loop
in
cmp
insb
das
ret
push
sbb
movsl
movsl
movsl
fisubrl
gs
mov
mov
idivb
mov
mov
mov
fsubl
scas
mov
xchg
mov
les
dec
mov
push
pusha
popf
cmp
outsl
cmpsl
push
sarl
pop
adc
int
add
ficoms
adc
loope
sbb
jge
inc
scas
ret
sub
arpl
xor
jb
xchg
ljmp
and
mov
jmp
imul
sbb
sbb
sbb
xchg
push
jge
push
cmp
lret
fbld
in
icebp
dec
ss
sub
js
std
in
add
sub
jae
bound
fsubs
mov
xor
jne
pop
negb
popa
stc
push
inc
sbb
mov
push
jae
pop
mov
dec
mov
xor
lret
xchg
jbe
pop
sbb
xchg
mov
cmp
dec
lock
pop
lcall
test
pop
ss
mov
push
scas
mov
or
push
hlt
enter
mov
stc
inc
and
sub
daa
push
sbb
xor
pop
into
fistpll
jmp
cmp
fiadds
jmp
movsb
jmp
test
and
add
iret
mov
std
pusha
loope
xchg
jecxz
sbb
cmpsb
out
out
jns
mov
mov
out
out
mov
mov
adc
dec
aaa
out
jmp
fwait
sti
lret
push
or
mov
popa
xchg
test
xchg
cmp
mov
push
addr16
or
sub
mov
repz
shl
loope
sub
xchg
mov
mov
cwtl
jo
gs
xor
outsl
mov
int
mov
mov
add
clc
imul
cmp
jg
mov
sub
and
dec
mov
xor
sahf
fadds
inc
sub
xor
lods
add
inc
sbb
cltd
pop
cmp
aam
out
stos
push
push
push
loop
js
addr16
leave
subb
add
sbb
pushf
mov
js
sub
mov
out
jmp
movsb
push
shll
mov
js
in
jnp
jne
sub
inc
mov
sbb
mov
lea
int
cmc
je
pop
jge
xor
mov
jae
pop
mov
gs
lea
dec
and
add
imul
and
mov
loope
in
fiadds
lods
mov
adc
in
outsl
jae
push
dec
add
sbbl
dec
fnstcw
or
ljmp
hlt
movsl
leave
jnp
ret
cmpsb
cmp
fisubrs
subb
xor
cli
xor
cmovbe
jbe
jae
movsb
sbb
imul
mov
movsb
jae
dec
test
stos
inc
cmpsb
icebp
add
lods
pusha
adc
jle
ficoms
nop
dec
aad
push
pop
jg
xchg
add
mulb
inc
test
repz
cmp
xor
xchg
pop
ja,pt
xlat
sub
cmpsb
bt
mov
leave
decb
sbb
lds
cmpsl
sarb
bound
push
sub
xorl
gs
mov
and
rorb
call
cmp
in
add
or
and
fdivrs
add
jmp
divl
repz
xor
cmc
lea
xchg
pop
add
arpl
les
cmp
jecxz
clc
lahf
es
testb
xchg
pop
repz
adc
mov
sbb
mov
adc
popf
movsl
adc
mov
sarl
jg
pop
mov
std
lds
dec
push
xchg
enter
jb
mov
fistl
xchg
clc
push
or
xchg
or
or
fdivp
mov
inc
and
adc
sub
adc
sbb
jp
or
inc
mov
je
aam
inc
sub
mov
out
sbb
push
outsl
pop
imul
jbe
push
cmp
or
cmpsb
mov
jns
lcall
add
cmc
in
and
or
inc
jle
push
aaa
insb
fmull
out
xchg
sti
rolb
xchg
mov
repnz
push
push
aas
pop
inc
and
push
jge
test
addl
add
and
lock
mov
mov
ds
popf
stos
cld
xchg
aaa
rcll
addb
shr
loopne
lods
jne
pop
shrb
add
xlat
lods
shrb
test
mov
or
adc
cmp
push
mov
shl
lret
sti
and
push
stc
mov
addb
call
stc
jo
out
pop
jle
dec
lret
lock
push
mov
sub
fistl
push
enter
ljmp
lea
jbe
test
int3
dec
add
adc
adc
test
loopne
or
cmc
add
test
ret
outsl
outsb
cmp
lret
jecxz
pop
inc
push
xchg
nop
pushf
or
sub
xchg
popa
into
adc
mov
dec
ret
into
adc
dec
pop
mov
sub
out
add
in
data16
fldl
cmp
pop
stos
jno
ljmp
in
jne
repz
pop
cmc
ljmp
mov
inc
sbb
arpl
hlt
adcb
or
jl
push
mov
sbb
nop
inc
fiaddl
sti
js
ljmp
ds
inc
pusha
dec
xchg
mov
sbb
mov
popf
mov
sub
scas
popl
jmp
mov
and
cmp
and
cmp
outsl
ret
cmp
repz
and
insb
repz
and
popa
or
dec
imull
cmp
push
lods
mov
das
push
insb
fwait
ror
sbb
mov
add
aad
in
fsave
mov
inc
movsb
int
clc
jp
dec
sbb
and
mov
push
loope
jb
and
imul
mov
enter
lret
sbb
dec
inc
sub
jbe
imul
mov
push
add
jne
mov
adc
lahf
inc
sahf
push
push
pop
jnp
popa
or
jnp
sub
jne
push
in
test
fildll
sub
pop
add
pop
jo
mov
inc
mov
sub
mov
movb
cmpsl
mov
rclb
add
lret
insb
fldenv
jbe
mov
sub
ret
xor
js
add
and
movsl
xorl
sub
pop
add
lea
xor
pop
lcall
sahf
pop
out
std
push
ja
xor
push
lret
push
jae
inc
fwait
sbb
adc
movsb
addb
dec
les
mov
pusha
outsl
or
xchg
pop
mov
sbb
ss
shll
adc
xlat
push
out
cld
xor
dec
out
arpl
pushl
insl
add
fwait
arpl
or
fiaddl
cmc
das
test
icebp
rcrl
lret
and
test
adc
enter
out
imul
push
sbb
movsl
jnp
cmp
pushf
aaa
bound
push
lods
cmpl
xchg
mov
and
rclb
xor
push
aad
lret
repnz
add
movsb
push
push
xor
rolb
cli
mov
adc
mov
jecxz
add
jg
jbe
bound
repz
test
clc
imul
dec
roll
sahf
iret
testb
sub
or
out
push
fwait
std
adc
into
jecxz
and
orl
jne
adc
mov
xchg
aaa
clc
push
mov
xchg
sbb
jle
dec
out
out
jg
ret
pop
mov
pop
sbb
lcall
gs
xor
int
jp
icebp
cmp
enter
or
sbb
sbb
mov
insl
cld
cld
mov
lcall
pusha
shll
out
inc
arpl
js
in
test
mov
sbb
ret
das
mov
sbb
rclb
mov
sub
push
aas
xbegin
aam
popa
aaa
gs
mov
or
inc
xchg
aam
faddl
jb
imul
adc
add
dec
push
test
mov
mov
leave
outsb
and
mov
or
or
or
mov
dec
mov
inc
mov
enter
lods
decl
add
sbb
adc
sbb
or
xchg
jmp
pop
test
movsb
fdivs
xchg
inc
mov
cmp
push
cli
lea
sti
outsl
inc
dec
inc
outsb
or
pop
loope
in
xor
dec
sbb
repnz
shrb
lret
sub
ja
mov
sub
xchg
call
push
in
adc
sbb
mov
sbb
clc
dec
or
dec
mov
aaa
inc
xchg
cmpsl
imul
in
sar
xchg
mov
fbld
push
mov
dec
or
out
sti
scas
ret
mov
jmp
out
sub
jp
mov
out
mov
and
popf
sahf
les
xor
push
mov
push
jne
mov
cltd
push
pop
in
cs
stos
sbb
int3
aad
fwait
mov
into
mov
adc
adc
out
push
push
rorb
jmp
sbb
lock
fs
pop
lret
adc
les
mov
jno
stos
jp
and
lea
loop
imul
gs
in
inc
or
movsl
cmp
and
push
cmp
xchg
and
andl
sub
xchg
jl
mov
push
ss
inc
jne
xor
mov
dec
std
adc
add
insl
pushf
push
sbb
pusha
dec
aas
cmp
inc
cmpsl
sub
sbb
jno
mov
mov
and
jns
loope
orb
lock
and
sahf
popa
xchg
cmp
bound
push
or
xchg
repnz
fimull
scas
pusha
out
mov
add
mov
fstps
inc
sbb
pop
loop
xchg
xor
xchg
dec
mov
pop
movsb
or
stos
push
aaa
out
jecxz
dec
adc
or
push
lods
xor
and
cli
sbb
rcll
xchg
lea
std
push
push
lcall
mov
add
daa
in
addr16
dec
shrl
cld
insb
loop
stc
jmp
inc
fistpl
js
xor
adc
out
mov
jo
mov
js
and
fwait
inc
movsb
xor
pop
popa
adc
std
cmc
pop
mov
fmuls
jp
jmp
loopne
push
push
dec
mov
fldcw
pop
imul
pop
adcb
subb
or
jge
cmpsl
lret
inc
pop
imul
ror
or
sub
les
xchg
shl
jge,pt
push
test
mov
cmp
popa
sbb
dec
stc
inc
inc
in
mov
int3
fucomip
lea
adc
mov
sub
ud0
push
xlat
push
push
mov
test
test
xor
mov
cwtl
or
das
leave
sbbb
aas
ret
cmp
pushf
xchg
stos
adc
dec
xlat
repnz
xor
dec
pop
int
sub
mov
repnz
pop
clc
aaa
push
popf
loop
cmc
test
sub
jns
jae
push
push
cli
jle
xchg
cmpsl
push
jl
jmp
inc
jbe
fstpt
lea
push
jle
out
inc
lods
sbb
pop
push
into
stc
mov
les
in
jne
sbb
sub
loope
leave
cmpsb
repz
jnp
comiss
out
sbbl
xor
xor
es
jns
lahf
pop
ljmp
fucom
test
cwtl
popa
add
sar
ljmp
mov
dec
lods
push
add
ficompl
mov
ret
daa
outsl
daa
push
lock
dec
call
xor
dec
jb
into
pop
pop
sub
dec
hlt
sub
ret
leave
adc
mov
jns
xchg
mov
test
push
pop
jge
fists
dec
int3
idivb
in
mov
jbe
cmc
outsb
mov
jns
dec
aas
jge
mov
pop
inc
cmp
jge
xchg
or
xchg
xchg
test
mov
movsl
addr16
adc
test
in
and
es
cmc
cmp
xchg
xchg
stc
clc
add
push
xbegin
sub
mov
ljmp
out
fs
push
add
sbb
aaa
pushl
jno
mov
and
jne
inc
in
andb
mov
outsl
cli
js
call
xor
xor
add
mov
in
jae
pop
push
xlat
dec
add
push
xor
cmpl
mov
jl
dec
sbb
cmp
sbb
or
pop
sbb
imul
inc
xor
mov
aam
out
std
and
and
dec
xchg
sub
mov
add
sub
push
mov
data16
mov
mov
fmuls
test
push
int3
dec
lahf
mov
add
mov
arpl
popf
mov
push
jecxz
add
shlb
push
ljmp
jne
cmp
fld
dec
pop
addr16
pop
adc
bound
mov
cmpb
or
test
add
xchg
fstp
test
adc
jne
jnp
mov
mov
mov
mov
inc
frstpm(287
jns
mov
dec
jnp
mull
imul
icebp
and
lret
imul
clc
fimuls
out
lock
andl
dec
dec
add
jae
test
idiv
or
mov
jmp
pop
fdivrp
into
adc
mov
mov
leave
pop
int
fistpl
movsl
dec
scas
sbbb
addr16
scas
hlt
sbb
mov
fnsave
xor
outsb
nop
or
dec
push
fiaddl
jnp
aaa
xor
loopne
pusha
sbb
add
cmp
loopne
cmp
ss
mov
outsl
cmp
mov
pusha
adc
xor
orb
push
cmp
les
sti
cltd
mov
lea
push
mov
sbb
xlat
inc
insb
pushf
in
push
jb
add
jnp
icebp
mov
cli
add
mov
stos
sub
jb
jne
mov
pop
and
movsl
mov
jmp
cmp
pop
sbb
ljmp
sbb
rcrb
mov
mov
push
cwtl
pop
xchg
jb
cmpsb
mov
pop
push
mov
cmp
adc
insb
leave
xor
mov
iret
mov
push
icebp
sarl
or
sub
popf
jmp
jnp
or
mov
mov
divb
dec
inc
inc
and
and
lods
xchg
vpavgb
in
cmpb
lock
shl
movsb
jp
test
mov
dec
mov
and
je
and
cwtl
stc
cmp
and
mov
fnstenv
pusha
jmp
movsl
inc
daa
xchg
pop
ret
sbb
insl
sbb
pop
loopne
inc
mov
lods
mov
fildl
push
in
dec
cmpsl
xchg
dec
or
jmp
xor
imul
mov
jae
or
xchg
in
les
or
dec
dec
adc
repnz
add
or
sbb
jne
cli
loop
jae
stos
les
and
dec
pop
jp
mov
mov
mov
xor
pop
cltd
enter
loopne
imul
stc
iret
lock
mov
lret
and
imull
pop
sub
cmp
ljmp
xchg
shlb
rcrl
xlat
rcr
sub
les
jne
dec
jae
icebp
call
pop
repnz
sbb
sbb
fs
call
adc
pop
fcomi
imul
add
and
dec
in
cltd
sub
push
ffree
inc
cmc
cmp
addb
push
mov
ljmp
test
adc
mov
xorb
incb
cli
test
adc
pop
enter
sarl
gs
mov
jmp
movb
iret
ja
es
ja
int
mov
mov
js
cwtl
dec
rclb
out
mov
divl
xor
add
or
xor
int
mov
push
xlat
mov
adcl
inc
enter
cmpsb
push
aaa
mov
int
dec
pop
and
add
in
ljmp
lods
scas
push
pop
adc
pop
ljmp
cmp
mov
jno
pop
mov
dec
push
push
adc
cltd
ret
push
pop
stc
sub
cmp
notl
or
xor
repnz
add
daa
mov
ret
popf
mov
adc
data16
cwtl
out
push
arpl
inc
jl
cmp
inc
dec
call
rolb
mov
sbb
fidivrl
es
sbb
cltd
test
add
pop
repnz
test
sbb
dec
dec
insb
pusha
outsb
cld
sbb
pop
faddp
je
ret
xchg
out
and
add
sahf
add
aas
insl
inc
test
sbb
push
out
pushf
in
add
sub
stos
cld
rcrl
jno
sub
shl
data16
enter
sbb
pop
cmp
sub
add
hlt
jne
jle
stos
sub
and
inc
or
cmp
mov
sub
inc
jge
fwait
popf
xchg
cmp
outsl
loope
inc
aas
cmc
outsb
mov
and
adc
es
jle
lahf
adc
daa
cmp
popf
push
out
hlt
fs
push
pop
push
inc
repz
lcall
cmp
cs
ds
mov
cmpsl
ret
lret
rcll
aas
sbb
cmpb
fdivrl
or
nop
pop
rclb
push
cmp
cmpsb
scas
jge
mov
push
pop
pop
cltd
mov
lret
pop
sbb
mov
mov
sub
push
loope
stc
out
adc
add
push
cmc
fnstcw
sub
mov
or
daa
out
mov
cmp
icebp
bound
orb
pushf
mov
je
fsubp
adc
mov
fcoms
jecxz
bound
and
dec
xlat
inc
daa
xchg
inc
int3
sub
jg
pop
sub
sbb
fstpl
addr16
shlb
sbbl
hlt
je
addr16
lds
xlat
testb
aam
out
inc
mov
mov
popf
in
loop
movsl
xchg
addb
adc
xchg
arpl
repnz
out
xchg
inc
lods
mov
adc
daa
push
adc
addr16
test
add
cli
dec
mov
sub
mov
popa
fsubrl
lock
push
clc
dec
loope
sbb
dec
pop
adc
jbe,pt
add
and
loopne
imul
cmpsl
or
jns
shrb
sub
mov
dec
pop
mov
mov
lds
popa
jns
lret
das
scas
cld
test
mov
inc
push
lret
loopne
rol
jnp
xor
push
mov
movups
sarb
xchg
xchg
ror
out
leave
mov
fwait
push
or
mov
nop
cmpsb
cmpsb
lods
push
mov
mov
xor
mov
cmpsb
outsb
xchg
cmp
rorl
lret
sbb
inc
stos
rcrb
dec
mov
popf
cmpsb
insl
in
idivl
mov
nop
ljmp
mov
mov
dec
mov
add
xchg
repz
jmp
lcall
sub
ror
stos
into
icebp
mov
xchg
lods
js
sahf
push
lock
xchg
ret
jno
iret
push
add
mov
jmp
adc
sbbl
andb
push
loopne
js
pop
adc
lret
push
push
addr16
sub
adc
dec
lret
lret
push
xchg
and
sahf
ja
pop
adc
pop
or
fnstcw
nop
mov
mov
in
leave
adc
add
repz
ret
or
mov
popa
xchg
popa
cltd
movsb
xor
sub
xor
push
mov
sahf
ret
mov
xor
adc
mov
imul
scas
xor
pop
xchg
shrb
lea
stos
mov
cmc
scas
inc
push
jno
jns
sti
push
imul
xor
push
xchg
stos
jae
mov
xor
jnp
in
incl
push
rolb
push
and
pusha
jg
or
sbb
push
imul
daa
inc
stos
faddl
xlat
push
nop
or
nop
dec
adc
lock
ret
test
test
out
push
aam
mov
movsl
aad
mov
xor
mov
pop
sbb
stos
xchg
imul
loopne
fcompl
jne
data16
in
mov
jns
xchg
out
cmp
fxch
cmp
imul
pop
cs
push
cmp
icebp
and
mov
loope
hlt
sbb
inc
ret
mov
pushf
icebp
int3
mov
inc
xchg
push
pop
shr
mov
dec
out
xchg
xchg
aad
mov
jg
xor
mov
les
loopne
push
sarb
outsl
dec
pop
fwait
addr16
ret
popf
push
inc
lods
dec
sbb
rorb
sub
subb
adc
popa
negb
notl
test
insb
cmp
repz
jae
es
sbb
or
pop
lea
jecxz
mov
test
les
subps
mov
jle
repz
sub
sub
add
pop
push
mul
popf
int3
aad
push
jbe
mov
dec
inc
addb
ret
ret
jo
outsb
jae
cmp
idivl
mov
fcomip
imul
lea
xor
sahf
sbb
cmc
xchg
rorb
orb
enter
lea
sub
adc
dec
and
mov
scas
idivb
data16
in
divb
lods
mov
inc
int
dec
dec
jmp
or
fcmovu
inc
or
std
insl
lcall
adc
call
sbb
stos
ja
push
xor
and
and
push
jmp
lret
push
dec
insb
and
imul
mov
xchg
shrb
pop
inc
mov
andl
mov
cmp
int3
shll
push
sbb
cli
sub
mulb
ret
dec
rorl
mov
jb
mov
mov
sub
outsl
dec
je
clc
and
insl
mov
arpl
imul
sahf
xchg
jnp
and
pop
loopne
push
and
mov
loopne
call
scas
push
mov
jmp
jb
test
fisubl
daa
pop
pop
lahf
inc
cwtl
dec
sbb
and
fsts
inc
scas
push
clc
xchg
inc
cmp
xor
lds
push
dec
fistps
out
sbbl
rcrb
jle
shll
pop
cmpsb
cli
stos
push
andb
xchg
test
fidivrl
cs
frstor
inc
mov
inc
inc
push
fldl
rorb
out
or
xor
mov
es
pop
lahf
mov
popf
les
sub
fsts
sub
repnz
jbe
inc
dec
mov
push
lock
lcall
push
pop
inc
nop
xchg
in
xchg
dec
out
pop
and
dec
push
sub
or
add
arpl
xor
jmp
push
fsubs
pop
add
pushf
rorb
lcall
cmp
mov
inc
pop
push
aam
or
mov
lods
xchg
cmp
sub
xchg
into
popf
or
popf
dec
addb
clc
mov
out
xchg
out
es
push
sbb
adc
sti
in
insl
gs
ficomps
es
dec
shll
push
pop
inc
mov
lahf
inc
in
popa
sbb
jle
fs
sub
int3
jp
ret
aaa
das
jge
cmp
gs
aas
and
xchg
arpl
adc
dec
in
out
dec
push
outsb
fdivrl
pop
sbb
jecxz
or
dec
inc
std
bnd
pop
aad
scas
aam
mov
ljmp
scas
fwait
lea
loope
insb
call
ret
std
sbb
inc
xor
mov
cmp
dec
lret
cmpl
adc
fwait
cli
mov
xchg
mov
and
clc
push
lods
xchg
mov
jb
pop
mov
jno
in
jne
cmp
cmp
outsl
repz
test
sbb
cmc
xor
cltd
and
imul
enter
test
lcall
nop
mov
xor
inc
cmpsb
jno
xchg
push
pop
pop
cmc
dec
add
es
ret
and
mov
push
aas
or
leave
iret
into
cltd
aam
outsl
inc
inc
ret
cmp
out
sti
arpl
hlt
cli
push
cmpsl
add
lds
test
pop
push
cs
xor
xlat
or
push
filds
xor
stc
ror
xlat
pop
loop
fnop
repnz
inc
jl
movsl
mov
cmpsb
and
sbb
mov
jae
sbb
sub
aas
jbe
adc
mov
out
insl
mov
fidivrl
leave
das
fdivrp
mov
mov
sbb
popf
icebp
rcll
call
mov
mov
insb
insl
xor
fisubrl
inc
insl
aam
popf
add
sbb
sbb
xchg
jecxz
cltd
stos
push
and
add
mov
movsl
lret
jbe
xor
mov
call
add
out
pop
sub
lods
pop
imul
fldl
fists
mov
int
lahf
cwtl
int
cmp
pop
mov
stc
int
je
xchg
cmp
cltd
mov
xor
ljmp
lret
jle
xchg
and
dec
sti
mov
and
in
or
mov
inc
and
insb
jg
js
mov
add
sub
and
sub
aam
clc
das
lds
inc
ja
xchg
std
out
call
xor
push
push
xor
in
insb
sbb
cmp
scas
lods
jbe
adc
outsl
fcoms
xor
cmpb
dec
addb
inc
dec
xchg
xchg
incb
adc
mov
int
call
or
push
mov
rolb
aam
jno
mov
cltd
mov
or
jg
or
push
sub
adc
enter
cmc
iretw
ds
xor
cmc
cmpsb
mov
pop
stos
push
das
repnz
jge
rorb
shrl
jg
out
pop
mov
mov
push
ljmp
xlat
inc
or
push
adc
xor
pop
xchg
test
cmp
in
rclb
rcrb
sbb
rcrb
jge
push
cmp
sub
addr16
or
sbb
call
lcall
aad
adc
shlb
outsl
cli
cmp
lods
ret
scas
cmpl
push
repz
js
mov
loope
data16
cld
popa
insb
jae
dec
dec
ljmp
mov
test
xor
rep
pusha
cmpb
sub
loopne
cli
jle
or
movsl
sbb
sbbl
and
xor
mov
test
jge
sahf
sahf
or
repz
inc
mov
rorl
repnz
push
das
mov
adc
cmp
xor
inc
sarl
xchg
cmpsb
dec
adc
adc
scas
pop
lret
pushf
and
js
cwtl
iret
sub
enter
add
cmp
dec
aas
xchg
mov
lea
je
jns
cmp
fnstcw
cmp
sbb
popf
lods
xchg
shrl
mov
mov
xchg
es
and
and
jecxz
loopne
mov
mov
add
aaa
sub
popa
ja
inc
mov
aad
aam
push
inc
es
mov
inc
sbb
clc
cmpsb
cltd
mov
shrb
out
push
cmc
movsb
imul
mov
adc
jg
sub
and
push
cmp
idiv
lods
inc
inc
call
out
fbstp
jp
add
adcl
pusha
bound
push
insl
xor
sub
lods
push
pop
fwait
ljmp
inc
call
popa
mov
test
sub
inc
inc
andb
mov
ja
inc
cmc
andl
loopne
call
sbb
dec
push
sbb
testl
orl
in
sub
mov
popf
cmp
mov
push
ja
idivb
mov
sbbl
or
lock
test
lret
dec
out
xchg
aas
je
in
cmp
sbb
xor
cltd
cmpsl
icebp
pushw
idivl
mov
mov
pop
mov
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
add
mov
std
addb
ret
test
add
jae
mov
in
movsb
fcomps
mov
and
ja
pop
arpl
ljmp
mov
aam
stc
mov
push
cmp
adc
call
dec
pop
add
xor
movsl
in
push
push
aam
mov
pop
frstor
lods
adc
pop
repz
mov
cli
mov
jmp
icebp
pop
mov
or
repz
add
mov
mov
addr16
sub
iret
pop
fiaddl
push
push
push
sbb
pop
mov
push
jns
or
dec
mov
sub
lret
test
sub
jg
icebp
outsl
mov
add
pop
jl
out
movsb
xchg
cmp
sbb
mov
jae
dec
into
lret
xor
mov
cmpsb
mov
mov
out
andl
mov
jecxz
pop
mov
push
xor
mov
fucomi
pusha
jg
repz
cmp
mov
in
jnp
adc
fs
or
adc
push
lret
xchg
adc
pop
ss
movsl
xchg
and
ret
pushf
add
test
call
addr16
mov
push
lret
add
push
test
inc
sbb
xchg
mov
cli
lods
inc
jg
lods
stos
out
dec
jp
mov
sbb
dec
lahf
mov
aaa
jno
jmp
sub
jae
int
xchg
hlt
dec
imul
jmp
test
ss
test
fsts
inc
mov
cltd
jp
ja
out
scas
lods
leave
nop
shlb
and
cs
repz
std
repz
inc
mov
insb
push
movsb
bound
add
loop
xor
push
insb
mov
in
sub
mov
or
add
cmp
inc
add
lret
aam
inc
push
fistpl
aad
adc
ret
lret
inc
sub
scas
push
fs
aas
or
ja
push
jae
xchg
push
out
xchg
mov
mov
stos
out
jp
jmp
xor
jnp
lock
in
mov
pop
xor
dec
jo
lcall
fidivl
leave
addb
andl
adc
mov
push
jns
dec
mov
mov
loopne
test
aas
ret
test
cli
mov
mov
mov
mov
xchg
cwtl
lea
mov
pop
push
and
adc
dec
enter
int3
add
or
out
testb
mov
mov
jmp
out
pop
icebp
jnp
sbb
cmp
stos
flds
inc
pop
xlat
enter
add
push
sub
lods
int3
imul
sti
pop
bound
xlat
sahf
int
jecxz
loopne
outsl
xchg
xchg
sub
pop
fimuls
xor
mov
ficoms
orl
push
inc
in
cmp
stc
sub
lock
jno
jl
popf
addr16
jae
cmc
pusha
and
cs
das
rol
jae
jp
inc
ret
adc
ja
dec
add
mov
sbb
int
mov
and
aad
mov
stc
push
repz
pop
adc
mov
cwtl
adc
int3
mov
jb
mov
xchg
pop
sub
ss
mov
xchg
xor
xchg
xchg
adc
pop
mov
pop
movsb
add
fadd
ja
pop
bound
xchg
clc
sub
iret
xlat
lods
push
repnz
icebp
movsl
xchg
repz
nop
mov
out
out
dec
jno
cmpsb
jge
test
sub
in
loop
cwtl
mov
or
inc
push
imul
push
jb
adc
pushf
push
xchg
mov
arpl
insb
cmpsl
dec
push
rcl
adc
sbb
les
sbbb
scas
into
jns
mov
inc
mov
cmpb
clc
cmp
or
adc
pop
ret
in
jl
adc
xchg
push
add
xchg
jle
mov
sub
adc
andb
gs
lcall
je
fisubrs
iret
inc
push
scas
fsubs
inc
pop
push
mov
cld
adc
mov
je
ret
loope
outsb
shr
mov
aas
ret
std
lahf
mov
jg
add
jbe
les
inc
test
call
pop
incl
mov
out
sub
dec
jl
or
es
xchg
daa
out
in
push
insl
cmp
nop
aad
fsubs
pushf
xor
dec
jmp
add
sbb
int3
lret
dec
mov
pop
sbb
xor
in
stc
sbb
jg
clc
sub
mov
rcrb
sub
mov
stos
vpperm
mov
sbbl
mov
and
xchg
or
mov
arpl
stc
cmp
fdivrl
xchg
lea
in
popl
push
roll
mov
mov
dec
in
and
test
xor
mov
jp
cld
sbb
xchg
push
insl
adc
mov
mov
subb
lret
out
add
add
push
sarb
mov
cmp
mov
negl
and
data16
incl
mov
ds
out
cmp
aad
xchg
pusha
add
hlt
adc
fstpt
outsb
lea
adc
out
out
fpatan
add
divl
inc
pop
aam
repnz
xor
adc
adcl
bnd
or
icebp
inc
out
dec
pop
lret
test
xchg
fbstp
mov
loope
rcll
add
mov
xchg
push
outsl
out
pop
not
pop
stc
sti
mov
ja
mov
call
pop
sub
inc
push
inc
in
push
mov
pusha
push
mov
movsl
movsb
sbb
push
mov
ret
jmp
inc
iret
pop
jns
mov
mov
add
jg
iret
rcll
mov
mov
add
xor
sbb
mov
pop
aad
fstl
leave
daa
int3
shlb
lret
mov
adc
shlb
xchg
call
dec
out
roll
aad
push
add
ffreep
and
negl
adc
das
xor
fimull
cwtl
xchg
and
mov
pop
popf
jmp
push
and
dec
adc
or
sub
cmpsb
pop
mov
cmpsb
mov
jo
pop
pop
jb
rcrb
mov
mov
pop
cltd
xchg
adc
mov
push
hlt
sub
jnp
js
or
fucomp
mov
ficomps
add
lret
jg
leave
lcall
cmpb
mov
push
cltd
mov
addl
es
outsb
xchg
push
mov
mov
xor
jg
andl
xor
cmp
call
shl
add
push
subb
aam
cwtl
push
push
or
jb
xchg
adc
aad
lea
decl
inc
dec
in
dec
lahf
cmp
repz
fwait
mov
inc
je
and
mov
call
movsb
push
xchg
sbb
loopne
repnz
push
das
xchg
add
sbb
rol
icebp
adc
fsubr
adc
scas
int
pop
cwtl
insb
bound
jmp
sub
add
or
push
lret
stc
iret
call
xchg
es
movsl
mov
nop
xchg
pop
test
cltd
loope
sub
mov
mov
cltd
and
jne
sar
call
les
pop
ljmp
inc
in
int
test
mov
cltd
and
jae
cmp
inc
cmp
fwait
or
adc
adc
in
dec
test
aaa
ds
negl
mov
push
jmp
jecxz
js
stc
mov
pop
int3
mov
cwtl
in
es
into
pop
xlat
mov
xchg
push
fadd
add
sbb
pop
add
dec
jnp
push
mov
ret
jge
mov
or
or
je
add
ret
mov
sbb
movsl
jo
push
fwait
jb
jo
fdivrs
or
cltd
nop
mov
or
mov
das
div
sub
mov
and
enter
push
mov
push
loop
sub
mov
insl
fldcw
mov
jmp
sahf
dec
mov
add
cltd
movsl
popa
jle
mov
or
sbb
mov
pop
call
jbe
pop
sahf
jg
aam
pop
cmp
retw
adc
cmpsl
xchg
sti
add
stos
in
dec
test
push
in
mov
cltd
ljmp
mov
mov
incb
mov
loop
mov
fimull
je
and
jns
inc
dec
test
push
loopne
popa
addb
and
ja
sarb
shl
xchg
inc
add
xchg
repnz
xor
stos
mov
adcl
add
mov
ja
and
mov
ljmp
or
fwait
xchg
push
scas
pop
xchg
out
add
scas
add
rolb
arpl
mov
in
mov
aas
cmpsl
loope
sub
ljmp
ret
inc
mov
xorb
out
xor
add
sub
cmpsb
out
cmc
jg
out
fcmovu
xor
xchg
fsubrs
mov
adc
inc
int
push
loop
mov
pop
sbb
aas
inc
imull
loop
mov
mov
push
in
pop
mov
sti
and
push
in
and
lret
shl
outsb
jb
sbbl
popl
cmp
and
retw
jmp
mov
push
repnz
mov
jmp
add
js
dec
fisubrl
push
pop
sbb
bound
lahf
stos
push
movb
hlt
mov
jecxz
test
imul
xchg
xor
mov
aas
outsb
daa
std
xor
pop
jb
jb
sbb
pop
jg
sub
jnp
shrl
and
xchg
lret
popa
mov
rcrl
mov
push
stc
xchg
inc
inc
fsts
xchg
repz
out
movsl
mov
sub
cmp
push
inc
stos
test
insb
push
jecxz
lcall
dec
mov
sub
mov
popa
int
arpl
pushf
cmpsl
xchg
jl
into
arpl
cmp
xchg
clc
ror
adc
inc
xor
dec
stos
pop
mov
lea
ror
shll
outsl
pop
lods
iret
stc
daa
add
scas
mov
jne
and
lahf
hlt
sub
js
and
gs
mov
push
mov
mov
or
pop
xchg
cli
cmp
mov
popf
mov
cmp
lret
dec
adc
pop
aas
popf
mov
lret
xchg
lock
cmp
hlt
imul
iret
stc
imul
ret
addr16
cmp
jno
out
sub
cmovo
mov
lea
cmp
xlat
jmp
jb
jnp
shr
cli
sti
jmp
jb
test
pop
out
cmpsl
outsb
mov
dec
or
add
rcrl
aaa
cld
imul
sub
push
ljmp
nop
mov
lret
jl
pop
mov
inc
dec
inc
test
mov
enter
pop
adc
test
sarb
ja
pop
aad
fcoml
push
loope
jno
pop
mov
int3
push
add
jle
idivl
xchg
test
and
jb
push
lds
mov
mov
in
insb
sbb
cmp
arpl
jecxz
and
push
or
push
mov
jb
cltd
mov
jg
les
mov
ror
stc
and
mov
divl
fldt
mov
jp
ss
nop
push
xchg
push
jns
das
repnz
mov
cmc
repz
nop
roll
bound
jge
out
cmp
or
mov
push
sbb
xor
mov
stos
and
jge
nop
lock
push
hlt
leave
cwtl
mov
bound
mov
jge
fs
mov
adc
push
cmp
sahf
inc
lods
lods
pop
sbb
in
sub
in
mov
mov
ret
test
mov
ret
xchg
ja
push
scas
repnz
adc
andl
push
out
in
inc
test
mov
xchg
add
lods
insl
or
or
in
fsts
ret
std
call
inc
fxch
cmp
xor
dec
loopne
lds
aam
inc
call
clc
out
mov
lock
sbb
mov
aad
hlt
jg
mov
int
cmc
cwtl
sbb
pop
pop
push
mov
xchg
mov
push
jne
aaa
movsb
cmpsb
cmc
push
into
cmp
test
scas
rclb
push
fstl
jnp
sbb
in
inc
mov
sub
push
xor
idiv
mov
aas
xchg
mov
adc
ljmp
mov
andnps
adc
popa
daa
pop
push
call
test
js
inc
movsl
std
xor
mov
jecxz
add
sarb
mov
or
fdivs
pop
inc
pop
dec
xor
lcall
divl
lret
inc
aas
popa
xchg
into
mov
push
push
icebp
ljmp
out
cmp
popa
es
test
shrl
jle
and
inc
test
xor
lds
scas
out
xchg
push
push
ja
stos
mov
mov
movsl
or
dec
pop
insl
mov
jle
fadds
add
stos
inc
push
outsb
hlt
cmp
adc
sbb
sub
jb
mov
adc
movsl
es
test
fiaddl
aam
mov
cmpsl
movb
test
jnp
je
jle
and
test
fxsave
cld
clc
data16
jg
cltd
sub
cmp
xor
dec
insl
ret
pop
int3
sub
pop
scas
or
test
or
jecxz
mov
aas
test
fisttps
addr16
data16
je
orl
nop
mov
pop
xchg
cmp
inc
push
push
xchg
add
jg
test
adc
push
mov
sub
xor
subb
cmp
jecxz
int
and
mov
xchg
aaa
pop
jge
fists
mov
nop
mov
test
mov
and
dec
outsb
add
pop
pop
negl
xchg
imul
and
cmp
add
popa
nop
hlt
sub
pop
xor
pop
fsubs
sbb
push
es
aam
imul
leave
jmp
int3
adc
dec
jmp
leave
xchg
jno
xor
mov
sub
sti
inc
mov
push
fistps
scas
push
cmp
jg
cmpsb
or
mov
cmc
push
xor
data16
outsb
rorl
dec
imul
pusha
adc
pop
lods
and
mov
add
mov
jno
gs
int
mov
and
xor
divl
out
dec
int3
stc
into
xor
mov
ljmp
pop
in
cmp
fidivrl
sbb
fcoml
add
xor
popf
jmp
mov
jecxz
fidivl
cld
lods
sub
jne
test
pop
fsubrs
xor
lea
cmp
insb
mov
mov
ja
loopne
push
add
inc
or
cmp
lock
aaa
aas
or
add
lds
bound
incb
jecxz
add
in
dec
mov
jae
shlb
jb
sbb
repnz
lret
mov
or
sub
test
rorl
out
das
ret
jbe
clc
sti
mov
and
cmp
sbb
xchg
mov
mov
cmp
scas
jo
pop
or
push
scas
mov
call
fs
mov
mov
aas
mov
push
stc
inc
fs
inc
mov
sbb
push
pushf
in
pop
cmc
out
jmp
lret
sbb
and
adc
lea
add
xor
add
movsl
jns
test
stos
mov
insb
mov
dec
xchg
stc
call
and
sbb
adcb
add
xor
adc
movsl
xor
stos
dec
int3
fs
js
out
cmp
aam
popf
insb
mov
jo
popf
xor
fbstp
ret
dec
ja
enter
faddl
scas
jno
cmpsb
leave
cmp
cmp
cmp
je
mov
mov
aaa
xor
push
cltd
inc
stos
pusha
mov
cmp
add
inc
xchg
test
mov
adc
inc
add
jno
xchg
sahf
xchg
or
aas
and
add
or
out
or
out
xor
adc
repnz
in
lods
inc
jmp
std
in
bound
jmp
sub
sbb
mov
mov
arpl
rorl
xchg
popa
xor
dec
push
sbb
pop
dec
cmp
addr16
int
push
dec
movsb
leave
jg
jle
gs
jo
loopne
sub
nop
push
insb
inc
add
cmp
aam
shl
int
add
in
mov
pop
inc
xchg
sbb
test
add
jmp
push
ret
sahf
xchg
clc
or
mov
insb
inc
xlat
into
nop
pop
imul
insb
mov
ficomps
mov
xor
je
stos
aaa
icebp
xchg
jmp
add
negb
dec
dec
mov
mov
loopne
ljmp
pop
jb,pn
mov
xchg
push
xchg
dec
jmp
pop
dec
sub
mov
fidivs
dec
jle
or
adc
call
lds
lret
cmpxchg
mov
xchg
or
sarl
arpl
xor
inc
mov
pop
into
cmp
push
push
mov
and
cmpsl
sbb
jle
sub
lcall
dec
lahf
mov
add
pop
lds
lret
add
and
mov
clc
add
mov
pop
fldt
sub
mov
out
inc
lea
sub
pusha
push
in
and
jle
aaa
sti
shll
add
adc
stc
and
dec
fildl
cmc
sti
xchg
sub
arpl
rolb
call
pop
mov
mov
clc
ljmp
push
sbb
std
test
lods
test
out
loope
push
xor
mov
sub
testb
xchg
incb
xchg
xchg
jecxz
xchg
dec
adc
imul
fs
push
adc
pop
cmp
std
sub
je
adc
out
mov
inc
xchg
cmp
xchg
lock
lea
dec
sbb
sbb
cld
mov
add
fildl
dec
shlb
inc
and
mov
mov
into
fsts
xchg
cli
cmp
xchg
lcall
and
shl
pop
int
shll
xchg
mov
or
in
cmc
cwtl
dec
cltd
pop
aam
cmp
js
leave
adc
lods
jp
pusha
push
ljmp
xchg
loopne
negl
pop
or
inc
dec
out
fwait
aad
mov
nop
sbbl
pop
and
xor
test
mov
jg
nop
sahf
push
leave
xor
cmp
jae
sbb
pop
cmp
in
rolb
sub
fnstsw
push
scas
lods
push
mov
popa
xchg
insl
lods
sbb
loopne
add
mov
stos
imul
add
out
jns
roll
push
in
or
popf
hlt
cmp
inc
outsb
xchg
cmp
jle
mov
ud1
xchg
xor
js
stos
daa
xchg
popf
dec
and
xchg
cmpsl
ss
pushf
jl
sub
jl
jmp
in
inc
xchg
mov
es
or
movsb
cvttps2pi
outsl
mov
or
cli
pop
jbe
pop
mov
pop
imul
ljmp
add
mov
mov
cwtl
sub
fbld
hlt
jmp
inc
aas
ret
inc
sub
shll
cmpsb
fstps
sbb
xor
addb
loope
movsb
mov
stc
popa
in
popf
loope
jb
popa
ror
push
cmp
aas
loopne
xor
iret
dec
pop
pusha
dec
call
mov
mov
cmp
stc
jbe
jnp
popf
clc
jnp
pop
imul
testl
pop
cld
xchg
ds
adc
xchg
sbb
loopne
outsl
shlb
in
inc
std
pop
push
mov
xlat
nop
fdivrs
adc
jp,pt
mov
dec
imul
push
push
inc
testb
out
call
mov
mov
lcall
aas
movsl
stos
insb
cli
push
cmp
push
lds
adc
push
inc
out
xchg
mov
jo
sub
shll
insb
or
dec
mov
pop
shrb
sub
loope
in
stos
xor
imul
adc
sbb
test
xor
push
outsl
xchg
xor
push
jbe
adc
stos
mov
adc
mov
lret
fucomi
adc
bound
lds
fsub
inc
movsl
sbb
fnstsw
push
mov
idivb
jge
into
push
sar
adc
jne
sarl
cmp
jg
stos
adc
les
dec
cmc
sub
sbb
dec
dec
add
pop
mov
lea
xchg
hlt
mov
in
or
hlt
fstpl
jge
mov
inc
sub
sarb
cs
pop
jmp
mov
fsubrl
sub
gs
mov
mov
push
jo
xchg
xor
mov
xor
je
jae
daa
mov
mov
mov
push
loop
jnp
movsl
leave
or
dec
rorl
and
sub
mov
push
lret
rclb
insb
fcompl
loope
sbb
pop
dec
or
mov
stos
push
loop
jae
adc
div
flds
fsubs
in
push
push
inc
lahf
gs
outsl
in
mov
xor
jbe
and
cmp
test
push
jp
mov
jl
xchg
xchg
icebp
xchg
cmpsl
adcl
or
inc
outsb
inc
int3
fs
cmc
fdivrl
xchg
xchg
push
sarb
insb
and
arpl
xchg
mov
loop
pop
cwtl
into
pusha
icebp
test
rcll
notb
jb
repnz
sarb
int3
adc
sub
ja
leave
push
fisubrl
cmp
dec
push
mov
xchg
ljmp
dec
div
test
jne
push
loope
pop
xchg
pop
pop
notl
sub
mov
movaps
pushf
dec
popa
cs
sbb
daa
or
jp
sub
mov
stos
mov
lret
std
and
out
or
scas
cltd
fucomip
and
jecxz
mov
out
dec
pop
jl
dec
mov
loope
dec
aaa
movsb
into
adc
add
sbbl
xor
into
je
adc
icebp
jne
lds
aaa
fwait
sub
mov
in
cs
sub
sbb
xchg
xor
pop
mov
mov
adc
mov
mov
and
daa
sub
mov
enter
dec
fcmovnb
flds
imulb
dec
daa
iret
rcrb
out
icebp
adc
push
mov
hlt
mov
cmpsb
hlt
or
mov
sub
scas
mov
fistpl
mov
adc
lret
cmc
fidivrl
jp
jmp
sti
dec
adc
dec
jecxz
add
aam
adc
sub
pusha
mov
xor
cmp
stos
incl
addr16
gs
mov
mov
xchg
loopne
push
call
dec
inc
gs
jmp
rep
cmpb
jns
push
inc
and
push
arpl
pop
loope
adc
stos
dec
jbe
outsl
inc
test
sbb
rorl
shll
test
rclb
jns
inc
inc
push
inc
xchg
repz
adc
cmp
inc
mov
inc
sub
add
xchg
es
and
push
mov
dec
adc
inc
mov
jp
cmpsl
or
es
jbe
fwait
jecxz
scas
int
fsubl
fwait
lret
lock
or
das
cli
push
jmp
xor
and
in
sarb
push
pop
xchg
scas
je
std
stos
xor
pop
mov
fimull
or
into
ljmp
xor
shll
bswap
xor
sbb
mov
mov
arpl
cmc
mov
scas
pop
xor
popf
xor
inc
adc
insl
imul
mov
or
jno
xchg
mov
pop
mov
sbb
loop
mov
stos
mov
push
push
xor
int
or
imul
int
imul
aaa
adc
push
xchg
addl
pop
inc
popa
mov
test
add
in
ret
dec
jp
adc
div
fcoml
xchg
xchg
iret
sbb
xor
and
loop
or
call
lock
and
nop
mov
cmp
sbb
movsl
pop
xchg
fadds
mov
mov
aas
hlt
mov
adc
sbb
push
or
mov
jecxz
fld1
pop
cmp
loop
imul
jnp
dec
popf
arpl
rol
cmp
and
or
adcl
sub
push
pop
sbb
in
pop
push
out
and
cmp
jle
adc
cmp
outsl
cltd
cltd
loop
lcall
test
ret
call
inc
xchg
mov
fs
jmp
rcr
lahf
daa
dec
not
repnz
fcoml
pop
lods
xchg
pop
std
dec
pop
dec
inc
fidivrs
and
out
jg
stos
jg
mov
data16
dec
into
shr
orl
js
inc
adc
inc
xor
fists
xchg
jle
mov
pop
pop
cmp
or
pusha
add
pop
js
loope
jl
popa
pop
and
mov
push
cmc
rcrb
sbb
push
aas
aas
pop
pop
sti
ret
mov
xor
lret
sbb
inc
pop
xor
repnz
cld
or
push
imul
dec
inc
mov
cmpsb
sbbb
push
cwtl
stos
shrl
addb
dec
and
jb
jg
jp
sub
cmp
aad
subl
xchg
loope
arpl
repz
lcall
cmp
mov
mov
in
jmp
cmp
inc
pop
bswap
cmp
jnp
and
xor
mov
adc
ds
cmp
push
nop
stc
test
fsubl
call
sub
cmp
and
clc
mov
adc
call
popf
push
sbb
popf
bound
xchg
sub
sub
movsb
stc
xchg
xchg
adc
mov
pop
cmp
stos
mov
or
pop
add
xor
add
in
flds
je
je
push
imul
mov
icebp
xor
push
pop
gs
das
out
xor
xlat
cmpsl
pop
or
icebp
out
dec
xor
pusha
icebp
mov
push
ret
arpl
or
fmul
sahf
adc
daa
inc
in
sub
mov
push
dec
outsl
nop
int
push
or
sub
xor
movsl
cmp
cmp
fists
inc
inc
lods
inc
push
icebp
push
push
in
push
jb
loop
stos
xor
and
pop
sbb
imul
push
ss
and
cmp
in
ss
arpl
cwtl
dec
xchg
dec
hlt
inc
xchg
cmc
pop
sub
inc
jg
outsl
cmpsb
out
push
mov
fadd
sub
xor
pop
es
imul
outsl
dec
and
pop
mov
and
mov
js
daa
mov
pop
jmp
inc
subl
shlb
cs
jno
or
jns
ds
mov
je
adc
lods
ljmp
aaa
sbb
cli
xlat
inc
adc
shll
mov
jl
testb
inc
mov
hlt
sbb
pusha
imul
or
and
inc
fisubrl
fucom
outsl
loope
inc
mov
cs
ljmp
mov
insl
jo
xchg
mov
stc
out
insb
pop
aad
popa
in
mov
dec
stc
push
jle
or
or
xor
popa
xor
lock
dec
imul
jg
aas
les
cmpsl
mov
push
dec
jecxz
mov
sub
cmp
stc
cmpsl
lcall
insl
xchg
pop
je
outsb
dec
mov
mov
stc
or
sub
arpl
or
std
xchg
mov
jmp
cltd
jmp
in
in
and
fnstsw
adc
mov
adc
shlb
insb
pop
repnz
push
jl
dec
sub
pop
adc
ljmp
cwtl
cmp
call
or
enter
xchg
and
sbb
divb
cli
outsb
loopne
dec
int3
mov
xlat
lods
divb
int
stc
xor
jae
xlat
push
and
sbb
fwait
dec
adc
pop
in
imul
jo
cmpb
jnp
cld
inc
mov
dec
out
int3
adc
ds
adc
and
clc
adc
jmp
xchg
dec
xchg
das
loopne
jl
ljmp
sarl
test
mull
ret
push
mov
rorb
push
nop
jae
das
sub
xor
aam
data16
and
xlat
mov
cwtl
mov
or
cmp
mov
push
mov
lea
out
sbbl
movsl
loope
xorl
test
flds
fildll
fcoml
cmp
inc
cmp
aam
jbe
mov
pop
sbb
leave
sbb
jnp
cmp
mov
mov
inc
js
insb
gs
in
arpl
xchg
mov
cmp
test
leave
sub
pusha
add
xchg
lret
inc
mov
sub
push
inc
arpl
cli
push
jne
scas
cmp
push
sub
sub
adc
jno
sub
mov
ret
mov
aas
mov
jne
sub
testl
jns
cmp
sbb
leave
jnp
or
sub
lret
loope
pop
adc
outsb
test
lretw
in
xor
jp
mov
jecxz
jns
or
sub
andl
out
mov
popf
je
hlt
mul
inc
clc
loopne
mov
dec
xchg
shll
testb
dec
dec
std
ror
or
jnp
push
or
sub
xchg
push
ljmp
add
push
pop
ljmp
push
icebp
mull
gs
jbe
xchg
int
insl
cmp
in
fcoml
or
stos
add
out
xlat
fisubrs
fmul
or
mov
mov
and
jmp
mov
out
repnz
adc
dec
imull
adc
jmp
loope
and
ret
shrl
jns
push
jbe
fcmovbe
mov
push
mov
dec
xor
mov
movl
push
pop
les
sbb
xor
shll
sub
and
and
jg
xchg
sbb
dec
and
mov
pop
daa
pushl
lock
stos
dec
rcr
cmpsb
enter
rcrb
add
sbb
rcll
dec
filds
dec
mov
jo
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
fs
fiaddl
cmpl
push
push
push
sbb
xor
or
pop
fwait
enter
pop
lock
pop
insl
aam
fldcw
add
ret
inc
cmp
shl
leave
cld
jb
idivb
adc
lock
add
dec
aaa
cmp
idivl
xor
int
pop
or
imull
pop
jo
sub
jns
icebp
xchg
jmp
ret
sbb
cltd
call
fwait
sub
fdivrs
ficoml
mov
insb
fs
nop
repz
fstpl
fdivl
xor
jb
cmp
lahf
xchg
fidivl
cmc
hlt
xchg
std
push
jmp
imul
jmp
jl
cmp
mov
sbb
in
testl
sub
sbb
adc
pop
xchg
arpl
addl
call
mov
fsub
aaa
insl
fxam
sbb
aam
and
roll
sub
xor
cltd
test
sub
xor
adc
popa
xchg
push
mov
jno
dec
lock
push
inc
aas
loopne
adc
adc
sub
or
inc
add
sbb
xchg
test
sbb
pop
xorl
inc
jge
mov
loopne
cld
add
mov
xor
jmp
or
insl
add
xor
out
cli
jmp
shl
mov
adc
cmpsb
jno
adc
lcall
js
jb
xor
aam
pop
cmp
sub
push
sti
fisubrs
or
out
aam
iret
aam
add
sbb
add
sbbb
out
jns
push
std
pop
ret
mov
xor
adc
inc
push
test
mov
jo
fldl
lret
adc
lret
add
andl
dec
lret
ds
mov
mov
mov
push
and
dec
pop
xor
out
rdpmc
shll
xchg
inc
xor
ja
push
push
je
loope
fcmovnu
jb
mov
lahf
fs
imul
sbb
or
adc
push
sbb
xchg
xchg
rcrb
negl
xlat
jp
mov
fstps
sub
adc
dec
pop
jb
jb
call
imul
aam
lods
pop
push
dec
push
inc
outsl
cmp
push
ret
or
int3
movsl
sahf
jno
hlt
xchg
sub
xchg
imull
mov
hlt
addb
jl
mov
adc
fdivrp
mov
rcrl
lret
stos
cwtl
or
std
sbb
testl
das
dec
push
icebp
push
xchg
loope
into
xchg
mov
xchg
mov
loope
iret
lea
outsl
cmp
shufps
out
dec
cmpb
shll
pusha
push
into
movsb
or
clc
clc
xor
andl
clc
je
xchg
inc
xor
je
outsl
ds
or
push
cmpsl
inc
subb
jb
fisttpll
xor
mov
in
imul
es
cmp
insb
cmp
lcall
jge
mov
mov
inc
cmp
sbb
lods
jo
hlt
lea
mov
es
sarb
out
mov
subb
add
sbb
fcmovnbe
les
les
leave
or
pop
lods
xor
imul
cmp
mov
sarb
and
push
fstl
data16
xchg
mov
mov
in
out
lcall
and
pop
ficoms
pusha
inc
lret
and
repz
les
sub
inc
into
mov
xchg
movsl
jle
mov
movsb
stos
adc
jns
or
jg
mov
aad
cmp
sarb
mov
test
xlat
pop
out
ret
jl
sbb
in
outsl
icebp
sbb
xlat
jns
rcr
aaa
or
adc
sbb
mov
fwait
loop
ds
push
lods
outsl
mov
sbb
fimuls
je
in
femms
xchg
xor
lods
inc
insl
cli
jle
popa
pop
xor
adc
addl
es
push
fstpt
mov
xchg
test
xor
cltd
daa
xor
xor
dec
or
or
mov
int3
in
outsb
mov
fs
add
mov
scas
outsb
scas
gs
arpl
and
js
inc
pop
sbb
test
sub
sti
aas
call
push
lods
loope
jmp
ficoml
ret
inc
add
pop
pop
xchg
jb
mov
cmp
xor
xchg
and
adc
stos
pop
idivb
imul
clc
test
je
int
lret
mov
and
dec
or
jo
sbb
xchg
mov
and
leave
js
into
dec
xchg
popa
adc
xchg
or
faddl
xchg
sub
addb
cwtl
icebp
shlb
cmpsb
popa
jne
inc
sbb
stos
mov
fldt
je
adc
jno
jecxz
adc
mov
xchg
inc
out
inc
lahf
push
cld
enter
inc
mov
push
ljmp
lcall
or
jno
outsb
clc
dec
mov
insb
not
pop
lcall
fistps
in
nop
pop
mov
bound
out
mov
inc
ret
xchg
outsl
pushf
push
outsl
mov
in
in
repz
daa
cli
mov
add
rcrl
or
add
xchg
lea
je
add
push
xor
outsl
addl
inc
mov
imul
fcom
mov
sbb
fcmovnb
out
and
std
pop
jb
dec
mov
loop
mov
jle
mov
stos
sbb
jle
dec
pusha
mov
xor
jle
ljmp
pop
jle
cmpsb
sarb
mov
and
repz
xchg
rolb
jns
inc
ficoms
or
sbb
mov
sbb
es
jecxz
test
rcrl
inc
cwtl
push
in
push
dec
clc
aas
hlt
xor
mov
pusha
jmp
mov
movsl
cmp
scas
xchg
popa
sub
and
add
mov
push
subb
mov
dec
arpl
lahf
fnstcw
add
aas
sbbb
jl
push
fcmovb
test
inc
rcll
xorl
test
inc
dec
lods
es
out
aas
ror
pop
loope
gs
sahf
cmc
mov
xchg
dec
mov
mov
out
js
in
les
jns
vmovaps
push
jb
dec
and
bound
subl
inc
add
ja
call
hlt
ret
cwtl
fnstsw
in
inc
xor
xor
mov
hlt
mov
lods
sti
stos
es
or
out
pop
cmp
dec
pop
insl
loope
in
sbb
mov
jae
shlb
xlat
test
iret
lock
sti
and
fnstsw
xlat
mov
stos
jo
sbb
push
mov
or
aam
xor
loope
jecxz
jge
popf
cmp
cwtl
cmp
mov
sub
sub
sahf
xchg
push
jg
cmp
mov
or
inc
roll
xchg
add
shrl
pop
test
and
xor
mov
insl
insb
cmp
lock
mov
cs
or
mov
inc
cmpsb
out
sti
sahf
push
xchg
inc
lea
into
adc
and
dec
push
je
fstps
cmpsb
jle
test
fwait
sbb
mov
pop
mov
mov
cli
arpl
leave
andb
inc
fisubs
and
inc
outsl
addr16
aam
mov
mov
xchg
mov
sbb
xchg
sbb
jle
sub
shl
and
dec
push
pop
adc
inc
js
xchg
mov
dec
push
xchg
jbe
mov
push
sti
add
fbstp
std
and
je
dec
sub
je
ja
sbbb
fisubrl
sbb
jmp
imul
pop
jmp
mov
adc
das
dec
pop
cltd
out
adc
rorb
dec
pop
xchg
popf
test
mov
movsb
popa
shrb
testl
mov
insb
mov
jb
push
mov
lret
insl
arpl
out
inc
mov
xor
scas
mov
andb
push
lods
lods
subb
std
pop
shlb
jp
pop
sbb
out
mov
inc
xor
push
jns
aam
out
add
dec
je
push
andb
dec
pop
je
cmpsl
inc
sbb
jns
lret
push
imul
push
imull
in
ljmp
js
addl
in
push
or
mov
data16
xchg
icebp
in
jae
sub
cmpl
sub
adc
pop
and
roll
mov
sub
shl
xchg
jecxz
idivl
cwtl
or
cmpl
push
push
inc
inc
leave
lcall
mov
inc
adc
inc
adc
xchg
xlat
jecxz
popf
jns
sahf
adc
push
repz
or
push
dec
dec
and
lcall
and
out
jbe
sub
stc
lods
mov
jmp
movsl
xchg
fs
adc
and
std
push
dec
jle
cld
sbb
pop
popa
push
mov
sbb
loopne
aas
gs
cld
cmp
mov
or
call
xor
enter
dec
xor
call
jmp
cmpsl
xor
jl
xor
nop
dec
cmp
decb
data16
adcl
daa
pop
jecxz
insl
jl
mov
int3
add
or
aaa
mov
adc
les
push
jp
out
jl
loop
or
adc
push
shrb
rcl
jno
jnp
in
lahf
fnstenv
aam
out
test
inc
xor
stos
out
sub
repnz
out
adc
adc
insb
loopne
push
push
jp
leave
lds
fistpll
add
and
xor
add
hlt
testl
xchg
fs
mov
mov
pop
xchg
jecxz
in
adcl
push
cmp
pop
mov
sbb
out
jnp
leave
ss
lret
adc
movsb
push
mov
scas
push
je
jmp
lret
cmp
jle
fwait
pop
and
lahf
push
stos
add
cmpsl
pop
dec
inc
add
imul
xorb
jl
pop
jbe
ret
xchg
pop
test
push
rcr
test
jns
jns
fdivs
loopnew
js
xor
cs
lret
or
adc
jb
mov
cmpsl
dec
xchg
rcll
jnp
cmp
mov
enter
push
mov
xchg
mov
xor
insl
jecxz
pop
lret
adc
ja
inc
imul
inc
call
rcrl
mov
push
add
dec
hlt
jae
sbb
xor
enter
push
jb
xor
out
and
in
aad
jo
cltd
rorb
leave
xchg
daa
jae
outsl
mov
push
test
movsb
xlat
mov
cmpsl
inc
dec
call
sbb
pop
andb
jmp
lds
cmp
insb
dec
inc
nop
mov
movsb
push
addr16
jno
xchg
inc
test
lods
jo
cmp
sbb
jge
negb
test
sbb
je
decl
push
dec
pop
pop
pop
cmp
sti
jp
outsb
sbbl
or
adc
inc
neg
cs
add
lock
in
js
inc
loop
movsl
xor
mov
sbb
lret
out
in
jge
testb
adc
mov
ja
xchg
rcll
loope
mov
pop
jp
push
cmp
fcomps
mov
fsubrl
push
divl
popf
push
or
or
lods
in
dec
lahf
adc
adc
ds
add
pop
mov
data16
scas
push
sub
fdivs
shl
dec
mov
add
popa
xor
insb
push
frstor
fdivrs
mov
rol
sub
les
ds
fs
xlat
mov
std
js,pt
scas
fbld
mov
test
inc
lret
stos
push
jbe
repz
mov
das
popf
ljmp
loope
icebp
hlt
inc
add
out
pop
mov
aam
ja
cwtl
rol
cmp
push
dec
mov
sub
push
push
fsincos
imul
shll
daa
lock
les
fcompl
cmp
sbb
push
and
sbb
xor
fs
mov
out
rorb
mov
jnp
gs
movsl
and
xor
add
mov
scas
jecxz
cmp
lods
jo
sti
xor
xor
xchg
das
sbb
sbb
or
gs
mov
ds
adc
arpl
jbe
jg
and
cmp
cmp
jo
sbb
addr16
fsubl
in
std
ss
push
stc
or
cli
cmp
leave
mov
push
popf
pop
xor
dec
fs
shrl
ljmp
sub
lret
jae
or
std
jns
jae
adc
enter
cwtl
and
addb
adc
and
icebp
inc
jle
xchg
add
cmp
mov
and
scas
dec
push
jbe
jns
mov
jnp
mov
ficomps
in
out
sbb
lahf
outsl
adc
mov
mov
or
addb
cwtl
fs
fistps
es
mov
lods
cmc
xlat
xchg
push
sbb
loope
or
xor
lods
cmp
stc
incl
ret
aam
xor
out
fidivrs
mov
and
out
mov
pusha
stc
aaa
lahf
movsl
mov
jne
jae
mov
lahf
jnp
pusha
sahf
pop
popa
mov
mov
cld
and
lret
sub
cwtl
push
popf
pop
cmp
dec
jb
pushf
mov
xor
xor
xlat
mov
pop
insl
xchg
pusha
cmp
cltd
or
jl
mov
push
out
shlb
inc
mul
popa
cmp
mov
outsb
mov
jg
xor
dec
or
cld
fs
fidivs
or
cmp
and
or
rclb
lret
call
stos
xchg
fistpl
mov
or
push
jnp
adc
dec
ret
pop
iret
sarl
xchg
sbb
sub
sub
mov
pushf
and
pop
cmp
icebp
mov
mov
fmull
insl
mov
add
es
add
pop
sub
push
cwtl
pop
in
adc
sbb
cld
xor
sti
cli
sub
stos
imul
cmpsb
xchg
lock
js
js
push
mov
psrad
es
cmp
and
das
pop
addr16
lcall
add
imul
stos
imul
mov
insb
ljmp
add
popa
mov
dec
out
lock
lahf
repnz
iret
adc
imul
lods
test
pop
into
sub
cmp
subl
cmp
loop
and
or
addb
ficompl
pop
sub
addr16
cmp
xor
mov
iret
push
inc
dec
pop
sbb
stos
mov
pop
sbb
loop
mov
push
mov
inc
pop
add
jmp
mov
sub
lcall
cmp
push
xchg
mov
shrb
test
sti
mov
inc
xchg
sub
ja
push
add
shlb
and
adc
popa
xchg
sti
or
lds
les
mov
mov
jge
or
jl
dec
fcmovb
push
mov
add
sbb
xor
shrl
inc
sub
or
js
popa
fdivs
test
mov
cmpsl
hlt
mov
push
dec
inc
sbb
cmp
int3
mov
ja
sbb
add
nop
imul
leave
sbb
or
aaa
lock
mov
xlat
jmp
insb
sub
daa
fsubrs
les
js
aas
mov
and
loopne
cmp
inc
sub
xchg
dec
out
movsl
faddl
test
pop
add
icebp
pop
xor
or
in
test
leave
psllw
xchg
or
aam
or
js
push
js
popa
addr16
lock
dec
inc
cmp
pop
mov
push
outsl
adc
pop
pop
xchg
imul
mov
ds
mov
pop
cli
cwtl
ss
setg
pop
cmp
and
xchg
adc
mov
or
xchg
arpl
popf
loopne
add
jb
adc
sub
stc
repnz
sbb
mov
sti
bound
shrl
das
mov
and
test
std
xchg
icebp
sbb
shlb
imul
jbe
push
sub
inc
movsb
mov
mov
mov
bound
rolb
cmp
fisttpll
insb
xchg
rcrb
das
push
inc
addr16
adc
repz
sti
jns
jbe
adc
add
jmp
jae
fidivl
stc
ljmp
add
out
imul
in
dec
out
jb
inc
lret
add
mov
scas
pop
mov
xchg
stc
lfs
testl
lods
js
out
sub
jg
int3
pop
cld
dec
ds
addr16
int
mov
popf
cmp
in
cmp
ss
lahf
jnp
inc
mov
adc
push
adc
xchg
out
sarb
in
or
outsl
into
roll
aam
lret
add
and
nop
inc
adc
push
push
aam
stos
cs
lahf
fsubp
cmp
push
imul
sub
cmp
add
sub
jle
xor
and
mov
into
jae
ljmp
lret
push
cmpsl
lahf
movl
mov
roll
mov
fnstenv
cmpsl
lock
xchg
fistpll
mov
and
push
fld
sub
sbb
mov
icebp
adc
pop
das
dec
data16
into
dec
mov
and
les
repnz
faddp
pop
stos
push
xchg
pop
sub
add
jmp
xchg
jne
test
xchg
xchg
mov
push
mov
mov
negl
push
lret
mov
outsl
pop
sub
shll
pop
and
fxch
hlt
lods
sub
adc
shlb
js
aam
loopne
xchg
fdivl
test
sbb
xchg
fwait
add
in
dec
inc
and
daa
lahf
jne
andl
mov
aas
out
cmpsb
mov
or
xchg
mov
mov
pop
gs
sbb
das
data16
call
sysenter
sbb
shll
sar
mov
lock
mov
jb
push
or
cld
mov
adc
sub
lea
lahf
out
xlat
test
dec
lahf
xchg
xchg
insb
scas
xor
movsb
jae
ficoml
fbld
into
fstpt
mov
xor
xchg
xor
and
adc
clc
arpl
imul
and
in
sub
lods
lret
and
loope
push
jecxz
rolb
push
cmp
sub
sub
and
call
inc
and
aad
mov
mov
sbb
sub
or
mov
jnp
mov
gs
adc
push
test
add
cmpsl
dec
ja
fmuls
clc
adc
jb
test
push
shrb
outsb
repz
jmp
orl
and
lea
mov
push
sub
cltd
jg
dec
and
cwtl
dec
enter
fcom
mov
js
out
stos
xchg
stc
insl
and
lahf
lret
mov
jb
sub
and
or
or
out
jg
lock
insl
sbb
enter
add
popf
imul
mov
aad
lods
push
loop
mov
dec
stos
inc
push
jne
jp
sbb
movsl
fwait
lods
lcall
mov
ret
sbb
sub
scas
jo
jge
mov
cltd
xchg
roll
lcall
push
ja
dec
fisttpl
inc
lock
lret
mov
adc
out
xchg
das
or
pop
enter
nop
mov
sti
stos
mov
jecxz
bound
cmpsb
aad
xchg
pop
hlt
lock
or
mov
es
mov
pop
xor
jnp
cmp
in
mov
cmc
cmp
shrb
push
push
sub
fcoml
xchg
mov
mov
loope
lcall
mov
cld
and
or
cmpsl
out
ficomps
dec
sbb
popa
xor
and
xchg
sti
and
sbb
cmpsl
test
xchg
push
or
mov
adc
in
jle
and
cmpsb
lods
mov
push
mov
popf
dec
outsl
jo
push
and
in
out
add
ret
fisubl
jne
aam
or
inc
fs
bound
inc
mov
sahf
sbb
ds
mov
mov
mov
nop
mov
add
or
pop
repnz
cmpsb
sub
push
shlb
rcll
lret
out
sbb
xor
shrb
ret
repz
jg
movsb
and
mov
hlt
pop
arpl
jae
or
fwait
aaa
ret
mov
mov
mov
lahf
ficompl
sbb
mov
scas
sub
lret
shrb
pop
mov
test
daa
sbb
and
xchg
mov
push
loop
inc
js
test
dec
cs
nop
mov
mov
outsl
test
xchg
push
push
mov
lret
adc
scas
add
push
je
out
int
sub
dec
or
adc
andl
adc
cmp
hlt
mov
adc
or
mov
sahf
push
cmpsl
xor
sbb
scas
pop
cmp
jl
repz
loope
jns
mov
lods
mov
inc
ficomps
push
aas
mov
mov
int
cmpsl
dec
std
mov
cmp
outsb
mov
stc
mov
pop
push
lret
scas
test
and
mov
sub
dec
sub
hlt
stos
rcrl
cs
mov
lea
and
gs
pop
push
pusha
ret
jnp
jnp
divb
mov
out
int3
or
jo
sub
das
sub
in
subb
ja
out
xchg
sub
cmpsl
movsb
fcoml
mov
push
xorl
icebp
lret
add
fstps
pop
and
fnsave
popa
scas
bnd
sub
vandps
xchg
in
cli
sbb
cmp
out
push
push
adc
ds
or
dec
pop
cmc
jb
popa
jl
dec
in
adc
add
push
outsl
mov
xchg
sti
adc
push
mov
outsl
dec
cmc
jns
aam
and
xchg
popa
js
pop
popa
inc
mov
mov
mov
cmp
sbb
in
add
lock
xor
cmp
std
xchg
sbb
add
sarb
push
les
lea
sbb
mov
dec
mov
sbb
adcb
clc
adc
adc
loop
mov
xor
in
adc
cld
mov
int
mov
jp
jmp
fsubrl
mov
xor
out
jne
pop
insb
call
aam
sub
hlt
in
mov
push
imul
popa
fnstcw
lret
mov
push
mov
cmc
mov
mov
xor
push
jb
inc
gs
int
insb
mov
xlat
imul
dec
sbb
fcom
push
popf
pop
mull
mov
mov
mov
mov
xchg
mov
sbbl
xlat
mull
int
fadds
cwtl
jge
pop
filds
outsl
jg
sahf
stos
outsl
inc
dec
push
xlat
pop
pop
mov
inc
ja
cwtl
shlb
cmp
sub
push
shrb
addr16
jecxz
pusha
mov
xchg
adc
lret
dec
push
negb
pop
daa
xlat
jno
dec
jno
add
add
clc
add
xor
aam
jecxz
sar
sub
cwtl
and
or
aam
xlat
fsubrp
fsubs
add
push
loope
test
data16
push
and
and
stos
fwait
nop
fdivs
out
ret
or
cld
or
pop
mov
mov
jnp
test
jb
iret
jle
aas
mov
mov
mov
js
jle
in
cmc
lcall
jmp
mov
mov
cmp
xor
sbb
div
test
xorl
out
xor
push
das
mov
fidivs
xchg
adc
repz
mov
into
ds
lea
out
or
push
adc
xbegin
pop
cs
loop
jecxz
std
mov
sub
popa
or
mov
cld
mov
inc
sbb
loopne
mov
mov
pop
rcrb
pop
mov
iret
test
xor
mov
pushf
xor
test
sbb
dec
xor
jae
stos
rolb
cmc
xor
dec
cmpsb
and
sahf
or
mov
xor
xchg
pop
cmpsb
shlb
das
pop
bound
int
jl
inc
push
pop
outsb
fistps
push
push
mov
push
mov
mov
pop
pop
jno
popf
lea
mov
int
out
and
push
test
cld
subl
cltd
xchg
dec
out
scas
cs
pop
mov
mov
inc
pop
in
xor
icebp
push
aaa
jno
jno
jns
pop
fnstenv
push
or
inc
jae
inc
cmp
inc
outsl
cli
sti
fcmovb
cmp
jp
pusha
fst
push
push
xchg
lock
sub
negb
or
sar
mov
cmp
jne
addr16
xor
ficoml
inc
push
and
pop
inc
call
mov
out
je
xchg
add
sbb
subb
fidivl
bound
testl
mov
sub
aad
push
jl
xchg
dec
push
inc
das
xchg
fstpt
and
dec
sbb
lea
xor
or
getsec
inc
lahf
mov
jbe
sbbl
or
sub
cmp
mov
arpl
xlat
sbb
xor
adc
bound
fadds
in
mov
and
stos
out
cmp
inc
cmp
std
jmp
add
cmpsl
cmp
loope
mov
shr
aas
mov
xchg
fnstsw
jmp
sub
arpl
xchg
mov
pop
ret
sbb
push
aam
mov
insl
push
and
test
xor
and
dec
addb
jl
xchg
stos
ja
xor
sbb
popf
shll
mov
xor
pusha
hlt
xchg
ds
cmp
push
aaa
push
sbb
add
push
xor
call
jge
shrl
jl
test
jmp
lret
add
mov
mov
push
mov
cs
fadds
jno
pop
cmp
sub
subl
push
fisubrs
jbe
jp,pt
sbbl
dec
push
orb
daa
repz
in
inc
jmp
sub
mov
mov
sti
fisttps
dec
es
sti
pop
cmp
loopne
std
stc
sbb
cmpsl
loopne
insb
mov
test
push
andb
sub
fisttpl
push
xor
dec
xchg
push
negb
adc
pop
pop
mov
outsl
ret
adc
sub
std
in
jnp
outsl
out
xor
add
ljmp
imul
xchg
and
out
lcall
cmp
sbb
hlt
cs
fs
sub
push
int
xor
sub
lcall
cmp
or
inc
enter
mov
or
dec
sahf
into
lock
xor
lea
test
lods
les
fnstenv
cmpsl
mov
ucomiss
iret
mov
mull
jo,pn
sub
test
adc
mov
push
dec
jns
sub
rcl
pop
or
lcall
enter
xor
lret
push
sub
or
minps
je
imul
push
xor
int
insb
cmp
xchg
sub
lret
add
add
xchg
adc
mov
push
stc
add
lock
pop
push
dec
in
out
repnz
mov
sub
and
xor
and
cmpsb
mov
repnz
mov
ss
lea
push
jle
fmulp
unpckhps
les
mov
sbb
mov
lret
cmp
pop
loop
or
in
daa
scas
xchg
xor
rcrl
sub
repnz
jge
clc
xor
xchg
mov
popa
sarl
sbb
jmp
rcrl
mov
shrl
flds
popa
cmp
decl
int3
sahf
sbb
js
push
inc
sahf
and
mov
fisttps
push
outsb
push
fldl
xlat
and
test
cmpsb
or
in
loopne
dec
inc
das
lret
icebp
pop
in
in
mov
aam
mov
jge
rolb
fstps
inc
xchg
xlat
aas
ja
iret
inc
mov
sub
dec
adc
leave
sarb
data16
mov
and
xor
out
cmp
in
sbb
cmp
jb
inc
inc
mov
mov
imul
outsb
outsb
mov
mov
mov
jne
mov
xchg
int
jp
nop
and
dec
mov
mov
dec
stos
addl
push
mov
stos
lahf
insl
jnp
dec
lods
rcrl
or
mov
xor
mov
in
adc
aad
sbb
and
xlat
ret
ja
pusha
ds
aam
icebp
push
xchg
aad
lret
add
sarl
in
int
sahf
dec
and
jge
push
pop
add
sahf
repz
pop
xlat
pop
test
xchg
sti
pushf
into
dec
lcall
and
cmpsl
mov
jae
cmp
adc
sarl
inc
fwait
add
lret
cmp
add
icebp
add
shlb
sub
cmc
aaa
cmp
dec
push
adc
cld
iret
xchg
and
pushf
pop
into
js
pop
nop
outsl
dec
lret
xchg
cwtl
lahf
sub
in
mov
imul
daa
add
pop
fld
add
nop
in
push
roll
push
jp
outsb
clc
cld
arpl
int
and
les
shlb
xor
ficompl
mov
and
idivb
sahf
sub
gs
pop
dec
or
sbb
dec
stos
mov
ss
sti
xchg
xchg
dec
mov
call
sub
mov
xchg
jmp
leave
push
push
jmp
test
inc
sub
mov
and
inc
adc
push
dec
push
stc
fcompl
lcall
jnp
pop
aaa
mov
ss
mov
mov
fnstsw
mov
int3
xchg
cli
inc
rorl
cmp
or
popa
ficoms
lods
outsb
push
and
comiss
pop
sub
xor
in
loop
pushf
ss
inc
sahf
cmp
push
int3
ljmp
push
sti
push
enter
push
arpl
bound
sbb
inc
cld
and
stos
and
push
and
push
jno
cmc
je
inc
std
mov
aam
jge
in
nop
scas
mov
rclb
sub
mov
mov
std
out
or
ljmp
cmp
inc
push
out
push
xchg
cmp
hlt
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
adc
sbbl
or
or
sar
ja
sbb
sti
pop
pusha
and
loop
out
push
mov
lea
mov
hlt
fdivrl
mov
ss
xchg
push
imul
inc
xchg
inc
popf
cmp
sbb
fldlg2
in
add
imul
mov
mov
cmp
cmpsl
test
out
call
movsb
mov
lcall
or
and
shlb
lds
leave
mov
popa
mov
cltd
xchg
add
es
loope
mov
in
add
adc
xchg
mov
jnp
add
sub
xchg
lcall
xchg
xor
jnp
fiadds
shrl
xchg
sub
adc
ret
or
outsl
xlat
in
adc
and
sub
inc
icebp
int3
push
cmp
imul
call
xchg
aas
sbbb
jbe
lods
addr16
jp
cmp
and
lds
cli
add
lds
jmp
jb
repz
add
sub
fwait
jo
enterw
cwtl
sbb
fs
or
or
popf
rclb
fwait
stos
fnsetpm(287
jp
xchg
lock
jo
or
or
cmc
iret
pushf
pop
add
fldt
xchg
jne
mov
sbb
mov
inc
pop
out
dec
xor
loopne
call
jmp
sub
mov
xchg
lcall
lret
int
int
xor
cltd
stos
jg
pop
cmp
xchg
pushf
inc
sub
push
enter
xor
inc
cwtl
xor
lods
mov
mov
add
mov
nop
mov
rol
push
lds
imul
add
jmp
lahf
out
and
repz
adc
mov
inc
lock
mov
xchg
mov
insb
int3
or
push
pop
pushf
call
sbb
pop
fnstsw
mov
and
lahf
dec
pusha
or
fld1
mov
mov
call
lcall
imul
inc
icebp
je
add
mov
imul
fistpll
lcall
xor
or
lods
mov
addr16
or
cmpsb
adc
cwtl
daa
add
sbb
loopne
mov
inc
push
lods
sbb
adc
adc
loope
adc
test
int3
cmp
repz
mov
out
pusha
testl
aaa
mov
test
pop
xchg
cmp
insb
xchg
adc
jnp
ret
mov
jecxz
pop
mov
stos
mov
xchg
push
push
sub
xchg
mov
cwtl
sbb
inc
jns,pt
push
pop
sti
ja
jp
jg
lock
cmp
out
push
mov
inc
lea
push
out
loop
mov
loope
nop
and
sbb
mov
gs
lcall
hlt
xchg
ja
add
iret
aaa
sub
fwait
jae
cmp
sbb
orl
sbb
push
jb
xchg
and
push
push
ret
cs
pop
imul
cwtl
out
add
pop
cmp
cs
jae
imull
es
push
add
jmp
sub
pusha
sub
out
mov
out
xor
xchg
jecxz
dec
and
add
orb
enter
nop
imul
pop
xor
ficompl
adc
pop
outsl
mov
xchg
inc
pusha
sbb
into
mov
and
lahf
sahf
pop
inc
std
adc
mov
incb
dec
data16
addb
pop
cmp
add
adc
popa
jne
imul
mov
pop
rorl
cmpsl
lds
cmp
fiaddl
outsb
jecxz
and
cmc
cmp
in
pop
pop
add
data16
push
aas
fadds
fbld
mov
lea
call
add
insl
in
jbe
in
jge
pop
repz
pop
cmpsb
stos
div
mov
adc
test
mov
sti
sbb
mov
jp
hlt
jb
outsb
mov
mov
imul
jl
lret
add
xchg
sbb
in
sub
and
push
mov
dec
data16
add
xor
push
fisttpl
int3
push
inc
pusha
arpl
nop
aaa
and
ret
outsb
addr16
cmp
dec
icebp
push
jo
fldcw
dec
ljmp
jbe
or
roll
push
mov
jge
loopne
fwait
mov
dec
out
hlt
sub
test
xor
notb
inc
lods
sub
xor
adcb
dec
dec
stos
scas
daa
inc
cmp
push
das
xor
push
cmp
test
test
int3
js
sbb
icebp
fisttpll
out
bound
stos
and
pop
mov
fisubrl
movsb
mov
push
inc
or
ljmp
notl
cmp
ja
sti
xor
dec
imul
cmp
sub
adc
addl
xchg
mov
cli
sti
mov
xor
add
ljmp
cltd
mov
pop
adc
xchg
insl
cli
xchg
gs
or
dec
insl
movsl
push
jle
enter
int
push
idivl
add
lods
inc
inc
jns
icebp
inc
or
pop
imul
jne
sub
jmp
jp
sub
mov
sub
xor
push
adc
aam
fwait
orl
les
push
jecxz
sarb
jmp
xor
push
push
aam
das
inc
mov
mov
insl
dec
pop
jmp
cmp
imul
or
imul
ss
xor
les
popa
js
add
ret
ret
es
jne
pop
mov
jno
sets
mov
mov
divl
int
mov
xchg
outsb
mov
fucom
adc
and
cmp
in
mov
mov
mov
mov
repnz
push
addr16
jo
sti
cmp
and
int3
jo
and
sbb
movsl
or
in
mov
loopne
mov
lahf
inc
push
ljmp
sub
push
jg
and
push
jb
push
out
cmpsl
jge
pop
rorl
jo
jne
mov
fnstenv
insl
fs
cmpl
adc
sbb
in
jmp
sbb
mov
jnp
int
push
into
imul
jns
push
adc
fldt
or
xchg
xchg
xlat
insl
xchg
inc
mov
and
fs
pop
sbb
jae
mov
sbb
mov
das
cwtl
clc
jbe
lret
xchg
dec
int3
mov
frstor
stos
out
pop
pop
jno
or
jae
dec
pop
cmp
les
stc
inc
movsl
pop
cmp
mov
pop
stc
test
sbb
inc
fiadds
cmp
jo
mov
pop
xor
aam
jp
fwait
int
pop
and
fsubs
lea
and
jb
sub
mov
call
mov
cmp
test
jge
js
xor
and
fcompl
pop
pop
aam
lock
push
aam
jnp
aam
cmp
mov
jnp
dec
clc
pop
jae
adc
jecxz
pop
sbb
or
popf
sbb
dec
sub
dec
mov
fs
ljmp
leave
ret
xlat
lock
sahf
fistps
in
lret
ficoml
out
loopne
in
fdivp
pushl
sti
dec
insb
add
fwait
popf
clc
pop
xchg
cmc
mov
rcll
dec
mov
xchg
and
out
adcb
xchg
dec
out
push
loop
jecxz
stc
add
pop
pop
pop
adc
in
subl
outsl
mov
dec
pop
cmpsb
add
inc
test
jns
push
movsb
or
imull
cmp
adc
inc
test
pop
or
xchg
jo
mov
sub
popf
jne
ljmp
test
inc
push
ret
pop
int3
testl
cmp
and
and
inc
inc
jno
mov
adc
aam
mov
pop
sbb
mov
pusha
clc
push
fbld
outsl
or
push
cmp
adc
adc
pop
pop
call
lret
dec
dec
lock
testl
add
sub
aas
loope
nop
sub
inc
test
scas
adc
dec
sub
shl
mov
sti
add
int3
gs
adc
add
inc
push
out
shlb
outsl
in
cmpsb
sub
mov
dec
inc
rcrb
lea
das
addr16
cmp
fnstenv
xor
or
mov
mov
sbb
sbb
lea
cmc
dec
aad
inc
mov
push
gs
pop
test
dec
and
addb
cmp
outsb
push
mov
jno
jge
xchg
xchg
cld
addr16
pushf
dec
je
sub
dec
mov
xchg
daa
cmpsl
popf
repz
popa
outsb
jle
mov
lock
loopne
dec
cli
arpl
imul
hlt
repnz
rcl
inc
xchg
cld
int3
pop
inc
out
lea
xchg
in
fldcw
in
mov
xor
cmp
pushf
into
rcrl
xor
or
popf
xchg
mov
pop
and
loop
pop
xor
push
sarl
push
test
push
fucomi
out
sbb
and
into
cwtl
add
cltd
inc
push
xor
pop
pop
xchg
sbb
mov
xchg
xchg
sbb
movsb
push
sbb
pop
and
dec
jmp
mov
insl
mov
sub
mov
mov
das
arpl
int
jne
mov
dec
iret
pop
adc
xchg
aad
nop
pop
out
imul
add
inc
popl
insl
mov
and
in
lods
mov
cmp
push
sarb
mov
lret
fisubl
aam
inc
mov
xchg
out
std
or
lea
push
or
aad
cmc
test
adc
lock
shlb
fistpll
test
out
xorb
mov
and
xor
sub
andb
push
push
dec
inc
int
ja
xchg
sahf
cltd
lods
cmp
add
daa
dec
lock
mov
sbb
aas
wrmsr
popf
push
mulb
lock
movsb
inc
repz
and
lds
pop
pop
jae
es
pop
mov
iret
inc
adc
sbbb
mov
out
cmc
adc
out
int3
xchg
and
and
loop
pop
cld
add
pop
out
cmp
cmp
xchg
mov
mov
in
or
and
call
aas
outsl
inc
inc
sahf
and
ret
push
push
sub
cmpl
mov
jmp
imul
hlt
nop
ds
mov
das
xchg
iret
mov
jae
sub
add
stos
popa
imul
ds
mov
adc
mul
lahf
sbb
mov
out
lahf
fidivrs
xchg
and
dec
add
pop
jnp
mov
xlat
aam
sub
pop
ljmp
scas
xchg
and
ljmp
push
push
fnstenv
scas
fldenv
je
into
fs
mov
jmp
pusha
cli
jne
mov
popa
std
adcb
dec
lods
push
into
mov
xchg
jbe
or
xchg
sub
add
lret
inc
or
jae
mov
add
hlt
dec
jb
push
and
ja
popf
mov
jne
cli
inc
rolb
sub
xor
and
aaa
dec
popf
jp
add
popa
lahf
jp
inc
sahf
cmc
out
into
dec
xchg
je
sub
mov
dec
out
and
je
addl
in
push
sub
adc
xchg
mov
popf
pop
mov
enter
les
push
incb
outsl
je
data16
das
lahf
mov
mov
add
dec
loopne
in
aaa
adc
mov
add
outsb
setns
jb
inc
mov
loopne
daa
mov
push
cmp
mov
lcall
pop
dec
dec
jne
xchg
mov
leave
push
sbb
mov
call
mov
mov
fldt
mov
add
pop
cs
push
adc
cltd
repz
jge
insb
dec
pop
xor
repnz
addr16
push
adc
push
inc
mov
cmpsl
dec
es
jns
xchg
xor
mov
push
test
xchg
pop
dec
test
lods
es
stc
loopne
add
or
add
imul
sub
pop
cmp
rcrl
icebp
dec
xor
sub
push
ret
xchg
pop
hlt
lcall
lahf
testl
scas
or
scas
aam
and
pop
jno
jp
inc
push
pop
fsts
pop
sbb
pop
repnz
inc
xchg
stos
cmp
pop
pop
xor
jns
out
test
sbb
ficompl
scas
add
inc
iret
pop
sbb
and
hlt
rclb
lds
xor
loop
stos
ss
jecxz
xchg
mov
stc
lock
xor
inc
ss
pop
gs
inc
mov
cmp
movl
dec
fcomi
dec
jns
mov
in
xchg
sahf
nop
cmp
xor
xor
or
mov
dec
add
push
movsl
inc
mov
sbb
push
rcrl
das
or
inc
call
mov
xorb
dec
xchg
inc
cmp
ret
paddd
std
rcrb
xor
ss
inc
inc
int3
or
imul
sbb
movsb
test
sbb
xor
xor
loope
imul
xchg
fwait
adc
insb
mov
mov
and
mov
add
adc
inc
push
outsb
scas
jbe
xor
adc
cmp
push
lret
sti
int
xor
push
add
sti
add
mov
xchg
adc
icebp
dec
negb
popf
loope
jns
inc
pusha
push
ljmp
aas
lret
fsubl
idivl
adcl
in
jg
mov
xchg
xchg
outsl
pop
lahf
mov
pop
fdivs
cmpsb
xchg
adc
push
push
orl
lcall
fmull
xor
stos
pop
mov
scas
icebp
icebp
jmp
mov
cltd
pop
push
mov
stc
scas
aad
sub
mov
xor
lea
fildll
jecxz
lcall
cmc
mov
mov
lcall
jecxz
je
jg
pop
cltd
fisttpl
test
dec
or
outsl
xor
pusha
pusha
loopne
sbbb
insb
xchg
repnz
popa
jmp
lods
lea
fcoms
bound
mov
outsl
int
out
mov
sub
in
inc
push
dec
insb
aam
and
xor
xchg
add
jbe
or
pusha
and
shlb
pop
nop
mov
adc
xor
and
jno
pop
xchg
sbb
push
xor
loopne
lds
lods
push
push
addl
inc
dec
push
aad
addr16
mov
aad
inc
add
js
dec
nop
gs
jmp
jmp
jbe
andb
clc
jle
inc
incl
out
push
sbb
add
mov
mov
scas
push
lods
jge
out
xchg
jns
push
test
frstor
hlt
bound
sti
insb
addb
les
ljmp
cmp
xor
pop
stc
push
inc
or
in
inc
test
push
push
jl
sarl
fstp
pop
add
or
test
enter
enter
aaa
es
and
outsb
and
sub
fsubrs
cs
inc
jmp
aam
in
mov
or
repz
inc
js
ret
jg
test
mov
or
or
inc
in
movsb
mov
pop
push
outsl
xor
movsl
popa
push
mov
sbb
into
xchg
div
popf
cmp
jb
ss
stos
out
jmp
jecxz
xor
pop
mov
mov
sbbb
jb
in
cmp
add
mov
jp
inc
dec
or
or
mov
dec
loop
mov
mov
outsl
je
ret
push
outsl
shlb
out
mov
aad
or
cs
add
mov
xchg
call
xchg
lcall
dec
add
das
xchg
cwtl
push
cmpsb
xchg
dec
jns
xchg
push
adc
adc
pop
imul
cltd
mov
xchg
cmpsb
cltd
cmp
outsb
hlt
out
mov
rorl
cmpsb
repnz
mov
cmpsb
jg
scas
fimuls
sbb
jg
mov
out
cmc
and
push
jo
dec
fcmovb
jne
or
fcompl
push
aas
sub
pop
repnz
popf
subl
inc
arpl
cmp
inc
mov
lret
pop
aas
shl
push
pop
lcall
mov
pusha
in
sbb
lods
jmp
or
ret
sbb
dec
xor
mov
inc
and
sub
jne
sar
mov
std
nop
mov
sbb
mov
jae
adc
sub
adc
movsb
jp
pop
dec
rcr
sbb
cmp
out
mov
push
pop
xchg
xchg
and
repz
jae
ss
or
xchg
mov
lods
aam
jl
dec
add
adc
cmp
mov
rcrl
popf
das
arpl
movsb
shl
pop
ja
inc
hlt
cli
pushf
dec
daa
inc
xchg
inc
gs
mull
dec
and
adc
mov
jns
push
div
xor
data16
lret
or
jmp
or
and
lds
pop
mov
mov
and
pop
sbb
loope
and
ljmp
frstor
stc
sti
jno
add
imul
pop
rorl
lea
rclb
xchg
adc
sub
jecxz
nop
mov
xor
add
mov
push
stc
xchg
nop
lods
fs
push
xor
aam
push
cli
adc
test
das
xchg
cmpsl
aad
dec
inc
ret
test
mov
inc
add
mov
or
mov
add
int
in
mov
sub
cmp
rcrl
pop
xor
add
xchg
mov
mov
pusha
pcmpgtd
popf
clc
mov
mov
pop
fs
or
jle
xchg
jo
mov
lods
or
xchg
ret
addr16
and
mov
pop
sub
js
sub
pushf
daa
lret
fnstsw
jo
xchg
jae
hlt
lcall
pop
pop
test
popf
sar
test
cmp
stos
popa
je
push
jl
mov
je
ret
lahf
gs
mov
cmp
fsubr
adc
cmp
xchg
out
out
stc
imul
int
add
rorb
iret
js
pop
pop
dec
fld
in
jae
test
mov
inc
mov
cmc
jg
scas
mov
mov
ret
pushf
je
jno
movsb
ljmp
sti
in
mov
fnstsw
ja
xor
jge
mov
gs
cmc
mov
jne
pop
inc
ja
sub
pop
imul
inc
xor
pushl
sub
adc
cmp
mov
cmc
sbb
icebp
test
add
shl
hlt
add
adc
pushaw
das
cmc
push
in
adc
hlt
fwait
pusha
mov
and
sbb
jl
ljmp
adc
lret
dec
inc
mov
jbe
cmp
stos
jno
sub
dec
sub
pop
repnz
sub
jecxz
test
jmp
sub
fstp
mov
movsb
push
fcom
fldt
mulb
inc
andl
dec
push
mov
cmp
jg
sbb
and
shlb
out
jne
xchg
repnz
jle
jle
aad
push
cmp
nop
cmp
data16
fwait
xchg
inc
mov
lret
popa
lret
push
mov
mov
in
sbb
cltd
stc
sub
mov
stos
xchg
dec
cmp
jns
fstpl
cmp
sub
push
enter
js
add
subb
xchg
and
shll
arpl
xchg
mov
pop
pop
adc
jecxz
adc
xor
loop
mov
add
jne
push
push
mov
sub
sbb
xchg
gs
imul
pop
daa
mov
repz
push
mov
pop
mov
icebp
int3
aam
push
loop
mov
jl
cmp
insl
jmp
adc
mov
xor
pop
mov
das
sub
movsb
icebp
mov
mov
xor
xchg
scas
cld
jae
lea
jle
enter
mov
int3
mov
xchg
out
push
pusha
icebp
push
lods
pop
pop
iret
fsubl
mov
jecxz
sbb
and
or
std
shlb
xchg
ret
out
or
out
enter
leave
les
out
mov
xor
pop
loope
cmp
subb
subb
pop
xor
aas
dec
aad
clc
mov
ret
dec
ds
mov
lahf
jmp
cmc
gs
out
roll
inc
inc
or
daa
out
pop
call
in
xor
sbb
fs
stos
out
mov
sub
sub
adc
ret
push
sbb
sbb
fs
int
daa
int
aam
ret
push
dec
lahf
push
xchg
out
shll
subl
push
mov
xchg
stos
lret
and
xchg
scas
lea
scas
inc
cld
insb
iret
xor
in
in
push
mov
cs
add
inc
add
subb
cltd
mov
push
movsl
data16
lcall
cwtl
mov
dec
sub
mov
daa
cmpsb
inc
pushf
cmpsb
mov
lret
shlb
lods
pop
lahf
mov
shlb
pusha
push
adc
pushf
imul
repnz
dec
pop
lahf
andb
lock
xorb
out
fcomi
sub
cmp
test
cwtl
ret
push
movl
xchg
lds
cmp
arpl
xor
mov
adc
lods
sub
adc
das
ja
lock
ljmp
lret
mov
iret
cmp
mov
push
aaa
fstp
inc
mov
sbb
inc
mov
push
xor
test
mov
jne
or
test
mov
xlat
mov
es
jle
xor
mov
and
sbb
jns
in
sub
xor
leave
shlb
mov
cli
sbb
push
mov
pop
push
test
sbb
mov
cmpsb
mov
aam
jno
stos
daa
out
push
subl
lcall
loopne
pop
and
jp
adcb
aas
clc
mov
inc
adc
cli
and
pusha
jb
ret
jecxz
add
pop
mov
cmp
mov
mov
in
mov
and
out
insb
mov
cmp
push
or
xchg
mov
divl
jne
xchg
inc
inc
out
adc
fwait
aad
out
xchg
push
mov
add
outsb
xorb
rcr
notb
nop
dec
scas
pushf
xchg
mov
lret
aas
addr16
inc
mov
push
fstpl
ljmp
es
adc
aam
pop
jge
push
bound
movd
and
or
and
popa
sbb
ret
inc
loopne
cmc
pop
dec
iret
mov
sub
inc
and
cmpsl
testb
clc
aaa
add
inc
jmp
test
mov
mov
lea
xchg
pop
leave
cmovae
mov
add
mov
xchg
xor
dec
mov
push
cmp
sub
cmpsl
mov
inc
inc
push
loope
xchg
jo
mov
jne
out
push
aad
push
mov
adc
cwtl
mov
pushf
daa
pop
je
xchg
and
dec
hlt
xchg
negl
imul
xchg
pop
negb
mov
aaa
push
ret
sahf
mov
mov
sbb
adc
push
aad
lds
fidivs
push
jo
xchg
jg
mov
bswap
stc
mov
loope
loope
mov
lahf
mov
and
or
xlat
loope
inc
sbb
test
ficomps
or
fmul
popf
rolb
jns
sub
push
call
mov
sub
jle
iret
jnp
xlat
mov
adc
out
jno
push
mov
jp
js
dec
out
mov
jp,pt
or
movsl
jl
pop
inc
xchg
sub
push
mov
pop
pop
sub
andb
arpl
cmc
adc
adc
jnp
pop
enter
ja
sbb
adc
iret
push
push
lcall
nop
sbb
hlt
out
mov
ret
mov
sti
cmp
xchg
cmpsl
jno
adc
int
push
jbe
cmpsl
inc
loop
mov
inc
cs
out
addr16
cmp
dec
enter
out
imul
jle
and
push
adc
add
jnp
push
xor
xchg
mov
push
mov
cmp
dec
xor
sub
das
push
pop
movsl
cs
popl
mov
xlat
lea
inc
int
lea
jne
cmp
fimull
sub
int3
jmp
cmp
sarb
or
hlt
xchg
inc
sbb
fsubr
out
jecxz
ret
ja
nop
push
inc
pop
dec
mov
jle
cmpsl
movsb
push
int3
lret
outsb
inc
jg
adc
add
push
sub
seto
pop
decb
cltd
sbb
cmp
sub
in
sbb
or
cli
xchg
lods
sbb
push
cmp
xor
or
push
push
mov
sbb
jo
xchg
xor
pop
inc
inc
adc
int
je
xlat
jg
xor
jl
mov
pop
pop
sbb
cli
es
cmpsb
lcall
lret
roll
mov
inc
cmp
adc
mov
mov
nop
jno
into
dec
data16
mov
cmp
cs
mov
cli
adc
decl
gs
mov
imul
add
or
mov
pop
call
repz
adcb
push
out
adc
cwtl
adc
inc
jo
pusha
dec
jmp
ret
and
jno
adc
push
icebp
movsl
sub
jg
fistpl
and
movsb
or
sar
jb
test
cmpsb
pop
push
ljmp
lea
mov
mov
cmp
xlat
aaa
loope
adcb
inc
lods
mov
and
fsubs
xor
lea
lods
mov
sbb
push
adc
add
push
sbb
or
ror
test
gs
and
pop
cmp
sbb
rcrb
daa
xchg
mov
cmpsl
mov
lahf
dec
sbb
in
or
mov
lods
mov
shlb
or
ljmp
ret
imul
xchg
or
jbe
mov
xor
lahf
or
vmread
test
push
clc
loop
pop
bound
pusha
shl
fcmovnbe
adc
mov
test
mov
mov
into
sahf
cmp
fisubl
addl
xor
ds
fildl
or
sub
jb
shlb
imul
cmp
or
mov
sub
loope
inc
jg
pop
gs
push
stos
fistl
mov
push
daa
sbb
pushf
or
pop
inc
aaa
and
popf
lret
out
jl
pop
push
pop
pop
lcall
ret
jno
and
xchg
test
adc
mov
adc
shll
xchg
mov
or
loopne
xor
div
imul
xchg
mov
add
pop
ljmp
cmp
mov
dec
push
cwtl
dec
aad
push
ja
mov
lods
pop
popa
jno
test
ja
jle
inc
cltd
adc
lahf
aaa
inc
jmp
and
sarb
int
fcompp
pushl
mov
mov
clc
imull
outsb
mov
into
jp
xchg
sbb
clc
repz
movsl
stos
lock
cmp
ja
hlt
mov
mov
mov
add
shll
lahf
and
insl
aas
mov
cld
mov
add
adc
cmp
and
fsubr
imul
add
cld
push
or
daa
cmpsb
sbb
push
int3
les
loop
push
repz
jmp
xchg
test
xlat
push
inc
sahf
in
pop
mov
adc
xchg
je
push
rep
xor
enter
lfs
in
loop
jle
mov
push
xchg
cs
inc
sub
into
push
icebp
jle
in
aaa
aam
fcoml
repnz
fwait
test
or
cld
push
inc
sahf
stos
test
shll
cli
cmc
sub
sub
mov
mov
jge
and
jb
xchg
orb
adc
movsb
ret
push
mov
cld
xchg
dec
subb
popa
test
es
aas
hlt
or
xchg
test
sub
push
fnstenv
movsb
sbb
mov
cltd
test
push
fdivl
sbb
pop
dec
sarb
pop
repz
cmpsl
cmc
enter
pop
adc
pop
addb
rorb
add
mov
dec
in
lret
or
repnz
test
dec
test
add
daa
ret
xchg
or
sbb
ljmp
cmp
mov
sub
push
sbb
les
and
test
cmp
sbb
ljmp
in
outsl
jle
pop
insl
dec
pop
in
mov
cltd
sbb
pop
sub
iret
inc
mov
hlt
outsl
inc
lods
in
testl
add
repnz
shrl
adc
or
outsb
rcr
mov
adc
jle
scas
dec
inc
int3
arpl
je
adc
popf
cmp
and
fldenv
mov
pop
pop
ds
testb
jge
mov
ja
mov
sub
stos
xchg
pop
mov
adc
pop
insl
cwtl
arpl
movsl
pop
push
push
xchg
fdiv
inc
mov
jp
jg
lods
sbb
pop
sub
pop
inc
sub
enter
push
fsts
insl
fstps
mov
mov
fnstsw
int
lds
mov
xchg
insl
jno
andl
jb
jno
xchg
sub
fsubl
sub
int3
stos
mov
push
mov
jmp
or
ss
jmp
xchg
mov
lock
notl
xchg
and
xchg
jl
sbb
pavgb
fcmovnu
add
movsb
pop
sub
mov
fs
sbb
jge
add
or
icebp
mov
pushf
inc
in
mov
ljmp
mov
sub
call
icebp
sbb
dec
and
push
pop
sti
andb
dec
add
out
nop
popa
idivb
jno
mov
or
repnz
dec
lods
mov
push
enter
imul
xorb
pop
lcall
add
sahf
jo
icebp
mov
lock
ret
pop
cmc
mov
cmpsb
fs
cmpsl
out
adc
lret
bound
bound
adc
jge
popa
dec
mov
test
xor
cmp
jle
xor
adc
mov
dec
adc
out
and
mov
xor
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
fdivs
inc
add
push
inc
test
push
pushf
nop
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
