push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
subl
lea
push
xor
sub
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
daa
mov
notl
dec
mov
or
dec
mov
std
sahf
inc
sbb
add
adc
aad
sub
roll
push
add
outsl
jg
adc
pushf
and
bound
in
push
cmp
push
and
xchg
inc
pop
xchg
bound
and
call
jo
pop
popf
cmpsb
into
sarl
test
inc
xlat
xchg
in
mov
dec
sbb
in
push
adc
inc
cs
clc
fwait
sub
loopne
aam
xchg
fists
aad
sbb
cmp
cwtl
xor
cmc
jg
mov
sbb
dec
into
xchg
dec
repz
push
mov
mov
imul
cmpb
cltd
pop
pop
sbb
insb
push
outsl
icebp
pop
sub
xor
ficoml
andl
xlat
ljmp
xor
repnz
sbb
push
xor
fidivl
ja
leave
std
adcb
mov
insb
push
lcall
sti
mov
mov
loopne
jge
pop
push
push
mov
in
and
ja
test
push
out
push
idivl
scas
rclb
jmp
sub
mov
in
in
scas
mov
pop
repnz
iret
pushf
inc
or
adc
jmp
shlb
cli
nop
push
sar
into
sub
and
fisttps
adc
jp
imul
std
add
insb
pop
mov
push
dec
xchg
mov
add
xchg
sti
cmp
test
add
test
sbb
arpl
or
mov
stc
push
dec
imul
hlt
jge
mov
mov
mov
cmp
sub
mov
mov
adc
out
test
xchg
mov
mov
sbb
sub
adc
syscall
add
inc
jbe
mov
xor
scas
xor
frstor
jo
aam
xor
loope
sub
push
push
pop
aas
xlat
js
add
mov
inc
or
or
or
xchg
pop
jp
sbb
out
negl
ds
or
xchg
add
dec
push
push
call
enter
cmpl
mov
int
repnz
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
xor
push
adc
adc
adc
jb
out
out
mov
call
ds
cwtl
push
mull
fs
loop
sub
push
jge
and
cwtl
or
xor
sub
mov
dec
and
or
cmpsb
mov
mov
cs
test
mov
mov
clc
mov
jmp
fistps
xchg
cmp
xchg
push
cltd
dec
jl
add
and
add
sub
mov
xor
push
or
push
add
mov
packuswb
and
lcall
mov
sub
fmuls
mov
andl
pop
or
das
push
cmp
jl
push
js
fidivl
repz
aaa
xchg
nop
sbb
lret
shlb
repnz
sbb
jns
popa
pusha
push
mov
pop
pop
daa
dec
cld
ljmp
ja
jmp
dec
test
push
cmpsb
sahf
cmpsl
adc
mov
push
movb
mov
daa
adc
push
int
pop
jg
jns
js
movsl
out
std
mov
pushf
fstpl
sub
insb
ljmp
pop
xchg
inc
add
mov
or
sub
add
dec
jp
mov
mov
test
int
imul
out
dec
jle
dec
sbb
inc
leave
sbb
dec
scas
cmc
loopne
dec
push
or
inc
mov
popa
sbb
sub
mov
cld
gs
jns
mov
mov
enter
cltd
xchg
fisubrl
sbb
int
jae
lods
cmp
inc
loope
sub
push
pop
push
sbb
jg
test
cld
mov
imul
dec
mov
test
imul
int
ficoml
lcall
mov
fcmovnu
adc
ficoml
add
testl
push
js
loope
inc
pop
inc
inc
lds
shlb
and
rcr
mov
loopne
outsb
popf
mov
outsl
xchg
dec
pop
mov
push
out
mov
adc
or
mov
mov
mov
loop
xor
xor
add
arpl
adc
mov
cwtl
orb
divb
lret
xor
sbb
ljmp
inc
stos
or
sbbl
jno
and
cwtl
xor
data16
movl
cmp
jg
mov
insb
call
psubw
push
inc
ljmp
or
mov
sub
in
loopne
mov
and
pop
pop
leave
mov
or
dec
dec
cmpsl
mov
jmp
xchg
and
test
lahf
add
mov
xchg
popf
popf
inc
popa
lret
mov
adc
xchg
addr16
insw
inc
sbb
add
nop
pusha
aam
movsl
insl
ja
cmpsb
mov
mov
pop
fisttpl
sti
cwtl
into
pop
push
xchg
lcall
mov
add
push
adcl
hlt
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
push
sbb
stc
cmp
xchg
stc
rcrl
xchg
vpcomd
cli
aaa
es
mov
xor
je
dec
hlt
jmp
push
mov
movsl
call
lret
lret
and
ss
in
lahf
js
lret
notb
jno
scas
inc
push
mov
mov
or
xchg
mov
mov
push
mov
cmp
add
shl
sub
pop
inc
insb
mov
push
push
mov
bound
cmpl
fisubrs
out
lds
mov
or
dec
mov
es
mov
add
js
shll
add
ds
in
xor
flds
lock
popf
call
add
shll
push
mov
dec
je
sar
dec
or
nop
inc
pushw
lods
xor
std
adc
mov
mov
sbb
jmp
dec
add
sbb
xor
iret
pushf
scas
mov
push
dec
lods
xor
outsl
and
cld
fdivrl
push
jecxz
jle
cmpb
andb
aad
sub
and
stos
cmovne
add
and
mov
loope
jle
ja
movsb
mov
mov
xchg
jl
xchg
mov
lret
insl
sbb
jg
jno
xor
dec
mov
lret
fildl
pop
enter
or
aas
adc
mov
pop
aas
loope
push
dec
mov
repz
adc
or
pushf
cmp
mov
cmp
xchg
jmp
lods
cmp
mov
out
pushf
paddusw
mov
sbb
cmp
sbb
test
aad
adc
sahf
inc
adc
hlt
dec
jl
fisttps
sub
fcomps
mov
cmp
arpl
adc
push
bound
and
clc
mov
and
dec
xchg
mov
fisubrs
or
ret
mov
int
sbb
cli
mov
push
mov
jns
inc
mov
or
lds
or
mov
mov
add
sbb
and
xchg
rorl
cmpsb
icebp
stos
out
out
xchg
rorb
daa
lcall
test
jns
adcb
loope
push
mov
inc
fnstcw
cmp
andb
mov
and
popa
inc
jns
dec
loope
in
lret
inc
xchg
jge
mov
lods
xchg
push
sub
loope
jno
jge
inc
jmp
inc
out
das
sbb
pop
fs
ret
pop
mov
or
push
lret
out
pop
bswap
out
icebp
push
inc
jp
push
or
loop
inc
stos
adc
cmp
push
jl
fisttpl
imul
rolb
daa
lahf
ljmp
jne
ficoml
call
jecxz
popa
add
inc
xchg
popa
and
sbb
cmp
sub
add
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
sbb
push
call
adc
adc
cltd
push
icebp
pop
mov
and
mov
cmc
cmpsl
rclb
fadd
je
push
pusha
pusha
push
xorb
orl
push
mov
int
call
je
ret
xlat
aas
mov
or
orl
and
out
shl
jne
dec
lret
and
mov
mov
push
mov
add
cwtl
sbb
sbb
movsb
and
mov
xchg
and
pop
mov
mov
adc
cli
ret
pop
adc
out
arpl
pop
sbb
inc
cli
lods
mov
pop
add
cmpsb
outsl
sbbb
mov
xchg
decl
popl
jo
mov
hlt
mov
fadd
repnz
and
jnp
push
les
pop
es
dec
pusha
xor
sub
sbb
sub
imul
and
adc
ljmp
xchg
mov
and
jg
or
inc
inc
negb
push
jp,pt
pusha
sbb
mov
pop
loope
out
lock
aam
sbb
xor
adc
sti
stos
or
push
and
pop
shlb
dec
xor
adcl
fwait
mov
outsl
jl
and
shrb
mov
xchg
icebp
fmulp
jp
nop
fisubrl
push
test
test
push
dec
outsb
lret
xchg
push
add
out
add
fwait
daa
shrl
aam
sbb
test
xchg
adc
outsb
inc
shrb
and
icebp
scas
stc
jmp
pop
push
pop
idiv
xchg
call
adc
inc
ffree
push
pop
dec
and
pop
cli
mov
dec
arpl
xchg
fmuls
out
add
arpl
jbe
fsubs
cmp
inc
sbb
cli
iret
loopne
repz
lock
pop
fidivs
jmp
pop
push
lods
mov
push
in
mov
add
sbb
test
outsl
jecxz
mov
or
notl
jmp
popa
std
outsb
xchg
arpl
arpl
fmull
or
cmpsl
dec
lahf
mov
roll
leave
adc
adc
ljmp
inc
std
xor
jae
xor
std
ret
or
pop
xor
rorb
hlt
es
adc
lret
sub
dec
mov
stos
cmp
sub
aam
xchg
shlb
fists
out
imul
pusha
popf
or
pop
fsubr
js
popa
out
mov
inc
imul
sbbb
repz
lods
xchg
out
dec
fsubrl
repnz
arpl
leave
and
jns
mov
ljmp
pushf
ljmp
popa
lods
sbb
mov
mov
adc
add
mov
jne
int3
std
and
sti
jno
sti
push
rorb
lods
popa
int3
inc
pop
je
dec
andl
movsl
mov
daa
mov
and
push
mov
jmp
xchg
cmp
scas
and
shlb
movq
push
push
mov
mov
sbb
sub
sti
add
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
lods
aad
lods
dec
std
adc
adc
adc
test
pop
dec
jle
mov
sbb
cmpsb
xchg
loop
adc
xchg
aas
repnz
repnz
jp
mov
mov
popf
dec
imul
loop
cld
addr16
jl
pop
xchg
mov
inc
mov
jb
ja
push
and
push
cmp
popa
adc
loopne
stc
aam
inc
fwait
les
cmp
mov
xchg
cmp
daa
inc
dec
jbe
xchg
inc
jmp
add
int3
dec
xor
adc
and
sti
inc
adc
divl
xchg
div
mov
add
lret
xor
pop
popa
xor
negb
cmp
mov
jge
loopne
dec
gs
push
js
jbe
bound
je
xchg
sub
add
or
jb
idivb
addr16
mov
addr16
out
pop
and
sub
das
add
inc
and
cld
mov
clc
negb
movsb
mov
cmpsb
mov
cmpsl
stc
xor
es
add
mov
out
inc
mov
jo
es
and
mov
in
ja
fs
loop
iret
out
cwtl
pop
mulb
mov
sub
jbe
lea
mov
jmp
mov
enter
gs
stos
aaa
pop
xchg
jns
lds
jae
outsl
daa
cmp
scas
xchg
sarl
sub
fwait
adc
outsl
stos
sub
aaa
sub
les
roll
sahf
nop
sbb
sbb
aam
inc
pop
dec
dec
fidivl
inc
mov
lret
pop
sbb
icebp
das
rcr
fwait
add
add
out
ds
lock
cmp
nop
shlb
adc
aad
mov
sti
adc
sbb
pusha
mov
in
jp
imul
cld
and
fidivs
inc
pusha
pop
stos
sbb
dec
and
fs
movsb
adc
lahf
scas
fsubs
ja
js
push
lds
xchg
rcrb
scas
aas
int
leave
jns
xlat
out
mov
jg
jnp
ja
or
dec
adc
jecxz
aad
rorl
cmp
or
mov
push
pop
loope
aas
jns
jp
dec
jge
or
mov
int
mov
aam
adc
cmp
mov
xor
add
pop
ds
int
aad
in
xor
roll
push
fadd
imul
jno
sub
jo
mov
loop
loopne
into
ja
daa
xor
lock
adc
xor
pushf
icebp
and
mov
decb
repnz
mov
xchg
mov
mov
mov
push
pusha
lods
mov
aam
push
xor
in
sarl
stc
xchg
enter
pop
mov
ja
jge
sub
leave
ficomps
sub
sbb
mov
inc
sbb
pop
and
dec
jp
push
add
ds
push
xchg
jns
roll
into
dec
mov
cmp
fmuls
sbb
scas
lret
lds
inc
push
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
pusha
mov
adc
adc
or
jl
iret
sub
std
roll
pop
push
push
dec
popf
lahf
aam
adc
call
pop
push
mov
andb
add
cmp
mov
jns
xor
jnp
mov
shlb
test
icebp
pop
scas
addb
fdivrs
sahf
mov
or
leave
jo
xor
mov
out
mov
push
adc
leave
nop
and
movsl
inc
lcall
out
or
inc
aaa
subl
push
mov
jmp
scas
int
mov
add
add
stos
shll
mov
cmpl
jge
or
mov
iret
leave
pop
sub
mov
inc
nop
loopne
lods
daa
or
cmp
push
dec
decb
std
and
dec
mov
and
add
fwait
and
jae
inc
insl
bound
pop
lock
movsl
aad
jmp
data16
jge
cmp
sti
stos
xor
mov
lds
adc
fdivrl
in
jl
lcall
sbb
xchg
mov
ljmp
xchg
mov
and
dec
pop
cmp
or
jns
mov
xchg
mov
adc
ja
std
add
mov
xchg
shl
enter
or
mov
xchg
sub
ficompl
pop
iret
in
xor
insb
xlat
mov
or
xchg
mov
sub
pop
mov
mov
lods
icebp
out
in
in
or
add
dec
push
add
mov
fisubl
push
jecxz
jno
lret
add
jno
test
cli
jno
clc
in
cmp
outsl
addr16
push
imul
jge
xchg
inc
sbb
pusha
out
iret
cmpsb
jle
jp
adc
mov
aaa
pop
shr
add
inc
xchg
dec
mov
cli
xor
dec
xor
ret
repz
fsubp
outsb
xor
js
dec
pop
xchg
ja
xor
adc
jbe
arpl
push
int3
pop
push
add
fdivr
jno
jo
push
adc
and
inc
loope
je
ret
push
in
je
aaa
adc
push
pop
and
pop
scas
pop
mov
push
dec
or
das
loopne
nop
pop
xlat
dec
into
sbb
popf
mov
pop
jl
pop
mov
test
daa
mov
xor
rolb
call
mov
jle
jbe
out
rcr
adc
xchg
mov
xchg
scas
cmp
sti
jg
xchg
cwtl
mov
mov
int3
lock
orb
sahf
jle
faddl
popa
and
inc
cmp
in
es
push
push
out
cmc
cmp
ss
sub
pop
pop
dec
les
repz
daa
loop
cmpsb
jnp
cmp
mov
sub
movsl
and
dec
arpl
shrb
clc
inc
or
adc
add
and
xchg
adc
inc
int
pop
rcll
mov
and
insl
or
mov
jmp
xchg
cltd
bound
and
push
jo
test
adc
adc
adc
movsl
test
test
out
mov
mov
jb
outsb
xchg
jno
xchg
push
add
push
pop
loope
cs
decb
fld
ss
lods
sbb
test
call
leave
loope
in
aaa
lret
sahf
mov
in
mov
inc
out
dec
insl
cmp
jge
mov
jne
fcomp
sbb
fdivrs
dec
pop
or
lds
pop
xor
aas
call
xchg
mov
shll
sti
cwtl
ret
mov
fisubl
rcl
inc
adc
daa
pushf
xchg
js
repz
or
and
push
in
ret
mov
or
inc
ss
mov
pop
lahf
pusha
data16
in
mov
loope
xor
xchg
jl
adc
and
mov
sti
sub
pop
pop
mov
xor
pop
bound
lds
xchg
jecxz
iret
scas
orb
push
push
pop
xchg
pop
pushf
dec
js
stos
inc
bnd
icebp
mov
xchg
mov
mov
mov
fwait
popa
call
pushl
jb
dec
xchg
lock
or
mov
jg
pop
in
sbb
std
cs
xchg
xor
ds
xor
jg
ja
adc
out
and
test
mov
js
into
stos
mov
xchg
stos
sub
scas
insl
popf
lret
dec
fsubrl
xchg
xor
add
adc
inc
cmpsl
dec
testb
pushf
sub
daa
cmp
aad
test
loopne
push
push
outsb
rol
ret
inc
inc
fstpl
andb
sbb
fdivrl
add
jo
mov
sahf
pop
push
sub
pop
xchg
cmp
repz
out
or
cmp
pop
lds
pop
and
and
fcompp
xor
daa
dec
leave
sub
mov
sahf
leave
dec
dec
shlb
popf
inc
sti
pop
addr16
adc
xchg
jg
sub
push
jb
xor
jbe
push
lea
xlat
sahf
mov
jp
mov
or
fldenv
rcrl
out
sbb
enter
sbb
or
pop
sti
test
outsl
mov
mov
xchg
loopne
int3
es
int
mov
or
mov
int
scas
cmp
or
mov
sub
xchg
mov
and
sub
fstpl
fcmovb
cltd
xor
inc
and
mov
jp
aad
jg
inc
jns
je
enter
into
push
jns
or
pcmpgtw
pop
xchg
enter
int3
adc
leave
leave
leave
aas
pop
pop
movb
jae
insl
ja
div
push
xchg
cmp
mov
sbb
in
in
and
mov
cmpsb
fimull
mov
movsl
cltd
sbb
pop
mov
nop
xlat
into
and
mov
sarb
pushf
xor
sub
jae
iret
aad
mov
lods
roll
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
es
cmp
adc
adc
adc
addr16
push
negl
xchg
inc
push
daa
jo
in
mov
inc
loopne
lret
scas
xor
outsl
jo
pop
pop
lret
std
pop
int
ret
cmp
out
out
int
xor
xchg
jmp
fmul
das
push
rcrb
add
push
push
repnz
jp
loopne
cmp
outsb
adc
xchg
dec
shll
into
imul
push
lret
xchg
dec
pop
negl
push
push
fs
leave
xchg
xchg
lret
lcall
add
ret
push
jb
dec
out
neg
or
rcll
js
pushf
cmp
ds
mov
aas
push
jnp
dec
xchg
add
rcr
jg
mov
inc
pusha
ffree
ja
leave
test
scas
push
ljmp
out
rcll
cmp
and
inc
cmp
pop
in
fdiv
and
ljmp
mov
mov
xor
xor
leave
dec
adc
movsb
jl
scas
xchg
stos
std
stc
push
mov
mov
xchg
mov
fdivr
filds
aam
pop
dec
xchg
test
mov
jmp
mov
loope
fdivs
add
sahf
xorb
add
in
data16
scas
cmp
jae
subl
pop
pop
jo
jmp
jl
jecxz
clc
ljmp
ljmp
arpl
scas
cltd
pop
mov
outsb
jae
jbe
stos
cli
xchg
je
adc
xor
mov
push
lcall
gs
mov
cmp
outsl
lock
or
arpl
pop
hlt
jno
add
lret
sub
xchg
mov
outsb
inc
flds
push
jno
pop
or
cmc
xchg
mov
bound
xor
cmp
adc
dec
std
popa
cmp
test
sbb
lgs
pop
xchg
rorb
ret
adcl
popa
inc
jnp
mov
xlat
js
adc
xchg
cwtl
testb
sub
or
into
push
in
fcmovne
pop
out
fdiv
sbb
or
adc
sub
pop
jnp
sub
je
dec
sub
cmpb
add
shr
les
repz
xchg
lods
lods
push
mov
in
repnz
lcall
int3
out
or
xchg
sub
les
call
jbe
lret
xor
add
mov
int
pop
jl
pop
pusha
daa
and
outsb
or
ds
jae
fsts
loopne
insl
dec
pop
sub
cmp
stos
dec
sbb
sub
mov
loop
adc
xchg
sti
pusha
or
adc
test
xchg
fsubl
cwtl
inc
out
adc
popa
add
pop
jecxz
dec
pop
sarb
sub
dec
dec
mov
push
mov
xor
push
leave
sahf
movsl
fwait
cmp
aad
and
into
sbb
jb
sub
jecxz
shll
leave
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
and
js
loopne
adc
adc
mov
sub
xchg
stos
stos
out
scas
into
iret
dec
push
fidivs
and
add
push
mov
aaa
out
cmpsb
mov
jg
xor
into
or
inc
jmp
sahf
les
xor
or
fbstp
flds
push
outsl
mov
mov
push
pop
sbb
pop
mov
or
sub
stc
and
das
dec
cmc
mov
adc
jno
gs
or
add
xchg
fiaddl
cwtl
fimull
shll
inc
cli
popa
push
loope
xchg
add
aas
cmp
clc
loop
inc
or
cmp
adc
shrb
jno
jbe
pusha
mov
sahf
inc
mov
test
fdiv
ss
nop
int
sbb
popf
sub
mov
jmp
push
ds
ret
push
andl
and
jno
mov
jno
sub
and
loope
lcall
mov
loope
cmc
pop
jp
test
pop
and
sub
cmpsb
push
lods
imul
adc
daa
stos
in
aaa
push
icebp
cmp
xchg
mov
xchg
cmp
jno
jb
call
sti
cltd
jae
lret
inc
dec
lahf
sub
stos
repz
into
ficomps
and
scas
sahf
xchg
adc
dec
push
xchg
push
pop
inc
xor
cltd
fwait
adc
fwait
adc
outsl
popf
jg
lcall
in
jnp
fsubl
or
sub
aam
xor
lahf
lock
inc
adc
cmc
repz
lods
sti
imul
xchg
jno
stos
pushf
cmp
jnp
in
sbb
pop
cmp
popf
push
leave
stos
icebp
lds
push
dec
push
insb
pop
jns
jne
jl
mov
in
imul
push
popf
icebp
pop
xchg
mov
mov
xchg
pop
sub
incb
sbb
movsl
xchg
std
push
cmp
test
aad
in
out
and
pop
mov
sbb
inc
es
lea
vpcomw
pushf
mov
frstor
ss
cltd
jns
enter
add
jecxz
mov
int3
cmp
mov
dec
insl
push
adc
mov
sub
jbe
imul
repz
xor
dec
data16
push
pop
out
test
inc
push
popf
sub
xchg
sahf
cmpsb
das
movsb
popa
popa
mov
shll
xchg
jl
push
mov
outsl
pusha
pop
gs
mov
mov
pop
les
cmovp
into
and
sub
pop
out
jmp
push
cmp
out
adc
pop
jae
ss
mov
aam
add
pop
gs
adc
addr16
pop
jp
sbb
jle
jl
js
lret
cmpsl
inc
lds
xchg
test
repz
jo
mov
add
fists
jne
stos
arpl
movsl
pmuludq
lcall
pop
lahf
mov
ficomps
data16
stc
cmp
adc
jp
push
mov
call
sbb
add
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
adc
js
fcoms
adc
adc
repnz
xlat
pop
jae
pop
push
pop
lcall
xchg
test
jle
hlt
mov
xchg
dec
xchg
test
enter
mov
aad
xor
adc
xchg
cmp
inc
cmc
ds
out
push
cwtl
push
movsl
dec
mov
enter
into
hlt
cmp
or
mov
add
sti
mov
pop
fisubrl
xor
ss
pop
test
in
pop
out
inc
cmp
xchg
adc
add
or
dec
inc
in
pop
popf
push
out
mov
jp
inc
loop
jnp
jle
in
sti
mulps
bound
jbe
push
xor
inc
pushf
adc
lahf
jo
lret
cs
adc
xchg
dec
or
push
dec
out
add
adc
add
cmp
call
mov
lods
daa
lret
adc
stos
sub
and
push
ret
inc
loop
dec
pop
dec
pop
pop
out
jo
scas
cmp
push
push
cmp
mov
imul
jge
cmp
inc
sbb
add
in
mov
mov
cmp
data16
stc
ss
dec
cmp
je
aas
lret
xchg
scas
fstl
fiadds
sarl
cmc
cltd
mov
jnp
cmp
outsb
push
jb
mov
addr16
fisttps
iret
inc
std
or
repz
xor
mov
jb
scas
mov
orl
push
stos
mov
and
dec
addl
xor
jne
push
lcall
and
fsubrl
or
testl
pop
add
fs
pop
jge
mov
xor
or
jp
lea
cmp
lea
inc
xor
lock
xor
push
pop
fucomip
pop
mov
or
ljmp
xorl
mov
addr16
loop
push
hlt
jmp
pop
pop
cld
cld
xchg
mov
inc
rorb
dec
ds
cmp
pop
mov
jo
sbb
mov
jle
lods
loope
mov
sbb
pop
and
js
in
sub
movsl
int
dec
pop
jo
in
popf
pop
aaa
xor
stc
lcall
loope
dec
jle
or
jg
sbb
std
stos
cmp
rolb
adcl
xchg
je
jge
int3
into
pop
cmp
ljmp
adc
ret
test
pop
rolb
or
outsb
add
mov
pusha
test
fnstcw
inc
sub
and
sarl
sub
sbb
ljmp
hlt
mov
out
jp
popf
add
leave
push
or
pop
rorl
icebp
fiaddl
push
lods
shlb
je
add
xchg
pop
xchg
stc
ficompl
pop
das
scas
sub
or
out
xor
shrb
pushf
fistpl
add
lods
sbb
mov
mov
sbb
or
test
sub
xchg
mov
int3
adc
sarl
mov
sbb
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
add
adc
adc
pushl
aam
xor
mov
mov
push
fsubl
aam
lret
imul
add
aad
les
in
mov
cmp
inc
mov
or
mov
add
hlt
cmc
mov
in
ja
mov
mov
ss
mov
arpl
jo
lock
push
addr16
mov
testb
bound
ss
mov
js
arpl
out
jae
xlat
std
arpl
pushw
adc
lret
das
adc
js
data16
mov
mov
adc
es
dec
jae
xor
jns
gs
hlt
scas
pusha
jb
movsl
mov
js
std
pop
mov
popf
cltd
mov
pop
add
outsb
cld
cmpsl
aas
cmp
mov
scas
xor
cmp
nop
ja
mov
ja
sti
icebp
rcl
jg
mov
mov
mov
adc
cmc
push
outsb
jno
scas
in
or
mov
cmc
jmp
xchg
xchg
sub
inc
push
push
inc
dec
nop
int
and
pop
fsubr
sbb
jmp
mov
ret
jno
sub
push
flds
mov
adc
call
clc
hlt
shlb
test
inc
mov
enter
fists
inc
test
jmp
cmp
sbb
jae
add
fbld
push
js
dec
jne
xorl
je
repz
mov
mov
mov
pop
mov
push
sbb
int3
data16
enter
icebp
daa
sahf
mov
add
jmp
daa
cmpsl
les
jmp
xchg
movsb
loope
mov
sub
in
daa
lods
push
xchg
aaa
xchg
mov
xchg
loop
or
add
cmp
xchg
xchg
xchg
outsb
sarl
jp
repz
and
std
fs
popf
lahf
jne
ret
push
cmp
pop
dec
cmpsl
loopne
cmp
dec
jne
xchg
mov
fisubs
in
dec
sbb
sbb
xor
sbb
cmp
int3
sub
pop
or
test
xor
mov
adc
pop
aaa
sahf
push
test
mov
cmpsb
cmp
xlat
add
out
pop
mov
fwait
add
sbb
fdivl
stos
sbbl
fimuls
xchg
push
mov
jmp
cld
xchg
mov
out
lods
gs
insl
adc
lret
add
movsb
jae
jecxz
jb
adc
ficoms
mov
das
ss
andb
addr16
repz
xlat
mov
dec
dec
xchg
filds
mov
loope
cs
sbb
xor
mov
lods
loop
xchg
jae
and
pushf
idivb
inc
std
ss
sahf
jae
dec
call
orb
sub
sbb
and
movsb
cmp
mov
rcll
movsl
push
jne
loopne
push
sub
jb
pop
addr16
fst
mov
dec
aam
fidivs
rorl
pop
dec
out
jae
int
shrl
dec
inc
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
pop
addr16
adc
adc
sub
jae
scas
mov
xchg
jbe
lahf
stc
iret
inc
push
adc
ret
cmpsb
mov
jmp
rcll
and
cld
and
scas
xchg
pop
push
fldt
std
jne
clc
mulb
in
jnp
adc
fstps
rcrb
cmp
add
fcoms
out
outsb
test
xor
lock
mov
loop
andl
ret
sbb
pop
cmp
lods
std
rcll
pop
loope
push
imul
xor
push
push
pop
inc
sahf
sti
adc
es
mov
sahf
mov
ret
jns
push
mov
add
popf
sarl
insb
movsl
shll
jp
mov
jl
push
mov
pop
mov
and
pop
int
jge
adc
sbb
cmc
xchg
xchg
andl
mov
mov
mov
and
or
out
jg
addl
pop
fdivl
repz
dec
xor
cmp
add
lods
sahf
mov
push
popf
std
xchg
rorl
shr
pop
pop
inc
push
inc
repz
or
mov
jge
xor
cli
repz
clc
sar
inc
addr16
in
jg
int
mov
sbb
mov
cmpsb
or
int3
cltd
movsl
fldl
push
sahf
out
mov
pop
dec
arpl
enter
inc
out
jl
movsl
lds
outsb
notb
pop
inc
jno
setg
add
mov
xchg
ja
adc
shrl
adc
dec
roll
imul
mov
cli
dec
cmp
ljmp
xor
and
popf
test
rcr
in
pop
mov
dec
cmp
fcoml
lds
jno
push
pop
pop
push
mov
cmpsb
push
jg
rcrl
xor
insb
cs
lcall
fbld
and
in
lods
pop
mov
pop
in
sub
and
push
xor
or
or
das
repnz
ficompl
jnp
out
dec
jg
mov
or
inc
cmp
icebp
add
scas
aad
hlt
xchg
push
xor
mov
je
out
push
jmp
out
push
mov
in
or
mov
adc
cld
cld
insl
mov
leave
and
push
and
jne
xchg
jne
insl
dec
jp
stos
in
orb
and
cmp
out
incl
xor
jne
das
sbb
xor
mov
xor
and
fsubs
xchg
sbb
jae
out
push
in
popf
xor
sbb
std
clc
shrl
imul
lea
jp
mov
aas
test
and
mov
sbb
mov
mov
push
pop
imul
mov
sbb
stc
divl
out
sti
dec
movsl
jbe
sahf
imul
outsl
rcr
mov
sub
xor
jmp
idivl
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
xor
les
adc
adc
push
pop
dec
jmp
lahf
jp
or
xor
dec
add
mov
pop
test
dec
out
mov
ss
xchg
es
mov
or
rcrb
xor
push
sahf
lret
cs
jne
imul
in
pop
mov
out
gs
sbb
hlt
es
std
into
nop
adc
lret
ret
xchg
mov
add
outsl
scas
gs
test
or
and
pushf
shlb
mov
fldcw
shrb
push
fwait
sub
sub
int3
in
popa
xchg
cmp
adc
xor
testl
outsl
xchg
into
xor
test
push
xchg
test
mov
jbe
cmp
pop
icebp
fdivrp
bound
fnsave
lahf
mov
mov
das
repnz
mov
adc
cwtl
add
or
das
xor
xchg
mov
mov
sbb
pslld
mov
add
xchg
in
rcl
or
xlat
xchg
jae
shll
jle
mov
in
int3
mov
xchg
mov
adc
into
rcll
add
aam
pop
stos
filds
and
push
push
outsb
icebp
pop
add
add
adc
adc
sub
out
out
cmp
mov
insb
add
sbb
jb
fadd
pusha
push
iret
jne
xchg
cwtl
sbb
xchg
xchg
dec
cwtl
inc
out
outsl
movsb
jnp
jae
mov
xchg
cmpsl
push
in
in
pusha
mov
es
mov
mov
mov
js
dec
push
mov
enter
outsl
test
mov
call
pusha
jns
jecxz
les
push
ss
inc
pop
mov
xor
sti
cmp
test
sub
adc
jo
imulb
iret
inc
mov
std
stc
and
jbe
xlat
lods
sub
push
test
xlat
xchg
mov
pop
roll
dec
inc
lock
cmp
mov
stc
cmp
adc
enter
cli
jp,pn
jns
lds
xchg
or
mov
mull
xchg
cmp
mov
push
les
xchg
push
popa
sub
mov
je
popf
cmp
dec
sahf
clc
xchg
sbb
sbbl
jno
cs
adc
mov
dec
cwtl
in
ljmp
loope
subb
jecxz
sarl
and
push
mov
cmp
jmp
imul
adc
push
ss
test
ret
jno
out
decl
xor
jne
cmpb
cld
xchg
rorl
call
xchg
xorl
test
nop
shl
inc
push
ret
into
xor
pop
add
pop
inc
xchg
mov
cmovl
and
stc
mov
adc
dec
jb
insb
and
jo
and
adc
test
adc
aas
xchg
int
cmpsb
xor
mov
jg
mov
sti
stc
or
sti
fimull
xchg
xchg
pop
jb
stc
clc
sub
mov
sub
sub
sub
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
add
call
lock
add
lahf
mov
das
xor
adc
movsl
add
push
adc
cltd
cli
mov
push
inc
daa
je
mov
cltd
adc
test
loop
mov
dec
shll
xor
mov
xchg
mov
jbe
pop
jmp
lret
adc
ficoml
mov
add
sub
daa
xlat
push
push
xchg
adc
add
aaa
add
xor
xchg
andl
xchg
ret
jg
adc
mov
gs
or
and
xor
sbb
xor
testb
xchg
pop
loop
or
sub
shl
or
imul
push
hlt
addb
push
icebp
sub
and
adc
movsl
or
cmpsb
into
dec
jb
add
pop
mov
mov
xor
lods
adc
xlat
fwait
cltd
lock
divl
mov
ret
inc
push
mov
inc
and
test
push
enter
cmp
sbb
xchg
xor
aad
dec
mov
lock
iret
bound
adc
cmp
sbb
inc
or
ljmp
aad
iret
ret
das
in
into
cmp
sbb
out
lret
in
bnd
cmp
fnsave
pop
adc
and
iret
loop,pn
pop
lahf
mov
aas
fistl
inc
and
cwtl
xor
ret
dec
cs
mov
push
and
arpl
xlat
ss
out
test
push
stos
mov
rclb
sbb
pop
lock
and
mov
mov
dec
sub
daa
fcoms
fnsave
std
and
add
and
jle
add
sub
sub
jae
xlat
pop
inc
psubd
push
daa
sub
dec
dec
xchg
clc
mov
mov
lret
pop
jp
dec
scas
mov
cmpsb
sbb
enter
rclb
jnp
adc
mov
subb
int
int
das
jb
fs
push
xchg
leave
xchg
cmpl
adc
out
and
arpl
pushf
inc
mov
jbe
jecxz
mov
ja
dec
int3
aam
pop
jns
mov
loope
sbb
outsl
loop
movsb
jae
jge
fdivrl
mov
nop
jmp
fsubr
push
dec
mov
sbb
inc
push
clc
dec
daa
push
and
out
cltd
ja
jp
sti
adc
xchg
xor
xor
popf
jno
cmp
mov
and
leave
fs
push
mov
arpl
jne
test
adc
ja
mov
sbb
pop
cwtl
cwtl
clc
xor
xor
into
jns
sub
mov
roll
orl
fsubrs
inc
shlb
cmpsl
cmp
adc
popf
add
jne
jnp
addl
sub
add
fcomip
jbe
aam
mov
loope
jecxz
or
dec
cmpsl
push
sub
aam
mov
test
imul
xlat
int
adc
out
arpl
rorl
hlt
lods
cwtl
shrl
dec
fdivr
xlat
jae
add
pushf
in
adc
js
adcl
test
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
mov
adc
adc
add
in
subl
push
leave
out
push
adc
cmp
jno
add
push
stos
les
cli
sub
imul
adc
xchg
cmp
jnp
sbbl
sbb
inc
ja
in
cmp
std
std
jl
or
stos
xor
lods
jmp
mov
ss
push
jecxz
mov
jmp
ljmp
pushf
fsubr
jmp
mov
repnz
clc
int
mov
add
mov
xor
push
push
fwait
mov
sbb
adc
in
aam
push
fnsave
sub
in
adc
add
aaa
cmp
mov
and
push
mov
jle
adc
sub
pop
mov
dec
fisubrl
loopne
mov
add
or
adc
ja
xchg
fbld
or
das
sbb
in
and
sti
lea
sbb
shrb
inc
inc
test
js
pop
shl
adc
push
or
push
push
out
fimull
fcom
lret
sbb
repz
lcall
shlb
mov
sbb
cwtl
jno
add
xchg
out
iret
pop
pushf
shll
sbb
sub
mov
mov
xchg
aas
insb
nop
cmp
sub
sbb
lock
lcall
or
push
sub
aad
adc
adc
in
pop
data16
or
xchg
stos
xor
mov
rorb
add
in
jne
insb
and
pop
push
cmp
adc
add
xchg
lcall
ficoms
movsl
sub
sbb
jge
mov
lods
fnstsw
out
and
xor
pop
mov
mov
rcrl
add
mov
push
fildll
push
dec
add
clc
push
iret
and
xor
and
movsl
xchg
inc
ja
push
jmp
jno
insl
sbb
cmp
lods
mov
pop
push
jb
jbe
in
jle
mov
insb
push
fsts
pop
loopne
xchg
cld
cmc
mov
or
jb
in
sbb
mov
adc
gs
mov
push
and
cmp
add
xchg
dec
enter
and
jmp
xor
jbe
or
push
leave
jbe
insl
fistps
mov
js
sarl
mov
aad
cli
pop
fadds
cmp
std
xor
out
adc
xlat
loop
out
into
or
ffreep
out
jo
aas
das
add
xor
xchg
xchg
xchg
out
sbb
out
shrl
push
fnstenv
das
addr16
or
popa
out
ret
mov
ja
xchg
jge
mov
pushf
sahf
jmp
cmc
call
mov
in
fsts
rcrl
loop
jmp
jecxz
in
push
mov
xchg
pushf
push
int3
add
or
ds
xor
imul
xor
popf
sub
or
mull
push
loop
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
push
pop
les
adc
adc
dec
outsb
loop
movsb
or
adc
sbb
dec
leave
das
out
sahf
mov
fldl
push
repz
mov
cmpsb
jecxz
or
insl
loop
sahf
mov
dec
sbb
fs
test
lahf
or
sti
bound
shrb
mov
mov
push
bts
pop
inc
rorb
adc
ljmp
fiaddl
xor
cmc
mov
das
in
xor
test
mov
push
lods
cmpsb
cmp
or
pop
xchg
cmc
lret
xchg
mov
mov
push
movsb
xchg
sbb
pand
add
xchg
mov
mov
jne
xor
ficoms
ja
adc
mov
push
loope
push
jp
mov
push
insb
data16
pop
add
loopne
lret
movsl
pop
aaa
or
data16
jbe
fs
pop
jno
inc
lock
push
add
push
mov
adc
pop
clc
imul
lahf
aas
insl
cmp
sbb
cmp
push
pop
jnp
mov
dec
fmuls
jmp
scas
subb
mov
fisttpl
sbb
inc
andl
nop
shr
les
test
or
out
loopne
rorb
push
stos
mov
test
lods
add
das
flds
mov
pop
dec
repz
push
pop
repz
pop
loopne
stos
pop
xchg
stc
cmp
leave
fsubrs
notb
enter
std
push
push
repnz
call
and
jnp
and
dec
mov
cli
jae
int
mov
pop
in
scas
daa
test
pusha
mov
faddl
pop
aad
andl
in
rolb
xchg
dec
pop
add
imull
push
add
int3
outsl
jecxz
shlb
pop
xor
or
jne
std
shll
in
scas
xchg
sbb
add
xchg
mov
add
clc
dec
pop
das
sbb
jns
inc
dec
aad
mov
fnstsw
pop
push
or
pop
ret
addr16
imul
add
out
add
fistpll
sahf
mov
adc
jns
sub
mov
aam
fs
xchg
mov
fxch
daa
mov
or
loopne
loopne
das
mov
dec
mov
or
mov
fadds
sub
xchg
outsb
arpl
push
sbb
push
pushfw
clc
sbb
testb
daa
push
lds
adc
jecxz
push
xchg
call
inc
cmp
sahf
or
hlt
icebp
nop
aad
out
push
jl
ja
inc
push
mov
nop
rcl
aad
shl
dec
rcll
stos
dec
divb
test
dec
cmp
les
jmp
sti
fidivl
inc
jb
imul
fucom
push
mov
das
xor
push
or
out
xor
xor
push
lods
mov
dec
and
xlat
shrl
push
mov
repnz
sarl
push
cmp
dec
inc
jbe
fs
pop
push
cmp
push
and
iret
push
dec
fstps
mov
and
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
fistps
adc
adc
adc
dec
inc
call
pop
add
push
aas
fwait
xchg
cmpsb
push
imul
mov
loope
sub
pop
cmp
sbb
loopne
xor
xor
adc
dec
cmp
lret
out
pop
inc
pop
inc
xchg
sbb
rep
jge
test
jo
xor
cvtpi2ps
add
or
xor
loopne
dec
out
pushf
pop
xchg
ret
inc
sub
and
std
jmp
mov
nop
outsl
into
cltd
inc
stc
jne
jle
dec
rcl
orl
mov
cld
pop
int3
test
add
addr16
daa
out
daa
sbbb
decl
cwtl
ror
scas
inc
adc
daa
push
arpl
gs
pop
jecxz
data16
clc
imul
lods
int3
pop
or
xchg
test
jo
aaa
jns
dec
xor
and
stc
ja
jae
pop
lock
sbb
push
pop
decb
xchg
add
scas
ja
push
sub
mov
cld
clc
cmp
sbb
clc
add
jge
xchg
shlb
jmp
push
lcall
jnp
call
shl
cmp
dec
clc
incl
adc
aaa
sub
dec
push
and
and
push
push
xchg
or
push
add
add
gs
push
mov
repnz
mov
push
loope
dec
rcrb
mov
icebp
jbe
loop
icebp
pop
pop
mov
lea
jns
pop
ret
lods
adc
inc
jle
sbb
sbb
aad
mov
popf
mov
lods
inc
dec
mov
mov
icebp
push
push
aam
mov
aaa
cmp
jg
out
lods
or
test
mov
imulb
inc
push
rcrb
cmpsl
push
jle
sbbb
sbb
xchg
pop
pop
cwtl
inc
sbb
clc
mov
insb
pop
xchg
mov
add
pusha
inc
ret
cmpsb
push
jb
push
xchg
stos
imul
fdivrl
aas
xchg
jbe
push
mov
add
push
mov
fistpll
ss
sbb
shlb
and
pusha
adc
outsl
inc
or
fwait
out
cmc
sub
cmc
and
hlt
add
bound
pushf
icebp
mov
test
jne
sub
in
lds
faddl
popf
push
lret
xlat
fldcw
andl
cmc
loop
mov
xchg
test
push
sub
xorb
stos
push
push
orl
mov
jne
test
jno
sub
dec
stos
test
test
lret
mov
and
loope
dec
cli
mov
outsl
outsl
mov
sbb
xchg
aam
in
testb
fcomp
mov
sbb
je
popf
push
in
scas
jp
jo
xchg
ljmp
pop
dec
pop
out
or
test
sbb
lods
mov
pop
repnz
js
std
inc
push
lods
mov
mov
scas
or
loop
mov
jo
dec
jge
cltd
pop
shlb
inc
and
push
subl
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
xor
inc
movsb
adc
adc
adc
push
mov
dec
mov
arpl
inc
sbb
mov
jbe
stos
sub
jb
sbb
pop
into
sub
jne
sub
repz
inc
es
int
mov
sbb
hlt
add
xchg
fnsave
mov
stos
cmp
push
sub
loop
or
fistps
sbb
fstpt
sbb
sbb
cmpsl
mov
inc
stos
test
push
jne
test
pop
jo
ds
test
popf
cmp
jl
negl
and
enter
mov
xor
icebp
mov
push
out
nop
or
dec
orl
ss
cli
or
rclb
add
xorl
aam
xchg
subl
cmp
pop
sbb
mov
xchg
pop
daa
add
cld
push
imul
jmp
jns
sub
xchg
mov
iret
push
pusha
fiadds
or
movsl
adc
jae
add
test
xor
adc
in
sub
lret
imul
sar
dec
fcmove
or
add
or
and
cmp
icebp
and
test
in
cltd
jmp
cmpsb
inc
inc
sub
popf
rcll
popa
xchg
cld
popa
inc
dec
sarb
bound
repz
fisubl
dec
fistpl
inc
jp
adc
cmp
pop
aam
ds
or
jae
sub
sti
mov
mov
push
scas
cmpsb
into
xchg
inc
push
scas
sub
sub
nop
jl
xchg
repnz
dec
iret
cmp
inc
mov
fidivrs
jnp
rorl
mov
leave
pop
fs
cmp
fsubs
or
imul
lret
aam
xor
loopne
dec
pushf
xor
mov
mov
pop
popf
mov
jmp
cli
aam
mov
shlb
and
cmp
pushf
movsl
mov
test
out
scas
adc
dec
cmp
inc
stos
jle
test
xor
jle
cwtl
out
xor
push
test
xchg
gs
sub
push
hlt
js
mov
mov
jecxz
lcall
or
mov
mov
mov
mov
and
pop
or
cmp
jp
pop
popa
add
cmp
bnd
jge
jp
add
int
pop
insl
xlat
push
dec
push
xlat
inc
jp
lahf
inc
mov
fwait
dec
inc
dec
dec
xor
pop
je
std
sbb
inc
push
sub
dec
add
mov
adc
and
xor
sub
lock
mov
push
je
stc
loopne
in
sub
lret
sbb
lock
jns
or
notl
pop
scas
mov
add
jno
inc
mov
mov
shlb
add
mov
push
cmp
aam
out
or
add
cmpsb
insl
stos
xor
nop
jge
pop
gs
mov
or
and
popf
and
cld
jo
and
dec
dec
fnstsw
out
cld
fs
imul
push
lcall
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
mov
adc
adc
adc
test
je
push
add
int
mov
mov
inc
dec
repnz
xor
andl
lock
or
leave
mov
add
push
sub
adc
mov
mov
ret
dec
or
fdivrp
cs
ljmp
jbe
inc
sbb
and
lret
push
jmp
movsb
push
shll
jg
imulb
adc
ljmp
mov
lahf
mov
outsb
mov
bound
outsl
mov
pusha
imull
dec
add
js
mov
mov
out
jp
mov
pop
popa
lock
pop
push
fcomps
pop
negl
into
fsincos
mov
shrb
int3
jo
dec
movb
out
push
push
aaa
dec
and
adc
xor
adc
xor
adc
mov
lahf
mov
mov
jle
jno
popf
jb
lock
loop
or
ja
dec
out
push
dec
scas
or
and
adc
popa
out
outsl
mov
add
cmpsb
popl
and
push
sbb
push
ds
dec
pusha
cmp
aaa
dec
jl
int
add
call
sbb
pop
addl
icebp
dec
add
push
sub
mov
sub
sarl
insb
in
sub
cmp
mov
sub
ffree
xor
lret
sub
ljmp
sbb
xchg
dec
std
xchg
push
pop
popa
sub
and
mov
sbb
push
jge
cmpsb
arpl
jge
icebp
in
sahf
push
loop
or
scas
pusha
rcrb
mov
fcoms
cs
inc
loopne
imul
xor
add
or
mov
mov
mov
sbb
jmp
push
xchg
cltd
roll
mov
mov
lds
or
nop
dec
pop
mov
in
rorl
or
jecxz
loope
cs
and
pop
xor
xchg
sbb
mov
cmp
mov
add
adc
ret
out
jno
enter
sahf
push
mov
push
clc
pushf
jl
in
adc
mov
icebp
xchg
imul
push
scas
fnstsw
sub
orl
in
push
div
or
mov
fdivrl
push
cli
std
lock
aaa
mov
jns
cmp
cmp
lret
pop
push
pop
pop
fisubs
das
clc
sbb
fidivrs
out
pushf
xor
mov
add
int3
lods
pusha
in
js
xchg
pop
loope
mov
dec
pop
jb
xor
inc
mov
out
insl
lret
addr16
in
inc
adc
cmp
mov
mov
cltd
xchg
push
cmp
in
or
dec
mov
mov
fildl
jl
inc
inc
jns
jmp
pop
repnz
cmp
or
sarb
mov
adc
inc
repnz
push
out
fcos
in
mov
or
in
js
or
push
mov
inc
xor
shl
xor
or
add
mov
jmp
xor
and
in
cmpsb
js
lcall
sbb
loope
adc
cmpsb
jo
push
bound
pop
sub
mov
jnp
mov
mov
cmp
jl
cmp
lods
jge
sbb
push
adc
xor
inc
repnz
orl
scas
pop
xor
sbb
xor
test
sbb
adc
xchg
mov
call
das
fisubs
and
je
xor
popf
xchg
cli
inc
popa
push
jae
adc
loope
jne
mov
jb
pop
sti
mov
dec
mov
pop
jp
jp
sbb
loopne
dec
stc
jno
cmp
pop
stc
or
push
cmpsl
adc
mov
cli
inc
sub
xchg
test
inc
stc
loopne
xor
add
shlb
adc
xlat
push
arpl
xchg
mov
stos
ret
pop
dec
mov
inc
clc
out
test
lret
xchg
push
sbb
scas
loop
dec
roll
xchg
push
ja
lock
pusha
pop
jle
stos
add
loop
mov
lds
std
add
or
icebp
mov
scas
push
push
sub
sub
add
in
aas
test
rcll
push
dec
mov
cmp
sub
and
mov
testb
xor
or
idivl
mov
inc
and
pop
stos
mov
inc
popa
sub
loop
repnz
cltd
aam
or
pop
mov
sbb
dec
sub
pop
out
adc
in
sub
cld
fisubl
jo
insl
or
roll
and
mov
pusha
je,pn
icebp
xchg
sub
in
and
test
mov
adc
daa
test
cwtl
ljmpw
sbb
xchg
rorl
and
mov
or
jecxz
shrl
ret
lods
mov
into
sbb
mov
push
xchg
inc
inc
scas
or
xchg
and
or
in
dec
mov
sub
cltd
cmp
ret
aas
pop
fwait
int
or
pushf
push
dec
pop
ret
adcl
repz
mov
jb
pop
inc
push
mov
imul
loop
adc
xchg
adc
andb
inc
lds
clc
lds
cmp
ficoms
and
in
test
or
push
inc
sti
push
jmp
ss
mov
movsl
mov
xchg
mov
add
stos
fisttpll
sbb
jns
or
scas
test
test
mov
pusha
sbb
mov
inc
out
pop
and
sahf
leave
mov
std
and
sub
rolb
addr16
jne
jbe
xchg
mov
pop
push
or
push
inc
pusha
mov
in
mov
das
cmp
push
icebp
addr16
or
iret
sub
and
adc
out
pop
in
cs
movsb
jle
adc
test
dec
rcr
sub
cmp
sahf
cmp
shrb
lods
sub
js
das
push
sub
outsl
sub
lret
sarb
adc
inc
or
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
add
and
nop
adc
adc
adc
mov
les
ret
inc
mov
gs
ja
adc
xchg
sub
sub
jmp
dec
scas
std
aas
cmp
loopne
mov
jb
dec
jge
ljmp
or
sub
mov
pushf
popa
add
je
adc
aad
mov
nop
jns
mov
arpl
cmp
std
push
add
imul
shlb
lods
fstps
mov
js
and
mov
jno
mov
xor
clc
mov
xchg
roll
jmp
negb
cmp
add
jl
and
cld
xchg
ret
std
push
cmc
mov
sti
dec
out
add
pop
sbb
int
inc
fildl
jle
mov
ds
int3
dec
and
dec
lods
inc
pop
aad
and
lods
cmpsl
mov
pop
dec
add
cwtl
hlt
loop
lret
ja
add
pop
repz
inc
rcll
lds
and
fwait
xor
outsb
and
cs
fs
lret
popf
and
das
xchg
push
aas
in
clc
lds
inc
dec
fwait
mov
xchg
sahf
subb
enter
add
lret
jnp
push
mov
loope
push
xchg
inc
jnp
arpl
adc
jg
adc
jbe
or
jae
imul
repnz
pop
jge
mov
xor
sub
clc
faddl
xchg
mov
daa
stc
and
xchg
xchg
add
add
or
adc
out
int3
pop
xchg
or
and
push
ret
out
insl
repz
jmp
je
les
gs
sti
mov
test
int3
test
test
sbb
cmp
dec
push
loop
ret
repnz
imul
imul
ficoml
ffree
or
testb
in
movsb
in
sbb
inc
js
add
addr16
jbe
jno
mov
xchg
add
mov
inc
dec
nop
pop
test
mov
cmc
jecxz
sahf
mov
sahf
pop
push
in
fdivs
or
cmp
xor
xchg
inc
test
jae
in
pop
or
xchg
push
icebp
test
dec
xlat
adc
or
jmp
pop
fcmovnu
and
mov
in
push
repnz
inc
push
subl
dec
call
mov
push
add
inc
or
aam
dec
fwait
clc
lret
sbb
clc
xor
imul
in
mov
xchg
aas
xor
ljmp
push
out
je
xor
imul
jp
xlat
imul
gs
sub
daa
inc
push
stc
jo
nop
jge
test
adc
fimuls
hlt
push
sbb
add
test
mov
mov
jecxz
fs
iret
je
mov
insb
pop
xor
sub
sbbl
nop
rcrl
roll
jge
mov
pop
or
pop
or
jge
dec
imul
rorb
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
sbb
mov
adc
adc
push
ljmp
jae
xor
fs
leave
xchg
xchg
adc
pop
test
pop
inc
add
mov
cmpsl
add
mov
pop
sbb
jmp
ror
ss
rclb
sbb
ds
xchg
es
arpl
notl
xor
mov
int
pushf
jecxz
inc
jbe
push
xchg
ja
in
pop
clc
aam
leave
pop
shl
jne
or
das
jne
mov
pusha
sub
pop
fisubrl
fdivrl
pop
mov
subl
fldt
loopne
cmp
cmpl
push
icebp
push
jne
add
testb
out
flds
mov
sub
dec
nop
orl
hlt
fwait
repz
fldenv
push
xor
test
mov
arpl
jg
cmp
mov
and
xchg
xchg
scas
jg
or
sbb
ror
lahf
sub
fs
ret
js
outsb
add
filds
in
or
aad
add
xchg
sbb
out
adc
push
vpcmpgtd
xchg
dec
jne
sbb
fs
loope
in
imul
jns
pop
insl
inc
mov
fs
xlat
mov
push
jmp
or
mov
rorb
sbb
fsubs
test
mov
push
out
enter
mov
xchg
push
std
das
dec
repnz
add
clc
or
jge
rorl
xor
or
data16
into
bound
mov
xchg
js
push
stos
andb
inc
hlt
test
xchg
push
jb
fisttps
add
push
and
pushf
xor
mov
push
jecxz
imul
mov
add
mov
jmp
fcompl
push
decb
testb
and
clts
jecxz
mov
std
fs
lret
jae
dec
fdivrp
fsincos
test
xor
add
loope
popf
insl
add
push
je
push
ja
aad
lret
jmp
lcall
xchg
adc
lret
xor
sub
pop
out
pop
xor
mov
adcl
repnz
ljmp
loop
push
sti
mov
xchg
leave
inc
shrl
adcb
push
mov
pop
sbb
mov
loope
leave
mov
cmp
jmp
mov
das
int3
push
dec
loopne
mov
push
xor
push
pop
fwait
out
fdivl
in
jmp
mov
iret
mov
out
fsubl
orb
sbb
pop
xor
sar
shlb
push
lret
insl
cmp
lahf
xchg
cmp
mov
es
sub
arpl
or
gs
or
movsl
xchg
dec
mov
xchg
dec
and
push
jecxz
js
jge
jp
pop
jb
and
aas
push
mov
in
loop
fbld
inc
pop
mov
pop
popf
fdivrl
stos
push
pop
push
add
xchg
mov
push
dec
loope
xor
movsl
inc
je
adc
out
popa
xchg
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
ljmp
sahf
test
nop
mov
jae
cmpsb
daa
loope
pop
cmpsl
push
inc
int
xchg
mov
add
in
pop
mov
pop
sahf
mov
xchg
mov
xchg
xor
jmp
scas
mov
add
cmp
pop
push
bound
push
out
jl
mov
mov
cwtl
leave
mov
scas
call
rcrl
mov
push
fistl
adc
andl
popa
sti
dec
imulb
icebp
movsl
inc
pop
outsl
fldt
movsl
jg
pop
add
and
add
pop
pop
jmp
gs
sub
sub
push
pop
adc
mov
xorb
add
push
stc
mov
popf
loop
mov
jmp
out
add
mov
aam
add
inc
push
outsb
adc
test
sti
inc
mov
inc
mov
jb
js
mov
dec
mov
push
mov
xchg
in
clc
cmp
loop
jmp
mov
and
cmp
dec
and
stos
lds
ret
xchg
push
gs
nop
push
xchg
adc
sub
sub
cmp
xor
dec
cli
outsb
scas
pusha
xchg
das
mov
cmpb
insb
xchg
test
lods
fldl
dec
ljmp
push
addr16
and
mov
add
adc
add
rclb
aad
adc
xchg
fsubrs
addr16
imul
mov
sti
add
xchg
adc
pop
rorl
out
pop
xor
fstpl
mov
dec
or
xchg
dec
movsb
test
pop
test
rorl
xor
push
lods
mov
ret
sbb
sbb
int3
add
jo
jg
pop
cltd
aam
stos
adc
jle
mov
cmpsl
adc
es
or
fsubs
enter
test
jmp
mov
popa
pop
xchg
mov
sub
orl
mov
aaa
dec
mov
pop
inc
in
daa
mov
pop
and
adc
pop
mov
lods
and
nop
ss
lea
sti
lret
mov
imul
stos
cld
dec
das
cmp
cli
push
cmpb
out
mov
sub
insl
mov
sti
push
adc
or
inc
jl
dec
pop
push
cmp
push
pushf
enter
cs
cmp
js
hlt
gs
out
xor
icebp
adc
enter
test
inc
test
stc
pop
mov
add
and
xor
lods
aaa
jae
inc
and
or
cmpsl
xchg
inc
xor
mov
xchg
cmc
xchg
sub
sahf
cwtl
lcall
adc
xchg
ret
dec
inc
rep
lret
cld
hlt
in
pmaxub
mov
push
scas
mov
mov
mov
stos
jb
orb
fdiv
cmpsb
cmc
xchg
xor
das
add
movsl
mov
or
cmp
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
jle
jl
adc
adc
jmp
pop
test
lret
in
xchg
sub
scas
lods
je
lods
inc
pop
rcrb
and
jecxz
mov
out
fdivs
adc
mov
pushf
outsl
pop
adc
cs
mov
push
mov
dec
adc
scas
push
cmp
mov
rorb
cmp
xchg
jmp
insl
jg
mov
xor
sub
add
fdivl
out
sti
gs
fnstenv
out
cs
fcom
jmp
jo
mov
inc
push
outsl
add
inc
popf
xorb
rcr
mov
into
scas
push
sbb
dec
sub
insl
or
jbe
test
in
in
xor
je
mov
pop
xchg
cmpsb
sbb
add
icebp
stc
push
push
push
repnz
lret
ret
push
jno
lahf
pop
repz
push
dec
mov
jg
lret
mov
add
mov
xor
bound
cmc
jns
push
jae
jo
jmp
sbb
test
cmp
cmpsb
es
push
inc
into
xlat
or
mov
imul
or
mov
or
fninit
push
mov
add
sbb
in
mov
addb
jge
adc
cmpsl
adc
jne
and
mov
bound
fnstenv
dec
add
sub
jo
cmp
aad
or
inc
dec
add
or
out
and
shrb
push
push
jo
add
xchg
push
shl
pop
pop
es
cmp
sub
adc
cmp
orb
sub
xor
xchg
inc
mov
jmp
adc
idivb
xorb
mov
ljmp
movsl
or
mov
out
mov
dec
mov
add
rorb
movsb
popa
and
and
xchg
sub
add
fdivrl
cmp
push
push
pop
add
mov
iret
dec
xchg
or
into
mov
mov
cmp
in
xchg
cltd
test
sbb
jle
pop
jno
mov
sahf
mov
jl
mov
sbb
lock
loop
dec
add
jl
loopne
fadds
push
lds
fbstp
dec
rolb
xor
outsw
or
add
lock
pop
xor
aaa
das
fst
ret
mov
pop
cmp
std
adc
jo
pop
sub
andb
cmpl
lods
push
mov
xlat
sti
stos
sbb
out
idivl
xchg
push
ret
xchg
fidivs
into
loopne
xchg
dec
in
sbbb
cltd
fidivs
sub
cmp
xor
in
sub
imulb
shrl
pop
sub
sti
insl
mov
sub
and
call
pop
out
sbb
aas
pop
dec
add
sbbb
push
xchg
pop
cltd
inc
lock
dec
jb
mov
add
sbb
and
lds
dec
jp
pop
loope
nop
add
sbb
pop
or
cmp
pop
jl
adc
pop
orb
pop
xor
or
cs
inc
test
out
jge
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
adc
lods
fs
adc
adc
lock
xor
mov
insb
jno
push
lods
int3
add
xor
addr16
ret
mov
cld
cmp
inc
or
popa
ja
ret
sarl
sbb
push
and
mov
mov
jae
cmova
in
out
push
cmc
sti
xchg
idivb
sti
sbb
dec
dec
cmp
into
out
arpl
fadd
or
inc
cmpsl
out
cmp
or
not
jp
scas
into
cmp
push
xchg
cltd
test
in
mov
call
stos
xor
ds
mov
pop
in
fmuls
iret
cmp
dec
inc
rorb
adcb
ss
mov
adc
andb
lret
and
jmp
cmp
sub
and
jb
out
add
fwait
push
stos
js
scas
movsl
lret
mov
ret
mov
mov
pop
xchg
sub
lret
clc
fnstsw
pop
sbb
aaa
cmp
cmpsb
push
cmp
in
xchg
dec
scas
xchg
je
cmp
out
sti
xchg
jl
loopne
bound
lahf
dec
lahf
xchg
lret
gs
ss
xchg
fxch
add
sub
pop
xchg
test
xchg
cmp
sbb
dec
das
mov
xchg
or
clc
cmp
bound
jno
lock
or
scas
push
gs
cltd
sub
insl
pop
xchg
mov
jp
push
mov
sbb
mov
test
mov
es
hlt
dec
repz
adc
imul
adc
xor
mov
pop
xchg
adc
ret
jge
bound
push
jb
xor
out
into
cmp
int
and
mov
adc
aaa
sbb
das
adc
xor
lahf
imul
cmp
xor
pop
pushf
mov
add
xchg
stc
pop
insl
cmp
aam
add
cmp
fistps
cli
out
or
jg
sub
push
scas
mov
das
aad
aaa
inc
aad
jle
xchg
lcall
call
dec
inc
out
lcall
inc
and
aam
arpl
add
dec
aaa
jge
aam
fdivrp
sbb
inc
cli
pop
ret
sbb
jbe
jl
ljmp
jb
xchg
ds
insl
outsl
mov
data16
test
xor
hlt
lock
sahf
jle
add
in
in
mov
xchg
call
dec
in
daa
jb
sub
sbb
xchg
pop
jecxz
mov
xchg
cmc
dec
into
jne
sbb
lret
dec
sub
mov
mov
push
ret
inc
fxch
testl
je
repz
rcll
inc
jnp
adc
push
pop
data16
dec
cwtl
movsb
insl
std
mov
scas
stos
jg
inc
cwtl
lock
pop
out
popa
out
push
adc
xchg
lock
in
fnstsw
jl
cs
mov
push
fwait
sub
lcall
shl
cmpsl
scas
in
pop
xlat
repnz
xchg
lahf
xor
push
mov
mov
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
and
movsb
js
jb
adc
cmp
xchg
mov
xchg
daa
and
ja
test
jnp
sar
pop
cmp
test
cmp
dec
add
sub
scas
inc
and
stos
xlat
out
add
je,pt
int
or
mov
xor
dec
aam
pop
fucomip
scas
xchg
and
xor
cwtl
cmpsl
or
jecxz
dec
fnsave
dec
inc
push
sbbl
xchg
je
or
cltd
out
push
pop
fildl
jns
daa
xor
mov
xor
test
adc
lock
mov
xor
out
hlt
shll
cwtl
mov
out
imull
and
scas
mov
mov
les
add
dec
outsb
jle
mov
aad
shrl
lods
aam
adc
push
in
cmp
push
push
in
sbb
out
dec
dec
fstpt
int3
and
mov
sbb
imul
je
mov
mov
dec
cmp
jp
test
ret
push
clc
aam
xchg
push
add
fmul
lcall
leave
scas
fmul
call
lea
subb
fnstsw
gs
adc
xchg
lea
cmp
dec
lret
add
push
mov
arpl
jmp
rcrb
jecxz
ljmp
data16
xlat
push
cli
je
cltd
fwait
add
popa
cmp
xor
sbb
pop
or
push
fwait
mov
mov
cmp
add
add
cmp
and
xchg
repz
js
adc
es
xor
les
mov
xor
leave
pop
xchg
jbe
xor
and
adc
jmp
cmp
cltd
cltd
sarb
cmp
insl
stos
gs
nop
ja
sbb
add
add
pop
cmp
int
sub
out
std
fistpll
and
jo
out
lcall
pop
jmp
mov
inc
and
call
jp
push
or
mov
xor
sti
fmulp
mov
sub
inc
ljmp
out
lock
pusha
or
jo
insl
int3
fwait
imul
mov
outsl
dec
add
adc
adc
xor
outsb
fnstenv
stos
mov
mov
loopne
or
mov
jno
cmp
lcall
rclb
fnstcw
jcxz
xchg
and
push
mov
scas
iret
push
mov
fcmovnbe
sti
pushf
add
notl
pushf
ret
or
mov
sbb
mov
adc
popf
and
xor
inc
lods
fwait
xor
mov
int
daa
dec
mov
dec
pop
inc
pop
lret
shl
mov
aad
fcomps
cltd
and
sbb
jbe
aas
cs
mov
test
sbb
push
mov
mov
sub
outsb
ja
add
cmp
mov
jle
add
fwait
inc
lods
xor
xchg
cmp
lret
adc
jge
mov
mov
in
mov
xor
inc
stos
imul
jnp
call
shr
xchg
or
cld
test
lret
cmp
das
push
mov
mov
cmp
jno
add
and
popl
dec
and
dec
sub
leave
pop
add
sahf
enter
cmp
and
sbb
push
push
int3
call
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
outsb
add
mov
mov
adc
adc
mov
call
out
inc
notl
lock
pop
mov
inc
cld
xchg
push
mov
pop
mov
in
cli
insl
xchg
mov
popf
data16
cmp
sbb
das
aas
fs
in
mov
push
mov
out
xchg
xor
push
or
repz
fnsave
or
xchg
or
and
leave
mov
rcr
sbb
icebp
arpl
mov
cmc
mov
fimuls
fdivs
cmp
add
inc
mov
xorl
fisttpll
fldcw
fidivl
ret
cmp
inc
mov
xlat
popf
add
inc
aad
loope
sub
mov
mov
xchg
push
mov
and
and
sarb
adc
dec
insb
mov
lahf
stos
pop
pop
jle
pop
into
adc
or
stos
shll
mov
xor
cli
loopne
adcb
xor
push
rclb
pop
shrb
xchg
sub
cmpsl
test
push
push
and
loope
insb
sbbb
std
add
and
aad
dec
mov
add
call
mov
lret
jne
push
insl
mov
imul
lock
rcl
push
arpl
or
mov
sub
mov
push
inc
xchg
push
or
sahf
sbb
dec
sbb
movsl
xchg
movsl
lods
push
bound
or
inc
jo
cltd
push
cmpsl
pop
adcl
mov
enter
cmp
pusha
mov
das
xchg
pusha
js
mov
dec
mov
and
and
int
and
mov
xor
movl
add
jmp
pushf
stos
imul
or
sti
cmp
inc
movsl
shll
cli
mov
andb
outsl
out
enter
popf
push
xlat
call
sub
cs
mov
inc
jbe
mov
or
fwait
mov
mov
es
push
push
cmp
or
push
push
add
cli
jns
fcom
jnp
pop
and
mov
push
daa
or
lds
stos
xor
push
pop
jo
out
and
subb
inc
mov
fs
jp
pop
ljmp
xor
insb
dec
stc
xchg
mov
in
in
and
int
xor
dec
and
push
js
pusha
or
ret
jecxz
out
fcmove
mov
or
jmp
out
daa
lds
pop
fs
pop
mov
dec
mov
test
and
lahf
mov
mov
enter
jp
daa
inc
outsl
into
or
mov
jo
inc
pop
lods
les
loop
int
cmp
out
jge
daa
sub
xchg
incb
popa
orl
not
fistpl
je
pop
xchg
lds
inc
jno
fildl
lret
nop
loop
mov
aad
in
mov
mov
fisubrs
pop
push
dec
adc
jge
inc
aam
pop
imulb
arpl
test
cmp
fldt
xchg
push
add
adc
xchg
pop
add
push
imul
mov
cltd
mov
pop
out
and
or
push
xchg
sbb
jne
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
bound
adc
xor
js
dec
xchg
jae
data16
xor
cmp
jnp
outsb
in
das
inc
xchg
push
outsb
or
loop
mov
mov
sbb
mov
mov
dec
xchg
mov
int3
lret
lock
inc
and
adc
scas
les
or
notl
adc
push
or
jl
lret
sbb
sub
xor
mov
int3
loop
insb
push
fsubrs
int
jp
push
pop
xor
xchg
vmptrst
outsl
mov
hlt
mov
xor
leave
jge
or
push
aam
ds
popl
push
ret
in
mov
popf
cwtl
xor
sahf
push
icebp
nop
sbb
sbb
mov
mov
sti
jns
jmp
push
sbbl
adc
sub
dec
mov
test
stos
repz
icebp
mov
mov
cmp
cmpsb
nop
test
mov
xchg
adc
sub
dec
push
popa
addr16
out
lahf
mov
and
push
pop
sub
sbb
mov
sbb
mov
cld
xchg
notl
sbb
jb
ja
cli
xchg
fcomip
sbb
out
cltd
xchg
inc
push
ds
dec
dec
out
push
fisttpll
cmpsb
int
daa
mov
or
fnclex
test
test
fmuls
xlat
sahf
xor
lods
mov
out
and
inc
or
sbb
cmc
and
out
jmp
sbb
sbb
xor
nop
sarl
jns
jb
mov
mov
push
push
testb
inc
mov
std
movsl
shl
loopne
cmp
adcb
out
mov
jns
add
inc
xchg
loop
xor
les
lret
pop
lods
or
sub
pop
mov
dec
idiv
xchg
mov
fildl
pop
mov
pop
xchg
cld
ss
out
pop
push
jb
insb
movsb
gs
mov
and
loopne
inc
jno
in
adc
and
push
aad
shl
mov
pusha
cmp
pxor
add
push
jecxz
fdivl
es
mov
cmpsb
cmp
jle
cmc
imul
mov
fxch
mov
cmpb
cmpsl
or
push
add
stos
cmp
ja
pusha
std
arpl
jl
aas
aas
mov
adc
test
mov
mov
fbld
cmp
loope
xor
push
les
inc
pop
sub
xor
add
add
fcomp
out
pop
push
rolb
sub
mov
inc
ret
xor
mov
in
mov
mov
scas
pushl
mov
das
rcrb
aaa
out
pop
lahf
shlb
cs
pop
pop
stc
xor
popf
pop
call
in
and
mov
push
ds
test
push
push
push
stos
gs
push
jo
sti
adc
scas
jg
sahf
mov
mov
dec
fstps
shl
adc
shl
out
rcr
mov
add
xchg
lock
xchg
xorb
orps
jp
push
dec
lcall
adc
aas
in
cltd
aaa
imul
mov
mov
pop
xchg
or
popa
mov
xor
adcb
dec
fldenv
add
out
jle
inc
std
sbb
test
test
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
lods
gs
adc
mov
xchg
add
movsl
and
out
add
shl
mov
stos
lcall
out
imul
out
out
or
pusha
and
mov
fwait
jmp
push
sub
shr
sbb
lds
test
stos
dec
ljmp
xor
cmp
mov
mov
mov
xor
cmp
pop
into
sub
inc
or
subl
cltd
cmp
aam
add
adc
call
jmp
and
jne
in
push
fwait
and
in
int3
pop
in
add
xlat
push
sub
cld
add
je
test
mov
sti
cmpsl
les
pop
jge
mov
jno
ds
dec
or
test
dec
push
cmp
pop
mov
xchg
sbb
jmp
jb
lods
hlt
outsl
inc
dec
mov
mov
hlt
adc
ds
jp
mov
mov
test
std
mov
inc
inc
and
mov
hlt
dec
std
jg
push
aas
xchg
and
add
aas
cs
addl
and
popa
mov
xor
iret
mov
shrl
xchg
sahf
aas
sub
sub
mov
cltd
ficomps
or
jb
xor
call
call
faddl
sarl
sub
jmp
xchg
lock
sub
or
loopne
push
es
das
pop
negl
in
clc
inc
jne
test
jno
cli
mov
enter
or
fdivrp
and
pop
or
sub
nop
fisubrs
inc
inc
lods
cmpsb
pop
jg
pop
repz
xor
lods
xlat
mov
out
inc
mov
pop
mov
sub
insl
mov
icebp
andb
stc
sub
aad
paddw
js
es
sub
sub
aaa
in
sub
pop
jne
leave
fwait
xchg
loopne
lret
and
jp
loop
cld
leave
xor
out
mov
sbb
add
xchg
movsl
mov
pop
xchg
testl
daa
mov
dec
jb
xor
test
subl
shrb
movsb
mov
mov
inc
sbb
lret
dec
testl
shll
adc
xchg
shlb
push
sub
out
mov
aaa
ret
iret
loopne
sub
repnz
or
xor
inc
rorl
adc
repnz
sub
push
sub
or
mov
loopne
cmp
rolb
inc
mov
fidivrs
pop
pop
xchg
mov
dec
mov
andl
sbb
jg
cld
or
and
add
in
push
fyl2xp1
pop
push
lock
push
mov
cmp
push
dec
cmpb
cmp
lods
fwait
pop
xchg
loopne
ljmp
int
mov
pop
aaa
mov
jp
mov
cwtl
push
aas
sub
add
adc
adc
mov
movsl
fs
sub
fnstcw
xorb
cmp
sti
dec
shlb
lods
pop
xor
cwtl
xchg
mov
in
adc
aas
scas
xor
mov
adcl
pusha
sarl
rcrb
call
xor
cs
leave
jmp
enter
pop
outsb
jecxz
adc
push
jp
inc
in
mov
jnp
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
movl
mov
adc
cmpsl
or
jp
pop
ds
aas
insb
xchg
fisttpll
sbb
fdivr
imul
stc
pop
out
mov
xlat
jb
mov
pop
sbb
clc
push
rcll
mov
add
clc
adc
enter
add
sar
in
jge
pushf
in
es
out
sbb
adc
loop
lods
cwtl
inc
pop
sbb
or
in
daa
inc
inc
mov
mov
jge
and
xchg
fnsave
icebp
cwtl
sub
push
cmp
cltd
out
test
xchg
jo
popa
int3
adc
add
mov
or
jl
scas
pop
scas
lret
fmuls
mov
jne
or
jnp
cmc
test
mov
in
divl
mov
xor
adc
lcall
mov
xchg
scas
or
and
mov
push
in
in
mov
lods
int3
cld
outsb
out
leave
cli
adc
repnz
sub
lcall
or
xchg
aad
jg
mov
push
arpl
jnp
movups
xchg
adcl
xor
bound
mov
fidivrl
test
adc
xor
fcomps
bound
ds
or
pop
jno
and
pop
xor
or
clc
mov
sub
adcb
sbb
dec
xchg
scas
xor
test
or
or
inc
fisttps
jno
into
or
sub
cmp
inc
jns
cmpsb
lahf
rorb
les
loop
and
and
sti
aas
aaa
mov
dec
aam
adc
in
cli
push
push
xchg
or
adc
cltd
loopne
push
nop
fldcw
scas
loope
sub
cmc
subps
jnp
cmp
std
jmp
xor
mov
jg
xor
lcall
adc
mov
gs
cwtl
dec
clc
jo
cmp
icebp
xchg
popa
jecxz
inc
rolb
xchg
jmp
es
lret
incl
dec
in
or
add
outsb
or
mov
stos
rcrl
cltd
jne
xchg
dec
insb
mov
adc
xchg
adc
repz
leave
out
ljmp
mov
ret
jae
mov
lods
lods
not
or
jns
mov
into
out
fiaddl
and
stos
aam
xchg
xchg
pop
mov
leave
xorb
adc
xor
cmpsb
xchg
out
pushf
icebp
dec
andl
ret
pushf
adc
pop
push
inc
pusha
dec
in
xchg
sar
push
adc
mov
and
pop
or
inc
nop
xchg
mov
lahf
mov
movsb
mulb
insb
add
mov
pop
sahf
cmp
data16
fstpt
inc
js
xchg
sub
xchg
lea
jp
dec
jb
push
sub
push
cmpl
in
outsl
or
sub
sub
decl
xor
scas
outsb
popa
fmull
aam
std
stos
addr16
cmp
rclb
sub
push
hlt
imul
jb
je
and
dec
iret
and
in
and
add
pop
outsl
push
or
sub
repz
mov
push
adc
scas
xchg
push
sbbl
push
mov
fucomp
fstps
lret
xchg
out
pushf
cmpsl
mov
or
aad
lret
jne
mov
jmp
cwtl
stc
mov
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
insb
xchg
dec
adc
mov
adc
xor
xchg
xor
pop
mov
lahf
idivb
jb
js
clc
jbe
popf
jo
mov
daa
lahf
icebp
cmp
fldenv
stos
dec
outsl
mov
push
hlt
sti
hlt
gs
out
dec
test
lcall
cmp
push
fdivrl
loopne
fdivs
sub
imulb
or
pusha
push
jle
dec
fs
or
into
dec
std
addl
das
ja
or
dec
jno
jp
pop
loopne
xlat
adc
or
dec
mov
in
xchg
mov
cmpsl
lret
aaa
and
mov
mov
xor
sbb
jns
call
test
fabs
sbb
cwtl
jb
movsb
mov
dec
vorpd
loopne
lock
not
dec
mov
jle
clc
gs
pop
lcall
xchg
loopne
sub
out
aam
shl
enter
cmp
lods
jo
test
in
or
xchg
cmp
mov
das
adc
outsl
or
push
dec
sbb
adc
enter
cmp
mov
movsb
inc
sub
aad
push
jl
insl
in
cmc
int3
popf
jecxz
fwait
or
shrb
sub
cmp
xchg
adc
xchg
and
push
leave
imul
stc
test
push
jp
xor
shrb
push
add
mov
testl
pop
jecxz
pop
pop
jecxz
out
xor
pop
lahf
inc
push
nop
jbe
out
add
lcall
andl
imul
push
out
xchg
ficompl
icebp
popf
int
mov
mov
aaa
jne
js
movsb
loope
xchg
push
fcoms
leave
aaa
xchg
cwtl
adc
test
sahf
stos
xor
xor
xchg
je
divb
mov
mov
xchg
and
pop
adc
pop
xlat
int3
and
jp
scas
rcll
test
fidivl
sbb
rcrb
iret
mov
mov
cmc
jnp
repz
jle
mov
fs
and
test
int
xor
add
mov
or
cmp
test
push
mov
fabs
or
adc
pop
mov
outsl
repnz
and
fisttps
mov
call
mov
pop
dec
push
xor
inc
push
lret
xchg
dec
lea
dec
sub
xor
mov
mov
mov
loopne
adc
jmp
insl
aas
jecxz
in
sbb
adc
push
or
js
jae
xor
enter
sti
pop
mov
mov
jg
fidivrl
fsubl
jecxz
mov
aam
and
outsb
push
cld
adc
add
addr16
mov
mov
pop
sti
lret
mov
jle
int
mov
xchg
xchg
imul
push
dec
movsl
push
sub
jb
jge
jnp
in
out
push
jle
out
lea
inc
js
pop
bswap
sub
aas
cmp
aad
mov
rol
loopne
mov
and
dec
fisttps
aaa
adc
mov
lock
pop
fbld
call
int
jg
push
adc
int3
sub
iret
ret
push
cmp
in
xor
pop
pop
inc
adc
rcrb
ss
xchg
lcall
dec
mov
cmpsl
dec
cmc
shrl
fadds
xor
cltd
dec
out
cmp
adc
fistpll
sbb
mov
add
push
xchg
push
push
ficoms
cmp
fidivrl
enter
sti
pushl
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
mov
std
jle
inc
adc
mov
adc
cli
insl
xchg
jmp
or
add
or
loop
inc
xlat
popa
test
decl
fs
aas
mov
push
pop
cmp
push
xorb
loope
inc
scas
mov
mov
jp
xchg
sub
xchg
mov
std
leave
mov
adc
jmp
adc
sahf
test
cld
daa
adc
ret
mov
xor
mov
imul
loop
pop
aam
lods
imul
lahf
out
mov
jno
das
xchg
xchg
scas
hlt
pushf
test
mov
movsl
pop
jbe
scas
add
orb
add
sahf
jl
mov
dec
sahf
mov
mov
inc
cs
test
jbe
mov
out
insl
inc
fsts
xor
push
clc
xchg
pop
aad
and
xchg
sbb
sub
mul
adc
loopne
lods
dec
lahf
mov
es
xchg
std
inc
mov
cmp
arpl
add
insb
jp
jp
adc
repnz
dec
in
inc
or
cmp
add
or
in
push
mov
mov
sub
mov
test
fdivs
cmp
adc
das
mov
sahf
cld
popf
mov
mov
out
scas
push
cmp
jae
sbb
repnz
int3
ds
pop
ss
out
clc
pop
push
cwtl
imul
mov
add
push
mov
cmc
adc
add
lret
loopne
mov
pop
subb
xchg
sub
movl
xchg
jno
dec
adc
cmpsb
jecxz
xchg
ret
add
adc
inc
jge
sub
mov
adc
jle
shr
data16
cmp
inc
xchg
es
jle
stos
es
adc
sti
stos
lods
pop
cld
ret
mov
cmp
jle
popa
pop
push
push
mov
xlat
pop
fdivl
xchg
nop
jecxz
push
into
dec
push
addr16
jae
out
pop
xchg
ljmp
pop
sub
mov
loope
adc
xchg
lahf
cwtl
jo
imul
and
das
xchg
test
mov
pop
rol
lods
imul
stos
and
hlt
shrl
jae
dec
mov
js
xchg
lea
xchg
push
sti
bound
or
hlt
jmp
push
cwtl
sbb
fs
mov
imul
and
aam
pop
clc
mov
shll
xor
xchg
lret
push
ret
sbb
std
jnp
enter
test
jg
and
mov
in
arpl
adc
outsb
jno
xchg
sbb
xchg
jno
mov
pop
cmp
hlt
or
xor
push
aam
outsb
cli
mov
ret
aam
leave
cmp
es
imulb
jno
mov
cs
mov
xchg
mov
sub
mov
pusha
shld
mov
fwait
mov
add
int
pop
cli
int
aas
clc
pop
pop
add
nop
cmc
sub
movsl
leave
cmpsb
gs
dec
imul
mov
or
mov
adc
test
mov
lret
jb
outsb
adc
test
in
std
sbb
loop
or
and
in
repz
jp
dec
lret
xlat
push
ja
std
movsb
outsl
cld
push
pop
mov
pop
loopne
fs
sbb
lcall
aad
jmp
jns
mov
addr16
or
xchg
jge
ret
cmp
push
pop
xchg
loopne
les
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
push
adc
mov
adc
cmpb
jb
jg
dec
pop
andb
das
int3
xchg
sub
xchg
push
xchg
sub
hlt
sbb
pop
mov
dec
test
out
arpl
or
add
fimull
push
and
dec
jg
hlt
je
inc
or
inc
and
iret
push
mov
pusha
add
in
push
loopne
add
push
jne
aad
push
popa
mov
inc
xchg
jp
mov
sbb
clc
inc
fistps
test
stos
dec
mov
loop
sbb
or
xor
push
and
cmp
stc
ret
mov
bound
add
sub
rcrl
cmp
sub
lods
lcall
fs
inc
gs
pop
adc
or
mov
imulb
mov
dec
cli
icebp
mov
fdivl
push
cmp
jnp
xor
pop
and
push
sub
pop
out
ret
incl
and
jne
sbb
popa
leave
mov
inc
insl
cwtl
xchg
fsubs
pop
icebp
repnz
mov
repnz
adc
push
cmpsb
push
bound
sahf
dec
outsb
add
dec
popa
xor
pop
addr16
inc
adc
mov
shl
aas
push
mov
cs
add
jnp
cmc
imul
mov
jno
mov
and
fisttpl
adc
inc
repnz
int3
dec
mov
roll
mov
xor
mov
xor
mov
mov
push
push
andl
fdivrs
fstpl
out
out
outsb
shl
imul
xor
cmp
shrl
ror
pop
stos
leave
sarl
outsl
dec
pop
xor
test
mov
out
pop
jb
cmpsl
sub
pop
dec
push
scas
mov
shll
jbe
inc
dec
jns
sbb
mov
xchg
in
aam
mov
pop
adc
and
adc
shrl
das
cmp
fisttps
adc
je
inc
or
mov
lret
repz
mov
or
aam
dec
lahf
dec
jl
ss
lcall
push
jne
pop
in
fcomi
pop
das
movsb
fwait
xchg
fimuls
in
or
add
dec
notl
or
add
xchg
shl
movd
mov
shlb
scas
mov
sarb
add
cmpl
cld
mov
mov
mov
mov
or
inc
xchg
stos
dec
arpl
mov
cs
aad
xor
in
or
cmpb
and
aaa
inc
inc
imul
loop
or
or
pop
aas
addr16
push
insb
aam
out
push
in
aam
mov
in
js
popa
fmull
jg
popf
stos
dec
rol
out
push
adc
pop
loope
xchg
add
out
enter
lods
and
gs
mov
dec
jge
mov
cmpsb
push
or
scas
cmp
jo
in
sti
xchg
into
rorb
sbb
lret
or
adc
scas
popa
xchg
data16
in
xor
or
enter
ror
add
dec
nop
icebp
xchg
sub
insl
xor
xchg
in
jecxz
pop
aad
push
lock
cwtl
lret
dec
and
pop
jmp
xchg
xchg
mov
leave
aaa
dec
bound
dec
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
daa
sarb
jbe
adc
mov
adc
mov
ja
xchg
lds
mov
push
cmpsl
cmc
loop
pop
sub
es
arpl
jp
xor
imull
xor
cli
out
xchg
or
sbb
cwtl
scas
inc
inc
adc
fadd
imull
xchg
push
cmpsl
call
mov
xor
test
incl
cli
shlb
leave
nop
pop
inc
sub
mov
pop
dec
adc
fists
or
and
out
pushf
pop
imul
cmp
adc
dec
sub
pop
rcl
lret
sub
psubusb
sbb
xchg
xchg
iret
cwtl
and
jae
mov
cmpsb
ret
jecxz
pop
mov
dec
mov
xchg
push
pop
jns
dec
add
pop
fimuls
ja
xchg
stos
stos
sbb
loope
sub
cwtl
shlb
push
dec
enter
or
sub
xchg
mov
shrl
addr16
jne
jae
test
cmp
mov
jnp
and
scas
dec
cmp
aam
stc
popa
out
shll
stc
or
shl
lret
jbe
mov
sti
lods
imul
hlt
icebp
mov
push
test
add
add
insb
pusha
adcb
cmp
shll
sti
and
ret
and
rol
xchg
dec
shrb
roll
sub
mov
add
jb
or
mov
lods
adc
call
adc
pop
xchg
test
mov
int
pusha
push
jns
adc
lods
aam
mov
xor
pop
arpl
or
in
loope
mov
fcoms
jae
scas
xchg
mov
lcall
loope
or
ret
add
mov
jecxz
sbb
pop
insb
xlat
mov
mov
lea
or
push
fwait
imul
push
cmp
clc
outsb
das
jmp
imul
pop
sub
sbb
jno
jb
jg
adc
xor
and
sub
dec
xor
aaa
jmp
shrl
testb
insb
ret
jae
je
pop
jb
js
jle
jg
xchg
inc
popf
lret
add
sbb
xor
fucom
insb
cmp
sbb
pop
sbb
loope
pop
lahf
dec
int
fimull
rolb
mov
aas
mov
fwait
outsl
mov
dec
mull
pop
pop
fwait
jg
movsl
ss
push
inc
mov
mov
xor
jp
dec
imul
xchg
gs
aas
test
xchg
or
add
in
jp
sbb
andl
or
xchg
adc
loope
xchg
mov
aas
loopne
jle
add
cmp
popfw
and
imul
lret
xchg
push
xchg
loope
andb
xor
jmp
xchg
insl
cltd
xor
or
xchg
xchg
mov
das
cmp
adc
mov
test
sbbb
push
pop
rorl
in
adc
and
mov
loop
loopne
insl
lahf
add
jo
inc
xchg
aam
push
add
fdivs
pop
mov
mov
dec
adc
out
adc
jge
xchg
adc
sbb
sbb
jae
loopne
inc
cld
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
jb
or
adc
mov
adc
add
mov
cmpsb
xor
ret
jbe
popf
cmp
lret
xor
in
push
xchg
jb
cmc
xor
mov
mov
add
xchg
cmpl
andb
pop
pop
mov
shl
sbb
xor
ds
jnp
xchg
pop
mov
pop
add
fcomps
jb
es
dec
xor
fiadds
lret
dec
sub
sub
fwait
loopne
mov
jp
ss
dec
or
out
bound
je
test
cmp
inc
mov
mov
ss
lahf
inc
or
scas
push
jl
xor
addr16
mov
les
lret
outsb
mov
loopne
push
loope
sarl
jp
add
sbb
ss
cmpl
jb
mov
cmc
lock
cmp
sub
jge
repz
gs
icebp
movsb
lock
jns
pop
push
adc
out
push
jns
and
xor
or
mov
sub
dec
out
scas
testb
in
lea
cmc
je
mov
jns
push
and
outsb
rclb
inc
hlt
std
test
jmp
call
stos
leave
push
cli
bswap
fisubs
push
scas
out
jb
flds
adc
das
mov
or
addr16
dec
lahf
lret
cld
out
sbb
jnp
out
jl
and
leave
test
in
sti
push
xchg
add
cli
mov
mov
cs
pop
nop
pop
cwtl
stc
cwtl
scas
xor
or
and
repz
or
inc
sub
pop
cltd
fnstcw
cmp
aas
inc
inc
into
inc
dec
pushf
shrb
jae
cli
insb
add
add
xor
and
jne
and
push
arpl
and
imul
add
push
fadds
scas
jo
add
andb
lret
mov
mov
xchg
inc
cltd
mov
leave
imul
sbb
div
in
push
fs
imul
add
adc
mov
pop
sub
cmc
add
ds
shlb
sub
movsb
or
stos
test
jecxz
bound
push
add
cmpsb
adc
hlt
pop
addr16
into
pop
mov
movsb
jne
testl
orl
fadds
push
jae
pop
outsl
stos
ljmp
rclb
insl
push
xlat
jb
push
mov
jns
shrl
push
dec
hlt
ss
xor
in
jle
jg
ret
fidivl
aad
lea
sub
es
sub
adc
add
scas
fcmovbe
sbb
stos
mov
dec
pusha
cmp
fs
mov
aaa
xchg
int
imul
sahf
inc
std
cltd
lods
xorb
push
cmp
sub
jno
and
out
dec
cmp
out
dec
andb
stc
and
dec
inc
sub
lock
stc
sbb
sahf
or
mov
lock
decl
mov
sub
stc
push
aaa
into
inc
cmp
fwait
inc
xchg
cmpsb
nop
rcll
les
dec
sahf
ret
jnp
fldenv
inc
out
aad
data16
dec
in
mov
add
inc
mov
shlb
jl
pop
xchg
insl
pop
inc
lcall
xchg
arpl
sbb
fstp
add
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
divb
adc
mov
adc
popa
pop
test
or
testl
pop
adc
leave
xchg
jge
aad
jno
and
and
hlt
jb
notb
ret
mov
or
xor
sub
rol
xchg
test
sti
sbb
sbbl
adc
dec
in
or
out
ficompl
lcall
mov
cs
gs
inc
pop
mov
jge,pt
mov
dec
outsb
jne
loope
or
call
mov
xchg
cmc
push
daa
aad
fsubs
mov
sbb
mov
sahf
les
movsl
je
sbb
insl
or
jnp
fwait
or
or
xor
test
cltd
dec
aad
or
jne
dec
xor
into
lahf
pop
ja
loopne
mov
in
xchg
push
hlt
test
cs
rcrb
mov
je
lock
sbb
add
rol
jg
loop
js
jp
out
aaa
xchg
sbb
mov
lds
cmp
jge
mov
push
jbe
decb
gs
scas
ljmp
adc
cli
insb
and
jp
inc
cmp
mov
pop
aaa
mov
adc
cmp
inc
test
rcrb
push
inc
mov
sarl
insl
sbb
mov
enter
xchg
adc
mov
mov
arpl
lahf
neg
enter
and
stos
jb
ljmp
jae
fidivl
clc
inc
addr16
imul
sbb
fsts
scas
icebp
cli
shll
hlt
js
cmp
pusha
das
jp
cmp
mov
outsb
or
nop
das
ret
insb
cli
arpl
sbb
push
sub
dec
xchg
xor
popf
scas
pop
pop
cmp
jl
stos
push
jp
mov
adc
sbb
lret
mov
mov
loope
dec
sub
iret
xor
push
push
es
test
out
mov
in
push
pop
mov
sub
aaa
inc
jbe
mov
or
fdivr
inc
mov
xlat
repz
and
mov
xchg
and
fcmove
mov
inc
push
nop
mov
in
int3
cmp
mov
cld
loop
mov
arpl
push
icebp
lea
fsubrp
sbb
cmp
mov
shlb
jbe
sbb
sar
mov
cmpsb
add
test
add
mov
icebp
jns
adc
xchg
pushf
imull
xor
pop
push
cmp
test
into
ror
ret
jns
dec
je
cltd
orb
mov
dec
dec
cltd
jg
call
push
adc
jmp
xor
daa
mov
inc
loop
in
call
push
mov
mull
or
jne
sahf
mulb
ljmp
jg
outsw
fdivr
dec
ja
lods
xor
push
mov
inc
xchg
inc
push
outsl
scas
sbbl
lcall
bound
inc
mov
movsl
mov
mov
cmp
cmc
repnz
lods
lret
xchg
inc
pop
and
xchg
out
jle
add
sub
push
dec
push
and
cltd
xor
and
int3
pop
xchg
test
pop
jno
sbb
flds
popa
jp
cmp
loope
xor
mov
movb
push
and
jbe
mov
adc
add
push
faddp
cwtl
jb
shrl
cltd
in
jg
test
fidivrs
mov
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
call
sbb
adc
movl
pop
sub
scas
jb
test
aaa
mov
xchg
fdivs
out
lret
je
ja
ret
test
xchg
inc
push
dec
int3
add
xchg
testl
lods
sbb
dec
jge
adc
ret
andb
aam
or
stc
movsb
mov
outsl
cld
mov
dec
in
push
inc
or
and
inc
fmuls
jne
movsb
daa
jae
out
adc
inc
out
and
lret
ja
mov
xchg
inc
out
in
xorl
cmp
movsb
mov
daa
mov
adc
xchg
cld
fiaddl
jno
mov
push
sub
dec
ret
ja
push
movsbl
and
sar
push
jno
adc
nop
sahf
test
test
xorb
ds
push
popa
cmp
rorl
push
stos
enter
cmp
xchg
insb
push
pop
dec
xor
movsl
mov
adc
test
fimuls
incl
cmp
xor
hlt
and
aam
mov
sub
lret
testl
loopne
xchg
jp
out
cmp
sbb
test
loopne
arpl
or
or
sub
jl
lock
xor
cmpb
sub
loopne
arpl
mov
fs
sub
data16
ret
imul
out
cmp
cmp
lock
add
andb
pusha
test
shr
lea
loopne
jb
cmp
cmp
jmp
jl
xchg
push
jmp
cld
lret
testl
pusha
xor
pop
xor
imulb
pushf
xor
and
fildll
push
sub
out
mov
push
mov
or
inc
jo
and
enter
cmp
lods
pop
jne
sarb
xchg
or
jnp
mov
je
cmp
shlb
dec
rorb
xchg
les
inc
lock
pop
cmpsl
cmp
adc
jp
addr16
xchg
dec
mov
mov
push
ret
add
int
pusha
jge
jmp
arpl
repnz
push
mov
cmp
xchg
add
sbb
lock
ljmp
pop
push
mov
outsb
xor
jbe
ret
dec
push
aas
out
pop
add
adc
push
fdivrl
sub
pop
scas
fildl
mov
add
lods
arpl
ja
push
dec
andl
stc
cmpsb
mov
mov
mov
sub
jns
setae
daa
mov
xor
push
sbb
mov
xchg
roll
jg
test
pusha
fildll
adc
xchg
and
dec
fmuls
enter
lcall
lds
fsubrl
rclb
jl
stc
pop
mov
mov
fcmovb
imul
cmp
les
add
lcall
jne
xor
orl
aas
add
pusha
mov
aaa
mov
push
into
sbb
xor
sbb
and
fmull
das
sbb
cld
jle
jb
and
jae
scas
inc
dec
gs
xor
and
cmc
out
imul
sub
push
je
or
pop
pop
inc
frstor
or
pop
jae
ds
rol
mov
popf
mov
jmp
and
jo
lock
std
ret
adc
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
arpl
ljmp
xchg
jge
inc
lock
test
mov
aas
imul
fsubrs
jno
inc
inc
std
jno
arpl
jbe
push
mov
jb
jno
push
les
pusha
movsb
ficoml
or
int3
push
shrb
xchg
orl
xchg
cwtl
and
aas
inc
push
out
repz
cs
sub
outsl
sub
lret
cs
aam
fistl
movsb
arpl
dec
lahf
dec
in
inc
es
pop
cmpsb
aas
and
dec
and
adc
pop
adc
and
mov
testb
adc
mov
pop
mov
mov
int
xlat
out
popa
xchg
imul
sbb
mov
cwtl
jmp
jo
xor
push
addr16
inc
lock
addr16
push
pusha
mov
mov
mov
fdivs
in
push
dec
mov
insb
xor
inc
fs
xchg
shr
outsl
pop
jno
inc
jl
mov
stc
add
shlb
bnd
fisttps
leave
popf
cmp
or
mov
mov
orl
jmp
into
je
shll
or
mov
call
mov
pusha
aam
sbb
pop
push
sub
and
nop
test
test
add
fwait
pop
in
cmc
adc
sbb
mov
pop
add
cld
clc
mov
add
movsb
loop
push
orl
mov
or
xchg
add
imul
dec
cld
into
mov
in
jo
dec
adc
adc
mov
scas
push
xor
fsubs
push
sbb
scas
repnz
leave
jb
gs
cmp
call
cmp
and
mov
pop
inc
mov
inc
pushf
xlat
mov
call
sbb
mov
call
mov
fmuls
shlb
dec
mov
insb
ficomps
mov
enter
pop
adc
cs
adc
dec
incl
push
ret
mov
ret
inc
mov
out
std
pushf
xor
jbe
mov
mov
cs
lret
out
sbb
cs
adc
std
ret
lcall
outsb
jmp
mov
stos
push
bound
movsb
xchg
lods
add
lds
xchg
or
aam
dec
mov
fcoml
mov
repz
inc
scas
and
std
sub
imul
jmp
arpl
test
mov
xchg
out
adc
insl
xor
mov
inc
dec
in
and
sbb
pop
dec
fbstp
sbbb
mov
jae
ret
pop
pop
test
jb
call
sbb
push
daa
xor
mov
push
sbb
mov
mov
xchg
shlb
jmp
fcompl
mov
insl
xor
and
imul
mov
or
scas
inc
icebp
xchg
sbb
mov
xchg
mov
jp
sub
cmpsb
mov
call
push
popa
sbb
and
mov
lds
pop
lret
sahf
test
cwtl
aad
and
movsl
addr16
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
lahf
jbe
insb
jae
adc
mov
adc
sub
das
rcl
push
cmp
cmp
loop
mov
adc
cmpsb
add
mov
cmp
sbb
ss
xstore-rng
cmpsl
xor
leave
fmuls
xchg
das
movsb
pop
jnp
and
cwtl
mov
pop
mov
mov
xchg
mov
sti
fiadds
sub
pop
shrb
and
minps
bound
push
jecxz
inc
xchg
daa
jecxz
mov
mov
mov
jle
arpl
or
adc
rcl
stc
test
jne
loop
push
adc
das
stc
adc
aaa
xchg
dec
adc
mov
add
add
mov
out
xor
dec
mov
clc
fistpl
push
or
jmp
xchg
stc
xchg
and
pop
xchg
or
loope
arpl
into
lea
in
sub
stc
fs
push
mov
aaa
fs
aas
sub
and
push
sarb
inc
dec
sbb
mov
sub
insb
mov
lods
in
adc
xor
int
mov
jbe
aaa
jne
jnp
pop
test
or
push
stc
lret
insl
imul
cmc
test
add
dec
adc
dec
std
decb
lods
mov
lock
push
push
mov
mov
mov
lds
add
inc
orl
mov
cld
pop
add
cwtl
jecxz
xlat
ficompl
sbb
jae
data16
jb
pop
dec
dec
fsts
mov
cs
sub
or
mov
es
sub
inc
cmp
and
push
push
movsb
sbb
pop
movl
mov
scas
xchg
enter
stos
hlt
jl
xchg
sbb
push
stos
lea
dec
push
push
ret
dec
mov
sub
push
xchg
cmp
ret
mov
jp
pusha
inc
lock
insb
leave
test
in
sub
cli
mov
pop
mov
mov
sbb
adc
sar
cmc
mov
mov
and
inc
and
aad
hlt
es
adc
jae
dec
pop
jle
mov
mov
fidivs
inc
nop
xchg
movsb
int
cwtl
lods
popa
out
inc
in
loopne
fiaddl
scas
inc
ds
jecxz
sub
mov
or
sbb
sahf
stos
jo
xchg
adc
pop
inc
dec
mov
movsb
repnz
test
sub
or
adc
outsl
adc
sarl
mov
mov
fimuls
sbb
dec
mov
fs
dec
mov
push
out
adcl
stos
rorl
mov
stc
leave
xchg
pop
jo
cmpl
mov
push
adc
adc
pop
dec
fiadds
scas
mov
cmp
arpl
loopne
cmp
sub
imulb
adc
jge
or
cmp
xchg
ficoml
push
jns
aas
mov
pushf
cwtl
scas
dec
xchg
scas
outsb
xlat
xchg
lret
adcb
minps
add
cmp
negb
adc
repnz
lods
fcompl
push
rorl
dec
and
imul
idivl
cmp
nop
imul
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
mov
adc
mov
adc
addr16
sbb
add
call
pop
dec
lret
sub
mov
loop
and
bound
dec
repnz
add
cmpsb
adc
sahf
add
push
cmpsl
dec
jge
cmc
loopne
cltd
das
push
scas
inc
stc
je
imul
xor
scas
notb
out
movzwl
rcll
in
mov
mov
pop
sub
cmp
adc
inc
xchg
pushf
fwait
scas
int
fadds
scas
jl
inc
mov
mov
and
lods
ds
aam
imul
sbb
int
js
add
push
arpl
sub
push
sti
push
lcall
lds
and
js
jo
inc
and
test
xchg
adc
cmc
stos
pop
clc
into
cwtl
mov
test
pop
andl
jmp
mov
aas
or
movsl
add
cmc
pop
stos
sbb
and
movl
adc
inc
pop
pop
jo
jp
xchg
aam
imul
aam
mov
popa
pop
pusha
mov
and
sti
arpl
rcr
mov
lock
jl
xor
arpl
arpl
test
jl
fwait
and
sub
mov
pop
inc
fmuls
mov
push
and
mov
mov
adc
stc
xchg
cmp
adc
shlb
mov
adc
mov
scas
cwtl
ds
or
clc
iret
enter
lahf
out
int3
into
sti
lds
xchg
movsl
add
sahf
testl
fucomip
inc
adcl
and
dec
call
and
ror
xchg
dec
push
ljmp
hlt
in
test
adc
into
shlb
movsb
mov
push
out
xchg
rcl
sbb
adc
mov
ret
cmpsb
cmp
sub
and
sti
pop
scas
fs
cmp
aam
dec
test
lock
mov
adc
loop
sub
jp
push
jne
or
out
imul
aad
xchg
loopne
out
xchg
push
popa
stos
mov
loope
cmp
aad
addr16
stos
or
fdivs
cltd
sub
cmp
fucomi
scas
inc
and
sysret
mov
icebp
xchg
push
jmp
cmp
jb
dec
sahf
inc
adc
xchg
sbbb
adc
sbb
inc
popa
mov
dec
aaa
sbb
outsl
ds
out
ljmp
outsb
dec
inc
jge
push
sahf
les
push
popa
xchg
mov
cltd
jnp
sub
cmpsb
into
push
cltd
sub
fwait
xchg
fcompl
repz
inc
inc
sub
mov
test
fadds
mov
mov
sbbb
pop
push
lahf
out
fdivrl
push
mov
push
inc
push
push
or
dec
mov
icebp
inc
clc
lret
test
mov
bnd
add
sahf
out
jge
leave
fs
mov
les
popf
test
sbb
lds
loop
lea
mov
and
inc
sbb
scas
arpl
out
lea
lret
sub
dec
push
int3
push
xchg
mov
mov
insb
out
mov
ja
push
mov
cmc
popf
pop
sub
xchg
insl
inc
in
push
jae
jle
mov
mov
xor
jmp
cmp
ja
pop
aaa
and
or
mov
mov
adc
fistpll
loop
jns
das
rcr
jg
push
sbb
andb
push
dec
je
xor
imul
lcall
pop
out
jb
mov
xor
enter
clc
jbe
and
mov
pusha
stos
cmc
mov
dec
fcompl
repnz
jl
ljmp
inc
xor
dec
sbb
and
pusha
rcrl
dec
mov
xor
or
xlat
pop
out
into
sub
xor
loopne
es
push
push
pop
jle
and
das
test
lcall
xchg
sar
lahf
xchg
mov
fs
and
mov
sbb
cmpsl
repnz
les
imul
dec
inc
jno
inc
jo
fbld
call
mov
enter
inc
and
std
jp
sahf
pop
cwtl
sti
icebp
dec
sarl
addr16
xor
sahf
test
adc
sub
jbe
stc
mov
sub
lcall
mov
sbb
sarl
addr16
loope
popa
jo
jns,pt
movsl
sub
xorb
rcrb
mov
mov
ja
push
adc
loop
sub
and
sub
xorl
adc
and
out
mov
or
xor
pushf
pusha
mov
rcrl
popf
mov
jle
jle
jle
sbb
sub
out
jnp
sbb
pop
popf
mov
jmp
in
dec
adc
push
add
cs
shlb
out
inc
in
inc
mov
decb
lahf
ljmp
or
and
mov
push
js
loop
or
or
test
inc
insl
add
jp
or
loope
jg
jg
mov
inc
imul
js
arpl
lods
fcoms
or
insb
cmp
clc
xlat
push
ljmp
in
pop
and
inc
decb
mov
xor
loopne
daa
push
inc
jl
leave
push
adc
jp
in
jge
mov
sub
and
not
mov
mov
xor
sbb
mov
insb
fisttps
fabs
sbb
adc
and
xor
jae
dec
xchg
repnz
adc
aaa
pop
dec
cwtl
sub
stc
loope
arpl
cld
in
mov
ret
stos
in
lock
ror
xor
loope
sbb
test
arpl
xor
mov
enter
adc
test
fwait
jbe
ficoms
test
and
mov
ret
insl
xchg
aaa
fcmovu
jge
int3
pop
sbb
ljmp
fisttpll
aaa
mov
jae
inc
push
push
dec
sbb
repnz
leave
inc
and
cli
cmp
jge
add
stc
cmp
pusha
inc
aaa
push
jmp
pop
or
ret
lods
sbb
arpl
ds
inc
les
cltd
or
and
mov
and
fistl
and
aad
loopne
push
icebp
enter
sub
dec
jp
adc
mov
cmc
loope
sub
mov
xor
mov
scas
add
mov
sub
test
cli
cmpsl
lahf
leave
test
sub
daa
pop
cmp
xchg
mov
or
stc
aas
insl
mov
push
ljmp
negb
jo
out
dec
mov
and
rcrb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
sub
sbb
in
and
imul
pop
inc
jbe
flds
cmpsb
mov
cmp
mov
outsb
xchg
fidivl
insl
test
sub
or
adc
aaa
and
dec
sub
xor
pushf
push
stos
pop
sbb
lds
inc
lret
dec
xchg
cmpb
movsl
fld1
repz
xor
jg
inc
int3
pop
bound
push
push
out
jo
xchg
dec
sub
mov
loopne
and
or
inc
lahf
mov
aaa
idivb
xor
sbb
iret
ja
pop
nop
cwtl
jo
cmp
xchg
adc
aas
jbe
shlb
fstpt
xchg
xchg
dec
stos
xor
in
lock
in
xlat
sub
pop
leave
nop
fidivrs
mov
or
lcall
and
ds
cmpsl
mov
outsl
add
out
push
popf
sub
shlb
jae
or
movsb
mov
lret
jbe
inc
cmpsb
jp
mov
jo
pop
or
mov
mov
aam
fildll
xor
inc
pop
xchg
shll
ja
ss
jl
xor
sbb
xor
cwtl
mov
or
movsb
sti
ja
bound
int3
pop
push
outsb
nop
or
stos
jge
cmp
mov
clc
jge
mov
sub
test
mov
in
int3
out
nop
push
stos
push
sbb
mov
mov
jle
mov
add
dec
sbb
out
sbb
dec
insb
jl
cmpsl
jg
clc
movups
cmp
or
jge
out
sbb
adc
addl
xchg
bound
movsl
sbb
inc
mov
arpl
add
ja
out
push
nop
mov
mov
stos
jbe
gs
sbb
mov
mov
sub
popa
stc
fs
int3
jo
lods
xlat
dec
into
repz
xchg
xlat
and
out
jmp
jp
divl
mov
pop
je
xchg
scas
jbe
cs
fnstsw
fistl
xchg
aam
dec
push
lea
leave
and
add
push
cmc
sub
and
popf
in
insl
sub
scas
and
rorb
mov
gs
gs
push
lods
fimuls
idiv
sbb
rclb
sbb
ss
mov
cmp
jl
push
fs
mov
jo
testl
adc
mov
and
sub
cmp
mov
insb
fcompl
in
ss
add
shlb
xlat
cmpsl
sbb
not
mov
mov
in
aam
imull
dec
xchg
outsb
shlb
pop
lahf
dec
xor
call
sub
push
ja
insl
sub
add
in
and
sbb
add
lods
mov
call
adc
lds
loop
loopne
mov
cmp
push
inc
outsb
xlat
insb
lea
mov
sbb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
hlt
add
adc
adc
adc
push
xor
mov
mov
stc
icebp
push
enter
adc
roll
stos
pop
push
and
cmp
or
iret
adc
lods
adcb
lret
cltd
dec
test
add
xor
clc
into
call
lcall
fidivs
and
movsl
fsubrs
enter
test
fimuls
dec
sub
mov
xlat
xchg
cmpl
and
adc
dec
inc
enter
add
lock
icebp
sub
push
sahf
cmc
adcl
cmp
jns
and
jno
setg
inc
jo
push
lods
and
repnz
addl
iret
push
imull
dec
gs
mov
mov
cld
xchg
shrl
mov
inc
out
mov
adcl
loop
pop
das
daa
mov
negb
mov
jbe
mov
scas
cmpsl
pop
add
leave
sahf
sbb
test
xchg
rcl
pushf
inc
ja
jge
inc
push
fistl
cmp
pop
xor
pop
and
ficomps
fisttpl
or
dec
sub
xor
or
cmp
dec
rolb
and
mov
fs
jns
sahf
sbb
hlt
shrb
ljmp
push
xchg
pop
push
aam
les
cmpl
push
xchg
rcl
ss
pushf
mov
jl
cltd
int3
add
inc
ffreep
stos
repnz
dec
jno
fwait
xchg
ds
add
pop
call
stc
sbb
ret
scas
sub
repz
mov
cmp
test
inc
in
mov
jge
sub
cmpsb
pop
loopne
xor
cmp
arpl
pushf
push
mov
pop
daa
inc
add
dec
cmc
mov
mov
xchg
xlat
and
xchg
in
adc
add
je
inc
xor
test
std
cmp
lret
scas
xchg
mov
and
jmp
mov
xor
pop
icebp
lret
or
push
mov
fwait
test
and
hlt
inc
or
sbb
aad
iret
std
jge
cmpb
adc
cmp
lret
pushf
adc
es
cmp
cmp
loopne
mov
cltd
das
sbb
mov
cmc
sbb
test
call
dec
out
es
push
ret
jl
out
enter
mov
mov
pop
lock
push
iret
imul
mov
cld
and
jle
aaa
push
int
in
leave
adc
fisubl
out
cmp
cs
iret
inc
cmp
jecxz
or
sub
push
jnp
xchg
jmp
cmpsb
pop
push
jo
in
ret
fnsave
sbb
bound
push
adc
xchg
adc
rolb
mov
movsl
xchg
push
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
pop
jle
mov
adc
adc
xchg
das
stos
iret
loop
or
ret
push
cmp
outsb
shlb
js
mov
pop
sbb
and
xor
inc
in
inc
movsb
dec
jg
xor
sbb
dec
movsl
sub
decb
mov
pop
jge
mov
and
dec
or
fwait
lods
movsbl
xchg
lcall
in
adc
ss
adc
mov
jno
pop
int3
mov
push
fdivrs
orl
iret
and
add
shrl
inc
clc
mov
popf
inc
sbb
jecxz
mov
scas
add
mov
cwtl
xchg
das
sti
lea
dec
push
in
dec
sbb
fs
push
push
pushf
mov
mov
js
cmpsl
jb
mov
insb
push
movsb
or
inc
scas
lods
inc
xchg
inc
int
pop
lret
add
shlb
xlat
dec
dec
pop
mov
adc
in
iret
push
or
adc
adcb
sub
sarb
push
xchg
jge
leave
loop
mov
data16
shrb
enter
dec
fprem1
test
cmp
push
cmp
out
mov
aad
lret
cwtl
push
nop
push
pop
sbb
movsl
lret
int
aam
xor
aaa
push
outsl
fwait
rcrb
jecxz
inc
fists
push
jns
and
dec
xor
lcall
jmp
rol
pop
movsl
mov
and
mov
inc
cmp
dec
rcll
pop
lret
xor
mov
or
movsb
sub
push
lahf
push
cmp
mov
test
mov
nop
subb
fmuls
insb
negl
rcr
mov
mov
jbe
push
cmp
or
in
fisubrs
rolb
mov
popa
pop
cmp
mov
loopne
ja
mov
xor
mov
je
repnz
decb
je
out
mov
out
adc
jb
pop
test
and
push
into
test
pushf
dec
pop
adc
pop
jne
sub
xor
mov
inc
in
call
inc
push
sbb
cmp
xor
mulb
mov
fisubl
cwtl
mov
pop
jmp
push
mov
js
lea
int
das
cwtl
imul
fcoms
cmp
jp
fisubs
js
push
das
dec
sub
sbb
inc
lock
jge
fadds
test
push
int3
cmp
stos
sarl
xchg
jnp
fistpll
cmp
outsl
sub
xchg
or
jecxz
sub
xor
cs
lahf
sub
pop
xchg
dec
repz
and
add
or
jbe
cmp
pop
scas
xchg
ss
add
sti
pop
idivb
icebp
mov
aam
in
lahf
das
mov
test
rolb
outsb
mov
cs
push
in
push
pop
xadd
mov
sahf
jmp
rcrl
dec
cld
faddl
jns
sub
add
add
ret
nop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
sahf
pop
lods
dec
jecxz
adc
adc
adc
adc
xchg
orl
cltd
mov
cmpsb
mov
cld
sub
stos
xor
aaa
inc
add
push
cmpsl
mov
adc
push
fs
int3
out
lods
mov
dec
rclb
lret
mov
scas
mov
outsb
mov
arpl
fadd
fistpll
adc
pop
movsb
aas
rcrb
dec
outsl
xchg
lcall
popf
sti
decl
movsl
cmp
mov
and
and
frstor
test
pop
pop
loop
jge
mov
mov
xor
sub
add
pop
adcl
mov
hlt
mov
mov
cmp
test
xchg
cltd
jb
mov
add
ret
jl
inc
shlb
popf
mov
mov
xor
jl
cmp
data16
add
mov
pop
sub
dec
cmpsl
or
xchg
push
ds
test
mov
and
ret
or
sbb
push
mov
pop
cmp
sbb
push
dec
sbb
add
les
mov
xlat
lock
dec
adc
jo
inc
repnz
cli
sbb
cmpsb
sbb
jle
sub
lret
mov
adc
das
push
push
lods
inc
js
jg
fwait
gs
icebp
inc
lcall
and
pop
jo
aas
in
and
jb
mov
out
ljmp
xor
or
push
sbb
insl
push
cld
add
cld
jmp
addb
lea
push
pop
cmp
in
imulb
sub
or
shrl
ret
jno
cltd
sbb
cmpsl
sbb
sub
imul
xchg
addr16
popa
jo
xchg
inc
mov
out
mov
sbb
ror
ror
and
xorl
mov
adc
or
inc
xchg
mov
inc
pop
push
inc
cld
cmpsb
int3
sub
stc
int
cmp
addr16
jae
jl
dec
dec
std
mov
fimuls
lods
push
mov
aas
mov
and
loope
sbb
mov
stos
lods
out
mov
jg
mov
dec
imul
add
sahf
jl
push
add
mov
lahf
mov
mov
xchg
xlat
lahf
mov
xor
test
mov
mov
push
decl
mov
push
shlb
xchg
mov
lret
push
jg
push
add
add
loop
push
sbb
lahf
push
stos
outsl
es
and
lods
mov
or
inc
imul
ds
jge
iret
cmc
lods
js
rcll
mov
mov
popf
aam
sahf
xchg
cmpl
pop
or
sbb
iret
inc
sub
aad
pop
jo
orb
into
mov
sbb
jno
sbb
xchg
hlt
lods
rol
mov
pop
jmp
not
popf
test
add
or
je
dec
imul
pushf
sarl
pop
daa
cmpsl
inc
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
pushf
sbb
stos
loope
adc
adc
adc
dec
lcall
adc
outsb
outsb
cmc
out
or
fs
jecxz
and
push
mov
mov
mov
cmp
or
sbb
lea
mov
scas
stos
push
outsl
lods
or
mov
sub
sbb
dec
jecxz
dec
mov
les
outsl
jge
stos
xchg
data16
aaa
xor
dec
mov
pop
sbb
je
pop
fcoml
mov
es
hlt
dec
loope
jge
in
cltd
sbb
subl
jle
adc
pop
filds
mov
jno
jle
cmp
testl
jp
adc
popl
push
out
loope
roll
loopne
enter
push
test
test
or
xor
test
insb
in
pop
adc
lods
fwait
insl
push
cli
stc
ja
push
add
add
sub
inc
fidivs
xlat
adc
pop
push
orl
lods
cmp
or
cld
jp
stc
into
pop
add
jle
pop
push
push
cmp
sbb
xchg
sub
add
push
sub
mov
cmp
bound
cmpsb
mov
ret
inc
or
pushf
and
mulb
rcrb
les
ret
inc
pop
jecxz
mov
and
and
push
jae
sub
and
mov
mov
add
jne
in
jb
scas
mov
out
lret
test
testl
aaa
and
sbb
cmp
or
inc
repz
or
push
sub
sbb
loop
int3
test
out
pop
loop
test
int3
xchg
outsl
ret
mov
sbb
rcll
lock
inc
cmp
mov
lea
insl
or
dec
enter
sbb
add
in
xor
jo
js
scas
dec
int3
lahf
mov
lods
in
aam
jae
stc
sub
push
loop
sub
add
dec
sti
mov
adc
inc
fldt
aad
das
jns
aad
popf
push
mov
sbb
cmp
outsb
add
mov
xor
mov
xchg
jle
mov
mov
daa
jl
mov
add
fldcw
mov
adc
pop
cwtl
fs
sub
dec
test
rorl
lcall
mov
test
pop
sub
dec
ret
xchg
sub
cmp
iret
push
and
ljmp
sbb
and
int
enter
cmpsl
jbe
lahf
inc
add
pop
sub
pop
xlat
fdivl
fs
lret
cmpl
cmp
add
cli
pop
stos
scas
push
mov
lock
pop
mov
or
add
push
lock
out
fidivrs
xchg
enter
mov
fwait
in
adc
mov
movsb
mov
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
sub
xor
xor
dec
fisttpll
enter
fcmovnbe
clc
or
scas
mov
xchg
cmpsb
not
mov
cmp
adc
sub
lret
dec
mov
fisubs
clc
punpcklwd
adc
inc
idiv
dec
das
loop
inc
dec
cmpb
mov
daa
dec
cwtl
dec
sbb
adc
mov
adc
cmpsl
pop
in
arpl
test
dec
pop
in
mov
and
push
xchg
iret
or
jle
enter
add
rcl
jo
ss
push
jmp
repnz
jo
sbb
sbb
arpl
fnsave
push
test
stos
fnstsw
sbb
push
adc
in
leave
push
outsb
sahf
hlt
push
hlt
icebp
stc
jmp
mov
jg
out
inc
mov
ret
add
or
mov
inc
int
vunpcklps
pop
movsb
push
or
mov
mov
inc
int3
jne
in
ret
jmp
push
leave
jge
sub
stos
inc
stos
mov
or
jmp
mov
sbb
inc
cmp
in
adc
addl
add
sub
cmpsl
sub
or
std
bound
jecxz
mov
cld
jp
lcall
sbb
pop
jmp
jle
pop
fnstsw
jecxz
xchg
and
out
test
arpl
pop
and
jge
sbb
pushf
les
add
icebp
fistl
es
ljmp
outsl
mov
jo
inc
scas
das
sub
arpl
repnz
shll
jg
popa
pop
adc
jle
sub
scas
gs
sub
test
das
or
mov
jmp
ds
nop
mov
ljmp
punpckhdq
loope
ret
dec
lea
jmp
lock
pop
push
icebp
mov
cltd
ret
iret
add
mov
ret
cli
mov
push
shlb
arpl
imul
jmp
mov
xlat
aad
das
fistpl
hlt
or
adc
jns
repz
fcomps
rcll
dec
jp
nop
fsubrp
pop
cmp
adc
push
adc
movsl
jns
shl
pusha
sbb
out
in
out
jb
nop
xchg
and
and
xor
inc
push
int3
xchg
dec
push
jp
sub
ja
cmp
add
jp
in
fcmove
js
inc
neg
adc
ja
loope
push
mov
ret
stos
imul
insl
test
rcrl
pop
movsl
pop
lods
aam
push
adc
in
mov
mov
jb
jae
jno
mov
add
test
mov
mov
inc
push
inc
jbe
push
mov
push
lahf
iret
in
fiaddl
push
into
hlt
dec
insl
mov
push
xchg
cmp
ljmp
lock
pop
push
movsb
and
inc
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
jge
stos
pop
aad
adc
adc
adc
jno
cmp
add
adc
outsb
icebp
test
push
push
cmpsl
xchg
sbb
lcall
adc
mov
and
stos
push
or
aad
lods
and
das
mov
adc
fwait
xchg
mov
ror
inc
imul
push
daa
pop
dec
sub
es
mov
dec
roll
pop
std
rcrl
lods
fistps
jle
or
inc
fcompl
xor
sbb
mov
shlb
sahf
ret
pop
or
test
rolb
lcall
sbb
rorl
movsb
call
cmp
jl
lea
icebp
cmp
orl
std
mov
jae
aad
out
lcall
cmp
sahf
daa
stos
test
mov
adc
lods
je
pop
xchg
or
movsb
lret
inc
push
pop
lods
les
mov
cld
scas
xchg
clc
mov
xor
add
imul
lret
sub
pop
mov
idiv
pop
aas
xor
xor
mov
mov
and
ret
mov
das
cmc
insb
jg
in
notl
cmp
addr16
xor
fdivs
sbb
imull
mov
bound
and
pushf
call
lret
test
inc
lret
pop
rolb
and
sti
inc
sub
jnp
jns
mov
das
cld
cmp
ret
or
jp
mov
addr16
movl
icebp
sub
lcall
cmp
add
test
sbb
jb
imul
movsl
frstpm(287
pop
in
push
hlt
repnz
dec
xor
cmp
push
pop
pushl
xlat
filds
adc
shrl
out
or
pop
andb
ret
xchg
mov
int
mov
enter
mov
jle
and
in
and
mov
xlat
push
lcall
fnstcw
pop
sub
mov
testl
sbb
into
inc
lods
int3
xchg
push
test
mov
lret
jmp
jnp
aaa
sub
out
add
jmp
les
push
mov
jecxz
push
sub
sbb
sub
jp
push
divb
mov
cltd
lds
ss
in
es
ss
pop
jecxz
hlt
fsubrs
xor
incb
bound
out
jl
das
dec
lret
sub
sbb
mov
rcll
notl
mov
sub
in
pusha
mov
or
sbb
addr16
lods
sub
shr
roll
pop
les
dec
sahf
push
fcmovu
sbb
in
in
mov
loope
push
fstps
imul
fiadds
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
xor
jle
int
adc
mov
jmp
jno
mov
jg
mov
arpl
push
ret
jmp
inc
arpl
fists
xorb
xchg
dec
fisubs
xchg
out
sub
xchg
call
negb
xchg
iret
inc
jb
test
aam
push
inc
test
cltd
incb
xlat
pop
push
fdivrl
stc
inc
xchg
push
jmp
cmp
mov
mov
mov
sbb
mov
dec
stos
dec
adc
fwait
mov
add
xor
shrb
xor
mov
mov
in
js
xchg
and
push
addr16
xor
mov
js,pt
xlat
mov
sti
and
inc
or
mov
clc
xor
jne
dec
sbb
push
mov
xor
inc
test
mov
jle
add
je
sbb
add
test
out
sbb
in
jle
xchg
cmpsb
xchg
ret
cmp
std
mov
shll
mov
push
orb
in
insb
mov
pop
cmp
dec
adc
xchg
outsl
xchg
nop
fdivl
mov
outsl
adc
nop
aas
xchg
inc
nop
pop
sbb
mov
scas
frstor
das
xchg
clc
lea
dec
add
stc
push
es
fisubrl
mov
into
inc
push
adc
call
pop
cmc
cmc
test
xchg
pop
outsl
pop
adc
lods
icebp
jge
pusha
insb
jge
add
xchg
jp
rcrl
mov
cmp
test
mov
push
cltd
in
sub
lahf
lods
ret
xchg
int
jl
add
xchg
push
notl
mov
xorb
or
scas
xor
fiaddl
fidivs
sbb
sbb
loope
subb
jnp,pt
lock
lret
sahf
push
test
movsl
mov
mov
cmp
out
into
vpcmov
inc
fsubrp
pop
pop
dec
xor
dec
enter
ret
and
insl
js
xchg
dec
add
cs
hlt
pop
pop
aas
mov
shlb
faddl
int
out
enter
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
mov
adc
xorb
pop
idivb
decl
orl
and
lods
cmp
ja
insl
daa
popf
mov
mov
cmp
dec
sub
sarl
out
enter
lcall
mov
or
pop
icebp
popf
add
notl
mov
aam
test
jae
cmp
xchg
xor
xchg
mov
inc
ret
clc
fcomps
cwtl
fcmovu
lret
lock
mov
jno
add
int
inc
repnz
mov
jg
aas
sbbl
mov
lods
into
addl
xchg
lods
add
adc
lea
xchg
dec
inc
in
mov
loopne
mov
cs
sti
rcr
cmp
lret
ret
cmp
shl
mov
cld
jle
fiadds
xor
dec
in
push
movsl
pop
or
sbb
std
mov
pop
mov
sbb
pop
lcall
push
orb
ret
testl
lea
jmp
mov
mov
flds
add
ret
adc
movsb
xchg
bound
lock
sub
pop
test
loopne
jnp
add
cwtl
sub
cmp
rcr
adc
ror
xchg
call
loop
push
lea
add
jo
jl
lea
out
jb
xor
cmp
cmpsl
xchg
fs
cmpb
inc
lret
mov
mov
int3
call
adc
xchg
jae
adc
stc
stos
sbb
adc
notb
fildl
mov
aas
fidivrl
addr16
and
ror
adc
cli
cmp
sarb
and
out
rolb
mov
ja
dec
out
or
mov
scas
ret
lods
outsl
and
out
iret
rep
ja
cmpsl
es
out
aaa
push
mov
addl
cmp
mov
sar
out
outsb
aad
repnz
or
xchg
cmpsb
aaa
jl
jmp
loopne
lret
ss
mov
loopne
push
adc
jecxz
pop
int
test
cmp
and
cld
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
lock
adc
pop
fistps
mov
imul
dec
mov
gs
jno
enter
insl
lahf
dec
mov
ds
sbb
fisubs
loopne
int3
leave
popa
xchg
cmp
pop
xor
pusha
lods
in
push
push
mov
and
lods
xchg
inc
xchg
push
das
xchg
sub
inc
jns
push
pop
imul
pop
loopne
pushf
iret
inc
jne
fidivs
sbb
xor
dec
divb
scas
ljmp
sbb
mov
addb
stc
mov
dec
loope
jp
or
jmp
sbb
pop
bound
repz
outsb
cmpsl
leave
insb
and
stc
mov
pop
in
pusha
test
mov
adc
xchg
popf
inc
dec
mov
and
sbb
cltd
cmp
push
xor
mov
scas
mov
daa
mov
mov
jb
mov
xor
cmc
imul
mov
mov
je
sub
xlat
repz
shlb
cld
shlb
call
loopne
mov
xor
mov
dec
repz
push
xlat
daa
jb
sbb
loop
add
xor
lahf
cli
scas
dec
push
jne
jo
mov
mov
xor
fcoml
jnp
clc
rcl
jo
aas
or
stc
stos
out
add
xchg
mov
cmpsl
add
les
lret
pop
xor
into
aad
jb
add
neg
xorl
div
loop
xchg
push
sub
xorb
mov
mov
incl
aad
fimuls
js
push
push
fistpll
add
push
push
loop
cmp
aas
jecxz
xor
aam
pop
cmp
dec
in
dec
inc
sub
adc
pop
or
pushf
mov
inc
ds
add
fs
mov
js
mov
jp
js
add
jmp
cmp
jmp
push
ret
and
mov
roll
shl
ret
sbb
sti
push
mov
xor
cli
movsb
rcrb
call
dec
fsubrl
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
pop
hlt
mov
movlps
daa
pop
inc
xor
push
imull
loope
sbb
popa
fcomps
dec
sti
mov
and
sbb
movsl
mov
data16
mov
popf
in
add
mov
bound
shrl
sbb
mul
movsb
clc
sub
out
aam
pop
push
push
push
pop
and
mov
or
cmp
inc
lcall
adcl
cwtl
mov
out
scas
hlt
mov
jp
gs
lods
push
into
lods
cmp
jb
outsl
xchg
fisubrs
int
shll
stos
sbb
popa
mov
or
mov
mov
jbe
push
inc
pusha
pop
mov
mov
sbb
and
adc
cmp
pop
scas
or
js
xchg
rclb
dec
xchg
jae
cld
jbe
ja,pt
push
push
imul
arpl
pop
cltd
cmpsb
shll
inc
clc
adc
push
aas
mov
dec
incb
dec
xor
jcxz
mov
int
or
mov
aad
lret
repz
mov
inc
sbb
adc
loopne
and
push
dec
out
adcb
adc
or
mov
mov
or
out
or
dec
inc
lahf
jg
jp
adc
popa
sub
xor
repnz
jns
push
popf
jae
lods
mov
pop
jle
ss
fnsave
or
jbe
sbb
gs
pop
jne
mov
mov
dec
cmpsl
push
sub
not
jg
xor
sub
ds
jbe
inc
push
int
add
mov
pop
cmpsb
rcr
loope
dec
mov
mov
mov
mov
or
xor
jp
in
fsts
push
popl
popa
stc
imul
and
outsb
jns
cmp
push
pop
lcall
sub
orl
les
mov
dec
and
bound
andb
es
sbb
rclb
xchg
cmc
add
xchg
pop
mov
jnp
mov
and
aad
rorb
add
adc
or
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
mov
jo
dec
fs
mov
cmp
add
mov
xchg
push
add
test
pop
cwtl
xchg
out
add
lcall
pop
xor
mov
mov
sub
cmpb
ret
jne
mov
shl
fwait
push
sbb
mov
movsl
daa
push
add
lret
in
in
xchg
xchg
lea
pop
inc
xorl
jnp
jecxz
cmpsb
sub
out
call
jo
cmp
push
adc
and
iret
push
rcrb
jnp
pop
repz
push
repz
rcrb
dec
scas
xchg
dec
mov
pop
jns
push
mov
test
popl
mov
lret
es
jno
imul
xchg
jg
xor
ds
popf
adc
cmp
pop
lock
dec
in
mov
cmp
push
lret
clc
jo
push
and
inc
mov
inc
pop
movsl
in
gs
jmp
xor
xlat
out
mov
mov
aad
sub
sbb
jmp
push
inc
insb
daa
fidivl
loop
es
rcrl
fbld
mov
add
fsubrs
stos
mov
add
movsb
mov
call
push
jmp
or
jmp
dec
stos
in
cld
sbb
jle
pusha
lret
mov
mov
jl
jecxz
inc
cld
xchg
fldl
lcall
mov
add
mov
inc
cwtl
jno
pop
inc
data16
and
repnz
mov
cmp
push
sbb
scas
rol
in
loopne
aam
aam
dec
call
pop
scas
rcrb
dec
out
sub
add
orl
mov
dec
dec
nop
cmp
push
add
jmp
push
adc
mov
call
shrb
cmp
gs
xor
jno
pop
dec
mov
lret
test
xor
out
cmp
sbb
jg
pop
hlt
sub
es
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
inc
bound
mov
adc
loope
push
and
or
scas
lods
aas
push
cmp
pop
mov
call
mov
push
aaa
pusha
push
lea
in
push
inc
loop
xchg
testl
add
test
xor
xchg
adc
outsl
std
repz
fisubs
push
les
adc
mov
xchg
pop
in
aad
xlat
sti
sbb
cwtl
dec
inc
cltd
dec
testl
lret
dec
mov
jnp
aas
pop
dec
std
sbb
lds
pop
lahf
je
mov
inc
int3
xchg
into
repnz
leave
sub
add
test
jo
dec
aad
into
add
dec
push
pop
loop
int
cmc
push
out
cmp
hlt
ja
and
sbb
iret
cmp
push
cwtl
adc
and
in
sti
je
mov
mov
or
lcall
xor
jg
push
cmp
xchg
inc
std
or
inc
xchg
iret
call
popf
test
mov
cmp
cs
cmp
dec
ret
scas
stos
cmpsl
cmp
incb
inc
rcr
sub
cwtl
xchg
push
pop
jne
pop
shll
sbbb
sti
imul
and
cmpsl
cwtl
das
cwtl
pusha
mov
xchg
jnp
loop
jbe
or
push
jp
stc
pop
or
jle
jo
out
or
mov
jo
loop
repnz
cmpsl
sbb
call
cmp
lahf
inc
dec
xchg
aam
dec
in
or
es
jg
stos
mov
push
cmp
jge
imul
push
lcall
jmp
testl
mov
test
jcxz
dec
mov
rcrl
dec
cltd
mov
ss
cmp
xlat
jle
pop
and
in
mov
fcomi
out
fsubl
fdivs
js
push
or
les
mov
mov
mov
subb
sbb
aaa
aas
pop
jb
iret
xor
daa
inc
daa
insl
xor
jbe
addr16
insl
jae
movsb
subl
ja
mov
and
mov
imul
inc
lea
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
cmpsb
js
scas
adc
add
adc
leave
and
loope
mov
push
andb
leave
arpl
xchg
fwait
stc
out
and
inc
dec
dec
push
cmpsl
sar
out
inc
mov
repnz
xlat
inc
rorl
inc
pop
pop
xor
xchg
mov
inc
addl
xchg
std
mov
jle
insb
mov
xor
sbb
mov
sub
in
push
popf
or
dec
fwait
jo
stos
cmpsl
dec
out
pop
jnp
negb
pop
aam
hlt
xchg
sub
push
pusha
mov
popa
lods
pop
xlat
xor
mov
push
or
ds
pop
sub
sub
push
div
mov
stc
pop
mov
fsubrs
pop
pop
mov
sbb
repnz
jmp
test
adc
mov
jno
sbb
pop
mov
or
xor
psubw
dec
push
pushf
or
and
shlb
lahf
test
sahf
iret
mov
mov
jle
xor
xchg
mov
pop
aas
push
cs
dec
cltd
ret
in
clc
cltd
notl
lods
push
pop
movsb
mov
or
jb
pop
cltd
aad
jno
outsl
aas
jns
iret
xor
xor
ljmp
call
sub
push
add
xchg
cmp
inc
mov
mov
cmp
dec
iret
mov
mov
push
push
outsl
inc
je
xchg
xchg
adc
mov
repnz
movsb
mov
test
cli
mov
push
idivb
loope
aad
rcl
addr16
popl
sahf
mov
shlb
fcmove
jmp
cmc
inc
pop
rcll
sbb
cltd
and
lret
int3
dec
pop
insl
jp
mov
in
dec
jne
cmpsb
jl
mov
lret
cmp
push
mov
enter
dec
sarb
cmp
sub
mov
ficomps
popa
mov
push
lods
adc
push
jle,pn
or
xchg
lret
pusha
scas
stos
rorb
xor
scas
dec
mov
aas
fmulp
popf
xchg
mov
xchg
icebp
in
popf
push
out
push
mov
aas
xchg
inc
pop
lods
or
outsl
je
mov
nop
sub
pushf
xchg
cmp
fs
push
inc
pop
repnz
sub
fwait
xor
jp
sbb
xor
sbb
pop
mov
lahf
cmpsb
pop
inc
xor
mov
dec
scas
cmp
insl
dec
icebp
inc
mov
popf
ficoms
mov
xor
jge
and
lea
dec
pusha
jl
fdivr
fistpl
or
out
adc
mov
sub
push
push
out
test
and
xchg
mov
inc
or
daa
mov
mov
sbb
dec
into
mov
xor
mov
je
fisubs
mov
and
cmc
and
ret
mov
mov
cmp
test
cmp
dec
decl
jb
ss
fs
nop
fucomp
push
and
mov
jl
mov
adc
push
das
pop
sub
es
data16
bound
iret
push
pop
mov
jne
popf
lock
lcall
int
shl
pop
shlb
scas
movsb
ret
dec
push
push
mov
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
nop
stc
jle
cmpsl
adc
add
adc
cmp
sub
test
push
mov
gs
cs
in
test
cmp
out
sub
sbb
ljmp
xorl
ret
sub
icebp
mov
outsb
xchg
sahf
adc
pop
das
sbb
mov
stos
ljmp
mov
inc
sbb
jno
jae
xchg
sbb
and
pop
and
lret
mov
inc
dec
sbb
xchg
jae
sub
fidivrl
dec
cltd
or
add
jmp
rolb
jmp
fsubl
mov
adcl
movsb
in
cltd
aam
lret
or
sbb
pop
add
dec
fwait
sub
call
and
adc
daa
stos
mov
fs
aad
enter
jecxz
loope
fists
mov
xor
daa
and
lcall
int3
mov
repnz
pop
fistpll
and
mov
rorb
pop
in
jne
sub
arpl
int
in
and
ret
pop
pop
addr16
jmp
shl
jecxz
icebp
pop
mov
xlat
ds
add
add
adc
scas
imul
stos
cmc
fadds
xor
cli
inc
xchg
dec
jge
sbb
inc
cmp
andb
rclb
ror
sub
in
into
push
mov
push
dec
mov
pop
daa
mov
loop
dec
mov
xchg
outsl
bound
jg,pt
lret
hlt
mov
dec
outsb
clflush
fnstsw
roll
jae
pop
ss
cmpsl
jne
cmpsl
inc
out
decl
nop
scas
loope
jb
aad
fwait
insb
pushf
mov
idiv
das
push
inc
and
call
mov
inc
pop
pop
pop
push
push
sbb
mov
lret
pop
xchg
fcomp
jae
ja
mov
add
push
and
sub
jno
out
mov
outsb
nop
jae
pop
vorpd
jg
ja
syscall
xor
sahf
bound
add
cmp
xlat
clc
push
sbb
xor
inc
call
cmp
out
int
je
add
or
cmp
int3
sbb
popa
fs
aaa
out
jp
jne
es
sbb
xchg
lods
je
lcall
inc
add
xchg
into
sbb
lea
jmp
inc
push
or
sub
xor
mov
fdiv
cltd
adc
imul
leave
sbb
dec
xor
in
testl
movb
sub
dec
fs
pop
inc
mov
lds
pop
adc
inc
mov
adc
popa
mov
les
pop
dec
out
arpl
mov
and
jb
jnp
xor
cmp
popa
adc
sub
pop
and
aad
pop
bound
adc
pop
andnps
cmp
sub
jge
rclb
cmp
xor
insl
lock
adc
rcll
jb
push
mov
sbb
xchg
arpl
inc
mull
movb
fmull
leave
mull
push
cmp
inc
loope
ss
sti
rcll
sar
sub
iret
pop
ret
mov
addr16
mov
ja
leave
mov
loope
mov
xchg
pop
enter
js
jo
lret
adc
test
add
add
out
decl
push
clc
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
inc
test
adc
addl
aas
in
push
mov
test
push
xchg
inc
fadds
jl
or
in
dec
repz
pop
mov
push
jbe
sub
sub
out
mov
jp
dec
xor
nop
clc
xchg
fs
clc
cmp
pop
sbb
pop
pushf
cmpsl
mov
and
stos
push
mov
sar
pop
movsb
fldt
adc
in
mov
xor
mov
fcompl
ds
fstpl
adc
dec
andb
mov
xchg
mov
mov
sub
dec
inc
daa
scas
je
mov
inc
cmpsb
test
jnp
or
adc
or
mov
inc
push
repz
addr16
inc
aaa
daa
mov
lahf
jge
test
push
nop
iret
popa
mov
stc
imul
outsb
rcl
repnz
push
xchg
ret
jl
ret
outsb
sub
xor
popf
xchg
pop
cmp
pusha
mov
sub
loop
and
popf
jle
xchg
add
int3
jmp
movl
pop
jmp
sub
lock
or
out
mov
iret
or
mov
filds
jmp
sbb
mov
aad
adc
outsl
les
addb
clc
xor
addr16
push
xor
movsl
int3
movsb
mov
mov
bound
pop
and
dec
shlb
mov
mov
rcrb
fcomip
std
sub
test
test
test
dec
push
idivl
jecxz
pop
add
std
xchg
dec
jbe
mov
adc
jbe
mov
cmp
mov
xor
push
xor
adc
fimull
stc
lea
enter
and
mov
jnp
xor
ficoms
jle
std
jp
lods
sbb
inc
je
mov
adc
cmc
dec
lock
dec
insl
lods
les
test
cmp
imul
xchg
pop
mov
into
dec
mov
add
mov
sub
frstor
adc
or
int3
shl
xchg
in
insb
pop
je
mov
gs
enter
ret
xor
pop
mov
push
jns
mov
aaa
shr
push
pop
pop
insl
cmpsb
add
movb
mov
cltd
xchg
insl
inc
adc
mov
lds
cmpl
or
jl
lret
int3
dec
imul
js
push
int
cmp
xchg
jb
ret
inc
mov
int3
cld
ret
lods
jns
jbe
fdivl
stos
stos
setno
add
dec
aad
dec
jp
mov
pushf
aaa
pop
rcl
fidivs
or
fwait
mov
fidivrl
mov
aad
cmp
loope
std
inc
gs
and
dec
mov
jl
cmp
mov
push
out
out
inc
ja
lea
mov
xchg
or
jne
xchg
dec
fmull
ds
adc
jb
lds
lods
adc
lret
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
dec
movsl
mov
enter
jne
adc
mull
pushf
loop
sub
push
out
aad
xchg
iret
jne
int3
popa
inc
lret
pop
adc
les
fldenv
adc
int
shll
into
xlat
fcomps
ficoml
test
ljmp
aaa
fdivl
test
adc
jmp
mov
xchg
pop
mov
mov
push
add
jmp
add
fadds
mov
mov
pop
xor
cmp
fs
jne
in
cmp
dec
xchg
inc
xchg
cmpsl
ljmp
cmpsl
mov
notb
dec
pushf
or
or
mov
sahf
ss
ljmp
repz
sub
inc
int3
cmpl
je
push
xlat
jl
xchg
cmp
add
mov
sub
push
inc
dec
jns
or
push
mov
push
jl
push
aaa
add
inc
fildll
pop
inc
pushf
in
aad
jnp
gs
and
xor
xlat
jle
push
or
fcoms
fwait
dec
jge
imul
mov
out
fnstenv
outsb
movsb
in
call
inc
bound
xchg
lock
add
mov
or
imulb
ja
aad
rolb
out
sub
or
cmpsb
arpl
jmp
jl
xchg
test
push
cmc
mov
pop
aaa
xor
sbb
mov
cmp
sahf
mov
xchg
dec
and
or
mov
sbb
sbb
mov
inc
in
bound
je
cs
or
das
std
xlat
xchg
fisubs
ja
jle
lds
and
jnp
data16
or
or
pop
xor
test
mov
pushl
dec
mov
scas
lds
insl
in
mov
test
mov
and
pop
pop
mov
cmpsl
jmp
sbbl
ds
push
cmp
lods
loop
sub
fimull
push
test
push
push
ljmp
les
sub
lea
test
adc
add
cmpsl
js
popa
sub
dec
repnz
push
jo
ds
and
cmp
ret
sub
push
in
testb
out
das
xchg
jnp
adc
push
outsl
ret
adc
mov
shrb
or
adc
cs
test
jl
add
add
sbb
lds
pop
in
test
adcl
push
ja
dec
lock
das
jae
lret
mov
cmp
orl
mov
stc
jne
push
jb
aad
lcall
loop
in
and
sub
jmp
lret
xor
scas
xorb
push
mov
sahf
shlb
ljmp
cwtl
fldt
xchg
cld
incb
testb
and
xchg
and
ja
jle
mov
push
and
xchg
xor
dec
cwtl
das
dec
xchg
jne
loope
or
rcrb
push
mov
out
and
testl
pusha
int3
dec
mov
mov
fstpl
fs
pop
adc
push
sub
jo
outsb
xlat
loopne
mov
je
add
sub
and
xor
in
clc
aad
add
imul
loope
mov
sti
outsb
xor
and
popf
addb
call
mov
popf
xchg
inc
and
mov
cmc
mov
aad
fsubrl
jns
std
cltd
inc
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
arpl
sub
sub
adc
sbb
cmp
in
xor
lods
cld
dec
dec
push
jp
loop
adc
mov
mov
xchg
jge
push
pop
rol
inc
xor
xchg
pop
rorb
push
out
ret
iret
xor
insb
add
icebp
xorl
leave
dec
pop
inc
inc
cmpsb
jbe
mov
jmp
dec
mov
adc
enter
add
add
mov
adc
sub
stc
daa
xor
and
je
das
bound
inc
mov
decl
inc
pop
xchg
mov
add
pop
jb
inc
jb
clc
sahf
movsb
fisubl
or
iret
xor
andl
insl
pop
test
add
mov
dec
popa
imul
push
clc
rorb
cmp
in
in
pop
mov
mov
pop
sbb
je
xchg
mov
jb
jne
sub
dec
adc
jnp
mov
fidivrs
sub
mov
or
or
dec
push
fwait
fwait
rolb
sub
cmp
push
mov
cs
stc
xchg
out
mov
and
stc
inc
sub
jle
xor
shll
popf
in
insb
jae
lcall
jg
add
in
push
outsl
inc
and
adc
or
sbb
in
cmpl
fadds
xchg
lcall
hlt
repz
fistpl
ds
outsb
sub
fadds
imul
cmp
shl
movsl
lock
mov
rcrb
dec
xchg
push
lahf
push
in
or
mov
inc
and
and
cltd
adc
repz
adc
mov
insb
out
outsl
dec
repnz
mov
mov
scas
sub
pusha
xor
mov
rcr
enter
cltd
mov
pop
out
sub
adc
pop
gs
inc
idiv
out
pusha
aaa
in
rcll
push
fwait
pop
mov
outsl
push
jns
sbb
push
jecxz
jbe
add
into
inc
in
sbb
mov
dec
cmp
sbb
add
push
decl
xor
lret
out
ljmp
mov
sbb
sub
xor
jbe
xor
or
mov
push
dec
mov
loopne
xchg
mov
stos
imull
aad
push
pop
push
push
in
dec
mov
in
add
dec
sbb
pop
cmp
push
scas
mov
pop
and
sub
jmp
lret
xchg
jmp
dec
mov
movsl
fdivp
or
inc
enter
cmp
sbb
mov
repnz
insb
cs
mov
inc
pop
mov
std
dec
int
inc
ficomps
jae
sub
sbb
or
ljmp
jo
push
inc
pop
ds
mov
xor
pop
cmp
xlat
sub
shr
dec
dec
xchg
cmpsb
inc
scas
arpl
push
cmp
sbb
std
cmp
mov
lea
lret
loopne
fcoml
sub
cmpb
lret
cmpsl
out
mov
ds
push
dec
xor
mov
xchg
pop
and
lcall
cli
cmpsl
jae
test
push
dec
mov
hlt
pushf
mov
leave
jmp
jne
outsb
insl
lock
mov
xlat
adc
dec
inc
xor
xchg
add
jo
fistpl
mov
fimull
mov
das
aam
push
fistl
sub
and
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
pop
pop
lods
orl
adc
fs
ret
pushf
mul
and
or
daa
ret
sub
push
gs
pop
pop
adc
and
push
lret
and
dec
inc
mov
rorb
sahf
pop
and
fists
inc
mov
cltd
pop
sub
sub
mov
movsb
xchg
push
xor
pop
into
ja
sub
sahf
loope
add
cmpsl
sbb
sarl
stos
data16
ret
cmp
cmc
insl
sub
jae
inc
inc
stc
adcb
into
push
into
mov
out
ljmp
imul
mov
sarl
jl
or
lods
mov
sub
fnstcw
and
cmp
xchg
leave
stc
inc
xchg
jae
aad
xchg
loopne
mov
mov
xchg
or
sub
daa
push
fidivs
repz
dec
inc
lret
in
loopew
pop
or
and
fwait
scas
arpl
dec
inc
xor
sub
test
rcrl
add
sbb
mov
sbb
sbb
and
lahf
mov
hlt
in
cmp
or
mov
xchg
mov
in
cmpsb
sahf
enter
cmpsl
xor
jnp
lret
cwtl
roll
cmc
clc
sbb
sahf
daa
pop
lds
and
xlat
aam
stos
push
pusha
cmp
lods
xor
mov
xor
cmpsl
pop
inc
adc
and
xchg
cmp
lods
xlat
mov
push
les
lods
or
adc
inc
das
lret
dec
pop
dec
js
xlat
shrl
push
jne
lea
loop
sbbl
push
addr16
mov
loope
popa
pushl
stos
jnp
mov
mov
jno
loopne
adc
push
mov
xor
hlt
test
dec
inc
aaa
cmpsb
jge
push
sbb
push
arpl
lods
add
sub
or
jecxz
fcomp
xor
jl
or
dec
popa
mov
loope
fnstcw
jb
loope
lods
ja
bound
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
or
dec
xchg
adc
movlps
pusha
or
xchg
not
subb
pop
mov
mov
mov
rclb
fidivrl
mov
call
jbe
stos
imul
dec
xchg
pushf
cmp
and
nop
mov
jbe
cmc
dec
loop
lods
jno
mov
cmp
mov
aas
andb
and
inc
stc
popf
outsb
call
sti
int
movsb
pop
xchg
sub
push
aaa
test
and
nop
mov
in
and
lea
cmp
outsl
mov
add
out
and
std
mulb
push
inc
xor
mov
or
repnz
popa
mov
xchg
jge
stc
add
dec
pop
cmpsl
gs
lcall
mov
or
popf
and
jmp
fs
mov
dec
scas
stc
mov
lret
inc
loope
pop
out
cmp
pop
mov
ds
and
sub
inc
aad
leave
fmul
pop
xor
je
mov
xor
data16
jo
xor
adc
pop
dec
lods
mov
lea
test
aaa
xor
inc
pop
bound
add
xchg
jb
push
xchg
lea
movsb
repz
roll
or
sub
lahf
mov
pop
lcall
xchg
add
xchg
fadds
dec
inc
shrb
loopne
aad
xchg
lods
push
clc
jg
lock
adc
mov
push
pop
or
icebp
mov
xchg
cmp
cld
lcall
push
lahf
int
mov
mov
fstpt
xchg
jae
jmp
jnp
mov
scas
pop
imul
incb
stos
mov
sub
add
jno
xchg
mov
and
mov
pop
ror
pop
jo
lods
arpl
sub
ss
mov
jbe
mov
lods
stc
scas
mov
mov
les
xchg
ljmp
mov
cltd
mov
jnp
push
stos
cltd
inc
ret
aas
or
mov
mov
dec
je
add
or
mov
icebp
mov
jno
scas
mov
mov
push
add
mov
in
sbb
xchg
outsb
inc
out
ficomps
imul
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
sub
jle
test
adc
movlps
pop
jl
jmp
outsb
inc
dec
or
push
xor
xchg
mov
mov
hlt
bndstx
scas
jnp
push
inc
or
sub
add
scas
jno
les
pop
rorb
mov
cld
dec
sub
pop
or
dec
lock
mov
fs
mov
dec
sub
in
pop
dec
idivb
jae
std
mov
cltd
xor
xchg
imul
daa
stos
iret
mov
repnz
mov
mov
push
cmc
lret
cli
popf
mov
outsb
into
and
mov
int
pusha
bound
add
jmp
fwait
dec
stc
mov
or
xchg
aas
fisubs
pop
and
test
fisttpl
mov
xlat
lret
clc
addl
add
lods
rolb
cmp
or
cmp
adcb
test
and
pop
cs
push
arpl
rorl
mov
push
cmc
lahf
add
xchg
push
stos
in
adc
mov
xchg
cmp
xchg
test
xchg
cli
out
xor
ja
stos
mov
or
inc
les
inc
fidivrl
mov
mov
cmpsl
push
sub
push
stc
cli
jecxz
rclb
pop
out
insb
jno
jno
push
fwait
cmp
test
push
fnstsw
ja
inc
ss
sti
gs
loope
in
out
and
lods
cltd
and
pusha
jge
aad
cltd
xlat
dec
or
pushf
jecxz
negb
sbb
jno
xorb
jae
cmp
stos
hlt
add
shll
loopne,pn
add
sbb
test
pop
adc
or
push
mov
pop
xlat
rcrb
and
sbb
enter
adc
xor
xchg
int3
pop
in
push
adcl
push
imul
sub
notl
int3
jb
mov
mov
lods
orb
mov
xor
out
orps
mov
push
fidivs
aam
pop
pop
mov
daa
js
xchg
repz
stos
stc
cmp
or
loopne
xor
xchg
loopne
jbe
xchg
imul
jl
test
scas
pop
lods
mov
lcall
sub
sub
je
lods
mov
inc
loope
rcrb
and
pop
subl
outsb
mov
fcmovb
fs
je
imul
xchg
cmp
push
cltd
mov
insl
dec
loope
aaa
pop
inc
arpl
push
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
sahf
lods
adc
movlps
pop
adc
out
fs
pop
sub
jno
inc
add
add
add
pop
mov
shrl
dec
push
repz
int
imul
mov
adc
push
push
icebp
jno
cmpl
add
lock
xorb
jp
out
mov
cmp
xor
xchg
into
fwait
cmpsb
out
and
int3
fisttpl
loopne
jp
test
push
data16
xchg
xchg
jne
jecxz
lret
pop
fucom
sbb
mov
adc
cmp
mov
adc
and
shlb
pop
jns
mov
push
loopne
testl
mov
cwtl
dec
push
je
adc
or
gs
mov
xchg
mov
xchg
movsl
leave
inc
js
in
lahf
sbb
fnstcw
add
adc
mov
jo
and
movsl
jb
jo
sbb
cltd
xchg
inc
lock
outsb
lods
jnp
jge
push
popf
mov
xor
or
xchg
aad
ja
or
mov
or
cmp
fsubrs
pop
or
xlat
adc
push
pop
xor
mov
push
rcll
xchg
dec
aam
and
pop
arpl
xchg
pop
shll
popf
arpl
and
jge
xor
out
push
pushf
pop
mov
arpl
dec
ficoms
sbb
enter
stc
xlat
iret
or
lret
mov
mov
movsl
popa
rclb
rolb
fnstenv
jo
dec
loope
lret
cmp
test
shrl
mov
ds
mov
dec
movsb
dec
stos
data16
loopne
or
gs
and
xchg
out
xchg
and
mov
mov
xchg
mov
dec
or
or
inc
lcall
fdivrs
jo
pusha
xchg
adc
push
int3
stc
adc
insl
dec
adc
popf
rolb
mov
fsubl
jo
test
push
xor
inc
in
lock
jge
or
xchg
mov
push
mov
or
mov
dec
movsl
or
xorb
andl
adc
test
hlt
xchg
and
push
arpl
mov
sbb
push
fs
pop
lods
pushf
add
jne
mov
cltd
cmp
mov
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
ss
ja
adc
movlps
lock
lret
aam
and
jno
pop
les
and
push
scas
test
fdivs
idivb
das
pop
movsb
js
jl
or
dec
lahf
and
pop
push
outsb
mov
inc
fxch
jno
xchg
dec
sub
mov
push
ja
and
add
lea
ljmp
dec
rcll
dec
mov
add
lret
sub
or
pop
cmp
or
das
mov
adc
testl
adc
in
imul
push
mov
idivl
loopne
loopne
sahf
shlb
sub
mov
loope
pop
pop
sahf
adc
loopne
mov
xchg
mov
shl
xlat
shll
and
fildll
adc
ljmp
xor
xor
pushf
out
test
jno
adc
hlt
jno
daa
faddl
cmp
fnsave
add
ret
sti
jg
lret
cld
or
lds
clc
xchg
mov
lahf
dec
stc
imul
or
inc
hlt
ljmp
mov
sbbl
push
fadds
xor
mov
loope
push
push
jle
inc
in
add
daa
xor
movsl
ds
cmp
data16
bound
sub
or
jl
movsb
stos
adc
push
jl
enter
cmp
xchg
mov
xchg
push
mov
mov
lds
int3
cmp
inc
inc
jg
mov
mov
fisttps
and
test
xchg
int
fisttpll
ss
mov
in
add
cmpsb
dec
jne
mov
push
cmp
sbb
cmp
xor
dec
xor
sbb
cmp
push
pop
pop
lret
push
dec
push
dec
in
xchg
test
pop
fcomps
aad
ss
cwtl
xchg
add
mov
adc
stc
mov
icebp
shll
mov
inc
addr16
pop
cmp
rcrb
adc
inc
inc
shl
jo
xchg
stc
cmc
icebp
lahf
push
adc
lcall
push
xchg
das
ljmp
cld
lock
shl
in
mov
or
pop
push
jo
js
lods
out
popf
push
pop
fxam
pop
dec
sbb
jb
je
push
xchg
xlat
test
in
mov
popa
adc
loope
call
mov
jmp
js
cmc
repz
sub
stc
add
mov
decb
adc
iret
xchg
add
cmp
int3
movsl
xchg
daa
or
decl
and
mov
push
aas
leave
les
loop
bound
dec
xorl
mov
sbb
stos
mov
inc
adc
mov
cmp
inc
cld
stc
ja
das
add
fimuls
out
data16
add
mov
jl
movsb
mov
test
or
test
fwait
cwtl
xor
cmp
int3
jg
mov
stos
rcrl
neg
into
hlt
sub
incb
adc
or
inc
js
imul
repz
cmp
xchg
sbb
movsl
mov
mov
cmp
inc
push
loopne
ja
xchg
mov
hlt
jmp
xchg
aaa
ss
jns
movsl
push
inc
imul
mov
or
icebp
mov
pop
fcomi
out
add
push
leave
xor
mov
dec
mov
lods
mov
scas
mov
cs
cmp
add
mov
js
cmp
ljmp
shlb
test
fsubrp
adc
mov
pop
aas
mov
fadd
repnz
mov
xchg
jb
xchg
or
jns
jle
sbb
xor
and
adc
mov
das
scas
outsb
xchg
cltd
test
add
adc
xchg
addr16
fs
sbb
mov
or
popf
iret
inc
loope
cmp
push
jg
sub
wrmsr
pop
pusha
out
sub
rorl
aas
pop
sbb
loope
test
mov
lods
inc
xchg
out
sbb
cmp
jg
push
sub
les
imul
cmp
mov
dec
rcrb
les
fildll
lret
mov
mov
movups
ret
jne
fisubl
mov
and
scas
pop
pop
into
loopne
imul
outsl
mov
loope
test
jo
sub
in
adc
jecxz
test
lcall
sub
push
movsl
ret
jle
mov
shlb
mulb
das
sub
icebp
rsm
jae
push
jns
inc
imul
or
shl
xchg
sbb
mov
pop
adc
fimull
mov
push
cs
scas
push
fcmovne
xchg
mov
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
jle
jno
adc
movlps
cli
sbb
loopne
mov
imul
xchg
adc
adc
dec
or
pop
mov
push
mov
pop
rep
lea
mov
dec
nopl
out
in
or
lret
pop
popf
addr16
inc
int
jle
pop
jne
xchg
test
mov
sbb
out
pusha
nop
push
sub
mov
mov
sbb
jno
inc
fsubr
dec
pop
orl
rcrl
test
jecxz
mov
add
pushf
imull
in
sti
push
in
add
leave
lea
iret
push
cmpl
cmp
rcll
ds
jbe
in
cmp
mov
mov
out
mul
decb
shll
sub
lahf
cmp
shll
movl
dec
pop
and
les
cwtl
inc
shll
sbb
shl
inc
enter
outsl
jle
fs
mov
iret
xchg
fisubl
lods
clc
into
stos
out
rcll
int
cltd
jge
jl
int
mov
and
push
enter
pop
jae
imul
call
inc
lret
out
or
dec
cmp
in
clc
sbb
scas
sub
inc
repz
sub
aaa
jmp
mov
inc
xchg
sub
or
dec
aad
mov
sub
test
push
mov
mov
sbb
out
mov
sbb
mov
dec
add
les
pop
sar
addr16
pusha
jb
add
push
jecxz
fbstp
sbb
jae
stos
cmpsb
pushf
jle
cmp
jmp
cmc
pop
add
xchg
jne
and
out
push
rcrl
or
aam
ds
push
lods
ss
sti
mov
pop
xchg
imul
aad
pop
mov
jbe
aad
push
and
push
mov
xchg
mov
sub
lahf
in
xor
cmp
es
sbb
adc
cld
mov
loop
mov
xchg
mov
push
inc
ss
jg
movsl
jb
mov
or
fsubrl
loope
leave
xorb
xchg
arpl
movsb
incl
push
push
push
push
cmp
sbb
mov
jb
push
dec
push
or
xorl
sub
jno
testl
into
pushf
inc
gs
stos
add
testl
pop
rolb
rorl
loop
jmp
push
loopne
jo
jno
mov
stos
inc
data16
adc
decb
adc
xchg
mov
aam
aad
ret
sbb
test
and
mov
cmc
pusha
mov
push
fs
jae
bound
jge
mov
pop
cmp
cld
decb
rorl
sub
out
jg
jae
inc
es
mov
cs
shrl
dec
loopne
js
aam
sti
popa
cmp
scas
pushf
jl
lock
arpl
into
roll
jno
loopne
dec
mov
mov
pop
inc
mov
loope
xbegin
inc
sub
sbb
jg
mov
or
xchg
xor
lea
push
inc
mov
movsl
lods
lods
add
js
stos
insl
out
loopne
imul
add
jns
jb
dec
inc
inc
filds
out
in
inc
shll
cmp
int
hlt
cmp
mov
push
xchg
mov
movb
call
jge
add
rclb
addb
cs
xchg
ljmp
loopne
stos
jno
mov
xchg
fcmovnbe
stos
andl
pop
mov
enter
cmp
mov
and
iret
jns
stc
fisttps
pop
or
in
pop
pop
add
scas
mov
orb
jns
cmp
inc
push
cmc
mov
or
popa
cwtl
cmpb
pop
cld
ss
jmp
xlat
xor
mulb
clc
add
cmp
cmp
call
add
inc
push
push
pop
mov
std
xchg
add
push
xlat
test
xor
aad
dec
ret
mov
dec
adc
xchg
imul
cmpsb
inc
test
jge
test
mov
shl
dec
push
fs
mov
inc
or
mov
stos
lock
rorl
lds
or
mov
in
dec
jae
scas
mov
imul
pop
jecxz
pop
push
in
sbb
lea
out
push
pop
sub
stc
adc
lods
push
sbbb
pop
stos
and
push
mov
lret
insl
into
rolb
push
popf
xchg
jne
and
pushf
push
enter
outsl
pop
jecxz
frstpm(287
sarb
or
adc
loope
sbb
clc
adc
fdivl
add
es
push
mov
cmp
and
xor
add
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
into
sbb
push
arpl
adc
movlps
add
sbb
mov
in
pop
mov
cmovs
lods
mov
fsubs
ds
and
callw
lahf
pop
popf
mull
pop
cmp
lret
lods
les
pop
lahf
ljmp
int
rcll
jbe
fs
dec
mov
jl
mov
mov
popa
sbb
pop
roll
gs
pop
insl
cld
iret
outsl
jmp
adc
imul
cltd
xor
cmpsb
andb
and
push
shrb
cmp
jg
push
xor
sub
add
pop
adc
jo
mov
xor
mov
mov
pop
popa
inc
cwtl
popf
jo
fs
in
fnstsw
nop
sbb
in
leave
out
aaa
out
sti
push
sub
outsb
sahf
in
lcall
pop
mov
pushf
jle
inc
mov
mov
cmc
dec
xor
lcall
push
pop
cmp
jns
ret
gs
dec
pop
jns
jb
repz
repz
mulb
xor
push
push
data16
cmp
repz
sbb
xchg
sbb
jne
xchg
ja
sbb
push
inc
add
xor
out
inc
pusha
and
xchg
stos
jp
xchg
pop
jmp
outsb
leave
cli
jle
push
and
fsubl
or
loope
sbb
scas
mov
call
or
mov
aas
andb
and
push
and
shrb
inc
mov
jo
and
int
pop
push
testb
xor
cmc
dec
dec
outsb
add
rcrl
sarl
lock
xchg
inc
hlt
orb
in
jnp
lods
ret
mov
sbb
lods
fdivrs
sarb
jmp
loopne
mov
add
xchg
cmp
mov
dec
xor
xlat
sbb
insl
loope
jecxz
lret
daa
nop
ret
xlat
inc
pop
sbb
sub
adc
dec
pop
cltd
mov
ret
ret
adc
mov
mull
adc
dec
rorb
push
imul
and
mov
fisttps
hlt
jno
aad
into
aas
shlb
dec
loope
push
roll
insb
cmp
int3
pop
out
push
fs
lock
lcall
xchg
lods
rcrl
adc
sub
int
dec
cs
faddl
daa
or
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
mov
push
popa
adc
decb
adc
imul
push
mov
mulb
loop
sub
dec
pop
pushf
mov
xchg
out
data16
xor
mov
jl
call
cmp
and
jl
lea
int3
xor
nop
xlat
push
inc
dec
cli
inc
xchg
daa
pop
sbb
fdivl
rorl
test
mov
or
mov
sbb
lea
pop
mov
xchg
pusha
fxch
xor
insl
fidivrl
insl
xchg
sub
roll
jo
and
xchg
das
imul
ja
mov
mov
lret
ret
or
inc
sub
or
xor
add
sbb
adc
jge
xor
inc
xlat
int3
jle
xchg
mov
sub
test
and
or
lret
or
mov
ficompl
sbb
dec
inc
mov
jmp
cmpsl
roll
jns
adc
pop
imul
ret
sub
dec
add
push
xchg
jbe
cld
jecxz
push
xchg
add
dec
cltd
mov
dec
xor
mov
addb
test
mov
add
cmp
das
adc
aas
sub
pop
dec
test
out
int
jecxz
cmpsl
push
ss
nop
addl
out
stc
bound
inc
aaa
jae
aas
or
subb
repz
dec
popf
int
cmp
aas
lea
mov
jecxz
repnz
or
cmpsl
and
into
test
sbb
and
cltd
fwait
push
fisubrs
push
fwait
std
cs
push
cmpl
sbb
in
mov
clc
fs
jle
dec
js
insb
rcll
rcll
filds
addl
dec
clc
pop
inc
cltd
loop
xlat
dec
scas
mov
cmp
push
or
add
cli
hlt
rcl
arpl
stos
add
mov
push
mov
mov
das
cmp
push
in
je
loope
and
lcall
lret
in
out
mov
movsl
add
ret
and
aaa
out
lahf
or
cmp
mov
inc
push
lods
pop
in
xor
mov
aam
rol
mov
sbb
or
cmp
cmp
push
outsl
lret
pop
sbb
push
jne
push
sbb
dec
or
jg
xchg
mov
fmull
and
or
in
cmc
ljmp
test
sbb
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
push
pop
adc
decb
adc
jns
and
adc
jnp
leave
mov
fdivr
cmp
inc
xor
sbb
imul
push
xor
out
mov
iret
cwtl
cli
jb
push
scas
cmp
inc
dec
cltd
test
add
push
and
dec
jno
cld
insl
test
shrl
in
lods
rorl
rorb
ret
aas
and
xor
cld
popa
popa
fldt
xlat
add
fdivr
xor
out
jbe
cwtl
loop
push
mov
flds
mov
test
jno
xchg
cltd
adc
into
mov
test
push
fs
movsl
dec
out
loop
mov
nop
xchg
pop
in
outsb
sbb
dec
loop
jo
mov
xchg
mov
pop
push
ds
jns
stos
jg
outsb
into
inc
fisubs
insl
mov
wrmsr
es
push
js
cwtl
leave
pushf
dec
insl
dec
fnsave
imul
inc
out
xlat
repz
scas
xchg
ja
push
mov
test
and
pop
das
scas
cmp
xchg
jnp
je
fwait
dec
cmp
rolb
sarb
dec
xor
pop
adc
in
sbb
loope
jo
imul
lret
xchg
pop
out
pop
lea
jge
dec
dec
cmc
xchg
test
test
pusha
mov
and
mov
and
mov
adc
movsb
arpl
jne
ret
int3
out
pop
mov
bound
ror
or
inc
ds
push
enter
lds
out
sub
leave
jbe
int3
out
xchg
fs
ss
mov
dec
aam
jnp
leave
mov
lock
inc
jle
pop
jge
push
loop
pop
adcl
sub
mov
sbb
pop
and
ja
nop
out
inc
pop
lods
mov
dec
dec
ds
fdiv
lcall
stc
and
mov
insl
add
rol
push
cmpsb
jb
push
inc
cmp
idiv
xor
jecxz
insl
xchg
jbe
adc
dec
dec
sti
data16
sub
add
inc
fnstsw
das
add
dec
imul
pusha
adc
add
and
mov
test
pop
mov
xchg
ror
mov
xorb
mov
std
cmp
or
adc
mov
or
in
jecxz
jge
popw
fimull
mov
sti
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
fimull
jbe
inc
push
adc
decb
adc
dec
adc
or
loope
adc
cmp
mov
scas
xor
mov
insl
scas
aam
pop
scas
in
stos
mov
cmc
pop
movsb
inc
cs
sub
add
pop
stos
adc
adc
cs
repz
cmpl
fs
mov
mov
out
pop
mov
cld
dec
cltd
fadds
sub
and
int3
outsl
jmp
fs
hlt
rclb
daa
int
aad
adc
or
movsl
push
fdivp
pop
sbb
mov
out
in
or
sub
addr16
ds
sysenter
movsb
xor
xlat
push
rorb
hlt
loop
adc
mov
xor
sbbl
pop
lret
bound
pop
jo
inc
pusha
cs
cld
push
es
push
in
jmp
xlat
sub
or
sbb
imul
xor
cmc
dec
lahf
fs
aad
jmp
mov
pop
mov
add
push
negb
dec
mov
fistpll
xor
inc
cld
les
push
mov
adc
movsb
cmpsl
subb
sbb
daa
call
cmc
sbb
xchg
std
xchg
push
adc
mov
fdivs
or
pop
repz
leave
mov
sub
movsb
mov
popa
loop
or
cmc
pushf
ss
push
into
sarl
into
lods
dec
aaa
cmc
inc
dec
mov
sub
scas
or
rorl
out
pushf
sbb
push
pop
scas
lods
fwait
lods
loop
cmp
in
sub
aad
lret
int3
sub
orl
and
fwait
inc
inc
xchg
mov
out
pop
push
fcoml
fstl
adc
or
pop
call
and
xchg
jmp
mov
push
sbb
dec
push
dec
std
jle
jb
xorl
aaa
pop
call
add
cmpsl
push
mov
push
mov
fisubs
xchg
hlt
rorl
mov
xor
dec
mov
pusha
dec
lret
mov
enter
ja
cld
jns,pn
mov
rclb
js
mov
mov
addr16
mov
sub
mov
jl
stos
les
push
push
xor
or
pop
xorb
sahf
popf
pushl
cld
je
out
push
pusha
addr16
mov
mov
mov
inc
push
xor
pop
int
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
jbe
jle
dec
adc
decb
adc
mov
out
rorb
lahf
cmp
loope
stos
xchg
inc
lock
fdivrs
inc
insb
sub
inc
xchg
sub
jg
dec
dec
inc
gs
bound
ror
mov
gs
rcrl
ds
mov
iret
pop
cs
dec
push
icebp
out
ja
jb
push
mov
js
icebp
mov
or
mov
sub
sub
xlat
mov
sub
adc
push
fdivl
lods
mov
mov
push
adc
pop
mov
fs
sub
inc
push
cmp
xorl
or
push
faddl
or
ljmp
jbe
inc
push
insl
push
push
push
jae
mov
push
sarb
mov
or
fsubr
xor
pop
int
pop
leave
mov
sbb
js
lret
inc
inc
push
daa
int3
mov
lret
mov
adc
sub
sub
push
mov
std
push
je
push
xlat
push
cli
xchg
inc
cmp
pop
fisubs
jmp
into
adc
cmpsb
imul
sbb
cmp
pmaxsw
mov
inc
movsb
outsl
push
sbb
mov
dec
jle
adc
daa
xchg
dec
shll
jbe
pop
xchg
adc
push
loop
dec
adc
mov
mov
push
xor
lods
and
cld
lahf
cmp
sub
idivl
ret
lods
pop
rorl
add
pushf
xor
lahf
sub
lret
adc
hlt
cmpsl
mov
push
inc
pop
out
fdivs
mov
mov
mov
sti
or
push
pop
xchg
jno
xlat
xor
jae
jae
adc
lahf
dec
pop
dec
sbb
jp
mov
add
shl
mov
sbbb
jg
push
lahf
mov
sbb
out
xlat
pop
mov
mov
lds
iret
mov
in
shrl
push
imul
lret
dec
xorb
daa
inc
aas
jecxz
cmp
pop
pop
arpl
orb
and
cmp
add
or
cmp
scas
mov
lahf
dec
dec
add
dec
fidivrl
fildl
mov
aaa
aam
jecxz
rorb
pop
or
aas
scas
xlat
jns
out
imull
cld
jp
and
test
jb
xchg
add
cmp
dec
or
cmp
xor
cmp
pop
pop
adc
dec
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
sbb
adc
decb
adc
inc
inc
sahf
sbb
cwtl
ljmp
aas
aad
dec
sbb
outsl
jae
add
mov
popf
push
fwait
inc
fcmovu
push
adc
add
es
jmp
push
xchg
pop
jle
out
mov
cmp
insb
scas
enter
pop
movsl
addr16
push
enter
sbb
dec
add
icebp
xchg
fidivrs
in
add
sbb
es
pusha
push
lcall
xchg
sub
pop
incb
fdivr
cmp
or
mov
xor
fildl
pop
mov
or
push
test
addb
es
mov
enter
sahf
xor
mov
mov
sbb
lea
adc
inc
mov
movb
inc
xchg
or
stc
xchg
cmp
rcll
xchg
sub
sbb
adc
jle
cltd
js
sbb
cmc
add
sti
test
cmp
es
dec
out
inc
call
xchg
mov
insb
cmp
hlt
faddl
in
inc
jl
xor
mov
cmp
pop
rol
notl
push
das
iret
mov
jbe
push
rol
pop
movsl
pop
pop
sarb
cmc
xor
pop
add
das
popa
cwtl
ret
jno
fcompl
stc
sbb
ret
insl
ljmp
jl
add
fwait
jg
jmp
rcrl
mov
or
jne
movl
xlat
mov
ficoms
xor
lea
mov
loopne
cwtl
sub
and
repz
lret
scas
sbb
inc
insb
dec
enter
jmp
adc
push
lods
sbb
pop
repz
lods
pop
gs
mov
incb
test
push
and
repnz
fyl2xp1
mov
lea
pop
mov
imul
dec
add
xor
gs
inc
sub
in
push
sbbl
and
lods
ret
and
dec
lret
testb
sarl
mov
and
mov
push
adc
mov
or
mov
fiaddl
test
ror
inc
loop
lcall
xchg
test
loopne
ljmp
loop
iret
fs
imul
popf
call
xor
cmc
add
adc
ret
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
sbb
cmp
cmp
push
xchg
loop
repz
sti
xchg
mov
mov
xor
rcr
push
and
or
add
daa
stos
ljmp
dec
sbb
out
cmp
daa
sbb
xchg
js
mov
setns
nop
daa
mov
jecxz
cmp
cmp
data16
sub
pop
fmull
dec
mov
adc
inc
loope
fstl
push
add
xchg
je
int3
sub
xchg
inc
scas
inc
pop
xor
lret
stos
jl
xchg
push
adc
lret
lcall
inc
fldenv
fcoms
jnp
roll
out
mov
inc
cmp
inc
aaa
dec
in
push
push
xorl
jbe
fnsave
outsb
stos
jo
mov
add
clc
jmp
fcmovbe
jp
jle
jbe
sub
mov
inc
rol
cld
inc
jecxz
fbstp
movl
mov
lods
pop
pop
pop
repnz
out
fisttps
cmp
mov
ret
mov
jnp
mov
xchg
adc
mov
dec
xor
popf
scas
lods
xchg
cmpsl
cmp
xchg
fs
inc
dec
dec
into
pop
and
xor
aas
mov
mov
dec
jno
xor
xchg
inc
rol
push
fisttpl
mov
xchg
or
sbb
insl
out
or
imul
sub
stos
scas
rorb
stos
pop
and
lods
inc
cmp
outsb
sbb
adc
and
punpcklwd
xchg
sbb
xchg
inc
fcomps
xor
lret
add
pushf
arpl
cltd
in
cmpsl
and
testl
adc
push
insb
lods
jecxz
dec
in
dec
dec
pop
jnp
inc
and
aam
mov
xchg
cmp
sbb
xor
xor
pop
push
ja
pop
mov
ljmp
mov
movsl
fsubrl
mov
cmp
and
les
dec
out
push
pop
xchg
stos
scas
roll
mov
lea
test
jb
push
jne
out
test
cmp
dec
lods
cmpsb
and
out
cli
jl
xchg
inc
std
mov
ret
add
cmp
pop
mov
mov
cmp
xchg
jmp
dec
or
add
inc
adc
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
inc
inc
call
adc
mov
cmp
jmp
mov
sub
push
fisttpl
jno
xchg
and
mov
jb
push
pushf
xor
xchg
sbb
add
scas
adc
addr16
pop
sub
lahf
fs
mov
sub
lock
jns
shl
or
jne
xchg
jecxz
xchg
mov
hlt
dec
in
repnz
in
scas
les
adc
jns
jnp
adcb
movsl
fucom
jb
andl
xchg
mov
push
filds
jge
aas
push
cmp
mov
push
sub
add
adc
mov
pusha
ret
pop
fs
movsl
sbb
mov
lock
cltd
outsl
jns
outsw
sbb
js
rorb
jle
sti
testl
ss
dec
insb
dec
jno
ss
jbe
imul
in
repz
mov
sbb
or
jnp
roll
xchg
push
pop
imulb
pusha
adc
int
and
xor
test
pop
fsubrs
sub
jne
cmp
dec
popa
in
sbb
add
das
imul
inc
mov
inc
cmp
dec
sbb
fs
lret
pop
jmp
in
clc
mov
data16
push
jnp
mov
mov
mov
loopne
ucomiss
jbe
sbb
out
add
hlt
ss
out
sti
mov
push
pop
or
mov
push
rolb
lcall
in
cmpxchg
into
sti
cld
lea
xchg
pop
adc
dec
inc
stc
dec
inc
push
dec
call
nop
adc
xchg
inc
and
adc
cltd
imul
lcall
add
pusha
inc
xchg
mov
and
add
into
insl
xchg
inc
je
les
inc
lret
test
adc
mov
es
push
loope
jns
pushf
stos
inc
push
add
mov
sub
ljmp
or
testl
xor
mov
mov
inc
jmp
outsl
stc
inc
sbb
jne
push
icebp
bound
cmp
xchg
dec
jae
mov
mov
push
and
je
mov
insl
cwtl
scas
test
inc
ss
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
mov
cmp
adc
shlb
xor
xor
jmp
jp
fcom
add
into
mov
cs
cmp
lcall
add
addr16
movsl
xchg
push
xlat
fisttpll
movsb
stos
aad
rorb
pushw
fbld
std
inc
jmp
je
jae
shrb
test
mov
aas
xor
push
iret
out
mov
push
xchg
pop
mov
in
jae
imul
push
inc
cwtl
icebp
push
in
or
mov
mov
mov
popf
pop
and
mov
adc
xor
in
lods
xchg
sbb
icebp
and
pop
popa
or
mov
xor
push
jns
ret
sub
sub
dec
dec
mov
xchg
jae
out
dec
mov
enter
jns
and
mov
sbb
push
jmp
mov
testb
push
sti
fdivr
leave
pop
lret
rclb
fsubrs
addl
cmp
scas
xchg
dec
int
ljmp
lea
dec
cld
int
loop
add
std
out
and
rclb
fcom
sbb
sahf
sbb
dec
mov
push
sub
insb
int
xchg
daa
xor
pop
rcrl
adc
lods
sub
jmp
jae
and
mov
aas
mov
scas
lea
sbb
push
ficoml
xchg
pushf
js
dec
dec
stos
mov
in
pop
or
dec
inc
sti
jge
jo
adc
jl
mov
int
lcall
inc
and
inc
fs
mov
push
les
xchg
sub
fidivrl
mov
push
push
lret
or
jno
inc
les
inc
lahf
outsl
sbb
adc
pushf
dec
aam
and
xor
add
pmulhuw
stos
push
or
das
xor
jl
mov
sub
orl
out
lds
mov
push
fistpll
fstpl
mulb
pop
in
xchg
fisttpl
fistpll
fisubl
sbb
jb
or
cwtl
mov
loopne
sbb
rol
cmp
cmc
jle
mov
add
arpl
pop
pop
cmpsb
loop
arpl
push
ja
mov
bound
sbb
cld
ss
js
movsb
xor
fidivs
daa
fdivs
mov
push
mov
out
lods
cli
mov
out
or
out
pop
popa
adcb
add
lds
sub
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
popf
lods
insb
dec
cmp
adc
inc
int3
xor
cmpsb
cmp
cmp
inc
pop
sbb
ljmp
cltd
mov
add
fidivs
mov
push
mov
fadds
push
xlat
icebp
pop
out
cmpsl
and
push
test
das
mov
cs
push
les
mov
bound
sbb
xchg
popf
dec
pop
fldl
sub
rorl
sub
inc
ja
or
sbb
fwait
adc
xchg
pop
ret
jb
std
fisubrs
cwtl
mov
pop
in
push
pop
jns
inc
mov
loopne
add
or
add
lret
or
sahf
sbb
mov
mov
repz
mov
mov
jmp
lds
fstl
aad
xchg
xchg
ds
arpl
insl
fistl
in
lcall
pop
icebp
divl
jno
mov
das
dec
or
das
jp
je
lahf
mov
popa
adc
mov
aas
sub
cmp
sbb
cld
rcrb
fists
sbb
sarl
xchg
adc
dec
add
and
pusha
leave
mov
mov
lcall
mov
mov
dec
sub
mov
dec
mov
inc
jmp
les
cmp
sbb
mov
jge
xchg
cmp
hlt
icebp
xchg
shl
mov
repnz
subl
jae
imul
inc
mov
cs
mov
and
data16
or
mov
pop
jne,pt
mov
insb
cs
sub
lret
xchg
sbb
fstl
scas
loop
xor
stc
sbb
push
testl
sub
and
sbb
mov
cwtl
pop
std
scas
dec
xchg
fisubrl
and
xor
mov
insb
fistpl
xor
and
jno
xchg
push
int
jecxz
jecxz
xchg
imul
xor
lea
sub
or
mov
mov
mov
adc
add
push
inc
cmp
add
nop
lret
stc
outsl
loop
pushf
in
jbe
das
repz
cmpsl
jmp
push
pop
cmp
push
stos
lea
sub
mov
das
inc
mov
in
push
js
lods
lea
pop
les
pop
cmp
jg
sbb
and
jg
sbb
f2xm1
bound
ljmp
and
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
lret
iret
pop
mov
popf
movlps
imul
cmp
cld
cs
or
push
rclb
mov
add
rcl
aad
fs
mov
stos
push
cwtl
or
movq
scas
outsl
daa
mov
push
cmp
divb
call
imul
cmp
mov
xchg
dec
jo
xchg
push
jmp
xchg
aam
and
inc
insl
fs
dec
ja
jle
out
cwtl
sub
lock
inc
ljmp
or
jp
mov
mov
popf
pop
faddl
sub
cmp
pop
and
jg
in
adc
xchg
js
in
sub
int
insb
mov
cmp
cmp
in
cwtl
ficoms
xchg
xchg
cmpsl
imul
push
mov
push
das
pop
jne
xor
add
sub
test
jno
xchg
dec
inc
lock
push
mov
jg
mov
mov
je
pop
rcrl
jp
stos
pop
cmp
jle
sahf
sahf
sub
fiaddl
insb
dec
mov
bound
sub
mov
xor
sti
inc
ret
imul
cmpsl
stc
xchg
pop
sbb
mov
cltd
out
int3
mov
cmp
inc
dec
xor
test
jo
xor
clc
scas
je
pop
inc
or
mov
fwait
insb
lock
and
rcr
test
cmc
and
adc
dec
sub
sbb
mov
jecxz
push
add
xchg
loope
fwait
jmp
adc
mov
and
cmp
and
sti
pop
mov
add
pop
lret
inc
inc
dec
cmc
pop
mov
and
fs
add
int
mov
arpl
cwtl
xchg
jg
movsl
push
stc
or
imul
xor
mov
add
pop
mov
add
js
mov
test
imul
hlt
out
popf
xor
and
push
in
mov
lods
push
not
aas
mov
ds
pop
jecxz
adc
jle
jp
insb
xchg
add
mov
repnz
mov
sub
sbb
mov
mov
cmp
and
sub
test
xchg
cmpsb
cmp
out
das
add
test
or
sbb
push
popf
jno
movsl
and
ret
in
das
int3
mov
bound
popa
push
sarl
js
ret
push
lret
call
nop
pop
movsb
add
jae
mov
xor
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
fisubl
jge
shrb
push
or
pop
adc
push
pushf
dec
mov
jecxz
jno
sub
xchg
dec
xchg
jl
stos
popa
jmp
mov
das
mov
shll
movl
pop
das
testl
sbb
sahf
mov
out
mov
sub
dec
mov
jle
pop
movsb
ficompl
jp
insl
mov
mov
lods
pop
pop
out
dec
jg
inc
mov
push
mov
flds
adc
mov
mov
aam
lock
pop
xor
cltd
mov
loop
xchg
jmp
or
push
rcll
mov
jne
pop
sub
fcoms
adc
sarl
pop
enter
in
xchg
xchg
dec
sub
popf
xchg
in
sub
add
lds
inc
jne
pop
loopne
pop
fwait
dec
daa
cmp
add
fsubl
xchg
push
adc
mov
in
shrb
xor
mov
sahf
jae
xlat
popf
mov
icebp
and
cmpsl
push
cmc
testb
clc
dec
int3
cld
xor
scas
mov
std
mov
or
and
mov
in
out
addr16
mov
loopne
dec
push
movsl
push
sbb
aad
pop
ss
jo
icebp
scas
push
call
pop
js
sti
sbb
sub
sbb
jmp
stc
xor
xchg
lahf
mov
xor
sbb
lret
fnstsw
jnp
sbb
idivb
idiv
sbb
daa
sbb
ja
sub
cli
daa
addr16
jg
nop
test
sbb
pop
xor
mov
dec
mov
ljmp
imul
das
vmovlps
cmp
xor
in
xchg
lea
sub
and
add
pop
es
repz
and
jo
lods
loop
movsl
or
adc
mov
std
dec
ds
cli
jnp
mov
adc
inc
jl
cmp
cltd
jg
pushf
mov
mov
aad
ret
or
lea
repnz
das
stc
or
lret
jmp
inc
lods
ja
push
insl
or
jl
cli
ja
fcmove
dec
in
mov
std
es
mov
pop
repz
mov
jne
adc
aad
movsb
bound
mov
and
adc
inc
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
pop
mov
sbb
xchg
add
ss
push
insb
fsubs
add
sahf
popf
add
mov
sbb
sub
fsubrp
push
mov
loop
test
push
mov
cmpsl
jbe
daa
xchg
sbb
cmp
mov
cmp
lea
jno,pt
cld
lret
pop
mov
xor
arpl
dec
sahf
in
and
mov
fsubrs
loope
nop
outsb
cmp
test
lahf
pop
push
mov
insb
mov
mov
movsl
sbb
insb
push
push
clc
push
mov
out
sahf
jp
push
mov
add
in
hlt
push
dec
adc
inc
outsl
mov
cltd
repnz
inc
loop
xchg
cmpsb
and
cmp
bound
or
imul
lret
flds
sbb
and
pop
rep
icebp
iret
into
xchg
loop
lea
cld
mov
push
cmpl
jmp
adc
mov
push
inc
pushf
xchg
movb
ljmp
popa
cmp
shr
test
je
jmp
sbb
fldl
insb
outsb
outsb
inc
add
int
call
out
insl
jle
cmp
cmp
subl
lahf
mov
rol
or
into
adc
cmp
sti
adc
mov
sahf
les
mov
fwait
xchg
mov
test
cs
lods
xchg
stos
stos
imul
loop
rcll
les
pop
push
adc
add
mov
sub
imul
xchg
arpl
mov
call
es
cmp
enter
cmova
imul
xlat
or
add
sub
stos
loopne
lret
sbb
mov
pop
cwtl
or
mov
icebp
add
inc
pop
pusha
movsb
aam
add
aas
js
push
jle
rclb
ja
iret
jns
push
and
xor
test
clc
and
mov
repnz
mov
and
cli
scas
push
bound
fwait
xchg
dec
and
sub
pop
dec
or
jne
in
hlt
adc
mov
rclb
inc
or
sub
push
mov
rcl
leave
push
das
ja
sub
inc
jg
mov
pop
and
popa
call
mov
push
out
rclb
fistpl
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
in
jle
pop
adc
iret
movlps
inc
dec
iret
jmp
enter
lods
inc
fs
cmpsb
test
dec
jmp
or
mov
pop
ds
and
movsl
icebp
mov
jge
das
lahf
sbb
push
push
mov
mov
push
pop
adc
enter
test
mov
stc
xchg
movsl
pop
and
mov
xlat
and
push
xchg
push
mov
sub
jns
mov
test
rorl
lret
es
ret
or
iret
mov
ljmp
add
push
lods
lock
jmp
negl
xchg
stos
xchg
push
mov
mov
mov
int3
shll
jbe
mov
outsb
mov
clc
enter
pop
push
repz
out
mov
pop
in
out
xchg
cli
mov
movsl
lods
adc
fwait
pop
or
in
cmp
cld
and
adc
lret
inc
lret
in
jno
insb
mov
cmp
jns
js
cmpsl
icebp
and
mov
fcmovnu
xchg
stos
inc
pop
dec
pushl
inc
loopne
lods
mov
movl
xchg
pop
test
xchg
fdivl
rorb
mov
push
mov
or
or
inc
adc
mov
cmp
push
cli
cmp
cmp
and
adc
pushf
aad
fwait
incb
and
dec
subl
and
lods
divb
adc
add
fs
nop
out
mov
jp
into
rcr
pusha
ret
dec
je
jge
test
call
fsubrs
mov
stos
and
dec
mov
outsb
push
rcrl
cmp
hlt
leave
adc
dec
cmpsb
scas
dec
mov
and
inc
idivb
ja
dec
mov
test
inc
and
popa
adc
mov
cs
aam
lds
fidivl
dec
inc
mov
cs
or
mov
jbe
jge
aam
jns
sbb
stos
addr16
and
xor
pop
mov
imul
push
mov
pop
fs
and
dec
leave
xchg
add
mov
sbb
stos
mov
cmpsb
sbbb
dec
or
fistps
sbb
adc
cld
pop
adc
leave
jg
lods
movsb
add
sarb
pop
xchg
mov
test
cld
cs
cmp
movsl
repz
sub
add
lahf
addl
fwait
stc
xchg
pop
cmp
ret
imul
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
sub
stos
push
sbb
adc
fcoms
notl
pop
mov
pushf
mov
push
sbb
ror
sbb
sub
loop
inc
jg
int3
cli
test
loopne
push
sahf
cmp
lcall
fidivl
jo
imul
mov
or
push
push
inc
lahf
mov
adc
push
push
xchg
movsb
daa
push
adc
cmpsl
push
pop
dec
inc
repz
in
mov
stos
cmp
inc
sahf
xchg
sub
jb
lock
jecxz
push
fnstsw
cmp
lods
dec
lea
add
mov
mov
bound
pop
iret
daa
or
dec
mov
aaa
sbb
arpl
inc
movsl
hlt
mov
xor
jo
pop
popa
mov
aas
cmc
ret
das
cwtl
adc
cmp
ss
in
stc
push
stos
dec
nop
mov
aas
div
push
jns
je
fistl
mov
dec
sub
mov
xor
dec
lcall
addl
cmp
movsl
jge
sub
xor
lods
pop
xchg
insb
dec
fwait
rorb
outsl
js
test
arpl
sub
stos
add
xchg
dec
movsb
mov
imul
cmp
cmp
mov
xor
jge
sub
test
popa
das
pop
jmp
out
imul
sbb
loop
rol
ret
sbb
push
adc
pop
mov
cmp
fsubr
jo
mov
cmpsb
test
mov
imul
cmpsl
add
xchg
adc
and
loopne
js
push
into
ret
lea
fadds
mov
and
out
mov
out
popf
sub
inc
pop
push
mov
sub
into
mov
push
jnp
push
adc
inc
inc
orl
jno
cwtl
aaa
xchg
call
jp
roll
cli
loopne
push
mull
fstpt
or
frstor
jl
xlat
mov
mov
hlt
ret
out
rcr
inc
mov
das
cmp
stos
lds
loope
dec
mov
ds
add
dec
arpl
sbb
js
add
testb
neg
cmp
cmp
cmpsb
gs
dec
cmpl
dec
sbb
sub
in
fmulp
mov
inc
in
wrmsr
fisttpll
mov
jmp
add
mov
mov
jbe
push
cmp
popf
adc
popa
or
or
sub
int3
xor
sbbb
mov
incb
loopne
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
jg
mov
movlps
cmpsl
es
xor
jo
test
jb
imull
bound
inc
fwait
mov
stc
pop
jge
jmp
imul
pop
xchg
fwait
test
jno
fs
aas
cmp
rcrl
js
or
xchg
jnp
cmpb
inc
add
or
dec
into
sbb
ss
lods
inc
and
test
xor
nop
jp
lods
loope
lahf
jge
fisttps
ret
pushf
sbb
mov
cmpsl
adc
movsl
outsb
bnd
out
push
dec
ljmp
stos
push
fucomip
add
mov
mov
sarb
adc
mov
xchg
jmp
mov
fdivr
loope
les
push
add
sub
jae
arpl
push
mov
data16
inc
stos
insl
sub
add
push
lahf
sbb
enter
out
pop
inc
mov
std
les
xor
jo
inc
push
mov
stos
jo
pop
or
jp
push
mov
out
ja
sub
xchg
xchg
fldenv
push
movsb
and
push
fidivrl
call
shll
jo
inc
loopne
or
and
movsl
icebp
decb
inc
dec
jle
or
and
out
fcomps
mov
dec
out
dec
sbb
int3
xor
push
test
shl
fidivrs
es
lahf
jbe
adc
int3
xchg
hlt
fs
inc
sub
in
mov
in
lret
mov
and
sbb
cmp
pop
leave
xlat
mov
mov
push
inc
outsl
cmp
xor
lret
mov
pusha
rcr
xor
jne
cwtl
mov
xchg
push
lret
test
adc
mov
gs
pop
or
dec
mov
call
jp
cmp
pop
dec
loope
and
inc
outsl
lock
or
xor
lret
or
inc
out
js
or
adcl
pop
rcrl
pop
push
mov
ret
ret
mov
lret
lods
into
adc
daa
mov
jle
into
jg
dec
insl
sub
inc
faddl
out
js
pop
or
dec
in
ret
arpl
xchg
cltd
mov
sar
mov
or
mov
jmp
ja
imul
sub
mov
and
xor
ret
push
xchg
mov
xor
mov
bound
daa
or
xchg
inc
fcmovb
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
add
unpckhps
iret
movlps
leave
mov
pop
ds
jno
xchg
cmp
stc
aaa
jecxz
inc
movsl
jb
xchg
jmp
popf
ret
mov
lea
mov
mov
lahf
mov
icebp
nop
xor
dec
jb
pop
fwait
and
cmp
jle
jnp
xchg
js
leave
xor
cs
jb
pusha
add
popa
push
mov
push
push
pushf
inc
mov
xor
inc
jmp
arpl
add
aas
loope
stos
pop
stos
sbb
bound
push
enter
push
inc
aas
dec
add
dec
scas
das
sbb
aaa
mov
int
or
loope
pushf
ljmp
mov
jbe
sbb
cli
cmc
fnstcw
xor
jle
or
and
xor
or
mov
aad
in
mov
in
or
jl
in
nop
out
ljmp
sbb
xchg
mov
sub
push
cli
xorb
cmp
inc
mov
lods
cltd
out
jmp
fcmovbe
dec
mov
and
pop
xor
out
cmp
sub
mov
mov
lahf
mov
icebp
sub
fadd
bnd
out
mull
in
movsb
cmpsb
mov
jmp
mov
sub
xlat
clc
cs
jnp
int3
mov
add
in
pop
rorl
xchg
cmp
nop
mov
xchg
xor
inc
add
dec
mov
dec
scas
mov
or
mov
inc
stos
in
inc
jl
loope
sbb
mov
ret
das
pusha
rcr
adc
jmp
and
lods
lahf
ds
pop
sub
pop
push
jge
push
inc
movsl
mov
stos
inc
and
sbb
dec
jae
sahf
movsb
les
sbb
popa
pop
inc
add
push
mov
sbb
pushf
testb
ds
jecxz
and
movsb
lret
pop
mov
rcrl
fs
xor
xor
jo
or
jle
dec
sub
push
xorl
add
sub
lahf
sub
mov
xchg
roll
movsl
negl
and
push
sub
push
ja
sbb
insb
fwait
rclb
pushw
dec
fwait
xchg
repz
stc
sarb
fs
aam
add
call
sbb
shl
sti
adcb
xor
xchg
mov
or
adc
sbb
iret
or
mov
and
or
or
jmp
dec
pop
imul
enter
pushf
lods
test
adc
xor
cmpl
xchg
out
imul
jno
lcall
jge
lret
gs
jb
mov
hlt
mov
sub
sub
in
lret
test
fcom
into
jp
popa
pushf
clc
pusha
imul
push
inc
inc
xchg
sub
sti
movb
xor
push
cmpsl
cmp
pop
xchg
out
dec
xor
les
push
fcmove
jle
adc
pop
repnz
and
sub
push
loopne
iret
pop
lods
mov
pop
push
frstor
jns
mov
pop
scas
mov
movsb
hlt
ficompl
stos
xchg
cmp
mov
cmp
iret
in
jle
pop
insl
cwtl
jb
or
outsb
jmp
xor
mov
aad
addr16
fildl
lahf
movsl
mov
ss
mov
push
popl
dec
pushf
sbb
mov
loopne
test
mov
xchg
xchg
lods
cltd
xchg
push
jge
out
mov
sub
test
mov
ret
mov
dec
test
or
xchg
imul
fistl
jno
les
jmp
jns
sbb
add
sub
lods
add
sub
stc
xor
inc
pop
fwait
insl
jp
pop
push
lods
mov
mov
or
orl
cwtl
cmp
xchg
jb
mov
fiadds
ret
xorl
jle
mov
mov
movsl
mov
dec
adc
loop
std
push
jb
inc
subl
dec
xchg
ljmp
aaa
inc
aad
or
mov
sbb
ret
in
js
in
jp
sub
xor
lods
xchg
push
fnstcw
imul
lock
movsb
fmull
sub
xchg
mov
cmpsb
fldenv
sub
jl
mov
lret
pop
xor
push
mov
je
pop
add
inc
adc
into
add
pop
dec
ss
cmp
out
call
popa
gs
adc
das
mov
ficompl
cmp
cs
mov
xlat
adc
push
loope
and
stos
pop
aam
outsl
sub
jp
lcall
mov
inc
pop
xor
test
cmp
fildl
fisttpll
in
xlat
repz
push
pop
jmp
or
out
dec
inc
and
cmp
es
mov
xor
or
fstps
xor
pop
and
inc
mov
mov
repnz
jb
es
lea
scas
add
outsl
push
xchg
push
mov
mov
lcall
decl
jl
push
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
imul
xor
sbbb
add
add
fnstenv
jns
inc
push
sarl
push
test
call
xchg
rcl
js
lahf
popf
xor
xchg
xor
inc
int3
es
mov
mov
stos
push
notb
xchg
sbb
mul
mov
and
aam
icebp
leave
sub
ljmp
jb
mov
cld
push
sbbb
add
pushl
pop
mov
sbb
push
in
push
inc
mov
cmp
jge
fs
lret
out
push
pop
adc
push
repz
pop
xor
jmp
sub
addl
std
loop
lcallw
add
in
mov
fs
mov
jae
aad
and
pop
out
pusha
pushf
pop
imul
das
cmc
shlb
mov
cmc
outsb
or
lods
inc
mov
push
adc
mov
sbb
popf
xchg
mov
jbe
imul
inc
adcb
sti
xchg
popa
xchg
clc
fdivp
hlt
dec
mov
xchg
push
popa
xor
xchg
out
inc
out
dec
jg
je
repz
enter
xlat
cmp
push
cltd
arpl
int3
int
xchg
iret
add
pop
sbb
shlb
or
mov
dec
in
or
cmpsb
push
mov
mov
or
pusha
push
aaa
iret
jb
sahf
sub
inc
sub
sbb
cmpb
ret
cwtl
or
pop
rorb
inc
scas
insl
sub
in
sahf
mov
adc
sub
imul
inc
mov
mov
push
push
sbb
cmp
jb
stos
cmp
pusha
xorb
push
into
es
scas
cltd
xchg
push
inc
inc
aad
xchg
jge
inc
cld
jp
push
jg
xor
cld
into
sub
xchg
xchg
and
imul
test
xlat
sahf
popf
vdivsd
sahf
jp
add
outsl
fs
mov
clc
sub
and
loopne
std
xor
jp
mov
repz
inc
popl
dec
jnp
int
pop
inc
ja
cmp
popf
xchg
imul
addl
stc
mov
aas
push
inc
pop
inc
xchg
movsb
xchg
sub
xchg
sub
mov
fsts
pop
lahf
aaa
out
mov
mov
mov
lea
jp
cs
push
inc
mov
cmpsl
hlt
xchg
mov
gs
pop
call
xchg
cmp
sbb
lahf
push
inc
lret
mov
pop
sub
mov
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
jl
js
call
adc
jbe
cmc
mov
mov
sub
pop
lods
ret
scas
mov
and
sbb
push
pop
jno
jo
pop
mov
in
enter
out
and
lret
push
orl
lods
pop
jb
jae
mov
outsl
mov
push
cld
ja
push
lods
push
hlt
cmpsl
scas
pushf
imul
jb
imul
cmp
aas
push
push
les
iret
shll
add
imul
scas
mov
lret
mov
std
sbb
lods
cmp
stos
fcmovu
push
outsb
xchg
cmp
mov
mov
jno
xor
add
mov
push
xchg
push
mov
ret
dec
repz
jbe
mov
adcl
xchg
out
popf
mov
xchg
and
pop
mov
test
daa
pop
xor
sbb
out
add
imul
sti
bound
adc
pop
push
std
xchg
pop
int3
fsts
mov
sbb
cld
jo
sbb
xor
cmp
popf
cli
cli
stos
mov
jne
lcall
add
xchg
cmp
orl
ret
push
sbb
adc
mov
xor
lret
dec
sub
movsl
mov
pushf
fsubs
arpl
mov
test
pop
into
xchg
push
out
cld
xlat
or
out
push
ds
xchg
xor
inc
xchg
insl
jmp
outsl
push
pop
fwait
daa
push
jp
cli
lods
pop
inc
std
xor
cmp
pop
mov
js
sub
pop
mov
aad
jo
fs
pop
mov
adc
mov
testl
cwtl
lret
cmp
sub
mov
sbb
loop
outsl
fs
mov
sbb
data16
mov
dec
push
jb
int
outsb
andb
icebp
mov
push
mov
or
nop
sahf
jno
mov
popa
cs
sub
mov
ss
lret
adc
fsubrl
xchg
callw
dec
xor
out
fiadds
hlt
das
shrb
mov
mov
mov
daa
lcall
sbb
jo
rol
in
insl
out
aam
adc
and
xchg
and
ljmp
and
mov
das
in
scas
pop
mov
stos
push
into
dec
mov
mov
mov
fidivs
icebp
push
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
loope
out
test
fs
adc
das
mov
cmp
jns
ret
mov
mov
sahf
mov
push
mov
loope
mov
cmp
inc
fnstcw
sub
adc
in
imul
jne
out
sub
mov
or
addb
mov
inc
jg
dec
mov
into
std
adc
mov
dec
test
stos
ljmp
jbe
push
push
bound
inc
cmp
addr16
inc
xchg
inc
sbb
ljmp
movsb
xchg
and
cmpsb
mov
cmc
imul
test
push
sahf
mov
push
ret
dec
adc
cmp
push
mov
xor
dec
fs
xor
cltd
adc
or
or
lods
pop
dec
xchg
sbb
jge
fildl
pop
sbb
push
mov
mov
pop
cmp
xorl
adc
push
push
lcall
jp
or
andb
lds
rolb
xchg
rolb
sub
lds
mov
addr16
repz
test
lea
sbb
cli
adcb
cli
mov
leave
mov
in
out
cltd
xor
sbb
inc
stos
jl
sub
repz
xor
in
sbb
imul
inc
cmp
push
mov
scas
jecxz
add
or
adc
adc
enter
es
lea
xchg
push
adc
daa
xor
mov
cmpsl
test
mov
pop
xchg
jo
je
inc
mov
cmp
flds
arpl
mov
std
jbe
xchg
stc
xor
push
jbe
notb
and
cmp
jo
mov
adc
add
mov
mov
lds
dec
dec
xchg
pop
push
imul
ret
add
fstpl
bound
cmp
gs
jp
cmc
push
clc
push
roll
xchg
dec
pushf
mov
mov
movsb
outsl
mov
cmc
pop
pushf
arpl
xchg
sbb
xchg
cmp
mov
aaa
test
jb
mov
pop
mov
sub
sbb
ljmp
pop
xchg
pop
mov
jbe
mov
bound
andl
mov
fsubs
push
adc
jo
sbb
xor
mov
push
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
fdivr
sti
jle
stc
adc
adc
mov
jmp
jp,pt
inc
into
xor
inc
fmuls
inc
andb
mov
sbb
cs
add
outsb
hlt
inc
fs
fistps
add
rol
mov
cmp
dec
movsb
pushf
cwtl
pop
aad
mov
jbe
add
push
cmp
test
insb
or
cmp
jbe
push
or
scas
adc
ss
mov
lds
or
das
sbb
mov
sbb
out
in
pop
das
jns
sub
test
js
stos
das
out
cld
outsb
sub
cwtl
adc
lahf
test
or
push
sub
xchg
movsb
pop
jecxz
leave
test
out
repnz
cs
mov
lods
das
xchg
repnz
adc
push
push
push
push
adcb
cmp
add
insb
sbb
or
in
movsb
ja
and
xor
xor
ds
aad
mov
mov
mov
jle
jl
xor
mov
mov
popf
icebp
jne
push
add
pop
mov
fstps
hlt
jb
and
mov
pop
out
cmp
dec
fsubrp
ljmp
mov
sub
mov
enter
xor
adc
jle
lret
pop
subb
je
rol
div
es
mov
cmp
scas
lret
dec
and
out
jb
jo
push
fwait
andb
adc
sbb
sti
in
ds
stos
fldcw
fwait
ss
es
jns
scas
in
lret
adc
push
push
insb
in
inc
pop
mov
lcall
dec
push
jns
add
or
rcr
lods
mov
add
cs
outsl
adc
jbe
out
jle
inc
sbb
inc
cmpsl
mov
mov
imul
dec
out
inc
and
fs
movsb
ss
out
gs
mov
push
mov
test
daa
mov
mov
outsl
jg
hlt
mov
pop
scas
stos
and
mov
xor
inc
sub
xchg
sub
add
cmpsb
std
test
push
adc
cmp
in
push
lea
addl
rol
inc
cmc
imul
dec
cmp
jp
push
xchg
int3
aaa
pop
push
int3
repz
pop
cs
out
xchg
rcll
mov
lahf
cli
rorl
push
cli
jle
inc
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
inc
hlt
nop
js
out
adc
adc
pop
sbb
push
mov
mov
push
gs
mov
mov
cmp
dec
iret
loop
jle
and
movsl
cmp
and
fistl
fidivrs
inc
dec
add
dec
cmpsb
std
gs
xor
fcompl
hlt
dec
je
dec
sub
dec
pop
lods
or
or
inc
faddl
mov
mov
stos
dec
pop
inc
sahf
aam
fnstcw
sti
daa
mov
and
cltd
insl
shlb
std
ds
sub
fs
mov
insb
les
addr16
xchg
cmpl
xor
inc
fiaddl
xchg
mov
push
shlb
fcompl
jno
sti
ss
in
jecxz
sti
fiaddl
imul
leave
push
and
inc
movlps
inc
int3
aam
jg
inc
test
pop
sbb
xchg
testl
inc
push
loop
cmp
xor
pop
fisubrl
mov
mov
insl
push
lods
jns
fstpt
pop
lret
mov
add
sbb
inc
shlb
arpl
in
fstl
scas
imul
aaa
imul
mov
add
xor
lds
sti
xchg
add
sti
mov
call
inc
jmp
psadbw
mov
mov
adc
inc
cs
int
xchg
jle
jb
lods
xor
lods
jbe
lret
popl
out
push
test
push
lret
imul
and
jnp
pop
add
mov
push
enter
push
sbb
aad
cli
lods
fcompl
inc
push
mov
stos
adc
push
xchg
out
out
xor
lods
mov
loopne
mov
mov
rclb
fcomip
pop
insl
cltd
mov
fbstp
fs
jle
cmp
aad
fs
loopne
mov
jmp
mov
call
lds
test
repnz
int
adc
fbstp
popf
in
or
jge
sahf
sbb
mov
testl
stc
repnz
mov
push
mov
gs
sub
push
adc
jge
sub
push
lea
flds
leave
xor
add
add
out
out
stc
push
outsl
test
xchg
xchg
das
stos
test
pop
or
inc
pusha
fisubl
int
jp
bound
add
inc
and
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
idiv
stos
jmp
adc
adc
xor
pop
iret
mov
mov
gs
mov
ds
icebp
popa
sub
cmp
mov
in
aaa
lock
clc
jp
inc
mov
dec
repnz
icebp
nop
dec
ds
xor
push
cmp
int3
inc
loopne
int3
test
xchg
int3
jge
xchg
sub
add
fstl
mov
sub
mov
jb
aam
scas
xchg
sub
add
adc
or
push
cmp
mov
push
xor
aaa
pusha
pushf
adcl
rcrb
adc
or
inc
aad
popf
xchg
push
push
into
sub
lea
push
cmp
pop
xor
jno
mov
xchg
adc
aaa
aaa
inc
xchg
xchg
inc
dec
das
add
xchg
rolb
push
and
cmp
ds
push
inc
xchg
cmp
adc
stos
mov
loope
add
lea
inc
sti
mov
jg
mov
into
mov
call
repz
lock
ret
sahf
or
fstpt
fxch
dec
sbb
add
jnp
adc
lds
ficoms
pop
sbb
mov
cli
sub
out
sbb
mov
stc
mov
xchg
ja
cmp
addps
lahf
cld
sbb
xchg
jecxz
lods
xchg
fadd
or
cld
int3
sub
scas
adc
dec
inc
test
jno
loopne,pn
clc
fs
add
iret
sti
imull
inc
mov
fxch
sub
xor
divb
jp
mov
mov
cli
lcall
int
cmpl
jp
inc
hlt
imul
fs
mov
ret
cmp
pop
mov
xor
shlb
movsb
lcall
inc
rcrb
ffreep
std
negb
add
xor
add
xor
or
mov
addr16
ficompl
aas
les
xchg
das
push
push
lahf
jmp
mov
fstpl
pop
and
cmp
or
mov
sbb
lods
pop
add
icebp
hlt
in
jg
push
pop
pop
shl
lcall
in
add
aad
sbb
scas
jns
cltd
jne
mov
in
xchg
test
cltd
cmp
lds
les
and
dec
pop
mov
or
xchg
mov
iret
data16
jg
xchg
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
xor
rcrl
mov
add
jno
cltd
adc
js
stos
inc
dec
mov
inc
lock
fiaddl
and
xlat
and
lds
shrl
js
out
fcmove
insl
add
and
int3
cmpsl
insb
xchg
mov
outsb
test
mov
dec
mov
xor
lea
icebp
data16
repz
inc
enter
aas
lea
mov
dec
xchg
loop
sahf
xchg
mov
jb
push
js
repnz
pop
vmovups
movsb
pop
ljmp
push
inc
and
jp
std
es
xchg
and
mov
sub
scas
test
int3
inc
popf
je
mov
and
popf
scas
xor
sti
mov
js
icebp
aad
push
sub
jo
mov
pop
adc
xor
inc
lods
pop
cmc
sbb
push
scas
mov
lock
add
pop
pop
cmp
call
popa
and
lds
gs
inc
add
loopne
sub
fldl
sub
jbe
fcoml
mov
sub
lock
enter
mov
cmc
std
rorl
mov
pop
jl
in
push
divl
imul
js
cmp
mov
aas
dec
imul
ror
or
push
mov
jp
int3
xor
aam
ljmp
dec
test
aas
popf
pop
push
call
dec
fidivrs
xchg
insl
leave
sub
mov
shl
sbb
mov
cmp
fwait
or
jg
aas
repz
incl
inc
inc
adc
jle
mov
xchg
call
cmp
mov
fiadds
mov
xor
decl
stos
push
sub
xor
hlt
push
sti
mov
or
movsb
mov
jle
jmp
enter
inc
test
jecxz
pusha
mov
pop
mov
cltd
enter
push
insb
dec
jno
test
fwait
mov
fildl
lcall
jne
out
mov
xor
sub
xor
pop
adc
shrb
gs
or
jecxz
xor
xor
std
ficoms
sub
pop
sub
arpl
mov
push
push
imul
pusha
mov
jo
jnp
sbb
jmp
dec
adc
xchg
js
mov
pusha
int3
xchg
lods
in
inc
sub
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
mov
adc
movlps
xor
jle
sbb
push
mov
lahf
pop
shrb
loope
xchg
mov
mov
gs
es
xchg
dec
xor
jb
pop
adc
fnstcw
dec
sti
xchg
cmp
pop
mov
add
notl
push
addb
adc
popf
and
mov
loop
loopne
xchg
mov
jp
popf
shll
push
jl,pn
dec
or
adc
mov
fmuls
je
xor
jae
mov
outsl
fdivrp
cmp
mov
repnz
or
in
lret
dec
mov
dec
xchg
adc
pinsrw
xchg
add
mov
inc
adc
xchg
lret
cltd
sti
inc
outsb
pop
ljmp
pushl
es
xor
or
xchg
in
sbb
arpl
fisubrl
mov
xchg
rorb
or
push
idivb
je
xchg
cmp
sahf
mov
xorl
mov
data16
inc
inc
daa
cmp
nop
adc
jp
mov
xacquire
pcmpeqd
iret
mov
jne
lea
xchg
lret
pop
pop
dec
mov
sub
jbe
std
cmp
fs
push
lahf
js
les
shr
pop
int3
sahf
jmp
inc
mov
adc
jge
cs
sbb
notl
mov
cmp
ret
fsubs
movsl
or
cmpsb
inc
imul
mov
inc
out
fcoms
in
sub
jns
cmp
lock
and
int
out
jne
sub
jg
fsubrs
das
sbb
mov
fldenv
jge
inc
xchg
into
mov
sub
mov
push
jecxz
mov
mov
addl
test
push
jbe
aaa
in
icebp
lret
mov
sti
loop
lahf
stos
std
cmp
pop
fstl
add
add
jl
mov
outsl
adc
dec
or
stos
sub
loop
fwait
push
xchg
push
jp
aas
mov
pusha
cmpsl
aad
js
es
andl
or
pop
sub
data16
add
sbb
push
in
insl
adc
rol
ret
dec
jmp
sahf
sarl
push
pop
loop
mov
jo
adc
popf
or
lods
add
hlt
lahf
dec
xor
lret
cmpsl
and
add
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
outsl
cmpb
movlps
call
add
xchg
cmpsl
mov
sarl
push
fisttpl
cwtl
fsubr
mov
es
out
mov
sub
mov
iret
inc
ret
test
imulb
ret
pop
pop
call
mov
pop
and
pop
push
and
ljmp
in
cmp
pop
xchg
add
mov
popf
inc
fsts
jge
pop
cld
scas
or
jne
mov
jo
fsubr
sbb
pop
push
adc
cmp
pop
or
add
xor
adc
lcall
pusha
xor
inc
inc
cli
cmp
gs
push
mov
push
scas
cmp
stc
jle
dec
or
jne
outsl
inc
cwtl
cmc
mov
xchg
lds
scas
data16
mov
xchg
and
out
addb
outsl
sbb
or
ljmp
addr16
cmp
jmp
pushl
mov
outsb
inc
loopne
push
int
mov
lcall
pop
xchg
lret
jg
rol
push
sub
mov
mov
inc
mov
xor
push
cmp
bound
movsb
sarb
or
pop
lea
jecxz
inc
mov
cmp
imul
loope
fisubrl
push
rcrb
sub
mov
push
lret
test
xor
test
jb
dec
push
jns
pop
out
mov
xchg
push
or
ljmp
ret
mov
sub
xchg
add
push
test
shll
sub
or
xchg
dec
or
mov
sub
lds
add
xlat
mov
or
adc
sti
into
xchg
push
push
or
inc
roll
sub
divb
std
cli
jp
movsb
outsb
ljmp
adc
sub
cmpsl
mov
push
xlat
arpl
ds
gs
and
xlat
pushf
rcrb
jne
jae
stos
leave
add
adc
mov
nop
sbb
scas
dec
pop
out
or
repz
xchg
fcmovnu
in
int
jl
mov
fildll
loope
or
add
rolb
cltd
jl
leave
flds
pop
pop
fsub
mov
mov
shll
cmp
popf
test
divb
jb
movsb
repnz
xor
data16
mov
cmp
sbb
inc
and
movsb
push
aaa
mov
leave
js
lret
sbb
jp
aam
sbb
scas
sahf
inc
push
push
lock
imull
sub
mov
loopne
les
cwtl
mov
pop
std
push
sbb
mov
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
ret
inc
stos
fcmovnu
adc
adc
fstpl
pop
mov
pop
mov
jbe
imul
cmpsb
rol
mov
xor
scas
sbb
faddl
xor
add
shrb
mov
push
dec
in
push
mov
addb
inc
add
sbbl
filds
push
mov
push
psubusw
aam
stc
xchg
ss
dec
cmc
jo
mov
mov
mov
dec
loope
and
sbbb
or
testb
sub
pop
adc
jb
iret
dec
fcmovbe
cmpsl
cltd
sbb
push
or
call
cld
push
pop
mov
xchg
test
or
pop
pop
insb
das
icebp
xor
pop
cmp
push
fists
xchg
sahf
xchg
sbb
sub
adc
pop
dec
and
cmp
jno
leave
jmp
xchg
sbb
lahf
sbb
ret
aas
pop
shll
sub
loope
sub
dec
addl
jns
pop
sti
push
cmp
mov
fcomps
adc
push
pop
mov
dec
test
pop
sbb
pop
push
pop
test
cvtpi2ps
adc
testb
cmp
mov
leave
mov
xchg
je
ret
shr
xchg
les
adc
adc
in
fcompl
push
xor
stc
int3
xlat
cmp
ljmp
inc
xor
aaa
int3
sub
repnz
and
xlat
bound
div
adc
lock
push
xchg
xor
jle
shl
sub
movsb
mov
enter
cmp
fcos
sarb
xchg
dec
scas
sbb
inc
sub
ja
loop
jg
rcll
fwait
test
and
orl
sbb
mov
mov
movsb
push
pop
ficompl
lods
mov
adc
cmpsb
sbb
lahf
xchg
inc
rcll
pop
sarb
jbe
xor
leave
aaa
mov
ss
jae
push
inc
xor
mov
sub
pop
xchg
enter
jecxz
mov
push
jmp
mov
mov
lret
inc
clc
mov
dec
xchg
dec
jle
jbe
xor
movl
andb
fdivr
sbb
mov
adc
and
shll
scas
lds
jne
and
ret
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
stos
cwtl
rclb
adc
pop
sbb
inc
mov
test
test
mov
jae
mov
add
mov
sub
push
shl
fiadds
imul
fnsave
mov
and
filds
popa
sub
xchg
pop
add
dec
enter
jle
xlat
out
xchg
lds
jle
pop
loopne
add
pop
push
jbe
or
jp
dec
bound
push
ds
ss
das
push
daa
icebp
add
jmp
cmp
pop
cmp
lock
pop
sub
imulb
enter
pop
popf
push
les
lahf
js
pusha
outsb
add
pop
fistpl
sub
inc
push
int
xchg
jg
sbb
push
pop
imul
sbb
in
xchg
inc
in
enter
push
add
movsb
icebp
mov
shr
push
mov
lahf
mov
pop
hlt
fisubl
es
stos
insb
roll
pop
lock
and
mov
sub
adc
dec
xchg
sub
mov
cmpsl
inc
adc
cmp
and
repz
jo
ss
dec
push
xchg
dec
pop
stc
ds
idivb
adc
insl
aad
jp
leave
stc
adc
test
lcall
pop
out
sbb
pop
inc
add
in
xchg
enter
lds
call
out
lock
jbe
ja
lret
add
xchg
and
out
xlat
dec
loopne
int
sbb
cli
cmc
xor
inc
sub
dec
jno
inc
mov
pop
pop
inc
pop
jae
or
jecxz
hlt
push
stos
xchg
ljmp
dec
push
adc
addl
icebp
test
cmp
call
jbe
add
inc
fbld
loop
sahf
lods
sbb
dec
out
rorb
xor
xchg
add
or
fnstcw
fsub
ljmp
sti
mov
inc
jae
movsl
cltd
pusha
inc
mov
sbb
xor
es
pop
cmp
cltd
mov
jo
scas
insl
lcall
ljmp
mov
adcl
imul
dec
xchg
xchg
jp
dec
dec
xor
mov
pop
pop
shrl
pop
cwtl
cmp
fwait
pslld
shlb
outsl
push
xchg
mov
push
xchg
leave
in
mov
das
push
xor
ret
daa
and
push
fistpl
pushf
fadds
inc
fs
push
inc
int
and
pop
daa
mul
xchg
dec
dec
icebp
in
in
arpl
scas
mov
mov
push
aaa
add
out
jge
sbb
mov
addr16
adc
out
divl
mov
insl
fildll
orl
mov
mov
cs
jmp
roll
fs
adc
scas
faddl
inc
adc
mov
jne
xlat
add
call
sub
jle
adc
loopne
or
ljmp
inc
rorb
dec
xchg
xor
movsl
cwtl
stc
sbb
sahf
gs
je
enter
pop
inc
ljmp
jnp
dec
neg
test
cli
push
xor
cld
jno
dec
mov
cmp
xchg
ja
xor
lret
incl
sti
mov
jmp
and
out
aad
mov
inc
xor
cmp
and
scas
xchg
icebp
jg
shl
mov
call
adc
cmp
inc
js
xor
jl
jg
dec
in
div
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
lods
sarb
adc
adc
test
inc
and
insb
insl
iret
cmp
jle
and
adc
loope
push
insb
cmp
jl
jbe
in
sbb
ja
cmp
mov
push
xor
sbb
add
jo
in
dec
mov
outsl
imul
fbstp
add
subb
xchg
mov
jne
stos
xor
jmp
enter
insb
pop
ds
dec
stos
bound
in
sbb
push
mov
in
push
and
leave
test
loop
bound
xchg
mov
push
or
out
fistpll
lcall
xchg
jge
gs
cli
fisttps
mov
xlat
pshufw
lret
cs
sub
fcomps
push
xlat
ds
adc
loopne
mov
sbb
xchg
mov
imul
pushf
sub
repz
out
pop
dec
jp
pushf
jnp
rclb
jl
leave
add
outsb
sahf
lods
test
xor
xor
adc
add
es
pop
lds
sbb
adc
icebp
and
or
stc
mov
sub
stos
cmpsl
xchg
push
cmpsb
push
mov
popa
and
inc
mov
popf
imul
lods
jle
cmpsl
ret
jg
in
mov
imul
and
sti
aas
jl
push
and
xchg
decl
aad
and
fistpll
fildl
adc
call
jae
pushf
stos
inc
cmp
push
fcmovu
insl
js
fidivrs
cmp
mov
shll
ljmp
jecxz
dec
lods
mov
inc
xchg
sahf
mov
pop
xor
pop
dec
sbb
jp
cmpsb
push
inc
adc
loopne
pop
cmpsb
inc
or
xchg
das
test
in
pop
sub
sub
push
sub
jns
sbb
and
dec
and
mov
icebp
mov
or
decl
adc
jne
jb
sub
and
rcll
cmc
addr16
dec
push
adc
jmp
insl
rcrb
fisttpll
lahf
sbb
sahf
sub
aaa
jns
or
ficoms
cmp
movsb
subl
and
icebp
rorb
mov
or
or
bound
andb
adc
mov
jno
pop
cmp
idivl
inc
xchg
inc
mov
cmp
daa
mov
push
mov
jmp
cmp
or
jp
jbe
and
movsl
pushf
into
enter
in
or
pop
adc
fs
sbb
dec
call
adc
mulb
xchg
mov
mov
stos
fucomp
out
call
pop
loope
jl
cld
fisttps
push
imull
inc
fldl
arpl
sbb
cs
xchg
xor
jmp
fimuls
sbb
sbb
out
or
jnp
mov
outsb
enter
mov
cmp
sbb
push
movsl
clc
rcr
pop
roll
shlb
xchg
dec
xlat
in
pop
ds
cmp
stc
jno
cli
mov
movsl
push
stos
mov
imul
adc
and
xor
es
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
cmpsl
ss
inc
sub
jl
cld
sbb
daa
cmc
lods
dec
ljmp
inc
fiaddl
jae
or
push
mov
and
insl
sub
out
fnstsw
push
nop
pop
das
inc
mov
imul
pop
cld
movsb
adc
jne
ja
dec
out
lea
lock
lcall
dec
scas
jle
ja
clc
xchg
aam
bound
out
das
push
clc
cmp
push
outsl
jae
xor
inc
idivl
pop
fstl
mov
cwtl
mov
adc
or
pop
fs
xor
pop
clc
mov
or
add
mov
xchg
clc
orb
cli
mov
jbe
out
jb
leave
xchg
ds
gs
and
mulb
jne
jle
sti
inc
mov
mov
push
sbb
es
pop
popa
es
mov
push
into
xchg
cmp
jp
mov
pop
jecxz
mov
push
pop
sub
mov
mov
pop
imul
test
sbb
jle
fidivs
mov
lock
maskmovq
notl
nop
in
push
ja,pt
add
mov
pop
jb
roll
lods
outsl
jmp
nop
dec
push
repz
sub
push
adc
mov
push
je
mov
or
dec
ret
pop
fildl
xchg
mov
lcall
mov
or
outsl
lock
stos
adc
mov
dec
scas
xlat
or
out
jl
and
invd
mov
in
sbb
pop
push
jg
mulb
dec
loopne
jbe
aam
and
pop
xchg
dec
push
mov
sub
bswap
iret
sbb
push
fstl
movsl
dec
jmp
enter
pop
pop
jns
lods
nop
addb
push
dec
fsub
fs
push
xchg
push
pop
int3
dec
cwtl
pushf
addl
lds
and
ljmp
es
arpl
cmp
mov
sbb
push
push
xchg
fs
cld
je
insl
data16
dec
sub
xchg
cmp
std
cs
lds
insb
fmull
out
jbe
xchg
mov
test
addl
pop
jb
adc
fs
clc
into
or
fs
ss
movsl
dec
sbb
mov
inc
mov
aad
loope
mov
in
pop
aas
sarb
and
fwait
mov
xchg
andl
pop
fwait
dec
imul
imul
jb
mov
add
pop
cmpsb
test
cmp
inc
lret
jb
shlb
or
mov
jno
outsb
sbb
adc
mov
fiaddl
sub
lods
jno
mov
lods
mov
ficomps
fsqrt
in
cs
insb
xor
cmp
adc
divl
cmp
push
outsb
test
jo
flds
sbb
adcl
ficoml
insl
or
insb
inc
xchg
fbld
mov
cmp
pop
in
pop
and
inc
pop
data16
push
mov
dec
lods
and
xchg
pop
pushf
icebp
cs
ljmp
mov
cmp
pop
xor
loop
push
push
xchg
imul
das
add
mov
pop
sbb
push
mov
iret
inc
xchg
ret
xor
inc
dec
and
jns
add
pop
cmpsb
js
lret
test
inc
pop
sbb
push
push
mov
pop
pop
in
pop
pop
sbb
jb
mov
int3
test
scas
sbb
add
fwait
test
std
mov
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
jp
jle
mov
adc
mov
jmp
ljmp
mov
fnstcw
inc
cmp
cmp
xor
cmp
arpl
dec
jb
pusha
mov
inc
idivb
adc
push
xor
or
test
push
mov
mov
mull
push
sub
stos
sub
pop
fidivrl
incb
test
mov
bound
xchg
dec
shrl
mov
and
and
shll
xor
scas
nop
jb
popa
es
mov
insb
sub
repnz
into
imul
ret
xchg
adc
ss
outsb
fisubrl
in
inc
pop
stos
aam
sbb
xchg
in
mov
push
insl
das
cltd
jne
adc
or
sbb
fistpl
pop
adc
or
int3
js,pn
scas
xor
mov
fwait
xor
scas
push
out
les
cs
push
dec
pop
icebp
jns
cmp
lock
pop
push
nop
sti
stos
push
jl
imul
jge
insl
mov
decb
jno
outsl
lea
inc
mov
add
fcmove
and
test
iret
xor
dec
mov
jecxz
pop
mov
mov
outsb
xor
mov
xchg
and
bound
xchg
out
cmp
jno
sub
in
shl
dec
cmp
mov
test
movl
sbb
cli
pop
popf
outsl
jmp
adcb
sbb
cs
cmp
aas
pusha
jbe
pop
daa
jmp
int3
out
cs
pop
js
call
or
jbe
loopne
lods
xor
xchg
outsl
mov
pop
add
jno
iret
test
add
mov
dec
lds
jbe
testb
aad
call
fnstenv
or
fdivrl
xchg
adc
in
or
push
lret
sti
and
cmpsb
das
sub
arpl
add
stos
pop
out
lea
and
inc
xchg
insb
cld
shl
test
movsl
mov
fsubrs
mov
subl
inc
outsl
or
int
cmpsb
sbb
cmp
aas
sbb
xor
mov
mov
sbb
jecxz
cmp
and
mov
add
data16
or
push
and
xchg
jae
jl
stos
std
je
repnz
mov
jmp
sbb
sahf
jp
sub
jns
mov
xchg
subl
jl
adc
shlb
mov
pop
stos
nop
repz
cld
dec
pop
inc
enter
scas
leave
mov
jmp
add
data16
dec
sbb
push
jge
ret
leave
ret
xor
sub
mov
add
scas
mov
inc
jmp
jle
aam
ret
jle
mov
fidivrs
push
mov
les
cltd
mov
mov
add
in
scas
adc
add
cld
test
adc
cwtl
scas
fisubs
stc
mov
movsb
mov
daa
and
push
js
push
roll
test
mov
push
pop
and
or
addr16
jl
das
loopne
inc
adcb
aad
jns
and
je
aas
inc
ret
ljmp
mov
stos
mov
repz
fcmovb
push
xor
push
adc
popa
inc
lock
gs
push
and
mov
pop
out
push
ss
mov
dec
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
mov
sbb
pushf
imul
aam
add
push
lods
fists
sbb
pop
pop
adc
and
push
adc
or
rcr
sarb
aad
aas
sub
neg
outsl
cmp
jge
jecxz
jmp
outsb
sbb
enter
jle
push
mov
pusha
mov
lods
pop
movsb
inc
lock
xchg
mov
fmuls
shrb
rorl
dec
in
shll
mov
pop
mov
je
ss
sub
lcall
insl
imul
cmp
invd
mov
inc
cmp
pop
out
std
ss
mov
dec
in
mov
cmp
outsb
pop
fists
lret
mov
sub
mov
xor
or
push
shl
xlat
lods
cmp
dec
lock
fnstsw
mov
cld
mov
dec
ficomps
mov
xor
mov
push
sub
inc
sahf
inc
xchg
js
cmp
shll
mov
sbb
xchg
mov
xor
xchg
mov
ljmp
adc
pop
cmpl
sub
and
outsb
push
call
xchg
mov
aaa
popf
outsb
outsl
dec
mov
sbb
outsl
cmc
imul
fmull
mov
cmp
inc
in
fmull
rcr
call
test
ja
cwtl
dec
iret
mov
les
sub
testl
mov
jle
das
push
jmp
dec
js
xor
lods
cmp
mov
push
ja
pop
lcall
cs
lcall
push
xlat
loopne
jbe
cmp
das
call
mov
repz
shl
imul
lock
xchg
xchg
gs
inc
jg
popf
push
mov
and
repz
out
test
ret
mov
xor
adc
cld
push
loop
push
push
mov
jg
loopne
dec
push
jmp
push
mov
lcall
jbe
lods
inc
lcall
dec
cwtl
scas
pop
jbe
sbb
cmp
movsb
push
sub
mov
push
dec
mov
addr16
xchg
test
insl
fiaddl
mov
sbb
cli
int
jnp
insl
rorl
cs
or
std
out
jnp
loopne
out
lcall
testb
jle
dec
add
push
stos
xchg
nop
and
dec
cli
pusha
xor
pushf
pop
dec
pushf
push
push
pop
mov
hlt
jle
arpl
xchg
imul
je
fs
rorb
xchg
cmp
pushf
loop
mov
xor
mov
and
add
and
jb
test
data16
sub
mov
loope
add
mov
mov
mov
xor
pop
cmp
jne
push
int
or
pop
ljmp
xchg
jge
ja
sti
push
add
imul
scas
mov
dec
add
and
into
and
cmpsl
push
xchg
scas
push
push
stos
pop
cmp
insl
inc
mov
paddusw
dec
imul
aas
sub
push
adc
daa
pop
inc
je
lret
or
rep
push
sub
mov
adc
idivl
cwtl
fmuls
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
push
out
or
stos
adc
adc
addl
mov
push
xor
stos
and
lea
xchg
rorl
sub
loope
sbb
fcompl
in
inc
out
cld
loop
jo
lock
pop
sbb
loope
int
das
mov
lds
sti
mov
push
mov
sbb
cwtl
rorb
xchg
outsb
or
jg
outsb
and
or
popa
xor
loop
push
iret
adc
ss
outsb
cmp
lock
pusha
dec
lea
xor
mov
adc
hlt
aam
dec
xor
loope
fistpll
leave
xchg
loop
push
lock
fdivl
inc
push
fs
jl
pop
dec
enter
adc
cmpsl
sub
mov
arpl
cwtl
mov
mov
cmp
sub
rcrl
jnp
stc
mov
fistpll
ret
mov
outsl
fbld
dec
sub
xchg
pop
dec
rol
popf
cmp
movb
shrb
inc
nop
loop
fidivl
mov
loopne
hlt
pop
xchg
fldl
hlt
js
je
lods
pusha
dec
enter
mov
rcrl
adc
xchg
fistpl
jle
in
rcrb
jl
mov
mov
or
ja
adc
or
xchg
and
or
fidivl
add
dec
cmc
fsts
pop
out
out
in
dec
and
mov
inc
inc
lcall
lret
in
std
inc
lret
lret
xor
inc
cmp
aam
sbb
orl
fcompl
sbbl
cmp
pop
adc
push
jl
insb
icebp
stos
sub
push
hlt
loop
fwait
gs
xlat
loope
loop
add
sbb
push
icebp
lods
jge
lods
sbb
mov
mov
lahf
cli
pusha
cmp
jle
push
jge
scas
push
cwtl
es
sbb
or
cld
sti
in
movsb
aaa
xor
aas
push
pop
push
or
in
je
xchg
rcl
sarb
xor
jl
add
andb
mov
pop
jns
xchg
cmpsb
dec
lret
ret
mov
inc
add
lahf
cld
push
mov
inc
pop
pop
mov
push
pop
jne
ds
jp
push
mov
lahf
cmp
enter
jbe
mov
stos
ret
popf
ss
sub
jb
idivb
push
pop
or
int
bound
scas
dec
mov
dec
cmp
pop
jp
mov
aam
xor
aam
imul
ljmp
cmp
lods
push
mov
mov
sub
cmpsl
andl
gs
xor
adc
sti
cmp
data16
xchg
xchg
sbb
dec
adc
push
push
xor
int
pop
xor
pop
cmovbe
add
push
fdivs
sbb
out
bound
insb
jmp
add
mov
xor
pop
and
jg
insl
cmc
out
jl
push
dec
xchg
adc
test
into
push
clc
sub
add
sbb
dec
out
mov
repnz
lods
into
cld
sbb
jecxz
sbb
fimull
leave
ficompl
dec
cmp
mov
sbb
daa
das
mov
xchg
push
mov
jb
test
nop
cmp
mov
jb
xchg
mov
pop
and
inc
outsb
test
pop
sbb
insl
nop
jge
outsl
test
push
jb
stos
lea
cmpsl
mov
cmp
js
mov
mov
xor
xor
jmp
or
mov
mov
mov
or
js
movsb
adc
adc
cld
jmp
mov
aam
call
daa
out
jo
out
ret
dec
popa
add
xor
fs
cmp
xor
test
xlat
jmp
jmp
mov
iret
roll
pop
xor
or
dec
repz
nop
pop
lods
fmul
jae
xchg
call
mulb
push
outsl
jns
jg
sub
jns
lcall
adc
or
adc
in
repz
sub
xchg
and
sub
cwtl
notl
jbe
or
cmpl
in
jl
sub
gs
movsb
sbb
xor
andb
test
ret
xchg
push
pop
enter
xor
leave
push
pop
stc
push
incb
cs
stos
xchg
fidivrs
fcoms
pop
mov
inc
mov
pop
fdiv
xor
arpl
add
pop
es
neg
lock
add
sar
insb
bound
hlt
mov
mov
sti
dec
rolb
lods
lret
ja
pop
repnz
jbe
dec
loope
pop
lahf
movsl
subb
xchg
or
and
popa
inc
cmp
in
or
jnp
test
mov
insl
movsb
gs
cmp
lea
inc
jne
addr16
xor
dec
mov
pop
scas
pusha
fsubs
imul
push
inc
sub
inc
mov
into
jg
sbb
in
pop
push
out
xchg
das
jbe
movsb
icebp
adc
and
fmul
adc
push
std
mov
xchg
adc
inc
mov
mov
jae
adc
lahf
roll
and
and
lahf
cmc
sbb
mov
adc
pop
lock
in
cmp
cld
push
or
xor
shll
xchg
sbb
push
ljmp
loop
jbe
xchg
dec
push
aad
frstor
popa
icebp
push
push
mov
add
xlat
mov
xor
insl
or
jl
push
lds
cmpsb
dec
sbb
inc
call
les
and
mov
ror
xor
cmpsl
add
loopne
push
xchg
or
int3
lahf
movsb
rcrl
ss
inc
pop
cld
outsb
add
dec
push
js
mov
add
int3
or
add
fcoml
xchg
lods
sbb
cmc
int
pop
jnp
js
mov
and
push
out
dec
aaa
jne
bound
add
xor
or
icebp
cmp
aam
push
mov
loop
mov
push
repz
push
sbb
push
loopne
stos
jbe
mov
inc
cwtl
jns
xchg
inc
inc
roll
push
cmp
pushf
lret
cwtl
imul
adc
cltd
repnz
and
sbb
in
push
sbb
xor
insb
or
test
es
js
scas
xchg
add
out
in
add
jno
enter
into
std
testl
and
jp
cmp
hlt
inc
push
test
je
das
jb
bound
xchg
xchg
fstpl
inc
mov
les
and
and
std
test
mov
sbb
pop
dec
lcall
and
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
mov
stos
adc
adc
add
fisubrl
cs
cs
sbb
jg
add
sbb
out
lds
int3
xor
inc
rorb
lods
clc
fcomip
in
imul
in
lods
pop
ja
pushf
pushf
gs
gs
adc
cmc
inc
mov
jmp
ret
and
mov
addr16
cmp
dec
outsb
lret
movsl
cmpsl
mov
icebp
sub
jb
lahf
xchg
aad
adc
pusha
stc
shrl
pop
imul
data16
aas
jnp
sbb
inc
scas
fldl
cmp
mov
repnz
rorl
pushf
add
pop
repnz
mov
add
test
sbb
movsl
and
aaa
aas
leave
es
push
dec
lods
mov
dec
pop
cld
xchg
lret
mov
xchg
push
mov
cmpl
mov
popa
sub
nop
jecxz
mov
clc
jecxz
pop
imulb
add
cs
idivb
inc
insl
lods
mov
xor
sbb
cmp
push
push
mov
sbb
or
sbb
sbb
pop
inc
or
mov
or
dec
out
mov
fbld
jbe
adc
insb
jle
dec
mov
xorl
and
ficomps
sbb
jle
imul
adc
dec
pop
std
mov
xchg
fmuls
sub
mov
gs
pop
popf
push
inc
sub
and
mov
push
pushf
cmp
cli
adc
xchg
jne
repz
dec
or
shll
add
lock
imul
jnp
stc
sbb
push
lea
mov
addr16
jmp
std
or
hlt
cld
movsb
ret
and
sub
adc
xor
push
dec
mov
xor
or
adc
pusha
dec
mov
imul
in
scas
adc
std
ja
pushf
dec
fnstsw
sbb
les
cli
jge
leave
test
mov
test
xchg
lret
movsb
sub
jne
insb
cmc
push
mov
mov
add
jmp
jl,pn
mov
push
mov
add
xchg
bound
xor
mov
push
dec
in
cmova
stos
mov
or
xchg
addr16
cmp
mov
mov
clc
ljmp
shll
cmp
sahf
cltd
mov
adc
fnstcw
in
cmc
mov
testb
and
sub
ret
pop
push
pop
fmuls
cmp
cmp
cmc
pop
xchg
push
insl
add
jl
push
xor
cmp
stc
pop
inc
inc
fsubrs
sub
pop
gs
mov
sbb
fisttps
inc
fistpl
pop
insl
pop
dec
dec
push
jmp
ja
sahf
fld1
xchg
das
push
adc
fidivl
enter
fs
add
movsb
lods
pop
adc
lea
add
daa
sbb
inc
jne
sahf
and
jg
mov
xor
sub
lcall
pop
pop
jmp
xchg
dec
fstpl
push
not
jo
adc
lods
pop
inc
mulb
les
push
mov
mov
push
arpl
jge
add
adc
lahf
dec
jae
ja
xchg
push
icebp
sbb
pop
lea
add
inc
mov
xchg
aas
sub
movsb
push
and
in
inc
pop
push
jecxz
jmp
pop
add
imul
xor
xor
mov
cmpsl
loop
dec
jecxz
fisubs
and
push
pop
jl
nop
mov
pushf
jmp
jge
jmp
cmp
mov
js
enter
lcall
inc
pop
daa
sbb
pop
int
push
adc
fcoml
mov
stos
and
adc
xchg
sub
mov
jle
sub
mov
dec
cmp
ret
shlb
add
iret
jo
jp
pop
push
pop
outsb
pusha
xor
and
add
subb
mov
std
ret
jg
pop
inc
sub
push
sti
int3
adc
andb
movsb
int
xchg
cmp
je
testb
pop
or
xor
xor
in
out
lret
or
mov
xor
xchg
loope
and
nop
pop
mov
push
orb
outsl
add
jl
test
push
rolb
dec
in
popf
xchg
and
loope
or
loop
int
cmp
and
pushf
dec
inc
sti
test
popa
mov
cmp
ljmp
mov
and
fdivrs
fcomp
mov
mov
mov
sbb
sahf
jns
rcll
or
mov
and
xchg
push
shr
mov
pushf
inc
sti
jo
add
and
daa
mov
shlb
pop
add
inc
clc
loope
mov
hlt
pop
mov
leave
mov
cmp
subb
mov
sub
aam
mov
movsb
sub
fbld
and
mov
inc
pop
in
call
cwtl
push
mov
lods
lds
sbb
fst
inc
mov
adcb
adc
negl
test
push
aaa
in
jne
je
add
xchg
mov
inc
sub
stos
add
popf
xorl
movb
cmpb
pop
mov
or
sub
mov
mov
nop
sahf
jno
test
ds
add
mov
mov
push
xchg
in
fwait
test
scas
sbb
mov
adc
push
pop
and
out
popf
or
stos
aad
or
sub
cmp
pushf
roll
jb
mov
cmp
lea
adc
shrl
in
das
cmc
rorb
rorl
add
out
int
sbb
rol
hlt
out
sub
arpl
fdivs
sub
in
jle
mov
insl
push
push
push
sub
sbb
gs
mov
push
mov
stc
lds
bound
enter
ja
mov
adc
adc
xor
or
sbb
xlat
stos
dec
lret
push
sarl
mov
pop
xor
cmpsb
xchg
mov
nop
cli
push
testl
or
orl
and
imul
jl
pop
add
xchg
mov
repnz
pop
xchg
ret
cmp
ja
nop
push
xchg
and
mov
push
repnz
dec
stos
fsubr
jb
sub
cmp
insb
mov
idivl
inc
pop
dec
inc
mov
lret
inc
dec
xor
xor
cmpsl
fists
fndisi(8087
add
push
mov
inc
dec
inc
push
inc
xor
gs
dec
mov
imulb
jne
and
xchg
push
jo
gs
rolb
les
add
sub
mov
add
or
pusha
cmc
mov
shr
jp
fldt
lret
in
and
pushf
sub
jbe
mov
call
add
fmul
xchg
or
adc
sbb
inc
jno
sub
leave
jne
and
int3
jecxz
mov
mov
int
sarl
pushf
sub
jle
lret
and
jg
jno
test
std
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
and
lock
adc
adc
in
pop
mov
imul
loopne
or
fisttpll
sub
push
int3
inc
xor
sub
mov
pop
mov
bound
pop
cmc
or
push
out
xchg
clc
adc
or
sbb
aad
push
dec
hlt
mov
out
cli
mov
sarl
pop
mov
scas
fsubrl
into
pop
mov
xor
insb
mov
mov
in
adc
pop
push
clc
sahf
rcl
popa
mov
in
ret
outsl
cmp
cmc
dec
bound
pusha
mov
das
xchg
xor
cmp
dec
lret
push
mov
out
sbb
dec
mov
mov
pop
jne
pop
mov
xor
xchg
ja
dec
int3
jne
jg
stc
imul
xor
jb
mov
sbb
dec
in
and
dec
incl
mov
imul
pop
cmp
in
test
xchg
pop
mov
js
int
enter
mov
aam
pop
mov
sarl
cmpsb
sbb
nop
loop
push
sub
jne
pop
fmul
ror
fisubrl
mov
mov
out
inc
in
out
adc
cmp
adc
xchg
sar
shlb
xlat
or
xchg
adc
jns
jl
test
popa
mov
les
mov
arpl
adc
and
cmp
ret
add
add
push
ret
dec
xchg
xlat
xchg
sub
sbb
mov
cmp
xor
fcmovnu
mov
pop
sbb
pop
ljmp
je
in
loope
leave
sub
xchg
push
in
aam
mov
je
xchg
push
repz
fidivl
mov
std
mov
mov
in
ss
adc
jge
pop
mov
mov
mov
mov
inc
es
lea
inc
xchg
popf
push
inc
mov
ret
lea
shl
nop
js
jg
clc
and
das
and
and
fbstp
jg
int3
adc
dec
or
mov
or
arpl
dec
jns
cli
repz
add
ja
cs
out
in
ret
sbb
dec
call
mov
inc
insl
insb
fdivrp
aaa
repnz
punpckhdq
fs
and
sub
sub
sub
ret
incl
pop
sub
icebp
pop
pop
jp
ror
lcall
dec
push
jge
das
clc
lret
jns
jle
mov
or
or
fwait
repnz
rcrb
mov
int
xchg
pop
shlb
sbbb
jnp
shlb
in
test
popa
iret
jns
sub
shlb
pop
clc
mov
movsb
dec
fidivrl
dec
jmp
sub
push
sbb
mov
push
mov
jl
cmp
rclb
mov
jge
pop
pop
mov
gs
push
out
cmp
adc
lods
rorb
bound
dec
or
pop
ret
cld
insb
mov
icebp
inc
dec
das
lahf
jbe
sti
cmp
mov
mov
sbb
or
push
jbe
fildll
mov
imul
cmpsl
add
sub
sti
sbb
pop
lret
add
sti
rorb
mov
inc
inc
xchg
fiadds
xor
pop
pop
pinsrw
in
cmpsl
subl
push
lods
cmp
push
pop
sbb
xor
mov
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
add
add
pop
cmp
mull
xor
ss
mov
fucomp
inc
xchg
sub
mov
popa
shld
mov
lea
or
lcall
enter
pop
aas
icebp
repz
mov
dec
mov
incb
sub
sub
xor
std
mov
adc
cld
pop
jo
pop
in
data16
sbb
mov
inc
lret
mov
cmpl
sahf
mov
jnp
dec
cmpsl
loope
mov
shl
mov
push
and
movsb
xor
rorl
scas
sub
sbb
push
scas
shlb
pop
in
jmp
add
scas
xchg
sbb
xchg
cld
inc
pop
xchg
add
ficomps
cmpl
loop
mov
mov
sbb
xor
dec
xchg
sbb
add
call
es
push
popf
push
sub
push
call
test
test
inc
xchg
mov
rorl
add
mov
xor
mov
sahf
loope
in
inc
pusha
inc
insb
mov
push
ljmp
jle
mov
push
cltd
push
ds
mov
push
shrb
push
faddp
adc
lods
sbb
adc
pop
sbb
inc
push
mov
out
cwtl
sbb
or
in
pushf
popf
adc
or
mov
lds
out
ja
ss
pop
pop
jle
adc
dec
pop
jae
mov
jo
daa
mov
pop
popf
fiadds
imul
xor
and
pop
sti
sub
lcall
repz
pop
sub
rorb
pop
push
or
cmpl
cmp
ret
and
xchg
dec
jle
ljmp
rclb
inc
pop
adc
fdivl
scas
xchg
xor
adc
test
loope
test
test
push
jge
outsb
dec
push
mov
adc
sbb
sub
mov
data16
adc
pop
or
jle
jecxz
mov
ficoml
jns
rclb
mov
idivb
insl
cwtl
fsubrl
popl
or
mov
insb
inc
mov
popl
xor
sub
mov
mov
aaa
push
fistps
dec
outsl
lds
addr16
dec
pop
mov
aaa
je
fldenv
jle
ds
cltd
sub
fstps
add
cvtps2pd
pop
lea
faddl
hlt
sbb
leave
das
xor
aas
loopne
les
fidivrl
out
inc
sub
add
push
notl
xor
out
sbb
cmp
out
aaa
jecxz
repnz
add
mov
xlat
imul
test
popf
and
jae
call
xlat
mov
loop
xchg
aam
jmp
pminub
cmp
ret
and
mov
push
int
xchg
test
fcompl
paddq
xor
xchg
stos
dec
imul
testl
repnz
stc
xor
pop
testb
adc
and
inc
and
and
or
mov
bound
cld
mov
test
in
stos
cs
fcmovnu
int
das
mov
jae
in
xor
or
movsb
fdivr
jge
mov
and
out
and
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
loop
pop
adcb
mov
loope
sub
mov
pop
imul
cs
adc
inc
adc
sbb
and
fildl
repnz
lahf
pop
fnsave
pushf
test
mov
xchg
stos
adc
mov
mov
lahf
lahf
mov
lret
adc
mov
mov
scas
inc
imul
mov
sti
jae
push
imul
test
xor
dec
clc
iret
mov
mov
xchg
mov
mov
push
dec
rcr
sub
pop
mov
xor
hlt
ja
jg
and
in
mov
loopne
cmp
testl
pop
pop
mov
shrl
dec
scas
or
mulb
aaa
cmp
addr16
cmpsl
mov
es
sbb
in
cltd
pop
mov
cmpsl
lea
or
sahf
add
ficoms
stos
push
sub
aam
xor
repnz
jo
push
rcrb
addr16
pusha
mov
push
cmp
in
imul
push
pop
pop
and
aam
std
stos
dec
je
mov
outsb
shl
dec
xchg
xor
in
xorl
mov
dec
shr
sahf
cmp
push
in
leave
movsb
scas
mov
in
sub
inc
jno
push
pop
lcall
push
adc
test
mov
test
lret
lods
repz
lahf
fistps
stc
or
adc
lahf
addr16
loop
shl
xor
insl
inc
in
mov
adc
call
xchg
mov
xor
inc
ret
push
push
pushf
stos
inc
mov
imul
rcll
jge
ss
in
inc
xor
cmp
sbb
push
pop
pop
mov
adc
stos
xchg
test
xor
xor
rcll
and
jg
addr16
mov
dec
subb
add
pop
fldt
movsl
inc
lahf
sub
jno
xchg
outsl
inc
aad
pop
pop
mov
dec
xor
cmp
mov
test
jne
sub
ds
lret
inc
xor
sbb
pop
or
xchg
and
jl
int
push
sbb
outsl
and
xor
xchg
jno
dec
movsl
lcall
rcrl
movsb
inc
je
push
and
popa
cmpsb
enter
cli
test
add
sahf
idivl
fisubrs
or
ss
movsl
dec
loope
roll
or
es
stos
jae
xchg
mov
fldl
jno
mov
xor
add
int
mov
mov
loope
sub
sbb
das
push
mov
hlt
aam
push
in
pop
jmp
mov
pop
cmp
daa
outsb
insl
xor
mov
lret
icebp
scas
pop
add
add
inc
in
pop
fmul
imul
xchg
push
mov
aas
push
jbe
or
leave
scas
int3
jmp
cmp
xor
std
andb
mov
fwait
jp
into
push
insl
les
movsb
mov
xchg
push
imul
fdivp
imull
pop
xchg
add
gs
push
hlt
jmp
jp
mov
adc
cmp
jge
xchg
mov
pop
rcll
pusha
add
inc
inc
or
sub
add
test
xor
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
jo
lods
mov
adc
adc
push
xor
daa
fimuls
fimuls
xchg
in
movsb
sub
pop
mov
pop
test
mov
xor
dec
sbb
leave
sbb
mov
xchg
sub
pop
mov
daa
inc
clc
inc
jge
ret
fildl
pop
push
xor
scas
popf
fiaddl
xchg
imul
je
testb
xchg
cmp
sbb
stos
mov
cmpsb
rclb
sub
xor
in
sti
loope
fists
imul
add
mov
mov
fbstp
and
test
jge
and
int3
xchg
scas
lods
jae
jp
push
jp
frstor
mov
sub
jae
xor
and
sbb
repz
sub
pop
sbb
icebp
xchg
mov
fmull
btcl
and
ret
or
test
je
adc
dec
inc
fidivl
mov
xor
gs
es
enter
enter
jne
in
xor
fiadds
je
addr16
dec
mov
dec
pop
and
mov
jbe
sub
gs
dec
add
add
sbb
mov
push
cli
in
sub
or
ficoml
cmpsb
mov
dec
shl
arpl
sub
add
mov
inc
cmp
dec
push
mov
and
cmp
cwtl
testl
int3
xchg
jo
add
jno
cmpsl
cmp
push
rclb
data16
push
push
pop
inc
les
ds
push
sbb
sub
pop
sahf
psubd
inc
xlat
push
xchg
add
add
ret
nop
or
aad
je
rcl
adc
rcrl
dec
jge
loope
dec
push
push
in
aaa
pop
leave
sub
fsubs
into
dec
ret
scas
sbb
out
mov
inc
mull
js
shl
dec
test
ret
addr16
jae
pop
mov
lret
lds
jmp
mov
push
addr16
sub
xchg
lea
ja
lods
jge
outsl
in
mov
loopne
bound
cli
fnstenv
adc
shlb
mov
add
mov
cmp
sbb
shrl
lea
sub
lods
mov
cmp
fcompl
ret
xchg
icebp
sbb
loope
andl
rorb
push
in
sahf
in
das
pop
scas
loope
pop
xchg
xor
rcll
jecxz
and
dec
iret
fists
sub
or
cmpsl
mov
ss
or
push
cmp
orb
xchg
es
adc
ss
movsl
nop
mov
xchg
test
test
lds
das
enter
and
pop
js
and
in
lods
enter
mov
loop
xchg
dec
mov
popf
ja
or
mov
roll
mov
nop
mov
adc
fcomi
fwait
lahf
out
dec
add
sbb
jbe
data16
repnz
dec
cmp
push
test
push
mov
fsubl
or
imul
ss
and
insb
aas
jno
test
out
lret
loopne
repnz
test
jp
insb
sub
out
push
pop
imul
add
adc
inc
add
rcrb
movsl
push
xchg
gs
lods
subb
mov
adc
jne
insb
push
outsl
fcoms
jno
or
andl
test
add
add
sub
jle
into
lods
push
jo
adc
movsb
push
xor
sub
jp
mov
fadds
xor
mov
out
cli
sub
xor
mov
fs
jne
repz
mov
lahf
adc
mov
and
stos
loope
insb
fwait
xchg
gs
pop
push
sbb
cwtl
pop
fiaddl
lock
mov
negb
jne
movsb
lcall
in
mov
and
jecxz
jle
xchg
mov
jp
testb
pop
jnp
mov
enter
pop
mov
push
inc
push
push
mov
jecxz
cmp
xor
inc
inc
push
dec
sti
xor
xchg
sar
fs
xchg
push
xor
ljmp
xchg
std
imul
scas
pop
push
pop
aas
jmp
mov
cmpl
jecxz
fstl
xor
and
cmpsb
jmp
lahf
imul
push
cmpsb
fildll
pushf
les
jmp
decb
xor
lret
push
inc
add
mov
mov
mov
sub
sub
negl
fiaddl
loop
push
mov
scas
jne
loopne
dec
cmpl
sbb
mov
inc
adc
dec
mov
push
inc
je
test
mov
loope
jl,pt
movsb
sbbl
inc
adc
fldenv
loopne
fs
shrb
dec
sarb
xor
cmp
xlat
mov
pushf
dec
int
adc
pop
data16
psraw
mov
insl
xchg
mov
inc
bound
push
andb
and
pop
sbb
xorb
xchg
dec
xchg
test
mov
cmp
mov
imull
sub
mov
mov
inc
jg
dec
xor
fdivs
push
sbb
mov
imull
xor
pop
out
cmpsl
pop
pop
cli
mov
movsl
and
xchg
iret
push
fbld
in
dec
xchg
dec
xchg
outsl
add
mov
outsb
push
aam
xchg
je
xchg
dec
inc
inc
les
inc
or
jns
mov
push
ret
lods
ds
outsb
mov
and
jge
enter
mov
jecxz
outsb
cmc
es
mov
test
mov
jp
and
pushf
mov
inc
loop
test
mov
mov
lods
adc
out
fisttps
fisttpll
repz
cmp
sbb
and
cld
sbb
mov
jo
mov
out
xor
jge
roll
cld
mov
in
sahf
and
jmp
movsl
sbb
shl
dec
hlt
mov
jecxz
or
mov
shl
test
sbb
add
and
cltd
sub
add
mov
test
fwait
dec
orl
dec
sub
xchg
jo
dec
test
repnz
fsubp
pop
push
xchg
ret
mov
xchg
push
bound
or
outsb
push
test
inc
stc
stc
or
cltd
jns
jge
mov
popf
int
sub
jmp
mov
and
in
sar
lds
jae
lret
gs
lret
mov
lods
cmpsl
or
xchg
out
cmp
add
pop
sub
pop
mov
loopne
mov
sub
out
sub
stc
aam
outsl
insb
pusha
dec
fdivl
sbb
adc
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
pop
mov
mov
stos
adc
adc
or
fwait
push
push
push
mov
jae
pop
push
decb
sub
imul
push
xchg
sbb
pop
iret
das
nop
add
adc
or
int3
fcomps
mov
jge
fldl
andb
and
mov
sub
pop
loopne
mov
lea
into
mov
pop
mov
out
mov
lock
sbb
icebp
adc
sub
notb
loop
mov
arpl
push
jge,pt
inc
mov
and
enter
add
jb
dec
sub
xor
dec
out
jbe
rolb
mov
push
cmp
mov
mov
outsb
push
inc
arpl
dec
mov
sub
movb
out
hlt
jp
imull
imul
pop
xchg
and
pusha
push
jg
add
mov
push
mov
inc
repz
pop
imul
sub
ja
sbb
lods
into
js
lock
xor
inc
xchg
mov
and
test
adc
mov
add
mov
shll
popa
shlb
shrl
je
push
pop
inc
and
in
adc
mov
repnz
pop
ljmp
repz
repnz
sub
and
push
xchg
movsb
clc
test
leave
adc
out
mov
testl
mov
repz
aam
pop
aas
push
sub
jne
int
rorb
dec
out
std
xchg
cmpsl
scas
loope
nop
ja
fwait
jae
adc
cmp
sub
mov
push
flds
cld
dec
xchg
or
pop
stc
pop
sub
push
or
lods
pop
xor
jge
jns
xor
fistps
nop
sbb
xchg
test
cmp
cmp
orl
mov
or
and
and
dec
sub
sub
mov
cmp
cltd
lods
dec
out
fstps
push
negb
aad
in
insb
mov
das
adc
loope
hlt
les
xchg
push
nop
int
lods
mov
add
inc
dec
out
xchg
sbb
mov
xor
jecxz
imul
inc
movsb
aad
ss
and
lods
aad
fwait
ret
leave
cmp
aam
push
in
insb
mov
outsb
les
push
mov
sbb
dec
mov
mov
push
mov
adc
and
in
mov
sbb
aad
out
lcall
in
and
xchg
flds
repz
inc
sub
sub
and
cmpsl
das
lods
cmpsl
jl
lock
xchg
jle
shll
mov
inc
fsubl
iret
or
or
xchg
scas
xor
mov
cmp
out
enter
jp
sbb
xor
mov
jg
shlb
lods
xchg
out
xor
popa
adc
pushf
dec
push
and
sti
shlb
int3
sbb
mov
push
jge
push
lods
add
mov
mov
dec
sbb
fidivl
fs
push
addl
stos
push
into
addr16
mov
int
xchg
in
xchg
mov
jge
xchg
mov
sbb
sub
movntps
push
sub
fcoml
scas
dec
out
mov
jl
xor
imul
iret
ss
enter
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
cli
jae
lret
mov
mov
or
xor
pop
lahf
xchg
xchg
std
pop
aas
jne
cmp
leave
jg
pop
cltd
adc
xor
stos
pop
std
dec
cmp
pop
pop
ret
shrl
lret
notl
mov
lods
ss
fwait
fs
mov
ret
shll
push
repnz
and
or
outsb
sub
sbb
jns
jle
mov
fcmovbe
scas
pop
mov
insl
jno
push
fwait
les
and
jmp
int
stos
or
sbb
fidivrl
and
pop
and
push
dec
push
aad
adc
xchg
fnstsw
or
add
mov
jl
push
rorb
jae,pt
adc
ret
stos
inc
adc
jecxz
pop
repz
mov
jmp
dec
dec
lahf
jl
mul
add
pop
bnd
pop
or
fistps
pop
xor
fcompl
fnsave
cltd
sbb
int
cld
xchg
lods
movsl
pop
or
inc
loop
mov
js
inc
das
dec
mov
xlat
cld
in
imul
pusha
movl
pop
push
lods
dec
mov
pushf
aaa
pop
mov
cmp
stos
jl
inc
mov
fcoms
inc
xchg
lahf
jge
call
pusha
fnstcw
ficoms
js
cmp
pop
leave
sbb
pop
sbb
adc
and
cmpsb
es
jmp
int
outsl
rcrb
sbb
dec
fwait
jg
push
xchg
fucomi
and
jo
push
es
fneni(8087
xor
pushf
fucomip
enter
inc
std
popf
mov
mov
into
cld
sbb
cmp
incb
leave
cmp
cld
pmullw
pop
xchg
scas
jmp
pop
jle
sahf
fwait
mov
pop
std
lods
aad
add
add
sbb
mov
test
xor
inc
bound
xchg
dec
pop
mov
push
lret
js
jne
addb
sbb
pop
dec
outsl
lret
out
mov
push
pop
out
leave
cmp
push
mov
jmp
hlt
in
dec
pop
mov
lret
bound
rorb
into
test
push
jae
pushf
mov
nop
cltd
and
adc
stc
inc
dec
sbbl
xchg
in
je
add
arpl
inc
xchg
js
int
add
test
pop
xchg
imul
aaa
add
mov
ljmp
in
hlt
cmp
loopne
cmp
int
out
sbb
popa
mov
icebp
mov
jp
jnp
outsl
or
sub
sbb
faddl
pop
mov
or
push
test
mov
pop
incl
inc
mov
rcr
inc
lds
inc
or
jmp
jmp
cltd
enter
push
jno
lahf
push
push
mov
ficoml
jge
sub
testl
cld
clc
xchg
data16
inc
into
in
mov
push
sub
pop
xchg
subl
jne
gs
xlat
xchg
fnstenv
je
xchg
inc
imul
lcall
lahf
mov
ret
out
into
mov
and
pop
imul
jo
js
mov
jo
mov
hlt
cmpsl
mov
pop
inc
rcrl
pushf
mov
and
insb
push
ficompl
pop
inc
fs
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
rcrl
adc
adc
inc
subl
xor
shr
test
das
js
jle
in
rorb
mov
cld
sub
test
cmpsb
pop
subl
push
popf
loopne
lret
cltd
fdivs
lcall
xchg
sub
adc
or
jnp
jae
and
lahf
pop
adc
jae
stos
jae
jle
jns
dec
cmp
xchg
pop
and
test
hlt
subb
decb
fwait
dec
lret
mov
adc
imul
out
lcall
movsb
lds
inc
pop
push
mov
jbe
xchg
sahf
pop
jbe
cmp
push
ds
sbb
mov
pop
fwait
movsl
add
jnp
jno
fsubrs
add
mov
movb
push
add
push
inc
push
dec
rorb
ljmp
inc
jg
and
cmp
pop
nop
je
pushl
repnz
xchg
jae
cmp
dec
ret
lods
mov
xor
and
mov
stos
jl
out
xchg
sub
jae
mov
jne
outsb
cmp
xchg
cmp
iret
cmp
push
push
hlt
cwtl
sub
inc
mov
dec
ficoms
jae
popa
in
sbb
movsb
test
fsub
or
sub
add
mov
mov
jb
adc
xchg
nop
cmp
mov
mov
pushf
popa
cmpsl
push
imull
sub
fs
adc
rorl
sub
out
add
mov
dec
shlb
dec
rcll
aas
xor
push
aaa
subb
jae
das
sbb
add
mov
nop
xchg
dec
cmc
or
mov
and
addl
or
jno
out
dec
dec
imul
and
fwait
dec
pusha
adc
sbb
flds
jl
in
dec
and
mov
outsl
aaa
ja
and
xchg
or
fs
pusha
cmp
pushf
mov
mov
jns
dec
dec
adc
loop
in
xchg
dec
ds
sbbl
lods
insl
sti
lods
xor
aad
lods
mov
loope
jo
subl
stos
ret
mov
push
mov
out
les
loopne
int
das
or
iret
outsb
mov
xor
jmp
ljmp
ret
scas
into
scas
sub
mov
xchg
out
js
or
fcompl
xchg
aam
pop
cld
add
mov
mov
add
jns
cmp
jecxz
or
lods
aaa
addr16
shl
out
jl
aam
mov
sub
sahf
out
push
or
scas
out
out
pusha
pop
stos
out
mov
cmpsb
and
popf
rorb
pusha
and
xlat
bound
mov
in
or
xchg
fwait
xchg
xor
jae
pusha
dec
bound
fnsave
add
jp
cmp
or
jbe
cmp
ja
mov
jge
lahf
sub
aaa
mov
xor
push
cmp
ja
fsubrl
stos
imul
aad
inc
mov
cmpsl
pushf
mov
lcall
pushf
xchg
pusha
and
cmp
aaa
nop
cmc
scas
xchg
push
fwait
mov
sub
lret
jmp
push
cmp
inc
push
mov
inc
push
dec
xchg
pop
test
inc
cli
add
sbb
lods
outsl
ret
fdivrp
lods
push
in
not
stos
jno
icebp
clc
dec
jne
or
into
rcrb
mov
lock
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
add
xchg
mov
push
mov
sahf
addr16
mov
ds
in
pop
insl
pop
push
mov
sub
mov
add
shll
es
mov
and
jecxz
inc
jnp
dec
test
jnp
jno
jl
int
call
jg
cmpsb
shrb
pop
push
lcall
and
ret
push
pop
popf
shr
outsl
orl
ja
movlps
ret
sub
mov
hlt
lret
shll
and
fildll
cwtl
fdivrs
mov
xor
adc
pop
add
cmpsb
add
ljmp
cmp
and
push
shr
int3
or
inc
cmc
in
mov
pop
dec
fnsave
lea
mov
inc
pop
jmp
mov
leave
mov
jle
popa
aam
lods
popf
jae
adc
cwtl
movsb
add
ffreep
xchg
cmpsl
dec
inc
sub
inc
mov
jbe
call
add
les
insb
call
mov
pop
xchg
test
mov
pop
pop
out
bound
lock
cld
in
sbbl
div
cwtl
dec
inc
int3
das
pop
mov
cmp
addr16
mov
push
mov
inc
mov
fucomp
xchg
xchg
mov
xchg
dec
and
iret
and
push
adc
clc
jl
jo
mov
jo
cltd
shrb
mov
push
sbb
pop
enter
mov
outsl
stos
sar
pop
push
cld
push
and
xor
jecxz
nop
cwtl
shl
ss
jge
jo
popf
clc
shll
dec
jbe
add
fbld
sbb
xchg
jne
insl
or
nop
and
outsb
pop
popa
icebp
sub
push
jnp
xor
mov
mov
in
dec
mov
mov
jle
dec
popa
in
decb
xchg
pop
sub
cmpsl
aas
adc
loopne
ficomps
or
mov
fisubs
jne
fs
ret
out
push
or
aam
mov
pop
pop
shll
daa
ss
jb
cmp
fnstcw
mov
movl
sbb
ljmp
cltd
scas
stc
jno
push
mov
push
push
shrl
push
call
and
adc
cmc
xorb
jno
popf
or
lcall
pop
leave
push
test
mov
inc
insl
sbb
arpl
and
pop
add
stos
fmuls
icebp
lret
mov
in
mov
fbld
push
sub
xor
xor
mov
sbb
and
mov
dec
jnp
xchg
jbe
cmp
push
in
mov
mov
push
fsubs
aam
scas
cld
xchg
movsb
ss
das
jno
fbld
xor
ss
out
je
loopne
xor
mov
push
loope
call
sub
nop
fst
jns
push
cmp
ret
mov
mov
pop
sahf
add
push
nop
outsb
inc
rclb
or
mov
mov
cld
mov
hlt
mov
pop
mov
push
int3
lds
xchg
jp
pop
test
push
cwtl
je
mov
mov
pop
push
add
test
inc
adc
mov
lock
into
les
imul
divb
mov
cld
ret
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
pop
pop
lods
inc
dec
adc
adc
sub
std
test
xor
and
sbb
xchg
mov
lods
loopne
in
push
add
lds
roll
adc
jle
sbb
pop
loopne
dec
sub
jp
aam
xor
dec
inc
push
out
clc
es
add
pop
xchg
adc
icebp
mov
cs
or
test
aaa
xchg
ljmp
cltd
or
mov
xor
nop
inc
mov
cmpsb
in
test
jne
pop
les
fldcw
enter
das
lret
or
das
aad
inc
jnp
shll
shrl
andb
inc
push
loopne
outsb
or
cli
xchg
mov
jg
or
xchg
scas
insb
mov
fwait
mov
aad
stc
add
mov
mov
aad
icebp
mov
mov
sub
mov
inc
push
inc
cmpsl
hlt
add
aad
mov
and
into
aaa
or
cmp
into
out
or
enter
fisubl
std
loope
sub
movsl
out
xchg
inc
sub
inc
js
loopne
adc
leave
shlb
cmp
or
stos
pushf
jne
mov
icebp
adc
push
movsb
inc
add
ljmp
scas
nop
mov
pop
fldt
pop
fidivrl
mov
mov
cmc
movsl
dec
shlb
xchg
fsubs
xchg
xor
inc
add
add
sbb
scas
test
dec
ficompl
lods
add
add
pop
es
pop
push
jno
lret
loope
push
adc
dec
cli
jne
fistl
sbb
or
aam
or
aad
lcall
mov
sub
insb
in
inc
fidivs
and
cmp
add
je
cmpsl
pop
cs
mov
lods
insb
sbb
mov
mov
ljmp
fbld
add
push
dec
inc
aad
push
cltd
pop
or
push
add
xor
clc
sbb
nop
inc
mov
ja
aad
pop
and
cmp
mov
and
outsb
adcl
inc
mov
jg
xor
lcall
movsl
and
ja
or
es
movsl
popa
mov
ret
xchg
loop
iret
sbb
mov
sbb
bound
cmpsl
in
sbbb
push
jno
jl
pop
add
sub
cld
adc
insb
arpl
and
shll
cltd
pop
xchg
adc
mov
iret
decl
xchg
jge
dec
jno
ret
fsts
cltd
hlt
inc
xchg
lcall
add
xlat
xor
test
test
inc
mov
dec
fisttpll
pop
push
dec
or
jp
cmpsb
push
jbe
mov
fdivl
mov
push
sub
jne
testb
pop
and
jnp
xchg
shl
clc
push
out
xchg
or
sub
mov
ds
lods
pop
iret
pop
push
pop
push
pop
or
dec
mov
icebp
pop
inc
mov
dec
dec
imul
xchg
lods
rcrl
sbb
lea
and
cmp
fisubrl
mov
pop
dec
aaa
test
cltd
enter
mov
clc
and
mov
or
loop
fwait
pop
in
mov
mov
inc
cmp
sti
or
arpl
sbb
rorl
sub
sbb
mov
lahf
sub
lret
push
sub
push
jno
in
mov
fwait
stc
pop
xchg
jo
stos
lods
cmp
test
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
pop
sub
test
imul
sbb
adc
outsl
in
push
xchg
and
xchg
xchg
or
bswap
pop
and
inc
pop
and
iret
or
hlt
adc
ror
xor
decb
movsl
sub
inc
mov
jecxz
pop
insb
mov
xor
mov
iret
dec
test
pop
shll
je
sub
movsl
mov
mov
or
std
or
imul
xchg
les
pop
loopne
xlat
cmp
dec
xor
in
inc
daa
pop
je
mov
insb
cmp
add
fwait
ret
cld
xchg
pop
push
nop
xchg
mulb
in
gs
inc
cwtl
mov
push
push
xor
xchg
repnz
push
jmp
rolb
sub
aam
cwtl
andl
nop
jg
xchg
and
cwtl
test
inc
jbe
xor
jl
and
adc
stc
bound
jecxz
jae
cmp
lea
mov
jecxz
leave
pop
pushf
les
popa
dec
lret
lret
lret
dec
push
fwait
rcrl
mov
or
push
push
jge
mov
fcmovnu
inc
std
sbb
lret
arpl
aam
jb
in
jo
fcomp
xor
lahf
repnz
addb
cli
sbb
jb
mov
rcrl
cmc
add
je
adc
dec
inc
inc
aad
jmp
in
mov
lcall
pop
mov
stc
xchg
mov
out
fsubs
bound
push
cmp
mov
sub
rorl
aam
rcr
adc
lret
pop
lea
pop
shll
imul
test
dec
mov
icebp
cmc
mov
jmp
jmp
fstpt
cwtl
mov
mov
in
push
cld
xchg
into
and
cmp
mov
roll
mov
outsb
sub
testl
fisttpll
in
adc
into
xlat
stos
push
cmp
in
mov
push
loopne
cld
xor
xchg
addr16
sub
dec
stos
and
xor
roll
cmpsl
xchg
pop
xchg
imull
jp
mov
sarb
sub
xor
inc
jle
inc
mov
adc
xchg
sbb
mov
clc
jp
push
mov
in
add
adc
imul
push
jb
jl
adc
sahf
push
pop
imul
add
adc
xlat
push
cwtl
aad
cmc
cmp
int3
mov
adc
dec
jno
insb
inc
or
nop
adc
cmp
fimuls
lahf
pop
inc
mov
xor
jmp
or
fldt
hlt
movsb
mov
push
pop
sbbb
pop
pop
jl
mov
sub
daa
xor
or
mov
in
cmpb
mov
cmp
mov
dec
add
mov
jmp
jl
push
int
add
pusha
rorb
inc
push
int
fs
clc
fs
push
aaa
and
in
jecxz
repz
sub
in
out
scas
clc
mov
sbb
sbb
mov
incb
cmp
in
push
scas
pop
jo
roll
lahf
fwait
mov
jp
and
xor
sbb
xchg
dec
cmp
insb
jne
xorl
sahf
test
pop
mov
pop
mov
ds
test
and
lcall
sbb
mov
inc
pop
mov
fadds
in
lcall
popa
lock
mov
xor
cmp
dec
add
mov
add
icebp
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
or
stos
adc
adc
leave
inc
ljmp
inc
sbb
enter
inc
call
mov
xor
jp
push
cld
sbb
inc
jo
pushf
enter
adc
popa
xchg
or
pop
test
bound
xchg
add
ja
add
aas
loopne
loopne
clc
adc
in
movsl
xchg
inc
pop
xlat
mov
ret
add
adc
and
mov
cld
pop
and
push
aaa
fisttps
add
adc
mov
jl
mov
jp
jno
jecxz
aad
jge
cmp
lret
cmp
jns
jg
sarl
movsb
push
pop
inc
arpl
xor
stc
xor
pop
fbld
insb
sahf
cli
inc
out
dec
adc
xchg
lods
push
push
and
aaa
scas
cli
adc
jp
fmull
lods
int3
iret
push
jle
adc
pop
addr16
popa
or
pop
mov
xchg
jle
lock
pop
add
jle
dec
pop
fidivrs
icebp
cmc
dec
cmc
pushf
in
sahf
push
cmpsl
xchg
jg
imul
test
pop
nop
out
testb
push
inc
ret
cmp
mov
mov
jo
mov
sti
lods
outsb
mov
lret
lret
jl
pop
cmpsl
push
fidivrs
loop
and
xor
cs
jne
call
in
mov
test
add
inc
mov
rorb
addb
movsl
les
jns
pop
aam
in
pushf
cwtl
push
xchg
cmp
pop
popf
dec
push
popf
xor
in
jns
mov
pop
int3
pop
push
jl
sbb
push
out
adc
bnd
mov
outsb
dec
dec
sub
lahf
test
mov
xor
lds
mov
and
sbb
repz
mov
or
aas
pop
pop
sub
push
pop
pop
std
lahf
repnz
mov
imul
outsl
jb
sbb
push
xchg
sbb
xor
jmp
push
push
sahf
cmpsb
icebp
adc
fcompl
push
inc
jb
faddl
jbe
pop
aad
addb
sub
shr
xchg
cmp
or
sti
sbb
pushf
xchg
outsl
lcall
fists
jae
inc
add
inc
imul
insl
iret
loopne
insl
jmp
fcmovbe
pop
add
mov
pop
iret
sub
push
rorl
cmp
mov
andl
data16
idivb
cmp
and
jo
cmp
dec
loop
or
cmp
cmp
xchg
sbb
clc
cmp
popa
aaa
xchg
sub
pushf
movsl
sbb
int
lcall
mov
push
lret
adc
sub
mov
adc
hlt
ss
negl
mov
aas
push
pusha
dec
jecxz
push
xchg
xor
pop
push
roll
mov
fcomps
lea
xor
shlb
jecxz
icebp
jae
sbb
cmpl
and
add
pusha
mov
and
int3
mov
movsb
add
push
repz
gs
xchg
or
inc
daa
lods
imul
pop
push
fmuls
out
push
icebp
xchg
addr16
jg
xchg
mov
sbb
mov
inc
or
pop
pop
icebp
pop
jmp
cmpsb
shl
adc
push
mov
add
add
and
mov
jl
jb
into
out
lock
push
enterw
xor
or
add
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
nop
jle
js
xor
adc
shll
sbb
das
mov
lretw
lds
inc
dec
fcmovnbe
pop
gs
mov
dec
and
popa
mov
cltd
dec
mov
lret
mov
sub
sub
cltd
cwtl
pop
cmpsl
jmp
leave
mov
scas
push
movsb
add
cltd
in
push
daa
jbe
jae
sub
mov
adc
hlt
mov
pusha
xchg
hlt
xor
imul
mov
rcll
sarl
dec
idivb
aam
xlat
fdiv
int
lea
lods
pop
add
xor
or
xchg
fisubs
test
adc
or
adc
add
pop
mov
inc
out
sub
sub
ja
cltd
lods
loopne
dec
cwtl
fmuls
imul
out
cwtl
pop
xor
lcall
inc
das
mov
push
lahf
imul
fsubrl
iret
add
pop
cmp
es
fs
sub
arpl
sbb
sarl
fsubl
cld
sub
cmp
mov
inc
push
das
inc
jns
lea
mov
movl
xor
fcomi
xchg
push
aaa
imul
into
push
cmp
sbb
outsb
sub
in
sub
add
addr16
loop
shll
xchg
lods
js
add
jnp
cld
mov
iret
in
sub
rclb
ds
xchg
jb
leave
cmp
rcrb
loopne
pop
mov
or
dec
dec
pushl
stc
and
fidivrl
mov
ljmp
aas
xchg
and
push
imul
lds
and
adc
lods
roll
jmp
js
xchg
xor
rorb
scas
xor
lahf
jnp
or
or
pusha
add
divl
mov
or
stc
mov
mov
mov
loopne
mov
pop
and
cmp
cwtl
mov
jb
lods
mov
push
cmp
xchg
pop
push
adc
xchg
fiaddl
pop
add
pop
dec
outsb
les
cmpsl
stos
ret
mov
in
mov
arpl
xchg
rcll
add
pushf
dec
adc
dec
stos
jle
mov
pop
gs
xor
mov
mov
push
in
cs
jo
push
jmp
jne
jecxz
jo
gs
add
ljmp
push
in
pop
add
cmp
cmp
push
hlt
int3
xchg
xchg
bound
aaa
dec
addl
inc
repnz
stos
mov
and
mov
dec
fisttpll
mov
ffreep
and
jge
dec
push
push
std
pop
xor
inc
and
mov
cmp
roll
out
mov
daa
jmp
ljmp
cs
push
jge
adc
cmp
adc
adc
mov
dec
jp
mov
sub
imul
fldcw
ds
addr16
popa
aad
movsb
mov
cmp
jle
rcll
cmp
popf
push
xor
test
jne
movsl
enter
xchg
mov
fs
adc
xchg
adc
and
sbb
scas
ss
lods
or
push
cmpsl
jge
mov
jecxz
call
mov
test
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
jmp
cmpsl
xor
adc
int
call
fisubrl
int3
adc
leave
scas
jge
push
movsl
ret
dec
dec
or
mov
inc
and
mulb
mov
aas
shll
jle
gs
inc
jno
out
mov
adc
cmp
sbb
add
in
mov
mov
lods
mov
sbb
lods
insl
jno
js
jbe
push
push
out
scas
lds
or
push
outsb
sub
mov
sbb
push
or
jnp
dec
adc
jno
mov
inc
jae
or
push
shrb
mov
mov
lcall
loope
sbb
mov
loope
cmpsb
add
adc
daa
cmpsl
or
gs
and
hlt
jnp
inc
fwait
iret
lock
loope
in
mov
sub
adc
adc
movsl
xlat
jg
insl
outsb
loopne
push
pop
repnz
out
jmp
ret
ja
dec
test
into
mov
push
pop
in
push
ljmp
and
in
dec
scas
xor
push
bound
ss
mov
sub
ret
cld
shrl
add
cmp
pop
mov
loope
xor
and
pop
adc
pop
pop
stc
loop
ja
fistl
fimull
call
mov
sbb
add
fdivrl
sbb
push
dec
jecxz
adc
xor
mov
out
pop
dec
ja
push
push
pop
mov
mov
and
test
push
je
dec
push
cmp
inc
negl
or
xor
orb
subl
cmp
pop
pop
or
xchg
inc
pop
or
stos
or
inc
stos
or
adc
and
rorl
mov
les
ret
lods
cltd
fmull
cld
and
jb
or
divb
lods
mov
out
into
cld
lods
push
xor
enter
xchg
sub
mov
shl
jno
sbb
aas
frstor
inc
push
jg
and
lret
les
add
out
jle
out
mov
pop
cmp
jnp
add
iret
nop
sbb
fwait
daa
mov
sbbb
inc
xchg
xor
je
cld
in
dec
mov
add
or
mov
sbb
loopne
test
cld
lds
rcrb
mov
bound
mov
and
call
sbb
fcoml
pop
fcmove
outsl
dec
push
fdivl
push
outsb
bound
ss
mov
fdivrs
pushf
mov
or
dec
bound
lds
xchg
movsl
pop
cli
sbb
xchg
xchg
aad
in
nop
or
outsl
lret
ja
arpl
cwtl
sbb
stc
pop
dec
mov
dec
xor
cwtl
xchg
in
and
icebp
dec
or
stos
jmp
das
xor
inc
mov
jnp
mov
js
cmc
mov
pop
lock
adc
jne
repz
iret
cvtdq2ps
xchg
jmp
mov
cld
mov
test
mov
sub
aas
xsha256
cmpsb
push
mov
mov
mov
lahf
sbb
in
dec
bound
inc
mov
fwait
pop
nop
push
fstps
mov
leave
and
bound
std
fmuls
test
push
cmp
cwtl
mov
stos
mov
pop
or
mul
fbstp
shl
and
adc
gs
roll
adc
push
ds
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
ret
inc
sub
adc
mov
mov
bound
dec
or
sahf
dec
or
jecxz
mov
sbb
mov
inc
dec
cli
sti
aam
shll
in
not
loopne
stos
in
inc
iret
mov
push
sbb
clc
push
mov
fldt
phsubw
jnp
int3
fstpl
jo
les
mov
cltd
mov
lcall
cmc
sbb
test
sbb
cmp
sbb
and
mov
adc
ret
jne
inc
ja
push
push
push
dec
xchg
pusha
in
mov
adc
cmp
xlat
and
jns
push
push
inc
xchg
dec
pop
fwait
add
push
rcl
iret
addl
push
pop
das
and
xchg
pop
dec
shl
sbb
mov
inc
xchg
pop
out
jl
and
mov
std
test
push
jmp
mov
lock
jno
xor
push
push
movsl
ficoms
lods
jo
outsb
adc
pop
xchg
ret
xchg
sbb
fsubl
mov
je
jbe
int3
lahf
add
xlat
rcrl
mov
shlb
repnz
jne
cmc
test
jle
and
fisttpl
xchg
fdivs
add
lea
jo
jecxz
xor
lods
fidivrl
jge
sbb
or
xchg
fstl
out
shr
out
cmp
sub
mov
clc
mov
xor
dec
fisttps
orl
mov
push
push
sub
scas
jl
jb
in
jmp
std
add
pop
xchg
es
testb
cwtl
sub
xchg
jae
jne
xchg
mov
daa
cmpsl
mov
push
leave
jmp
xchg
lods
mov
arpl
lea
popf
das
add
add
or
dec
add
and
mov
mov
add
iret
dec
faddl
shl
or
fs
stos
loop
mov
jmp
gs
xlat
mov
pushf
mov
scas
jl
mov
fnstenv
fcomip
pushf
ret
iret
cmp
push
hlt
sub
push
call
mov
push
test
pop
adc
jp
adc
sahf
cwtl
jnp
outsb
adc
dec
pushf
dec
cs
and
leave
sbb
mov
xchg
inc
sbbl
add
cmc
mov
adc
ret
dec
stos
in
pop
sarl
pop
in
aad
fs
ret
mov
and
insb
adc
mov
insb
rcll
inc
ret
iret
add
cli
lds
loopne
push
cmp
test
push
sahf
cltd
dec
or
stos
add
push
loope
jne
ss
mov
iret
sbb
add
add
arpl
fdivrp
int3
fsubrs
test
fwait
sub
mov
cmc
int3
mov
jns
stc
pop
mov
pop
add
lret
push
or
iret
out
jb
test
fcomps
xchg
cmpl
pop
je
and
repnz
push
mov
and
lea
rol
mov
lcall
cmp
ds
leave
rol
pop
jb
int
movsb
rolb
inc
inc
and
ret
std
add
mov
fmull
lods
mov
ss
add
push
scas
jb
xor
mov
cmp
ret
outsl
push
xor
mov
pop
aad
pushl
roll
fld
mov
xor
cmp
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
add
cwtl
inc
fwait
popf
mov
or
dec
xchg
mov
nop
and
push
imul
insb
add
outsb
in
fmull
sub
inc
ds
add
push
adc
xor
adc
xchg
fiaddl
push
jb
jno
fnstenv
enter
mov
pop
scas
es
xor
jmp
add
adc
clc
push
aad
push
xor
inc
test
sbb
fldenv
mov
adc
fldenv
push
negl
fs
lret
pop
xchg
add
jecxz
mov
mov
lret
lret
sbb
jle
and
or
sbb
mov
adc
and
aaa
movsl
sbb
mov
hlt
pop
jge
repz
or
inc
rcll
in
in
ds
cmc
cmpsl
or
xchg
ja
jecxz
or
pop
imull
subb
das
call
call
mov
lea
mov
cmp
mov
sbb
xor
push
fxch
sbb
mov
dec
cmp
ret
jns
jg
arpl
clc
sbbb
push
outsb
cmp
xor
ljmp
ljmp
loope
dec
sbb
cmp
dec
out
rorb
mov
popf
lods
sarl
arpl
xor
mov
sub
lea
ret
mov
add
in
sbb
imul
xchg
loope
lcall
addr16
jne
dec
mov
adc
pop
jae
jp
mov
jp
mov
or
repnz
dec
inc
sbb
inc
es
cmc
cwtl
and
les
sbb
or
mov
das
push
mov
sbb
pop
jl
repnz
pop
lock
arpl
aad
ror
sub
ja
jmp
imul
insb
test
std
xlat
add
xor
lret
pop
inc
fsub
mov
sub
and
xchg
xchg
mov
ja
pop
icebp
leave
sbb
or
xchg
rorl
add
icebp
or
movntq
sub
in
or
fiadds
fwait
addr16
mov
sub
ret
loopne
cmp
popf
int
add
push
out
enter
sbb
push
adc
push
orl
movsb
push
inc
sbbb
mov
xor
push
push
stos
jle
pop
cmpsb
shlb
fbld
lods
sbb
pop
ss
dec
pop
call
mov
clc
lret
jmp
jo,pt
fisttps
inc
pushf
xor
js
mov
mov
cmp
dec
mov
in
enter
movsl
sti
mov
mov
ds
push
sbb
xchg
mov
aam
in
lods
lret
pop
jl
xchg
mov
pop
inc
incb
and
adc
add
or
push
inc
fs
lahf
popl
sub
push
push
fisubrs
adc
cli
mov
lods
sar
sti
jg
push
inc
dec
shrb
inc
mov
imul
add
dec
adc
sahf
idivb
mov
mov
and
shrb
insb
aaa
ret
ret
stos
test
int
enter
sbb
pop
lahf
push
pushf
iret
cld
mov
nop
idiv
adcl
sbb
xor
mov
cmp
call
mov
mov
mov
jmp
or
mov
adc
sahf
out
outsl
sbb
adc
inc
lock
and
jge
popa
mov
std
pop
pop
jno
lea
inc
imul
mov
dec
dec
movsl
cmp
push
push
js
lea
sbb
bound
lock
lret
inc
cltd
sahf
adcb
imul
add
mov
mov
mov
cli
mov
mov
mov
clc
xor
adc
dec
loope
imul
lret
inc
dec
mov
xor
das
inc
pushf
mov
std
mov
ret
es
fmull
jo
mov
mov
cmp
scas
inc
mov
xchg
and
je
xor
xor
adc
and
mov
sbb
mov
xchg
and
mov
inc
xor
mov
mov
rcll
popl
push
or
sub
inc
mov
call
or
cwtl
ficoms
push
cli
mov
xchg
hlt
arpl
jbe
mov
out
stc
and
inc
movsb
jnp
sbb
outsb
scas
out
or
and
daa
mov
addr16
pop
mov
sbb
inc
lret
adcl
and
pop
mov
xor
int
addr16
xor
push
xor
dec
jp
test
push
cmp
jl
das
jmp
xor
or
sub
inc
sahf
notb
inc
out
mov
sub
das
jmp
dec
les
loopne
jle
cmc
inc
dec
pop
out
inc
or
sahf
scas
scas
int
cmp
pop
lock
inc
scas
pushf
out
add
dec
out
notl
mov
mul
data16
js
outsl
or
out
cs
insl
adc
cwtl
ljmp
mov
mov
loopne
movntps
cld
jns
sub
or
shlb
ret
push
push
jae
fstp
fldcw
adc
fcomps
orb
mov
jne
stc
inc
inc
idivl
sub
jno
inc
ficomps
orb
xlat
jnp
mov
insb
decb
push
sbb
adc
xchg
inc
cmc
int
pushf
xlat
push
pushf
mov
inc
in
icebp
inc
adc
cmp
push
add
lahf
fwait
andb
imul
hlt
repnz
outsb
push
dec
aas
jle
xchg
pop
negl
int
fsts
jnp
repnz
popa
gs
mov
aad
mov
sbb
dec
lea
aam
notl
popf
push
mov
sar
in
mov
and
clc
xchg
and
adc
push
sbb
sub
sub
sub
dec
mov
icebp
hlt
nop
or
into
lods
push
bound
inc
xchg
in
mov
mov
or
mov
rcl
xlat
push
or
fs
cmp
test
sub
mov
mov
mov
sti
sbb
xchg
sub
and
mov
into
jno
mov
jae
jae
sbb
cmc
stc
push
iret
and
sbb
mov
mov
aad
jno
lahf
push
jp
test
lods
fistps
adc
and
pop
jg
stc
fbstp
insb
mov
lods
repz
cmpsb
pop
xchg
dec
mov
repz
imul
shlb
decl
lock
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
inc
ret
adc
adc
scas
adc
xor
add
movsl
sbbb
or
pop
mov
mov
lods
pop
xchg
out
mov
push
or
stos
jmp
scas
imul
jg
xor
leave
inc
lods
jb
and
pop
out
cmp
stc
fidivrs
pop
test
cmp
imul
andb
mov
nop
cmp
arpl
repz
sub
cmp
dec
mov
sub
jo
add
xchg
lock
rorb
xchg
mov
icebp
call
xor
push
xor
insl
outsb
dec
adc
std
fcoml
xor
insb
jo
dec
loope
jbe
adcb
pop
cmp
cld
loope
cmp
imull
sti
add
js
sbb
push
cld
pop
addr16
xchg
mov
std
bound
fst
dec
pop
test
sub
frstor
sti
testb
or
sbb
mov
pop
lret
mov
mov
stc
arpl
jb
pop
jge
adc
sbb
mov
stos
pushf
jmp
push
push
or
inc
int
add
into
cli
test
pusha
adc
nop
or
sub
aas
xchg
movsb
shrl
and
mov
dec
aad
aam
iret
scas
pushf
xor
out
mov
aas
int
cmpsb
mov
pop
mov
dec
mov
jmp
sub
jns
addr16
push
clc
rcll
loope
imul
std
mov
inc
cmp
cmpsl
gs
fcmovnbe
mull
imul
popa
icebp
jle
jecxz
sahf
fistl
mov
dec
fistpl
lret
push
jp
sub
mov
gs
daa
loop
add
outsl
testl
jg
cli
or
add
jmp
jns
inc
adc
mov
push
test
inc
mov
cwtl
clc
sbb
push
jo
cwtl
inc
sbb
mov
inc
jge
addr16
lcall
jne
lahf
jo
clc
ret
jno
inc
mov
jle
orl
vmptrst
add
pop
cmp
addr16
sub
push
ljmp
sarb
jge
mov
or
arpl
test
push
rol
aaa
and
jg
mul
inc
cwtl
sub
js
int
inc
outsl
clc
dec
lock
repnz
xor
popa
sub
addb
mov
in
fldenv
ja
pop
gs
jecxz
bound
add
insb
lret
out
iret
sbb
pop
popf
enter
js
in
pop
mov
xchg
call
mov
pop
lcall
sahf
aas
movl
push
xchg
mov
test
mov
push
ljmp
popf
pusha
popa
pop
xor
movsb
jae
fcmovnb
jmp
nop
push
jmp
fwait
sahf
shlb
jae
pop
jmp
mov
and
inc
pusha
out
sti
ficoml
push
mov
jle
jb
jnp
xchg
fisubs
dec
aad
cmpsl
ja
lods
sub
rcll
sub
in
jge
dec
popf
mov
xchg
xchg
lret
data16
in
jb
es
jno
pop
adc
dec
cmp
mov
out
test
inc
test
pop
mov
inc
add
xchg
rclb
or
and
leave
sbb
jecxz
sub
dec
call
lcall
add
add
add
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
leave
jmp
jnp
lods
fdivrs
repnz
mov
ss
and
sub
cwtl
cmpsb
shl
add
push
dec
push
js
add
xor
and
pop
rcrb
ss
rcll
mov
inc
loopne
jge
ja
xchg
es
nop
in
out
jl
mov
or
add
xchg
jae
rep
pop
push
inc
movsb
cmp
das
adc
mov
mul
mov
mov
imul
icebp
push
aad
xchg
jnp
inc
nop
pop
outsl
imul
fwait
xor
xor
inc
or
iret
push
pusha
stc
aas
jbe
adc
test
mov
jno
or
jb
and
outsl
mov
in
ficomps
loope
pushf
jmp
jno
inc
and
popl
and
cli
add
or
mov
lds
cmpsl
addb
ds
lcall
mov
js
rolb
jnp
lret
and
out
insb
filds
mov
imul
xchg
inc
pop
mov
mov
xchg
mov
jle
int3
insb
cmpl
jo
mov
incl
and
or
out
dec
sbb
or
dec
inc
roll
lods
pushf
fsubrl
stc
out
sti
filds
popf
test
sub
data16
out
icebp
outsb
sbb
or
inc
fnstenv
ljmp
sbb
mov
int3
sbb
inc
inc
xor
xchg
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
