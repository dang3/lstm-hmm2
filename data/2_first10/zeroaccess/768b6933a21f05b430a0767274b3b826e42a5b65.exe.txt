push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
pop
mov
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
mov
fstpl
divl
notl
inc
add
inc
add
push
xor
stc
test
sbb
lcall
pop
test
test
fsubl
mov
into
mov
das
adc
xor
push
out
pop
daa
out
dec
daa
dec
mov
pop
sub
or
imul
mov
adc
mov
orl
imul
xor
lods
xchg
push
jne
and
sbb
loopne
lds
das
jl
sbb
mov
inc
inc
popa
lret
ds
aad
bound
mov
ret
inc
cmc
insb
ss
not
jg
xchg
mov
jge
cmpsb
inc
cs
mov
in
gs
xlat
or
sti
sahf
popf
outsl
iret
add
sbb
sub
and
rorl
xchg
out
jo
das
in
cmp
scas
sbb
lea
in
pushf
dec
jnp
dec
pop
enter
int
ljmp
inc
pop
cmp
push
daa
stc
int
out
dec
dec
repnz
scas
pop
push
or
shr
mov
lahf
cld
mov
dec
or
pop
outsl
xlat
xor
sbb
add
cmp
dec
mov
sbb
inc
mov
push
lret
orl
mov
jmp
rcll
ficompl
inc
cmp
xchg
ja
or
ja
dec
int3
outsb
es
aam
and
dec
imul
pop
je
adc
ss
in
mov
sub
and
shr
push
lea
mov
lock
enter
xor
mov
or
mov
pushf
jo
jb
call
pop
fwait
imul
cli
fsubl
sahf
jmp
mov
fstl
add
call
mov
cmpsb
loope
cmp
test
int
or
cmpsb
aam
scas
mov
and
sahf
int
and
sub
jmp
mov
inc
dec
mov
iret
jo
mov
xor
out
adc
sbb
ljmp
iret
push
or
stc
jns
mov
dec
sbbl
mov
sub
femms
shlb
pop
call
test
cmpsb
repz
es
es
sbb
sbb
dec
orl
pop
cmc
pushf
sub
push
dec
lds
adc
cs
xlat
mov
sti
roll
imul
xchg
push
fildl
xchg
shlb
and
das
jl
and
xor
in
gs
sub
cs
sar
cmp
jmp
lea
das
fisttps
movsb
int3
stos
fidivl
sub
cmp
popa
lea
hlt
xchg
cmpsb
xor
sub
pop
ds
aam
call
scas
sbb
sub
adc
pop
stc
or
test
xchg
lea
jl
cmp
jo
lods
pushf
rclb
push
jo
test
cmpsb
movsb
xchg
aad
fdiv
aaa
into
jle
mov
mov
les
and
mov
cmp
mov
jmp
add
pop
js
out
int3
mov
rol
add
or
adc
mov
inc
add
daa
sub
cld
out
or
mov
add
mov
movsb
ret
push
xchg
ss
push
outsb
mov
push
imul
stc
and
pusha
pushf
clc
push
int
push
push
ja
imul
dec
jno
int3
adc
gs
xchg
mov
dec
xchg
fisttpl
jmp
cld
out
mov
aam
dec
decb
xchg
rcrl
fsubrl
sub
insb
mulb
jg
jns
mov
int
push
adc
ret
scas
mov
mov
push
inc
inc
ret
push
rol
jns
pop
cli
sbb
jne
pop
add
adc
adc
mov
fiaddl
call
sub
aad
cwtl
and
jbe
xchg
loope
and
mov
lahf
xchg
cmp
adc
sahf
scas
lods
xchg
in
sub
jge
mov
mov
popl
inc
mov
and
fs
mov
notb
push
mov
add
sbb
sub
out
fstpt
lret
xchg
gs
xor
xchg
jle
andps
xchg
int3
rcrb
xchg
cmp
hlt
sarl
jnp
out
mov
popa
adcl
jnp
es
add
mov
out
inc
jg
or
lods
data16
test
pop
jne
cwtl
movsb
sub
mov
add
lret
mov
xchg
mov
out
dec
lock
dec
xor
and
mov
inc
sub
in
push
mov
lock
lods
cmpsl
fwait
and
rol
inc
cmp
hlt
xor
arpl
call
js
icebp
sahf
stc
cmpsl
in
add
mov
or
mov
and
gs
pop
sub
test
pusha
lret
dec
xchg
push
jbe
or
ja
cmp
addb
rcll
adc
testb
scas
std
cld
add
lret
cld
outsb
lcall
out
sbb
and
xor
jae
mov
xchg
mov
in
xor
cli
ljmp
clc
aaa
das
bound
fnstenv
xor
fcmovnbe
cmc
out
mov
gs
gs
pop
scas
xchg
and
sbb
jo
dec
das
shrb
test
cmp
and
inc
enter
mov
jg
mov
inc
into
lock
fcomp
nop
mov
mov
push
cli
xor
sub
in
lcall
xor
push
pusha
sub
lret
xor
push
jne
fwait
or
inc
dec
mov
cmpsb
sub
adc
pop
fwait
dec
fidivrl
or
push
imul
outsl
pop
rcrb
roll
imul
sbb
insb
push
push
imul
pop
mov
bound
xchg
push
cmc
sbb
insb
xor
or
jg
bound
mov
and
mov
in
add
mov
ss
push
lea
fwait
imull
bound
mov
dec
xlat
jge
jbe
pop
or
adc
imul
sbb
pop
push
scas
imul
xlat
cmc
prefetch
mov
mov
std
mov
jmp
jne
lret
clc
and
mov
gs
lods
mov
scas
shlb
jbe
cmp
stos
cmc
push
cmp
shlb
sub
pop
jg
rcrl
out
or
data16
jbe
and
std
or
stc
mov
dec
lret
sub
jle
shl
sub
call
out
push
shrb
loopne
dec
adc
push
pop
movsbl
jbe
mov
sub
test
cmp
add
aas
xor
lea
lods
stos
adc
cmp
lahf
cld
dec
aad
xchg
xor
test
cmp
lcall
out
mov
jge
add
pop
stc
jl
push
add
movsb
mov
mov
cmpsb
jle
cltd
and
cmp
aaa
mov
push
fisubrl
adcl
mov
shll
std
pop
add
pop
imul
das
mov
pop
xor
push
push
cmp
sub
lss
jmp
jae
repz
lods
sti
insb
fimull
jmp
mov
adc
dec
fs
mov
scas
daa
pop
out
popa
sub
push
pop
int
adc
mov
xor
cltd
sbb
test
icebp
aad
fwait
mov
jae
fistps
loopne
xor
cltd
mov
clc
jne
jp
je
test
or
outsb
pop
cli
ss
bound
jecxz
xchg
jmp
inc
push
lcall
test
mov
mov
mov
add
pop
mov
mov
daa
sub
stc
mov
xor
mov
inc
pop
mov
dec
push
cmpsb
xchg
fisubl
jne
lahf
push
adc
and
sub
or
add
lret
js
lods
mov
or
stc
test
push
aaa
scas
add
dec
sbb
fwait
ja
nop
push
mov
or
and
stos
int3
repnz
pop
shl
pop
adc
insb
frstor
or
jge
fincstp
in
ficomps
push
divps
test
imul
cltd
enter
rclb
fwait
pop
js
sarl
cwtl
sbb
xchg
int3
test
jg
ds
mov
lret
addl
lret
das
adc
xchg
mov
notl
sbb
adc
mov
xchg
pop
mov
xor
mov
out
xor
jne
enter
lock
push
or
sbb
jae
jb
xlat
mov
inc
jnp
inc
stos
data16
push
sub
stc
push
sub
mov
cltd
in
test
cmpsb
jbe
aaa
push
xor
and
out
test
xor
adcb
inc
pusha
pop
and
loopne
jae
xchg
mov
insl
add
jge
push
and
inc
inc
repnz
fwait
jnp
out
and
add
enter
sbb
shll
stc
push
xor
rorb
call
dec
xchg
xchg
pushf
ja
jbe
add
dec
fcompl
loopne
xchg
xchg
mov
lahf
adc
movsl
and
mov
inc
in
dec
mov
js
mov
fistpll
adc
sbb
xchg
movsb
jmp
mov
xchg
push
xor
outsb
mov
mov
jnp
push
cmp
adc
push
cli
lahf
ss
dec
mov
and
dec
dec
sbb
fisubl
fistpll
jno
and
sub
add
fistl
or
mov
inc
rclb
xchg
shrb
out
into
loop
jne
xchg
mov
jbe
addr16
inc
xor
out
fisubrl
mov
imul
cmp
icebp
xchg
xchg
lret
and
es
sti
mov
pop
mov
cmc
push
ja
mov
inc
je
adc
jns
scas
xor
adc
iret
add
ds
test
loope
int3
inc
push
or
mov
pop
adc
pop
wbinvd
mov
inc
cmc
xchg
sbb
out
add
aad
or
jno
mov
shll
mov
adc
pop
loope
or
stos
repz
sub
sbb
scas
dec
or
lods
mov
std
ficomps
or
mov
add
pusha
fisubl
pop
stos
es
mov
ret
mov
scas
or
jae
clc
sbb
mov
outsb
dec
out
out
shl
mov
or
add
add
pop
mov
xor
pop
bound
test
cmp
adc
shl
sbb
lock
mov
cld
sub
jmp
hlt
add
data16
out
jmp
sahf
add
lock
and
stos
push
mov
pop
out
dec
jp
arpl
inc
mov
mov
push
cmc
aaa
loopne
adc
pop
out
jb
mov
leave
outsl
push
popa
popa
add
aas
into
lods
fdivrs
xchg
or
lcall
rorb
pop
inc
cld
add
adc
popa
jnp
xor
mov
cmovae
sbb
daa
testl
lock
inc
sub
cmp
pop
and
jne
js
jo
rorb
std
inc
call
in
test
ret
outsb
or
jmp
loop
les
clc
sti
stc
jge
ror
xor
xchg
jg
pop
mov
pop
dec
andb
movsl
xor
popf
push
sub
ja
mov
xorb
ret
lods
dec
push
sub
dec
adc
call
mov
mov
daa
cmp
fcmovnb
mov
hlt
loopne
jo
mov
ja
and
push
int3
jg
hlt
push
jo
shlb
call
daa
mov
ljmp
pop
into
inc
hlt
cmp
rorb
push
pop
dec
pop
sub
enter
push
sbb
add
int3
fsts
add
lods
not
cmp
std
ds
hlt
inc
pop
or
out
cmc
mov
and
push
dec
lock
add
mov
jp
outsb
int
adc
ficoml
cmpsb
mov
adc
cltd
sbb
jmp
jnp
mov
movsl
sti
inc
xchg
mov
ret
loopne
sub
sub
ret
lahf
xor
lret
xchg
jnp
cli
sub
gs
jle
inc
adc
lret
out
xchg
stos
mov
adc
loop
add
stos
ja
fdivrs
ret
push
cmp
std
sbbl
lods
loope
cli
call
test
inc
fldenv
mov
pop
cs
push
push
mov
cmp
cmc
mov
ja
cmp
or
mov
jp
cmp
scas
aas
rcrb
mov
mov
and
fsubrs
inc
sahf
test
push
sub
pop
out
xchg
dec
adc
push
in
das
ja
fsubrl
pop
inc
jmp
add
ror
inc
loope
mov
or
shr
gs
or
out
mov
divl
stc
and
iret
sbb
and
sub
pop
imul
imul
jb
xchg
jno
pop
fdivs
jl
mov
lea
cmp
out
sbb
aam
xchg
nop
loop
sub
dec
inc
sti
cs
fdivl
imull
mov
leave
xchg
pop
fsubrs
xchg
out
pushf
movsl
push
push
and
stc
mov
inc
dec
jno
mov
cltd
pushf
fildl
hlt
push
or
and
ss
ffree
xacquire
test
cmp
add
das
dec
mov
jmp
adc
loope
imul
cmp
repz
mov
loop
mov
fldt
push
repz
cli
mov
mov
scas
mov
push
or
aad
jp
inc
mov
jecxz
movsl
pop
fldenv
das
or
out
adc
sbb
mov
stc
jmp
mov
adc
push
leave
test
mul
xchg
pop
sbb
cmp
xchg
xchg
mov
popf
sar
jle
dec
pop
test
js
inc
sub
push
les
jno
mov
xor
xor
not
jl
pop
push
leave
fidivrs
repz
cmp
popa
neg
ss
mov
pop
iret
movsb
xor
inc
and
sbb
popa
push
add
xor
pop
imul
xchg
pop
mov
aas
and
inc
and
lret
dec
lret
cmpsb
sub
ror
adc
add
push
in
inc
mov
cmp
inc
pop
and
test
imul
test
pusha
mov
cwtl
into
loop
mov
or
popf
cli
mov
add
jecxz
cmp
pop
call
daa
xchg
hlt
insl
xor
jg
rclb
bound
cli
pop
push
divb
divl
movb
pop
adc
cmp
pusha
pop
cmp
fistpl
mov
outsb
adc
mov
push
jg
mov
mov
ljmp
mov
ds
push
das
push
stos
aam
jne
mov
push
fsubrs
cmc
push
out
pop
imul
sub
xchg
mov
cmp
fsub
insb
push
test
lcall
mov
and
lea
mov
jg
and
clc
adc
aam
pushf
mov
out
mov
xor
hlt
push
pop
andl
movsb
jns
testl
int3
int3
push
dec
pop
add
cmpsl
push
dec
rcrl
jno
mov
vpxor
cmp
add
pop
fcoms
xchg
mov
faddl
jecxz
lods
push
dec
jge
or
jnp
sbb
push
mov
lea
aad
jo
leave
pop
imul
pop
enter
xorl
mov
cltd
in
xchg
add
jge
add
jno
dec
fwait
sti
stc
orl
pop
out
ret
mov
cltd
push
xchg
cld
dec
aad
lods
jno
xor
mov
ljmp
inc
xchg
pop
dec
mov
jmp
test
mov
lock
mov
sbb
pop
inc
sub
push
push
add
add
out
sti
jno
and
mov
shlb
in
data16
jg
jl
shlb
test
notb
or
mov
mov
mov
jecxz
pop
scas
lds
mov
loopne
dec
fnsave
into
cmp
out
je
xor
pop
test
scas
ss
add
pushf
xchg
call
xchg
jmp
daa
xor
mov
movsl
cmp
nop
xchg
les
jnp
push
ret
fcomip
popf
mov
enter
test
and
test
push
jns
gs
loop
jl
sub
pop
add
je
out
fs
mov
and
test
pop
bound
les
or
mov
sbb
fwait
iret
or
jg
push
adc
lods
ljmp
and
add
pop
add
lret
out
ja
leave
cmp
dec
push
dec
es
cmpb
mov
dec
sub
pop
call
scas
xchg
add
xchg
mov
addr16
sbb
cmp
sbb
push
mov
add
mov
ds
aaa
inc
popa
cs
or
jbe
mov
mov
push
jnp
lcall
jge
push
call
outsl
cs
rcrl
loopne
or
xchg
push
aad
dec
push
inc
mov
hlt
std
loopne
data16
cwtl
jle
loope
mov
in
jge
mov
inc
xor
call
pop
ret
adc
cmpsb
pop
jmp
mov
aad
cmp
sub
insb
xchg
mov
push
prefetch
les
in
cltd
iret
pop
pusha
lcall
xchg
addr16
sbb
jmp
xor
and
rolb
adc
imul
mov
push
lret
xor
ret
sub
or
enter
std
dec
lret
ja
push
lahf
lret
mov
jae
adc
sti
or
in
jbe
out
xchg
jp
enter
pushf
xchg
push
pop
inc
push
jmp
je
xchg
adc
jg
hlt
repz
and
cmpb
inc
jl
jmp
das
dec
out
add
pop
pop
jns
cs
push
or
jg
nop
mov
mov
test
add
in
ss
aad
movsb
loopne
inc
scas
sar
xchg
ja
or
jbe
scas
push
xor
mov
pop
push
sub
sahf
inc
mov
pop
mov
jae
fcmovnbe
push
stos
mov
and
xchg
push
call
psubsb
push
push
push
push
adc
imul
in
mov
cmp
add
test
cmpb
decb
add
std
pop
lret
fdivrl
jp
hlt
mov
add
lret
aam
pop
addr16
fs
sbb
lock
jno
xchg
mov
in
imul
add
fidivl
sub
or
mov
sub
add
adc
push
dec
jae
cmp
rolb
inc
mov
and
cmp
jo
jne
gs
outsb
jae
call
sbb
jne
sub
je
add
in
inc
repz
sti
adc
cmp
pop
sub
inc
adc
xorb
jle
sbb
aad
ret
fisubs
rcrl
mov
jns
jae
leave
out
lods
iret
mov
mov
js
mov
repnz
outsb
andl
fwait
pusha
lcall
pop
or
outsb
rcrl
jge
arpl
movl
insb
push
ja
cmpsb
subl
xor
sub
ret
mov
dec
jns
stos
xchg
cmp
sub
and
jp
int
pop
loop
ja
mov
leave
xor
push
pusha
adc
bound
pusha
lret
outsl
ret
cmp
pop
pop
sahf
push
cmpsl
js
fstpt
mov
pop
xchg
lods
pop
mov
aad
pop
repz
and
mov
mov
sbb
push
aam
std
mov
xor
cli
lret
and
adc
jmp
icebp
sub
sub
in
test
pop
inc
and
nop
arpl
jae
jle
mov
loop
lret
das
sub
xor
add
lahf
adc
sbb
dec
test
mov
fs
mov
jno
mov
xor
lret
mov
dec
js
dec
loopne
push
dec
mov
jbe
ret
mov
add
inc
jge
and
push
jbe
cmp
add
sbb
fmuls
push
dec
int3
fs
sahf
stos
fs
mov
iret
arpl
aaa
add
scas
push
or
je
lods
pop
cmp
aad
pop
xchg
lea
jae
sub
adc
out
int
push
pop
lahf
iret
inc
xor
fidivs
mov
outsl
mov
add
fcompp
stos
jo
clc
das
incb
push
adc
pop
in
sbb
out
push
out
mov
xor
adc
popf
das
mov
xchg
and
loopne
push
out
pop
sub
popf
adc
cmp
xor
lea
sub
sahf
pushf
js
xchg
xlat
aam
dec
cmp
dec
mov
pushf
or
xchg
dec
xchg
mov
fs
sub
loope
out
lcall
sbb
fmul
lea
dec
fcompl
xchg
mov
aaa
dec
dec
mov
jp
mov
scas
cmpb
mov
sbb
movsl
fdivrl
addr16
stos
inc
stc
stos
les
sbbl
inc
or
cli
xor
and
cmpsl
sub
push
fs
addr16
fwait
aad
scas
lret
and
negl
xchg
add
mov
rcr
stc
fwait
aas
gs
xor
test
inc
repz
jp
movsl
add
adc
rcr
mov
dec
push
sub
je
xor
cld
xchg
ja
or
inc
les
in
inc
mov
add
sbb
insl
add
adc
xchg
adc
stos
inc
inc
sbb
jg,pn
sbb
test
xchg
mov
dec
mov
cmpb
jmp
les
sub
mov
leave
imul
adc
in
jecxz
pop
mov
cli
scas
iret
pushf
sub
sbb
jns
sub
rolb
xor
mov
outsb
mov
pop
out
pop
sbb
stos
xor
xchg
cld
sbb
pop
xchg
arpl
test
xchg
add
mov
ficompl
test
in
bound
pop
mov
pop
pop
inc
add
push
sub
jns
push
cwtl
adc
jecxz
or
jp
movsl
mov
insl
jae
push
ja
test
cmpsb
leave
sub
inc
notb
xchg
push
xchg
stos
mov
pusha
mov
stos
add
xchg
fcoml
cmp
lret
iret
xchg
test
push
lea
repz
or
xchg
das
jno
cmp
mov
mov
push
ficomps
cli
js
jnp
leave
cmp
pop
or
test
push
push
sti
pushw
es
imul
xchg
ja
pop
or
dec
idivb
xchg
jmp
xor
add
das
pushf
fimull
mov
sbb
push
push
pop
out
jl
int3
jnp
test
xor
add
fiadds
lock
dec
xchg
xchg
or
xchg
sub
sarl
sub
pop
and
loopnew
push
mov
mov
mov
fwait
dec
adc
sub
dec
pushf
xchg
ss
enter
int
inc
frstor
lea
popa
fwait
adc
imul
push
sbb
xlat
sub
fsubl
and
cmp
scas
sub
pop
mov
inc
in
and
hlt
loop
fs
xor
jl
and
gs
inc
cmpsl
sub
shr
out
notl
lea
push
xchg
movsl
push
mov
mov
add
dec
ds
and
sbb
jp
popa
das
pop
jb
sub
dec
mov
in
outsb
fisubrs
mov
in
popf
aam
push
test
cmp
mov
push
sbb
mov
mov
outsb
pop
aad
punpckhbw
in
arpl
leave
inc
or
push
and
xchg
add
inc
sahf
insb
dec
jge
mov
pop
mov
addr16
jge
rorb
sbb
orl
cld
push
mov
pop
dec
push
dec
jbe
xlat
jo
fiaddl
push
sarl
sbbb
mov
iret
jge
ret
mov
add
and
rorl
mov
sub
mov
das
adc
call
subl
mov
lds
int
leave
dec
enter
stc
subl
dec
loopne
shl
push
jo
in
mov
data16
inc
ja
jg
out
cmpsl
add
enter
jmp
aam
mov
cmc
sub
mov
push
lcall
xchg
xchg
into
arpl
mov
ret
pushw
sbb
out
lret
inc
test
outsb
push
jecxz
cmpsb
sbb
imul
mov
repz
adc
dec
stc
inc
pushf
dec
cmpsb
dec
sub
cltd
push
jo
popf
aas
cmpl
jno
xor
int3
mov
push
test
xor
push
inc
ret
xchg
mov
loope
stos
dec
pop
jae
sti
in
adc
cmpsb
ljmp
mov
add
test
inc
and
dec
inc
and
jge
and
arpl
repnz
cmp
cmpsl
add
mov
push
aam
adc
out
imul
push
fninit
sti
cmp
outsb
in
mov
pop
jmp
sub
ret
lea
push
xor
arpl
mov
imul
lahf
mov
xor
jb
ret
sub
mov
cld
mov
pop
mov
adc
ss
in
mov
cmc
add
stos
inc
cmp
insb
in
cltd
adc
pushf
mov
arpl
out
sub
jb
into
loopne,pt
mov
addb
loopne
ror
mov
std
adc
jae
sub
outsl
inc
nop
sub
lock
andl
testb
inc
sbb
shll
add
mov
mov
inc
in
in
insb
or
ficompl
or
mov
or
clc
orb
pop
ret
test
in
dec
sbb
cmpsb
repnz
mov
and
mov
jmp
jb
sbb
shlb
icebp
shl
mov
ret
hlt
rcrl
mov
repnz
xor
pop
mov
lea
ror
fs
cmp
insl
add
mov
aad
xchg
pop
push
push
ss
pushf
je
das
pop
pop
scas
adc
jl
or
xor
push
fidivl
push
xchg
hlt
loopne
pop
add
sbb
adc
flds
adc
or
mov
mov
jns
pop
cmp
adc
test
or
inc
test
mov
lds
pop
sbb
dec
and
test
leave
mov
sahf
jle
arpl
inc
jle
fcmovnb
sub
push
daa
or
mov
adc
xchg
dec
stos
pop
or
mov
push
mov
in
mov
sbb
or
add
mov
xchg
dec
loop
dec
enter
pop
sub
les
xor
mov
adc
pop
sub
fmull
outsl
repz
mov
out
mov
mov
sbb
iret
mov
out
inc
js
call
leave
popf
fsubrs
outsl
and
ret
or
pmaxub
lea
or
loope
cmp
pop
ljmp
fildll
pusha
leave
or
add
int3
xchg
xchg
ja
pop
inc
mov
jl
insb
fnstsw
stc
cmp
popa
push
mov
adc
sbb
xchg
popf
pop
mov
mull
cld
ret
mov
sbb
add
pop
push
push
gs
push
leave
push
fisttpl
adc
fisttpll
or
mov
hlt
popa
rcl
sbb
subb
mov
xlat
sbb
jmp
pop
into
filds
pop
lods
shl
sti
sub
outsl
scas
fcmovbe
mov
movsb
add
das
cmc
data16
ss
iret
pop
mov
mov
ret
cmp
mov
sub
mov
sub
jo
nop
test
jl
jge
mov
stos
push
mov
sahf
mov
pop
xor
or
shr
jne
xchg
scas
std
loope
and
jp
xor
mov
es
arpl
imul
cltd
data16
js
sbb
int3
mov
cltd
faddl
fstl
add
inc
negb
push
in
cmp
icebp
mov
jae
fcoml
mov
inc
push
and
mov
adc
xchg
jbe
pushf
nop
mov
adc
insl
cmp
jmp
pop
fcoml
pop
sarb
and
cmpsl
sbb
sub
push
add
lds
cmp
xchg
and
int
mov
hlt
jbe
inc
in
and
and
push
mov
mov
pop
ret
cmp
pushf
cmpsb
ret
cld
and
movsb
test
stc
sti
fstpt
jle
outsb
sbb
lret
test
sbb
dec
mov
les
stc
or
neg
or
push
mov
sbb
mov
sbb
aas
fwait
es
fnsave
sbb
cwtl
push
ljmp
xor
ret
add
mov
pop
ret
lods
mov
fnstsw
rolb
mov
insl
bound
dec
hlt
insl
sbb
jnp
pop
xor
dec
lea
mov
jle
pop
nop
insb
ds
dec
daa
xchg
dec
js
and
movsl
cmpsl
scas
gs
dec
in
inc
stos
adc
mov
pop
adc
int
into
xchg
xor
inc
xchg
pop
mov
inc
xchg
lds
insb
jb
insb
jl
cli
test
bound
xchg
dec
cmp
mov
pop
stc
add
ja
mov
je
movsl
subl
call
bound
scas
jle
xlat
data16
mov
mov
lock
test
mov
jmp
clc
repz
data16
fstpl
std
pusha
adc
pop
inc
loop
notb
jge
movsb
insb
ret
mov
test
mov
shlb
mov
mov
jbe
fdivs
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
push
pop
xlat
pop
jp
aaa
pop
jp
xor
in
insb
movsb
popa
pop
xchg
data16
push
push
cmp
inc
xchg
mov
imull
push
jns
dec
push
out
iret
enter
dec
lret
in
jle
jae
jae
ret
or
dec
pop
test
cmp
jo
xchg
xor
push
mov
pop
push
jecxz
add
outsb
push
pop
xlat
sub
cld
push
sbb
addr16
clc
scas
data16
and
lahf
out
sub
pop
xlat
xchg
mov
push
outsb
sarb
mov
jnp
add
jns
es
outsb
cmp
repz
adc
jp
int3
hlt
jo
pop
loopne
shrb
xchg
int3
call
inc
fdivrl
xor
and
cwtl
ret
adc
xlat
ja
insl
inc
mov
push
and
in
mul
mov
inc
lret
mov
enter
nop
cmpsb
ss
cmp
fadds
in
xor
dec
cwtl
jp
test
push
xor
sahf
mov
mov
lods
mov
loope
jbe
mov
adc
jg
mov
ret
mov
lds
sub
mov
inc
xchg
cs
fdivrl
hlt
and
pop
mov
out
push
sbb
mov
dec
aam
adc
dec
fisttpll
inc
shrb
test
jnp
stos
add
cmc
pop
add
mov
lret
or
nop
push
scas
and
rorl
jmp
mov
mov
pop
sub
rcrb
fadds
cltd
mov
vrsqrtss
add
shll
insw
xchg
push
ss
xor
or
popa
or
sti
inc
push
mov
mov
xchg
xor
or
dec
pushf
gs
fiaddl
scas
nop
fmulp
inc
in
inc
add
pop
mov
or
push
rcrb
outsl
bsr
dec
jg
scas
insb
dec
xchg
xor
lea
xchg
lcall
icebp
push
sarb
cmc
xlat
cwtl
add
lds
xchg
lods
push
pop
subb
dec
imul
aaa
jp
mov
ficoml
mov
inc
in
fxch
xchg
or
mov
outsb
pop
mov
sub
and
adc
xchg
loop
icebp
lods
es
and
bound
add
xchg
insb
pop
fdiv
icebp
inc
pop
aas
sti
sahf
add
add
mov
xchg
dec
push
and
popa
mov
enter
in
jns
popa
push
sub
mov
and
test
cmp
cmp
mov
or
lea
data16
or
xor
pusha
gs
and
cmp
or
mov
mov
cmp
test
enter
push
dec
mov
cmovle
into
dec
jo
xchg
insl
cmovge
sub
xor
ret
sahf
push
mov
mov
in
movsb
andps
push
xchg
scas
add
daa
cld
insb
aas
lcall
loop
es
pop
in
add
xor
movsb
inc
xchg
leave
xor
cwtl
insb
test
and
fisttpl
jnp
dec
inc
mov
mov
fmuls
clc
pop
das
sti
push
mov
mov
gs
mov
das
xchg
arpl
add
mov
adc
xor
out
add
xor
mov
cs
add
lret
inc
stos
jle
mov
mov
sbb
rolb
fcompl
movsb
out
lret
or
push
mov
notl
imul
xchg
rcrb
mov
lret
add
test
pusha
testl
lods
jge
movsl
fdivrs
data16
rcr
inc
movb
push
movsb
jle
jge
push
scas
idivl
loope
cmp
jae
add
out
sahf
push
mov
xor
sbb
xlat
notl
push
and
dec
xchg
mov
in
inc
jecxz
rcll
sbbb
test
arpl
mov
xchg
inc
jno
inc
dec
leave
hlt
pmaxub
in
cli
mov
jge
dec
aas
sbb
int
pop
insl
push
pusha
push
imul
lods
mov
and
xchg
popa
test
xor
mov
lahf
adc
jo
sub
xlat
cmp
sbb
clc
or
fildl
inc
and
and
movsl
xchg
jl
and
cld
sub
fcomi
push
lds
push
xchg
nop
sarb
mov
scas
mov
enter
pop
outsl
add
icebp
stos
icebp
mov
popa
in
stos
push
push
sub
iret
jp
out
and
adc
les
and
xor
insb
and
std
mov
pop
sbbb
jp
loopne
call
sbb
xchg
es
rorb
xor
dec
inc
pop
xlat
inc
mov
sahf
xor
scas
loopne
loop
lock
xlat
test
fildl
push
dec
clc
inc
mov
es
rolb
sarb
into
mov
inc
mov
out
das
add
outsb
cwtl
dec
int3
pushf
scas
or
idiv
jle
jl
clc
lea
xchg
inc
push
xchg
mov
adc
xor
cmp
adc
add
lock
xor
pushf
cmp
dec
and
mov
imul
inc
in
xor
lods
lea
jl
or
cmpl
xchg
inc
repz
mov
xor
fdivl
push
loopne
xchg
push
fcom
nop
rolb
pop
loope
add
add
lahf
push
js
cld
mov
jecxz
or
lock
test
cmp
sub
mov
inc
dec
js
idivb
sbb
lcall
das
push
adc
push
adc
daa
stc
mov
call
mov
inc
test
out
dec
mulb
sbb
mov
adc
cmp
pop
outsl
jmp
pushf
jp
arpl
add
fimuls
aaa
jmp
shr
pop
sub
lods
push
das
test
push
mov
xchg
sub
mov
or
push
addr16
out
mov
inc
in
scas
test
in
add
loope
outsl
ret
dec
and
jge
xchg
ret
or
inc
add
mov
ret
xchg
adcb
fadds
daa
ret
mov
imul
push
ss
lock
imul
xorb
gs
xchg
stos
icebp
mov
call
push
insl
pop
cli
pop
ret
leave
sub
out
mov
cmc
jb
scas
aam
xchg
icebp
sub
pop
mov
xor
push
push
push
lcall
das
adc
cltd
push
popf
insl
fdivp
dec
xchg
scas
and
dec
int3
add
cmp
xlat
push
shlb
dec
cld
loope
data16
inc
mov
cmp
sti
jge
push
pop
in
push
fnstcw
addl
jg
stos
xchg
mov
sbb
sbb
or
mov
and
push
xchg
xchg
aas
daa
into
loopne
or
push
and
jecxz
cmp
out
fwait
in
dec
icebp
and
iret
icebp
or
xor
jl
rorl
dec
addr16
gs
add
cmp
xor
sbb
xor
add
loopne
sub
stos
sub
mov
fld
arpl
jne
jo
jle
inc
outsb
mov
ds
pop
inc
fwait
mov
pop
mov
out
loop
jne
jbe
pop
dec
test
daa
xlat
adc
push
xchg
mov
add
push
mov
ret
jno
insb
mov
mov
pop
or
into
sub
int
jmp
icebp
inc
sbb
inc
int
or
xchg
jle
push
int
xor
cld
xchg
loopne
jmp
aam
jb
adc
in
aas
jno
xchg
inc
jnp
xchg
in
les
lret
ljmp
adc
ficompl
xlat
shll
dec
stc
fmuls
jg
xlat
ja
cmp
fisubs
push
lods
jno
inc
mov
ret
xorb
pop
out
loope
imul
pop
ficompl
jbe
mov
inc
scas
xchg
fdivl
jmp
xorl
cmp
push
movb
fisubl
imul
mov
pushf
lretw
dec
xor
int
adc
ljmp
fdivrp
push
inc
sub
insb
xchg
sbb
mov
mov
cmp
iret
cs
enter
push
xchg
cmp
adc
pop
xchg
pop
out
rcrl
push
int
hlt
lock
lock
xchg
stc
fucomip
ja
jge
dec
push
xchg
or
cltd
adc
into
xor
dec
fmull
lea
inc
inc
aam
in
and
mov
add
mov
jnp
out
inc
cmp
push
inc
pop
sub
push
loop
icebp
mov
fs
adc
mov
cmp
fwait
or
sbb
push
dec
ds
pop
dec
mov
mov
pop
sub
fwait
mov
cld
orb
daa
test
lret
xor
jge
mov
arpl
push
or
dec
fldcw
adc
repnz
lahf
test
pop
mov
es
cmc
mov
sub
add
mov
cmc
xchg
mov
nop
and
in
js
pop
cmp
pop
or
andb
sub
inc
push
push
inc
adc
dec
std
ret
mov
fdivl
xor
inc
add
dec
sarb
out
cld
sbbl
add
out
mov
iret
sub
scas
pusha
cmp
push
dec
insb
stos
sub
dec
xor
out
aam
dec
data16
rorb
sbb
or
xor
dec
jp
adc
faddp
ret
rolb
push
xchg
xchg
jmp
imul
mov
or
outsl
dec
jns
arpl
push
jae
dec
or
mov
pop
xchg
jecxz
cmpsl
adc
cld
lret
stos
jae
shlb
pop
jg
push
pop
or
into
jne
jne
in
xlat
pop
movsb
sub
sub
and
mov
outsb
hlt
rcrb
test
and
scas
pop
cld
push
push
jle
std
push
lock
loopne
add
push
test
xchg
dec
fsts
push
loope
fwait
or
cltd
pop
arpl
lcall
stos
cwtl
call
xor
inc
cmp
movsl
mov
mov
pop
test
fimuls
mov
aaa
jnp
popa
mov
cli
and
loope
hlt
loope
push
mov
push
hlt
push
leave
jne
addl
or
xchg
enter
mov
ss
add
call
cwtl
adc
cltd
xchg
push
out
jecxz
mov
mov
pop
push
cld
push
arpl
mov
inc
sub
cwtl
das
dec
sub
sub
rorl
mov
pop
les
es
rcrb
addb
lods
dec
mov
addl
stc
scas
paddusw
test
xor
stc
clc
inc
jbe
mov
pusha
push
or
movsb
adc
in
outsb
add
mov
fdivl
filds
sarb
or
psrad
push
mov
ja
loopne
xchg
fldl
fldenv
leave
cmp
fisttpll
rorl
rcll
xchg
out
push
sbb
cmc
dec
call
dec
sub
in
sub
and
sti
loope
inc
sub
popf
mov
jb
cmpsl
inc
mov
imul
ret
outsb
repz
pop
jb
add
in
das
test
aad
fdivs
lds
dec
mov
xor
leave
or
sbb
pcmpeqw
push
je
pushf
out
sub
dec
xchg
insl
mov
or
stos
jns
iret
pop
fisttpll
and
mov
xor
popa
and
frstor
pop
jns
or
lods
insb
ret
pop
pop
ret
cmp
iret
shlb
mov
add
stos
mov
lcall
out
adc
loop
pusha
int
xchg
mov
and
fst
mov
push
cmc
les
shll
mov
repnz
push
push
imul
outsb
jnp
lock
cmpsb
jl
scas
inc
fucomip
xor
out
push
scas
jb
aaa
imul
rorb
xchg
pop
adc
into
in
pop
rclb
sub
mov
sbb
jo
decb
shr
jg
nop
in
imul
xchg
sub
js
cld
pushf
dec
loop
add
js
pop
inc
jae
push
lea
enter
ficomps
ret
sti
push
inc
dec
mov
ja
cmp
popf
enter
push
repz
push
incl
adc
fs
movsl
mov
out
fs
std
xlat
scas
mov
ret
pop
jg
enter
fnstsw
shl
sbbb
adcl
xor
pop
jno
repz
pop
push
sub
enter
xor
sub
iret
jae
test
cltd
std
rclb
in
shrb
xchg
pop
repnz
adc
clc
jb
xchg
mov
lret
je
fsubrl
mov
cmp
inc
jo
loopne
xchg
and
push
add
jo
xchg
icebp
xor
sub
outsb
rcll
movsl
divb
insb
inc
pop
cmpsl
or
and
lahf
jmp
out
mov
lods
imul
orl
dec
push
jno
aas
fidivs
xchg
subl
sub
mov
jecxz
adc
hlt
and
stos
sbb
ret
aad
insl
cmc
push
mov
or
cmp
add
decb
add
jne
push
stos
xor
into
add
cmp
jge
repz
mov
xor
sti
and
fists
cltd
ds
or
lret
orl
out
pop
push
lcall
cmp
sti
cmp
das
mov
inc
cli
mov
pop
icebp
test
cmp
mov
test
scas
jmp
aas
leave
pop
and
jno
cmp
or
out
ret
nop
jecxz
xchg
inc
pop
cwtl
sub
pushf
add
mov
cs
pop
imul
roll
adc
push
dec
flds
mov
push
mov
aas
xchg
add
cmp
xorl
insb
xchg
test
or
test
fs
mov
pop
hlt
xchg
adc
addr16
dec
mov
mov
sbb
push
cwtl
lods
add
lock
pop
adc
jae
sbb
aas
mov
ss
sbb
jp
inc
adc
iret
fidivrs
iret
out
scas
dec
icebp
loopne
mov
das
or
push
call
in
pusha
movsl
rcrb
das
popf
pop
lea
push
mov
lods
and
push
pushf
loope
or
jno
imul
or
cmp
paddw
cmp
inc
sub
pushf
or
cmp
mov
cmp
and
or
fiadds
loopne
lret
jbe
scas
mov
pop
pop
out
movsb
cmpl
ljmp
testl
pop
or
mov
sbb
cli
pushf
lret
inc
jl
and
loopne
jmp
sbb
adc
add
mov
cmp
xchg
sbb
aaa
mov
aaa
in
jae
fiaddl
mov
push
aas
pop
incb
lods
call
or
mov
out
enter
jp
lds
inc
rclb
pop
push
mov
push
fistps
adc
je
outsl
mov
fstp
ret
testb
in
dec
mov
pop
pop
add
dec
fistl
insb
push
xchg
insb
mov
gs
les
jmp
xchg
mov
jnp
cli
jno
and
stos
sub
sbb
aaa
stos
or
insb
loopne
insb
xchg
fcmovbe
in
push
setno
fisubrs
int3
ficompl
adc
repnz
cmp
jb
or
out
lret
clc
les
ret
mov
ret
mov
lret
cmc
pop
pop
push
pop
rcl
adc
xchg
xor
push
lcall
mov
repz
fdivs
pop
sub
sub
in
ret
jne
xchg
xchg
mov
sbb
into
cmc
cmp
lret
dec
jnp
in
dec
cwtl
add
nop
popa
pushf
lcall
push
pop
fldcw
jle
imul
adc
pop
jns
push
and
and
add
lret
jbe
mov
pop
notl
sti
outsl
and
add
loope
cli
fdivl
xchg
lret
lods
inc
xor
dec
cmp
aaa
aad
loopne
sub
xchg
xlat
pop
adc
je
xchg
push
lock
pop
int
push
imul
pusha
xchg
ret
rol
or
mov
push
mov
inc
pop
xor
das
mov
adc
lahf
mov
mov
jbe
and
gs
pop
dec
jb
lods
push
lret
sbbb
inc
int3
andb
outsb
dec
jbe
pop
xor
fwait
cltd
ja
or
xchg
rcrl
or
rcr
xor
push
jb
cli
rcll
mov
dec
mov
mov
test
mov
or
mov
adc
push
and
cmp
mov
mov
std
pop
imul
add
inc
jmp
adc
mov
fidivrl
sub
in
mov
nop
cmpsl
and
lea
iret
aad
lret
xbegin
lret
jae
xchg
add
cmp
adc
push
divl
xchg
outsl
jae
into
adc
mov
jg
mov
cmp
cmp
mov
inc
xchg
inc
mov
mov
insl
cld
call
push
inc
clc
outsb
pop
mov
cwtl
pushf
popa
popa
jle
push
cmp
cmp
cli
aad
les
mov
adc
ret
and
sti
inc
cmc
mov
stos
enter
movb
jo
jge
std
jle
push
push
push
push
movsl
sbb
inc
push
fnop
dec
pop
mov
mov
fbld
negb
push
pop
jge
insb
push
rorl
aas
sbb
ljmp
pop
and
std
xchg
inc
inc
cltd
mov
lret
jae
xchg
pop
push
jno
and
mov
jne
bound
push
cmp
push
add
mov
cmp
mov
inc
add
pop
stos
insl
mov
sbb
out
lcall
pusha
loope
sti
mov
xchg
and
in
int3
mov
mov
and
das
push
cs
xlat
mov
and
jp
jo
test
or
imul
xor
inc
int3
jge
xchg
xlat
jge
pop
imull
subb
movsl
xor
mov
cmp
lods
enter
mull
add
mov
idivb
in
push
mov
outsb
jmp
lret
pusha
repz
imul
lret
push
push
lahf
rclb
sbbb
and
push
jae
movsb
jecxz
push
test
cld
mov
adc
xor
mov
inc
sbb
xchg
jp
mov
adc
lods
fwait
push
pop
pusha
aam
push
mov
and
fsubs
daa
adc
test
jmp
imull
decb
and
pop
mov
movsb
and
ds
scas
push
push
mov
mov
cli
out
outsl
ljmp
subl
dec
mov
rcr
sbb
data16
js
bound
dec
inc
add
cmc
nop
mov
scas
sbb
xor
cld
push
lods
pop
pop
push
push
add
jl
xchg
mov
leave
sub
or
lods
imul
mov
xchg
and
into
sahf
or
insl
lods
sahf
xchg
imul
sti
mov
outsb
scas
or
xor
scas
in
jb
in
pop
add
dec
mov
cmpsl
sbb
loopne
xchg
cmc
sub
mov
adc
cmpsl
mov
aam
xor
mov
inc
lret
mov
sub
mov
gs
loopne
lods
push
or
int
or
out
orl
push
ret
and
enter
push
cmp
jl
ds
push
pusha
sub
std
subl
out
hlt
mov
repnz
mov
adc
ljmp
mov
dec
pop
sub
push
icebp
testb
fdivl
sbb
cmp
xchg
xchg
pop
dec
lcall
test
call
lret
mov
daa
stc
xchg
pusha
sub
iret
sbb
shr
inc
push
dec
pop
push
mov
int
mov
fldenv
and
fnstenv
cmp
aad
push
fwait
dec
lods
xor
pusha
inc
and
sub
mov
in
push
push
fsubrs
cmp
jecxz
and
in
cmpsb
xchg
pop
ja
stos
mov
lods
lock
dec
rcrl
mov
push
xchg
and
adc
or
mov
mov
mov
mov
int
popa
scas
push
aam
xor
out
or
lds
lret
fldcw
shll
jae
cltd
in
loop
data16
dec
mov
pop
std
dec
add
in
lret
inc
ret
lahf
add
mov
pop
js
mov
or
lahf
leave
lcall
ret
mov
sbb
mov
fs
or
or
or
jecxz
xchg
push
adc
call
or
xchg
je
add
icebp
enter
mov
adc
fsts
adc
and
sub
xchg
dec
andb
divl
ds
movsl
sub
inc
popa
and
mov
adc
mov
enter
jno
dec
push
push
sbb
sbb
push
push
in
insb
out
push
adc
or
xchg
mov
push
shll
mov
stc
cmp
ret
mov
addr16
pushf
xchg
jg
mov
and
incl
nop
mov
js
aaa
cmp
sbb
cli
loop
mov
shl
jb
fldenv
cmp
push
scas
add
repz
mov
push
pop
xchg
outsl
dec
les
into
orl
pushf
lods
jg
push
mov
and
lds
xorb
arpl
jbe
dec
pop
xor
push
xlat
popa
xchg
jno
addb
sti
xchg
clc
mov
test
ja
mov
xchg
sarl
mov
notb
and
test
or
fwait
xchg
dec
inc
adc
popl
inc
mov
add
fidivs
orl
and
movsb
jecxz
push
mov
or
imul
cmc
inc
rcrl
jne
daa
mov
stos
or
gs
pop
arpl
jb
aad
dec
data16
xor
int
dec
push
sti
fdivrs
dec
cmp
inc
int
cli
clc
jmp
aad
loopne
lock
out
les
out
add
xchg
ja
cld
daa
mov
and
outsb
push
inc
sbb
mov
pop
mov
mov
ds
xor
push
and
xlat
xor
leave
and
inc
dec
lods
xlat
scas
into
push
fstp
push
xchg
mov
pop
movsb
adc
lods
bound
fmulp
fs
mov
pop
dec
dec
dec
jge
jbe
stc
je
sub
adc
cmpsl
outsl
sbb
bound
sub
push
pop
jl
sub
or
test
jbe
sub
je
push
jle
stos
jg
and
fildll
lret
das
dec
pop
push
out
and
mov
cmp
insb
in
pop
mov
and
or
fstpt
sub
daa
rorb
out
testb
mov
mov
add
mov
out
out
pop
push
jne
push
outsb
leave
in
sub
ja
nop
sbb
int3
in
repnz
daa
outsl
mov
scas
pop
out
fimull
inc
pusha
test
fs
cs
imul
icebp
test
inc
cltd
and
lret
mov
fstps
cmpsb
cs
call
add
orb
xor
xchg
add
leave
jb
xchg
adcb
dec
inc
sbb
dec
ficoml
jmp
repnz
cwtl
aam
fadd
xchg
arpl
decl
adc
cltd
push
inc
jo
xor
ds
repnz
push
out
adc
int
je
sbb
mov
push
fldl
xor
mov
mov
ljmp
mov
adc
push
dec
mov
stc
pushf
xchg
push
xchg
adc
cs
in
dec
test
jge
jo
mov
jne
xor
xor
sbb
sbb
adc
int3
loope
adc
cmp
jno
xor
xor
xor
and
mov
mov
rclb
push
leave
cli
ds
lock
testl
ss
sbb
repnz
test
test
dec
mov
filds
pop
cmp
repnz
jmp
jg
mov
cmc
cmpsb
and
lds
test
pop
push
and
pop
imul
add
xor
rclb
jg
ret
ret
mov
push
mov
icebp
sbb
lret
call
adc
lock
repnz
push
rcl
add
pusha
scas
out
inc
out
mov
lods
je
rcrl
push
addl
repnz
sahf
or
lods
popa
pop
neg
add
xor
fisubl
shlb
in
xchg
sahf
and
add
ficompl
fnstsw
mov
mul
pop
pop
js
mov
popa
sbb
xchg
in
aaa
adc
outsl
dec
push
movsl
clc
cmp
hlt
sbb
arpl
cmp
cmpb
in
add
pop
add
mov
inc
push
jns
out
push
sbb
nop
inc
dec
test
inc
test
xchg
or
lret
xor
ja
xor
aaa
es
fs
jge
cmp
cmp
adc
sbb
sub
jo
mov
jb
lahf
fdivrs
dec
add
lret
in
aad
xchg
lret
pop
cmp
in
sbb
cmp
jo
loope
shrl
cli
daa
or
mov
mulb
stc
mov
int
or
lods
jecxz
jmp
jb
ret
mov
fsubrs
ror
xchg
test
inc
ds
xchg
sahf
or
sahf
sub
in
sub
xor
ds
pop
jnp
mov
test
mov
inc
popf
jb
xchg
or
scas
sub
adc
insl
sbb
inc
jne
xchg
jb
icebp
lahf
scas
je
xor
insl
xchg
je
test
pop
lret
fs
dec
xchg
inc
repz
test
push
adc
lea
adc
outsb
xor
cmp
or
stos
incl
jle
mov
dec
sbb
les
shll
mov
and
ret
mov
shrb
xchg
mov
je
xchg
fisubs
lcall
mov
add
roll
addb
aam
fwait
jo
ss
add
or
jbe
push
jo
aas
and
sbb
xchg
scas
push
push
and
fstl
cld
lret
mov
inc
inc
mov
mov
lods
mov
push
dec
add
xchg
mov
stos
sahf
cld
dec
mov
pop
movb
push
mov
xor
mov
xchg
pop
loop
lods
pushf
mov
out
rcll
sbb
daa
scas
fstpt
mul
aad
dec
je
in
jae,pn
sarb
mov
and
stos
and
cwtl
sbb
inc
pop
jb
out
into
loopne
xor
call
enter
in
rclb
insb
inc
sub
shlb
mov
add
imul
xor
pop
or
arpl
xor
pusha
jbe
jmp
dec
cmp
push
std
mov
fildl
jno
movb
adc
push
inc
mov
jae
iret
stc
sahf
jb
imul
mov
loop
cmp
xchg
push
push
andb
xor
bnd
mov
or
xchg
xchg
dec
or
call
dec
pusha
lods
test
pop
dec
lds
mov
jg
and
subl
xchg
fstps
dec
pop
mov
jmp
xchg
mov
ret
pop
test
das
movsl
stos
es
inc
out
inc
pop
jl
pop
fstpt
mov
push
out
shll
mov
cmp
cmp
jns
pushf
push
movsb
lcall
sbb
icebp
xor
inc
or
test
loope
test
inc
dec
movsb
shrb
into
repz
jge
pop
fidivrs
lock
leave
cmp
adc
dec
dec
nop
dec
jno
sub
jns
add
loopne
sbb
test
ja
mov
xchg
stos
es
add
out
lret
add
sbb
aam
psubq
cltd
jg
rcrl
mov
and
mov
jge
mov
add
pop
adcl
mov
cmp
dec
adc
ret
imul
dec
cmp
lahf
ljmp
mov
xchg
pop
cmp
pop
xchg
inc
pop
xchg
inc
lcall
add
push
ja
incl
xchg
std
test
cs
cmp
mov
fcomp
nop
cld
test
xchg
xor
mov
push
xor
cmc
mov
rclb
aaa
cmc
mov
mov
ret
mov
gs
fs
idivl
mov
inc
mov
dec
pop
jno
stos
mov
ds
adc
cmpsb
cmc
add
pop
jns
clc
push
and
xchg
mov
ret
add
es
inc
dec
fiaddl
mov
or
xchg
or
jmp
jl
out
xchg
mov
cwtl
jmp
and
and
mov
jmp
insb
mov
inc
push
push
sbb
xchg
mov
xor
cmp
push
jecxz
push
pop
mov
jmp
sub
mov
orl
nop
fwait
outsl
lret
cwtl
cld
xchg
xchg
add
imul
das
aam
pop
shr
jno
add
mov
xchg
movsb
add
dec
call
mov
stc
jmp
jo
mov
xchg
ljmp
ss
push
xchg
enter
add
adcb
pushl
test
test
in
stc
dec
jmp
shlb
arpl
pop
push
xchg
pushf
mov
add
mov
jns
insl
inc
pop
xor
and
jns
xchg
or
addr16
add
sahf
arpl
pop
ror
inc
mov
stos
inc
adc
inc
push
ficoml
cli
call
jp
mov
shrl
adc
jb
arpl
fsubrl
inc
inc
mov
not
inc
rcr
fsubrl
pop
jl
out
test
enter
outsl
pop
jp
sub
cmp
adc
movsb
sub
push
xchg
cwtl
lret
and
setge
xor
xchg
in
dec
pop
push
pop
test
inc
mov
and
lds
scas
or
add
mov
and
inc
dec
lods
mov
iret
lds
call
leave
mov
sbb
daa
dec
ret
sub
mov
ljmp
rcll
jg
jb
lods
inc
fsub
cli
jmp
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
dec
lahf
cld
mov
cmp
insl
xor
inc
out
ret
add
jl
mov
ret
add
push
jno
scas
mov
ljmp
add
add
sub
fcoml
pop
imul
mov
je
stc
dec
js
push
scas
mov
cmpsb
xchg
dec
in
cmc
fnstsw
pop
inc
mov
pusha
or
ja
test
or
mov
mov
cmp
lret
mov
xor
jmp
dec
xchg
leave
push
jbe
jbe
shll
imulb
and
pusha
mov
push
inc
push
sbb
xlat
mov
mov
mov
jno
push
xlat
push
and
cs
inc
pop
dec
xchg
stos
jge
jmp
xor
mov
lret
ficompl
jmp
bound
push
and
je
mov
jns
add
fistl
and
sub
mov
popa
lods
cmpsl
mov
pushl
mov
into
and
mov
xorb
call
pop
lock
jmp
lcall
mov
addr16
loopne
fmul
jmp
cwtl
add
mov
ljmp
jbe
add
add
mov
aaa
push
mov
push
fidivs
ret
rorb
or
jb
and
mov
in
out
push
mov
cmp
xchg
sub
adc
outsl
aad
fldt
pop
sub
xchg
pop
clc
adc
and
or
dec
sub
cmp
pushf
scas
add
lds
loop
lret
cmpsb
test
cmpsl
rolb
mov
cltd
add
dec
mov
rclb
lcall
xlat
inc
xor
iret
mov
cmc
jle
pop
lods
cli
cmp
xchg
sbb
jle
lret
mov
je
mov
repnz
cli
jge
cmc
inc
pushf
push
js
pop
stos
and
mov
push
in
xor
fstpt
push
mov
sbb
fs
mov
add
ss
adc
and
ds
and
dec
popa
cmp
ss
int
push
cmpsl
dec
loop
inc
test
xor
icebp
jg
adc
or
je
lock
decb
jmp
cmp
loope
outsl
loopne
jno
cmp
pop
sti
leave
lock
imulb
pop
inc
mov
in
les
je
dec
mov
vmovdqu32
rcll
outsl
or
insb
lea
jae
push
idiv
ds
sub
out
push
cld
cmp
cmpsl
push
push
mov
jne
jp
pushf
dec
ds
mov
dec
add
or
dec
pop
jmp
stos
xchg
jne
or
jge
sub
out
lock
add
jecxz
stc
shll
and
add
xor
jmp
push
xchg
sti
popa
pushf
xchg
int3
or
lahf
mov
testb
sbb
nop
sub
loopne
add
int
sarl
or
or
daa
outsb
adc
call
rcrb
in
fistpl
xlat
mov
loope
das
mov
iret
pop
mov
test
das
lock
and
fwait
xor
mov
jnp
test
je
xor
test
sub
xor
arpl
mov
push
jae
lock
mov
iret
jmp
and
and
out
incl
push
test
out
inc
cmp
out
inc
outsl
cmp
addr16
mov
bound
lret
iret
xchg
mov
cli
or
out
sbb
inc
sbb
fs
cli
hlt
repnz
inc
pop
pop
jo
movb
loopne
pop
out
addr16
xor
bound
add
out
or
out
dec
sti
push
test
test
sahf
xchg
or
mov
aas
xlat
pop
adc
shl
xchg
test
dec
cmp
insl
push
cmp
jnp
xchg
enter
jo
mov
out
xor
lods
xchg
mov
push
scas
mov
xor
xchg
mov
jno
sbbl
test
imul
dec
sbb
rcll
fstps
jne
subb
jnp
push
sub
xchg
dec
and
mov
xchg
daa
je
cmc
dec
adc
cmp
out
push
ss
loope
push
into
inc
xor
and
add
and
pushf
pop
sub
test
jnp
sbb
ja
pusha
imul
insl
je
push
xor
inc
jl
pushl
push
cld
push
fstp
lcall
in
cwtl
cmpsl
ret
sbb
je
push
jo
shlb
dec
dec
dec
jb
push
mov
out
inc
jmp
jb
xor
fsubrl
and
shlb
jae
sub
jno
xchg
dec
enter
rclb
xlat
xchg
and
push
clc
mov
std
into
fidivrl
loop
cmp
jl
loope
insl
loopne
pushf
outsl
push
dec
lret
jo
ja
cmpsb
jae
adc
or
add
sub
lea
adc
mov
xlat
sub
cwtl
sbb
test
dec
adc
in
out
repnz
pop
push
dec
stos
sbb
push
sbb
jp
sub
xlat
push
inc
push
jb
fwait
cltd
in
sbb
movsl
push
ljmp
cmp
dec
jp
or
imul
test
and
imul
outsb
cmp
ret
inc
jno
ljmp
and
dec
loopne
sbb
mov
fisubs
jb
andb
clc
out
in
mov
fidivrl
xchg
std
mov
hlt
mov
hlt
mov
lret
lock
insl
aam
push
sti
mov
inc
subb
mov
imul
cmc
mov
and
nop
mov
pop
shr
cmpsl
mov
dec
hlt
xor
in
add
push
daa
add
dec
or
cmp
jle
bswap
dec
call
push
xor
mov
mov
xchg
insb
inc
shll
mov
dec
insl
mov
mulb
sub
repz
xor
std
aas
sub
stc
ds
dec
add
or
fwait
stos
pop
movsl
outsl
shrb
lcall
add
fdivp
lea
outsb
fidivrl
repnz
lods
jno
dec
insl
mov
inc
inc
mov
add
jge
fiadds
mov
push
mov
push
cmpsl
stos
jg
jge
sbb
sbb
adc
cs
jmp
and
dec
xchg
call
lods
sbb
inc
xchg
cwtl
mov
mov
dec
sub
stc
test
mov
lods
sbb
mov
sub
adc
insl
ret
das
mov
popa
and
dec
xchg
add
pop
into
push
push
xor
int3
inc
and
sub
inc
mov
clc
repnz
test
sbb
mov
ret
xor
sub
frstor
pushl
push
mov
sub
cwtl
fmul
stc
xor
pop
lods
mull
xchg
popa
and
adc
push
pop
rcr
nop
repnz
mov
movsl
arpl
ss
jae
jns
movsb
lret
jb
imull
pusha
push
xor
jb
stos
lcall
mov
cmpsb
icebp
loopne
adcb
and
lahf
dec
inc
jae
sbb
pop
mov
push
fcmovnu
jl
dec
iret
xchg
imul
pop
cs
push
cmp
test
popa
jl
jbe
movsb
imul
cld
add
cwtl
outsb
fdecstp
hlt
into
and
fstl
mov
jno
mov
lods
jo
lahf
fdivs
arpl
dec
or
insb
test
fwait
enter
jns
in
xor
sub
xchg
inc
in
out
or
pushf
lret
ljmp
sub
mov
add
and
pop
fiaddl
in
add
stos
xor
repnz
jecxz
cmp
lahf
jl
call
sbb
repz
lret
mov
cmp
lret
mov
mov
insl
aad
push
inc
cmpb
es
sbb
and
fidivs
push
xlat
enter
mov
sbb
sti
fistl
and
dec
sbb
flds
int3
mov
dec
ja
lock
and
jl
call
std
inc
scas
insb
push
sbb
jecxz
mov
sti
in
mov
dec
es
imul
inc
pop
lods
sub
mov
mov
test
adc
jo
or
mov
int
jo
pop
repz
mov
popf
lods
sbb
or
or
roll
lret
mov
neg
sbb
adc
fsubs
shrb
and
xchg
js
ljmp
jns
and
jno
jmp
cwtl
dec
mov
aaa
aam
mov
nop
aam
pop
sub
push
mov
arpl
cmp
outsb
fcmove
ret
shlb
or
sub
and
sbb
inc
lret
daa
sub
stc
loopne
lret
test
lods
lea
std
je
loop
mov
adc
movsl
push
ret
and
mov
fadd
pop
rcll
cmpsb
xor
pop
sbb
cmpsb
call
pop
out
test
jge
mov
loope
sbb
pop
shr
or
test
ljmp
loope
lahf
popf
daa
xor
rcrl
js
xchg
cmpsb
cmp
dec
stos
jp
pop
push
fwait
bound
cmpb
xchg
push
sub
pop
cld
iret
dec
adc
ret
mov
cs
dec
adc
loope
xlat
jmp
jge
fst
add
daa
test
push
rolb
inc
lods
push
inc
dec
sarb
dec
stos
es
or
cmp
mov
test
popf
pop
xchg
int
pop
sbb
ss
adc
mov
mov
inc
mov
push
push
dec
xor
ja
cmpsl
xlat
ficomps
dec
mov
sarb
imul
and
xor
mov
inc
lahf
mov
sbb
push
mov
pop
outsl
or
cmp
inc
popa
and
mov
inc
pushf
fdivl
aam
xor
sbb
call
xchg
loopne
test
movsb
scas
mov
mov
ret
pop
divl
and
mov
nop
dec
pusha
add
mov
sub
fists
jp
ljmp
jb
push
push
push
lcall
inc
dec
push
cli
ror
xor
mov
ljmp
cmp
mov
pop
sbb
jecxz
repnz
mov
ja
add
and
lret
in
jle
call
xchg
mov
cmp
jmp
in
push
sbb
and
das
xchg
cmp
movsb
cs
sub
test
shll
mov
push
shlb
enter
pushf
sub
cwtl
sbb
movsb
sub
out
jo
push
adc
jg
jno
lods
and
fisttpll
in
mov
lods
lret
add
and
mov
cmp
popa
push
dec
sub
enter
adc
pop
inc
sar
ds
rcr
dec
inc
cwtl
jo
stc
pop
jmp
xchg
mov
imul
jecxz
jecxz
scas
and
into
idiv
jg
jl
sub
cmp
and
add
ja
push
out
fnsave
jo
adc
sbb
and
mov
test
or
mov
fs
mov
sti
std
test
ds
mov
outsl
inc
fistps
mov
test
inc
pop
arpl
scas
idivb
out
mov
cmp
hlt
push
mov
test
jge
leave
sbb
xchg
mov
dec
fcmovnu
pop
movsl
xor
mov
test
rolb
faddp
into
jmp
shr
cmp
pop
shll
test
add
mov
pop
mov
xlat
int
xchg
mov
out
jns
insb
notl
push
xchg
imul
sbb
or
loope
mov
test
adc
xor
xchg
mov
mov
mov
movsb
int
out
cmp
insl
rcrb
dec
inc
inc
fldpi
bound
ret
fisubl
in
mov
inc
and
xchg
mov
cmpsl
add
xlat
and
jmp
repz
lret
sub
in
nop
imul
icebp
or
adc
test
cmpsl
gs
pop
mov
add
jp
daa
int3
jnp
mov
xchg
int
mov
mov
inc
adc
int3
add
bound
inc
addr16
rorb
fs
xor
add
je
jo
movb
inc
test
mov
xor
in
setg
icebp
fbld
pop
xchg
lcall
jmp
mov
mov
fwait
inc
adc
and
in
ljmp
ret
xchg
adc
out
cmp
in
jb
add
fidivs
push
jnp,pt
out
mov
repz
fisttps
std
out
insl
push
pop
loope
in
xor
xor
popa
mov
mov
xchg
ljmp
mov
aas
xor
ss
mov
imul
mov
lds
rclb
stc
sub
sahf
insb
lock
mov
sub
lods
mov
mov
scas
psraw
pop
inc
jle
mov
jbe
mov
je
movsl
bound
lret
jmp
and
push
sub
jne
and
outsb
clc
sahf
shrl
enter
lret
mov
shr
mov
jno
jp
mov
lret
and
rorl
jmp
pop
aam
popf
adc
sub
xor
lods
push
jecxz
fs
sbb
movsl
lret
xor
fiadds
das
sub
ljmp
imul
mov
pop
pop
mov
scas
sar
ror
bnd
mov
cmpsb
xchg
pop
inc
dec
mov
daa
jb
lea
int
punpcklbw
clc
mov
or
ss
scas
aam
fcomip
sub
aas
in
or
or
pop
enter
sub
mov
jo
repz
and
in
push
and
mov
xchg
repz
sbb
cmp
jo
repnz
rolb
lods
jnp
mov
outsb
shlb
out
xor
sbb
jae
add
divb
movsl
std
push
fldt
int3
or
add
jo
xor
daa
or
pop
pop
push
and
pop
pop
lock
dec
int3
cmp
movsb
jp
outsb
dec
fwait
aad
jne
push
lock
dec
stos
mov
jb
push
add
ret
or
push
nop
push
xor
mov
inc
mov
lret
into
ja
pop
imul
or
leave
mov
inc
or
mov
mov
sbb
xchg
mov
hlt
inc
out
les
sahf
xor
jg
xorb
mov
in
outsb
cmp
add
cmp
adc
popa
cmp
lahf
or
leave
mov
dec
stos
hlt
mov
adc
push
mov
in
leave
es
mov
andl
das
jo
mov
push
sarl
xor
je
jb
dec
or
push
add
cmpsb
push
dec
shll
out
sub
mov
scas
dec
xchg
fs
jecxz
dec
je
insb
sub
sahf
inc
mov
cs
mov
adc
add
std
jge
xlat
pop
outsb
loop
outsb
lcall
jnp
lcall
push
adc
pusha
adc
aaa
movsb
and
int3
add
movd
pop
sbb
hlt
lds
mov
ja
sbb
out
je
xchg
lahf
bound
xchg
std
or
xor
sbb
fcmovnu
adc
in
ds
xor
inc
or
mov
lcall
cli
dec
xor
sub
add
dec
call
xlat
test
testl
shr
jb
jecxz
je
adc
out
push
je
dec
xchg
jo
pop
cld
ljmp
pushl
xchg
ffree
vrcpss
jb
sub
push
jge
add
iret
das
sbb
call
or
jne
js
sub
and
mov
out
sub
test
cmp
mov
fdivl
mov
jg
mov
push
mov
fmulp
test
fists
dec
or
mov
or
inc
xchg
and
adc
or
mov
mov
sub
pusha
cs
sbb
mov
hlt
cs
push
aaa
jge
xor
lret
mov
stc
movsb
das
cli
sbb
xchg
cmp
cmpl
movsb
rol
xlat
mov
fsubp
cs
shlb
out
push
test
insb
jbe
sub
or
mov
ds
bnd
sbb
add
jne
dec
pop
xchg
sbb
add
imul
movsl
out
repz
xchg
jne
jg
xor
clc
dec
movsb
mov
add
jnp
loope
mov
cmp
repnz
div
xchg
or
xor
shlb
jle
mov
imul
js
jge
ss
outsl
je
cmp
xchg
fisttpl
add
push
clc
movsb
add
fidivrl
test
dec
xchg
xor
pop
outsl
pop
cmpb
push
pop
dec
push
adc
xor
arpl
int
scas
fwait
test
mov
cwtl
mov
ret
push
leave
fadd
cltd
lret
cs
mov
mov
inc
pusha
stc
xchg
into
popa
cmp
cmp
add
sbb
fldl
call
testb
and
mov
andl
sub
lods
cli
push
push
cmp
ret
inc
or
add
cltd
xchg
or
mov
and
ljmp
cmp
inc
xor
sqrtps
and
insb
add
int
fnstcw
and
dec
stos
pop
ffreep
or
mov
clc
ja
outsl
xor
or
add
and
rclb
enter
cmp
xor
in
imul
mov
add
imul
sbb
hlt
jl
xor
xchg
sbb
int3
mov
in
jmp
jge
aaa
dec
xchg
pop
sub
leave
lahf
aas
in
mov
test
jne
mov
aas
mov
jmp
stos
pop
sbb
into
test
loopne
cmp
das
xor
cli
ljmp
add
int
fldcw
xchg
les
aam
mov
cmpsb
sub
pop
lret
lods
lods
xchg
cmp
das
ja
dec
add
icebp
sbb
xchg
dec
movsl
lcall
mov
push
ret
enter
in
cltd
push
movsl
lret
pop
fmull
fwait
xchg
mov
in
popa
pop
or
xchg
sbb
mov
mov
ss
loop
insl
data16
xlat
into
inc
orb
cmp
sub
aaa
mov
fsubl
lods
fidivl
jmp
jecxz
push
test
aas
push
sbb
outsb
or
or
ljmp
test
shll
mov
sbb
fbstp
imul
pop
and
inc
test
mov
repz
sbb
push
fdivrs
cmp
negb
mov
xchg
xlat
popa
sub
popa
sbb
push
jle
iret
xchg
jmp
mov
sbb
xchg
ret
aas
or
push
testb
jecxz
addr16
xor
mov
lret
ret
xlat
dec
in
leave
fsubl
fnstsw
out
jp
cld
nop
or
add
fs
sbbl
cmp
mov
mov
mov
stc
dec
jne
push
lods
mov
arpl
lea
popa
test
nop
or
dec
popa
adc
adc
imul
repnz
hlt
ja
push
leave
xchg
in
dec
and
mov
sub
fs
adc
call
and
push
pop
movsl
mov
es
rcll
xchg
push
sub
sub
push
lock
lock
rep
mov
inc
inc
test
in
push
popl
stos
daa
add
pusha
add
sahf
nop
arpl
in
sub
jl
sbb
mov
jnp
js
pop
sti
cmp
pop
adc
mov
mov
inc
dec
push
rep
mov
jmp
xor
adc
push
fdivr
jecxz
push
xchg
pusha
ljmp
jb
fldt
jno
outsb
sub
cltd
xor
ret
mov
jle
mov
sbb
mov
and
mov
pop
imul
test
cli
push
mov
outsb
cld
fisubl
push
xchg
in
fdivr
addr16
out
push
xchg
and
test
mov
pop
std
fldenv
add
dec
jmp
mov
and
arpl
lods
mov
sbb
shrb
or
sbb
inc
xor
cmp
scas
inc
mov
dec
sti
add
dec
mov
inc
mov
popa
jg
mov
addl
dec
repnz
jo
jg
in
dec
inc
lods
or
or
mov
insb
add
sub
out
imulb
std
pop
popa
push
aaa
adc
cmp
push
fdivs
xor
ss
or
xchg
fwait
cmp
mov
and
nop
leave
or
mov
ret
pop
leave
xchg
aas
or
ja
push
ss
clc
pop
inc
clc
leave
mov
pop
jmp
add
xor
pop
sarb
outsl
cmp
int3
fdivl
test
and
mov
fdivs
add
dec
xor
inc
out
dec
or
inc
push
das
mov
gs
imul
aad
stc
sub
arpl
ss
sbb
cmp
repnz
addr16
loopne
lret
adc
push
out
icebp
mov
push
hlt
pop
push
aam
push
push
sub
cmp
adc
ficompl
dec
in
and
mov
or
inc
pop
fcmove
fistl
push
arpl
push
pop
add
ja
mov
dec
lods
imul
cld
and
int
fucomip
cmp
fdivrp
jl
xor
loopne
mov
pop
xor
arpl
mov
cs
stos
scas
arpl
loope
andb
out
lea
mov
and
outsb
inc
cli
mov
jge
insl
mov
jg
subb
lock
es
inc
and
pop
lods
inc
xor
rcl
loop
pop
addl
pop
in
test
and
pushf
cmc
enter
mov
sub
fsubrp
sbb
cltd
pop
in
push
subl
aas
mov
xchg
jecxz
popa
stos
gs
fildl
xor
call
int3
aam
mov
test
jbe
push
icebp
lods
pop
mov
dec
xor
jo
dec
lods
fsubr
psubusb
pop
pop
dec
incb
cld
daa
shrl
or
add
push
lcall
and
mov
xchg
popa
mov
enter
xchg
xchg
jbe
dec
pop
xchg
js
and
pop
mov
das
and
sbb
push
or
push
cmpsl
sub
pop
sbb
push
leave
aas
and
pop
inc
out
mov
test
test
dec
stos
std
cmp
fnsave
jns
adc
mov
in
and
add
dec
pushf
pop
pop
mov
insb
imul
lcall
jle
mov
mov
dec
sti
xchg
jp
std
xlat
shl
mov
and
mov
mov
sub
loopne
mov
or
adc
lret
pop
fwait
movsb
in
mov
pusha
iret
out
lret
mov
divl
dec
dec
movsb
dec
inc
xchg
xor
or
pop
mov
in
mov
jecxz
and
and
push
sbb
sahf
stos
sbb
fs
icebp
inc
shrb
mov
xor
push
xor
hlt
mov
ret
xor
cli
fdivrl
imul
push
jle
xlat
movsb
insb
and
popl
cli
lods
fimull
xchg
and
jb
jb
push
jp
pop
inc
dec
nop
jns
sbb
mov
popf
into
lds
mov
ja
roll
stos
sahf
xor
xchg
testl
js
test
cs
jmp
scas
cmc
sahf
inc
and
icebp
rorb
xor
jne
pop
mov
clc
adc
dec
xor
in
cwtl
pop
adc
push
movsb
and
push
and
repz
jbe
sbb
rolb
pushf
mov
sub
outsl
scas
idivb
pusha
movsb
push
inc
leave
sub
aam
or
inc
and
popf
sub
inc
lret
push
sub
jnp
xor
xorb
sbb
arpl
xchg
cld
mov
sbb
push
andb
lods
xchg
ret
lahf
mov
test
in
mov
cmp
pop
ljmp
mov
jno
das
shll
fldt
cmp
pop
push
sub
jno
lahf
push
mov
testl
add
pop
mov
inc
mov
push
xchg
pop
filds
pop
mov
sub
aad
cmp
adc
imul
pop
outsb
mov
les
jg
ja
cmpsl
adc
fadds
fildll
negb
js
cmp
jo
mov
into
data16
popa
subl
push
sub
cld
xor
push
mov
jp
ja
and
and
adc
add
dec
and
in
push
push
push
aam
inc
add
jle
clc
add
jp
push
outsl
mov
cmc
cs
mov
adc
ja
rcll
xor
jecxz
xor
divl
outsl
dec
fsubrs
imul
sbb
in
pop
mov
or
cli
loope
loopne
jecxz
cmpsb
jne
mov
ficoms
repnz
movsl
dec
adc
xlat
cmp
jmp
into
adc
enter
cld
jns
into
xchg
icebp
sbb
sti
sbb
sub
ficomps
std
sarb
push
mov
jns
mov
ret
add
loopne
in
sbb
pop
aaa
mov
lods
push
int
test
xor
ss
adc
decl
cmp
push
rorl
sti
cmp
or
bswap
mov
sti
int
pop
rol
loope
add
pop
lds
dec
push
das
pop
adc
rcll
dec
adc
and
je
pushf
mov
sbb
sbb
push
xchg
cmpsb
inc
jae
loopne
dec
mov
fisubs
xor
out
aas
aaa
les
jecxz
xchg
sbb
sbb
outsl
clc
ljmp
imul
in
mov
ficoms
add
sbb
add
push
sbb
ss
movsl
cmpsb
out
int3
sub
sahf
pop
in
test
mov
sbb
lods
movsl
jmp
mov
mov
jle
fcmovu
adc
push
loope
mov
mov
call
es
cld
sub
pop
pop
cli
cmp
sub
push
cltd
lods
call
ret
pusha
fcmove
pusha
fstpt
and
xchg
into
push
mov
outsl
mov
xchg
movsb
pop
xor
mov
push
jae
mov
test
popf
jmp
test
mov
push
shll
jae
mov
aas
lods
ret
jle
push
cmc
or
repnz
rorb
xor
sub
gs
mov
jl
movsb
hlt
and
scas
daa
out
xchg
outsl
inc
adc
mov
mov
fisubrl
aas
adc
lcall
or
push
mov
rclb
pop
fisubs
cmp
jp
mov
or
in
dec
sbbb
push
push
mov
ror
adc
and
test
jg
lcall
jecxz
adc
mov
leave
jae
jb,pt
cmp
mov
mov
imul
sub
jae
in
push
hlt
sti
loope
nop
js
push
int
jae
pop
dec
shrb
xor
push
mov
mov
mov
stos
xchg
sub
in
rorl
out
fwait
jg
cmc
testl
insb
test
rorl
adc
sbb
dec
add
adc
test
ret
sbb
test
sbb
lods
adc
test
cmp
lods
adc
or
pop
fwait
inc
add
lods
lods
js,pt
dec
pop
pop
cwtl
jg
test
aas
push
call
adc
out
pusha
mov
jns
sub
push
pop
ljmp
xor
clc
js,pn
shrl
js
inc
jbe,pt
je
add
out
sbb
leave
dec
out
sbb
push
ljmp
sub
inc
mov
or
pop
jp
or
fldenv
push
pop
mov
ljmp
std
je
loopne
xor
out
or
outsb
pusha
aaa
flds
sub
insb
scas
inc
sub
test
xlat
stc
test
sbb
xchg
mov
mov
decl
lds
jo
iret
cmp
scas
jl
mov
stc
loope
or
cmp
push
imul
stos
adcb
out
sbb
lahf
and
xchg
push
xchg
lds
mov
in
pop
cmp
adc
xorb
mov
out
mov
push
xor
dec
cmc
loop
jle
fwait
push
push
test
fs
pop
sete
pop
das
ja,pn
inc
cmp
pop
out
mov
ljmp
add
int3
aad
sbb
sbb
jbe
cmpb
stc
xor
jnp
xor
ljmp
fistpll
mov
stc
mov
sub
lret
sub
std
bound
adc
pusha
mov
jmp
psubq
shll
jge
mov
jecxz
pop
xchg
sbbl
push
bound
cs
nop
dec
rcll
into
daa
jns
dec
sbb
movsl
push
inc
mov
movsb
lcall
pop
addr16
xor
push
es
mov
dec
roll
xchg
daa
les
push
push
and
or
inc
cmp
aam
jae
inc
inc
adc
or
insl
mov
and
dec
cmpsl
std
test
xchg
and
inc
add
cwtl
jmp
and
lds
xchg
push
les
fnstsw
sub
cmp
outsb
push
lcall
pushw
jb
divl
xchg
sub
mov
test
xlat
or
push
pop
sarl
frstor
pusha
hlt
dec
frstor
and
cld
pop
mov
inc
sbb
cmp
or
mov
daa
js
in
xchg
xor
imul
dec
inc
inc
cmpl
cmp
stc
hlt
ficomps
mov
fwait
push
aam
jecxz
repz
push
lds
mov
jp
inc
add
xchg
dec
pop
push
jne
lret
mov
stos
mov
fisubs
mov
mov
jp
js
sti
jp
insb
fwait
sub
sub
mov
push
in
cmp
add
mov
mov
stc
shll
jle
sbb
outsl
imul
dec
stc
decb
je
sbb
std
xor
add
push
push
lods
xchg
sub
add
mov
mov
cmp
andl
ret
sub
fisttpl
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
daa
pop
xor
out
jp
push
xchg
imul
xchg
or
or
push
loop
xchg
or
rolb
lds
xchg
push
mov
adc
inc
stc
andl
cwtl
ret
or
cwtl
jno
pop
sbb
in
mov
lea
xor
xlat
mov
fwait
xchg
sbb
mov
adc
jge
insb
mov
cmp
jmp
lcall
adc
jae
add
inc
cs
icebp
xor
test
aas
std
std
mov
and
int3
roll
sbb
xor
xchg
mov
mov
insb
pop
sub
add
push
outsb
xor
mov
movsl
xchg
outsb
xor
push
std
scas
fucom
push
arpl
into
xor
push
push
out
push
mov
outsb
push
push
insl
add
enter
jl
ljmp
push
fsubs
add
push
and
cmp
out
jns
or
inc
jle
sub
popa
push
mov
jb,pt
mov
cmpsl
jb
mov
cltd
fdivs
out
imul
and
sti
cmp
pop
lcallw
or
and
and
xor
push
int
pop
fbld
outsb
inc
int3
inc
cmc
sarb
sti
mov
mov
mov
dec
outsb
out
or
inc
sub
cmpb
dec
cmp
sbb
or
cmp
jecxz
arpl
jl
popa
aam
or
push
adc
mov
add
adc
dec
inc
adc
cltd
movsl
andb
ljmp
stos
push
mov
mov
sbb
xchg
fdivrl
push
and
aas
int3
inc
std
in
stos
in
aas
jle
fcmove
adc
stos
or
ror
xchg
aad
push
into
pusha
fistl
cli
test
cmp
xor
add
std
fs
jne
popf
adc
and
mov
jle
cmp
popa
ret
inc
imul
icebp
cltd
leave
inc
movsl
pop
fldt
into
xor
add
ret
add
in
rcl
sbb
divb
call
xor
inc
adc
fdivrs
mov
mov
mov
cli
rclb
dec
cli
mov
inc
iret
int
xchg
lahf
fists
inc
stc
lcall
inc
out
mov
cltd
lock
shlb
add
test
pop
mov
insb
daa
sbb
mov
pushf
ja
xchg
mov
xor
out
divl
aad
call
adc
sti
aad
dec
jns
mov
pop
dec
pop
imul
mov
add
outsb
faddl
mov
pop
dec
cmp
xchg
cmp
js
mov
lock
xchg
es
mov
pop
lret
out
movsl
xchg
lahf
rcrb
lock
and
popf
dec
inc
pop
ret
loope
int
add
fs
and
std
daa
mov
dec
lea
mov
rcpps
js
pop
xchg
inc
les
inc
mov
xchg
push
stc
outsl
je
bound
out
cmpb
scas
cmp
add
mov
ret
jnp
push
pop
neg
mov
in
repnz
loope
push
ficoms
rolb
inc
js
imul
daa
or
int3
sbb
hlt
stos
dec
jne
jbe
popf
sbb
adc
scas
mov
push
xchg
lods
push
and
xor
jge
lods
out
js
aaa
and
dec
or
or
adc
pop
jbe
jge
stos
mov
mov
sub
xchg
lds
sbb
cld
xchg
sbbb
sbbl
xor
and
pop
dec
pushf
jb
jb
cmovae
frstor
push
mov
aam
xchg
in
scas
xor
xchg
xlat
ss
ljmp
insb
imul
inc
dec
pop
push
push
dec
mov
js
movsb
test
enter
int
imul
cmp
sbb
pop
mov
cmpsb
in
xchg
xchg
push
cmp
mov
pop
pop
movsl
jle
mov
mov
sbb
mov
add
cmpsl
test
sub
or
xor
jecxz
mov
push
clc
rorl
dec
sti
push
int3
adc
je
popf
xchg
gs
orb
fwait
sbb
test
pop
addr16
mov
dec
and
rorl
stc
mov
nop
add
pushf
cmpsb
inc
js
lods
iret
sarb
inc
cli
fsubr
mov
cmp
mov
test
dec
cmp
call
insb
stc
fcmovne
push
std
jbe
insl
mov
ljmp
test
rorl
sbb
mov
ret
cmpsb
mov
jne
sti
xchg
dec
add
je
jns
mov
jg
xchg
or
pop
fldl
aam
xor
dec
dec
adc
xor
loopne
ss
jp
xor
and
lret
xor
sub
lea
cltd
or
dec
xor
cmp
or
addb
xchg
dec
mov
adcb
mov
xchg
push
in
jne
xchg
ss
sub
jg
sub
fs
jns
in
mov
cmp
lret
push
sbb
leave
loop
repz
loope
and
sbb
adc
sbb
jmp
aas
jmp
fsubr
aaa
sbb
mov
out
xchg
cmp
sbb
test
xchg
fwait
inc
and
mov
sarl
cmpsb
int3
xchg
xchg
and
mov
cwtl
ret
adc
repz
ret
pop
test
insl
inc
jnp
sbb
sbb
aaa
ja
mov
std
ja
int3
pop
outsb
stos
into
sti
scas
roll
add
sbbl
inc
call
stos
mov
outsb
adc
aad
fs
pop
jmp
fcompl
add
add
mov
cld
imul
iret
ret
jbe
adc
sbb
incb
adc
add
sbb
inc
es
jbe
jnp
ret
xor
jmp
jae
fistpll
fcompl
sahf
inc
lahf
inc
lods
pop
ret
mov
lret
push
orb
push
jns
push
dec
rorb
add
sub
dec
andb
mov
xchg
adc
xchg
out
mov
xlat
inc
bswap
xor
pop
adcb
and
lock
outsb
scas
dec
daa
mov
adc
mov
inc
mov
test
jl
aas
jno
inc
fucomip
jmp
popf
xor
or
mov
or
stos
cltd
aas
push
mov
cmp
and
dec
and
xlat
xchg
jl
mov
jne
sbb
lret
xchg
sub
add
mov
dec
pusha
adc
lret
fisttps
repz
xchg
sub
xor
cmp
jp
sub
mov
mov
dec
xor
cmp
ja
fisttps
mov
mov
xor
or
cmpsl
xor
nop
dec
shrb
or
movsl
xchg
sarb
cmp
inc
out
push
cmp
sbb
dec
pop
pop
pmullw
mov
out
out
dec
cmc
fiaddl
icebp
sahf
rcrb
shll
push
sub
sub
out
mov
jo
dec
xor
sbb
insl
dec
ds
repnz
jecxz
std
test
xchg
sahf
lds
add
inc
xchg
cwtl
pop
push
mov
ss
mov
push
mov
test
push
aad
mov
or
mov
aaa
add
sub
push
js
cmp
mov
inc
insb
cs
clc
shll
arpl
or
arpl
jge
testl
mov
jle
cmp
sbb
pushf
sti
out
mov
or
jno
les
xchg
mov
aaa
sub
rol
arpl
movsl
shr
push
inc
fldl
daa
cli
inc
je
inc
mov
sbb
mov
movl
dec
xchg
cmp
xchg
pop
dec
rcll
adc
lahf
sbb
jnp
test
push
out
call
pushf
loope
mov
push
lea
sbb
in
shl
jg
stc
jno
out
lret
in
movsl
enter
mov
scas
inc
and
jmp
xchg
xchg
fcmovnu
roll
add
adc
push
ret
jecxz
inc
cwtl
sub
xor
lahf
imul
ret
xor
aad
jecxz
out
add
sub
xchg
jp
adc
add
push
int3
add
lret
push
jl
mov
mov
push
roll
push
push
push
sbb
mov
stos
push
mov
rcll
push
push
cmp
xchg
inc
es
call
sub
sbb
and
sbb
jg
mov
out
sub
imul
mov
push
lret
xchg
mov
mov
xchg
fcomps
push
dec
xchg
mov
pop
fs
sub
add
out
jbe
xor
mov
aaa
lds
mov
ret
push
mov
dec
xchg
in
lds
test
pusha
xor
ror
mov
jmp
and
pop
push
push
popf
mov
test
out
scas
es
jp
inc
call
mov
fsubs
mov
cmpsb
stos
jno
xor
jp
jmp
xlat
in
mov
mov
pusha
mov
pop
dec
les
shr
jae
cmpb
rcrl
rcrb
add
arpl
add
enter
xor
xchg
hlt
adc
xchg
mov
cmp
mov
into
mov
jl
xchg
mov
adcb
or
and
dec
xorps
push
inc
mov
arpl
call
mov
xor
dec
outsl
stos
push
adc
cs
loope
scas
jbe
add
xchg
in
sbb
out
pop
sbb
outsl
pop
js
ljmp
loopne
imul
push
pop
xor
sbb
mov
push
aad
mov
mov
mov
mov
pop
imul
pop
xchg
add
clc
imul
xor
lds
mov
outsl
lret
stos
mov
mov
cmp
nop
mov
or
or
push
out
rcr
lahf
push
aaa
outsb
out
cltd
test
xchg
sbb
cli
dec
aam
adc
inc
cmp
lcall
mov
lret
xchg
aas
inc
add
and
jns
dec
scas
repz
mov
ret
cmp
rcll
shl
test
fcompl
mov
or
les
and
push
dec
lret
cs
dec
mov
jg
or
mov
dec
fisubs
push
lcall
push
sar
push
imul
and
push
and
xor
sub
pop
aaa
popa
mov
in
lods
mov
or
xor
lcall
ss
sbb
insb
shr
push
iret
rcrl
cltd
test
lret
scas
loop
cmpsl
out
xchg
and
test
push
nop
loope
add
sahf
cmp
std
xchg
sub
inc
imul
mov
cmpsb
addps
adcl
repz
cmpxchg
loop
sub
mov
adc
sub
inc
adc
pop
sarl
cs
repnz
xchg
repz
std
inc
scas
les
inc
dec
or
push
rcr
lods
xor
xchg
fcomp
fadds
mov
inc
adc
xchg
pop
push
push
ss
arpl
or
ljmp
mov
xchg
jg
je
mov
mov
mov
cwtl
mov
jmp
xchg
shrb
hlt
jle
jmp
repnz
cmp
sub
enter
add
xrelease
jg
aas
add
fisubl
mov
out
jmp
mov
add
fcmove
mov
pop
nop
sahf
or
add
push
rcrl
fsubs
push
daa
adc
pushf
rcll
pop
lahf
scas
sbb
dec
in
adc
sbb
mov
dec
into
outsb
icebp
aaa
je
push
add
popa
loopne
sbbl
lea
rcrb
ret
and
fdivrs
in
mov
subb
cmp
push
mov
ret
cmp
adc
dec
sub
lcall
push
loope
jl
test
leave
sbb
xor
dec
jg
or
fsubrs
pop
cltd
jp
pushf
arpl
mov
jle
outsb
mov
inc
aaa
pusha
cmp
es
lcall
mov
imulb
xchg
mov
sub
fmull
jp
cmp
cmp
gs
sub
mov
mov
mov
icebp
fldcw
insl
jno
stc
inc
das
int3
jb
sub
fidivrs
fnstsw
and
pop
add
loope
cwtl
arpl
dec
xor
mov
xor
jne
mov
cmp
push
cltd
sbb
xchg
add
push
pop
pusha
mov
mov
insb
ds
jl
loope
or
pop
outsb
xlat
or
add
adc
xchg
sbb
jnp
repz
sarb
outsb
xchg
fldl
push
xchg
xchg
mov
in
pop
std
cmp
ss
xchg
movsb
dec
lods
aaa
fcoms
mov
pusha
stos
and
adc
sbb
xchg
mov
out
mov
repz
dec
xchg
cltd
fwait
push
aas
pop
cld
push
jle
xchg
mov
adc
in
fimuls
fdivrs
mov
or
fadds
popf
ffree
mov
in
dec
stos
test
mov
push
pop
in
inc
loop
sub
fstpt
stos
mov
je
rcrb
cltd
adc
add
sub
gs
rclb
fcomps
mov
outsb
and
xor
adc
inc
stos
sbb
mov
xchg
aas
inc
adc
inc
jl
pop
xor
add
dec
jns
flds
out
xchg
imul
movsl
repnz
inc
inc
jg
and
inc
dec
int
mov
sbbb
pop
les
cli
jno
das
jnp
call
push
stos
sub
jmp
mov
lds
or
rcrl
xchg
imul
mov
mov
jbe
xor
add
xor
xor
push
xlat
mov
jno
popf
imul
int3
sbb
in
cltd
or
pop
inc
ds
clc
fs
rcl
add
pop
aaa
out
adc
lock
iret
sahf
movsl
sbb
arpl
xchg
insb
inc
pop
adc
sub
pop
daa
cmp
push
ds
aaa
shrl
sbb
inc
or
mov
sbb
sahf
add
mov
inc
int3
sbb
lods
pop
xor
test
adc
inc
cmp
cld
dec
jnp
jmp
or
pop
inc
stos
pop
rcl
mov
cmp
enter
hlt
or
je
popf
mov
push
xor
cs
jp
gs
lds
shrl
dec
pop
sbb
inc
add
mov
lds
sbb
fisubs
out
stc
push
iret
aad
dec
sahf
les
sti
lcall
jne
insb
cli
add
mov
hlt
lcall
xor
xchg
jo
cmp
lret
cli
jmp
push
dec
cwtl
lret
lods
fld
stc
jg
loop
mov
fidivrs
cmp
or
or
fimull
and
or
mov
jne
add
sbb
lds
and
mov
cld
sub
dec
ljmp
add
movsl
inc
int3
inc
scas
sahf
test
cli
dec
fs
nop
stos
out
pop
addr16
cmp
sahf
mov
jno
jle
jne
mov
inc
ljmp
loopne
rol
sbb
iret
dec
inc
stos
or
lods
test
push
mov
push
jo
push
or
cmp
and
xor
sub
int
mov
mov
xchg
lcall
mov
push
mov
pop
stc
mov
push
das
or
add
xlat
mov
jne
test
mov
push
int
std
ljmp
je
scas
pop
push
cli
mulb
pop
sbb
mov
int
std
ljmp
push
and
add
pop
jp
gs
adc
xchg
cli
inc
xor
pop
dec
repz
adc
jbe
sbb
jno
xor
lret
out
test
icebp
pop
aaa
xor
sbb
int3
mov
cmc
out
orb
mov
pop
addr16
subl
push
fstps
add
lret
sbb
dec
adc
aad
pop
adcl
push
cmp
cli
loope
sub
cmp
fld
pop
or
jo
outsl
add
gs
push
btr
orps
mov
cmpsb
cltd
arpl
dec
cltd
cmp
jg
mov
arpl
add
add
inc
lock
insl
push
sub
sti
and
stc
repnz
popa
mov
cmp
or
xor
daa
clc
enter
xchg
enter
stos
aad
xchg
pop
inc
cmpb
daa
imul
or
sbb
dec
mov
repz
pop
jno
pop
js
add
nop
xor
inc
dec
xchg
xchg
pop
inc
lret
push
js
jmp
pop
in
jmp
cld
mov
push
fistl
push
imul
fs
repnz
and
andb
xchg
xor
jp
shlb
lret
scas
into
outsb
fsubrs
jae
orl
repnz
sbb
test
jnp
repnz
cmpsl
inc
push
mov
mov
jo
and
into
inc
enter
sbb
iret
pop
and
sarl
lods
mov
pop
leave
sbb
icebp
outsl
repz
xchg
cwtl
add
add
sti
test
ja
lock
inc
ret
test
ss
mov
mov
dec
in
pop
loopne
jmp
mov
and
pusha
ljmp
roll
outsb
jns
push
push
inc
loope
mov
outsb
idiv
jnp
mov
pop
scas
mov
js
int3
dec
outsl
mov
adc
mov
bound
jo
dec
outsb
mov
mov
push
mov
pop
cmp
into
pushf
or
out
std
mov
popl
pop
sub
test
inc
xor
xchg
stc
testb
pop
aam
adc
push
into
sbb
add
sahf
in
add
dec
push
pushf
push
adc
scas
push
cmp
inc
mov
into
jb
setbe
sub
shl
daa
or
lcall
js
mov
and
out
xchg
adc
sub
jae
fstl
push
idivb
das
loop
push
js
xchg
stos
aaa
jnp
fiaddl
jbe
fisubl
icebp
mov
fwait
dec
add
into
jns
inc
fcoms
pusha
pop
xlat
add
into
dec
scas
jbe
aaa
leave
push
push
sub
addr16
xchg
jl
inc
js
adc
lea
jge
xor
orl
les
add
mov
lods
jge
ja
mov
mov
or
inc
push
scas
addr16
and
loopne
test
aam
iret
xorl
inc
leave
and
lahf
pop
roll
or
pop
or
cmp
mov
cmp
push
fistpl
out
add
lea
dec
pop
or
lock
sbb
and
cwtl
lods
je
pop
leave
repz
jo
mov
sub
mov
rorl
int3
jle
ds
mov
insb
xor
pop
jbe
enter
jno
dec
inc
movl
push
dec
jecxz
mov
xor
je
mov
mov
xor
mov
mov
ljmp
ror
in
cwtl
sbb
xchg
pusha
mov
cmp
jb
sub
into
jbe
pop
xlat
pop
mov
sbbl
nop
push
sub
popf
mov
les
cmc
xor
arpl
je
int3
aaa
mov
test
leave
ret
fldt
cwtl
fisttpl
push
aaa
cmp
xchg
adc
movsb
jno
mov
adc
adc
adc
lods
mov
mov
xor
pop
cltd
jne
dec
nop
out
cwtl
sarb
jb
adc
outsl
ljmp
add
jnp
xchg
icebp
or
gs
inc
movsb
push
inc
lret
insb
iret
sbb
cmpl
mov
outsl
dec
push
mov
fwait
rclb
inc
out
and
push
xchg
xchg
pop
push
outsl
xchg
sbb
add
jg
fnstcw
mov
pop
in
int3
cmp
das
fidivrs
jmp
mov
hlt
add
sbb
out
das
subl
jg
mov
or
out
inc
pushf
in
sarl
das
testb
inc
jmp
adc
dec
pop
inc
mov
add
pop
cmc
andl
sub
sub
push
jne
adc
rcrb
cmp
mov
xor
push
pop
insb
inc
jecxz
jae
xchg
in
push
sbb
out
aam
inc
lods
sub
lahf
and
ss
lock
add
sub
xchg
pop
xor
push
mov
pop
jbe
mov
or
pop
xor
mov
ss
sbb
adc
mov
imul
fldcw
push
outsb
mov
jmp
add
push
pushf
lea
les
lock
cltd
jecxz
ss
loope
fmuls
mov
jmp
leave
std
pop
xchg
in
js
push
lock
dec
xlat
mov
sub
xchg
add
mov
dec
ds
push
inc
test
xor
or
add
and
icebp
cmp
mov
out
jmp
xor
int3
pop
sub
or
mov
popa
loopne
into
mov
movsb
mov
cltd
mov
jo
cmp
mov
lock
or
in
pop
into
jg
fwait
mov
subl
mov
cmp
data16
test
int
xchg
add
add
fcmovnb
sub
adc
mov
mov
mov
xchg
or
dec
jno
jl
pop
test
xor
cmp
xchg
push
xchg
std
xchg
adc
xchg
popa
fldt
add
xor
nop
aam
add
aad
jae
ja
mov
jno
lock
sarl
loop
mov
addr16
repnz
xchg
mov
in
gs
jo
cltd
sbb
lock
push
aam
jecxz
cwtl
mov
inc
cmp
dec
pop
mov
ret
stc
mov
adc
lcall
sbb
loopne
out
pop
lret
cmp
je
xchg
push
sbb
adc
jmp
add
lret
dec
dec
fstpl
jge
push
in
inc
fidivrl
fwait
clc
in
pop
call
iret
push
mov
or
icebp
jae
rclb
jb
jg
mov
sbb
std
inc
cmpsb
lea
stos
add
std
and
push
lock
lds
mov
sub
iret
scas
sbb
pop
sbb
jecxz
jns
push
sub
inc
add
xchg
mov
rolb
inc
sbb
rol
test
and
imul
push
lods
jmp
int
jge
jmp
and
test
cwtl
js
test
add
jb
xchg
sbb
or
notl
push
fistl
dec
dec
sub
pop
dec
sub
inc
jne
sbb
movsl
xchg
shrb
mov
fwait
aad
ret
loope
cmpsb
mov
mov
imul
xor
call
loop
out
mov
mov
leave
dec
inc
jecxz
xlat
ret
fcompp
out
sbb
loope
or
cs
notb
aas
xor
pushf
xchg
out
mov
xchg
sarb
fildl
jae
push
movsl
in
push
shlb
ljmp
add
in
inc
hlt
add
add
mov
or
aad
jno
pop
xor
and
pop
ds
les
and
inc
sbb
sub
pop
in
sbb
jl
vxorps
movsl
sbb
push
xchg
imul
pop
push
pop
jae
outsl
je
or
adc
mov
xchg
ficomps
lods
in
push
xchg
scas
pop
mov
push
gs
cmp
adc
sti
or
ret
es
cmp
mov
push
mov
xor
mov
dec
js
mov
mov
scas
imul
sub
mov
mov
and
xor
xor
ret
pop
and
insb
dec
pop
xlat
sbb
addr16
inc
lret
ja
mov
mov
cmp
add
xchg
push
cmc
out
das
inc
add
stc
int
in
out
aas
jno
mov
cmp
leave
jp
dec
mov
pop
dec
enter
fs
stc
adc
xchg
aam
sub
mov
adc
arpl
aas
cmp
and
xchg
xchg
jmp
cmpsb
jge
out
out
or
outsl
add
cwtl
mov
or
cli
es
fs
xchg
jo
adc
push
or
cmp
mov
dec
movsl
fimull
lcall
adc
repnz
jbe
leave
divl
imul
adc
movsb
xor
mov
mov
shlb
enter
cltd
movsb
xchg
push
arpl
add
dec
lret
sbb
into
loope
lea
sbb
mov
pop
imul
pop
xchg
dec
and
add
inc
js
mov
lret
call
sub
xor
dec
out
add
xchg
js
int
xor
add
push
or
inc
push
sub
mov
into
mov
dec
mov
iret
push
mov
mov
pop
scas
mov
lret
cmc
sub
fstl
add
repnz
inc
repnz
and
sbb
fisttpl
add
dec
mov
daa
pop
mov
addr16
mov
mov
ret
dec
xchg
pop
lcall
push
ret
dec
or
mov
cwtl
adc
sbbb
pop
jp
jmp
sub
or
imul
mov
rcll
pop
jo
push
xchg
jo
sbb
jl
repnz
dec
outsl
xchg
dec
cwtl
mov
sub
xchg
nop
adc
js
lcall
inc
scas
mov
test
loop
scas
fdivrs
sub
xchg
movsb
lods
int3
lahf
enter
xchg
sbb
idivl
sub
out
data16
and
jl
add
cwtl
cmpsl
repz
jg
inc
popa
es
cld
jb
mov
ljmp
add
pop
psllw
cli
pushf
into
mov
ds
or
xchg
sbb
adc
xor
orb
or
fdivl
inc
out
jmp
lret
lahf
push
movsb
loope
sbb
or
addl
mov
lea
mov
cmp
scas
daa
add
push
mov
inc
je
sub
rcrb
xchg
push
xor
cmpsl
dec
push
sarl
popa
mov
jp
shl
mov
jl
das
outsb
fldt
test
mov
stos
sbb
xchg
lret
mov
or
push
pop
mov
add
das
movsl
or
xor
pop
push
imul
mov
ret
adc
cltd
arpl
xchg
loope
dec
decb
inc
dec
mov
aad
aam
stos
xchg
call
cmp
int3
loope
mov
pop
mov
xor
adc
jo
lret
imul
test
ret
jae
inc
and
push
xorl
xchg
mov
or
test
cmp
push
dec
and
filds
jl
fisttpl
sbb
or
sti
dec
hlt
jle
dec
fsubrl
push
inc
ficoml
xchg
sbb
pop
in
add
or
and
nop
leave
js
push
push
call
cmp
scas
ja
xchg
push
push
enter
fstpl
dec
sbb
pop
sbb
jp
fistl
cmc
dec
fists
lea
push
test
sub
sbb
push
mov
xor
xchg
mov
inc
pushf
mov
icebp
lea
mov
and
shl
clc
mov
outsb
andl
push
cli
pushl
scas
adc
pop
mov
cmpsb
inc
cmp
push
imul
or
sub
xor
add
push
push
push
ja
into
cmp
pop
inc
add
call
mov
mov
sbb
xchg
push
adc
cwtl
pushf
data16
xchg
cld
sub
movsl
jo
push
lret
cmpsb
movsb
dec
and
mov
lock
mov
aam
lds
jns
add
ss
cvtpi2ps
or
xchg
mov
pcmpeqw
adc
cs
int3
dec
mov
test
clc
jne
add
inc
sub
cmpsl
mov
aam
out
pushf
or
js
xchg
addr16
filds
mulb
lret
sub
ja
mov
pushf
int3
leave
nop
mov
inc
mov
lahf
mov
cmp
jle
lret
inc
enter
fwait
hlt
pop
mov
adc
scas
xor
cmpsb
dec
push
lds
ret
scas
pop
out
dec
mov
popa
add
sbb
je
push
add
jns
lret
les
outsb
lahf
mov
frstor
xchg
add
sbb
in
outsb
mov
ljmp
pop
cmp
sbb
inc
xor
sbb
daa
or
pop
adc
mov
icebp
push
cmpsb
ror
mov
jge
pop
jns
adc
cmpsb
sub
cmc
push
pop
or
lcall
clc
inc
rcrb
les
aad
and
bound
and
push
aam
pop
leave
ljmp
inc
ficoms
clc
hlt
clc
shrb
int3
sbb
stc
cmpsl
push
xor
jmp
pop
or
sub
cmpsl
or
push
adc
jmp
sti
xchg
out
jae
pushl
test
jb
inc
jecxz
mov
pop
lea
push
xchg
mov
sbb
sahf
inc
ficoms
fwait
fs
mov
add
pop
push
or
dec
mov
add
outsl
out
mov
add
leave
pop
ja
mov
icebp
movsb
cmp
into
pop
hlt
ds
daa
ficoml
fwait
cs
jno
mov
les
sub
adc
sub
lock
and
mov
call
jle
jle
stos
jmp
ficoml
icebp
into
fndisi(8087
movsl
lock
push
lods
push
adc
xor
aam
std
sbb
scas
jb
jp
push
xchg
sbb
pop
test
pusha
addr16
and
das
push
fdivrs
orl
sub
fsubrl
and
sub
imul
lods
les
daa
jne
mov
iret
inc
lods
sub
icebp
into
mov
mov
xchg
mov
pop
fidivl
inc
icebp
mov
jae
and
enter
test
push
notl
bswap
push
mov
dec
fs
sbb
leave
add
inc
mov
and
enter
mov
sub
jb
pusha
stos
subl
jae
jns
cmp
adc
mov
in
push
enter
pusha
in
mov
xchg
cmc
scas
and
ja
bswap
or
insb
enter
jl
push
mov
js
mov
mov
cmc
pusha
ficomps
arpl
xchg
aam
push
push
lahf
andl
inc
jge
ret
cmpsb
cld
fmuls
adc
xor
gs
jmp
stos
iret
mov
outsl
jns
jecxz
fcmovbe
out
sti
sub
jp
mov
pop
aad
jns
mov
inc
mov
add
inc
mov
push
rclb
adc
push
sahf
sbb
xorl
jo
mov
xor
xor
out
jge
inc
jns
mov
sbb
clc
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
push
out
dec
fistps
pop
into
mov
movsb
divl
xlat
leave
jo
xchg
xor
jl
lods
dec
scas
decb
jno
cmp
sbb
test
js
pop
ds
das
out
in
fsubl
and
divb
nop
es
inc
into
push
and
aas
push
xchg
push
dec
jmp
add
pop
test
jmp
stos
inc
mov
rorl
sub
sub
loopne
jp
notb
repnz
loope
add
or
jo
jle
pop
call
add
pusha
mov
data16
pop
push
push
jle
je
fists
sbb
loop
stc
inc
cmpsl
in
push
push
movsl
push
mulb
repnz
mov
fcmovbe
mov
fsub
ljmp
inc
fists
lcall
je
add
pop
dec
cmpsb
inc
mov
rcrb
out
enter
popa
push
ret
clc
push
push
je
jmp
push
enter
xor
into
fimull
ja
testl
fdivrs
dec
cmp
aas
loop
mov
jno
push
pop
jge
mov
pop
movsl
cld
ficompl
rolb
enter
lcall
aad
xchg
movsl
pop
sarl
add
xor
je
mov
test
push
divl
jl
aam
scas
jne
and
mov
xor
aad
xlat
inc
fidivrs
inc
xor
das
addr16
in
add
cmp
jmp
cmp
dec
int
outsb
popa
and
movsb
mov
in
push
pop
xchg
jae
inc
fwait
sti
cmc
movsl
repz
mov
cli
sub
outsb
sbb
cmp
jp
jae
pop
aam
loopne
pop
loop
cmc
jae
adc
or
loopne
cltd
es
add
into
cld
sahf
inc
pop
push
out
loope
mov
or
cmpsl
into
mov
idivl
xchg
iret
xchg
mov
fiadds
cmp
or
inc
pop
cmc
pop
rcrl
sbb
xchg
pusha
orb
xchg
mov
and
ss
out
out
in
outsb
int3
jnp
xorb
xor
je
mov
insb
cmc
xchg
xor
jg
inc
xchg
add
add
pop
xor
xchg
jne
outsl
xor
sub
mov
jno
dec
jo
dec
les
add
mov
popf
pop
pop
jne
jbe
jecxz
xchg
pop
add
xchg
imul
subb
mov
je
xchg
nop
sbb
movb
jmp
call
loopne
jg
test
jae
mov
repnz
inc
ljmp
jo
fcompp
and
ret
lods
sbb
sbbb
jns
lods
sub
sub
sub
jne
cli
aad
int3
dec
xor
fmul
sub
add
mov
sub
jae
mov
je
sahf
push
stos
addr16
jmp
xor
or
push
ss
push
cmp
jnp
xchg
and
pushf
xchg
sub
push
or
jg
dec
inc
push
xor
xor
cs
dec
xor
and
mov
pop
sub
ds
nop
dec
jmp
imulb
push
and
xlat
test
push
dec
inc
sbb
dec
cmp
inc
hlt
or
xor
mov
rorb
adc
dec
push
lods
in
and
outsb
xor
or
js
jg
jbe
push
test
andl
in
cmp
mov
sahf
push
adc
sbb
mov
push
cli
mov
imul
push
call
inc
into
pushf
pop
into
push
sti
ret
cltd
dec
mov
sar
inc
call
xor
iret
dec
decl
repz
xor
jp
add
movsb
pop
ret
lods
xchg
scas
inc
das
add
xor
xor
mov
ficoms
xorb
sbbl
sti
jp
inc
out
pop
addl
outsb
dec
mov
stc
lahf
sbb
pop
cmpsl
ret
stc
lcall
test
mulb
repz
out
popf
or
xorb
mov
dec
add
xchg
out
or
in
xchg
mov
xchg
fildl
test
gs
repnz
sti
inc
xchg
js
push
push
ds
movsl
jbe
sub
les
mov
icebp
xor
sub
out
push
pop
inc
insl
pop
popf
orl
cltd
inc
xchg
push
mov
ljmp
and
dec
lahf
fcmovbe
or
mov
cmp
mov
push
cmpsl
dec
loope
enter
jge
iret
gs
inc
filds
add
scas
sbb
aad
sahf
push
nop
mov
rcrl
pusha
adc
xchg
or
pop
cs
outsb
jb
push
xlat
fidivrs
jle
adc
cmp
pop
out
sbb
mov
xor
push
stos
push
cmpsb
jmp
xchg
aad
ja
mov
xor
or
push
fsubrl
sub
or
mov
sbb
fbstp
into
insb
shl
fwait
adc
push
inc
pusha
xor
icebp
or
rolb
or
mov
cltd
jg
out
push
sbb
loope
mov
mov
xor
movsl
aaa
lcall
nop
outsb
in
add
mov
ja
fcmovnbe
daa
adc
inc
push
dec
out
mov
roll
sub
int
push
and
push
pop
add
and
js
inc
push
inc
out
loope
push
add
mov
cmp
adc
sub
mov
movsb
in
fimull
pop
and
push
mov
inc
js
push
mull
pop
jae
jg
pop
and
cs
jbe
push
adc
mov
lret
enter
add
test
inc
lret
add
dec
lret
test
ficompl
out
test
imul
in
cmpsb
rcll
cli
imul
or
inc
sub
out
mov
inc
adc
add
fwait
push
add
inc
xchg
mov
adc
and
leave
push
stos
jno
popa
movl
les
fiadds
rorl
or
stc
lahf
xchg
push
fcoms
fs
flds
mov
and
sahf
loop
adc
dec
add
in
movsl
mov
mov
jno
in
mov
lret
sbb
add
stc
jo
dec
push
iret
fld
in
das
int3
jp
mov
aaa
cmp
or
or
sti
lret
int3
clc
cmp
xchg
pop
pushf
test
push
inc
fucomi
push
adc
xchg
aam
scas
inc
push
popa
cld
lds
jp
pop
cwtl
xchg
aas
fisubrs
pop
or
lock
pop
sbb
sub
pop
or
fbld
xor
fistl
or
pop
adc
or
mov
call
sub
das
pop
xchg
jo
mov
jmp
cltd
fdivrs
jbe
ret
clc
outsl
sub
inc
repnz
or
call
dec
call
lock
test
ret
pusha
push
inc
stos
and
or
mov
or
outsl
push
sub
or
jb
push
and
fdivr
inc
mov
jne
add
mov
cs
adc
cmp
xor
mov
and
std
mov
mov
pop
ret
push
mov
jle
ja
fst
push
je
sbb
pop
xchg
jns
xor
hlt
push
into
xchg
adc
xchg
cmp
adc
dec
mov
ficompl
ret
sbb
adc
out
mov
sar
jnp
filds
xchg
lock
push
adc
adc
xlat
xchg
pop
int
xor
out
aad
out
xor
stos
xor
cltd
jmp
fwait
aam
push
pop
pop
inc
test
sti
mov
outsl
adc
shll
hlt
out
add
add
fcomip
jno
or
jmp
xor
dec
xchg
out
test
inc
sub
push
int3
push
data16
or
sbbb
in
jmp
icebp
out
ffree
lds
mov
pop
pop
seta
inc
pushf
pushf
add
mov
pusha
popf
mov
cmp
outsl
movsl
std
stc
aad
jp
adc
hlt
and
fwait
pop
aaa
aad
rcrb
inc
addr16
pop
js
inc
mov
pop
or
pop
cmp
push
push
repz
repnz
imull
inc
frstor
loopne
test
and
sbb
add
retw
mov
aam
sub
or
repnz
cmp
sub
lock
xor
push
insl
das
shrl
sti
mov
in
adc
inc
pop
inc
xorb
jne
mov
lahf
adc
pop
lcall
xor
mov
xchg
jns
inc
and
jnp
in
pop
xor
push
enter
fdivrl
jo
outsb
jo
jne
and
std
jge
xchg
aam
mov
pop
fimull
and
adc
adc
xor
jnp
leave
cmc
rolb
jle
icebp
cmp
cld
push
jnp
sarl
mov
ljmp
push
push
cld
ret
fwait
mov
inc
lods
cmp
sbb
clc
adc
dec
cmp
lods
mov
aas
rcrw
aaa
out
cmp
sahf
daa
sub
lods
adc
call
jmp
movsl
sub
push
insl
lret
lds
xor
lahf
adc
inc
repnz
push
and
or
cmp
loop
or
andl
stc
xor
pop
daa
and
xlat
inc
lea
dec
leave
mov
int3
jo
mov
push
jge
push
inc
test
inc
sbb
push
les
push
fldenv
cltd
ret
daa
in
mov
xchg
lods
loopne
lcall
mov
cmc
jmp
fimuls
mov
insl
inc
cs
push
out
decb
loop
mov
mov
test
cltd
mov
pop
mov
shl
mov
bound
add
enter
imul
pop
je
je
xchg
aam
cwtl
frstor
lcall
mov
repz
mov
jmp
or
fwait
loopne
mov
mov
fistpl
jns
pop
ret
jo
and
clc
adc
add
mov
or
js
push
inc
mov
fs
or
push
xor
mov
cs
push
or
and
pop
lahf
cs
scas
clc
jbe
adc
and
and
sbb
lea
out
cmp
dec
sbb
aaa
imul
aaa
dec
inc
mov
mov
arpl
in
lods
xchg
addr16
xor
xor
sbb
xchg
push
fcomps
xchg
mov
arpl
lahf
push
js
sti
adc
mov
mov
xlat
out
and
or
sbb
push
mov
pop
cmc
jb
pop
push
test
mov
xor
fsub
jns
or
pop
repnz
imul
push
imul
xor
inc
push
adc
cmp
pop
mov
push
adc
test
mov
sbb
mov
aas
xchg
push
fstpt
into
pop
stc
in
cmp
ret
push
mov
dec
in
fadds
mov
adc
push
add
cmp
popa
scas
frstor
push
cltd
int
mulb
les
add
test
mov
push
jo
subl
aaa
test
fsubp
and
fildl
stos
xor
pop
mov
jns
pop
int
sbb
fwait
mov
mov
xor
dec
std
stos
mov
xor
adc
imul
xchg
aad
test
scas
clc
lahf
or
movsl
xchg
notb
mov
lcall
outsl
leave
popa
in
rorb
test
jns
pop
hlt
pop
fs
xor
and
mov
mov
std
clc
mov
sub
pusha
mov
fiaddl
or
sub
and
bound
cmpsl
ljmp
mov
aaa
jo
cli
cmp
loop
jno
and
dec
sub
in
push
pop
mov
mov
jp
push
std
jns
add
mov
out
xchg
cmpsb
mov
popf
ret
push
sbb
cwtl
cltd
mov
pop
pop
xlat
xor
iret
divl
dec
and
mov
mov
cmp
pop
popa
lahf
mov
imul
call
jge
and
mov
push
pushf
and
cmp
out
pop
and
and
xor
jmp
aas
cltd
adc
dec
ss
hlt
ljmp
loop
xchg
or
or
mov
dec
stos
ret
add
jmp
into
jecxz
push
sub
mov
dec
push
insb
or
in
cli
pop
mov
nop
mov
xchg
mov
shrl
push
movsb
aad
xor
fwait
into
scas
add
or
pop
xor
mov
das
cmpsl
dec
fwait
dec
add
xchg
mov
bound
lock
adc
mov
lcall
sbb
mov
push
adc
in
aas
add
mov
cmpl
dec
negb
hlt
and
aam
inc
xchg
ds
loop
outsb
jl
lea
cwtl
ss
mov
and
pop
or
cmp
jnp
fcomp
mov
test
inc
orl
mov
dec
or
imul
repz
push
cli
das
mov
mov
nop
inc
jnp
iret
or
inc
mov
icebp
dec
dec
jno
mov
mov
psubsw
lods
dec
mov
adc
fwait
mov
movsb
xchg
cmpsl
and
xor
dec
jp
adc
jno
pop
mov
cmp
bound
enter
aad
push
mov
loop
test
push
xchg
fidivrl
inc
cwtl
push
xchg
inc
andb
jecxz
and
pop
lret
pop
mov
sarb
orb
jmp
adc
push
shl
out
scas
fcomi
aad
inc
xchg
aad
test
test
push
mov
add
lods
mov
cmp
mov
push
mov
and
adc
incl
jne
inc
adc
dec
cmpsl
scas
outsl
out
stc
cwtl
dec
or
push
xor
fistl
fstps
jmp
ljmp
push
inc
scas
int3
das
or
imulb
push
mov
std
sbb
lret
icebp
cmp
mov
ret
jno
dec
pop
cmpl
add
sbb
inc
xchg
and
push
outsb
xchg
cs
lods
sub
mov
inc
mov
arpl
jp
ret
es
push
adc
cmpsl
mov
fwait
inc
adc
push
int3
jo
add
nop
imul
sbb
in
pop
jmp
jbe
clc
xchg
sbb
cmp
xor
mov
loopne
mov
cmpsl
dec
pop
cmp
inc
xor
repnz
loop
insb
in
push
jne
rcrb
pop
fcmovbe
xchg
xor
in
pop
lret
adc
mov
push
ret
fcmovu
dec
or
enter
stos
hlt
jne
mov
mov
lds
mov
cmp
mov
pop
leave
mov
xor
shrb
pop
imul
push
pop
mov
mov
sub
push
lock
and
lock
and
sbb
add
add
push
shll
call
push
or
into
addb
sub
adc
nop
mov
pop
sub
lods
clc
xor
inc
cmp
xchg
lcall
addl
dec
mov
xlat
add
lock
hlt
mov
inc
jae
data16
stc
adc
xchg
pop
iret
aad
sbb
ds
addr16
jl
movsb
rorl
xor
pop
xor
pop
imul
sbb
sub
das
or
and
frstor
inc
mov
mov
sub
cli
cld
jg
cmpsl
mov
xchg
pop
sub
xor
fisttps
mov
into
inc
adc
ds
and
sub
push
jl
lret
jl
cmc
clc
sub
popa
cmc
enter
andl
dec
popl
test
jb
jo
push
loopne
mov
js
jb
in
adc
aad
inc
dec
sbb
loopne
pop
add
loopne
xchg
cli
push
fldenv
cmpsl
add
sbb
rolb
aam
dec
adc
hlt
xchg
mov
in
jecxz
mov
pop
dec
pop
and
or
pushf
xchg
shrl
in
rcll
sub
pop
sub
test
mov
nop
push
leave
or
xchg
lea
sub
mov
mov
pusha
pop
cmpsl
sub
and
add
das
pop
mov
daa
adc
mov
popf
dec
ficoml
insl
adc
loope
repnz
sahf
aas
xchg
sub
pop
movntps
mov
mov
xor
lods
bound
mov
and
and
sahf
in
xor
rep
rol
mov
daa
arpl
add
xlat
lods
fimull
popf
leave
arpl
outsb
ljmp
add
xchg
stos
mov
loop
mov
jle
jnp
xor
mov
xchg
shl
inc
xchg
popa
mov
sbb
in
push
shlb
or
in
jo
pop
std
fdivrs
add
shll
jnp
pop
popa
xor
lea
add
pop
mov
dec
popf
add
mov
out
cmpsb
out
shrb
pushf
ljmp
scas
in
and
jne
mov
in
pop
lcall
daa
sub
repnz
mov
int3
xchg
repnz
rorl
imull
adc
jno
out
cmpsl
jle
lea
call
negl
and
dec
andb
inc
out
stos
and
mov
imul
jo
jae
jo
popf
js
aaa
cmp
pop
imul
lods
test
pop
iret
popa
test
push
jae
stos
lods
xor
xchg
fistps
or
cmp
or
xchg
push
dec
pop
jecxz
mov
sti
shlb
jp
rcrb
clc
and
sarb
andl
lea
les
les
jg
repnz
les
or
sbb
lods
test
out
lcall
pusha
sbb
scas
pop
js
notb
addr16
push
xor
imul
imul
arpl
dec
ret
shrb
sahf
mov
lock
dec
cwtl
adcb
adc
outsl
cmp
ret
cmp
push
dec
out
cmpsb
adc
xchg
fsts
nop
mov
and
outsb
xor
lock
div
mov
inc
incl
mov
jge
push
cmpsb
jb
sub
outsl
push
leave
pusha
fisubrs
ja
pop
xlat
push
xlat
mov
mov
fstpt
lds
test
outsb
cmpsb
imul
dec
shrb
aaa
mov
insl
or
xor
jae
pop
xchg
mov
loop
aas
test
cmpsl
bound
pop
clc
dec
pusha
xchg
and
mov
repz
shr
adc
repz
xchg
rclb
das
pop
imul
pop
std
and
sbb
icebp
sbb
test
into
outsb
jnp
cwtl
rorb
fwait
dec
popa
fists
xor
jnp
mov
cltd
and
les
lret
or
sbbl
popf
ss
xchg
faddl
shr
sub
mov
popa
imulb
ds
sbb
mov
and
sbb
dec
or
gs
mov
imul
mov
rcr
call
push
lcall
jno
mov
in
adc
pop
inc
dec
mov
pop
cmpl
insl
stc
cmp
std
or
push
sub
add
adc
testl
rcll
push
cmc
push
jbe
mov
out
and
lock
pop
scas
mov
pop
stc
push
mov
mov
shl
inc
mov
adc
push
adc
idivl
adc
sub
lahf
aaa
mov
imul
inc
push
add
mov
cltd
addr16
pop
add
and
mov
or
xchg
dec
xor
or
fsts
mov
add
subl
dec
ljmp
cmc
icebp
sbb
into
js
ret
mov
les
sbb
jno
jb
sub
pusha
orl
lret
sbb
cmp
cs
mov
mov
or
push
gs
rorl
cs
cltd
jbe
mov
sub
in
in
fwait
cmp
test
fisttps
nop
pop
aas
add
loop
nop
inc
mov
adc
fisttps
sub
fcomps
pop
out
push
fildl
xor
dec
adc
movsb
das
mov
sub
sub
xor
divl
es
sub
seta
sarl
add
pushf
mov
xor
ss
pushw
push
adc
lods
fwait
sub
xor
adc
rcl
ljmp
xchg
out
xor
pop
cmpsl
in
enter
ljmp
fcoml
inc
add
sub
cli
inc
push
imul
pop
leave
push
lds
insl
fs
or
jmp
mov
mov
mov
xor
push
mov
loopne
adc
dec
add
lock
fdivrl
daa
pop
jecxz
nop
fs
cs
les
or
sbb
adc
jae
pop
ljmp
pop
movsb
gs
mov
push
xchg
insl
and
out
movsl
js
clc
popf
xor
jl
int
mov
push
push
sbb
es
dec
fs
pop
pop
negb
call
or
push
push
cmp
enter
pushf
xor
jle
and
notb
ret
insw
xorb
cs
xor
js
addr16
pop
test
test
adc
xchg
lds
ret
mov
mov
cmc
icebp
insb
adc
mov
out
jno
fstpt
out
pop
outsb
in
jno
sub
cld
lods
ss
aas
call
ret
fiaddl
arpl
testl
aas
repz
aam
or
fadd
lods
ljmp
sub
incl
cmp
ljmp
pushf
das
push
add
outsl
dec
dec
dec
xchg
in
scas
adc
push
xchg
in
cmp
mov
jmp
insb
aaa
cmpb
add
xor
fcomps
imul
jnp
jno
pop
sbb
xchg
fidivl
stos
fists
popf
fsubrp
cmpsb
ret
repz
push
dec
or
cmpsl
cmpl
push
scas
dec
push
shrl
and
xor
dec
inc
mov
dec
sub
dec
rorl
pop
jnp
lea
shlb
loop
jnp
cmpsl
and
jle
dec
mov
dec
nop
cmp
dec
in
xor
cld
cmpsl
push
gs
cwtl
ljmp
pop
or
repz
cwtl
lahf
pushf
and
xor
nop
ds
add
aam
sub
adc
lds
mov
stc
cmp
pop
testb
push
dec
mov
fcmovu
jns
test
mov
popaw
outsl
arpl
lods
insb
mov
jnp
sbb
mov
cs
outsb
push
gs
cmpsl
int3
cmpsb
pop
inc
and
cmc
xchg
mov
stos
in
fsubp
mov
sbb
sub
mov
add
pop
call
mov
mov
je
adc
icebp
imul
xchg
cli
popa
push
insb
imul
pop
pushf
pop
loopne
inc
mov
int
int
mov
std
pop
inc
jne
popf
in
data16
push
popa
xchg
stc
inc
xor
pop
xor
pop
mov
rclb
in
pushf
sti
lea
je
ret
test
xlat
inc
and
add
dec
dec
cmpsb
push
xor
sbb
xor
sbb
and
fwait
out
call
jl
sarb
push
scas
fcmovnbe
rcl
sarb
xchg
xor
jecxz
xor
outsl
mov
imul
inc
pusha
notl
push
mov
decl
push
push
aam
jae
into
outsb
push
jle
jnp
lods
movsl
inc
or
aam
adc
ret
inc
daa
je
outsb
stos
jmp
pusha
mov
push
push
int3
ficomps
fsubrs
xchg
fs
push
shrb
hlt
mov
cmp
fmuls
xchg
stos
fwait
es
xor
jp
pop
pop
add
push
repz
mov
adc
fisubl
imul
mov
popf
mov
movsb
dec
mov
mov
ja
shl
test
push
xchg
mov
das
dec
cmpsl
mov
pop
add
jnp
or
cmp
aad
and
orb
xchg
in
sub
cmpsb
push
enter
je
jno
ja
jp
xchg
cmpsl
insb
inc
xchg
adc
inc
add
fnstenv
and
cli
mov
out
fistl
jecxz
les
incl
sub
lods
cmp
ret
dec
sbb
push
xlat
xor
or
sbb
sbb
in
clc
mov
imul
cwtl
xchg
rcrb
lods
xchg
cmp
fsubl
cmp
hlt
dec
xchg
mov
cli
scas
sbb
sub
pop
std
insb
xchg
dec
sub
ds
sub
mov
mov
lds
in
push
subb
aaa
jecxz
jp
mov
lods
dec
cmp
and
sub
jge
sti
repnz
pop
into
adc
into
dec
inc
cltd
aas
xor
dec
popl
hlt
sub
sub
ds
aas
adc
mov
popf
roll
mov
out
cmp
mov
jo
jg
ret
or
lock
add
insl
aaa
pop
inc
data16
push
popf
es
hlt
mov
mov
jp
orl
push
add
xchg
and
and
cs
push
stc
jns
cmp
xor
insl
xchg
mov
add
hlt
lret
jmp
fdivrp
add
roll
loope
fldcw
jo
inc
xchg
jge
mov
add
cmp
sub
fisttpl
mov
ret
enter
test
test
sub
emms
fs
clc
mov
ljmp
loopne
stc
int
pop
fdivrl
fwait
data16
xor
jnp
cmp
push
out
loope
pop
out
jle
or
les
stc
push
leave
sarl
test
mov
idiv
xor
daa
lods
push
pop
and
mov
aam
adc
scas
mov
mov
aaa
arpl
push
insl
push
out
nop
jb
dec
loopne
jmp
sbb
and
adc
xor
mov
xchg
ret
repnz
call
push
ficoms
mov
hlt
inc
add
dec
and
inc
mov
ja
inc
repz
pop
xlat
xchg
pop
mov
pop
bound
pop
cwtl
test
or
add
inc
jo
mov
imul
xlat
add
push
and
dec
adc
and
lods
addb
add
jmp
push
push
pop
dec
and
data16
add
mov
subl
negb
cmp
pop
lret
xor
in
movsb
in
fldcw
test
jp
leave
cld
arpl
xchg
cmp
add
xchg
cmp
int
push
dec
jecxz
addr16
or
sub
aas
fsubrs
out
dec
mov
xchg
stc
pop
mov
and
out
lcall
andb
stos
mov
sti
push
mov
rcrl
and
push
in
loope
sub
ljmp
jge
sub
mov
cltd
stos
cmpb
adc
and
cmpsb
hlt
push
cmp
call
mov
scas
xchg
cs
lcall
shl
jbe
psllq
loop
imul
xor
adc
mov
hlt
sahf
xor
int3
cli
cli
sub
adc
mov
mov
mov
dec
pop
pop
pop
inc
lret
pop
sbb
inc
decb
push
xchg
jns
imul
inc
sub
fucomp
icebp
idiv
sub
sahf
lcall
and
into
push
jmp
push
cmp
stos
mov
daa
cwtl
andl
xchg
xor
les
push
jb
shl
test
dec
fildl
scas
xchg
fstpl
jo
mov
pop
lods
xor
loop
mov
add
xor
mov
sbb
imul
test
jl
xor
jecxz
xlat
test
stc
jb
fucomip
es
sub
dec
mov
jge
ljmp
sub
dec
push
lret
mov
add
cld
jns
shlb
arpl
ffreep
fcompl
or
stos
imul
xchg
out
sbbl
adc
push
pop
leave
jo,pn
jle
dec
mov
int
sbb
in
mov
xchg
outsl
hlt
xchg
cmc
cmp
push
lret
cmp
or
mov
jecxz
iret
test
gs
stc
xchg
cltd
cli
mov
sti
dec
orl
loope
cmp
pop
out
push
popf
aaa
mov
sub
pop
pushf
shll
mull
and
sub
pop
jmp
js
jbe
subl
jmp
xchg
xor
adc
cmc
fwait
xchg
fmull
push
mov
out
jo
push
sub
sbb
jmp
inc
lods
inc
ljmp
cmp
ljmp
insb
addr16
xor
xchg
push
add
and
xor
pop
fnsave
int
sub
and
mov
or
mov
daa
cmp
jmp
xchg
inc
push
push
lret
ljmp
dec
dec
adc
mov
loope
outsb
or
pop
mov
outsl
daa
push
popa
cltd
ret
cmp
sub
daa
insl
jl
add
outsb
add
aaa
cltd
sub
pop
mov
nop
or
mov
or
ret
aad
test
push
fs
inc
out
outsl
jnp
hlt
dec
xchg
test
lret
loop
inc
clc
add
dec
pop
jp
jge
push
pop
hlt
pusha
dec
dec
decl
leave
jmp
rorb
test
add
stos
sbb
jnp
dec
imul
mov
add
jle
fimuls
cld
push
das
mov
sbbb
shll
mov
and
lock
sbb
lret
call
sar
jne
mov
imul
and
cli
sbb
add
sub
dec
mov
insb
jp
mov
out
mov
in
and
jbe
jnp
jecxz
ret
shrl
sub
cmpsb
es
mov
mov
cmc
cs
xor
pop
fwait
test
mov
mov
les
imul
lea
es
clc
pusha
es
lea
pop
rcll
cmp
lods
pop
pop
std
aas
imul
adc
pop
mov
push
cmp
xchg
test
cld
mov
jecxz
or
arpl
push
or
cmp
pop
ds
add
jne
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
mov
lret
sti
pop
jp
aam
cmp
xor
mov
leave
jmp
aam
in
repz
std
jp
mov
adc
js
gs
pop
push
jecxz
lods
mov
cltd
dec
psubd
xor
pusha
aam
add
xchg
inc
jge,pt
cmp
lods
lcall
fdivs
add
fildl
xchg
loopne
jg
cmc
mov
xor
pop
dec
cmp
lahf
ficoms
xchg
out
xchg
ljmp
out
push
xchg
test
in
xchg
loope
lds
add
push
bound
es
cmpsl
jl
fmul
push
mov
mov
dec
sbb
jp
popa
mov
leave
cwtl
rcll
les
das
mov
enter
mov
dec
jmp
lahf
clc
push
mov
mov
mov
dec
sahf
inc
mov
mov
sbb
cmp
pushf
into
pop
add
mov
mov
adc
arpl
fs
adc
push
daa
popa
lods
pop
dec
cmpsl
push
pop
out
test
testb
into
insb
mov
cltd
stos
pop
cmp
sub
adc
mov
push
inc
fldenv
aam
and
inc
ljmp
lods
or
sbb
jg
mov
pop
repz
je
push
ret
push
mov
stos
nop
mov
xchg
xlat
xchg
sub
sbb
mov
sub
jbe
pop
cmc
scas
add
lods
xchg
add
decl
outsl
js
jns
mov
stos
fistpl
mov
in
mov
iret
clc
mov
les
or
sbb
fidivl
jns
lods
ss
cld
mov
pop
into
es
sti
or
sub
out
or
mov
sbb
adc
and
fisttpll
xor
xlat
dec
mov
fiaddl
inc
jl
insb
pop
push
sbb
jo
aas
pop
lcall
and
pop
xchg
gs
dec
cmp
and
inc
cwtl
fistps
xlat
or
daa
pop
sbb
out
jne
mov
sub
jecxz
xor
lock
pop
sub
gs
inc
addb
pusha
std
int3
xor
cmp
sti
repnz
push
or
xor
clc
das
xchg
xor
addr16
in
into
dec
imul
lcall
and
cmp
sbb
mov
inc
mov
mov
push
push
aam
jns
loope
outsl
lds
add
sub
cmpsb
repz
pop
scas
or
push
mov
stc
cwtl
push
xchg
fldcw
jmp
cmp
mov
insl
aas
xchg
or
sbb
jmp
sahf
add
stos
xchg
fnsave
xchg
roll
mov
addb
sbb
in
fs
nop
push
pop
pop
imul
mov
cmp
sbb
add
mov
pop
sbb
pop
repz
cmp
insl
jae
dec
push
hlt
lret
cmpsb
loopne
and
aas
sub
push
add
fldt
jle
rcll
jl
xor
mov
mov
fs
in
xchg
stos
pop
fisubrl
xor
into
js
mov
mulb
xor
test
sbb
sub
daa
add
xchg
fidivs
adc
call
dec
test
xchg
push
aad
mov
mov
xchg
sub
loopne
dec
add
jno
mov
pop
lock
or
les
bound
fwait
jb
rcl
xchg
hlt
bound
or
add
repnz
mov
scas
adc
push
jns
stos
sub
out
push
inc
adc
fstl
mov
xchg
daa
repnz
mov
enter
xchg
in
mov
adc
xchg
and
inc
xchg
loopne
inc
pushf
push
inc
cmc
sub
cli
out
add
adc
fs
dec
inc
cmp
ret
fdivrs
push
aad
les
mov
jmp
movsb
ds
sub
fsubl
aad
in
test
aas
jmp
lods
shl
repz
cmp
outsl
and
fwait
lret
inc
bound
and
js
cmp
cmp
popf
pop
sbbl
shrb
sub
xor
test
adc
in
adc
xchg
test
mov
mov
fistpl
rorl
cmp
popl
mov
xor
mov
pop
dec
pop
ja
notl
push
pop
or
in
scas
inc
sbb
rcl
call
or
xchg
cmp
mov
push
lahf
pop
inc
ficoms
push
shll
adc
js
insb
ljmp
test
roll
sub
stos
jmp
mov
mov
adc
test
mov
xchg
fsubs
jmp
ss
test
mov
xor
xchg
pushf
inc
arpl
test
mov
mov
rclb
leave
jecxz
pop
push
pop
dec
in
or
sub
or
dec
mov
mov
lods
lcall
fadd
xor
push
inc
push
jne
ror
mov
test
in
jle
outsb
test
outsb
adc
out
jae
imul
mov
scas
repz
fidivs
xchg
mov
jl
cmp
jmp
aam
pop
dec
sbb
lods
jmp
ja
push
jo
jg
xchg
das
xlat
subl
sbb
pop
movsl
jne
loopne
movsl
or
cmp
inc
mov
or
cli
into
pop
mov
add
in
test
sub
data16
jae
adc
sahf
pop
notb
fcmovbe
cmpb
sbb
or
je
xchg
mov
adc
mov
and
sub
je
testb
ret
mov
dec
test
js
pop
pop
loop
xor
aad
leave
out
mov
mov
rcl
ss
lock
pushf
inc
push
dec
mov
sub
mov
jae
xchg
jmp
std
push
xor
mov
mov
or
and
jp
lret
mov
cmp
sbb
imul
jp
aaa
in
add
pop
fs
nop
add
sti
gs
pushf
mov
push
add
and
sub
mov
xchg
hlt
add
cli
jns
inc
jo
push
int3
inc
cwtl
test
lods
dec
not
dec
push
cltd
push
cmp
mov
pop
ficompl
ficoms
or
out
or
dec
inc
scas
idivl
cmp
test
ret
int
pop
cmp
cmp
cmp
xchg
xchg
fwait
aam
or
fcmovb
es
mov
push
lods
mov
bound
mov
lods
inc
cli
adcb
fdivrl
pop
adc
ljmp
sub
std
or
test
push
data16
mov
pop
and
xchg
xorb
mov
dec
int3
dec
lds
aad
addr16
and
push
add
ds
adc
xor
mov
fnstsw
arpl
mov
adc
dec
xchg
rorl
jae
int
ret
fucompp
push
es
inc
mov
and
test
mov
inc
cwtl
pop
cmp
nop
idiv
mov
in
imul
mov
fisubrs
pop
and
lods
out
aaa
mov
movsl
adc
mov
out
cmpsb
decb
push
jle
fsub
data16
lods
insb
ret
add
xor
out
jne
inc
xchg
test
enter
clc
add
cmp
pop
jne
or
xchg
clc
pop
cmp
sub
fucomi
sbb
xor
or
cmpsl
or
je
hlt
mov
push
jns
xchg
popa
outsb
shll
out
int3
lds
jmp
adc
int
jl
push
mov
sub
xchg
stos
mov
add
mov
mov
imul
loope
lods
outsl
lret
cmpsb
inc
jg
andb
inc
mov
sbb
pop
mov
xor
test
in
push
mov
pop
inc
jl
jecxz
jge
cli
lret
movsb
movsb
data16
xchg
jno
sub
test
lods
sub
adc
mov
jl
scas
sbbl
adc
enter
pop
xorl
xor
xchg
jecxz
insb
filds
outsb
add
sbb
adcl
out
js
or
movsb
cld
shl
ret
pop
jmp
adc
cmp
stos
mov
cmc
sbb
jp
cwtl
call
sahf
pop
mov
pop
das
clc
fsubr
push
mov
mov
repz
orl
sub
imul
and
adc
movsb
mov
stos
cmp
or
imul
mov
and
fstps
lahf
xchg
aaa
xchg
mov
stos
fnstsw
addr16
pop
xor
adc
mov
sbb
push
in
movsl
imul
shll
lods
cmp
sbb
mov
push
sub
sti
push
arpl
mov
sahf
pop
loope
and
fs
arpl
jge
mov
insl
repz
ficompl
sub
sbb
imul
mov
adc
cmp
pop
sub
cmp
clc
xor
push
xchg
lods
fdiv
xchg
sbb
adc
mov
fneni(8087
sti
dec
xchg
xchg
xor
inc
imull
lods
mov
daa
out
dec
xchg
cmp
fs
and
jnp
gs
hlt
outsl
adc
loopne
or
mov
pop
cltd
fwait
sbb
test
movsb
ss
loopne
repz
xlat
lretw
repz
int
or
bound
fsubs
add
fcmovne
int
dec
incb
mov
inc
insb
leave
pusha
shll
jae
add
mov
out
shrb
adc
mov
mov
sub
mov
psubq
lock
mov
pop
push
sub
mov
push
lret
hlt
stos
cli
sbb
xlat
xor
arpl
stc
imull
je
fists
hlt
sbb
sbb
jecxz
sbb
ret
mov
mov
cltd
outsb
lods
fistpl
sbb
pop
push
addr16
xchg
sbbw
jae
lret
sub
pushf
xchg
mov
sbb
icebp
fwait
xor
cwtl
ds
ja
pop
push
mov
pop
mov
test
sbb
xchg
lock
pop
out
dec
lahf
pop
into
push
idiv
bound
ja
mov
fisttpll
cmpsl
adc
faddl
xchg
cld
in
cmc
cwtl
ljmp
pop
push
nop
subb
inc
or
rcll
mov
fsts
pop
lock
push
pushf
mov
das
ficompl
sbb
leave
outsb
sbb
adc
mov
gs
sbb
inc
xor
iret
xchg
sub
pop
cli
jo
or
inc
xor
das
adc
and
repnz
pop
and
push
fsts
repnz
aad
jl
pop
mov
ret
jne
mov
arpl
mov
hlt
mov
adc
aad
gs
xor
xchg
ss
loop
sbb
lret
lds
jl
adc
addr16
rcrl
jb
shlb
mov
lret
cmp
ljmp
mov
push
fstpl
out
nop
outsb
daa
or
repz
es
rol
xor
jmp
aad
sbb
mov
pop
mov
std
jb
add
xchg
cmp
sub
mov
lock
jae
rcrb
in
ljmp
cld
mov
mov
roll
cmc
scas
cmp
sub
push
mull
xchg
lahf
mov
stos
jmp
push
dec
ds
dec
inc
in
and
fisubrl
sub
into
adc
test
clc
arpl
pop
push
jne
out
sbb
jmp
adc
pop
ljmp
int
daa
jl
xchg
mov
pop
clc
out
dec
addb
lea
sbb
iret
cltd
pop
lret
inc
jnp
pop
xor
aaa
cmpsl
lcall
daa
mov
push
sub
leave
js
out
push
sub
fbld
in
std
fs
sar
sub
sub
cmp
adc
int3
pop
sahf
sbb
out
popa
dec
fmull
in
inc
sbbl
es
xchg
addl
daa
pop
shrl
insb
outsl
shlb
stos
jno
adc
jno
push
ret
pop
pop
je
call
setnp
pop
addr16
and
push
mov
push
call
clc
outsb
or
push
insl
sub
ret
mov
mov
addl
pop
jmp
lods
mov
test
push
cmpsb
push
mov
add
std
inc
pusha
repnz
les
out
mov
add
jns
test
out
arpl
mov
cmp
add
jno
ljmp
xchg
sub
lcall
adc
mov
fsubrs
or
test
dec
or
das
out
and
mov
mov
xor
mov
xchg
movsb
jmp
mov
push
jp
mov
sarb
mov
mov
jg
xor
adc
or
jecxz
adc
jae
jns
jle
ja
add
in
mov
cmp
dec
pop
outsl
adc
jge
out
xor
mov
jne
out
sub
sbb
out
out
inc
jnp
or
mov
mov
inc
xchg
lcall
push
xchg
sub
testl
aas
xor
dec
rcll
repnz
or
fisttpll
adc
outsl
idiv
and
cmpsb
mov
cmp
pop
jle
jg
aad
fidivrl
bound
push
mov
cld
mov
cli
insl
cmp
ret
cmp
leave
mov
scas
mov
mov
jo
test
stc
push
repnz
cs
sarb
testl
mov
sub
xchg
add
scas
ret
xchg
or
dec
inc
mov
pop
loopne
push
dec
dec
push
icebp
xor
sub
ss
std
mov
mov
and
xchg
cmp
xchg
dec
ss
das
add
pop
pop
or
popa
jmp
mov
in
movq
mov
adcl
data16
fisubrl
jp
imul
out
or
jge
and
in
jge
js
movsl
cltd
pop
sbb
mov
testb
repz
ja
ficomps
dec
push
test
fucomp
or
xchg
cmpsl
jno
scas
mov
decl
sub
push
repnz
mov
cmp
add
mov
adc
out
pop
mov
push
jns
jle
pusha
adc
gs
jae
enter
movsb
inc
out
mov
or
adcb
jge
mov
lock
es
mov
out
scas
ja
pop
out
lock
pop
loopne
je
mov
mov
popf
xchg
sbb
fwait
pop
sti
or
scas
fs
mov
shl
adc
xchg
sbb
jo,pt
fsubp
or
cwtl
lds
popa
test
pop
sbb
adc
xlat
sub
or
pop
push
mov
fidivrs
out
sti
dec
sbb
leave
xchg
push
push
daa
inc
fnstsw
push
cmp
pop
sti
or
outsl
jne
xchg
add
jne
rolb
and
repz
ret
jo
dec
loop
and
scas
leave
add
std
jnp
sbb
js
xor
push
insl
adc
icebp
nop
cli
imull
mov
pop
imul
mov
dec
dec
arpl
adc
cmp
push
xchg
test
lods
fstpt
loopne
cld
roll
cwtd
stos
nop
cmp
jge
add
pop
in
push
sbb
es
add
jne
movsl
aaa
jle
jno
jle
jl
jmp
pop
sbb
cmp
loope
jecxz
insb
xchg
xchg
js
in
jb
scas
cmp
mov
popa
push
mov
mov
sub
sti
arpl
jbe
mov
push
xlat
xor
ljmp
jmp
iret
movsl
cmc
xchg
sub
imul
int
aaa
or
clc
push
sbb
pop
rorb
push
jle
lods
inc
mov
shl
adc
jno
aam
jb
add
mov
mov
sbb
cmovnp
repz
jb
push
sub
inc
cli
jbe
mov
aas
or
sbb
addr16
sbb
hlt
push
xor
jnp
xchg
roll
aaa
sbb
or
mov
insl
xchg
das
push
test
jp
enter
popf
outsb
int3
test
movsb
mov
es
lea
popf
or
out
inc
mov
sbb
iret
jl
mov
orl
ret
or
pop
cmpps
add
add
insb
stc
scas
xorb
shl
pop
cmp
mov
mov
xor
popa
mov
iret
add
stc
clc
cli
std
nop
addl
inc
xorl
leave
dec
pop
imul
ja
push
xchg
mov
jne
inc
lods
mov
push
push
sbb
in
ss
dec
xor
cmpsb
lahf
mov
push
pop
in
mov
sbb
out
mov
add
jecxz
test
sub
out
es
loopne
push
sbb
cmpsb
sbb
fistl
mov
ficoml
add
insb
sbb
daa
mov
push
fcoms
inc
push
xor
fsts
cwtl
jle
aad
sub
mov
inc
imul
push
mov
sub
test
into
lds
sub
add
popl
sub
pop
jmp
loope
mov
in
xchg
jecxz
adc
lock
inc
mov
xchg
sub
inc
jl
cld
sti
int3
add
xor
mov
shlb
lcall
add
je
loope
jb
and
loope
inc
and
dec
lret
out
stos
insl
repz
insb
das
fnstcw
xor
test
xchg
mov
pop
ljmp
ret
jle
cmp
jae
sbb
add
pusha
pop
jnp
inc
mov
xor
outsb
incb
shr
andl
dec
enter
xchg
aaa
das
clc
sbb
ret
fnclex
lret
pop
bound
cmp
add
call
xor
adc
dec
scas
dec
sbb
cmp
insl
fistpl
dec
inc
inc
and
mov
push
sbbl
mov
cmp
mov
popa
jo
xor
sbb
pusha
cmpsl
aaa
test
std
loope
nop
push
and
in
adc
xchg
fs
outsb
push
jecxz
pusha
fcomps
mov
into
fwait
jg
add
xor
lods
mov
cmc
push
shl
and
das
jle
sub
cmpsb
ja
test
lds
inc
xchg
xor
jge
fwait
test
pop
push
mov
pop
inc
mov
cmp
mov
xor
and
and
out
addr16
rol
iret
adc
mov
out
sub
add
sar
fildll
dec
addb
pop
adc
push
ja
pop
lret
das
dec
cmp
add
mov
push
cmp
cmp
mov
push
test
in
imul
je
mov
sub
aaa
cmpsb
imul
or
rcl
add
pandn
jo
jo
mov
lea
mov
inc
lretw
add
pop
cmpsl
add
jnp
xlat
loope
into
roll
nop
xor
rclb
cmp
paddusb
aam
and
enter
xor
popf
je
sub
js
sti
ret
loope
aas
lds
jp
xor
xor
ljmp
movsl
enter
es
mov
jno
clc
push
scas
testl
add
std
rorl
fisubrs
imul
fs
mov
ja
jae
in
mov
cmp
imul
adc
jns
sbb
loop
pop
mov
iret
jnp
in
jns
negl
pop
out
repz
inc
rorb
into
jmp
test
mov
cmp
ss
mov
inc
lock
mov
int
mov
fiadds
sbb
sbb
icebp
mov
mov
inc
addr16
xor
mov
insb
orl
dec
sbb
cmpsb
fildl
sbb
fsubr
push
adc
mov
or
lea
cltd
push
mov
aam
dec
inc
iret
cwtl
leave
ror
adc
jp
cli
imul
imul
popf
and
mov
pop
jbe
ss
test
mov
push
repnz
pop
in
xor
fnstsw
or
std
sarl
adc
std
xor
sub
enter
clc
dec
push
push
in
imul
test
in
xchg
push
cmp
dec
stos
cltd
out
mull
mov
dec
loope
shrl
lods
ror
inc
xchg
in
out
mov
sub
mov
imul
push
leave
xor
mov
popf
fdiv
fst
icebp
lods
xor
lods
xchg
jne
andl
test
and
cs
das
fwait
sub
sahf
out
mov
int3
push
mov
xor
cwtl
mov
popl
sti
ds
or
jg
outsl
enter
mov
mov
xor
dec
pop
cwtl
or
mov
or
scas
pop
int
or
add
xor
fwait
in
dec
imul
cmp
cmp
out
cltd
or
cmp
push
int
fisubs
rcrb
and
jmp
call
sbb
cmp
mov
stc
mov
cs
dec
scas
inc
sbb
shr
imul
pop
je
pop
push
push
stos
inc
es
imul
and
test
mov
dec
loopne
ret
dec
xchg
push
lods
sub
sbb
and
addr16
js
ds
inc
push
xchg
andb
mov
rclb
inc
adc
mov
stos
xor
dec
insl
movsl
mov
mov
mov
lds
js
in
jg
mov
mov
xchg
pushf
bound
mov
jb
orl
scas
stos
jmp
dec
mov
ss
pushf
fistpll
cmpsl
sahf
gs
mov
add
cs
sarb
cli
in
jle
push
and
or
iret
adc
outsl
ljmp
and
stos
and
shr
sub
xchg
cmc
lods
cld
icebp
add
inc
aam
in
and
in
inc
xchg
lock
stos
stc
push
outsl
pusha
inc
movsl
xor
inc
scas
inc
jp
or
inc
mov
ds
jne
cs
sub
popa
pop
sbb
jmp
xchg
push
in
popf
sti
sahf
rorl
movsl
jecxz
lret
dec
xchg
xor
cmp
arpl
rcl
lahf
imul
cwtl
imul
in
frstor
ds
xchg
sub
fnsave
out
mov
pop
xor
ret
xchg
sbb
cmp
or
jp
sahf
hlt
ljmp
jno
add
inc
out
mov
lds
xchg
leave
rclb
testl
jnp
int3
hlt
fwait
push
imul
sbb
sub
orl
mov
addr16
add
cltd
addr16
stc
jno
mov
add
cmp
jcxz
fstpl
bound
jge
daa
gs
mov
lea
daa
enter
xor
in
sbb
jl
push
xor
adc
or
stos
mov
stos
xchg
xorb
pop
mov
add
push
dec
and
mov
cmp
pusha
inc
pop
push
movsb
xor
adc
sar
jge
aas
mov
mov
loope
lods
xchg
dec
aas
test
mov
lods
xlat
xchg
aaa
and
xchg
and
mov
xchg
mov
dec
stos
int3
out
cmp
es
sti
cmp
fs
inc
pop
jle
mov
popf
inc
mov
data16
mov
out
stc
fs
xor
fisubl
dec
cmp
addr16
mov
xchg
mov
push
lret
rcl
fdivl
mov
jno
shrb
inc
lret
push
cmp
push
aam
bound
bound
inc
lods
mov
in
lret
ss
movsb
xor
jno
mov
lock
and
xor
push
loope
jle
cmovle
ljmp
aas
lods
cmc
js
mov
jg
or
out
jne
popf
mov
mov
aas
popf
jp
daa
mov
ljmp
cmp
in
mov
notl
mov
lds
pushw
aas
mov
xchg
pop
dec
cs
xchg
or
push
mov
add
mov
jne
enter
arpl
jne
mov
add
sub
push
push
xchg
test
mov
mov
adc
hlt
outsb
add
out
add
std
pop
and
cmp
jo
lods
xor
or
pop
and
pusha
popa
ja
lret
clc
pop
arpl
stos
xchg
int
sub
movsl
jmp
mov
ficoml
fs
call
daa
inc
pop
xlat
push
xchg
cs
adc
mov
repz
sahf
lods
int3
pop
jbe
pop
divb
jbe
jns
std
mov
sbb
dec
into
fdivs
inc
add
push
or
mov
adc
fcompl
pop
cmp
mov
fs
cmpsb
pop
dec
mov
cs
push
sub
rcrl
jp
fldt
inc
jbe
xchg
inc
cmp
mov
adc
arpl
push
adc
or
mov
daa
outsb
xor
xlat
xor
lcall
adc
test
mov
mov
fistps
aad
roll
test
mov
xchg
ss
xchg
sub
dec
mov
pop
mov
push
mov
repz
dec
and
adc
rcll
stc
pushf
mov
xchg
jg
fcmovnb
inc
mov
out
jne
popa
les
repz
inc
add
std
cs
fildll
mov
jecxz
mov
mov
add
cwtl
std
push
mov
adc
inc
sti
push
ret
mov
das
adc
add
sbb
inc
jle
and
pop
and
sbb
lahf
hlt
imul
pop
movsb
mov
push
add
ficoms
mov
orl
dec
sub
scas
adc
inc
mov
out
and
icebp
loop
lcall
mov
sub
inc
test
rorl
stos
sub
imul
out
clc
sbb
dec
mov
mov
fnstcw
nop
jne
les
mov
push
sbb
xor
bound
icebp
popa
and
ja
adc
sti
sbb
fisubrs
jo
adc
or
push
xor
rol
ficoml
mov
mov
jo
loope
cmp
lea
cmp
cmpsl
dec
add
sbb
test
test
mov
les
pusha
int3
fdivl
mov
xorl
int3
test
pop
mov
test
jge
sub
test
es
pop
cmp
stos
stc
inc
jge
das
sbb
mov
shll
insb
shlb
push
or
out
xchg
push
and
or
cmpsl
push
xchg
dec
mov
scas
scas
xchg
jge
arpl
sub
xchg
adc
mov
lret
cmpsl
jo
insl
lret
data16
clc
pop
xor
test
adc
push
push
jmp
movsb
mov
lods
mov
into
imul
stos
clc
xchg
xchg
xchg
lcall
shlb
xchg
aas
into
push
sbb
or
cmp
inc
movsl
pop
test
loope
andl
cmc
xor
mov
daa
popa
aad
mov
popa
or
lret
imul
addr16
inc
and
fsts
testl
les
fcoml
out
inc
mov
rorb
repz
lods
ss
out
and
mov
jp
mov
test
push
leave
cmp
addl
stos
xchg
mov
pop
shrl
and
sti
ret
push
enter
push
jle
lret
call
xchg
jnp
movsb
mov
daa
lock
iret
xor
xor
pop
jno
fcomps
jp
lods
sbb
inc
pushf
cmc
orl
push
fdivs
insl
jbe
stos
bound
push
mov
pop
movsl
aad
xor
inc
enter
xchg
arpl
or
mov
roll
gs
idivb
cmpb
dec
cmpsl
outsb
jle
mov
lcall
sarl
jne
dec
mov
mov
pop
cli
gs
mov
inc
pop
pushf
jbe
mov
adc
hlt
cmpsb
in
jnp
sub
loopne
push
ss
xor
lahf
mov
orl
jge
iret
aad
push
mov
loopne
cld
or
add
mov
inc
sbb
fildll
sub
fucomip
sbb
lock
mov
nop
mov
mov
jp
decl
movsl
fidivl
stos
mov
test
ljmp
pop
jo
and
repz
and
jg
test
sbb
or
sub
mov
test
daa
jge
sbb
jp
data16
sbb
int
mov
push
xchg
pmullw
xchg
mov
push
test
inc
lock
cltd
gs
mov
mov
push
js
cmpsl
mov
jmp
and
mov
gs
push
dec
stos
dec
xor
movl
sbb
add
pushf
je
mov
push
andb
leave
testb
inc
inc
imul
not
xor
adc
ds
pop
lahf
idiv
fwait
mov
cli
lahf
push
dec
fsts
and
dec
cmp
lahf
outsb
and
mov
inc
lahf
pushf
mov
decl
in
lock
in
hlt
andl
into
leave
sub
stos
jnp
lds
sub
out
stos
or
loope
mov
jge
xchg
push
icebp
mov
or
add
mov
push
in
jns
xchg
or
jle
sub
jns
cwtl
in
call
xchg
int3
and
in
into
xor
data16
ljmp
mov
sti
mov
mov
xchg
adc
mov
aad
arpl
enter
push
add
fxch
outsb
loop
sub
lcall
gs
mov
enter
pusha
jno
push
mov
jmp
lahf
xor
ret
ret
lcall
xchg
cmp
jle
add
jp
ss
fbld
sbbb
cmc
leave
je
xor
jge
roll
stos
lret
hlt
sbb
xor
int3
push
ja
ja
sub
adc
loope
movsl
out
test
inc
test
leave
lret
cmp
in
lock
ret
fsubp
inc
xor
in
lret
mov
fstps
xchg
in
orb
out
mov
pop
add
xlat
jmp
int
xchg
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
cmpsl
mov
subl
xchg
jle
push
loope
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
push
and
insl
jns
add
repz
add
fldt
sysret
xchg
jo
inc
xchg
test
aaa
mov
out
mov
movsl
jb
mov
push
and
push
mov
mov
cmp
mov
hlt
mov
loopne
pop
xor
lahf
outsb
or
cmpsb
sub
inc
pusha
jns
mov
addr16
ret
lods
xchg
sub
test
pusha
sub
pop
in
ficoms
setl
push
push
cmp
xor
ss
aad
adc
jp
leave
popa
fwait
pop
mov
scas
shlb
and
mov
mov
or
or
hlt
pop
push
imul
mov
cmpl
cs
int3
fldl
jg
fnop
pushf
sub
sbbb
jnp
xchg
cld
push
jp
inc
inc
sbb
adc
ja
xor
ljmp
inc
push
pop
cmc
cli
sbb
or
adc
cmp
in
test
and
pop
test
inc
adc
push
stos
dec
jo
gs
icebp
adc
popl
and
mov
cmpsb
xchg
into
mov
sbb
outsb
inc
pop
rcll
pusha
xchg
test
std
xchg
mov
data16
sbb
mov
xlat
gs
insl
enter
jp
aaa
mov
push
lcall
add
push
lret
aas
dec
outsl
arpl
imul
dec
xchg
loope
push
aam
xchg
or
dec
cmpl
xchg
push
mov
cmp
repz
data16
jl
pushf
sbb
pop
adc
sub
addl
inc
out
fdivrs
mov
push
pop
and
mov
cmpsl
xor
sub
xchg
icebp
lea
jb
jecxz
and
xchg
hlt
lea
xor
jecxz
adc
sub
dec
adcl
fmuls
pop
dec
icebp
and
sbb
outsl
std
shlb
xchg
dec
mov
ljmp
and
es
cmp
and
mov
pop
jo
xchg
loop
mov
and
or
insb
insl
nop
mov
mov
js
mov
jnp
sbb
xchg
imul
xchg
sbb
mov
rcrb
mov
mov
push
dec
mov
fbld
push
mov
push
and
add
stos
sub
mov
dec
mov
and
stos
pop
inc
dec
push
daa
fcmovu
out
scas
and
cmc
sti
sub
cld
sub
push
add
test
fcmovu
dec
cmp
cmpsl
aaa
mov
and
sub
adc
test
aaa
ret
inc
test
in
xchg
testl
outsb
mov
xor
int3
jo
das
cld
and
movsl
pop
std
popf
popf
ljmp
add
push
icebp
lock
cli
push
mov
xor
cld
pop
mov
xchg
andl
call
xor
and
and
aas
jp
mov
and
and
dec
dec
aad
sbb
mov
xor
rcr
push
in
mov
lret
dec
lret
sbb
gs
and
cwtl
jb
push
jge
leave
sub
sbb
rcrl
dec
mov
pop
adc
xor
das
dec
orl
in
negl
mov
cld
lsl
xor
outsb
pop
std
xor
push
pop
jo
iret
jp,pn
push
cmp
push
or
mov
addl
mov
icebp
mov
sarb
cmp
pop
mov
mov
sub
add
sub
pop
dec
outsb
push
sbb
cmp
adc
adc
fidivl
jle
mov
jl
adc
push
and
jp
sbb
cld
fwait
jno
cmpsb
push
pop
sub
icebp
sub
hlt
lock
jno
negl
mov
addb
and
dec
or
into
inc
cmpsb
mov
test
movsl
push
mov
sbb
fists
pop
inc
sahf
adc
mov
xchg
test
aas
lret
repnz
cmpsl
int3
aas
xor
pusha
js
sbb
and
xor
inc
outsl
addl
mov
cmp
jge
push
test
xchg
xor
xchg
mov
mov
es
lahf
push
xor
icebp
add
mov
pop
leave
or
xor
xor
jle
shrl
mov
sub
dec
aad
push
xchg
add
add
add
push
sbbb
fistpl
pop
pop
add
repz
add
add
sub
faddp
fsubrs
mov
push
fsubl
add
aaa
rcrb
and
xchg
int3
or
imul
movsl
fists
adc
fisttps
and
and
negb
lods
mov
out
mov
lock
iret
or
mov
in
mov
sbbb
mov
xorb
rclb
jbe
mov
daa
push
push
std
pop
mov
test
je
inc
es
repz
popf
cmp
xchg
lret
xchg
xchg
mov
psubsb
mov
popa
cltd
inc
repnz
repnz
cwtl
inc
pop
pop
cmpsb
push
cltd
out
sarb
mov
repz
jb
in
es
lcall
fucomi
pop
adc
test
sbb
pop
add
scas
addr16
fs
mov
sbb
pop
inc
mov
pusha
es
jno
push
xchg
and
rorb
fs
jecxz
js
dec
scas
push
and
enter
dec
outsl
adcb
xchg
rorl
sub
hlt
repnz
pop
cli
aad
aam
pop
daa
add
and
jns
arpl
enter
push
out
xchg
movsb
dec
push
and
sub
inc
cld
xchg
test
xchg
sub
jle
xor
inc
mov
into
nop
das
cmp
ret
movsb
sub
push
jns
jp
and
std
stc
and
adc
pop
jmp
nop
xor
cmp
lcall
in
or
sub
fcoms
fidivs
push
push
jo
ret
add
push
pop
or
rdpmc
jp
pop
in
movsb
loop,pn
rcl
cmp
inc
mov
inc
lock
ds
jnp
lret
lods
and
mov
jbe
mov
sbb
inc
mov
loop
loop
sbbb
cmp
xchg
lea
icebp
stos
imul
shlb
jmp
sbb
in
hlt
dec
inc
and
and
movsl
inc
stc
sbb
xchg
jns
movsb
add
fcoml
rcrb
add
jne
dec
ja
fcompl
pop
mov
out
sbb
and
push
out
push
out
jmp
sarb
inc
jg
pop
xchg
xlat
rep
mov
add
nop
movl
dec
push
adc
xchg
nop
gs
xchg
and
sbb
insl
lods
insl
push
add
add
insb
faddp
dec
adc
push
lods
mov
cmc
fcmovne
fs
aas
cld
pusha
insl
andb
sub
loop
nop
adc
push
repz
movsl
sarb
incb
stos
pop
and
ret
dec
dec
aad
pop
dec
push
push
popa
loop
into
fs
jo
cltd
cmp
jmp
ljmp
cmpsl
xchg
xlat
jae
adc
lds
and
sbb
and
rcrb
mov
shrb
cmp
cmp
fisubrs
fildl
mov
inc
fcmove
jp
fdivrs
sbb
cmc
sub
or
je
btc
jns
or
jmp
test
mov
out
mov
mov
scas
shrb
and
stc
mov
or
pusha
out
pop
pusha
js
nop
in
mov
inc
inc
insl
inc
rorl
js
push
aam
sbb
xorb
ja
push
dec
adc
je
gs
mov
mov
addr16
fnstsw
mov
xchg
mov
in
addr16
addr16
lret
aad
aad
jnp
xchg
cmp
sar
sar
loope
or
or
dec
nop
dec
push
cmpsb
push
push
mov
outsl
inc
cltd
in
sbb
mov
jns
mov
jo
mov
in
xchg
test
xchg
mov
outsb
or
mov
sbb
mov
fisttpll
js
pop
popa
or
add
cld
cmpsl
gs
add
mov
add
and
in
cmp
or
cmp
push
jmp
mov
inc
xor
push
ret
out
inc
sub
jno
dec
mov
int3
adc
subl
popa
dec
insb
fs
mov
jne
lea
lea
mov
insb
subb
and
sub
lret
aad
ror
pusha
arpl
shlb
xorb
loopne
push
sub
imul
sub
inc
rcll
idivb
nop
push
imul
ss
mov
jp
push
sub
scas
arpl
add
jne
cmpsb
jg
mov
jae
push
mov
pop
fiadds
add
add
add
add
mov
or
mov
cwtl
fildll
inc
adc
mov
xlat
sbb
add
xor
clc
ret
xchg
scas
mov
outsb
shll
jmp
fsubrs
mov
ja
imul
pop
lcall
jg
add
sbb
hlt
rclb
pop
mov
aaa
sbb
into
idivl
inc
testl
mov
lds
push
cltd
notb
cli
movsl
in
pop
cmc
adc
dec
sarb
or
mov
into
push
push
dec
js
sbb
sarb
xor
in
fs
insl
mov
and
cmpsb
mov
adc
jle
addr16
mov
rcrl
test
sub
imul
xchg
mov
sub
mov
dec
in
sub
pop
mov
scas
in
sbb
mov
xchg
jns
dec
sub
jle
dec
repnz
or
fstl
or
incl
sub
or
mov
sub
inc
add
mov
add
aas
repnz
mov
xor
scas
jl
test
ss
cmp
ljmp
add
out
xchg
aaa
dec
sub
icebp
xchg
mov
xlat
subl
movsb
mov
sti
or
loope
je
add
push
icebp
lods
adc
lods
adc
xchg
push
and
inc
cmp
push
ss
add
scas
fstps
insb
std
add
push
insl
imul
dec
mov
jnp
mov
lret
jnp
add
dec
jl
js
jno
cli
movsb
or
jecxz,pt
aad
ret
add
cltd
test
add
or
scas
lcall
inc
sbbb
xchg
jmp
push
jnp
sti
in
jle
xchg
enter
mov
in
rcrl
xchg
cmpsb
out
sub
adc
and
pop
dec
cwtl
les
lret
aaa
ror
cld
jge
pop
jmp
xchg
mov
jne
adc
inc
lcall
and
pop
sub
cmc
mov
xlat
in
movsl
jne
pop
dec
insb
jp
fildl
sbbl
and
cmpsl
inc
pop
daa
adc
push
xchg
or
dec
pop
add
cmc
push
xchg
dec
daa
dec
out
inc
out
lock
int3
xor
pop
incl
std
or
cmc
cmp
lcall
les
mov
aas
rcll
dec
sahf
popf
mov
daa
je
mov
mov
mov
sbbb
js
push
mov
cmc
rorl
pop
and
outsl
enter
jnp
adc
jae
mov
inc
push
mov
push
sub
or
mov
pop
push
and
popf
loop
sub
fsubl
jnp
dec
dec
pop
adc
sub
sbb
jge
int3
sbb
enter
mov
add
sahf
enter
cmc
cld
hlt
pop
aam
loop
jg
lock
bnd
and
scas
dec
mov
ficompl
or
nop
sub
mov
push
pop
cwtl
cmp
cwtl
and
insb
aaa
addr16
aad
push
call
ret
mov
icebp
stos
jg
mov
push
add
xor
inc
or
add
adc
sub
sub
pop
push
pop
inc
mov
add
add
lret
mov
pop
repz
icebp
cwtl
and
mov
jo
inc
rol
push
negl
inc
inc
and
inc
shll
cmc
scas
in
and
pinsrw
sarl
inc
xor
sub
cmp
jg
push
mov
imul
mov
cmp
inc
xchg
outsl
movsl
cwtl
cmp
or
pop
out
xor
xor
test
imul
shl
lods
rcr
dec
test
jne
cmpsl
sbb
cld
dec
les
into
mov
lcall
ja
adc
pushf
add
stos
out
or
pop
daa
jb
sbb
dec
inc
mov
sbb
js
fnstcw
into
add
rorl
sahf
pop
sbb
mov
jl
sbb
pop
xor
jne
cltd
xchg
ds
subb
push
mov
les
jmp
jge
mulb
mov
jno
dec
sbb
mov
call
mov
push
xchg
sbbl
add
lds
popf
sbb
jecxz
fcomps
out
dec
lods
lahf
ss
ret
sbb
add
add
add
pminsw
idiv
repz
lret
inc
sbb
push
jecxz
add
add
add
aam
jo
mov
clc
sti
ja
shl
push
sbb
es
cmp
int3
mov
shlb
mov
inc
xor
cs
xor
mov
rcll
rclb
pop
fldenv
jno
ret
pop
cmp
jmp
in
inc
sbb
es
cltd
xchg
cmc
cltd
pusha
and
lcall
sbb
xor
jge
int
or
pop
iret
cld
push
cmp
sti
pop
pop
push
push
cld
outsl
push
xchg
adc
std
xchg
pop
push
scas
adc
fisubl
jmp
push
push
mov
dec
andl
cmp
sbb
jae
cmp
mov
pop
fwait
mov
adc
cmp
jae
push
lret
pop
dec
stos
push
mov
push
ds
sub
dec
bound
stc
mov
test
adc
lds
inc
mov
smsw
std
ljmp
imul
or
pusha
xchg
pop
cwtl
mov
mov
loopne
inc
aad
rcr
cmp
mov
cmpsl
stc
add
jae
adc
xchg
or
jo
lcall
inc
dec
jl
imul
rcll
inc
xor
mov
sub
jnp
mov
mov
inc
orl
into
addl
outsb
gs
push
jl
test
mov
cmp
mov
xchg
cs
adc
and
xlat
inc
xchg
stos
mov
sti
mov
xchg
shll
dec
cmpps
shl
dec
aas
push
mov
ret
push
test
insb
jbe
sbb
and
adc
push
jns
sbb
pop
stos
cs
dec
loop
lret
je
ret
out
outsb
stc
mov
pop
movb
jne
jb
sbb
hlt
sbb
stos
dec
fs
xor
cld
mov
xor
clc
xchg
inc
fistpll
pusha
stc
gs
repz
dec
dec
xor
les
popa
fsubp
movsb
pop
xchg
outsb
pop
inc
mov
xor
jne
cmpsl
inc
hlt
xor
cmp
or
fcmove
aas
mov
icebp
test
or
outsl
xor
pop
mov
adc
testl
pop
mov
or
jb
xchg
dec
shll
xchg
stos
movsb
addr16
out
add
std
les
dec
adc
or
sbb
jg
dec
add
int3
sbb
sarl
inc
pop
xor
jae
divl
loope
mov
inc
das
inc
push
pop
rorb
jo
imul
insl
cld
lahf
nop
dec
sub
cmp
inc
push
jb
cmp
jle
nop
dec
pop
fsubrl
sbb
or
mov
out
mov
lock
push
mov
sub
inc
xlat
je
shll
cmpsl
add
xchg
insb
jne
or
xor
outsb
mov
pusha
jmp
lock
mov
pop
imul
adc
arpl
jbe
jl
xchg
out
iret
push
aaa
sub
cmpsb
icebp
jne
or
test
xchg
or
jb
jecxz
jae
mov
dec
dec
push
pop
outsb
sbb
cwtl
hlt
push
aas
dec
fldl
icebp
aas
dec
mov
outsl
in
cmp
clc
pop
fcmove
arpl
inc
into
mov
add
imul
cmp
loopne
hlt
shrb
or
push
add
and
and
inc
pop
sub
or
inc
xchg
dec
arpl
lea
lahf
mov
rorb
pop
jp
ljmp
xchg
or
hlt
lahf
mov
mov
bound
pop
xchg
mov
jle
add
fstpl
push
fcoms
int
or
sub
ss
fbld
jns
fwait
xor
xchg
jno
fldcw
lahf
jns
call
mov
pop
sbb
or
mov
pop
mov
sti
xor
push
cld
cs
fisttps
int
inc
push
aas
leave
hlt
sbb
pop
add
xchg
bound
std
pop
mov
jnp
call
ds
imul
inc
imul
rolb
jnp
insl
mov
cvtps2pd
loop
sub
repz
ret
sbb
out
iret
out
shll
or
scas
push
jmp
mov
sbb
lret
push
mov
fstl
leave
pop
lcall
stos
lds
add
add
call
jnp
sarl
or
add
add
add
inc
fnstenv
mov
cmp
and
out
movsb
aam
xor
pop
and
std
adc
jo
pusha
mov
icebp
and
js
pop
ljmp
ret
sub
imul
aam
mov
adc
out
ja
cwtl
add
rcr
sub
add
clc
shlb
ror
pop
loope
jle
js
xor
mov
scas
mov
rolb
sub
sub
sub
sub
and
and
cwtl
mov
nop
fwait
inc
jge
fists
add
divb
and
jo
test
testl
lods
cmc
mov
ss
ds
sbb
cmpb
pop
aam
pop
lods
jmp
pop
push
push
xor
daa
cmp
xor
fistl
adc
fdiv
int3
mov
das
iret
outsb
adc
pop
out
push
push
shlb
sub
add
rcll
je
sbb
out
out
movsb
pop
push
xor
xchg
test
cltd
adc
ds
pushf
xchg
jo
mov
sub
test
hlt
adc
bswap
push
jge
and
xor
fs
jbe
inc
shl
push
and
xchg
pop
in
and
pop
jne
mov
rorb
cltd
mov
fcmovnu
shl
jne
xor
cwtl
jle
push
fbld
daa
lcall
mov
into
mov
jle
or
adc
pusha
push
xor
cmp
mov
scas
rolb
shl
mov
push
shl
pop
pop
fadds
call
add
push
jns
jnp
or
bound
je
push
mov
jmp
cmp
or
in
shll
daa
push
dec
push
or
sbb
dec
dec
xor
cmp
sahf
mov
iret
std
fcomps
notb
or
xchg
and
jns
cs
cmp
lea
mov
sub
xor
scas
push
xor
pop
jecxz
test
inc
dec
sub
sub
sub
xchg
cmc
icebp
push
cmpb
in
adc
add
wrmsr
push
in
xor
stc
ds
xchg
sub
jo
fwait
mov
shl
in
in
int
lret
into
mov
cld
call
outsb
xchg
stos
insl
int3
notb
jnp
inc
pop
into
out
and
or
sub
sti
pop
xchg
adc
pop
dec
sub
fsubs
jbe
or
dec
cmp
dec
adc
xorl
in
xchg
jne
test
addr16
jge
out
iret
sbb
stos
inc
xchg
jg
and
shll
clc
loope
aas
sbb
icebp
fwait
leave
aam
jno
mov
or
mov
pop
inc
mov
pop
cmc
push
cmp
mov
xor
mov
scas
mov
mov
pop
inc
daa
ljmp
das
or
arpl
int3
xchg
mov
push
sub
call
adc
dec
es
in
jecxz
jne
pop
inc
lret
xor
idivl
push
out
call
stos
push
and
fcompl
dec
rcll
or
xorb
dec
or
fmul
cmpsl
xchg
sbb
subw
dec
xchg
call
movl
xor
aad
sub
inc
loopne
xchg
lds
pop
insb
push
gs
clc
insb
ds
push
xchg
rorl
jne
inc
and
mov
ljmp
and
ds
and
or
test
leave
push
push
xor
ror
scas
xchg
lret
adcl
test
cmp
sarl
incb
stos
xchg
lock
jp
inc
xor
scas
jp
stc
repz
push
xor
clc
and
xchg
cmp
jecxz
jmp
mov
add
jne
jnp
jmp
stos
es
mov
enter
mov
int
inc
pop
pop
stos
icebp
movsl
jmp
sbb
aaa
pop
mov
dec
call
test
idivl
pop
xchg
inc
jo
lcall
adc
cs
jo
aaa
in
roll
ds
rcll
cmp
movsb
and
lock
mov
sbb
je
xor
cwtl
or
test
popa
sub
push
je
jge
mov
fstps
add
add
add
pop
test
adc
cltd
mov
in
add
repz
add
and
xchg
fwait
les
jo
pop
in
sub
out
js
rcll
and
push
mov
nop
es
pop
out
xlat
xchg
sub
ret
out
sbb
sub
stc
xor
jae
adc
out
mov
adc
pop
mov
fsts
xchg
iret
cmpsl
sbb
pop
outsl
mov
sub
orl
lods
cs
xchg
idivl
jbe
ljmp
xchg
dec
imul
mov
inc
dec
push
cmp
stos
jns
bound
sbb
xor
xchg
fbld
xor
push
add
shrl
push
xchg
jo
cs
jnp
mov
cld
xor
jnp
scas
mov
add
jle
push
sub
out
pushl
push
ss
mov
out
fwait
daa
mov
or
inc
xor
sar
xchg
les
lds
mov
xchg
or
das
inc
in
mov
cmpb
fimuls
push
pop
clc
and
iret
testl
outsl
mov
fisubrl
jbe
push
mov
xchg
xor
and
aaa
sbb
cmpsb
psubb
aaa
or
stos
fisttpll
mov
jae
cmp
push
mov
push
cmp
mov
imul
xchg
addr16
mov
aas
mov
push
xchg
add
mov
dec
jae
not
push
ret
mov
fsubr
push
mov
int3
dec
cmp
jae
jo
mull
jno
xor
sub
push
inc
mov
mov
sbb
sbb
int3
cltd
pusha
repz
inc
in
lahf
adc
imul
pusha
mov
dec
xchg
and
pop
mov
repz
es
xor
pop
call
mov
xchg
xorb
ret
cltd
mov
inc
sbb
mov
cmp
aad
mov
mov
neg
imul
gs
adc
inc
sbb
in
hlt
fs
fdivs
push
cmp
add
inc
ret
subb
in
xchg
lahf
in
stc
fnstenv
mov
pop
jns
mov
or
ret
pop
adc
mov
jno
in
jecxz
insl
cmp
add
dec
int
incb
sub
shlb
dec
enter
pop
mov
push
jbe
add
cmp
clc
arpl
lret
sbb
mov
pop
out
cld
ja
test
mov
jp
pop
xchg
adc
pop
enter
inc
fsubr
bound
leave
scas
cmp
inc
adc
sub
fldl
sbbl
pop
insl
cmp
mov
in
test
jns
adc
int
data16
fs
fisubs
adc
je
subl
aas
xchg
stos
std
cltd
fimuls
in
mov
pop
lea
cli
inc
daa
inc
xorb
add
mov
cmpb
shlb
inc
pop
pop
cmc
jb
mov
push
inc
jl
pop
push
addr16
aaa
pop
sbb
sbb
rclb
push
mov
xor
jp
xchg
cltd
and
fs
aas
or
fwait
stos
sbb
sbb
push
divl
sahf
out
and
cmp
sub
lds
jge
or
addr16
xchg
mov
sub
int3
imul
orb
push
ja
shll
xchg
xor
mov
pop
in
addr16
data16
xchg
mov
jae
jno
or
jb
mov
clc
jo
xchg
pop
inc
sub
sub
sbb
jae
jo
adc
cmc
pushf
test
mov
setne
out
or
dec
push
rclb
cmp
in
lds
lcall
insb
mov
inc
cmp
and
push
popa
adc
xchg
nop
movsb
xor
ds
jne
stos
scas
sub
push
push
cmc
xchg
pop
push
xchg
sahf
mov
mov
inc
pop
sbb
sub
mov
imul
xchg
roll
push
pop
mov
inc
jnp
scas
mov
mov
ret
sahf
mov
scas
incl
sbb
xor
mov
dec
lahf
cmp
test
fisttpl
hlt
lods
jecxz
shlb
add
pop
xchg
lahf
fsubr
outsb
ljmp
adc
adc
pusha
or
mov
xchg
adc
and
das
lock
add
add
dec
lcall
adc
lret
outsl
pop
sub
add
repz
add
iret
adc
in
or
or
mov
mov
jge
sbb
test
dec
lods
jne
mov
sti
mov
test
loope
add
mov
aam
lds
bound
pushl
sub
inc
mov
popa
mov
pop
and
aas
scas
adc
int3
mov
test
sbb
xor
loop
insb
cmp
dec
sahf
mov
xchg
add
orl
sti
dec
arpl
dec
mov
lods
sti
iret
and
dec
jne
mov
adc
inc
or
mov
push
sahf
fwait
lock
aam
cld
push
adc
ja
push
mov
xchg
addr16
repz
adc
adc
or
dec
daa
xchg
mov
mov
cmpsl
enter
mov
or
mov
nop
xor
loopne
ja
xchg
in
pop
in
sub
out
iret
dec
dec
mov
sub
and
xor
or
outsl
add
gs
cltd
or
sbb
fdivrp
arpl
pop
mov
and
pop
pop
sub
int3
push
and
sub
stos
int
push
mov
xor
pop
loop
xor
and
gs
mov
aam
shll
or
pop
dec
cmp
enter
rol
addr16
cmp
ljmp
in
sarl
mov
sbb
dec
sbb
stc
xorb
mov
mov
xchg
mov
dec
loopne
adc
dec
inc
aas
add
sub
sbb
shl
and
lods
cmp
pop
sahf
pushf
imull
jno
adc
jle
outsl
xchg
xchg
jns
jo
filds
ret
std
inc
dec
sbb
mov
jl
ja
in
add
mov
das
xor
cmp
cmc
fisubrl
out
cld
mov
scas
pop
cmp
addb
loope
or
push
loop
push
cltd
and
int
js
jae
icebp
repz
sub
push
jb
mov
divb
loop
ds
push
dec
jns
push
jg
jecxz
testl
and
lods
xchg
inc
and
xlat
xchg
xlat
cwtl
lcall
dec
add
pushf
sub
bound
push
iret
iret
pop
inc
ret
sbb
inc
orb
xchg
in
or
repnz
push
cwtl
adc
sub
mov
jle
xchg
adc
add
cmp
dec
sbb
dec
fcomps
jp
int
cli
mov
pop
fsubl
ds
cmp
gs
pop
incl
and
test
adc
mov
xchg
adc
inc
inc
imul
and
outsb
mov
bound
lahf
outsb
sysexit
jae
ret
call
pusha
cmp
cld
mov
ficoml
out
das
fwait
out
inc
movsl
mov
imul
adc
or
mov
adc
push
push
test
loope
imul
je
mov
clc
xchg
mov
inc
mov
addr16
xor
mov
scas
mov
in
shrb
cmp
xchg
leave
jmp
movups
in
sbb
cwtl
sbb
movsb
add
mov
and
or
pop
test
and
stc
jnp
rcll
xor
mov
xchg
ss
inc
loope
gs
mov
inc
cmp
and
push
popa
mov
ja
jecxz,pt
inc
push
pop
mov
push
push
lcall
xor
scas
test
adc
pop
loop
cmp
add
or
jge
add
pop
push
dec
sub
xor
loopne
jno
push
adcl
sbb
mov
xor
xor
fstps
cmp
inc
mov
push
ja
sahf
push
or
sub
fcompl
out
cltd
dec
push
jg
mov
mov
repz
cmp
ljmp
ja
adc
sbb
mov
es
negl
and
pop
cli
pop
mov
mov
pop
xlat
test
push
sti
dec
xchg
and
sub
sbb
mov
or
int3
xchg
xchg
push
inc
inc
add
add
add
mov
jno
cmc
divl
mov
pushw
testl
add
cmpsl
xchg
mov
cmpsl
mov
ficoms
pop
pop
dec
cltd
outsb
test
stos
cmp
jne
add
push
mov
fldcw
sbb
mov
test
pop
ret
and
add
inc
mov
ljmp
mov
mov
sbb
mov
popf
lock
push
nop
xchg
push
and
gs
dec
cmp
cmpsb
and
adc
push
mov
pusha
sbb
push
jl
call
cmp
dec
bound
ds
lahf
daa
in
push
sub
mov
ror
je
mov
mov
lock
cs
or
xor
das
fdivrl
daa
push
arpl
push
xor
sub
into
xor
xor
mov
jl
icebp
dec
and
out
dec
shll
sahf
pop
sti
xor
push
cmp
sub
imul
mov
or
sbb
std
and
std
int3
jb
pop
xchg
cmpsb
cmp
insb
push
jge
addr16
mov
daa
adcl
dec
testl
jo
ds
inc
mov
dec
ljmp
xchg
mov
jns
es
xchg
testl
loop
jo
mov
fdivrp
mov
mov
xor
fsubl
test
and
loope
lods
sbb
sub
pop
mov
mov
imul
aad
cmpsb
sub
mov
scas
repz
xlat
cli
inc
imul
xlat
pop
pop
push
push
xlat
jne
mov
test
jo
push
lds
jmp
cmp
and
fsubrl
jnp
imul
push
add
add
pop
or
ficoml
or
subl
dec
sub
icebp
cs
inc
repnz
loopne
add
jecxz
jb
sub
push
jnp
xor
mov
xchg
sti
dec
mov
mov
jl
fstpt
adc
xchg
ljmp
mov
out
mov
mov
pop
leave
outsl
jno
jp
ret
cmp
mov
popa
jo
sub
lea
add
pop
aad
fstl
sub
out
add
ret
in
mov
dec
cmp
push
dec
sbb
ret
arpl
lahf
inc
push
sub
add
push
aaa
sub
shlb
lcall
pop
jge
cld
jo
mov
mov
and
pop
lret
gs
dec
pop
pop
inc
sbb
push
mov
ja
jno
ljmp
ds
ret
movhps
push
xor
or
jp
push
jl
in
ja
imul
loope
sub
shlb
xor
repnz
mov
adc
aaa
pop
pop
dec
push
jnp
mov
ja
sub
ret
xchg
mov
xchg
cmp
add
lods
testl
xorb
cwtl
or
jo
mov
dec
cmp
aam
stc
mov
dec
insb
std
pop
jae
punpcklbw
imul
or
and
inc
mov
in
sti
mov
mov
movsb
cmp
les
int
push
ja
push
dec
adc
lret
leave
scas
shlb
dec
jnp
sahf
inc
mov
push
push
dec
push
enter
fdivl
mov
out
jnp
popf
mov
cltd
sub
xchg
jge
fld
cmp
cmp
inc
push
sbb
dec
inc
fdiv
mov
dec
push
sbb
push
pop
push
lea
decb
loopne
fwait
in
dec
dec
pop
insb
adc
push
push
xor
or
pop
push
jnp
dec
pop
pushf
jge
xchg
bnd
mov
sbb
in
sbb
mov
imul
movsb
out
mov
int3
sbb
cmp
lods
test
mov
adc
xor
pop
outsb
fcmovnb
dec
pop
lock
push
mov
popa
jno
cmpsb
inc
sub
xchg
popf
mov
inc
outsb
xchg
xor
imul
ss
add
and
mov
xchg
inc
xchg
in
pop
adc
jg
sbbl
xchg
mov
dec
inc
push
sub
ret
cmp
in
insl
pop
adc
adc
gs
in
sub
pop
addr16
and
mov
pop
shr
mov
cmp
icebp
pop
xor
jne
xchg
cmp
fildll
push
sti
inc
sbb
int3
bound
mov
add
add
add
sahf
xchg
inc
fisttps
lahf
int
push
setb
out
adc
add
repz
add
stos
lret
adc
popa
lret
mov
push
insb
sub
in
add
inc
sbb
pop
bound
sub
xchg
push
pop
out
mov
sbb
xor
lods
xchg
andb
repnz
divl
aad
push
cld
repz
fldl
stos
fists
arpl
mov
ret
iret
mov
xchg
mov
lock
leave
enter
fwait
sbb
sbb
stos
jo
xchg
sbb
xchg
pop
js
insb
mov
dec
xor
loopne
sbb
push
pop
repnz
mov
push
push
out
add
xor
adc
cmpsl
dec
hlt
in
cs
loope
ss
gs
push
outsb
in
sub
inc
sbbl
test
pop
nop
and
xor
mov
add
cld
sub
les
shll
push
mov
pop
or
cmp
jno
icebp
push
mov
sahf
jecxz
add
or
add
ret
daa
stc
fucomip
fmulp
out
gs
mov
push
cmp
stos
cmp
je
mov
push
notl
sbb
mov
cmp
xchg
in
je
sbb
jbe
call
dec
mov
and
gs
js
push
mov
dec
xchg
jns
adc
or
test
and
mov
or
iret
mov
lds
icebp
lea
jo
call
jnp
xlat
cwtl
inc
out
dec
xlat
cmp
sub
lcall
mov
sbb
shrb
in
test
test
orb
jle
cltd
xchg
jg
fstpl
mov
pop
sbb
pop
iret
mov
addl
inc
test
xchg
or
loop
xor
sub
jp
pop
adc
mov
mov
aad
ljmp
rcr
jbe
mov
aam
outsb
insl
push
adc
inc
and
movsb
leave
jo
es
dec
mov
mov
adc
dec
xchg
pop
out
mov
stos
and
das
mov
push
enter
ja
inc
add
outsl
add
dec
ja
test
pop
int
jno
adc
inc
push
jne
jns
mov
stc
ss
daa
pop
nop
or
add
movups
dec
push
mov
inc
dec
add
push
mov
mov
adc
cmp
out
xlat
pop
mov
push
in
xchg
scas
mov
lods
sbb
addl
mov
lret
sbb
test
into
data16
jb
lret
in
cmp
clc
jae
outsb
in
gs
push
cmp
nop
jle
mov
mov
mov
dec
lds
repz
aaa
shrl
mov
push
push
dec
push
imul
mov
shll
push
mov
repnz
push
pushf
inc
pop
fadds
pop
pop
mov
pop
lahf
inc
fucomip
fisubs
mov
inc
cmp
movsb
push
push
aad
push
loopne
adc
pop
in
in
in
add
stos
adc
stc
pop
or
insl
pop
subb
les
or
out
sbb
ss
aam
ret
sbb
inc
mov
jge
dec
pushf
push
add
mov
push
aad
ret
cmc
cwtl
imul
lds
or
adc
stos
jge
int3
mov
xor
sub
into
add
ret
xchg
or
lret
jg
into
mov
add
xor
sti
mull
daa
sbb
ja
sbbl
std
popf
inc
sar
adc
in
stos
xlat
bound
xchg
stc
and
je
push
arpl
in
adcl
xchg
fisubl
out
div
adc
in
scas
sti
test
mov
fisttps
fdivrs
aad
sub
les
imul
loop
adc
xor
xchg
int3
fsubl
je
fmull
lods
add
push
arpl
sbb
or
mov
test
cmpsl
bound
jge
das
xchg
mov
push
call
add
in
sbb
fisttpll
jne
jnp
hlt
cs
sbb
pusha
push
pop
out
fildll
lock
int
lock
lea
push
adc
xchg
xchg
daa
dec
mov
adc
push
test
xchg
test
push
jne
xchg
inc
push
or
push
pop
push
loope
dec
xlat
nop
xchg
movsb
aad
or
mov
ss
loopne
scas
jae
adc
ds
jb
mov
sub
insb
lea
insb
js
lahf
fwait
dec
push
cwtl
push
fsub
inc
fimuls
xchg
jecxz
pop
dec
add
add
add
call
aas
popa
adc
subl
loop
add
add
add
add
mov
cmp
and
out
es
jmp
in
test
and
or
push
cmp
es
push
pop
or
syscall
cs
jmp
mov
push
aad
mov
roll
sbb
fmull
push
or
cmp
sti
mov
sbb
int
fisubs
mov
push
mull
loop
arpl
pop
int3
in
ljmp
mov
fxam
sub
insb
bound
clc
jns
ret
mov
dec
stos
loope
push
movsb
hlt
fisttpl
and
or
lret
ret
fistpl
std
pop
movsb
sbbl
mov
daa
int
cld
mov
loopne
sub
lcall
jmp
xor
movsl
jb
fildll
adc
fsubr
sahf
adc
cmp
iret
and
cmp
jg
mov
pop
push
lahf
cltd
fnstenv
js
cmp
xor
inc
sub
pushf
mov
inc
movsl
cmp
xor
inc
cld
push
mov
decl
xchg
scas
mov
push
jp
or
pop
sbbb
rclb
es
mov
jge
dec
rolb
es
mov
xchg
mov
push
jo
dec
mov
push
push
lret
mov
add
adc
and
sub
pop
fwait
std
add
in
sbb
adc
pushl
ret
js
jns
mov
test
adc
cmp
daa
jmp
nop
aaa
or
pop
iret
jo
mov
adc
mov
xor
pop
fnstcw
aas
xor
icebp
push
push
push
mov
shlb
and
push
mov
or
push
adc
pop
iret
xchg
push
stc
aas
pop
cmp
dec
add
mov
cmp
aam
test
hlt
test
pop
push
sub
sbb
inc
pop
sub
mov
mov
bound
faddp
adc
pop
scas
fcomps
add
pushf
popa
push
ljmp
push
movsl
or
pop
je
inc
push
mov
inc
adc
adc
cltd
inc
mov
push
call
cli
popa
add
and
stc
push
sahf
sub
es
fidivl
xor
mov
lock
jo
repz
stos
rcll
or
daa
sub
jne
mov
cmp
lret
mov
pushf
out
inc
bound
jnp
or
sbb
fiadds
es
mov
outsb
les
dec
fs
mov
fwait
jo
fwait
clc
jae
inc
aas
xlat
sbbb
nop
or
sarl
out
les
xor
pushf
mov
stc
mov
lock
cs
arpl
push
jae
aam
mov
les
icebp
out
jecxz
into
nop
mov
call
inc
jge
jno
shl
out
cli
cmp
lods
lret
jae
pop
aaa
hlt
scas
rcrb
xchg
out
xchg
xchg
mov
and
cmp
loope
mov
test
xor
xor
rcrl
out
sti
ss
mov
stc
push
lret
cmpsb
in
jb
std
data16
dec
mov
outsl
pop
jb
add
enter
addl
pusha
js
outsl
stos
cmpsb
pop
sub
and
jge
lock
mov
rcrl
xchg
ja
push
lods
testb
mov
xor
lret
fiadds
and
mov
adc
mov
insl
fnstsw
pop
cmpsl
inc
arpl
cmpsb
cmpsb
mov
fildll
lock
mov
sbb
lahf
mov
in
jl
scas
mov
dec
lcall
mov
mov
stos
fldt
adc
push
or
pop
shl
mov
lretw
test
mov
ret
call
fildl
dec
add
and
rcrl
cwtl
mov
push
lds
icebp
inc
mov
adc
pop
push
sub
hlt
cmp
sbb
dec
into
mov
or
xchg
xlat
lret
mov
jno
jnp
fstpl
inc
leave
packsswb
cwtl
pop
cmp
jp
jp
xor
sbb
or
popf
xchg
insl
int3
nop
enter
fisttpl
pop
fnsave
mov
push
aam
and
pop
adcl
cmp
xchg
sbb
adc
fdivs
outsl
data16
sub
lea
jb,pn
mov
pop
insb
loope
xor
and
sahf
popf
push
js
jp
add
add
fidivrs
int
daa
fsubl
add
add
xchg
sbb
xchg
mov
adc
lods
dec
push
je
ret
mov
ss
mov
push
dec
add
mov
push
pop
cs
and
loope
andl
jmp
xchg
inc
inc
sub
mov
inc
aaa
sbb
sarl
addr16
mov
and
sub
std
rolb
lock
mov
mov
lods
adc
jge
xchg
mov
inc
mov
imul
sub
loope
mov
rcrl
outsl
push
cltd
jo
ret
insb
out
mov
pushl
addr16
push
pop
push
sub
pop
pop
ret
xchg
stc
sbb
and
cli
es
dec
mov
sbb
mov
pop
aad
and
mov
mov
or
aaa
push
inc
clc
or
sbb
leave
lock
and
lods
lret
popa
cmpsb
pusha
decb
jp
fistps
mov
shlb
inc
ret
out
inc
shll
jns
outsl
pop
cld
cwtl
sbb
cmp
shrl
add
mov
test
lahf
dec
pop
jg
adc
inc
push
push
sub
sub
mov
ljmp
pop
dec
fisubl
push
das
int
cmpsl
bound
dec
sbb
pusha
test
cmp
popf
sub
and
mov
jae
xor
int3
dec
aad
popa
jmp
mov
mov
adc
or
lret
inc
or
movsb
jb
inc
insb
mov
test
push
lret
das
xchg
lcall
or
shr
sub
cmp
lcall
mov
dec
inc
xchg
icebp
add
push
std
rcrb
leave
push
jmp
dec
sub
imul
inc
push
and
pop
ja
push
aas
jno
jnp
mov
push
adcl
mov
lods
aam
test
add
dec
push
inc
jmp
decl
pop
movsb
and
dec
enter
jl
out
cmp
xchg
push
ds
jbe
mov
rcrl
pop
cltd
cs
jmp
bound
adc
sti
jno
inc
scas
cmpsl
ret
arpl
bound
cli
icebp
mov
movsl
stc
imul
cli
in
mov
mov
pushf
mov
mov
jo
rclb
mov
pop
imul
push
ret
shlb
testl
cwtl
xchg
cmp
orl
icebp
push
xchg
adc
jb
xlat
insb
repz
push
pop
sti
aas
stos
enter
add
jne
out
shl
in
inc
or
add
and
shlb
out
sub
in
data16
mov
shll
sub
pop
jg
push
sti
insb
sbb
leave
gs
mov
adc
and
int
stos
sub
push
jp
mov
inc
cmp
sbb
test
xchg
and
daa
jb
loop
test
adc
mov
mov
cmp
adc
xor
jp
std
xchg
adc
fcmove
pop
push
mov
ds
shll
jbe
iret
or
sbb
sub
pusha
xchg
xor
add
ret
adc
jns
add
cli
shll
push
nop
aam
mov
inc
sbb
jecxz
cld
pop
jecxz
insb
jge
mov
xchg
cmp
cmp
fsts
mov
push
cltd
cld
xor
sbb
sub
cmpsb
mov
ret
cltd
fisttpl
test
inc
xchg
mov
jb
cmp
movsb
fisttpl
mov
xchg
addb
cmpsl
aad
out
xor
nop
jg
pop
inc
lret
ret
outsb
dec
xor
aas
out
mov
inc
imul
add
adc
inc
cmp
and
pusha
and
shrl
pop
push
ficomps
mov
loope
in
add
in
inc
and
pop
decl
sbb
loop
mov
sbb
pop
lock
aas
or
xor
scas
cmpsl
push
sbb
jns
or
mov
ss
push
mov
cmp
lret
push
adc
cmp
push
xchg
mov
sti
or
mov
cld
jge
ljmp
mov
in
cld
jno
inc
sbb
xchg
aad
pusha
cmp
lret
inc
fildl
jae
adc
jge
mov
xor
insb
insl
jecxz
push
test
in
clc
add
add
add
std
mov
push
jg
mov
ljmp
add
mov
pop
cmp
in
pop
orb
push
loopne
loope
ja
out
out
pop
ds
loopne
scas
xlat
loope
dec
mov
inc
mov
sub
or
xchg
insb
push
addl
stos
and
pop
mov
insb
sbb
lahf
xor
pop
inc
jl
lods
popf
mov
dec
jmp
pop
inc
incb
in
inc
xor
and
imul
lock
inc
xchg
lea
loope
fidivl
test
cmpl
clc
popa
mov
cmpsb
ret
xchg
sub
or
dec
pop
movsb
sar
mov
lret
and
fadd
jecxz
xor
out
jbe
add
inc
sbb
das
das
xor
daa
xor
repz
imulb
std
xor
lret
adc
adc
push
adc
xorl
dec
jg
cmp
push
jecxz
adc
lret
push
mul
ret
xchg
add
jmp
and
and
inc
and
call
xchg
adc
ljmp
ret
std
add
bnd
sub
sub
mov
ljmp
mov
pop
int
rclb
gs
in
clc
ret
xchg
xchg
mov
sbb
mulb
outsb
mov
lcall
mov
sbb
xor
mov
loop
lods
push
push
cmp
xor
popf
and
arpl
test
dec
int3
push
ja
mov
in
js
mov
push
dec
inc
mov
mov
sbb
clc
mov
ds
xchg
dec
or
xor
cmp
daa
mov
push
out
add
cs
lret
xchg
mov
push
fcomps
sbb
push
xor
xlat
lret
sti
movsb
mov
imul
jns
test
insb
popf
fdivrl
lea
repz
xor
xor
fldl2e
out
or
pop
lahf
ret
push
rorl
adc
pop
fsubs
lods
pop
mov
mov
inc
cmpsl
loop
push
inc
mov
lret
adc
push
mov
repnz
adc
mov
pop
mov
push
loopne
icebp
mov
or
adc
lea
testl
or
cmp
push
scas
scas
push
sub
cmp
xor
jae
nop
cwtl
movsb
or
lcall
sahf
cmc
js
fsubrl
dec
ficompl
ja
mov
fisttps
repz
xchg
push
out
mov
mov
jno
push
into
mov
lea
add
or
pushf
shrl
mov
rolb
cmp
fistpl
sbb
es
js
or
stc
ror
push
push
imul
jns
fidivl
rclb
dec
pop
fbstp
mov
or
shlb
lock
push
imul
cltd
outsb
rclb
mov
popf
sbb
out
push
xor
scas
and
xor
inc
movsb
pop
mov
jae
dec
movsl
call
scas
push
cmp
or
loop
pusha
lods
mov
hlt
jne
bound
dec
add
pop
dec
ja
adc
mov
leave
inc
ljmp
sbb
pusha
mov
mov
cmpsl
dec
mov
das
ss
out
aaa
mov
test
cmc
popf
inc
pop
mov
lret
jge
add
fndisi(8087
mov
cmp
jo
jge
xchg
aaa
mov
add
adc
jp
xor
cld
mov
sbb
mov
mov
jb
gs
cmpsb
mov
mov
jg
fidivl
sub
mov
mov
in
xchg
inc
sub
push
sub
nop
mov
mov
outsb
sbb
int3
or
sahf
inc
insl
sti
mov
enter
das
dec
lods
xchg
or
jg
add
rcrl
mov
inc
je
dec
dec
addl
mov
push
cmpb
xchg
pusha
sub
stos
pop
cli
mov
cmc
pop
cmpsl
dec
out
pushf
jg
cmc
mov
fdivr
mov
push
inc
dec
inc
mov
repnz
out
jecxz
pop
mov
dec
xchg
xor
and
sbb
inc
push
push
arpl
lea
jp
xchg
das
cld
lcall
adc
jge
xlat
test
in
pop
scas
outsl
sbb
mov
roll
sub
insl
pop
jecxz
cmpl
test
je
jb
jns
sbb
aad
push
out
inc
fadd
or
mov
shll
push
adc
fwait
popf
jp
or
add
add
inc
push
lret
in
out
dec
add
add
add
add
add
out
lds
mov
hlt
out
pop
and
fdivrs
int
mov
bound
shll
or
fidivl
sbb
lret
je
xor
or
and
aaa
mov
sbb
adc
push
pop
and
mov
pop
outsb
pushf
push
lahf
icebp
int3
fnstcw
cmpsl
sub
mov
sbb
push
cmpsb
mov
ret
xchg
out
push
mov
enter
or
cmp
fldt
mov
xor
xchg
cld
lret
mov
mov
scas
test
dec
mov
push
aam
dec
mov
es
addr16
mov
jp
in
les
cmc
mov
dec
jbe
xchg
les
fbld
movsl
shlb
es
rclb
mov
push
pcmpeqd
in
sub
or
in
or
ja
icebp
jl
f2xm1
in
xchg
pop
in
sub
outsl
or
mov
dec
xor
push
cli
add
orb
sub
loopne
xor
push
push
ds
insw
shll
push
add
mov
inc
daa
and
movsl
mov
jne
mov
cltd
cmp
inc
in
jge
lods
cs
xlat
andl
mov
jl
push
int3
pop
adc
and
into
pushf
push
sarl
fcoms
jp
pop
inc
jmp
test
daa
mov
jbe
cmp
inc
add
mov
xchg
sub
jnp
movsl
push
loopne
mov
sbb
pop
cmp
mov
in
jns
xlat
jle
mov
sub
call
xchg
shlb
cs
adc
dec
icebp
ja
lock
in
test
jnp
jo
aad
out
pop
sbb
movsl
pop
push
adc
xchg
fiaddl
movsb
xchg
scas
fsubs
xchg
and
mov
mov
push
or
xchg
lods
xor
ljmp
mov
or
popf
push
loopne
push
fidivrs
and
jl
cmp
cmp
or
sub
dec
les
xchg
sbb
push
ja
add
jmp
fldcw
mov
xchg
pop
and
inc
rol
pop
xor
add
mov
jl
mov
pop
cwtl
jge
push
aas
imul
push
xchg
cmp
xlat
dec
hlt
jp
push
hlt
dec
cmp
lock
jnp
popf
xorl
jns
xor
fdivrl
xchg
fidivrl
fisttpl
jo
push
test
daa
repz
enter
bound
inc
inc
dec
negb
inc
test
jae
cmc
sbbb
fcompl
cli
xor
mov
sti
mov
ss
lock
xchg
fldt
imul
cmpsb
sarl
xlat
xor
fyl2x
and
xorl
mov
arpl
xlat
push
imul
mov
push
mov
call
bound
rcll
stos
iret
xchg
out
mov
mov
mov
mov
lock
in
push
sbb
adc
jbe
or
sahf
xchg
jne
dec
mov
sub
in
pop
push
stos
push
clc
out
push
push
jl
cmpsb
xlat
mov
mov
std
pop
nopl
and
scas
sbb
ret
fdivl
popf
add
imulb
cmp
mov
pop
mov
fwait
or
addl
push
push
or
lea
roll
inc
sub
cmp
test
leave
movsl
push
add
xchg
testb
lahf
xor
into
pusha
lds
hlt
cmpl
insb
bound
sbb
sbb
subl
push
rclb
scas
jb
addr16
out
je
cmpsl
scas
das
ret
xchg
dec
mov
fs
push
popf
adc
arpl
pusha
mov
and
mov
pop
inc
ja
rcr
fisubl
fs
jns
cmp
fcompl
sbb
jg
in
outsb
mov
std
ljmp
cmc
adc
pop
add
pop
or
jno
imul
mov
mov
pushf
jae
addr16
loop
ss
inc
hlt
iret
xchg
pop
add
int
inc
xlat
sub
sub
icebp
or
out
sbb
popf
test
jp
notl
xchg
loopne
sub
inc
outsl
pop
inc
jmp
cmpsl
lds
mov
xor
inc
clc
repz
mov
add
add
add
je
std
mov
sarb
adc
add
add
add
jle
lret
pop
test
lock
mov
fmull
cmp
mov
and
sbb
loopne
addb
ret
je
xchg
test
fcomip
aas
cmp
adc
cld
xchg
fisttpll
pop
xchg
mov
dec
int3
mov
push
sahf
inc
mov
pop
sub
jge
inc
inc
mov
sbb
ficoms
sbb
sahf
add
mov
fdivrl
scas
add
sub
jns
mov
mov
or
xor
arpl
add
movsb
push
and
stos
scas
push
dec
xor
ficompl
adc
inc
mov
mov
mov
pop
xlat
xchg
fdiv
mov
adc
scas
std
mov
mov
sbb
pop
push
jl
decl
lcall
jnp
sub
add
sbb
out
jb
std
jb
aad
rol
test
lods
rclb
stc
ret
or
cmpsl
mov
and
adc
adc
mov
pushf
mov
lds
jnp
pop
repz
jge
loop
fldt
push
cld
fcmove
stc
pop
negl
mov
aam
pop
cs
lea
push
fnstcw
xor
insb
insb
sti
xor
fldl
push
fdivrl
add
or
shll
mov
mov
cld
mov
cmp
cmpsl
jmp
dec
lret
andl
stos
push
js
in
push
icebp
jle
fsubrs
cmp
sbbl
cmp
jge
leave
lods
add
mov
cmc
adc
and
xor
push
sahf
popf
cmp
insl
xor
pop
sti
pop
int
ljmp
lea
jo,pn
popf
pop
mov
fstpt
addr16
pusha
cli
into
fst
lahf
movsl
aad
fs
jbe
sbb
xchg
cmp
inc
lods
push
dec
push
ret
fdivs
lods
mov
sti
jb
or
inc
sbb
dec
inc
xchg
inc
mov
scas
xor
pop
loop
adc
into
lret
sbb
imul
pop
imul
ds
int
and
iret
int3
fwait
push
or
inc
js
rorl
xor
sub
mov
test
xchg
sbb
mov
sub
scas
jl
test
jae
jmp
fs
pop
xor
xor
cmp
lods
xchg
jns
jp
insb
push
repz
int3
dec
out
xchg
shll
mov
jnp
or
push
or
push
xor
xchg
rdpmc
lea
in
in
mov
repz
out
cltd
std
imul
call
inc
out
cs
loop
inc
cmpsl
call
in
and
pop
lahf
xor
xchg
xchg
xchg
ret
xchg
testl
aaa
fcmovnu
outsb
aaa
sub
xlat
clc
jne
xor
jnp
or
stc
popa
jg
xlat
lock
out
and
mov
mov
adcb
fidivs
push
cmpsl
aad
xor
mov
mov
insl
push
cmp
sub
bound
aad
and
mov
sub
fidivrs
dec
mov
or
cs
cli
add
and
jecxz
loop
add
popa
addr16
pop
jle
xor
mov
inc
xchg
pop
test
out
add
push
aam
cmp
and
das
shrl
mov
jp,pn
cmp
or
sbb
int3
int3
adc
arpl
push
jmp
xchg
mov
int3
fsubr
ss
add
pop
sbb
negb
lods
sub
sub
jno
mov
pop
jge
jl
or
xor
outsb
mov
mov
and
clc
ja
fs
add
mov
xchg
andl
imul
fisubrl
in
pop
pop
scas
pop
mov
adc
fisttps
mov
push
mov
jb
xchg
jge
inc
mov
sahf
test
add
adc
out
lret
cmpsb
int3
dec
push
adc
sub
xchg
add
addb
enter
fsts
pop
cmpsl
xchg
jne
xor
pushf
sbb
outsl
scas
mov
repz
gs
jle
jg
or
nop
repz
cmp
mov
out
and
xchg
and
adc
mov
sub
inc
cmp
pop
mov
sbb
in
xor
cmpsl
mov
imul
mov
push
shl
add
inc
aad
repnz
jb
adc
in
mov
and
dec
mov
or
add
add
add
in
in
or
aad
ret
sbb
add
add
add
bswap
mov
pop
mov
dec
pushf
cmp
cltd
xlat
push
xchg
sub
xor
cmp
jb
mov
dec
jo
xorl
adc
bound
xchg
mov
add
mov
mov
test
inc
ds
mov
push
pop
pop
ds
enter
jbe
cmc
xlat
dec
sub
iret
push
sub
flds
push
ret
lea
mov
push
add
push
sbb
jp
jno
and
sub
sarb
pop
push
mov
rcrl
xchg
jo
cwtl
test
jmp
cwtl
out
and
ret
mov
inc
mov
xchg
dec
jle
jne
sbb
xor
xchg
add
stos
ret
mov
les
pop
mov
pop
lods
dec
out
pop
xlat
hlt
shr
les
dec
inc
stos
jecxz
repnz
cmc
imul
cmp
rcrb
leave
sbb
push
sub
test
mov
add
jne
xor
jno
aas
addr16
push
push
int3
pusha
loope
push
int
cmp
jge
jnp
andb
data16
sbb
fdivs
inc
out
dec
xchg
jb
cmc
xor
jno
orb
push
push
mov
mov
sub
inc
adc
and
push
repz
xor
addr16
insl
inc
aad
hlt
cmp
cld
jge
push
lods
inc
dec
ja
je
hlt
sti
mov
lods
rcrl
fsub
xchg
call
decb
sbb
push
repnz
sarl
and
loop
cmp
lea
xchg
test
inc
leave
pushf
xchg
inc
stc
into
pop
das
mov
xor
cs
testl
pop
shrb
lods
adc
loop
outsl
pop
stos
sbb
imul
ljmp
andps
es
and
or
push
sub
out
rcll
cltd
movsb
leave
stos
nop
jmp
aaa
lock
shll
mov
or
jbe
mov
fisubs
jmp
cmp
sbb
enter
add
ret
mov
imul
mov
cmpsb
cmpsl
lret
jns
arpl
lods
repnz
mov
xchg
lea
push
imul
popf
nop
pop
ret
or
add
adc
dec
jmp
pop
ret
push
mov
jo
jge
out
in
sahf
xchg
mov
lahf
rcrl
aas
cmp
cmp
mov
cmp
repnz
xor
ljmp
pop
sbbb
cmp
cmpsl
lds
in
jo
pop
cmp
sbbb
insb
pushf
fwait
mov
fsubrl
lret
outsb
mov
lret
je
stos
mov
ret
mov
mov
std
sbb
out
dec
cmp
stos
mov
fmull
fldcw
fcomps
ret
mov
dec
cmp
shrb
int
dec
xchg
pushf
aam
add
pop
cmp
insl
xchg
lea
lds
mov
rcrb
sbb
mov
insb
adc
and
sbb
inc
or
int
out
loope
arpl
cmp
xchg
fsubr
mov
xchg
mov
fdivrl
mov
xchg
lock
adc
jbe
or
pop
lret
ja
outsl
sbb
cli
jbe
inc
jns
sub
inc
jns
xchg
stc
jnp
stos
shlb
cmpb
ret
in
push
gs
xorb
sarl
rcrl
fsubp
das
mov
pusha
lods
loopne
xchg
cltd
mov
repz
inc
aas
in
shrb
xchg
adc
push
cmp
cltd
pusha
ffreep
mov
pusha
leave
cli
loopne
ror
dec
sub
sarb
or
lahf
mov
stos
andl
add
notb
jnp
lock
or
cmp
xor
xchg
dec
fsubrs
rcr
add
xchg
fidivl
push
in
dec
pop
imul
sbb
out
jns
xchg
movsb
sub
or
jp,pt
fnstsw
add
dec
or
xor
leave
jmp
cmp
int3
sbb
xlat
pop
sarl
mov
or
aam
stos
enter
jnp
fnstsw
jb
jnp
pop
xlat
xchg
jnp
arpl
and
test
xchg
cmp
xchg
add
outsb
ja
xchg
cmpsl
mov
mov
push
pop
mov
mov
xchg
orl
in
cmp
jns
dec
test
xor
sub
imul
cmpb
pop
cmp
dec
xor
loopne
mov
pop
imul
sbb
add
lods
test
gs
fnstcw
mov
add
repz
add
inc
lods
outsb
out
popf
insb
nop
xchg
sbb
mov
cmc
xor
movsb
xor
mov
fnstenv
push
cmpsb
ja
test
mov
pop
faddl
icebp
push
push
mov
sub
out
add
push
lret
gs
sahf
xchg
xchg
lea
add
pop
testb
add
pop
adc
xchg
test
pusha
test
pop
addr16
pop
inc
rclb
xchg
adc
jle
mov
cmp
imul
sar
movsl
mov
add
leave
xor
mov
fs
jmp
pop
sldt
xchg
cmpsb
test
xchg
push
jg
push
push
jbe
arpl
enter
xor
dec
cmp
aaa
std
sbb
mov
jl
and
nop
leave
fsubl
cmpsl
mov
sbb
sbb
add
jp
sbb
sahf
fistpll
dec
testl
push
mov
xadd
ror
add
fisttpll
and
clc
movsb
mov
xchg
cmpsb
sbb
push
pusha
sbb
lods
dec
sub
dec
stc
push
popf
das
test
sti
roll
stos
into
fldenv
dec
loopne
xlat
jecxz
dec
loop
fsubs
test
dec
sahf
ja
movb
xor
in
nop
xchg
test
pop
jno
mov
xor
and
dec
cmpsl
xchg
aas
outsl
loope
lea
xor
fstl
int3
jmp
cs
xor
dec
stos
or
scas
inc
push
adc
mov
jmp
js
movl
insl
jns
leave
nop
pop
mov
pop
call
ds
pushf
mov
das
xchg
lds
repz
and
sub
push
pusha
cmp
mov
scas
adc
mov
xchg
cltd
mov
les
xchg
test
daa
inc
daa
cmp
sbb
and
insb
fucom
in
dec
test
xor
jecxz
sahf
into
jle
mov
inc
shlb
adc
cld
push
mov
frstor
pusha
push
gs
in
ljmp
cmp
dec
sub
imul
jge
shlb
arpl
mov
sub
cld
sbb
or
jae
js
les
mov
mov
pop
nop
jae
dec
sub
cld
add
jae
push
jb
stc
ret
pop
jne
in
jecxz
movsl
shll
leave
in
sbb
dec
mov
shrl
xor
ret
push
jmp
jmp
push
adc
xor
insl
fcmovnbe
rclb
sub
pushf
sbbl
fs
repz
aaa
pop
cmc
fisubs
insb
sub
or
pop
or
xchg
pop
cs
or
push
shrl
imull
adc
ds
mov
sbb
aam
push
mov
push
fs
mov
aas
xchg
scas
sarb
cmc
mov
pop
mov
lea
mov
std
cmc
xchg
mov
sti
fdivrl
adc
jle
xchg
addr16
xchg
xor
outsl
ret
pushf
mov
ss
pop
mov
out
adc
lds
jmp
int3
push
pop
mov
jmp
push
add
sbbb
pop
test
sub
movsb
cmp
and
cmpsb
adc
adc
inc
popa
in
subl
lods
mov
rclb
iret
fwait
ret
mov
push
add
imul
cmp
and
lds
xor
pop
pop
rorb
pusha
xchg
mov
or
mov
in
pop
xchg
inc
push
insl
cmpsl
and
lahf
push
iret
dec
mov
imul
cmp
mov
das
lcall
inc
imul
sbb
mov
mov
int3
sub
int
mov
lods
adc
or
mov
mov
shl
jno
xchg
mov
dec
mov
stos
push
jb
mov
cmp
mov
inc
sti
paddsw
dec
popf
jg
popf
xchg
repz
test
fdivs
scas
mov
add
mov
xor
push
mov
ficoml
fucomi
rclb
pop
lds
cmc
add
les
sbbl
fimuls
fstps
push
dec
es
push
mov
jmp
sahf
stc
mov
pop
jo
jo
add
xchg
or
loope
mov
movsb
xchg
mov
lcall
out
mov
dec
mov
jle
lret
lods
bound
cmp
insb
add
notb
push
aaa
je
dec
lods
jbe,pn
adcb
add
add
je
jne
pop
outsl
out
aaa
jae
and
add
repz
add
fninit
incb
pop
sbb
roll
loopne
fsts
lahf
jmp
loope
call
push
dec
push
sub
push
jmp
jne
cwtl
mov
cmpb
jmp
je
add
ret
int3
and
test
repz
add
mov
xchg
repnz
sub
sbb
imull
mov
push
aas
inc
sarl
dec
lock
in
outsl
dec
loope
sahf
jmp
mov
push
adc
in
ja
dec
insb
loop
test
outsl
testb
imul
mov
dec
ljmp
push
xchg
movsb
xor
push
cmp
iret
mov
lcall
jmp
sub
sbb
scas
popa
or
in
mov
stos
mov
mov
jle
push
jne
out
movsb
gs
cmc
dec
push
mov
or
test
mov
popf
add
fiadds
out
lds
push
adc
int3
loope
lret
dec
cltd
adcl
jb
dec
dec
inc
pop
scas
ja
mov
cmp
out
nop
loop
es
mov
mov
push
scas
out
jbe
pop
int3
or
imul
push
mov
lahf
add
mov
sbb
mov
sbb
out
insb
xor
jno
mov
lahf
push
int3
pop
fadds
fcmovb
pop
mov
cmp
into
pop
push
mov
xchg
dec
stos
xor
push
insl
sbb
cltd
add
jle
cmpsb
cmpsb
push
loopne
or
push
mov
scas
jns
sbb
cmpsl
test
jmp
xor
cmp
icebp
das
sub
mov
mov
push
push
ja
pop
ret
xchg
pop
popf
ljmp
cmc
cli
cld
and
addr16
je
in
xchg
jp
mov
mov
mov
shrl
es
push
mov
je
lahf
jnp
cmp
dec
fldln2
imulb
xor
je
aad
adcb
es
pop
js
addl
sti
sub
lret
mov
rcrb
xor
add
imul
jge
shlb
sbb
test
out
popf
cmp
in
out
xchg
mov
cs
stos
push
add
inc
fiaddl
mov
mov
aas
pinsrw
or
mov
es
loope
out
repnz
ds
xlat
cltd
popf
cmp
cmp
scas
out
push
adcl
jns
fldt
bound
outsb
into
adc
sub
imul
das
dec
mov
add
xchg
mov
inc
sbb
xchg
ljmp
mov
xchg
mov
push
mov
loope
lahf
xor
xchg
rolb
stos
loop
adc
test
rcrl
pop
sahf
adc
dec
sbb
iret
in
mov
xchg
movsl
lods
xor
sbb
je
xchg
inc
inc
lcall
int3
xlat
add
leave
pop
adc
fcoms
in
xlat
insb
jecxz
cmp
xchg
adc
cli
inc
push
and
sub
fcomp
mov
lcall
js
neg
inc
call
shrb
insl
dec
test
sub
or
xor
fcmove
jge
jmp
fmuls
sbb
ret
idiv
lea
addr16
dec
out
aam
mov
mov
jns
pusha
lock
loop
and
daa
and
ljmp
inc
add
stos
add
pop
or
xchg
fwait
adc
int
or
xchg
xchg
adc
out
mov
inc
xor
jp
fadds
loopne
call
nop
push
or
adc
stos
out
arpl
mov
fwait
mov
test
or
pushf
fisttpl
ror
repz
xchg
mov
fsubrp
xchg
xor
jecxz
out
mov
shrl
mov
mov
xchg
ret
adc
or
test
xchg
pop
out
jne
loopne
push
inc
dec
and
test
jbe
xchg
and
int
dec
xchg
mov
inc
mov
ret
dec
popf
nop
push
fs
popw
push
pusha
adc
in
or
mov
inc
ljmp
dec
or
fwait
inc
aaa
mov
sub
and
jmp
sar
fisubrl
mov
cmp
or
mov
push
xchg
cmp
add
sbb
pop
loopne
arpl
out
idivb
out
and
sub
jno
loop
iret
test
je
pushf
add
and
sbb
pop
arpl
orb
jp
movsb
roll
add
add
ss
std
iret
cmp
cld
call
sub
add
add
add
or
or
pop
mov
retw
push
mov
jle
jno
test
cwtl
sub
out
es
pop
fisubrl
pusha
stos
xor
rol
div
stos
ffreep
push
iret
adc
mov
stos
imul
out
adc
test
stos
add
loope
jp
repz
test
xchg
push
xor
inc
out
add
fdivl
dec
and
test
mov
push
jmp
and
inc
mov
lods
dec
sub
aam
pop
cmpsb
dec
mov
jno
or
xchg
pushf
mov
lods
shlb
jmp
mov
or
mov
aad
into
daa
clc
nop
repz
add
lods
jnp
jne
nop
jno
cmpsb
cmp
test
jbe
dec
or
mov
sub
loope
xchg
in
movsl
push
jb
dec
add
mov
xchg
xchg
mov
add
enter
test
cltd
outsb
mov
mov
in
sbb
mov
sbb
out
dec
lods
mov
sbb
cmp
in
jle
out
fs
xor
sub
popa
xchg
inc
loop
jae
mov
jp
movsl
adc
jg
xor
and
push
std
push
mov
xchg
fmull
lret
mov
je
mov
and
lret
sub
cs
fsubs
sbb
mov
mov
xor
and
shlb
stos
mov
sarl
or
fmull
adc
cmpsb
shrl
and
adc
ret
clc
repz
fstl
xchg
test
shlb
mov
sbb
in
sub
fwait
je
idivb
test
dec
lahf
cltd
add
ss
nop
jo
in
mov
add
jbe
mov
out
cmc
shlb
sub
jnp
fildl
or
add
cmpsb
bound
test
ficomps
push
push
or
cmc
inc
and
mov
jl
imul
mov
jnp
dec
mov
pop
inc
dec
push
sti
ffreep
or
or
lret
movsl
mov
xchg
mov
mov
mulb
lcall
adc
sti
iret
in
adc
inc
inc
and
xchg
xchg
mov
push
imul
mov
outsb
cltd
mov
stc
cmp
out
xor
sub
lea
push
psrlw
sbb
loop
lock
jo
imul
mov
mov
mov
inc
sbb
dec
mov
inc
movsb
jbe
jno
mov
pop
jecxz
and
cmpsl
sbb
jnp
in
ja
or
popf
cmp
xchg
das
test
sub
dec
sub
mov
leave
mov
xchg
pop
cmp
dec
dec
stc
jns
cwtl
call
sub
scas
mov
lret
call
loop
cs
movsl
xchg
and
or
paddusb
out
pop
cmpsb
lds
in
int
pop
sub
fldz
xchg
cmp
shll
insl
mov
push
add
or
shr
mov
jno
sbb
and
insl
jnp
sbbb
jne
loope
repz
mov
pop
lret
push
jns
sbb
mov
jmp
bound
cmp
fisttpll
lret
inc
loop
mov
repnz
fildl
cmpsb
fmull
cmp
jle
test
push
out
jge
jle
cmp
push
pusha
push
scas
push
xchg
jge
cmpsl
jmp
xor
sbb
fstpl
andb
dec
cmpsl
cmp
sarl
mov
pop
fwait
fidivrl
lret
pop
sub
int
dec
dec
or
mov
cmp
mov
sti
aam
fs
pop
xchg
iret
xlat
sbb
test
sub
rclb
jns
loopne
test
enter
cmc
jbe
add
loope
sub
jns
mov
jbe
lods
xchg
adc
arpl
ret
mov
mov
sub
inc
lock
adc
ret
jecxz
andb
push
ss
mov
es
dec
leave
fcoms
pop
cmp
push
dec
jl
popf
fildl
movsl
jae
push
xchg
and
popa
aad
pop
fstpl
iret
add
popf
inc
adcb
ret
aaa
scas
int
mov
xor
mov
push
in
xchg
mov
push
scas
cs
sub
or
push
mov
dec
call
add
add
add
es
mov
jmp
fdivrp
in
mov
aas
sub
add
lods
jbe
cmp
xchg
fdiv
sub
and
xchg
push
inc
fists
mov
imulb
out
cmp
add
sbb
inc
into
inc
cltd
sbb
jmp
dec
add
xlat
pop
jl
jnp
gs
xchg
dec
and
popf
add
and
arpl
jb
shl
pop
aas
fxtract
das
out
in
sbb
scas
sub
icebp
mov
bound
sub
mov
in
cmp
inc
imul
outsb
stos
outsb
sub
les
test
pop
adc
out
imul
add
outsl
or
add
arpl
repz
and
push
pusha
jle
mov
in
xchg
jg
rorb
std
lods
push
and
jb
lds
xor
out
xchg
or
inc
mov
inc
cli
lea
aaa
pop
cmp
and
jmp
pop
dec
and
jbe
sub
xor
xor
cmp
fs
inc
lods
xchg
lea
dec
in
xchg
push
popf
cmpsl
add
adcb
lret
mov
in
push
mull
or
rcll
scas
inc
pop
xlat
into
inc
xor
sti
sub
shl
cmp
jo
sbb
mov
xor
jmp
jae
ss
inc
push
int
jmp
cmp
xchg
inc
or
mov
call
out
add
mov
dec
mov
mov
sub
imul
into
dec
sbb
xor
in
fstpt
aas
lahf
cmp
andl
mov
nop
cmc
mov
lods
test
addb
dec
add
pushf
adc
jecxz
lods
xchg
scas
inc
pop
dec
mov
movsl
push
leave
pop
bound
xor
ja
cmp
adc
push
jnp
adc
xor
inc
loope
or
rcll
adc
roll
and
fsts
sbb
sbb
aam
push
cmpsl
xor
aam
cmc
lret
jg
jecxz
rol
jle
push
or
jae
cs
adc
push
in
idivb
lea
adc
dec
push
sub
into
xlat
jecxz
es
jns
dec
adcl
pop
adc
xor
movsb
movsb
push
inc
and
nop
fs
push
push
cli
das
jecxz
sub
mov
inc
jmp
mov
outsl
clc
sub
and
xchg
sub
stc
lock
dec
inc
int3
in
ja
movsl
adc
adc
push
mov
pop
xchg
sarb
sub
in
call
nop
out
adc
je
xor
mov
scas
lcall
js
push
mov
mov
push
dec
cmp
mov
cmpsb
mov
mov
dec
testb
or
fs
push
loop
mov
fcomps
push
comiss
mov
outsb
push
mov
push
call
mov
sbb
sub
aad
or
fsubrl
mov
jmp
test
xlat
out
jnp
xor
push
testl
stos
cmc
pop
loope
lods
jl
or
out
xchg
inc
sahf
push
dec
fwait
push
mov
inc
fadds
mov
ret
loope
cltd
adc
xchg
push
mov
pop
sti
mov
pop
mov
push
push
push
mov
push
pop
cli
cmp
dec
fisubrs
imulb
cmpb
jbe
sbb
pop
in
mov
inc
xchg
inc
pop
das
or
jae
add
stos
inc
or
mov
push
add
lret
xchg
cmpsb
ja
xchg
test
aam
jmp
mov
push
aad
jp
cmc
cmp
xchg
gs
lods
les
gs
movsl
out
fcmove
xchg
insb
dec
fwait
js
inc
lods
aad
cwtl
pushf
add
lods
imul
sbb
mov
mov
mov
xor
stc
bound
mov
int3
repz
in
popf
loopne
and
sbb
repnz
or
std
inc
popf
push
inc
xchg
pop
mov
stos
or
outsl
pop
inc
loope
inc
lret
pop
jne
cmc
imul
pop
loop
jecxz
push
xor
sbb
sbb
mov
adcl
jge
jl
aaa
fdivs
sbb
or
fs
xlat
daa
push
and
aaa
les
sbb
push
pop
add
push
fs
push
push
ja
pusha
out
lods
ljmp
insl
roll
jl
mov
cltd
mov
mov
adc
addr16
mov
inc
xchg
xchg
push
xlat
scas
lock
push
imul
mov
push
add
add
add
aaa
sti
addr16
out
fidivs
jb
fxch
xorb
add
add
add
out
or
cmp
jp
mov
fstps
into
punpcklbw
or
cmp
mov
gs
fmul
inc
imul
cmpsl
stc
pop
xchg
sbb
pop
cli
out
test
je
int
jp
xchg
add
dec
lods
pop
jbe
aam
fwait
adc
popf
pop
xchg
adc
data16
inc
push
ja
sti
mov
imul
inc
fldcw
shll
hlt
lods
faddl
popf
in
cld
lea
sahf
inc
fidivs
or
lcall
lahf
sarb
adc
insb
out
mov
sub
idiv
in
bound
or
ja
addr16
test
lods
test
cmp
mov
ljmp
mov
adc
icebp
fidivl
int3
bound
ret
ret
sub
push
imul
repz
idiv
stos
faddl
pop
outsb
mov
sub
cld
icebp
rcrb
std
mov
fs
ja
mov
fcoml
jbe
inc
and
xor
push
cmc
ds
mov
sbb
pop
dec
inc
inc
jb
sahf
cld
xchg
mov
daa
xchg
data16
mov
or
dec
rorb
mov
jmp
dec
jge
and
inc
pop
mov
push
sbb
data16
jmp
fcomps
or
jae
ficoms
ds
xor
sub
orl
sub
cmc
mov
mov
jbe
scas
sub
aas
jbe
ficompl
jl
jbe
hlt
fwait
inc
cmp
fmuls
push
mov
pop
mov
pop
call
push
sub
mov
bound
lods
into
dec
inc
xchg
mov
and
imul
or
pop
out
mov
rcrl
pop
push
dec
aam
push
jns
add
jge
push
push
or
xchg
cli
or
sub
xchg
add
mov
jle
std
test
sti
cmpsb
mov
es
mov
xor
js
ds
xchg
adc
and
xor
popa
pop
mov
popl
mov
or
scas
or
inc
popa
pop
je
mov
push
sti
pop
mov
jg
push
cmpsl
call
sbb
out
mov
jp
or
mov
daa
adc
shll
sub
mov
dec
dec
iret
pop
fiadds
daa
mov
outsl
sarl
lret
shl
pop
popa
leave
pop
ret
rcrl
ret
cmp
mov
test
pop
inc
fwait
or
mov
pop
dec
mov
rcrb
jmp
sbb
sahf
andb
rclb
ljmp
push
push
cld
in
inc
pop
jp
cmp
jo
mov
sahf
roll
sub
ja
pop
mov
dec
add
test
pop
or
and
mov
pop
mov
lretw
sti
jmp
lret
sbb
sub
jmp
mov
mov
mov
iret
cmc
and
cli
inc
mov
mov
jb
popa
lret
imul
mov
cwtl
or
and
cltd
rcr
lret
mov
std
mov
cmpsl
or
aam
inc
das
adc
ds
adc
sub
pop
jno
mov
mov
sbb
mov
xchg
in
mov
movsl
cmpsl
or
sbb
adc
sti
add
ret
mov
pop
testl
mov
mov
pop
push
sahf
adc
jb
mov
pop
insl
rclb
mov
andb
mov
mov
xor
data16
xchg
adc
sti
ljmp
dec
mov
imul
test
andl
lods
add
mov
cmpsl
mov
adcb
jne
push
mov
sbb
sti
jbe
xor
or
push
aaa
push
imul
mov
mov
int3
rclb
enter
loopne
or
pusha
fisubrl
pop
out
inc
imul
inc
or
out
xor
mov
pop
xor
aaa
sti
xchg
adc
outsl
xchg
add
js
repz
jne
repnz
stos
movsl
xchg
ja
xchg
push
shrb
mov
xor
dec
adc
mov
aas
add
in
and
xchg
push
add
adc
and
in
inc
push
fnstenv
jl
sub
jg
jle
add
adc
sti
gs
sub
hlt
or
add
add
out
sbb
repz
cs
add
add
repz
add
fwait
rclb
cltd
sarl
cmc
dec
scas
in
icebp
int
fisubl
pop
push
dec
jb
js
imul
mov
jle
xchg
scas
aas
jns
xchg
aam
shrl
or
jecxz
test
cmpsb
sub
testl
push
jl
out
inc
xorl
sbb
aaa
addr16
insl
test
mov
jle
lret
mov
clc
push
jo
outsl
jp
dec
lock
inc
jle
ds
jbe
xchg
mov
mov
xchg
cmp
fnstcw
xchg
pop
movsb
stc
rclb
lods
push
mov
xor
daa
fcomi
xchg
sub
std
je
sub
cli
mov
sub
ja
mov
mov
and
cmp
cmp
ljmp
idiv
sbb
add
push
out
sti
out
andb
int3
push
cmp
insl
inc
or
test
cli
inc
ror
jnp
imul
push
cmp
rcr
dec
cld
movsb
push
cli
jge
in
jle
mov
mov
sahf
jb
mov
ds
in
out
push
gs
push
outsb
movsb
testl
dec
flds
out
cmp
pushf
adc
mov
sbb
jns
sbb
out
aad
repnz
clc
xchg
push
push
repnz
es
cld
es
bound
mov
sbb
scas
push
in
mov
fstpl
mov
jnp
adc
cmpsl
jl
in
mov
xchg
ja
imul
ret
mov
mov
adc
scas
in
sbb
popf
ffree
test
pop
sub
add
sbb
xchg
mov
push
add
jp
aad
push
mov
notl
push
icebp
call
movsl
dec
mov
mov
outsb
mov
and
lahf
popa
xor
push
xor
mov
paddw
lret
mov
mov
icebp
push
xchg
nopl
adc
enter
movsl
mov
xor
mov
cmp
jmp
outsl
pop
add
sub
mov
out
jecxz
mov
pop
mov
sahf
fwait
sub
dec
xchg
das
clc
nop
pop
or
sar
xchg
cmc
stos
orb
out
sar
inc
mov
add
insl
imul
xorl
dec
push
in
cli
into
movsb
dec
fistpl
and
pop
pushf
movsl
sub
jge
dec
cli
sahf
xchg
adc
jg
addr16
int3
push
gs
int3
je
cmp
pusha
pushf
cmp
rolb
xor
data16
add
sbb
and
push
sbb
or
cltd
scas
inc
or
add
movsb
int
scas
out
jnp
pop
ds
dec
mov
movsb
xchg
adc
arpl
es
cmp
jno
movl
add
or
push
mov
xchg
push
test
cld
pushf
aaa
adc
cmp
xor
hlt
adc
aaa
lea
call
jecxz
fwait
dec
or
xchg
ja
aam
or
dec
jmp
mov
out
pop
ret
rorl
and
mov
fwait
movsl
mov
push
mov
push
mov
jl
cmp
inc
mov
mov
repz
dec
push
push
lock
movsl
xchg
or
pop
mov
sub
adc
cli
outsl
ffree
leave
lds
fwait
lea
loopne
inc
jnp
or
mov
data16
jmp
inc
mov
enter
cli
dec
stos
test
aaa
clc
jle
pop
stos
sub
mov
lods
int
jb
jno
jecxz
xchg
mov
jmp
push
xlat
mov
sbb
je
repnz
xchg
or
call
inc
fidivrl
aad
xchg
data16
cmc
ret
push
decl
dec
mov
xor
jb
loope
fstps
clc
scas
scas
fnsave
dec
cmp
data16
sbb
mov
and
je
aaa
rcrb
ret
push
xor
into
cmp
in
lds
dec
xchg
dec
shl
jp
mov
into
inc
mov
jmp
xchg
ret
rcl
sub
push
mov
and
ljmp
into
mov
pop
jnp
push
add
sahf
sub
mov
lods
adc
push
push
nop
xchg
and
test
pop
shll
dec
ret
adc
pop
push
and
sbb
fldcw
dec
movsl
ds
mov
pop
mov
sub
pop
loop
scas
mov
outsl
mov
or
jno
lret
test
and
aad
mov
add
add
mov
out
out
mov
lock
add
repz
add
stos
fistpll
out
push
lahf
cmpl
mov
nop
fwait
sub
call
fsts
je
scas
adc
loope
or
call
icebp
sub
sub
push
or
stc
mov
inc
je
xchg
xor
mov
test
bnd
inc
aaa
or
add
repnz
int
inc
add
nop
xor
cs
ficoml
xor
push
push
xchg
ror
flds
sub
adc
xchg
xor
sbb
adc
mov
or
fdivr
imul
mov
shrl
dec
insb
mov
in
mov
popf
push
inc
fimull
jmp
adc
ja
in
add
imul
es
sahf
orl
cmp
orb
popa
pop
mov
out
mov
in
sub
cmp
pop
adc
pinsrw
dec
push
ret
sbb
cld
sub
fidivl
scas
xchg
es
and
stc
inc
push
add
adc
cmp
sub
negb
jge
mov
push
adc
inc
or
or
lods
mov
or
inc
add
lock
decb
push
outsb
pop
sub
test
push
hlt
loopne
or
sbb
push
addr16
call
lds
adc
pushf
in
adc
insl
and
lods
bound
test
jecxz
mov
push
rcll
repnz
sub
movsb
mov
jle
pop
mov
dec
push
xor
dec
mov
mov
sub
fldenv
enter
movsl
dec
or
sub
jns
fs
mov
mov
andl
rcrb
mov
test
pusha
mov
mov
icebp
leave
mov
pusha
sbb
cmp
xor
pop
divb
mov
mov
testb
or
pusha
pop
adc
xchg
nop
loope
mov
mov
gs
scas
sbbl
sbb
push
in
xor
rcll
xchg
lret
mov
ds
sub
push
test
loop
test
adc
gs
push
and
or
mov
andl
adc
fildll
ror
jmp
das
push
adc
cwtl
sbb
pop
mov
ret
sbb
iret
sub
cld
and
andl
jl
push
insb
rclb
stc
out
int3
inc
mov
adc
xchg
push
call
or
ficompl
stos
sbb
insl
in
jg
pushf
imul
pop
xor
sti
stos
lret
pop
dec
sbb
int3
mov
jmp
mov
fcomps
pop
dec
adc
leave
and
mov
ds
pop
out
shll
dec
pop
pop
dec
push
sahf
cmp
sarl
mov
push
sbb
les
inc
ret
in
ljmp
push
dec
fs
push
pusha
cli
clc
mov
mov
xchg
or
jbe
into
ljmp
testl
jb
xchg
mov
repz
loopne
cmp
jmp
arpl
jecxz
and
inc
out
lahf
mov
out
mov
notl
ljmp
mov
aas
in
cmp
mov
and
fdivrl
jmp
jbe
sub
add
test
out
shl
movsb
stos
imul
stos
stos
adc
ret
xchg
xchg
mov
dec
mov
xor
pop
aas
xor
mov
ljmp
into
test
ret
addr16
fistl
pop
sbbb
push
push
sbb
fsub
es
sub
sbb
fcompl
sti
sbb
stos
xchg
hlt
in
fadds
fisttps
jbe
imul
sub
cmp
inc
pop
dec
ret
inc
mov
aaa
psubusb
adcl
and
push
gs
imul
jg
inc
in
xchg
insw
mov
jmp
sbb
mov
insl
sar
aaa
out
sub
cmpsb
ret
stos
rorl
adc
call
ror
popf
ret
test
sub
dec
pop
xchg
mov
into
cmp
add
and
xorb
out
shll
pop
or
sub
fwait
dec
jge
dec
mov
cmp
and
orl
add
xchg
pop
and
push
sub
xor
jb
adc
xchg
mov
pop
test
inc
xor
jl
or
or
xlat
rol
jmp
out
mov
jle
mov
out
stos
outsb
mov
add
in
pop
dec
negl
mov
iret
jmp
add
repz
add
push
stos
pop
ret
jecxz
shl
push
mov
jb
dec
int
imul
leave
js
in
cmpsb
cltd
or
ljmp
scas
lods
pop
ja
xlat
arpl
xlat
cltd
adc
pop
add
or
nop
ret
push
push
and
cmp
adc
loope
and
inc
icebp
ret
xchg
ret
out
or
out
mov
mov
popf
shll
add
or
mov
xor
mov
das
xor
orl
sbb
les
cltd
push
push
mov
std
iret
push
fnstenv
push
scas
sarb
repnz
xchg
stos
jge
mov
mov
dec
cwtl
test
enter
test
dec
cmc
mov
in
mov
imul
push
jmp
lret
addl
arpl
inc
cli
mov
stos
pop
mov
insl
push
jle
gs
test
mov
or
xor
sub
movsb
mov
adc
adc
jno
rcr
jo
cwtl
mov
test
xchg
clc
inc
adc
movsl
or
addl
data16
out
js
jmp
orb
inc
and
pop
sbb
test
imul
daa
roll
and
cmp
and
rcrb
fsub
stc
repnz
into
clc
cli
add
cltd
jne
lods
xchg
movsb
cwtl
imulb
mov
insl
jl
mov
add
add
jo
and
sbb
add
addl
xchg
outsb
loop
jns
pop
xchg
adc
dec
push
inc
fs
push
jo
inc
and
in
mov
out
repz
in
mull
xor
push
shl
fisubl
or
pop
dec
addl
jl
scas
scas
mov
mov
mov
jmp
mov
mov
fs
adcl
pop
sbb
inc
mov
mov
xchg
sbb
fistl
loope
stos
cmp
or
sbb
shll
stos
pop
cmp
les
mov
les
aaa
pop
aam
lret
jbe
jns
and
loop
js
mov
and
clc
int3
jb
sub
mov
and
add
cmp
push
push
sbb
and
dec
dec
scas
addr16
push
sub
sub
das
or
loope
jg
cmp
and
mov
fsubrp
aad
lahf
fldt
mov
mov
fwait
sub
mov
mov
sub
xor
das
test
test
jno
stc
adc
mov
inc
add
mov
inc
push
or
jge
cmp
pop
je
mov
xor
mulps
icebp
lcall
xor
pop
pop
cmp
mov
push
dec
jbe
push
or
int
pop
int3
imul
dec
mov
sahf
out
cmpb
add
pop
mov
mov
add
cmp
test
or
fadd
in
out
in
incb
pushl
das
adc
mov
and
je
jp
push
pop
inc
ficoms
cmp
sub
jp
test
das
mov
ja
xor
mov
or
test
sti
xchg
outsl
lret
add
cmpsb
rcrb
lods
cmp
xlat
jns
das
pop
pushf
cmpsl
imul
inc
cmp
je
and
xor
aad
sub
sbb
and
test
cmp
jg
shll
push
ds
pop
xor
xchg
xchg
mov
popa
aas
xorl
fwait
shr
jge
pop
mov
xchg
push
dec
sahf
cmc
xchg
out
mov
mov
pushf
xor
jl
subb
mov
mov
fbld
push
jns
xchg
icebp
rcl
test
mov
ffreep
ljmp
xor
repnz
cwtl
test
push
and
sub
movsb
outsl
sbb
jge
lds
int
aam
loope
out
js
mov
imul
loop
cmp
rclb
mov
sbb
xchg
xlat
mov
inc
and
push
jge
sub
ss
pop
cmp
pop
sbb
pop
repz
mov
cmp
lods
punpcklbw
or
jbe
or
push
jno
add
add
in
mov
fdivp
cld
ds
daa
cmp
push
fisttps
add
repz
add
and
push
test
aad
pop
cmp
sar
bound
add
mov
lahf
lea
pop
xor
fsubrp
jno
jl
mov
mov
fwait
daa
mov
sub
lret
inc
jle
jb
outsl
adc
mov
pop
cmp
jge
adc
cmpb
das
jae
fnstcw
pop
in
mov
cmp
mov
jge
or
in
cmp
and
shlb
mov
and
std
inc
fwait
jno
push
insb
adc
in
stos
ja
lret
inc
aaa
popf
inc
mov
cmpsb
sahf
jge
sub
or
inc
mov
pop
ret
pop
inc
add
out
cmp
fcoml
mov
add
dec
pop
in
pushf
cli
faddl
in
or
dec
mov
dec
push
std
pop
aaa
add
mov
push
stc
pusha
stos
xchg
cmp
imul
bsf
cld
fldenv
faddl
mov
jmp
and
and
or
mov
std
sbb
gs
mov
adc
sub
jno
adc
das
sub
push
inc
test
and
jno
lahf
mov
shl
mov
cmc
dec
cmc
xor
cli
outsb
fistl
jp
sbb
stos
fdivrl
test
rol
aaa
jecxz
popa
inc
mov
lahf
roll
and
subb
pop
cmp
xchg
les
les
push
mov
cmp
into
rcll
xor
stos
rclb
ljmp
inc
or
das
adc
push
aaa
pushf
movsl
sub
mov
and
shlb
add
or
xor
mov
sbb
fidivrl
add
sahf
jecxz
fidivs
push
rcrb
test
fsubs
adc
cwtl
addb
je
jecxz
rcl
mov
jae
sbb
jl
fwait
mov
or
xchg
cltd
cli
jb
mov
idiv
mov
pop
lcall
or
cmp
cwtl
data16
lods
or
lods
jmp
pop
lahf
xor
jecxz
or
pop
hlt
jl
add
and
jle
cmp
sbb
dec
push
shl
ja
sarl
inc
scas
inc
nop
mov
lock
scas
sahf
lahf
add
and
fcoml
mov
loope
ljmp
jae
or
push
ds
and
mov
rorb
lods
xchg
imul
or
xor
cltd
inc
xor
and
loopne
movsl
test
adc
mov
jno
mov
loop
in
cmp
test
sub
or
dec
inc
push
movsb
ret
add
xor
cmp
jnp
addr16
mov
jmp
sub
jmp
or
addb
pop
jb
pop
xchg
pop
aas
std
lahf
hlt
cmp
jge
fsubr
pop
nop
out
push
sub
dec
pop
addr16
out
scas
test
out
lret
cmpsb
jne
insl
fwait
push
inc
loopne
neg
mov
ljmp
inc
fcoml
mov
stos
iret
ss
ljmp
sub
sbb
notb
xchg
jmp
jbe
das
xlat
push
loopne
pop
push
jp
outsb
js
pop
stos
inc
fmulp
call
mov
push
mov
sub
adc
aaa
test
stc
int
movsl
repnz
fsts
inc
lret
adc
push
jno
lret
sbb
cmc
jae
cmpsb
xchg
push
sarl
stos
inc
jle
lret
sbb
cmpsb
mov
shll
or
std
fisttpll
repz
bound
jmp
sub
pop
ljmp
repnz
jne
mov
jbe
inc
cmc
call
stos
andl
inc
repz
mov
bound
or
push
xor
lea
loop
pop
xchg
inc
ficoms
fs
sbb
hlt
popa
add
jne
sbb
filds
fadd
mov
int3
out
out
outsb
push
or
lods
rcl
stc
cwtl
or
je
jns
int3
sub
aam
fildl
out
aas
mov
jp
pushf
and
add
xchg
pop
arpl
push
lea
xor
jno
or
inc
ss
or
push
imul
jbe
sub
int3
and
xor
insb
inc
div
in
in
aad
mov
mov
adc
clc
add
add
add
xor
jg
sbbl
inc
dec
add
repz
add
iret
fnstenv
inc
daa
cltd
xchg
mov
ret
aam
push
xchg
mov
pop
aad
ss
outsl
mov
and
mov
ret
out
push
or
mov
pop
cmp
xchg
mov
xlat
lcall
in
add
jnp
fwait
negb
xchg
or
lock
add
notl
pushf
inc
pushf
shll
push
push
add
dec
fs
mov
cltd
jnp
adc
lock
mov
cld
jecxz
stc
cmp
or
fnstsw
out
or
popa
lock
add
push
arpl
movsb
lret
sub
cli
fwait
sbb
cmpsb
frstor
xchg
cmp
and
xor
aam
cli
inc
stos
pushf
aad
cmp
shlb
loop
or
stos
mov
int
leave
and
mov
orl
rcll
out
ja
xchg
push
and
inc
stos
cwtl
push
mov
pop
mov
adc
mov
mov
sbb
mov
dec
mov
js
fcom
pop
xor
lock
mov
xchg
mov
mov
out
mov
bndstx
arpl
fisubl
pusha
pushf
mov
test
sub
mov
mov
ret
push
dec
cmpsl
clc
subb
shll
shl
cltd
pop
aad
adc
xchg
cltd
jbe
push
mov
jbe
and
jae
and
sbb
test
or
adc
cmp
icebp
jbe
dec
or
mov
shrl
sbb
bound
mov
nop
inc
in
popa
scas
adcl
mov
lret
sub
xchg
or
mov
stos
xchg
lret
sub
pop
out
imul
js
addr16
and
std
rolb
test
data16
fldln2
mov
jns
mov
cwtl
stc
cld
dec
popf
shll
sub
mov
scas
ja
jbe
sbbl
ror
sarb
test
std
sbb
or
push
sbb
inc
call
xchg
xor
loopne
jl
jbe
jo
cli
cmp
hlt
xchg
dec
push
cmp
inc
xor
lret
test
repz
cwtl
movsb
je
xchg
into
mov
xchg
icebp
cmp
int3
mov
adc
iret
int3
fnstcw
xor
jo
pop
out
cmpb
mov
popa
int
jns
aad
aas
leave
pop
mov
addr16
mov
loope
into
data16
into
dec
cmp
jae
xchg
ss
xchg
sub
mov
ret
xlat
mov
cltd
lret
add
nop
in
and
add
lret
adc
mov
jb
and
xchg
xchg
sbb
sub
pushf
mov
movsl
xor
in
dec
mov
pop
lods
loope
rcrb
adc
sbb
gs
pop
loop
adc
push
jbe
divb
icebp
aad
xor
or
adc
aaa
pop
inc
pop
adc
cmp
ss
loopne
pusha
add
mov
in
insb
inc
xor
nop
sbb
jmp
mov
outsb
lods
ret
dec
outsb
fadd
les
jb
dec
sbb
pusha
fldcw
and
pop
adc
mov
stos
mov
sub
inc
js
add
lods
mov
rcll
push
imul
jecxz
add
sbb
clc
push
nop
loope
fidivl
xchg
cmp
jmp
pop
js
sub
mov
jge
je
outsl
insl
out
cmp
mov
dec
mov
orb
out
and
jmp
and
je
nop
adc
fldcw
mov
shll
cmp
push
adc
repz
mov
add
jle
xchg
std
stos
sbb
hlt
dec
sub
shrb
xchg
jb
cwtl
push
test
mov
dec
mov
fisubrl
icebp
daa
imul
dec
and
hlt
movsl
xchg
xlat
and
daa
lret
imul
js
pusha
incl
pushf
pop
int3
fs
pop
sbb
jl
das
cltd
push
pop
fsubrs
lea
jns
fdivp
sbb
repnz
and
call
aaa
popf
push
jmp
dec
xlat
pop
shr
push
loopne
push
push
push
push
mov
mov
repnz
push
sbb
cmp
adc
fcompl
mov
das
push
sbb
sbbb
cwtl
pop
and
lock
test
push
in
lret
lods
sbb
ret
ds
add
add
loop
add
mov
shl
add
repz
add
jae
mov
cmpsl
xor
sub
lcall
jle
xor
sbb
xor
ljmp
lods
aas
shr
pop
cmp
inc
sbb
jp
ret
insl
mov
test
fdivrs
mov
std
sub
xlat
mov
and
or
jne
cmp
or
and
cmp
lock
mov
sbb
mov
mov
js
mulb
cmpsb
das
lea
ljmp
dec
adc
mov
je
cltd
jg
int
mov
push
push
sbb
leave
xor
js
xchg
jmp
mov
daa
sbb
pop
mov
ret
fidivrs
les
repz
mov
pop
xor
loope
mov
jle
or
cmp
jmp
adc
gs
shll
arpl
mov
mov
xchg
adc
popa
lcall
xor
dec
stos
repnz
into
xor
sub
lahf
bound
call
loopne
in
push
outsb
inc
dec
out
mov
sarb
jae
xchg
pop
ret
jae
in
cmp
lods
adc
fsubl
insb
or
mov
fnstsw
mov
ret
jle
xchg
push
or
stos
pop
daa
outsl
sub
mov
dec
in
and
sub
mov
dec
mov
ret
xor
mov
pop
imul
das
sub
shrb
dec
mov
test
add
pop
subb
pop
fstpt
ret
and
add
frstor
jmp
inc
movsl
adc
dec
outsb
mov
jb
cmp
lock
in
adc
mov
jnp
pop
jl
and
sbb
sarb
or
loopne
lret
cld
xor
std
jecxz
loopne
bnd
pop
pop
inc
out
jmp
xchg
pop
pop
xchg
add
lods
xchg
movsl
push
add
std
aas
hlt
outsl
pushl
and
mov
ret
dec
mov
pop
lcall
enter
inc
aam
pop
fiadds
adc
imul
mov
scas
test
test
mov
jne
fwait
repnz
inc
push
bound
rorb
ss
scas
pop
mov
iret
xor
out
cmp
mov
add
mov
mov
push
dec
dec
imul
idivl
rcrb
roll
mov
inc
pop
mov
sti
mov
cmc
lcall
pop
stc
mov
cmp
cmp
adc
and
lods
mov
fstpl
sahf
xor
pop
mov
lret
jmp
shlb
dec
sbbb
stc
xor
les
jns
in
mov
dec
sub
push
imul
stos
mov
xor
mov
outsl
push
push
cmpsb
mov
and
out
mov
lret
fsts
test
inc
cmp
and
jo
iret
push
push
rcrb
xchg
ss
cltd
mov
fstl
ret
ja
push
outsl
adc
jecxz
mov
ret
sti
stc
jns
jle
or
icebp
cmpl
and
mov
xor
xchg
pop
stos
jae
mov
adc
adc
jne
dec
scas
dec
aas
inc
lods
mov
xchg
jmp
inc
mov
sbb
dec
pop
in
dec
shl
sbb
sti
cs
fldcw
and
out
sub
addr16
std
jnp
pop
push
arpl
das
adc
sub
ss
test
mov
pop
sub
push
cmpsb
cmp
cmp
and
rorb
in
cmpsl
cmpsl
mov
pop
xchg
scas
sbb
sub
mov
mov
pop
inc
sbb
aam
hlt
jo
cmp
xchg
mov
mov
add
cmp
jg
add
mov
mov
pop
push
inc
lahf
pushf
dec
lock
mov
sbb
push
and
dec
fcompl
mov
fstps
adc
xor
push
push
notl
imul
xor
cmp
lods
or
rclb
adc
sbbl
and
jns
enter
mov
int
out
sbb
pop
insl
inc
sbb
imulb
cli
mov
add
add
pop
pop
loope
loope
fistpll
adcl
inc
jl
push
daa
push
add
repz
add
rcr
clc
jge
aad
hlt
add
stos
pop
or
pop
jmp
aad
rolb
outsl
std
add
int3
popa
arpl
mov
testl
ljmp
call
sbb
xor
push
and
ret
sbb
xchg
xor
push
or
and
inc
sbb
call
iret
std
cmp
stos
jle
repnz
div
xchg
cmpsl
rcrb
add
sub
and
push
push
inc
cmp
or
jb
repnz
xchg
dec
mov
sub
xor
adc
out
inc
or
lret
loope
jecxz
and
push
pushf
mov
mov
mov
sub
rcrl
push
cvtpi2ps
gs
rcrl
ss
fwait
jmp
add
inc
cmp
test
dec
lock
test
xchg
inc
jno
sub
lahf
jecxz
imul
adc
or
adc
mov
loope
jns
lods
fcompl
dec
xor
pop
cmp
cmpb
roll
lock
inc
dec
sbb
das
cld
jb
push
pop
lea
dec
hlt
aaa
call
dec
test
jnp
icebp
sub
sub
cwtl
cmc
mov
cmp
cmp
and
addl
xchg
ljmp
jle
jo
cmp
out
lock
inc
roll
rorl
pop
and
cmp
pushf
loopne
inc
jo
fisubl
mov
cmc
mov
sbb
addr16
fcomps
aam
inc
cli
out
nop
cli
add
push
push
inc
cmpl
xchg
adc
lret
or
mov
jb
dec
dec
enter
jmp
cwtl
sbb
mov
fs
lods
jp
cmpsb
mov
daa
and
jae
dec
test
test
cmp
jb
add
inc
sub
sub
fidivrl
push
shll
fs
or
decl
pushf
insl
and
ja
loop
xchg
test
rcrb
imul
pop
jecxz
pop
scas
lods
out
push
xchg
repz
xchg
mov
or
jmp
jge
cwtl
and
xchg
sub
in
mov
push
and
jo
or
in
jnp
cmc
leave
pop
or
bound
mov
int3
jno
out
stos
fsub
je
sub
sub
test
into
cltd
cmpsl
imul
sub
pop
add
push
mov
test
rclb
sarl
xor
aad
fs
pop
shll
add
nop
fstps
out
fildll
nop
js
adc
sub
shlb
movsl
inc
adc
inc
mov
xlat
shll
ss
sub
xor
sub
cltd
pop
stos
xchg
std
cmp
sub
cld
stos
mov
cmp
loopne
mov
aas
xor
clc
mov
cld
and
aas
rcr
mov
fiaddl
icebp
xchg
inc
incb
xor
icebp
test
loopne
popf
lds
popf
xchg
stc
jne
js
and
je
aam
push
and
mov
xchg
pushl
pop
stc
xor
jo
push
icebp
sbb
out
sahf
sbb
bound
pusha
mov
mov
out
and
sbb
mov
fbstp
sub
inc
add
xchg
aas
jle
push
and
mov
stos
call
mov
test
jae
jnp
fnstenv
jge
inc
cwtl
leave
addr16
ret
lds
and
xchg
sub
and
insl
or
je
je
cld
fnsave
lods
fimuls
or
cmp
inc
pop
cmpsl
cmc
inc
mov
dec
inc
roll
mov
fwait
mov
push
shll
add
iret
xchg
and
jmp
repz
mov
mov
add
inc
dec
in
and
int
cli
aad
loopne
push
out
arpl
mov
lret
xchg
bound
and
add
mov
pop
pop
jmp
outsb
or
push
mov
insl
clc
inc
cli
jno
lds
sub
int3
stc
ret
negl
repz
aaa
xchg
out
push
movsl
sbb
cltd
scas
push
subl
ds
repz
fisubl
adc
bnd
sbb
jns
mov
cwtl
mov
xchg
stc
nop
cli
xchg
xor
jne
jg
test
shr
stos
adc
add
adc
andb
jo
pop
mov
push
dec
insb
mov
add
loope
xchg
out
notl
mov
shrb
pop
add
repz
add
inc
test
pop
dec
push
in
jns
sbb
dec
or
stos
imul
pop
imul
push
in
jae
mov
jl
stos
mov
repz
cltd
or
mov
fldl
icebp
cs
or
inc
inc
pop
mov
xlat
add
lret
es
inc
outsb
pusha
jno
ljmp
rclb
mov
push
mov
inc
xchg
pop
cmp
jecxz
rcrb
pop
adc
push
and
into
push
pop
iret
je
mov
dec
es
xchg
pop
jle
fimull
jmp
dec
push
hlt
pusha
les
iret
cmp
aas
dec
gs
mov
mov
inc
adc
sub
xchg
ss
push
stos
sub
adc
clc
outsl
inc
cwtl
inc
fwait
xchg
sti
inc
outsl
add
subl
jnp
push
lcall
into
xchg
out
popf
dec
and
insb
jge
inc
sbb
adc
jecxz
mov
pop
mov
mov
jb
or
js
sbb
dec
mov
fsubs
lock
mov
int3
push
add
shrb
mov
sbb
inc
cli
orb
mov
scas
xchg
out
mov
mov
test
cltd
mov
hlt
inc
imul
and
in
push
lahf
xchg
push
sbb
std
das
adc
movsb
sti
sub
loop
jg
inc
nop
movsl
stc
push
or
sbb
pop
push
add
cmp
add
ret
leave
mov
cmp
dec
lret
jl
dec
int3
inc
fiadds
aas
lcall
in
loope
stc
or
fistps
pop
cmp
ret
loopne
test
outsb
rolb
and
pop
lods
lret
jg
or
popa
cmp
dec
clc
or
sub
test
cld
mov
shrl
mov
xchg
rorl
push
add
cmpsb
and
sbb
push
inc
push
dec
dec
dec
ficomps
push
ds
cs
lods
fcomip
cmp
sti
loop
mov
mov
movsb
mov
out
mov
and
cmp
add
imul
xor
mov
push
sub
sub
in
mov
inc
out
cli
cld
jns
scas
jmp
mov
and
mov
cmp
mov
lods
popa
push
out
push
inc
pop
push
repz
add
negb
lock
lret
cmp
mov
push
outsl
addr16
jmp
fwait
inc
add
sub
test
hlt
lds
push
es
loope
mov
and
push
std
roll
cmpl
sub
ficoml
imul
int
pop
adc
xor
cwtl
cmpsl
push
insl
adc
repz
jmp
push
gs
ds
outsl
je
sub
push
scas
xchg
loope
arpl
filds
in
sbb
sbb
pop
add
into
mov
pop
lret
pop
or
cmp
jl
jecxz
and
or
cmpsb
mov
sbb
fmuls
mov
mov
ds
adc
ret
movb
and
and
mov
std
insb
or
pop
pop
gs
call
stos
xor
fidivrs
xor
sarb
sub
dec
push
imul
je
cs
rclb
jl
sti
mov
xor
inc
mov
fcomps
sarb
sub
fidivrs
push
xchg
nop
hlt
aaa
dec
cld
push
sahf
and
cmp
jns
imul
cmpb
pop
cmp
cmc
rcll
js
sbb
xchg
arpl
inc
push
mov
jp
divl
mov
dec
xchg
and
jnp
decl
decl
stos
unpckhps
cmp
jle
mov
out
out
adc
and
out
dec
xchg
shll
xchg
and
les
je
cmp
dec
mov
mov
out
dec
stos
or
lret
adc
inc
scas
pusha
push
and
or
pop
mov
mov
and
cwtl
ret
insb
cmp
push
test
or
mov
out
aas
testb
inc
xchg
test
mov
sbb
jns
les
inc
jmp
rclb
add
add
add
and
cmp
loope
mov
frstor
add
repz
add
mov
outsl
xchg
test
popa
xor
js
xor
stos
sub
and
icebp
sub
cmp
mov
mov
mov
mov
xchg
jge
test
sub
adc
inc
fistl
sub
pop
or
xchg
inc
mov
lods
push
sbb
xor
mov
cmpsl
sub
fsubrs
addl
call
xor
xor
jae
les
lock
jo
jb
scas
or
push
stc
leave
mov
jae
es
rorb
iret
call
adc
loopne
sar
ss
inc
push
jne
test
pop
add
je
adc
xor
inc
push
sahf
xor
mov
add
loop
mov
cmp
sub
fstl
loop
xchg
xchg
inc
popf
mov
mov
jnp
cwtl
loope
popf
xor
scas
mov
push
add
inc
lods
sbb
iretw
jb
jle
inc
sbb
outsb
in
push
sub
clc
sbb
adc
arpl
xchg
cmpsb
pushf
pop
mov
mov
fidivrs
and
mov
cmp
mov
int
daa
repnz
lea
ficoms
inc
insb
in
fs
aad
mov
mov
loop
lret
jns
mov
sub
sub
cld
in
adc
and
inc
add
ljmp
movsl
pop
mov
lds
daa
shrb
mov
fidivrl
das
cli
or
ja
jae
mov
jp
xchg
jbe
mov
je
pop
cmpsb
mov
push
cwtl
cmp
mov
xlat
into
shrb
push
xorb
in
lahf
push
repz
clc
and
ret
cmp
cmp
mov
imulb
pushf
ss
push
popf
stos
aas
cmp
mov
gs
sub
rcrb
xchg
ss
les
adc
xchg
pop
imul
push
leave
dec
cmc
fmuls
mov
hlt
push
int
add
lods
cmp
mov
jo
call
mov
mov
and
mov
std
les
sbb
push
mov
shll
test
ret
mov
cmp
sbb
rorb
inc
repnz
sub
inc
dec
div
repnz
int
jp
in
add
sub
rclb
mov
add
nop
dec
inc
and
mov
sbbb
jmp
or
movsb
jne
sub
fistpl
cli
mov
repz
fiadds
fdivrl
rorb
je
stos
or
movsl
push
insl
int3
sbb
out
inc
adc
sub
xchg
js
lods
mov
fdivrp
ljmp
aam
inc
fcom
push
sbb
imul
aad
fidivrl
test
mov
fs
fwait
jbe
dec
mov
push
dec
mov
hlt
cmp
xchg
sbb
jmp
leave
add
push
cmc
mov
fs
mov
mov
mov
xchg
pop
sub
nop
incl
sbb
outsl
dec
sub
pop
pop
sbb
push
jecxz
sub
out
adc
insb
xchg
and
mov
mov
jge
ret
mov
shrl
push
sub
xor
ret
mov
push
sbb
bnd
lds
fdivp
decl
push
std
dec
xor
jecxz
jno
add
ja
es
jmp
lods
rorb
xor
or
fcomp
xlat
ret
fwait
mov
mov
popf
xchg
std
stos
cmp
sub
mov
sbb
test
pop
fisubrl
subb
jl
scas
loopne
imul
aas
sub
mov
pushf
test
jge
sbb
mov
mov
gs
push
jmp
push
lods
pop
fdivrp
lcall
mov
pop
inc
mov
jge
inc
pop
adc
xor
iret
daa
adc
cli
shll
sbb
out
jno
jl
xchg
xchg
fwait
pop
mov
xor
inc
pop
test
mov
mov
addr16
mov
filds
adc
mov
outsb
sbb
fwait
fs
jl
push
jno
add
xchg
or
pop
rclb
into
and
add
repnz
mov
lock
aas
mov
add
add
mov
jp
ret
loopne
loop
add
repz
add
dec
out
push
dec
adc
and
pop
push
inc
jle
mov
cmp
push
js
push
xor
or
lods
sub
lret
int
jp
in
xchg
mov
mov
add
je
ret
out
and
arpl
roll
test
fdivs
lea
lods
fbstp
push
push
add
jp
jbe
sbb
push
gs
mov
notl
push
jb
lea
jge
icebp
xchg
js
lret
xchg
in
push
add
or
lcall
in
xlat
mov
jmp
loopne
xor
inc
mov
fdivp
lret
cli
cwtl
lds
mov
in
repz
cwtl
sub
add
jecxz
pusha
insb
enter
ja
mov
in
sbb
mov
popa
and
push
mov
mov
xor
and
dec
clc
add
mov
addb
adc
clc
or
or
xorl
and
adc
cld
jge
sahf
or
ljmp
jno
xchg
call
pusha
pop
adc
mov
push
push
adc
pop
rcll
xchg
mov
cmpsl
dec
jg
or
popa
add
jne
push
jmp
and
sub
fldl
std
cltd
out
movsb
lock
sub
mov
and
mov
xchg
dec
addl
sti
push
aaa
enter
stos
aam
push
sub
das
adc
pop
jb
pop
aas
lahf
mov
push
sti
and
das
daa
mov
inc
push
jle
movsl
je
lods
push
or
test
jp
adc
sahf
mov
mov
jmp
mov
sbb
lahf
addr16
cld
ss
mov
cmp
sbb
clc
std
xor
arpl
int
ret
sahf
insb
or
aad
inc
loop
sub
mov
push
shrl
bound
aad
inc
popa
lock
stc
xchg
popa
fidivl
mov
outsl
ficompl
shl
movsb
lret
not
das
mov
xorb
sub
cmp
jp
xor
jne
lods
pop
pop
sub
inc
lret
mov
or
mov
sbbb
push
mov
outsl
loope
dec
push
notb
popf
sub
jnp
and
popf
das
jmp
cmpsb
call
stc
loop
jbe
dec
rcrl
bound
push
pop
bnd
mov
enter
mov
mov
adc
orl
popa
inc
int3
stos
mov
scas
mov
aaa
sub
push
add
sub
js
xchg
loop
mov
inc
cmp
lock
outsb
out
sbb
sbb
xor
sbb
js
test
sbb
enter
into
and
sbb
popf
fs
and
mov
xor
pop
jno
nop
sbb
ret
insl
call
push
iret
xor
insl
scas
icebp
in
mov
jae
scas
ja
js
movsb
mov
lret
stc
repnz
jl
orb
ja
xchg
mov
pop
mov
and
mov
test
out
push
jp
sub
dec
adc
shlb
dec
cmpsb
xorb
ret
dec
dec
outsl
dec
mov
int
cmc
out
rcll
xor
add
inc
cmp
in
insl
sbb
pushf
xchg
sbb
test
add
xchg
add
repz
jge
fwait
adc
mov
jnp
hlt
sti
or
cld
adc
loope
imul
xchg
cmp
mov
push
xchg
or
xchg
xor
ja
fmulp
pop
in
push
adc
and
mov
pushf
pop
sahf
sbb
mov
sub
gs
mov
xor
dec
push
dec
mov
loope
dec
adc
out
int3
pusha
aas
sub
xor
push
lea
scas
add
or
fs
adc
sub
adc
add
pop
mov
ret
mov
push
hlt
pop
add
out
movsb
mov
test
adc
sbb
sbb
in
push
sbb
arpl
out
dec
cmpsl
inc
imulb
xchg
inc
mov
jle
movsl
mov
sub
xchg
and
lret
clc
xchg
ds
jg
or
and
adc
movl
lods
or
mov
faddl
mov
popf
lcall
cmp
mov
add
add
push
push
cmp
cmp
push
pop
mov
lahf
in
sbb
repz
add
rorl
roll
imulb
push
lahf
fstps
mov
inc
push
mov
xchg
dec
pop
xor
addb
bndstx
scas
xor
mov
xchg
ret
lds
jne
mov
mov
repnz
mov
push
outsb
mov
push
xchg
jno
dec
sbb
add
loopne
xchg
xchg
les
sbb
lea
test
xor
push
mov
sub
aas
in
xchg
jg
push
lret
and
pop
jge
push
pop
mov
xrelease
es
jo
movsb
sbb
dec
mov
xchg
pop
sbb
pusha
mov
mov
loop
mov
and
test
or
sbb
shrl
dec
cmp
mov
mov
mov
push
add
sti
negb
mov
dec
dec
xchg
fildl
lock
imull
mov
rcrl
pop
outsb
sub
push
sbb
jo
and
push
fimuls
sub
mov
sti
repnz
movsb
sub
and
dec
inc
arpl
or
xor
mov
stos
mull
push
mov
xchg
pop
adc
adc
mov
jb
outsl
stc
hlt
lret
sbb
minps
adc
dec
pushw
fs
mov
push
stc
stc
mov
mov
jg
daa
imul
test
inc
arpl
adc
add
sbb
popf
jae
inc
and
push
or
jmp
ja
repnz
add
mov
mov
test
imul
xor
xchg
in
sub
andl
fs
lret
imul
pop
sti
test
push
test
inc
mov
dec
loope
mov
jecxz
pop
in
push
push
or
movsb
pop
mov
leave
cmc
es
add
stos
into
sbb
mov
and
cmp
and
rcrb
fsubrp
adc
testl
jbe
adc
aad
adc
adc
push
imul
pushl
mov
cli
jb,pt
mov
ss
jmp
orl
mov
arpl
sbb
pop
pop
xor
push
lock
inc
in
ja
push
movsl
mov
aas
pop
lret
fwait
or
sarl
out
mov
xchg
fisubrs
inc
pop
mov
aad
call
cmpsl
jbe
cmpsb
loopne
sbb
mov
shlb
push
mov
cltd
jp
loope
add
addr16
ds
stc
mov
loope
call
test
outsl
arpl
fmul
mov
call
fistpll
xchg
sbb
pop
adc
fisttps
arpl
push
push
inc
test
inc
push
mov
sarb
push
jo
mov
jecxz
out
pop
mov
sbb
pop
fdivp
push
loope
jbe
aaa
sbb
xor
lods
adc
xchg
mov
xor
xor
cmc
fsubrl
ret
inc
sar
shrl
dec
cmp
sbb
cmp
dec
sbb
push
jmp
add
test
push
in
xor
loop
fcoml
loopne
xchg
stc
lock
rcrb
movsb
inc
pop
je
jge
pushf
pop
rcll
in
fistl
je
in
adc
mov
pop
movsb
fisttpl
dec
xor
adc
addr16
mov
dec
lea
mov
jl
pop
or
xor
adc
add
and
mov
jg
add
xchg
adc
out
inc
dec
xor
jge
xor
sbb
sti
push
loopne
xor
cmpsb
xor
in
inc
in
push
js
filds
xchg
mov
xchg
rcrl
jmp
xor
fs
hlt
mov
ljmp
sahf
pusha
dec
in
mov
push
sbb
nop
inc
retw
fucomp
cs
pop
in
mov
movsl
gs
out
leave
inc
aad
dec
cwtl
in
push
mov
jo
mov
mov
outsl
dec
nop
dec
sub
sbb
sbb
ret
mov
es
pop
rolb
adc
cld
dec
pop
xor
bound
adc
sbb
pop
cmp
stos
cmp
mov
cmpsb
pop
push
out
mov
xchg
pop
or
pop
push
push
cld
out
shlb
push
iret
or
imul
aam
pop
test
fs
sbb
mov
imul
stc
imul
xor
mov
mov
or
sarb
add
add
mov
jg
test
out
sbbb
ja
out
add
repz
add
int
imul
jns
inc
push
les
dec
in
std
das
jmp
push
pop
xchg
lods
rorl
mov
js
jecxz
xchg
into
aas
mov
and
lret
pop
adcl
or
stos
jns
or
outsl
adc
out
cmp
or
ja
pusha
xor
add
mov
jno
popf
adc
adc
rclb
fisttpll
pop
loopne
nop
mov
int3
call
cltd
add
add
push
inc
adc
jns
pop
inc
mov
pushf
add
in
add
mov
loopne
outsb
sub
xor
inc
pop
pop
mov
push
pop
pop
mov
imul
push
and
pop
sub
dec
ret
in
or
imul
push
adc
call
push
cmc
xchg
mov
js
cmpsb
rcrl
add
mov
or
jnp
cld
cmpsb
pop
fstpl
sahf
or
mov
mov
add
ja
popf
lods
inc
sbb
inc
mov
inc
inc
sbb
popa
leave
js
mov
leave
xchg
outsl
jg
fisubl
lock
fnstenv
push
mov
andb
push
xchg
cmp
add
outsl
mov
push
das
icebp
jno
loopne
xor
mov
mov
pop
loop
arpl
adcl
xor
ljmp
sub
sbb
xor
mov
fcmovb
testb
enter
int
mov
push
xor
stc
ja
aad
ja
push
insb
and
push
or
scas
mov
or
fldenv
into
lea
dec
pushf
cmp
pop
rcrl
les
or
ljmp
fnstsw
aam
cs
jae
adc
sbb
ds
lret
call
aam
int
add
fdivl
xor
rclb
adc
adc
jns
push
add
ret
or
jecxz
pop
lcall
cwtl
iret
push
push
lds
inc
cmpsb
loopne
pushf
cmpsl
aas
lock
repnz
or
movsl
mov
push
or
fldcw
xchg
dec
cwtl
jmp
cld
insl
mov
sub
sti
jnp
int3
add
inc
je
xlat
iret
adcl
clc
jo
push
xchg
into
sub
stc
push
mull
sbbl
loopne
dec
sub
in
hlt
shrl
jmp
popa
push
cmp
pop
in
les
sbb
bound
gs
mov
adc
sti
pop
adc
ret
mov
lea
xchg
sarl
aad
add
lahf
data16
clc
mov
mov
inc
jns
add
mov
mov
xor
xchg
push
mov
popa
push
jae
ss
lds
in
push
cmp
sub
lds
cmpsl
xor
cmp
in
cmc
add
loope
rcrl
movsb
push
and
mov
push
cwtl
dec
cmpsl
xchg
das
popa
inc
in
mov
or
or
mov
test
mov
mov
mov
mov
aaa
push
jne
call
lock
popa
cltd
dec
xchg
push
xor
cvtps2pi
out
pop
les
nop
xchg
lds
jno
fsts
lods
insl
mov
jl
vmovss
xor
repnz
pop
lock
push
pop
in
aaa
lret
jl
push
inc
addr16
jo,pt
aad
pop
push
data16
jle
dec
lahf
shll
and
push
xchg
orb
out
inc
repz
sbb
pusha
xchg
sbb
stos
mov
jmp
xchg
into
push
mov
xor
imul
into
cmp
in
dec
fsts
notl
imul
or
lcall
inc
and
jnp
mov
mov
push
lcall
jle
jmp
mov
mov
loope
repz
daa
into
or
es
stos
out
cmp
aad
add
out
pushf
repz
sti
or
adc
stos
mov
add
pop
outsb
lcall
shlb
scas
xor
movsb
sbb
and
js
clc
pop
jo
pushf
mov
jno
add
rcrl
inc
mov
test
xor
add
fcomip
in
push
dec
xchg
add
or
jmp
jb
shll
jno
cmpsb
lahf
cmp
stos
cs
rcll
pop
jae
pop
or
ret
pusha
mov
adc
mov
leave
and
mov
ret
add
add
dec
mulb
repnz
out
sub
fnstenv
add
add
add
pop
sub
testb
push
xchg
and
lods
shrl
jg
mov
sbb
and
dec
pop
xor
test
mov
nop
jne
mov
popa
mov
jl
sbb
xchg
pop
sahf
loopne
icebp
mov
in
dec
sbb
mov
add
jno
std
push
leave
mov
and
mov
test
je
js
pop
add
xor
pop
aam
sti
pop
and
shlb
pop
mov
cmp
addl
rclb
stos
call
icebp
jno
addr16
lret
add
mov
in
addr16
sarb
icebp
pop
jbe
sti
outsl
mov
inc
das
sbb
pop
popf
fsubl
cmc
xor
add
dec
jnp
pop
xchg
pop
dec
aad
data16
mov
or
inc
hlt
fwait
cmp
adc
xchg
das
jmp
out
mov
movsl
cmpsb
iret
out
dec
pusha
and
js
mov
sub
scas
cmp
or
push
mov
xor
inc
ret
mov
push
ja
push
or
push
hlt
ret
pop
or
mov
je
xchg
lahf
push
out
out
lret
js
dec
sub
fwait
push
mov
xor
cmp
inc
sar
repz
aam
sub
jne
sbb
xchg
xor
ljmp
insb
adc
xlat
call
imul
in
jmp
fst
mov
aas
push
int
test
dec
push
adc
and
fwait
mov
lock
das
lret
fistpl
shl
les
addb
mov
addr16
out
ds
pop
lahf
fwait
daa
xchg
dec
push
jecxz
xchg
int3
pop
and
sub
fdivrs
xchg
mov
xchg
daa
lahf
jbe
xchg
sahf
jmp
jge
aaa
sahf
cmpsl
and
pop
in
add
dec
pop
jns
in
jbe
subl
negb
pushf
mov
stc
jl
bnd
stos
pop
mov
int
arpl
in
imul
stos
inc
add
and
push
and
inc
xchg
dec
and
xor
xchg
jns
pusha
inc
outsl
ljmp
fcomps
leave
jne
push
or
into
ss
jmp
pop
mov
inc
pop
pop
in
shr
hlt
dec
xchg
cmc
adc
push
pop
call
lcall
xor
or
pop
inc
ds
lret
xchg
maxps
push
jl
fnstcw
push
bound
leave
dec
dec
mov
or
sbb
pop
or
pop
mov
insb
stos
and
push
jecxz
sbb
push
cs
leave
pusha
or
dec
pop
sbb
xor
addl
cltd
jnp
sbb
xor
sub
roll
inc
adc
mov
testl
inc
xchg
or
or
pushf
dec
add
xor
jg
in
pop
fstpt
std
xor
inc
loop
push
xchg
sbb
popf
cwtl
and
sub
jmp
sub
cltd
dec
xchg
out
and
xchg
pop
das
and
hlt
push
dec
out
call
add
scas
inc
or
lods
je
popl
data16
mov
out
xlat
ds
imul
loope
adc
pop
in
fidivs
push
mov
sbb
and
ljmp
leave
bnd
test
incl
cs
mov
repnz
lods
mov
mov
sub
cltd
add
push
inc
shll
aaa
es
jno
rep
push
cmp
int3
mov
lret
push
cmp
xor
sbb
and
jl
ret
mov
jge
insl
cwtl
dec
std
inc
adc
jo
ret
pushf
rcr
or
mov
rcll
push
sahf
mov
inc
test
popa
push
in
mov
mov
mov
pop
mov
ss
pop
loope
pop
dec
stos
insb
insb
fmuls
xchg
cwtl
ds
mov
fs
sub
mov
ret
jno
mov
scas
dec
jns
or
rclb
fisubs
or
mov
rolb
out
nop
adc
jecxz
repnz
icebp
and
xor
stos
sbb
test
mov
pop
lods
mov
in
and
adc
or
lock
cmp
imul
push
nop
xchg
adc
pop
cmc
daa
cmp
ficomps
adc
sbb
pusha
cmc
push
mov
faddl
movsb
or
jo
jno
fistps
jae
je
aad
jb
and
mov
pop
out
xchg
push
add
add
mov
mov
mov
add
daa
int3
ja
add
add
add
push
sub
add
dec
adcb
cs
fwait
mov
lods
pop
icebp
mov
jbe
sbb
ds
mov
enter
jecxz
cmp
mov
inc
push
out
mov
leave
xor
pop
scas
pusha
ficoml
scas
sbb
repnz
bound
or
sub
ss
jno
cmp
pop
addr16
add
in
test
dec
mov
mov
cmpsb
fsubl
or
shl
mov
inc
aad
push
mov
add
xchg
pop
lret
dec
ds
cmp
lahf
push
out
xor
mov
xor
jmp
add
dec
jns
ds
mov
cmc
arpl
sbb
aad
scas
shl
mov
decl
xchg
sbb
aas
xor
repz
add
sbb
cmpsl
mov
std
test
stc
push
adc
push
mov
cwtl
aas
popa
pop
sbb
ret
mov
jo
xchg
fisttpl
xor
jge
or
jle
ret
mov
sub
outsl
and
stc
imull
pop
ljmp
mov
mov
iret
repnz
push
loopne
mov
test
inc
mov
inc
pop
inc
and
xor
add
mov
push
outsb
insl
adc
popf
or
les
mov
fnsave
movsb
lods
inc
mov
sbb
or
ljmp
rcrb
push
xchg
xchg
xor
mov
mov
das
sahf
cmp
cmpl
sub
loope
pop
dec
addl
inc
sub
fmull
popf
cli
adc
xchg
push
mov
into
xchg
xchg
test
int
mov
mov
sti
push
enter
insb
push
pop
cli
pxor
adcl
mov
into
lea
lods
inc
jmp
insl
or
mov
mov
push
xchg
pushf
cmpb
cmp
cli
push
lcall
inc
xchg
out
loopne
or
sbb
lret
insl
data16
pop
fs
std
pop
or
lods
cmp
mov
mov
or
dec
sub
dec
pop
repz
xor
out
fwait
testb
pushf
push
std
cmp
adc
flds
leave
adc
icebp
or
fistl
pushf
ficompl
sub
xchg
sub
jnp
lret
mov
ficomps
aam
dec
popf
sub
mov
jle
das
adc
sbb
daa
xor
or
mov
lods
into
sub
mov
fldt
cmp
arpl
dec
pop
mov
sub
scas
rcrb
rcll
dec
aaa
push
test
mov
or
cmp
int3
mov
push
imul
aam
movsb
mov
jne
sarl
cli
xor
mov
sub
imul
jne
daa
cmp
fs
rclb
arpl
scas
xchg
xor
xor
xchg
hlt
cmp
inc
jbe
pop
imul
hlt
repnz
jmp
stos
fwait
sub
popa
mov
sbb
cmp
add
inc
imul
mov
repnz
fsubrp
cmpsl
jge
sahf
cmp
nop
addr16
sub
cmpsb
xlat
sbbl
movsl
jecxz
xchg
repnz
pop
test
jb
jmp
pop
xor
sbb
cmp
sub
jge
ret
push
lahf
xchg
cmpsb
fwait
and
dec
stos
or
mov
xor
adc
jae
mov
sahf
orl
xlat
dec
push
psubq
jbe
sbb
ds
sti
aaa
fcmove
add
mov
add
jnp
and
daa
jp
sbb
mov
pop
xchg
inc
ds
sub
movsl
es
repz
lret
mov
lods
jo
xor
push
pop
andl
jns
fsubs
movsb
jno
xor
lcall
jb
mov
xchg
adc
jns
mov
cld
aad
cmpsb
jp
inc
mul
mov
repnz
iret
sub
cmp
cwtl
and
sub
pusha
scas
fdivr
xchg
fldcw
jb
dec
sahf
dec
sbb
mov
mov
loop
sahf
or
and
jg
shlb
jg
mov
outsb
call
jbe
xor
insb
icebp
mov
movsb
je
test
sarb
paddd
cmpsb
push
not
push
lds
add
add
xchg
test
push
mov
and
add
repz
add
xchg
and
adc
and
add
ljmp
or
add
adc
imul
sbb
mov
mov
mov
pop
int3
fisubl
sub
push
nop
loope
aad
out
pushf
inc
out
xlat
sbb
jb
cmp
inc
fcmovnbe
stc
lods
arpl
or
xor
dec
add
push
pop
pop
pop
or
fldt
push
adc
adc
fiaddl
fisubrl
mov
mov
ret
mov
mov
int
js
imul
aaa
subb
xor
sbb
fiadds
xor
subb
adc
mov
cmp
fst
add
imul
movsl
test
add
std
vdivps
xor
push
fdivrs
and
jle
ret
or
push
push
mov
mov
dec
aaa
sbb
lret
into
push
in
jg
fs
adcl
jns
cmp
stc
jae
outsl
sarb
add
mov
xchg
dec
movsb
loope
and
lahf
fcmovbe
add
inc
xchg
out
mov
aas
aaa
inc
jne
dec
jle
lods
xlat
xor
pop
add
subl
adc
inc
outsl
in
mov
mov
jnp
adc
imulb
xor
in
das
cmp
icebp
pop
fldlg2
cmp
dec
pop
subl
inc
dec
fisttpl
call
xchg
xchg
xchg
inc
adc
sahf
iret
jmp
push
cmp
addb
sbb
mov
dec
inc
pop
repz
cmp
cmc
call
cmpsl
push
movsb
inc
push
stos
gs
ss
mov
pinsrw
fwait
push
pop
ds
mov
and
dec
movsb
sub
cmc
test
pushl
repz
cmpsl
cltd
mov
fstpl
les
data16
cmp
loop
inc
cld
ljmp
lods
fisttpl
loope
cmc
cmp
and
pop
imul
or
lcall
jp
push
add
pop
jns
test
cmpsl
ss
lea
xor
ds
iret
mov
out
ret
and
nop
push
adc
adc
aad
jmp
pusha
xchg
jns
addr16
adc
pop
pusha
xor
and
dec
jae
psadbw
adc
rclb
sub
push
pop
add
aam
pop
int
xor
test
scas
inc
pop
cmp
idivb
jle
je
xchg
scas
jg
std
jge
cmp
dec
shrl
test
push
and
aam
sub
enter
fcmovnu
enter
sub
and
loopne
lahf
iret
cmp
iret
mov
or
cli
adc
sub
in
push
not
mov
insl
or
ret
mov
je
fldl
pusha
les
and
sub
call
lcall
iret
dec
subb
cmpsl
test
out
mov
add
mov
mov
pop
cmp
inc
dec
imul
scas
cmp
mov
push
xor
jge
ret
ret
decb
clc
test
mov
ret
xchg
mov
or
fdivl
mov
pop
call
out
mov
fwait
jno
in
inc
loop
add
les
lcall
pop
pop
push
pop
lea
push
movsl
adc
sub
dec
xlat
loope
pop
adc
mov
cmp
lret
xchg
cmp
aas
jno
mov
inc
cmp
fists
filds
sbb
mov
add
hlt
lock
loop
pop
jnp
cmpl
in
jns
pushf
xchg
xchg
sub
mov
test
std
in
or
addr16
inc
sti
sbb
push
ss
pop
pop
hlt
stc
leave
cs
jne
test
jno
sbb
leave
addl
pop
outsb
sub
idiv
mov
push
inc
push
lods
mov
fbld
fcmovnbe
addps
enter
cmp
out
cmp
pusha
xchg
push
jge
sub
bound
daa
gs
ret
shlb
mov
mov
or
add
jae
and
leave
or
fdivs
hlt
dec
adc
inc
and
incl
jmp
push
aad
xor
mov
and
or
shrb
fcompl
cmp
pop
stc
addr16
sbb
add
add
add
pop
fldl
inc
sti
aas
jb
add
mov
add
repz
add
dec
in
nop
push
out
pop
add
cmp
mov
lock
push
cmp
mov
mov
in
xchg
sbb
ljmp
cmpsl
jne
or
mov
ja,pt
mov
scas
imul
push
scas
or
into
ja
jmp
dec
pop
mov
sti
ss
sub
and
adcl
dec
xlat
out
push
pop
dec
stc
fildl
fldt
mov
inc
ljmp
cmpsl
aaa
sub
xchg
inc
jmp
ror
ss
dec
pop
in
fisttpll
das
xchg
pop
or
push
leave
das
or
fwait
xchg
add
xchg
inc
xchg
jb
sbb
xchg
push
es
adc
mov
cmp
test
roll
and
hlt
dec
shll
adc
mov
push
daa
sub
and
out
mov
sub
mov
scas
fldl
inc
jb
daa
jbe
ficompl
xchg
sti
test
int3
stos
loop
sub
pusha
add
test
js
and
mov
aaa
mov
test
mov
sub
cli
int
ss
dec
es
push
jae
inc
xchg
pop
mov
xchg
xlat
cmp
out
test
test
test
or
mov
sub
mov
into
lret
test
cs
mov
push
or
dec
imul
loope
pushl
in
out
cmp
gs
cmp
mov
in
imul
adc
mov
pop
pusha
lret
inc
inc
repnz
ror
mov
mov
add
mov
aam
addl
add
push
push
add
push
lcall
aam
push
inc
cmp
or
les
mov
adc
incb
adc
rolb
int
mov
jp
adc
test
push
sti
jle
sbb
xchg
jl
in
jecxz
mov
testb
ljmp
inc
pop
mov
idivl
sbb
mov
int
hlt
lret
hlt
xor
insl
std
fs
and
dec
mov
and
inc
leave
cwtl
mov
outsb
repz
test
or
repnz
and
test
push
pop
mov
sbb
jb
xchg
jnp
movsb
mov
insb
cmpl
sub
js
xchg
orb
cmc
hlt
adc
cmp
jg
out
aad
in
add
push
les
dec
je
xchg
fsubs
adc
push
pop
jnp
push
push
scas
xor
lods
leave
push
dec
mov
inc
dec
repnz
in
xor
inc
xchg
shl
scas
lret
mov
xchg
push
aaa
lock
pop
repnz
xchg
fs
imul
lahf
out
cmpsb
cmp
jae
and
push
test
scas
mov
fisttps
and
mov
jecxz
lea
ljmp
lods
dec
aam
sub
push
mov
xor
dec
mov
notl
pop
das
leave
cwtl
mov
enter
in
xchg
enter
sbb
and
repnz
clc
dec
adc
lahf
push
add
insl
mov
mov
dec
jmp
pop
mov
lahf
fstps
leave
push
sarl
xor
dec
das
jne
sbb
imul
repz
mov
ficoms
adc
test
push
push
cmpsb
jl
adc
ret
in
je
ljmp
imul
add
and
push
pop
jne
bound
inc
and
ret
pop
repnz
dec
sub
or
mov
push
pushf
arpl
mov
sub
sahf
sbb
popf
gs
push
pop
aam
inc
out
mov
test
imul
fdivl
cmpsl
cmp
out
inc
adc
jge
add
roll
adc
leave
xor
aad
or
xchg
call
sbb
hlt
imul
loopne
push
push
aaa
or
movsl
jge
icebp
cmp
test
ds
jl
pop
mov
lea
pop
stos
jecxz
and
cmp
ror
scas
mov
push
jp
aad
sbb
cmp
into
ds
and
int3
push
push
mov
sbb
daa
mov
fdivrl
jbe,pt
daa
xchg
popa
jo
rorl
mov
icebp
add
mov
adc
cmp
sub
icebp
mov
xchg
sbb
dec
add
add
add
jge
mov
or
test
xchg
add
add
add
mov
cli
mov
sbb
gs
push
ficomps
dec
mov
mov
mov
inc
mov
sub
and
or
xchg
pop
lret
xor
jne
push
shll
in
xchg
in
fsubl
adc
stos
cmp
mov
or
dec
cwtl
inc
sbb
pusha
cmp
ret
lock
push
fisubrs
in
adc
xor
inc
jp
je
sub
out
adc
add
mov
cs
fwait
adc
jg
out
adc
adc
or
popa
int
mov
pop
dec
mov
arpl
mov
fmull
sub
and
stos
data16
dec
fdiv
sbb
add
jle
adc
iret
and
fcom
or
js
cmp
dec
mov
xchg
xchg
pop
out
daa
lods
jmp
loope,pt
push
fbstp
fisttpl
push
gs
subl
jne
pop
and
lahf
jecxz
or
mov
inc
sbb
or
fadd
fadd
outsl
repz
sub
cmpsl
dec
aam
cmp
add
add
sub
inc
add
xchg
sub
lods
dec
add
enter
mov
xchg
mov
push
jo
add
sbb
inc
stos
adc
dec
addr16
adc
orw
sti
idivb
rorb
es
or
inc
popf
and
adc
adc
scas
push
lahf
insb
ret
mov
stos
outsb
out
mov
push
xor
loopne
pop
mov
or
loope
xchg
es
mov
mov
pop
les
mov
imul
leave
push
std
dec
fwait
movsl
adc
std
xchg
aaa
adc
xchg
movl
imul
lea
fmull
lret
cmp
in
test
in
test
mov
or
lock
pop
push
lock
push
std
outsl
xorb
bound
push
mov
int
les
mov
pop
rcrb
push
mov
int
xchg
and
sub
ds
jl
adc
push
xchg
mov
dec
adc
cmp
push
xend
push
inc
rolb
fidivrl
mov
add
rcl
and
sahf
enter
lret
push
sti
ret
xor
jae
mov
pop
mov
divl
inc
push
cli
out
cmp
movsl
mov
or
pop
mov
sbbl
inc
pusha
push
movsb
cmp
cmp
fisttpll
into
pop
pop
rcrl
and
cmpsb
inc
ficompl
dec
sub
xchg
rcrl
mov
mov
sahf
push
adc
mov
sub
pushf
std
clc
sarl
test
xchg
inc
sub
mov
subb
push
cwtl
or
mov
rcll
add
add
jmp
jbe
mov
push
data16
add
cltd
iret
mov
pop
test
test
add
xor
loopne
andl
cld
movsb
movsl
outsl
mov
mov
push
out
js
add
loop
xchg
add
jp
ds
lret
ret
mov
xchg
rolb
fldl2t
out
in
xor
insb
or
addr16
sub
add
add
cld
outsb
xor
push
shlb
cs
cmc
out
dec
lea
cmp
lret
stos
in
loopne
pop
jle
mov
pop
pop
lret
aaa
clc
fisubs
xor
negl
adc
popf
lcall
sbb
pop
ficomps
mov
push
push
movsb
aaa
cltd
mov
loope
mov
dec
insb
xchg
out
jbe
test
lcall
inc
xchg
xor
lahf
call
shll
dec
xor
icebp
pop
fmull
pop
in
cs
xor
out
movb
lret
loopne
std
cmp
icebp
cmp
mov
jbe
mov
dec
movsl
loopne
jo
mov
or
sub
call
push
push
aaa
mov
xorl
lahf
or
out
ds
andl
stos
cli
fistps
stos
jns
call
sbb
sahf
jmp
mov
test
fldcw
pusha
xchg
cld
adc
add
inc
xchg
sti
out
jbe
dec
ss
push
mov
add
add
add
mov
cmp
push
add
add
add
dec
outsl
mov
shlb
icebp
pushf
sbb
sahf
movsl
loopne
fildl
test
repnz
dec
arpl
lret
fildll
xlat
jecxz
cli
mov
and
xor
jae
push
popa
out
dec
jge
dec
cs
cmp
sar
pop
lret
dec
push
popf
dec
sti
in
xchg
mov
push
mov
mov
js
mov
icebp
sub
out
pushf
cmp
cmp
inc
shrl
int3
stc
nop
cwtl
arpl
js
scas
jecxz
inc
cmpsl
jnp
nop
xor
popf
in
pop
js
inc
enter
pusha
inc
dec
lods
and
sbb
add
jnp
xchg
cmp
add
xor
sahf
mov
push
sub
cmp
mov
movsl
clc
or
xchg
pop
mov
mov
inc
mov
sub
outsb
or
in
inc
loop
inc
popf
int
lret
push
in
pop
mov
stos
lahf
ja
sbbb
xchg
fstl
leave
dec
xchg
subb
sub
cmp
cltd
jle
mov
pop
mov
mov
jmp
sbb
mov
test
jbe
xor
inc
push
fstl
lds
mov
scas
pop
int
pop
mov
out
popf
and
add
int
mov
rcrb
dec
push
icebp
xor
lret
dec
jl
pop
add
xchg
imulb
jl
jo
mov
cmp
cs
call
mov
nop
lods
out
xor
pop
mov
andb
jle
imul
ds
out
dec
arpl
sbb
test
mov
mov
cs
shll
mov
sbb
mov
movsb
mov
addb
das
bound
or
mov
jecxz
sbb
xchg
jns
mov
ljmp
xchg
jl
mov
into
dec
shl
cmpsl
notl
jg
inc
pop
jno
or
out
add
and
dec
enter
stc
cmpsb
mov
leave
pop
stos
sub
sub
adc
ds
inc
or
insl
mov
sbb
push
push
loope
cmpsb
lds
add
push
xor
mov
mov
or
fcmovbe
fcomp
je
or
int
xor
cmc
dec
jle
out
jmp
push
testl
push
aad
cmp
in
lahf
mov
sub
sbb
lret
mov
pushl
xchg
in
pop
cmp
jmp
sbb
jecxz
outsl
fwait
imul
aam
jecxz
pop
mov
pop
mov
inc
cmp
out
popa
shlb
xor
insl
cmp
adc
cltd
xchg
pop
mov
mov
add
pop
push
adc
pop
pushf
ja
pop
inc
push
lods
dec
add
loopne
repnz
js
or
add
stos
mov
mov
cmp
pop
movsb
push
adcb
adc
ja
insb
sub
addl
out
lods
mov
cld
aad
push
call
add
and
xchg
inc
lcall
pop
test
mov
js
mov
movsb
test
enter
sbb
notl
or
gs
push
mov
test
cmp
xchg
les
mov
mov
xor
sbb
jmp
lods
dec
mov
pop
ds
cmovnp
ret
ljmp
adc
popf
popf
xchg
jne
shrb
lahf
xchg
mulb
or
push
aam
or
jnp
xor
cmp
loopne
aaa
or
loop
push
mov
hlt
xchg
push
inc
jge
cmp
bound
jnp
mov
push
jns
lock
shrl
jmp
clc
add
fdivs
xchg
jnp
mov
stos
mov
push
in
inc
push
push
lret
popa
into
adc
cmp
sub
adc
mov
imul
or
xor
mov
pop
imul
add
inc
loope
out
push
shlb
xor
xchg
jbe
jne
lahf
sbb
into
inc
jbe
fs
fldz
std
dec
mov
inc
aam
mov
and
jge
fists
fwait
inc
sbb
mov
ret
nop
mov
mov
insb
cs
mov
daa
je
repz
mov
cmc
push
imul
fnstsw
les
shl
fistps
or
add
sti
and
es
sti
std
sbb
adc
xor
add
add
ret
repz
xchg
sbb
inc
fildl
ss
dec
cltd
mov
mov
mov
jge
dec
mov
sub
fwait
xor
shl
pushl
adc
fisubs
inc
pop
or
test
out
xor
shll
lods
dec
pop
call
scas
cld
mov
xchg
popf
ss
jne
sbb
pop
hlt
lods
adc
or
outsl
stc
test
sbb
xchg
cmp
rclb
pop
mov
jne
inc
repnz
dec
repz
push
or
fistpll
push
mov
das
jg
mov
hlt
jbe
mov
push
pop
push
ret
test
cs
add
ljmp
ja
stc
adc
dec
cmp
lcall
xchg
lock
out
ror
pop
add
dec
jb
stos
jno
out
fdivl
mov
je
pop
sub
inc
and
das
jo
pop
mov
test
sbbb
fadds
decl
adc
rcrb
icebp
pop
pop
jl
je
sbb
movsl
repz
fidivl
gs
xchg
popa
xchg
mov
ja
lret
mov
xor
loopne
mov
add
divl
cmp
sbb
lods
mov
stos
pop
and
fldenv
das
loope
dec
out
mov
sub
lret
insb
int
push
les
mov
jge
popa
nop
mov
lods
js
and
stc
sbb
push
ret
jno
mov
mov
sarb
fdivs
pop
dec
jg
pop
rol
repnz
js
and
popa
negl
lock
nop
test
rol
xchg
gs
jg
int3
scas
mov
adc
pop
jg
outsl
jmp
or
push
mov
data16
cmp
push
and
call
jnp
ret
pop
and
cmp
add
lock
mov
push
out
jno
lods
inc
mov
push
in
in
xchg
mov
dec
pop
subb
ret
sub
sub
adc
and
mov
popf
cld
ja
adcl
icebp
pop
pop
sub
mov
inc
adc
xor
das
push
xor
xor
bswap
xor
lock
inc
mov
jecxz
xchg
xor
push
addr16
dec
mov
mov
jae
fstpl
xor
or
shlb
rcrb
and
push
pop
outsl
dec
call
mov
xchg
lds
pop
mov
push
ret
xchg
mov
cmpsb
xchg
cs
mov
sbb
push
call
mov
push
decl
jbe
sbb
pushl
xor
out
xchg
lock
mov
or
shlb
mov
xchg
aam
adc
sub
scas
mov
cmp
movsb
mov
adc
fs
mov
jb
rcrl
gs
adc
sti
pop
loope
xchg
push
mov
inc
cmp
or
adc
cld
fidivrl
mov
in
lcall
jge
sbb
sub
sti
dec
sti
pop
fcomps
fisttps
sbb
das
lds
sbb
imul
dec
imull
bound
jmp
sbb
leave
fidivrs
mov
xorb
mov
stc
outsl
jmp
dec
inc
xchg
call
pop
dec
and
ror
mov
and
pop
xchg
out
dec
mov
out
pop
pop
rcl
cmp
jb
push
icebp
push
repnz
xchg
sbb
pop
out
jge
or
jmp
mov
mov
loopne
dec
inc
psrlq
lock
or
and
cwtl
test
pop
js
nop
sub
mov
fildll
sbb
sub
mov
push
js
push
jne
mov
push
aad
test
fwait
imul
fdivl
or
pop
loop
mov
pop
addl
cmp
cltd
pop
sub
xlat
cmp
popf
jmp
roll
sti
int3
insl
scas
adc
sbb
jo
sbb
into
mov
mov
bound
fbstp
mov
cmp
add
je
and
mov
shlb
push
or
xchg
icebp
movsb
and
or
rorl
xorb
sbb
jg
lcall
mov
repz
add
xchg
fnstenv
xchg
add
popf
adc
stc
sbb
cli
shrl
jmp
sbb
sub
mov
mov
cmp
outsl
cpuid
mov
ret
mov
in
and
fisubl
add
inc
inc
pop
sub
inc
mov
mov
and
addr16
enter
push
xchg
rolb
sub
out
out
ss
xchg
cmpsl
dec
jae
xor
rclb
dec
adc
int3
mov
pop
inc
dec
icebp
or
sbb
sub
jo
shl
dec
adc
xchg
jns
jl
xchg
out
adc
add
push
mov
rorl
ret
cs
and
mov
scas
and
arpl
jl
dec
jle
jge
loop
push
pop
xchg
xchg
sbb
mov
xchg
fucomi
imul
repz
clc
push
xchg
pop
lret
movl
fs
pop
xor
sahf
jl
adc
into
int3
fs
mov
outsb
enter
call
xchg
inc
mov
mov
mull
test
xor
call
aas
dec
fnstenv
shll
push
pusha
lock
mov
outsl
ffree
rcrl
mov
push
ret
or
adc
mov
xor
jae
add
pop
push
mov
lret
adc
pop
cmpsb
aam
dec
or
stos
int3
es
sbb
mov
mov
sahf
lods
jg
lods
push
fdivp
insb
lret
stos
cmp
addr16
and
mov
and
mov
mov
add
and
gs
test
fisubl
sbb
jne
xchg
sbb
mov
pop
mov
movsb
xor
aad
and
cmp
dec
aas
xchg
popf
push
jge
or
ret
mov
mov
rcr
nop
lahf
pushf
inc
int3
mov
test
jp
inc
mov
push
xor
lret
bound
stos
pop
clc
aaa
adc
jne
mov
shl
imul
inc
cmp
jmp
pop
jle
sbbl
int
ss
sar
les
gs
roll
out
ret
mov
push
and
jae
mov
mov
sub
xchg
cmp
outsl
lds
inc
push
add
xchg
pop
addr16
inc
out
addl
mov
test
clc
sub
and
lahf
shrl
cmp
mov
sbb
add
stos
daa
inc
fldl
aam
js
mov
sahf
xlat
push
and
arpl
mov
faddl
sub
jb
lods
add
fwait
std
inc
mov
lret
orl
test
gs
lret
movsb
cmc
mov
push
sub
push
into
dec
scas
clc
mov
movsl
cmp
jle
mov
in
rorb
fisubs
mov
arpl
cmp
jmp
mov
dec
mov
pop
add
xchg
pop
jnp
scas
movsl
cmp
lock
push
cmp
bound
loopne
popa
cmp
adc
mov
es
insb
cmp
rolb
pushf
xlat
outsl
and
mov
mov
das
aam
ret
imul
pop
cmp
rclb
dec
bound
lahf
insl
sbb
cwtl
mov
or
mov
push
stos
je
push
inc
adc
adc
adc
cmp
out
es
xchg
je
add
adc
push
inc
add
jle
push
jno
adc
add
in
jle
sub
xchg
iret
mov
xchg
push
add
repnz
adc
push
xchg
cmpsb
xchg
outsb
xchg
cltd
cmc
shll
xchg
daa
xor
stos
push
push
sbb
sbb
es
out
sbbb
xchg
jecxz
pop
in
mov
or
fimull
loope
sbb
icebp
nop
adc
cmp
sbb
pandn
sub
fstpl
insb
xor
pop
stc
ror
mov
xor
imull
xor
shr
aad
or
ss
cwtl
inc
andb
movsl
pop
loopne
inc
jne
cmp
dec
in
jae
and
cmpsb
cwtl
pop
adc
int
xor
fdivrs
insb
hlt
emms
dec
shlb
data16
pop
into
inc
addr16
repz
mov
pop
sbb
or
inc
xor
sbb
push
jo
outsb
loopne
sbb
sti
lea
push
dec
inc
rcll
lcall
stc
pop
sub
stos
jns
dec
sub
and
push
and
repz
add
or
fs
jl
test
movsl
push
xchg
dec
scas
int
or
sub
adc
imul
test
pop
cmp
ffree
xchg
adc
js
jl
xchg
loope
sub
das
das
xor
dec
stc
or
adc
fwait
loopne
add
sbb
js
pop
imul
loop
xor
pop
inc
pop
jb
jbe
les
and
xchg
xchg
js
cltd
ret
fdiv
sub
inc
or
inc
mov
jecxz
fisubrl
add
cs
shl
jno
xor
dec
sub
cwtl
inc
sbb
mov
psubq
sbb
lret
jl
shll
xchg
inc
jp
xor
pop
xor
arpl
and
lds
ja
xor
jge
faddl
shrl
jmp
mov
mov
adc
jle
out
xor
jno
decb
bound
dec
mov
or
lea
sub
or
aas
sbb
xlat
aas
mov
or
rcrl
ucomiss
mov
fwait
lock
aas
mov
aaa
hlt
pop
add
dec
ret
push
mov
adc
mov
mov
es
push
mov
push
add
mov
lods
call
and
cld
insb
mov
inc
cmp
and
call
dec
fistpl
mov
mov
mov
jp
insb
and
in
mov
outsl
mov
int3
out
cmpsl
mov
in
adc
fs
aad
loope
stos
decb
in
dec
movsb
jp
inc
and
mov
insb
jne
adc
fsts
dec
rcrb
pop
in
mov
enter
out
and
xor
pop
decb
scas
andb
and
pop
repnz
push
xlat
sbb
sub
adcl
jmp
cltd
stos
jnp
je
ljmp
mov
or
add
mov
enter
ret
ret
test
xchg
stos
jnp
or
je
in
fnstenv
mov
popf
push
es
push
add
push
ss
sbb
mov
bound
cmpsb
in
jp
inc
push
lds
mov
mov
mov
ret
in
pop
push
sbb
mov
pop
mov
mov
mov
mov
fnstenv
jne
outsl
jp
dec
gs
cld
pop
dec
add
mov
mov
fisubrs
fadds
adc
mov
jl
loope
dec
push
jae
ja
popf
mov
mov
add
mov
push
pop
mov
or
jecxz
pop
hlt
int3
sub
inc
cmp
adc
sub
jl
stc
jl
fwait
nop
lods
into
lea
lea
mov
mov
adc
or
mov
gs
adc
or
scas
aaa
std
shrl
lret
cmpsb
popf
lea
push
in
sbb
cmpsl
negb
bound
jno
test
hlt
inc
sub
cmp
test
push
out
adc
imul
cmp
aas
loopne
js
push
out
fstpl
shll
add
inc
jo
ret
jb
xor
lret
pusha
mov
and
pop
lea
dec
btr
mov
xchg
cmp
in
insl
xor
cmp
adc
xchg
mov
fcoml
xchg
ret
cld
dec
xor
mov
ss
mov
jmp
test
aam
loopne
das
in
andl
mov
push
pop
into
push
cmp
inc
sbb
and
mov
and
jo
push
test
fidivs
movlps
add
sbb
jnp
testl
inc
aas
and
pop
outsl
lods
inc
sbb
jno
dec
lods
into
mov
in
mov
popa
adcb
sub
sti
xlat
iret
mov
jge
cwtl
dec
mov
cmp
mov
jae
jno
les
sub
in
cmp
cli
jmp
cltd
mov
xor
shrb
dec
jb
and
push
dec
xchg
enter
mov
cmpb
mov
hlt
lahf
mov
stos
mov
hlt
dec
js
int
xchg
orb
dec
iret
test
movswl
push
xorl
pop
adc
add
mov
and
mov
mov
rcll
pusha
outsl
addr16
add
dec
icebp
sub
sbb
add
add
lret
dec
jge
xchg
outsl
jge
lcall
add
repz
add
lds
fisubs
lock
setne
addb
mov
mov
push
jne
mov
pusha
int
mov
mov
xchg
mov
adc
ds
cld
into
das
into
mov
jo
and
jo
subb
subb
bound
les
pop
push
mov
lock
das
icebp
ljmp
mov
or
nop
inc
lret
aaa
mov
cwtl
bsr
push
gs
mov
fisttpl
or
add
mov
xchg
dec
cmp
imul
cmp
mov
pop
cmp
stos
loope
mov
add
je
pop
lods
dec
lahf
mov
mov
and
mov
mov
andb
in
orl
sub
es
sbb
lods
cs
ds
loopne
test
in
sub
div
mov
iret
pop
or
rorl
push
cmpsb
fwait
ja
fwait
je
cli
inc
pop
stos
mov
int3
pop
cmp
sub
xor
inc
mov
xor
cwtd
test
scas
mov
jl
push
mov
push
xor
fmuls
mov
leave
add
jl
sbb
iret
fldl
pop
test
lods
cwtl
or
and
inc
repz
jge
mov
or
leave
icebp
pop
mov
and
notb
lahf
mov
divl
std
andl
in
cs
adcb
test
incl
test
xchg
jb
ret
adc
push
loopne
test
outsb
mov
pop
rcll
dec
ficoms
fs
add
add
arpl
and
sub
sub
hlt
pop
mov
mov
fs
inc
xor
fucomi
inc
jmp
insb
sti
cmp
sub
cs
loopne
push
mov
pop
das
loope
arpl
repz
cmp
pop
jle
call
dec
and
bound
xchg
xor
imul
std
push
fidivs
rol
jp
shlb
stos
clc
stos
jmp
ss
inc
and
mov
sahf
adc
xor
xchg
inc
repnz
adc
notl
inc
pusha
sub
adc
add
xchg
jle
cmpsl
repz
loope
sti
pop
add
clc
loopne
jo
push
xchg
fiadds
lret
mov
sub
insb
out
popa
scas
inc
lock
mov
mov
xlat
inc
mov
push
aad
aad
test
andl
xor
mov
dec
mov
mov
adc
lods
fistpll
pop
outsl
pop
add
std
cmp
sub
push
arpl
icebp
mov
jecxz
inc
mov
stos
pusha
outsl
sbb
lcall
dec
xor
or
and
in
popa
mov
js
loope
movsl
jp
jo
or
dec
push
test
mov
sbb
jmp
mov
ficoms
and
jmp
cmpsl
inc
imul
outsb
cmpsb
sbb
stc
scas
leave
iret
movsl
inc
adc
mov
jl
cmp
pop
and
test
out
inc
outsl
add
ljmp
call
sahf
rcll
dec
cmp
das
sar
xchg
iret
cmpsb
mov
push
outsb
xchg
mov
aas
fisttpl
mov
aas
and
dec
push
or
pop
lods
nop
xor
jne
loope
inc
js
xchg
leave
fwait
out
ffree
add
fiaddl
test
jle
pop
push
aad
mov
in
sub
fadds
fidivrl
dec
add
incb
sub
insb
and
pushf
or
push
repz
imul
hlt
fbld
add
jmp
cmp
mov
rorb
js
call
and
enter
push
je
mov
loop
pushf
xchg
mov
xchg
fs
xor
cltd
dec
call
adcb
and
int
xor
jno
pop
jae
dec
jge
cs
mov
mov
mov
or
pop
jnp
cmpsb
inc
cmp
jmp
insb
mov
mull
and
jns
add
and
fdiv
ret
in
push
sbb
xor
fistps
aam
nop
inc
xchg
or
adc
jmp
pop
lcall
into
adcl
aaa
aam
inc
outsl
pop
testw
add
xlat
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
xor
test
mov
daa
inc
int3
adc
movsl
pop
je
fs
mov
push
test
cmpsl
xchg
jecxz
mov
cmp
mov
stos
in
fnstsw
std
fcmovnu
xchg
inc
xlat
cmp
fwait
adc
mov
mov
mov
mov
in
mov
sub
dec
std
cltd
xchg
sbb
lods
arpl
repnz
sub
mov
xchg
xadd
outsb
push
pop
divb
sub
cmp
fs
das
dec
jne
cli
xor
sub
ja
cld
dec
mov
xor
xchg
sarb
enter
add
sub
test
mov
cmc
xchg
mov
push
call
mov
pop
test
aaa
xor
test
clc
xor
leave
ss
or
mov
pop
adc
lods
and
int3
and
dec
and
movsl
in
mov
xchg
sbb
ljmp
pop
fisubl
or
pop
stos
fidivrl
in
or
pop
sbb
mov
cmpsl
lahf
es
adc
iret
cmp
mov
xor
test
ret
popf
sbb
icebp
and
sbb
arpl
jecxz
xor
lahf
in
in
and
pusha
iret
jl
ss
dec
and
mov
pop
pop
and
arpl
arpl
lcall
dec
aad
lret
icebp
mov
js
xchg
add
xor
rcrl
mov
or
mov
jns
cmp
mov
mov
pop
and
in
mov
shlb
es
test
jnp
or
div
jmp
test
inc
push
dec
into
jecxz
xor
out
aas
lods
lods
mov
dec
imulb
dec
fbld
mov
aaa
xchg
movsb
push
mov
add
loopne
mov
add
sub
and
mov
or
sarb
ds
fmul
or
pop
cmp
inc
push
sub
negb
hlt
mov
enter
pop
clc
jmp
jo
add
mov
scas
mov
stos
jge
inc
insl
stos
pop
sbb
aam
clc
ffree
sbb
repnz
out
sti
mov
sbb
xlat
mov
ss
sbb
jne
push
dec
fistps
mov
jae
xchg
nop
filds
jb
dec
mov
int3
dec
loop
ret
stos
stc
adc
daa
psllw
dec
mov
xchg
mov
nop
loope
inc
xor
xchg
xlat
sbb
mov
sub
scas
sahf
sbb
inc
xchg
adc
orb
jmp
sub
shrb
scas
inc
xchg
fsubl
arpl
xchg
pop
es
lret
fsubrp
and
jns
js
xor
cmp
mov
or
inc
into
push
sbb
inc
pop
or
xchg
std
cmp
mov
xchg
add
dec
cltd
scas
dec
jns
inc
pop
ds
mov
sti
jg
cmovle
sbb
shl
xor
idiv
push
sbb
popf
outsl
dec
lds
and
lret
pop
data16
sarb
in
addr16
addr16
rcrl
cltd
divps
sbb
lods
inc
test
pusha
mov
push
xor
mov
and
stc
leave
in
in
inc
movsl
js
lds
pop
arpl
orl
mov
sbb
add
sbb
out
stos
cld
leave
loope
scas
inc
icebp
push
push
or
movsl
mov
xchg
sbb
sar
shll
cli
mov
jns
and
xchg
cmpsl
and
and
xor
push
pop
lret
aam
ficoml
inc
orl
repnz
dec
push
gs
dec
bound
sub
xor
insl
call
enter
pushf
pop
insl
repnz
idivl
xorb
jle
aaa
stos
fsubl
pop
jl
pop
aad
vpsubw
test
adc
lock
lcall
mov
imul
cmp
outsb
pop
mov
mov
inc
cli
sub
cmpb
enter
fstpl
hlt
mov
xchg
adc
popf
push
int3
js
jl
push
mov
cmc
clc
negl
int
mov
or
pop
outsl
pop
xlat
pop
repz
into
push
test
cmpsl
fnstsw
stc
pusha
and
xchg
mov
xor
mov
pushl
movsl
mov
push
push
das
pusha
repnz
sub
or
insb
movsl
pop
inc
in
repz
or
add
add
add
pop
test
aam
lahf
pop
dec
sar
adc
aad
popa
dec
test
add
cmp
inc
xor
pop
mov
pop
pop
ljmp
loope
movb
pop
or
into
inc
and
je
imul
or
xor
insb
int
into
mov
cmp
pop
adc
popl
xor
sbb
jmp
pop
ret
aas
out
stos
mov
sub
aas
push
xchg
test
jb
arpl
sub
dec
mull
fsubrs
dec
inc
fmuls
data16
xlat
mov
movsl
inc
sbb
icebp
sub
mov
dec
fldl
les
pop
cmp
aam
xchg
pop
mov
les
jp
daa
pop
mov
out
ja
lcall
jae
ud1
cmp
mov
loop
xchg
ret
push
cmp
push
js
mov
pop
sahf
mov
xor
xchg
mov
fistps
lods
in
test
sbb
bound
cmp
test
insb
sahf
leave
mov
mov
sar
mov
inc
cld
into
mov
sahf
in
cmp
jmp
pop
cmp
ffreep
in
insb
and
lock
cli
icebp
add
jne
pop
repz
fnstsw
and
push
push
dec
xchg
jl
mov
fnstcw
bound
sub
popa
fists
test
inc
outsb
sub
movsb
adc
dec
aad
out
pop
lret
jns
mov
sub
xor
jge
rcrb
add
pushl
pop
sbbb
adc
in
andb
in
fiadds
insl
out
out
roll
pop
test
cmp
push
jb
dec
test
mov
frstor
hlt
mov
into
stos
sbb
pop
dec
sar
cltd
aam
fs
repz
outsl
rcll
push
pop
adc
xchg
lcall
dec
shrb
out
in
jne
ljmp
push
dec
or
lahf
inc
push
jbe
mov
or
or
call
dec
inc
sbb
outsb
imul
out
sub
add
lret
out
jno
mov
lock
mov
lar
jecxz
mov
mov
inc
lahf
lock
push
rcll
jmp
mov
jecxz
mov
addr16
and
fldt
xor
push
cld
jbe
lea
data16
mov
dec
jo
xor
push
cmp
jne
imul
and
xchg
inc
sbb
pop
sbb
xchg
cmp
ljmp
test
dec
xchg
xchg
mov
pop
pop
inc
leave
inc
imulb
add
xchg
cmp
mov
lods
ror
push
stc
dec
shrb
in
dec
push
inc
xchg
repnz
jp
add
fsubrl
push
arpl
push
adc
stos
adc
daa
fsubrs
xchg
aas
dec
js
or
mov
add
scas
mov
or
cmpsl
or
testb
test
xor
or
mov
or
into
push
fisttpll
rol
mov
jnp
sub
lods
and
mov
xchg
mov
pop
popf
push
pop
pop
xchg
popa
cli
mov
pop
adc
mov
stos
fwait
mov
dec
ret
outsb
pusha
aad
mov
nop
jno
cmp
aaa
adc
in
inc
add
dec
mov
sub
mov
xor
lret
in
mov
arpl
push
das
decl
and
data16
idiv
cmp
adc
cs
push
cmp
leave
pop
fsubs
lret
sbb
call
sbb
xor
insl
mov
pop
jg
sti
jmp
inc
ja
fcmovnbe
sbb
aaa
adcl
cmp
cli
push
popa
mov
rcrl
pusha
xor
in
jno
lock
arpl
sarb
add
inc
lods
inc
popl
into
movsl
or
sbb
fistpll
mov
hlt
adcb
jo
out
in
cmpsb
push
mov
movsl
insb
or
test
dec
jle
add
and
in
pop
enter
sub
movsl
cmpsl
xor
adc
mov
aam
jo
mov
sbb
and
and
jo
jne
repnz
adc
int3
add
clc
out
cmp
mov
call
jns
cmp
in
mov
jge
and
aas
test
arpl
sub
dec
sbb
lds
sbb
fs
mov
ljmp
pop
xchg
movl
notl
add
dec
mov
lret
mov
ja
movb
scas
add
repz
add
dec
xchg
xchg
ret
outsb
jmp
mov
sbb
divb
mov
xchg
mov
xrelease
shll
adc
or
ficoml
not
and
sbb
data16
sub
call
int3
fstl
dec
aam
mull
bound
pop
sahf
dec
jo
daa
insl
out
mov
mov
cmp
push
xchg
pop
and
scas
pop
cli
cli
sbb
add
push
pop
cmp
adc
pop
xchg
dec
inc
imul
cmpsb
add
jne
and
inc
pusha
jmp
cltd
stos
dec
out
and
aas
pop
iret
ljmp
mov
cmpsl
pushf
mov
jmp
mov
jno
rol
test
cs
in
les
cmpsl
pop
scas
in
mov
int
leave
cmpsb
adc
inc
or
je
fidivrl
fisttps
xchg
repz
out
jbe
add
xchg
stos
mov
mov
not
or
push
sub
andl
mov
jne
les
xchg
popf
mov
sub
pop
dec
adc
subb
push
fcmove
rcrb
pop
cmp
mov
ljmp
push
shlb
mov
in
shll
cmc
xchg
pop
push
mov
popa
cmp
cmp
outsb
pop
stc
out
enter
imul
aad
mov
and
hlt
mov
pop
das
bound
inc
mov
mov
xchg
out
mov
cmc
cmc
sahf
enter
mov
bound
dec
bound
loope
or
pusha
aas
push
inc
cld
lock
scas
sbb
int3
mov
inc
mov
sbb
dec
mov
dec
sub
stos
mov
gs
fs
sbb
lods
sarb
cmpsb
push
inc
and
push
mov
jle
push
leave
cltd
in
mov
xor
ret
cs
sbb
xchg
lea
xchg
test
gs
dec
adc
mov
push
jg
mov
sub
pushf
test
xchg
scas
mov
mov
addr16
cmpsl
push
jae
push
popa
cmp
cmpsl
xorb
in
push
mov
enter
into
popf
push
sbb
push
iret
cmp
pop
ja
ffreep
mov
sarb
mov
adc
mov
or
and
inc
mov
scas
xchg
xor
sbb
test
inc
sbb
stos
mov
add
inc
jg
push
in
xchg
mov
in
movsl
mov
imul
aaa
pop
and
lahf
add
cwtl
imul
in
cli
imul
data16
xor
stos
and
iret
outsb
push
ja
or
jnp
mov
lret
or
out
mov
dec
pop
dec
leave
sub
jne
in
or
icebp
cltd
add
cmp
dec
inc
sbb
std
add
mov
fsub
aaa
jl
and
push
int
popa
ret
push
mov
aas
es
sub
out
sub
jmp
and
sub
call
cmpsb
movsb
cmp
fldl
pop
inc
sbb
pop
out
cmp
addr16
sbb
sti
sub
sbb
cmp
jo
mov
nop
imul
ja
loop
or
cli
insb
ljmp
sbbl
lds
dec
inc
es
cmp
fists
fcompl
mov
popa
adc
repz
inc
icebp
out
and
xor
inc
or
adc
jbe
nop
cs
xchg
outsb
ret
inc
jo
or
pop
out
rcl
lods
cli
lcall
divl
in
xchg
xchg
sbb
jae
hlt
out
mov
pushl
jno
push
outsl
xchg
push
xchg
add
divb
cmp
out
mov
push
sbb
cltd
push
cmp
push
sub
ja
sahf
pushf
push
dec
in
sub
repz
pop
xor
inc
mov
xchg
pusha
push
sbb
push
jmpw
cltd
xchg
rcl
scas
ds
ljmp
push
out
rolb
xchg
clc
and
mov
es
aas
add
inc
insb
sbb
mov
cmp
mov
pop
testb
xor
in
cmp
jecxz
dec
stos
ja
lea
jp
lds
pop
stos
enter
std
loop
pop
jg
mov
jmp
cmp
xchg
mov
add
add
inc
xchg
daa
cmp
mov
and
xor
add
into
ljmp
iret
sub
dec
mov
and
dec
jl
xchg
and
mov
std
add
in
push
mov
jmp
mov
push
pop
xchg
cs
inc
push
xchg
js
mov
dec
mov
pop
mov
stc
sarl
mov
xor
push
mov
sbb
fsubl
into
sub
test
arpl
inc
jp
cwtl
push
rcr
push
mov
sub
dec
in
aam
sub
mov
cmc
adc
fisubrs
insb
iret
rorl
daa
in
dec
adc
movsl
inc
negb
andl
push
hlt
xor
jbe
hlt
add
cld
cmpsb
push
pop
push
mov
xchg
les
pushf
push
jnp
ljmp
popa
add
filds
or
mov
adc
and
sub
loopne
inc
aad
push
and
cld
mov
sahf
cli
rolb
cmp
dec
push
idivb
sbb
pop
mov
sbb
imul
das
mov
sub
lahf
fbld
out
roll
fcomps
pop
adc
js
pop
lahf
out
push
pop
sahf
jmp
mov
push
mov
mov
mov
int3
mov
int3
outsl
mov
aam
mov
xor
popf
xchg
mov
xchg
adc
xchg
in
sub
mov
arpl
xchg
scas
xchg
add
add
out
movsb
xor
out
sub
pop
sbb
jo
std
lea
rorl
dec
fcmovnu
scas
mov
pop
cmp
cmp
lret
pop
shl
lods
aas
fdivl
pop
inc
pop
fs
jl
sahf
movsb
add
cmp
scas
neg
adc
jge
mov
xadd
pop
mov
pushf
sbb
and
push
cmp
and
repnz
cli
sub
push
mov
add
mov
add
or
in
sub
cs
repnz
repz
stos
andb
mov
cmp
icebp
dec
pop
sbb
pop
push
pop
mov
icebp
std
aam
jl
sbb
push
mov
scas
lret
push
xor
add
fldl
loopne
out
inc
xchg
aam
and
icebp
icebp
xchg
fistpl
popa
push
stos
pop
loopne
jp
lods
jbe
imulb
jne
jge
es
outsb
loopne
push
popa
xlat
pop
scas
xor
out
or
mov
push
call
inc
dec
outsb
pop
lods
mov
add
add
or
cmp
lods
pop
in
inc
loopne
mov
int3
js
push
repnz
mov
jns
movsl
insl
or
mov
push
adc
mov
in
scas
fistpl
fs
loopne
int
pusha
cmp
sahf
and
jo
aam
repnz
sahf
xchg
ja
jl
push
pop
out
mov
std
icebp
fcom
mov
filds
cmc
mov
or
inc
push
adc
xchg
call
xchg
cltd
add
sar
pushf
cmpl
inc
adc
mov
push
movsl
mov
sbb
lods
jnp
das
cld
push
cltd
fldl
mov
sbb
into
or
outsl
dec
cwtl
mov
icebp
sbb
leave
mov
test
or
mov
addr16
stos
xchg
fsubrs
leavew
xor
imul
lods
sub
dec
or
or
dec
shll
cld
testb
lret
dec
xor
push
push
fwait
jo
gs
ret
mov
loopne
hlt
mov
sub
adc
push
or
push
cltd
xor
mov
or
in
int
inc
mov
je
enter
mov
fmul
psadbw
inc
xlat
daa
das
out
clc
int
mov
rcrl
push
xchg
rcl
inc
add
jne
mov
xchg
jle
mov
ss
cmc
xchg
lds
cltd
inc
mov
dec
ljmp
loopne
dec
dec
pop
pop
add
push
cmpsb
inc
xor
or
lahf
aad
sbb
shr
js
popf
dec
sti
lret
jns
call
xchg
dec
ja
adc
jns
lcall
adc
fnstcw
cwtl
dec
incl
jne
or
leave
imul
ljmp
dec
pop
inc
pop
jno
aas
add
push
pop
movl
es
mov
outsb
test
iret
inc
add
push
imul
sar
data16
mov
out
fisubrl
cmc
lods
aas
and
add
nop
lea
mov
and
mov
mov
cwtl
pop
mov
mov
pusha
mov
adc
xor
pop
xor
dec
inc
or
lahf
sahf
pop
lods
js
pushf
cmp
xchg
sub
test
and
lea
shrl
inc
adc
shll
icebp
jmp
ret
fs
mov
lea
jne
andl
subl
fimull
jl
pmulhw
mov
stos
dec
out
inc
sub
push
shlb
xor
fldenv
add
pop
pop
pop
adc
fs
std
sub
jne
lock
push
imul
xchg
jl
in
fs
dec
sbb
aam
adc
mov
mov
mov
push
mov
dec
lods
jbe
ret
dec
cmp
jge
lds
in
cld
inc
xor
iret
out
adc
lahf
push
adc
push
lret
es
pop
mov
jecxz
jne
push
filds
sub
xor
mov
inc
adc
adc
xchg
stc
aas
pop
flds
daa
pop
sub
sahf
mov
mov
lret
jecxz
and
lock
push
inc
daa
or
leave
and
call
jnp
fildl
adc
fadds
cltd
enter
jecxz
lods
adc
ficoms
pop
xchg
cmc
jmp
cmp
add
int
pop
aam
xchg
filds
ret
jmp
xchg
or
mov
mov
jmp
int
int
int
sbb
outsb
fmull
push
mov
insb
pop
fnstcw
faddp
push
fidivrl
out
jmp
add
push
mov
bound
mov
call
jb
mov
sub
fsubrl
stc
xchg
movsb
aaa
xor
repz
les
arpl
icebp
cmp
imul
aam
jbe,pn
clc
lret
ds
je
int3
jo
cs
sbbb
int
mov
pushw
inc
pusha
test
xor
mov
mov
push
mov
cmp
in
mov
bswap
repz
dec
inc
je
jb
ja
fsubs
popa
jp
add
clc
adc
mov
mov
push
mov
outsb
xchg
imul
xchg
hlt
push
stos
sbb
mov
imul
or
cmp
pop
push
aaa
ret
inc
adc
addr16
or
push
cmpl
mov
aas
inc
push
mov
jno
mov
mov
push
add
data16
test
mov
shlb
sahf
jg
jp
mov
mov
mov
lods
dec
cmp
and
call
jo
xlat
pop
push
mov
inc
xchg
sbb
out
enter
adc
mov
pop
sahf
lret
into
leave
pop
mov
xor
jne
pop
int3
rolb
out
mov
jecxz
aaa
popf
cs
pop
push
xchg
and
inc
out
jp
mov
jae
xor
icebp
inc
fs
push
xor
jmp
cltd
or
mov
and
push
mulb
sbb
inc
xchg
das
cmp
add
sbb
and
push
ds
js
fidivl
iret
add
add
pop
xor
je
je
dec
movsl
pop
loop
mov
lea
mov
dec
inc
stos
gs
dec
mov
xor
rorb
sub
cmp
jae
pop
push
mov
dec
cwtl
sbb
fsubs
jge
in
mov
out
sbb
test
dec
js
enter
js
or
aaa
imul
pushf
fucomp
stos
xchg
push
addr16
sbb
dec
out
fsubs
rcrb
jns
shlb
testl
mov
sub
adc
insl
in
insb
imul
adc
icebp
xor
incb
pop
arpl
push
xchg
sbb
pop
iret
lds
insb
jecxz
into
aad
cmp
inc
and
int3
push
cld
jecxz
pop
pop
xor
jbe
push
pop
jb
lcallw
popf
loop
sbb
jle
bound
mov
dec
jae
scas
mov
movsb
dec
pop
cmpsl
adcl
add
sbb
lods
divl
cmp
sub
fwait
rcll
mov
enter
dec
pop
and
popa
inc
or
xchg
in
loope
add
lret
sub
add
cli
push
clc
mov
out
femms
cmpsl
add
add
add
iret
cmp
outsl
jecxz
push
insl
sar
push
add
mov
add
mov
test
push
addb
int
and
xor
xor
push
pop
dec
xor
pop
jmp
loope
xchg
sub
ljmp
pop
lea
mov
lahf
push
xor
and
vmovq
cwtl
in
aaa
push
popa
std
movsl
lahf
test
jge
add
push
cld
mov
popa
pusha
call
outsb
mov
cli
dec
mov
jmp
adc
push
add
cmp
add
hlt
and
push
sub
or
scas
sti
dec
mov
jp
test
jmp
add
lock
loope
test
inc
mov
pusha
lds
ficompl
pop
scas
pop
das
sbb
lea
xchg
push
gs
cwtl
outsl
lret
ret
jp
daa
pop
bound
fstps
les
divl
clc
add
fbld
push
xchg
imul
or
xchg
xchg
push
test
pop
int3
or
mov
jb
mov
cmpsl
sub
ljmp
cmpsb
outsl
or
cmpsb
ss
add
sub
loopne
jbe
pop
fcoms
jmp
dec
test
push
jl
cmp
jp
mov
fsts
aas
pop
pop
test
aaa
fistps
mov
sahf
iret
sbb
jecxz
cmp
jnp
inc
sub
pop
xor
cmpsl
insl
nop
fs
push
in
outsl
xor
aaa
xlat
out
ss
jne
outsb
sbb
pop
outsb
mov
pop
decl
orl
cld
or
movsl
shrl
test
dec
outsb
fmulp
inc
or
or
mov
lret
xor
stos
filds
fstps
dec
sbb
push
mov
cmpl
xor
sbb
pop
cmpl
movsl
or
pop
cmp
inc
int3
add
pop
mov
ljmp
adc
jns
cmc
jge
in
push
fcmovb
insb
femms
fcmovnb
out
add
xlat
outsb
inc
xlat
mov
call
pop
lahf
rclb
popa
add
int3
mov
push
jl
test
sbb
aas
enter
xchg
push
inc
xchg
lret
xchg
insb
sub
lods
sti
fiadds
stos
imul
inc
imul
test
in
cwtl
dec
push
ret
inc
js
rorb
clc
stos
cmp
sub
nop
jae
push
mov
dec
call
jl
dec
mov
mov
ret
mov
mov
mov
add
cmpsb
mov
adc
sti
mov
cmp
sub
lahf
add
ljmp
inc
outsl
and
sbb
inc
sub
mov
mov
mov
lods
popa
mov
in
lods
lea
jp
popa
lock
ret
xor
pop
hlt
rcrb
pop
fdivr
hlt
mov
cmp
sub
shll
addr16
lcall
sbb
ret
fldenv
cmp
leave
ds
sbb
in
mov
sbb
adc
jo,pt
pop
loop
shlb
imul
aad
push
cmp
int
xchg
and
insl
jg
and
das
lock
mov
push
out
xchg
jle
popf
je
and
insl
fisttpll
aad
sub
shll
xor
ret
orb
inc
in
and
dec
jge
std
mov
mov
leave
add
in
dec
inc
iret
mov
test
fs
add
dec
mov
sbb
in
fcomps
and
gs
int3
int3
popa
mov
and
mov
jne
and
sbb
jbe
or
cwtl
xchg
or
xchg
xchg
pop
lahf
das
insl
sahf
xchg
sbb
sbb
fmuls
lock
add
daa
js
adc
jg
das
mov
xor
movsl
pop
jno
incl
sub
pusha
push
stc
mov
leave
scas
mov
mov
mov
scas
int3
mov
popa
adc
pop
mov
jno
lock
jmp
mov
mov
fwait
scas
mov
or
cmp
push
test
and
push
lahf
cmpsb
loope
sti
dec
ss
ret
das
mov
loope
cmpsl
in
jmp
mov
loope
je
lea
inc
jge
lods
test
out
and
sub
movups
stos
sub
push
xor
rol
out
adc
hlt
aad
jns
fwait
xlat
dec
pushf
pop
dec
sbb
sbb
push
add
add
add
lea
imul
fcmovnb
imul
ret
repz
add
mov
mov
xorps
scas
idiv
rcrb
or
sbb
pop
nop
addl
les
or
lock
jbe
mov
fwait
inc
xchg
or
aaa
adc
test
imul
popa
and
fadds
call
jmp
cmp
repnz
xchg
inc
sbb
jb
fsubrl
mov
xor
and
lret
in
push
popa
mov
fs
add
add
sbb
ret
mov
xor
jecxz
daa
mov
scas
jg
imul
nop
push
push
into
movsl
flds
sub
push
fnstcw
mov
jecxz
les
mov
cs
sbb
sbb
jl
lret
jbe
cmp
repz
lcall
pop
test
fistl
ss
xchg
sarl
shll
cmp
loop
aas
repz
push
sbb
test
xchg
inc
iret
loopne
xor
xchg
test
xlat
lret
jp
es
sbb
outsl
jle
sub
jo
out
jno
fisttpl
gs
xchg
sahf
std
mov
in
shl
dec
dec
xchg
and
aad
jae
push
xor
jp
xchg
inc
mov
or
cmp
in
mov
or
jo
iret
pop
js
ret
int3
test
or
xor
and
test
mov
aad
push
dec
sti
loopne
dec
cltd
cmp
dec
xlat
scas
shrl
stc
inc
in
fisttpll
mov
popf
pop
addl
xor
int3
mov
je
scas
in
movb
pop
jnp
inc
lock
out
data16
lods
lock
lret
xor
push
sbb
shlb
data16
lcall
test
insb
inc
xlat
mov
fnstcw
aad
mov
mov
dec
es
out
orl
inc
out
ja
leave
inc
cmc
out
dec
loopne
clc
and
loope
arpl
adc
mov
lods
not
push
add
dec
jp
insl
adc
fnstcw
pusha
daa
arpl
lods
setne
jmp
push
ja
dec
push
fistl
sbb
lods
stc
loopne
adc
mov
cli
pop
lea
or
mov
loope
cmpsl
xor
js
cmp
push
rcll
jb
mov
prefetchw
adc
mov
mov
jae
popa
loope
jecxz
xor
jno
ljmp
mov
shl
lds
mov
dec
push
rorb
shrl
sbb
daa
push
sbb
es
cld
ja
sbb
adc
add
adcb
xor
bound
sarl
insb
and
cmp
mov
mov
push
mov
stos
stos
pop
mov
lods
pop
mov
mov
push
clc
lret
inc
shlb
cs
faddl
push
add
adc
and
in
cmp
mov
iret
mov
push
ficomps
bound
rorl
inc
pop
bound
xchg
mov
stc
sti
inc
xchg
lahf
loop
rolb
xor
icebp
and
insl
mov
lds
and
lahf
in
fildl
aaa
inc
andb
add
popa
pop
aad
adc
sahf
loop
repnz
dec
shrb
ja
lds
push
pop
pop
jg
sbb
imulb
mov
lods
in
pop
and
dec
mov
mov
jo
xor
icebp
add
sbb
cmp
push
int
dec
and
orb
adc
xor
insb
cmpsl
movsl
movsb
fsubl
xchg
pusha
lcall
and
jb
xchg
scas
mov
dec
insb
pop
mov
psadbw
or
pop
xchg
pop
test
lret
stos
cmp
xchg
das
sub
xor
cmc
xchg
adc
add
lods
in
pushf
mov
inc
aad
cmpsb
scas
xorb
ret
cmc
out
enter
lods
movsb
cmc
dec
sub
lock
int3
mov
lods
cwtl
dec
add
add
inc
sub
ret
arpl
sbb
out
push
pop
adc
jae
testb
fstps
insb
jg
xchg
rcr
mov
iret
js
inc
pop
cmp
jbe
in
adcl
addb
jmp
sub
in
cld
aad
flds
iret
testb
sti
mov
inc
test
jns
xchg
push
mov
leave
mov
jp
push
xor
sub
mov
add
add
addb
bswap
test
dec
or
cli
rolb
repz
add
xor
scas
enter
mov
xchg
lock
xchg
inc
add
jno
rcrb
scas
in
mov
push
das
push
es
and
out
ss
fisubrl
add
icebp
aad
sbb
jbe
arpl
push
cld
adc
js
lds
or
addb
rcrb
sbb
mov
and
push
mov
push
add
das
fldenv
ljmp
lret
maskmovq
testl
sti
repz
pop
aad
sub
std
mov
out
je
and
rcrl
add
xor
add
stc
aad
ss
es
jl
icebp
adc
or
pop
int
cmp
inc
dec
in
les
cmc
insl
sti
popf
ja
adc
inc
pop
mov
inc
add
dec
jl
dec
data16
inc
pop
pop
mov
outsb
or
and
dec
ss
out
faddl
das
jne
jne
scas
adc
jmp
sub
pop
jp
in
roll
jnp
cmp
fdiv
pop
and
in
in
movups
nop
aam
jnp
xchg
cmpsl
lahf
inc
in
add
loope
or
dec
icebp
addl
xor
pop
add
fbld
xchg
push
fildl
add
push
push
outsl
sub
cltd
cld
in
push
pop
and
lock
mov
dec
cmpb
pop
aaa
lea
or
mov
add
rcl
sub
rol
lahf
pop
lcall
movsb
jnp
add
or
fs
fcmove
sbb
sar
pop
jno
mov
xchg
arpl
in
and
mov
cmp
lods
add
outsl
sbb
sub
xor
ret
loopne
lods
sbb
mov
fildl
leave
mov
mov
fidivl
jne
push
in
enter
lods
das
or
cli
pop
inc
cltd
mov
jbe
out
insb
les
xchg
and
push
sbb
cmp
dec
ljmp
mov
cmp
adc
ja
sub
sub
int3
rorb
adc
mov
dec
cmp
or
and
inc
insl
push
push
popa
jbe
dec
jecxz
in
dec
mov
xchg
fistl
daa
pop
adc
insl
mov
in
add
xchg
cmp
in
fcomip
push
icebp
and
cltd
and
pop
sbb
inc
es
and
push
add
gs
sbb
adc
scas
orb
sahf
mov
ret
xor
dec
and
imul
outsl
ret
add
shll
sarb
lret
adc
push
cltd
fidivrl
mov
xchg
iret
xor
je
insb
cmp
fmull
bound
in
push
xchg
fdiv
popa
inc
and
insb
mov
or
push
pop
sti
mov
out
add
aam
into
lds
jns
sub
add
and
lret
dec
jl
in
xor
jl
adc
push
pop
jmp
xor
xchg
inc
pop
jnp
nop
sbb
xor
mov
fsubl
scas
mov
adc
inc
or
push
jae
jbe
inc
pop
rcrb
dec
add
ficompl
cmp
push
inc
shrl
in
loopne
push
bound
inc
push
sarb
inc
push
mov
ss
jl
dec
dec
sub
adc
mov
fbstp
mov
sbb
js
sbb
mul
subl
inc
fdiv
adc
fadds
mov
ja
inc
loop
outsb
bts
mov
fs
stos
adc
movsb
add
mov
jl
inc
pop
iret
leave
pop
mov
pop
xor
call
xchg
xchg
inc
cwtl
clc
pop
loopne
pop
orl
mov
cmovnp
hlt
jae
push
push
rclb
pop
cmp
stos
pushl
in
xor
popa
cmc
cmc
lea
add
je
jne
test
jns
movsl
xor
repz
add
out
cmp
scas
or
fs
insl
xchg
cmp
dec
pop
pop
int3
enter
mov
adc
lret
mov
sbb
imul
arpl
orl
rol
lahf
jbe
inc
cli
mov
cmp
add
gs
outsl
popa
repnz
gs
jno
jbe
lret
jecxz
and
pushf
and
mov
or
push
popf
xor
fwait
xchg
jae
js
rol
inc
jbe
dec
mov
lcall
xor
aaa
cld
mov
xor
roll
icebp
es
xchg
and
jg
fildl
add
add
fwait
push
pusha
outsl
out
jg
cmc
or
repnz
dec
out
lret
add
repz
add
bound
out
and
xchg
inc
mov
dec
js
xchg
ljmp
enter
sbb
insl
insl
jo
cwtl
imul
mov
dec
test
jl
fsts
mov
sub
std
xor
decl
xor
aas
scas
fistpl
int
repz
fldl
mov
mov
fistps
push
in
int3
push
imul
clc
test
dec
cmpb
adc
inc
rcrb
mov
mov
xor
sub
xchg
rolb
imul
lahf
cmp
loope
je
or
xlat
cmpsb
adc
sahf
dec
test
popf
inc
mov
mov
cmp
jl
mov
jb
enter
in
shll
outsb
inc
adc
pushf
dec
mov
pop
lock
cltd
sbb
cwtl
sub
mov
jb
into
mov
add
push
inc
jmp
and
jnp
jb
lret
lret
popf
mov
dec
xor
sbb
dec
mov
outsb
push
and
rorl
xor
xchg
cmp
push
add
fbstp
sti
jne
inc
sbb
xchg
bound
mov
jmp
popa
repz
imul
mov
mov
bound
mov
fstl
mov
or
mov
cmpsl
popf
sbb
push
mov
loopne
jg
add
inc
imul
cltd
xchg
xchg
jg
out
pop
iret
jo
mov
out
mov
fwait
mov
adc
or
inc
xor
insb
call
jp
adc
sbb
loope
jecxz
adc
into
aaa
adc
imul
inc
add
jg
jg
adc
das
ss
out
jmp
imul
loop
decb
cmc
sahf
pop
pop
adc
aaa
mov
dec
movsl
ds
js
dec
rcll
out
sub
cmp
push
or
and
js
into
leave
xor
adc
xor
dec
cli
xchg
fs
mov
je
adc
rorb
cwtl
jo
outsb
aad
lds
add
jbe
aaa
adc
jno
xlat
fcomip
mov
sub
fstl
dec
dec
inc
int3
dec
xor
cmp
gs
imul
ss
hlt
out
cs
clc
shll
addb
xchg
lret
inc
test
pop
sub
fwait
mov
inc
mov
jmp
mov
xchg
mov
les
sub
push
add
mov
fwait
inc
pop
loopne
pop
movsb
cmp
xchg
inc
push
dec
mov
je
sub
ds
fs
outsl
mov
sti
out
sbb
cmp
out
push
or
stc
cmc
xchg
cmp
imul
mov
pop
ljmp
outsl
insl
mov
xchg
mov
pop
lock
mov
out
mov
scas
sbb
xor
mov
jl
xchg
mov
pushf
mov
pop
addr16
jno
pop
sar
pop
adc
or
pushf
cltd
divb
aam
or
icebp
add
ja
dec
jecxz
jecxz
mov
or
and
xchg
js
std
add
xchg
mov
jp
or
sarb
frstor
out
lock
adc
dec
ja
shlb
aaa
scas
mov
setp
jae
mov
mov
lret
adc
cltd
cld
add
jnp
pop
outsl
popf
mov
xor
inc
idiv
popf
sub
jge
nop
cmp
add
pop
popa
nop
mov
push
cmp
es
loop
aas
sbb
cli
xor
mov
fnstsw
inc
xchg
pop
inc
fists
das
adc
movsl
jecxz
pop
pop
das
daa
xchg
ljmp
scas
pop
fistl
mov
lods
xor
mov
xlat
push
inc
mov
pop
sub
out
adc
inc
xor
int3
jns
in
insl
stc
testb
cmp
and
pop
mov
push
cs
movsl
xorl
and
inc
aaa
cmp
sti
jno
pop
outsb
pop
and
xorb
out
enter
faddl
shl
mov
push
out
adc
mov
inc
add
mov
and
data16
fs
lods
sbb
jbe
clc
out
xor
cmp
je
fidivrs
jle
push
mov
sub
sub
cmp
push
outsb
in
cs
incl
xor
fiaddl
mov
xchg
push
jnp,pt
pushf
lret
add
stos
add
add
add
outsb
out
lds
mov
and
rolb
add
add
add
cmpsb
mov
cwtl
push
insl
das
pushf
pushf
lods
pusha
dec
jg
fisubrl
xchg
sub
mov
xchg
daa
sti
lods
dec
mov
jb
test
push
sar
cmp
andb
cmpl
shrl
add
out
imul
out
mov
xchg
inc
divl
stos
mov
mov
xchg
pop
andl
cmpsl
add
lcall
std
sbb
out
inc
sbb
enter
enter
mov
fs
scas
cld
imul
scas
lret
and
mov
test
xchg
and
stos
sub
jg
push
mov
lcall
mov
jl
pushf
fists
inc
pop
cli
sbb
loope
xchg
test
inc
stos
movsb
faddp
cmpsb
xor
xor
xchg
into
ja
or
inc
mov
dec
fcmovu
test
lsl
clc
fs
mov
push
mov
and
xchg
ret
icebp
mov
push
in
xor
fimuls
and
cwtl
fnstenv
popf
mov
xchg
rcpps
add
je
mov
xor
lods
lcall
xchg
mov
jne
les
popa
outsl
push
push
xlat
mov
cs
subl
bound
shlb
sbb
or
leave
in
push
push
sbb
jns
test
jo
test
test
inc
lahf
mov
push
fadds
mov
aam
jns
shll
inc
in
fistps
jmp
sbbb
sbb
lods
ds
mov
arpl
sbb
fucomip
or
jl
filds
add
lods
test
stos
mov
test
inc
jbe
xchg
xchg
in
enter
jnp
and
rorl
xchg
ljmp
sbb
lcall
add
stc
nop
lcall
pop
shll
pop
adc
fsubrl
js
lret
dec
xchg
jmp
jp
mov
rclb
xor
gs
fmull
pop
xor
mov
or
lock
mov
and
stos
cs
cwtl
dec
decb
mov
scas
pop
mov
xlat
jns
mov
inc
out
leave
add
test
add
mov
sub
adc
idivb
mov
mov
out
push
add
aaa
jnp
out
cmpsl
dec
pop
mov
rcr
mov
loop
dec
adc
shlb
dec
cmpsl
lcall
mov
adc
out
scas
jbe
and
inc
or
mov
xor
je
adc
movsb
lods
mov
fsub
lea
xor
dec
push
mov
push
xlat
push
push
aam
shrb
imul
jno
xchg
and
cmp
dec
add
sahf
fistpll
and
fldenv
dec
cmp
out
cmp
popa
scas
arpl
xchg
cmp
fists
dec
push
mov
and
scas
mov
jecxz
inc
sub
lods
ret
iret
pop
ds
jbe
je
negb
or
mov
repnz
data16
xlat
xlat
xchg
pop
push
jp
outsb
shlb
out
sbb
cmpsb
push
mov
test
outsl
cmp
push
movsl
out
icebp
cmpsb
sbb
popa
iret
and
push
jno
ja
aas
data16
loopne
movsl
jecxz
mov
movsb
test
push
add
popa
jae
jne
into
mov
adc
out
notb
cmp
repz
int
push
sub
mov
insl
push
pop
xor
stos
nop
stos
pop
or
aaa
adc
mov
xor
fs
and
push
cmp
adc
and
out
push
fwait
mov
int3
lcall
pusha
push
dec
xchg
lret
sbb
mov
sar
push
push
lret
mov
jb
div
loopne
mov
aaa
xchg
xchg
and
outsb
xchg
jns
dec
xor
mov
jbe
xchg
lods
pop
xchg
fistpl
js
adc
leave
out
xlat
pop
hlt
ret
mov
lds
mov
push
orb
test
xchg
jo
aam
or
adc
mov
js
pop
inc
stos
rcl
fnstcw
aaa
pushl
cmp
stc
mov
mov
cmp
and
jno
insb
pushf
push
push
adc
nop
xchg
hlt
scas
push
xchg
jno
sbb
mov
mov
or
idiv
lret
jae
in
mov
loop
push
adc
inc
mov
add
lret
lods
xlat
sti
mov
add
add
add
add
imul
push
or
les
aas
mov
stos
mov
sbb
mov
dec
mov
aas
dec
xchg
nop
es
loop
xor
sti
jbe
pop
pop
push
push
bound
mov
ss
daa
adc
add
out
jo
stos
adc
mov
pop
sbb
jg
adc
jo
divb
adc
push
popf
xor
rcrb
mov
sub
movb
and
adc
mov
neg
and
repnz
imul
mov
sbb
push
xchg
fmul
cld
mov
sbb
fnstenv
push
pop
push
hlt
adc
cmp
mov
and
aas
sub
dec
push
dec
dec
mov
ja
xor
mov
pop
dec
pop
dec
cmc
outsl
mov
pop
out
mov
xchg
inc
paddw
add
inc
ljmp
popa
inc
es
and
test
stos
into
addb
adcl
pop
lods
in
mov
negb
loope
clc
sub
fs
insl
sub
lea
mov
jo
jns
insl
dec
xchg
push
push
mov
fistpll
inc
cmp
dec
adc
mov
pop
aad
or
lret
ja
adc
or
dec
xchg
mov
dec
jmp
test
mov
pop
aaa
mov
mov
in
lea
ja
les
add
outsb
stc
lahf
rclb
decl
insb
orb
daa
cmp
fwait
pop
jae
sbb
sahf
inc
and
pop
xor
je
inc
lea
jne
xor
adc
pushf
xchg
mov
fnstcw
mov
pop
add
dec
fimuls
push
jge
xchg
dec
xor
fisttps
cmp
lds
and
pop
hlt
andl
aas
je
add
addr16
xchg
dec
and
sbb
cli
and
sbb
jg
xlat
fwait
push
mov
cmc
xor
jge
sbb
fcoml
push
cmpsl
lret
sub
jp
pop
fisttps
mov
rcl
inc
sub
lahf
bound
cmp
sub
inc
push
stos
mov
fldcw
enter
arpl
into
imul
cmp
js
cmp
mov
fisubrs
inc
jbe
push
andl
je
push
aas
sahf
out
jecxz
sahf
push
stos
ss
fisttpl
test
movsl
xchg
and
lods
pop
cltd
push
and
inc
xchg
jnp
cmpsb
enter
adc
sbb
in
xchg
xor
sub
lret
cmp
test
mov
push
jmp
fisubs
and
sti
jmp
nop
aad
dec
ss
pop
lods
xor
jae
out
dec
in
andb
in
push
pushf
pop
sbb
imul
fistps
mov
xor
gs
ja
xchg
sti
mov
push
movq
out
inc
jl
cmp
xlat
imul
into
ret
loopne
sub
adc
add
divl
xchg
push
push
cli
fdivrl
xor
int
dec
push
mov
jle
and
icebp
insl
mov
jmp
mov
lahf
and
jp
xchg
push
cltd
and
mov
inc
movsb
cltd
xor
out
scas
jno
jp
das
shl
dec
jnp
fmuls
xor
jbe
out
pop
sti
mov
sbb
mov
xor
mov
push
add
sbb
cltd
xchg
addr16
fcoml
mov
and
mov
add
lahf
jno
mov
push
or
sti
js
mov
clc
addr16
cli
dec
enter
ret
xchg
sti
scas
push
adc
xchg
enter
fsin
mov
ss
adc
mov
mov
xchg
xchg
cmp
outsl
aaa
xor
jns
and
in
sbb
xchg
and
loop
adc
pop
imul
or
mov
add
xor
mov
push
mov
sub
xor
fisttps
sbb
cmp
inc
fsubrp
in
and
xchg
stc
vpunpckhwd
push
inc
test
cwtl
xor
push
aaa
ret
ret
add
loopne
popa
dec
loopne
push
mov
shll
dec
push
push
sbb
mov
pop
push
out
inc
movsl
xchg
sub
movsb
or
jbe
test
popf
out
pop
cwtl
sahf
sbb
lea
test
add
add
loop
bnd
fcomi
mov
add
fiaddl
add
add
add
imul
cmp
incl
aas
xchg
aad
imul
rcrl
mov
mov
ret
outsb
push
sbb
cmovl
adc
test
call
fistpll
dec
lods
sub
xor
mov
into
push
push
int
jo
mov
mov
dec
mov
jp
jge
cmpsb
stc
sti
jge
lods
int3
fs
jg
cmc
ja
movsb
scas
inc
roll
mov
jge
push
inc
cli
push
mov
pusha
xchg
fcoms
mov
xor
pop
mov
mov
mov
dec
imul
scas
pusha
ror
decl
dec
pushf
popf
jmp
xor
mov
cmp
cmpl
pop
inc
jno
jmp
icebp
pusha
rclb
and
mov
std
out
xor
dec
pop
mov
fidivrl
insl
mov
adc
int
or
adc
sub
rorb
xchg
shll
inc
not
pop
pop
iret
lcall
imul
add
in
jecxz
jo
xchg
cmpl
pop
cli
inc
dec
add
push
sub
out
iret
ss
push
fwait
out
xchg
xor
scas
sahf
cld
in
or
loope
or
pop
mov
xchg
imul
jge
adc
jge
or
pop
ror
shlb
stc
mov
push
cmp
xchg
mov
sub
cmp
xchg
repz
ss
jmp
jecxz
xor
inc
fstps
imull
sub
push
loope
inc
adc
mov
imul
scas
fldcw
sub
je
or
dec
fld
scas
push
push
stos
jo
cs
and
xor
push
push
stc
outsl
hlt
or
sub
ret
je
enter
scas
mov
shr
adc
sub
lahf
out
das
leave
sub
jmp
xor
push
or
jb
and
icebp
icebp
jmp
xchg
and
cwtl
pop
scas
in
aas
push
fwait
jns
push
outsl
shlb
sub
cmp
xor
movsb
pop
cmpb
lahf
xchg
jp
lahf
push
mov
test
jle
outsb
jno
insb
jns
insl
mov
scas
jo
xchg
cmp
push
xchg
in
push
sti
dec
push
cmp
mov
mov
out
sbbl
pop
js
outsl
add
outsl
push
mov
jb
mov
dec
fst
in
pop
shll
gs
int3
jecxz
jp
inc
in
lea
xlat
pop
popf
ret
pop
push
mov
ret
and
aaa
mov
shrb
loopne
add
out
aad
aad
cmp
lods
push
in
pushf
xchg
adcb
mov
jg
dec
mov
lret
xchg
pop
mov
addb
jmp
cmp
pop
or
shl
in
xor
mov
stos
pop
xor
and
shll
je
inc
pop
outsl
xorb
xor
mov
sbb
mov
adc
and
rorl
mov
mov
rcll
rorb
sbb
mov
icebp
pop
xchg
mov
push
dec
or
out
int
xchg
cs
xchg
and
dec
mov
jb
mov
imul
fs
mov
lods
mov
repz
sbb
clc
sbb
cmp
push
dec
or
daa
lock
movsl
mov
jb
add
jae
xchg
push
xor
sub
add
arpl
mov
mov
mov
iret
cs
fwait
addr16
push
in
lea
pop
jbe
sub
jl
outsl
mov
jecxz
movsb
das
inc
inc
cmp
dec
lock
mov
sbb
inc
or
dec
adc
bnd
pop
pop
lea
sbb
mov
jp
leave
dec
or
or
repnz
movsl
sbbl
and
lret
mov
imul
mov
popa
mov
push
pop
out
mov
cmpsl
test
inc
jo
repnz
mov
xchg
out
lods
xorb
mov
out
jmp
mov
lock
pop
xchg
imul
and
hlt
sub
mov
push
popf
push
adc
dec
inc
jg
xor
sarb
shll
jnp
mov
outsb
sub
mov
adc
stos
sbb
mov
clc
and
mov
add
jno
and
lcall
sub
add
sbbl
add
andl
ss
in
inc
stos
mov
add
repz
add
xchg
popa
lcall
xchg
pop
and
insl
je
dec
fcoml
lahf
pop
lret
ret
shl
pushf
lods
stc
push
pop
aad
std
rorl
daa
mov
stos
rol
pop
jne
call
xchg
lcall
xchg
inc
andb
stos
das
iret
cmp
in
push
scas
or
call
dec
mov
jge
es
pop
pop
xor
push
aas
out
lahf
jno
loopne
push
iret
das
mov
inc
orb
pop
cmpsl
mov
push
imul
or
dec
outsl
cmp
cmp
rcrb
sbb
pusha
shl
cltd
mov
add
movsl
or
jmp
jno
xchg
pop
lcall
imul
rcll
jbe
and
out
add
push
ja,pt
lods
fwait
dec
jno
or
mov
adc
mov
outsb
cmpsl
push
cmp
sbb
sbb
bound
xchg
fs
sbbb
shl
aam
add
mov
cwtl
add
out
mov
jmp
js
inc
inc
xchg
sahf
xor
push
je
sub
mov
inc
pop
jbe
imul
sbb
cmpsl
adc
jbe
faddl
inc
xchg
xor
aad
mov
push
push
popf
dec
lock
mov
mov
test
xchg
adc
sahf
mov
mov
mov
imul
mov
test
sar
dec
lret
inc
jbe
push
lret
mov
jns
cli
pop
lret
sub
in
sbb
dec
pusha
dec
or
test
push
inc
repnz
clc
cmpsl
orl
shlb
jmp
ljmp
mov
test
mov
bound
or
sub
cld
cmp
mov
cmp
cmpb
shll
sub
fistpl
xchg
sbb
xchg
cmp
insl
jmp
pop
imul
test
pop
out
cmp
mov
and
inc
mov
mov
jnp
icebp
add
imul
decb
add
shll
sub
add
and
fdivrl
ds
imul
mov
dec
inc
mov
sbb
and
cwtl
pop
mov
testb
dec
insl
xlat
movsl
repz
sahf
imul
enter
push
lahf
jg
fisubrs
dec
stc
decl
pushf
je
ror
addl
or
mov
xchg
lods
mov
sub
rcll
sub
xor
cld
xchg
lods
sahf
dec
and
es
leave
pop
ja
mov
mov
ja
sahf
popa
loop
cmpsl
mov
pushf
inc
push
pop
or
fstl
fwait
xchg
xorl
xor
testb
dec
cmp
inc
in
or
es
ja
les
in
jmp
mov
mov
and
fsubrl
sub
outsb
fildll
test
test
pop
push
subl
sub
xor
lcall
ret
ljmp
jp
mov
mov
inc
ret
ss
or
aaa
mulb
lret
mov
xor
hlt
popa
inc
pop
lock
cmpsl
cmp
jo
outsb
ljmp
in
dec
add
jo
jecxz
repz
in
mov
push
mov
mov
decl
push
lea
xchg
sahf
in
in
pushf
lea
mov
inc
or
xor
in
mov
xchg
les
inc
lea
arpl
test
test
es
loope
xchg
mov
frstor
xchg
sbb
mov
lds
outsl
mov
jno
xchg
xor
test
imul
sahf
add
fnstenv
push
xor
inc
mov
add
mov
std
push
add
enter
in
loop
lock
int
and
push
sbb
and
cmpsb
push
div
adc
pop
test
nop
mov
or
stos
fistps
mov
xchg
inc
aam
sub
mov
ss
xchg
or
push
dec
aam
out
mov
data16
testb
xchg
cltd
add
add
jns
loopne,pn
pusha
loopne
and
adc
sbb
movsb
dec
xor
xchg
mov
mov
push
xchg
mov
jle
add
add
add
roll
sub
fildll
add
add
cld
ds
mov
pushf
cmp
pslld
lock
test
dec
add
dec
jbe
aaa
leave
ret
pushf
ljmp
test
fldl
rcrb
cmp
mov
push
ret
fstpl
test
jle
cmc
adc
adc
add
scas
xchg
test
outsl
addr16
xchg
push
pop
mov
aad
and
mov
jle
cmp
add
push
rcrb
jecxz
mov
sbb
stos
loope
loop
sub
out
dec
xchg
mov
lret
into
ds
lds
sbbl
imul
mov
cltd
lock
mov
lds
mov
xor
push
fdivr
pushf
pop
mov
sub
aaa
mov
filds
mov
lea
test
jns
mov
loop
ja
fstpl
scas
jmp
out
ror
lret
arpl
pop
jae
jne
dec
push
and
xor
pop
jnp
mov
push
popf
add
push
add
out
push
icebp
inc
mov
sub
iret
nop
pop
daa
popa
loop
bound
push
mov
mov
icebp
cmc
jl
xchg
out
pop
mov
or
popf
sub
jno
mov
or
das
adcb
enter
or
jbe
addb
into
jne
cwtl
and
and
push
or
cmpl
pop
fwait
and
lahf
sub
sub
imul
jmp
sbb
mov
testb
sub
cld
leave
mov
and
xor
xchg
add
mov
inc
lret
fcmovnb
ret
xor
jmp
ret
mov
out
add
int
push
jnp
sti
pushf
roll
push
xor
bound
xchg
fs
jmp
fadd
jg
cltd
sbb
jo
insl
mov
jl
push
fwait
jb
dec
or
inc
fdiv
icebp
xor
jae
xchg
pop
mov
andb
fcmovnb
fs
and
pop
sbbl
mov
inc
mov
imul
cmc
xlat
nop
push
lods
cli
into
mov
mov
or
jge
dec
mov
outsb
in
in
sub
xorb
iret
push
clc
out
push
or
mov
push
jl
jbe
or
push
popf
aad
xlat
add
inc
sub
ss
inc
movsl
ror
aas
jecxz
dec
sbb
jle
dec
enter
bound
ss
rcpps
mov
or
mov
and
pop
jns
pop
and
xchg
xchg
cmp
insb
pop
pop
mov
inc
sbb
ja
popl
jb
adc
push
dec
data16
mov
lods
sub
call
push
ret
cmp
dec
sbb
jne
adc
and
ss
lock
pop
cld
aas
gs
mov
fists
shr
lahf
loop
aaa
add
andl
cmp
fwait
andb
push
test
fwait
mov
lret
hlt
and
add
push
rcll
add
adcl
rcrb
adc
push
aam
insl
pop
sub
jg
adc
dec
push
popf
sub
sbb
addb
cmp
adc
or
mov
jno
pop
out
mov
mov
pusha
pushf
ja
call
popa
jne
icebp
fildl
mov
adc
pop
sbb
pop
mov
push
mov
xchg
ljmp
mov
into
and
sub
shl
mov
adc
inc
fcoms
xchg
push
or
jae
xlat
cs
stos
xchg
in
inc
cmp
fdivp
addr16
aad
lsl
gs
jg
jno
or
mov
mov
stos
xchg
push
daa
jmp
push
imul
or
pop
mov
jge
jo
ds
push
inc
jb
fsub
outsb
mov
test
aam
pop
movsb
pop
mov
stc
mov
push
lods
mov
aas
mov
ficoms
pop
nop
or
fucomi
fstpt
inc
out
pop
mov
xor
std
cltd
jmp
out
mov
call
dec
cmp
gs
std
dec
rep
xor
das
sbb
out
divl
adc
jmp
mov
shlb
jno
add
sub
dec
mov
inc
out
arpl
dec
test
js
add
add
add
xchg
std
repz
inc
xchg
jmp
add
add
add
jnp
xchg
mulb
push
mov
sbb
push
jecxz
push
pop
jg
mov
hlt
mov
in
or
sbb
and
ss
push
jmp
repz
test
xor
jbe
pop
sbb
add
jnp
in
or
dec
and
add
add
outsl
addr16
rcrb
sahf
xor
leave
or
xchg
push
ret
mov
jne
imul
in
ljmp
inc
mov
ret
and
cmpsb
or
lock
ljmp
movsl
xchg
insb
fcomps
or
mov
inc
int
arpl
pop
dec
and
jmp
sub
adcb
aam
mov
ljmp
scas
adc
bnd
cs
insl
nop
pusha
mov
movsb
out
fdivs
lods
xor
lea
pop
enter
mov
sbb
loopne
je
daa
xor
fchs
cmc
xor
adcl
jl
mov
xor
mov
fsubl
xor
mov
lock
stos
xor
mov
adc
pop
adcb
lea
jle
or
ret
sti
or
ret
pop
fcom
mov
in
and
mov
pop
mov
daa
rcrb
push
mov
cs
cmp
xchg
jp
outsb
cmp
jae
push
pop
lret
repnz
cmc
fiadds
pop
sarb
mov
in
test
or
dec
lahf
cmp
pop
scas
div
in
or
xchg
xor
bnd
pop
lds
dec
outsl
scas
xor
jp
or
and
add
jp
push
and
adc
clc
xor
jg
sbb
jno
mov
or
sub
movb
lds
cli
mov
mov
and
addr16
sub
popa
popf
test
xchg
sub
pop
out
lods
mov
sub
sbb
mov
add
mov
inc
mov
sbb
mov
popf
mov
or
pop
scas
xlat
ljmp
pushf
jae
sbb
das
out
and
inc
cmp
out
cmp
imul
pop
ret
or
xchg
xchg
sub
ret
sub
cmp
ficoms
les
nop
xchg
stos
adc
add
call
in
gs
fnsave
test
and
sti
sti
movsb
fdivl
movsl
sbb
lcall
test
mov
arpl
dec
movb
xchg
icebp
call
pop
mov
sbb
lret
inc
mov
pop
loopne
mov
push
std
fs
movsl
bound
cmp
in
jle
sub
add
dec
mov
je
fsubl
and
stc
push
rol
mov
cmp
fwait
and
clc
mov
sub
es
negb
xlat
mov
xchg
sbb
sbb
fnstenv
and
iret
stos
and
sub
shrb
jg
adc
cmpl
jmp
js
cld
fdivl
and
add
cwtl
fbstp
imulb
cmpsb
test
enterw
int
mov
push
cmp
jp
roll
mov
loope
out
push
dec
xchg
call
mov
xchg
rclb
add
mov
jno
inc
jmp
or
stos
push
mov
add
cwtl
mov
jne
xor
stos
or
test
pop
jle
lret
clc
dec
insl
int3
cld
xchg
out
inc
fdivrl
mov
pop
dec
mov
xlat
lds
lods
mov
lahf
fdivr
xchg
dec
xchg
daa
cs
sbb
dec
daa
mov
add
clc
lods
push
mov
ss
dec
leave
js
shrb
cwtl
or
imul
sarl
adc
adc
mov
xchg
xchg
adc
xchg
ror
int
pop
xchg
icebp
push
jle
bound
fdivl
xor
or
add
mov
mov
xchg
mov
scas
in
jbe
jle
lahf
push
xor
aad
lret
mov
js
cmp
mov
pop
lods
or
push
fcoml
fmulp
cmpl
fcos
test
inc
sbb
in
pusha
and
outsb
fldl
xchg
and
jno
cli
dec
add
xor
push
iret
pop
int3
jmp
movsb
ret
call
incl
add
add
or
mov
std
mov
sbb
add
repz
add
dec
xor
mov
movsl
jg
inc
cltd
out
xchg
sbb
insl
jg
jp
int3
in
mov
and
imul
push
mov
movsb
mov
stos
sbb
fldl
inc
js
push
push
and
scas
cmp
fmull
in
cmp
fwait
or
dec
xchg
pusha
inc
call
sbb
push
or
xchg
push
je
sbb
sets
sbb
mov
push
mov
out
sarb
xchg
mov
rolb
and
frstor
icebp
mov
pop
pop
outsb
mov
iret
and
inc
dec
cmp
iret
test
mov
inc
jp
daa
adc
movsb
mull
fistpll
mov
xlat
inc
xchg
xchg
popf
gs
fwait
das
stos
xor
rcr
popa
outsl
mov
adcl
imul
shll
xchg
dec
and
loop
xchg
shlb
mov
shl
mov
pop
adc
cs
lret
mov
outsb
mov
cmpb
rclb
movsl
xor
add
jecxz
orb
sbb
xlat
inc
jo
push
lods
jno
cmp
cld
inc
loop
jge
fsubrl
push
mov
jnp
mov
jl
loope
jae
shlb
and
or
jmp
dec
pusha
push
icebp
lea
xor
mov
lret
lock
stc
ss
cmp
fs
jo
daa
adc
mov
jle
xchg
mov
leave
add
scas
fs
rol
lds
pop
je
shl
hlt
jecxz
mov
pop
lods
adc
mov
dec
lahf
movsb
or
push
inc
pop
xchg
ret
pop
aaa
in
add
cmp
mov
idivb
int3
cmpsl
jbe
arpl
dec
lret
xchg
push
or
in
fs
inc
xor
mov
movsl
stos
nop
popa
cmp
add
aad
xchg
cmpsl
cmp
lds
push
adc
int
ljmp
xchg
addl
addb
push
rcll
cwtl
rolb
mov
jae
stos
loopne
das
outsb
cmc
stos
pusha
adc
mov
aas
xchg
adcl
jmp
fwait
mov
dec
push
sub
or
cmpsb
fcoml
arpl
std
in
mov
cltd
mov
mov
add
pop
decb
jg
fdivs
fwait
dec
push
les
scas
jb
aad
sbb
pop
adc
jb
stc
idivb
lahf
jbe
or
insb
sbb
cmc
pop
push
or
jnp
and
aam
push
cld
push
insl
ret
jae
hlt
xchg
add
inc
sbbl
fcmovnb
mov
icebp
les
pop
sub
add
cmpsl
hlt
push
sub
popa
repnz
push
sub
push
ds
or
in
test
dec
clc
pop
push
adc
test
xor
pop
inc
addl
hlt
add
aaa
xchg
mov
ficompl
sub
test
cwtl
xor
inc
stc
jae
add
dec
push
rorl
jb
ret
in
outsb
inc
inc
fadds
popf
fmuls
nop
repz
cmpsl
adc
sbbb
out
pop
sub
pop
push
out
adc
addr16
pushf
test
bnd
out
push
sbb
xchg
mov
ret
es
dec
xchg
mov
stc
addb
add
rorl
push
ljmp
ja
js
cmp
cmpsb
hlt
jb
jl
push
stc
cld
sbb
pop
xchg
call
les
subl
rcrb
nopl
stc
mov
xor
lock
in
ret
frstor
iret
or
loope
xor
xchg
rclb
push
gs
pop
rcr
push
incb
mov
std
jmp
push
or
push
inc
scas
mov
fnstcw
imul
sbb
movsl
int
imul
lock
push
add
arpl
lret
repnz
pop
addr16
dec
rolb
lret
jo
cmp
das
xorb
aad
and
jl
add
out
je
cld
jne
add
btc
sub
repnz
inc
mov
nop
cmp
adc
sub
xor
call
inc
sub
sub
xor
or
pop
int
mov
fwait
sarb
fidivs
mov
outsl
lcall
out
sbb
es
mov
add
add
push
dec
shr
jg
push
mov
xor
repz
add
jb
xor
arpl
pop
xchg
pop
or
outsb
push
daa
sbb
xchg
cmp
aam
xor
aas
std
popa
xor
inc
scas
jmp
cs
cmpsl
mov
aaa
in
xchg
fwait
outsl
out
cltd
jo
testl
jbe
mov
pop
sub
and
int3
fwait
push
cmp
add
les
adc
jo
lcall
adc
lahf
xor
xchg
xchg
mov
push
fmuls
push
xor
mov
mov
adc
fimull
sbb
pop
mov
fs
out
pop
inc
in
addl
aaa
daa
mov
testl
insl
mov
in
pop
jp
test
and
adc
dec
bound
aam
daa
shl
sub
xchg
lahf
or
jle
nop
inc
xchg
adc
loop
mov
jns
bound
dec
pop
daa
movsb
and
dec
push
ljmp
dec
mov
or
stos
mov
les
and
push
iret
movsb
leave
cs
clc
gs
cli
fsts
out
inc
and
pop
jno
cmpsb
movsb
outsl
push
movsb
jp
xlat
data16
xchg
not
nop
jno
inc
int3
inc
fimull
pop
dec
mov
in
mov
inc
je
cmpsl
dec
pop
test
mov
push
clc
stos
es
xlat
in
sbb
int
call
jno
cwtl
cmc
fwait
mov
jnp
testl
js
ss
fstpl
mov
sti
adc
cmpsb
and
lret
cmp
mov
out
sbb
ret
aas
into
es
fisubl
loope
xor
loope
cmpsb
xor
outsb
fstps
mov
push
xorb
rcl
mov
pop
pop
test
pop
jmp
xor
sub
icebp
dec
cltd
test
das
dec
push
fstp
lds
ljmp
outsb
jne
sub
pop
dec
push
out
in
pusha
adc
test
mov
pop
insl
dec
adc
sbb
xor
fs
push
lret
or
push
jmp
sbb
cmp
je
jmp
in
jmp
jge
lret
js
adc
mov
xor
ja
test
daa
scas
sub
cli
mov
xlat
pop
mov
pop
mov
sbb
lock
sub
and
cmp
add
inc
or
mov
cwtl
cld
loope
fs
mov
ret
test
push
js
sub
sub
lcall
sub
loopne
lahf
or
push
jg
xor
xchg
fcoml
decl
xor
stos
movsb
flds
or
aad
dec
lods
pop
fistpll
jb
jnp
out
mov
popa
lds
xchg
inc
jns
cmc
xchg
lahf
bound
popf
push
lahf
idiv
cs
push
cmp
pop
ffreep
fistps
gs
inc
or
mov
xchg
pop
add
xchg
test
sbb
sbb
jne
jecxz
inc
jle
sbb
std
fstpt
inc
cmpsb
sti
lret
ss
insl
jge
mov
out
rorb
lods
and
xchg
add
dec
and
pop
mov
ror
sub
and
pop
mov
adc
xor
lret
testb
or
test
jp
jle
mov
pop
test
stos
bound
dec
mulb
or
aas
popl
and
clc
or
lods
sub
stos
mov
rorl
mov
inc
mov
adc
cmpsl
std
dec
icebp
sti
push
aad
xor
jno
into
pop
mov
arpl
pusha
imul
jl
cld
loope
cmpsb
shl
or
xchg
mov
or
or
sbb
loope
cmp
nop
call
xor
sbb
dec
scas
sbb
pop
cwtl
jo
insl
stc
cmp
mov
cmc
xor
mov
imul
sub
xlat
clc
shrb
mov
fildll
mov
add
aas
mov
cmpsl
xor
jae
jno
cmp
xchg
in
fxch
push
cmpsl
inc
mov
xlat
negl
loope
adc
fidivrl
xchg
fnstcw
xor
test
js
cmp
sarl
popa
ss
aad
movsl
jle
scas
push
aad
lea
sar
and
inc
fmulp
add
add
mov
add
xchg
dec
push
jae
sbb
stos
xlat
out
dec
cmp
xchg
das
jge
dec
inc
decl
insl
fst
adc
outsl
aaa
adc
pop
add
adc
add
movsl
push
movsl
shl
divl
test
sbb
repz
add
adc
sbb
cmp
in
inc
stos
xchg
add
push
hlt
sbb
mov
sbb
inc
push
ds
ljmp
fs
mov
adc
mov
test
sbbb
adc
setg
aas
pop
lahf
add
ret
mov
jae
add
mov
cmp
fdivrs
mov
mov
adc
inc
adc
pop
xchg
add
pop
push
cmp
pushf
dec
cmpsl
mov
stos
movsl
sub
popf
push
sub
cmp
xlat
pop
xchg
insb
loop
cld
lret
cmpsl
out
xchg
cmp
jb
mov
jl
ficompl
cmpsb
inc
sahf
test
lea
jmp
pusha
mov
mov
sub
out
add
lods
adc
push
mov
les
dec
inc
push
pop
int
mov
mov
adc
pop
loop
cmp
das
push
jb
mov
push
enter
jbe
cmpsb
inc
mov
aaa
enter
data16
pop
ret
lret
iret
mov
scas
push
mov
repz
out
lahf
jge
adc
out
popa
and
lret
add
popf
lds
leave
sub
add
xor
lods
pop
add
xchg
stc
out
int3
aaa
icebp
movsl
sub
xor
xor
jge
stc
sub
add
mov
cwtl
xchg
push
aaa
pop
popl
jb
dec
movsb
mov
pop
es
mov
sub
jg
in
inc
hlt
jb
push
lds
addr16
popf
das
cli
lods
int
jmp
inc
inc
inc
popa
sar
stc
dec
stos
push
and
sbb
mov
push
je
insl
outsl
xor
aas
mov
push
das
scas
mov
es
pop
inc
mull
shll
out
dec
dec
sub
push
or
mov
inc
cmpsl
ret
jb
cmp
stos
dec
adc
adc
inc
pop
mov
cmp
xor
ss
and
mov
jne
and
test
and
repnz
loope
in
or
push
jnp
mov
das
and
push
cmp
loope
add
iret
in
mov
in
arpl
xchg
jge
insb
sbb
das
fwait
mov
stc
jg
nop
xor
add
mov
mov
sti
pop
pop
inc
adc
sarb
stos
jl
movsl
mov
sub
xor
inc
out
dec
dec
and
add
into
ret
jg
test
aad
fstpl
and
jns
mov
in
push
in
in
pop
call
inc
push
cmp
inc
ss
je
jae
ret
cmpsl
mov
dec
dec
fucomi
lcall
outsl
fisttps
rorl
adc
cmpsb
mov
stc
add
leave
mov
pop
js
mov
es
out
ja
add
testb
xchg
pop
inc
pop
pop
jo
popa
cmpsl
fmull
mov
add
aad
adc
sub
mov
and
lcall
addr16
push
jnp
xor
add
mov
pop
pop
fwait
in
mov
test
push
movsb
stos
insb
mov
inc
pushf
call
popl
sub
xor
test
dec
iret
gs
cmc
add
mov
mov
scas
inc
xchg
push
add
xchg
pop
cmp
xor
add
sbb
nop
push
xor
xor
sbb
pop
arpl
mov
rorl
mov
or
push
adc
mov
adc
leave
cmp
std
jno
sbb
fstl
addl
loope
scas
in
dec
ja
shlb
dec
pop
fstpl
and
sub
or
in
xchg
dec
push
dec
stc
push
push
dec
loope
out
ffreep
mov
cld
and
sbbb
push
ret
popa
lock
mov
mov
fidivs
out
ds
pop
loopne
int
sbb
adc
pop
jmp
aaa
out
pushf
push
mov
add
pop
out
fwait
out
cmpsb
xchg
xchg
push
mov
jg
jmp
sbbb
fisubrl
test
push
movsl
or
pushf
mov
daa
fcmovne
jb
sub
nop
xchg
fisttpl
imul
aad
mov
mov
fst
arpl
xor
loop,pt
push
insb
sub
xchg
jp
jle
pop
insl
sub
shrb
or
push
cmpsb
call
repnz
int
sbb
add
add
adcb
lret
insb
stos
fstps
insl
std
add
sbb
add
repnz
jne
lahf
mov
mov
rcrb
.byte
