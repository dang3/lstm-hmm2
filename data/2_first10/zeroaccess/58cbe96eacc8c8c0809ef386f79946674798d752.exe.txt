push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
ja
jle
jle
mov
jle
into
xlat
cmp
pop
add
punpckhdq
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
sbb
idivl
in
out
mov
pop
fistl
inc
gs
and
movsl
fnstsw
test
jecxz
dec
dec
inc
mov
fwait
cld
pop
test
jl
or
or
jns
xor
xchg
fldcw
mov
in
jp
adc
insl
data16
sbb
cmp
or
inc
arpl
and
or
sub
xchg
cmp
fdivrp
push
mov
insb
das
repnz
loop
test
or
pusha
into
adc
enter
movsb
jno
mov
xor
rcrl
cmp
push
jl
mov
pop
jge
add
and
lahf
idivb
lret
js
lods
fists
jle
mov
xchg
pop
cmc
pop
sbb
movsb
fistl
jb
pop
pop
xchg
push
lret
or
stos
rcr
outsl
lods
dec
sub
rorb
mov
fdivrs
scas
pushf
push
push
icebp
push
mov
inc
cwtl
pop
jbe
out
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
pop
andl
sub
jo
xor
fnstenv
rcrl
lods
inc
daa
push
sub
mov
scas
lret
outsb
xchg
outsl
xchg
inc
adc
wrmsr
push
jmp
bound
arpl
jb
negl
cmp
cmpsb
push
test
xchg
inc
jnp
movsl
mov
popa
pop
push
adc
xchg
nop
popa
aaa
mov
lret
in
xor
cmp
jp
or
push
add
je
inc
push
fsubp
push
mov
fisubl
inc
dec
lods
push
ja
sbb
insl
and
inc
cmpsb
lea
or
lret
je
std
pop
adc
push
mov
sub
pop
shll
ret
or
xor
in
test
dec
loopne
pop
and
cmc
mov
cli
or
dec
dec
xor
sub
repnz
test
add
stc
adc
clc
xchg
mov
cmpsl
bound
and
jno
fistpll
sbb
and
sbb
push
push
push
push
xchg
xchg
pushf
xchg
loope
ja
pop
xlat
orb
ficompl
jl
sub
mov
psubd
push
pop
mov
dec
inc
dec
dec
push
cs
adc
repz
pop
mov
jns
mov
fsubrl
and
popf
aad
push
test
adc
pop
popw
xor
mov
and
cmp
rcrb
lds
sbb
enter
cmp
in
divl
dec
jne
and
xchg
xor
mov
fisttpll
push
and
ret
push
out
jnp
int
mov
les
cmova
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
add
jle
mov
jle
inc
sub
ss
arpl
in
out
dec
mov
cmp
or
push
push
cli
xchg
adc
mov
and
lret
std
jbe
shll
inc
push
call
mov
adc
imul
cwtl
lret
sahf
rol
test
adc
jne
xor
add
insb
add
mov
pop
pslld
out
add
mov
or
cmpsb
jge
push
pop
fnsave
rorl
xchg
add
std
int3
in
out
xchg
or
add
fidivrl
inc
dec
or
and
and
xor
out
fimull
pushf
mov
dec
imul
adc
das
add
mov
push
imul
pop
sbb
inc
jb
mov
ret
cmp
mov
daa
sub
imul
bound
loope
push
mov
int3
rorb
fcmovnbe
pusha
mov
pop
xor
mov
push
mov
aad
push
scas
xor
mov
mov
pop
popf
push
test
int
xchg
sub
and
jo
movsb
mov
lret
xor
pop
ds
xchg
dec
push
and
leave
std
sbb
pop
or
popf
xchg
enter
xor
xchg
scas
mov
outsl
add
lret
pop
lea
mov
pop
pop
pop
jecxz
std
rolb
dec
mov
pusha
xlat
sbb
fdivs
mov
mov
sub
push
xor
mov
das
mov
lds
fbstp
mov
mov
and
jle
in
jne
mov
or
jmp
or
popa
sbb
sti
sbb
jle
jg
jle
daa
pop
xlat
adc
push
push
fwait
mov
cmp
and
rcrl
jno
jmp
andb
mov
jb
sti
dec
push
cmpsl
adc
sbb
xchg
rcll
adcl
das
cld
mov
or
xchg
lods
into
mov
xchg
js
mov
pop
mov
loop
xchg
sbb
mov
sbb
add
ds
lods
lret
sahf
lds
gs
mov
push
mov
in
adc
mov
mov
pop
aam
cmpsl
mov
jecxz
data16
adc
popf
inc
push
sbb
xorl
or
cmp
in
mov
js
mov
cwtl
ret
test
mov
adc
ret
pop
mov
mov
loopne
push
cwtl
aam
cmp
sbb
pop
hlt
xchg
xor
pusha
sub
sub
addr16
dec
inc
jge
lcall
andl
add
aas
mov
mov
mov
adc
out
sbb
je
mov
ss
shrl
inc
lods
sub
jge
data16
push
sbb
mov
imul
jl
cmp
mov
pusha
or
rcrl
cmp
cmp
test
cmpsl
nop
inc
mov
lds
dec
clc
mov
jge
lret
data16
stos
mov
arpl
or
ss
jne
xor
mov
loope
mov
pusha
loopne
mov
adc
test
js
jle
int
mov
pop
and
rorl
inc
or
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
inc
and
jle
mov
jle
aas
fnstsw
movl
mov
pop
cmp
clc
pop
xchg
mulb
adc
leave
icebp
pop
push
ss
mov
mov
rcr
out
rclb
jge
and
stos
jo
loope
xchg
je
add
xor
pop
jns
mov
inc
enter
fidivs
push
or
and
add
jbe
jns
jecxz
jno
inc
stos
xchg
mov
pushf
out
pusha
aas
or
cmp
xor
mov
rorb
in
es
dec
xchg
mov
pushf
push
mov
jnp
mov
push
stos
push
jno
fisubl
xchg
loope
mov
stos
sub
jg
pop
add
mov
scas
lahf
incb
aam
xchg
call
arpl
push
mov
lds
mov
lcall
js
cmp
jo
xchg
das
adc
pop
iret
dec
pushf
fisubl
sub
mov
popl
in
sbb
lds
mov
sahf
fs
or
mov
pop
bnd
lret
shr
das
test
js
mov
xlat
inc
inc
adc
mov
xchg
mov
hlt
out
adc
push
leave
fstpl
test
loop
or
and
cmp
dec
das
pop
pop
movsb
dec
or
mov
popf
sti
aas
lcall
mov
stos
inc
mov
loopne
insl
sub
and
bound
adc
cmp
push
add
enter
lock
call
inc
insb
pop
push
dec
stos
inc
je
jp
notb
mov
mov
mov
movzwl
add
jmp
push
mov
test
pop
sbbl
mov
jle
lods
in
pop
adc
mov
int3
je
lret
cmc
mov
mov
fmul
rorb
das
pop
and
lds
out
scas
imul
movsl
stos
add
enter
push
or
sbb
icebp
push
aas
sbb
jbe
xchg
testb
dec
jnp
mov
xor
push
inc
mov
lods
lret
fidivs
je
lods
test
loopne
dec
bound
stos
add
xchg
imul
push
repnz
lahf
push
or
mov
lods
and
outsb
ds
mov
dec
adc
sarb
add
xor
outsl
inc
shlb
into
dec
mov
or
ds
in
push
cmp
je
popf
pop
aaa
cltd
stos
pop
repnz
shr
cmpsb
xchg
push
adc
dec
es
mov
mov
add
and
movsl
movsl
inc
cwtl
pop
jl
push
lock
mov
repz
movsl
sete
cmp
cmp
movsb
ss
pop
push
xchg
jae
int
jg
and
mov
or
jb
dec
cltd
rcll
cld
adc
xor
jge
cmp
enter
fsubrs
call
mov
popa
sahf
repnz
push
xchg
sahf
lds
loopne
jae
outsl
push
repz
push
hlt
push
xor
lods
fisubrs
es
inc
iret
repz
push
xor
pop
cmp
push
jns
add
sub
cld
push
ljmp
jmp
les
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
jo
xor
mov
jle
movsl
std
lea
sub
popa
and
adc
push
sarb
ljmp
je
std
nop
jnp
lock
cmp
pop
xor
enter
cmp
adc
xor
push
hlt
mov
in
clc
addr16
cmpsb
ret
mov
lcall
mov
pop
lahf
ret
pop
cli
aam
sahf
pop
lret
push
or
sub
jo
fisubs
jg
in
push
and
cli
aam
lds
call
inc
je
xchg
pushf
stos
sbb
popf
jne
inc
push
fndisi(8087
mov
aam
cmp
or
arpl
xchg
fistps
jae
add
pop
pushf
imul
xchg
hlt
push
ficoms
add
pop
mov
repz
sub
push
mov
xchg
ret
je
fildl
dec
stc
pusha
pushf
adc
mov
cwtl
mov
xor
popf
fsubrs
outsb
pop
jns
std
movsl
mov
push
movsl
push
and
pop
and
mov
push
jecxz
mov
fdivp
mov
and
or
aam
das
sti
cmp
push
xchg
daa
into
scas
cmpl
or
cli
lcall
cs
xor
mov
xchg
mov
scas
loope
push
insb
xchg
loop
in
gs
mov
xor
xor
daa
pop
inc
mov
sarl
jge
int
fimuls
aaa
aam
mov
test
jb
cmc
jno
and
dec
dec
in
clc
add
jg
fbld
jb
jae
xchg
xchg
in
inc
adc
pop
pushf
cmp
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
add
mov
jle
or
cmpb
and
dec
add
lds
or
and
insl
lret
pop
pop
xchg
insl
imul
jge
aad
sbb
call
xchg
jg
mov
scas
xchg
bound
movsl
int
mov
xchg
push
mov
fmuls
call
ret
push
ret
test
stos
fbstp
aaa
idivb
cmp
and
and
jg
dec
cmc
pop
ret
sar
nop
sbb
movsb
orb
cmpsb
jge
fsubrs
insw
jl
xlat
push
xchg
adc
gs
outsl
ret
cmp
cltd
add
inc
lahf
lret
xchg
repz
daa
imul
sbb
out
clc
push
sbb
sbb
xchg
xchg
popa
inc
mov
cmpsb
lea
dec
pushf
add
out
sub
jae
xchg
and
adc
adc
out
jno
int3
shll
jmp
mov
ret
and
xchg
fwait
ds
test
jo
lahf
jnp
scas
popf
sar
sbb
lcall
sub
mov
xchg
lods
insb
xor
fwait
add
xor
pop
and
dec
mov
fdivl
repnz
cmpsb
pop
xchg
lods
or
daa
cmpsl
aas
fiadds
test
lea
xor
inc
aas
and
xchg
jne
jl
mov
test
cmpsl
or
flds
sti
fidivl
jmp
es
and
std
pop
push
not
shll
jmp
adcb
pop
pop
pusha
out
shrb
je
xor
cmp
addb
xor
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
setle
jle
mov
jle
sbb
outsb
lret
adc
mov
call
loopne
xchg
cwtl
push
mov
and
or
mov
jl
xor
or
test
and
and
pop
js
shlb
ds
leave
mov
push
mov
shr
mov
mov
repz
pcmpgtd
repz
mov
aaa
test
pop
pop
aam
loopne
call
push
cmp
stos
mov
xchg
gs
fsubl
mov
in
outsl
inc
pop
sub
mov
push
mov
insl
lahf
and
and
mov
je
fistl
daa
mov
cmp
jmp
leave
adc
je
mov
js
sub
inc
inc
adc
xchg
inc
xor
rcrl
mov
push
fsubl
mov
arpl
sub
lods
cs
adc
mov
rclb
pusha
mov
jle
mov
stos
aad
stos
scas
sbb
xchg
lea
xchg
out
roll
shr
fisttps
sti
pushf
cmc
test
mov
leave
stos
mov
pop
sub
ja
lock
fidivrs
scas
sarb
or
dec
fsubrl
int
mov
push
mov
in
cmp
sarl
add
xchg
mov
rcll
gs
out
pop
push
add
shrl
mov
mov
lods
stos
dec
push
or
test
outsl
fmull
mov
int
push
cmp
fs
and
sbb
into
jae
mov
mov
mov
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
cwtl
sbb
int3
xorl
inc
push
inc
xchg
cwtl
and
dec
movsb
mov
shlb
and
or
push
shrb
testl
mov
sahf
dec
or
jg
cmp
sub
push
push
push
pop
lahf
fcomps
jmp
inc
jmp
shl
mov
imul
adc
stos
sbb
lods
popa
loop
add
out
mov
fadds
push
pop
jg
lock
rcrl
xor
dec
xor
mov
jns
cmp
lea
or
shl
dec
inc
xchg
xchg
mov
mov
loope
push
or
dec
add
or
stc
mov
sub
mov
mov
es
aas
xor
sub
sti
icebp
push
inc
sbb
jp
shll
dec
lahf
and
mov
outsl
mov
popa
cwtl
in
aaa
sub
lods
mov
cmp
and
inc
and
shll
lods
add
aam
in
out
mov
fs
mov
les
inc
adc
and
rclb
sub
push
adc
sahf
ljmp
popa
aas
int3
test
adc
shrb
fistps
mov
popa
mov
bound
clc
out
mov
or
fistl
loopne
mov
dec
lcall
scas
mov
ret
xchg
cmp
dec
loopne
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
fisubs
jle
jg
jle
and
xchg
aad
div
stos
lahf
cmp
ss
cmp
cmp
inc
jle
lods
pop
int3
lock
dec
and
je
dec
lods
clc
inc
cwtl
pop
enter
imul
xchg
and
push
in
mov
fiaddl
jb
int
cltd
xchg
cmp
cli
or
sbb
fidivl
icebp
shll
jns
adcb
mov
out
loop
or
sub
mov
mov
das
or
cwtl
lods
jo
lds
inc
outsl
jmp
adc
rcl
xchg
bnd
xor
jne
clc
add
js
ds
lds
push
mov
stos
mov
jns
out
lcall
lods
ret
mov
or
rcrl
or
cwtl
xor
mov
pop
outsl
add
pop
test
ljmp
jge
popa
sbb
rorl
sarl
cmp
jbe
cmp
dec
sub
push
and
mov
fidivl
or
add
andb
lds
xchg
mov
cwtl
pop
xchg
es
aad
inc
xor
mov
mov
fiaddl
xor
inc
mov
ljmp
insl
imulb
icebp
xor
pop
lahf
mov
cmp
push
aam
lcall
scas
jbe
in
sbb
dec
pusha
mov
out
in
xor
pop
hlt
in
aad
mov
ficomps
mov
pop
out
jo
inc
xor
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
or
push
push
or
push
jg
jle
popf
mov
mov
out
rcrb
adc
out
div
xchg
das
int
and
pop
rorb
arpl
jae
mov
adc
pop
or
imul
icebp
or
fbstp
ss
pop
aas
inc
cwtl
mov
and
pop
iret
js
xor
call
enter
mov
enter
lahf
jge
clc
mov
xlat
push
fidivs
push
cli
clc
push
cltd
sub
repz
lods
sub
adc
inc
push
dec
hlt
xor
push
cli
popf
jne
push
sub
faddp
sbb
adc
out
bound
or
mov
popa
mov
orb
lcall
xchg
test
scas
shlb
xor
lds
outsb
cmp
mov
adc
repz
cmp
push
jmp
arpl
hlt
mov
or
cs
pop
out
jb
mov
ja
push
xlat
add
pop
mov
test
loopne
test
gs
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
mov
or
push
jg
jle
in
pop
arpl
inc
fsubrs
ret
pop
ret
repz
daa
sub
mov
cltd
lea
sbbl
rol
pop
and
adc
and
jp
ljmp
or
es
fnstcw
clc
and
in
enter
les
sarb
or
cmpsb
and
int
or
sub
add
mov
shlb
add
add
sbb
insl
dec
dec
sbb
mov
sbb
mov
inc
les
sub
mov
imul
inc
out
xor
cli
push
ror
push
rorl
inc
rorl
jno
int3
std
lret
and
mov
ret
ret
add
mov
pop
mov
cmp
arpl
movl
fildll
pop
jb
in
mov
imul
dec
jne
cmpsl
sbb
call
out
or
cmp
lods
outsb
cld
jno
sbb
nop
cmp
pushf
xor
dec
adc
clc
jle
shlb
out
pop
add
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
xchg
cmp
int3
adc
jle
push
jg
jle
push
sub
jbe
imul
stos
sub
cli
dec
dec
daa
adc
cli
fwait
mov
out
mov
dec
push
notb
adc
or
insl
push
add
lcall
inc
int
icebp
pop
out
push
pop
cli
mov
adc
aam
dec
inc
pop
xchg
movsl
jge
sbb
sub
xchg
lcall
movsb
rclb
cltd
lcall
push
fcoml
movsl
add
dec
test
test
in
xchg
sahf
popa
hlt
imul
leave
icebp
and
popf
cmp
in
pop
sub
jmp
aaa
stos
filds
cmp
outsl
repnz
inc
pop
repnz
inc
mov
gs
push
xor
inc
enter
jno
and
cmp
lds
jecxz
mov
fnstenv
xchg
inc
stos
pop
dec
jl
push
es
pop
cld
loop
push
dec
int
sbb
inc
popf
test
leave
xchg
pop
pop
xor
dec
mov
pop
mov
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
cmp
jle
jns
jle
inc
jno
in
sub
xor
adc
sti
cld
inc
mov
xlat
mov
sbb
xchg
and
cmp
xor
pop
sahf
repnz
ret
dec
cmc
sbb
jbe
hlt
push
loopne
mov
jae
adc
shrb
pop
pop
cmp
mov
mov
fxch
pop
cmp
mov
adc
or
xor
xchg
sub
aas
xor
lret
fildl
xchg
inc
pop
push
into
aaa
or
xchg
test
repnz
leave
outsl
or
sbb
pop
int
xchg
popf
cwtl
jo
sbb
repz
test
push
ffreep
adc
out
inc
and
sarl
loopne
push
loop
test
out
jl
pop
xor
mov
les
mov
add
push
dec
adc
divl
push
jle
cwtl
cmp
sub
lds
arpl
and
push
icebp
push
and
fsubp
push
data16
mov
adc
negb
sub
int3
dec
jb
hlt
movsb
loope
xor
stos
xor
call
dec
xchg
pop
test
pop
mov
push
cmp
mov
fsub
fdivs
and
dec
mov
in
into
and
and
or
mov
in
mov
inc
out
cs
idivl
xchg
mov
fnstsw
xlat
sbb
pop
mov
push
mov
call
jmp
rorl
cmp
inc
imul
fwait
sbb
xchg
cmp
pop
data16
out
inc
rol
cltd
dec
xor
loope
iret
orb
cmp
sub
cmc
lret
bound
push
mov
scas
in
pop
insl
shrl
sti
mov
jo,pt
aam
int3
xor
lahf
mov
xor
std
dec
pop
scas
ljmp
push
or
mov
ret
lds
arpl
es
jle
or
push
add
in
mov
cld
ljmp
adc
push
test
mov
ljmp
dec
mov
paddw
ja
cmp
mov
aad
sub
cmp
xor
sub
cmc
dec
stc
or
or
leave
idivb
stos
ret
push
mov
cmp
mov
ftst
mov
ljmp
cmc
pusha
cld
or
loopne
lcall
ss
or
jnp
loop
xchg
adc
xchg
push
mov
jl
mov
fnstcw
or
cmpsb
shlb
cmp
sahf
and
mov
sbb
mov
fisttpl
call
jmp
and
popf
jge
call
jbe
out
push
inc
test
sbb
xchg
test
lcall
jecxz
jp
mov
xor
push
insl
roll
lcall
push
inc
sub
adc
frstor
fwait
and
fiadds
dec
cmp
push
lock
in
sbb
jg
rorl
aam
iret
insb
pop
jae
out
outsb
in
xorl
insb
aaa
mov
lods
cld
or
cmpsb
inc
hlt
adc
mov
push
adc
cmp
cmpsb
out
cmp
popa
push
scas
testl
mov
jge
pop
mov
inc
or
cmp
cmpsb
jne
mov
xlat
addb
ret
mov
in
inc
jp
sbb
push
mov
push
aad
jae
das
and
jp
dec
adc
jmp
pop
stos
cmp
and
dec
pop
test
in
pushf
nop
and
adc
lret
in
iret
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
xor
mov
push
jns
jle
xchg
jb
pop
pop
test
ficoml
mov
cwtl
mov
dec
dec
xchg
adc
ljmp
pushf
imul
rcrl
adc
lahf
std
fs
inc
jp
pop
dec
rorb
outsb
mov
fimuls
shrl
insb
cmp
jno
iret
jno
loope
adc
stos
lds
fistpl
les
xor
xor
sub
dec
jle
and
icebp
in
push
int
add
inc
push
mov
mov
mov
aam
lock
cmp
movb
and
aaa
xor
add
push
icebp
cmp
mov
mov
icebp
push
pop
lcall
cli
decl
out
in
jmp
jae
sub
or
inc
icebp
std
sub
mov
test
into
iret
push
stos
and
ljmp
sbb
lret
and
mov
dec
lahf
aad
and
ret
push
adc
cwtl
jmp
or
mov
hlt
add
leave
mov
in
add
sbb
shrb
sub
sub
adc
or
test
int3
fwait
adc
out
fnstsw
sbb
push
enter
in
in
gs
out
lcall
int
xchg
rcll
cmp
cld
add
out
pop
fildll
rcrl
and
and
loopne
loop
loope
icebp
stos
or
jne
push
pop
push
pushf
add
fbld
mov
and
cmp
jmp
ljmp
cwtl
or
cmc
and
faddl
das
roll
mov
push
and
call
inc
std
sub
ret
ret
inc
je
dec
retw
dec
addr16
inc
inc
push
lahf
fsts
sub
push
xchg
xor
sbb
jb
and
daa
in
test
clc
mov
push
std
lods
inc
adc
dec
jae
out
movsb
lods
add
mov
je
mov
test
fdivrs
and
fs
int3
xchg
lcall
jmp
ljmp
push
jb
xor
fldl
add
sahf
push
stos
cmp
daa
mov
outsb
lods
std
add
mov
xchg
loop
jmp
add
loopne
adc
pop
adcb
pop
jmp
mov
jl
js
adc
out
out
or
mov
into
ja
test
ficompl
mulb
fists
sbb
rcl
pop
jb
jae
in
adc
dec
sub
out
cmp
js
xor
mov
xor
stos
dec
push
sub
addb
addb
or
scas
jne
cmp
mov
mov
addr16
enter
cmp
inc
pop
pop
jo
mov
movsb
push
cmp
lcall
push
jne
jb
dec
push
or
adc
sbb
mov
adc
rcrl
shll
pusha
dec
rclb
stc
pop
filds
or
xor
cwtl
loope
fcoms
aam
push
jmp
outsl
aam
enter
movsl
cmc
sbb
lahf
roll
and
push
and
inc
push
mov
and
adc
addr16
lods
and
jbe
mov
mov
pop
shrb
cmpsb
dec
subb
pop
or
ret
fisubs
dec
xor
rorb
lock
pushf
testb
inc
decl
add
or
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
pop
rcll
adc
push
jns
jle
outsb
outsl
mov
enter
jp
out
lea
jg
mov
fisttpl
outsb
movsb
push
test
sub
iret
movsb
mov
push
mov
xchg
jne
mov
or
mov
iret
jmp
shl
pop
lahf
les
enter
cmp
inc
dec
stos
pusha
jmp
lds
xlat
lcall
pop
and
inc
js
cli
das
shrb
jnp
adc
jmp
jl
faddl
jno
dec
repnz
pop
fcmovne
pop
leave
je
mov
rcl
clc
cmpsl
mov
xchg
adc
mov
xor
pushf
or
lods
test
push
fs
xor
aam
xor
mov
outsl
clc
xorl
mov
sub
rcrb
scas
pop
enter
ret
cwtl
sub
clc
or
push
and
lret
push
mov
ss
push
inc
jmp
insl
or
and
addr16
shll
in
xchg
je
mov
movsb
inc
ret
fldcw
pop
clc
xchg
aad
pop
jb
movsb
pop
jbe
in
push
out
cmp
sbb
mov
pop
mov
in
sub
movsb
jnp
mov
sti
sarw
scas
xchg
lods
mov
xor
sti
repz
repz
cli
xor
mov
mov
or
xchg
adc
mov
xchg
inc
movsb
sub
sbb
pusha
mov
mov
ret
xchg
mov
dec
aas
push
testl
add
mov
loope
jnp
lcall
stos
cmp
std
je
sub
push
imul
out
xor
ss
icebp
or
shll
fisttpl
sub
xchg
cmpsl
mov
inc
mov
or
aad
jae
dec
setb
cmp
inc
mov
adc
es
cs
push
mov
clc
push
ffree
or
dec
int3
sahf
inc
lret
mov
cli
scas
lahf
mov
je
xor
or
mov
pop
adcb
movsb
out
fcoml
shl
inc
aaa
sbb
mov
scas
adc
sub
out
jne
out
loopne
jmp
cltd
pop
sti
imul
jnp
sub
adcl
jo
mov
jno
push
add
sub
or
mov
rcrb
clc
arpl
mov
rorl
scas
push
cmp
push
psrlw
arpl
ljmp
pop
xchg
mov
ret
sarl
test
stos
sbb
pop
fistpl
inc
scas
mov
jo
inc
cs
or
mov
push
inc
xorl
test
aam
loope
adc
jo
mov
adc
imul
fucomip
mov
popf
push
add
movsl
outsb
ds
ret
out
jecxz
aad
jnp
shl
sahf
movsb
mov
call
pop
add
outsb
adc
add
les
dec
xchg
daa
icebp
outsb
and
xchg
mov
sub
and
sbb
xchg
imul
hlt
lock
mov
int3
arpl
push
jge
daa
mov
jle
jg
popa
cmpxchg
pop
jnp
pop
and
add
adc
and
ja
mov
or
cmc
mov
or
out
push
cltd
jmp
xchg
adc
test
in
pop
lea
leave
in
js
sahf
or
mov
mov
xchg
lea
in
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
jne
pop
stos
loope
inc
loop
pop
push
push
add
mov
lret
aad
mov
or
insb
and
insb
repz
dec
sbb
xchg
je
cs
scas
or
and
inc
push
add
mov
std
xor
jbe
mov
insl
jge
xor
test
outsl
sub
shll
shr
movsl
gs
out
roll
inc
sub
imul
mov
push
aad
mov
iret
leave
or
lods
lahf
out
xchg
jno
cmp
cmc
lds
ret
divb
sbb
sub
cmp
inc
cmp
test
test
inc
xchg
hlt
jp
push
xchg
xchg
stc
mov
js
das
dec
xor
int
into
sbb
test
dec
fsubrs
aaa
les
jo
enter
mov
pop
test
fnstcw
cmp
lcall
cmpxchg
xor
xchg
test
xlat
xor
repz
test
inc
int3
cmp
dec
xor
jb
int
into
sub
sarb
lods
sub
shr
int
xchg
or
outsl
xor
xor
inc
cmpsb
testl
jnp
mov
push
pop
add
xor
std
ret
mov
inc
imul
xchg
insl
mov
add
shll
aaa
adc
and
jo
popf
xor
loop
mov
adc
mov
stos
imul
ja
add
or
xchg
out
adc
push
mov
mov
jmp
cmp
outsl
fimull
int3
hlt
in
sbb
ljmp
adc
adc
leave
nop
ret
push
xor
fs
sbb
gs
inc
mov
int
mov
and
outsl
test
xlat
repnz
mov
ficoml
xchg
movsl
loopne
es
xlat
jae
add
fs
jmp
dec
fcomps
push
insb
pop
adc
dec
in
xor
insl
je
jae
adc
pop
pop
dec
clc
pop
pop
mov
inc
addr16
inc
fstpt
or
iret
sarl
jge
or
mov
mov
pop
and
sub
cmpsl
cltd
in
add
test
add
cmc
mov
ja
push
stos
jnp
aam
lods
in
mov
push
xchg
inc
out
inc
testl
or
fiaddl
jns
iret
shll
xor
mov
sub
les
mov
sbb
pusha
or
int3
in
jge,pt
sbb
cmpsb
iret
ucomiss
cmc
mov
cmc
cmpsb
cli
cmp
push
movsb
icebp
aaa
hlt
xlat
dec
xor
lea
out
scas
into
and
subl
clc
cltd
sub
dec
dec
test
hlt
add
xchg
in
sbb
push
mov
jmp
int
xor
mov
pop
sbb
push
jnp
cmpsl
dec
mov
popa
mov
sub
rcl
xchg
neg
cld
xor
mov
pop
mov
jnp
xchg
sub
adc
rorb
mov
cmp
aad
enter
lods
add
push
cmp
je
add
subl
dec
data16
mov
mov
pminub
pushf
out
jmp
lcall
lods
test
dec
dec
daa
jo
test
leave
mov
lahf
mov
ds
testl
nop
testl
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
sbb
jns
jle
xor
lcall
in
rolb
sbb
test
push
mov
jle
cs
add
rorl
fidivrs
cltd
mov
push
inc
dec
dec
lods
test
repz
sub
pushf
mov
push
mov
or
stos
mov
mov
loope
bound
pshufw
xchg
mull
dec
outsl
inc
mov
add
cmc
int3
into
sbb
and
fs
cmpsl
mov
ds
ja
pop
test
mov
xchg
test
adc
aas
inc
arpl
lea
rolb
inc
push
ljmp
xchg
lahf
sarl
ret
jp
lahf
pop
adc
adc
shrl
lds
adc
lock
mov
arpl
sbb
dec
inc
lcall
shlb
sbb
cmpsb
sbb
nop
dec
push
lods
daa
mov
pop
sahf
repz
stc
sub
std
add
inc
xchg
add
sti
cmp
mov
xor
xor
adc
mov
mov
and
ljmp
enter
outsb
pop
xchg
push
inc
mov
xlat
or
cmp
inc
enter
dec
loopne
xlat
adc
lods
stos
mov
cmp
or
dec
fdivr
lds
paddusw
mov
ja
cltd
push
xor
xchg
add
fisttpl
popf
push
divps
cmc
outsb
leave
mov
cmp
xchg
mov
mov
out
aas
stos
orb
cmp
or
sti
jb
dec
push
adc
out
std
das
outsb
jns
adc
loopne
test
out
push
rolb
call
lock
inc
out
xchg
adc
out
movsb
xchg
xchg
dec
fdivrp
xor
or
cmp
cmp
cmpsb
call
or
arpl
insb
leave
sub
inc
add
xchg
frstor
test
push
movsb
fstl
loop
xchg
xchg
rcrl
xchg
mov
sarl
aaa
mov
mov
xchg
mov
sub
xchg
push
mov
aad
lcall
sbbb
cmp
mov
add
addb
int
outsl
push
xchg
xor
pop
jmp
lds
xor
cwtl
adc
call
xorb
outsb
add
cmc
fsubr
js
adc
pop
pop
sahf
mov
push
cmp
fdivp
enter
je
push
jmp
stos
ret
icebp
ljmp
jb
cld
xchg
dec
push
imul
lea
movl
pop
or
jno
jne
test
mov
ret
jb
cli
je
movsl
out
sbb
jnp
jns
ret
and
mov
jmp
lock
loopne
mov
cli
test
inc
sbb
test
xchg
mov
loope
leave
xchg
outsl
ret
decb
xchg
lods
push
dec
cmp
jl
cmpsb
and
adcb
and
aad
ret
push
mov
mov
lcall
andb
test
xchg
cld
xchg
adc
jb
jle
je
lock
adc
shll
cmp
mov
push
push
lock
mov
jnp,pn
ror
adc
rcrl
mov
stos
dec
pop
xchg
lret
fsts
push
push
iret
clc
xchg
xor
fimuls
out
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
cmpl
jle
jns
jle
lds
loope
mov
loop
sub
leave
ss
push
loop
mov
and
sub
jl
xlat
out
jno
adc
lock
ja
push
sub
dec
xlat
inc
stc
xchg
fucomp
rclb
je,pt
inc
mov
movsl
test
call
xchg
in
mov
cltd
xor
pop
cmp
mov
mov
leave
or
sub
mov
out
pushf
addr16
pop
mov
sbb
aaa
cwtl
mov
repnz
loop
fnsave
fnstsw
cwtl
fwait
pushf
and
dec
mov
cmc
push
nop
push
stos
sbb
mov
lods
call
mov
jmp
add
pop
fdivs
push
test
into
inc
icebp
xchg
xchg
cs
out
repnz
dec
push
jge
nop
inc
orb
adc
xchg
aas
ds
mov
jecxz
and
int
add
or
sbb
jae
xchg
call
lret
fidivs
xchg
cli
leave
aad
arpl
xchg
mov
mov
dec
idiv
subb
jecxz
and
gs
add
xchg
aas
addr16
addr16
jno
das
xchg
and
dec
inc
mov
mov
dec
push
mov
sbb
xchg
add
in
pop
fs
mov
and
inc
jle
lcall
xor
xor
add
mov
bound
test
daa
in
mov
call
sti
and
cmp
gs
icebp
sub
jecxz
fcoml
inc
sbb
mov
imul
lahf
aad
sub
js
out
xlat
loopne
mov
scas
adc
movl
sbb
sbb
xchg
inc
stos
jle
outsl
xchg
lret
mov
mov
jg
lea
or
adcb
push
shrb
in
cmpsb
outsb
mov
ficoms
xor
cli
jl
cli
addr16
out
outsb
cmc
jae
in
out
cwtl
xchg
es
jl
jg
jmp
xchg
pop
insl
jb
pop
fimuls
mov
adc
out
jl
inc
mov
inc
add
and
insl
sahf
or
push
pop
inc
sub
mov
mov
push
sbb
and
je
jae
jmp
sub
les
mov
push
insl
jo
pop
rclb
add
aaa
outsl
pop
insb
push
inc
dec
or
sarb
movsl
jecxz
dec
pop
movsl
mov
iret
xchg
jg
in
lock
sub
je
jnp
xchg
iret
adc
arpl
and
rcll
rcl
cwtl
xlat
sub
adc
ret
sub
xchg
mov
fwait
test
push
or
icebp
arpl
lods
xchg
out
cs
mov
jle
or
mov
shlb
inc
adcb
pushf
inc
test
adc
cmp
jb
mov
cmp
jp
xlat
and
imul
repz
jo
xlat
ja
loop
cmpsb
mov
data16
movsb
jmp
popf
adcl
sub
iret
ja
fisubrs
sti
and
add
push
rclb
cmpsb
and
daa
push
nop
xor
xor
inc
movsl
xor
jb
aad
mov
push
mov
in
jns
mov
sti
mov
xor
mov
pop
xchg
scas
xor
in
mov
mov
bnd
shr
imul
pop
fidivl
outsb
cltd
inc
add
mov
xchg
bound
popa
aaa
push
push
xlat
dec
shr
fisubl
or
or
clc
adc
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
mov
and
push
jns
jle
xor
test
pop
mov
sbb
xchg
repz
sbb
sti
lahf
mov
sti
push
fs
test
rclb
push
or
xchg
xchg
mov
cmc
and
movsl
shlb
xchg
in
test
out
sbb
mov
fnsave
das
mov
adc
cmpsb
lock
mov
das
push
xchg
cmp
adcl
xlat
push
dec
je
xor
movsb
loopne
push
xchg
mov
ret
jl
dec
mov
sbb
les
push
cli
call
sbb
push
mov
adc
mov
or
push
ss
icebp
loope
cmc
sbb
ret
mov
xor
xchg
add
fcomps
icebp
sahf
push
aam
mov
and
adc
pop
cmc
fs
scas
sbb
and
mov
stc
pop
and
or
test
movl
fxch
sbb
inc
dec
nop
jle
ret
and
mov
pop
and
lds
push
ror
loopne
hlt
mov
and
and
add
and
cs
aas
cmpsl
fidivrs
pop
mov
outsl
mov
dec
xchg
mov
out
cli
divb
enter
sbb
insl
inc
jmp
mov
frstor
out
cmpsl
out
mov
jae
out
xchg
jae
or
cmp
ret
loope
jg
cmpsb
push
in
mov
jecxz
sti
mov
add
inc
pop
cmp
adc
xchg
rcll
dec
shll
in
stc
insl
push
lods
cmpsl
int3
aas
push
fimuls
push
mov
movsbl
xor
cmp
pop
fisttpl
outsb
ja
or
cmp
shll
leave
ljmp
in
call
mov
jbe
jne
mov
adc
and
sbb
xor
xorl
lock
int
jmp
in
aaa
pop
pop
or
sbb
fidivs
or
in
dec
adc
xor
sbb
lds
test
in
or
outsb
inc
or
call
pop
aas
fwait
out
rcll
pop
lret
dec
cmpsl
jnp
fwait
jge
pop
stos
xor
jb
xor
repnz
xor
jp
mov
fisubrs
das
lds
and
pop
push
dec
jne
push
adc
adc
stc
lds
test
jmp
cmp
imul
push
je
add
popf
and
loopne
pop
inc
xor
out
pop
aas
cmc
je
adc
in
adc
repz
outsb
sbb
sub
mov
and
mov
lea
push
sbb
xor
and
sbb
push
pop
dec
loope
sarb
daa
and
andl
popa
mov
gs
lods
mov
mov
aam
testb
subb
sbb
mov
add
cmp
jecxz
imul
and
add
mov
repz
pop
add
pusha
lea
repnz
inc
mov
xor
adc
adc
jnp
insb
cld
push
cltd
out
lret
push
fldcw
push
pop
ficompl
lods
leave
sub
mov
mov
pop
outsl
or
fwait
popa
cmp
cmp
sti
cmp
imul
push
adc
sbb
movzbl
stc
or
mov
dec
insl
icebp
nop
push
xchg
insl
xchg
aam
roll
mov
xor
test
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
aaa
in
sbb
jle
pop
jg
jle
pop
test
jp
add
sbb
pushf
movsb
sahf
sbb
xor
out
and
out
mov
pop
pop
fisubs
push
ss
cmp
push
mov
and
add
and
dec
out
jb
mov
lahf
sahf
in
dec
sub
mov
lret
in
into
clc
adc
call
mov
jns
jg
pop
cli
ficoms
mov
jecxz
jle
xlat
and
cwtl
add
frstor
dec
xor
cmc
ret
jo
push
mov
jmp
test
ficomps
mov
mov
enter
adc
xor
cltd
pusha
mov
mov
jg
mov
js
sub
mov
out
aas
mov
adc
leave
aam
mov
sbb
mov
test
repnz
add
pop
push
xlat
or
aad
push
in
dec
pop
sbb
scas
add
mov
or
movsl
stos
inc
rcll
daa
jge
xor
mov
mov
mov
adc
call
add
dec
adcl
inc
xor
pop
xor
jecxz
mov
pushf
stc
xchg
call
ljmp
scas
movsb
or
xor
filds
mov
xor
mov
push
push
push
or
icebp
fsubrl
lock
cmp
sti
std
jp
jne
mov
xor
in
jne
xorl
ss
fisubrl
or
add
sarl
rcrl
pop
cli
out
shl
xchg
shlb
xor
jmp
pusha
mov
shlb
sbb
dec
ljmp
je
fimuls
adc
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
cltd
jl
sbb
jle
pop
jg
jle
and
mov
loopne
shr
inc
adc
shlb
dec
or
mov
inc
sbb
fs
addr16
jno
and
test
or
add
push
and
fildl
add
mov
popf
outsl
cs
sub
sbb
sahf
cmp
mov
xchg
arpl
mov
dec
push
aas
cmp
aas
inc
add
sub
call
fstl
cmc
xchg
imulb
xchg
adc
fisubrs
les
adc
inc
enter
pop
sarb
out
psubb
daa
jge
dec
filds
test
dec
arpl
shl
cmp
sarl
movb
jae
sahf
xor
lds
sti
jne
idivb
push
int3
scas
mov
mov
fisttpl
out
ja
out
cld
add
adc
inc
aad
popa
cmp
bound
push
es
daa
sub
in
test
gs
or
outsl
cmpsl
add
mov
es
hlt
outsl
mov
leave
dec
test
clc
dec
lods
pop
sti
fcompl
mov
mov
pop
mov
sti
jns
sahf
ret
xchg
and
inc
lds
xor
jp
fdivs
sbb
enter
sub
or
jecxz
inc
scas
dec
iret
sbb
cmp
pop
fisubs
xorb
gs
outsb
mov
xor
arpl
mov
sbb
jne
lds
inc
sub
xchg
xor
aam
mov
insl
int
ret
rcr
sbb
mov
pop
leave
jbe
inc
loopne
repz
sub
mov
in
fidivrl
fadd
insb
mov
adc
adc
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
lock
sub
les
jle
aaa
gs
stc
add
enter
mov
call
lea
in
sahf
push
rcr
sar
lahf
roll
add
outsl
sbb
xor
mov
insb
push
ss
mov
mov
fdivl
pop
test
aad
mov
inc
sub
adc
inc
mov
fs
push
ret
jge
int3
popf
imul
xchg
stos
enter
xchg
lods
in
sbb
or
inc
fs
mov
push
jbe
or
rcrl
sbb
mov
mov
das
test
xchg
enter
fst
in
push
enter
add
ja
mov
mov
hlt
test
lods
adc
rol
sbb
pushf
mov
enter
adc
fs
pop
dec
rcl
out
jno
jle
jae
popa
jae
cld
inc
mov
xchg
mov
or
xchg
mov
xchg
pushf
mov
mov
add
jo
sti
jbe
fwait
les
lahf
arpl
ret
lahf
in
stos
mov
push
lock
inc
pop
mov
out
fdivp
and
xor
and
cs
pop
lret
sub
xor
cmp
jge
inc
stc
xor
clc
daa
out
jo
xor
cmp
inc
inc
cmp
or
xchg
jo
mov
or
out
cltd
addr16
stos
mov
test
cmp
imulb
cmpsb
add
add
push
jb
out
scas
test
cmpsl
clc
scas
inc
mov
xlat
jne
push
popf
push
ljmp
xchg
mov
repz
dec
shl
push
aam
jb
inc
xor
mov
data16
push
push
or
pop
addl
rcr
imul
jp
xor
push
sub
stc
movl
sbb
push
mov
test
jle
xchg
pop
pop
mov
inc
add
ljmp
add
push
pushf
and
and
jp
push
shlb
dec
ret
out
jb
dec
push
test
cmpsl
dec
mov
mov
call
into
add
or
inc
add
mov
xchg
mov
xor
cmp
xchg
mov
inc
std
shll
fdivr
out
xor
and
out
mov
sti
outsl
repz
out
dec
mov
adc
fisubs
adc
out
pop
xchg
mov
push
pop
xor
sbb
rorb
mov
imul
or
push
popa
push
push
jl
imul
and
mov
insb
pop
test
insb
fcomps
lods
call
icebp
incb
imul
out
xchg
aad
pushf
movsl
adc
dec
lock
adc
pop
ljmp
scas
mov
or
add
cwtl
out
gs
in
push
push
push
aas
out
in
jl
sbb
xchg
dec
add
add
flds
daa
cli
push
into
dec
inc
cltd
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
xlat
push
sahf
ljmp
jle
mov
adc
shlb
xor
das
adc
std
jo
jg
inc
insb
cmp
sbb
pop
sub
mov
test
mov
mov
mov
mov
fdivl
in
adc
dec
jbe
lret
mov
xor
jb
sub
ret
add
lcall
lcall
test
int3
call
enter
cwtl
vmwrite
loopne
and
cmc
leave
cmc
sub
fiadds
jne
lods
dec
jecxz
pop
sub
mov
pop
lret
clc
movsl
out
data16
and
jp
movsb
mov
mov
adc
jl
sub
sahf
js
push
shrl
jecxz
push
andb
push
fucom
pop
mov
ljmp
mov
adc
cmp
xchg
or
sbb
mov
inc
and
sbb
jp
dec
call
xchg
or
sub
iret
insl
psrad
push
xor
pop
pop
lds
dec
int
push
aam
std
adc
sub
adc
repnz
lds
rcrl
rcll
movsl
fs
addr16
and
roll
pop
in
sub
push
incb
outsl
push
shlb
cli
dec
inc
hlt
dec
sbb
ss
hlt
hlt
cltd
rcl
lcall
popa
daa
loop
xor
addb
sbb
cmpsb
push
or
mov
aaa
leave
repz
gs
jnp
cmp
shl
and
jmp
add
ret
sti
sub
out
pushf
pop
ljmp
push
mov
in
movsb
in
add
and
add
mov
mov
mov
popf
sub
gs
nop
enter
mov
or
rol
test
pop
stos
lcall
xor
or
popl
jp
push
movsb
dec
fdiv
imul
mov
pop
push
pop
roll
dec
mov
cmpl
ret
xchg
xor
sub
jmp
push
cmp
add
jge
push
ja
out
clc
dec
test
cs
mov
mov
adc
rcrl
int
and
rcr
aad
inc
mov
add
imul
push
dec
cmp
icebp
cltd
push
or
arpl
ret
daa
push
add
lock
mov
add
sub
mov
inc
ret
inc
push
jae
hlt
jp
pop
test
mov
adc
mov
push
mov
adc
jno
adc
push
push
test
popa
fimuls
ja
mov
sahf
pop
xchg
stos
inc
je
adc
cmc
mov
insb
icebp
fsubrs
les
shll
dec
in
jno
mov
jge
mov
and
fs
mov
imul
pop
cmp
fstpt
and
pop
jno
fcomip
pop
sub
aam
sub
cmpsb
lret
andl
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
mov
xor
les
jle
add
ss
push
and
iret
dec
out
mov
push
jmp
mov
jne
and
fimuls
jl
into
mov
pop
pushl
cmp
inc
mov
movsb
lods
in
faddl
jp
cmp
cmp
push
pop
es
push
adc
inc
clc
js
sub
jb
jns
inc
in
adc
sbb
jns
mov
sbb
ja
xchg
inc
push
jg
push
inc
inc
and
jle
rcrb
xor
mov
mov
lret
aam
pop
mov
lods
leave
mov
adc
ljmp
insl
stos
and
or
xorb
pushf
fwait
sub
push
cmpsb
push
and
or
jbe
or
cmp
testb
jle
mov
cmp
sarb
mov
jmp
push
inc
lock
or
das
pop
or
mov
test
std
cmp
insb
stos
jl
mov
mov
ds
in
mov
dec
insl
jae
mov
push
stc
sub
dec
mov
mov
nop
jae
in
mov
mov
cmp
mov
sbbb
insb
push
push
leave
imulb
loopne
cwtl
loop
inc
mov
or
jne
dec
aam
push
ss
aad
in
xchg
mov
jae
je
lret
mov
sub
fildll
adc
xchg
jl
das
les
bound
pop
test
movsb
cltd
inc
xor
loopne
in
insb
mov
and
std
jns
mov
mov
js
cmpsl
xor
aam
xchg
loopne
or
fdivr
shll
lods
jns
movsb
orl
movsb
lds
jbe
and
mov
stc
jnp
mov
mov
inc
sbb
das
jle
mov
cmpb
cs
mov
ret
aam
out
adc
int
xchg
sahf
sti
or
cmpsb
xor
ret
jmp
in
mov
iret
les
call
orb
adc
movsb
and
and
jge
in
push
pop
mov
outsb
xor
cmpsb
hlt
or
stos
xor
inc
or
clc
push
or
xor
add
inc
sbb
mov
loopne
mov
xor
lods
fwait
dec
sub
jge
cwtl
jno
jno
mov
pop
sub
shll
popf
jns
mov
pop
jae
ss
into
sub
or
lret
into
inc
cmp
jb
push
or
push
xchg
push
enter
shlb
mov
xchg
int3
jle
mov
cmc
mov
mov
inc
clc
aad
into
dec
sahf
cmp
and
loopne
mov
aam
in
add
test
mov
inc
pop
cmpsb
push
add
lock
into
jp
lea
insb
or
pop
pop
adc
mov
repz
cmpsl
fmull
pop
fisttps
inc
and
inc
or
fnsave
daa
push
iret
outsl
add
pop
rcll
insl
cmp
jne
add
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
out
add
les
jle
dec
and
and
stos
test
stos
inc
lea
scas
imul
or
jbe
std
scas
popa
cmp
jno
and
mov
add
mov
sbb
push
jp
loopne
test
adc
push
hlt
clc
in
push
inc
ljmp
aas
push
xchg
mov
stos
aaa
out
or
cli
xchg
flds
add
lods
push
lds
loope
movsl
pop
data16
aam
sub
xlat
xchg
xor
dec
fcompl
dec
shll
mov
sbb
lds
jge
filds
pop
stc
adc
lods
mov
mov
pop
movsl
xlat
mov
lret
xor
adc
pop
mov
in
fistps
fwait
sub
mov
repnz
ja
rorl
pop
adc
cli
mov
mov
push
bound
pop
adc
sub
fdivp
jl
dec
pop
dec
ret
xchg
lcall
das
pop
add
or
sbb
mov
mov
popa
add
xchg
pusha
cltd
pushf
shlb
cmp
lods
insb
adc
cmovle
mov
push
test
mov
inc
adc
mov
cli
xchg
mov
jnp
pushl
inc
push
mov
dec
shlb
and
subb
xchg
frstor
stos
mov
jns
cld
sub
mov
xchg
lcall
test
lds
ja
mov
xchg
jo
pop
adc
pop
dec
push
mov
fstps
ja
xor
sar
ret
stos
jnp
jg
or
add
and
lods
mov
sbb
cmp
mov
inc
pop
sbb
sarb
mov
dec
jne
push
inc
sbb
add
mov
test
pop
cmp
mov
aad
push
jge
adc
mov
imul
jo
mov
jno
lods
pop
addl
mov
lahf
lods
int3
xlat
and
xor
fdiv
dec
mov
mov
pop
dec
mov
mov
jbe
ljmp
outsl
ds
pop
out
lret
pop
lret
and
orl
lods
lods
pushf
jo
int
nop
cmp
aad
hlt
push
pop
jno
jbe
dec
dec
adc
pop
arpl
push
push
adc
jp
loope
movsb
or
js
test
push
mov
cld
mov
decl
cmp
sub
lret
fsts
hlt
mov
fisttps
cmp
lret
push
fmull
sbb
ja
mov
xchg
imul
cmpsl
xor
xlat
mov
cmc
xor
loop
lods
or
shl
sbb
sbb
mov
insl
cmpsl
test
jl
mov
leave
pop
lods
dec
ret
cwtl
jnp
or
das
inc
lahf
add
sub
ret
push
hlt
lret
jp
xchg
mov
cmp
dec
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
inc
inc
sti
add
dec
jns
jle
push
mov
lea
outsl
pop
mov
add
adcb
inc
int3
xchg
sti
lcall
jno
jp
pop
sbb
inc
mov
mov
xchg
sub
imul
mov
outsl
jge
mov
push
lock
xchg
inc
adc
rorl
pop
xchg
inc
adc
pop
jecxz
movl
lock
addb
data16
addb
cmp
cwtl
inc
add
faddl
sub
mov
test
push
sahf
cmpsb
sub
cmc
pop
lret
add
xlat
mov
imul
dec
cwtl
in
popa
adc
jp
ucomiss
sub
and
push
test
mov
push
or
push
mov
andb
xchg
sub
sub
fdivs
test
mov
aas
sbb
jbe
or
dec
out
sbb
orl
idivb
mov
or
add
add
jecxz
mul
jmp
std
adc
xor
mov
or
sub
jnp
sbb
add
cwtl
xchg
pop
insl
ja
sti
and
leave
and
imul
test
adc
popa
push
movsl
inc
sbb
push
add
shll
and
mov
rclb
and
push
stos
pop
mov
lods
and
or
add
mov
add
pop
pop
mov
inc
or
push
cmp
mov
lock
or
leave
adc
mov
dec
shll
cmp
cmp
orl
jl
inc
cmc
out
mov
leave
dec
xchg
sub
movsb
loop
ret
ljmp
js
lods
mov
jp
mov
data16
mov
jb
pop
outsl
outsl
in
and
pop
mov
mov
insl
mov
outsl
cld
sub
inc
fcmovne
loopne
or
icebp
and
clc
jnp
adc
xchg
xchg
dec
iret
lock
stc
mov
xor
sbb
jne
adc
sahf
out
jo
testl
fadds
ss
push
dec
jns
test
mov
jb
xorl
movb
jmp
mov
inc
lahf
out
ss
jle
push
cmp
lret
addl
lahf
outsl
jl
push
fmul
mov
mov
push
pop
dec
shll
icebp
aaa
ret
dec
cmp
jb
lcall
push
xchg
sbb
dec
shl
dec
or
rolb
dec
call
jmp
and
xlat
mov
dec
js
cmp
or
cltd
enter
jmp
cli
cltd
jae
call
mov
pop
aam
dec
xor
add
mov
shlb
dec
or
adc
out
mov
inc
stos
dec
cmp
lods
fucom
movsl
push
dec
jo
idivb
or
dec
out
jecxz
shll
sbb
cltd
add
lds
ficomps
pop
test
mov
sub
push
sahf
negl
lea
push
or
pop
in
das
jne
pushf
dec
test
out
push
and
inc
mov
jmp
dec
mov
or
inc
fildll
xor
add
add
gs
pop
into
fidivrs
inc
test
dec
mov
imul
sahf
xor
in
into
and
adc
ret
jns
aam
or
decb
movsl
jp
cmp
stc
and
or
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
sbb
into
dec
cmp
dec
jns
jle
aam
inc
inc
add
ljmp
test
mov
mov
push
push
push
lret
imul
and
repnz
ljmp
loop
dec
jae
adc
jp
inc
cmp
xchg
sarl
mov
xchg
je
les
jbe
pop
and
and
stos
push
es
pop
scas
pusha
lea
mov
sbb
xchg
rorl
sub
lcall
adc
fucomp
mov
xchg
divl
pop
xor
xchg
push
mov
movsb
and
stos
cs
aaa
stc
fstpt
xor
pop
icebp
or
pushf
sbb
pause
sub
mov
xchg
in
sub
in
and
sbb
sbb
test
mov
and
xor
jno
ret
push
mov
roll
jp
xchg
cmc
dec
rcll
imul
mov
cli
pop
and
xchg
cmp
push
add
or
mov
pop
jmp
mov
loop
loop
sbbl
pop
out
shlb
inc
mov
mov
mov
adcb
cltd
aas
iret
cmp
cld
inc
sbb
sbb
dec
negb
outsl
sub
xor
fadds
nopl
mov
or
scas
xchg
addb
push
push
cmp
jl
jge
ret
push
imul
jno
xchg
in
loop
inc
sub
xchg
jge
call
dec
test
adc
shrb
xlat
xor
adc
xchg
inc
in
popa
ljmp
push
shl
dec
cmpb
call
repnz
es
push
daa
mov
out
mov
jmp
push
adc
mov
xchg
mov
adcl
xchg
icebp
dec
pop
mov
fs
push
push
rcrb
inc
xchg
mov
or
push
push
dec
mov
cmpsb
mov
inc
add
jbe
jnp
inc
stc
ficoms
cmp
or
leave
cltd
orb
cmp
fsts
sbb
out
cmp
out
cmp
xchg
pop
test
or
test
mov
mov
loop
arpl
fcoml
aaa
out
sbb
push
cli
xor
dec
aam
dec
lret
cs
cs
jp
loop
std
xchg
inc
xor
jecxz
mov
out
dec
aaa
les
add
aaa
adc
mov
adc
or
pop
stc
loop
in
jb
divb
lods
inc
clc
sub
sahf
ja,pt
adc
sbb
out
orl
cmp
js
mov
adc
rclb
cmp
sub
add
cs
xchg
and
rolb
push
aaa
sbb
gs
pop
mov
cmp
adc
inc
pushf
sbb
xchg
in
mov
or
mov
dec
ret
pop
or
sbb
push
sub
pop
lret
push
das
repz
lods
mov
push
ds
add
cli
push
cs
jno
mov
jb
cmp
cmpsb
shlb
cmp
stc
push
mov
movsb
add
push
inc
shll
push
aad
jno
jbe
push
or
loop
mov
adc
mov
inc
sub
inc
mov
pop
es
int3
pop
loop
out
cmpsb
in
push
ds
mov
leave
outsb
pop
lret
xchg
cmp
adc
iret
push
enter
stc
dec
mov
imul
mov
xchg
push
and
fcoml
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
stos
popf
jle
dec
jns
jle
inc
sub
and
dec
cmp
add
ja
dec
cmp
pusha
roll
outsb
mov
das
jne
add
es
push
and
xchg
fbld
xchg
push
out
test
add
xlat
push
xchg
outsl
mov
lret
mov
rcr
dec
adc
mov
push
fst
pop
sub
fs
test
test
and
mov
popw
negb
icebp
cmp
xor
cmp
dec
call
sbb
xor
inc
mov
xchg
fmull
lcall
inc
fmull
xchg
jbe
pop
xor
fwait
sub
shl
mov
xor
sub
iret
jge
out
test
negl
mov
lahf
lods
scas
bound
es
jnp
dec
xor
or
mov
add
lods
arpl
and
mov
dec
adc
mov
daa
mov
loop
pop
ja
jno
push
inc
scas
test
sub
sub
lods
xlat
rclb
inc
sub
mov
movntq
or
std
int
filds
jp
push
jb
fwait
jns
and
std
jbe
sub
sub
fwait
loop
mov
mov
dec
jno
sti
jecxz
push
dec
fwait
inc
repz
inc
mov
xchg
popa
fcmovnbe
pop
insb
icebp
test
inc
xor
sbb
fs
pop
imul
lcall
call
addr16
int
cli
das
sbb
sbb
mov
mov
and
push
iret
xor
insl
add
nop
push
in
pop
adc
lcall
xor
mov
adc
movsl
mov
dec
inc
sub
in
rol
push
pop
sbb
in
cmp
andl
jp
xor
mov
jp
cmp
fcoml
mov
sbb
cmp
inc
cltd
pop
lods
outsb
cli
xchg
cmp
imul
xchg
enter
dec
xchg
lods
mov
je
lods
mov
jl
mov
nop
sub
idivb
add
aas
sahf
test
lahf
in
cmpsb
inc
dec
dec
stos
jnp
mov
cmp
adc
xor
add
push
push
shll
xor
push
cs
sub
xchg
inc
movsl
clc
mov
cltd
mov
xchg
jno
lea
std
push
sbb
into
mov
mov
push
pop
in
jge
out
sahf
or
lret
inc
push
call
insb
push
pop
jns
cmp
xchg
xor
dec
cli
sbb
scas
push
and
cmp
push
pop
sub
mov
mov
ss
cmp
aas
pop
pop
push
sub
push
sub
mov
or
repnz
insl
pop
popa
js
cs
das
push
subb
jno
and
xchg
mov
or
xchg
xor
sub
lock
hlt
imul
loop
scas
int3
mov
push
dec
pop
scas
pop
xchg
aad
mov
lahf
adcb
pinsrw
xchg
je
cs
daa
pop
faddl
pop
js
inc
push
xor
mov
pusha
cmp
and
xchg
leave
testl
daa
je
shrw
jge
bound
add
into
ds
int
pop
shrl
push
lret
loopne
add
add
add
jmp
shlb
cld
ja
or
out
ret
jle
dec
jns
jle
lods
loope
mov
jg
adc
cmp
xchg
push
stc
out
sub
push
sbb
rcl
xor
packuswb
jmp
sbb
sub
jmp
or
ja
mov
jae
jmp
xor
mov
ja
rcl
inc
dec
ss
xchg
mov
test
mov
xor
shlb
and
lods
push
fcmovne
and
mov
or
stos
out
cmp
jnp
sarl
inc
sub
mov
jp
pop
and
mov
push
pop
ljmp
fldenv
xor
dec
mov
cli
push
or
and
xor
inc
sub
loop
fcomp
cmp
push
add
mov
mov
pop
mov
repz
fdivrp
dec
les
aam
sub
xchg
mov
pop
out
mov
bound
adc
xchg
fwait
arpl
inc
fmulp
std
testb
faddl
pop
inc
sub
lret
mov
out
sbb
xchg
and
fists
inc
cmp
inc
mov
sbb
xor
in
lret
xchg
mov
into
fcomi
stos
cmc
push
cmpsb
dec
int
or
cmp
test
push
sbb
inc
mov
pop
cmp
mov
xor
stc
ret
pop
pop
cmp
out
sbb
pop
pushf
or
iret
and
add
or
mov
ficoml
adc
cmpsl
add
push
mov
ret
arpl
mov
popa
cmp
jns
rcll
js
and
xor
pop
aad
fs
stos
sub
les
or
fnsave
push
sbb
xorl
push
push
int3
loope
push
dec
andb
rclb
jle
arpl
mov
and
pop
mov
loope
cmpl
mov
sub
add
mov
ret
and
mov
mov
pop
pop
add
lods
pop
addr16
xor
scas
popa
sarb
vmread
fldenv
ret
data16
mov
out
imul
add
mov
jae
loope
and
jp
popl
dec
adc
sub
lahf
jbe
movsb
scas
in
lock
mov
xchg
popl
or
repz
xor
pop
jge
adc
cmp
stc
cmp
adc
ljmp
push
xor
mov
adc
xor
movsb
xor
loopne
push
test
imul
or
xlat
movsl
std
ss
dec
add
daa
outsl
negb
in
loop
sbb
ss
or
push
pop
xor
je
loopne
pop
or
ja
fld
mov
iret
int
mov
and
push
pushf
pop
xor
test
push
push
or
or
inc
lret
in
sub
out
imull
mov
xchg
aad
imul
int3
out
and
xchg
fmulp
nop
ss
cmp
js
divb
push
and
cmp
movsl
in
and
mov
xchg
jns
shll
adc
inc
xlat
pop
pushf
or
sahf
cmp
adc
shrb
add
adcb
adc
js
or
popf
xchg
in
mov
loop
js
movsb
mov
mov
stc
cmp
sub
push
pop
fistps
imul
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
imull
aas
iret
jle
dec
jns
jle
insb
loop
pop
and
out
test
xor
ret
jo
test
push
push
push
pushf
cmp
movsb
fsubrl
ror
push
xchg
cwtl
sub
out
aaa
pop
sub
std
lock
enter
mov
mov
ret
add
js
aad
mov
inc
sub
frstor
dec
push
in
out
enter
js
push
in
in
out
popa
outsb
stos
sub
xor
notb
adcl
pop
mov
push
inc
mov
gs
sahf
je
add
dec
iret
xor
xchg
ficompl
adcl
mov
pop
sbbb
mov
bound
popl
push
out
neg
xchg
repnz
out
mov
jnp
add
xor
mov
mov
sbb
shl
inc
jb
cld
push
iret
and
filds
xchg
out
lods
not
sbbl
rcrb
insb
mov
jg
aad
mov
jbe
rolb
mov
jb
stos
adc
lea
or
inc
fisttpl
test
jmp
mov
xchg
mov
in
dec
fmuls
daa
mov
nop
mov
in
test
cwtl
mov
cwtl
xor
mov
mov
cmpsl
sub
jmp
sbb
popf
sbbl
rcr
fsts
mov
ja
scas
aam
aaa
lea
rcll
xlat
adc
mov
les
mov
xchg
inc
scas
xchg
pop
jo
sbb
cld
xchg
or
je
loop
mov
xor
and
das
jnp
sbb
stc
dec
or
push
imul
push
test
add
sub
push
icebp
adc
mov
pop
dec
pushw
add
dec
repnz
or
push
add
jnp
push
ljmp
mov
sbb
dec
cmp
shll
xchg
sbb
mov
and
sbb
lea
add
lea
fwait
pop
fcoms
int3
sub
xchg
push
and
add
jne
push
das
mov
fsubrs
dec
push
jg
or
add
cmpsb
out
and
inc
repnz
push
lods
jmp
bound
pop
mov
cmc
data16
shr
daa
inc
les
push
mov
mov
pusha
jge
add
and
add
xchg
lods
test
inc
mov
fcmovnb
dec
xor
xor
push
movsl
adc
adc
fistl
pop
cmc
inc
push
ret
pusha
orb
or
sbb
sub
sbb
jbe
movnti
movsb
addr16
addl
lret
int
jns
pop
mov
int
xor
push
push
ret
stos
sub
pop
lret
lds
stos
sub
sub
lret
sbb
cltd
insb
rcl
pop
test
sub
mov
les
mov
lods
divb
push
lahf
test
repz
sarl
arpl
popa
inc
or
mov
js
div
sub
pushf
rcrb
dec
jl
mov
add
inc
incl
xor
imull
pop
xchg
adc
push
jmp
adc
test
jae
jne
imul
jne
ja
aas
jae
pop
pop
enter
push
mov
xchg
loop
xchg
arpl
in
les
sub
into
shll
fimull
or
pop
cmc
inc
mov
mov
ffreep
rolb
xchg
add
call
mov
test
add
add
sahf
sbb
add
in
decl
call
das
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
adc
mov
sub
ds
stos
icebp
cmp
cs
push
lret
add
ja
repnz
testb
ljmp
mov
insb
stos
inc
loope
and
jbe
sbb
cmpsb
leave
cmp
inc
int3
jl
inc
sbbl
xchg
inc
mov
or
xchg
inc
adc
mov
lock
sarl
xlat
aam
andl
or
sbb
out
mov
mov
adc
sub
jge
insb
and
inc
mov
or
xor
jb
jb
cmpsb
insl
mov
add
mov
add
mov
int3
mov
inc
je
lret
lds
mov
int
sub
dec
outsb
outsl
sub
cltd
xchg
mov
jg
in
mov
mov
dec
add
xchg
push
pop
jo
mov
out
mov
fidivs
push
add
jne
sarl
mov
mov
negb
xchg
subl
add
inc
xor
sahf
pop
js
xor
mov
jns
mov
sub
dec
mov
aaa
fistpll
add
ss
cwtl
dec
xchg
popa
call
ss
fnstsw
xor
sub
dec
popf
repnz
pop
adc
inc
push
daa
mov
and
dec
movsb
sbb
fidivrs
pop
lds
push
adc
pop
leave
adcb
sbb
mov
push
cli
out
fmuls
ret
cmp
adc
sbb
test
pop
icebp
cmp
jge
out
cli
sarb
dec
pop
adc
mov
sub
mov
inc
imul
jp
insl
pop
add
sub
or
and
lock
push
out
lcall
mov
push
mov
inc
int
xor
mov
aaa
out
add
sub
sub
mov
outsl
lds
ds
cwtl
jno
js
and
pop
dec
adc
jb
and
sub
enter
push
daa
lods
or
nop
mov
outsl
lds
cmpsb
push
mov
fidivs
inc
paddq
into
push
and
xor
popf
xlat
cmpsb
sbb
mov
fs
mov
pop
scas
aaa
cmp
push
xchg
int
js
data16
fisttps
and
fldenv
pop
jb
imul
cld
adc
mov
ss
dec
sub
mov
into
xor
movsl
mov
outsb
and
icebp
jno
or
and
out
jl
xchg
push
mov
sti
xchg
lcall
scas
std
inc
popf
mov
cmp
inc
in
lcall
dec
jnp
insl
dec
fs
adc
jg
and
jbe
jno
mov
jl
or
mov
cmpsl
and
mov
pop
dec
insl
jne
mov
nop
mov
imul
jns
mov
or
jnp
add
xor
cwtl
add
jo
je
and
addr16
aaa
loope
movsl
aaa
cmc
and
jbe
call
mov
cltd
shlb
testl
jns
dec
push
jne
mov
and
dec
sbb
dec
movsb
enter
in
jbe
sub
mov
push
push
add
shll
jno
mov
fcmovu
xlat
enter
cmpsb
cmp
inc
mov
fwait
adc
pop
and
test
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
in
mov
dec
jns
jle
mov
sub
sti
or
push
out
push
pop
add
jmp
cmp
repz
mov
mov
adc
mov
leave
mov
add
jnp
les
sar
shlb
jmp
das
movsl
push
or
push
inc
xchg
dec
dec
lret
sub
int
pop
mov
loop
mov
gs
in
arpl
mov
mov
inc
imul
ds
loope
mov
lret
and
fsubrp
sahf
sub
or
pop
fucomip
out
mov
icebp
add
jl
xlat
mov
pusha
sbb
fisubrl
push
imul
mov
jl
cmp
in
jo
xor
add
fbld
inc
add
xchg
dec
mov
in
in
mov
stc
push
movl
adc
lods
les
jnp
ss
ret
in
idivl
xchg
ret
push
mov
xchg
fcmovbe
stos
fmul
push
sahf
int
fldl
pushf
in
cmpsl
sahf
roll
ret
or
dec
lea
gs
mov
mov
jmp
add
pop
jmp
aad
pop
int3
ret
xchg
or
outsb
xor
xchg
cmp
je
mov
cmp
sub
pop
xor
dec
add
inc
rcrl
cmpsl
ret
mov
popa
mov
fstpl
and
xchg
repnz
mov
rcl
or
jb
roll
pushf
mov
movsl
jo
xchg
mov
mov
cmpsb
and
arpl
data16
outsl
test
cmp
scas
pop
jbe
pop
cld
add
ja
test
mov
mov
inc
inc
ret
stos
jo
mov
mov
dec
arpl
insl
fiadds
std
push
jo
xor
pop
or
rolb
jge
out
xor
inc
pop
pushf
xchg
iret
sbb
arpl
fistps
jecxz
cmpsl
lret
xchg
cmp
loope
mov
dec
or
out
lea
jl
inc
lods
jecxz
xor
jns
xchg
xchg
js
int
insl
jnp
cwtl
movsb
leave
and
hlt
lock
add
xchg
mov
iret
push
dec
add
cltd
pop
inc
jp
loope
clc
sbbl
xchg
mov
mov
or
adc
adcl
mov
and
sub
mov
pop
mov
pop
les
sarl
inc
div
cwtl
push
repz
neg
inc
adc
xor
cmp
std
sub
divl
adc
sbb
orl
das
cmp
punpckldq
mov
dec
out
incl
mov
adc
add
mov
dec
loop
sahf
sarl
fdivrp
mov
adc
xchg
push
jnp
clc
out
in
iret
jge
dec
add
pop
jns
outsb
mov
arpl
scas
inc
aaa
shll
ret
push
add
mov
pusha
mov
sbb
and
jl
es
inc
sbb
mov
xor
iret
adc
mov
into
es
lret
cld
xor
fsubrs
pop
sub
test
fldt
scas
mov
push
lods
stos
in
popf
cli
push
pop
sti
int3
ret
cmpsl
xchg
ljmp
pop
add
jbe
pop
jmp
mov
rcll
jg
pusha
pop
and
jl
mov
mov
incb
fcomps
or
mov
inc
cmpsl
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
das
sbb
stos
sarb
dec
jns
jle
pop
fisubl
sahf
xchg
push
xchg
pop
icebp
cmp
scas
cmp
mov
lea
add
in
jl
dec
adc
js
cmp
call
xor
sbb
out
pop
in
mov
mov
les
add
out
mov
mov
loope
out
sub
lock
xchg
aad
mov
sbb
push
cltd
adc
fnsetpm(287
sbb
jl
fadds
sar
xchg
adc
stos
xchg
aad
xchg
cli
cs
sub
inc
jbe
jp
sbb
lcall
in
insl
add
sbb
sbb
cmpb
or
push
pop
jo
cmp
inc
inc
xor
pop
and
sbb
mov
lahf
mov
sbb
mov
das
and
fs
ret
jne
popf
mov
or
mov
out
fbstp
xchg
inc
mov
addb
repz
sti
popf
icebp
mov
in
mov
mov
add
lds
sbb
mov
neg
out
xchg
cmpsb
enter
movsl
pushf
xor
into
test
movsl
mov
mov
cmc
pop
das
aaa
in
faddl
adc
and
pop
lahf
clc
repnz
xchg
jae
leave
ret
xchg
fidivl
daa
sahf
sarl
push
xchg
movsb
cmp
and
out
mov
push
rol
lcall
or
xchg
stc
jb
repnz
dec
leave
leave
cmc
les
xchg
aaa
fnstenv
dec
cli
imul
movsb
push
sub
sub
mov
and
sub
jg
lret
add
dec
cmpsb
xchg
iret
add
push
int
inc
out
or
mov
sahf
or
aad
pop
int
adc
xor
outsb
mov
fildl
loope
xchg
push
insl
pop
xchg
dec
scas
ss
dec
inc
cwtl
adc
xlat
ja
loope
in
and
icebp
push
dec
scas
fs
pop
adc
loop
ret
fisttps
idivl
add
outsl
mov
daa
repz
jmp
dec
or
add
sbb
pop
or
or
fdivp
into
xchg
sahf
sub
xlat
je
cmpsb
leave
sbb
test
mov
into
int
mov
xor
ret
push
je
je
xacquire
adc
enter
jne
xor
push
jne
xchg
xchg
push
push
pop
jle
negb
xchg
int3
push
dec
movsb
xchg
or
lds
dec
xchg
fldl
data16
aas
mov
sbb
bound
insb
sahf
sti
push
cmp
or
out
into
andl
nop
jno
pusha
addb
pop
mov
mov
movsl
xchg
inc
test
push
insl
stos
test
out
pusha
in
shrb
das
repz
inc
lods
push
cs
out
xchg
jg
pop
popf
mov
mov
aaa
lahf
add
jl
mov
mov
inc
popf
pop
fimuls
xchg
xchg
inc
mov
sbb
or
arpl
push
push
dec
mov
push
les
add
adc
pop
call
adc
dec
cld
aad
xchg
mov
jge
jno
iret
clc
arpl
stos
cmp
aaa
push
fstpt
arpl
pop
fs
sub
jl
jp
xchg
lea
leave
hlt
and
cwtl
movsl
adc
mov
inc
clc
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
fsubrs
jle
loope
jle
fwait
lods
out
jnp
imulb
mov
test
cwtl
ret
orl
push
aad
mov
mov
ja
and
or
add
sarl
les
xor
cmpsb
push
fwait
stc
int3
sbb
imul
mov
xchg
mov
and
dec
in
jecxz
add
lret
xchg
mov
or
inc
inc
xor
cmpsl
adc
jae
inc
push
outsb
inc
push
iret
cld
sbb
sar
ret
dec
repnz
icebp
pop
mov
pop
clc
adc
dec
fbld
into
hlt
ret
and
ds
or
push
add
cld
popa
lret
adc
loopne
movsl
mov
out
in
and
or
in
mov
cmp
pop
in
les
bound
pop
add
cpuid
stos
pushf
lock
add
outsb
jne
xor
pop
leave
sbb
icebp
fidivl
sub
sub
scas
xchg
cld
outsl
fsubr
jnp
cmpb
repnz
mov
add
mov
push
inc
pop
lock
mov
xor
cmp
dec
jb
pop
xor
xor
adc
sub
int3
jo
mov
cld
pop
out
popa
add
xor
add
inc
int3
aam
push
push
les
cmpb
sub
aad
sbb
test
leave
jecxz
jle
push
adc
in
sub
xor
lods
cmp
insb
pop
xchg
iret
or
pop
or
ret
in
inc
sbbl
pop
pop
scas
lock
scas
ret
sbb
adc
cli
mov
push
xor
repz
inc
ucomiss
pop
mov
add
add
test
dec
sarb
push
fwait
xor
or
and
push
stos
jle
jecxz
dec
ret
pop
mov
push
xlat
cmp
or
in
outsl
or
add
inc
mov
jo
cld
fsubrl
or
and
lock
cmc
inc
popa
pop
jo
adc
test
inc
push
jl
into
inc
pusha
imul
cmc
gs
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
xchg
enter
jle
js
jle
push
je
add
or
pop
insb
fmull
rorl
cmp
out
dec
popa
mov
and
mov
jae,pt
xchg
inc
ds
sub
push
in
mov
aad
mov
clc
sub
aam
dec
push
inc
dec
adc
push
mov
loopne
xchg
pop
cwtl
test
dec
jl
clc
mov
icebp
cmc
inc
cwtl
sbb
adc
shll
in
das
dec
inc
call
cmc
sbb
mov
fidivl
mov
cmp
rcrb
pop
das
mov
xor
lret
jne
je
cli
mov
imul
inc
pop
ja
dec
in
xor
les
icebp
sbb
repnz
and
xor
data16
cmp
lret
loope
insl
push
imulb
movsl
and
fst
push
push
cmc
cmp
jl
pop
cs
idivb
cmp
lahf
sbb
mull
imul
lds
dec
imul
cmp
mov
jne
mov
scas
data16
stc
push
enter
imul
jp
lds
inc
std
mov
lods
cmpsl
xchg
adc
sbb
movsl
fs
aas
and
insl
jl
xchg
mov
sbb
shl
std
push
mov
add
aad
and
arpl
ret
jb
xor
inc
rolb
jle
lcall
adc
mov
push
jb
adc
rep
iret
loope
sub
push
lds
xor
fisttpl
aas
cs
adc
inc
ds
cmp
shr
test
loopne
dec
or
cwtl
push
adc
loopne
xor
cmp
lcall
aam
movsl
bound
pop
jle
je
pop
xchg
cmp
and
into
dec
out
nop
inc
pop
dec
dec
cltd
inc
pop
mul
pop
mov
or
fisubs
ss
lcall
jns
aas
mov
imul
pop
sti
gs
loop
rcl
xchg
push
sub
add
loopne
mov
cmp
pop
sbb
dec
insb
dec
add
mov
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
sbbl
jle
aam
cmp
jg
repz
movsl
jb
push
cs
filds
jmp
out
pop
movsb
fbld
or
add
jb
pop
cmpsb
cwtl
inc
divl
int
pop
xor
mov
lods
mulb
cmp
js
inc
xchg
mov
cmp
scas
sub
in
add
mov
sub
outsl
adc
mov
pushf
jns
cmpl
push
stos
lods
shll
add
fistpll
fdivr
inc
sbb
repnz
imul
or
imul
sahf
xchg
jle
arpl
pop
addps
push
xlat
jo
out
movsl
mov
dec
lock
xor
push
scas
popa
std
xchg
and
mov
jne
ja
push
aaa
push
and
sub
jbe
ss
pop
and
adc
aas
sbb
mov
xor
push
jb
cld
ja
cmp
dec
jp
sahf
cmp
pop
push
stos
ret
enter
imul
push
imul
push
ret
jbe
movsb
in
push
push
sub
add
mov
add
push
shll
or
and
and
xchg
sub
cld
cmp
cmpsl
sbb
xor
xchg
pusha
push
pushf
add
shrl
icebp
jb
cmp
imul
nop
push
push
les
and
pop
add
xchg
cmp
sbbb
lcall
sbb
lds
outsl
mov
pop
lods
pop
sub
xchg
cli
cwtl
xchg
or
loope
push
dec
and
push
xchg
pop
fsubs
cmp
sbb
xchg
sub
xor
mov
jae
ret
test
mov
xlat
sub
adc
jl
stos
das
lcall
in
pop
push
pop
cmpsl
ss
inc
bound
add
fdivl
js
fildl
aam
sub
iret
inc
push
in
sub
pop
dec
sub
das
enter
dec
loop
repnz
or
add
in
mov
pop
negl
jbe
stos
inc
dec
aam
iret
add
es
dec
inc
add
sbb
or
jnp
lods
jge
imul
in
xor
xchg
mov
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
or
in
jle
js
jle
sbb
jg
cwtl
and
sub
int
or
fsubp
jnp
in
sbb
jno
push
stc
lahf
ss
mov
jne
out
subl
sbb
int3
push
jmp
or
fsubrp
or
sahf
dec
leave
push
rcr
adc
jb
outsl
cmp
mov
sahf
sub
leave
fcmovb
dec
push
loop
stos
bnd
pop
rorb
push
push
leave
mov
lcall
xchg
pop
fwait
pop
movsl
mov
inc
inc
loop
sahf
pop
inc
loop
push
xlat
push
aaa
or
shl
sub
pop
mov
outsl
jnp
sbb
addl
inc
nop
popa
or
adc
ret
mov
xlat
pop
scas
cmp
push
out
scas
mov
scas
adc
or
mov
enter
rorb
xchg
push
repz
inc
xor
imul
filds
mov
inc
popa
push
nop
jnp
test
push
sbb
mov
ja
fwait
idiv
add
int
push
xor
pop
call
outsb
mov
imul
xchg
out
push
add
adc
ret
bound
pop
sub
das
test
or
cmpsb
sub
and
mov
mov
sbb
inc
push
inc
imul
popa
cmp
push
sbb
and
je
push
sbb
pop
lods
ss
nop
pop
adc
rcll
cmpsl
cld
inc
dec
insl
iret
fwait
push
xchg
ds
adcl
xor
rolb
and
pop
imul
test
xchg
imul
repnz
divl
xchg
mov
xor
xchg
rcl
fs
jno
fisubl
movsl
and
mov
scas
pop
jecxz
test
cli
xor
or
mov
ficomps
sub
out
pop
push
and
mov
fsubs
jmp
clc
pop
sub
jne
int
inc
out
push
adc
cmp
lods
daa
cmp
mov
xchg
mov
in
orb
pop
xchg
loopne
sub
call
inc
fists
xchg
cmpsb
cwtl
lods
cmp
das
data16
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
shl
nop
arpl
insl
jnp
imul
nop
mov
inc
pop
arpl
jg
sbb
dec
cmpb
dec
mov
xchg
sub
iret
cmp
stos
and
jne
mov
xchg
or
mov
xor
or
cmpsl
sbb
cmp
or
jecxz
scas
xlat
jge
cmp
pop
repz
inc
pop
dec
lods
push
and
mov
sbb
push
jo
popa
xor
push
fwait
adc
adc
xchg
cmp
adc
int3
adc
arpl
xchg
subl
inc
jb
pop
and
sub
push
sbb
cld
test
adc
or
out
xchg
cmpsb
pop
rcrl
addr16
and
icebp
jae
std
dec
cmpsb
xorb
xor
movsl
int3
sbb
mov
rol
iret
mov
pop
repz
inc
xor
es
sub
jmp
fisttps
call
and
push
stos
inc
cmpl
cmp
es
iret
leave
fdivl
loope
push
js
mov
stos
dec
push
jmp
add
imul
mov
outsl
xor
push
and
inc
xchg
into
push
popa
adc
cmp
test
scas
loope
aaa
or
pusha
sbb
lock
insb
imul
in
js
inc
decl
jp
inc
pop
ss
adc
mov
outsl
jecxz
mov
pop
arpl
inc
jns
ds
cmp
leave
or
shll
sub
aad
pop
mov
mov
inc
hlt
pop
jmp
inc
fidivrl
rorl
lods
daa
sbb
in
jbe
fisttpll
mov
scas
outsl
movsl
fwait
inc
adc
je
push
adc
xor
fs
jmp
pusha
mov
pop
ss
notl
or
push
xchg
pop
mov
fistl
out
mov
lods
fimull
xchg
adc
popa
call
xchg
pop
repnz
mov
sbb
rcll
sahf
je
in
rorl
jp
shrb
stos
jbe
inc
mov
xlat
pop
loopne
push
lret
push
mov
je
sbb
les
lods
sbb
out
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
ss
rcrb
loop
jle
jns
jle
or
idivl
mov
inc
push
and
add
stc
sbb
or
mov
and
fisttpll
arpl
add
cmp
inc
pusha
into
push
xchg
mov
dec
ror
call
add
subl
aaa
in
dec
and
xchg
repnz
fcoml
insl
push
jp
hlt
pusha
cmpsl
aaa
fimull
scas
mov
jbe
push
cli
cmpsl
shrl
mov
test
fdivrs
jno
bound
call
shlb
arpl
es
sbb
aam
rorb
xor
push
test
mov
push
in
mov
ja
imul
shrl
xor
cmpsl
aad
dec
pop
mov
leave
into
in
fldenv
mov
inc
pop
adc
add
adc
mov
and
mov
ja
mov
add
mov
cmpl
pop
xchg
test
adc
rcrl
in
jne
mov
xlat
mov
scas
data16
adc
pop
in
arpl
jns
inc
inc
inc
mov
inc
popf
lahf
and
lock
mov
test
xchg
add
jl
test
adc
jp
cli
pop
push
leave
lods
mov
add
push
cmp
and
pop
adc
inc
lock
cmp
pushf
insl
mov
subl
push
arpl
outsl
mov
mov
fnstenv
shlb
cli
adc
xchg
inc
and
add
mov
xchg
leave
lret
ds
lods
push
lret
shrl
and
lds
xchg
jbe
leave
adc
push
rcll
cmpsb
ja
fdivrp
dec
adc
repz
pushf
jl
or
jae
pop
cmp
test
or
adc
xor
sub
in
icebp
sti
pop
mov
jo
mov
adc
incb
xor
in
ret
aam
jbe
iret
arpl
rep
xchg
roll
es
std
pop
cmp
dec
jno
mov
sub
mov
adc
jecxz
cltd
js
xorl
xchg
dec
jmp
or
in
aam
mov
sbb
or
scas
inc
adc
sub
lret
xlat
mov
push
aad
ds
out
daa
and
push
mov
pop
inc
fbld
mov
mov
mov
or
push
sub
dec
stos
loopne
aam
test
fisubl
xor
cli
dec
ljmp
add
sub
movsl
or
adc
mov
xlat
sbb
mov
mov
out
in
mov
xchg
jns
mov
aaa
pop
xor
push
or
mov
lds
je
imul
cld
or
repnz
mov
gs
bound
pop
and
or
imulb
sti
popf
imul
ror
mov
sub
sub
sbb
test
adc
fwait
scas
fmuls
dec
dec
xchg
inc
and
in
out
or
addr16
pop
dec
hlt
pop
pop
inc
and
cld
idivl
sbb
cld
call
aas
xor
das
das
inc
fists
cmp
cs
bound
das
arpl
data16
sub
stc
arpl
adc
push
dec
in
push
jns
cmp
dec
sbb
pusha
add
loope
xchg
sbb
push
mov
inc
push
insb
mov
push
cmpb
je
mov
leave
sbb
ret
shll
cmp
outsl
call
mov
ret
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
imul
xchg
out
jle
jo
jle
arpl
lcall
ja
xchg
outsb
insl
adc
insb
or
inc
iret
in
inc
test
ljmp
push
cmp
ljmp
insb
in
lods
fistpll
shlb
xchg
pop
mov
inc
rorb
popf
stos
push
cmp
add
jno
repnz
mov
xchg
mov
fsubs
fistpll
out
sahf
mov
fdivl
xchg
xchg
rcl
adc
sbb
and
wrmsr
test
sbb
inc
movsb
std
sahf
mov
mov
imull
dec
dec
jnp
pop
imul
bound
adc
cmp
sbb
mov
setno
jge
jae
inc
mov
enter
cmc
orl
xchg
push
ret
jae
pop
je
inc
or
mov
jmp
ja
roll
rol
push
pop
lahf
push
in
pop
and
std
lcall
jb
lahf
xor
sbb
mov
gs
inc
jnp
jne
sub
cmp
pushf
inc
or
test
mov
test
add
jmp
dec
jo
mov
outsl
rcll
out
test
inc
iret
das
test
fcoms
orb
xchg
xchg
sbbb
cmp
jecxz
fs
ja
int3
xchg
inc
pop
cmc
sub
sub
or
sub
dec
stos
divl
dec
les
ljmp
xchg
push
movsl
jp
jo
inc
mov
cmpsb
and
pop
loop
push
cmc
pop
cs
test
fdivs
arpl
adc
imul
into
jb
xchg
jno
cmp
ret
mov
stos
ja
mov
jno
imul
stos
push
arpl
inc
lods
inc
fbld
mov
fs
push
xchg
push
sbb
es
hlt
add
lcall
cmp
inc
lret
inc
xchg
pop
loope
mov
push
or
aas
fwait
xor
jns
out
inc
mov
xlat
fwait
push
idiv
adcb
aad
pop
dec
popa
inc
dec
xor
and
fs
jg
and
dec
xchg
scas
mov
sbb
xlat
ficoms
in
inc
mov
mov
xor
xor
sbb
idiv
and
daa
stos
adc
les
sbb
mov
test
fmull
iret
roll
cmpsb
adc
hlt
daa
out
stc
call
mov
adc
cmp
out
pushf
adc
dec
dec
lahf
in
ds
pop
mov
fxch
mov
je
fs
jl
aas
sub
push
dec
fsubrl
pop
xchg
ss
mov
icebp
int3
das
imul
pop
lock
daa
push
mov
aad
jne
stos
scas
mov
xor
sahf
add
jp
test
scas
pop
cmp
js
outsb
xlat
pop
ficomps
out
mov
lods
dec
xchg
scas
sti
push
call
pop
or
xlat
lcall
push
popa
insl
push
dec
inc
xchg
xorl
loop
rcrl
and
nop
flds
dec
jmp
adc
lcall
divb
mov
leave
push
cmp
mov
add
repnz
lret
cwtl
add
sbb
stos
lcall
test
adc
js
dec
pop
jecxz
cmpsl
pop
mov
sahf
inc
fwait
jp
and
mov
mov
push
mov
inc
aam
inc
sti
mov
mov
or
adc
hlt
lock
xchg
xchg
in
inc
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
popf
pop
and
ljmp
or
adc
repz
or
outsl
fwait
cmp
outsl
inc
or
scas
cltd
movsb
dec
imul
je
pop
gs
outsb
insb
outsl
mov
xor
jo
dec
out
shrd
das
pop
push
pop
add
mov
mov
mov
sub
testb
shr
aas
test
xchg
adc
test
movsb
mov
test
out
sbb
adc
fmuls
mov
ljmp
je
sti
in
jle
mov
scas
push
pop
add
xchg
pop
jmp
mov
add
adc
xor
lret
cmp
jno
lods
push
mov
xchg
sbb
xchg
cmpsl
add
dec
add
or
hlt
mov
cld
ja
mov
daa
insl
test
or
push
fnstcw
shl
test
adc
pop
xchg
aas
dec
pushf
cmpsb
test
dec
jnp,pn
pop
mov
xchg
aam
stos
test
push
loop
outsl
inc
clc
je
orl
push
iret
sub
adc
imul
fmul
adc
cltd
adc
in
imul
xlat
jnp
addr16
dec
popf
cmp
shrb
jno
cmp
lea
stos
movsb
push
testl
adc
jb
jo
pop
jg
sbb
sub
popa
fcompl
xchg
or
jecxz
xchg
sub
lea
pop
xchg
xchg
jp
and
mov
xchg
xlat
pop
rcrl
fldcw
insl
cld
mov
repz
pop
xchg
clc
xchg
in
outsb
mov
push
jo
cmp
mov
sbb
add
or
stc
push
stos
stc
inc
jns
fisubrl
outsb
dec
loop
scas
cltd
and
outsb
sbb
mov
jmp
lret
xchg
fnstenv
jo
pusha
dec
adc
fwait
dec
fisttpl
test
test
loopne
adc
push
pop
fisubs
dec
lahf
pop
xchg
xchg
adc
sti
rolb
mov
sub
iret
cmp
pop
cmp
out
mov
add
push
pop
mov
test
cs
nop
mov
adc
in
mov
outsl
arpl
rolb
push
adc
push
scas
xor
out
jg
jmp
xchg
mov
mov
inc
jns
out
test
adc
pusha
lret
fwait
xchg
adc
lods
inc
in
idivb
popa
pop
ret
clc
sbb
pop
pop
push
xlat
inc
sub
mov
adc
and
push
mov
rcll
sbb
popf
ljmp
add
mov
cmpsl
aaa
mov
movsb
xchg
int
ss
lahf
mov
popa
ret
jbe
lea
cmp
push
movsb
cwtl
test
out
mov
into
stc
pusha
cmpsb
lock
and
jne
xor
repnz
jg
loop
inc
pop
fs
push
xchg
xchg
and
lret
xchg
xor
and
mov
xchg
cmpsl
or
pusha
xor
add
cmp
imul
mov
fisttpll
rolb
das
je
xor
movsb
sbb
jg
lret
mov
push
sbb
inc
push
cmc
jnp
sbb
push
push
push
jl
movsb
pusha
fsubs
data16
imul
leave
jle
mov
push
insb
mov
cmp
add
inc
xor
mov
push
sbb
orl
sbb
sub
iret
inc
insb
xor
pop
icebp
js
jo
mov
and
adc
and
xor
cmpsl
mov
shrl
clc
push
or
mov
fstpt
mov
xchg
fists
and
insl
mov
rol
outsb
sub
test
push
pop
jg
sbb
pop
in
adc
xchg
sbb
cltd
pop
mov
cmp
jmp
popa
imul
cld
popf
popa
imul
push
fldcw
xor
addr16
jle
jns
jle
loopne
pop
lret
in
mov
jne
negl
and
pop
jae
loope
sbb
imul
dec
jge
ret
mov
fcoml
ficoms
adc
push
mov
sti
out
call
lahf
scas
ds
or
gs
pop
mov
pop
adc
out
inc
pop
jno
xchg
or
insb
pop
or
pop
push
in
mov
out
pushf
or
ret
mov
xor
jo
daa
js
mov
dec
loopne
add
shll
or
xchg
stos
leave
or
adc
xchg
std
daa
pop
lahf
pushf
outsl
fs
inc
cmp
mov
std
sbb
icebp
shrb
lret
shlb
pop
mov
ljmp
fs
out
pop
jp
imul
cmpsb
in
mov
sub
cs
loopne
push
and
add
shll
aam
fdivl
pop
add
xchg
loopne
fcmovbe
clc
int
std
mov
rcrl
jge
xlat
call
jl
or
xor
pop
xchg
mov
cwtl
sbb
push
insb
or
mov
sarb
sub
inc
jb
inc
inc
mov
loop
fldenv
lds
andb
popf
and
jmp
xchg
inc
and
data16
aad
imul
stos
and
in
arpl
sbb
mov
pop
paddusw
mov
adc
jp
lcall
xchg
pop
int3
mov
ret
out
sbb
add
dec
lods
jne
mov
pushf
cmp
jmp
xchg
mov
inc
shlb
xchg
push
stos
iret
out
call
add
ss
nop
add
mov
mov
flds
testb
aaa
adc
addr16
stos
icebp
loope
jmp
xchg
and
lea
cwtl
sbb
icebp
cwtl
test
mov
add
les
inc
jecxz
or
cmpsb
mov
pmulhuw
mov
sbb
push
cmpsl
nop
scas
repnz
emms
imul
or
sbb
das
push
sbb
call
push
test
daa
sbb
shrb
enter
or
es
cmp
fbld
mov
mov
cmp
jp
lods
sub
ljmp
xchg
mov
or
iret
cmp
aad
rep
je
sahf
push
test
cli
lret
xor
adc
mov
out
jmp
sbb
sbb
nop
icebp
or
pop
ja
cmp
insl
inc
mov
jg
sbb
push
push
aad
mov
shll
cwtl
je
inc
cmc
mov
inc
sub
add
bound
jmp
aam
std
add
cmp
inc
jns
sub
icebp
push
xchg
in
cwtl
mov
sub
cmp
lcall
cmp
pop
xor
orb
pop
mov
aad
inc
lock
or
adc
fsubrl
pop
movsl
test
insb
jecxz
jne
sbb
ret
xchg
xor
pop
pop
dec
jae
xor
sahf
lea
add
std
roll
stos
mov
mov
jl
push
pop
test
jle
das
mov
or
and
cltd
pusha
mov
pop
cmovl
pushf
les
fldl
jae
ljmp
push
push
fucompp
pop
fiaddl
leave
mov
cmpsb
es
cli
divl
andl
dec
shrb
cld
push
call
inc
inc
mov
out
inc
sub
dec
stc
aas
mov
fs
insl
aad
dec
insl
mov
cmp
rol
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
xchg
cmp
cli
bnd
jo
jle
push
mov
xchg
je
mov
xor
sarl
mov
jo
dec
adc
sbb
hlt
fwait
aaa
mov
dec
sbb
push
int3
lret
jle
or
in
sub
push
inc
and
cld
daa
fiaddl
pop
xlat
addr16
cmp
test
ficompl
cmp
add
cld
dec
cmpsl
jle
add
add
pop
cmp
dec
mov
pop
je
daa
jg
outsb
sti
xor
xchg
test
push
insb
mov
or
pop
ret
cli
jo
mov
pop
sbb
paddd
mov
xchg
pop
push
pusha
jns
mov
add
and
ss
pop
mov
dec
jno
in
mov
push
clc
movsl
ja
pop
out
cmp
out
fistl
or
lret
inc
xor
sbb
or
push
push
sarl
jno
dec
sbb
test
sbb
mov
popf
mov
repnz
fsubrs
pop
leave
inc
cmpsb
jns
jbe
into
aas
adc
add
hlt
xchg
inc
sub
xlat
out
ljmp
xchg
mov
jecxz
inc
cmp
dec
cltd
stos
lret
pop
push
xlat
imul
push
mov
cld
jae
jecxz
icebp
push
jmp
sbb
add
or
gs
insb
pop
sbb
jns
addr16
jo
in
cmp
or
pop
jo
lds
mov
add
mov
sub
es
xor
js
add
lods
add
leave
xchg
or
sarb
rcll
push
mov
push
inc
cltd
jecxz
and
aaa
iret
inc
push
repnz
inc
mov
rcl
push
sub
inc
into
test
dec
sti
bound
dec
xchg
rcl
call
loopne
iret
adc
jecxz
lret
jo
in
cmpsl
xchg
push
xchg
sti
mov
adc
sbbl
loope
mov
dec
clc
pop
lcall
xchg
or
mov
or
xlat
sti
or
shl
sbb
inc
insl
sahf
inc
or
roll
outsb
jecxz
jae
push
pusha
and
pop
push
rcr
out
lods
push
jmp
outsb
out
pop
sbbl
rcrb
pop
sarb
sub
mov
insb
lcall
inc
mov
sub
icebp
dec
dec
test
add
jle
push
lods
adc
clc
pop
add
adc
push
xor
dec
cmp
mov
cmp
push
mov
insb
mov
insl
xchg
and
imul
aas
and
push
mov
icebp
gs
dec
sub
addr16
pop
xlat
rolb
sub
inc
movsb
cltd
jl
sub
mov
mov
clc
pushf
sbb
stos
fiaddl
dec
loope
leave
jno
pop
inc
sub
into
pop
xor
dec
mov
mov
add
mov
leave
sbb
cmp
cwtl
add
cli
out
cli
in
fisubrs
dec
and
insl
test
es
cmc
aam
cltd
lds
dec
insb
mov
fwait
and
popf
add
mov
push
cli
add
lahf
fcomip
js
shl
jae
push
mov
in
inc
addr16
into
movsl
adc
int3
gs
in
jl
mov
je
ljmp
push
clc
jmp
sbb
jnp
rcrb
pop
das
cmp
push
pop
adc
add
mov
and
ljmp
mov
out
mov
inc
loop
subb
mov
cmp
push
sbb
enter
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
ds
push
jo
jle
adc
dec
hlt
mov
push
sti
insb
add
insl
xchg
jecxz
outsb
stos
fstl
sbb
mov
or
mov
ljmp
mov
pop
mov
jmp
xor
ds
push
sub
lahf
pop
inc
addr16
enter
or
stc
jno
sbb
lods
dec
jno
sbb
vmwrite
aam
subb
or
pusha
push
pop
cwtl
push
pushf
ret
nop/reserved
add
loop
ss
mov
pop
push
ret
mov
dec
rcrl
mov
dec
mov
testl
inc
pushf
cli
push
cmpsl
jl
rcr
inc
cmc
dec
aas
xchg
roll
pop
popa
out
ja
adc
cwtl
xchg
pop
or
imulb
push
sub
pushf
or
push
pop
aad
jb
xchg
cmp
cs
dec
cmp
xchg
xorb
aaa
and
stos
xchg
xchg
cmp
mov
je
rorb
das
das
test
cmp
xchg
jb
mov
add
sbb
jmp
es
in
xlat
pop
mov
div
repnz
mov
sahf
leave
and
jmp
and
test
add
mov
test
cmc
dec
std
roll
dec
mov
xchg
stos
insb
pop
add
sbb
push
sub
bound
mov
inc
leave
fisttpll
popa
sti
and
add
xchg
sbb
pushf
jne
mov
testb
mov
fwait
ret
data16
fs
xchg
in
jo
xor
inc
mov
mov
nop
stos
pop
fwait
pop
test
cwtl
out
aas
adc
dec
decl
aaa
fs
scas
in
repz
sub
jne
jmp
jno
test
frstor
push
push
mov
sub
inc
cwtl
xchg
ficoms
add
cmp
xchg
jle
xor
aaa
scas
push
arpl
mov
add
pushf
mov
sbb
jb
and
xlat
lret
dec
jmp
mov
cld
push
or
in
sub
cltd
fistl
jmp
sti
call
and
iret
pop
push
xchg
aam
out
shrb
cwtl
inc
cmc
cmp
sub
lcall
stos
ret
or
fmul
mov
jb
xor
cld
out
outsl
cli
xchg
hlt
enter
scas
sahf
jo
mull
clc
adc
jae,pn
push
dec
pop
icebp
dec
mov
mov
and
add
sub
in
mov
sub
push
aam
subl
stc
adc
jae
sahf
pushf
lods
xor
or
cld
jnp
pop
pop
mov
or
scas
pop
push
or
adc
pop
enter
pop
inc
xor
xlat
jecxz
clc
emms
inc
imul
sbb
add
push
leave
jecxz
add
lds
xor
stos
jno
push
or
add
sub
fwait
sbb
scas
rorb
mov
popf
cmp
pop
mov
inc
and
shrb
cwtl
arpl
add
ret
in
xchg
out
inc
cmp
sbb
sbb
mov
xchg
into
testb
cltd
pop
sbb
loope
mov
mov
cltd
mov
mov
mov
push
rcll
out
call
fldenv
aaa
out
mov
mov
insb
push
xchg
jnp
lock
insl
jo
stos
jb
sbb
xchg
fsubl
xor
xor
mov
sahf
sti
adc
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
adcb
cli
jle
jo
jle
pushf
sbb
mov
nop
add
div
les
jecxz
jae
inc
mov
inc
push
cwtl
je
cmp
sahf
movsl
fmulp
push
add
sbb
xchg
rcrl
add
lods
inc
std
dec
inc
ja
test
orb
sub
cld
mov
clc
inc
pop
in
mov
movsl
cmpsl
or
jecxz
mov
push
inc
dec
test
out
std
insb
cmp
mov
scas
push
addr16
test
pop
cmc
aaa
and
jns
push
mov
xor
xor
mov
lretw
or
sahf
inc
adc
dec
dec
mov
fsts
gs
jle
cmc
push
lret
into
in
imulb
mov
sarb
pushf
or
xchg
push
mov
hlt
sbb
or
sti
and
shll
mov
push
loop
test
push
lret
call
push
cwtl
pusha
clc
xor
push
insb
lea
int
pop
test
and
mov
aaa
lds
add
outsb
xchg
popa
rorl
and
in
fadd
insl
inc
push
lock
icebp
aam
xor
in
test
pusha
jo
loope
sbb
xchg
pop
add
mov
cli
rorl
test
cmp
andl
outsl
and
or
inc
int
xchg
mov
lods
stos
leave
adc
orl
pusha
jns
aam
sahf
and
mov
test
clc
and
mov
xchg
cs
ficompl
gs
lea
sarb
mov
fcomip
mov
cs
mov
mov
aaa
push
in
jb
shll
xchg
inc
aas
lods
ljmp
sub
repnz
out
add
add
adc
repnz
rcrl
dec
xchg
adc
pop
cmpsb
add
cmp
inc
inc
adcb
notb
sti
lods
and
pop
popf
shll
xor
je
jge
or
sbb
mov
xchg
test
adc
sub
ret
push
and
mov
jmp
inc
xchg
ja
call
ss
fucomi
jo
push
inc
sbb
cmpsl
insl
mov
and
xor
pop
and
push
jmp
mov
outsb
xchg
pop
xchg
jbe
cmp
insl
fldenv
jo
mov
push
push
es
int3
cmp
out
clc
xor
faddl
cltd
add
xor
je
icebp
daa
fisubs
iret
fmul
xchg
cltd
popf
frstor
insb
inc
cmp
jg
xchg
inc
pop
push
push
pushf
int3
adc
xchg
outsl
mov
pop
jno
xor
add
xorl
imull
pop
mov
mov
push
ds
out
push
call
push
jp
ljmp
hlt
test
mov
addr16
roll
pop
adc
scas
fildl
popl
sbb
sarb
in
cmc
xor
jle
jnp
jbe
sbb
cmp
mov
std
xchg
out
pop
or
outsl
sub
jle
lods
and
aas
adc
xor
not
jns
into
jns
pushw
rcr
sbb
lcall
out
mov
cmp
inc
hlt
inc
popf
fistps
insb
and
ret
cmp
call
movsl
mov
fisttpl
aas
test
fiaddl
aam
scas
fsubl
ret
add
cmp
pushf
inc
mov
inc
lcall
mov
lcall
inc
xchg
jne
adc
adc
mov
jle
in
dec
push
test
add
push
mov
int3
add
sarb
ret
inc
mov
jb
sbb
lret
push
xchg
xchg
sub
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
inc
cs
call
jns
jle
xchg
adc
or
and
jae
jp
lods
data16
push
test
mov
je
cmp
arpl
std
cs
out
sbb
stc
pop
jge
orb
andl
repz
ss
mov
pop
add
inc
into
adc
dec
bound
mov
faddp
ret
movsb
rcll
out
jge
fdivrl
add
or
mov
dec
aas
adc
aas
aaa
fnsave
mov
pop
dec
test
cmp
rcl
fildl
push
or
mov
popf
int3
push
jne
cmp
or
sbb
sahf
mov
testb
adc
enter
pop
pop
test
test
cmp
jb
pop
out
idivb
aas
cld
push
rcrb
push
pop
aam
jge
adc
lds
push
jne
jne
sbb
jmp
fisttps
in
dec
test
xchg
loope
js
mov
sbb
js
jmp
sbb
enter
xchg
jb
mov
cmpl
pop
or
add
loope
shl
aad
lock
lret
sbb
cmp
cmp
pop
xchg
sbb
lock
rcrb
test
pop
imul
cs
stc
out
or
cli
adc
std
inc
movsb
test
fldcw
test
xor
aam
jb
pop
add
adc
enter
ret
cmpb
mov
mov
jmp
popa
push
sti
mov
cmp
jne
fcompl
mov
and
lea
mov
push
mov
mov
and
adcl
rorl
or
jbe
out
scas
dec
jl
jl
jno
aas
mov
out
ret
sub
lds
imul
sbb
xor
loop
xchg
inc
pop
inc
jb
sub
les
fildl
in
in
mov
push
mov
aaa
mov
jnp
xchg
cs
push
enterw
push
imull
push
add
or
ja
pop
mov
adc
in
inc
test
and
out
mov
lods
push
fcmovb
cs
hlt
jno
jp
cld
movsb
cld
ret
xchg
movsb
mov
test
add
sub
add
add
dec
mov
jmp
fwait
test
test
jecxz
mov
inc
jae
sahf
pop
js
lea
mov
lcall
push
test
xchg
rorl
mov
fstps
push
dec
inc
icebp
repnz
jmp
aaa
push
lea
js
jbe
push
mov
mov
xchg
lret
xchg
pop
adc
pop
xor
xchg
leave
jno
pop
dec
nop
mov
jo
cmp
outsl
mov
add
pop
pop
fs
xchg
pop
and
ljmp
lret
int
stos
xlat
fiaddl
imul
sbb
mov
fcomp
xor
inc
jb
sbbl
jge
mov
or
mov
xor
ljmp
fs
xchg
fldcw
jp
xor
das
aaa
repnz
xor
lret
sar
jne
icebp
scas
dec
roll
add
mov
arpl
dec
sub
es
shrl
ret
fistpl
cmc
sbb
xor
inc
rcl
imul
sub
incl
and
mov
aad
rclb
mov
rorl
shlb
fcoms
movsl
inc
push
add
loopne
adc
sbb
ret
aam
pop
clc
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
cmp
cmpb
jns
jle
jne
or
ja
pop
xor
std
jno
inc
aam
jno
enter
mov
xor
insl
daa
repnz
sahf
sub
pop
pop
push
into
cmp
dec
xor
sub
xlat
int3
iret
mov
imul
lret
push
outsb
xchg
jmp
adc
mov
in
push
pop
fsqrt
in
lods
mov
jno
jnp
pop
hlt
insl
lock
adc
outsb
adc
sub
mov
fisttpll
outsl
add
add
cmp
push
loop
ss
int3
cmp
arpl
sub
push
les
inc
sbb
sub
add
pop
in
daa
mov
xchg
add
rorb
add
sub
jno
cmp
jb
in
pushf
enter
jmp
cmp
mov
addr16
in
dec
mov
mov
addb
cmpb
test
cmp
sub
outsl
or
inc
sbb
ss
pop
aaa
mov
clc
fnstsw
test
repnz
xchg
xor
movsl
xchg
jno
int
push
add
mov
test
mov
pop
shr
movl
icebp
add
dec
cld
je
inc
ficoml
inc
sbb
lods
ljmp
xlat
inc
adc
mov
call
popa
mov
test
adcb
loope
test
movb
push
ret
cmp
mov
popf
cmc
sub
iret
dec
repz
rcrb
inc
iret
andb
call
lock
js
fimuls
rol
addr16
fwait
xor
mov
incl
mov
xlat
repz
cmp
mov
arpl
sarl
and
add
aas
and
out
inc
out
lret
faddl
xorb
out
leave
iret
out
ret
push
push
in
enter
xchg
movsl
repnz
loope
inc
mov
cs
test
mov
cmpsb
cwtl
jbe
adc
xor
cs
xchg
ss
pushf
dec
push
les
in
pusha
xor
int
push
mov
stos
insl
mul
cmpsb
push
sub
imul
daa
in
fdiv
repz
cmp
xchg
push
pop
push
cmp
sbb
push
out
das
mov
leave
movsl
ret
push
pop
pop
add
outsb
test
testb
inc
adc
pop
inc
xchg
lret
xchg
pop
inc
imul
es
jmp
mov
mov
pop
or
inc
pop
das
fwait
mov
mov
shll
dec
aam
and
or
push
ret
sub
inc
mov
shr
clc
ficoms
movsl
push
insb
dec
aad
mov
cmp
pop
add
mov
stos
popf
out
scas
and
mov
xchg
xor
cld
cmp
sti
aam
mov
out
jecxz
lds
faddl
out
dec
mov
loopne
movsb
jge
orl
add
push
mov
fwait
and
lods
adc
jl
jp
mov
in
push
inc
movl
cli
jne
cmp
push
mov
xchg
adc
xchg
das
pop
jecxz
inc
dec
repz
imul
push
scas
cmpb
adcb
aam
mov
dec
jnp
inc
in
decl
loopne
shll
mov
dec
push
fistl
xor
cld
or
cltd
std
insb
mov
mov
mov
or
and
xchg
xchg
jbe
sbb
xor
pop
lock
sub
out
sub
lret
and
sbbb
clc
lods
mov
call
mov
leave
jecxz
xchg
or
pop
hlt
loopne
popf
stos
aas
std
add
push
mov
adc
fistpll
fimull
add
add
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
imul
jo
jle
repz
push
inc
into
mov
sub
push
stc
rclb
subb
inc
sub
repnz
or
jecxz
into
push
nop
out
data16
mov
movsl
push
push
or
jb
and
out
cmc
pop
cmp
xor
sub
mov
jle
out
xchg
jecxz
ficoms
mov
or
scas
arpl
lods
jle
test
mov
xchg
mov
imul
loop
mov
enter
xchg
mov
mov
gs
inc
jle
lahf
imul
test
xor
mov
adc
inc
sub
xchg
xor
test
jp
jg
or
popa
mov
jo
mov
je
sub
stc
pop
je
lods
push
cltd
out
pop
mov
pusha
mov
imul
and
dec
sub
setnp
dec
mov
pop
call
push
mov
imul
add
fwait
in
push
imul
fwait
dec
in
js
scas
adc
gs
js
and
sahf
popw
in
daa
rclb
into
push
cmc
test
xchg
inc
in
ja
iret
fs
cmp
rcr
jno
rol
ja
dec
inc
and
pop
ret
xor
in
dec
mov
adc
xchg
sbb
out
push
sub
dec
mov
mov
aaa
aam
sub
mov
into
push
and
mov
push
repz
pop
cmpsb
mov
add
fucomip
adc
mov
ficomps
jne
jo
loopne
ss
in
mov
std
movsl
lods
dec
push
sar
push
xlat
inc
xchg
test
sbb
and
mov
dec
mov
adc
icebp
mov
inc
pop
jmp
bound
or
call
data16
shrl
dec
push
int3
lods
and
and
mov
add
das
jg
lock
fcom
mov
arpl
mov
xor
sbb
xchg
scas
add
inc
iret
adcl
sub
je
cli
and
stos
and
movsb
add
jl
xlat
mov
mov
call
push
jecxz
insl
pop
adc
test
je
lods
in
add
jae
mov
add
pop
popa
mov
ret
jo
xchg
mov
mov
cmp
jge
loopne
and
push
and
inc
sti
adc
jno
push
xchg
add
arpl
jb
mov
pop
dec
mov
add
sbb
fistpl
pop
cmp
jno
shrb
addl
push
xchg
cld
jecxz
int3
sbb
insl
jp
pop
push
and
outsl
cltd
cli
push
push
in
inc
xlat
ficompl
xchg
das
pop
sbb
pop
sub
rorb
in
jle
pop
sub
pop
inc
cwtl
push
xlat
xchg
jae
push
xchg
pop
andl
jae
lods
outsb
lods
push
mov
mov
sbb
sub
mull
in
xor
fwait
xchg
xlat
ja
sti
shlb
fs
jmp
std
pop
dec
dec
insl
jge
and
cmpsl
addr16
jp
imul
sbb
imul
xlat
call
mov
sbb
lods
push
push
repz
cwtl
lods
push
add
sub
scas
cmp
push
xor
stos
xchg
mov
ficoml
or
mov
mov
incl
stc
sub
inc
cld
aad
or
in
flds
cmpb
mov
mov
push
xchg
popf
add
sahf
sub
std
sub
lahf
je
xchg
mov
aas
pop
repz
cld
in
push
into
fdivl
imul
cmpsl
jp
pop
jmp
jp
xlat
push
sbb
add
add
jmp
cmp
dec
mov
shrb
sbb
jle
jns
jle
mov
push
aam
pop
push
xchg
pop
xchg
scas
clc
addr16
dec
dec
adc
sbb
neg
add
icebp
rcrl
stos
fs
jle
mov
pop
cmp
jle
enter
std
sbb
sbb
jo
inc
daa
dec
ljmp
dec
shr
push
jecxz
fcompl
fldt
aas
mov
in
xchg
cmc
pop
outsb
mov
lret
push
inc
xor
scas
sbb
mov
dec
movsb
push
xor
mov
mov
frstor
dec
out
inc
mov
test
sti
pop
test
pop
push
fucomi
or
sbb
shl
mov
and
ja
push
ss
jae
das
aas
stc
cmpsl
je
cmp
cltd
xchg
jl
sub
push
lds
popa
lahf
jecxz
xor
loopne
les
push
je
shll
push
cmp
push
mov
sbb
popa
mov
xor
std
lcall
xchg
cmpsl
fwait
push
push
cmp
mov
ja
mov
stc
jmp
rcrb
cmp
push
in
push
sbb
dec
push
xchg
cmp
divb
dec
jecxz
iret
jge
lods
lea
fdivr
add
movsb
inc
shll
or
mov
cltd
jcxz
cmp
arpl
and
add
sbb
push
cmc
insb
shr
inc
cltd
dec
mov
gs
mov
sbb
cmp
cltd
ret
pusha
mov
cmp
jp
sti
xor
jne
add
stos
push
jecxz
mov
add
inc
sbb
jp
sub
jg
jne
jns
jb
aas
push
dec
movsl
jne
rorl
js
shll
mov
imul
mov
fadds
cmpsb
jge
and
cmp
ret
fs
aas
fisttpll
test
jne
icebp
push
or
fmull
pushw
mov
cmp
out
lret
add
inc
push
pushf
xchg
stos
xchg
leave
push
mov
data16
mov
daa
std
jle
icebp
add
cmp
dec
loopne
adc
rcrb
imul
aaa
adc
ljmp
cmp
shll
dec
fisubs
and
insl
push
rclb
test
in
andl
push
mov
fadd
add
icebp
pushf
roll
test
rorl
aas
cmp
and
sbb
rorl
mov
xor
ljmp
test
jns
popa
sub
call
cmpsl
sub
lret
insl
pop
jae
loop
dec
ret
scas
sti
aam
into
add
adc
mov
movsb
sub
cmp
les
mov
data16
aad
lcall
push
lcall
jp
or
jae
push
mov
jns
add
subl
mov
bound
insb
cmp
cmpb
adc
inc
dec
lahf
mov
rcll
add
lcall
cmpsb
push
mov
jp
push
cmp
jnp
dec
jecxz
dec
sbb
in
pop
mov
ljmp
mov
movsl
mov
das
jmp
scas
adc
fcomp
aaa
rorl
push
cmpl
incb
lret
pushf
cmpsl
push
fwait
adc
sbb
pop
xor
shl
push
jbe
mov
mov
add
jns
or
xchg
add
aaa
dec
dec
enter
push
shl
dec
add
push
jbe
push
add
call
popf
pop
loopne
roll
or
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
mov
xchg
jle
jo
jle
pop
jbe
int
mov
mov
mov
clc
inc
adc
mov
jle
push
sbb
icebp
repnz
or
and
mov
sti
sbb
insb
les
ret
jg
popa
pop
jae
aam
push
repz
insl
mov
popa
enter
xchg
cmc
adc
add
mov
sub
stc
mov
out
dec
loopne
leave
xor
push
inc
adc
fidivs
shll
mov
push
or
jae
shll
mov
int3
mov
rcrb
pop
jns
xchg
das
xor
ds
sbb
push
or
insl
ret
or
sbbb
fists
sub
ljmp
das
xor
pusha
mov
mov
adc
inc
mov
js
clc
stos
push
fcomps
out
cmpb
jg
loopne
outsb
sbb
inc
cld
sub
inc
push
arpl
cli
pop
push
cmp
mov
addl
and
lahf
mov
xchg
xchg
pop
or
xchg
lcall
inc
std
cmp
daa
dec
adc
aad
pop
mov
imul
push
push
cmp
mov
lcall
into
icebp
orl
dec
mov
test
scas
int
or
fsubrl
dec
in
mov
cmp
dec
dec
data16
movnti
cmp
adc
mov
mov
add
mov
mov
jl
das
inc
loope
xchg
mov
fidivrs
int
xchg
lods
sub
in
cmp
add
iret
imul
adc
repz
mov
in
cmp
movsb
or
ret
fwait
push
jne
shlb
pop
gs
scas
jbe
aam
lret
push
xor
nop
inc
and
xchg
pop
push
repnz
insl
stc
arpl
xchg
enter
enter
sub
fsub
imul
popa
lock
jno
leave
sbb
mov
fstps
aas
pop
cmp
dec
jae
and
sub
sbb
jecxz
test
pop
mov
sub
adc
or
cli
mov
pop
pop
shlb
xchg
pop
pop
and
pop
scas
jge
inc
or
pop
imul
leave
test
imul
inc
sub
xchg
inc
lods
mov
mov
aad
les
mov
movsl
cwtl
dec
outsl
mov
out
out
inc
loopne
mov
es
int
bound
add
dec
lock
fstpt
pop
sub
mov
sub
ljmp
pop
in
pop
data16
hlt
out
mov
int
fimull
add
and
loope
push
loopne
dec
cmp
faddl
aaa
iret
insb
mov
fldcw
mull
dec
imul
std
frndint
dec
xor
pop
pop
jmp
int3
mov
dec
push
pop
sub
mov
cld
je
mov
loopne
xorb
pop
jnp
sub
sub
dec
pop
xor
jne
and
xchg
cld
into
and
fstpt
pusha
xor
iret
ss
lds
int3
pop
out
adc
mov
sarb
sar
push
mov
int
adc
mov
pop
ja
loope
gs
out
adc
or
in
lret
orl
stos
pop
and
mov
dec
jecxz
inc
sub
cld
sbb
add
push
add
inc
lcall
pop
xchg
pop
out
cltd
sub
shll
imul
xlat
cli
std
push
xor
pop
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
lsl
jle
jo
jle
fchs
jecxz
addr16
lds
lcall
push
pushf
in
dec
outsb
fistpl
cmp
fidivrs
jns
shlb
fbld
xchg
inc
mov
pusha
mov
jno
flds
adc
inc
sbb
cmp
divl
xor
outsb
adc
outsl
cmp
add
shl
testl
ret
or
add
mov
js
bound
cli
dec
push
hlt
test
add
ds
dec
ds
notb
das
adc
sbb
mov
xchg
in
xchg
pop
dec
mov
ds
mov
cmp
xor
jno
popa
dec
push
sub
enter
cmp
mov
jecxz
fs
bound
stos
loop
sbb
jg
mov
xor
push
fs
cmp
outsl
pop
shlb
out
mov
sub
xor
ds
jmp
push
into
or
fmulp
pop
outsb
jnp
icebp
fcomp
les
aad
inc
fimull
das
fs
or
and
outsl
inc
movsl
dec
outsb
adc
sbb
sub
loope
mov
inc
cmp
adc
jmp
iret
shll
fld
xchg
cmp
pop
xchg
adc
out
mov
adc
stos
jo
ljmp
test
dec
sbb
lods
mov
push
sub
xchg
mov
shrb
adc
push
sub
insb
xchg
out
test
lea
or
and
popf
push
mov
adcl
jl
jae
jo
inc
adc
cmp
std
pop
push
add
popf
adc
lods
lret
jae
sarb
push
ret
lcall
icebp
dec
xchg
rdtsc
clc
adc
xchg
pop
repz
arpl
jg
xchg
pop
loopne
loope
lea
popa
and
pop
push
repnz
arpl
pop
jnp
popf
pop
sub
push
mov
lcall
sbb
les
push
xor
and
cmp
add
cmpsb
in
mov
mov
lds
mov
fwait
sub
stos
dec
lret
mov
and
scas
inc
mov
pop
xor
add
outsl
in
cmpsb
lahf
fcomps
lahf
sti
mov
and
cmp
mov
adc
lret
dec
mov
jle
mov
or
scas
cmpsb
push
out
push
faddl
cmp
fnstcw
out
push
mov
arpl
dec
jae
icebp
loop
xchg
sub
addr16
fisubrs
inc
arpl
les
sbb
andb
daa
mov
shrl
insb
sub
mov
ret
daa
xor
push
jb
and
sti
cmpsb
mov
push
int3
stos
int
fdivl
ret
fs
movsl
mov
loopne
cs
nop
push
addr16
int
lods
insl
mov
mov
insl
jl
sub
cmp
push
data16
push
jp
xor
add
jo
cmp
sbb
ret
mov
int3
test
xor
inc
push
inc
adc
push
jl
sub
xchg
jp
fstpl
sbb
jge
dec
pop
jge
ljmp
push
pop
es
pushf
popf
mov
inc
xchg
sub
outsl
add
rcl
ret
xchg
lods
sub
hlt
jp
xor
xor
ds
out
and
pop
cmp
int3
mov
cmp
pop
cmp
out
ljmp
push
jle,pt
xchg
aas
pop
jmp
adc
lods
cmc
or
ja
scas
mov
cli
hlt
adc
xchg
pop
cltd
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
jne
jmp
jle
jns
jle
fld
rcll
jecxz
in
xchg
xlat
xchg
cmp
sbb
lahf
fidivrl
aam
fnsave
push
adc
jge
and
outsl
xchg
mov
inc
adc
sahf
test
js
mov
nop
or
xor
popf
loopne
out
pop
mov
cld
aas
test
jns
mov
inc
rclb
out
loopne
testb
mov
mov
bnd
stos
ret
pop
adc
adc
cmp
jl
out
mov
clc
popa
loope
mov
mov
and
movsb
mov
ror
stos
pusha
and
cmp
dec
adcl
dec
out
outsl
insl
mov
xchg
insl
add
sub
cmp
jecxz
fmuls
add
jle
in
neg
int
lods
xchg
hlt
scas
jg
aad
lret
icebp
cmp
jne
out
mov
mov
stos
xorb
out
inc
jnp
movsb
je
push
inc
dec
mov
test
or
sub
pop
pop
jp
dec
cli
filds
lret
rcr
jae
int3
in
lds
mov
call
pop
lods
call
mov
mov
pop
cli
jae
out
dec
testb
push
inc
or
jl
mov
dec
xrelease
mov
sub
popf
mov
lock
fs
out
xchg
in
jmp
fisubl
lea
adc
sbb
and
sub
iret
mov
icebp
imulb
mov
dec
movsb
fld
dec
fidivrl
leave
pop
sbb
mov
addr16
sti
xchg
inc
push
cmp
stc
push
ja
scas
pushf
ljmp
arpl
jmp
icebp
or
cmp
pop
inc
sbb
filds
push
stos
shrl
inc
dec
mov
inc
xor
mov
adc
jne,pt
xchg
cs
icebp
out
cmp
frstor
cmpsl
cmc
outsb
mov
sti
mov
adc
mov
or
orl
roll
fmulp
fwait
mov
dec
rorl
cmp
popa
ds
outsb
popf
mov
stos
pop
jmp
cmp
out
addb
pop
xchg
lds
es
mov
repz
and
int3
cmp
adc
mov
sub
aad
adc
sbb
imul
xchg
jo
mov
in
or
sub
dec
clc
pop
sbb
scas
mov
bound
mov
out
jae
pusha
dec
and
mov
mov
pop
mov
dec
fnstenv
subb
jle
vzeroall
push
pop
dec
mov
sub
xor
andl
xor
xor
mulb
sub
sbb
lds
push
fs
and
cmpsb
fucomp
loop
subl
and
out
rcrb
int
std
adc
lahf
mov
or
ret
dec
insb
mov
sbb
jmp
out
push
cmp
xchg
or
sub
jmp
mov
mov
aam
and
xchg
adc
stc
mov
push
dec
rolb
ds
ficoms
xchg
inc
std
xchg
mov
stos
xchg
mov
dec
in
pushl
sti
aam
cmp
xor
mov
clc
sub
pop
test
inc
push
push
not
dec
push
mov
or
orl
adc
jb
ret
jp
out
rolb
out
insl
daa
lcall
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
fcmovbe
test
jle
jo
jle
jno
pop
ds
sahf
inc
mov
incb
orb
dec
jo
mov
cld
mov
pushf
ss
inc
daa
aam
je
cli
pop
mov
jl
mulb
mov
mov
mov
mov
mov
inc
cli
stos
fbld
xchg
cmp
lret
push
test
mov
jne
inc
inc
sbb
test
test
dec
mov
daa
inc
hlt
daa
add
insl
pop
leave
movsb
cmp
popf
outsb
or
jae
testl
jnp
orl
cmp
dec
pop
dec
aad
jmp
pop
or
lds
or
pop
pop
mov
dec
call
repz
mov
push
xchg
out
iret
sbb
scas
arpl
sysret
dec
adc
dec
adc
jbe
dec
mov
icebp
int3
cmp
push
xor
cmp
rorl
mov
pop
faddl
out
push
loope
out
add
push
jg
sub
mov
jle
loopne
enter
mov
inc
icebp
inc
vunpckhpd
scas
adc
push
dec
xor
imul
loop
call
xchg
movsl
sahf
cmp
cmp
in
push
xchg
lods
pop
scas
mov
rolb
cmpsl
orb
cwtl
or
test
pop
cwtl
mov
cmovl
loope
xor
sbb
rclb
in
xchg
iret
inc
lcall
xorl
add
xchg
jp
pop
xchg
add
lock
out
xchg
int3
xchg
sub
out
adc
mov
cmpsl
jnp
daa
rol
adc
fnclex
in
test
iret
stos
fisubrl
jl
stc
or
jbe
mov
dec
call
iret
cwtl
sbb
push
out
mov
add
ljmp
shlb
movsl
test
fldenv
sahf
adc
fs
cmp
xlat
pop
jno
mov
aam
mov
xchg
cmp
sar
rorb
push
sub
mov
mov
aas
jle
clc
adc
pop
push
sbb
pushl
out
in
sub
sbb
inc
in
cmp
popa
icebp
pop
xor
lock
popa
push
stc
inc
mov
clc
push
mov
add
mov
mov
push
dec
hlt
push
lret
and
cmp
inc
mov
leave
mov
js
or
clc
lret
jmp
cli
mov
mov
cmp
push
dec
lods
test
mov
sahf
mov
das
mov
cli
movsl
sahf
sti
xchg
sub
mov
and
or
add
xchg
icebp
push
and
shll
jnp
mov
dec
int3
fcomps
inc
adc
push
jnp
adc
add
or
sbb
or
shlb
adc
mov
push
out
mov
sti
mov
cmpsl
adc
fcmovnb
imul
mov
dec
fbstp
movsl
add
test
inc
pop
dec
mov
test
mov
leave
jp
dec
inc
push
and
enter
repnz
mov
pusha
xchg
mov
sub
pop
imul
sub
lds
ss
nop
icebp
sahf
dec
pop
int3
cmpsl
sbb
idivb
jae
mov
mov
lret
push
xchg
adc
lcall
xor
insb
inc
push
sbb
cmp
push
push
xchg
push
cmp
push
in
sub
inc
test
daa
sbb
mov
adc
cmpsl
imul
insl
in
mov
push
add
sbb
rol
push
into
pop
inc
test
fsubrl
nop
ficompl
icebp
jne
jbe
mov
mov
or
js
dec
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
cmp
jo
jle
dec
iret
or
jg
out
push
add
call
xlat
mov
adc
or
pop
add
push
testl
mov
icebp
into
int
jle
xchg
or
in
enter
ss
scas
outsb
icebp
int
outsb
pop
int
mov
mov
sahf
test
insl
jg
repnz
sahf
mov
adc
cmpsl
mov
add
lret
inc
in
mov
push
sub
cmp
shrl
dec
test
jle
test
inc
jo
test
lcall
mov
push
mov
into
xchg
scas
das
shll
cmpsb
add
cs
push
call
jge
pop
cltd
scas
and
out
dec
cmpsb
xchg
xchg
test
xor
rorl
pop
xor
xor
xor
adc
push
aam
pop
mov
outsl
xchg
stos
jb
mov
pop
mov
sti
daa
movsl
adc
out
scas
scas
incb
jno
add
shlb
mov
xchg
xor
lret
lret
les
and
ja
push
push
ret
lds
sahf
push
push
fisttps
or
mov
sahf
mov
mov
pop
pop
xchg
lret
and
mov
jecxz
stos
data16
in
dec
jmp
push
pop
jnp
xlat
bound
not
mov
cmp
push
das
stc
jbe
mov
and
ja
pop
dec
sbb
fimull
xor
mov
arpl
jp
jle
mov
jecxz
repnz
inc
sbb
cmp
pop
dec
lods
in
mov
rol
push
mov
pop
push
cs
dec
pushf
inc
inc
cmp
add
subl
jns
mov
insb
and
jae
aam
sahf
repnz
sbb
mov
adcb
push
xchg
adc
cmp
cmp
xchg
loope
enter
add
mov
imul
fnsave
das
dec
push
xchg
testb
loop
out
cmp
mov
adc
lret
in
ret
lcall
lret
add
xchg
lcall
rorl
dec
cmpl
cmp
inc
pop
inc
jle
push
divb
sahf
popf
xor
xchg
popf
cmpsl
fcoml
aam
ds
lcall
push
out
pop
mov
sub
sbb
adc
stos
mov
mov
and
pop
repz
cmp
push
movsl
pop
add
xlat
cmp
inc
lcall
dec
push
aaa
jp
or
scas
into
pop
add
adc
or
test
xor
fdecstp
ret
add
and
add
pop
in
xchg
in
and
jne
add
or
mov
loopne
repz
movsb
and
xchg
pushf
mov
cmp
adc
xor
cwtl
cli
enter
cmp
pushf
and
or
test
push
sbb
ret
out
pop
sbb
mov
push
lea
sbb
in
mov
add
lds
pop
sbb
test
stc
mov
std
xchg
cmp
adc
fucomi
mov
xor
mul
xchg
or
fcomi
adc
xchg
pop
and
call
mov
push
orb
mov
and
cwtl
shll
mov
testl
cmp
stos
mov
xor
in
and
out
push
adc
or
cmp
call
clc
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
mov
jle
jo
jle
pop
popa
lret
arpl
cmp
cld
pop
inc
clc
dec
idivb
rorb
inc
inc
push
data16
dec
cmp
pop
add
mov
jge
ljmp
cwtl
add
int3
push
enter
mov
mov
jg
ljmp
outsl
xor
popa
stos
mov
leave
lcall
fidivrl
pop
mov
mov
xor
in
mov
xchg
and
cli
add
fidivl
cmpsl
dec
cmpsl
or
sbb
int
divl
je
add
jge
test
mov
les
into
adc
movsl
fidivrs
dec
out
push
ds
push
shll
das
push
outsl
int3
pop
mov
aad
lods
dec
bound
ljmp
sub
or
xchg
push
pop
mov
pop
cmp
lods
jo
jb
mov
xorps
adc
adc
iret
push
outsb
xchg
push
xchg
ret
fwait
movsb
out
sbb
je
pop
or
mov
fwait
repnz
mov
mov
jp
adcl
pusha
mov
pop
jb
jae
xchg
sub
sub
mov
push
loope
mov
or
cmpsl
mov
in
and
jle
mov
incl
jecxz
xor
mov
orl
or
mov
out
movsb
push
fcoms
inc
mov
test
testl
xor
pop
dec
pop
mov
xlat
clc
pop
cmp
jae
lcall
xor
je
inc
sarl
mov
ret
cwtl
xor
add
jo
jmp
sub
jp
fsts
lods
xchg
iret
pop
mov
fucomp
jnp
or
cli
sub
mov
xchg
cmp
sti
xchg
loope
pop
loope
sub
call
mov
mov
cmpsb
out
add
je
iret
int
mov
mov
leave
arpl
enter
call
sbb
jl
jmp
lock
orl
xorl
xchg
js
inc
repz
push
notb
lcall
cmp
ficoml
jbe
pop
aad
adcb
push
pop
pop
xchg
sub
push
pop
fistpll
pop
xor
push
test
bound
lahf
cmp
dec
test
test
sti
test
arpl
je
movsl
shlb
xchg
test
inc
call
mov
mov
fwait
scas
mov
push
ficompl
pushf
cmp
mov
cmp
repz
pop
lea
rol
mov
push
jb
push
icebp
xchg
cmp
mov
mov
mov
inc
test
movsb
mov
cs
lret
add
cmp
cmp
inc
lret
ret
dec
scas
nop
sub
mov
sti
jnp
cmp
nop
and
lds
mov
lret
cli
push
jns
ret
mov
add
xchg
push
jp
test
or
jg
insb
daa
mov
add
mov
mov
push
fists
lret
xchg
loope
xchg
sub
fisubrl
imul
fldcw
inc
pushf
sub
jne
insb
lods
in
jmp
test
and
add
nop
dec
fisttpll
insl
sbb
or
add
cmc
pop
xchg
orl
sbbl
sub
jp
xor
aas
scas
les
dec
mov
push
mov
or
add
popf
mov
push
clc
mov
xor
mov
jmp
sahf
lcall
adc
and
mov
scas
jle
jo
jle
adc
sarb
ret
push
adc
out
ja
add
pop
or
int
jnp
mov
add
add
dec
push
ds
mov
mov
xor
movsl
jns
pop
insl
cs
dec
pop
jp
cmp
cli
enter
addl
push
add
pop
jne
add
and
or
mov
jb
xchg
xchg
in
bsr
cmp
idivb
push
sahf
in
ret
mov
into
pop
pop
cwtl
xchg
lds
scas
in
popa
inc
fsub
int
dec
fwait
loope
in
es
and
punpckhdq
cld
test
adc
mov
jo
loop
mov
bound
dec
add
xor
cmpsb
mov
gs
push
mov
mov
stos
in
inc
lds
cmp
aaa
xor
aaa
mov
mov
jno
add
mov
mov
pmaddwd
sub
roll
fmull
mov
sub
mov
or
cmc
inc
add
xchg
push
push
ja
aas
dec
sub
or
pop
icebp
negl
cmp
fwait
ss
cli
dec
inc
pop
daa
insb
jmp
inc
push
and
jge
jmp
fldenv
scas
push
xor
out
dec
push
lret
popl
loopne
arpl
cmpb
into
xchg
sar
mov
sti
inc
dec
gs
dec
into
aas
scas
rorb
mov
push
in
mov
push
dec
imul
cs
add
inc
sbb
mov
sub
int3
push
mov
ror
xchg
lods
lods
je
fisubs
inc
fmull
inc
ret
daa
dec
leave
hlt
xor
jno
sbb
add
into
inc
arpl
sub
xchg
mov
pop
or
cmpsl
push
lock
hlt
push
out
inc
icebp
xchg
sub
mov
into
and
shrl
arpl
sbbl
test
push
jns
in
inc
js
gs
or
adc
mov
xorb
cli
imul
xchg
fwait
cmp
inc
sbb
sub
jo
loopne
push
xchg
lret
mov
add
subb
int
int
xor
cli
cltd
insb
inc
inc
mov
lods
in
inc
lock
repz
lret
adc
divb
xchg
repz
pop
jg
sub
jnp
imul
int
gs
fimull
fnstsw
dec
les
lret
hlt
loopne
mov
lret
mov
out
or
adc
xchg
std
in
ja
xchg
scas
idiv
mov
je
dec
mov
push
imul
jo
mov
cmp
stos
cmpsl
dec
cli
mov
gs
lods
mov
push
fstpt
test
cmpsb
int3
dec
in
cld
aaa
jle
in
cmp
adc
adc
xor
cmp
iret
call
pop
adc
and
xorb
je
lods
scas
or
lret
sub
jns
out
sbb
pushf
add
inc
sbb
ss
pop
adc
movsb
mov
push
sub
jb
sub
out
rol
xchg
lods
pusha
mov
xor
rorb
stos
xchg
in
jge
xchg
and
enter
jns
dec
sbb
loop
popf
loop
inc
call
pop
insl
stos
stos
or
add
add
gs
mov
mov
pop
cmp
sub
pop
rcrb
mov
lcall
push
aaa
mov
shl
jmp
sbb
jne
pop
xchg
push
cli
adc
leave
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
jge
out
cs
jle
jo
jle
sbbl
xchg
inc
pop
pusha
mov
xchg
jecxz
test
inc
mov
movsl
aad
mov
mov
jle
daa
pusha
aaa
les
xchg
mov
lea
mov
stc
xchg
push
or
mov
lea
pop
dec
ss
repz
cmp
add
xor
popf
stc
stos
cmp
xorl
hlt
call
movsb
movsl
aam
les
fmulp
in
dec
xor
xchg
xor
insb
daa
popf
xchg
mov
stos
add
xor
sbb
jbe
fildl
into
push
arpl
arpl
mov
push
or
js
insb
popa
jbe
shll
xor
out
pop
out
add
cmp
lea
cmpsb
cmp
arpl
mov
mov
jl
sbb
loop
into
mov
lret
pop
push
jne
out
sub
sub
inc
push
cmpsb
inc
cmp
repz
push
scas
pusha
in
out
movsb
es
in
ds
adc
rorl
aas
out
pop
push
or
test
jne
dec
jae
dec
shll
ss
loope
xchg
mov
pop
xchg
or
repz
and
dec
jns
shl
jae
xor
aad
pusha
imul
xchg
mov
inc
loopne
dec
outsb
push
inc
mov
inc
cmp
lock
xchg
out
jle
popa
cwtl
aas
mov
dec
adc
stos
mov
movsl
test
cld
test
aad
stos
cli
sbb
stos
icebp
push
xchg
jmp
or
popa
xchg
mov
xor
in
fidivs
stos
sub
inc
and
xor
mov
hlt
add
push
pminsw
mov
inc
push
adc
stos
jae,pn
pushf
and
pop
push
mov
mov
fldl
popf
mov
outsl
scas
ds
xchg
pop
es
in
shlw
ljmp
out
pop
jl
jae
or
mov
pop
out
loop
sub
cmpsl
sahf
mov
jp
leave
or
pusha
popa
or
test
leave
push
mov
aaa
fidivs
sbb
push
rcrl
sbb
daa
mov
sar
fldl
stc
es
add
movsl
mov
insl
or
and
mov
js
jge,pt
subb
movsb
sbb
jmp
mov
sahf
rdmsr
hlt
addl
lock
lea
lods
loopne
int
dec
and
inc
lret
xor
inc
mov
xor
dec
lods
je
fsubl
clc
in
wbinvd
movsb
outsl
push
adc
aad
into
pop
push
inc
mov
push
pop
xor
dec
push
mov
xor
and
mov
inc
jns
js
jmp
fisttpll
jle
mov
nop
push
fildll
scas
test
cltd
mov
lret
dec
test
pop
mov
inc
or
xor
das
sbb
sub
xchg
movsb
pop
enter
fsubrs
adc
gs
and
arpl
xor
dec
mov
mov
mov
and
pop
or
int3
pop
push
roll
cmp
mov
jne
cltd
movsb
into
loope
sub
sub
xlat
incb
scas
inc
outsl
in
sbb
pop
mov
sahf
fstpt
fldt
into
mov
std
mov
jnp
mov
push
js
xor
mov
daa
orb
xlat
sbb
enter
addr16
mov
and
adc
mov
ret
pusha
sub
mov
pushf
jae
adc
lret
mov
mov
filds
popf
jecxz
les
or
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
repz
hlt
jns
jle
mov
cmpsb
stos
mov
rep
rclb
add
bound
test
jbe
pop
pop
sahf
sti
adc
outsl
or
sub
push
icebp
in
sti
push
popf
jns
iret
inc
loope
pop
dec
pop
out
out
mov
lcall
mov
mov
pop
xchg
dec
out
mov
mov
xchg
imul
cmp
jbe
xor
outsl
dec
shll
sub
test
out
inc
mov
mov
mov
addr16
mov
cli
inc
f2xm1
aaa
jne
add
je
outsb
dec
js
shrl
xchg
cmp
inc
push
xchg
rcrl
pop
shrl
jmp
test
mov
imul
sub
mov
ja
aaa
xor
xchg
into
push
sbb
ljmp
gs
dec
scas
dec
xor
add
lods
mov
cmpsb
imul
and
jge
jb
cld
fdiv
cmpsl
mov
cmp
xchg
mov
add
aaa
inc
inc
or
sbb
dec
lods
mov
sti
pop
stos
fisttpl
jno
out
xchg
mov
push
cmpsl
and
je
sub
pushf
push
pop
jns
xchg
dec
pop
sub
inc
jbe
push
call
bnd
and
push
adc
movsb
test
andl
inc
insl
fwait
js
fimull
jmp
sahf
xor
xchg
or
cmpsl
pushf
inc
sub
jns
mov
lcall
ret
aad
test
mov
push
add
push
xchg
cmp
adc
dec
jb
or
sub
pop
in
fdiv
in
popa
fcoml
xor
repnz
pop
jle
pop
jae
or
dec
dec
adcb
movsl
inc
enter
shll
enter
push
ljmp
mov
sub
loop
sub
loope
adc
push
stos
xchg
sbb
fadds
jnp
xor
jmp
mov
or
fsts
outsb
sbb
xchg
push
imulb
push
insb
and
das
inc
adc
add
mov
xor
les
loop
adc
cmp
test
iret
popf
fisttpl
loop
dec
lds
or
push
pusha
test
leave
jp
repz
sub
outsl
stc
inc
push
lahf
shrl
push
push
xor
or
xchg
xor
sub
add
iret
outsb
cmpl
adc
mov
fs
xchg
data16
inc
dec
dec
xchg
dec
sbb
lods
pop
xor
jmp
and
rolb
add
push
repnz
jae
in
nop
and
and
xchg
dec
xchg
mov
mov
imul
adc
sbbl
and
fisttpll
sbb
mov
sub
into
push
adc
addb
cmp
jecxz
cmc
movsb
shrl
push
sbb
loopne
cltd
into
push
inc
xor
pop
addl
shrl
out
cs
mov
xchg
cmp
jle
mov
jns
addb
sub
adc
fisubrl
inc
push
push
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
popf
mov
jle
jns
jle
les
cmp
aad
xchg
cmp
inc
out
xchg
clc
xchg
mov
prefetch
test
ja
sub
adc
inc
sbb
icebp
mov
adc
lret
mov
loop
out
adc
adc
jp
pushw
jb
loope
addr16
cld
jo
cmp
popa
lods
dec
sbb
daa
adc
sub
fcoml
cmp
cmpsb
pushf
and
inc
dec
enter
incl
pop
xchg
jne
mov
mov
imul
pop
aam
mov
inc
cmp
shlb
je
pop
jecxz
addb
lret
aad
sub
jnp
push
adc
lds
dec
pop
lcall
rcrb
int
push
cld
add
arpl
icebp
fstl
das
into
or
movsl
mov
adc
insb
and
mov
in
fcompl
jle
clc
popa
js
lret
data16
jmp
or
jae
mov
or
idivb
mov
lret
jnp
xchg
inc
cmp
popf
data16
in
push
imul
mov
adc
out
mov
in
sub
cmp
ljmp
cmp
inc
sbb
flds
hlt
adcl
sbb
add
xlat
rcrl
test
add
repnz
fwait
jae
rolb
xor
cmp
data16
cmpsb
jb
lods
jne
push
outsl
stos
inc
data16
add
subb
add
data16
inc
in
xchg
sti
push
mov
xchg
cwtl
insb
add
das
adc
or
rcrb
shll
into
and
dec
lahf
mov
imul
scas
inc
inc
add
and
mov
std
push
push
loop
mov
stos
xchg
movsb
jns
lret
movsb
fcoml
dec
sahf
pop
cmp
mov
cmp
out
bound
cwtl
mov
jae
fisubrl
push
mov
insl
push
pop
sbb
lret
insl
xor
mulps
cltd
jae
mov
jg
lea
push
data16
jge
jae
cli
lods
push
add
dec
xchg
test
fnstsw
jle
cmp
pop
xchg
aad
jns
lds
jl
mov
or
in
lret
adc
or
data16
test
xchg
cmp
push
daa
or
test
lock
push
pop
dec
xor
mov
nop
iret
add
test
mov
dec
or
in
pop
pop
into
cmp
lcall
outsb
les
aaa
xor
insl
inc
daa
sbb
cmp
ss
or
add
cmpsb
sub
push
pop
stos
shl
mov
xchg
out
mov
jbe
lds
lcall
enter
sahf
mov
daa
cmp
sbb
cltd
mov
xchg
stc
mov
cli
push
xchg
test
adc
lahf
daa
fcompl
cmpsl
adc
inc
mov
lods
mov
and
fwait
test
adc
push
fsubrs
dec
add
push
mov
mov
jnp
stos
inc
ret
inc
xchg
push
out
addl
cltd
outsb
jne
sbb
push
push
jmp
mov
inc
push
cli
mov
cld
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
fwait
lods
test
adc
jle
hlt
jns
jle
ss
nop
shlb
mov
iret
test
push
adc
sbb
inc
and
add
jne
add
cmp
dec
or
imulb
pop
adc
lds
and
popf
sti
lret
es
and
ret
push
pop
mov
cmc
sub
sbb
push
lods
mov
insl
rorl
pop
daa
mov
insb
popa
add
add
dec
adc
adc
sub
repz
cwtl
add
dec
mov
ror
andl
cmp
dec
pop
push
subl
xor
scas
and
xor
dec
pusha
jg
sti
mov
push
lods
inc
in
int
or
lret
mov
and
or
imul
and
int
and
movsb
andb
mov
push
push
sub
adc
push
sahf
rclb
cld
dec
std
xlat
outsl
cmpsb
into
loop
sbb
fucomip
xor
and
cmp
xchg
jnp
inc
cwtl
enter
push
mov
sarb
imul
fsubrl
repnz
ss
cmp
cmp
getsec
outsb
or
or
gs
ret
xor
pop
daa
jbe
ror
push
jbe
lret
subl
mov
cli
push
xchg
ret
pusha
shll
pop
or
xor
mov
shl
pushf
xchg
repz
pop
lret
push
nop
xchg
shlb
jne
mov
ljmp
sbb
lods
sarl
xlat
adc
push
sub
ss
rol
es
mov
cwtl
push
mov
dec
or
and
jle
add
rep
test
mov
scas
test
jle
add
in
sarl
rorb
aaa
test
pushf
enter
sub
mov
in
mov
loope
push
jecxz
scas
sbb
cmp
stc
icebp
outsb
pop
jo
popf
sbb
mov
push
dec
popa
mov
sbb
rorl
jg
das
mov
sbb
pushf
mov
lock
lret
xchg
mov
push
mov
mov
or
add
ret
sub
cmpsb
inc
jns
add
fmull
loopne
stos
bound
pop
mov
stos
mov
cmpsb
jae
movd
iret
out
sub
andb
pop
out
cmpsb
xchg
mov
sbb
sub
mov
rorb
mov
cltd
and
jns
test
push
das
sub
ljmp
hlt
xchg
mov
rorb
sahf
test
add
mov
push
cltd
xchg
mov
aaa
loopne
rcrl
mov
lahf
ret
test
add
jb
cld
jl
aam
dec
push
adcb
jmp
aas
sbb
mov
lea
pop
push
mov
xchg
movl
arpl
jle
jns
cs
daa
cmpsb
fidivrs
and
sub
jo
xchg
out
outsb
xchg
fdivrl
mov
or
out
push
jns
xchg
and
mov
lock
and
cmpsl
scas
pop
push
sbb
aad
push
fidivrs
mov
test
test
popa
jno
pop
cmp
xchg
dec
or
dec
or
add
add
add
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
mov
mov
jle
dec
or
and
sbb
mov
or
in
add
sub
cmpl
xchg
pop
ficomps
clc
loop
rol
fdiv
hlt
and
ja
movsl
in
mov
jmp
mov
lahf
sbb
out
add
out
mov
push
push
je
sbb
dec
cmp
les
jg
stc
or
mov
or
cmp
mov
mov
cli
mov
xchg
sbb
sbb
adc
test
sbb
fbld
jge
scas
mov
jae
cmpsl
xor
fwait
addr16
imul
daa
cli
sti
jae
jbe
mov
outsl
es
nop
ss
nop
lods
into
pop
push
out
les
dec
cmp
push
xchg
and
pop
ret
test
cmp
inc
lods
aas
mul
enter
sub
or
jae
add
jmp
cmp
push
inc
fdivrs
cmc
lds
sahf
and
mov
ss
xchg
mov
jg
inc
add
xor
and
mov
addr16
inc
inc
pop
xor
jno
mov
jb
and
std
xchg
and
test
mov
adc
push
cwtl
jl
in
xlat
arpl
jae
ljmp
mov
daa
dec
mov
inc
and
test
mov
dec
mov
jge
cmpsl
pop
xchg
mov
cmp
sahf
pop
popa
ljmp
push
push
pop
push
adc
ret
mov
outsl
icebp
jmp
sarb
mov
data16
jle
in
sub
dec
mov
pop
hlt
push
movsb
or
das
mov
push
dec
xor
out
sub
jo
lea
mov
call
repz
sbb
cmp
sbb
arpl
icebp
mov
inc
imul
fnstcw
ret
mulb
mov
mov
or
jecxz
mov
adc
shll
xchg
je
test
pop
inc
push
push
aas
sub
push
mov
pop
incb
xor
xor
les
add
lds
jo
jns
lea
mov
jp
lret
or
insl
fs
mov
fwait
popf
repnz
adc
and
popf
and
adc
xchg
mov
mov
pushf
sti
sub
insb
enter
jbe
or
adc
movsb
div
jo
inc
cmc
lock
xor
cli
mov
ja
lahf
inc
jb
pop
sub
cli
cld
jle
jae
pop
inc
jae
jae
mov
sbb
shrb
sub
and
pop
movsb
xchg
pop
insb
loope
pusha
out
and
pusha
loop
mov
out
lods
pxor
in
repz
scas
sub
xchg
pop
xchg
mov
or
lock
sbb
lea
add
fiaddl
and
mov
sahf
cmp
or
sbb
mov
inc
sbbb
jecxz
and
stc
cmpsl
ja
lods
pushf
into
repz
xchg
mov
mov
xor
pop
jmp
push
clc
clc
mov
test
adc
loop,pn
js
jle
hlt
jns
jle
ljmp
sub
addr16
rcrb
aas
je
dec
int3
addr16
fs
push
inc
fdivrl
mov
mov
mov
rolb
lahf
test
outsb
dec
fstps
test
js
xorb
das
pop
push
fwait
lds
mov
lcall
jnp
test
sub
xor
sbb
inc
in
mov
or
pushf
ret
lahf
add
rorl
xlat
icebp
mov
sahf
mov
clc
cmpsl
mov
pusha
and
or
jae
inc
adc
xorl
cwtl
adc
cwtl
add
dec
sbb
mov
push
pop
outsl
or
test
dec
add
dec
xchg
jecxz
aad
and
mov
jae
mov
into
pop
inc
es
inc
fildll
out
jecxz
mov
mov
nop
xlat
lcall
add
jle
sub
leave
shrd
call
call
dec
lahf
push
and
sub
lahf
and
sub
cld
xchg
mov
stos
pop
sbb
pop
inc
sbb
lods
icebp
adc
inc
sub
pop
sahf
push
pusha
cli
add
stos
push
out
mov
mov
les
jmp
sti
ss
dec
push
xor
inc
std
int3
jl
mov
cs
adc
cmp
jb
mov
stc
test
call
push
mov
xchg
mov
sti
dec
sbb
sarb
inc
sbb
rcll
jbe
xor
mov
arpl
fisubl
add
sahf
cltd
icebp
icebp
mov
add
ret
mov
mov
iret
outsb
popf
mov
adc
popa
rcr
call
sahf
into
das
adc
mov
cmp
imul
scas
sub
jecxz
repz
inc
jmp
or
iret
sti
jns
test
jo
lods
test
lret
loopne
and
ficomps
pop
cmp
lcall
adc
xchg
das
cwtl
add
or
jnp
inc
inc
mov
imul
stos
cmp
and
leave
push
out
inc
popa
arpl
lea
push
fdivl
pop
cmp
stos
and
xor
sub
fldenv
mov
jl
ja
mov
out
cld
cld
outsl
and
cmp
shl
test
fldl
pop
push
pop
lcall
pushf
adc
mov
sbb
test
push
insl
jl
xlat
cli
shl
int3
cmpsl
ret
lahf
xchg
jmp
outsb
xchg
sub
imul
cmpsl
mov
mov
imul
insl
and
mov
popf
mov
xchg
or
add
test
andb
adc
loope
dec
sub
pop
dec
add
fsubl
cwtl
hlt
insb
inc
push
mov
andl
mov
cli
pusha
mov
adc
or
mov
mov
inc
sub
inc
xor
imul
push
pop
jecxz
fidivrl
mov
negl
adc
ljmp
loop
inc
xor
xor
cltd
insb
mov
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
pop
and
testb
pushf
jg
jle
movl
test
sub
mov
les
jns
int3
mov
add
test
mov
push
mov
lds
jo
inc
jmp
idivl
pop
mov
mov
stc
aam
mov
sbb
add
mov
jp
arpl
insl
les
data16
add
adc
fcomps
mov
and
jne
mov
jmp
dec
out
nop
dec
testl
mov
call
fists
jae
cmp
stc
mov
mov
add
lahf
movsl
addr16
stos
or
dec
inc
adc
mov
icebp
std
jae
jecxz
daa
lcall
pop
add
or
jbe
jle
add
daa
sub
xchg
repnz
mov
dec
insb
sbb
lock
sbb
jg
lretw
pop
sbb
loopne
loop
and
mov
mov
sbb
movsl
adc
test
adc
outsl
mov
sub
mov
jp
lret
mov
and
adc
cld
or
push
pop
loop
test
inc
mov
push
sub
adc
into
rcrl
fs
cli
sub
adc
sbb
add
sbb
dec
push
mov
inc
mov
mov
xor
jnp
mov
inc
fmul
pop
and
jecxz
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
fadds
jle
jg
jle
and
mov
lds
pop
adc
inc
mov
push
mov
je
data16
and
lahf
and
nop
cmp
cmp
addr16
insl
in
inc
nop
ja
xchg
or
imul
cli
mov
sub
sub
mov
sbb
cmp
push
add
pop
js
mul
shrl
push
xchg
or
cs
aam
lea
loope
lock
into
mov
jns
movsb
scas
in
les
hlt
lcall
xor
js
icebp
bound
sbb
movsl
ljmp
fwait
mov
xor
xlat
dec
addl
adc
pop
gs
mov
jecxz
cmc
dec
pop
movsb
cmc
mov
fmuls
fidivrl
movsb
int3
mov
jmp
xchg
sbb
test
dec
stos
movsb
xchg
mov
rcrb
adc
add
movsl
inc
mov
dec
mov
int
stos
hlt
jge
pop
insl
ja
sar
stos
ret
jmp
aam
popa
fwait
adc
lds
rol
mov
ss
cmc
mov
lcall
push
lock
push
imul
sbb
inc
imul
push
and
and
test
mov
mov
popa
and
jbe
and
ret
adc
or
fcoms
orl
call
stos
icebp
lds
push
sub
xorb
fwait
xor
dec
lods
mov
sbb
fimull
mov
adc
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
add
call
jle
js
jle
bound
pop
dec
jno
adc
out
pushl
icebp
sub
mov
and
fistps
adc
jl
stos
es
iret
mov
in
fistl
mov
cs
add
and
push
or
mulb
aam
xchg
daa
pop
mov
fadd
push
hlt
movsl
bound
out
mov
mov
push
cmpsb
je
xor
sub
addr16
mov
push
orl
ljmp
dec
cli
iret
in
les
test
mov
enter
insl
mov
pop
inc
adc
mov
push
pop
packuswb
fildll
sub
aas
pop
xchg
dec
mov
inc
test
int3
push
dec
js
lea
div
or
mov
dec
or
sub
add
cli
pop
adcb
in
hlt
mov
jl
dec
sub
mov
inc
jns
jge
sub
inc
enter
in
dec
add
add
je
addb
xorl
repnz
cltd
popf
and
iret
and
pop
pop
pushf
in
mov
push
mov
test
and
fs
inc
mov
jnp
bound
cltd
xchg
ljmp
add
xor
ds
cltd
dec
mov
mov
mov
iret
xchg
mov
imul
cmp
stc
sbbb
shlb
adc
inc
xchg
mov
pop
rolb
ss
dec
shlb
scas
cmpb
test
cmp
pop
gs
je
cmp
xor
fcompl
dec
ss
outsb
aad
arpl
fiadds
xchg
push
jg
mov
loop
pop
js
bound
lock
movl
test
outsl
shrb
incl
sbb
out
sub
das
das
cltd
test
shlb
sub
adc
or
mov
push
test
lret
xor
mov
push
sbb
add
orb
mov
xchg
lcall
ljmp
mov
aas
icebp
sub
add
sub
lea
sub
ret
fidivs
adc
loopne
in
pop
and
shlb
jae
popa
mov
ret
in
loop
add
mov
xor
dec
mov
pusha
test
loopne
cli
in
xorb
fwait
out
sti
std
jp
mov
dec
leave
add
dec
cmp
movl
mov
inc
cld
cmp
or
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
les
out
mov
or
xchg
insl
jb
cmc
jns
pop
mov
nop
call
fmull
add
je
cwtl
add
add
cmc
divl
push
inc
sub
cld
outsl
dec
sub
xchg
and
mov
jb
jbe
mov
out
jae
gs
fs
mov
daa
lods
std
adcb
aaa
data16
mov
add
xchg
xor
icebp
inc
addr16
popf
leave
cmc
inc
clc
dec
cmp
mov
xor
or
fsts
mov
push
mov
adc
mov
mov
jl
aas
xlat
jl
out
and
fwait
xchg
daa
jne
rcr
subb
cmpsb
jecxz
pop
inc
fs
inc
jle
xchg
insb
fbld
pop
push
add
repnz
sub
adc
imul
jle
mov
sar
cmp
fdivs
mov
sbb
xor
mov
mov
je
dec
mov
inc
cwtl
testl
jne
and
push
push
mov
sub
sub
incl
rorl
xor
es
push
outsl
cmp
and
mulb
ds
xlat
fwait
dec
mov
mov
xlat
into
mov
imul
push
int
mulb
inc
jo
push
sub
lods
mov
mov
icebp
loope
loope
movsl
in
push
adc
inc
flds
sbb
shll
dec
clc
outsl
mov
lods
rcll
xor
add
orl
cmp
cs
pop
sarl
or
mov
and
lret
sbb
jecxz
pop
xchg
lret
sub
sbb
insb
daa
stos
shrb
aam
xor
mov
ret
mov
divps
mov
jnp
dec
xchg
add
test
pop
xchg
outsb
nop
mov
push
loop
movsb
out
je
jge
ljmp
jnp
jae
xor
push
pop
or
dec
cmp
push
mov
iret
pusha
sarl
push
pop
add
cmp
daa
nop
icebp
lcall
jge
arpl
icebp
mov
sahf
fidivl
aaa
pop
xchg
dec
xor
adc
test
int
mov
push
aaa
xor
out
inc
push
cs
dec
das
add
lods
dec
data16
jnp
xor
xchg
es
cmp
inc
lock
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
clc
leave
push
js
jle
in
pop
mov
pop
aad
adc
add
mov
sahf
cmp
popf
sbb
int
push
jns
xchg
push
mov
movsb
mov
nop
sub
mov
cmpsl
or
cmp
sub
push
push
mov
leave
and
push
fidivrs
es
imul
and
insb
insb
in
mov
testb
lods
pushf
aas
shrb
shl
imul
rorb
fildll
cli
clc
xchg
adc
cmp
int3
fwait
or
ret
inc
xor
cltd
scas
ret
jns
movl
sbb
mov
push
mov
out
lods
out
mov
and
mov
pushf
inc
imul
push
jecxz
and
pop
fsubrp
and
fs
sti
push
test
pop
fdivrl
ret
mov
shll
pop
movsl
mov
push
stc
in
dec
mov
push
inc
addl
rcll
ljmp
outsl
sbbb
lcall
adc
daa
cwtl
cmp
ficompl
cli
pop
les
sbb
mov
popf
cli
mov
xor
sub
adc
push
pop
or
ds
sbb
ja
sbb
stc
test
jl
sub
test
jl
or
jbe
into
jg
jmp
and
pop
pop
dec
das
shr
cmp
mov
cmc
movsb
xchg
push
jle
mov
push
mov
and
mov
jl
leave
inc
and
xchg
notl
jne
mov
pop
xor
or
adc
inc
jg
xor
xchg
lret
ret
pop
or
push
test
sahf
xor
fimuls
xchg
orb
rcrl
push
push
jns
enter
mov
cmpsl
xchg
aam
setl
xchg
or
cmp
icebp
sar
mov
mov
xchg
sub
popa
fwait
xchg
cmp
add
lret
mov
or
vpaddq
daa
push
xor
fisubrs
jnp
nop
xorl
xlat
scas
mov
xchg
sbb
push
xchg
lea
mov
pop
flds
push
in
cs
rcl
lret
mov
mov
and
cmp
idivb
lds
add
mov
pop
jle
out
outsb
pop
aam
mov
inc
in
loop
lahf
mov
call
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
mov
jle
jg
jle
out
jecxz
push
xlat
aad
mov
mov
mov
mov
icebp
cmp
add
shll
nop
mov
ror
fdivs
mov
or
lds
fnstenv
sbb
sbb
fs
pop
in
iret
cli
jo
ljmp
or
stos
inc
fidivrl
jmp
xor
mov
lret
call
adc
cwtl
cwtl
xchg
mov
cmpsb
mov
mov
sbb
scas
xchg
faddl
pop
xlat
insb
aaa
cltd
fwait
and
cmpsl
sub
mov
test
mov
dec
enter
inc
xchg
sti
adc
mul
fwait
dec
cmp
jnp
cmp
lds
aad
cmp
mov
lds
pushf
pop
jmp
inc
je
testb
test
lods
cwtl
data16
stc
cmp
push
insb
pop
into
push
daa
aaa
stos
jmp
enter
sub
in
jle
or
jmpw
push
sti
popf
or
or
sub
into
pop
sbb
mov
push
xchg
scas
adc
hlt
pop
and
icebp
mov
ret
or
out
xor
ss
ffree
jb
jae
test
mov
in
sub
nop
adc
out
roll
mov
mov
xor
loop
sub
scas
mov
mov
sahf
pop
inc
gs
call
fmull
mov
aaa
test
scas
mov
pop
rcll
jle
stos
push
add
xor
push
dec
adc
dec
shl
xchg
stos
pop
mov
scas
cmp
jle
mov
test
xchg
jnp
jecxz
stc
mov
clc
jp
movsl
mov
or
jge
mov
mov
aam
push
stos
xchg
sub
and
cmp
mov
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
cwtl
jg
js
push
jle
pop
jg
jle
pop
push
ret
popa
das
pusha
pop
ret
test
divb
dec
jl
xor
mulb
add
xchg
div
shrb
imul
dec
mov
jmp
insb
rcrb
add
decb
xchg
add
sub
stos
mov
xor
scas
push
pop
fisubrs
dec
pop
jle
xchg
jp
enter
mov
int3
fnsave
fcompl
mov
mov
jbe
int3
xor
pushf
lods
shrl
jecxz
sbb
insl
daa
out
out
in
out
sbb
fnsave
push
iret
sub
and
lock
jl
xchg
inc
xchg
xor
jno
addr16
cld
ss
ret
ret
push
in
fs
or
in
movsb
sub
push
stos
or
mov
lret
aas
xchg
loopne
sbb
icebp
xor
mov
lret
xchg
sub
cmp
repz
das
mov
push
testb
aad
popl
cmpsb
jle
stos
push
sbb
cmpsl
mov
negb
cld
pushf
repz
pop
sub
pop
fcomp
push
dec
lret
adc
or
mov
pop
add
cmpsb
inc
imul
lret
inc
mov
repnz
inc
pop
pop
fcomi
and
add
je
pop
imul
ficoml
add
ja
xor
dec
sub
mov
push
or
rcrl
xchg
jmp
jns
not
xchg
in
imul
cmpsb
iret
cmp
pop
mov
push
lea
push
popa
int3
std
hlt
adc
push
addb
sub
xchg
cmc
cmp
cs
pop
adc
mov
xchg
mov
cmp
xor
mov
and
test
xchg
icebp
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
inc
jnp
cmp
push
jle
pop
jg
jle
and
cmp
cmpsl
mov
mov
or
jo
xor
faddl
and
xor
mov
push
cli
xor
sub
inc
notl
fists
lea
mov
in
mov
ror
cltd
outsb
inc
out
in
scas
jmp
imul
push
adc
jbe
in
and
jp
xlat
add
sbb
push
jl
andb
cli
lcall
sti
sahf
add
add
out
jl
test
mov
pop
add
scas
insb
pop
sub
or
sbb
push
data16
in
pop
iret
push
adc
dec
xchg
push
insl
stc
into
jmp
in
mov
int
test
sbb
inc
dec
iret
adcb
push
jmp
xchg
jmp
jo
and
sub
and
cmp
adc
mov
mov
fs
aas
pop
ffreep
pop
loopne
les
jle
pop
insl
aaa
pop
out
mov
inc
xchg
loop
dec
aad
movsl
je
scas
addr16
adc
jmp
mov
jns
push
push
pushf
stc
bound
lods
inc
nop
mov
jecxz
aaa
or
cltd
mov
sbb
jl
xor
cs
adc
int3
call
cmp
mov
sbb
addb
and
test
arpl
mov
xor
es
cld
cmp
adc
xor
add
ret
out
loope
repz
ret
loopne
push
in
jb
jnp
ljmp
loope
xor
cmp
sbb
jbe
jp
lcall
scas
add
fsubs
mov
bound
xor
leave
xchg
sbb
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
push
repz
xor
jle
jg
jle
cltd
cmp
pop
xchg
pushf
icebp
psubw
adc
push
in
fistpl
mov
dec
dec
jnp
insl
jbe
in
xchg
jns
scas
pop
and
insb
add
xor
adc
es
and
mov
dec
mov
inc
out
add
jle
adc
push
xchg
pop
and
push
mov
addb
call
mov
dec
pop
cmp
insb
cmpsl
cmpsl
jecxz
mov
into
mov
pop
test
jl
sub
and
sbb
jge
push
mov
imul
push
sbb
mov
xor
xchg
and
inc
adc
sub
push
fldenv
pop
cmp
mov
add
sbb
insb
insl
xchg
and
sti
pop
outsb
adc
adc
movsl
inc
std
imul
lods
xchg
pop
inc
shr
dec
stc
clc
jno
sub
rolb
sbb
inc
test
repnz
jbe
add
fcomip
shr
int3
popf
lock
xor
or
jne
adc
adc
ljmp
dec
dec
insl
jmp
push
fildll
push
ds
repz
or
jl
jb
dec
sbb
mov
dec
add
inc
stc
mov
mov
pop
nop
jnp
inc
nop
pop
nop
xchg
lds
xchg
addb
inc
scas
or
out
shlb
into
sub
aas
push
lock
jg
cmp
data16
push
mov
push
xchg
cld
addr16
dec
cld
ss
mov
call
pop
cmp
cmpsb
adc
dec
lods
mov
sar
test
mov
mov
repz
leave
es
mov
push
dec
dec
adc
stc
mov
mov
mov
jmp
cmp
jne
xchg
mov
sbb
or
adc
jle
jg
jle
lods
orl
mov
stos
mov
ret
ffree
sub
sbb
dec
daa
out
bound
mov
rcrb
inc
adc
je
xorb
or
add
outsl
xchg
js
imul
imul
push
loopne
inc
ss
xchg
sbb
and
or
mov
mov
test
inc
dec
jecxz
inc
mov
mov
out
insl
dec
adc
ret
sbb
mov
mov
push
addr16
xchg
sbb
push
pop
fcomps
repnz
iret
push
int
int
imul
cwtl
xchg
jnp
and
xchg
popf
jne
sub
jmp
or
adc
xchg
xchg
or
mov
xor
mov
sahf
cs
std
lock
xor
pop
jno
jbe
int
push
or
pop
adc
arpl
sub
sub
xchg
mov
std
iret
and
adc
in
cmp
out
xor
stc
mov
daa
lds
xor
test
sbb
lods
stos
jnp
jo
mov
xlat
js
mov
aaa
dec
mov
lods
icebp
cld
mov
enter
es
inc
adc
jmp
inc
lcall
lock
inc
jp
mov
data16
pop
imul
in
lods
test
or
mov
push
cmp
xchg
jle
push
bound
sub
aas
cld
pop
sub
xor
ret
in
aam
dec
scas
adc
clc
mov
adc
jae
test
xchg
popa
out
aad
add
mov
sbb
push
jg
aas
fwait
stc
xlat
xor
ds
pop
sub
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
in
jle
jle
pop
jg
jle
push
pop
dec
insl
jae
in
mov
push
or
sub
push
fdivrp
sub
and
cmp
dec
leave
cli
mov
add
clc
mov
dec
scas
xor
mov
mov
or
popf
push
in
scas
pop
jmp
jge
and
xlat
nop
loopne
add
cli
loopne
dec
dec
xchg
mov
cli
inc
dec
les
xchg
dec
sbb
ja
pusha
add
sub
mov
int3
inc
xor
neg
pop
cmc
xor
pop
sbb
or
sub
lret
mov
mov
mov
fmuls
pusha
mov
mov
push
mov
fdivrp
fcomip
nop
inc
icebp
xchg
jae
xchg
mov
inc
lret
stos
mov
ds
mov
push
imul
aam
jp
ficomps
jle
or
mov
xchg
and
bound
cmc
or
add
movsl
daa
xlat
jge
inc
and
or
pop
iret
fisttpll
out
gs
pop
jbe
ja
mov
sahf
pushf
jbe
push
stos
popa
xor
and
dec
sar
lcall
xchg
inc
xor
xor
iret
stos
cmp
divb
out
adc
cmpsb
loopne
add
js
push
shll
push
sbb
fsubr
call
pop
push
dec
adc
pop
aad
xor
push
cltd
pop
lds
arpl
sbb
cmp
imul
and
test
jmp
adc
es
ret
les
xor
lahf
push
stc
mov
jnp
call
gs
jmp
xchg
fidivrl
adc
aad
inc
jno
mov
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
lods
fstl
jle
jg
jle
jnp
mov
je
and
jno
sti
mov
je
push
xor
shlb
int
pop
sarb
sub
mov
adcb
test
pop
mov
fwait
and
loopne
mov
imul
shlb
hlt
lcall
and
scas
and
add
cmp
in
sbb
aad
test
out
add
sbb
sbb
cmp
xchg
or
sub
in
pop
inc
loopne
sbb
sub
pop
clc
jbe
es
jns
addr16
mov
jp
cwtl
stc
insl
into
arpl
inc
xor
inc
outsb
addl
cmp
testb
dec
imul
test
cltd
pop
pop
push
cmp
cmp
mov
out
xor
lahf
push
push
dec
ss
mov
or
mov
xor
rcrb
mov
test
adc
fwait
out
pop
sub
iret
nop
push
data16
sub
xchg
enter
jecxz
jmp
dec
pop
addr16
cmc
jbe
inc
aad
in
jmp
cmp
js
in
fisubrs
repnz
and
popw
leave
ror
repz
std
and
sub
fidivl
vandnps
xlat
xchg
dec
bswap
push
ljmp
std
xor
mov
je
idivb
mov
adc
lahf
nop
jne
jbe
lods
fdivs
mov
push
cmp
lods
stos
inc
fstpl
jne
mov
mov
cmc
cs
sbb
scas
sbb
dec
jp
mov
pusha
pop
mov
fcmovu
loopne
addr16
cmp
sbb
pop
cmpsb
sahf
fldenv
mov
add
add
cmp
cltd
int
jno
ja
loope
inc
xchg
lds
pop
jle
pop
jg
jle
add
pop
lea
cmp
jg
mov
pop
nop
cmpsb
outsl
lea
push
imul
jnp
subb
xor
sbb
pop
mov
sbb
fcmove
fcmove
add
inc
xchg
add
xchg
mov
les
dec
scas
jbe
nop
sti
aas
bound
xor
xorl
and
adc
aam
scas
lcall
sub
add
add
shrl
enter
mov
add
mov
out
test
pop
imul
cmp
jno
lea
mov
dec
xor
mov
mov
pop
insb
dec
pusha
xchg
enter
pop
mov
imul
mov
fwait
jns
imul
push
pop
and
xchg
mov
scas
jnp
mov
fs
out
jo
cmpsb
inc
sbb
add
sahf
cld
cmp
mov
fs
lahf
mov
pop
dec
push
punpckldq
add
inc
jge
add
ds
loope
les
xor
fwait
jp
sbb
jl
jbe
in
add
mov
dec
lret
mov
test
ss
imul
cmp
inc
cmpsl
inc
xor
into
and
lods
aam
jbe
fs
negl
add
jo
sti
add
test
inc
mov
scas
mov
mov
inc
das
jmp
movsl
cmpb
mov
std
pop
adc
or
sti
mov
ja
into
js
inc
insb
ds
mov
mov
sub
subl
jg
fwait
testb
int
je
add
test
or
cmp
shrb
add
mov
jne
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fmul
dec
xor
jle
jg
jle
rorb
push
mov
pop
cld
pop
mov
mov
rolb
mov
loopne
gs
ljmp
mov
addr16
or
dec
std
mov
xor
or
mov
push
xor
ret
sarb
mov
mov
push
mov
mov
pop
cwtl
stos
mov
sbb
mov
cmp
add
call
dec
out
addr16
popa
outsb
inc
push
int3
mov
pop
inc
arpl
inc
hlt
or
clc
lds
adc
push
sbb
or
mov
sahf
fdivl
xchg
loopne
inc
xorb
or
leave
push
dec
out
cmp
lea
stc
pop
mov
inc
or
push
mov
shrl
add
ss
jge
shll
inc
mov
cmp
lods
cld
out
fnstsw
orb
mov
push
dec
push
out
push
mov
or
notb
js
repz
adc
mov
ror
xor
sti
pop
mov
xorb
inc
and
sbbl
inc
mov
or
loopne
aas
inc
mov
fwait
stc
mov
stos
sub
inc
xchg
pushf
mov
mov
jp
sahf
lcall
ja
adc
inc
js
lcall
push
add
mov
push
data16
inc
xchg
aam
mov
adc
pop
jg
mov
push
mov
in
add
out
mov
jp
or
adc
mov
rcrl
cmpsb
and
xlat
lahf
pop
sub
inc
or
push
push
in
mov
out
pusha
enter
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fdecstp
lret
mov
add
testb
add
xchg
sub
movsb
iret
sbb
sti
adc
jnp
sahf
fwait
jge
insl
cmp
jle
in
lahf
cmc
dec
add
push
cmpsl
fisubrs
movsl
imul
push
ja
inc
ret
lods
xor
dec
fildll
or
dec
int3
negb
lahf
xlat
movsb
repnz
mov
dec
sub
inc
loop
bound
cmpsb
rcrb
and
jmp
mov
scas
mov
xorw
dec
mov
adc
xchg
dec
or
sub
decb
sub
insb
clc
ds
lods
adc
imul
fldenv
jno
mov
dec
cmp
inc
iret
subb
mov
lcall
test
cmp
mov
pop
cli
or
mov
xchg
sti
push
fdivrl
std
sbb
outsl
out
sub
push
xor
add
pop
ficoml
in
jle
cs
pop
ret
pop
xlat
and
add
add
add
sub
lock
xchg
movsb
repnz
ja
imul
push
jecxz
lds
dec
insl
mov
int
fs
cmp
outsl
fs
cltd
jnp
testb
push
jno
or
scas
inc
insl
or
incb
sbb
pop
sbb
fildl
mov
pop
rolb
pusha
nop
cmpl
ficoms
jmp
adc
dec
lret
loope
jo
pop
push
lret
sub
cmp
test
fdivp
mov
cmp
psrlq
sbb
leave
jo
jge,pn
xor
loopne
shl
mov
xlat
push
jecxz
and
cltd
add
gs
in
mov
lock
mov
dec
dec
lods
sbbb
dec
push
inc
imul
lahf
sub
test
mov
test
rorb
addr16
hlt
xor
add
add
adc
sar
js
add
testb
add
mov
push
push
add
data16
dec
jl
mov
lds
test
lea
mov
add
xor
jl
sbb
jmp
push
mov
push
mov
xchg
dec
xchg
pop
stc
lods
cmp
add
in
xor
lcall
dec
mov
pop
inc
jg
gs
test
test
movsl
in
and
pop
cmpsb
sbbl
push
pushf
ds
jp
out
cmpsl
clc
mov
sbb
aas
xchg
data16
dec
mov
pmullw
cwtl
hlt
jbe
ds
and
shll
test
ficompl
xor
mov
out
ljmp
mov
dec
incb
repnz
adc
jno
sub
cmp
test
fwait
dec
std
ja
into
imul
cmp
add
mul
mov
mov
xchg
lret
addb
add
mov
stos
dec
out
or
add
testb
add
push
jge
or
or
mov
jbe
xor
adc
mov
inc
out
sahf
jge
push
out
dec
sti
jno
fisttps
in
and
cli
insl
stos
cmp
pop
add
mov
frstor
sbb
xor
or
gs
fdivrp
mov
mov
xchg
fs
jae
mov
fidivrs
ret
imul
rorl
jbe
out
movsb
fbstp
incl
or
test
outsl
cmp
stc
mov
fistl
adc
stos
pushf
ss
mull
out
in
rcrb
xchg
mov
shrl
int
xor
fcmovu
fsubs
mov
fildl
mov
lret
cwtl
adc
in
sub
jno
mov
inc
insb
push
push
roll
xchg
jo
lret
dec
mov
mov
ret
cmp
in
ret
fildl
and
add
inc
or
leave
bnd
sbbb
add
add
add
aaa
mov
in
frstor
iret
xchg
dec
mov
stc
sar
adc
cmc
sbbl
gs
int
pop
fmulp
inc
adc
dec
mov
or
popa
mov
sbb
or
js
xor
mov
push
mov
jecxz
dec
adc
mov
xchg
testl
and
jno
leave
mov
pop
enter
jge
inc
push
pop
or
loopne
frstor
or
rolb
mov
push
addr16
in
test
jg
pop
lea
sub
pop
dec
jnp
arpl
pop
add
rcll
inc
inc
jge
cmp
shlb
adc
int
aas
jl
cltd
pop
imul
testb
lock
push
cmp
inc
xlat
mov
add
jg
cmc
insl
cmc
out
lcall
sub
out
imulb
add
testb
add
jo
out
call
and
jnp
dec
cmp
shl
xchg
arpl
daa
push
arpl
into
in
push
inc
fistpl
adc
inc
loope
pusha
add
dec
pop
jae
jns
aad
xchg
mov
insb
push
push
dec
in
cmp
js
arpl
scas
lods
mov
int
xchg
into
or
pop
mov
push
cltd
push
repz
pusha
loopne
enter
sub
pop
cmp
bound
mov
sub
sub
xor
sbb
fwait
insb
sub
frstor
hlt
push
push
xchg
and
cwtl
imull
xchg
jp
mov
sbb
jmp
mull
mov
cmp
loop
daa
sti
cmp
jge
pop
decl
add
cld
out
movsl
push
dec
mov
notl
mov
push
imul
inc
inc
or
add
jle
add
outsl
jle
dec
xchg
call
aas
push
jmp
add
add
add
mov
xchg
loop
mov
lea
xchg
mov
lcall
dec
mov
and
sbb
shl
push
inc
push
cmpsb
push
out
std
loopne
mov
push
mov
lds
sbb
pop
gs
in
cmp
mov
mov
sbb
ficoml
mov
leave
mov
dec
int3
imul
xchg
add
xchg
cmp
iret
iret
push
sub
inc
outsl
jmp
add
and
pop
sbb
pushf
sub
lock
pop
in
pop
fisttps
fwait
mov
in
cmp
mov
cmpl
sub
jne
xchg
jns
pop
or
sbbb
scas
cmc
ja
movb
inc
addr16
or
and
and
cwtl
sarb
xchg
imul
dec
sbb
mov
push
sub
add
jle
and
scas
sti
jle
inc
sbb
add
add
testb
add
das
add
enter
mov
mov
pop
std
sub
fnstenv
mov
dec
jmp
outsb
pop
mov
push
inc
leave
fwait
fwait
mov
or
jl
cmpb
ret
lahf
pop
mov
mov
push
lret
adc
test
inc
push
mov
cmp
ljmp
imul
sub
inc
and
in
jnp
hlt
sbb
notl
fiaddl
xor
lahf
dec
sub
sub
dec
mov
adc
hlt
punpcklbw
je
or
iret
or
lods
add
lahf
outsl
js
daa
pusha
mov
cmp
hlt
dec
jl
xlat
push
shrb
fistpll
pop
test
push
push
stos
bound
repz
lods
pop
jg
gs
sub
int3
addb
aas
outsl
fwait
pop
inc
sti
adc
fs
add
mov
add
clc
add
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
mov
adc
in
add
testb
add
in
daa
pop
imul
sbb
test
cmpsl
xchg
mov
shll
call
or
es
imulb
cmp
fwait
je
mov
sbb
sahf
xor
pop
or
fwait
sbb
subb
lret
pushf
test
xchg
xchg
movaps
fs
pushf
faddl
xchg
imul
inc
clc
xchg
les
mov
inc
push
in
inc
sahf
push
and
fsts
add
jecxz
dec
mov
inc
jns
cwtl
ljmp
jmp
push
mov
mov
out
clc
add
incl
sbb
pop
sub
insl
push
pusha
imull
jne
or
adc
pop
and
in
fidivs
inc
dec
mov
xchg
aad
fistpll
dec
lods
cld
lahf
loope
add
or
add
out
sti
out
xor
and
arpl
pop
scas
out
dec
faddl
add
push
jl
jle
insb
pop
decl
xbegin
add
testb
add
sbb
jmp
jge
hlt
pop
push
xor
data16
sbb
sub
adc
cwtl
pop
fadds
sbb
xor
mov
insl
pop
dec
movsl
je
dec
inc
adc
sbb
clc
imul
sbb
sti
inc
shrl
xor
lds
mov
xchg
lcall
push
dec
bsr
inc
jo
test
pop
pop
subl
sbb
xchg
mov
inc
hlt
mov
sbb
daa
xchg
out
ljmp
mov
add
and
imul
fcomps
pop
jmp
or
mov
sub
bnd
push
rcl
sub
pop
pushf
pop
aam
jne
push
jl
mov
jmp
xchg
add
xor
aas
repnz
inc
fucom
test
adc
xor
out
leave
inc
movsl
insl
mov
add
mov
adc
pop
ljmp
sub
add
testb
add
in
xorb
aas
loop
sub
orl
sahf
inc
mov
mov
sbb
mov
xlat
dec
jle
cs
lret
dec
popa
pop
push
fidivrs
sub
scas
jne
fwait
jo
push
jg
and
xchg
pushf
push
adc
push
pop
push
sub
and
in
and
lcall
lret
aad
ljmp
sub
dec
adc
mov
add
jbe
jnp
sub
sbb
inc
jg
jae
into
in
ret
loop
lcall
out
imul
jl
mov
inc
cmp
sub
icebp
xchg
in
stc
jne
jae
pop
sub
and
cmpb
jnp
dec
lock
push
in
in
mov
jns
imul
jmp
dec
add
mov
sub
fistpl
add
aaa
data16
jne
mov
gs
lock
testb
add
jns
sbb
mov
aaa
dec
cmpsb
jns
jb
jge
call
jne
scas
or
sub
xchg
adc
insb
mov
and
jns
fdivp
jb
mov
jp
xor
xchg
cmc
addr16
pop
imul
popa
mov
das
xchg
ret
lret
or
outsb
imul
icebp
ret
enter
lret
idivb
inc
lret
iret
jnp
jo
popf
shrb
stc
aam
cmp
inc
ficomps
lcall
and
cmp
push
pop
fcomp
in
sahf
lret
inc
or
daa
arpl
or
lret
in
jl
and
dec
cmpsl
scas
imul
lret
sarl
pop
xchg
xchg
cmp
into
sub
cmc
adc
rolb
aaa
dec
out
mov
sbbl
and
dec
dec
mov
fs
add
add
jnp
sti
xchg
rol
imul
pop
mov
add
testb
add
dec
xor
lahf
inc
mov
jbe
out
fstp
mov
dec
inc
std
or
xchg
fistpll
popa
cmp
bound
mov
sub
fcomp
loop
add
js
jecxz
push
roll
xchg
xchg
aam
add
shll
imul
mov
push
stc
or
mov
jno
xor
or
mov
and
mov
add
sbb
pop
outsb
xor
daa
out
dec
sti
scas
ror
cmpsl
lret
fimull
imul
fldcw
stos
enter
cld
lret
test
or
sbb
push
mov
fcoms
mov
sahf
add
int
loopne
scas
adc
mov
in
in
xlat
mov
test
mov
dec
cwtl
aam
fnsave
arpl
pop
mov
dec
xlat
mov
test
pop
add
sub
pop
sarl
test
sub
repnz
testb
add
xchg
jp
repnz
stos
seta
stc
cmp
in
divb
add
sub
mov
xchg
jl
jbe
xor
mov
jmp
jnp
mov
cmpsb
jb
mov
xchg
subl
roll
add
lret
dec
cmp
push
xor
outsl
sahf
fdiv
ljmp
mov
xor
sub
adc
movsl
fwait
pop
add
mov
lcall
jae
ror
fiadds
push
mov
int
in
push
sti
lods
jbe
pop
mov
cmp
incl
shll
inc
pop
inc
dec
fnstsw
sub
rorb
ret
jb
mov
add
ret
pop
pop
add
push
lret
lea
arpl
in
es
rol
je
push
jnp
add
adc
jns
fistpl
lods
test
shlb
mov
add
repz
std
repz
xchg
scas
fldl
nop
pop
add
add
testb
add
dec
and
in
pop
lret
jg
fildll
add
mov
fistpll
aam
sbbb
push
cmpsl
test
dec
dec
lret
ret
lret
cmp
out
xchg
jp
hlt
nop
sub
lret
jl
mov
xchg
jnp
in
in
cmp
jecxz
jmp
cmp
ret
mov
in
movsl
cmp
mov
and
and
push
mov
xor
or
lds
xor
iret
popf
scas
xchg
cmp
ret
addr16
lret
test
push
popa
sub
sarl
lahf
aad
das
fdiv
aad
mov
or
cmc
jg
insl
leave
lea
jmp
push
sbb
jle
in
je
iret
test
jbe
andb
jp
into
or
cmpsb
mov
xchg
lea
aaa
mov
out
sbb
add
in
sub
cmp
or
add
add
testb
add
sub
testb
mov
jnp
cmp
pop
insl
xor
stos
sbb
imul
outsb
scas
test
testb
daa
fcmovne
push
xor
in
pop
loope
pusha
cld
je
jnp
mov
lods
shr
inc
sbb
or
lds
js
nop
mov
adc
jae
in
loop
in
repz
sbb
fucomp
mov
sub
outsl
jb
idivl
push
fimuls
stos
xor
xor
es
scas
mov
pop
fs
in
fs
enter
gs
xchg
mov
mov
je
mov
adc
mov
int
dec
fcompl
aaa
jmp
popf
jo
sbbb
imul
lock
out
push
adc
xchg
in
int
data16
repnz
and
and
nop
sti
mov
add
mov
mov
incb
in
hlt
add
testb
add
pop
mov
mov
icebp
cli
jnp
in
dec
cmp
pop
cmp
sub
pop
loopne
fstps
xor
pop
loopne
or
nop
mov
ret
pop
mov
mov
or
inc
jp
pop
nop
mov
jecxz
mov
lcall
mov
rcll
fwait
sbb
loope
add
push
push
jns
mov
pop
adc
xor
or
dec
add
push
imul
or
push
xor
sub
mov
lock
cmc
in
push
dec
pop
out
clc
divb
sub
in
lock
dec
int3
adc
fildl
ss
enter
xorl
push
jecxz
xchg
loopne
loopne
lcall
lcall
mov
dec
dec
inc
addb
dec
dec
jns
add
xchg
in
mov
pushl
comiss
cmc
add
testb
add
and
mov
pop
cmpsb
lea
mov
scas
ljmp
mov
fwait
xor
cld
xchg
cmp
pop
jp
cmp
pop
clc
fiaddl
test
cld
neg
xchg
and
jecxz
mov
add
sub
subb
rcrb
sub
sbb
out
cmpb
fisttpl
jnp
dec
mov
lds
dec
inc
lcall
fcoml
and
lret
mov
add
sbb
jne
sbb
xlat
sbb
xchg
lds
mov
mov
push
pusha
stos
fwait
dec
pop
daa
xchg
pop
and
inc
loope
sbb
sub
pop
sbb
scas
js
pop
pushf
and
mull
inc
or
sub
loope
ja
mov
mov
fimull
push
jl
ret
rorl
and
out
test
fsts
loope
add
inc
mov
in
negl
push
inc
push
xor
daa
ret
mov
testb
add
ret
add
sbb
aad
add
mov
mov
mov
inc
adc
xchg
mov
mov
sahf
scas
add
sahf
mov
movsb
push
inc
xchg
mov
and
mov
sbb
push
inc
xor
insb
mov
dec
pop
insl
repz
test
lods
push
xchg
mov
lret
cs
iret
add
push
mov
das
mov
jns
ret
cmp
fmulp
or
das
mov
in
les
sar
je
lock
jge
imul
pop
jle
movsb
jge
outsl
mull
ss
rcr
popa
ss
vmovd
sub
sbb
lods
xchg
sub
pop
mov
cmp
xchg
dec
xchg
dec
adc
jle
fildll
sub
sbb
mov
sub
sbb
dec
mov
popa
insl
xchg
mov
add
fistpll
nop
fmull
cmpsb
into
testl
add
cmc
xchg
call
xchg
negb
fucompp
insb
and
push
mov
dec
lds
push
fs
and
mov
and
xchg
es
int3
xor
ret
imul
mov
inc
push
jae
aaa
or
cmp
das
push
dec
push
sbb
push
aam
outsb
xor
pop
out
outsb
or
ficompl
lock
rcrl
adc
pop
pop
in
enter
mov
jl
add
out
jns
inc
test
add
pop
push
shrl
adc
inc
int3
fidivrl
push
mov
push
sahf
outsb
push
adc
es
scas
arpl
and
lods
in
into
xor
xlat
mov
into
inc
push
sbb
mov
cmp
das
ja
push
adc
jne
sub
repnz
jne
pop
push
out
imul
inc
add
cmp
mov
push
add
adc
xchg
clc
add
testb
add
cmp
add
push
jle
movsb
mov
sti
xor
push
fdivrs
sbb
adc
jmp
negl
sbb
ficompl
je
icebp
xchg
pop
inc
adc
push
jne
cmp
add
lret
clc
das
pop
cli
shlb
and
iret
mov
dec
push
int
stos
ds
scas
mov
lret
mov
test
mov
push
rorl
or
push
cltd
sub
data16
xorl
dec
mov
cmpsl
xor
test
dec
sbb
mov
enter
adc
lret
mov
out
xchg
lock
sub
movsb
add
lock
sbb
out
pop
outsl
push
stos
mov
and
jno
test
ret
jns
out
repz
gs
mov
into
and
add
out
repnz
add
pop
inc
xchg
pusha
push
mov
add
add
aad
dec
mov
add
aam
push
call
aad
add
cmp
lcall
ljmp
lods
mov
cmp
repz
lods
clc
jge
out
data16
ret
lds
faddl
fldcw
xchg
imul
jecxz
test
push
add
pop
push
in
fs
jae
push
dec
push
push
xchg
repz
popf
js
fwait
dec
jno
jl
mov
outsl
ss
shrb
addl
into
sub
in
sbb
jno
or
dec
mov
lret
icebp
xor
lret
jmp
cmc
ss
gs
hlt
jecxz
xor
mov
sbb
mov
sub
ror
pushf
int
sbb
jge
xor
out
and
push
add
mov
add
mov
push
decl
iret
std
daa
lret
add
testb
add
addr16
hlt
loop
cmp
mov
add
jbe
fadd
shll
clc
pop
mov
and
scas
jo
movsl
dec
ds
jp
pop
mov
pop
aam
xlat
aam
xchg
cmpsl
inc
inc
jl
push
out
mov
rcrl
add
jo
int3
adc
dec
adc
dec
add
hlt
dec
jae
cmp
cmp
in
aaa
fsubs
xchg
inc
dec
adc
xor
push
dec
lahf
clc
and
fwait
push
incb
rcpps
add
repz
das
mov
sub
and
push
mov
sub
dec
mov
scas
inc
test
xchg
rcll
pop
mov
rcll
cmp
add
add
mov
fcoms
sub
push
fisubrs
jp
call
jmp
shrb
imul
and
cmp
sti
fsubp
decl
ret
addl
icebp
sti
add
testb
add
pop
sar
sbb
pop
jg
in
mov
lock
std
fmull
clc
and
push
sahf
mov
sbb
pusha
movsb
pop
imul
mov
sub
scas
inc
or
jg
inc
push
push
mov
ret
xchg
mov
xor
js
clc
cli
mov
adc
pop
jge
flds
enter
jg
mov
xor
add
pop
int
sbb
push
ret
divl
dec
adc
adc
jne
cli
pop
jmp
mov
dec
data16
jo
sbb
mov
inc
sbb
sbb
cli
push
sahf
pop
imulb
xrelease
je
cmp
inc
adc
jbe
sub
sti
loope
jge
jb
add
cmpsl
test
cmpsl
adc
sub
add
rorl
mov
add
and
and
or
data16
jle
pushf
cld
add
testb
add
outsb
inc
bswap
js
outsl
shlb
loope
outsl
xor
mov
test
mov
lods
or
cmp
roll
cmp
test
repz
or
cmpsb
cmpsb
dec
fmull
ja
dec
adc
or
push
dec
cmpsb
lods
outsl
xchg
mov
lods
repz
mov
sub
jg
mov
and
pop
and
rcrb
cli
push
xor
lock
scas
sar
test
nop
inc
test
movsl
cmp
jmp
repz
add
add
int3
xchg
shlb
stos
inc
xchg
mov
lcall
jp
les
xchg
ret
daa
in
rorb
pop
jno
inc
lea
mov
in
pop
es
dec
fmuls
and
cmp
fs
adc
sub
rorb
lret
shl
xor
jae
pop
mov
pop
cmpsl
fadds
add
repz
ror
lock
jnp
jmp
sbb
stc
add
testb
add
inc
addr16
pop
inc
fnsave
ret
push
fidivrl
adc
mov
int
mov
and
and
inc
mov
in
sbb
repz
fsubrl
mov
pop
inc
fisubrl
jb
and
outsb
xlat
push
sbb
imul
mov
loop
fwait
jnp
adc
cltd
dec
pop
stc
jecxz
or
push
stos
jmp
jg
mov
fs
sub
fstpt
aad
inc
or
push
fsubrp
fstl
dec
mov
inc
xchg
adc
js
cvtps2pi
adc
inc
rcrb
push
fs
push
and
mov
lahf
pop
andl
les
pop
aaa
sti
dec
rcrb
popf
cmp
into
dec
push
das
add
and
repz
fimuls
mov
and
incb
add
add
add
adc
jo
inc
adc
test
xchg
add
push
inc
hlt
fdiv
mov
movsl
push
lcall
xchg
jmp
xor
xchg
mov
lahf
lea
sub
outsl
test
stc
inc
lock
sbb
mov
incb
xchg
and
mov
out
aaa
and
xchg
dec
pop
mov
push
imul
fnstcw
shr
push
jno
adc
aas
mov
push
mov
or
cltd
mov
aaa
mov
fs
popf
nop
mov
mov
push
and
fistpll
pop
mov
cmp
and
and
into
loope
xchg
mov
int3
cmc
xchg
sahf
or
inc
xchg
mov
jg
xchg
dec
rorl
je
in
push
aaa
add
addr16
push
lret
pop
dec
addr16
mov
mov
test
dec
testl
dec
sbb
add
out
xchg
jns
jo
stc
pop
jle
add
testb
add
sub
push
rorl
or
je
push
fildll
push
push
aam
pop
xor
mov
push
sbb
ror
dec
sti
sbb
xchg
push
cwtl
sub
sahf
mov
popf
in
fwait
xlat
mov
add
mov
sbb
mov
sbb
push
pop
lret
dec
cld
or
dec
dec
clc
test
mov
mov
push
mov
lahf
push
add
adc
mov
jp
adc
test
gs
xor
dec
jnp
pop
sbb
scas
sar
ja
cmp
dec
cmp
sbb
cmp
sbb
sbb
lret
bound
dec
faddl
push
outsl
sbb
hlt
xchg
repnz
sub
mov
das
and
or
xor
dec
std
mov
sbb
andb
add
scas
push
repz
cmc
scas
mov
jbe
je
add
testb
add
xchg
cltd
jge
dec
jne
mov
js
fs
pop
push
shll
fstl
jl
add
jns
sub
mul
and
in
loope
insl
in
call
add
scas
lret
pop
nop
add
push
rcrb
xchg
lcall
les
pop
out
out
cmp
cmp
sub
push
dec
aad
mov
movsb
pop
dec
js
das
out
fstl
rcrl
xchg
adc
dec
iret
pop
push
dec
test
push
cwtl
out
loop
pop
sbb
addb
mov
cmp
pop
shll
loope
andb
dec
roll
lods
mov
aad
mov
clc
push
leave
inc
sbbl
dec
xchg
adc
cmpsb
push
xlat
mov
outsb
pusha
mov
xor
add
pusha
rorb
lea
and
push
add
testb
add
pop
push
mov
lea
aam
aam
cmp
jnp
push
sub
repnz
dec
mov
mov
call
push
cmp
or
xchg
addr16
data16
xchg
sahf
imul
icebp
sbbl
movsb
cmp
inc
xor
xchg
es
lock
sub
subb
inc
aas
mov
jno
jne
mov
fiadds
push
xchg
imul
out
inc
mov
adc
leave
jne
pop
mov
pop
jmp
xor
or
cmpb
jmp
aam
push
imul
push
std
adc
inc
sbb
xor
adc
movsl
xlat
pop
mov
jne
mov
sahf
xchg
mov
jno
mov
jle
nop
loop
fistps
inc
jo
sub
and
fdivrl
add
jecxz
push
testl
jns
mov
testb
add
sarl
pop
pushf
pusha
mov
dec
aam
cmp
xor
push
cmpsl
or
test
mov
fbld
int3
repz
gs
xor
push
xor
dec
outsl
cmc
bound
pop
cmpsl
cmp
lcall
xor
jl
add
rorb
aad
xchg
in
sti
mov
fsubs
dec
xlat
mov
sti
inc
and
aam
dec
pop
fdecstp
fidivrl
lock
xchg
add
mov
sti
sub
push
mov
fiadds
clc
iret
shlb
mov
pop
or
mov
lret
repz
inc
mov
adc
lret
cmc
and
mov
aad
sbb
pushl
dec
pop
fucomi
pop
lahf
dec
fs
mov
sub
mov
jae
out
inc
add
and
daa
lahf
jle
sbb
add
add
add
add
push
mov
popa
mov
fwait
int3
lahf
or
lret
mov
jecxz
imul
rcr
loope
pushf
roll
pop
int
shlb
test
sbb
bound
cli
das
xor
adc
inc
sub
popa
cmp
push
addr16
loope
mov
pop
push
push
lods
mov
jmp
in
mov
mov
sbb
lahf
sub
mov
lahf
adc
xchg
add
pop
sub
add
or
cmpsl
nop
push
xchg
xor
aam
push
or
xchg
gs
jge
roll
mov
cmp
jmp
test
and
mov
sbb
and
ret
xlat
mov
icebp
cld
ret
or
and
fmull
adc
adc
xor
xchg
adc
pop
enter
out
ljmp
add
add
xlat
aam
push
sbb
dec
add
add
add
add
or
lahf
push
lret
or
enter
cli
push
imul
xor
arpl
scas
jmp
jecxz,pt
add
cmpsl
ficompl
mov
and
dec
int
nop
shl
sti
xorl
loopne
cmovns
inc
dec
out
insb
stc
jle
jno
pop
insl
jne
outsb
or
aam
lret
movsb
dec
cmp
push
add
pop
pop
out
aaa
inc
dec
sbb
cmp
sbb
or
push
jne
negb
mov
sahf
xor
test
xor
sbb
xchg
cmp
rcrl
shrb
pop
adc
sub
add
es
sub
insl
push
in
es
mov
cmp
xchg
cmpsl
ds
sbb
add
ret
and
sbb
aad
popf
pop
cwtl
cli
and
cmpsl
dec
cmp
jbe
push
inc
pop
jns
aas
fisttpl
inc
sbb
add
add
fcoms
adc
loop
add
js
cmp
jnp
jecxz
jno
and
enter
mov
pop
loope
pop
aas
add
fidivs
stc
out
xchg
add
add
or
rorb
call
and
mov
ljmp
dec
pop
and
dec
and
outsb
push
pop
sbb
in
lock
jmp
das
pop
inc
cmp
fwait
dec
mov
pop
adc
stos
outsb
push
add
mov
xor
and
xchg
sahf
xchg
cmp
inc
mov
or
cli
mov
jo
push
xor
add
loopne
sub
ret
push
int3
ja
and
cmp
pop
push
pop
notb
pop
rol
jns
inc
or
dec
jno
lods
and
sub
fsubl
shll
cmpb
orb
wbinvd
iret
pop
sti
ffreep
fldenv
push
lds
iret
stos
mov
push
fadds
add
jnp
mov
mov
add
testb
add
jmp
jp
jne
ljmp
aam
xchg
xlat
jle
or
js
push
adc
mov
jg
sub
and
movsl
das
std
lods
loopne
ret
jmp
lods
rclb
pop
sti
loop
jb
dec
mov
sbb
push
scas
adc
filds
lret
aam
mov
xchg
test
dec
fildl
jl
ret
add
lds
lea
and
inc
xchg
jmp
ret
pop
push
mov
mov
dec
push
add
xchg
sarb
cmp
jp
shll
outsl
sub
fdiv
lahf
iret
push
adc
and
and
aaa
jmp
icebp
lahf
mov
push
pop
sbb
mov
push
or
data16
xchg
sub
adc
ret
imul
imul
jae
scas
xchg
outsb
gs
ret
xlat
push
je
mov
cmp
add
imul
adc
aad
cmp
pop
add
testb
add
and
addr16
pop
enter
push
mov
loope
push
mov
push
mov
loop
mov
xabort
shrb
xchg
cli
add
clc
sub
sbbl
add
in
add
test
dec
cmp
frstor
call
push
sbb
mov
lret
push
pop
fnstenv
dec
pop
jge
pop
stos
pushf
mov
mov
js
add
out
pop
mov
mov
jns
push
xor
cmp
pop
nop
imul
xchg
std
or
mov
loop
jbe
test
cmpsl
sub
insl
push
sub
ds
arpl
xor
and
and
add
sub
xor
push
or
dec
jge
inc
mov
and
jge
jl
dec
mov
jno
scas
pop
add
xchg
mov
idivl
loope
mov
add
add
add
out
es
mov
pop
and
jle
jns
adc
jbe
ds
push
fwait
fwait
cmpsb
fistl
mov
xchg
adc
push
lods
stc
sbb
pusha
imul
popa
mov
push
hlt
push
mov
and
es
cmp
pop
mov
xchg
mov
stos
imul
roll
pop
test
mov
push
jns
cwtl
fisttpl
cltd
int3
lods
pop
movsl
xlat
xor
icebp
xchg
pop
out
cmc
sbb
repz
or
xchg
icebp
mov
imul
test
jno
sub
sbb
xchg
mov
enter
jmp
push
push
inc
jns
push
or
add
rorb
add
inc
mov
sbb
cmp
notb
cmp
dec
in
cli
jns
daa
je
in
xchg
add
test
mov
stc
mov
add
testb
add
mov
imul
das
xor
hlt
movsb
sub
sbb
mov
mov
pop
ds
and
iret
mov
jno
stos
mov
aas
icebp
xor
loopne
test
int
add
sbbl
mov
and
adc
scas
loop
outsb
sbb
stos
mov
popf
dec
sub
cwtl
cmp
movsl
xchg
stos
dec
aad
subb
mov
cwtl
or
sub
mov
or
add
jl
mov
rol
add
pop
xorb
cmp
test
xchg
mov
add
mov
cmp
jl
jnp
mov
pop
pusha
loope
lret
xor
rcl
mov
imul
in
out
add
xchg
add
adc
xadd
jle
mov
xchg
in
dec
xlat
lret
divl
in
in
daa
sbb
movsb
inc
xor
int
ds
mov
push
cmc
faddl
add
push
pop
push
jmp
sub
or
add
add
add
test
jns
pop
and
mov
adc
dec
stc
xchg
mov
mov
push
fstl
cld
int
jle
xchg
popf
gs
adc
imul
jno
push
lods
push
ficoms
push
and
or
data16
out
push
stc
pop
fisttpll
pusha
aam
cmp
into
jle
inc
push
sbb
std
cwtl
jmp
lcall
mov
cmp
mov
add
xor
sbb
jmp
out
fs
cmp
or
and
jbe
stos
dec
xchg
sahf
adc
xchg
subl
imul
push
cmpsb
sbb
fildl
lret
dec
mov
jno
pop
fdivrs
sub
std
inc
lock
jle
adcl
sti
cmp
fsub
lret
ljmp
sbb
addr16
dec
add
out
xchg
push
aam
sti
cltd
mov
push
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
pop
push
or
add
add
add
dec
mov
cli
outsb
insl
sub
in
dec
add
add
inc
hlt
aaa
ret
xor
mov
mov
das
test
pop
int3
lods
sub
lahf
add
sub
mov
sarb
inc
xchg
inc
aam
ss
cmp
test
cmp
xor
lret
sbb
es
notl
clc
stos
mov
push
jae
sbbb
inc
outsl
push
add
sbb
mov
repz
cmp
inc
xchg
sti
xchg
rcrl
imul
loopne
xchg
bound
int3
pop
mov
ja
shlb
sub
cld
adc
sbb
and
adc
outsl
dec
out
or
mov
les
xor
mov
inc
inc
xchg
mov
inc
sbbb
xchg
push
cmp
xchg
ss
clc
cmpsb
dec
ds
add
das
stos
cltd
inc
popf
jae
out
inc
dec
clc
jo
cmpsl
dec
cld
or
add
add
add
int3
xor
fistl
fidivs
push
pop
int
xchg
sub
push
out
sbb
xchg
pop
in
xchg
lds
add
xor
sbb
push
call
sti
mov
lods
in
and
jecxz
bound
lods
pop
fistl
mov
adc
pushl
lods
cld
cvtdq2ps
imul
jne
in
push
xlat
icebp
mov
jmp
out
test
test
mov
loop
pushf
mov
dec
lcall
into
daa
loop
ret
fcom
loop
mov
addb
lods
adc
sbb
jl
push
call
sub
mov
adc
sub
rcrb
daa
sub
xchg
pop
push
xchg
xchg
fildl
rcll
ds
add
hlt
mov
aad
add
aam
int
xchg
clc
pop
adc
mov
testb
add
pop
cs
dec
and
xchg
sbb
pop
fsubrl
xchg
pop
cmp
jae
mulb
add
out
pop
stos
insb
mov
jbe
xchg
flds
pop
xchg
pop
fidivs
sar
hlt
repz
mov
in
xor
lcall
xchg
insl
add
mov
dec
cmpsb
daa
pushf
or
sub
push
dec
sbb
sub
out
test
call
dec
mov
out
push
xchg
mov
xor
insl
pop
push
test
jle
sub
cmp
dec
xchg
add
mov
lods
adc
fwait
cmpb
mov
sbb
inc
xlat
dec
ficoms
cmpsb
ja
je
inc
mov
fs
xchg
push
outsl
test
loop
movsb
lcall
jle
push
mov
pop
or
push
lcall
shlb
jl
pop
loopne
add
pop
arpl
addr16
inc
jmp
inc
call
add
add
mov
xchg
inc
sahf
jecxz
lds
repz
std
xchg
push
jno
mov
scas
testl
out
inc
xchg
test
movsl
xor
push
mov
sbb
mov
fs
lods
outsl
cld
mov
inc
push
mov
jmp
pushl
repz
mov
fistpll
and
dec
cmp
mov
jecxz
sub
imul
sbb
cld
lock
loope
ja
pop
and
jno
add
push
aad
imull
xor
fsubrl
cltd
nop
mov
mov
push
pop
lods
mov
es
loopne
xchg
lret
movsb
out
or
stos
lods
adc
fldt
loopne
stos
inc
xchg
mov
insl
sbb
test
popa
mov
or
jg
dec
sbb
loopne
and
loopne
add
out
out
pushl
jecxz
push
into
push
fcomp
push
add
testb
add
push
mov
sub
or
inc
fistps
dec
test
loope
in
jne
cwtl
out
inc
adc
push
push
insl
lahf
sbb
sbb
push
ljmp
int
dec
pop
insl
add
icebp
push
mov
sti
fidivs
mov
clc
lret
xor
inc
xchg
loope
inc
je
lret
lret
adc
pop
js
bound
add
shll
pop
mov
pop
es
aad
sbb
push
es
dec
xchg
sub
std
pop
incl
jmp
adc
nop
adc
stos
out
push
push
aas
test
inc
pop
mov
and
les
icebp
push
or
ja
mov
or
fnstenv
cmp
dec
inc
aaa
iret
push
inc
imul
out
dec
movsb
add
les
fistps
roll
add
push
scas
out
mov
rcrb
sbbb
add
testb
add
mov
inc
mov
add
lcall
adc
in
mov
adc
adc
push
ficompl
out
or
loop
or
push
xchg
or
aaa
ret
add
aas
sub
cmpsl
jbe
xchg
int3
pusha
leave
aaa
test
lods
rcrb
inc
pop
add
or
stc
pop
mov
jge
jbe
rcr
mov
mov
inc
aam
and
jne
adc
jecxz
push
lock
xchg
lds
cmp
mov
addr16
add
mov
push
gs
mov
bound
xchg
call
pop
mov
xchg
imul
lcall
adc
mov
imul
push
in
sbb
pop
testb
loop
push
mov
add
xchg
and
movsl
mov
mov
cmp
scas
data16
int3
lret
add
add
add
sbb
push
fstl
stos
out
addl
mov
movsb
fidivl
sbb
mov
inc
inc
and
xchg
xor
inc
mov
scas
sbb
cmp
repz
lret
inc
push
jmp
stos
frstor
push
inc
sti
bound
push
es
dec
cltd
pop
jo
or
xorl
std
out
sbb
sbb
pop
dec
imul
fsubr
xchg
and
pusha
cltd
pop
fcmovu
dec
imul
test
inc
aas
adc
les
cmpsb
lahf
fimull
mov
fcomps
xor
or
mull
dec
jmp
fcmove
pop
or
mov
mov
mov
lahf
adc
ficoml
mov
shll
mov
imul
push
in
cmpsl
test
and
push
sub
testb
pop
ds
mov
repz
scas
push
inc
add
fdivl
mov
mov
adc
add
add
add
cmpsl
lret
sti
rorb
push
test
mov
push
test
mov
popf
fs
mov
aad
fnstcw
dec
orb
nop
mov
pop
cmp
into
loop
js
sub
ljmp
stc
int3
xchg
and
jnp
ja
testl
xor
shrb
outsl
sbb
push
call
neg
mov
scas
mov
js
add
aas
orb
jb
jb
xchg
ja
sbb
mov
xchg
out
jecxz
push
push
fsubrs
mov
aad
mov
bound
loop
cmp
push
loop
rorb
lea
jl
pop
repnz
in
dec
xchg
pusha
pop
lret
inc
in
insb
out
loopne
jb
pop
push
or
mov
inc
xchg
xchg
or
dec
ss
test
inc
stc
mov
mov
fidivrs
orl
add
testb
add
shl
push
fwait
add
in
pop
or
in
aad
pop
jns
pusha
xchg
jp
enter
push
jp
cmp
arpl
data16
push
insb
addr16
mov
xor
jnp
mov
and
or
cmpsl
cmp
imul
fsts
xchg
lret
mov
loope
sbb
insl
pop
lods
or
arpl
lods
mov
mov
pop
aaa
andl
xchg
aaa
sbb
jb
xchg
movsb
xor
in
cld
dec
pop
xor
aaa
lds
ljmp
movsb
aaa
popa
inc
and
cmp
cmp
ja
dec
sub
mov
outsb
jecxz
xor
push
iret
cmp
test
lods
jmp
mov
iret
sbbl
ret
pop
push
jnp
push
hlt
sub
icebp
xchg
pop
roll
sbb
sahf
int
push
bnd
jg
add
mov
or
lods
adc
add
add
add
xchg
mov
and
cs
shrl
bound
lret
cmp
mov
and
mov
filds
adc
jbe
sbb
dec
jl
ds
push
add
mov
fwait
sbb
daa
cmp
hlt
and
pushf
dec
cld
add
xor
lahf
push
test
stos
scas
adc
xchg
int
jecxz
clc
inc
imul
out
pushf
add
jg
jp
or
adc
outsl
pop
loop
adc
cs
jno
sub
sub
adc
xchg
into
sbb
mov
call
fists
and
cs
in
cld
mov
popa
aaa
loopne
push
bound
test
or
and
push
push
jmp
data16
or
sti
fs
add
fs
dec
and
add
hlt
fists
repz
mov
add
add
jne
xchg
mov
dec
in
leave
xor
fistpl
sub
scas
insl
jns
ret
and
ficoml
icebp
xchg
sbb
pop
xlat
int
cmpsl
or
mov
sub
out
cmc
sahf
dec
pop
cwtl
xchg
js
cli
pop
das
mov
dec
arpl
lea
cs
push
pop
jnp
or
mov
mov
pushf
outsb
fbstp
add
xor
adc
enter
add
les
in
and
lods
jbe
pop
cmp
add
lret
adc
hlt
xchg
xor
mov
jge
jns
std
into
aad
xor
aaa
pusha
mov
shr
ss
or
cmp
bound
jo
xor
pop
mov
and
movsb
dec
sbb
pop
xor
fsubrs
cmpb
aas
add
mov
into
fwait
testb
aas
push
add
testb
add
dec
add
out
mov
adc
pop
pop
xchg
cmc
inc
sahf
repz
fnstenv
pop
gs
xchg
or
hlt
mov
test
testl
xor
or
in
in
pusha
loopne
push
or
cmpb
fmull
sbb
mov
in
ljmp
xor
repz
sbb
and
adc
leave
xchg
dec
sub
fcmovb
xchg
mov
jecxz
repz
mov
aas
scas
mov
outsb
out
lds
jnp
sub
enter
push
ss
fadds
pop
cmpsl
test
push
jne
xchg
xchg
cltd
xchg
cmp
dec
loopne
sar
push
pop
xchg
cmp
ret
xlat
sbbb
adc
push
ljmp
adc
shll
adcl
dec
add
mov
cmp
outsl
mov
mov
pop
push
iret
and
jp
sub
jb
add
jl
test
out
mov
pop
mov
cmpl
testb
add
out
add
movsb
xchg
mov
push
fstp
lock
addr16
fsubrl
pop
pop
push
pop
decl
fsubl
jnp
call
jb
mov
lret
sbb
ret
pop
mov
sbb
out
jb
inc
das
les
xchg
jge
mov
sbb
push
push
aas
ljmp
insb
stc
test
lret
xor
addr16
add
cmp
mov
fdivs
test
xlat
movsl
add
dec
setl
leave
xchg
lret
inc
cmpxchg
rorb
in
inc
out
arpl
cwtl
je
pop
push
or
xchg
push
mov
mov
mov
push
popa
and
inc
sti
pop
outsl
mov
cmp
and
dec
mov
or
xchg
ficomps
mov
rorl
mov
int3
pop
shl
mov
jg
dec
or
or
mov
add
sti
inc
out
aas
mov
sub
daa
sub
test
add
testb
add
mov
dec
and
mov
and
dec
test
and
adc
cwtl
dec
pop
in
ds
inc
inc
sbb
notl
push
out
or
xchg
test
ret
jns
pop
jns
mov
roll
lahf
or
xor
popf
rorb
mov
fcoms
xchg
mov
inc
cld
add
mov
movsb
xchg
test
iret
lret
shrl
mov
mov
std
dec
pop
jmp
fbstp
xor
or
xchg
mov
fldl
sub
mov
gs
sahf
addr16
insb
jmp
mov
roll
addr16
fwait
dec
divb
popf
data16
lcall
jb
push
lock
mov
call
stos
and
roll
lret
xchg
js
cmp
and
sub
add
bnd
jp
xchg
inc
cmp
call
add
add
add
sub
or
pop
sub
call
scas
dec
or
adc
cmpsb
stos
iret
pop
jecxz
mov
xor
scas
xor
mov
cmp
popl
sbb
out
push
push
sbbb
mov
mov
and
cltd
out
lock
mov
xchg
pop
div
xchg
lods
sub
iret
lea
test
in
cltd
push
push
cvtps2pi
push
dec
mov
xchg
pop
sub
adc
cmp
dec
cld
or
cmp
ftst
sub
popa
or
xchg
push
push
mov
push
loop
rcll
mov
mov
or
sbb
cld
jnp
lret
loop
test
xchg
mov
sbb
xchg
push
movsb
aad
repz
mov
add
and
add
in
out
ja
fbstp
adc
iret
jo
add
testb
add
inc
orb
int3
mov
push
xor
mov
mov
dec
gs
jno
scas
fisubrs
sbb
inc
aas
movsl
push
mov
push
movsl
push
pop
cs
loop
xorb
mov
sti
iret
xor
movsl
out
lods
inc
clc
or
jl
imul
xchg
icebp
inc
sbb
xchg
add
and
and
dec
inc
or
lret
cltd
jmp
movsb
push
cmc
scas
jp
fwait
mov
sbb
test
xor
and
dec
push
movsl
bound
xchg
into
pop
loope
push
orb
xor
movsb
sbb
xor
into
xor
out
insl
lret
jbe
jb
insb
loop
push
in
mov
mov
fwait
jle
call
fsubp
bound
pop
filds
fnstenv
add
scas
test
in
enter
add
add
add
pop
das
stc
jg
push
push
dec
loop
mov
and
jecxz
sub
mov
mov
sub
sahf
scas
fstl
xchg
shrb
popa
mov
ret
mov
cltd
inc
stos
xchg
popa
pop
cmc
loopne
push
stos
arpl
shll
lcall
rcrb
cltd
sbb
add
add
mov
imul
xchg
push
mov
repnz
jb
int
mov
fmull
hlt
adc
rorb
lcall
xchg
mov
add
cmp
imul
sub
pop
jae
cld
data16
jmp
je
data16
push
pop
imul
cmp
fildll
sahf
push
or
rolb
mov
jg
or
push
mov
add
pop
xchg
insl
or
pop
push
push
and
xor
addr16
test
mov
add
jg
imull
push
divb
sbb
add
add
add
or
stc
mov
pop
mov
and
inc
cld
lods
cltd
sub
outsl
clc
adc
cwtl
insb
jl
call
xchg
shlb
push
mov
popa
xor
sub
jmp
pop
add
call
addr16
lea
mov
aam
mov
jg
fst
jle
mov
mov
push
aaa
ror
icebp
repnz
fidivs
icebp
leave
inc
adc
push
mov
mov
jno
sbb
push
stos
daa
dec
jp
xchg
xchg
ja
add
cmp
push
push
mov
xchg
fsts
xor
pop
addr16
fsubr
mov
xchg
sub
hlt
cwtl
dec
shrl
xor
test
pop
and
cmp
jno
mov
and
push
roll
adcl
push
inc
sahf
int
dec
lods
dec
push
mov
hlt
xchg
jb
js
add
add
cmp
sti
jg
and
in
xor
push
sbb
add
add
add
out
or
and
adc
test
xchg
lret
ljmp
insl
stos
sub
sbb
jle
push
xchg
jb
push
test
sbbl
fildl
dec
pop
lea
mov
sti
test
je
push
or
shlb
dec
sbbl
mov
adc
adc
fcompl
int3
scas
mov
cmp
mov
negb
scas
ror
sarb
pushf
arpl
shll
xor
mov
hlt
mov
mov
es
xchg
sub
into
cli
leave
clc
or
cmp
fildll
inc
sbb
lcall
aaa
xor
imul
adc
add
and
out
clc
xor
pusha
xor
push
pop
cwtl
add
mov
or
pushf
mov
add
jnp
fldl
mov
add
testb
add
fiaddl
mov
mov
jbe
xchg
or
push
nop
rcr
mov
adcl
popf
add
xchg
imul
mul
inc
imul
mov
mov
jae
dec
pop
inc
mov
inc
pop
movsb
fsubrs
js
orb
mov
adc
cmp
in
cmp
les
sti
out
mov
xor
cwtl
xchg
out
int
add
aam
sub
leave
in
frstor
push
mov
jl
test
pop
xchg
mov
fisttps
push
sbbb
push
jae
pop
scas
sbb
mov
shl
xchg
ret
ret
adc
in
sahf
or
ficompl
cmp
loopne
inc
sub
pop
nop
ds
popa
into
clc
dec
jecxz
test
bound
cltd
mov
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
ret
jo
ds
add
testb
add
cmc
jbe
aaa
xchg
cmpsb
adc
jecxz
pusha
push
jne
push
mov
add
xchg
out
sub
dec
mov
xchg
mov
jo
hlt
cmp
fcmovbe
mov
add
loop
and
pop
sub
dec
stos
mov
insl
mov
rclb
inc
mov
ljmp
mov
or
mov
xchg
add
call
int
inc
lock
mov
int3
cmp
cmpsl
mov
es
test
and
mov
mov
dec
xor
into
lcall
loopne
jno
mov
inc
in
add
push
adc
insl
adc
daa
pop
js
inc
shrb
push
adc
fwait
popf
aam
imul
cmp
xchg
jne
aaa
adc
and
cmp
add
jmp
loop
pop
lahf
add
testb
add
in
sbbl
sbb
imul
in
mov
xchg
test
inc
pop
sbb
lret
inc
bound
mov
ret
insb
sbb
bnd
in
pop
sub
mov
push
pop
std
and
push
jno
dec
jp
sub
imul
pushf
lock
push
xchg
clc
lods
cmpb
sbb
adc
test
call
inc
push
xchg
scas
sahf
adc
adc
sbb
jns
dec
xchg
pop
orb
mov
sbb
mov
adc
mov
jae
or
push
xchg
pop
int
fmull
out
test
add
pop
leave
ret
data16
push
pushf
repnz
loop
dec
cmpsb
pop
lret
fisttps
cmpsl
push
sbb
sub
xor
out
push
loope
jle
push
xchg
jbe
xor
lock
xor
xchg
lds
icebp
cmp
mov
and
add
add
add
outsb
je
scas
or
xchg
sti
sub
xchg
jbe
adc
fstl
jmp
inc
mov
loop
out
in
xchg
ret
mov
inc
or
shl
jno
xchg
mov
mov
bound
loopne
jge
mov
mov
pop
pop
lahf
adc
xchg
mov
int3
outsb
loope
ret
fbstp
mov
rsqrtps
lods
sbb
mov
cmp
add
std
test
inc
cmpsl
daa
outsl
popa
jge
scas
mov
in
imul
ret
push
xchg
mov
xchg
hlt
sub
fldt
add
test
lea
aaa
sub
ss
adc
push
stc
xchg
pop
mov
es
es
lret
push
xchg
inc
push
mov
jg
loope
enter
jecxz
jmp
sub
pop
adc
jg
add
cli
inc
jg
int
pop
sbb
out
aam
and
add
add
add
fsubl
jne
in
dec
adc
in
add
sbb
orb
push
int3
pop
int
lock
jns
and
out
out
cli
xchg
leave
jae
ficomps
mov
enter
pop
inc
jl
dec
push
adc
loopne
testb
stos
icebp
bound
outsl
shlb
cmc
inc
scas
popa
enter
xchg
and
rcll
jns
mov
adc
sbb
movsb
and
jmp
rorl
xlat
cmp
add
add
sti
imul
es
jns
sub
and
into
int
hlt
xchg
pop
fildl
mov
sti
sub
cmp
fimuls
sub
fsubrl
std
dec
xor
add
mov
out
icebp
iret
loopne
sbb
sti
in
adc
pop
or
aad
mov
stc
stos
jno
add
xchg
std
cmp
jle
fisttps
cmp
cmp
and
add
add
add
xor
and
scas
mov
mulb
xor
std
std
jecxz
enter
push
movsb
dec
mov
repz
inc
out
xor
popf
xchg
cmp
test
mov
mov
daa
cs
adc
jnp
or
xor
das
ss
sti
outsl
jl
int
scas
lds
mov
xor
fisttpl
hlt
xchg
das
xor
xchg
in
mov
adc
out
pop
loopne
ret
lret
cmpsl
xchg
imul
fcoml
in
scas
sti
rcll
sbb
mov
sub
insl
lret
data16
adc
test
cmp
pop
jbe
mov
push
xor
cmc
sbb
lea
sub
push
sub
jnp
loop
and
rorb
jmp
xchg
push
add
iret
xlat
ficoml
outsl
mov
or
add
testb
add
adc
pop
adc
mov
mov
cmpsl
mov
ljmp
mov
cmp
xorb
sub
add
xor
out
in
lock
or
mov
or
pop
icebp
xchg
ss
mov
push
dec
int
call
sbb
rcr
xor
cwtl
push
insb
loopne
push
xor
fistps
repz
lret
movsb
idiv
jmp
adc
sbb
mov
ja
inc
jl
dec
jge
mul
icebp
ja
shll
stc
cmp
das
cld
xor
mov
sbbb
lods
in
mov
lahf
clc
mov
dec
fisubl
or
aam
clc
mov
push
scas
xchg
cmp
cmpsb
add
test
in
movsb
mov
mov
cmc
jo
xor
dec
fidivl
ja
shr
pop
mov
add
dec
jmp
dec
scas
iret
outsb
jmp
rcll
repnz
in
add
add
add
add
clc
jmp
fs
in
jae
repnz
lods
pop
push
rcrl
xorb
sbb
cld
movsb
imul
iret
xchg
int3
repnz
and
push
push
push
outsl
test
sub
je
push
mov
pop
mov
mov
fildl
sbb
repz
add
xchg
cltd
lahf
imul
test
shlb
test
cmc
adc
jo
adc
inc
out
bound
adc
push
jae
popf
mov
mov
xchg
es
ja
adc
push
xlat
xchg
lods
push
loope
push
and
cmpsl
cmpb
movsl
rclb
fistpl
stos
nop
addl
cli
pushf
enter
loopne
jns
sub
out
test
sub
repz
mov
rcl
pop
subl
lods
popf
mov
cmpsl
nop
outsb
jmp
mov
and
mov
dec
xchg
test
add
std
sbb
stc
cld
or
je
test
testb
add
sub
sub
idivw
test
mov
mov
shlb
add
add
mov
int3
mov
mov
or
out
pop
sbb
xchg
and
repz
mov
div
add
and
sti
in
movsl
pop
mov
push
dec
cltd
mov
and
or
ror
inc
xchg
nop
fcompl
pop
test
std
pop
jbe
ret
in
in
fistps
movsl
ja
movsl
lret
scas
cld
popf
and
out
sbb
xchg
jb
push
push
mov
jb
pop
pop
push
mov
push
xchg
jns
lock
jne
dec
mov
repnz
js
mov
cmpsb
add
scas
mov
cmpsb
push
notb
hlt
lods
mov
jmp
iret
or
sahf
adc
ja
dec
or
add
pop
test
scas
repz
cld
cmp
jl
lods
les
testb
add
idiv
and
inc
sub
nop
cwtl
test
out
cwtl
xor
sbb
incl
daa
xlat
je
sub
or
lret
lret
sti
fdivrl
push
inc
cmp
loope
inc
lea
orb
outsb
adc
sbb
lcall
xchg
sti
add
rolb
scas
dec
mov
loope
aad
imul
xor
inc
adc
loope
mov
xor
sar
mov
xchg
lahf
pop
enter
mov
bound
push
adc
pop
add
mov
mov
xchg
int
lret
xor
xorl
mov
push
lods
cmpsb
push
pop
les
or
cmc
sbb
gs
daa
dec
aaa
test
cwtl
fcmovnb
cmp
cmp
adc
fldcw
hlt
aam
stos
nop
mov
into
aad
add
mov
dec
pushl
std
pop
movsl
xor
add
testb
add
into
stos
cmpsl
inc
sub
fstl
add
add
push
test
push
fdivp
and
pop
out
jle
add
adc
sbb
xchg
add
adc
stos
cmp
int
xor
mov
int
cmc
inc
xchg
fildll
mov
or
lret
andb
stos
out
inc
pop
out
xchg
sbb
push
mov
jge
push
dec
loop
shrl
adc
push
stc
gs
xchg
lods
loope
stc
pusha
adc
mov
xorl
flds
jl
in
dec
jae
adc
fwait
lds
cmpsl
dec
sub
into
iret
adc
xor
adc
xchg
sbb
icebp
jnp
cli
insl
xor
mov
sbb
mov
mov
dec
sbb
stos
insb
xchg
cmpb
lea
roll
pop
sub
inc
ja
pop
aas
pop
pop
inc
adc
inc
mov
add
add
add
add
fcompp
pop
into
and
adc
adc
xor
dec
sarl
sarb
or
dec
jno
movsb
fistps
pop
push
subl
repz
dec
nop
pop
mov
dec
fwait
out
stc
daa
nop
lods
fmull
sbb
xchg
shrb
daa
test
jmp
roll
jns
pushf
mov
cli
push
out
mov
pop
or
and
mov
lods
xor
xor
dec
add
sub
iret
dec
inc
in
je
hlt
lock
fs
cmp
adcl
or
sbb
pop
mov
pop
movsb
sbb
call
jno
lods
inc
imul
repnz
out
mov
add
and
push
jns
mov
dec
cwtl
stos
xchg
les
sbb
mov
in
xchg
andl
add
xchg
jae
ja
div
dec
lods
push
mov
fcoms
add
add
add
sub
es
push
lret
lahf
stc
jp
jmp
in
in
sbb
rolb
jbe
mov
and
push
xchg
inc
fdivrs
arpl
cmp
hlt
loope
xchg
in
fdivrs
adc
sbb
push
popl
out
or
cmpsb
shlb
add
cvtdq2ps
movsb
popa
dec
in
ret
jecxz
push
and
jo
jmp
popa
repz
mov
pop
out
idivl
inc
imul
xor
mov
pop
je
xchg
add
xor
inc
in
fistpl
jae
lds
xor
push
push
fstpl
pusha
or
cltd
and
adc
sbb
mov
fucomp
stos
inc
or
pop
fildll
ret
and
xchg
leave
in
cmpsl
mov
jne
pushf
add
aam
push
addl
adc
and
fs
lock
cs
cmp
add
xor
cli
std
jg
into
jno
add
stos
mov
sub
add
add
add
sub
lret
pop
cmpsl
arpl
and
dec
pusha
and
test
mov
sub
push
inc
je
out
lret
pushf
jnp
fsubs
call
aaa
adc
aaa
mov
popa
xor
in
xchg
cmpsl
insl
sbb
ftst
adc
sbb
iret
shr
mov
pop
andl
or
jbe
jg
push
mov
mov
and
ds
pop
addr16
mov
shrb
gs
push
scas
ds
inc
repnz
aam
jne
or
xorl
push
ljmp
push
mov
inc
jl
dec
push
stos
aam
pop
stos
add
sbb
pop
mov
cmp
neg
cmp
mov
test
mov
jl
lahf
pop
enter
push
ds
inc
cmp
push
add
testl
incl
sub
pop
daa
stc
mov
add
add
add
aaa
dec
push
js
cmp
push
ss
popf
cmpsl
mov
jge
mov
loop
jns
xchg
sub
es
repnz
jp
add
xchg
xchg
sbb
imul
mov
je
jne
xor
mov
mov
fcmovnbe
pop
out
jp
dec
sub
xchg
mov
scas
xchg
aaa
and
jmp
add
out
test
mov
stc
cmpsb
jle
inc
or
mov
xor
pop
xchg
loop
dec
push
dec
in
out
mov
pop
cmp
or
jp
xor
out
adc
mov
aas
mov
out
pop
movsl
imul
faddl
dec
mov
leave
inc
add
xchg
jmp
les
cmp
outsl
xor
stos
mov
and
test
xchg
adc
iret
jo
add
es
jg
pop
xorl
mov
lods
leave
mov
add
testb
add
and
cld
jno
pop
or
jae
jge
test
ljmp
fwait
mov
dec
pop
jp
jno
arpl
hlt
dec
in
pusha
cwtl
xor
orl
sub
inc
ljmp
xor
sub
xchg
adc
int3
fbstp
or
lret
int
xchg
mov
out
orl
push
xor
xchg
pusha
out
dec
xchg
dec
je
ror
sub
and
loopne
pop
movsl
mov
addb
xor
ljmp
cmp
cmp
adc
div
xchg
jno
popf
fists
cmp
xor
mov
scas
xor
rcrl
fs
jecxz
jmp
pop
js
and
cwtl
stos
adcl
xchg
pop
aam
mov
cld
add
push
clc
or
cmp
sbb
add
add
add
mov
inc
in
dec
ret
fxch
mov
fdivrl
xor
push
enter
sbb
imul
mov
sbbl
mov
test
adc
subb
lods
add
or
mov
fstp
mov
lea
movsl
adc
or
cld
frstor
test
pop
aam
or
mov
cld
jecxz
xchg
fcomi
lret
addr16
adc
xchg
out
push
movsl
imul
les
and
out
mov
jbe
push
jns
nop
dec
js
cmp
and
loopne
test
sbb
sbb
cmp
jnp
and
mov
lock
loop
mov
and
push
femms
pop
mov
add
xor
ja
vmwrite
sarb
sahf
sub
add
idiv
xor
pop
push
push
cmpsb
das
mull
mov
dec
scas
pop
sub
or
leave
mov
andl
call
sti
clc
iret
adc
inc
iret
imul
lds
adc
popa
loopne
sbb
dec
push
int3
imul
movsb
jle
cmp
flds
jnp
cmp
jl
and
and
adc
sbb
sub
push
sub
enter
jecxz
inc
adc
and
decb
movsl
out
sar
mov
aaa
inc
and
jge
adc
jp
repz
mov
cmc
dec
stc
test
cwtl
mov
clc
mov
mov
sbb
jo
aaa
outsb
lahf
popa
inc
ja
dec
data16
mov
mov
loope
arpl
xchg
std
mov
sub
push
stc
rcrb
shlb
push
jae
pop
orb
add
ficoms
stos
sbb
ljmp
pop
adc
add
testb
add
test
out
and
add
into
adc
or
inc
sub
shrb
pop
adc
push
leave
or
stos
sbb
addr16
sti
sarl
insl
sub
xchg
xchg
aas
dec
sti
insl
cmp
jmp
add
aaa
mov
or
pop
das
xchg
loop
mov
insb
cmpl
mov
cmp
arpl
stc
push
into
or
pop
enter
lock
mov
icebp
push
popa
aad
mov
push
inc
mov
mov
pusha
adc
repz
add
call
divb
xchg
cli
xchg
out
sbb
in
xor
pop
imul
in
sub
ss
popf
mov
pop
or
add
daa
sbb
inc
js
popf
pusha
jge
mov
adc
cmp
push
mov
add
in
out
sbbb
sbb
mov
add
testb
add
test
fadds
inc
jnp
or
lret
mov
ret
mov
hlt
jno
aam
cltd
insl
test
les
incl
cmp
mov
inc
sbb
xor
push
cmpsl
add
push
mov
out
lock
pop
xchg
rcrb
sbb
cltd
and
test
or
cmp
push
xor
mov
pop
dec
and
jmp
insl
pop
pop
xchg
dec
dec
in
mov
pop
je
inc
xor
stos
lea
shll
bound
insl
test
jnp
xor
mov
xchg
ds
dec
mov
jg
ss
dec
jmp
negb
scas
lcall
sub
fidivl
mov
call
rorl
sub
popl
add
sbb
out
aad
jo
sub
xor
add
add
add
scas
popf
repz
dec
cmpsl
pusha
outsl
or
cmp
push
cmp
dec
push
pop
pop
inc
mov
ljmp
jge
inc
pop
push
jns
lret
sbb
hlt
into
mov
xchg
add
cwtl
or
jnp
les
repz
stc
jmp
loop
mov
int3
pop
fs
jb
dec
mov
cmp
insb
aas
xchg
test
es
adc
rcll
inc
pop
jmp
je
call
int
andl
stos
clc
clc
mov
jno
subb
sub
xchg
sub
addr16
addr16
shlb
cwtl
push
out
dec
adc
push
mov
lret
inc
icebp
adc
mov
scas
mov
xor
xrelease
mov
cltd
mov
or
jmp
subb
popa
dec
add
jecxz
ja
pop
inc
jno
lcall
aam
add
cmp
out
dec
lret
fstpt
jbe
add
testb
add
cli
stc
fistpl
mov
pop
pop
cmp
push
lahf
and
pop
add
outsb
loop
jmp
ljmp
int3
sub
jb
jmp
pop
mov
ret
ss
dec
out
mov
mov
inc
insb
pushf
icebp
push
sbb
dec
jne
dec
jle
jg
cmp
jmp
jle
mov
les
in
lock
or
add
and
jns
xchg
xor
push
in
enter
lea
int
clc
pusha
int3
mov
imul
outsb
lahf
inc
pusha
dec
leave
xor
addr16
or
inc
in
movsb
ss
fwait
and
adc
fcompl
mov
jnp
sbb
xchg
sub
out
enter
ret
mov
inc
cmp
nop
loop
ret
daa
sbb
pushf
pusha
jl
add
cmpsl
jne
add
test
sbb
out
add
lods
xchg
and
bound
add
add
add
imul
call
lcall
jo
dec
jno
aam
fistpl
sub
jnp
in
popa
shrw
cmpsb
loopne
mov
and
sbb
or
inc
mov
sbb
sub
xor
loope
mov
mov
or
cmp
xchg
adc
fsubrl
push
outsl
sub
lmsw
or
xchg
pop
je
sub
rorb
mov
jbe
into
jmp
sub
mov
lea
stos
fiadds
ret
mov
lods
insl
push
push
ds
push
inc
nop
mov
xor
xorl
and
movsl
in
xor
sbb
mov
xor
and
in
mov
arpl
push
and
pop
mov
inc
and
popf
addr16
loopne
add
mov
dec
idivl
cld
add
adc
cmpsb
bound
add
testb
add
bound
adc
aaa
pop
dec
sbb
cli
out
nop
inc
std
mov
xor
jbe
jge
xor
cmpl
mov
data16
xchg
gs
repz
dec
inc
or
fstpl
xchg
jne
sbb
jl
and
jo
in
push
lret
jmp
sahf
sbb
cmp
lret
dec
xor
mov
lret
outsb
ja
xor
lcall
cmpl
adcl
ret
sub
xor
call
xor
or
xor
sbb
ds
mov
shlb
aaa
cli
mov
and
sbb
jl
sbb
add
mov
dec
mov
in
or
cmp
in
inc
cmp
loop
nop
lret
xor
push
add
ret
mov
iret
mov
sbb
out
pop
xor
add
add
add
mov
sub
cmp
pop
sbb
in
cmp
cld
push
push
das
enter
sbb
adc
and
cmc
add
pop
ficompl
outsl
js
sbb
push
fistpll
cmp
mov
mov
sahf
cmc
incl
jae
push
push
les
jns
int
sahf
les
jge
sbb
sbb
loope
xchg
adc
fwait
push
ds
jns
das
jge
arpl
movsl
xor
jne
ja
imul
sub
cltd
mov
in
mov
cli
aaa
lret
in
hlt
add
ja
cmp
insl
mov
mov
xchg
xchg
adc
fidivrl
test
popa
fdivrl
insb
and
mov
inc
dec
xor
pop
loop
inc
les
mov
sbb
fs
lods
jmp
push
cli
out
mov
push
loop
dec
mov
sbb
mov
add
add
mov
sbb
test
xor
add
pop
adc
cmpsl
mov
xor
loop
roll
pusha
sbb
push
mov
xor
cmpsl
jg
pushf
movsb
js
fs
push
in
and
mov
mov
pop
mov
inc
test
xchg
push
cmp
hlt
insl
lcall
inc
outsb
rcrb
sbb
xor
repz
pop
hlt
pop
sub
insl
rcrb
inc
fwait
pop
jg
mov
or
dec
pusha
idivb
sub
push
xchg
movsb
sahf
iret
push
cwtl
adc
mov
les
stos
or
sbb
inc
dec
sub
ret
insb
andb
xlat
push
repz
inc
rolb
mov
nop
and
es
mov
sbbl
push
cmpsb
adc
jmp
bound
stc
cld
jl
xchg
je
cmpb
add
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
data16
inc
add
testb
add
addr16
mov
imul
dec
or
pop
xchg
js
push
test
cmp
roll
dec
mov
mov
mov
and
stc
ljmp
sbb
shll
push
push
in
mov
lea
adc
jnp
insb
fmull
pop
and
mov
mov
popf
mov
imul
arpl
loopne
xor
cwtl
xlat
add
jle
fadds
popa
adc
ds
rcrb
iret
push
adc
insl
add
xchg
insb
xor
push
imul
repnz
xchg
cmp
inc
mov
xchg
scas
dec
mov
stos
inc
fmull
fisubl
mov
shrb
push
repnz
pop
jl
fcomps
push
jp
pusha
mov
sub
jmp
cs
hlt
in
rcrl
lahf
add
test
imul
push
lcall
cmp
add
testb
add
adc
pop
jp
sti
test
xor
push
sub
iret
mov
out
xor
xchg
dec
testl
sub
loopne
test
imul
cli
pop
lods
lds
cmp
xchg
out
sbb
and
cmpsb
xchg
xor
add
pop
cwtl
clc
lcall
mov
inc
inc
mov
add
fsincos
push
jg
loope
arpl
icebp
ss
jns
hlt
xor
test
sahf
cmp
xor
call
xor
sbb
dec
popa
cmpsl
push
inc
mov
outsb
cld
dec
add
push
test
ds
mov
cmp
mov
sbb
outsb
aas
mov
pop
loope
popa
rcr
jno
mov
push
mov
push
mov
mov
jae
out
movsl
push
nop
xchg
add
add
es
data16
cmc
jle
dec
push
cmp
add
add
add
sarl
imul
outsb
add
cmpsl
movsl
rolb
adc
icebp
pop
push
push
mov
cwtl
add
or
jno
pop
sbb
xor
push
pushf
hlt
adc
mov
sub
and
push
push
mov
popa
aad
inc
int
xor
rcl
int
andb
add
sbb
push
push
fmuls
jmp
mov
in
cmp
std
mov
xchg
sub
rorl
aas
inc
lret
push
fisubrl
clc
in
xchg
push
inc
das
sbb
jle
inc
push
popa
add
dec
vpshufhw
mov
inc
sub
or
xor
or
cmp
loop
sbb
sub
dec
push
lcall
mov
mov
ds
inc
int3
lcall
clc
mov
fldcw
cwtl
cmpsl
subb
outsb
cmp
add
add
add
fldt
jns
mov
nop
mov
movsl
sbb
pusha
pop
sbb
fldt
mov
or
loope
cmp
mov
and
int
mov
jne
stos
pop
mov
incb
call
cmpsl
sbb
pop
dec
and
jl
sbb
mov
je
aas
sbb
mov
cmc
xchg
mov
push
cmp
idivb
into
loopne
inc
jns
pop
dec
dec
mov
jecxz,pn
rclb
iret
in
and
dec
push
arpl
daa
inc
mov
and
cmp
xor
sub
out
dec
jmp
xchg
fistpll
inc
inc
mov
and
xchg
mov
pop
dec
sti
in
es
add
scas
mov
or
aaa
jnp
stos
stos
and
insl
sub
lock
lods
mov
shr
xchg
xchg
popl
add
and
push
sti
cmpsl
pop
push
jo
pop
jp
adc
cmp
add
add
add
jmp
jns
js
sub
fxch
mov
sbb
aam
cli
inc
inc
lcall
scas
and
mov
in
nop
outsl
in
mov
add
stc
dec
dec
cli
pop
sub
lret
dec
jb
mov
pusha
sub
adc
shrl
jb
sbb
and
sbb
push
sub
mov
pop
dec
pop
ret
sbb
xorl
push
fwait
push
int
xor
pushf
pop
sahf
mov
addb
fwait
xorl
add
movsl
scas
xchg
dec
pushf
push
sahf
ficompl
lock
mov
sub
xchg
imul
lods
mov
add
dec
xchg
movsl
xorb
addr16
outsl
inc
mov
add
pusha
lods
dec
pop
or
adc
mov
add
push
and
std
cmp
cmp
cmp
add
add
add
adc
scas
hlt
out
and
out
loope
ljmp
popa
cmp
sti
cmpl
push
jecxz
and
mov
pop
push
loop
lret
adc
and
sub
cmp
pop
pop
dec
cmpsb
sbb
cli
mov
test
int
pop
int3
adc
int
aaa
mov
repnz
ror
arpl
sbb
test
sahf
mov
ret
xorl
pop
push
pop
addr16
xor
insb
push
icebp
ljmp
jg
pop
add
out
xor
mov
dec
xor
fsubr
cmpsl
pop
into
push
imull
mov
gs
sti
popf
movsl
imul
xchg
je
std
mov
insb
pop
sub
insl
data16
or
pop
xor
push
sbb
push
xchg
mov
into
jmp
adc
clc
jmp
lds
xchg
and
push
or
or
add
add
add
sub
xchg
add
aad
xchg
cmp
in
flds
inc
and
mov
pusha
sbb
ljmp
cmp
sarb
das
sbb
jge
mov
jg,pn
out
fmuls
jecxz
and
or
inc
in
push
pop
pop
mov
inc
loopne
fmull
icebp
xor
sub
inc
jno
push
adcb
repnz
scas
push
scas
push
test
mov
xchg
mov
sub
out
cmp
mov
aas
ret
xchg
mov
mov
insb
in
out
loopne
adc
cmp
dec
lds
fildl
nop
pop
and
aam
rcll
negb
add
pop
add
sbb
or
sbb
jl
xor
les
xor
mov
fld
xchg
xchg
cli
jae
sbb
sar
xor
nop
in
add
add
xchg
ficomps
push
pop
stc
cmp
add
add
add
push
scas
mov
dec
mov
mov
mov
dec
cmp
mov
xchg
mov
xor
dec
orl
mov
mov
jecxz
aam
movsl
xor
adc
pop
sbb
push
or
insl
push
mov
inc
out
mul
adc
out
addr16
loope
popf
mov
loop
adc
aad
pop
test
in
mov
sub
xchg
sub
int
dec
mov
pop
outsb
insl
jmp
fwait
out
test
fstpl
sahf
jecxz
pop
loope
mov
push
adc
push
inc
xor
mov
les
rol
and
ja
std
or
fcomps
mov
mov
mov
outsb
push
mov
xor
loop
scas
in
scas
es
xor
mov
arpl
ja
repnz
add
push
hlt
cmp
add
scas
push
dec
xchg
dec
lods
xor
and
sub
sbb
iret
push
mov
cmc
mov
in
out
dec
hlt
fiaddl
addb
test
test
sahf
dec
and
or
push
insb
cmc
add
dec
cmp
mov
mov
adc
shrl
mov
movsb
mov
sti
mov
pop
or
inc
mov
movsl
loope
test
cmpb
lret
or
outsb
jae
les
push
jno
push
and
hlt
pop
jl
mov
mov
mov
or
mov
repnz
add
jle
dec
pop
pusha
mov
jle
les
ret
sub
mov
mov
mov
mov
dec
test
test
mov
or
add
in
add
lret
mov
cwtl
sbb
adc
add
testb
add
add
aas
imul
dec
mov
lods
mov
xchg
rorl
dec
pop
mov
jbe
and
loop
pop
pop
push
adc
stc
push
push
or
ficoms
or
jo
shl
out
cmp
sbb
xor
push
js
fildll
les
imul
mov
xor
mov
into
into
addl
testb
pop
and
fdivrl
sbb
sub
xchg
and
in
xchg
insl
and
std
inc
xchg
rcrb
testl
cmp
sbb
pop
fsub
jno
outsl
into
lea
mov
dec
pushf
pop
insl
mov
and
cmpsl
push
mov
or
enter
shrd
xlat
sbb
mov
pop
in
pop
out
lret
in
mov
sub
dec
mov
mov
dec
test
add
sti
pop
jge
div
cmp
or
aas
add
testb
add
inc
sbb
int3
sub
pop
push
adc
xchg
and
mov
cmpsb
lock
icebp
xchg
push
orl
imul
insb
mov
add
pop
es
mov
or
xchg
jle
xchg
jno
lcall
and
enter
out
xlat
paddb
jne
in
call
fcmovne
jp
or
mov
insb
in
roll
or
rcrl
jle
repz
jmp
add
inc
jmp
roll
mov
sahf
sbb
in
sahf
fnstsw
mov
cmp
inc
inc
bound
add
loop
or
pop
inc
out
icebp
fnstcw
cmp
mov
xor
cmpsl
or
inc
arpl
sub
mov
es
popl
mov
jns
jp
or
dec
cmp
mov
lcall
add
pusha
cltd
fsub
std
in
popf
jle
es
mov
add
testb
add
inc
aad
mov
mov
aad
lret
pop
or
dec
sbb
into
insl
jno
dec
push
push
or
int3
aaa
pop
xchg
mov
leave
out
aam
aam
loop
sbb
outsb
mov
fcomip
mov
nop
movsb
add
push
jb
jle
xchg
jg
addr16
cmp
sbb
std
sub
dec
add
lds
std
mov
xchg
lds
push
adc
push
repz
call
mov
push
push
pop
pop
mov
popf
imul
cmp
cli
jg
xor
jo
inc
loopne
and
loopne
cmp
pop
lock
lahf
enter
fsubs
xchg
dec
in
jnp,pn
fwait
xchg
dec
fs
cs
in
and
xor
dec
dec
cltd
add
loopne
mov
bound
or
int3
jecxz
xchg
jno
stos
add
pop
jp
jnp
sti
xchg
jle
popf
loopne
sbb
push
mov
testb
add
outsl
or
test
out
bound
imul
mov
fucom
daa
ret
xchg
mov
push
xchg
xor
cs
add
jge
adcl
sub
dec
imul
mov
mov
cmpsb
push
ljmp
outsl
addr16
cmc
mov
pop
push
leave
sti
xchg
hlt
loop
in
lcall
cmp
outsl
jmp
push
adc
sbb
sub
out
imul
sbb
or
movb
sub
xchg
shr
loopne
push
sbb
push
ds
jbe
dec
pop
gs
add
clc
sub
xchg
sub
int3
imul
inc
inc
add
mov
mov
dec
cmpsl
push
add
mul
add
mov
pushf
insw
inc
mov
imul
shrb
nop
push
mov
or
std
insb
xor
add
mov
push
sti
loopne
cmp
adc
gs
inc
add
testb
add
aaa
fildl
jl
es
jno
aad
mov
dec
jl
into
or
stos
pop
cmp
int
inc
dec
outsb
in
aaa
fistl
stc
ret
sbb
xchg
sbb
jl
daa
sbb
pop
hlt
lcall
lods
imul
movaps
mov
and
xchg
ljmp
popf
jbe
sbb
dec
repnz
pop
aad
push
adc
sbb
mov
jnp
test
xchg
jmp
das
fmull
lods
add
dec
pop
lcall
sarb
outsl
sub
popf
outsb
and
xchg
icebp
adc
fwait
jp
cmp
fistpll
int3
ds
imul
fbstp
inc
js
shll
repz
inc
inc
xchg
adcl
mov
out
or
into
sti
sar
ret
addr16
dec
in
lods
icebp
add
push
ret
cmp
and
push
dec
jp
test
mov
add
add
or
hlt
scas
xor
es
leave
ja
ljmp
test
mov
adc
lea
mov
mov
dec
sbb
pop
push
shrb
popa
jns
jmp
es
fadd
lock
cmp
hlt
lds
add
and
mov
ret
es
shlb
jl
push
cmp
rol
mov
push
mov
adcl
sbb
jns
pop
das
imull
and
push
mov
cli
mov
std
xchg
imul
and
imul
inc
rcll
push
pushf
fs
push
pop
lds
or
fcomip
sar
jp
xor
mov
nop
loope
lahf
push
xchg
repz
sub
aas
and
dec
jp
push
aad
pop
inc
fnstcw
ljmp
loope
jno
inc
pop
add
pop
ficompl
mov
push
pop
in
fsubrs
adc
add
incb
ljmp
jecxz
sub
testb
add
int3
outsl
mov
sbb
ret
pop
sub
xchg
fisttpl
sti
fs
xor
cld
fidivl
pop
and
scas
filds
ds
add
stc
ljmp
pop
cmp
dec
mov
ret
mov
icebp
fsts
pop
movsl
adc
or
sti
add
xor
push
push
push
sbb
ss
lcall
test
or
pushf
addl
mov
mov
mov
jae
jns
stos
add
lret
hlt
jo
mov
xchg
mov
call
push
inc
lods
arpl
push
xor
pop
ja
outsl
cmp
inc
cmp
xchg
cmp
arpl
and
js
lock
push
inc
mov
xchg
add
sub
push
leave
add
mov
add
divb
rclb
mov
clc
cld
movsb
inc
add
testb
add
mov
test
inc
or
pop
fwait
cmp
leave
es
lods
lret
push
mov
fdivrl
popf
mov
test
fwait
xchg
cmpsb
fwait
call
xchg
int
dec
dec
notb
aad
out
push
call
xor
sbb
mov
push
dec
rol
lahf
repnz
pop
les
inc
gs
pop
stc
aas
mov
xchg
or
ret
lea
repz
jno
or
xor
add
fisubrs
cmp
repz
jnp
pop
push
or
mov
scas
int
int
pop
lret
ja
call
sub
sbb
call
inc
test
pop
inc
jg
inc
add
iret
int
jb
xchg
cld
push
or
xchg
jmp
movsl
js
fidivrl
mov
add
dec
cwtl
mov
mov
mov
clc
push
scas
xor
fldl
add
jbe
idivl
ss
repz
inc
add
testb
add
lods
and
out
imul
jno
repnz
ret
push
cwtl
scas
mov
movsl
xor
test
out
add
xchg
mov
stos
sub
testl
mov
lock
clc
lahf
lret
sub
out
std
sub
subb
pushf
mov
in
enter
popf
daa
sarb
cmp
dec
loopne
mov
push
enter
inc
sbb
mov
mov
mov
add
jbe
jg
insl
jge
inc
sub
aam
fwait
rorb
mov
push
inc
dec
cmpb
xchg
lods
xor
fsubrs
cmp
cwtl
clc
pushf
inc
cld
xchg
shl
add
bound
in
ss
xor
fsubrp
mov
mov
pop
test
pop
mov
dec
sub
push
jl
dec
cld
cli
loop
push
fcmovnu
mov
jb
mov
mov
add
outsb
sub
stos
fs
cmp
xor
nop
inc
add
testb
add
in
push
loopne
sub
push
sbb
push
dec
rclb
out
out
dec
cmp
jbe
cltd
sete
mov
or
aam
cmc
int
fwait
into
arpl
pusha
sti
jmp
pushf
enter
out
adc
mov
out
push
fstpt
fisttpll
test
imul
cmpsb
xlat
mov
lret
xor
icebp
es
rclb
stos
push
push
xlat
fs
dec
mov
std
fistps
xchg
push
pop
and
sbb
pop
mov
mov
into
add
out
sbb
push
rcrb
jns
pop
loopne
jp
ss
in
hlt
clc
pop
push
inc
aam
pop
int3
fists
xor
cmp
ror
add
and
sbb
test
add
adc
cmp
sbb
mov
shll
cmp
cltd
pop
rcll
stos
pusha
xlat
adc
cmp
xchg
in
ja
add
les
scas
fistpll
loop
mov
dec
add
testb
add
repz
bswap
jmp
gs
shl
fwait
out
out
ffree
sbbl
lock
pop
cmp
cld
imull
jno
test
mov
mov
insl
loopne
add
inc
pop
idivl
call
and
add
fs
arpl
sub
jb
ds
aad
fs
jb
push
sub
int
ss
jbe
cmp
inc
orb
inc
push
scas
js
ffree
pushf
xlat
xchg
xchg
fsubrs
adc
loop
scas
cld
out
shrl
flds
rcrb
les
mov
jnp
fcompl
negl
mov
sub
js
ds
inc
jmp
mov
mov
stos
test
mov
in
and
push
inc
cmp
mov
int3
cwtl
and
add
cmp
les
dec
add
testb
add
inc
mov
inc
and
sbb
dec
aam
cmp
aaa
add
mov
cmp
push
xchg
cltd
push
clc
insl
adc
sbb
sbb
push
ficoml
adc
or
outsb
inc
dec
and
pop
cmp
sbb
cltd
and
scas
addr16
cltd
push
dec
xor
lret
pop
scas
pop
cmp
sbb
into
fidivs
and
ds
lock
data16
js
pop
sbb
sahf
sbb
mov
dec
fistps
fcomps
or
mov
inc
daa
repnz
and
imul
into
or
xor
cmp
mov
mov
sub
dec
jge
adc
mov
in
dec
in
pop
sub
decl
mov
mov
inc
pop
arpl
mov
cmpsl
mov
pop
add
outsl
lret
mov
out
incl
arpl
and
jecxz
jb
add
testb
add
ret
addr16
or
fisubl
push
mov
push
lds
mov
or
push
push
mov
mov
sbb
out
pop
lds
enter
in
push
and
neg
lds
cmp
ret
xchg
icebp
dec
hlt
cmc
loop
mov
mov
and
adc
addr16
sub
push
xchg
and
push
adc
mov
and
idivb
mov
lret
mov
or
out
or
and
aas
stos
push
shll
add
and
xchg
cwtl
sub
push
sbb
cwtl
hlt
xchg
and
mov
xchg
inc
fwait
enter
jg
lcall
nop
push
cmp
sub
dec
add
loop
cmp
das
xchg
mov
xlat
pop
je
and
lods
jbe
pop
mov
add
repz
cmp
lods
repz
in
pusha
out
aas
pop
cmp
push
add
add
out
push
cmp
mov
jmp
cs
cld
stos
xlat
pop
pop
mov
into
and
cwtl
out
inc
sub
dec
xor
add
dec
pop
sub
test
mov
mov
dec
repz
dec
inc
je
add
lods
jg
or
bound
push
scas
faddl
xchg
mov
mov
in
or
push
sbb
and
inc
jmp
test
push
stos
negb
test
js
test
push
movsb
inc
dec
add
fisubrs
xor
push
sbb
push
je
mov
scas
cmp
loope
push
mov
in
test
sbb
int
and
inc
pop
test
inc
push
or
or
lret
icebp
mov
push
mulb
jmp
add
or
sbb
mov
xor
mov
and
dec
fbstp
mov
add
daa
push
cld
push
std
jmp
push
jg
push
fdivr
add
dec
add
testb
add
ljmp
imul
mov
or
pop
cmpsb
orb
pop
jb
sub
xchg
jne
lcall
pusha
dec
pusha
imul
sub
mov
leave
mov
mov
jecxz
pop
lods
lods
and
or
pop
cmp
cmp
les
add
sbb
shlb
lcall
pop
fld
scas
jl
mov
in
mov
int3
lods
imul
pushf
dec
test
mov
out
js
cmp
loop
inc
mov
mov
cmp
xchg
xor
adc
push
cmpsl
cmp
into
mov
into
fwait
sub
xlat
in
jae
lea
dec
inc
fdivrl
data16
dec
cmp
pop
out
add
jae
mov
outsl
inc
sub
mov
lods
repz
push
jb
jle
add
dec
push
add
sbb
dec
push
cwtl
adc
std
lods
fists
add
add
add
mov
lds
inc
mov
add
mov
mov
xchg
cld
jne
out
add
or
sub
jnp
xlat
push
add
mov
cmc
adc
push
jmp
fcomip
pop
mov
adc
jl
fsts
aas
mov
int3
lds
mov
jae
add
cltd
sub
xor
in
aas
fmull
jbe
adc
sub
icebp
popa
shlb
aam
sbb
outsl
pop
add
ljmp
inc
mov
pop
push
push
push
outsl
ret
pop
fs
lods
stos
test
pusha
test
in
adc
cmp
cmpsl
and
dec
xchg
pop
mov
fsub
or
pop
stos
inc
jnp
jae
xor
and
pop
jge
sub
out
fdivrl
sub
push
ret
xchg
push
loop
stos
fs
lods
add
stos
add
push
mov
mov
jmp
dec
dec
add
testb
add
and
fs
sbb
pop
ficomps
sbbb
test
mov
std
dec
fbstp
daa
lock
clc
shll
rolb
bound
fisubrs
and
mov
into
dec
movsl
mov
fs
or
push
inc
mov
stos
sub
jo
call
xchg
cli
or
mov
test
add
icebp
das
sbb
sbb
dec
pop
cs
cmp
fstpt
xlat
jl
sbb
out
les
scas
and
pop
push
mov
lock
into
loope
inc
fwait
jnp
jae
ret
mov
gs
push
add
hlt
pop
jg
xchg
pushf
pop
xchg
adc
outsl
cli
fwait
dec
dec
push
sbb
fadds
pop
mov
leave
cltd
nop
or
scas
mov
add
popa
cmp
cmp
add
jg
xchg
lcall
call
testb
add
mov
pusha
aas
pop
mov
lds
xor
mov
mov
loope
stos
testl
lods
jbe
roll
inc
scas
jle
adc
in
pop
gs
mov
cmp
adc
lcall
and
mov
mov
push
push
add
xlat
scas
push
inc
loopne
cwtl
fwait
pop
into
loopne
cmp
xchg
das
inc
nop
sub
sub
shr
jb
aas
and
jne
jp
mov
in
mov
stc
shlb
xchg
inc
pop
repz
push
ljmp
cwtl
out
push
in
sub
insl
cmp
shrb
sbb
jle
push
cmc
xor
das
es
mov
dec
sub
sbbl
jno
cmp
mov
pushf
jle
mov
mov
insl
movsb
xor
inc
dec
roll
pop
adc
dec
pop
push
out
gs
mov
popf
sbb
add
push
dec
lret
jmp
imul
xchg
aad
test
jp
push
add
testb
add
lcall
gs
xchg
rcrb
movsb
xorb
rcrb
push
outsl
lods
push
add
pop
push
push
mov
xlat
ljmp
push
mov
inc
pop
push
sbb
push
jp
mov
in
pop
adc
mov
jo
ret
pop
add
js
adc
leave
aaa
cmp
out
inc
int3
push
fsubl
stos
test
mov
xchg
inc
jle
sub
pop
in
or
lods
fcoms
dec
cs
or
mov
sbb
in
mov
jl
mov
in
pop
sqrtps
loop
jg
imulb
shrl
ret
lods
adc
adc
cmp
sahf
add
add
mov
pop
xchg
mov
push
stc
xchg
jle
ss
cwtl
pop
outsl
mov
mov
pop
test
sub
cmp
hlt
imul
sbb
add
lds
cmc
cwtl
and
fadds
sub
add
testb
add
sbb
into
dec
sahf
in
push
ret
cmp
pop
je
test
mov
bound
insb
stc
andl
sub
push
fstpl
inc
add
push
jle
xchg
inc
iret
loope
imul
adc
pop
jle
bound
les
mov
dec
fldenv
push
mov
xor
aam
mov
lret
push
push
xchg
push
ret
mov
sti
fwait
xchg
pop
sbb
mov
stos
mov
push
push
sbb
xchg
push
or
lret
dec
mov
push
test
xchg
in
push
push
movsl
arpl
inc
lcall
cmp
pop
push
jno
adc
pop
lock
cltd
push
pop
xchg
push
cs
dec
outsl
push
sti
pop
xor
dec
iret
sub
push
push
sub
test
mov
gs
lcall
sub
jns
clc
mov
pushf
icebp
jbe
and
add
add
add
les
outsb
jecxz
arpl
xor
pushf
ret
loope
pop
push
out
jg
popa
mov
lea
lods
repnz
movsb
push
imul
xchg
mov
xchg
xor
cli
inc
scas
aaa
xor
cmc
push
or
js
sbb
xor
cmp
sub
cmc
lret
sbb
addl
sbb
cmp
cs
imul
sub
daa
out
pop
hlt
lahf
lahf
mov
xchg
loop
xchg
pushf
cmp
mov
mov
push
jp
pop
push
inc
jno
mov
divb
push
pop
mov
adc
inc
sub
or
xor
push
jo
fsts
jb
movsl
out
rep
mov
jge
jnp
loope
push
mov
movsb
xor
xor
inc
or
sub
call
cld
adc
faddl
add
ret
jg
mov
cltd
shrl
push
add
testb
add
xchg
sarl
mov
jno
fucomip
dec
add
fdivs
dec
bound
pop
mov
jbe
sub
xor
inc
std
cmc
lret
test
clc
fimull
in
inc
repnz
movsb
sub
leave
sbb
bound
mov
daa
insb
mov
cltd
fsts
insl
cmp
daa
cld
sbb
mov
aad
rcrl
pusha
sub
sbb
enter
xor
xchg
inc
clc
fsqrt
sti
loope
leave
push
dec
pusha
test
inc
jnp
sbb
mov
bound
xchg
add
inc
fst
ss
sub
daa
inc
decb
jl
jb
mov
cmp
or
lods
les
cld
dec
cs
mov
sarl
jnp
not
decb
dec
andb
add
adc
mov
cwtl
out
daa
pop
imul
testb
add
pop
pushf
pushf
negl
or
inc
mov
and
ljmp
cmp
movsb
sti
and
clc
add
cmp
sahf
cmc
outsb
rcrb
jg
loopne
push
sarb
mov
mov
dec
bound
icebp
dec
xor
dec
daa
xlat
mov
push
inc
and
sub
and
repz
cmp
aas
jbe
sbb
push
and
inc
jne
xorb
mov
adc
test
ret
lahf
or
mov
ljmp
dec
cmp
int3
in
cmpsb
mov
stc
sbb
mov
jae
jbe
into
insl
or
push
push
jg
int3
lock
mov
shl
inc
aad
mov
add
mov
popf
push
dec
sub
pop
or
out
or
mov
xchg
cmpsl
sub
movsb
rcl
mov
lret
inc
icebp
hlt
gs
push
sub
stos
mov
testb
add
in
lea
pop
insb
or
sbb
aaa
cmp
push
and
outsl
xchg
push
or
mov
mov
cwtl
out
and
xlat
movsl
add
sbbl
sub
xchg
and
sub
mov
push
loope
mov
mov
je
pop
scas
jne
cltd
addr16
test
aam
jnp
andl
adc
sahf
daa
dec
add
jecxz
bound
sbb
and
cmp
testl
pop
push
test
repz
in
mov
cltd
js
add
cmp
pop
rolb
out
jge
outsb
outsb
inc
imul
or
aad
andb
inc
push
xlat
or
push
mov
xor
mov
mull
out
addr16
jle
sub
into
in
add
stc
sti
in
mov
add
add
aas
gs
repnz
and
call
push
add
testb
add
or
and
xlat
mov
js
jle
sarl
gs
dec
mov
xor
mov
xor
in
sub
in
jae
jecxz
push
mov
je
pop
cmc
jg
add
pop
mov
inc
loope
stos
es
and
and
cmpsl
sbb
les
or
imul
mov
aaa
int3
test
rolb
add
adc
jne
insl
xsha1
cmpsb
int3
add
add
aad
cs
daa
ret
xchg
xlat
add
pop
xor
mov
pop
fbstp
clc
push
pop
sbbl
xor
fcmovnb
pop
bound
test
xor
mov
ja
dec
or
addr16
enter
psubsb
xor
xchg
adc
sub
push
sahf
ja
lea
mov
and
inc
dec
pop
jmp
test
mov
xchg
fstpl
ret
xlat
int3
xlat
xchg
in
cmp
or
add
add
out
fisttpll
mov
lock
add
testb
add
xchg
popa
nop
cmp
add
adc
add
xlat
fimull
fldenv
mov
ret
jle
int
in
shlb
jmp
lcall
loopne
xor
test
dec
shrl
lcall
into
xor
lcall
in
cs
xchg
shll
cmc
or
or
popf
inc
dec
xchg
sub
int3
and
mov
adc
push
rclb
pop
cmp
add
mov
pop
in
sub
xor
cmp
bound
mov
or
mov
adc
inc
dec
mov
xchg
adc
movsl
push
stos
cmp
das
sbb
add
std
inc
mov
inc
jg
test
mov
xchg
lea
pop
adc
fcomip
outsl
adc
fcomps
push
popf
inc
mov
jg
insl
add
fildll
mov
arpl
out
add
testb
add
cmp
cmpsb
jle
sahf
int
outsb
xchg
test
out
cmp
push
inc
mov
lahf
iret
icebp
sub
stos
pop
mov
and
push
dec
xchg
ficomps
push
ljmp
pop
sub
inc
inc
lock
push
jbe
add
push
push
insb
ljmp
inc
insl
mov
fwait
cmpb
cmp
loop
and
cmp
or
jp
xor
fmull
or
inc
popa
ja
lmsw
pop
daa
fsubl
test
push
and
imul
iret
sub
lahf
cs
stos
pop
popa
cmp
xor
pop
or
movsb
pop
in
fs
mov
jae
pop
sahf
rcrb
repz
lods
nop
sub
push
and
call
in
dec
fiaddl
push
adc
cld
push
jno
xor
adc
cld
aas
sbb
add
add
jmp
out
aas
mov
cmpsl
out
pop
add
testb
add
sbb
fiadds
ret
and
rsqrtps
xchg
in
test
xor
pop
stc
je
pop
js
adc
inc
in
jmp
ficomps
shrl
dec
sub
pop
jns
sbb
stc
add
das
mov
sub
sbb
cmpl
add
fwait
nop
idivb
cltd
pop
gs
jb
xchg
mov
lods
in
xor
jo
mov
xchg
push
add
mov
scas
push
sbbb
xlat
loop
gs
jno
into
inc
mov
movsb
mov
stc
xlat
adc
cltd
or
sbb
popa
popa
xchg
ss
push
mov
out
cmp
lods
jmp
dec
jbe
or
cmpb
and
mov
jecxz
or
arpl
add
imul
out
mov
arpl
lods
inc
movsb
rcrb
add
add
add
ficoml
or
adc
mov
shrl
popa
push
test
jmp
mov
enter
ja
enter
sbb
ja
sbb
dec
lods
in
xor
pop
out
fsubs
adc
pop
rolb
mov
subb
mov
cmpsb
hlt
imul
sub
movsl
lret
pop
daa
addr16
rclb
movsb
mov
out
out
pop
xchg
shll
sub
mov
movsl
jb
jmp
lods
pop
push
xor
jne
enter
iret
push
pop
push
cmpl
sbb
bound
std
inc
into
sbb
mov
push
fcomps
add
inc
sbb
dec
cltd
mov
lds
xchg
xor
push
stc
adc
mov
mov
add
divl
aad
push
jb
test
mov
pop
and
vpmaddwd
add
add
dec
stc
mov
clc
add
mov
and
pop
add
testb
add
dec
pop
das
mov
rcll
inc
and
push
outsb
dec
pop
xchg
push
pop
out
fs
lods
pop
push
ffree
mov
xor
cmp
fs
cwtl
sub
pusha
sbb
mov
and
and
xchg
arpl
lret
in
xchg
daa
add
lcall
mov
cltd
bound
std
pop
inc
xchg
inc
enter
pop
pop
stos
mov
adc
or
mov
outsb
pop
ror
mov
pop
push
or
mov
sahf
and
cmp
push
imul
mov
nop
call
aad
mov
pop
loope
cmp
repz
cli
cld
jl
cmp
sbb
ficoml
stos
sbb
mov
or
jecxz
dec
enter
out
jmp
add
adc
add
xchg
cmp
jle
jg
cld
jo
hlt
leave
cmp
sbb
add
testb
add
test
outsb
xchg
and
dec
lods
xor
ss
in
aaa
dec
repz
pop
lock
jns
es
rolb
or
cmp
out
testb
outsb
jb
push
inc
fcompl
inc
xchg
xchg
or
test
into
mov
adc
data16
inc
aad
rolb
xorl
ja
repnz
out
lret
pop
mov
call
cmp
fstl
dec
adc
and
pop
inc
or
adc
push
jmp
test
test
vphaddudq
mov
push
push
xchg
or
mov
lods
mov
loop
push
dec
ds
dec
lods
jge
aam
in
push
push
push
push
adc
mov
imul
je
pop
or
jmp
ss
push
loop
rcrl
and
add
add
xchg
mov
mov
add
add
add
in
mov
push
fisubrl
mov
jl
js
or
sub
int3
sub
inc
inc
test
clc
mov
cmp
repnz
mov
std
test
sbb
int3
or
or
push
loop
testb
jne
jae
pop
test
stos
icebp
cmp
xchg
xchg
jmp
lods
aam
sub
jae
pop
aas
pop
sub
iret
or
hlt
mov
and
adc
jae
cmp
jle
movsb
xor
je
mov
aad
push
cmp
andl
pop
push
pop
or
pop
mov
sti
fldl
xchg
test
std
bswap
hlt
mov
push
fwait
or
repz
lret
std
or
push
js
mov
jecxz
sbb
gs
out
dec
stc
push
fimull
ds
or
mov
rcrb
hlt
stos
pop
add
testb
add
bound
or
ret
cmpsl
scas
sbb
xor
popf
xor
rcll
into
ficoml
sbb
sbbl
lahf
inc
cli
sub
mov
in
push
in
adc
pop
cmc
cmc
xor
cmp
pmaddwd
mov
loopne
sbb
pop
and
mov
int
xor
mov
push
cmc
leave
jo
cwtl
and
stos
testb
mov
aaa
dec
das
dec
jmp
hlt
mov
std
ja
mov
sbb
into
imul
in
push
nop
and
lods
int3
movsb
pop
sub
xchg
cli
lds
aaa
lcall
xchg
outsb
sub
mov
add
les
sbb
push
cmc
mov
push
dec
stos
cmp
lea
or
sub
nop
sbb
lcall
add
sub
cmp
dec
cmovge
add
testb
add
adc
je
bound
push
iret
adc
pop
fcomi
outsl
jns
dec
xor
enter
pushf
fs
jmp
jo
push
into
fucomi
in
dec
adc
scas
dec
mov
xchg
mov
js
cli
xor
and
xlat
cmp
jo
fs
movsb
jae
or
test
lret
rorl
xchg
xor
mov
mov
mov
js
stos
sahf
ds
outsl
stos
testb
adc
adc
mov
inc
mov
dec
sub
lods
mov
sub
lea
lahf
lahf
adc
in
cmpsl
jbe
add
adc
lret
out
popa
out
outsl
rcr
pushf
out
sbbb
data16
dec
jnp
mov
in
mov
out
das
pop
cmpsb
cld
xchg
add
or
push
shll
out
xchg
inc
push
push
testb
add
mov
sub
std
scas
lds
call
std
adc
sub
jp
jns
ret
hlt
push
push
sbb
fbstp
pop
mov
fdivr
sbb
and
lahf
dec
dec
sub
xlat
xor
sti
add
les
mov
addr16
or
inc
xchg
xor
aas
pop
pop
sbb
sub
and
mov
arpl
lahf
add
in
push
repz
xorb
mov
cmp
fbstp
out
mov
mov
add
jno
adcb
lret
sub
fcoml
daa
daa
nop
mov
testb
scas
jae
or
mov
repnz
icebp
mov
pop
int3
pop
jp
adc
and
sbb
outsb
push
negl
in
lret
rorl
test
add
stos
push
lcall
inc
and
sti
rcll
add
add
add
scas
or
jnp
scas
push
inc
fisubs
ljmp
iret
in
or
mov
xor
jge
adc
mov
into
adc
js
inc
aad
sar
pusha
adc
jbe
lret
inc
leave
lea
stos
in
test
adc
pushf
popa
jmp
out
cmpsb
add
andb
xchg
add
inc
int
mov
inc
or
ret
notb
cwtl
icebp
fwait
push
lock
xor
jmp
mov
inc
icebp
inc
cltd
xor
jo
jmp
push
xchg
aad
xor
mov
sbb
sbb
insb
inc
or
adc
mov
loopne
cmp
out
xchg
dec
lea
dec
jg
and
loop
outsl
sahf
jge
push
mov
aad
adc
push
inc
stc
sbb
xor
lret
xor
add
jbe
idiv
imul
pop
les
add
add
mov
ss
leave
adc
and
icebp
pop
pushf
sub
enter
in
lcall
ss
push
xchg
sbb
mov
lds
cmpsb
pop
lret
xchg
mov
das
inc
push
test
orl
loopne
inc
dec
or
in
sbb
sub
loop
mov
sbb
cmp
fcoms
sub
adc
jns
jns
jp
sub
fwait
cmp
mov
packuswb
dec
mov
mov
pop
mov
sbb
es
pop
sbb
lods
xor
jg
push
test
jb
ja
xchg
push
stc
insl
loopne
pop
sahf
jp
dec
cmp
enter
dec
repz
push
push
movsl
xor
lods
and
ss
inc
jmp
out
mov
sub
cmp
movsb
or
nopl
add
jae
fwait
cmp
dec
data16
jg
aaa
js
add
testb
add
push
jbe
inc
data16
inc
pop
dec
ror
subps
ret
ret
xor
pop
push
jmp
pop
jge
mov
mov
xor
inc
xchg
fmuls
cmpsb
cli
or
in
mov
cwtl
enter
push
aaa
pop
adc
jmp
sbb
test
sub
or
mov
nop
add
fs
fmuls
pop
test
push
jno
addr16
mov
sub
mov
and
jecxz
subl
cwtl
push
push
sti
push
mov
and
jae
pop
xor
sbb
jno
sahf
and
cmp
xchg
xchg
sbb
mov
mov
rcrl
int3
or
inc
cmp
push
je
int3
arpl
sub
mov
mov
inc
jns
or
lahf
jp
adc
add
clc
mov
or
pusha
in
outsb
arpl
add
add
add
ljmp
jnp
and
stc
jbe
xchg
sub
fbld
xlat
jle
mov
leave
into
pop
lods
sahf
mov
mov
and
test
add
cwtl
pusha
cmpsb
push
add
cmp
pop
cmpsl
fcoms
sbb
enter
pop
mov
dec
ret
and
imul
fisubrs
xlat
shll
test
mov
jo
and
shll
jnp
addl
mov
mov
lret
pop
movsb
hlt
bound
mov
dec
mov
popf
insl
mov
and
adc
ja
mov
sub
shlb
dec
push
scas
addl
std
das
outsl
cmpsl
sub
mov
test
pushfw
mov
xchg
testb
das
xor
lret
xchg
jae
loop
sub
sub
mov
mov
pop
push
sbb
sub
add
shr
mov
and
lds
fs
testb
add
and
mov
inc
add
mov
add
gs
jl
jmp
scas
test
jae
mov
mov
js
int
sbb
jo
clc
pop
lods
mov
mov
fsubr
xchg
jle
xor
lcall
adc
scas
adcl
and
mov
lds
loope
and
inc
pop
into
bound
ja
mov
inc
dec
repz
or
pop
pop
jl
dec
push
push
sbb
dec
pop
push
js
testl
dec
mov
jle
adc
push
jns
jp
fs
mov
nop
jl
cmp
xor
xchg
addb
movsl
hlt
push
jns
fs
mov
cmp
xchg
pusha
mov
jle
stos
sar
gs
mov
mov
or
xchg
pop
das
mov
add
mov
int3
rorb
scas
or
pop
add
testb
add
push
push
aam
pushf
cs
mov
inc
xchg
loop
pop
cmpsl
xor
and
inc
and
adc
inc
out
gs
fadd
inc
mov
int3
lds
imul
scas
dec
out
imul
cmp
dec
imul
xchg
inc
roll
mov
xchg
sub
xor
and
xor
cs
or
fsubr
repz
inc
cmp
pushf
js
pop
add
jns
xor
aam
push
jo
mov
xchg
cmp
pop
xchg
loope
cs
add
nop
mull
scas
rorb
pusha
push
mov
xlat
adc
jo
lods
push
fldl2t
out
mov
add
mov
ret
adc
push
cmp
repnz
sbbb
jle
inc
addr16
mov
mov
and
das
lret
cmp
jne
push
add
testb
add
les
or
lret
cmpb
adc
xlat
mov
cwtl
outsl
mov
popa
cmp
mov
mov
int
push
jmp
rcrb
mov
jle
hlt
jl
shrb
sbb
jno
fwait
adc
xor
mov
out
aad
ret
dec
lahf
jge
mov
sub
inc
leave
f2xm1
dec
jns
xchg
mov
shrl
xchg
roll
std
xchg
pop
popa
aas
aaa
popa
pop
pusha
jp
mov
mov
test
leave
les
dec
outsb
pop
and
inc
xchg
andb
aam
or
mov
mov
xchg
xchg
and
cmp
xchg
lcall
push
dec
or
jno
or
rcll
test
jo
add
lods
popa
lahf
jmp
dec
add
xchg
sub
out
movb
dec
mov
and
cmp
add
movsb
jae
jnp
mov
lods
push
adc
sbbl
testb
add
pop
cltd
and
sbb
push
xor
roll
cmpsl
or
je
mov
push
jp
cmp
pop
xor
lds
inc
mov
cli
push
js
aas
movsl
push
fiadds
cmpb
scas
or
loope
addr16
aas
dec
add
data16
sbb
push
arpl
pop
scas
loop
mov
cli
fwait
sahf
aas
fcmove
pop
xchg
mov
pop
nop
aaa
sahf
add
cmp
push
mov
xchg
cmpsb
hlt
cltd
ljmp
lock
add
mov
push
popf
sub
pop
das
lret
aas
pop
add
push
xlat
jmp
sbb
outsb
movsl
sbb
lret
dec
sbb
fmull
lret
lret
lods
hlt
pop
sub
pop
paddd
fistl
mov
or
adc
jecxz
mov
jecxz
hlt
pop
sbb
dec
arpl
scas
popf
xlat
clc
jle
ds
mov
fbstp
scas
adc
lahf
mov
and
cmp
add
testb
add
inc
push
mov
xchg
push
xchg
sti
out
xor
dec
rorb
dec
scas
pushf
sarb
push
xchg
rolb
pop
mov
dec
ljmp
call
aaa
sub
fiaddl
sub
dec
addr16
fcoml
repz
add
cmp
jmp
fcmovne
cmp
dec
out
cmp
pop
daa
pop
rclb
and
stos
mov
out
mov
push
clc
fdivrl
fistl
mov
dec
jns
or
mov
dec
xchg
push
xchg
shrb
xchg
clc
outsb
int
jne
sub
adc
ja
in
cmp
bnd
aad
out
frstor
xor
sub
ret
test
xchg
pop
xor
xchg
xorb
sbb
out
dec
cmp
in
cmpsb
add
jp
lret
cmc
cmp
add
mov
scas
sub
lret
add
testb
add
mov
mov
push
pop
icebp
inc
lods
sbb
rolb
fistl
orl
push
xor
inc
sub
add
or
jecxz
hlt
mov
stc
push
or
or
push
inc
out
ret
arpl
xchg
imul
dec
mov
xchg
stos
or
out
mov
pusha
mov
sbb
adc
push
in
std
popa
test
xor
xchg
pusha
dec
lret
add
in
jg
stos
mov
loop
sbb
int
xlat
xchg
test
inc
push
inc
in
push
mov
rcll
dec
xchg
push
js
inc
movsl
les
adc
jecxz
les
popf
fadds
or
push
lock
ljmp
shrl
jmp
enter
add
mov
aaa
add
out
into
push
cmp
sub
push
daa
mov
push
add
add
add
adc
pop
repnz
xchg
sbb
xor
or
cmp
sub
orb
jb
add
and
push
out
mov
mov
imul
lds
add
jae
js
rolb
jl
dec
inc
popl
dec
adc
aaa
dec
fisttpl
lock
idivb
dec
xchg
jbe
and
mov
lret
sub
orl
pop
cmp
inc
and
jmp
in
int
add
ss
sub
xlat
jbe
ja
bound
inc
adc
in
mov
xchg
mov
iret
stc
daa
mov
out
in
sarl
jg
mov
xchg
sahf
sbb
push
rol
add
xor
outsl
fcmovu
mov
cli
faddp
jle
fstpt
inc
push
xor
por
xchg
add
and
mov
fisttps
jo
mov
or
imul
testb
add
mov
jne
fistl
mov
test
inc
push
mov
jg
xlat
cmp
lret
dec
test
iret
xor
mov
dec
test
push
cmc
lock
into
mov
and
jo
pop
fcompl
xor
ret
xchg
test
dec
movsb
test
push
push
hlt
popa
test
sarl
lock
repz
pop
cmovp
iret
sbb
xchg
push
push
add
jns
pop
bound
fmulp
mov
sbb
js
dec
aad
js
imul
pop
sbb
lcall
mov
pop
dec
hlt
imul
jb
mov
stc
jge
adc
fstpl
inc
adc
mov
icebp
stos
lret
in
cmove
dec
pop
mov
sub
cld
fwait
xchg
inc
jmp
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
adc
add
testb
add
lcall
mov
lahf
mov
mov
in
dec
xor
dec
xor
inc
lret
js
add
jnp
lret
or
jb
cmp
inc
sub
xchg
test
fstl
lds
dec
fisttpl
cmp
and
xchg
mov
mov
call
into
lcall
test
mov
dec
or
in
jb
ret
iret
mov
or
mov
std
imul
in
ja
push
xor
aad
arpl
pop
cmp
fidivrl
jns
and
push
inc
ds
pop
fisubs
xchg
lock
and
popa
ret
and
push
cmp
arpl
push
adc
mov
loop
push
lods
mov
xor
int3
test
mov
sahf
pop
testl
inc
dec
stc
or
add
add
add
popa
mov
cmp
insl
testl
cmpsl
jns
sarb
xchg
mov
push
mov
add
movsl
jg
in
adc
inc
xor
or
loop
push
ja
pop
loop
stos
test
scas
dec
repz
lock
pop
loop
or
mov
xchg
aam
jno
aad
addl
loop
inc
sar
fimull
pop
ljmp
lret
mov
lea
push
push
xchg
xchg
jae
cmp
je
and
pop
pushf
ret
adc
lcall
jp
push
movsb
filds
fldt
lret
jbe
inc
scas
popa
cmc
repz
inc
adc
cmp
jmp
aaa
lahf
sub
sbb
xlat
push
rclb
fsubrl
push
scas
int3
sbb
and
add
pop
mov
movsb
inc
gs
pop
cli
mov
add
add
add
add
cmpl
and
push
movsb
inc
sub
jl
nopl
mov
es
dec
sbb
out
pop
imul
lods
or
dec
arpl
lahf
mov
mov
pop
call
dec
pop
inc
sub
cmc
mov
jne
xorb
xlat
aad
loope
mov
sbb
sete
insb
cmpsb
push
std
jne
daa
bound
cli
jae
add
adc
cmp
mov
sub
pop
cmpl
cld
cmp
mov
pop
xchg
std
sti
sti
mov
pop
repnz
cmpsb
popf
xchg
jl
lea
xchg
inc
pop
mov
sbb
inc
inc
push
or
into
loope
mov
mov
add
cwtl
rcrl
and
cmp
mov
xchg
push
bound
shl
dec
mov
and
cmp
jo
push
aam
sbb
adc
add
repnz
movsb
jle
mov
and
imulb
add
add
add
xchg
push
push
loope
jle
mov
add
push
cmc
pop
sar
std
and
xor
mov
negb
clc
and
inc
add
cmp
cmp
imul
cwtl
cmp
inc
mov
imul
rcl
adc
cmp
xchg
dec
adc
arpl
js
and
lea
dec
outsl
xor
fs
jmp
jp
push
push
jmp
cli
subb
fnstcw
out
or
sub
inc
mov
int
ret
jge
or
shlb
shl
jae
out
mov
pop
imul
js
add
loopne
mov
test
js
lods
rorb
cmp
or
clc
mov
or
sub
cmp
dec
sbb
adc
jg
add
jmp
sub
out
pop
es
in
outsl
add
testb
add
pushf
sti
dec
xchg
data16
js
test
sbb
dec
mov
dec
xor
fdivrs
ret
icebp
add
repz
sahf
mov
jl
mov
mov
lret
xchg
in
xchg
neg
test
xor
outsb
sbb
mov
ret
fildl
mov
ss
cmp
lds
pop
lock
out
lret
cld
pop
or
pop
cmp
idiv
cmp
mov
mov
or
and
rcrl
xor
push
and
cld
rolb
movswl
dec
push
fildll
mov
inc
repnz
lret
fcmovbe
sbb
fdivs
rcr
dec
in
jo
xor
sub
call
lods
jmp
xchg
scas
mov
add
test
xchg
jmp
out
ret
loopne
sub
add
add
mov
fnstenv
xor
add
testb
add
lods
shll
out
shll
adc
push
lcall
fimuls
imul
jge
mov
xlat
mov
add
dec
addr16
cli
mov
lods
mov
mov
lods
out
mov
mov
sbb
xchg
or
sub
pushf
push
mov
and
jecxz
daa
adc
sbb
sub
sahf
and
pusha
push
inc
scas
mov
roll
mov
mov
and
in
mov
push
jg
mov
xor
popf
xor
cltd
and
cmp
xor
inc
add
sub
cmp
mov
call
adc
in
xlat
adc
sub
lods
arpl
ficoml
push
push
jl
loopne
or
int
cltd
lea
adc
sahf
js
out
adc
cld
je
jbe
jmp
lea
xchg
push
mov
add
add
add
testl
in
or
rclb
scas
jo
mov
outsb
sub
jae
or
sub
aaa
add
or
movsb
stos
push
call
mov
xchg
loop
data16
adc
lock
repz
enter
out
pop
xor
add
das
jge
or
iret
mov
je
jae
std
inc
ret
sub
ret
pop
or
pop
push
push
dec
insl
cld
and
jle
mov
xchg
xchg
xchg
jo
stos
lds
inc
mov
pop
fmuls
loope
daa
icebp
or
inc
aam
cmp
xor
scas
testb
dec
fstpl
cs
test
insb
push
add
stc
decb
cmc
adc
and
dec
xor
sbb
aas
pop
pop
dec
incb
or
sti
into
std
sahf
cli
push
fimuls
loop
mov
and
add
cltd
jmp
fcmovnbe
cld
xor
add
add
testb
add
push
js
push
xchg
dec
sarl
out
sbb
int
iret
lret
mov
pop
xchg
adc
dec
push
or
ror
std
xor
pusha
pop
sub
cli
lahf
and
pop
dec
mov
aas
jecxz
cmc
sub
and
cmp
mov
xor
pcmpgtb
xor
in
in
xorb
mov
loop
dec
iret
jp
inc
push
mov
std
jl
adc
sti
shll
insb
push
cmp
xor
and
mov
push
inc
movsl
out
push
lods
roll
sub
movsl
sub
push
cmp
daa
mov
mov
aam
and
call
in
shlb
and
stc
into
jg
add
mov
dec
sbb
add
push
and
pop
dec
xor
pop
aad
or
mulb
icebp
sub
insl
cmp
out
push
add
mov
mov
push
jg
pop
jne
loop
inc
lock
add
add
add
fidivrs
mov
outsl
pop
adc
aaa
sbb
iret
cmp
pop
fiadds
lahf
cmp
mov
jl
mov
push
es
mov
popf
and
mov
inc
xchg
data16
xchg
sbb
xor
das
mov
fld1
loopne
or
mov
into
xchg
rcr
inc
push
add
sahf
shll
adc
xor
inc
out
pop
bndldx
shll
push
stos
sub
push
add
and
mov
mov
dec
cs
pop
movsb
mov
in
xchg
subl
je
cltd
add
ret
imul
stos
push
repz
dec
push
cmp
add
xchg
jge
cmp
mov
push
sub
push
sbb
ss
push
divb
jb
lods
adcb
cmp
js
add
iret
mov
fucomip
addr16
shll
testb
add
mov
sbb
jbe
pushl
aad
jnp
and
iret
mov
mov
outsb
es
mov
in
mov
jo
mov
sub
int
negb
mov
pop
xchg
scas
pop
je
pop
push
inc
push
pop
mov
xchg
push
mov
lods
xor
inc
sub
jbe
fdivs
push
mov
and
push
push
xor
or
push
jns
add
mov
dec
outsb
ret
insl
outsl
call
pop
testb
xor
push
xchg
das
jg
cmp
std
mov
icebp
push
adc
mov
ror
inc
imul
pause
arpl
ss
pop
xchg
mov
data16
xor
xor
fistpll
and
mov
mov
add
or
mov
sub
mov
jb
jbe
jnp
jg
fidivl
inc
fisttpl
lock
push
mov
add
imul
dec
out
iret
jmp
cmpsb
add
loope
jne
add
add
add
mov
sub
push
out
repz
and
cltd
pusha
xor
dec
loopne
scas
and
cmpsb
pop
sbb
mov
js
xor
insl
pop
xchg
jp
call
test
ret
xor
stos
imul
stc
rcl
repz
mov
fadds
out
pop
sub
test
dec
sbbb
add
iret
shl
ljmp
cmp
dec
in
aam
jb
subb
or
mov
sub
int
push
int3
xchg
fdivrs
and
fistpl
scas
icebp
dec
and
sbb
std
mov
and
lods
lahf
loope
add
mov
loope
call
lret
add
fidivrs
movb
lahf
stos
inc
xchg
clc
add
and
sbb
imul
sbb
subb
insb
insb
sahf
pop
cli
aas
dec
inc
inc
lds
add
std
cmpsb
pop
lods
jne
xchg
rcll
xchg
in
cmpsb
jbe
add
add
add
jmp
out
fdivs
cmc
xor
jno
rorl
outsb
scas
repz
scas
sub
add
mov
mov
int
push
shlb
push
mov
sti
addl
jbe
fnstenv
enter
call
mov
test
leave
xchg
daa
adcb
pop
imul
rolb
xchg
dec
movsl
stos
fstpt
push
cmp
adc
cmp
ficoms
int3
jle
mov
sub
mov
jns
xchg
inc
addr16
in
dec
xchg
push
xchg
cli
mov
pusha
push
loop
push
fimull
jg
inc
push
push
cmp
dec
jmp
cmpsl
loope
sub
nop
xchg
fdivr
cmpl
mov
aaa
ds
xor
sub
sbb
iret
in
push
cmpsb
sub
mov
add
neg
std
stc
idivl
leave
pushf
ja
add
add
add
or
xor
outsb
int
das
and
dec
into
xchg
xchg
sbb
enter
push
movsb
dec
dec
pushf
pop
xchg
fistpll
sbb
push
cld
shl
mov
jmp
sbb
mov
fmull
orl
test
and
popa
je
push
cmp
cmp
xchg
ss
sar
lret
inc
rclb
hlt
outsl
imul
cmp
jg,pt
pop
add
mov
out
jge
clc
mov
subl
pop
inc
pop
repz
std
push
jle
or
mov
mov
lea
or
adc
shr
xchg
inc
inc
jl
testl
pop
cmc
pop
cltd
jge
data16
xor
cmp
daa
aas
je
sbb
cmpl
lock
data16
xor
pop
daa
sub
rorb
pop
mov
mov
xchg
test
add
add
cs
mov
push
notb
add
add
rclb
pop
mov
jmp
mov
xor
rol
std
inc
xor
fidivl
jle
push
stos
fsubrs
mov
fs
mov
push
add
mov
sbb
and
cs
cmpsb
enter
clc
lea
cmpsb
mov
mov
repz
ljmp
fs
jle
or
out
fsubl
add
adc
inc
xor
cmp
pusha
push
xor
jns
inc
mov
icebp
sub
push
insb
pop
repnz
test
or
jl
mov
push
dec
into
nop
ret
mov
imul
jb
adc
sbb
mov
sbb
fucom
or
push
pop
cwtl
int3
lcall
dec
pop
sbb
ljmp
mov
dec
and
cmp
add
lcall
out
dec
jg
aad
sbb
add
testb
add
adc
push
loop
jl
or
mov
es
inc
cwtl
push
sub
fistl
push
test
in
mov
push
jno
mov
pop
adc
lock
xchg
lea
add
inc
into
daa
test
mov
movsb
pop
addr16
fdivrs
mov
notb
hlt
pop
mov
js
int
jecxz
pop
pop
mov
nop
sbb
out
lock
js
stc
test
std
repnz
inc
fdivl
mov
and
loopne
mov
fdivrs
pop
js
cmc
shr
ret
mov
fldt
mull
rcr
dec
jl
inc
loop
xchg
cmp
jge
testb
stc
clc
hlt
adc
mov
adc
iret
sbb
divb
inc
in
ret
pop
cltd
iret
test
mov
pop
testb
stc
push
enter
dec
js
push
add
daa
sub
ja
mov
paddq
dec
ficoms
jp
add
add
add
aas
jl
jo
add
fiadds
lahf
pop
repnz
jb
repz
cmp
pop
pusha
lods
cmp
repnz
add
leave
int3
fadds
xor
aaa
dec
sub
mov
mov
scas
fdivrs
add
mov
int
int
sbb
movsl
sub
sahf
in
push
aaa
jle
add
int
cwtl
ret
xor
fs
sti
imul
dec
nop
add
xorb
stc
ljmp
adc
fisttpll
mov
pop
and
cmpb
sub
decl
icebp
jle
stos
jmp
out
dec
andl
jp
mov
jle
int3
psrld
inc
jge
sub
scas
in
xlat
stc
out
fsts
cmpsb
sub
sarb
sbb
jp
jo
mov
jg
loopne
jo
cltd
into
cli
cmp
xlat
cmp
mov
xor
jb
or
add
cmp
jnp
jge
xchg
pop
fildl
cmp
add
add
add
jbe
enter
call
jecxz
push
mov
or
xchg
lret
test
mov
popf
cmp
fidivrs
cmc
loope
jmp
pop
push
ret
je
cmp
dec
sub
sbb
lea
push
in
mov
stc
cld
and
mov
xor
jl
in
cmp
push
jmp
js
jmp
adc
sub
add
cli
jnp
or
fisubs
scas
cmp
and
or
lret
movsb
jp
add
mov
and
mov
fdivp
jg
inc
mov
clc
and
jecxz
push
daa
cmp
mov
mov
inc
lods
xor
mov
mov
lods
push
clc
stc
mov
pop
andl
xor
jb
jp
aaa
pusha
leave
dec
fisttpll
or
addr16
inc
jg
cwtl
dec
movsl
mov
add
add
cli
xchg
jle
mov
mov
jl
add
add
add
lahf
adc
ret
pop
mov
fsubrs
decb
in
jmp
cmpsb
jb
mov
cmpl
add
mov
jns
cmp
sbb
xor
xor
into
clc
loope
sub
xor
dec
mov
scas
sub
xor
cmp
lds
xor
jge
push
push
jmp
aaa
pop
push
jnp
jl
loop
les
fdivrl
xchg
inc
lcall
lret
insb
xor
inc
inc
add
je
inc
push
movsl
adc
mov
sbb
nop
cmp
test
sti
ja
inc
hlt
sub
push
xor
shll
stc
es
repz
or
inc
cld
cltd
dec
push
stos
pop
adc
xor
sub
push
mov
inc
sub
gs
call
mov
push
xchg
outsl
push
cmpsl
add
inc
aaa
dec
fwait
jnp
aad
gs
into
add
mov
lcall
add
push
pushf
fidivs
cmp
ljmp
test
movsl
stc
mov
jns
dec
arpl
popf
data16
inc
mov
hlt
pop
pop
or
icebp
test
mov
mov
loope
xchg
aaa
push
clc
adc
mul
fnsave
push
out
mov
adc
testl
mov
les
rcl
mov
in
imulb
ucomiss
stc
mov
ss
cwtl
push
add
or
mov
xchg
cmp
inc
mov
outsb
xchg
pop
push
out
into
lea
inc
faddl
fldt
jnp
shlb
in
push
subl
lret
jl
pop
add
adc
or
ljmp
arpl
daa
rorb
js
les
dec
inc
js
jno
mov
roll
es
mov
xor
xlat
lret
pop
stc
daa
fs
and
add
add
std
mov
enter
rclb
add
add
add
dec
mov
fisubrl
iret
fildll
sub
fmuls
insl
mov
notb
jne
cmp
mov
xor
push
or
into
loop
movsl
insb
pop
std
mov
pop
call
xchg
and
sar
xlat
jecxz
mov
rorb
xor
cwtl
pop
pop
test
fdivrs
pop
fcmovnb
adc
or
fadd
loope
xchg
nop
cld
gs
insb
arpl
mov
test
mov
inc
sti
call
sbb
int
cmp
pop
in
xor
iret
mov
mov
adc
add
test
mov
xchg
mov
mov
out
adc
popa
push
adc
push
es
add
adcb
xor
pop
cmp
gs
add
add
fstl
out
repz
cmp
dec
jg
add
add
add
and
cmp
sub
sarb
cmp
out
xor
xchg
fisubrs
jge
lea
daa
les
lahf
ss
pop
adc
sbb
push
cmp
les
mov
in
xchg
fildll
adc
pop
in
call
xlat
xor
cmp
mov
sub
stos
pop
pop
sbb
test
jecxz
add
jecxz
stos
hlt
stos
xlat
scas
cltd
xchg
fiadds
jnp
jno
sub
addr16
push
aad
shll
call
push
test
pop
cli
dec
clc
aad
xchg
inc
aad
pop
stos
adc
adc
add
mov
or
jo
sub
fs
scas
sbb
mov
fsubs
dec
xchg
subl
add
sbb
cmpsl
ss
xor
push
ret
add
bound
in
pop
test
outsb
xlat
pop
inc
addb
testb
add
lods
mov
jbe
out
rol
ret
cmp
pop
movsb
pop
lcall
cmpsb
ret
and
adc
popa
xchg
jmp
mul
jnp
dec
leave
jg
es
add
jle
pop
sub
mov
mov
push
pop
or
add
bnd
or
lret
imul
sub
sub
loop
pop
jns
cmp
mov
js
adc
inc
int3
adcl
xor
movsl
test
cmpl
xor
dec
fldl
pop
dec
push
fldl2e
int
mov
pop
cltd
and
push
adc
insl
sub
lods
push
sbb
pop
dec
outsl
fwait
jnp
enter
and
jnp
movsb
int
mov
int3
mov
sbb
rorl
bound
or
in
scas
in
outsb
aaa
pop
pop
pop
dec
mov
lret
add
jns
divl
bound
xor
cmp
add
pop
out
call
popa
and
pop
repz
int
in
mov
outsl
cmc
lahf
push
adc
dec
xchg
scas
cmc
outsl
ss
adc
outsl
arpl
push
jne
push
push
jne
in
mov
lret
inc
add
movsl
inc
sbb
mov
repz
pop
notl
icebp
pop
and
jecxz
popf
fwait
fs
mov
cmp
sub
les
pop
sbb
mov
or
sbb
mov
shlb
pop
pusha
inc
add
outsl
loope
pop
push
adc
mov
pmullw
xor
bound
sbb
add
xor
dec
pop
popa
fwait
mov
adc
jle
mov
mov
scas
or
sbb
and
and
push
mov
mov
scas
mov
popa
int3
xor
loope
hlt
dec
pop
sbb
add
clc
fisubs
mov
push
mov
jo
addb
testb
add
sarl
out
push
cmp
mov
fidivl
daa
inc
dec
cmpsb
clc
and
inc
mov
fcmovbe
or
iret
add
ret
sti
mov
cltd
mov
test
into
cltd
out
andl
shl
enter
adc
arpl
lcall
sbb
add
or
inc
mov
add
and
mov
loop
add
call
sub
lret
loop
dec
ss
pop
shlb
xor
inc
and
inc
and
jmp
push
adc
sti
mov
mov
rcl
in
mov
loop
aad
std
or
arpl
loopne
rclb
push
shll
ds
es
out
cld
cs
add
pop
xlat
push
std
mov
test
test
cmp
adc
pop
cltd
jp
sarl
cld
pop
int
push
add
shlb
mov
and
cmp
addl
testb
add
mov
cmovle
fdivp
jmp
cmpsb
jne
cs
sub
jl
xor
mov
cmp
cli
pop
pop
std
lret
jb
loope
mov
jmp
pop
hlt
adc
andl
jmp
lcall
icebp
mov
dec
nop
cmp
cmp
xchg
push
data16
fiadds
mov
subl
lcall
mov
mov
in
adc
jge
and
cmp
lret
pop
dec
add
or
mov
roll
mov
out
das
jns
fidivrl
push
lcall
mov
adc
sbb
mov
push
out
push
test
stc
in
dec
dec
movsl
ds
filds
xlat
cmc
sub
xor
jl
stc
rorl
cwtl
push
and
push
cmovp
add
orb
jle
insb
xor
imul
add
add
add
aad
pusha
mov
sbb
push
mov
xchg
test
and
or
jb
push
ret
sub
mov
ret
popa
pop
iret
loopne
loopne
in
push
and
repnz
shrl
js
fdivr
sbb
aaa
dec
mov
dec
xchg
push
out
loope
lret
pop
and
fidivrl
pop
idiv
add
xchg
jl
pop
shrb
movsl
xor
xchg
push
and
and
outsl
adc
stc
scas
push
scas
jmp
jmp
jo
lea
test
mov
dec
mov
fwait
jne
sub
pop
mov
jl
jns
clc
mov
arpl
cld
dec
int
xchg
ficomps
jne
cmp
adc
clc
xchg
or
sub
movsb
ja
imul
idivl
dec
inc
mov
push
ficoms
add
jo
ja
std
stos
lods
and
test
add
add
add
mov
xchg
cmp
sub
sub
sbbb
ret
mov
inc
push
jae
cmpsl
into
popa
fcompl
in
out
push
call
dec
mov
mov
lahf
pop
adc
aad
pushf
iret
into
stos
es
popa
in
xchg
hlt
hlt
adc
aas
xchg
jle
hlt
addl
jl
xlat
jae
jl
push
js
or
mov
pop
xor
cmp
lcall
mov
xor
in
xor
xchg
push
sub
inc
add
les
out
lcall
xchg
in
rcl
sub
mov
jnp
cmp
inc
popf
fldt
div
cmc
adc
pop
pop
cmc
dec
mov
xchg
and
inc
fdiv
dec
lods
fs
pop
inc
jl
lock
mov
add
sbb
add
add
cmpsb
arpl
je
jp
lret
add
testb
add
cs
outsb
filds
pusha
inc
ss
fildl
mov
imul
lahf
jg
jp
aas
mov
add
push
adcb
pop
mov
cwtl
dec
add
adc
aam
lods
xor
fwait
lret
cltd
or
pop
cld
pop
aaa
lret
popa
into
popa
andl
xchg
pop
pop
mov
push
jmp
mov
and
lods
adc
push
lret
jne
pop
repnz
mov
mov
or
mov
pop
jb
rcr
and
sub
lds
shrl
test
xor
cld
dec
fstpt
bound
cmp
test
test
add
das
dec
dec
add
fcmovnbe
fdivrl
cld
dec
xor
mov
test
pop
xchg
push
mov
xor
cli
mov
out
mov
push
testb
add
ret
and
mov
push
adc
enter
pop
sub
repz
jg
in
outsb
pop
inc
pop
mov
jl
push
mov
sbb
int3
out
arpl
mov
sub
in
dec
jmp
cmpsl
xchg
rcr
in
sbb
push
je
leave
outsl
mov
and
fbld
sbb
mov
out
in
mov
cld
ljmp
mov
mov
movsb
and
in
inc
gs
mov
int
add
push
sahf
sub
mov
jno
jne
sbbb
cld
mov
push
push
loop
or
fnsave
jmp
xorb
inc
insb
xchg
add
outsb
mov
cmp
addr16
lret
ja
ret
cld
sub
call
inc
add
stc
or
jmp
jl
in
xor
push
or
add
std
test
ljmp
sahf
and
add
add
add
repz
ret
dec
es
dec
stos
call
or
mov
rolb
push
fistl
add
dec
imul
out
aaa
cmp
jb
pop
add
lcall
out
adc
add
mov
push
push
nop
sub
mov
loop
aam
lret
movsb
stos
pop
mov
iret
adc
push
inc
jp
scas
xchg
sbb
xchg
mov
dec
pop
mov
push
std
jmp
jno
fists
sbb
negb
notl
in
fstpt
sarb
dec
sub
std
cmp
xchg
movl
mov
mov
or
dec
lcall
dec
jo
lds
xor
adc
push
push
xor
mov
xor
daa
pop
jnp
imul
loope
adc
sbb
add
testb
test
imul
add
testb
add
cmp
mov
sbb
imul
test
inc
push
dec
jns
lods
out
or
and
add
push
sahf
adc
inc
mov
out
adc
jae
aas
notb
sahf
adc
aad
jnp
divb
mov
push
outsl
adc
mov
cmpsl
add
dec
or
pop
int3
lea
push
loop
add
mov
subb
xor
sahf
loopne
cmp
lock
xchg
fnsave
scas
stos
pop
sbb
cltd
mov
mov
jl
pop
adc
loopne
inc
or
sbb
dec
jecxz
mov
xor
jg
adc
jmp
mov
cwtl
and
dec
or
mov
push
or
loop
rcrl
sahf
ja
ss
scas
mov
add
lcall
push
mov
test
testb
add
jo
cli
mov
pop
mov
push
std
imul
or
out
aaa
rcrb
push
jno
jg
pop
adc
dec
jne
or
sbb
out
cwtl
cmp
jbe
mov
and
ficompl
push
ret
fwait
mov
jle
pop
sub
mov
loope
mov
adc
jbe
clc
xchg
pop
popf
and
push
mov
push
cmp
lret
pop
lods
lods
sbb
inc
and
xor
popa
movb
lock
xchg
out
js
jp
es
inc
sarl
scas
pop
mov
aas
lock
movsb
xchg
out
loope
and
jnp
loopne
pushw
cmp
or
mov
or
pop
adc
pushf
ror
jmp
ret
push
fidivs
adc
inc
and
bound
sarb
mov
add
jl
cs
idiv
fst
inc
sahf
pop
dec
test
aam
add
testb
add
mov
xlat
ss
imul
mov
xor
adc
inc
lss
daa
shlb
in
dec
push
or
out
jo
push
push
add
inc
rcrl
mov
gs
jae
pop
pop
push
mov
mov
or
mov
push
dec
adc
shrl
xor
outsb
stc
popf
jne
sbbl
cmp
fwait
aam
clc
loope
cmp
loope
mov
xlat
sub
sub
scas
pop
cld
adc
add
xchg
xor
jnp
in
out
xchg
icebp
sub
add
repnz
and
pop
push
sarb
xchg
cmpl
leave
leave
pop
lods
hlt
popf
imul
lods
and
xorb
sahf
orb
push
cmpsl
and
xor
fs
pop
jp
pop
mov
cmp
inc
mov
cmp
inc
mov
add
xchg
call
and
cld
test
das
lret
add
add
add
jle
fldl
rol
cs
mov
lods
push
mov
stc
repz
sub
xor
pop
in
push
cltd
fstpl
daa
cwtl
mov
rol
and
xor
imul
std
repz
cs
scas
adc
xchg
xchg
mov
lock
xchg
clc
add
cmpl
xlat
mov
jmp
jecxz
int
fdivl
mov
aad
push
addr16
not
xor
push
and
lods
adc
push
aas
adc
adc
mov
jb
hlt
xchg
and
mov
jae
xchg
mov
stos
mov
mov
loopne
or
push
es
nop
cmp
mov
or
inc
xchg
in
or
pop
cmpsl
mov
stos
jecxz
fcoms
jg
push
aam
les
add
mov
jge
std
sti
iret
and
repnz
mov
add
add
add
lret
fwait
dec
sbb
dec
add
in
jns
inc
cs
push
pop
xor
mov
enter
nop
shrb
out
jge
push
and
fucom
pop
jns
fidivrs
mov
mov
adc
imul
mov
adc
aad
jno
sub
pop
push
dec
jge
mov
add
repnz
sub
push
rorl
repnz
mov
imul
push
stos
out
stc
cmp
or
movsb
adc
in
inc
pop
and
loopne
xlat
repnz
xchg
aas
pop
icebp
push
ficomps
push
int3
sbb
call
ja
leave
jbe
inc
add
stos
and
or
jno
mov
sbb
jbe
insb
jmp
syscall
add
loopne
xchg
inc
lahf
sti
hlt
out
cmp
loop
jb
stos
sbb
add
add
out
mov
and
mov
mov
push
cs
xchg
pop
sub
jmp
cmp
dec
adc
pop
popw
outsb
cltd
jo
insb
fsubs
pop
and
pop
and
push
pop
subb
enter
inc
inc
leave
mov
jge
jne
adc
shrl
insl
mov
addr16
push
loop
loope
push
std
in
cli
inc
out
sbb
dec
sub
popa
xlat
scas
daa
xchg
and
push
gs
mov
test
xchg
cli
cmpl
loope
push
or
stos
in
mov
dec
and
repnz
cs
jo
das
adc
push
fs
sub
out
push
mov
mov
js
add
jecxz
jg
mov
xor
sub
sidtl
or
jp
cmp
sbb
mov
test
lahf
daa
push
icebp
add
mov
mov
into
xor
mov
add
add
add
mov
inc
cs
sub
repz
mov
and
dec
sti
mov
adc
cmp
xor
jg
ficoms
ret
mov
mov
scas
mov
loop
jp
fdivrl
xor
push
cli
insb
shl
xchg
or
mull
clc
mov
mov
fmull
xchg
push
cmp
out
fsubr
scas
rcl
add
popa
or
adc
pop
dec
add
jno
inc
shl
or
pop
jb
inc
push
sub
jp
adc
push
push
mov
out
cmp
mov
loop
add
test
and
push
out
clc
outsl
mov
push
test
mov
adc
adc
and
cmp
ja
add
mov
ret
ja
in
pop
into
inc
and
out
add
and
out
ljmp
jp
cmp
repnz
mov
add
add
xor
lock
sbb
cli
xor
scas
in
rep
orb
and
and
jo
xor
leave
cli
add
xchg
inc
outsb
repz
mov
cltd
ljmp
hlt
ret
scas
add
push
je
adc
pop
lea
inc
xchg
fsts
pop
mov
push
loop
loop
or
push
inc
jne
push
gs
stc
mov
push
xchg
mov
icebp
add
xchg
xor
push
fnstsw
mov
mov
loopne
add
xor
push
lcall
fs
jmp
xchg
inc
pop
xor
jb
mov
push
mov
push
dec
push
mov
inc
fimuls
add
push
cld
xor
das
insl
jp
push
push
mov
push
mov
jnp
js,pt
add
imul
push
jnp
sbb
xchg
sub
inc
rorb
pop
cwtl
nop
add
testb
add
jge
loope
dec
sarl
mov
test
orl
jmp
clc
sub
scas
in
in
cmpsb
dec
out
inc
dec
cmpsb
cmpsl
es
pop
js
fwait
add
xor
or
sub
stos
xor
mov
daa
jle
arpl
ja
bound
popa
push
inc
mov
popf
into
and
addr16
push
les
insl
pop
push
mov
mulb
in
mov
iret
ret
xor
mov
xchg
sarl
jmp
iretw
js
clc
dec
add
lods
xchg
sti
xchg
pusha
out
ds
scas
nop
sub
fwait
jecxz
add
push
adc
lock
mov
outsb
std
mov
dec
cmpsl
mov
aas
shll
loope
push
daa
sub
enter
mov
fcmovnbe
pop
aad
jne
lods
add
push
aas
or
mov
insb
inc
mov
add
add
add
in
scas
aam
dec
fs
xor
jle
insl
dec
ret
fidivs
xchg
jbe
out
or
cmp
xchg
fidivs
xlat
dec
fwait
cltd
xlat
mov
iret
icebp
insb
mov
pop
sub
add
inc
add
cwtl
or
and
insb
sub
into
movsb
sub
hlt
lcall
adc
cmp
out
fs
inc
mov
dec
stos
pop
sub
dec
fcom
dec
mov
lret
inc
outsl
inc
adc
push
push
sbbb
xbegin
jg
pop
adc
push
lcall
ljmp
into
dec
mov
sbb
sub
xchg
mov
push
cmpsl
jno
aas
cmc
stos
icebp
pop
cmpsb
cltd
jge
push
mov
outsb
pop
sub
or
push
add
lock
or
lock
incb
mov
add
push
outsb
fdivrp
sub
lcall
add
testb
add
xchg
add
push
sub
nopl
test
aas
sbb
ret
fsubl
ds
arpl
pop
imul
lds
stos
cltd
or
sbb
pop
aam
add
or
pushf
jnp
push
bound
inc
je
aam
repnz
cltd
pop
cld
pop
xor
inc
das
dec
rcll
pop
push
js
mov
push
jae
mov
pop
xor
jbe
sbb
dec
cmp
mov
sbb
add
mov
cmpsl
loopne
lock
add
inc
add
js
ss
dec
nop
xchg
jl
push
popf
jns
pushf
jne
xchg
add
in
out
jmp
lods
cmp
call
adc
out
dec
js
out
dec
mov
add
sub
in
enter
sbb
dec
ret
rcl
lods
mov
out
out
test
and
out
popf
ret
add
mov
in
mov
daa
push
jp
add
testb
add
daa
fstl
cld
aas
imul
bound
test
ret
sarl
jbe
pop
je
mov
pop
loope
test
dec
and
mov
or
fidivs
mov
pop
push
cli
lods
mov
mov
jns
push
push
xchg
sub
cmp
out
jbe
or
pop
iret
add
push
cmp
lret
out
loope
enter
ret
pushf
xchg
xchg
shll
pop
aaa
call
cmp
outsb
xchg
fld
dec
jge
outsb
cltd
outsl
ret
mov
cmp
mov
adc
xor
jmp
arpl
dec
ja
movsl
pop
cmp
lea
add
xchg
xor
pop
push
xchg
xchg
and
jmp
jge
fdivl
push
aas
push
bound
dec
mov
pop
ret
mov
dec
dec
or
sub
insb
adc
loop
mov
add
dec
push
int
fstp
iret
push
lock
jmp
in
xchg
add
testb
add
push
sahf
lcall
rcll
add
scas
aam
and
lods
pop
mov
stos
adc
nop
ret
fimuls
outsb
mov
int
xor
jg
and
in
stos
es
add
pop
lods
int
test
adc
lea
fistps
inc
lcall
ss
push
js
jns
loopne
lret
imul
in
movsl
jecxz
hlt
push
ljmp
popf
add
mov
out
dec
add
add
into
xchg
jp
or
mov
sbb
pusha
adc
fcmovnu
xchg
push
jb
ds
jns
fbstp
pop
in
inc
dec
fsub
add
out
cli
pop
in
adc
mov
and
aam
mov
sti
and
arpl
pop
fisubl
int3
repnz
add
and
push
pop
sarb
nop
ret
jns
push
lods
loopne
mov
inc
stos
pushf
dec
add
add
add
adc
std
sub
pop
mov
xchg
add
testb
add
cmp
jge
mov
or
jp
cld
add
cmpl
lds
stos
xchg
mov
pop
push
sbbl
mov
fs
into
jg
push
jcxz
lcall
or
frstor
cmp
xchg
pop
cwtl
xorb
cmp
std
aas
and
add
test
stos
or
mov
sti
push
insb
sub
mov
lods
mov
cmp
add
push
lods
enter
mov
mov
push
clc
inc
je
xchg
out
leave
jne
sbb
mov
repz
popa
add
outsb
in
lcall
or
in
pusha
pop
sarl
aam
mov
add
push
popa
add
fdivs
ja
mov
daa
inc
pop
jecxz
or
outsl
xor
xor
xchg
adcl
sub
nop
xchg
pusha
push
xchg
add
mov
push
pop
pop
stos
pop
xchg
add
testb
add
popl
cltd
frstor
add
loop
mov
in
add
push
inc
push
shl
or
mov
xchg
mov
jg
xor
stos
mov
test
insl
mov
fldcw
and
es
cltd
je
xorb
jne
pop
jp
or
inc
icebp
outsb
mov
add
scas
dec
xchg
test
movsl
pop
incl
fcmovne
mov
int3
add
jl
enter
fstp
test
cmpsl
loop
js
sahf
pop
fdivrl
adc
adc
mov
add
or
and
lahf
negb
mov
cld
and
add
cmpsl
aam
inc
pop
xlat
mov
xchg
adc
and
cmp
popf
clc
xchg
inc
inc
sub
lret
dec
dec
out
sbb
fcoms
aaa
loope
arpl
sub
dec
mov
mov
fiadds
lret
push
idiv
dec
add
inc
or
test
mov
pop
xor
add
add
add
inc
icebp
sar
mov
testl
adc
lock
cltd
bound
stc
std
shl
out
dec
add
inc
js
ja
test
mov
int3
and
inc
das
xchg
rclb
mov
mov
jp
ffreep
sub
loopne
pop
pop
lods
fcoml
cmp
cmp
sbb
int3
leave
xchg
sbb
outsb
adc
sahf
jb
pusha
mov
mov
xor
nop
xchg
xchg
out
hlt
test
sub
fcoms
pop
sbb
mov
mov
cli
imul
xor
pushf
push
dec
push
mov
popa
fnstsw
xrelease
mov
mov
pop
rcr
repnz
sbb
dec
shrl
scas
sub
pop
sub
outsl
std
jmp
xor
addl
sub
cwtl
roll
add
ljmp
loop
dec
pop
into
xchg
add
testb
add
lret
xor
xor
pushf
scas
add
adc
push
cmp
fmull
dec
inc
or
jae
sbb
loope
es
lods
pushf
aad
sbb
add
ss
les
movsl
mov
push
and
mov
xor
aas
aam
aad
mov
aas
repnz
xor
xor
lcall
test
mov
xchg
sbb
mov
inc
shll
jb
adc
cli
mov
push
lock
repz
mov
arpl
stos
out
xor
push
loopne
sti
loopne
int3
fcmovnu
push
adc
push
or
mov
enter
es
inc
fwait
sub
dec
cmp
mov
loopne
xor
push
sub
jl
aas
das
cmpsb
sub
adc
js
lea
sahf
pop
push
pushl
jns
cmp
or
or
sub
ljmp
add
add
aaa
shlb
cmc
div
rcl
inc
pop
xchg
repnz
mov
testb
add
and
mov
or
pop
lcall
fcomps
sub
idivl
out
mov
inc
push
sti
jle
imulb
lock
and
and
out
xor
mov
loop
and
ret
mov
push
int
fdivrs
push
and
subb
arpl
push
pop
ret
shrb
dec
subl
jnp
and
icebp
ficomps
cmp
outsl
loope
sub
ficomps
sub
cli
cmpsb
in
mov
nop
enter
mov
bnd
aam
mov
mov
cmp
lret
jne
lret
sti
ss
sub
push
js
mov
sbb
out
addr16
cmpsl
das
sub
mov
ja
dec
push
bound
repz
push
adc
push
dec
clc
out
cmc
imul
push
pop
je
fdivrs
lods
jge
repz
add
pop
push
nop
push
sahf
rcr
pop
test
shlb
add
testb
add
pop
aaa
popf
lret
mov
mov
xorb
push
int3
scas
loopne
in
cmpsb
or
xchg
stc
int
fwait
in
insl
jae
xchg
adc
imul
and
test
lods
fnsave
je
rcrb
gs
sbb
dec
call
pop
pop
push
movsb
or
xchg
cmpl
xchg
adc
into
xor
push
xchg
repnz
add
push
jg
xchg
fistpl
cld
dec
sub
insl
gs
xchg
jnp
std
adcl
popf
mov
insl
int3
mov
push
int3
outsb
sub
jo
inc
cltd
loope
push
lock
xor
test
jb
sub
ljmp
stc
inc
out
test
mov
xchg
sub
fnsave
out
mov
lods
sub
xchg
lret
jmp
ficomps
xlat
inc
mov
mov
add
shll
cmpsb
jcxz
jne
push
inc
xchg
mov
add
testb
add
stos
cltd
addr16
out
push
mov
push
cmpsl
data16
jecxz
sahf
dec
mov
faddp
xchg
push
mov
cli
mov
lea
lea
mov
loopne
ja
mov
out
or
push
and
in
fs
loopne
push
jle
push
int
out
sub
cmp
dec
scas
hlt
jg
test
push
loope
pusha
jns
jnp
sub
mov
cmpsl
repnz
sub
in
fstp
imul
dec
cmp
xchg
int3
shll
or
hlt
xor
push
jp
pusha
lock
jbe
mov
dec
mov
test
scas
adc
test
cmp
int3
addl
mov
loop
inc
inc
add
sub
repnz
movsb
cmp
out
xor
cmc
insl
cli
jmp
cld
jo
loope
push
cmc
pop
idivb
lcall
clc
jnp
jg
in
cli
cwtl
inc
mov
loopne
sahf
xor
pushf
add
testb
add
stos
fstl
mov
std
xchg
or
jg
aas
fnstcw
and
leave
inc
inc
loopne
dec
or
test
mov
fldt
pop
jg
ja
xchg
mov
cmp
faddl
mov
mov
jo
stos
fisubl
aam
or
in
cmp
mov
or
xor
stos
cmp
test
pop
pusha
out
gs
jecxz
push
mov
jb
jp
addr16
pop
inc
popa
and
pop
rolb
pop
xchg
pop
out
test
sbbl
adc
inc
or
call
sarb
jle
stos
sti
andl
into
and
xchg
enter
test
pushf
mov
mov
adc
icebp
aad
jp
or
and
cmpsl
ljmp
mov
inc
cmp
sbb
xchg
xchg
add
ljmp
cld
inc
push
cltd
das
cltd
jg
dec
push
popf
add
testb
add
push
dec
pop
adc
xor
rol
insl
push
dec
in
mov
xchg
jge
xchg
shl
outsb
insl
ds
cltd
lods
loop
sub
jo
sbb
push
test
add
sbb
daa
inc
arpl
adc
out
repnz
xor
pop
aas
mov
and
popa
dec
adc
push
in
paddb
pop
adc
fldl
aas
out
jbe
mov
shl
push
cmp
mov
das
arpl
scas
dec
lea
xchg
sub
adc
adc
jnp
mov
stos
push
in
and
xor
lahf
jne
cltd
push
dec
mov
jb
pop
or
dec
jp
rclb
hlt
inc
lret
insb
mov
sti
mov
adc
mov
pop
test
add
jl
sar
std
jle
loop
out
jl
fmuls
add
testb
add
adc
loopne
jmp
mov
xorl
and
not
mov
imul
sti
nop
inc
adc
mov
push
adcl
aaa
jb,pn
dec
test
pop
and
add
fsts
xchg
pop
xchg
lods
sbbl
mov
sbb
mov
and
dec
rcrl
pop
hlt
mov
in
icebp
pop
xor
push
fadds
outsl
jbe
dec
ficoms
insb
out
test
outsb
jno
add
test
int3
out
mov
mov
mov
cmp
push
mov
loopne
mov
or
test
add
xchg
inc
test
call
jmp
push
adc
fcoml
push
nop
lret
fstps
daa
cmp
data16
fisubrl
add
cwtl
or
stos
xchg
cmp
pop
ss
jl
lahf
add
testb
add
sbb
test
sub
dec
addr16
stos
inc
mov
mov
js
mov
inc
xchg
xchg
mov
sbb
mov
mov
roll
push
xabort
movsl
adc
jecxz
xor
mov
ljmp
lds
xchg
mov
test
in
daa
jl
adc
rcl
inc
jae
repnz
sub
inc
sub
mov
dec
fstpl
call
frstor
fmull
lods
push
cmc
mov
lahf
inc
inc
scas
imul
sahf
fcom
lret
jle
or
notb
push
mov
aad
out
jo
add
mov
stc
ja
adc
add
es
cmpsl
adc
fwait
sub
mov
jge
lcall
xor
mov
jo
sbb
inc
arpl
adc
sbb
add
outsl
sti
into
aad
aam
adc
stc
clc
lahf
add
testb
add
ljmp
pop
repz
stos
inc
xchg
loopne
frstor
scas
fistpl
shrd
lahf
daa
stc
mov
pushf
or
fwait
out
pop
sbb
xorb
roll
inc
push
mulb
mov
adc
shrl
inc
mov
std
adc
inc
sbb
aam
rcll
add
push
jle
mov
sbbb
jne
jo
or
test
sti
decl
inc
test
dec
subb
jae
jp
es
and
call
dec
outsl
insl
cmp
mov
out
xchg
mov
fwait
scas
sbb
loope
bound
loop
inc
cld
incb
int3
mov
jno
and
cmp
imul
cmpsb
dec
add
out
mov
sahf
xchg
mov
adc
hlt
push
hlt
pop
sbb
add
dec
std
out
xlat
aas
jle
ds
out
mov
add
add
add
adc
adc
sbb
pop
hlt
push
xor
pop
cmp
xor
jp
sbb
or
scas
stos
inc
xor
fisubs
rcrl
lret
pop
push
push
sbb
dec
mov
mov
std
loop
dec
fs
add
inc
fsubrl
lds
mov
lret
ja
nop
jecxz
int3
cmc
xorb
sti
in
mov
pusha
cmpsb
loope
shll
xchg
arpl
xchg
outsl
inc
mov
push
push
pop
mov
bound
pop
movsb
inc
jmp
dec
pop
mov
mov
divb
shrb
lea
mov
sbb
sub
jne
fnstenv
pop
mov
xor
popf
lods
mov
sub
jp
add
mov
jmp
mov
mov
add
imul
outsl
popl
push
in
int3
scas
in
add
testb
add
lock
push
movsb
adc
and
mov
dec
out
push
and
call
icebp
imul
mov
loope
clc
cltd
jmp
adc
shll
push
sub
cmp
xchg
ja
in
outsb
test
xor
sbb
movsb
push
nop
sbb
into
mov
mov
dec
dec
outsb
sub
fadds
rcr
cmc
test
gs
iret
jmp
inc
insb
xlat
les
jmp
mov
dec
xchg
jecxz
fcmovu
test
and
mov
jno
into
mov
mov
dec
in
jmp
and
and
lods
in
int3
fistl
fs
mov
push
pop
or
or
lret
aam
push
add
in
minps
fwait
dec
out
pusha
nop
or
stos
loopne
xorl
dec
dec
sub
arpl
cmp
add
add
adc
sbbl
mov
mov
lock
add
call
lret
out
push
adc
aam
sbb
inc
adc
aaa
xor
inc
and
and
pusha
arpl
or
fadds
push
test
push
inc
mov
lret
push
into
cwtl
out
jmp
xchg
mov
cmpsl
fwait
ja
mov
divl
aas
cld
mov
negl
subl
nop
jmp
fcmovnu
push
jp
jecxz
lahf
into
and
adc
mov
sarb
mov
xor
ret
call
lock
cmp
inc
jnp
shll
jge
adc
xor
or
xchg
sbb
daa
into
cltd
jp
cmp
mov
or
pop
out
sub
ret
adc
xor
incl
test
inc
mov
inc
test
orb
movsl
mov
cmc
and
xor
add
mov
imul
and
or
sti
std
cmpl
add
testb
add
shlb
sbb
mov
jbe
imul
int3
cmpsb
push
daa
sub
xor
in
scas
jne
sbb
pusha
clc
stos
pop
daa
inc
fisubrs
outsb
inc
add
and
iret
or
sub
mov
icebp
aas
xchg
inc
lock
push
daa
jae
dec
fbstp
dec
mov
mov
cmp
xchg
std
lods
xchg
xor
mov
adc
add
ljmp
jne
call
pop
js
pop
fistpll
mov
dec
orl
test
push
sbb
and
or
jp
mov
cmp
mov
imul
test
xchg
ret
sbb
out
mov
add
sub
in
jno
pop
cmp
jmp
mov
lea
add
mov
jge
jg
decl
xchg
inc
lock
testb
add
add
jnp
xchg
or
sub
or
mov
dec
lds
pusha
mov
loop
sub
mov
les
movl
sbb
jle
cld
mov
or
mov
add
rorb
flds
mov
lret
jmp
jb
jl
scas
ficoms
dec
push
push
jge
pop
inc
call
push
cli
ss
std
push
pop
movb
int3
in
mov
imul
pop
dec
and
xchg
mov
jae
mov
jnp
or
mov
xor
test
mov
fisubl
jle
xor
and
fists
pop
jmp
sbb
and
inc
push
imul
or
insl
ljmp
xlat
add
cltd
sub
out
das
mov
aam
dec
daa
mov
add
add
dec
mov
sub
ds
push
mov
stos
jo
mov
aaa
adc
add
orl
pushf
nop
push
fcompl
cmp
cli
loope
cmpsl
jge
cld
dec
mov
mov
int
icebp
cmp
pop
jo
sahf
add
test
mov
sbb
clc
mov
divl
push
pop
pop
subl
jmp
test
insb
imul
fistps
lcall
imul
loope
popf
insl
mov
or
jmp
pop
imul
ja
xchg
add
mov
inc
imul
aad
std
test
jmp
fcmovne
jns
mov
mov
push
lea
mov
hlt
je
dec
aam
push
pushf
mov
add
add
jmp
jl
mov
ds
adc
pop
sarb
add
pusha
test
mov
popa
mov
add
testb
add
fsubp
insb
pop
and
shrl
xchg
jnp
lcall
jmp
inc
jp
sub
xor
test
push
xchg
jle
scas
adc
sahf
pop
nop
jge
aad
outsb
xor
sbb
cmpb
mov
inc
leave
lahf
and
jmp
mov
test
insl
clc
cmpsl
dec
mov
inc
cmc
or
loop
pop
mov
inc
adc
or
hlt
mov
fidivrs
int3
scas
mov
aaa
adc
inc
jp
or
mov
sbb
das
or
out
pop
cmp
mov
ljmp
push
mov
popa
fisttpl
test
pcmpgtw
ljmp
mov
jo
jl
movsl
push
adc
adc
cwtl
jb
lahf
cs
sbb
cmp
out
insl
test
out
xor
insb
add
loope
roll
jo
stos
jle
cmp
mov
add
add
mov
repz
repz
icebp
stos
test
add
testb
add
cltd
add
add
movsl
sbb
jbe
rol
add
sub
jne
out
jb
push
popa
pop
jecxz
sarb
je
in
fisubrs
in
test
aaa
cmpsl
dec
insb
pop
aas
jge
xchg
mov
or
clc
dec
outsl
sub
inc
flds
dec
push
loop
jo
les
pop
mov
mov
pop
scas
sub
dec
add
arpl
imul
test
roll
cmp
es
adc
out
es
push
xor
pushf
icebp
dec
push
or
gs
ljmp
adc
jmp
jle
add
push
jb
mov
es
ret
arpl
inc
gs
inc
addr16
or
mov
out
sub
inc
add
mov
sub
jle
repz
out
jg
xchg
push
mov
dec
in
aas
pop
jnp
mov
add
movsb
mov
mov
mov
cmp
xor
enter
add
add
add
sbb
sbb
sbb
insl
pop
xor
xlat
ficoms
loopne
and
mov
jl
aaa
jmp
outsb
iret
aas
stc
dec
test
sub
dec
aam
into
into
or
pusha
sub
and
mov
sarb
addr16
gs
addr16
xor
and
push
jne
sbb
movsw
push
mov
inc
xor
sub
jns
in
fisttpll
push
loop
pop
xchg
or
icebp
je
and
arpl
repz
add
roll
out
cmp
sbb
and
iret
sbb
data16
enter
pop
jmp
mov
cltd
jl
mov
fwait
pop
mov
pop
jne
into
icebp
push
pop
sub
std
add
icebp
ret
sahf
call
out
xor
push
je
fists
sub
add
std
mov
xchg
test
add
fcompl
or
xchg
sub
das
sub
adc
cli
test
movsb
insb
mov
jo
data16
sub
pop
mov
repz
adc
mov
ret
and
aas
into
lret
xor
and
mov
dec
xor
push
xchg
mov
dec
mov
inc
and
iret
cmc
cmc
fldcw
test
and
dec
mov
stc
cs
adc
test
pop
xchg
iret
cltd
test
sahf
cmp
mov
mov
mov
adc
mov
pushf
je
mov
cmpsl
cmp
rcrb
stos
gs
mov
sbb
sub
loop
testl
testl
in
add
fbld
mov
xor
sar
dec
jmp
add
push
inc
fdivl
stos
push
jl
stos
add
testb
add
jns
outsl
xchg
jl
and
or
mov
ja
add
movsl
lcall
mov
pop
mov
hlt
and
test
repnz
or
and
int
dec
push
test
xlat
dec
mov
xchg
push
insb
jae
sbb
xor
add
outsb
test
push
inc
out
pop
adc
ret
mov
sub
ja
and
aas
dec
fwait
sbb
add
or
add
jno
mov
push
sub
lret
ret
jb
call
cs
aad
stos
xor
scas
mov
or
mov
xchg
aad
jnp
push
repnz
push
icebp
jb
ss
mov
pop
cwtl
dec
out
push
mov
sbb
iret
cmp
aam
addr16
mov
add
sbb
mov
pusha
sbb
add
testb
add
dec
sbb
sbb
dec
lret
cli
outsb
inc
dec
jg
and
ss
ret
sbbl
xchg
popf
push
or
xbegin
lret
and
mov
int3
fchs
arpl
call
test
or
jl
xor
sub
cli
xchg
cmp
in
dec
rclb
inc
fs
jl
and
inc
cmp
mov
and
cmpsb
aam
pop
mov
inc
pop
push
add
jb
and
loopne
add
dec
and
int
xchg
xchg
ljmp
outsl
mov
pushf
mov
push
or
mov
aas
insl
adc
pop
adcb
in
push
test
push
or
add
decb
sbb
jno
loop
int3
inc
ficoml
int
push
xchg
les
adc
sbb
sbbl
add
lods
mov
jmp
dec
jg
add
stos
hlt
jmp
ljmp
cli
js
jbe
add
testb
add
arpl
push
arpl
xchg
sub
jp
sub
pop
loope
xchg
or
and
sti
sbb
xor
and
fistpll
mov
xchg
dec
test
mov
mov
add
cmp
fildll
leave
xlat
mov
mov
loop
xlat
loop
lcall
sbb
dec
push
insb
sbb
rcr
test
dec
jae
or
lods
loope
and
mov
incb
xor
popa
pop
fsubrl
rorl
sahf
adc
mov
enter
dec
fdivl
jmp
movsb
jg
sbb
mov
add
outsl
cmp
pop
repnz
add
adcb
hlt
adc
add
ds
cld
inc
mov
mov
data16
push
mov
imul
jno
fs
jl
mov
jbe
adc
add
push
nop
out
xlat
out
jg
dec
cmp
fcmovne
fwait
inc
insb
lods
add
testb
add
iret
add
out
std
dec
clc
adc
sarl
stos
cmc
jp
mov
ret
outsb
add
in
leave
aam
jne
daa
cmp
jb
jno
jle
jo
in
push
cmc
cld
leave
lret
or
out
mov
or
sub
dec
xlat
inc
rorb
pop
sub
lea
or
pop
lahf
fsubs
pushf
ja
xor
mov
ret
inc
es
ljmp
lcall
or
cmp
pop
arpl
leave
xor
sbb
int
dec
fmull
stos
scas
xchg
aam
sbb
adc
jp
adc
mov
imul
rcrl
lock
cmp
aam
mov
cmp
jg
fnstcw
push
pop
push
insl
jne
pop
dec
xchg
and
add
add
sbb
pop
fbstp
mov
lock
bound
add
pop
popa
push
jne
and
in
es
fcmovu
ja
xchg
xchg
imul
lock
mov
and
cmc
cmp
dec
mov
lret
jns
mov
loopne
dec
outsl
aam
insb
aaa
rcrl
xchg
mov
ds
shlb
and
rcr
outsl
fistpl
ja
in
jb
fidivs
cld
mov
ss
cmpsl
fisttpl
jmp
push
xor
or
adc
sub
push
xchg
xchg
outsb
es
xor
inc
xchg
dec
or
popa
dec
repnz
cwtl
fnstcw
aas
fldcw
shl
dec
mov
sarl
rcll
mov
stos
or
mov
mov
or
adc
and
adc
or
int3
cmp
push
mov
mov
cld
arpl
dec
jp
jl
add
mov
ja
jl
pop
scas
add
testb
add
pop
dec
outsl
in
das
lret
xchg
call
adc
fwait
es
dec
lock
pop
pop
bnd
mov
out
fdivrs
mov
sbb
dec
mov
cwtl
movsb
pop
xor
adc
sti
in
sbb
pop
mov
in
test
jecxz
cmpsl
cwtl
mov
pop
mov
xchg
out
pusha
in
sti
or
sub
inc
frstor
rcl
cmp
ds
mov
mov
jo
das
out
adc
test
in
xor
push
out
pop
rcl
sub
xchg
inc
or
xor
jo
lcall
lahf
jle
pushf
lcall
mov
flds
push
push
pop
fcoml
mov
xchg
mov
andl
mov
inc
aam
mov
adc
jno
or
jge
push
or
jge
fucomp
xchg
nop
push
roll
lret
jnp
sti
jmp
xchg
sub
mov
dec
mov
add
add
add
shl
js
xchg
mov
jp
repz
fwait
or
ja
daa
add
jae
fs
cs
inc
fsubrs
inc
xchg
and
ljmp
add
lods
lret
call
mov
sub
mov
jb
cs
sarl
fnstenv
inc
push
jecxz
stos
pop
and
mov
test
cld
int
push
pop
sbb
xchg
sub
cmp
mov
add
xchg
std
daa
mov
xchg
repz
mov
arpl
fisttps
xchg
cld
cli
test
jns
push
cltd
adc
push
call
mov
inc
inc
or
lds
mov
stc
out
mov
or
adc
nop
repz
movsl
iret
add
mov
xchg
stos
dec
inc
stos
jg
lods
imul
sahf
popf
outsl
cmpsl
mov
rorb
adc
or
dec
fwait
add
mov
jecxz
lock
jge
cmp
add
add
add
jae
clc
mov
popf
cmpsl
sbb
xchg
pushf
mov
jnp
push
test
test
pop
mov
flds
mov
xchg
or
mov
sub
push
xchg
push
aaa
cmp
mov
cmpsl
mov
ss
xor
je
push
lods
add
push
daa
push
sbb
ja
pop
inc
lret
mov
or
hlt
mov
jnp
mov
sti
xchg
and
dec
cmc
in
sub
mov
jecxz
cmpsb
lret
leave
call
dec
push
popf
mov
mov
inc
xlat
pop
shll
add
fs
mov
sbb
jo
mov
in
lret
jge
jp
fldt
jecxz
cs
test
popf
jecxz
outsl
and
or
mov
fmul
cmp
in
add
xchg
cmc
pop
pushf
lret
add
cld
mov
test
cmp
add
int3
loop
test
add
cmovg
jne
outsl
or
add
cmovo
cs
iret
jecxz
xor
gs
cmpsl
aad
in
adc
push
dec
outsb
sub
inc
cmp
sub
cmpsb
inc
jns
out
cwtl
nop
clc
jg
add
rorb
cmp
imul
cltd
lock
repz
pop
mov
xor
or
mov
mov
sub
out
bound
jle
testb
repz
aaa
cmp
adc
push
imul
fadds
jbe
test
cli
fldt
cli
clc
inc
mov
xchg
call
je
lahf
lods
fsubr
aaa
cmc
pop
push
xchg
sarb
lret
shr
in
push
mov
xchg
mov
daa
aad
and
and
dec
popf
or
sbb
cmp
ja
or
add
mov
dec
das
pop
out
cmc
mov
mov
mov
add
add
add
mov
mov
insb
cmp
iret
fcoms
shl
xor
pushf
test
mov
repz
mov
stc
roll
and
in
mov
sbb
jmp
fs
rcrb
sub
sbb
rorb
sub
mov
ss
push
dec
push
gs
lret
negl
bound
test
std
fsub
cmc
cmp
sbb
in
cltd
ja
inc
and
or
adc
or
mov
ss
adc
pop
jg
rcll
inc
pushf
test
push
std
jge
jo
repz
iret
call
xor
xor
or
mov
jmp
pop
inc
inc
lahf
adc
frstor
dec
fstpl
cmp
sbb
dec
ret
push
imul
scas
sahf
mov
add
fucomip
std
dec
std
pop
mov
sti
pop
dec
es
add
add
add
and
and
and
jmp
mov
push
mov
nop
jmp
cmc
cli
fisttpl
cltd
dec
mov
and
lds
into
mov
pushf
mov
aam
out
ljmp
add
fnstenv
inc
cli
cmp
cli
sti
es
inc
push
popf
jle
jl
mov
mov
push
sbb
cli
mov
notl
out
stos
lret
push
sbb
push
lcall
pop
inc
jle
iret
add
mov
push
shlb
and
pop
jnp
in
bound
hlt
pop
cmpb
adc
mov
popf
adc
xchg
dec
pop
iret
sbb
aaa
push
and
mov
sbb
shl
pop
mov
testl
adc
dec
jecxz
mov
jp
mov
sbb
add
mov
xchg
cmp
mov
add
fidivs
loop
ljmp
insl
jae
sbb
add
testb
add
adc
dec
popf
xor
lock
stos
fnstenv
sbb
cs
ss
pop
and
sbb
lock
mov
popa
aas
sub
add
adc
pandn
jmp
lds
inc
stc
mov
inc
or
adc
cmc
push
pop
jg
push
and
mull
repz
repz
movsl
dec
pop
cs
sub
adc
sbb
pop
repz
push
push
std
daa
or
push
rcrb
lea
dec
dec
aaa
inc
fsubr
inc
push
or
daa
data16
sarl
jle
fs
push
cmc
shlb
xor
cmp
movl
dec
cltd
add
inc
js
addl
and
call
ds
leave
sbb
clc
enter
sub
mov
loope
cltd
stos
push
popf
xchg
sbb
outsb
sub
add
push
xchg
jg
jmp
std
jge
in
xchg
popa
cmp
ja
mov
add
add
add
push
into
test
cmp
inc
testb
cmp
push
out
jb
loop
data16
test
enter
mov
sub
pushf
sbb
mov
outsb
push
es
jb
arpl
sbb
fisubrl
inc
sahf
insb
pushf
xor
mov
scas
jmpw
ficoms
loopne
or
scas
xchg
inc
stos
movsl
ljmp
sub
mov
lods
ss
add
outsb
ljmp
xlat
jb
push
repnz
int
xchg
or
iret
xorl
jne
mov
lahf
mov
cmpl
lret
test
popa
or
out
jbe
jl
arpl
loopne
popa
adc
paddb
inc
xchg
nop
jno
in
sbb
popa
jae
mov
push
xchg
fiaddl
out
inc
fcomip
cmp
movsl
out
test
dec
inc
mov
add
push
divb
std
cmp
jnp
or
add
fbstp
ret
mov
pop
iret
scas
jg
lcall
decb
std
test
popf
pop
cmp
daa
les
sub
loope
mov
adc
rcrb
pop
dec
popa
or
and
inc
add
rorl
pop
sbb
sbb
leave
mov
sub
xchg
orl
pop
push
mov
cmpsb
sbb
cmp
pop
das
push
popa
jg
lods
sbb
lods
sahf
dec
sbb
popf
xchg
add
fidivl
stos
dec
je
rcrl
imul
pusha
mov
mov
inc
ret
sub
lcall
or
or
mov
into
cli
je
dec
adc
ret
mov
cmp
out
cmp
xchg
and
xlat
imul
ljmp
stos
fld1
pop
xchg
lret
lds
xlat
mov
add
add
xor
cmp
ficoml
rcrl
add
add
add
lea
inc
bound
je
sbb
or
jge
mov
stos
xchg
cs
lds
imul
jnp
mulb
or
lcall
mulb
sbb
sbb
call
leave
mov
push
fdivl
add
mov
xor
cmpl
inc
mov
test
cld
pusha
mov
lods
lods
aam
jno
cmp
xchg
movsl
pop
push
add
imulb
inc
out
mov
mov
fisttps
sti
pop
pop
test
nop
xchg
xchg
mov
adc
ss
inc
jbe
jge
add
call
push
add
xchg
xlat
sub
push
repz
jp
das
insl
stos
pusha
mov
lret
negl
adc
sbb
xchg
mov
inc
fiaddl
stos
jge
in
xor
inc
add
es
les
mov
push
push
adc
fsincos
hlt
mov
add
filds
mov
fwait
jecxz
cmc
adc
xor
cmp
fimuls
fists
push
arpl
in
inc
adc
pop
lret
and
jo
popa
ss
inc
imul
push
xchg
hlt
or
test
and
jl
xlat
mov
adc
inc
cmp
inc
rclb
and
fsubs
fldt
xchg
sub
scas
and
and
mov
lahf
xchg
sbb
leave
add
and
mov
popf
dec
inc
je
negl
mov
adc
jge
es
pusha
jmp
jb
stmxcsr
fidivrl
add
and
sti
inc
sbb
cmp
pop
dec
lcall
std
jb
xor
inc
sub
es
outsl
sbb
scas
inc
rol
xlat
mov
cmp
sbb
les
mov
js
lahf
pop
add
dec
or
pop
stc
out
push
insb
xchg
cld
sub
push
cmp
ljmp
add
push
cmp
mov
dec
or
jmp
push
jae
sub
mov
push
dec
imul
in
pop
or
int3
and
daa
std
dec
xlat
lahf
fbld
hlt
inc
cmpsb
dec
inc
mov
lret
pop
mov
dec
adc
xchg
lods
add
int
cmp
out
ret
adc
mov
movsb
push
mov
pushf
xchg
jno
pop
and
test
inc
lds
rcrl
cld
dec
xchg
loop
fidivs
dec
stos
loope
cwtl
add
dec
dec
movsl
sti
mov
pop
outsl
mov
jne
jl
fsts
add
jbe
inc
mov
mov
test
mov
in
push
sub
jns
das
lcall
mulb
cmp
aam
add
or
out
shll
or
leave
xchg
cmp
mov
add
les
out
loop
mov
pop
test
or
sbb
add
push
mov
lcall
ret
sahf
cmp
mov
add
test
or
test
sub
pop
jp
xchg
clc
cwtl
jb
or
repz
in
int
mov
push
xlat
lahf
pop
pop
xchg
sbb
int
pop
cli
xor
mov
dec
shll
in
cmpsb
push
xor
pop
aad
je
or
jle
mov
sbb
mov
xor
cmp
andb
jns
adc
sub
push
popa
jne
test
xor
movsl
cmp
mov
mov
push
and
inc
ljmp
mov
sub
mov
inc
cmp
push
jae
mov
pop
mull
aas
jge
sub
stos
push
adc
and
and
jae
inc
lds
lahf
fs
mov
xchg
cmp
or
or
testb
pop
movb
xorl
insb
scas
insb
fnstsw
testb
add
lret
fidivrl
adc
stos
scas
stos
pop
mov
pop
repnz
mov
xor
mov
mov
dec
lods
ljmp
mov
mov
andl
sbb
mov
pop
push
xchg
and
data16
xor
xor
add
aam
push
in
xchg
test
shl
jnp
mov
mov
and
adc
inc
inc
imul
sbb
pop
pop
loopne
mov
insl
mov
sub
sbb
jb
lods
push
jnp
test
jb
dec
pop
add
mov
lea
into
pop
mov
mov
fs
cltd
sub
mov
jnp
mov
daa
ror
shl
xchg
sbb
cmp
mov
add
ror
mov
cmpsb
xor
test
or
mov
aad
sahf
pop
in
adc
add
sbb
add
dec
pop
pop
sbbl
fstpl
icebp
aam
int3
mov
add
push
in
cmpsl
jae
mov
fisttpll
fimull
mov
xchg
fsubr
cmp
jae
mov
sbb
fdivrs
cmc
push
push
stc
xchg
jne
xchg
ss
pop
mov
mov
fnstsw
fmul
inc
jmp
fidivs
cmp
push
push
xor
jb
or
mov
cwtl
jns
pushf
dec
ds
xchg
enter
loop
sbb
sub
ss
and
add
hlt
stos
mov
xor
daa
xor
jae
sbb
or
out
fstps
test
inc
jno
in
sbb
add
hlt
sub
ret
fwait
and
adc
cld
movsl
inc
fcompl
or
shll
lock
and
adc
outsb
mov
push
xor
int3
xchg
lods
lock
pushf
adc
lret
pop
movsl
xor
cmp
inc
addb
loope
mov
jecxz
out
sub
jge
ret
add
add
add
js
dec
dec
pop
test
jnp
sub
ja
cmp
or
add
sarb
cmp
push
jecxz
shlb
xchg
mov
inc
lds
mov
popf
and
jns
push
pushf
sbb
push
sub
ja
inc
in
loopne
aam
addr16
jl
lods
mov
stc
xor
js,pn
and
inc
xchg
movsl
in
ret
mov
jge
sub
mov
lret
jo
stos
or
stos
or
mov
push
dec
adc
or
jae
sbb
popa
rcl
out
ds
clc
test
inc
lret
in
cmp
popa
jmp
jae
lock
adc
decb
add
bound
outsb
xor
mov
arpl
std
insb
push
lods
mov
addr16
stos
test
mov
aaa
stc
arpl
inc
sub
add
std
test
jg
jbe
movsb
fistl
js
mov
add
add
lea
mov
push
frstor
clc
out
das
xor
aam
call
push
or
aad
push
fcompl
add
cs
mov
jl
into
dec
jl
cmp
sub
push
jle,pt
jnp
adc
xor
aam
mov
push
xchg
in
sbb
adc
cmp
stc
rclb
ljmp
test
mov
cwtl
outsl
imul
subl
aas
loopne
lds
in
xchg
lea
sbb
sysexit
dec
cmpsb
jecxz
insl
ret
push
mov
push
sahf
pop
and
ss
mov
sbb
jno
jnp
and
divl
data16
test
out
sti
xchg
push
addl
notb
ret
mov
mov
xchg
dec
test
ror
mov
popa
jae
popa
xor
push
fcmovne
or
dec
out
mov
repnz
add
adc
in
lcall
xor
fdivr
subb
add
cmp
xor
aaa
in
mov
inc
call
push
mov
fists
mov
xchg
or
mov
popa
xor
sbb
push
gs
cmp
dec
push
ja
movsb
jmp
lds
xchg
jg
cmp
popf
out
pop
popa
fbstp
sbb
and
adc
les
into
add
hlt
adc
fisttpll
sub
lea
stc
call
stos
pop
mov
inc
lcall
mov
xor
inc
mov
inc
daa
and
xor
pushf
aad
xorb
adc
fdiv
add
sub
xor
inc
fwait
sub
cmp
sub
repnz
push
push
nop
pop
cld
sbb
aas
push
rol
xchg
aaa
loope
jne
stc
or
pop
subl
fldl2e
ljmp
adc
add
sub
jg,pt
stos
dec
push
jo
scas
into
fbld
add
jno
shl
or
int
fidivs
fimuls
faddl
lea
sbb
push
cmc
jmp
lock
dec
adc
jmp
and
loopne
out
or
xchg
aaa
xorb
dec
lea
dec
loop
icebp
cmpsb
cltd
sbb
mov
outsl
rorl
stc
jns
lods
add
popa
cmpsl
dec
cwtl
cmp
inc
sbb
jge
fbstp
dec
and
clc
dec
jl
xor
mov
icebp
or
out
test
subl
inc
popa
cmp
cltd
cmpsb
out
push
fisttpll
fsubs
arpl
sbb
push
das
lahf
adc
push
push
pop
adc
xor
aam
mov
ret
and
xchg
xlat
inc
bound
ja
xchg
scas
inc
test
aad
xor
xchg
fldt
pop
mov
mov
das
inc
cmp
aam
push
addr16
sahf
insb
adc
add
insl
sbb
outsl
mov
inc
out
lcallw
add
add
xorb
popa
cltd
sbb
mov
hlt
jnp
lcall
adcl
shr
sbb
mov
fwait
sbb
mov
inc
xchg
cmp
mov
lods
mov
xchg
dec
js
xchg
mov
lea
lcall
mulb
rorl
xchg
adc
adc
or
fdivp
in
insb
xchg
insl
fsubrs
fiadds
mov
cmp
dec
sub
mov
and
sbb
imul
lahf
into
mov
inc
add
adc
push
movsl
mov
inc
push
ret
data16
push
stos
aam
and
js
movsl
jle
sub
or
inc
movsl
mov
pop
xchg
jmp
fdivrs
inc
js
inc
imul
xor
out
clc
adc
dec
pop
jns
mov
out
inc
add
add
inc
fbld
mov
cltd
jb
pushw
nop
ret
testb
add
push
add
cli
cmp
xchg
test
stos
xchg
popa
repnz
cmp
cmp
adc
jne
aam
add
cltd
test
mov
into
xor
mov
inc
int3
pop
xchg
adc
fs
sbb
and
int
das
repnz
adc
jae
out
sub
and
jne
movsl
leave
jnp
push
pop
cld
sub
cmpsl
out
add
loopne
lds
rcll
filds
pop
adc
mov
fcomps
mov
daa
sub
pusha
lahf
xchg
xchg
push
lds
call
adc
mov
fwait
stos
jbe
jnp
sarl
je
ja
in
test
sbb
cld
clc
pop
sbb
push
add
int
call
or
xor
ror
dec
loop
mov
xchg
pusha
mov
jle
jge
lock
mov
cs
add
repz
out
add
fistpll
call
dec
cmp
fs
add
testb
add
int3
push
or
out
aam
pop
stos
fnstsw
dec
out
popf
sbb
adc
cmp
in
divb
movsb
mov
mov
dec
dec
add
adc
jbe
daa
in
dec
mov
into
nop
jp
ljmp
dec
sub
add
add
movsb
out
pushf
pop
sti
stc
inc
jns
stos
gs
mov
push
mov
sub
loope
ffreep
stos
sahf
sbb
lock
aad
call
ja
lahf
or
xchg
jae
adc
into
add
lret
loopne
out
add
inc
add
fldenv
pop
enter
jg
add
xor
dec
in
faddl
std
xchg
cmpsl
cmp
sub
jbe
jp
dec
xorl
gs
mov
fs
addl
into
std
sti
leave
sti
iret
ljmp
mov
les
add
add
add
outsl
jb
and
xchg
imul
fiaddl
sti
leave
and
repnz
xor
xchg
dec
add
popw
cwtl
or
xor
rcl
dec
mov
pusha
std
xchg
mov
xchg
sub
sbb
idivb
inc
sub
lock
cli
iret
xchg
aaa
test
fstps
fsubrp
mov
and
lods
cmp
test
test
jmp
repnz
lock
mov
sub
idiv
es
and
add
daa
sahf
lods
dec
dec
dec
mov
lahf
jns
movsb
push
or
std
adc
imul
imul
cmp
movsl
cmp
pop
and
jecxz
ljmpw
push
fisubs
ss
out
jmp
dec
lcall
fwait
cmp
inc
add
mov
mov
es
mov
and
jb
add
testb
add
popf
mov
xchg
or
or
movsl
aaa
mov
dec
test
inc
or
aaa
sbb
xchg
sarl
cld
dec
rcl
push
lea
lcall
lea
xor
mov
bound
and
scas
mov
test
bswap
data16
out
enter
repz
inc
mov
lret
and
xchg
and
into
pop
in
xor
shlb
push
pop
sbb
lahf
lock
cmpl
fwait
and
and
lahf
enter
les
xor
fwait
sbb
sbb
push
daa
dec
or
sub
lcall
mov
shlb
rcll
in
roll
pop
or
test
cmp
sbb
dec
icebp
fwait
xchg
cmp
xor
mov
cmp
sbb
xchg
pop
repnz
inc
inc
fildl
xor
test
pop
cs
add
add
jg
mov
sub
inc
dec
fsubrs
add
testb
add
jle
pop
mov
or
mov
push
scas
jns
push
adc
mov
call
mov
add
or
fs
das
or
or
fimuls
push
xchg
adc
mov
jae
das
jno
lcall
xchg
or
fwait
div
aaa
dec
ret
or
xchg
fiaddl
pusha
and
cld
mov
mov
and
dec
sbb
lea
pop
add
loope
lcall
cld
pop
js
push
sub
ficompl
popf
sti
lods
pop
jmp
inc
push
enter
mov
xchg
dec
pop
sbb
arpl
jae
xor
jmp
dec
repz
or
and
insl
sarl
cltd
stos
ficompl
adc
add
inc
enter
pushl
out
adc
stc
dec
imulb
add
add
stc
inc
adc
outsb
insb
cli
pop
inc
adc
sub
xchg
lret
jmp
call
xor
add
repz
mov
sub
sub
outsb
test
pop
pop
jbe
shll
cmp
dec
and
stos
xor
std
sub
add
xor
mov
jbe
leave
rol
mov
xor
and
inc
mov
jno
sub
sbb
dec
mulb
or
xchg
push
dec
in
dec
xor
lock
mov
in
pop
dec
mov
adc
arpl
xor
jne
das
mov
mov
adc
es
dec
inc
adc
stos
mov
jae
xchg
jmp
xchg
in
iret
sbb
fstpl
ds
mov
cs
inc
clc
stos
dec
fsubrp
notl
add
xlat
pushf
shrb
jb
ret
xlat
aam
enter
add
add
shlb
cmpsb
or
and
addr16
clc
in
push
imul
out
pop
stos
in
hlt
mov
inc
and
fidivs
and
aam
mov
sbb
in
test
jge
xchg
sub
lahf
jb
test
negb
mov
imul
sbb
mov
jo
push
hlt
push
aam
rcrl
push
cwtl
and
lods
push
rcrl
mov
xchg
jmp
jmp
pop
iret
adc
out
or
stos
les
orb
cmp
fnstcw
jmp
mov
ss
je
or
test
dec
mov
cld
scas
data16
fstpl
jno
js
jle
pop
mov
mov
test
sti
repz
js
lods
lret
jmp
std
push
cmp
pop
add
sub
scas
mov
xchg
push
outsl
imul
add
testb
add
outsb
out
xor
xchg
call
mov
inc
cmp
dec
sbb
cmpsb
cmp
mov
xor
cli
scas
mov
sbb
jae
mov
pop
or
mov
jl
push
sahf
pop
cs
pop
loope
in
cli
sbb
fsubr
scas
push
push
adc
movl
push
pushf
gs
dec
mov
stos
or
js
mov
xchg
xchg
jecxz
pop
pop
jge
mov
mov
push
or
fwait
xchg
cltd
mov
test
jp
stos
fldenv
and
mov
movsl
pop
adc
cmp
mov
pop
pop
aaa
add
movsl
cltd
mov
mov
ja
cmp
sub
sbb
xorb
movsl
xchg
ja
mov
xchg
sbb
popf
jne
test
or
push
sbb
jg
jne
jne
jg
out
and
scas
jmp
add
add
add
mov
add
addb
xchg
out
cmpl
sbb
clc
dec
call
in
cmpsl
add
mov
jnp
sub
js
pop
out
xor
mov
mov
mov
sub
mov
mov
adc
push
pop
mov
dec
clc
decb
and
cmpb
push
sahf
pop
test
jl
test
jb
in
inc
pop
adc
mov
cmp
je
mov
cmpxchg
add
xor
ret
or
mov
jnp
sbb
movsb
xchg
xor
mov
jo
xchg
mov
stos
cmc
adc
inc
mov
lea
mov
cmp
fstps
jl
mov
xlat
xchg
xchg
stc
dec
fistpll
xchg
sbb
mov
cmpsb
fstpl
aas
jbe
scas
ss
add
testb
add
dec
ss
mov
mov
jge
out
cltd
test
dec
test
aaa
ss
orb
jg
jge
int
mov
xchg
pop
stos
jbe
cmp
pop
insb
fiaddl
sbb
imul
aad
aad
sti
lea
lock
imul
fs
push
sub
cmp
nop
mov
je
sarl
mov
iret
mov
dec
outsb
lret
dec
pop
repz
sbb
mov
aas
minps
iret
jo
mov
ret
idivb
jmp
adc
scas
in
and
sbb
jg
xor
inc
xchg
cmp
fidivs
fsts
adc
outsl
push
test
and
sbb
testl
dec
cmp
outsl
iret
dec
xchg
fs
out
aas
inc
mov
or
add
and
outsb
jle
lods
not
mov
add
int3
add
testb
add
ret
repnz
popa
jg
mull
inc
call
inc
and
or
sub
mov
cltd
jp
or
adcb
sub
repz
add
mov
sbb
insb
out
cmp
xorb
fwait
mov
sub
imul
jae
or
mov
movsl
and
pop
scas
aas
stc
push
cs
sbb
push
fisttps
push
or
inc
pop
pop
dec
or
loopne
pop
loop
jns
stc
and
mov
es
ret
dec
xlat
aaa
pop
mov
out
ss
sbb
push
jmp
icebp
andb
push
pushf
aad
inc
in
sub
push
je
xor
iret
test
out
sbb
jb
dec
add
outsb
jp
push
int3
push
mov
mov
lods
out
mov
mov
imul
sub
lods
inc
pop
add
mov
mov
push
xor
and
testb
add
out
clc
lea
adc
xchg
jnp
fstp
mov
sahf
shrl
les
jg
lret
mov
xchg
cmp
add
and
mov
push
jge
lahf
push
xor
cli
dec
daa
pusha
mov
or
fs
pusha
add
cmc
mov
test
and
add
add
test
xchg
fcoml
sbb
push
dec
xchg
and
ret
pop
add
pop
lea
and
orl
sbb
xor
or
test
clc
shrb
scas
cli
pushf
xor
sahf
jae
fisubs
jp
out
dec
pop
addb
jnp
les
lret
cmp
pop
xchg
ret
mov
pushf
clc
pop
mov
cmpsl
lahf
xor
das
jns
jo
shl
into
jo
cltd
or
lret
xor
jb
xchg
dec
mov
add
add
out
sti
xlat
ss
inc
movsb
int3
enter
into
add
testb
add
incl
idivb
std
mov
dec
sahf
cld
sub
sub
cmc
test
dec
data16
add
lock
movhps
jmp
mov
inc
int3
and
mov
fdivl
inc
rorl
movsl
mov
dec
sbb
arpl
add
jns
jb
or
add
xchg
add
adc
pop
pusha
aam
movsl
imul
pop
fucomp
xchg
jo
lahf
mov
sub
ret
loope
inc
jae
mov
xchg
cmp
sti
hlt
mov
lock
mov
jbe
inc
mov
inc
inc
mov
mov
adc
negb
insb
mov
ljmp
jbe
xchg
xor
arpl
mov
pop
jo
add
push
sub
cmp
jg
cmp
push
mov
testb
add
cli
out
add
mov
dec
or
out
fs
in
mov
sub
xchg
stos
int
sub
mov
mov
mov
in
lret
and
push
adc
mov
roll
dec
das
mov
imull
and
dec
mov
inc
pop
dec
xchg
dec
sub
rclb
add
loop
jo
mov
test
mov
adc
xlat
imull
ja
xor
ffreep
and
or
bnd
push
cmp
repnz
je
pop
mov
std
pop
dec
lock
sbb
pusha
adc
adc
xchg
push
and
inc
fdivrs
out
sbb
jb
data16
xor
mov
icebp
adc
nop
das
pop
pop
fistps
and
sub
into
jbe
inc
jecxz
cmp
cmp
rol
test
push
add
jmp
ds
repz
aam
and
or
add
testb
add
ds
jmp
push
mov
pushf
push
lret
in
ljmp
shl
dec
xor
xlat
into
and
adc
xchg
ss
jg
test
dec
ret
fisttpl
lret
jmp
sub
mov
xchg
mov
jb
into
inc
movsb
jae
in
outsb
cmp
inc
aas
lcall
push
dec
aas
loop
sbb
adc
ljmp
jae
dec
cmpsb
dec
test
push
leave
or
sub
pop
xor
mov
xchg
sarb
add
mov
mov
lds
and
setae
sbb
lea
pop
test
sahf
popl
mov
jne
ret
out
outsl
pusha
xor
pop
jns
inc
andb
outsb
or
adc
push
out
xor
je
adc
ret
cltd
jecxz
push
inc
in
sbb
add
mov
jne
adc
rolb
add
add
add
jbe
in
loop
in
decl
popa
fmull
pusha
jbe
rcrb
jp
mov
insb
sbb
inc
std
fsubs
rclb
mov
ljmp
fstpl
test
mov
dec
cmp
inc
fdivrs
xor
add
imul
movsb
dec
and
lret
shrl
inc
sarl
jae
mov
and
mov
mov
ss
and
xor
jg
pop
das
dec
lcall
es
xchg
sub
shll
gs
lock
in
cmpsb
mov
test
mov
bound
jne
add
pop
sub
repz
mov
mov
clc
sbb
ljmp
mov
adc
dec
outsl
mov
cmc
mov
lcall
add
inc
js
cmp
add
enter
in
out
mov
dec
mov
add
testb
add
dec
push
loop
mov
arpl
xchg
pop
add
or
or
jl
ds
add
fs
or
arpl
adc
inc
leave
movsl
cld
pop
xor
sub
sbb
dec
mov
imul
sub
jo
mov
dec
push
dec
mov
ficompl
xchg
xchg
jle
push
mov
lcall
push
lret
gs
fcomps
fucomip
int
lcall
xchg
jmp
xor
movsb
ret
aam
jno
add
mov
cmp
sahf
jo
sahf
adc
and
imul
inc
fisubs
in
fsubrl
add
gs
pop
sub
cwtl
addr16
fnstcw
or
inc
jnp
inc
inc
rcll
pop
pushf
add
mov
enter
pop
and
inc
into
mov
add
add
imul
cmc
call
stos
mov
add
add
add
mov
inc
add
std
xchg
aad
add
add
mov
js
aad
push
mov
ds
pop
scas
nop
pop
popa
push
test
loop
mov
lods
add
js
mov
test
sub
mov
bound
aam
inc
aam
ss
inc
pop
xor
cltd
movsb
ret
inc
pop
sbb
adc
and
xchg
mov
dec
or
dec
adc
dec
push
pop
mov
cli
mov
and
lods
int
cli
mov
cmc
in
popf
and
push
xor
mov
pusha
into
push
dec
and
outsb
mov
lds
mov
sahf
fld
jns
push
xor
xlat
lods
mov
dec
push
push
cmp
out
rcrl
pop
stos
and
andl
testb
xchg
jmp
outsb
aam
xor
add
ja
iret
xchg
xor
test
jo
roll
add
add
add
mov
mov
into
xor
jae
int3
and
jle
lods
adc
scas
cmpb
out
lea
in
xchg
repz
jo
dec
dec
push
sbb
lods
cmp
popf
xlat
mov
cmp
fbstp
or
test
ljmp
xchg
testb
xor
imul
cwtl
outsb
or
gs
and
iret
mov
and
jg
shll
movsb
aad
out
push
fmuls
cwtl
int3
out
jge
push
xchg
iret
pop
dec
sbb
add
shll
cmpl
test
sar
mov
pop
pop
fcompl
popa
sub
and
mov
fsubrl
inc
sbb
shll
push
xchg
dec
mov
shrb
jl
pop
sub
or
adc
pop
fisttpll
inc
andb
dec
add
in
lods
or
outsl
or
add
out
into
gs
fsts
mov
add
testb
add
add
pop
xchg
xchg
nop
xor
test
enter
mov
or
push
mov
or
cs
mov
jne
ja
push
cli
mov
stc
push
push
fistpl
data16
ret
movsl
pop
pop
xchg
fdivs
int3
xlat
lcall
movsb
hlt
mov
dec
cmp
and
mov
add
sub
fists
in
movb
inc
sub
sbb
jecxz
pop
sbb
cmp
lahf
sub
leave
outsl
cld
mov
jbe
fnsave
ss
pop
dec
mov
mov
dec
daa
xchg
pop
fcomip
pop
pop
ja
ret
push
lds
push
pop
ljmp
or
std
fwait
pop
adc
rcll
push
pop
or
outsb
add
ss
xorl
add
add
xchg
and
je
out
mov
sti
lods
mov
enter
testb
add
incb
pushf
int3
rcrl
scas
inc
aas
or
ficoms
dec
fsubl
mov
scas
in
shlb
mov
call
mov
rcrb
outsb
repnz
inc
mov
inc
ljmp
imul
xor
jge
push
or
add
enter
imul
aas
xchg
mov
sar
push
pop
testl
pop
mov
mov
jecxz
adc
xor
jno
lods
adc
or
push
aaa
pop
and
xlat
xchg
aaa
mov
lahf
clc
cmp
mov
cmpsb
movsl
rorb
movsb
adc
call
orb
addr16
jge
pop
scas
cmp
inc
loope
pop
testb
lds
out
sarl
aam
dec
ljmp
pop
mov
mov
mov
mov
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
or
mov
add
add
js
dec
push
add
xor
jns
jae
cmp
adc
bound
test
movsb
test
movsl
icebp
ljmp
test
inc
lds
sub
xor
popf
int3
andb
add
add
loop
push
aam
aaa
sub
enter
and
test
mov
pop
inc
pop
mov
imul
ret
fs
fildl
jns
negl
mov
jg
push
loopne
mov
les
xor
xchg
add
xor
aam
cmp
aaa
sahf
mov
fadds
out
icebp
xor
cltd
xor
push
roll
in
mov
data16
or
pop
dec
sbb
mov
fiaddl
insl
loopne
xlat
in
push
inc
and
leave
clc
xchg
push
jbe
iret
mov
mov
aaa
dec
mov
imul
cmp
call
out
lahf
or
fdivs
mov
add
testb
add
mov
rolb
movsb
push
clc
xchg
sbb
int
test
jmp
mov
jns
mov
and
xor
mov
les
test
cwtl
xor
bnd
stos
push
test
pop
xor
pusha
pushf
xor
sub
das
sub
loop
arpl
inc
in
loop
jns
add
adc
ret
int
jne
push
frstor
pop
fsubrl
into
in
in
pop
inc
gs
adc
dec
and
push
jle
mov
fsubrp
cmpsl
xchg
and
outsl
mov
dec
inc
inc
pop
ljmp
adc
jb
int
test
push
pop
cmp
testw
lcall
or
arpl
mov
lods
int3
cltd
pop
mov
call
cld
xchg
pop
mov
xchg
xor
pushf
push
add
mov
mov
mov
ficoml
sub
and
fadds
add
add
add
adc
pop
mov
xchg
push
or
inc
add
jae
inc
into
sub
out
dec
ljmp
shl
push
pop
dec
pop
mov
inc
cld
lret
or
gs
sti
sbb
test
hlt
mov
jp
xchg
ss
add
loopne
sbb
or
mov
lds
test
sbb
cwtl
add
sub
add
cld
popa
mov
jmp
xchg
ret
and
fwait
jle
hlt
enter
sbb
jg
loop
mov
rclb
stc
aad
fdivrp
scas
sub
cmc
mov
aam
pushf
aaa
mov
aas
js
mov
inc
cmp
addr16
test
mov
sub
xlat
cmpsb
ds
cmp
mov
movsb
cli
sahf
and
ret
sbb
cld
lods
lea
ljmp
push
pop
add
xor
add
sbb
sbb
loop
cld
pop
mov
add
add
lods
xor
sub
dec
jp
jg
lret
filds
loopne
int
das
pop
cs
mov
je
jle
fidivl
jge
sub
xchg
aam
shr
out
fucomp
or
jmp
adcb
sub
sbb
or
dec
pop
sbb
fildl
divl
sbb
sbb
clc
nop
mov
pop
add
outsb
mov
xchg
adc
xor
negl
cltd
sbb
inc
dec
inc
rcl
aad
lret
or
das
cmpsb
ret
bound
sbb
mov
xchg
pusha
mov
add
out
iret
mov
jl
jo
inc
pop
pop
jmp
mov
or
xchg
jae
mov
mov
daa
stos
xor
ret
movlps
inc
pop
adc
push
mov
adc
add
add
ds
sub
mov
add
testb
add
movsl
jae
mov
pop
push
js
mov
pushf
sub
into
mov
and
jne
add
ds
xchg
rcrb
arpl
xchg
fs
xchg
nop
ja
inc
pop
gs
ljmp
or
fstpt
jl
outsb
psubusw
cs
mov
jbe
ret
or
sub
inc
into
cli
or
insl
aad
mov
xor
test
inc
lods
adc
add
stos
dec
mov
mov
inc
jbe
popa
jno
mov
and
or
lret
pop
mov
xchg
mov
out
cmp
stc
or
add
xchg
popa
inc
sti
or
or
sub
pop
bound
out
dec
add
addr16
mov
clc
and
jns
xor
mov
pop
outsl
pusha
mov
adc
into
dec
dec
cs
xor
daa
and
movsl
movb
add
lcall
sbb
add
testb
add
hlt
xchg
icebp
or
xchg
pop
mov
dec
outsb
and
es
cli
nop
push
cmp
lods
test
data16
mov
cmc
sub
mov
mov
cld
jecxz
sbb
and
test
push
adc
shlb
fcomps
fidivrl
out
mov
or
or
scas
mov
dec
movsl
xor
fisubrs
add
pop
inc
jle
jecxz
pop
jmp
or
inc
fstps
jle
add
lock
fiaddl
je
push
sub
mov
xchg
test
shll
jne
and
dec
pop
and
repnz
xlat
cmp
lds
popl
xchg
mov
stos
xchg
jl
fcoml
inc
xor
jno
and
mov
test
popf
push
insl
jp
cmp
setne
add
xchg
ja
push
jg
loope
cs
out
shll
sbb
add
add
add
pop
mov
aad
cltd
inc
push
jmp
inc
dec
inc
int3
adc
cmp
mov
dec
pusha
std
jge
xchg
andl
shlb
and
jle
cwtl
pop
scas
jns
jbe
loopne
fistpl
stc
adc
or
cmpsb
testl
pop
addr16
js
rclb
lcall
in
sbb
jns
fwait
push
lock
fmuls
mov
ret
mov
pop
fsubrs
xor
jbe
das
pop
jge
test
fsubrp
and
sub
add
mov
rcl
arpl
inc
popf
lea
mov
je
stos
test
push
sbbl
sbb
add
dec
sub
mov
clc
sub
mov
lret
cltd
pop
inc
sub
and
es
cmp
pop
inc
adc
icebp
fisubrl
mov
add
imul
xor
je
fldl
add
add
add
movl
scas
cmpsb
fdivrl
and
xadd
mov
inc
stc
and
std
or
loope
sbb
mov
fimuls
sub
test
pop
mov
inc
loop
jmp
bnd
and
xchg
fstps
and
sbb
orl
xchg
add
in
push
mov
jg
push
int3
and
into
adc
js
sbb
push
xchg
loop
xlat
ds
mov
stos
jnp
sub
imul
pop
mov
cmp
es
arpl
mov
arpl
or
lret
orl
inc
xor
add
fwait
push
pop
inc
lret
or
cmp
push
daa
fbstp
mov
out
test
sti
fxam
or
pusha
in
add
out
fldcw
push
xchg
fsubrs
jb
jg
outsb
fiadds
add
add
add
movsl
xor
data16
jne
call
cmp
test
out
add
loope
cmp
stc
outsl
mov
or
std
addr16
jle
pop
in
gs
leave
das
cwtl
aas
mov
adc
push
xchg
jg
inc
jle
lcall
xlat
loopne
enter
fldenv
pop
test
xchg
cmc
out
mov
pop
stos
mov
adc
jb
mov
xlat
xlat
arpl
pop
inc
imul
in
xor
iret
cmpsl
mov
mov
cmc
pop
fs
in
gs
call
pop
mov
add
mov
mov
mov
subb
lcall
push
add
cmpb
cmp
adcl
dec
ds
inc
lea
or
scas
hlt
mov
cld
adc
jb
sub
je
pusha
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
xor
filds
add
add
add
call
dec
cmp
icebp
insl
test
clc
subl
pop
sub
mov
push
push
fsubrl
push
shlb
addr16
inc
sti
seta
push
je
jbe
xor
aas
push
pop
mov
xor
dec
pop
mov
in
cld
maskmovq
testl
xor
sub
dec
mov
insl
mov
adc
mov
cmp
cmpsl
lods
or
mov
jb
adc
out
sbb
pop
xchg
mov
sub
mulps
add
insl
sbbl
shlb
ja
pop
or
lea
cmp
enter
pop
cmc
fnsave
jp
pop
movsb
stos
mov
push
ss
mov
and
xor
fnsave
mov
and
call
adc
adcl
dec
int
loopne
insl
xchg
push
push
mov
fldenv
pop
dec
jle
jg
std
fldt
cmp
xor
les
add
testb
add
adc
push
push
inc
xchg
pop
sti
dec
sahf
mov
loop
sbb
mov
xchg
and
pushf
movsb
fidivl
mov
inc
cmp
mov
jnp
rorb
lahf
jno
dec
push
test
rolb
xchg
popf
dec
lea
scas
das
outsl
adc
fsubrs
call
hlt
pop
push
mov
or
add
sub
xor
cmpl
mov
daa
xorb
mov
mov
sti
cltd
mov
dec
lock
inc
std
ret
mov
adc
xchg
ficompl
fwait
popa
pop
dec
cmp
insl
pop
popa
test
ret
leave
ficompl
push
push
pop
adc
push
shr
out
shlb
lds
shrl
sbb
pop
fistpl
arpl
inc
jge
pushf
xor
in
ret
int3
sub
add
cmp
ljmp
in
mov
add
testb
add
adc
xchg
pop
lcall
pop
movsb
popf
pop
mov
and
mov
shl
or
mov
or
push
jecxz
out
lret
out
sbb
shr
jnp
js
ficompl
xor
iret
jbe
inc
push
in
std
fadds
jg
leave
into
add
mov
or
popf
cld
xchg
or
shlb
jno
push
sbb
xor
push
subl
daa
jb
sbb
out
cmp
arpl
fstps
ja
in
movsl
lds
push
push
mov
or
cld
pop
sbb
repnz
lock
adc
jns
mov
into
repnz
sbb
data16
jbe
pop
filds
leave
mov
je
cld
dec
xor
cli
rorb
push
rorb
xor
mov
aas
daa
iret
mov
add
add
sbb
jmp
mov
adc
testb
add
push
stos
orps
js
cmp
dec
idivb
sub
sbb
xchg
push
sub
decb
in
clc
add
shll
inc
pop
cmp
inc
xchg
mov
inc
adc
cmp
push
loope
sti
pop
je
insb
lea
pushf
enter
sub
les
out
negl
mov
jne
sbb
add
cmp
xor
lds
pushf
cli
pop
loopne
popa
call
and
mov
leave
aad
out
in
int
ret
in
lret
mov
test
jo
or
fcmovnu
and
pop
aad
mov
addr16
xor
aas
mov
jg
arpl
jmp
add
addr16
push
push
mov
out
outsb
xor
scas
add
jnp
outsl
dec
into
fs
jne
jbe
dec
mov
xchg
jne
cmc
jae
mov
add
push
out
jp
dec
mov
jecxz
add
add
add
je
inc
loop
cli
cld
push
xchg
push
cmp
dec
xchg
sub
sahf
ficompl
lcall
mov
lea
push
sti
test
cmc
sub
mov
loopne
xor
ret
xchg
sbb
fists
and
aad
cmpsl
arpl
and
jl
fs
call
inc
daa
js
scas
dec
and
call
into
into
sbbb
cmpsb
ret
xchg
cmp
push
push
pop
dec
sbbb
pop
mov
sub
mov
push
fxtract
int3
div
jo
cmp
xchg
cli
imul
and
pop
push
cmp
jmp
lahf
mov
xor
xlat
hlt
in
xor
jns
xorl
cmp
enter
xchg
mov
pop
addr16
shl
push
fsubs
dec
ret
stos
mov
lds
push
jl
cmp
add
jg
mov
lcall
mov
jge
in
add
add
add
aaa
out
push
xor
push
lcall
mov
cmp
inc
jb
movl
dec
ljmp
test
out
mov
xchg
push
cmpsl
pop
or
mov
mov
jp
xlat
ss
adc
mov
mov
rcl
jns
cwtl
or
push
ret
xchg
sub
loope
bound
inc
mov
stos
push
addr16
test
push
cltd
shlb
call
xchg
cltd
call
pop
pop
addr16
xchg
mov
int
jmp
xor
pushf
outsl
adcb
dec
lea
sbb
mov
sub
aaa
xorb
jb
jbe
jp
in
pusha
mov
cmp
les
mov
and
in
mov
add
sbb
jns
daa
data16
sub
add
testb
add
xor
lcall
in
lods
pop
xchg
push
and
cmp
pop
ss
push
ret
mov
loope
sbb
lods
lock
int3
fwait
mov
gs
mov
rorb
out
pop
clc
test
add
sbb
dec
int
xchg
inc
mov
sub
xchg
cmp
aaa
or
push
js
mov
imul
or
dec
lret
loopne
xchg
mov
sbb
xchg
xchg
scas
dec
int3
in
cmp
imull
in
cmp
sub
scas
jg
push
movsl
mov
outsl
dec
and
jno
jns
jmp
adcb
xchg
dec
push
pop
dec
movsb
insl
mov
in
icebp
sub
pop
daa
mov
dec
andl
pop
inc
and
pop
lods
cmpb
xchg
repz
addr16
and
push
dec
arpl
mov
mov
cmp
sbb
cmp
add
fadd
fsubp
jnp
push
xor
lahf
push
out
add
add
add
cmp
sbb
addb
sbb
jecxz
movb
js
pop
mov
mov
push
inc
adc
mov
arpl
repz
pop
sbb
inc
jmp
shlb
adc
ret
or
test
jno
es
or
ds
rcll
mov
cmp
in
ret
fisttpll
xor
jmp
hlt
or
popa
sub
scas
cmp
inc
dec
or
ficoms
mov
fidivs
outsl
insl
repnz
mov
mov
into
jmp
sub
jmp
xchg
scas
faddl
test
decl
cmp
pop
nop
jne
lods
imul
ret
dec
das
in
xor
pop
pop
int
adc
cmpsl
push
add
gs
mov
jl
mov
data16
fcom
call
movb
notb
int3
into
das
in
insb
pop
ds
or
add
add
sub
cld
cli
jle
addb
adc
add
testb
add
xchg
or
cmc
xor
xor
pop
sub
in
lret
sub
sbb
push
test
movntq
out
mov
mov
lret
jbe
jge
rcll
fistpl
loope
jmp
push
xor
es
jne
data16
stos
xorl
mov
mov
lret
sub
pushl
cwtl
ja
sub
sub
sub
lods
sti
xor
dec
cmpsl
aad
xor
xchg
outsl
xor
mov
test
clc
jle
arpl
inc
cmp
xchg
mov
mov
imulb
xchg
lds
int
out
lret
adc
mov
pop
and
fidivrl
cmp
mov
xchg
adc
jne
pop
mull
jmp
aam
xlat
mov
jge
sub
sbb
or
bound
add
add
ja
sti
dec
push
sbb
ljmp
add
dec
roll
call
or
loope
mov
fiadds
adc
and
lods
inc
cld
jg
test
js
repz
fucom
xchg
mov
pop
jle
scas
jae
and
push
jge
inc
dec
pushf
jecxz
adc
negb
push
imul
mov
dec
sbb
mov
notl
test
mov
pop
ffree
and
mov
rolb
mov
or
int
push
in
sti
dec
mov
dec
inc
jge
loopne
jmp
sti
push
fdiv
icebp
push
shll
cwtl
lods
xchg
xorl
jbe
xor
add
stos
sbb
mov
jne
aad
xchg
mov
add
ds
pop
les
scas
or
cmp
sarb
cmp
mov
in
pop
xchg
hlt
and
pushf
pop
add
ror
cltd
outsl
mov
cmc
or
insl
outsb
add
add
testb
add
inc
icebp
data16
fcmovne
xor
dec
in
int3
mov
lret
jmp
movb
pop
xor
enter
sub
and
adc
pusha
and
jmp
jp
inc
adc
lahf
xlat
inc
shll
stos
icebp
inc
repnz
dec
test
shrl
fcmovnu
movsl
mov
pop
pop
cmc
add
xchg
in
loopne
adc
into
aad
addr16
dec
push
dec
lret
push
loope
es
cwtl
jecxz
mov
jle
add
imul
cli
int3
jnp
or
testl
sub
xchg
pusha
cwtl
push
or
adc
xor
pop
shl
ljmp
mov
push
nop
cltd
pop
lahf
mov
dec
and
xor
sbb
lods
cld
xor
jge
push
mov
popf
bnd
and
into
fstpl
adc
pop
adc
pop
or
add
ja
decl
jecxz
mov
imul
add
testb
add
lock
cmp
xchg
loopne
pop
popa
movd
daa
scas
xchg
cmpb
dec
cmp
addl
ret
jp
fstl
fstpt
push
pushl
test
popa
dec
out
mov
psraw
pushf
jmp
mov
push
or
sti
mov
call
scas
dec
and
pusha
jb
xchg
scas
popf
loop
push
xchg
scas
out
fimuls
pop
lahf
shrl
xchg
jbe
jnp
cmpsl
es
mov
iret
xlat
and
mov
rcrl
data16
aas
mov
inc
jmp
adc
in
dec
imul
xchg
lcall
mov
jg
fimull
pop
xchg
stc
inc
mov
fadds
call
je
daa
sbb
mov
xchg
add
repz
lock
jg
mov
and
imul
ljmp
es
sub
cmp
testb
cmp
cmpl
das
lret
jnp
shll
movsb
and
or
outsl
test
sbb
sbb
add
push
dec
or
mull
repnz
mov
out
inc
inc
insb
sub
jecxz
sahf
pop
mulb
xor
in
rol
or
mov
sub
jg
sub
test
xor
cmp
mov
jmp
jnp
jnp
pop
imul
xchg
push
outsl
pop
stos
test
cmp
or
jecxz
fwait
or
mov
test
bound
xchg
mov
rcll
pop
fcoml
mov
fdivs
pop
xor
jb
int3
pop
fcmove
and
cmpsl
testb
push
fcmovnb
lods
lcall
ds
incl
add
pop
xlat
fisttpl
ret
mov
loop
add
testb
add
out
mov
ds
imulb
pushf
scas
cmp
aas
sub
cmp
mov
pushf
enter
imul
fcomps
pop
test
adcl
pop
mov
add
insl
loopne
mov
cmp
dec
fadd
xlat
dec
or
jg
mov
in
ret
jecxz
pop
std
and
jge
jno
pop
mov
movsb
test
adcl
xchg
outsl
dec
cmp
inc
test
out
jae
std
jo
sbb
insb
je
cs
or
xchg
dec
fs
xchg
ja
mov
aas
cmp
push
loop
dec
mov
inc
leave
cltd
xchg
andb
adc
clc
not
and
daa
jp
xor
mov
push
pop
lahf
in
cmp
rclb
cs
hlt
or
cltd
cmc
js
aam
jo
pop
test
sbb
add
stc
mov
dec
js
stc
mov
push
nop
aad
mov
fs
add
testb
add
gs
mov
daa
pop
fldl
aam
arpl
dec
push
outsl
cltd
inc
mov
xchg
sbb
mov
sbb
mov
or
loope
pop
cmp
mov
xchg
push
and
out
pop
mov
push
mov
jno
in
ret
mov
dec
lea
xor
sub
movsb
or
push
mov
pop
icebp
sub
and
sbb
jge
pusha
daa
dec
aad
daa
nop
std
adc
and
pop
fistps
add
cmp
or
imul
cmpsb
pop
inc
bound
test
gs
mov
jp
pop
lods
pop
push
repz
inc
loop
and
in
push
cmc
inc
test
aad
jecxz
sbb
clc
push
mov
aam
inc
lret
call
lcall
es
pop
pop
add
mov
pop
insb
fildll
decb
add
out
fdiv
stc
into
in
add
testb
add
lea
stc
xlat
mov
push
cs
dec
or
sbb
xchg
daa
sbb
fsubl
cwtl
cmp
cmp
jb
jne
jge
ja
mov
mov
xchg
dec
or
repz
jle
mov
jp
mov
lcall
cmp
cmp
popf
inc
shll
push
sub
pushl
lods
add
push
push
andb
fnstsw
sub
and
lret
mov
mov
into
test
ds
add
sarl
gs
and
data16
je
and
insb
in
or
xor
push
dec
icebp
rcr
lret
rcl
lods
dec
xchg
dec
sub
nop
cmpsl
push
xor
sub
inc
lds
sub
adc
jno
add
and
sbb
mov
push
xchg
test
stos
pop
xchg
les
and
cli
stos
mov
sqrtps
and
add
cmp
jnp
sbb
test
add
testb
add
jecxz
cmp
std
inc
dec
cmp
jg
dec
xor
inc
push
outsb
push
into
ljmp
xchg
inc
xlat
dec
adc
xchg
push
pop
add
jb
mov
push
lea
int
adc
inc
fdivr
cmpsl
xchg
sbb
push
pusha
jns
xchg
aam
jb
sbb
sbb
fdivrs
cmpsb
mov
inc
cmp
mov
sub
out
mov
sar
jl
push
push
cmp
clc
std
xchg
jbe
outsl
enter
dec
dec
xor
es
push
pop
stos
dec
jno
cmpsl
pushf
jp
mov
sub
movsl
push
jae
jae
nop
test
mov
and
inc
adc
mov
mov
jo
adc
pop
mov
insl
xchg
inc
mov
jg
je
lahf
hlt
cmp
pop
sbb
jb
test
add
and
pop
push
add
int3
fldl
add
subb
jmp
popa
test
mov
add
add
xchg
call
pop
push
sahf
nop
outsl
pop
cmp
rorl
xchg
lret
es
das
lahf
out
fimuls
sub
push
fistps
jg
add
stos
xor
mov
test
loopne
mov
and
test
lahf
loopne
repnz
rcl
insb
lahf
popa
xchg
and
popf
pop
ret
jns
cld
fsubr
test
cmp
jl
pusha
enter
outsb
dec
outsb
xor
stc
loop
int3
cmc
test
add
xor
mov
xor
movntps
xchg
popf
stos
rcll
add
std
push
add
inc
sub
xor
pushf
pop
or
inc
sub
fdivl
insl
push
repnz
pop
clc
ret
pop
push
jmp
insl
loop
fldl
aaa
imul
jg
cs
and
mul
dec
aam
sub
mov
jbe
add
add
jb
scas
cmp
int3
repnz
add
testb
add
sub
dec
push
js
inc
insl
sub
inc
xor
sbb
lds
xchg
inc
or
movsb
jb
call
xchg
xor
aad
shrl
dec
pop
int
push
out
and
xchg
xor
ja
push
xchg
inc
std
push
fadds
shll
rcl
or
add
imul
imul
sub
into
cltd
push
into
aad
lods
cs
movsl
push
aaa
cmp
dec
sub
pop
fs
jbe
push
jl
and
sbb
ficomps
nop
aad
mov
cwtl
mov
xor
add
mov
loopne
mov
cmp
pop
rclb
dec
pop
or
iret
lret
daa
daa
xchg
sahf
jecxz
fistl
loope
jge
hlt
pop
dec
movsb
les
push
xor
in
addr16
push
shlb
fistl
or
leave
jle
movsb
out
shrb
add
mov
xlat
mov
bound
jnp
cmpsb
icebp
add
testb
add
sti
xchg
neg
ret
aad
adc
fisubl
pusha
mov
sahf
sub
xchg
jp
nop
sub
insb
fidivrl
and
pusha
cwtl
inc
adc
jle
dec
inc
jne
sub
sahf
out
mov
jp
shr
data16
mov
ficoms
outsl
adcl
jno
insb
outsb
dec
in
add
adc
loopew
adc
jg
lods
push
fidivs
sbb
or
dec
fistpll
je
xor
pop
outsl
mov
cwtl
adc
adc
in
jmp
add
scas
je
les
jg
popa
std
or
inc
and
push
enter
sbb
cmp
xchg
arpl
test
dec
std
xchg
add
aas
fwait
push
mov
mov
adc
out
lahf
test
add
lods
cmp
lods
aas
jp
int3
icebp
stos
xchg
pushf
repnz
testb
add
pop
xchg
bnd
xor
cmp
adc
sbb
out
popf
mov
jb
insb
pop
in
cmpsl
lcall
orb
dec
push
outsb
aas
jae
cmp
and
xor
inc
mov
pop
sbb
jbe
cmc
popa
subb
lods
jge
mov
xor
enter
jae
mov
sti
mov
cmp
mov
into
movsb
dec
cmpsl
mov
out
inc
jns
mov
fs
adc
sub
in
mov
sub
fisubrl
jmp
adc
mov
xor
fbld
push
push
test
scas
cld
aaa
imulb
loop
cltd
stos
in
mov
dec
aas
jno
lock
and
std
push
or
icebp
adc
xchg
sbb
sti
int
xchg
mov
sub
push
push
mov
xchg
cld
add
loop
fadd
sti
mov
popf
pop
push
mov
testb
add
test
outsb
mov
mov
xor
pop
and
cmp
test
in
and
lcall
ja
sti
ficomps
dec
sbb
jns
pop
jmp
xor
xchg
lret
fmull
shld
mov
popa
scas
add
xchg
out
aad
insb
jnp
dec
fnstsw
jae
mov
cmp
in
pushf
and
inc
or
fadd
pop
ds
sub
adc
out
js
jbe
in
sbb
seta
nop
nop
cmpsb
add
movsl
fsubl
jge
test
push
xor
push
mov
imul
jl
dec
pushf
cmp
stos
xchg
adc
sbb
pushf
and
mov
push
xchg
pop
or
popa
aaa
xlat
or
add
add
into
adc
neg
jge
push
xchg
les
add
add
add
jmp
out
ljmp
lods
lods
add
mov
pop
sub
repnz
sub
in
dec
inc
push
xor
lret
sub
leave
mov
jl
push
push
lods
mov
loop
xchg
stos
mov
adcb
push
in
sub
addl
mov
inc
cmp
and
xchg
inc
sbb
pop
xchg
mov
jl
in
dec
sub
pop
rorb
jb
push
push
push
pop
or
xor
mov
bound
sub
testl
pop
sbb
sbb
notb
push
mov
lret
test
inc
insb
mov
adc
sbb
sub
cli
fildl
sub
repnz
fcmovnb
cmp
sbb
mov
hlt
push
fistps
stos
lock
xchg
lahf
fadds
add
dec
sub
or
push
stc
jle
add
testb
add
sub
xchg
popa
inc
push
push
in
clc
cli
popf
push
sahf
pop
mov
push
in
jae
ss
cwtl
mov
dec
es
inc
dec
cli
mov
push
pop
push
mov
lea
mov
out
repnz
pop
out
mov
in
jo
fcomps
movsl
jae
movsb
sbb
test
and
xchg
cmp
lods
data16
sti
das
out
push
xchg
mov
adc
dec
aas
inc
pusha
hlt
icebp
int
inc
in
dec
sub
addr16
xchg
iret
call
jo
inc
xchg
test
into
movsl
insb
sub
mov
and
dec
add
mov
xor
subb
mov
popf
dec
adc
and
outsl
and
aad
cmc
hlt
test
test
imul
sub
or
fstpt
jno
add
ret
ja
and
aaa
negl
out
loope
je
add
testb
add
jl
push
xchg
addb
aam
in
xor
sub
lds
out
cmp
out
adc
xchg
loopne
jmp
adc
jb
cld
pop
test
lcall
std
movsl
mov
js
int3
xchg
scas
adc
add
and
sbb
jge
insl
mov
jge
dec
enter
aad
xor
mov
rcl
adc
push
mov
push
add
sub
sbb
add
in
iret
add
loope
mov
push
cmpsl
dec
dec
jge
xor
xchg
mov
pop
xor
jp
cmp
inc
push
loope
cmp
lea
add
or
add
js
sbb
xchg
mov
cmc
andl
pop
out
outsb
add
andb
xor
inc
mov
sbb
mov
popf
cwtl
roll
add
add
mov
cmc
mov
fstpt
add
testb
add
sbb
pop
push
pop
cld
in
cmp
xchg
and
daa
lret
adc
ss
jecxz
sarl
ja
adc
jne
in
jbe
ret
dec
mov
mov
mov
std
push
xor
inc
cwtl
sbb
inc
in
sbb
movsb
fcmovnbe
loope
lods
divb
adc
and
cmp
mov
shlb
mov
cmp
pop
lahf
out
jns
nop
daa
and
or
inc
repnz
inc
push
and
pop
sub
mov
inc
xor
pop
dec
add
arpl
mov
decb
js
pop
lcall
in
dec
imul
xchg
clc
loop
mov
inc
fisubrl
xor
pop
test
test
inc
mov
in
and
or
inc
cmp
mov
push
aam
fisubrl
in
add
jle
jne
cmp
pop
jge
loop
clc
add
testb
add
mov
imul
cmp
mov
mov
add
mov
mov
sbb
xchg
rorb
fsubrl
ds
es
pop
jo
push
pop
inc
lret
dec
mov
bound
pop
dec
fsincos
sbb
dec
gs
stos
sub
jbe
adc
lret
pop
inc
lret
test
mov
xchg
mov
cli
scas
test
or
jecxz
mov
cmp
fidivs
leave
orl
cmp
xchg
dec
sbb
jne
adc
repz
stc
or
adc
dec
aaa
xor
iret
jo
mov
fwait
and
jns
dec
das
rcrl
adc
fsub
stos
cmp
adc
or
aad
jb
pop
mov
loopne
stos
xor
inc
add
andl
add
add
imulb
testb
stc
mov
stc
add
testb
add
cwtl
dec
pop
fisubl
pushf
lock
cmp
dec
mull
or
or
add
fisttps
pop
addr16
aad
jns
mov
push
dec
in
test
mov
roll
lds
inc
jno
in
sbb
es
jno
stos
daa
jl
mov
pusha
jge
xchg
idivb
add
adc
mov
aas
aam
xor
sbb
sar
lahf
ss
outsl
xor
mov
cmp
out
loop
cltd
pop
adc
mov
sbb
xorl
adcb
ds
ljmp
cli
movsl
cmp
sbb
add
sti
adc
mov
mov
xor
adc
fs
shlb
pushf
cmp
jnp
movsl
popa
and
outsb
adc
mov
mov
xchg
add
add
xor
xchg
fwait
bound
dec
daa
addb
cli
add
testb
add
or
jle
xor
inc
ja
inc
in
dec
gs
push
push
xor
mov
mov
in
mov
sbb
or
jbe
and
into
dec
fistl
xor
mov
mov
daa
add
insb
push
ja
mov
cmpps
mov
sub
imul
dec
dec
scas
js
jcxz
mov
or
lods
and
in
xchg
mov
rol
out
mov
jne
xlat
or
popa
or
insl
aas
inc
loop
aad
and
movsb
jns
rorl
aaa
mov
mov
scas
mov
mov
daa
sub
pop
sahf
sub
in
or
mov
loop
mov
or
je
adc
mov
xchg
jmp
jb
mov
mov
pop
cmpsl
mov
add
ds
in
idivl
pushl
xchg
mov
inc
sti
add
testb
add
push
cmp
sbb
sub
insb
bswap
insl
in
cmp
pop
inc
xor
jne
lahf
pop
adc
movsb
fs
cld
enter
lods
aaa
pop
or
mov
xchg
sbb
cltd
inc
mov
ret
xchg
inc
xor
sbb
out
or
or
adc
or
jbe
aaa
and
dec
lret
clc
adc
es
pop
shrl
mov
lcall
mov
jb
pushf
sbb
mov
fisubs
data16
stos
cmp
mov
lds
clc
xor
icebp
add
cmp
ss
rcrl
pop
mov
and
je
jp
cmpsb
xor
xor
mov
mov
pusha
xchg
push
jmp
or
into
xor
dec
inc
mov
push
jecxz
fwait
outsl
ret
mov
add
mov
cld
icebp
adc
sbb
adc
scas
js
nop
or
dec
add
pop
es
inc
cli
aas
push
ljmp
cmp
add
testb
add
daa
fisttpll
jbe
rcll
pop
push
and
xchg
mov
or
sub
add
inc
pop
lcall
packssdw
inc
mov
mov
inc
cmp
daa
loop
adc
fs
add
nop
js
addl
mov
rorb
dec
jo
lea
ret
dec
mov
mov
sbb
add
push
fwait
sub
mov
mov
scas
jo
daa
insl
fcompl
pop
int3
daa
sub
fsubs
xchg
addr16
iret
jp
lret
outsl
jg
cmp
clc
clc
push
sbb
enter
jns
subb
pop
mov
repnz
jb
push
fdivs
fldt
divw
imul
mov
push
test
mov
jp
rorl
add
add
sbb
cmp
xor
fldl
add
lcall
daa
sub
add
add
add
mov
daa
in
sbb
jge
pop
mov
cmp
push
jmp
movsl
outsl
test
push
sbb
xchg
insl
outsb
mov
in
ret
ret
shl
aam
jge
out
std
and
xchg
sar
add
sub
or
rol
mov
lret
pop
cmp
cmp
into
xor
and
loope
jge
pop
ljmp
popa
imul
jge,pt
fmulp
sub
loop
pushf
dec
pop
outsb
mov
pushf
xchg
icebp
xor
lods
dec
cvttps2pi
xlat
shll
lods
jbe
pop
jcxz
sti
push
das
test
xchg
xor
or
pop
inc
lret
stos
xchg
mov
cli
rcrb
mov
lcall
in
shlb
int3
pop
out
lds
lret
pop
in
pop
ss
outsb
idivb
mov
out
mov
xchg
movsb
in
incl
je
or
add
jae
cltd
dec
mov
fs
add
testb
add
data16
xchg
sbb
pop
push
add
add
or
add
sbb
wbinvd
scas
stos
and
daa
push
fidivs
inc
cmp
cmpsl
push
dec
cmc
add
mov
jns
sub
andl
inc
je
sbb
inc
mov
xchg
adc
sbb
sbb
mov
jnp
jbe
pop
or
arpl
jo
pop
icebp
sbb
lds
mov
roll
push
pop
xchg
nop
arpl
xorb
aas
inc
out
fs
jnp
cwtl
mov
xchg
test
xchg
xlat
push
icebp
addr16
imul
inc
clc
xbegin
arpl
xor
out
aaa
xchg
cmp
test
xorb
into
ficompl
mov
cli
cmpsl
sub
jle
or
mov
cs
add
fcomps
jnp
sar
cmp
add
ds
into
nop
out
cwtl
jle
xlat
movsb
add
pop
in
sbb
add
testb
add
inc
lahf
inc
cmp
outsl
sbb
push
aam
and
aam
repnz
add
jmp
cmpb
adc
pop
jnp
daa
cs
dec
pop
push
add
repz
mov
sarl
sbb
shlb
xchg
out
xchg
push
xchg
popa
jmp
xchg
aas
push
idivl
lds
shr
fimull
mov
inc
mov
pop
loopne
jns
push
and
mov
add
jmp
out
jge
xchg
pop
mov
push
sbb
xchg
aad
lahf
testb
hlt
sub
sbb
insl
or
add
mov
std
lods
inc
arpl
pop
dec
in
xor
sub
je
sub
cmpb
ss
pop
out
int3
in
adc
lret
js
and
inc
ret
jp
lret
ljmp
shlb
inc
test
mov
stc
lock
pop
jp
add
jno
test
jg
xor
or
test
or
add
add
add
add
sbb
and
pop
cmp
fsubs
je
cmpsl
pop
clc
adc
flds
fdivs
jl
or
imul
stos
mov
test
call
fsts
and
shll
cmp
sbb
daa
mov
sub
idivb
push
pushf
andl
push
pop
bound
sbb
sbb
fs
xchg
jns
fstpt
mov
lret
sub
ss
and
and
adc
hlt
pop
and
sub
leave
stc
out
jmp
jae
jmp
xchg
sub
mov
or
pop
addr16
sarb
loop
or
mov
popf
ret
daa
mov
pop
push
xor
cmp
dec
fs
mov
loop
inc
mov
enter
roll
adc
movsb
push
in
cmc
jne
pop
adc
ret
mov
testb
add
mov
and
movsl
movsl
dec
test
std
in
sbb
push
out
mov
aas
daa
dec
js
fwait
adc
push
repz
idivl
out
fs
bnd
imul
adc
ljmp
cmp
push
out
and
dec
in
cmp
jns
pop
xor
xchg
mov
pop
inc
gs
mov
cmp
movl
dec
mov
sarl
rorb
pop
ja
shl
pop
add
loop
mov
aas
mov
jg
fcompl
das
xlat
sbb
jle
in
roll
lods
sub
jnp
adc
insb
cli
ljmp
jne
jnp
lods
stc
sti
lock
mov
sub
imul
push
loopne
jo
and
cmp
mov
mov
cmpsb
fldl
add
out
shlb
aas
out
fwait
aaa
call
fs
add
add
add
add
test
mov
repnz
jl
xlat
push
insl
xor
pop
add
sub
mov
lea
flds
dec
inc
mov
js
dec
and
xchg
out
inc
push
hlt
push
jecxz
dec
push
mov
sbb
jge
repnz
mov
mov
push
jno
pusha
push
es
stos
inc
cli
mov
pop
add
mov
sbb
int
or
push
adc
jne
add
dec
je
pushf
sub
jge
popa
sbb
mov
pusha
push
pop
mov
pop
into
cltd
lcall
push
fimull
shll
xchg
xlat
sub
and
add
jmp
jne
flds
mov
ret
mov
sahf
mov
and
jle
mov
mov
add
mov
add
mov
lcall
xor
repnz
add
add
add
push
xchg
or
lcall
sbb
dec
xor
cmpsl
notl
ss
dec
rclb
mov
mov
js
out
xchg
mov
mov
out
ret
fadd
inc
dec
in
stos
or
pop
cmp
adc
aaa
mov
add
fwait
push
rcl
test
das
pop
movsl
pop
push
jo
gs
mov
addr16
add
pushf
xlat
lock
add
scas
mov
jnp,pn
out
int3
pop
sbb
inc
pop
les
cmp
test
call
aam
adc
xchg
lods
xlat
aam
or
mov
lods
add
frstor
cs
outsl
and
mov
mov
outsl
add
add
ret
fs
test
or
fidivl
mov
movsb
outsl
inc
rcl
mov
or
roll
out
push
and
or
stos
mov
int
sub
cs
add
ret
bnd
rorb
cltd
jl
into
sub
add
add
add
add
daa
shll
test
lahf
jae
inc
jo
mov
pop
insl
fidivrl
loopne
mov
xor
idiv
xchg
pop
xchg
scas
push
gs
stos
sbb
lods
negb
cmp
xor
lret
lahf
add
and
add
imul
movsb
mov
inc
dec
sti
aad
repz
imull
jge
inc
dec
call
sbb
adc
ret
outsl
push
leave
dec
push
mov
mov
scas
sub
sbb
clc
fwait
push
loope
or
pop
sub
mov
pop
cmp
cmp
adc
push
xlat
data16
pop
add
push
bound
mov
in
lds
push
mov
push
and
pop
lock
mov
dec
jmp
int
mov
test
iret
out
xchg
add
add
std
aaa
mov
lret
jne
lahf
cmp
fiadds
add
add
add
hlt
sti
push
adc
popa
pop
in
int3
cmp
adc
pop
js
mov
cmp
dec
push
pop
sub
clc
mov
sbb
aas
bound
lea
sbb
mov
mov
jnp
jmp
add
pop
stos
or
fmull
push
sub
push
push
arpl
int
inc
push
xlat
mov
mov
or
lcall
cmc
stos
cmp
inc
sbb
jmp
stos
sub
pop
fwait
cli
andl
push
cmc
aad
icebp
rcrl
imul
int
jbe
mov
sahf
xchg
lahf
and
push
inc
pop
movsb
inc
mov
cli
inc
xor
adc
movsb
jns
scas
repz
ljmp
test
outsb
pop
cmp
movl
add
insl
aam
mov
fs
pop
push
movzwl
add
add
into
mov
lret
rorb
int
outsb
dec
or
push
aad
mov
iret
ja
je
aas
pop
push
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
and
repz
inc
xchg
les
test
add
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
