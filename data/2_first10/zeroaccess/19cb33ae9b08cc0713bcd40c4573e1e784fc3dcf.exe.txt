push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
stos
sbb
sbb
and
sbb
out
sub
mov
mov
cmp
cs
push
mov
or
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
hlt
adc
mov
insb
xchg
cmp
add
inc
add
fistpll
pusha
shll
daa
in
scas
ret
xchg
in
je
shrl
xchg
aaa
adc
push
jecxz
mov
int3
stos
ficoms
jp
jnp
sub
test
loopne
inc
hlt
sub
and
and
cmp
adc
das
loop
arpl
pushf
ljmp
jo
pop
sbb
test
sbb
stos
jmp
lods
cmp
xchg
lea
xor
mov
xor
scas
fmull
loope
mov
in
scas
and
jne
div
inc
sbb
mov
and
sub
xchg
xor
sub
and
cmp
push
rcl
jle
cmp
psubusw
fidivrl
fists
mov
lea
mov
sbb
xchg
jnp
mov
push
cmp
movsl
insb
or
jnp
imul
arpl
popf
sub
sub
mov
fsts
or
sahf
add
or
add
mov
stc
xor
mov
cld
inc
ljmp
cld
adcl
jno
jg
lock
aaa
in
inc
cmp
push
sbb
adc
mov
mov
sbb
mull
lock
dec
pop
hlt
pushf
push
out
rolb
dec
pop
push
out
fpatan
mov
add
ffreep
pop
or
gs
insl
push
inc
xchg
cmp
jg
sahf
mov
cwtl
mov
sbb
orb
scas
leave
jns
int3
aad
jbe
sub
ret
enter
lahf
or
mov
or
fnsave
cmpl
push
pop
and
lea
push
adc
cmpb
sbb
mov
push
lret
mov
jp
subl
inc
mov
mov
out
sahf
xchg
loope
adc
mov
into
xor
pop
lds
adc
sub
lret
out
lahf
fistpl
adc
xchg
cmp
mov
adc
pop
out
insl
cs
jg
mov
outsb
cwtl
mov
call
inc
xchg
mov
fistps
pop
xchg
sub
test
call
lret
sbb
push
cmp
push
repz
inc
adc
xchg
out
or
addr16
adc
push
or
shrl
dec
sub
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
mov
repnz
rcrb
cmp
popa
je
pop
and
pop
or
pop
cltd
psrlw
xor
or
mov
les
pop
jae
xchg
push
add
cmp
imul
jbe
icebp
cmpsb
fidivrl
mov
dec
add
cmc
lds
mov
adc
lock
lret
out
mov
dec
js
outsl
and
and
pusha
push
mov
mov
lret
mov
jbe
dec
sub
fwait
cltd
pop
fiadds
cmc
nop
sbb
inc
xchg
call
lods
inc
mov
mov
out
test
and
enter
lret
push
mov
dec
mov
xchg
stos
movsl
cli
sahf
mov
adc
pop
adc
fsubrl
imul
aad
jnp
sarb
cmp
out
std
and
or
test
jbe
aaa
and
add
jecxz
and
hlt
jae
sbb
xchg
xchg
cwtl
test
lds
sbb
push
adc
js
add
mov
mov
pop
dec
xlat
sub
cwtl
out
mov
test
mov
mov
aaa
add
xor
lcall
mov
roll
subl
push
mov
push
ja
add
ret
inc
xchg
pop
test
adc
jo
fidivl
jl
xor
sti
fsubs
pop
mov
stos
das
mov
stos
repz
into
lock
xchg
mov
mov
jl
xor
sub
and
imul
imul
jge
and
jge
imul
imul
data16
ds
jns
cmp
add
call
int
pop
mov
inc
nop
lods
neg
cmp
fldcw
push
and
pop
enter
cmp
aaa
xor
jo
adc
mov
dec
sub
mov
xchg
mov
mov
fnsave
add
jbe
add
push
jmp
outsb
mov
xchg
inc
ret
and
ss
add
xor
mov
pop
cwtl
repnz
repz
jnp
xor
mov
aaa
sub
lods
mov
out
mov
cmp
dec
mov
inc
subb
mov
stos
pop
cli
ret
ds
push
and
incl
mov
rorl
jle
faddp
adc
adc
sub
mov
mov
push
inc
or
in
sarl
xor
mov
js
xchg
lea
xor
cmp
shll
add
xchg
add
cmp
sbb
jbe
mov
xorb
add
mov
inc
cmp
xor
out
rclb
jno
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
jbe
push
mov
sub
push
pop
shrb
push
jae
xchg
jmp
call
mov
and
mov
pop
pop
pop
mov
fmul
adc
mov
push
xchg
and
les
and
pop
arpl
push
in
jae
into
into
stos
aas
mov
add
lret
es
iret
scas
push
jle,pt
lock
push
add
rorb
lods
mov
xor
addb
insb
out
jnp
jb
inc
gs
jmp
xchg
test
test
in
shrl
sti
cwtl
mov
mulb
and
insl
gs
pop
mov
test
mov
pop
insb
pop
xchg
cmp
add
stos
pop
or
jp
loop
out
pop
daa
mov
lcall
jb
adc
popf
lea
mov
test
xlat
pushf
or
mov
mov
mul
jge
pop
sbb
mov
pop
adc
roll
inc
inc
dec
jnp
aad
lcall
sub
aaa
dec
loopne
inc
mov
mov
aaa
fidivs
sahf
push
adc
add
aas
out
mov
xchg
loopne
pop
cwtl
fbstp
int3
stos
jge
sbb
mov
pop
fnsetpm(287
adc
jle
fsubrl
cli
cmp
out
sub
jbe
ss
push
mov
lahf
call
repnz
mov
and
sahf
lcall
fistl
xor
jecxz
sbb
movb
lods
out
mov
sub
inc
mov
popl
jbe
lock
out
add
mov
jecxz
sbb
add
dec
ret
loope
pop
xor
xchg
jae
add
mov
mov
stos
push
daa
enter
adc
popf
jnp
cmp
jecxz
ficompl
outsl
into
and
pop
movsl
dec
enter
mov
inc
mov
sbb
add
outsl
je
adc
arpl
add
js
mov
mov
xlat
sbb
subb
mov
mov
add
mov
ret
je
mov
inc
hlt
mov
test
inc
cltd
jecxz
fpatan
imul
test
jae
mov
pop
cmp
sub
aad
xor
out
ljmp
movsb
dec
fisubl
loope
cwtl
add
fisttpll
outsl
push
mov
inc
repz
add
std
rorb
fnsave
in
jo
push
shr
mov
repnz
or
push
sub
repnz
jbe
push
into
sub
or
pushf
xchg
int
dec
jp
out
mov
add
ja
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
jno
mov
and
sbb
mov
hlt
sbb
ds
pop
xor
out
xchg
cmp
xchg
mov
mov
adc
rolb
cmc
jp
push
dec
push
outsl
cmp
popa
dec
sub
adc
or
mov
jae
cmpsb
push
jae
pop
arpl
in
sub
sbb
mov
sbb
jmp
ja
testl
add
movsl
or
and
mov
sub
cmp
outsl
pop
dec
lret
cmpl
sub
aad
leave
pop
test
cmp
push
ret
mov
fsubs
add
jmp
lods
mov
mov
ret
mov
das
jmp
js
test
mov
aam
insl
cmp
call
out
cwtl
aas
fwait
bound
or
daa
jecxz
cmp
jle
in
xor
and
push
mov
data16
and
inc
ds
cmpsl
ljmp
rolb
inc
in
cmpsb
sub
mov
mov
addb
fs
lcall
and
or
and
repnz
in
adc
mov
daa
mov
mov
jge
jecxz
repnz
lock
ds
xor
roll
xchg
iret
or
outsl
push
cwtl
fucomip
fadds
repnz
sbb
adc
pushf
call
enter
aad
pop
rol
scas
dec
mov
add
fmuls
je
mov
xor
lea
push
xchg
xchg
jp
roll
movsl
sbb
cmpsl
aaa
lea
lods
xchg
pop
xlat
sub
negl
mov
adc
jp
nop
xor
adc
stc
std
neg
rolb
mov
into
jl
aas
and
jbe
into
or
popf
mov
jbe
fwait
mov
xor
push
push
pop
cmpsb
sti
and
cltd
mov
adc
jno
jg
fcoms
icebp
mov
dec
add
sub
xchg
xor
out
mov
add
ja
jae
and
ret
fbstp
orb
out
and
mov
adc
scas
lahf
mov
push
data16
outsl
jp
cld
push
cmp
xchg
fistpll
adc
pop
or
and
or
push
mov
add
lods
mov
ss
or
test
out
cmc
rcl
mov
adc
cmpsb
stc
jecxz
pop
in
mov
or
push
mov
sub
sbb
inc
mov
iret
pop
xchg
mov
mov
dec
inc
pop
add
loope
dec
cmpsl
or
js
and
jno
mov
and
call
add
inc
icebp
xor
adc
in
repnz
mov
lret
add
or
mov
or
hlt
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
outsl
call
sbb
and
sbb
sbb
inc
sub
int3
ljmp
xor
cmp
mov
or
repnz
aaa
jbe
shlb
mov
fwait
in
bound
stos
lods
popa
sbb
jns
lods
imul
dec
mov
les
divb
adc
push
mov
mov
jl
mov
jnp
fwait
cmpb
popf
pop
flds
addr16
in
in
loope
sub
dec
mov
loope
int3
add
xchg
adc
jo
stos
push
inc
xor
ret
das
lret
ret
cmp
push
xor
jecxz
xor
int
sub
mov
orb
and
js
jl
test
cmp
sbb
xchg
clc
xlat
mov
mov
bound
test
sbb
cli
push
arpl
sub
es
pop
mov
lock
divl
xlat
mov
jmp
pop
mov
sbb
arpl
jle
sbb
or
call
sbb
pop
inc
ret
mov
test
mov
inc
les
dec
ja
xchg
push
inc
lret
push
or
adc
add
into
sub
and
pop
cld
push
xor
mov
mov
xor
mov
add
ss
addb
add
and
and
pop
xor
lahf
xor
inc
in
inc
lret
jno
mull
hlt
popl
aad
popa
dec
leave
fsubrs
xchg
incb
sub
adc
clc
inc
jo
fldenv
dec
mov
inc
cwtl
xor
ror
xchg
push
xchg
jbe
iret
je
mov
pusha
and
popf
ret
lods
mov
mull
in
std
xlat
outsb
jne
push
loop
out
test
fldcw
cmpsb
sti
in
out
jmp
adc
xor
sbb
mov
mov
loop
pop
iret
mov
xchg
push
cmp
jecxz
sub
adc
jnp
adc
push
mov
mov
movsl
rcrl
addr16
sbb
popf
dec
out
jge
inc
mov
or
hlt
fisubl
jg
fcompl
movsb
into
daa
cmp
xor
pop
fs
pop
insb
bnd
aam
clc
adcl
mov
xlat
xorb
roll
and
popf
adc
push
test
xor
jb
mov
fisttps
pop
addr16
mov
int3
cltd
xlat
lea
xor
jne
pop
pop
shr
in
fadds
xor
stos
sbbl
and
fdivp
or
or
push
pusha
mov
pop
sysexit
stos
mov
loop
out
sti
inc
dec
ret
in
sub
mov
xor
loopne
add
aas
pushf
xor
addl
add
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
call
sbb
and
sbb
and
stc
test
jb
aad
dec
mov
sub
lret
xor
pop
fdivrs
or
mov
cmp
insl
in
xchg
ljmp
or
jl
and
jg
xchg
mov
insl
mov
pop
mov
push
and
add
dec
xor
add
call
push
ja
gs
xor
adc
test
pop
sub
lea
je
mov
testl
pop
daa
push
ret
cmpsl
pop
lods
xchg
rorl
outsl
lahf
cmp
mul
das
jno
cmp
jbe
stc
sub
sbb
mov
imul
out
cld
jp
mov
rcll
dec
cmp
out
andb
jb
push
push
cmc
test
add
jae
adc
jnp
mov
mov
orb
aam
leave
sbb
lods
pop
push
dec
add
or
xor
jno
push
cmc
sbb
decb
or
or
inc
pop
inc
push
xorl
mov
bound
inc
jbe
pop
mov
out
pushf
pop
imul
cmc
aaa
push
or
xchg
nop
in
jb
jle
ljmp
fwait
push
or
repnz
jae
mov
push
sbb
outsb
sbb
mov
cli
inc
les
icebp
sub
push
adc
repz
push
cmp
imul
fwait
out
inc
sbb
sti
pop
jge
push
dec
sub
xchg
push
xor
pop
rorl
in
mov
xor
sbb
dec
pushf
adc
jmp
sbb
mov
xor
add
lahf
int3
push
sbb
mov
sbb
mov
cs
pop
scas
cmpsl
mov
or
cmp
sahf
repnz
sbb
and
fstp
xchg
jns
push
cmp
imul
out
push
add
sub
ss
enter
mov
mov
insb
and
cs
cld
out
test
stc
cmp
lea
push
mov
add
jmp
call
scas
xchg
adc
pop
lods
cwtl
xchg
adc
mov
pusha
enter
iret
dec
into
stos
addr16
cltd
mov
movsl
mov
sub
adc
jns
shl
jl
pushf
sbb
test
ljmp
and
dec
cmpsb
and
aad
dec
call
push
jmp
cmp
dec
aam
aaa
push
cli
jg
push
pop
loop
aam
cmpsl
sarb
jne
nop
dec
cwtl
fisttpll
lret
or
jnp
fldln2
and
mov
into
xchg
cmp
mov
pop
imul
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
pop
inc
mov
and
sbb
loop
divb
fidivrl
pop
jnp
sub
pushf
mov
pop
inc
inc
aaa
pop
test
jno
and
iret
mov
int3
out
xchg
test
push
ja
push
lret
mov
lea
popf
xchg
xchg
dec
je
and
or
lods
fsubrl
mov
movsl
xchg
aam
loopne
push
daa
shlb
or
push
ret
adc
lds
aas
jno
or
or
pushf
xchg
xchg
sar
scas
and
stos
jecxz
inc
jne
cltd
es
sbb
nop
orw
cld
call
xchg
and
xor
pop
cmp
test
add
push
cmp
add
cli
and
xor
dec
cltd
mov
mov
testb
sbb
inc
out
insl
inc
les
xor
scas
push
xchg
sub
paddusw
adc
callw
rorl
negl
std
or
mov
fstps
divb
add
mov
push
push
dec
lods
sti
sub
add
scas
arpl
jbe
xchg
call
pop
xor
add
xor
addr16
ljmp
scas
and
iret
gs
push
call
in
mov
fdivl
add
insl
cmp
int3
push
aaa
es
fucom
pop
xchg
xchg
loopne
jg
add
sub
testl
push
test
mov
xor
mov
inc
or
out
ret
inc
push
mov
call
stos
cmp
pop
test
in
mov
aaa
pop
dec
data16
pop
jo
xchg
sub
add
xorb
inc
ljmp
cmpsl
xchg
inc
enter
xchg
or
lcall
push
jl
mov
clc
jg
xchg
cli
mov
mov
aam
mov
test
insb
cli
das
call
mov
sti
in
adc
sahf
mov
inc
or
std
cmpsb
mov
decb
pop
fadd
sub
pop
inc
sub
inc
cmp
mov
cmp
pop
mov
mov
cmp
das
in
or
xchg
testb
stos
mov
scas
addr16
pop
fnsave
ss
jmp
jg
xor
movsl
push
push
push
cld
mov
outsl
outsb
add
push
stos
fwait
or
imul
scas
push
cmp
ss
cmp
jmp
lods
and
and
jmp
notb
pop
lret
icebp
sub
cmp
sbb
mov
ljmp
jno
fadd
cmpsb
popa
lods
popa
test
adc
jo,pn
pop
xchg
push
mov
daa
or
inc
xchg
call
test
or
sbb
dec
sbb
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
stos
push
lock
and
sbb
std
daa
movsb
mov
rcr
scas
push
outsl
push
std
xchg
faddl
fistpl
add
and
push
adc
sbb
popa
dec
jno
or
add
xor
cltd
mov
rorl
jmp
sbb
ljmp
and
push
inc
and
sbb
rorl
sahf
outsl
data16
fmuls
pop
enter
xchg
lahf
mov
ror
push
in
insl
dec
flds
bound
dec
push
and
fisubrl
hlt
xlat
pop
daa
sub
inc
loop
insb
xorb
dec
jg
or
mov
movsb
fbld
sub
mov
push
fidivrl
inc
js
ljmp
push
jno
fdivp
jl
test
test
les
push
sti
adc
inc
push
mov
or
cmc
mov
mov
or
fnstsw
or
lea
std
lods
pop
lcall
lea
mov
lret
cmp
pop
mov
cltd
ja
out
mov
xchg
fcomps
fidivrs
outsl
mov
movsl
inc
movsb
push
mov
dec
mov
pop
pop
inc
out
jmp
add
insl
fstp
shlb
mov
mov
cmp
dec
and
mov
cmpsb
pop
mov
movsb
mov
pop
mov
mov
jecxz
stc
push
or
in
mov
or
int3
cmp
mov
cmp
aaa
or
repz
xchg
je
ror
in
dec
xor
fildll
add
add
xchg
adc
adc
mov
pop
mov
lret
or
adc
or
js
outsb
xchg
pop
in
inc
mov
rorb
testb
inc
cmp
or
jnp
sbb
mov
mov
push
mov
pop
popf
bound
mov
mov
jbe
sarl
adc
lds
adc
ljmp
pop
cmp
into
mov
lret
cli
cmp
jmp
imul
negb
sub
mov
push
push
jae
je
and
cmp
loop
and
and
add
xchg
mov
push
and
test
mov
xchg
xor
ret
pop
repz
scas
mov
nop
roll
clc
xchg
inc
and
cmpsb
les
inc
mov
popa
repz
cmpsb
in
dec
insl
jno
jle
mov
lahf
xor
dec
inc
xchg
data16
outsl
pop
loope
aas
aad
add
cltd
outsl
jecxz
popf
sahf
rcrl
ja
idivl
jp
mov
jg
push
nop
fcomi
ret
ja
dec
outsb
ja
out
repnz
mov
shrd
jmp
out
push
push
push
mov
ljmp
and
sbb
xchg
dec
fistps
inc
push
loope
xor
cld
adc
sub
sarl
xchg
push
or
jae
test
cmp
pop
aad
mov
add
insb
lret
in
int3
jge
inc
rorl
incl
xchg
mov
popf
sbb
mov
cmpsl
or
mov
pushf
sub
pusha
movsb
mov
cmp
mov
mov
fildll
dec
sbb
into
movsb
pop
sub
mov
push
xor
dec
fnstenv
js
or
sub
test
dec
fwait
jne
in
mov
pop
pop
and
jp
mov
mov
lcall
mov
and
cld
in
sub
ss
in
cwtl
mov
push
cs
xor
fidivl
call
pop
pop
bound
mov
jle
sbb
ljmp
add
mov
add
or
in
xor
arpl
popf
add
int
mov
jae
aaa
out
mov
fldcw
fstl
xchg
in
test
xor
cmp
mov
adc
mov
fdivrp
or
lret
pop
xlat
test
jae
jns
fildll
mov
outsl
in
lock
ja
xchg
imul
mov
cmpsl
and
pop
inc
pop
add
or
sti
jb
mov
and
es
mov
push
inc
pop
lods
fwait
imul
xor
lret
mov
push
jno
scas
out
push
imul
xor
inc
cmp
pop
ret
imul
cmp
imul
mov
mov
jmp
sub
fistpl
xchg
imulb
inc
or
push
jg
add
sbb
mov
clc
movsb
and
jne
jmp
xor
sub
fisttpl
enter
sbb
jb
ljmp
xor
sbb
stc
lock
adc
out
xchg
mov
or
pusha
dec
out
andl
mov
and
xor
lea
ret
mov
lret
push
popa
mov
into
stos
testl
ljmp
mov
faddl
scas
inc
inc
sbb
sub
mov
outsb
push
loopne
insl
mov
inc
mov
jns
jns
push
stos
repz
rclb
jns
cmp
movsb
pop
loop
jne
push
dec
aad
leave
sub
push
aam
inc
adc
fimull
scas
pmulhw
push
push
popa
stos
add
fwait
mov
dec
loopne
push
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
mov
jle
in
sbb
adc
sbb
xor
out
inc
cmpsl
dec
pop
sbb
test
sti
lods
jb
dec
push
jmp
mov
in
jle
sarb
pop
inc
mov
jbe
insl
jecxz
out
dec
popf
aaa
ret
and
and
loopne
sub
sub
sbb
push
imulb
fidivrl
insl
dec
jecxz
movsl
mov
xchg
lahf
push
pop
sub
xchg
mov
pmuludq
call
add
repz
mov
or
pusha
fadd
sub
scas
ljmp
bound
add
or
aad
test
enter
sub
jg
movl
mulb
ja
inc
shll
inc
outsb
pop
xchg
jbe
mov
enter
adc
shll
in
sti
mov
pop
push
pusha
test
xchg
test
shlb
dec
cld
aam
lret
cwtl
or
test
jecxz
pop
adc
pop
jge
push
sti
iret
mov
push
sbb
sbb
and
outsb
iret
cmpsb
dec
ficomps
iret
dec
or
orb
xor
xchg
jp
mov
mov
add
sub
and
arpl
or
test
outsb
mov
mov
adc
cmp
js
xchg
jge
cmp
xchg
das
pop
sbb
push
or
adc
push
loopne
pop
cwtl
lods
dec
push
mov
mov
add
cli
jl
or
pop
in
jmp
dec
add
imul
jmp
jecxz
nop
push
dec
dec
pop
outsl
mov
cld
add
xchg
lcall
or
jnp
scas
nop
rcll
dec
lds
push
jle
or
cli
jnp
or
stos
sbb
jae
adc
ret
xchg
dec
shl
adc
inc
or
mov
sbb
inc
scas
fsubrl
dec
pop
rcr
jns
jge
leave
and
stos
loope
test
out
add
pop
adc
scas
push
and
cmp
lea
inc
xchg
loope
jo
xorb
pop
ljmp
push
dec
jbe
adc
out
xor
cmp
jl
aas
mov
and
jg
addr16
insl
jl
sub
push
hlt
adc
mov
mov
cmpsl
mov
sub
in
jo
cmp
push
and
pop
arpl
sub
sbb
test
jmp
arpl
gs
scas
sbb
cmpsl
push
or
cli
push
in
push
add
jae
scas
cli
push
push
iret
push
jmp
xor
xchg
inc
pushf
lods
dec
push
clc
push
xor
adc
insb
shlb
mov
dec
cmpsb
mov
or
mov
test
mov
mov
fdiv
sbb
or
mov
jmp
nop
dec
nop
add
lock
xor
mov
sbb
and
sbb
iret
fdivrp
pop
insl
fidivrs
inc
stos
enter
clc
leave
xor
scas
scas
decl
in
icebp
mov
test
icebp
mov
leave
pop
leave
pop
inc
outsl
cld
mov
arpl
push
jecxz
push
or
lret
jno
lock
jb
mov
in
out
and
sahf
adc
icebp
inc
idivl
mov
aas
incb
and
jmp
aam
dec
in
sti
insl
add
outsb
cmc
mov
jp
push
push
or
repz
pop
cmc
rol
mov
jns
fadd
js
mov
ret
mov
mov
push
or
and
decl
lret
mov
jge
mov
pop
jno
inc
rolb
xchg
mov
inc
inc
ds
ds
add
es
lahf
aaa
into
bound
data16
xor
test
or
cmp
adc
int3
es
push
fwait
sbb
lock
mul
call
mov
data16
or
mov
cmp
sar
inc
fst
jb
faddl
out
mov
sub
mov
mov
lea
jno
fisubrl
mov
ss
in
jnp
mov
lods
jnp
jnp
iret
pop
dec
es
insl
in
insb
cli
mov
add
subl
loop
jns
add
push
les
xorb
call
push
out
dec
imul
sbb
gs
jb
lods
sub
pop
lahf
iret
test
push
enter
and
inc
xorl
jns
xchg
mov
lret
jb
out
shlb
call
loop
xor
repnz
fs
daa
inc
shl
aas
adc
ds
dec
les
mov
adc
sub
in
xchg
xor
mov
push
add
int3
jp
push
dec
test
push
gs
int
jp
movsb
addr16
loop
mov
jmp
push
lea
cmp
inc
ds
dec
sbb
add
and
loope
ret
xchg
lret
mov
aaa
add
add
in
xchg
and
loopne
mov
xor
dec
jns
enter
cmp
adc
mov
cmp
ss
sub
adc
sub
rclb
dec
add
int3
xor
pop
outsl
mov
xchg
jns
sub
adc
cmp
loopne
jge
ds
mov
mov
jl
mov
aad
dec
dec
mov
and
pop
lahf
call
roll
jbe
pop
loope
add
add
lods
test
shlb
decl
push
jg
leave
pusha
cs
jecxz
ljmp
fwait
adc
aam
repnz
notb
add
push
xchg
mov
aas
fdivrs
jbe
xlat
add
jns
fs
sub
insb
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
jne
popf
xor
sarl
push
sub
loopne
test
mov
cmp
push
inc
cld
clc
mov
int3
add
inc
dec
mov
xchg
fiadds
daa
stos
pop
stos
cmc
ret
mov
insb
data16
fistpl
setno
mov
add
cmpsl
leave
sbb
mov
test
mov
jae
int
out
mov
cli
cltd
pop
xor
idivl
or
mov
aad
sbb
dec
inc
sbb
outsb
jecxz
jg
hlt
cmp
rcrb
and
mov
inc
cmc
mov
or
jle
jb
mov
mov
nop
pop
push
sub
mov
xor
mov
jnp
and
ss
xor
shlb
push
dec
stc
mov
in
sti
lcall
mov
or
lret
cmp
pop
jo
cld
xchg
jecxz
mov
scas
aam
xchg
add
jle
jmp
push
out
push
push
and
mov
shrl
rcrl
adc
dec
xor
and
xchg
pop
outsb
cli
mov
out
pusha
adc
or
aas
push
cmpsl
in
popf
inc
pop
shll
dec
sbb
sbb
insl
push
pop
xor
sub
test
mov
data16
push
out
inc
push
add
xor
imul
stos
push
in
fwait
cmpsb
movl
sbb
or
add
stos
popf
adc
fwait
cld
dec
mov
jae
mov
sbb
imul
inc
idivl
push
xchg
movsb
lret
in
rorb
pop
gs
adc
cmp
push
push
pop
je
jne
push
pushf
sub
push
or
sub
out
mov
ljmp
jnp
mov
jecxz
fucomi
sahf
jg
sub
pop
pop
int
xchg
rcll
add
cwtl
adc
cmpsb
pop
and
js
cmpl
adc
mov
push
lods
shll
push
sub
je
inc
and
insb
push
lds
rcll
pushl
dec
loopne
imul
icebp
pop
lock
data16
push
push
adc
sub
jae
aas
cltd
mov
xlat
ja
cmp
push
fnop
xchg
dec
cmp
and
out
shr
xor
push
mov
into
inc
push
movsb
arpl
out
nop
xor
mov
rorb
mov
test
out
cmp
xlat
and
cmp
sbb
leave
repz
mov
lods
dec
sub
jno
bound
mov
out
cltd
repz
int
lret
inc
inc
pause
sti
xor
sub
mov
inc
nop
jg
cmpsl
mov
out
inc
rcrb
test
push
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
xchg
cmp
sbb
and
sbb
lret
jnp
push
repz
sbb
ljmp
cltd
test
push
scas
inc
leave
push
test
decb
xchg
out
sbb
out
inc
add
test
js
out
push
ja
popa
mov
push
scas
fisubrl
sbb
cli
cltd
ficoms
movsb
jmp
ja
push
aaa
jnp
in
subb
sub
in
ja
add
je
popa
popf
mov
and
test
sub
push
lcall
out
dec
imull
jecxz
and
sahf
jae
mov
pop
imul
stos
jns
shll
daa
pop
mov
and
das
in
xchg
mov
das
mov
add
xchg
es
insb
add
add
loop
call
testb
test
sub
mov
leave
dec
imul
and
pushf
out
dec
cmp
jg
mov
or
mov
dec
scas
sub
pushf
dec
sahf
pop
iret
iret
div
and
out
sbb
dec
les
inc
push
sahf
adc
xchg
idiv
xchg
lock
jno
cmc
sub
aas
into
add
popa
and
addl
out
or
std
xchg
sub
repz
shl
lcall
mov
cmp
popa
subb
xchg
pop
data16
sub
jmp
imul
pop
sbb
sub
imul
pop
add
mov
add
ljmp
sub
push
push
nop
pusha
stos
aaa
sahf
push
outsb
in
xchg
movsl
push
push
and
dec
sub
dec
js
and
push
js
xchg
jo
or
or
sbb
shlb
out
sbbl
inc
lret
and
cs
and
adc
movsb
or
mov
out
iret
pop
ds
dec
sub
mov
neg
push
mov
in
ret
cmp
daa
pop
mov
das
mov
cltd
jbe
addb
push
lock
add
mov
js
xchg
xchg
pop
push
loope
lahf
filds
lods
mov
dec
je
mov
fndisi(8087
mov
jp
jae
pop
cmpsl
jl
jbe
testb
ds
ret
int3
in
jno
in
rcl
mov
roll
mov
fistpll
mov
out
mov
xchg
clc
jae
xor
push
pusha
daa
adc
pop
data16
in
rorl
leave
es
inc
push
cmp
push
mov
mov
enter
imul
mov
cwtl
cld
jl
lock
insl
aam
jb
mov
or
mov
mov
adc
xchg
into
cli
jae
or
loopne
pop
lea
ja
jbe
lcall
test
push
imul
dec
cli
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
test
jl
int
sbb
adc
sbb
outsb
sbb
into
jnp
frstor
cwtl
nop
adc
xor
pop
loope
mov
mov
push
testl
andb
or
pop
loop
scas
les
or
popf
test
dec
fs
ljmp
cli
mov
pop
das
xchg
scas
pop
cli
lret
sbb
jbe
pop
cmc
cld
xchg
xor
arpl
sub
pusha
jmp
notl
jns
jg
cltd
pop
out
sbb
add
sub
adc
lock
or
pop
sbbb
lahf
fsub
inc
push
mov
std
mov
sub
jle
xchg
addr16
xchg
add
mov
test
pop
mov
scas
pusha
fnstsw
mov
cwtl
sub
or
sahf
jnp
dec
mov
mov
sub
out
mov
jle
xchg
popa
push
sub
lds
rcll
push
popa
shl
mov
ss
mov
fisttpl
xchg
pop
jle
push
jl
sub
dec
mov
mov
or
xchg
data16
sub
outsb
or
mov
cs
inc
xor
arpl
jmp
fidivl
das
dec
in
out
mov
push
xchg
mov
xor
aad
jno
mov
ds
mov
movsl
das
outsb
clc
rcr
add
test
fists
cwtl
and
adcl
ljmp
adc
add
int3
lret
dec
xor
dec
icebp
arpl
mov
mov
push
mov
or
push
ret
addr16
sub
add
mov
out
sub
fcomps
xor
lahf
je
dec
cmp
out
jp
stos
jge
inc
or
lcall
mov
lods
push
jecxz
cmp
cmpsb
aas
mov
dec
jnp
adcl
or
pop
and
movsl
inc
push
out
inc
cwtl
add
dec
bound
arpl
and
mov
dec
cmc
hlt
push
jbe
mov
sub
dec
xchg
cmovge
sbb
clc
sub
push
push
mov
clc
dec
mov
push
cmpsl
mov
jne
cmp
mov
adc
pop
or
imulb
mov
pop
push
fwait
das
mov
jge
inc
mov
mov
xor
inc
out
insb
mov
les
and
xchg
push
fstpt
xor
lock
data16
mov
push
dec
add
and
push
icebp
sarb
mov
and
addr16
into
cmp
ja
or
sub
stc
sahf
inc
sti
icebp
sbb
into
cwtl
dec
insl
xchg
inc
sbb
xor
lcall
lods
popa
jecxz
inc
iret
movsl
mov
sbb
xor
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
xlat
mov
and
sbb
cmc
pop
loope
jnp
dec
outsb
leave
in
int3
cmp
mov
pop
gs
test
lock
gs
cmp
add
push
insl
or
aaa
ss
mov
ret
lea
bnd
push
add
rolb
cmp
addr16
daa
push
inc
int3
push
les
mov
jp
ficoms
dec
movsl
dec
outsl
jge
repnz
mov
inc
test
jno
and
pop
cltd
popa
inc
mov
inc
pop
inc
aas
mov
push
cmpsl
mov
xorl
jg
frstor
and
xor
fs
mov
and
inc
xchg
dec
jg
pop
repz
mov
insl
sub
jp
pop
popf
mov
mov
push
mov
mov
xor
in
into
sbb
mov
leave
pop
sub
mov
add
jmp
in
pop
or
cmp
inc
mov
inc
notb
add
inc
jp
pop
inc
jp
dec
ds
jle
and
sub
or
popa
mov
icebp
lret
dec
popf
mov
sar
jnp
je
pop
fcompl
xchg
xlat
addl
enter
fsubrp
scas
pop
call
dec
sti
dec
ficompl
adcb
cld
mov
mov
aas
test
dec
pop
fnsave
xchg
cmp
dec
mov
push
out
dec
mov
dec
inc
sahf
fsubl
mov
int3
mov
shrl
scas
push
cmp
add
shl
push
cli
pop
mov
cmp
pop
inc
add
xchg
movsl
mov
lahf
inc
sti
push
shl
hlt
jp
shlb
cmpsl
xor
push
jecxz
arpl
sbb
loopne
sub
aas
add
adc
xor
and
mov
or
xlat
pop
mov
xlat
mov
xor
jl
push
ljmp
dec
sub
lds
add
dec
adc
int
ret
fucom
fistpll
call
mov
popa
jmp
mov
jp
jb
mov
enter
mov
xchg
xchg
inc
pop
mov
pop
out
outsl
jmp
pop
rcr
jle
movsl
in
ret
mov
sbb
inc
push
bound
sbb
rorb
aas
outsl
add
inc
lds
cmp
push
pop
in
les
in
mov
int
jns
and
roll
dec
add
lret
jb
aaa
sbb
xchg
imull
pusha
rolb
adc
jl
xor
and
fistps
sbb
mov
lahf
adcb
inc
or
and
pop
mov
aad
jge
dec
adc
xchg
xor
dec
mov
or
inc
add
add
out
or
inc
or
push
inc
ret
jns
sahf
ficoms
test
add
scas
fdivl
lock
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
xchg
jmp
nop
rcrl
and
sbb
and
lods
divl
and
in
aas
gs
les
and
mov
pushf
iret
call
inc
cmpsl
mov
loope
mov
add
js
popf
and
lcall
fsts
add
sub
jnp
push
pop
out
int3
mov
ja
les
dec
and
pusha
pusha
mov
rcl
mov
outsb
pusha
mov
add
pusha
cmp
je
loope
xor
sar
cmc
mov
and
mov
xchg
inc
adc
mov
subps
ljmp
cmp
inc
xchg
lret
scas
mov
sarl
push
mov
movsl
sub
das
or
int3
pop
ror
rcll
stc
arpl
daa
sub
push
xchg
xor
pushf
adc
in
mov
dec
in
aam
add
xchg
cmpsb
adc
push
push
mov
cmp
inc
fwait
add
xor
push
sbb
push
daa
bound
jne
cmp
sarl
inc
outsl
js
add
les
add
mov
ss
mov
stc
mov
stos
cmp
dec
sarb
jne
subb
or
ret
fwait
lea
daa
cmp
push
mov
inc
stos
and
stc
test
push
fs
sbb
jmp
outsb
add
cltd
xlat
sub
inc
sub
and
inc
or
inc
call
in
pop
stc
xchg
ja
jecxz
cwtl
xchg
nop
pusha
rorb
pusha
aas
fdivrl
xor
cmp
add
cld
inc
jo
cmpsb
lret
xchg
cmp
ret
aam
mov
mov
dec
bnd
dec
scas
add
jo
xchg
out
mov
jno
pop
mov
xchg
imul
xchg
jp
clc
into
xchg
int3
scas
lods
jl
cmp
cmp
mov
sub
hlt
fadds
adc
push
jbe
xor
ret
bnd
pop
fstpt
cs
sbb
mov
movsl
or
addr16
shlb
cli
call
push
sbb
jmp
cmp
cltd
popa
bound
in
add
jmp
dec
jnp
mov
pop
cmp
popa
push
xchg
push
testl
cmp
ljmp
push
vxorps
sub
jns
out
test
xchg
rcrl
adc
jbe
daa
out
aad
data16
add
pop
pop
cwtl
mov
popa
sti
stos
jne
cmp
dec
ret
shl
push
pop
adc
cmp
jnp
repz
inc
mov
aas
xchg
mov
aad
xchg
enter
leave
sarl
shll
mov
mov
sbb
stos
int3
iret
dec
or
lock
icebp
mov
movsb
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
jl
mov
sbb
aas
xlat
fisubs
cmpsl
inc
adc
sub
mov
std
jle
push
repnz
mov
daa
jge
xchg
xor
inc
rorb
add
cmp
xchg
cmp
lret
into
das
pop
in
movsb
or
xchg
add
dec
jl
and
cmpl
stos
hlt
sub
data16
adc
jbe
int
dec
fistpl
cmp
enter
scas
mov
nop
push
fwait
cmp
fwait
xchg
jmp
scas
push
xor
push
scas
divb
pop
fidivrl
andb
imul
iret
lock
mov
fcompl
je
call
imul
popf
adc
outsb
and
lahf
ds
sub
mov
dec
int3
call
mov
stos
in
push
and
xor
addr16
sarl
add
out
cwtl
cmp
push
mov
mov
xor
movsl
imul
shll
and
pop
jno
jne
fwait
jne
and
pop
hlt
test
sbb
jb
loopne
test
mov
dec
cld
jne
je
add
in
mov
imul
loope
ljmp
loope
sub
nop
pushf
inc
outsb
fistps
mov
sbbb
shll
leave
or
enter
dec
fisubrl
or
or
lcall
js
and
test
aad
cmp
test
dec
cli
adc
dec
lret
jge
mov
mov
movl
idivl
xchg
jne
cmp
fiaddl
jge
fisubl
fidivrl
sub
xor
outsb
repnz
shlb
stos
shlb
sub
adc
rcll
ficomps
pop
jnp
in
mov
aad
cmp
shrl
jge
xorl
push
adc
mov
lds
sub
popf
mov
enter
push
jecxz
dec
arpl
shll
pop
cmp
pop
mov
outsl
cs
mov
jle
stc
add
hlt
clc
sbb
jbe
mov
push
out
out
mov
mov
test
iret
data16
mov
cmp
shrb
pop
inc
insb
adc
mov
std
and
or
iret
sar
movsb
cmpsl
test
pop
and
and
and
push
jmp
push
or
test
cltd
and
es
mov
mov
cmp
pop
loop
rorl
insb
int3
cli
ljmp
cmp
xchg
and
test
sbb
or
sbb
push
movsb
clc
adc
add
push
cvtps2pd
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
clc
insl
mov
mov
sbb
adc
sbb
pop
das
adc
popa
stos
xchg
inc
xor
pop
test
or
xor
test
push
repnz
xchg
push
and
int
loopne
jno
sbb
xchg
int
call
fistpl
jle
cmpb
js
cmp
cmpsb
xor
cmp
mov
jae
and
insb
ret
test
or
or
pop
jge
ret
pop
mov
mov
and
lahf
fwait
out
test
fdivp
jb
jmp
rcr
jmp
loop
mov
jbe
les
jecxz
add
into
je
cli
mov
orb
jae
aam
aas
ret
repz
out
jp
into
dec
adc
adc
outsb
push
xchg
sbb
mov
xlat
call
jne
adc
mov
inc
xor
xor
pop
les
pop
daa
mov
mov
repz
add
push
pop
movsb
mov
sub
jb
sbb
xchg
scas
jecxz
test
aaa
jbe
cmp
xlat
subb
daa
or
loop
fnstcw
xchg
jae
sub
pop
lods
sbb
jbe
notb
adc
mov
push
dec
lcall
xchg
nop
jb
stos
repz
xchg
pop
pop
bound
test
pop
divl
xchg
inc
jns
mov
cmpsb
jnp
lahf
pop
lea
dec
shlb
jl
push
lea
push
nop
out
lods
sti
mov
repz
out
xchg
mov
cmp
fisubl
ss
in
push
fs
xchg
hlt
cmpsb
aaa
cmp
dec
fldl
or
shll
push
das
xor
lods
aad
lahf
cmp
cs
cmp
adc
fldenv
pop
stos
flds
adc
loope
icebp
clc
mov
dec
mov
mov
or
adc
lret
cmpsl
and
jnp
js
jp
repnz
add
push
jo
fs
movsb
nop
shr
mov
mov
cmpsl
jg
in
cltd
jge
push
dec
cmpsl
cmp
shll
mov
pop
cmp
out
imul
xlat
mov
fyl2x
pop
iret
or
xchg
pushf
mov
fildll
inc
dec
cs
or
int
lds
mov
xchg
out
push
sbb
xchg
inc
mov
inc
cmp
outsl
push
in
imul
and
cmp
fwait
inc
pop
jae
mov
aas
js
jne
out
inc
xor
icebp
xor
sbb
xorb
ds
jo
and
pop
jle
sbb
repnz
jp
hlt
push
mov
add
push
mov
hlt
fnstenv
call
stc
inc
dec
push
cwtl
lods
adc
sub
dec
sub
aam
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
sbb
lods
aad
mov
dec
and
lods
addr16
adc
jmp
dec
add
mov
xchg
xor
aas
stos
mov
jle
es
xor
lods
jge
push
mov
les
xor
pop
leave
xchg
pop
and
out
scas
dec
into
sbb
movsl
and
sbb
mov
xor
xchg
outsb
sbb
inc
and
sub
nop
lahf
nop
mov
clc
sbb
xor
mov
mov
inc
lret
ror
pop
cli
dec
sbbl
ret
das
xchg
jge
and
jmp
cmp
push
xchg
and
mov
insb
icebp
test
pop
nop
lret
sahf
fisubs
ja
nop
push
pop
ljmp
mov
das
adc
sahf
push
mov
sbb
push
test
shl
inc
leave
insl
hlt
cmp
inc
xor
scas
jbe
aaa
jb
inc
ja
push
cwtl
mov
gs
popa
insb
cmp
jne
fldz
add
or
push
into
inc
push
mov
sbb
mov
adc
mov
in
lods
sub
adc
inc
xlat
and
ss
push
enter
int3
lahf
mov
ret
and
fisttpll
xor
adc
jne
pop
in
and
leave
leave
cwtl
repnz
daa
test
mov
cmp
mov
or
dec
gs
imul
pop
mov
jbe
in
mov
jmp
add
pushf
add
or
das
addr16
imul
leave
lods
inc
sbb
jbe
jno
or
pop
fsub
push
test
stc
clc
outsb
add
fisubs
adc
stos
fwait
adc
mov
repz
jnp
pop
fidivrs
fs
push
sbb
jb
xor
xchg
lret
jae
sub
aaa
out
jb
mov
arpl
fimuls
mov
inc
rcrb
lahf
stc
imul
repnz
mov
inc
xor
outsl
push
sub
test
repnz
fidivs
and
inc
popa
test
mov
adc
test
push
lea
insb
push
mov
push
inc
xorl
into
cmp
adc
enter
jae
mov
mov
mov
call
xor
lods
mov
lods
and
cli
test
sahf
mov
mov
icebp
out
dec
cs
fdiv
imul
pop
incb
cmp
xor
adc
sahf
xchg
mov
push
aaa
es
imul
xor
add
sahf
mov
mov
add
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
sub
sbb
adc
sbb
les
cmp
fcomps
xchg
test
aam
data16
sti
sti
sahf
mov
mulb
mov
lret
and
push
es
inc
lret
in
cmc
xchg
jb
adc
dec
leave
in
jne
addl
daa
sub
cmpsl
add
xchg
pushf
call
mov
movsl
cmpsb
mulb
stos
xchg
dec
xchg
les
in
mov
jae
jno
mov
lret
std
in
iret
pop
xor
xchg
xchg
dec
pushf
pop
or
push
stc
shrl
arpl
lret
mov
cmp
mov
add
jle
mov
lahf
cld
in
bound
xchg
notb
or
pop
sbb
and
mov
lea
ret
and
dec
aas
adc
scas
pop
div
out
aad
imul
lods
fcmovbe
int3
sbbb
jge
enter
jle
mov
ret
mov
stos
sub
sbb
xchg
pop
lret
push
sub
jae
jmp
pop
push
push
jne
stos
jne
adc
das
inc
pop
hlt
and
dec
push
mov
mov
adc
mov
jae
jl
xor
push
mov
ljmp
adc
adc
in
jecxz
cmpsl
adc
xor
movsl
mov
inc
scas
sarb
call
leave
inc
inc
les
mov
cltd
pop
and
mov
lock
mov
clc
or
in
arpl
movsl
sub
mov
imul
repnz
lret
pop
daa
mov
sub
xchg
pop
cmc
hlt
mov
pop
cltd
inc
inc
xchg
pop
pop
inc
ja
movsl
loop
fcomps
add
push
pop
fcompl
push
xlat
jg
inc
sub
push
inc
lods
sbb
pop
cmp
sahf
add
test
outsb
and
jle
push
stos
call
bnd
imul
imul
xor
sbb
jae
inc
lcall
and
int3
daa
inc
scas
inc
xor
inc
fistl
clc
dec
xlat
mov
adc
sbbl
push
jl
ja
mov
mov
ss
sbb
pop
loope
inc
sub
push
enter
cld
adc
subb
mov
xchg
repz
mov
or
or
std
sub
jbe
iret
push
js
inc
xchg
es
repz
nop
fidivrs
jb
pop
jecxz
dec
divl
popa
pop
ljmp
jle
xchg
js
test
mov
notb
jmp
pop
push
into
dec
daa
pusha
jae
dec
decb
sub
pusha
sub
jnp
xlat
test
js
out
data16
sbb
sub
push
dec
je
jo
push
xchg
pop
int3
adc
loopne
lcall
dec
cmp
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
add
mov
sbb
fdivrp
ret
sub
or
sbb
or
shrl
test
add
mov
pop
out
inc
pusha
stos
push
jne
inc
int
mov
testb
imul
mov
xor
mov
add
sar
rcrb
pop
jg
adc
cld
xchg
mov
push
sti
les
hlt
jne
or
lods
mov
je
jae
mov
sub
call
ljmp
out
test
ss
mov
enter
cmpsl
in
jb
nop
add
dec
imul
xor
pop
adc
stos
and
in
mov
sti
cli
mov
mov
sbb
inc
push
pop
dec
xor
push
sbbl
push
movsb
ds
adc
ljmp
jge
stc
rep
push
movsb
das
pop
out
popa
fnsave
cltd
add
fidivrl
lea
xchg
cmp
jbe
dec
sbb
mov
cwtl
or
pop
mov
sub
les
outsl
sahf
mov
jae
mov
sub
cmc
adcb
fdivl
xorb
imul
pop
les
pop
aad
imul
sub
push
push
inc
and
and
adc
into
adc
insl
sub
add
shll
es
mov
loop
loope
pusha
out
mov
add
mov
and
mov
les
sub
and
js
xor
sbb
add
adc
push
sbb
add
xor
xor
lret
mov
loopne
addr16
jl
fmuls
addr16
dec
push
mov
imul
int
stos
adc
pop
aad
stos
ret
inc
std
movl
outsl
fistpll
loope
mov
push
popa
and
push
pop
push
repnz
sub
dec
mov
negl
popa
pop
or
dec
lds
loope
or
xchg
jl
cltd
imul
rcrl
mov
xorl
aaa
sbb
mov
or
insb
pop
jp
push
lods
push
and
out
jno
push
sbb
pop
push
ficomps
sti
mov
and
mov
dec
outsb
pop
test
mov
addr16
push
xor
mov
adc
push
sbb
fstpl
pop
or
pop
push
jns
jne
mov
inc
fidivs
cmp
lretw
pop
dec
sti
lret
imul
mov
inc
punpckhwd
fs
in
outsl
dec
test
cmc
adc
dec
cmpsb
push
sbb
in
xchg
fildl
inc
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
mov
sbb
and
sbb
leave
lock
aad
xchg
sbb
ja
test
pop
cmp
movsb
jl
adc
dec
push
cwtl
xor
ljmp
nop
cltd
mov
lods
int
xor
and
sub
flds
lods
mov
pop
sahf
insb
data16
push
in
pop
inc
mov
xchg
pop
mov
outsl
gs
out
xchg
scas
in
mov
jo
push
sbb
xchg
hlt
sar
outsl
cmp
int3
lds
insl
xor
xchg
pop
pop
xchg
add
outsl
push
pop
pop
test
out
push
jne
push
mov
fs
cmp
sbb
dec
lods
cmp
jl
add
rcl
into
in
inc
cmp
outsl
sub
into
mov
call
dec
outsb
or
aad
xor
mov
jne
sbb
shl
pusha
cltd
test
ret
sub
js
lahf
add
repz
jge
lcall
bound
dec
pop
or
ficompl
lahf
aad
mov
jl
mov
adc
jecxz
in
in
push
jno
sbb
sar
mov
adc
push
and
pushf
push
iret
inc
xchg
mov
mov
ret
mov
cmp
mov
mov
cmp
pop
sahf
sub
mov
hlt
jae
add
inc
mov
rol
aas
xor
incl
movsb
mov
push
out
and
mov
insl
movsl
lods
push
in
dec
shll
test
das
les
cmpsl
dec
fidivrs
push
cmp
test
in
pop
mov
pop
sahf
xchg
loope
push
mov
in
out
mov
dec
cmpsl
adc
mov
outsb
hlt
arpl
mov
inc
mov
or
cld
pop
ficomps
sti
andb
out
fbld
stos
jl
ret
pop
je
add
inc
adc
stos
mov
lret
fwait
xchg
addb
repnz
pop
daa
shll
inc
xchg
or
lret
xchg
lea
xchg
arpl
data16
jg
and
leave
das
xchg
mov
call
fnsave
xor
testl
scas
sbb
cmp
push
xchg
pop
rep
aaa
fsubrp
adc
cmp
fwait
lods
pusha
cwtl
pushf
mov
gs
mov
xchg
xor
xchg
clc
psubw
nop
xorl
pusha
mov
cmp
jp
lret
popf
or
xchg
dec
shlb
add
testb
jae
leave
and
test
movsb
mov
cli
aad
aam
pop
sti
jo
cmp
adc
ds
adc
add
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jo
xchg
sbb
and
sbb
aaa
cs
xchg
fs
adc
cmc
imul
xor
das
lods
xor
insl
adc
cmp
int
movsl
scas
cmpsb
mov
fidivs
and
das
add
xchg
lahf
add
loope
fisubrl
in
fs
mov
cmp
pop
mov
int
mov
jl
rolb
cmp
dec
fsts
adc
inc
mov
mov
mov
pop
mov
pop
mov
and
lods
inc
paddusw
adc
and
jbe
repnz
or
adc
adc
in
adc
into
clc
clc
push
es
sub
or
mov
mov
notl
xchg
enter
jb
inc
jmp
push
xchg
loop
mov
sahf
add
pop
mov
test
jmp
lea
shll
imul
and
aas
sub
pop
test
scas
mov
or
jo
mov
or
outsl
out
push
xor
out
popf
dec
mov
aad
pop
fisttpll
push
or
lret
daa
out
imul
inc
popf
cmpsb
jg
sarl
dec
cmpsl
or
cmp
push
xor
inc
xor
ret
dec
cltd
cmp
test
aas
sub
sbb
lock
neg
ret
xchg
leave
mov
sbb
subb
aaa
and
add
xor
cmpb
sub
lahf
int
pusha
or
jl
mov
jecxz
call
es
adc
inc
jne
dec
mov
je
aam
jnp
cli
or
sbb
aam
jle
in
sub
add
sahf
fisubs
xor
sbb
dec
mov
dec
insb
stos
jbe
inc
insb
push
or
iret
fnstenv
out
cmc
bound
mov
pusha
adc
into
adc
inc
xor
xchg
movb
leave
cltd
imul
sbb
mov
decb
pop
jle
enter
pop
stc
mov
insl
inc
ljmp
jnp
mov
pop
pop
cmp
or
cmpsb
insb
fldt
cmpsl
lods
lret
scas
pop
lods
mov
xor
add
jg
pusha
mov
mov
out
xchg
or
adc
mov
imul
sbb
cltd
cld
shrb
jne
jmp
fsubp
outsb
std
mov
xchg
mov
pop
mov
dec
rcrl
sub
pop
add
shrl
jbe
cmp
movsl
int
push
or
jae
inc
out
adc
and
pop
push
loope
pop
pop
mov
fnsave
mov
in
ja
les
mov
loope
loop
pop
ds
pop
inc
sbb
and
xor
mov
fisubrl
or
stos
xchg
stos
stos
push
stos
fsts
jg
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
lea
rclb
sbb
xchg
jnp
jb
pop
inc
ret
jmp
fidivrs
cmpsl
dec
add
xchg
pushfw
jmp
inc
rcrb
jge
lods
imul
lock
xor
loopne
mov
push
or
dec
sbb
mov
int
mov
sbb
inc
aaa
jbe
push
test
pcmpeqb
rcr
push
xchg
mov
sub
cli
fimull
mov
dec
push
movsb
out
repz
outsl
movsl
jge
mov
outsl
jne
movsl
jmp
push
pop
or
cmp
jle
arpl
dec
xchg
fnstenv
call
movsl
jo
push
sbb
ret
push
jo
je
push
shlb
pop
pop
pop
jg
inc
pushf
push
insl
fs
push
cltd
in
lds
xor
add
mov
les
aas
mov
enter
inc
pop
mov
cld
ret
and
stos
fisubrs
jnp
dec
lret
add
fadds
mull
cltd
js
lahf
push
imul
xchg
icebp
sub
and
out
or
insl
jns
imul
test
pushf
xchg
leave
mov
repz
inc
push
fmulp
pop
mov
jbe
out
pop
inc
arpl
in
ret
inc
mov
pop
cmpsl
icebp
add
mov
call
shl
movsl
or
add
fdivrl
inc
in
push
pop
insl
aaa
mov
mov
pop
push
pop
jnp
mov
sbb
nop
icebp
movsl
xchg
in
or
pushf
int3
ret
hlt
cltd
xchg
add
jb
pop
add
repz
adc
adc
mov
pushf
inc
insl
cmp
xchg
sub
inc
or
lds
push
iret
fildl
lret
subb
adc
in
sbb
pop
jmp
and
sub
jle
ret
loope
or
test
movsl
xchg
test
stos
lea
mov
cmpsl
je
adc
add
testb
dec
mov
pop
sub
cmpb
cltd
mov
les
push
ds
dec
movsl
bound
sub
arpl
add
out
push
popf
inc
iret
mov
sti
bnd
js
or
jp
or
leave
xchg
ljmp
lea
adc
ds
ret
dec
mov
pop
out
stos
negl
dec
inc
adc
lret
adc
pop
pop
outsb
pushf
cmpsb
cmp
xchg
test
pop
imul
mov
mov
or
lods
fnstcw
aas
leave
mov
movsl
sbb
mov
fstps
pusha
test
into
cmpsb
mov
dec
insl
sub
inc
sbb
ja
shrb
ss
cmp
lret
nop
jns
into
js
mov
push
stos
mov
je
bound
sbb
inc
sub
or
loopne
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
xchg
pop
iret
fiadds
movsl
ficoml
and
fldt
sbb
add
daa
in
xlat
ljmp
pop
push
aam
movsl
add
pop
xchg
arpl
mov
cmc
or
or
mov
and
inc
xor
clc
inc
add
popf
int3
lcall
xchg
mov
cld
mov
push
cmpl
push
iret
mov
push
int3
outsl
ret
call
and
psrad
andl
les
xor
addr16
cmp
out
pop
mov
into
arpl
inc
aaa
or
popa
jo
out
cltd
dec
and
bound
mov
cmp
stos
mov
subb
in
jp
enter
jl
movsl
rcrb
push
pop
inc
lcall
and
ds
add
cs
outsb
mov
or
fxch
mov
inc
js
add
or
sub
inc
popf
mov
dec
pop
pop
adc
in
fistpll
sahf
mov
movsb
cmp
dec
add
xor
arpl
imulb
inc
pop
test
mov
xchg
divl
lods
sbb
lret
mov
push
je
adc
lds
or
pop
xchg
adc
or
adc
dec
cmc
and
scas
and
mov
adc
rorb
push
cli
dec
gs
lahf
lret
mov
and
mov
adc
pop
test
xor
cmpxchg
clc
jecxz
mov
sbb
mov
xlat
out
or
movb
jecxz
xor
mov
cmc
enter
dec
mov
push
jg
nop
push
mov
daa
or
stos
mov
mov
dec
test
xchg
push
int
in
cld
int
mov
mov
mov
push
inc
mov
rorl
xor
sub
fs
cmp
jp
arpl
outsb
loop
xor
mov
sub
in
add
mov
add
sbb
repz
mov
mov
test
xchg
xor
nop
push
jbe
inc
js
xchg
mov
cmp
aas
inc
rcrb
mov
stc
cmp
mov
dec
and
jp
cmp
lock
bound
cmp
insb
fnsave
ds
xor
icebp
pop
je
push
jmp
nop
xchg
push
lods
jmp
movsb
sbb
outsl
mov
xor
inc
xchg
lods
mov
dec
insb
push
fcoml
mov
iret
ja
lret
ss
inc
mov
xchg
aad
add
lock
cmpsl
adc
dec
fisttpl
in
movsl
push
sbb
adc
ja
mov
xor
xchg
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
pusha
cmpsl
mov
and
sbb
inc
push
loope
cmpsl
lcall
es
cmp
mov
sbb
mov
xchg
leave
add
lcall
nop
or
testl
arpl
aam
in
outsl
leave
mov
xchg
pop
lods
add
and
jl
cld
icebp
sarb
adcb
push
sbb
push
popf
lock
in
and
insl
roll
mov
fcoml
icebp
push
clc
daa
pop
xchg
pop
xchg
fiadds
pop
cmp
data16
or
sbb
movb
int
pop
sbbl
mov
shlb
xchg
outsb
sub
adc
add
push
fadds
or
sahf
scas
leave
adc
dec
sub
lods
mov
and
repnz
xchg
mov
fiadds
lea
push
pop
inc
call
test
mov
adc
arpl
push
xor
push
test
xchg
fwait
dec
mov
imul
scas
fnsave
into
or
xor
lds
mov
mov
inc
addb
push
ds
adc
xor
lods
out
cs
ret
mov
ret
in
dec
je
sbb
jo
mov
jmp
jge
mov
loop
fbstp
jmp
sbb
pop
clc
pusha
push
push
mull
test
mov
mov
test
ja
cmp
mov
xor
cmpsb
push
mov
aam
movsb
sbb
pop
sub
adc
stos
imul
cltd
push
pop
add
cmp
insl
aam
push
or
popf
sbb
int
pextrw
add
and
stc
rcl
or
int
dec
cmpb
fisubl
rcl
jge
sahf
rol
movsl
xlat
aam
leave
pushf
xor
sub
mov
pop
push
dec
inc
in
sahf
in
fcmovu
js
sub
xor
es
repz
das
enter
xor
sbb
jge
adcb
inc
xlat
icebp
pop
xchg
pusha
lds
dec
jp
ret
xor
movsl
insl
lahf
out
decb
pop
sahf
addl
push
pop
fisubrl
fadds
pop
dec
push
cmp
push
sub
cmp
sbb
into
mov
orl
mov
pop
push
in
pop
enter
rcll
push
mov
js
mov
dec
sti
je
jo
fs
push
in
aaa
imulb
sub
xchg
clc
arpl
mov
test
mov
bnd
mov
shll
jo
mov
inc
or
xchg
xchg
push
add
push
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jl
jg
sbb
adc
sbb
movsb
xchg
fidivrs
add
inc
out
adc
adc
sub
mov
sbb
xor
mov
dec
xchg
pop
sarl
push
jmp
xchg
add
daa
cmp
jne
cmpsb
bound
das
std
int
repnz
clc
adc
ret
push
and
ret
into
cwtl
sub
out
lcall
sub
add
in
test
js
jns
and
push
fstpl
mov
ljmp
sbbb
add
sti
pop
test
mov
cmpsb
mov
sub
pop
bound
and
mov
stos
xchg
push
dec
aad
xor
xor
push
fmuls
dec
les
mov
pop
push
xchg
shlb
push
loop
inc
popl
pusha
push
popa
in
jmp
cmc
jbe
ror
dec
xchg
and
sub
out
jne
inc
jg
jg
cs
mov
cltd
cmp
test
adc
divb
mov
adc
adcl
mov
jbe
ficompl
mov
enter
dec
xlat
mov
imul
mov
fadds
mov
lock
movsb
dec
mov
rcl
call
jnp
inc
xchg
dec
or
jp
or
loope
cltd
rorb
rcrb
mov
rcll
es
in
imul
mov
out
jnp
ss
aas
inc
push
js
mov
push
out
lods
mov
iret
test
cld
xchg
clc
repnz
xchg
xchg
fisubs
pop
adc
and
push
xchg
lods
dec
and
xchg
test
cmp
jno
or
push
cmp
jbe
jp
pusha
and
jae
or
ja
inc
pusha
push
mov
ficompl
mov
lods
fbstp
cli
outsb
int
rolb
inc
xlat
cmp
mov
inc
and
je
sub
xor
lret
in
mov
icebp
in
and
add
into
pop
mov
add
dec
jp
cli
or
mov
dec
jae
mov
faddl
test
mov
test
xor
cmpsb
pop
adc
icebp
jb
test
ljmp
ds
call
les
mov
cli
aad
gs
sbb
fstpt
and
hlt
cmp
mov
call
sub
push
in
mov
out
mov
adc
sahf
add
js
inc
and
lret
dec
and
jl
pop
mov
outsl
push
push
mov
cmp
push
inc
mov
sarb
push
dec
lods
movsl
jmp
xchg
pop
and
inc
jg
dec
or
in
jle
adc
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
xorps
and
sbb
or
or
rcll
lcall
rorb
push
mov
xlat
or
enter
or
adc
jmp
and
mov
lret
jne
call
mov
push
push
lock
or
stos
rcll
aam
sti
jne
out
adc
out
sti
or
ret
je
sbb
xchg
jae
or
sbb
push
add
jge
pop
outsl
arpl
adc
mov
scas
lret
stc
push
aad
xchg
pop
mov
mov
dec
icebp
jmp
mov
jo
daa
fdivs
sbb
mov
icebp
push
out
push
sbb
lds
jnp
add
mov
mov
imul
sub
mov
pushf
arpl
xor
mov
ret
data16
jle
sub
arpl
jae
adc
adc
and
movsl
stc
jmp
fmull
bound
daa
push
add
mov
outsl
insb
dec
xor
xor
popa
jnp
mov
out
imul
test
push
inc
arpl
pop
jb
test
cmp
pop
dec
aaa
outsl
add
int
mov
push
push
testl
inc
sub
pop
int3
mov
push
pusha
xchg
cmp
pop
scas
aam
shlb
in
fldenv
out
and
sbb
add
push
inc
xchg
mov
nop
mov
mov
mov
into
dec
loope
and
cltd
rcl
pop
push
ficoms
inc
mov
adc
xchg
daa
or
outsl
outsb
push
xor
loope
dec
mov
test
jl
sbb
scas
inc
and
leave
mov
insl
jnp
stos
jmp
lods
and
add
imul
and
pop
int3
xor
stc
push
cltd
inc
in
cmp
mov
mov
in
lret
xchg
pusha
dec
dec
sbb
mov
sbb
sbb
mov
lret
cmpsl
jl
add
aas
mov
lret
sbb
pop
mov
mov
imul
mov
inc
fwait
xchg
sbb
mov
and
jp
jp
add
pop
cltd
sbb
push
scas
sbb
inc
lret
jbe
xor
inc
pushf
cld
stos
stos
js
or
sub
pop
xchg
sub
push
lret
push
xor
inc
shrl
pop
aam
mov
mov
popa
mov
fs
xchg
mov
rcr
push
shrb
stos
cmp
sbbb
add
in
nop
loop
stos
fstps
mov
popa
adc
mov
jae
mov
mov
cltd
mov
inc
mov
adc
les
mov
sbb
cli
pop
and
xorb
pop
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
jg
fsubrs
add
xchg
mov
in
jns
dec
dec
insl
add
add
pop
mov
mov
stos
mov
inc
cld
dec
pusha
adc
sahf
sbb
aam
fidivs
or
mov
lret
lahf
sahf
lret
or
popa
dec
divl
cltd
add
dec
test
cmpsl
push
cmp
bound
mov
das
mov
mov
push
fdivl
js
aam
loopne
inc
push
outsl
in
inc
out
bound
add
insb
jns
int3
hlt
test
icebp
mov
aaa
ret
inc
cs
jne
dec
aam
scas
lret
bound
es
adc
mov
loopne
sub
adc
in
dec
cmp
ljmp
pop
mov
clc
es
cs
push
push
sarb
xor
in
or
insl
ja
jb
xor
push
aas
mov
sub
dec
popa
adc
aaa
lods
popa
js
data16
xor
mov
ss
jns
imul
mov
sahf
movsb
sub
out
xchg
xor
or
outsb
rolb
into
ja
popf
mov
mov
pop
out
push
push
cmp
xor
jnp
gs
mov
push
jle
ja
ret
jg
push
sbb
adc
mov
mov
mov
lods
add
gs
dec
lret
xlat
std
xor
cmp
fidivrl
in
insb
in
in
sbb
pop
jg
dec
jmp
ds
adc
mov
xchg
dec
xor
xor
lea
ret
pop
mov
and
ds
or
lds
ja
insl
rcrb
fcoms
dec
ljmp
cmpsb
cmp
int
sub
icebp
js
in
popa
arpl
sbb
mov
mov
popf
mov
jnp
and
mov
repz
outsl
jp
pop
lret
mov
jmp
in
and
outsb
or
scas
dec
xchg
and
lret
ja
orl
adc
repnz
hlt
xchg
mov
aad
fdivl
push
mov
mov
inc
cmp
jge
aas
insb
adc
lods
mov
popa
out
daa
push
nop
cmp
mov
cs
dec
jg
push
dec
loop
push
test
movsl
add
push
mov
in
or
popa
push
mov
cmc
jecxz
int
and
xchg
arpl
data16
dec
jle
inc
adc
fsts
mov
in
decb
mov
je
dec
mov
mov
paddusb
mov
push
jle
gs
imul
jno
xorb
push
mov
inc
test
push
stos
outsb
adc
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
daa
push
stos
add
sbb
adc
sbb
and
daa
in
pop
imul
mov
pop
or
jle
js
xchg
aas
data16
or
mov
mov
outsl
sbb
movsl
inc
or
scas
rcrb
lahf
test
pop
lds
fs
adc
in
push
adc
sbb
incb
stos
cld
testb
cmp
adc
psubsw
dec
sbb
bound
lods
frstor
int
and
ds
mov
inc
out
popa
shlb
xor
adcl
xchg
sarl
cmpsl
cmc
leave
cmp
lods
jae
out
sub
inc
and
paddd
adc
or
mov
xchg
fs
xor
pop
adc
or
push
cmc
push
mul
pop
sbb
lods
add
iret
sbb
jnp
or
out
jl
cmp
insl
jne
xchg
jp
jmp
xchg
inc
cltd
popf
pop
cltd
hlt
ja
sbb
mov
xchg
sbb
mov
push
mov
mov
daa
sar
sbb
mov
scas
push
fmulp
jecxz
les
nop
or
xorl
xlat
bound
xchg
sbb
in
cmc
cmp
xchg
cltd
rorl
loop
pop
ds
sub
xorl
mov
inc
mov
mov
jmp
lock
mov
pushl
adc
test
aam
mov
xor
dec
mov
into
lods
fidivs
sahf
out
mov
and
leave
rcrl
add
push
movsb
xchg
mov
sbb
pop
popa
loopne
xchg
test
xor
ljmp
enter
jmp
add
xchg
popa
test
jae
mov
cmp
mov
adc
adc
jbe
lret
mov
movsl
jge
js
xchg
add
test
push
test
rep
mov
mov
ret
and
jb
bound
dec
or
fisttps
xchg
dec
inc
sub
pop
xorl
sahf
mov
insb
xchg
or
das
push
nop
jge
test
or
repz
in
addr16
jae
test
and
pop
adc
aam
test
outsl
push
xor
sti
sbb
xor
push
dec
xchg
pusha
shrb
xor
cmp
adc
xor
std
cld
les
adc
cmc
jb
lea
or
lret
push
push
pop
ljmp
stc
imul
xchg
leave
lret
aaa
imull
xchg
lret
fs
popf
cmpsl
shrb
lret
lret
cmpsl
and
enter
mov
ss
lcall
xor
into
jb
andb
add
jmp
jmp
and
push
sbb
push
fildl
sbb
adc
sbb
dec
push
cmp
push
or
cmp
dec
jge
cmp
insl
pusha
jno
jae
push
fcoms
mov
add
cmp
sub
stc
mov
rcr
dec
xchg
mov
fidivl
mov
mov
dec
fnstcw
repz
cmc
repz
add
lret
sub
mov
push
fwait
adc
out
mov
rcl
ret
jo
inc
jle
enter
pop
cmpsl
jmp
dec
sbb
push
fwait
and
adc
sar
popf
gs
fmul
mov
push
sbb
mov
dec
inc
bound
jle
mov
in
xchg
fbstp
xchg
lret
mov
lret
loope
fwait
xchg
hlt
mov
xor
pop
or
sub
mov
lds
subl
push
adc
int3
cmc
nop
loopne
in
sub
cld
mov
jmp
popf
mov
out
and
cmp
pop
xchg
jecxz
call
jp
fisubrs
stos
daa
sub
sub
pop
nop
inc
shl
les
out
ficoml
les
mov
mov
jbe
or
leave
mov
add
outsl
mov
inc
sub
test
pop
fstl
lea
or
sub
in
outsl
out
in
mov
mov
jo
icebp
fwait
jp
popa
mov
or
shrb
lcall
lods
das
mov
xchg
push
repnz
sti
call
les
or
std
sbb
mov
push
mov
out
cmp
out
push
pop
jno
push
mov
in
movsb
dec
repz
jo
mov
insl
call
fcomp
cli
imul
nop
mov
cmpsb
inc
lds
incl
jns
mov
scas
cmp
or
jle
xchg
cmp
daa
test
mov
jp
iret
mov
fistl
mov
jbe
and
push
ja
imul
sub
mov
pop
and
push
pop
pop
outsl
mov
and
xor
and
pop
cli
sti
push
data16
add
xor
popf
in
push
aaa
or
lea
adc
stos
or
pop
ds
adc
scas
add
ret
or
push
mov
in
rclb
jb
push
xchg
out
pop
ret
adc
and
fisubrs
xor
xchg
js
aas
lock
repnz
fiadds
lahf
jae
subps
jae
decb
cwtl
incl
push
orb
outsb
adc
mov
les
jno
outsl
dec
xchg
adc
dec
xor
jle
push
pop
movsl
ja
js
cmp
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
sbb
popa
sbb
and
sbb
iret
and
and
add
pop
sbb
ja
mov
lods
and
cli
pop
icebp
sahf
pop
mov
stos
fprem1
lret
pop
jl
sub
xchg
xchg
jb
and
jmp
sbb
cwtl
sbb
movsb
mov
sahf
and
popf
int
orb
sub
and
jno
andb
inc
xchg
adc
clc
imul
sbb
mov
in
xchg
stos
ss
pusha
mov
cmp
dec
inc
mov
inc
fbld
rep
out
mov
mov
iret
mov
in
sub
incb
hlt
xor
insl
sbb
and
je
insl
int
sbb
jecxz
cmp
mov
jp
rcll
mov
mov
rorl
test
and
fmuls
fmuls
js
out
in
in
mov
enter
mov
mov
xchg
sub
fwait
loopne
dec
icebp
mov
pop
and
insb
add
int3
popf
mov
sbb
shlb
pop
mov
push
popf
es
ja
add
iret
enter
stc
xor
fistpl
push
inc
pushf
andl
ljmp
inc
int3
sbb
xor
loop
les
shll
repnz
outsb
adc
mov
dec
lahf
inc
dec
dec
pop
addl
pusha
mov
pop
mov
stc
mov
pop
jmp
adc
clc
sbb
jmp
sub
xorb
test
jl
stos
xchg
aaa
sub
jle
jno
scas
xor
sbb
or
xor
add
repnz
mov
pop
cld
test
mov
mov
cmp
inc
cmpsb
mov
daa
ret
shlb
fdivr
dec
jge
pop
jae
lods
shrl
cmp
xchg
push
negb
inc
xchg
out
call
stc
xchg
cmc
pop
in
inc
lret
roll
dec
adc
xor
cltd
test
daa
mov
iret
xchg
cmc
es
jle
test
add
sti
xchg
pushf
push
push
fld
dec
push
fldcw
cmp
test
fmuls
mov
mov
test
xor
lret
pop
pop
imul
and
cmp
imul
idivb
jmp
sub
shlb
push
sti
lret
cmpsb
retw
add
mov
cmpsl
jge
les
xor
sub
adc
adc
test
mov
rcrl
popa
and
jmp
jmp
in
movsb
fwait
jp
pop
and
dec
or
icebp
jle
or
addr16
jp
leave
cvtps2pd
dec
mov
rol
mov
stos
and
mov
int
xchg
lcall
mov
movsl
or
or
lcall
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
setne
adc
sbb
add
repnz
dec
frstor
push
rcl
arpl
fdivp
and
jne
pop
fldenv
push
mov
dec
mov
sbb
addb
mov
push
cmp
adc
jecxz
cmpsb
adc
xchg
push
cli
cmp
addb
lret
dec
cwtl
lods
xchg
add
out
rorb
push
sub
mov
inc
sub
lea
inc
add
cmp
mov
leave
pop
aad
xor
jge
dec
pop
lahf
jg
lcall
aam
orb
mov
jg
xlat
insb
das
mov
movsl
jg
fs
push
test
out
fs
pop
stc
test
leave
or
addr16
in
xchg
pop
mov
adc
xorl
neg
jl
outsb
xchg
sub
pop
push
inc
in
mov
xchg
mov
mov
ret
outsb
enter
adcb
sti
push
popa
jns
push
cli
int3
repnz
dec
test
xchg
xor
and
fidivs
std
add
subl
lods
cli
jnp
push
jae
add
push
xchg
test
xchg
call
pop
mov
mov
push
ja
mov
adc
stos
mov
and
push
xor
js
sarb
mov
paddb
add
js
ljmp
mov
sarl
and
cmp
push
and
loope
lcall
lret
cmp
test
mov
and
pop
push
sub
test
rorb
mov
int
dec
insl
xchg
ret
or
fildl
cmpsl
add
cmp
xor
sub
out
into
cmp
addr16
sbb
mov
mov
call
push
pop
mov
push
adc
shlb
fsts
pop
pop
jge
mov
mov
or
loopne
cmp
pop
push
inc
pop
mov
add
mov
and
and
test
jne
mov
out
ret
cs
clc
mov
mov
and
stc
adc
inc
scas
adc
loope
sbb
push
stos
xor
popa
xor
bnd
cmp
mov
push
push
push
insb
stos
push
jne
clc
dec
mov
mov
in
lret
sub
sbb
adcb
pusha
out
cld
mov
push
lods
push
je
mov
icebp
jecxz
pusha
jmp
mov
cmp
sahf
scas
cmp
adc
lret
sub
fcmovb
clc
adc
nop
mov
sub
orb
push
int
adc
mov
or
mov
das
ljmp
xor
dec
test
mov
in
push
mov
xchg
jecxz
ret
mov
add
std
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
push
pop
jge
adc
add
cwtl
pop
mull
ret
inc
pusha
repz
push
inc
pop
jo
jae
mov
subl
es
mov
mov
int3
idivl
sub
xor
xchg
dec
outsl
mov
fucomi
mov
push
gs
fs
cmp
add
mov
adc
imul
dec
cmp
lahf
testb
fcmovnu
fwait
mov
mov
push
or
stos
fstpl
inc
ljmp
jecxz
lea
mov
subl
test
sbb
xlat
enter
out
push
and
test
or
mov
jbe
cmpsb
test
xor
into
sub
aas
mov
add
fcom
aas
add
and
mov
mov
popf
push
pop
enter
dec
mov
and
test
adc
dec
das
movsb
ret
int
inc
cli
dec
cmpsb
popf
xchg
mov
and
push
ss
shll
mov
mov
ja
scas
jg
sbb
dec
aad
lea
add
loopne
out
inc
xlat
jle
xchg
movsl
scas
or
mov
inc
jno
jno
mov
lahf
adc
adcl
lahf
push
jno
lret
cmpsl
adc
clc
insl
push
dec
pop
cmp
loope
std
pop
xchg
cld
fisttpl
sti
jl
popf
xchg
dec
popl
jo
lock
rcll
inc
roll
pushf
xchg
lcall
ja
les
data16
in
adc
aam
movsb
loope
add
fidivrl
aad
mov
fnstenv
sub
popa
stos
nop
mov
outsb
jb
pop
xor
mov
inc
loope
dec
jl
push
mov
test
es
stos
in
int3
mov
jecxz
adcl
and
push
mov
xchg
adcb
xchg
adc
push
sub
inc
pop
push
push
lret
dec
fildll
cmpsb
jle
or
cld
cmp
inc
push
inc
push
sbb
pop
jns
imul
clc
iret
inc
ret
cltd
mov
adc
mov
and
gs
dec
mov
call
ljmp
jge
out
cmp
or
fldl
dec
adc
mov
into
push
sbb
stc
mov
inc
mull
ds
ja
mov
leave
mov
add
insb
test
add
cmp
and
dec
ljmp
nop
xchg
xor
push
mov
push
push
stc
mov
cltd
jnp
popa
test
mov
push
jg
adc
js
ja
pop
ljmp
inc
mov
mov
dec
hlt
fdivrp
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
jge
notl
sub
sub
daa
inc
insb
shlb
inc
sub
lret
adcb
sbb
add
and
and
das
or
mov
shl
jmp
mov
inc
imul
or
clc
insb
adc
ret
aam
pop
sbb
xor
inc
rcll
dec
adc
mov
or
inc
push
movsl
in
iret
loop
out
xchg
push
addr16
cld
cmpl
pop
je
and
add
aaa
imul
xchg
mov
cmpsb
arpl
test
and
lret
xchg
adc
or
sbb
add
outsl
push
jle
sub
jo
sub
pusha
jbe
shrb
mov
cs
lret
push
test
and
xchg
cmc
rclb
shlb
lahf
cmp
fwait
lea
loope
mov
dec
cs
addl
pop
int
shl
or
inc
push
in
jge
push
dec
adc
and
into
je
sahf
jae
mov
or
popa
stos
pop
sbb
push
movsl
in
iret
rclb
xor
idivb
jo
or
iret
push
xor
push
and
in
push
mov
addr16
sub
std
js
and
test
int
jns
jns
clc
adc
subb
push
pop
cltd
cmpsl
movsl
incl
jo
bswap
enter
cmp
push
sub
xor
rcr
daa
cmp
lods
fisttps
jmp
mov
add
sub
repnz
and
push
int
inc
pop
lds
out
jge
and
jnp
mov
and
sbb
add
roll
popa
xchg
lret
jecxz
test
ss
popf
add
ja
in
pop
add
shlb
sub
js
rol
daa
flds
test
hlt
add
push
ja
test
sub
push
rcll
pushf
fyl2xp1
imul
hlt
mov
addl
adc
cmp
xchg
ret
mov
fnsave
sub
xchg
pop
cmpsl
dec
fistpll
or
mov
jnp
dec
jnp
sub
inc
cs
and
mov
iret
rol
inc
mov
test
push
sub
mov
in
push
cmp
and
adc
sub
fcoml
push
xlat
mov
fidivs
sbb
adc
dec
xorb
fsubr
xorl
xchg
cmpsb
aas
andb
sahf
mov
jmp
sub
outsl
sbb
inc
push
inc
xor
sub
xor
inc
inc
xor
ret
sub
bnd
outsl
into
shrl
test
pop
icebp
sbb
sbb
testl
add
add
mov
add
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
sbb
mov
add
sbb
mov
popf
clc
imul
lahf
test
out
mov
loop
ljmp
into
mov
call
out
les
push
and
pop
and
xlat
mov
pusha
pop
push
dec
addr16
push
pushf
enter
ret
cmp
addr16
out
rcrl
enter
xlat
or
sbb
cmp
pop
adc
cmpsl
xchg
cmp
imul
mov
and
mov
es
orl
test
dec
xchg
arpl
cmpsl
jae
popf
ret
mov
mov
enter
pop
ja
adc
test
xchg
mov
or
aam
lea
roll
mul
sub
or
notb
xor
aam
pop
das
jno
insl
mov
ja
jnp
fldcw
pop
out
mov
and
addl
jl
push
adc
pop
lods
imul
jno
das
addr16
adc
jmp
inc
push
bound
mov
int3
cmp
mov
aam
in
push
test
andl
xchg
dec
psubsw
cmp
fdivl
bound
xor
cltd
leave
push
lods
xor
fisubl
mov
sub
sbb
inc
cs
push
lcall
stos
out
push
adc
int
pop
mov
dec
and
jge
or
pop
inc
fdivs
test
lods
imul
adc
mov
dec
mov
lea
in
push
jecxz
push
rcrl
add
mov
aam
mov
add
adc
mov
jp
fists
fidivs
aam
add
popa
dec
lock
rcll
xor
ficompl
shr
jae
adc
inc
int
in
leave
xchg
icebp
xor
imul
fcmovnb
mov
sub
or
lods
inc
fwait
xchg
sub
cwtl
nop
or
cmp
in
fdivrs
outsl
add
or
mov
daa
in
imul
pop
and
adc
lea
mov
adc
imulb
mov
fwait
inc
cmp
lock
mov
mov
or
rorl
push
imul
push
outsl
mov
je
leave
jb
sub
das
lock
add
mov
cmc
xchg
sbb
repz
test
mov
fs
push
push
or
into
push
adc
sub
jb
inc
xlat
fsubrl
or
dec
test
push
ficompl
jne
inc
sbb
das
mov
repz
cs
xor
je
mov
add
idivl
movsb
or
stos
xor
loope
icebp
out
push
or
and
aam
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
xchg
loope
jle
inc
sbb
add
sbb
cmp
div
cmp
add
sbb
js
in
icebp
mov
int
rolb
xor
adc
ret
daa
movsb
data16
mov
pop
insb
pop
cltd
inc
testl
pushw
dec
enter
insb
xor
clc
fisubrl
dec
mov
pusha
mov
pop
jp
lret
adc
mov
jg
fwait
sub
xchg
xchg
xlat
pop
mov
pop
pop
cmpsl
aad
xlat
repz
ja
add
dec
push
jecxz
ficoml
mov
pop
lods
xor
jae
pop
andb
xchg
push
sbb
xor
xor
and
enter
pop
jb
push
lea
fldt
pop
inc
add
iret
scas
cmp
cltd
mov
xchg
lods
cmpsl
jmp
lret
ret
imul
inc
out
dec
dec
testl
sub
in
push
jno
jo
shlb
dec
mov
xor
daa
clc
jge
mov
or
inc
inc
fsubp
je
push
inc
mov
mov
pop
mov
out
sbb
push
fimuls
lahf
mov
cmp
out
fwait
popf
mov
sub
sub
aas
xchg
scas
jbe
inc
push
xor
daa
fstpl
sbbb
ja
out
add
fwait
addr16
mov
xor
cmp
push
jae
bsr
jge
xor
aas
mov
cltd
dec
xchg
ljmp
stos
sarb
or
leave
dec
sub
mov
notl
shrl
aas
pop
iret
xor
je
lcall
xor
pop
sti
xor
push
mov
mov
jae
shlb
ds
int3
and
cmc
sub
cld
rorl
loopne
jp
addr16
jmp
mov
cmpsb
stos
cltd
aad
imul
fadds
xor
fsubrs
push
xor
mov
test
xchg
push
mov
pusha
jns
mov
push
ret
dec
stos
push
stc
fildl
addl
cli
sahf
xchg
aad
sub
cli
jae
stos
push
inc
dec
push
insl
or
jne
pavgw
repz
cmp
push
mov
sub
aad
push
loop
das
jle
enter
sbb
jecxz
cmp
inc
add
pop
les
mov
mov
cs
rcll
jle
pop
cmpsb
xor
inc
movsl
mov
xchg
sahf
setle
popf
mov
aaa
scas
sti
inc
inc
movsl
gs
xor
dec
jnp
jecxz
sbb
mov
pop
xorl
cmc
outsb
dec
pusha
imul
sub
into
mov
pop
arpl
mov
stc
jo
xlat
jno
out
push
push
add
pop
jnp
pop
ret
lahf
sub
and
inc
rorb
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
std
iret
mov
cmp
sbb
out
or
mov
into
adc
xchg
xchg
cmpsl
mov
adc
leave
xchg
sub
mov
test
movl
dec
adc
std
xor
popf
stos
aam
ficoml
int3
pusha
inc
xlat
fwait
in
das
pop
sbb
mov
mov
rep
pop
and
out
cli
dec
dec
or
icebp
fdivp
or
mov
aam
xchg
mov
mov
int3
dec
fldt
xchg
xor
sahf
mov
iret
or
push
inc
addr16
pop
mov
mov
movb
scas
repz
mov
mov
dec
repz
pusha
lret
jle
popa
push
shrb
fistps
ror
stc
adcb
fnstcw
jp
adc
mov
sbb
cmp
xor
pop
add
and
jns
and
sub
test
fdivrs
mov
gs
out
inc
sub
popa
mov
inc
mov
pop
xchg
jg
mov
test
cltd
push
enter
mov
ljmp
bound
in
pusha
jge
sbb
adc
repnz
or
fucom
je
push
or
stos
cmp
jno
daa
bound
xor
mov
jae
xor
add
ja
icebp
call
adc
loop
jg
leave
repz
lea
mov
add
stos
inc
out
and
fldt
dec
mov
in
imul
ds
out
addr16
pop
icebp
xor
sub
icebp
pop
rsm
add
les
adc
xor
pop
jp
and
out
add
inc
insl
jb
out
push
flds
lods
xor
fstl
decb
and
imul
mov
xchg
rcl
push
std
pop
lret
icebp
xor
cli
cmc
and
out
scas
jbe
sbb
push
lahf
icebp
dec
outsb
mov
or
dec
or
test
jns
jmp
inc
lcall
xor
push
push
sahf
dec
dec
lock
sbb
stos
mov
insl
xor
or
and
in
fldt
in
and
imul
sbb
mov
cmp
cmp
aas
imull
movsl
push
and
aas
xor
dec
mov
adc
mov
mov
imul
mov
mov
mov
mulb
mov
and
popa
xor
cltd
clc
ret
cmp
pop
ret
sub
add
jmp
loopne
add
mov
add
jae
jecxz
dec
rorl
decl
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
and
sbb
adc
sbb
cmp
orl
push
sbb
sbb
ret
pop
mov
sub
nop
xor
mov
or
push
mov
sub
sub
sbbb
loopne
dec
dec
sbb
push
cmp
daa
add
loopne
or
cmp
cmp
xor
push
sub
flds
lcall
and
nop
fidivs
mov
inc
lret
mov
leave
xchg
ret
lahf
adc
add
sub
jge
mov
xor
mov
sarl
dec
jb
adc
gs
cmc
sbb
mov
xor
lahf
inc
and
test
pop
cmc
push
lea
loopne
sbb
shrb
sub
inc
cld
or
mov
jl
mov
cmpsb
cmp
push
push
jb
mov
dec
sbb
sub
mov
cmp
xor
adc
bound
sbb
adc
cmp
out
pop
mov
dec
pop
cmc
mov
ljmp
out
adc
es
jl
test
cmc
cwtl
outsb
or
out
mov
repz
ljmp
or
mov
cmc
stos
cmpsl
rcl
in
lods
jo
cs
and
rorb
or
adc
inc
pop
test
sub
in
notl
iret
dec
jbe
fwait
xchg
sbb
lods
sub
mov
mov
cli
sub
enter
in
sub
es
xchg
pop
jle
rorb
out
popf
sahf
loop
sbb
jl
cld
mov
sahf
or
mov
inc
inc
ds
ljmp
icebp
roll
out
loope
push
dec
sub
xor
fucomp
gs
push
jmp
sub
adc
mov
push
pusha
ja
pop
imul
adc
incb
iret
js
mov
lcall
mov
inc
inc
mov
popf
push
ss
leave
sti
andl
lock
movlps
nop
xchg
adc
test
mov
jae
push
cld
jne
and
aam
adc
insb
scas
xor
out
test
fdivrl
mov
addr16
mov
fildll
lret
push
ja
xor
arpl
xlat
add
jae
popa
int
in
or
lea
mulb
sub
aaa
jecxz
into
inc
inc
or
cmpl
stc
fs
xor
and
dec
cmp
fs
or
dec
popf
sahf
outsl
mov
add
fnstenv
cld
sarl
movsb
shrl
add
dec
pop
adc
lds
push
jo
cltd
repnz
repz
or
sub
mov
outsb
sub
decb
test
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
cmp
add
sbb
fmuls
movsb
imulb
outsl
mov
jbe
lret
sahf
fisubs
push
in
and
sbbl
adc
insl
mov
mov
cmc
sub
call
sub
insb
rorl
add
int3
loope
xchg
cwtl
lcall
sub
jle
insb
jg
aam
push
push
mov
js
or
xchg
movsl
repz
mov
add
and
push
or
push
sahf
popf
mull
fwait
stos
nop
cmc
je
movsb
push
jge
add
xchg
sbb
decb
xchg
shlb
mov
out
xor
cmp
outsl
sbb
xchg
cmp
mov
jge
pushf
stos
out
into
add
and
push
cmp
adc
mov
or
xchg
cs
adc
shll
push
push
into
and
hlt
in
mov
ljmp
gs
fsts
mov
test
jl,pn
out
and
adc
xlat
jle
cmp
and
cmp
idiv
dec
shlb
push
dec
mull
fwait
mov
push
popa
mov
mov
sub
cs
out
in
inc
enter
leave
rcr
and
ljmp
adc
outsl
add
or
loope
shlb
enter
xorb
mov
inc
loope
and
out
add
sub
sub
cmpsb
stc
adc
popl
lret
push
les
pop
sti
ss
mov
xchg
hlt
xchg
jle
pushf
adc
mov
jns
js
jb
repnz
out
fcmove
hlt
mov
lret
add
adc
mov
and
sbb
mov
test
xchg
push
lock
ret
mov
and
push
or
and
xadd
std
xlat
inc
push
in
mov
mov
insb
push
inc
movsl
push
jnp
dec
bound
jns
mov
dec
xlat
mov
push
push
jge
adc
cmp
mov
inc
pop
add
leave
out
orl
loop
shrb
in
imul
sahf
push
mov
xor
cmp
push
jle
ljmp
mov
push
je
lods
aad
dec
push
mov
iret
sahf
dec
mov
sub
dec
mov
jmp
adcl
or
jmp
jmp
pushf
inc
loope
mov
xlat
das
jp
cmp
push
iret
insl
and
shrb
dec
dec
pop
insl
xor
out
loop
repz
add
imul
mov
jle
dec
pop
stos
xor
and
cs
scas
xchg
int
gs
call
loope
loope
xchg
jmp
mov
lea
lcall
add
jmp
add
push
sbb
ja
push
test
jle
sub
sbb
adc
sbb
bound
mov
ja
add
and
and
push
adcb
rclb
enter
cmp
dec
mov
jmp
inc
cmpsb
pusha
pop
mov
xlat
fsubl
shlb
and
xchg
ds
imul
dec
in
jns
mov
mov
dec
dec
jg
aad
sbb
push
jmp
or
mov
or
aas
xchg
xor
loop
cmc
jle
lods
test
and
or
xchg
or
ret
shl
fnsave
add
sahf
cmp
sub
cmpsb
jp
push
cli
in
mov
sbb
dec
out
xchg
or
fcompp
mov
ja
sub
mov
inc
arpl
mov
pop
or
lods
loop
movsl
cmpb
and
cmp
and
mov
andl
ret
xchg
je
sub
adc
dec
aas
jb
nop
jecxz
fsts
dec
fsubr
fstpl
mov
lret
int3
aam
cmp
ds
jg
ljmp
mov
in
mov
sub
jb
and
push
mov
les
jnp
sub
aad
xor
inc
nop
fwait
sbb
lods
mov
push
scas
test
adc
push
arpl
cmpsl
pusha
mov
pop
cmpsl
push
sub
mov
dec
stos
sarb
aam
arpl
outsb
dec
xor
push
aad
insl
lods
mov
pop
adc
imul
sbb
dec
je
lcall
stos
repz
pop
push
jg
push
mov
pop
push
and
xchg
inc
outsl
cmp
mov
xchg
sbb
sub
lock
int3
mov
push
mov
mov
sahf
lock
dec
cmc
xchg
fidivl
cltd
xchg
into
cld
loopne
add
sub
rcll
lcall
mov
scas
mov
xchg
sbb
mov
mov
fdivr
mov
test
out
xchg
ja
pop
aas
ljmp
in
sti
popa
add
mov
mov
out
or
into
and
das
insb
pusha
adc
mov
int3
cmp
push
and
outsb
mov
adc
dec
lds
sbb
and
add
adc
ja
fs
xor
dec
mov
frstor
xor
adc
xor
or
test
push
sub
pop
flds
rolb
xchg
dec
mov
loope
in
in
gs
cs
adc
pop
mov
test
xor
fwait
add
push
imul
push
add
cmp
adc
and
dec
subl
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
into
dec
jle
and
sbb
xchg
loopne
stos
mov
hlt
lahf
js
cmp
sahf
cmp
sbb
jmp
adc
adc
pop
push
sbb
sub
into
fildl
mov
test
fistps
cli
inc
mov
and
movsl
sysenter
ret
in
stos
clc
pop
jecxz
outsb
cmp
retw
fildl
rcl
push
sbb
mov
sub
in
xlat
data16
xor
mov
fwait
jno
dec
adc
jb
out
int3
std
rclb
xchg
fwait
xchg
push
mov
cld
add
mov
sbb
or
test
push
dec
std
adc
js
adc
and
push
adc
xor
push
mov
out
sbb
xchg
ret
jecxz
mov
jp
push
jg
mov
cmp
jle
in
and
or
mov
pop
je
ja
sub
test
sub
dec
mov
daa
jmp
int3
call
and
subl
ficoml
icebp
jb
mov
out
pop
lods
and
cmpsl
add
cwtl
jns
mov
test
popf
imul
inc
fiaddl
hlt
jecxz
shl
in
mov
test
mov
push
dec
inc
out
mov
push
shrb
ja
jmp
mov
sub
jmp
and
int3
int3
push
mov
xchg
inc
push
fildll
cmpsb
sub
xchg
jecxz
add
inc
pop
fcomps
xor
lahf
sti
sbb
cmp
jp
mov
mul
test
push
popa
out
fcomi
arpl
in
pop
shrb
bound
xor
cs
push
push
pop
test
into
cwtl
sti
ret
out
ss
fwait
mov
sub
push
add
ja
in
int3
fstpt
inc
subl
xor
test
xchg
jo
inc
imul
jg
sbb
mov
pop
adc
push
or
mov
jg
mov
xchg
ja
jbe
shll
push
subb
or
aas
fildll
push
out
jmp
mov
int
add
test
pop
dec
lods
or
jb
sub
mov
std
outsb
pop
js
int
xchg
popl
jp
outsl
xor
nop
cltd
aas
mov
subl
jp
aas
xchg
mov
fmull
xchg
sub
imul
insl
xor
xor
je
xor
xor
inc
rorl
movsb
xor
push
sbb
loopne
jo
ds
inc
test
pushf
jo
icebp
lock
push
adc
xor
mov
divl
lcall
mov
out
rolb
mov
test
or
iret
hlt
adc
pop
cmpsl
rclb
and
push
aam
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
pop
add
mov
sbb
add
sbb
cmpsb
inc
mov
mov
jbe
cmp
dec
fs
shl
in
loop
push
ja
xchg
loope
mov
mov
aaa
leave
push
or
cmp
repz
mov
xchg
sub
sbb
sti
sub
and
in
cmp
inc
jecxz
sbb
insb
xchg
sub
mov
cs
iret
push
add
and
in
lahf
dec
fistps
add
add
leave
mov
adc
sahf
cmpsb
xchg
cmp
cltd
and
and
inc
lret
rcrb
nop
mov
shlb
int3
mov
xchg
shlb
and
sub
fsubrs
jmp
inc
inc
xor
in
daa
xchg
lods
outsl
aam
nop
dec
add
in
or
das
pop
aas
dec
scas
arpl
add
scas
ret
mov
adc
xor
pop
test
fmull
push
adc
test
mov
mov
js
mov
jge,pt
jne
test
out
ss
xchg
jne
loope
sub
dec
mov
test
sti
or
sub
in
aam
lcall
sub
ret
dec
cmp
jbe
into
inc
xchg
sahf
clc
sbb
adc
or
sti
sbb
push
je
ljmp
add
gs
mov
roll
inc
adc
and
vmread
mov
aaa
aam
rclb
xor
ss
xchg
cmc
pop
int3
sbb
out
xlat
ljmp
sti
jecxz
shl
aad
or
popa
lods
rclb
test
xor
fwait
js
add
dec
addr16
add
jo
mov
frstor
ret
dec
movl
mov
outsb
inc
negb
sahf
or
cli
std
jp
add
stc
dec
call
out
in
dec
sbb
mov
pusha
rcll
aam
xchg
shll
divl
loopne
inc
bound
sbb
mov
add
inc
sbb
mov
cs
inc
jg
cmp
and
adc
pop
jge
icebp
test
ret
sar
mov
push
in
fcmovnbe
push
sub
inc
daa
ja
mov
inc
cltd
sub
or
inc
cltd
or
cwtl
fucomi
stos
push
out
addl
and
and
push
int3
repz
xor
dec
bound
bound
add
notl
push
or
jns
or
mov
fdivl
mov
cld
aas
loopne
add
jne
cli
xor
push
dec
sbb
xor
mov
in
xlat
mov
xor
insl
bound
shl
pop
cs
bound
mov
lods
test
out
jae
add
or
sarb
cmp
hlt
cli
jo
mov
lods
rolb
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
and
dec
fisubs
cld
nop
mov
xlat
icebp
dec
inc
sbb
aad
jmp
mov
rorl
or
addr16
mov
out
xor
fdivl
shll
sahf
mov
fdivl
fwait
pop
inc
mov
inc
push
in
jns
aad
in
je
mov
in
push
mov
fwait
bound
mov
sbb
lret
rcrb
lea
mov
jle
or
mov
push
mov
sub
jle
imul
mov
push
xor
loope
arpl
insl
dec
add
sub
push
push
xchg
push
push
sbb
push
ljmp
pop
sub
jp
loop
out
push
enter
mov
fadds
mov
push
or
shl
stos
ja
pop
mov
adc
inc
lcall
aas
es
inc
movlps
xchg
mov
out
rcl
xorl
std
and
or
sub
xor
xchg
adc
xor
cmpsb
fiadds
xor
dec
test
clc
test
pop
xchg
push
xchg
pop
rcl
push
pop
sub
mov
inc
pop
push
mov
mov
nop
xchg
xlat
mov
in
fisttpll
pop
inc
inc
enter
push
push
cmpl
fimuls
scas
xchg
stos
pop
movsl
mov
insb
andl
lcall
push
sbb
xchg
test
xlat
push
adc
pushf
jl
std
outsl
adc
sub
fmul
call
jmp
sarb
dec
dec
jle
sbb
xor
fimuls
rolb
outsl
mov
cmpsl
aad
movsl
dec
sub
xchg
lret
inc
xor
fld
xchg
and
or
bound
into
ret
inc
cmp
scas
sub
enter
mov
pminsw
bnd
xor
in
std
xchg
ret
xlat
add
cmp
xchg
das
ficomps
imul
inc
shlb
outsb
daa
and
sub
aam
lcall
push
and
cli
lds
mov
sahf
aad
out
lods
pop
inc
std
add
mov
sbb
adc
cmpsl
mov
test
rol
fisubrs
dec
jne
cmp
enter
and
push
ja
cmp
add
and
outsl
pop
jae
enter
bound
data16
aaa
enter
mov
lret
inc
cli
stos
pop
lcall
xchg
mov
fnstsw
push
sub
push
sahf
cmp
jae
clc
push
add
das
sbb
loop
mov
or
das
fstpt
bound
adc
stos
push
xchg
dec
xchg
in
mov
mov
sub
sar
sub
push
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
popf
movsl
inc
push
adc
sbb
adc
sbb
les
fcoml
call
mov
lret
adc
dec
sbb
out
xchg
aaa
push
loope
std
cmp
stos
inc
scas
cmp
pop
lret
mov
or
or
and
in
fildll
mov
pop
cmp
inc
cmp
xor
out
pop
xor
jne
imul
mov
push
std
rcrb
out
out
sbb
ja
shl
int
dec
xchg
dec
std
inc
sub
out
push
pop
sbb
mov
jns
stos
dec
es
test
in
scas
les
push
pop
aam
inc
test
push
mov
pop
or
pop
adc
jbe
jne
lods
dec
cmc
mov
dec
add
addr16
adc
ljmp
sub
push
stos
fmul
and
mov
mov
pop
pop
mov
pop
sub
ljmp
scas
mov
mov
mov
or
add
inc
stos
mov
jle
movsb
loop
push
in
and
mov
movsl
mov
insb
and
lret
jo
jne
clc
mov
xorb
push
or
pop
mov
jae
mov
addl
dec
jmp
mov
test
mov
inc
repz
out
imul
ss
pop
call
js
arpl
xor
mov
fists
gs
into
shrl
pop
fwait
adcb
sub
inc
dec
push
fwait
xor
rcrl
jle
lods
dec
les
lcall
mov
dec
pop
cwtl
mov
out
in
mov
cmp
jecxz
cs
mov
into
xchg
jg
clc
mov
stos
in
push
adc
rorl
mov
mov
call
push
sbb
dec
adc
xor
in
jb
push
mov
rcrb
popf
call
and
lret
jnp
in
jbe
dec
iret
mov
sahf
nop
out
outsb
lahf
mov
jne
mov
mov
pop
shll
cmc
xchg
and
lret
loope
jbe
dec
mov
pop
mov
leave
sub
call
mov
lcall
xor
push
push
inc
push
dec
xchg
dec
insl
dec
push
jge
mov
pop
sbb
push
or
push
inc
movsl
and
mov
mov
addr16
shll
and
push
imul
aad
xchg
rorl
or
out
movsl
andb
push
lods
repnz
mov
xchg
dec
cmp
lret
hlt
adc
mov
orb
pop
xor
jae
xor
cli
rcl
push
pop
pusha
cmp
mov
push
jae
add
mov
cmp
mov
leave
fsubs
inc
movsl
adc
cld
es
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
jae
mov
test
sbb
mov
lds
add
lret
lret
add
int3
lods
mov
pop
cmpsl
es
data16
and
push
push
pop
xchg
push
jge
mov
test
sub
sub
jae
lock
movsl
adc
lret
adc
mov
cmpsl
jp
shl
jmp
iret
mov
mov
loope
lds
and
leave
shl
lock
mov
push
test
ja
cmpsl
sub
adc
sbb
or
cs
jne
mov
dec
push
rol
jno
idivb
push
jnp
mov
popf
fsubl
mov
test
sub
mov
jl
adc
push
popa
cmp
cli
adc
add
xchg
sub
sbb
rclb
sbb
dec
mov
cli
ds
adc
jne
add
mov
test
fisttps
out
inc
mov
clc
movsb
addr16
iret
test
test
movsl
inc
stos
xchg
add
outsl
dec
and
call
test
cmp
insl
pop
mov
dec
addr16
in
clc
sub
inc
sti
xor
sub
dec
lock
adc
cmp
adc
or
jo
addr16
out
mov
push
sbb
cmpsl
pop
into
rcl
xchg
js
fdivr
pop
or
shll
inc
push
pusha
aad
lea
enter
mov
pop
add
fwait
mov
ret
adc
dec
dec
cmp
dec
cs
dec
jae
shlb
push
pop
fsubrl
lahf
lods
cwtl
and
and
jae
call
fwait
pop
push
mov
sbb
sub
aad
mov
and
sbb
ss
repz
mov
xchg
lock
xor
sbb
mull
stc
sub
jbe
stos
push
in
push
fs
mov
push
push
mov
mov
or
add
push
pop
push
add
inc
dec
add
cld
push
add
mov
xor
jnp
xchg
lret
mov
dec
test
out
daa
pop
fcmovb
stos
outsl
xor
mov
jg
repnz
and
aas
push
or
inc
fcomps
fists
xchg
mov
mov
fsubl
enter
sub
pop
in
jmp
add
sub
xchg
imul
jnp
cmp
jno
gs
clc
sub
addr16
push
pop
xchg
jle
cmpsb
mov
cmp
pop
cmp
or
arpl
mov
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
cs
rolb
sbb
test
sbb
call
repz
xor
mov
jle
imull
cmp
sbb
loopne
cmpsl
xor
pop
jp
xchg
xorb
pop
cmpb
dec
lret
cmc
pop
popa
lea
pop
push
sbb
into
loop
fistpl
popf
pop
add
cmpsl
xor
mov
aam
in
jmp
jns
pop
mov
bound
data16
call
push
dec
pop
inc
and
jmp
pop
fld
mov
cmc
ffree
push
xchg
repz
les
divl
sub
pop
dec
inc
movsl
mov
jg
jns
cwtl
gs
push
or
pushl
push
orl
fcoml
repz
pop
adc
and
jae
and
movsl
sub
movsb
aaa
xor
testb
mov
add
jmp
jmp
lcall
push
adc
mov
loope
iret
shll
leave
push
test
pop
mov
and
mov
cmp
iret
cmpsl
pop
idiv
ljmp
pop
push
push
pop
cld
sub
inc
adc
std
fildll
lds
pop
xchg
out
or
das
push
imul
jg
addl
movsb
outsb
outsl
pop
cmp
dec
callw
lret
cld
cmpb
adc
lds
push
sarl
pop
mov
popa
or
stos
xchg
mov
inc
ja
sub
clc
out
aaa
dec
dec
mov
xchg
inc
dec
lds
popf
xor
jnp
mov
scas
adc
fldt
sub
insl
pop
cmpsb
dec
pushf
in
aas
idivb
imull
call
bound
test
xchg
cld
sbb
in
int
ficomps
inc
lods
xor
pop
pusha
subb
pushf
and
inc
ficomps
mov
stc
inc
mov
sub
inc
lods
cmp
test
sarl
sbb
dec
dec
mov
xor
dec
or
dec
pop
push
setle
daa
repz
setl
jmp
add
pop
lods
mov
and
popf
mov
hlt
ss
ret
test
lea
fidivs
jno
ret
xchg
cmpsb
cld
cmpsb
pop
imul
in
mov
lods
cmp
stos
jl
push
mov
sbb
sub
pop
sub
fbld
mov
out
repz
xor
and
jb
push
xor
std
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
rorb
sbb
not
fsubp
ja
outsl
repz
push
jns
es
cmp
fwait
or
scas
mov
int3
jp
sbb
push
inc
jp
shlb
push
mov
inc
mov
out
aaa
cmpb
add
fstp
clc
or
aad
mov
nop
gs
ljmp
mov
pop
push
mov
out
push
jbe
xchg
mov
dec
in
jge
mov
jecxz
cmp
pop
mov
xchg
jle
loopne
cs
shlb
gs
xor
dec
push
je
jl
roll
out
enter
sbb
push
ja
jo
sbb
jle
xor
mov
pop
std
mov
lcall
push
es
mov
lock
cmp
jb
pop
ret
jg
and
cmp
pop
ja
jmp
cmp
push
jl
add
inc
xchg
cli
fidivrl
gs
cmp
fisttpl
sub
mov
push
or
test
clc
fwait
int3
jns
out
xor
jno
jno
insb
mov
mov
cmp
mov
fwait
jns
xor
ds
inc
adc
das
mov
lock
lret
aas
in
std
fimuls
out
adc
xor
sbb
fdivs
jp
or
fnsave
or
ja
movsb
inc
je
jge
mov
inc
addr16
inc
xor
mov
xchg
nop
sbb
sbb
lock
inc
sub
adc
faddl
jns
sahf
add
stos
lock
outsb
sub
gs
dec
ficoms
xor
inc
inc
or
dec
xor
inc
stc
xchg
rcrl
jmp
imul
pop
sbb
push
popa
xor
mov
pop
adc
pusha
mov
jp
lahf
push
mov
jecxz
lods
mov
pop
jge
jns
pop
test
push
test
sub
dec
rclb
cmp
jp
sub
xchg
mov
popa
mov
subb
test
movhps
fstpt
leave
jns
and
cmp
shll
test
dec
je
mov
adc
inc
jg
lret
adc
mov
lea
imul
mov
pop
mov
test
stos
movsl
jb
xchg
scas
js
lcall
jb
movsb
imul
cmp
enter
jle
jge
hlt
dec
aas
gs
jg
or
daa
jae
loopne
jl
dec
icebp
add
sti
push
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
ja
jl
sti
sbb
test
sbb
das
xchg
loopne
xchg
stc
xor
fucomi
or
mov
pop
subb
or
mov
outsb
dec
lods
or
add
lds
sbb
cmc
dec
data16
mov
and
push
stc
rolb
add
lods
cmp
ss
arpl
pop
imul
sbbb
xchg
imul
mov
punpckhbw
jb
shll
in
adc
outsb
clc
movsb
in
and
xor
adc
cmp
sbb
xor
push
sbb
sbb
shrl
fbstp
gs
hlt
scas
dec
repnz
fstps
xchg
pop
pop
pushf
mov
roll
int
push
ret
push
mov
or
push
inc
mov
adc
or
hlt
decb
cmp
test
cmp
pop
mov
cmpsb
jo
mov
aas
jmp
sbb
push
sahf
lahf
push
push
xor
fcomi
cmp
mov
sbb
test
test
sbb
shl
pop
iret
in
xchg
push
cmpsb
std
and
or
xor
push
clc
imul
or
cmp
cs
outsl
sub
adc
lret
dec
inc
mov
sarb
push
pop
ret
cmp
inc
in
outsl
jg
scas
pop
cli
xor
push
orb
push
dec
xchg
addl
or
sbbb
je
fadds
jle
jns
or
in
adc
sub
sbb
in
mov
pop
push
xor
nop
inc
data16
or
push
inc
dec
jns
out
rorb
push
or
push
popa
pusha
enter
xchg
pop
enter
cmpsl
cmp
add
clc
mov
mov
or
sahf
enter
popf
ds
out
jge
pushf
popa
inc
mov
xlat
enter
test
sbb
adc
cltd
cmpsl
test
fldt
mov
add
mov
or
pusha
sbb
cltd
lahf
push
push
adc
xor
push
dec
pop
test
mov
jo
les
inc
add
add
xor
cmc
pushf
cld
mov
xor
xor
fsubrl
mov
push
lds
hlt
cwtl
or
outsl
mov
repnz
pop
xchg
xchg
dec
mov
sub
ficoms
fimuls
dec
sub
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
nop
bound
xor
sbb
ss
mov
mov
test
rol
hlt
jle
add
mov
sahf
js
add
mov
nop
cld
cmp
pop
jecxz
pusha
shrl
pop
add
lods
loope
sbb
out
cltd
cmpsb
dec
mov
cmpsl
negb
mov
cli
push
stos
xor
and
lret
mov
sbb
andb
xchg
add
subps
faddp
push
popa
cmp
sub
pushf
add
jno
sub
mov
jl
std
icebp
jle
popa
pop
mov
mov
dec
popa
xor
cs
icebp
cmovb
adc
rcrl
xchg
fs
insl
inc
scas
inc
mov
out
mov
negb
adc
addb
add
cmc
imul
pop
sbbb
inc
mov
popa
and
aaa
pop
cmp
std
jne
mov
fs
and
xor
inc
rorl
jp
int
stos
mov
and
adc
call
inc
imul
test
loopne
xor
mov
out
popa
cli
clc
jb
mov
lcall
push
out
xor
push
ds
jns
cmp
loop
add
xor
lcall
xor
cmp
xchg
das
add
pop
mov
push
sahf
out
adc
push
pop
pop
dec
xchg
addr16
lcall
fldl
adc
das
loopne
cmp
and
shl
sbb
pop
sbb
adc
xor
push
out
sahf
and
cli
add
ret
pop
mov
dec
cld
mov
inc
ja
dec
adc
cmp
push
mov
xchg
add
mov
icebp
out
js
cwtl
jns
fimuls
hlt
mov
jge
jbe
or
icebp
xor
loop
stc
insl
enter
cmpsl
out
mov
fmul
mov
lods
lret
jns
mov
lds
les
cmp
ds
mov
lds
insl
and
xor
es
push
jp
jb
cmp
and
fwait
add
popf
inc
lret
jl
push
jl
inc
mov
std
pushl
sarl
cli
jmp
fsub
jbe
dec
clc
jg
lds
push
call
mov
arpl
cmp
repz
pop
inc
scas
xchg
sub
fisubl
sub
jnp
or
std
sub
mov
rol
inc
call
movl
jmp
aas
mov
mov
dec
mov
add
icebp
sbb
test
sbb
inc
das
leave
sub
repz
xchg
sbb
lods
or
xor
bound
mov
or
cmp
cs
fcomps
nop
arpl
sbb
pushl
push
sub
xor
jb
cs
jae
dec
out
mov
sbb
add
jno
or
fisubl
add
jne
jp
lcall
lcall
xor
mov
aas
or
cli
adc
mov
mul
mov
mov
test
push
xor
inc
push
shll
inc
int3
jnp
sbb
fxch
pop
pop
xchg
movsl
mov
adc
adc
pop
pop
pop
mov
outsb
into
int3
lret
and
xor
aam
cwtl
loope
jbe
xor
jle
std
push
xchg
mov
test
mov
dec
out
es
cmp
fadd
and
lods
xchg
mov
adc
das
mov
add
bound
out
add
ss
jbe
into
lret
test
repnz
cmp
nop
xlat
mov
cmp
mov
out
test
sub
mov
imul
bound
fs
out
out
jecxz
pop
aam
int3
mov
xchg
mov
jnp
aaa
mov
sbb
pop
sbb
bound
pop
pop
cmp
pop
mov
xchg
xlat
cld
inc
leave
xlat
mov
call
and
mov
orl
loopne
fmulp
mov
adc
sub
jb
push
add
es
pop
scas
imul
mov
movsb
fdivrs
test
dec
pop
or
stc
adc
xor
sub
xchg
xchg
andb
aaa
sub
pop
fcomi
sahf
sbb
inc
xor
gs
cmc
fisttpll
icebp
das
add
cmpsl
push
bound
iret
mov
push
std
mov
outsl
aam
ljmp
lcall
movsb
popa
add
mov
mov
int3
jbe
movsb
rep
xor
incl
addl
sbb
dec
fstpl
jl
imul
jne
jno
xor
dec
ljmp
push
sbb
insb
and
xchg
mov
push
add
push
add
adc
into
pop
dec
pop
mov
push
jg
cltd
xchg
nop
mov
xor
frstor
adc
stos
add
sbb
push
mov
arpl
pushf
ja
add
mov
mov
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
add
mov
test
sbb
adc
enter
repz
jmp
cmp
mov
in
stos
push
dec
pop
or
mov
jmp
mov
dec
outsl
adc
imul
clc
clc
outsb
test
add
push
aas
insb
scas
xchg
jmp
push
mov
xchg
filds
into
or
sub
test
jae
and
inc
jge
fldt
and
push
in
cwtl
jle
mov
xchg
leave
fisubs
dec
jae
test
mov
out
icebp
fldenv
ror
stos
loope
mov
mov
push
lods
cmpsb
decb
test
and
add
sbb
add
ret
cld
fs
jnp
jno
je
mov
mov
sub
cmp
data16
add
dec
sbb
shl
pop
daa
repnz
das
dec
sahf
add
inc
je
cltd
adc
push
adc
pop
mov
outsb
addl
sarb
push
iret
sub
ja
cmp
in
cmc
sbb
sub
jmp
test
data16
mov
cmpsl
jne
test
js
stc
add
inc
flds
into
jo
cmpsl
insb
jnp
and
js
movsb
add
pop
xchg
mov
daa
pop
pushf
xchg
pushf
outsb
test
mov
gs
ss
add
aad
dec
ss
dec
and
jp
je
and
mov
mov
notb
pop
jge
cltd
hlt
inc
xchg
mov
repz
inc
cmp
leave
add
push
cmp
sub
mov
inc
ljmp
sub
add
or
jg
in
cmp
jge
xor
test
sbbl
rorb
mov
lret
dec
and
fisubrl
out
out
jo
out
pop
mov
mov
scas
mov
ljmp
mov
xor
fldl
hlt
faddp
rcr
mov
xor
add
aaa
data16
mov
cmp
cmpsb
popa
add
xorl
jb
cli
cld
push
push
test
xor
mov
mov
lds
pop
lds
shll
subb
mov
pop
bound
add
pop
adc
lods
insl
imul
adc
dec
sbb
mov
xlat
test
jmp
cwtl
sbb
nop
cmp
jl
or
in
enter
lcall
add
hlt
and
rolb
add
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
jecxz
mov
out
sbb
ss
das
in
repz
ret
jle
test
and
push
roll
cs
cli
mov
lret
pop
js
xchg
stos
xor
mov
into
add
insl
inc
pop
loopne
lods
xor
js
and
pop
inc
mov
into
push
jge
push
test
call
or
cltd
leave
inc
push
xor
aas
adc
jne
jno
fldl
in
shrl
test
je
jle
pop
lods
in
je
sbb
leave
cmpsl
imul
lret
test
mov
mov
cmpsb
and
rcrb
cmovl
add
hlt
xlat
jne
mov
lods
mov
adc
adc
stos
out
in
dec
call
xor
fidivl
out
inc
or
shl
cmc
and
add
test
pop
daa
lea
lahf
xchg
clc
mov
mov
sbb
and
outsb
shrb
push
repz
xchg
mov
lcall
pusha
dec
fldt
push
lock
push
push
movsl
test
pop
adc
loop
stos
mov
jbe
jmp
xchg
pminsw
push
loopne
sar
and
bsf
ja
push
insl
pusha
sub
outsl
stos
xchg
push
mov
push
enter
test
jl
dec
roll
dec
stos
repnz
cmp
std
jbe
cmp
mov
adc
push
in
shll
notb
pop
mov
inc
cmp
dec
or
jae
bound
mov
mov
std
fs
mov
dec
lret
fwait
repz
mov
pop
mov
pusha
dec
jmp
pop
xchg
mov
bound
fwait
pop
push
icebp
in
addl
aam
adc
in
jp
push
push
push
pop
pop
jmp
cmpsb
mov
mov
push
cs
fildl
add
pusha
nop
push
shl
push
inc
int3
jno
fnstenv
and
xor
jecxz
cmp
dec
sbb
ret
out
mov
incb
mov
cs
scas
jne
push
add
sbb
sarb
jo
fbstp
out
das
pop
loope
inc
mov
cltd
xchg
and
sbb
out
les
add
repz
and
xchg
popa
fistpll
leave
ror
loope
and
repnz
jle
xchg
mov
mov
leave
dec
dec
pop
cmp
dec
lahf
dec
iret
std
mov
repz
jmp
rorl
add
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jl
loopne
sbb
push
xchg
ficomps
outsb
repnz
out
mov
jecxz
outsl
stos
inc
xchg
jbe
loope
sub
xor
decb
xchg
stc
popa
sbb
test
adc
fmul
dec
add
and
inc
loopne
int
repz
xchg
cmc
lods
insl
xor
icebp
in
ss
lock
adc
insl
call
mov
dec
ja
fs
in
jbe
push
inc
loope
test
int
js
and
mov
sub
rorb
imul
and
fdivrs
mov
push
mov
pusha
xor
in
xchg
and
pop
cld
xchg
mov
push
pop
mov
lahf
imul
test
xor
in
sahf
mov
push
jmp
mov
mov
ss
fbld
in
aaa
rcrb
shll
adc
mov
fwait
pop
sbb
leave
scas
stc
push
jmp
loopne
mov
or
xor
sar
cmpsl
out
jp
shll
repnz
scas
sub
mov
jge
outsb
loop
lcall
repz
jns
adc
push
xor
loopne
lds
xor
and
lods
xlat
loope
std
flds
ret
cmp
mov
outsb
test
aas
gs
cmc
cmp
cmc
dec
test
sbb
pop
popf
fistl
pop
adc
shr
cmp
icebp
nop
and
fistpll
or
inc
pop
adc
mov
push
jbe
mov
lret
adc
cmpsb
mov
les
in
lcall
add
push
xor
push
daa
arpl
sti
mov
loop
push
jmp
cld
cmp
js
cpuid
adc
inc
xor
lea
and
mov
adc
mov
mov
mov
insl
jg
xchg
out
inc
popf
fisttps
mov
out
shl
scas
inc
sbb
cmpsl
or
inc
out
fmull
add
cmp
mov
fdiv
pop
xchg
daa
aam
test
sbb
pop
dec
addl
and
pop
adc
mov
imul
lds
les
mov
xor
mov
int3
sub
sbb
ja
jnp
xor
xchg
mov
je
push
mov
and
addr16
in
int
imul
iret
das
outsl
cmp
jne
push
adc
shlb
or
push
mov
cltd
lds
lret
cmpsb
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
in
jle
ficompl
sbb
adc
sbb
dec
inc
mov
jne
ficomps
mov
or
cmp
mov
push
cmpsl
mov
ficoms
mov
mov
aas
leave
cmpsb
or
jno
sbb
add
cmpsl
cli
mov
nop
mov
pop
push
or
jge
clc
shll
scas
sub
arpl
jae
and
loop
add
xor
popf
sti
pop
mov
inc
dec
cmc
xchg
loope
inc
insb
mov
test
test
fcmovnbe
inc
jle
mov
pop
sahf
mov
cmp
jnp
cs
add
in
cwtl
mov
sub
arpl
int
out
mov
clc
adc
ret
das
adc
fcomps
pop
outsb
in
sbb
jo
in
mov
icebp
jne
loop
popa
xchg
pop
clc
dec
ds
pop
lods
stos
fcompl
mov
xchg
pop
cmp
out
mov
jnp
imul
arpl
xlat
push
ljmp
sbb
out
push
sbb
fisubs
dec
or
jl
mov
stc
mov
jge
cmp
scas
pop
rcr
es
push
negl
fcoml
cmpsl
or
inc
push
mov
fwait
push
sub
orb
out
decl
cltd
das
inc
xchg
sahf
and
flds
xchg
pop
shr
lahf
cmp
mov
enter
xchg
clc
sub
adc
xchg
mov
into
dec
dec
pop
out
fwait
mov
or
cwtl
or
pop
jnp
inc
negl
imul
push
sbb
fisttps
popa
in
loope
sbb
loope
hlt
imul
mov
je
ret
lds
shrb
imul
in
mov
out
popa
jb
dec
mov
add
push
rclb
mov
sarl
pop
sti
xor
das
stc
xchg
not
cmp
xor
daa
fstps
adc
aam
test
add
insb
inc
sti
push
rorl
shlb
sbb
cs
push
dec
mov
add
cmp
fdivl
stos
xor
cmp
jg
push
xchg
or
testl
xor
gs
sahf
in
shll
lock
scas
repz
in
shlb
cmpsl
shld
enter
pop
mov
in
int
subl
ss
and
inc
and
push
out
test
mov
rcr
mov
mov
fimuls
push
push
mov
mov
inc
xchg
pop
cvtpi2ps
shrl
dec
mov
xchg
mov
fldl
inc
gs
mov
jmp
ljmp
fcoml
movsl
outsl
fwait
cmp
mov
jno
ss
fs
xor
das
testl
mov
insl
shrl
mov
call
mov
adc
mov
fmull
dec
imul
dec
pop
dec
leave
cmp
push
pop
flds
ljmp
rcrl
or
sub
imull
pop
push
mov
mov
cmp
rclb
sub
sub
or
xchg
mov
aad
icebp
roll
popa
add
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
jmp
push
adc
sbb
dec
fildll
pop
cmp
outsl
pop
jb
push
mov
scas
enter
xor
push
scas
std
cld
jmp
lods
xchg
push
in
scas
xchg
clc
sub
add
andps
in
push
rcr
test
mov
pop
pop
popf
cwtl
fwait
and
outsl
repz
push
inc
sbb
jno
mov
adc
pop
jge
test
es
adc
push
mov
or
hlt
xor
icebp
xor
lret
enter
pop
jp
jnp
lea
mov
add
imul
cmp
ja
mov
xchg
or
addr16
xchg
add
mov
mov
jmp
fs
mov
sarl
ss
arpl
lahf
aad
loope
popf
pop
inc
sahf
xor
jmp
shll
xor
cmp
test
mov
adc
add
xlat
loope
lret
insb
xchg
scas
ret
mov
sahf
mov
mov
rcrl
adc
movl
mov
or
cmp
xchg
xchg
out
enter
xchg
sub
and
daa
addr16
scas
cmc
scas
loope
jge
and
cmp
pop
sbb
xchg
div
fidivrs
repnz
insb
push
cmp
sbb
sub
xor
push
not
xchg
jl
and
sbb
mov
les
fistpll
frstor
pop
enter
cld
hlt
aam
jno
xchg
add
sub
popa
or
and
pushf
dec
repnz
out
mov
push
pusha
adc
fwait
stc
or
mov
xor
cli
adc
sub
sbb
icebp
aam
mov
mul
add
inc
mov
leave
jl
sub
push
int3
push
imul
mov
popa
test
fwait
xor
push
pop
sub
lahf
jne
xor
xor
dec
rol
dec
outsl
cmc
idivb
movsb
je
mov
mov
test
imull
iret
sbb
pop
add
ret
lods
dec
jo
in
fistps
jb
xchg
push
push
pop
xor
xor
inc
jl
pop
mov
jns
mov
sti
fcmovnu
xchg
mov
inc
or
push
xor
xchg
sub
mov
cs
rcrb
cmp
inc
pop
pop
jno
pop
fdivrs
mov
push
cmp
adc
gs
pushf
and
adc
xchg
xor
mov
jge
mov
jae
jp
adc
xor
pop
lret
xor
lods
cmpl
lret
dec
jge
cmp
mov
mov
hlt
pop
xor
or
aas
adcb
xchg
orb
cmc
out
mov
out
dec
push
lock
enter
sub
mov
loop
sub
adc
inc
and
push
hlt
push
decb
adc
mov
pop
xchg
orb
lcall
mov
setge
cmp
mov
into
sub
sub
inc
push
sub
inc
ret
push
dec
mov
lret
mov
in
or
pop
stc
imul
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
sahf
pushf
mov
insb
shr
mov
mov
push
or
test
add
lahf
stos
xor
mov
insb
andb
scas
or
dec
iret
lret
lock
cmpxchg
dec
push
out
mov
fs
int
push
push
cmpsl
test
cmp
rcll
sub
repz
ds
test
js
mov
popf
ja
push
pop
lret
and
adc
cmc
xchg
call
out
sbb
add
mov
cmp
mov
bnd
xchg
and
jg
rcr
inc
ds
dec
lock
mov
movsb
add
repz
xor
push
pop
int
cltd
pop
mov
sbb
outsb
pop
subb
dec
and
cmp
dec
jbe
mov
xor
inc
pop
jb
lods
cmp
pop
or
jae
push
pop
sarb
mov
cmp
adc
loop
mov
push
rorl
out
fidivs
test
pop
push
adc
insl
out
cwtl
or
inc
psubw
dec
std
rorb
scas
push
pop
jle
jno
inc
adc
gs
dec
sub
scas
cmpb
add
mov
fwait
ds
lds
subb
ds
pop
pop
mov
dec
movsl
cld
dec
in
jp
in
inc
fdivrs
fadd
pusha
or
or
xor
dec
insl
jg
pop
lcall
aaa
lods
jb
nop
nop
nop
cltd
lods
ret
cli
jmp
jae
adc
das
mov
stos
push
iret
cs
fwait
test
xor
pop
inc
rol
pop
add
sbb
das
mov
adc
aad
fs
and
ss
dec
out
repz
mov
std
ja
pushf
aas
jb
ja
popa
adc
jge
xor
dec
test
sub
in
icebp
outsb
xchg
out
lods
pop
repnz
and
rcrb
xchg
xchg
pop
sbbl
movsb
repz
push
mov
stc
pop
fildll
and
test
add
inc
popl
pop
shl
repz
mov
insl
inc
nop
cmpsl
push
arpl
mov
insl
cmp
mov
jecxz
jg
outsl
push
lods
and
mov
push
scas
dec
jmp
cmp
mov
aad
push
rcrb
cmc
mov
in
jae
mov
pop
cltd
or
inc
mov
jne
xor
out
mov
or
stc
jae
mov
fsubl
xchg
fstpl
mov
and
sbb
loop
scas
lods
lcall
stos
push
imul
scas
dec
jge
pop
push
mov
sub
fadds
jle
in
ljmp
ljmp
sub
loop
repz
cli
test
cs
mov
push
in
dec
shr
stos
scas
xchg
jle
outsb
jo
inc
xchg
pop
fs
sahf
pop
jle
mov
cmp
leave
imulw
movsl
divl
in
in
shl
pop
fld
out
cs
hlt
xchg
das
in
icebp
aam
mov
es
lahf
jae
mov
push
pushf
sub
inc
js
pushf
xchg
xor
cmpsl
sub
and
jp
sti
inc
mov
add
ds
lea
sub
in
fldenv
je
clc
sbb
mov
inc
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
jmp
mov
sbb
adc
sbb
and
or
push
fbld
jo
xchg
push
add
xor
popa
mov
adc
dec
mov
add
scas
call
sub
jbe
or
xchg
scas
mov
xor
clc
xchg
push
outsl
xchg
filds
push
xchg
dec
paddd
cmp
xchg
lahf
add
repnz
mov
ror
sub
outsb
ljmp
and
sub
jbe
mov
mov
std
dec
mov
in
mov
jl
mov
in
imul
sbb
push
cli
adc
xchg
inc
dec
adc
dec
push
push
jl
xor
push
mov
or
pusha
xchg
or
xchg
jno
cltd
fmulp
push
insb
insb
ljmp
mov
gs
out
sarb
cmc
pop
xor
mov
dec
out
lods
js
repnz
add
fldcw
xor
clc
jno
or
xlat
incb
shll
std
sbb
pop
ret
cld
and
bound
scas
cmp
push
fidivrl
test
int
popf
mov
sub
dec
shl
shll
mov
cmpsl
icebp
mov
mov
and
add
call
hlt
daa
ret
shll
andb
adc
sub
mov
sub
jge
clc
popa
int3
loope
cwtl
sub
mov
les
push
jp
faddp
mov
loop
popa
jns
xor
jmp
sbbl
sub
gs
sbbl
mov
lahf
insl
sub
roll
ret
call
test
xor
std
daa
rolb
push
add
pop
and
das
or
test
mov
in
sti
jns
int
lret
push
and
out
cmc
push
jae
xor
testl
and
mov
or
mov
sub
ror
enter
inc
pushl
out
insb
es
fnsave
xchg
cmp
outsl
jne
icebp
xchg
rcrl
popf
mov
lds
iret
out
xor
sub
push
jnp
shrl
cmp
stc
pop
mov
imul
rorb
jo
inc
mov
pop
scas
adc
pop
jl
inc
jmp
out
idivb
aas
pop
aas
dec
movsb
push
add
repnz
dec
stos
sti
pop
outsb
enter
outsb
or
bound
cmp
push
shl
outsb
imul
in
in
test
pop
pop
out
mov
xchg
adc
adc
ficoml
sbb
ror
bound
lds
lods
in
iret
jmp
mov
popf
lret
test
call
lods
push
icebp
sub
xor
insb
inc
push
sub
scas
fmull
sahf
fwait
gs
inc
jmp
das
push
stos
ja
xchg
insb
add
dec
jbe
adc
adc
xor
pop
inc
test
negl
add
mov
jne
cmc
mov
jle
leave
push
adc
sahf
adc
pop
fstpt
testl
ja,pn
lahf
xchg
addr16
mov
out
cli
hlt
sub
imul
repz
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
pop
clc
push
mov
sbb
pop
loope
sub
push
in
pop
inc
adc
adc
sub
fisubl
or
cmp
stc
xlat
cwtl
incb
pop
xlat
stc
aad
or
in
pop
pop
push
adc
push
pop
xor
test
add
and
lock
ffree
and
push
sahf
or
repnz
cmp
sbb
dec
mov
ja
cwtl
sub
or
push
rorb
inc
inc
sbb
test
mov
fldpi
add
sub
jae
test
push
inc
loop
push
ret
iret
aaa
les
lahf
mov
cmp
fwait
xor
fsubr
xchg
inc
xchg
adc
jne
idiv
mov
mov
sahf
sub
popl
jecxz
inc
pop
int3
push
addr16
mov
adc
movsl
mov
dec
je
out
aad
and
mov
xchg
jb
push
sbb
push
add
pop
mov
loopne
add
mov
test
cmp
sub
subb
fsubr
cltd
in
jne
adc
jo
cmp
jne
sbb
call
add
mov
push
je
lret
mov
sub
xor
xchg
outsb
mov
js
and
xor
jno
mov
mov
pop
in
stos
push
out
pop
je
sbb
cmp
fistpl
popf
sub
jae
pop
cmc
iret
jnp
fs
test
movsl
cmpsb
lds
inc
fbstp
sbb
mov
mov
out
cmpb
mov
fnsave
dec
mov
push
dec
mov
lcall
shrb
cwtl
pop
mulb
repz
mov
jns
push
pop
mov
enter
add
pop
and
pusha
std
std
or
mov
or
and
xchg
testl
outsl
cmpsb
xor
movsb
insb
mov
cmp
mov
push
decb
insl
push
out
js
pop
add
rcl
shr
std
lret
icebp
ja
rcrl
in
xchg
xchg
leave
ss
inc
jmp
fwait
mov
dec
xchg
mov
stos
fiaddl
or
push
mov
jge
or
decl
nop
inc
cmpsb
cmp
cmpsl
stos
xor
lock
sbb
test
push
sbb
out
shrl
push
jns
xor
mov
sub
scas
inc
or
jbe
xlat
adc
idivl
sbb
jne
stc
or
repnz
arpl
incb
lods
pop
adc
cmpl
clc
mov
mov
sbb
bound
fs
out
fwait
mov
inc
dec
jecxz
inc
loope
fld
arpl
hlt
sbb
out
add
lahf
sar
cmpsb
push
jp
mov
push
popa
lret
mov
sbb
fadds
xor
jae
xor
mov
push
and
push
xchg
add
sub
pop
fdivp
mov
out
xor
mov
dec
xor
push
or
ljmp
cmp
jle
dec
negb
stc
ja
arpl
inc
mov
xchg
pop
scas
stos
sub
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
sub
mov
xor
sbb
mov
pop
test
movsb
cmp
nop
push
mov
mov
test
popf
out
xor
sub
scas
sub
push
sub
add
test
cmp
xor
or
daa
lahf
mov
and
mov
call
or
in
jbe
scas
shr
and
cld
loopne
push
sub
negl
dec
jmp
cmpsl
jle
and
pusha
out
and
cmp
sbb
int
movsb
pop
int
cmp
es
jge
sbb
cli
jmp
mov
cltd
fsubl
shll
inc
sbb
pop
jns
loope
and
push
insl
scas
dec
cmpb
repnz
dec
outsl
add
jne
add
dec
sbb
into
gs
adc
cmp
rcll
and
and
sbb
cmp
push
stos
push
adc
and
dec
shrb
xchg
lea
jmp
sub
mov
pop
test
dec
loopne
push
into
inc
jl
adc
icebp
les
xor
int
sub
sbb
jmp
jb
loopne
shl
sbb
ficoml
jl,pn
push
pop
into
mov
cmp
xorl
cwtl
hlt
push
dec
cmp
jmp
loopne
lahf
or
subl
mov
jle
popf
and
push
adc
push
test
push
mov
or
cli
lcall
sub
xchg
mov
mov
jle
sbbl
dec
dec
and
mov
lcall
clc
out
or
and
sbb
xchg
mov
mov
cmp
call
push
mov
push
sub
mov
mov
or
in
jbe
mov
mov
ja
mov
inc
bound
call
stc
xor
mov
xchg
adc
push
mov
leave
mov
cmpsb
push
add
jle
insb
mov
in
mull
add
sti
shlb
xchg
jns
imul
mov
outsb
sub
adc
mov
mov
push
lods
rorl
push
ficoms
sub
lret
push
cmc
movsl
sbb
pop
adc
jg
mov
in
ret
dec
push
hlt
jl
stos
outsl
mov
adc
insl
mov
dec
lods
add
mov
inc
into
stos
sub
enter
outsb
repz
fstpt
adc
push
pop
stos
jl
in
fnsave
inc
lret
fs
das
pop
stc
stos
inc
popa
push
add
mov
mov
jge
or
adc
roll
fidivs
gs
fdivl
dec
push
lods
dec
lahf
pop
fwait
mov
adc
lock
push
pop
jns
fmuls
fsubr
scas
sbb
sbb
xor
xor
and
gs
les
aas
fs
das
adc
rcrb
je
fldenv
cmp
in
xchg
cmp
test
and
push
int
rcrl
notb
sahf
shlb
cwtl
and
into
loope,pn
sub
mov
inc
dec
loop
das
pop
jnp
push
push
mov
in
add
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
jnp
jo
mov
sbb
adc
sbb
sub
inc
rclb
outsb
shrl
out
push
rcl
jp
mov
adc
hlt
dec
push
push
sub
ds
mov
xchg
repz
push
xchg
xchg
jb
pop
xchg
sbb
lahf
notb
push
gs
iret
push
mov
dec
lahf
cmp
jl
sub
pop
inc
pop
jle
lods
push
iret
test
psrlw
repz
or
inc
sarl
mov
repz
loop
push
sbb
mov
adc
cmp
cmpsb
rcr
aas
pop
ss
pushf
mov
xchg
cmpsl
and
jecxz
dec
jb
mov
lds
idivl
mov
out
sub
cmp
imul
inc
push
clc
in
clc
imul
mov
or
fstl
mov
aad
sub
es
lods
add
lret
mov
arpl
bound
pusha
inc
push
sub
cmpsb
inc
jmp
mov
shlb
lds
mov
mov
in
nop
xchg
pop
mov
fs
adc
jecxz
xchg
scas
stos
subl
mov
cmpsb
scas
movsl
fwait
inc
add
dec
pusha
inc
sahf
mov
pop
and
push
das
fldenv
add
cmp
cmc
mov
scas
mov
inc
mov
insl
cmp
pop
xchg
jno
call
stos
shlb
ret
mov
insb
xor
into
sbb
mov
je
adc
rcrb
imul
mov
push
cwtl
loope
sub
mov
lret
fcoms
jle
ret
jae
add
out
mov
inc
pop
aad
mov
xor
mov
jl
jecxz
popf
daa
gs
mov
add
scas
insb
inc
dec
xchg
in
repnz
arpl
mov
scas
and
adc
les
pop
test
insl
fnstcw
pop
xchg
lods
ljmp
jae
fcomi
mov
or
ss
jmp
xchg
pop
push
out
sbb
or
xor
scas
mov
in
enter
cmpsb
inc
cmpsl
dec
mov
xor
cmp
mov
nop
in
push
jne
les
out
push
add
adc
sbb
fisubrl
inc
rclb
or
xor
sbb
mov
into
out
dec
cltd
ret
add
inc
insl
lea
jl
outsb
sbb
sarl
in
mov
cs
cmpsl
leave
push
or
dec
fs
into
inc
mov
sbb
addb
arpl
fsubrs
sbb
ja
mov
add
jmp
cmc
push
push
fistpll
jp
inc
call
jns
loope
or
jae
out
xchg
decl
inc
mov
push
fisttpll
xor
inc
jmp
mov
inc
cmp
gs
in
pop
std
in
or
push
ss
lcall
mov
jg
jmp
daa
pop
adc
mov
push
shlb
cmp
je
xchg
cmp
adc
gs
sbb
xchg
push
dec
cld
cmp
mov
outsl
and
sbb
mov
xchg
fs
xor
imul
jmp
lds
nop
xchg
cmpsl
add
in
xor
add
sahf
or
add
pushf
hlt
sub
enter
mov
adc
insl
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
fcomps
stos
stc
stos
sbb
test
loope
daa
lods
add
mov
jb
ret
sbb
cmp
mov
int3
dec
add
mov
sub
jg
test
idivb
xor
sbb
mov
xor
std
dec
xlat
int3
out
mov
mov
rdpmc
mov
fcompl
adc
pop
cltd
xchg
faddp
mov
mov
pop
lock
dec
sbb
jnp
shr
hlt
sarl
sbb
ret
fwait
pop
mov
repz
lods
mov
pusha
push
jmp
sub
pusha
fsubrl
jns
outsl
aad
icebp
jno
mov
ljmp
lock
loope
ficoms
add
negb
ja
fnstenv
ds
push
pop
cmc
stos
testb
jnp
cmpb
stos
ret
cmp
xchg
shrl
pushf
xlat
cmp
sti
cli
adc
ret
shrb
gs
testb
bound
or
adc
inc
mov
mov
jg
mov
mov
cltd
add
xchg
fcomps
jb
mov
jecxz
dec
xor
mov
out
push
out
shll
repz
push
mov
test
sub
ja,pn
cmpsb
mov
addb
xor
in
jnp
cmp
clc
sbb
cmp
mov
in
mov
movsl
xchg
pop
and
jp
mov
or
rorb
push
xor
shrl
es
jbe
adc
sub
nop
ret
add
add
aaa
or
jecxz
test
pop
sahf
mov
popf
fimull
xchg
loopne
loop
cli
test
ljmp
fdivrl
or
mov
or
clc
mov
out
inc
test
dec
adcl
leave
sbb
fsub
mov
into
incb
aad
fwait
clc
dec
mov
push
aas
or
sbb
mov
lcall
loop
in
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
addb
fnstenv
jb
cli
adc
adc
jnp
in
or
into
test
sbb
ficompl
xchg
mov
inc
lods
lahf
mov
outsl
push
stos
popf
lods
iret
test
xchg
lret
dec
int3
into
xchg
mov
jo
pusha
xor
lahf
ret
outsb
hlt
fisubl
jecxz
dec
jo
fucomip
leave
cmc
pop
into
sbb
rcrl
lahf
test
lods
insb
dec
in
sub
cmpb
gs
jbe
cmpsl
movsb
and
add
inc
push
xor
outsl
test
jo
ja
push
popf
and
fistpll
xor
sbb
mov
add
or
add
out
shrb
pop
rolb
dec
lods
dec
push
stos
loopne
out
mov
push
add
insl
xchg
xor
enter
ss
daa
pop
sbb
mov
and
repnz
jbe
shlb
shr
adc
rol
stos
xchg
xchg
or
or
adc
and
jbe
jns
in
popf
mov
xchg
cs
out
jo
dec
rcrl
xchg
in
pop
and
outsl
bswap
cmp
push
fldl
inc
mov
daa
mov
das
int
ss
sti
lods
sahf
sahf
pop
pop
sbb
jns
loopne
cmp
imul
or
dec
push
sub
call
lcall
cmc
xor
test
into
lret
fisubrs
loope
aaa
stos
stc
movsb
les
int3
loop
arpl
add
aaa
add
sub
divl
inc
shr
popf
cs
stos
mov
push
xor
xchg
jbe
insb
popa
jns
mov
sbb
mov
inc
pop
fnsave
adc
ja
shrb
sub
dec
popf
loopne
sti
mov
pop
xorl
push
das
or
xbegin
hlt
fildl
pushf
les
pop
cmp
fcomps
push
loopne
mov
mov
sub
cwtl
inc
and
in
mov
mov
push
jmp
sub
and
jb
push
stos
xchg
sub
mov
test
pop
ja
xchg
jbe
cmpsb
mov
sahf
dec
orl
jns
mov
or
pop
cmpsb
aas
repz
jno
lods
push
push
int3
push
arpl
sub
jle
mov
pop
xor
subb
dec
sub
adc
in
add
stc
test
xlat
jbe
add
fwait
rep
jbe
fwait
lea
ja
mov
int3
or
call
push
dec
push
loope
sub
gs
jp
imul
jg
jg
shll
lcall
jecxz
test
data16
out
lods
xchg
adc
divl
push
jecxz
aam
mov
test
pop
pop
sti
ja
shrl
pop
dec
mov
sar
mov
cmp
insl
fiaddl
xchg
test
negb
fsubrs
push
ja
cmp
imul
stos
pop
fistps
lods
popf
cmp
push
mov
mov
cmpsl
cltd
mov
cli
test
mov
lcall
mov
push
push
pop
xchg
das
mov
mov
push
stc
hlt
jne
inc
sub
dec
fldenv
fisubrl
dec
out
inc
mov
pushf
mov
aad
xchg
inc
sti
pusha
inc
pop
jle
movsb
mov
cmp
dec
mov
add
mov
lds
in
test
imul
xor
and
push
jle
ret
gs
rcl
lods
loope
pop
sub
cmp
out
scas
push
fxch
pop
movsl
scas
ds
int3
imull
in
add
jnp
pop
add
mov
pop
fdivs
adcb
std
xchg
popa
pop
sbb
pop
cltd
jno
pop
orb
mov
lock
repnz
outsl
xchg
push
je
dec
pop
ljmpw
add
mov
imul
or
xchg
add
pop
pop
les
negb
pop
repz
loopne
repnz
mov
nop
push
xchg
dec
inc
fcomip
mov
sbb
dec
dec
lahf
add
orl
pop
push
test
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
stos
cli
mov
test
xchg
movsl
clc
xchg
aaa
sbbl
sub
leave
xchg
mov
imul
push
and
test
popf
pop
mov
mov
into
jae
xor
pop
xor
loopne
arpl
call
pop
jbe
or
inc
fstpt
aad
sbb
mov
xchg
push
ret
push
cmp
imul
cmp
mov
and
imul
sub
fisubl
sub
clc
clc
mov
call
data16
ja
outsl
outsb
adc
sarl
pop
mov
dec
fbstp
jmp
xchg
dec
ja
sbb
jmp
and
add
pushf
clc
iret
add
push
lret
shl
jmp
push
mov
xchg
mov
mov
jg
add
mov
je
cltd
addl
arpl
or
mov
orb
mov
push
iret
insl
aam
test
cmc
push
ret
rclb
int3
movsl
fiaddl
test
out
mov
sub
sahf
mov
or
scas
cmp
cmp
mov
inc
dec
lds
cmp
or
movsb
cmp
cmp
or
loopne
adc
repnz
add
add
shll
sub
sti
fldl
cmc
mov
push
orl
jp
call
movsb
pop
clc
into
cmpsl
int
ss
mov
mov
stos
push
movsb
mov
pop
xchg
mov
out
mov
mov
les
jmp
add
popf
add
jne
push
call
cmp
mov
sub
mov
jae
loope
sbb
lea
cwtl
test
fdivl
out
loop
xchg
inc
push
inc
outsb
inc
or
fcomip
out
mov
dec
cmpsl
lret
in
pop
test
cwtl
dec
scas
jp
pop
pop
addr16
xlat
add
frstpm(287
mov
pop
xchg
and
insb
sub
and
shlb
dec
das
iret
push
push
stos
jmp
fistpl
or
mov
out
mov
sbb
daa
das
push
aaa
in
pop
push
les
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
out
jle
cwtl
sbb
test
es
or
and
cltd
xchg
mov
lret
lock
dec
lahf
cld
sub
icebp
mov
lock
and
xchg
sub
stos
add
fistl
xchg
xor
cmp
aad
mov
scas
cmp
xchg
or
imul
mull
mov
jle
jle
outsl
inc
dec
rcrb
pop
pop
cmp
cmp
jle
sub
scas
aas
cmp
sbb
pusha
in
add
and
jb
imul
cld
mov
test
dec
adc
data16
loop
outsb
jae
orl
add
xchg
pop
cmp
pop
and
inc
jp
xor
ja
stos
cmpsl
xor
xor
and
ds
popf
fcmovu
in
int3
add
adc
mov
push
aas
sbb
dec
and
xchg
mov
dec
sub
arpl
mov
sbbl
cmc
and
roll
cmp
push
mov
inc
lret
or
xor
add
inc
mov
pop
in
pushf
dec
pusha
fwait
or
jle
in
imul
jb
mov
mov
ficomps
loope
lock
mov
sahf
imul
rcrb
xchg
loop
inc
xchg
or
xor
mov
jae
stos
xchg
push
xchg
roll
sti
jmp
jno
mov
das
mov
into
outsl
out
inc
jg
xor
lret
sahf
add
mov
sub
push
ds
outsb
jbe
aaa
xchg
in
xor
pop
out
aaa
pop
mov
cli
pop
cmp
cwtl
cld
lret
subb
jle
add
ljmp
movsl
sbb
push
arpl
cmp
es
sbb
and
std
outsl
lret
cld
or
jae
sbb
js
rep
hlt
pop
push
aad
cmp
mov
jb
mov
mov
loop
das
and
test
imul
sahf
pusha
clc
sub
cs
icebp
and
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
fwait
div
pop
inc
jb
cmp
cmp
cmp
popa
into
imul
pushf
adc
enter
cltd
sub
ja
aad
iret
iret
dec
and
and
aaa
addl
pop
cmp
inc
lock
xchg
pop
xchg
mov
jb
or
leave
test
fldcw
pop
or
pop
nop
adc
shll
iret
outsb
jns
push
into
in
fwait
adc
inc
sub
daa
push
outsb
pop
mov
adc
inc
sbb
xor
mov
add
movsb
cltd
mov
sub
rcll
cwtl
dec
jge
pushf
sbb
fidivrl
xlat
dec
lret
or
mov
in
mov
rolb
push
mov
js
scas
iret
pusha
jae
and
and
add
in
call
and
negl
or
add
popa
mov
pop
adc
adc
movsl
sub
mov
sub
sub
adc
add
add
or
movsb
imul
inc
push
sbb
cmc
mov
inc
idivl
addr16
stos
or
andb
sbb
push
movsl
cmpsl
imul
js
lock
cmpsl
outsl
jb
mov
adc
pop
repz
dec
idiv
test
inc
cmpl
mov
dec
pop
sbb
xor
xchg
sub
or
rorl
test
std
das
ja
cmp
fisubl
test
sbb
fs
dec
adc
dec
sbb
mov
mov
shrl
mov
inc
mov
mov
std
repnz
xchg
lahf
cmpsl
inc
js
addr16
mov
xchg
mov
xorb
jae
mov
out
scas
lds
lret
inc
daa
fwait
xchg
sbb
mov
movsl
out
push
dec
addr16
adcb
das
push
inc
push
arpl
js
xor
popa
sbb
jo
xlat
pop
adc
in
gs
mov
xchg
out
xlat
hlt
xor
pushl
sub
loop
dec
inc
push
and
div
mov
xor
or
jmp
push
and
mov
mov
nop
sbb
test
nop
xor
xlat
aam
xchg
sub
mov
cltd
insl
push
fimuls
out
add
push
push
dec
or
dec
mov
dec
decb
stc
and
dec
add
roll
mov
adc
pop
cwtl
stos
movsl
add
push
sahf
mov
add
pop
data16
pop
inc
sbbb
pop
icebp
fisubrl
insl
js
gs
cmp
ficoms
cs
sbb
adc
add
dec
cld
pop
movsl
cmp
push
jb
pop
stos
dec
adc
jecxz
sti
daa
lahf
pop
mov
lods
xchg
mov
int3
dec
out
sbb
dec
mov
push
movsl
push
rcrb
bound
ret
out
mov
and
mov
push
clc
jno
arpl
jmp
jle
addr16
push
push
jp
xor
mov
push
push
stos
push
pop
daa
mov
and
xchg
imul
and
mov
call
xchg
sub
hlt
addr16
fisubs
jg
pop
insl
mov
das
push
orb
inc
je
jnp
aad
sbb
scas
fistpll
repz
ret
cs
mov
xor
sub
nop
push
sub
stos
enter
pushf
stc
add
and
inc
scas
decl
cmp
rorb
xchg
adc
lret
scas
mov
out
sub
jae
sub
popa
push
pop
fdivp
rcrb
dec
lcall
mov
mov
rcll
sbb
push
and
mov
and
sub
mov
cmpl
int3
clc
push
fldlg2
repnz
mov
mov
lret
popa
cmpsb
repz
xor
in
xor
adc
jl
fwait
sub
push
xchg
out
jne
outsb
sbb
clc
int3
popf
sub
dec
mov
push
and
arpl
and
jecxz
rorb
aam
faddl
push
stos
sti
push
lea
and
cmp
jl
mov
cmpsb
sub
cmp
cmc
cld
mov
cld
push
push
inc
fildl
arpl
mov
dec
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
lods
mov
mov
sbb
bound
mov
sbb
pop
mov
cltd
xor
dec
dec
adc
mov
and
repz
inc
or
ljmp
xorl
sub
leave
jo
mov
mov
xchg
dec
add
inc
frstor
pushf
test
call
jmp
sbb
lret
cmp
je
sub
shll
ret
hlt
jo
jae
das
js
push
push
mov
pop
cltd
sbb
leave
cmp
adc
popf
das
imul
imul
sarb
outsl
ret
jnp
idiv
fldl
cwtl
aas
fucom
shl
orl
sbb
mov
stos
aaa
inc
cmp
mov
std
add
mov
daa
ret
je
xchg
adc
dec
jle
andl
pop
xchg
int
inc
sbb
or
cmp
push
aam
loop
movsb
cmpsb
shll
fs
shlb
jns
push
jle
and
stos
aad
stc
shlb
push
or
and
out
out
mov
imul
insb
shrl
mov
mov
aas
fdivr
jp
imul
or
and
cmp
dec
aam
loope
lock
inc
add
mov
ljmp
sarb
and
xchg
add
jne
mov
aam
cmc
mov
jmp
jb
inc
clc
inc
adc
lock
movsb
ds
aas
cwtl
mov
fmull
inc
xor
xchg
fsubl
cmpsb
xor
inc
nop
int
repz
add
out
mov
clc
pop
xchg
mov
into
or
and
dec
add
push
popf
or
fimull
ljmp
out
mov
cmp
aam
push
mov
aam
add
lret
sahf
rclb
adc
cmc
andb
or
and
and
mov
mov
je
sbb
mov
std
jmp
mov
jns
add
dec
xchg
ljmp
add
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
stos
jns
sbb
jns
sbb
call
pop
mov
popfw
pop
es
cmp
fdivl
roll
js
inc
jg
mov
test
push
and
jmp
movsb
inc
sti
xlat
enter
pop
xor
call
push
lock
adc
cmp
mov
sub
and
imul
inc
sub
mov
ss
clc
jg
int3
mov
xor
mov
in
cmpsl
adc
push
dec
sub
xchg
mov
jno
daa
fsubl
out
mov
arpl
sbb
flds
stc
xchg
in
jne
push
jecxz
mov
mov
push
fldl
push
loop
adc
mov
push
fisubl
lahf
jp
mov
cmp
inc
mov
add
adc
cmp
out
inc
jnp
cltd
call
mov
pop
mov
cli
mov
lds
dec
lahf
sub
or
fs
out
pmovmskb
aas
outsb
fiadds
in
mov
pop
xlat
fdivs
jnp
fbstp
cmp
sti
lret
push
or
in
negb
and
in
out
push
mov
mov
xor
das
jae
mov
sub
dec
fmull
xor
adc
and
pop
cmp
sub
jb
lods
popf
sbb
cmp
mov
fidivs
ja
aaa
xor
gs
cli
lea
inc
adc
imul
scas
shrb
mov
pop
sbb
sbb
cmp
loop
sbb
pop
adcb
adc
fwait
stos
inc
lret
jg
pop
shrb
je
in
nop
jne
mov
inc
mov
test
mov
mov
lea
push
lock
jbe
dec
adc
jg
or
ds
mov
xor
and
mov
imul
cmpsl
scas
push
dec
push
push
cltd
sbb
inc
ds
pop
xchg
sbb
lock
movsl
cltd
out
lahf
mov
and
pop
ja
vmwrite
sbb
adc
and
stc
lock
cli
popa
dec
testl
inc
mulb
test
inc
pusha
rcrl
jne
jecxz
test
adc
lds
push
push
icebp
sbb
fdivs
dec
xchg
or
std
movsb
mov
mov
dec
cmp
push
mov
je
pop
in
aaa
bound
sbb
aad
or
xchg
ljmp
xchg
pop
mov
push
or
xchg
push
dec
repnz
sub
stos
pop
mov
mov
in
pushf
repnz
es
sbb
and
jecxz
cmc
cld
fsubrp
mov
icebp
pop
mov
inc
xchg
call
jmp
test
dec
cmp
push
push
repnz
lret
adc
out
and
mov
mov
das
js
movsl
push
sbb
jle
xchg
cli
in
test
add
stc
stc
sbb
ja
mov
sarb
and
xor
call
inc
mov
insb
add
add
jne
inc
sbb
pop
clc
push
in
fadds
sbb
adc
inc
sub
add
test
jb
fsubrs
andb
in
fdivs
push
lcall
lret
and
sahf
outsl
push
jp
dec
push
cwtl
push
fcomps
pop
xchg
inc
push
sbb
pop
mov
inc
mov
dec
sbb
push
cltd
div
mov
add
scas
rorl
stos
add
loop
insb
in
dec
push
ljmp
popf
mov
adc
adc
mov
out
add
aam
dec
lahf
in
cmc
out
shlb
or
in
outsl
dec
push
pop
sar
stos
push
dec
into
dec
sub
lret
push
or
aad
stos
mov
adc
and
js
out
jge
jo
mov
adc
push
gs
xor
jg
test
ss
hlt
mov
cmc
outsb
incl
fadds
add
flds
and
lods
adc
pushf
xchg
aas
int
add
sub
mov
ret
mov
mov
fs
xchg
xchg
xchg
xchg
cwtl
cmp
shll
xchg
fprem
ljmp
dec
sbb
movsb
les
xor
je
cmpsb
or
push
add
rcll
adc
cwtl
push
xor
lahf
int
enter
cltd
add
cld
loopne
out
dec
xchg
xchg
out
xchg
mov
rcll
scas
in
andl
ds
xchg
add
and
jecxz
xchg
popf
movsl
mov
rclb
out
in
fnstcw
aaa
enter
dec
mov
jmp
xor
pop
push
lea
xorl
add
js
dec
pop
pop
inc
jl
repnz
fldl
nop
push
sub
fs
cmp
std
daa
lods
jnp
stos
into
outsb
cmp
inc
popf
scas
add
stos
and
mov
popa
out
pushf
notb
jo
rclb
xchg
test
jmp
fistpll
cmp
sub
setne
mov
push
faddp
insl
int
daa
mov
mov
daa
mov
mov
cmpsb
push
dec
jne
xor
inc
push
sub
sub
int
xor
nop
mov
push
push
aam
add
arpl
push
adc
loope
pop
fcmove
outsb
push
push
push
mov
fdivrl
add
outsb
in
mov
push
or
add
mov
xor
insb
sub
dec
jl
sbb
pop
xchg
adc
es
pop
bswap
mov
call
adc
jno
popf
in
aas
and
stc
and
jmp
sub
mov
fadds
push
jb
ret
addr16
out
jae
and
jp
call
repnz
gs
xor
sbb
imul
jle
outsl
push
jmp
inc
and
fbstp
xchg
int
sarb
jo
test
lcall
add
sub
mov
and
mov
or
sbb
or
cld
shll
je
pop
hlt
inc
push
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
mov
mov
fidivrl
push
in
fistpll
in
repnz
jg
daa
sub
xor
inc
addr16
iret
pop
andl
icebp
jne
pextrw
xchg
call
jl
daa
push
clc
pop
gs
mov
out
dec
push
pop
test
and
data16
push
clc
inc
cmp
loop
mov
gs
xchg
scas
scas
fdivs
xchg
hlt
push
mov
xchg
movsl
and
jae
lret
mov
scas
test
mov
lret
inc
jae
or
mov
xor
pop
dec
repz
pop
cmpsl
loopne
fsubrs
sarl
hlt
pusha
cld
out
stc
push
push
sahf
push
inc
bound
mov
inc
lahf
sbbb
xor
xchg
mov
xor
add
scas
test
adc
shl
leave
gs
cltd
lods
dec
mov
sti
mov
bound
sub
inc
aam
ss
jge
stc
push
or
aaa
test
jo
mov
mov
test
sub
fisubs
popf
lcall
vcvttps2dq
cltd
fstpl
sub
lahf
xor
dec
cwtl
adc
cs
adc
lods
cmpsl
jb
sahf
mov
out
stos
sti
rcr
outsl
imul
cli
insl
enter
stos
call
jmp
fisubl
push
push
lods
pop
add
insl
cmp
jae
sbb
outsb
mov
movhps
sub
out
sbb
add
or
inc
cmp
aad
ficoms
pushf
lock
leave
cwtl
shr
pop
cld
pushw
pusha
jmp
cwtl
popf
xor
xchg
xor
mov
xchg
sub
jge
jp
inc
outsb
mov
loopne
pop
call
pop
xchg
out
shll
test
das
mov
ds
push
nop
dec
dec
jg
cs
mov
fwait
mov
inc
push
or
das
cld
add
pop
mov
rolb
ret
add
fs
inc
fldl
fs
push
nop
arpl
shr
jg
ljmp
adc
mov
cmc
pop
add
or
pop
btrl
add
rcll
dec
jb
pop
fidivl
test
adc
mov
mov
lods
dec
stos
fcomi
ror
aad
cmp
sub
inc
pop
lret
or
adc
leave
fcmovne
int3
cmp
mov
ret
rol
cwtl
jle
in
movsb
test
mov
or
mov
lods
shrl
or
daa
stc
cli
outsl
xor
cld
stc
xchg
jne
pop
gs
dec
lcall
adc
push
mov
mov
out
gs
mov
sti
cmpsl
inc
js
cmp
mov
mov
int3
sbb
faddl
push
jae
cmc
addr16
mov
lock
push
stc
mov
add
mulb
or
lahf
daa
pop
stos
adc
dec
mov
adc
popf
and
sbb
roll
cli
cmp
imul
xorb
rcrb
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
xlat
sub
loopne
insl
mov
and
add
ljmp
fsubrp
icebp
jbe
adc
into
mov
aas
stos
jecxz
add
data16
push
shlb
jmp
push
popf
ret
pop
scas
sti
push
mov
adcl
repnz
insb
dec
mov
push
inc
mov
mov
js
std
add
std
xor
cmp
nop
push
sahf
sti
out
push
out
push
xchg
clc
test
xchg
pop
xchg
test
sub
mov
mov
and
sub
adc
imul
sub
mov
adc
mov
cmp
xor
push
cmp
stos
aad
lcall
sub
push
enter
push
xchg
xlat
sub
fstpl
int3
dec
cmp
mov
add
and
xchg
sub
hlt
cmp
andb
sub
cmp
jb
cmp
loop
jns
mov
dec
sub
lds
mov
xlat
test
cmp
scas
xchg
or
sahf
lods
sub
adc
dec
jg
jns
cmp
pop
dec
jle
sbb
icebp
les
dec
mov
pop
jecxz
mov
pop
andl
pop
xor
test
aam
pop
mov
idivl
add
loopne
and
xchg
pop
sub
imul
mull
mov
cmp
xchg
mov
xor
push
cmp
je
mov
inc
push
fdivr
inc
lock
mov
and
and
mov
sub
push
adc
cmp
sbb
dec
jg
stc
inc
scas
push
push
vmovlps
adc
mov
fwait
pop
popf
into
jge
mov
rolb
sbb
push
xor
xor
loop
push
rol
pop
mov
int3
mov
shlb
mov
push
push
ds
dec
jmp
in
add
push
push
out
or
cmp
loopne
cmp
push
and
int
scas
call
mov
mov
imul
pushf
rorl
cmp
sub
stc
mov
jns
into
repnz
jmp
sbb
cmp
sbb
pop
out
mov
sub
mov
mov
or
jo
mov
pop
into
popl
stos
lcall
add
fsubrl
bound
and
cmpsl
pop
adc
out
aad
cmp
sbb
mov
jae
imull
jno
loop
lret
push
push
xchg
jae
fisubl
inc
or
mov
dec
lea
ds
clc
pop
nop
es
shlb
cmpsl
lods
out
cmc
mov
or
inc
ficoml
pop
test
jge
mov
mov
fbstp
cmp
push
and
cmpsl
fistpl
cmp
test
data16
xchg
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
stc
gs
jns
sbb
fcomps
add
jns
push
push
mov
pop
jns
out
test
cs
jecxz
scas
dec
xchg
and
aas
xchg
fistpll
jbe
js
das
mov
dec
mov
sub
xchg
or
cmpsb
cwtl
loop
and
cmp
repnz
fidivrl
imul
testl
jno
lods
cmp
fbld
and
gs
ss
mov
ds
js
xchg
test
imul
in
xlat
mov
gs
shl
mov
cmp
push
sub
fwait
cmpsl
repnz
mov
aas
shlb
xchg
push
sbb
jae
add
xor
ljmp
push
inc
lahf
xchg
xchg
lds
scas
xchg
cmp
mov
test
cs
add
andb
insl
xor
push
cmp
push
mov
sub
das
pop
or
les
adc
push
push
add
push
cmp
repnz
xchg
push
ror
cmp
pop
call
pop
cmpb
mov
inc
jge
cmc
shl
push
sub
imull
mov
movsl
dec
dec
addr16
testl
or
repnz
popa
lahf
fistps
lds
inc
cmp
mov
xchg
or
in
aad
dec
lock
repnz
xlat
ret
and
pusha
std
sti
push
sbb
push
mov
sbb
mov
push
inc
int3
ror
movsb
push
out
cmpsb
ljmp
sarl
stos
ret
pop
sti
jae
add
sarb
stos
lret
outsl
mov
fisubrs
mov
xchg
shrb
ljmp
pusha
pop
lods
out
adc
mov
imul
gs
movsl
sub
loope
ret
mov
lret
mov
pop
mov
inc
dec
sbb
jne
push
std
fistl
rorl
and
pop
js
insb
xor
push
fstps
add
ret
cmpsb
inc
or
adc
mov
and
cmc
sub
mov
sbb
cs
jmp
insb
jb
push
ja
push
std
shl
or
xchg
pop
cmc
lret
incl
shrl
xor
iret
into
nop
mov
aad
out
in
shlb
outsb
lret
cmp
dec
mov
cmp
xchg
fwait
push
mov
push
stos
xor
clc
shll
or
leave
hlt
dec
movsl
enter
into
xorb
fcompl
mov
push
jmp
xchg
fbld
subl
sbb
sub
pushf
out
fsubs
jecxz
out
and
shrb
js
jb
jns
lds
pop
sub
call
xorb
mov
aaa
jl
add
push
cld
or
inc
test
addr16
mov
in
pop
lds
stos
inc
dec
imul
or
insl
mov
leave
cltd
mov
jno
inc
xchg
dec
add
notl
in
movsb
cmpsl
int3
mov
stos
nop
dec
mov
adc
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
dec
dec
insl
mov
data16
jns
sbb
add
cli
lea
and
psrlq
sub
cmp
filds
cmc
and
inc
push
sbb
es
adc
add
or
inc
pop
insb
xor
cmpsl
int
xor
push
out
push
adc
push
roll
fidivs
mov
adc
adc
fnstsw
xor
cmpsb
push
cmp
inc
cld
je
adc
or
mov
pusha
ud2
and
mov
dec
mov
mov
subl
lods
sbb
in
pop
cmp
pop
sarl
divb
mov
stc
jle
divl
arpl
shrb
sbb
xlat
nop
lods
dec
dec
ror
push
xlat
scas
cmc
mov
push
test
xor
push
nop
sbb
adc
das
clc
aaa
xor
movsb
mov
or
inc
fistpl
cmp
inc
fmull
ljmp
or
es
jbe
repz
mov
aam
iret
incl
inc
test
loop
loope
push
insb
mov
cli
push
ror
cwtl
push
lret
stos
xchg
push
jg
js
xchg
mov
mov
push
fldl
inc
xor
loope
addr16
add
out
xor
das
dec
cmpsb
test
out
andl
loop
xor
xlat
je
repnz
mov
mov
fisttps
mov
vcvttpd2dq
xchg
inc
sarb
dec
push
xor
pusha
les
xchg
aas
cmp
mov
jecxz
mov
cmc
sahf
add
movl
insl
bound
out
call
mov
fs
outsl
mov
push
jp
cwtl
ret
sub
aaa
rorb
ja
add
xlat
and
dec
jecxz
cmp
mov
cmp
clc
fistpll
mov
lahf
imul
xchg
jecxz
test
dec
push
cmpb
add
adcb
das
xchg
pop
push
jb
and
sbb
dec
push
loop
add
lahf
xchg
mov
or
lds
in
and
jle
movsb
sbb
xchg
in
adcl
lahf
dec
popa
inc
mov
sbbb
cwtl
and
ret
loope
enter
dec
flds
sbb
imul
cmp
jmp
adc
mov
out
xchg
rclb
insb
xchg
je
scas
cmp
das
scas
testl
cmp
dec
push
xchg
arpl
push
test
int3
fiaddl
shlb
das
sub
shll
pop
pop
push
push
mov
insb
cltd
fcompl
hlt
jo
mov
sub
dec
movsb
cwtl
mov
xlat
and
out
adc
mov
dec
dec
jg
movsb
xchg
aaa
pop
xor
mov
call
lds
pop
dec
imul
sub
lret
lea
mov
fwait
push
add
out
push
pop
inc
vmovhps
orb
out
shll
xchg
xor
jb
jbe
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
jns
movsl
mov
jns
sbb
inc
pop
cmp
cwtl
xor
sub
sub
sub
std
and
mov
sub
test
loopne
xchg
or
mov
xchg
repz
cmp
int
inc
xchg
cli
sub
lods
jne
inc
lea
iret
popf
std
adc
adc
fnstsw
mov
inc
je
shr
rcl
xor
xlat
cmp
sbb
sub
imul
sbb
leave
dec
cmp
in
insl
in
cmc
xchg
adc
lahf
enter
btr
mov
and
sub
push
jo
inc
sub
xchg
jl
or
xor
rcr
out
add
pop
or
int3
sbb
sub
stc
mov
addb
movsb
cmp
xor
cmc
inc
daa
sub
mov
mov
jne
into
mov
fdivl
pusha
xlat
xchg
mov
lock
xor
frstor
dec
out
and
add
mov
outsl
or
fdivrs
push
addr16
out
lods
dec
push
pop
jbe
adc
mov
xlat
imul
shrb
dec
push
mov
sub
in
xchg
insb
xlat
incb
std
into
insl
xchg
or
push
xchg
pop
les
mov
xchg
adc
mov
add
mov
sbb
pop
jns
lods
pop
repz
xlat
shlb
test
cmovo
in
addr16
sub
repz
cld
out
lods
mov
mov
lret
pop
sub
loopne
lock
push
jmp
push
or
dec
and
gs
mov
fsubr
sbb
mov
cmp
test
sbb
mov
xchg
call
pop
bound
mov
mov
cmp
cld
roll
rolb
pusha
add
scas
fbld
add
into
jnp
jmp
cmpsl
push
jmp
inc
test
mov
inc
jae
sbb
lds
lahf
fiadds
dec
decb
in
ficoml
cmp
adc
in
inc
dec
outsl
dec
sbb
call
mov
mov
xchg
mov
test
cs
aad
xor
mov
add
inc
mov
mov
lods
int3
popf
cmpl
fisubrl
filds
mov
xchg
cmp
or
fcomp
into
sbb
js
sub
inc
int3
xor
fs
push
mov
imul
mov
sbb
out
subl
pop
inc
cmpsl
pop
mov
lret
sbb
xlat
std
data16
push
mov
icebp
shrl
fst
dec
ret
inc
js
jge
mov
out
sti
lcall
out
mov
push
test
je
bound
pop
mov
and
jl
test
cmp
mov
imul
int3
pushl
sahf
mov
arpl
or
jle
into
xor
daa
lods
rolb
adc
cmp
mov
sbb
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
cmp
sbb
sbb
fs
lret
jecxz
mov
sbbl
cmp
aad
outsb
adc
xor
std
mov
orl
xor
mov
popl
mov
mov
dec
add
xchg
js
mov
sub
sbb
push
es
loop
mull
pop
xchg
jp
jecxz
cwtl
popf
popf
repz
xchg
mov
or
mov
jbe
loopne
lods
out
adc
repz
jno
push
jo
cld
mov
push
out
mov
mov
lock
test
pop
dec
mov
movsb
xchg
pop
mov
leave
pop
inc
cmp
leave
or
xor
shrb
inc
mov
push
push
cmc
mov
jb
dec
add
cmpsb
cmp
lods
scas
loop
dec
pushl
test
ret
jl
into
mov
push
loope
xor
push
xchg
pop
mov
mov
popa
aam
cmp
insb
cmp
jmp
shlb
ret
fsubl
inc
int3
orl
sub
stos
clc
cmc
shl
mov
test
cli
scas
push
mov
xchg
cmpb
cmp
repnz
push
cli
mov
push
jg
inc
jl
rcrl
enter
jno
fidivrs
jnp
insb
jle
mov
or
jmp
inc
fnsave
mov
nop
xor
sahf
gs
jb
xchg
jbe
adcb
and
xlat
data16
adc
mov
lods
mov
jmp
aaa
adc
adc
arpl
icebp
sbbl
add
sbb
pusha
mov
sub
push
add
imul
push
cs
xchg
mov
adc
movsl
xor
lea
jp
jl
xchg
ret
ljmp
bound
and
int
clc
lods
nop
aaa
dec
push
inc
jecxz
mov
dec
and
sbb
sbb
out
std
arpl
mov
adc
enter
cld
fdivrl
mov
dec
add
xchg
mov
imul
out
cwtl
inc
mov
or
loopne
sub
add
sti
je
cmc
fnsave
mov
push
mov
int
inc
cli
push
jecxz,pt
xchg
jmp
xor
sub
mov
adc
push
les
stc
xchg
insb
sbb
sub
push
cmp
add
push
hlt
sbb
ret
mov
test
push
shll
repz
or
sub
scas
rorb
int3
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
dec
jle
push
sbb
and
sbb
in
cmc
negl
sub
js
daa
push
aad
std
xor
sbb
cmpsl
jo
ret
sbbl
pop
sbb
add
mov
js
js
jnp
loopne
pusha
jge
push
xchg
shl
leave
jg
iret
decl
sub
xor
mov
push
mov
stos
imulb
cmp
mov
cmp
jg
and
stos
pop
inc
pop
lea
adc
dec
ret
popa
int3
daa
push
fidivl
pop
aaa
int3
add
push
mov
pushl
push
insl
and
mov
sahf
pop
sub
and
dec
push
shr
cmp
sub
dec
movl
sbb
cli
xor
cmp
adc
add
mov
or
aad
jmp
das
jmp
test
adc
lcall
movsb
cmpsl
sub
dec
cltd
cmp
inc
sbbb
add
faddp
sub
call
mov
push
mov
xchg
enter
add
imul
xorb
or
xchg
adc
outsb
std
push
sbb
out
xor
jns
push
aam
mov
stc
push
push
sbb
cli
sarl
pop
fnstsw
push
cmp
xor
mov
jnp
mov
push
sbb
clc
add
pop
cmp
dec
lods
pop
insl
pop
jnp
rorl
add
shrl
cmp
adc
dec
add
pop
popf
jl
xchg
pop
aaa
xchg
mov
fcom
mov
pop
sbb
imul
cwtl
shl
aaa
ljmp
push
add
fstp
imull
mov
imul
dec
sti
sti
rcrl
jle
or
cmpsl
gs
jno
or
jbe
inc
mov
stos
add
ss
mov
mov
pop
ret
dec
xlat
pop
push
cmp
adc
loope
out
sub
jnp
or
pop
pop
mov
lods
sub
sbb
pop
mov
jmp
pop
fistl
push
hlt
sbb
inc
int3
rcl
sub
mov
rolb
cmpsl
ss
mov
scas
lahf
lods
adc
pop
push
sbb
test
jns
popa
mov
pop
pop
int3
mov
jp
cmc
push
cld
mov
add
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
inc
push
push
dec
sbb
scas
adc
sbb
lods
shrl
out
xor
pop
push
xchg
sbb
insl
mov
fcomi
push
insb
cs
xor
loope
xchg
hlt
fidivrs
xchg
icebp
ficoml
adc
fdivrs
int3
mov
lods
dec
jne
inc
mov
popf
dec
in
rdpmc
insb
and
lcall
cwtl
pop
icebp
pushf
jp
fisubrs
sahf
jge
movsb
adc
inc
lods
mov
cmp
push
mov
pushf
fwait
inc
mov
stos
in
fistl
add
cmp
add
mov
inc
mov
pop
fisubs
push
xchg
fnstenv
push
fwait
repz
in
ficomps
fwait
and
roll
push
das
repz
stos
mov
outsb
dec
sbbb
pusha
add
sub
out
jmp
iret
inc
ret
scas
push
pop
mov
loopnew
ja
imulb
jae,pn
int3
push
scas
pushf
outsb
std
cld
sbb
call
and
bound
pop
jl
ja
insb
jno
xchg
testb
push
sbb
jae
and
adc
push
mov
mov
hlt
jns
jae
test
sub
add
movsb
scas
outsl
add
mov
add
stos
xchg
in
mov
adc
test
out
adc
or
lock
scas
movsl
adc
mov
clc
adc
pop
ja
sub
mov
fmull
pushf
pusha
nop
cmp
movsb
shlb
push
push
dec
xor
loop
pop
rorb
xor
mov
daa
pop
push
push
sub
push
popf
ljmp
push
pop
sub
xchg
clc
xchg
or
fldl
jnp
push
fistps
shl
jmp
mov
inc
push
fstpt
push
ficoms
in
or
adcl
les
pop
dec
xchg
pop
imul
mov
pop
divl
jae
add
add
rclb
mov
movsl
push
mov
sbb
xlat
je
fs
dec
repnz
sti
and
inc
mov
ss
inc
test
sub
inc
pop
jge
inc
adc
out
aam
test
xor
jae
push
test
icebp
notb
pop
add
jno
xchg
cmp
jns
js
iret
pop
sub
cmp
cmc
fstpt
cltd
dec
xor
inc
mov
jl
hlt
mov
aad
scas
inc
push
jg
mov
loop
out
ja
xor
decl
call
les
push
movsb
and
mov
push
pop
mov
mov
jno
dec
push
add
push
xor
cmp
loop
jmp
mov
inc
jge
cld
adc
ret
jo
push
std
hlt
jg
out
lahf
cli
hlt
and
out
mov
bound
pop
jb
loope
cmp
mov
pop
aad
push
and
pop
mov
subb
xor
sub
pushf
xor
loopne
cmp
fildll
jmp
imull
test
add
mov
fwait
sub
pusha
fsts
popf
rcr
pop
adc
jl
dec
setp
sub
adc
push
out
je
inc
xchg
lahf
cmp
push
and
lods
in
lret
jge
or
add
mov
scas
pop
outsb
test
mov
add
xchg
jno
mov
push
rolb
sti
jbe
push
in
lods
lcall
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
stos
jne
adc
sbb
xchg
jge
stc
test
lea
js
inc
jmp
push
and
inc
movsl
push
call
xlat
cld
sub
dec
mov
ljmp
rcll
test
scas
iret
or
inc
fildll
stc
je
in
sahf
mov
or
push
push
mov
ret
pop
mov
cmpsb
pop
lods
push
mov
fildll
movsl
and
adc
cmp
add
or
cwtl
into
mov
in
lcall
push
dec
push
mov
out
test
push
test
mov
into
popa
jno
push
xchg
ja
cmp
and
add
or
shll
xor
movsl
mov
push
cmp
sub
pop
pop
dec
or
ret
mov
into
in
xor
sub
dec
in
xor
sub
push
mov
mov
jp
pop
mov
pusha
adc
movsl
dec
lock
adc
add
ljmp
lret
das
xor
es
testb
xor
xchg
out
and
fnstenv
push
imul
ret
inc
daa
movsb
mov
pop
addr16
ljmp
arpl
and
fildll
pop
xchg
cmp
dec
pop
movsb
cs
push
push
pop
cmp
xor
insl
repz
fs
push
mov
ret
fidivrs
in
xchg
add
pop
sub
dec
pop
xor
cmp
and
stc
shll
cld
insb
mov
idivl
add
mov
adc
popa
sub
mov
sub
into
into
add
adc
push
sub
push
sahf
js
cmpb
mov
push
jno
pushf
cli
orb
xor
cmpsl
sub
or
xor
xchg
pop
loope
xlat
sub
outsb
sbb
add
pop
mov
popa
test
std
std
mov
jle
pop
mov
lods
mov
shlb
adcl
add
dec
rcrl
dec
xor
push
dec
or
xchg
loopne
inc
test
aad
or
or
adc
dec
jae
cltd
jl
mov
or
xor
dec
sub
mov
pop
or
sub
imul
xchg
inc
mov
andl
fcomi
push
push
dec
cld
lahf
outsb
js
shll
mov
stos
pop
mov
mov
jae
lods
lret
xchg
nop
test
fcoml
and
or
stos
jns
je
mov
out
xchg
stc
ja
add
shll
mov
imul
jmp
or
and
mov
iret
or
stos
jo
push
divl
stos
aam
cmp
pop
orb
cltd
mov
movsl
fsubr
addr16
jecxz
adc
adc
outsb
lret
fistps
insl
fisubs
inc
rclb
addl
enter
xchg
add
jp
push
andb
xchg
scas
nop
xlat
add
jle
pop
test
jo
pop
sub
dec
scas
ljmp
or
jno
adc
push
xchg
sbb
pop
jmp
or
and
jo
add
adc
fwait
mov
sbb
pop
movsb
aas
fbstp
lea
pop
cmp
icebp
leave
loopne
incl
push
sarl
aaa
stos
xchg
pop
inc
stos
test
xor
frstor
paddq
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
sarb
test
adc
sbb
test
inc
mov
insl
cmp
cmp
jge
dec
ljmp
jg
dec
ljmp
cs
dec
adc
adc
and
jb
and
je
push
and
jbe
enter
pop
dec
mov
and
xchg
push
mov
andb
pop
mov
sub
xchg
inc
mov
fsubs
stc
mov
push
roll
dec
mov
xchg
es
jno
push
leave
sub
pop
scas
xor
in
in
popf
fs
jne
arpl
ss
mov
fists
test
xor
sub
mov
movsl
insb
shll
popa
mov
and
sub
fadds
daa
aas
cmp
js
subl
std
call
jle
inc
cmp
mov
mov
mov
cmp
sbb
xlat
add
icebp
jns
outsb
sub
and
scas
or
mov
lret
int
adc
sbb
testb
dec
jmp
paddsb
dec
sub
scas
popa
mov
mov
sub
mov
repnz
and
jmp
fwait
or
lcallw
xchg
sti
ss
aas
or
mov
sub
testb
pop
fildll
imul
lcall
xchg
sub
sbb
jp
loopne
add
push
ret
dec
call
push
sbb
mov
ss
adc
call
mov
subb
call
add
dec
pop
jb
push
mov
or
int
addl
sbb
cmp
xor
inc
addr16
jbe
xor
ss
mov
imul
shl
negl
sub
outsb
pop
loope
data16
sub
pop
pop
sub
or
fxch
mov
shlb
je
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
bound
fnstsw
cmp
sbb
adc
sbb
or
xchg
call
pop
push
lret
mov
out
ss
orl
add
add
div
call
xchg
mov
mov
scas
sbb
xor
and
lahf
imul
jns
loopne
mov
in
or
sbbb
cmp
stos
fcompl
stc
subb
inc
ds
lcall
jl
das
mov
jb
inc
loop
dec
jne
lods
int
xchg
fnstsw
inc
mov
jne
inc
dec
insb
out
test
pop
dec
push
adcb
jle
aam
mov
leave
dec
add
ljmp
dec
lods
push
popf
stos
cltd
add
neg
outsb
loop
push
inc
inc
clc
mov
push
xor
inc
ret
mov
push
lods
cld
adc
and
push
iret
xchg
push
movsb
into
int3
arpl
faddl
lods
fsubl
adc
xlat
daa
ret
pop
xchg
mov
cmp
dec
add
shll
push
je
enter
das
lods
adc
aas
sahf
sub
push
sub
mov
mov
shll
adc
icebp
aam
lock
call
imul
xchg
lahf
test
adc
hlt
mov
aam
int
sub
fcomp
shrl
aam
jle
loope
mov
or
fptan
lahf
or
std
sbb
mulb
in
or
cmp
mov
push
pushf
shlb
jbe
enter
test
and
inc
stos
cmp
sub
cmpl
mov
andb
xor
ljmp
out
sub
cmp
mov
clc
sti
insb
or
mov
xor
mov
je
pop
popa
dec
jge
mov
sbb
cs
push
push
out
and
mov
stos
fs
scas
push
lock
rolb
mov
sbb
test
popf
mov
loopne
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
cmp
sbb
notb
sbb
add
imull
jb
add
push
sbb
or
push
mov
push
outsl
xchg
mov
jl
pop
inc
mov
outsb
dec
jbe
inc
in
loope
add
sbb
cld
repnz
mov
xor
sub
std
popa
xor
mov
outsb
sub
pop
pop
dec
insl
pop
aam
cmp
mov
sbb
pop
pushf
mov
and
mov
push
add
fldl
sahf
rolb
mov
mov
mov
bound
es
incl
mov
addb
cmp
loopne
lods
shrb
cltd
movsb
rorb
in
cmc
outsb
or
lock
xor
cmc
jle
test
sub
fstps
pop
cs
in
dec
jne
loopne
into
xor
xor
ret
jb
add
adc
xor
pop
ret
pop
int3
and
jns
sbb
divb
cli
lock
pop
cltd
pop
xchg
pop
movsl
stos
inc
mov
test
imul
scas
sub
cmp
pop
mov
ds
inc
push
jns
mov
dec
pop
lock
or
into
cwtl
imul
lret
rolb
aas
sbb
push
ret
lods
jno
ljmp
sbb
mov
or
adc
in
outsb
and
dec
movsl
xor
test
add
in
rcl
insl
sub
add
leave
in
loopne
icebp
pop
cwtl
icebp
fwait
leave
stos
hlt
testb
gs
push
push
sbb
add
jmp
loopne
ss
fistl
imul
aaa
add
mov
rep
pop
test
cmpsl
push
xchg
xlat
aas
sub
inc
sub
int
mov
cmpb
mov
cmc
enter
mov
fs
pop
mov
jge
mov
aam
mov
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
xchg
bound
add
aam
dec
incl
repz
shlb
xchg
cmp
ds
pmaddwd
stos
xor
adc
ds
sub
int3
mov
int
repz
cmpsl
leave
mov
add
and
scas
lds
push
test
mov
mov
mov
adc
xchg
fcoms
cs
add
mov
mov
mov
fnsave
call
or
andl
adc
aam
mov
adc
scas
js
ss
aam
loop
fists
inc
fcoms
xor
aad
clc
pop
mov
fldt
gs
ss
fdivr
es
and
cmp
pushf
fisubrl
std
push
adc
adc
xchg
jo
push
pusha
adc
mov
std
xchg
cwtl
fidivs
inc
inc
xor
adc
pop
outsb
add
iret
fcomps
stc
sbb
insb
xor
inc
push
jne
out
sbb
sub
fsubp
push
jl
xor
std
in
xchg
rcrb
pushf
sbb
les
rorl
jno
outsb
pop
cltd
stos
adcb
ljmp
mov
fxch
dec
cltd
test
dec
lds
xchg
int3
fcmovbe
in
adc
xchg
mov
outsl
cmp
pusha
jl
movl
es
mov
mov
xchg
icebp
and
mov
stc
addb
ja
shl
adc
jnp
pusha
push
mov
stos
dec
mov
add
adc
test
mov
repnz
loope
mov
xchg
pop
or
jns
hlt
xor
xchg
jge
mov
fldcw
jno
sti
mov
arpl
dec
popl
add
fwait
subb
popa
xor
insb
aad
fstl
mov
cmp
mov
sub
divb
jg
add
stos
jl
xor
and
mov
imul
xchg
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
imul
push
aaa
adc
push
mov
push
cld
cmc
lds
xor
adc
pop
negb
and
leave
adc
lret
xchg
scas
lods
xchg
pop
icebp
scas
fistl
daa
sbb
pop
ds
outsb
inc
sbb
loop
and
fisubrl
movsl
inc
stc
scas
scas
xchg
push
cmp
arpl
rolb
out
decl
mov
ss
mov
push
pushf
push
or
push
in
mov
xor
mov
cmp
leave
inc
fsubrs
ljmp
iret
call
sti
cmp
lds
cmp
xchg
or
or
je
pop
xchg
add
int
lock
cmp
imul
mul
mov
pop
or
fwait
dec
or
call
pop
sub
rorb
xor
jl
sub
in
jns
sub
out
imull
call
test
sbb
lods
xchg
xlat
les
mov
mov
push
add
inc
fucomi
movsb
lcall
lcall
jno
pop
out
test
mov
pop
or
sub
mov
pop
cmpsb
mov
sub
cmp
xor
lret
je
xchg
push
dec
jmp
and
push
nop
jp
in
shl
test
xor
or
jl
cmpsb
lods
insl
loope
dec
mov
sbb
test
clc
not
test
mov
daa
jb
push
notl
mov
mov
std
insb
mov
fbstp
fcmove
fstl
mov
fsubr
or
out
sub
adc
pop
leave
les
jl
das
xchg
inc
shl
or
out
fidivs
push
jo
into
jl
and
out
aam
lcall
mov
nop
mov
or
and
mov
repz
push
jae
jmp
mov
mov
sbb
and
inc
push
mov
mov
jmp
aaa
and
dec
mov
push
out
push
pop
jle
sub
sbb
adc
sbb
mull
mov
jg
js
out
sub
dec
in
pop
loope
dec
xor
adc
loope
and
ss
sbb
push
push
mov
cwtl
dec
and
int
adc
das
mov
dec
sti
fwait
jecxz
dec
and
rol
fldcw
addr16
mov
cmpsl
mov
mov
lea
and
or
sub
add
lahf
and
mov
or
pop
inc
cli
push
xor
xchg
popa
pop
push
pop
cmp
adc
test
adc
inc
cmp
cmp
cmp
jnp
ficoml
sub
inc
mov
jmp
jp
imul
adc
gs
dec
cmp
xor
pop
cmpsl
inc
inc
pop
push
leave
outsb
sbbl
cmp
mov
movl
cmpsb
fs
inc
add
dec
fwait
paddsw
inc
loopne
sbb
dec
sub
pop
adc
xor
mov
dec
in
inc
fs
cmp
push
call
popa
inc
sbb
or
jnp
outsl
hlt
stos
shlb
mov
stc
scas
pop
xchg
imul
add
mov
cmc
popl
pop
sbb
fwait
adcb
mov
pop
mov
scas
add
scas
add
loope
movsb
or
mov
cmp
repz
cli
and
push
mov
dec
add
mov
arpl
int
lods
push
fbld
rcll
push
push
mov
testl
fwait
push
mov
mov
std
fs
or
mov
lret
jb
push
lock
add
xor
cmp
inc
call
js
mov
fistl
dec
sub
mov
inc
jmp
int
mov
rcl
sub
inc
sbbb
fiaddl
mov
and
fstpl
std
sbb
gs
movsb
xchg
es
lock
out
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
push
daa
and
sbb
pop
loop
hlt
rorl
sbb
xchg
inc
test
mov
mov
int
mov
cmpsl
les
fs
pusha
in
xchg
mov
or
cld
mov
shlb
push
push
mov
negb
cltd
pop
xchg
sbb
lahf
cmp
push
es
lret
jbe
mov
inc
push
lds
je
out
mov
xchg
cmpsl
dec
jae
jmp
mov
popa
mov
shll
cmc
les
push
in
jnp
cmp
scas
lock
adcb
sub
add
xor
ljmp
dec
lret
ja
xchg
loopne
jo
les
cltd
bound
jg
mov
cmp
push
pop
ret
mov
out
inc
push
sub
adc
cmp
lcall
dec
dec
daa
gs
jbe
pop
imul
and
jl
cmc
jg
push
shrl
add
sub
cs
mov
mov
fstpt
lahf
inc
incl
push
or
lds
ret
daa
faddp
out
sahf
fwait
mov
punpckhdq
push
fbstp
add
pop
unpckhps
or
mov
adc
jmp
mov
shll
xor
xor
inc
add
inc
and
imul
out
cmp
ljmp
add
pop
push
mov
sarl
mov
mov
jno
push
xchg
jb
mov
add
push
lret
xor
cmp
lea
jbe
sub
jl
mov
movsb
and
and
repz
out
mov
test
mov
sbb
cmp
js
arpl
cmp
cmp
inc
shlb
mov
push
andb
pop
iret
pusha
repnz
add
data16
jo
and
add
aaa
pop
and
cmpsl
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
fsub
jl
addr16
dec
out
sub
mov
das
mov
je
in
js
cld
mov
inc
xchg
outsb
ds
pop
dec
adc
jg
xor
enter
adc
aaa
cmp
popf
adc
inc
or
je
dec
mov
sub
loopne
push
fcmovbe
cli
cwtl
cli
int
cmp
fld1
sub
rorl
push
stos
outsb
outsl
das
jno
fwait
mov
or
mov
icebp
mov
ret
setl
push
push
push
dec
cmpsl
js
loope
or
or
cli
scas
clc
std
cmp
and
cmp
adc
cmp
jle
xorb
fiaddl
jb
test
shll
fstpl
push
pop
xor
jae
cs
cmp
add
dec
ljmp
xchg
push
lods
mov
shl
pushf
push
out
out
fs
jmp
movsb
dec
ss
test
leave
mov
jo
cld
inc
inc
mov
sub
add
sti
sbb
je
int3
jne
insl
xchg
or
mov
dec
push
jmp
and
test
push
jns
fcmovu
fdivr
cwtl
shrl
enter
clc
out
pushf
add
mov
add
jnp
mov
lds
mov
mov
jmp
jl
xor
jb
outsl
jno
ss
ss
ljmp
add
push
inc
imul
mov
xchg
push
inc
into
adc
les
fisubrs
mov
sub
fsubp
add
ror
xchg
test
scas
in
jmp
or
mov
jg
xchg
or
jae
push
sub
out
clc
jg
jbe
negl
mov
and
fldenv
enter
dec
scas
mov
loope
push
jae
pop
pushf
add
sub
subb
adc
cmpsb
and
add
fwait
cmpsb
or
sbb
std
mov
xchg
and
adc
xor
into
test
inc
gs
bound
mov
push
loopne
sub
add
pop
stos
test
add
lods
es
mov
push
int3
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
enter
sbb
sbb
sbb
nop
fwait
sbb
xorl
cli
es
mov
sti
add
jb
xlat
push
sub
fistl
aas
shlb
inc
jns
mov
rcrl
pop
ja
mov
pop
std
push
ret
jae
dec
in
sbb
fldt
fmuls
mov
fdivl
xor
xor
push
outsb
std
sbb
adc
test
sub
pushf
add
adc
je
lock
sbb
pusha
clc
das
xchg
sub
lret
clc
test
shlb
xchg
mov
sub
fildll
xor
clc
cmpb
and
jl
imul
adc
adc
mov
dec
inc
ror
dec
push
sub
int
dec
jle
cmp
adc
xor
pop
in
dec
mov
ljmp
xor
cmp
mov
je
cld
jo
jle
jg
jmp
imul
stc
jmp
push
dec
ficompl
inc
js
icebp
jmp
cmp
ficoml
loop
or
jnp
sti
or
mov
add
add
push
mov
pop
adc
add
pusha
repnz
xor
imul
movsl
fdivl
ficoml
mov
push
lret
scas
ljmp
push
inc
outsl
sub
arpl
jl
int
or
dec
cmpsl
cli
in
stc
jle
sbb
or
sub
mov
sarb
sbb
mov
and
and
and
or
es
inc
call
outsl
or
arpl
stc
sbb
xchg
mov
fs
insl
or
mov
lods
jecxz
jecxz
cmp
sub
cmp
sub
fxch
mov
ss
push
xor
sbbb
movb
inc
jnp
dec
or
push
push
out
mov
adc
sbb
mov
sub
xchg
mov
into
xchg
movsb
cs
sbb
adcl
push
fbld
mov
jns
icebp
ljmp
jle
dec
iret
fsubrl
xchg
ss
mov
stos
mov
mov
adc
imul
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
cltd
jne
clc
push
ficoms
nop
add
sub
in
mov
int
popa
data16
das
xchg
push
jae
cmc
cwtl
icebp
in
test
pushf
pop
mov
jo
mov
enter
mov
adc
das
xchg
push
pop
jns
mov
es
xor
addl
adc
cmpsl
and
outsb
sub
push
jle
inc
inc
popa
xchg
jb
mul
xchg
xchg
rorb
iret
ret
push
jg
dec
push
push
cmp
mov
outsb
cmp
stos
in
ja
cwtl
andb
cmpsl
or
std
cwtl
add
pop
cmpsl
fistps
jb
mov
aas
je
add
jno
push
pop
cld
daa
xor
xor
sbb
add
push
loopne
popa
es
mov
das
mov
lret
sbb
ret
daa
jns
ss
or
pusha
mov
push
aad
stos
push
nop
lock
dec
mov
and
jb
dec
pop
push
loop
ja
lock
xchg
push
jae
repnz
jecxz
stos
js
and
idiv
sub
ficomps
and
sbb
sbb
icebp
mov
mov
mov
and
xor
mov
push
xlat
sub
mov
add
lret
out
movsb
mov
fcomi
mov
xchg
lods
fildll
inc
fisttpl
or
push
mov
pop
gs
or
or
test
fldenv
sbb
cmp
xchg
repz
add
bnd
adc
roll
add
xor
subl
lds
mov
je
add
cltd
xor
outsl
or
sbb
fnstenv
scas
cwtl
jmp
jl
in
push
xor
mov
lret
mov
adc
shlb
jne
aad
mov
push
sub
dec
insb
add
push
inc
lcall
test
xchg
in
sarl
mov
repz
scas
btc
dec
cwtl
inc
loopw
sub
jge
sti
push
jp
mov
and
dec
ja
fsubl
stos
mov
loop
sarl
add
std
loope
scas
mov
roll
stos
sbb
adc
and
imul
jge
inc
clc
loop
aas
and
aam
fadds
das
dec
dec
lret
sbb
shl
pop
into
stos
mov
daa
cmpb
pop
outsl
ret
cmp
pop
sahf
lods
aas
push
iret
jmp
cmp
in
mov
outsl
cld
ds
lret
and
xlat
mov
sarb
sarb
out
xor
and
scas
in
fstpl
dec
fldenv
push
mov
stos
imul
inc
loope
iret
and
das
mov
and
pop
lcall
cwtl
shlb
lock
xchg
mov
cmp
fmuls
adc
pop
stos
loope
stc
mov
data16
mov
sub
shl
shrl
pop
cli
xor
and
jbe
dec
adc
mov
and
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
xchg
mov
push
sbb
adc
sbb
aaa
pop
das
dec
out
xor
mov
test
sbbb
bound
aam
rorl
xchg
push
fdiv
adc
fs
lea
dec
outsl
in
imulb
out
fisubl
fs
cmp
es
xor
sbb
into
jnp
inc
repnz
in
repnz
stc
sub
cltd
das
or
test
cmp
push
dec
scas
xchg
mov
fisttpl
stc
popa
andps
xor
cltd
sub
pusha
shll
push
cmp
daa
cmp
xchg
or
je
inc
enter
add
cmp
or
jno
sbb
push
sub
push
sub
xchg
mov
mov
mov
dec
jnp
repz
into
jl
jb
scas
jg
pusha
retw
jns
xchg
leave
cld
popf
fucomp
adc
dec
jl
and
mov
xchg
push
xor
xchg
pop
push
repnz
mov
inc
jno
stos
test
sub
cmp
loopne
jmp
xor
push
push
xchg
xchg
xchg
ficomps
fists
movb
push
pushf
out
add
movsb
lea
add
jle
les
jae
loope
iret
imul
in
loopne
xor
fcoms
movsl
xchg
jle
and
nop
cmpb
xor
push
xchg
ds
xchg
jle
adc
sahf
mov
push
aas
push
call
popf
or
push
bound
ds
push
jb
mov
sbb
hlt
xchg
inc
xchg
jle
inc
sub
pusha
enter
pop
out
pop
mov
xor
cmp
mov
xchg
jne
push
addr16
dec
std
scas
mov
add
lods
idivl
jge
pop
add
popl
and
lods
and
inc
or
xor
jbe
or
addr16
repz
push
test
pop
test
test
inc
mov
pop
or
imul
push
mov
rclb
xchg
lock
mov
lds
push
jne
xchg
mov
jb
lock
or
jae
divb
ljmp
push
cmp
ljmp
addr16
push
add
ficoml
sbb
mov
mov
adc
push
sti
dec
pop
dec
dec
pusha
pop
fists
sub
push
fnstcw
aam
ss
jecxz
inc
adc
add
sbb
ret
das
xor
and
in
and
stc
ja
cmp
popa
ret
daa
push
xchg
xor
loopne
inc
aad
cltd
jg
ss
out
and
test
pop
fstps
jno
rcll
push
addr16
lods
xor
mov
out
add
mov
aas
push
cli
test
add
shl
clc
xchg
push
xor
mov
shrb
jns
xor
adc
pop
call
fs
frstor
jg
and
insb
pop
dec
insb
aas
cmp
add
xchg
jle
sets
lea
shlb
and
cmp
arpl
xor
lret
xchg
pop
dec
movsl
movb
add
xorl
and
ret
sbb
jle
mov
xor
add
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
pop
or
inc
or
sbb
adc
sbb
inc
testl
sbb
sbb
call
stc
imulb
mov
fistl
fcompl
roll
dec
push
scas
fwait
aaa
sbb
dec
data16
clc
dec
inc
icebp
test
sbb
sti
jbe
inc
movsb
push
or
mov
push
pusha
mov
insl
insl
add
mov
cli
inc
xchg
xor
and
cmp
movsl
jmp
popf
ljmp
insb
aad
push
loop
mov
cs
mov
lods
mov
dec
je
jbe
enter
lahf
cmp
xchg
xchg
mov
scas
shr
or
je
jns
fwait
int3
sbb
pop
dec
dec
and
mov
mov
int3
into
mov
cmpsl
mov
test
push
cld
mov
push
cmp
mov
insb
add
fsubrl
or
mov
sub
in
test
ja
pop
lcall
pop
cmp
addb
cmp
mov
mov
pop
fidivl
incb
inc
out
inc
cwtl
jp
test
jecxz
fwait
mov
jl
into
insb
xchg
add
mov
dec
jb
leave
cmpsl
out
jbe
mov
mov
test
dec
adc
xor
jmp
js
bound
and
in
push
rol
pop
sub
xor
pop
mov
adc
lock
dec
cs
mov
add
aaa
inc
ljmp
lea
js
mov
inc
out
std
fdiv
bound
push
pop
cmp
adc
push
or
sub
sti
sub
aam
push
outsb
mov
cli
nop
sub
mov
nop
jnp
imul
dec
addr16
xor
inc
sti
inc
cmp
push
jbe
pop
cli
or
ds
sbb
rcrl
mov
cld
insb
adc
lahf
jle
mov
jo
out
mov
out
or
inc
jg
popf
adc
lods
or
je
rolb
inc
push
push
bound
push
xor
lock
inc
inc
loopne
cmc
ljmp
cmc
int3
call
cwtl
cmc
pusha
and
lods
lea
pop
clc
scas
add
adc
clc
movsb
or
lret
in
add
push
popa
or
aam
je
idivb
and
bound
and
push
mov
mov
mov
out
loope
xchg
decl
imul
push
je
sub
fnstsw
jg
xchg
ss
sub
mov
xchg
fsub
push
xlat
sarb
jecxz
adc
outsl
lcall
xchg
jne
insb
dec
dec
leave
test
dec
push
xchg
pop
into
sub
cmpsl
dec
imul
pop
and
lock
adc
loop
sbb
mov
push
scas
mov
or
fs
rcr
arpl
dec
call
int
cld
xor
mov
pop
clc
out
and
xchg
aaa
inc
lds
out
push
repnz
sub
or
lock
sub
and
jo
movsl
jge
adc
fnstenv
imul
add
and
call
test
je
sbb
sub
addb
pushf
add
add
mov
push
in
xor
adc
push
sbb
adc
sbb
add
jecxz
inc
xlat
frstor
lahf
imul
clc
out
add
push
xor
std
loope
rolb
and
jbe
inc
jns
shl
sbb
fisubl
ljmp
xchg
into
or
shrl
lea
fcompl
sbb
mov
mov
nop
psrld
aad
mov
dec
xchg
sahf
inc
mov
xchg
push
testl
imul
out
mov
leave
jmp
sbb
sbb
stc
or
jl
sbb
dec
inc
jmp
xor
or
inc
clc
add
gs
pop
cmp
insl
cwtl
push
les
scas
and
movsl
or
sahf
test
push
stc
nop
or
fisubs
stos
stc
sub
daa
xorl
mov
adc
lds
aaa
roll
enter
or
sbbb
sub
shl
mov
push
fistps
xor
outsl
cmp
inc
imul
and
pusha
pop
cmc
mov
nop
mov
jmp
cmp
pop
leave
mov
xchg
test
cmp
test
andb
or
cmpsb
add
cmp
xchg
mov
lds
pop
or
cmc
mov
push
out
mov
int3
ja
push
xor
sbb
add
fstl
mov
push
shlb
outsb
mov
inc
sub
mov
and
and
pop
aas
sbb
loope
loop
testl
incb
cli
ljmp
movsl
inc
es
pushf
xor
fnstsw
mov
ja
sahf
popa
and
into
dec
add
jg
nop
pcmpeqw
mov
pop
mov
xchg
cmp
xor
cs
sub
or
add
popf
addb
and
xor
cmp
xchg
xor
fadd
pop
cmp
popa
aad
push
int
push
aaa
cmp
in
nop
sub
jg
outsl
ja
inc
mov
push
in
jb
push
cltd
fldt
ret
inc
jp
int3
add
ss
leave
push
push
mov
call
shrb
jge
cwtl
cld
cmp
jae
or
mov
movsl
mov
imul
outsl
sbbb
in
mov
adc
in
addl
test
pop
pop
arpl
in
int
jnp
popf
add
or
cmc
push
add
jno
jl
inc
stc
mov
dec
jnp
xchg
scas
or
jp
inc
dec
mov
push
movsb
push
aad
pop
out
sub
xlat
mov
in
loope
cwtl
pop
lods
mov
xor
enter
add
inc
fistl
mov
push
pop
pop
leave
inc
xor
test
ret
mov
sar
mov
insb
and
pop
push
call
je
cmp
das
or
outsb
jl
int
nop
mov
mov
xchg
inc
sbb
mov
xor
rorb
mov
sahf
out
mov
pop
jge
mov
outsl
dec
adc
data16
movsl
sbb
pop
cmpsl
add
adc
cli
sbb
cltd
mov
mov
ljmp
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
scas
push
sub
sbb
dec
sub
pop
sarb
repnz
and
xor
in
pop
fistps
mov
fildl
dec
dec
lea
mov
sub
out
ror
pop
repz
daa
xor
and
sahf
jmp
js
mov
out
lea
aad
sub
push
adc
into
roll
push
xor
movsb
adc
lods
cli
sti
jns
pop
sub
mov
scas
dec
div
dec
xchg
xchg
iret
dec
sbb
lock
dec
lods
sbb
popa
add
and
push
pushf
in
out
jmp
scas
fwait
lods
sub
imul
or
jecxz
sahf
cs
cmp
sahf
fwait
leave
sub
nop
xor
mov
popa
leave
lock
stos
loope
roll
std
dec
pop
or
aad
inc
je
mov
mov
xchg
fldl
inc
movsl
lcall
inc
jns
jmp
xchg
es
mov
or
scas
adc
adc
mov
ds
mov
icebp
adc
cli
es
add
scas
xchg
jmp
mov
hlt
loopne
arpl
lods
int
shlb
xchg
xor
cld
ljmp
dec
push
mov
insb
stos
mov
into
jp
sbb
ljmp
mov
push
les
orb
mov
mov
enter
jmp
push
mov
rcrb
into
xchg
xchg
cmp
push
ja
adc
daa
inc
jl
pop
mov
bound
inc
jb
mov
sbb
or
dec
xor
and
pop
dec
pop
add
leave
sub
arpl
cmp
clc
inc
pop
bound
ljmp
mov
jg
jno
les
in
add
int3
sub
nop
lods
jae
mov
in
cli
test
leave
inc
mov
mov
in
sub
inc
and
jbe
shl
xchg
mov
push
repz
and
sub
push
enter
lret
dec
xchg
icebp
pop
pop
imul
scas
sbb
inc
push
pop
mov
insl
sysenter
inc
iret
testb
test
mov
insl
and
in
jmp
fnstenv
jp
pusha
int
ds
push
rcl
cmp
sub
mov
xchg
dec
cmpsb
fnstcw
xchg
sbb
mov
les
test
fldl
jno
dec
jno
sub
sub
sbb
lock
pop
cmp
test
aad
je
push
clc
or
mov
dec
lea
adc
mov
movsl
cmc
mov
mov
sub
xchg
adc
out
inc
push
dec
shll
popf
adc
pop
and
mov
fs
push
sahf
sbb
add
cmp
lret
into
int
xor
xchg
add
add
test
scas
arpl
nop
stos
mov
xor
push
mov
dec
leave
sub
inc
fsubrl
sbb
pop
loope
pop
sub
adc
out
cmpsl
js
stc
lods
fmuls
inc
mov
adc
dec
dec
xchg
mov
int
sbb
testl
sub
and
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
je
push
sbb
adc
sbb
mov
lret
mov
and
xor
mov
pop
sub
jmp
pop
pop
nop
dec
cmp
in
mov
cmp
jno
sub
and
xor
push
cmpsb
xor
jp
mov
loope
add
data16
jns
or
xchg
dec
add
addl
rcrb
lds
loope
in
les
mov
push
pop
out
mov
sub
imul
adc
jnp
js
rolb
popf
and
sbb
loopne
sbb
jle
mov
jno
jle
sbb
mov
imul
daa
test
push
fistps
in
mov
adc
mov
mov
cld
add
and
xchg
cmp
cmpb
das
lea
jbe
idiv
xchg
xchg
mov
sti
adc
jmp
lret
dec
lods
pop
test
mov
add
pop
adc
iret
dec
into
loopne
pop
jbe
pusha
mov
xchg
mov
mov
mov
xor
aam
pop
clc
and
mov
sub
jae
push
adc
mov
sbb
fsub
je
and
and
das
arpl
jo
or
inc
and
aaa
sbb
pop
call
icebp
les
cmp
xlat
pop
mov
les
push
mov
mov
test
fcompp
jno
mov
js
xor
push
pop
sbb
and
cmp
dec
push
call
icebp
mov
xchg
into
sub
mov
outsl
push
mov
dec
mov
jnp
xor
shll
sub
mov
leave
fwait
xchg
call
xor
mov
imul
push
je
sbb
out
push
cld
sbb
lods
push
clc
add
imul
nop
cmc
xchg
adc
iret
cltd
push
mov
push
test
mov
jmp
add
pushf
mov
rcrb
mov
fld
mov
fdivrs
adc
pusha
and
xchg
and
sub
imul
sahf
mov
add
xchg
pushf
pop
loopne
mov
pop
lds
sbb
popa
mov
fisubrs
mov
cld
pop
xor
aad
push
hlt
pop
in
mov
and
movb
enter
insb
in
movsb
mov
mov
test
icebp
and
imul
adc
in
pop
ret
dec
xchg
inc
lahf
mov
cmc
inc
rorl
jmp
mov
cmp
adc
dec
fisttpll
add
addr16
sbbb
mov
add
jno
mov
out
dec
std
jge
fs
lret
fsubrl
sahf
ds
lea
stc
mov
aam
icebp
psrld
xor
mov
mov
jmp
test
mov
cli
xchg
cld
pop
jecxz
stos
inc
jb
lods
cli
insl
aad
mov
in
and
pushf
mov
pop
jb
inc
adc
inc
movsl
int
and
dec
mov
xor
jp
sub
dec
adc
sub
scas
es
add
js
sahf
out
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
adc
cs
xor
xlat
xchg
cld
push
std
inc
outsl
sub
inc
loopne
jne
outsl
fstl
and
in
sahf
cmpsb
negb
mov
shrb
addr16
adc
sub
insl
and
pushf
js
mov
cmp
popf
popa
sub
push
push
mov
pop
movsb
aam
loop
adc
sub
rcr
cmp
mov
mov
sub
mov
push
insl
popa
fisubrs
loopne
xchg
insb
imul
jg
or
cld
sbb
cltd
fnstenv
and
cmp
mov
xchg
sub
pop
push
test
movsb
xor
xlat
sub
daa
inc
and
rcrl
fcomps
inc
cmc
push
js
subb
jae
xor
mov
enter
inc
and
iret
insb
ja
pop
sti
fldl
cmp
popf
es
dec
into
pop
aad
add
loope
out
push
fs
enter
aad
fldcw
cli
pop
cmp
into
sub
mov
fisttpl
das
fisubl
jl
fdivrl
mov
mov
adc
pop
jp
jmp
clc
test
aas
pop
out
pop
cmc
mov
cmc
mov
push
cs
imul
jne
dec
dec
inc
xlat
je
push
insl
sub
jle
fdivs
mov
xchg
push
idivb
xor
in
jb
mov
xor
sbb
adc
insb
pop
movsl
push
mov
xor
mov
jmp
sbb
jo
movsb
idiv
push
imul
int3
sbb
insl
mov
pop
pop
movsl
jo
xor
dec
sbb
pop
ja
test
adc
dec
inc
jno
in
test
push
pop
mov
in
dec
mov
dec
repnz
mov
sub
jge
mov
andl
xchg
push
js
jmp
add
sti
jmp
mov
dec
rclb
es
icebp
aad
aam
add
and
out
jns
pop
mov
dec
and
popf
sbb
jbe
loopne
dec
or
inc
test
inc
lahf
jge
and
mov
or
in
mov
dec
pushf
pop
mov
jbe
mov
xlat
notl
bound
stos
push
adcb
or
sbb
cmc
cmp
mov
pop
mov
xchg
adc
arpl
xchg
ss
imulb
xor
or
sahf
jl
lcall
cltd
in
aam
jl
xor
jo
fsubrl
pop
pop
aaa
mov
clc
inc
pop
scas
pop
js
xchg
int3
inc
out
jg
cltd
mov
xor
out
mov
lock
xchg
adc
das
fdivl
xor
pop
mov
mov
cmp
ficompl
push
add
push
ret
pushf
in
mov
mov
pop
push
fcompl
push
stos
sbb
int3
test
cmpsb
push
lret
jp
mov
sbb
sbb
insl
mov
add
das
iret
dec
clc
xchg
rclb
repz
cmp
push
gs
add
ljmp
bound
mov
sbb
movsl
mov
mov
sbb
rorb
dec
insb
sbbb
nop
mov
repz
fnstcw
mov
into
int3
jnp
sbb
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
lea
aaa
push
jmp
sbb
scas
adcl
js
mov
stc
push
mov
xchg
enter
lahf
xchg
jae
push
push
sarb
cmp
cmp
in
enter
add
test
es
pop
dec
cmp
add
lcall
cmp
mov
pushf
scas
mov
out
push
aas
into
pop
and
scas
mov
sarb
adc
xor
out
xchg
inc
xor
imulb
sarb
fucom
jnp
fwait
adc
and
sbbb
cmp
das
nop
addr16
xor
jns
popf
jne
test
stos
push
and
mov
xor
das
lret
mov
jae
mov
lods
sbb
lods
dec
mov
mov
ss
inc
adc
sbb
lock
rcrb
lcall
test
sub
mov
inc
insb
xchg
scas
call
gs
inc
mov
stos
stos
lea
fwait
jae
jne
dec
mov
daa
insb
popf
mov
cmp
or
push
iret
cmpl
push
repz
mov
es
outsl
mov
inc
mov
or
int
inc
testb
and
imul
cmp
mov
jne
cmpsl
xor
cs
lods
add
and
push
mov
scas
sbb
pop
mov
inc
add
mulb
stc
es
pushf
daa
jns
bound
cwtl
add
sahf
add
add
sub
clc
inc
sbb
aaa
cmp
mov
push
xchg
jbe
shr
shrb
insl
lock
cmp
inc
movsl
push
sub
cmp
sbb
rorl
cmp
sub
clc
fwait
fwait
cli
and
inc
cmp
sub
lret
adc
stos
adc
sbb
addr16
push
mov
mov
fistpl
push
stos
lret
xorb
xchg
aaa
and
ret
push
daa
fs
insb
lds
jle
xchg
xchg
and
or
xchg
sbb
sub
data16
push
push
cmpsb
scas
push
mov
or
ret
xchg
jecxz
adcl
movb
scas
xchg
imul
inc
mov
mov
pop
ja,pt
outsb
push
push
adc
sub
xor
sub
mov
sub
insb
xlat
arpl
test
jns
stos
mov
cli
xchg
das
add
sbb
xor
and
lods
and
sbb
xchg
es
std
test
stc
fildl
insb
imul
fwait
sbb
mov
ficomps
sbb
pop
and
frstor
jne
lods
test
sub
mov
mov
pop
cltd
inc
dec
push
sbb
subl
jbe
in
loopne
add
dec
xor
sbb
mov
movsl
stos
cmpsb
fildl
fldt
mov
scas
dec
mov
mov
rcrb
sbb
sub
cli
subl
mov
std
lock
xchg
bound
add
push
loope
sub
lea
mov
adc
shll
jl
test
lods
inc
fbstp
fcoml
mov
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
lds
push
sbb
adc
sbb
dec
loop
or
and
pop
aas
jg
outsb
and
gs
cmp
jae
enter
lods
cmp
sub
out
xor
neg
jg
fstpl
inc
mov
mov
arpl
repz
jl,pt
lds
mov
pop
adc
aam
mov
icebp
outsb
add
out
lret
and
xchg
rcl
pop
jb
cmp
out
lret
rclb
and
mov
loope
out
push
aas
sbb
inc
jl
push
faddl
fisttpl
hlt
cmc
push
fs
std
andl
stc
xlat
pushf
cmp
sbb
sub
shlb
in
cwtl
inc
add
pop
add
leave
test
and
adc
sub
cmp
xchg
addr16
cmpsl
outsl
or
je
adc
negb
sbb
enter
inc
insb
and
test
in
pop
clc
ret
fwait
das
mov
enter
sbb
xlat
pop
inc
pop
js
pushf
jp
cmpsb
jge
aas
daa
ror
sub
jle
push
in
cld
mov
mov
out
imul
insl
nop
das
ret
nop
push
push
mov
sbb
imul
add
xchg
pop
incl
pop
xchg
jne
mov
pop
jg
call
mov
lcall
jl
fimull
ficoml
or
fwait
pusha
cs
push
push
cmp
pusha
rcll
fdivr
mov
mov
dec
mov
movsl
xchg
push
lcall
in
xor
movsl
lret
ss
iret
sbb
jo
mov
sub
stos
pop
test
mov
or
fstpl
push
dec
hlt
fstl
mov
outsl
sub
pop
hlt
push
sub
sub
das
jge
sbb
xchg
mov
or
jl
and
ljmp
adcb
test
fists
push
bnd
lods
mov
xchg
add
aam
jg
in
repz
cmpsb
fisttpl
cmp
sti
daa
sub
sbb
ret
pop
lret
mov
xor
cltd
mov
mov
lods
lret
inc
arpl
arpl
or
insb
mov
push
loop
clc
hlt
mov
mov
push
in
insl
test
inc
repz
loop
and
jge
lock
jb
sbb
push
mov
inc
cltd
mov
fstpl
inc
iret
lods
mov
aam
movsb
cmp
push
loope
mov
and
loop
xchg
in
dec
jg
call
fimull
clc
mov
sub
cwtl
xchg
repz
xchg
mov
push
roll
loop
nop
pop
jnp
xor
inc
dec
imul
jns
imul
test
sbb
dec
adc
cmc
fstp
dec
sarl
push
test
test
xor
movsb
push
push
in
or
cmp
jns
pop
loope
movsl
add
or
call
or
insb
jb
or
movsl
lret
dec
es
cli
mov
cmp
cmpsb
test
mov
nop
loopne
ret
lahf
stos
xchg
mov
lret
stos
and
lret
inc
outsl
repz
dec
and
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
mov
sbb
adc
sbb
sbb
mov
push
and
dec
addr16
xor
inc
lock
xor
stos
and
addr16
rcr
rcrl
sub
push
sbb
loopne
fldl
daa
sar
mov
stos
pop
cmp
sbb
jno
cmp
fxch
cmp
in
loop
jo
int
push
fsubrs
arpl
loope
test
std
movsl
loop
in
sub
ret
cwtl
bound
loopne
jecxz
push
inc
in
mov
push
mov
call
mov
mov
aam
jno
push
xchg
bound
bound
nop
push
and
pop
insl
sub
jns
dec
and
ss
sub
and
fwait
daa
jmp
aad
xchg
out
or
dec
mov
fwait
mov
shl
movsl
cmp
push
in
mov
mov
cmpsl
fs
out
scas
das
das
xor
push
pop
inc
rcrl
cmp
out
fsub
mov
jp
sub
xor
adc
add
xchg
jmp
rcl
cld
das
stc
mov
aas
dec
and
arpl
jae
xchg
aaa
cmp
push
loope
xchg
leave
sbb
mov
ret
aaa
dec
inc
test
jmp
pop
add
mov
mov
xchg
cmp
sbb
insl
mov
push
jmp
jmp
mov
dec
adc
jg
adc
pop
add
lock
int3
out
phaddd
jae
leave
cmp
pop
repnz
aad
in
popf
daa
aam
mov
subl
stos
mov
xor
cmpsl
and
pop
xchg
into
and
fsubs
mov
out
xchg
pushf
xchg
cltd
xchg
insl
enter
and
inc
adc
pop
jns
sbb
ficoml
cwtl
imul
adc
mov
mov
jp
add
add
push
xchg
jns
fnstsw
lret
sub
lods
inc
pop
daa
int3
std
es
or
cwtl
push
xor
rcrl
lds
mov
jns
loope
addb
pop
scas
mov
push
dec
pop
cmp
cmc
cmp
mov
xor
adc
out
push
scas
mov
sbb
xchg
add
and
sub
sub
pop
rclb
jne
daa
out
sbb
popf
loopne
mov
fistps
inc
sti
or
into
sbb
push
pop
or
popf
cmp
push
jge
mov
lds
mov
mov
mov
mov
cmc
jae
fbstp
and
lea
enter
lea
ja
inc
lods
push
xchg
aad
mov
fdivrs
mov
or
mov
mov
pop
out
js
outsb
dec
pushf
push
sub
movsl
jo
push
imul
add
int3
mov
pop
xor
lret
or
pushf
addr16
push
in
and
cli
cmc
cltd
mov
dec
pop
adc
add
jnp
push
int3
pop
shl
push
sarl
test
in
std
je
imull
js
xchg
dec
adc
out
shrl
sub
out
mov
add
add
cmp
mov
pop
das
negb
xchg
dec
fistl
xchg
fs
notb
int
dec
push
push
pop
adc
sbb
or
cmp
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
push
pop
repnz
rcll
sbb
adc
sbb
or
and
cmp
pop
and
pop
sbb
fidivrs
arpl
fnstsw
mov
cmp
daa
imul
dec
push
jns
inc
xchg
outsl
stos
adc
vpsrlw
xchg
mov
cli
cmp
add
movsl
mov
jg
jge
outsl
cmpsl
mov
xor
cld
xchg
ds
mov
pop
out
xchg
xor
mov
ret
or
pushl
sub
push
dec
mov
dec
mov
and
sbb
cld
rol
out
inc
xor
mov
js
mov
repnz
call
outsb
mov
mov
mov
idivb
fstps
std
jb
mov
sub
pop
lea
gs
sub
cli
int
push
mov
mov
into
mov
mov
insl
mov
int
mov
dec
stc
dec
icebp
or
flds
hlt
testl
dec
sbb
jg
mov
insl
cmp
adc
cs
lds
jecxz
daa
xor
ljmp
loop
jae
dec
ja
xchg
fbld
cld
push
and
fcmovnu
out
ds
mov
push
jae
mov
sbb
cmp
pop
int
ljmp
adc
push
dec
ss
out
imul
daa
jecxz
sbb
and
icebp
xor
lret
lea
shl
add
das
enter
flds
addl
test
movsl
and
icebp
adc
pop
fisttpl
mov
loopne
jp
and
aam
or
insl
xlat
dec
cmp
int
lret
cmp
xchg
jo
xchg
loop
lds
and
mov
movsl
in
insl
jne
adc
cmc
frstor
test
xchg
cltd
adc
test
and
ret
iret
xchg
out
push
inc
aas
insl
into
and
and
adc
rcl
sbb
mov
mov
in
sbb
mov
xchg
rcll
daa
xchg
jbe
loope
cmp
movsl
pop
pop
mov
inc
or
sahf
sbb
jg
loope
insl
mov
mul
mov
popf
push
push
or
pop
std
push
loopne
in
and
sti
xchg
pop
push
xor
sbb
fidivs
call
iret
decb
dec
xlat
jp
pusha
sbb
mov
jb
shlb
xor
jno
dec
mov
outsb
mov
add
pusha
stc
cld
lds
push
ljmp
dec
mov
es
push
sub
scas
push
popa
add
test
mov
pop
add
inc
dec
push
jl
push
dec
out
cmp
jmp
jns
xchg
shlb
cmp
mov
mov
mov
into
adc
shll
adc
gs
inc
rcr
push
dec
outsb
out
push
movl
cmpsb
mov
jo
jle
sti
outsl
repnz
shrb
xchg
test
out
gs
or
inc
push
orb
sub
mov
fwait
scas
mov
mov
add
cmp
inc
and
or
in
xchg
jmp
pop
imul
ljmp
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
xor
sbb
adc
sbb
push
jecxz
rclb
shll
sub
mov
jg
sub
adc
sub
fwait
shlb
mov
idivl
mov
leave
outsl
add
repz
pop
xor
jmp
addb
pop
or
cmp
aas
ljmp
mov
or
fyl2x
inc
ret
or
sbb
jo
call
enter
es
andl
ror
orl
rcr
mov
pop
adc
aam
sub
ret
idivb
pop
push
enter
cmp
sbb
repz
push
xchg
mov
cltd
out
int3
sub
pop
std
insb
push
add
pop
repnz
clc
frstor
dec
into
mov
pop
dec
push
cmp
jecxz
add
fidivrl
mov
mov
aad
sub
inc
adc
and
ds
dec
mov
cmp
test
clc
sub
cltd
pop
pop
cmpsb
mov
dec
jns
xchg
jge
test
mov
pop
pop
popf
fsubl
es
jmp
loope
out
xchg
fdivl
ljmp
cmpsb
dec
push
lahf
das
and
adc
push
add
jno
jmp
test
in
mov
jns
ret
stc
push
sub
js
push
dec
movq
sbb
pushl
xchg
outsl
lret
les
jae
sub
mov
jns
sar
pushl
lea
mov
fcoml
inc
lods
std
and
jmp
add
jo
mov
xchg
xchg
ret
test
sub
fwait
pop
mov
jle
xacquire
cmp
pop
in
sub
add
ljmp
or
mov
inc
std
add
add
sar
jnp
in
fsubs
cmp
ja
int
push
fwait
lea
xor
ja
pop
mov
fmull
test
mov
and
addb
push
mov
movsb
loopne
cmpsl
push
lret
mov
lahf
push
xor
and
pop
in
inc
pop
addr16
push
cmp
xchg
cmp
movsl
xchg
sbbb
sbb
mov
sahf
add
fcom
sub
add
sbb
jae
addr16
test
in
lock
sub
cmc
int3
mov
cmpsb
mov
mov
cmpsb
lea
xchg
xorl
push
rolb
pusha
jo
sbb
xchg
inc
mov
pop
decb
call
ja
fnsave
scas
call
xor
mul
cmpl
loopne
cmp
xor
sbb
sahf
or
dec
pusha
pop
inc
mov
cmpsb
ficoms
sub
xor
bsr
push
jl
add
inc
pushf
in
xchg
push
test
loop
ss
iret
mov
es
imul
mov
mov
aas
dec
sbb
inc
arpl
xor
mov
insb
push
push
out
fs
push
or
cmpsl
jns
mov
mov
pop
or
mov
pushf
xor
les
cli
fisubrl
or
jmp
push
pop
shll
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
xchg
jle
lds
sbb
adc
sbb
idiv
insb
sub
jbe
dec
add
jns
add
outsb
pop
pusha
insl
mov
sbb
lahf
pop
push
aaa
fcompl
cmpsl
fidivrs
mov
sbb
pop
sbb
lcall
fwait
in
stos
sbb
imulb
xchg
repnz
jbe
popf
fs
shll
cmpsb
pusha
mov
test
and
ret
mov
inc
imul
enter
test
std
aas
adc
mov
scas
in
shrl
mov
lret
xchg
mov
cmp
push
inc
mov
adc
add
dec
mov
rclb
cs
mov
imul
add
arpl
mov
shl
orb
pop
ret
in
std
sbb
ja
push
test
jecxz
inc
jecxz
mov
xchg
dec
add
ret
mov
test
fimuls
mov
cmp
inc
push
test
dec
push
pop
cmpsb
or
popf
jmp
std
fldenv
mov
call
repnz
pop
push
adc
call
jmp
aam
lods
mov
pop
mov
lock
ret
or
repz
out
iret
aaa
int
dec
clc
mov
xor
push
js
aad
pop
mov
push
rorl
pusha
mov
adc
sbb
divb
out
mov
pop
mov
or
scas
out
sbb
cli
mov
adc
fnstsw
int3
loopne
adc
bndldx
adc
popa
pop
sbb
sub
sti
cmpsl
xor
sub
ficoms
cmpsl
and
notl
xor
mov
jp
lahf
jnp
mov
nop
and
cmp
je
popa
mov
addr16
push
loopne
fldcw
cli
inc
jge
lret
shlb
sub
pop
jle
shll
cltd
cmpsb
adc
in
xchg
orl
xor
push
jnp
sub
inc
ljmp
movsl
pop
cltd
arpl
gs
js
inc
jl
stc
cmpsb
mov
out
cmp
push
jne
cli
mov
mov
add
xchg
andb
adc
pop
push
loope
rolb
repz
mov
pop
cmp
push
rcrl
push
cld
fs
jle
xor
xor
inc
pusha
scas
cmpsb
xor
push
sbb
jmp
in
out
cmpsb
mov
das
inc
pusha
push
jnp
rorb
aad
je
lahf
xor
cmp
imul
jg
icebp
push
sub
dec
loope
fisttps
fcomps
xor
pop
cmpsb
jo
mov
cmp
mov
mov
push
jo
and
outsb
push
aaa
lock
xor
je
lods
lock
je
add
hlt
dec
pop
rcr
and
pop
test
jnp
shll
loop
push
or
mov
sub
loop
cli
je
and
push
rolb
pop
iret
inc
fsubp
jmp
xor
pop
jle
rcl
in
jne
mov
iret
and
or
std
outsl
aaa
jb
push
addb
mov
or
ds
cmp
or
jmp
mov
daa
xchg
jnp
insb
push
scas
test
aas
fdivr
push
lcall
pop
sbb
sar
out
push
out
jl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
jle
mov
sbb
out
cmc
divl
subb
sahf
mov
fs
xor
out
scas
sbb
sarl
mov
mov
mov
sahf
dec
mov
leave
data16
cmp
jne
ss
inc
cmp
dec
in
jae,pt
mov
fstl
xchg
push
cmp
sub
sti
aas
push
add
repz
pop
mov
or
divl
fmul
xchg
ror
fwait
leave
aam
push
shll
pop
mov
adc
dec
inc
je
xlat
pushf
dec
shrb
pushf
jl
int3
push
sub
shl
sub
push
jne
adc
inc
ja
sarl
adc
xchg
mov
mov
popf
neg
add
push
push
mov
lret
inc
sbb
loopne
xchg
cmpsb
mov
mov
fs
jo
iret
fsubr
pop
imul
jmp
dec
imul
mov
inc
sbb
popf
sub
sbb
jbe
mov
add
push
dec
leave
shll
push
push
xor
ja
and
repz
dec
mov
call
loopne
daa
jmp
gs
xor
jmp
cmp
add
out
bnd
cmp
sarl
scas
rcrb
inc
xchg
bound
and
cmp
jo
push
mull
and
ljmp
cli
arpl
aaa
cmc
dec
dec
out
push
test
mov
fs
sub
imul
addr16
arpl
je
outsl
pop
aaa
mov
jp
sbb
iret
das
xchg
xchg
push
mov
shl
jno
in
cld
pushf
push
sbb
cltd
push
rcl
add
sub
mov
cmp
xor
sbb
shl
enter
fcomip
cmp
push
sarb
sbb
sub
jnp
mov
les
adc
push
mov
aad
or
std
mov
xchg
iret
inc
bnd
and
dec
cli
std
jp
xor
js
es
inc
pop
mov
push
xchg
sbb
fwait
cwtl
fsubl
sbb
adc
mov
cmp
mov
pop
int3
imul
xchg
jbe
push
cld
mull
pushf
push
popf
mov
lcall
cmp
pop
imul
mov
inc
lea
test
out
mov
jbe
jne
jo
jge
mov
pop
imul
jge
pushf
mov
into
pop
out
std
inc
xchg
scas
dec
stos
mov
fs
fdivl
aam
xchg
imul
push
lea
mov
adc
fsts
leave
mov
sarb
fwait
mov
jle
int3
dec
mov
mov
mov
lahf
insl
xorb
std
push
add
or
xor
rorl
jno
xor
push
push
inc
jbe
rcrb
lods
inc
cwtl
sbb
mov
inc
xlat
xchg
pusha
cmpsl
and
or
pop
sub
fisubs
sbb
cmp
rcll
inc
add
ja
pusha
push
fsubrp
pop
add
scas
loopne
in
shl
pusha
test
cwtl
sub
in
insb
or
or
lods
cmpsl
fdivl
pusha
jmp
inc
mov
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
rolb
cmpsl
mov
cmpsl
sbb
push
aaa
or
sub
lret
pop
out
popa
and
lcall
fldt
or
sbb
pop
scas
aaa
fnstenv
cmpb
icebp
lret
call
lret
and
arpl
push
arpl
pop
fsubl
clc
jmp
shl
inc
je
int
int
or
fsubl
lahf
fisttpl
add
leave
ljmp
aam
scas
push
bound
adc
aaa
cwtl
sbb
and
scas
ds
leave
sbb
pop
jo
jns
mov
cwtl
mov
sbb
sahf
pop
inc
mov
out
aam
sti
insl
cmpsb
shrb
sub
and
rol
sbb
cmp
mov
test
and
enter
das
mov
outsl
cmp
mov
cs
jnp
stos
pop
mov
mov
push
data16
lds
ss
shll
mov
fs
sti
add
in
xchg
fsubrl
sub
xchg
dec
xor
mov
ds
mov
js
nop
repz
gs
xchg
pop
loope
in
cmpsl
mov
xlat
in
cmp
or
cwtl
add
xor
mov
xor
pop
inc
xchg
add
push
jb
bound
js
jb
pusha
repnz
enter
das
movsl
fidivrs
or
loope
scas
pop
add
jno
sbb
dec
repnz
mov
pop
daa
out
sbb
xchg
leave
dec
leave
mov
xor
mov
icebp
les
or
negl
lret
push
mov
loope
dec
sbb
xchg
push
jmp
lret
push
jns
push
negl
sbb
mov
das
add
inc
pop
xchg
mov
arpl
mov
cli
pop
or
cltd
pop
aaa
pop
mov
jno
aaa
sub
scas
inc
mov
adc
mov
xchg
inc
push
leave
add
incb
cmc
mov
dec
inc
xor
sti
adc
lods
andl
je
in
gs
out
out
xchg
push
test
in
xor
dec
dec
ret
mov
hlt
xor
adc
inc
sbb
int3
jge
pop
mov
scas
sbb
add
cltd
sti
mov
xchg
dec
xchg
arpl
loope
mov
dec
int3
bound
pop
test
dec
push
popa
jl
dec
insb
pop
leave
loope
jg
cwtl
dec
jecxz
daa
js
dec
jecxz
mov
mov
sub
popa
dec
int3
test
jl
push
jmp
ret
repnz
lret
imul
or
sub
jno
fidivrl
pop
pushf
jnp
in
testl
dec
cmp
ds
inc
repnz
sbb
push
sub
xchg
xlat
ret
sahf
icebp
cli
fildl
lock
push
mov
sbb
cmp
mov
or
fisttpll
cmp
xor
aam
mov
ret
add
add
sti
sub
shrb
mov
or
and
fmuls
dec
sub
pusha
inc
pop
adc
mov
scas
mov
jmp
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
and
lahf
jle
imull
in
movb
stos
push
ds
add
mov
loop
push
or
jmp
mov
mov
setae
loop
lods
sarb
mov
cmp
pminsw
jno
ror
out
mov
or
repz
sarb
fldl
icebp
add
push
mov
sbb
push
inc
mov
icebp
push
loope
xor
dec
loop
xchg
xor
sub
daa
mov
stos
xor
cmp
call
pop
pop
and
rcrl
pop
fwait
ja
or
nop
insb
sbb
sahf
stc
pusha
add
insl
test
shl
xchg
push
pop
cld
das
sub
xor
add
cs
lds
sti
pusha
out
jg
mov
movsl
push
test
fildll
fwait
movsb
in
and
mov
sti
ffree
lahf
testl
mov
faddl
outsl
fucomi
mov
stc
popf
mov
sti
in
mov
push
sub
ret
mov
aas
add
xchg
or
dec
mov
inc
jns
pop
dec
xchg
jmp
inc
push
cmp
mov
sbb
xchg
fistpl
rcrl
neg
test
sbb
arpl
mov
push
loop
cmpsb
bound
mov
or
xorb
sbb
sbb
xchg
push
cmp
cmpsl
imul
pop
fwait
js
fimull
sub
jns
lods
adc
push
xchg
xor
and
insb
js
sub
mov
pop
imul
adc
sbb
roll
adc
les
and
jl
sahf
xchg
lret
dec
jmp
loope
cli
repnz
xchg
cmc
ret
je
xchg
pop
lods
pop
xor
imul
insb
jbe
int
pop
or
jp
jns
sub
mov
adc
push
push
and
outsl
sub
xchg
sbb
jl
push
jmp
mov
lahf
xlat
enter
mov
cli
stos
mov
adc
push
pop
fldl
sbb
stos
imul
mov
xor
into
push
movsb
pop
or
xor
je
cs
mov
xchg
imul
jle
shll
cs
jne
jbe
mov
pop
sbb
jl
mov
jns
or
jno
lret
pop
andl
vcvttsd2si
mov
loope
movsb
into
pop
lret
mov
inc
leave
leave
lcall
jl
pop
loopne
mov
jb
pop
out
inc
insl
hlt
mov
or
mov
outsb
cmp
fcompl
push
insl
sbb
sbb
inc
adcb
lea
ftst
mov
pop
test
adc
mov
jge
push
les
orl
inc
loopne
mov
daa
adc
push
sub
push
mov
ds
mov
scas
out
mov
inc
adc
xor
jle
dec
push
mov
xchg
cmp
mov
or
push
incl
aaa
leave
xchg
pop
push
jecxz
mov
mov
dec
xchg
adc
out
xlat
jmp
sbbl
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
je
jnp
inc
test
sbb
push
jbe
das
in
mov
pop
cmp
insl
dec
lret
mov
lret
push
xlat
pop
movsb
and
test
testb
cmpsl
mov
repnz
xor
xchg
sbb
pop
repnz
out
sub
mov
jmp
jecxz
inc
inc
adc
add
mov
lods
push
mov
in
bound
sbb
daa
loop
or
mull
int
je
sbb
mov
or
dec
push
push
insl
push
adc
add
cltd
lahf
subb
mov
pop
out
rcrb
lock
push
cmpsl
int3
sub
mov
dec
icebp
mov
iret
ret
testl
adc
pusha
mov
fwait
repnz
push
push
adc
lds
inc
xchg
mov
and
pop
scas
xchg
xorl
mov
sahf
xchg
mov
dec
mov
test
pop
lret
in
push
xor
rcrl
ja
push
outsb
leave
push
imul
outsl
pusha
stc
addr16
fcmovnbe
outsl
roll
sbb
mov
sbb
mov
push
js
shlb
test
fsubr
mov
jmp
clc
cmc
mov
pop
popf
inc
push
in
xchg
int3
or
lcall
loopne
in
cmp
xchg
outsl
dec
xor
popa
cmpsb
int
xchg
cmp
jl
mov
mov
cmp
addl
add
in
lea
xchg
stos
xor
mov
js
cmp
adc
test
jne
adcb
in
push
sbb
fisubrl
xor
addr16
sub
adc
mov
sarl
fildl
sti
lahf
mov
sbb
cld
xchg
test
xchg
pop
ja
jo
xchg
out
mov
mov
enter
adc
mov
xchg
cmp
imul
jg
jge
rcll
mov
into
xor
outsb
shr
and
push
aaa
or
adc
push
jbe
mov
ljmp
mov
cwtl
in
out
inc
lock
push
shlb
test
les
push
or
clc
ret
aas
test
xor
xchg
adc
mov
call
incl
cmc
shrl
push
popa
outsb
lock
cli
jmp
and
jo
and
rol
lods
xchg
xchg
sub
test
fdiv
fidivl
and
lcall
fucomi
adc
pop
pushf
add
xchg
pop
cmc
and
andl
je
add
push
es
in
orl
or
out
lods
and
xchg
sbb
jno
push
mov
jns
mov
add
add
mov
push
sub
inc
shll
add
push
ljmp
and
or
addb
dec
jmp
add
fistpl
or
fwait
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
pop
jns
jl
mov
sbb
outsb
pop
and
imul
fsub
pop
outsl
cmp
jmp
scas
sbb
in
popa
test
add
ret
mov
cmpsl
sbb
in
sbb
xlat
or
xor
fdivrl
aaa
in
lcall
xchg
add
mov
xchg
imul
pop
push
add
cmc
mov
cli
int
push
les
dec
dec
out
into
fnstsw
repz
dec
push
out
pushfw
or
mov
dec
nop
outsl
fistl
jno
sbb
sub
testb
inc
xchg
scas
pop
hlt
jl
outsl
push
outsl
inc
mov
xor
negl
or
test
insl
dec
inc
jbe
pop
or
insb
lods
mov
mov
mov
ret
and
mov
adc
adc
lcall
in
js
jle
jmp
lock
dec
cmpsl
cld
nop
das
mov
mov
lods
pop
rolb
rorl
mov
sahf
stos
add
ret
pop
push
mov
stc
cs
sti
push
outsl
push
dec
notb
fwait
dec
add
pop
lds
xor
aad
jg
mov
test
mov
add
fisttpl
cmp
popf
cmpsb
into
sbb
stc
jne
lea
stos
inc
loopne
out
pop
int
mov
test
lods
push
in
sbb
stos
jne
les
outsb
jl
push
lds
sub
stc
cmp
sti
testb
push
in
mov
popf
ret
fstl
sahf
ror
mov
cld
mov
mov
cmpsb
ds
repz
sub
pop
mov
xchg
push
sub
rorb
cltd
or
mov
mov
inc
mov
mov
sub
dec
push
icebp
mov
dec
out
xchg
push
xorl
ret
out
push
push
fidivl
sub
pop
pop
loopne
or
push
cmc
push
out
fbstp
je
push
inc
or
mul
mov
adc
fistpl
add
cmp
nop
mov
push
adc
rsqrtps
inc
into
or
push
mov
cs
js
cmp
lret
xchg
push
dec
xor
xchg
cld
dec
sbb
and
cmpsl
inc
dec
fadd
xor
fstps
imul
push
cmpl
scas
adc
aaa
mov
bound
jb
vmwrite
sbb
stc
js
or
mov
and
in
mov
movsl
int3
lods
xchg
xor
push
addl
dec
vmread
jne
test
stc
and
xlat
dec
mov
cmp
mov
clc
add
in
sbb
fidivl
call
mov
xchg
inc
loop
hlt
jmp
push
roll
fs
pushf
mov
out
mov
adc
popa
sahf
bound
and
mov
js
cli
scas
add
insl
imulb
inc
mov
adc
push
push
iret
loopne
fnstsw
int3
ljmp
and
lock
xchg
fisubs
pop
arpl
pop
or
xor
cmc
xor
push
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
addl
fwait
push
sbb
adc
sbb
mov
fildll
mov
imul
jmp
aaa
push
pushf
cmp
mov
pop
stos
and
rcl
sub
shrl
cmp
jecxz
pop
and
enter
xor
pop
or
dec
mov
xor
sub
cltd
adc
fwait
cmpl
sti
xor
pop
dec
pop
xor
add
mov
into
scas
pop
scas
push
pop
or
push
xor
pusha
mov
cmp
dec
imul
addr16
imul
xor
and
aad
rcr
stos
int3
sub
and
popa
jns
insb
hlt
xchg
jns
les
xchg
jo
mov
icebp
push
dec
scas
lea
pusha
movsl
mov
adc
mov
in
mov
sbb
subb
pushf
hlt
clc
inc
rolb
mov
add
inc
push
test
jecxz
jo
mull
pop
sub
sbb
fsubr
test
les
jns
adc
insb
imul
int3
nop
fcmovu
out
mov
fcomps
xor
test
imul
ds
das
loop
push
int
mov
mov
pop
stos
ret
pusha
mov
je
clc
jbe
jmp
xchg
jnp
test
shlb
push
add
test
mov
push
in
icebp
lea
dec
adc
shl
xchg
in
jp
cmp
cltd
orl
xor
subl
jp
push
hlt
dec
adc
sbb
hlt
pop
nop
push
insb
dec
push
adc
adc
xchg
and
and
mov
mov
int
or
cmp
fsubs
ds
push
mov
insl
dec
adc
adc
pop
jae
repz
or
xor
pushf
bound
fadds
fwait
mov
pop
add
hlt
push
mov
jcxz
insl
sub
fdivrl
es
adc
stos
mov
sub
mov
in
pop
jl
outsb
and
icebp
fwait
std
pop
fbld
clc
mov
dec
jge
fistpll
aas
mov
xchg
popa
pop
xor
lods
pop
jbe
dec
pushl
adc
in
cmpsb
mov
pop
int
push
movsl
ja
inc
mov
mov
mov
cmp
out
ret
loope
mov
xor
leave
mov
divl
or
xchg
push
mov
aaa
adc
outsl
imul
jnp
ljmp
pop
notl
or
call
jne
fildll
mov
cwtl
dec
rol
fwait
nop
push
cmp
jo
push
in
cwtl
cmp
out
mov
gs
in
daa
mov
xchg
adc
shr
faddl
insb
mov
add
gs
int3
test
movsl
push
xor
jno
dec
inc
call
out
adc
push
in
out
testb
xchg
inc
jae
lea
popa
dec
out
or
pop
xor
sbb
imul
lret
pop
push
clc
in
sbb
lea
test
mov
icebp
aam
add
mov
add
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
sbb
push
xchg
push
sbb
adc
sbb
dec
iret
sub
mov
lret
rol
dec
mov
bound
xchg
mov
cmp
dec
enter
mov
ss
or
stos
shrb
mov
xchg
jge
ret
mov
xor
cmp
and
add
outsl
pop
insl
jg
xor
jmp
dec
adc
add
cmc
cmp
jb
add
inc
sbb
cmp
in
cmp
mov
push
sbb
sbb
pop
or
loop
pop
push
jns
sub
sbb
insl
pop
mov
stos
test
ja
inc
gs
cs
xor
mov
sub
stos
es
pop
lods
jns
in
jns
lock
xor
sbb
ljmp
int
mov
xor
cmp
lret
or
loope
jnp
push
das
fs
mov
xchg
xlat
sbb
stos
ret
or
out
xchg
pop
pop
out
jl
push
xor
or
push
pop
lock
rol
mov
mov
pop
loopne
jbe
fs
fs
call
xor
bound
cs
xlat
pop
jns
repz
cltd
add
mov
push
lret
add
sahf
std
jg
movsb
in
push
test
xor
out
mov
cmpsl
mov
test
fiadds
cwtl
adc
and
mov
jge
mov
sarb
mov
xor
add
xor
sti
dec
mov
lea
cmpsl
pop
jmp
xor
jbe
fisubrs
mov
loop
add
jb
xchg
loope
mov
inc
shl
sub
fnstcw
out
mov
popa
dec
imul
enter
call
sbb
xorl
xor
scas
dec
adc
js
sub
ret
aad
imul
adc
mov
add
int3
outsb
mov
mov
push
fistpll
dec
cwtl
jmp
mov
jecxz
test
mov
inc
inc
into
clc
pop
int3
mov
and
fs
ret
repnz
xchg
out
das
enter
mov
jle
repnz
lahf
jecxz
mov
sbb
out
cmpsb
mov
cltd
mov
add
sbb
test
xorl
rol
js
push
data16
test
rep
rcl
xchg
ja
jae
in
out
into
inc
jl
sub
mov
leave
sbb
push
hlt
pop
and
and
or
mov
test
cmp
out
cmpsb
inc
invd
pop
jno
mov
push
or
inc
jae
xchg
ret
jbe
mulb
push
aas
pop
lds
scas
pushf
sahf
dec
add
into
sbb
push
adc
movsl
jge
lahf
sahf
fwait
gs
sub
and
and
popf
arpl
movsb
fimull
in
xchg
test
cmp
pushf
mov
ljmp
mov
pop
in
mov
movsl
shrb
push
mov
je
or
movb
mov
es
fstpt
outsl
pop
into
insl
sahf
push
mov
jmp
es
mov
pop
fstpl
inc
adc
sbb
popa
mov
out
js
pusha
inc
test
push
sub
or
inc
ret
mov
mov
xchg
xchg
sub
push
dec
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
or
push
sbb
adc
sbb
jle
push
and
adc
mov
xor
fistps
out
or
and
dec
mov
xchg
xor
je
int
xchg
ret
adc
aad
outsl
repnz
and
pop
sarb
andb
jle
divb
arpl
ret
mov
scas
push
sarl
jne
ja
ret
mov
push
xor
xor
insb
inc
dec
in
rorl
mov
outsl
mov
iret
xchg
negb
xchg
jle
lret
popa
mov
test
dec
movl
xchg
pushf
or
inc
sbb
rcrb
movsb
imul
in
pop
sub
xor
les
jp
jne
mulb
xlat
clc
mov
es
cmc
mov
out
dec
mov
jb
jo
shl
inc
pop
pop
xchg
add
cmp
cwtl
xor
out
xlat
or
xor
flds
mov
outsb
inc
inc
leave
xor
push
add
push
mov
pop
js
sbb
or
dec
cmpsb
mov
mov
pushf
sahf
and
and
fldl2t
scas
into
arpl
nop
loop
adc
aaa
mov
push
xchg
movl
call
push
mov
cmp
cmp
movsl
cmp
scas
mov
lea
inc
movl
adc
loope
xor
aam
stos
mov
shlb
push
xchg
cwtl
adc
fsubl
insb
popa
push
scas
mov
or
enter
push
repz
data16
addr16
cmc
push
imul
add
test
pminsw
adc
fistl
xchg
outsb
jl
pop
mov
xor
popf
xor
movsl
mov
adc
sbb
sbb
jae
adcl
xor
mov
xor
xchg
inc
mov
ss
mov
adc
loope
rorw
ds
xor
sub
push
in
push
outsb
popa
mov
adc
xchg
imul
movsb
sbb
xor
pop
pop
lods
sbb
and
mov
sahf
fwait
inc
and
sub
xchg
xchg
sti
xchg
push
hlt
out
jmp
mov
mov
xchg
pop
xchg
cmp
stc
mov
cmp
call
cmp
jge
cmp
or
insb
cmp
adc
mov
les
repnz
mov
cli
mov
adc
add
xor
fdivs
mov
mov
or
push
shl
stc
pop
push
outsl
in
dec
inc
adc
mov
jmp
cs
stos
stos
push
fdivl
loop
or
in
xchg
pop
ret
stos
je
sub
or
ret
adc
popa
mov
faddl
aad
xchg
sub
inc
mov
mov
jge
in
cmp
or
in
flds
push
fsubrl
ja
out
cmp
sub
cmpsl
jne
or
into
aas
or
cld
dec
dec
cmp
and
adc
pop
lock
inc
ret
ds
or
adc
pusha
mov
add
cmpsl
and
inc
sti
pushf
fisttpll
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
cld
scas
iret
jo
xchg
sbb
adc
sbb
test
xor
scas
stos
mov
xlat
imul
xchg
repnz
xchg
xor
push
sbb
scas
mov
xor
or
and
cmovno
addr16
jae
pop
shlb
jge
movsb
hlt
je
cwtl
or
hlt
jle
cmp
outsl
adc
hlt
cmpsb
imul
jo
aad
das
mov
inc
dec
jp
int3
xor
jnp
testl
and
or
xlat
ljmp
pop
push
scas
mov
cmpsb
mov
push
pusha
mov
imul
jne
xor
cmp
mov
mov
loop
in
adc
add
test
xor
xchg
push
cli
es
rolb
mov
inc
add
mov
add
stos
or
or
or
add
cmp
xchg
dec
fdivs
pop
mov
pop
jmp
rorl
xchg
scas
ficoml
sbb
lahf
add
add
cmpsb
dec
pusha
cld
xchg
dec
and
imul
adc
clc
fld
or
adc
push
jae
in
loop
xchg
addr16
aaa
jl
out
or
pusha
mov
mov
push
push
mov
popa
jp
or
int3
jb
pop
ret
jnp
aaa
jno
cwtl
shlb
lret
add
jae
add
jo
pop
xchg
ds
and
in
fildll
mov
sti
sbb
push
cmp
fs
mov
fimull
fcompl
adc
sbb
lea
dec
or
and
mov
adc
fisttpll
daa
lret
cmp
shlb
xchg
dec
sub
pop
mov
adc
sbb
adc
ret
popf
add
dec
fcompl
pop
lcall
add
daa
outsl
pop
ja
jae
xchg
aam
pop
jbe
mov
arpl
je
push
fistpl
cmpsl
in
ja
add
and
test
cmp
icebp
inc
ja
mov
leave
xlat
rcr
inc
add
fistpll
fwait
pusha
aad
inc
in
rclb
scas
cmp
loopne
and
or
pop
out
dec
inc
popf
xchg
push
sbb
sbb
mov
push
test
xor
fidivrs
inc
lcall
sbb
outsl
mov
sti
or
bound
repnz
sub
pop
push
xor
test
iret
adc
mov
cmp
loop
ret
in
mov
testl
lcall
jb
push
pop
mov
in
add
add
pop
sub
lds
push
lods
sub
repz
xor
mov
mov
dec
mov
adc
xchg
inc
dec
in
imul
xchg
pop
mov
push
adc
mov
mul
lds
jmp
lret
jge
mov
cwtl
sub
cmp
dec
outsb
push
and
xchg
push
repnz
jo
sub
jl
xor
repz
in
fucom
frstor
dec
push
jge
add
cltd
bound
pop
out
cs
inc
sub
les
ds
cwtl
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
adc
and
sbb
push
push
or
mov
cmp
xchg
mov
mov
js
push
dec
pop
ss
push
scas
add
sti
and
out
out
adc
stos
mov
xor
fwait
icebp
stos
jecxz
sbb
mov
test
pop
insl
popf
add
fstpl
and
das
mov
jecxz
jns
jg
mov
nop
jae
mov
push
repnz
rclb
leave
dec
lds
repz
fidivl
mov
sbb
pushf
sub
cmp
out
out
sub
scas
pop
dec
mov
xor
cmc
sub
nop
pop
pop
andb
out
or
xor
mulb
int
dec
add
jae
or
fistpll
jbe
rolb
inc
popa
rcl
and
pop
pop
in
test
loopne
lods
int3
xchg
sti
pop
mov
test
cmpsb
mov
popa
ret
push
sbb
dec
push
lods
mov
mov
or
xchg
imul
lods
nop
inc
inc
ja
es
and
pop
test
lret
cmp
mov
xor
mov
int3
sub
test
or
jnp
dec
je
cwtl
mov
leave
ds
adc
adc
mov
jmp
inc
pop
push
xor
sub
or
mov
enter
mov
sbb
xchg
arpl
fldt
jle
subb
cmp
in
jl
daa
inc
mov
addr16
mov
std
jae
add
sbb
or
xor
add
pop
dec
dec
jmp
data16
daa
pop
repnz
cmp
dec
jmp
rorb
cmc
xchg
inc
sbb
pop
mov
jns
sbb
out
xchg
mov
mov
aad
mov
je
call
pop
js
jns
in
jle
push
and
in
pop
add
mov
es
sub
and
movsl
in
jge
xchg
push
pop
aaa
mov
popf
push
negb
aad
aaa
pop
shll
mov
sbb
or
data16
push
daa
insl
mov
pop
fisubl
aas
and
mov
fwait
test
ficompl
mov
int3
loope
jg,pn
lahf
add
xchg
lods
mov
mov
testb
xchg
sub
cwtl
cmp
jl
fldcw
adc
fs
xchg
sub
cmp
mov
mov
push
cmp
addb
lret
fsts
and
lret
cmp
pop
dec
adc
cmpsl
imul
ljmp
mov
and
jo
in
idivb
bsf
push
xchg
and
mov
xchg
mov
aam
push
test
fisubl
sti
mov
popf
ljmp
pusha
test
or
and
dec
rcrb
ljmp
xor
loopne
adc
push
pop
sub
je
imul
stos
in
and
mov
push
rcll
pop
out
mov
test
test
jmp
js
ret
jae
popf
bound
es
cmpsl
das
in
ss
or
jo
adc
pop
movsb
minps
pushf
cmpsb
out
popa
pop
lret
outsb
cmp
movsb
xchg
loopne
dec
xor
cltd
jle
daa
sub
icebp
into
xchg
xchg
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
push
jb
push
jns
sbb
adc
sbb
jbe
bound
fistps
cwtl
mov
in
cmc
add
dec
std
cmpsl
jmp
sub
mov
imul
in
lock
ret
lock
repnz
inc
popa
dec
outsl
mov
and
sbb
or
fs
loop
push
adc
stc
clc
sbb
movsl
add
gs
insl
out
push
mov
fnstcw
push
or
mov
dec
out
push
push
sub
xchg
push
addr16
mov
int
addr16
pop
pop
shll
cmp
arpl
bound
pop
popa
fiaddl
xor
rorl
push
adc
mov
std
mov
cmp
adc
cmp
out
xor
jnp
enter
test
daa
sahf
mov
adc
outsl
jns
and
inc
outsl
in
test
mov
mov
shl
out
pop
and
cmp
push
scas
decl
clc
insl
xchg
jo
incb
add
cmp
push
repnz
mov
cld
push
enter
lock
insl
sbb
rorb
movsl
push
push
les
mov
push
notl
fisttps
sbb
mulb
mov
lret
push
or
sub
je
test
loop
das
pop
inc
jns
ud1
sti
adc
cmpsl
xchg
fisttpll
aad
nop
stos
add
dec
sbb
ss
jne,pt
sub
mov
mov
mov
jp
xchg
add
pop
cmp
xchg
cmc
lock
rcr
and
repnz
movsl
aas
mov
sub
imul
push
mov
jb
mov
shl
dec
mov
sub
stos
mov
adc
push
or
jge
cmp
inc
pop
sub
and
dec
mov
lods
push
jns
xor
sbb
ja
nop
or
outsl
xchg
or
pop
push
lods
sbb
xchg
scas
mov
lods
xchg
or
pushf
mov
sub
sbbb
inc
pushf
mov
cmp
das
pop
xchg
jmp
mov
xchg
loopne
aam
add
sub
ret
xchg
das
xchg
fisubrl
dec
outsb
scas
popa
add
or
add
outsl
adc
mov
inc
rcr
pop
ret
mov
popf
or
xor
ja
sub
jo
imul
jge
fistl
stos
subl
mov
stc
sbb
dec
test
mov
sbb
fs
cltd
or
or
inc
into
cmp
out
adc
jecxz
jbe
pop
sub
and
movb
dec
cmpsb
mov
sub
mov
sti
inc
inc
and
push
hlt
inc
lods
incb
jb
sub
popa
sbb
inc
das
xchg
push
stos
sarb
add
fwait
data16
stos
std
adcl
and
testb
cmpsl
test
push
cli
inc
into
xor
jns
dec
push
xor
rorl
fildl
subb
inc
out
mov
adc
movsl
or
into
push
push
std
push
sub
pop
lcall
call
mov
jb
fldl
pop
sti
xchg
mov
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
test
mov
and
sbb
nop
mov
loope
mov
cmp
sub
lahf
add
bound
lret
out
insb
sbb
pop
movsl
inc
enter
jmp
push
xchg
fmuls
stc
push
cmp
sbb
mov
out
loop
jns
xlat
lea
repz
icebp
out
fdiv
fs
cmc
repz
xchg
jge
xchg
mov
ss
in
cli
std
lret
pop
push
or
roll
and
or
cmp
push
icebp
dec
das
out
inc
ret
jg
or
mov
out
icebp
outsb
ds
pop
repnz
xchg
nop
pop
xchg
xchg
jp
and
adcb
xor
adc
add
adc
out
fistps
in
std
sbb
mov
mov
mov
fwait
add
adc
push
inc
jp
in
adc
jns
xchg
xbegin
sub
fsub
push
add
pop
pop
mov
sub
lods
fldt
repnz
adc
cltd
shrb
push
mov
rolb
jmp
out
mov
insl
dec
loop
roll
lahf
dec
ja
mov
test
pop
mov
shll
xor
int3
inc
pop
mov
popa
push
fs
jmp
fldenv
jmp
adc
arpl
or
or
push
pushl
lods
rclb
mov
pushf
aad
stos
aam
sub
lea
inc
mov
adc
sub
inc
sbb
gs
sti
dec
mov
and
push
scas
pop
insl
out
mov
xorb
movsb
stc
mov
sbb
and
push
outsb
stos
xor
adc
into
lds
and
mov
inc
stc
imulb
clc
lock
js
clc
push
shrb
out
adc
adc
pop
push
push
sub
mov
push
add
mov
insl
mov
sub
sti
adc
mov
add
pop
or
xorb
cmp
andb
pop
pop
cmpsb
into
dec
push
inc
jnp
lea
subl
xor
xor
mov
es
scas
mov
cmpsl
sub
cltd
xchg
cmp
addb
xchg
adc
push
xor
xchg
imul
shr
mov
cmp
shll
addr16
sbb
out
xor
mov
inc
add
bound
pushf
dec
add
mov
in
mov
pop
lods
adc
adc
push
data16
ret
adc
and
arpl
fmuls
push
sarb
push
aas
daa
lock
jg
cmp
xchg
pop
mov
into
notl
stos
inc
push
jbe
mov
into
sar
xchg
leave
push
icebp
arpl
lahf
sub
in
inc
das
jno
pop
test
and
fsubrs
mov
in
mov
lret
dec
push
push
daa
pop
fdivrp
pop
jae
mov
push
xor
inc
cs
jns
pop
inc
sub
ss
scas
sbb
lret
inc
in
sti
out
sbb
pop
pop
lea
jg
decl
mov
pop
mov
fmuls
jp
xor
cmpl
arpl
ljmp
pop
sub
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
push
xchg
push
sbb
adc
sbb
cli
rcr
adc
inc
mov
xchg
lds
orb
loope
fnstcw
jbe
adc
sti
cld
sahf
mov
push
xchg
aad
pop
sbb
es
jg
int3
cmp
mov
add
push
xor
cmpsl
pop
in
ljmp
push
cmp
repz
daa
les
sbb
sub
cli
and
repz
cwtl
xor
mov
jno
mov
sub
mov
mov
and
or
jae
in
gs
cld
in
jecxz
xchg
stos
add
add
leave
push
in
inc
mov
dec
sti
ds
lcall
sti
sub
ds
in
pop
inc
sbb
js
shl
push
mov
rol
inc
jae
es
iret
in
aas
inc
aas
xchg
mov
sbb
jl
fcomps
repz
pop
adc
mov
mov
fnsave
cld
clc
fcmovb
lods
int
jbe
cmc
sbb
dec
mov
jo
jne
dec
jle
mov
leave
shll
lret
mov
popa
jp
aad
xchg
je
lock
or
mov
jge
mov
pop
cs
loopne
jecxz
dec
jb
mov
jae
imul
dec
fisttpl
and
mov
push
push
popf
mov
fdivl
outsb
sar
out
fcoml
in
mov
call
in
fidivs
xchg
loopne
jmp
sub
repz
lods
xchg
sti
arpl
mov
xchg
ds
fstpt
xchg
cmp
pop
pop
sti
xchg
xor
jno
nop
push
mov
fcomip
fstps
mov
xlat
inc
xchg
push
jbe
pop
dec
adc
adc
cli
repz
ret
or
mov
bnd
push
test
sub
pop
mov
cmp
pop
or
pop
je
mov
jne
sbbl
popa
repz
pop
fisttpl
mov
dec
cs
stos
int3
sub
jae
xchg
jg
adc
mov
adc
test
scas
push
stos
mov
loope
jbe
popf
add
pop
mov
jg
lods
imul
xlat
shrl
mov
rcrl
push
je
mov
mov
inc
shl
cwtl
sub
cmpsb
shl
adc
mov
subb
testb
and
sub
inc
mov
loopne
icebp
inc
loopne
mov
das
dec
jae
sub
movsl
xor
ljmp
cs
lods
cmp
lcall
mov
and
sbb
cmp
inc
lcall
fidivrl
dec
inc
cmp
add
jecxz
mov
fs
repz
push
sahf
addl
dec
dec
xor
adc
out
cmp
fiaddl
gs
add
popf
cwtl
je
cmp
jbe
nop
adc
jmp
sar
test
xchg
loop
sub
js
dec
and
dec
push
cmp
shll
idiv
cmp
mov
mov
in
cmpsb
mov
push
inc
movsb
inc
sahf
adc
xor
hlt
sbb
mov
lea
out
fwait
xchg
and
dec
repnz
or
orb
std
mov
fucomi
inc
xchg
mov
mov
fistpl
int3
shll
xchg
pop
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
arpl
leave
jl
arpl
sbb
adc
sbb
mov
cmp
jl
xlat
out
mov
stos
fdivrl
push
leave
push
mov
sub
xor
push
fwait
les
fisubs
inc
jns
cs
or
push
data16
sbb
mov
pop
xorl
xor
push
aaa
adcb
popf
aad
int
hlt
jae
clc
scas
fs
rolb
pusha
pop
mov
cltd
inc
mov
test
sahf
sbb
xor
outsl
jno
dec
lods
push
std
icebp
fisttpl
mov
shl
xchg
cmc
pusha
imulb
cmp
std
fdivr
adc
add
mov
rcrb
sahf
imul
test
add
fidivrs
xchg
fdivs
push
mov
cld
mov
inc
push
stc
adc
mov
dec
add
insl
outsb
cmc
xchg
mov
insl
push
movsb
sub
sub
dec
iret
sub
pop
insl
sahf
lds
xchg
movsb
pop
repz
pop
outsb
inc
mov
les
sti
iret
nop
or
or
notb
pop
jecxz
push
mov
push
mov
movsb
xchg
inc
pop
outsl
aaa
push
xchg
addr16
out
lret
addr16
jmp
int3
adc
pop
pop
cmp
cmp
cwtl
dec
in
sbb
fs
xchg
lods
aas
das
or
sub
cld
adc
xor
ss
aad
and
bound
cmpsb
jecxz
push
int3
lret
and
out
lahf
imul
push
fsubp
insb
mov
sub
insl
cmc
xor
nop
std
mov
dec
xor
daa
out
imul
jmp
and
cwtl
sti
push
mov
jp
cmpsl
jge
sbb
mov
inc
inc
repnz
in
dec
mov
loop
fwait
sbbl
int3
adc
and
sti
pop
pop
movsb
lret
lahf
out
into
pop
out
arpl
outsl
mov
sub
iret
in
inc
xchg
mov
int3
push
mov
pop
shl
inc
sbb
xor
es
mov
testb
sub
pop
fwait
andb
xchg
stos
cs
add
and
lds
xchg
imul
mov
test
xchg
dec
popf
and
mov
insb
mov
addr16
sbb
push
pop
push
mov
aad
or
push
repnz
and
roll
bound
out
mov
adc
jge
cmp
dec
pop
cmp
imul
movsb
add
hlt
test
cmp
mov
in
jp
xchg
push
push
or
jge
gs
jecxz
enter
sub
jo
jo
xchg
inc
stc
adc
xchg
push
mov
pop
inc
fmull
sarb
or
fistpll
xchg
std
adc
mov
shll
jmp
hlt
dec
fists
clc
adc
int3
pop
xchg
movsb
std
dec
loope
imul
loope
push
ret
lret
push
enter
cmp
aam
ljmp
sub
mov
in
mov
jbe
jmp
mov
cmc
popf
jl
aaa
mov
ss
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
mov
stos
mov
push
sbb
adc
sbb
addr16
sub
inc
jbe
jb
cli
mov
cmp
cmp
sbb
dec
loop,pn
pop
fcmove
movsl
xlat
xchg
and
in
mov
popa
ljmp
sbb
cmp
aad
icebp
arpl
insb
les
pop
adc
loope
nop
adc
mov
dec
adc
ljmp
pop
jge
popf
jno
cmpsl
mov
dec
sub
fidivl
rcrb
xlat
inc
mov
xchg
and
flds
shll
sarl
fcompl
stc
popf
arpl
sub
xlat
loope
fimull
inc
lock
gs
es
movsb
adc
repz
lock
mov
nop
lods
mov
xchg
pushf
jl
lahf
fiaddl
sub
xchg
sahf
mov
and
lret
enter
sub
jbe
lock
add
sub
lea
mov
jo
push
jle
pop
test
sub
xchg
outsb
xchg
aas
or
clc
in
jmp
jno
std
sbb
mov
jne
lods
idivb
or
sahf
mov
repnz
imul
test
lahf
js
adc
sbb
jl
sbb
rorb
ljmp
mov
mov
stos
int
sbb
inc
or
xchg
mov
out
jecxz
adc
pop
jnp
and
dec
inc
ret
lods
movsb
rcrb
inc
jno
lods
mov
dec
lock
dec
sub
outsl
lock
and
sub
or
pusha
fdivl
cmpsl
mov
sub
sbb
mov
frstor
cld
pop
fiadds
xorb
cmp
sub
lds
pop
pop
jbe
push
push
sub
xor
rcr
ljmp
mov
mov
push
loope
cltd
dec
sbb
sbb
mov
jl
arpl
cmp
imul
mov
or
divb
mov
sarl
scas
or
je
jge
les
pushf
push
cli
cmpsb
cmp
mov
mov
test
adc
out
out
sub
cmpl
inc
push
jle
add
fst
jge
sbb
movb
lcall
mov
jo
mov
popa
fisubrs
xchg
cmpb
adc
icebp
adc
cmp
push
dec
notl
mov
lea
add
test
jns
xor
inc
inc
es
jno
jno
xor
test
sub
cmc
ror
stc
scas
repnz
movsb
ds
arpl
adc
sub
adc
pop
ja
fistps
arpl
push
jno
push
roll
mov
out
ret
mov
dec
sub
sbb
push
in
mov
fs
xor
xor
push
xor
xor
add
cmpsb
pop
inc
stc
sbb
dec
jne
inc
aas
add
stc
xor
loop
mov
adc
sub
mov
and
pop
inc
leave
xchg
cmp
add
xchg
sub
jge
lea
scas
out
rcrl
mov
and
lret
in
sub
bnd
add
stos
cmpsb
decl
lea
test
incl
lret
call
test
std
decl
repnz
add
fmuls
decl
ret
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
out
jl
push
push
sbb
adc
sbb
mov
xchg
xchg
stc
cwtl
or
or
enter
pop
lret
cld
ds
stos
pop
xor
loopne
das
fnstcw
scas
outsb
mov
es
dec
mov
into
inc
pushf
test
insb
mov
aaa
inc
mov
add
stos
das
dec
lret
inc
add
sub
repnz
push
jne
outsb
inc
push
test
sub
mov
pop
sbb
push
daa
sti
sub
push
shll
inc
cmp
mov
push
xor
mov
icebp
leave
and
dec
pop
repz
mov
xchg
lds
movsl
test
jl
push
fildl
and
inc
pop
inc
aad
lret
sub
clc
push
mov
ds
clc
ret
outsl
adc
add
mov
sub
and
lea
jecxz
cmc
lsl
mov
adc
call
incb
cmp
lret
test
popa
mov
add
pop
enter
hlt
mov
cmp
and
in
xchg
roll
loopne
xchg
loop
sarl
scas
mov
sbb
mov
imul
lcall
and
jmp
push
ljmp
push
add
xor
pop
lret
imul
xchg
pop
fnstcw
and
test
rolb
divl
add
mov
xor
mov
aaa
out
test
jmp
sub
shr
inc
sbb
pop
out
push
pop
jb
pop
outsb
xor
xchg
pop
mov
and
hlt
xor
sarb
shrb
sarl
dec
inc
mov
or
or
xchg
imul
cmp
xor
adc
push
repnz
mov
aaa
jp
add
lods
inc
push
or
aad
fidivrl
xchg
imul
sbb
adc
xor
xchg
aas
mov
sahf
ja
out
decl
testl
lock
lods
faddl
xor
adc
dec
mov
test
mov
mov
pop
arpl
add
push
push
push
fnstcw
not
out
test
pop
pop
sbb
sti
mov
add
and
lods
ret
mov
mov
and
cmc
ret
iret
mov
movsb
ja
icebp
lret
pop
jno
out
sbb
setl
or
push
clc
rorb
movsb
adc
sbb
ret
repz
push
pop
push
jae
aam
repnz
add
mov
jne
fildl
pop
pop
ss
shl
movsl
or
mov
cmpsl
push
adc
cltd
pushf
enter
dec
inc
and
pop
push
dec
jge
mov
fbstp
pop
repz
enter
scas
mov
dec
xchg
js
cltd
push
jae
xchg
xchg
and
mov
adc
ss
in
sub
or
pop
dec
add
cmpsl
out
repnz
stc
imul
scas
mov
xchg
adc
sub
fisttpll
mov
cld
mov
adc
dec
movsl
mulb
decl
leave
out
icebp
dec
in
inc
pop
jno
adc
out
cmpsb
jge
je
inc
jno
mov
pop
mov
int3
cltd
cmp
sub
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
mov
push
sbb
adc
sbb
movsl
clc
aas
add
adc
cmp
jno
fs
test
mov
sub
test
out
push
xor
push
imul
syscall
mov
fnstenv
pop
adc
pop
cmp
mov
inc
es
stos
icebp
pop
das
scas
sbb
inc
fmuls
cs
adc
lods
dec
fdivs
inc
mov
mov
xor
outsb
sub
sbb
add
pop
add
dec
inc
arpl
test
bound
mov
cmpb
nop
inc
mov
movsb
hlt
int3
push
and
sahf
pop
cmp
rorl
enter
in
lret
lods
pop
xor
movsl
imul
mov
or
fwait
repz
jnp
jmp
je
test
sub
xor
loope
ljmp
hlt
jnp
inc
std
xor
cmpsb
into
lret
xchg
popf
or
xlat
pop
mov
movsb
sbb
subb
pusha
adc
dec
inc
js
xlat
cli
insl
test
fwait
mov
loop
push
dec
mov
adc
out
pop
cmp
sub
mov
int3
inc
incl
ret
rcll
fcmovnu
lods
dec
shrb
mov
js
pop
add
push
sbb
jnp
loopne
mov
clc
pop
inc
sbb
inc
das
push
movsl
rorl
jb
or
and
popa
cwtl
imul
mov
xchg
sub
negb
push
aad
add
sub
fidivrl
lods
or
pop
outsb
cld
imulb
cmpsb
inc
sbb
mov
add
ret
ret
test
sub
pop
adc
push
mov
sbb
mov
adc
push
push
jne
lock
stos
inc
outsl
test
jne
jmp
add
cltd
pusha
jns
pop
push
insl
push
mov
ljmp
mov
pop
aad
mov
jnp
fidivrs
gs
mov
movsb
jns
gs
pop
rolb
cmpsb
hlt
sahf
pop
jbe
add
push
pop
xor
rorb
dec
lds
mov
add
imul
dec
add
lahf
andb
test
cmpsl
dec
dec
and
dec
xor
push
adc
in
mov
or
cmp
cltd
pop
arpl
in
adc
in
or
pop
repz
xor
rorb
insl
aam
mov
fisubrs
int
out
shll
mov
jmp
xor
test
int
mov
mov
dec
sub
leave
lgs
mov
sub
cmp
movsl
xchg
sti
test
push
leave
enter
add
jl
push
lcall
sub
mov
sub
fists
jecxz
enter
adc
or
inc
shll
pop
sahf
pop
roll
inc
push
into
cs
mov
call
xchg
push
cmpsl
fdiv
int
and
or
mov
mov
stc
push
jmp
rcrl
out
push
stc
in
jmp
int3
hlt
movsb
rcr
dec
sbb
es
shr
movb
insb
jmp
daa
rcrb
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
scas
or
inc
push
sbb
adc
sbb
or
sbb
push
push
mov
nop
hlt
or
cli
inc
push
pop
inc
push
iret
pop
lods
pusha
cmovno
call
mov
in
fsubs
in
push
adc
dec
and
mov
out
push
push
addr16
cltd
add
pushl
loope
jnp
sbb
sub
lds
pop
cmp
push
shlb
jge
xlat
or
sbb
sbb
cmpl
out
ss
sbbl
xor
pop
inc
sub
adcb
rorl
rcrb
push
mov
adc
push
inc
cmp
cli
icebp
cld
sbbb
adc
xchg
jmp
es
and
fsubrs
push
cltd
cltd
rcrb
xlat
sub
fnsave
insl
cld
sbbb
popf
push
pop
dec
loope
mov
push
mov
in
pop
cmpsl
and
lret
call
lods
aaa
sahf
xor
aas
jae
jg
cmp
jae
and
shr
xor
idivl
push
ret
fs
pusha
mov
mov
jl
push
xchg
pop
out
pop
xlat
sub
das
mov
jae
movlps
add
xchg
cmpsl
sar
and
into
je
or
out
inc
mov
add
inc
iret
sbb
js
xorb
mov
sbb
fwait
add
mov
lret
lcall
shll
arpl
dec
push
lret
jmp
ret
aas
dec
sar
ret
or
sbb
dec
or
and
mov
pop
js
cld
loop
sbb
in
or
xor
pop
leave
or
out
jl
insl
ljmp
pop
inc
inc
push
pop
mov
xchg
in
sub
call
cmc
dec
or
in
inc
aas
pop
lds
rolb
sbb
mov
mov
lock
movsl
aad
push
xchg
adcb
nop
dec
aam
call
jmp
in
mov
bound
test
sbbb
jl
cltd
mov
fadds
cmc
cmp
sahf
sub
pop
in
in
rclb
stos
mov
arpl
adc
aas
ds
adc
cli
mov
inc
mov
and
jae
daa
fcmovu
cmc
xor
in
rcrb
adc
push
jmp
fistpll
aaa
test
in
push
xlat
idivl
into
stos
and
sub
dec
idiv
fisubrl
mov
repnz
in
jbe
jge
test
lds
jns
pop
sti
mov
or
mov
mov
sbb
push
add
sti
jl
cmpsl
cwtl
xchg
and
mov
inc
inc
bound
mov
sahf
push
fldl
dec
hlt
inc
sub
pop
pop
in
or
insb
sbb
sbb
leave
push
je
cli
into
mov
pusha
inc
sti
dec
outsb
sub
mov
cld
aas
out
sub
push
mov
shl
out
mov
out
in
loop
mov
je
repz
push
push
xchg
sbb
test
call
inc
in
add
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
mov
dec
mov
and
mov
xchg
inc
repz
jne
pop
xchg
idivl
adc
xor
and
push
clc
adc
out
in
fmuls
jecxz
xor
fmuls
mov
xor
cld
mov
mov
pop
pop
sbb
shrb
rorb
std
xchg
or
movsl
pop
insb
mov
psubsb
push
adc
mov
dec
cmpsl
jle
pusha
sub
cs
mov
mov
sahf
and
shrl
das
dec
rolb
push
add
jnp
jo
into
mov
adc
psrld
and
shr
jmp
push
adc
lahf
imul
and
dec
sub
or
xor
cmp
fcmovbe
es
lcall
shlb
lods
push
push
mov
push
xchg
sbb
js
incl
fisubrs
fwait
rorl
inc
pop
insl
sarl
push
and
xor
adc
lock
ror
jmp
mov
ret
push
push
push
pop
es
in
nop
cmp
jl
arpl
adc
xchg
mov
shlb
sbb
add
movsb
clc
mov
and
sub
or
lret
shll
xchg
ljmp
stos
outsb
or
add
pop
cmp
jecxz
imul
xor
pop
or
mov
mov
pushf
sbb
pop
and
pop
mov
mov
pusha
int
lea
cmp
xor
jno
and
cwtl
xchg
pmaddwd
lcall
or
rcr
pop
mov
sti
cmp
mov
es
ret
adc
out
mov
rcrb
add
pop
sub
pop
scas
xor
stos
adcl
xchg
xchg
sbb
mov
and
xchg
pop
fimuls
mov
fisubrs
push
test
pop
dec
push
mov
and
add
add
or
decl
ret
mov
sub
mov
mov
adc
mov
leave
xchg
std
pop
xchg
out
inc
xor
insb
mov
jno
scas
mov
hlt
cmpsb
push
and
jnp
jp
divb
sti
int3
in
jno
addb
repz
daa
dec
ss
and
in
jns
outsl
cs
xor
cmp
and
adc
lret
movsl
pop
cmp
sub
test
mov
test
jle
sbb
imulb
jo
in
hlt
fidivs
jle
rsm
je
inc
imul
iret
pop
add
sbb
jne
shlb
icebp
repz
mov
rol
out
in
push
test
sahf
mov
les
insl
sub
mov
push
pop
xchg
mov
mov
decb
pop
adc
sbb
lret
jle
pop
idivl
ret
mov
xchg
lods
push
cmpsl
xor
fdivr
rcrb
or
and
outsb
stos
add
les
sarl
mov
mov
hlt
bndldx
jns
aaa
jno
mov
mov
scas
sbb
les
or
pop
dec
notl
cmc
mov
into
jp
in
popa
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
jle
cmp
sbb
adc
sbb
es
testl
jns
push
mov
or
push
pop
test
cwtl
dec
jmp
mov
mov
xchg
or
sbb
jnp
fst
roll
lahf
mov
jo
sub
cmc
cmp
push
stc
mov
jo
sub
inc
cmp
xchg
mov
pop
inc
fs
xchg
fimull
leave
or
inc
mov
stos
inc
jl
pop
cld
and
mov
sub
and
jae
popf
scas
xor
cwtl
rcrb
fidivl
aam
mov
mov
fistl
mov
lods
mov
shrb
and
dec
pop
pop
dec
loop
push
fidivrl
test
push
in
and
test
arpl
jg
xor
or
pop
jae
adcl
ja
mov
or
imulb
dec
cwtl
xchg
rclb
cmp
das
cmp
call
push
add
inc
pop
pop
pop
sub
or
cmpsl
test
pop
ret
sarb
pusha
outsl
out
xor
xlat
and
shll
mov
and
mov
iret
stos
xchg
push
fstpt
loopne
push
xchg
pop
test
test
push
push
or
jnp
sub
adc
movl
fldl
dec
ljmp
sub
dec
test
adc
xor
bound
dec
stos
cwtl
pop
pop
out
fisubrs
sbb
dec
adc
rcll
jae
ds
rolb
mov
jmp
mov
mov
inc
loope
rcl
xchg
mov
adc
mov
nop
cli
test
push
inc
int
mov
xchg
jg
and
ljmp
cmpl
or
arpl
jmp
lods
jbe
fsubl
jno
mov
ja
stos
xchg
pop
xchg
dec
int3
jne
jnp
push
pop
pop
jg
lahf
cltd
jle
lret
test
cmpsl
mov
mov
or
xchg
fwait
add
mov
xchg
mov
popa
addr16
pop
dec
dec
aam
push
daa
test
or
sbb
and
fisubs
stos
imul
loop
scas
outsl
stos
mov
push
push
jge
mov
fs
xor
cmp
jg
jmp
je
aad
es
shlb
mov
test
sub
mov
movsl
cmp
hlt
dec
inc
push
add
ja
insl
int
sbb
popa
inc
addr16
mov
dec
mov
jmp
add
std
xchg
std
pop
sub
dec
lock
stos
out
xchg
xor
mov
sub
and
icebp
adc
cli
pop
mov
lea
sub
cld
insb
out
in
mov
sub
xor
add
mov
scas
jmp
inc
cmpsb
sti
xchg
cld
gs
into
dec
loop
push
call
adc
popa
cmp
ret
and
into
dec
mov
xor
fcmovnb
bound
add
dec
jb
ss
lods
sahf
or
or
cld
arpl
nop
mov
or
popf
stc
sub
sub
dec
push
jp
pop
dec
lea
jge
repnz
jbe
das
adc
idivb
movsl
lods
sar
dec
pop
out
rclb
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
out
push
stos
icebp
xor
sbb
adc
sbb
test
daa
call
cwtl
ret
mov
jecxz
sbb
test
pop
xor
lahf
js
jae
mov
pop
mov
mov
jb
sub
ja
scas
insb
push
mov
mov
cmpsb
loope
mov
and
imul
adc
xchg
adc
ret
push
mov
sbb
shlb
mov
xor
cmpsl
xor
push
pop
lods
inc
inc
dec
adcb
bswap
rcrb
sahf
test
inc
cmpsl
gs
insb
sub
cmp
adc
cltd
stos
imul
sub
dec
cmp
stos
mov
sub
fstl
push
sub
or
insl
fsubrs
adc
lea
enter
xchg
dec
mov
sbb
sti
sbb
dec
repz
movsl
push
sub
cmpsl
loopne
xlat
dec
mov
out
jl
std
fmull
out
imul
sbb
jmp
jbe
pop
cmp
mov
inc
scas
xchg
in
call
repz
push
mov
lahf
jge
jge
lock
imul
xlat
sbb
add
adc
mov
and
ljmp
cs
in
xor
pop
push
das
adc
cmp
popf
es
popa
mov
rcll
imul
pop
pop
push
push
aam
fstps
bound
sub
mov
fstpl
les
push
addr16
mov
cmp
push
roll
scas
scas
inc
or
sub
lahf
mov
sub
mov
jno
sbb
push
add
jg
push
into
and
and
popf
in
and
ljmp
lods
sbb
outsb
pushf
jg
and
jmp
or
fiaddl
xor
mov
sub
sbb
insl
and
mov
xchg
sbb
stc
test
lds
inc
pop
mov
fldl
icebp
arpl
push
les
xor
lahf
incb
jp
ds
push
imul
aaa
pop
adc
shll
dec
aaa
xor
push
lret
rclb
push
mov
xlat
ljmp
shrl
cmpsb
add
push
out
xlat
test
and
mov
jnp
cld
push
jns
mov
lods
jno
sti
imul
ljmp
pop
stc
imul
outsb
les
addr16
clc
jmp
or
mov
xchg
mov
pop
lds
cmp
data16
cmp
aad
jmp
stos
pop
add
mov
xchg
int3
mov
or
or
push
aad
cmp
cmp
inc
sarb
mov
push
stos
dec
mov
call
jecxz
inc
loop
push
nop
mov
dec
xor
cmp
pop
jp
adc
fdivr
insb
dec
fwait
int
repz
inc
out
rcll
test
pop
adc
mov
dec
test
jle
cmp
adc
fisttpll
lcall
xchg
out
in
pop
jbe
and
loop
dec
data16
or
sarb
mov
xor
add
lock
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
lret
addr16
and
sbb
leave
sbb
fidivrs
faddp
inc
mov
stc
repnz
mul
mov
sahf
add
out
subb
push
sbb
push
adc
mov
fwait
mov
push
aad
bound
sarl
in
adc
push
jb
addr16
xor
mov
pop
mov
stos
outsl
mov
xchg
loope
pop
mov
mov
lret
xchg
int
mov
push
fucomip
jp
cmp
mov
mov
int3
mov
rcrb
decb
cli
cmp
mov
add
xor
out
mov
divl
push
jle
xorl
fmul
inc
push
rorb
scas
xor
sub
inc
pushf
xchg
dec
xchg
mov
push
mov
jp
fwait
fwait
ljmp
cmpb
pop
arpl
es
fcoms
repz
add
bound
xlat
in
jle,pn
cltd
aas
movl
inc
sub
sbbl
add
inc
and
ja
xchg
shl
jno
fwait
inc
and
ror
and
les
push
push
pop
xchg
pop
dec
fcomip
mov
push
add
cld
add
cmp
cwtl
aad
cli
call
add
xor
jmp
sbb
outsl
aas
adc
into
into
dec
jne
cltd
out
sub
outsb
push
loopne
xor
sub
dec
xor
stc
jmp
xor
dec
leave
xchg
sbb
clc
sti
pop
or
aaa
push
andl
or
xor
inc
js
repnz
stos
push
cmp
push
popa
push
pop
cmp
mov
mov
in
shl
xchg
jae
mov
nop
aaa
and
outsl
mov
cmc
ss
fistpl
and
xor
adc
jl
gs
lret
out
jge
outsb
fbld
loopne
add
adc
icebp
ss
in
push
cltd
jbe
add
std
mov
stos
push
inc
and
mov
push
daa
sbb
inc
add
mov
xor
push
mov
sub
push
aad
test
shlb
dec
andl
icebp
lcall
pop
call
pusha
stc
push
pop
add
popa
sbb
loop
sbb
fildl
fsub
flds
sahf
mov
ret
mov
stos
mov
adc
adc
dec
imul
jge
mov
pop
mov
sbb
inc
pop
leave
notl
out
inc
inc
sbb
push
es
sbb
push
pop
push
test
fldenv
mov
enter
leave
add
mov
jl
minps
nop
aad
mov
out
mov
or
dec
jae
push
adc
push
or
pop
sarl
sub
inc
mov
shl
xor
and
add
jb
ret
jno
mov
hlt
jmp
inc
sub
sbb
dec
jp
lret
mov
repz
jle
jns
sti
mov
stos
push
or
sbb
push
jl
iret
popf
mov
or
arpl
mov
adc
add
pop
movsb
xlat
fs
rol
add
sahf
repnz
pop
int
je
or
pusha
subb
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
push
jle
and
sbb
xchg
pop
ljmp
mov
cmc
in
mov
int
std
call
popf
pop
mov
cmp
mov
push
outsl
push
int3
sub
cli
cmp
scas
sub
push
out
jnp
sahf
arpl
add
push
xor
mov
lock
lret
sbb
mov
cmpl
mov
test
inc
pop
or
xor
repnz
cmp
jns
adc
vpcmpeqb
bound
fs
lret
and
out
jbe
daa
add
pusha
mov
cs
fadd
cwtl
idiv
pop
pop
repz
jmp
daa
scas
xchg
and
lock
lds
repz
push
in
jle
mulb
push
add
mov
jno
cmp
es
mov
push
int
cmp
outsl
add
cmp
hlt
mov
lahf
lcall
stc
and
ja
jl
shlb
inc
xor
jne
sti
push
pop
arpl
ja
fdivr
lret
push
cmp
js
dec
xor
test
add
pop
fsubs
les
push
adc
int
aam
fbstp
decl
fdivrl
outsb
sbb
push
and
adc
inc
inc
pop
movsl
out
pop
dec
xchg
mov
inc
pop
enter
add
jecxz
jg
adc
out
add
mov
mov
adc
dec
push
insl
bound
movsb
mov
inc
into
loop
stc
in
and
lds
fs
loop
arpl
test
sbbb
pushf
lods
jno
sub
push
push
fbld
popa
and
cmp
out
pop
clc
sub
dec
fistpl
xor
pop
out
sub
xchg
mov
cmp
fildl
in
adc
inc
les
and
cmp
mov
xchg
stc
dec
cmpsb
inc
int
dec
sbb
mov
mov
push
sub
xchg
test
lret
cmp
mov
sti
das
pop
push
daa
pop
or
dec
mov
jp
jo
scas
mov
push
push
and
jmp
sub
pop
arpl
sub
xor
or
xor
stos
push
mov
stos
lock
cmc
mov
loope
push
push
in
push
test
stc
pushf
outsb
xor
push
flds
xchg
popa
jle
or
mov
je
imul
sub
ss
inc
test
cli
lock
ss
shl
lret
enter
cmp
cmc
clc
out
sbb
xchg
cwtl
inc
mov
jmp
or
popl
scas
xchg
sahf
sbb
dec
pop
xchg
clc
and
add
addr16
adc
cmc
into
mov
rolb
movsl
sbb
lock
or
mov
pop
push
inc
pop
in
mov
pop
mov
int3
or
sbb
lods
aam
mov
jbe
gs
cmovne
xor
add
xchg
mov
aaa
adc
fstps
jle
and
into
xor
jb
and
mov
sub
sbb
imul
dec
and
in
loopne
inc
dec
jns
sub
xchg
xchg
fcomp
iret
aas
in
pop
jmp
xor
sub
int
mov
adc
scas
enter
jecxz
aam
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
sbb
push
sbb
sbb
ja
mov
rcr
rcll
aam
pop
jns
sub
ss
dec
mov
cmp
pop
repz
jo
ret
and
and
sbb
mov
pop
sbb
jle
jg
shl
stos
in
dec
adc
dec
imul
shl
int3
loopne
aam
rolb
jne
mull
xor
add
rorb
fstl
jge
leave
or
mov
push
nop
pusha
add
insl
fldl2e
jbe
mov
sarl
add
mov
ss
pop
add
mov
outsl
idivb
iret
imul
movups
and
dec
lods
cmp
aas
call
por
jmp
cltd
enter
xchg
mov
mov
push
in
sub
mov
icebp
test
jbe,pn
pop
mov
sbb
test
sub
testb
pushf
and
addr16
in
insb
pushf
outsl
repnz
int3
popa
dec
ja
sbb
pop
mov
sbb
dec
xorl
sahf
add
mov
and
dec
fsubr
mov
retw
pop
xchg
pop
insl
jbe
mov
cltd
jae
sub
push
and
push
test
daa
out
lods
adc
mov
push
cmp
jp
test
push
mov
xlat
xor
jno
repz
or
xchg
lret
inc
stos
sub
mov
jp
jno
das
divl
add
repnz
cmp
push
push
lret
mov
pop
nop
sti
xchg
test
cmp
mov
xchg
sbb
popa
outsb
loop
pop
adc
sub
cmp
ret
outsl
mov
adc
jnp
mov
lret
scas
outsl
pop
pusha
movsl
std
fnstsw
pop
mov
pushf
cltd
inc
sbb
xor
data16
cwtl
adc
xchg
mov
cmpsb
push
cmp
xor
lods
fisubrs
lea
ljmp
into
and
mov
fimull
xor
inc
push
adc
pusha
lea
mov
and
lret
push
sbb
sub
dec
push
icebp
in
sub
pop
mov
in
int
fildl
ja
push
cmpsl
loope
xchg
inc
clc
inc
lcall
push
jno
aam
mov
ret
mov
and
pop
pop
aas
and
dec
cmp
inc
unpckhps
int3
std
arpl
add
jg
jns
mov
shrl
mov
mov
subl
or
push
int3
repz
push
stos
add
mov
jae
inc
push
mov
ss
into
std
fs
fbstp
in
sbb
data16
aad
and
lahf
pop
bswap
sti
and
aas
fsts
sarl
inc
std
jecxz
xchg
and
iret
mov
sbb
push
xchg
jge
adc
loope
lahf
or
mov
xor
xor
insl
cli
int
adc
cwtl
mov
stos
gs
popa
mov
mov
lods
imul
push
in
test
imul
pop
pushf
cmpsb
cmpsl
mov
aaa
mov
push
dec
ret
out
push
xchg
stc
add
lcall
push
pop
stc
jmp
adc
fs
push
mov
pop
jb
push
dec
xchg
bound
in
sbb
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
stos
sbb
push
sbb
adc
sbb
test
daa
daa
sbb
test
int3
fwait
lods
mov
das
pop
mov
mov
jmp
jge
push
xchg
outsl
data16
adc
ljmp
xchg
mov
adc
addr16
gs
inc
repnz
fwait
xchg
push
adc
pop
stos
adc
mull
mull
mov
inc
pop
lcall
jbe
mov
outsb
dec
push
jo
pop
lock
sub
pop
stc
mov
push
sub
cmpl
ficomps
jno
cmp
fstpl
int3
xor
fdivl
mov
lea
rol
imul
nop
jmp
imul
xchg
cwtl
xchg
in
sbb
sbb
xchg
leave
xchg
lahf
ja
bound
popf
movsb
mov
sub
sti
dec
ret
aam
daa
stos
dec
mov
shlb
pushf
test
pop
arpl
dec
addr16
xchg
xchg
iret
push
subl
jmp
adc
scas
and
add
shll
cmp
popa
inc
mov
jp
fcmovne
mov
lcall
xlat
test
cmpsl
shl
test
leave
ret
in
cli
jl
push
das
roll
mov
pop
adc
gs
call
enter
jge
jbe
in
cmpsl
repnz
cmp
xchg
shrl
lods
roll
xor
stc
mov
xchg
stos
pop
roll
mov
cmp
lock
sti
inc
inc
ret
push
fldcw
lahf
aaa
js
sub
cmc
jb
jns
je
mov
and
outsl
aam
cmp
ljmp
cltd
insb
sbb
and
lcall
xor
imul
aaa
pop
fldt
mov
and
push
imul
sub
sahf
push
fidivs
in
sbb
cld
adcb
add
push
mov
stc
mov
sbb
fwait
jl
fiaddl
xchg
test
das
movsb
popa
dec
and
sub
loop
nop
nop
jb
pop
cmp
out
scas
add
pusha
lcall
ffree
hlt
xchg
mov
es
gs
call
into
mov
jmp
mov
in
stos
mov
outsb
jb
or
sahf
jne
sbb
lods
adc
test
fidivrs
mov
lcall
jg
xchg
mov
push
jmp
out
roll
repz
mov
hlt
pop
call
fdivr
fldt
mov
pop
sub
dec
adc
inc
dec
cmp
xchg
call
sub
testb
jae
mov
mov
cld
jb,pn
lods
loop
mov
loop
fs
clc
mov
jp
stc
mov
and
mov
out
lret
xorb
mov
test
int3
add
jecxz
or
mov
pusha
sub
jle
add
add
das
imul
out
hlt
dec
xchg
sub
or
mov
mov
jle
add
jae
push
gs
mov
mov
aam
and
int3
mov
inc
pop
cmp
sar
mov
jg
inc
jle
xor
mov
xchg
popa
dec
int3
add
inc
push
js
xchg
in
jo
not
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
inc
clc
push
adc
sbb
adc
sbb
mov
sub
jge
and
idivb
lret
cli
push
dec
test
add
inc
movsl
jl
or
sub
stos
mov
xlat
int
add
xor
in
xlat
leave
test
inc
dec
and
add
shr
push
fdivs
rcl
in
dec
test
sarl
movsl
jmp
sub
mov
scas
lahf
mov
xchg
out
sbb
adc
aaa
inc
ja
into
cmpsb
xor
shrl
cli
movsl
mov
mov
sbb
test
mov
aad
inc
movsb
je
pushl
mov
xorl
cwtl
inc
scas
xor
add
or
sbb
jl
sub
int
mov
pop
call
or
or
jae
and
loopne
mov
aad
mov
sub
xor
push
icebp
lds
xchg
mov
mov
xor
mov
inc
clc
xchg
jmp
jnp
outsb
scas
xor
mov
xchg
and
mov
and
xor
clc
cli
mov
not
adc
fmull
std
ja
sub
scas
cmc
into
ljmp
es
hlt
sbb
sbb
sbb
lret
sti
xorb
shr
and
in
mov
dec
jo
stos
rclb
cltd
lock
es
jg
shlb
cmp
push
and
mov
pop
mov
aaa
sub
sti
decl
ret
incb
pop
mov
fidivrl
in
sub
pop
in
mov
outsb
out
mov
mov
push
xorb
ret
rorl
pop
xor
or
js
pop
xorb
xor
pop
nop
pop
insl
shl
sbb
push
popf
cmpsb
outsb
push
call
faddl
sbbl
fdivp
mov
retw
inc
aad
xchg
mov
mov
popf
jns
fcoms
lcall
mov
fnstsw
bound
sub
dec
jns
dec
pop
in
inc
ds
jmp
dec
lcall
inc
dec
inc
aas
mov
std
icebp
es
xchg
cmpsb
sub
inc
in
lcall
mov
inc
daa
push
outsl
outsl
add
xor
lcall
insb
and
and
loop
lds
jl
cmp
aaa
rorl
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
rolb
add
add
add
nop
add
adc
add
les
add
sbb
add
xor
add
in
test
add
add
or
add
add
add
mov
xchg
add
or
add
pusha
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
hlt
and
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
or
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
jl
inc
add
es
add
sub
je
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
es
add
push
movsb
scas
or
movsb
mov
inc
add
inc
add
inc
add
add
add
es
add
inc
add
es
add
es
add
inc
add
inc
out
hlt
es
add
es
add
xchg
mov
add
inc
add
rcl
pop
inc
jg
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
jo
inc
add
sub
add
add
scas
lcall
das
dec
add
insb
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
out
addb
addb
addb
addb
addb
addl
or
inc
add
addl
sbb
inc
add
addl
sub
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
xchg
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
addb
add
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
add
inc
xchg
add
add
pop
xchg
add
add
js
add
mov
add
scas
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
mov
add
rorb
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
push
mov
add
add
add
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
dec
mov
add
add
jb
add
test
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
bound
add
mov
add
mov
add
lret
add
mov
add
mov
add
mov
add
add
sub
add
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
