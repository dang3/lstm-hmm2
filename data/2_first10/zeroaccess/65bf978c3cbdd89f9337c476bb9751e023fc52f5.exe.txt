push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
ss
arpl
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
inc
push
div
dec
xchg
hlt
dec
mov
jle
inc
adc
andb
inc
into
repnz
pop
jmp
fnsave
jno
and
push
xor
dec
xchg
or
cmp
aaa
arpl
mov
scas
or
std
push
ficoml
out
xchg
das
int3
inc
divb
mov
ret
fwait
repnz
ja
xchg
push
enter
push
in
nop
adc
xor
mov
cmpsl
stos
sbb
xchg
das
xchg
icebp
sahf
push
inc
push
test
fcomps
jbe
adc
cmc
mov
adc
xlat
sbb
ror
or
shl
outsl
pusha
loopne
pop
xchg
pop
jge
pop
add
movsl
jle
outsb
popa
scas
addl
bound
or
and
dec
mov
movsl
int
inc
test
cmp
adc
psrad
or
loop
and
and
movsl
dec
pop
hlt
mov
ja
cmc
rcll
repz
mov
rorb
push
fadd
bound
push
sbb
jmp
mov
lret
aas
scas
ja
in
pusha
pop
xchg
jno
push
jns
lahf
push
fninit
sbb
aaa
jns
mov
pop
pop
mov
int
out
ja
fucomip
pop
mov
mov
aas
dec
or
xor
leave
cmc
jne
sbb
loope
test
stc
or
in
inc
lret
jge
pop
sub
mov
push
cmp
xchg
cmc
mov
jmp
leave
dec
sbb
das
std
xchg
push
xchg
or
mov
cmp
arpl
icebp
cmp
push
pop
sbb
jge
xchg
add
mov
cwtl
adc
pop
dec
push
gs
fcomp
or
xchg
dec
inc
adc
lret
push
sti
xor
add
mov
inc
cmp
rolb
pop
jae
movhlps
js
clc
les
adc
or
lods
inc
push
jb
xor
repz
stc
ret
into
cld
int
rcrb
in
sahf
test
push
or
fisubrs
popa
outsb
xchg
fwait
push
int
movsb
repz
xchg
push
shll
std
mov
in
je
pop
cmp
int3
clc
fidivrl
jnp
idivl
xor
and
test
lods
jge
jle
jge
adc
mov
das
adc
fisubl
in
add
inc
loop
jno
orl
sub
enter
addr16
popf
push
dec
xchg
push
outsl
jle
loopne
mov
pop
dec
mov
dec
cmp
xor
ja
gs
xor
mov
pop
push
fimull
flds
pop
mov
jo
std
cmp
cmp
mov
jecxz
jge
pushf
jp
stos
je
xchg
push
xor
daa
xor
add
jo
gs
ret
sub
xor
push
or
adc
mov
xor
xor
xor
bound
push
movsb
bound
test
xor
imul
stc
and
mov
mov
lahf
cwtl
inc
xchg
add
push
push
sti
dec
sbb
lret
mov
xor
pop
pop
imul
mov
lret
xor
cmpsl
stos
pop
push
into
and
cld
enter
mov
adc
push
or
inc
shll
jmp
mov
int3
test
mov
movsl
lret
es
subb
seto
xor
int3
add
mov
sub
add
rclb
push
sub
negl
int
shlb
fwait
add
cmp
mov
int
mov
jne
or
stc
stos
test
fwait
pusha
push
sub
xor
dec
and
dec
movsl
fstps
and
adc
sub
cmpsl
fisttpll
dec
mov
xchg
xor
jns
push
and
fldt
xorb
sub
cmp
sbb
cmp
push
unpcklps
jmp
clc
enter
iret
cwtl
lret
int3
xchg
shll
or
add
cmp
sbb
out
aas
pop
xchg
sti
mov
jg
cld
pop
sub
sbb
out
dec
cmp
das
adc
pushf
repz
addl
cli
rcrl
xor
cmp
mov
scas
and
pop
mov
clc
dec
inc
test
pop
mov
xor
cmc
dec
shl
cmpsb
hlt
xchg
int
loope
dec
in
cmp
addr16
movsl
aad
lds
inc
cli
pusha
bswap
cmp
push
aam
call
ja
push
add
sbb
xor
rdmsr
aas
jle
xor
js
and
cmp
shlb
or
cmp
dec
lahf
iret
cmp
shlb
dec
pop
ror
daa
xchg
lds
and
shlb
xor
jb
out
mov
cmp
lret
mov
aam
dec
or
or
mov
push
push
scas
out
xor
in
sub
dec
inc
outsl
test
dec
cmp
cmpsl
jae
jbe
test
cmp
daa
and
fsubl
push
imul
test
ds
push
inc
test
inc
aas
mov
incb
mov
xor
fmuls
adc
pop
cmp
test
mov
sub
xchg
popa
fcmove
outsl
pop
cld
stos
push
loop
sub
cmp
pop
xor
roll
cmp
inc
ret
popf
ret
inc
sbb
mov
lock
cmp
je
and
xchg
jl
js
nop
sbb
jge
cmpl
imul
pop
push
ficoms
out
sub
jnp
in
or
cmpsl
loop
mov
or
icebp
dec
add
inc
lea
jle
mov
sbb
and
mov
and
in
mov
test
cmpl
fwait
sub
dec
test
lea
pop
xor
aad
inc
ret
push
pop
add
lret
lods
and
or
mov
sub
cltd
cmp
pop
leave
insl
jns
push
jl
popa
stc
adc
out
loope
ror
ficoms
jg
arpl
push
fs
in
xor
and
push
adc
mov
dec
ds
ret
roll
and
xchg
mov
nop
repz
lods
xchg
clc
xor
lahf
xchg
int
lret
mov
sti
rolb
push
aas
push
popa
add
xchg
sbb
addr16
sub
int3
jae
mov
and
loope
int3
insb
pop
xchg
pop
xlat
pop
jb
lcall
jb
imul
or
cmpsb
or
ljmp
or
and
int3
insl
sbb
addr16
cld
pop
fildl
test
xor
pop
jle
inc
int
push
xor
mov
and
mov
push
in
int
xor
mov
aad
pop
out
xchg
mov
pushl
cmpsb
dec
cli
inc
insb
aad
adc
loope
inc
lcall
xchg
das
xchg
mov
add
jae
rep
mov
test
mov
cmp
scas
dec
xor
insl
lcall
cmp
rclb
mov
rcrb
push
inc
in
jmp
inc
fmul
jge
jecxz
adc
mov
das
sbb
or
mov
aas
add
xchg
cs
inc
pop
inc
dec
xor
jne
adcl
mov
cli
add
shrl
ds
mov
pop
repnz
jo
xchg
add
testb
sbb
stos
data16
or
aas
std
jmp
pushw
nop
mov
test
sbb
roll
dec
pop
pop
xor
cwtl
and
cmp
mov
ss
pop
popf
daa
adc
lods
adc
fisubs
mov
test
lods
jns
fwait
lret
xchg
in
mov
loop
cmpsb
call
sbb
mov
xor
push
or
adcb
jge
inc
test
movb
leave
pop
inc
sti
nop
icebp
shrl
movsb
in
jae
movsl
insb
aad
fcomps
or
mov
repnz
popf
shrl
mov
adc
mov
xor
adc
mov
testl
call
jbe
add
mov
pop
push
ret
push
push
add
jg
add
sahf
ljmp
lahf
insl
xchg
xchg
push
iret
and
ficompl
cmp
and
lea
sub
dec
mov
pop
jb
jmp
cwtl
cmc
aas
mov
jle
xor
movsl
sub
xchg
mov
xor
int
lret
jne
loop
mov
sub
and
and
inc
fistps
mov
push
bound
cmp
sahf
rclb
aas
les
sbb
sub
jmp
repnz
push
lods
xor
push
out
scas
mov
sub
sub
ja
adc
arpl
mov
and
sub
ja
or
iret
aaa
lret
shlb
add
out
cli
jle
xor
stos
xor
xor
push
mov
in
sbb
push
jecxz
cmp
aad
ljmp
adc
loopne
push
mov
js
bswap
clc
pop
push
popf
cmp
outsb
xchg
jmp
clc
repnz
clc
imul
outsl
push
fwait
jl
fdivl
and
movsl
mov
mov
sub
in
lock
out
insl
xchg
push
popf
cmp
add
sahf
fnsave
pusha
enter
cmp
mov
fprem1
mov
adc
pushf
mov
imul
xchg
xor
rol
stc
xchg
mov
push
dec
mov
mov
mov
loopne
mov
sar
cmp
fistps
mov
mov
fidivrl
pusha
inc
and
adc
in
out
sub
mov
in
cmc
dec
into
cmpsb
imul
ret
push
aad
adc
pop
or
data16
icebp
mov
stos
xchg
xchg
aam
imul
int3
movsl
sub
pop
outsl
test
decb
mov
xchg
sti
mov
xchg
je
inc
jecxz
jae
or
mov
lods
dec
js
sbb
xchg
pop
imul
cmc
cld
sub
movsb
clc
shll
movsl
jge
incb
xchg
inc
loopne
loop
mov
add
enter
dec
add
fwait
or
push
dec
sub
or
scas
mov
sub
sub
fists
and
mov
jle
cltd
jnp
movsl
mov
xchg
fwait
jae
sub
lods
mov
jnp
mov
sahf
pop
jecxz
rcl
or
or
repz
jg
or
cmpb
xchg
and
cmp
repz
scas
stos
rorb
insb
pop
adc
xchg
cmpsl
sub
mov
xchg
ja
aam
lds
out
jne
in
int3
dec
add
rclb
in
pop
leave
jne
jmp
and
sub
addl
or
pushf
leave
push
dec
jmp
jl
cmpsb
xchg
sahf
pop
xchg
push
dec
in
shlb
std
jns
push
cmp
cmpsb
cld
and
lret
pop
fcomip
test
or
insl
pushf
daa
aaa
xchg
xchg
mov
in
or
push
add
mov
lcall
insl
outsl
adc
js
xlat
lods
sti
jg
inc
or
std
mov
add
jl
addl
cmpl
in
dec
sti
xchg
sti
jp
dec
jg
add
inc
xor
sbb
lahf
in
lods
pop
hlt
inc
insl
mov
mov
loope
jae
mov
sub
lods
cmp
pop
jg
mov
mov
les
pop
mov
lock
jg
dec
lret
gs
fiaddl
data16
cli
adc
mov
jb
jmp
fcomps
dec
int
or
std
push
mov
leavew
lret
sub
dec
jbe
leave
push
lret
out
jecxz
jmp
fisttps
mov
pop
shll
shrb
add
lahf
dec
jge
lret
ss
mov
incl
or
fcoml
push
outsb
in
jne
mov
or
add
xchg
push
and
test
lret
cld
sbb
pop
mov
adc
shrl
jmp
inc
dec
data16
push
add
xor
sahf
fidivl
sbb
xor
test
test
daa
imul
lcall
mov
or
jns
out
leave
push
pop
dec
cmp
movsb
outsb
cmp
shrb
cwtl
mov
popa
ret
sbb
sbb
addr16
cmp
fidivl
test
std
pusha
and
push
scas
sub
ljmp
mov
in
xchg
shrl
inc
add
mov
xchg
insb
cld
cmp
outsl
sub
xchg
and
lds
push
jge
movsl
pop
les
ret
and
sub
popf
push
cmp
mov
sbb
movl
fsts
movsb
dec
mov
inc
frstor
push
fldcw
out
mov
lret
fwait
mov
or
rcl
das
iret
mov
es
jnp
sbb
stos
lahf
enter
in
xchg
into
and
adc
pop
bound
xor
loopne
lods
icebp
xor
xorb
out
xor
pop
mov
arpl
and
enter
popa
pop
pop
sbb
enter
xor
cmovne
shr
fcoml
data16
lods
test
sbb
outsb
add
xor
xchg
pusha
fs
dec
fsubp
lock
jo
out
test
push
mov
jmp
lret
push
movsl
add
fistl
cmp
insl
test
add
outsb
xchg
xor
ror
adc
adc
jnp
aam
dec
shl
gs
pop
push
or
cmp
mov
gs
adc
fstpl
mov
aaa
cld
sahf
push
outsb
inc
outsl
cmp
inc
cmp
imul
in
mov
pop
jmp
int
inc
clc
xchg
les
push
out
bswap
insb
push
scas
xor
push
sbb
call
mov
xchg
and
jmp
jno
mov
pop
testb
orl
xor
dec
mov
dec
loop
pop
ret
xchg
inc
mov
mov
ss
pop
mov
push
mov
sbb
fwait
sub
fistpll
pop
ret
scas
push
pop
or
in
push
adc
scas
cmp
sub
outsl
add
rorl
das
and
push
mov
repnz
dec
shll
jmp
and
and
and
mov
test
cltd
call
mov
outsb
imul
xchg
ret
cmp
dec
jecxz
xor
fsts
sar
xor
mov
adc
sarb
cli
jbe
mov
inc
mov
dec
dec
pop
mov
xchg
jns
xorl
sbb
std
jae
cmp
jo
addr16
lock
xchg
out
pop
dec
mov
int3
xchg
pop
dec
pop
aad
into
inc
fists
sub
dec
int
cmp
dec
cmpsb
in
pop
mov
push
shrb
mov
inc
cmovb
mov
scas
jecxz
push
outsl
jb
test
enter
shrd
aad
lods
cmp
aas
test
js
enter
shlb
icebp
inc
adc
in
sub
pushf
pop
dec
jo
into
mov
lds
push
sbb
mov
je
in
jbe
dec
nop
xchg
adc
sarb
inc
push
sti
stos
insb
xor
sub
xchg
out
stos
push
repz
outsb
jp
stos
sti
sub
mov
mov
fldl
push
xor
ja
pushf
push
popf
jge
mov
mov
daa
fists
xchg
in
adc
enter
aaa
sub
add
dec
out
ja
lds
jl
nop
test
ss
pop
cli
push
fld
lret
inc
add
jne
sahf
mov
ja
sub
cmc
cmp
and
cmpsb
sub
int
scas
dec
mov
sbb
xchg
push
add
xchg
nop
mov
arpl
mov
push
sbb
sub
push
sub
pop
mov
mov
lcall
cmc
add
popa
das
adc
mov
in
mov
call
jbe
and
push
das
les
stc
and
idivl
xchg
test
lods
int3
movsl
vmovq
pop
lcall
ficoms
add
cmc
fsubs
sub
shll
fcmovb
pop
divl
iret
out
cmpl
bound
es
or
push
stos
lret
pop
mov
adc
cmp
aaa
dec
gs
aas
int3
fistps
imul
sbb
sbb
push
mov
adc
mov
add
cmpsb
imul
cmpsl
dec
adc
jg
pushf
push
sub
and
mov
jmp
mov
fidivrl
ror
or
sub
test
inc
mov
je
js
arpl
sbb
xchg
fwait
and
mov
inc
imul
and
test
mov
xchg
mov
and
push
pop
push
pop
jb
addr16
sbb
sub
mov
xchg
stos
jo,pt
out
rorb
outsb
mov
pop
jnp
das
xor
sbb
mov
mov
fwait
jne
pushf
inc
rcrb
xchg
adc
not
aam
dec
or
mov
stc
mov
push
adcl
aam
repz
ret
sub
scas
loopne
lods
inc
out
or
int3
push
aam
jne
inc
aas
popf
sub
lret
lret
mov
inc
mov
cltd
das
out
mov
addr16
in
in
scas
jbe
push
ljmp
leave
xchg
xor
inc
les
mov
sub
add
ficompl
iret
pop
sbb
shll
xor
sbb
mov
das
movsb
jns
shr
ret
xchg
sbb
mov
add
dec
jns
or
ret
mov
mov
test
or
xchg
in
nop
jb
arpl
add
jne
adc
cli
cmp
ficoml
ds
pop
jo
shr
mov
lea
repz
fistps
out
movsl
imul
push
gs
outsl
cwtl
mov
mov
lahf
cmp
test
push
sbbl
sub
xchg
jns
popa
scas
add
leave
xchg
movsb
lods
cwtl
lock
jecxz
xor
sti
stos
jle
add
push
loope
dec
fwait
or
imul
pop
in
dec
mov
xor
imul
jle
inc
scas
inc
ret
inc
jmp
jb
add
mov
iret
nop
mov
push
shlb
shlb
sub
xchg
and
pop
les
cmp
jmp
dec
xor
and
mov
test
fiadds
dec
mov
fwait
push
les
lea
imul
dec
mov
inc
sub
inc
push
fisubrl
or
cmp
hlt
lret
imul
scas
lods
or
xchg
xchg
add
push
lods
sahf
lds
mov
test
movsb
fisttpl
mov
add
and
inc
ss
mov
pop
pmulhw
pop
xchg
fwait
dec
push
cmp
pop
xchg
mov
das
loop
sub
dec
movsb
mov
fisubs
mov
mov
out
testb
mov
pushf
xlat
sbb
movsl
repnz
int
add
push
out
rorb
xlat
or
inc
stc
leave
xchg
movsl
loopne
int3
nop
loopne
dec
sub
mov
stos
or
popa
aad
sbb
xchg
mov
cmc
push
shll
xchg
dec
or
xchg
push
sub
aad
jae
xchg
or
test
orl
push
jp
mov
jbe
shll
in
cmp
imul
gs
daa
repnz
bound
adc
int3
mov
clc
dec
add
cmp
das
push
jns
mov
add
sub
fsubrs
fwait
in
sbb
daa
mov
nop
mov
data16
xchg
xchg
xchg
dec
adc
jne
sti
es
or
ficoms
sbb
les
jae
mulb
mov
adc
xor
or
cmpsb
add
pop
push
movsl
call
ret
pop
dec
cld
dec
add
cmp
repz
pop
mov
fwait
andb
jb
and
pop
ja
test
push
cld
fs
bound
xchg
fldenv
fidivs
mov
xchg
and
mov
cmpsl
xchg
or
loop
mov
pop
arpl
int3
cmp
pop
or
mov
fcomi
inc
jecxz
aas
jge
xchg
push
cltd
sbb
aam
add
cltd
xor
jge
xchg
push
or
dec
dec
rdmsr
push
test
daa
scas
pusha
inc
jbe
jg
in
pop
data16
or
inc
testb
inc
mov
adc
add
rolb
stos
notb
das
gs
fmul
test
adc
repnz
pop
jmp
pop
lcall
sbb
dec
push
test
icebp
jbe
in
cld
add
js
inc
ja
rorl
and
sub
and
ret
js
rcr
or
and
dec
push
les
pushw
inc
mov
pop
outsb
out
sub
stos
mov
sbb
jmp
xor
in
test
inc
sub
stos
cmpsl
fdivrp
hlt
out
mov
xor
dec
loop
cmp
mov
adc
fildll
xor
mov
jp
push
adc
shll
fdivrs
xor
sahf
clc
sub
fbld
pop
aam
mov
and
cltd
cmp
lods
dec
adc
test
lods
jne
addr16
jnp
jmp
and
dec
or
adc
xchg
test
es
mov
cmp
push
or
les
test
inc
sub
xor
movsl
and
in
cmp
fiadds
mov
jl
mov
add
stc
into
jo
and
and
les
and
xor
fdivrl
xchg
cmp
sahf
out
fmulp
jo
sbb
dec
lds
add
push
lret
into
inc
mov
test
inc
rorb
pushf
jo
mov
inc
mov
inc
outsb
ljmp
jae
add
or
pop
push
ss
adc
inc
jno
jnp
sub
adc
push
stos
cltd
fcompl
mov
imul
jle
lods
xor
pop
push
xor
xor
sarb
dec
punpcklbw
pop
aaa
int
xchg
sub
out
stos
mov
push
je
loope
add
les
cmpsl
sub
mov
gs
cmp
mov
mov
cli
pusha
aaa
mov
push
xor
cmp
adc
sbb
jb
lret
outsl
adc
mov
push
iret
andb
daa
cmp
sub
test
push
shrl
cmp
aas
test
xor
pop
cltd
xor
lret
push
lret
out
cmp
xor
ret
lcall
ja
cld
add
mov
lahf
adc
cmpsl
scas
popa
add
jle
cmp
pop
wrmsr
rcrb
mov
iret
xchg
mov
xchg
adc
mov
mov
add
xchg
imul
movsl
test
adc
imul
scas
repz
adc
pop
xchg
sbb
in
repz
and
mov
in
sub
mov
xor
test
icebp
cmpsb
jns
xchg
cmp
fwait
xchg
dec
jb
sub
or
outsl
mov
inc
in
cmp
pop
xchg
jp
pop
repnz
pusha
push
jae
push
out
adc
jl
push
sbb
pop
rclb
push
fcompp
cmpsb
pusha
add
dec
rcl
push
and
add
xor
insb
flds
xchg
shll
lea
mov
sbb
idivl
xor
mov
jae
sub
frstors
rcr
ret
imul
ds
dec
sub
xchg
subl
mov
ret
dec
xor
cmpsl
adc
fimull
test
imul
cmp
mov
xchg
ss
call
rolb
jnp
fstpt
fwait
jp
std
adc
fadd
add
fbstp
ret
mov
mov
sahf
adc
pop
dec
fcoms
mov
arpl
cld
jmp
pop
xor
lods
dec
pusha
cltd
insl
sahf
mov
gs
out
sub
xchg
xor
fwait
inc
dec
cld
inc
jns
lcall
ss
dec
add
mov
and
cmp
inc
adc
inc
sbb
and
addl
inc
or
nop
push
lods
jae
add
ret
fwait
mov
inc
loopne
imul
por
pop
fdivrp
push
xchg
push
ja
lcall
inc
insl
outsb
lahf
mov
pop
xor
pushf
cmp
loop
test
shlb
fstl
ja
xlat
popf
outsl
fs
inc
test
jecxz
add
xor
pop
movsb
mov
inc
dec
sbb
test
popl
andb
test
pop
loop
daa
out
cmp
inc
add
sbb
loope
adc
das
int3
or
jmp
jnp
sbb
in
xchg
aaa
dec
jno
cld
daa
push
cmp
hlt
inc
sbb
sub
loop
aas
bound
jne
cltd
add
push
daa
ret
mov
fstpl
mov
stos
adc
orl
fistl
mov
in
jb
xchg
std
jle
mov
pop
incb
inc
push
add
pop
inc
push
jae
shl
cmp
push
shll
add
xor
fwait
adc
jle
cli
mov
sub
xchg
int
aad
out
cmp
test
cmp
int
mov
scas
sub
sbbb
inc
inc
enter
and
mov
filds
movsb
fwait
mov
mov
add
mov
mulb
dec
fiadds
and
mov
adc
and
xchg
cmp
repz
jo
lahf
mov
xor
movsb
add
mov
cwtl
dec
insl
sub
xchg
xchg
movsl
push
xchg
shl
jne
test
daa
xchg
jae
jo
mov
shlb
inc
xchg
mov
fidivs
iret
inc
mov
xchg
pop
dec
sbb
jnp
je
movsb
or
ret
addr16
dec
das
test
mov
dec
nop
dec
cmp
andl
pop
inc
in
sbb
orb
lods
lods
and
pushf
sbb
popf
xchg
and
addb
das
repnz
cmp
xor
test
adc
mov
test
push
sbb
mov
rorl
cli
jae
push
ret
mov
fwait
cmp
loop
imul
arpl
and
repz
mov
repnz
pop
cli
fs
jno
jge
mov
or
ja
fcom
xor
mov
and
aad
add
pop
pushw
add
shrl
sbb
stc
dec
mov
add
cs
mov
dec
sbb
out
loopne
push
rcll
add
addb
mov
insl
mov
ss
inc
xchg
cmpsl
stc
jne
jns
add
je
add
pop
sti
inc
std
jne
sub
and
into
hlt
push
iret
sub
jl
out
sahf
pop
gs
stos
push
push
push
insb
mov
or
call
jl
lahf
dec
ss
push
enter
cwtl
call
push
mov
movsl
push
stos
iret
iret
adc
test
pop
mov
cld
xchg
das
out
inc
mov
scas
or
insb
popa
adc
gs
xor
mov
sub
iret
push
and
and
push
add
mov
push
shll
sbb
push
test
jmp
sbb
dec
sub
jmp
inc
or
fwait
in
push
cli
shr
lret
pop
sti
sub
repz
scas
cli
andb
xchg
sahf
arpl
pusha
xchg
scas
xor
addl
lret
sub
xchg
mov
ss
adc
addr16
jne
lcall
subl
push
mov
mov
cmc
and
jno
scas
out
mov
addr16
fld
cmp
push
mov
in
aad
inc
mov
inc
roll
pop
dec
dec
add
popf
lret
lods
cli
mov
iret
and
fnsave
sub
and
xchg
mov
in
stos
jnp
out
sub
rcll
adc
and
faddp
cs
mov
jg
out
shlb
xor
mov
repz
adc
sbb
pop
je
dec
and
jl
mov
stos
jl
xor
mov
sub
rolb
mov
mov
mov
out
push
sbbb
or
js
jp
jb
stos
lods
dec
fsubs
ja
orl
aaa
mov
pop
popf
rorb
sub
int
icebp
xchg
mov
mov
xor
std
popa
and
jl
push
nop
fistpl
in
xchg
sbb
pop
jecxz
inc
mov
js
or
inc
cmp
cmp
rorb
shlb
lods
sbb
adc
push
and
cmc
div
movsb
mov
ja
dec
sub
push
xchg
or
cmp
pop
mov
movsb
cwtl
push
lds
ret
fisubrs
pop
pop
push
insb
into
rolb
not
push
lods
pusha
push
xor
jns
enter
arpl
test
mov
inc
xchg
or
sbb
dec
xor
inc
daa
add
ss
test
rcrb
jmp
jge
ja
pushf
pushf
adc
mull
jle
sbb
cs
dec
jmp
lock
clc
sti
loope
bound
lods
push
stc
aaa
adc
adc
in
lea
lcall
je
pusha
ss
jnp
shr
cmp
xor
out
leave
mov
ja
ret
inc
xchg
mov
or
fimuls
pusha
shr
sbb
pop
les
push
mov
ret
sub
pop
cltd
sub
xchg
adc
and
scas
and
fisubs
in
inc
push
out
pop
xor
dec
addr16
sub
and
jno
out
in
cwtl
jle
out
daa
cmpsl
push
lret
sub
loop
adcb
hlt
adc
sub
out
xchg
mov
popa
scas
out
adc
lret
clc
loopne
cmp
push
mov
dec
addb
test
loopne
add
sbb
push
lods
pop
jnp
test
in
mov
out
dec
lds
sbbb
int
xchg
mov
pushf
lret
push
insl
out
out
loope
mov
sbb
fisttpl
sub
stc
bound
es
add
aaa
hlt
or
cmp
inc
cwtl
jg
clc
mov
or
and
or
add
enter
add
add
add
rolb
jne
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
push
test
mov
in
jp
mov
mov
xor
fs
mov
mov
add
cmp
push
std
pop
sub
scas
dec
xchg
scas
shl
shll
dec
push
mov
jae
cmpsl
mov
and
inc
arpl
cmp
loope
aaa
sub
repz
adc
jae
nop
pusha
incb
add
add
jno
lret
imul
out
mov
sti
in
mov
aas
cld
mov
mov
xor
shlb
outsl
sub
mov
fidivs
push
jns
incl
lea
mov
xor
sub
xchg
push
mov
lods
loopne
mov
jecxz
jnp
sub
mov
inc
jbe
int3
mov
inc
add
pop
in
xor
cmpsl
jp
sbb
lods
mov
or
out
inc
jmp
add
sbb
je
jl
addr16
sbb
aas
push
xchg
sub
inc
pop
movsb
es
pop
and
mov
fsubrl
fs
out
push
cmc
inc
loopne
outsl
sbb
or
sub
jbe
sub
ret
mov
jg
popa
aaa
dec
popa
enter
jne
outsb
xchg
lds
lods
push
mov
jo
xchg
out
sub
mov
sbb
sbb
into
cmp
arpl
or
mov
mov
adc
test
jne
mov
cwtl
ja
stos
lahf
jg
adc
pop
push
pop
fnsave
add
test
sar
dec
inc
pop
daa
cmp
inc
mov
cmpsb
jmp
nop
adc
xor
pop
insb
jp
mov
inc
iret
dec
loop
pushf
jmp
jecxz
mov
shlb
push
repnz
aam
pop
push
mov
fwait
jge
lea
cmc
push
cld
std
xor
mov
add
sbb
jb
inc
inc
mov
xor
mov
test
inc
cs
fidivrl
stos
jmp
cmp
adc
mov
xchg
test
inc
loop
lcall
add
jb
loop
pop
stc
pop
stos
cld
cld
and
adc
sbb
xor
mov
les
inc
incb
xchg
push
test
add
lahf
ffreep
mov
clc
xor
push
shl
leave
push
jno
push
mov
mov
add
call
les
jne
jbe
das
rorl
les
dec
test
xor
jb
frstor
enter
xchg
jnp
sahf
call
cld
cmp
inc
pop
out
inc
xchg
push
or
mov
cmc
pop
sbb
push
mov
popf
or
aad
and
call
and
and
xor
sbb
or
mov
inc
loope
mov
mov
pop
insb
enter
iret
popa
hlt
les
and
mov
loopne
incb
and
jo
js
mov
pop
ret
dec
cmp
pop
sub
adc
and
je
nop
cmc
sbb
fsubp
popa
mov
push
out
sbb
push
sbb
xor
stos
bound
or
hlt
in
mov
loopne
or
fistl
loope
push
sub
inc
roll
ffreep
into
mulb
arpl
cmpsb
test
mov
push
addr16
dec
pushf
sub
and
inc
mov
jecxz
fstpl
data16
repz
popa
pop
lcall
xchg
mov
add
cmpsb
sub
fmulp
adc
push
add
xor
hlt
add
cmp
push
insb
adc
cmpsl
aad
xchg
add
mulb
fbstp
pop
in
roll
stc
adc
add
mov
add
ds
aam
sub
mov
gs
shlb
mov
nop
mov
add
inc
xchg
repnz
lds
aad
sub
mov
xor
clc
jno
js
lret
stos
scas
loopne
cmp
loop
je
ss
push
sbb
popf
fisubs
stos
fwait
adcl
lea
or
dec
ja
loope
imul
out
inc
mov
mov
js
push
or
xchg
inc
inc
repz
fxtract
sub
push
dec
int3
fiadds
jae
mov
xor
push
pop
pop
push
or
ja
pop
cmp
fsubrp
and
cmp
jae
pop
ret
xchg
test
outsl
pop
cld
xchg
std
push
insl
ljmp
test
out
mov
ficomps
add
test
pop
ja
pop
test
jo
pop
int
sub
sub
adc
xor
scas
lret
jnp
cmc
addr16
cmc
int
jne
cmpsl
xor
ss
in
or
in
cltd
insb
mov
lods
or
xchg
out
xchg
and
test
imul
pushl
mull
rcrb
cli
add
iret
and
push
jae
je
cmp
int
dec
inc
sub
fsubrl
in
data16
jg
push
mov
icebp
fstps
ffree
imul
ljmp
sub
adc
enter
dec
sub
rcl
adc
sbb
mov
inc
addr16
add
ficoms
mov
pushf
fisubl
data16
mov
mov
dec
aad
roll
hlt
adc
stc
fwait
add
and
xorl
test
shlb
test
stos
add
and
pop
iret
stc
mov
icebp
push
nop
sub
add
ja
sub
jmp
stc
mov
test
pop
int
imul
inc
mov
mov
mov
loope
adc
or
das
int3
dec
adcb
mov
xchg
cmp
sbb
rcr
sub
mov
test
jae
sub
dec
daa
lret
int3
add
sub
mov
sub
ljmp
add
shr
test
test
in
fbstp
mov
sahf
aaa
dec
imul
movsl
jmp
in
out
mov
sbb
pop
sub
mov
nop
xchg
push
xchg
jle
mov
dec
pop
mov
in
daa
in
js
test
mov
stos
add
into
int
roll
inc
pop
xorb
imul
outsl
aam
es
clc
outsl
sub
jne
pop
cli
mov
push
imul
and
pop
cmpl
mov
dec
jecxz
fidivs
outsl
mov
lahf
push
test
xor
ret
test
fstl
orb
pop
mov
imul
lods
cmpsl
lahf
push
and
scas
sub
insl
jg
addr16
xlat
rorl
sbb
ret
cmpsl
inc
xlat
push
adc
add
in
add
mov
adc
mov
dec
cmp
jp
mov
dec
rorl
sub
and
pop
aad
inc
jl
cmp
popa
cmp
sbb
movsb
frstor
scas
push
push
bound
push
stos
or
inc
in
icebp
xchg
inc
lahf
cltd
out
mov
add
adc
inc
sub
pushf
inc
mov
movsl
pop
jae
in
jp
sub
push
inc
push
mov
rorb
repnz
inc
adc
mov
andl
pop
push
lea
loopne
lret
test
dec
cli
cs
or
push
stos
hlt
and
cmc
mov
mov
lahf
sub
jp
sub
adc
dec
add
cld
dec
adc
mov
mov
xchg
leave
les
orb
push
negl
gs
jae
int
sahf
ret
and
hlt
and
push
je
jg
pop
aad
scas
test
shlb
inc
shll
or
push
mov
sbb
adc
mov
xchg
test
lds
scas
bound
aad
mov
jno
aas
jp
in
push
push
pop
pop
inc
mov
dec
loop
and
mov
xor
es
fdecstp
cmp
sub
iret
dec
cmpsb
imul
sbb
jp
sti
jmp
xor
cmp
inc
dec
out
orb
loopne
subb
push
push
ljmp
scas
in
inc
mov
ud1
xor
dec
jns
addr16
rcll
insb
dec
jbe
and
aam
push
mov
push
mov
and
push
jl
sub
decb
sarb
fsubl
test
hlt
jne
ss
and
pop
out
je
lcall
dec
or
lea
int3
rolb
pop
lcall
push
mov
fadd
mov
mov
testb
cld
lods
jne
inc
testb
add
sub
cmp
or
fsubs
and
shrb
out
inc
mov
mov
sbb
iret
sub
and
flds
mov
shlb
movsl
lahf
cld
das
xchg
gs
dec
cld
scas
adc
mov
test
xchg
daa
jmp
mov
push
adc
mov
es
sbb
fnsave
or
xchg
lcall
daa
lock
jle
fs
inc
outsl
lds
and
add
jge
adc
ret
jno
test
dec
inc
jns
push
adc
lret
enter
mov
scas
cmpsb
xor
and
jno
sbb
rcrb
cmc
mov
or
shll
syscall
cmp
aam
call
xchg
loop
pushf
ret
and
adc
shrl
imul
adc
out
inc
sbb
sti
cli
clc
add
aaa
sbb
sbb
pop
inc
xlat
pop
es
mov
rcrb
xchg
shr
push
fwait
pop
jmp
in
pop
nop
ds
adc
aad
xor
pop
pop
jl
add
cmp
leave
icebp
stos
pushf
dec
sbb
push
out
into
ja
fsub
jne
sti
fistpl
into
fidivs
clc
flds
adcb
jne
cs
fstl
cs
int
vmovshdup
inc
lcall
imul
xor
cltd
popl
pusha
enter
xor
adc
jp
pop
mov
inc
imull
push
ret
es
shl
out
mov
push
es
test
and
dec
fwait
lret
testl
je
pop
jge
fidivs
insb
fimuls
cmc
pop
add
popl
mov
pop
ja
xor
and
xor
push
aad
clc
fwait
hlt
adc
in
ljmp
xor
xor
and
loopne
psubb
push
mov
js
outsb
notl
shl
sub
mov
movsl
jecxz
fstl
push
testl
aas
mov
push
rep
popa
out
es
movsl
cs
les
iret
push
xchg
cmp
out
or
sub
xor
push
dec
push
adc
xor
into
and
jns
gs
icebp
dec
mov
into
and
mov
es
cld
dec
aad
pop
in
pushf
add
fistpl
mov
xchg
sti
imul
push
sarl
xlat
test
jl
and
jg
cs
jnp
inc
xchg
adc
repz
sub
mov
jnp
loope
out
lods
cltd
jno
push
or
jno
test
ret
pop
fsubl
mov
rcrl
lcall
dec
repnz
fldcw
push
pop
movsb
jg
pop
jge
call
pusha
inc
xchg
cmp
ljmp
xchg
loope
push
rorl
and
sub
clc
test
fisubl
mov
add
mov
test
pop
xchg
mov
pop
add
mov
cmp
dec
add
push
sbb
mov
add
pusha
insb
fs
es
in
shll
cmp
xorb
mov
pusha
lcall
mov
fmuls
cltd
push
in
xchg
js
mov
js
mov
sub
dec
das
cwtl
popa
pop
rcrb
les
cmp
dec
push
mov
fdiv
mov
out
leave
stos
fistl
test
lret
movsb
or
push
lods
cmp
fisubrs
or
gs
stc
mov
inc
ljmp
cwtl
adc
dec
out
push
out
subl
lods
mov
test
dec
dec
jb
adc
inc
nop
cmc
jns
std
mov
push
rorl
imul
imul
adc
and
adc
pop
daa
mov
call
adc
inc
out
mov
cs
iret
stos
cmpsb
dec
dec
bound
imul
dec
dec
aad
jge
cwtl
mov
sub
pusha
inc
and
push
cmp
mov
lea
in
pop
pop
sarl
loop
add
push
popa
hlt
sub
sub
xchg
and
je
out
add
dec
mov
out
dec
arpl
mov
xchg
bnd
mov
into
or
xor
pop
sbb
sub
xlat
cli
sbb
xor
fmul
jb
xchg
push
add
movsl
int
xchg
pop
cmp
out
cmp
push
lret
cwtl
xor
adc
xor
dec
mov
dec
xlat
adc
clc
loop
jns
or
dec
ret
stos
or
lods
xchg
or
aam
inc
fistps
add
sahf
cmp
subl
fidivrl
and
sub
add
add
mov
lret
sub
push
adc
xchg
mov
sbb
leave
imul
pushf
sub
jmpw
push
int
adc
push
in
pop
das
sub
dec
enter
add
les
mov
clc
and
insb
mov
push
pop
test
jg
xlat
cmc
mov
push
gs
sbb
xchg
sbb
call
insb
js
je
mov
mov
mov
adc
sbb
jmp
adc
push
xchg
adc
pop
ja
pop
and
fmull
sbb
in
cmc
mov
and
and
mov
repz
adc
in
sahf
inc
imul
mov
xchg
jbe
pop
adc
fs
fmuls
pop
test
ljmp
loope
fimuls
or
xor
pop
fcmovu
jp
imul
rorl
in
push
pusha
sbb
into
inc
mov
cli
xchg
sti
push
loopne
insb
arpl
mov
dec
js
sbb
imul
mov
xchg
dec
jp
aam
fsubr
addb
ss
lret
mov
jg
xorb
or
cmp
sbb
out
mov
outsb
rcrl
xchg
dec
fs
pop
dec
xchg
test
sbb
and
pop
push
je
xchg
inc
add
fwait
adc
jp
add
push
psrlq
incb
pop
clc
sub
and
sbb
xor
loopne
cld
cmp
pop
addl
loope
std
jle
mov
inc
sub
daa
mov
mov
cmp
sarb
or
jp
pusha
add
adc
mov
test
loopne
subl
int3
pop
mov
gs
xchg
idiv
add
jnp
repnz
out
aam
dec
xorl
mov
push
and
jecxz
pusha
cmp
xor
and
sub
xorb
inc
jge
popl
jns
inc
js
jmp
xchg
add
or
jp
and
xchg
mov
pop
sub
inc
bound
jmp
les
hlt
scas
das
stos
lahf
in
call
mov
rcrl
xchg
loopne
mov
arpl
or
sub
popf
sbb
inc
add
pusha
mov
frstor
or
leave
sbb
ljmp
movsl
outsb
scas
push
xchg
out
lret
sub
repz
sbb
mov
outsb
jae
inc
repnz
jae
xor
xor
gs
add
dec
mov
mov
jns
fsub
js
mov
je
repz
push
adc
daa
leave
dec
loope
mov
sub
mov
data16
pop
incl
cmpsl
push
adc
add
push
movb
add
mov
js
sahf
sub
rcl
xor
dec
mov
gs
mov
in
bnd
mov
fs
jle
dec
int
xor
test
pop
test
test
xor
insl
dec
shlb
out
xor
pop
ja
int
push
mov
jle
push
adc
aas
lret
sub
mov
mov
je
mov
data16
mov
rclb
cmc
push
mov
pop
das
inc
adc
inc
dec
and
jmp
mov
int
fs
gs
inc
push
mov
cmp
cmp
leave
push
cltd
mov
mov
test
lods
jno
push
sbb
mov
ja
dec
jg
or
rorb
xor
aas
adc
mov
movsb
cmc
ret
daa
shlb
jge
inc
and
ds
adc
les
stos
mov
jb
pop
faddl
pop
inc
aas
cmp
rol
or
test
sbb
mov
repz
dec
fidivrs
mov
push
push
pop
or
ds
and
xchg
ret
enter
mov
pop
sti
movsl
mov
setle
push
or
mov
mov
adcb
scas
jo
movsb
sub
mov
push
pop
sbb
int
pop
mov
sub
xor
pop
mov
addr16
lret
lret
fimull
and
mov
inc
push
inc
cs
pop
sbb
and
rclb
xor
mov
stc
xchg
rorl
xor
xor
xchg
sbb
mulb
mov
sbb
dec
call
add
xchg
je
fistps
outsl
dec
daa
jbe
mov
subl
push
loope
imul
leave
lock
xor
clc
repnz
mov
lock
xchg
mov
sbb
fnsave
andl
mov
mov
lcall
loopne
add
sub
mov
stc
jp
outsl
mov
lahf
or
mov
fcompl
mov
pop
adc
or
sbb
mov
sbb
push
clc
sarl
enter
cld
loop
fimuls
xor
jmp
out
adc
rorb
test
movsb
add
cwtl
pop
cmp
lds
test
sarb
push
cmc
inc
out
sbb
adcl
sbbb
arpl
mov
cmpsl
xchg
mov
xchg
or
mov
mov
adc
sub
jl
test
inc
mov
dec
movsb
pop
lds
mov
arpl
inc
sbb
pop
andb
xor
insl
lahf
mov
lcall
xchg
mov
sbb
jecxz
pop
shlb
stos
xor
jecxz
jge
mov
pop
push
aad
cmpsb
mov
mov
test
sub
sub
mov
mov
and
ljmp
mov
and
push
jae
push
fildl
imul
int3
and
aaa
inc
cmp
dec
cld
ret
enter
jns
mov
inc
mov
lock
jbe
push
ret
or
sbb
aas
adc
divl
inc
mov
fwait
nop
pop
fcompl
push
ss
lock
ret
sbb
adc
js
pop
mov
out
adc
loope
or
in
add
fmuls
cmp
fisttpll
inc
push
repnz
movsb
sbb
jge
sub
pusha
pop
push
fs
or
cmp
pop
in
mov
cs
sub
sub
icebp
cmpsl
je
iret
and
xor
or
into
les
mov
or
adc
aas
and
dec
movsl
mov
mov
shrb
xchg
pop
xchg
dec
cmp
mov
leave
sbbb
jp
dec
inc
out
ret
sti
fdiv
dec
aam
adc
pushf
lods
sbb
das
ljmp
cmp
mov
shll
jns
inc
and
push
and
aaa
and
pop
add
cmp
xchg
lea
adc
movsl
dec
stos
dec
pop
cmpsb
loope
lahf
popa
xchg
pop
pop
je
pop
aas
hlt
adc
cmp
jecxz
pop
scas
ljmp
xchg
dec
lock
jnp
test
enter
adc
mov
jecxz
imul
rolb
fdivrs
rcll
dec
jb
cmc
cmp
jge
mov
xlat
xchg
pop
xchg
xchg
adcb
ja
call
ret
or
dec
pop
push
fisttps
jge
test
outsb
or
sarl
mov
adc
add
into
fwait
les
jge
mov
add
rclb
outsb
js
cmpsl
ret
outsl
call
fsubrs
popf
sahf
gs
sub
testb
push
mov
outsb
test
add
lods
aas
imul
dec
pop
xchg
ljmp
cmpb
mov
mov
andl
lahf
lahf
xchg
sti
adc
std
pusha
mov
and
and
vpaddsw
call
loope
sbb
sub
mov
rorb
rcl
adc
out
pop
adc
shrb
sub
leave
movsl
push
mov
lods
movsb
add
adcl
pop
push
add
movsb
dec
jo
push
leave
lea
cmpl
mov
inc
sub
scas
or
inc
nop
sbb
push
call
aad
inc
mov
in
data16
int
jnp
lock
cltd
les
mov
mov
js
wbinvd
push
mov
xor
ret
rorb
and
xchg
mov
push
movsb
jl
sub
ret
dec
sti
aam
fdivrl
pop
sub
adc
gs
push
or
and
pop
lahf
pop
aaa
test
pop
cmp
stos
lock
lods
sub
outsb
adc
outsl
or
xchg
xlat
mov
xor
mov
les
mov
push
inc
add
add
fiadds
outsl
adc
push
shll
stc
xchg
mov
cmpsb
inc
mov
xor
push
nop
mov
xor
out
cltd
inc
adc
mov
jge
clc
push
daa
push
aam
clc
jle
data16
adc
out
outsb
mov
xchg
int
rcll
pop
xor
aas
jg
add
cwtl
addr16
inc
shrl
push
or
aas
push
add
mov
repnz
mov
fstps
pop
jb
dec
push
mov
sub
test
jg
in
sbb
fcoms
std
in
notb
loope
cmp
mov
inc
push
out
xchg
pop
repnz
or
and
jns
out
arpl
xchg
sub
je
mov
mov
das
push
cli
xor
adc
stc
mov
jecxz
and
jecxz
cld
jbe
scas
jmp
mov
cmp
sbb
gs
dec
xlat
loop
test
push
jns
push
jo
add
aaa
ror
cwtl
fmuls
repz
and
lds
lahf
inc
sbb
pop
mov
es
mov
jae
das
cltd
xchg
loopne
dec
lcall
adc
sub
cmpsb
xor
jns
and
jns
push
pusha
mov
xor
or
inc
cmp
mov
mov
and
dec
xchg
in
test
ljmp
imul
aad
arpl
mov
out
pop
js
jl
aad
add
push
inc
outsb
mov
jle
jbe
inc
pushf
push
push
mov
sbb
mov
mov
into
jno
mov
mov
or
adc
sbb
loopne
sti
cltd
outsl
dec
stos
pop
inc
jbe
enter
es
or
inc
sahf
add
jp
or
push
add
dec
or
add
das
in
leave
mov
jmp
push
inc
sub
jns
stos
xchg
data16
xchg
jns
sub
mov
aad
sbb
ja
mov
pop
insl
xchg
mov
stc
repz
insl
pop
test
jge
or
fimull
cmc
dec
out
aas
lea
jp
jg
jg
pop
jmp
jo
in
in
aaa
repnz
mov
jge
xchg
inc
pop
add
and
xchg
push
jae
out
in
or
js
mov
test
lcall
inc
cli
xadd
mov
cmp
add
push
inc
mov
in
mov
and
push
xchg
push
sti
sub
js
and
sub
cmpsl
pop
xor
daa
cs
cwtl
loope
in
pop
enter
fldt
out
mov
mov
jmp
lock
cld
mov
psadbw
dec
lahf
lds
xor
loope
pusha
loope
inc
jnp
aaa
mov
dec
adc
inc
cs
aas
cmpsb
lret
adc
jb
push
lds
mov
push
dec
dec
cmpsl
or
leave
cmp
pop
xor
and
or
or
aaa
inc
dec
test
mov
bound
xchg
cmc
aam
mov
and
fcomip
push
jbe
dec
cmp
js
out
cwtl
xchg
inc
insl
das
dec
orl
bound
out
scas
push
jg
adc
pushf
repz
leave
enter
outsl
sbb
sub
scas
fnsave
in
mov
cmp
mov
pop
das
loope
popf
and
and
mov
daa
test
sahf
out
pop
outsb
cmpsl
notb
test
cli
rcl
enter
in
push
scas
dec
sbb
es
das
mov
wbinvd
cltd
push
mov
dec
jmp
mov
pop
adc
fcom
pusha
movsl
jns
push
repnz
dec
lea
mov
leave
or
push
in
fs
movaps
test
push
scas
jnp
je
mov
bound
and
xor
roll
dec
adc
outsl
mov
repz
add
xor
mov
sbb
insl
in
test
push
movsl
outsb
loop
sub
xchg
dec
adcl
cld
aaa
or
popa
aas
xchg
mov
nop
test
sbb
je
jbe
mov
push
call
sbb
mov
lods
leave
mov
add
sbb
mov
scas
adc
out
cld
sti
cmovnp
or
adc
pop
hlt
push
fs
mov
jle
iret
cmpsl
dec
sub
push
and
test
inc
xchg
xor
inc
ffreep
test
sub
ret
pusha
mov
aam
mov
or
dec
cmp
mov
mov
xchg
aas
mov
ja
jmp
repz
xlat
sbb
dec
scas
cmp
scas
lret
xchg
in
pop
nop
mov
xor
das
jge
or
pop
mov
push
test
add
sbb
loop
cmpsb
xchg
add
sbb
lret
push
push
idiv
js
inc
pop
xlat
adc
pop
cmp
sbb
mov
xchg
push
and
push
fs
pand
cld
mov
push
in
xor
add
mov
mov
lds
xor
push
adc
xchg
sub
fs
into
popf
and
jmp
fldt
daa
dec
shrb
sahf
enter
aas
fstpl
icebp
inc
dec
mov
daa
imul
jg
mov
aad
or
inc
adc
mov
cmp
movsl
adc
int3
loopne
jmp
ret
jne
xchg
test
int
out
xchg
mov
ds
push
pop
pop
push
xchg
inc
mov
mov
jnp,pn
les
jnp
cmp
or
xchg
lcall
push
inc
cmp
ljmp
adc
inc
loope
jmp
sti
mul
cmp
insl
cltd
xor
sbb
mov
fldenv
popf
cld
dec
into
aam
lods
sbb
fdivr
inc
sub
ret
dec
repz
fists
mov
xchg
pop
adc
lea
jnp
adc
icebp
lds
fs
and
subb
test
insb
cmpsl
pop
dec
cmc
cmp
push
mov
and
mov
in
pop
in
and
jbe
pop
sbb
or
xchg
jmp
mov
xchg
in
inc
mov
pop
mov
shll
lcall
inc
or
shrl
push
mov
nop
das
scas
pop
orb
cli
sbb
add
mov
fbstp
jnp
out
iret
jle
xchg
ret
inc
bound
sub
mov
add
lret
pop
movl
mov
mov
in
adc
jns
and
mov
push
inc
arpl
cli
xchg
pop
fucompp
mov
sbb
rcll
in
or
fs
jge
ds
mov
jnp
movsb
sbb
loop
cmc
fidivl
xor
mov
inc
push
pop
sbb
mov
add
imul
jge
xchg
and
test
fimuls
xor
lock
in
std
add
adc
push
jg
fstps
test
push
pop
or
pop
call
orb
jl
scas
movb
or
daa
or
sbb
mov
movsl
outsb
hlt
add
xor
outsl
addr16
ja
jae
sti
push
pop
loop
mov
lods
out
mov
repnz
or
aaa
xor
aad
add
cmc
push
rorb
and
push
or
push
repnz
in
lds
clc
xchg
lock
pop
push
dec
cltd
dec
js
cltd
jno
dec
push
ret
pop
lcall
mov
lods
cmpsl
adc
xchg
out
addr16
add
jns
aas
negb
psubw
sub
inc
aas
or
cmp
popf
xchg
xorb
repz
ret
roll
das
mov
jle
flds
cmc
pop
sbb
mov
arpl
outsb
in
lahf
mov
aad
mov
adc
mov
mov
mov
push
es
mov
xlat
sbb
push
mov
lea
push
out
out
jmp
sbb
mov
adc
and
mov
scas
not
sbb
jae
ss
pop
xchg
test
out
stos
ficoml
in
inc
and
in
xchg
adc
sahf
or
lcall
dec
nop
mov
xchg
cwtl
rorb
xchg
push
push
mov
cmc
lock
add
mov
test
dec
test
mov
roll
mov
push
divb
xchg
xchg
cltd
inc
adc
pop
sbbb
mov
and
pop
xchg
scas
addb
xchg
data16
daa
test
pop
shrb
xor
adc
xor
or
and
int
sub
ds
sti
imul
das
aam
test
outsl
push
jg
fnsave
push
mov
scas
cltd
push
loop
ret
stc
dec
out
cmp
icebp
sbb
pop
pop
mov
enter
cmp
add
mov
xorb
shl
insl
imul
or
push
arpl
mov
shll
divl
sbb
cmpb
add
ljmp
insb
mov
mov
std
xor
mov
ret
mov
imul
cmp
repnz
es
add
mov
mov
lock
jge
sub
je
popa
pop
faddl
xchg
cmp
mov
pop
jns
sbb
cmp
adcl
push
loop
ret
push
push
in
mov
js
sbb
jb
fcom
sbb
add
test
fldcw
cmp
add
shlb
jle
sbb
or
add
stos
pop
mov
fiadds
lret
adc
dec
insl
jg
out
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
dec
xchg
adc
in
jp
cmp
aas
xchg
add
push
pushf
xchg
mov
cmp
pusha
dec
fimull
rclb
jns
sbb
cmpsl
adc
inc
push
stc
mov
mov
push
pop
mov
add
adc
lret
jne
cli
into
mov
cwtl
test
sub
jnp
push
iret
in
leave
loope
dec
and
dec
mov
xchg
test
dec
icebp
push
jl
lds
sub
jmp
push
mov
cltd
xor
fcompl
enter
pop
cld
aam
xchg
xchg
je
cmp
les
mov
or
ret
scas
mov
cwtl
xchg
stc
inc
hlt
push
cmp
push
cmp
fistpl
adc
adcl
mov
loopne
lret
pop
dec
xchg
jo
ja
xor
cmp
stos
popa
jl
les
mov
xorb
push
add
repz
inc
dec
pop
cmc
cli
jno
fwait
jecxz
sbb
or
push
adc
mov
mov
sub
sub
scas
adc
mov
orl
pop
mov
decb
sti
sub
lret
jns
jbe
xchg
push
and
scas
pop
jl
shll
es
jmp
sarb
pop
in
ja
aaa
int3
add
cmp
jmp
pop
jmp
orb
pop
push
roll
fsubl
cmp
sub
out
push
out
imul
or
cmp
mov
push
popf
bound
mov
pop
cmpsl
cmp
daa
cli
jnp
or
jne
repnz
js
dec
push
sbb
pop
cmp
mov
fldenv
push
inc
popa
mov
lcall
mov
out
lods
ljmp
sub
punpcklbw
mov
gs
lea
sahf
mov
scas
cmpsb
jge
mov
xchg
push
xchg
jecxz
pop
aas
addr16
sbb
daa
ljmp
loope
and
dec
mov
sbb
in
insb
push
jb
add
call
or
pop
sbb
das
jg
mov
ret
shl
loope
inc
sub
cltd
inc
adc
dec
mov
add
pushf
cmp
incb
jge
sbb
and
icebp
cmp
clc
jg
mov
mov
mov
add
fists
out
dec
cmp
mov
cli
mov
lea
lcall
adc
adc
pop
mov
mov
add
cmp
iret
data16
pop
mov
stos
addb
clc
fnstenv
add
test
lea
jge
or
lahf
imul
pop
push
mov
sti
lahf
pop
in
jl
jp
test
out
xchg
mov
push
ret
fsubrs
push
clc
mov
push
fdivs
ljmp
pop
test
addb
popa
je
movsb
fistpll
xchg
imul
divl
jg
mov
jg
sbb
jb
arpl
add
imul
mov
imul
pop
inc
sub
add
xchg
dec
lcall
pop
push
cmp
daa
xchg
sub
and
enter
stc
scas
lret
pusha
push
clc
call
pop
cltd
js
jmp
push
inc
mov
pop
outsl
pop
push
xchg
or
leave
mov
pop
cmp
std
sub
or
mov
aad
mov
lahf
stos
dec
fdivs
sbb
add
inc
pop
ret
or
loop
dec
or
gs
test
pop
xchg
jnp
int3
mov
jnp
mov
rcr
sub
addr16
jle
orl
inc
mov
js
push
hlt
and
mov
cmp
mov
pop
or
loope
pusha
dec
jmp
std
ja
arpl
ret
adc
ljmp
adc
int
scas
xchg
cltd
mov
dec
push
push
lods
lcall
inc
pop
les
jg
test
int3
cmp
dec
fdivp
int3
dec
or
push
xchg
push
je
push
xor
or
ljmp
ljmp
dec
mov
addr16
xor
mov
and
mov
and
jg
jne
pop
test
gs
push
sbb
cmpsl
mov
or
test
ja
mov
andb
xchg
mov
adc
push
cld
pop
add
jle
enter
aas
push
andl
xchg
cmpsl
adc
mov
es
xor
nop
imul
push
or
mov
mov
fs
popf
dec
jge
sti
inc
enter
roll
mov
inc
pop
lret
fidivrl
jge
mov
and
cmp
adc
jo
sahf
inc
cwtl
pop
sub
repz
lock
adcl
lods
out
jns
inc
dec
shll
xor
addl
add
cmp
stos
cmp
or
adc
daa
jns
mov
xchg
stos
fs
daa
dec
and
push
adc
jo
xchg
push
pop
rorb
mov
jl
xchg
pop
and
scas
ljmp
mov
divl
sti
imul
faddl
inc
das
leave
dec
mov
out
movsb
add
dec
and
hlt
or
jle
push
stos
iret
ret
mov
xor
iret
jns
rorb
pop
pop
or
ja
js
cmpsl
adc
daa
icebp
fcmovu
inc
push
lahf
sub
inc
mov
mov
add
xor
adc
adc
xchg
inc
adc
mov
rol
pop
mov
scas
in
notl
sbb
pop
dec
dec
jns
adc
test
add
mov
pop
dec
out
inc
and
pushf
cmp
dec
and
int
push
push
cli
fmull
jno
sti
pushw
cld
scas
cmp
shll
movsl
inc
add
mov
gs
jo
fiadds
dec
xchg
and
std
or
jge
ret
rol
addr16
repnz
arpl
leave
repnz
pop
repz
loop
popf
orl
sbb
daa
push
sub
in
xor
push
pop
imul
jmp
in
cmc
imul
in
cwtl
nop
je
mov
lcall
sahf
xchg
xchg
jmp
push
and
push
sbb
sub
out
push
inc
fsubrl
sti
xchg
ret
orb
jns
enter
gs
fwait
mov
cmpsl
inc
jl
aaa
mov
out
push
test
jns
lds
jbe
adc
bound
sub
xor
xorb
pop
or
cli
out
in
mov
xlat
loopne
pop
lods
jle
lods
jnp
repnz
jmp
dec
out
xchg
xchg
mov
pushf
sarl
xchg
jge
sar
repnz
inc
xchg
mov
lret
mov
insl
out
lea
add
push
mov
jne
daa
cld
stc
push
lret
dec
test
xchg
fs
stos
or
push
mov
insl
fsubr
mov
sbb
adc
out
jl
out
xor
and
addr16
xchg
stos
mov
mov
jmp
out
mov
in
inc
adcl
icebp
mov
rol
cmpsb
mov
out
xchg
shll
add
outsl
xor
sbbb
push
xchg
mov
dec
cli
xchg
js
lcall
jge
cld
push
enter
cli
jge
int
adc
sub
or
push
push
in
sahf
cmp
xchg
jle
cli
lret
and
mov
test
mov
or
cmc
push
lock
inc
xlat
fbstp
push
jae
hlt
dec
xchg
and
out
push
jb
sbb
mov
out
fmuls
pop
adc
jae
out
aas
cmp
jne
lds
test
add
mov
mov
sub
jp
scas
jmp
scas
aas
clc
cld
lcall
xchg
mov
lret
push
test
out
push
sub
leave
jns
push
mov
inc
imul
pop
mov
cmpsb
xchg
outsl
xchg
xor
rcl
sbb
mov
insl
mov
lret
add
dec
add
push
mov
push
test
dec
bound
jge
movsb
out
or
xchg
insb
scas
mov
mov
inc
sbb
bound
testl
sub
sub
loop
push
cmc
mov
mov
push
andb
in
inc
out
pmulhuw
xchg
ret
push
jbe
mov
and
mov
fisubrl
add
xor
je
mov
incb
ret
mov
add
dec
ja
out
dec
xchg
lret
jbe
jae
pop
push
test
add
dec
cmp
scas
out
addr16
add
xor
xor
data16
cs
rolb
mov
bound
stc
jbe
sub
test
fstp
add
mov
inc
dec
out
cwtl
sub
and
imul
icebp
inc
cltd
pop
or
jnp
movb
loope
idivl
rcrb
loop
fidivs
xor
xchg
xchg
inc
mov
sub
push
mov
inc
insl
push
adc
into
mov
rclb
dec
fisttpll
pop
xchg
cmp
shll
xchg
test
mov
mov
outsl
push
sbb
into
orl
xchg
ja
jns
mov
inc
inc
sub
call
push
inc
jp
outsl
movsl
add
imul
cmc
mov
dec
enter
sar
jb
lds
std
or
dec
mov
adc
imul
cwtl
iret
dec
andl
mov
lods
mov
mov
cmpsl
je
pop
mov
daa
inc
addr16
adc
dec
jnp
jno
push
jne
mov
jnp
push
pusha
sti
jge
push
popf
test
cmp
dec
fcoms
lods
fiaddl
dec
adc
inc
mov
out
repnz
pop
dec
fiaddl
std
lahf
les
xlat
xlat
loop
sub
movsb
mov
jnp
jbe
push
xor
les
mov
movsb
iret
pop
cwtl
pop
subb
sbb
inc
adc
frstor
xor
xchg
xor
in
mov
xchg
out
xchg
push
in
mov
push
orb
adc
mov
push
stos
jne
mov
popf
add
cli
jge
rorl
mov
test
out
pop
jmp
xor
adc
psraw
sti
in
jbe
sub
loop
dec
in
and
mov
sub
mov
bound
out
push
aas
mov
in
hlt
push
and
push
and
dec
leave
inc
mov
hlt
daa
pop
popf
fcompl
inc
xchg
sub
pop
mov
lock
or
jmp
cmp
cs
aad
ljmp
dec
dec
mov
pop
insb
loopne
push
xchg
inc
test
mov
push
sbb
adc
mov
lret
test
push
and
ljmp
outsl
mov
imul
mov
lcall
cmp
adc
iret
pop
test
insl
ja
leave
sub
sbb
sbb
ds
in
mov
lahf
inc
lds
jne
xor
xor
or
pop
mov
push
lods
jb
fcmovu
mov
cmp
fldl
dec
dec
aaa
lret
xchg
and
lods
test
dec
test
mov
stos
xor
pusha
in
orl
adc
stos
or
mov
push
lret
mov
adc
fiaddl
aam
pop
xchg
repz
dec
cmc
dec
js
aad
mov
cwtl
xor
mov
repnz
push
sbb
pop
xchg
out
orb
rcr
xor
xchg
cld
pop
xchg
mov
add
adc
add
dec
push
sarb
es
sub
xchg
push
shrl
cmc
jno
bound
fstps
fcomip
gs
fsub
sub
mov
mov
mov
lahf
xchg
leave
cmp
sbb
xchg
push
sub
popf
sub
aas
mov
pop
xor
addl
fwait
jns
test
faddl
add
dec
mov
and
jge
push
lcall
cmp
or
hlt
add
inc
shrl
xor
pop
in
movsl
and
add
int3
cmp
cmp
inc
loopne
mov
sbb
cmp
stc
inc
mov
mov
fildll
add
xchg
add
push
push
fnstenv
repnz
dec
jb
fsts
mov
add
xor
adc
test
or
aad
sub
mov
add
pushf
ljmp
xchg
push
inc
dec
loop
ds
xchg
jne
insb
xchg
jnp
xor
pop
push
clc
add
leave
adc
shlb
inc
mov
loopne
movsl
xor
sub
mov
fisubs
pop
cmp
jbe
fidivl
push
push
add
adc
pop
je
gs
push
out
and
les
movsl
loope
test
aad
mov
clc
jns
push
ja
out
or
mov
sub
or
mov
inc
sub
cld
roll
xchg
lahf
popf
out
sbb
fwait
inc
aam
ja
or
inc
cltd
cmp
sbb
adc
dec
dec
loop
xchg
mov
sub
add
jl
cld
in
sub
pop
or
decl
outsb
xchg
jp
addb
pusha
das
push
jne
jge
test
push
mov
xchg
frstor
pop
inc
repz
dec
out
popf
xchg
das
test
cmp
lods
les
loopne
sub
or
in
pop
and
or
nop
dec
movsl
or
add
or
dec
rcr
jg
adc
js
or
jmp
or
push
shrl
negb
pusha
pusha
scas
mov
test
or
and
or
mov
sub
movsb
test
repnz
fldl
mov
lds
adc
adc
mov
pop
sahf
addr16
mov
aam
in
pusha
insl
enter
pop
pop
cmp
stos
jno
jno
stos
popf
dec
lret
cmp
mov
sbb
push
lcall
mov
addr16
xadd
jb
insb
movsb
and
push
stos
das
sbb
inc
and
inc
dec
push
pop
rcrl
xor
lahf
adc
stos
gs
lods
ss
pop
sub
mov
and
cmp
xchg
pop
stos
out
iret
cmp
pop
sub
ds
stc
insl
outsl
aas
imul
jge
ljmp
xchg
orl
add
or
andl
in
push
jge
mov
xchg
popa
fstl
adc
dec
loopne
mov
repz
dec
insl
push
and
pop
insl
das
xchg
adc
sub
push
fisttpll
inc
sub
sub
flds
lods
mov
sahf
adc
in
loop
sbb
dec
sub
and
lea
jle
fsubs
in
inc
jecxz
data16
out
dec
mov
xchg
std
inc
inc
popf
or
push
dec
pop
shl
push
lods
mov
cmpsl
jno
jb
xchg
lods
mov
and
dec
mov
int
sbb
fadds
lahf
or
jle
adc
xor
imul
out
or
push
adc
mov
pop
dec
sbb
popa
dec
repz
mov
mov
sub
xchg
or
inc
push
adc
push
cltd
loop
cmpsb
mov
xchg
mov
test
inc
pop
out
cmp
xchg
std
out
inc
jg
pop
loopne
dec
jge
mov
dec
cmp
xchg
lods
call
stos
loope
lret
stos
jp
ss
cmp
xchg
jmp
mov
add
mov
jecxz
xchg
int
adc
fdivrp
pop
xchg
push
es
xchg
lds
jle
gs
fwait
inc
jbe
mov
jge
loopw
movsl
dec
addr16
je
adcb
repnz
cmc
loope
test
aad
xchg
dec
mov
and
jg
lahf
mov
inc
jecxz
pop
nop
std
and
dec
das
and
adc
lcall
sbb
lret
rol
shlb
xor
mov
mov
mov
add
out
pop
jno
inc
xorl
ljmp
sbb
insb
rcl
jle
cmp
popa
xlat
mov
mov
mov
fcomp
xlat
bound
std
hlt
dec
ret
sub
xchg
mov
imul
into
push
outsb
dec
xor
xor
repnz
adc
stos
mov
adc
xlat
dec
xchg
add
aam
dec
lret
sub
out
lcall
fisttpll
adc
faddl
lret
sub
bound
imul
mov
inc
xchg
outsb
xchg
insb
or
adc
cwtl
lds
add
fimull
fsubrs
jle
mov
jmp
fnstcw
pushl
xchg
mov
sbb
cmp
js
loopne
ja
mov
mov
mov
add
cli
mov
mov
jmp
cld
adc
push
std
int3
cmp
rorb
clc
mov
loop
sahf
idiv
sbb
out
fmull
sub
xor
clc
lret
lods
pop
jne
dec
push
mov
jno
and
rcll
ljmp
mov
aaa
and
test
cmp
and
pop
sub
jno
sbb
mov
cmp
cmp
bound
mov
xor
cmpl
shrl
xchg
push
add
inc
insb
xor
xor
std
jmp
or
jle
jmp
adc
cmp
adc
sar
sub
dec
ds
leave
mov
jmp
aas
adc
into
lods
ds
fdivr
insw
inc
popf
push
jl
xchg
outsb
fdivs
sub
out
cmp
movsl
imul
fiadds
mov
sbb
pushf
outsl
mov
mov
adc
sbb
mov
xor
pop
mov
mov
cmp
mov
pop
sbb
sub
test
scas
jecxz
xor
or
loope
pushl
jge
push
xchg
bound
xchg
adc
push
cmp
out
cmp
inc
out
pop
xor
push
push
mov
idivl
ljmp
cmpsl
or
fwait
or
pop
sub
push
mov
mov
mov
popf
pop
lock
jp
fwait
mov
push
test
add
and
stc
sub
mov
xor
mov
pusha
cmp
inc
dec
and
adc
and
rcr
mov
ja
sarl
arpl
mov
int3
rcr
pop
das
dec
xor
xor
push
das
pushf
ret
fsubs
into
sub
push
lods
ret
jecxz
xor
mov
rorl
inc
jmp
out
nop
mov
push
jo
outsl
mov
fmull
pop
jecxz
int3
stc
cwtl
pop
lahf
pusha
mov
arpl
mov
mov
ss
mov
mov
loope
loope
lcall
aad
hlt
xor
sub
jp
ret
aaa
mov
negl
xchg
adc
mov
iret
clc
add
cmc
push
mov
add
cld
sarl
sbb
fcomps
inc
sbb
inc
push
aas
mov
dec
and
lahf
mov
cli
xchg
mov
fidivl
and
int
jecxz
jl
ja
fsts
mov
jae
cmp
push
fidivs
fimull
mov
ror
xor
sbb
sbb
enter
les
or
xor
lahf
dec
fildll
and
gs
mov
xor
flds
jmp
lods
mov
cmp
dec
in
mov
add
les
jns
test
ret
mov
les
mov
hlt
in
push
cmp
adc
adc
sub
and
sbb
popf
test
fimuls
cmp
bound
add
adc
inc
cmp
mov
dec
xor
clc
shrb
and
in
push
adc
xor
and
testl
lahf
out
fstpl
sbb
or
stc
mov
jp
xor
jl
lock
lods
scas
sti
pop
ds
cmpl
push
mov
push
out
je
mov
or
hlt
popf
dec
cli
hlt
rorl
xchg
popl
jb
in
stos
xchg
jae
and
cwtl
add
or
xor
clc
inc
popl
aas
ret
sub
mov
push
cmp
dec
rol
xchg
in
iret
cwtl
jecxz
fmuls
inc
scas
ss
mov
cmp
dec
pop
fisubl
gs
push
sub
rorb
js
dec
jl
int3
divl
xor
sub
lret
sub
mov
xchg
lds
test
or
cmp
push
in
rorb
sbb
pop
loopne
mov
scas
mov
test
or
mov
add
in
sub
in
xchg
mov
std
test
enter
das
dec
adc
shl
xor
test
xor
test
mov
xchg
push
or
or
pop
jo
fcmovnbe
fidivrs
into
and
sbb
je
rorb
push
xchg
test
scas
orl
cmp
mov
mov
push
shrl
bnd
mov
fwait
sti
xchg
fimull
dec
hlt
dec
scas
in
jecxz
and
sbb
cmp
lea
ret
push
stc
fs
pop
mov
lods
movsl
es
and
pop
aad
push
int3
add
cvtdq2ps
pop
das
lods
push
mov
clc
add
dec
mov
pop
lods
test
mov
xor
push
add
dec
jae
xor
jb
mov
das
fs
repnz
bound
or
and
mov
xor
jp
loopne
mov
int
sbb
or
add
sahf
mov
fcom
sub
xchg
lock
xchg
out
into
inc
push
movsl
xor
mov
je
mov
inc
shl
dec
jp
rorl
insb
mov
lods
and
in
pop
jge
test
loope
cltd
jmp
mov
daa
enter
arpl
pop
lods
xorl
rolb
fs
dec
mov
iret
adc
fldt
mov
push
rcrl
fstpl
out
or
stos
cmp
cmp
cmc
popf
jl
jecxz
je
fmull
xor
pop
xchg
es
xchg
pushf
pop
lds
jbe
lahf
xor
and
jge
dec
xor
dec
cs
lcall
jg
xor
or
out
fmull
push
not
fdivl
in
pop
js
add
fdivs
xchg
cli
in
add
cli
add
jecxz
mov
lret
out
std
aad
add
adc
sbbl
aaa
xor
xor
cmp
mov
imul
jo
pop
and
cmp
lahf
inc
dec
or
push
jno
shrb
stos
mov
repnz
or
call
xchg
pop
cmp
ret
xlat
push
dec
repz
add
jo
jo
and
or
adc
sbb
imul
cltd
mov
lret
int
mov
out
mov
shrl
xor
cli
aas
out
jbe,pn
mov
xor
pop
inc
dec
pextrw
xchg
or
push
xor
xchg
fldenv
jns
test
aam
fldenv
call
mov
sbb
pop
push
enter
data16
add
in
out
aad
aas
ret
jmp
lcall
add
xor
adc
cld
in
pop
cld
jmp
int
je
bound
jmp
mov
ret
mulb
pop
dec
stos
pop
cwtl
or
fstl
and
pop
mov
stc
nop
es
call
mov
add
fimull
daa
xchg
fbld
scas
adcb
outsb
xor
pop
outsb
fistpl
inc
lds
rcll
inc
pop
rcrl
and
lds
loope
in
xchg
sbb
push
xchg
in
and
pop
in
add
mov
loop
jns
in
push
jl
and
push
xchg
or
sub
xor
dec
fs
add
mov
push
and
pop
sbb
pushf
int
xor
xchg
jp
rorb
dec
jp
jne
pop
cmp
and
int3
leave
sbb
aad
cli
stos
sub
insl
push
daa
mov
pop
movsb
into
cwtl
inc
stc
aam
ret
shrl
int3
iret
cmp
cmp
cmp
mov
sbb
or
ret
pushf
std
pushf
inc
sahf
ljmp
loopne
fldl
sbb
rorl
pavgw
fchs
stc
xchg
ds
test
mov
ds
mov
or
iret
dec
lods
mov
pushf
xor
cld
cmp
ja
push
push
mov
inc
inc
cltd
jecxz
xchg
lret
fcomp
fimuls
pop
or
jle
mov
cmp
xchg
mov
out
pusha
cmp
inc
test
pop
fdivrl
pop
mov
xor
lret
es
jp
and
outsl
and
sbbl
and
sub
andl
ljmp
adc
xchg
fwait
les
stc
pop
cmp
insl
test
lahf
jge
aad
ds
daa
inc
lods
je
mov
das
adc
inc
cli
add
add
loope
outsl
mov
mov
test
xchg
jge
jge
fdivr
lret
mov
shll
push
mov
stos
push
xchg
push
push
inc
cmp
adc
pop
cwtl
jo
scas
push
xchg
or
movsb
xchg
pop
pop
imul
pop
loope
jmp
imull
dec
inc
mov
mov
pop
mov
mov
xor
mov
mov
pop
into
pushf
sarb
cmpl
jmp
mov
jle
dec
push
inc
dec
sbb
int3
mov
movsb
add
cmp
inc
dec
jl
cmp
xchg
cmc
add
mov
push
jno
mov
mov
mov
xor
mov
push
stos
int
nop
adc
cmc
insl
push
lock
xor
int3
sbb
jnp
divb
push
inc
mov
in
add
aam
jecxz
jge
jle,pt
cmp
dec
mov
and
xor
cltd
xchg
imul
or
and
mov
faddl
dec
lds
leave
fdivrl
outsb
out
cltd
pop
idivl
or
iret
sbb
cmp
shr
insl
mov
mov
cmc
xchg
inc
add
jge
xorl
and
mov
push
sbb
pop
push
fcoms
and
stos
dec
jmp
dec
jmp
insb
test
push
xlat
lret
lahf
jmp
cmp
in
rcrb
inc
jae
fcoms
inc
inc
lret
das
stos
jne
lock
fstl
ljmp
push
lret
mov
pop
jmp
push
cmp
and
push
repz
insl
jno
ja
push
lea
xchg
ret
outsl
xor
or
and
mov
scas
shrl
nop
mov
add
flds
fildl
sbb
adc
aas
jno
les
add
mov
push
and
lea
mov
xor
cmp
add
cltd
addr16
ja
es
mov
inc
repz
stos
out
sub
xor
mov
adc
mov
fistps
nop
sahf
hlt
adc
xor
dec
int3
cmpl
add
jns
pushl
adc
push
xorb
lods
into
aas
ljmp
mov
fcomi
jo
push
out
jnp
movsb
sarb
push
ret
idivb
dec
imul
data16
daa
and
fld
mov
cmp
dec
mov
fbstp
aad
xchg
mov
inc
mov
sub
popf
outsb
jmp
ds
les
inc
and
add
adc
arpl
cmp
jle
insl
mov
mov
cmp
inc
mov
fdivrp
mov
add
test
divb
xor
push
je
add
test
or
mov
or
or
imul
xchg
popf
cmp
jb
pop
mov
jne
dec
sub
cmp
out
out
inc
fistpl
scas
adc
pop
push
mov
inc
push
out
add
mov
inc
out
sub
push
sbb
pop
adc
cmp
push
dec
pop
push
dec
hlt
or
ja
xchg
adc
adc
inc
aaa
leave
push
enter
dec
jns
ret
mov
js,pt
xor
jmp
stc
rcrb
jae
cmpl
jo,pt
adc
filds
cwtl
mov
sbbb
mov
lods
sbb
imul
shrb
xor
scas
aad
test
add
jp
shr
jae
inc
data16
outsl
pusha
dec
xchg
pop
fcmove
loop
xchg
icebp
dec
fisttpll
jmp
mov
sub
ja
mov
push
mov
mov
push
cmp
xor
movsb
inc
sahf
rorb
and
pop
ljmp
lods
stos
lret
sbb
out
xlat
dec
jb
into
xor
daa
into
push
clc
shl
or
mov
les
inc
test
xor
movsl
ucomiss
ret
mov
sbb
stos
mov
addr16
jmp
inc
xorl
inc
je
push
jns
incb
stos
enter
fcmovnb
js
out
jle
insl
xchg
cmp
arpl
push
movsl
filds
mov
pop
cld
dec
pop
nop
and
cmp
dec
das
std
fcomps
scas
or
ss
jae
push
xor
hlt
insl
xor
test
mov
and
fstl
arpl
arpl
mov
push
mov
mov
xor
cltd
lock
dec
es
inc
out
pop
mov
mov
sub
and
cmp
stos
test
push
aaa
sub
mov
cmc
sbb
xchg
std
add
adc
gs
ljmp
ret
jl
in
push
mov
shl
out
mov
pusha
mov
in
sbb
cld
leave
cmc
adc
mov
inc
imul
les
rclb
fnstsw
lods
or
sbb
rcr
ja
jmp
inc
packuswb
push
mov
inc
jge
mov
mov
leave
push
gs
pushf
xchg
xchg
push
sarb
xchg
inc
cmp
cmpsb
loopne
jns
out
add
jne
inc
sbb
sbb
or
daa
ss
fdivrl
lds
mov
adc
sub
loopne
fs
or
xor
sahf
and
mov
shl
cld
push
leave
mov
sahf
xor
sbb
or
stc
dec
push
mov
pop
int3
adc
ret
or
pop
out
pop
clc
sub
push
xor
add
int3
xor
popf
shlb
lods
clc
dec
imul
shrb
pop
movsl
incl
pop
testb
xchg
sbb
cmp
out
les
aam
or
stos
rolb
and
sbb
and
in
scas
dec
xchg
inc
xor
pop
jne
pushf
dec
mov
lds
mov
jb
or
mov
or
test
push
mov
push
xchg
add
inc
adc
sbb
sub
rorl
mov
inc
hlt
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
sbb
add
inc
pop
jp
test
dec
ret
pop
das
insl
sub
test
jecxz
aas
out
xor
xchg
sub
jle
lods
sub
cwtl
xor
add
push
arpl
jns
jmp
sbb
xor
ret
xor
mov
int3
inc
push
mov
test
lds
testb
fmuls
mov
jp
int3
sbb
pusha
pop
cmp
std
cwtl
xchg
or
cmc
test
mov
sbb
nop
and
flds
insl
push
push
loop
bound
xor
or
mov
mov
lsl
push
dec
std
push
mov
mov
cmp
mov
jmp
pop
add
cli
das
xchg
and
dec
lcall
mov
shlb
lcall
incb
dec
repnz
in
mov
ffreep
mov
add
lock
nop
and
pop
cmp
dec
add
sbb
out
push
pop
mov
push
mov
fwait
lea
ja
pop
pop
push
rolb
xor
cmp
bound
mov
arpl
test
in
loope
ret
push
inc
scas
inc
fdiv
push
and
push
sbb
push
push
insl
dec
mov
jbe
je
cmpsb
je
fwait
jnp
push
ret
lock
adc
sbbl
fisttpl
jge
and
lcall
xchg
scas
and
adc
adc
sbb
mov
adc
int3
sub
sub
shll
out
xchg
mov
gs
mov
or
dec
fdivl
sbb
mov
cmp
arpl
cmp
and
lret
dec
mov
xchg
inc
imul
lock
push
jo
or
xor
mov
lea
mov
push
pop
mov
xchg
adc
pop
mov
fsub
push
push
fs
sbb
mov
push
daa
rorl
fstpl
sbb
push
imul
jne
jg
in
out
fwait
pop
aad
mov
loope
jae
cmc
mov
and
dec
sbb
mov
and
adc
inc
inc
testl
stos
and
mov
jae
inc
cmp
cmp
jb
inc
repnz
aad
inc
mov
jne
in
adcb
es
mov
shl
dec
sbb
aad
daa
nop
pushf
mov
cmp
sub
ret
out
ret
mov
pop
fiadds
jmp
sub
and
mov
mov
mov
hlt
in
add
jmp
add
pop
lret
mov
div
aam
cltd
mov
mov
and
mov
in
rorl
bnd
lock
aas
decl
mov
jge
or
xchg
mov
inc
adc
out
mov
mov
mov
cmpsl
inc
gs
inc
add
xchg
add
loop
in
or
aas
and
pop
mov
add
out
xor
mov
popf
out
out
pop
xchg
mov
xor
inc
lret
cmp
stos
mov
insl
loopne
sub
out
mov
fsubr
jl
jns
push
pop
xchg
adc
and
enter
jmp
loope
lahf
adc
cs
scas
push
es
ja
arpl
add
or
xchg
cmp
in
setb
fistps
mov
gs
fisttpll
lret
ja
int
or
inc
or
cmp
test
push
push
gs
and
xor
and
xchg
loopne
jnp
xchg
and
sahf
loop
push
hlt
sti
push
jnp
loopne
mov
imul
jo
sub
inc
das
inc
dec
fstps
popa
pop
adc
lret
sbb
je
aaa
jg
mov
cmp
bound
xchg
jp
jmp
inc
sahf
iret
adc
add
cwtl
xchg
dec
mov
in
lea
adc
pop
repz
cwtl
mov
cwtl
xchg
and
insl
pop
jge
ret
jg
lcall
push
dec
xchg
sti
pushf
gs
lcall
dec
jp
xchg
mov
lock
lea
rclb
sbb
scas
cwtl
cmc
pop
ficoms
out
pop
push
insb
into
dec
fs
fimull
cld
adc
jne,pt
push
scas
lds
pushf
adcb
push
cld
es
push
jecxz
fidivl
jle
and
cltd
cmp
pop
pop
test
xchg
inc
mov
xor
sarl
pop
outsl
cld
loopne
cs
xor
ret
or
scas
fmuls
std
add
mov
mov
mov
inc
out
and
call
movsl
out
dec
mov
push
rorb
jns
jb
mov
int
mov
sub
test
push
xchg
lods
xchg
mov
mov
vpunpckhqdq
sub
repz
aas
daa
call
fistpll
out
lock
push
mov
andb
jg
and
fwait
adc
dec
loop
cmpsb
fdivl
in
cltd
lahf
notl
push
or
dec
pop
inc
jno
in
dec
cmp
dec
arpl
mov
out
cmp
cltd
dec
sub
outsb
dec
out
pop
sub
std
mov
cs
dec
mov
decb
lret
fdiv
push
lcall
call
nop
mov
adc
xor
dec
rclb
jg
pop
popf
idivl
xor
lea
into
adc
das
divl
xchg
imul
in
add
fimull
scas
js
shlb
daa
and
loopne
jp
shlb
xlat
jns
pop
jmp
iret
subl
adc
stos
mov
jnp
fs
or
xor
pop
fs
jecxz
mov
adc
ret
insb
xor
mov
std
pushl
add
test
int3
push
jno
xchg
fdivs
add
test
clc
ret
aaa
mov
lahf
jae
stc
mov
mov
ljmp
adcb
out
stos
pop
mov
lods
jecxz
push
push
dec
mov
push
dec
test
xchg
imulb
xlat
out
out
nop
push
mov
int3
pop
out
fucomip
or
adc
push
sahf
xchg
cs
test
leave
mov
or
xlat
xor
cs
xchg
cmpsb
pop
pop
inc
push
outsl
incl
sub
popl
movb
xchg
sbb
es
fisubs
pushf
xchg
push
les
add
cmp
push
or
loopne
sub
or
xorl
dec
xchg
sbb
add
mov
cmp
mov
aas
add
int3
pop
rcll
out
inc
mov
nop
adc
mov
aam
mov
or
cld
popf
int3
imul
xor
cmp
dec
xchg
mov
addr16
mov
dec
into
cmc
mov
shrl
cs
inc
jge
mov
inc
pshufw
jb
cmc
mov
lret
mov
imul
out
and
stc
lcall
out
mov
fnstcw
sub
int
insl
or
aad
pop
icebp
mov
cwtl
mov
add
lret
movsb
addr16
out
or
arpl
jmp
dec
shlb
sbb
mov
sbb
fsubs
cli
ffreep
jle
daa
call
jmp
fdivrs
push
sbb
mov
inc
test
mov
fs
adc
dec
cs
xor
xchg
rcrl
divb
push
push
xchg
mov
mov
lahf
enter
adc
pop
pusha
popa
movsl
and
test
xchg
mov
mov
out
rolb
and
test
add
xchg
adc
cltd
fadd
mov
and
mov
mov
sub
jae
cmp
pop
adc
push
mov
test
mov
cmpsl
add
pop
fidivrs
cli
jno
stos
movsb
jp
xchg
push
mov
fs
sub
aas
int
loop
push
fmuls
and
and
clc
shll
sbb
mov
cmp
jge
push
repnz
mov
xchg
xchg
clc
repnz
and
outsl
push
pop
out
xchg
xchg
aaa
adc
and
cmp
hlt
icebp
js
add
or
outsl
xor
or
and
mov
nop
fwait
loopne
andb
sub
daa
fcmovnu
pop
insl
dec
sbb
iret
push
inc
dec
mov
jl
cs
and
sub
daa
xor
xor
xchg
or
mov
push
push
or
adc
or
insl
mov
add
fiaddl
jae
out
lar
fsub
cmp
pop
mov
in
adc
jecxz
out
mov
cmc
mov
negb
jp
mov
sbbb
jbe
push
xchg
stos
loopne
adc
in
xlat
jmp
loop
or
lcall
adc
sbb
fidivl
push
icebp
rcl
mov
mov
gs
insb
push
dec
xchg
adc
inc
add
push
jmp
xchg
lahf
jmp
cmpsl
pop
cmp
push
xchg
das
stos
in
daa
mov
gs
push
mov
jne
movsb
fnsave
xlat
jbe
addr16
pop
hlt
xchg
mov
faddl
mov
std
xor
out
decl
into
insl
or
add
fs
cli
or
jb,pt
pushf
popa
push
push
xchg
dec
ljmp
and
jb
push
loopne
lods
inc
inc
xor
sub
mov
dec
adc
xchg
pop
sbb
in
fwait
insl
scas
ljmp
nop
roll
mov
and
push
cmpsb
push
add
loop,pt
in
pop
rol
pusha
pop
int3
out
xchg
insb
mov
push
test
fidivs
add
in
xor
push
mov
adc
data16
hlt
jg
mov
es
cmp
push
cltd
adc
add
mov
in
jge
mov
adc
xchg
mov
add
movsb
mov
cmp
fbstp
nop
cmp
aam
rolb
test
or
or
in
lret
fadds
mov
xor
repnz
sbb
mov
push
int3
in
xchg
neg
pop
cmc
aad
adcl
popf
imul
sbb
or
shll
in
sahf
xchg
in
mov
inc
pop
and
jne
xchg
jmp
adc
movsb
mov
sub
and
pop
dec
or
or
fwait
inc
int3
sub
mov
lock
loopne
cwtl
sbb
aas
mov
stos
sti
xor
adc
inc
stos
or
push
pop
xchg
je
push
aaa
push
sbb
dec
cltd
push
lahf
cmc
dec
adc
cmp
out
push
mov
pusha
loope
push
and
cmc
mov
pop
aas
loop
mull
inc
movsl
ret
dec
lds
pop
cmp
mov
xor
mov
cs
mov
in
jge
insb
lcall
or
aas
das
movsl
xchg
jne
jo
int
inc
outsb
mov
addb
xor
or
mov
or
lods
mov
and
dec
cmp
dec
stc
lods
jge,pt
or
shll
sahf
sub
jg
cld
int3
idivb
pop
inc
xlat
push
cmp
dec
bound
insb
test
cmp
cltd
or
sub
popa
ja
mov
inc
mov
xor
nop
clc
jmp
sbb
push
xchg
push
xor
push
popf
cmp
inc
sbb
cs
out
test
mov
jmp
scas
dec
ss
jle
push
mov
lds
xorb
xchg
decb
push
imul
loope
pop
movsl
rol
lods
lds
xor
dec
jp
rcrl
loopne
add
mov
adc
xchg
iret
in
cli
adc
push
cs
sub
sbb
inc
arpl
divb
mov
and
test
jle
cmp
sbb
jo
inc
adc
daa
fimuls
add
mov
subl
xor
popf
insl
sbb
jmp
cmpsb
shl
sub
stos
jns
scas
daa
push
imul
push
jo
pop
ret
push
pop
sbbb
movsb
in
push
push
sar
xchg
lret
fcoms
bound
lods
dec
inc
cmp
pop
jno
sub
jns
pop
xchg
inc
in
out
jp
mov
mov
xor
cmp
pop
repz
aad
cld
int
dec
or
cmp
and
mov
pop
inc
xor
insl
das
iret
imul
nop
cmp
or
adc
popf
punpcklwd
push
loopne
sbb
shl
push
sti
lret
imul
sahf
loopne
mov
ja
xlat
out
lds
mov
daa
out
and
sahf
xchg
pusha
sti
xchg
push
pop
js
pop
push
ss
dec
or
test
cmp
cld
in
mov
add
adc
mov
xchg
enter
mov
xor
mov
dec
fisttpll
sub
push
out
xor
inc
iret
iret
push
cmp
push
testl
pop
shlb
mov
dec
push
int3
and
pop
arpl
xchg
jle
lds
dec
insb
mov
fidivs
out
lea
lret
sbb
lock
out
sbb
les
hlt
jbe
cmp
scas
imul
sarb
cmp
fdivr
push
sub
movsl
mov
or
cmpsl
cmp
jl
xor
bound
rorb
fsubrl
cmpb
dec
or
inc
popf
fidivrs
pop
mov
cli
repz
test
xchg
ret
mov
ret
ret
in
xchg
adc
arpl
cmpsb
and
sbb
or
cmp
cmp
push
cltd
imul
movsb
mov
mov
and
les
dec
push
pop
cmp
xchg
adc
nop
push
push
ret
in
lcall
or
pop
push
mov
pop
ja
inc
loope
popf
cli
inc
sub
jb
push
shl
and
mov
add
push
adc
notb
and
mov
pop
test
sahf
push
cld
xchg
jbe
pushl
pop
sbb
mov
and
or
jne
mov
pop
sub
test
leave
leave
add
fs
inc
inc
cmc
jp
bound
mov
andl
out
mov
xchg
jl
ret
cltd
cmp
mov
push
add
inc
fs
pop
xchg
sub
stos
mov
push
sbb
fdivr
cmp
adc
pop
pop
push
cltd
mov
call
xchg
mov
in
adc
in
or
mov
mov
sub
sbb
or
fstpl
push
mov
std
inc
push
hlt
mov
and
adc
dec
adc
pop
pop
xchg
mov
fucom
int3
xchg
sub
sub
inc
inc
and
inc
sub
aam
test
and
mov
insb
add
arpl
mov
inc
out
xor
or
pop
imul
fisubrs
dec
sbb
jg
cltd
add
jl
pop
inc
outsb
add
lret
fs
imul
mov
addl
push
ljmp
in
sub
mov
mov
mov
shrl
and
cmp
xchg
ss
movsl
shl
cli
fldl
iret
pop
icebp
outsl
insb
ljmp
sbb
scas
aas
xchg
movsb
shrb
shl
mov
or
imul
aam
mov
xor
mov
sub
cmp
xor
scas
jo
jmp
in
xchg
clc
shlb
movsl
shlb
jmp
xchg
mov
add
je
dec
adc
cmp
in
xchg
int3
push
cs
jle
ret
test
jbe
dec
mov
lret
jecxz
pop
sub
ss
or
cmp
rorl
je
cmp
popf
inc
mov
in
out
xchg
mov
cmpb
test
inc
ja
icebp
js
dec
fisubrs
inc
mov
adc
jbe
adc
cmp
cltd
sub
add
outsb
xchg
and
mov
jmp
mov
pop
fcmove
and
mov
adc
and
or
xlat
adc
xlat
push
sub
xchg
sti
pop
outsl
mov
fwait
shlb
out
enter
fbld
cld
js
aaa
out
xchg
fwait
jo
stc
cmp
stos
loope
cwtl
mov
mov
out
push
fdivrs
xchg
outsb
es
shlb
or
fdiv
push
cmp
mov
pusha
inc
cli
out
sbb
fcmovnbe
fisttps
cmp
int3
shll
sub
cmpsb
mov
add
pushf
cmpsb
test
jmp
inc
jecxz
mov
mov
cmpsb
pop
fidivl
mov
push
mov
inc
push
mov
movsl
test
or
push
adc
mov
es
lcall
xchg
mov
out
push
fdivrp
jle
idivb
mov
adc
or
addr16
push
outsl
mov
sub
rorb
mov
leave
loopne
push
add
sub
sbb
popa
jecxz
xor
push
cltd
lock
fcmovbe
out
adc
int3
xchg
movsb
jmp
adc
call
mov
testl
push
or
dec
roll
add
fmuls
bound
ja
xchg
inc
sbb
add
push
sbb
mov
out
pushf
sti
ds
pop
mov
dec
add
je
inc
push
ret
mov
cs
mov
dec
adc
mov
xor
dec
xor
adc
sub
inc
add
sbb
daa
test
lret
pop
mov
cmp
fwait
out
lahf
subb
cmp
sub
icebp
sbb
in
sbb
mov
addr16
push
mov
mov
test
push
je
test
jnp
mov
je
adc
jg
cs
std
sbb
jae
les
xchg
jp
mov
xor
push
roll
cmp
and
jne
push
scas
inc
movsb
mov
adc
daa
scas
xorl
and
daa
mov
dec
jp
ret
jge
shrl
cltd
pushf
shl
mov
test
fnstcw
stc
push
pop
push
inc
daa
fs
jb
xor
dec
mov
cmp
mov
pop
jno
mov
mov
sub
je
in
in
dec
xchg
xor
xor
pop
cmp
cmp
and
call
xchg
dec
nop
bound
vpcmpgtw
dec
pop
test
frstor
push
ret
pop
or
loop
add
pop
loop
push
inc
jo
mov
inc
loop
or
push
dec
push
xchg
add
icebp
push
mov
dec
push
enter
shrl
lea
ds
imul
inc
xorl
xchg
push
movsb
sahf
and
add
and
cli
sub
stos
ret
subb
xor
and
idiv
xor
mov
sub
inc
in
cmp
and
dec
ds
je
push
call
movsb
dec
mov
mov
into
rol
push
dec
imul
and
sub
jecxz
xchg
xor
jb
inc
not
cwtl
and
in
pusha
adc
adc
ss
mov
xchg
lods
mov
xchg
lods
cmp
xchg
fisubl
jmp
jae
mov
xchg
mov
sub
xorb
aam
and
dec
jns
xlat
jl
and
outsb
in
mov
and
in
add
and
dec
sub
mov
arpl
pop
jo
jmp
dec
mov
std
movsb
mov
dec
das
mov
cwtl
jb
cmp
cmc
inc
add
aad
xor
jo
dec
xor
ljmp
pop
inc
add
sahf
cli
or
leave
into
xchg
xor
js
and
jnp
int3
adc
add
add
adc
fcoml
int3
sub
xchg
jp
ret
mov
arpl
or
or
movsb
lahf
ljmp
or
mov
or
cmp
add
cmp
xchg
or
out
pop
in
es
pop
dec
inc
int3
sub
mov
jne
stos
hlt
and
jae
adc
clc
fstl
fnsave
sbb
push
jecxz
xlat
aam
out
lock
pop
sbb
leave
xchg
jns
shll
pop
cmp
fnstsw
sahf
push
pop
xchg
push
leave
inc
jg
or
sbb
mov
jg
into
into
nop
and
or
add
ret
sub
cwtl
repz
cmp
adc
pushf
xlat
movsb
inc
enter
ja
daa
sbb
popa
sub
rcll
insb
dec
es
repnz
or
shll
pop
jb
addb
subb
mov
mov
sub
lods
lods
scas
cmp
jmp
dec
in
push
into
js
or
and
enter
lods
xor
and
data16
pop
cmp
adcl
out
push
mov
aad
leave
call
movsl
push
cltd
cmp
out
jmp
push
cltd
mov
mov
inc
out
mov
add
mov
xor
test
mov
popf
mov
ficoms
lods
out
xlat
jecxz
pop
xor
jbe
cmp
lret
div
mov
pop
lahf
adc
icebp
sub
mov
les
sbb
xlat
dec
push
push
cmp
inc
filds
xor
sbb
push
ficoml
leave
repz
filds
leave
pop
jns
push
iret
mov
jbe
fdivrp
jbe
out
inc
popl
je
cld
mov
jl
in
adc
and
jno
mov
xchg
mov
mov
push
pop
xor
outsl
insb
xchg
int3
dec
ficoms
push
sbb
push
outsl
and
popa
ljmp
cmpsl
add
fbld
push
push
xor
test
dec
xchg
jl
enter
addr16
faddl
in
rcrb
mov
stos
rcll
dec
fxam
mov
dec
cmpsb
test
je
sahf
xchg
in
sub
scas
inc
pushf
test
push
mov
fimull
movsb
es
ret
movsl
and
adc
sbb
mov
popl
xchg
pop
add
dec
mov
lods
inc
push
or
orb
xchg
or
fwait
or
pop
testl
or
fidivrl
lods
cld
out
jecxz
dec
jne
xchg
orb
sbb
leave
test
push
jge
in
dec
fistps
sub
mov
xchg
imul
jno
mov
push
aam
mov
fs
xchg
adc
pop
mov
add
adc
jge
cld
sub
loope
insl
lret
add
int
in
cltd
jbe
in
cli
lcall
jno
add
inc
pop
mov
es
ljmp
outsl
incl
leave
repz
push
flds
push
mov
gs
cwtl
xlat
or
das
mov
inc
mov
in
fs
into
dec
pushf
sarl
jae
xor
adc
pop
or
add
push
lret
push
ds
imul
xor
mov
mov
cmpsb
mov
push
xchg
ret
enter
in
daa
jbe
mov
lock
sub
sub
stos
push
xor
ret
or
stc
xor
aas
mov
rorb
aad
lcall
ja
decl
jne
shll
jb
dec
jno
add
outsb
lret
aaa
cmp
iret
add
out
popf
jle
cs
mov
ja
lret
push
outsb
es
scas
sar
mov
or
pop
lods
notl
mov
lods
test
in
xchg
outsl
inc
in
jmp
fstpl
and
movzwl
mulb
sarb
sahf
mulb
aas
push
and
adc
sub
shll
dec
xlat
pop
jecxz
ret
xrelease
and
xchg
jmp
jns
and
in
sub
dec
push
in
out
je
rcr
imul
push
cmp
fisubrl
mov
shll
std
lret
popa
dec
pusha
inc
jmp
cltd
mov
mov
push
adc
aad
fisubrl
push
dec
cmp
pop
adc
daa
cwtl
or
int
scas
mov
push
xchg
or
jne
sub
xchg
mov
bound
fistl
popf
push
les
stos
and
dec
fwait
rcrl
jle
rcl
ss
cmpsb
mov
into
sbb
aaa
divb
xchg
jno
jl
test
xor
out
sbb
push
or
lahf
mov
dec
push
jb
jo
lods
aad
fstpt
je
and
push
ja
ret
cmp
add
lcall
sbb
aaa
mull
sbb
sbb
cmp
xor
sub
adc
loopne
sahf
cwtl
mov
jb
cli
adc
dec
mov
lods
mov
pop
sbb
add
jb
test
mov
ljmp
out
imul
mov
inc
adc
mov
and
push
push
jno
pop
xor
sbb
imul
subl
and
jb
es
addb
mov
jae
sub
stc
lcall
pop
lahf
insl
and
and
int3
fstpt
es
or
jle
ret
mov
in
mov
stos
js
popf
stos
push
pop
mov
or
xchg
sbb
daa
sti
into
nop
dec
cli
xchg
inc
unpcklps
jno
dec
mov
push
mov
jne
ja
and
xchg
cmp
repz
fldcw
mov
ret
adc
pop
rorl
sub
add
movsl
push
stos
jmp
ret
xor
aam
pop
pop
lods
pop
pusha
and
jo
fcomip
fnsave
cmp
xchg
cmp
add
das
daa
cld
pushl
push
out
lret
popa
fildll
out
dec
mov
fidivl
dec
mov
mov
sub
push
sbb
cli
pusha
inc
mov
cmp
and
sti
adc
lds
xchg
test
and
cld
and
inc
xchg
mov
loope
cmp
mov
je
lock
pop
mov
sti
xor
push
cmp
pop
or
dec
jmp
mov
mov
std
sbb
push
inc
adc
roll
cmpsb
or
gs
stos
pop
or
push
push
add
adc
and
adcl
dec
xor
adc
sub
mov
pop
fstpl
mov
pop
iret
std
jp
loopne
xchg
cld
shlb
movsb
adc
and
jne
je
lds
mov
call
pop
sbb
inc
int3
insb
in
adc
push
sbb
pusha
mov
xor
lods
add
mov
lret
pushf
outsb
push
push
loopne
lea
rcll
pop
in
or
push
xor
dec
lret
xchg
scas
call
xchg
push
inc
scas
ror
and
mov
mov
arpl
dec
add
enter
out
jno
pop
and
outsl
fistpll
fsubs
cld
imul
jmp
clc
shl
aad
cvtps2pi
jno
enter
faddp
loope
cmp
inc
sbb
inc
add
add
xchg
add
fbstp
sbb
mov
shl
dec
cmp
movsl
ror
pusha
adc
rcr
int3
sbb
cmp
out
push
ja
mov
jmp
sub
jbe
es
push
sti
sbb
or
and
dec
mov
pop
shll
ds
add
jge
pop
das
aas
xchg
pop
das
mov
mov
xchg
sub
jl
std
sbb
adc
pop
das
pop
cli
sbb
stos
test
cli
sub
sar
daa
sub
stos
repz
mov
pusha
cltd
pop
data16
cmc
into
or
sbb
mov
inc
ret
xor
out
lock
inc
fadd
gs
lea
add
pop
mov
adc
push
xchg
std
imul
repnz
lds
mov
jb
mov
jmp
les
push
gs
cltd
xchg
mov
cli
adc
fisubs
add
test
xor
rolb
mov
scas
sbb
adc
jns
stos
aad
jns
ja
loopne
cmpps
sbb
dec
test
je
scas
xchg
shll
ja
int
pop
jns
les
or
in
mov
sbb
xchg
mov
inc
and
or
mov
jp
ss
rorb
rep
add
icebp
iret
inc
mov
inc
add
dec
ret
inc
xchg
lods
inc
in
lea
jmp
push
int3
mov
and
ds
stos
in
les
mov
or
testl
adcb
xchg
lods
xchg
rolb
mov
inc
and
and
pop
xor
sbb
xor
test
mov
xchg
add
jno
xor
lcall
jle
push
cwtl
or
mov
out
movsl
xchg
cmp
lahf
pop
cltd
lods
and
scas
or
test
or
mov
and
sub
or
or
push
and
add
inc
xor
ds
sbb
pusha
repz
hlt
add
ret
add
jne
mov
or
fmuls
adc
xor
es
push
cld
push
adcb
cs
mov
xchg
shlb
imul
sbb
adc
and
xor
xor
xchg
add
cwtl
xlat
inc
jmp
int
int
in
sbb
and
orb
lods
inc
ficompl
mov
pop
pop
cmc
hlt
inc
xor
mov
fidivrs
shll
or
adc
sbb
orl
pop
sti
sub
lcall
mov
mov
adc
mov
push
jns
add
sub
ja
sbb
or
loop
call
out
subb
rorl
jnp
jne
aas
sarb
push
mov
repz
push
in
cwtl
sub
lcall
jbe
push
ret
pop
mov
mov
insl
dec
leave
mov
inc
out
pop
and
xchg
jns
loope
loopne,pt
mov
sbb
inc
cs
cmp
dec
insb
add
dec
cmpsl
xchg
loope
mov
jecxz,pt
aas
push
clc
adc
stos
test
shrb
out
lret
movsl
pop
adc
xor
std
push
jg
pop
jle
inc
mov
jbe
shll
hlt
hlt
aas
stos
adc
es
into
cmp
dec
out
hlt
cmc
jb
xor
and
arpl
or
ret
mov
imul
aas
sub
push
mov
jg
dec
mov
sbb
push
sbb
sbb
scas
fcomps
jne
xchg
inc
mov
inc
out
dec
nop
fnsave
bound
xor
pusha
push
fucomip
sub
out
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
mov
into
je
in
jp
pop
jp
data16
inc
inc
lret
mov
aas
pop
mov
xlat
shlb
mov
inc
mov
mov
push
test
jp
or
pop
xchg
inc
mov
mov
in
jnp
out
hlt
fldpi
sarb
nop
sbb
movsb
xor
or
out
sub
xor
mov
sbb
push
es
addl
ljmp
mov
add
imul
arpl
sub
cmp
test
std
jo
and
mov
mov
mov
pop
clc
test
mov
iret
paddusb
mov
movsl
cmpb
rep
push
mov
fildl
jo
push
enter
pop
fcmove
mov
lret
ret
ja
dec
mov
int
sub
push
jb
jle
xchg
inc
mov
push
push
fildll
xor
jae
rorb
lds
push
jb
cwtl
test
out
push
jg
loopne
sahf
sbb
sbb
inc
and
in
push
pop
dec
test
lret
push
sbb
and
inc
mov
in
pop
rol
mov
push
mov
stos
jno
repnz
jns
mov
mov
fcoms
sbb
cmp
xchg
or
aas
pop
inc
fstl
dec
pop
xchg
or
pushf
inc
pop
cmpsb
cmp
push
inc
out
adc
or
test
in
les
test
xorl
xchg
ds
sahf
jo
push
stos
cmp
sbb
xchg
xor
and
xchg
icebp
push
push
lcall
jg
daa
cmpsl
ja
jmp
out
insb
outsb
pop
in
jb
cwtl
jo
mov
pop
inc
push
xchg
and
sarb
adc
popf
mov
add
pushf
adc
jmp
xor
mov
movsb
xor
lret
ds
aaa
adc
out
test
test
in
inc
rorl
jg
ror
xor
idivl
lcall
mov
xor
mov
adc
and
inc
mov
call
ljmp
cmp
adc
push
jge
xor
cs
sbb
aas
dec
and
rcll
xor
stos
in
jno
ja
push
push
fcoms
shrb
gs
cmpb
out
mov
pop
int3
pop
gs
push
rcr
adc
shll
mov
mov
cmc
jb
ds
lock
push
aaa
into
inc
int
dec
bound
notb
sbb
mov
push
xchg
dec
jg
pusha
or
daa
xchg
and
mov
cmc
push
mov
xchg
addr16
mov
pop
jecxz
es
imul
lret
addr16
add
mov
aaa
mov
sbb
pushf
xchg
into
mov
pusha
cmp
icebp
es
repnz
loop
rorb
out
mov
mov
stc
out
test
dec
sbb
xchg
or
rolb
adc
loope
mov
inc
adcl
test
jnp
stc
insl
fs
mov
loopne
sbb
lds
pop
mov
add
adc
mov
outsl
mov
ds
sbb
jp
dec
cmpsb
inc
cmp
shrb
dec
push
jbe
ror
ror
cld
push
sbb
into
jnp
mov
dec
mov
xchg
xchg
and
jle
cmp
inc
jns
dec
mov
cli
jbe
pop
mov
pop
arpl
xchg
sbb
mov
adc
sbb
jle
pop
mov
and
sbb
jl
ss
out
lods
mov
pop
ret
jnp
ds
sbb
dec
insb
jns
popa
jne
jmp
popf
add
xor
leave
cmp
enter
sub
push
pop
mov
cltd
adcl
out
popf
test
aaa
jno
push
das
xchg
das
dec
data16
mov
mov
std
add
aaa
jbe
and
daa
add
pop
loopne
outsb
les
loope
popl
dec
push
lock
sbb
fimuls
shl
roll
or
cmpl
xchg
mov
out
sbb
lods
mov
adc
shll
mov
adc
push
lahf
pop
jmp
xor
fwait
clc
or
bound
movsl
jecxz
and
ret
sbb
movb
push
xchg
ss
xor
cld
and
scas
mov
pop
sbb
pop
enter
push
enter
push
fdivrl
out
lret
repnz
xchg
or
mov
movsb
fwait
jae
clc
add
daa
pop
movsl
xchg
or
or
xor
loop
pop
mov
fstl
xchg
pop
lea
mov
add
repnz
out
inc
mov
es
dec
and
shlb
inc
ret
je
jmp
dec
repz
loopne
sti
jo
jp
inc
pop
adc
mov
pop
jle
orb
ss
adc
pop
inc
xchg
add
inc
movsl
push
mov
adc
jge
inc
push
xchg
stc
inc
jl
jo
push
sub
fmuls
cmc
shll
test
and
insb
into
repz
daa
iret
sbb
insb
inc
ficompl
mov
outsb
icebp
mov
je
mov
mov
or
sub
in
xor
mov
sbb
enter
ljmp
jle
mov
push
icebp
pusha
ds
jnp
sbb
mov
in
cmc
shlb
mov
out
mov
xchg
push
mov
scas
nop
push
sub
lods
ret
sbb
cs
loope
rcrl
adc
and
adc
and
sub
fcoms
xchg
adc
lea
sbb
lahf
add
icebp
stos
and
out
cmp
jl
cltd
mov
add
call
insb
mov
ljmp
and
jge
icebp
sub
xor
add
xchg
insb
jmp
push
mov
inc
inc
push
sub
mov
or
adc
cmp
jp
and
cmp
lcall
dec
jnp
mov
push
cmp
popf
xor
aad
jge
add
push
sub
fmuls
cmp
pusha
pop
sarl
jl
dec
sub
push
outsl
roll
pop
push
inc
dec
ss
popa
dec
mov
and
loop
fcomp
sarb
jns
xor
pop
addr16
je
shlb
shl
ja
pop
or
inc
imul
adc
out
into
or
jb
jmp
insl
icebp
adcl
pop
lods
cmp
fisubrs
mov
push
sarl
and
lods
loopw
add
add
xchg
jmp
aam
and
xor
rcrb
add
scas
ljmp
xchg
pop
pushf
cli
iret
flds
fistpll
mov
inc
mov
aam
insb
nop
test
inc
pop
sti
ficomps
mov
jne
or
mov
fstpt
mov
push
add
scas
jnp
xor
cmpsw
pop
iret
lret
roll
sbb
lods
mov
hlt
clc
in
mov
not
mov
adc
shlb
and
cmp
xor
lret
inc
stc
mov
pop
mov
shlb
add
repz
xchg
mov
test
sub
add
bound
mov
repnz
pop
xchg
xchg
andb
add
mov
loope
int3
imul
push
and
xchg
addl
repnz
je
sub
loope
mov
push
sahf
mov
rclb
je
inc
mov
das
mov
mov
imulb
jl
pop
cmp
xor
push
stos
mov
mov
sti
imul
in
into
cld
out
test
incl
bound
into
push
cmp
das
jnp
in
lds
and
shlb
cmc
xchg
or
sub
cmpsb
mov
add
push
xchg
push
bound
gs
bound
pusha
and
jbe
and
cmp
push
fldt
scas
jnp
push
push
rclb
mov
sar
push
add
std
jbe
pushf
dec
xacquire
loope
test
addr16
lret
loope
mov
push
testb
sar
dec
imul
or
rorl
iret
mov
inc
mov
ss
nop
inc
jbe
rol
cmp
int
inc
jecxz
adc
fidivs
and
or
popf
mov
call
sbb
add
jo
mov
inc
test
test
stos
inc
lcall
jge
imul
mov
outsb
inc
test
sbb
mov
xor
popf
jb
sub
mov
push
mov
outsb
addr16
pop
jo
das
jnp
adc
sbb
pop
outsb
xchg
sub
in
ja
and
sti
sub
and
decb
xchg
dec
stos
gs
pop
inc
sbb
mov
cltd
push
add
fdivrs
and
xor
push
push
xlat
aas
xchg
lea
mov
sub
sub
mov
push
cmp
cltd
adc
mov
add
popa
pop
sub
inc
jo
aam
jns
add
mov
cmp
clc
jbe
vdivps
add
mov
aam
cmp
jl
ret
jmp
cmpsb
xchg
lock
lahf
stos
les
jmp
add
and
ficoms
jmp
incl
jne
ljmp
fldt
fists
add
xchg
add
sub
inc
js
push
popf
xchg
jp
sbb
add
in
and
lahf
adc
repz
and
testl
cmpsb
jp
call
cmp
sbb
dec
mov
hlt
lret
test
pop
cwtl
testl
sar
adc
pop
cmpsl
in
pushf
outsb
mov
test
ret
in
pop
popa
jecxz
das
cmp
into
xchg
pop
sbb
in
and
dec
cmp
lahf
push
or
sbb
aaa
sub
pop
mov
in
mov
test
in
sbb
sbb
icebp
imul
rorl
push
dec
pop
mov
dec
test
sub
push
int
gs
jae
mov
push
push
jp
dec
mov
stos
add
lock
cmpsb
hlt
cltd
aad
push
into
stos
add
adc
sub
dec
pop
lret
mov
loope
rcll
adc
cmp
sub
sti
lds
lds
add
ds
sbb
mov
xor
sub
movsb
xchg
test
dec
pop
insb
in
cmp
jge
add
add
imul
mov
shl
pop
xchg
pop
mov
xor
xor
popf
sti
pop
add
mov
scas
inc
add
mov
xor
mov
or
mov
xchg
and
test
mov
add
icebp
adc
or
fs
scas
mov
xchg
aas
xor
rep
sub
adc
ss
out
xchg
cmp
ret
pushf
pop
ds
and
and
pop
xchg
popa
or
jnp
sarl
fdivrp
lahf
iret
push
cwtl
pop
imul
outsl
lock
add
scas
push
xor
lcall
dec
cmpsl
daa
adc
inc
xchg
cmpsb
sbb
sbb
mov
cmpsb
push
push
pusha
enter
jmp
cli
cld
cmp
popl
or
cmp
lea
and
enter
es
out
xchg
jns
dec
aaa
mov
jg
hlt
test
test
mov
mov
inc
and
subb
or
popa
xlat
inc
ret
push
mov
mov
sub
repz
dec
sub
jns
lahf
popf
popa
inc
push
sbb
fiadds
aam
scas
sub
jp
xor
and
cmpsl
sbb
mov
mov
popa
jno
sbb
jmp
lods
mov
and
sbb
popf
movsb
push
ret
mov
movsl
xchg
jne
aad
xor
jmp
iret
fstpt
sub
inc
jmp
out
stos
test
imul
cmp
popa
fdivl
mov
cmc
js
ret
dec
or
mov
scas
loope
adc
jne
inc
insb
add
cmp
leave
adc
dec
gs
mov
dec
dec
dec
push
xor
jae
push
mov
jmp
fists
jno
pop
call
mov
rcrb
daa
out
lea
and
dec
loopne
scas
mov
adc
mov
clc
mov
pop
pop
inc
mov
pop
or
rcrl
lods
or
imul
xchg
cmpsl
pushf
or
test
and
push
xchg
or
rcrl
and
int
jbe
add
xchg
fmull
pop
mov
dec
data16
icebp
mov
testb
cwtl
popa
mov
mov
ret
or
xor
daa
es
jecxz
sbb
xor
stos
lock
lods
push
mov
adc
push
add
imul
cmp
lods
lahf
mov
mov
test
mov
aaa
cwtl
inc
daa
mov
add
sbb
rcrl
sbbl
jecxz
push
inc
sbb
daa
sbb
dec
ss
lahf
mov
mov
push
call
mov
lcall
rcll
ds
iret
movsl
mov
nop
fiadds
pop
jb
jbe
sbb
push
mov
jp
jle
gs
pop
stos
rolb
xchg
jmp
arpl
cltd
arpl
inc
in
sahf
subps
jb
mov
and
cs
inc
cmp
mov
push
hlt
push
gs
jne
enter
mov
lcall
sbb
pop
cwtl
push
pop
scas
repnz
mov
push
aaa
icebp
in
dec
out
or
fsubs
push
and
fwait
adc
jmp
mov
pop
pushl
sbb
movsb
and
pop
pop
push
inc
sbb
xchg
and
cs
adc
adc
subl
push
push
lret
jecxz
or
out
and
ss
inc
adc
pop
jbe
insl
sub
inc
and
loop
inc
or
mov
mov
loope
test
inc
sub
jl
outsb
cmp
xor
jp
outsb
jns
scas
mov
inc
mov
std
xorb
add
aad
cmp
cs
sub
in
pop
movsl
test
xchg
mov
iret
ljmp
ljmp
sub
and
cld
rcl
flds
mov
pop
inc
mov
in
scas
xor
xchg
movswl
pusha
adc
mov
lock
push
test
lret
push
push
cmpsl
cmp
incl
gs
dec
incl
adc
sbb
fsubs
stos
xor
push
cmp
stos
pushf
or
inc
mov
cmp
scas
ljmp
xchg
mov
fisttpll
cmpsb
jnp
add
call
push
mov
mov
jp
mov
and
aam
test
dec
shlb
pop
mov
mov
mov
jecxz
andb
cli
push
inc
pop
ja
inc
popf
rorl
inc
push
pop
adc
cs
shll
or
iret
push
dec
sbb
cmp
jg
sbb
jbe
dec
shl
lahf
jge
imul
jle
fsubp
dec
imul
pop
movl
cmp
outsl
xor
fcomps
sbb
rcrb
cmpsl
fs
lret
pop
or
mov
push
jle
dec
inc
jnp
add
adc
ljmp
notb
sub
loopne
push
iret
addl
xchg
mov
adc
call
lret
fwait
arpl
icebp
or
test
xchg
out
inc
insl
push
push
fmull
cmp
fiaddl
stos
or
or
or
jp
pop
jb
inc
sti
repz
repnz
ret
lcall
daa
loope
and
test
std
xlat
loope
into
xor
adc
inc
lret
jnp
or
int3
push
lahf
xor
movsl
aad
fisttps
pop
sub
inc
shlb
iret
adc
clc
imul
ret
adc
incl
insl
orb
popf
jns
sub
xor
adc
mov
add
jns
das
hlt
stc
stos
inc
mov
adc
sub
nop
dec
jbe
adc
inc
inc
mov
sub
stos
inc
rcl
fwait
dec
iret
mov
mov
aad
ss
subb
add
sahf
mov
jns
cmp
jg
push
cmpl
sub
movsb
add
add
cwtl
mov
xchg
push
inc
xchg
stc
cltd
mov
int
lret
arpl
xchg
aam
and
jmp
or
push
pushf
xor
imul
outsl
enter
xor
mov
lods
popf
xchg
leave
mov
idivl
repnz
addr16
dec
mov
fcmovnu
aam
pop
cmpsb
stos
pop
adc
stc
sar
out
xchg
stc
dec
and
ret
push
adc
add
fstl
xchg
outsl
sbb
loope
lcall
dec
push
movsl
shll
shll
out
les
mov
mov
dec
sub
lahf
int3
inc
aas
dec
sbb
jno
jns
mov
cmp
mov
mov
dec
aas
adc
jnp
mul
iret
iret
lret
xor
inc
mov
pop
fistps
jge
jnp
dec
bound
mov
sbb
lret
push
ljmp
dec
stos
movsb
ja
cmp
lret
insb
sbb
cwtl
leave
daa
cvtps2pi
pop
mov
hlt
aaa
sub
mov
adc
movsl
roll
testl
adc
arpl
mov
sbb
inc
push
mov
lcall
insl
push
mov
lods
scas
stos
push
lret
gs
sbb
pop
hlt
pop
dec
dec
pop
sub
sahf
aad
addr16
cwtl
xor
and
ljmp
and
inc
jl
sub
scas
icebp
push
lcall
push
lea
jns
inc
push
nop
les
jle
inc
push
in
mov
mov
addb
push
xor
inc
repnz
cli
mov
lcall
sub
jge
sub
lea
popa
out
dec
and
or
in
aas
je
test
push
aaa
stc
push
les
dec
push
aas
mov
in
lds
dec
test
push
in
outsl
pop
scas
pop
xor
or
jno
movb
push
inc
mov
ret
pop
movsb
jb
push
pop
sbb
add
in
fstpt
mov
dec
mov
pop
push
xorb
pop
pusha
xchg
mov
adc
mov
dec
push
cs
loop
mov
push
push
dec
jne
mov
mul
or
pushf
mov
mov
mov
popa
dec
mov
ljmp
or
mov
cmc
fisttpl
addb
dec
xchg
pop
xor
mov
jg
jns
mov
jl
sbb
sub
lea
mov
sbb
enter
add
clc
mov
xor
sbb
js
xchg
addb
mov
push
xchg
push
iret
imul
add
fists
js
test
jbe
ss
sub
outsl
daa
cmp
das
adc
push
xchg
cmc
stc
or
in
out
adcl
sub
vcvtss2sd
sbb
inc
mov
pop
mov
mov
xchg
add
cld
sbb
fimuls
sbb
adc
or
and
mov
push
push
mov
sub
and
lods
push
loop
mov
cmp
adc
fnstenv
pop
adc
int
cmpsl
jns
les
pushf
das
cmpsl
push
ret
lahf
sub
sub
pop
and
gs
xor
iret
gs
mov
push
dec
jge
pop
icebp
movsb
test
and
ja
ja
mov
nopl
jecxz
shlb
mov
push
xlat
rorb
mov
xchg
pusha
dec
sub
mov
imul
icebp
out
outsl
dec
iret
int
out
scas
out
leave
fmull
xor
push
fldenv
je
pop
fldl
cmp
daa
xchg
call
iret
scas
pushf
dec
ficoms
xchg
mov
mov
ds
jle
inc
mov
add
or
mov
mov
mov
in
xor
fmull
pop
lods
and
jae
mov
dec
ret
sub
jle
sub
jp
push
fwait
inc
cmp
mov
push
insb
and
lcall
pmaxub
and
xchg
arpl
push
fsubl
and
push
jno
adc
sti
repz
sbbb
jl
adc
mov
jb
sbb
jp
es
sbb
add
out
pop
lss
popf
mov
pushf
lcall
shrl
test
adc
jge
in
inc
daa
clc
or
insl
lcall
popf
test
inc
xor
in
arpl
ljmp
sbbb
cli
int
gs
test
rcrl
popa
mov
jle
fucomp
adc
jbe
sbb
xchg
mov
aam
imul
cmp
lea
xchg
mov
dec
or
fwait
imul
xor
std
ror
mov
push
add
addr16
xchg
push
xchg
jb
das
add
inc
ret
jmp
mov
add
jne,pn
and
popf
je
cmp
fsubrl
leave
dec
xor
jb
dec
subl
daa
sahf
insl
xchg
add
bound
pop
pop
insl
add
xor
in
add
lahf
push
xor
popf
xor
movsl
cmp
cmpsl
and
sub
std
sbbl
xor
inc
and
in
int
add
lret
and
stos
pop
cwtl
add
xor
lods
xlat
dec
or
mov
dec
dec
cmp
push
hlt
jne
mov
out
mov
fnsave
shrl
dec
ja
imul
xor
xchg
xor
loope
cwtl
mov
mov
mov
jle
fistps
and
inc
sahf
jg
movsl
mov
popa
rclb
lret
out
mov
xor
mov
shrl
push
outsb
cmp
cwtl
das
cmp
roll
ret
cwtl
mov
cmovl
mov
xor
jecxz
jmp
jo
mov
mov
ljmp
mov
mov
out
xchg
cmp
sub
repz
test
fsubrp
loope
dec
adc
cmp
jle
mov
fisubs
test
or
adc
mov
cmpsl
add
sub
jl
xchg
adcl
sub
loope
out
xchg
cwtl
iret
out
imul
insl
scas
mov
leave
mov
mov
stos
cltd
adc
dec
mov
xor
out
pop
in
mov
push
pop
mov
repnz
push
je
adc
les
outsl
cmp
loopne
orl
sub
mov
mov
int
sarb
out
in
mov
cli
xor
dec
das
adc
clc
mov
xorb
push
icebp
ljmp
jb
xor
dec
mov
fistpl
xchg
add
cwtl
jle
xchg
cmpsl
repz
mov
adc
aas
out
arpl
int
bound
and
es
push
push
hlt
push
fbld
adc
adc
mov
ret
mov
aas
lods
xor
cmp
and
mov
sub
stos
fisttpl
daa
push
mov
inc
jnp
xchg
imul
sub
jnp
pop
out
lods
leave
dec
sbb
sub
ret
dec
mov
and
mov
mov
enter
mov
xchg
or
sar
dec
ljmp
xchg
push
xchg
sub
or
sub
lret
daa
xchg
mov
push
lret
inc
cmpsb
loope
daa
sbb
mov
and
xchg
jbe
addb
push
les
call
std
das
out
adc
pop
rolb
movsb
xchg
enter
sub
xor
idiv
mov
mov
sub
aad
shl
movsb
aaa
jp
dec
push
clc
adc
xor
mov
ret
jg
mov
out
scas
lods
jbe
enter
jb
div
jnp
mov
les
ret
scas
sbb
jge
arpl
in
jecxz
mov
into
xor
sub
pop
out
rorl
aas
mov
fdivrl
sub
pop
mov
or
and
bound
imul
and
cmp
ficoml
pop
xchg
lods
mov
lods
or
mov
sbb
out
push
xor
push
pop
cmpsl
inc
les
jge
dec
jp
ds
cmp
xchg
mov
out
dec
cwtl
push
add
inc
out
xchg
outsb
sti
mov
shr
jne
js
pop
cltd
mov
adc
add
xor
aad
mov
cld
sarl
mov
les
addr16
je
xchg
js
shl
jp
lret
jecxz
pop
lret
scas
lock
in
cmp
sbb
inc
insl
pop
dec
lock
int
xchg
into
pusha
inc
push
inc
pop
pop
aad
inc
pop
mov
aaa
repz
xchg
cmp
pop
and
and
jbe
jle
ret
aaa
rorb
popf
pop
cli
js,pn
imul
daa
loop
lock
pop
sbb
cmp
sbb
cmpsb
or
insb
add
scas
mov
adc
and
out
cld
into
ds
and
out
call
mov
fcoms
inc
mov
pop
xor
fadds
js
in
fisubs
and
mov
pop
or
jns
and
sub
pop
repz
or
arpl
sbb
add
mov
xchg
adc
jmp
push
adc
ret
sub
loopew
xor
int3
ss
cmp
cwtl
cvtdq2ps
sbb
and
insl
nop
lds
mov
pop
cld
aam
dec
sar
push
test
dec
mov
js
aas
xchg
mov
rolb
mov
inc
inc
lods
roll
scas
jo
sub
movsl
xchg
xchg
int
add
fwait
cmp
mov
or
xchg
stos
dec
sbbl
aas
fwait
insl
popa
and
sbb
lea
out
adc
fimuls
sub
adc
sbb
mov
mov
mov
push
jmp
push
ror
pop
sub
mov
ja
movsl
je
pop
mov
inc
inc
and
lret
popf
xchg
fcomps
roll
and
fsubr
pop
test
xor
mov
push
mov
inc
xchg
sub
outsb
hlt
in
mov
push
leave
sub
lods
bound
cwtl
rorb
inc
mov
xchg
lcall
mov
push
call
mov
adc
adc
pop
mov
popf
jbe
mov
stos
add
dec
cmc
cmp
or
or
fstpl
dec
push
imul
mov
test
xor
pusha
mov
mov
lea
lods
inc
jle
fdivl
add
and
imul
femms
cmp
add
mov
pop
subl
insb
jae
jp
ds
jmp
cmp
das
sub
mov
dec
mov
push
fidivrs
adc
mov
repnz
xchg
xchg
into
lds
inc
and
scas
test
pop
push
jbe
mov
adc
cmp
jle
pop
ffree
jle
mov
adc
scas
lahf
iret
mov
int3
push
lods
daa
sbb
sub
push
cld
fdivl
ds
and
call
or
xor
pusha
icebp
push
clc
mov
xchg
dec
fnsave
dec
ret
sub
push
mov
mov
dec
and
jg
and
sub
cmc
lods
mov
out
xor
jnp
xchg
or
lods
pop
lret
xchg
test
adc
std
pop
mov
sbb
stc
mov
xor
sti
filds
pop
mov
in
xor
das
jle
fs
in
mov
mov
cmc
cmpsl
dec
ja
pop
jl
or
loope
adcl
or
ss
mov
pusha
addr16
cmc
lret
cld
sahf
addr16
nop
dec
or
xchg
push
xchg
test
je
popa
sub
push
inc
dec
and
cmp
push
fiaddl
mov
xchg
int
out
repnz
push
test
jmp
add
mov
mov
add
mov
rolb
and
inc
cmc
jnp
in
jne
movsb
scas
inc
hlt
pop
pushf
or
popa
inc
adc
xchg
dec
nop
int
int3
xchg
mov
add
test
cs
pop
mov
fs
lahf
sub
lret
mov
mov
mov
sub
call
cmp
lock
fwait
out
insb
in
scas
add
mov
cmp
cmp
or
cmpsl
dec
call
sbb
orl
repz
mov
push
rcrl
mov
lahf
adc
frstpm(287
jle
pop
dec
rclb
mov
lds
xchg
mov
inc
xor
lret
stc
dec
pushf
cmp
popa
in
test
jecxz
sbb
orl
mov
sub
pop
inc
inc
jl
jbe
lcall
lret
inc
pop
adc
cmc
insb
xor
pop
dec
out
jmp
jge
jl
jnp
or
mov
mov
and
outsb
ret
push
or
mov
fstpt
dec
ja
cmp
mov
pop
hlt
mov
jo
cmp
in
test
push
insb
sub
ds
or
ljmp
xchg
or
stc
filds
pop
sub
xor
sub
add
xor
mov
in
sahf
mov
push
mov
dec
fcoml
push
shl
out
inc
xchg
ret
push
cmp
ret
jns
sbb
sarl
sbb
aaa
inc
jp
fstpl
push
add
leave
insl
xor
mov
lds
mov
adc
negb
je
insl
dec
jmp
push
push
jno
out
nop
stos
out
mov
ljmp
divl
cmp
stos
xchg
or
mov
push
mov
mov
cltd
cmp
adc
daa
fsubrs
cld
xor
popf
xchg
shll
bswap
ret
out
dec
ret
cmpsl
xchg
mov
inc
gs
jge
mov
ret
mov
fs
lds
ljmp
push
and
sub
sbb
xchg
dec
in
push
mov
mov
iret
je
mov
sbb
and
cmpl
sub
cltd
and
push
iret
sbb
mov
xchg
mov
repz
incb
shll
insb
dec
or
pusha
cld
pop
mov
jno
lods
dec
mov
in
repnz
jecxz
inc
incl
add
add
add
leave
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
in
push
or
pop
jp
sbb
push
ret
es
xor
fadds
lods
inc
dec
dec
cmp
jns
mov
pop
pop
cmpsb
fs
inc
ret
pop
daa
cmp
lret
mov
cs
and
dec
and
mov
sub
dec
enter
nop
dec
aaa
push
and
push
or
and
es
fldl
cmp
push
fists
sar
sbb
or
rcrb
mov
pop
stos
out
std
fisubrl
lock
data16
and
int3
sub
sub
aaa
sub
mov
xor
fs
ret
inc
push
add
scas
or
cmovae
mov
pop
jbe
int
loopne
fldt
cs
sub
xor
fcmovne
cs
int3
lods
cmp
cs
xchg
adc
mov
mov
jl
test
sarl
xchg
cmc
out
push
jo
int
or
inc
mov
mov
in
pop
pop
cli
mov
inc
mov
or
lods
push
stos
pmovmskb
push
push
fstpt
lea
test
aaa
ficomps
inc
sub
pop
movsb
adc
xchg
cmp
cltd
and
mov
jb
fwait
in
push
push
int3
add
movsl
push
mov
rcrb
test
loopne
pusha
sub
or
ficoml
jmp
es
cmp
jmp
test
xchg
pop
inc
adc
xchg
js
xlat
adc
xchg
lcall
test
pop
fisubs
repnz
loopne
xchg
rorb
faddl
and
inc
inc
xchg
outsb
xor
sbb
idiv
insb
mov
hlt
cmpsl
lcall
repz
into
fidivrl
push
pop
rol
xchg
loopne
mov
pushw
test
mov
cmp
in
scas
cmpsb
into
fsubs
jae
mov
adc
cmpsb
push
or
xchg
fdivs
movsb
inc
in
cwtl
popa
clc
pop
shl
or
test
fmuls
inc
sbb
mov
rol
repz
arpl
and
push
popf
push
xor
and
lahf
repz
out
inc
lods
xchg
adc
rcll
cltd
movsl
cli
bound
cld
out
test
shl
in
fiadds
adc
orl
mov
mull
loop
in
mov
ret
pushf
xor
or
mov
and
in
ret
nop
dec
mov
outsb
lds
pop
sub
mov
andb
sbb
cmpsb
push
inc
fmuls
pop
dec
test
pop
add
mov
cmp
les
loope
xchg
push
insb
out
jo
testl
imull
xchg
aas
jbe
lods
repnz
mov
mov
stos
xor
outsb
test
mov
inc
movsl
sti
jae
aas
jb
add
cmpsl
jno
lds
in
lock
shl
jmp
xor
inc
test
outsb
add
int3
ds
dec
std
mov
xchg
cwtl
jnp
out
pop
adc
adc
outsl
bound
lret
jl
ja
out
sub
jno
mov
out
dec
jg
inc
pop
lret
sahf
ljmp
jbe
mov
arpl
xchg
xchg
fmul
cwtl
ljmp
mov
sub
or
pop
mov
cmp
pushf
push
rorl
test
aaa
xchg
mov
cmp
mov
jge
inc
inc
xchg
outsb
dec
push
mov
hlt
jb
sub
push
jae
adc
or
ror
xor
push
outsl
dec
jno
push
pop
in
test
xchg
xlat
inc
sbb
mov
mov
jns
inc
icebp
or
xlat
sub
dec
insb
mov
icebp
and
test
test
mov
cld
dec
add
jne
int3
push
in
and
pop
sub
sahf
lock
jle
jg
aaa
push
cli
and
jno
int
das
stos
xchg
leave
gs
jg
xchg
adcb
out
test
andb
je
das
sub
repnz
pop
pop
push
push
push
jo
sbb
aad
sub
addr16
stos
xchg
xchg
les
pop
sbb
lcall
mov
int3
cli
xor
xchg
lcall
sti
pop
aaa
push
stos
adc
jge
adc
and
pop
pop
bound
cmp
cmpsl
push
xor
jae
sub
imul
das
out
inc
std
dec
mov
mov
mov
hlt
and
mov
cmpl
fsubr
loope
mov
push
orl
stos
xlat
addb
pop
cmp
cwtl
daa
mov
mov
jl
pop
sub
lea
adc
xlat
push
and
ret
pop
push
loope
mov
mov
es
pop
dec
data16
ss
sub
adc
pusha
adc
mov
adc
repnz
or
psadbw
add
in
cmp
idivb
pop
lock
sbb
jbe
repz
cmp
inc
fst
out
movsb
inc
test
xchg
pop
sub
aas
mov
aad
mov
push
mov
pop
and
sarb
push
cmp
sbb
jnp
mov
daa
mov
out
xor
gs
and
iret
sub
lock
mov
xchg
mov
push
xlat
out
cwtl
fsubrs
int3
and
cwtl
jecxz
daa
xchg
cmp
out
jnp
pop
sub
ljmp
outsb
lahf
lcall
clc
cmc
xchg
fdivl
pushl
pop
mov
sbbb
std
shll
flds
sbbb
idivb
int3
and
add
adc
xchg
push
movsb
adc
dec
sub
pushf
mov
sbb
xchg
mov
sub
enter
sub
fdivrl
mov
mov
stos
cli
aaa
push
adc
jmp
repnz
lcall
popa
loopne
mov
mov
pop
mov
sub
fistl
in
fcoms
loop
arpl
lret
xor
stos
popa
jmp
aam
aaa
xor
gs
cmp
cmp
jae
movsb
scas
pop
pop
or
insl
jb
pop
aam
mov
jle
mov
dec
jl
lods
or
push
pop
push
push
mov
mov
inc
sbb
inc
or
daa
lcall
mov
int3
xor
stos
ljmp
push
sub
cmp
cmp
ljmp
and
lds
jbe
push
pusha
popf
mov
fs
cmp
pop
clc
cli
pop
pop
mov
dec
std
or
das
jle
loopne
pop
in
jb
xlat
divb
orl
xor
or
int
std
repnz
jg
out
cwtl
mov
fidivrl
dec
lock
test
cli
pop
mov
cli
push
jo
cs
cmpsb
lahf
inc
jmp
add
mov
imul
arpl
adc
repnz
imul
loope
lahf
out
mov
push
sarb
repnz
aad
pop
push
int3
push
mov
sbb
stos
cli
push
jbe
xor
lds
cmp
lret
jno
inc
addr16
cmp
adc
xorb
adc
in
mov
je
sbb
jge
xor
insl
sbb
gs
mov
pop
add
fistl
lock
mov
lahf
inc
dec
test
sbb
aaa
jmp
shlb
add
dec
mov
insb
xchg
int
mov
adc
add
test
mov
jnp
or
sbb
pop
imul
dec
fisubrs
sbb
pop
jg
mov
ds
mov
enter
pop
jns
sub
jecxz
xor
pop
xor
sbb
shlb
jo
cmc
inc
mov
push
jbe
mov
shrl
rorl
or
movsl
call
sub
sahf
aas
add
and
cmpsb
jne
rorl
test
push
out
push
mov
imul
out
lea
cmp
daa
push
jo
sbb
flds
mov
mov
adc
shll
dec
mov
fstp
pop
xor
dec
lret
push
addr16
js
sahf
in
lods
inc
mov
fcmovnbe
test
jns
je
int
enter
je
jle
in
fldenv
inc
ljmp
lods
jl
mov
pop
jbe
jge
xchg
xchg
sub
xor
xlat
mov
test
lahf
lds
sub
pop
and
jle
inc
daa
and
sbb
test
popf
add
sbbl
sub
mov
jp
aaa
ret
cmc
mov
or
loop
add
scas
and
pusha
adc
lret
jle
fdivrs
push
daa
roll
push
jle
and
mov
repnz
or
lret
inc
pop
pop
into
and
mov
bound
dec
mov
jecxz
rorb
jmp
sub
dec
imul
xor
jno
call
loop
pop
and
cmc
addr16
mov
adc
jbe
repz
cmp
and
je
ds
xchg
pop
push
fcomps
push
or
sbb
popf
and
lcall
cltd
mov
jp
or
dec
pop
or
mov
lods
jg
mov
mov
sbb
jmp
adc
repz
std
mov
mov
ret
fmul
mov
mov
xchg
cmpsb
push
nop
shlb
out
fstpl
mov
lcall
mov
outsl
sbb
add
mov
xlat
xor
shll
mov
push
loope
popf
mov
xor
stos
jmp
pop
outsl
icebp
add
fsqrt
hlt
test
stc
mov
and
lea
mov
popl
fmull
mov
push
sbb
sbb
pop
icebp
mov
dec
jnp
sub
sarl
pushf
mov
cmp
mov
js
pop
test
sbb
rcrb
aas
in
lret
or
arpl
aam
es
mov
in
es
enter
mov
movsl
out
pop
das
xchg
loope
test
aaa
clc
mov
mov
mov
push
outsl
ja
stos
repnz
jns
sub
in
clc
fadds
fxam
mov
lods
addb
cmc
fmuls
xor
js
mov
cmp
sbb
jbe
clc
test
mov
lea
lods
pop
or
cld
add
or
fisttpl
mov
nop
cmp
adc
jo
gs
xlat
and
cli
imul
adc
mov
pop
cmpsb
mov
nop
inc
movsl
fucompp
adc
fwait
pop
xor
fadds
arpl
adc
add
data16
add
fimuls
add
mov
jns
cwtl
mov
and
push
cwtl
jl
insl
push
lock
lcall
xor
sub
ficomps
xchg
outsb
lods
aaa
rorl
sti
scas
dec
jge
sbb
dec
jno
adc
les
and
sub
jo
das
push
aas
pop
rolb
adcb
and
sub
aas
pop
pusha
push
dec
push
lods
jge
adc
call
ffreep
pop
xor
mov
push
test
movsb
mov
cmp
xor
les
and
pop
rolb
mov
ljmp
cmpsl
addb
add
in
inc
pop
cltd
sub
or
cltd
add
xchg
xor
pop
jge
in
inc
mov
mov
inc
jns
stos
vorpd
pop
fwait
rcl
movsb
iret
mov
xor
pop
sti
sub
dec
fdivrl
loop
lahf
mov
sbb
sub
xlat
cmpsl
inc
push
outsb
iret
dec
mov
popl
pusha
je
lret
out
les
fcoms
int3
and
sbb
push
cmp
dec
pop
or
rclb
movsl
pushf
repz
mov
int
out
mov
divl
adc
fildll
adc
xchg
cmp
inc
testb
inc
and
push
ds
popf
movsb
in
ja
sub
aad
push
fsubr
in
cmp
dec
pop
xlat
push
mov
jae
je
inc
in
aaa
sbb
add
xlat
fcoml
jp
notl
pop
sbb
popa
inc
dec
pusha
sbb
adc
inc
insb
pop
mov
cmpsb
add
nop
or
das
inc
loopne
push
pusha
push
mov
push
aad
out
xorb
test
adc
scas
add
movsb
dec
iret
dec
cmp
aad
popf
mov
add
push
xchg
mov
sub
mov
xlat
jbe
mov
pop
sbb
bound
mov
mov
fldcw
sbb
popf
xchg
mov
orl
cmpsl
out
mov
in
dec
clc
out
jmp
mov
cwtl
or
mov
in
sub
scas
adc
test
push
jmp
sub
pop
cmp
xchg
fstl
dec
pusha
scas
scas
les
mov
shr
punpckhdq
aas
aad
fdivrs
loopne
popa
sub
or
sahf
xchg
add
inc
push
fs
popf
cmp
lret
fwait
push
inc
jo
push
fidivrs
push
aaa
ljmp
adc
insl
pop
mov
or
std
mov
std
mov
arpl
mov
cmpsl
popf
xor
mov
mov
adc
add
xor
mov
add
xchg
add
aad
gs
sbb
arpl
pop
les
popa
mov
adc
std
push
loopne
lods
loope
cmpsl
push
fwait
push
imul
cmpsb
mov
mov
and
insl
cmp
sbb
lds
scas
insb
push
pop
jne
jno
add
dec
lahf
mov
fimuls
jb
or
test
adc
lret
xor
aam
xor
jle
mov
xor
add
xchg
lret
loop
cmpsl
loop
sbb
push
mov
sub
mov
mov
add
stos
xchg
imul
sti
xor
sbb
xchg
outsb
icebp
xchg
mov
stos
xchg
gs
adcb
out
push
sbbb
pop
lret
arpl
push
insl
dec
in
lret
xchg
fisubl
xchg
out
push
mov
and
mov
fs
xor
jno
pop
decb
inc
cld
jecxz
jl
mov
jecxz
xchg
pop
bnd
sbb
pushf
jl
xor
pop
clc
mov
cmp
pop
and
test
mov
and
jp
ja
and
sbb
pushw
out
push
repnz
ret
cmp
jge
mov
cli
pop
imul
inc
jns
lods
sahf
dec
and
icebp
adc
jecxz
js
out
ds
xchg
pusha
fdivr
jae
andb
xchg
cs
subl
push
jb
push
inc
inc
adc
add
cmp
aas
iret
push
pop
mov
xchg
fisubl
and
popa
mov
and
out
shrb
sbb
rcl
jns
mov
int3
lea
daa
pop
pusha
icebp
icebp
dec
popl
lret
jbe
pushf
and
pop
jmp
sub
lahf
sbb
pop
inc
jp
div
sub
adc
subl
or
xor
or
mov
jo
pop
adc
mov
in
addl
jp
lock
sub
scas
and
leave
fisttpl
add
push
lods
cltd
mov
movsl
mov
aaa
imul
rolb
les
addl
aam
iret
enter
nop
sub
jg
adc
mov
mov
lods
push
push
or
pop
into
lock
inc
push
cmp
sub
pop
mov
call
sbb
cmp
fdivs
pop
testb
addr16
shll
cltd
xlat
out
sub
sub
bound
imul
cld
ja
int3
lcall
leave
lods
inc
mov
fst
stc
insb
mov
test
xchg
cwtl
inc
push
inc
push
test
inc
popa
aaa
hlt
mov
testl
mov
cwtl
inc
icebp
xor
xchg
fcomps
inc
inc
scas
lods
jno
test
scas
xchg
adc
dec
cpuid
out
jns
cmpb
mov
mov
mov
cli
fcomps
push
cs
add
jge
mov
jecxz
insb
les
xchg
enter
jp
dec
notl
inc
pop
cmpsl
jb
push
xor
lds
inc
lods
mov
xor
jge
fbld
mov
and
push
cmp
out
sub
xchg
pop
ljmp
add
call
ret
aas
or
mov
je
mov
adc
xor
int3
inc
addl
enter
shlb
negb
push
inc
and
ret
mov
push
das
sub
cmpsb
pop
mov
inc
repnz
das
inc
add
clc
scas
test
push
insb
data16
fimuls
das
push
pop
pop
in
adc
in
jecxz
cld
lods
xchg
adc
adc
xor
hlt
andb
lds
dec
jno
je
jecxz
jno
sbb
xor
sub
dec
dec
mov
inc
inc
mov
iret
pushf
or
mov
sub
jno
orl
out
dec
dec
insb
cld
cwtl
sbb
ds
jle
lods
mov
lcall
pop
adc
lods
std
stos
in
and
sbb
jg
lods
inc
and
imul
add
xchg
sub
and
cltd
cltd
and
xor
pop
add
jmp
jnp
ss
lahf
inc
add
mov
dec
push
inc
mov
aad
andl
sbb
in
mov
lcall
lret
jge
rol
add
leave
jne
sti
arpl
bound
popf
leave
ja
dec
fwait
xchg
pop
adc
xlat
mov
mov
std
mov
out
sysexit
inc
addr16
cli
add
add
lea
jmp
fxam
stos
iret
test
jecxz
mov
mov
pop
pop
cmp
mov
pop
cmpsb
nop
jo
stos
rcll
xor
inc
insl
lahf
fldl
leave
or
adc
jle
stos
mov
pop
sbb
inc
call
cmp
inc
xchg
pop
out
sbb
lods
lcall
int3
inc
leave
pop
fisttps
mov
push
cmp
lock
int
pop
adc
sahf
cmpl
or
das
insb
xor
add
cwtl
notb
in
and
xor
inc
adc
push
inc
or
jne
mov
or
out
popa
pop
pop
data16
mov
mov
in
bound
mov
jle
ss
js
fists
scas
mov
cmc
rcl
enter
add
push
sbb
movsb
dec
imul
adcl
cmp
mov
push
sub
pop
jmp
and
mov
mov
inc
mov
iret
movsl
popa
loopne
inc
stos
fadd
dec
into
adc
mov
jle
jne
sub
sbb
scas
jle
ficoml
jae
push
pop
sbb
iret
jg
and
pushf
push
mov
ds
cltd
addr16
repz
cmp
jl
shlb
addr16
ret
jno
mov
push
cmp
int3
test
cltd
loop
dec
push
out
sbb
fbstp
popa
ret
pop
mull
andl
addr16
mov
gs
mov
mov
cwtl
or
popa
and
sub
fbld
pop
xchg
push
or
testl
loop
mov
popa
add
insb
push
loope
cli
out
cmp
shrl
sti
into
pop
iret
bound
outsl
xchg
cmp
or
lahf
jb
inc
jg
jge
aad
push
mov
push
sbb
pop
xorl
clc
dec
adc
inc
push
pop
fsubrs
fucomip
mov
mov
movsl
dec
cmp
loopne
sub
shl
mov
lcall
or
push
pop
nop
fstps
ds
mov
jno
jmp
lods
notl
xor
dec
nop
bound
inc
xor
iret
jmp
cmpl
mov
lret
pop
xor
sbb
push
xlat
push
mov
push
fs
adc
cld
sbb
cmp
push
arpl
sbb
push
sbb
xchg
leave
xchg
xchg
out
sarb
dec
fists
inc
mov
push
fcmovnbe
ss
jg
adc
jnp
movb
dec
pop
add
addb
inc
and
jb
mov
ret
pop
call
push
ret
test
jno
xchg
xor
fs
inc
dec
rcr
adc
in
jne
sahf
cmp
into
enter
lcall
orl
mov
les
mov
cli
and
lock
in
mov
dec
jnp
sub
mov
or
sbbl
les
jno
push
sahf
xor
popf
dec
adc
imul
xor
jnp
jne
push
imul
int3
sub
loope
loop
xor
mov
push
pop
mov
or
adc
ja
lcall
xchg
cmp
adc
mov
and
or
sbb
mov
push
jmp
sub
push
pop
scas
jmp
inc
repz
in
in
mov
adc
and
mov
mov
pop
or
inc
xor
jecxz
dec
call
addb
jp
pop
mov
cmp
pushf
pop
pusha
mov
sahf
push
add
aad
xchg
push
push
cld
shlb
push
fs
lret
mov
pop
bound
jp
push
mov
add
add
pop
cmp
push
sbb
and
cs
jo
cmp
jb
movsb
mov
push
add
sbb
pop
and
popf
dec
lahf
cmp
push
ss
add
cmc
inc
ds
fimuls
movsl
cmp
cmp
add
test
mov
xchg
sub
fisubl
lock
push
std
hlt
inc
add
pop
aaa
dec
mov
add
out
cmp
mov
je
int3
pop
loop
mov
inc
push
xchg
xchg
sbb
stos
ficoml
cli
cmp
add
out
cmpsl
xor
out
xchg
popf
icebp
mov
push
movsb
pushf
inc
dec
enter
fisttpl
imul
or
jecxz
aaa
lods
push
shl
sub
js
sahf
ret
pop
aaa
pop
test
dec
fisubs
enter
dec
fldl2t
cld
aad
nop
or
cmp
push
inc
je
mov
jne
xchg
jge
mov
loopne
lahf
jmp
fsub
loope
bnd
and
inc
call
inc
jb
movsl
mov
repz
and
outsb
hlt
mov
mov
clc
xor
sub
std
lock
pop
sbb
push
sub
inc
in
push
pushl
pop
fdivl
pop
enter
stos
enter
dec
jp
jmp
pop
inc
pop
fcoms
cmp
fldcw
inc
or
pop
adc
and
aam
daa
push
add
lods
mov
movsb
int3
sahf
mov
testb
jo
sbb
push
in
or
out
xor
mov
mov
push
pop
xchg
or
jb
lret
loope
call
mov
mov
pop
filds
fyl2x
ret
cmp
shlb
and
lret
dec
add
add
dec
cs
adc
in
push
jecxz
mov
inc
and
popa
ret
repnz
add
cmp
cs
push
sbb
andl
dec
pop
pop
adc
xchg
mov
push
fidivs
shll
adc
xchg
lret
mov
sbb
sbb
mov
dec
mov
cmpsb
in
xor
cwtl
lcall
arpl
dec
mov
loope
mov
jp
push
mov
mov
loop
movsb
jne
jl
or
subb
cwtl
add
bound
std
mov
test
jl
outsb
repnz
out
shrb
int3
push
loope
inc
insb
in
sub
fistpl
push
jmp
mov
push
fsubl
rol
ja
rorl
stos
xlat
push
fmuls
sbb
shlb
jnp
outsb
pop
sub
xchg
mov
mov
les
mov
js
ret
mov
sti
daa
lock
pop
push
sbb
pop
xchg
inc
jge
mov
aam
nop
mov
xor
test
das
adc
inc
mov
mov
cld
xor
loopne
movsb
loope
jo
addl
mov
push
adc
or
stos
mov
cmc
in
test
popa
scas
xchg
mov
test
ja
mov
add
repz
inc
jecxz
jg
and
loope
adc
fsts
repnz
enter
pop
in
aad
rcrl
sub
inc
sbb
push
sbb
imul
mov
jl
out
rorl
ret
sub
imul
dec
cmp
in
mov
test
sub
aas
gs
inc
or
xchg
jns
push
ret
int
mov
jno
test
pushf
shlb
ret
fdivs
loope
inc
push
xchg
std
cwtl
pop
mov
popw
pushf
xor
shll
push
daa
xchg
mov
in
sub
add
loop
mov
push
sbb
mov
xor
data16
mov
cmp
negl
faddp
add
mov
rolb
cmp
mov
add
test
jp
ret
test
sbb
xchg
insl
incl
in
add
lock
ds
mov
xchg
shll
xchg
sbb
cli
cmp
mov
and
insb
paddq
fidivrs
jae
shll
or
sbb
popf
pop
fstl
pop
mov
cli
test
leave
es
stos
out
mov
mov
test
pop
and
jle
mov
mov
sub
pop
xchg
stos
push
sub
sub
xlat
pop
cmp
pop
movsl
in
inc
xor
fbstp
mov
add
xchg
jo
mov
aad
dec
mov
sahf
inc
fwait
call
jmp
push
adc
pusha
loope
sub
sbb
pop
pop
push
pop
xchg
cli
lret
loopne
bound
push
cwtl
mov
sbb
mov
push
sbb
movl
jns
repz
aam
sarl
dec
mov
lods
add
lcall
ds
push
fsubl
xor
fadd
mov
fistl
jns
subb
push
mov
pop
dec
mov
jae
lods
call
iret
push
sbb
test
adc
imul
cmp
popa
push
lcall
add
adc
xchg
imul
cwtl
repnz
mov
jno
jmp
xchg
mov
int
mov
loop
xrelease
dec
dec
sub
xchg
les
inc
negb
out
lods
mov
inc
aaa
in
mov
dec
fisttpl
leave
loope
inc
mov
adc
mov
jbe
jbe
loop,pn
imul
sahf
and
aam
push
sti
idiv
outsl
hlt
not
test
mov
lods
sbb
jbe
fadds
nop
add
fimuls
rorl
ficoml
dec
sub
call
cmpsb
push
sbb
and
neg
loopne
sbb
push
bnd
cmpsb
jb
xor
pop
add
or
cwtl
lahf
fcompl
pushl
ficoml
add
out
sbb
in
push
sub
and
lods
pushf
aad
mov
fisttpll
imul
cli
pop
in
test
leave
jb
inc
xlat
push
cmpsl
cmpsl
cwtl
adc
popa
mov
dec
cmp
push
and
inc
mov
fstps
outsl
cmp
lahf
mov
loop
aad
xchg
and
iret
fisttpll
and
push
hlt
pop
pusha
adc
sub
clc
and
scas
push
sbb
shlb
jbe
jnp
dec
xchg
aad
js
push
sbb
jo
cltd
aas
divb
js
mov
fwait
mov
popl
fsubl
cmp
inc
nop
mov
xchg
jns
pop
dec
jle
or
push
ret
in
jmp
sub
rcrb
pushf
inc
mov
sar
outsb
and
int3
stos
xchg
sub
mov
mov
aas
jno
imul
pop
incl
insl
icebp
loopne
into
fcomps
adcb
mov
and
jecxz
cmpsl
daa
insl
stos
mov
mov
and
pushf
jle
mov
in
mov
sbb
popw
mov
mov
add
repz
add
sbb
sbb
popf
mov
cwtl
leave
xor
mov
cld
or
sub
sub
sti
mov
mov
bound
xchg
pop
mov
scas
cmc
std
adc
mov
in
dec
add
push
bound
int
xor
or
push
in
test
and
mov
sub
adc
inc
push
aam
push
jge
aad
jo
add
out
fcomps
cmp
mov
dec
pop
daa
vpunpcklwd
cltd
adc
cmp
add
push
xlat
inc
lods
icebp
fwait
pop
popa
push
aad
xchg
xchg
into
jle
xchg
mov
les
cltd
dec
movsl
jp
repz
adc
xchg
mov
pushf
inc
iret
ficoml
mov
movsl
inc
sub
push
test
bound
cmp
xchg
mov
pop
jae
or
adc
shll
jb
scas
push
cmp
dec
xchg
or
mov
lret
pop
movsb
add
mov
and
fiaddl
out
push
lret
ljmp
jae
and
mov
inc
and
xor
add
jmp
mov
daa
rcl
jl
push
cmp
xlat
sbb
xor
fildll
mov
fildll
inc
xchg
sbb
fsubs
insb
stos
das
packssdw
test
imul
xlat
add
aaa
push
push
ds
mov
or
les
outsl
push
data16
movsl
mov
pop
or
dec
adc
inc
jno
pop
sub
cli
cmc
or
ljmp
push
jmp
addr16
hlt
fwait
loop
push
repz
adc
inc
cmc
aam
fisttpll
cli
lcall
mov
jp
mov
in
frstor
loopne
movb
pop
xor
movsb
movsb
jno
shrb
add
mov
out
pushf
push
leave
cltd
int
fwait
enter
xor
and
movsb
test
popa
inc
or
test
dec
aad
test
cmp
aad
stc
push
xor
shl
testb
add
sbb
fs
out
sub
lds
xor
inc
push
call
lods
dec
inc
dec
rcr
gs
inc
ja
xorb
mov
fsubs
iret
xor
dec
sbb
imul
mov
pusha
push
outsb
cmp
jns
sti
cmp
jbe
push
sub
xlat
arpl
pop
and
lock
sub
jo
mov
or
mov
arpl
mov
mov
push
inc
adc
out
push
jp
bound
std
and
or
clc
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
jb
scas
jp
add
jp
xchg
ret
loop
es
mov
fidivrl
int
mov
jle
push
je
lods
in
jne
cmp
xor
xlat
push
pop
dec
cltd
dec
sub
xchg
or
test
cmp
lds
fldl
push
mov
jmp
sbb
out
sub
icebp
aaa
add
std
subb
fwait
and
jge
scas
cmp
enter
stos
cmp
jg
jbe
dec
xchg
mov
cmp
clc
repnz
aad
push
pop
pop
jl
cmp
mov
xor
pop
add
test
and
js
dec
sub
cmp
pop
xor
rcrb
scas
shr
movsb
xchg
add
test
lret
xor
adc
sub
aas
in
iret
lods
stos
fwait
and
les
scas
ja
loope
in
xor
fwait
outsl
jle
sbb
push
jge
shlb
add
lret
data16
jecxz
mov
cmp
mov
lds
mov
or
sti
sbb
ret
jb
fidivl
addr16
adc
jmp
jp
lcall
out
sbb
mov
data16
iret
shrb
add
push
ficoms
jg
dec
mov
jns
mov
push
je
cmp
lods
outsl
cli
pop
mov
jg
lock
ljmp
enter
scas
or
or
jmp
add
pop
test
scas
pop
or
mov
scas
addb
in
lret
adc
adc
insl
loopne
cld
divl
aas
lods
ret
lock
clc
xchg
mov
sub
es
add
cld
xchg
scas
rol
sbb
fnsave
int3
int
cmp
xchg
cmp
popa
adc
inc
outsb
aas
nop
sbb
outsl
xchg
pop
lods
jp
jns
inc
adc
fildll
push
cmp
cld
ss
pop
in
hlt
ja
xlat
jmp
addb
xor
mov
pop
pushf
push
or
movsb
sbb
pop
adc
cmp
jp
cmc
js
lds
mov
inc
xchg
and
sub
cmp
fidivs
lcall
mov
outsl
mov
aad
popf
icebp
sub
stos
sub
test
push
fwait
negb
ljmp
jmp
inc
jae
push
push
push
add
add
loop
shrl
shll
mov
stos
daa
mov
int
sarb
xchg
cmp
jecxz
dec
sub
loope
int3
not
cmpsl
xchg
xor
cmp
ret
adc
jb
push
pop
daa
insb
scas
xlat
xchg
aaa
cmpsl
icebp
push
push
icebp
shl
ret
fcomi
enter
cwtl
imul
pop
enter
or
in
lahf
xchg
int
mov
sub
fmull
js
or
in
or
xor
cwtl
xlat
pop
lret
cmp
sub
jle
test
add
adc
and
sub
and
std
cmp
idivb
mov
pop
adc
xor
fidivrs
mov
in
jnp
js
jno
sbb
or
cmp
xchg
data16
outsb
loop
dec
rcll
cmpsl
inc
mov
or
inc
jmp
mov
enter
clc
mov
mov
mov
pop
lret
adc
faddp
pop
bound
or
jge
test
call
pop
rcrb
sub
inc
lods
ja
mov
sub
push
popf
shlb
adc
xchg
inc
loop
test
inc
xchg
in
std
or
call
faddl
adc
cmpl
insb
inc
adc
icebp
sub
les
aam
std
out
or
mov
imul
adc
insl
or
sub
add
mov
mov
xchg
lods
cmp
fistpll
mov
das
fwait
data16
mov
xor
add
mov
mov
ljmp
repz
out
xchg
push
ja
dec
lds
das
rcrl
cmpsl
sbb
mov
in
sbb
xchg
js
scas
jns
lods
cmp
fmuls
adc
push
nop
lahf
out
adc
xchg
out
add
out
rcll
shl
dec
ret
cmpsl
push
adc
mov
jmp
lret
div
fiadds
xchg
jno
jmp
sbb
pop
out
push
das
jne
mov
xchg
out
mov
sub
dec
push
pop
pop
adc
mov
adc
cmpsl
mov
xchg
xchg
inc
out
mov
mov
mov
orb
rorb
push
sub
push
pushw
enter
pop
add
lods
lock
lea
lock
inc
cmp
mov
inc
dec
test
pop
push
loopne
nop
push
mov
ljmp
imul
xchg
mov
aam
lcall
adcb
xchg
mov
in
sbb
push
aam
inc
pop
pop
inc
mov
mov
ds
cmp
xor
cld
lods
lahf
pop
inc
jmp
mov
js
and
mov
jne
adc
xor
xor
rcrb
dec
jbe
cmpsb
xchg
mov
ss
shl
mov
lock
fcmovnbe
push
inc
fwait
into
stos
clc
shrl
in
call
popa
ljmp
sub
xor
push
cmp
sysret
stos
repz
fldenv
rolb
ret
ficompl
loop
mov
pusha
loope
adc
notb
lret
lods
push
fildl
or
fcoms
ds
dec
mov
pop
push
push
andb
push
xor
inc
sar
xchg
test
insb
cmp
dec
int3
es
decb
loopne
das
and
iret
ss
test
jp
aam
push
xor
movl
push
addl
icebp
scas
scas
int3
call
lret
mov
add
push
cmp
test
cmp
xchg
fs
mov
mov
cmp
outsl
popf
lds
cmp
test
jl
sub
lret
xor
pop
jl
mov
int3
or
das
adc
insb
xchg
movl
inc
scas
xchg
adcb
add
clc
gs
mov
adc
decb
xchg
mov
inc
lods
clc
or
pop
xchg
cmpsb
jns
aam
jl
mov
add
jmp
pop
add
sub
iret
bound
mov
dec
add
inc
rol
cmc
popa
push
push
push
jmp
inc
lcall
rcll
rcll
mov
xor
inc
ficoms
insl
leave
push
out
inc
mov
mov
aam
in
xchg
adc
dec
mov
cmp
add
rcll
repnz
pop
mov
out
notb
es
cmp
aam
out
frstor
outsl
mov
int
cmp
out
cwtl
gs
xor
mov
subl
mov
jmp
mov
je
lahf
subb
fnstcw
insb
test
es
adc
xchg
rcl
mov
cmp
jge
jle
lret
or
sub
xchg
push
orl
jmp
inc
inc
aam
fimuls
and
inc
movsb
adc
xor
clc
jb
in
inc
mov
xchg
push
arpl
and
cmpsl
mov
dec
aam
mov
sti
test
movsl
fadds
fsubp
sub
xchg
pop
mov
add
das
push
jnp
test
adc
sbb
lock
movsl
lahf
add
or
add
sbb
int3
scas
sbb
dec
push
or
les
adc
sbb
nop
mov
push
dec
fdivs
sbb
mov
movsb
lcall
mull
jmp
ja
xchg
mov
lds
push
mov
loop
out
rclb
fisubs
popf
sarb
ja
jge
push
or
jle
cmc
lock
push
cmp
sub
mov
jg
sbb
pop
jecxz
xor
mov
jns
mov
push
mov
test
cld
mov
mov
lods
mov
lock
add
push
push
mov
adc
movl
inc
fisubrl
addb
cli
jnp
inc
test
push
mov
dec
sub
or
or
in
pop
cmp
sti
shr
mov
push
fstl
pop
cwtl
and
mov
push
xor
out
pop
pop
je
inc
inc
mov
pop
and
jg
or
or
in
xchg
arpl
andb
fwait
sbb
test
add
out
mov
cmp
sarb
mov
inc
add
mov
sub
push
inc
pop
into
mov
mov
cmp
mov
cli
pop
pusha
jmp
call
stos
xchg
test
mov
subl
and
sub
pop
pop
push
pop
lods
pop
jle
push
pop
inc
shll
dec
cwtl
fs
out
cld
push
xor
insb
jno
mov
hlt
dec
in
inc
cmp
nop
out
std
cmp
je
adc
jbe
fcmovnb
or
sub
insb
repz
push
cmp
push
dec
dec
dec
mov
xor
mov
call
or
shl
mov
mov
inc
test
xor
adc
mov
xchg
inc
cld
xchg
js
and
repz
jecxz
lcall
lahf
sbb
inc
jmp
in
inc
mov
dec
xor
lcall
and
into
inc
int3
data16
into
add
insb
inc
fsubrp
mov
jnp
pop
hlt
aas
sub
xor
jb
movntq
add
in
clc
or
cmpxchg
je
add
in
iret
adc
mov
sub
adc
xchg
cmp
and
push
push
mov
xchg
and
pop
movsb
cs
repz
mov
dec
xchg
pop
ja
loop
inc
pop
wbinvd
xchg
and
std
adc
jb
divl
fdivrp
mov
or
xchg
stos
test
xor
add
ret
pop
int3
dec
xchg
pop
cmc
pop
or
std
lcall
lock
jle
mov
inc
cld
ds
test
pop
add
jbe
in
lcall
mov
test
adc
adc
mov
test
and
push
sahf
inc
rcrb
jbe
in
lret
pop
pop
movsl
dec
outsb
imul
xor
loop
int
movl
pop
imulb
jp
mov
cmpsb
lds
or
lea
jo
pop
data16
int
das
out
or
add
xor
cmpsl
add
icebp
xchg
mulb
pop
fldt
mov
sbb
fwait
ds
xchg
je
mov
ljmp
fbld
xor
jbe
dec
mov
xchg
dec
pop
arpl
and
stos
mov
call
addr16
in
mov
enter
jmp
pusha
pop
fnstcw
jbe
ret
sub
push
push
mov
pop
fdivrs
fstl
cltd
push
fdivrs
cmp
adc
mov
push
jp
push
outsb
inc
mov
lret
cmpsl
stc
adc
cmp
sbb
sbb
sub
sub
adc
aas
mov
pop
xchg
aas
adc
mov
scas
push
adc
sti
mov
push
and
test
imul
pusha
jp
mov
xor
in
test
mov
fstp
loopne
dec
dec
jecxz
lock
cli
sti
sbb
fisttpl
adc
push
mov
mov
add
inc
and
push
imul
lds
jmp
pop
sub
lret
aad
sbb
incb
shrl
in
pop
xchg
sbb
inc
popa
repnz
mov
jns
jo
sub
inc
leave
mov
sti
bound
daa
leave
pop
ja
inc
movsl
cmp
les
sub
push
or
xchg
testb
loopne
insl
and
xchg
ds
lea
fsubrs
push
dec
and
pop
out
xlat
cmpsl
dec
adc
insb
xor
mov
push
lret
scas
mov
adc
int
mov
movsl
pop
push
cmp
mov
gs
int3
mov
inc
inc
imul
les
fisttpl
pop
and
dec
sub
add
or
sarl
pop
pop
shll
std
je
jmp
clc
mov
mov
imul
jg
outsl
fbstp
mov
mov
or
arpl
push
outsl
or
aam
push
je
cmp
mov
cmp
lret
pushf
test
or
xchg
xor
mov
int
dec
sbb
andl
loop
scas
pushf
mov
mov
xchg
fsubs
gs
inc
xchg
sub
jle
jl
sub
enter
scas
xchg
inc
aas
mov
mov
lret
mov
cmp
lfs
mov
xor
or
cmp
popa
cmc
sbb
jl
scas
test
jae
adc
inc
inc
test
fimull
sub
cmpsb
or
jnp
push
rorl
in
incb
iret
dec
pop
ds
mull
cwtl
stos
mov
mov
cwtl
mov
inc
push
cld
int
aam
rorl
or
sub
in
mov
mov
mov
adc
adc
jo
mull
jmp
jg
outsl
rcrb
xchg
cmpsb
mov
repz
cmpsl
cmp
aaa
push
rorl
fcomps
cmc
jae
pushf
imul
inc
mov
pushf
jg
cs
mov
xor
test
dec
mov
lahf
mov
or
sub
lods
xchg
xor
ljmp
push
fs
mov
add
pop
test
cmpsb
lret
sbb
adc
pop
enter
cmp
jecxz
and
aam
jle
cmp
adc
in
loope
xchg
rcrl
mov
repz
cwtl
push
shr
outsl
sub
pop
leave
and
mov
xor
inc
loope
xchg
add
mov
nop
push
fmull
ret
fcoms
and
xorl
push
jge
mov
ret
push
pop
adc
inc
ljmp
pop
jne
jp
inc
int
sub
pop
ret
in
sbbb
lods
mov
in
ficoml
out
and
cmp
push
mov
xorb
imul
or
rcr
mov
int3
mov
cmc
dec
inc
movsl
cmpsb
out
pop
adc
jns
jp
adc
shlb
aam
fsubs
pop
inc
outsl
out
and
lcall
or
cmpsb
dec
or
and
test
aad
dec
je
inc
test
dec
scas
push
cmp
popf
aad
ss
mov
inc
movsl
inc
iret
test
inc
lret
fs
sbb
jge
cwtl
repz
cmp
or
push
cli
test
movsb
dec
pop
dec
adc
mov
out
xor
cld
and
stos
lcall
jbe
fs
vmovaps
jbe
data16
mov
push
imul
popf
or
or
inc
out
lcall
sbb
stc
mov
hlt
movsw
jp
sbb
sbb
jmp
js
xchg
and
popa
es
cs
jne
and
pop
cld
sub
adc
dec
aaa
xor
call
lock
out
imul
dec
imul
loop
xchg
mulb
loope
mov
out
inc
mov
jecxz
mov
int3
fcoms
repz
insl
shlb
jmp
test
leave
push
jns
fcomi
test
pop
out
xor
or
pop
and
push
xchg
and
jecxz
hlt
orl
and
xor
pop
inc
and
lods
repnz
pushf
enter
sarl
cmp
insl
cmp
adc
cmp
xor
loop
out
aam
fdivrl
adc
cld
ljmp
pop
jle
jge
push
push
dec
notl
xchg
pop
or
sbb
dec
in
cmp
adcb
jmp
dec
mov
dec
mov
or
push
mov
and
pop
mov
cmp
lock
dec
mov
xchg
ss
popf
enter
aas
imul
xchg
pushf
popf
push
xor
push
lret
mov
lret
test
sub
add
mov
lcall
bnd
movsl
outsb
ficompl
mov
int
outsb
pop
mov
mov
lock
rolb
and
mov
cmpsb
loope
stos
jb
inc
rclb
aam
and
mov
jb
fcomps
xor
ljmp
scas
popa
dec
cmp
mov
das
out
fidivrs
fldl
shll
add
fcoms
loop
push
push
gs
dec
xchg
outsl
cs
adc
mov
and
out
push
andl
dec
and
xor
vpunpckhqdq
pop
lock
pop
lret
movsb
pop
test
icebp
addr16
ss
fistpl
mov
inc
sahf
scas
test
ss
or
in
fdivs
aas
std
jmp
adc
push
test
scas
or
cltd
aam
outsl
add
lods
insb
mov
mov
xor
icebp
mov
ret
es
and
sbb
sbb
push
add
xchg
pop
mov
orb
bound
pop
adc
mov
sub
pusha
mov
ds
fdivrl
cmp
mov
mov
addr16
adc
push
enter
movsb
xor
mov
fisubrs
push
xor
pop
push
push
inc
push
push
sti
bound
xor
enter
and
cmp
ljmp
cmpsb
mov
iret
outsl
pcmpgtb
or
sahf
lock
stos
jne
movsb
push
out
loop
jmp
stos
jp
ficoms
imulb
push
cld
jmp
int
lods
mov
xor
sbb
sbb
outsl
mov
notl
loope
mov
scas
call
cs
add
xchg
aam
add
and
jbe
out
inc
rolb
xor
and
and
push
imul
int3
xor
scas
sbb
push
stos
clc
roll
dec
pop
insl
xor
mov
fsub
shll
gs
nop
sub
test
mov
mov
outsb
xchg
pop
mov
inc
xor
pop
out
cmp
xchg
xchg
add
arpl
sub
cmpsb
fdivrl
scas
jns
cmpsl
je
adc
push
push
stos
ja
incl
push
mov
xchg
bound
xchg
mov
lahf
dec
add
addr16
out
sbb
cmpl
mov
and
jecxz
mov
ficomps
cs
sarb
aad
enter
data16
mov
xor
inc
sahf
mov
push
jbe
bound
jae
dec
cmc
or
xchg
cmpsl
loopne
pop
cmc
cmpb
sar
mov
pusha
cmp
sbbb
add
push
mov
mulb
or
pop
cmp
in
mov
and
mov
jb
jb
mov
jo
in
sub
test
pop
mov
into
dec
cld
jl
mov
sub
sbb
cmp
fmull
jecxz
adc
dec
mov
sarb
inc
mov
pop
jg
add
imul
push
or
test
and
dec
iret
push
ret
pop
nop
movsb
pop
mov
leave
and
lds
xchg
leave
lahf
call
mov
popa
fwait
jl
je
xchg
int
push
repz
or
mov
inc
dec
add
ss
iret
push
mov
xor
arpl
xor
add
out
and
cs
fld
lahf
cs
mov
repz
jl
fstl
leave
or
imul
or
rolb
dec
call
fnstenv
mov
push
fdivrp
xchg
or
mov
mov
mov
mov
push
or
mov
pushf
inc
daa
loopne
xlat
cs
push
jno
jo
cli
addb
mov
xchg
fdivl
xor
cmpsb
mov
lea
mov
or
cli
imul
stos
loop
inc
jge
push
pop
lock
in
decl
jno
push
sub
imul
notb
daa
lea
xchg
ret
mov
nop
sub
jp
add
mov
pop
fs
mov
mov
adc
lret
jnp
sbb
movsb
jno
push
lret
lock
mov
inc
jle
adc
xor
sub
xor
mov
xlat
jne
clc
aad
xchg
bound
rcrb
xchg
sbb
jge
mov
aam
jo
dec
xorb
mov
sbb
lcall
jo
xchg
inc
pusha
enter
mov
orl
in
dec
adc
adc
xchg
jb
jne
in
ficomps
pop
pop
push
aas
cmc
xchg
wrmsr
rorb
idiv
and
add
xchg
or
add
icebp
and
push
and
in
cmp
mov
xor
lcall
xchg
test
iret
xchg
sbb
scas
xor
dec
insl
aas
outsl
aad
or
mov
repz
xchg
cmpsb
mov
ret
loop
aaa
xor
mov
mov
xlat
fidivl
adc
dec
push
bound
rep
movntq
out
lock
or
je
mov
mov
push
inc
and
mov
sarb
imul
sahf
notb
mov
stc
pop
outsl
outsb
pusha
cmpsl
test
add
stc
xchg
push
push
xor
scas
test
xadd
aad
push
mov
lahf
clc
pop
popf
outsl
ret
ja
xor
adc
fisubrl
mov
nop
push
sub
das
add
push
insl
sub
subb
adc
jp
sbb
pop
and
xchg
mov
popl
adcb
mov
fdivp
ss
adc
sti
mov
cwtl
mov
out
mov
jbe
dec
cmp
imul
repnz
mov
mov
dec
xchg
cmp
aaa
or
adc
stos
shlb
out
adc
xor
sub
or
shll
and
push
lds
je
enter
cmp
fildl
cmp
mov
lret
rorb
push
mov
pop
push
xchg
jnp
xorb
inc
je
jb
pop
adc
jo
mov
ds
mov
les
imul
dec
jle
sbb
and
or
sub
add
movsb
add
and
cmp
mov
pushf
test
addr16
das
xchg
sti
popa
inc
dec
push
outsl
mov
push
jmp
pop
inc
cs
and
mov
xor
je
nop
sub
insl
cmp
mov
xor
fbstp
dec
add
mov
xor
pop
into
std
add
or
leave
adc
sarl
xchg
jge
cmp
adc
lret
daa
mov
movsl
jmp
sbb
lock
ret
enter
xchg
loop
and
xchg
mov
popf
jp
aam
aam
push
pusha
icebp
out
mov
and
lcall
jg
fcmovnu
push
ljmp
pusha
mov
adcl
xor
lret
jne
movsb
ds
add
mov
jno
cmp
cli
mov
push
xchg
jecxz
test
push
fstl
mov
ret
das
sub
nop
and
test
sub
out
bound
jne
mov
jae
in
jmp
addr16
sub
or
mov
cmpsb
push
dec
jg
aaa
mov
dec
ljmp
sbb
loope
pusha
xor
mov
mov
fwait
pop
xorl
popa
pop
cmp
std
dec
lcall
xorb
or
cmc
rcrb
sahf
jb
mov
jbe
mov
pop
mov
nop
push
imul
lock
xchg
adc
mov
mov
and
cmc
xor
jle
out
mov
jbe
out
cmp
and
in
mov
orb
in
xchg
mov
mov
cmpsb
cmpsb
push
insb
addb
cwtl
adc
ss
mov
push
movsb
ret
dec
jne
pop
mov
loope
add
fdivr
js
incb
mov
lahf
push
sahf
je
sbb
push
loope
int
insb
pusha
push
jl
dec
cld
sub
les
pop
nop
lock
repz
jbe
pop
mov
inc
mov
mov
test
in
rol
jbe
subb
call
xor
lret
jle
pop
arpl
insl
jmp
mov
sub
adc
dec
sub
dec
adc
sub
and
cld
addr16
cmp
loopne
repnz
shl
shr
inc
xlat
jle
mov
mov
cmp
add
sti
stc
mov
and
scas
jo
aad
pop
pop
inc
lret
sahf
out
mov
pop
jns
or
sub
dec
xchg
fdivs
jae
fildll
add
cs
push
xchg
inc
aam
addb
adc
or
sar
int3
or
js
testl
mov
popw
gs
idivb
xchg
xor
push
movsl
frndint
lahf
out
dec
ljmp
jmp
xor
call
or
mov
lds
int3
in
imulb
sub
inc
jbe
iret
push
xchg
lret
xchg
ror
test
inc
arpl
add
lea
and
insl
mov
xchg
aam
insb
movsl
repz
out
mov
sub
pop
push
mov
and
adc
clc
stc
lods
cli
push
lock
aas
xor
or
xchg
or
jae
or
inc
dec
insl
insl
loope
dec
pop
rcrl
imul
mov
inc
outsl
cli
mov
movsl
lret
xor
mov
es
in
mov
fbstp
das
in
mov
or
xor
loop
int
bswap
mov
mov
ss
leave
mov
sti
and
lods
call
dec
add
mov
fildll
js
sbb
sub
jo
jb
scas
imul
xchg
sbb
mov
popa
and
insb
div
int3
dec
and
xchg
ds
jb
or
dec
add
stos
pop
add
aas
mov
pushf
adc
cmp
cwtl
jl
jb
dec
xchg
jnp,pt
mov
xor
jmp
inc
outsl
and
out
mov
bound
clc
lods
repz
notb
or
sub
sub
out
bound
addr16
inc
in
adc
inc
add
fcoml
mov
pop
stos
push
aam
pop
pop
xlat
and
or
sahf
popl
orb
dec
movsb
shl
xor
test
inc
xor
sub
cli
jmp
jbe
jl
enter
add
icebp
sbb
xlat
icebp
aad
cmpsl
pop
dec
mov
enter
adc
xor
mov
xchg
and
mov
inc
out
es
or
jmp
std
push
cld
adc
sub
push
sub
mov
dec
cmpsb
adc
adc
and
pop
dec
xor
xchg
aaa
xlat
ljmp
inc
lahf
stos
xchg
clc
addr16
mov
inc
loopne
pop
leave
ret
adc
jne
mov
push
push
lea
cmp
into
cmp
repnz
gs
pop
imul
test
push
push
leave
push
mov
cmp
inc
fs
adc
js
sbb
sub
mov
dec
test
xchg
pop
sahf
dec
js
pop
jge
in
dec
push
dec
jne
cs
cmc
sub
inc
inc
jecxz
stc
repz
and
and
popa
push
cmp
sbb
sub
subb
nop
cmp
mov
sbb
mov
movsb
xchg
push
and
repnz
dec
repnz
dec
add
arpl
xchg
pushf
cmpsl
sbbl
pushf
gs
cmp
or
mov
pop
adc
mov
xor
or
push
es
adc
insl
cmovle
stos
int
aam
push
stc
sbb
adc
mov
add
fs
push
pop
fwait
insb
scas
jnp
popf
rcr
gs
cmp
test
xor
pop
fs
nop
mov
xor
jb
je
push
je
jo
or
or
scas
xor
sbb
mov
mov
cs
cmpsb
jmp
push
cmpsb
pop
das
pop
in
add
mov
jmp
jo
add
jnp
int3
sub
jmp
leave
cltd
push
test
adc
sarb
jl
sub
sbb
leave
push
movsb
jmp
repnz
gs
jb
jno
sbb
xchg
xchg
fcmovbe
jp
mov
js
xchg
cli
rcrl
dec
push
daa
mov
xor
pushl
lret
aaa
std
cmp
mov
ljmp
sub
ds
ja
mov
mov
es
sbb
cmp
leave
mov
push
outsb
fistpl
or
jmp
pop
adc
jle
sbb
inc
cmp
cmp
into
addb
fnstenv
pop
xchg
jo
and
les
lock
cli
or
ds
jne
push
fstps
ds
sub
test
pop
lcall
xor
in
fwait
arpl
cwtl
sub
mov
lods
and
sub
dec
lods
jecxz
mov
push
adc
push
mov
sarl
test
xchg
jnp
cmp
xor
orl
movsb
les
ja
js
clc
stos
aaa
sti
js
enter
gs
dec
test
add
popa
stos
inc
add
shrb
mov
mov
add
mov
cmc
jp
push
lods
and
sbb
je
xchg
mov
ret
jbe
xchg
xorb
xor
lods
pop
push
insb
mov
scas
mov
in
xor
mov
jnp
inc
xchg
mov
xor
mov
xchg
into
rcr
and
iret
call
imul
repz
dec
rcrl
rcll
cld
sbb
cs
cli
out
repz
mov
push
push
test
leave
cmp
vmovshdup
call
in
dec
push
inc
cltd
pop
inc
or
lods
call
sub
jns
push
ror
sti
lret
fs
add
adc
stos
xor
mov
push
pusha
dec
push
scas
xchg
sbb
aam
ret
sbb
sbb
mov
test
repnz
fs
inc
out
subb
inc
mov
icebp
or
lods
stos
leave
out
imul
sub
lcall
or
mulb
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
sbb
mov
jp
add
jp
push
movsl
adc
or
xchg
sbb
sahf
or
cmp
bound
test
sti
dec
sub
into
mov
aad
jns
hlt
push
imul
mov
lods
outsl
inc
pop
fistpl
push
aad
jle
sbb
iret
fisubrs
es
fcmovb
xchg
dec
popl
outsb
jno
pop
stos
xchg
mov
pop
imul
icebp
iret
es
dec
mul
add
shrb
cld
pop
inc
sub
outsl
cmp
mov
scas
adc
mov
dec
gs
mov
fbstp
inc
test
fdivs
sbb
xor
cmp
fwait
xor
cmp
inc
lods
adc
cmp
or
push
or
subl
mov
add
in
hlt
push
rorb
or
sbb
mov
scas
aad
xor
incl
mov
adc
mov
cmpsb
push
in
lcall
loopne
je
cmp
mov
nop
in
xor
pop
lds
scas
adc
js
mov
imul
divl
mov
cli
mov
iret
dec
movsb
inc
inc
adc
les
fidivl
sbb
inc
sub
sbb
popa
xchg
aam
dec
jb
fs
xchg
xchg
add
sub
aad
movl
testl
xor
mov
xlat
arpl
dec
and
nop
xor
push
pop
add
outsl
xor
jecxz
or
adc
mov
icebp
pop
sbb
jmp
xlat
sbb
or
loop
rcrb
mov
xchg
xchg
cli
addr16
inc
push
and
fidivl
orl
inc
mov
loope
mov
inc
addr16
sbb
add
bound
cmp
movsl
mov
sti
jns
sub
add
scas
in
aas
pop
mov
scas
inc
pop
pop
movsl
clc
cmp
or
jmp
adc
mov
ret
mov
outsl
mov
dec
cmpl
push
mov
push
call
jne
adc
ds
insb
fcoml
mov
dec
jns
jle
mov
sbb
adc
cmp
shl
das
fistpl
pop
and
mov
sbb
test
andl
cmp
sarl
mov
lcall
aaa
in
xchg
jno
fs
mov
xor
sub
push
mov
jae,pt
jg
retw
cmp
leave
sub
push
cmp
shrb
insb
aam
push
orb
mov
add
sbb
icebp
mul
jg
push
jb
cmp
mov
sysret
mov
add
and
fimuls
pop
leave
add
adc
aad
flds
xchg
push
jg
inc
es
movd
mov
js
int
inc
jmp
pop
and
sub
into
mov
addr16
fldl
jnp
mov
daa
and
inc
js
insb
pop
push
je
pushf
aam
in
dec
mov
cld
in
and
fldcw
add
adc
enter
add
adc
std
push
shlb
cmp
inc
pop
cli
push
cmp
push
xchg
mov
dec
mov
add
jbe
lret
mov
mov
push
les
jmp
fimuls
add
sbb
push
sbb
xchg
mov
mov
clc
loopne
repnz
push
mov
dec
cmp
push
fcompl
loope
adc
prefetcht0
pop
inc
sbb
aam
jns
xor
jnp
add
ret
subb
push
or
test
cmp
sbb
fsubl
std
cmp
jg
mov
sbbb
mov
outsb
sub
movsb
pop
pusha
js
xlat
popf
out
xchg
mov
ljmp
mov
and
sub
cwtl
mov
addr16
jecxz
push
sti
sti
inc
mov
pop
xchg
push
jmp
repz
mov
divl
and
push
jp
int3
jle
repz
rol
aas
jbe
xchg
mov
adc
cmp
push
negb
addr16
movsl
or
popa
sarl
and
sahf
push
cmp
sub
notl
popl
sub
mov
and
or
push
out
jns
jnp
mov
shrb
and
inc
mov
jmp
hlt
cmpsl
cmp
dec
dec
inc
xchg
or
jle,pt
fisubl
sbb
and
xchg
pop
aas
xor
into
ficoml
movsb
mov
xchg
stos
out
jb,pt
jne
in
test
jg
bound
inc
pop
adc
push
add
pushf
cmpsb
pop
lahf
xor
addl
jmp
hlt
loope
push
out
out
test
repnz
gs
test
and
sub
les
inc
inc
ja
sub
dec
loopne
xor
cmp
scas
mov
xchg
xor
xlat
cltd
sub
dec
jmp
pop
nop
add
mov
insb
lea
jns
in
mov
je
hlt
movsb
dec
xchg
cmpxchg
sahf
jecxz
inc
push
pop
mov
sbb
jbe
or
mov
mov
ljmp
movsb
scas
fwait
popa
jp
adc
mov
test
add
adc
adc
or
daa
adc
sbb
pop
pusha
sbb
and
add
sub
repz
push
das
push
movsbl
sbb
mov
pop
pop
mov
and
pop
or
mov
mov
imul
test
jle
sahf
sub
push
sbb
sarl
adc
mov
je
lret
and
out
xor
imul
mov
jne
js,pn
cmp
outsb
mov
sub
cli
lret
sub
dec
shll
xchg
inc
mov
push
mov
jbe
pop
les
rcrl
sbb
rorb
dec
test
sub
push
call
jns
ljmp
movsl
mov
and
mov
xchg
daa
and
loop
sub
cs
popa
or
stos
push
jne
scas
cwtl
cli
std
sbb
imul
lret
inc
sti
jo
das
mov
add
push
int
mov
clc
lods
rcrl
cmp
movaps
jns
dec
aad
pusha
cwtl
sub
xchg
popf
sub
push
rcrl
out
inc
mov
or
xchg
jnp
rorb
and
xchg
outsb
jl
xor
and
loopne
add
push
inc
xor
lcall
in
push
lds
xor
inc
dec
je
cs
mov
pop
sbb
addb
sahf
and
sbb
data16
jbe
push
inc
xor
pushf
ds
fsubrl
fldcw
pop
push
outsl
adc
mull
sbb
xchg
fdivrl
cmp
clc
inc
fisubl
add
push
addr16
icebp
insb
loopne
add
xlat
or
jbe
pop
fdivrs
lds
mov
aas
lea
test
lahf
mov
aad
orb
stos
jmp
in
cli
adc
xchg
shl
dec
roll
cmpsl
xchg
addl
gs
inc
inc
pop
lahf
jne
outsl
xchg
loop
notl
xchg
data16
cmpsl
outsb
inc
test
add
or
repnz
aad
nop
and
iret
mov
mov
cli
adc
xor
cmpb
cmp
shll
pusha
js
fildl
xchg
sub
mov
hlt
loope
push
pop
scas
repnz
mov
sbb
ret
movsb
mov
popa
dec
rcl
popa
and
movsl
fwait
mov
lret
xchg
js
out
stos
inc
js
jne
mov
cltd
mov
mov
add
push
into
adc
stc
movsl
push
repz
scas
mov
ret
mov
xor
repnz
jno
shrb
sub
cmp
and
jmp
cmp
mov
andb
lds
push
xchg
int
test
jae
jnp
jae
push
in
push
in
cmpsl
int
mov
cmp
loop
out
xchg
scas
and
pop
ja
xor
test
sbb
jl
push
inc
xorl
cmp
sub
sbb
cmp
jb
popa
sub
sub
pusha
and
int
push
movsb
inc
popf
pop
mov
push
pop
jle
fadds
lcall
fisttpl
js
fbstp
test
push
repnz
jmp
and
xor
jl
sbb
fdivrl
arpl
xchg
shll
int
xchg
jle
jmp
pop
fstl
cmp
movsb
and
jle
sub
mov
sub
std
adc
repz
nopl
inc
inc
icebp
test
mov
movsl
jecxz
sbb
or
call
call
adc
push
mov
imul
mov
lret
jp
addl
orl
mov
xor
leave
fcompl
into
pop
sbb
xor
sbb
sbb
nop
dec
aam
mov
dec
lcall
push
fisttpl
dec
mov
cmpsl
nop
add
sbbl
push
pop
inc
add
outsl
push
sar
aaa
cwtl
lret
cmp
fistl
xchg
sahf
rorl
and
loope
jae
xchg
mov
in
push
sub
inc
pushf
sbb
jb
into
mov
fidivrl
sub
sbb
adc
cwtl
push
imul
xchg
daa
or
addr16
xor
xor
xor
subl
cmp
push
insl
add
jl
mov
ret
jmp
and
dec
xor
out
mov
mov
and
je
leave
xlat
lret
jne
dec
add
out
mov
into
mov
das
sahf
cmpsl
adc
dec
stos
pop
push
xor
dec
pop
dec
test
lcall
mov
xor
mov
inc
lods
inc
fwait
sub
ljmp
nop
jnp
dec
cmp
imul
dec
pusha
pop
mov
pop
mov
push
dec
ss
popf
jg
cmpsl
dec
les
mov
bound
rolb
orb
xchg
test
xor
mov
sbb
pop
mov
or
xchg
dec
movsb
push
push
dec
loopne
and
popf
repz
lcall
in
call
lods
pop
push
mov
pop
xchg
sbb
jg
js
lret
jae
push
and
and
inc
jae
test
lods
xchg
mov
add
inc
out
adc
jbe
clc
or
in
cmpsl
pop
xchg
xchg
cmp
mov
sbb
fdivrs
inc
fcmovu
inc
fldt
jge
aam
xchg
sti
adcb
mov
inc
test
repnz
test
test
push
pop
sub
cltd
outsl
push
sub
inc
dec
push
push
cltd
mov
or
xchg
mov
sub
insl
cmp
sahf
or
cmp
ret
aas
sub
inc
adc
jle
or
xchg
add
xchg
rcl
ja
out
and
gs
mov
jmp
inc
fs
je
jge
lea
aas
mov
mov
mov
pop
rorl
imul
push
nop
test
xor
push
fidivrs
mov
loop
pushf
loopne
sarb
loopne
xchg
bound
cwtl
pop
push
jle
and
xor
ds
movsb
je
pop
lock
lret
sub
dec
rorl
mov
xor
xchg
jnp
loope
ss
or
xchg
mov
xchg
push
cmc
pushf
popa
mov
pop
loop
addl
push
sub
imul
xor
jbe
mov
mov
fbld
cli
lods
jp
in
sbb
shll
adc
test
loopne
sti
jl
shrl
test
mov
cmp
push
mov
or
clc
lcall
rolb
cmp
cmp
mov
test
jge
out
imul
fistpl
mov
xorb
inc
enter
pop
cmpsl
mov
push
ss
and
xchg
roll
sbb
mov
jnp
xor
or
stc
pop
push
cmpsb
push
mov
mov
addl
fstpl
cmpsl
lcall
inc
mov
ret
inc
xchg
push
jge
xlat
sub
or
mull
push
mov
inc
jp
or
lahf
out
movsb
movsb
lds
sbb
fwait
mov
shll
shrl
cwtl
push
ja
scas
inc
test
imul
jno
push
stos
das
sub
movsb
test
repnz
pop
mul
inc
inc
ffreep
mov
xchg
movsb
pusha
test
or
mov
push
adc
sar
aad
loope
and
subb
stos
mov
add
arpl
cmp
add
xchg
push
inc
insb
jp
in
aam
andb
rcrb
adc
add
mov
pop
std
call
test
lcall
ss
cld
adc
dec
or
jle
jge
sub
in
push
js
outsl
in
outsl
add
hlt
xchg
lahf
pop
jle
loopne
dec
adc
and
pop
fbld
adc
rclb
repnz
rcrb
cld
pushf
cs
and
fistl
pop
rcll
hlt
imul
xor
or
or
push
jg
dec
lods
and
xchg
jmp
pop
push
aam
enter
sbb
repz
pop
hlt
aam
sub
out
or
push
sbb
or
scas
jmp
mov
pop
mov
je
add
xchg
sub
jge
push
neg
lret
jmp
lds
pop
pop
ljmp
jl
insb
and
nop
cwtl
cmp
stos
push
inc
test
adc
fists
dec
sti
or
mov
xchg
add
clc
scas
xor
jmp
inc
or
dec
or
sub
adc
pop
lods
shlb
cmp
xchg
xor
test
adc
mov
inc
and
xchg
jno
int3
xchg
bound
mov
mov
and
mov
aam
stc
sub
movsl
jbe
dec
cmp
sub
mov
pop
nop
jns
add
mov
mov
or
hlt
pop
dec
mov
inc
test
call
andb
push
adc
dec
icebp
lcall
inc
out
rclb
mov
lds
js
shlb
fsts
push
adc
scas
mov
sub
in
repnz
push
sahf
sti
fs
imul
addr16
inc
ret
in
jnp
jnp
sub
enter
cmpb
lret
xorl
into
inc
mov
or
dec
clc
mov
mov
mov
loopne
jnp
jns
adc
imul
loop
add
cwtl
sbb
sbb
jecxz
mov
add
push
imull
adc
cmpsb
lods
int
jns
adc
lea
rorl
pop
hlt
test
pushf
lret
adc
xchg
int3
and
xchg
xchg
into
es
lcall
es
hlt
inc
std
dec
adc
test
inc
xor
pop
jmp
inc
iret
call
lock
aad
xchg
nop
mov
jns
sbb
ljmp
mov
stos
sbb
cmp
cmp
sbb
out
inc
inc
in
push
mov
mov
insl
jns
fs
pop
popa
xchg
aas
sub
add
dec
rcrl
adc
lods
pop
mov
sar
xor
lret
adc
lahf
jne
push
xchg
mov
jae
jg
xchg
sbb
jne
rcr
loopne
push
xchg
xor
mov
repnz
lock
loop
jb
lret
add
sub
inc
stc
mov
add
int3
mov
pop
sub
or
push
outsb
nop
jmp
cmp
xchg
pmaxsw
cmp
and
jo
inc
mov
idivb
aas
cmpsb
and
sbb
xchg
adc
adc
std
mov
lea
lea
hlt
lods
lret
call
ds
jns
sbb
mov
push
out
jg
push
pop
jb
imul
mov
mov
or
outsb
stos
into
sahf
pop
adc
or
repnz
adc
push
int
pop
pop
fwait
or
push
negb
ds
test
cmp
out
insl
cmp
shlb
xchg
lret
mov
test
inc
or
pushf
nop
xchg
lret
ljmp
or
jp
and
mov
sub
movsl
and
scas
out
cmp
push
movsb
loope
or
shrl
in
subl
mov
lret
shll
jnp
pop
xchg
or
ljmp
add
dec
cwtl
adc
xor
in
movsb
pop
outsl
adc
push
mov
std
mov
mov
xchg
imul
nop
mov
xchg
addl
nop
inc
or
fdivrs
fstps
jo
test
inc
push
test
pop
xchg
xchg
mov
xor
and
test
xchg
rorl
js
jo
cltd
ds
shlb
cwtl
sbb
arpl
xchg
or
pop
aas
out
fld
xor
pusha
inc
inc
clc
mov
sub
rolb
mov
cmp
adc
cmp
incb
xchg
scas
jo
iret
in
inc
sub
jp
das
filds
sbbb
sbb
cmpsb
adc
pop
outsb
mov
rcrb
pop
pop
movl
and
dec
jp
xor
cmc
inc
push
mov
xlat
jo
stos
stos
or
mov
jns
cmp
pop
repz
xchg
xchg
mov
xor
in
add
mov
cmp
orl
sbb
arpl
xor
scas
fildl
fisttps
jg
mov
mov
and
pop
adc
dec
cmpsb
or
movsl
mov
in
mov
xor
cmp
ret
jbe
pop
in
sub
sarb
daa
das
mov
fsts
movsb
faddl
addl
xor
in
and
inc
aaa
ss
in
add
or
and
data16
lahf
pop
jb
pop
mov
adc
jne
pop
sbb
add
and
jle
int3
push
es
mov
jmp
mov
or
pop
movsl
xchg
clc
daa
test
xorl
test
lret
test
jmp
adc
icebp
xchg
fnstenv
outsb
les
push
fildll
mov
data16
jbe
imul
test
and
aas
mov
jno
mov
pop
into
add
lods
pop
xchg
or
jo
fidivrs
pushf
mov
aaa
adc
pop
mov
jo
inc
mov
xor
push
jl
ljmp
jle
cmovne
or
stos
adc
add
mov
outsl
sub
mov
and
pop
pop
shrl
jl
inc
mov
pop
mov
push
mov
cmp
stos
adc
lahf
jecxz
or
lds
and
add
mov
out
sahf
pop
xor
test
and
lea
adc
adc
imul
add
rcl
mov
pop
data16
subl
cmp
sub
int
xor
aaa
jl
jns
lret
insb
pushf
xor
inc
mov
lock
sub
mov
loopne
ja
and
cmp
and
inc
dec
push
push
xor
cmp
les
dec
insb
jns
mov
mov
or
jae
nop
sarb
sbb
add
in
lcall
fptan
fisttpl
jg,pn
push
enter
and
mov
or
mov
push
push
stos
push
lea
daa
adc
dec
mov
pop
mov
dec
fdivrl
mov
ljmp
ficomps
addr16
in
popf
sbb
mov
in
cltd
xchg
pop
xor
fisttpl
push
std
dec
test
lock
icebp
fimull
scas
inc
dec
sahf
mov
jbe
je
jge
fsubl
add
xor
adcl
sbb
push
movsb
and
mov
push
iret
dec
ret
std
addl
js
xchg
arpl
das
out
ret
mov
fs
or
loop
jge
mov
inc
inc
sub
or
jne
jmp
xor
sub
or
sarb
sbb
les
ret
popl
xor
das
testb
xor
mov
shl
imul
pop
sbb
inc
sbb
pop
addl
negb
adc
int3
push
dec
aas
mov
jno
jae
inc
cmpsl
in
and
cltd
rolb
sub
mov
addl
int
sbb
sbb
in
ss
adc
pop
mov
dec
fwait
scas
push
movsb
mov
add
icebp
pop
mov
jg
pusha
sbb
cmpsb
ret
andl
test
pop
fisubrl
or
leave
js
mov
or
addl
sbb
pop
std
hlt
lret
mov
mov
in
xchg
cld
add
mov
lock
out
pusha
sbb
xchg
imul
in
lods
push
cld
jge
dec
adc
das
jns
mov
hlt
movsb
andb
pop
dec
fld
mov
in
fdivp
xor
pop
fisubs
mov
lods
jl
mov
mov
inc
add
lods
in
test
mov
lahf
jmp
inc
cmp
pop
add
dec
xor
sub
push
mov
fisttpll
sarb
je
push
hlt
shl
fisubl
dec
nop
inc
fisubrl
mov
mov
mov
push
push
arpl
das
or
repnz
popa
rcll
lods
cmpsl
pop
push
jnp
add
pusha
fisttpll
and
shll
xchg
and
push
cmp
sub
enter
and
pushf
sti
shr
out
xor
dec
mov
dec
sbb
pop
push
push
mov
scas
nop
adcb
test
or
jae
push
xor
in
xor
or
pop
mov
icebp
int
ja
andl
repnz
loope
adc
inc
xchg
sub
out
addb
lods
mov
dec
pop
mov
push
adc
cmp
jbe
mov
xchg
pop
dec
or
loope
cmpb
add
repz
push
xor
cmpsb
xchg
jg
xchg
scas
xchg
in
dec
es
ljmp
mov
push
nop
ret
nop
les
js
adc
or
xor
fcmovnbe
ljmp
addl
mov
cmp
push
test
scas
jl
testb
pop
and
movsb
out
pop
std
scas
xor
stos
sbb
inc
inc
push
clc
enter
testb
mov
test
aad
cmp
fnstsw
jmp
mov
push
sti
jne
aad
scas
out
mov
push
mov
insb
push
adc
sbb
cmpsl
popa
mov
cmp
pusha
out
insl
pop
adc
pop
cmpsl
fnstsw
outsb
fnstenv
add
or
xor
push
adcb
add
cmc
in
cmpsb
loope
mov
lret
filds
jno
jae
test
inc
push
fistpll
adc
ja
in
mov
add
pop
int
lds
xchg
data16
mov
add
add
mov
pushf
xor
jnp
lcall
push
pop
cwtl
rcll
xchg
pop
gs
ja
sbb
call
addl
cmpsb
fistpl
fsubl
pop
out
sub
ja
add
xchg
xchg
adc
movsb
gs
enter
adc
inc
and
xor
cmp
outsb
xor
xchg
or
lea
xchg
les
insb
pop
incb
cmpsb
test
cmp
mov
popf
or
xchg
or
scas
jmp
test
xor
mov
jp
and
cmp
pop
clc
ja
cli
dec
call
lret
adc
push
rclb
jno
fdivrl
fwait
scas
mov
pop
xchg
in
adc
and
mov
pop
sti
bound
add
pushf
mov
js
sahf
outsl
pusha
in
incb
call
cltd
sbb
insl
mov
push
mov
or
test
xchg
les
and
stc
sbb
stos
stos
mov
pop
cld
add
pop
insl
test
mov
pop
sbb
cltd
out
sbb
in
mov
xor
add
adc
icebp
sub
jnp
xor
dec
lock
and
inc
mov
xchg
push
rolb
mov
xlat
pop
aaa
push
push
xchg
jae
aas
jb
pushf
sub
dec
mov
xchg
jbe
sbb
in
xchg
inc
mov
or
mov
cmpsl
sbb
dec
int3
push
popf
repz
fcompl
push
sub
pusha
repnz
mov
not
adc
pushf
mov
mov
jle
sbb
mov
cmpl
stos
loopne
lret
fldz
nop
xchg
push
lahf
jle
popa
push
add
cmp
in
imul
loopne
sbb
dec
les
iret
cld
lds
add
xor
nop
add
jb
adc
xor
cmpsl
pop
jno
dec
or
insl
scas
ror
test
out
and
aas
enter
test
aas
sbb
movsl
test
into
scas
in
call
icebp
inc
mov
insl
and
cmp
xchg
cmp
sub
ss
mov
std
push
fistl
mov
inc
lret
push
mov
out
adc
testb
addl
cmpsb
mov
out
mov
arpl
fmull
cmc
mov
inc
mov
inc
lods
aaa
sub
cmp
lds
add
mov
outsb
inc
xchg
xor
cwtl
xchg
cmp
fcompl
ss
push
mov
sub
sti
rolb
int3
sbb
repz
jne
ljmp
fwait
pop
jnp
cwtl
sti
and
popf
mov
ds
mov
xor
mov
aam
and
mov
insl
lea
jp
sbb
inc
xchg
aaa
xchg
lds
arpl
rorb
cmp
daa
sub
shlb
push
sub
outsl
mov
jle
mov
jbe
shrl
mov
jl
andl
shlb
decb
xchg
jae
sbb
mov
add
jmp
sub
add
push
std
pop
adc
lcall
mov
sub
add
xor
xor
in
les
in
outsb
xor
repnz
sbb
sub
jns
cmpsb
push
and
stos
es
xchg
mov
mov
pop
push
insb
in
mov
sub
inc
xchg
xlat
mov
xchg
xorl
ja
sbb
negl
sti
push
or
int3
or
jb
adc
lahf
loop
aas
aam
int
lock
lock
mov
int
sbb
fldcw
fldt
outsl
mov
sub
mov
push
xlat
pop
fsubr
cmc
gs
pop
aam
iret
call
mov
cmp
push
push
pop
cmpsl
jbe
ret
push
inc
dec
lcall
insl
jae
xchg
cmpsl
aad
lds
or
nop
out
fucom
cltd
stc
pop
push
sahf
sbb
or
dec
add
or
cmp
and
cmp
lea
bound
cmc
hlt
fdivrl
enter
lds
pusha
loopne
sub
in
fisttps
add
inc
movsb
cmp
lods
gs
dec
push
insl
lcall
icebp
dec
sti
jbe
push
cmp
and
mov
pop
xchg
adcl
mov
sub
mov
pop
loopne
scas
mov
cltd
mov
mov
cmp
int3
pushf
mov
inc
mov
add
cli
push
andb
clc
cmp
nop
cmpsb
loopne
bound
jge
call
shlb
popf
stc
arpl
out
or
outsl
jp
repnz
fisubrs
push
mov
sbb
shl
pop
pop
cli
xchg
push
mov
mov
ret
rcrl
test
or
push
ja
inc
jnp
js
movsb
mov
shlb
pop
xorl
cli
dec
aam
dec
insl
and
pop
dec
imul
fwait
push
adc
daa
lret
xor
push
sub
cmpb
cs
lock
ret
out
leave
leave
jp
fildl
or
push
push
dec
pop
add
jae
mov
xchg
pop
mov
aam
push
repnz
push
cmc
and
xorl
cmpsb
lret
cmp
and
jbe
xchg
in
aad
or
negb
sbb
ljmp
cmp
sub
loopne
mov
lahf
and
jle
pusha
push
rorb
outsb
ficomps
pushf
and
dec
out
call
jg
stos
stc
test
sbb
push
test
aaa
ds
cmp
shrb
pop
ret
fisubrl
and
mov
nop
fidivrl
jns
cmpb
lods
aam
aam
jo
gs
ficomps
ss
xchg
pop
xchg
mov
imul
cmc
andl
cmpsl
sbb
push
adc
pop
and
mov
leave
je
and
dec
jle
sub
ret
test
push
add
mov
jge
sbb
in
mov
pop
add
xor
mov
sahf
mov
lods
or
sti
add
repnz
stos
ret
sub
inc
cmp
sbb
sub
or
fbstp
out
cmpsb
ret
xchg
mov
dec
inc
punpckhbw
mov
inc
shrb
arpl
loope
pop
outsb
in
in
imul
dec
popf
rcrl
jns
int
jge
lcall
mov
ljmp
int3
push
xchg
inc
rorl
mov
dec
test
shll
cli
adc
aam
jecxz
sub
xlat
loope
cltd
jb
out
cmpsl
jg
pop
sub
outsl
jae
jge
stos
mov
sub
pop
push
cmp
into
sarl
lret
loope
cli
mov
xchg
mov
sub
rorl
xchg
add
shl
popf
ret
add
push
mov
ljmp
rorl
cs
and
jne
imull
xor
out
or
jle
shlb
movsl
sbb
loop
jecxz
cmpsb
pop
adc
enter
ds
jne
sbbl
lea
flds
xchg
sbb
out
cmp
ret
pop
pushf
fcmovnu
mov
mov
cmc
daa
rcl
in
adc
lds
pop
in
xor
mov
imull
mov
or
jle
and
icebp
jle
movsb
test
rcrb
xor
jae
sbb
loop
int
xor
lea
and
jns
pop
sbb
mov
mov
or
mov
ja
pop
xor
fwait
jp
add
fnstcw
mov
add
add
cmp
mov
push
adc
jb
xor
fisttpll
jg
loopne
push
rcrb
loop
xchg
sub
fwait
clc
call
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
and
mov
add
jp
jg
movsl
pushf
jg
hlt
lret
dec
or
mov
mov
mov
mov
add
aas
rcr
repnz
xchg
sbb
mov
lods
pop
aad
scas
xchg
sub
inc
jo
xor
dec
sbbl
rorl
cli
cmp
mov
sarl
sub
xchg
test
mov
xor
adc
push
aam
mov
call
sbbl
mov
mov
iret
popf
pop
dec
stos
jmp
adc
sub
mov
add
mov
lahf
ja
sub
mull
loop
sarb
push
and
cwtl
xchg
mov
jno
mov
aad
aam
sub
or
bound
cmp
in
adc
dec
jo
jp
lret
imul
pushf
cmp
movsb
loop
ss
scas
push
pop
sbb
adc
mov
inc
push
scas
mov
jno
add
loop
outsb
jge
xchg
lock
arpl
mov
subb
movsl
or
jbe
shrb
cs
xor
fldt
scas
test
mov
repz
mov
inc
das
mov
ds
sbb
in
pop
mov
push
loop
push
outsl
or
loope
and
push
stos
andb
jb
arpl
fld
inc
xchg
lret
pop
sbb
arpl
stc
mov
scas
inc
dec
stc
add
roll
cld
orl
ljmp
push
ja
das
gs
mov
inc
outsb
pop
fs
or
mov
lods
ljmp
int
jge
jmp
jns
xor
out
xor
fsubl
adc
push
and
or
lret
fldt
int3
xchg
push
adc
dec
mov
movsb
nop
bsr
lods
adc
mov
mov
dec
xchg
sbb
jnp
aad
and
outsb
mov
int
push
out
lcall
or
mov
loope
scas
daa
sbb
xchg
inc
sbb
pop
lret
loope
sbb
jo
rcll
jmp
adcb
addr16
xchg
add
mov
aad
mov
xchg
inc
mov
movsl
test
xor
ret
mov
push
push
pop
stos
divb
leave
sarb
jle
push
add
movsl
dec
test
loopne
cmpsl
xor
pop
jg
push
mov
notl
mov
rorl
sbbb
lahf
std
iret
inc
js
cmp
cmp
idivl
les
xor
cmp
fmuls
xchg
or
jl
int3
jb
aas
xchg
das
xchg
xlat
jg
jo
stos
sbb
cmp
mov
addr16
mov
popf
cmc
inc
xor
pusha
jg
mov
rcrl
mov
dec
and
dec
jmp
jae
stos
mov
lcall
jg
ret
push
and
aas
lret
xchg
in
jns
mov
push
xor
add
xor
int3
fists
sub
or
inc
mov
mov
cmp
sub
ret
movl
mov
roll
or
xchg
popf
and
adc
jmp
mov
gs
mov
push
lea
pop
pushf
std
mov
add
pop
fists
inc
mov
sbb
xor
les
fiaddl
push
sub
and
imul
popf
clc
cmp
sahf
cmp
sub
mov
in
sbb
shl
bound
push
insl
dec
test
cs
and
dec
inc
sbb
push
mov
das
test
push
pop
fnsave
xor
out
das
clc
xchg
nop
movsb
test
clc
cmp
push
pop
inc
sub
loop
cmpsb
jg
sarl
push
or
ds
jmp
adc
push
scas
fisttpll
inc
xchg
aas
imul
inc
mov
int3
xor
add
rolb
jbe
lock
into
xor
xchg
mov
jg
mov
mov
mov
sub
and
outsb
inc
enter
movsl
cmp
cmp
loope
xchg
fsub
pop
outsl
insb
mov
sub
inc
sbb
insb
cmp
push
or
push
cmpsb
sti
lcall
cmc
sub
adc
sti
push
scas
add
jns
and
dec
enter
inc
xchg
pop
dec
into
scas
push
adc
sub
and
jo
in
gs
jle
bnd
mov
incb
pop
cmp
inc
test
repz
int3
mov
lods
notl
call
lcall
push
cmpsl
mov
push
test
inc
xor
outsb
idivb
xchg
xchg
or
inc
adc
adc
loop
mov
in
andb
ret
add
sarl
mov
loop
inc
push
outsl
push
enter
out
push
dec
inc
lcall
out
pop
sbb
push
adc
adc
add
nop
int
sahf
cmp
cmp
arpl
jecxz
mov
aad
cmp
push
lds
dec
arpl
jo
sbb
push
les
mov
adc
aad
or
inc
and
int3
pop
lcall
rolb
imul
fiadds
push
dec
mov
jl
sbb
ds
fadds
jns
sub
mov
rol
and
ret
add
adc
mov
aad
mov
mov
and
or
sbb
mov
or
lock
jno
fimull
pop
mov
andl
xlat
sbb
ds
push
sbb
sbb
movb
sub
outsl
xchg
sbb
xor
xor
mov
mov
in
xchg
sbb
dec
inc
jo
mov
add
gs
xchg
dec
mov
pop
pop
call
lods
inc
ret
dec
scas
aam
insb
jle
mov
scas
inc
js
repz
mov
xchg
jge
xor
iret
push
test
jnp
sbb
jecxz
ljmp
arpl
sub
pop
push
sbb
push
push
lret
jbe
dec
in
mov
mov
sbb
lods
testb
bound
cmp
jmp
popf
push
mov
ss
cmpsl
jae
cs
xchg
jbe
cmpsb
push
mov
push
das
cmp
cmpsl
shlb
in
jb
imul
xchg
and
and
fists
aam
jbe
xchg
sbb
lea
push
push
fildl
xor
jmp
xchg
call
inc
ss
xor
lock
push
dec
divl
data16
jge
and
add
xchg
xor
sub
push
and
mov
scas
mov
mov
andb
repz
jns
imul
and
sbb
cltd
sbb
popa
jmp
mov
pop
pop
push
aas
cmp
mov
adc
scas
jno
ds
mov
fcoms
mov
int3
inc
cmpsl
xor
mov
sti
popa
fadds
or
push
and
push
outsb
incl
mull
push
rcr
xchg
push
push
std
and
mov
ret
push
fdivs
in
dec
loope
sbb
xchg
sub
loop
fsub
scas
inc
test
xchg
arpl
xchg
inc
pop
gs
fwait
push
sarb
divl
jmp
dec
push
and
pop
jge
shrb
push
fidivs
sbb
xchg
cmpsl
and
sbb
lods
paddsw
fstpl
idivb
push
test
jp
lea
pop
inc
popf
stc
ljmp
loop
fs
int3
jbe
bnd
and
fnstsw
shll
adc
test
cmc
movb
movsl
in
sub
add
rorb
mov
dec
mov
test
repnz
and
ds
pop
rcll
lods
jns
mov
insb
ja
hlt
fidivs
mov
and
xor
add
loopne
mov
pusha
arpl
or
ss
ret
lods
loopne
pop
pop
push
push
mov
jg
subl
sub
ret
jge
loope
test
inc
pop
int
jo
sbb
mov
fnstsw
nop
jg
insb
cmc
or
cmp
xchg
pop
push
ljmp
addr16
and
add
das
jae
or
sub
xor
bound
mov
sbb
in
mov
je
imul
loop
cwtl
xlat
scas
lret
imul
mov
push
adc
jmp
fisubrs
shr
fwait
ja
pop
push
ljmp
enter
lea
jmp
push
sbb
xor
loope
repnz
jns
test
shrl
cmp
filds
fs
xor
inc
stos
dec
adc
mov
jne
lds
and
cmp
push
and
or
scas
mov
in
xchg
mov
cmp
ret
test
in
or
ja
xor
repnz
pop
jno
or
jp
xchg
cmp
lods
rcrb
scas
cmp
addr16
push
je
mov
pop
add
jae
add
ja
movsb
notl
push
pop
flds
lea
inc
jge
add
aas
bnd
mov
push
out
repnz
and
inc
jb
sub
xor
jge
aad
or
adc
sbb
testl
cld
push
jp
mov
sbb
push
pop
pop
lret
mov
in
fnstcw
push
lahf
sub
test
inc
push
sarb
inc
sbb
mov
sbb
ds
sbb
scas
scas
lods
cmpsl
xchg
and
mov
cmp
add
std
fs
sbb
sahf
in
or
xorl
or
pop
xlat
push
fidivrl
sub
cmp
stos
inc
das
pushf
stos
lock
sub
jmp
push
xchg
out
cmp
aas
or
fcom
lahf
bound
cld
in
imul
ds
push
push
enter
fdiv
ds
into
sub
mov
adc
shrb
jle
xchg
inc
mov
mov
jg
jmp
inc
repz
mov
cmp
leave
icebp
adc
pop
mov
jae
leave
xchg
cld
or
jno
mov
notb
push
pushf
inc
lea
mov
xchg
or
jmp
scas
jbe
sub
js
xchg
pop
aam
dec
bound
push
or
cmp
pop
insb
enter
dec
popf
jbe
mov
add
scas
pop
dec
test
xchg
sub
inc
pop
xchg
movsb
popa
adc
dec
stos
das
mov
jmp
push
das
fisubl
push
add
add
mov
jb
sahf
and
sub
out
sub
push
xor
lcall
ret
lea
out
dec
loopne
aam
aaa
outsl
gs
jmp
push
aad
fisttpll
mov
sbb
mov
sbb
or
mov
mov
dec
mov
outsl
xor
cld
pop
xor
jne
fstpt
add
jb
lock
sub
and
and
sbb
jecxz
sbb
and
push
lds
rep
outsb
inc
loopne
cmp
fistpll
add
and
push
or
in
pop
jo
repz
fcomps
nop
push
lods
jnp
inc
sbb
push
sub
icebp
cmp
lret
xchg
les
nop
mov
shlb
popf
out
sahf
insb
adc
pop
pop
and
test
mov
mov
cmp
dec
inc
xchg
cltd
gs
rcrl
data16
stc
inc
iret
adc
sbb
in
xchg
in
lcall
pop
xor
pop
mov
js
outsl
std
mov
lods
imul
mov
ljmp
xor
movsb
dec
mov
push
or
and
xchg
xchg
jo
dec
jmp
bound
in
xor
push
xchg
and
and
mulb
mov
xor
fs
scas
test
scas
push
mov
xor
jl
out
cmpsl
test
lcall
es
push
adc
in
clc
and
adc
sbb
hlt
popa
dec
test
jp
cmpsb
sahf
neg
scas
adc
int3
sub
xor
cld
or
fsubs
sbb
into
jb
mov
mov
insl
inc
iret
inc
outsb
addb
movsl
xorl
cmpsl
xor
jmp
add
mov
xlat
fistl
pop
into
hlt
cmp
sbb
imul
fstpt
sub
xchg
jae
dec
test
insb
lock
mov
aas
pop
pop
push
jne
fsubrl
xlat
cmpsl
addr16
imul
insl
imul
jge
and
faddl
shll
cmp
push
mov
ret
inc
insl
mov
fistpll
test
dec
les
stos
sub
pop
add
fmull
loope
xchg
aam
mov
aas
shl
dec
insl
scas
dec
sbb
mov
xor
add
loopne
iret
inc
lock
add
lret
push
loop
pushf
mov
jb
rorb
adc
jne
int3
add
sub
dec
or
rcrl
mov
mov
andl
outsb
lret
mov
sbb
test
pop
and
insl
xchg
xchg
cltd
es
sbb
leave
iret
jo
jge
ja
sbb
inc
lret
je
xsha1
cmpsb
mov
addr16
adc
sub
and
push
into
loope
jb
adc
popa
xchg
fs
cmpsb
mov
int
loopne
out
mov
aam
aas
cmpl
xchg
xchg
inc
ljmp
mov
mov
and
lods
cmp
mov
cmp
xor
lods
add
push
and
cmp
xchg
cmpsl
mov
adc
xchg
loop
popl
and
add
jp
outsl
mov
and
lcall
inc
in
dec
jg
dec
add
mov
int
add
pop
int3
pop
push
mov
mov
test
mov
icebp
cltd
sub
cli
hlt
enter
fs
or
mov
inc
shl
or
dec
cltd
inc
xlat
cmp
and
mov
retw
cmp
mov
fldcw
adc
shrl
shlb
mov
mov
notb
loope
insb
lods
dec
inc
clc
mov
ds
outsb
jmp
dec
js
mov
popa
jle
notb
testb
sub
sub
push
cli
shr
ja
mov
add
mov
adc
jge
dec
and
out
imul
gs
into
add
cltd
mov
sub
roll
shrb
cmp
repz
adc
decb
fs
in
sti
add
movsb
test
lds
in
popf
int
dec
xchg
cltd
xor
inc
jmp
adcl
pop
sub
stos
fistpll
lret
pop
cld
inc
loope
add
das
insb
fnsave
jo
ret
lods
inc
and
jo
enter
xchg
jg
repz
ja
jne
sbb
cmpsb
mov
push
pop
addl
cmp
cs
roll
mov
mov
ss
aad
fisttpl
je
pop
fcomp
or
mov
cmp
sbb
aaa
inc
stos
pop
icebp
mov
scas
dec
cmpsl
arpl
shl
push
xchg
xchg
inc
cld
cmp
leave
les
add
mov
mov
in
fcmovne
stos
pusha
lock
and
sub
mov
cwtl
int
loopne
dec
adc
mov
jmp
in
mov
pop
into
pop
xchg
pop
stos
add
push
and
and
dec
xchg
sbb
clc
push
jae
dec
pop
clc
lret
dec
xor
and
xchg
push
in
in
sbb
sbbl
cmp
push
push
push
movsl
mov
dec
ss
insb
inc
je
loop
mov
pop
mov
in
mov
xchg
movsl
push
dec
in
xchg
arpl
cld
or
fiadds
push
jge
pop
icebp
dec
daa
roll
cmp
dec
and
insb
mov
sbb
sub
sbb
push
repz
mov
aas
bound
push
jb
pop
lods
or
jmp
pusha
xor
sbb
pop
pushf
cmpsl
xor
addr16
bound
mov
aas
out
clc
mov
aam
repz
xchg
rorb
adc
nop
std
mov
rclb
cmp
shlb
into
dec
pushf
mov
repz
gs
mov
jne
mov
or
es
inc
cld
jle
and
jl
add
dec
out
and
mov
jl
or
lds
test
leave
add
sbb
bnd
dec
adc
test
cltd
shlb
push
push
xor
jne
fdiv
adc
sbb
push
fstl
icebp
rcrl
clc
push
fisubs
sbb
outsb
sub
dec
jae
jae
stos
and
push
shrl
orb
jno
mov
xchg
out
fimuls
fidivs
je
push
mov
orl
test
insl
das
repz
rol
adc
call
inc
cmp
mov
push
hlt
bound
stc
push
mov
stc
ds
addr16
pop
aad
mov
sub
andb
add
and
dec
cmpsl
mov
movsb
dec
in
cmp
push
sub
dec
fimull
out
mov
or
jno
addr16
rcrl
dec
loopne
fsub
scas
dec
lahf
aam
fstpt
mov
xchg
inc
jnp
adc
sub
repz
lock
fistl
and
mov
push
jecxz
xor
lock
jo
mov
lods
mov
popf
rclb
int3
mov
jmp
insb
mov
std
jg
jbe
push
add
mov
pop
loopne
sbb
lcall
data16
mov
xchg
sub
or
cmpsl
pop
stc
nop
cwtl
lret
fyl2x
repz
cs
cltd
cld
dec
call
jl
test
test
popa
cmp
or
lcall
lea
push
add
push
push
and
sbb
stos
mov
push
lds
scas
mov
in
das
xchg
lcall
or
loopne
scas
pop
rorl
mov
loope
pop
cmp
lods
add
cmp
idivb
mov
inc
or
xchg
sub
repnz
scas
mov
sbb
fs
mov
xchg
dec
cltd
inc
test
out
push
pop
mov
inc
push
xor
fdivrl
sub
add
lods
adc
arpl
cld
out
jb
sbb
sahf
mov
mov
std
jno
frstor
pop
lcall
cmp
scas
xor
adc
ljmp
scas
push
int
in
jno
pop
and
arpl
clc
adcb
sbb
mov
in
jle
sub
and
sub
mov
fst
std
pop
adc
data16
jne
push
xchg
xorb
shll
inc
inc
add
stos
mov
xor
and
adc
cmp
les
lcall
pop
clc
outsb
inc
cmc
sub
sbb
inc
dec
jmp
scas
les
pop
sbb
xor
aaa
adc
cld
nop
jmp
cld
outsl
aam
insb
jecxz
fcomps
dec
jmp
adc
jl
xor
xchg
xor
and
sbb
rcr
lock
out
dec
ja
xor
int3
ljmp
push
call
ja
pop
fmul
outsl
fildll
xor
hlt
xchg
add
adc
sub
jnp
cmp
arpl
mov
mov
mov
pop
lock
gs
mov
or
jp
xor
cmpsb
mov
ret
jo
inc
loopne
jae
addb
mov
daa
cmp
push
cmp
mov
mov
and
xchg
daa
data16
lahf
movsb
mov
out
mov
lea
mov
push
js
mov
hlt
push
add
mov
mov
pop
clc
hlt
fists
leave
jno
sbb
sbb
add
inc
and
jge
dec
xor
aas
adc
fnstcw
sub
jno
sub
dec
stos
subb
xor
mov
inc
xor
dec
imul
mov
jecxz
push
add
adc
movsl
mov
in
jmp
or
cs
pop
popf
and
ret
lret
push
jp
jae
sub
das
mov
outsb
mov
lock
inc
test
sbb
push
xchg
sub
sub
or
sbb
jl
inc
pop
or
cmp
xor
push
dec
daa
outsb
mov
xchg
cmp
and
push
rorb
adc
xchg
clc
lcall
test
roll
or
das
push
insb
pop
fiaddl
leave
imul
dec
fdivr
jle
popa
push
ror
mov
jmp
cmp
sbb
iret
jle
sbb
cmp
sub
xchg
outsb
cmp
mov
pop
jle
and
repz
add
mov
insl
cmpl
pop
ja
inc
aaa
cmp
xchg
lock
mov
inc
dec
and
adc
mov
jmp
sbb
fisttpl
mov
adc
pop
jecxz
lock
inc
adc
stos
inc
cmp
pop
mov
sti
xchg
adc
in
pop
shlb
mov
jns
stc
jecxz
xor
push
dec
inc
rcrl
push
pop
in
ret
hlt
or
leave
popa
and
fwait
scas
sbb
adc
jg
mov
jne
lahf
push
push
pop
shrl
rcrl
pop
lds
sbb
dec
ljmp
cltd
xor
adcb
mov
jo
arpl
int3
sub
xchg
out
jge
or
fistpl
outsl
enter
test
cmp
cmp
push
pop
or
pop
sub
mov
mov
pusha
xor
mov
test
imul
sub
jmp
das
inc
or
cld
iret
lds
cmpsb
adcb
test
rcrl
fs
xchg
mov
test
pop
adc
jnp
dec
adc
mov
outsl
xchg
adc
jb
jns
mov
xchg
cli
lret
arpl
mov
jg
mov
call
inc
xor
inc
movsb
std
xor
cltd
in
mov
idiv
mov
testb
mov
addr16
cmp
pushf
adc
xor
jbe
imul
jbe
clc
or
mov
xchg
rcr
imul
mov
iret
xor
out
and
sbb
pop
aam
and
or
popf
jmp
push
cmpsl
pop
aad
pop
push
push
sub
adc
pop
xchg
sahf
in
lods
jbe
and
push
mov
arpl
imul
shl
popf
pop
jnp
dec
cli
pusha
jb
push
dec
add
xchg
sbb
cli
mov
clc
sub
jecxz
test
mov
pop
ja
xor
out
pop
addl
test
jo
jg
xchg
push
adc
sbb
jne
je
cli
xor
dec
test
rolb
fidivl
push
fldenv
xor
pop
out
loopne
lahf
into
dec
sub
aad
or
xchg
les
arpl
arpl
pop
jns
pop
iret
mov
mov
sbb
adc
xorb
pusha
out
shlb
lds
sbb
pop
and
xchg
imul
add
mov
shrl
mov
test
rorl
xchg
cmc
xchg
sti
mov
mov
mov
shrl
out
adc
adc
imul
or
in
mov
lods
testl
out
and
xchg
add
filds
or
int
inc
push
jg
insb
scas
ret
sub
push
fcomps
or
sbb
fwait
hlt
pop
aas
fs
scas
popa
dec
nop
cmc
mov
movsb
lods
aam
mov
frstor
dec
or
cli
test
sub
test
mov
sahf
cld
or
cmp
aam
lds
ja
lock
and
adc
mov
js
inc
test
sub
dec
addl
out
push
leave
in
daa
testl
pop
sahf
xchg
bound
daa
cltd
int
testl
push
rclb
les
push
dec
cmp
cwtl
test
lock
pop
or
add
ret
int
xor
aas
shlb
fisubrl
xchg
xor
roll
int3
push
dec
dec
cs
and
xchg
lea
add
push
mov
outsb
dec
inc
repnz
xlat
mov
cmp
andb
xor
repnz
mov
clc
stos
das
ds
sbb
out
lock
jmp
popa
or
imulb
and
gs
test
dec
shr
shl
test
ljmp
pop
inc
or
ffreep
pushf
arpl
cmp
cmp
stc
das
test
sti
pop
enter
cltd
jl
mov
in
pop
lds
sub
jo
cwtl
mov
cmp
scas
cltd
fwait
sbb
dec
cld
int3
ss
insb
mov
xor
imulb
inc
shrl
cmp
out
mov
push
shll
jae
shl
inc
xor
es
mov
mov
leave
jmp
push
cmp
jmp
lea
daa
in
lahf
inc
mov
sbb
sub
adc
dec
test
nop
push
xor
sub
aam
test
jle
add
pop
dec
inc
jbe
xchg
cmp
insb
lods
out
rolb
cmp
iret
outsb
les
xor
repnz
test
inc
daa
dec
push
daa
xor
mov
pop
add
fists
lahf
jp
mov
add
push
scas
jmp
mov
dec
xchg
mov
daa
xor
mov
insb
loop
cmpsl
xor
sar
out
sub
ljmp
xchg
mov
es
arpl
sbb
cmpsl
xchg
outsb
scas
mov
xchg
cmp
fcomi
mov
stos
xchg
xor
jnp
xor
aam
lods
pop
cmp
inc
shrb
popf
xchg
lods
mov
pushw
mov
jl
ljmp
imul
and
mov
inc
mov
addr16
push
adc
xor
add
jp
dec
insb
pop
into
ret
cltd
or
inc
jle
push
in
outsb
daa
loope
js
inc
andb
pop
fsubl
xor
ja
inc
cwtl
into
imul
jge
hlt
inc
fwait
xor
xor
ret
xlat
cmp
aas
cmp
push
inc
fidivrl
ret
cmp
sbb
dec
fdivl
fnsave
jmp
add
and
add
bswap
xor
fucomip
sub
mov
cmp
jno
outsb
jl
xchg
dec
xchg
enter
mov
into
idivl
jno
call
mov
aas
cs
fdivr
bound
out
sbb
mov
aas
and
push
sar
xor
rorb
scas
inc
xorl
sahf
or
mov
std
dec
jecxz
xchg
jl
jb
pusha
sbb
pop
es
mov
ljmp
sub
adc
cmpsb
or
add
xor
inc
mov
pop
pop
adc
sbb
add
jnp
sbb
lods
adc
fdivp
out
mov
movsl
jb
mov
addl
in
pop
jmp
in
jns
repz
mov
popf
popa
and
ja
dec
fwait
and
dec
add
adc
xor
or
iret
lcall
sahf
iret
fwait
jecxz
add
adcl
ja
and
sub
div
pop
movsl
and
push
dec
insb
scas
shrb
sbb
lock
repnz
mov
pop
nop
int
ret
sbb
or
or
fisttpll
push
adcl
shrb
sti
shl
fst
mov
xchg
test
add
scas
popf
mov
movsb
pushl
push
jecxz
sub
sub
sub
out
loope
sub
push
fidivl
adc
jb
in
aam
pusha
and
dec
addl
cld
and
ror
cmp
test
ja
imul
outsl
xlat
push
test
clc
xlat
es
subb
add
paddd
sub
aas
sbb
sbb
je
icebp
hlt
adc
jno
dec
mov
test
popa
mov
xor
jno
icebp
dec
leave
cmp
xchg
or
rcrb
adc
add
rorl
adc
sub
popa
push
pushf
mov
data16
adc
cmc
adc
add
out
adc
fimull
pop
mov
dec
push
sarb
loope
fmul
ljmp
mov
test
pop
add
bound
push
subb
mov
cmp
mov
repz
mov
pusha
fnstsw
cmp
inc
dec
inc
mov
jno
xchg
popa
shll
rcr
push
ret
push
sbb
dec
movsl
repnz
out
dec
gs
popf
std
mov
xchg
call
je
or
pop
loope
add
adcb
mov
addr16
fbstp
cmpsb
inc
sbb
jmp
fwait
pop
sub
jae
out
movl
push
xchg
pop
sub
or
mov
loop
loop
dec
lret
pop
jge
adc
sub
xchg
faddl
int3
xor
or
andl
jae
arpl
aaa
test
inc
push
lods
dec
jno
insl
enter
and
outsl
cmpsl
test
iret
leave
or
js
mov
sub
mov
pop
bound
outsb
inc
loope
daa
pop
lods
mov
jae
pop
push
jns
popa
cmp
andl
movsl
icebp
add
rolb
lods
lret
mov
pop
movsl
stos
sub
data16
bound
add
icebp
xor
pop
push
adc
enter
adc
add
movsl
adc
addr16
mov
push
vpsadbw
insl
repz
stos
mov
and
cmpsl
push
arpl
inc
pop
fnstenv
mov
rcrl
mov
jmp
and
xorb
mov
pusha
and
xor
aam
movsl
in
xor
lods
xchg
inc
ret
addb
test
dec
cmp
mov
adc
imul
xchg
sarb
adc
and
pop
add
mov
cmp
insl
lods
fwait
sub
pop
out
ret
mov
fildll
push
cs
push
mov
leave
sub
or
and
sbb
pop
ds
rol
add
leave
movswl
insl
push
lret
push
mov
repz
push
dec
sbb
mov
sbb
xor
aad
mov
aam
fisubrl
stc
lret
add
lock
mov
aaa
fadds
nop
out
pop
jl
pop
jns
jnp
adc
scas
fdivs
orl
stos
insl
sbb
adc
jne
mov
jbe
rclb
fisubl
push
and
add
jge
and
jp
mov
or
push
xor
xchg
pop
mov
xor
nop
pop
int
pop
lret
mov
pop
dec
dec
jne
push
mov
in
dec
cs
pop
xchg
out
leave
pushf
dec
cmp
mov
and
rorb
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
mov
sub
jp
pop
jp
outsb
adc
in
jmp
subb
int3
jle
je
mov
addb
ljmp
fwait
movl
out
xchg
negl
std
or
mov
pop
mov
or
pop
ljmp
ret
lods
jp
jns
inc
lahf
pop
icebp
sarl
jg
xchg
pusha
dec
adc
and
mov
ss
lahf
push
in
push
fs
mov
push
xchg
push
daa
pop
inc
sbbb
in
sub
popa
jle
test
punpcklbw
je
fnstenv
lret
idivb
push
mov
lds
jl
push
in
inc
or
dec
push
cmp
out
and
dec
fisttpl
xor
and
mov
in
mov
cmp
enter
movsl
orb
push
aas
jl
sub
jle
loop
sti
test
sbb
adc
leave
jecxz
push
clc
shrl
mov
mov
mov
xchg
outsl
adc
dec
insl
dec
push
int3
subb
mov
push
xchg
rolb
xorl
dec
out
jp
push
popa
push
and
sub
rcll
mov
ljmp
xchg
in
nop
inc
int
ret
js
and
enter
mov
cltd
mov
and
ljmp
jecxz
ret
sarb
iret
pop
stos
test
cwtl
add
mov
rolb
add
mov
inc
mov
loope
cmpsb
or
inc
bound
mov
mov
mov
pop
add
movsb
repnz
iret
cmp
add
cwtl
sahf
sub
sbb
or
daa
sbb
pop
outsb
jl
call
add
jo
popf
jecxz
test
lds
adc
cmpsl
notl
pop
lret
add
repnz
fwait
adc
xor
or
mov
inc
inc
fstpt
rcr
xchg
test
sbb
fdivl
rol
add
sti
cmp
lods
repz
mov
mov
mov
adc
es
xchg
sbb
inc
mulb
and
jns
mov
lods
imul
js
in
dec
mov
cwtl
out
xchg
inc
fdivs
cmp
xchg
shr
add
outsl
mov
cwtl
daa
outsl
imul
pop
movl
push
lcall
les
in
repz
arpl
js
mov
insb
aad
sub
xchg
xchg
sahf
fidivl
mov
outsb
inc
mov
xlat
push
ret
movsb
imul
push
or
int
enter
mov
mov
imul
rep
adc
lods
movsl
jbe
adc
in
inc
data16
adc
adc
push
adc
pop
cld
and
clc
rep
lahf
addb
jmp
aaa
jae
mov
aam
aam
std
sub
pop
and
ret
dec
and
pop
arpl
fsubs
mov
jnp
and
dec
and
mov
out
mov
gs
cmp
stc
std
dec
repz
lea
sbb
dec
js
in
stc
je
jae
jae
imul
fistpll
jg
imul
js
cmc
cmp
dec
dec
cwtl
fsubrl
pop
gs
or
ds
cmc
mov
pop
jns
jb
adc
dec
mov
push
add
mov
movsb
mov
push
out
sahf
mov
lret
dec
sub
xchg
dec
shl
dec
sbb
mov
cs
dec
shl
add
inc
mov
insl
nop
pop
xor
data16
popf
pop
jge
dec
sbb
aas
ficompl
repnz
sbb
test
mov
dec
mov
and
push
ss
scas
dec
push
inc
push
fcoms
in
or
or
jmp
mov
mov
mov
mov
mov
scas
lret
lods
push
xchg
pop
sub
xchg
mov
flds
outsb
pop
dec
xchg
xorb
adc
mov
mov
shll
push
sub
repz
xor
sbb
out
mov
adc
sub
fildll
mov
dec
jnp
lcall
push
inc
stc
repz
sbb
imull
xor
dec
addb
xchg
cmp
xchg
cwtl
fdivs
dec
es
jle
dec
mov
ret
in
ucomiss
mov
cs
jno
jb
fisubs
mov
jmp
push
push
mov
repz
outsb
mov
jmp
sbb
pop
hlt
xchg
iret
test
cmp
in
xchg
mov
call
pop
jg
sahf
and
sbb
push
aad
call
pusha
mov
push
jmp
lret
popa
mov
pop
mov
inc
pop
pop
xchg
pop
push
aaa
inc
lods
jg
pop
popa
pop
mov
notb
std
pusha
fisttpl
lahf
mov
sahf
leave
jne
add
cmp
xchg
cwtl
cvtpi2ps
shlb
dec
mov
ljmp
fldt
fidivl
xchg
pop
mov
mov
push
jecxz
mov
fsubrl
xchg
xor
hlt
stos
test
adc
push
pop
inc
test
hlt
dec
dec
pop
lcall
fldenv
push
mov
repnz
imul
orl
jmp
lret
or
addl
fcoms
sub
sar
mov
fwait
cld
je
add
ret
jno
idivb
jnp
leave
int3
xchg
mov
pop
mov
adc
adc
mov
push
jbe
push
push
aaa
je
and
xchg
inc
inc
mov
xlat
stos
cltd
outsl
ret
cld
push
mov
rorl
fdivl
call
xor
stos
and
mov
xlat
sub
mov
repz
jl
aas
out
aad
sbb
mov
fldenv
xchg
scas
mov
testl
test
ret
lods
push
cmp
inc
ret
mov
mov
negl
fstpl
insb
outsl
data16
lods
push
cli
xchg
or
lods
jmp
iret
pop
adc
out
ja
lods
pop
mov
xor
popa
in
aam
jecxz
movsb
inc
jle
pushf
or
xchg
loope
cltd
bound
sub
stos
stos
fisubrl
mov
shl
sbb
adcb
xor
pop
or
out
mov
pop
xchg
ljmp
int
negl
fwait
cmp
push
mov
data16
ret
dec
nop
out
or
push
sbb
sbb
mov
xchg
fidivrs
scas
lahf
daa
inc
fmul
mov
stos
cld
iret
xor
clc
or
das
test
mov
push
mov
inc
test
adc
jb
dec
lea
dec
imul
out
stc
mov
scas
or
bound
pop
jmp
jmp
inc
dec
push
inc
popf
into
icebp
sbb
cmpsb
lods
test
aas
clc
xchg
pushf
in
jns
mov
jl
test
or
push
mov
adc
mov
xor
pop
loop
mov
enter
dec
jle
xchg
enter
loope
pusha
pop
jmp
aam
addr16
js
xchg
into
add
ds
push
xchg
movsb
clc
ljmp
out
scas
pop
test
push
pop
push
mov
ljmp
add
sub
xchg
sti
or
cmpsl
xor
push
pusha
jb
xorl
out
fstl
pop
jle
dec
mov
lds
sub
push
inc
inc
add
enter
jno
dec
sub
scas
lds
shrb
mov
and
sub
lods
mov
lea
imul
shr
out
xchg
loopne
mov
xor
sub
and
into
or
xor
loop
xor
jg
js
xchg
jg
outsb
popa
fdivs
lock
xor
mov
hlt
es
sbb
pusha
cmpsb
xlat
lea
fcoml
les
sub
lret
adc
loop
das
es
sbb
neg
decb
cmc
test
cmp
lods
push
adc
dec
fisttpll
int
inc
mov
addr16
pop
out
dec
insl
addr16
ret
scas
inc
mov
pop
mov
xor
decl
push
outsl
cltd
and
sub
out
sbb
aad
insl
cmp
lods
push
fwait
pop
hlt
cmpsb
inc
in
xlat
subl
cmp
jle
rolb
iret
movsb
or
rolb
and
add
incl
int
inc
cmp
dec
dec
pusha
in
xchg
outsb
inc
mov
or
or
sbb
leave
mov
orb
ja
jns
jecxz
test
xor
lea
scas
dec
data16
ljmp
mov
insb
cmp
and
pop
nop
les
jb
push
pop
and
inc
xchg
sti
push
push
mov
aam
leave
lods
fidivl
test
pusha
and
inc
in
xor
pop
fdivrs
sbb
packssdw
sub
jo
or
mov
sub
inc
cmp
sub
sub
lcall
enter
in
outsl
movsl
sbb
mov
jl
mov
jne
add
and
xor
or
ficoms
lods
hlt
sbb
pop
fcoms
pushl
dec
fldcw
into
imul
fdivrl
je
xor
and
cmpsl
mov
aas
push
cltd
fnstenv
stc
ss
xor
jne
xchg
lds
ret
mov
xchg
sbb
mov
or
and
cs
adc
pop
loopne
mov
push
jg
leave
sbb
jmp
aas
fidivrs
je
sbb
dec
or
dec
jne
dec
lret
pop
testb
bound
fimuls
push
lds
xor
pushf
out
and
or
adc
adc
jno
ret
push
and
xor
push
adc
jge
inc
xchg
fistl
adc
inc
lret
push
adc
adc
inc
cli
rorb
xchg
dec
and
xlat
mov
mov
lret
pmulhuw
fwait
and
sbb
stos
shl
ja
mov
repz
mov
stc
negl
mov
lret
cmc
and
sahf
aaa
adc
add
fstl
and
fwait
sbbb
loopne
xchg
nop/reserved
or
dec
gs
xlat
loopne
outsb
fmuls
cld
outsl
push
std
jecxz
movsb
add
inc
add
inc
pushf
inc
popa
js
push
mov
pop
popf
xchg
xchg
sub
inc
xchg
push
or
and
push
bound
stos
movups
movsl
dec
test
jo
loopne
loope
inc
cltd
push
push
push
jecxz
movsb
in
mov
mov
pushf
jge
pushf
movups
mov
out
shll
add
or
jno
imulb
mov
inc
or
xor
fisttpl
sti
sub
inc
sbb
mov
mov
push
dec
loope
arpl
cld
sbb
or
or
dec
sbb
xor
pop
fcmovnb
popa
mov
lret
pop
cmc
jecxz
mov
xor
push
jge
pop
movsb
adc
add
ds
jnp
leave
cs
inc
and
pusha
icebp
adc
dec
xor
add
pop
jne
incl
repz
test
sub
stos
push
cmp
pop
jnp
mov
pop
mov
repz
js
popf
in
js
mov
adc
dec
sbb
aas
in
jnp
push
mov
sub
add
addb
hlt
cmp
pop
into
xchg
pop
sarb
ja
out
adc
imul
mov
mov
cmp
mov
movsb
movsb
lcall
lock
lods
pop
jge
test
sbb
adc
mov
loopne
jno
or
xor
sbb
and
pop
mov
ror
iret
and
bound
adc
cmc
out
pop
cmp
push
movsl
jo
mov
mov
popa
mov
fisttpll
sbb
inc
mov
push
les
add
outsb
in
mov
pop
int3
or
loopne
loope
dec
imul
rclb
xchg
fsubl
cmp
dec
sahf
test
sbb
adc
clc
fcompl
lods
pushf
push
mov
cli
push
lds
push
jae
addr16
jp
call
or
push
pop
cmp
pop
xor
in
mov
inc
dec
mov
fs
inc
dec
aaa
xorb
ja
jo
ljmp
xor
test
arpl
sarb
mov
insb
mov
adc
jg
popf
jne
insl
mov
pop
mov
jae
adc
jmp
fldl
xchg
push
push
adc
pushf
inc
mov
test
hlt
js
xor
sti
andb
add
scas
mov
cmc
dec
subb
cltd
out
add
cmc
pop
mov
sub
lahf
pop
add
pop
out
ss
cmp
int
mov
ficoml
repnz
adc
xchg
mov
iret
or
mov
hlt
int
pushf
inc
in
outsb
mov
jns
xorl
loopne
cmp
mov
adc
or
dec
inc
or
xchg
push
stos
xor
popa
int
ror
cmpsl
lods
loopne
dec
pop
cltd
xchg
and
and
mov
pop
xlat
test
and
pop
hlt
jmp
dec
xchg
scas
push
inc
add
into
stos
ja
rclb
rcl
and
sahf
mov
enter
cltd
repz
cmc
jne
pop
idivl
addl
adc
fistps
xchg
xchg
aaa
mov
insl
sarl
outsb
and
out
popf
stc
mov
xor
xor
dec
pop
adc
pusha
pop
cmp
movsb
pop
xor
pushf
dec
sub
dec
shrb
mov
lods
sbb
fstl
test
mov
es
cmpsl
int
and
xchg
xor
jne
jecxz
fmulp
fwait
pop
call
loope
gs
and
pop
and
adc
and
fisttps
fucompp
xchg
test
add
lea
jae
cmpsl
mov
mov
mov
repz
es
push
out
ds
cltd
fisttps
mov
xchg
dec
fildll
jne
out
jecxz
dec
ror
dec
movsb
lret
jnp
or
loope
repz
jae
popa
xchg
jle
mov
out
adc
inc
sbb
rolb
gs
adc
movsb
xor
sbbl
and
push
cmc
movb
adc
data16
adc
outsb
cmpsl
outsl
icebp
add
lock
loopne
jo
pop
test
lret
dec
js
push
stc
xchg
xchg
mov
and
and
int3
sub
sub
stc
xchg
ret
inc
push
mov
fadd
xchg
pop
dec
es
repz
sahf
add
mov
push
inc
jl
call
or
shl
mov
mov
pop
xchg
aaa
mov
rclb
daa
in
pushf
je
scas
lea
je
sub
xlat
repz
mov
shlb
enter
decb
cld
pop
call
pusha
out
sbb
jb
or
dec
xor
pop
sbb
mov
aad
xor
paddb
xchg
movsb
and
fstpt
mov
jo
sbb
jle
inc
arpl
push
jg
mov
add
pop
loope
inc
aaa
cmp
mov
pop
in
popf
cmp
in
stos
icebp
adc
mov
push
cmp
push
push
xchg
mulb
incb
or
inc
mov
jecxz
loope
push
or
jg
ficoml
out
add
xor
icebp
and
cmc
inc
ja
cmc
lahf
hlt
add
xor
jecxz
icebp
inc
push
out
sub
in
push
mov
fistl
push
rcrl
jg
imul
insl
push
inc
and
nop
sbbl
add
push
stos
bound
xchg
pop
adc
es
sub
icebp
xchg
stos
cmp
int3
jecxz,pn
ja
gs
pop
into
jle
and
cmp
out
ss
fnstcw
xchg
shrb
je
cmp
jle
push
xor
iret
out
outsl
in
xlat
pop
cmpsb
mov
das
pusha
and
andnps
gs
inc
xchg
pusha
xor
fmuls
and
add
in
into
int3
or
cmp
adc
or
ffree
arpl
insb
fs
or
pop
sbbb
sbb
xchg
mov
enter
sbb
inc
and
mov
inc
frstpm(287
mov
call
push
fmul
push
jecxz
mov
pop
test
cmp
lcall
ret
fdivl
pop
rorb
sbb
mov
and
add
ret
pop
dec
fcmovnbe
dec
sbbb
jns
mov
jno
and
mov
stc
xor
inc
mov
dec
pop
lods
mov
mov
add
xor
add
gs
xchg
dec
ficoms
xchg
mov
in
pop
jecxz
push
dec
stos
into
mov
mov
stos
in
mov
xor
or
push
xlat
fs
rcrb
or
mov
xchg
jmp
arpl
dec
in
push
popf
aad
in
decl
dec
cmp
jle
xchg
jge
sub
or
or
mul
jmp
jae
xchg
push
sbb
imul
jns
push
pop
pop
arpl
mov
jo
lock
sbb
cmpsl
adc
sti
jg
mov
cmp
inc
xor
push
ja
test
test
repz
mov
int
mov
add
out
cmc
aas
jp
call
and
adc
fildl
daa
and
enter
or
dec
divl
pop
xchg
adc
sbb
repnz
push
out
into
add
mov
in
scas
mov
mov
nop
push
xor
insb
out
fildll
push
cli
pop
dec
pop
dec
mov
inc
push
test
inc
cld
sarl
fdivrl
movsb
hlt
in
push
pop
xchg
cwtl
and
xchg
ret
or
push
ss
xor
mov
jp
aas
and
cmpsl
xchg
push
mov
xor
or
inc
addr16
inc
mov
lock
xor
aas
js
loope
fnstenv
inc
out
or
push
push
pop
mov
cs
ror
inc
cld
leave
into
aam
jle
sahf
imul
cld
cmp
dec
pushf
and
jecxz
movsl
cmp
jnp
cs
out
jecxz
inc
xchg
lds
xor
jp
jb
ficoml
sahf
xlat
adc
mov
push
mov
leave
sbb
xor
and
sbb
dec
leave
shl
and
lret
shrl
add
fldcw
movsl
mov
int
sbbl
fistpll
adc
ret
int3
jp
push
lcall
inc
mov
loop
xchg
dec
add
shlb
icebp
jmp
mov
notb
add
stc
jb
mov
iret
in
addr16
mov
xor
cmp
icebp
pop
mov
add
or
loop
mov
mov
cmp
stos
ja
sbbb
rol
in
or
pop
xor
cld
sub
xchg
cmpsb
dec
daa
push
and
mov
std
test
dec
jo
xor
or
outsb
repz
add
icebp
aad
xchg
jmp
jbe
xchg
jb
repz
mov
fidivs
pop
ret
pop
out
and
xor
mov
xchg
int
loop
test
fsts
xor
push
enter
loopne
sti
mov
jge
mov
add
jge
mov
test
fisubl
lds
mov
xchg
lcall
in
jp
inc
dec
xor
leave
loope
loop
xlat
xchg
sub
outsl
push
and
icebp
clc
ja
ret
cmp
cwtl
fs
lods
xchg
out
lods
inc
inc
outsb
dec
xchg
les
mov
sub
ss
jmp
mov
jmp
out
add
push
mov
dec
xchg
xchg
mov
scas
inc
ret
jmp
jecxz
cmpsb
fwait
dec
cmp
mov
mov
sub
inc
out
es
ret
add
cld
lea
add
je
mov
pop
or
leave
push
jno
incb
xchg
sti
jmp
mov
popa
cmp
and
dec
shl
or
dec
lods
and
push
ds
movsb
out
xchg
imul
add
cmp
cmp
inc
cvtps2pi
out
out
lea
repz
and
pop
dec
sbb
repnz
incl
cmp
mov
in
mov
js
mov
sbb
lcall
lods
fnstcw
cmpl
mov
data16
xchg
xor
xor
mov
jbe
adc
push
sbb
scas
inc
lds
or
pop
sti
frstor
and
aad
push
cmpsl
mov
jg
dec
fucom
bound
push
ljmp
sti
pop
sarl
jp
loop
xor
test
lea
jne
jne
fucomip
dec
in
pop
inc
rolb
in
imul
pushl
sbb
pop
or
jp
pop
loop
test
insb
and
push
push
stos
push
pop
jecxz
insl
pop
xchg
and
cmp
jnp
add
fldl
dec
std
test
js
ljmp
mov
lahf
dec
push
and
ljmp
dec
dec
mov
jmp
jp
xor
push
inc
ds
out
xchg
dec
aam
les
cmp
mov
cmp
pop
lods
and
and
adc
xor
repz
mov
in
leave
mov
imul
mov
in
mov
outsb
cmc
cwtl
aas
enter
pop
mov
add
insl
or
int3
je
pop
push
outsb
in
ja
jnp
nop
dec
or
aad
fsubs
sub
adc
aaa
pop
fisttps
dec
enter
jg
inc
jb
std
jae
jbe
into
clc
test
inc
add
sub
popa
inc
mov
cld
hlt
or
test
xor
lea
and
loopne
out
mov
int3
mov
mov
push
sub
or
cmc
xlat
rclb
mov
sbb
sbb
movsb
pop
xchg
lock
arpl
pop
push
inc
dec
push
arpl
cmpsl
lcall
data16
and
daa
push
dec
cltd
mov
lea
pop
xchg
mov
lcall
cmp
xchg
inc
outsb
add
mov
shlb
sbb
mov
sbb
in
repz
or
pop
std
pop
pop
xlat
lods
in
mov
fcmovbe
sub
mov
cmpsb
repnz
mov
mov
mov
fdivrl
outsl
js
sub
xchg
cwtl
mov
mov
fisubrl
pushf
inc
adc
pop
jno
inc
pop
xor
cld
fldcw
int
push
jl
pop
jns
neg
mov
callw
pop
mov
inc
pop
xor
sub
call
imul
mov
loopne
fs
pushf
mov
sbb
movsb
push
dec
cmp
pop
aaa
pop
out
mov
xchg
stc
mov
scas
add
push
jmp
adc
cltd
pusha
outsb
push
or
pop
lret
push
adc
xor
push
xchg
dec
push
inc
or
xlat
or
sbb
cwtl
adcb
dec
outsl
push
mov
push
cmp
jecxz
mov
jle
lock
dec
push
and
push
ss
hlt
xchg
fadd
and
xor
jge
add
arpl
jp
cwtl
xor
lds
adc
icebp
roll
jne
in
cs
dec
sbb
sub
imul
xor
inc
pop
mov
stc
mov
leave
mov
xchg
cmc
mov
xchg
lods
push
and
movsl
push
cmp
sbb
sbb
push
push
jnp
inc
or
outsb
sub
lcall
jmp
ljmp
mov
dec
fadds
out
out
sbb
jge
mov
test
dec
mov
mov
mov
push
add
lcall
shlb
and
jno
dec
gs
jmp
or
mov
mov
loopne
and
adc
lret
mov
insb
stc
jo
dec
dec
ljmp
add
lcall
xlat
imul
sbb
test
imul
mov
jmp
cmp
sbb
add
js
mov
in
or
insb
rorl
addr16
std
clc
xorl
mov
addr16
loope
push
stos
outsb
int3
bound
movsl
push
mov
push
push
lea
int3
adcl
xor
sbb
add
xchg
minps
mov
lret
scas
inc
jl
clc
std
mov
lods
lds
jmp
btl
sub
ds
dec
jne
xor
sbb
add
les
mov
loopne
test
scas
mov
mov
nop
stc
dec
push
dec
jge
sbb
hlt
sub
lret
popf
sbb
in
pop
test
jmp
xchg
lods
push
jmp
sti
cmp
lock
clc
xchg
scas
xchg
inc
test
insb
stos
jmp
aad
hlt
ret
out
push
mov
sub
push
mov
insb
dec
dec
xlat
xchg
ror
shrb
adc
jmp
or
lret
fimull
outsb
fdivrs
lea
cli
mov
push
js
lret
jnp
pop
add
jae
inc
out
xorl
arpl
sti
inc
pop
pop
ljmp
sub
jne
inc
in
jnp
adc
sub
pop
pop
and
dec
leave
jae
out
in
xchg
data16
jle
jo
add
fucomp
cmp
in
sub
sub
int3
push
inc
adc
in
or
movsb
jmp
loopne
sbb
repz
ss
bound
dec
idivb
cmp
jmp
cs
adcb
cmp
push
push
xchg
add
fldcw
mov
ss
sbb
test
or
jp
jnp
or
addl
mov
cmc
adc
and
les
lods
or
mov
cmp
lret
sub
fwait
sub
mov
loopne
xchg
das
rcrl
out
fdivs
out
jno
lret
fdivrs
outsl
aas
jecxz
mov
adc
push
inc
xlat
ret
bnd
sbbl
or
push
xor
and
popf
mov
lahf
loopne
push
inc
lock
xchg
mov
jo
subl
gs
arpl
sbb
cmpsb
add
dec
adc
pminsw
push
add
jmp
xchg
cwtl
mov
cmc
sbb
call
xchg
dec
push
mov
pop
out
out
push
outsb
mov
mov
mov
fmuls
mov
inc
imul
or
ljmp
clc
add
add
mov
mov
mov
or
cmp
xor
push
cli
inc
add
and
fildl
push
dec
dec
cmp
inc
lret
fldenv
sbb
fimull
sub
xor
fsubl
cwtl
push
mov
pop
push
les
insl
rorb
in
das
xchg
gs
mov
loope
pushf
ret
scas
stos
add
inc
movsb
pop
bound
push
push
repz
pop
outsl
dec
push
aam
cwtl
sti
sbb
hlt
adc
pop
shr
addr16
lods
in
aas
aas
or
test
xor
mov
push
jecxz
cmp
insb
or
xor
mov
cmp
cmp
or
fildll
sbb
cmpsb
pushw
jne
das
cmp
mov
xorl
adc
sti
pop
and
in
sarl
add
and
loopne
fnclex
pusha
adc
stc
divb
pop
fnstcw
sub
xchg
test
mov
jne
stos
jp
mov
les
rorl
pop
cmpl
cli
into
jo
jg
or
xchg
mov
test
sti
pop
nop
add
pop
cmp
shrl
sbb
add
sbb
js
xchg
rcrl
imull
subl
fcom
ja
push
pop
ss
push
sbb
inc
push
bound
lods
cli
pop
rcrl
pop
lods
and
pusha
aaa
es
clc
insb
faddl
xchg
fidivl
dec
dec
and
ds
cmp
mov
fsin
push
popa
adc
lcall
test
push
cmp
push
mov
or
test
xchg
addl
or
call
jne
rorb
push
xchg
add
jno
mull
adc
and
into
jns
or
jmp
pop
xor
dec
popf
loop
out
push
dec
and
mov
or
push
xor
scas
jb
xor
xor
inc
in
fbld
sbb
repz
fdivs
fisttpl
shlb
shll
jbe
fiadds
ljmp
pop
insb
mov
mov
addr16
les
out
or
dec
int
adc
repnz
xor
out
enter
inc
push
adc
lock
push
dec
stos
and
movsl
popa
addr16
bound
ret
outsb
jne
xorb
fisttpll
sub
xor
pop
mov
arpl
lods
mov
pop
inc
loopne
adcl
jge
cltd
cmc
cwtl
aas
les
fdivs
out
adcb
dec
aas
outsl
xor
mov
xor
mov
aas
insl
ficoms
xorb
mov
jae
or
in
les
push
pop
push
mov
fildl
mov
pop
fisubs
loopne
loop
jl
pop
sub
imul
xchg
adc
sahf
cs
mov
int3
xchg
cwtl
jmp
dec
lods
dec
roll
xor
or
lods
mov
aad
lret
mov
pop
loopne
notb
jle
les
aaa
test
cmc
rcl
inc
psubq
mov
push
mov
cmp
imul
sbb
sub
or
lea
jae
out
out
nop
popf
jl
je
mov
push
and
push
inc
mov
dec
mov
ret
aam
xor
xchg
xor
jae
sti
mov
dec
dec
xchg
xor
movsb
lahf
jmp
orb
lret
clc
rcrb
cmpsb
test
mov
xchg
mov
mov
inc
jns
and
push
xor
aad
aas
repz
mov
jp
cs
das
lods
dec
lds
pop
xor
mov
jp
loopne
push
in
cmpsl
xor
mov
or
addr16
ret
icebp
pop
cs
lret
adc
inc
mov
or
sbbb
fs
cwtl
lahf
add
rcll
push
mov
sbb
mov
jl
or
ss
push
sbb
mov
popf
int
int3
lcall
fcoms
push
stos
loop
xor
pop
mov
movsl
and
es
insb
imull
inc
int3
jmp
imul
out
sub
adc
mov
into
sbb
pand
add
dec
jecxz
dec
and
pop
rclb
and
xor
xchg
idiv
jne
and
jnp
push
xchg
cld
imul
xor
cmp
int
pop
sbb
test
stc
cmpsb
push
lods
inc
testb
lods
mov
imul
cmc
jns
das
adc
inc
cmc
push
pusha
fdivrl
call
push
cmp
es
out
cwtl
adc
data16
fcmovb
add
rorl
and
fisubrl
shll
das
pusha
lret
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
ret
sbb
cmc
mov
cltd
inc
xchg
lods
mov
inc
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
lret
add
test
add
mov
mov
pop
push
jecxz
xchg
cli
sbb
imul
mov
arpl
adc
fsubs
jmp
bound
mov
inc
xor
push
in
mov
xchg
inc
mov
imul
cmp
ja
mov
call
sub
pop
cmp
popa
sbb
mov
ljmp
loopne
push
or
in
mov
shll
aam
stos
adc
ljmp
mov
mov
cmpsb
stos
scas
out
pusha
mov
xchg
shlb
outsb
dec
mov
sbb
popf
sti
adc
sub
loope
sbb
jae
push
arpl
fdivr
fwait
aaa
enter
cs
lds
push
jns
xor
push
ss
pop
xchg
dec
mov
sub
push
xor
jbe
test
out
test
mov
cli
add
stc
dec
int
andb
cmpsb
pop
mov
pop
orb
inc
inc
adc
iret
mov
xchg
mov
lret
add
push
popf
xor
movsl
bound
ret
mov
adcb
popa
add
icebp
loop
sti
scas
sbbl
add
mov
ror
out
dec
les
adc
mov
dec
mov
sbb
out
out
fwait
sarl
call
and
push
repz
dec
xor
ljmp
mov
icebp
xlat
fldcw
int
test
add
inc
aaa
outsb
cld
scas
or
dec
lods
adc
stos
xchg
insb
jno
xchg
and
popa
mov
pop
arpl
lahf
sarl
into
test
scas
add
adc
lock
and
mov
idivb
dec
xchg
bound
mov
shr
outsl
ja
push
movsl
repnz
mov
adc
repz
pop
or
push
cltd
dec
in
cmp
nop
jno
or
xchg
sahf
sti
add
rorl
cmp
push
arpl
mov
xchg
jmp
out
enter
in
jp
ljmp
test
iret
outsb
popf
enter
jne
jnp
xor
jne
imul
pop
mov
xchg
insb
jbe
stos
mov
add
ja
idiv
jg
mov
mov
es
ljmp
add
fidivrs
leave
das
pop
jl
push
mov
lods
xchg
dec
pushl
cmpsb
adc
addl
sbb
sti
fwait
or
add
mov
pop
push
sti
fsubl
jbe
loope
jge
into
mov
je
pusha
out
arpl
push
sbb
insl
cmp
add
js
fs
add
icebp
xlat
dec
cmpsb
cs
dec
fwait
dec
in
bound
clc
pop
adc
sub
ds
jmp
dec
insb
mov
and
add
xchg
lret
inc
imull
pushf
or
dec
mov
inc
call
imul
fisttpl
test
icebp
arpl
inc
adc
call
sbb
ja
or
mov
mov
dec
arpl
push
mov
jecxz
notb
sub
fisubl
sbb
cmpsb
mov
pop
or
mov
sahf
mov
jnp
jle
sbb
ljmp
mov
push
cs
pusha
cmpl
into
insl
push
pop
adc
scas
mov
into
out
jecxz
aad
loope
pop
jmp
pop
xchg
xchg
enter
cmp
lock
je
xchg
popa
lock
sti
cmp
daa
stos
xor
lods
insb
mov
pop
iret
movsb
mov
cmc
mov
or
push
push
int
cmp
cmpl
fsubrl
adcb
sbb
jne
dec
xchg
cmp
cli
xchg
cli
xchg
inc
repz
daa
mov
out
sub
xor
sarl
cmp
ss
andl
and
inc
xchg
fcomps
pop
adc
pop
mov
repnz
shrl
int
cwtl
fwait
lahf
xor
nop
pop
xor
movsb
push
loop
loop,pt
push
pop
scas
aaa
cmpsb
popa
orl
stc
std
aaa
clc
imul
sbb
push
jnp
and
mov
push
xor
iret
and
xor
ret
pop
or
in
shl
mov
add
les
pop
in
dec
push
lock
jg
iret
jbe
xchg
rcll
pushf
dec
cmpsl
jae
cmp
xor
xor
adc
mov
mov
sbb
add
scas
and
pop
pop
je
addb
inc
inc
cmp
movl
mov
arpl
xor
rcrl
sub
sbb
pop
xchg
mov
cmp
test
add
lock
lock
push
cmc
sbb
xor
pop
in
nop
dec
xor
xchg
and
movsb
mov
add
push
cmp
outsl
jno
in
test
ljmp
fsub
into
push
cmp
fsubrl
std
dec
es
jecxz
jl
test
in
push
pushf
inc
repz
lods
cmpsb
add
and
add
cld
in
repz
mov
adc
lods
mov
cltd
xchg
sbb
sub
into
mov
test
popf
jb
lcall
add
flds
add
popa
or
in
scas
icebp
mov
insb
jbe
dec
aas
hlt
jl
je
inc
movsl
jbe
push
insl
xor
lock
adc
inc
ret
cmc
xchg
pop
cmc
gs
arpl
sbb
pop
mov
mov
mov
xchg
loopne
pop
or
pop
pop
sahf
je
fadd
lock
jmp
ret
jmp
cmp
lret
scas
sub
pusha
jle
xchg
call
into
jle
ss
xor
xor
mov
dec
pop
mov
movsl
mov
add
mov
test
ret
pop
inc
orb
sbb
leave
push
stos
outsb
xorl
scas
aaa
jmp
addr16
or
andl
jbe
jecxz
push
clc
mov
popa
xchg
add
mov
fs
or
dec
dec
push
pop
and
push
cmp
inc
xor
xor
stc
aas
dec
xchg
mov
push
imulb
gs
adc
sbb
mov
cmp
ds
sub
push
mov
insb
loope
push
in
jnp
pop
stc
mov
pop
or
cmp
push
mov
jmp
mov
jns
jge
scas
int3
push
loopne
iret
mov
cmp
cli
add
add
jl
repnz
addr16
nop
inc
sub
or
pop
orb
xor
lcall
mov
out
or
adc
adc
mov
fiadds
subl
or
cmp
xor
mov
rcl
les
sar
add
lods
ret
pushf
mov
or
mov
mov
jnp
je
sbb
sbb
add
add
add
mov
jp
push
pushf
mov
aaa
xchg
add
cmp
cltd
sbb
xor
add
sbb
leave
ljmp
jl,pt
add
ja
mov
xchg
add
mov
push
xchg
test
jno
sub
mov
cmp
jge
and
xchg
jne
mov
mov
xchg
push
enter
ror
stc
leave
clc
jmp
jae
pop
add
xchg
sub
xchg
and
mov
insl
mov
ss
imul
cmp
and
pop
int
xchg
jno
loop
dec
movsb
mov
adc
div
jg
mov
jae
sub
in
sahf
fcmovnb
out
cmp
arpl
shlb
rcrb
jbe
mov
fcoms
sbb
mov
lds
aaa
jmp
xchg
imul
imul
pop
or
inc
push
pop
cmp
mov
cmp
mov
repz
sbb
mov
aad
xor
and
dec
dec
dec
rolb
or
inc
lcall
and
loope
scas
shlb
rolb
pop
cs
or
daa
shl
out
and
std
in
icebp
dec
scas
dec
jnp
mov
loopne
xor
rolb
sbb
cmp
pop
cli
inc
inc
pop
rcll
insl
sub
xchg
mov
xor
loop
xor
or
repz
outsb
test
ss
imul
push
inc
lea
adcl
xor
xor
mov
add
clc
das
sub
pusha
mov
jo
into
das
mov
fcmovbe
inc
or
xlat
xor
rclb
rcl
mov
mov
adc
cmc
shrl
in
ficoml
cltd
in
mov
jnp
loope
pop
sbb
outsb
loopne
scas
xor
cmp
inc
data16
jl
call
fnsave
pushf
ja
jecxz
sub
imul
test
sub
xchg
jne
push
pop
cmp
mov
pop
push
inc
mov
repnz
leave
outsb
popf
inc
jg
fdivl
test
rclb
mov
dec
lret
jnp
adc
inc
loop
fldt
dec
dec
sub
out
je
xchg
stos
outsl
enter
push
mov
mov
std
jl
dec
pop
cmp
fimull
or
add
test
add
in
sti
repnz
pop
addps
inc
leave
cltd
adc
sub
cmp
sti
push
lock
test
repnz
xor
or
sub
mov
mov
and
jae
cli
add
and
je
imulb
lock
cmpsb
sub
adc
lock
aaa
aaa
pop
jle
in
and
mov
or
mov
outsl
lds
repnz
int
mov
push
lods
fisubrl
testb
dec
int3
pusha
out
jb
int3
xchg
dec
xchg
sbb
push
ja
stc
push
mov
gs
lret
jle
sbbl
and
movsl
pusha
movsl
in
fadd
xor
jle
bt
xor
outsb
sbb
aam
icebp
mov
iret
cld
nop
xor
or
adc
pop
pop
mov
pop
push
dec
nop
mov
pop
mov
pushf
lret
xchg
cmp
cwtl
add
arpl
shrl
mov
sbb
imul
xor
popf
call
mov
mov
mov
pop
adc
or
add
loopne
cmpsb
push
out
cmp
stos
sub
ret
mov
jmp
jbe
cmp
sahf
jns
adc
xor
ret
dec
xchg
lds
aad
jae
dec
mov
lcall
cmpsb
psubsw
nop
mov
adc
ret
mov
cmpsl
xchg
xor
lea
add
mov
popa
jle
pop
xchg
adc
push
xchg
and
mov
loopne
test
test
pop
dec
pop
dec
stc
lds
sbb
ja
pop
aaa
sbb
push
int
fisubrl
jmp
scas
call
push
dec
les
frstor
mov
out
pop
lahf
sbb
xchg
mov
ret
jg
push
add
pop
and
imul
leave
les
add
sub
and
imul
cmp
leave
in
mov
add
adc
mov
fdivrs
movsl
jp
and
outsl
xchg
dec
stos
push
push
loope
inc
into
sbb
lcall
imul
fdivrl
adc
outsb
add
test
add
dec
cmp
mov
ficoml
xchg
enter
pop
mov
cld
std
lcall
push
bound
mov
inc
scas
xlat
inc
xchg
clc
pop
lock
jmp
maskmovq
and
into
push
stos
xchg
clc
mov
push
fildl
shlb
jle
jb
adc
jl
negl
iret
push
push
xchg
and
mov
fisttpl
fdivrl
popf
inc
icebp
jle
pushf
jg
das
iret
pop
lahf
jg
sbb
cmp
jo
sbb
mov
mov
push
sub
jns
sbb
inc
xor
in
jl
and
mov
jmp
xchg
push
fstps
inc
inc
aam
dec
xchg
jecxz
stos
in
jns
mov
and
mov
scas
jle
xchg
test
pusha
add
push
jmp
mov
mov
adc
sub
es
test
insl
mov
movups
pop
shlb
dec
jo
mov
mov
ret
dec
pop
cmc
dec
xchg
add
into
cli
sbb
jne
mov
push
pop
sbb
sbb
jmp
inc
hlt
sub
dec
sub
cmp
inc
paddusw
push
in
adc
lahf
cmp
jecxz
nop
add
mov
sbb
repz
dec
sbb
loope
ficoms
mov
mov
mov
and
ja
insl
push
rol
adc
test
xor
xchg
fstl
scas
aaa
pop
mov
lcall
in
andb
mov
test
lcall
mov
or
jno
and
xor
arpl
mov
mov
mov
nop
jle
cmp
mov
mov
add
fld
dec
cmp
jb
lods
cwtl
loopne
insl
mov
push
mov
dec
adc
or
mov
sarl
rcrl
mov
test
dec
inc
gs
std
jge
cmp
lahf
jno
mov
or
loop
push
in
lcall
test
loope
inc
test
and
dec
leave
mov
iret
or
push
jnp
out
filds
jle
lahf
mov
cmpsb
inc
bound
jno
rolb
add
jg
pop
aad
mov
jno
add
sub
add
lods
pusha
mov
movsb
or
xchg
sub
ret
scas
std
adc
sbb
and
andl
xchg
jl
subb
xchg
call
adc
out
jnp
inc
xchg
mov
jmp
pop
dec
outsl
out
int3
jbe
insb
push
adc
or
jl
rcrb
dec
pop
sbb
cmpsl
insl
mov
in
adc
divl
es
jns
stc
int
cmc
dec
in
cmpsl
sbb
inc
fdivs
mov
mov
pop
mov
xchg
insb
jmp
mov
shrb
lret
or
mov
sahf
scas
js
fidivrl
jecxz
fwait
in
jnp
push
push
std
xor
mov
aad
fwait
sub
mov
jae
mov
aad
imul
rcrb
insb
mov
jno
cmp
sbbb
and
sub
adc
idivb
ret
arpl
es
or
call
mov
push
mov
pop
sbb
sbb
dec
insl
sbb
ret
xor
or
lock
lahf
nop
push
stos
push
scas
xchg
mov
jp
xchg
cmp
daa
adcb
movsb
pop
ret
cltd
cmc
mov
es
push
lea
imul
and
test
sub
sub
jg
arpl
mov
push
je
ja
pop
jae
js
jo
fldenv
cmc
inc
lret
loopne
ficomps
cmp
out
sub
int
jle
adc
sbb
aaa
jge
xlat
push
xlat
dec
scas
xor
cli
mov
aas
xchg
jo
sub
mov
inc
inc
or
push
jle
int3
mov
mov
cmp
mov
in
outsb
dec
cmp
stc
repz
mov
xchg
push
sub
aam
dec
sbb
adc
orb
arpl
mov
rclb
sub
iret
ficoms
in
cmc
sub
sbb
dec
jne
hlt
add
mov
dec
in
inc
scas
xchg
leave
aad
mov
loopne
add
mov
insb
ds
ss
das
mov
push
fstps
loopne
lahf
mov
test
mov
jge
jb
repz
add
bnd
repnz
cmpsb
or
jo
aam
hlt
dec
cmc
in
aad
add
sub
gs
mov
add
popf
paddd
cmpsl
mov
pop
add
jg
jae
add
sub
adc
pop
inc
icebp
or
jae
sbb
push
xchg
pop
and
pop
cld
ficompl
jne
lcall
fnsave
mov
inc
push
mov
enter
loop
push
cmp
loopne
xor
adc
lods
cmp
xor
pop
pop
daa
pusha
mov
test
test
inc
and
cmp
push
dec
sub
jmp
loope
adc
add
fmuls
sub
repnz
mov
pusha
aad
sbbb
or
sbb
cmp
add
mov
mov
and
sar
push
cmc
data16
icebp
lcall
andl
in
xchg
xchg
push
andb
or
push
cmp
mov
in
sbb
sub
cld
push
dec
xor
lods
jle
negb
xchg
mov
insb
adc
add
addl
das
insl
jb
jo
xchg
mov
mov
xchg
cmp
test
push
or
sbb
out
xor
pop
andl
ds
data16
shlb
and
out
icebp
icebp
dec
sbb
std
inc
les
repnz
add
iret
daa
dec
test
movlps
xor
fdivp
dec
lea
jg
in
xlat
pop
jne
into
rorl
push
lods
pop
imul
dec
jno
sbb
mov
decb
sbb
pop
pop
cmp
sbb
jmp
je
push
ret
or
xor
or
xor
bound
lea
ds
ret
popf
pop
stos
cmp
or
jle
dec
std
sub
or
test
imul
sub
xchg
into
popa
sbb
inc
and
and
sub
inc
sub
and
enter
test
in
add
icebp
stc
fs
jns
lock
push
orb
out
aam
or
cmp
cltd
jmp
cmp
popf
push
addr16
je
daa
pop
loopne
add
out
cmp
and
mov
popf
popf
mov
or
xorl
jge
push
lahf
popf
xor
jp
test
cwtl
in
and
ja
dec
fwait
xor
mov
popf
inc
xchg
sahf
mov
fsubs
add
and
movsb
lea
lods
and
addb
jbe
add
mov
push
mov
inc
and
inc
arpl
sarb
ret
icebp
mov
adc
stc
pop
mov
xchg
inc
sahf
ret
pushf
out
pop
sbb
loope
iret
sti
push
xchg
mov
stos
aam
inc
daa
jl
loop
sahf
lcall
mov
data16
les
or
fwait
xor
pop
in
push
fdivrs
ja
mov
mov
jmp
repnz
mov
jge
pop
int
icebp
sub
mov
xor
jae
jmp
idivb
pop
repz
lock
and
popa
testl
cmp
or
mov
mov
jno
scas
push
pop
rorb
pusha
in
mov
lods
adc
mov
add
into
push
push
dec
add
cli
call
sahf
jae
add
add
jo
xor
add
pop
icebp
or
sti
outsb
roll
xor
cmp
outsb
sti
dec
xor
fs
jmp
pushf
out
cmp
fs
mov
and
jp
lea
pop
xchg
arpl
sbb
add
sbb
and
and
lods
add
and
lods
or
enter
mov
inc
ret
rcrl
sbb
ljmp
sbb
pop
imull
push
and
ljmp
data16
sbb
lods
add
jle
nop
es
and
mov
or
imul
stos
ss
fs
iret
lods
or
sbb
scas
push
imul
inc
mov
cmc
in
add
sub
jb
jp
push
adc
imul
test
inc
or
insb
cmp
inc
jmp
andl
or
shlb
adc
xchg
fstl
or
push
out
fnstsw
xlat
xor
xchg
xchg
pop
jecxz
cs
adc
or
jns
mov
mov
je
mov
aas
cmc
js
insb
out
fsubr
sbb
mov
int
or
out
das
out
mov
and
xchg
std
xchg
mov
mov
cmp
xchg
in
dec
sub
or
and
jmp
jp
std
fmuls
jp
int3
stc
loop
adc
shll
ds
mov
sbb
mov
adc
outsb
lcall
mov
cmp
test
sahf
xchg
movsl
js
add
insb
orl
jbe
dec
mov
inc
lret
stc
decb
fs
jnp
jne
lret
xchg
mov
jmp
xor
les
jecxz
mov
mov
out
test
or
addr16
dec
jecxz
lret
insl
enter
shlb
rcrl
adc
dec
or
out
popf
mov
repnz
cs
les
aaa
jg
mov
cld
pop
clc
and
orl
jecxz
lahf
repz
fstl
push
xchg
adc
mov
sbb
sub
in
cmp
or
mov
je
cmpsb
and
lret
xchg
lods
scas
jne
rcrl
jns
dec
pop
adc
ret
sub
push
mov
int
sbb
mov
in
int3
cmp
out
insl
addl
mov
mov
in
jae
sar
jns
jne
xchg
and
adc
jl
in
and
inc
leave
mov
jb
mov
fcomps
lock
arpl
and
mov
mov
lcall
test
dec
sub
jp
bound
out
lahf
xor
mov
enter
out
jae
pop
inc
fwait
or
inc
lret
push
je
ss
and
pop
imul
inc
push
dec
jb
cmp
and
sbb
bound
cmpsl
insl
out
outsl
iret
push
outsb
test
cmp
ja
mulb
or
push
insb
mov
loopne
jge
daa
dec
rolb
jecxz
dec
das
push
test
jno
popa
ds
ja
add
add
xor
jg
mov
mov
jns
sbb
cmp
inc
jg
and
test
xor
mov
inc
out
push
mov
pop
adc
adc
stc
int
loop
xchg
lret
dec
aad
cmp
das
imul
jle
inc
repz
test
cmp
sbb
add
sbb
std
push
pop
mov
fsubs
xor
xchg
aad
mov
das
dec
fwait
pop
add
cmp
and
mov
xor
out
faddl
pop
fimull
ret
fnsave
lods
mov
xchg
pop
outsl
fistl
or
cltd
pop
std
mov
stc
xchg
mov
add
xchg
std
jg
in
pop
pushf
xor
sub
add
stos
das
inc
rcl
fdivp
ja
jl
or
inc
jb
cmpsb
mov
and
call
lret
jo
les
mov
fcoms
xor
stos
add
out
std
jne
std
push
inc
push
jne
call
mov
mov
scas
jge
iret
inc
mov
cwtl
mov
jnp
enter
mov
in
mov
movsb
out
jae
es
shlb
ds
xchg
xor
lret
add
inc
lret
loopne
loopne
out
dec
jnp
leave
adc
lahf
sub
je
insb
push
sub
outsb
mov
and
and
stos
std
hlt
and
insl
push
xor
int3
aam
fistps
in
cmp
out
call
dec
dec
add
sub
js
shrb
mov
dec
or
push
add
pop
mov
mov
xor
cli
mov
xchg
cmc
dec
mov
dec
cli
sarl
es
lret
and
push
jno
popa
push
cmp
or
adc
sbb
xchg
xchg
stc
imul
test
or
cmpsl
ds
dec
sarb
xorb
mov
cmp
cmp
mov
aad
popa
popa
push
clc
push
mov
dec
sub
imul
int3
ja
je
pop
aam
adc
in
lods
jb
jmp
push
jo
inc
aas
xor
into
sub
dec
out
in
clc
mov
mov
dec
rolb
xor
mov
cmpl
aas
sbb
push
call
xchg
xchg
lock
jecxz
cmp
pop
jae
dec
inc
lea
hlt
mov
stos
adc
pushf
mov
cmp
and
add
in
cmp
incl
push
cld
movsl
and
dec
movsl
mov
mov
test
pusha
sub
pusha
sub
sub
sbb
jle
faddl
jge
icebp
mov
push
lret
in
and
mov
insb
cmove
out
insb
into
mov
fadds
add
inc
cmp
fdivrs
add
movsbl
js
test
and
dec
std
sub
pop
cltd
xorb
inc
mov
shr
adcb
movl
jge
inc
ret
add
add
idiv
iret
std
mov
lret
add
test
add
pusha
fisubrs
sub
stos
sbb
out
pop
lods
sub
enter
dec
insl
xor
and
mov
sbb
aad
fs
lds
clc
call
mov
loopne
jecxz
sub
xchg
xchg
lret
xor
rcrl
fimuls
icebp
ljmp
sub
enter
icebp
and
gs
es
daa
mov
lods
outsb
cmp
andb
test
dec
adc
outsb
or
push
cmpsl
dec
into
pop
outsl
cmovb
add
incl
jb
out
mov
mov
cmpsl
ljmp
adc
out
scas
mov
shl
add
or
jge
xchg
sarl
test
jo
pop
ja
push
aas
xor
leave
clc
in
push
jmp
les
stos
mov
cmp
int
pop
dec
sub
push
mov
test
add
pop
sub
cmp
adc
dec
shll
xor
pop
int
stc
ret
into
mov
dec
dec
arpl
inc
pushf
call
mov
fwait
sbb
pop
and
and
mov
test
inc
mov
xchg
push
test
cmp
in
imul
mov
or
sbb
mov
sub
cwtl
dec
shr
das
xor
jb
sar
sub
add
scas
insb
leave
mov
pop
and
arpl
shrb
sarl
sub
mov
cwtl
rolw
imul
dec
xchg
dec
cmp
dec
lods
push
jge
dec
inc
mov
pop
shlb
sub
cmc
scas
and
jnp
cld
ret
jmp
out
js
sub
pushf
jns
out
and
sarl
push
adc
pop
les
movsb
or
mov
jle
pop
dec
cmp
movsb
je
mov
lret
popl
loope
gs
mov
inc
xor
ja
dec
gs
outsl
push
outsb
inc
cmp
mov
jbe
sbb
sar
shrl
jge
mov
jp
repz
push
and
aas
daa
push
repnz
and
add
xor
scas
mul
mov
fimull
fwait
iret
cmp
xor
fsubrl
push
jae
push
fdivrs
ret
mov
out
mov
xorl
add
xchg
ret
mov
or
push
inc
lret
cli
inc
in
xchg
les
jno
stc
mov
inc
jnp
lret
lock
inc
sub
jae
xchg
movsl
xchg
or
and
sub
mov
popf
mov
movb
sbb
stos
lock
push
call
xor
jno
movsl
insl
ds
outsb
iret
mov
je
int3
lds
sub
jmp
xchg
int
lods
inc
sub
lcall
mov
xor
imul
push
lods
sub
int3
mov
jno
jp
mov
push
cmp
jo
mov
or
mov
jle
popf
jmp
sbbb
push
jbe
xorl
xor
dec
stos
cmp
pop
push
sub
lret
rclb
imul
and
add
and
jo
dec
repnz
pop
rolb
stc
imul
aaa
imul
movl
cmc
jns
daa
outsb
fld
sub
jp
push
mov
or
cmp
scas
in
aad
and
pop
enter
iret
and
pop
cmc
popf
test
je
push
leave
mov
xor
adc
loopne
aas
or
add
pop
and
push
push
lcall
mov
or
aam
aaa
out
add
mov
insb
lret
insb
call
mov
scas
mov
test
lods
andl
or
and
add
nop
sbb
push
lret
out
xchg
sti
jge
xor
jle
sti
push
enter
dec
in
lret
dec
cmpsl
xchg
and
sbb
in
jl
mov
dec
movsl
je
mov
out
jg
add
fmull
push
adc
testl
xchg
popf
lods
add
lods
out
enter
xor
repnz
mov
imul
or
mov
test
dec
bound
pop
adc
leave
out
or
jne
fs
mov
mov
dec
cmp
jg
cmpsb
pop
sahf
adcb
mov
ds
inc
in
add
sub
bound
stos
adc
inc
sub
out
mov
add
push
push
jle
xlat
outsl
mov
lcall
add
test
add
push
daa
mov
movl
pop
shrb
or
rcpps
icebp
dec
shrl
adcb
in
in
sbb
ficompl
je
mov
xchg
test
ret
add
lds
push
shll
enter
cmp
stos
sbb
push
mov
cmp
mov
adc
xor
idivl
lea
push
jnp
fwait
xchg
mov
dec
clc
mov
xor
push
mov
push
imul
pop
fnstcw
std
sbb
repz
xchg
std
jnp
test
loop
jg
hlt
mov
jmp
aad
xor
xchg
add
int3
or
add
sub
xchg
sbbl
nop
pop
pop
cwtl
hlt
xchg
iret
mov
sbb
imul
mov
es
xchg
fwait
mov
and
movsb
cmpsl
pushf
fisubrl
jno
mov
mov
inc
fbld
pop
and
stc
push
icebp
mov
dec
addl
xchg
jae
xor
push
lcall
inc
cmp
xor
aam
jp
pop
push
add
stos
test
es
mov
stc
int3
sub
mov
inc
dec
out
adc
and
out
leave
and
push
jo
push
jno
imul
push
imul
lret
enter
cwtl
sbb
mov
and
cwtl
pop
outsl
aaa
or
ficoml
mov
dec
std
les
les
sbb
adc
xor
mov
in
mov
and
jnp
out
cmp
adc
cmp
mov
hlt
rolb
repnz
pop
xorb
mov
js
push
push
mov
das
shrb
fs
je
repz
mov
push
jne
add
sub
sarl
push
push
cmp
and
adc
push
jmp
add
xor
mov
lcall
fstl
add
ljmp
sti
cmp
sub
or
lret
mov
push
push
lock
int3
pop
ffree
fs
out
aad
xchg
cld
sub
mov
pop
outsb
gs
pop
mov
mov
dec
mov
test
sbb
or
je
jecxz
dec
add
mov
add
adc
or
pop
out
repz
cld
mov
add
xor
movsb
push
inc
jle
ds
xchg
xor
xor
arpl
lcall
repz
jbe
dec
cmc
mov
xchg
lock
mov
inc
jge
ss
mov
and
jmp
cmp
jecxz
inc
mov
aaa
jge
ds
push
add
leave
pop
pop
fldl
jae
mov
test
adc
in
imul
inc
leave
shrl
test
insb
mov
jae
push
mov
ret
in
push
je
arpl
or
aad
or
cmp
cltd
lret
enter
in
imul
jmp
push
sub
push
pop
and
or
adc
add
hlt
mov
adc
das
lea
mov
dec
mov
enter
loopne
lea
fimuls
push
add
cmp
xchg
push
mov
inc
and
aam
jno
push
adc
ja
ficoms
and
ja
adc
dec
daa
enter
cld
rcll
outsl
in
mov
mov
pop
iret
jl
outsb
fdivl
out
add
xchg
leave
fimull
cmpl
adc
add
push
cli
inc
aam
jbe
pushf
sub
aaa
in
or
les
or
dec
into
js
pop
cmp
jecxz
sbb
pop
mov
adc
cmp
fs
dec
fdivp
ficompl
arpl
test
roll
dec
adc
pushf
jmp
fildll
js
pushf
pop
icebp
test
jecxz
int
ljmp
lea
sub
jecxz
fmull
fcmovu
or
jbe
popf
pop
cltd
insl
jno
jae
cmc
pop
cmp
inc
imull
or
loope
xor
repnz
adc
mov
lret
dec
pop
xchg
or
loope
enter
and
adc
pop
imul
icebp
add
dec
cmc
xorl
jb
loope
scas
and
cmp
scas
and
jns
fildll
cmp
dec
xchg
pushf
js
mov
out
xchg
mov
dec
xchg
adc
jnp
sti
push
adcb
ja
ret
adc
and
add
leave
xchg
insl
mov
aam
inc
fsubrs
xchg
add
mov
repz
lock
cmpsb
cmc
mov
sub
and
lods
add
xor
ret
push
mov
andl
cmpsl
rcrb
rcrb
stc
out
fisubrl
mov
aas
fs
push
add
and
mov
lcall
lds
test
dec
cmc
cmp
daa
adc
sbb
test
decl
sub
sbb
movb
int3
mov
jne
cmp
ss
adc
repnz
rolb
cmp
cmp
dec
add
loopne
rolb
push
dec
mov
pop
inc
sahf
push
es
xchg
push
sub
adc
cmp
enter
pop
push
fwait
xchg
stc
iret
xor
adc
lcall
sahf
enter
jb
mov
push
aaa
xor
mov
xor
cmp
and
jge,pn
xor
cmp
sbb
dec
icebp
les
mov
adc
das
push
sbb
test
mov
sbb
xchg
push
fldl
mov
enter
mov
adc
mov
dec
lret
repnz
and
push
mov
fwait
imul
cmp
fldt
into
pushf
dec
mov
bound
inc
jo
or
pop
dec
dec
cmp
cltd
out
xchg
sbbl
scas
inc
icebp
les
lcall
pop
loop
ja
mov
jne
adc
imulb
movsl
aad
sbb
inc
cmpsl
sub
ret
or
fisttpl
or
cmc
inc
loop
daa
ret
mov
add
or
xor
cmp
jns
jecxz
and
dec
insb
lds
sti
cmp
das
xorl
inc
push
sbb
in
clc
repnz
pushf
push
cmp
aad
xor
sub
test
sahf
mov
cmp
mov
and
inc
call
es
repz
xchg
sar
aas
ja
cmp
ss
xor
rcpps
test
mov
je
xchg
sbb
and
dec
xchg
insl
mov
jae
adc
test
sbb
pop
mov
pop
movsl
mov
fdivrl
jmp
dec
fnsave
in
mov
push
daa
xor
sahf
mov
testl
ja
idiv
pop
out
dec
mulb
dec
movsb
loope
dec
mov
add
mov
xor
mov
jb
inc
mov
inc
fnstsw
push
inc
mov
int
jmp
dec
insl
jns
sub
outsb
in
dec
insl
out
subb
jp
xor
shlb
mov
mov
sahf
adc
sub
mov
jnp
mov
fisubrs
pop
pop
mov
jle
into
jb
xchg
out
jb,pn
adc
mov
cld
cmp
jns
shr
cmovb
andl
outsb
aaa
scas
jno
ljmp
push
sub
in
mov
repz
xchg
es
cmc
ret
rcrl
sahf
popa
dec
out
dec
add
outsl
and
nop
cmp
and
inc
je
lret
test
fiaddl
lods
popa
ficompl
mov
adcl
jecxz
rcrl
loope
sbb
push
inc
jo
mov
add
test
mov
rcll
xor
stos
dec
xlat
mov
arpl
push
mov
mov
fisttpll
inc
sub
mov
adc
popf
loope
mov
lcall
push
jnp
jno
incl
or
cmp
fwait
hlt
int3
std
scas
push
adc
inc
push
fisubs
jle
popf
out
mov
inc
cld
mov
inc
bound
repnz
cmc
sbb
aas
lahf
push
scas
add
sbb
xchg
cmp
lret
mov
lock
sbb
lds
sub
mov
notb
enter
mov
push
dec
leave
arpl
cltd
lahf
dec
lods
cs
jne
add
dec
lods
pushf
adc
xor
daa
push
ss
scas
pop
lret
adc
mov
mov
mov
cmp
pop
sub
imulb
int3
mov
sbb
mov
xchg
sub
xor
pop
or
movsb
mov
rcl
aad
popf
and
xchg
and
pop
and
lret
jl
cmp
cmp
mov
das
or
push
orb
xchg
add
in
mov
sbb
andb
ret
inc
push
es
rorl
adc
dec
mov
and
inc
cmp
ljmp
decl
sub
shrl
mov
pop
jecxz
sti
mov
test
mov
add
ds
and
mov
and
rcr
jne
cwtl
xor
mov
ljmp
add
loop
xchg
xor
sahf
mov
cmc
or
pop
push
add
pop
add
push
fisttpll
jnp
xchg
lea
xchg
fnstsw
in
movsl
cmp
sub
shll
push
mov
testl
mov
add
jno
popa
js
jns
movsl
sub
xor
hlt
push
cmc
pop
or
mov
sub
dec
ficoms
xorb
roll
sub
push
rcll
jg
jmp
cltd
mov
sub
popa
push
call
pusha
rorb
mov
aas
out
adc
rol
and
sbb
outsb
lods
bound
gs
test
in
repz
lahf
repnz
push
push
cs
lret
dec
out
in
mov
add
pop
xor
jne
fs
pop
cli
popf
lcall
mov
mov
inc
jl
clc
ja
loop
imul
xor
in
lock
mov
sbb
das
std
mov
outsl
lea
pop
cs
push
sbb
test
sub
sub
fistps
int
push
loope
mov
inc
lahf
mov
pop
shl
adc
mov
call
cmc
add
bound
mov
inc
out
xor
pop
jmp
movb
fldl
cmpsb
push
lahf
xor
add
inc
push
jno
ficompl
out
in
ja
pop
iret
inc
pop
cmp
cmpsl
mov
push
ja
popa
lcall
cmpsl
out
pop
mov
gs
mov
jg
xor
dec
jno
jo
lcall
mov
popf
jo
cmpsl
pop
cmp
lret
inc
cmp
into
pop
or
add
push
bound
add
pop
add
test
int
push
fwait
es
loopne
test
daa
pop
adc
inc
xchg
repz
mov
fists
cmpsb
xor
lret
pop
shll
adc
imul
lock
mov
sub
leave
pop
leave
push
pop
pop
cmpsb
jns
pop
sbb
jo
inc
insl
out
in
stos
ficoml
xchg
xor
leave
mov
add
xor
sahf
xor
mov
push
popl
add
inc
push
jno
stos
cld
dec
cld
cmp
ficomps
scas
sbb
push
or
aas
mov
dec
aad
in
subb
in
xchg
inc
test
stos
cmp
add
aam
pop
mov
pop
or
rcrl
xor
push
test
call
dec
adc
and
mov
or
pop
push
push
sahf
xchg
push
mov
test
dec
sbb
dec
adc
push
and
mov
mull
mulb
lds
fmul
lock
push
loopne
shr
or
sub
add
dec
insb
jne
cmp
iret
push
call
fisttpll
push
add
aaa
jno
pop
loop
and
pop
jmp
stos
enter
repnz
jnp
lea
popa
jnp
xchg
int
pushf
inc
in
mov
daa
repnz
sbb
mov
jns
mov
adc
rclb
jl
lret
test
add
push
push
jle
es
or
cmp
inc
movsb
add
pop
outsl
push
fldl2t
xchg
aam
stos
pop
add
adc
adc
xchg
sbb
in
incb
lret
dec
xlat
pop
sbb
inc
shrl
jge
cmpl
gs
cs
xchg
xchg
mov
jb
outsl
icebp
jle
xor
push
outsl
push
aas
sbbb
mov
push
and
xchg
xlat
add
push
fucomip
inc
and
int3
js
dec
dec
mov
cltd
mov
cld
aad
xchg
jmp
or
dec
inc
sub
push
js
shr
push
xchg
push
cmp
cmpsl
jo
lods
les
push
imul
pop
mov
mov
mov
aaa
mov
lea
inc
pop
and
rcl
adc
lods
push
adc
xor
cs
inc
inc
dec
inc
movsb
icebp
push
inc
fisubrs
pusha
mov
cli
mov
popa
sti
std
insb
adc
dec
pop
je
add
add
mov
cwtl
mov
push
or
imul
push
lcall
sub
jmp
inc
insb
fcmovbe
or
loopne
mov
divb
decl
loopne
pop
mov
sub
adc
imul
add
add
std
in
mov
mov
std
pop
xor
mov
xchg
add
test
add
adc
cmpsl
or
mov
outsb
jle
mov
cltd
mov
int3
cmp
mov
aaa
add
xchg
inc
jae
std
pop
movsl
test
imul
out
sti
adc
jg
ret
jnp
push
gs
sub
loopne
in
fwait
sbb
dec
outsb
xor
lods
xor
scas
pop
jbe
mov
in
push
out
test
sub
shrl
loop
jae
dec
push
add
cmpsb
add
inc
push
in
adc
push
pop
ja
rcll
xor
xor
cmp
or
add
andl
inc
jl
sbb
adc
fstpl
sbb
push
in
inc
ror
bound
cmp
rorl
jmp
pop
iret
in
xchg
popa
jg
xor
cmp
bound
out
mov
aaa
lods
sub
pop
cmpsl
test
mov
pop
outsl
aaa
mov
inc
or
push
jne
mov
push
mov
std
push
mov
mov
mov
test
fcomi
cmp
mov
or
dec
jmp
je
outsb
test
sub
push
shl
out
fstps
cld
and
sub
enter
xor
fmull
addr16
ret
outsl
dec
mov
add
adc
les
add
jo
cs
fldenv
inc
leave
test
dec
add
popf
fimuls
jge
pop
lret
dec
jns
sub
mov
jnp
cmpb
scas
or
daa
adc
dec
and
cltd
pop
sub
into
dec
aam
cli
and
movsl
movsb
andl
mov
mov
add
out
dec
xchg
push
popw
inc
cmp
cld
faddp
or
mov
mov
inc
mov
mov
and
pop
jecxz
cmpsb
ss
aam
sti
push
imul
or
scas
dec
ds
mov
iret
sub
sub
rclb
xchg
shll
hlt
pop
enter
adc
push
movsl
jbe
cmpsb
xchg
sbb
popl
fs
ja
add
inc
movzbl
jno
and
mov
lcall
mov
aam
outsb
inc
mov
inc
push
add
add
rolb
out
sub
btc
sub
pop
xchg
add
test
add
lcall
lret
das
push
mov
scas
lods
stos
insb
sub
stos
aas
les
and
les
test
xchg
pop
es
xchg
imul
and
and
mov
add
pop
mov
and
popf
sahf
jb
xor
pop
dec
repz
sbb
xchg
out
mov
pop
dec
aaa
jg
int
hlt
pushf
dec
dec
filds
mov
xchg
lock
inc
rorb
inc
add
push
xor
lds
push
push
pop
jno
mov
xchg
cmpsb
jmp
add
mov
pop
sbb
xlat
pop
jle
adc
adc
mov
roll
inc
daa
inc
sbbb
xchg
sub
add
jecxz
inc
out
jmp
dec
aad
xor
pop
mov
shlb
stos
cmp
imul
mov
xchg
add
ja
fcom
and
stos
stos
adc
int
scas
test
jg
repnz
or
pop
cmp
xlat
mov
jecxz
je
test
lods
cmp
mov
clc
fdivl
inc
xor
xchg
fldenv
push
es
push
pop
or
sbb
cld
adcb
mov
xchg
cmc
mov
pop
mov
or
sub
mov
and
dec
xchg
or
push
mov
fdivl
sbb
dec
es
in
rep
sti
lret
movsb
push
mov
dec
jne
jl
cs
insb
jge
jnp
mov
or
sbb
ljmp
sub
push
inc
cltd
iret
lods
ret
adc
push
cmpsb
leave
mov
addr16
popa
dec
ja
sbb
rorl
or
cwtl
pop
fdivp
pop
mov
pop
jl
cs
sub
jbe
pusha
pop
loopne
xchg
mov
inc
mov
push
addr16
out
ficomps
mov
sahf
adc
push
xchg
add
ds
pop
adc
and
xlat
shl
xchg
inc
cld
mov
cli
test
jne
pop
jae
jge
dec
mov
push
or
lods
ficoms
test
nop
adc
sub
insl
std
aam
dec
dec
aaa
cs
imul
xor
add
xacquire
add
sub
pop
xor
nop
add
add
popa
data16
rcrl
xor
or
add
leave
popl
pop
out
xchg
loope
enter
sti
or
daa
push
int
cmpsb
in
mov
stos
outsb
xchg
mov
add
scas
sub
dec
jecxz
sub
sub
and
push
outsl
ret
inc
xchg
dec
rclb
jg
outsl
jne
aas
fsubrl
scas
cwtl
jp
adc
aad
mov
daa
outsl
push
pop
mov
push
insb
fwait
adc
inc
jno
outsb
mov
sbb
push
sbb
ficomps
es
negl
loope
jecxz
xorb
shll
aas
pop
cmp
icebp
cmpb
jg
mov
pop
jmp
shll
jmp
shr
imul
mov
dec
ret
mov
pop
jo
mov
xchg
cmc
adc
xor
push
fcomi
push
lret
push
loop
pop
or
sbb
inc
add
and
and
mov
xor
lods
je
aad
jnp
fwait
movsl
mov
sbbl
mov
hlt
jl
scas
faddl
jo
sahf
imul
cmpl
mov
lret
lret
mov
gs
in
fcomip
es
loopne
mov
sti
test
push
in
pop
cmp
nop
push
lcall
fldcw
mov
cmp
lret
imul
jo
add
aaa
push
sub
push
cmp
cld
cli
cmpb
fmuls
sarl
call
mov
cmpsl
push
xchg
push
add
lea
adc
movsb
test
cmp
test
in
lahf
aaa
insb
jns
cmp
lahf
pop
nop
int3
es
pushf
mov
in
sub
dec
push
push
mov
shll
inc
aaa
push
sarl
push
adc
fs
push
stc
xor
fsubrs
pushf
pop
popf
mov
cmpsl
ljmp
dec
pop
fidivrs
testl
stos
stos
lret
ja
ja
ljmp
mov
divb
iret
jl
stos
fcmovb
xchg
stos
notl
push
mov
addl
orl
mov
mov
shl
inc
adc
cli
ret
cmp
rorl
imul
leave
add
add
cmp
cli
in
jg
loopne
scas
cmp
test
add
lret
es
cmp
jnp
les
jmp
stc
repz
lret
sahf
cmpsl
or
or
lahf
or
cld
jae
mov
ret
cmp
add
bound
jno
mov
push
les
frndint
lea
and
jae
xchg
lahf
jne
test
rorl
fstl
jmp
push
mov
jecxz
cwtl
fistpl
ljmp
jle
jle
jae
and
jp
add
mov
jecxz
mov
xchg
lret
fldt
test
popf
inc
and
arpl
inc
mov
mov
lods
call
jl
lds
fsubl
pusha
mov
lock
pop
frstor
into
repnz
scas
pop
dec
adc
lret
call
test
or
fsubrs
in
iret
arpl
xchg
mov
sub
mov
push
imul
xor
dec
daa
aam
xor
pop
jb
adc
dec
loopne
mul
sub
imul
shll
xchg
dec
pop
shl
lret
xor
lahf
jle
push
daa
orb
push
jge
sbb
mov
mov
push
test
mov
push
ret
out
xor
les
or
into
push
add
and
dec
jns
inc
repz
jo
dec
xor
mov
jo
stos
imul
pop
cltd
sti
mov
mov
pop
jae
cltd
sbb
jno
inc
mov
lcall
add
mov
jmp
repnz
dec
lods
test
rep
lretw
stos
pop
mov
leave
jle
and
push
pusha
fwait
lods
sub
sbb
pop
fs
arpl
and
mov
scas
mov
xchg
pop
js
push
jno
std
mov
dec
push
cmp
pop
insl
push
aad
pushf
inc
adc
push
mov
orl
icebp
and
out
ds
push
subl
or
test
or
and
inc
fdivs
mov
mov
std
loope
cmp
xor
pop
pop
sub
sbb
mov
xchg
in
mov
jge
loopne
xchg
sbb
add
add
and
push
push
cmpsb
and
mov
jmp
add
test
add
inc
ss
dec
shl
pop
push
inc
out
mov
push
std
mov
push
add
test
mov
inc
and
insl
iret
mov
and
push
xchg
xor
jg
cmp
shr
out
or
mov
xchg
sbb
inc
push
bound
mov
jmp
pop
dec
daa
aad
fmull
sub
shl
pop
cmp
cmp
cltd
push
dec
out
insb
jle
sbb
push
push
js
cld
test
xchg
dec
out
fidivrs
les
aaa
out
sub
jge
cs
cmpb
mov
jge
sbb
pop
pop
pop
fcomps
aas
sub
aam
aaa
sti
mov
push
call
pop
andnps
lods
cmc
adc
lret
addr16
dec
jle
mov
aam
scas
lods
xor
pop
es
push
jmp
lods
negl
int
cld
sub
mov
insl
imul
jmp
mov
inc
insb
adc
add
push
and
mov
test
mov
sbb
jmp
lods
test
in
ds
scas
jge
hlt
mov
xor
cli
or
dec
testl
das
shl
pop
sbb
mov
dec
inc
hlt
movsl
cmc
adc
mov
sub
test
push
sbb
fcmovb
idiv
femms
int
in
push
scas
roll
decl
mov
pop
lods
sbb
inc
ret
pop
clc
or
lret
xor
lret
imul
call
fcmovnb
cmpsb
sbb
pop
xchg
dec
frstor
or
lods
mulb
rol
aam
push
fisttpl
lcall
mov
lret
and
push
leave
xor
add
dec
gs
pop
push
callw
loop
or
and
loop
adcb
sub
and
pop
out
data16
pop
dec
pop
sub
adc
lods
leave
loopne
shrl
and
mov
dec
mov
es
pop
loope
or
add
sbb
ja
lret
push
movsl
add
popf
xor
xchg
pop
rorl
mov
xchg
and
push
or
push
mov
cmpsl
lea
add
clc
int
jle
js
jae
mov
sbb
fnstsw
mov
add
inc
or
add
test
add
scas
or
jne
sarb
push
mov
sub
rolb
jle
dec
xchg
lods
test
leave
dec
sub
sbb
mov
cmpsb
xor
inc
cwtl
jns
fisubs
ja
and
and
jo
mov
cmp
cmp
outsl
test
cmp
or
mov
mov
adc
sbb
leave
aad
pop
or
loope
sbb
es
test
test
mov
push
daa
cld
jno
add
push
push
xchg
xchg
fs
in
lods
xchg
hlt
test
ds
and
loop
scas
adc
cld
cld
mov
insb
jbe
cld
cld
sub
pusha
movsl
cmpsb
ss
nop
mov
dec
test
inc
add
aad
es
xchg
in
or
jge
pop
push
out
xor
jp
xchg
push
in
and
jmp
push
test
je
xor
xor
push
push
jp
mov
dec
mov
stc
push
fisubs
cmp
lds
pop
daa
ftst
mov
mov
inc
push
lock
inc
inc
dec
cmp
xchg
inc
cs
jle
sub
je
pusha
and
pop
lds
int3
mov
mov
jecxz
xchg
push
add
push
xor
jbe
mov
rcrl
and
out
outsl
xchg
xchg
or
cmc
mov
jne
mov
dec
jb
push
imul
out
std
add
inc
add
jmp
xchg
inc
mov
lods
call
xor
mov
imul
mov
xor
mov
xchg
les
mov
lret
sbb
jo
out
pop
dec
mov
insb
lcall
push
mov
mov
cmp
fimuls
mov
pop
andl
fimuls
dec
mov
dec
je
negb
imul
data16
push
fnstenv
arpl
outsb
cmp
pop
imul
cwtl
mov
inc
fistpll
add
imul
imul
inc
in
and
sbb
pop
stc
add
add
inc
mov
and
cmc
mov
add
dec
adc
mov
pop
fdivrp
bound
xor
and
scas
and
rcrl
out
ss
loop
sbb
adc
cld
pop
call
sub
push
pop
push
shrb
mov
push
mov
inc
ret
mov
or
std
add
jns
repnz
repz
test
sub
in
outsl
fwait
dec
push
mov
push
mov
sub
and
mov
ds
int3
sub
jg
mov
or
outsb
test
xchg
pop
nop
mov
cmp
xchg
test
fwait
xchg
in
icebp
jbe
adc
jae
in
push
nop
or
xlat
fdiv
sub
out
mov
add
cmp
push
jmp
dec
xchg
imul
ret
in
jg
dec
sbb
push
mov
xor
mov
cmpsb
or
scas
loop
cmpb
addr16
inc
xor
addl
scas
push
or
mov
jl
jmp
and
mov
add
sub
mov
filds
xor
push
push
push
sbb
cwtl
or
out
lcall
mov
subb
out
sub
repz
inc
fbld
push
cltd
sbb
inc
inc
pop
jbe
shr
inc
ret
inc
push
cld
cmp
testl
mull
ffree
fstps
aam
sub
pop
dec
dec
call
call
sub
stos
aaa
xor
jle
rcl
mov
mov
jg
xchg
dec
mov
add
lods
mov
or
ja
aaa
jmp
inc
mov
mov
mov
xorl
fwait
aad
imul
into
jb
add
push
lock
xchg
pop
je
sbb
dec
lock
shrb
jae
movaps
pusha
pop
jo
rcll
sbbb
and
movsb
xchg
dec
lcall
fs
cmp
dec
pop
dec
rclb
sbb
xor
insl
mov
rcl
jle
jp
lds
inc
xchg
int3
jmp
inc
adc
ljmp
cmp
aam
pop
out
in
mov
cmp
mov
push
test
ret
add
add
mov
cmp
jle
xor
sub
jp
add
test
add
movsb
arpl
push
loope
inc
clc
and
mov
insb
push
jbe
ret
dec
cmp
sbb
jmp
fprem1
leave
je
cmp
mov
push
mov
adcl
mov
inc
push
test
lcall
jecxz
mov
xor
xchg
push
in
or
pop
adc
jne
les
aaa
shl
sbb
sub
out
push
xor
inc
pop
cmp
cmpb
in
lock
xor
mov
or
cwtl
sub
dec
inc
xor
mov
xor
idivb
adc
out
or
xchg
adc
mov
rcll
add
add
adc
hlt
mov
sbb
iret
enter
clc
or
dec
mov
loop
in
call
xor
xchg
mov
cltd
sub
xchg
aaa
das
jle
jae
mov
sbb
jl
pop
lcall
adc
sub
pushl
gs
dec
or
pop
xchg
lahf
push
adc
jp
jp
andl
icebp
arpl
shrb
lcall
mov
fwait
xor
and
pop
or
icebp
or
ror
out
sbb
add
mov
ja
sar
jp
xchg
pushf
add
adc
movhps
push
das
xchg
test
xchg
sbb
mov
dec
test
cli
inc
mov
sub
cmpsb
clc
cmpsl
and
jb
xchg
adc
lahf
faddl
xchg
fmul
into
lret
lahf
or
sub
dec
xchg
mov
scas
fincstp
dec
add
dec
add
jp
and
add
dec
mov
leave
mov
dec
repz
dec
adc
mov
jno
int
mov
jo
mov
sub
dec
mov
dec
rcrb
or
cmp
push
ror
stos
add
fsubrs
xchg
lret
and
mov
out
pop
adc
loop
sub
dec
in
xor
dec
lcall
pusha
adc
fnsave
sub
in
cmp
fsubrl
mov
xchg
dec
mov
and
test
aaa
aam
inc
adc
mov
or
mov
lcall
push
add
add
sbb
out
idivl
mov
xor
movsl
add
test
add
shll
sub
xchg
orl
lock
cmpsl
sub
pop
add
stos
push
in
test
cmp
pop
xor
lea
add
push
dec
dec
imul
jno
pop
push
cmpsl
jae
jle
call
sub
pop
mov
sbb
or
aad
fs
or
rclb
push
jne
push
ss
push
filds
jg
pop
imul
jns
std
jno
xor
loope
fiaddl
aas
cmp
push
jmp
add
out
cmp
cmpsl
xchg
xchg
lahf
flds
outsl
es
push
jge
lahf
pop
fcompl
mov
dec
divl
repz
adc
cs
mov
pop
mov
repz
ss
repnz
adc
test
push
pop
xchg
lret
fs
hlt
fs
popa
mov
imul
subb
sub
push
push
lods
rclb
and
fcoms
lahf
cli
push
rcrb
mov
imul
xchg
dec
jnp
loope
sti
jo
and
cmpb
les
cmpsl
adc
inc
sub
leave
aam
test
or
dec
rol
mov
stc
add
jl
mov
cmp
out
movsl
les
push
pop
sub
jno
push
cltd
xchg
push
mov
out
push
jb
insb
mov
roll
dec
mov
test
out
fldlg2
movl
insb
add
lahf
data16
inc
mov
adc
push
dec
cmpsl
jns
call
lcall
ffreep
test
push
xchg
ss
cmp
in
mov
mov
xchg
gs
mov
push
cmc
lods
and
add
xchg
adc
ljmp
mov
push
ss
inc
insb
push
push
fcoml
mov
pop
push
inc
pusha
add
push
repnz
mov
rcl
and
fdivrs
fwait
mov
jp
or
pop
out
jmp
dec
jg
movsb
fcmovnbe
adc
jecxz
mov
push
add
ret
aaa
cltd
mov
ret
mov
aaa
mov
inc
sub
mov
lea
mov
adc
xor
cmp
sub
rolb
add
sbb
fsin
out
gs
idiv
cli
lcall
add
add
push
js
shrl
mov
repz
xchg
aas
jmp
imul
stos
popa
fs
dec
fnstcw
and
in
and
cmp
pop
insl
stos
mov
mov
mov
xor
insb
fisttpll
mov
sub
mov
push
adc
push
repnz
fucom
bnd
test
cs
or
out
sar
push
xchg
test
lcall
inc
imul
mov
mov
rcrb
pop
xchg
outsl
jge
js
and
dec
lcallw
pop
movsb
xchg
mov
inc
adc
enter
orb
mov
push
nop
cmp
and
lea
hlt
mov
out
xor
mov
aas
pop
pop
clc
mov
pusha
mov
fsubrs
pop
das
ret
mov
fcoml
xor
iret
cmpsl
pop
mov
sbb
arpl
and
mulb
test
sub
test
xchg
scas
aad
sbb
sbb
into
adc
xchg
mov
dec
and
mov
jge
inc
add
sbb
cltd
das
xchg
jno
das
and
shl
cmp
or
cmc
pop
pop
lods
sub
pop
mov
cli
std
inc
jg
mov
dec
mov
stos
iret
jb
sub
adc
shll
aaa
scas
imull
mov
pop
inc
loopne
fsub
push
adc
mov
scas
adc
jle
push
adc
mov
jns
lcall
cmc
outsl
inc
nop
pop
lret
mov
sti
fsubl
repz
xchg
push
push
icebp
inc
test
sbb
out
mov
sbbb
cmc
js
mov
inc
cmp
pop
jle
jp
sbbl
jl
mov
or
jge
scas
xor
or
jbe
xor
add
iret
sub
cwtl
jmp
mov
fmul
mov
sub
mov
mov
leave
adc
xchg
jbe
jle
out
push
ss
jmp
jg
inc
cmp
jne
jo
popf
or
in
jo
cmpsl
cmpsb
cmp
cmp
icebp
sar
ret
pcmpeqd
loope
jg
cld
dec
pcmpgtd
inc
insb
hlt
dec
mov
xchg
lcall
loopne
and
fistl
adc
mov
add
add
fsubs
jmp
adc
sub
call
add
xchg
addr16
adc
dec
icebp
dec
iret
push
sti
push
xchg
adc
mov
dec
or
scas
rclb
movsl
lock
mov
dec
push
mov
adc
adc
pop
ljmp
mov
test
adc
add
std
jno
dec
test
test
add
sbb
lahf
add
xchg
mov
push
adc
shrb
ljmp
shl
popf
sarl
and
ljmp
hlt
mov
dec
pusha
mov
out
or
adc
lea
adc
pop
ret
movsl
out
inc
js
inc
mov
adc
xorb
gs
mov
pushf
jbe
hlt
shrl
mov
mov
aad
lret
mov
lret
push
ret
xor
cmc
out
clc
sub
sub
pop
imul
loope
cmp
popa
pop
mov
adc
fisubrl
imul
dec
scas
add
insl
push
test
movsb
enter
gs
adc
add
call
addr16
mov
add
into
pop
popa
int
mov
add
mov
fsubrl
inc
sbb
in
lock
jbe
loop
out
loop
and
into
mov
addr16
inc
mov
lods
mov
sbb
pop
jp
in
inc
mov
sbb
je
in
lcall
jl
adc
incb
dec
mov
adc
orl
js
or
bound
lret
aam
aam
outsl
pop
cmpsl
xor
add
mov
mov
inc
pop
out
movsb
outsb
mov
popa
sub
das
mov
out
imul
mov
ret
ret
xor
ret
sbb
test
fwait
std
jne
decl
mov
es
push
lea
fcmovnu
xchg
fmull
lds
sbb
in
xor
imul
rdtsc
fldenv
xchg
or
pop
pop
xchg
push
mov
in
xor
jno
mov
jg
es
test
push
cli
das
test
frstor
sbbb
and
lea
or
es
push
in
sub
fsubr
add
sub
aaa
or
outsl
inc
daa
call
pop
lods
or
rclb
xchg
add
push
and
xor
add
add
push
addr16
decb
pushf
cltd
fsub
jnp
out
dec
push
lock
pop
iret
pop
mov
fdivrl
bound
xchg
lcall
inc
enter
sti
je
cmp
pop
xor
testb
push
mov
fdivs
in
push
mov
test
xor
mov
mov
add
orb
in
loopne
add
xor
xchg
out
jno
push
pop
jo
int3
add
pop
sub
int3
out
in
mov
insb
addr16
sarb
xchg
jne
xlat
decb
jecxz
xor
mov
out
cld
jns
je
mov
aas
pop
ds
out
decb
into
mov
xchg
mov
jne
pop
lods
cld
mov
dec
mov
je
and
cs
sub
inc
shll
into
and
push
mov
mov
xchg
lock
cmpsb
dec
adc
test
xor
rolb
push
in
mov
push
jne
outsl
repz
jae
cmpsl
fdecstp
ret
jns
push
rclb
mov
mov
lock
pop
jne
xlat
mov
sub
cmp
popa
mov
dec
sti
inc
fbstp
movsl
dec
mov
xchg
push
movsl
cld
push
and
rcrb
inc
mov
shlb
pandn
out
cltd
adc
shll
out
push
push
in
in
cmpsl
mov
pop
or
push
add
xor
jne
loop
cmp
gs
leave
cmpsb
xor
dec
cmp
neg
lds
addl
adc
sbb
roll
pop
pop
push
push
popl
or
sub
repnz
repnz
xorb
out
lret
adc
data16
or
lcall
fstl
sub
push
mov
lret
lock
ss
dec
dec
in
pop
movsl
cs
push
repz
inc
pop
stc
adc
roll
jno
std
ret
sbb
cmp
xchg
addr16
fs
popf
jmp
mov
xchg
test
xor
loope
inc
and
and
push
sub
lea
arpl
dec
aas
xchg
cmp
jg
and
add
pop
mov
jg
popa
hlt
mov
inc
adc
add
icebp
dec
mov
xchg
sbb
and
lret
insl
mov
xor
xor
sub
xor
xchg
add
call
and
movb
gs
mov
mov
iret
mov
sbb
xor
sahf
sub
lds
ficompl
fsub
jmp
mov
and
test
xchg
scas
movsb
fsub
push
or
stos
cmpsl
inc
inc
subb
lods
scas
pop
mov
cmpsl
jg
and
rorb
mov
insb
inc
and
xchg
and
cmpsl
jnp
loopne
and
xchg
lret
fimuls
fstpt
repz
jo
push
jl
push
adc
xchg
in
orl
push
cmpsl
subl
jae
leave
and
out
mov
xor
xchg
xchg
sti
mov
pop
divb
pop
in
add
xor
test
add
mov
mov
popa
mov
sbb
in
sub
xchg
inc
jnp
push
mov
inc
shrl
xor
icebp
jnp
iret
sbb
pop
inc
mov
mov
out
ljmp
insb
mov
sbb
call
mov
movsl
movsb
fnstenv
repz
jg
or
and
dec
push
and
cltd
out
leave
pop
and
push
leave
jmp
mov
aad
pop
pop
jge
or
lds
pop
fs
sbb
out
pusha
push
and
dec
int3
xor
sub
jb
rcrl
add
push
arpl
gs
adc
push
cmc
popl
sbb
arpl
stos
clc
xor
dec
mov
inc
mul
loop
pushf
dec
fcomi
push
pushf
inc
lods
sub
lcall
sbb
mov
jb
cmp
icebp
sub
ret
imul
bound
pop
leave
pop
xchg
push
xchg
dec
jl
int
mov
inc
repz
jae
add
test
in
lea
scas
rdtsc
fisttpll
cmp
xchg
popa
outsb
and
mov
aad
ret
pop
mov
pop
mov
adc
mov
shlb
add
icebp
call
jg
xorl
inc
shll
fiaddl
push
out
adcl
mov
fwait
mov
cmp
mov
add
add
pusha
jbe
out
fnstsw
cmp
xchg
cwtl
mov
add
test
rorb
scas
jle
pop
int3
aas
dec
sbb
out
sub
sbb
cmp
pop
out
in
sbb
cld
enter
sbb
cmp
lcall
imul
repz
stc
mov
js
inc
mov
push
popa
push
add
xchg
jnp
pop
sbb
mov
out
cmpsb
cld
add
shll
jae
mov
inc
sbb
je
mov
mov
lods
lods
push
pop
addr16
hlt
in
adc
adc
xor
cmpsl
push
leave
clc
inc
test
sbb
repz
lret
cmp
lcall
fnstcw
mov
iret
lea
dec
xchg
frndint
jle
xorl
ficoml
sahf
lods
inc
sti
cwtl
leave
dec
dec
sub
jmp
andl
rclb
jns
popf
hlt
xchg
repz
xor
bound
arpl
inc
insl
call
out
aam
adc
inc
lods
add
pop
pop
dec
repz
outsl
repnz
adc
jns
dec
mov
adc
sub
mov
mov
rep
xchg
mov
lods
sbb
xor
mov
mov
fisttps
jl
dec
jl
adc
push
mov
subl
gs
adc
inc
jecxz
mov
ds
adc
and
push
inc
xchg
xchg
cmp
loopne
cmp
sbb
lock
lock
jl
cli
mov
es
pushf
pop
sub
in
sub
sti
mov
nop
mov
aad
xor
fstpl
scas
cmp
testb
scas
cmp
es
push
aas
pop
adc
cmpsb
loope
ja
cwtl
jp
jp
loop
pop
popa
inc
pop
aad
js
sbb
mov
loopne
mov
inc
push
cmpsb
or
les
insb
sbb
jnp
dec
aaa
jl
int3
int
mov
sti
popa
pop
into
cmp
arpl
or
cmpb
adc
in
dec
dec
mov
incl
xor
xchg
dec
sub
cmp
jmp
sbb
dec
nop
add
hlt
in
mov
in
mov
jmp
push
xlat
jae
mov
cmp
je
movsl
in
out
repz
pop
ret
out
dec
mov
add
add
pop
lcall
inc
adc
and
add
mov
ja
dec
into
lock
xor
cmp
cmpsl
xorl
xchg
adc
daa
fnstenv
out
iret
sub
sbbl
pop
pop
xor
loope
fildll
xor
push
mov
mov
rol
add
aad
pop
pushf
push
sub
ljmp
lahf
inc
bnd
jge
bound
out
or
movsl
loop
cmp
adc
loope
sub
out
in
ljmp
inc
cmp
leavew
jae
push
dec
cmp
sti
mov
lock
mov
mov
ljmp
inc
div
dec
add
mov
lock
inc
adc
cwtl
ljmp
loope
inc
xor
dec
and
dec
leave
push
adc
and
jb
xchg
xchg
fadd
test
stos
jle
int3
dec
aad
push
test
mov
xchg
movsl
shll
mov
xchg
ljmp
lea
out
adc
add
mov
mov
iret
cmp
add
inc
sarb
in
mov
idiv
sbb
jo
fstp
inc
sub
push
mov
movsb
addr16
out
ret
out
jnp
movsl
addr16
ja
sub
fldcw
or
hlt
xchg
sub
or
enter
data16
hlt
nop
cmpsb
push
jb
xchg
and
mov
out
jge
lea
mov
xchg
lock
icebp
ja
xor
ja
and
movsb
stc
xchg
std
or
inc
inc
mov
es
out
add
sub
pop
cmp
popa
cmpsl
cli
icebp
cmp
xchg
test
jp
xchg
jmp
sub
scas
mov
and
nop
xor
out
aam
pop
and
pop
pop
mov
int
lea
push
fbstp
faddl
dec
mov
dec
and
test
xchg
movsb
ret
cwtl
push
pop
rorl
clc
shrb
inc
cmovnp
jne
mov
mov
sbb
mov
mov
aam
adc
loope
pop
mov
aad
dec
and
test
lret
cmc
inc
xor
addr16
push
xchg
inc
cmp
or
leave
jg
add
add
outsl
daa
insl
push
push
stos
adc
int
mov
add
add
insl
test
mov
mov
jmp
add
fwait
hlt
jno
cmp
cmc
cmc
pop
sub
loope
movsb
push
es
cmp
fisttpl
xchg
push
loop
pop
push
xchg
aad
loop
xchg
push
jmp
inc
mov
sbb
or
add
ror
bnd
divb
stc
lods
xchg
add
out
pop
cmpsb
mov
mov
jns
loop
icebp
gs
cmpsl
mov
sbb
xchg
out
cli
push
enter
call
cmp
push
dec
daa
pop
iret
dec
pop
andb
into
enter
scas
cmp
lods
jne
pop
xlat
das
mov
ljmp
rclb
mov
push
enter
in
add
sbb
mov
lret
jmp
orl
aad
out
push
aaa
les
pop
aas
imul
mov
ret
addr16
mov
loopne
les
pop
add
and
inc
mov
cmpsl
pop
dec
dec
test
addl
out
cmpb
sub
aaa
fcmovu
push
test
jno
xor
jge
nop
add
sub
mov
fiadds
out
in
insb
sub
out
lods
mov
push
dec
int
lods
data16
cmpsb
and
arpl
jl
dec
mov
adcl
aaa
sarb
fildll
mov
mov
loope
sub
cld
xchg
pop
jge
add
jbe
cltd
popf
popf
jne
lock
sub
int3
loopne
push
pop
jl
jne
repnz
pop
faddl
pop
inc
push
jg
mov
imul
or
lcall
mov
and
mov
lods
cmp
mov
daa
pop
dec
nop
loopne
leave
push
jge
add
sti
mov
leave
or
mov
fidivs
mov
into
sub
dec
lods
jmp
test
pop
leave
xchg
and
mov
iret
push
xchg
dec
stos
repnz
call
adc
movsb
fsubrl
clc
pushf
adc
jge
loopne
pfsubr
aam
mov
clc
insb
out
shrb
mov
mov
xor
stos
movsl
add
or
pop
ret
in
into
dec
adc
mov
repz
sbb
hlt
xlat
mull
pop
cld
sahf
inc
shlb
add
add
pop
and
mov
out
add
insl
pop
daa
mov
add
jb
pop
jmp
push
cld
movsl
jecxz
adc
dec
jle
jle
scas
add
mov
imul
aas
push
pop
dec
sbb
pusha
pop
pop
lcall
je
cmp
jbe
xor
fistpll
adc
pop
pop
jmp
inc
cmp
push
jg
xchg
pop
lahf
call
and
rcpps
idiv
mov
stc
mov
push
dec
arpl
outsb
dec
inc
cli
push
jb
xchg
jge
xor
push
mov
ss
call
push
gs
jo
mov
jb
xlat
pop
sub
or
fsts
repnz
or
enter
int3
and
add
cltd
cmp
imul
rep
fbld
dec
jp
adcb
daa
es
sbb
sbb
mov
jno
leave
je
adc
stc
orl
mov
cwtl
and
movsl
inc
lret
out
sbbb
push
xlat
pop
pushf
fsubrs
adc
xchg
jl
lds
xchg
and
or
sub
xchg
push
push
movsl
std
push
xor
cmpb
pop
aam
sub
bound
mov
sar
add
mov
sbb
cmc
frndint
fsubl
lahf
insb
fcoms
loope
mov
mov
push
xchg
std
pop
lds
lock
test
sbb
dec
lret
cmp
mov
xor
xor
add
xor
std
jno
fisttpl
lods
xor
add
mov
leave
stc
nop
out
push
push
dec
jb
aad
outsl
pop
pop
xchg
inc
cmp
das
cmpsl
inc
and
inc
dec
pop
rcrb
dec
je
dec
push
or
or
adcl
fadd
jecxz
repnz
sti
xchg
ds
jns
sub
pop
and
xchg
adc
add
dec
frstor
loopne
add
jge
sub
pcmpeqw
sbb
or
inc
pop
mov
sti
cmc
aam
arpl
fsubl
fsubrl
or
push
jl
imul
mov
mov
xlat
outsl
push
jnp
int3
or
sbb
sbb
fildll
mov
int
dec
jmp
in
dec
mov
in
test
lret
shrl
ljmp
cmpsl
jae
repnz
jnp
jmp
inc
pop
dec
testl
cmp
mov
mov
mov
add
flds
jns
push
jecxz
or
nop
daa
mov
ficoml
out
mov
ds
psubw
rcll
mov
rep
mov
push
mov
aaa
cmpsb
rorb
outsb
jae,pt
jbe
movsl
andl
int3
xor
xor
xor
cld
ja
loope
ljmp
cmc
xor
mov
cli
mov
jmp
sbb
leave
push
icebp
xchg
sbb
or
or
in
scas
jnp
mov
leave
data16
push
in
jle
xor
mov
mov
fdiv
cmp
ret
jg
push
gs
inc
mov
or
mov
unpckhps
sub
push
std
incb
aas
lods
mov
enter
rol
sub
jo
mov
jmp
sar
shlb
dec
pcmpgtb
mov
insl
rolb
pop
dec
stos
pop
cmpsl
lret
rcll
loop
leave
mov
cmp
bnd
repz
pop
or
imulb
stc
fwait
or
dec
dec
pop
push
lock
mov
push
or
out
loope
aas
and
cmp
sub
jecxz
lcall
or
mov
adc
sbb
mov
dec
and
cmp
ljmp
jns
xorl
adc
push
data16
push
jne
fiadds
xchg
push
test
aad
lcall
in
inc
repz
add
aas
and
pop
mulb
cmp
dec
push
mov
push
inc
leave
clc
jecxz
mov
sbb
aaa
add
imul
jne
or
and
out
dec
sbb
test
stos
and
adc
and
cmpsb
jmp
mov
test
mov
ss
sbb
sub
or
sub
arpl
testb
xor
dec
cmp
or
fisubs
mov
sahf
mov
jae
mov
scas
ret
pop
jb
mov
int3
xchg
dec
in
xchg
mov
sar
in
sti
cmpsl
mov
inc
hlt
stos
dec
xor
add
dec
push
and
mov
push
add
add
push
fwait
add
sahf
out
jle
dec
add
add
sbb
jge
mov
hlt
cmpsb
xor
add
les
jne
mov
adc
dec
cmpsl
cmp
mov
mov
int3
push
dec
or
inc
adc
jge
test
add
jp
jg
addr16
jnp
xchg
or
inc
lock
add
and
or
inc
leave
sbb
shrl
add
je
xchg
or
inc
sub
in
mov
inc
data16
push
inc
test
js
xchg
jp
fildl
or
push
mov
aas
xor
rcll
xchg
mov
cmpsl
dec
xchg
ja
adc
xchg
js
cwtl
xchg
jne
mov
push
push
faddp
xchg
in
inc
jle
sub
cmp
cmp
cs
push
mov
notl
cmpsl
mov
inc
push
or
push
cmp
cmpsl
imul
jo
xor
xchg
mov
xchg
arpl
sbb
dec
dec
xchg
xor
pop
shll
jmp
rorl
sahf
bswap
mov
add
sub
sbb
pop
ret
xor
add
mov
sbb
cmp
cli
push
dec
arpl
pop
mov
test
lea
xor
or
adc
ds
xchg
roll
jo
mov
xor
sbb
scas
fs
xor
mov
loop
lahf
push
xor
jns
pop
adc
aam
jmp
outsb
rorb
je
mulb
or
insb
jnp
aaa
mov
jp
pusha
mov
pop
jo
cltd
add
adc
fimull
jbe
ljmp
mov
repnz
push
push
jmp
pop
lahf
inc
shrl
divl
dec
aam
lods
jmp
insl
imul
mov
xor
mov
lret
sahf
iret
dec
add
mov
dec
test
popl
dec
nop
mov
mov
mov
push
mov
notl
lret
popf
mov
enter
inc
popf
iret
mov
push
loopne
mov
jecxz
stc
lock
notb
out
mov
inc
push
dec
mov
adc
enter
mov
xor
pop
jl
lret
insb
jecxz
rolb
out
pop
inc
cltd
loop
add
add
mov
xor
cmp
add
pop
pop
mov
ss
sub
sub
xor
dec
nop
fucomip
mov
inc
jmp
in
dec
pop
xchg
movsl
les
scas
dec
fisubrl
mov
lock
test
xor
outsl
or
push
cmc
pop
int3
add
or
mov
adc
jge
add
and
ljmp
loop
push
rcrb
mov
les
mov
fidivs
pop
pop
shll
mov
and
dec
xchg
movsl
or
push
aam
daa
mov
movsl
mov
push
lods
or
pushf
push
fsubs
data16
dec
push
sub
or
xor
jmp
mov
fldenv
test
lods
pop
scas
push
mov
pop
add
jmp
cmp
cmp
jno
xchg
enterw
xor
imul
test
sub
fisubs
jmp
dec
pop
mov
inc
dec
adc
jno
inc
pop
jmp
sub
xchg
int3
in
aas
test
jl
mov
dec
pop
xor
jg
xchg
rcr
dec
into
mov
cmc
fisubrl
fsubs
sbb
sub
xor
sbb
inc
adc
loopne
stos
mov
mov
int3
loopne
and
orb
mov
aad
mov
and
repnz
or
out
cmp
and
daa
rcrb
xor
mov
and
out
adc
hlt
iret
pop
sar
insl
adc
lea
push
out
mov
test
dec
jne
scas
jmp
push
loope
cld
pop
imul
jb
shll
inc
lahf
dec
pop
jo
mov
add
fwait
inc
xor
sahf
jp
adc
das
xor
and
lcall
mov
das
push
cmpsl
lds
aaa
xchg
mov
mov
pop
or
cmpsb
popf
js
stos
sbb
mov
test
sub
shll
inc
dec
inc
hlt
pushf
and
jae
dec
leave
xor
imul
enter
pop
es
test
inc
and
mov
std
movsb
jecxz
lcall
pusha
out
dec
xchg
neg
mov
nop
mov
imul
insl
sub
dec
xchg
add
dec
inc
mov
in
stos
clc
adc
mov
cmpsb
cmp
add
test
add
lea
popf
push
sahf
push
div
push
imul
into
sbb
xchg
adc
les
xor
mov
pop
cld
sbb
cmpsb
lods
push
lahf
pop
or
in
lret
cmp
das
cmc
pop
out
fistpl
cmpsb
pop
and
jae
dec
jns
xor
adcl
add
in
mov
ja
sub
mov
ret
and
cmc
add
cmp
jge
lret
jmp
test
lret
inc
pop
lcall
outsl
sti
and
dec
xchg
in
lods
mov
sbb
sub
rolb
test
dec
test
aad
mov
retw
push
sub
jns
adcl
scas
cs
hlt
aaa
sar
loop
inc
jp
cmp
push
dec
jle
mov
or
loop
or
mov
and
pop
push
loop
cld
push
scas
cwtl
loope
and
push
ret
aam
ja,pn
aam
cmpsl
mov
enter
js
jnp
mov
lods
pusha
mov
std
popf
icebp
pop
std
xor
outsb
mov
mov
pop
mov
dec
les
add
mov
jae
mov
sub
push
sbbb
cmp
cld
and
loope
ret
es
cmp
push
adc
fdivrs
movsl
pop
iret
xchg
xchg
cmp
mov
jmp
shrb
mov
out
cmpsl
pop
rolb
mov
push
inc
stc
mov
dec
enter
aaa
iret
scas
jp
jmp
mov
sbb
test
cwtl
pop
mov
jle
leave
sbb
das
mov
push
fs
std
add
cmpsb
stos
jmp
pop
jne
sbb
sub
sbb
insl
mov
loopne
cmp
jns
mov
adc
enter
stos
pop
dec
pop
fstps
push
test
rolb
call
icebp
dec
xor
adc
pop
adc
test
cmp
mov
lock
mov
dec
inc
dec
jmp
jmp
pop
sub
mov
or
imul
lahf
inc
jae
xor
inc
jl
pop
dec
push
jbe
inc
arpl
ds
jne
in
dec
dec
mov
add
stos
jo
dec
cli
fldcw
loopne
adc
test
add
jmp
adc
mov
loope
mov
add
dec
inc
and
in
push
jl
jo
dec
pushf
xlat
mov
sbb
ljmp
ja
cmp
hlt
add
mov
inc
js
ret
ja
jns
out
mov
out
repz
xor
sti
into
mov
out
mov
inc
jmp
scas
inc
pop
pop
adcb
mov
fistl
cmpb
cmp
insl
test
or
push
mov
cmc
mov
arpl
xor
xchg
stos
add
pop
fs
jmp
jo
out
xchg
push
mov
dec
cmp
adc
mov
daa
aas
lret
int3
insl
outsl
inc
pop
orb
stc
gs
xchg
mov
pop
and
call
aad
sbb
rorl
xchg
outsb
rorb
mov
out
ret
cmp
and
out
fmuls
mov
mov
mov
and
mul
ficoms
dec
xchg
gs
and
jne
xchg
sarl
fiaddl
popa
push
inc
jno
jg
cmp
xor
stc
mov
pusha
sbb
xor
sbb
int
xchg
clc
fsubrp
into
out
insl
popl
mov
mov
clc
mov
idivl
dec
cmp
stc
inc
inc
mov
push
jmp
xorb
stos
arpl
jnp
mov
adc
stos
outsl
ffreep
je
imul
imul
mov
js
std
push
adc
call
fsubl
mov
push
xor
mov
xor
add
xor
push
cmp
dec
neg
jge
fcmovne
icebp
imull
leave
pop
popf
daa
xor
jg
push
jge
sub
pop
mov
jnp
mov
aaa
push
in
movsb
push
outsb
fs
dec
cmp
dec
xchg
jno
pop
stos
outsl
cli
shll
jp
lods
inc
and
fstp
add
orb
push
inc
cs
arpl
xchg
push
push
mov
add
xor
dec
jnp
add
sti
xchg
inc
mov
fstps
inc
fnstcw
add
es
cmpsb
and
xchg
out
dec
sti
cmp
enter
cmp
adcb
fiaddl
cltd
xor
sbb
add
add
push
dec
pop
xchg
js
mov
inc
leave
add
test
add
mov
imul
add
loop
push
call
dec
jnp
loop
out
in
adc
add
fcom
mov
dec
scas
loope
jecxz
xchg
popf
bswap
xchg
pop
int
add
mov
cmp
xor
mov
sbb
cmpl
and
jb
jle
out
adc
jns
jno
shr
insb
pop
dec
dec
sbbl
push
push
cli
sbb
decl
or
inc
cmp
cld
push
jp
inc
pop
jne
ss
xchg
dec
inc
adc
xchg
cmp
repnz
rolb
pop
popa
adc
cmp
jnp
cltd
cmpsl
cmpsb
aas
jns
sbb
clc
and
roll
jecxz
loope
mov
icebp
gs
xchg
mov
popa
in
lahf
and
xchg
dec
sub
out
dec
or
push
stos
cmp
dec
ja
sub
mov
out
psubq
pop
inc
mov
jne
sub
lods
xchg
jg
adc
cmp
sub
sbb
cmp
pop
fcomps
lods
sbb
bound
add
cmpsb
push
mov
xchg
cmpsb
push
mov
stc
movsb
push
out
jmp
rcrl
mov
push
inc
aas
inc
mov
loopne
shlb
mov
incb
add
pop
push
imul
ljmp
jb
dec
inc
pop
cmpsb
gs
fsts
inc
setnp
in
ss
fsubrs
cld
fcompl
jns
sahf
xor
jns
enter
in
mov
cmpsb
xchg
jp
add
test
push
dec
add
daa
lock
mov
stc
mov
mov
loope
sub
mov
and
cmpsb
cmp
aas
aaa
jg
xorl
data16
into
subb
stos
mov
stc
mov
out
pop
xchg
add
repz
dec
dec
adc
jae
mov
pop
movsb
scas
dec
xor
add
mov
rcrb
jle
or
cmp
maskmovq
negl
shll
mov
ljmp
cmp
adc
sub
sbb
repnz
dec
push
aas
push
dec
test
aaa
mov
popa
orb
xchg
sbb
lods
into
push
inc
and
fs
push
or
loop
xchg
xor
bound
dec
sub
pusha
mov
mov
add
or
dec
mov
jo
lea
add
test
add
ljmp
mov
pop
xchg
int3
and
repz
fdivs
add
out
cmc
inc
cmp
jle
mov
cmp
test
cwtl
jbe
clc
xchg
fldl
fdivl
leave
js
mov
fs
es
jmp
adc
pop
add
xor
cmc
cmc
and
leave
jae
inc
sbb
int3
xor
pop
hlt
scas
fsubrl
pop
sbb
jge
aas
mov
push
jo
and
sub
cmpb
cmp
aaa
xchg
adc
pop
ja
mov
dec
mov
fistpll
pop
cmpsb
test
pop
filds
clc
dec
ret
add
mov
xor
fidivs
xor
fstpt
cs
into
add
scas
ljmp
or
mov
and
loop
adc
pusha
cmpsb
push
xlat
mov
in
pusha
imul
fmul
test
insb
jne
sbb
outsl
adc
mov
loope
inc
and
dec
push
imul
arpl
ret
out
and
push
cld
mov
repnz
imul
push
popa
jns
or
shl
xorl
add
int
mov
imul
lret
jae
inc
aad
in
push
mov
dec
mov
ja
shr
sub
rclb
and
sbb
jge
fimull
clc
cltd
fisttpl
loope
js
mov
jo
stos
and
push
bound
lret
test
push
cmpsl
fiadds
push
push
inc
sub
push
mov
lods
test
aas
adcb
testb
cmp
xchg
data16
add
es
add
push
adc
repnz
cmc
sub
mov
aaa
out
mov
cmpsb
push
scas
fisttpll
inc
sarb
jb
xor
enter
cwtl
xchg
push
out
test
test
cld
push
or
mov
adc
sbb
mov
leave
movsb
mov
xor
sub
movsl
and
sbb
test
bound
or
dec
pop
clc
mov
dec
mov
sbb
mov
enter
add
add
and
dec
repz
fldt
jno
lods
rorl
add
fsubs
and
cmp
cmpsl
mov
cmp
imul
add
fmulp
dec
mov
sbb
dec
negl
jecxz
cmp
test
pop
addl
xor
mov
add
ret
mov
cmp
gs
mov
mov
adc
mov
jne
sbb
test
xchg
add
rorl
pop
clc
adc
mov
xorb
lods
pop
and
aam
mov
sbb
in
in
or
adc
pop
arpl
and
xchg
pop
jl
stc
cmp
or
vpaddw
pop
out
movsl
jns
bswap
push
cltd
test
pusha
fwait
sbb
push
movl
or
xor
xchg
aas
aas
out
mov
test
sahf
push
push
pop
sbb
std
jl
push
add
ljmp
inc
xchg
push
pushl
or
aas
fnstenv
lahf
aam
mov
adc
cmp
mov
lcall
fisttps
adc
push
scas
sbb
jp
pop
int3
ja
mov
mov
add
sub
daa
inc
pop
imul
sub
je
push
stos
les
add
cmp
sub
scas
xor
adc
add
add
dec
cs
sub
out
mov
data16
iret
or
insl
loopne
dec
sub
xor
lahf
das
ds
leave
stos
call
jo
loop
jno
and
and
loop
fstl
mov
adc
dec
add
jecxz
jno
std
or
les
add
adc
jbe
aam
xlat
mov
inc
pusha
pop
rcrb
fstp
xor
mov
faddl
sbb
jmp
imul
outsl
mov
adc
out
xchg
xor
inc
adc
jo
pop
mov
or
pusha
add
repz
mov
in
popf
sub
aas
arpl
ret
push
pop
shlb
xor
cmc
and
add
stc
sub
xchg
adc
hlt
ds
imul
dec
lret
es
jns
mov
mull
roll
jg
imul
add
lcall
mov
in
mov
test
add
lar
in
and
inc
and
add
ds
fs
imul
stc
mov
adc
sub
mov
repz
adc
inc
sub
les
lahf
pop
popa
clc
adc
dec
xchg
xchg
lcall
xor
js
cli
jns
mov
sub
loopne
aad
dec
jge
jo
mov
mov
xor
adc
jle
pop
xchg
xchg
sub
pop
aad
aaa
jo
jno
pushf
dec
scas
push
dec
fbstp
push
idivb
ror
jnp
setp
sbb
cmpsb
and
jns
cmp
push
push
shlb
es
cmpb
cltd
test
pop
dec
jmp
and
into
xchg
mov
cmp
fmuls
add
pop
sarb
xor
repnz
adc
inc
jb
xlat
and
popa
inc
inc
pusha
lock
mov
stos
sahf
aam
pusha
sbb
aas
mov
addb
cmp
stos
les
pop
enter
inc
mov
faddl
sbb
jo
leave
pusha
inc
aad
jg
aas
pop
and
gs
pop
and
aam
lret
pop
sbb
cmpsb
mov
scas
xor
xchg
call
stos
call
mov
lcall
cwtl
pop
pop
lea
fucomp
dec
leave
movsb
push
movsl
xchg
xorl
xor
aam
out
or
addr16
aam
mov
or
xlat
jmp
push
and
dec
pop
sub
adcb
mov
push
iret
out
dec
xchg
loop
scas
das
stos
shr
pop
sbb
xor
push
dec
cmp
fsubp
lods
cmpsl
sahf
insl
imul
push
lcall
test
inc
push
adc
push
inc
dec
and
xchg
push
dec
aad
pop
les
mov
mov
mov
mov
and
fst
push
mov
in
lret
rclb
xlat
cmp
push
sti
or
push
cmc
arpl
sti
mov
lods
in
out
xlat
je
add
int3
das
mov
ljmp
pop
sbb
inc
inc
mov
fdivrp
mov
ret
repnz
test
shrb
mov
les
jmp
or
mov
dec
inc
test
mov
inc
ret
add
add
idivl
fnsave
roll
add
add
mov
aaa
and
ss
repnz
fdivs
outsl
clc
aas
lock
ret
pop
popf
scas
push
xor
and
fistpl
add
dec
fs
push
add
sub
sub
inc
ja
in
stos
pushf
and
mov
mov
xchg
movsl
or
adc
push
push
insb
lret
add
out
ja
dec
mov
jne
pusha
cli
lea
dec
xor
jecxz
or
aaa
cmp
add
mov
push
push
adc
cmc
sub
sbb
mov
pop
orl
ret
les
leave
pop
int3
arpl
jne
xor
stos
push
jle
nop
leave
in
out
inc
sahf
mov
dec
push
ljmp
aad
xchg
sbb
xchg
test
sbb
mov
icebp
js,pn
loop
push
aas
repz
jns
sbb
or
out
movsb
mov
outsl
and
cmpl
jo
aam
gs
add
hlt
xor
lret
inc
pushf
xchg
pop
scas
sbbl
jecxz
sub
mov
cli
out
jb
call
stos
jle
mov
aad
inc
mov
movsl
pop
jne
loope
popf
das
hlt
mov
jb
divb
int3
fimuls
adc
fstl
test
xchg
and
stos
or
cmp
pop
jle
sti
daa
outsb
rolb
clc
fldl
mov
sbb
call
fnstsw
xchg
cmp
subl
xchg
sbb
mov
mov
push
adc
push
xor
imul
dec
ss
stos
cmp
dec
out
xchg
mov
sub
in
loop
dec
lock
out
test
jmp
jns
cli
lock
cli
mov
xor
and
jno
fs
in
push
arpl
and
lds
fwait
repz
cld
shl
or
mov
in
sub
cs
icebp
dec
jmp
add
sbb
out
sahf
sub
dec
lret
insl
imul
std
arpl
inc
icebp
les
imul
fsubr
or
and
movsb
push
inc
mov
inc
je
int
fadds
and
stos
inc
mov
dec
clc
ret
in
hlt
add
jecxz
fwait
add
lcall
cmp
inc
ror
cld
pop
add
jmp
inc
add
add
jecxz
mov
jo
addr16
add
test
add
ljmp
pop
jp
je
jle
int3
jge
sbb
pop
dec
pop
jecxz
sti
out
adc
fimuls
and
fwait
fwait
add
cli
cmpsl
mov
data16
loopne
dec
shr
jl
les
popa
xor
shll
adc
je
xor
fdivl
jecxz
jno
jno
or
mov
popa
cmp
push
stos
je
add
rcrb
or
mov
pop
aam
sti
fists
cmpl
mov
das
sub
bound
bound
mov
mov
dec
in
lods
idiv
stos
dec
out
jmp
cmp
push
mov
pop
dec
jb
or
push
test
pop
int
add
lret
xchg
ret
sub
pop
sbb
mov
aad
test
lcall
in
push
xchg
and
inc
popa
pop
adc
push
daa
mov
shlb
or
push
mov
cmp
fisttpl
pop
rcrl
scas
rcl
loope
out
iret
pop
movsb
sahf
xchg
mov
cmpl
mov
add
mov
std
idivl
lret
test
stmxcsr
mov
pop
movsl
out
imul
fsts
add
pusha
data16
dec
test
sbb
adc
add
xlat
in
ss
or
rol
stos
jae
pop
mov
xchg
pushf
fs
mov
dec
push
loop
in
scas
pop
fimuls
das
mov
enter
push
lcall
int
mov
jle
mov
jae
mov
push
mov
imul
daa
and
or
adc
int
add
ficoms
in
adc
shl
add
adc
ret
mov
test
inc
inc
mov
add
mov
jae
and
sbb
jo
sbb
std
jge
in
push
mov
hlt
cmp
jnp
push
pop
add
enter
adc
add
call
push
mov
shlb
and
mov
xor
lods
sub
dec
nop
mov
xor
test
dec
adc
mov
scas
cmpsl
add
add
ficompl
mov
or
arpl
add
test
add
push
cmp
xlat
cmp
sbb
jnp
fildl
mov
movsl
fsubrl
mov
mov
das
dec
adc
xor
stos
push
iret
xor
push
stos
fidivl
lahf
sti
ret
pop
xchg
add
out
sbb
lret
push
imul
cmpsl
and
mov
out
jge
inc
xchg
call
ret
es
push
sahf
mov
mov
out
popf
xchg
stos
add
loopne
out
lds
push
mov
mov
loop
inc
dec
mov
mov
add
scas
daa
sbb
inc
push
push
xchg
imul
movsb
lock
pop
outsb
dec
repnz
or
shlb
js
xchg
iret
pop
lods
es
fldenv
rcrl
or
or
lret
cmp
loope
mov
mov
dec
notb
roll
inc
inc
inc
xor
lods
lds
popf
fldcw
pushf
mov
pop
aam
sarb
testl
jl,pt
jecxz,pt
adc
mov
jno
gs
xor
ja
cld
bound
iret
mov
adc
sbb
xor
sti
movsb
cltd
iret
dec
push
scas
movl
pop
jl
cmc
jge
dec
jne
addr16
out
aam
mov
jns
pop
add
inc
inc
stc
push
lea
inc
rolb
dec
add
ret
and
mov
ja
imul
cmpsl
xor
pop
popa
and
mov
dec
test
mov
pusha
cmp
jmp
pop
mov
orl
es
std
mov
adcb
jge
inc
ret
insb
sub
or
push
dec
pop
insl
aad
dec
cli
frstor
decb
lcall
std
fxam
add
int
pop
lahf
jb
gs
inc
pop
out
sub
jnp
and
push
movsl
pop
cs
inc
leave
jbe
mov
adc
push
xchg
out
sbb
out
movsb
lock
ss
mov
int3
inc
fcoms
mov
pusha
leave
lahf
sub
repnz
stc
into
scas
mov
adcl
aad
into
push
lds
call
cmp
test
pop
test
icebp
inc
xor
mov
xor
and
add
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
call
add
add
cmpsl
fwait
cmp
or
fsubrl
popa
cmpsb
xchg
loope
pop
movsl
adc
icebp
aaa
jp
nop
jg
out
adc
sbb
cli
adc
jge
lret
shll
shl
push
pop
mov
mov
inc
std
xchg
pop
test
insl
and
pop
pop
xchg
jmp
push
jmp
mov
mov
dec
pushf
and
jbe
add
pop
push
mov
sbb
lock
int
test
in
pop
cmpsl
inc
jae
mov
mov
mov
rorl
mov
mov
mov
fcoms
dec
loop
mov
lea
jo
addr16
fxch
cmp
mov
and
xchg
push
jmp
and
bsf
or
test
jne
or
sbb
stc
ja
pop
rcrb
pushf
sti
xchg
lds
pop
iret
mov
cmpsb
arpl
loope
sub
push
mov
mov
lcall
xor
iret
mov
enter
cmpsl
push
aad
fcmovu
pop
mov
mov
popf
jnp
adc
aas
mov
hlt
sbb
xor
and
xor
into
jle
mov
adc
push
or
std
out
stos
mull
enter
mov
and
inc
aas
xlat
mov
sti
fwait
jle
test
xchg
imul
mov
mulb
sub
movsb
mov
sub
add
jmp
add
push
dec
inc
ret
aas
les
push
cwtl
fidivrs
dec
lret
jl
fisttps
movsl
sbb
sbb
push
sub
mov
gs
test
adc
popf
outsl
xor
in
mov
mov
mov
cmpsb
mov
cwtl
pop
xor
rcrb
xchg
inc
stos
and
jne
push
repz
popf
or
jecxz
aaa
scas
mov
push
test
mov
push
rorb
xor
and
add
push
jg
outsb
popa
xchg
inc
addl
add
loop
mov
xor
cmpsl
fdiv
inc
rorl
xor
push
add
es
loop
lods
push
cltd
mov
movsl
xlat
ss
jecxz
sub
mov
shlb
iret
hlt
movsb
cmp
lcall
mov
or
inc
ja
je
loope
out
movsb
bswap
stos
cmpsb
popa
out
add
fcmovnb
mov
in
push
xlat
ja
out
ss
mov
insl
fldl
add
sbbb
xchg
push
lret
push
ljmp
imul
jo
shlb
mov
inc
sbb
or
xchg
mov
mov
push
test
es
ret
shr
decl
or
inc
mov
add
stos
cltd
std
fists
xor
popa
test
loope
mov
inc
popa
and
jge
gs
adc
inc
movsl
xchg
and
sub
sbb
outsb
sub
xchg
leave
lds
int3
xor
mov
pop
ror
cmp
xchg
pop
test
mov
loop
jnp
jg
or
add
shlb
mov
add
sbb
pop
jmp
mov
push
lcall
and
and
cwtl
inc
out
sbbl
loopne
invlpga
add
jmp
mov
jl
nop
inc
mov
cli
popf
leave
xchg
mov
cltd
adc
xor
cmp
lcall
sub
adc
loopne
lahf
sub
aam
push
dec
xchg
rcr
sbb
jo
or
dec
sti
iret
gs
xchg
cmp
mov
outsl
adc
xchg
mov
mov
push
call
inc
nop
into
add
ljmp
xchg
or
inc
mov
stos
mov
or
ret
inc
cmpsb
cmp
frstor
fbstp
pop
aaa
sbb
sbb
mov
fimuls
decl
jp
in
fnstsw
cltd
xchg
fs
loop
add
mov
sub
jecxz
push
adc
mov
fdivrl
fcomp
ftst
cmp
push
loop
cmpl
mov
js
adc
stos
mov
fisttpll
out
cwtl
xor
cmp
adc
jle
in
icebp
outsl
aas
out
les
sub
aaa
mov
pop
dec
loope
in
xchg
cmc
fwait
das
mov
cli
stc
nop
arpl
mov
mov
in
and
gs
aad
xchg
mov
popa
fists
lea
cli
movsl
imul
dec
push
add
add
rcll
pushl
loop
repnz
add
shl
jl
and
xchg
bound
loope
xchg
in
push
push
mov
mov
cmp
inc
xor
test
icebp
adc
jg
xchg
popf
mov
rcl
std
dec
jnp
data16
dec
cwtl
out
and
xor
push
push
fistps
xchg
aam
push
dec
loop
or
leave
jp
push
dec
adc
es
pop
cwtl
inc
cmp
dec
dec
inc
cmp
push
repz
push
bnd
jge
jns
ret
jne
frstor
jle
sub
add
jns
xchg
aad
add
je
in
insb
mov
scas
shll
xor
sbb
xchg
subl
loopne
adc
int
je
inc
cmp
mov
int3
jbe
xchg
adc
repz
mov
or
pop
xor
sbb
and
leave
push
hlt
sbb
pop
cmpsl
cld
roll
cmp
inc
cmp
std
scas
imul
sbb
addr16
sbb
pop
add
pop
jns
xor
outsb
adc
shl
arpl
stos
xlat
pop
cli
cmpsl
push
and
sbb
insb
imul
aad
adc
pop
cmc
pop
loope
rolb
and
mov
in
sti
mov
or
inc
sarl
dec
xchg
sub
sub
add
mov
jp
inc
lods
test
cltd
fmuls
mov
push
loope
and
shl
movsb
push
cli
push
jle
xlat
lahf
pushf
cmp
and
xchg
add
fistl
xor
pushf
inc
jmp
mov
inc
fcompl
jne
cmc
fimuls
aam
xchg
push
add
push
bound
popa
cmc
jns
xlat
xchg
sub
insl
daa
cmpsb
sbb
inc
test
add
pop
pop
mull
pushf
pusha
jae
xchg
movsb
sbbb
pop
mov
mov
ja
scas
sar
jge
xor
adc
dec
inc
fwait
lahf
pop
mov
clc
sub
cmp
inc
mov
fisttpll
fwait
adc
rcrl
divb
mov
mov
jne
and
dec
loopne
fs
cmp
cwtl
sub
out
add
jp
add
and
popf
xor
test
insb
mov
jp
pusha
dec
hlt
pop
sub
fsubl
in
aaa
por
jmp
negb
out
lods
push
ljmp
add
stc
cmpsl
xlat
movsl
insl
pop
mov
rcll
ret
inc
jle
rol
jecxz
ja
rcr
not
pop
jg
push
int3
mov
pop
adc
jo
add
adc
sub
in
sbb
nop
loopne
fwait
dec
pop
cltd
into
lods
lret
push
movsl
mov
or
inc
xchg
lsl
rcll
lahf
inc
pop
or
dec
jnp
xchg
test
cli
sub
rcl
mov
mov
add
or
mov
push
ss
lds
out
vmwrite
into
mov
int3
mov
mov
xchg
stc
sbb
ret
mov
and
cmp
push
scas
ss
mov
sbb
push
movsb
mov
ljmp
push
mov
mov
sbb
sub
push
addl
push
popf
rorl
rorl
pop
pop
lods
or
je
or
mov
loopne
sbb
imul
or
pop
out
pop
and
push
xchg
xor
cmp
ja
pop
daa
call
stos
mov
jne
mov
insl
int
lret
insl
ret
jmp
movsb
addr16
jnp
sbb
into
inc
sahf
sub
inc
mov
mov
insl
arpl
sti
add
jl
push
push
out
imul
inc
lcall
sub
es
jns
sbb
ja
adc
cmp
push
ret
enter
add
les
fdivrs
rclb
dec
decl
clc
fmull
lds
xor
inc
mov
inc
ss
and
lock
inc
fwait
lods
js
lret
fs
orl
sbb
dec
fdivrs
jb
inc
pop
out
popf
orl
cmp
push
mov
xlat
rcrb
push
push
sbb
push
scas
pop
pop
push
cld
sub
iret
dec
fldcw
xor
sub
mov
adc
stos
enter
adc
addr16
shll
std
lea
repz
xor
add
aaa
mov
ss
jns
arpl
inc
jle
cmpsb
pop
int
jg
xchg
in
or
cmp
enter
shll
adc
cmpb
pop
mov
push
popa
stc
out
sti
lods
stos
fildll
mov
sahf
mov
push
mov
add
add
sub
ja
movsl
ss
pop
icebp
xchg
cld
in
add
dec
mov
pop
adc
xchg
xchg
sbb
repz
imul
pop
dec
jbe
shrb
cmp
inc
in
jae
fisttpll
testl
jns
les
or
jo
aaa
xor
sub
fisttps
xor
bound
xor
jnp
pusha
xor
xchg
cltd
rol
aad
mov
pushf
xor
sub
pop
adc
inc
clc
sub
adc
pop
pop
sbb
enter
sahf
mov
and
push
int
fisubrs
inc
xor
and
xchg
mov
movsl
push
insl
pop
pop
adc
cli
aas
testb
call
insb
shll
xchg
xchg
pop
rcrb
xor
rorb
xor
adc
push
cmpsl
xchg
add
xor
cmpsb
neg
jb
mov
mov
sub
pop
adc
cmp
pop
mov
lret
or
xchg
mov
bound
dec
adc
sbb
sbb
cmp
cli
sbb
inc
pop
ret
add
mov
clc
mov
aaa
subl
add
loopne
sbb
lea
add
nop
adc
ds
outsb
arpl
into
adc
and
dec
adc
pop
lret
mov
int3
push
loop
loope
cltd
jnp
jne
je
add
cmp
mov
push
inc
add
vpunpcklbw
pop
sbb
adc
in
sbb
jge
fxch
rol
shll
mov
jp
jne
call
add
in
mov
or
sbb
jo
jl
xlat
and
mov
add
in
xor
scas
je
xchg
jbe
loope
xor
push
xchg
test
ds
jne
xchg
jno
imul
pop
sub
mov
adc
test
test
xor
pop
cs
lock
dec
mov
adc
xor
daa
js
ja
push
stc
shll
test
mov
es
aam
mov
jmp
sahf
cwtl
rep
cmp
clc
nop
stos
push
xchg
jns
lahf
push
es
pop
out
dec
jns
mov
aam
add
dec
pop
mov
or
adc
enter
mov
push
outsb
in
push
and
add
jmp
xor
pop
lods
int
pop
jmp
jle
jecxz
cmp
das
lret
mov
out
int3
adc
sbb
jno
xlat
push
loop
mov
mov
movb
dec
cmp
cmp
jns
xchg
add
pop
pop
cmpsl
cld
aam
adc
nop
sub
push
aad
dec
cmpsb
ss
sti
outsb
cmp
std
in
jb
cmp
fmul
fwait
pop
repnz
clc
mov
adc
cltd
ss
sbb
js
repz
mov
inc
mov
imul
inc
mov
popa
push
adc
jmp
sub
cld
cwtd
mov
jo
or
jle
jecxz
pop
mov
movsb
push
ret
adc
je
push
aam
mov
fsubl
clc
and
xor
jp
out
ret
out
pop
mov
add
outsb
pop
push
xsha256
cmpsb
adc
repnz
aas
rcll
inc
arpl
adc
inc
mov
dec
push
outsb
test
arpl
out
add
push
daa
sahf
inc
lcall
mov
aam
dec
cmp
hlt
jae
cmp
xchg
sub
loop
mov
iret
jle
pushf
fucomi
or
xchg
rcrb
lods
cwtl
cmpsl
xor
and
ds
adc
js
inc
fdivrl
cmp
inc
cmp
jecxz
pop
cmpsb
dec
insb
test
aam
jecxz
cmp
ds
movsb
lahf
sbb
push
mov
mov
mov
mov
xorl
xor
mov
addr16
in
outsb
stos
xchg
cmpb
sub
mov
dec
add
out
push
dec
and
mov
cmpsb
add
mov
sub
and
xor
std
sbb
aad
scas
clc
add
or
aas
int3
popf
loopne
cli
mov
ret
call
lcall
icebp
jge
jmp
jp
cmp
push
cmp
mov
add
xor
xchg
cmc
rcrb
shrb
sbb
jb
cwtl
in
add
xor
lcall
cltd
ljmp
xchg
adc
lods
popf
push
cmp
fdivrl
ret
mov
xchg
xor
ret
mov
es
xchg
aad
and
test
and
addl
sbb
jge
int3
outsb
xchg
dec
popf
ja
push
ljmp
pushf
outsl
rcl
test
idivb
sbb
bound
add
cmp
lahf
cwtl
popf
add
repnz
push
pop
or
xor
lds
fiaddl
adc
inc
loopne
ds
shl
andb
lds
push
cmc
sbb
mov
sub
push
xchg
rorb
outsb
movsl
out
movsb
jp
and
out
jbe
std
shrl
xchg
test
and
push
std
addl
shll
fmuls
popf
xor
mov
pop
jae
pop
js
fcmovnu
push
cld
cmp
jne
cwtl
pop
xchg
ja
ja
cmp
aam
fwait
ret
mov
outsl
push
mov
add
push
ret
jnp
cmp
mov
popf
fsubrs
push
hlt
popf
mov
jae
inc
add
add
test
cmp
lret
inc
pop
and
pop
call
mov
cli
dec
mov
lret
mov
adc
lret
add
jl
inc
and
je
adc
and
addr16
push
cmp
stc
inc
and
das
sub
sbb
xchg
add
pushf
dec
int
shlb
in
adc
xchg
out
adc
sub
jae
gs
in
aam
jbe
repz
fdivl
jge
loope
xchg
neg
mov
ret
mov
inc
scas
jno
and
jmp
cltd
or
adc
idiv
pop
xor
inc
fistl
fsubp
adc
scas
pop
testl
enter
aam
ljmp
je
push
and
in
pop
dec
jle
dec
or
push
sbb
lret
cs
andb
sub
daa
lahf
mov
loope
mov
pop
pop
test
dec
sbb
mov
in
arpl
pop
sub
fld
mov
in
sti
xchg
fwait
loope
pop
fisubl
pop
ja
mov
mov
int3
in
xor
loope
bound
dec
fs
test
xchg
pop
aaa
mov
cmc
dec
xlat
sbb
sarb
pop
or
mov
icebp
scas
lret
sub
inc
push
aad
jne
bound
mov
fisttpll
mov
stc
test
sti
mov
out
das
pushf
or
or
mov
roll
inc
test
xor
add
add
roll
pop
sub
stos
cwtl
mov
add
test
add
mov
ja
add
inc
xor
imul
scas
js
xchg
jg
adc
cmpsl
inc
rcl
push
ret
jge
and
sub
popa
jne
dec
cmovs
jns
insl
or
jns
mov
add
arpl
push
lcall
push
push
loopne
xchg
sahf
dec
push
fdivrs
xchg
enter
and
mov
adc
jl
fisubl
scas
xor
stc
int
jnp
dec
jp
test
xchg
push
xchg
jecxz
or
jl
xchg
idivb
pop
dec
dec
pop
cmp
push
jbe
scas
push
jl
sbb
out
mulps
fsubp
mov
mov
lods
jns
in
sub
xchg
pop
inc
mov
rcll
sub
mov
test
sbb
mov
movsb
fcmovu
mov
inc
lret
push
push
and
cwtl
out
xchg
push
or
and
jns
adc
or
jmp
lods
jge
sub
outsl
cmp
mov
insb
insb
adc
stos
outsb
inc
dec
inc
call
dec
mov
adc
mov
jno
mov
ror
into
mov
mov
loope
in
clc
nop
das
mov
imul
cli
pushf
arpl
cltd
mov
inc
ds
dec
movsb
adc
push
dec
in
clc
xlat
cmp
das
nop
dec
push
cmp
daa
filds
out
int
movsl
lods
push
pop
mov
inc
mov
cmp
pop
add
cmp
mov
popa
pop
push
push
dec
insl
pushf
cwtl
sbb
cmpb
inc
sbb
jge
into
insl
and
cmp
repz
rcr
add
aam
je
push
or
ret
call
push
fiaddl
cmp
cmpb
and
aad
cs
es
mov
xchg
mov
dec
add
pop
add
or
out
cld
insl
cld
fiaddl
mov
adc
dec
adc
dec
sub
push
add
inc
cmp
sbbb
cld
xchg
in
dec
pop
push
cli
jmp
clc
orb
or
and
add
imul
cli
mov
ror
sub
ud1
iret
insl
sub
int
mov
xor
dec
cmpsl
xchg
jnp
sbb
jl
cmp
add
add
add
daa
pushf
cli
mov
scas
aad
push
mov
add
in
insl
data16
fnstsw
mov
push
xchg
in
int3
pop
dec
sub
mov
mov
in
adc
pop
push
test
insl
lret
roll
sti
insb
add
or
fwait
sbb
or
mov
bound
in
sbb
fisubl
jo
addr16
jmp
lds
nop
inc
pop
ds
mov
sub
xor
iret
pusha
loope
push
add
inc
int3
and
cmp
mov
insl
or
adc
xor
mov
push
shll
xchg
pusha
mov
test
outsb
in
cmpsb
adc
lcall
insb
cmc
dec
enter
mov
mov
sub
or
ljmp
mov
and
jl
cld
lcall
pop
or
cmpsl
and
dec
xchg
xchg
cmp
jmp
push
inc
outsb
or
jbe
stos
adc
xchg
lcall
xchg
jbe
push
dec
pop
aad
push
xchg
mov
push
lret
adc
mov
into
unpcklps
mov
mov
jg
mov
jge
je
sbb
cmpsl
clc
cs
push
xchg
pop
sbb
jnp
rcll
fstl
pop
ret
mov
mov
sub
xor
ja
mov
jecxz
lods
sbb
sbb
sti
cmp
loop
cltd
xchg
push
xchg
inc
into
lret
mov
sub
lret
mov
cmp
leave
mov
pop
lcall
jno
lret
rorl
mov
mov
ds
insb
adc
cmc
dec
das
sub
addr16
pop
inc
sbb
pop
cmp
out
jne
jno
int
cld
std
cld
mov
push
iret
out
cmc
cltd
and
sub
fmuls
push
mov
outsb
int3
movsl
pop
pusha
loope
inc
lock
mov
adc
and
popf
jge
lods
ss
fisttps
push
js
loop
push
loop
sbb
test
mov
or
add
jno
inc
call
pop
add
mov
mov
sti
test
loopne
inc
pop
sbb
test
push
mov
es
flds
leave
shrb
stos
pop
cwtl
ljmp
and
in
add
add
fisubl
mov
sub
xchg
icebp
add
test
add
push
add
sahf
push
ret
pop
out
test
mov
jg
aaa
add
mov
xchg
bound
ficomps
mov
fwait
xor
push
iret
and
into
push
imul
ss
sub
insl
dec
xchg
pop
mov
push
push
pop
cmpsb
add
in
decl
sub
addb
cwtl
add
test
xor
push
xchg
jle
xor
sub
sbb
jg
pop
cmp
xchg
xchg
xchg
movsl
dec
aas
pushf
pop
aaa
ja
inc
lcall
movsl
add
push
add
cli
outsl
cmp
cs
mov
in
movsb
out
jae
or
mov
push
add
addb
add
sbb
icebp
nop
jno
sti
mov
lds
and
jns
jl
jg
xor
andl
pop
addl
lret
add
popa
rcrl
or
inc
sbb
fidivrl
adc
push
cli
sbbb
push
jge
sbb
cmp
lret
cli
mov
dec
mov
jecxz
pavgw
aam
jb
and
mov
fs
stos
outsl
cvtpi2ps
jmp
xchg
fadds
mov
ret
aaa
cs
inc
in
pop
subl
fildll
andb
lods
jl
and
jo
xchg
jg
fs
xchg
push
xlat
stc
pushf
stos
mov
push
mov
dec
ja
ffreep
jb
or
add
scas
in
xchg
cmc
push
mov
in
ret
outsl
lods
ja
cmpsb
mov
fcmovne
pop
scas
insb
hlt
cwtl
sbbb
hlt
pop
pop
jl
mov
out
xor
test
cmp
movsb
scas
or
add
js
scas
and
inc
call
scas
ljmp
mov
hlt
cmp
and
nop
subb
cwtl
xor
fsub
out
sbb
mov
jle
cmp
adc
int3
imul
lea
jo
push
lret
add
inc
cmpsl
shrl
outsb
inc
pushf
push
mov
inc
ss
mov
ja
and
gs
loop
xor
das
in
test
mov
pop
loop
mov
gs
add
pop
out
mov
pop
pop
mov
lcall
dec
jmp
add
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
xchg
push
or
sbb
add
test
add
ret
test
outsb
push
in
mov
loopne
fwait
sub
fwait
pop
lcall
mov
mov
add
adc
scas
rclb
adc
add
xchg
xor
loopne
sbb
loop
mov
mov
mov
sub
fistpll
mov
sbb
jecxz
enter
push
xor
pop
mov
mov
call
xchg
jbe
pop
sar
repz
sbb
sub
mov
xor
jp
prefetch
in
pop
mov
lods
adc
inc
int
imul
scas
dec
cmp
mov
stos
and
repnz
dec
leave
daa
push
sbb
mov
push
addb
dec
mov
adc
sub
sub
cli
les
xor
pop
and
stos
out
jb
dec
fisttpl
es
adc
inc
iret
and
test
cmp
inc
add
mov
mov
bound
dec
mov
lret
je
fmuls
shll
dec
push
mov
pop
sbb
add
nop
insl
cs
inc
andl
or
hlt
fwait
sub
adc
out
inc
pushf
mov
mov
daa
divl
fs
lods
or
mov
jle
pop
pop
push
rcl
and
mov
mov
or
add
int3
xor
ret
and
jmp
xor
jbe
lds
sub
or
fucomi
pop
or
adc
test
mov
repnz
mov
add
enter
mov
xlat
addl
jns
jo
push
mov
les
imul
and
mov
adc
adc
popf
int3
imul
in
fistps
sub
mov
leave
sbb
addr16
pop
ret
fwait
xchg
sub
xchg
push
cltd
jnp
cmp
pop
sti
xchg
or
inc
sti
addr16
lods
fimuls
cmpl
push
jno
out
xor
pop
leave
jecxz
push
xor
adc
loop
cmpsl
repz
fsubl
sbb
xchg
mov
loop
int3
rorl
pop
or
sub
int3
leave
mov
xor
and
xchg
pop
inc
xor
xor
add
cmp
stc
int
xor
ret
lahf
testb
test
add
adc
sub
sbb
or
test
int3
movsb
lret
fdivp
fimuls
call
push
fidivrl
iret
bound
fsub
and
arpl
cmpsb
stos
mov
movsl
cltd
pop
int
ret
icebp
dec
mov
and
dec
or
ja
adc
into
push
js
shll
fadds
inc
or
fldenv
jne
pop
add
fcomps
adc
jmp
and
lret
mov
dec
adc
scas
loopne
and
out
mov
xchg
dec
add
inc
push
xchg
adc
xchg
sar
mov
xchg
inc
xchg
stc
cli
mov
rorb
mov
adc
sbb
sub
ret
decb
in
xchg
mov
scas
addb
lahf
jp
jp
push
mov
push
mov
mov
test
fildll
fld
popf
scas
add
inc
sbb
push
sbb
pusha
outsb
push
outsl
fbld
pop
and
mov
mov
jmp
roll
sti
push
push
fdivr
cmpl
adc
pop
mov
add
adc
clc
sbb
cltd
pop
jg
sbb
mov
rolb
fcoml
add
idiv
add
imull
mov
xor
mov
out
in
adcb
and
ljmp
mov
dec
mov
add
fldt
mov
mov
mov
sbb
inc
lock
nop
call
pop
adc
not
sbb
iret
jp
mov
mov
decl
fdivrs
ja
inc
popa
mov
testl
mov
push
add
or
scas
insl
ss
xchg
mov
xor
movb
cmp
aad
addl
hlt
fwait
mov
sub
in
aam
stc
aam
mov
xchg
inc
mov
jb
xchg
dec
je
xchg
mov
or
aam
mov
dec
pusha
adc
call
fs
dec
pop
mov
push
lods
es
or
push
insl
movsb
mov
orl
leave
cmp
rcrl
pop
les
sub
nop
or
add
xlat
cld
enter
dec
fcomps
add
mov
test
iret
movsb
and
adc
aaa
push
int3
add
add
cmp
mov
fisubl
add
adc
add
addr16
popf
adc
outsb
pop
bound
pop
call
sbb
add
