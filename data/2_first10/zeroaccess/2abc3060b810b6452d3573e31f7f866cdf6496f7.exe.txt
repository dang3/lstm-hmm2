push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
xchg
jg
pusha
cltd
das
mov
xchg
imul
dec
xorl
jmp
adc
cmc
mov
scas
cmp
rcl
cmc
stos
cmova
push
out
clc
sub
jns
mov
pop
jmp
mov
cld
lock
mov
mov
aam
pop
or
mov
das
jp
insb
sarb
fimuls
or
pop
dec
sub
insb
cmpsl
repnz
ja
sbb
imul
push
inc
mov
ja
repz
xor
popf
jle
xor
nop
jne
sub
xor
lods
repz
lahf
mov
cmp
cmp
adcb
mov
shl
add
cmp
fcmovb
sub
mov
mov
in
cmp
test
and
sti
inc
arpl
cld
mov
sub
cmp
arpl
add
xchg
mov
lds
clc
sub
iret
sahf
mov
or
xchg
xchg
fcoms
push
dec
xchg
scas
out
outsl
rol
fnstsw
inc
jo
push
mov
sub
stc
add
scas
xor
sbb
add
inc
testl
adc
rcll
xchg
add
xchg
aam
subl
pop
xrelease
and
in
repz
inc
mov
sbb
loope
repnz
jle
mov
lea
mov
jbe
dec
shlb
or
stc
aaa
dec
dec
pushf
lcall
mov
mov
das
xchg
pop
cwtl
dec
jo
or
popf
push
sub
ficompl
push
aas
lock
xor
add
sbb
jno
mov
out
mov
pusha
dec
popa
fisttps
mov
add
pusha
dec
pusha
data16
push
jg
lret
cli
mov
mov
addb
lret
mov
adc
add
lods
lahf
nop
repz
sbb
mov
pop
loop
mov
and
loop
pop
mov
push
jecxz
push
xchg
rcrl
stos
dec
dec
insl
pop
xchg
mov
dec
jle
or
mov
mov
xor
push
lods
dec
idivb
enter
jge
mov
xchg
rclb
mov
insl
dec
sbb
rcrl
sbb
sarb
or
in
arpl
xchg
aam
cmc
push
and
add
aad
out
or
xchg
shll
mov
pop
mov
arpl
outsl
push
popa
popa
and
mov
or
in
lret
aaa
and
arpl
aad
pop
mov
repz
and
mov
mov
xorb
jo
cld
loopne
push
loope
inc
cmp
aas
lods
mov
sbb
in
pusha
xchg
xchg
in
int
adc
jmp
inc
adc
cwtl
cmpsb
mov
push
lret
outsl
je
push
sbbl
in
test
ds
mov
push
or
push
inc
lret
clc
mov
int
in
les
pop
int3
fisubl
iret
sub
arpl
fdivl
rorl
rcrb
aad
jns
jo
jb
adc
scas
inc
pushf
in
mov
daa
cmp
mov
xor
aaa
fidivrl
sbb
adc
xor
xlat
ret
xchg
lcall
gs
fwait
shl
add
xlat
and
mov
outsb
cmc
test
and
or
push
jns
hlt
cs
pop
push
jnp
mov
cmp
cs
mov
mov
xchg
push
outsl
mov
sar
mov
adc
pop
js
or
adc
imul
mov
inc
inc
sbb
pusha
loopne
scas
mov
pop
clc
add
push
adc
mov
cld
and
jmp
rol
add
cmp
test
xor
xchg
sbbl
imul
adc
cmp
testl
adc
jnp
mov
mov
jne
and
clc
and
clc
xchg
add
xchg
adc
inc
lea
movsb
push
pop
nop
jne
cld
ret
dec
mov
jbe
clc
jg
ret
jnp
rcrb
add
test
sbb
mov
pushf
push
loopne
sub
push
jmp
ds
push
sar
fisttpll
dec
mov
std
or
mov
or
mov
aaa
mov
int
loopne
imul
ja
add
jae
insb
mov
ds
inc
fdivr
ret
aas
cs
pop
std
mov
push
push
popa
sbb
inc
sub
pop
fnstsw
dec
inc
inc
ja
cmp
ds
add
mov
dec
sbbb
push
lcall
stos
aaa
dec
aam
jno
das
das
jae
shlb
fldcw
mov
out
scas
mov
dec
push
cltd
and
adc
xor
xor
and
out
add
push
inc
cmc
out
push
stc
add
inc
and
and
adc
or
cwtl
inc
aaa
jmp
gs
lret
and
cmpb
mov
shrb
pop
xchg
pop
cmp
int3
mov
jo
test
xchg
ficoml
lds
jae
xchg
lahf
call
add
inc
jge
mov
mov
iret
push
mov
sbb
insb
and
out
mov
sbb
aas
call
bound
fidivrs
aam
mov
push
fists
mov
rcrb
test
sub
adc
jne
push
xor
xor
jmp
pop
dec
or
sbb
or
das
cli
or
in
out
iret
mov
stos
aad
popf
test
sub
cmp
dec
leave
dec
enter
mov
sub
xlat
dec
mov
repz
les
dec
sub
leave
adc
inc
xor
jnp
stc
xor
pop
xchg
sbb
mov
and
cmpsl
pop
out
fisttps
shr
inc
imul
jl
cmp
push
int
leave
sub
fwait
imul
incb
inc
ja
ss
sub
push
cltd
scas
outsl
jg
lcall
jl
mov
push
addr16
insl
sbb
shll
or
mov
and
cmp
lret
xor
loopne
inc
fst
pop
andl
pop
mov
inc
mov
xchg
aad
imulb
mov
pop
lods
ljmp
add
sub
xor
mov
cmpl
mov
ud2
and
push
insl
mov
and
mov
pushf
push
sub
ret
xorl
push
sub
test
or
leave
lahf
or
xor
testl
mov
push
pushf
inc
push
notl
jns
int3
xchg
sbb
std
cmp
dec
sub
push
dec
mov
lods
cld
aaa
testb
mov
xchg
scas
je
jns
pop
push
xor
inc
xor
das
or
movsb
push
loopne
stc
dec
inc
mov
jge
sub
mov
sbb
cwtl
sti
mov
cld
sbb
mov
mov
jo
negl
mov
data16
mov
cld
fmulp
mov
inc
xchg
rorl
adc
cmp
pushf
out
lahf
mov
mov
mov
sub
test
sub
cltd
aad
outsl
pop
shrb
outsb
lods
cmpsl
andb
mov
and
jle
int
and
add
daa
nop
cmpl
stos
sub
movsl
dec
pop
test
jge
jns
mov
out
dec
imul
loope
adc
addl
cmp
or
jb
arpl
insl
out
cwtl
cmp
cmpsl
imul
or
push
push
sub
mov
les
ljmp
adc
ds
lock
sahf
push
xabort
mov
push
dec
lret
mov
movsl
inc
dec
stos
lock
sbb
mov
mov
adc
mov
mov
test
sti
mov
lahf
hlt
roll
cmpsl
testl
sub
lods
mov
je,pn
push
test
jp
lcall
in
int3
sti
adc
movsl
mov
add
repz
shlb
or
fidivl
add
xor
sub
mov
push
pushf
push
adc
shlb
and
jno
in
in
mov
push
push
rcrb
into
xchg
pop
mov
bound
mov
inc
mov
pop
lods
jmp
mov
or
mov
nop
sub
pop
mov
repnz
test
and
adc
out
int
or
mov
cs
outsb
ds
fdivrs
mov
test
dec
nop
mov
in
cltd
mov
popa
pushf
sbb
push
sub
mov
add
xchg
add
fldenv
and
outsl
rolb
and
or
cwtl
testl
mov
shlb
out
out
mov
fisubrs
lock
inc
fbld
ret
sub
cmp
mov
xchg
cmp
pop
pusha
push
adc
push
push
packsswb
xchg
andb
dec
mov
cmp
aas
dec
mov
sbb
loop
outsb
jmp
pop
in
loope
scas
add
js
shlb
inc
push
dec
and
shll
pop
adc
xor
popa
cs
adc
push
lods
hlt
lea
int3
imull
push
push
mov
call
in
add
enter
or
mov
xchg
sbb
into
negl
ja
cmpsb
mov
or
inc
fstpt
cmp
stos
mov
pop
mov
inc
enter
cltd
in
insl
xchg
and
xor
gs
out
out
in
mov
mov
ja
xchg
or
push
mov
sub
rcl
rdpmc
push
fs
imul
xchg
xchg
fmull
dec
add
arpl
pop
mov
das
jmp
fbstp
xor
and
out
mov
xchg
jge
insl
mov
xchg
enter
dec
bound
stos
outsb
in
and
repz
fistpll
inc
adc
daa
push
add
xor
cmp
mov
loop
out
add
lods
out
lcall
mov
jg
addb
rcrl
orl
into
xchg
push
arpl
adc
jp
pop
arpl
jne
xorb
popa
scas
and
jge
or
rcll
popa
inc
arpl
aaa
push
add
popf
add
in
xlat
ficoms
sbb
test
pop
leave
data16
sti
jg
and
xchg
and
sbb
cltd
or
rcrb
mov
rorl
sub
pop
pop
pop
dec
ret
mov
addr16
mov
xchg
in
sbb
je
fs
add
std
fidivl
or
push
dec
mov
pushf
pop
ds
int3
adc
jbe
shlb
mov
popa
mov
mov
arpl
cld
mov
or
sarl
xor
mov
mov
sub
cltd
xchg
popa
imul
in
inc
int
cmp
push
sbb
stc
fwait
int
and
adc
add
cli
add
mov
std
adc
or
dec
xor
sub
mov
adc
jecxz
dec
adc
movsl
xchg
xchg
xchg
inc
ret
dec
cltd
pushf
adc
xchg
out
int3
les
sbbb
leave
inc
aaa
xchg
push
fucom
test
test
pop
repnz
xchg
aam
xor
clc
mov
sarl
add
pop
xor
xchg
or
rcll
test
test
js
insb
cltd
sub
rorl
test
adc
ja
mov
jg
shll
movsb
jmp
or
adcb
fisubl
xor
push
add
sbb
xchg
repnz
xchg
dec
cmc
popf
lret
inc
test
rol
dec
sub
int
cwtl
mov
in
inc
jl
push
xlat
xor
sbb
data16
mov
sbb
fists
mov
mov
movsl
sbb
mov
roll
mov
adc
loop
jb
xchg
pop
das
sbb
imulb
sbb
scas
outsb
dec
cli
mov
jnp
inc
inc
inc
aas
insl
push
cmp
stc
loope
rcrl
scas
dec
repnz
dec
xlat
and
icebp
xchg
fprem
mov
pop
or
insb
or
jecxz
xor
pusha
push
sbbb
stos
sub
dec
dec
jne
repnz
or
pop
adc
add
mov
out
adc
pop
pop
inc
pop
sub
mov
jo
cmp
ss
je
sbb
inc
divb
fldenv
xchg
mov
loope
int
popa
fiadds
lods
adc
scas
fstl
test
mov
lock
push
test
fstp
ret
aam
mov
movsl
jne
addr16
dec
push
pushf
mov
pop
push
dec
mov
scas
inc
ja
add
pop
cmp
out
xchg
addr16
lods
cli
sbb
sub
xchg
push
add
subb
xchg
and
jbe
mov
ret
adc
das
test
imul
out
and
out
xor
shll
cwtl
xor
ret
iret
cs
mov
movsb
jae
addb
sbb
pushf
sub
in
xchg
fmull
adc
cmpsl
jne
adc
ret
lods
cmp
inc
push
arpl
sub
xchg
mov
fcmovb
insl
jno
sahf
ss
xor
xchg
xchg
mov
outsl
cmc
adc
hlt
ss
pushf
pop
pushf
insb
and
dec
dec
push
jecxz
out
mov
add
cmpsl
jl
aam
call
xor
scas
bound
subb
decb
sbb
repnz
mov
aam
push
frstor
pushf
stos
cmpxchg8b
enter
pop
pop
jb
xor
jmp
pop
stos
adc
mov
out
ss
pop
lret
cs
dec
and
cmc
out
into
enter
das
movsb
mov
js
idivb
cs
push
les
clc
inc
push
dec
mov
cld
test
popf
and
in
fidivrs
mov
lret
mov
fs
test
mov
jg
stc
leave
pop
in
sti
cmp
das
cmp
jmp
aad
push
cmpsb
and
test
ljmp
lock
rolb
inc
push
test
cmc
mov
jle
std
and
xlat
out
mov
sub
jbe
and
hlt
mov
and
add
js
xchg
sub
inc
mov
jns
mov
jmp
push
scas
clc
shlb
mov
jns
ror
pop
inc
mov
mov
das
jae
outsb
rorb
call
pop
adc
xor
cs
or
cltd
cmp
add
std
adc
cmp
ss
cmc
es
rcl
push
jge
movb
hlt
pop
sbbb
fimull
inc
test
in
sub
mov
xchg
or
scas
xchg
cmp
xchg
mov
aas
daa
pop
xchg
jnp
inc
push
xchg
cmpsl
jecxz
adc
dec
rorb
dec
mov
xchg
sub
cmpsb
adc
cmpsl
cwtl
add
cmpsl
subb
inc
push
andb
dec
mov
push
jae
pop
mov
test
sbb
jmp
cmp
scas
xor
adc
mov
lock
add
loopne
mov
aam
mov
lea
imul
sub
loope
sbb
in
divl
add
pop
jnp
mov
mov
cmp
testl
pop
and
rorl
pop
sub
jle
fwait
jbe
sub
rcrb
fcoms
dec
xchg
adc
push
mov
mov
or
jecxz
sahf
and
int3
jle
inc
xor
iret
lret
add
insl
cmp
adc
or
out
ds
arpl
xor
inc
cmp
jns
mov
aad
out
cmp
mov
mov
aaa
mov
out
fstpl
std
into
xchg
imul
jo
mov
and
mov
adc
inc
inc
outsb
pop
ss
sub
push
mov
stc
ret
int3
int3
jae
cltd
adc
ficoms
js
fs
shl
adc
enter
mov
repz
sbb
xchg
xchg
lods
add
lods
mov
loope
inc
push
inc
aas
push
mov
ret
dec
into
lret
add
mov
mov
inc
ficoml
or
movsb
enter
loopne
adc
mov
fnstenvs
pop
lock
lock
cmc
rol
aaa
in
je
jp
sub
fmuls
imul
and
lock
jp
ljmp
xchg
test
mov
outsl
stc
cmp
les
cli
incl
push
push
sbbb
in
test
movsl
mov
pop
inc
inc
jmp
addr16
or
xor
ret
mov
xchg
jns
jp
mov
xor
sub
xchg
ret
insb
and
rcrb
std
push
mov
arpl
pop
loope
fwait
out
in
call
daa
add
cmp
dec
loop
cs
ljmp
mov
sub
stc
dec
aas
dec
rcl
mov
mov
xor
frstor
sar
fcmove
ss
cmp
sub
push
and
stos
sub
push
jl
ret
clc
xor
jno
repz
andb
hlt
mov
sbb
test
xchg
clc
or
popf
or
mov
and
mov
ret
lea
lock
daa
movl
rcl
stos
pop
mov
nop
and
fisttpll
call
sar
insl
jg
xchg
outsl
sbb
dec
mov
sarl
les
xor
lock
pop
add
jo
mov
jb
push
ret
and
pop
sub
nop
mov
outsb
ret
mov
test
xor
jle
or
add
fistl
lahf
fcoml
xor
hlt
in
icebp
jo
mov
jmp
in
stos
repz
outsb
wrmsr
pop
into
jno
out
push
call
jl
lds
addl
jb
pop
in
movsb
data16
daa
in
xchg
fnstenv
loopne
mov
add
pop
ljmp
sbb
scas
add
push
scas
jno
ret
push
adc
ss
push
jmp
sbb
out
sbb
rcrl
bound
out
push
or
add
xchg
push
lea
push
push
fadds
add
mov
jno
xchg
mov
clc
jo
pop
imul
or
pop
dec
push
add
add
mov
cmc
stos
popl
lahf
fbld
stos
lret
pop
rol
lret
mov
data16
ds
into
push
mov
jp
jno
idivl
movsl
jb
out
sub
icebp
andb
mov
sub
xchg
int
mov
frndint
add
dec
and
pop
push
orb
das
gs
jb
push
xor
jae
adc
sub
jge
adc
addr16
cli
mov
sub
xor
cmp
inc
repz
mov
xchg
pop
adc
outsb
clc
inc
pop
xchg
fstpt
pop
mov
push
les
add
adc
jle
fidivl
mov
mov
out
outsb
xor
mov
add
ss
rorl
xor
shl
mov
ds
js
in
test
sahf
adc
cmp
add
jmp
inc
hlt
cli
cmp
sbb
sahf
faddl
jno
xor
insb
and
pusha
jl
aaa
add
imul
add
mov
mov
push
les
imull
xchg
pop
stos
or
loope
daa
clc
fs
mov
ret
bound
in
xchg
mov
adcl
xor
xor
subl
cmp
clc
xor
arpl
fmulp
pusha
mov
scas
popf
inc
or
test
test
cwtl
push
sbb
into
loope
in
mov
cmp
mov
arpl
jae
add
xchg
jo
lret
mov
sub
fwait
sbb
and
mov
or
lahf
fchs
scas
pop
jbe
mov
call
fisubs
into
in
pop
test
mov
jb
add
mov
je
mov
mov
push
mov
inc
sub
add
sbb
fs
movsl
mov
xor
cmpsb
fcomi
inc
inc
cmp
push
js
mov
mov
and
sahf
fdivp
mov
pop
dec
jmp
push
arpl
pop
inc
arpl
cmp
push
jge
stos
sbb
ds
xchg
in
and
dec
cmp
movsb
mov
jmp
mov
ret
test
pop
xchg
xchg
mov
mov
nop
lods
jge
fxch
stos
lahf
xchg
xor
aaa
lret
mov
clc
xlat
dec
push
cmc
clc
es
xchg
jecxz
jp
push
add
jp
test
imul
clc
je
aam
sub
jmp
xchg
fsubrl
mov
xor
xor
mov
nop
push
add
ja
movb
jo
inc
out
mov
dec
das
dec
pop
mov
gs
hlt
push
test
ret
mov
iret
out
mov
dec
test
mov
mov
mov
sub
icebp
adc
xor
adc
je
add
jle
lock
rcll
cltd
add
arpl
inc
dec
out
inc
shll
test
loope
es
and
or
push
repz
fcomi
fdivs
xchg
add
push
jl
subl
pop
mov
pop
shr
fistps
mov
in
push
xor
mov
loop
adc
xor
lret
insb
adc
jl
stos
push
divl
fistps
push
inc
jge
in
xchg
sbb
pop
pop
shll
rolb
neg
inc
dec
lahf
inc
outsb
push
push
sub
dec
or
mov
bswap
jmp
jbe
sub
inc
cmp
dec
daa
mov
adc
pop
jo
pushf
jae
loope
hlt
lret
pop
push
inc
enter
pop
lds
dec
cmp
xor
jbe
push
mov
dec
int
pop
push
sub
add
lock
cmp
or
addr16
fyl2x
mov
iret
push
ret
add
or
sbb
sbb
mov
sub
sbb
or
or
jae
es
mov
add
lret
push
jmp
in
sbb
shll
sbb
mov
inc
js
pushf
and
enter
aam
outsl
sbb
aad
stos
inc
mov
sbb
outsb
fsubr
cmpb
xchg
dec
je
aad
fisttpl
pop
jbe
sbb
mov
imul
pop
cli
fldt
leave
and
jno
inc
leave
out
arpl
popf
sti
and
inc
xor
sub
dec
ds
cmpsl
push
fisubrl
cwtl
into
xchg
inc
dec
pop
mov
or
inc
pop
push
leave
add
shl
sub
lock
mov
inc
mov
enter
cld
scas
lods
cmpsb
clc
pop
jge
pop
mov
pop
push
ret
and
insl
push
in
aam
or
inc
inc
cmp
div
inc
loop
sbb
in
xorl
int3
or
xchg
dec
pop
loop
push
and
inc
lret
lret
push
movsl
mov
xchg
and
int3
lahf
or
xchg
in
sbb
adc
xchg
imul
leave
add
jne
jmp
inc
lahf
aad
mov
inc
pop
fistpll
push
enter
ret
je
loope
pop
cwtl
scas
cmp
jl
in
xchg
rorb
mov
jle
mov
pop
mov
xchg
dec
mov
xchg
jne
cld
lret
sbb
add
imull
js
fisttpl
lods
inc
xchg
and
push
scas
jle
jecxz
xor
adc
lds
stos
hlt
es
lret
shll
sbb
or
das
and
out
jp
xlat
jo
int3
mov
or
out
out
outsb
out
adc
in
fdivrl
in
test
scas
or
lret
das
imul
enter
hlt
hlt
jns
or
enter
std
or
push
movsl
or
xlat
icebp
aam
pop
pop
test
aad
or
stos
sti
aad
fstpt
xchg
loope
cmpl
and
lret
add
mov
dec
pop
aaa
add
jnp
iret
les
lods
mov
lea
sub
push
ret
sub
adc
int
call
add
insl
negl
push
mov
in
dec
int3
sarb
rorl
mov
shll
enter
fstpt
jnp
jno
nop
mov
adc
jns
rolb
add
into
xlat
and
jl
out
pusha
sarb
fadds
gs
cmp
hlt
or
stc
outsl
insl
mov
cmp
in
push
or
pop
push
dec
adc
faddl
leave
push
cwtl
mov
push
std
in
push
aas
push
ret
int3
lods
int3
xchg
pop
out
sbbb
xorb
ds
add
sub
jns
data16
dec
ss
mov
add
adc
pop
sbbl
cltd
cld
out
pop
and
pop
xchg
push
mov
outsl
adc
addr16
pop
cli
pop
push
xor
cli
cmc
mov
cmp
fs
xchg
mov
std
jle
xor
pushf
cmp
sub
testl
mov
iret
lds
sbb
adc
cmc
xchg
mov
in
xchg
lcall
insb
bound
fs
mov
cli
add
pop
mov
addr16
enter
aad
sub
xchg
adc
pushf
xchg
std
pop
push
fsubrs
xchg
and
push
and
inc
nop
jbe
enter
cld
in
sub
fcomps
fxch
fwait
xchg
adc
fdivrl
cmpsl
xor
dec
ljmp
stos
push
xchg
jp
ja
int
daa
mov
mov
push
jle
cwtl
pop
das
leave
test
xchg
xchg
jl
rclb
int
xor
xchg
or
mov
jne
aam
mov
rcll
and
outsb
into
pop
lret
pop
icebp
add
mov
add
lahf
mov
sbb
loop
test
pop
dec
jge
adc
and
cmp
lret
or
es
sub
ds
in
dec
and
popf
test
mov
pop
dec
hlt
adc
adc
rorl
loope
inc
dec
xor
insb
shlb
lock
inc
dec
push
out
imul
lock
test
cmp
sbb
cltd
push
mov
aam
mov
fistpl
sbbl
data16
leave
push
ret
aas
or
pop
arpl
andl
mov
mov
pop
out
inc
add
out
jp
or
push
movb
xchg
ret
cs
push
lods
pop
xchg
mov
dec
into
int
pop
cs
sarl
sbbb
add
push
es
jmp
nop
stc
out
loope
and
test
jg
dec
mov
inc
loope
sahf
xchg
das
xchg
xor
stos
jp
cmp
add
or
and
fstpl
vmovntpd
lods
xor
mov
xchg
in
int
push
fisttpl
xlat
jne
pop
and
stc
jl
fists
mov
repz
addr16
insb
repz
pop
lcall
adc
call
xor
ret
fimull
roll
lds
xlat
jle
push
add
mov
lahf
outsl
fwait
xchg
cmp
push
sub
xor
and
inc
nop
xor
stos
test
dec
mov
cli
addr16
ds
and
movsl
mov
ret
adc
pop
add
mov
inc
dec
dec
dec
mov
imul
xchg
popa
inc
cmc
fimuls
ljmp
mov
jbe
sub
repnz
adc
sub
mov
adc
jns
ret
mov
push
fidivrl
or
pushf
or
idivl
dec
loope
dec
xor
dec
add
inc
add
rorl
dec
divl
sub
dec
in
dec
pushf
mov
sahf
out
ds
mov
mov
mov
call
mov
sahf
mov
mov
subl
sbb
fnstenv
inc
pop
out
sahf
push
mov
aaa
mov
lcall
cltd
jae
pop
pusha
pop
hlt
pushf
movsb
js
lret
iret
jg
scas
ds
push
divb
mov
sar
movsl
or
inc
es
repnz
xchg
push
mov
pop
sub
scas
jg
adc
aas
hlt
das
mov
xchg
or
sti
jmp
adcb
jmp
test
xchg
mov
adc
enter
pop
or
jg
outsb
lret
pop
insb
sub
ds
in
cmp
mov
sbb
imul
loopne
and
xchg
stos
push
dec
cmp
inc
insb
in
fstpl
icebp
pop
enter
pop
cmp
xchg
int3
sub
inc
popa
xor
mov
mov
mov
dec
mov
push
imul
into
xchg
mov
fidivrs
scas
fsubrl
stc
cmp
in
pop
cmpsb
jg
jp
inc
gs
sar
adc
faddl
sub
ds
lahf
out
cli
lds
lcall
mov
lock
jle
dec
loopne
shlb
aam
lahf
cld
sub
pop
in
xor
mov
sti
hlt
lods
jp
cmc
adc
xchg
xchg
add
jno
out
cmp
jmp
push
cmp
addr16
mov
fildll
stos
and
bound
cwtl
loop
mov
aad
or
pop
pop
leave
test
arpl
xchg
je
out
jmp
into
jae
test
or
mov
test
pop
imul
xchg
loopne
mov
jp
insb
stc
div
pop
lock
pop
aaa
data16
mov
mov
stc
incb
adc
loopne
adc
idiv
pusha
sti
and
jmp
jp
sbb
std
cmp
xor
inc
jns
jl
movsl
sbb
inc
outsl
or
rolb
imull
adc
sahf
jbe
cmp
popa
jns
xor
jmp
jge
fmull
clc
cmc
aam
lret
dec
cs
mov
dec
call
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
add
pop
jp
or
jp
add
push
loope
xchg
sub
rorb
mov
or
iret
add
and
cmp
or
aad
insb
mov
dec
inc
daa
push
mov
and
jl
cltd
daa
add
mov
mov
mov
lcall
mov
push
mov
dec
imul
int3
out
out
in
cmp
sub
cmp
add
nop
lds
outsb
adc
mov
adc
outsl
xchg
insb
sbb
popa
push
jne
dec
daa
jae
das
roll
jns
and
jecxz
pop
rorl
mov
mov
cmp
adc
mov
adc
cmp
inc
clc
repz
xchg
ljmp
call
cltd
push
movsl
js
xchg
lret
and
scas
scas
lret
inc
sbb
std
loop
int
mov
test
cmpsl
test
mov
pop
and
lahf
test
inc
inc
out
mov
xchg
xor
push
lret
enter
mov
fdivl
aad
lea
jne
sti
and
mov
xchg
js
xor
adc
flds
dec
and
jge
mov
pop
mov
mov
push
pop
xor
cli
fstp
add
repz
push
lea
dec
out
mov
inc
aad
or
push
outsb
mov
shlb
or
xor
scas
push
jb
jecxz
sbb
mov
cmovnp
aaa
or
ljmp
mov
add
mov
mov
mov
out
mov
imul
dec
dec
out
sbb
mov
test
ret
lcall
inc
jo
fs
inc
sub
mov
or
aas
insb
sbbl
ret
sbb
sbb
sub
mov
sbb
push
adc
push
mov
inc
scas
push
or
test
or
popa
fbstp
add
insb
sub
loopne
data16
test
imul
dec
xchg
popa
repz
je
sbbb
inc
push
lds
fs
and
adcl
ljmp
nop
loopne
adcb
cmovne
loope
sti
jb
adc
mov
mov
add
add
mov
mov
fstl
sub
in
pop
jp
in
lcall
pop
shll
pop
dec
ss
int
adc
xchg
xor
rcll
sbb
xchg
ds
aas
sahf
sbb
pop
ret
cmp
mov
nop
ja
xchg
scas
mov
lret
push
ret
sub
out
fists
cs
jg
sbb
push
lds
pop
fisubrl
xchg
outsl
lds
sub
and
loop
cmp
gs
or
dec
mov
pop
mov
or
stc
and
xchg
push
aas
imul
dec
sub
data16
mov
stc
dec
push
mov
fs
sbb
cmpsl
ss
enter
jmp
pop
mov
xchg
and
fs
cmp
out
lock
inc
inc
cli
daa
dec
fnstenv
xlat
mov
or
cmp
shlb
mov
adc
xchg
movsb
mov
push
int
mov
lods
js
sbbb
xchg
ds
push
mov
inc
icebp
sbb
cmpsb
lcall
mov
pop
cmp
jecxz
pusha
test
xor
icebp
mov
ds
cmp
cmp
test
push
mov
cli
xchg
lods
daa
xlat
dec
push
add
je
dec
mov
push
popa
aaa
insl
dec
lea
and
pop
pusha
aas
xor
in
daa
add
lock
xchg
lret
inc
shll
call
sahf
sbb
dec
loopne
sub
fdivrs
andl
push
xchg
or
dec
lock
mov
adc
test
or
or
inc
sbb
push
jo
pop
add
bound
pop
andb
or
xor
lods
inc
mov
xchg
jecxz
sti
pop
add
pop
cltd
mov
adc
and
ret
inc
pop
sahf
adc
insl
pop
cld
inc
repz
mov
pop
jge
and
or
pushf
mov
ja
int
and
mov
sbb
pop
push
shll
add
ret
test
daa
jb
cmc
sbb
ds
jmp
jne
loope
pop
xchg
arpl
dec
scas
mov
je
lods
dec
cmp
sbb
lret
iret
rorb
sub
add
popf
cmpsl
inc
inc
loope
out
pop
ljmp
jnp
cmpsl
mov
push
sbb
jmp
mov
mov
movsb
bound
divb
jnp
addr16
das
cmpsb
daa
repnz
mov
incb
out
add
gs
stc
je
testb
jle
scas
mov
pusha
xor
jmp
push
add
mov
ret
pop
fistpl
adc
jae
push
cld
lock
xchg
daa
xor
iret
test
aas
and
bound
mov
shl
mov
push
adc
pushf
fwait
or
icebp
leave
push
lcall
cli
pop
insl
pop
out
xchg
pop
sbb
cmc
sbb
xor
repz
and
int3
pop
or
xor
ret
arpl
fwait
mov
imul
pop
sbb
pop
inc
inc
xchg
mov
adc
addr16
fstpl
lds
add
cmp
mov
pop
push
cmp
mov
jnp
inc
xlat
or
cld
loop
push
mov
or
pop
scas
xor
hlt
fiadds
adc
cmp
and
jge
mov
lret
pop
dec
bound
cltd
add
inc
cmc
mov
and
lret
jmp
in
aaa
test
stos
or
cmp
mov
aad
xor
fldl
sub
mov
ret
and
insl
sub
fwait
int3
jmp
push
xchg
xlat
cmp
or
out
aad
outsb
mov
add
adc
into
pop
int3
shr
and
shrl
mov
fucomp
xchg
es
lock
xor
add
jp
cli
andl
and
mov
lea
pop
and
sbb
call
sub
in
jo
cmp
mov
mulb
sti
arpl
pop
rclb
aaa
nop
push
ret
mov
and
cmp
jmp
adc
dec
xor
pop
xor
mov
mov
test
pop
push
loop
xor
sub
dec
sbb
pop
mov
jns
lea
or
sub
icebp
lret
xor
je
in
push
leave
sbb
ljmp
mov
cmp
in
adc
xchg
push
rcll
rorl
mov
and
mov
test
or
pop
adc
pop
adc
faddl
dec
jno
movsl
rorb
dec
scas
dec
add
lea
push
lds
pop
ret
xchg
sub
test
ljmp
fs
push
jns
push
stos
and
push
or
mov
call
scas
and
cli
jne
inc
ja
lcall
mov
in
dec
das
push
stos
addr16
aaa
inc
xchg
lahf
jl
mov
cmp
hlt
sub
xchg
cltd
or
and
cmp
pop
movsb
jge
and
dec
outsb
lret
mov
lea
negb
mov
rcrl
add
pop
cmp
inc
nop
mov
ljmp
lcall
pop
aaa
push
insl
cmp
fstl
jae
fistpl
lret
inc
stos
sbb
push
xor
inc
mov
in
aaa
fimuls
leave
adc
pop
jbe
outsb
lret
out
and
lahf
sbb
pop
mov
pusha
lods
shrb
sbb
call
cmp
rcrl
push
mov
fs
ret
pop
popa
repz
faddl
push
pop
xchg
sub
repz
les
mov
adc
incl
outsl
je
mov
push
ss
dec
cmc
enter
icebp
cmp
jl
loop
imul
sub
mov
pop
mov
or
jge
pop
mov
mov
and
mov
adc
cmp
fstl
lret
pop
mov
pop
add
add
scas
or
add
and
mov
pop
mov
or
or
repnz
inc
adc
aad
jnp
dec
add
mov
imul
decl
fwait
out
js
cli
enter
cmpsl
test
jnp
pusha
mov
andw
xchg
aaa
test
xchg
sub
repz
jo
in
mov
lods
jp
jg
jmp
mov
xor
jg
pop
test
cmp
adc
cwtl
xor
ljmp
loope
inc
jg
std
cmp
pushf
fbstp
push
clc
ret
and
insl
xchg
mov
es
jns
fcomps
daa
fwait
push
jo
loopne
test
inc
shlb
sti
notl
out
aam
das
insb
adc
popa
mov
aas
dec
negl
in
cld
adc
lock
sbb
insl
lods
cltd
or
scas
add
inc
shll
xchg
mov
jbe
cltd
rcrb
cmp
and
mov
ss
aas
ja
dec
and
shr
sbb
mov
cmpsb
imull
inc
js
cmp
sbb
mov
xor
shll
imul
in
xorb
repz
dec
shlb
add
mov
xchg
aad
int
sbbl
mov
cld
fidivrs
test
mov
jg
mov
xchg
addb
sub
lretw
or
cmp
imul
rcrb
adc
jge
inc
fildll
xor
test
outsb
inc
push
cmp
cmp
scas
push
int3
push
inc
popa
stc
orl
push
push
iret
aaa
pop
cmp
adc
sbb
sbb
rcrb
int
aas
and
mull
and
subb
xlat
adc
shl
or
pop
loop
pop
fisubs
jns
sahf
xor
jecxz
inc
insb
cmpsb
or
outsl
out
mov
adc
js
aad
inc
push
xchg
inc
xor
orl
arpl
push
push
xchg
je
inc
jo
mov
adc
ficomps
dec
iret
jge
add
cmp
js
add
in
and
inc
xor
cli
ljmp
imul
and
sbb
repnz
sub
imul
xchg
xor
mov
call
xchg
sbb
adc
mov
fmul
daa
xorl
mov
sub
addr16
mov
dec
sahf
sub
lock
mov
sbb
int3
out
adc
fnstenv
je
test
aas
mov
aam
cwtl
push
jo
xor
repnz
push
dec
mov
xor
daa
and
stos
cmp
adc
mov
and
pop
shlb
call
inc
or
cmc
sub
inc
inc
push
fisubs
pop
test
and
add
scas
jmp
mul
ja
cli
mov
xchg
cmp
xor
out
pusha
mov
js
inc
mov
inc
sub
xchg
lods
call
xchg
sahf
sarl
mov
lret
adc
xchg
dec
push
or
pusha
and
dec
xchg
cmp
lds
sub
or
outsb
xchg
push
jmp
sbb
push
ja
cmpsb
inc
adc
dec
sub
test
pop
add
add
sti
xor
popf
push
lds
das
out
out
les
lds
push
test
pmaxub
and
stos
cmp
and
fcompl
cmpsb
lods
in
stos
cmp
jno
mov
jp
inc
addb
call
sbb
addr16
add
dec
mov
aam
outsb
jle
mov
add
hlt
rol
push
and
rorl
out
xchg
shr
scas
add
cmc
pop
in
mov
arpl
jns
out
pop
es
adc
and
or
ja
xor
xchg
mov
xchg
or
mov
mov
pop
add
xor
divl
into
sub
fdivrl
aaa
jle
adcl
adc
frstor
mov
jne
imul
es
mov
scas
test
mov
and
jmp
lods
inc
xor
mov
xchg
stc
sub
ljmp
adc
adc
popf
in
jno
xor
mov
pop
xor
fcmovnb
jb
mov
mov
jae
sub
xor
rcrl
lahf
stos
mov
add
xlat
cmpb
insl
pop
adc
sti
cli
jge
mov
mov
sub
sub
jp
jno
enter
arpl
enter
push
fcomi
add
rorl
lret
ficoml
fwait
dec
test
push
push
sbb
nop
mov
inc
les
xor
adcl
out
and
test
push
in
data16
test
lcall
scas
inc
iret
cli
lret
push
sbb
add
push
popl
pop
jecxz
cmpsb
lods
jnp
mov
cmp
pop
in
mov
in
aam
rolb
fs
icebp
mov
jno
lods
push
pop
xchg
mov
lock
rcrl
cmp
daa
mov
mov
dec
loope
ret
lods
cmp
cmp
cmp
xchg
or
mov
adc
and
jecxz
inc
mov
lret
scas
clc
xchg
int
mov
push
fwait
in
mov
inc
or
lcall
pop
sbb
ss
fisttps
int
out
jno
mov
mov
repnz
mov
stos
push
les
push
cmp
jg
ljmp
push
cli
sub
bound
sbb
add
sahf
icebp
xchg
call
out
mov
nop
push
pop
sbb
mov
sub
cmp
rcrl
popf
mov
xchg
jae
adc
enter
jp
jl
lods
jo
aaa
mov
jg
fdivrp
push
adc
sub
loope
pop
imul
gs
adc
aad
mov
test
movsb
fwait
adc
inc
xor
scas
push
imul
or
cmp
rol
jmp
cmpsb
hlt
cmp
pop
or
lods
je
mov
outsl
mov
pop
movsl
mov
shll
xchg
mov
lds
movl
push
sti
or
jecxz
pop
les
in
test
das
rcrb
or
dec
add
out
inc
in
pop
jb
js
mov
shlb
popa
int3
repnz
xor
enter
xchg
rcr
std
fldl2t
lods
sub
push
test
xlat
jo
iret
cmpsl
add
cwtl
mov
jg
sbbb
dec
sub
jnp
sub
inc
repnz
jle
arpl
cmc
pop
daa
insb
sti
and
or
imul
xor
cld
out
ljmp
inc
movsb
adc
dec
and
jge
mov
mov
mov
jge
jmp
sub
call
jle
xor
mov
jl
or
pusha
ret
pop
mov
leave
pop
inc
add
jnp
xchg
rcl
mov
cmp
lcall
push
sub
jno
mov
mov
mov
sbb
ret
icebp
and
fsts
icebp
test
scas
movsb
faddl
shr
imul
xlat
or
fistpl
aaa
mov
xchg
div
sub
xchg
dec
mov
sbb
adc
in
push
fwait
iret
cmp
addr16
out
push
ficompl
dec
jecxz
mov
not
call
add
shll
jp
shll
push
std
out
leave
gs
xchg
inc
or
push
sbb
sub
stc
xchg
xor
mov
pop
dec
je
sbb
mov
xchg
scas
xor
test
rclb
enter
lock
push
pop
gs
mov
out
add
dec
movsl
mov
out
cwtl
cmpsl
cmpsl
mov
ljmp
ficompl
lea
dec
aas
das
fisubrl
cmp
adc
inc
xor
test
iret
clc
js
jp
mov
ljmp
adc
push
out
push
and
add
adc
xchg
cmpsl
aad
sbb
cwtl
add
push
std
push
lret
jb
mov
jl
pop
pop
and
insl
push
data16
mov
rcrl
dec
dec
loop
fldl
rolb
xchg
mov
add
and
mov
cmpsb
jg
mov
mov
mov
push
xchg
pop
or
test
mov
xrelease
push
in
and
adc
lds
dec
dec
sbb
adc
insb
sub
and
xchg
push
adc
sub
push
lret
push
int
adc
movsl
cltd
jns
sub
mov
enter
cmc
test
mov
adc
fnstenv
adc
xchg
cmp
and
sub
jb
xor
jge
mov
test
cmpsl
lahf
xlat
ljmp
mov
push
pop
push
arpl
outsb
gs
je
ret
stos
cmp
inc
loope
pop
mov
decl
clc
pop
aam
in
push
int3
cmpsl
lahf
and
sub
cmpsl
jle
testb
out
ds
fadds
in
aas
push
insb
mov
xor
push
push
xchg
das
shll
mov
jns
ja
nop
pusha
js
clc
xor
mov
ret
movsl
cmpsb
fdivrs
xchg
nop
mov
add
in
iret
and
or
pop
fstpl
xchg
xor
mov
ja
xor
enter
inc
push
out
push
lahf
fcomps
movsb
sarb
negl
pop
sbb
out
and
inc
popa
add
shll
xchg
sarb
xchg
inc
push
sub
lcall
adc
ret
push
dec
add
mov
rcrb
and
and
push
xor
out
adc
dec
adc
roll
sarb
lods
cmpsl
inc
xor
ret
lods
stos
fidivs
inc
fimull
enter
cld
sub
movl
push
icebp
xchg
arpl
aad
call
push
loopne
cmp
and
push
out
rolb
cwtl
adc
sub
out
xchg
imul
repnz
mov
fmul
xor
data16
cli
and
lods
xor
jae
mov
mov
mov
shlb
mov
loope
dec
jno
mov
xor
popa
and
pop
fdivr
cmc
arpl
div
or
mov
mov
or
decl
ljmp
add
repnz
jb
nop
jmp
add
add
mov
ret
mov
pop
nop
popf
andb
insl
stc
repnz
xchg
std
ja
lds
sahf
push
adc
push
jmp
mov
std
push
push
outsl
ljmp
mov
inc
jp
std
push
cltd
inc
fnsave
mov
enter
addr16
les
stos
dec
push
pop
cmp
fsubrp
fnstsw
sbb
out
repnz
push
shll
cs
loope
fsubrs
xchg
loopne,pn
push
cmp
sbb
pop
fdivl
sti
add
cld
cli
stos
or
mov
inc
inc
je
adc
adc
mov
stos
jmp
mov
es
dec
add
inc
sti
xchg
aas
xchg
pushf
fnstcw
sub
push
adc
and
pop
mov
jle
xor
adc
and
dec
repz
dec
mov
iret
out
cmpsl
push
or
rorb
enter
mov
push
loop
aaa
mul
int
and
mov
pop
jmp
iret
pusha
xor
gs
mov
aad
jmp
rcll
ret
mov
or
sbb
addr16
pop
pop
jnp
xchg
scas
in
inc
call
mov
mov
mov
jb
push
in
push
xchg
xchg
jmp
das
pop
mov
sub
jle
aad
and
out
and
xchg
cmpsb
adc
pop
out
xchg
arpl
inc
fldt
jne
lret
add
bound
inc
std
mov
movsl
mov
mov
mov
mov
dec
test
push
repz
mov
mov
sbb
jbe
repnz
adc
xchg
ds
mov
addr16
test
sti
sbb
push
ljmp
rorb
push
retw
adc
mov
mov
inc
jecxz
repnz
sbb
dec
sub
je
outsb
icebp
hlt
or
sub
cmpsl
add
imul
ljmp
insl
lods
or
mov
xchg
scas
push
mov
cmp
mov
lea
jbe
repz
rol
or
ss
sub
xor
jle
mov
les
subl
addr16
or
push
pop
push
inc
pop
imul
lcall
pusha
test
std
push
cmp
sti
lcall
cmp
mov
mov
in
das
push
cmp
cmp
cmp
sti
sbb
inc
or
push
clc
pop
mov
add
jnp
aam
mov
pop
push
stc
frstor
or
cmp
scas
mov
xor
inc
jnp
mov
fstl
xor
pop
or
xor
inc
cmp
out
push
sahf
dec
jns
adc
xor
cmp
sub
or
rcr
jmp
sbb
xor
mov
icebp
popa
push
inc
pop
sahf
ja
movl
pop
mov
fisttpl
ror
fldl
popl
mov
add
fistl
pop
loopne
and
mov
nop
call
and
mov
push
sub
and
dec
fcoms
enter
and
loopne
popa
pop
push
loopne
push
sarb
mov
faddl
adc
add
leave
lods
bound
cs
test
repnz
jmp
cs
and
sub
add
sar
gs
scas
stos
dec
pop
dec
out
stos
or
xor
enter
fnsave
je
cld
sub
nop
mov
mov
repnz
mov
sbb
rcl
sub
aad
pushf
xchg
push
push
lcall
ret
jge
lret
dec
jo
aaa
pop
xor
and
insl
adcl
jbe
out
scas
out
add
dec
and
in
call
cmpsl
or
ret
dec
test
mov
xchg
cmpsl
adc
add
and
inc
sbb
shrb
mov
jne
inc
push
fst
imul
or
fsubs
in
push
and
popf
mov
movsl
int3
inc
test
or
les
or
lret
not
push
sti
jo
sub
mov
add
loope
fnsave
in
xor
and
gs
loop
jmp
and
jns
lcall
es
xlat
mov
loope
pop
fisubs
iret
jnp
xor
push
sub
dec
mov
jecxz
inc
push
aad
cmpsb
js
mov
jb
push
imul
cmpsl
call
hlt
fwait
mov
push
bound
and
mov
test
ret
iret
sahf
dec
dec
cltd
add
mov
pusha
lods
xor
adc
int3
cmp
xchg
dec
cmpl
inc
int3
mov
call
js
test
jecxz
sbb
outsl
bound
ljmp
aad
dec
in
jecxz
pushf
xor
popf
call
cmp
pop
sbb
in
push
in
ja
xchg
sbb
scas
mov
pop
js
push
pop
push
popaw
ljmp
push
mov
imul
mov
ret
pusha
pop
dec
mov
and
mov
pop
in
mov
movsb
jb
or
inc
pop
xor
popf
ds
test
ljmp
jnp
leave
ret
pop
or
cmc
addl
nop
ds
and
mov
and
cmpb
mov
dec
enter
add
sub
jmp
pop
stc
inc
xchg
popa
push
stc
loope
pop
lds
jl
decl
sbb
jle
mov
mov
jecxz
stos
mov
and
filds
jmp
mov
stc
gs
imul
movsl
fcmovnbe
and
insl
inc
sti
test
lods
loop
mov
fstpt
pusha
lahf
cmp
mov
insb
sbb
fidivrs
scas
and
and
cmp
call
xchg
cmc
xor
pop
push
add
test
jb
cmp
fsts
or
out
mov
add
fisubrs
ror
lret
aas
scas
mov
sbb
in
add
test
or
insl
repnz
jb
jecxz
xor
out
jno
fcom
dec
loope
and
jp
ror
xchg
sti
sub
push
mov
dec
js
add
cmpsb
lea
jmp
or
sar
nop
pop
divl
adc
bound
pop
push
loopne
xor
mov
xchg
dec
movsl
jo
in
cmp
cmp
cmp
je
inc
outsb
mov
push
aam
push
fst
sub
sub
daa
fs
es
ficoml
cmc
scas
outsl
cmp
add
call
jne
scas
mov
lods
lcall
cmp
in
sub
in
push
mov
pop
js
push
lret
cmp
push
pop
or
in
push
pop
in
xchg
sub
in
aaa
pop
out
sbb
int3
adc
xor
jg
nop
add
pop
push
and
pop
out
mov
mov
cmpsl
sub
arpl
cltd
outsl
lods
shrl
inc
daa
gs
jb
test
jo
jns
mov
insb
dec
add
push
aad
mov
dec
jae
add
mov
bound
test
lcall
mov
xchg
into
fs
or
mov
add
jbe
pop
in
test
inc
and
mov
xor
dec
mov
adc
lcall
dec
test
repnz
cltd
and
test
and
leave
dec
push
xchg
out
popf
loopne
fiadds
pop
push
icebp
pushl
lcall
mov
lock
mov
pop
mov
test
push
mov
ds
xor
inc
xchg
shrb
inc
jmp
dec
mov
mov
sub
out
lds
loope
add
fisttpll
out
mov
mov
cltd
xchg
loop
notb
aam
mov
sbb
pop
icebp
loop
and
aaa
fsubr
and
or
or
cmp
inc
and
out
pusha
mov
mov
sti
test
fisttpll
push
add
cltd
dec
popf
jns
cltd
and
test
jge
inc
push
test
dec
add
test
xchg
jbe
cmc
pop
dec
push
arpl
stc
sbb
and
jg
gs
sub
jmp
repz
lahf
mov
jp
cli
or
adc
xchg
stos
rclb
lcall
fdivl
sbb
pop
mov
jnp
push
jp
jmp
stos
roll
enter
in
repnz
fucomip
subb
daa
mov
inc
mov
jmp
cld
test
in
add
mov
fsubs
mov
out
mov
jo
mov
xlat
adc
push
imul
fwait
pop
push
xor
jl
xor
or
xor
sbb
sbbl
cmp
insl
pushf
xchg
xor
push
scas
mov
daa
push
add
js
jmp
cmc
shl
pop
or
xchg
scas
dec
or
dec
aaa
xchg
add
rcrb
das
or
stc
addr16
fisubrl
insb
test
cmp
cmc
mov
scas
stos
sub
jmp
hlt
insb
aad
in
mov
push
push
inc
clc
popa
push
pop
sub
bound
sub
daa
es
stos
inc
push
jbe
xchg
andl
jo
adc
cltd
xlat
jg
mov
push
lods
cmc
mov
mov
or
repnz
mov
adc
push
dec
add
js
lret
push
neg
or
ss
and
dec
popf
or
jecxz
sbb
xchg
jle
or
jbe
aam
cmc
movl
push
dec
aaa
sbb
call
sar
inc
cmpsl
xor
sub
mov
xchg
add
jbe
xchg
cli
or
xchg
adc
fwait
loope
sub
inc
mov
mov
das
les
jl
pop
mov
push
xchg
lods
into
sbb
pop
add
pop
mov
cmp
aaa
adc
xor
test
popa
in
bnd
insb
adc
daa
out
xor
in
js
or
adc
fbld
rcll
leave
pop
inc
jecxz
dec
ret
int
sbb
aaa
push
jle
outsl
out
mov
xorl
lcall
adc
adc
or
push
out
cmpl
cli
mov
leave
pop
pushf
mov
adc
ret
jle
dec
mov
pop
mov
push
hlt
push
xchg
mov
jo
mov
adc
fmull
arpl
mov
sbb
fnstcw
dec
popl
jne
jmp
pushf
push
mov
mov
imul
and
lea
jnp
jnp
push
rcr
std
loope
push
dec
scas
jnp
addr16
repz
and
push
jmp
mov
mov
dec
xchg
push
sbb
jb
add
sti
pushf
push
adc
lds
jg
xorb
nop
cmp
inc
sbb
and
xchg
les
andl
cs
sub
mov
push
sub
dec
mov
in
lods
and
test
jo
loope
pop
jb
js
mov
outsb
cmp
mov
inc
adc
and
arpl
xor
in
int3
aam
insl
ret
mov
adc
es
mov
lods
and
ljmp
adcb
adc
add
inc
jns
fcomp
sbb
xchg
or
out
adc
adc
xor
repz
add
arpl
fs
subl
sbb
movsb
xor
loop
test
stos
std
jg
mov
daa
out
in
fcomi
mov
nop
adc
xor
dec
push
call
pushf
cmc
jne
xchg
fdivl
inc
xchg
xchg
shll
add
xchg
cltd
dec
jecxz
jp
test
inc
inc
mov
inc
lret
fsts
xor
inc
mov
jb
xlat
mov
push
mov
or
clc
push
push
rorb
repz
push
inc
hlt
insb
push
mov
adc
adc
and
or
adc
sbb
enter
dec
xchg
mov
fiaddl
mov
sarb
outsb
push
mov
adc
pop
dec
xor
shlb
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
pop
jno
dec
lcall
jp
jbe
shrl
add
loope
addr16
movsl
out
outsl
push
js
add
cmp
addl
imull
adc
sub
xor
jne
inc
insl
popa
clc
ret
sbb
jge
and
mov
sbbb
xchg
lock
clc
mov
bound
popa
out
data16
nop
sarl
enter
dec
daa
dec
sbb
repnz
mov
xor
dec
repnz
lock
pop
fnstcw
sub
jp
into
adc
loope
adc
pop
add
jmp
pop
test
lods
pop
les
iret
xorb
js
pushf
sbb
jns
bound
ss
push
in
stos
or
push
adc
inc
mov
aad
negb
mov
mov
xchg
aam
in
xor
ss
fbld
and
lock
imul
das
mov
xchg
sub
xor
jmp
or
xchg
stos
push
out
nop
sbb
pop
and
jo
inc
movsl
xor
mov
xchg
lret
mov
push
test
test
jmp
add
adc
aaa
cltd
dec
inc
fs
dec
sbb
repz
sbb
ja
and
dec
daa
aad
jge
mov
dec
loopne
or
sahf
scas
inc
lret
or
jb
test
inc
es
mov
dec
in
jmp
and
or
stos
jp
shrb
pop
lds
push
push
in
shl
pop
loopne
scas
sti
adc
jbe
jns
mov
xchg
mov
rcrl
cwtl
cmp
lea
imul
or
jnp
iret
ret
aas
dec
xchg
in
mov
in
stc
out
or
inc
push
jmp
mulb
incl
sbb
sti
xchg
div
push
jbe
dec
lret
inc
stc
push
stos
push
or
inc
loop
fimull
pop
rclb
shr
testl
mov
or
mov
fcmovnbe
xchg
xchg
in
insb
sub
mull
add
into
xor
lret
xlat
cmpsb
and
mov
inc
insb
inc
cmp
gs
arpl
add
mov
push
mov
push
in
mov
and
push
ja
or
rclb
cmp
sub
leave
js
sub
pop
cmp
sti
add
es
fidivl
movsb
arpl
inc
add
orl
pop
push
ret
dec
xchg
sub
push
jno
mov
inc
ljmp
fcmovnb
hlt
lcall
mov
repnz
jno
loope
jmp
aad
jl
call
or
movsb
aad
sub
ret
nop
pop
or
xchg
lcall
insb
sbb
or
fcmovnu
mov
das
enter
and
sbb
sbb
aam
push
jmp
mov
adc
mov
adc
inc
cmpsl
mov
sbb
pop
jne
arpl
data16
je
mov
inc
adc
cli
lock
hlt
fists
jg
idiv
adcl
aaa
lods
enter
add
xchg
xchg
and
xor
add
out
xchg
arpl
dec
pushf
movsl
push
jg
idivb
and
cmp
xor
and
mov
cmp
push
lods
fadd
arpl
loop
xchg
mov
cmc
popf
scas
stos
loope
push
rol
daa
bound
xchg
or
xchg
xchg
lock
cmp
jp
cmp
arpl
push
jne
shl
adc
int3
ffree
or
sbb
jno
and
mov
xchg
fists
orb
inc
call
call
fsubr
fisubl
mov
lock
aad
sbb
loopne
sub
icebp
das
xchg
lcall
sbb
cmc
dec
sbb
mov
add
test
ljmp
jo
and
sbb
cmp
xor
ss
cli
sti
sub
pop
add
and
cmp
sti
popa
xchg
or
and
into
pop
dec
cmp
fldcw
addb
jo
mov
movsb
sub
xchg
lcall
clc
out
icebp
int
push
inc
push
and
fwait
sti
bound
dec
mov
add
loopne
inc
push
decl
and
leave
test
out
pop
roll
fcmovne
outsb
mov
jmp
sub
mov
stos
mov
mov
mov
sub
jb
ret
jg
jo
push
in
cwtl
test
shrl
icebp
dec
mov
lods
xor
pop
mov
xchg
mov
push
push
aas
faddl
mov
out
cmp
js
inc
inc
push
lret
bound
sbb
ret
lcall
mov
and
flds
sti
jl
adc
mov
scas
push
lret
mov
call
inc
scas
test
inc
mov
push
arpl
lcall
xchg
add
lods
jno
xchg
push
lret
sub
xchg
pop
push
and
jb
fimull
cwtl
icebp
mov
rorl
shl
jg
popf
cmp
std
aad
sbb
jae
lcall
add
cld
push
imul
test
xchg
and
mov
inc
and
cmpsl
push
pop
mov
scas
mov
mov
push
out
sbb
xchg
loop
xor
mov
mov
push
and
jb
into
xchg
in
push
popa
push
leave
cmp
cmp
adc
pop
xchg
js
inc
icebp
mov
cmp
sahf
pop
mov
mov
ljmp
sub
fmul
jb
pop
and
lcall
push
push
cltd
dec
pop
test
mov
pop
dec
inc
sub
pop
aam
or
imul
pop
xor
mov
adc
mov
mov
xor
mov
pop
mov
mov
xchg
fistpl
rcll
js
stc
lds
lcall
das
jecxz
in
mov
std
cmp
mov
jo
inc
xor
es
or
es
pop
dec
add
incb
inc
jae
xorl
mov
xchg
movsb
mov
cmp
pop
lcall
scas
pop
pop
xor
push
mov
cmp
cmc
jl
mov
or
outsl
mov
inc
bound
xchg
jb
pop
into
in
insb
mov
pop
insl
jmp
xor
insb
mov
inc
add
rol
add
sbb
lods
xlat
pop
mov
in
data16
data16
jae
or
in
dec
aas
dec
fsts
pop
push
push
mov
dec
iret
adc
and
xchg
aas
push
mov
pop
xchg
push
lcall
iret
push
and
push
rep
dec
imul
dec
mov
mov
sub
dec
fmuls
xor
aas
mov
jmp
mov
outsb
fs
push
lods
in
daa
scas
into
outsl
fists
lods
clc
movsl
mov
add
pop
sub
add
pop
mov
jnp
cltd
lds
pusha
jbe
push
out
push
lea
dec
pop
xlat
or
push
es
jmp
add
nop
sub
ljmp
adc
inc
aas
dec
jns
fnsave
pop
scas
add
ja
inc
mov
es
ljmp
idivb
push
negb
mulb
dec
jb
lods
in
inc
int3
xchg
xor
and
dec
fstps
std
push
jne
outsb
xor
pusha
or
mov
inc
arpl
sub
add
fcomi
js
push
mov
fldt
stos
daa
mov
fstpl
ss
dec
mov
icebp
adcl
cmp
lock
xchg
push
dec
pop
in
pop
fwait
add
xchg
add
cltd
adc
mov
and
or
dec
je
mov
movntps
lods
xchg
out
jg
mov
xor
les
call
jns
pop
imul
dec
lods
sahf
jne
and
stos
sbb
sbb
add
enter
mov
cmc
and
xlat
push
adc
mov
mov
push
cmp
loope
jns
and
pcmpgtd
std
std
inc
clc
xor
daa
sub
imul
repz
jb
mov
in
ljmp
mov
into
popf
and
fistpll
sub
das
imul
sahf
cmp
frstor
in
into
mov
jecxz
sbb
xchg
pop
mov
lods
call
sbb
mov
mov
in
outsl
push
pop
cltd
mov
imul
mov
sahf
mov
clc
fs
stos
lcall
stos
mov
mov
dec
mov
sarl
mov
cwtl
fdivl
push
sub
cld
fmul
fists
push
cmp
das
mov
mov
pop
adc
add
int
ss
addl
int3
mov
inc
mov
lea
icebp
mov
add
or
add
pop
dec
out
dec
es
test
fisubrs
outsl
jbe
sbb
outsb
arpl
cmc
into
mov
xchg
mov
mov
pop
pop
xor
je
js
sbb
mov
sahf
mov
mov
push
cmp
sbb
mov
cmc
mov
push
ds
sbbl
mov
lock
push
xor
or
mov
dec
arpl
lret
sub
xchg
xchg
test
mov
xchg
dec
jmp
sarb
dec
fnstcw
clc
mov
dec
imul
stc
into
mov
mov
jl
es
les
or
inc
cmp
in
cmp
xor
aam
add
jmp
adc
loope
daa
mov
mov
ficoml
mov
loope
mov
dec
imul
clc
cmp
testl
ret
clc
cli
shrb
out
and
icebp
arpl
cmpsb
dec
or
xor
add
push
pop
lret
addr16
cltd
sbb
or
outsl
add
or
xchg
sub
fnsave
int
mov
mov
dec
mov
push
cmp
xor
jle
pop
pop
or
nop
inc
pop
pop
mov
jno
jne
add
push
ljmp
lods
push
pop
or
jne
enter
call
sbb
mov
rorb
clc
in
xor
ret
aad
neg
sub
not
pusha
in
add
and
pop
mov
test
push
lret
inc
push
mov
jmp
repz
sbbb
jb
and
cmp
sub
pop
add
mov
repnz
iret
mov
cli
js
outsl
cli
and
and
inc
mov
xchg
fwait
insb
cmpsb
or
sbb
pop
dec
or
pop
cmc
cmpsb
jg
cmp
sbb
or
lea
lahf
cmpsl
loopne
or
js
pminub
jmp
faddl
jnp
cmc
in
jp
orl
sbb
xor
das
sbb
adc
out
shll
push
pop
xor
cmp
cmpsl
xlat
sbb
lods
ds
sti
in
mov
outsb
arpl
jne
fbld
add
outsb
dec
movsl
inc
push
pop
pop
stos
scas
push
xchg
jp
stos
jge
cmp
test
xor
incb
adc
dec
cmpsl
andl
adc
cmp
es
jne
mov
mov
fistpl
mov
xor
jns
std
cmpsb
jecxz
inc
sub
je
jae
mov
mov
add
sub
pop
mov
and
mov
cwtl
sub
mov
pushl
xor
xchg
cmpsb
sti
xchg
sbbb
mov
pop
test
lret
mov
jp
outsl
pop
dec
andl
std
imul
outsb
loopne
sub
cmp
test
in
out
jo
and
inc
dec
push
in
or
mov
xor
add
push
inc
jmp
in
pop
cmpsl
lcall
mov
rcrl
push
sub
adc
xchg
sarb
push
cmpsb
pusha
cmp
das
les
arpl
enter
and
outsb
cltd
add
sub
or
ja
enter
sbb
aad
stc
mov
or
cmp
insl
lock
jae
in
mov
aas
cmpsl
aas
lahf
pop
add
sbb
cwtl
popl
pop
push
int3
sub
mov
in
adc
xor
sbb
mov
jmp
clc
xchg
xor
sbb
or
lahf
fmuls
xchg
adc
sub
jge
popa
dec
mov
sti
test
dec
test
xor
shrl
jmp
ret
dec
gs
jno
repnz
leave
repz
xchg
jo
pop
jg
pop
pcmpeqw
ljmp
xlat
shlb
dec
imul
clc
and
adc
clc
jmp
jg
movb
and
out
cli
ficoml
adc
aam
xor
mov
pop
push
adc
push
pop
jae
fistps
pop
shlb
stos
xchg
mov
jg
lock
jecxz
popf
sarb
divb
pushf
pushf
mov
or
sub
xlat
push
test
outsl
sbb
jno
pop
cmp
int
out
popf
fsubrl
mov
and
pop
and
xor
arpl
out
cmp
sub
adc
sub
test
jmp
or
adc
xchg
jno
dec
mov
push
add
mov
mov
ret
sbb
fwait
movsb
lds
or
lock
fwait
nop
pop
jg
loopne
shll
xlat
push
jbe
sub
jge
and
mov
call
xor
lret
push
add
push
and
test
rclb
dec
sbb
pop
or
out
out
jae
add
daa
xchg
pop
pop
ljmp
cwtl
pop
dec
jge
and
je
add
dec
cmp
add
out
mov
xor
add
inc
in
cmp
ret
pop
inc
test
or
push
adc
lret
mov
nop
xchg
shr
xor
aad
push
outsl
or
hlt
inc
mov
xchg
cmpsb
sub
scas
add
jbe
pusha
out
adc
ja
bound
gs
pop
xor
loop
daa
loopne
xchg
jle
and
ds
adc
popf
int3
push
leave
push
pop
mov
arpl
and
push
test
mov
les
sbb
xor
xchg
mov
xor
inc
mov
pop
sbb
mov
aas
mov
roll
adc
ret
js
int
test
dec
stos
or
mov
push
xor
daa
fwait
xor
adc
rorl
das
sbb
xchg
gs
cmc
push
jmp
or
mov
sti
imul
out
fcoml
mov
sub
call
xchg
pop
ror
inc
push
js
add
roll
aaa
sub
jge
pop
inc
in
cmp
push
push
dec
inc
add
dec
dec
pop
sub
jle
xchg
in
test
sbb
daa
cmovg
dec
mov
ret
push
sub
jo,pn
testl
orps
jb
mov
inc
outsl
jg
mov
mov
push
int
fstps
push
push
mov
shrl
pop
jnp,pt
xchg
mov
mov
dec
iret
popl
push
movsl
jno
and
mov
andl
jg
and
outsb
mov
ljmp
lcall
dec
popa
xor
out
out
cwtl
dec
insb
movsb
adc
ss
int3
mov
push
fst
es
mov
imul
push
mov
dec
test
rorb
mov
dec
push
inc
adc
inc
ret
fcom
call
test
pop
mov
push
loope
jecxz
lock
fistps
cld
aad
jae
fs
sub
adc
icebp
inc
icebp
fisttps
rorl
cmp
sbb
in
push
and
test
cld
leave
popa
jmp
bound
stos
outsl
inc
test
in
mov
into
aas
fldenv
lock
cmpsb
adc
fcomp
shrl
fisttps
bound
stos
insb
sub
jge
ret
inc
lods
fisubrl
lods
adc
sarb
fistpll
push
dec
add
mov
sbb
sbb
mov
xchg
push
sub
insl
mov
or
adc
loopne
cmp
mov
mov
jmp
daa
test
inc
sbb
std
and
mov
xchg
movl
std
xor
out
inc
xor
ret
mov
bnd
mov
stc
pop
dec
ss
test
clc
cltd
shlb
sbb
jno
dec
pop
push
push
inc
push
fildll
out
xchg
popa
cltd
sub
pop
loope
bound
out
sub
xchg
dec
cmp
xchg
sbb
dec
das
movsb
clc
pop
nop
out
dec
lds
push
in
rorb
rcrb
lahf
out
sbb
mov
pop
movsl
pushf
sti
in
int
aas
loop
test
pop
cli
decl
or
inc
out
push
and
imul
mov
jle
mov
adc
inc
inc
cli
out
add
std
mov
outsb
rolb
sbb
mov
mov
add
dec
push
lahf
out
clc
cmp
imul
sbb
push
lret
jl
popa
ljmp
sbb
push
push
adc
rcll
ret
repz
push
fwait
cmc
mov
xor
pusha
jp
inc
fdiv
push
repz
mov
leave
ja
rcl
inc
adc
js
inc
xor
add
mov
in
outsb
popa
mov
push
ja
or
mov
ret
dec
mov
jbe
fwait
cwtl
adc
lcall
fldcw
dec
loope
mov
push
inc
inc
push
lcall
ret
imul
jp
out
test
push
pop
movsb
push
pop
inc
test
in
icebp
or
ljmp
inc
mul
adc
jg
cmp
or
fcompl
ljmp
and
cmpsb
test
lods
mov
repz
repz
add
mov
mov
cld
ret
pop
in
out
sub
add
addr16
test
scas
push
pop
xor
rcrl
or
ss
xor
lea
mov
test
add
pop
adc
fildll
imul
sub
das
mov
ficompl
push
pushf
sub
mov
aaa
cltd
scas
movsl
out
push
mov
sbb
cltd
sbb
adc
mov
ljmp
inc
aad
movsl
sahf
roll
xlat
jp
mov
sbb
fs
xchg
mov
lods
mov
cmpsl
push
jbe
ljmp
hlt
xlat
xchg
imul
jo
decb
pop
adc
js
inc
aas
out
jg
mov
das
xchg
out
dec
push
in
dec
out
sahf
pushl
dec
and
sbb
or
mov
imul
lahf
mov
aam
cmp
or
testl
pop
xor
sub
shlb
cmp
add
sub
aad
fwait
xor
xor
sub
ret
pop
jmp
xor
lret
push
das
aam
pushf
or
lods
mov
sbb
push
pop
dec
cmpsl
xchg
cmp
int
test
lret
jmp
leave
adc
pop
aad
xchg
scas
mov
mov
lcall
add
sbb
js
adc
clc
stos
repnz
xor
mov
add
aam
js
call
mov
mov
std
jbe
mov
mov
pusha
mov
pop
cmp
shrl
inc
imul
int
adc
movsl
fadds
xchg
rorb
jl
movsb
repnz
mov
fs
xchg
bound
test
mov
xchg
adc
adc
push
nop
out
fdivl
adc
sub
and
sub
or
sbb
outsl
inc
scas
rolb
aad
cmpsb
scas
jmp
mov
jno
jp
push
jmp
aas
test
inc
sbb
pop
bound
mov
mov
pop
dec
ret
adc
lods
jne
dec
rorl
push
adcl
pop
call
mov
mov
out
cld
movsl
mov
cmp
shl
into
mov
mov
cs
xchg
movsb
inc
stos
out
mov
iret
sbb
add
xchg
sahf
in
sarl
aam
mov
jmp
leave
ljmp
pop
dec
cmpsb
mov
roll
sub
cltd
ja
nop
pop
sti
int3
mov
arpl
pop
hlt
lret
addr16
cmc
or
cwtl
aam
push
adc
mov
xchg
stc
xor
sbb
push
mov
repnz
mov
fnsetpm(287
jno
repz
mov
das
xor
inc
xor
sahf
pop
jecxz
sub
jne
cltd
shrl
xchg
insb
or
lahf
jle
sub
in
aaa
jnp
loope
mov
dec
mov
xchg
xchg
xchg
fwait
mov
jae
or
push
xchg
mov
aaa
cmp
inc
mov
data16
in
xchg
sbb
sbb
mov
pop
je
inc
inc
icebp
repnz
inc
xchg
mov
and
in
adc
or
xlat
nop
test
push
iret
les
stos
pop
inc
push
pushf
in
shll
jae
stos
xor
adc
and
nop
mov
sub
adc
mov
into
sbb
mov
dec
mov
xor
push
sbb
or
repnz
lcall
pusha
mov
inc
mov
sti
test
jnp
inc
stos
sbb
inc
sub
dec
daa
jecxz
inc
jo
test
push
jae
das
mov
mov
pop
jle
aad
rcll
xchg
clc
xchg
push
cmp
jl
push
sub
in
loope
in
and
cwtl
xchg
rorb
sahf
adc
mov
jle
xchg
xlat
adc
sbb
sub
push
cs
repnz
lret
jge
cmp
addr16
mov
mov
push
fiadds
add
iret
test
inc
mov
jmp
dec
faddl
sub
mov
sbb
xor
ret
mov
cli
jno
cmpsl
cmp
mov
jl
divb
sub
int3
mov
push
mov
add
aam
fisubl
das
notb
cmp
and
push
scas
sub
jno
stc
cmp
sbb
iret
es
inc
adc
leave
cmpsb
pop
mov
out
sbb
imul
test
pop
in
ja
into
popa
nop
orl
cmp
jmp
pop
xorl
sbb
lock
shrl
mov
pop
cmp
push
test
aam
insb
lea
les
jecxz
arpl
jns
pop
bound
sahf
fdiv
push
xchg
pop
xchg
pop
xor
pop
xor
sbb
or
mov
loope
xchg
scas
fisubrl
xor
scas
ret
jno
jge
jl
add
adc
sbb
inc
repnz
mov
ficomps
rcll
enter
outsb
pop
loop
lahf
cld
inc
or
fwait
and
sti
inc
dec
fdivrs
daa
scas
es
js
pop
jns
in
xchg
dec
mov
adc
lret
adc
dec
sub
mov
adcb
and
xchg
in
rep
or
notl
jnp
sbbl
js
clc
mov
adc
scas
test
test
rolb
lret
push
cli
cwtl
push
ss
sbb
dec
and
in
fldz
push
mov
jecxz
or
adcb
jnp
mov
scas
add
or
mov
jl
add
cmp
repnz
and
xchg
lods
sbbl
jo
leave
sbb
popf
push
repz
push
pop
mov
push
jp
arpl
jle
imul
loope
jge
sbbb
mov
fiadds
inc
push
rcll
push
popf
mov
cmp
icebp
xchg
adc
xchg
enter
jmp
lcall
int
add
js
sub
imul
cmp
xchg
pop
sahf
xor
and
push
int3
mov
pop
inc
jle
xor
aad
dec
cwtl
cmp
aam
xchg
cmp
xor
dec
xor
push
out
gs
movsl
xchg
adc
out
dec
fsin
scas
jae
loope
decb
and
out
out
scas
cmp
adc
mov
add
xor
adc
insl
test
imul
movsl
aad
outsl
pop
les
xchg
xor
pop
sbb
daa
mov
imull
ret
nop
pop
pop
iret
out
jg
ja
jb
test
pusha
pop
es
jle
pop
dec
adcb
cwtl
ret
movsl
push
mov
mov
mov
adc
mov
or
movsl
dec
mov
leave
out
aaa
jne
and
pop
arpl
pushf
inc
push
or
xchg
fistpl
bound
push
jmp
test
push
cwtl
daa
add
xchg
shrl
push
lods
loope
pushf
das
push
xchg
fwait
bound
jp
jg
imul
sub
and
pop
dec
aaa
int
xor
fdivs
int3
sbb
pop
push
jb
shrb
sahf
push
dec
subb
and
lods
dec
orb
dec
out
dec
xor
inc
outsb
and
adc
inc
mov
int3
inc
dec
aas
push
sub
enter
jno
das
xor
ret
stc
loope
pop
jle
lahf
dec
pusha
test
cmc
xlat
add
in
adc
stc
pop
mulb
mov
out
test
sarl
xchg
bound
dec
fsubrs
inc
jb
xor
mulb
pop
push
ja
add
mov
xchg
push
jmp
call
in
popf
cmp
mov
testl
divl
xchg
je
cmp
adc
outsb
into
movsb
mov
je
sub
clc
aas
ds
arpl
je
pop
fiaddl
loopne
mov
lods
mov
xchg
add
iret
or
outsb
data16
jecxz
insl
and
mov
or
loope
pop
jb
and
mov
add
ret
sub
add
or
nop
cmp
aam
mov
adc
rcrb
push
xchg
add
mov
pop
xchg
cmp
mov
jnp
je
leave
pop
dec
push
jo
mov
cmp
mov
sub
mov
fmuls
dec
push
aaa
push
and
outsl
std
movsb
push
or
mov
mov
push
add
into
adc
divb
sbb
cmp
sub
inc
xchg
imul
mov
mov
mov
xor
jle
xor
inc
mov
dec
push
mov
in
decl
add
bnd
add
int
stos
and
xchg
call
inc
call
adc
aad
imulb
push
loop
jae
push
test
ja
mov
lods
inc
movsb
mov
adc
mov
cmpsb
jle
push
sarl
std
jae
mov
into
cs
shll
fwait
mov
repz
mov
push
mov
mov
ja
fwait
cmc
cmp
xchg
xorb
xchg
in
je
pop
mov
in
xor
xor
and
inc
in
cmp
cmp
xor
data16
iret
push
xchg
inc
xor
cmpsl
jg
inc
adcb
pop
and
repnz
mov
xor
dec
test
and
sub
out
icebp
dec
scas
xor
pop
pop
mov
pop
movsl
in
aam
sub
dec
cs
push
xchg
pop
jns
jne
pop
adc
movsl
vmwrite
add
xor
sub
mov
dec
push
xor
lea
aam
sbb
stos
scas
icebp
pop
out
lds
dec
adcl
pop
inc
in
cltd
sbb
mov
inc
icebp
cmc
adc
pusha
fs
mov
mov
stos
call
mov
jecxz
xor
push
imul
push
xlat
lahf
int
or
mov
jle
stos
popa
cmp
cmp
mov
mov
xchg
repz
fcompl
inc
aaa
and
jbe
mov
mov
insl
mov
dec
and
jno
mov
inc
xchg
push
push
std
fstpt
mov
rcrb
cld
add
mov
jae
insb
dec
out
add
lcall
cltd
dec
mov
loop
jne
xchg
leave
imulb
aam
mov
jbe
and
dec
dec
and
icebp
dec
mov
pop
mov
bound
mov
dec
cmp
dec
add
and
mov
mov
out
clc
cmp
sub
push
pop
test
aad
out
add
push
popa
pusha
xlat
mov
cmpsb
sbbb
push
mov
xchg
sbb
jns
ret
clc
pusha
loopne
push
sub
sub
aas
xchg
mov
aas
adc
sub
jae
in
sbb
mov
aam
bound
dec
mov
inc
dec
pop
pop
sub
rorb
stc
fwait
and
rorb
sub
fcompl
lret
adc
and
ds
cmp
or
out
mov
and
push
inc
repnz
adc
out
xchg
inc
int3
dec
xchg
arpl
dec
pop
shrb
mov
cltd
sbb
and
jle
sbb
or
push
pop
movb
inc
inc
sub
adc
fnsave
add
in
mov
xor
mov
enter
push
iret
call
addl
fsubrl
jl
mov
jns
jno
adc
pop
mov
mov
push
ficoms
idivl
jl
xchg
gs
inc
mov
sub
lahf
inc
mov
lret
xchg
push
push
mov
xor
aaa
mov
inc
ficoml
js
fs
iret
xorb
iret
test
mov
cmp
aad
shlb
roll
insl
pop
xor
inc
rorb
jns
push
sub
scas
dec
rcll
mov
mov
xchg
movsl
fistpll
cmp
jae
cmp
mov
adc
mov
test
out
mov
or
sub
xchg
sti
adc
push
shr
push
cmpsb
sahf
lahf
inc
sahf
icebp
scas
or
push
push
ja
cmp
inc
stc
xchg
mov
cwtl
cmc
out
cwtl
mov
fdivl
push
into
jp
shrl
daa
dec
mov
pushf
xchg
roll
cmp
into
in
jnp
jb
xchg
lret
sahf
pop
inc
dec
sarb
jl
stos
inc
pop
data16
pop
cltd
je
xor
pop
and
daa
mov
xor
add
mov
inc
ljmp
movsb
mov
aas
setne
push
mov
js
cld
ja
or
in
daa
push
pop
ret
mov
xor
scas
xor
inc
test
mov
inc
int3
out
adc
pop
mov
loop
cli
pop
mov
push
add
xor
mov
cmp
sarb
rorb
dec
adcb
loopne,pn
adc
cld
outsb
jbe
push
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
lret
cmp
jp
pop
jp
int3
pop
xor
fsubp
fldt
in
push
cmp
fisubrl
and
into
stc
bound
lret
fidivl
movsl
ds
or
subl
stos
repz
scas
push
push
and
sub
xlat
pusha
push
mov
push
mov
roll
hlt
mov
dec
add
daa
stc
sbb
jbe
cmp
int3
aad
sti
pop
les
push
adc
mov
movsl
inc
cli
push
add
ljmp
push
cmpl
jecxz
inc
xor
add
mov
cmc
mov
mov
cmpb
pusha
cltd
aaa
mov
jge
pop
cmp
popf
or
ss
movsb
mov
je
add
test
cmp
fldenv
loopne
adc
inc
out
lea
inc
mov
cmpsb
pop
mov
or
ret
js
mov
dec
dec
push
mov
mov
cmp
fldl
ret
dec
push
push
push
loope
inc
add
lret
shl
mov
adc
mov
shrb
test
mov
bound
xor
loope
mov
fstl
xchg
cmp
pushf
and
mov
mov
xlat
jns
lea
push
pminub
sti
mov
push
sub
das
cmp
fs
add
jge
outsl
sbb
inc
pop
ficoms
mov
arpl
nop
out
cld
test
mov
in
push
mov
and
out
je
xor
and
sub
mov
inc
pop
push
push
test
rcrb
inc
push
mov
jbe
leave
xchg
dec
mov
sti
nop
jecxz
or
clc
arpl
sbb
inc
sbb
or
cmpsb
or
jbe
xchg
int
div
dec
add
mov
inc
mov
pop
adc
arpl
add
add
movsl
cwtl
push
nop
clc
mov
shll
push
cmp
dec
cli
mov
out
and
xor
sub
xchg
fisttps
in
pop
in
pop
mov
aam
dec
or
es
xchg
outsl
sbbl
inc
adc
mov
adc
mov
jmp
sub
adc
lods
pop
push
fs
mov
pop
mov
pushf
adc
xchg
sub
cmp
movsb
inc
sbb
daa
movsb
mov
cmpsb
cs
mov
add
sbb
sub
xor
enter
xchg
xor
lds
out
lea
out
outsb
sarl
iret
test
fcomps
movsb
push
mov
inc
subb
lret
mov
dec
and
pop
jns
cmp
test
push
xchg
sub
sbb
cmp
push
jg
mov
enter
iret
or
hlt
not
xchg
and
stos
or
and
in
sarl
xchg
lret
mov
ljmp
adc
in
test
or
js
cltd
dec
fsubp
xlat
adc
pop
scas
loopne
imul
mov
xchg
jo
popf
test
leave
jg
adc
cltd
outsl
cmp
cltd
icebp
and
pop
testl
sbb
aam
mov
pushf
fildl
mov
dec
mov
mov
inc
mov
mov
pop
inc
and
cwtl
imul
shrb
jns
mov
pop
jo
ret
int3
lods
dec
mov
sbb
or
cltd
sbb
stc
cmp
pop
pop
or
mov
xchg
jmp
adc
movsb
pop
adc
mov
and
cmpl
adc
dec
enter
and
mov
fisubs
xchg
jno
repz
and
pop
adc
cld
psubusw
mov
sub
sub
and
fidivrs
mov
inc
lock
xor
movsl
mov
sub
dec
pusha
bound
xor
mov
lcall
push
mov
push
jb
and
imul
jae
sarl
out
xor
in
push
inc
in
leave
les
mov
dec
adc
push
enter
leave
movsb
lret
adc
cs
xor
inc
push
bound
adc
out
mov
pushf
mov
bound
sub
dec
xor
sbb
mov
cltd
pop
int
sti
cmp
xchg
dec
push
pop
lret
imul
out
mov
mov
ror
into
js
fwait
pop
pop
fwait
jmp
cltd
les
out
sub
dec
push
fisubl
cmp
movsb
rorl
jnp
gs
lds
jle
inc
pop
aad
push
in
pop
imul
or
inc
test
adc
cmc
xor
sub
gs
iret
sahf
sbb
dec
cmp
arpl
repnz
stc
mov
ret
je
fs
dec
sub
mov
and
mov
add
sub
aas
test
dec
dec
das
pop
arpl
loopne
in
mov
fiaddl
test
ds
aad
test
sysret
in
scas
loope
scas
or
push
xlat
jmp
cltd
fsts
cmp
sbb
and
cmpsl
mov
lds
cmp
jmp
xchg
shll
ret
pop
xchg
fstl
and
sub
stos
ds
lret
sbb
mov
mov
push
fxch
sub
dec
xchg
xchg
sbb
push
mov
fmuls
push
pushf
push
call
adcb
lret
and
cmpsl
mov
and
mov
fmuls
pslld
add
and
and
push
mov
bound
add
and
movb
mov
adc
sbb
adc
mov
cmpl
push
pop
cmp
mov
mov
fstps
lret
push
adc
loope
mov
popf
ss
and
jp
divl
xchg
clc
push
and
xor
fnstsw
inc
push
dec
xchg
xor
shll
and
and
fbld
mov
cmp
add
je
rorb
inc
or
testb
aam
std
mov
inc
push
sub
sti
repz
xor
add
push
aaa
cld
stos
jp
jl
test
jbe
lock
mov
add
add
je
repz
js
xor
js
in
aad
shlb
inc
xorl
pop
xchg
in
inc
addr16
and
testb
sub
das
fdivp
inc
or
out
movaps
add
arpl
ds
jnp
sti
repz
push
mov
int3
not
xchg
fadds
repnz
psadbw
jne
jmp
dec
add
or
jg
dec
pop
repz
int
das
adc
jge
int3
mov
outsl
movsl
cmpsl
mov
xchg
mov
xchg
icebp
shll
sub
adc
inc
shl
inc
movsb
xchg
nop
packsswb
cmp
cli
enter
shr
dec
lock
pop
ds
cld
jb
lods
daa
enter
xchg
movl
inc
mov
xchg
sbbb
call
cmp
adc
into
add
sbb
std
popf
xchg
stc
cmp
enter
and
dec
aaa
fcomps
pop
shlb
mov
jmp
stos
xchg
mov
sub
cmc
ret
jb
push
cmp
les
push
push
hlt
push
out
mov
push
lret
addr16
xchg
scas
std
sbb
sahf
adc
xlat
imulb
push
outsb
dec
and
leave
fsubs
movsl
mov
outsl
push
xchg
mov
dec
out
cmpsb
jns
test
xchg
pop
lock
mov
pop
sub
scas
jae
push
xor
loop
sti
pop
sbb
in
stos
fsts
pop
inc
arpl
std
mov
lea
jnp
xchg
dec
out
xchg
arpl
arpl
add
adc
dec
sbb
pop
andl
lea
iret
in
mulb
add
lea
or
mov
movsb
stos
dec
fistps
mov
dec
cmc
nop
inc
stos
lahf
icebp
or
dec
in
decb
jge
imul
sarl
jecxz
ja
outsb
fucomi
dec
jb
fisubs
mov
mov
sahf
lea
push
xchg
xchg
cmovb
inc
cs
roll
insb
mov
gs
call
int
add
rorb
sti
adc
pop
lea
sahf
clc
adcb
inc
or
dec
fnstsw
mov
pop
flds
addr16
addr16
adc
xchg
fistl
jbe
stc
and
jge
jb
in
test
stc
fsubrl
hlt
push
fdivp
pushf
stos
pop
les
lods
into
orl
push
mov
pop
xchg
fisubl
les
mov
mov
xor
test
psrlq
push
hlt
mov
jmp
pop
call
cwtl
scas
pop
and
ljmp
out
stc
xchg
xchg
aaa
add
bound
loop
adc
lods
mov
addr16
mov
mov
add
sub
push
xchg
mov
sub
xor
enter
subb
enter
stos
push
xchg
gs
in
sub
shlb
push
fsubp
mov
mov
or
addr16
jp
sti
push
xchg
cmp
jecxz
jp
pop
fcompl
aaa
andl
std
mov
inc
int
cmp
inc
lock
dec
in
sub
popf
icebp
mov
inc
shlb
xchg
mov
fstl
inc
dec
inc
fisubrl
int3
jns
fcomp
in
fcomps
mov
and
jae
jns,pt
ret
hlt
cmpl
xchg
add
xor
inc
cs
into
mov
cmp
movsl
and
xchg
xlat
cld
in
jl
daa
dec
insb
cld
fwait
mov
in
cmpb
and
in
cli
and
and
inc
add
or
sahf
inc
mov
scas
aaa
repz
stos
jle
mov
sahf
cmc
aaa
enter
in
mov
fwait
test
jae
sub
xchg
ret
jmp
rcr
rclb
cmp
movsb
and
sbb
push
lcall
lods
push
xchg
push
sbb
pop
sub
mov
sbb
cmp
mov
jo
xor
cmp
or
ret
mov
shrl
sbb
cmp
or
xor
aad
lods
add
mov
mov
cmp
push
ret
inc
xchg
mov
push
stos
cmp
movsl
mov
cwtl
pop
fwait
xor
sbb
lret
jg
xor
call
pop
xor
pop
arpl
cmp
lret
or
lds
sahf
and
popf
inc
xor
addr16
jp
sub
out
sarl
ss
std
push
dec
lea
xor
inc
mov
lds
xor
xchg
mov
jp
mov
adc
sbb
inc
mov
jae
adc
lret
adc
lds
mov
mov
sub
and
dec
neg
mov
and
out
fwait
xlat
shlb
in
js
dec
dec
cltd
dec
adc
cs
inc
or
aam
ret
lcall
jo
pushf
sbb
jl
in
pusha
xor
push
into
sub
mov
test
cld
dec
scas
adc
aas
and
gs
adc
push
pop
inc
mov
andb
mov
push
shlb
shlb
lret
and
mov
xorb
xor
and
fstps
jno
mov
fcomi
mov
inc
inc
aam
mov
and
dec
popa
mov
fldenv
pop
mov
lahf
outsl
ficoms
shll
jle
test
call
cmp
cld
pop
xchg
sbb
jbe
push
sbb
push
lcall
xchg
popf
dec
sbb
hlt
jbe
mov
enter
jp
test
pop
fldt
sbb
pusha
jl
subl
out
push
shlb
cmp
push
scas
adc
pop
inc
dec
mov
push
xchg
push
inc
cmp
ret
push
dec
test
loope
test
test
pusha
inc
je
movsb
fstl
fwait
pop
mov
and
xor
imul
mov
or
sub
and
mov
sbb
adc
les
scas
xor
push
add
out
mov
pop
sub
aam
aas
ja
jbe
roll
and
xchg
mov
mov
fwait
loop
xchg
ret
call
jb
je
or
out
test
fists
sub
out
xchg
add
push
mov
add
jno
ret
push
loopne
xchg
mov
push
pop
add
lods
ljmp
adc
jecxz
xor
inc
dec
jge
and
cli
les
jo
insb
push
out
in
sub
scas
int
out
mov
movsl
hlt
xchg
lock
jmp
lods
stc
lea
mov
mov
lods
mov
add
into
insb
pop
sarb
mov
fcomps
fs
aam
pusha
mov
lock
into
xlat
arpl
add
push
mov
inc
inc
test
fcompl
pop
pop
icebp
shrl
aad
xor
adcl
fs
sub
jbe
adc
pop
scas
lcall
sub
pop
cmp
std
ret
out
pop
dec
std
mov
adc
xchg
fbld
pop
enter
fidivs
repnz
jae
insl
xchg
add
xchg
cmp
outsl
sbb
stc
inc
jo
std
stc
in
jg
adc
aam
fsubrs
arpl
inc
sub
imul
push
pmaddwd
test
add
repz
or
and
lret
mov
xor
or
mov
xor
push
icebp
xor
push
repz
or
dec
push
movsb
pusha
xor
cmp
loope
loopne
sub
jno
push
lret
cmpsb
mov
sbb
hlt
cli
das
jp
bound
mov
ja
ljmp
jne
inc
xchg
out
xchg
push
mov
xchg
out
push
lcall
and
iret
dec
or
data16
and
cmp
ret
cmp
add
loop
jne
or
sub
arpl
jg
adc
and
ret
clc
jle
push
roll
push
ret
inc
and
xchg
aad
mov
outsb
mov
add
and
roll
out
push
add
jecxz
rcll
icebp
insb
je
test
insb
sub
clc
gs
das
es
fdivp
xor
repnz
push
mov
mov
fstpl
addr16
in
and
mov
dec
stc
pop
cmp
stos
xchg
jg
pusha
ret
jmp
shll
hlt
inc
cmp
ss
sti
and
inc
xchg
dec
push
ret
mov
dec
push
jle
cmp
imul
ret
push
call
iret
lea
jl
dec
push
sub
mov
xor
neg
sub
test
insl
pop
jmp
mov
or
roll
out
popa
lock
jnp
pop
es
aaa
inc
mov
cmp
pop
and
fadd
jns
sub
shl
sbb
jb
xor
in
xlat
push
or
icebp
add
addr16
mov
cwtl
mov
adc
push
push
loope
push
aad
shlb
sub
add
inc
mov
mov
sbb
lret
lock
adc
mov
aaa
sbb
mov
or
adc
or
repz
sbb
mov
cmp
jnp
ds
fdivl
adc
and
xchg
scas
shl
pop
inc
pop
xchg
lods
nop
lods
push
mov
sbb
jmp
jl
stc
push
imul
jb
dec
jmp
xchg
ds
mov
jnp
int3
and
imul
stc
jmp
push
loopne
stos
push
mov
out
mov
popa
mov
gs
cmc
xlat
fcomi
jns
out
ror
mov
aad
mov
loopne
mov
in
bound
ss
inc
out
fadds
push
xor
stos
push
stos
sub
and
sub
xchg
sahf
pop
out
scas
inc
fbld
out
addl
push
adc
ret
xchg
xchg
cld
scas
mov
gs
pxor
xchg
sub
or
orb
push
iret
mov
outsl
jle
adc
jae
fisttpl
leave
push
pop
cmpsb
pop
adc
out
std
rclb
pop
inc
sti
sub
pop
les
in
out
iret
jb
jae
pop
cli
fbld
or
push
outsb
scas
jns
icebp
dec
jbe
fistl
cmp
data16
aas
stos
sub
cmc
out
lods
xchg
or
inc
not
je
inc
orb
fucomp
mov
std
jne
test
pop
mov
sahf
sahf
pushf
jb
sbb
outsb
push
or
cmp
js,pn
push
mov
outsb
jp
push
lds
das
cmpsb
imul
rcrb
jo
and
sub
push
push
push
push
mov
imul
mov
inc
pop
aas
stos
lods
imul
shl
sub
push
xchg
out
inc
imul
ja
repnz
mov
xor
mov
jne
outsb
addb
pushl
mov
sbb
cmp
mov
call
in
in
sbb
clc
or
sub
mov
iret
sub
fmuls
mov
cmc
xor
mov
js
mov
mov
in
mov
mov
mov
xchg
and
sub
inc
dec
mov
insb
mov
imul
mov
xchg
sub
popf
shll
out
mov
dec
add
mov
pop
xor
push
enter
dec
movnti
cli
pop
sbb
mov
xor
and
adc
adc
rolb
sbb
aas
push
inc
fisubl
pushf
js
inc
scas
fbstp
imul
sbb
mov
stos
mov
iret
leave
and
mov
mov
jo
leave
mov
mov
jl
adc
sbb
leave
push
stos
inc
test
fwait
pop
jge
testl
into
cli
jns
mov
or
pop
or
clc
std
in
mov
cld
loope
xor
pop
cmp
mov
jbe
xchg
adc
dec
loope
dec
pop
push
out
int
xchg
ss
xlat
dec
iret
and
sbb
inc
dec
sbb
call
cmp
imul
and
nop
jns
pop
mov
xlat
xchg
dec
sahf
aaa
inc
jecxz
aam
inc
xor
adc
fistpl
jo
mov
mov
mov
mov
out
inc
jae
mov
lret
outsl
stos
adc
mov
xlat
and
sub
push
adc
dec
into
js
icebp
sti
int3
scas
paddq
lds
icebp
inc
adc
loope
jmp
pop
xchg
push
int3
xchg
stc
rcrl
psrad
and
push
or
je,pn
xcrypt-cbc
cmpsl
push
subl
sub
cmpsl
in
and
sarb
xchg
fs
fldt
scas
sub
xchg
dec
push
cmp
nop
test
push
push
inc
mov
sub
jne
jmp
mov
insl
jbe
data16
sub
mov
or
mov
xlat
leave
dec
sahf
jle
subl
push
lahf
pop
and
inc
xlat
cs
rcll
or
pcmpgtw
mov
in
or
mov
jno
and
das
push
jo
inc
xchg
xchg
cwtl
pusha
xchg
pushw
cmpl
xor
loop
sub
nop
adcl
jae
enter
pop
sbb
arpl
cmp
pop
mov
mov
dec
pop
mov
test
and
xchg
mov
bound
xor
cmpsb
jbe
sbb
cli
mov
call
stos
ss
push
push
push
test
lret
dec
shrb
pop
pusha
mov
push
push
push
push
push
xchg
push
xchg
and
add
mov
test
xchg
je
sub
bound
add
mov
dec
outsb
jb
das
jne
push
clc
and
rcll
jnp
inc
sti
decb
pushf
mov
ljmp
test
in
aad
into
add
xor
xchg
cld
adc
fcmovbe
xchg
loopne
adc
sub
jp
cmp
push
add
pop
mov
pop
mov
loopne
inc
lahf
push
jge
lock
int3
mov
mov
in
sub
pop
pop
clc
enter
mov
shll
adc
cmp
cmp
push
add
cmp
adc
loopne
sbb
cld
cmp
push
mov
fstps
pop
leave
ss
pop
orl
loopne
mov
in
adc
in
negl
stos
stos
cmp
pop
push
xchg
cwtl
shll
cmc
nop
push
popa
push
mov
jo
fnstsw
ds
pop
lret
stos
insl
into
mov
sbb
xlat
or
xor
imull
cmpsb
enter
pop
pop
push
add
fwait
lret
lods
push
lcall
mov
push
in
int
rcrb
sub
and
scas
pop
mov
std
xor
mov
dec
test
cli
lcall
dec
ss
adc
adc
jmp
dec
jecxz
cmp
icebp
insl
mov
cmp
cmp
loope
mov
test
lds
in
push
xchg
cmp
mov
mov
mov
add
sbb
inc
inc
popf
jg
add
mov
or
in
mov
jb
inc
lcall
dec
push
in
sbb
push
inc
xchg
aaa
adc
push
push
sbb
inc
add
cli
cmpsb
dec
adc
rsm
in
xor
pushl
stos
jns
pop
cmp
inc
pop
ret
adc
ret
lret
sarb
xor
adc
add
add
push
testl
add
jp
mov
mov
imul
jge
pop
pop
addb
xchg
fisttpll
xchg
or
mov
push
add
out
fistl
mov
std
push
and
rorb
pop
jl
mov
jns
mov
lods
xchg
xchg
jbe
rcl
imul
test
popf
out
pop
test
dec
inc
xchg
mov
ret
push
mov
push
cmp
shl
adc
mov
inc
mov
fsubrp
adc
inc
ds
in
xor
jmp
xor
pop
loope
out
outsb
and
movl
xor
mov
fsubs
inc
cwtl
xor
ja
xchg
ja
dec
icebp
and
inc
push
pop
mov
insb
ret
and
fcomps
sbb
test
cmpsl
inc
inc
int3
inc
cmp
fcmovnb
mov
je
frstor
pop
in
in
pop
loope
mov
bound
mov
scas
push
cmp
sbb
daa
xlat
mov
fsubrp
lret
xor
notl
add
loop
in
les
push
mov
daa
cltd
ficomps
mov
inc
mov
aaa
add
std
xchg
cwtl
jne
push
jno
mov
jmp
or
sub
mov
sti
mov
pop
test
push
add
pop
pushl
in
imul
pop
sbb
push
cmp
pop
jge
ficompl
int
push
je
cwtl
cmp
mov
push
shrd
les
inc
outsl
repnz
fwait
sbb
xchg
pop
leave
xchg
sahf
mov
pop
mov
popa
sub
pop
mov
mov
push
mov
and
negb
push
jle
imul
out
sub
mov
test
mov
jmp
xchg
sti
aas
icebp
iret
bound
ja
test
aaa
fadd
and
rol
popf
fldt
add
test
push
pop
xor
or
dec
std
xchg
fdivrl
fwait
and
push
jecxz
notl
aad
push
in
out
loopne
xchg
pushf
xchg
and
loop
bound
repnz
xor
sub
xchg
cmp
mov
sub
jno
mov
jge
dec
mov
inc
loop
sbb
clc
enter
mov
orb
jns
sarb
jp
pop
xor
imul
or
lcall
je
cmp
dec
aaa
mov
ljmp
xlat
jge
mov
lods
xlat
push
sbb
mov
mov
test
into
inc
xchg
sbb
xor
pop
sub
jo
mov
or
cmp
test
insb
or
xor
daa
jb
mov
lcall
jg
popa
xchg
pop
sbb
popl
sbb
stos
add
pop
popl
lcall
stc
or
inc
cmp
mov
sbb
shrl
or
in
sbb
push
jae
xor
jo
mov
jne
jnp
iret
inc
push
lret
pop
bound
sub
push
sub
or
ds
sub
pop
scas
frstor
int
out
mov
mov
xchg
add
loopne
mov
dec
jno
out
mov
or
push
xor
sub
repz
pop
std
lods
inc
lret
insl
data16
enter
dec
add
ret
push
arpl
jmp
add
outsl
faddp
in
xchg
popl
aas
mov
mov
xor
iret
adc
mov
dec
adc
push
jmp
push
xchg
sub
mov
sbb
movsb
fbstp
out
in
femms
jne
fadds
add
ja,pn
mov
jle
les
imul
pop
push
or
cmpsl
pop
dec
cmp
sbb
loop
mov
or
mov
rcrl
mov
dec
push
xor
xor
dec
dec
mov
out
bound
cmc
fnstcw
out
mov
dec
dec
or
out
lcall
movsl
popf
pushf
test
loop
cmpl
cmp
sahf
icebp
dec
add
push
out
ja
outsb
mov
sbbl
xor
out
add
js
sbb
xor
sbb
inc
jb
mov
ljmp
sbb
cwtl
jg
jl
xchg
xchg
sub
rol
push
push
and
mov
cld
test
mov
arpl
pop
stc
sub
and
fnsave
sub
mov
xor
mov
inc
mov
es
push
and
popa
adc
cmpsb
xor
adc
ljmp
pop
cmp
push
sub
dec
pop
mov
push
bound
and
adc
mov
jle
and
ss
inc
pop
inc
jnp
mov
aas
ficoms
into
cmp
into
jae
and
andl
rep
test
sbb
lds
fidivrl
fcmovu
popf
pop
test
sbb
and
push
xchg
add
and
sbb
dec
daa
imul
cwtl
cmp
add
xchg
mov
jmp
ret
sbb
aaa
imul
data16
pop
jecxz,pn
push
sub
das
out
jnp
into
push
pop
insl
push
insl
push
lods
lock
dec
jecxz
shrl
sbb
fsubr
data16
ficoms
repnz
aad
jp
in
subb
mov
cmpsb
pusha
cwtl
cs
jbe
mov
fbstp
jns
sbb
mov
pop
inc
lods
cmc
adc
movl
arpl
addl
aas
rcrl
sbb
imul
inc
test
inc
and
inc
sahf
stos
add
into
pop
lea
outsl
data16
aam
adc
sbb
push
data16
cmp
jecxz
fwait
rolb
jae
mov
outsb
add
stc
stc
mov
adc
xchg
pop
and
mov
aad
dec
mov
mov
cmp
daa
push
sbb
xor
sbbl
sub
nop
mov
push
stc
roll
or
std
popf
dec
sbb
lds
scas
into
xor
cmc
and
into
sbb
imul
movl
shlb
es
push
ljmp
fcomi
mov
cmp
mov
outsl
outsl
cmc
lods
push
dec
push
push
hlt
xchg
fs
mov
mov
push
mov
xchg
xorb
ljmp
lret
push
cmp
push
in
scas
jo
scas
das
mov
xchg
inc
jecxz
es
aad
sti
inc
outsl
addr16
popa
je
sahf
je
xchg
loopne,pn
aam
xchg
xor
cmpsl
outsb
and
loop
pop
frstor
mov
sub
cli
sub
mov
push
fbstp
outsl
enter
adc
jne
lret
jmp
or
cmpsb
jnp
inc
je
adc
jo
sub
push
roll
sbb
les
mov
sub
in
inc
nop
lret
lds
mov
popa
inc
jle
xchg
rcrl
push
push
inc
addr16
push
lcall
jp
movsb
mov
and
cmp
sbb
jp
test
mov
mov
sbb
cltd
rcll
les
adc
xchg
jmp
xor
xchg
adc
mov
mov
repz
icebp
sbb
ret
push
fistl
pop
push
in
mov
add
fs
pop
cltd
popf
sub
ja
in
std
push
xchg
sahf
and
adc
outsb
mov
cmp
imul
jp
mov
sbb
ret
adc
mov
scas
fsubr
jp
pop
out
mov
sub
repz
jge
sub
sub
cs
adc
push
and
push
dec
hlt
aad
das
pop
mov
mov
data16
mov
ljmp
jns
xchg
add
les
pop
cmp
push
xchg
xchg
in
std
xor
dec
adc
jg
mov
in
stos
jne
pop
xchg
or
leave
pop
loopne
iret
add
inc
pushf
inc
cmp
mov
pushf
pop
xchg
sub
cmp
clc
nop
lahf
xor
loop
sbb
xchg
pop
push
gs
das
cmp
das
les
jle
stc
pusha
xchg
fs
mov
mov
dec
and
mov
xor
stos
fnstsw
xor
addr16
rolb
fs
jge
xchg
lea
aam
cld
and
sbb
push
jecxz
cltd
ret
and
inc
xor
pop
push
push
and
sti
xchg
shlb
mov
jns
cmp
mov
rcrb
jle
vpshufd
pusha
call
sub
push
cmp
push
mov
xchg
ret
pop
cmp
adc
int
push
jp
sbb
jecxz
ror
test
cmpsb
aad
add
test
jg
push
xchg
add
je
outsl
push
sbb
rorl
dec
sti
cmp
imulb
dec
js
mov
cmp
outsb
jno
in
stos
pop
insl
scas
sbb
jae
dec
dec
fidivl
add
imul
mov
fdivs
sub
aas
and
xor
adc
fisubl
xor
dec
adcl
ficompl
xor
inc
nop
outsl
cwtl
adc
es
push
pop
push
cmp
add
push
mov
jne
nop
pop
cld
lock
jp
dec
mov
rcl
push
xlat
mov
std
or
ds
jae
in
out
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
pop
sub
jp
sbb
jp
scas
pusha
mov
inc
cli
xchg
movsb
shl
nop
cmp
xchg
ljmp
sub
sub
fstpt
xchg
test
pop
mov
fadds
popf
mov
xor
cmp
scas
mov
push
mov
pop
into
fs
rcrl
cs
fsubr
sti
mov
mov
sbb
cld
push
into
inc
rolb
xchg
mov
pop
ds
jmp
mov
lock
cli
mov
popa
aam
aam
mov
and
mov
push
mov
mov
sbb
out
jle
fildl
stos
dec
pop
leave
movsb
fbld
add
push
jae
scas
inc
xor
mov
repnz
jge
mov
inc
pop
shrl
push
inc
cmp
inc
icebp
xchg
add
std
insb
es
adc
push
fwait
jl
mov
and
inc
inc
stos
sbbb
xchg
lret
adc
push
loopne
test
jp
out
das
test
push
ret
fs
call
cmpsb
pop
aas
pop
mov
mov
xchg
or
push
test
jo
fdivs
cmp
dec
dec
addr16
in
push
fcmovne
jno
gs
jne
dec
sbb
lods
aas
popf
mov
addb
dec
xor
cmpsb
sub
out
movsl
out
imul
rol
jne
cli
adc
in
out
dec
mov
aas
mov
test
pop
xchg
mov
xor
in
rclb
xor
xchg
fidivrl
bound
in
sarl
xor
ljmp
and
sub
inc
lret
xchg
jg
loopne
loop
and
sahf
andl
inc
jge
xchg
cwtl
jmp
je
mov
clc
jns
das
fldt
push
jb
jecxz
dec
push
loop
mov
push
sub
enter
ficomps
push
push
push
es
add
mov
enter
popf
roll
rcll
loop
aad
pop
in
cmp
and
sub
xor
sbb
jl
adc
or
test
cli
dec
pop
mov
sbb
add
pop
stos
jb
scas
shll
sub
das
jne
xchg
pusha
mov
stc
fwait
loopne
ss
insl
stos
mov
jl
jl
lahf
jns
xchg
dec
lret
push
ret
aas
mov
int
mov
jo
push
movsl
xor
jbe
ds
xchg
mov
fisubs
jmp
add
mov
xchg
push
sbb
mov
or
aad
adc
outsb
fnstcw
sahf
aad
outsl
jecxz
popa
inc
push
popf
adc
sub
inc
loop
jmp
mov
jp
xchg
lods
mov
sbb
std
jle
mull
xlat
or
xor
lods
pop
orb
mov
inc
roll
aas
mov
leave
dec
push
inc
cmp
test
sub
push
push
loopne
cld
test
inc
mov
jecxz
lahf
or
shl
add
add
out
shlb
dec
sbb
adc
je
mov
xchg
xor
mov
adc
imul
dec
stc
sti
ret
ljmp
in
pop
xchg
cli
pop
inc
lock
add
dec
xchg
mov
fsubs
sbb
xor
lcall
sub
mov
sub
sub
test
je
test
dec
mov
test
mov
inc
dec
int3
pop
shl
adc
iret
push
test
pop
mov
rcll
arpl
test
jg
fs
loopne
sub
push
cltd
popf
mov
jo
adc
les
adc
xchg
pop
jl,pt
icebp
gs
orb
inc
xchg
or
insb
push
shrb
push
cvtpi2ps
mov
mulb
dec
ds
outsb
xchg
mov
popa
pop
xor
hlt
xchg
popf
pop
xchg
dec
dec
mov
int3
cli
and
dec
inc
jmp
out
and
jne
push
mov
cmp
rorb
jbe
subl
push
jecxz
dec
sub
pop
addl
fisttpll
or
xchg
mov
mov
add
pop
sti
in
inc
xor
negl
push
test
jp
sub
dec
dec
jle
fnsave
sbbl
movsb
mov
inc
mov
sti
and
push
dec
popa
fcomps
cmp
nop
push
test
push
sbb
mov
xchg
sar
jns
mov
xchg
icebp
gs
bound
mov
loopne
mov
and
mov
sbb
les
dec
addr16
jmp
icebp
into
xchg
and
stos
in
arpl
lods
out
sbb
inc
aas
int3
mov
inc
rep
imul
icebp
jp
jecxz
push
cmp
lods
cmp
lahf
in
jg
mov
lock
push
jl
sub
adc
or
popa
rorl
sub
or
mov
xor
aaa
cltd
cmp
arpl
or
test
divl
je
cs
leave
scas
dec
lods
sbb
ss
mov
push
pop
pop
xchg
sti
sarb
xchg
iret
mov
daa
inc
pop
lods
cmp
stos
rclb
into
in
mov
push
push
clc
adc
in
mov
or
dec
inc
cmc
sub
inc
aaa
jnp
popf
test
push
jno
cmp
movsb
dec
mov
jnp
or
jmp
int
outsb
xorb
icebp
es
xorb
loope
cmpsl
inc
out
mov
incb
sbb
pop
and
ljmp
test
hlt
dec
mov
ja
test
inc
mov
xchg
xchg
lcall
add
cli
enter
lea
mov
andb
mov
push
pop
imul
lods
xor
sbb
mov
cli
inc
mov
xchg
jno
push
mov
or
insb
cmp
adc
scas
hlt
out
mov
push
or
mov
lods
pop
lret
addr16
mov
mov
and
lds
mov
push
cltd
fisttpl
adc
mov
jns
push
sbb
test
dec
aas
cmp
cmpsl
jmp
sahf
mov
scas
sub
pop
mov
mov
xchg
hlt
pushf
or
sahf
push
add
lds
xchg
fsts
ds
lret
data16
and
leave
repnz
mov
sub
std
adc
mov
lods
lret
or
in
test
cmc
stos
insl
in
in
cmpsb
into
lret
ds
mov
sub
xor
push
incl
pop
mulb
inc
and
inc
xchg
cmpl
cmpsb
mov
push
cwtl
and
mov
icebp
test
xchg
sub
into
das
into
test
cmp
dec
cmp
ror
dec
fldt
faddl
lea
aas
mov
dec
mov
jo
mov
adc
mov
lods
in
mov
cwtl
mov
and
jno
pop
jge
repnz
movsl
std
ds
std
jl
adc
ret
shrl
adc
arpl
mov
out
rcl
xor
sbb
imul
dec
or
dec
inc
fdivrl
or
mov
pushf
push
adc
jbe
adc
jbe
lock
es
adc
outsl
dec
mov
cli
jge
mov
or
jno
enter
jo
imul
mov
or
push
imul
mov
popf
sbb
aam
lock
or
cmc
mov
adc
int
mov
or
lss
push
dec
sbb
ss
add
sbb
pop
jp
push
popf
decl
cs
clc
scas
shrl
or
into
fldl
pop
and
sub
shll
jle
sbb
xchg
inc
fs
xchg
mov
cli
push
jne
adcl
cld
test
mov
in
sbb
sbb
pop
mov
pop
dec
mov
imul
push
xor
outsb
xchg
cmp
test
push
and
mov
cmp
xchg
mov
sub
cmp
or
sahf
cld
movsl
int3
mov
repz
or
mov
scas
rolb
stos
int
dec
mov
aas
sub
shlb
jge
push
scas
add
scas
repnz
push
sub
ds
mov
inc
stos
add
test
jns
dec
mov
or
fldl
cmp
xchg
xchg
out
sysret
dec
jb
or
popa
mov
movsl
addb
cmp
push
xchg
mov
pusha
mov
cmpsb
xor
rorb
lds
dec
xchg
sti
cmc
imul
adc
mov
add
fdivr
mov
mov
ds
arpl
push
and
jns
mov
cs
and
faddp
std
add
mov
sbb
movsb
xor
adc
mov
cmp
inc
into
mov
je
adc
mov
mov
mov
jno
inc
add
test
negb
jno
xor
xor
xor
or
lahf
dec
arpl
dec
and
mov
ds
xor
inc
mov
fincstp
mov
jo
or
inc
ret
movsb
lds
imul
mov
mov
push
das
gs
subb
adc
scas
aaa
aaa
sbb
fsubrs
dec
mov
test
popa
aad
and
fcmovu
pop
aas
pushw
adcb
jmp
inc
pop
xor
mov
jno
and
mov
pop
out
cli
xchg
mov
dec
jno
stos
mov
mov
shlb
push
pop
int3
jne
aam
push
mov
push
xchg
adc
out
xor
lock
dec
sub
pop
into
fwait
xchg
xchg
in
scas
fmulp
js
xchg
outsb
or
mov
pop
lea
lods
jge
pop
or
jb
mov
sbb
jmp
mov
cltd
sarb
movsb
jns
aaa
xor
mov
cmp
mov
sti
dec
and
dec
cmp
mov
mov
cmp
mov
invd
and
subb
xchg
mov
out
fidivs
iret
aaa
out
int3
push
sub
lods
imul
xchg
sub
lret
fsubl
cmp
or
push
inc
cli
test
cmc
mov
jns
std
int3
lods
fldl
rol
in
loop
jmp
jp
insb
pop
aas
cmpsb
xor
push
mov
sub
in
rcrl
dec
push
mov
mov
xor
enter
cs
fwait
ret
mov
aaa
out
imul
fists
push
xchg
mov
lcall
das
cmp
jl
subl
or
test
jb
mov
jbe
sub
jb
loope
push
xor
fldcw
sub
sahf
out
loop
shll
pop
push
jb
aam
jne
mov
faddl
or
insb
mov
fnstsw
mov
test
mov
dec
jns
mov
cmp
arpl
or
fcmovnu
stos
shr
movsl
jecxz
cmp
jbe
sti
mov
sub
mov
sbb
xchg
jb
cwtl
pop
mov
push
adc
fdivrl
inc
jmp
orb
in
sbb
xlat
les
inc
xor
fstpl
aam
add
cld
mov
aad
lret
jns
mov
xchg
adc
fwait
xchg
inc
sub
push
cmpsl
pop
adc
xorb
in
xchg
mov
out
insl
cmp
adc
data16
pop
and
add
jecxz
pmulhuw
pmullw
mov
lods
and
mov
js
inc
insb
push
inc
push
push
repnz
mov
imul
mov
mov
out
push
xchg
or
das
add
mov
cmp
shll
or
mov
mov
dec
xor
push
sub
jno
and
popa
fstl
add
mov
out
or
dec
dec
sub
dec
in
add
incb
jecxz
mov
dec
cmp
arpl
sbb
ss
xchg
movsb
mov
fsubl
scas
mov
movsb
or
fimull
xor
data16
inc
xlat
jl
xchg
movsb
or
aam
aad
ficoms
scas
iret
jae
mov
shrb
in
add
xchg
cmp
xchg
dec
sub
sbb
jmp
xchg
jmp
movb
incb
jge
stos
push
mov
lock
daa
push
loope
pop
out
fs
sbbb
dec
mov
ljmp
cmp
mov
jo
pop
mov
int
aam
andl
icebp
sbb
bound
inc
into
sbb
push
mov
icebp
in
xchg
pusha
lcall
jb
xchg
jae
xchg
outsl
xchg
in
enter
mov
lcall
cld
loope
ds
aad
lret
xchg
inc
sbbl
nop
sbb
stos
into
stos
mov
or
jecxz
inc
ror
test
lret
pushf
dec
cmp
mov
xchg
push
dec
js
cmp
xchg
orb
xchg
and
sbb
lret
xor
xchg
arpl
pop
shll
jnp
decb
js
std
adc
cld
fs
add
iret
into
into
js
sbb
notb
ds
mov
dec
leave
movb
xlat
leave
pop
sub
inc
shlb
arpl
jge
fistl
push
fimuls
rorl
dec
in
adc
sbb
fs
int
loopne
sub
dec
lret
sub
dec
pop
pop
adc
std
cmp
scas
mov
fistpll
jg
adc
push
in
xchg
pop
sbb
sbb
faddp
push
add
xchg
out
cwtl
popf
test
xchg
sahf
mov
in
movsb
inc
ss
cli
adc
nop
xor
fisttpll
insl
xchg
popl
inc
rorb
adc
arpl
push
jge
lds
mov
push
sarl
movsl
add
loopne
mov
gs
adc
aad
adc
subl
lea
rol
mov
ja
xor
adc
sub
ljmp
add
dec
repz
std
or
imul
into
icebp
fisttps
mov
push
jecxz
push
mov
sub
cld
jle
xor
shrl
rclb
mov
mov
divl
mov
or
mov
subl
daa
pop
addr16
movsb
mov
mov
jne
subl
fdivrl
pop
push
test
jmp
aas
cmp
jb
pop
mov
xchg
xchg
filds
mov
sbb
mov
imul
push
cmpsb
scas
or
adc
mov
adc
jno
flds
cmpsb
jne
push
mov
shrb
cli
inc
lret
and
jmp
adc
inc
mov
frstor
mov
mov
popf
lret
inc
jmp
jo
in
cmp
sbb
sub
mov
mov
dec
xchg
ret
pop
addr16
add
and
test
aaa
cld
add
jmp
add
inc
int3
lret
cltd
cmp
testl
std
sbb
xor
out
stos
pop
std
pop
rep
push
idivb
sti
iret
insb
outsl
call
jge
cwtl
fadds
rcl
ja
add
jne
push
or
aad
mov
pop
in
sbb
jle
lret
xchg
lcall
push
lea
enter
popf
imul
xor
cwtl
mov
cmp
push
nop
or
insl
jl
cmpb
cmp
cltd
jb
js
ficomps
insl
dec
and
sbb
aam
adcl
in
outsl
js
xor
cs
gs
sbb
or
fisttpl
xor
daa
push
dec
clc
in
cmp
das
xlat
push
sub
in
sbb
push
mov
cmp
pop
jno
leave
bound
iret
iret
xor
andb
mov
push
or
ret
adc
xor
jae
movb
push
stos
dec
out
fldenv
cs
add
scas
jp
mov
loop
std
in
call
xchg
dec
mov
fistps
filds
cmp
adc
sbb
lds
adc
je
ret
xchg
rcl
bound
daa
or
out
adc
lods
shl
mov
test
or
andl
sub
mov
jae
test
aad
ficoms
inc
lea
loop
dec
sbb
ss
add
sbb
adc
pop
rclb
adc
rol
jnp
sbb
popf
sti
cmp
xchg
pop
jl
je
bound
outsl
fwait
xchg
nop
pop
divb
xor
dec
xlat
imul
mov
insb
dec
popa
test
pop
add
enter
clc
xor
sti
insl
shrl
push
movsl
out
int3
add
add
ss
sub
testb
xor
xchg
xor
fld
sub
jge
pop
ljmp
mov
xchg
std
subb
push
cwtl
mov
cmp
cltd
cmp
jmp
or
cmp
adc
ja
scas
cmc
mov
jae
lret
xor
aas
pop
aad
mov
dec
sbbb
push
mov
dec
enter
into
xor
push
inc
stc
mov
lret
leave
mov
je
jo
rclb
and
sbb
xchg
ds
enter
ja
cmp
rcll
test
into
mov
rclb
inc
lods
add
jne
cmpsb
and
stos
xor
addr16
scas
lea
int3
test
push
mov
movsl
push
lcall
lret
push
stos
shlb
or
inc
mov
and
out
loop
leave
gs
push
jne
out
repnz
imul
mov
mov
xchg
jl
into
xchg
call
sti
pop
sahf
pop
and
sbb
add
sub
pushf
xorl
orb
and
pusha
sbb
mov
ret
pop
std
add
rol
out
js
jmp
pop
jl
call
dec
in
outsl
push
sub
into
xchg
mov
test
in
xchg
bound
cmpsb
add
out
inc
or
insb
ret
addb
movsl
data16
ss
lock
aaa
andb
inc
push
mov
jg
ja
xor
sbb
and
jmp
icebp
fs
cmpb
xchg
add
and
in
test
movsb
add
pop
insl
push
les
jo
es
push
imul
add
mov
icebp
fs
outsl
call
hlt
scas
sbb
out
or
test
pop
cli
rolb
inc
int
xchg
orb
sbb
mov
mov
das
adc
push
roll
imul
mov
imul
idivb
jg
cs
ficoms
jbe
jb
add
shll
lods
fsubrl
scas
lods
push
push
leave
sub
push
dec
cmpsl
lret
fs
xchg
mov
push
popf
nop
cs
pop
add
clc
pop
and
sbb
inc
dec
in
sub
add
mov
test
mov
out
test
pop
xor
aas
in
lods
nop
xor
or
xor
rorl
push
inc
stos
xor
mov
push
pushl
les
dec
jle
pop
jl
push
popa
ret
sbb
push
movsl
ret
jne
pop
cld
aaa
cmp
outsl
mov
scas
sbb
cmc
and
xlat
xor
fiadds
ds
cwtl
pop
lretw
cmp
fs
push
cmpsb
fs
rorl
pop
mov
mov
or
js
xchg
addb
inc
arpl
push
dec
cs
cwtl
cwtl
iret
pop
outsl
aad
mov
enter
fwait
jle
lret
loope
push
aam
jne
lock
mov
sbb
sub
dec
loopne
insb
iret
lock
inc
jb
lea
adcl
mov
sbb
cld
pop
stos
pop
cmp
mov
jle
rcrl
into
sub
das
cwtl
jno
clc
rcrb
xor
inc
push
mov
inc
jl
mov
dec
test
cmpps
mov
lcall
movsb
scas
test
jnp
sub
mov
sub
loopne
mov
cmp
cmp
test
cmc
cltd
add
popa
xchg
inc
mov
daa
dec
orl
jns
rclb
ficoms
test
xor
fcmovu
mov
lcall
pop
ja
cmp
adc
bound
mov
cmp
mov
out
std
das
cmp
adc
mov
ror
mov
in
xlat
shlb
loope
jl
xchg
sbb
int
pop
mov
mov
sbb
xlat
add
mov
push
inc
cli
cmovns
out
fsubr
cld
mov
ljmp
lods
xor
xchg
out
out
inc
negl
dec
mov
adc
xchg
inc
inc
or
aam
fdivrs
dec
add
sar
int
adc
loop
das
jae
sub
jmp
in
add
addr16
jns
lea
jmp
fs
sbb
mov
mov
int
insb
jno
notl
cmp
dec
cmp
enter
push
adc
stos
cs
xchg
xchg
pop
inc
dec
pop
popf
daa
add
fcomip
mov
inc
jmp
outsl
and
mov
fstl
jne
inc
fimuls
clc
dec
mov
gs
clc
and
mov
pop
ret
rorl
stos
push
call
mov
mov
xchg
cmpb
in
out
movsb
dec
movsl
mov
mov
icebp
sbbb
mov
mov
fidivl
gs
in
dec
cmp
adc
std
rcll
dec
cmpsl
adc
test
testl
imul
outsb
push
movsl
repnz
sti
xchg
mov
push
sub
div
xchg
inc
pop
outsb
iret
or
mov
push
push
icebp
xlat
movsl
mov
es
out
inc
and
or
std
jl
js
mov
mov
sbb
jp
xchg
xchg
enter
mull
aam
dec
enter
xchg
fwait
and
iret
pop
mov
scas
push
xor
cs
bound
mov
inc
rcl
mov
imul
ffree
jno
data16
mov
adc
fdivr
movsb
and
pop
xor
aam
ss
sbb
test
cmp
mov
cmp
xor
cli
loop
shlb
jae
es
aas
and
cwtl
push
mov
aad
je
mov
jns
fadd
mov
out
cwtl
sub
rcr
inc
stc
scas
stos
sbb
and
xchg
dec
jnp
mov
jp
pushf
mov
cmc
mov
pop
inc
adc
mov
lock
pop
sub
pop
pop
inc
fstpl
je
mov
outsb
adc
lahf
es
add
cmp
pop
rcrb
fimull
and
mull
outsb
shr
js
inc
xor
mov
inc
push
out
pop
jge
and
mov
or
cwtl
data16
out
fmul
iret
sub
or
jnp
pop
sbb
nop
jle
xor
adc
inc
stos
rcr
mov
cli
mov
dec
mov
xlat
inc
mov
cmp
ljmp
loop
aas
xrelease
jb
lret
mov
das
in
mov
leave
dec
add
shlb
mov
pusha
jnp
mov
ret
into
inc
mov
mov
jmp
inc
and
popa
fcmovnb
popa
pop
hlt
rcr
rcrb
arpl
fwait
inc
xor
mov
jge
cmp
popl
push
mov
sub
adc
xchg
dec
mov
jecxz
jmp
pop
sahf
int
test
sbb
roll
lods
aaa
inc
nop
push
dec
cmpsl
addr16
stos
mov
js
aaa
mov
cs
repnz
sbb
les
push
adc
jl
and
stos
adc
scas
push
adc
jnp
pop
loope
push
or
mov
cmp
pop
xlat
ret
outsl
cld
sub
out
cli
xlat
mov
mov
cmpsb
ret
sti
dec
lret
xchg
movsl
cmp
inc
xchg
push
repz
cmp
insb
push
cmpsl
int
out
popa
insb
push
shl
fmulp
push
sbb
cmp
jnp
jo
int
out
sub
and
xor
mov
leave
cld
shrl
push
imul
arpl
loopne
cmp
aad
ljmp
and
pop
cmp
pop
push
mov
pop
ja
or
in
push
std
lcall
ja
lds
cmp
cli
cmp
in
lods
mov
mov
push
cs
into
sub
sub
xlat
or
cld
cmpsl
ljmp
adc
adc
push
or
pop
fisttpll
aad
xchg
aad
xchg
loopne
add
push
jo
xchg
dec
andps
out
sbb
testb
push
pop
push
mov
lret
sbb
and
xchg
std
sahf
das
push
das
inc
int
mov
adc
dec
push
out
loope
fimull
jge
cs
repnz
enter
xor
mov
daa
jg
outsl
pop
out
and
mov
ret
jge
xlat
mov
pop
push
mov
addr16
xchg
mov
dec
bound
inc
mov
ficoms
test
push
clc
dec
lock
lock
adc
fidivrl
adc
pop
aas
cmp
sbb
adc
nop
mov
jns
xchg
mov
insl
dec
inc
lcall
push
in
or
shrb
push
ds
cmpsl
shll
iret
sbb
pop
inc
and
lods
push
push
hlt
lock
nop
or
bound
jle
insb
sub
push
push
jns
ret
addb
ret
daa
cld
iret
cmp
mov
add
cwtl
call
push
jo
sub
mov
mov
shrb
aam
out
push
popa
pop
std
pop
sbb
xchg
mov
xchg
std
gs
lods
dec
jno
xchg
jge
sub
xorb
int
mov
dec
mov
mov
push
mov
cs
std
rcpps
sub
jno
dec
jno
mov
push
test
pop
les
das
inc
and
into
mov
inc
popl
mov
subl
pextrw
bound
out
mov
xchg
fisttps
sbb
or
and
and
sbb
test
adc
mov
and
mov
dec
ss
fstpt
fbstp
add
outsl
and
xchg
cmpsl
int
lods
xor
pop
popf
loope
fisubrl
out
xchg
lods
inc
jno
je
xor
cld
mov
push
nop
je
dec
test
ret
or
mov
fnsave
adc
cmp
adc
int3
repz
jp
in
scas
mov
mov
cwtl
lret
push
or
fcmovu
pop
loopne
cltd
jbe
adc
leave
mov
or
getsec
xor
arpl
je
jmp
mov
pop
xchg
sub
lahf
in
push
add
lds
daa
jbe
sbb
fnstenv
push
adc
gs
mov
cmp
sbb
mov
xor
push
mov
mov
jmp
out
pop
add
cmpsb
xor
mov
push
fcoms
xlat
mov
fcmovnu
dec
jb
inc
out
es
inc
pop
cmpsl
jl
out
pop
ja
xchg
pusha
popa
inc
daa
push
in
scas
mov
leave
jnp
mov
mov
fstps
jg
pop
imul
inc
xchg
cltd
arpl
and
pop
cmpl
inc
in
cltd
mov
shll
jae
sbb
jg
mov
sbbb
mov
mov
dec
jae
and
imul
test
adc
jb
cltd
push
pop
outsl
sub
cmp
ljmp
shll
mov
sbb
mov
ljmp
js
cltd
pop
lret
loopne
fiadds
inc
testb
js
xor
mov
std
jg
push
and
adc
xchg
xchg
sbb
sbb
aam
test
lret
in
mov
fsubl
xor
fdivrp
xor
into
mov
call
ffree
jbe
jmp
ret
mov
dec
les
add
cmpsl
cltd
lret
xchg
cmp
mov
out
cmp
loop
sbb
pop
pop
or
lock
sbb
push
push
push
aam
push
and
jns
gs
ss
cmp
push
xor
mov
dec
js
pop
es
fldcw
cmpsb
and
or
lea
stos
or
xor
dec
mov
loopne
add
mov
xchg
outsl
int3
lcall
jp
dec
pop
add
pop
imul
fwait
outsb
inc
add
pop
push
es
inc
stos
test
mov
fimull
inc
jne
or
int
into
and
outsb
flds
jb
js
and
dec
fprem1
out
out
jmp
je
cmp
jb
bound
fmuls
mov
cmc
or
xlat
sbb
cmp
stc
mov
arpl
cltd
inc
or
test
xlat
rclb
fistl
iret
pop
dec
imul
cmp
jnp
inc
in
sti
sti
add
arpl
jecxz
scas
hlt
mov
push
sub
pop
fdivp
dec
pop
repnz
jecxz
mov
mov
je
lods
repz
les
pop
ret
xor
xchg
or
call
inc
outsb
repz
inc
dec
dec
or
dec
in
sbb
out
shll
fldcw
mov
sti
out
cmpsb
enter
shll
ds
clc
inc
xlat
mov
subb
pop
aad
cmpsl
outsl
fisttpll
aam
fwait
xor
xchg
cmp
adc
mov
fnstenv
popa
xchg
mov
arpl
adc
aad
loop
das
in
dec
mov
ja
insb
mov
lock
mov
xor
pop
fldt
push
jge
cmp
mov
fnsave
das
mov
push
jle
fisttpl
jl
push
aaa
xchg
add
jg
fcmove
mov
mov
repnz
pop
stos
mov
repz
scas
lock
mov
adcb
pushl
pop
pop
add
lahf
nop
pop
or
lods
add
lret
jecxz
jmp
stos
icebp
test
lret
pop
sbb
daa
int
push
aas
pop
jb
lods
mov
jge
scas
mov
sahf
lods
dec
enter
sbb
adc
lea
movsl
sub
xor
add
and
jl
sub
out
sub
mov
jecxz
gs
outsl
mov
mov
or
cltd
jge
dec
jecxz
push
pushl
test
dec
data16
or
je
in
shrb
add
dec
dec
dec
xchg
push
stos
icebp
mov
jp
push
lods
adc
sbb
test
int3
cmp
fcmovne
push
mov
and
sarl
cwtl
inc
mov
push
mov
pop
mov
jb
and
lret
pusha
mov
cli
mov
pop
daa
sub
cld
loop
or
cmpsl
popa
in
loop
and
jns
out
rol
pusha
test
js
and
mov
cmp
pop
movsb
sahf
jb
inc
pusha
std
ja
add
push
cs
loop
pop
jg
jnp
pop
lret
leave
adc
mov
mov
in
data16
dec
mov
ret
mov
pop
leave
rcl
repz
or
cld
fwait
out
jbe
clc
fsubl
sbb
clc
addr16
push
add
repnz
fmul
inc
push
xchg
lret
mov
aad
dec
add
in
pop
xor
mov
cmp
xlat
movsb
inc
jmp
lea
xor
jae
addl
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
inc
hlt
jae
jp
sbb
jp
adc
pop
cmp
movsl
dec
cmp
pop
push
mov
or
jmp
data16
add
adc
rcr
cmp
push
lods
cli
sahf
popf
pusha
sahf
inc
push
cmp
adc
out
jae
lret
pop
into
testb
push
pusha
sub
sbb
out
enter
jle
stos
or
loopne
mov
pushf
xor
sbb
xor
outsb
pop
sub
es
movsb
and
push
pop
xchg
cvtpi2ps
xor
repnz
std
mov
pop
mov
shrb
jno
insl
loope
repz
ja
dec
xchg
cmp
je
icebp
out
or
inc
jnp
dec
cmp
les
mov
sti
jg
out
xor
mov
mov
sbb
push
call
cltd
dec
pop
cmp
adc
bound
mov
lahf
xchg
repz
lods
mov
aad
cmp
lea
test
hlt
fucomp
dec
call
sbb
roll
inc
xchg
jbe
adc
pop
xchg
pop
adc
rolb
xor
xor
jge
mov
mov
xor
loop
je
mov
adc
jle
jnp
std
enter
ja
dec
mov
movsl
dec
aas
clc
add
aam
mov
cli
xchg
in
dec
push
inc
xchg
or
mov
rcl
shl
loop
mov
cmp
cmp
xor
repz
adc
sub
adc
add
std
sbb
fmulp
or
or
bswap
jae
movsl
mov
and
outsl
loopne
xchg
iret
inc
push
dec
rcll
add
mov
mov
cmp
mov
fmulp
xchg
sub
inc
xchg
loope
jno
daa
mov
sub
test
or
scas
aad
dec
test
mov
fld
fdivp
jmp
add
mov
shll
nop
cmp
xor
es
daa
or
mov
xchg
out
mov
adc
cli
inc
dec
inc
mov
push
push
out
xor
xchg
adcb
pop
push
fwait
xlat
testb
adc
aad
xchg
mov
xor
cs
dec
mov
cmp
in
cltd
aas
ret
lock
and
xchg
xchg
jnp
jne
movsl
and
dec
fs
pop
push
scas
jmp
insl
insb
loope
push
lret
cmp
fwait
adc
jne
xchg
inc
popa
pop
mov
imul
ret
fcmovu
in
cmp
mov
add
lret
sbb
lahf
and
js
sbb
jg
les
ja
in
xor
pop
sbb
add
mov
fsubrs
repnz
sub
mov
cmp
or
outsb
adc
lds
pop
fwait
dec
cli
cmpsl
daa
inc
shl
push
std
sub
lahf
xchg
stos
ss
cmc
sbb
push
js
rol
inc
roll
pusha
inc
and
xchg
inc
dec
push
aaa
xchg
call
mov
or
loop
adc
mov
das
sub
fwait
xchg
das
jl
cltd
in
ss
jnp
sbb
cmp
les
stc
push
inc
iret
aas
arpl
lret
jle
mov
icebp
jae
inc
aaa
mov
adc
lret
popa
sbb
ljmp
pop
jne
mov
adc
inc
leave
mov
cmp
cmp
cli
mov
sub
lcall
cmp
inc
xchg
sub
imul
push
into
arpl
loope
ret
pop
pusha
clc
and
jmp
mov
std
data16
dec
cld
lcall
jg
mov
dec
enter
sahf
jns
pushf
push
mov
mov
mov
adc
das
fbstp
mov
loop
adc
dec
adc
pop
rclb
in
xlat
je
lods
movlhps
xchg
sbb
sbb
lret
xchg
mov
dec
dec
rolb
fiaddl
jbe
mov
push
push
add
inc
int3
lods
jae
mov
cmp
in
stc
mov
fdivl
hlt
xchg
xchg
push
cmp
pop
xchg
push
push
cmp
imul
mov
jo
mov
sub
cltd
into
clc
or
mov
pop
ret
fiaddl
and
push
jp
insl
sbb
outsb
fs
dec
stos
and
xor
out
mov
mov
jmp
and
repz
add
test
xchg
cmp
cmpsl
dec
sti
movl
roll
ret
mov
pushf
add
sbb
sub
dec
outsl
sbbb
lock
testl
nop
and
pop
dec
cs
cli
mov
mov
das
stos
rcll
in
sti
in
fisubl
cmp
pop
lret
adc
xor
icebp
mov
lods
test
push
arpl
or
xchg
cmp
repz
or
mov
popa
sbb
add
push
mov
dec
or
iret
pop
push
pop
loopne
cmp
aas
xchg
sub
push
mov
and
xor
clc
bound
dec
sarl
hlt
push
xchg
lock
jmp
add
sbb
jmp
lret
sub
fwait
out
int3
aam
popf
mov
mov
out
dec
sbb
insb
imul
mov
pop
fstpl
add
test
aad
cld
xor
pop
jle
sub
sbb
jb
sar
ret
rcrw
and
jb
and
pop
pushl
outsb
ja
adc
in
and
inc
std
jp
bound
sbb
scas
iret
add
and
sub
inc
fimuls
cmp
fistps
push
mov
sar
push
inc
push
mul
sbb
ja
fdivl
pop
je
sbb
repz
jae
lret
les
mov
sti
loop
pop
jg
icebp
ret
mov
mov
jle
dec
pop
pushf
lret
sti
mov
bound
imul
xor
add
jle
aam
movsl
mov
test
gs
nop
mov
fldl
fs
gs
test
pop
leave
repz
xor
loopne
sbb
jmp
add
push
int
aam
ss
pop
sbb
or
popf
repnz
sub
outsb
pop
cli
arpl
das
xchg
sti
xchg
std
push
shll
arpl
dec
inc
push
mov
push
inc
mov
fs
scas
stos
stos
xchg
mov
aam
jo
rep
mov
jmpw
fcomps
dec
gs
inc
dec
mov
jp
in
loope
mov
cmp
mov
mov
aam
std
adc
stos
adc
loopne
xchg
hlt
rolb
sub
loop
jae
adc
scas
jl
pop
mov
cmp
dec
jmp
or
ss
push
jecxz
nop
test
lods
mov
je
sbb
cmp
push
addr16
cmpsl
xor
movsl
outsl
mov
movsb
gs
lret
jmp
aad
mov
dec
xchg
ret
mov
insb
rclb
mov
cmp
inc
rcrl
inc
cmp
jne
sub
out
callw
or
jae
call
out
mov
iret
jb
jnp
push
lods
mov
orps
adc
int
insl
mov
inc
push
inc
popf
cmp
out
or
popf
dec
mov
repz
xor
xchg
loope
sub
lods
sbb
in
stc
xchg
int
iret
daa
fdivl
shlb
paddq
lods
jle
mov
shll
push
cmp
lret
add
adc
xchg
add
loopne
fnstenv
in
and
xchg
jg
fwait
jecxz
xchg
sti
adc
rorl
adc
adc
fmull
out
dec
in
pop
jnp
xchg
mov
daa
mov
mov
sub
loopw
jb
popa
fwait
cmpsb
xchg
mov
insl
push
mov
mov
data16
xchg
cwtl
sub
es
dec
test
ret
js
in
in
push
leave
mov
push
daa
mul
les
roll
mov
adc
ljmp
fadds
adc
pop
pop
jl
or
das
or
mov
cltd
ja
sub
jo
inc
inc
sub
icebp
pushf
inc
xchg
out
pop
push
mov
push
jb
dec
in
mov
lret
sub
add
aas
mov
xor
xchg
ljmp
or
pusha
push
add
mov
push
or
xchg
mov
mov
xor
or
jne
jl
cs
hlt
sbb
xor
ss
or
rcrb
push
add
add
punpckldq
fdivs
pop
xor
mov
rcrb
stos
sub
push
push
mov
fmuls
orb
mov
or
adc
ja
jne
sbb
data16
sub
fisubrl
cmp
cmc
jno
int3
stos
sar
fldl
and
add
xchg
in
addr16
mov
addr16
mov
xchg
or
inc
out
pop
xchg
sbb
push
clc
aas
cmp
cs
in
pop
xlat
mov
fidivrs
adcl
push
adc
sbb
ret
mov
add
mov
ss
inc
xor
outsl
nop
jo
inc
and
cmp
mov
cltd
dec
les
fcompl
insb
push
pop
mov
pop
dec
test
pop
fadds
adc
pop
adcl
nop
or
test
sub
sbb
mov
lock
push
mov
add
xchg
sub
jno
push
je
js
xchg
add
iret
fs
sbbb
pop
inc
push
cmpsb
andl
vpsubw
and
popf
adcb
cmp
fildl
push
mov
sti
xchg
adc
in
imull
nop
dec
out
pop
mov
imul
and
pop
jle
pop
add
or
ss
add
jl
pop
cmpsb
stos
icebp
incl
fldcw
sbb
pop
mov
scas
scas
gs
adc
fisttpl
xchg
mov
aam
lcall
lds
fildll
repnz
jae
pop
inc
mov
xlat
jae
hlt
xchg
pop
rcrb
push
popf
les
icebp
pop
push
std
test
dec
pop
mov
mov
stos
cld
loop
lret
cmpsb
in
dec
rcl
push
fyl2xp1
data16
xor
xchg
xchg
loope
add
push
lret
jb
stos
out
sbb
push
jmp
popf
adc
jnp
xchg
fdivrs
sbb
sbb
xor
xor
aas
aas
ss
and
pop
jge
enter
fistpll
mov
rcr
das
and
inc
gs
hlt
sbb
mov
pop
mov
dec
repz
sbb
jg
insb
fs
sub
sub
sbb
add
or
test
icebp
add
fdivl
rcl
loop
inc
mov
sub
xor
fbstp
mov
sub
aas
in
imul
sti
aaa
sub
sbb
cmp
xchg
int
add
ret
loopne
idivb
mov
xchg
sarb
outsl
sbb
shr
stos
xor
mov
xchg
pop
pop
lahf
xorb
in
xadd
mov
add
outsb
pop
ss
pop
sub
mov
enter
jb
lea
cmp
fistl
test
mov
inc
mov
push
addb
pusha
and
inc
xor
and
sbb
stc
xor
jmp
lret
mov
mov
imul
shll
xchg
std
jae
scas
int3
adc
fisubrl
lock
push
stos
rcl
fsubr
xor
lret
jecxz
loop
jo
mov
jbe
nop
adc
cltd
sbb
stos
adc
jns
pushf
pop
push
xlat
add
sbb
outsl
push
sahf
or
ret
cmp
shl
push
cli
cmc
out
sbb
jbe
pop
xchg
fscale
jno
sarl
cmp
xor
divl
lods
xchg
jmp
mov
fsubr
ja
hlt
movsl
repz
and
sbb
call
add
jo
adc
push
mov
xlat
nop
lret
cs
sub
iret
jmp
addl
sub
mov
or
add
adc
add
or
sub
xchg
inc
out
add
das
pop
cmc
mov
int3
cli
pop
movsl
mov
in
repz
addr16
push
mov
or
decl
cmp
lahf
icebp
cs
lea
in
sbb
outsl
sbb
aas
outsb
push
and
ss
sub
mov
push
ja
pop
mov
and
adc
cld
sbb
inc
jnp
fldcw
lea
ficoms
mov
pusha
fildll
lahf
jl
subl
push
lods
daa
jno
loopne
or
inc
push
test
sbbb
push
ficoms
aam
sub
mov
insb
jbe
daa
dec
jg
mov
or
mov
mov
and
popa
push
loope
rolb
push
ret
je
sub
mov
addr16
mov
mov
jp
or
sub
mov
and
inc
lahf
sub
imul
push
int3
sbb
add
push
jns
aam
inc
jns
xorb
and
sub
sbb
or
pop
sbb
dec
cmpsl
sub
xor
repnz
cmp
imul
pop
mov
or
sbb
xchg
sub
nop
sbb
fdiv
loopne
pop
jne
dec
or
lea
fnstenv
popf
fxch
addl
and
shlb
cli
ljmp
icebp
ja
mov
cmpb
and
sti
call
jmp
daa
xor
mov
adc
lods
dec
mov
popf
out
loopne
mov
clc
arpl
mov
mov
mov
jo
js
int3
push
push
js
sbb
jae
mov
ss
pop
xor
fwait
xchg
inc
mov
pop
loope
imul
xlat
cli
xor
outsb
or
or
add
loop
outsl
insl
sub
imul
rcl
mov
fisttps
sti
jo
int
sahf
je
rcll
pop
cmp
push
xchg
mov
jg
and
jne
ret
mov
add
mov
push
imul
jmp
and
shl
add
pop
xlat
pop
adc
ret
pusha
test
jnp
xchg
sbb
jnp
xor
leave
addb
pop
insl
cmp
mov
adc
dec
xor
clc
or
leave
mov
xlat
sbb
or
xlat
out
fisubs
sbb
dec
mov
ja
push
push
mov
push
rclb
dec
lods
mov
daa
sbb
fcompl
add
and
sbb
fs
int3
icebp
xchg
or
push
pushf
in
xor
stos
scas
push
jecxz
xor
in
mov
jbe
or
dec
cli
mov
movsl
fldl
sub
rol
and
mov
lods
xchg
pop
lds
int3
icebp
jmp
push
lcall
cld
scas
xor
lret
repz
inc
push
push
imul
cmpsb
xchg
out
pop
mov
dec
mov
aaa
jle
mov
sub
xor
push
stos
jge
push
mov
adc
push
cwtl
and
mov
pop
jg
or
call
loop
adc
and
xchg
inc
sub
ds
rolb
sbb
outsb
stos
sub
add
mov
inc
mov
jl
sbb
push
shrb
sub
jnp
pop
fisubs
ss
add
xor
cmp
mov
pop
fsubrl
mov
xor
jecxz
popa
stos
mov
dec
xor
cli
jns
lahf
lods
ficomps
xor
mov
push
fmulp
out
icebp
ja
sbb
mov
cs
mov
push
jb
mov
xchg
fld
or
out
xor
push
xor
out
ja
out
jmp
mov
pushf
negl
iret
xor
push
mov
insl
xchg
xlat
rcr
adc
cmp
movsb
jecxz
jae
add
xchg
test
pop
fld
xchg
leave
popa
sub
ret
dec
ret
cmpsb
fisubrl
ret
stos
aam
mov
jg
arpl
cmp
mov
lock
hlt
aas
stos
lods
fadds
mov
or
inc
enter
imul
push
inc
das
fdiv
aas
mov
dec
push
xadd
sub
in
jne
adc
sbb
cltd
pop
iret
je
adcb
imul
ret
sub
xor
sbbl
add
cld
xchg
xor
xchg
or
subl
xlat
sub
pop
insl
fisubrl
mov
lret
adc
mov
sarb
inc
sbb
loopne
xchg
mov
movsb
cli
xor
sarb
scas
sbb
add
jns
imul
or
xor
sahf
xor
or
pusha
leave
ljmp
sub
mov
mov
cwtl
aas
cwtl
cltd
popa
mov
into
adc
scas
popf
in
cli
cltd
and
inc
in
loopne
imul
jmp
sub
sub
xor
cmpxchg
cmp
add
and
xchg
sti
cmc
shlb
fucomp
aas
gs
jnp
push
rorb
mov
push
push
cmp
enter
addl
push
xor
int3
leave
xchg
pop
out
inc
fnsave
stos
or
pop
out
sti
pop
dec
or
insl
rcll
enter
out
mov
pop
pop
stos
and
ret
jle
js
sbb
lcall
lahf
push
add
rclb
cs
fs
nop
ljmp
pop
mov
shl
rcrl
jecxz
push
xchg
flds
lods
sub
cmp
testb
pushw
push
enter
aam
push
cmpsb
pusha
mov
outsl
and
shll
or
xor
adc
into
js
sbb
mul
out
xchg
mov
adc
shlb
mov
add
push
shl
sti
popa
sbb
cld
add
jp
in
pop
loopne
dec
add
aas
cmp
stc
rclb
add
fs
in
cwtl
dec
test
sbb
divb
dec
sub
adc
mov
out
fldenv
in
jns
enter
rclb
pop
inc
and
lods
dec
test
mov
jmp
fbstp
xchg
add
xor
roll
out
dec
inc
fldl
js
leave
into
std
inc
sub
loopne
xor
sbb
mov
cmp
add
mov
xor
xorb
fsubl
pop
imul
call
mov
xchg
mov
sbb
or
stos
sti
cmp
mov
push
sbb
fimull
clc
in
mov
mov
inc
adc
or
jbe
jl
cmp
orl
outsl
in
in
out
fwait
inc
stos
jae
lods
aaa
pop
and
es
ret
jl
loop
ss
std
daa
inc
ljmp
aas
cmp
mov
sub
inc
imul
xchg
sub
cmpsb
lods
pop
jae
mov
push
and
sub
jne
mov
add
lahf
aaa
xlat
dec
mov
sbb
dec
jl
mov
lahf
jno
inc
xor
popa
addr16
mov
popa
imul
inc
mov
lahf
pusha
sub
aas
jno
insb
adc
pop
xor
in
push
mov
dec
sub
xchg
mov
push
pop
jge
ror
fmull
push
push
push
mov
and
fistpl
mov
cmpb
adc
inc
sbb
test
pop
adcb
movsl
clc
dec
jnp
xor
mov
sahf
add
and
andl
push
ss
and
out
sub
sbb
add
testb
sbb
push
sbb
mov
xor
mov
mov
scas
jp
adc
xor
inc
add
cmc
mov
xlat
cmpsl
and
rcll
movsb
stos
jmp
mov
xchg
ret
int
aam
sub
aad
adc
pop
out
out
add
lret
cli
leave
jne
in
fstpt
and
pop
stos
pusha
rorb
pop
mov
mov
shrb
mov
loope
jp
fsubs
sbb
jb
or
cmc
hlt
mov
mov
lahf
xchg
je
ficomps
scas
mov
ret
jp
cmpsl
dec
cmp
int
pusha
cmpb
insb
mov
aad
orb
dec
les
add
add
mov
mov
jae
xor
add
into
incl
add
popa
cli
xor
inc
btr
out
loopne
xchg
jo
pusha
mov
push
jp
es
loopne
insl
jns
lock
mov
mov
mov
dec
or
xor
mov
or
mov
jnp
adc
dec
std
in
xor
inc
test
mov
cmp
mov
mov
sbb
cwtl
in
or
mov
add
lock
mov
lods
or
mov
dec
xchg
cmpsb
xchg
mov
mov
sarb
xor
stc
cmp
out
nop
lret
cmpxchg
pop
push
sbb
xlat
jle
rcll
or
xor
leave
ljmp
xchg
or
push
jp
inc
fnstcw
fbld
mov
push
mov
arpl
and
setge
mov
and
sbb
mov
xchg
sbb
loop
push
mov
ret
fs
fmuls
jmp
sbb
insl
mov
decl
xor
not
and
rcrl
ss
jmp
sti
mov
vpshuflw
mov
mov
dec
rcrl
mov
test
mov
clc
dec
aad
clc
mov
ret
fcoml
imul
sub
lret
lret
andl
mov
sub
xchg
les
xor
fidivl
shr
push
insl
and
dec
lret
pop
js
or
pop
xchg
push
rclb
enter
jbe
mov
jno
into
popa
dec
push
mov
mov
nop
call
and
inc
and
or
aam
jae
mov
fidivrl
shl
adc
test
les
mov
mov
cld
dec
or
push
lret
push
xor
or
enter
lret
cwtl
push
xchg
repnz
cs
sub
mov
mov
lods
jecxz
stos
cmp
xchg
icebp
push
aaa
lods
fists
and
lods
lods
mov
pop
mov
fwait
andb
shll
sub
adc
or
jle
push
mov
mov
cmp
inc
mov
push
jno
xchg
inc
scas
jae,pt
fwait
into
and
jno
inc
iret
rcrb
test
mov
es
loop
pop
cld
cmc
cmpsl
adc
loop
sti
into
inc
inc
leave
ljmp
xchg
mov
xchg
jno
mov
inc
hlt
ds
lret
aas
fadd
cltd
pop
push
mov
jns
jns
loopne
addr16
pop
and
aam
xor
push
mov
jle
push
pop
ds
pop
int3
inc
sub
cmp
test
test
pushf
div
fmull
cmpsl
and
sub
add
inc
sbb
sub
dec
call
push
ss
addr16
lds
push
mov
iret
test
hlt
iret
pushf
xor
add
fucom
pop
mov
dec
jl
repz
mov
sub
in
sbb
pop
mov
int3
sti
sub
sbb
mov
jnp
sub
jle
xchg
inc
push
mov
add
loop
loopne
addb
dec
clc
sub
repz
pushf
mov
enter
jb
add
mov
cmp
inc
insl
aaa
test
rcl
mov
xlat
mov
add
dec
wbinvd
mov
inc
pop
es
outsb
gs
mov
aam
xchg
sahf
push
push
pop
pushf
xchg
out
and
aaa
sub
or
cmp
lds
jb
loope
sar
push
jmp
pop
xchg
in
mov
pop
sti
xor
arpl
xchg
fidivl
jns
stos
test
jb
jl
mov
movsl
inc
pushf
sub
or
cmpsb
daa
mov
test
fildll
aad
or
ja
fwait
stc
and
mov
adc
jl
adc
rcll
inc
or
jae
ss
test
mov
and
lret
gs
xchg
in
outsb
xchg
pop
jmp
cs
add
rol
jp
mov
xor
movsb
ret
test
sbb
pop
loopne
jbe
call
jb
push
jecxz
push
lret
adc
dec
lahf
pushf
loop
adc
fwait
xor
or
jmp
inc
sbb
in
mov
call
and
xor
movsl
imul
xchg
mov
fstps
iret
push
outsb
mov
cmpsb
sbb
pop
cmpsl
out
jle
adc
inc
push
hlt
pusha
mov
leave
iret
pop
push
mov
dec
daa
stos
pop
fimull
jmp
pop
scas
inc
rcrb
add
and
mov
cmp
xor
icebp
in
aaa
test
outsb
xchg
push
adc
mov
repz
sbb
leave
incb
jne
inc
ret
rcl
hlt
mov
mov
mov
decl
mov
int3
enter
xor
adc
push
mov
mov
sbb
in
dec
add
xchg
ja
dec
jmp
test
push
sbb
jmp
sahf
pop
lret
cltd
cltd
cmp
les
dec
mov
or
ljmp
es
jmp
mov
mov
int3
mov
movsl
xchg
fcoms
iret
jns
jmp
repz
mov
fsubr
shlb
mov
cmp
xchg
dec
je
dec
call
mov
lock
and
clc
movsl
push
cmp
jmp
stos
add
ja
jbe
and
fwait
mov
dec
lcall
dec
dec
mov
mov
pushf
xchg
iret
inc
outsb
lods
imul
sbb
loop
mov
adc
stos
mov
xchg
mov
mov
sub
mov
push
outsb
push
popa
mov
cwtl
inc
mov
mov
out
or
jmp
pop
sub
cmp
test
loopne
in
inc
adc
js
cmp
fisubrl
sbb
mov
sahf
add
cmovb
mov
aaa
jns
cmp
leave
stos
xor
pop
daa
andb
pushf
mov
jno
cmpsl
iret
repnz
pop
pop
xor
jnp
outsb
cmc
push
xchg
mov
enter
in
or
fwait
call
inc
dec
jns
ja
loopne
and
stos
inc
lahf
into
sub
sbb
scas
rclb
shl
fcoml
push
dec
xlat
xor
out
xor
call
in
scas
xor
push
cmpb
mov
sbb
dec
ffreep
and
push
lods
sbb
dec
xor
pushf
xlat
ljmp
jb
das
xchg
leave
sbb
mov
xchg
daa
and
std
cmpb
cmp
adc
xor
repz
dec
mov
stos
push
pusha
or
mov
mov
sbb
jb
testl
shll
cmpsl
ja
stc
push
comiss
and
cmp
xor
lods
mov
mov
scas
ret
mov
jl
pop
jbe
movsb
push
std
pusha
insb
cli
xor
es
ret
jb
add
or
hlt
push
ja
xchg
push
jecxz
sbb
pop
lret
xchg
sub
mov
mov
aad
popf
add
or
popf
jns
add
movsb
cmpsb
or
out
sahf
pop
dec
sub
dec
add
or
mov
inc
lahf
mov
mov
dec
cmp
mov
rol
dec
stc
mov
or
pop
cmp
push
popf
rcl
and
leave
dec
lds
loopne
dec
cmp
cmp
pop
and
mov
into
lret
pop
pop
and
mov
testl
aaa
popa
inc
xor
addr16
shl
push
mov
add
in
sbb
inc
jge
in
push
sbb
dec
sub
add
or
jg
jne
lock
call
cmp
ds
pushf
jne
or
adc
xor
or
mov
cmp
out
imul
sub
xor
mov
movsl
nop
sub
arpl
fs
xchg
xchg
mov
enter
gs
jno
xchg
loopne
sti
addr16
shl
mov
test
sahf
jo
jns
es
imull
fs
sbb
xchg
push
nop
ficoms
sbb
arpl
popf
fcoms
loope
sbb
les
mov
not
xor
sub
orl
pop
mov
jmp
repz
or
andb
ss
jmp
add
fistpll
outsb
lods
jb
test
movsl
xchg
bound
mov
sbb
jmp
jecxz
and
pop
lahf
int
mov
idivb
mov
sbb
pop
add
sub
sbb
les
repnz
push
aas
sub
and
aad
test
jns
cmp
cmp
cld
sar
adc
or
gs
lods
stos
inc
jecxz
fs
dec
push
out
push
iret
hlt
andl
stos
pop
imul
push
movl
fst
fidivl
mov
scas
lock
push
lret
xor
cli
cmp
outsb
cmpsl
ss
repnz
test
push
push
adc
and
mov
lods
add
jl
or
push
push
xor
push
cmpb
mov
mov
gs
sahf
repnz
push
add
xor
push
loopne
mov
mov
ds
in
repz
int3
iret
xchg
sub
mov
movsb
jno
sbb
into
push
mov
or
rcrb
adc
pop
jae
pop
xor
inc
es
mov
push
push
jle
sahf
notb
mov
dec
pop
lock
fsubs
test
sub
jb
inc
pop
repnz
push
scas
mov
pop
jb
add
push
lcall
jo
sub
push
inc
ss
and
popf
jl
cmp
int3
scas
fdivr
inc
ja
pop
loopne
adc
push
data16
push
in
in
sub
dec
lahf
sbb
mov
fidivs
testb
adc
outsl
das
sbb
pop
dec
xor
mov
jo
and
pop
mul
mov
pop
lods
and
movsl
cmpsl
shll
es
mov
lret
lods
add
pop
fdivrl
push
in
inc
xor
in
loop
push
or
mov
mov
inc
imul
xorb
popf
repz
mov
jg
dec
cmpsl
jmp
xchg
aam
aas
xorb
sub
cld
das
jle
xchg
dec
int
sbb
sbb
pushf
loope
xchg
push
pop
cltd
pop
mov
out
lcall
mov
cld
in
xchg
div
stos
adc
insb
mov
push
mov
aad
pop
fisubrl
inc
test
cmpsb
pop
xchg
jae
and
test
iret
inc
aas
or
fptan
les
xchg
and
popa
movsl
jmp
ljmp
add
mov
xchg
pusha
enter
lret
dec
fdivr
decl
add
add
add
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
fsubrl
scas
jp
or
jp
mov
and
cld
fdiv
dec
jg
rcl
adc
daa
loop
pop
cltd
cmp
pop
mov
sub
out
mov
in
dec
inc
jbe
insb
lock
xchg
dec
shl
and
in
pop
mov
je
push
jecxz
jb
pop
lods
and
xchg
push
pop
xor
jno
pushl
std
in
cmp
mov
mov
jmp
or
cli
xchg
clc
mov
hlt
jo
and
icebp
ljmp
fdivr
xchg
mov
sbb
xchg
pop
add
xchg
out
ljmp
mov
in
cwtl
imul
fisubrl
and
sti
jl
fcmovnb
outsl
push
or
inc
mov
cwtl
cmp
add
xchg
outsb
addr16
fs
cmp
cmp
popa
jp,pn
xchg
sbb
and
fs
imul
leave
sbb
loope
or
shlb
adc
xchg
jp
fs
mov
jne
cltd
and
or
dec
loope
xchg
xor
cmp
sub
or
xchg
enter
sbb
cld
xchg
push
mov
cmpps
dec
push
pop
lock
or
sub
and
jb
mov
insb
clc
ja
mov
push
add
lret
lcall
pop
rorb
push
or
jbe
sub
mov
inc
out
add
sub
test
ja
pop
lock
dec
popf
and
add
push
lods
cmpsb
push
ds
push
rolb
in
fcompl
out
cmc
nop
push
cld
in
jg
mov
mov
mov
repnz
mov
sub
pusha
addr16
std
sub
lret
xchg
and
xchg
repnz
xlat
call
add
push
fs
lea
jp
ret
push
mov
mov
xor
fldl
out
in
sti
lret
shl
add
mov
jb
push
xor
test
cmp
unpckhps
adc
xchg
push
or
and
aam
subb
adc
out
xor
or
cmp
jg
add
test
dec
jo
scas
in
call
int3
fcmove
sub
push
test
sub
cmp
pop
cs
into
adc
xchg
mov
hlt
sbb
mov
xor
fnstsw
in
aad
jmp
in
add
in
mov
inc
push
js
or
push
xchg
ljmp
pop
movsb
movsb
add
xor
sti
test
jg
ret
dec
push
data16
dec
bound
div
xchg
scas
enter
or
dec
jno
jge
std
and
in
jge
dec
xchg
pop
xor
pop
mov
loope
or
inc
cmc
aas
gs
mov
pop
add
pop
add
pushl
mov
idiv
push
neg
iret
xchg
adcl
sbb
pop
add
dec
sti
popf
mov
rolb
push
cmpsl
inc
mov
mov
ljmp
jbe
insl
add
testl
pushf
jb
popa
jp
adc
mov
jns
pop
mov
push
in
cmp
or
push
lds
lock
movsl
sbbl
int
sbb
sbb
arpl
jl
push
mov
adc
dec
push
nop
incl
inc
push
leave
jl
in
aaa
cmpsb
loop
inc
xchg
inc
pusha
sahf
pop
dec
int
sbb
stc
lcall
cmp
mov
imul
mov
and
mov
out
es
testl
or
in
dec
ret
pop
inc
xor
lods
xor
jmp
js
les
adc
cmp
cmp
inc
call
or
add
into
imul
sbb
mov
cli
ret
les
jns
pop
mov
shrl
ret
ror
leave
lods
or
jb
add
call
mov
push
outsl
imull
mov
push
mov
addb
test
push
add
add
lea
repz
pop
fdivr
fdiv
pop
add
cmp
adc
push
icebp
push
mov
xchg
mov
int
sbb
cmp
jb
imul
mov
pop
sbb
in
and
fildll
test
xchg
jg
movsl
aad
inc
xlat
xchg
and
sti
repz
xchg
arpl
add
fstps
fnsave
xor
cmp
pushf
insl
lret
das
sub
jne
scas
jnp
mov
outsb
mov
outsl
mov
jnp
cmpsb
lea
aad
jne
xchg
mov
or
pushf
stc
dec
andl
scas
xor
stos
testl
jmp
mov
lods
popa
je
sub
data16
jbe
fdivrs
mov
fisttpll
dec
jbe
lcall
orb
pop
cs
sahf
inc
sub
sbb
shufps
push
inc
lahf
or
mov
mov
daa
insb
aaa
sbb
add
pop
or
sub
push
mov
repz
sti
scas
push
out
cmc
jb
fnstcw
pop
push
push
jmp
dec
mov
int
mov
xor
dec
and
mov
nop
cvtpi2ps
ror
fstpl
xchg
dec
aad
mov
imul
mov
dec
push
and
insl
rclb
add
jg
lds
fs
ljmp
cli
pushf
fmull
std
inc
imul
and
pop
and
mov
ja
mov
pop
jnp
ljmp
loop
add
mov
mov
pop
xchg
in
push
movsb
lods
pop
fwait
js
sbb
or
mov
clc
xchg
gs
hlt
mov
mov
push
fidivs
jns
pop
jecxz
leave
adc
cmpsl
ret
xor
int
lahf
test
sub
shll
push
or
lret
in
xchg
cli
ljmp
stos
fsubrp
out
icebp
adc
movsb
pop
jno
push
out
fstps
popf
xchg
cmpsb
sub
aas
lods
adc
es
inc
fs
scas
pop
lcall
jp
mov
shll
push
outsb
cmp
pop
sub
pop
jne
mov
lods
cmp
enter
lret
in
in
mov
stos
roll
push
mov
jo
cwtl
mov
loop
fs
rolb
gs
je
out
lods
push
lds
jecxz
in
jns
aad
pop
sub
push
cmp
popf
mov
cmp
out
lahf
test
stos
aaa
push
imul
loope
cmp
mov
xlat
addl
lods
fidivrl
addr16
lds
mov
push
ljmp
lahf
inc
cmp
adc
sarb
andb
jno
mov
or
dec
cmpsb
cli
repz
not
inc
aas
cmp
xchg
dec
mov
sbb
loope
call
fildll
jb
push
jns
frstor
cmp
mov
sbb
loop
jecxz
insb
inc
pop
shlb
cld
addb
mov
mov
add
test
pop
mov
xchg
or
or
or
xor
xchg
sub
aad
popa
in
adc
repnz
adc
push
movsb
rclb
faddl
sti
jp
aad
xchg
outsl
jnp
push
int
mov
test
xchg
je
lret
pushl
out
jne
sbb
cli
sub
adc
ret
jb
cmp
push
test
daa
mov
lahf
popa
sbb
jne
xor
orl
push
lret
mov
jne
sbb
fcomps
ljmp
fildll
pop
mov
in
and
in
into
push
fs
inc
clc
cmpsb
mov
and
jb
sub
and
push
mov
bound
outsl
jae
sub
pop
ret
icebp
mov
loop
adcb
outsl
dec
stc
jp
mov
js
fcomps
xchg
rcrl
xchg
push
cld
xor
insl
pop
fstp
shrl
fcoms
push
mov
sub
fucom
aaa
adc
xchg
test
sbb
ljmp
out
adc
mov
shlb
jp
sbb
sbb
dec
jnp
out
cmp
jns
mov
adc
test
adc
and
ds
cmpsl
std
push
jb
out
fstpl
xor
push
in
xchg
lret
jnp
push
inc
lods
testb
xchg
mov
inc
movsb
dec
fstpl
xchg
inc
cmp
call
sub
jnp
shll
inc
push
jo
mov
mov
dec
out
sbb
jno
arpl
sbb
scas
add
call
inc
fmul
pop
fsubrl
movsb
loope
xchg
push
adc
test
jl
xchg
dec
cmp
insb
push
add
lds
sbb
out
aas
mov
insl
rcr
mov
adc
pop
fnstsw
mov
push
stos
rorl
or
cmp
dec
ret
shrb
popf
jl
jo
out
lods
arpl
dec
mov
mov
xor
jl
add
jecxz
imul
sub
push
push
mov
xor
or
in
push
sti
in
cmc
pop
dec
pop
arpl
fdivs
mov
jo
out
cld
dec
jecxz
cmp
int3
sub
inc
lods
adc
sbb
sbb
cmp
sbb
sbb
xor
movsl
test
inc
jge
call
dec
movsb
lods
inc
mov
push
and
stc
pusha
lea
lahf
jmp
scas
or
sub
loopne
loope
inc
mulb
das
xor
cmp
insb
insb
pop
adc
sbb
cmc
inc
cmp
aam
popf
and
jecxz
jecxz
out
loopne
arpl
fdivl
ja
inc
mov
pop
pop
xor
lods
rorl
add
xchg
mov
out
mov
arpl
dec
adc
shll
and
fldl
movsb
fucomi
dec
mov
cmp
jl
dec
stc
outsl
lds
sbb
out
fwait
mov
scas
js
or
add
dec
xchg
ja
push
scas
push
call
sbb
imul
iret
test
cs
fiadds
leave
ret
sahf
les
divl
inc
push
pop
inc
test
jle
ds
fidivrl
outsb
addr16
addb
int3
pop
cmpsl
push
in
lret
daa
in
scas
or
or
cmp
cmpsb
mov
push
out
lcall
inc
enter
cmp
cmp
or
push
jl
dec
scas
xchg
and
lds
cmp
inc
mov
mov
negb
loope
sbb
mov
and
or
push
nop
or
aam
outsb
jb
out
sub
dec
mov
dec
aad
mov
push
es
jbe
sbb
dec
sti
ds
jg
mov
mov
push
scas
jge
xor
imul
enter
arpl
lods
in
or
out
cmpb
out
xchg
fs
fsubp
pop
jg
pushf
pop
scas
cmp
sbb
jle
xchg
mov
hlt
xchg
jmp
mov
cmp
cltd
sbb
sbb
mov
popa
inc
cmc
push
loopne
sti
loope
ljmp
outsl
rcll
push
xor
fists
xchg
or
mov
int
jbe
jge
rcrb
pop
jbe
adc
xor
dec
ds
jne
stos
push
cmc
push
loop
pop
push
aam
inc
stos
cs
jnp
loope
or
stc
movsb
imul
jnp
lea
mov
cmp
sub
lcall
pushf
test
cmp
in
add
xchg
or
cmp
sbb
fdivl
enter
mov
scas
xchg
mov
enter
inc
xlat
push
sahf
pop
add
mov
cltd
sbb
subl
adc
pop
ret
test
addr16
jl
in
in
xor
shrb
test
in
xor
repnz
cmp
cltd
lret
fcomi
sbb
test
cs
sub
or
inc
sahf
test
and
mov
pop
cmp
jo
sub
jg
and
push
ret
xchg
ljmp
bndstx
xchg
sub
and
in
dec
test
sarl
icebp
sbb
jb
mov
gs
iret
dec
xchg
shlb
pop
xchg
lahf
xlat
pop
jmp
mov
jne
pusha
idivl
in
lock
sub
dec
ss
mov
inc
or
es
mov
sub
jmp
adc
fs
mov
lea
and
test
mov
sub
cld
test
stos
fisubrs
jbe
jb,pt
in
js
adc
or
dec
and
mov
leave
or
jo
push
sub
movsl
insb
pop
lods
dec
cmc
push
shll
add
cltd
pop
cmpsb
enter
ficompl
mov
push
int
jae
dec
lods
sbb
cmpsl
scas
or
test
push
inc
add
or
insb
sbb
iret
mov
mov
mov
pop
sbb
inc
in
popa
sub
data16
pop
dec
out
jno
loopne
pop
sbb
adc
or
dec
ds
stos
fs
sbbl
popa
mov
xchg
jnp
push
mov
xor
orb
fsubrl
dec
sub
movsb
dec
addb
add
clc
sahf
rcrl
pop
lret
fdivs
and
push
push
or
sbb
lret
pusha
add
jecxz
mov
or
dec
sub
sub
jno
push
fdivrs
fildll
repz
push
scas
icebp
mov
add
dec
pop
push
xchg
icebp
dec
jl
and
xchg
xor
sarl
mov
cmp
loop
cmp
and
out
add
repz
and
lret
test
xchg
adc
arpl
adc
sub
adc
fisttps
adc
mov
imul
jno
addl
jmp
push
sub
addb
leave
push
mov
popa
imul
outsb
shll
insl
out
jnp
mov
inc
or
adc
and
mov
leave
imul
cltd
jno
cmp
inc
fldcw
fists
mov
and
mov
bound
ret
or
and
dec
jl
adc
jecxz
rep
cmp
mov
out
pop
pop
sub
sbb
test
xor
and
es
fstps
mov
dec
in
xorl
adc
ja
push
rcrb
fcomi
cmp
dec
xchg
and
aad
xchg
cmp
or
mov
mov
mov
cmp
ret
inc
xchg
jg
lahf
mov
mov
push
cmp
scas
mov
fs
ret
push
fsubrs
ficompl
adc
and
dec
leave
int3
pop
pushf
outsl
push
fbstp
fdivrs
mov
fld
adcb
pop
sahf
jo
dec
or
es
inc
sbb
xchg
fdivrs
mov
mov
adc
orl
int3
lods
ljmp
in
fnstsw
movsl
inc
push
js
rclb
orl
lds
imul
xchg
out
aaa
mov
scas
lock
mov
jns
loop
inc
inc
xchg
lea
mov
aad
jb
xchg
cmp
pop
out
mov
jae
xchg
inc
out
jo
aad
les
jmp
aam
fstpt
shlb
cwtl
dec
mov
shlb
xchg
add
outsl
bound
inc
pop
pop
es
lret
jmp
sub
adc
dec
aaa
xchg
push
jbe
mov
popa
xor
mov
daa
push
xlat
inc
test
mov
arpl
push
jecxz
and
jns
xor
lea
mov
sbb
pop
rcr
sbb
das
ja
sahf
lods
sti
pop
hlt
mov
jo
xchg
or
imul
lds
xor
mov
imull
loope
xchg
clc
push
xchg
pop
iret
jae
adc
push
xchg
push
clc
insb
outsb
loopnew
xchg
add
ret
in
nop
xchg
mov
ds
adc
pop
lods
sbb
fdivr
mov
mov
ds
jb
cmp
xchg
and
ljmp
aad
notl
orl
int
mov
sub
adc
ss
mov
mov
out
or
stc
and
into
push
mov
inc
ret
dec
add
cli
add
push
aas
jno
pusha
test
sub
imul
test
dec
lods
mov
fnstenv
cmp
push
fsin
lds
dec
mov
lcall
scas
jmp
xor
jbe
push
push
aam
pop
mov
je
movsl
mov
adc
adc
inc
mov
sub
push
inc
add
inc
mov
jnp
xor
or
xor
xor
insl
ljmp
add
inc
add
mov
sub
inc
or
xlat
push
andb
imull
loop
sbb
imul
lret
fldt
lcall
jno
mov
ror
les
xlat
xchg
ja
imul
les
clc
sbb
xchg
adc
ljmp
hlt
push
dec
pusha
mov
std
mov
out
pop
mov
repnz
add
inc
inc
lcall
lods
sub
and
inc
adc
xchg
scas
or
or
jno
out
adc
add
mov
mov
data16
loope
int
sbb
mov
dec
sti
dec
jge
bound
and
mov
adc
push
aam
idivb
xlat
jmp
sbb
mov
xor
mov
jl
jae
in
jno
push
es
sbb
test
fdivrp
je
test
push
popf
dec
jns
fcomps
push
aas
in
lods
lock
mov
pop
xor
xchg
shlb
mov
mov
enter
data16
jae
cwtl
add
pop
pop
fcmove
xor
pop
sbb
xchg
mov
js
inc
dec
hlt
dec
sub
and
shlb
inc
iret
dec
pusha
je
inc
and
inc
roll
push
cmpsb
push
icebp
out
mov
in
dec
jmp
mov
xchg
clc
xchg
adc
dec
inc
fsubrl
cs
lret
es
xor
xchg
mov
nop
int3
insb
mov
mov
das
aam
lahf
push
clc
inc
sub
mov
dec
insb
sbb
sahf
xor
aad
push
xchg
int3
nop
pusha
xchg
dec
push
jae
mov
fstl
adc
xchg
push
cmp
mov
sbb
repz
inc
fdivrl
jnp
ffreep
arpl
jno
dec
movsl
sub
dec
push
addr16
outsl
cmp
leave
repz
xor
inc
jo
push
int
mov
aam
mov
cmp
popa
adc
out
xchg
fisttpll
fidivl
mov
pop
adc
or
cmp
movsb
jns
adc
sub
xor
cmp
fwait
push
adc
cwtl
mov
xchg
dec
sub
insb
cmp
testb
dec
loope
roll
hlt
cmc
adc
nop
pop
lcall
jno
es
imulb
cli
mov
or
or
inc
adc
pop
mov
jg
lret
ret
stos
jae
inc
pop
mov
mov
add
pushl
iret
enter
push
in
repz
fistpl
sub
inc
ds
push
mov
inc
stc
adc
popf
mov
add
dec
test
jbe
push
inc
popa
inc
lahf
mov
pop
int
lahf
fcmovnbe
dec
out
xor
sbb
pop
sbb
or
mov
js
xor
xchg
ret
jnp
loope
mov
mov
mov
pop
test
idivb
jnp
or
jp
popa
shl
xchg
mov
xchg
inc
mov
dec
imul
adc
cmp
jg
lods
sbb
lods
popa
mov
xchg
jno
xchg
push
sbb
leave
pop
and
cltd
xchg
into
mov
aaa
fistps
jge
sbb
cmp
scas
movsl
insb
mov
in
rorl
adc
bound
ficoml
add
mov
mov
lret
mov
ret
jne
mov
hlt
xor
loope
add
mov
out
and
scas
lcall
cmp
rolb
lea
out
loopne
inc
out
jne
mov
addr16
mov
stos
and
and
sub
or
icebp
add
scas
je
enter
lret
movsl
pop
push
in
out
mov
add
aas
lods
adc
fiadds
push
scas
cld
mov
nop
sar
imul
or
dec
cli
pop
std
shll
jbe
mov
mov
dec
add
push
outsl
mov
add
sbb
fstl
jnp
ljmp
sbb
mov
xchg
jecxz
mov
mov
mov
mov
xchg
inc
mov
jb
jp
lahf
mov
adc
xchg
leave
imul
pushf
mov
fcompp
xchg
mov
nop
stos
xor
sub
push
icebp
jecxz
dec
xchg
xchg
jl
jecxz
cmp
mov
hlt
fs
add
xor
or
xor
aad
jo
jg
or
lock
enter
push
mov
push
mov
cwtl
int3
adc
sub
lcall
add
mull
push
mov
in
test
xchg
rcll
pop
iret
addr16
jg
inc
cwtl
stc
cwtl
mov
insb
stos
test
or
je
jecxz
inc
pop
or
xchg
push
lods
dec
pop
xorb
inc
fistpl
js
and
mov
popf
push
jmp
rorl
sarb
and
popa
or
shll
imul
movsl
inc
cmp
inc
popf
inc
jmp
xor
lock
shlb
je
push
not
jmp
lret
adc
mov
jnp
cmc
movsl
dec
xchg
leave
mov
sbb
pop
pop
movsb
jle
leave
imul
out
test
and
mov
outsl
push
rol
lret
scas
js
addr16
sub
icebp
iret
pop
cli
stos
roll
and
pop
mov
lret
hlt
pop
repz
jnp
shrl
lret
shll
cmp
cld
sub
push
mov
add
adc
adc
or
jmp
or
mov
jb
sub
mov
mov
sbb
pop
mov
xorl
inc
call
imul
jp
xor
push
fistpl
jbe
mov
and
lock
mov
ror
jg
sahf
fldenv
hlt
roll
pop
sub
or
outsb
es
fstps
pop
jnp
jbe
ja
lret
shlb
cli
lock
insl
fwait
ljmp
idiv
jno
lahf
lret
idiv
std
es
lea
adc
stos
cmp
and
push
or
incl
xchg
push
adc
mov
mov
dec
stos
pop
sub
or
sar
jae
and
lcall
stc
jge
or
ret
mov
sub
cmp
rcl
mov
push
push
idiv
xchg
xchg
push
enter
mov
mov
xchg
mov
cltd
or
mov
pop
test
and
xor
sbb
push
jne
fs
fisubl
enter
fnsave
sbb
ret
add
add
scas
test
scas
or
mov
in
pop
push
jb
xchg
inc
insl
pusha
mov
popf
scas
loope
int3
lock
sbb
int
aas
shr
cmpsl
scas
lods
adcb
aad
inc
dec
sub
ret
and
test
scas
imul
ss
bound
lahf
pop
pushf
dec
cmp
mov
aam
outsb
lods
imul
outsb
pop
icebp
lahf
cltd
pop
mov
push
jns
cmp
mov
pop
test
aad
add
or
lods
rcl
daa
jno
arpl
mov
mov
cli
je
add
rcll
in
ds
push
mov
jecxz
mov
in
daa
add
ja
push
mov
jmp
xor
sbb
add
mov
mov
jb
es
mov
xchg
imul
mov
push
into
cld
cld
add
inc
popf
arpl
lods
movl
outsb
rcrl
loope
arpl
sbb
push
les
scas
or
and
inc
cmp
fdivrl
rolb
sub
cld
xchg
outsl
inc
lret
jp
int3
stos
movsl
cmp
js
jge
leave
pusha
xchg
aam
iret
notb
shrb
in
mov
shl
imul
add
ret
repnz
faddl
pop
es
sub
sarb
popa
shrl
mov
dec
adc
jmp
mov
imul
das
pushf
adc
fadds
dec
dec
ja
jne,pt
push
jmp
or
dec
int3
push
jl
adc
xchg
shlb
xor
push
adc
push
cli
dec
cmp
push
xchg
sti
sub
mov
shrb
std
ja
cld
fst
imul
pusha
loop
addr16
bnd
ja
push
cmp
rcrb
add
sub
pop
push
cmp
inc
imul
sbb
ss
pop
or
cs
mov
sbb
mov
lahf
adc
icebp
mov
or
or
adc
movsb
sub
cmp
mov
stc
imul
shrb
mov
lds
dec
add
cmp
sbb
loope
out
jnp
loope
xor
push
mov
sub
push
and
repz
push
fs
outsl
mov
xorb
daa
xchg
loopne
lahf
cs
data16
sbb
or
nop
mov
lea
xor
push
out
sarb
test
add
lret
xchg
mov
lods
scas
jge
jae
inc
adc
dec
and
sub
xor
jne
cmpsb
xor
es
and
je
scas
jo
cmc
cmpsl
cmpsl
push
insl
jns
xchg
shlb
aas
hlt
icebp
inc
mov
push
cmc
cmp
test
sbb
mov
aam
push
test
cli
or
aaa
adcl
push
sarl
popa
fisttpll
in
cltd
scas
fcom
sub
sbb
push
push
adc
nop
sbb
adc
or
testl
jae
in
push
xor
lret
mov
aam
cmpsl
adc
inc
test
push
or
dec
mov
lds
inc
inc
inc
clc
adc
lds
or
xchg
pushf
xor
insl
cltd
cmp
mov
mov
sub
and
lds
das
jne
aas
jecxz
dec
sbb
mov
xor
push
sbbb
and
push
inc
pop
mov
lods
push
shll
xchg
add
jl
pop
pushf
test
leave
sahf
and
mov
scas
jns
xor
fld
adc
jmp
sbb
call
popa
sbb
fimuls
addr16
cwtl
adc
icebp
mov
cmp
jge
js
pop
pop
mov
jne
sti
fmull
adc
add
mov
hlt
iret
mov
push
mov
inc
ja
mov
rorb
and
stc
mov
js
movsb
mov
cmp
cwtl
aas
sub
cs
aad
stc
jno
addr16
ljmp
cmpb
in
loop
jg
jg
das
xor
jo
mov
pop
mov
add
cmc
jle
cmp
push
cmp
aas
les
hlt
bound
fsts
sub
loopne
mov
adc
fwait
jbe
xlat
sahf
push
push
repz
mov
xor
out
shlb
shrb
inc
std
mov
push
and
add
loope
xchg
adc
movsl
mov
movsb
scas
cmp
push
sarb
les
popa
call
or
dec
cmc
ret
xlat
jae
iret
fisubrs
jbe
in
arpl
dec
xchg
sbb
fisubl
xor
adc
lret
adc
outsl
xchg
pop
fsub
mov
xor
sub
mov
cwtl
frstor
add
aas
and
lret
subb
inc
pop
dec
pop
repz
jno
rorl
mov
test
xchg
mov
push
sbb
scas
cmpsl
xchg
xchg
push
mov
ret
lret
pop
repz
iret
fwait
rcrl
ja
xchg
jo
inc
shlb
nop
movsl
mov
andb
stos
cwtl
pushf
sbbb
fsubrl
mov
loopne
mov
push
fldenv
pushf
in
out
mov
jecxz
push
mov
inc
lea
das
mov
xor
pop
pop
ljmp
out
mov
in
add
in
jns
cmp
xor
jnp
push
mov
lock
out
push
dec
push
std
add
repz
lods
add
gs
mov
adc
imul
mov
and
ret
mov
xchg
xor
int3
ret
inc
adcb
aam
cmp
pusha
out
and
fwait
sbb
dec
scas
daa
push
sub
stos
nop
jge
scas
leave
shl
dec
lock
adc
ror
outsb
xchg
sbb
mov
xor
sub
mov
mov
hlt
cmp
mov
addr16
pop
pop
adc
xchg
jnp
cltd
insl
and
js
push
enter
popf
cmp
adc
out
cmp
cmp
movb
loopne
fwait
xor
fstpt
imul
jg
mov
scas
inc
cmp
dec
stos
bnd
jmp
ret
xchg
test
jno
xor
jle,pt
shrl
sbb
aaa
pop
lcall
lock
into
sar
loop
sbb
int
mov
enter
or
cmpsb
add
fnsave
sbb
add
fdivs
or
aad
scas
xchg
fsub
out
sbbb
orb
xchg
jae
fcomps
lods
ror
cmpl
push
imul
insl
das
sbb
cwtl
jp
lock
stos
int
jp
fsubrp
mov
mov
pop
push
fs
push
inc
in
mov
test
inc
sbbb
xor
and
push
push
and
sub
nop
mov
cmp
call
js
into
std
jg
sbb
dec
xchg
scas
popl
cwtl
repz
es
inc
or
sub
inc
fisttpl
jb
cmp
insb
push
mov
mov
cwtl
pop
sbb
movd
adc
xlat
xor
cmpsb
xor
cmpb
bound
leave
sub
lea
aas
js
into
xchg
mov
int3
fxtract
iret
fnstenv
sbb
stos
out
inc
pushf
enter
adc
cwtl
cmp
cmp
notb
dec
xor
jo
adc
sbb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
dec
xorl
jp
or
jp
test
or
into
test
mov
pop
paddusw
dec
mov
addl
inc
bound
in
or
xchg
cld
mov
sbb
iret
jle
sub
outsb
imul
aam
inc
addr16
add
int
push
mov
out
aaa
dec
fs
fwait
pop
lcall
mov
mov
das
push
and
dec
arpl
in
gs
aas
adc
jnp
xor
orb
popa
and
inc
mov
and
pop
push
or
push
mov
adc
mov
aam
xchg
pop
push
shrl
lret
movsb
inc
out
je
adc
sbb
jae
call
jge
mov
int3
daa
dec
idiv
push
subb
jnp
mov
mov
lcall
mov
pop
subb
inc
adc
fistl
and
pop
sti
popf
jbe
inc
sti
aad
daa
inc
mov
mov
aaa
cwtl
jmp
icebp
mov
stc
lret
and
inc
jmp
and
and
dec
pop
scas
cmp
or
cmp
mov
aaa
fwait
popf
jle
stos
cmpsb
lret
out
jnp
mov
add
inc
dec
xchg
lods
ret
pop
stc
fwait
imul
lock
mov
jae
xchg
fildll
andl
ret
xchg
lods
in
aam
push
cmpb
cld
les
outsl
mov
in
sbb
add
sbb
imul
jle
xchg
insb
push
dec
xor
mov
rorb
pop
mov
cmp
cs
mov
sbbb
js
sub
adc
dec
scas
push
jbe
clc
or
lock
mov
inc
xchg
rcll
andb
in
ret
fs
in
les
cmpsl
and
ds
es
cmp
cmp
xor
push
call
and
in
fimull
sbb
adc
outsl
dec
cmp
into
xor
push
fcom
or
mov
fs
fisubrs
popl
adc
cmpl
pop
aam
mov
and
rorl
je
stc
dec
mov
xchg
push
mov
adc
mov
lods
ret
push
int3
dec
and
pop
cli
shrb
mov
leave
add
adc
repz
repz
pop
push
cmpl
das
mov
push
mov
jnp
mov
imull
mov
negb
mov
lret
scas
jae
dec
add
stos
push
or
push
or
fwait
or
ss
mov
sahf
call
cmp
ficoms
divl
gs
cmp
and
das
icebp
ud1
lock
ljmp
hlt
ret
lods
and
cltd
pusha
pop
add
rcrl
jbe
movl
sahf
or
outsl
mov
fidivrs
adc
mov
jecxz
outsb
imulb
push
xor
mov
jnp
bound
cmp
xchg
sar
out
or
shlb
mov
jmp
aas
mov
in
xchg
inc
aam
pop
ss
mov
into
gs
xchg
test
jp
mov
insb
hlt
movsb
dec
adc
xchg
inc
pop
adc
push
cld
rcrb
adc
into
aad
insb
xchg
mov
mov
dec
inc
dec
out
test
int3
jb
and
cmp
clc
popf
mov
out
xor
xchg
mov
dec
out
adc
pop
call
inc
test
sbb
xchg
inc
add
es
insl
mov
add
outsb
pop
xchg
sbb
add
es
ret
data16
out
rorl
lret
cmpsl
add
xor
xchg
xchg
sub
out
call
xorb
mov
daa
lea
repnz
jae
pushf
movsb
inc
and
adc
insl
int3
xchg
jb
sbb
ja
lods
push
mov
mov
cmp
subb
sub
sub
incl
push
aas
mov
arpl
pop
arpl
push
pop
test
rclb
jmp
lcall
mov
fisttps
push
push
mov
out
adc
dec
insl
xor
xlat
add
add
inc
jg
fimuls
mov
cmc
nop
cmp
das
cmpsl
popa
inc
add
lret
aas
ror
bound
adc
gs
outsl
mov
popa
push
enter
mov
adc
movsb
jbe
dec
mov
jp
xchg
jecxz
lahf
mov
adc
inc
setge
cmp
xor
test
popa
out
daa
push
pop
popa
lcall
xor
icebp
cwtl
cmp
leave
hlt
jnp
push
jp
jno
push
cwtl
jmp
jae
test
cmpsl
and
pusha
mov
ret
loop
adc
fcomps
hlt
cmp
push
sbb
and
push
adc
push
push
cmp
mov
mov
xor
int3
mov
and
add
or
rorb
sbb
add
jae
popa
mov
test
dec
inc
rorl
bound
pop
sub
cmc
leave
xchg
jne,pn
icebp
repnz
iret
or
daa
fmuls
mov
dec
mov
mov
pop
pop
pop
cwtl
pop
or
sbb
jo
or
adc
or
dec
mov
inc
ljmp
xlat
adc
jo
xchg
xchg
jl
adc
imul
lcall
add
cli
cmc
dec
push
aam
pop
mov
fwait
loop
jne
lea
xchg
lods
daa
imul
sub
inc
fwait
adcl
lret
popf
lret
das
xchg
mov
or
aas
sti
shrl
and
xor
inc
mov
call
out
test
scas
fstpt
pop
cmc
rorl
andl
sbb
cmp
jl
cmc
pop
fwait
adc
push
dec
fdivrs
xor
cmp
fsubs
movsl
inc
sbbl
lods
lahf
insl
mov
lods
aad
adc
sub
push
push
or
and
adc
int3
popf
xchg
jp
add
clc
push
iret
fsubs
mov
outsb
outsb
xor
mov
and
cmp
or
andl
xchg
mov
push
xor
loopne
inc
adc
pop
in
xor
mov
adc
mov
sub
js
push
lret
mov
jmp
pushf
mov
xchg
mov
ljmp
and
sub
ja
lcall
inc
inc
push
or
lock
and
lret
clc
aas
pushf
pushf
push
orb
out
test
ret
je
lods
and
aas
std
addr16
in
dec
xlat
lcall
mov
adc
not
pop
cmp
rcll
xchg
scas
and
fimuls
lock
pop
xor
push
or
cld
rolb
stos
mov
out
mov
pop
je
adc
repnz
jns
fnsave
sbb
jge
cmp
xor
fs
mov
arpl
out
pop
xor
mov
call
scas
in
lcall
in
data16
xchg
pop
addr16
or
add
out
xor
sbb
xchg
cltd
jecxz,pt
adc
or
lahf
ret
pusha
int
jae
popa
mov
add
das
scas
mov
inc
xor
aas
mov
imul
imull
repz
pop
mov
pushf
inc
dec
stc
and
xchg
mov
out
inc
pop
dec
into
adc
inc
or
hlt
fcomi
pop
ljmp
int
xchg
int
lods
mov
xchg
int3
insb
ds
jae
and
stc
cs
aaa
int
imul
in
out
pop
mov
xchg
mov
sbb
lea
aam
gs
pop
cmp
adc
mov
xor
jno
inc
repz
mov
das
mov
lcall
and
lret
dec
pop
sahf
and
jmp
adc
leave
imul
adc
and
mov
std
lcall
lcall
mov
mov
mov
mov
pushf
lea
mov
fisubrs
pop
mov
add
filds
int3
and
outsl
shll
jbe
iret
mov
cmpsl
mov
push
and
or
xchg
sub
cmp
std
xlat
mov
loop
or
push
in
movsb
or
jp
push
orb
das
or
and
cmpsl
adc
sub
out
leave
fisubrl
cmpsl
mov
popf
mov
jmp
into
data16
inc
adc
les
inc
imul
mov
bound
ret
mov
jp
and
dec
pop
inc
mov
loop
or
inc
or
fsubr
out
sbb
lcall
sti
daa
jl
cltd
mov
dec
dec
and
movsl
arpl
pop
lret
sbbb
int
pop
mov
push
mov
sbb
push
cmp
add
cltd
aaa
push
and
pop
fisubrs
cmp
popf
xor
or
or
push
mov
adcl
stc
stc
inc
sub
fldt
push
sbb
pop
push
add
clc
adc
or
dec
jnp
mov
fisttpll
xor
or
pop
scas
scas
add
and
sbb
sbb
fs
xchg
inc
ffree
inc
mov
and
pop
leave
iret
sbb
pop
sub
add
lods
lds
sub
xlat
and
mov
sub
sub
inc
jbe
cmp
mov
into
imul
and
xlat
xor
lds
mov
pop
jb
pop
out
shrb
outsl
lds
roll
loop
push
or
in
cli
test
loop
pop
test
imul
int3
jb
inc
test
jno
iret
push
cmp
mov
fdivl
pop
mov
dec
jno
addr16
arpl
pop
cmp
inc
add
mov
inc
pop
mov
pop
nop
adc
gs
stos
mov
test
or
pusha
fdivr
or
pushf
xor
xchg
mov
xor
imul
fldt
cmpsb
es
cmpsl
scas
adc
dec
sub
xchg
out
cmc
shrb
xchg
test
dec
xchg
out
daa
mov
add
jnp
stos
mov
jg
or
mov
mov
les
cltd
sbb
jae
mov
outsl
pop
jb
addr16
mov
adc
nop
rclb
scas
stc
xor
sub
cmc
mov
and
andb
cmp
insl
and
fstpt
pop
or
and
in
repz
lcall
push
cmp
aaa
mov
adcl
and
adc
roll
fnstenv
sub
jo
arpl
add
mov
cli
or
xchg
test
xlat
mov
scas
andb
cmpsb
stos
mov
hlt
test
pop
push
sub
mov
xlat
lea
and
sbb
lahf
out
cmpsl
xchg
arpl
sub
or
imul
cmc
xor
cwtl
sbb
fcompl
outsb
loopne
ffreep
cmp
aaa
cli
mov
mov
sub
enter
lods
xchg
or
cmp
incb
dec
cmp
cld
xor
add
push
dec
addr16
xchg
test
inc
loop
test
addr16
fldenv
sub
mov
divl
rcl
push
lcall
int
fnstenv
xchg
nop
sbb
jbe
fistpll
xor
mov
sbb
call
adc
shrb
fcomp
sbb
dec
cmpsb
mov
ret
dec
dec
inc
mov
jmp
or
xchg
arpl
jo
incl
or
adc
push
add
ret
xlat
pop
popa
ret
cmpsl
mov
mov
lret
in
dec
lds
or
inc
add
cli
lods
or
outsl
jmp
adc
sbb
or
nop
or
movb
inc
pop
rcr
add
inc
or
ds
dec
adc
cmp
pop
cmp
inc
int3
in
xor
xchg
jle
shrb
loopne
or
lods
test
sub
lea
adc
mov
push
in
add
setp
adc
test
fstpl
and
adc
mov
loop
fdivr
cmpsb
push
stos
push
cmp
and
movsb
and
movsl
xorb
push
inc
jecxz
iret
loopne
je
repnz
jmp
into
ss
shrl
hlt
or
out
lea
cmp
mov
shlb
push
xchg
test
or
or
xchg
pop
push
int3
and
ret
ret
cmp
scas
push
mov
clc
xchg
in
dec
shlb
pop
out
dec
in
ja
arpl
dec
sti
aam
jbe
and
loope
das
nop
sbb
xchg
cs
aad
lret
pop
mov
mov
movsb
iret
pop
adc
or
les
shl
pushf
lock
push
sub
loopne
mov
xor
sbb
dec
xchg
inc
adc
adc
push
sbb
cs
mov
test
dec
pushf
inc
rolb
mov
loop
mov
into
mov
cmp
mov
out
dec
into
xchg
xor
stos
or
ja
hlt
add
dec
aas
stc
jle
fildll
sarb
outsl
fsubl
pop
and
jle
mov
sub
xchg
fidivl
fwait
jg
dec
mov
mov
sbb
int3
call
push
insb
or
xor
je
fwait
dec
dec
inc
xor
push
cmp
or
daa
inc
or
fucomi
mov
adc
mov
jmp
jne
ret
movsb
add
push
lea
daa
sub
test
mov
adc
xor
repnz
ljmp
mov
dec
inc
ja
fdivrl
push
gs
fisttps
pop
cld
pop
enter
fdivrl
add
out
aad
dec
push
gs
das
adc
cli
fnstsw
add
jge
lods
testl
mov
sub
daa
xchg
call
jbe
mov
and
dec
sti
lock
aaa
stos
daa
dec
jl
clc
and
rolb
pop
xchg
les
xor
fisttpl
inc
fcomps
pushf
adcl
std
jns
sub
in
jecxz
rcrb
je
in
mov
cli
in
aam
fildl
jns
lret
inc
mov
add
fadd
pop
sbb
lcall
out
pop
or
scas
push
hlt
in
jmp
jo
mov
pop
js
xor
pop
lret
je
and
subl
sbb
rcrb
flds
std
sti
testb
fimull
stos
dec
xchg
xor
sub
dec
cmp
fimuls
or
pop
and
in
sub
add
xor
repz
mov
pop
xor
stos
push
or
repnz
pop
fiaddl
std
fs
into
fst
stos
jle
adc
mov
mov
mov
outsb
jecxz
push
xchg
rcrb
push
data16
shl
mov
mov
mov
cmp
mov
adc
fstps
adc
jnp
lock
mov
adc
dec
sbb
lods
add
cli
mov
rorb
mov
sbb
ficomps
fadds
jo
int
mov
repnz
jge
xor
add
pusha
lock
jnp
mov
lods
icebp
stos
pop
pop
movsl
imul
mov
sbbl
jb
movsb
sub
xor
fstpt
mov
push
push
cmp
mov
out
push
mov
jmp
xchg
and
insb
mov
aad
push
pop
in
adc
je
jg
sub
outsb
hlt
cmp
cwtl
cmc
cmp
pop
mov
cmpsb
cwtl
aaa
leave
fidivs
stos
dec
sub
push
outsb
or
cmp
nop
cmp
inc
cmpsb
js
jae
addb
cmpsl
xchg
cmp
lret
test
add
push
pop
cmp
out
bsr
add
cld
pop
or
arpl
dec
sbb
iret
mov
mov
js
in
mov
pushf
pop
cli
mov
or
enter
push
cmp
mov
xor
lea
lods
push
cmc
jmp
stos
jb
or
mov
lea
pop
xchg
and
xor
mov
xchg
loope
addb
arpl
mov
adc
or
fcomps
lds
pop
mov
xor
pusha
je
wbinvd
sub
mov
cli
ss
pop
inc
gs
insb
sbb
sub
inc
jle
inc
jg
and
push
xchg
stc
movups
push
jecxz
inc
scas
addr16
mov
testl
jle
jnp
popf
aad
cmovs
xchg
adc
or
cmp
loopne
mov
sbb
fisttpl
inc
add
repnz
loop
add
and
add
adc
push
sbb
push
or
or
or
jmp
pop
rcll
adc
addb
adc
ds
push
in
ljmp
es
jbe
lahf
xchg
or
ljmp
dec
outsl
jo
call
mov
and
xor
aaa
imul
movsl
mov
jmp
lods
jmp
jecxz
or
sti
xchg
icebp
and
fdivrs
push
fs
lret
jae
adcl
inc
inc
aam
or
cs
or
lods
in
ret
fs
push
mov
push
jge
ret
mov
sbb
pop
push
clc
fstpt
ret
popf
mov
xchg
addr16
jne
sub
and
push
add
xor
aad
add
imul
dec
push
adc
ret
push
mov
xchg
test
push
in
scas
lret
in
mov
insb
test
out
inc
or
stos
jl
fdivs
sbb
js
dec
sbb
insb
ret
xor
jne
jne
pop
pop
mov
dec
mov
jno
inc
scas
xchg
fmull
data16
cmp
mov
xchg
mov
add
idivl
mov
stos
sbb
dec
andb
cmp
lret
sbb
nop
pop
stos
adc
jno
pop
jg
cwtl
xor
ret
outsl
add
inc
mov
dec
lods
jg
cwtl
pop
out
sub
bound
sub
or
push
adc
mov
mov
add
subl
inc
add
cs
inc
jae
mov
lahf
scas
jnp
mov
mov
mov
or
cmp
rcll
mov
lret
mov
enter
inc
outsl
push
sti
test
jl
mov
push
mov
mov
les
mov
sub
mov
fildl
adc
or
xor
push
and
push
ljmp
gs
mov
icebp
xchg
cmp
in
mov
frstor
push
std
mov
add
dec
xchg
pop
mov
pop
test
or
push
add
jmp
cltd
imul
mov
ret
test
cmp
ret
adc
das
pushf
xchg
gs
popa
sub
outsb
inc
sbb
stos
pop
movsl
cwtl
aaa
xor
sbb
mov
lcall
aad
test
sub
pop
out
scas
pop
daa
add
fbstp
sub
dec
stc
mov
inc
out
in
cmp
pop
lea
mov
shlb
mov
icebp
pop
cmp
mov
aas
ljmp
mov
jns
enter
iret
mov
into
fs
pop
sbb
or
add
jo
fs
and
mov
frstor
mov
pop
pop
cld
pop
scas
cmp
shl
and
lea
mov
pop
addr16
int3
lret
and
loope
adc
fistl
mov
dec
lahf
stc
popa
jp
dec
gs
mov
jb
cltd
xchg
fstp
popa
pushf
jmp
jo
inc
dec
xor
int3
mov
cli
sbb
mov
xchg
stos
out
dec
loop
lds
inc
jge
or
sub
stos
or
inc
icebp
xchg
inc
ljmp
xor
sub
repz
sub
jmp
xchg
mov
sub
loope
shlb
out
rcll
lcall
sbb
je
data16
sbb
out
hlt
or
jae
push
mov
out
sub
popf
addr16
push
fistpll
icebp
sbb
inc
test
jae
out
lret
and
xor
sub
fisubl
hlt
add
cmp
xchg
ret
stos
adc
shl
jbe
sub
dec
js
pusha
cmp
out
xorb
push
adc
mov
mov
data16
push
or
xchg
dec
or
fs
ja
data16
pop
jbe
fmuls
insb
dec
repz
adc
add
pop
cmp
nop
fldl
xor
dec
lret
adc
or
sbb
popa
xor
cs
xor
js
and
shll
inc
repnz
add
mov
inc
js
pop
mov
sub
icebp
adc
mov
bound
jno
inc
cmpb
xchg
into
adc
cmc
push
xchg
pop
or
fistl
lahf
push
dec
test
test
pusha
xor
xchg
clc
das
pop
pop
into
cmp
mov
or
adc
into
rep
popa
sub
mov
mov
fwait
mov
and
pop
jmp
adc
inc
mov
push
sbb
into
push
and
ja
sbb
cmp
outsl
mov
or
adc
out
lret
frstor
in
cwtl
pop
dec
daa
imul
adc
adc
loope
out
test
mov
xchg
mov
lahf
xor
jl
ljmp
hlt
push
cs
mov
cmp
stc
xchg
xor
xchg
push
mov
mov
arpl
push
cli
fwait
cwtl
imull
inc
into
add
pop
mov
scas
jmp
adc
mov
daa
dec
outsb
sbb
cmp
in
mov
mov
cs
cmc
mov
sub
mov
sbb
fldt
mov
inc
mov
mov
mov
andb
push
cmp
inc
add
jg
jnp
dec
add
jge
inc
gs
cwtl
dec
and
dec
jo
roll
fs
out
pop
in
push
rol
xchg
loop
jg
mov
ljmp
fwait
cli
jb
sub
cmpb
leave
mov
xchg
fld
outsl
es
in
mov
sbbb
mov
fldenv
lods
mov
adc
movsb
pop
fisubrs
rorl
add
push
inc
sbb
inc
ret
sbb
xor
xchg
mov
mov
test
aad
sub
push
aad
out
inc
test
cmp
mov
add
fdiv
dec
or
xchg
fisttpll
jmp
shlb
mov
mov
loop
push
adc
fs
daa
shlb
xor
outsb
ret
in
daa
cltd
ds
cmp
add
dec
jbe
xchg
dec
mov
into
push
push
sbb
sbb
mov
jbe
xchg
int3
into
cltd
fdivr
setg
add
jne
negb
push
pop
sahf
sub
addr16
shufps
jns
movsb
jmp
test
xchg
xorl
stos
xchg
test
mov
pop
rclb
imul
mov
adc
push
fsts
pop
inc
pop
jbe
or
aad
or
lods
stos
mov
repnz
inc
outsb
or
icebp
jb
inc
ret
imul
sub
pop
lret
inc
loop
inc
and
add
mulb
in
push
popf
xor
add
hlt
push
jmp
lock
leave
or
into
dec
pusha
pop
scas
jne
popa
jle
mov
movsl
iret
shl
jnp
sub
loop
pushl
xchg
jg
inc
adc
je
or
inc
cmc
leave
xchg
cmp
jns
sub
scas
adc
outsb
les
into
xchg
mov
addb
loopne
and
repz
sub
outsl
in
and
push
mov
pop
test
sbb
cld
add
mov
mov
mov
xor
in
lahf
std
xchg
subps
mov
in
push
pop
aam
out
xchg
inc
shll
xchg
mov
loop
jnp
repnz
test
movsl
xor
mov
inc
mov
jnp
adc
jns
dec
or
jmp
pusha
push
sahf
pop
push
mov
fists
ds
sub
stos
cwtl
add
in
imul
push
xchg
data16
int
and
test
cmp
push
inc
bound
push
cmpsb
mov
scas
je
in
or
xor
add
popf
pop
jmp
cmp
scas
pop
leave
lcall
mov
jo
es
sti
jno
insl
mov
sti
inc
mov
mov
idivl
imul
xchg
cmp
inc
icebp
mov
aas
jne
mov
pop
repnz
mov
es
test
insb
push
sub
aad
movb
xchg
sahf
mov
loope
mov
rcll
or
or
inc
dec
add
xchg
iret
push
daa
push
ss
jae
jns
mov
mov
fdiv
and
or
addr16
and
dec
test
aas
lret
dec
inc
cmc
lods
xor
mov
adc
and
cmp
mov
jp
aas
adc
add
or
jns
test
stos
mov
xchg
fsubrs
jge
and
jbe
and
ss
xchg
stc
sarb
dec
out
decb
xor
xchg
push
int
bound
mov
sbb
pop
aad
xchg
fmull
xchg
aas
mov
es
out
test
cmc
imul
xchg
xchg
mov
xor
stos
shrb
xchg
loope
xor
cmpsb
jns
repnz
cmp
imul
fistpl
cmc
hlt
add
jns
jmp
shl
fwait
iret
mov
jns
jg
mov
xchg
out
mov
dec
xorb
jnp
adc
push
cmpsb
mul
xor
pop
mov
sub
pop
rcr
pop
lret
or
pop
push
mov
jbe
jp
pop
jge
xchg
adc
xchg
mov
pop
cmp
xchg
push
loope
rorb
and
pop
sbb
repz
mov
inc
or
and
jo
outsb
push
jp
jnp
or
jmp
xchg
fidivl
mov
sti
andb
testb
sub
call
les
dec
in
pop
xor
je
mov
lret
push
dec
insl
fdiv
ret
std
aam
push
jnp
ret
mov
cmpsl
in
nop
popa
inc
mov
lcall
test
add
sti
and
sub
push
aas
mov
movsl
jns
orl
pop
push
sbb
test
leave
jne
cmp
xor
mov
sbb
jge
lret
xchg
repnz
xchg
mov
adc
jo
mov
inc
popf
daa
fisubrl
cli
mov
test
push
or
dec
int
jecxz
nop
mov
mov
out
pop
int
and
sbb
dec
mov
lock
fwait
dec
push
add
mov
push
scas
js
sarl
mov
adcb
xlat
xor
je
aam
iret
mov
in
jmp
in
jp
push
sahf
mov
aaa
adc
jmp
cmp
inc
mov
ss
js
and
rcrl
int
xchg
popa
and
out
std
xorl
mov
cmc
add
jmp
lahf
jle
mov
lods
cmpl
inc
daa
shll
push
pushf
cmpsl
and
dec
add
dec
dec
gs
jg
or
data16
addr16
mov
pop
cmpb
imul
lcall
dec
stos
and
jnp
xchg
and
xor
pusha
sbb
hlt
out
hlt
adc
loopne
lahf
push
jae
nop
and
pop
mov
or
dec
lret
iret
xchg
ds
cltd
mov
scas
dec
lods
scas
xchg
sub
and
pop
sbb
xor
pop
mov
mov
repnz
pushf
xor
jo
dec
pop
orl
ficompl
sub
rcll
sub
dec
ds
sbb
or
not
lods
dec
sbbl
jp
sub
cmp
jp
mov
test
xor
push
dec
and
pop
pop
rorb
insl
sbb
mov
lret
sbb
dec
aam
inc
dec
in
mov
xchg
xlat
aad
inc
sbb
dec
popf
addl
cwtl
ljmp
jb
mov
enter
icebp
shrl
pop
out
lret
dec
imul
insb
stc
in
xchg
mov
dec
or
adc
pop
notb
aam
dec
jno
ds
mov
cmp
mov
or
add
lock
scas
pop
fsin
jae
mov
xchg
aas
or
jbe
xor
popf
cmpsb
test
aad
or
popa
clc
cwtl
into
sub
add
xor
aam
rcr
lret
sbb
shll
stos
insb
jae
jbe
stc
lods
repz
adc
jbe
sub
mov
dec
dec
and
xor
in
iret
addr16
inc
mov
fists
arpl
in
and
cmpsb
jbe
fs
outsl
rcll
call
sbb
adc
mov
add
in
stos
test
insb
test
js
mov
icebp
lods
add
test
mov
mov
jo
bound
push
mov
popf
mov
add
jg
lock
fiaddl
jns
push
iret
mov
pop
dec
add
push
or
jbe
mov
adc
mov
mov
in
sti
insl
cmpsl
sbb
adc
ds
push
dec
aaa
mov
popa
push
and
lret
adc
mov
imul
je
mov
jle
aad
gs
cmp
mov
imul
insl
mov
cmpsb
mov
xchg
mov
push
xchg
adc
outsb
add
or
std
test
xchg
adc
bound
imul
in
mov
xor
shlb
adc
test
xor
jmp
lea
pcmpeqd
sysexit
jns
lock
cmp
pop
fldenv
pop
sbb
jge
cltd
add
jbe
push
lds
push
mov
mov
pop
aaa
mov
dec
shll
sbb
jb
mov
lods
dec
inc
outsl
jns
dec
pop
loopne
push
shl
inc
push
outsb
dec
lods
jp
adc
into
jmp
popa
mov
rolb
adc
and
shll
mov
jmp
cmc
jl
mov
notb
push
or
xchg
push
stos
jbe
or
rcll
cmp
call
sbb
mov
sbb
into
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
aaa
xor
jp
push
jge
or
jp
adc
jmp
push
loope
dec
cwtl
mov
outsl
xor
jmp
xor
adc
lahf
dec
mov
or
std
sub
adc
mov
pop
cs
cmpsl
jns
lea
xor
ja
addr16
in
cld
sbb
pop
mov
in
sbb
jl
push
mov
hlt
loop
xlat
dec
testl
sbb
or
xor
pop
ror
into
lahf
loopne
pushf
out
inc
enter
shl
push
or
or
push
add
movsl
out
es
cwtl
pushf
adc
mov
xchg
mov
insb
pop
sbb
mov
pusha
jns
push
or
rcl
add
jle
sub
and
xlat
sub
aam
das
out
scas
dec
ljmp
fstpl
fisttpll
hlt
add
jb
cltd
jl
inc
mov
call
dec
xchg
aad
sub
pop
xchg
mov
call
and
fcompl
loopne
mov
je
addr16
scas
stos
or
mov
pop
mov
mov
xchg
in
jb
sti
pop
jns
popa
pop
push
jb
ds
push
sub
inc
inc
hlt
jns
or
push
xor
jp
pop
pusha
inc
loope
xchg
adc
mov
push
orl
or
jo
das
add
jg
xchg
push
negl
mov
pop
scas
xchg
push
dec
icebp
xor
inc
dec
fistpll
inc
mov
mov
dec
pop
pop
das
movsl
ret
cmp
jae
or
or
lods
stos
mov
icebp
and
rcll
and
sbb
adc
je
inc
xchg
shr
mov
cmp
cmp
or
or
cmp
add
add
push
fs
cmp
mov
adc
push
loope
js
push
gs
xorl
hlt
dec
insb
push
xlat
sub
call
call
add
cltd
lret
hlt
sub
xchg
sub
xchg
xor
movsl
shlb
mov
sbb
push
pop
aam
push
lret
pop
fldl
shlb
movsb
arpl
pop
repz
mov
sub
mov
push
shlb
jnp
add
stos
les
inc
mov
hlt
cmp
imul
jo
push
mov
loope
fcmovbe
jmp
ret
jb
and
cmp
cli
repz
loop
or
daa
or
push
data16
push
cmp
pop
mov
jae
out
mov
cs
outsl
lods
loope
inc
lret
ds
fwait
push
add
pop
sub
rcrl
xor
pop
lcall
push
mov
leave
pop
xor
lahf
mov
adc
in
bound
adc
lods
sub
fimull
in
aam
das
mov
sub
sub
ljmp
adc
mov
rcrl
push
sahf
push
leave
cs
xlat
lcall
adc
pop
mov
ds
lcall
pop
and
stos
mov
out
jbe
test
xor
loopne
or
shll
int3
mov
ss
out
dec
outsl
fists
shr
mov
jns
xchg
pop
mov
or
sub
cmc
cmpl
mov
ud2
and
xchg
ds
jns
jae
fistl
xchg
push
cmc
je
int
shll
outsb
xlat
inc
aad
jg
or
dec
dec
mov
jns
dec
sbb
jns
push
fldcw
fwait
or
stos
out
popf
xchg
push
mov
je
mov
lods
loopne
popw
dec
jbe
sbbb
and
ret
out
push
mov
fs
mov
jecxz
shlb
and
test
arpl
mov
in
lods
out
adc
fsubrl
imul
pop
xor
cmp
jecxz
in
ljmp
test
outsl
sub
adc
inc
inc
mov
loop
sub
fistps
push
jl
push
data16
xor
aam
xor
leave
pop
test
cmp
xor
mov
xchg
fmull
jg
addb
inc
outsb
lods
fcomps
cmp
sub
jg
int
mov
sub
rorb
outsb
popl
iret
push
inc
xor
loop
aad
jmp
adc
pop
add
adc
mov
mov
xor
mov
popf
inc
add
adc
lcall
stos
sub
push
or
cmpsb
push
mov
repz
jmp
std
xchg
push
mov
pop
sub
subl
pusha
or
push
cwtl
mov
movsl
neg
lahf
cltd
xchg
xor
repnz
inc
cli
ret
popa
sbb
lret
push
adc
jns
fdivrs
cmc
mov
lods
or
and
sahf
arpl
std
and
out
lods
jmp
incl
xor
std
xchg
sbb
inc
cli
mov
gs
shll
pop
int
cmp
cld
js
fsubrs
int
sub
stos
loopne
jmp
pop
ja
jmp
jecxz
or
js
and
pop
ja
pop
xor
mov
test
decl
repz
jge
adc
sub
inc
add
cmp
hlt
sbb
scas
sub
leave
jne
gs
and
fcompp
stos
je
cmpsl
dec
rclb
sub
scas
sbb
or
ja
adc
dec
cmpsl
push
icebp
dec
pop
xor
mov
daa
mov
pushf
rcrl
add
mov
loopne
push
sbb
leave
jge
mov
ss
ja
out
cmp
js
lcall
adc
dec
adc
outsl
or
jae
lret
das
jl
add
push
mov
and
dec
addl
push
and
insb
sbb
es
ret
mov
mov
jb
dec
jmp
jmp
jae
test
dec
or
lods
pop
or
push
xchg
lahf
add
cmpsl
es
mov
faddl
inc
stos
jno
movsb
pop
jecxz
loop
xor
das
mov
or
pop
adc
andl
popa
sbb
aad
pop
pop
xor
mov
out
push
test
inc
xor
aas
push
inc
or
enter
das
hlt
subb
mov
xor
sub
jb
sbbl
adc
int3
xlat
cmp
jae
scas
push
nop
icebp
dec
outsl
jo
push
xchg
repnz
add
cltd
incl
cmc
jmp
push
sub
inc
int3
dec
ja
dec
ds
shll
rcrb
pop
add
sub
fucomi
xor
push
pop
andb
and
icebp
add
je
roll
mov
and
and
adc
mov
cmpl
int3
inc
jno
int
adc
test
cli
adc
mov
or
lds
xchg
cmp
js
test
mov
add
cltd
hlt
arpl
push
inc
xlat
cmp
mov
xchg
loopne
jbe
lods
int3
sub
call
sahf
aam
scas
add
daa
arpl
mov
xor
mov
ja
lret
jge
and
inc
sti
mov
pop
pop
hlt
pop
push
ss
mov
add
adc
lea
jne
adc
mov
push
test
lods
jmp
or
arpl
loope
hlt
cmp
les
dec
test
in
lret
cltd
mov
adc
jo
cmovg
aaa
inc
jle
lds
icebp
stos
nop
clc
lds
xchg
loopne
mov
test
rorb
sarl
lea
adc
jl
cmc
jne
insb
sbb
jg
mov
ds
jo
adc
xor
call
sub
test
rorb
sbb
and
sbb
leave
jle
push
push
push
jl
push
cmp
movsb
in
ret
mov
idiv
cmp
mov
cli
into
mov
popa
ljmp
cltd
enter
decl
sub
cmp
movsl
push
xchg
dec
xor
int
rclb
dec
jbe
jo
jnp
rolb
inc
ljmp
or
imul
cmp
call
cmp
test
in
call
jns
loopne
in
mov
mov
or
rol
and
int3
mov
popa
in
test
add
add
jnp
insb
into
rclb
loope
fists
stos
js
mov
imul
scas
push
mov
mov
inc
stos
and
sub
in
adc
or
add
mov
mov
sub
ljmp
dec
addr16
les
xor
inc
cld
fstps
js
outsb
lods
mov
jmp
and
xchg
shlb
mov
fdiv
int3
or
push
in
push
jl
dec
xchg
jns
ds
cld
ret
insl
xchg
xchg
arpl
les
leave
dec
inc
cmpsb
jecxz
cmp
xchg
inc
mov
gs
fsin
popf
mov
xor
and
mov
out
cmpsl
add
les
aam
stos
xor
sti
or
arpl
dec
sub
push
mov
subb
mov
mov
mov
dec
lods
out
adc
fistpll
sub
xchg
push
lret
and
insl
lcall
mov
stos
lret
int3
in
inc
xlat
push
dec
pop
jo
adc
mov
jl
iret
fucom
int
cmpsl
add
sbb
bound
cmp
sbb
hlt
push
fidivrs
cmp
xor
jo
clc
xchg
addr16
loopne
mov
stos
xor
shl
jbe
push
mov
push
aad
cltd
in
and
or
mov
xor
movsl
mov
jmp
addr16
dec
std
jbe
mov
dec
enter
rcll
clc
push
mov
mov
aaa
mov
inc
mov
inc
mov
jne
insl
xchg
js
and
inc
push
cltd
test
fs
jae
in
mov
cmc
scas
cmpsl
insb
xor
push
flds
cmpsb
sub
repz
es
cmp
out
mov
add
inc
fwait
or
ror
pusha
mull
fimull
leave
push
pop
xlat
cld
enter
ret
shrl
lods
add
or
mov
fildll
dec
mov
loop
lods
insb
jne
mov
lea
sub
cmpsb
aas
pop
ljmp
or
xchg
fsubrl
insb
fs
lds
pop
xor
jle
cld
adc
push
jb
jnp
mov
dec
cmc
loope
call
cmc
test
jo
mov
pop
pushf
fwait
mov
pop
push
mov
mov
imul
das
mov
in
and
or
xchg
jno
adc
aad
sub
push
add
mov
adc
imul
jo
adc
test
or
jo
fnstsw
mov
add
imul
popa
mov
xchg
lods
iret
jmp
ds
aad
xchg
dec
add
ret
xchg
pop
lret
adc
lret
sbb
sahf
cmpsb
out
add
daa
dec
int3
jmp
sbb
push
jmp
nop
jo
ret
jg
ljmp
dec
add
inc
cmp
jno
add
ljmp
push
pop
fcomp
orb
mov
imul
ljmp
push
and
lds
insl
dec
cmp
add
dec
in
push
sbb
ficoml
xchg
pop
repnz
je
fistl
dec
out
int3
pop
inc
insb
or
mov
pop
xchg
inc
dec
dec
push
cltd
mov
xchg
xchg
sub
pop
mov
xchg
test
inc
and
mov
mov
insb
cmpsb
cmp
repnz
lret
push
push
mov
cmpsl
xchg
int
gs
ja
mov
cmp
je
pop
repz
inc
sbb
dec
sarl
shlw
cltd
inc
pop
das
repnz
jmp
and
sbb
or
push
sub
sub
outsb
imul
aad
in
scas
add
fsub
push
and
sub
cmp
dec
add
dec
and
fcoms
imul
mov
js
jbe
mov
cmpsl
loope
sub
out
pusha
in
cld
xor
aaa
mov
adc
out
mov
ds
pop
movsl
mov
push
test
int3
inc
call
inc
lea
movl
rclb
stos
or
aas
add
xchg
je
sarb
bound
add
cmpsl
mov
addr16
adc
gs
pop
mov
in
jae
add
push
hlt
popf
xor
test
mov
pop
ficompl
inc
mov
jbe
shll
mov
add
sbbl
fdiv
arpl
iret
add
shll
insl
lret
xor
adc
scas
add
mov
jle
mov
sbb
pop
out
nop
sti
cli
jbe
js
add
mov
sbb
sarl
cmc
lahf
push
mov
mov
stos
lea
mov
push
sbb
mov
sbb
or
xor
mov
jns
xor
xor
push
mov
filds
ror
add
or
mov
jb
inc
or
xor
jno
fsubs
int3
js
sbb
dec
lret
dec
in
sbb
hlt
cmp
jnp
push
jne
cmpsl
cltd
fcompl
dec
fcoms
and
mov
cwtl
adc
inc
mov
xchg
pop
data16
push
cmpsb
xchg
fldt
mov
mov
decl
loope
loop
add
cmp
lods
loope
xor
loop
rcrl
cmp
xchg
and
rolb
mov
bound
das
outsl
cmp
adc
xchg
push
jnp
in
sahf
or
xor
mov
and
shlb
jp
jmp
pop
xor
cmp
dec
push
cmp
push
sbb
mov
and
xchg
insb
xor
and
test
cmp
jmp
push
push
pop
leave
and
cmp
pop
adc
ljmp
scas
pop
ffreep
lret
add
mov
mov
dec
rcl
xchg
jmp
rolb
xor
and
cmc
mov
outsl
and
pushf
and
aad
pop
ds
sub
dec
mov
and
sti
movsb
xor
mov
push
outsl
adcb
testl
out
mov
pop
add
lods
shlb
xor
jno
scas
daa
add
adc
or
xor
add
jp
push
inc
jae
fstpt
pop
inc
jnp
in
push
dec
ja
pop
inc
xchg
test
and
iret
sahf
lret
testl
cli
sbb
and
test
mov
fsts
test
pcmpgtw
stos
dec
test
or
repz
inc
insl
dec
in
pop
mov
sub
mov
call
or
sarb
arpl
lcall
xchg
into
inc
out
imul
push
sbb
and
xchg
adc
jmp
stc
mov
xor
stc
sbbl
dec
cmpsl
add
and
jae
push
mov
cltd
push
out
fucomip
and
ljmp
jnp
ljmp
xorl
test
xor
mov
cmpsl
dec
cmp
leave
cmp
mov
inc
gs
pop
enter
add
push
insl
lea
jge
push
mov
sbb
mov
cltd
in
mov
scas
adc
lret
ret
daa
or
mov
adc
push
jmp
sbb
cli
jmp
or
mov
xlat
out
lcall
into
hlt
mov
mov
out
dec
adc
orb
add
test
lea
orb
fldl
sbb
movsl
lea
mov
sti
sti
push
xchg
int3
popa
pop
mov
jo
jecxz
jae
cmp
int3
push
repz
mov
arpl
les
pop
cmp
add
or
sub
dec
mov
pop
in
ds
mov
inc
push
fmull
cwtl
notb
push
add
and
out
xchg
inc
out
loop
xchg
or
scas
mov
stos
and
jp
rolb
xchg
dec
out
sahf
or
movsl
jae
cmpsl
fbld
add
push
cld
jne
es
cmp
dec
jl
sbb
cmp
mov
jnp
pushf
add
adc
or
loopne
loopne
inc
dec
inc
adc
xor
test
cld
mov
jle
scas
mov
adc
stos
push
sub
xrelease
fwait
iret
pop
out
pop
movsb
cmp
js
rcrl
xor
add
push
xor
repnz
sub
inc
sbb
dec
subl
pop
pop
mov
test
fsubrs
hlt
mov
inc
ds
mov
or
sbb
xor
sbb
rcrl
pop
popa
jbe
mov
jne
add
gs
and
jmp
mov
imul
outsl
subl
daa
rcrb
ljmp
xchg
ficoms
nop
ror
mov
ss
clc
lcall
pop
fildl
sbb
and
fwait
jae
movsl
inc
mov
sti
cli
cltd
inc
repnz
push
adc
gs
je
sbb
popf
loop
lea
push
and
or
dec
push
cltd
mov
push
lidtl
sub
ds
data16
mov
add
jbe
test
adc
rcrb
in
mov
repnz
addb
test
or
push
ja,pt
push
int
or
inc
popa
popf
mov
repnz
sub
cmp
mov
mov
jo
sub
jne
xchg
fs
xlat
push
sbb
mov
popa
fistl
xchg
call
push
loope
sub
jge
enter
pop
add
roll
or
sub
iret
into
xlat
mov
clc
daa
push
jmp
push
stos
loope
push
in
jo
dec
repnz
jae
inc
push
mov
imul
sbb
cmc
cmp
xor
jmp
ret
mov
stos
mov
pop
clc
scas
pop
pop
daa
std
das
mov
in
lods
sub
xchg
jb
sbb
fidivrl
cld
cli
rorl
push
or
ljmp
push
not
add
fwait
and
pop
jle
hlt
push
iret
ds
int
loop
and
adcl
and
add
xor
or
jb
clc
inc
mov
sbb
int3
mov
and
dec
adc
and
lcall
out
enter
push
jnp
daa
or
lock
daa
xor
jne
add
or
lcall
pop
andb
or
push
push
orb
xchg
fcomp
fdivrl
adc
outsl
xchg
sub
mov
add
shll
aas
fcomps
test
cmpsw
out
cmp
pop
in
xchg
jns
mov
push
or
sbb
xchg
mov
icebp
inc
sub
lods
xor
xor
fsubs
pop
xor
pop
sbb
dec
mov
jno
push
fldl
pushf
int3
and
sub
xchg
cli
aas
test
mov
ficoml
sti
shrb
adc
jmp
mov
cs
aaa
pusha
xchg
ficoms
fnstenv
hlt
mov
cld
and
adc
cltd
or
ret
inc
mov
or
jo
cmp
das
and
push
jp
punpckhbw
cwtl
call
adc
push
arpl
loope
sbb
jl
xor
sbb
jle
js
mov
test
aad
imul
popa
mov
cs
in
stc
xor
les
adc
loop
mov
dec
or
out
cwtl
inc
push
sub
jge
aad
or
push
jo
pop
cmc
ds
xchg
out
cmp
les
push
xchg
scas
mov
and
pushf
mov
movsl
lcall
int
jnp
inc
xchg
in
pop
inc
mov
jb
xchg
addb
mov
sti
xor
adc
push
dec
sbb
cmp
dec
out
je
inc
jb
test
mov
outsb
mov
xlat
repnz
mov
jecxz
dec
in
xor
subl
cmp
inc
inc
rorl
inc
fldl2e
fwait
rclb
sub
xchg
push
pop
clc
mov
inc
test
dec
pop
jecxz
pop
xor
ret
pop
and
xor
daa
mov
stos
mov
mov
scas
mov
sbb
or
mov
xchg
test
xchg
jbe
adc
pusha
push
sbb
ret
push
loope
pop
sub
ret
scas
call
jp
in
sbb
cli
scas
iret
test
dec
dec
pop
popa
enter
es
inc
sbb
jno
sub
mov
inc
push
dec
popa
gs
sti
cld
and
jecxz
dec
pusha
lea
mov
in
pusha
cs
bound
sub
lahf
pop
and
push
xchg
mov
loopne
clc
aam
out
aam
icebp
out
sbb
data16
ss
and
push
into
or
dec
or
ret
xchg
xchg
dec
ss
dec
movsb
in
adc
push
xlat
fldcw
mov
fwait
push
push
stc
push
fucomp
arpl
jge
cmp
cmovge
and
mov
mov
mov
mov
mov
xor
lcall
outsb
in
sarl
jg
cmp
aaa
mov
pop
imul
jae
incb
neg
andl
popa
or
sbb
inc
mov
adc
mov
jno
mov
sahf
or
nop
shrb
pop
jmp
loop
imul
sti
andl
loop
scas
mov
push
pushf
adc
inc
and
subl
lods
repz
and
faddp
pop
mov
mov
dec
push
push
arpl
mov
fsub
dec
cli
mov
cmp
or
mov
adc
pop
aaa
cli
or
loopne
mov
jecxz
clc
aad
shl
aad
test
jno
js
jae
and
mov
icebp
sub
int3
das
sbb
cltd
pop
call
addr16
flds
in
int3
movsb
dec
arpl
sub
or
js
outsl
add
inc
xor
pop
or
shll
cmpsl
xlat
adc
enter
fstl
in
or
je
or
or
xor
mov
pop
nop
loopne
xchg
dec
mov
adc
div
inc
je
insb
outsb
out
sub
std
js
mov
jno
xchg
imulb
aam
mov
cmp
adc
popf
push
jl
daa
xchg
cmc
aaa
and
add
add
std
xor
jbe
push
fisubs
test
pop
rcll
aad
popf
scas
cwtl
jbe,pn
jnp
fbld
cwtl
outsb
mov
add
sub
and
call
fdivr
ret
adc
and
pusha
mov
pop
sub
jbe
js
push
mov
add
std
add
sub
or
fldt
shlb
xor
or
popa
rcl
mov
fisttpll
and
outsl
cmpsl
lretw
mov
push
push
dec
jl
notl
cmp
test
jle
repz
aam
call
pusha
mov
mov
popf
fs
push
fwait
add
mov
push
arpl
push
loope
filds
mov
jo
xchg
mov
push
dec
mov
fsubs
loopne
pop
daa
movsl
ret
mov
imul
mov
jno
fs
jo
cs
pop
adc
cmp
in
adc
lds
lea
push
lret
or
mov
std
imul
or
push
mov
push
push
mov
xchg
mov
push
dec
jo
cld
icebp
inc
mov
jmp
add
add
fisttpll
pop
jge
js
dec
mov
lahf
pushf
mov
xchg
mov
orl
xchg
jmp
adc
cmpsb
cmpsl
jne
in
enter
cmpsl
pop
sub
push
push
bound
ds
xor
fwait
fwait
psrlq
cltd
adc
fcompl
inc
mov
addr16
inc
adc
sub
lods
dec
push
and
scas
xchg
iret
inc
jecxz
jge
jnp
cmpsb
ja
xchg
push
jp
push
imull
inc
mov
dec
pop
xor
lea
sub
dec
sbb
cwtl
in
imul
pop
cld
scas
addr16
jl
fnstsw
mov
xor
mov
in
mov
insl
xor
lds
mov
xchg
mov
dec
or
cltd
xlat
movsb
push
and
mov
mov
fwait
push
and
inc
outsl
mov
stos
cltd
jno
rcr
cmpsl
dec
test
pushf
sub
mov
add
cld
and
adc
negb
outsb
popf
dec
add
adc
loope
cmpsb
dec
pop
sbb
add
pusha
add
and
cmp
sub
jno
lods
rorb
call
cli
xor
loop
rcrb
add
dec
sub
jmp
and
jno
jo
inc
clc
into
cli
insb
inc
xor
movsl
inc
sbbl
imul
test
clc
ds
fucomp
xor
in
xor
inc
cmp
pop
cli
lret
dec
cmp
mov
ja
in
ljmp
jns
jge
subb
leave
or
pop
cmp
enter
loopne
cmp
push
dec
daa
xchg
mov
das
loope
insl
push
xchg
lret
mov
cmpsb
cmp
dec
sahf
rorl
out
inc
mov
hlt
push
enter
sbb
push
add
repnz
adcb
adc
in
lret
hlt
sub
pop
cld
cwtl
mov
push
pop
lcall
popf
dec
jb
xchg
xor
and
jge
adcl
cmp
mov
mov
insl
ljmp
cli
add
pop
shrb
lock
sub
shrb
push
cld
xchg
lcall
xor
out
in
sub
mov
sub
sbb
subb
pusha
aas
pop
sub
jg
push
cs
shl
pop
pop
popa
jo
pop
sbb
pusha
add
mov
sub
adc
call
dec
movsb
adcb
aas
cmc
imul
xor
sti
jae
test
sbb
dec
jmp
cmp
js
adc
push
sub
loopne
mov
cmp
mov
enter
lds
pop
sub
aaa
or
push
cmp
xor
outsb
addb
bnd
lcall
outsb
in
mov
ljmp
aam
sti
icebp
data16
pop
mov
repz
dec
fdivr
repnz
test
jne
push
js
scas
mov
xchg
out
in
sbb
test
dec
pop
mov
adc
stos
cwtl
pop
scas
push
aam
jmp
lods
xor
xchg
jmp
cli
ficomps
dec
les
hlt
lret
in
addr16
hlt
in
jp
jmp
sub
sbb
add
test
sbb
xor
pop
ja
movsb
cmpsb
or
and
mov
mov
popf
xor
xlat
int3
rorl
fwait
dec
insl
pop
jne
pop
popf
sub
mov
jb
mov
in
mov
filds
gs
push
loop
jmp
mov
cwtl
jp
pop
adc
hlt
add
lcall
xchg
int3
mov
addr16
aaa
pop
mov
orb
add
mov
mov
mov
sub
fistl
or
xchg
ljmp
mov
cs
xor
lcall
dec
inc
xorb
testl
cmp
out
int
xchg
fld
xchg
adc
popf
int
fisttpl
push
fldcw
lret
lods
sub
stos
mov
cmpsb
iret
imul
mov
shll
aam
jecxz
cltd
pusha
mov
test
jae
jno
adc
xchg
dec
aad
xor
movsl
int3
pop
fsts
inc
icebp
sub
inc
das
jle
jns
gs
out
stc
xor
push
imul
fldenv
inc
jo
sarb
jge
pop
mov
or
or
jnp
add
jae
pop
mov
add
dec
lcall
mov
and
adc
mov
mov
xor
lcall
in
adc
in
cmp
scas
jg
jg
dec
jns
cld
fs
js
clc
faddl
fsts
aaa
push
adc
lret
sbb
test
ljmp
ds
sbb
jne
xor
pop
mov
pop
push
or
dec
jb
cmpsl
xor
adc
push
shll
outsl
addl
or
jmp
cs
fimull
jl
incl
mov
scas
adc
add
in
leave
nop
or
shlb
cmpl
les
adc
stc
jns
lods
mov
dec
mov
jp
or
popl
ror
mov
inc
sarb
decl
push
fidivl
and
and
mov
pop
jnp
icebp
pop
repz
pop
test
mov
es
data16
movsb
inc
ficoms
push
jmp
push
mov
adc
mov
xor
daa
int
inc
jns
cwtl
push
test
shll
push
ret
sub
ss
xchg
jmp
cmovs
or
inc
push
jp,pn
add
xchg
push
and
outsl
mov
gs
jns
and
xor
xchg
sbb
sbb
loopne
cmp
cld
movsl
mov
lods
push
in
test
out
ficoms
loope
push
inc
sbb
out
pop
ret
push
adc
inc
out
lock
inc
mov
jge
in
push
or
cmp
in
fstpt
fldcw
pop
mov
mov
sbb
les
push
pop
scas
sub
add
fildl
in
inc
jg
or
sub
inc
inc
aaa
cmp
nop
iret
adc
xcrypt-ecb
cmpsl
mov
mov
sub
testb
sahf
sbb
out
jns
jae
inc
addr16
mov
gs
mov
cmp
inc
repz
xor
add
cmp
adc
cmp
pop
subb
cld
divb
test
mov
push
inc
cmpsl
jo
pushf
push
shl
jae
xchg
fs
call
mov
popf
jge
add
xor
int
push
ja
cmp
mov
inc
lds
testb
ret
adc
dec
xchg
or
jb,pn
cmp
jle,pn
push
cli
jmp
push
in
repz
or
nop
xor
inc
hlt
stos
aad
xchg
js
jge
pop
insb
into
adc
std
scas
mov
out
aad
xchg
jae
mov
add
push
arpl
in
xchg
mov
fwait
adc
sbb
and
fcoms
sub
cmp
add
daa
leave
mov
mov
pop
inc
inc
sbb
jae
insl
pop
outsb
aaa
adc
sti
das
push
push
ja
out
or
sbb
popf
cmp
push
and
shlb
mov
leave
xchg
xor
push
xor
es
ljmp
add
rolb
pop
pop
sahf
and
popf
imul
xor
or
pop
dec
pop
push
mov
cmp
cwtl
push
sbb
push
inc
lds
popa
push
pop
mov
xchg
dec
fisttps
fldl
fisttps
xchg
imul
repz
xor
in
and
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fldenv
cmp
or
jp
aas
gs
vmwrite
pop
fimull
push
jne
xchg
inc
xor
sub
lret
xchg
stos
dec
cmp
and
leave
push
mov
pop
rolb
sub
xchg
call
sub
push
loopne
insb
scas
in
loop
mov
push
push
rcrb
push
mov
push
dec
xchg
ret
lret
ds
jmp
add
fdivr
push
or
cli
leave
stos
adc
scas
inc
pop
add
lcall
js
idivb
and
dec
xor
rolb
add
lret
jns
cmp
cmp
cmp
dec
mov
sbb
mov
and
ret
or
inc
jg
sti
push
fwait
outsl
sub
std
dec
jle
jl
push
sbb
cmp
mov
je
mov
jns
push
mov
pop
push
in
mov
jno
mov
sub
sti
stos
or
insl
cwtl
jns
in
add
lea
inc
mov
fs
mov
sub
stos
adc
inc
js
lock
cmp
dec
ja
xor
aaa
cltd
enter
mov
and
mov
inc
or
enter
lcall
ljmp
bound
inc
fscale
push
mov
dec
cltd
mov
cmp
inc
sahf
inc
xlat
or
call
rcrb
and
dec
push
cld
fbstp
lcall
pop
and
hlt
pop
jp
aas
scas
or
cmp
jnp
inc
enter
mov
and
cmpl
pop
ja
movb
jne
sti
cmp
addr16
mov
fcmove
fwait
mov
cwtl
and
imul
xor
imul
adc
mov
pusha
lods
cmp
push
out
cmp
ret
cmpsb
in
sbb
scas
push
jmp
inc
mov
dec
jne
and
mov
mov
popa
shrl
loopne
pusha
sahf
pop
jb
iret
sbb
xchg
adcb
or
mov
sbb
mov
mov
cs
mov
pop
in
int3
jmp
sub
adc
add
je
jp
mov
xor
sub
jecxz
div
jbe
pop
in
pop
outsb
cs
mov
or
mov
arpl
lret
jecxz
out
sbb
js
sub
cmp
in
push
push
jl
std
in
inc
jl
lea
and
add
test
addr16
sti
sub
call
mov
insl
jae
into
stos
in
cmpsb
inc
fnstenv
rclb
xchg
add
loop
dec
mov
mov
aaa
out
in
jo
enter
sub
xor
jns
sbb
xor
lret
inc
and
push
pop
fwait
mov
cmp
dec
sub
jle
scas
sbb
jns
rclb
jo
leave
stos
xor
lahf
cmove
pop
and
frstor
gs
push
int
xchg
rorb
mov
push
int
jno
xchg
pop
sbb
aaa
push
imul
mov
loop
lret
push
push
int
std
mov
sub
cmp
adc
in
push
jp
xchg
add
or
cmp
or
or
mov
inc
xor
add
shlb
jle
mov
mov
xor
fsubr
dec
jbe
or
cmp
jecxz
cmp
movsb
pop
mov
pop
push
cmp
lcall
xchg
xchg
jmp
mov
fimuls
out
in
xlat
addb
xchg
jnp
add
sbb
xchg
loopne
ljmp
pop
addr16
iret
mov
iret
test
cmpb
or
sbb
dec
mov
mov
pop
insb
mov
cltd
imul
sbb
pop
add
adc
cli
cmp
mov
in
jb
inc
inc
push
jae
arpl
cmpsb
mov
sub
cmp
add
xchg
cmp
loop
adc
fdivrp
mov
push
rclb
cmp
arpl
out
sub
movsl
out
clc
cmpsb
add
cwtl
add
mov
sbb
xor
or
pushf
and
call
push
add
test
popa
int3
bound
es
inc
inc
scas
mov
aas
popf
loop
cli
sub
iret
das
repnz
outsb
dec
sahf
xchg
xorb
outsl
ret
push
pop
add
movsb
pushf
cs
loope
lea
les
push
jecxz
add
dec
outsb
rcl
dec
frstor
or
call
adc
sub
mov
mov
adc
arpl
mov
jle
ja
xchg
rcrb
test
cmp
xchg
mov
xor
jns
xor
movsb
pushl
sub
mov
or
dec
add
int
ja
lcall
mov
xor
or
insb
cmp
mov
add
push
and
std
push
stc
push
cs
cmp
faddl
decl
test
add
test
sahf
loopne
fadds
mov
cmc
xchg
mov
orl
xchg
pop
xchg
mov
mov
pop
sub
push
adc
out
mov
aam
dec
dec
and
scas
push
cld
js
cmp
inc
or
lods
testl
lea
inc
push
in
pop
roll
lahf
sub
bound
push
cmp
movb
out
mov
cmpsb
and
jmp
gs
xor
sub
sub
es
and
repz
or
outsl
pushf
stc
test
shrb
xor
dec
fsubrs
imul
aas
outsl
rol
sub
insb
bound
out
push
dec
sub
fs
aam
push
pop
out
mov
mov
hlt
daa
lock
sti
mov
mov
repnz
sbb
shrl
mov
xor
sub
cmpb
jmp
jb
jae
lret
ja
pop
scas
mov
out
inc
xor
mov
push
pusha
mov
aaa
pop
cmp
lcall
aaa
movsb
pop
outsb
add
sbb
std
dec
or
adc
inc
push
out
in
xchg
pop
sbb
call
insb
cmp
pop
xor
shlb
or
push
jns
cs
jle
sub
xor
fwait
mov
cmpb
jl
ret
and
mov
push
xorb
and
push
sbb
out
test
mov
popa
cmp
mull
pop
int
shlb
adc
sub
cmpsb
std
and
or
icebp
mov
xchg
repz
bound
imul
adc
jmp
into
or
pmulhuw
lock
les
mov
mov
gs
sbb
gs
or
sub
adc
fmulp
pop
fistpll
inc
cmc
mov
dec
insl
mov
mov
pop
jns
popa
in
repz
push
mov
jns
pop
mov
insb
imul
mov
in
add
jno
mov
inc
lret
jae
sbb
inc
cltd
adc
or
sub
cmpsl
mov
mov
mov
inc
pop
mov
stos
orl
dec
movsl
sub
jo
dec
pop
add
mov
mov
cmc
popa
pop
mov
xor
or
sbb
push
int
pushf
outsl
in
push
loopne
fldt
call
inc
mov
loope
test
inc
adc
mov
mov
inc
jb
test
pop
sub
cltd
pop
fs
mov
mov
dec
xor
pop
adc
out
xchg
mov
xor
pop
int
cmp
mov
pop
aam
nop
imul
shl
sbbl
loope
cli
fcmovnb
outsl
ljmp
es
pusha
enter
pop
jbe,pn
and
imul
sahf
dec
pop
lahf
es
push
lcall
add
push
bnd
outsl
or
push
xlat
jo
hlt
sti
push
mov
xchg
gs
das
and
push
push
xchg
push
aam
cmp
pop
mov
mov
cmp
mov
lahf
sub
mov
cmpl
fistps
jo
or
ljmp
jae
mov
or
mov
mov
pop
sbb
cmp
sub
inc
fnstcw
adc
leave
jmp
lock
les
mov
dec
jns
mov
push
mov
sbb
cwtl
push
push
push
int
fstps
push
jge
or
or
inc
dec
mov
pop
pop
fimull
and
mov
pop
addl
or
mov
ss
in
mov
cmp
and
mov
and
mov
loopne
sub
cmpb
std
dec
add
test
movsb
push
lcall
test
movb
adcb
insl
leave
mov
loopne
push
or
mov
adc
add
sub
sub
lahf
add
pop
sahf
rcrl
jl
adc
ja
or
rolb
or
or
jo
dec
add
imul
cmp
nop
cmc
xor
xor
clc
ffree
lock
lods
jno
in
scas
pop
lahf
and
add
test
pop
dec
pop
call
cld
xlat
je
adc
add
cmp
xchg
add
stc
xchg
lea
and
shlb
in
push
mov
movsl
mov
add
imul
icebp
pop
pop
inc
ljmp
fmuls
aas
fisttps
outsl
or
popa
fmulp
cmp
mov
fisttpl
push
aas
popf
test
jnp
cmp
js
xor
push
popa
repnz
jno
inc
loopne
push
in
mov
out
ss
andb
jo
lock
dec
lds
les
in
fnstenv
lea
mov
cmc
pop
dec
push
loop
pusha
daa
adc
mov
push
aad
xchg
and
stos
lret
mov
cmp
xchg
out
push
sbb
fcmovne
popf
stos
fistpll
sbb
into
negb
inc
dec
pop
xchg
xor
inc
fnstcw
jg
das
sahf
repnz
xlat
or
mov
rcrb
aad
out
sahf
xor
dec
mov
scas
flds
rcr
aad
add
in
int3
jecxz
in
jle
or
pop
sub
fdivrl
ljmp
out
aad
lods
bound
enter
and
jmp
cld
push
push
jge
jne
cmp
dec
sub
clc
aaa
notl
sub
inc
ljmp
xchg
fstpt
aam
xchg
mov
std
jno
out
adc
dec
stos
je
scas
inc
out
aas
mov
mov
mov
sub
pop
sbb
lea
pop
nop
int
pop
inc
jg
inc
mov
sti
adc
ds
aas
push
jge
dec
rclb
push
rcll
xor
push
in
cld
jp
or
hlt
iret
roll
jge
jne
into
cmpsb
add
adc
inc
adc
cmpsl
xor
jbe
xchg
cmp
insl
std
repnz
dec
jl
mov
ficoml
inc
push
out
pop
in
imul
adc
pop
mov
data16
insb
insl
pop
inc
test
sub
or
jp
jno
popf
sarb
inc
imulb
adc
aas
cmc
or
lret
pop
lcall
add
int3
cmp
cmc
push
dec
push
out
push
inc
push
add
add
insl
adc
repz
jae
pop
jne
ret
jge
test
xchg
out
lahf
cld
mov
mov
je
mov
inc
out
xchg
stos
inc
mov
xor
jecxz
inc
dec
popa
aaa
push
push
mov
dec
and
xchg
cmp
rcrb
in
mov
cmp
mov
outsl
and
xchg
pop
xor
jbe
pop
dec
pop
gs
or
mov
insb
adc
jp
sub
je
ror
fnstenv
or
imul
xchg
cmp
jbe
sbbl
jb
jno
loop
jae
or
iret
fisubrs
aaa
call
test
push
xchg
push
xchg
push
cmp
pop
mov
outsb
push
mov
cmp
xor
cmpsl
negb
cmp
pop
push
xor
cs
xchg
out
shrb
gs
lods
jg
outsl
sbb
test
sbb
jg
call
adc
ret
out
pop
aam
inc
xchg
cmc
and
mov
ljmp
cli
add
xchg
jne
mov
dec
or
cmc
sub
imull
cmpsl
ds
sbb
ja
xor
push
icebp
sub
cmp
sbb
lock
aas
push
jg
mov
ljmp
mov
inc
mov
hlt
cmp
xor
cmpsl
mov
shlb
mov
stos
cs
adcb
xor
icebp
in
stos
bndstx
icebp
pop
rorl
lock
aad
out
loopne
add
xor
inc
into
adc
mov
cld
push
jb
shlb
jg
mov
xor
das
repnz
or
outsb
xchg
dec
scas
js
das
xchg
cmp
loopne
pop
dec
cmp
ja
lret
adc
cmc
cltd
mov
out
dec
loopne
dec
fdivrl
sahf
mov
inc
andl
insb
add
mov
sbb
sbb
inc
in
loope
jmp
imul
fwait
sar
loop
sahf
idiv
mull
das
add
xchg
cmp
jns
add
xchg
fstpl
into
iret
aad
mov
pop
lock
sub
push
or
push
cmp
jns
icebp
inc
cs
test
adc
or
jo
mov
cmc
inc
mov
sahf
xlat
sub
fs
ret
lret
cmpsl
mov
popa
sub
cmp
les
fidivrs
dec
mov
cmpsb
dec
ret
shll
leave
push
scas
xor
in
xlat
add
test
mov
mov
mov
push
pop
mov
jns
cli
jl
xchg
xor
push
aad
xchg
int
test
pop
cmp
lods
test
inc
repz
push
xchg
sbb
lret
bound
xlat
push
jg
sahf
push
test
mov
mov
mov
and
arpl
xchg
jge
rorb
jno
in
leave
and
jnp
fistps
out
lret
sub
dec
cs
xchg
std
loop
push
sub
in
popw
push
pop
lret
xchg
sub
popa
cmp
sbb
das
pop
pop
sub
xlat
or
dec
dec
cmp
testl
jns
daa
push
mov
sahf
hlt
dec
lcall
inc
pop
mov
fdivl
cmp
mov
cmp
test
cmpsl
fisubrl
cmp
lret
mov
in
les
or
push
lock
sub
mov
fisttpll
cmpsl
cltd
sub
jg
jo
insl
xchg
push
bound
mov
or
lods
fwait
movsb
or
and
mov
cli
mov
pop
inc
and
mov
popf
inc
sbb
lods
in
mov
pop
xchg
mov
xor
scas
out
lods
pop
fsubl
sbb
and
int3
mov
aaa
adc
int
nop
adc
ss
addr16
and
xchg
pop
mov
das
imul
cli
loop
inc
and
fsub
dec
sbb
xchg
or
aas
jmp
pop
fwait
mov
push
or
add
push
inc
pop
repz
adc
cmp
in
inc
push
mov
stos
mov
or
sub
insb
loope
movb
push
mov
outsb
outsl
les
es
mov
push
aas
dec
lea
nop
mov
fucomip
jae
ss
or
sub
icebp
movsb
mov
rcll
jae
stos
out
xchg
lods
lret
cs
push
xchg
mov
pop
push
fwait
jae
cld
xchg
jno
add
into
push
fcomps
sbb
sbb
in
xchg
inc
in
mulb
in
adc
mov
insl
in
add
adc
repnz
cmp
jge
pop
adc
push
in
arpl
sub
ds
out
lcall
ret
notl
pop
out
incl
dec
mov
adc
push
jmp
std
push
pop
cmp
mov
out
sahf
and
stos
mov
mov
sub
orb
or
popf
pop
xor
mov
jnp
cs
dec
adc
das
dec
push
adc
mov
xor
mov
or
push
or
sub
push
lea
stos
xchg
sub
dec
push
sub
loope
sub
fldcw
pop
dec
pop
dec
scas
jnp
mov
jge
jnp
lea
adc
scas
jmp
mov
arpl
loop
push
mul
fistpll
cmp
stos
and
outsl
mov
mov
add
jne
into
int3
ja
ljmp
fidivrl
test
pop
shrl
or
or
cs
scas
xchg
add
jb
jge
dec
jo
in
push
sub
test
pushf
cmpsl
xlat
inc
add
lret
inc
and
out
loopne
jb
sbb
dec
pusha
rcr
push
xlat
jge
out
fsubrp
push
inc
inc
push
push
stc
push
cmp
lock
int
nop
pop
dec
not
cmp
addr16
fstl
add
decb
dec
es
fwait
loopne
fcomps
mov
sub
and
adcb
fldl
pop
out
mov
dec
pop
stos
cmp
rclb
push
dec
es
insb
je
push
adc
mov
push
imul
insl
ret
or
lcall
pop
pop
push
push
test
inc
and
jle
push
repz
scas
adc
dec
lahf
adc
mov
fmull
addr16
mov
or
icebp
imul
push
sub
rcpps
out
movsl
xor
out
aam
ljmp
jp
lahf
inc
jbe
lret
dec
jmp
fs
sahf
sahf
cmp
pop
pushf
jne
or
pop
imul
nop
aad
fimuls
add
stos
pop
fimull
lcall
fadds
pop
cmpsb
lods
inc
cmp
enter
and
pop
mov
sub
test
sub
jg
jns
mov
sbb
hlt
daa
jo
mov
pusha
inc
fistpl
outsb
push
movsb
ret
push
jo
mov
lea
adc
arpl
sahf
inc
dec
popa
mov
jmp
movsb
add
das
sub
pop
push
sub
inc
jmp
mov
mov
testb
xchg
stos
data16
mov
rolb
scas
mov
add
dec
add
adc
pop
out
test
mov
xchg
push
jp
xchg
mov
insb
aad
mov
lods
loopne
sbb
push
test
nop
cwtl
inc
mov
xor
repz
into
push
add
movsl
mov
xor
mov
leave
xchg
pop
jne
ja
push
mov
mov
jg
cltd
jns
stos
mov
inc
cltd
xor
add
call
push
xchg
sbbb
or
inc
shr
mov
jo
dec
mov
xchg
repnz
pop
rorl
push
in
mov
lret
bound
inc
mov
mov
pushf
add
push
insb
es
or
add
sub
inc
dec
lcall
pop
xchg
sbb
cs
and
repnz
mov
ret
daa
stos
pop
pop
push
mov
and
and
pop
adc
aas
push
jmp
add
imull
sarl
rorl
scas
es
mov
nop
movsl
sbb
dec
fmull
mov
into
scas
test
mov
popa
ljmp
jnp
mov
inc
push
pop
dec
jle
lods
push
pushl
mov
in
push
mov
mov
cmp
or
sub
sub
and
btc
jl
mov
add
mov
mov
cmpsb
inc
ds
outsb
imul
call
xchg
mov
mov
and
pusha
js
and
sbb
outsb
add
inc
push
inc
scas
loopne
data16
or
addl
jl
push
xor
pop
lods
mov
int
das
rcl
cmp
out
sbb
insl
mov
lds
inc
stos
mov
inc
pop
xor
mov
push
out
imul
pop
outsb
movsl
pop
mov
out
notb
mov
sub
adc
sti
sub
addl
cmp
xchg
movsb
mov
out
xchg
dec
sbb
cmp
pop
ficompl
ret
mov
dec
lods
mov
mov
sub
and
cld
out
mov
jbe
add
mov
dec
mul
or
pop
out
fidivs
pushf
and
xor
loope
lret
sub
adc
adc
ljmp
sub
js
dec
loop
inc
sub
jne
jp
mov
lods
aaa
arpl
cmpsl
dec
out
fstpl
inc
mov
cmpsl
ret
add
push
inc
lret
out
push
dec
mov
outsl
imul
dec
sub
jmp
testb
mov
sarl
lods
fldenv
lods
insl
adc
aaa
scas
in
inc
adc
outsl
dec
bound
ljmp
mov
sahf
push
push
cmp
ret
aam
js
dec
out
and
cmp
sar
inc
sbb
push
add
into
lods
push
test
shr
cld
xor
and
int
add
call
push
sub
aas
ja
jl
adc
mov
push
stos
jbe
xor
jg
out
adc
push
ds
pushf
iret
stc
mov
dec
add
xchg
lock
enter
and
mov
add
int
push
enter
fsubrl
push
das
adc
or
xor
adc
xchg
loopne
xchg
jl
mov
dec
fisttpll
push
sbb
dec
rorb
or
xchg
aaa
sub
ffree
inc
dec
xchg
cmpsb
mov
mov
jae
add
xor
add
test
ds
xchg
or
rcrl
lds
and
mov
fs
addb
mov
daa
arpl
imul
pop
fistl
add
cmp
stos
cli
ret
ss
ret
adc
xchg
jp
dec
lock
aas
mov
mov
movsb
sahf
ljmp
add
xchg
xor
mov
das
cwtl
fisubl
cmp
test
sub
cltd
and
adc
push
xlat
xchg
adc
test
pop
or
dec
adc
inc
ljmp
cmp
loopne
das
insl
inc
sbb
stc
fldenv
aad
dec
mov
in
mov
imul
dec
icebp
xchg
mov
je
fisttpll
pop
bound
or
pop
imul
mov
pop
leave
mov
and
sbb
sbb
jo
inc
xor
inc
cld
or
mov
in
test
pop
and
mov
jmp
or
out
xchg
ficomps
insl
int3
test
repz
test
sub
mov
xchg
jp
cmp
sub
hlt
jg
lahf
mov
and
call
cmpsl
fistpll
pop
push
sbb
cmp
xchg
cli
cli
fidivrs
mov
xor
xor
test
cltd
fdivr
int
xor
jnp
xchg
push
adc
jge
pminsw
fwait
jae
xchg
ret
aaa
inc
mov
pop
repz
xor
adc
stos
aas
add
xor
ret
outsb
popf
jno
shlb
jmp
jno
in
in
jecxz
sahf
xchg
les
and
inc
add
fs
mov
jg
xor
dec
dec
imul
xlat
getsec
jl
test
jl
leave
outsl
test
cwtl
or
push
mov
sarl
ficoms
and
mov
mov
roll
cs
daa
vpmadcswd
mov
stos
loopne
call
aas
fsubl
fstp
xchg
into
push
push
icebp
inc
add
xchg
bound
push
stos
mov
pop
aad
and
fdivp
jne
andb
pop
loopne
adc
inc
push
stc
aad
xchg
mov
push
test
xchg
jb
xchg
cmpsl
xor
bound
pop
ret
pop
std
and
fnsave
add
mov
xchg
jbe
sbb
or
loope
cmpsl
push
std
and
mov
call
stos
sbb
add
mov
test
nop
imul
pusha
dec
sbb
jns
fstps
mov
xchg
xlat
dec
or
pop
push
add
jno
sub
jae
flds
fs
add
mov
add
mov
xchg
add
or
lahf
sbb
inc
pop
xor
dec
push
lret
jo
repnz
lahf
mov
mov
xchg
mov
xor
js
jecxz
call
cwtl
cmp
dec
movsb
mov
mov
cwtl
jecxz
shlb
cmp
jno
add
inc
dec
sbb
icebp
popa
pushfw
cli
je
xchg
cwtl
loope
push
add
cmp
adc
and
xor
push
adc
insl
mov
push
jl
pusha
lcall
jnp
pop
add
cmp
jecxz
mov
sub
enter
xor
sbb
add
shlb
aad
jae
dec
xchg
or
xchg
repnz
xorl
call
sub
rorl
fstps
xchg
lahf
les
mov
xchg
movsb
iret
sub
dec
in
push
in
insb
movsl
rclb
sbb
stos
sbb
sub
cmp
loopne
movsb
in
in
push
xorl
jns
enter
scas
shlb
or
xor
and
jp
sti
xchg
and
pop
cmc
in
sub
lods
push
mov
lret
pop
mov
arpl
stos
jbe
stos
mov
lea
in
lea
sub
dec
ret
jb,pn
out
ficomps
sbb
aad
push
rcrb
push
minps
jb
fisubrs
hlt
and
stos
push
in
mov
lahf
dec
scas
mov
or
insl
push
or
push
push
dec
pop
jg
add
xchg
push
xor
out
mov
add
sub
mov
pusha
int3
popf
movaps
imul
jmp
mov
jg
dec
mov
shlb
and
cmp
arpl
test
insb
mov
test
pop
inc
mov
data16
push
push
cmc
mov
add
adc
imul
out
push
lahf
mov
jl
jae
gs
inc
pushf
movsl
dec
mov
stos
scas
lods
movsl
mov
sbb
std
pop
call
das
and
push
movsl
cmp
mov
std
add
cmp
aad
outsb
int3
mov
push
lds
xchg
pop
out
add
mov
js
mov
mov
jae
mov
sbb
pop
es
gs
stos
ss
bnd
sub
mov
add
push
sbb
cmp
lds
cs
mov
in
or
mov
daa
scas
stc
pushf
sbb
push
shll
xchg
mov
fnstenv
and
cli
dec
dec
xchg
mov
roll
imul
inc
push
push
aas
jmp
sub
scas
cld
mov
jne
jmp
es
or
xchg
addr16
sbb
clc
mov
and
cmpsb
mov
push
pushf
or
loop
sub
xchg
inc
adc
xor
pop
push
roll
decl
cmpsl
ja
sbb
pop
pop
cwtl
xlat
jl
xor
mulb
jmp
push
leave
ficompl
cs
ljmp
cmpsb
outsl
iret
ficoml
inc
loope
push
pusha
sub
xor
xchg
mov
repz
stc
push
loop
rcl
loop
cld
or
mov
pop
pop
outsl
test
or
mov
imul
jp
das
adc
int3
aam
sub
mov
fiadds
sti
insb
call
iret
das
sbb
mov
jge
adc
sarl
aaa
bound
jno
sysexit
add
sarb
shlb
jge
les
scas
rorl
ss
lcall
sbb
mov
int
cld
lods
sub
lret
add
lret
xor
movsl
aam
into
mov
xchg
fsubs
push
add
mov
mov
insl
lret
mov
subl
lods
mov
xchg
mov
mov
cmp
xchg
pusha
nop
push
add
mov
arpl
movsl
mov
std
fwait
xchg
cmp
bound
pop
rcr
push
jb
add
loopne
jg
insl
mov
add
test
dec
cwtl
mov
stos
add
popl
stos
jecxz
jecxz
lods
sbb
adc
xchg
push
mov
inc
xchg
popa
push
ss
add
sti
sbb
mov
and
loop
scas
xchg
or
mov
sbb
js
mov
mov
xchg
mov
sahf
xchg
outsl
and
cmp
or
pusha
jns
jmp
outsb
repz
dec
push
movsl
mov
cltd
incb
mov
shll
fimuls
xor
mov
jp
push
push
jecxz
dec
fldcw
ret
mov
jbe
test
nop
outsb
sahf
data16
jle
mov
scas
add
stos
dec
xor
sub
mov
loop
sub
push
push
les
jns
and
mov
fucom
xchg
xchg
ret
repnz
cmp
cwtl
jbe
add
pop
dec
mov
insb
rol
outsl
push
sbb
adc
inc
jbe
ja
adc
movsl
push
dec
popf
fstp
shlb
stc
filds
fs
jmp
mov
mov
inc
sub
or
fsubl
fdivp
jbe,pt
adc
cmpsl
ss
mov
pop
stos
dec
push
sahf
sbb
int
xchg
push
adc
fisubs
adc
and
add
cmc
out
sbb
pop
mov
xor
movsl
mov
imul
movsl
xchg
shll
sbb
inc
sbb
pop
ja
jmp
dec
pop
fsubl
shll
add
dec
or
cmc
lahf
pop
xor
sub
push
lcall
mov
xor
insl
sbb
xchg
imull
push
pop
sub
mov
dec
in
jno
bound
popf
or
push
pop
add
ljmp
andl
ss
jge
sub
cmp
cmp
mov
push
dec
mov
xorb
ja
sbb
jp
add
leave
mov
jne
jno
shll
pusha
mov
outsb
xor
rcrb
ds
jo
sub
loope
inc
cmp
pop
sbb
mov
xchg
and
dec
test
inc
jmp
out
xorl
dec
icebp
sub
jb
jnp
mov
testb
out
inc
in
inc
into
mov
movsl
arpl
xchg
xchg
jae
sub
ljmp
fimull
push
lahf
push
add
insb
insb
mov
xchg
call
cmp
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
daa
sub
jp
pop
jp
imul
mov
divl
out
popa
sarl
incl
stos
in
into
inc
and
xchg
mov
inc
popa
dec
mov
enter
outsb
mov
shlb
add
xor
dec
sbb
in
xchg
popa
and
cmp
or
movsb
mov
ss
push
adc
xlat
in
adc
test
je
ret
inc
push
dec
into
push
gs
stos
fidivl
mov
jmp
cmpl
popa
jb
and
dec
mov
dec
aaa
into
gs
or
or
das
in
cwtl
bound
fisubs
in
and
cli
arpl
push
rcrb
push
sbb
jnp
pop
shrb
xor
or
das
sti
cld
mov
and
lret
sub
mov
shll
sbb
add
dec
inc
cmp
mov
rclb
xlat
out
lcall
cmp
jno
dec
test
rorb
inc
cmp
out
shll
jmp
xor
loop
mov
sahf
dec
mov
mov
dec
mov
pop
data16
lahf
imulb
push
out
aad
xchg
das
shll
lahf
enter
dec
outsl
fadds
stos
ret
inc
mov
icebp
mov
jecxz
or
sub
jl
cld
xchg
push
stos
gs
fcmovu
test
dec
lods
push
int
negl
cld
ja
push
sub
es
mov
dec
adc
movsb
xor
xchg
mov
lret
jmp
jl
inc
inc
push
sbb
mov
shl
cltd
out
mov
mov
jb
pop
addb
cltd
xchg
fwait
sub
sub
gs
hlt
dec
cmpsb
addr16
shlb
xor
adc
fnstenv
loop
pop
mov
mov
out
jbe
cld
and
fdivrl
mov
loop
andl
mov
sbb
cmpsb
jmp
cs
movl
jg
push
movsb
jns
enter
or
cli
sbb
dec
int3
pusha
dec
imul
enter
adcl
pushf
call
cmp
inc
in
rcll
popf
mov
push
add
push
addl
mov
sub
jl
lret
repnz
faddl
roll
test
xchg
call
lods
cltd
imul
jae
cmp
into
popf
out
fisubrs
pop
out
or
stc
mov
xchg
mov
xchg
push
stc
shll
out
in
cmp
stos
arpl
int3
pop
popf
aaa
pop
add
mov
pop
adc
sti
insl
push
mov
movsl
or
mov
mov
mov
sbb
xchg
push
pop
popf
dec
sar
lock
daa
jnp
cmpsb
inc
lcall
in
mov
aaa
rcrl
xor
shrd
lret
insb
dec
loopne
imul
lcall
mov
aaa
imul
sub
mov
dec
decb
xchg
xor
insb
push
mov
lcall
xchg
repnz
push
lods
fisttpl
iret
jno
mov
loope
mov
push
movsb
dec
cli
sub
aad
sub
pop
movsb
adc
mov
fists
je
or
push
pop
faddl
ja
shrb
mov
dec
cmpsb
scas
pop
xchg
fsubr
adc
dec
lds
ret
cli
pop
xchg
sti
mov
jp
inc
push
mov
dec
jmp
push
dec
test
push
in
imul
sti
lret
lret
stos
dec
or
fnstenv
dec
fnstcw
bound
xor
mov
adc
mov
insl
fldl
push
in
gs
cli
cli
cs
jo
lret
dec
insb
pop
jle
mov
fucomi
mov
insb
dec
adc
add
mov
in
pop
jge
pop
jp
or
mov
jo
jmp
or
pop
repnz
div
cmc
pop
mov
fldenv
xchg
jg
insb
xchg
fdiv
push
sub
fldt
sbb
testb
sbb
xor
inc
sbb
aam
addl
jae
sub
and
mov
sub
divb
mov
loopne
ljmp
out
mov
mov
test
sub
or
mov
inc
mov
inc
jne
popa
cltd
pop
idivb
push
daa
pop
or
adc
sub
add
cmc
inc
dec
int
add
pushf
or
or
ret
xorl
pop
xor
es
or
out
shrl
add
addr16
push
sub
scas
push
mov
sbb
mov
inc
stos
xchg
sub
push
xlat
mov
aaa
roll
sub
mov
mov
test
inc
scas
or
push
pop
xor
push
jbe
mov
hlt
pop
shlb
add
jo
inc
xor
addb
mov
aad
pop
int
fnstsw
imull
and
test
decb
jnp
sbb
cld
dec
gs
dec
test
aas
push
mov
bound
sub
lea
xchg
shll
arpl
in
or
jbe
das
sbb
fldenv
sbb
xchg
pop
xchg
mov
xor
lcall
inc
jo
bound
and
pop
fwait
ret
dec
stc
and
icebp
or
adc
in
xor
mov
push
cmp
push
add
mov
mov
mov
imul
add
call
leave
lret
mov
arpl
movsl
cmp
inc
jo
shrb
dec
ret
and
clc
mov
and
jle
lods
clc
repnz
jae
loop
test
out
push
jle
ror
sub
or
mov
mov
pop
push
mov
or
adc
dec
xor
fsubrl
mov
xor
sbb
mov
ss
sti
addb
in
jge
push
sbb
sub
cmp
dec
or
lcall
cmp
pushf
xchg
jne
mov
dec
and
out
ja
loop
or
push
insl
or
stos
jl
cmp
mov
push
aam
test
je
cmp
mov
add
or
imul
mov
and
sub
sbb
out
jne
lret
into
pushf
pop
dec
xchg
bound
int3
jno
mov
int
adc
sub
sti
add
cmpb
pop
sub
lock
ret
lcall
repnz
xchg
pop
rcrl
and
imul
jne
fs
inc
in
pop
jge
and
outsl
jmp
int
cmc
push
jno
je
inc
mov
and
dec
hlt
sbb
icebp
cwtl
jae
or
pop
mov
stc
push
lret
dec
mov
sbb
stos
pop
shlb
dec
push
leave
notl
in
push
push
stc
add
xchg
nop
notl
arpl
mov
pop
les
fisttps
add
shr
fcomp
loop
inc
fildll
fcmove
mov
jno
dec
jg
dec
nopl
mov
daa
sbbl
out
pop
insb
mov
jne
dec
inc
sbb
pop
adc
cmp
hlt
xchg
jnp
sti
mov
mov
pop
inc
rcrl
cli
mov
fcmovnu
mov
push
sti
clc
fmulp
adc
movsb
mov
popa
push
jle,pn
xchg
xchg
pusha
pop
jae
or
data16
and
mov
jb
mov
xchg
lea
je
mov
loopne
call
push
jecxz
pop
shl
push
xchg
dec
sbb
in
sbb
js
out
mov
pop
inc
outsb
add
and
jns
shl
shl
fdivrp
or
jae
into
ret
sub
sbb
rorb
sub
sub
push
push
mov
pop
popf
test
sub
outsb
add
divl
dec
xor
mov
lods
pop
cmp
mov
data16
adc
fwait
lret
pop
mul
aad
cmp
or
js
loope
sti
mov
cld
xchg
aam
push
mov
loop
add
popa
mov
jno
arpl
iret
mov
sbb
add
or
fidivs
cwtl
adc
dec
lcall
lods
notb
xor
and
sbb
pop
add
test
cmpl
mov
lds
loop,pt
stc
pop
andb
arpl
inc
std
mov
mov
pop
jmp
testl
out
lock
mov
cmp
xor
daa
int
cmp
pop
dec
in
mov
sub
aad
cwtl
movsl
fdivs
mov
or
push
cmc
and
sub
in
in
mov
nop
jns
add
mov
popf
imul
stos
add
popf
adc
movsb
scas
jge
push
ret
stos
jae
pop
ror
ja
ret
insb
pop
mov
pusha
xor
rcrl
je
jbe
lods
xor
cli
and
lret
sbb
inc
add
shll
jecxz
in
mov
adc
sbb
mov
stos
leave
fisubrs
xchg
pop
jo
xchg
add
rorb
sar
push
xor
fmull
mov
call
mov
jl
push
dec
cmp
cmc
mov
add
gs
ljmp
add
xchg
jb
add
cmpsl
or
fadds
outsb
addr16
shll
mov
loope
adc
fimull
inc
bound
sbb
dec
in
daa
mov
into
call
cmp
enter
add
push
xchg
add
push
fwait
popa
sbb
outsb
adc
inc
shll
movsl
push
popf
pop
and
mov
add
mov
adc
mov
xchg
xchg
out
pop
mov
push
cmp
mov
pop
imul
or
push
xor
and
aas
imul
xchg
jb
mov
sbb
insb
mov
pop
repnz
xor
jns
sub
sub
sar
mov
repnz
or
dec
pop
out
fsts
ss
rcll
outsl
jb
nop
insb
or
inc
mov
sbb
adc
dec
inc
xchg
or
outsb
aaa
std
sub
sub
xor
mov
bound
pop
test
and
pop
push
and
sarl
push
push
xlat
dec
xchg
icebp
insw
dec
rorb
rorb
sub
cmp
jne
js
sarb
rcrb
iret
in
rclb
das
movb
push
out
rclb
and
jecxz
aad
xchg
push
stos
ja
push
nop
ret
clc
mov
or
into
cmp
push
push
rolb
leave
jnp
es
mov
dec
mov
push
xchg
test
cwtl
add
insb
and
jmp
push
mov
push
xor
lock
jecxz
leave
gs
inc
call
mov
adcb
cmp
test
push
outsb
inc
repnz
seto
xchg
xchg
ds
jg
lahf
subl
lea
dec
dec
jp
and
jo
xor
das
and
jae
pop
testb
ja
xchg
jp
and
lods
fsqrt
sub
lock
pop
and
xchg
bound
jp
fiadds
popa
fcoms
in
in
outsb
push
inc
loope
mov
fidivl
sbb
orb
cld
mov
sti
ljmp
or
inc
push
fsts
sub
into
xchg
mov
scas
push
nop
dec
mov
jae
sbb
into
push
push
sub
pusha
aad
mov
sbb
out
out
loope
push
lods
mov
or
mov
idivb
xchg
sub
adc
jbe
xchg
data16
adc
and
xor
mov
pusha
cltd
not
xchg
pusha
shrl
aam
mov
mov
pop
mov
mov
hlt
and
and
div
push
dec
jle
or
inc
lods
dec
repnz
cmp
adc
mov
aaa
stos
sbb
cmp
sub
lods
mov
call
imul
mov
pop
and
dec
stos
data16
push
outsl
dec
push
in
xor
mov
roll
imul
gs
pop
int
les
pop
repnz
jp
repz
or
inc
out
push
or
and
mov
hlt
lea
jae
inc
xorb
add
mov
inc
sbb
aam
jno
sar
fidivl
lcall
mov
pop
sub
add
daa
adc
dec
dec
jo
pushf
cld
cmp
loop
sti
mov
dec
ljmp
stos
hlt
enter
xchg
mov
pop
mov
and
testb
aam
out
es
mov
ja
enter
xchg
imulb
xchg
movsl
movsb
xchg
mov
rorl
push
out
js
sub
lahf
test
fisubrs
jae
mov
lock
mov
pop
out
mov
rcr
sub
jne
popf
lahf
xor
dec
push
adc
sbb
imul
hlt
pushf
push
sti
loop
xchg
fcompl
adc
jl
sbb
inc
mov
test
adc
cmp
xor
into
adc
clc
xlat
inc
sub
aad
mov
adc
stos
xor
cli
push
mov
pop
jl
push
aad
and
sub
clc
sbb
xlat
lods
ficomps
loope
xor
pop
arpl
pop
fisubrs
push
rcll
scas
add
mov
int3
test
test
pushf
test
push
inc
ss
pop
push
jp
sub
adc
xchg
push
jp
fcmovne
inc
test
jp
in
push
dec
lock
lret
mov
pop
stc
adc
pop
stc
sbb
fidivrl
divl
mov
gs
add
lock
sti
xor
inc
dec
test
push
jecxz
dec
lcall
in
in
aaa
mov
lcall
adc
push
mov
sahf
stc
dec
add
dec
orb
ljmp
xlat
cmpsl
mov
lock
push
xchg
ss
cld
cld
rorl
jb
mov
cli
push
jnp
sbb
xor
cmp
imul
jnp
lret
cmc
mulb
cmp
xchg
lods
icebp
xor
inc
out
out
mov
jne
dec
imul
inc
jo
or
sub
mov
lret
daa
dec
in
inc
mov
jae
cmc
gs
sub
mov
ja
mov
lods
xchg
loopne,pt
clc
xchg
shl
push
ds
jne
lahf
mov
mov
mov
aad
shll
imul
lock
inc
outsl
cmc
mov
rep
mov
shlb
je
sti
shrb
mov
imull
push
fiadds
inc
lock
mov
mov
cmp
mov
pop
in
test
inc
arpl
and
xchg
add
mov
pop
fimuls
iret
xchg
pop
mov
xor
outsl
sub
sub
jbe
stos
and
ss
and
movsl
jo
fstl
pop
cmc
rcrb
inc
adc
pusha
aad
sub
stc
testb
mov
mull
mov
aam
ja
lret
xor
es
lea
push
cmp
dec
lock
lock
mov
mov
mov
sbb
xchg
addr16
push
aad
add
mov
fsubl
lods
push
je
add
mov
mov
stos
int3
dec
inc
movsl
sahf
les
add
gs
fimuls
sbb
stc
fnstsw
es
jne
mov
repnz
cmp
rorb
cmp
xor
pop
lret
clc
xor
cli
dec
jne
mov
fstl
cmp
xor
push
outsl
push
cmp
or
lcall
fisttpll
jnp
ljmp
adcl
mov
and
xchg
es
push
mov
mov
push
pop
xchg
pop
mov
aas
outsl
lea
add
out
loop
or
lds
push
push
lock
test
clc
adc
lcall
mov
cmp
xchg
cmp
scas
sub
xor
push
in
or
jecxz
imul
idivl
lods
xchg
test
dec
faddp
push
fstpl
push
sbb
push
cmc
stos
int3
sub
aaa
je
or
dec
iret
hlt
push
xor
out
or
lret
cmp
push
adc
nop
dec
lret
arpl
insl
mov
mov
fstpl
mov
ss
or
jo
xchg
mov
push
xchg
or
mov
rorb
mov
test
pushf
ret
mov
addb
inc
cmpsb
imul
shll
cmp
sub
mov
out
cmc
pop
rolb
out
cmp
sbb
jae
jge
sbb
or
cmp
pop
adc
push
jmp
repz
xchg
push
inc
movsl
ljmp
or
cli
popa
add
add
lcall
movswl
mov
sub
scas
mov
inc
out
jne
sub
mov
dec
aas
cwtl
lretw
adc
ret
movsb
mov
or
and
push
sar
fwait
cmc
fwait
dec
inc
out
fs
add
das
out
jns
mov
lahf
cmp
lock
lock
mov
dec
roll
jge
clc
or
sbb
jns
rcr
js
dec
mov
jl
or
cmp
std
pusha
mov
jbe
jne
loope
aam
ficompl
mov
sub
add
insb
push
xchg
and
cmpl
sub
rcll
adc
stos
pop
icebp
cmc
add
lahf
rorl
mov
xchg
sbb
lret
jmp
push
push
cmp
push
mov
mov
scas
and
cltd
xchg
aaa
adc
add
or
jp
mov
and
jg
pop
pop
xchg
pop
cmp
addr16
ffreep
pop
cld
push
paddw
adc
pop
add
in
pusha
pop
cmp
fcoms
mov
or
lock
divb
mov
pop
jmp
test
mov
std
lret
sub
inc
sar
jecxz
jns
mov
inc
jle
push
js
pop
jbe
rorb
jnp
mov
or
or
sub
dec
stc
mov
loop
test
and
std
outsb
push
in
jbe
jne
push
xchg
inc
ret
push
jmp
jmp
fdivrs
out
jno
test
iret
mov
jne
imul
and
test
xor
cmpsl
mov
icebp
lret
push
inc
fs
or
mov
std
mov
adcl
fmulp
aaa
or
cmpb
pop
test
popl
jns
pop
sub
lods
das
pop
xchg
and
or
xor
mov
and
cmc
jge
mov
or
inc
and
mov
jecxz
movsb
es
jno
mov
rcrl
jb
mov
xchg
aas
ljmp
sbb
cmp
cmp
push
xorl
das
int
outsl
in
push
repnz
jb
aad
cmp
cld
or
mov
sbb
xor
lret
jle
cli
add
jmp
pop
lahf
pusha
xchg
ljmp
push
fildll
lods
sbb
mov
lea
fidivrl
jp
xchg
or
dec
sub
mov
xchg
jmp
pop
int
add
xor
fwait
xchg
test
jmp
mov
fists
add
pushl
pushf
rorb
cmp
cmp
fadds
mov
push
cmc
mov
mov
fistl
fildll
loope
lds
out
jmp
repz
cmp
ret
loope
xorb
call
xor
xchg
jne
inc
and
jb
pop
sbb
dec
xor
shrb
jno
sti
mov
xlat
mov
and
shl
inc
push
test
mov
jmp
fnstsw
fcomps
adc
xchg
xor
popa
ja
in
mov
int
mov
sti
dec
lods
ljmp
jge,pt
sub
add
sub
popf
jne
lret
pop
sbbl
out
imul
mov
mov
out
xor
call
fwait
cltd
mov
jmp
jae
mov
push
inc
in
je
out
outsl
and
pusha
dec
mov
cmp
outsl
or
ss
shrb
push
fnstsw
test
sbb
mov
inc
mov
faddl
les
or
stos
pop
lea
and
movsl
jae
xor
cwtl
lods
aam
scas
insb
push
xchg
xor
cmp
sbb
orl
jmp
shlb
repnz
cld
shrb
mov
jle
adc
and
lcall
jmp
cmp
pop
rol
or
sbb
adc
repz
adc
sub
sbb
dec
jae
stos
clc
push
add
imul
leave
xchg
xor
mov
cmc
adc
ret
std
pop
jae
push
stos
add
dec
mov
mov
lahf
in
xchg
sbb
imul
adc
in
mov
push
fildl
div
pop
fists
mov
testl
pop
leave
cs
cmp
test
cmp
mov
test
repz
dec
adc
call
jae
outsl
and
fnsave
push
dec
sar
jbe
mov
data16
imul
add
xor
sbb
add
lcall
insl
icebp
dec
jl
dec
mov
test
xchg
xchg
sub
mov
push
negb
stc
stos
fdivrs
dec
cwtl
adc
sbb
adc
lret
stos
subb
out
mov
ss
emms
mov
jbe
push
je
xor
repnz
cwtl
push
mov
ljmp
adc
icebp
or
pop
dec
sti
push
mov
sbbl
xor
add
jo
mov
add
xorb
arpl
stos
aaa
rcrb
int3
stos
pop
test
ret
mov
and
pop
iret
sbb
rcrb
stos
fwait
dec
aad
imul
data16
lock
and
movsb
adc
aad
test
aas
stos
mov
or
mov
inc
into
mov
jp
cli
leave
leave
xchg
mov
push
shl
pop
dec
andb
insl
push
mov
push
cs
test
mov
inc
lsl
scas
and
adc
ss
repnz
mov
adc
mov
rorb
cwtl
popa
sub
fcom
fcomps
push
data16
xchg
mov
pop
aas
cmp
push
mov
jne
jle
fisubrl
lods
mov
push
popa
mov
ss
push
or
push
sub
mov
jnp
and
insb
add
leave
jbe
fsts
hlt
sbb
cmp
mov
cmp
mov
inc
cmp
and
jne
movsl
jns
lods
clc
push
push
jne,pt
jbe
arpl
jge
lret
cld
sbb
int
push
or
xchg
mov
xor
dec
mov
pop
lods
jo
cmp
aam
or
xchg
mov
jmp
adc
dec
add
outsb
xchg
xchg
aam
test
add
ja
pop
mov
xchg
fcmovu
dec
add
cmp
in
lea
ret
push
xor
pop
scas
loop
scas
es
es
fwait
sub
sub
pop
or
mov
pop
or
dec
cmp
aam
pop
sahf
sbb
lret
or
or
sahf
lods
adc
mov
out
mov
mov
sbb
rolb
imul
les
sub
enter
pop
aas
rclb
scas
movsl
jl
dec
out
jo
insb
dec
jns
es
ret
sar
cli
mov
mov
repnz
aad
je
pop
and
sub
or
movsl
repz
mov
das
in
pop
inc
xlat
inc
aad
mov
and
xchg
inc
fiaddl
mov
xor
push
cwtl
mov
inc
fucom
popa
out
push
pop
jno
loope
or
movsl
pop
and
loop
dec
cld
stos
in
jg
mov
mov
or
outsb
mov
cmpsl
push
lea
dec
std
cmp
or
lret
repz
cmp
adc
pop
sub
and
int
sub
mov
fs
int
mov
dec
xchg
sbb
in
push
dec
xchg
rcl
in
xchg
lock
mov
jle
dec
sahf
push
mov
jb
addl
dec
pop
rep
fisttpll
jne
leave
cwtl
in
xchg
mov
mov
cmp
ss
and
imul
adc
push
add
fisttpl
cmp
imul
cli
out
xchg
mov
lods
push
or
out
and
jge
scas
leave
push
icebp
neg
addr16
sbb
jne
dec
sbb
arpl
movsl
int
push
or
int
fistpll
enterw
mov
cwtl
jmp
xchg
fmull
daa
not
stos
loope
fcompl
das
or
sub
gs
stos
mov
jecxz
in
aaa
scas
and
jl
sbb
jp
lret
xorl
call
gs
or
ds
mov
pop
mov
and
xchg
out
sbb
stos
mov
adc
pop
js
sbb
xchg
xor
xor
test
sbbl
arpl
pop
mov
fstpl
cltd
jae
je
jne
sahf
sbb
mov
mov
scas
cli
loop
dec
mov
mov
das
jo
mov
jne
push
shl
add
fistps
cmp
cmp
mov
movsl
and
call
imul
dec
in
jo
push
jl
loope
out
fwait
mov
adc
push
xor
mov
jmp
mov
add
shlb
addr16
mov
adc
and
outsb
pop
daa
mov
jge
pop
dec
fisttps
or
test
aas
and
pop
ljmp
jp
xor
jnp
ss
mov
mov
mov
push
into
outsb
arpl
popa
cmp
test
fcmovbe
xchg
and
add
xor
xor
js
jle
ror
or
and
mov
loopne
inc
loope
leave
cli
add
roll
dec
dec
and
mov
outsl
insl
jg
dec
xor
lds
sbb
outsl
mov
push
mov
out
or
mov
inc
das
add
adc
inc
mov
pop
fists
gs
stos
ret
mov
mov
lahf
in
mov
cmp
add
aaa
push
test
jno
dec
mov
and
aas
mov
mov
xorb
inc
jnp
iret
adc
xchg
xor
sbb
pop
dec
sub
dec
inc
sub
insb
mov
sti
push
or
and
js
xchg
mov
add
call
pop
std
or
xchg
pushf
nop
jp
js
les
in
loopne
repz
push
sbb
inc
test
pop
fisubs
jb
push
sub
push
inc
sub
mov
cmp
xchg
fidivrs
ret
jns
and
sbb
imul
cmc
xor
push
andl
pop
mov
orl
push
insl
insb
test
sub
adc
adc
cmp
inc
sub
stos
add
inc
mov
shrl
dec
jl
push
out
push
adc
dec
stc
cltd
arpl
mov
mov
fbld
xor
das
xchg
ljmp
scas
out
pop
rclb
mov
push
push
inc
sub
loope
inc
sbb
aam
adcl
mov
call
push
mov
nop
mov
pop
movsb
jecxz
xstore-rng
cmpsl
test
out
jl
inc
pusha
out
notl
aam
push
and
jnp
aad
fsubs
addb
out
dec
out
arpl
in
jp
xor
mov
ja
cmpl
push
lds
pushf
xor
push
inc
push
fnsetpm(287
fistpl
cmp
jne
dec
push
loopne
out
mov
xchg
mov
fs
dec
jle
mov
and
jle
loopne
jae
aam
cmp
out
loop
test
xchg
jne
push
lahf
gs
mov
jbe
dec
loope
or
out
leave
inc
das
ljmp
scas
repz
and
ljmp
and
add
test
xlat
imul
dec
rcll
and
lea
mov
lahf
lock
xchg
jnp
clc
aas
jge
jg
sbb
or
push
mov
dec
jmp
mov
cmpsl
pop
xor
enter
jno
mov
dec
sbb
adc
idivl
pop
jge,pt
adc
add
mov
dec
out
jle
int
enter
add
in
js
inc
dec
add
daa
jmp
testb
fimull
ret
loopne
push
cmp
lcall
cltd
pusha
fisttpll
mov
int
mov
popf
xor
lods
lahf
mov
adc
fcmovne
sub
or
and
xlat
fdivs
add
dec
lock
out
sub
xchg
push
outsb
pushf
repz
pop
stos
stc
mov
mov
push
lret
pop
outsb
icebp
lods
mov
sarl
lock
mov
cld
jge
fimull
and
xchg
jne
bound
dec
xor
mov
fstps
popa
adc
sbb
rcrb
insb
mov
cli
cmp
xchg
cmp
or
jae
push
xchg
ljmp
cmp
xchg
hlt
cli
pop
push
push
dec
xor
into
mov
ja
jge
sub
or
shr
aas
mov
inc
or
sbb
cs
mov
arpl
mov
hlt
lea
fnstenv
shl
jmp
push
inc
xchg
pop
incb
das
xchg
xchg
subl
dec
dec
lahf
mov
cmp
xchg
icebp
mov
cmp
mov
or
ret
nop
leave
mov
dec
dec
andl
add
mov
adc
fsubr
xor
jnp
xchg
dec
fwait
je
addr16
jecxz
or
in
in
shll
decl
pop
jo
addb
pop
push
sti
jbe
cwtl
test
sub
dec
ret
xchg
out
pop
enter
xchg
jno
sbb
sbb
pop
in
shrd
mov
sbb
test
sub
mov
rorb
std
push
sub
aad
icebp
mov
shlb
pop
jns
jo
pop
push
ret
ja
and
ja
hlt
xor
cltd
imul
mov
pushf
push
stos
add
or
fs
pop
xor
stc
sub
fisttpll
xchg
lea
and
add
sti
leave
pop
pushf
js
mov
ljmp
add
and
aad
stc
scas
lret
jne
popa
xchg
dec
mov
movsl
sub
inc
inc
pop
ja
imul
adc
dec
or
dec
mov
lock
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
popa
psubusw
pop
jp
mov
mov
xor
cmpsl
mov
into
jle
into
push
cmp
inc
or
cmp
cmp
mov
stos
mov
mov
sub
jno
xchg
jmp
sbb
add
push
int3
push
loopne
lods
push
mov
ss
push
jne
and
gs
cmp
pusha
dec
aad
jl
dec
add
push
push
jb
cs
lds
or
sbb
int
sbbl
fcoml
and
jbe
out
push
aas
mov
pop
in
mov
sbb
jns
std
pop
notl
out
jmp
outsl
test
fbstp
fwait
notb
cmp
xchg
daa
sub
iret
mov
jbe
xchg
dec
sbb
fisttpll
movsb
popa
adc
aam
cmp
xor
jns
xchg
rcrl
pop
pop
into
js
xchg
sub
xor
pand
pop
or
sub
fsub
lods
insb
jae
aad
jl
lret
mov
sub
adc
push
imul
adc
dec
mov
push
negl
xchg
lods
push
xchg
xor
sub
or
mov
jnp
sti
ss
xchg
push
cmp
xchg
inc
loopne
jne
shll
and
inc
mov
bound
scas
and
sub
xchg
scas
nop
pusha
js
jb
in
mov
pop
enter
pop
scas
or
das
xchg
sub
push
in
jmp
outsl
jns
jge
push
add
mov
add
push
and
sub
adc
mov
cmc
jns
dec
ret
adc
cld
xorb
or
mov
rclb
push
jnp
sar
mov
xchg
sbb
add
mov
xchg
xchg
xchg
pop
loope
lods
mov
dec
je
sbb
sbb
roll
inc
mov
fdivrl
pop
pushl
and
out
test
lods
idivb
mov
rcr
aad
icebp
or
das
aas
divl
cmp
shrl
rol
test
imul
sub
jl
out
push
outsb
cs
xchg
loopne
test
mov
add
cltd
insb
push
add
ret
mov
adc
test
xchg
movsl
jmp
dec
jae
xor
jg
and
lock
jecxz
or
rolb
std
fadds
jg
inc
faddl
push
jo
mov
and
or
adc
jns
pushf
in
hlt
mov
sbb
push
sarb
movb
push
xor
jecxz
jp
and
sbb
in
fimull
pushf
test
lods
fstps
aam
xchg
jg
pop
fsubp
fidivl
cmp
inc
cmp
pushl
int3
es
sbb
mov
pop
and
xor
mov
xlat
gs
ret
xor
or
xor
clc
aaa
clc
movsl
pop
lods
movsl
dec
push
mov
xchg
js
lea
add
mov
scas
xchg
add
jne
sub
sarl
mov
dec
push
fiadds
add
outsb
lahf
cmp
adc
mov
testb
repz
into
xchg
popa
mov
add
nop
xor
adcb
inc
ret
or
jecxz
jns
out
cwtl
aad
aaa
mov
fucom
in
out
xor
push
hlt
mov
mov
and
jns
iret
jmp
fwait
push
jne
xor
and
sub
dec
jecxz
fucomi
xchg
leave
das
shll
pop
sub
add
mov
xchg
pop
popl
mov
adc
cld
mov
pop
adcl
in
loop
or
rorb
mov
ret
dec
repnz
adc
and
lret
sarb
cmp
dec
cltd
sbb
je
xor
xor
in
sbb
or
adc
xchg
mov
xor
cmp
push
mov
out
pushl
neg
xchg
fimull
sub
stc
cmp
subl
lret
ds
xchg
adc
adcb
loopne
lea
mov
bnd
rcll
pop
and
inc
jp
pop
jno
ljmp
fldenv
xor
inc
inc
or
fldenv
test
imull
out
pop
jg
lods
mov
iret
xchg
loope
in
dec
cmp
lods
push
push
lock
sahf
test
cmpsl
stos
jne
lahf
inc
adcl
sub
xlat
ljmp
cmp
loope
jg
or
or
sbb
jle
lods
loopne
aaa
mov
repnz
jl
jmp
dec
inc
aaa
call
ja
js
pop
push
mov
out
jns
frstor
divl
sbb
cmp
adc
push
sbb
jle
push
mov
pop
xor
jmp
loopne
dec
dec
mov
idiv
adc
dec
leave
jae
sub
xor
jbe
lds
mov
push
cmp
cmp
movsl
inc
jbe
lea
xchg
mov
bound
cmp
jge
out
inc
pusha
add
rorl
arpl
pushf
in
xor
mov
scas
enter
outsb
pop
outsb
stos
dec
inc
imul
add
loop
mov
pop
lock
test
mov
lret
inc
in
lods
ja
repz
or
loope
mov
xor
cltd
inc
movsl
aam
pusha
or
pop
pop
and
or
xchg
inc
xchg
out
fdivrs
mov
adc
in
jo
daa
stos
js
bound
add
in
repz
dec
add
scas
enter
dec
add
aas
mov
stos
cmp
pushf
mov
pop
sub
add
aad
icebp
neg
sub
stos
sbb
ds
in
mov
inc
sbb
int3
jecxz
and
jbe
sbb
sub
push
mov
or
insb
popf
or
mov
cmpsb
inc
jl
sbb
adc
add
repnz
pop
clc
mov
xor
jo
insb
sub
xor
ss
lea
add
jb
cmpsl
ror
cld
and
xchg
mov
push
inc
jge
mov
mov
and
mov
mov
inc
cmc
lds
mov
ljmp
sub
xchg
mov
mov
int
lret
cli
sub
cmp
lock
add
popf
xor
daa
addr16
test
pop
pop
repnz
int3
jle
in
lret
js
movsb
icebp
test
push
movsb
iret
lods
clc
mov
add
dec
jne
mov
loopne
push
fsubr
cmpsb
xchg
push
push
outsb
mov
imul
dec
pop
jb
mov
movsb
mov
sbb
mov
ljmp
out
lods
mov
mov
push
cli
pop
push
mov
adc
cmp
lods
and
pushf
mov
loopne
stos
adc
pop
mov
mov
ljmp
stos
xor
cmpsl
pop
pop
adcl
cmp
ror
ljmp
cld
dec
cwtl
cmpsl
movb
jmp
cmp
test
pop
in
std
rcll
xor
sub
stc
lods
add
sub
push
push
mov
jl
sbb
int3
lods
jl
cmp
add
inc
sub
js
xchg
out
adc
and
cmc
insl
movsb
xchg
nop
sub
stc
pop
movsb
scas
mov
push
push
js
imul
lea
add
push
xchg
jge
rorb
adc
stos
mov
dec
leave
out
int
nop
add
popl
mov
add
aad
arpl
cltd
call
idivb
and
aas
repnz
dec
imul
adc
dec
out
lods
pop
es
out
enter
orb
dec
sbb
fs
fwait
inc
add
mov
movsl
jp
sub
loopne
mov
sbb
out
ljmp
xor
gs
sbbb
lret
out
jg
popa
mov
sahf
imul
out
xorl
mov
mov
sti
dec
sub
clc
subb
dec
aaa
mov
insl
mov
outsb
xor
pop
add
shll
cmp
and
gs
out
and
xor
push
enter
loope
mov
sbb
jns
cmp
push
cld
sarl
or
pop
and
inc
sub
jecxz
xchg
js
jp
inc
jmp
int3
scas
dec
mov
cmpsb
adc
jle
fdivrs
scas
xlat
add
pusha
adc
sub
outsb
das
mov
pushf
xor
or
or
out
lret
test
cmpsb
shll
cmpsl
xchg
pop
sahf
leave
jp
inc
xchg
into
adc
filds
les
xchg
scas
pop
jbe
fldenv
mov
xor
dec
enter
test
out
aam
sub
xchg
inc
dec
mov
mov
cmp
popa
mov
loope
cmp
push
roll
cs
xor
ret
jae
pop
xchg
fisubrs
cmpsl
sahf
sbb
nop
xchg
adc
adc
pop
iret
adcl
or
push
push
test
adc
stos
push
test
daa
mov
mov
cmp
push
push
je
test
in
sub
or
push
xchg
ss
notb
push
xchg
out
and
pop
dec
loope
mov
insb
outsl
add
dec
mov
faddl
dec
ret
lea
pop
into
in
mov
sarb
dec
movsl
fs
clc
loopne
jmp
into
pop
xor
hlt
mov
enter
mov
inc
es
xchg
push
add
mov
subb
leave
inc
push
sbb
stc
sbb
es
cmpsl
xor
lods
lds
sub
adcl
cld
cmp
daa
in
enter
subl
jbe
shrl
cmp
enter
mov
movsl
inc
fwait
pop
push
orb
inc
aam
inc
xchg
xor
addl
lods
lret
and
outsb
dec
xchg
sub
aaa
ficoms
shr
cmpsb
out
insl
and
xor
push
and
sbb
aam
test
popa
push
cmpsb
imul
test
dec
pop
pushf
fsubl
mov
in
pushf
cld
xor
movsb
add
lahf
jge
pushf
jb
cmp
xor
pop
cmp
xor
and
insl
loopne
imul
arpl
outsb
lods
sahf
insb
and
sbb
xor
iret
mov
push
dec
insl
je
std
icebp
lcall
jle
ret
add
cltd
jecxz
inc
cli
mov
movsb
dec
xchg
sbb
jp
jecxz
out
or
dec
mov
adc
xor
test
lcall
inc
cmp
shlb
ljmp
xorb
sbb
data16
xlat
or
ret
pop
dec
enter
cmpsb
and
pop
vpmulhw
adc
jnp
in
inc
mov
mov
loop
inc
add
pop
outsl
xor
xchg
daa
add
cs
in
sbb
movsb
icebp
jecxz
pop
sub
fsts
mov
aam
cmpsb
das
cld
push
mov
out
push
lret
shrb
fcmove
negb
or
inc
pop
add
daa
xchg
pop
fistpl
adc
inc
test
cld
jae
ret
jecxz
cwtl
mov
adc
bnd
push
inc
pop
push
inc
sub
mov
lahf
stos
dec
stc
push
sbb
add
mov
lahf
std
mov
jl
aad
les
imul
ret
jb
std
or
fucomp
iret
push
xor
jecxz
mulb
dec
jmp
in
test
mov
fsubs
sbb
inc
enter
fldenv
andl
lods
lods
jbe,pn
lcall
imul
data16
xlat
addr16
push
xor
xor
mov
mov
nop
xchg
cwtl
rcrl
mov
add
push
jecxz
xchg
nop
dec
cmp
dec
pop
cmp
mov
je
and
jge
sarb
fs
pop
gs
cmp
ret
inc
inc
outsl
lods
iret
push
and
lds
push
xchg
shll
loop
cs
sub
mov
dec
bound
push
std
shrl
push
mov
or
pop
cltd
in
ss
sahf
jb
mov
icebp
add
mov
sti
loop
int3
pop
mov
sarb
and
arpl
icebp
xor
stos
fwait
add
inc
addl
jnp
cmc
iret
aam
dec
out
mov
mov
pop
push
repz
pop
pop
int3
add
add
repz
jmp
faddl
das
movsb
scas
xchg
mov
jno
das
mov
mov
into
add
pop
mulb
push
ret
sbb
mov
ret
or
cmpsb
sahf
adc
pop
add
rcpps
rcr
pop
ljmp
or
cmp
xchg
xchg
movsb
fcoml
push
push
test
cmpsl
mov
jae
jp
loope
pop
arpl
push
or
xchg
mov
shll
xchg
mov
xor
mov
cmp
pop
jno
std
ljmp
jecxz
adc
call
sub
icebp
cmp
fcomp
or
enter
xor
jne
cmpsl
test
xchg
in
mov
or
nop
je
js
sbb
stc
dec
jmp
pop
mov
repnz
sbb
xor
push
cmp
xchg
adc
sbb
push
or
int3
push
sub
loopne
or
out
addr16
jne
add
pop
sub
and
add
xchg
mov
jns
lahf
xchg
sub
mov
cld
push
cmp
add
test
insl
push
jg
popf
ds
lret
push
aam
sahf
mov
mov
xchg
jl
mov
push
clc
lods
cltd
or
scas
mov
mov
out
out
sbb
popf
push
inc
bound
rorb
and
add
fwait
jmp
pop
mov
sub
jns
dec
test
cmp
pusha
into
xor
test
jmp
sub
arpl
fnstsw
xor
mov
sbb
movsl
xchg
sbb
inc
inc
sahf
pop
xor
ljmp
in
dec
outsl
adc
lret
mov
sbb
int3
sub
cmc
out
aaa
stc
jnp
scas
mov
pushf
cltd
pushf
aad
arpl
fisubl
jg
arpl
iret
mov
mov
hlt
in
ss
dec
mov
adc
fwait
addr16
cli
imul
xchg
stos
xor
mov
inc
and
out
cld
pop
xchg
jg
int
mov
leave
lock
addl
xchg
xor
adc
jbe
and
shlb
mov
xor
in
mov
cmp
repnz
sbb
incb
pusha
sbb
int
xchg
pop
pop
pop
xor
mov
lahf
or
iret
imul
hlt
add
test
mov
es
nop
lahf
inc
xchg
notl
jp
sub
shll
mov
testb
xchg
adc
xchg
je
cld
je
test
sub
cmp
sbb
mov
push
addb
in
lds
idiv
add
pop
xor
pop
mov
push
add
inc
mov
adc
popf
adc
add
loope
lea
mov
jns
in
adc
mov
push
lret
inc
xchg
cmp
jge
adc
fists
rclb
loop
ljmp
mov
sub
sub
leave
or
fisubs
hlt
lret
mov
xlat
push
js
clc
sub
jg
iret
xchg
and
lock
aas
sub
mov
jmp
pop
fidivl
xchg
lock
xchg
push
mov
xor
stos
in
xchg
rolb
mov
loop
mov
mull
dec
divl
rorl
popf
cmpsb
cmp
xchg
pop
fs
lea
enter
mov
pop
fwait
lahf
push
scas
sbb
mov
mov
and
in
adcl
not
sub
out
gs
and
adc
mov
xor
jbe
cmp
jnp
and
adc
mov
ja
cmp
fadd
rorl
pushf
mov
pop
mov
outsl
mov
ds
icebp
cmp
xchg
sub
mov
es
or
jle
imul
dec
mov
push
enter
and
jae
aam
in
mov
dec
jg
imul
int3
mov
fisubs
and
cld
aad
imul
sbb
push
sbb
inc
xlat
imul
xor
ss
pop
test
xchg
pusha
mov
mov
popa
jg
xchg
mov
xor
sub
lods
pop
divl
adc
mov
ljmp
push
inc
pop
mov
bound
push
dec
lcall
cmp
jbe
jno
jns
cltd
cwtl
inc
ds
lret
mov
lahf
xorl
jge
adc
push
dec
outsl
sbb
popa
rcrl
add
psrld
loope
addb
push
pop
mov
mov
cmp
xor
add
mov
lret
leave
xor
sub
in
xchg
xor
adc
ud1
push
and
ss
add
and
addr16
ficoms
mov
in
and
pop
aas
pop
int
popf
ljmp
pop
out
fisttps
adc
xchg
repnz
dec
movb
in
scas
adc
daa
push
mov
hlt
les
add
test
and
and
pop
aam
cmpsl
pop
adc
stos
pushf
cmp
mov
in
loop
mov
dec
movsb
pop
out
adc
out
lds
add
xchg
stos
sbb
mov
arpl
inc
and
outsb
pop
mov
pop
jb
std
jo
test
jecxz
push
outsb
imul
lret
les
outsl
add
test
cmp
xchg
cmpsb
inc
mov
xchg
les
jp
mov
jnp
int3
mov
rolb
dec
xchg
mov
sbb
dec
xchg
bound
push
mov
cmp
jle
push
inc
ljmp
in
movsb
punpckhwd
sub
jp
movsl
mov
push
mov
xchg
cmp
mov
jno
loopne
xor
pop
loop
iret
sub
pusha
mov
cmp
arpl
dec
mov
mov
adc
repnz
in
sbb
fwait
inc
add
dec
aaa
insb
out
aaa
cltd
adc
aad
push
and
scas
jp
loopne
cmp
imul
inc
ret
aam
pushf
or
aaa
ret
push
insb
pusha
cmp
scas
jecxz
aam
addb
jns
xchg
xchg
test
jo
addr16
inc
adc
xor
xchg
and
mov
add
imull
jo
push
aaa
mov
pushf
or
sub
sub
shll
ss
daa
and
mov
sub
xchg
ja
aam
iret
insb
jecxz
rcll
lahf
mov
pusha
dec
mov
mov
sbb
je
xor
dec
pushf
test
push
test
jno
shll
sbb
jne
pop
cmp
ds
xchg
negb
test
push
jae
out
loopne
pop
data16
icebp
pop
imul
mov
fnstenv
mov
sahf
jns
divb
je
inc
movsb
jmp
mov
fists
pusha
movsl
mov
icebp
sub
shlb
pop
repz
push
push
orb
sub
addr16
pop
cwtl
lcall
pushf
rcrb
or
mov
mov
popf
jge
jbe
fucomp
sahf
ja
xchg
rcrb
scas
xchg
test
int3
popf
add
sub
lds
stos
movsl
dec
or
test
loop
loop
jl
cmp
test
bound
fcomps
lret
test
dec
mov
or
add
insl
aaa
aad
ss
adc
or
cmp
mov
cmc
cld
aaa
mov
pop
cmp
popa
scas
icebp
imull
out
in
mov
int3
ret
push
xor
push
out
mov
lahf
dec
xor
push
inc
rcrl
arpl
shrb
fstl
loope
xor
cmp
aas
mov
arpl
imul
scas
pop
dec
cmp
das
push
iret
push
inc
sbb
add
sbb
ficoms
ja
or
ss
inc
shll
aas
pop
pop
mov
ret
jo
les
aam
push
inc
add
jecxz
movsb
xchg
sub
sub
ds
scas
pop
jnp
and
or
enter
dec
xor
pop
cmp
ljmp
jmp
fadd
test
pop
and
mov
sub
fstpl
jg
aaa
cld
loope
pop
rorb
rcrb
inc
xor
stc
aas
push
push
inc
ljmp
mov
mov
dec
sahf
inc
fiadds
or
pop
push
dec
repz
bound
pop
loope
dec
mov
insb
pop
hlt
add
enter
das
fwait
movsb
add
imul
push
xchg
popa
and
dec
js
mov
bound
mov
mov
xor
sbb
int
ss
sub
outsl
xchg
mov
dec
stos
mov
stos
xchg
aam
loopne
ds
repz
je
ss
dec
je
mov
mov
pop
int
jo
and
push
inc
jle
rcrb
nop
stos
inc
xorb
dec
fcomi
cmp
lret
xor
inc
dec
ljmp
decb
adcl
std
out
call
jge
cmp
subl
xlat
das
push
adcl
adc
or
test
add
std
loope
cmp
jp
push
clc
popa
ret
aaa
mov
mov
xor
std
ret
fdivrl
mov
push
sbb
jo
add
mov
sahf
fxch
xchg
mov
jnp
sub
push
mov
pushf
xchg
sbb
sbb
icebp
and
jae
es
jnp
sbbl
jecxz
or
fwait
cmpsl
cld
frstor
and
and
push
jo
outsb
lret
sub
xchg
pop
inc
sub
inc
sub
mov
sahf
jmp
or
jb
sub
daa
inc
push
mov
jmp
es
cltd
xor
imul
lds
test
ljmp
jge
lock
ds
scas
rolb
fs
frstor
in
aaa
mov
or
sub
add
mov
jb
push
xchg
shrb
xchg
int
adc
shll
incb
pusha
cmp
jb
add
in
scas
xor
mov
mov
mov
outsl
dec
int
sub
loope
stos
jne
pop
mov
and
cmp
push
out
imul
push
adc
gs
insl
or
imul
mov
push
push
loope
das
fwait
es
lcall
scas
push
lods
or
jmp
jle
pop
mov
divb
sub
rcll
mov
mov
inc
shll
mov
adc
push
sub
aam
enter
mov
test
pop
cmpsl
or
jg
or
jbe
sbb
mov
fxch
lret
into
xor
mov
lods
aaa
mov
cmp
cmp
cmc
sbb
add
adc
dec
sbb
fwait
push
xor
nop
mov
sbb
and
stc
jle
out
nop
aad
adc
mov
into
scas
fwait
jp
dec
pop
xchg
adc
sub
pop
mov
push
call
es
int3
jne
jmpw
mov
push
ja
xor
xlat
jb
dec
stos
pop
lock
out
and
in
lret
mov
outsb
add
flds
fidivs
xchg
and
outsl
std
inc
push
xchg
jo
sbb
xchg
lods
imul
sub
shll
jge
lret
jmp
int3
cmp
xor
cs
cli
gs
mov
inc
inc
pop
xorb
ret
jg
mov
arpl
xchg
test
jbe
mov
sbbl
cmpsl
inc
andb
nop
mov
jmp
pop
sub
int
fmull
das
cmp
mov
sub
and
mov
inc
scas
mov
dec
je
jle
clc
pop
pop
cmp
dec
pushf
mov
popf
mov
mov
js
ljmp
add
and
mov
mov
loope
aad
out
shrl
rcrl
xor
stos
outsl
inc
xor
push
sbb
and
mov
inc
pop
mov
sub
inc
jecxz
or
les
xchg
mov
or
sbb
shl
int
mov
fistpl
movsl
std
ljmp
xchg
mov
xchg
sbb
loop
adc
jp
xlat
and
jo
or
push
jae
fistl
inc
inc
and
mov
stos
and
inc
in
mov
lods
mov
push
jno
push
imul
sahf
pop
mov
mov
sbb
mov
pop
leave
inc
mov
aad
scas
dec
xor
cmp
outsl
or
loope
dec
mov
mov
mov
fidivs
repz
shr
insl
jbe
pop
sub
mov
fcmovu
or
sbb
sbb
inc
icebp
scas
or
or
and
sti
pusha
loope
sub
repnz
test
cmp
jg
pop
pushf
enter
jg
dec
push
std
lret
jbe
imul
icebp
imul
inc
sub
fistps
daa
mov
jmp
mov
sbb
mov
jne
idivb
dec
sub
sbb
sub
stos
jns
out
or
add
test
adc
add
adc
cld
and
stos
fsubrs
jle
cmpb
adc
fmul
loopne
or
loope
jbe
jge
cld
testb
adc
jo
icebp
hlt
stc
mov
clc
and
mov
insl
pop
mov
cmpsl
pop
sbb
xchg
mov
cmp
test
cmp
stos
sar
lods
inc
imul
ljmp
imul
mov
add
insb
add
lds
inc
adc
mov
mov
sbb
vprotb
mov
cmp
movsb
sbb
pop
rorl
fiaddl
cmpsb
xor
mov
mov
or
rcrl
outsl
pop
mov
cmc
fisubrl
add
pop
mov
mov
call
decb
dec
dec
pop
sbb
jp
inc
jae
je
push
loopne
icebp
outsb
sahf
pop
dec
fnsave
call
dec
add
mov
jp
cltd
xlat
inc
or
inc
out
sbb
mov
scas
push
adc
pop
fbld
imul
pop
mov
sub
or
add
aam
adc
pop
fisubrs
adc
or
lods
cld
mov
cmpsb
ret
pop
test
lret
ljmp
std
shr
lcall
loope
das
das
inc
fiadds
mov
dec
cmp
iret
rcrl
mov
mov
xchg
lea
xchg
int
rcrb
pusha
lcall
push
cmc
seto
insb
scas
adc
adc
ljmp
pop
cs
sub
icebp
loopne
out
stc
add
mov
addr16
pop
cld
mov
pop
out
xchg
daa
add
sub
or
cld
aas
dec
fimuls
sub
daa
sub
gs
lret
jecxz
cmp
test
iret
xchg
push
adc
ret
out
adc
in
lods
fnsave
add
scas
xor
jne
or
testl
mov
test
pop
loop
mov
jp
aaa
cmpb
pop
or
inc
pop
enter
push
scas
test
stos
aas
sbb
iret
sbb
in
jp
rorl
ret
mov
ds
mov
dec
fs
out
and
outsb
lret
and
mov
fstps
sbb
jge
sarl
jl
jns
andb
shlb
sbb
ret
fcoml
sbb
stos
mov
fimuls
or
loop
push
inc
popa
add
and
push
push
pop
in
push
mov
xor
iret
dec
sub
inc
and
sub
loope
dec
sub
shlb
pop
movsb
dec
je
add
mov
jmp
fs
loope
clc
cmp
xor
dec
rcrb
mov
push
and
add
test
aas
and
loope
cli
jnp
jg
dec
cmp
jbe
jecxz
push
mov
jb
arpl
movsl
mov
in
or
fwait
jle
popf
cwtl
loopne
mov
push
push
rcl
add
arpl
and
pop
push
sbb
mov
xchg
int
xchg
add
in
pop
mov
and
dec
mov
xchg
pop
mov
jno
popf
adc
sarl
sbb
cmp
mov
shlb
pop
stos
jb
fiaddl
and
inc
adc
call
pushf
les
mov
jg
ds
mov
or
leave
adc
es
mov
dec
jnp
in
xchg
xor
pop
fs
jbe
ds
pusha
cwtl
sub
daa
cmpsb
mov
mov
out
jbe
stc
and
fcmovb
jns
xor
mov
cs
test
leave
jne
loopne
or
pusha
and
in
insl
jo
repz
mov
xor
mov
dec
cmc
test
add
sub
fs
inc
pop
sub
lcall
pop
sahf
or
cld
xchg
pop
cmp
inc
dec
or
xor
inc
dec
dec
mov
sbb
lea
decb
add
cmp
out
dec
pop
jo
inc
mov
rcrl
cmp
pop
and
in
jle
push
jb
mov
int
pushf
je
loopne
jg
jl
rep
push
xchg
mov
inc
cmp
insb
adc
pop
clc
es
inc
adc
xchg
scas
mov
cmp
cmp
mov
xor
les
dec
int3
or
rorb
and
adc
scas
push
xchg
add
inc
pop
scas
sbb
ret
jae
adc
rolb
jl
mov
daa
aam
dec
popf
nop
mov
movsb
shll
sbb
sbb
mov
or
cli
out
movsl
mov
cmp
push
in
add
mov
mov
sbb
ficomps
dec
in
rol
dec
mov
adc
push
adc
dec
movl
mov
movsb
jg
das
in
cmpsb
jg
stos
xchg
xor
aam
mov
dec
jbe
out
les
js
jge
adc
mov
pop
pop
ss
xchg
out
add
inc
pop
sub
xchg
inc
cmp
lret
xor
push
jb
fiadds
in
outsl
and
pop
aaa
imul
or
shrb
ja
cmc
mov
pop
ds
scas
js
lcall
outsl
cli
jg
repz
sahf
pop
scas
inc
cmp
cmpsl
jl
cmp
mov
push
repz
fdivs
xchg
dec
in
push
mov
add
inc
test
popl
xchg
je
into
push
sub
pop
pop
xchg
adc
cmp
jnp
out
mov
rolb
into
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
mov
jge
or
jp
int3
inc
sahf
js
and
cmpsl
or
xchg
ds
data16
lret
cmp
sbb
leave
lock
test
aaa
dec
int3
dec
adc
add
scas
mov
pop
mov
adc
test
lods
push
dec
push
das
std
les
mov
push
test
cmp
mov
pop
mov
lock
adc
or
clc
push
rolb
int3
mov
and
jmp
icebp
in
inc
add
lcall
lret
jne
stos
add
jns
mov
cwtl
popf
out
pop
adc
and
fs
add
cmp
mov
arpl
or
fistpl
out
or
fisubs
movsb
mov
or
mov
sub
ret
pop
cmp
dec
inc
add
inc
mov
fwait
cmp
mov
lods
add
mov
mov
push
rclb
pop
fcoml
sbb
gs
scas
lret
shrl
les
and
mov
daa
movsb
mov
pop
push
ret
cmp
xchg
mov
and
sarb
pop
xorl
mov
enter
imul
or
xlat
adc
fistpll
repz
iret
cmc
xchg
jae
loop
and
cmpsl
cmp
rcrl
sbb
bound
loope
xor
imul
jne
andb
inc
in
idivw
addr16
lahf
lock
insb
test
sub
dec
ja
jb
rcrb
fimull
xchg
cwtl
scas
test
xchg
dec
fisubl
mov
xchg
pop
arpl
je
push
adc
shlb
loop
lock
mov
fs
dec
mov
outsb
xlat
iret
test
and
orb
xor
push
sbb
mov
sti
jns
mov
add
out
pushf
xor
sub
icebp
add
or
and
in
push
mov
es
int
inc
jge
loope
inc
jge
sub
jle
push
cmp
call
fcomip
pop
xlat
mov
mov
fsubrl
call
idivl
cmpsl
and
fdiv
pusha
pusha
and
cli
int
cmp
or
pop
push
sbb
or
and
rcr
leave
dec
nop
jne
mov
fsub
idiv
jl
xor
adc
aam
rcrb
mov
call
add
adc
mov
bswap
lds
inc
call
aas
lahf
mov
andb
mov
xchg
mov
mov
mov
arpl
das
cmp
jle
leave
xchg
ds
or
arpl
jno
in
mov
cmp
cmp
sub
adc
xor
sub
dec
std
mov
pop
lret
shrb
adc
sbb
mov
xchg
jb
imul
pop
jp
adc
out
push
mov
jo
cwtl
xchg
mov
mov
mov
mov
fsubrs
mov
inc
jb
ret
xchg
pop
cmp
mov
jb
mov
adc
push
roll
pop
ljmp
jno
mov
cmp
cld
test
fcmovnu
aad
sahf
sarl
stos
ret
in
lods
rep
cmpsb
ss
es
gs
outsb
into
mov
or
mov
in
add
mov
jno
pusha
and
test
addr16
xor
cmp
inc
push
fistl
lock
jp
push
sbb
push
lock
xor
cmp
mov
lds
jg
or
dec
cmp
rolb
pusha
and
scas
imul
lock
insb
outsw
xor
cmp
ffreep
add
bnd
add
pop
aas
pushf
mov
mov
iret
jae
sub
xorb
pushf
fldl
dec
insb
pop
lods
mov
add
pop
add
push
jmp
fucomi
and
andb
xor
adc
push
push
inc
xchg
mov
rorb
xchg
loop
aam
inc
icebp
or
pop
hlt
push
mov
push
lret
arpl
loop
mov
inc
icebp
pusha
or
stos
cmp
loop
xchg
testb
sahf
sahf
out
sub
movl
mov
jecxz
sub
xchg
mov
xor
mov
lcall
rcll
lods
test
sub
out
lcall
xor
pop
sub
cmp
call
cwtl
inc
mov
mov
fistpll
mov
inc
fisubrl
and
mov
int
mov
addr16
lods
rorb
push
test
leave
jg
ds
imul
je
dec
or
scas
add
jne
mov
sbb
or
jge
aaa
out
stc
iret
mov
mov
add
mov
xor
mov
ja
subl
inc
push
xor
add
sub
fs
mov
dec
dec
jae
xlat
mov
mov
mov
sub
imul
cmp
inc
push
dec
jns
fmuls
push
gs
es
insl
mov
je
mov
bnd
or
push
push
cmpsl
es
ret
push
int3
pop
pop
fs
mov
pop
mov
cmp
xor
inc
scas
jg
aam
cmp
mov
add
sbb
ret
push
sub
mov
pop
jg
push
inc
fldenv
mov
dec
push
jne
dec
mov
pop
mov
movsl
cmpsl
sbb
adc
mov
cltd
fstps
in
call
inc
jns
jmp
adc
jno
mov
outsl
repnz
leave
cmc
mov
xchg
pop
mov
or
xor
loope
pop
repnz
cmp
std
cmp
mov
adc
imul
or
and
add
pushf
sbb
xlat
jp
mov
xlat
and
xor
mov
lret
call
push
mov
cli
mov
bound
pop
pop
xchg
decb
or
out
add
and
pop
push
addl
out
jnp
ret
xchg
repnz
les
lock
out
lods
adc
jnp
aaa
sahf
sbb
aam
push
ds
mov
int
inc
jbe
cmp
bound
or
in
popa
nop
gs
cld
and
repz
movl
sub
push
dec
mov
lds
out
negl
inc
repnz
mov
fwait
add
roll
sbb
negb
and
push
icebp
lret
cmp
xchg
add
clc
mov
lea
jns
shr
xchg
sub
push
mov
cmp
test
movsb
lahf
lcall
mov
aas
movb
xchg
les
into
push
mov
pop
frstor
and
cld
mov
insl
mov
pop
test
sbb
jo
add
xchg
and
aaa
dec
out
jl
mov
mov
and
sbb
push
adc
stc
call
jmp
cmc
and
mov
push
in
mov
adc
rcr
in
aas
mov
and
fs
jmp
or
push
push
mov
pop
and
mov
pop
test
xchg
test
xchg
std
and
add
add
push
push
push
sub
in
mov
adc
mov
es
inc
mov
adc
xor
xchg
lock
rcrl
lea
or
ljmp
mov
call
cld
scas
fs
mov
in
sub
lea
mov
xor
xchg
arpl
out
dec
cmp
push
ss
jmp
or
loop
mov
mov
jp
push
xor
jno
jge
enter
test
aad
fstpt
add
xchg
imul
in
xchg
fcompl
test
sub
daa
insb
test
add
mov
xchg
jnp
out
mov
and
test
aam
jns
push
add
adc
add
loop
adc
cwtl
xor
test
and
jl
xchg
cli
insb
mov
push
in
cli
divb
sub
adc
cmpsb
cmp
mov
or
mov
sub
mov
jecxz
adc
cwtl
mov
sbb
pop
push
push
int
sub
cmp
in
mov
xchg
or
inc
push
fsts
pop
addr16
xor
mov
xchg
cmp
rolb
jnp
push
mov
push
adcl
in
scas
add
test
cltd
adc
mov
xchg
leave
pop
cmpsb
sub
or
loope
sub
xor
fadds
stc
ds
and
jbe
jg
imul
pop
fildll
ret
xchg
lock
cmp
aam
ljmp
mov
adc
out
push
xchg
in
iret
inc
fwait
in
sbb
sarl
dec
inc
sbb
pop
cs
shlb
aad
adc
jo
cmp
cmp
fwait
hlt
xlat
push
repnz
add
idivl
or
mov
lea
add
out
push
lods
ja
and
dec
ftst
call
dec
mov
loop
add
jne
xor
dec
add
fildll
mov
aad
mov
xor
jnp
cmp
fsubl
loope
shlb
fcoml
xchg
sbb
cmc
xor
fbld
or
add
mov
in
inc
cmp
xchg
sarb
ret
sub
cs
dec
pushl
in
loopne
inc
mov
jbe
movhps
mov
mov
js
add
push
jl
je
xchg
pop
push
jbe
pop
sub
jne
insb
xchg
inc
cld
shll
xchg
adc
xchg
int
cmc
jne
clc
inc
sub
addr16
mov
push
fnsave
or
flds
mov
add
lret
sub
scas
stos
and
cltd
pop
mov
pop
iret
lods
mov
cs
push
js
loopne
mov
cmp
xchg
sti
inc
icebp
xchg
ljmp
scas
jns
sbb
movsb
add
jl
scas
jno
xchg
mov
ret
testl
dec
jge
repz
ret
jns
sub
inc
test
imulb
dec
pop
vphaddudq
pop
add
stos
not
inc
pop
mov
pop
jg
jmp
sti
push
fcomp
cli
leave
jbe
mov
jae
test
and
xor
sti
adc
or
jne
sbb
jne
out
ret
into
jb
jecxz
inc
in
and
jnp
sbb
rorl
scas
in
lahf
loope
xchg
mov
out
fcomip
rcr
jmp
dec
push
pushf
cmp
mov
cmp
fcoms
lea
popf
xor
add
push
mulps
sbb
push
xor
sbb
cwtl
addr16
xchg
fdivrl
pop
jmp
lods
ret
mov
mov
and
and
pop
adc
je
cwtl
jnp
xchg
jae
aaa
adcb
stos
lds
fwait
popf
in
test
mov
pop
fmuls
roll
sub
xor
add
out
mov
push
cmp
xorb
push
outsb
xchg
scas
mov
ja
xchg
incb
sub
inc
cmp
enter
inc
stos
outsb
hlt
xor
pop
push
inc
sub
mov
scas
leave
mov
popf
xor
inc
mov
mov
add
dec
pop
fwait
mov
sbb
mov
movsb
insb
cltd
mov
into
or
repnz
insb
pushf
pop
inc
xor
jne
in
and
mov
ret
lcall
lea
mov
pop
lret
ja
xchg
mov
repnz
sbb
out
into
add
push
push
sbb
ds
cmp
shlb
cmp
sub
loopne
jb
lcall
jnp
xchg
cmpsb
cmp
repnz
cmp
enter
dec
pop
daa
jae
iret
sub
sti
dec
xor
jo
in
pop
lcall
jns
sar
mov
mov
sub
lods
in
arpl
push
sbb
push
outsb
mov
ret
sub
cmpsb
mov
lods
test
mov
jae
push
adc
es
in
rorl
pop
push
jecxz
pop
inc
and
jno
sub
push
shrb
shrl
jno
push
outsl
mov
xlat
iret
leave
hlt
loopne
rcll
push
fcomi
stc
mov
nop
or
pop
movsl
add
mov
mov
xor
dec
jbe
add
subl
mov
adc
pop
sub
jno
cmp
push
sbb
adc
sbb
mov
mov
push
xor
jns
and
mov
ret
mov
pop
fwait
cli
mov
subb
xchg
std
dec
aas
dec
inc
fs
es
pop
mov
push
cltd
jmp
mov
and
dec
bound
int3
xchg
addr16
push
cmp
mov
add
cld
out
fldl
and
sar
push
shlb
jp
xchg
jno
mov
push
sub
gs
jns
out
cmpsb
mov
hlt
dec
push
add
mov
stc
xor
xor
push
pushf
xchg
pop
fs
ficompl
loopne
daa
je
sbb
sahf
repnz
dec
inc
adc
test
inc
sub
pop
jg
dec
shl
mov
sub
xchg
sub
bound
ret
notb
in
mov
dec
shll
xchg
sub
xor
xchg
mov
mov
test
cwtl
cmc
mov
jle
int
imul
cmpsb
sbb
mov
add
in
or
cmp
or
push
adc
stos
sub
ljmp
mov
cs
cmp
subb
in
scas
lock
out
and
xchg
stos
sbbl
dec
push
or
or
xlat
xchg
mov
jmp
mov
insl
in
mov
notl
cli
pop
fcomp
push
stc
cld
adc
inc
sahf
repnz
xchg
stos
adcb
add
mov
roll
das
and
adc
gs
xchg
test
out
test
int
popa
imul
imul
shl
or
sbb
pop
outsl
and
jmp
mov
push
pop
fstl
adc
jno
bound
das
sub
lret
xchg
or
hlt
and
ficoms
push
add
and
mov
adc
mov
jno
cmc
dec
or
scas
mov
rep
clc
cmp
addb
inc
daa
rcll
adc
dec
lds
dec
jge
lret
add
ja
jne
cld
jge
adc
aam
inc
aas
fistpll
pushf
mov
pop
fcom
cmp
push
out
pop
lock
int3
out
mov
sub
imul
notb
xlat
dec
add
inc
inc
fidivrs
cmpsl
loopne
xchg
popa
add
adc
hlt
jecxz
int3
push
in
daa
cmp
push
mov
call
jmp
or
add
push
leave
inc
out
out
push
push
push
adc
ds
fiaddl
add
jbe
ljmp
jae
out
repnz
in
into
adc
ret
jp
pop
imul
jle
mov
xor
jno
and
bound
mov
jmp
xchg
bound
xor
fidivrl
out
ss
fs
xlat
fs
jns
scas
cmpsb
inc
adc
push
imul
cmp
pop
subl
test
pop
jp
in
pop
and
jle
xor
jge
add
or
mov
pop
ss
pop
inc
mov
insl
fsubp
mov
decl
fimull
outsb
loope
aas
jno
lds
xchg
ja
out
dec
sbb
negb
mov
imul
sahf
push
subb
sbb
xor
sub
movsb
xchg
or
xchg
test
adc
lock
jae
and
scas
mulb
or
xor
xchg
cmp
jne
sub
mov
push
jb,pt
jne
fildll
pop
push
jl
rorl
xchg
add
shlb
test
cwtl
ljmp
cli
pop
andps
jb
insb
iret
sub
xchg
mov
js
std
into
ret
pop
mov
adc
in
std
lahf
xchg
mulb
jae
or
inc
fwait
aas
pop
pop
insb
pusha
js
mov
inc
shlb
cmpsb
mov
fisubrs
cmpsl
js
push
sub
and
xchg
lret
insl
xchg
aaa
xor
xlat
stos
xor
daa
jns
imul
mov
ljmp
dec
movsl
cmp
popa
pop
mov
hlt
pusha
scas
fstpl
stos
pushl
pop
inc
xor
stos
adc
cmp
adc
add
xchg
in
lock
test
fcom
sbbl
std
pop
cmp
daa
cld
or
dec
dec
add
jle
mov
fmul
add
pop
sub
test
cmpsb
scas
sahf
out
jl
loope
call
xchg
jae
repnz
movsl
push
int3
in
add
push
es
sbb
sub
out
rorl
into
cmp
cmp
outsb
ds
adc
sub
lcall
adc
ret
shll
jbe
imulb
test
adc
daa
xchg
jle
or
mov
push
push
fstps
popf
pop
mov
cmp
jg
fsubrp
cs
mov
or
xlat
sarb
cmp
xchg
idivb
push
push
dec
insb
iret
bound
sti
pop
int3
dec
fnstcw
sahf
mov
xor
outsl
js
mov
jae
pusha
popf
out
les
adc
fcomi
insl
rorl
das
lret
fldenv
shll
cmp
dec
imul
sub
jnp
pusha
pusha
ret
xor
fcomps
cli
mov
push
xchg
mov
inc
mov
jnp
sub
mov
lods
xor
test
mov
bound
mov
mov
cltd
mov
mov
pop
div
mov
lods
mov
in
sub
dec
mov
cli
inc
test
xchg
and
jmp
mov
out
sbb
push
or
mov
das
in
shll
loope
xchg
loopne
into
cs
les
xchg
or
sub
sbb
loope
out
mov
and
mov
cmpsl
xor
push
jge
ja
andl
ja
cmpsl
mov
mov
push
xlat
out
xor
ud1
dec
js
addr16
bound
jp
jle
out
and
ja
dec
cmp
push
add
mov
shll
push
popf
jno
pop
pop
test
fwait
sbb
scas
fs
orb
sbbb
inc
mov
lret
in
cmp
stos
pusha
jns
mov
xchg
mov
or
inc
loop
ret
mov
test
test
sbb
or
repz
pop
mov
sbb
shll
mov
sarl
pop
mov
push
mov
addr16
lock
lret
nop
subb
jb
adc
lea
cmp
and
push
sub
add
loope
mov
scas
test
jbe
movl
jne
ds
aas
adc
inc
fadds
stos
and
jb
pop
hlt
sbb
push
and
mov
in
lods
xor
jge
aaa
cltd
clc
cld
out
jl
add
lods
xlat
mov
cltd
dec
aaa
stos
ret
mov
ljmp
test
push
outsl
push
inc
sahf
adc
aaa
pop
rorb
xchg
lret
les
mov
dec
sti
into
jecxz
scas
js
sbb
or
in
pusha
xor
jle
lea
clc
sahf
movsl
sbbb
in
scas
scas
pop
mull
mov
jae
negb
pop
pop
jge
mov
xchg
jmp
add
mov
fnstenv
cwtl
and
push
mov
push
cmpb
pop
add
add
lret
stc
jmp
test
pop
cld
lock
es
mov
mov
pop
shll
sbb
sub
sub
das
mov
and
test
and
add
lods
decl
fwait
lret
mov
in
mov
cwtl
pushf
pop
pop
fildll
mov
pop
icebp
clc
mov
ret
mov
mov
sub
adc
ja
inc
push
mov
int3
push
sti
mov
roll
les
xchg
data16
in
mov
mov
sbb
stos
jmp
adc
lods
mov
cmpsb
cmp
roll
insb
mov
test
xchg
icebp
mov
inc
aam
jg
jle
push
out
pop
add
pop
sub
add
imul
mov
mov
mov
sbb
fs
sbb
sbb
out
cmp
dec
fstpl
mov
mov
add
sbb
call
xchg
popf
adc
nop
shll
cld
dec
push
fs
sbb
repz
hlt
push
fs
jle
mov
xorl
sbb
push
inc
out
stos
dec
push
pop
xchg
mov
test
and
outsb
dec
xchg
das
hlt
iret
sbb
pop
and
push
fistl
into
out
add
cmpsl
repnz
push
imul
ret
fincstp
outsb
lods
dec
clc
into
test
enter
test
or
mov
and
push
ret
not
adc
inc
std
cmpb
out
imul
mov
push
popa
nop
dec
aad
test
sbb
mov
sbbb
cmc
jmp
aas
decw
mov
shrl
xchg
sar
push
cmc
push
push
pusha
sbb
je
ja
lret
cmpl
xor
ss
dec
int3
or
sbb
fidivl
xchg
loop
mov
dec
add
add
out
or
inc
fdivp
xchg
jnp
sti
jle
push
mov
push
bound
mov
push
std
mov
jns
inc
rcrl
mov
or
adc
xlat
or
mov
aaa
xor
push
cltd
adc
test
xchg
cli
mov
aas
inc
cmp
jle
push
imul
adc
icebp
cld
fsubr
ds
cmc
and
outsb
sub
cwtl
fst
add
shrb
pop
jae
mov
cmp
xchg
cmp
in
mov
popf
iret
pop
cmp
rorb
in
jno
fucom
adc
mov
or
mov
lret
insb
data16
out
test
pushf
adc
lods
adc
mov
add
in
mov
mov
pop
iret
fldt
les
or
mov
add
bound
xchg
in
adc
in
in
movsl
sbb
or
mov
call
sbb
adc
or
push
sti
insl
aad
lcall
dec
pop
das
rcl
mov
sbb
mov
in
push
sub
jl
lea
xlat
xchg
push
push
leave
inc
out
aaa
xchg
jmp
ss
jo
rolb
ret
cmp
sbb
push
loop
mov
dec
pop
cld
jmp
das
fbld
inc
idivb
jle
out
roll
mov
stos
int
mov
jecxz
fs
dec
scas
adc
mov
xor
pusha
and
mov
push
popf
push
xchg
jb
adc
in
jns
jle
pop
loop
mov
cmc
test
mov
cmp
mov
out
dec
dec
add
ficoms
rorb
add
loope
fsub
ret
cmp
rol
lret
push
sub
dec
add
jno
scas
jge
loopne
jae
and
movsb
pop
nop
outsb
mov
mov
jl
cmp
pushf
cmp
lods
shl
adc
fmull
mov
and
sti
xor
sahf
or
iret
out
jae
mov
out
and
jb
les
rcl
jecxz
les
mov
in
icebp
xchg
aam
dec
stc
sub
test
es
jmp
test
mov
jl
and
mov
pop
iret
cmpsb
test
jmp
adc
cs
cmp
mov
adc
outsl
data16
and
mov
add
inc
les
aas
cmp
sar
fisttpl
add
inc
adc
sub
mov
mov
dec
or
push
repnz
mov
shlb
sbb
cltd
xor
test
dec
int
mov
lret
test
inc
xchg
xor
repz
adc
gs
popa
dec
in
jge
inc
inc
mov
sbb
pop
and
fdivrs
aam
dec
mov
mov
notl
cmp
arpl
jno
mov
sbb
sbb
mov
out
adc
jns
fnstcw
push
jns
fisttpll
popa
movl
std
xchg
and
cmpsl
pop
pop
jge
sub
outsl
inc
icebp
inc
inc
cwtl
sbb
int3
dec
sub
cs
imul
stos
push
cwtl
mov
pop
orl
mov
mov
cmp
pop
xor
mov
hlt
insl
dec
xchg
push
mov
mov
daa
fs
lea
lahf
inc
mov
cmpsl
popa
jecxz
inc
les
iret
pop
stos
int3
inc
sub
adc
out
movsl
push
sbb
jl
adc
rorb
arpl
andl
sahf
pop
add
in
add
inc
sbb
loop
stos
dec
mov
sub
or
nop
repz
ret
inc
out
test
ficomps
into
mov
rorl
mov
lods
addr16
ret
inc
out
mov
flds
mov
iret
into
pop
lds
adc
rorl
xchg
or
mov
dec
sti
xor
xor
adc
push
arpl
sub
sbb
dec
sbb
scas
lcall
out
sub
mov
cmpsb
leave
jbe
aam
push
jns
lahf
fstl
cli
jae
push
aad
mov
bswap
push
arpl
scas
inc
scas
sub
out
xor
pop
ds
inc
ret
sub
out
je
cmpsl
daa
incb
dec
add
dec
test
movsb
int3
or
inc
cli
lahf
lods
sbb
xchg
enter
and
shrb
mov
popf
in
adc
ds
jo
or
push
dec
cmp
and
and
addl
addr16
push
std
aaa
outsl
mov
rolb
das
dec
fsubrl
and
or
addr16
cmp
xchg
ljmp
stos
lock
pop
adc
rcr
push
fsubrp
adc
add
test
lcall
sub
add
xchg
fadds
pop
xchg
les
in
dec
push
fwait
adc
jp
dec
addl
sbb
inc
sbb
dec
adc
and
bnd
xor
jnp
adc
out
mov
sbbb
push
mov
insl
or
mov
insb
mov
mul
int3
or
fs
std
push
xorb
pop
pop
jge
mov
loopne
not
sbb
dec
shlb
fisubrl
or
aad
and
dec
cld
pop
xchg
fimuls
jl,pt
lods
insb
aad
scas
stos
jno
cwtl
dec
ss
pop
push
call
shll
test
cmp
pusha
mov
sbb
and
or
shl
ja
mul
icebp
push
loop
fidivs
dec
push
jnp
jae
outsb
jnp
push
hlt
inc
and
fidivs
lods
push
xlat
inc
mov
outsb
mov
jp
test
movsb
push
loop
cmpsl
pop
enter
lahf
lret
dec
xchg
adc
imul
jbe
hlt
and
in
xlat
add
adc
aaa
xor
lds
aam
push
sbb
cmpsl
add
add
repz
dec
dec
data16
fcmove
andb
daa
and
frndint
cwtl
xlat
add
das
mov
dec
and
xchg
clc
test
mov
out
sbb
mov
mov
lret
test
fincstp
sub
add
inc
pop
mov
int3
sbb
iret
adc
inc
jmp
lods
push
cmc
jne
jp
ret
mov
or
in
and
cwtl
xor
jno
jp
xchg
mov
mov
mov
stos
popa
insl
add
push
sub
mov
repz
movsb
mov
add
xchg
jb
jb
mov
out
inc
stos
add
xorb
lods
movsb
mov
add
mov
or
lods
sub
mov
jge
cld
sahf
or
fisubs
testb
push
inc
loopne
icebp
add
inc
add
xchg
aaa
jnp
out
mov
adc
int
loop
addr16
in
cmp
adc
lods
dec
fidivrs
mov
dec
imul
jl
xchg
stc
dec
mov
loope
lods
mov
push
jmp
call
mov
loop
das
pop
bound
push
fwait
fwait
je
fs
int3
lock
dec
or
pusha
push
js
dec
scas
pushf
int
add
jmp
push
pop
xchg
lret
pop
xchg
sbb
xchg
pop
push
imull
psrad
dec
dec
mov
sbb
pop
flds
es
inc
lret
jnp
sub
sub
mov
jns
inc
mov
fisttpl
mov
bound
std
and
sahf
in
je
adc
andl
add
jns
or
mov
popa
dec
cmp
jmp
or
mov
xor
mov
mov
push
mov
sbb
data16
adc
push
repz
cmpsb
adc
in
pushf
dec
xor
xlat
or
cmc
in
test
cld
sbb
repz
cmp
pop
int
in
sbb
mov
xchg
xchg
mov
insl
jg
pushf
jbe
mov
insl
sbb
mov
call
lods
icebp
add
sub
push
dec
or
mov
jge
cltd
mov
jb
outsl
inc
and
jno
jp
adc
and
inc
aad
insl
jge
cmpsb
or
ljmp
mov
mov
cmp
js
arpl
pop
add
jecxz
push
movsl
mov
orl
dec
cmp
sti
stos
pop
aas
add
leave
mov
pop
inc
in
push
jmp
cmp
sbb
mov
movsb
stos
jle
cli
in
inc
fistps
ficoml
mov
call
or
push
pop
std
nop
sbb
fisubl
fwait
iret
sbb
add
jns
mov
push
dec
addl
fwait
jb
push
daa
mov
addl
sub
dec
mov
call
cmpsl
pusha
inc
add
pop
inc
xlat
adc
pop
jb
xchg
and
push
sub
xor
cmp
aas
fnstsw
subb
xchg
cld
or
cmp
lret
ret
mov
dec
call
data16
xchg
fnsave
inc
ss
xchg
mov
in
jmp
sub
sbb
aaa
cmp
and
or
and
outsl
cli
stc
cld
les
sub
rcll
divb
int
pop
dec
or
or
cli
sub
pop
sub
jecxz
adc
cld
adc
rcrl
psrad
and
lret
cmp
insl
push
pop
cs
cmp
ja
nop
in
cmpsl
ja
std
ds
pop
pop
mov
cwtl
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
insl
daa
lods
mov
push
inc
shrb
divl
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
