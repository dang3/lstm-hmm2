push
mov
sub
mov
jmp
incl
shlb
fs
cmpl
jle
jg
jle
xlat
cmp
rol
pop
add
push
mov
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
jg
adc
adcw
sbb
jnp
jmp
lods
and
mov
push
out
inc
stos
inc
iret
mov
jns
push
jae
gs
repnz
jle
and
and
shlb
in
and
rol
push
xor
insb
mov
out
in
repz
lods
lcall
jb
enter
stos
fldcw
push
pusha
das
andb
sahf
movsl
xchg
mov
mov
inc
xchg
mov
jle
cltd
pop
push
lods
push
mov
fdivl
loopne
xchg
stc
mov
sbb
jbe
repz
sbb
mov
inc
jp
cmp
sbb
pop
divb
popl
mov
test
test
in
or
imulb
sbbb
in
fcompl
inc
into
call
xchg
xorl
add
fadd
dec
add
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
imul
lods
push
or
and
cs
add
dec
add
shlb
test
cmc
push
add
mov
sub
mov
fidivrs
rclb
enter
sub
loop
pop
inc
dec
jb
sbbl
movsb
pushw
sub
xchg
fwait
adc
in
jmp
pop
test
sbb
test
shrb
and
dec
test
mov
ss
push
das
dec
sbb
pushf
lods
cmovg
out
stc
pop
shll
mov
jle
std
arpl
mov
ja
xchg
scas
insl
lea
cmpsb
and
or
push
inc
gs
insb
mov
inc
jle
pop
or
jae
rcr
pop
insl
ret
mov
jp
xchg
xchg
gs
in
hlt
mov
or
adc
dec
mov
sub
add
mov
inc
cmp
mov
xor
rcll
push
mov
out
push
jae
dec
dec
sti
sarl
sub
xchg
lret
int3
xchg
dec
sbb
insb
add
cmp
sahf
jns
pop
pop
and
mov
orb
addl
repnz
adc
xchg
adc
das
pop
dec
aam
fcomi
jmp
sar
or
fwait
shll
test
add
mov
jno
xchg
mov
ret
movsb
xor
jmp
popf
and
out
arpl
scas
insl
ljmp
imul
mov
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
mov
jle
jg
jle
scas
mov
insb
inc
leave
mov
iret
push
bound
loope
repz
or
aaa
sbb
pop
jecxz
push
data16
lds
call
jle
mov
fs
in
cs
sbb
cmp
xchg
testb
xor
shrl
dec
mov
mov
hlt
pop
scas
andb
push
mov
dec
mov
les
fnsave
push
in
jmp
push
ljmp
jmp
sbb
dec
adc
pusha
adc
push
pop
js
fwait
mov
jno
call
icebp
pop
add
cs
lret
cmp
inc
sbb
ret
movsl
fucomi
cli
aad
hlt
shr
adc
movsl
jae
loope
and
addr16
and
popl
xor
pop
loop
rcrl
pop
mov
mov
or
jb
sub
xchg
ja
add
mov
push
popf
je
sbb
mov
push
xchg
cli
pop
and
xor
sti
push
addl
mov
test
jno
xchg
pusha
aas
push
push
push
inc
inc
shlb
cli
ljmp
xor
iret
xchg
cmp
mov
jle
dec
lock
inc
lret
mov
fsts
ja
test
inc
repnz
imul
daa
xor
jae
outsl
adc
and
sti
xchg
outsb
jnp
pop
jnp
fnstenv
cmp
push
out
dec
and
inc
sub
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
add
pop
subl
jle
cmpl
repz
inc
mov
xor
pop
in
sub
mov
adc
repz
sti
push
iret
daa
mov
mov
loopne
xor
and
fmull
and
cmp
cmc
push
stc
pop
sbb
mov
cs
in
add
push
imul
sbb
xchg
adc
imul
and
popf
imul
ficomps
inc
mov
out
add
mov
xchg
and
data16
pop
mov
mov
xor
fcmovnb
lods
and
xchg
lret
or
in
inc
pop
sub
movsl
dec
inc
mov
xlat
mov
mov
cli
fwait
inc
xor
cmpsl
add
les
xor
dec
movsb
mov
push
cmpl
and
xchg
daa
fwait
inc
aaa
movsb
sub
jge
xchg
lock
xor
jmp
mov
jne
stos
pop
cmp
subb
and
pop
xor
push
addr16
mov
popf
mov
jmp
and
shrb
mov
jbe
add
mov
jnp
sbb
sbb
clc
inc
xor
sub
xor
xchg
add
pop
js
lds
adc
adc
or
jbe
ror
psllw
adc
add
clc
xor
pop
insl
cmp
loopne
and
int3
cwtl
jns
outsl
repz
int
es
jmp
xchg
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
rcr
add
ret
lret
in
dec
stos
add
push
sbb
and
sarl
cli
lahf
mov
jle
dec
lock
inc
mov
inc
and
mov
jmp
mov
push
push
and
out
mov
pushf
dec
aam
jle
xchg
test
andl
out
xchg
or
scas
nop
push
leave
mov
xchg
sbbb
ja
aad
hlt
xlat
cmp
sbb
pushf
rcrl
adc
outsb
shrl
fcmovb
dec
shlb
mov
outsl
and
lcall
mov
and
shlb
das
dec
jae
lock
xor
std
aad
dec
popa
push
add
inc
sub
xor
jl
or
add
mov
mov
add
push
and
clc
aad
push
dec
sti
or
pop
or
out
fwait
outsl
mov
aaa
adc
dec
sbb
mov
dec
sub
popa
cmc
jmp
sti
inc
inc
fcomps
mov
lods
xchg
pop
push
sub
xor
ret
clc
fmuls
add
lods
lret
inc
sahf
pop
lahf
sub
xor
jecxz
cmp
stos
nop
push
push
jg
leave
lods
xor
in
mov
negl
jmp
aaa
popf
mov
xor
fmuls
cmp
add
into
repz
inc
dec
jo
daa
dec
fidivrs
pushf
jle
mov
idivb
test
in
les
and
dec
movsb
or
sbb
test
je
ficoms
mov
inc
hlt
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
pushf
movsl
inc
mov
push
jle
cwtl
jg
jle
test
cmp
mov
clc
fstpl
popa
cmp
shrb
test
outsb
insl
les
into
pop
push
call
idivl
rolb
lods
inc
popf
inc
sbb
sbbb
mov
popw
cmp
inc
call
inc
loope
shlb
cld
fisttps
int3
clc
mov
cmp
loopne
inc
lcall
mov
sahf
sbb
push
ret
xor
jno
sub
andl
push
adc
outsl
sbb
adcl
daa
pop
push
shrl
xor
push
imul
or
mov
out
adc
jl
sahf
scas
loope
mov
fsubs
pop
sahf
pushf
adc
cmp
mov
lds
mov
aas
pop
movsl
sbb
mov
fisttpll
xor
xlat
mov
mull
sbb
out
lahf
lock
idivb
iret
in
cld
sbb
jl
xor
xor
rclb
and
sbb
inc
xchg
adc
push
xchg
mov
dec
lahf
test
inc
xchg
add
pop
pushf
ja
test
pop
fucomp
stc
ja
mov
xchg
xchg
hlt
xor
xor
or
daa
fcomps
hlt
insb
addr16
xchg
iret
daa
jo
rclb
movl
fcmovne
lds
das
orb
and
in
pop
mov
xlat
xor
rcll
push
std
add
xchg
mov
into
or
and
add
pop
lret
cmpsb
setae
inc
enter
cli
push
es
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
mov
sbb
pop
jle
cwtl
jg
jle
or
xchg
inc
cs
enter
aad
jb
pop
pop
out
xchg
stos
jns
xor
or
mov
adc
fsubrp
rcrb
sub
out
popf
cmc
ret
ret
jecxz
int3
subb
mov
xor
pop
inc
int3
les
call
test
mov
push
rclb
cs
ss
out
xor
lahf
mov
insb
idivl
inc
push
jne
ljmp
mov
cltd
leave
ja
dec
adc
imul
std
pop
pop
add
xor
popf
out
repz
push
inc
push
mov
mov
push
adc
cs
lods
sahf
shlb
imul
mov
add
inc
push
aad
push
inc
lcall
xchg
enter
push
stos
popa
adcl
sahf
push
or
push
push
cli
into
imul
imul
rcll
dec
into
mov
jge
pop
repnz
or
shll
and
adcl
sahf
xchg
shll
and
and
jl
jo
inc
fmull
inc
stos
rclb
jg
imul
pusha
push
push
mov
push
aaa
pusha
mov
dec
popw
adc
aas
push
push
lcall
jmp
sahf
jl
and
and
loope
sub
lds
inc
cli
and
pushf
sub
lret
xor
add
cwtl
xor
shrb
xor
sbb
fwait
xchg
sti
xchg
dec
sbb
mov
call
adc
gs
jl
jae
xchg
inc
rorb
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
xchg
add
mov
push
jg
jle
cmpsl
pop
fwait
daa
clc
sbb
mov
jb
and
sub
adc
mov
clc
das
rclb
hlt
cmpsl
iret
mov
cmp
pusha
xchg
mov
inc
aam
cmp
leave
das
fcoms
in
pop
xor
sub
sub
mov
aas
mov
lret
movsb
dec
aas
in
pop
mov
sbb
add
inc
sub
or
frstor
daa
and
clc
dec
dec
inc
pop
jge
sbb
push
pop
jns
icebp
inc
push
or
jns
and
int3
lods
cli
mov
push
pop
and
ret
in
les
icebp
imul
repz
push
testb
les
pop
nop
inc
lds
xchg
scas
mov
fwait
cli
aad
push
mov
out
rcrl
push
outsb
pop
in
ret
and
or
sub
bound
mov
int3
mov
iret
leave
xor
xor
daa
lea
sub
lods
scas
leave
cmp
jmp
fwait
cwtl
xchg
mov
add
or
mov
mov
adc
int
cmpsb
sub
subl
mov
mov
imul
dec
popa
cmc
xor
aam
pop
and
iret
jp
pop
rclb
or
lcall
fdivr
or
fwait
pcmpeqw
lret
insl
aas
popf
jl
push
repz
xchg
inc
ja
lods
add
fdivs
negb
movsb
cs
sbb
cmp
mov
and
roll
loope
popf
ljmp
mov
imul
push
inc
fbstp
cwtl
dec
cmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
inc
mov
jle
push
jg
jle
adcl
rol
jbe
jnp
ja
mov
ss
sahf
xor
jmp
in
ret
ja
imul
out
loopne
mov
in
addb
push
hlt
push
push
mov
mov
xchg
adcb
sbb
arpl
xchg
mov
icebp
mov
xor
pop
and
dec
mov
mov
sub
call
ficoms
xor
inc
add
xchg
lds
xchg
clc
mov
mov
ror
pushl
cmpl
stc
ret
mov
jp
add
pavgw
rclb
int
jnp
movsl
or
out
pop
cltd
clc
add
test
jo
sbb
add
adcb
cmp
adc
sbbl
std
out
je
icebp
dec
xor
or
fdivl
inc
test
les
or
fildll
pop
dec
push
jo
popa
enter
ret
push
add
sahf
sbb
fcomi
aam
xor
shll
push
imul
jp
je
mov
cmp
pop
mov
shrb
xor
std
dec
jns
jle
adc
pop
pop
stos
jae
sahf
or
mov
lahf
in
loopne
sbb
testl
adc
ss
push
pop
cs
mov
jnp
inc
enter
mov
push
cld
js
in
sti
cmpsb
fcmovnb
and
mov
je
mov
int3
mov
cmp
loope
mov
and
mov
lock
inc
out
cmp
repnz
repz
pop
fwait
xchg
cmpsl
outsl
rcrb
xchg
mov
pop
push
jb
adc
add
cmpsl
sub
adc
call
pop
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
popa
jbe
add
push
jg
jle
fiadds
test
jecxz
or
or
xchg
pop
pand
jae
in
out
ss
jno
dec
sti
out
inc
xor
mov
dec
gs
or
add
test
stos
mov
jne
adc
stos
jecxz
mov
sbb
lret
mov
xchg
cmpb
inc
mov
xchg
mov
cmp
pop
mov
push
outsb
jne
cld
lcall
lret
pop
out
adc
push
jnp
pop
lret
xchg
adc
sahf
mov
or
push
fdivl
hlt
inc
and
add
inc
lret
in
xchg
adc
mov
sbb
lds
lods
cmp
xor
popa
into
lock
mov
cmp
cld
mov
push
add
mov
fdivl
pop
int3
in
popf
fs
pop
ret
pop
fldenv
sti
xor
in
xchg
dec
push
sbb
pop
dec
aam
mov
inc
pop
cltd
mov
scas
add
xor
xchg
mov
cmp
adc
gs
addb
sahf
mov
and
out
rcrl
repnz
and
sahf
xchg
aad
std
inc
or
adc
pop
fs
movsl
imul
fwait
xchg
jmp
lods
cmpsl
inc
cmp
sahf
push
xor
fisttpl
pop
add
cmp
mov
or
push
pop
xchg
pushf
cmp
stos
mov
jbe
stc
movsl
pop
lcall
insw
dec
addl
aad
popa
inc
inc
jne
fwait
jg
sub
jae
mov
lahf
xor
or
in
and
scas
sub
jnp
pop
xchg
mov
adc
imul
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
movd
jg
jle
mov
sub
cmp
mov
inc
push
xchg
mov
scas
jne
pop
mov
push
mov
xorb
stc
iret
jg
mov
mov
test
psraw
xchg
mov
jno
push
jne
subb
push
cmc
shll
lods
icebp
xchg
push
jno
stos
xor
add
dec
mov
out
push
mov
xchg
sbb
dec
imul
cltd
insl
dec
jle
out
push
fcmovb
pushf
cmp
je
mov
dec
or
adc
xchg
push
pop
dec
inc
mov
rorb
cmc
inc
cmp
icebp
lahf
shr
sub
ja
addl
sti
andb
mov
faddl
ss
mov
faddl
into
add
bound
mov
shl
sbb
jmp
xor
add
push
rcrl
mov
ds
jmp
popf
icebp
aam
dec
fldt
mov
xor
add
bnd
mov
xor
mov
in
add
jno
call
or
pop
jl
adc
push
xchg
mov
mov
add
and
mov
cmp
es
loop
push
sbb
cmovl
or
and
or
aaa
ficoml
pusha
out
add
cmp
push
push
adc
inc
push
fistl
or
sub
test
das
push
xchg
inc
out
imul
pusha
nop
test
jo
mov
call
les
inc
pop
xor
andb
add
faddp
xchg
inc
xchg
cmpb
push
enter
cmp
jo
inc
stc
lds
nop
adc
xor
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
adc
jle
push
jg
jle
jo
xor
pushf
adc
hlt
adc
push
inc
jge
movsl
int
lock
jg
and
jge
sub
es
inc
mov
cmpsb
nop
in
mov
lret
adc
xor
sbb
add
xchg
cmp
mov
bound
fldt
cmp
sub
add
filds
cmpsb
mov
mov
pop
xor
int3
jg
or
adc
cmp
adc
adc
jp
dec
xchg
mov
lods
test
cmpsl
jns
nop
fwait
adc
fsubl
cmp
cmpsb
test
push
pop
mov
aam
pop
push
std
push
pop
or
mov
mov
xor
lds
add
push
mov
mov
sub
fimuls
xchg
xor
into
push
sahf
pop
and
in
adc
or
shlb
shll
inc
pop
mov
sbb
inc
in
pushf
sub
sub
sahf
lret
mov
gs
addr16
cmc
lock
cmpsl
fimull
mov
rcrb
rorb
xchg
imul
xchg
in
or
je
clc
arpl
lret
mov
fs
cmpsl
clc
adc
jge
rcrb
xchg
bound
sub
adc
mov
add
movhps
popa
cmp
hlt
cmp
mov
mov
jecxz
xor
insb
cmp
call
mov
pushf
fimull
mov
in
xor
sub
xchg
and
mov
lods
daa
xor
push
push
out
dec
jmp
popa
push
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
ja
ja
or
push
jg
jle
add
mov
lds
fistps
in
lahf
xlat
fsqrt
js
in
dec
dec
adc
hlt
movsl
xchg
sbb
leave
in
ret
movsl
push
ret
mov
ds
fistps
push
mov
in
mov
js
xchg
xchg
gs
test
and
cmpl
ja
adc
sbb
or
xchg
repz
push
les
rcll
sahf
hlt
mov
push
cmp
ret
fcoml
call
in
xlat
push
icebp
mov
xchg
and
and
jmp
imul
xchg
stc
mov
xor
cld
cld
push
lret
mov
out
add
jge
ficoml
xor
inc
nop
jne
fadd
shll
imulb
in
fs
stos
mov
jae
sbb
push
and
cs
mov
or
std
push
fistpl
jmp
lret
cmpsl
mov
ja
add
sub
aas
xchg
rol
cmp
cmp
xlat
ljmp
test
inc
nop
sub
push
dec
rcrl
xchg
sahf
push
mov
outsb
fdivs
jle
sub
mov
jecxz
rorl
mov
dec
subl
pop
push
push
in
pop
inc
aad
adc
push
sub
dec
int
push
loopne
roll
xor
aaa
scas
in
jp
xchg
decl
mov
test
adc
pop
jmp
mov
mov
and
xchg
push
xor
mov
or
stos
std
stc
arpl
call
mov
out
test
pop
push
fmull
out
dec
lods
test
in
dec
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
mov
or
scas
jg
jle
aad
xchg
cs
incl
sub
test
test
sub
iret
sub
rcr
add
xor
addr16
jmp
ds
cltd
nop
sub
cmpsl
lahf
push
arpl
dec
loopne
and
in
into
cmp
adc
lods
mov
ja
lods
sub
add
ss
mov
scas
gs
lock
sar
adcb
fs
cmpsb
push
mov
dec
daa
cmpsl
sbb
pop
lds
sar
and
test
rorb
hlt
or
movsl
xchg
pop
ret
fld
call
dec
pop
cmp
sbb
ret
mov
daa
mov
arpl
pop
jge
loopne
cmc
and
dec
add
rol
test
xorb
pop
in
xor
mov
stos
rorb
lea
adc
subl
std
push
cld
cli
inc
out
fists
fwait
into
outsl
pop
in
movsb
dec
ss
jg
jecxz
sub
test
add
repnz
xor
add
imul
lds
lahf
pop
xchg
push
pusha
sub
hlt
xchg
js
inc
daa
xor
in
incl
mov
pusha
or
cwtl
adc
out
lret
jl
std
loope
push
push
fisttpl
es
mov
mov
sarl
cmp
test
cltd
dec
push
mov
iret
rolb
js
lret
and
fdivs
sbb
sub
stos
call
push
scas
testl
clc
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
pop
add
aaa
rclb
jle
scas
jg
jle
adc
xor
dec
lods
daa
xor
movsl
mov
xchg
movb
cmpl
lea
push
sbb
aaa
jp
mov
call
rclb
or
pop
insl
lds
xor
outsl
jnp
in
mov
lock
and
stos
sub
mov
jnp
fiaddl
cmpsb
mov
loopne
stc
lods
cmp
sbb
xchg
push
bound
popa
pop
rcll
or
outsb
add
pop
sahf
pop
incb
sahf
mov
or
xchg
cli
pop
outsl
pop
sarb
into
jb
hlt
adc
test
lret
cmpsl
outsl
popf
scas
jle
adc
aas
push
loopne
rcrb
sbb
stos
stos
loop
pop
xor
cmp
mov
jns,pt
push
mov
adcl
mov
cmp
pop
inc
imul
adc
cmp
pushf
dec
rorl
shll
inc
ja
mov
mov
iret
repz
aam
or
mov
rorb
out
xchg
fcmovnu
lcall
pop
stc
gs
sahf
jo
sahf
or
xchg
xchg
sbb
push
ljmp
mov
mov
push
cmc
lret
jle
fisubrs
xor
js
int3
add
and
iret
leave
push
fisubl
xchg
push
push
mov
pop
in
xchg
lods
mov
mov
push
cld
dec
pop
push
jno
sub
xor
mov
mov
stc
mov
xlat
jle
add
out
arpl
or
push
out
shrb
cmp
int3
mov
xor
stos
mov
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
inc
and
roll
adc
jle
jg
jle
mov
clc
mov
jle
push
xor
fwait
int3
ficompl
jle
out
cld
xchg
shrb
xor
insl
add
jo
orb
cmp
jo
loope
inc
mov
test
cmp
loope
pop
rcll
push
xlat
mov
lea
jbe
fstpt
pop
rcl
jge
add
sub
loope
xchg
in
nop
mov
pop
aaa
adc
push
mov
sahf
mov
test
push
fcmovu
fildl
pop
jb
iret
cmp
or
sbb
insb
adc
outsb
jbe
lods
mov
scas
adc
leave
adc
pop
repz
sbb
inc
fldenv
mov
in
jae
lods
imulb
das
mov
pop
idivl
pop
or
stos
dec
cli
outsb
jae
inc
leave
xchg
adc
xchg
push
pop
lcall
inc
mov
jb
mov
in
dec
repnz
add
mov
lods
jg
popf
scas
insb
cmpb
fisubs
or
lea
adc
add
add
push
repnz
clc
mov
sub
fdivrs
sbb
mov
jecxz
les
out
into
push
popa
jge
and
ljmp
jbe
outsb
mov
add
lods
mov
shll
inc
xor
mov
push
test
xor
imul
icebp
sub
imulb
cmp
gs
mov
sahf
insb
jne
sub
roll
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
mov
jle
scas
jg
jle
jo
mov
dec
xchg
xor
popa
mov
inc
sbb
lds
loope
mov
ret
insl
xchg
or
fisubrs
xchg
pop
xchg
add
mov
shr
mov
mov
insb
inc
cmp
dec
adc
mov
mov
cld
sahf
xor
fstps
push
mov
sub
and
cmpsb
cmp
mov
repz
aam
mov
sub
sbb
dec
pop
stc
fxch
pop
out
repz
mov
inc
jne
mov
addr16
adc
popa
jge
fisttpl
sbb
sub
jbe
dec
dec
icebp
int3
jl
cwtl
mov
ror
mov
sahf
daa
or
out
pop
js
mov
push
outsl
mov
addr16
and
stos
mov
xchg
mov
xchg
or
push
mov
dec
cmpsl
daa
xchg
add
or
xchg
rorb
add
insb
shrb
insl
sub
mov
mov
or
and
mov
sbb
lods
jmp
push
cmp
xchg
fwait
inc
int3
cltd
mov
rcrb
out
loop
scas
or
jb
or
sub
out
sbb
negl
push
sar
inc
clc
xor
and
lcall
test
cli
add
jmp
add
hlt
pop
call
jge
js
enter
stc
dec
push
sarb
ret
push
cmp
inc
and
push
cmp
enter
ss
pop
pop
repnz
xchg
cld
mov
negl
aaa
jg
divl
outsb
mov
adc
mov
xor
add
jmp
jl
mov
mov
jge
fldl
call
or
adc
scas
jg
jle
or
outsb
insl
inc
les
add
xor
xchg
or
inc
scas
and
push
mov
pop
add
xor
jmp
lahf
idiv
or
xor
icebp
sub
push
in
lidtl
lret
jge
movsb
iret
fxch
adc
test
push
stc
out
inc
insl
js
pop
and
xchg
jns
cs
mov
rcrb
inc
push
push
jge
adc
movsb
dec
outsl
xchg
or
mov
sub
inc
sub
xchg
out
mov
cltd
addb
imul
rcrl
adc
inc
fisubs
pop
movsb
mov
jecxz
dec
xchg
outsb
mov
lods
leave
adc
xor
mov
test
scas
test
cmp
xlat
cwtl
push
jl
pusha
and
lods
mov
adc
lret
out
aas
cld
push
lock
mov
dec
inc
add
sbbb
xor
pop
repz
gs
fcoml
outsb
sbb
pop
pop
jmp
pop
xor
push
push
mov
imul
call
inc
pop
adc
aam
cld
jg
pop
add
and
or
shufps
mov
push
push
or
ret
fwait
jmp
sub
enter
ret
lcallw
sub
xchg
fistpll
lret
or
loope
sub
inc
xchg
jge
ss
out
mov
stos
dec
call
inc
push
and
stos
push
xchg
jl
cltd
icebp
ret
outsb
repz
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
cmp
jnp
in
mov
dec
nop
and
mov
sar
push
out
dec
fdivrs
je
xchg
daa
or
pushf
or
xchg
lds
xor
mov
rorl
or
sbb
xchg
mov
call
in
lret
xchg
cmp
mov
jle
sub
xlat
test
inc
ficoms
pop
inc
cmpsb
xor
inc
sbb
adc
xchg
fsubrl
enter
dec
mov
jle
lods
lret
daa
xchg
adc
repnz
ljmp
jae
cmp
jns
data16
stc
inc
out
mov
mov
ret
push
das
lcall
fbld
leave
mov
fidivrl
lods
fmull
and
jle
mov
lahf
sub
sub
mov
xchg
data16
es
in
repz
icebp
ss
in
pop
out
gs
lcall
hlt
mov
pop
arpl
and
leave
enter
add
and
es
sub
mov
ss
aam
push
push
int3
jl
and
push
mov
aam
test
jne
add
and
shrb
jne
bound
call
and
push
shlb
orb
mov
adc
lock
push
mov
call
movsb
addr16
inc
sbb
pop
cltd
mov
jle
aaa
inc
sub
ja
cmp
out
ret
fdivr
mov
push
add
loopne
pop
push
aad
int
leave
push
or
add
stc
jns
jo
cld
xchg
scas
inc
int3
leave
xchg
mov
add
call
jmp
scas
or
xor
mov
out
add
push
jle
scas
jg
jle
mov
out
orl
mov
je
mov
js
mov
in
and
adc
xor
cwtl
cld
scas
pop
aad
xor
dec
mov
lret
jnp
jns
das
popa
jb
mov
mov
mov
sbb
and
xchg
xchg
xchg
movsb
push
mov
add
cmpsb
dec
clc
cld
andb
push
test
imul
xor
lea
sub
add
sub
rcrl
es
inc
dec
in
and
and
sbb
mov
jno
pcmpeqd
mov
rclb
lcall
mov
xor
inc
outsb
insl
insl
and
outsl
xchg
adc
movsl
mov
add
jb
xor
jb
aas
xchg
js
push
stos
add
mov
sbb
mov
xchg
xor
mov
mov
sbb
pop
repz
push
mov
ljmp
aaa
ss
shll
test
cmp
icebp
icebp
sub
mov
outsb
pop
and
mov
aas
enter
inc
push
sarb
pop
mov
enter
adc
add
xchg
xchg
and
fdivl
adc
push
icebp
dec
stc
inc
push
lods
cmpl
clc
jae
js
lahf
jecxz
sub
xor
or
add
adc
cwtl
and
aaa
mov
imul
push
ds
jl
imul
enter
adc
in
sub
movsb
cmp
xchg
and
cmp
ds
pop
xor
pop
sbb
inc
call
inc
in
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
mov
int
inc
icebp
sarl
mov
mov
dec
jb
mov
jge
ss
cmpsb
out
les
or
dec
jno
push
scas
fdivrs
mov
pushf
mov
lock
out
pop
js
fs
mov
mov
push
scas
test
sbb
mov
out
jl
inc
mov
test
popa
xchg
mov
dec
inc
dec
xor
cs
cmpsl
cmp
sub
pop
out
mov
cmpsl
roll
xlat
mov
jg
sbb
jmpw
nop
movsl
inc
scas
sbb
leave
in
mov
subl
icebp
push
lods
mov
sbb
fdivr
int
es
lock
stos
rol
js
in
and
imul
lret
cmp
lods
insl
xorb
jge
sbb
xchg
jmp
lret
lret
stos
stos
iret
and
in
cltd
inc
sbb
push
and
bound
fisubrs
pop
push
sbb
xchg
mov
xchg
sbb
scas
xchg
loop
sbb
mov
jl
int
fcoml
out
outsb
xchg
loop
in
gs
lcall
pop
pushfw
aas
or
bound
xor
sbb
in
adc
sub
testb
jmp
lahf
ret
aam
test
adc
pop
jmp
dec
popf
test
jge
notl
aam
pop
lret
cs
xlat
rcrl
test
fsubrs
movsb
push
add
lods
sbb
leave
nop
pop
mov
inc
rolb
xchg
mov
jb
stc
add
inc
test
aaa
lods
xchg
in
test
or
es
add
adc
mov
or
shr
add
add
lahf
dec
insl
dec
imul
and
loopne
je
and
jle
scas
jg
jle
repz
in
inc
nop
pop
int
mov
jb
mov
pop
aaa
push
aam
mov
mov
and
loopne
cld
cmpsl
sahf
pop
nop
jmp
fsubp
or
push
dec
sub
mov
xchg
das
clc
fnstsw
xchg
jp
and
sahf
rorl
aad
xchg
rcrl
in
inc
fdivr
jns
notl
andb
sbb
setnp
sbbb
or
jmp
and
iret
push
adc
shlb
dec
sbb
das
mov
cmp
cmp
lahf
inc
push
std
in
xlat
enter
aam
fcoml
mov
lock
insl
jno
mov
and
loop
mov
mov
and
rcr
or
push
lahf
nop
mov
fdivrs
das
dec
jmp
cmp
mov
xchg
pop
aam
jmp
or
loop
mov
cs
xchg
test
icebp
ds
pop
je
popa
pop
test
xlat
xchg
mov
stos
dec
xor
add
int
add
lahf
inc
pusha
or
aaa
loopne,pn
scas
mov
leave
iret
sbb
sub
sub
out
loopne
sub
cmpsl
xchg
fisttpl
xor
mov
xchg
les
call
in
bound
fs
adc
xor
sbb
lea
stc
jp
scas
daa
out
pusha
aad
rcrl
and
sub
add
mov
push
and
jecxz
mov
aam
mov
les
or
dec
cmpsb
rclb
addr16
lcall
add
or
arpl
decl
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
jmp
sbb
cltd
jg
jle
pop
xchg
adc
xor
jge
xor
jbe
sub
stos
and
shlb
inc
add
jae
and
mov
movsl
test
adc
cmp
loopne
jae
pop
xlat
mov
jae
cli
std
flds
mov
scas
mov
xor
inc
imul
lret
rcrl
fs
sub
xlat
jns
mov
sahf
jg
fadd
jecxz
ret
sbb
mov
jo
and
ss
js
mov
xchg
insb
xchg
sahf
icebp
cmp
lods
mov
leave
mov
push
addl
xlat
xchg
sub
sahf
ds
jno
lret
sahf
pop
pop
jge
or
ja
push
mov
lods
push
sub
push
loope
std
inc
push
mov
loop
aas
mov
inc
jnp
loope
outsb
lahf
and
lahf
jge
aam
insl
stos
icebp
mov
daa
pop
insl
dec
loop
xchg
jg
adc
add
sub
dec
fnsave
push
xchg
and
imul
sub
sbb
fnstenv
xor
movsl
in
ret
adc
icebp
dec
dec
xchg
call
je
ljmp
sub
test
jle
cmp
mov
xlat
jg
popf
inc
xor
xchg
jns
nop
jmp
jl
cmp
xor
je
jb
push
fstps
xchg
cli
mov
push
mov
ja
sub
sahf
mov
ljmp
test
xchg
stos
xchg
xorl
andb
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
int3
cmp
std
sbb
cltd
jg
jle
imulb
enter
xchg
jmp
adc
mov
filds
ljmp
mov
loop
test
add
pop
aaa
shl
sbb
push
mov
popa
iret
cwtl
rolb
lock
repnz
aam
cmpsl
leave
stos
test
clc
mov
shll
and
jbe
iret
xor
lods
push
mov
sub
mov
loopne
sarb
icebp
sahf
jns
jge
loop
cmp
fdivl
dec
std
aas
das
mov
mov
inc
xor
sub
inc
addb
push
into
fwait
rorb
or
or
hlt
pop
or
in
xchg
ficoms
mov
lods
out
ljmp
dec
shrl
pop
les
jae
and
adc
cld
jp
jb
scas
aam
jmp
push
jne
shrl
sarl
push
pop
lahf
jb
mov
push
mov
test
mov
sti
or
mov
fildl
adc
orl
mov
cwtl
negl
adc
or
outsl
int
daa
js
les
jbe
fildl
jl
inc
xor
out
xchg
xchg
fstl
xchg
jg
push
sub
test
push
xchg
inc
or
mov
int
dec
bound
repnz
hlt
jnp
mulb
push
add
sbbb
pop
pop
push
repnz
in
sbb
jp
or
xor
mov
std
inc
adcb
sti
push
repnz
lahf
jae
roll
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
out
xchg
and
jle
xchg
jl
jle
fcompl
aam
dec
dec
adc
cli
pop
shll
out
mov
mov
push
call
or
ljmp
cli
cmp
sar
or
outsb
sub
cmp
push
add
imul
mov
mov
dec
xchg
mov
shlb
arpl
aaa
xlat
sub
inc
mov
mov
hlt
dec
sub
mov
and
cmp
mov
xor
cmp
fcoms
out
push
xchg
addr16
popa
fstl
js
xchg
outsl
cltd
nop
clc
cwtl
bnd
cwtl
mov
popa
mov
sub
fucomip
bound
rorb
iret
into
mov
sbb
ror
xor
cmp
mov
test
das
jbe
in
das
imul
mov
push
inc
xchg
popa
cmp
or
out
test
mov
nop
addr16
pop
das
sub
cwtl
clc
lret
cmpsb
in
jb
sub
fmull
cmp
jle
dec
shlb
cmp
loop
add
sub
mov
or
pop
imul
outsb
jle
repz
cmc
pushf
pop
sub
jae
inc
add
stos
pop
ja
and
jbe
pop
adc
pop
imul
mov
clc
mov
mov
fstps
bound
mov
scas
lds
mov
pop
mov
cmp
ret
fildll
jle
inc
xchg
fldl2t
jnp
insb
icebp
pop
xor
pop
sub
push
js
test
jmp
pop
insb
inc
scas
daa
lods
ljmp
push
cmpsl
incl
aam
out
add
inc
push
jbe,pt
add
ss
xor
inc
mov
shll
push
lcall
or
mov
or
imul
clc
loop
and
sbb
repnz
push
fsubr
aam
sbb
mov
lds
out
adc
jo
arpl
cmpsb
pop
dec
test
jg
imul
fcmovne
inc
negb
lds
push
xchg
arpl
adc
lret
lock
test
and
fwait
mov
sub
mov
sbb
out
mov
cmc
adc
or
dec
out
jbe
rcll
sahf
pop
push
add
xor
loope
out
das
cmc
int3
add
mov
xchg
js
mov
test
out
lahf
mov
fsub
inc
add
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
pop
movsl
dec
jb
and
jle
mov
or
ss
and
mov
sbb
sbb
outsb
ja
dec
lds
cmp
push
xchg
pop
pop
movsb
sub
sbbl
lea
cmp
jge
mov
jne
mov
pop
jbe
or
shr
add
or
mov
jle,pt
clc
pop
cli
mov
cmpl
loop
pop
into
jp
dec
sbb
jg
adc
pop
or
sbb
iret
sub
lret
mov
cmpsl
pop
popf
repz
jl
inc
inc
mov
push
xchg
js
adc
daa
jbe
ljmp
sbb
cld
lcall
ret
cmp
dec
cld
mov
pushl
jns
pop
adc
and
push
shll
push
and
mov
insb
insb
fmul
scas
sbb
pop
dec
ljmp
adc
mov
xchg
stc
push
out
aaa
mov
mov
or
scas
cltd
out
pop
cld
daa
inc
adc
jmp
outsl
cmpsl
push
jmp
jo
mov
lock
xchg
sbb
rcll
mov
add
sbb
sbb
and
orl
and
dec
inc
into
sub
imul
outsb
das
out
add
ret
mov
and
ja
push
jns
pop
enter
inc
jno
cmp
inc
iret
sub
jmp
stos
stc
or
sahf
lock
in
ror
cmp
push
mov
fwait
mov
shlb
shl
cwtl
std
mov
loope
call
xchg
jge
jge
in
or
movsl
mov
xchg
sub
adc
mov
test
xlat
pop
dec
shrb
push
fwait
push
sbb
pop
pop
ja
imulb
popf
xor
movb
dec
mov
mov
push
sub
jecxz
mov
test
inc
and
pushf
dec
cmpsl
cltd
ss
or
mov
add
add
jl
shrl
dec
xor
xor
add
mov
clc
sub
ffreep
cmpsl
orl
jge
cmpsl
or
shlb
mov
in
cmp
arpl
pop
js
outsb
ljmp
mov
imul
dec
fwait
and
cwtl
add
fs
adc
jle
add
div
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
add
mov
jp
pop
insl
fdivrl
ljmp
popa
mov
pop
sbb
adc
inc
dec
fstps
lock
sbb
sub
push
lods
cmp
movsl
jb
and
inc
and
pop
jge
xchg
shlb
daa
insl
es
xchg
enter
insl
xor
jae
aad
pop
scas
inc
sbb
mov
xor
add
out
inc
mov
xor
mov
fmuls
js
push
push
mov
pop
xor
icebp
lods
stos
and
xor
ret
das
rcrl
pop
daa
movsb
mov
jnp
pop
inc
insb
arpl
or
mov
mov
push
jne
lods
cwtl
cmpsb
icebp
in
cs
mov
bound
cmp
xchg
sti
pop
scas
loop
test
pop
repz
jmp
mov
imul
adc
shrl
push
sahf
dec
aaa
rcrb
repz
shrb
pop
pop
sti
cmpsb
or
adc
mov
enter
lahf
add
dec
add
shll
lods
mov
or
repnz
inc
rcrb
or
aas
hlt
pop
inc
adc
das
stos
push
or
in
lret
jp
test
push
xor
cmp
push
mov
je
bound
push
subl
cmp
inc
mov
dec
test
pop
mov
out
mov
inc
cmp
inc
add
icebp
sub
lret
sahf
dec
inc
mov
pusha
pushf
out
xchg
psllw
inc
xor
dec
andb
add
push
adc
nop
cmpb
stc
sub
in
movb
pushf
or
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
les
jle
outsb
jg
jle
sub
inc
clc
add
mov
sub
repnz
call
call
push
pop
xchg
lret
decl
mov
rcl
test
scas
imul
je
cmpsl
sub
cmp
add
mov
push
nop
aam
cmp
mov
sbb
aam
aam
int
data16
push
add
stc
aad
sub
in
inc
jge
lods
jge
notl
js
sbb
rol
ficoms
inc
mov
xlat
pop
inc
dec
and
rolb
mov
dec
pop
fidivrl
mov
jl
data16
lock
stos
nop
arpl
popa
jo
insl
ljmp
pop
leave
inc
out
fadds
sub
stos
mov
dec
sbb
stos
aas
push
jbe
cli
xchg
repz
add
push
dec
xlat
xchg
dec
gs
jns
push
inc
push
jle
cmpsb
jmp
pop
inc
inc
ret
mov
pop
xchg
sbb
xchg
mov
loop
mov
cmp
pop
imul
mov
sub
push
aaa
mov
fisubrl
push
nop
ret
in
insl
and
les
mov
sti
cmp
cwtl
jle
clc
aam
mov
mov
jns
adc
mov
mov
mov
stos
xorb
popf
idivl
mov
es
mov
fwait
inc
jno
test
dec
stos
adcl
loop
sbb
jle
push
and
stc
or
loopne
dec
arpl
pop
in
mov
pop
mov
mov
sbb
test
dec
jae
out
pop
inc
fisttpl
and
out
cmpsb
lea
js
pop
mov
inc
push
cmpsl
xor
ja
or
popa
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
add
jle
outsb
jg
jle
fsubl
out
dec
inc
xchg
sbbb
dec
mov
sahf
idiv
sub
sub
push
insl
mov
rol
lock
cs
sub
lret
ja
xchg
adc
out
push
jns
pop
aam
xor
dec
push
xchg
arpl
xorb
lea
fwait
or
scas
push
jg
push
xor
sub
popa
push
jg
sub
push
ljmp
insl
aam
cld
or
jp
mov
fimull
mov
pop
int3
adc
jae
in
push
xchg
push
loope
push
pusha
xchg
insb
gs
test
inc
bound
mov
adc
insl
ret
sub
sub
outsb
jmp
sub
in
jl
test
push
shlb
ja
cmp
dec
scas
rcl
xchg
std
loop
ja
or
popl
outsl
sbb
pop
xor
movsl
and
stos
fsubs
cmp
mov
out
sbb
and
cmpsb
push
fdivrs
nop
fcomps
xchg
outsl
rcrb
mov
jp
jo
pop
and
fsub
pushf
and
rclb
jmp
shr
dec
ret
pop
enter
adc
sub
js
and
pop
mov
xor
add
pop
out
ljmp
call
jae
mov
loopne
popa
rcll
push
and
je
inc
stc
repnz
mov
mov
js
enter
mov
jb
adc
dec
outsl
jns
js
popf
push
jl
jno
jb
lods
push
scas
sub
sub
test
cmpsl
push
jae
stc
dec
scas
adc
ret
aad
jl
or
xchg
test
scas
mov
pop
sbb
xor
aad
sbb
ret
scas
fwait
gs
inc
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
pushf
movsl
movsl
sub
push
jg
jle
jp
and
mov
rcl
sbb
pop
orb
push
mov
dec
cmp
ficoms
inc
fisttps
mov
lods
dec
ja
andl
fstpl
inc
rcrl
sbb
dec
and
sub
adc
xchg
lods
push
orl
mov
push
jmp
enter
lcall
dec
in
shrb
mov
lcall
test
sub
sub
xchg
scas
jne
data16
push
pop
test
mov
in
cmc
mov
nop
je
dec
xlat
or
jbe
in
add
dec
push
cmp
mov
sub
adc
xor
jecxz
fdivrl
wbinvd
out
int
aas
sbb
inc
jno
mov
add
xchg
das
jo
bound
mov
movhps
xchg
mov
mov
jp
int
xchg
pusha
pop
add
lds
popf
cmpsb
push
push
pop
jnp
nop
xchg
mov
sbb
notl
mov
push
mov
add
inc
dec
jg
js
xor
xor
add
std
xor
mov
dec
cld
cmpl
adc
or
shll
sbb
fxam
cmpsb
mov
mov
aad
or
push
outsb
xor
xchg
mov
add
dec
movsl
sahf
out
cmpl
nop
mov
rorl
sbb
hlt
sbb
cmp
jbe
fbstp
xchg
jmp
test
sti
dec
pop
lahf
mov
pop
out
shll
mov
loop
jnp
pop
mov
inc
int3
xor
fucomi
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
cld
mov
jle
push
jg
jle
or
je
inc
aad
insb
sub
movsb
mov
rclb
jbe
cmp
xorl
jnp
sub
adc
jno
mov
xor
cmpsl
test
leave
fldenv
pop
xor
add
mov
dec
imul
mov
mov
adc
sbb
jnp
in
cld
mov
mov
mov
jl
cmp
mov
and
pop
nop
ja
mov
jo
ja
ds
icebp
inc
aad
mov
xor
lahf
js
adc
repnz
fsubrs
std
jmp
addb
and
int
add
mov
and
cld
sbb
call
mov
daa
rolb
push
and
cmpsl
aam
shlb
and
jp
cld
inc
and
cmpsl
xchg
dec
or
pop
and
jecxz
out
pop
mov
scas
add
sub
inc
incb
push
xor
sahf
cmp
cs
shl
add
adc
pop
shl
loopne
sbb
scas
pop
pushf
sbb
scas
inc
in
cmp
jnp
sbb
fs
lret
inc
in
cmpsl
out
es
cli
dec
fnstcw
test
insb
cmp
or
mov
mov
add
xchg
sti
test
inc
mov
cmp
cmp
push
mov
imul
dec
add
mov
into
xchg
pushf
not
mov
push
cwtl
out
sub
fucomi
inc
je
inc
jb
mov
out
mov
jmp
jl
pop
jmp
fsubl
fcmovne
imul
or
mov
add
nop
jg
shr
in
sbb
inc
or
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
sbb
jle
push
jg
jle
cmp
mov
inc
popa
out
inc
popa
push
nop
push
in
mov
mov
stc
in
xor
pop
repnz
xchg
std
push
inc
xchg
push
popa
int
iret
inc
loopne
xchg
pop
aam
inc
jnp
jecxz
lret
xchg
adc
add
inc
cld
bound
push
or
adc
popf
call
into
xorl
ret
sahf
inc
mov
mov
gs
in
mov
or
inc
push
xlat
mov
movsb
push
inc
ret
fists
xchg
jno
notb
scas
int
lock
ss
pop
fldcw
inc
sub
mov
movsb
and
fucom
arpl
insb
inc
dec
pop
and
fistpl
mov
mov
sub
cmpsb
jle
popa
sbb
ja
sbb
fsubrl
cmpsl
cmp
mov
ficompl
xchg
repz
cmp
and
les
inc
mov
pushf
push
imul
mov
loopne
jns
test
sbb
fdivl
pop
cmp
mov
xor
mov
cmpsb
jg
cmp
mov
jmp
les
push
cmp
movsl
popa
mov
adc
push
add
mov
in
xor
lahf
inc
aaa
jg
vpsraw
jmp
add
loop
popf
xchg
or
ds
xchg
std
mov
mov
jp
inc
jecxz
aas
push
sub
add
dec
scas
fidivrl
jae
mov
inc
outsl
mov
inc
push
cli
pop
call
cmpsl
push
jge
pushf
pop
jecxz
insl
mov
mov
dec
negl
fsubl
and
fcoml
in
cltd
xchg
mov
mov
pushl
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
xor
in
inc
aaa
jle
push
jg
jle
add
subl
xchg
cltd
mov
outsb
movsb
rorl
repz
fisttps
jge
pop
call
test
add
push
sarb
mov
jecxz
aad
sti
outsb
xchg
aas
add
in
xlat
jg
xchg
cmpsb
arpl
sub
add
jb
or
cmp
out
pop
scas
sub
testb
dec
mov
mov
orl
and
mov
scas
test
fucomp
sub
xor
push
sbb
jge
inc
lret
adc
pop
jp
loopne
sahf
int
test
daa
int3
add
sub
repz
sbb
dec
cli
cmp
cmpsl
sub
xlat
fwait
mov
cmp
mov
es
push
xor
adc
rcrb
daa
addr16
push
xor
pushf
push
inc
xchg
mov
imul
xchg
jp
fwait
addl
fidivl
xor
incb
xchg
jp
fimuls
mov
out
ljmp
pop
repz
bound
lret
lcall
out
sub
lahf
movsl
aas
dec
or
clc
imul
mov
lret
jecxz
popa
bound
fdivrs
es
ret
test
mull
jnp
enter
mov
je
popf
sub
sbb
add
stos
daa
out
call
flds
call
cmp
aaa
aas
jle
out
push
test
cmp
imul
mov
inc
leave
lods
insb
inc
mov
jne
insl
fcompl
push
jg
pop
lahf
and
lret
lock
ja
dec
sbb
mov
loopne
test
repz
add
hlt
pushf
dec
mov
inc
and
and
jle
jg
jle
incb
in
cmp
fwait
js
loope
int
mov
icebp
jmp
push
sbb
arpl
cld
fbstp
xchg
inc
imul
imul
sti
and
imul
test
cs
cli
mov
imul
punpckhwd
mov
xor
lret
in
and
movsb
xchg
lea
test
cmp
jnp
lea
mov
or
cmpsl
enter
cld
jge
pop
pop
out
mov
ret
call
mov
push
ror
std
pop
add
aas
mov
flds
cmp
inc
mov
test
push
pop
mov
adc
out
int3
mov
cld
cld
ffreep
bnd
push
test
cltd
jo
mov
dec
lahf
dec
mov
loope
pop
pop
in
or
js
mov
aas
and
aam
lret
test
mov
mov
add
xlat
sub
call
popa
jle
and
das
xchg
jb
popa
pop
out
daa
pop
mov
mov
inc
aam
mov
add
aam
shl
fwait
int3
adc
test
pop
inc
in
lock
add
sbb
adc
mov
push
mov
sbb
fldenv
fs
inc
das
cmp
adc
sarb
sbb
jne
call
sbb
pop
push
push
xchg
aad
subl
int3
jnp
push
push
push
cwtl
and
sahf
add
and
test
xchg
fstps
in
mov
lret
jg
sbb
je
jmp
or
ja
test
dec
adc
mov
inc
pop
icebp
int3
and
xchg
xchg
fisttps
cmp
loope
inc
call
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
or
inc
nop
icebp
xor
push
jg
jle
sahf
je
int3
add
int
sbb
sbb
jo
push
mov
lods
sub
dec
sub
pop
cmpsl
cmp
pusha
mov
fisttps
stos
dec
fistpl
test
sbb
mul
and
cwtl
xor
sti
cs
inc
mov
ljmp
test
mov
iret
loopne
jecxz
in
push
adc
dec
adc
mov
test
shl
jne
mov
or
pushf
xlat
fwait
lds
and
mov
imul
add
mov
rolb
movsb
dec
push
idiv
out
sbb
std
sbb
dec
lcall
jae
and
or
mov
cmpsb
pop
aam
mov
imul
sub
inc
loope
jl
pop
inc
movsl
fcomi
pusha
repnz
aad
insl
shrb
mov
add
and
mov
ret
dec
pop
sbb
out
push
mov
mov
push
jmp
dec
adcb
sub
jnp
xchg
add
aam
xchg
js
fstl
xchg
jl
stos
imul
leave
lahf
jp
xor
decl
out
jo
mov
mov
nop
mov
inc
and
dec
insb
pop
adcb
clc
movsb
mov
arpl
aaa
and
sahf
bound
das
jae
pop
add
mov
andl
outsl
clc
fstps
push
pusha
pop
inc
shrl
fmulp
pop
mov
jp
fwait
cmp
push
cmpsb
leave
mov
pop
mov
sbb
cld
jbe
jmp
pop
pushl
pushl
jmp
push
mov
dec
sub
enter
dec
sbb
push
jg
jle
mov
cmp
xchg
stos
dec
xchg
sub
ds
push
shr
nop
and
jge
into
ret
sub
mov
test
repnz
insb
pop
or
pop
mov
xchg
hlt
cmpsb
lcall
sbb
ljmp
jbe
jnp
mov
lods
pop
cmp
mov
ljmp
pop
outsl
nop
dec
call
adc
mov
mov
jge
imul
mov
cmp
inc
mov
mov
scas
push
sub
scas
cmp
xlat
imul
test
hlt
and
stc
test
cmp
push
repz
inc
lahf
repz
dec
in
mov
je
dec
pop
xor
push
das
aaa
xchg
cmp
orb
outsl
cmp
dec
sub
imul
mov
dec
das
jnp
xchg
bound
lcall
loopne
inc
pushf
or
packuswb
and
jnp
xchg
adc
test
inc
pop
mov
fidivl
jmp
xor
sbb
addr16
jg
push
movnti
and
mov
and
pusha
xchg
frstor
xchg
push
cmpsb
inc
add
das
mov
xor
movsl
loop
sahf
inc
sub
push
test
push
movsl
add
sub
lcall
xchg
pop
je
cmpsb
cld
add
shlb
outsb
scas
inc
xchg
mov
push
lds
int
repz
out
xchg
jbe
mov
lret
push
lcall
xchg
cmpsl
addr16
lock
cmp
sub
jmp
xchg
je
push
jbe
pop
ljmp
leavew
filds
inc
pusha
add
xor
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
addr16
dec
lea
in
pushf
mov
cld
out
rol
pop
or
aaa
insl
xor
mov
mov
sbb
mov
xchg
jge
xchg
daa
or
inc
xor
ds
movsb
pop
sbb
test
xor
adc
xchg
xchg
jle
dec
pushf
sbb
in
mov
or
test
jmp
xchg
add
jnp
imul
sub
jnp
or
or
data16
pop
in
jle
das
pusha
push
push
lods
mov
ret
add
add
lods
cmp
in
enter
add
mov
mov
in
xchg
les
xor
add
pop
push
lock
fbld
adc
mov
les
mov
movsl
dec
sub
or
es
cmc
pop
push
jns
xor
popa
and
cltd
int3
aaa
xchg
pushl
sbb
mov
scas
pushf
mov
or
pop
pop
pop
outsl
adc
sbb
lods
mov
rcrb
data16
add
pop
cmp
jp
out
push
addr16
dec
jg
mov
or
fmull
aad
add
mov
pop
aam
addl
sbb
notl
loop
and
jge
stos
mov
stos
imul
pop
sbb
jb
and
add
add
add
mov
sub
cmp
lods
sbb
mov
mov
sbb
xor
lea
sbb
es
xor
jb
cmp
mov
sub
inc
leave
adc
jo
adc
sub
cli
jnp
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
dec
cmp
mov
cmpsb
inc
nop
loope
xor
and
scas
push
xor
sarb
jo
loopne
push
test
push
xchg
or
pop
and
loop
adc
sub
jmp
mov
test
ffree
pop
inc
pop
fisubrs
cmpsl
sahf
pop
jno
loope
lcall
jp
jno
test
mov
dec
push
jl
pop
hlt
std
out
jbe
imul
pusha
sub
pop
adc
dec
jecxz
aad
mov
mov
aad
adc
int
inc
or
mov
popa
fiadds
pop
cwtl
pop
or
mov
or
pop
test
xchg
cltd
hlt
inc
je
in
in
pop
or
mov
gs
mov
push
insb
outsb
icebp
cs
std
test
push
shrb
nop
sbb
notb
push
sub
mov
mov
loopne
es
rorb
ds
popa
es
push
push
lods
jle
sahf
mov
and
loopne
nop
shll
mov
add
xchg
xchg
test
pop
xor
popa
or
add
inc
xchg
sub
sub
movsb
jno
popa
cld
daa
xchg
xchg
aam
or
cs
ss
loope
cmp
inc
sbb
loop
inc
push
xor
insl
fs
mov
add
ljmp
pop
repz
repz
jg
gs
test
cmpl
cs
rcrb
xchg
add
std
dec
pop
xchg
dec
xor
pop
jno
lock
dec
pop
cmpsb
arpl
adc
iret
inc
push
aad
sub
fldt
add
mov
rolb
jecxz
inc
jns
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
push
mov
jle
mov
jle
xchg
cmp
fsubp
sbb
sbb
mov
xchg
fwait
fs
pop
cmp
pushf
xchg
mov
hlt
dec
pop
inc
nop
loopne
jae
shlb
jbe
idivl
jnp
aam
lea
mov
jle
push
loope
sahf
push
or
push
insb
jge
cltd
shlb
out
imul
pop
cmp
cld
inc
cmp
scas
sahf
or
dec
js
nop
add
pop
les
add
add
push
jle
jno
fwait
mov
mov
movsl
dec
ficoml
cmpsb
and
test
ficomps
cmpl
xor
xchg
cmpsl
fwait
xchg
sarb
xchg
fdivrl
push
xchg
pop
daa
ljmp
fisttps
or
or
and
and
cltd
idiv
cwtl
into
mov
adc
fbld
mov
pop
jno
mov
or
loopne
push
adc
int
sbbl
aad
mov
xchg
movsb
add
jae
xor
xor
and
push
inc
sti
in
push
xor
hlt
scas
gs
add
jp
sbb
xor
add
mov
popf
cmp
inc
popf
aad
iret
sub
in
jp
ret
into
jbe
divl
sub
cmp
lds
les
jle
dec
cmpsb
cmpb
test
lea
call
mov
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
mov
div
cmp
mov
jle
mov
pop
cmpb
jge
or
mov
mov
xor
push
xchg
xor
adc
mov
test
dec
mov
mov
sbb
lods
les
adc
cmp
push
shr
xchg
cmp
clc
data16
insb
repz
or
adc
dec
jmp
push
cwtl
test
adc
sbb
adc
scas
cmp
movsb
lret
jmp
leave
gs
sahf
fcoms
arpl
lahf
repz
jg
stos
fildll
ficompl
cmpsl
or
mov
repz
pop
and
leave
adc
add
enter
mov
mov
mov
inc
repz
cs
push
pop
cmpsl
push
sub
out
dec
je
lea
mov
fs
pop
jmp
ds
and
push
jecxz
lds
mov
cmp
xorb
xor
jecxz
xor
orb
and
push
jg
and
out
shrb
push
mov
mov
popw
pop
ja
test
mov
fidivl
call
aad
xor
dec
cltd
std
ret
scas
add
push
push
mov
mov
sub
sub
aaa
pop
das
jo
mov
add
or
mov
int
stc
cld
pop
or
mov
mov
dec
nop
xchg
inc
pop
out
test
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
push
inc
or
jg
jle
and
mov
push
fcom
imul
sub
sub
stos
sbb
fcmovb
inc
dec
scas
adc
cmp
dec
sub
ljmp
pop
inc
mov
ljmp
and
lock
pushf
fs
ja
icebp
fisubs
mov
aad
loopne
incb
mov
pop
iret
pop
inc
clc
shll
jne
push
dec
aam
xor
sahf
dec
and
cld
xchg
lahf
fwait
xor
pop
dec
pop
sub
inc
ss
sbb
add
and
pop
inc
data16
jbe
jmp
inc
xchg
lret
inc
lods
add
jno
and
insl
cmc
xchg
jb
jl
pusha
push
dec
xlat
sahf
or
ret
bt
jmp
mov
lret
mov
sbb
push
mov
push
dec
test
pop
jbe
mov
mov
and
jmp
sbb
data16
data16
fsubrl
int
loopne
lods
cmpsb
pop
jecxz
loopne
loope
mov
sar
fcompl
out
add
push
or
cld
xor
mov
xor
mov
push
ficoml
mov
push
shrl
outsl
lea
mov
cmp
jp
add
xlat
mov
add
sbb
and
ja
mov
or
add
pushf
incl
lret
or
pushf
push
in
shl
aad
adc
sbb
test
mov
add
pop
or
pop
mov
xchg
fimull
shl
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
add
jle
mov
jle
xchg
mov
icebp
cmp
pop
movsb
push
push
mov
test
pop
jg
push
inc
push
frndint
or
pop
add
mov
repnz
inc
xchg
jg
cmp
bound
xchg
inc
aad
daa
xor
sti
dec
xchg
mov
out
out
xchg
stc
xlat
xor
mov
clc
mov
xchg
dec
fsubrl
mov
pop
cmpsb
aad
mov
push
popa
and
mov
pusha
mov
or
pop
jp
inc
bound
cld
cmpb
ficoml
aad
les
sub
sbb
push
pop
add
lfs
clc
sbb
out
add
sbb
inc
mov
sub
sub
add
jne
push
lods
test
es
nop
adc
mov
ret
incl
or
ds
ja
xchg
jbe
mov
orb
lahf
arpl
sub
or
popa
pushl
inc
jae
mov
out
fbld
test
sbb
push
mov
xor
out
negl
pop
jbe
or
sub
faddl
lock
sub
sub
stos
add
fstl
fs
jns
hlt
or
icebp
insl
pusha
mov
adc
jb
aaa
aad
push
mulb
lods
sbb
mov
popl
xchg
and
les
std
mov
xor
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
and
jle
mov
jle
xchg
jnp
lock
rorb
xor
aam
int
sub
or
cmpsb
in
mov
xor
pop
pushl
test
add
ljmp
xorl
jo
mov
push
fnstsw
enter
xchg
jmp
fiaddl
cs
xchg
mov
pop
js
pusha
push
xchg
stos
jns
testl
mov
popf
xor
adc
xorb
jl
mov
ficompl
mov
xlat
test
into
loop
pop
call
sub
xorl
mov
loop
in
inc
loop
cmc
test
enter
push
mov
lds
int3
mov
adc
sub
mov
gs
iret
add
push
negl
mov
pop
pop
loop
stos
sub
das
pop
sbb
daa
cmpsl
xchg
daa
lret
jle
lock
stos
in
lods
mov
push
sbb
jecxz
insl
pop
add
loop
pop
sub
adc
fnstenv
lcall
jne
ja
lahf
addl
mov
sbb
out
mov
inc
stos
cmp
xchg
insb
cli
xchg
nopl
aad
test
xchg
ljmp
pop
xor
or
aad
xlat
mov
pop
push
dec
push
pusha
fcmovnb
mov
add
pop
rol
sub
test
sbb
add
pop
pop
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
pop
and
popa
inc
ret
mov
jle
jae
ja
fstpt
fcmovu
push
push
int3
xchg
xor
scas
in
pop
mov
push
sub
xor
lock
xchg
gs
xor
out
cwtl
or
jnp
cld
inc
mov
mov
push
and
mov
jmp
sub
in
jbe
cs
inc
aaa
stc
inc
pop
mov
cmp
sti
mov
push
inc
popf
add
shr
mov
insb
ja
inc
gs
or
daa
dec
or
loope
sbb
xor
lret
adc
fldl
test
cmp
adc
cmp
mov
xor
mov
pop
xchg
dec
fimull
pushf
cltd
and
int3
sbb
in
cmp
cmpsl
popf
add
mov
push
sub
sub
fildl
idivb
dec
adc
xor
jno
cmpb
popf
cmc
rorl
jno
ret
mov
stos
jae
sub
or
push
outsb
mov
cwtl
sbb
cld
push
add
mulb
sbb
rorl
test
cld
push
xchg
mov
pop
jge
cmp
xchg
int3
cmc
repz
inc
imul
xor
jecxz
push
fprem1
scas
popf
xchg
xlat
clc
mov
pop
mov
cmp
mov
add
repnz
sbb
cmc
mov
ljmp
int
rorl
mov
push
cmp
and
add
adc
dec
dec
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
call
xchg
fs
jle
mov
jle
and
rolb
faddl
jbe
xchg
nop
xor
shrl
mov
mov
fwait
lcall
add
or
fld
fs
mov
sub
jg
inc
sbb
jae
rolb
sub
test
aad
insl
lret
push
xor
lea
icebp
cmp
mov
xchg
or
pop
xchg
in
cmpsl
pop
mov
pushf
xchg
sbb
dec
mov
lret
xor
scas
roll
jbe
mov
nop
add
sbb
test
rolb
xchg
dec
mov
vpunpcklqdq
jo
mov
aad
jns
mov
jb
scas
sahf
inc
in
stos
pop
mov
movl
cmp
jo
push
cld
inc
push
les
adc
cmpsl
inc
or
push
jno
inc
sbb
pusha
pop
mov
xchg
adc
in
push
mov
ret
adc
pop
jnp
bnd
mov
fidivrs
rcll
js
pop
pusha
ss
clc
push
xor
push
aam
scas
jge
out
push
cmc
outsl
sub
ljmp
xor
xor
jbe
sub
jae
inc
pop
cli
mov
dec
adc
stc
ret
jns
xlat
shll
xchg
lock
and
push
test
sbb
and
out
icebp
lock
sarb
pop
dec
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
pop
imul
jle
jbe
dec
mov
mov
and
xor
dec
fsubr
stos
push
jne
push
adcl
into
mov
mov
cld
dec
daa
fsubrl
mov
test
scas
addr16
or
inc
jmp
push
mov
inc
cli
bound
mov
jecxz
outsb
cld
dec
sub
push
repz
ret
inc
loope
jae
jns
ret
daa
outsl
pop
adc
arpl
mov
xor
stos
jbe
incb
xor
loope
fbstp
mov
cmpsb
nop
sbb
fwait
jp
pop
out
cld
add
out
sarb
dec
imul
xor
mov
mov
cmpsl
sub
mov
mov
daa
in
adc
bound
lods
jnp
push
adc
ja
sarb
shlb
pop
popa
fbstp
pop
aaa
scas
jle
jo
jge
mov
pusha
push
jg
dec
jo
push
push
stos
xchg
imul
sbb
es
jo
mov
or
ds
push
pop
sarl
mov
dec
imul
and
loope
mov
xchg
and
fstps
loop
out
fstl
jmp
das
xchg
sbb
push
jl
inc
xor
in
fildll
and
sbbl
mov
adc
cmpsl
pop
sbb
cmc
sub
sbb
sbb
mov
jmp
leave
jecxz
test
push
hlt
ficompl
cmp
insl
adc
cli
shlb
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
mov
inc
mov
jle
aaa
and
mov
push
mov
xchg
ret
cmp
lret
mov
xchg
ret
stos
sbb
and
mov
mov
mov
push
and
aad
add
or
test
mov
in
aam
ret
jbe
je
rcr
mov
dec
mov
sbb
lods
pop
push
push
pop
dec
test
leave
repnz
scas
mov
cmp
call
in
cwtl
jno
dec
jae
enter
cs
test
adc
lods
fistpll
loopne
xchg
mov
outsl
mov
inc
out
or
xchg
inc
pop
mov
or
sub
sub
fmuls
xchg
cld
subb
mov
testl
inc
add
les
mov
adc
in
insl
pusha
xchg
cmp
cwtl
pusha
test
addr16
notl
subb
jno
inc
mov
xchg
or
adcb
shrl
bound
and
sbb
inc
jmp
mov
adc
sub
clc
inc
mov
fstps
jbe
jg
adc
lods
dec
cmc
sub
fdivrs
mov
into
outsb
mov
nop
push
pop
je
orb
cmp
push
or
mov
pop
leave
dec
rorl
ja
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
pop
cs
adc
jle
mov
jle
js
in
popf
jl
cmp
fisubl
jge
cmpsl
movsl
jmp
and
lods
xor
clc
jno
xor
movsb
les
inc
out
add
inc
cmpsb
pop
das
push
add
add
pop
cmpsl
aaa
call
mov
std
cmpsb
add
jmp
push
aam
lods
cmp
pop
xor
pop
jmp
jge
pop
icebp
jb
imul
bound
jo
inc
test
sbb
mov
out
hlt
mov
cld
and
hlt
inc
and
mov
in
arpl
jb
mov
pop
fcompl
dec
mov
pop
cli
push
dec
sbb
fistpl
pusha
pop
loopne
testl
mov
sar
aam
add
sub
xchg
push
push
ss
out
mov
xor
pop
dec
xchg
pop
jne
repnz
xlat
xor
pop
je
pop
out
and
in
sbb
mov
push
pop
out
pop
jmp
add
xchg
int
ret
lds
cli
cs
inc
lods
test
mov
jno
outsl
lret
pop
jbe
pop
cwtl
dec
mov
sbb
mov
lods
jns
decb
insb
pop
pop
mov
or
lea
fwait
jge
rorb
inc
stos
roll
mov
or
pop
lods
ljmp
mov
mov
inc
mov
faddp
cli
dec
cli
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
pushf
hlt
jl
lods
lret
mov
jle
mov
test
push
mov
mov
xor
pop
cltd
insb
clc
push
mov
ficoms
fldt
adc
jecxz
das
aam
adc
push
mov
sti
mov
mov
outsb
mov
or
jmp
dec
addb
mov
dec
mov
out
lock
std
pop
mov
movsb
xor
push
jbe
jp
inc
ret
fsts
outsl
xchg
adc
pusha
jne
gs
ds
lahf
mov
mov
aad
jns
fldl
jmp
inc
cmc
inc
mov
jbe
out
lds
sbbb
mov
xor
aas
mov
lea
ljmp
cltd
jae
sbb
test
fldt
xor
loopne
add
dec
cmpsl
jo
xorl
movsb
adc
ljmp
out
and
inc
fs
mov
mov
inc
test
pop
sub
shl
jl
popf
or
test
mov
push
mov
repz
jae
mov
fnstenv
repz
sub
jnp
or
adc
sbb
cwtl
inc
add
mov
cmp
mov
xlat
push
lahf
cmp
movsb
jns
xchg
mov
fimuls
mov
subb
push
nop
xchg
clc
lret
add
sbb
repnz
lahf
cmp
loop
mov
mov
add
add
add
push
push
jl
ljmp
enter
jg
jle
enter
dec
out
test
push
mov
dec
dec
sbb
inc
pop
lret
repz
in
jo
xorb
mov
inc
fdivl
xor
mov
xchg
iret
and
push
xchg
xchg
inc
movsl
jae
cmp
push
cmpsb
push
shll
mov
sub
iret
or
test
adc
std
adc
add
sahf
in
je
sub
pusha
xlat
adc
push
cmp
movsl
das
jecxz
add
in
rol
aam
jge
and
fnstsw
sbb
push
sbb
adc
dec
repz
lock
loope
xchg
dec
cwtl
lds
popf
inc
cmp
mov
adcb
fwait
xchg
aam
mov
xchg
loope
pop
cmp
icebp
fiaddl
mov
outsb
jle
lret
js
in
jae
and
cwtl
out
ficoms
in
mov
xchg
mov
call
or
ror
sub
daa
sub
jmp
mov
aaa
pop
popf
ss
test
outsl
cmp
mov
sbb
test
out
std
sbb
push
ret
xor
adc
enter
ss
pop
les
add
and
xlat
xor
cmovo
in
xchg
insb
xor
imul
mov
ss
stc
mov
outsb
xor
sub
add
push
or
std
imul
push
pop
inc
aas
daa
mov
lret
nop
sbb
imul
mov
mov
sub
jmp
and
xor
inc
push
inc
test
jle
mov
jle
push
push
and
dec
movsl
fs
in
test
ja
add
cmp
bnd
lcall
mov
and
cmp
mov
loope
cli
xlat
jmp
loopne
int
jecxz
neg
cmc
mov
sub
mov
mov
fcoml
out
adc
imul
int
fstpt
pop
shrl
mov
addr16
test
sahf
lret
mov
clc
push
dec
push
pushf
push
loopne
jp
repz
imul
aad
jnp
ficoms
mov
jno
mov
sbb
aad
ficoml
test
sbb
popf
cs
cltd
adc
rcll
lret
mov
jge
xorb
setge
pop
mov
jb
in
add
push
sub
addr16
cmp
sub
xlat
loop
inc
pop
or
xchg
pop
dec
mov
lods
mov
lods
or
arpl
icebp
fcmovbe
psllq
arpl
jb
into
pop
mov
mov
jl
push
sbb
out
cmpl
scas
adc
stc
lret
dec
and
or
mov
hlt
xchg
pop
lea
in
mov
sbb
scas
push
dec
adc
loop
lret
mov
mov
jbe
addr16
xor
xor
dec
push
mov
lret
push
push
or
mov
push
cmp
adc
push
xor
and
sub
or
fcmove
mov
pop
xchg
jo
cmp
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
es
loope
jle
mov
jle
scas
enter
and
adc
jl
pusha
push
test
lock
outsb
push
push
fstps
lods
add
out
outsl
jmp
xor
call
jle
mov
test
das
scas
cwtl
inc
sahf
hlt
mov
jne
sahf
pop
fmul
leave
incb
fdivrp
pop
sbb
stos
leave
lcall
popa
push
int3
out
cltd
or
sbb
push
dec
mov
xchg
push
mov
shl
inc
mov
adc
lods
jecxz
decb
push
xchg
shll
test
cmp
inc
jnp
lock
cmp
xchg
mov
shll
popf
cmovle
ret
rcll
mov
inc
fldl
jp
push
lock
divl
mov
mov
sub
movsb
sub
sarb
inc
lret
ljmp
jmp
lahf
orl
adc
push
aam
jae
xchg
pop
pushf
dec
xchg
lock
push
add
cmpb
insl
jge
dec
lcall
stc
or
sbb
xor
icebp
xchg
jg
cmpsb
sub
outsl
scas
popf
jecxz
push
insl
sbb
in
jae
sub
mov
sub
in
mov
mov
push
pop
shl
insb
mov
adcb
inc
xchg
mov
or
sub
lcall
mov
test
adc
push
cli
xor
dec
imul
xor
mov
adcl
and
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
dec
jge
jl
aad
jle
jg
jle
les
outsb
pushf
pop
call
aam
icebp
aad
popf
roll
add
lahf
pop
ss
mov
ss
bnd
inc
mov
dec
pop
cmc
repnz
movsb
fwait
push
mov
test
adc
enter
or
fmuls
leave
push
and
decb
hlt
mov
jg
sarb
jg
stos
iret
lds
pop
popa
mov
add
repz
mov
in
jg
stos
test
push
add
hlt
sbb
mov
aas
call
sbb
adc
mov
dec
lcall
sbb
mov
xor
outsb
inc
pop
shll
cld
xor
jne
je
loopne
or
pop
inc
lret
enter
and
inc
dec
pop
leave
cmp
push
push
inc
addr16
jge
inc
sbbb
dec
outsb
jle
lret
and
fsubl
fldcw
pop
repz
inc
cmp
mov
test
dec
aaa
mov
mov
or
lods
cmp
xchg
test
ds
mov
lea
xchg
pop
and
sbb
pop
arpl
outsb
scas
pushf
popf
mov
popl
les
jp
sub
jnp
xchg
dec
add
sti
dec
mov
add
cmpsl
notb
jecxz
int
inc
push
iret
push
or
daa
gs
fdivp
dec
incl
xchg
mov
in
sbb
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
push
push
daa
inc
mov
jle
mov
jle
inc
mov
mov
xor
lret
and
cmp
lahf
dec
cmc
cmp
mov
and
cmp
mov
adc
adc
bound
xor
or
fbld
cmc
push
aaa
dec
mov
sbb
bound
cmp
dec
out
mov
enter
adc
sub
sbb
es
clc
int3
xchg
xchg
nop
sub
lods
movsb
enter
push
mov
sub
fs
fildl
push
stos
ljmp
sbb
dec
fdivp
mov
cmc
pop
xlat
pop
dec
push
outsb
adc
add
cmp
xchg
lds
jns
ret
stc
adc
repz
pop
nop
aaa
lock
and
mov
push
sbb
xor
out
pop
hlt
sub
push
stos
roll
add
mov
ljmp
aas
push
cmp
push
aaa
xor
mov
mov
pop
ret
or
js
inc
popa
xor
inc
lods
mov
jbe
dec
inc
jno
repz
jl
pop
mov
push
push
inc
shrb
popf
xchg
mov
out
pop
cli
sub
test
aas
lods
ficoms
ljmp
add
mov
decb
jbe
dec
xchg
adcb
cs
or
sbb
lock
int3
push
jmp
scas
inc
imul
mov
inc
rolb
adc
push
pop
mov
gs
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
add
jne
sarb
mov
jle
inc
sbb
xlat
stos
dec
mov
lock
fisubrl
lahf
lret
mov
push
icebp
adc
mov
jne
movsb
test
jmp
daa
sahf
fcomps
movzwl
add
and
or
push
jb
sbb
mov
and
push
cmp
lods
enter
fld
adc
pop
pop
cmp
lea
inc
out
pop
mov
pop
fimuls
into
cwtl
out
xor
adc
pushf
mov
add
mov
mov
xchg
js
cmp
test
mov
or
xchg
scas
jecxz
outsl
shlb
lret
sbb
iret
rclb
scas
call
push
xchg
fsubr
mov
pop
push
mov
cmpsl
out
loop
inc
out
and
or
adc
mov
repz
and
cmp
xchg
push
clc
pusha
xor
ret
xor
jns
mov
jg
in
push
leave
jb
imul
xchg
pop
adc
dec
lcall
push
int
rclb
inc
ds
fcoms
cmp
std
mov
push
inc
fidivl
outsl
mov
push
imul
mov
bound
shrb
cld
lret
sub
add
dec
push
inc
nop
mov
add
pop
cmp
mov
xor
repz
insb
out
ret
add
lret
jle
mov
inc
mov
add
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
sub
cli
aam
sarl
mov
jle
shrl
cmp
fimull
sub
or
push
lods
jns
sub
mov
ljmp
push
mov
movsl
and
pop
mov
dec
pop
mov
hlt
addr16
cld
sub
in
mov
and
stc
sarl
and
push
sbb
and
lds
xchg
pop
bound
outsl
movsl
mov
fistpl
jo
mov
add
xchg
add
popf
push
sbb
sbb
gs
xlat
hlt
adc
das
xor
repnz
pusha
mov
mov
popa
stos
loop
mov
test
jle
enter
mov
fistpll
sub
nop
inc
sub
mov
jb
adc
lea
out
lock
add
xor
test
xor
enter
cmp
into
shlb
fistpl
jmp
push
pop
dec
cmpsb
bound
mov
add
xor
sar
cmp
pop
push
xchg
fnsave
sbb
cmovge
pusha
out
mov
mov
loopnew
cmp
sub
jae
pop
and
sub
pop
cmp
pop
xchg
cmc
pop
test
mov
idivb
call
push
outsl
aam
jl
out
push
packsswb
inc
hlt
test
sub
shrl
rorl
lods
add
add
addr16
jne
mov
mov
xor
fwait
mov
fistpll
mov
jle
jecxz
es
mov
mov
adcl
jae
add
jmp
add
lea
das
jp
xor
test
pop
stos
push
jge
sub
sbb
xchg
inc
lahf
adc
xor
ljmp
or
insl
scas
xchg
xchg
lcall
dec
inc
aad
jns
das
and
cmpsl
fwait
clc
and
lea
movsb
je
rorb
and
mov
pop
ljmp
repnz
cld
hlt
xchg
xor
mov
fisttpl
xor
inc
fnstcw
dec
cmc
pop
leave
push
in
dec
cmp
push
inc
int
cmp
shrl
insl
faddp
push
pop
in
push
jg
and
lcall
push
faddp
mov
push
xchg
clc
aaa
fistpl
xlat
lock
rorb
and
fs
popa
inc
in
cli
mov
sub
fucomi
mov
int
call
push
nop
arpl
dec
int3
aam
iret
jno
imul
in
pop
lret
xchg
adc
test
les
push
stc
rcrl
and
pop
insb
lret
push
imull
clc
in
xor
nop
fcmovb
int3
shrb
pop
fcmove
in
cmpsb
lock
aaa
sahf
jge
imul
and
lods
pop
xlat
fsubs
dec
das
xchg
pop
mov
mov
lcall
daa
adc
dec
cmp
lahf
inc
sbb
adc
pop
and
rorl
scas
sarl
xlat
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
sbb
lea
pop
fdivrl
jge,pn
jle
sub
sub
lods
add
cmp
aam
fcomps
mov
out
out
jge
jbe
inc
movsb
lret
mov
sbb
scas
fcoml
jo
ficompl
xchg
in
xchg
xor
addb
cmp
pop
dec
xchg
sub
mov
jge
add
jns
dec
into
psubusb
push
adc
jecxz
xor
sbb
jmp
aas
push
or
hlt
aas
in
xchg
jl
sbb
enter
jne
sbb
test
and
mov
arpl
loope
or
rclb
dec
loop
jmp
dec
cmp
jge
stc
fs
ds
test
fdivrs
sbb
or
jno
clc
and
testl
out
jns
xchg
jnp
add
data16
cmpsl
or
mov
lea
mov
loope
pop
cmpsb
in
or
mov
test
mov
mov
dec
sub
pusha
xor
xor
pushf
pushf
jns
in
cwtl
daa
pop
fwait
sbb
popa
shlb
jo
fwait
js
fs
sub
pop
xor
ret
int3
and
pop
mov
sub
cvttps2pi
cmp
add
hlt
mov
inc
mov
xchg
sub
js
mov
pop
mov
iret
xchg
jg
ret
add
cwtl
xchg
lods
mov
or
ds
inc
xchg
dec
out
inc
ss
pop
cmp
mov
je
pop
daa
lea
sbb
sub
mov
daa
out
dec
cli
cltd
dec
xor
lea
or
aaa
inc
jl
roll
cmp
dec
inc
leave
or
insl
jo
mov
pop
int
ret
mov
or
mov
loopne
movsb
out
push
lcall
dec
jo
into
sbbb
sub
daa
xor
sub
jp
xor
mov
jno
fmuls
mov
aam
jge
popf
cmp
lock
pop
and
lds
add
pop
loopne
pop
mov
pushf
jns
orl
and
cmp
xchg
jmp
xor
cmp
fistl
insl
mov
aaa
adc
xchg
inc
shl
test
imul
arpl
sarl
xchg
mov
cmp
not
aad
fstl
test
aam
mov
leave
lods
mov
mov
xor
or
repnz
fcoml
sar
ljmp
mov
mov
sub
test
inc
lret
pop
pop
es
cmp
mov
movsb
fcmovu
and
jbe
insl
test
pushf
imul
xchg
or
adc
and
push
mov
and
mov
mov
push
stos
jmp
in
daa
add
dec
std
aad
mov
or
arpl
stos
mov
iret
nopl
dec
xor
xchg
and
dec
mov
xchg
out
andl
add
cmp
jb
push
and
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
push
stos
dec
or
jle
jge,pn
jle
mov
push
in
jmp
mov
and
push
push
pop
mov
loopne
xchg
add
popa
push
into
cmc
dec
adcl
dec
mov
or
adc
stos
outsb
mov
cwtl
sbb
dec
xor
jno
ficomps
out
push
sti
jne
int
xor
mov
cs
push
jns
test
jge
jle
add
in
and
and
cwtl
sbb
mov
xor
add
sbb
xor
daa
loopne
xchg
mov
push
and
imulb
xchg
fisubs
jp
add
cmc
mov
ja
aad
testb
dec
inc
jns
test
cmpsl
or
cmp
mov
cmc
sub
pop
and
and
xchg
daa
fs
cmp
jl
into
cmpsb
inc
decb
inc
lcall
sarl
mov
mov
dec
or
icebp
inc
fistpl
lcall
mov
pop
xor
stc
pop
mov
jmp
push
mov
sub
out
fisubl
shll
adc
int3
xchg
cmp
xchg
out
xor
pop
mov
addr16
add
add
push
add
test
adc
adc
mov
aad
scas
stc
xchg
ja
scas
mulb
stos
out
mov
inc
inc
xchg
insb
icebp
mov
mov
ja
pushf
cmp
adcl
add
repz
or
stc
xchg
test
subb
aam
jge,pt
sahf
adcb
xchg
or
stos
lcall
js
movsb
outsl
cmpl
mov
mov
and
dec
ja
sub
dec
daa
or
scas
dec
and
inc
xor
jne
lds
mov
mov
sub
out
xor
xor
cmpsb
pop
mov
movsb
fsubp
sub
jnp
fimuls
mov
xchg
cmc
add
inc
fildl
adc
mov
pop
test
stos
lret
mov
push
int3
shrb
and
pop
and
and
dec
jle
sbb
orl
sahf
mov
and
mov
pop
jb
fisubrl
rol
fildll
jno
mov
jno
jg
scas
fst
pop
cmp
movsl
iret
repnz
sbb
outsl
bound
adc
inc
cmpsl
test
rolb
sbb
push
pushf
or
arpl
jnp
or
mov
xchg
xor
shll
push
ds
iret
fld
shrl
je
cld
inc
insb
out
lock
jmp
inc
sbb
pop
ss
jns
add
jnp
adc
xchg
lret
ret
mov
dec
scas
xchg
lret
hlt
pop
xchg
add
sub
scas
pop
ljmp
dec
cmp
jmp
jge
jbe
aas
cli
bound
jmp
push
or
int3
popa
hlt
jno
jae
and
jo
jnp
cmp
jle
jge,pn
jle
cmp
mov
and
mov
xor
mov
out
ljmp
xchg
xchg
xchg
xor
dec
dec
xor
cmp
aaa
push
test
call
out
bound
aam
cwtl
add
leave
rcl
mov
call
addr16
sbb
scas
xchg
movb
cmpsl
fildl
pop
or
es
hlt
dec
test
jbe
xor
and
cmpsb
insb
pop
mov
pop
cld
repnz
jp
push
lret
inc
mov
out
daa
filds
lret
or
icebp
clc
pop
mov
pop
lods
pop
movsl
cmp
dec
xchg
insl
std
in
out
cmc
loop
dec
sbb
jo
lock
enter
nop
and
mov
xchg
sarb
ljmp
ds
mov
aaa
mov
sub
cmp
cwtl
out
push
jmp
daa
out
mov
mov
into
push
push
in
jle
jb
xchg
mov
les
cmc
movsl
cmc
push
jle
sub
add
or
sbb
test
push
cmc
or
xchg
sti
add
sbb
fiadds
pop
aam
add
insb
stos
lods
inc
push
mov
shlb
mov
jmp
mov
testl
dec
inc
jl
cmp
cltd
ds
bound
jp
xlat
adc
cmpsb
jle
or
jbe
lret
jb
dec
enter
int3
cld
or
push
xchg
bound
decl
and
test
mov
dec
mov
push
rcrb
ret
inc
add
xor
push
inc
sub
push
add
js
cld
fcomps
xchg
push
mov
sub
sub
iret
push
ficoms
dec
or
mov
popa
loopne
ja
fdiv
ljmp
outsb
push
lcall
cmp
les
popf
scas
mov
leave
pushf
mov
or
lret
dec
xchg
jbe
mov
add
pop
push
cli
orl
loopne
loope
inc
jmp
movsb
adc
shrb
call
loope
jle
clc
inc
gs
sub
sbb
sub
inc
fidivrs
mov
je
dec
mov
xchg
sub
xchg
xlat
mov
int
in
leave
cmp
push
ud0
mov
aaa
cmc
out
inc
xor
pop
shl
mov
add
or
cmc
mov
lcall
aam
pop
lods
cmp
lea
loopne
add
std
mov
stos
test
jl
dec
mov
fprem
int3
jno
cld
jne
mov
std
out
loope
movsb
nop
dec
mov
add
shll
push
xchg
cmp
ret
addr16
adc
pop
and
aaa
dec
inc
or
adc
in
add
push
lds
out
std
xor
cmp
gs
shlb
loop
inc
cmpsl
icebp
mov
test
dec
shlb
xor
ljmp
mov
sbb
mov
and
cmp
cmp
mov
movl
add
fisttpl
sbb
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
cmp
jle
jge
jle
mov
loop
mov
test
aas
cmp
add
lret
sub
dec
mov
popf
inc
test
jo
push
popf
inc
xchg
ja
int
sub
ret
imul
lods
xor
push
test
pop
icebp
shrl
xor
in
mov
mov
aam
into
inc
dec
adc
int3
fnstcw
fs
mov
hlt
jae
js
mov
scas
fscale
xor
leave
movsl
cltd
mov
jge
sbb
iret
mov
ds
cltd
xorl
sub
das
xor
sbb
cmpl
outsb
xchg
cmc
popa
mov
jmp
mov
dec
adc
mov
sbb
lods
sub
pusha
and
xchg
bound
inc
out
add
inc
jno
fwait
sbb
jnp
pop
mov
jp
sub
loopne
jle
sub
lods
dec
ret
mov
dec
xchg
mov
mov
push
test
fmulp
or
int
adc
push
adcb
cs
sbb
jae
mov
mov
push
jmp
ror
mov
inc
cmpsl
mov
cmpsl
stos
bound
cwtl
sti
push
sbb
dec
or
jae
dec
xchg
outsb
cmc
mov
push
xchg
dec
inc
into
mov
or
inc
cmp
js
fsubl
pop
push
mov
lahf
das
hlt
pop
mov
pop
repnz
or
je
and
cmp
dec
movsl
and
int
sbb
or
mov
aam
push
fs
loope
data16
push
mov
xchg
pushf
inc
mov
sti
pop
xor
push
daa
sub
nop
and
mov
ret
repz
xchg
scas
out
pop
das
mov
popf
out
lds
pop
add
jecxz
cmpl
lods
mov
xor
movsb
cmpsl
or
add
mov
xchg
sub
dec
stos
in
xchg
pop
pop
lock
xor
test
cmp
and
cmc
mov
repz
sbbl
outsb
adcl
add
lea
xlat
mov
movsb
inc
and
arpl
cli
shll
xchg
ret
xchg
or
fisubrs
loop
out
inc
ja
push
or
out
or
adc
out
out
sub
lea
and
push
dec
pushf
cmp
mov
sbb
filds
nop
arpl
xchg
and
shlb
pop
xorl
push
pop
pop
pop
outsl
push
mov
inc
div
das
shl
fwait
jno
sbb
cmp
mov
push
cmc
xchg
push
xchg
adc
movsl
push
mov
jecxz
sbb
cld
js
into
dec
aad
mov
lret
jo,pn
jle
add
aaa
movsl
mov
dec
xor
sub
call
xor
adc
add
imul
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
inc
cltd
loope
jle
jge
jle
mov
push
or
xchg
xchg
sti
push
xor
jb
jp
jae
push
out
imul
jne
jg
sub
and
scas
mulb
push
rcll
sub
enter
lds
notl
rcll
cld
jnp
bt
sbb
imul
xor
loop
dec
mov
shlb
test
and
loopne
pop
xor
xchg
xor
out
jae
repz
pop
or
iret
cmpsb
sub
mov
adc
cwtl
xor
or
or
fcoml
mov
push
xchg
xrelease
addr16
aam
stc
and
popa
push
mov
cmp
jbe
xor
dec
cmp
add
cmp
mov
lahf
call
adc
pop
pop
and
and
cld
aas
sub
fimull
rorl
pop
xchg
inc
or
mov
xchg
aam
in
dec
imul
cmp
out
ficomps
sbb
pop
sbb
fnstsw
out
mov
push
mov
ja
lahf
push
sbbl
adcl
adc
cs
fisubrs
insl
test
mov
adc
pop
lock
out
popa
mov
fld
pop
addl
pop
cmp
insl
addb
push
jge
jns
mov
xchg
sbb
cs
aas
sub
mov
add
sub
xchg
popa
and
mov
and
cmp
pop
popa
repz
out
jp
sarb
jno
sbb
mov
sub
pop
add
xchg
jae
idivl
sti
hlt
inc
lods
lret
fsubrs
cmpsl
dec
sbb
cld
call
xchg
and
push
and
mov
add
pop
xchg
jo
fdivp
stos
inc
cmc
hlt
push
pop
or
mov
cs
add
lea
and
add
inc
mov
shlb
lods
xchg
xorb
dec
or
loope
pop
push
jno
jnp
cmp
push
ret
test
fbstp
mov
push
xor
xor
add
cmpsb
negb
jp
push
in
xchg
popa
int
adc
divb
add
jmp
jg
xor
mov
clc
jmp
pop
pushf
pop
clc
aaa
fcomi
adc
xchg
mov
push
and
pop
xchg
pushf
and
pop
imul
sub
mov
mulb
inc
leave
mov
hlt
movsb
faddl
out
mov
mov
push
enter
push
sub
insl
cmp
dec
fimull
mov
push
cltd
ret
xchg
inc
add
sub
cmp
fdivrs
das
mov
sbb
dec
in
push
or
jmp
nop
arpl
arpl
hlt
xchg
add
xchg
stc
xorb
and
inc
pop
mov
xchg
or
or
je
adc
inc
shrl
jns
jl
inc
add
jmp
leave
inc
mov
inc
xor
icebp
pushf
xlat
cmp
pop
dec
in
jle
jge,pn
jle
adc
or
in
mov
fcmovnu
loope
pop
pop
add
pop
add
int
mov
loope
outsl
mov
mov
pop
sahf
and
sbb
inc
push
mov
shl
insb
test
fxch
dec
adc
daa
sub
lret
mov
icebp
dec
cltd
add
std
mov
mov
in
adc
jae
mov
mov
or
popa
fmulp
fisttpl
iret
add
mov
xchg
fs
lods
mov
in
js
lock
out
mov
test
inc
dec
out
xchg
clc
test
stos
movsl
test
jle
iret
mov
aad
cld
loopne
mov
loop
pop
cmp
xor
cmpsl
rcrb
int3
and
jns
add
and
stc
adc
cwtl
mov
fbstp
jbe
imul
sbb
dec
dec
daa
adc
aam
mov
cmp
pushf
imul
outsb
mov
xchg
adc
fisubrs
push
xchg
inc
rcll
fbstp
xchg
push
out
call
into
xor
mov
bound
sub
pusha
adc
lds
sbb
mov
inc
pop
jmp
adc
aad
pop
in
int
mov
push
inc
cmp
mov
hlt
je
inc
in
test
test
std
dec
shll
jge
insb
or
sbb
mov
repz
push
sub
out
clc
out
data16
int
sarb
mov
adc
hlt
imul
loopne
dec
pop
sbb
dec
lahf
popa
out
fistpl
imul
neg
test
loope
ret
or
les
add
lds
test
inc
cmp
inc
push
mov
int
mov
inc
add
cltd
arpl
xchg
out
vunpckhps
in
lods
insb
dec
in
add
mov
or
sbb
sbbl
mov
xor
dec
test
mov
push
dec
jp
sbb
add
lock
movsb
in
mov
xor
jbe
ret
ja
mov
les
jmp
mov
adc
incl
xchg
and
push
sub
mov
fs
sbb
cmpsl
mov
push
stc
gs
rorb
sahf
sbb
jbe
imul
and
or
cmpsl
lret
test
pop
ret
movsb
and
xor
pop
out
dec
shl
in
jl
add
mov
daa
fcomps
lret
adc
lahf
hlt
stc
mov
pusha
sub
in
mov
fucomi
lret
pop
inc
mov
jmp
dec
lret
or
arpl
xchg
movsl
lea
add
mov
rcr
inc
nop
lret
andb
imul
jmp
sub
add
add
inc
fcoms
inc
dec
mov
mov
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
jle
jge,pn
jle
stos
aad
fildll
push
sbb
test
loope
sahf
fcmovnb
inc
popf
mov
ja
adc
and
pusha
and
mov
dec
pop
jmp
idivb
enter
mov
jb
scas
enter
imul
cwtl
lea
sbb
pop
cmpsl
sahf
pop
pop
stc
aas
lods
mov
cmc
fbld
imul
pop
dec
sbb
push
xchg
pop
push
movsb
icebp
xor
push
pop
mov
sub
aam
mov
xor
mov
lret
push
hlt
lret
insb
jno
xchg
stos
in
inc
adc
sbb
imul
inc
push
addl
jge
adc
test
out
int3
xorb
outsb
ljmp
repz
enter
int3
in
bound
out
int3
inc
push
clc
sub
lock
mov
dec
sub
or
jne
lods
xchg
fstps
imul
xor
mov
adc
ljmp
in
xor
int3
cmpsl
adc
in
lahf
rcrb
cmp
push
pop
dec
mov
jb
dec
mov
xor
in
movsb
shrl
mov
mov
push
jg
out
movsb
jns
pop
loopne
push
cmp
add
pop
into
or
les
inc
adc
cmp
pop
sub
aaa
loop
xor
lret
pop
xchg
sub
lea
cmp
cmp
outsb
adc
or
sbb
push
in
call
aam
and
mov
xchg
stos
outsb
mov
out
push
insb
mov
jl
xchg
arpl
in
or
ja
out
xchg
sbb
imull
ljmp
loop
inc
sbb
imul
fistpl
sahf
mov
and
out
pop
jecxz
test
and
jle
xlat
xchg
cli
mov
ret
ss
jae
sarb
negb
pop
mov
sbb
and
or
hlt
xor
inc
push
call
dec
and
add
hlt
adc
popf
push
jmp
lds
push
out
sub
xorl
fdivl
or
mov
iret
cltd
mov
cmp
and
cmp
xor
mov
out
and
dec
and
mov
sbb
dec
sbb
lds
sarb
mov
pop
xor
cmp
sbb
cmc
sub
adc
sbb
push
ljmp
rcl
jp
mov
inc
sub
jne
not
sbb
mov
icebp
dec
cld
rcrl
dec
ljmp
pop
addl
push
ficomps
xchg
aaa
mov
cmp
jne
jg
ret
inc
cs
sub
cmp
clc
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
xchg
mov
pop
sub
jle
jge,pn
jle
or
mov
pop
xchg
or
add
icebp
mov
leave
stos
inc
pop
adc
pop
xlat
aam
push
xchg
cmp
es
jne
cmp
and
pop
mov
push
ja
push
mov
mov
cmp
cmpsb
jbe
je
mov
sub
mov
lret
fisubs
inc
out
pop
sub
dec
insb
aaa
dec
insb
addr16
subl
fwait
xchg
push
cmp
xor
inc
push
stos
and
pop
aaa
add
push
call
inc
cli
fsubrs
sbb
push
adc
je
dec
mov
xor
bound
test
mov
xor
sub
jp
adc
call
push
cmp
cmp
and
mov
push
adc
dec
cmpl
mov
dec
loop,pn
pop
add
cmp
push
fs
dec
xor
jmp
testb
ss
mov
pusha
mov
test
loop
into
lods
arpl
loope
xchg
xlat
test
leave
lods
fldenv
subb
sahf
dec
sub
xchg
sar
in
adc
jecxz
das
popf
out
cmp
jg
push
hlt
xchg
in
insb
jnp
lcall
cmp
adc
movsl
mov
dec
sarl
insl
call
subl
popa
xchg
movsl
and
dec
inc
not
out
test
je
dec
lea
fidivl
mov
es
leave
or
or
inc
aam
bound
mov
dec
jb
mov
xchg
andb
in
xor
mov
fildl
mov
sti
adc
aaa
aad
pushf
aaa
fs
add
in
jge
cmp
jne
pushf
add
ja
shrb
push
pop
stc
cli
shrb
mov
and
jbe
lds
dec
xor
xchg
xor
sub
insb
pop
into
iret
sbb
jb
dec
mov
into
xchg
fdivl
pushf
xor
mov
lahf
jns
cwtl
scas
xor
mov
shll
lods
and
loopne
loop
add
push
or
test
push
lods
gs
nop
fs
dec
jl
jle
sub
ds
fcompl
adc
ret
testb
cmc
loopne
adc
lcall
push
in
test
je
mov
out
dec
ss
mov
aas
lcall
icebp
jg
in
cmpsb
cld
mov
stc
lods
mov
xor
out
orb
push
in
je
cli
adc
mov
push
rcr
adc
fwait
dec
pop
sbb
es
lods
jmp
jmp
popf
xchg
notl
push
adc
bound
rcrb
sbb
ja
or
bound
andl
out
loop
test
add
and
mov
dec
in
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
rcrl
bnd
jge,pn
jle
pop
ja
mov
cmp
int
dec
and
bound
lret
leave
icebp
aas
jle
arpl
rol
ffree
leave
cli
push
mov
xor
cwtl
push
cmp
scas
cmc
sahf
cli
cmpsl
lret
and
sbb
hlt
out
mov
js
cltd
push
ret
xchg
add
mov
mov
out
xchg
sahf
fwait
call
xchg
cmpsb
fdivrs
push
ffree
lods
dec
sahf
jne
rorb
adc
inc
arpl
pop
cmpsb
inc
sub
xor
adc
sbbb
push
and
shrb
adc
sbb
xor
mov
push
jp
adc
mov
mov
lods
mov
sub
jb
xchg
sbb
hlt
jl
cmc
andl
int
and
cmp
mov
and
mov
dec
sub
inc
jecxz
lea
mov
int
jne
mov
inc
push
stc
ret
mov
roll
call
xchg
rol
xchg
jmp
iret
icebp
mov
jmp
adc
xor
mov
xchg
dec
mov
outsl
sub
push
fists
mov
repz
mull
inc
dec
insb
fs
out
sbb
and
leave
ret
fcmove
xchg
in
pop
xchg
mov
add
xchg
sbbb
adc
pop
or
push
ds
adc
push
pop
scas
cwtl
test
xor
push
cmpsl
mov
lock
je
adc
shll
pushf
jmp
push
xlat
adc
aas
push
cwtl
mov
and
adc
pop
jmp
xchg
cwtl
cli
es
ret
sub
aad
add
cmp
ror
call
lds
adc
das
push
add
sti
pop
stc
popa
or
clc
inc
sub
jmp
pop
xor
in
pushf
out
push
cwtl
jle
dec
mov
push
jecxz
xchg
inc
test
cwtl
pop
jp
mov
fcomip
and
std
fnstcw
mov
pop
sbb
adc
aaa
sbb
pop
and
mov
pusha
sahf
sbb
adcl
idivl
fisubl
jle
lods
mov
jbe
pushf
out
cwtl
xchg
lret
shrl
aam
scas
jmp
mov
and
dec
dec
pushf
adc
or
sbb
mov
shlb
dec
in
sub
enter
shll
push
lret
and
dec
dec
test
pop
scas
mov
out
aam
scas
mulb
pop
sbb
in
sbb
or
enter
int3
test
xchg
les
cmp
xchg
mov
cld
in
xor
pop
bswap
imul
test
jns
movsl
inc
dec
mov
ljmp
xlat
push
data16
xchg
jmp
sahf
pop
adc
add
push
inc
sub
pushf
movsb
rcr
test
js
je
cmpsb
data16
stc
sub
inc
loop
pop
mov
xchg
rorb
or
dec
cld
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
or
ret
mov
jle
jge,pn
jle
movl
lahf
add
test
int
fcoml
jle
xchg
pop
fcmove
adc
or
sbb
sbb
push
cld
sbb
stos
cli
sub
lods
movsb
mov
popf
test
push
or
in
or
push
cmp
inc
mov
push
sbb
rorb
mov
mov
ljmp
shr
inc
push
sbb
jmp
adc
fwait
movsl
movsb
push
mov
and
stos
nop
jb
add
hlt
lret
adc
popa
pop
loop
jl
decb
sbb
fimuls
and
jecxz
pop
inc
jae
mov
sahf
add
pop
add
push
int
call
lock
add
or
std
je
xor
mov
cmp
lcall
add
out
jle
imulb
lcall
adc
xor
rcl
rol
in
lea
sub
scas
mov
xor
scas
or
ret
inc
test
sbb
out
push
ficoml
inc
je
sub
aaa
pop
leave
mov
sbb
mov
xor
hlt
jmp
xchg
outsb
jns
jnp
adc
imul
jno
cmp
dec
mov
insl
fucom
inc
xchg
jbe
popf
stc
scas
or
jne
push
shrl
les
in
std
sarl
add
jmp
lea
jns
push
mov
sti
jne
ds
mov
lods
sbb
mov
loope
in
repnz
mov
mov
nop
add
ljmp
sbb
cld
enter
push
xchg
loopne
pusha
add
and
cld
cmp
in
push
inc
enter
ret
cmp
sbb
jo
dec
adc
mov
iret
psubsw
xchg
mov
pop
inc
rcll
push
xchg
add
pusha
push
out
in
je
orb
insl
bound
pop
add
bound
dec
adc
das
data16
pop
sti
add
pop
inc
sub
test
jnp
adc
setnp
pop
cmp
int3
mov
movsb
xor
push
mov
and
fisubrs
mov
adc
pop
mov
xor
and
mov
push
rcl
adc
je
jns
jg
ja
mov
shrb
enter
pop
lcall
cltd
in
pushl
lods
lods
enter
sub
aas
icebp
int
in
jge
inc
cmpsb
xchg
mov
ljmp
das
test
jmp
jle
sbb
push
xchg
fldenv
mov
rcll
inc
ja
jne
xchg
and
xor
imul
rcll
cltd
sub
mov
xchg
leave
mov
cwtl
test
int
mov
aam
pushf
aas
loop
ss
mov
xor
jecxz
jnp
pushf
insb
and
inc
daa
xchg
mov
jno
mov
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
xchg
mov
cld
jle
jge,pn
jle
push
xor
xlat
inc
andl
pushf
or
push
nop
jle
inc
das
xchg
ret
jmp
push
shlb
jmp
mov
mov
jmp
adc
loope
mov
stos
shrb
push
xchg
ljmp
jae
scas
push
lea
imull
sbb
addr16
je
stos
imul
sub
dec
pop
mov
push
das
scas
lahf
xchg
mov
movsl
cwtl
int
pop
cmpsb
xchg
adc
lods
in
mov
mov
fiaddl
pop
mov
sub
imul
lcall
test
xchg
cmp
jl
mov
pushf
mov
cmpsl
and
pop
mov
nop
xchg
sbb
fisubs
sbb
cld
push
nop
and
push
jbe
icebp
ret
pop
or
loopne
fdivs
pop
mulb
inc
shl
sbb
xchg
jecxz
loop
clc
aad
inc
pop
lea
in
out
mov
repz
pop
dec
lcall
mov
sbb
mov
inc
fwait
lods
mov
cltd
push
in
jp
jge
ret
mov
daa
pop
loop
aad
push
negl
dec
adc
sahf
cs
les
mov
jnp
jnp
nop
sub
sub
sub
sub
sbb
clc
push
shll
jl
cwtl
leave
lcall
addl
sub
repz
dec
pop
shll
jno
pop
call
lods
lds
fiadds
imul
mov
xchg
mov
fldenv
daa
add
mov
outsl
div
xchg
js
arpl
mov
xor
push
push
mov
mov
insl
dec
enter
movsl
cmp
inc
push
mov
std
dec
insl
out
clc
mov
adc
cmp
int3
aam
lret
cmp
jmp
and
xlat
gs
cwtl
push
lahf
mov
stc
mov
cmpsl
cmpsl
mov
test
inc
out
aas
inc
mov
gs
enter
in
ret
xor
add
inc
and
or
cmova
cmpsl
jb
stos
add
ss
sbb
dec
clc
les
mov
jecxz
cmp
sub
cs
cmp
sahf
adc
pop
jnp
xchg
mov
dec
dec
nop
xchg
adc
jmp
mov
aad
mov
jl
or
inc
xor
sub
fwait
ljmp
out
cmc
dec
movsb
cmp
movsl
js
xor
lock
aas
in
or
mov
push
cs
adc
out
cmp
add
add
fimuls
xor
or
cld
pop
jns
adc
jbe
movsb
sub
push
shrb
pop
inc
lods
insl
test
inc
int3
mov
das
push
daa
add
xchg
sub
mov
push
das
insl
in
ficoml
fsubl
ret
cmpsl
jns
pusha
sarl
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
fdivrp
pop
jnp
sti
jle
jge,pn
jle
and
xchg
lock
shll
inc
imul
js
jge
and
lahf
xor
push
pop
pop
mov
pop
aad
cmp
sbb
xor
or
test
lods
xchg
ja
popl
daa
xchg
cmp
test
push
push
mov
aas
sub
testb
push
stos
es
xor
inc
xorl
mov
aas
jno
and
lds
xor
jmp
lahf
push
fnstcw
jns
frstor
xchg
xor
jns
lods
stc
into
bswap
f2xm1
movsb
div
xchg
sti
sti
fsubrs
out
xor
inc
scas
lret
sbb
inc
jne
mov
push
and
mov
lods
cli
fnstcw
lds
jecxz
rol
popf
mov
and
pop
xchg
aam
dec
lcall
xchg
adc
jg
aam
cmc
xchg
push
xchg
push
jle
cmp
mov
pop
xchg
mov
sub
leave
xchg
push
and
movsb
js
bound
inc
out
outsl
adc
cmp
mov
push
ja
sbb
bound
fcmovnu
mov
inc
out
adc
stos
icebp
mov
dec
jle
vmovntps
mov
inc
icebp
adc
mov
loopne
and
or
lcall
cmpsl
cltd
fwait
dec
mov
cmp
ret
repz
lds
xor
mov
pop
cmp
xchg
std
inc
push
repnz
pop
and
pop
popf
lods
inc
stos
inc
add
sbb
inc
jo
fs
cmp
out
xor
or
xchg
pop
cmp
call
cs
cwtl
int3
fwait
push
shlb
pop
test
adc
loope
insl
mov
addr16
fimuls
std
out
sbb
dec
fwait
push
aas
lret
enter
add
mov
jb
mov
mov
pop
xlat
xchg
mov
lret
fs
leave
icebp
adc
lods
insl
lds
dec
frstor
test
aad
loopne
add
insb
fidivrl
adc
push
inc
and
std
mov
cmp
fsub
outsb
sbb
in
sbb
mov
mov
push
xchg
mov
cmc
popa
cmpsb
test
jbe
mov
jg
stos
add
out
sti
dec
pop
push
xor
dec
into
cmpsb
lods
xor
loopne
enter
and
in
inc
mov
pop
jb
loope
out
das
in
mov
test
mov
decl
jmp
cmp
aam
fildll
loopne
imul
cmp
lret
outsb
adc
xchg
pop
imul
insb
and
pop
rep
icebp
dec
mov
outsl
push
out
mov
pop
inc
aaa
pushf
je
and
push
and
and
in
jl
shlb
stos
push
out
pop
enter
jle
jmp
sbb
dec
xchg
fstpt
mov
xor
inc
pop
or
mov
and
mov
push
fimuls
dec
xchg
bound
xchg
lea
jb
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
cltd
mov
jge,pn
jle
sub
subl
pop
jae
cmp
lods
out
sti
pop
xchg
loopne
dec
push
sub
enter
mov
xorl
or
mov
test
jg
call
cmp
and
out
inc
in
je
sbb
xchg
mov
and
cmp
or
push
in
cli
in
jge
sbb
pop
pop
mov
add
call
mov
push
mov
push
pop
loop
mov
xchg
jg
xor
lods
adcl
xchg
imul
or
negl
outsl
lret
jle
xchg
or
aaa
mov
add
or
mov
cli
jcxz
movsb
test
or
cmp
ss
lret
bound
pop
mov
lret
mov
jmp
cmc
lods
mov
xchg
push
scas
les
sub
loope
call
orl
insb
push
cli
loop
jne
ljmp
dec
sub
stc
adc
hlt
sbb
inc
pop
in
dec
push
inc
push
pop
loopne
xchg
push
mov
aam
out
inc
test
sti
inc
inc
ret
add
cmp
add
enter
mov
leave
aad
fidivl
fdivrl
mov
pop
inc
pop
rcr
jg
push
mov
fmull
xor
mov
int3
sbb
mov
push
dec
jmp
test
sbb
adc
aam
jb
call
mull
aad
call
push
dec
sub
adc
test
add
jecxz
cmp
bound
push
fucomi
pop
pop
or
adc
mov
sbb
mov
xchg
shrb
pushf
xor
mov
mov
cmp
sbb
cmp
xor
push
and
pushf
mov
aaa
out
xchg
in
fldl
xor
xchg
add
lahf
sbb
imul
mov
jo
push
mov
test
jb
cmp
iret
cltd
faddl
fistl
aad
mov
xor
int
fsts
mov
lods
mov
sahf
xor
jae
adc
js
stos
pop
xor
sub
xchg
je
sub
fisubs
lods
jbe
fbstp
dec
lods
lods
sub
rorl
push
outsl
pop
jne
mov
xchg
mov
out
lock
sub
jg
mov
or
jecxz
int
faddl
stos
xchg
imul
cltd
pop
mov
dec
ret
and
push
jo
and
jg
sub
and
arpl
sbb
add
das
and
sbb
dec
pop
add
insb
mov
xor
dec
insl
sub
enter
test
aam
push
das
aaa
jl
sub
aam
loop
pop
adc
mov
iret
xchg
or
xor
mov
xchg
pop
gs
fs
pmulhw
adc
iret
sub
test
sub
pop
xlat
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
mov
push
test
jle
jge,pn
jle
out
sub
and
jle
ja
mov
lahf
out
dec
mov
jecxz
pop
or
mov
jle
cmp
in
rolb
cmp
rclb
outsl
jle
out
aam
fcoml
sub
push
sbb
pop
and
pop
lock
data16
inc
setl
mov
cmp
std
in
inc
fistl
frstor
outsl
stc
fwait
mov
push
xchg
cmpsb
inc
outsb
sahf
sbb
sar
push
aaa
push
xchg
jl
sbb
pop
push
jnp
and
xor
ljmp
and
push
adc
add
mov
add
sbbl
jg
ss
dec
dec
icebp
push
mov
pop
mov
xchg
iret
pop
daa
out
push
test
xchg
xchg
sbb
push
jmp
rclb
sbbl
mov
jecxz
fcomps
mov
daa
in
dec
dec
jb
clc
loope,pn
insl
fs
sarb
and
pop
jge
ljmp
and
fwait
jmp
mov
sbb
sub
add
loop
push
cs
mov
mov
sub
cld
lret
and
mov
sbb
mov
sub
mov
mov
mov
pmulhuw
ret
add
add
sbb
xchg
cld
mov
adc
sub
cli
out
invd
outsb
dec
sahf
and
jmp
push
pop
das
icebp
shr
xor
mov
loop
aaa
out
jle
xchg
sbbl
fst
xor
mov
push
shll
mov
call
cld
loop
adc
sti
in
adc
sub
in
pop
lock
and
push
adc
dec
adc
out
bound
arpl
insl
push
push
cld
inc
pop
lcall
das
xlat
xchg
adc
adc
cmp
push
int
mov
xchg
xor
mov
cmp
mov
cld
lcall
sub
or
js
lret
clc
jl
int3
scas
cmpsw
mov
inc
jmp
sbb
cmpsl
cmp
add
xchg
sbb
mov
dec
mov
adc
adcl
cmpb
dec
mov
pop
mov
mov
inc
scas
lods
lods
inc
mov
fisubrs
dec
pop
cld
bound
scas
test
pop
jmp
enter
rclb
mov
mov
cmc
pop
sbb
into
lock
mov
mov
das
push
aas
scas
outsl
lcall
lods
iret
rcl
jae
push
sub
dec
or
or
push
inc
inc
loope
xchg
cli
in
and
and
lret
push
mov
xor
lahf
or
notb
add
adc
sub
stos
and
mov
xchg
sahf
mov
mov
rclb
cwtl
push
cmp
iret
arpl
testl
push
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
in
mov
and
jle
add
pop
insl
cld
out
ret
dec
or
ss
scas
mov
loope
lahf
fists
jl
aas
lds
mov
cltd
mov
or
adc
and
inc
mov
fimull
enter
mov
lds
or
das
add
push
mov
xchg
xorl
cmp
sub
in
cld
mov
ret
mov
cmp
dec
addr16
test
mov
sub
in
adc
aaa
popa
nop
push
sbb
sub
ret
and
inc
cld
sub
jl
ret
repz
test
add
es
jmp
lock
sub
aad
mov
lods
push
xor
cld
je
insl
xor
lcall
cmp
negl
fwait
xor
icebp
lea
push
inc
aam
lcall
mov
xor
rcll
setp
xchg
pop
adc
mov
xor
pop
xor
xor
mov
insb
loopne
les
xchg
pop
dec
add
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
cmp
jle
jg
jle
jns
and
and
cwtl
bound
fidivl
aad
ds
out
xchg
repnz
adc
loopne
and
mov
sub
and
repnz
lret
jge
aaa
inc
aaa
rcr
cmpsl
jns
mov
xor
bound
ret
outsl
out
and
pop
cmp
sub
into
cld
inc
mov
das
add
cwtl
pop
out
dec
and
xor
out
sahf
mov
adc
pushf
jle
add
mov
ret
enter
sahf
ds
das
test
cmp
mov
add
lcall
cs
xor
out
lods
inc
ret
lock
rolb
clc
addb
dec
roll
rol
mov
scas
bound
loopne
jnp
mov
aam
rolb
rclb
es
adc
sbb
dec
jp
mov
ret
inc
push
mov
mov
bound
dec
test
lret
outsb
jae
dec
push
fcomi
sub
arpl
and
push
sbb
push
mov
sbb
sbb
decl
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
dec
pop
pop
stos
push
jle
and
jle
add
push
xor
jge
cli
cs
cli
or
xchg
cwtl
mov
std
sar
xor
fsubs
test
mov
pop
lret
int3
mov
mov
xor
ss
cld
xchg
fistpll
jmp
lds
repnz
and
mov
jnp
pop
adc
adc
add
pop
and
mov
mov
and
sub
loope
into
xor
scas
cmp
imul
repz
mov
lretw
aad
fldt
inc
divl
jns
and
fldenv
mov
inc
jne
test
inc
popf
imul
pop
xor
aad
dec
pop
xchg
je
cli
sti
inc
xchg
js
add
imul
dec
jmp
dec
inc
xlat
outsb
lahf
push
jecxz
push
sub
or
or
je
fisubl
cmp
stc
add
pushf
subb
cmp
add
jae
fisubl
aam
jg
pop
add
dec
push
and
add
dec
cmp
dec
pop
loop
mov
xor
cmp
fdivrl
cmpsb
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
leave
and
jg
jle
ds
repnz
rolb
fiaddl
or
dec
bnd
cmp
rclb
dec
add
mov
rsm
leave
xchg
mov
jge
or
adc
fisubl
and
pop
inc
mov
push
shlb
gs
pop
push
div
test
cmc
lahf
mov
stos
aam
cmp
cmc
es
dec
sub
ja
xchg
aas
stc
pop
andb
outsb
push
xor
mov
aam
and
push
push
popl
mov
je
dec
aam
add
pminsw
add
sar
mov
pusha
popa
mov
cmp
mov
lock
mov
movsl
es
cmp
loop
adc
into
dec
push
cmp
and
les
pop
mov
push
aas
imul
clc
call
mov
shll
xchg
push
lds
std
cmp
sbbl
sbb
and
adc
sub
push
xchg
fwait
jle
invd
pushf
sbb
int3
mov
out
pop
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
mov
les
jg
jle
data16
stos
mov
arpl
call
xchg
sarb
sub
push
inc
jne
shlb
lahf
or
push
dec
and
std
and
loopne
lds
mov
add
out
sbb
mov
nop
rcrb
push
aad
cli
push
and
pop
stos
push
lods
js
fsts
aas
sbb
mov
cli
adc
bound
dec
bnd
cli
repnz
clc
sub
ret
mov
cli
bound
aaa
xor
cmp
cli
mov
jo
js
jecxz
aam
icebp
dec
add
sbb
sub
int
outsl
jbe
push
add
adc
mov
popa
imull
int3
or
pop
rcrb
loope
hlt
sahf
jb
sub
mov
or
and
xor
sub
mov
test
std
xor
fwait
xchg
mov
mov
addr16
imul
movsl
adc
pop
dec
mov
fs
inc
sbb
push
xor
test
in
push
aad
int3
mov
jmp
mov
sbb
add
xchg
clc
sub
add
mov
jo
mov
stos
sbb
mov
and
jle
repnz
jb
mov
test
scas
jl
jp
aas
dec
sti
cmp
repnz
addr16
adc
mov
ss
ja
mov
stos
arpl
mov
aam
or
inc
dec
adc
in
add
mov
mov
or
lea
jns
call
xchg
aam
fdivrs
sbb
inc
insb
imul
lret
sti
dec
bound
pushf
adc
mov
repnz
xchg
ret
jl
mov
or
outsb
add
xchg
sti
bound
add
aaa
sti
jge
push
test
inc
ror
call
les
inc
mov
cmp
inc
or
sub
push
sub
js
inc
push
lcall
push
aad
in
call
clc
and
xor
dec
lahf
adc
lods
jns
jge
icebp
add
popf
add
add
xor
xchg
mov
pushf
xchg
stos
mov
xchg
fldl
int3
push
or
add
or
pop
pop
scas
test
jge
pop
aam
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
or
xor
jg
jle
aam
bound
int3
daa
stc
int
push
rcll
push
shlb
add
sbb
es
sub
dec
movsl
cmp
mov
sbb
or
xor
cmc
inc
mov
mov
push
mov
pop
int
jp
ljmp
outsb
sbb
push
xchg
xor
leave
ja
rorl
sbb
shl
out
out
enter
je
insb
fsts
or
loop
sbb
xor
sub
aaa
or
scas
or
mov
jae
jbe
jl
addr16
out
dec
les
adc
int
sub
push
ffree
push
mov
jno
out
ljmp
mov
scas
pop
in
mov
mov
xor
es
push
push
shr
je
stos
cmp
lods
lock
sbb
push
mov
imul
fdivs
addr16
popf
movb
lds
mov
sub
xor
sbb
dec
repnz
pusha
icebp
aam
shll
pusha
jbe
inc
out
divb
cmp
cmp
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
mov
mov
mov
and
jle
lret
or
inc
std
data16
push
mov
dec
sbb
mov
mov
out
fidivs
pop
xor
sub
or
mov
xor
push
add
aad
sar
pusha
adc
jecxz
dec
fnstenv
dec
push
inc
popf
pop
push
mov
cltd
xor
clc
adc
fsubs
icebp
cmc
or
dec
sub
cmpsb
insb
call
mov
mov
mov
ret
cmp
xchg
dec
or
fisttps
inc
inc
mov
lock
pop
xor
inc
and
cwtl
icebp
popf
pop
aas
popa
sarl
gs
loope
jg
dec
das
imul
inc
push
cmpsb
pop
mov
popa
inc
adc
inc
cmpsl
xchg
call
stos
arpl
push
adc
lret
jno
or
push
mov
push
ljmp
xchg
mov
push
mov
bound
stc
imul
cmp
aas
out
movsb
xchg
sti
jle
pop
outsl
arpl
jnp
cmc
mov
push
xor
jae
loop
adc
inc
call
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
xchg
cmp
dec
push
adc
les
inc
or
push
xor
in
sti
inc
cmp
mov
fucomip
sahf
xor
ret
repnz
imul
sub
dec
inc
mov
pusha
rorb
jl
iret
rorb
loope
inc
out
add
xor
push
mov
sbbb
push
mov
sbb
and
or
daa
mov
insb
repnz
push
dec
cmp
push
push
cmpsb
push
aas
dec
lret
sbb
xchg
lahf
sbb
xor
xchg
lret
sahf
addr16
sahf
push
cmp
jo
sarb
add
rorl
into
call
fwait
jno
dec
bound
mov
xchg
scas
and
imul
jp
xchg
add
mov
push
shr
lret
pop
xchg
jae
iret
or
ljmp
sbb
test
fwait
in
push
shll
sahf
xor
lret
dec
xchg
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
