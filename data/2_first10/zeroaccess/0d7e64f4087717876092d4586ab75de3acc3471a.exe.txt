push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
ljmp
jl
int3
xor
xor
ja
or
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
cmp
lahf
movl
mov
add
jmp
leave
mov
pop
mov
in
adc
dec
lods
jl
jl
jl
jl
ret
jl
mov
imull
js
mov
lea
sar
push
jo
adc
bound
inc
add
cmpsl
sti
mov
fs
pop
jge
add
xor
inc
or
mov
dec
arpl
and
xchg
mov
and
xchg
cwtl
jmp
aas
add
mov
aam
ret
push
rolb
cmp
push
add
fldenv
sbb
xchg
imul
pop
std
outsl
pop
movsb
pusha
dec
leave
hlt
nop
lods
xor
and
add
cmpsb
hlt
out
push
rol
movsb
in
mov
ret
out
addr16
mov
xchg
adc
cld
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
lcall
jl
jl
jl
mov
mov
adcb
jge
mov
cmc
or
jns
movsl
fstpl
sbb
dec
jg
loopne
orl
add
in
inc
mov
int3
mov
sub
or
in
jl
push
add
outsl
sub
outsl
enter
idiv
dec
lods
dec
mov
dec
and
leave
fdivrl
hlt
cmp
mov
inc
rclb
in
rorb
pop
stos
cld
lds
pushf
xchg
inc
cmpsb
mov
in
loope
popa
xchg
push
jle
jp
jns
sub
dec
pusha
xchg
cmp
sbb
push
insl
cmp
inc
add
div
mov
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
jge
jb
adc
xchg
or
push
dec
mov
test
add
in
or
jg
shlb
xchg
sbb
push
sbb
inc
cmp
fsubl
insl
pop
aam
or
lss
push
inc
mov
test
adc
jo
mov
sahf
xor
inc
xor
orb
push
fwait
inc
cmp
mov
xor
shlb
repz
frstor
jmp
mov
sbbl
mov
jne
push
jbe
int3
iret
inc
sub
xor
stc
lret
out
cmp
fidivl
xchg
inc
in
popf
iret
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
scas
lods
mov
jl
jl
and
adc
cli
out
adc
inc
pop
shlb
mov
adc
in
clc
test
cmpb
jg
stos
push
hlt
icebp
push
mov
xchg
pop
mov
and
xlat
imull
fstpl
or
cmp
mov
jmp
mov
stc
inc
in
inc
outsl
fidivrl
cmp
pop
addr16
in
xchg
js
sti
xlat
ds
dec
cmp
sub
inc
cld
mov
cmpsb
nop
sbb
out
jne
xor
push
mov
aaa
xor
arpl
daa
in
sub
nop
lret
add
orl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
movl
gs
jge
cmpsl
cwtl
ljmp
div
mov
jo
sub
std
mov
xor
push
inc
lret
addl
pop
jmp
add
fsubrs
push
cmpsb
incl
xorl
sbbl
loope
je
cwtl
sbb
insb
jno
cmpsl
imul
stos
inc
adc
xchg
cmp
inc
rep
push
push
cmpsl
leave
repz
xor
rcll
or
add
pop
mov
cmp
aas
mov
hlt
or
xor
int
pop
iret
sti
cwtl
or
movsb
dec
lret
xor
in
mov
ret
add
in
pop
add
vsqrtss
lret
add
movzwl
mov
jmp
repz
jecxz
push
scas
rcrb
jo
jl
jl
jl
xchg
pop
mov
insl
inc
imulb
adc
or
cmc
ds
ss
lods
cmp
cmpb
lahf
or
cs
out
push
cmp
xchg
jb
inc
and
push
dec
and
xlat
or
orl
push
adc
fs
mov
scas
out
stos
dec
fwait
sbb
pop
bound
fcoms
hlt
inc
addr16
loopne
dec
stos
ljmp
sbb
xor
les
xor
inc
hlt
iret
mov
jb
inc
mov
loope
push
mov
pop
sbb
mov
popf
pop
lock
xchg
mov
fstpl
mov
stc
shrl
stos
push
xor
lea
add
mov
mov
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
lds
dec
jo
jl
jl
jl
and
das
xchg
xchg
jbe
dec
fs
mov
out
out
pop
roll
dec
xor
or
xor
push
call
das
pop
mov
xchg
mov
stos
sbb
test
adcl
sub
inc
mov
adcl
jb
mov
mov
or
lods
jge
js
jae
jl
scas
cmp
loope
loope
scas
jno
scas
movsb
cmpsl
int
inc
imul
movsl
cmp
xchg
mov
mov
pop
inc
fcomp
outsb
or
sbb
jle
test
xchg
mov
rorl
cld
decl
call
imul
decl
add
cld
decl
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
scas
sub
addr16
jo
xchg
pop
and
sub
ret
mov
jmp
mov
fbld
cli
pop
notl
bound
bnd
fidivrl
push
dec
jl
dec
mov
cmp
cli
and
aas
cwtl
out
fmul
xchg
cmpsl
leave
cmc
negl
loope
adc
sarl
inc
lea
in
and
jl
jno
pushf
push
dec
jecxz
sub
push
jge
lea
dec
fcomi
xchg
pop
fsubs
sub
leave
fiaddl
and
aas
cmovae
and
jno
add
clc
bound
push
adc
mov
arpl
mov
jl
mov
dec
loop
sub
xchg
shlb
jmp
aas
jnp
fsubrs
jnp
sbb
leave
inc
or
fwait
push
mov
loope
jb
or
repnz
rcll
movsl
movsb
jnp
stos
cltd
hlt
jecxz
cld
mov
cmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
inc
imul
jb
jl
jg
jl
mov
or
popf
shl
clc
stc
hlt
dec
imul
ja
outsb
clc
push
fsubrl
fdivl
mov
fisubs
and
push
loopne
sar
scas
xor
mov
add
mov
ja
aam
xor
cmp
jno
jmp
sub
int
mov
jle
xchg
movsb
call
xchg
cmp
sbb
jb
icebp
ret
cmpsb
jbe
iret
cmp
mov
cmp
inc
daa
push
sbb
jl
or
or
cmc
xchg
adc
rclb
bound
enter
jno
nop
enter
lods
and
pop
mov
jp
cmp
adc
jecxz
push
cmp
sbb
and
ds
add
repnz
mov
ss
mov
inc
test
test
lahf
in
fs
mov
push
lret
shll
imul
inc
je
add
sbb
add
mov
cltd
mov
add
jl
jno
jl
ljmp
or
mov
pop
ds
fxch
lods
xchg
jnp
adc
daa
xchg
pop
push
cmp
mov
mov
mov
int3
xchg
and
inc
aaa
push
cmp
fisubs
dec
in
xlat
xchg
adc
sti
xchg
movb
int
mov
jmp
cmp
loopne
cmp
int
jno
inc
pop
inc
and
mov
pusha
stc
sarl
sub
cmpsl
mov
mov
lea
shrl
ret
imul
loopne
movsb
mov
adc
dec
adc
out
stc
ret
add
add
dec
aam
fdivrl
jecxz
xor
sahf
pop
sub
je
and
or
or
mov
insb
mov
fcmovnb
call
ficomps
aas
sbb
setge
das
push
jo
pop
fisttpll
daa
xor
pop
xchg
sahf
insb
adc
mov
adc
add
and
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
jne
subb
je
jl
jg
jl
xchg
mov
and
movsl
fsub
inc
xor
dec
xor
fs
push
cld
mov
xchg
js
in
mov
xchg
add
ljmp
fsts
cmp
repz
xchg
xchg
pop
mov
adc
sahf
popa
pop
daa
outsb
cld
mov
addr16
pop
xchg
insl
xchg
fsubl
clc
fcmovnbe
test
aaa
jp
fsts
push
push
sbb
jnp
mov
in
sub
cmp
cmp
jl
je
jle
mov
in
aad
cmp
dec
lret
cwtl
arpl
jmp
adc
jo
cmp
push
mov
addr16
outsb
mov
fsubp
jge
aad
in
inc
mov
mov
sti
mov
lods
lods
out
jmp
pop
inc
add
sbb
add
xchg
les
push
filds
xchg
nop
mov
ja
mov
sub
mov
inc
rclb
cwtl
movl
movl
or
mov
xor
mov
negl
add
movl
cmp
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
std
mov
mov
jl
jg
jl
aam
or
sbb
xor
push
fbld
push
jnp
cmp
push
pop
call
mov
test
xor
iret
xchg
xor
in
fucomp
pop
jp
fs
cmp
movsb
in
jnp
mov
sbb
pop
leave
pop
and
out
add
cmp
mov
push
and
push
clc
lea
ret
cli
xor
ds
jmp
subb
and
out
leave
rclb
sub
into
adcb
xchg
test
lock
les
xchg
cmpsb
adc
aad
enter
push
sbb
mov
lcall
lret
jmp
shrb
or
cmp
inc
fnstsw
lods
iret
mov
xchg
sub
frstor
pop
mov
out
mov
jns
insb
fcoml
lcall
or
push
and
rcrl
jge
xor
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
ss
jge
lea
jl
jg
jl
imul
cmp
xchg
mov
mov
inc
fs
sti
lea
mov
mov
gs
pop
arpl
ss
sbb
insb
pop
xchg
jle
enter
pop
lahf
push
ret
inc
sti
push
sbbl
xchg
or
jno
lods
addl
lods
xchg
sbb
xchg
sub
push
je
xchg
mov
and
jmp
push
das
shlb
repz
mov
or
lock
mov
jae
jb
cli
ret
and
pop
pushf
add
lahf
das
arpl
jno
push
out
dec
call
dec
xchg
and
daa
das
lds
sub
loope
decb
mov
adc
cmp
push
aaa
outsb
in
xchg
ds
dec
lret
pop
sarb
xchg
loope
cmp
sub
cmp
cmp
repz
fs
addr16
and
push
xchg
or
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
or
or
jg
jl
cmp
outsb
lahf
jns
int
orb
das
mov
cmp
mov
and
lods
fldenvs
sbb
mov
jg
sub
and
into
and
jbe
cmp
jl
and
mov
negl
insl
sahf
aad
inc
sub
or
push
cmp
bswap
mov
mov
out
repnz
mov
sub
jp
cmpsb
pushf
adc
sub
adc
enter
ja
cmp
jg
fstpl
mov
in
lods
xor
ja
push
mov
outsb
dec
pop
call
and
xchg
xor
inc
lock
mov
cmpsb
pushf
adc
mov
data16
insb
insl
adc
aaa
cmc
fdiv
push
fsubs
test
stos
mov
mov
rorl
dec
sub
movsl
mov
xchg
cmc
sub
and
jecxz
imull
lret
imul
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
sub
sub
jo
andb
or
adc
imul
sbb
add
out
outsl
ds
xor
adc
loop
dec
or
fidivs
mov
add
jecxz
dec
sub
xor
jg
push
aas
int
push
adc
in
xor
cwtl
mov
lea
push
setne
outsl
sbb
movsb
xor
jle
dec
daa
ret
push
mov
divb
pop
jb
lahf
scas
adc
add
pusha
sbb
mov
mov
inc
fiadds
scas
fistps
das
xchg
inc
push
jl
sarb
icebp
push
es
xchg
pop
xchg
add
shlb
arpl
loop
aas
jge
jle
inc
sbb
jge
insb
addl
lds
ljmp
xor
add
inc
mov
cs
fst
xchg
rorl
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
cli
push
xchg
dec
test
jl
jno
jl
sub
aas
sub
lock
cmp
xor
cld
out
mov
pop
mov
pushf
out
pop
and
or
out
or
and
dec
sbb
addr16
leave
pop
scas
daa
mov
ret
xchg
dec
dec
xlat
push
ret
outsb
push
mov
or
adc
or
xor
push
add
fbld
xor
xor
add
cmpl
push
cmp
imul
shlb
mov
pop
and
xor
mov
sub
inc
dec
xor
inc
cmp
push
cmp
sub
hlt
pop
pop
mov
std
jmp
push
cmp
xlat
jns
mov
loopne
xchg
cmp
pop
mov
or
cmpsb
adc
mov
je
fs
callw
or
mov
add
mulb
or
and
insb
data16
fnsave
out
andb
lret
lea
sub
inc
call
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
push
push
negb
jg
jl
fxsave
out
inc
jge
add
jnp
xlat
les
ret
int3
or
ss
jo
imul
cmpsb
das
adc
decl
aad
gs
fldenv
jecxz
mov
aad
mov
push
hlt
hlt
cmp
mov
icebp
stos
or
stos
mov
jns
and
jmp
sbb
xor
mov
sub
mov
jmp
shrb
sub
insb
jge
sub
cmp
test
adc
mov
jnp
jns
inc
jb
cmp
test
pusha
adc
sbb
repz
lcall
aaa
imul
out
mov
push
out
pop
and
sbb
movsb
js
mov
mov
shrl
add
pushf
inc
adc
sbb
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
pusha
cmp
lcall
jl
or
aad
xor
icebp
fwait
cwtl
stc
pop
outsl
inc
xchg
test
jae
incb
pop
mov
xchg
sub
andl
test
int
fistl
popa
adc
stc
mov
adc
cmp
fcoms
push
popf
je
into
mov
add
popa
fwait
push
in
lahf
push
mov
mov
test
jns
sarb
subl
adc
sub
repnz
xchg
and
enter
xor
rcr
cmpsl
sub
jne
rorl
add
sbb
jbe
ja
push
imul
clc
cmp
in
mov
mov
adc
cmp
or
hlt
pop
sti
mov
dec
sbb
lret
push
mov
sub
jecxz
adc
js
and
jb
or
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
and
pop
test
jl
jl
cmp
xor
test
ljmp
push
pop
mov
cmc
add
stos
and
loopne
xchg
xor
sti
add
pop
add
mov
mov
das
sahf
dec
test
dec
sarl
addr16
imul
inc
into
jp
mov
xchg
lar
jl
popf
loopne
lods
outsb
ss
into
jmp
or
or
iret
pusha
nop
jmp
sub
jb
addl
ja
inc
add
dec
andl
and
push
mov
cmpsb
jbe
dec
sub
ret
es
sbb
repnz
popa
dec
je
js,pn
push
arpl
stc
shl
sub
or
jns
lea
xchg
cld
es
call
lock
dec
lods
inc
test
pop
mov
jle
enter
mov
push
inc
add
cmp
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
in
aas
mov
jl
jl
jl
imul
add
xlat
mov
sbb
lods
fldcw
sub
xor
test
mov
inc
sub
cmp
mov
push
cld
scas
loop
sub
push
sbb
cmpsl
loope
mov
add
pop
int
mov
add
dec
fmuls
mov
shrl
iret
clc
stos
subb
or
ljmp
test
lret
cmp
fs
push
push
out
call
and
es
mov
dec
std
dec
jg
or
in
divl
sub
dec
jae
push
pop
adc
lds
and
rep
imulb
jecxz
pop
jne
push
lods
pop
out
aas
stos
xor
dec
outsl
adcb
je
inc
clc
xchg
repnz
push
dec
inc
jl
mov
mov
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
dec
jmp
jl
jl
mov
inc
mov
pop
mov
fadd
decb
in
mov
stc
or
mov
mov
push
stos
sbb
sub
pop
mov
mov
lods
xchg
je
xor
insl
inc
out
or
inc
jae
scas
lds
inc
stos
hlt
pop
scas
sub
adc
add
and
push
sub
mov
test
sbb
out
cmpsb
adc
lock
lcall
push
cmp
jl
pop
mov
out
sub
cltd
scas
lea
stc
and
and
in
stc
sub
sub
pop
and
inc
sarl
jg
test
xor
sbb
hlt
xchg
lds
outsb
push
sbb
gs
xchg
cmp
leave
mov
movsb
cwtl
add
push
pop
jmp
xlat
push
imul
xor
xchg
cs
push
out
add
jl
jl
lods
ljmp
dec
mov
stos
sub
xor
cmp
mov
pand
int
ret
fdivl
push
jle
adc
dec
out
pop
ds
gs
sub
sub
pop
pop
adc
adc
sahf
fwait
push
mov
or
out
xor
hlt
lea
fistpll
test
movsbl
or
jno
fistpl
shrl
insl
cmpb
rcrb
dec
pop
loopne
adc
xor
and
aas
inc
fs
iret
aaa
movsb
lds
stos
dec
mov
jg
xchg
dec
lret
xor
popa
std
cs
push
dec
in
cld
fstps
dec
xor
mov
aaa
loope
xchg
into
jp
js
and
mov
rorl
add
xor
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
jno
sub
add
jl
jl
sbb
jae
xchg
xchg
loopne
jge
faddl
inc
js
inc
inc
add
outsl
jne
sub
stc
inc
je
jl
fildl
gs
mov
sub
cmp
insl
jns
test
dec
inc
aam
add
lods
pop
or
or
pop
inc
xor
pop
imul
xchg
mov
andl
cmp
not
mov
daa
ret
rolb
jg
in
add
bound
mov
stos
in
sbb
aam
ds
cmp
mov
push
mov
xchg
lods
jmp
pop
std
fdivr
cmpsl
rcrl
cmpsl
mov
push
ret
ljmp
cmp
in
push
aam
xchg
fmull
lret
test
shrl
xchg
cs
in
insb
pop
cmp
mov
sub
cmpsb
jmp
je
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
mov
dec
push
add
jl
jl
and
shll
aas
sbb
clc
ljmp
jo
jp
cmpsb
mov
loopne
mov
and
addr16
mov
mov
push
imul
std
xlat
jb
imul
lcall
mov
jns
sti
std
sarl
xchg
cld
add
data16
into
lretw
xor
push
adc
cltd
insb
sbb
mov
cli
in
inc
inc
les
pop
mov
sbb
inc
rol
fisubrs
cli
and
neg
lds
mov
inc
loopne
les
test
or
mov
mov
cwtl
mov
adc
and
jecxz
cltd
fldenv
adc
jne
sub
mov
cmp
xchg
mov
sub
gs
jle
push
inc
inc
xchg
cmp
cmc
sub
add
cmp
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
mov
dec
sahf
jge
jl
push
jl
jl
das
add
jne
sub
fisttpll
iret
cmp
testb
jl
call
aas
cmpsb
jno
sbb
negb
enter
or
loopnew
mov
ja
cwtl
push
xor
js
fimuls
enter
insb
adc
aad
jmp
repnz
inc
and
pop
mov
pop
or
lahf
test
cmp
fwait
xchg
test
out
dec
sub
mov
jle
test
leave
pop
inc
sub
push
dec
aas
jo
gs
fwait
mov
and
xchg
mov
sbb
outsl
gs
cmc
add
outsb
inc
insb
movsl
call
loopne
adc
cwtl
mov
and
sub
push
pop
inc
cs
pushf
fnstcw
cld
scas
cmp
mov
jp
jo
imul
fnstenv
sarl
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
clc
pop
adc
jl
jl
jl
addr16
push
loopne
ret
adc
in
movsl
jmp
pop
clc
std
pop
adc
gs
rclb
adc
std
mov
inc
nop
orl
ja
fdivl
xchg
xchg
jb
adc
mov
sbb
aam
push
pop
push
rcr
xchg
pop
adc
in
mov
mov
pop
pop
sub
lock
push
add
ljmp
lcall
pusha
mov
incl
xor
icebp
int3
stos
or
mov
mov
test
cwtl
and
mov
in
popa
bnd
push
in
rcrl
push
mov
jnp
into
push
xchg
sub
adc
icebp
outsb
movsl
repnz
mov
rclb
mov
cwtl
movsb
xor
cmp
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
add
mov
adc
roll
pusha
push
loope
testb
aam
and
cmc
fisubl
cltd
pop
lods
adc
pop
ds
enter
pop
pop
jns,pn
and
sbb
inc
push
mov
lds
inc
or
adc
test
dec
nop
xor
or
es
jecxz
dec
xchg
push
mov
jmp
lods
stos
adc
pop
fcmovnbe
imul
mov
or
jns
cmpsl
mov
mov
data16
movsl
xor
inc
out
outsl
les
ror
add
mov
gs
xlat
icebp
sub
imul
cmpsb
mov
jg
push
inc
pushl
mov
push
sub
loope
bnd
or
pop
cmpsl
xchg
jns
and
jg
sbb
lea
fimull
add
add
andl
jg
and
daa
lods
xchg
add
jl
jl
jl
xor
popf
jns
pop
push
in
cmp
dec
push
ss
pop
xchg
xchg
mov
mov
lret
dec
mov
mov
lcallw
aaa
cli
dec
lods
jp
pop
dec
test
pop
xchg
pop
movsl
cmpl
adc
inc
bound
xchg
xor
sti
rcll
cld
loope
shrl
push
arpl
pop
fwait
shrl
cmp
fwait
mov
out
dec
or
insl
jp
ja
jb
pop
inc
popa
sub
mov
pop
add
pop
shll
cmc
jmp
push
rol
pop
inc
mov
push
insb
insl
and
out
mov
stos
nop
xchg
bound
je
mov
addr16
addb
cwtl
dec
js
sbb
cmpsb
jg
push
je
je
aad
push
jnp
roll
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
out
loope
sbb
jmp
sbb
out
popf
ret
sbb
pop
jbe
hlt
outsb
cld
adc
xchg
sahf
inc
xchg
in
mov
pop
imul
sbb
ljmp
cltd
xchg
adc
push
dec
push
icebp
mov
in
mov
adc
outsb
cwtl
outsb
stc
aaa
sbb
adc
cld
sub
pusha
out
rcrb
stos
leave
and
into
push
push
shl
addb
cmpsb
insl
sub
out
cmp
out
fdivrs
xchg
imul
mov
jne
fbld
leave
jle
rol
xchg
mov
and
inc
xchg
fimuls
stos
xor
fidivrs
jecxz
adc
ret
fs
repnz
pop
mov
into
pop
ret
mov
sbb
mov
movzwl
xor
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
out
out
push
jl
push
jl
jl
inc
xor
jbe
sbb
lahf
sbb
lds
mov
repnz
inc
inc
lcall
sahf
fimuls
rcrl
mov
xchg
dec
push
xor
or
faddp
mov
sub
and
mov
fldpi
mov
fmuls
sbb
ja
mov
jae
fadd
and
mov
cmp
push
jnp
outsl
ds
mov
das
div
daa
faddp
push
aaa
cmpsl
fucomi
xor
inc
dec
subb
sub
push
push
popf
sbb
je
lahf
sbb
adc
add
mov
aad
insb
cli
aad
jnp
mov
mov
cmp
sub
sub
stos
or
jb
aas
lret
sub
mov
into
fidivrs
lock
pushf
clc
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
dec
dec
add
sbb
jl
jl
fsts
pop
shll
scas
xor
in
dec
lret
lock
mov
imul
fisubs
aam
insb
out
stos
mov
mov
test
cmp
sbb
popa
xchg
xchg
dec
mov
jmp
out
pop
std
and
inc
push
jge
push
jle
lahf
sub
pusha
jae
mov
mov
pop
or
cltd
stos
inc
addr16
inc
xchg
std
mov
cmp
es
and
or
push
popf
pusha
dec
push
jnp
es
mov
mov
xchg
add
jno
sbb
or
xlat
sub
jno
adc
insl
jae
loop
inc
loop
cwtl
pusha
cltd
pop
into
pushl
sti
int
sub
pop
push
ljmp
inc
pop
cs
mov
xor
sbb
mov
sbbl
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
in
cld
mov
sbb
jl
jl
scas
push
sbb
ret
xchg
mov
in
rcrb
cmp
push
and
xor
jne
push
ljmp
or
aam
add
mov
nop
xorl
iret
imul
or
out
jno
lcall
out
or
mov
test
aaa
out
das
lcall
xchg
pop
mov
sbb
js
loopne
arpl
nop
test
mov
loopne
test
sbb
mov
ljmp
inc
dec
xchg
cmp
inc
inc
call
jge
mov
enter
in
or
sub
sub
add
push
jmp
aas
pop
shrl
xchg
jmp
mov
insl
mov
inc
fs
cmp
data16
stos
inc
mov
test
add
add
inc
cmp
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
inc
sbb
push
sbb
jl
jl
enter
inc
or
rolb
cmpsl
fdivl
addr16
jmp
adc
mov
lods
xchg
jo
mov
inc
cwtl
xchg
ret
push
jge
aam
pop
mov
mov
and
ds
sbb
ljmp
repnz
mov
cwtl
call
lods
mov
jmp
pushf
jg
test
jae
push
lds
les
xchg
jl
ss
stc
iret
jle
mov
add
mov
inc
cmp
gs
adc
cld
adc
fs
arpl
sub
xor
dec
outsl
xor
in
or
test
aaa
icebp
pop
sbb
sbb
cmpsl
jne
xor
adc
repz
xchg
cmp
js
cmc
outsb
pop
and
inc
mov
xorl
je
icebp
scas
in
movsl
cmpsb
int
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
in
jae
pop
push
sbb
jl
jl
mov
push
stos
sub
mov
pushl
adc
adc
cmp
lret
roll
push
imul
stos
stos
into
lods
sbb
or
scas
pop
sub
insl
pop
int3
gs
mov
mov
imul
loopne
sbb
inc
pop
std
or
jmp
es
fdivr
loopne
loope
xchg
leave
inc
mov
das
mov
out
in
push
sbb
mov
popa
gs
ret
mov
add
xlat
cs
and
cs
fisubs
add
sub
daa
test
inc
aaa
pop
mov
and
in
out
cmp
adc
inc
loope
jmp
test
and
into
mov
frstor
cmpsl
adc
cmpsl
inc
push
mov
or
cmp
test
ljmp
inc
mov
add
inc
xchg
add
add
add
sbb
mov
std
adc
fidivl
sbb
jl
jl
adc
add
or
pop
jo
hlt
adc
adc
dec
pop
ds
pop
out
push
daa
out
jae
cmp
test
mov
shlb
rcr
aam
ret
decb
repz
in
fildll
icebp
out
idivb
push
test
mov
dec
or
mov
pushf
mov
dec
push
ja
lods
xchg
jae
scas
popf
mov
bound
mov
adc
adc
and
lods
addl
xchg
sti
lds
pop
pop
lds
sub
inc
daa
mov
aaa
ret
mov
push
mov
arpl
rclb
arpl
insl
popf
adc
lods
mov
and
in
mov
and
mov
fisubl
imul
mov
sbb
pop
add
repnz
inc
in
sbb
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
hlt
stos
push
pop
sbb
jl
add
mov
outsb
repz
fs
sahf
and
xchg
sbb
jns
jg
cmp
push
dec
and
cli
add
je
or
fstpt
and
push
popa
mov
dec
pop
pop
xor
enter
xor
inc
mov
cmp
push
jmp
mov
mov
mov
inc
and
mov
pop
mov
mov
pop
rcrb
ror
adc
xchg
adc
jb
inc
enter
cmpsl
scas
in
cltd
ret
addr16
dec
dec
inc
push
adc
inc
fldl
outsl
xor
push
jmp
sbb
mov
je
cwtl
dec
dec
shr
sub
daa
cmovbe
and
pop
jmp
mov
test
ja
cmp
frstor
out
xlat
out
imul
sbb
and
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
inc
push
xchg
adc
cltd
mov
in
arpl
icebp
mov
pop
cwtl
out
insb
cmp
pusha
add
jecxz
fldz
lods
imul
cmp
stos
gs
push
dec
cmpsl
xor
mov
loopne
int3
gs
stc
sbb
pop
sbb
xor
test
xchg
call
test
lods
out
mov
xor
or
dec
dec
jg
sbb
int
xor
jp
out
jnp
add
sahf
clc
mov
loope
stos
stc
test
jmp
int
iret
subb
sub
shll
hlt
jne
mov
leave
mov
mov
jg
cmc
xor
cmc
clc
cmpb
jno
movsl
loop
or
jno
in
sbb
enter
insl
jae
cmp
cli
pop
push
and
jns
int
test
lds
mov
imul
mov
jmp
imul
test
xchg
lret
frstor
mov
mov
jl
jl
lods
sub
outsl
or
lret
sub
inc
out
jns
push
adc
xor
in
imulb
dec
repz
lods
push
in
mov
out
or
scas
outsb
clc
mov
cli
sub
jb
inc
ret
and
imul
xchg
adc
stos
sub
xchg
xchg
das
test
sub
insl
imul
ljmp
push
nop
outsb
dec
xor
lods
subb
push
or
inc
inc
icebp
push
add
lock
movsl
adc
rorl
mov
lea
push
mov
sbb
mov
inc
rolb
popa
js
stos
aaa
jecxz
dec
add
nop
xchg
dec
ja
adc
push
cwtl
or
push
pop
roll
pop
jbe
push
pusha
or
into
ficoms
mov
fsubs
lsl
mov
pop
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
or
jge
xchg
jl
adc
jl
paddusb
mov
rorl
mov
xchg
test
cmp
ret
mov
jp
shr
sub
push
pop
in
dec
push
sbb
lea
xlat
sub
cltd
in
je
jle
dec
in
sbb
in
jmp
mov
out
sahf
jecxz
pop
jg
jp
iret
imul
lret
loopne
dec
jbe
pop
insb
pop
lcall
fildll
ss
mov
cltd
mov
cmpsl
mov
cli
sub
and
outsl
daa
sbb
mov
add
add
rcll
mov
pop
repz
jb
pop
loopne
xchg
in
bound
arpl
add
clc
or
dec
and
aas
out
mov
push
inc
rorb
in
jecxz
sbb
test
mov
movsl
pushf
xchg
mov
jl
cmp
les
dec
dec
scas
jbe
mov
add
xchg
push
pop
jnp
mov
push
dec
popf
jno
iret
lods
inc
pop
push
adc
cmc
ja
jg
lea
ja
rcll
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
pop
pusha
mov
jg
jl
sbb
pop
dec
pop
testl
push
mov
jp
pop
mov
xlat
and
cs
xor
inc
pop
out
cmpsl
jno
fcompl
mov
xor
jae
inc
mov
imul
clc
mov
enter
lahf
neg
pop
mov
add
mov
push
pextrw
scas
sub
aam
dec
pop
clc
sbb
dec
push
mov
adc
loop
push
pmullw
mov
adc
adc
xorl
loop
test
push
popf
lds
jecxz
je
ds
sub
jbe
mov
xchg
call
fnstcw
sub
mov
inc
les
push
cmp
inc
adc
scas
xor
mov
sbb
push
int
mov
mov
mov
mov
push
xchg
loopne
mov
cwtl
repz
lret
popf
and
stc
out
jge
dec
enter
inc
xor
pop
xchg
sub
int3
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
and
jl
jg
jl
cmc
mov
cmp
inc
ficomps
lret
leave
sbb
popf
ss
std
push
iret
sbb
sti
mov
jne
enter
push
pop
dec
lock
cli
in
cmp
dec
xor
fcoml
inc
cs
mov
mov
cmp
and
mov
mov
jno
jg
xor
outsl
fisubrs
jno
sbb
out
mov
imul
bound
test
xor
dec
xor
leave
jp
xchg
sbb
jp
mov
or
aas
dec
fsubrl
sbb
mov
mov
fistpl
pop
loopne
iret
sub
adc
push
push
pop
sti
push
mov
fnstsw
adc
push
jno
adc
jae
cmc
push
add
repnz
inc
test
sub
sub
out
clc
int
dec
cli
jmp
popa
cmc
gs
mov
imul
push
sub
in
xchg
imul
les
jmp
mov
jl
adc
jl
cltd
dec
daa
and
call
jecxz
push
cmp
xor
pop
jl
mov
pop
xor
or
inc
cld
jge
cmp
loopne
lret
ds
mov
inc
mov
pop
sbb
xchg
ret
lcall
pop
sub
push
xor
leave
adc
xchg
lds
mov
ret
cmp
loopne
and
sbb
mov
jmp
stos
fs
repnz
repz
pop
xor
cmova
cmp
es
mov
out
cmp
aaa
int3
jl
je
mov
out
push
into
out
pushf
test
inc
outsb
mov
in
aaa
add
mov
fsubrl
in
pop
dec
jo
cmp
repnz
sbb
push
jecxz
outsl
inc
jbe
out
sub
adc
jmp
jg
pushf
inc
in
cmpsl
cmc
pop
push
sub
add
xchg
cmp
repz
fwait
shll
pop
cmp
sub
dec
and
xor
and
repnz
pop
ret
push
mov
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
mov
adc
jl
ds
jmp
outsb
xor
add
and
xchg
aaa
push
call
dec
iret
push
cmp
jecxz
mov
push
shrb
es
jae
sub
sub
int3
pop
call
shrb
outsl
aas
fwait
stc
pusha
imul
mov
das
sbb
or
pop
lahf
mov
cs
int
mov
cmp
or
xlat
movsl
ficoms
dec
pop
and
out
mov
jne
push
out
xor
adc
jns
mov
ja
orb
fwait
js
mov
fisttpll
inc
cmpsb
in
and
fnstenv
inc
inc
xor
jg
sbb
pusha
xlat
pop
ljmp
fisubrl
push
and
push
lret
jmp
test
dec
mov
cmpl
sahf
in
and
sub
xchg
jmp
enter
bound
mov
jle
test
addb
jmp
addl
imul
in
jl
les
cld
insb
mov
dec
mov
dec
sub
xor
loope
mov
pop
mov
or
mov
not
mov
mov
mov
sbbl
mov
mov
sub
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
mov
movsb
in
jae
insl
js
inc
jb
sar
sub
loopne
in
mov
popf
adc
push
cmc
cltd
mov
mov
gs
fmull
std
out
mov
pop
push
data16
repz
mov
adc
sbb
add
inc
and
out
sub
or
loop
test
pusha
sub
cmp
loop
les
add
rorl
test
pop
push
cltd
or
ret
jo
jl
dec
fimuls
xor
outsb
das
jo
pusha
jecxz
adc
mulb
xchg
in
aaa
int
adc
dec
jnp
leave
fwait
ss
jge
popf
lret
outsl
xchg
lea
fstps
je
mov
mov
fsubrs
cmp
sbb
jae
lods
mov
cmpsl
inc
xchg
push
xor
mov
or
xorl
cmpsl
xchg
insl
inc
mov
cmp
jmp
cmpsl
hlt
add
fsubl
push
lahf
push
ret
movsl
mov
adc
xor
movb
xor
testb
mov
pop
mov
das
jmp
mov
outsl
xchg
pop
fisttpl
or
sbb
mov
sbbl
jmp
jno
xlat
sti
sti
std
add
mov
fimuls
fsubl
jl
cltd
pop
push
clc
pop
push
fisttps
fldcw
jae
mov
push
neg
adc
pop
jb
sbb
test
cmp
or
cmc
hlt
push
aaa
xor
cmc
ret
mov
dec
push
leave
mov
divb
call
and
adc
into
ds
dec
sbb
lods
inc
mov
std
and
cmp
sub
ret
fidivrs
popa
sub
jb
fucomip
dec
adc
pop
sti
xchg
mov
dec
out
adc
mov
shl
fisttpll
jl
sbb
cltd
incb
push
hlt
neg
add
stc
aad
repnz
mov
incl
adc
push
push
das
addl
xchg
sbb
xor
loope
sub
push
enter
dec
jl
dec
mov
gs
mov
dec
xchg
addb
mov
adc
add
out
dec
inc
cmp
loop
inc
add
stos
aad
cwtl
sbb
sbb
sub
mov
fwait
loop
and
sbb
fidivrl
pushf
iret
int3
cmp
and
adc
outsb
sub
lret
outsl
sub
inc
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
bnd
jl
fdivrs
jl
aad
jecxz
xor
mov
lret
pop
ljmp
mov
dec
mov
push
bt
outsb
jb
jl
fld1
mov
xchg
clc
ss
es
and
xchg
push
in
arpl
jno
icebp
and
outsb
int
and
jl
add
idivl
inc
cs
push
js
pop
or
std
sub
test
mov
or
addr16
inc
bswap
dec
dec
push
ljmp
scas
rcl
inc
ret
ret
fiaddl
gs
ljmp
fiadds
testb
sbb
sbb
inc
jne
sarb
fbstp
jne
add
out
std
imul
cltd
inc
sahf
add
scas
add
mull
pop
pop
loop
shr
fsubs
inc
insl
jmp
push
gs
xlat
mov
sbb
stc
testl
in
movsb
enter
or
push
mov
lods
dec
mov
adc
push
bound
push
push
push
mov
ja
push
dec
stos
xor
lret
pop
pusha
scas
movsb
ret
icebp
dec
hlt
mov
test
in
cmc
jae
jmp
push
fwait
ret
mov
pop
sar
in
mov
mov
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
lods
push
push
jp
adc
cmp
jp
or
cmpsl
mov
jle
mov
push
shrb
dec
loope
xchg
js
leave
sbb
mov
lds
lods
scas
jg
jmp
test
fdivl
jbe
stos
jns
in
pop
inc
fsubl
mov
pop
je
sbb
rorl
sbb
jae
and
push
outsb
je
push
insb
leave
mov
mov
jb
les
cld
or
shll
dec
mov
add
in
mov
push
or
jl
lcall
sti
jmp
xlat
mov
push
pop
fcomps
dec
int
xor
out
hlt
add
xchg
xor
scas
cmp
rcrl
test
ret
lahf
push
sub
adc
dec
or
cmp
dec
out
cmpl
cmpsl
fidivs
xor
inc
das
mov
or
xor
sub
nop
das
out
xchg
mov
mov
ljmp
rcrl
pushl
sbb
fidivs
sbb
lahf
or
push
incb
lds
adc
jns
mov
test
mov
pop
fldenv
and
push
divb
xchg
jae
aam
xor
scas
jmp
mov
jmp
mov
stc
mov
pop
dec
dec
xorb
jg
jl
push
in
jmp
test
sahf
push
das
mov
loope
data16
push
out
test
lods
jl
fs
je
push
jle
cwtl
sahf
add
pop
rorl
lret
jmp
jecxz
loope
mov
mov
shrl
mov
and
jno
lods
dec
das
stos
sbb
jae
ficoml
add
dec
lret
lock
cltd
push
pop
mov
movsb
lods
inc
aad
mov
mov
inc
cmp
ljmp
cmp
adc
cmc
incb
inc
mov
jp
push
aaa
icebp
jns
aaa
xchg
loop
and
pop
push
cwtl
mov
aas
aam
je
fstl
mov
mov
cmp
lret
push
mov
mov
xchg
into
and
adc
shlb
lret
rcll
imull
orl
inc
insl
inc
xchg
jne
sub
pushf
dec
or
hlt
push
sbb
jns
push
out
daa
jge
bswap
scas
mov
mov
dec
scas
cltd
push
dec
repz
filds
and
or
push
popa
cmp
mov
dec
mov
mov
addr16
pusha
lret
mov
daa
sbb
adc
xchg
test
dec
es
pop
gs
adc
lahf
pop
sub
mov
or
insl
pop
stos
ffreep
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
cmp
add
jl
pop
jno
cld
popa
lods
in
cmpb
imul
popf
js
jl
pop
jle
xchg
mov
xchg
mov
mov
popa
ljmp
ljmp
and
mov
add
fcmovne
cltd
mov
fwait
dec
into
icebp
rclb
jns
jnp
neg
sbb
and
cltd
adc
lods
push
lcall
icebp
inc
gs
cwtl
shlb
outsl
dec
xchg
lock
xchg
imul
loopne
cli
jp
test
adc
sub
out
imulb
enter
fisttpl
push
dec
dec
outsb
pxor
sbbb
loope
mov
sub
push
insl
fdiv
jae
push
or
xor
and
shll
mov
cmp
push
jne
cwtl
decl
sbb
mov
dec
adc
test
or
push
cwtl
inc
xor
fiaddl
sbb
xor
clc
cmp
scas
mov
add
xor
mov
adc
adc
dec
cmp
call
or
shl
daa
cmp
jge
pop
mov
cmpsl
adc
out
push
test
stc
clc
pop
mov
js
shll
mov
hlt
add
leave
orb
inc
cld
je
xor
add
mov
jmp
stos
adc
mov
mov
cli
sbb
sub
jl
jg
jl
enter
and
std
inc
and
addb
test
mov
insb
dec
lret
out
inc
xchg
sub
push
pop
imul
adcb
push
pop
ret
xchg
mov
jle
fiaddl
push
stc
cmp
fcoml
stos
insb
dec
mov
sbb
cmp
cld
sbb
push
inc
je
lds
add
inc
popa
out
jne
xorb
out
test
dec
fwait
xor
mov
mov
pinsrw
sahf
and
or
sti
shlb
inc
arpl
pop
es
cwtl
mov
push
insb
cld
mov
xor
add
call
insb
lods
adc
mov
out
lock
dec
jno
jno
loop
mov
mov
mov
sbb
pop
arpl
lods
or
or
out
mov
cmp
test
jge
dec
pop
jbe
jns
mov
or
mov
mov
lcall
and
push
jno
lcall
scas
mov
push
enter
jo
xor
andb
mov
icebp
mov
add
cmp
add
arpl
shr
add
add
sub
imul
aad
das
jl
fdivrs
jl
push
int3
cmp
cmp
fisttpll
xchg
imul
jecxz
jb
fidivrs
fwait
cld
test
shr
bound
and
out
dec
fimuls
scas
pop
adc
pusha
fildll
shlb
or
add
scas
ucomiss
dec
lods
xorb
and
mov
or
rclb
mov
mov
pop
pop
jecxz
int3
pop
sub
scas
xchg
pop
loope
mov
push
xchg
call
outsl
loopne
sbb
xchg
bound
gs
push
or
outsl
mov
mov
ja
pusha
scas
gs
popw
movsb
popa
push
sub
fwait
xor
sub
fmuls
mov
cld
fnstsw
dec
test
sub
in
scas
mov
xchg
ds
pop
std
add
rcr
mov
adc
shl
loopne
xor
add
xor
add
lock
or
jle
xor
in
dec
and
movsl
push
ret
pop
in
lock
mov
in
sub
nop
pop
add
je
andl
jnp
and
and
pop
xchg
ss
mov
inc
test
mov
mov
sahf
and
or
shrb
int
mov
inc
or
or
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
cmp
enter
mov
or
adc
add
pop
es
xchg
xchg
int3
mov
lcall
pop
pop
add
in
shll
mov
and
jae
cmc
lahf
daa
mov
xor
push
ds
icebp
ljmp
or
and
inc
sahf
xor
add
dec
imul
and
mov
xor
cmp
push
ret
lret
ss
cmp
cmp
mov
jno
sbb
stc
adc
fcmovnbe
arpl
push
adc
nop
nop
jmp
gs
imul
js
mov
pop
je
in
mov
or
mov
fildl
cmp
xchg
int
xchg
sub
ljmp
cmpsb
push
ss
mov
jecxz
scas
fdivs
test
lods
scas
inc
daa
adc
add
push
sub
adc
and
xor
outsl
sub
and
pop
cmp
cs
inc
pop
sti
rcll
sub
sbb
ljmp
shr
ficoml
inc
mov
mov
pusha
mov
outsb
cmp
pop
std
js
fildll
jp
and
fisubrl
or
pop
lds
pop
rcrl
cmp
in
fimull
sbb
imul
neg
mov
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
fidivrs
cmp
call
aas
aad
sbb
jg
jl
dec
lcall
mov
div
in
in
jo
insb
or
adc
stc
pop
sbb
test
dec
mov
enter
inc
push
in
into
popf
cmpsw
loop
or
ret
jg
mov
mov
dec
pop
inc
call
shll
pop
dec
pop
mov
test
stos
push
ret
pop
fiadds
pusha
sub
and
jo
xchg
test
pop
pop
test
lds
push
cmp
ret
push
mov
cmpps
sbb
rclb
push
mov
lock
fcoml
jne
shlb
sub
aad
lock
dec
cmp
arpl
lds
fisubs
stos
int
in
sbb
dec
int3
mov
addr16
test
repz
repnz
sti
fsubp
jp
div
in
insb
rcrl
xor
andl
int
push
push
xchg
lods
mov
ficomps
and
mov
pop
sub
imul
add
jecxz
loopne
lret
mov
adc
repz
pop
jbe
sbb
bound
sub
jmp
dec
bound
mull
cmp
mov
mov
xor
movzbl
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
cld
shlb
and
jg
jl
fwait
call
in
fidivrl
pushf
xor
and
xor
fldcw
nop
aas
int
inc
jo
daa
xor
cmpsb
lret
addr16
leave
aas
cwtl
lds
push
cmp
pop
aas
fmul
add
pop
sub
push
es
fstpt
jb
push
fimull
sbb
lock
or
xchg
movsl
out
jge
mov
xlat
rcll
call
adc
mov
push
xor
adc
leave
xor
out
aaa
repnz
push
xchg
rcrb
fbstp
jge
ret
mov
mov
fiadds
js
bnd
out
ret
add
fnstenv
push
and
mov
popf
in
lahf
popf
mov
lds
lods
cmp
pop
pop
leave
imul
sub
in
mov
insl
sub
add
sbb
aad
nop
sub
xchg
xchg
fwait
test
or
test
mov
jmp
negl
jge
add
in
sbb
push
outsb
sbb
add
mov
dec
lahf
outsl
mov
ss
jae
dec
dec
mov
xchg
outsl
ljmp
xchg
xchg
cmp
out
stos
xchg
xchg
mov
out
inc
xchg
jmp
push
xor
sbb
cmovns
jnp
jmp
adc
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
ror
jmp
jl
call
cld
int3
xchg
lock
xchg
adc
and
lods
movsb
or
out
pop
push
mov
pop
sbb
jno
jns
daa
ss
push
aad
cmp
adc
cmp
in
idiv
xchg
mov
scas
mov
imul
add
popa
rorb
out
sbb
dec
push
fdivs
sbb
sahf
adc
aam
adc
mov
incl
data16
push
push
fsubl
jne
sbb
push
out
mov
sbb
dec
cltd
pop
pop
call
sub
lds
andps
or
cs
popf
inc
sbb
pop
adc
repnz
je
cwtl
in
xorl
sbb
jnp
test
pop
sbb
test
ljmp
push
cmp
test
es
sbb
sarl
add
loopne
into
fcompl
shll
mov
pop
imul
movsb
sbb
movsb
iret
or
pop
fistl
lds
jno
pop
adc
push
loop
or
shlb
mov
push
adc
sbb
cmp
scas
inc
and
cmp
lods
push
mov
or
ss
sbb
faddp
pop
ljmp
cmp
cli
and
cmp
cmp
filds
stos
mov
loop
cmp
cmp
enter
add
add
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
int
xor
call
sarb
xchg
lock
xor
jg
mov
fdivrl
stos
mov
dec
and
pop
adc
or
pop
mov
dec
or
push
or
ja
mov
mov
ret
sahf
push
insb
in
cmp
jmp
jns
imul
lret
mov
inc
xchg
flds
or
mov
testl
loope,pt
jecxz
push
out
popa
or
icebp
mov
mov
sbbb
cmp
stos
xchg
aam
stc
xchg
xchg
and
std
mov
add
sub
inc
fldl
add
pop
mov
repnz
adc
cmpsl
mov
inc
adc
scas
fdivr
pusha
add
and
hlt
movsb
scas
cmp
mov
push
out
shll
hlt
mov
adc
fbstp
sub
add
arpl
jmp
push
cmpsl
das
add
test
mov
pop
repnz
sbbl
decb
pushf
xchg
pop
enter
mov
arpl
les
pop
popf
cmp
gs
xor
cmp
pop
pop
jmp
cmp
insb
dec
cli
mov
stc
scas
xchg
imul
xor
sbb
testb
mov
orb
xor
clc
add
in
scas
shrl
mov
jmp
dec
cli
sbb
test
outsb
jp
out
rcrb
es
call
add
repnz
adc
mov
loopne
dec
lock
adc
sub
push
mov
dec
pop
stc
xor
stc
inc
nop
sbb
clc
inc
or
sbb
imul
insl
jns
jne
inc
jl
bound
test
fldenv
imul
jle
shl
or
adc
pop
dec
mov
cmpsb
jl
inc
shll
pop
arpl
push
add
insb
add
repz
cmp
mov
xchg
xor
xchg
lcall
fisttps
inc
and
mov
mov
jmp
stos
in
stc
notl
xor
sub
xchg
out
push
and
clc
xlat
sbb
lret
xor
sahf
mov
insl
or
inc
mov
fmul
arpl
incl
ror
mov
pop
pop
repz
mov
jg
sub
push
pop
test
cli
push
xor
dec
push
push
mov
sbb
sbb
insl
loopne
in
cmp
xor
xor
test
mov
lods
jnp
cmp
repz
and
push
or
cmp
movsl
repnz
lods
sub
xor
cmc
mov
out
push
lds
fsubl
ficoms
gs
std
sbbl
or
mov
mov
xor
mov
add
jmp
push
mov
aad
sbb
mov
cmp
jg
jl
or
inc
es
addr16
and
xchg
xchg
push
pop
cltd
lods
inc
sub
xchg
sar
sub
dec
xor
push
jnp
and
xlat
pop
jmp
pop
test
jae
jle
andb
sub
inc
push
mov
js
loope
fcomi
and
mov
call
daa
shll
sbb
popa
out
sbb
in
mov
adc
xor
jmp
xor
pop
lahf
sti
enter
imul
test
xlat
push
loope
mov
sti
in
xor
ffreep
test
in
xlat
sub
loop
xlat
xchg
lret
push
stc
mov
cltd
divl
addl
pop
sub
test
dec
jecxz
das
shrl
stos
cs
cld
stos
mov
pop
adcl
stos
mov
mov
cmp
loope
sub
dec
xor
mov
inc
test
mov
lahf
inc
or
xchg
mov
ljmp
std
xchg
xor
adc
mov
fnstcw
fbstp
imull
out
test
or
mov
inc
mov
mov
bnd
and
jmp
or
repnz
sub
loope
sub
cwtl
sub
adc
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
addr16
cmp
jg
jl
adc
add
inc
negb
mov
mov
mov
jmp
lea
sub
je
and
je
or
cmp
or
fdiv
add
fdivs
fs
cmp
movsl
or
adc
sub
test
icebp
or
jp
mov
mov
and
out
test
xor
aas
pop
lea
xor
jnp
inc
movsl
pop
addr16
sbbl
outsl
xor
rol
sti
push
pop
ja
mov
cmpsb
lock
push
and
and
jg
cmpsb
jmp
xchg
filds
sbb
outsl
mov
lods
mov
mov
call
mov
push
and
jnp
lahf
cmpsb
stos
cltd
fiaddl
lret
mov
sub
idivb
jnp
outsb
dec
xor
fwait
push
sub
dec
ret
aas
adc
cmpsl
xchg
outsl
and
les
movsb
mov
inc
jmp
lahf
sbb
pop
or
aaa
cli
fs
cmp
pop
sbb
decl
sub
lcall
cmp
xchg
cs
mov
inc
xchg
sbb
cwtl
jbe
cmp
aad
mov
jb
mov
ss
sbb
jns
push
lcall
pop
movsl
inc
stc
repnz
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
sahf
mov
push
mov
call
cmp
jg
jl
jmp
cmc
fcomps
mov
or
push
repz
dec
xchg
cmp
push
out
mov
fbld
sub
jle
xlat
insl
xor
call
xchg
call
orb
add
popa
fbld
adc
inc
inc
test
xorl
insb
sub
jb
daa
mov
push
xor
ret
leave
jno
jo
nop
shlb
and
sub
jle
in
cmp
int3
aam
bound
or
rclb
std
loop
lret
icebp
sub
ds
push
int3
dec
add
js
adc
mov
aam
dec
rcrb
stos
outsl
inc
inc
pop
sbb
pushf
icebp
mov
out
mov
mov
cmpsl
cmp
nop
mov
pop
sbb
push
dec
pop
inc
gs
bound
fbld
repnz
push
inc
sahf
xchg
cmc
or
fidivrs
lea
add
int3
in
push
cmp
push
adc
mov
imul
fidivl
sbb
wrmsr
pop
roll
push
movsb
pusha
icebp
adc
and
nop
sub
inc
ficoml
and
ret
adc
cs
into
idivl
iret
lock
scas
xchg
xchg
lret
xor
shrb
jno
sbb
pop
stos
mov
sub
je
push
adc
test
add
ret
out
std
cli
cmp
add
jl
call
mov
inc
adc
das
frstor
sbb
add
inc
not
inc
cli
jp
scas
xor
stc
gs
mov
cs
aad
mov
jmp
adc
mov
xor
nop
jne
mov
cld
mov
sub
mov
out
lcall
scas
aaa
push
cmp
push
push
xchg
lods
cwtl
insb
pop
fstpt
divl
ljmp
xchg
popa
jle
flds
roll
inc
mov
dec
pusha
cmp
mov
decb
dec
xor
and
push
insb
mov
test
mov
inc
popf
and
push
xchg
fwait
push
jl
xchg
jecxz
and
adc
pop
lds
xor
lret
stos
mov
enter
out
inc
pop
mov
xor
aas
imul
cli
adc
and
adc
clc
cld
repz
popa
push
mov
test
push
jmp
adc
nop
movsb
sub
adc
xchg
push
mov
and
pop
push
and
add
pushf
cmp
orl
or
cltd
insb
and
ret
outsb
movsb
js
mov
cld
pushf
jns
jmp
faddl
push
sub
mov
ret
fwait
xor
out
jge
xchg
inc
lea
in
push
stos
mov
add
add
or
je
out
sub
aaa
fistpll
jl
call
addr16
repnz
icebp
sub
add
xchg
lahf
loop
lea
lock
dec
outsb
mov
bnd
cwtl
movsb
ja
js
sub
subl
insb
dec
pop
sub
add
and
les
xlat
scas
sbb
dec
mov
jmp
in
xor
jns
ret
jnp
inc
insl
or
jbe
push
cli
into
sahf
gs
scas
cmp
dec
pop
mov
and
enter
add
mov
popf
sub
insl
stc
repz
data16
fistpl
les
push
dec
jno
inc
pushf
xor
jns
jo
jns
rorb
ja
repnz
sahf
in
inc
jecxz
and
pop
ljmp
aam
dec
push
sbb
xor
mov
dec
jp
and
int
push
sbb
ret
decl
mov
aaa
test
jbe
xor
mov
icebp
adc
jmp
fisttps
dec
lret
popl
pop
lcall
popa
pop
add
jp
lea
and
or
or
orl
fld
aas
lret
hlt
bound
in
shrl
jae
jns
test
sub
jg
das
iret
pop
mov
ret
push
mov
dec
cmpsl
out
jmp
rcll
popa
scas
mov
and
test
imul
mov
xor
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
pop
sbb
dec
jl,pt
call
mov
add
sbb
pusha
push
jne
xchg
add
test
sar
inc
and
jae
rol
pop
pop
mov
or
sbb
call
jmp
cmpb
lahf
jl
pushf
mov
dec
or
gs
sbb
les
aad
outsl
fistl
mov
sti
cmp
into
movsl
or
imul
xchg
lods
jne
leave
scas
dec
inc
dec
mov
and
mov
das
cmc
loope
lea
int3
out
jbe
or
shll
jmp
data16
add
test
pushf
cmp
xchg
cmc
mov
jno
jb
xchg
dec
add
frstor
xchg
data16
mov
dec
add
popl
testb
int3
cmp
adc
pop
mov
icebp
lods
popa
addb
in
hlt
int
je
hlt
enter
scas
notb
mov
add
xor
ss
out
xchg
rorl
mov
sahf
mov
repz
fnstsw
pop
std
pop
mov
cld
mov
cmp
mov
gs
nop
xchg
mov
loopne
xchg
jmp
mov
lahf
and
ret
fsubrs
push
jne
aas
sbb
cli
pop
cmp
cmp
pusha
call
jmp
mov
sti
jbe
xchg
dec
adc
test
idiv
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
dec
inc
xor
xor
jg
jl
jle
cmp
inc
jle
mov
int
pop
shrl
out
fbld
xchg
mov
xor
or
sbb
push
jle
xor
adc
fimuls
mov
mov
cmc
aaa
rcrb
sub
cwtl
xchg
mov
mov
addr16
xchg
dec
fdiv
adc
add
mov
mov
pop
sbb
loope
jbe
mov
cwtl
lds
and
jp,pt
fiadds
push
adc
jns
add
and
xchg
jecxz
push
or
xchg
outsb
add
mov
rclb
repnz
mov
pop
pop
pop
popa
add
mov
add
mov
test
aam
mov
fiaddl
rcr
and
js
lods
js
pop
test
lds
leave
gs
pushf
fnstsw
push
repz
pop
filds
imul
or
mov
decb
outsb
pop
dec
and
inc
stos
movsl
and
ss
stc
in
out
and
jmp
push
fsubrs
fidivl
lcall
xor
pop
mov
push
mulb
xchg
mov
aad
jnp
in
pop
sub
roll
iret
fmull
roll
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
push
cmp
xchg
jne
xchg
popa
mov
lret
lret
push
rcll
dec
mov
das
or
mov
out
xchg
mov
cmpsl
ret
dec
lods
and
push
fdivrl
xor
sbb
sbb
pushf
sub
mov
mov
xchg
ret
stos
andl
ret
and
lods
rclb
sub
xor
cwtl
xor
push
adc
das
mov
out
xchg
ja
shrb
push
or
xor
push
lea
cmpsl
jns
cmp
dec
andl
pop
out
ja
inc
inc
adc
jo
aas
jb
jo
fsts
les
mov
lret
mov
rorb
out
mov
fists
in
add
test
in
incl
jmp
mov
pop
testl
sub
repnz
rcll
push
gs
add
test
pusha
xlat
sbb
daa
pushf
loope
cmpsb
cmp
out
mov
repnz
das
scas
mov
add
or
fwait
mov
repz
rcrb
add
cmc
jecxz
or
and
je
sbb
sbb
mov
xor
pop
add
pop
popf
dec
out
pushf
scas
in
out
rcr
jmp
popf
shrb
add
in
repz
movsl
xchg
and
dec
xor
add
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
leave
or
jl
jg
jl
mov
cmp
dec
cmpsb
data16
loopne
push
mov
aaa
inc
outsb
sbb
mov
cmpsl
mov
mov
into
lret
call
and
dec
shll
xchg
or
lods
aam
jecxz
imul
add
mov
lcall
cwtl
dec
pop
adc
pop
std
add
jae
inc
mov
sub
test
xor
sub
frstor
repnz
and
jae
aas
cmp
sti
and
sbb
sti
jae
rclb
cmp
into
pop
adc
gs
mov
xchg
xor
imul
jne
dec
bound
pop
iret
mov
fisubrl
dec
pusha
and
cmpsl
mov
mov
pop
bnd
push
push
cltd
aas
data16
xchg
mov
out
xchg
mov
pop
out
push
sti
les
pop
jo
repz
jg
cmpsl
lea
mov
mov
in
insb
adc
rclb
mov
out
testl
inc
jnp
sbb
or
ret
cmc
xor
das
lahf
stos
addr16
pop
add
mov
sbb
jecxz
stos
cwtl
sbb
xlat
dec
into
hlt
mov
mov
jne
int3
aas
idivb
dec
test
mov
xor
pop
leave
ret
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
mov
jp
push
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
push
jp
xor
jmp
add
sbb
add
inc
test
add
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
aaa
pop
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
pushf
rorb
push
mov
jg
addr16
fwait
clc
rolb
aam
testb
add
inc
add
mov
adc
ljmp
sti
movb
sbb
test
out
mov
vprotq
xchg
cmp
cmp
inc
pcmpeqd
xchg
or
dec
shl
ds
lret
or
jae
mull
mov
or
pop
mov
sub
inc
mov
hlt
sub
sub
ljmp
in
sahf
dec
daa
das
lcall
cmp
ja
clc
daa
jl
in
pop
pop
xchg
and
add
test
stos
cmp
insb
pop
test
lods
bts
adc
xchg
mov
arpl
or
lret
push
push
nop
mov
in
pop
pop
or
sub
imul
imul
cmpsl
mov
cli
fwait
jae
cld
pop
pop
loopne
les
push
inc
mov
pop
cmp
hlt
les
cmp
aam
ret
in
xor
jnp
scas
stos
mov
xchg
sub
pop
lods
aas
aas
cmp
arpl
lahf
out
inc
cmpsl
cmpsb
inc
dec
scas
lret
testb
adc
inc
in
loope
sub
pushl
inc
mov
stc
pop
fldenv
outsl
mov
push
test
in
lock
rclb
gs
pop
jnp
xor
push
push
int3
xor
xchg
out
xor
lds
aaa
dec
jns
js
out
pop
lcall
xor
cs
aad
or
cmp
aam
and
dec
mov
and
cli
cmpb
adc
movb
rolb
push
out
pop
fcompl
mov
popa
insb
xchg
int
pop
mov
and
inc
inc
fidivrl
lock
jno
aas
jbe
mov
les
leave
adc
gs
xchg
ret
add
push
push
add
jno
fsubr
bound
mov
xor
jnp
mov
lds
jge
cli
out
jmp
jmp
leave
push
and
jae
rcrb
test
jle
outsl
aaa
adc
jl
lds
repz
outsb
jl
sub
outsl
pop
mov
xchg
push
rclb
loopne
inc
loope
cmp
lret
sub
leave
dec
mov
jo
inc
pop
in
rorb
ljmp
inc
mov
inc
xor
lock
icebp
inc
pop
and
nop
cmpsb
pop
pop
push
xor
jnp
push
inc
cmc
testb
cmc
aas
sub
inc
push
arpl
cmp
cwtl
int3
ljmp
ret
push
sbb
jecxz
shll
push
movsb
pop
je
cltd
movsl
inc
test
inc
xchg
push
push
mov
rcrl
xchg
insb
sbbl
movsb
jecxz
repnz
bound
jg
pop
mov
sarb
inc
loopne
out
test
jo
and
mov
mov
lods
mov
iret
push
lock
xchg
add
icebp
loope
mov
stos
jmp
xchg
dec
or
xchg
jb
jo
jns
es
mov
push
pop
add
sbb
sbb
lcall
gs
std
xor
inc
lea
mov
lret
fs
imul
jmp
int
dec
ss
sbb
cwtl
xchg
sub
adc
data16
xor
adc
mov
sbb
insb
add
ret
add
jo
add
cmp
inc
xchg
cmp
sub
push
shr
jae
in
aam
pop
aas
sub
in
sbb
pop
xchg
xchg
cltd
loope
out
or
sbb
loop
cmp
in
jns
in
xchg
cmpsb
adc
adc
mov
repnz
popa
mov
fidivs
cmpsb
mov
dec
add
cmpsb
inc
std
mov
dec
inc
test
pop
adc
adc
sbb
dec
jmp
enter
imul
mov
lret
fisubl
xchg
cmp
clc
jbe
inc
loope
jmp
inc
pop
push
out
out
test
adc
push
js
push
scas
mov
dec
addl
filds
add
dec
push
or
mov
jo
jnp
int
push
fs
cmp
lods
adc
in
mov
and
aas
insb
xchg
inc
ljmp
popa
cmp
push
add
ret
mov
sub
mov
dec
cs
lock
xor
and
fstpt
in
pop
or
cmpsb
jns
inc
push
adc
pop
arpl
pop
mov
dec
into
imul
in
mov
enter
jp
pop
dec
dec
sbb
inc
mov
cvtps2pd
into
or
repz
das
xlat
imul
push
jl
cwtl
pop
lock
xor
sbb
xchg
mov
push
es
cmp
into
shrb
mov
mov
lret
dec
enter
pop
nop
mov
rcll
pop
mov
sub
ljmp
pop
mov
fnstcw
adc
adc
sub
adc
mov
incl
dec
xor
and
pusha
dec
xchg
sbb
mov
inc
or
out
xchg
cltd
int3
sbb
push
data16
xor
mov
push
adc
push
sarb
adc
push
cmp
push
cwtl
push
imul
ja
in
lods
in
sub
mov
fbstp
push
out
mov
add
aad
xchg
adc
or
outsl
xor
xchg
cmp
ret
push
add
sub
xchg
aaa
adc
sub
push
pop
pop
in
mov
dec
pop
or
cwtl
xor
test
call
lods
jge
aad
mov
mov
jae
mov
in
test
jp
xchg
push
call
fwait
add
test
inc
sub
and
hlt
inc
test
inc
jg
std
cmpsb
mov
sahf
lret
push
ficoms
xor
mov
inc
pop
hlt
inc
mov
sbb
push
pop
inc
leave
mov
out
cli
jmp
ret
aad
ficoms
popa
fwait
lock
scas
inc
ficoms
adc
shll
add
es
leave
sarb
adc
in
pop
repz
add
hlt
and
pop
dec
add
sub
pop
ljmp
add
enter
in
cmpsb
out
add
neg
mov
push
push
lret
bound
fistl
sbbl
jne
movb
mov
insb
cs
jb
cmp
xchg
inc
pop
aam
cli
negb
inc
imulb
mov
sub
subb
jno
lret
loop
lds
xchg
mov
add
xchg
cmp
test
movsl
jne
ficoml
test
mov
out
repz
jo
in
add
push
sbb
pop
iret
fs
out
mov
mov
daa
mov
mov
push
dec
std
jb
jae
fs
stos
je
jo
mov
cmc
xchg
inc
pushf
xchg
test
jbe
push
subb
popf
push
in
les
mov
xchg
inc
fsubs
jns
cmp
or
dec
pop
xor
xor
repnz
out
add
mov
addb
sbb
lods
ficompl
cs
xchg
mov
adc
pminub
fwait
adc
out
out
dec
jne
das
cmpsl
pop
lock
sbb
add
sahf
push
lods
loopne
jg
bound
imul
xor
push
daa
cmp
lcall
in
aaa
pop
clc
dec
and
sahf
clc
fwait
iret
and
jl
mov
lea
sub
xorl
push
push
ss
call
cli
cltd
cs
mov
push
push
fwait
shll
push
and
add
xor
xlat
and
dec
mov
mov
mov
cmp
push
cmpsb
mov
jmp
les
cmp
push
scas
or
popf
cmp
pop
and
mov
push
cmpsb
xor
push
inc
jno
add
sarb
sub
push
adc
push
jle
xchg
add
mov
adc
jle
sbbl
inc
add
std
lock
sub
jle
jl
mov
fistpl
nopl
pushf
inc
mov
ja
xchg
sbb
xchg
aam
arpl
iret
add
shll
sbb
idivb
out
out
push
xor
xlat
movsl
dec
push
push
xor
push
xchg
cli
aaa
and
cmp
or
and
add
pop
in
sub
iret
push
cli
scas
sarl
sbb
adc
repnz
xor
pop
mov
xchg
mov
repz
dec
push
fwait
enter
stos
cld
push
aam
stos
dec
xchg
pop
aaa
ja
insb
lods
imul
pop
cmp
stos
push
out
out
push
push
push
daa
and
mov
std
shlb
jae
mov
popf
mov
or
js
outsl
add
and
gs
int
es
cli
xchg
pop
js
add
sbb
inc
add
faddl
mov
jnp
mov
pop
cmpb
pop
insb
inc
xor
adc
roll
and
lret
jmp
xor
pop
cmp
je
mov
adc
fwait
jecxz
pop
xor
and
pop
mov
daa
mov
and
call
xchg
inc
xor
loop
adc
rcrl
or
add
pusha
xchg
or
mov
add
loopne
xchg
or
andb
mov
pop
adcl
lret
jg
in
cmp
mov
cmpsl
xor
mov
xor
sub
xor
jnp
in
mov
icebp
xor
out
ret
insl
fld
cmp
lret
scas
lds
and
mov
imulb
add
pop
jecxz
sub
enter
test
jbe
or
dec
pop
cmp
push
cmpsb
mov
sub
pushf
pop
mov
mov
or
fidivs
dec
out
iret
sub
mov
jno
push
lret
nop
loope
push
pop
scas
sbb
lea
into
jg
lods
mov
dec
int3
dec
push
jg
nop
in
lods
lods
call
sbb
orb
ds
sub
pop
shr
ja
or
xchg
outsl
lea
mov
int3
cmp
dec
rclb
test
ret
gs
cmp
test
add
shlb
popf
lock
test
sbb
inc
dec
sbb
push
clc
shrl
mov
adc
dec
fmull
stc
mov
int3
bound
je
xor
xor
jae
xchg
fimuls
loop
mov
sub
mov
and
test
xchg
neg
and
push
add
mov
adc
sbb
dec
filds
loope
popf
cwtl
mov
mov
clc
dec
dec
sahf
jb
lea
push
sbb
cmpsl
imul
ret
sbb
cmp
inc
nop
pop
test
rcll
stos
cltd
fsts
mov
xor
xlat
lcall
repnz
push
or
sbb
movsb
loop
jae
hlt
out
dec
ret
pop
xor
pop
xchg
ja
ds
int
inc
scas
push
sbb
mov
lds
cmpsb
mov
mul
das
je
out
jbe
lock
lock
lret
ret
pop
ljmp
in
sub
dec
pop
into
stos
faddl
lretw
cmpsb
dec
lret
sub
outsl
insl
push
idivb
repnz
mull
xor
jo
mov
aam
rcr
mov
xor
insb
mov
sub
jl
mov
mov
add
movsb
lods
dec
jo
push
lods
fcompl
inc
fildl
sub
sub
out
dec
js
xchg
fs
pop
addr16
jne
add
sbbl
lock
test
sti
adc
popa
shrb
bound
test
mov
jmp
outsb
mov
sbb
loope
jle
stos
cmp
jge
shll
out
sub
mov
add
fadds
scas
lods
pop
mov
cmp
loope
sbb
dec
nop
sbb
jnp
test
sub
out
lret
scas
out
aaa
sub
scas
ret
lcall
outsl
lds
call
inc
sbb
fcoms
stos
test
mov
jnp
pop
aaa
lcall
cld
fmuls
nop
sbb
inc
or
mov
mov
push
notl
mov
cld
sub
mov
outsl
cwtl
shrb
push
orb
fstpl
pop
and
test
and
gs
imul
test
daa
cs
mov
push
or
adc
add
loop
pushl
mov
jnp
cld
fnsave
aad
mov
and
jmp
xor
sti
movsl
jo
arpl
leave
cmp
cmp
fsubl
adc
cltd
pop
or
push
mov
jp
push
scas
out
add
adc
inc
out
inc
fldt
inc
push
jns
mov
test
or
in
fidivs
rorb
in
rcr
loopne
add
xchg
xchg
xor
pushf
cmp
leave
das
sbb
push
and
idivl
test
std
andl
xchg
add
xchg
in
push
scas
jp
and
sbb
push
sbb
out
xor
add
and
vpcmpeqw
cmpsl
nop
movsb
dec
sub
daa
pop
cmpsb
lea
push
ds
jl
push
inc
hlt
and
jecxz
andl
cmpsb
int
sub
mov
test
test
jge
test
pop
popa
jne
dec
pop
mov
sarb
sub
adc
jno
bound
push
mov
hlt
push
daa
aas
mov
mov
push
cmp
xor
push
pop
adc
adc
outsb
loop
inc
adcl
int3
cmp
lahf
lret
cs
pop
push
rcll
cltd
fs
insl
ret
fcmovnu
or
sub
push
gs
and
adc
iret
ret
imull
popa
imul
sub
mov
inc
ds
jg
cmp
pop
xchg
and
pop
push
mov
add
loopne
push
inc
fistl
outsb
cmpsl
jmp
mov
sub
cmp
pop
or
xchg
nop
dec
sbb
bound
in
pop
dec
fisubrl
std
es
cmpsb
call
jno
sbb
ljmp
jmp
sbbl
mov
or
lcall
and
mov
cmp
sbb
adcb
ret
call
iret
test
xor
enter
lcall
std
clc
lcall
stos
jae
cwtl
push
subl
xchg
cmc
sbb
ret
sahf
mov
inc
push
mov
push
cmp
sub
adc
gs
xor
in
dec
shrb
sti
push
ret
mov
mov
mov
or
iret
sub
push
dec
sub
xor
xchg
xor
movsb
out
adcb
adc
push
xor
cmpsb
inc
cs
xor
and
fsts
movsb
je
adc
aam
jno
and
pop
adc
ljmp
shrl
cmpsb
movsl
adc
xchg
test
mov
test
or
push
je
cli
addr16
cmp
dec
cld
dec
enter
mov
scas
lahf
enter
mov
inc
jnp
adcb
lahf
lret
jle
out
mov
mov
imul
sbb
fisttps
fmull
mov
adc
shrb
mov
add
fs
mov
mov
pop
popf
scas
lea
cmp
sub
cmp
dec
scas
jg
stc
push
jne
mov
cvttps2pi
cmp
inc
cwtl
push
call
cltd
cld
jnp
aam
pusha
mov
mov
xlat
pop
gs
jp
cmp
xor
jp
cli
popa
test
pop
fbld
jne
ss
push
jo
jnp
loope
xor
nop
sahf
ret
out
inc
xchg
mov
sbb
sbb
push
xchg
xchg
push
in
or
in
xor
cmpb
adcb
test
xor
int3
and
test
in
adc
mov
inc
out
sahf
xchg
or
push
jp
insb
clc
outsb
addr16
test
adc
call
and
xor
adc
and
and
loopne
adc
sahf
sub
sbb
das
div
das
int3
inc
stos
push
outsb
xor
push
adc
jns
test
or
or
inc
sub
mov
add
aas
les
sub
scas
xchg
stos
cmc
dec
mov
scas
hlt
daa
addr16
dec
push
mov
lods
mov
adc
pop
inc
lret
outsl
lock
and
adc
cmp
fdivs
mov
outsl
jl
insb
add
daa
pop
repz
cmp
test
pop
leave
mov
xchg
into
push
es
sbb
dec
in
dec
pop
xchg
jle
pop
jb
bound
ds
jae
push
sub
popa
in
dec
pop
jecxz
sbb
and
inc
lret
dec
mov
mov
adc
or
pusha
subb
imulb
or
dec
pushf
sub
push
aas
repz
out
loop
pop
out
jae
andl
mov
jns
ljmp
lahf
push
fimull
mov
ja
les
adc
mov
cwtl
scas
jp
or
call
xor
xchg
ret
lea
jmp
cmp
test
roll
lret
sarl
jge
out
test
jge
fdivrs
fwait
loope
xor
pop
inc
lcall
nop
shrb
jge
fiadds
mul
dec
add
shrl
xchg
mov
cmpb
data16
scas
outsl
xor
lea
jecxz
xlat
xchg
push
sbb
icebp
cs
sbb
jbe
loope
popf
xchg
xor
fwait
add
push
test
clc
cwtl
fisttpl
repnz
dec
fnstsw
insl
dec
adc
in
and
sub
test
stos
iret
push
add
jne
dec
loopne
push
gs
or
lds
mov
lret
push
dec
mov
pop
and
cmp
push
nop
and
mov
shr
clc
repnz
out
adc
popf
adcl
aas
pop
dec
sub
pop
imul
lea
imul
fidivl
jmp
mov
sbb
sbb
push
jl
jno
pop
or
mov
movsb
mov
fdivl
lret
or
andl
roll
test
pop
imul
bound
jnp
and
cltd
int3
daa
pop
sbb
adc
aaa
sbb
jl
mov
scas
lcall
ja
jle
cmp
sahf
sub
lahf
jne
pop
stos
mov
or
push
aas
sbb
jne
mov
lock
sub
aad
lods
inc
adcb
mov
je
adc
cmp
test
cmp
aas
call
or
mov
fwait
mov
cmpsb
cld
lds
sub
mov
jl
jns
and
jne
ds
push
cmp
adc
mov
cmp
sub
fs
orb
ja
or
cmp
cmp
add
inc
icebp
pop
xor
jns
inc
loop
cltd
mov
ljmp
jno
lret
ja
loope
pop
push
mov
out
sub
mov
mov
in
jae
pop
lods
test
mov
pop
add
fstps
add
loop
ss
xchg
mov
aas
outsl
outsb
sti
outsb
cltd
mov
push
subb
inc
push
and
jecxz
push
addl
fcompl
push
ja
xchg
mov
pop
add
push
xor
addr16
movsl
jno
inc
lcall
stos
mov
push
sbb
pop
movsb
cmc
fsts
push
push
aas
fcomp
jmp
mov
pmaxub
adc
lcall
sub
loop
fisubl
faddl
movsl
cmp
sbb
adc
out
into
pop
and
daa
or
ja
cltd
out
in
pop
popf
sub
push
dec
mov
cmpsl
test
dec
adc
jae
add
orl
add
jbe
cmp
pop
xor
arpl
or
sti
js
inc
stos
mov
insl
sub
lods
cmp
xor
dec
hlt
or
out
xchg
cmp
rcrb
in
mov
xor
push
clc
jb
and
or
or
xchg
sbb
push
xor
shrl
mulb
mul
jb
or
in
mov
mov
fcoml
cmpsl
dec
shrl
add
cmc
addl
inc
icebp
fs
jbe
andl
cmpsb
repz
lds
dec
jno
frstor
mov
jb
jl
ret
out
fisttpl
adc
xchg
ret
xchg
out
adc
faddl
addr16
aad
mov
pop
mov
xchg
outsl
pop
into
adc
push
xorl
stos
push
pusha
mov
pop
fldl
hlt
adc
cmp
leave
pop
inc
dec
jl
sub
cwtl
test
xchg
and
mov
xchg
cltd
xchg
mov
cltd
cmp
popa
in
cli
scas
push
sbb
shr
mov
fstpl
push
and
mov
xchg
sbb
mov
or
daa
rol
sbb
xor
std
jo
sub
data16
sbb
sbb
arpl
hlt
dec
ror
pop
dec
push
bndldx
aas
xchg
adc
out
cld
into
sbb
insl
ret
dec
sbb
dec
jl
xor
xor
mov
test
mov
bound
outsb
gs
add
dec
sub
addr16
call
inc
push
repnz
mov
cmp
jbe
and
mov
dec
cltd
pushf
stos
lods
out
jmp
and
dec
sbb
mov
scas
roll
jnp
cmpsb
push
inc
jne
inc
ret
decb
adc
repz
and
inc
pop
jne
sti
jg
fimuls
add
bound
scas
push
rolb
nop
loope
call
and
add
and
lret
daa
xchg
outsl
hlt
xor
ds
inc
xor
jecxz
cltd
push
inc
xor
divb
or
addr16
mov
jp
xor
loop
jne
inc
dec
jnp
push
inc
push
mov
push
addr16
dec
cmp
pop
ss
jp
js
jae
cmc
push
testb
ljmp
cltd
dec
int3
pop
pop
sub
das
push
daa
imul
push
push
mov
push
subb
add
ds
mov
jg
loop
mov
xchg
aam
aad
es
add
dec
or
sarl
faddl
cmc
mov
sbb
sub
sbb
and
mov
push
xor
push
cmp
push
xchg
jmp
mov
mov
jg
and
cltd
fwait
adc
adc
je
or
cmp
adc
sub
mov
and
and
lock
cli
fsubr
jno
cmc
aaa
rcll
leave
push
push
imul
jns
sbb
cli
fwait
add
push
jmp
xchg
xor
popf
push
add
inc
inc
fstpl
pop
imul
and
dec
ja
icebp
lcall
dec
ds
sti
push
lret
adc
push
shlb
mov
sbb
inc
loope
mov
mov
adc
pop
inc
mov
lret
into
pusha
clc
xorb
in
cmpsl
jns
dec
sahf
mov
and
sarl
notb
jo
aam
clc
stos
cmp
xor
gs
jb
adc
pushf
leave
and
jnp
aas
or
cld
in
out
loop
sub
xor
mov
fwait
lahf
inc
loop
leave
test
aam
data16
xor
pop
movsl
out
loopne
jnp
test
sub
jle
lcall
mov
push
cmp
push
jge
jns
pusha
jle
das
pop
pop
fwait
shr
cltd
sub
iret
rclb
dec
int
pop
movsb
stos
fldl
sahf
bound
loope
or
push
int3
int
insl
or
xchg
lods
enter
and
outsb
dec
cmp
push
insb
mov
mov
jecxz
dec
lds
dec
adc
mov
xchg
or
mov
cli
xor
dec
lods
pop
dec
xorl
xlat
js
insb
sarl
adc
popa
and
sub
mov
imul
sub
cltd
jp
sub
sbb
std
test
cmp
lds
add
lahf
imul
inc
dec
popf
push
inc
mov
pop
adc
xor
stos
clc
dec
lods
pop
cmpsb
add
call
loopne
aam
icebp
jge
jecxz
addb
mov
insb
lahf
adc
cli
in
and
dec
and
cmc
in
mov
mov
roll
cmp
pushf
push
mov
pusha
push
imul
mov
sti
data16
jl
inc
out
insl
in
js
insl
jl
out
jae
jbe
jb
sbb
jge
sub
orb
mov
aam
scas
cmovs
push
xchg
cmpsl
add
xchg
pop
pop
int
mov
xor
jecxz
out
dec
and
xorl
fwait
ds
push
stos
pushf
cmpl
sbb
popf
mov
sbb
cmp
ds
mov
dec
test
stos
dec
push
add
lds
mov
pop
mov
push
es
and
adcl
jecxz
pop
add
add
rclb
mov
clc
test
pop
push
xor
lods
pop
sub
loope
mov
pop
push
jle
iret
and
pop
add
push
cmpsl
mov
hlt
sbb
pusha
arpl
data16
or
lea
cmp
repz
fildll
std
les
cmpsb
mov
cli
out
fbstp
imull
dec
sahf
dec
and
pushf
bnd
xchg
fcoms
add
lret
icebp
fsubrl
xor
mov
cmpsl
mov
sti
fwait
roll
rcll
inc
scas
add
and
jecxz
pop
rcr
out
int3
or
cmp
cmp
dec
push
sub
and
movsb
repnz
enter
iret
sarb
xchg
inc
cmp
jecxz
addr16
add
adc
std
out
lods
add
rcrl
clc
sbbl
add
push
dec
xchg
pop
cwtl
ret
clc
fiadds
stos
cmp
mov
dec
fistpll
lret
sbb
or
and
popa
jmp
cmp
mov
and
pop
movsb
lret
rorb
das
fs
cmp
cmp
cmp
mov
ret
mov
mov
and
push
add
jmp
int3
sub
repz
xlat
jg
add
filds
jle
mov
jo
mov
sarb
jge
lock
mov
ficompl
aad
test
ss
movsb
jae
mov
inc
push
push
outsb
test
push
clc
sbb
insb
ret
pop
insb
int3
aaa
sub
xchg
xlat
call
push
dec
jno
add
push
test
repz
mov
jge
jb
sub
xchg
mov
push
or
vmwrite
xchg
les
out
sbb
outsb
xor
add
jp
dec
aad
es
stos
enter
dec
lcall
mov
add
clc
jbe
adc
xchg
mov
and
js
jg
jb
enter
dec
cmc
cltd
cmp
loop
jne
shrl
mov
js
mov
arpl
jg
inc
in
push
int
imul
orb
sbb
push
ds
fstps
xlat
xor
inc
cmp
dec
aad
push
sbbl
loope
lds
jge
fwait
arpl
out
cmpsl
add
inc
push
xor
pop
fidivrl
clc
jg
addr16
xchg
shll
jl
xchg
and
and
pop
xor
and
xchg
push
sbb
add
test
nop
clc
in
in
adc
shll
daa
out
cwtl
mov
push
jmp
out
or
and
jne
sarb
mov
add
lret
pop
mov
lea
fwait
or
jne
cltd
fs
add
and
imul
clc
adc
jae
movsl
push
jns
nop
mov
nop
dec
mov
mov
xchg
in
or
cld
jge
push
mov
push
icebp
push
in
and
push
clc
test
insl
sbb
loope
incl
out
gs
aas
in
loopne
ret
xor
inc
mov
mov
sbb
fdivl
out
fnstcw
sbb
or
cmp
jl
adc
rolw
mov
xor
sub
mov
sbb
int
xchg
jg
divl
push
push
scas
subl
xchg
fisttpl
mov
push
pusha
in
ss
push
aam
xlat
jb
xchg
js
xchg
lea
ret
rcr
outsb
in
adc
lds
push
jb
push
mov
scas
add
jmp
mov
xchg
cmp
xor
dec
loope
rcll
cmpb
out
ret
cmp
sub
pop
icebp
repz
popf
jle
add
movsl
in
mov
aaa
cld
sti
sahf
out
push
push
dec
jb
test
ja
movsb
mov
lods
clc
adcb
mov
xor
inc
inc
or
std
jmp
or
sub
add
inc
mov
jg
add
mov
das
out
sub
clc
adc
xchg
fwait
adc
mov
cld
jle
mov
loope
std
movsl
stos
or
dec
sub
cmpsl
and
js
imul
ret
push
call
icebp
sub
int3
in
or
movsb
mov
shll
mov
pusha
das
mov
sub
mov
scas
pop
out
mov
pusha
out
cmc
jo
pop
lret
cltd
add
loopne
test
icebp
push
xchg
leave
push
shrl
mov
xor
or
add
mov
mov
mov
mov
cmp
pop
nop
pop
or
ret
xor
dec
repnz
mov
aam
pop
sub
shrl
stos
jne
xchg
xor
dec
sub
test
xchg
jbe
xlat
dec
pop
outsl
xchg
fsts
sub
cmp
cltd
xchg
scas
fwait
push
pusha
mov
jmp
scas
jmp
or
mov
xor
scas
cmp
inc
das
push
sar
adc
rorl
insl
aam
loop
outsl
jnp
loop
mov
mov
cmp
add
lret
or
movsb
adc
sbb
jo
xchg
cmc
mov
int3
mov
mov
sti
mov
ret
push
or
cli
rcll
jo
es
jp
jp
push
mov
outsb
ja
pusha
icebp
outsl
hlt
mov
jp
jmp
mov
sbb
movsl
dec
stos
push
in
mov
mov
mov
or
aam
gs
mov
nop
sub
lods
cmpsl
add
fstpt
in
shll
push
xor
xor
and
shlb
cli
cmp
popa
outsl
inc
jnp
mov
cld
scas
sub
cmc
inc
sbb
mov
inc
mov
xor
xchg
lea
stos
xor
jnp
shl
rcrl
mov
jnp
pop
out
cltd
repnz
nop
cmp
imul
movb
or
rorb
cmpsb
cmp
sub
adc
or
shrb
ljmp
shrb
test
add
cmp
cmc
repz
scas
and
and
push
mov
jo
mov
push
dec
xchg
sbb
push
dec
leave
test
orb
dec
sbb
movsl
xchg
sbb
dec
pusha
xor
pushw
incb
dec
xchg
inc
push
cltd
outsb
in
xrelease
xor
js
sbb
adc
sarb
add
hlt
sub
cs
sbb
dec
cmpsl
test
sbb
out
cmp
out
sti
sub
test
adc
insl
push
or
lcall
lahf
ret
nop
cs
ret
icebp
inc
in
lods
jne
push
xchg
std
mov
cld
xor
adc
xchg
push
cmpl
pop
pusha
xor
inc
in
pop
loopw
fwait
aas
repz
roll
push
mov
mov
addr16
test
mov
sbb
loopne
sbb
push
data16
inc
or
sbb
mov
lret
mov
jecxz
mov
mov
mov
mov
push
adcb
push
decb
push
iret
or
xor
aad
shll
repnz
mov
mov
mov
add
out
xor
inc
lock
test
fstp
imul
insl
adc
jno
add
repz
fnstsw
or
lea
push
push
xchg
dec
das
push
roll
lea
sub
aad
pushf
in
push
into
cmp
clc
sbb
test
testb
xlat
mov
in
jg
lods
sub
sbb
hlt
mov
ljmp
pop
lcall
cmp
push
push
sbbl
enter
push
and
test
cld
sbb
aam
xor
test
jbe
xor
cmp
das
adcl
jge
fldcw
mov
sub
inc
pop
mov
call
mov
loop
mov
mov
repz
and
orb
or
cmp
lods
or
fsubrs
call
adc
push
scas
sub
ss
cmp
sti
bound
jle
idivb
xor
movsl
and
sub
paddusw
rcr
lods
rcrb
mov
stos
sub
pop
sub
ja
push
fldcw
hlt
outsb
cmp
outsb
sub
cmp
mov
jb
add
out
scas
icebp
js
gs
in
data16
mov
jmp
jns
stos
andb
sbb
push
cmpsl
mov
mov
sbb
into
aam
dec
fs
xor
inc
dec
xchg
mov
daa
inc
adc
iret
mov
xchg
xor
das
mov
daa
into
xor
mov
pop
inc
xor
jg
call
loope
mov
sarl
cmpsl
lcall
push
dec
stos
in
mov
push
outsl
mov
adc
xchg
jne
adc
call
int3
xchg
add
xor
in
bound
jge
sub
add
push
cmp
fnstcw
mov
xchg
lock
rcll
xchg
shrb
add
lret
add
pop
sbb
aas
dec
cmp
jo
sbb
xor
stos
cmp
mov
outsb
mov
sub
inc
into
addr16
std
daa
fwait
andl
cmpsl
jns
dec
repz
shrb
sbb
call
fnstcw
push
mov
cld
add
sbb
mov
fisubs
mov
aam
ja
test
sub
into
dec
jbe
lcall
mov
add
mov
and
lds
addr16
jle
pop
adc
cli
push
sti
loop
mov
rcr
add
push
mov
inc
jmp
imul
dec
je
rclb
out
lds
xchg
adc
sbb
imul
mov
mov
popf
adc
repz
mov
push
call
push
lea
icebp
in
mov
test
mov
or
imul
or
sti
ret
gs
icebp
ss
jmp
xchg
jl
dec
xor
and
jle,pt
xchg
mov
push
add
sub
pusha
repnz
fistl
jae
cltd
fstps
subb
lret
rcll
mov
add
fisttpl
lds
addr16
xchg
test
mov
mov
adc
lret
lret
leave
cld
mov
or
dec
xchg
dec
test
and
cmp
loopne
test
pop
sti
jge
out
mov
iret
dec
fbstp
gs
mov
inc
lcall
and
jbe
cmp
xchg
cmp
or
fsubs
dec
sbb
inc
loope
xchg
lcall
mov
mov
adc
pop
add
rcrl
popf
pop
call
nop
imul
sbb
adc
je
or
stos
push
xor
inc
pusha
adc
call
xchg
pop
push
push
mov
sub
ficoms
add
lea
inc
xchg
out
xor
push
cmp
rorl
pop
lods
cmp
sbb
pop
out
pop
jns
scas
enter
sub
mov
hlt
add
lods
loop
adc
jns
push
sbb
loop
pusha
jmp
jb
sbb
lods
incl
inc
hlt
xchg
test
dec
movsl
xchg
and
mov
xchg
inc
mov
mov
loop
mov
cltd
sbb
push
outsl
jne
test
in
inc
inc
xor
shll
dec
adc
mov
adc
movsl
ficoml
push
outsb
mov
je
mov
lods
ficompl
push
dec
iret
mov
nop
iret
or
daa
das
dec
mov
push
dec
test
pop
jle
daa
es
mov
pop
mov
js
sbb
cs
push
inc
jl
adc
push
and
lahf
sbb
xorl
or
inc
je
xchg
mov
jo
and
notb
mov
rol
rclb
xchg
scas
call
push
mov
pop
push
or
sbb
mov
lea
pop
addr16
adc
jne
lret
movsl
and
test
rol
mov
push
mov
push
xchg
cmp
leave
mov
push
popf
outsl
xchg
idiv
ss
loope
arpl
cld
cmp
pop
xor
jl
repz
and
cs
adc
jae
push
add
in
clc
xchg
mov
sahf
mov
pop
jno
sbb
mov
jnp
inc
jae
xor
xor
in
mov
mov
rol
in
loopne
shl
mov
bound
aad
rcl
icebp
pop
dec
adc
xchg
test
cmp
cmp
sub
test
ret
and
nop
xchg
pop
or
xor
inc
and
scas
enter
adc
jecxz
sti
popa
mov
sbb
adc
scas
fcomi
cmp
sarl
fisttpll
fcompl
mov
mov
cpuid
jmp
iret
outsl
cltd
gs
icebp
jle
mov
jne
ret
lds
or
pushf
clc
fisubl
arpl
xchg
lret
repz
mov
rclb
xchg
jp
pop
cmpsb
mov
call
adc
xchg
xlat
movsb
adc
outsb
movsl
imul
pop
xor
into
out
sbb
arpl
je
lods
jae
andl
sti
xor
cltd
sbb
mov
inc
push
daa
insb
insb
sbb
and
pop
pushf
fsubs
mov
call
inc
jne
mov
sbb
mov
push
sahf
push
mov
hlt
mov
push
js
lea
sbb
loopne
lret
and
push
pop
stc
sub
mov
cmpsb
add
mov
xor
and
test
sbb
gs
inc
mov
sbb
loopew,pt
dec
inc
sar
ja
in
je
add
add
lret
push
cmc
sub
lahf
hlt
xlat
pop
fs
pop
sub
out
mov
arpl
adc
cmp
pop
add
inc
aad
pop
sub
lret
dec
xlat
xchg
add
arpl
sbb
and
sub
jp
cs
into
mov
leavew
mov
mov
pop
push
xchg
testl
data16
cmp
dec
jno
mov
stos
lods
sbb
inc
sub
leave
xchg
mov
adc
push
popf
cwtl
dec
or
xchg
xlat
inc
xchg
and
jge
enter
jmp
adc
pop
pop
mov
ret
push
push
dec
dec
xchg
icebp
mov
cltd
cli
jnp
divb
jb
movsb
es
sbb
out
arpl
aad
xchg
cli
mov
test
and
mov
mov
ljmp
scas
fwait
in
mov
bound
mov
fisubl
or
subb
stc
adc
add
cltd
pop
jo
cld
inc
js
xchg
mov
bound
xor
push
pop
mov
sub
sub
test
cltd
pop
push
mov
cwtl
icebp
mov
push
sbb
xchg
sar
les
add
cmp
nop
dec
jne
ss
cmpsl
mov
addl
mov
fmull
cvtdq2ps
les
out
xor
das
cmp
push
cmp
and
movl
and
xchg
loopne
jbe
jnp
sbb
lods
cmpsl
cmp
daa
sub
andl
pop
fisttpll
ds
aaa
mov
adc
subb
pushf
mov
jae
and
mov
dec
inc
popf
sub
fs
es
into
lds
insb
xor
daa
mov
dec
mov
rep
addr16
xchg
fisubrl
jmp
into
cmc
mov
jbe
fbstp
ret
push
cld
fsubrs
es
cld
mulb
scas
inc
lret
pop
jecxz
cmpsl
fdivl
xchg
xor
or
adc
mov
and
in
imul
stos
pop
lea
fildll
pop
divl
mov
xor
icebp
movl
sub
negl
repnz
out
cmp
cmpsb
mov
popa
loopnew
cltd
insb
aam
inc
mov
enter
mov
pop
sub
add
adcb
or
cs
popf
int3
or
pop
in
cmp
jnp
cld
aad
das
and
outsl
dec
fldl
cmpsl
inc
adc
and
mov
scas
push
cltd
jne
jno
push
push
jmp
lea
sbb
nop
xchg
scas
xlat
xchg
adc
aas
std
mov
xchg
inc
or
mov
add
cmp
loope
inc
jg
mov
dec
jbe
cmp
int3
test
loope
xor
mov
pop
mov
aad
jo
and
xchg
mov
mov
pop
xor
aam
mov
ret
addr16
or
mov
ja
addr16
stos
ret
ds
dec
rol
icebp
mov
xchg
call
stc
lret
sbb
mov
popa
add
and
lods
push
test
fisubrs
cmp
cmp
dec
xchg
into
jmp
movsl
shrb
mov
push
jae
mov
sbb
test
or
negb
add
sub
frstor
movsl
pop
inc
sub
scas
mov
cs
push
addr16
dec
dec
push
cmc
sub
lret
imul
xor
sbb
push
xor
cmp
dec
movsb
inc
inc
shll
jne
daa
dec
clc
loope
inc
dec
in
pop
push
push
jl
addr16
rcrl
add
fbstp
add
mov
test
cmp
cmp
push
mov
mov
adc
jnp
and
rcr
test
cli
add
int3
in
mov
push
out
inc
mov
ficoms
sbb
je
or
jmp
sub
ss
inc
xor
push
nop
aaa
out
xchg
jb
mov
dec
xchg
jne
dec
push
cmp
test
pop
bound
call
test
loopne
mov
sub
clc
in
push
xor
push
shl
std
inc
fwait
rorb
out
fwait
loopne
cld
pop
xor
ret
and
push
test
stc
adc
popf
push
mov
mov
push
ja
inc
shlb
lds
push
rol
mov
ljmp
aaa
push
std
popf
popa
inc
mov
inc
inc
neg
dec
push
mull
fiaddl
out
sbb
mov
test
jp
pop
pop
xchg
test
jmp
inc
mov
jle
les
rol
dec
jmp
dec
cmp
fstpl
pushf
inc
and
mov
fisubl
gs
and
adc
xchg
into
lods
repnz
dec
xchg
mov
out
push
and
xor
dec
aam
and
add
dec
sbb
call
jno
lss
sub
int3
jns
xchg
add
lahf
int3
mov
cld
fiadds
pushf
pushf
sahf
mov
add
push
add
bound
fisubs
inc
jnp
mov
call
mov
fisubrs
sbb
push
lret
sahf
into
test
les
xchg
dec
jecxz
cmp
outsl
int
push
lea
out
loop
dec
jmp
xchg
push
in
popf
mov
lock
sub
loope
mov
sub
jne
adc
gs
jo
adc
loope
push
fcomps
xchg
popa
fisubrs
mov
ljmp
xchg
add
out
add
dec
or
rcrb
jp
sub
sbb
inc
mov
insl
stos
add
cli
jno
cs
hlt
sbb
sbb
enter
pop
mov
repnz
scas
js
mov
hlt
test
pop
enter
add
cwtl
mov
es
out
mov
push
inc
inc
filds
and
repz
xor
or
or
aaa
hlt
fistps
dec
addb
jmp
jmp
test
sahf
fidivl
in
scas
out
xor
push
decl
sbb
ret
lea
mov
rcll
mov
dec
mov
ret
cld
stos
add
imul
rcll
into
mov
inc
or
cwtl
sbb
fstps
sbb
pushf
sar
mov
lds
sbb
mov
sub
mov
mov
jns
outsb
dec
xchg
ffree
lret
cmc
int
mov
dec
mov
sbb
dec
xlat
dec
test
mov
loop
xor
shll
scas
xchg
push
jae
lcall
sub
jmp
jns
mov
in
mov
mov
and
sbb
mov
push
cmc
pop
xor
dec
inc
or
lods
fidivl
das
jp
pop
imul
lret
out
jecxz
pop
imul
xor
test
cmp
adc
or
push
js
push
enter
icebp
xor
mov
cmp
adc
rcll
in
rcl
pushf
lods
push
dec
fistpll
xchg
push
mov
mov
cs
xor
scas
dec
sub
pop
mov
notl
push
xchg
leave
test
clc
cli
xor
cmp
add
movd
shll
and
das
add
jno
pop
and
out
in
shlb
and
or
adc
xchg
movsl
out
fsubrl
pop
mov
xor
xchg
sar
push
push
jge
popf
jp
cmp
orl
movsl
dec
mov
aaa
cmp
insb
in
pop
xchg
fwait
sub
dec
and
ss
or
jnp
mov
sub
enter
movsb
idivb
js
mov
adc
sbb
or
mov
pop
jns
fidivl
or
push
aas
fnstsw
icebp
test
jae
into
cmp
cs
pop
sahf
push
dec
mov
addr16
gs
add
hlt
imul
jl
xchg
jbe
adc
xor
int
in
and
pop
aaa
and
or
lahf
arpl
pop
push
add
aaa
cs
mov
sub
outsb
cmp
sub
mov
dec
dec
ret
jle
shlb
imul
aad
aaa
sbb
adc
mov
jmp
inc
aam
jne
aam
pop
repz
xor
inc
rcrb
mov
push
mov
add
sbb
scas
out
test
sti
dec
xchg
popf
lcall
vpunpcklqdq
ret
aas
ret
push
fwait
dec
iret
push
xchg
loopne
fiadds
or
pop
mov
lcall
mov
stos
and
jo
cmp
sti
ljmp
leave
shlb
fisubrs
ret
repz
fmull
mov
mov
push
mov
adc
in
cmp
out
mov
cmp
jecxz
push
and
adc
ja
jo
sub
pop
jae
xlat
ret
dec
jp
scas
in
push
fwait
arpl
fstps
push
cmpsl
in
cmp
test
fists
bound
xlat
mov
jbe
out
or
or
sbb
inc
dec
sarb
sahf
lret
outsl
jb
mov
xor
jle
jb
out
fnstcw
fisubl
mov
dec
inc
dec
xor
inc
mov
sub
hlt
out
and
push
cld
jb
test
popa
xchg
push
adc
xor
mov
xchg
nop
cmc
cmp
cmp
xchg
mov
int3
add
scas
repnz
pop
nop
push
ljmp
and
sub
pop
outsb
mov
in
jle
iret
mov
dec
sahf
fdivrl
mov
pop
and
test
add
inc
dec
lods
repnz
push
ds
xor
xchg
popa
cmp
adc
xchg
push
cmp
or
aam
adc
fs
cmp
push
icebp
fadds
rclb
pop
lea
insl
add
sbb
test
xchg
mov
sub
bound
jnp
fwait
lds
test
mov
lret
push
shr
adc
dec
sbb
pop
pushf
mov
jle
mov
in
call
push
lret
repnz
call
mov
xor
lret
add
dec
fcmovu
rclb
sub
frstor
cli
adc
rolb
dec
pushf
sbb
inc
pop
repnz
or
adc
mov
int
scas
loop
ss
push
mov
mov
pop
mov
xchg
imul
andb
sub
cmp
decb
ficompl
inc
aas
scas
mov
mov
mov
inc
int3
mov
pop
out
sbb
mov
pop
movsb
mov
push
mov
fsubl
mov
movsl
inc
mov
add
sub
lods
jp
xchg
testl
adc
jns
pop
xor
and
fsubl
mov
add
push
mov
sub
add
scas
jnp
popf
jb
out
sti
out
jle
sub
jp
or
add
push
aaa
and
push
sub
inc
and
jns
lods
outsl
lods
adc
ja
jecxz
sbb
or
push
add
mov
dec
andl
adc
sub
divl
sub
and
mov
in
shrl
hlt
gs
pop
cmp
cmp
addr16
or
mov
in
adc
imul
fldcw
sub
mov
imul
popf
jge
cld
js
add
pusha
mov
aad
repz
xor
insl
jg
je
mov
es
scas
xchg
add
movsb
jb
cmc
sbb
clc
xchg
nop
mov
xchg
push
inc
dec
pop
in
or
cmpsl
pop
sbb
sahf
xchg
cmpb
sub
rol
arpl
mov
jo
pop
push
and
loope
pop
lret
xor
js
xor
das
test
rcll
je
ja
mov
and
aas
adc
fcomp
mov
popa
xlat
es
call
mov
js
mov
fbld
je
sti
adc
or
ret
inc
push
xchg
loope
mov
adc
aad
pop
mov
push
loope
pop
aaa
nop
adc
jg
mov
pushf
jbe
cmp
movsb
mov
jecxz
jb
sbb
loop
push
faddl
es
enter
xor
sbb
fwait
inc
inc
out
into
cmpsb
lock
cmp
push
sub
jge
stc
mov
xchg
dec
popf
dec
cmp
push
and
hlt
mov
xchg
mov
sbb
in
popa
pop
scas
scas
add
inc
xchg
idiv
push
test
idivl
std
fwait
adc
jl
mov
jecxz
inc
sahf
lods
or
mov
mov
xlat
add
xchg
push
adc
push
cmp
inc
js
mov
mov
mov
pop
xchg
sub
and
ja
pop
jecxz
ret
xlat
mov
mov
pop
fs
fldl
push
and
xor
jno
pop
inc
je
inc
xor
xchg
clc
jmp
orl
cmpsl
mov
mov
mov
mov
negl
shlb
mov
mov
pop
add
ret
jo
xor
add
jg
enter
mov
es
gs
shrb
cwtl
je
sub
mov
xchg
mov
in
lods
ljmp
xor
dec
iret
mov
ret
int3
xchg
sarb
add
in
mov
mov
xor
add
stc
fstl
sub
fwait
dec
cld
imul
lcall
negl
icebp
in
loopne
inc
jbe
push
lods
cld
cltd
ficomps
leave
mov
jne
inc
sar
mov
insb
dec
xchg
fisubrs
insb
inc
cmp
repz
outsl
out
adc
cmp
mov
loope
pop
out
cltd
adc
pop
stc
cwtl
jle
mov
sub
add
lea
pop
test
int3
sti
lret
cmp
mov
sbb
push
sbb
loop
jb
jae
negl
add
loop
out
enter
mov
fsts
cmp
pop
jg
repz
ret
mov
movsl
in
jg
lret
insl
aaa
or
scas
and
push
repz
xorl
push
and
adc
test
pop
gs
jne
out
int3
cmp
sbbb
imul
imul
adc
shll
lahf
cmp
mov
ljmp
mov
enter
sub
jb
sti
pop
or
and
pop
xchg
popf
out
xchg
push
ljmp
cs
pop
cld
mov
in
push
add
jge
xor
cmpl
mov
inc
dec
sbb
push
fidivs
mov
cmp
mov
inc
jbe
stc
pushf
outsl
js
adc
sbb
jecxz
pop
mov
dec
add
push
mov
xor
and
adc
jl
insb
mov
push
fiaddl
shlb
xchg
ljmp
fdivl
fcoml
stos
mov
pop
push
mov
and
dec
enter
cs
pop
or
inc
push
int
shl
outsb
cmc
test
cmp
mov
xchg
push
mov
add
or
mov
jnp
cld
pop
inc
jg
pop
roll
leave
and
and
push
push
add
xor
je
inc
pusha
mov
jl
inc
mov
decb
xor
aam
and
or
decb
cltd
test
mov
inc
mov
std
mov
ljmp
cmp
and
lock
mov
jl
xchg
dec
mov
shll
es
dec
ds
push
pop
xchg
sbb
xchg
xor
xchg
lods
jae
mov
pop
out
mov
test
loopne
sbb
mov
pusha
inc
cmp
xor
adc
push
cmp
ja
fdivrp
mov
aaa
xor
scas
cmp
xchg
subl
jge
mov
les
in
movsb
cmc
cs
jo
movsl
sbb
mov
pushf
mov
in
jb
and
out
sbb
add
and
adc
dec
pop
dec
mov
add
mov
push
cwtl
push
mov
xor
test
or
sbb
push
sbb
ret
fiaddl
in
add
les
stc
mov
andl
imul
xchg
lret
insb
mov
push
lds
push
push
cmp
mov
sub
push
xor
ficomps
js
pop
mov
jae
cmpsb
popf
popf
mov
mov
mov
sbb
mov
jo
sub
push
ds
in
test
cmovb
push
xchg
mov
cmc
cltd
ja
pop
mov
pop
jae
stos
jp
arpl
sub
ret
aas
pop
or
mov
pop
jno
flds
mov
cmpb
mov
std
in
in
adc
inc
or
dec
mov
mov
cmp
cwtl
sbb
inc
test
and
arpl
outsl
aad
xchg
js
aad
lds
mov
icebp
xchg
into
js
je
pop
add
fistps
inc
cmp
xchg
push
jns
das
outsl
and
stos
inc
scas
lret
pop
aas
or
mov
push
test
out
or
inc
jmp
xchg
xchg
sbb
es
inc
push
adc
adcb
push
divl
movsb
rcll
xchg
test
add
dec
sahf
hlt
xchg
frstor
fadd
xchg
add
in
sahf
push
xor
popa
gs
cwtl
xchg
jle
xor
fisubrs
ds
xlat
out
jbe
mov
cmp
mov
std
fcomps
and
notl
dec
adc
ret
mov
inc
push
shll
and
dec
pop
or
mov
dec
gs
xor
xor
movsb
jae
ds
mov
outsb
loop
out
in
adc
xor
lahf
and
dec
std
mov
js
in
and
loope
dec
mov
xchg
xchg
std
lock
and
cmc
add
lret
sub
scas
inc
dec
in
popf
pushf
rorb
ficompl
in
inc
adc
pop
sbb
clc
mov
cltd
mov
sub
mov
fcmovnbe
add
sbb
test
push
sbb
pop
lahf
mov
fs
cwtl
notl
ret
cmp
into
sub
out
mov
cmpsb
sbb
fwait
in
ds
fs
mov
push
and
sbb
mov
dec
fdivp
mov
push
dec
mov
inc
pop
jp
ljmp
xlat
inc
arpl
mov
push
gs
rcrl
push
or
push
js
adc
mov
cltd
test
filds
adc
aas
adc
in
mov
cmp
pop
call
or
mov
dec
jl
jp
jne
cmp
pusha
or
loope
repz
cmpsb
repnz
cmp
in
sbb
jge
add
cmc
xor
ret
pop
sbb
sbb
jns
call
xchg
icebp
fwait
pop
cmp
mov
mov
dec
cli
jb
xor
push
cmp
int3
or
mov
std
dec
fsubs
ror
rcll
insl
mov
ljmp
rorl
mov
aaa
sbb
pusha
and
cmpsl
test
jge
clc
mov
int
mov
mov
mov
ja
test
mov
push
pop
pop
xchg
lea
ss
cltd
sub
xchg
fucomi
xor
adc
mov
dec
dec
pop
popa
ljmp
push
lock
ss
mov
lea
andb
into
dec
push
outsl
scas
dec
push
cmp
nop
inc
or
ficompl
sbbl
dec
sbb
inc
mov
fiaddl
and
cld
dec
push
add
sub
pop
pop
jnp
jnp
shll
adc
mov
add
scas
jne
push
dec
push
lods
xor
or
push
cmc
lock
movsl
mov
ret
adc
jmp
dec
pop
lods
and
push
fdivl
rorl
push
mov
das
mov
adc
cmpsb
outsl
outsb
shlb
push
in
dec
mov
and
das
push
repnz
mov
scas
pop
xor
inc
dec
lds
pop
push
out
out
xchg
iret
jae
pop
out
ret
stos
inc
sbb
sbb
xor
or
xor
or
adc
lahf
add
out
push
outsl
cmp
sub
xchg
add
imul
inc
or
mov
mov
aaa
repnz
jno
mov
popa
and
xchg
ficoms
xor
in
pop
inc
cmp
and
sub
divl
jecxz
xchg
iret
loope
fildl
jp
pop
xorb
out
dec
test
cmpsl
cmc
rorb
rolb
xlat
stos
pop
xchg
add
lods
pusha
out
pop
or
outsb
mov
orl
adcl
daa
sub
testl
jno
and
xchg
mov
cmc
ja
and
dec
lock
add
lretw
sub
rcll
inc
mov
cmp
push
xchg
mov
data16
fwait
jnp
xchg
mov
test
ljmp
dec
or
cld
mov
jns
or
pop
adc
jnp
sub
into
add
or
test
sub
inc
test
inc
jae
ss
pop
sahf
daa
dec
call
and
and
cwtl
xchg
add
inc
fwait
adc
adc
xchg
fbstp
adc
push
jnp
mov
mov
mov
mov
dec
cltd
mov
pop
adc
pushf
lea
stos
fsub
and
enter
mov
dec
and
insb
aad
popa
mov
push
stos
jp
popf
or
inc
out
fcmovbe
xchg
pop
mov
push
jl
xchg
dec
sub
fidivl
fistps
insb
dec
push
jbe
jbe
pop
adc
scas
dec
in
sub
xlat
cmp
push
sti
push
add
imul
xorb
mov
jmp
loopne
loop
pop
or
and
mov
ret
pop
sar
mov
sbb
xchg
flds
xchg
push
int
xchg
movl
dec
xlat
out
fdivl
aam
rorl
les
ret
pop
xorb
std
and
push
pop
sbb
jmp
ret
mov
movsb
sbb
mov
jo
aam
xor
xlat
adc
addb
sarb
cmp
xchg
xor
repz
aaa
sbb
scas
xchg
loop
fstp
adc
and
fld
gs
mov
cmp
scas
push
incb
pop
add
icebp
or
fwait
nop
jno
call
js
clc
lcall
pop
out
push
pop
aaa
inc
mov
mov
outsb
xor
andb
pop
pop
jp
adcb
adc
mov
fcoml
xchg
sbb
xchg
push
pop
xchg
repz
out
sub
pop
cmpsl
std
lcall
imul
mov
test
jle
test
popa
xlat
dec
lods
popf
add
or
xor
xchg
test
mov
mul
dec
cmp
loop
cmpsb
jle
pop
or
pop
and
faddl
dec
adc
sub
fisubl
cld
mov
fldcw
arpl
xlat
repnz
dec
add
push
cmp
subb
jnp
ficoml
pushf
push
or
cmp
sub
add
imul
jecxz
dec
je
cmp
xchg
ret
data16
mov
orb
sarb
cmpsb
push
xchg
hlt
sub
add
dec
fisubl
mov
hlt
out
pop
mov
mov
mov
inc
in
rcll
pop
cmp
es
ss
std
sub
adc
clc
ja
xor
mov
fstps
push
outsb
add
dec
cmp
mov
cs
into
std
inc
or
pop
mov
push
popf
cmp
push
xchg
cmpsb
pop
pop
sarl
mov
jne
pop
std
out
mov
stos
jecxz
cmp
or
leave
outsl
clc
push
sti
filds
jb
add
push
loopne
ljmp
sub
dec
cmp
ss
pop
movsb
sbb
xchg
fstpl
push
stos
sub
jmp
fistl
mov
mov
lret
aad
negb
bound
mov
or
lock
mov
repz
cli
les
pop
daa
fwait
test
sti
data16
pop
je
es
pop
inc
xchg
icebp
mov
arpl
push
mov
xchg
xlat
adcl
push
or
push
leave
inc
push
jmp
in
inc
and
les
cmp
adc
cmpsl
bound
push
jae
xlat
or
ret
adc
xchg
jmp
mov
and
das
push
leave
cmp
jmp
push
add
cmp
adc
add
lret
out
and
xor
or
add
sbb
mov
xor
push
cmp
adc
xor
add
fcmovnb
inc
cld
stos
xchg
cmc
fisttpl
inc
popf
shl
push
fistpll
int
xchg
cmc
push
enter
dec
inc
lcall
addr16
lahf
roll
std
fnstsw
ds
test
sbb
or
sbb
pop
xchg
lods
push
pusha
jne
cli
test
add
popa
das
jns
cmp
jbe
enter
mov
sbb
jnp
lods
adc
dec
dec
cmp
lea
pusha
mov
mov
lds
ret
add
jnp
xchg
xchg
jnp
addr16
mov
dec
data16
pop
pop
popa
adc
mov
loope
sbb
pushf
jmp
jl
mov
bound
je,pt
cmp
jb
movsb
nop
enter
scas
mov
scas
inc
pop
add
scas
xor
pop
pop
mov
out
adc
or
cmp
pop
mov
clc
insb
fsubrs
mov
xchg
lods
and
fs
jecxz
jno
add
adc
mov
cmpsl
movb
mov
loope
ss
ja
out
or
inc
scas
outsl
sbb
dec
xchg
inc
pop
adc
int
mov
outsl
dec
arpl
push
inc
scas
inc
lods
sbb
insl
add
pop
je
shrb
cmpsl
cld
lea
add
mov
xchg
jge
mov
test
fstl
pop
stos
pusha
filds
xor
xlat
pop
imul
xchg
or
shll
sbb
jle
or
cmp
mov
fstl
scas
sbb
jmp
mov
inc
lahf
xor
pushf
fsub
movsl
sub
inc
pop
sti
out
xor
scas
aad
or
inc
fsts
sbb
push
mov
xchg
dec
jg
pop
out
js
jo
add
into
outsb
jmp
push
pusha
adc
hlt
cld
sbb
insl
mov
pushf
mov
pushf
pop
or
cmp
or
mov
mov
cmp
mov
sub
lret
jecxz
adc
icebp
ds
addr16
iret
ja
push
adc
lahf
lea
jno
div
cmp
and
xchg
jo
pop
jb
cmp
pusha
ficompl
xchg
xor
mov
out
adc
cmc
or
push
push
xchg
fisttpll
into
hlt
outsl
hlt
xor
jbe,pt
enter
adc
xlat
or
ret
mov
add
push
aad
mov
enter
adc
jmp
xchg
mov
sarl
push
add
cwtl
jbe
or
cmp
push
add
inc
sbb
addr16
aam
xlat
cs
sbb
inc
loope
push
adc
jns
sbb
scas
fldenv
and
inc
popf
bound
push
push
mov
mov
push
jb,pt
jecxz
in
mov
pushf
cmc
inc
mov
mov
cmpsb
lahf
add
cwtl
add
outsb
jae
enter
pop
push
jnp
pop
jbe
cmp
jo
jecxz
sub
sbb
push
dec
into
aam
mov
sbb
push
xor
jno
push
scas
xchg
xor
lret
js
cmp
dec
adc
outsb
sbbl
mov
mov
pushl
xor
imul
jo
or
cs
push
sbb
cmpsb
shrl
mov
es
insl
shld
fs
jns
subl
int3
mov
push
jp,pt
mov
pop
hlt
mov
or
jns
xor
add
add
ja
pop
mov
push
adc
outsl
push
mov
push
jo
dec
lds
or
imul
dec
inc
sar
pop
das
cmp
scas
fidivrl
jae
xchg
dec
or
xchg
mov
loop
sbb
enter
fidivs
clc
popf
sub
pop
loope
pop
sub
notl
out
add
icebp
jp
jo
dec
sub
pop
aam
mov
pop
mov
fimuls
sub
jl
add
fs
jnp
testb
iret
cli
sbb
dec
in
cltd
movsb
push
fxch
hlt
pop
lcall
mov
push
lock
pop
repnz
ljmp
fstpt
ss
xchg
adc
mov
test
cmp
aad
negb
je
push
test
cmpsb
lods
mov
shlb
xchg
shlb
add
cmp
dec
int
std
or
xchg
pop
pmullw
push
loop
dec
push
cmp
jp
push
hlt
orb
cmp
adc
adc
sub
jmp
aad
adc
cltd
and
dec
test
aaa
add
xchg
mov
into
aam
imul
dec
bound
in
jecxz
lcall
mov
jae
pop
jne
test
xor
imul
mov
clc
aas
sub
dec
push
xor
jmp
inc
push
sbb
and
mov
das
xor
sub
sti
pusha
add
jp
iret
cld
dec
cmp
popa
fmull
push
sbb
adcb
xor
nop
arpl
mov
test
addb
pop
xchg
push
mov
jbe
idiv
lahf
inc
push
mov
push
movsl
ret
jle
add
aam
pop
pushf
push
es
sahf
int
cmpsl
inc
cmpsb
adc
imul
fiadds
mov
icebp
sbb
les
sub
fisubl
xlat
lcall
mov
faddl
ja
cmp
jo
shrl
aaa
mov
out
push
fmull
int
shrb
arpl
dec
push
rclb
jo
adc
fsub
faddl
loope
dec
shll
mov
imul
imulb
add
push
jp,pt
xchg
dec
in
shlb
sbb
jp
ss
jp
mov
pop
adc
adc
push
cmp
cmp
jle
mov
stos
orl
nop
stos
add
sub
into
test
scas
mov
push
sub
jo
inc
or
xor
add
shlb
fcomp
clc
mov
and
mov
push
pop
xorl
push
jbe
cmp
or
lcall
lret
shll
push
lds
or
sbb
mov
not
test
mov
loopne
jl
sahf
cmp
in
cltd
imul
mov
add
cmp
jp
aam
inc
dec
call
mul
ficoml
repnz
xor
dec
enter
dec
mov
mov
push
test
mov
and
jl
jp
mov
repnz
testb
test
sub
mov
lds
push
scas
or
sub
mov
sub
in
mov
mov
pushf
stc
mov
cmp
mov
in
scas
sbb
and
or
in
sarl
rol
stos
and
mov
jecxz
rorl
js
negl
mov
jo
and
loopne
pop
inc
and
sub
fdivl
xlat
sbb
cmp
jb
loope
mov
iret
pop
int3
jge
sbb
push
cwtl
mov
jmp
inc
sub
data16
cmp
mov
xchg
push
sub
int
mov
xchg
sbb
push
pop
sub
xorl
or
lods
push
leave
int
fs
dec
or
bound
iret
sub
sbb
shll
sub
mov
mov
mov
mov
sub
jle
push
cs
rorl
gs
adc
add
in
and
aaa
pop
fcoml
and
mov
mov
rclb
push
in
cli
adc
jns
imulb
jno
xchg
pop
pop
pop
cwtl
xor
shr
dec
jbe
call
mov
out
sahf
adc
fdiv
sahf
dec
xchg
pushf
adc
add
inc
dec
jmp
mov
jl
jmp
movsl
jp
out
mov
ret
and
sub
repnz
adc
mov
jl
in
lcall
xchg
inc
scas
jecxz
jmp
jne
pop
ljmp
cltd
add
push
mov
or
and
sbb
jno
in
jmp
fcompl
adcl
out
or
mov
sahf
and
inc
insb
fadds
push
xor
test
into
dec
xchg
stc
push
jb
cltd
enter
loope
mov
fldl
int3
mov
sub
add
xchg
xor
jb
xlat
subb
aam
xchg
mov
inc
sbbl
add
ljmp
push
pop
data16
mov
xchg
mov
mov
fwait
inc
mov
adc
pop
bound
ret
lret
mov
lret
mov
push
outsb
push
jle
cmp
jmp
push
cmp
and
je
mov
xchg
std
adc
sub
int
popf
data16
cmp
test
and
dec
jecxz
xor
lcall
pop
movsl
inc
sti
push
shrl
or
pop
mov
je
roll
inc
xchg
xchg
out
push
cmp
outsl
inc
inc
faddl
scas
test
sbb
adc
and
shl
aad
lret
aam
lock
jbe
lods
pop
shlb
sub
mov
je
dec
sub
aaa
ret
hlt
xchg
mov
call
je
adc
data16
adc
ficoml
frstor
inc
mov
mov
bound
stos
fwait
out
adc
in
pop
lods
ret
jl
xchg
loope
mov
push
cltd
push
clc
cpuid
das
je
adc
push
mov
nop
jp
xor
leave
mov
fdivrl
popa
popa
sbbb
dec
jns
mov
rolb
cmpsl
in
mov
or
xchg
xor
mov
leave
cs
scas
aas
bound
pop
push
clc
mov
popa
ret
or
jecxz
xor
fs
addl
scas
in
dec
xchg
lahf
outsl
mov
stc
cmp
loop
cmp
pop
cmp
icebp
cmp
mov
sub
repz
rol
fsubs
mov
je
popa
jno
ret
pusha
push
xor
out
cld
in
add
cmp
cmp
jle
mov
or
in
xchg
xchg
sbb
mov
pop
lcall
imul
push
xchg
aad
xchg
test
add
roll
mov
jno
push
outsb
out
popa
push
into
fwait
xchg
es
jno
xor
mov
dec
pushl
sub
sub
movsl
out
xorb
cmp
xchg
fnstsw
mov
ret
add
cmpsb
pop
adc
cld
cmp
inc
ljmp
lods
sbb
cld
les
pop
movsb
xchg
popf
loop
pop
mov
fsts
cmp
fwait
jge
cmp
rcrb
outsb
xor
sbb
lock
jg
pop
addl
shll
movsl
adc
int
sbb
cmp
jg
dec
ret
adc
sub
mov
cmpl
stc
xor
and
sbb
fidivl
inc
shl
dec
pop
pop
xor
pop
mov
repnz
push
dec
mov
aad
dec
mov
stc
fistps
stos
in
jns
and
push
sarb
dec
inc
sahf
add
flds
cmp
sbb
xchg
mov
rolb
or
inc
insb
adc
ret
scas
int3
and
sti
inc
shr
adc
or
iret
outsb
xchg
lods
xor
div
clc
out
inc
mov
movq
jmp
test
and
jg
fnstsw
sbb
pushf
cmp
mov
je
xor
pop
cs
xor
imul
cmpsl
mov
sarb
mov
insb
jae
jmp
int
in
in
pop
push
notl
clc
pop
arpl
mov
jecxz
out
cmp
push
shll
jecxz
leave
sbb
roll
dec
loopne
pop
leave
js
pop
shrl
into
arpl
sub
pop
jp
adc
pop
xchg
scas
cld
adc
mov
movsb
cmp
ja
mov
fadd
icebp
or
hlt
out
jo
xchg
push
push
ljmp
mov
aaa
ffreep
cli
gs
inc
jnp
test
sub
and
and
mov
push
sub
int
and
into
ret
outsb
leave
fdivrs
and
push
dec
ret
les
flds
mov
cld
fs
loopne
add
mov
push
test
adc
rclb
or
sbb
sub
dec
ret
leave
into
pop
call
push
xchg
pop
mov
xor
inc
mov
cwtl
stos
loop
ja,pt
stos
jbe
mov
jo
loop
cwtl
gs
sub
iret
outsb
ljmp
xchg
fistpl
lods
leave
cmp
loopne
mov
shrl
push
call
inc
fidivs
icebp
push
pop
int3
cmp
inc
call
in
stc
jg
adc
sbb
mov
in
mov
push
push
dec
cmpsb
sub
sub
fwait
shl
dec
xchg
jmp
push
imul
int3
cmp
clc
jp
imul
gs
fnstsw
inc
call
dec
std
sub
mov
insl
cmpsb
icebp
cmc
add
jge
jnp
and
add
jns
in
and
arpl
lret
cmp
dec
push
lea
aam
out
inc
jo
pop
or
js
push
std
mov
cltd
leave
mov
or
mull
pop
dec
cmp
pusha
lock
mov
stos
and
mov
lcall
pop
fcomi
jg
hlt
cmp
push
push
lahf
fnsave
dec
jecxz
movsl
iret
popa
lods
mov
shrb
xchg
mov
adc
or
lods
addr16
ret
push
imul
dec
les
lret
push
lods
in
mov
and
faddl
push
shll
pop
popa
clc
xchg
fdivrs
rol
mov
jae
mov
or
aam
cmc
ret
sub
mov
adc
cwtl
aam
inc
aaa
mov
inc
aam
sbb
sarb
rclb
jg
inc
inc
jp
cli
inc
shl
xchg
out
scas
aaa
cmp
gs
out
cmpsb
and
mov
fisubs
pop
mov
inc
and
fdiv
jecxz
cmp
mov
fsubp
jl
mov
repnz
push
data16
sbb
jg,pn
and
shlb
roll
cmp
clc
dec
hlt
je
jge
sbb
mov
loop
and
jns
push
cmp
shl
sbb
jmp
xchg
js
std
in
mov
ds
dec
mov
pop
mov
add
int
rcrl
sbb
pop
pushf
mov
and
pop
pop
push
xchg
mov
or
add
mov
sti
add
addr16
jg
in
pop
cmpsl
ja
dec
mov
add
jno
repz
loop
sub
shll
ds
shlb
and
mov
in
insl
xor
arpl
push
imul
mov
stc
fs
aas
pop
les
sub
cmpsl
jnp
fs
sbb
popf
ja
js
inc
pmaxub
xchg
cmp
cmp
out
and
js
je
dec
test
sub
lds
fs
push
xchg
cmp
ljmp
xor
ret
hlt
or
jp
mov
mov
pusha
mov
inc
subl
jae
and
cltd
iret
bound
mov
movsl
cmp
or
fwait
adc
xchg
call
loop
sub
sub
adc
dec
mov
mov
mov
out
orb
adc
mov
and
cmp
mov
stos
push
pop
mov
pusha
and
hlt
cltd
sbb
test
ljmp
xchg
inc
scas
js
fisttpl
dec
out
pop
clc
push
mov
lret
jo
jno
movsb
push
and
in
shlb
aad
in
push
sub
test
xor
pop
xchg
andl
cltd
in
and
sbbb
sti
jl
cltd
ljmp
aaa
dec
or
pop
ret
jo
xchg
pop
fstpl
or
sbb
add
lahf
xchg
mov
mov
cmc
pop
add
popf
push
sub
jecxz
sub
inc
sub
js
cmp
add
aad
xor
jnp
gs
pop
pop
iret
mov
mov
xchg
icebp
inc
ss
pop
incb
btcl
xor
mov
mov
enter
inc
inc
lds
nop
dec
loope
cltd
cmp
inc
loopne
cwtl
rorb
mov
push
sbb
mov
push
sbb
in
js
in
pop
mov
loopne
push
in
pushf
rcrl
aam
pop
ret
dec
in
xchg
jbe
push
xlat
jae
aam
pand
out
mov
in
pusha
into
mov
xor
lock
les
jb
pop
test
sbb
hlt
imul
mov
inc
rclb
jecxz
mov
cwtl
push
dec
inc
pop
xor
or
add
sub
movsb
xchg
dec
cltd
dec
shlb
push
dec
add
adc
cli
cmp
or
ljmp
push
cwtl
lock
pop
mov
ds
std
adc
adc
lods
ret
and
lea
in
xor
inc
fiadds
ljmp
push
bound
cltd
push
cmp
movsl
outsb
push
jnp
hlt
addr16
push
in
cwtl
xchg
dec
xchg
xor
add
sahf
inc
imul
insb
fsubrl
inc
inc
and
mov
lea
outsl
and
shll
mov
pop
cwtl
add
add
dec
divl
scas
push
ja
clc
jne
mov
dec
cmp
daa
ret
adc
insb
cli
hlt
hlt
lods
lods
ret
dec
pop
inc
lret
and
xor
pop
out
jnp
sbb
cmpsl
movsb
outsb
jb
mov
inc
sub
jge
adc
pop
mov
fs
jo
and
mov
mov
out
mov
jns
inc
loopne
or
pop
popf
out
pop
pop
pop
fmul
inc
mov
les
push
jae
xor
ret
and
andb
jp
jo
out
loop
rclb
dec
icebp
pop
mov
or
sbb
mov
mov
push
dec
adc
mov
popf
mov
add
push
pop
cld
cmpsb
stc
insb
lcall
je
xchg
int3
jno
mov
mov
add
int3
loope
sahf
add
mov
or
pop
mov
outsl
cmpsl
and
sub
iret
out
popa
xor
stos
shrb
xchg
loopne
xchg
cmpsb
xor
dec
mov
fiadds
nop
mov
jae
sub
leave
lahf
bound
arpl
add
push
pop
mov
sub
push
xor
pop
xor
mov
mov
sub
popf
pop
repnz
jne
dec
push
fnsave
push
leave
pushf
fs
in
xchg
in
pushf
jle
adc
out
jne
pushf
cwtl
iret
push
subl
jae
mov
sbb
inc
sbbb
pop
in
sub
xchg
push
push
adc
inc
addr16
pop
bound
sbb
add
cmp
and
lock
mov
vmovsd
adc
push
movsl
or
pop
mov
mov
out
mov
jbe
push
dec
sbbb
loopne
pop
jb
cltd
jo
dec
xor
adc
or
daa
mov
movsb
test
or
add
scas
in
les
cs
test
adcb
scas
xchg
xor
mov
jmp
or
add
fidivs
inc
sbb
jle
lea
out
xor
push
jp
ficoml
cmp
inc
fidivl
stos
rcr
insb
pop
and
leave
pop
mov
pop
push
mov
sub
or
or
push
cli
and
daa
int3
ds
insl
xchg
hlt
jle
jne
dec
mov
adc
xorl
les
cltd
mov
jo
jl
pusha
xor
xchg
fdivs
inc
rcrb
cmc
ja
imul
int
mov
jae
fcmovnbe
mov
xor
popa
aaa
addr16
test
fistpll
add
aad
cmp
movsb
cli
enter
stos
xor
ss
pop
jne
and
sub
ja
sub
mov
in
dec
clc
or
test
lods
sahf
inc
push
in
adc
inc
out
mov
test
fdivl
pop
shr
inc
adc
mov
cmpsl
jmp
push
sarb
pop
push
mov
jne
daa
std
inc
or
xchg
mov
xlat
lahf
jae
insl
sub
sahf
repz
cmpsl
dec
movsb
gs
xchg
jge
or
andb
pusha
out
sub
xchg
add
sub
push
das
pop
push
mov
sub
xor
addr16
cs
fucomi
jp
into
aaa
xchg
sti
outsl
into
rorl
popf
loope
lcall
sar
mov
fdivrl
popa
add
es
sbb
xchg
movsl
xor
std
mov
xchg
iret
mov
mov
lds
add
cmp
jae
sbb
push
and
and
test
int3
pmaxsw
dec
repnz
es
add
daa
dec
hlt
shlb
fwait
aad
mov
mov
insb
jecxz
cli
leave
out
in
in
jmp
jne
stos
test
dec
bound
pop
add
pushf
push
ss
outsl
or
mov
cmp
dec
inc
addb
test
test
enter
mov
out
movsl
xor
pop
out
pop
popf
loop
cmpsl
and
mov
mov
sub
sarb
ljmp
rcr
out
push
in
sbb
cltd
mov
add
and
or
std
fidivl
stos
sbb
sbb
mov
cmp
xchg
add
mov
ret
divl
dec
sahf
pop
cmp
jb
dec
xchg
cmp
and
lods
inc
imul
and
lock
mov
vcvtps2pd
mov
das
pop
adc
pop
ljmp
outsb
decl
dec
imul
fcmovb
or
fistl
inc
test
pop
addb
je
sbb
and
push
inc
lods
test
adc
pop
sti
shrl
or
and
stos
jmp
fstps
lods
cltd
xchg
aas
flds
test
fsubp
xor
jno
xchg
shrl
in
cli
pop
je
rorb
nop
push
jge
mov
xor
or
ror
push
cmpsl
or
pop
inc
inc
dec
mov
daa
sub
push
push
inc
gs
push
or
xorl
mov
fadd
mov
decb
sbb
fsts
sub
fidivs
faddp
test
sub
jne
insb
mov
loopne
outsb
ljmp
sbb
sub
mov
and
in
test
subl
pusha
jl
loope
loop
and
push
das
mov
cmp
aas
ljmp
xchg
jp
aad
mov
mov
mov
data16
test
test
push
and
mov
mov
inc
jbe
dec
gs
sar
iret
push
inc
pop
lods
ret
cwtl
mov
subb
std
add
vpmacssdql
stc
sbb
loop
test
stc
xor
mov
jnp
push
push
icebp
fdivl
jg
cmc
cmp
ja
cmpl
iret
loope
dec
mov
addb
es
cwtl
in
std
into
push
jmp
sub
enter
push
repnz
lret
in
jmp
adc
dec
lahf
sub
xchg
mov
jae
imul
adc
jae
or
jo
sahf
data16
pop
movsl
fs
pop
sub
or
lds
ss
dec
dec
push
inc
lds
mov
scas
dec
xor
push
fisubl
inc
bound
ss
add
mov
stos
ret
dec
aad
ja
adc
sub
inc
rcll
imul
cmovb
pop
stc
dec
cmp
insl
daa
push
cli
sub
mov
push
and
fs
xchg
movsl
pop
lret
sahf
mov
cmpsb
mov
add
sbb
outsl
les
cmp
jne
jno
pop
pop
nop
jae
ljmp
stos
insb
push
xor
jge
jnp
popa
jl
ss
or
hlt
fidivl
movsb
lods
cmp
add
shll
aaa
sbb
out
jnp
dec
add
orl
js
xchg
cmp
pop
lods
pushf
lcall
add
push
mov
add
inc
xchg
lock
in
sbb
loop
mov
loope
sbb
mov
sub
fcomi
xchg
iret
adc
push
xor
sbb
mov
movsb
dec
icebp
lahf
mov
jecxz
push
dec
addr16
jmp
ja
sar
scas
jbe
mov
inc
push
pusha
or
mov
xchg
fdivrs
mov
repz
push
loope
ljmp
xchg
inc
inc
loopne
fsts
mov
jecxz
jns
inc
push
dec
int3
ds
cltd
lock
setnp
jae
pop
lahf
xor
sbb
jmp
push
test
dec
mov
lea
sbb
cs
xor
ljmp
mov
xor
mov
lea
lcall
xlat
inc
push
pop
jle
cmp
js
jbe
orb
stc
dec
pusha
dec
or
cmpsl
xor
cwtl
loope
jne
xor
push
mov
jno
sbb
aaa
push
jle
mov
or
pop
popf
ret
or
rclb
pop
sbb
in
adc
stc
cmp
jmp
sarb
imul
enter
adc
mov
fadds
xchg
jp
mov
popf
or
lea
ss
gs
mov
cltd
inc
mov
dec
cmpsl
xor
xor
into
icebp
mov
or
addl
repnz
fnstenv
imul
lahf
iret
and
pop
fisttps
xchg
mov
jns
or
sbb
mov
or
sbb
inc
push
push
mov
mov
mov
add
xor
or
mov
sbb
das
out
negb
out
adc
cltd
out
stc
sti
xorl
jmp
ret
or
ret
dec
mov
lret
out
incb
ret
jbe
jp
add
bound
mov
jecxz
into
mov
xchg
adc
out
sub
aas
push
mov
js
and
mov
lcall
inc
inc
cmpsb
cmpsl
pop
in
inc
bound
insb
mov
mov
jnp
adc
repz
negb
jne
out
jne
jp
add
dec
out
sub
adc
sahf
flds
lock
mov
fstpl
popf
mov
fstpl
sbb
lods
enter
xor
sbb
repz
stos
or
stos
movsb
xor
mov
dec
shlb
push
xchg
fisubrl
les
dec
aas
movsb
xchg
cs
test
les
or
jae
sub
mov
sbb
pushf
dec
cwtl
fdivrp
dec
or
in
pop
cmp
lods
ja
cmp
dec
and
shrb
and
xorb
lods
in
cmp
and
mov
sub
lret
dec
lret
fidivrs
jge
dec
aas
daa
sub
enter
mov
cmp
in
int3
adc
clc
into
jl
mov
or
pop
les
imul
pop
sar
sbb
nop
mov
mov
add
add
xchg
pushf
pop
enter
mov
inc
push
jb
loopne
pop
xchg
sub
cltd
scas
sarb
cmp
out
push
andl
jno
inc
test
and
add
push
ds
das
cli
cmc
sti
inc
and
sahf
add
jle
repz
pop
ficoms
cltd
cltd
les
fwait
mov
dec
push
ret
sbb
fcoms
lret
in
scas
adc
lahf
imul
lret
dec
push
notl
sarb
jns
jne
xor
inc
in
dec
add
fwait
fs
insb
loopne
and
test
imul
mov
cwtl
pop
pop
gs
push
mov
xchg
or
xor
add
sahf
or
mov
add
adc
and
mov
mov
icebp
iret
add
js
cmpsl
dec
push
cmp
fadds
push
cld
dec
in
and
push
jae
xchg
call
xorl
cmp
jecxz
fdivr
cmp
inc
int3
out
cld
fbld
mov
daa
jl
leave
add
or
pop
and
pop
std
sub
ror
repz
cmpsl
sbb
aas
add
das
scas
lock
push
aam
les
sub
xor
clc
pop
cmp
or
mov
sub
dec
imul
icebp
sti
popf
push
cmpb
mov
and
divl
sbb
in
inc
inc
xor
ja
push
fwait
cmc
ja
loop
inc
push
pushl
cmc
push
out
mov
xorl
push
fstpl
xlat
popa
pop
dec
hlt
push
sarb
jnp
mov
outsb
clc
mov
aaa
out
adc
lahf
add
pop
fadd
icebp
mov
inc
or
enter
repz
lds
loopne
adc
loop
fdivrl
lcall
jecxz
pusha
sub
out
sub
vmovlps
jecxz
frstor
mov
insb
push
leave
cmp
lds
or
cmp
incl
and
jg
es
js
dec
push
cmc
mov
cmp
xchg
mov
lahf
ljmp
test
int3
sbbl
enter
insl
and
fldt
in
stos
call
into
add
aas
cmpb
cmpsb
out
inc
insb
push
decl
inc
cmc
cmp
aam
cmp
push
sub
push
cmp
call
loop
in
mov
pop
test
imulb
in
add
or
push
pop
cmp
adc
mov
loop
std
xor
jmp
decl
jge
sbb
or
jle
xor
cmp
and
cmpb
cmp
push
cld
rclb
xor
xchg
ljmp
out
repz
mov
das
jbe
add
imull
xor
xchg
stos
sbb
pop
ret
rol
push
push
or
leave
cmp
aam
sbb
lahf
xor
push
pushf
inc
in
call
push
sahf
push
xchg
jle
or
aaa
movsl
cmp
add
dec
add
push
shlb
push
pop
popa
pop
mov
sbb
repnz
fstps
xchg
xchg
outsl
ss
jbe
sbb
outsl
jg
or
lcall
cmp
addl
fnstenv
mov
xor
push
mov
ds
clc
fmull
sub
mov
sbb
ja
fildll
subl
adc
jmp
mov
nop
pop
add
andb
outsl
out
insl
clc
in
jmp
je
out
or
jae
mov
push
dec
addr16
cwtl
imul
loop
push
out
aas
mov
iret
dec
pop
dec
add
lret
add
mov
stc
lret
popa
inc
paddw
rcrl
and
pop
xchg
inc
and
dec
icebp
inc
push
arpl
cmpsl
or
lcall
add
lds
add
jno
fstp
xor
and
movsb
sub
in
mov
pop
les
ret
hlt
sub
sbb
lods
jne
mov
insl
pop
cmc
cmp
inc
movsl
int3
adc
xchg
mov
xchg
call
push
sbb
outsb
cmp
dec
test
faddl
adc
inc
loope
lods
je
sarl
mov
lods
push
pusha
mov
fldenv
mov
jo
es
lret
fldcw
bound
inc
pop
popa
out
cmp
roll
adc
lods
sub
xlat
inc
pop
fistpll
repz
sub
xor
movsb
iret
outsl
push
out
push
fwait
xchg
stos
sbb
dec
sbb
inc
mov
aad
sub
inc
sub
xchg
xor
leave
mov
and
ret
sbb
pop
and
pop
sub
push
push
jp
jmp
push
xor
lods
xor
movsb
gs
pushl
and
je
xchg
push
or
jmp
jno
test
test
lcall
or
jmp
mov
out
out
mov
jl
mov
push
push
mov
cmpsb
sarl
icebp
mov
xlat
jg
push
xchg
push
call
mov
mov
fsubrl
mov
mov
fbstp
pop
pop
js
fildl
lock
fidivrs
js
mov
pop
mov
cmp
jns
das
mov
repz
push
inc
jmp
xchg
fcmovu
outsl
xchg
andb
bound
add
divb
add
push
insl
cmp
pop
ds
sub
iret
subw
and
pop
adc
cli
andb
sbb
xchg
or
lods
mov
shl
inc
inc
data16
std
addr16
jl
cmovns
adc
sarb
mov
cmp
xor
mov
sbb
add
das
sahf
out
cs
jle
std
inc
pop
dec
xor
mov
das
sar
aas
insl
cmp
add
lea
mov
xor
fidivrs
scas
jmp
fnstcw
ror
push
pop
add
mov
lods
out
iret
fidivs
aad
ret
icebp
in
scas
sub
xchg
and
jne
mov
ret
mov
mov
ljmp
sbb
fxch
inc
cli
dec
cmc
adc
cmp
push
jmp
out
arpl
cmp
xchg
mov
mov
mov
xor
push
add
add
sub
xchg
jle
dec
cld
dec
inc
dec
test
imul
sbb
inc
je
sbb
dec
add
fcmovbe
andb
hlt
sbb
fildl
push
int3
cmp
mov
dec
cmpl
loope
cmp
stos
jo
cmpsl
cmp
cs
test
test
or
push
xchg
mov
add
add
aaa
out
mov
cmp
ds
aas
fcoms
sub
pslld
xchg
mov
pop
mov
jge
sbb
mov
dec
push
sub
mov
adc
call
fidivrl
jmp
inc
int
test
mov
mov
mov
or
add
pop
mov
stos
daa
and
nop
inc
mov
mov
pop
in
loop
xor
in
xorl
clc
inc
sub
sub
es
out
out
stos
data16
push
in
xchg
and
adc
neg
inc
scas
adc
dec
jmp
cmp
mov
inc
popf
xchg
fildl
ljmp
out
aam
roll
mov
stos
sub
and
mov
adc
inc
outsb
lods
test
sbb
cmp
fwait
sbb
cmp
scas
inc
pop
repz
xor
daa
cmpsb
cld
cli
mov
rcrb
mov
cltd
or
pop
fldcw
sti
jae
jmp
mov
stos
dec
xchg
jns
int3
repz
bound
mov
cmp
cmpsl
mov
mov
lods
je
dec
movaps
fs
cwtl
sub
clc
xchg
sub
gs
push
jp
jno
loopne
pop
fidivrs
subb
adc
inc
or
hlt
cli
test
mov
cmpl
je
xor
pop
mov
or
xchg
lods
jecxz
mov
xlat
push
push
sarb
jge
shll
sbb
in
mov
ffree
jmp
out
mov
mov
mov
push
es
popa
scas
or
test
sbb
es
ljmp
adc
push
dec
or
ja
mov
sbb
or
fldenv
dec
push
aad
js
push
iret
jbe
mov
icebp
xchg
fsts
or
dec
xchg
inc
test
mov
mov
lret
outsl
adc
into
push
jge
or
fs
and
test
push
daa
call
mov
inc
hlt
dec
xlat
or
xchg
mov
test
inc
or
insl
pop
push
fisubs
dec
fwait
xchg
out
fwait
int
jbe
mov
mov
mov
cmp
xor
mov
mov
sub
inc
outsl
int3
jne
test
in
and
pop
dec
mov
sub
push
sbb
push
in
loopne
and
insb
xor
push
lods
or
hlt
imul
fcmovbe
jge
imul
ss
fwait
cwtl
fcompl
jmp
xchg
push
inc
or
fcomps
mov
sub
loopne
lcall
js
iret
into
mov
pop
push
fucomi
lock
daa
popf
mov
mov
rcr
int
stos
and
pop
mov
xchg
pop
jg
xchg
imul
popf
mov
inc
rolb
adc
inc
in
fnsave
mov
mov
pop
adc
sub
mov
loope
shrb
adc
sbb
add
add
push
inc
loopne
adc
sbb
outsb
std
shlb
jp
jmp
cwtl
push
jb
cmp
add
adc
lea
pop
jl
roll
movsl
movntps
aas
mov
push
xor
jnp
pop
repz
fbstp
add
sbb
mov
pop
in
pusha
mov
hlt
adc
pop
roll
lahf
data16
das
das
je
fnstenv
adc
push
pop
xor
sbb
inc
add
add
das
adc
arpl
inc
cli
push
cltd
fwait
pushf
adc
loope
outsb
out
jne
and
or
cmp
and
jae
imul
fiadds
mov
push
sahf
mov
mov
xor
or
fnstenv
pop
cld
jle
xchg
movsl
mov
push
pop
push
rcrl
out
mov
ficoms
stos
movsl
inc
pop
sub
shll
dec
addr16
sub
mov
popa
pop
jge
and
push
or
cld
mov
or
sub
ja
fdivrp
sbb
jmp
dec
and
imul
loopne
mov
call
jbe
mov
fstl
inc
dec
xorl
lret
mov
add
das
jb
cmpsl
into
jle
adc
cmp
dec
out
jp
cmp
arpl
scas
cld
sbb
sub
mov
sub
jg
sbb
pop
imul
dec
js
test
or
mov
loope
arpl
xorl
mov
loopne
pop
cltd
jmp
push
inc
lcall
pop
in
adc
push
mov
aaa
add
mov
cmp
mov
adc
inc
adc
fcoml
aas
xchg
jp
ret
xchg
loopne,pn
adc
shlb
inc
shl
mov
in
push
jmp
loopne
popa
js
push
daa
inc
mov
icebp
lods
mov
in
mov
arpl
cmpsb
jecxz
cltd
sub
or
stos
or
push
and
stos
enter
dec
ljmp
mov
fildl
cwtl
adc
call
lahf
neg
not
jg
mov
into
out
mov
in
andb
push
sub
fsubs
jne
repz
sbb
xchg
fcomps
mov
or
jo
aam
inc
mov
xchg
out
mov
int3
ret
mov
outsl
arpl
inc
mov
pop
sub
cmpsb
xor
or
and
stc
add
pop
cwtl
cmp
shr
lcall
sbb
dec
mov
xchg
cmpsl
stc
push
or
lret
clc
ficoms
jp
pop
incb
outsb
je
idivl
mov
xor
pop
dec
add
jne
dec
mov
and
rorl
pop
and
out
lret
aaa
cmp
mov
loop
cmpsl
popf
mov
cltd
testb
scas
enter
sbb
or
or
sub
in
or
hlt
aaa
and
push
jae
and
mov
push
mov
test
scas
rcrb
pop
rcrb
scas
xor
test
pusha
add
test
ret
sub
outsb
aas
mov
rcll
sti
push
inc
jge
lds
testl
call
jae
pop
inc
cwtl
aad
in
push
jp
outsl
arpl
inc
add
pop
out
pop
cmp
stc
sar
arpl
add
cld
jge
dec
in
push
mov
adc
xlat
fstpl
lods
fstps
orl
subb
sar
into
leave
sbb
clc
xchg
enter
std
ret
push
fdivrl
popf
aam
lcall
cmp
jo
out
test
imul
mov
xchg
test
xchg
addr16
jne
ficompl
cmp
mov
in
mov
jp
cwtl
std
mov
add
shl
mov
loope
jno
imul
cmp
pop
adc
daa
incl
or
sub
sbb
pusha
xor
jmp
sti
outsb
and
dec
pop
in
shlb
dec
lret
test
ret
sub
xor
fisubl
sub
mov
je
mov
clc
ljmp
adc
aam
push
sbb
lahf
and
js
push
divb
mov
fcmovb
int
jle
jmp
mov
push
inc
ret
or
or
ds
inc
addr16
adc
jp
mov
repz
xor
pop
rcll
xchg
outsb
nop
insl
pop
rcll
mov
cmpsb
nop
inc
lcall
rcrb
call
add
mov
mov
cld
rclb
iret
cmp
mov
mov
bound
out
imul
cmc
stos
adc
xchg
adc
inc
inc
pop
cli
and
mov
xlat
adc
and
cmp
ljmp
insl
xor
repnz
cli
int
mov
sti
fcoml
push
cwtl
or
push
mov
dec
dec
cs
xor
insl
in
out
push
push
lock
movsb
or
in
mov
xlat
or
sarl
jmp
aas
shll
daa
sub
loope
sub
pop
das
add
aad
incb
pop
sub
pop
jo
and
sbb
ret
dec
stc
stos
and
add
aam
push
sahf
ficoms
mov
xor
popl
mov
pop
loop
stc
xorb
or
cmp
jne
push
mov
dec
cwtl
or
lock
cwtl
jp
push
mov
fcmovnbe
out
in
fidivl
inc
inc
xor
mov
push
cmp
es
dec
push
popa
fldenv
iret
mov
add
mov
imul
dec
aad
mov
dec
mov
movsb
push
out
fisttpll
ret
test
test
sub
push
aaa
pop
loopne
mov
mov
xor
cmp
mov
movb
mov
jbe
stc
fwait
push
popf
jmp
adc
adc
roll
dec
cs
outsl
sub
jae
mov
mov
mov
mov
xchg
gs
out
or
dec
push
insl
das
addr16
jns
inc
pop
jg
and
sub
xor
stos
cmc
cli
and
insl
mov
dec
movb
shrb
cmp
mov
mov
fucom
repz
loop
out
push
gs
or
push
icebp
stc
into
add
stos
xchg
gs
xor
jno
bound
stc
dec
lods
cmp
or
inc
aas
mov
cmp
fmull
fstl
xchg
mov
decb
ja
add
insb
test
lret
ja
dec
and
std
stos
filds
mov
adc
xchg
cmpsb
adcb
sub
dec
mov
outsl
incb
lock
cmp
repnz
into
pusha
shlb
repz
mov
sub
cmp
mov
bound
inc
std
stos
sub
pop
inc
lds
adc
and
rorb
dec
lock
add
pushl
dec
in
sahf
test
leave
mov
lock
push
or
std
addr16
pop
movsl
es
pop
sub
outsl
ss
icebp
repz
jmp
sbb
add
stc
mov
mov
jo
in
xchg
xchg
push
adc
add
mov
pusha
repnz
and
jne
fldcw
mov
insb
iret
popf
mov
or
dec
mov
enter
ret
imull
jg
cltd
pop
hlt
data16
cmc
loope
and
and
fcoml
jo
pop
cmp
or
mov
bound
repnz
ds
pop
bound
sub
in
mov
aas
mov
decl
jnp
fwait
movsl
inc
mov
sbb
adc
xchg
cmp
xchg
cmp
xchg
jmp
sbb
mov
adc
pop
mov
iret
add
popf
test
cmp
aaa
jp
gs
stc
lds
outsl
jle
rcrl
test
cs
aaa
xor
push
in
push
shr
dec
leave
lods
js
inc
pop
std
adc
stos
xchg
jmp
and
or
push
lcall
repz
sub
insl
push
enter
cltd
sub
pop
cmpsb
mov
mov
jp
jb
pushf
add
nop
icebp
cmp
push
or
sbb
test
mov
lea
cmp
sti
jns
jbe
insl
rolb
sahf
jae
lahf
mov
xchg
enter
popa
ja
jo
inc
ret
outsl
mov
add
sub
imul
mov
movsb
aam
out
das
enter
dec
lcall
test
mov
dec
add
arpl
xchg
adc
mov
mov
xor
aas
push
pop
push
lods
lcall
xchg
rcrb
adc
jne
mov
pop
adc
sbb
fildl
repnz
nop
mov
dec
popf
mov
pop
rclb
sbb
mov
je
dec
and
sbb
and
xchg
pop
pop
adc
fwait
push
aam
movl
mov
das
movsl
or
mov
scas
mov
std
test
cmp
cld
mov
mov
inc
aaa
push
testb
aaa
mov
ss
cmp
movsb
aam
jp
mov
or
ds
loop
lods
fwait
lret
xchg
fcomps
out
mov
stos
cmp
hlt
xor
xchg
fs
aaa
cmp
mov
test
aaa
js
clc
inc
xchg
mov
and
sti
xor
lods
sub
mov
mov
push
adc
bound
xor
xor
cmc
out
xor
insb
jo
jmp
outsb
pushf
ds
pusha
clc
sbb
sub
mov
sti
xor
sub
shl
jmp
xchg
lock
mov
sbb
ljmp
gs
and
xchg
dec
cmp
cmp
and
shll
fs
in
testb
mov
xor
xor
adc
xor
repz
sub
loopne
and
xlat
mov
cmp
sti
and
int3
in
xchg
pusha
and
ret
outsl
adc
sbb
je
xchg
shlb
mov
jae
pushf
sub
sti
dec
inc
xchg
test
dec
adc
lock
xor
jecxz
jg
mov
xchg
adc
sub
pop
rorl
cs
mov
pushf
xlat
fsub
sbbl
enter
dec
sub
sbb
jnp
lret
nop
sub
add
push
clc
cmp
or
jge
daa
xchg
or
xor
pop
inc
cmpsb
fwait
dec
std
scas
pop
andl
xchg
pop
out
adcb
scas
or
jecxz
pop
rcl
int3
inc
mov
or
inc
pop
jle
pop
js
cmp
repz
in
repz
xor
mov
stc
pop
sub
inc
mov
inc
jp
lock
and
pop
mov
mov
ret
and
push
mov
adc
daa
xor
call
xchg
orl
jmp
out
mov
jge
cmp
mov
jmp
jns
mov
in
pop
mov
lds
sub
stos
cmc
insb
sbb
test
je
cli
nop
push
add
add
cmp
imul
rorl
leave
add
gs
push
push
pop
pop
notl
mov
inc
repnz
xchg
push
xchg
jle
rcll
ds
jne
imull
ja
mov
outsb
sarl
push
add
pop
xor
jno
vxorpd
popa
insb
ljmp
or
inc
sbb
out
pop
xor
inc
mov
add
cmpb
cwtl
xchg
mov
les
fbstp
inc
jecxz
fidivrs
bound
adc
adc
jp
and
adc
mov
push
ss
aad
mov
paddb
out
mov
pop
push
mov
call
mov
xchg
jge
bound
push
loope
mov
jo
pop
sub
inc
adc
into
xchg
sti
sub
iret
cld
jp
jp
jno
insl
adc
and
adc
int3
fisubrl
daa
lock
xlat
jle
movsb
out
pop
fisubs
dec
push
adc
ret
mov
jbe
and
iret
arpl
or
inc
adc
into
sbb
notl
adc
mov
mov
les
add
in
pop
mov
or
ror
cmp
adc
mov
clc
jo
jns
lret
mov
fdivp
dec
fdiv
add
enter
movsb
movsl
out
rolb
scas
subl
and
sub
iret
movsl
xchg
aam
mov
push
adc
add
cmpsb
nop
mov
add
sub
pop
mov
adc
addb
push
push
fcoms
dec
out
test
sbb
xchg
mov
out
jae
xor
jmp
jbe
scas
ret
scas
in
dec
cli
mov
outsl
xchg
xor
inc
pusha
in
stos
mov
xchg
jo
xor
scas
enter
sbb
ret
addr16
mov
out
mov
mov
push
cmp
jno
xchg
adc
fbstp
test
ficoml
stos
stos
fdivrp
fiaddl
xchg
aaa
in
push
lcall
sub
adc
shlb
xchg
mov
jbe
inc
pop
jmp
mov
sbb
out
xchg
jnp
jbe
adc
test
push
add
jae
sbbb
rol
subl
jnp
pop
test
aaa
imul
push
xabort
movsb
sub
dec
cmpsb
sbb
out
lcall
negb
and
cmp
adc
addr16
lret
and
in
cltd
aam
jmp
nop
lods
push
xchg
int3
xor
in
cmpsb
pop
and
sub
adc
shll
test
jle
fmuls
mov
lds
jb
mov
cmp
xlat
dec
retw
xchg
jecxz
dec
or
adc
inc
push
sbb
jge
stos
movsb
cmp
imul
in
add
mull
cmp
fcoml
lahf
inc
xchg
mov
xchg
int3
inc
fcmovne
jo
lcall
dec
push
daa
std
sbb
mov
mov
adc
mov
icebp
fimuls
xchg
pop
add
mov
mov
jb
dec
sub
xchg
pushf
jae
adc
dec
lock
pop
or
int3
popf
addr16
rcll
xchg
xor
clc
fildll
aam
xchg
mov
push
ret
adc
negb
adc
bnd
xorb
pop
and
imul
int
int
sub
sbbl
mov
cmp
sbb
jmp
sbb
sbb
push
es
cmp
lods
dec
mov
mov
and
pop
lret
imul
mov
mov
push
pop
mov
inc
in
mov
jo
jg
mulb
lods
lret
rcrl
aad
jge
inc
pop
add
cmpsl
mov
jb
mov
js
enter
cltd
in
jecxz
jns
sahf
les
xchg
inc
cmp
sti
pushf
cmpb
in
inc
dec
scas
mov
clc
clc
es
dec
xor
inc
cmp
ja
push
pop
stos
mov
fstpl
cwtl
mov
jne
stc
cmpsb
mov
cmp
imul
add
mov
icebp
mov
mov
mov
fdiv
mov
jae
xor
pop
pmulhuw
mov
sub
cltd
dec
loop
or
and
popa
stos
jge
ret
mov
outsb
stos
sbb
xchg
nop
psrlw
mov
xchg
insl
bound
repz
jecxz
std
jl
fdivrl
dec
aaa
adc
xchg
cmp
or
xchg
inc
or
and
cmp
nop
mov
push
push
std
iret
in
jae
aam
cmc
das
sub
inc
mov
pop
and
pop
and
dec
test
xchg
rcrl
adc
stos
emms
jbe
push
imul
shr
popa
outsb
mov
sub
push
inc
lahf
inc
push
or
xor
lahf
movsb
or
int
or
fnstcw
int3
rcrb
dec
bnd
add
and
jg
test
insl
jg
popf
or
inc
or
in
cs
pop
ret
ja
sarl
jp
push
add
sbb
mov
jnp
xchg
stos
shll
jne
push
imul
je
xor
pop
jae
dec
out
mov
sbb
dec
cltd
pop
jbe
fadd
loopne
or
insl
pop
add
jb
leave
push
mov
inc
rcll
cltd
push
push
xor
xor
clc
cli
frstor
leavew
cld
cmp
cli
in
lret
addr16
adc
pop
mov
movsl
fstpt
loope
lret
push
jnp
sbb
mov
adc
xchg
inc
fisubrs
pop
call
adc
das
sub
xchg
push
adc
xlat
out
xor
aam
ljmp
call
sub
mov
sub
jnp
imul
and
sbb
int
add
push
jecxz
jle
test
mov
pop
xor
push
lock
shrb
mov
sub
shll
outsl
std
dec
and
xor
dec
rclb
les
add
mov
xorb
lahf
pop
and
data16
sti
xor
rcll
mulb
dec
je
xchg
scas
jo
nop
fstps
inc
push
push
shlb
repz
adc
sbb
cmp
adc
iret
imul
dec
pop
xchg
cld
in
shll
outsl
setne
sub
lret
test
mov
mov
xchg
xchg
sub
inc
in
push
cmp
jp
inc
xchg
fstps
jmp
or
fdivs
mov
pop
cmp
into
insb
pop
adc
xor
sahf
int
add
xchg
dec
mov
push
xchg
or
mov
ret
clc
cld
adc
mov
cmp
inc
dec
push
add
subb
and
mov
loopne
push
loopne
push
xor
mov
jl
lea
sbb
sub
inc
push
arpl
into
jae
in
xorb
sub
idivb
and
cld
es
fadds
jmp
mov
add
xchg
shr
jnp
scas
repz
cmp
out
sub
mov
loope
inc
cld
and
in
cmpsb
push
lds
fistps
fwait
cwtl
push
inc
inc
gs
aas
sub
es
xchg
or
ds
cli
push
dec
inc
sbb
jecxz
scas
clc
rcl
mov
jl
jle
pushf
xor
xchg
mov
leave
push
test
fadds
addr16
sbb
lret
mov
rorb
or
lret
xor
jl
je
mov
repz
and
popf
pop
mov
je
jne
add
out
xchg
mov
jno
and
hlt
push
outsb
and
fstl
loope
sarl
fiadds
int3
dec
xchg
leave
insl
shl
int3
dec
lret
push
dec
js
mov
pop
mov
dec
nop
inc
in
xchg
inc
jne
and
mov
insb
or
popaw
mov
pop
in
stos
mov
call
iret
out
push
lods
jg
insl
mov
jp
xorb
push
add
decl
inc
mov
jle
rol
fcmovnb
in
cli
jp
or
in
push
mov
mov
xlat
test
or
sahf
in
pop
and
sub
sbb
popa
in
sbb
andl
rorl
in
inc
test
push
mov
jecxz
dec
inc
jnp
insb
jge
jg
sbb
pop
movsb
cmc
mov
jmp
rclb
push
adc
hlt
sub
stos
mov
adc
pop
mov
in
enter
xchg
ljmp
lahf
movsl
push
or
stos
adc
inc
movsl
push
icebp
cmp
sbb
mov
dec
or
aad
xchg
icebp
nop
sub
lret
adc
lahf
and
adc
add
stos
cmpsb
adc
jle
inc
xchg
call
push
adc
movsl
fmull
and
mov
inc
test
cld
outsl
and
sub
mov
subl
push
xlat
sbb
or
popf
lea
or
lcall
clc
adc
and
sub
jns
add
pop
jb
outsl
and
lods
xor
cwtl
cmp
call
cwtl
enter
into
icebp
mov
not
xchg
sub
xor
gs
push
cmp
xchg
mov
cs
lods
lahf
jae
xor
jp
movsl
leave
bound
mov
adc
test
pop
fucomp
std
push
addr16
cmp
mov
hlt
jp
sbb
scas
out
sbb
dec
lock
stos
test
sub
jmp
bound
or
inc
ror
push
lods
ret
insb
mov
adc
push
enter
mov
bound
jge
rclb
fcmovbe
enter
dec
jbe
aad
pop
and
in
mov
aam
lds
xchg
jge
mov
lock
out
or
ja
mov
xor
sub
lahf
fstpl
adc
std
sub
mov
jbe
mov
mov
push
fsubrs
inc
push
xchg
lahf
scas
jle
mov
add
icebp
leave
enter
adc
lahf
or
mov
and
aad
dec
push
push
mov
mov
push
aam
je
push
std
lcall
in
pop
lcall
popa
pop
xchg
out
mov
xchg
addr16
test
jnp
sub
sub
rcr
outsb
add
push
xchg
subb
lret
or
ret
cmc
jmp
fcompl
add
lods
pop
test
push
push
out
push
mov
sbb
push
adc
popf
mov
sub
mov
mov
mov
mov
pop
pushf
stc
adc
les
mov
mov
dec
mov
test
and
in
das
add
and
pop
popa
mov
insl
sarb
xchg
lock
dec
mov
dec
add
inc
sub
sbb
push
cmpl
dec
push
repnz
movsl
mov
push
stc
call
adc
jo
xor
xchg
jb
call
xchg
pushf
rclb
stc
push
or
leave
mov
ret
cltd
sbb
cmc
push
in
push
xor
xchg
loop
mov
loop
movsb
andb
or
idiv
pop
dec
inc
dec
jge
pop
pop
subl
aaa
mov
fmul
and
das
call
imul
daa
add
movsb
cli
adc
sub
cmpsl
jns
mov
xchg
arpl
arpl
pushf
xchg
out
xchg
dec
setno
cmp
div
sahf
mov
fs
cmp
lret
insl
sub
sbb
outsb
rorl
sti
inc
cld
test
cmp
mov
or
out
and
dec
sarl
add
mov
pop
movd
movsl
enter
push
aaa
lds
and
scas
iret
add
andb
add
jb
and
pop
xor
adc
cmpsb
dec
mov
ds
adcb
fisubrs
in
movsl
popf
xchg
lahf
inc
and
int3
ror
pop
orb
pop
mov
xchg
fldl
fwait
scas
sahf
ds
xor
jmp
inc
hlt
mov
add
fisttpl
cmp
in
popf
cwtl
inc
shlb
in
jp
jp
jnp
adc
pop
dec
xor
pop
add
sub
push
sub
jns
sti
and
jl
mov
and
imull
adc
mov
pop
push
mov
fldt
xor
sbb
pop
and
cmp
fwait
push
jg
scas
push
inc
inc
fs
ljmp
xchg
sarl
loop
inc
mov
movsb
stos
fcoms
push
sti
das
stos
das
es
jmp
push
push
jl
je
pop
add
mov
sub
cltd
xchg
inc
mov
xchg
push
imul
mov
cmp
test
lock
xchg
test
mov
cmpsb
pushf
push
add
or
adc
in
sahf
sti
cli
es
fs
adc
daa
jge
push
add
xchg
aad
dec
cmpsb
xor
fwait
dec
dec
xlat
lods
cltd
mov
lds
jno
aam
mov
jmp
adc
das
sbbl
push
dec
sbb
jmp
movsb
ret
into
test
xchg
nop
in
pop
mov
aas
test
lea
adc
scas
mov
fs
fsts
or
or
lret
pusha
jecxz
lea
mov
aam
cmp
lret
scas
ds
divb
pop
je
and
fwait
sub
fcomp
mov
sbb
cmp
jle
pop
lods
fsub
and
and
std
mov
jmp
fmul
shl
sbb
por
jp
cmp
nop
cmc
cmp
mov
mov
faddl
subb
in
les
jnp
repz
adcb
xor
jl
dec
sub
mov
cmp
lret
lods
out
scas
mov
clc
xlat
push
adc
icebp
movsl
jo
lods
adc
gs
xor
pop
lods
mov
mov
pop
and
leave
xor
shrl
imul
pop
jge
or
or
mov
les
fisttpll
scas
divps
test
xchg
popa
adcl
xor
fidivl
dec
mov
std
rcl
xor
dec
pop
icebp
sbb
insl
bound
cmc
lods
cmpb
lock
jmp
cld
or
pushf
mov
data16
cmp
into
inc
lds
pushf
push
jne
sub
hlt
cltd
movsb
pop
shll
pop
negb
push
cmp
lahf
fsubrp
idivb
push
sbb
xchg
iret
xchg
jno
pop
mov
pop
jmp
loopne
pushf
inc
jl
add
or
and
cmc
or
add
cmp
or
push
push
xchg
mov
inc
les
daa
push
push
cld
cmpb
stc
sbb
push
cwtl
es
imulb
lea
sbb
call
lahf
pop
cmp
cmpsl
dec
icebp
icebp
fists
out
mov
inc
xchg
cs
adc
call
cmp
xchg
xchg
mov
cs
push
ret
repnz
cmp
arpl
ret
ja
mov
mov
mov
pop
jb
loop
cmp
je
fisubs
aaa
and
and
jns
ja
in
lahf
mov
xor
sbb
fucom
in
sub
in
cmpsb
pop
or
push
dec
push
mov
xchg
cmp
lods
cmpsb
adc
or
jg
lods
mov
clc
cmpsb
insb
cmp
or
and
inc
mov
or
adc
xchg
xor
sbb
sub
pop
sub
push
popf
inc
bound
pop
inc
cmp
int
sub
push
ret
mov
cmpsb
aas
push
dec
inc
pop
mov
shlb
lret
leave
test
das
cmp
sti
bound
pop
xor
jbe
inc
imul
pop
mov
outsb
test
adc
repnz
xchg
xlat
ret
add
aam
add
adcb
in
incl
xchg
pop
xchg
fisubrs
pop
jge
lods
inc
mov
mov
outsb
xor
sti
mov
cli
movsb
mov
daa
jl
lcall
mov
movsb
addr16
add
jnp
cmp
loopne
cmpsl
stos
mov
xchg
pop
pop
and
lds
cwtl
push
cmc
popa
mov
aas
testb
mov
xchg
jmp
mov
pop
int3
ja
std
or
sbb
ret
fisttps
inc
insl
repnz
shll
jl
ret
add
cmp
sbb
jne
cld
xor
adc
mov
add
and
fildll
mov
adc
pop
leave
mov
push
mov
jg
add
dec
xor
inc
inc
lds
and
sarl
dec
test
jl
pop
ret
xor
or
nop
out
inc
xchg
jmp
lret
shll
cmp
adc
pushf
movsb
nop
lds
lds
adc
lret
sbb
inc
xor
pop
test
mov
push
mov
sbb
test
inc
inc
xchg
mov
pop
add
and
pop
xchg
inc
fwait
sub
in
iret
inc
dec
lret
movsb
push
mov
dec
adc
loop,pn
mov
jbe
inc
inc
scas
push
or
xchg
sub
cmp
fs
fldt
int
scas
loop
inc
xor
movsb
js
cmp
push
ljmp
ret
cmp
mov
or
int
mov
jbe
cmp
dec
inc
push
and
es
push
xchg
sbb
repz
jno
jecxz
arpl
jmp
add
and
dec
adc
hlt
jae
sahf
jl
push
push
dec
push
fwait
je
jle
mov
ja
insl
xor
aaa
lret
pop
jne
inc
mov
fldenv
add
sbb
mov
cltd
inc
in
shlb
cmp
aam
popa
mov
sub
movsl
shrl
ss
rclb
mov
jo
fldt
mov
or
dec
bound
insb
fildl
addr16
xor
sti
insb
jmp
insl
into
mov
sti
jge
fists
pop
jb
mov
or
pop
pusha
pop
add
mov
pop
out
loopne
jb
lret
cmpsl
mov
add
pusha
xlat
or
jo
jmp
adc
mov
lret
jl
xor
push
jns
inc
cmp
and
nop
js
adc
xor
or
mov
mov
push
mov
lds
xor
mov
jns
add
or
push
jl
sbb
lret
push
jl
sub
fwait
mov
sbb
xchg
subl
jae
pusha
cmpsb
cli
int
mull
jp
idivl
mov
or
jge
jg
sub
dec
inc
push
cmp
mov
or
pop
aas
inc
mov
cmp
pusha
ds
add
xchg
adc
xlat
imul
dec
lcall
mov
mov
scas
loop
faddl
add
add
dec
xor
push
aaa
and
in
mov
push
cwtl
jnp
setns
adc
pop
push
sbb
jns
ret
xchg
imul
mov
fstl
cld
sbb
jb
and
pop
daa
push
cmp
cmpsb
lds
dec
je,pt
dec
mov
out
add
cmp
mov
pop
cmp
aad
arpl
or
and
arpl
sbb
mov
stos
notl
mov
add
mov
pushl
loop
div
mov
dec
dec
sub
mov
adc
push
adc
shrl
out
repz
push
mov
int3
mov
int3
rol
and
outsl
mov
pop
dec
out
enter
outsb
mov
xchg
jecxz
mov
mov
into
jnp
xchg
mov
ja
add
inc
cmpsb
mov
scas
or
xor
cld
add
outsb
push
out
incb
xchg
push
jne
pop
adc
push
scas
aad
mov
loop
out
imul
pushf
outsb
jb
bound
xor
adc
pop
jp
pushl
add
shl
xchg
mov
mov
dec
mov
push
and
testl
and
in
pop
jo
mov
dec
sbb
adc
pop
or
jbe
lret
inc
sbb
dec
test
and
jo
fs
ret
or
sub
int
rcr
push
xor
mov
ret
jp
stc
xchg
sub
das
packsswb
push
lods
inc
sub
mov
lcall
ljmp
lahf
xor
lods
add
lret
sub
pop
mov
inc
xchg
cmp
in
or
aaa
push
test
fsubrs
jne
clc
mov
repz
dec
add
nop
jae
push
aad
push
nop
cmp
shrl
jno
sti
and
les
jmp
pop
or
fmull
xchg
push
mov
jb
xor
adc
pop
jmp
push
push
scas
add
popf
jne
call
inc
lcall
ljmp
outsl
or
push
stos
jbe
push
aad
pop
push
sti
inc
jae
mov
out
repz
bound
mov
mov
repz
mov
mov
push
or
popa
and
in
sti
sbb
ljmp
shrb
rcll
fsubrl
push
mov
xchg
shl
mov
jp
shlb
fldl
shlb
dec
clc
pop
inc
jo
sbb
jmp
fsubrl
lods
sete
hlt
sub
and
aam
hlt
pushf
jge
dec
jae
loope
notb
jp
fdiv
push
stc
aad
cmc
mov
cli
sbb
sub
cmp
shll
add
inc
ret
fimull
add
and
rcr
les
clc
in
enter
mov
cli
sbb
inc
fcompl
arpl
xchg
inc
movb
add
jge
int3
inc
gs
inc
pop
outsl
push
and
mov
or
fwait
int
test
and
jp
ja
add
fcomi
aas
repz
xchg
mov
scas
into
add
pop
pop
jne
sub
stos
pop
sub
mov
mov
add
scas
cmp
push
stc
sub
adc
cltd
mov
or
push
filds
jl
push
push
jle
mov
inc
sbb
cmpsb
leave
fadd
stos
in
in
roll
push
outsl
ret
jge
dec
or
mov
mov
jg
jae
scas
sar
jo
mov
sbb
xchg
inc
mov
out
scas
xor
dec
nop
xor
ss
xor
pop
inc
ds
lea
jmp
test
cmc
daa
pop
mov
xor
fidivl
movsl
dec
aad
push
xchg
mov
test
mov
jg
fwait
pop
sub
lret
lods
add
cli
inc
pusha
imul
in
cmpsl
inc
das
fcomps
push
push
test
pop
pop
dec
inc
test
nop
cmp
popa
xchg
pusha
jl
stos
rolb
jecxz
aas
xor
push
inc
les
sub
insb
or
cltd
sub
dec
pop
fidivs
mov
in
or
xchg
imul
fdivs
mov
sar
popa
pop
jle
jp
and
push
push
lods
or
ror
adc
inc
xor
mov
mov
adc
lods
mov
xor
out
popl
imul
or
jle
bound
sbb
ja
sub
sbb
push
das
cli
fidivs
ja
mov
sub
or
arpl
movsb
int3
fxch
cmp
scas
dec
cmp
shrb
nop
testl
push
outsl
fcmovnu
and
sbb
divb
push
sbb
in
fwait
gs
clc
cli
inc
call
xchg
outsl
insl
push
mov
int3
cmpsl
mov
inc
mov
and
js
sub
inc
xchg
stos
xor
cmpsb
in
lret
pushf
adc
xor
pusha
or
push
cltd
mov
inc
xor
addb
cmp
ret
mov
adc
jb
inc
lods
sarb
adc
shrl
dec
mov
out
sbbb
mov
mov
adc
lcall
dec
or
outsb
arpl
sbb
in
cmp
stc
mov
insl
mov
push
inc
and
jae
cwtl
insb
loop
xchg
sub
in
sbb
jl
dec
stos
in
lret
into
dec
mov
jmp
sahf
jo
xchg
clc
pop
fsubrs
mov
and
or
push
dec
pop
mov
add
jb
in
add
xchg
je
jae
xlat
pop
xchg
ret
dec
out
mov
addr16
jb
cmp
arpl
push
pop
ret
roll
sarb
fwait
jne
dec
sub
jbe
push
test
jle
inc
rcr
je
or
ficoms
icebp
hlt
fs
out
inc
inc
and
inc
lods
add
stc
or
stc
shll
pop
notb
push
pop
sarl
cmp
outsb
test
push
or
je
add
jne
sub
imul
inc
scas
dec
jle
daa
insb
push
lods
cmpsb
jo
sub
lods
mov
jne
fidivrs
shll
add
lahf
lods
lea
lods
inc
mov
scas
xor
jnp
jo
sbb
add
and
cmpsl
or
mov
jae
mov
jge
mov
and
jae
push
sbb
into
jp
mov
dec
std
in
add
ss
cmpsb
inc
cwtl
adc
sete
cwtl
mov
hlt
sbb
pushf
pop
push
cmpb
jle
mov
push
xchg
and
dec
pop
pop
mov
aad
fcomps
cmp
stos
adc
add
or
lcall
push
call
mov
mov
aam
mov
dec
inc
add
pop
add
loope
xor
pop
rorl
xchg
xor
insb
xchg
js
out
lea
add
jb
mov
imul
or
outsb
pusha
adc
pusha
lcall
test
xor
or
inc
push
sub
out
sbb
push
xchg
mov
and
add
sahf
and
js
xchg
push
lcall
gs
jmp
and
je
gs
dec
cli
stc
cmp
int
xor
or
xchg
jl
movsb
ss
push
cli
test
fisubrs
insl
jae
cmp
inc
push
mov
xchg
in
out
sahf
lock
stos
addb
mov
int3
testl
fdivrl
cmpsl
push
mov
and
rorl
fdivl
sub
in
jecxz
popa
in
mov
adc
hlt
mov
push
stos
test
imul
add
sub
adc
repnz
inc
inc
loope
in
mov
cmc
clc
jge
mov
stos
xor
loope
es
js
push
lahf
jno
mov
push
xchg
push
andl
sub
mov
pushf
or
pop
sbb
scas
cli
pushf
loope
xor
pop
xor
in
pop
js,pn
das
and
shrb
mov
push
test
xor
mov
sub
or
fwait
sub
xlat
js
lods
pop
pushf
fdivs
cmpsl
je
inc
mov
jb
leave
dec
dec
mov
mov
out
gs
jb
dec
shll
mov
dec
movsb
sbb
dec
loopne
adc
lahf
lcall
mov
clc
das
lret
pop
stc
mov
mov
shlb
add
cwtl
movsb
or
in
mov
stos
test
arpl
cld
in
mov
aad
in
insb
pop
mov
stc
out
push
mov
js
sbb
or
lret
insl
xor
sub
je
pop
lea
jp
cwtl
xor
lret
aaa
div
scas
mov
aad
sbb
bound
dec
push
sub
into
lods
das
inc
loope
call
xchg
jmp
jae
imul
and
hlt
xchg
test
jne
push
adc
lds
sub
and
shlb
scas
add
jno
dec
rorl
sub
add
fldt
pop
imul
push
sbb
lahf
and
insb
jg
out
pop
sbb
pop
pop
push
sbb
add
enter
mov
popf
add
lcall
xchg
enter
inc
repz
das
andb
xor
iret
inc
mov
xor
aaa
jl
cli
aad
call
dec
dec
mov
jno
sub
ret
inc
scas
popa
add
loope
dec
popf
add
pop
lods
mov
testb
ds
xchg
jnp
sbbl
sub
into
xlat
stos
push
dec
xor
cwtl
mov
inc
sub
xchg
mov
sub
inc
sbb
call
insb
and
adc
aam
aam
mov
xchg
jmp
xchg
push
and
cmp
nop
add
jecxz
rolb
ret
cmp
aam
test
lds
xchg
jecxz
imul
sbb
shld
xchg
lahf
sarl
sbb
and
push
push
testl
push
and
xchg
fs
ret
xchg
mov
ret
inc
gs
pop
or
or
add
test
cli
popa
mov
add
ret
test
pop
dec
pop
int3
pop
pop
faddl
bound
jne
mov
insl
push
xchg
lret
push
push
into
add
leave
push
xor
jbe
pop
aas
hlt
rorb
outsl
mov
test
xor
mov
mov
leave
pop
mov
shll
fisttps
ja
pop
jmp
pop
rcr
jmp
inc
mov
cmp
sbb
cwtl
dec
in
xor
jecxz
enter
sbb
std
mov
and
xchg
iret
scas
jo
repnz
popf
mov
mov
sbb
mov
xchg
test
out
shll
jo
jno
pop
or
pop
popf
out
out
stos
cs
jne
mov
movsb
push
push
icebp
mov
inc
sbb
sbb
adc
negb
dec
push
je
pop
push
or
and
mov
test
add
mov
pop
out
in
adc
lahf
rclb
mov
adc
sar
imul
mov
jo
lret
push
mov
and
or
jns
mov
mov
sbb
aad
hlt
or
pop
test
hlt
fiadds
out
setbe
mov
or
leave
mov
cs
pop
cmp
sub
outsb
add
adc
dec
or
outsb
std
xor
mov
adc
testl
push
fbld
ds
inc
test
fcomp
pop
in
sbb
adc
sbb
pop
ret
pop
pusha
xorb
dec
pop
add
cmp
or
mov
and
stos
mov
das
sti
rorl
ret
imul
out
mov
imull
rcll
cmp
inc
xor
fnstenv
inc
insb
jnp
mov
jle
inc
mov
sbb
loop
push
mov
xchg
mov
mov
jmp
arpl
jl
lret
ss
sbb
stos
pop
testb
jmp
mov
stc
mov
stos
xchg
fidivs
jns
and
ss
movsb
das
mov
and
xchg
adc
mov
inc
mov
mov
dec
test
sti
mov
fisttpl
dec
push
add
es
mov
jno
iret
xlat
jb
adc
enter
lcall
jnp
lret
sahf
add
pop
cmc
or
pop
fwait
add
dec
jae
lret
mov
pop
lods
inc
sub
dec
jnp
nop
cmc
daa
sub
or
lods
pop
cmp
pop
jp
pop
fstpt
jo
xor
mov
mov
test
sar
inc
inc
dec
js
cli
push
inc
pop
pop
sar
sti
mov
pop
test
jb
jge
add
shlb
cs
dec
pushf
imul
enter
xchg
pop
pop
fldenv
jnp
or
fdivrs
push
pusha
jbe
pop
divb
mov
push
loopne
jbe
inc
and
loopne
pushf
pop
rcrl
inc
fwait
scas
test
out
jnp
or
cltd
aas
pushf
xor
int3
in
rclb
imul
scas
in
ss
or
pop
in
testl
mov
add
add
into
xor
sub
dec
mov
inc
inc
aas
out
pop
mov
pop
adcb
xor
mov
stos
push
in
cwtl
loope
jne
sbb
lahf
sbb
lcall
fadd
andl
dec
ret
in
jl
cmpsl
push
push
test
inc
addr16
or
ficompl
push
xchg
pop
icebp
xchg
adc
lods
xchg
and
inc
inc
jns
mov
call
push
xchg
popa
mov
xor
mov
xchg
scas
mov
dec
aam
dec
sub
cmp
cs
std
xchg
mov
outsl
pop
sub
adc
xchg
jmp
pop
xchg
add
mov
jno
cmp
fcomps
ret
sar
cld
pop
adc
orb
repnz
cmp
dec
jl
test
inc
push
inc
sub
lret
jmp
jno
stos
push
xchg
int3
subl
jmp
dec
pop
pop
call
scas
or
cmpsl
mov
xchg
jbe
fwait
loopne
jnp
fimull
mov
pusha
cmpsb
push
and
jle
ljmp
inc
inc
stos
clc
adc
mov
mov
inc
fwait
dec
cmp
mov
mov
and
cltd
xchg
mov
popf
aaa
repz
movsl
cmpsb
leave
pop
hlt
sti
sub
mov
sbb
std
inc
repz
psadbw
cmpb
ss
xchg
js
xor
ds
lds
xor
fnstcw
icebp
cltd
mov
add
cmp
lret
lret
imul
cmc
xchg
ret
or
pop
cli
decb
xchg
inc
imul
pop
pop
movsl
fsub
adc
dec
xchg
cmp
cwtl
outsl
mov
std
pusha
cmp
push
sti
cmp
aas
or
addps
xor
stos
sub
stos
dec
dec
sub
fsub
and
adc
mov
xchg
xor
leave
stos
test
mov
cld
ds
outsl
cmp
aas
enter
xchg
popa
shl
xor
xbegin
andl
push
adc
push
mov
and
stc
std
cmc
pop
pop
xchg
inc
rolb
jle
xchg
aam
nop
cltd
int
pop
les
jae
mov
xor
lods
stc
je
xor
mov
lds
icebp
ret
pop
fdivrp
int
movsl
pop
inc
leave
stos
push
dec
pushf
sub
fs
xchg
and
inc
xchg
addr16
xor
mov
sbb
jle
in
aaa
std
fstps
fstp
rep
addr16
nop
xchg
xor
insl
push
ja
fstl
out
inc
rorb
pop
dec
in
in
dec
mov
bnd
adc
lea
js
fcomp
lds
addl
inc
into
cwtl
test
addl
call
pop
ret
pop
flds
push
xor
pop
hlt
inc
adc
xchg
and
jle
shrb
adc
js
dec
and
xchg
out
insb
xor
mull
dec
cmp
scas
pop
sub
fwait
mov
aad
push
fstps
movzbl
fcompl
sub
out
out
pop
and
xor
aas
les
jns
xchg
push
and
add
loope
mov
daa
or
mov
mov
lods
pop
in
pop
mov
stos
sbb
dec
xor
pop
insl
pavgb
jno
push
stos
jge
pop
inc
in
or
mov
mov
sub
xchg
cmp
sysenter
or
jl
push
stc
sub
in
add
cwtl
cld
push
xchg
push
sub
repnz
into
mov
daa
pop
repz
shll
lods
stc
aas
test
and
clc
and
scas
adc
xchg
cmp
dec
stos
rcr
inc
imul
xchg
mov
mov
int3
shll
daa
push
jge
push
add
je
in
dec
adcl
lahf
sub
mov
dec
mov
out
pop
sub
andb
xor
mov
divb
add
stos
mov
mov
sub
and
mov
dec
push
lea
jbe
cld
pop
push
ja
sub
std
mov
add
mov
inc
xchg
fmull
xchg
lret
adc
xor
jecxz
add
push
sbb
add
stos
adc
cwtl
mov
jne
push
inc
push
bound
jge
ret
test
pop
dec
data16
push
jno
aad
insl
jg
shrl
test
xor
mov
in
xor
lock
aad
xor
out
mov
insb
mov
push
mov
push
add
lahf
movsl
sub
insb
sbb
push
repz
or
pop
aam
movsl
ds
mov
es
ja
fxch
xlat
insl
cltd
push
or
add
cli
dec
aam
test
mov
mov
cltd
mov
shr
and
ror
sub
lahf
xor
andl
and
pop
aaa
add
fadd
outsl
arpl
mov
imul
and
sbb
mov
jo
xchg
push
or
push
adc
or
fadds
xchg
aam
popa
repnz
mov
lds
inc
mov
jecxz
adc
adc
dec
icebp
adc
out
jg
adc
jp
adc
ss
sahf
jle
outsb
jne
or
pop
shrl
dec
fisttps
pop
push
adc
addr16
sbb
nop
lods
cltd
jg
cli
dec
xchg
imul
insb
shlb
faddl
and
in
push
out
cmp
movsl
jg
stos
les
out
push
sub
jo
fidivs
or
sub
gs
idivl
push
aam
outsl
pop
inc
sub
cmp
and
jg
fwait
pop
mov
cmpsl
in
lods
mov
cmp
loop
shl
sub
mov
mov
cli
fsubrl
adc
xchg
xor
fisttpll
dec
push
lods
or
fcmovu
push
push
repz
jl
and
jg
add
push
or
out
cwtl
jg
ficoms
jo
pop
call
idivl
pop
xchg
xchg
mov
popa
cmp
jae
ja
push
shlb
cmp
pop
add
mov
or
lds
jo
lcall
mov
and
inc
sbb
in
ret
fcomps
jbe
popf
jg
dec
jecxz
jmp
les
aad
dec
es
mov
xor
aad
pusha
mov
dec
shlb
je
mov
stc
dec
mov
insl
sbb
push
iret
inc
aam
pop
sahf
inc
jae
mov
and
adc
mov
xchg
inc
stc
jmp
dec
out
inc
sbb
mov
xor
int
ficoms
or
push
adc
jno
mov
jl
rol
data16
movsl
out
out
popl
movsb
xchg
jle
hlt
xor
jmp
jl
cmp
xor
popf
test
inc
xor
loope
sub
lret
push
jns
movsl
mov
cmp
imul
fnstsw
xor
push
xlat
aad
xchg
loopne
ljmp
leave
popf
push
adc
fnstsw
sub
push
out
pop
test
cmp
xchg
repnz
out
imul
jg
mov
pop
mov
cwtl
xor
int3
pop
cmp
fstps
push
out
mov
sahf
loopne
out
xchg
js
push
fwait
dec
dec
mov
mov
mov
inc
or
fldl
inc
adc
xchg
out
pop
xchg
pop
pop
and
and
add
mov
ret
movsb
in
pop
dec
or
sti
loop
adc
or
sarb
pusha
cmp
xchg
adc
mov
popa
fsubrl
and
test
push
ja
leave
xor
xor
dec
ret
cmpsb
fcmovne
mov
and
inc
sub
pushl
popf
xchg
popf
mov
sti
jb
mov
enter
or
mov
lahf
test
outsb
push
xchg
repnz
rorl
jae
fucom
fildl
popf
inc
test
repnz
sub
or
cmp
sbb
xor
sub
hlt
or
and
icebp
fmul
mov
sbb
mov
or
ficomps
jb
lahf
pop
movsb
lds
sti
inc
or
mov
es
mov
ds
pop
sbb
stc
daa
arpl
sub
divb
push
shlb
mov
xor
dec
jns
rclb
test
je
and
pop
mov
jnp
rorb
jl
pop
push
in
lods
aas
pop
add
insl
pushf
repz
lret
in
cmp
inc
in
loopne
iret
in
int3
loopne
fnsetpm(287
lcall
mov
adc
enter
mov
ss
idivl
minps
ret
dec
add
jl
xor
rclb
pop
or
add
outsl
cmp
mov
stos
sbb
stos
pushf
push
scas
or
scas
jecxz
fistpll
dec
fdivr
sbb
pop
imul
jb
sar
sarl
sahf
pop
jno
pop
mov
popf
push
push
mov
inc
popa
stos
cvtps2pd
idivl
push
dec
jbe
jnp,pn
mov
jb
jp
xchg
stos
xor
push
dec
arpl
jl
in
mov
push
int3
loope
jno
imul
mov
mov
mov
push
sbbb
loopne
add
sub
push
jns
adc
mov
and
jg
lret
jl
xor
pop
sub
cltd
or
xchg
xor
out
fldt
xor
in
push
adc
push
pushf
std
add
inc
loope
pop
pop
imul
jp
rcrl
mov
aas
test
loope
inc
mov
push
jp
jnp
lcall
movsl
dec
fsubr
lea
fcoml
rolb
and
mov
xchg
mov
jne
and
inc
andb
xchg
mov
out
in
jnp
jp
and
push
sbb
clc
cmp
inc
cmp
mov
and
inc
lods
push
das
bound
xchg
lods
and
and
jb
out
cmp
xor
pop
inc
nop
js
push
xor
jae
push
mov
aas
popf
shll
in
jl
adc
xchg
dec
add
push
lahf
mov
jle
xchg
mov
sub
cmpb
setae
adc
scas
mov
jb
mov
es
mov
mov
int3
fiaddl
mov
jns
js
mov
cmp
mov
lods
add
inc
fimull
int
rcr
cmp
cld
jb
sbb
xchg
lods
jp
xor
jns
mov
pop
jp
sub
push
mov
shlb
push
imul
sarl
or
dec
loopne
repz
mov
cwtl
mov
in
jae
scas
push
insb
and
adc
loope
lods
fstpt
sbb
sbb
adc
outsb
ja
sub
sbb
cmp
scas
push
sub
and
mov
xchg
pop
jb
psubusw
sbb
or
mov
xadd
mov
mov
rcrb
push
push
mov
adc
xchg
jle
jns
jmp
clc
cmpsl
lcall
fcmovnu
sub
movsb
in
xorb
push
fidivrs
addb
ljmp
sbb
pop
out
insl
sbb
call
popa
add
adc
pop
rorl
icebp
stos
notl
push
popa
adc
popa
sbb
mov
sub
push
int3
ljmp
dec
mov
jp
inc
inc
ja
ja
cmpsl
fcmovbe
mov
and
stos
jno
xchg
shll
mov
out
xor
sub
xchg
cmp
dec
je
jecxz
inc
dec
into
jle
xor
dec
sub
sub
cmpsl
xor
xchg
inc
pop
pop
dec
lods
lret
mov
jo
mov
cmp
pop
lods
push
push
fs
enter
jbe
push
pop
stos
pop
dec
popf
cltd
arpl
push
shr
adc
xchg
sbb
mov
push
popf
adc
push
icebp
cmp
cld
push
cmp
iret
cmp
jae
loopne
xor
pop
ljmp
loope
setg
aaa
movsl
or
out
xchg
add
frstor
bswap
aas
mull
mov
mov
xchg
bound
inc
or
pop
ja
rep
pop
push
sub
rorb
leave
loop
in
mov
sub
xchg
adc
leave
mov
cld
mov
mov
mov
jg
push
call
cli
ja
cmpsl
es
dec
add
std
out
lahf
loop
mov
push
imulb
pop
sbb
inc
insb
adc
mov
lret
sbb
mov
adc
pop
cwtl
mov
movsb
scas
push
inc
adc
mov
inc
push
mov
push
fucomp
dec
sub
stos
loope
clc
icebp
lret
or
inc
mov
adc
loop
pop
xchg
sub
in
addl
popf
enter
sub
mov
sti
pop
xchg
jle
push
and
mov
popl
pop
daa
pop
xchg
clc
jnp
std
lods
xlat
lods
jge
push
nop
add
decb
mov
testb
dec
mov
add
sbb
aaa
sub
cmp
push
adc
cmp
ss
lods
pusha
jp
test
movsl
pop
cmpsl
cwtl
shrb
cli
and
or
stos
mov
mov
daa
aam
fwait
movsl
divps
pop
dec
stos
outsl
movsb
daa
jbe
idivl
mov
inc
js
cmp
pop
add
addr16
outsb
jmp
ret
and
sub
pop
clc
jp
sbb
js
ss
xor
sbb
push
jg
in
cmpsl
mov
sti
adc
rorl
cmp
and
jnp
aam
clc
mov
fbstp
add
add
jl
ja
outsl
icebp
or
inc
in
mov
jns
lahf
xor
loopne
fistpll
mov
pop
jge
adc
cmp
repnz
mov
inc
xlat
or
sbb
push
cmpsb
jns
inc
pushf
ja
fldt
adc
scas
mov
inc
popa
popa
and
mov
lahf
adc
jle
mov
cld
inc
cmpsl
call
mov
mov
in
add
fnsetpm(287
sbb
adc
lcall
in
sahf
mov
pop
aas
adc
aad
add
js
mov
testb
outsl
jle
imul
push
push
int
cmp
data16
mov
enter
cld
lods
push
imulb
les
inc
and
cld
xor
xchg
mov
test
pavgb
rcrb
mov
addr16
aad
out
jge,pt
adc
adc
aad
pop
les
or
leave
lahf
stos
cmp
mov
leave
ja
test
mov
push
sahf
pusha
lret
arpl
push
cmp
push
arpl
or
sahf
mov
jb
mov
adc
cmovs
aaa
in
mov
jle
daa
sbb
jo
jmp
insl
mov
pop
jnp
sub
xorl
jg
mov
sar
int
inc
sub
dec
sahf
xor
xlat
lcall
cmp
repz
inc
push
jmp
pop
scas
jnp
stos
pop
adc
or
dec
inc
jg
pop
outsb
add
xor
push
mov
sbb
das
dec
mov
clc
packuswb
test
xchg
repnz
outsl
pop
jbe
and
sti
clc
imul
cld
jg
jns
cmpsb
add
xor
pusha
inc
cmp
insb
insl
shll
dec
sbb
xchg
jg
adc
pop
filds
push
push
ret
in
push
stos
mov
adc
sub
push
call
xor
cmpsl
xchg
fsts
sahf
cli
pusha
mov
outsb
jmp
imul
adc
rorb
scas
pop
xor
dec
jo
pusha
movsb
xchg
cld
icebp
push
movsl
mulb
in
push
lret
or
sub
sbb
sbb
mov
shlb
dec
jae
push
pop
mov
or
add
fiaddl
imul
popf
test
pop
adc
xor
dec
jmp
cmp
mov
int3
adc
xor
dec
nop
mov
mov
nop
js
daa
push
cld
std
int3
mov
mov
or
out
mov
out
popa
push
mov
rcll
stos
pop
jmp
and
jge
and
adc
jno
add
mov
adc
pop
subb
cld
sub
xor
ficoml
push
aaa
dec
lods
aas
sub
ret
je
push
jne
and
or
or
pop
aam
cwtl
loopne
dec
mov
or
int
stos
pop
mov
push
pop
cs
arpl
ljmp
stos
icebp
int3
aaa
jns
cmpsb
mov
stos
push
icebp
xor
imul
idivb
std
loop
sbb
les
stos
jns
and
pop
pop
push
add
cmp
imul
cmpl
cmp
outsl
push
xchg
rcll
aas
icebp
or
cmp
or
imul
pop
push
add
xlat
add
cmp
and
dec
enter
push
scas
jmp
sbb
mov
jmp
lea
dec
mov
xlat
mov
xchg
stos
cmpsl
js
push
sub
jo
pop
fstps
imul
or
and
inc
cmp
cmp
rcr
sti
cmp
lahf
int
ss
ds
lcall
push
cmp
cli
pop
fdivrs
in
xor
mov
fildl
xor
sub
add
push
push
and
adc
inc
popf
xlat
out
dec
lret
sbb
lcall
aad
push
inc
pop
adc
sub
mov
push
dec
push
add
pop
mov
enter
sbb
adc
adc
inc
sub
add
in
push
mov
add
sti
stos
movsl
icebp
push
xchg
mov
xchg
in
into
mov
adc
int3
pushf
fld
push
fsts
ficomps
pop
or
cmp
jnp,pt
lods
andl
xor
dec
stos
pop
test
gs
in
sar
and
or
xchg
mov
mov
pop
movsl
cmp
or
adc
popa
xor
inc
loopne
push
sbb
pop
mov
stos
xor
mov
pop
dec
daa
xchg
int
jae
jmp
les
push
xchg
xchg
push
push
jne
and
nop
or
daa
xchg
sbb
cmp
xchg
fs
push
call
into
gs
dec
adc
stos
add
test
push
in
xor
cmpsl
inc
out
shl
push
fwait
add
mov
imul
scas
mov
dec
orb
out
dec
inc
ficomps
xchg
pop
in
pop
stos
xchg
hlt
sbb
jp
in
out
xor
fistpl
jns
sub
inc
xor
cmp
mov
outsb
xchg
adc
xchg
insl
aam
rcrb
push
ds
lahf
xor
data16
lds
test
in
cmp
sub
jb
bound
and
cmp
int
clc
into
push
jne
scas
cs
jecxz
nop
jge
inc
fcompl
mov
cld
clc
xor
aam
std
ja
subb
popa
and
pop
scas
je
cli
ss
push
gs
xchg
add
mov
xor
fdivrl
icebp
lods
ljmp
ljmp
dec
loope
push
push
mov
cmp
dec
adcb
cs
cmp
push
stos
out
inc
lods
dec
mov
lock
int
pop
xchg
stc
mov
cmp
andl
loop
mov
mov
mov
fwait
xorb
mov
xor
adc
dec
cs
sbb
pop
jo
into
jmp
sahf
std
dec
mov
push
pop
std
stos
cmova
mov
pop
sub
jns
lock
cmp
ret
fwait
xor
test
mov
jge
mov
cmpsb
and
push
fmuls
inc
scas
notb
pop
out
mov
cld
test
pop
cmp
repnz
cld
test
clc
and
lret
aam
xor
mov
xlat
lea
adc
add
push
xchg
stc
sub
scas
nop
addr16
lock
das
ja
and
or
jp
mov
pop
movl
hlt
popa
jns
push
lea
mov
bound
xor
push
outsl
sahf
fwait
dec
imul
and
std
cmc
mov
sub
cmp
add
mov
push
call
fisttps
push
inc
fidivrs
jmp
stos
adc
jae
rcl
pop
enter
lods
std
dec
sub
les
dec
idivb
aas
cmp
aas
fs
test
mov
in
mov
ja
je
shr
mov
shrl
push
aad
out
xchg
fisubrs
imul
add
xor
cmp
in
bound
out
sbbl
dec
sbb
data16
add
into
adc
pushf
mov
sahf
stc
jle
xchg
adc
pop
sbb
and
incl
iret
xchg
push
or
xor
cmp
aaa
cmp
mov
mov
sub
mov
bound
addl
imul
cmp
stc
jne
int
orl
add
sub
fldt
out
adc
jle
jl
cmc
sub
sbb
je
mov
or
mov
mov
pusha
or
xor
test
dec
sub
mov
push
out
leave
int3
daa
hlt
cmp
std
pop
out
bound
bound
daa
bound
mov
adc
dec
jp
add
push
pop
ret
imull
and
xchg
jge
xchg
js
sbb
popf
nop
mov
cmpsb
push
roll
out
xor
fcmovu
rcl
jl
fisubl
add
test
shrb
fwait
xchg
test
sbb
sahf
dec
xor
mov
mov
ljmp
cmp
mov
stc
xor
stos
mov
mov
pop
ret
idivl
idiv
lds
int3
test
push
jp
cmpsb
adc
jge
fidivrl
cmpl
out
test
out
mov
cmp
cli
mov
mov
add
movsl
jp
imul
dec
mov
mov
and
cltd
jo
jne
dec
mov
dec
cmpsl
loop
cltd
or
out
call
sub
call
in
aaa
inc
stc
shlb
in
bound
shll
stos
fistps
pop
mov
pop
inc
jge
sbb
xchg
inc
pop
adc
mov
fdivrp
lret
pop
cmp
pushf
movsb
mov
int
pop
pop
cwtl
cmp
int3
mov
mov
aad
xor
xor
lret
jbe
xlat
xchg
je
pop
jg
jg
xor
sbbb
jmp
mov
and
movsb
mov
mov
test
sarb
dec
xor
xchg
pop
movsl
jl
jae
movsl
loop
in
jp
ret
test
dec
mov
iret
pop
repz
aas
xor
jmp
lret
mov
insl
jecxz
aas
imul
outsl
out
inc
or
out
or
fcomp
es
sbb
push
mov
or
aaa
popf
leave
sahf
jne
ret
pop
sbb
es
daa
or
les
loop
push
imul
ret
jmp
cmp
fisubs
mov
test
clc
mov
int3
sub
lret
movsb
dec
fdivrs
inc
orb
mov
ljmp
xchg
aad
jbe
mov
rorb
mov
jns
inc
shrl
fsubl
or
movsb
jp
mov
dec
sbb
cmp
or
inc
sbb
and
sbb
stc
adc
add
sbb
fstps
fnsave
les
or
orl
or
stos
aaa
mov
loop
push
jnp
cld
aas
test
outsl
test
loopne
das
jne
mov
jno
jge
cwtl
push
pushf
int3
dec
shlb
inc
pop
pop
xchg
or
fistpll
sbb
add
mov
sbbl
fnsave
adc
fidivrs
push
and
and
lcall
sub
test
loop
sub
push
sub
rcrb
in
mov
leave
std
fistl
pusha
into
jecxz
push
sbb
fwait
mov
sbb
pop
sbb
push
dec
lea
ja
pop
in
mov
jb
pop
jmp
dec
ljmp
pushf
or
jle
inc
clc
ficoms
test
lahf
scas
or
dec
jle
xor
mov
mov
out
add
insb
jae
loope
shr
loopne
cmp
sbb
movb
xor
inc
mov
imul
movsl
dec
test
adc
sahf
int
insl
dec
jge
add
xchg
push
les
sub
mov
inc
mov
cmp
jo
popf
outsb
inc
fwait
or
repnz
jmp
icebp
sbb
sti
xor
pop
and
test
mov
js
lea
movsb
xchg
and
jg
mov
pop
dec
je
sub
js
mov
jno
imulb
inc
push
shl
mov
out
lret
pop
mov
lds
push
mov
mov
jge
xor
repnz
ljmp
lcall
and
or
push
mov
and
lea
das
push
inc
and
mov
jmp
sbb
or
inc
sub
ljmp
stc
loope
xchg
imul
xor
jle
fdivrs
ljmp
faddp
insl
push
repnz
lea
xchg
shlb
add
out
fnstenv
xchg
movsb
aas
arpl
loopne
jl
data16
nop
dec
jbe
dec
loope
loopne
lret
rcl
out
push
movsb
and
dec
lock
pop
negl
adc
and
mov
push
enter
add
push
mov
out
push
pop
dec
inc
jo
lods
or
insb
js
sub
fdivl
mov
repnz
aam
fmull
inc
mov
insb
pop
pop
mov
fs
loopne
inc
and
jo
jp
je
into
inc
jg
mov
xchg
mov
inc
sbb
sub
in
imul
daa
and
imul
xchg
push
push
jg
mov
sub
and
ljmp
or
stos
lods
lods
jmp
ret
aad
mov
loop
scas
inc
push
mov
adcl
xchg
addr16
add
push
inc
and
jno
mov
pushf
and
xchg
mov
pop
inc
xor
scas
push
aad
std
lock
cmpsb
adc
jg
stos
mov
push
or
pop
add
mov
ljmp
and
pop
loop
xor
add
repnz
cmpsl
out
and
in
rcrl
subl
cmp
xor
in
push
mov
iret
cs
jg
es
or
inc
insl
call
sbb
sub
outsl
inc
dec
ret
outsl
sub
jecxz
and
inc
lret
ret
pushf
cmp
cmp
ss
pop
mov
xchg
int
mov
pop
sub
popl
and
sub
mov
mov
lcall
std
addl
mov
cmp
cs
lods
jnp
xchg
rorl
adc
and
in
outsl
stos
sbbl
jle
or
mov
xor
leave
push
add
leave
inc
cltd
enter
mov
aam
mov
adc
out
lds
dec
jno
jl
pop
pushf
loopne
push
pop
pushf
and
inc
sti
push
jge
mov
and
add
rcrl
sub
or
mov
jl
jecxz
xor
in
loopne
aas
mov
enter
cmc
in
cmp
nop
jmp
or
and
out
mov
aam
push
pop
lret
push
inc
or
inc
cmp
push
ss
mov
pop
es
pop
cs
mov
test
jmp
push
push
es
outsl
icebp
push
mov
dec
nop
cmp
and
in
inc
cs
cmp
fsubrl
aam
loop
int
mov
mov
out
hlt
sbb
xchg
xor
loope
push
fs
jne
and
outsb
jp
fs
cmpsl
dec
dec
pop
ret
push
in
sbb
popa
push
aam
xor
sahf
add
push
dec
adc
pop
ljmp
xor
push
sbb
inc
add
jbe
dec
lods
int3
dec
dec
in
clc
sarl
data16
pop
dec
mov
or
loopne
or
sub
xchg
in
sub
sbb
lahf
subb
enter
std
or
daa
and
cli
inc
ret
jmp
xchg
push
notl
xlat
outsb
xchg
sahf
out
and
bound
push
sbb
xlat
xchg
pop
aad
xchg
je
jmp
push
and
cmp
out
adc
xchg
int3
hlt
sub
inc
adcl
push
sbb
lcall
iret
mov
sti
pop
sbbb
jecxz
mov
xchg
push
arpl
xor
lret
insb
xchg
arpl
xor
adc
stos
gs
push
xchg
xlat
lret
stos
jge
rcrl
nop
imul
sub
push
ret
mov
ss
push
and
out
pop
inc
sub
rcrl
dec
leave
out
aas
mov
pop
js
fistl
stos
or
pushf
mov
adc
cwtl
roll
and
lcall
scas
popa
sub
dec
adc
jl
mov
fsubr
jecxz
fildl
into
jb
pop
xchg
mov
mov
push
adc
popf
test
cmp
mov
fcoml
call
adc
les
ja
cmpsb
fucomp
mov
lcall
out
inc
xchg
iret
mov
push
push
test
cmp
xor
pop
lret
out
fiadds
jge
fs
jbe
pop
sbb
jp
pop
fwait
jg
push
add
popf
inc
add
cmpsb
adc
rclb
cmp
mov
sbb
add
jne
add
jl
stc
test
xchg
jbe
addr16
sar
imul
nop
xchg
lahf
ror
cmpps
push
xor
sti
aas
ret
test
add
shl
cmp
cmp
lahf
push
je
js
mov
in
and
xlat
pop
js
ja
sti
xchg
into
addr16
andb
ljmp
xchg
pushf
xchg
pop
lret
mov
es
mov
jg
mov
mov
test
aam
inc
or
lahf
out
jns
push
inc
adcl
sbb
adc
adc
pop
push
mov
push
ficoml
dec
mov
int
inc
rolb
cmp
jo
jmp
pop
push
mov
xchg
mov
push
stos
mov
push
mov
fldcw
push
rcrb
inc
dec
sbb
out
ljmp
js
imul
mov
rep
mov
sub
and
pusha
cmpsb
js
fs
push
inc
adc
inc
scas
loopne
inc
sbb
mov
add
xor
imul
das
sub
outsl
mov
ja
repz
lret
jecxz
jae
mov
int3
lret
pop
sti
sbb
xchg
dec
inc
and
pop
movsb
sbb
leave
or
js
adc
adc
repnz
cli
or
mov
jbe
hlt
xorl
dec
adc
mov
les
mov
or
dec
dec
xchg
pop
outsl
rcrb
inc
xchg
mov
hlt
cs
jae
lods
scas
sub
dec
imul
aad
add
sbb
pop
insl
rorb
scas
insb
xchg
pop
xor
mov
adc
xchg
dec
mov
lea
push
jl
jbe
call
pop
divb
push
sbb
inc
pop
jnp
pop
pop
jbe
imul
mov
fists
push
pop
mov
clc
cli
popa
sub
jns
adc
xchg
adc
push
or
arpl
mov
adc
xor
mov
inc
inc
loope
and
xchg
or
pop
aaa
inc
mov
andl
push
mov
arpl
cltd
pop
inc
push
mov
inc
cwtl
icebp
dec
jmp
call
push
add
inc
and
in
movsl
mov
push
jle
aaa
pop
mov
insl
or
jnp
lcall
xchg
mov
clc
dec
fldl
shll
mov
icebp
jbe
xchg
imul
mov
sbb
lock
xchg
out
lods
into
ds
push
push
sub
sbb
mov
jns
mov
inc
addl
mov
rcll
fs
in
je
mov
frstor
pop
and
outsl
mov
in
sahf
int
push
mov
dec
js
mov
mov
imul
xor
mov
lea
in
out
jbe
xlat
adc
xchg
sub
ja
cmpsb
pop
push
inc
mov
mov
in
addr16
fildl
imul
addl
push
mov
mov
rcr
jno
bound
mov
sub
pop
add
sbb
out
cmp
repnz
mov
outsl
jne
add
push
sbb
popl
or
sub
stc
mov
popa
dec
jp
mov
add
xchg
jp
jno
inc
lea
movsl
xchg
push
lret
rcrl
loop
adc
loope
insb
sub
test
clc
mov
hlt
dec
arpl
dec
pop
lcall
push
jae
add
pop
mov
out
sub
inc
addb
push
punpckhwd
add
jmp
xchg
mov
mov
mov
add
lret
scas
int
test
jecxz
pop
jbe
rorl
add
fnstenv
push
notl
or
nop
pusha
mov
cmpsb
jmp
gs
popf
mov
mov
or
adc
daa
cmc
jecxz
inc
addr16
shr
nop
mov
inc
andb
mov
push
mov
jecxz
scas
dec
bound
sahf
pop
or
lahf
xchg
sbbb
xchg
lds
xor
mov
or
aad
push
xchg
sub
and
shrl
mov
dec
in
imul
mov
jne
frstor
mov
mov
sbb
jmp
xchg
idivb
push
adcb
xchg
rcll
pop
push
movsb
fs
jge
xchg
int3
inc
push
jmp
push
cmpsb
daa
jle
popf
push
jns
mov
jne
add
jnp
jo
jmp
stos
cmpsl
adc
testl
stos
icebp
add
mov
hlt
or
xchg
hlt
pop
add
xchg
jmp
loop
push
jmp
mov
xchg
lcall
inc
leave
sahf
jmp
mov
mov
push
mov
dec
into
daa
jg
stc
nop
pop
leave
insb
cmp
cmp
sahf
pop
mov
and
data16
dec
inc
arpl
repz
jae
cmpsb
in
ljmp
cltd
inc
dec
cs
insl
dec
sbb
and
jbe
lcall
leave
repz
in
push
jo
add
adc
jb
xorb
mov
xchg
shl
scas
imull
sahf
adc
or
cmpw
sbb
or
inc
ljmp
xor
fnsave
movsb
arpl
adcl
push
ljmp
adc
inc
pop
push
add
adc
cmp
xor
adc
xor
hlt
fs
and
dec
mov
mov
lcall
sbb
test
inc
mov
pop
sub
rcrl
sub
jecxz
cmp
lret
jo
data16
mov
rcr
jl
inc
pop
or
imul
ja
repz
dec
mov
push
bound
fidivrl
and
nop
sbb
cwtl
mov
aam
fldcw
int
lods
je
inc
stos
ss
add
dec
xor
call
leave
sub
push
cs
push
xor
in
dec
test
cmp
ficoms
lret
mov
outsl
test
aaa
pop
divl
jae
test
in
adc
lea
dec
lret
or
pop
adc
jb
movsl
sbbb
fidivrl
hlt
xlat
fnstenv
stos
out
dec
ds
fidivrl
inc
loope
outsl
mov
xchg
fisubs
or
cmp
pop
lret
xor
scas
jle
sbb
sbb
iret
jle
test
mov
mov
inc
lods
inc
dec
inc
xchg
xor
sub
jmp
sub
mov
sub
mov
movb
cli
cmp
sbb
pop
fidivs
adc
fwait
arpl
pop
scas
or
int3
push
fwait
das
pop
add
hlt
lock
push
jbe
mov
dec
mov
sbb
push
push
adc
iret
mov
sahf
cmp
insl
add
scas
jae
push
push
lret
mov
dec
xchg
je
loop
mov
es
mov
test
bound
lea
xor
ficoms
xor
mov
inc
dec
outsl
les
scas
shll
sub
xchg
and
cmp
lds
inc
mov
in
xchg
lods
xchg
pop
shll
cmp
xor
shrb
xorb
fcoms
into
stos
add
mov
dec
sahf
mov
xchg
jle
add
xchg
push
cs
inc
pop
dec
call
jnp
jl
aas
fs
dec
sub
cmp
in
stos
push
mov
push
in
cli
xchg
cli
loope
mov
lods
shrl
jle
push
scas
push
or
push
fs
adc
ss
cs
jg
aam
push
push
jne
push
mov
cmp
js
sub
xchg
jg
inc
insb
jmp
stc
sub
mov
aam
pop
push
andl
or
iret
movsb
jl
xchg
leave
dec
adc
stos
and
push
xor
scas
xchg
popa
stos
in
loope
movsl
and
bound
std
addb
loopne
ljmp
jns
xchg
in
adc
lea
loopne
ss
daa
pop
or
repz
jecxz
adc
mov
in
cmp
adc
cmp
rorl
das
mov
dec
stos
stos
and
inc
and
mov
push
xor
enter
mov
inc
hlt
xor
sbb
cmp
andb
lods
aad
sarl
dec
xor
lods
sbb
inc
push
pusha
jne
xchg
fisubrl
loopne
enter
in
lahf
dec
call
dec
out
dec
ss
pop
cmp
std
pop
pop
dec
pop
mov
rcl
fstpt
or
popa
lock
dec
cmp
sub
daa
or
mov
jl
daa
out
imul
fsubrp
mov
les
fcomi
add
xor
out
rclb
xchg
movsb
pop
or
adc
dec
scas
icebp
push
and
jmp
push
aaa
mov
roll
mov
adc
ds
ds
jae
sbb
sub
insb
jge
rcpps
scas
sub
mov
push
ffree
and
shrl
and
js
stc
or
cmp
and
imulb
in
mov
mov
aas
jo
or
dec
cmp
inc
jmp
xchg
mov
mov
shlb
aam
and
cltd
fildll
fisttps
fnsave
cld
bound
setns
push
dec
and
xor
out
adc
mov
repz
sahf
ja
popf
pushl
dec
xchg
lods
jmp
mov
loope
in
lea
jnp
inc
and
mov
adc
gs
sbb
aad
and
aad
pusha
cld
jne
movsl
repz
fstl
add
push
cmp
js
mov
rcrl
dec
iret
daa
movsl
out
adc
mov
jg
mov
test
pop
inc
mov
inc
push
xchg
and
leave
lahf
jg
sbb
mulb
pop
pop
push
test
mov
clc
scas
cmp
rorl
xchg
fdivrs
gs
adc
mov
xor
fdiv
adc
add
lods
cmp
scas
fsub
leave
push
mov
fistl
out
jg
inc
loope
pusha
mov
adc
stos
scas
mov
sbb
enter
pop
lea
pop
mov
mov
cmp
rep
xchg
cs
dec
or
fildll
push
mov
xchg
mov
movsb
add
or
ds
lret
out
sub
add
call
adc
bound
jl
xlat
mov
mov
out
and
xchg
dec
mov
mov
mov
loopne
lcall
add
mov
push
mov
stos
ror
mov
add
mov
and
mov
xor
push
mov
jae
push
cltd
mov
dec
cld
mov
xor
rorl
mov
jmp
ss
dec
dec
negl
jno
sub
int
lods
pop
cmp
mov
mov
mov
adc
and
push
scas
pop
loope
mov
outsl
lods
and
add
add
in
jae
inc
stos
xchg
call
lds
jns
outsl
mov
lea
sti
push
out
pop
xchg
xlat
shlb
test
pop
xchg
popa
add
xor
inc
sub
ljmp
icebp
testb
jbe
jno
jnp
lds
popa
mov
jb
xchg
adc
dec
stc
ret
cmc
mov
jnp
inc
cmp
pop
lcall
test
mov
inc
pop
mov
test
shl
and
xor
inc
outsl
xchg
jg
lcall
push
out
mov
pop
or
mov
sub
or
and
imul
dec
jmp
aad
push
ljmp
jle
inc
sbb
mov
dec
adc
cmpl
cmc
out
ss
pop
je
inc
pushf
rorl
mov
jns
insb
daa
mov
outsl
int3
pop
push
adc
aam
sbb
mov
out
jecxz
mov
insl
mov
movsl
push
add
xchg
loop
mov
or
inc
jbe
lock
in
push
push
mov
adc
repz
jmp
jno
xchg
jmp
sub
pop
fldcw
cmpsl
pop
pop
jb
jp
int
lods
pushf
dec
loopne
call
adc
xor
fdivl
ja
stos
sub
cmp
push
cmp
bound
or
pop
int
popa
sub
xor
out
out
sub
jle
dec
clc
sbb
jl
push
cmc
cmp
xchg
inc
cmp
sub
sbb
xchg
ss
xchg
dec
xor
nop
icebp
out
imul
add
jp
shl
in
pop
inc
repz
sahf
filds
mov
inc
sti
sbb
sub
mov
idivb
cmp
mov
cmc
je
push
cmc
mov
pushf
das
dec
mov
repz
xchg
jno
ret
mov
test
daa
loopne
or
push
daa
inc
or
ret
xchg
push
mov
mov
pop
divb
notb
loop
pop
sbb
push
mov
imul
popa
rcrb
pop
in
sub
mov
popf
or
dec
xchg
pop
pushf
sub
push
int3
cmpsl
lahf
lds
shrb
adc
inc
inc
inc
xor
adc
jle
and
xchg
and
sub
and
xchg
adcl
jecxz
or
into
je
xchg
loop
jns
xchg
int
mov
clc
cli
cld
push
ret
enter
in
inc
ret
dec
out
push
decb
push
pop
sbb
dec
sahf
test
xchg
xchg
ficoml
into
mov
fmul
inc
jne
adc
mov
jae
xchg
outsl
ret
and
pop
sub
jae
std
insb
lods
outsb
out
add
sub
jp
mov
ret
pop
addr16
or
push
rcll
test
ds
sbb
dec
jbe
loopne
xchg
scas
in
test
cmp
dec
les
xor
xchg
jmp
cmp
sbb
sbb
popf
push
idivl
test
jmp
xor
xchg
adcl
mov
ficomps
xchg
cwtl
mov
cmc
inc
insl
rclb
das
xor
shl
dec
insb
mov
mov
xchg
hlt
mov
push
mov
ret
adc
cs
bound
pop
insl
push
jge
pop
pop
inc
lock
add
fs
mov
and
mov
dec
mov
dec
cli
jnp
out
and
cltd
sub
push
jle
inc
into
fdivr
xor
mov
sarb
or
orl
mov
imul
add
ds
cmpl
fnstenv
fstps
pop
mov
aad
sub
add
fcomps
mov
fmulp
scas
and
test
data16
je
mov
push
mov
jae
xor
sub
or
xor
dec
xor
mov
jecxz
icebp
mov
pop
mov
mov
or
push
nop
lock
push
scas
sbb
insb
sbb
fmul
test
jp
fidivrl
and
pushw
sbbl
ret
sbb
jmp
scas
fnsave
stos
jecxz
cwtl
lcall
scas
sub
rcl
pop
mov
xor
cld
pop
popf
mov
ja
lahf
mov
sub
mov
pop
outsb
add
cmp
daa
das
pop
lret
cltd
adcl
mov
outsb
or
fsubrl
int3
outsb
sub
in
xrelease
jno
je
adc
jge
adc
ret
adc
ja
jnp
xchg
test
adc
pushf
imul
and
push
inc
dec
dec
ljmp
fsubrl
and
mov
or
into
inc
dec
mov
dec
jge
mov
mov
and
dec
add
cmp
mov
adc
xor
pop
je
add
and
or
sbbb
std
rcll
inc
loop
enter
or
or
jbe
icebp
xor
les
sbb
dec
dec
cmp
or
jnp
sub
hlt
push
mov
dec
in
imul
or
cmpsb
inc
fsubl
mov
jg
fists
in
cmp
inc
pop
add
push
roll
mov
sarl
lret
arpl
jne
inc
xchg
mov
cmp
ret
mov
out
mov
push
and
sub
pop
push
xor
pop
sti
enter
dec
fcmove
stos
pop
jbe
imul
adc
mov
cmc
ret
dec
jecxz
gs
sbb
insl
jge
mov
ljmp
sub
mov
aaa
pop
pop
cmp
dec
push
in
insl
shll
push
sub
stos
nop
imul
lret
dec
push
cmp
inc
out
ds
insl
push
jl
pop
aas
adc
cmp
insl
adc
pop
ret
daa
pushf
aam
test
xchg
or
adc
orl
cmpl
push
dec
pusha
jae
stos
mov
inc
and
sahf
xchg
daa
inc
aad
or
sub
push
dec
insl
xor
mov
xor
jecxz
mov
push
andb
cmp
fisubrs
xchg
into
sbb
push
fimull
out
mov
dec
push
mov
adc
or
dec
int
testl
cltd
inc
mov
jae
and
xchg
push
xlat
shll
mov
lahf
enter
in
jne
sub
xor
and
popf
pop
fiaddl
mov
arpl
ds
adc
mov
in
iret
shr
test
mov
xor
mov
jle
idivl
or
push
and
push
negb
rol
pop
mov
push
push
jne
xchg
adc
push
mov
movsl
fildl
int3
xor
je
jo
pop
aas
push
xor
jl
dec
je
fmull
pop
inc
mov
jne
mov
in
xlat
in
sbb
xchg
ljmp
cwtl
adc
sti
or
mov
ret
test
push
cli
jno
repz
das
pop
pusha
sbbb
movsb
popa
pop
adc
push
mov
push
out
fwait
test
xlat
xchg
pop
mov
cmp
lret
mul
push
pop
jmp
outsl
shrl
xor
in
mov
sbb
push
lret
bound
sub
cmp
out
filds
ds
push
aam
dec
imul
int
and
les
or
sub
and
leave
data16
jg,pt
cld
aad
fildl
mov
or
adc
pop
push
mov
sub
pusha
pop
cmp
jne
stos
jae
loop
sbb
or
and
mov
js
shll
jl
mov
addr16
out
pop
imul
fimuls
push
aad
or
bswap
mov
les
pop
cmp
jg,pt
or
aas
test
cmp
pop
cli
insl
pop
xorl
mov
icebp
jo
stos
sub
sub
jge
out
or
sti
les
jno
xor
enter
xor
mov
std
push
mov
cmp
out
in
in
push
mov
jmp
popa
cmp
popa
cmp
jo
or
insb
xchg
inc
ds
mov
gs
flds
insb
pop
je
ljmp
cmp
loope
mov
fdivrp
test
cmpsb
iret
mov
push
scas
aas
cmpsl
aas
and
ja
pop
cmp
inc
jnp
pop
lods
pusha
shll
stc
bnd
lcall
sub
sub
roll
mov
adc
push
push
pop
push
push
cmp
mull
mov
lcall
and
das
and
sbbb
imul
es
or
sbb
loopne
movsb
jle
sub
sub
inc
mov
xchg
sbb
out
xchg
and
mov
mov
mov
adc
test
adc
test
push
mov
mov
cmp
inc
mov
rclb
add
or
sub
inc
jb
add
mov
repnz
push
fcomp
cmc
and
jl
pop
loopne
xadd
fs
mov
or
fisttpl
dec
out
jbe
push
repnz
outsl
cmc
mov
dec
movsl
mov
push
dec
sub
sti
lea
int
roll
push
sub
sti
or
inc
dec
cmovnp
bound
xchg
int
cmpsl
xchg
mov
sti
mov
in
mov
mov
push
into
pop
in
jbe
mov
cltd
fucomi
mov
mov
test
js
jecxz
add
rorl
pop
mov
or
out
cmp
imul
lea
shll
adc
icebp
int
and
jp
jbe
das
xchg
repnz
fdivrs
pusha
inc
in
jle
fwait
in
jb
add
sub
aas
or
mov
ret
push
mov
aas
and
ja
sarb
push
dec
ljmp
pop
iret
int3
mov
mov
jno
lret
test
push
xlat
pop
lret
dec
repz
rorl
rolb
push
rcll
mov
inc
mov
xchg
push
notl
std
pushf
push
push
and
test
mov
data16
mov
push
dec
lea
sbb
mov
lods
inc
mov
mov
pop
rcll
mov
lea
mov
adc
xorl
es
ss
dec
mov
cs
cmpsl
movsb
and
jge
mov
jo
jae
addr16
jecxz,pn
ds
sub
loop
bound
and
xorb
popf
jno
fs
leave
cmp
sti
hlt
mov
jle
int3
mov
ds
fmull
mov
mov
push
add
mov
pop
test
pushf
sbb
aam
andb
jae
push
mov
mov
cmp
inc
sbb
mov
xor
ss
or
dec
fiaddl
jns
icebp
mov
je
bswap
mov
fdivrl
sbb
pop
jp
jnp
mov
and
dec
gs
or
cmp
sbb
fsubp
mov
push
out
inc
push
add
sarb
push
outsl
imulb
push
jae
sbb
outsl
lret
cli
aam
shrd
mov
pop
lret
jns
push
jnp
xchg
and
mov
lahf
jl
shll
xchg
les
lahf
and
shll
repnz
fiaddl
jp
pop
jg
stc
in
push
mov
xchg
and
fyl2x
mov
jne
mov
inc
inc
xor
dec
push
cmc
popa
add
ss
movsl
xchg
and
adc
jl
cmpsl
cld
cmpsl
pop
cmpsb
insl
dec
add
orb
sbb
push
lea
sti
pop
lods
into
fisttpl
mov
push
daa
lods
add
push
btr
arpl
es
or
mov
lds
or
rcrl
loope
out
lods
add
push
push
jns
andl
lret
jle
call
jnp
adc
cmp
inc
push
cmp
push
sub
mov
outsl
aas
xchg
sarb
andl
mov
mov
ljmp
xchg
inc
xchg
mov
sar
in
cld
mov
inc
clc
mov
pop
xor
stos
cld
mov
pop
xchg
xchg
jl
add
cmc
sbb
lcall
adc
aad
sbb
cmp
push
mov
inc
jbe
xor
out
sub
outsb
hlt
stos
xor
pop
stos
pop
cmp
pop
inc
fnstenv
jmp
sub
pop
add
jg
das
mov
xchg
push
sub
ss
int3
jns
test
fwait
out
shrb
pop
je
stc
mov
lock
cmp
push
mov
je
int
jle
dec
into
mov
pop
pop
loope
mov
cmp
movsb
adc
mov
jae
gs
or
sub
idivb
sub
lret
ja
cld
and
jecxz
inc
loop
xor
jbe
pop
or
ds
sub
sbb
dec
push
clc
xchg
pop
mov
out
inc
cmp
sti
jp
dec
int3
movsl
dec
outsl
sub
movsb
push
imul
cs
outsb
dec
adc
cmp
popf
jnp
in
pop
lock
clc
fdivs
push
loopne
sub
js
pop
push
ret
cmp
inc
sub
mov
icebp
jns
loope
or
xor
pop
das
mov
mov
iret
loopne
xchg
js
cmp
cmc
ja
shr
jg
cmp
push
jns
das
adc
aas
je
mov
adc
jmp
mov
pop
mov
enter
mov
or
push
pop
push
dec
xchg
clc
add
in
or
pop
push
jmp
xor
and
adc
dec
or
shll
xor
repz
es
sub
lahf
mov
jge
jno
cmp
cmp
fucom
cmpsl
mov
loop
pop
jns
popf
stos
and
push
push
xchg
iret
push
test
add
and
inc
jle
lea
mov
into
jns
sub
jge
dec
and
imul
sub
and
add
jge
pushf
inc
popf
mov
lods
inc
sub
jle
inc
inc
xor
fnstenv
mov
aad
inc
lea
and
call
leave
stos
or
dec
dec
cmc
and
dec
sbb
test
xchg
pusha
iret
mov
inc
sahf
aas
and
sbb
out
popa
mov
dec
jo
mov
push
mov
hlt
loop
bound
adc
loope
or
in
pop
cmp
mov
lret
dec
insl
or
lds
aaa
pop
cmc
mov
push
or
mull
aaa
and
mov
dec
mov
roll
push
outsl
sub
mov
sub
mov
pop
add
push
push
add
and
mov
dec
out
aad
shl
ss
jne
sbb
std
sbb
or
outsb
pop
sbb
mov
xchg
xchg
sub
mov
ret
xor
inc
dec
dec
mov
sbb
or
xor
loopne
int3
mov
xor
mov
pop
scas
pusha
sbbb
mov
add
mov
jge
lret
push
cmp
shlb
mov
adc
dec
cmp
cmpl
mov
lahf
in
divb
insb
test
and
add
xlat
sub
out
inc
adc
clc
sbb
iret
mov
mov
xchg
mov
jo
je
lret
clc
mov
jmp
push
add
xor
mov
insb
sub
je
bound
mov
lods
lcall
stos
pop
jno
xlat
dec
fcmovne
jno
mov
xchg
test
loope
mov
push
divb
or
mov
inc
xchg
cld
fnsave
sub
out
xchg
xchg
jle
dec
xor
xchg
test
incl
lcall
push
in
incb
lea
in
in
gs
add
mov
add
dec
std
stos
stos
repnz
or
mov
inc
gs
mov
mov
push
and
pop
sbb
xchg
adc
push
mov
sbb
neg
jg
stos
or
xor
incl
aas
sahf
mov
lret
ljmp
jmp
dec
pop
pop
sahf
push
ficompl
xchg
sub
lret
sub
ss
aaa
jmp
std
jae
into
imul
lahf
jle
mov
lcall
push
movsl
adc
mov
cli
sbb
out
xchg
pop
movnti
jbe
or
cmpsb
lods
sub
imul
movsl
inc
iret
jb
lods
push
imull
pusha
fwait
sub
sahf
test
or
mov
lods
mul
add
test
push
mov
dec
add
jecxz
fisubs
and
adc
std
fidivl
sub
xchg
mov
cwtl
xor
cmpsb
sub
inc
jbe
out
mov
pop
cmp
cmpsb
adc
das
or
movsl
cmpsl
mov
cltd
lds
into
sbb
adc
mov
cmp
repz
xchg
jno
mov
pusha
das
sub
sub
mov
outsl
xchg
or
dec
mov
adcb
fdivrs
mov
mov
addr16
adc
inc
jle
xchg
jp
xchg
arpl
pop
into
leave
xchg
adc
mov
repnz
fbld
dec
pop
jns
movsl
iret
fistpll
pusha
outsb
out
inc
jo
adc
xchg
xor
mov
jno
aas
inc
pushf
shl
les
dec
imul
je
push
pop
pop
add
jg
inc
adc
and
pop
push
push
mov
adc
sub
daa
mov
lahf
cmc
iret
pop
xor
mov
dec
jle
jp
mov
mov
repnz
mov
sar
outsb
bndstx
or
bound
jmp
dec
sbb
hlt
cmp
lea
test
cmpsl
lock
enter
mov
mov
insl
adcb
or
mov
cmp
pop
and
sbb
dec
pop
int
mov
cmp
jle
in
popf
adc
jecxz
cmpsb
adc
mov
test
sbb
cmp
pop
add
push
outsb
pop
test
inc
xchg
icebp
test
clc
pop
lret
jb
ljmp
cwtl
stos
hlt
fidivrs
jb
std
rcll
sbb
sbb
cmp
or
enter
repnz
jmp
cs
clc
xor
dec
leave
add
and
xor
pusha
sub
fldl
add
insb
mov
int
insb
xlat
and
loope
sbb
std
xchg
mov
gs
adc
test
lea
sbb
lret
enter
adc
ljmp
jmp
and
dec
fmull
inc
push
fs
pop
add
dec
inc
ret
push
mov
rcll
enter
sub
jno
cmp
xchg
mov
xor
or
pushl
sbb
and
mov
scas
outsb
inc
repz
sbb
scas
sbb
jnp
pop
test
jbe
movsl
insl
pop
testl
pop
jg
je
jns
add
pop
add
sub
adc
fadds
aaa
add
je
mov
push
sub
cmp
jmp
lcall
add
imull
sbb
mulb
stc
and
jecxz
out
and
mov
add
dec
dec
int3
punpckhdq
mov
cmp
push
sub
mov
lret
sub
mov
mov
xchg
sti
cmp
mov
push
sbb
inc
mov
inc
add
add
jecxz
sub
aaa
aam
mov
jmp
mov
xchg
jl
push
testl
pop
dec
ljmp
pusha
dec
sarb
xchg
lds
mov
xchg
push
idivl
aas
jns
outsl
lds
lock
mov
pusha
into
push
sbb
mov
xor
subl
push
loop
xchg
addr16
lcall
inc
jo
pop
add
sub
std
mov
sti
icebp
outsl
mov
jne
dec
je
cmpb
pop
adc
xor
jl
inc
dec
cld
sbbb
push
in
cs
push
xchg
xor
mov
push
pop
dec
jmp
repz
pop
sbbb
jge
jecxz
jo
pop
jno
aam
or
cwtl
xchg
leave
test
mov
push
add
rcrl
cmp
ljmp
fmuls
and
mov
mov
out
loope
sti
ret
adc
cli
dec
push
or
aad
mov
test
fcmovb
into
sub
leave
in
jl
int
das
ficoml
lods
dec
xchg
cmp
mov
lock
inc
cltd
mov
mov
shrl
lcall
push
push
cmpsl
lods
cmp
push
inc
lods
aad
repnz
pop
insb
cmp
lods
imul
mov
leave
pop
mov
test
dec
hlt
and
push
ficomps
and
stos
cld
stc
fmull
test
mov
in
mov
pop
mov
aam
incl
add
push
loope
leave
mov
stos
in
xchg
push
fimuls
out
inc
js
aam
add
fcmovb
add
rdtsc
cmp
das
std
add
stos
fstpt
dec
sub
mov
sbbl
push
popa
frstor
jge
adcl
dec
fsts
pop
decb
das
adc
stos
inc
sahf
mov
mov
scas
mulb
mov
mov
sbb
popa
iret
dec
jo
cs
jnp
jmp
aad
inc
aad
push
lret
insb
sbb
adc
sbb
inc
xchg
mov
mov
lret
es
pop
xchg
fdivrs
popf
add
xchg
out
adc
fs
cld
cmp
repnz
add
push
les
cmc
ret
pop
clc
sbb
mov
and
cmp
mov
aad
cmc
push
fs
pop
test
add
adc
jb
and
pop
ret
fst
cmc
icebp
lds
xchg
push
mov
pop
adc
mov
cmp
das
mov
loope
jle
bound
out
adc
test
pop
lcall
fwait
xchg
fldl
adcb
fisttpl
jb
add
int3
in
sub
loope
dec
notb
cli
test
add
or
mov
leave
dec
pusha
repz
mov
outsb
xchg
insb
aad
xlat
mov
movsb
xchg
stos
mov
in
jno
pop
push
and
push
mov
fcoms
shlb
fpatan
push
fwait
xchg
cltd
jbe
cld
cmp
aad
out
gs
mov
in
lret
or
mov
lcall
jno
fisubrl
xlat
ds
mov
dec
je
cmp
inc
mov
cmp
pop
and
pop
jnp
enter
adc
out
popf
outsb
sahf
outsb
jmp
pop
inc
movsb
dec
and
cwtl
cmc
ss
mov
inc
insb
xor
pushl
lock
pop
enter
and
bnd
hlt
pushl
lahf
aad
outsb
mov
loop
inc
dec
cli
mov
mov
loop
dec
adc
lret
pop
jno
ret
outsl
stos
insl
sub
or
mov
in
or
sbb
xchg
dec
pop
and
or
inc
cmp
pop
pop
subl
ss
loop
jbe
inc
clc
scas
jecxz
mov
out
mov
and
pop
movlps
lahf
fninit
ja
dec
divb
xchg
gs
mov
xchg
das
pop
clc
ficoms
add
inc
stos
test
cmp
sbb
jmp
mov
out
lods
out
int
hlt
add
jecxz
mov
orb
lret
ljmp
ljmp
push
dec
xchg
and
cmpsl
push
adc
mov
or
mov
add
and
push
xor
scas
push
stos
lahf
mov
xor
je
out
jns
dec
lds
nop
pop
ja
or
inc
or
pusha
jnp
dec
xchg
fistl
and
aaa
leave
pop
shll
push
pop
scas
test
mov
dec
ljmp
shl
push
mov
das
cmp
add
stos
icebp
push
repz
adc
jb
or
dec
aaa
jecxz
lret
test
xor
or
inc
adcb
shl
and
bound
inc
inc
cmp
jp
out
lods
adc
mov
pushf
mov
stc
cltd
test
push
out
xchg
bound
sbb
iret
inc
cs
ret
icebp
and
jmp
cmp
ret
scas
inc
insb
cmpsl
ljmp
adc
enter
and
lret
mov
mov
rcl
test
in
pop
pop
fwait
push
mov
xchg
cmc
add
push
ret
and
shrl
subb
jo
sbb
insl
les
mov
jae
pushf
jge
jge
add
push
ljmp
mov
mov
cmp
pop
adc
push
out
loopne
cmpsb
mov
pusha
mov
cmp
ja
jne
arpl
cld
mov
aaa
cmc
or
cld
fldl2t
out
inc
sahf
lea
cmp
call
pop
mov
jmp
adc
mov
ljmp
leave
divl
xchg
mov
adc
pop
jo
jecxz
sti
in
inc
test
into
in
jge
add
repz
adc
iret
inc
xchg
in
jnp
out
add
pusha
enter
add
push
add
push
lods
jae
inc
push
jge
jnp
jp
test
fdivr
lods
push
orb
popf
inc
jo
sbb
leave
jo
dec
push
lds
je
and
adc
pop
stc
aad
xchg
sbb
lret
addb
adc
mov
movups
mov
cmp
mov
inc
imull
inc
dec
test
and
jl
test
push
jl
and
repz
test
lds
adc
shrl
fbld
lods
sub
rcll
pop
fwait
or
das
push
sahf
fdivr
aaa
aaa
pop
rcrb
sbb
stos
cwtl
jne
scas
es
mov
push
addr16
pop
add
push
cmpsl
push
mov
scas
jae
pop
or
pop
int3
std
mov
jne
ja
daa
jmp
adc
pushf
inc
pushf
adc
jmp
cmc
imul
sub
lcall
popf
int
enter
cs
icebp
adc
add
pop
cs
loop
int3
mov
in
sbb
mov
dec
fdivl
je
inc
dec
xlat
daa
out
mov
jp
sbb
movsb
call
jge
sub
sub
add
mov
jae
xlat
adc
mov
lret
mov
jb
add
mov
push
pop
data16
xlat
pop
jecxz
cmpl
les
outsl
add
jns
addr16
cwtl
dec
and
int3
int3
xchg
dec
pop
sbb
subb
cmp
cltd
mov
sti
cmp
mov
ret
fistpll
testl
stc
mov
ss
fsqrt
jbe
lret
mov
ss
jmp
leave
jne
cmpsl
cmpsb
fcoml
loopne
test
mov
sbb
push
lods
push
call
in
adc
mov
sbb
cltd
filds
aad
pop
mov
cs
addb
stos
imul
mov
fmuls
je
fimuls
jge
pop
lods
call
popf
xor
lods
mov
jp
pop
insl
arpl
movsl
add
add
mov
mov
cmc
rolb
push
popf
clc
push
repnz
bound
cli
cmp
mov
inc
adc
xchg
or
dec
ret
sahf
in
lret
popa
push
test
pop
shl
push
nop
mov
mov
sub
ja
dec
pop
lret
sahf
and
shr
jb
xor
jecxz
pop
pusha
add
stos
stos
mov
cmp
pop
shlb
mov
imul
inc
pop
mov
faddl
loopne
adc
cmp
in
jb
addr16
shrl
popf
dec
ljmp
cmc
pop
xchg
push
xor
or
xor
push
loopne
loopne
in
into
mov
push
ja
or
lds
push
addr16
xchg
loope
addl
movsb
adc
sti
fs
aam
jbe
pop
repz
into
insb
mov
test
mov
sub
popf
jge
dec
cmp
orl
xlat
cmp
sahf
pusha
sbb
mov
nop
mov
pop
xor
insl
mov
stos
push
cmp
push
aad
or
push
insl
cmp
in
cmp
xchg
scas
aaa
and
dec
ret
cltd
into
xor
sbb
xchg
and
hlt
adcb
and
dec
push
dec
push
adc
xchg
nop
loop
jmp
xor
rolb
lock
add
fistl
push
loop
mov
mov
jnp
push
push
in
in
movsb
xchg
std
add
pop
sti
xchg
test
es
adc
mov
inc
jmp
xchg
dec
ret
test
lods
or
sbb
icebp
xchg
lret
int3
insb
adc
jnp
mov
push
mulb
arpl
mov
cltd
adc
jl
adc
ss
and
mov
push
fdivl
cwtl
scas
pop
movsb
xchg
add
push
out
hlt
stc
jmp
dec
and
mov
and
lock
pop
pop
add
rol
dec
push
jbe
bound
mov
pop
sbb
sbb
or
pop
shl
jnp
outsb
stos
push
mov
leave
cld
lcall
in
and
or
mov
jne
mov
sbb
jno
shll
push
out
push
sbb
f2xm1
sub
ror
lods
in
or
xlat
mov
cwtl
movsb
dec
jmp
push
xchg
pop
add
ljmp
jecxz
es
sub
pop
xchg
lock
sbb
scas
sub
push
pop
call
out
imul
aas
mov
cmp
and
mov
xor
rcll
xchg
repnz
mov
enter
mov
sub
dec
push
aas
fdivs
mov
xchg
test
push
ret
negb
repnz
lcall
pop
cmp
out
cltd
jne
lea
jg
call
addr16
add
pop
psubusw
pop
push
nop
aam
adcb
cmp
add
mov
and
or
dec
push
into
xchg
cmpsb
into
push
fistpll
cmpsl
lods
adc
push
lret
push
iret
or
jno
mov
clc
clc
push
ljmp
mov
mov
mov
dec
jecxz
dec
stos
inc
xor
push
sahf
movsl
fldenv
and
bt
shlb
inc
repz
out
add
aam
sub
mov
test
jbe
sub
jns
add
repz
cmc
aam
imul
rorl
push
into
fisubs
and
mov
or
dec
pop
out
nop
repnz
push
cmc
fabs
xchg
push
inc
sub
push
dec
sahf
pop
adc
adc
sti
movsb
call
sub
cmp
jnp
jbe
xor
add
in
mov
mov
scas
vmovss
test
ljmp
inc
out
mov
addr16
lahf
cmp
fsubrs
loope
cmp
jno
and
lcall
cwtl
xchg
or
sahf
mov
mov
into
cmpl
mov
in
lcall
das
cli
and
out
mov
jb
cld
jo
cmp
add
add
mov
inc
test
loop
jmp
jge
jl
cs
mov
enter
mov
sub
repz
add
outsl
movups
popa
stc
and
fcoml
out
insl
adc
pop
icebp
and
fidivrl
lret
and
push
imulb
js
scas
or
add
in
xchg
pusha
das
cmp
aam
movsl
mov
pop
lock
push
ljmp
clc
iret
push
cmpsl
scas
outsb
insb
jl
push
jg
cmp
imul
cmpsl
dec
adc
enter
es
mov
add
xor
shrb
in
popf
xor
mov
out
lods
inc
pop
mov
cmpsl
pop
xor
aam
movsb
inc
inc
mov
push
push
mov
sub
sub
insl
pop
mov
insl
mov
xor
dec
sub
je
mov
outsl
in
dec
out
loop
lret
push
sbb
push
subb
dec
or
lahf
mov
pop
testl
lcall
and
ss
inc
or
dec
cmpsb
int3
xchg
lds
stos
icebp
movsl
jb
lahf
add
and
repz
adc
cmp
and
mov
sahf
or
enter
dec
cltd
stos
rcrl
enter
dec
adc
scas
out
lret
sub
icebp
xor
add
xchg
xor
push
mov
rclb
imul
popa
or
or
push
cmc
adc
inc
or
inc
mov
imul
rorb
or
jo
rcrl
mov
pop
scas
loope
sar
push
dec
incb
cs
scas
mov
xchg
mov
out
jp
inc
cld
inc
aas
jmp
pop
aas
je
and
enter
cmp
jo
add
xor
dec
inc
repnz
cwtl
mov
lret
inc
aaa
mov
das
mov
sbb
jae
mov
insb
adcl
jle
iret
and
out
jge
enter
not
aam
inc
mov
pop
test
aad
xor
repz
mov
sub
push
or
xchg
xor
mov
imul
cs
sbb
out
jns
out
push
pop
test
pop
ja
sub
cwtl
mov
and
mov
mov
xchg
loop
sub
orb
mov
test
loope
out
outsb
test
cltd
xchg
cmc
movsl
ja
stc
add
jle
add
mov
inc
mov
fidivl
jmp
push
jae
push
test
mov
push
popf
in
loopne
push
pop
mov
cwtl
and
arpl
mov
fsubrp
jmp
mov
popf
rcrb
nop
xor
andb
sbb
mov
mov
jp
js
stos
lret
int3
dec
lahf
orb
xchg
inc
call
cmp
out
lret
outsl
push
mov
aad
push
adc
mov
jns
mov
pop
jle
add
jae
fcomip
xor
dec
mov
xor
sbb
call
call
lods
push
test
mov
addr16
mov
jg
xor
sbb
mov
xor
cld
outsb
shlb
enter
lea
add
pop
test
leave
ror
mov
test
pop
jnp
cmp
xor
jecxz
inc
scas
xchg
movsl
push
inc
or
out
push
int3
push
cwtl
clc
pop
lds
icebp
in
or
mov
ds
pushf
lock
adc
mov
push
mov
dec
push
stc
xchg
mov
das
rcrb
push
or
adc
adc
aam
data16
loope
outsl
mov
icebp
sub
int3
imul
fwait
sub
lea
int3
pop
loop
add
push
mov
sahf
lahf
mov
in
dec
jo
mov
mov
shrb
lods
adc
dec
sarl
jle
inc
xchg
or
repz
test
insl
xor
mov
mov
int3
test
arpl
and
insl
outsl
jecxz
add
dec
adc
xchg
loop
fldenv
sbb
pop
or
outsb
lods
push
xchg
jbe
test
iret
xchg
neg
inc
loope
mov
ret
inc
into
filds
aas
imul
in
pop
cli
ja
or
or
jp
stos
outsb
mov
xor
pop
pusha
adc
les
js
pop
orb
outsl
nop
or
fs
lea
out
pop
out
in
out
push
stos
or
sbb
push
push
fnstsw
push
popa
lret
mov
inc
daa
add
adc
jl
dec
out
push
or
ja
movsl
cmp
pop
inc
push
outsb
jno
push
mov
push
adc
hlt
sub
test
cmp
or
jno
test
pusha
je
lods
add
xchg
movsb
arpl
mov
mov
or
sbb
aad
pushf
mov
out
pushf
ljmp
jbe
cmpsl
bnd
fildl
mov
in
fmull
call
or
dec
iret
fucom
push
je
popf
jbe
lret
mov
jecxz
xchg
add
mov
daa
inc
jle
dec
or
cmc
pop
xchg
stos
pop
imul
push
loope
fsubrl
inc
enter
mov
mov
les
push
lods
test
ficomps
rclb
shl
sub
and
xchg
mov
lods
mov
pop
xchg
popf
jb
jmp
sbb
outsl
pop
dec
inc
adc
sahf
dec
and
fadds
inc
mov
outsl
stos
mov
movsb
lret
xchg
outsb
cmp
adc
add
xor
xchg
int3
jns
int
lcall
movsl
dec
lock
adc
orb
subb
mov
mov
aam
cmp
fistl
pop
insb
dec
aad
test
add
pop
dec
icebp
sbbb
jg
std
push
cmp
mov
xchg
adc
inc
push
mov
hlt
and
xchg
jecxz
test
lcall
inc
add
push
scas
add
test
mov
pop
inc
and
mov
pop
jne
imul
shrb
jge
test
xchg
and
lahf
jmp
pop
mov
push
enter
imul
imul
lock
orl
in
fstpl
cmp
xor
push
mov
push
jo
fiaddl
push
mov
int
aam
mov
sbb
rcll
fucomp
push
jno
add
addb
fst
mov
mov
mov
stos
sahf
popf
pop
dec
inc
add
push
rorl
sbb
lds
sub
or
in
ljmp
insb
xor
addb
out
gs
xchg
aas
inc
mov
jge
inc
cmc
sarb
popf
orl
fsubl
xchg
sub
lret
adcb
inc
out
data16
sub
mov
dec
jno
pop
stc
push
adc
loopne
sbb
ljmp
rsqrtps
mov
pusha
adc
xchg
insb
cli
nop
and
les
sub
pop
xchg
fidivrl
aaa
add
movsb
adc
psubsb
insl
popa
mov
inc
lret
mov
sub
push
jb
push
jo
push
aaa
or
outsb
mov
mov
out
adc
jns
loope
dec
std
dec
ss
movsb
aam
lea
jno
lock
pop
dec
in
pop
sub
push
mov
add
xor
mov
dec
xor
out
stc
icebp
popf
popf
popf
aad
test
cmp
adc
xchg
xchg
insl
aad
inc
fldcw
stos
leave
add
adcl
dec
addb
clc
mov
push
sbb
inc
inc
pop
mov
pusha
enter
mov
mov
or
cmpb
inc
jle
idiv
outsb
das
cmp
add
or
call
iret
lret
mov
les
xchg
leave
inc
scas
mov
popa
je
ffree
inc
push
push
popa
div
stos
ss
mov
xchg
lret
negb
adc
pop
push
mov
dec
lcall
jmp
adc
xor
jp
cmp
movsl
repnz
mov
mov
popf
pop
adc
test
dec
leave
sub
add
test
jae
test
xchg
pop
in
cli
daa
jo
add
out
inc
pusha
imul
mov
sti
sbbb
dec
push
pop
jmp
dec
inc
jle
dec
test
and
popa
xor
cltd
pop
inc
scas
mov
cmp
add
das
xchg
push
mov
cwtl
les
mov
stos
adc
push
push
mov
aas
push
push
cwtl
imul
icebp
stc
sahf
push
inc
mov
mov
out
mov
mov
mov
inc
cs
out
mov
bound
mov
test
out
ds
pop
jno
adc
mov
jle
add
lock
adc
scas
lret
int
lock
stos
push
mov
ljmp
lods
jnp
outsb
jp
jecxz
adc
mov
dec
out
mov
mov
and
test
push
out
push
clc
in
xchg
negb
jae
pusha
jp
out
lock
add
inc
xchg
mov
imul
insb
test
and
lret
outsl
jne
cli
lods
mov
pop
std
and
mov
orl
sub
push
in
pop
cmp
dec
popa
cltd
mov
rcll
inc
in
icebp
dec
outsb
fs
push
aaa
sahf
mov
aaa
cltd
adc
hlt
mov
ror
sbb
int3
cmp
mov
fcmovnbe
push
xchg
xorb
ret
mov
scas
mov
es
sub
popa
jmp
sbb
xchg
and
fwait
in
jmp
mov
and
fstpt
in
sbb
nop
jnp
jmp
lods
inc
imul
out
jae
adc
ud2
lcall
imul
sub
add
dec
sbb
mov
add
repz
pop
xor
mov
dec
pop
sbb
rep
popf
dec
cmp
scas
mov
mov
lea
leave
or
fisubl
call
ficompl
push
das
push
fisubs
xlat
push
aam
add
jno
insl
lret
scas
out
xchg
xor
pop
xchg
in
dec
adc
and
mov
or
sti
pop
jns
pushf
repnz
mov
cs
fwait
xchg
enter
jbe
adc
mov
xlat
iret
add
xchg
and
and
test
adc
addr16
jecxz
jl
or
inc
dec
cmp
incl
insl
xor
sti
xor
fdivrp
or
jl
cwtl
sub
jl
mov
ja
mov
loopne
adc
jl
and
lods
push
or
mov
and
aas
notb
out
cmp
push
ret
in
adc
push
negl
in
mov
int3
jl
icebp
pop
int
pop
xor
pushf
xlat
mov
cld
xor
call
push
inc
aam
and
mov
jnp
sub
enter
sub
aad
in
faddl
sbb
dec
nop
fwait
xchg
dec
js
and
ja
push
xchg
jmp
mov
pop
cmc
sarl
fildl
test
shlb
int3
add
roll
mov
jecxz
pusha
shl
cmpsb
icebp
cmp
es
xchg
shr
es
ret
sbb
sbb
fwait
push
pushf
mov
dec
fwait
adc
fcmovnbe
pop
aad
iret
inc
rorl
cmc
movsl
cmp
inc
test
in
pop
std
pop
imull
xor
test
and
bound
sbb
aaa
in
and
jmp
scas
adc
mov
test
mov
out
cmp
lea
mov
cmpsb
lret
cmp
cmp
jae
lods
fbld
adc
pushf
mov
fsubs
or
adc
dec
sub
mov
insb
push
in
lret
movsb
sbb
lods
icebp
cmp
fnsave
enter
mov
push
lods
gs
shrb
js
cmp
cwtl
push
and
dec
add
xor
lret
je
cs
cmc
pop
jb
adc
in
mov
fwait
dec
stc
into
and
pop
dec
mov
dec
jae
subl
loopne
lahf
orb
fcmovb
ror
ja
sbb
cmpsb
mov
adc
lahf
inc
push
test
and
mov
dec
test
inc
pop
push
gs
inc
mov
iret
dec
cmpsl
push
lock
inc
ja
in
into
xchg
cmove
dec
sub
xchg
xchg
cld
xchg
sbb
adc
push
loope
mov
inc
pop
pop
cmp
imul
xchg
rcr
iret
aas
dec
and
sbb
subl
cmp
sub
jo
mov
push
cmp
lret
mov
sub
repnz
imul
mov
adc
mov
cmp
icebp
dec
sub
sarl
mov
sub
jecxz
jl
es
daa
mov
sti
lcall
adc
or
loop
xor
inc
mov
sbb
imul
aad
cltd
shll
rclb
mov
add
push
add
mov
push
push
lods
std
rcrl
pop
xchg
aaa
mov
loopne
mov
or
outsb
fwait
mov
mov
call
xchg
adc
dec
rcl
cld
jge
in
adc
sub
xchg
push
sbbb
push
les
add
out
sbb
stc
pop
pop
cld
push
lods
std
pop
in
or
adc
fisubrs
adc
movsl
xchg
fistl
nop
sbb
and
ror
sub
or
jo
xchg
add
inc
adc
inc
stc
add
aaa
mov
xchg
jbe
pop
rclb
xchg
ficomps
lret
push
std
xor
ficoms
or
jle
mov
roll
cwtl
testb
data16
jecxz
leave
push
sti
mov
scas
in
xor
leave
add
es
js
jo
test
shl
sbb
and
leave
aaa
fsubl
sbb
outsb
cltd
adc
pop
pop
hlt
dec
inc
dec
dec
mov
out
jge
loopne
ja
cltd
jg
stc
loopne
inc
jle
movl
sbb
ja
lahf
xor
leave
jge
and
mov
cld
rolb
inc
jae
sbb
pop
jo
cmpsb
cmc
gs
or
jae
fisttpl
and
xor
test
mulb
cmpsb
daa
cmp
aaa
inc
and
leave
mov
jns
pop
lret
xlat
jmp
sbb
jo
out
and
jge
jmp
xchg
mov
cmp
cmp
lock
mov
and
in
pop
out
cmp
call
mov
sti
roll
and
outsb
xlat
cs
and
sbb
sub
pushf
mov
stc
pop
shll
lods
scas
in
pusha
or
mov
dec
sub
out
out
insl
sar
push
sub
jmp
sarl
push
mov
or
mov
mov
dec
dec
test
pop
push
icebp
hlt
or
std
fnstcw
cmp
pop
cmpsb
inc
sbb
or
and
ret
nop
daa
shlb
mov
mov
decl
stos
aam
add
mov
mov
or
int3
stos
pop
pop
int3
aas
icebp
adc
and
jge
out
data16
mov
jecxz
push
cltd
ss
fisubrl
mov
jge,pt
mov
mov
iret
clc
cmp
mov
clc
sbb
push
pushf
push
xchg
fisubrs
sbb
cmp
movsl
into
sbb
and
clc
xchg
pushf
int
xor
mov
ret
fsubrs
push
fnsave
xor
push
cmpsb
dec
mov
enter
and
jmp
movsl
inc
mov
mov
cs
sbb
cltd
pop
add
add
test
mov
inc
or
shll
and
cwtl
push
and
stos
out
loop
adc
pop
push
adc
jl
jno
dec
push
push
repz
mov
loop
sub
out
dec
push
dec
pop
cmc
dec
rorl
call
jle
leave
ds
lods
jo
in
sub
mov
in
imul
sub
mov
xor
push
mov
sbb
mov
iret
cwtl
mov
lcall
mov
iret
les
je
or
push
out
outsb
add
out
fstpt
shrl
cmp
mov
cltd
sbb
popf
andb
out
repnz
mov
je
mov
ja
mov
inc
addr16
rcll
adc
pop
add
mov
enter
mov
mov
orl
mov
cmp
mov
std
mov
jbe
and
sub
mov
lcall
nop
test
pop
ficompl
int3
xchg
addl
cmc
mov
inc
aam
cmpsb
lcall
daa
mov
insb
push
pop
movsb
movsb
cmpsl
je
push
test
pop
sub
in
mov
mov
std
in
rcll
js
xchg
ficoms
mov
pop
add
pop
xor
imul
sub
mov
sbbl
mov
aas
xchg
cmp
negl
pop
add
iret
inc
adc
icebp
fwait
xor
rcrb
insl
mov
out
or
stos
xchg
std
add
or
xorl
fucom
rorb
lds
mov
repnz
jbe
rol
or
sbb
inc
adc
hlt
sub
mov
jbe
mov
add
bound
pop
cltd
dec
repz
pop
call
and
mov
adc
aaa
pop
enter
add
cmp
aam
cmp
lods
rol
sub
mov
loopne
pop
out
mov
adc
or
aaa
sub
nop
xor
jae
or
xlat
dec
add
cmpsb
jl
adc
iret
inc
jae
mov
movsb
xor
arpl
movsl
scas
add
fisubl
lahf
add
int
icebp
in
pop
xor
sbb
in
inc
data16
outsl
inc
lcall
xor
xor
cmc
fidivl
jbe
push
mov
daa
sub
sub
idivl
pusha
sbb
fwait
scas
popa
dec
fsubl
scas
mov
pop
jle
addr16
popf
adc
scas
arpl
call
test
fcmovnu
adc
hlt
fwait
sbb
dec
andb
or
inc
pop
add
lods
pop
dec
push
sub
mov
pop
insb
mov
inc
cmp
sbb
mov
and
or
xor
dec
movsb
insl
add
jecxz
push
test
push
xchg
sahf
jbe
stos
mov
adc
push
js
and
aam
orl
xchg
out
cmpsl
ret
sub
sub
jo
je
push
sahf
xchg
fcmovb
loopw
jecxz,pn
int
imul
mov
lcall
cmp
add
add
sub
clc
adc
xchg
add
stos
fs
inc
add
inc
adc
in
stc
sbbl
jmp
arpl
rorl
les
int
jne
jbe
push
popf
xchg
mov
inc
or
fstp
xchg
push
cld
lret
pop
push
jmp
pop
imul
xchg
dec
dec
lds
pop
rcrl
sbb
icebp
ljmp
mov
inc
jae
jbe
rcrl
ss
lret
js
push
movsb
enter
mov
shr
jne
adc
cmp
imul
sub
aas
and
inc
imul
mov
fcmovne
fcomps
je
aam
sbbb
jbe
xorb
aad
and
mov
xchg
in
pop
addl
rolb
push
add
push
dec
pop
stos
scas
jmp
aad
push
sub
or
ds
shl
enter
and
out
dec
mov
stc
xchg
xor
scas
cmp
addb
pusha
ret
jae
into
fwait
jge
lcall
loope
jg
or
hlt
pop
js
cbtw
sub
movsb
adc
loopne
inc
fmul
mov
sub
push
daa
pop
mov
cmp
cmp
data16
lods
sbb
leave
in
dec
adc
mov
js
jnp
mov
fsubs
fwait
mov
push
aaa
inc
sbb
ret
divl
lahf
pop
into
or
dec
iret
and
mov
lret
push
cld
stc
mov
popa
mov
cmp
inc
cmp
loope
or
xchg
pop
xor
sbb
jl
add
pop
mov
sbb
orl
pop
pop
adc
pop
cwtl
int3
fwait
push
xor
mov
adc
pop
sbb
imul
inc
scas
addr16
into
mov
outsb
pop
imul
sbb
or
imul
in
sarl
adc
xor
gs
inc
jnp
push
test
push
push
pop
aad
ffree
ja
int3
inc
mull
cmc
call
sti
pop
push
mov
shl
sbb
or
inc
push
call
jecxz
ja
test
sar
push
adc
cmpsl
sub
sti
mov
lock
inc
cmp
mov
mov
jne
sbb
movsl
flds
lock
mov
cltd
push
inc
inc
data16
rcr
and
rcrl
pop
add
les
stc
adc
lods
call
mov
dec
sbb
mov
or
push
shl
fsubl
xor
jg
pop
orb
pop
iret
inc
js
lods
jl
fidivs
imul
movsl
dec
or
push
xchg
dec
sub
xor
mov
imul
xchg
cmpsb
scas
xor
inc
lea
lret
fnstenv
xchg
xchg
jnp
cltd
cs
inc
mov
lahf
add
xchg
std
sub
push
and
stc
lahf
hlt
jo
sub
xchg
jae
dec
imul
sub
jbe
jl
daa
dec
adc
scas
jae
add
push
cmp
push
ficompl
ss
rorb
into
push
fldl
mov
pop
addr16
mov
ret
xchg
int
mov
pop
inc
lods
sub
ret
lret
mov
aaa
jns
and
push
jmp
jo
mov
sub
pushf
mov
jge
mov
cmp
int3
mov
push
outsb
sub
lock
nop
inc
sbb
cmp
mov
outsb
mov
xor
inc
rorl
push
adc
cltd
or
gs
cmpsl
hlt
aas
push
aam
pop
ret
je
mov
orl
lea
jbe
add
mov
ret
sbb
push
into
test
sub
daa
andl
outsl
jbe
sti
loopne
push
mov
dec
mov
jns
xchg
gs
aam
sub
in
nop
fiaddl
mov
sub
xlat
and
push
arpl
ljmp
pop
push
icebp
arpl
adc
or
repnz
test
and
out
test
push
xor
cli
pop
ljmp
fs
add
adc
lea
lahf
jmp
sub
shrl
cmp
pop
ds
fmulp
mov
js
sbb
aam
jnp
mov
popf
inc
movsl
nop
pop
add
jmp
and
mov
inc
sub
repz
mov
in
jl
lret
aaa
cmp
adc
fwait
push
loopne
inc
out
inc
mov
std
xor
nop
sub
adc
fmuls
mov
pop
mov
sarb
call
bound
push
and
xchg
sbb
inc
mov
mov
sub
ljmp
test
test
push
jle
add
mov
inc
jle
pop
shlb
out
das
int
popf
mov
push
cmp
xchg
std
or
mov
icebp
aas
test
pop
adc
sub
push
cmp
fwait
mov
or
pop
arpl
je
xor
xchg
pop
stc
xor
int3
fdecstp
mov
cwtl
jl
pop
jnp
scas
sub
mov
mov
dec
fsubs
cmc
cmpsl
rolb
das
and
inc
pop
negb
mov
aam
lods
add
std
pop
frstor
push
add
mov
movsl
push
pop
mov
adc
mov
pop
inc
rcr
inc
dec
in
cmp
sti
aaa
lea
ja
out
xchg
fwait
mov
jae
cmp
popf
and
ljmp
test
cmpsb
das
xchg
ljmp
cmpsl
inc
ret
icebp
push
jns
push
jbe
dec
jno
cs
mov
jno
in
std
pop
cltd
out
sub
mov
pop
je
xchg
xor
stos
push
loopne
int
inc
ret
inc
push
sarl
dec
jo
stos
pop
xor
out
xlat
fucomip
xchg
stc
pushf
cwtl
or
loopne
xchg
push
jl
push
xor
in
adc
push
cmp
mov
add
int
stc
lock
add
xchg
fidivrs
and
xchg
cmpsl
xchg
adc
pop
mov
outsl
or
and
mov
xor
in
inc
mov
xchg
repnz
pop
mov
loop
sbb
sbb
mov
mov
pop
mov
xchg
imul
dec
mov
xchg
je
push
scas
jp
mov
or
xor
add
fstl
adc
ja
popf
pop
rclb
icebp
jno
xor
and
cltd
not
aaa
pop
pop
into
lret
fadd
gs
mov
notl
mov
sbb
mov
mov
aad
pop
or
les
jl
pop
or
jge
js
insl
jbe
add
cmp
in
xchg
stc
push
xchg
adc
loop
sub
add
jmp
lahf
cmp
pop
ja
and
cltd
into
bnd
mov
add
sbb
test
daa
sub
mov
dec
adc
lret
lret
dec
fs
das
stos
inc
mov
adc
and
test
add
sbbb
jmp
repnz
mov
or
bound
sahf
sbb
in
icebp
lea
mov
subb
jp
mov
xchg
fdivrp
sub
xchg
vpcmpeqb
jg
dec
pop
add
loope
xchg
push
jae
repnz
cmp
outsl
push
ret
in
jle
ret
repz
std
jle
loope
mov
ja
lods
test
add
add
mov
mov
sbb
push
push
adc
mov
push
test
push
aaa
repnz
xchg
insl
jmp
outsb
inc
push
xchg
mov
cmp
sbb
ljmp
or
sub
add
movsb
mov
push
test
inc
mov
sbbb
pop
xchg
fdivrs
rorl
jb
xchg
cmp
push
pop
aaa
mov
and
fprem
xchg
adc
mov
add
test
shl
pop
add
aaa
and
cwtl
and
push
ret
cwtl
stos
call
mov
push
test
xchg
js
mov
data16
xor
shlb
das
sbb
dec
adc
gs
outsb
mov
and
inc
mov
loop
out
push
sbb
mov
dec
arpl
out
pop
ja
rcrb
sub
add
lret
or
fstl
aam
lret
sbb
in
pop
jae
out
mov
mov
push
xchg
ljmp
fcoms
and
jmp
bound
lcall
sbb
fwait
mov
icebp
nop
push
imul
mov
bound
cmp
ljmp
test
adc
mov
dec
jl
aam
push
js
in
jb
jnp
loopne
or
jmp
pop
adc
push
mov
lea
into
xchg
xlat
icebp
push
aad
cmp
stc
xor
dec
pop
loop
push
test
js
dec
pop
test
lds
leave
pop
inc
inc
loopne
lea
int3
out
fisttpll
xchg
cmp
pop
add
int3
int
dec
xchg
lcall
mov
icebp
idivb
cmp
mov
sbb
mov
push
jl
into
data16
cmpsb
jbe
ret
rorb
jmp
std
movsl
sub
cmc
call
pushf
rcll
fwait
mov
jo
pop
adc
sub
and
leave
rorl
jl
pop
fucomi
data16
or
inc
cmp
xorb
repz
int3
push
ja
fcom
fistpll
mov
lock
add
adc
xchg
pop
cmc
loope
sti
mov
pop
dec
sub
out
mov
sbb
rcrb
push
sub
sub
out
jg
clc
mov
mov
dec
push
ret
push
inc
dec
leave
cmpb
xor
jbe
cmp
mov
inc
fwait
inc
insl
test
std
sub
pop
lods
enter
rcr
push
xchg
in
xor
js
jnp
mov
outsb
mov
imul
leave
push
or
lock
icebp
or
push
xor
dec
xor
jl
push
shlb
repnz
mov
mov
shlb
cmovno
leave
mov
ror
sbb
push
push
jp
or
sub
arpl
lahf
or
in
xchg
gs
mov
adcl
aam
pop
jecxz
adc
xor
jmp
mov
and
jge
clc
and
push
addr16
and
js
icebp
repz
xchg
sbb
pop
jecxz
arpl
cwtl
sub
pop
scas
adcb
pop
cwtl
push
add
jne
or
jmp
mov
mov
pop
sahf
adc
stos
and
add
inc
out
push
sbb
mov
mov
inc
push
and
scas
push
cmp
dec
in
rcll
cmp
or
fistpll
cmpsb
xchg
mov
jmp
jl
add
push
and
push
push
xchg
pop
xchg
ljmp
add
xchg
outsb
es
sbb
push
cmpsb
divb
scas
jns
pop
jae
outsb
push
pop
das
dec
sbb
je
dec
add
mov
sub
jb
sub
and
sub
je
fcmovnu
mov
pushf
cmp
xor
pop
cld
push
ret
hlt
pop
mov
in
sbb
ja
fwait
push
mov
add
pop
addb
fiadds
rcr
fisttps
pop
int
mulb
repz
add
cltd
jno
les
arpl
jle
sbb
push
pop
pop
pop
test
mov
aad
or
aaa
mov
ljmp
pop
fcomps
mov
inc
sbb
push
scas
sub
mov
lret
fldcw
pop
xor
test
test
push
loope
out
inc
xchg
xorl
mov
clc
xchg
mov
sbb
out
add
fs
popa
aam
fsubs
jg
xchg
mov
mov
add
cmp
out
aam
mov
pushf
and
pop
push
sub
inc
icebp
inc
jge
call
inc
jp
xor
lods
push
test
inc
pushf
xchg
stos
dec
mov
scas
and
enter
adc
clc
sub
fadds
add
adc
daa
popf
push
sub
sub
frstor
ret
push
pop
fadds
jne
cs
lds
popf
or
loope
mov
xchg
pop
sub
mov
arpl
xchg
xchg
jge
or
push
xorps
inc
xchg
pop
ret
out
cmp
add
shl
cmpsl
add
lods
pop
xchg
dec
lods
popa
adc
aaa
cmp
jmp
test
popa
test
movsl
cmp
xor
jo
and
mov
sarl
dec
or
ds
push
fiadds
lods
mov
sbb
xor
ja
xchg
xor
mov
jecxz
mov
cmp
clc
ds
neg
stos
notb
jnp
lea
mov
push
xor
push
add
cmc
add
inc
cmpsl
jns
loopne
jl
cli
test
jl
loop
xchg
jp
push
adc
insl
jecxz
mov
xchg
repnz
int
mov
negl
add
in
rcr
mov
sbbl
pop
out
int3
pop
and
leave
xchg
js
clc
cmp
out
pop
cmpsb
mov
mov
icebp
push
and
jb
push
ljmp
and
leave
sbb
insb
in
sbb
xor
cmp
iret
xor
ds
test
cmp
cli
inc
jne
lcall
xlat
xchg
ret
jg
push
jmp
shrl
xlat
xchg
push
or
xchg
xchg
push
aaa
test
loop
push
stos
and
ja
ja
push
bound
aas
ja
sub
and
sarl
call
jo
inc
cmpsb
dec
imul
jbe
adc
jl
xor
and
dec
adc
scas
shrb
les
mov
pop
xchg
dec
idiv
sahf
out
or
mov
xchg
in
popa
add
push
notb
push
cmpsl
mov
mov
jecxz
push
clc
and
shr
inc
mov
xchg
sub
push
jl
and
iret
aam
inc
scas
inc
sbb
in
cmc
push
pop
jns
insb
lods
jge
leave
and
bound
add
and
gs
shrl
add
add
push
testb
xlat
lods
xor
dec
inc
add
mov
test
lcall
xlat
mov
cmp
add
loopne
inc
pop
xor
sub
and
add
jmp
inc
js
mov
and
and
outsl
repz
jecxz
bound
imul
adc
push
adc
mov
mov
pushl
outsb
pop
xor
jmp
sub
xchg
mov
dec
dec
xchg
mov
les
and
xlat
mov
inc
jle
out
mov
fsubrl
pop
cmp
inc
sub
mov
aaa
push
shlb
enter
ret
mov
or
dec
mov
mov
mov
cmp
add
adc
xchg
mov
inc
lret
cmp
fwait
cwtl
mov
cmp
stos
int3
adc
xor
std
pop
cmp
xor
flds
sbb
jge
nop
lods
fiadds
test
adc
hlt
or
add
shrl
dec
test
sbb
mov
pop
dec
pop
xchg
push
mov
cmp
mov
out
mov
adc
mov
dec
add
in
push
inc
mov
xchg
mov
test
lret
lock
lcall
xor
dec
mov
cmp
sub
xor
test
mov
ret
outsl
adcl
mov
cmc
gs
inc
cmp
push
lcall
pusha
jecxz
out
pop
mov
fmul
adc
sub
xor
int
test
mov
cli
cs
push
add
push
adc
pop
movsl
movsb
repnz
insl
rcrl
repz
inc
jp
insb
mov
pop
adc
call
pusha
shrb
inc
leave
insl
sbb
mov
xchg
sub
int3
mov
mov
daa
sti
add
daa
out
movsl
pop
xor
addr16
and
inc
jbe
fistpl
pop
lea
sahf
out
arpl
repz
insl
out
mov
mov
sub
addl
and
jecxz
mov
cmp
flds
out
cmp
rorl
pop
xor
sub
mov
mov
dec
jecxz
mov
out
fimull
and
scas
jp
pop
mov
mov
mov
and
std
adc
lret
ss
repz
aam
add
sbb
jno
xor
sbb
loopne
cmpsl
push
addl
cli
movsb
dec
fidivs
jg
xchg
insl
pushl
inc
adc
out
cmpl
cs
jnp
pop
pop
pop
nop
loopne
sbb
cmpsb
dec
mov
dec
mov
pop
cmp
jae
cmp
mov
cmc
js
in
in
mov
ljmp
inc
mov
adc
lds
movsb
mov
fimuls
pop
rorl
in
mov
or
pop
lret
dec
sahf
test
ja
sub
or
fcompl
cli
push
add
push
lock
in
out
bound
dec
cltd
xlat
std
inc
bound
lods
insb
push
mov
push
paddsw
adc
sub
mov
jecxz
rcrl
in
fisttps
mov
xor
xchg
adc
lahf
cld
cmp
jne
xor
pop
pusha
push
cmpsb
cld
mov
pop
mov
or
rep
pushf
stc
inc
jns
push
xchg
mov
pop
sub
xor
jb
dec
add
jge
out
fldl
sarl
mov
out
or
sbb
lcall
loope
push
inc
jmp
icebp
push
mov
loope
hlt
repz
adc
push
test
leave
push
pop
lods
sub
test
mov
pop
push
add
das
les
pop
add
xchg
call
cmpsb
ud0
jae
out
fdivrs
jecxz
xor
mov
ja
lret
popa
fwait
mov
cmc
mov
add
push
mov
adc
imul
inc
nop
aam
lcall
jg
out
xchg
pusha
inc
sub
dec
jo
mov
jae
inc
dec
rcrl
add
sub
popa
cli
sbb
daa
popf
adc
in
pushf
lret
mov
cmpsl
cmp
in
xor
andl
mov
sbb
ficomps
pop
stos
xlat
pop
cwtl
mov
leave
inc
add
movsl
fmull
std
jmp
repnz
add
mov
xchg
pop
movsb
pop
inc
divb
fwait
cli
test
push
clc
ficompl
dec
cmpsb
sbb
inc
mov
push
stos
push
inc
je
pop
push
icebp
mov
mov
aam
pushf
push
repnz
cmc
aas
dec
inc
or
mov
mov
in
jl
sbb
and
xchg
lcall
pop
adcl
xchg
lds
adc
mov
push
inc
aaa
stos
std
pop
addr16
out
icebp
clc
mov
jae
adc
popa
fs
lahf
xor
jmp
and
xlat
jo
ds
xor
sbb
push
xor
or
cli
push
fs
cmpsl
xor
push
testl
out
outsb
lock
sbb
fistl
bound
mov
fldt
mov
pop
xorl
push
int3
loopne
aam
push
test
cvtps2pd
push
imul
lret
clc
dec
popa
ljmp
mov
or
cmpsb
inc
xchg
xlat
mov
andb
pop
stos
sub
or
cmpl
stos
ret
cli
out
fsub
fmul
or
in
mov
jecxz
ffreep
adc
jl
cli
sbb
mov
push
pop
ds
xchg
call
out
shrb
dec
lahf
cld
xor
leave
dec
mov
insl
das
fldenv
inc
subl
test
pmullw
jns
mov
inc
loop
inc
sub
cs
movsb
out
sbb
add
gs
mov
icebp
hlt
mov
xor
push
mov
dec
xchg
sub
inc
cs
xor
jnp
mov
icebp
out
mov
or
in
inc
pop
roll
push
mov
add
pop
cli
mov
cmp
imul
call
aaa
dec
sub
inc
loop
andl
pop
cmp
aad
jg
dec
mov
out
out
cli
daa
leave
jge
push
or
xor
mov
fisubrs
xchg
clc
mull
pop
lea
shlb
jg
stc
ficoms
inc
and
adc
leave
push
imul
add
jno
add
mov
mov
loopne
push
repz
pop
idiv
sub
dec
into
fincstp
mov
push
dec
fisttpl
sbb
or
add
and
incl
imul
adc
add
mov
loope
scas
or
mov
addb
shll
sub
mov
push
push
mov
sbb
mov
push
mov
xchg
and
fsubrs
inc
lds
push
push
mov
popa
lods
in
lahf
inc
pop
repz
push
cs
pop
scas
out
dec
xchg
pop
ficompl
jo
fdivr
mulb
iret
lea
pop
cwtl
je
dec
je
xor
xchg
in
in
inc
push
imul
xchg
adc
rcl
gs
sbbl
mov
movsl
fimuls
jg
mov
rcr
jnp
xor
mov
gs
xor
test
push
incb
ljmp
repnz
xchg
loopne
jne
jge
sti
and
xor
inc
xchg
cmpsb
aaa
and
lcall
int3
mov
ret
mov
xchg
lods
dec
xchg
mov
add
sbb
fimuls
cmp
push
into
movsb
xor
mov
or
cmp
pusha
out
mov
pop
je
pop
std
rorb
hlt
and
xor
mov
inc
fdivrl
sbbb
push
pop
shl
inc
clc
xchg
aas
fcmovu
sub
mov
xor
subb
inc
fsub
dec
xchg
cmp
xor
dec
adc
fstps
dec
in
mov
adc
testb
scas
pop
inc
cld
mov
and
cmp
add
inc
push
cltd
repnz
outsl
andl
mov
mov
jne
aas
push
psubusb
sub
pushf
xor
sbb
and
cmpsb
test
xchg
dec
push
jo
arpl
xlat
je
orl
movsb
jo
mov
xor
stc
ret
push
loop
push
leave
movb
adc
lds
cmp
push
dec
in
sbb
shlb
cli
insb
imull
loopne
gs
push
jno
add
rclb
sbb
add
js
gs
sbb
pushf
leave
loope
and
and
inc
arpl
insl
fcoms
movsl
pop
cmp
jns
mov
js
sub
sbb
mov
and
into
adc
mov
adc
insl
and
rclb
xor
push
xchg
add
lahf
pop
sbb
adc
nop
mov
mov
out
daa
rcll
xchg
ljmp
mov
pop
push
daa
sbb
xchg
sub
xchg
sahf
out
js
or
cmp
adc
mov
ja
dec
inc
icebp
push
lahf
adc
jg
cltd
cmpsl
call
cmc
shrl
test
cmp
pushf
je
shr
dec
mov
es
xor
mov
push
xchg
mov
imul
xchg
cs
adcl
mov
cmp
imul
cmc
les
mov
sub
cld
push
out
scas
lds
push
mov
icebp
push
sub
js
popf
xchg
cmp
movsl
es
xor
fcompl
cmp
imul
insb
divb
roll
enter
mov
xor
push
push
sbb
pop
dec
cwtl
sub
in
push
loope
bound
fdivrs
and
loopne
mov
loopne
pop
int
pop
cld
xchg
shl
daa
cmpl
mov
pop
pop
movsb
jge
cmp
hlt
add
enter
rcrl
pop
or
lret
imul
call
inc
ljmp
sbb
add
filds
xchg
cmc
mov
scas
cmp
aad
push
mov
mov
jmp
lfs
stos
cmpsl
jo
mov
mov
cmp
xor
or
jb
mov
and
jns
and
jae
mov
fcmovbe
sub
add
lret
jb
sahf
sub
gs
jecxz
cmp
mov
adcb
pop
pop
lods
push
cmp
sbb
cmp
jge
mov
aaa
add
stos
sarb
pop
pop
or
aas
mov
inc
inc
cmp
hlt
mov
sbb
cmp
hlt
and
rorl
imul
inc
out
mov
adc
data16
or
jmp
ljmp
mov
cmp
cs
mov
loopne
call
int
push
je
mov
icebp
test
mov
xchg
stc
fidivrs
add
jl
xchg
orl
jbe
cmpsl
adc
data16
add
int3
fisttpl
xchg
xor
and
insb
test
adc
shl
stc
jl
loopne
aam
push
push
jmp
pop
mov
sub
in
les
or
insl
mov
fsubrs
cltd
or
xor
test
sbb
in
mov
jae
int3
sbb
sbb
iret
mov
mov
push
and
add
inc
xchg
pop
push
movsl
pop
stos
adc
into
xor
pushf
das
pop
out
cmp
in
addb
cmp
or
outsb
out
adc
in
aad
insl
loop
jmp
out
mov
xor
clc
and
lahf
pop
ljmp
les
lret
data16
push
push
shlb
insl
fdiv
add
mov
sub
iret
or
mov
push
sbb
rorb
jg
test
cmc
jbe
mov
sub
push
lds
xchg
push
dec
nop
or
mov
bnd
fstpl
das
cmpsl
lret
xchg
push
shrl
clc
mov
out
adc
rcrb
jnp
cmp
mov
lods
sbb
gs
movsl
arpl
sti
fstl
inc
je
aad
sbb
jmp
and
inc
push
pop
xchg
dec
dec
sub
sbb
pop
frstor
in
fwait
pop
das
add
popa
ja
sti
add
sarl
jne
out
in
and
push
dec
mov
decb
scas
xchg
enter
clc
inc
or
jae
mov
repnz
fistps
cld
test
dec
lods
into
push
mov
xchg
or
push
jmp
cmpb
jae
push
addl
testl
pop
pop
or
jbe
inc
repnz
pop
cmp
xlat
in
daa
and
mov
pusha
mov
jo
add
add
rcrl
mov
xchg
jg
outsb
sbb
mulb
sub
mov
pop
xor
daa
cld
stc
cmp
pop
xor
imul
jmp
pop
add
daa
jl
imul
push
stos
push
je
jne
push
push
cs
orb
dec
daa
dec
adc
mov
leave
add
sahf
cli
dec
enter
in
js
outsl
fs
imul
std
insb
mov
push
mov
jne
lea
outsl
je
xchg
sti
jae
rcr
xor
push
fbstp
add
mov
addr16
repnz
cmp
and
inc
in
stos
mov
movsb
aaa
or
jg
punpckldq
adc
lods
leave
or
add
xchg
xor
sbb
into
pop
movsl
jnp
dec
out
pop
int
mov
and
lret
pushf
mov
push
in
pop
lahf
in
pop
mull
cmc
popf
pushl
cmpsl
xchg
sbb
lods
frstor
inc
push
dec
jno
stos
push
incb
cmp
aad
cld
adc
es
cs
mov
lock
in
xor
jo
idivl
mov
test
or
ds
sbb
ret
and
mov
fsub
call
jecxz
ficoms
cs
cltd
or
xor
adc
mov
push
lcall
or
sbb
push
jecxz
fnsave
pusha
unpcklps
decl
pop
dec
adc
adc
test
fs
cli
jg
jmp
mov
je
sbb
insb
popf
mov
or
jl
aas
test
push
jg
adc
or
in
aas
add
out
add
jecxz
adc
sub
mov
push
mov
pop
adcb
subb
lock
mov
fsubp
mov
and
cmp
and
mov
inc
push
mov
sbb
push
cltd
xchg
fwait
adc
jle
les
lahf
pusha
add
subb
ds
jns
test
sub
jbe
in
lret
shrb
sbb
and
and
fistps
mov
jp
jl
jmp
in
and
sbb
js
iret
xchg
arpl
call
jb
shlb
inc
jno
test
jbe
inc
dec
cmp
dec
jle
adc
pop
fstps
mov
dec
mov
sub
rclb
or
test
pminsw
scas
push
roll
sbb
mov
and
xor
into
fwait
xor
out
test
cmp
pop
jae
in
imul
push
int3
cwtl
lret
pop
sarb
add
cld
addr16
jp
push
pop
jmp
decb
and
lret
adc
dec
test
rep
xor
les
pushf
mov
or
cmpsl
icebp
xor
dec
int3
mov
sub
movsb
cmp
and
stos
flds
mov
ljmp
or
lds
mov
add
es
cwtl
pop
cli
int
or
push
sahf
mov
out
mov
pop
inc
mov
int
xlat
mov
lock
das
ret
push
gs
enter
cmp
cltd
cld
jbe
jno
idivb
insl
into
mov
rclb
or
sbb
in
and
call
mov
jle
cmp
xor
mov
jbe
xchg
nop
or
push
and
xchg
das
outsb
ret
imul
add
std
mov
ljmp
push
dec
or
sub
dec
shll
sub
loope
push
inc
das
adc
out
mov
adc
sub
pop
test
inc
pop
int
mov
push
addl
scas
jl
mov
outsb
dec
dec
sub
test
cmp
sub
imul
push
repz
adc
push
fldl
ret
or
mov
push
enter
xor
bnd
bnd
notl
sbb
sbb
stos
adc
push
lods
fildll
into
inc
popf
cli
insb
insb
jmp
in
cmp
pop
sub
sahf
in
pop
xor
rcrl
je
xor
rclb
sub
iret
shld
pop
hlt
dec
pop
adc
nop
xchg
daa
sahf
ds
mov
inc
loope
mov
add
negl
add
orb
shlb
aaa
out
aaa
scas
sub
mov
cmp
adc
xor
lods
psllq
cmp
orl
lea
repz
xchg
xchg
mulb
hlt
loop
repnz
pop
jg
mov
shl
pop
das
cmp
iret
ret
hlt
shrl
jp
jns
icebp
adc
mov
aam
mov
or
nop
sti
or
pop
adc
mov
lods
pop
mov
out
jg
cltd
sbb
jmp
lea
adc
repnz
cmc
jp
fcoml
rolb
push
xchg
dec
jb
xchg
hlt
cltd
mov
in
sub
aas
mov
dec
ret
push
out
loope
cltd
test
mov
decb
mov
jge
out
pop
lock
adc
cli
insl
test
inc
push
js
scas
aam
jnp
lods
loopne
push
jecxz
ja
ds
adc
js
push
mov
xor
testl
or
adc
stc
push
pusha
sbb
cmpsl
xchg
mov
cld
or
mov
sub
or
pop
push
push
sahf
fcom
mov
xchg
cmp
das
sar
fwait
push
imul
ss
icebp
add
lods
out
out
mov
mov
xchg
or
jg
mov
mov
push
jecxz
dec
fmulp
gs
int
mov
xchg
stos
cmpsb
pop
les
xlat
pop
data16
aad
cmpsl
jl
ss
xchg
xorl
sbb
ljmp
test
pop
fs
sahf
ja
cli
pop
pushf
bound
ss
insl
add
and
cmp
jmp
outsb
mul
mov
lock
xchg
inc
pusha
aaa
pop
pop
sbb
cmc
test
adc
test
les
js
fldt
outsl
inc
jle
mov
addl
jge
into
dec
cmp
repz
sub
sarl
and
addl
mov
mov
out
iret
add
xchg
rclb
call
jmp
jle
js
aam
fisubl
add
add
stc
lods
in
test
shll
mov
and
xchg
data16
rclb
sbb
arpl
sahf
mov
pusha
scas
cmp
xchg
cmc
pop
imul
push
jae
adc
sub
scas
jg
sub
je
sbb
addr16
popa
mov
outsb
jl
dec
std
adc
jbe
sarl
test
sub
ret
xchg
push
loop
inc
push
push
inc
popa
inc
lds
ss
mov
bound
ficoms
repnz
cld
jnp
and
insb
test
and
sub
test
add
mov
and
dec
outsl
mov
push
movsl
mov
mov
pop
jne
jp
dec
jo
dec
dec
adcl
in
cmp
mov
cs
inc
sbb
lds
dec
add
int3
mov
xor
inc
movsb
je
mov
xchg
out
or
imul
pop
adc
and
adc
add
into
xchg
fisubs
testb
fists
pop
mov
ss
xchg
loopne
in
popa
loopne
adc
loope
mov
xor
dec
popf
lret
add
mov
sahf
pushf
cmp
push
push
pop
ud1
pop
push
insl
jbe
out
adc
or
mov
cld
push
bound
cli
mov
add
scas
pop
in
outsb
insl
dec
cmc
in
and
add
fwait
cmp
dec
iret
jle
pop
pop
icebp
cmp
sbb
dec
mov
adc
icebp
out
sub
int
dec
imul
bound
imul
mov
xor
fbstp
cmp
mov
push
aad
add
fs
dec
mov
add
fwait
cmp
fisubrl
push
shlb
jecxz
adc
push
loope
inc
insb
scas
cmp
dec
out
mov
add
mov
push
ss
call
jmp
push
daa
pop
cltd
push
mov
std
adc
cmp
int
adc
shr
push
rcrb
fs
xor
mov
xor
fstpt
sbb
and
mov
fisttps
ret
sti
int3
xchg
dec
pop
cmp
mov
mov
iret
rcrb
jno
cs
dec
inc
xchg
xchg
mov
sbb
pop
aad
es
jae
mov
pop
incl
ret
mov
jo
imul
dec
and
arpl
jl
or
pusha
into
cmp
arpl
test
sbb
xor
pop
repz
test
or
fdivrs
sub
push
faddl
or
sahf
lds
mov
add
pop
jb
out
adc
pop
nop
loopne
mov
inc
dec
subl
inc
hlt
out
mov
ja
pop
stos
push
out
mov
nop
loope
mulb
add
scas
pushf
mov
shrb
pop
dec
popf
pop
fs
fsubr
cmp
dec
add
pop
push
jp
mov
repnz
xor
xchg
fdiv
or
xor
inc
jp
aaa
jnp,pt
dec
xlat
mov
ja
fsts
mov
mov
loop
bnd
inc
add
mov
xchg
mov
ja
pop
leave
leave
pop
in
sbbl
xchg
jg
pop
mov
movsb
sbb
xchg
pop
shrl
sub
sbbb
icebp
lods
add
sbb
icebp
xchg
orl
andl
inc
push
cmp
hlt
push
test
lcall
push
loop
outsl
mov
jnp
mov
out
jne
push
inc
cmp
pop
mov
cmp
outsb
add
loope
stos
pop
stc
stos
in
inc
pop
aaa
mov
add
repz
sub
int
and
outsl
into
pop
jg
out
adc
cltd
push
dec
mov
fwait
inc
ds
std
in
in
cltd
inc
mov
int3
sub
clc
inc
leave
fucomip
jp
and
in
ljmp
or
and
lret
add
sbb
xor
stos
jecxz
mov
push
or
scas
ja
lret
sbb
push
imul
idivl
mov
sub
aam
fs
rorl
adc
cmpsl
jae
mov
pop
cmc
fidivrl
mov
or
jns
loope
jae
xor
shrb
mov
and
sbb
cld
sub
mov
lds
jno
jmp
xchg
jmp
xchg
jb
push
xor
mov
arpl
xchg
lret
xchg
sub
gs
fwait
sub
testb
ror
cmp
lds
ja
inc
loope
mov
movsb
lret
ficompl
cmp
loop
pusha
insl
ds
dec
rorb
xchg
push
lea
mov
xor
xor
mov
mov
adc
arpl
add
pop
jnp
ret
pop
sbbl
out
clc
into
stc
je
dec
mov
xchg
pop
cwtl
leave
mov
lock
out
xchg
and
mov
mov
jg
loope
ljmp
out
mov
je
clc
lahf
cli
scas
arpl
data16
scas
mov
or
lahf
and
xor
xchg
mov
sbb
es
xchg
push
rolb
pop
imulb
mov
jns
add
mov
dec
mulb
movsb
jecxz
jmp
pop
inc
adc
jb
bound
orl
je
movsb
call
jbe
sbb
ret
loope
jg
xor
sbb
sbb
push
adc
lahf
ljmp
je
clc
aad
cmp
jnp
and
insl
xor
push
mov
sub
ret
jge
mov
push
mov
ja
mov
pusha
cmpsl
sbb
pop
aaa
mov
stos
mov
sub
repnz
lret
rorl
xorb
lea
mov
jp
xchg
lea
or
mov
sti
push
stos
dec
mov
push
jmp
cltd
mov
jg
and
mov
cmp
cmp
xchg
adc
movsl
lret
or
es
popf
push
inc
cmpsl
subb
mov
mov
or
imul
in
jge
fldcw
cld
loope
dec
sahf
mov
dec
movsb
stc
sub
mov
push
pop
iret
cmp
push
insl
pop
outsb
lds
flds
add
and
jecxz
arpl
sub
hlt
lea
add
add
mov
cmp
daa
out
xor
pop
pop
cwtl
jb
inc
xor
jo
jno
call
sahf
ret
jb
sarl
jmp
mov
push
pop
testb
xchg
pop
jb
ret
inc
fildl
add
xor
fs
pop
lret
and
lock
les
clc
push
dec
pusha
ja
xor
fistpll
or
mov
or
lret
and
in
cli
and
and
dec
int3
cmp
addb
test
mov
loope
sub
sub
jnp
lret
arpl
shll
push
xor
lret
test
jmp
in
stos
add
mov
stos
adc
dec
mov
sarl
leave
in
inc
int3
rcrl
divl
cs
das
repz
subb
imul
lret
incl
dec
fistl
inc
sarb
xchg
xor
aaa
dec
outsl
lock
inc
push
dec
mov
test
dec
lock
jo
mov
inc
lcall
imul
sbbl
mov
movsb
sub
fcompl
inc
hlt
pop
jp
mov
out
out
rcll
int
dec
or
add
gs
pop
outsl
jo
mov
cmc
or
stos
xorps
jmp
je
dec
hlt
push
mov
out
adc
cs
ljmp
xchg
xchg
sub
inc
test
push
sbb
sub
out
mov
insb
rcr
bound
xorl
add
std
sub
mov
inc
loope
cmp
lahf
cli
icebp
stos
mov
push
or
sahf
xchg
inc
es
shrb
in
clc
imulb
cmpsl
mov
movsb
or
pusha
and
mov
int3
lahf
push
mov
cmp
mov
mov
cmp
sahf
insl
cmpsb
mov
pop
mov
lea
adc
pop
test
jg
add
cmpsb
xor
ds
xchg
add
cltd
or
ds
push
pushf
inc
jle
push
sub
mov
gs
inc
inc
sbb
mov
fsubs
add
dec
out
outsb
and
dec
jns
push
les
xor
and
jo
fdivs
mov
pop
in
mov
jae
jno
push
enter
bound
lds
pop
insl
adc
xchg
and
mov
and
jmp
fsubrl
jle
loope
js
xchg
xchg
cmpsl
jns
imul
fsts
mov
cmp
into
movsl
cmp
inc
ret
jae
jp
mov
daa
stos
in
mov
andb
js
add
jae
sub
lds
push
pop
push
jb
ret
cmp
les
stos
inc
lcall
leave
jge
adc
repnz
ret
fildl
fimull
adc
ja
lds
cmp
daa
push
mov
lock
inc
movsb
dec
jg
aaa
je
test
add
imul
push
pop
cmp
test
push
cltd
pushf
jg
or
jb
or
cltd
xchg
mov
add
push
in
add
leave
insl
lahf
cmc
inc
mov
sbb
imul
cmp
pop
test
aam
imul
jge
mov
xlat
movsl
jp
imul
fcompp
mov
movsl
pop
inc
inc
shl
fs
sahf
sub
xchg
dec
push
push
mov
cmp
jno
sahf
cmp
mov
xor
xor
repnz
sti
cmpsl
pop
jo
scas
adc
mov
pop
mov
out
mov
push
xchg
mov
int3
mov
fcmovnbe
out
int
xchg
cwtl
js
sub
mov
inc
shlb
mov
xor
push
lock
cmp
xor
jmp
mov
pushl
inc
push
rcll
mov
lret
das
test
inc
mov
mov
adc
rorb
jge
cmovp
mov
mov
shrb
mov
pop
lods
test
xor
push
lahf
mov
mov
mov
jno
outsl
in
inc
sbbb
lahf
hlt
pushf
push
call
add
dec
jl
mov
mov
bnd
xchg
out
or
mov
lret
fldenv
inc
mov
pop
dec
sub
mov
ret
adc
ret
ret
roll
push
out
test
xchg
push
sub
mov
aas
xlat
testl
das
out
jo
jne
sub
dec
aam
popf
mov
insl
sbb
push
ss
rcr
decb
inc
js
loop
cltd
inc
mov
xchg
lods
and
pop
insb
imulb
addr16
rcrb
and
call
pop
cmp
mov
inc
rol
adc
std
ljmp
js
hlt
rolb
or
pop
sbb
out
cmpsl
aaa
and
jp
add
cmc
adc
insl
sub
jb
xchg
xchg
lea
sub
movsl
gs
mov
push
pop
rorb
pop
rorb
inc
cmp
sti
cltd
xlat
push
rol
and
sbb
cwtl
jb
scas
sbb
sub
jp
push
ds
inc
pcmpeqw
cmp
hlt
mov
sbbl
out
xchg
jo
and
cmp
push
pusha
and
xor
mov
adc
pusha
cli
jne
insl
shrb
and
add
or
fidivs
in
cmp
dec
cwtl
pop
sub
pop
pop
fs
dec
sbb
mov
scas
sub
pushf
loopne
addb
mov
push
lods
es
movsl
sbbb
movsl
sahf
jae
sbb
mov
aam
push
out
inc
cmc
lods
push
push
fcmovne
repnz
mov
push
push
fimuls
cli
dec
push
mov
stos
xchg
pop
jns
add
movsl
in
xor
mov
or
cmpsb
add
jno
mov
push
loopne
data16
lods
or
xchg
mov
test
add
loope
jbe
pusha
inc
inc
mov
or
dec
out
addl
inc
test
mov
loopne
lahf
filds
cmc
sti
mov
mov
pop
data16
inc
in
pop
outsb
dec
cmp
and
xchg
mov
nop
jg
movsb
jge
mov
imul
inc
jl
add
es
jecxz
out
cmpsl
or
daa
ja
mov
inc
jle
dec
sbb
ss
sahf
sbb
frstpm(287
jmp
push
das
shrl
out
leave
addl
mov
cmpsl
popa
and
pop
mov
cmp
add
gs
sub
aam
fstpt
push
lahf
and
adc
repz
jecxz
xor
adc
push
adc
inc
sbb
cld
insl
mov
jge
icebp
in
fs
jno
lret
stos
cli
shll
bound
ja
pop
push
jb
stc
jmp
cld
push
xchg
add
add
shlb
dec
fcom
mov
adc
ret
sbb
pop
fistps
xchg
lahf
jne
loopne
mov
jge
arpl
mov
add
clc
lahf
stc
xlat
repnz
dec
hlt
fs
xor
pop
mov
dec
mov
pusha
adc
sbb
out
arpl
inc
stos
outsb
jecxz
dec
push
vcmpsd
mov
in
sub
shlb
imul
mov
aas
mov
adc
lcall
or
mov
lds
pop
mov
in
fstpt
scas
add
std
pand
shl
mov
pop
jle
mov
cmp
mov
les
out
jae
sub
dec
xchg
imul
add
sahf
inc
outsl
ds
scas
adc
and
loop
sub
xor
lcall
add
and
jg
cmpl
inc
test
xor
push
or
lahf
lock
popf
sbb
in
lock
pop
push
enter
xor
mov
push
addr16
xor
cwtl
or
fcompl
xor
xor
outsl
or
bound
or
out
jb
or
or
imul
mov
or
div
mov
jno
call
jne
xchg
ds
xchg
daa
outsl
dec
sub
push
test
dec
aam
or
std
bound
sti
dec
lods
and
xrelease
lret
pop
push
mov
lock
daa
mov
adc
push
iret
pop
inc
and
mov
subl
inc
dec
ret
cmp
xchg
and
rolb
dec
cmpsb
and
repnz
insb
sub
mov
lock
movsb
imul
out
jle
psubq
sub
mov
mov
xor
aas
adc
xor
cli
test
dec
pop
js
sub
jmpw
mov
or
testl
pop
fs
iret
and
mov
mov
sahf
mov
enter
les
arpl
sub
sbb
ficoml
std
add
xchg
sub
out
push
pusha
or
pop
clc
adc
inc
inc
shl
ljmp
mov
addb
add
fistpl
pop
jg
lcall
mov
jmp
lods
xchg
lock
sbb
and
adc
sub
dec
in
inc
and
in
cltd
jns
imul
out
adc
inc
xchg
jmp
dec
jl
jne,pn
jno
lret
ret
divl
xchg
adc
call
dec
mov
or
ljmp
push
dec
xchg
mov
dec
lret
fstpt
fincstp
mov
sub
push
dec
mov
fcomip
push
adc
rolb
iret
sbb
into
lret
rorb
aas
fwait
or
popf
or
loop
xchg
mov
cmp
ret
push
cmpsl
pop
add
in
xchg
mov
xorb
pop
ljmp
mov
loop
jge
xchg
sahf
mov
jnp
cmp
mov
sar
iret
inc
ret
sub
sti
movsl
xchg
cmp
cmp
jb
je
aas
pop
push
mov
dec
or
xchg
add
popf
cmpsb
popf
xchg
mov
aam
shlb
scas
or
mov
pop
inc
mov
mov
adc
cmp
xchg
jle
cltd
sbb
loopne
inc
push
iret
aas
int3
push
shrl
test
inc
out
es
xchg
adc
jg
sbb
orb
arpl
pop
jp
ret
bound
cmp
fs
dec
sbb
adc
jne
test
pop
jo
xchg
pop
cmpsl
sub
mov
insl
outsl
dec
in
pop
sbb
xor
nop
mov
mov
mov
inc
lods
movsl
fsts
lea
icebp
inc
push
mov
ret
packsswb
iret
aad
adc
xor
mov
pop
inc
dec
leave
mov
jle
arpl
imul
mov
enter
or
in
rcrl
pop
shrb
jecxz
cmpsb
jno
arpl
in
aaa
test
fcmovnu
cs
xchg
xorl
lcall
push
adc
movsb
jge
xchg
repnz
xlat
mov
dec
sub
cwtl
sbb
cli
jp
inc
out
mov
clc
repnz
and
les
movsb
lods
roll
ds
jns
sbb
mov
dec
das
mov
jp
mov
sahf
test
lcall
fs
pop
flds
xchg
push
cs
ljmp
scas
adc
rolb
cmp
ljmp
mov
mov
fldt
mov
loope
fstps
or
cwtl
add
idivb
fucomi
add
or
mov
arpl
nop
call
imul
mov
popa
adc
fwait
dec
test
fcmovbe
push
sub
mov
outsl
je
outsb
out
push
push
jno
mov
std
inc
jmp
push
jne
test
dec
test
ljmp
jno
repz
clc
cmp
pop
cmp
fidivrs
pop
sbb
pop
push
sbb
fnstcw
and
ret
and
inc
pop
pusha
cmp
jg
dec
out
repz
jmp
mov
add
cmp
adc
or
loopne
mov
stc
push
mov
in
mov
cli
push
push
cmpsb
mov
add
inc
andl
lock
lds
rcll
xchg
sahf
adc
cmp
push
adc
rclb
sub
repnz
sti
lahf
cmc
push
jge
pop
inc
jne
jl
mov
cmp
ds
inc
shrb
sub
xchg
add
stos
es
sbb
fs
pushf
bound
lea
pop
test
leave
push
cmp
jo
xchg
movsb
or
sbb
int3
fwait
push
daa
cld
ss
shl
dec
mov
lcall
or
movl
cli
xlat
xchg
ret
jp
lods
daa
bound
and
xlat
scas
jecxz
inc
jge
shl
loope
jne
push
das
sub
ffreep
jle
jo
lret
pop
stc
pop
pop
fs
or
cmp
inc
js
out
idiv
aaa
test
pop
in
and
shll
jmp
mov
imul
jecxz
mov
adc
lds
mov
fstps
add
inc
inc
nop
xchg
or
repz
adc
push
dec
or
push
fcmovbe
sbb
push
outsb
pop
add
mov
stc
mov
push
mull
cmp
sbb
in
pop
push
and
js
stos
push
lea
into
out
popf
adc
mov
add
add
mov
pushf
fisubs
fnsave
je
and
lcall
pop
cwtl
pusha
mov
mov
sub
popa
xorl
sub
pop
xchg
stos
inc
sbb
movsb
and
in
sar
xor
inc
dec
in
jb
mov
imul
xchg
gs
xor
mov
test
popa
push
mov
out
adc
nop
adc
xor
test
mov
cwtl
rcrl
adc
stc
movsl
lock
mov
repz
icebp
cld
mov
cmp
popa
dec
mov
add
cs
jl
ret
cmp
imul
sbb
jns
lahf
jnp
xor
inc
data16
adc
fisubs
in
mov
mov
sahf
mov
lcallw
mov
popf
movsl
jmp
test
or
mov
mov
jno
movsb
adc
dec
movsb
adc
movsb
in
fistpl
pusha
dec
out
sub
cmc
jl
fildl
jno
sbb
or
jmp
add
sbb
lret
or
jnp
push
pop
into
loop
ror
or
dec
in
hlt
outsl
mov
bound
dec
sub
nop
movsl
lods
mov
lret
adc
out
mov
imull
jle
dec
cmc
sub
rcrl
push
rcll
xchg
dec
inc
mov
nop
xor
dec
out
loopne
scas
fwait
push
cmpsl
sbb
mov
mov
in
sar
xor
ss
xchg
cld
mov
cltd
repz
lock
mov
jb
push
addr16
sbb
pop
mov
out
dec
movsb
lock
jns
lock
adc
faddl
pop
fadd
mov
lcall
movsb
adcb
pop
pusha
push
mov
push
mov
ret
clc
out
jecxz
sub
cld
into
into
std
push
mov
jb
xor
jb
jbe
cld
faddl
mov
punpckhwd
ss
push
xchg
mov
call
sahf
addb
sbbl
and
adc
test
call
in
dec
fwait
cwtl
sbb
fnstcw
test
ja
aas
cmp
adc
xchg
pusha
dec
cmp
mov
pop
imul
add
test
xchg
pop
out
clc
add
fdivr
mov
out
jbe
inc
idivb
sub
rcl
enter
jp
ds
les
xchg
xorb
or
ja
mov
ja
push
push
out
inc
pop
xor
lods
jne
mov
push
ror
add
mov
jge
add
jmp
xlat
adc
out
jbe
sub
lods
mov
lock
add
es
mov
jno
dec
mov
pusha
adc
inc
leave
mov
pop
sbb
jbe
mov
mov
mov
aaa
loop
mov
inc
xchg
idivl
cmp
jle
xor
mov
lock
lods
cld
lahf
xor
dec
sub
mov
pushf
jae
pop
out
xchg
sarl
dec
xor
cli
loopne
dec
cmc
mov
lret
pusha
xor
mov
push
shrl
pop
mov
loopne
test
jns
lods
add
xchg
pusha
arpl
dec
es
test
insb
cmp
rorb
cmp
je
mov
pushf
es
sbb
orl
movsb
sub
in
sub
jnp
xchg
scas
cmpsl
mov
aas
je
jle
in
add
daa
cmc
sbb
orb
push
arpl
xchg
repz
sbb
xchg
xor
pop
in
and
jne
jecxz
and
in
push
in
pop
dec
fwait
push
into
loope
std
push
lock
stos
sbb
xor
outsb
mov
addr16
jmp
mov
lods
lods
mov
out
or
mov
inc
sub
fwait
add
bsr
mov
sbb
sub
push
mov
or
daa
outsl
jb,pt
popf
pop
sbbb
jle
popa
pop
or
jbe
rolb
dec
arpl
xchg
sbb
sti
or
icebp
cmpsl
jmp
xorl
add
xor
sbb
outsb
inc
xchg
or
shr
loope
cwtl
lcall
or
push
dec
imul
testl
inc
add
pop
xchg
inc
jo
rcr
xor
test
add
lock
mov
out
stos
mov
or
adc
outsl
or
lods
or
jae
and
dec
sbb
xor
lds
jmp
pop
pop
mov
xor
mov
scas
insl
add
and
imul
jle
andl
enter
sub
cli
out
lock
mov
fsubrp
mov
jbe
aaa
mov
sbb
mov
xor
cmp
mov
xchg
xchg
mov
push
sbb
shrl
dec
xor
xor
fwait
popa
jmp
in
pop
xchg
aad
fsubl
and
jmp
dec
les
insb
in
pop
call
fidivs
and
cmp
jbe
into
rcll
inc
aas
adc
dec
imul
dec
dec
movsb
mov
lods
lds
loope
xchg
sub
dec
repnz
and
test
jl
push
adc
xchg
push
test
jmp
mov
cmp
addr16
sbb
test
dec
call
mov
lahf
lods
pop
dec
sahf
push
inc
fadd
rclb
pop
inc
mov
mov
nop
insl
call
pop
js
pop
imul
fcmovu
sub
rcll
mov
in
repz
orl
outsl
xchg
imul
out
dec
in
mov
roll
fcmovne
mov
sarb
dec
xor
mov
lahf
jns
pusha
mov
dec
push
pop
imul
leave
xor
cltd
lods
andl
pop
outsl
or
insb
adc
scas
mov
inc
mov
cmp
lcall
push
fwait
lcall
out
sbb
dec
and
hlt
fmuls
mov
es
and
andb
sbb
popa
test
aad
testl
sub
mov
add
xchg
sbb
xchg
pop
lods
pop
std
mov
add
lahf
fldt
mov
movsl
push
bnd
sub
int3
jne
lret
xlat
inc
mov
stos
repz
loopne
insl
pop
in
fdivs
hlt
ljmp
pop
loopne
out
test
dec
das
add
sub
pop
sti
mov
ds
ret
sarb
pop
add
dec
aaa
shlb
push
adc
sub
xchg
lcall
push
add
xor
pop
shrl
shll
mov
sub
or
iret
rolb
jmp
mov
int
gs
mov
incb
xchg
loop
dec
stos
aad
icebp
test
jns
mov
popf
inc
pop
push
add
jmp
je
cltd
sahf
cmpsl
inc
bnd
loopne
cmovbe
movsl
dec
ja
dec
sahf
mov
das
mov
adc
jnp
sub
fidivs
das
cld
loop
mov
dec
adc
dec
insl
aad
lret
in
or
xchg
lahf
xor
shl
push
lea
mov
ss
in
push
aas
into
xor
popa
pop
pop
and
sti
nop
divl
lahf
push
dec
scas
insb
inc
pop
jne
mov
fldcw
adc
out
push
jne
popa
cli
adc
mov
add
aaa
add
sahf
adc
xor
mov
dec
add
loop
loope
jbe
sbb
and
lret
adc
jg
xchg
aas
push
adc
cltd
and
pop
divl
aas
hlt
and
je
mov
push
inc
into
jae
sbb
sub
ss
mov
fsubr
data16
ffreep
movsb
js
cs
mov
ret
pushf
cmpsb
jge
and
js
or
pop
fwait
lahf
inc
jl
or
mov
test
bound
dec
maskmovq
mull
in
xor
sahf
decl
fistl
fldenv
out
fwait
bound
sbb
test
repz
jmp
insb
test
sub
sbb
sbb
sti
in
jmp
lods
and
lods
add
fcoml
lods
stc
cli
dec
flds
repz
out
mov
jno
clc
aad
and
adc
push
fsts
imul
jbe
mov
lds
leave
and
jmp
inc
jb
mov
inc
int3
mov
imul
mov
sbb
imul
and
xchg
in
mov
xchg
pop
push
lea
cmp
clc
mov
stos
mov
inc
sti
sbb
dec
pusha
pop
ret
icebp
lock
mov
out
inc
xlat
inc
mov
call
je
sarb
lea
int
mov
pop
add
add
mov
mov
icebp
mov
mov
jne
outsb
pop
push
dec
adcb
cwtl
gs
jge
test
mov
mov
sbb
rcr
ljmp
fs
mov
xor
xchg
xchg
mov
ja
dec
idivl
cmp
fmull
insb
rcr
inc
adcb
mov
dec
loopne
data16
pop
sub
or
daa
or
std
inc
adc
add
rolb
andl
out
addr16
adc
inc
dec
add
dec
mov
aas
out
sub
inc
add
mov
call
jne
stos
lcall
sub
sbb
ljmp
jno
sbb
aaa
je
and
and
fwait
test
cli
jnp
das
and
pop
addr16
mov
lods
inc
dec
mov
cltd
mov
sbb
pop
sub
repnz
fwait
sub
inc
mov
sti
lea
nop
dec
inc
cmp
cmpsl
sbb
pop
jg
das
cwtl
jl
fstpl
nop
fstp
jb
pop
ror
and
xlat
dec
xchg
movsl
stos
lret
dec
push
xor
dec
jp
iret
and
pop
shll
add
sbb
lea
test
je
and
adc
xchg
idivl
in
mov
cmp
lock
add
cmp
popf
loopne
xchg
cs
or
stos
lock
inc
and
and
mov
push
mov
ret
cmp
lcall
jmp
es
dec
testl
cmp
inc
jb
or
rclb
jb
mov
out
sbb
adcb
fcompl
mov
rcr
hlt
jecxz
adc
rclb
push
mov
xchg
pop
pusha
jecxz
jne
push
icebp
cmp
add
repz
push
dec
lret
or
xchg
dec
mov
inc
lock
test
mov
xchg
cld
cmp
push
sbbl
jle
out
inc
jl
and
pop
sahf
or
xchg
mov
jbe
sbb
popf
ret
sbb
xor
mov
orl
pop
aaa
xchg
cwtl
aam
dec
rcrb
xchg
sub
cli
jecxz
add
rcr
decl
cwtl
aaa
sti
mov
inc
or
ret
ds
xorb
sar
repz
es
jge
dec
mov
mov
iret
leave
jg
dec
movsl
sbb
mov
out
stos
sub
jno
sbb
jbe
jo
jb
xchg
jge
lcall
mov
sbb
sbb
mov
xor
dec
fists
mov
jg
sti
call
or
into
int3
ret
push
fidivrs
xor
out
mov
mov
popf
mov
dec
leave
out
sti
outsl
or
int3
push
jbe
xlat
pushl
cmp
xchg
addb
jbe
js
xchg
std
daa
loope
push
xchg
sti
cmp
dec
fsubrs
sti
push
or
adc
sahf
lret
fs
dec
ds
inc
xchg
sbb
dec
test
jno
bound
stc
jb
push
shlb
cmp
repnz
mov
pusha
xchg
leave
inc
loopne
sub
add
int
xor
or
mov
imul
adc
add
movsb
jo
sub
vpmaxsw
and
xor
jbe
repz
mov
xlat
add
adc
ljmp
in
out
arpl
xlat
pop
loopne
push
scas
mov
fisubl
repz
mov
mov
adc
xchg
push
jns
jno
jle
and
mov
in
nop
pop
pop
jae
or
sbb
pop
sub
jbe
inc
push
lcall
sub
cld
or
push
in
or
adc
mov
mov
or
jne
xor
sub
imulb
push
xor
push
xchg
xor
adc
sahf
xchg
ret
mov
jl
addb
push
jp
sbb
xor
mov
pop
inc
pop
push
push
movsb
loop
jo
je
cmp
add
rorl
inc
jecxz
dec
sub
and
outsl
movsb
adc
loop
cmp
out
test
cmp
pop
inc
jl
aam
in
adcb
enter
and
insl
outsl
mov
xchg
shrb
push
adc
mov
cli
cmp
mov
popf
add
push
addr16
pop
ficomps
jns
stc
jge
mov
xor
ljmp
mov
dec
or
pop
ljmp
pop
addr16
filds
sbb
out
jmp
lret
xor
mov
or
bound
xchg
mov
adc
test
adc
shl
cli
rorl
imul
cmp
pop
inc
push
stc
sbb
push
push
pop
hlt
pop
xor
pushf
es
dec
nop
sub
pop
jo,pn
outsl
xchg
stos
sbb
xor
popa
ret
sbb
rolb
jg
add
pusha
mov
xor
jecxz
fmull
pop
mov
jg
cmp
out
loop
mov
shll
mov
sub
lret
mov
and
iret
inc
push
cmp
rcll
push
repnz
hlt
inc
test
cmp
shlb
std
inc
dec
add
dec
out
stos
jnp
lods
adc
sub
fldcw
or
test
aam
mov
mov
mov
or
ljmp
mov
icebp
jb
mov
rcrl
lret
gs
cmp
clc
idivb
sub
push
lret
sub
inc
or
daa
out
loope
movsl
lret
iret
loope
sarl
daa
xchg
dec
xor
dec
pop
stos
mov
sub
or
fwait
stc
or
sbb
pop
into
lret
adc
movsb
inc
xor
loope
int
sbb
dec
movsl
adc
mov
shlb
mov
adc
push
insl
aam
pusha
and
scas
mov
xor
call
jnp
add
faddl
mov
mov
add
cld
dec
sub
mov
inc
inc
add
and
ljmp
je
roll
sti
test
push
iret
jle
fwait
push
call
jp
ja
sahf
mov
je
inc
cmp
lahf
dec
or
lahf
xlat
xchg
in
pop
pop
popa
ja
dec
imul
push
loope
leave
mov
push
aaa
fcmove
pop
pop
and
xor
mov
jnp
mov
push
pop
call
js
sbb
sub
fsubrs
fmul
pop
push
push
enter
xchg
pop
test
pushf
bnd
sub
aas
daa
jl
popw
xchg
cmpb
imul
xchg
lret
and
das
mov
jmp
shrl
stc
loop
jae
xchg
xchg
mov
xor
jge
stc
test
jo
lret
jne
popa
and
adc
out
das
pop
mov
stos
aas
je
push
xor
pop
cmp
data16
mov
mov
rorl
sbb
jne
fldcw
mov
lods
mov
arpl
bound
sbb
inc
stos
cmp
insl
testl
es
and
push
xchg
push
adcb
push
in
mov
sub
push
orl
push
out
enter
bound
ret
cmpb
add
and
aad
mov
ret
testl
mov
movzbl
and
push
movsb
js
fsubrs
orl
push
mov
mov
inc
cs
dec
jge
push
or
mov
sub
cmp
and
in
adc
int
add
mov
mov
mov
mov
pusha
mov
mov
mov
push
jo
xchg
mov
mov
and
xor
mov
arpl
mov
cmp
fldt
push
or
push
mov
xchg
push
clc
cs
xor
loope
pop
test
ljmp
xor
inc
fcoms
fldenv
frstor
add
adcl
cwtl
cmpsb
inc
and
pop
loop
fstl
fwait
in
push
jmp
inc
les
sub
inc
cmp
dec
in
mov
cmp
pop
jmp
test
pop
xchg
mov
movsl
sbb
inc
into
lods
jecxz
repnz
push
ret
jle
inc
push
movsb
push
imul
ss
in
int
pop
movsl
lcall
std
cltd
movsb
std
sbb
loope
or
xor
rolb
js
pop
inc
test
insl
sub
add
loope
sahf
repnz
aas
jnp
xchg
sbb
push
or
fs
jmp
xor
test
mov
gs
xor
add
inc
dec
imul
xchg
cmp
sbb
sahf
rcrl
stc
mov
pop
push
cmpl
fimull
lock
test
int
jl
repz
addr16
bound
shrl
dec
imul
xchg
push
icebp
jb
jne
push
pop
and
dec
into
mov
jmp
mov
dec
inc
lds
aad
ljmp
cmp
adcl
mov
jp
push
jns
and
mov
xor
xlat
mov
into
mov
jnp
or
aam
mov
outsb
std
inc
sbb
imull
in
mov
in
jns
lock
xchg
push
cmp
jne
out
pop
stos
movsl
sub
push
fidivrs
gs
fnstsw
xchg
jl
mov
add
nop
mov
loopne,pn
pop
outsl
or
loopne
in
mov
sti
mov
xor
and
jp
aam
push
xchg
push
ds
mov
ds
jb
or
out
sti
push
in
repnz
xchg
inc
lock
dec
cmp
push
or
fwait
pop
dec
insb
hlt
ja
arpl
xchg
xor
sub
pop
mov
inc
sbb
mov
cs
push
jb
cmp
xchg
lcall
ret
xor
shll
inc
imulb
int3
lret
addr16
inc
jae
inc
and
jmp
popf
out
inc
test
test
int3
mov
sbb
subl
int
mov
andb
fwait
dec
add
push
dec
mov
jo
popa
jbe
mov
je
int3
pop
mov
adc
dec
push
ret
dec
inc
loop
jg
jne
es
fsubs
pop
xor
xorb
or
pop
inc
and
pop
sub
and
out
sbb
popf
shlb
fiaddl
push
cmp
ja
sub
dec
test
mov
dec
movsb
pop
mov
fxam
fstl
or
mov
push
push
jp
popa
outsb
shrl
pop
or
mov
dec
cmp
popl
xchg
mov
pop
cmp
mov
mov
repnz
enter
movsb
cmp
jb
jne
or
or
pop
push
xchg
push
xchg
inc
ret
cmpsb
jae
shlb
pop
or
push
add
ja
xchg
popf
mov
mov
add
add
pop
jo
loope
lea
aam
fxch
ds
insb
out
rorl
ret
cwtl
scas
loopne
cwtl
sbb
push
pop
test
push
add
aam
cld
pop
jo
out
sub
dec
or
push
out
or
jl
add
pop
or
jge
cmpsl
test
aam
mov
adc
mov
dec
adc
lret
jbe
xchg
adc
test
fwait
dec
and
and
outsl
pop
sub
fcompl
imul
adc
cmp
ja
add
fsubrl
sub
ret
fldenv
cld
mov
adc
jne
jle,pt
aam
xchg
or
mov
or
and
inc
pusha
popa
mov
out
xchg
jnp
lret
pop
lds
cwtl
out
fwait
outsl
sub
fwait
jl
mov
cmp
jno
int
xchg
and
mov
xor
lret
or
scas
outsb
sbb
xor
out
mov
jl
and
fcoml
pusha
pop
mov
mov
scas
xor
inc
cwtl
lods
jge
stc
movsb
repz
or
or
xchg
gs
mov
hlt
mov
dec
cmp
mov
xchg
or
out
incb
pop
xor
cltd
iret
sbb
xchg
push
mov
or
inc
pop
add
outsl
sub
out
rol
cmp
popf
hlt
sub
inc
mov
shl
jo
test
rorb
into
sub
aaa
add
mov
mov
sub
sub
rcll
push
and
xchg
aam
insl
or
and
pusha
movsl
cmp
aaa
gs
sub
sbb
pop
fsubrp
notb
fs
dec
test
outsb
push
pop
lahf
push
lods
inc
push
mov
or
push
inc
in
add
xor
pop
adc
fsubl
stc
scas
and
jp
int
dec
outsb
cs
ljmp
nop
and
mov
jo
sub
lock
lock
or
mov
mov
stos
pop
xchg
iret
daa
and
push
mov
in
mov
sub
cmpsl
mov
xchg
and
mov
das
sub
leave
xchg
xor
insb
roll
dec
lcall
dec
mov
sbb
cli
lret
push
adc
test
mov
push
dec
inc
lcall
adc
int
jnp
notb
in
call
jne
lock
repnz
inc
xlat
outsb
loop
and
dec
push
jnp
add
dec
mov
xchg
push
push
mov
pushl
or
mov
push
jne
jg
jl
sti
cltd
pop
or
and
je
jb
fisttps
aad
push
ljmp
loopne,pt
fs
inc
dec
jl
shll
or
ret
cmpsb
cmp
add
test
lret
int3
mov
mov
aas
cmp
sub
pop
dec
inc
repnz
popf
xchg
addr16
push
and
ret
test
xlat
pusha
loope
das
xchg
decl
mov
int
shll
sub
add
or
pop
test
leave
ss
cmp
fdivrs
ret
cmp
and
jae
ljmp
add
mov
fst
shll
jae
or
add
sti
loopne
mov
daa
push
repnz
mov
xchg
sbb
xchg
add
jmp
jmp
add
movl
pop
je
jmp
sub
addr16
aaa
in
adc
pop
call
div
jne
ljmp
add
lcall
shlb
inc
xor
pop
pusha
lds
mov
andl
lcall
add
icebp
xchg
dec
fucomip
add
popa
jbe
and
mov
jae
cmp
rcll
and
fisttpl
xor
aas
subb
loopne
jb
add
cmc
sbb
test
push
mov
ja
sbb
sub
insl
mov
dec
es
es
andl
loop
xor
inc
mov
add
mov
xchg
std
fwait
xor
push
dec
jp
jmp
fidivs
xchg
xlat
enter
addr16
inc
sub
inc
leave
mov
loopne
iret
push
arpl
xlat
dec
fcoml
mov
mov
std
pop
xlat
and
sbb
jo
pop
xor
int3
lahf
and
jg
jge
roll
jb
xor
xchg
ljmp
add
data16
lret
sub
pop
stos
pop
cmpsl
dec
cli
xchg
insl
bound
xchg
inc
cmpsb
aam
mov
jmp
mov
imul
mov
test
mov
cltd
fistps
stos
cmp
out
dec
or
push
sub
dec
arpl
jmp
inc
mov
imul
incl
mov
shll
or
pushf
movsb
dec
adc
mov
push
arpl
rol
inc
pushf
mov
out
mov
pmuludq
es
mov
mov
shlb
lahf
fildll
xor
rcrl
out
es
xor
and
int
mov
sub
arpl
add
xor
ret
push
mov
ret
push
add
jns
lods
push
mov
push
or
xor
lods
xlat
pop
fsubrs
push
nop
data16
out
mov
add
fdivs
sbb
sbb
adc
faddl
or
in
cmp
adc
push
mov
inc
xchg
les
outsb
and
lock
leave
or
adc
inc
rcrl
pop
int
add
testb
cmp
test
push
cmpsb
dec
notb
insb
aam
dec
scas
cmpsb
or
jmp
sbb
jl
or
outsb
rcr
sbb
bound
loope
ret
cltd
sbb
jne
fwait
loop
out
scas
cmp
mov
jle
mov
icebp
adc
add
xlat
mov
jns
in
negb
sbb
mov
mov
in
call
pusha
add
mov
mov
mov
sub
js
cli
xor
sub
jg
xlat
adc
bswap
mov
les
jno
out
clc
add
and
out
lock
mov
add
fwait
nop
and
out
or
push
gs
push
hlt
and
fnstenv
testl
push
cmpsb
test
sbb
shll
push
loope
mov
iret
sub
dec
idivl
adc
sti
mov
sub
stc
xlat
mov
jo
push
cltd
insb
adc
rolb
adc
xor
sbb
push
sahf
fidivrl
add
push
jae
int
stos
add
push
test
cmpsl
xor
addb
pop
test
loopne
mov
jae
shrl
xlat
aas
jecxz
shlb
shrl
test
push
js
xor
sbb
mov
ja
lds
cmp
cmp
pop
inc
test
mov
stos
leave
jecxz
xor
and
jmp
movsl
pandn
scas
xchg
push
jg
test
adc
jno
mov
stc
insb
sbb
movsb
sub
bound
iret
std
cmc
push
pop
movsl
inc
xlat
lcall
bt
sbb
cmp
roll
push
fildll
flds
std
mov
inc
ljmp
xor
loope
and
aam
lods
cmp
test
les
adc
xchg
sbb
insl
rcrb
das
scas
jmp
sub
cmp
pop
loope
xor
xabort
dec
mov
add
std
mov
mov
or
int
lcall
jo
insl
add
out
sub
outsl
negb
dec
into
mov
pop
xor
mov
mov
aam
lock
sub
out
cld
loopne
fisubrl
and
js
add
xchg
adcl
xor
or
pop
mov
out
outsb
test
adc
loop
ss
ds
je
aad
leave
jne
sub
mov
pop
xchg
adc
xor
in
shl
dec
add
mov
dec
popa
scas
lea
dec
jmp
stc
inc
lea
arpl
push
sub
sub
out
mov
xor
repz
jp
repz
mov
jmp
jb
ret
ss
fiaddl
lds
outsl
cmp
mov
aam
aad
outsl
mov
test
cs
clc
pop
push
ret
push
in
movsb
sbb
mov
inc
test
vandpd
xor
idivb
jp
fnstsw
test
mov
lock
in
ljmp
repz
add
mov
jecxz
add
mov
aam
push
lcall
fwait
jecxz
movsb
in
push
and
das
fidivl
int
xchg
adc
xchg
fmull
xchg
lcall
repz
and
std
push
stos
xchg
xor
loop
push
jns
xor
cld
dec
sub
fucomi
leave
push
xchg
fldenv
lahf
cmp
or
aaa
jne
push
xor
pop
outsb
fstps
les
add
lds
xchg
daa
mov
xchg
pop
shlb
les
fidivl
shlb
pop
pop
mov
inc
inc
and
jbe
mov
inc
enter
lods
and
mov
in
outsl
push
ret
cmp
dec
mov
add
push
aaa
ficompl
cwtl
sarb
ja
fistps
frstor
xchg
mov
in
divb
pop
mov
lds
dec
pop
mov
pop
es
xor
andl
push
mov
data16
jbe
xor
push
icebp
xchg
xchg
dec
fnstsw
iret
cmp
jo
mov
or
out
jno
out
mov
stos
push
add
and
pop
mov
inc
mov
test
adcl
inc
icebp
cmp
into
add
cmc
add
rep
mov
xchg
lret
lods
stc
int3
addl
rolb
sbb
jns
rcrb
jmp
or
bound
mov
adc
js
lea
insl
jbe
data16
and
jb
inc
jp
xchg
pop
shrl
jg
adc
push
or
mov
cli
and
popf
in
int3
xchg
int3
rcll
icebp
flds
and
aam
pop
mov
push
xchg
stos
popa
dec
pop
cwtl
pop
xchg
dec
sbb
add
cwtl
cmp
and
xchg
testl
out
push
insl
or
push
inc
cmpsl
out
ljmp
cmc
inc
sbb
stos
mov
mov
cltd
inc
xchg
sub
int3
lahf
mov
jmp
pop
aaa
sarl
test
xchg
pop
lods
push
mov
pop
pop
pop
sahf
cwtl
mov
call
stos
scas
and
sub
jge
mov
xchg
inc
arpl
dec
xorb
sub
pop
test
ret
dec
inc
insb
movsl
repnz
leave
cmp
mov
jg
mov
inc
push
je
jecxz
xor
addr16
push
jecxz
repz
add
mov
mov
leave
mov
mov
dec
push
js
mov
dec
adc
jns
xchg
xchg
pop
jns
popa
push
stos
jg
inc
shlb
lcall
fstl
in
fucomp
jge
sub
and
adc
push
lea
int
mov
lcall
ljmp
daa
xchg
bound
lea
pop
movsb
jno
ljmp
sbb
inc
cmp
or
mov
pusha
mov
fildll
shll
push
scas
mov
ret
pushf
xorl
push
mov
mov
das
add
addr16
std
filds
jg
pop
inc
jbe
mov
gs
ror
in
nop
inc
movaps
xchg
cmp
insb
notb
jmp
popa
xchg
mov
out
outsb
lcall
mov
mov
mov
add
mov
xchg
or
hlt
sti
add
push
lret
bswap
mov
fisubrs
mov
test
scas
ja
pop
mov
lcall
or
cmp
add
cmp
mov
rcrl
aam
mov
dec
dec
in
mov
in
ret
scas
movsb
push
shrl
or
in
enter
mov
bound
in
mov
int3
outsl
cwtl
jl
fcmovu
dec
pop
or
fs
clc
scas
pop
sub
dec
cmp
pop
and
jmp
in
in
xchg
pop
in
js
adc
add
or
jae
push
push
cmp
arpl
sarb
xchg
jbe
pop
adc
mov
hlt
sub
dec
cmp
xor
adc
xor
or
xchg
int
and
xchg
ret
add
cli
jecxz
fnstenv
test
or
dec
adc
mov
repnz
pop
cmp
xchg
mov
pop
mov
outsb
cwtl
and
fld
xor
fwait
dec
repnz
jnp
popf
cmp
ret
outsb
cmpsl
les
pop
sub
roll
add
mov
inc
inc
inc
mov
jmp
lret
xor
clc
iret
xchg
push
ja
loop
adc
sbb
and
inc
ss
icebp
lcall
mov
sahf
and
push
faddl
push
dec
sarb
adc
inc
aas
imul
popa
mov
pop
mov
pusha
aas
inc
inc
bswap
outsb
and
inc
xorl
mov
xchg
dec
jbe
push
pop
stos
push
lods
divl
mov
in
repnz
enter
push
hlt
rsqrtps
ret
add
sbb
fs
insl
inc
movsb
dec
pop
sbb
sarl
add
push
jnp
fs
and
out
and
sbb
xor
mov
mov
mov
faddp
adc
imull
nop
sahf
int3
clc
fmul
jl
les
or
les
fwait
inc
dec
inc
popa
xor
inc
icebp
xchg
fcomi
pop
fs
adc
adcl
sub
in
addr16
xor
mov
mov
in
test
es
cmp
sub
outsl
testl
test
addr16
mov
xor
dec
mov
fwait
adc
and
mov
scas
lds
ficomps
xor
std
and
into
sbb
inc
imul
shll
and
add
mov
jg
xor
lahf
mov
mov
ljmp
lcall
ret
pushf
imul
stos
xchg
subl
cmpsl
fmul
mov
jns
lret
cmp
fdivs
mov
jl
mov
rcll
fadds
mov
mov
push
test
aad
cli
add
sti
cbtw
or
add
jbe
mov
push
cmp
push
in
xchg
sub
jb
sub
cmp
mov
fidivrs
or
fucomp
ret
sub
jns
xor
cli
fistps
mov
adc
popa
es
sbb
push
push
sysret
fldenv
mov
lret
loope
add
out
sahf
cs
ja
push
movsl
test
jmp
stos
je
mov
fdivrl
sub
aas
push
or
lret
push
sub
dec
push
or
les
sbb
or
fidivrl
movsb
pushf
divl
test
mov
jb
jmp
mov
test
divb
lods
je
cld
loop
push
idivb
ds
aad
and
cmc
fisttpll
inc
cltd
xchg
or
mov
ret
push
xlat
fisubrl
loop
mov
cmp
gs
pop
xchg
dec
pop
push
inc
sub
sbb
xor
aaa
xchg
ret
jp
mov
jno
mov
shll
cmpsb
sub
or
notl
idivb
mov
icebp
adc
mov
dec
or
dec
scas
sbb
inc
push
and
lret
into
daa
xor
pop
int
or
ljmp
cmp
dec
cli
stc
push
ret
es
sbb
out
lret
insl
mov
sub
mov
adc
mov
fwait
dec
add
or
add
xchg
xlat
xor
dec
test
popf
push
add
sti
or
scas
ljmp
dec
imul
aas
sbb
and
out
rcr
ljmp
mov
mov
xor
int
lock
pop
add
repz
fsubs
repz
dec
aad
ds
push
and
inc
je
cld
cmpsb
dec
inc
mov
mov
stos
pop
fidivs
adc
lock
repnz
mulb
push
add
adc
ror
pop
adc
xor
jae
loope
mov
xor
push
xor
inc
pop
push
push
dec
sub
cld
les
or
mov
shlb
or
mov
dec
sbb
repnz
and
stc
inc
inc
pushw
or
sbb
mov
mov
int
ss
loope
push
loop
add
rclb
outsb
negl
or
add
pop
int3
xor
mov
xor
ror
mov
aaa
movsl
xchg
gs
movsl
inc
popf
dec
push
mov
push
jno
jl
inc
fildll
mov
or
xchg
sub
sbb
cwtl
push
imul
mov
mov
mov
lcall
cltd
in
sahf
icebp
sbb
xor
adc
mov
fistl
push
lea
cltd
in
imul
xchg
daa
lods
xchg
lods
scas
sbb
or
les
mov
orb
in
or
xchg
stos
sub
push
ljmp
mov
dec
mov
aam
das
mov
test
jl
sbb
ss
cli
sub
mov
pop
and
leave
jge
push
fistl
and
adc
mov
jp
cmp
xchg
mov
jle
sub
add
mov
cmp
add
call
inc
push
adc
ds
fstl
icebp
cli
test
adc
cwtl
push
out
insb
lods
push
fwait
mov
dec
adc
pop
push
fwait
in
inc
or
cmp
repz
xor
in
adc
jno
jo
sub
mov
sub
push
mov
push
and
mov
push
aaa
ret
push
fstpt
mov
add
aaa
hlt
push
pop
pop
loope
insb
pushf
fmull
sarl
pop
inc
incb
pop
mov
subl
inc
test
dec
sbb
fmuls
add
insl
rcll
mov
mov
mov
inc
addb
pop
stos
aad
outsb
fmul
mov
and
xor
into
out
cwtl
aas
pop
int3
and
or
mov
push
pop
jg
shll
jp
add
sbb
lock
mov
movsl
jae
xchg
fisttps
mov
mov
push
in
movsl
stc
and
jb
and
cmp
dec
adc
pop
jge
stos
dec
rcrl
dec
or
adcl
sarl
xor
push
cmpsl
addr16
jmp
pop
fs
mov
data16
jp
and
scas
jae
pop
ja
hlt
add
sti
push
aaa
aaa
jp
pop
std
inc
shlb
pop
sbb
or
inc
cmp
sub
in
or
into
fdivl
jns
fldcw
outsl
jecxz
dec
add
mov
cmpsb
xor
mov
xor
xchg
xchg
testl
push
aaa
ret
pop
dec
xor
and
sub
notb
xchg
pop
insl
mov
xor
sub
enter
xor
push
jge
sub
mov
cmpsl
mov
in
dec
xchg
dec
push
sub
sbb
jmp
jne
or
sbb
les
insb
mov
lahf
cmp
shll
stc
out
inc
std
fidivrs
movsb
dec
inc
xor
add
add
ret
mov
inc
cld
jg
sbb
int3
mov
sub
dec
dec
sub
inc
movsl
imul
or
pop
push
lcall
adc
xchg
inc
gs
jp
roll
inc
flds
push
sbb
lea
push
mov
bound
push
fcoms
aam
es
push
jo
ljmp
fnstsw
push
xor
pusha
fidivrl
stos
jnp
lods
test
xor
je
cmpsb
jecxz
std
mov
fbld
cmp
sub
aas
push
mov
clc
sbb
add
or
xchg
mov
sub
ret
jb
lea
mov
mov
arpl
mov
leave
fsubl
push
mov
leave
daa
loope
xchg
mov
adc
sub
shll
push
jbe
jle
pop
mulb
adc
sbb
idivl
sbb
fs
sbb
sub
lods
mov
mov
arpl
roll
xchg
inc
adc
push
in
push
rcll
popa
mov
adc
sub
xchg
cmp
push
loope
imul
pop
sarl
jl
into
dec
mov
mov
mov
pop
pop
aad
or
rcll
out
imul
push
arpl
cwtl
stos
push
inc
inc
pop
int3
out
sbb
test
and
push
push
dec
js
xchg
add
das
rclb
xchg
fistl
mov
or
or
lods
jbe
sahf
nop
cmc
sarb
cmpsl
mov
jle
pop
scas
mov
cmp
fwait
dec
cmpsl
insl
repz
outsb
or
inc
loope
aad
or
sub
hlt
loop
jo
mov
mov
cmp
cli
fmuls
int
adc
xchg
or
dec
fs
lock
jns
dec
int3
dec
out
jl
addl
jno
sbb
aaa
xchg
flds
pop
data16
movsl
repnz
mov
sbb
jl
dec
push
and
cmovns
test
cli
lret
mov
ds
fbld
cmp
aam
and
xchg
lcall
cmp
subl
cmpsb
mov
dec
cmp
pop
out
xor
dec
push
xor
jl
inc
jns
inc
sub
sub
cwtl
xor
or
dec
push
mov
int
jb
fwait
jecxz
ret
popf
cmp
xor
dec
sub
daa
test
lret
in
add
adc
push
loope
popf
xchg
cli
mov
push
fstpt
pop
enter
inc
out
and
xor
and
dec
sbb
rorl
fnsave
adcb
mov
push
gs
jbe
jae
stc
or
pop
popa
clc
mov
jecxz
clc
js
mov
push
aaa
dec
mov
sti
into
lret
pop
pop
add
adc
stc
popf
stc
int3
mulb
pop
mov
cmp
shlb
shrl
xchg
daa
clts
les
lahf
cmp
sub
faddl
xchg
pop
push
mov
inc
jbe
lcall
jge
repnz
outsl
cli
shll
jmp
jg
lds
and
inc
xor
ds
int3
mov
sub
sbbl
call
nop
movsl
enter
mov
in
cmp
bound
aam
pop
xchg
or
and
mov
aas
mull
lahf
mov
push
pushf
xlat
mov
jbe
push
pop
jo
xor
cmpsl
arpl
incl
stos
xchg
jl
jne
and
jns
aas
enter
push
mov
mov
and
aad
pop
mov
in
mov
push
fwait
sub
call
fstps
mov
outsb
lret
xchg
mov
and
fdivl
jne
ret
jbe
xor
mov
inc
sti
test
dec
pop
stos
push
sahf
sub
mov
cmc
xchg
or
lahf
adc
or
aad
hlt
loop,pt
dec
push
push
mov
aam
inc
adcb
push
in
inc
enter
cmc
icebp
cmp
nop
jae
xchg
mov
dec
scas
push
lds
popl
pop
and
pop
push
mov
or
mov
lret
shll
pushf
pop
or
aaa
stc
mov
mov
or
inc
ljmp
and
andl
pushf
rcll
enter
xchg
nop
jecxz
mov
loop
jo
addr16
adc
call
nop
push
xor
xchg
dec
sti
cmpsl
add
adc
inc
mov
in
out
mov
sub
popa
les
fs
mov
inc
jg
inc
psubw
jno
in
shrb
lea
aad
inc
ss
adc
xor
ret
arpl
adc
xchg
mov
das
xchg
pop
pop
jae
mov
testl
push
std
lcall
add
test
sarb
xchg
notl
add
in
fucomp
into
cli
stos
addr16
and
lods
sub
sub
cmc
cmp
ljmp
jge
mov
ss
inc
mov
cmc
pushf
add
push
fstpl
sbb
dec
in
lods
add
repnz
xor
leave
scas
cmp
jno
and
or
stos
sti
xchg
int
push
ljmp
repz
aaa
sub
dec
inc
xor
mov
xchg
shlb
pop
pop
test
cmc
adc
jecxz
or
test
push
dec
movsb
and
xor
scas
add
mov
inc
out
std
lret
fcmovne
lret
pop
pop
add
sarl
inc
dec
sbb
addr16
stc
push
xor
adc
pop
mov
cltd
add
addr16
outsb
sub
mov
add
lea
stc
cmp
mov
in
out
sti
push
mov
ret
push
and
out
nop
add
mov
jle
lods
jecxz
div
or
sbb
push
sub
lds
cmovne
dec
mov
fbld
jno
push
xor
leave
hlt
xor
insb
call
test
leave
inc
inc
in
inc
sbb
sbb
mov
call
ja
shl
fldenv
pop
mov
xchg
xchg
adc
arpl
dec
pop
xor
out
adc
cltd
jno
xlat
dec
lock
lods
test
adc
xor
and
in
inc
outsb
inc
and
test
jmp
mov
data16
fstp
mov
stos
repnz
pusha
add
cmp
xlat
cld
leave
cli
inc
cmp
scas
jno
mov
insb
inc
scas
sbb
jecxz
mov
mov
stos
ljmp
sub
mov
adc
jge
in
idiv
jg
and
ja
xor
pop
add
mov
mov
pop
mov
sub
bnd
ja
push
leave
insb
je
mov
cmp
popf
movsb
cli
in
xor
xchg
cli
movb
xchg
dec
mov
dec
adc
push
inc
jg
stos
xor
ljmp
push
test
mov
xor
mov
xchg
cmpl
fimuls
in
int
or
fisubrl
bound
test
pop
or
push
jp
xchg
call
lcall
mov
lret
fsubs
sbb
lock
inc
inc
insl
adc
mov
mov
cmp
xlat
push
jb
sub
mov
fucomi
xchg
out
xchg
adc
in
push
mov
cmp
or
out
dec
sub
or
popf
fdivrs
arpl
or
fbld
add
or
mov
inc
pop
into
pop
jo
mov
sub
sahf
aas
xchg
sahf
xchg
and
adc
jl
inc
mov
aam
dec
test
xchg
stos
inc
repz
das
es
mov
adc
shl
jne
sub
xchg
dec
or
mov
dec
inc
clc
push
add
pop
das
pushf
int
testl
adc
fwait
loop
stos
push
lock
lods
jg
dec
shlb
pop
sbb
lds
xor
fildl
push
or
cwtl
xor
cs
mov
mov
mov
adc
mov
pop
push
insb
xchg
push
ret
jle
scas
dec
sarl
insb
and
and
add
cmpsl
cmpsl
test
or
and
dec
sbb
repnz
xor
jge
push
icebp
and
mov
pop
shrb
movsl
adc
das
gs
pop
test
test
or
push
fwait
popf
scas
xlat
dec
mov
aaa
pop
inc
cmpl
add
xlat
call
push
sub
mov
cmc
or
mov
jmp
stc
rcrb
and
and
rcrl
mov
jp
push
xchg
into
xchg
shrl
sti
and
mov
int3
mov
push
aad
adc
dec
dec
enter
add
mov
cli
fcmove
mov
mov
lcall
or
out
cmp
int3
sub
add
scas
loop
les
sahf
add
out
rorl
aaa
fsubrs
adc
sub
and
and
push
sbb
lds
addr16
add
mov
xor
cld
insb
sub
repz
mov
xor
jmp
lea
or
ja
xor
xchg
cmc
jno
shlb
in
push
jb
aaa
push
jmp
sbb
adc
xor
inc
xchg
pop
lock
or
jmp
movsl
enter
adc
sbb
dec
xchg
jle
enter
cltd
fimuls
test
mov
loop
inc
sbb
jo
mov
shrl
cld
and
push
cmp
sub
xchg
jne,pt
xor
dec
fsubrl
in
inc
adc
pushf
or
cwtl
lcall
cltd
push
aas
insl
mov
lock
jge
push
jmp
pop
mov
inc
cmp
jns
add
lcall
daa
mov
repz
cltd
sub
mov
rorb
mov
mov
outsb
pop
sub
mov
sub
jmp
and
pop
outsb
xchg
arpl
rcrb
mov
arpl
inc
in
adcb
xchg
mov
ds
repz
iret
pop
jae
loop
adc
dec
rclb
mov
nop
or
in
and
fcompl
dec
mov
loopne
sbb
jle
mov
push
sbb
lock
mov
rcr
rcrl
dec
cmpsb
nop
mov
inc
xchg
mov
xor
mov
les
add
inc
jmp
push
js
jo
testl
out
int
sub
fdiv
inc
jl
repnz
sahf
out
xchg
cmp
sahf
push
and
stos
add
in
out
or
sbb
cmp
pop
cld
ret
sub
loope
mov
adc
jg
push
push
ja
loope
sarb
cwtl
mov
push
pop
sub
jecxz
out
rorl
test
imul
gs
adc
popf
adc
jl
xor
mov
cmp
jbe
push
sbb
in
pushf
jnp
mov
push
mov
xor
dec
xchg
pop
sarb
ret
es
xchg
jg
xor
add
mov
and
dec
and
sub
fiadds
cmc
ret
mov
pop
push
and
or
jecxz
mov
lds
out
fdivrl
and
stc
lret
fidivl
pop
pop
stc
aad
pop
mov
mov
aad
daa
push
dec
mov
sahf
jb
loope
js
sarl
rcr
jb
xor
sbb
xchg
loope
clc
in
sbb
xchg
add
push
adc
or
xchg
jbe
dec
aas
lahf
sbb
inc
lahf
inc
jbe
xor
jb
mov
mov
gs
jae
cmp
inc
gs
test
mov
pop
fdivrl
lret
jecxz
lret
jnp
das
mov
inc
push
clc
dec
jmp
pusha
mov
cmp
dec
and
es
xchg
or
out
cltd
popf
les
popl
sub
jmp
push
ret
in
out
cmp
mov
mov
sti
xor
stc
inc
std
sar
xor
loope
xchg
push
mov
rclb
test
mov
push
mov
add
rorb
cmpsb
loop
adc
idivb
sbb
cmpsl
mov
sub
shll
pop
or
xchg
adc
sub
xor
std
mov
push
cmp
jmp
mov
mov
push
sub
cmp
mov
or
xor
cwtl
jg
mov
xchg
add
arpl
mov
cmc
xor
movsb
ljmp
push
xchg
lret
xor
fs
lods
lea
fwait
sahf
sbb
cltd
popf
and
imul
xchg
mov
je
dec
es
nop
inc
loopne
js
rcr
jnp
sti
mov
push
jecxz
jb
aas
cltd
fcompl
rolb
mov
clc
jnp
enter
cmpsl
std
int3
and
pushf
lea
pop
pop
jle
enter
inc
test
inc
cld
ret
jns
jle
add
cmpsb
dec
and
mov
add
add
xchg
sbb
push
ds
sub
dec
jae
fisttpll
xor
adc
fisttps
jp
dec
imulb
aad
in
and
aas
fcomip
out
or
fcomi
popf
leave
add
push
xlat
add
cmc
aaa
xchg
inc
es
cmp
test
out
mov
mov
inc
in
cmp
adcb
inc
sub
xchg
cltd
xchg
popa
lret
loopne
nop
inc
in
pop
popa
call
aas
and
adc
jns
ss
cs
mov
dec
pop
mov
daa
push
sarb
xor
mov
pop
popf
cmpsb
outsb
adc
fsubs
adc
jecxz
xchg
cmp
aaa
cltd
lret
sbb
es
xchg
jbe
cmp
popa
inc
inc
mov
aad
popf
es
xchg
jle
repnz
fmulp
call
imul
iret
out
add
lds
push
add
mov
sub
stc
jo
addr16
and
je
cmpsb
scas
dec
in
sub
scas
push
add
sub
jno
ljmp
shll
mov
ss
scas
sbb
or
sub
xchg
inc
pop
sub
xorb
inc
cmc
mov
cmp
lcall
pushf
ficoml
add
jmp
mull
xchg
or
pop
filds
push
mov
jae
fadds
lcall
or
mov
mov
xchg
xorb
frstor
daa
ret
int
or
imul
in
mov
xor
movsb
jg
sbb
push
jge
sbb
ret
jbe
mov
aaa
push
or
sar
push
pop
aaa
sub
push
sti
movsb
aaa
dec
repz
pop
loopne
dec
lret
xorl
lahf
xchg
sub
out
int
xchg
adc
imul
cwtl
jecxz
lods
pop
or
add
or
lret
adc
xor
shl
shll
pop
lahf
ret
push
xor
mov
push
mov
adc
popa
push
testl
ja
jge
rcll
repnz
in
iret
dec
nop
ljmp
push
xchg
imul
mov
outsl
mov
mov
mov
jno
aaa
pushf
jno
popa
mov
ficoml
dec
push
ljmp
push
pop
in
shrl
or
dec
scas
lcall
pslld
scas
pop
cmp
dec
out
lock
in
pushf
add
ret
icebp
sarb
icebp
xchg
push
xlat
mov
fs
push
nop
mov
add
nop
jnp
add
inc
xchg
outsl
inc
jno
outsl
mov
lahf
mov
xchg
sbb
test
stos
iret
xchg
pop
notl
add
or
dec
and
inc
or
movsl
je
insb
mov
out
mov
mov
push
push
shl
gs
push
or
mov
lods
insl
add
sbbl
pushl
fnstcw
add
xor
xchg
add
or
jp
sti
test
dec
xor
or
push
push
or
adcb
hlt
jo
cs
sti
xchg
dec
addr16
xlat
enter
jmp
sub
movsb
out
es
rcll
jle
push
movsb
inc
push
adc
push
cmpb
jmp
addr16
hlt
push
into
pop
mov
inc
sub
ret
add
add
xlat
cwtl
mov
jnp
icebp
pushf
adc
mov
int3
out
push
aad
xor
adc
in
or
es
mov
fldl
xchg
hlt
clc
rorl
pop
scas
out
mov
mov
popf
xchg
adc
cmp
dec
in
je
shl
inc
add
or
add
adc
adc
push
subl
imul
out
std
mov
mov
dec
pop
clc
dec
inc
inc
cmp
and
and
pop
nop
popl
dec
sub
ret
aas
inc
mov
pop
and
ja
mov
pop
jecxz
mov
push
arpl
inc
nop
out
scas
popa
enter
jle
mov
ljmp
xchg
gs
je
bound
add
or
data16
cs
cmpl
shlb
or
jb
adc
dec
cmpsb
jg
icebp
inc
mov
dec
bound
aaa
arpl
or
jle
adc
add
inc
jbe
fldt
xchg
adcl
rcrl
add
lcall
or
mov
push
push
aad
mov
mov
cmp
pusha
jecxz
insl
cmc
aad
movsl
and
sbb
clc
pop
mov
out
aam
xchg
mov
cld
frstor
test
cmp
hlt
inc
test
pushf
inc
movsl
xchg
adc
andl
mov
pushf
jle
insl
sbb
fisttpll
push
mov
sbb
mov
lret
and
mov
mov
jle
es
sub
and
lcall
inc
xchg
outsb
pop
mov
in
ret
or
sub
cmp
or
ljmp
pop
mov
push
jmp
mov
cmp
das
mov
das
loopne
fs
out
arpl
jns
sarb
pop
jo
jle
push
or
rol
adc
sub
nop
cmp
imul
pop
and
fsqrt
push
push
mov
sbb
jmp
mov
pop
xorl
inc
orb
adc
jecxz
and
loope
bound
jmp
xchg
in
roll
and
mov
cmp
dec
mov
mov
jl
movsb
addr16
or
pop
aas
pushf
or
out
fnsave
js
or
xor
lods
adc
push
add
mov
repnz
mov
fs
or
xchg
in
test
mov
ret
push
divb
sahf
gs
adc
sub
imul
mov
inc
shl
das
xor
and
test
subl
sbbl
sbb
add
dec
sub
aam
dec
push
mov
in
push
je
aas
pusha
mov
pop
es
outsb
fcomps
fisttpl
adc
mov
push
das
or
cmp
dec
mov
mov
mov
sbbl
mov
nop
or
scas
test
mov
adc
fsubr
scas
push
xor
xor
test
pushf
jno
fildll
mov
fiadds
andl
scas
ja
jl
pop
int
pop
testl
jecxz
dec
pop
repz
and
pop
sbb
cmp
mov
push
jnp
jmp
xchg
fmull
out
test
jb
push
pop
pop
pop
push
adc
pop
or
test
ja
daa
inc
call
and
push
gs
test
mov
pop
push
mov
fsubrl
insb
dec
adc
lret
ja
enter
xchg
mov
popf
sub
aam
push
cmpsl
outsb
xlat
push
aaa
xchg
les
push
push
cmp
mov
xchg
dec
cmc
fidivs
mov
cmpsl
pop
push
out
aaa
shrl
or
pop
jbe
test
ja
rorb
out
cli
add
jge
adc
insl
or
inc
sub
jne
repnz
adc
inc
cwtl
test
sub
mov
push
jne
or
or
pushf
mov
dec
orl
ljmp
add
arpl
addr16
out
leave
push
or
incb
imul
cwtl
jae
inc
mov
insl
mov
inc
push
jg
das
dec
shrl
pop
out
in
mull
lahf
pop
mov
mov
cmp
in
or
mov
loopne
addr16
es
sbb
sub
stos
aaa
aas
clc
subb
dec
movsl
push
in
sti
icebp
je
jne
mov
fldcw
sar
out
adc
pop
sub
sub
orb
pop
mov
xor
in
mov
pop
int
sbb
iret
mov
aad
xor
inc
push
adc
std
rolb
adc
call
xor
ds
in
test
adc
js
lcall
andl
int3
mov
xchg
pop
push
icebp
outsb
fucomi
mov
ror
std
cltd
lods
jmp
or
aaa
int3
lods
decl
movsl
stos
cmpsl
cmp
mov
rcrb
cltd
je
dec
iret
mov
push
or
push
rclb
addr16
loop
out
insb
dec
data16
arpl
jbe
cmp
imul
repnz
mov
adc
ficomps
insl
repnz
fwait
push
push
std
fs
mov
andb
bound
les
add
mov
dec
in
lods
jbe
fcmovbe
jbe
push
std
leave
lcall
inc
mov
pop
push
lods
xor
mov
dec
lock
into
inc
add
dec
sti
pop
sar
dec
mov
adc
test
sub
popa
cld
prefetch
or
popa
jne
and
iret
test
fidivrs
cmp
out
fwait
sbb
fisubrs
and
cltd
xchg
pushf
and
jge
out
inc
cmpsb
cs
xor
cmp
jb
adc
pop
cmpsl
mov
xchg
mov
jnp
in
mov
dec
std
lea
jae
pop
mov
test
add
jle
cmp
sti
xchg
dec
sbb
mov
stos
test
in
ret
sub
fs
mov
loopne
psrld
loope
inc
ffreep
stos
shl
roll
arpl
jmp
xor
test
sub
cmpsl
fidivrl
mov
iret
hlt
shrb
daa
xor
outsl
imul
sbb
add
xchg
stos
jae
mov
cmovl
lret
jbe
mov
pop
jmpw
loopne
cmp
lods
lahf
mov
or
fcmovnb
xchg
push
sub
jae
mov
lock
xchg
mov
sbb
enter
lock
and
mov
sub
sbb
fsubr
jl
sti
mov
xchg
push
mov
dec
arpl
dec
xor
mov
dec
push
stos
enter
std
jnp
pop
mov
out
pop
jb
xchg
repz
jae
sub
rol
stos
loopne
dec
aad
jb
ror
mov
loop
add
ljmp
inc
cmp
lds
fcompl
mov
jl
push
cmp
push
cmpsb
cmp
arpl
push
dec
les
clc
roll
sbb
dec
and
ficomps
cmp
nop
jmp
into
add
cmpsl
dec
cwtl
cmp
sbb
hlt
sub
lret
notl
mov
sahf
and
mov
mov
scas
mov
repz
std
pop
mov
fs
mov
popf
mov
or
pusha
mov
sub
xchg
fadds
shlb
icebp
loop
clc
cli
fcmovne
push
dec
call
dec
inc
pusha
xchg
sub
insl
cld
push
aam
cld
sub
cmp
bndldx
popf
mov
fwait
and
xor
push
mov
jmp
daa
xor
bound
aad
xchg
sbb
fnstenv
scas
push
and
cltd
sub
pushf
notb
sbb
sub
les
out
xor
cltd
leave
dec
push
xor
into
sti
je
rolb
xor
ljmp
pop
test
outsb
mov
ret
xor
clc
fnstsw
pushf
iret
cmpsl
mov
mov
lds
mov
sub
fdivrp
add
shrl
mov
xor
or
add
pop
push
mov
xor
lahf
inc
cmc
cmpsb
sub
mov
push
add
mov
dec
jecxz
leave
aaa
xor
shl
adc
push
mov
push
es
pop
adc
pop
sub
dec
cmp
inc
sbb
xor
in
mov
in
je
sbb
mov
es
or
es
or
inc
mov
or
sub
int3
jle
test
push
jb
pop
or
sbb
push
dec
or
outsl
xorl
rcr
out
roll
jmp
int3
test
dec
sub
mov
outsl
mov
xchg
adc
inc
movsb
xlat
mov
jg
aaa
sub
jmp
imul
outsb
pushf
ljmp
ljmp
mov
jl
pop
ds
or
pop
pushf
or
sbb
dec
imul
dec
dec
push
inc
add
stc
fmuls
fisubrl
xchg
daa
jmp
jmp
xchg
pop
xor
shrl
push
xchg
ret
movsl
and
mov
mov
jae
pushl
or
rorl
sub
sub
bound
pop
icebp
sar
jb
jmp
test
push
cmpsl
and
cltd
cld
inc
testl
mov
fwait
es
adc
stos
addr16
adc
jp
call
xor
clc
lahf
inc
adc
jl
arpl
std
xor
sbb
mov
adc
mov
push
mov
push
xchg
mov
lret
fs
xchg
push
or
or
movsl
sbb
mov
pop
cmc
cmp
dec
mov
add
xor
jge
or
shrl
loope
pop
mov
pop
es
in
insl
fadds
add
add
in
push
mov
test
mov
jge
xchg
and
mov
lahf
retw
loope
jge
sub
andb
dec
das
sahf
lods
push
lret
push
loop
jbe
imul
jnp
jns
mov
and
mov
fwait
out
and
mov
dec
mov
mov
dec
icebp
out
mov
fisubl
jo
aad
in
add
mov
mov
leave
jl
mov
pop
and
sub
fstpt
adc
and
roll
jg
scas
jo
jo
cmp
xor
ja
cmp
stos
inc
push
jno
hlt
popf
push
pusha
daa
out
adc
and
lea
mov
cld
mov
mov
pop
or
pusha
subl
xor
adc
mov
in
movsb
jle
out
cmpl
cmp
fwait
pop
pandn
jg
and
sti
in
push
push
jl
mov
int
mov
sub
pop
fcomip
pop
std
ja
mov
adc
clc
dec
cli
pop
mov
hlt
xchg
outsl
mov
and
mov
push
popf
pop
jmp
cmp
into
jmp
or
arpl
mov
pop
mul
mov
mov
divl
xor
adc
dec
and
mov
cld
cld
arpl
jge
adc
cmp
mov
pop
pop
icebp
sbb
mov
scas
les
push
jecxz
fidivrs
loope
xchg
push
mov
jl
loopne
outsb
std
fidivrs
popf
mov
jle
ds
cltd
jnp
push
pusha
std
add
ljmp
int
add
fiaddl
fs
lock
mov
lea
addr16
sub
cmp
mov
pop
pop
fdivrs
xor
mov
xchg
xchg
add
jno
es
insb
add
lret
xchg
xor
cld
mov
movsb
hlt
or
inc
outsl
fnsave
mov
loopne
mov
add
cmpl
daa
cwtl
jns
loopne
aam
add
enter
pop
pop
mov
dec
inc
sub
dec
in
jge
sbb
fdivr
cmp
out
loop
shlb
dec
out
push
xchg
loop
xchg
sbb
sahf
nop
or
push
pop
pusha
fimuls
stc
rcrl
mov
cmc
jp
pop
pop
sbb
push
xor
decb
sbb
jl
cwtl
xchg
jle
sub
jge
jo
loopne
nop
lret
loop
lea
cli
xchg
hlt
int3
je
cmp
movsb
inc
cltd
adc
xchg
addr16
add
jbe
cmp
push
sub
inc
movsb
lock
adc
sbb
ljmp
mov
test
jg
imul
mov
fscale
push
pop
das
arpl
mov
mov
xchg
xor
inc
scas
jmp
cmp
push
je
xchg
xchg
and
mov
popa
dec
stos
cmpsl
inc
jns
ffreep
sbb
pop
or
loop
xchg
inc
in
leave
shr
call
dec
cmp
fildl
adc
movsl
cmpsb
jmp
jl
push
or
fwait
lea
lods
outsl
add
or
push
push
cmp
inc
fldcw
loopne
faddp
add
andl
dec
insl
adc
cmp
push
data16
fwait
xchg
stc
add
mov
adc
hlt
in
fisubrs
repnz
xchg
or
add
sahf
xor
jl
inc
out
adc
sub
ss
sub
cli
sbb
pusha
addr16
rolb
inc
stos
sbb
iret
roll
mov
lock
mov
xchg
lea
inc
mov
in
cltd
loope
pop
or
in
inc
js
adc
or
sbb
leave
les
shlb
and
sub
popa
push
test
push
mov
scas
out
cwtl
xchg
addr16
jl
and
stc
jnp
push
jbe
mov
xchg
fs
mov
push
movsl
icebp
mov
pop
push
cmpsl
fcomps
and
lret
hlt
adc
jae
lret
pop
mov
mov
pushf
into
pop
and
and
mov
and
push
outsl
fistpl
iret
popf
mov
xchg
mov
fbstp
mov
insl
decl
cmpsl
push
sub
xor
into
out
xor
orb
adc
mov
es
sub
mov
cmp
imul
fstpl
stos
daa
jle
imul
adc
cmpsl
inc
adc
testl
fadds
test
sahf
cltd
pushf
sahf
sub
fst
ret
mov
neg
dec
scas
int
fsubs
pop
fldl
cmpb
lods
xchg
adc
stos
jb
pop
push
shll
das
pop
insl
cmp
mov
mov
lret
xchg
test
je
repnz
fxch
bound
adc
mov
mov
ljmp
xchg
and
cmp
ss
pop
mov
and
bound
sub
in
in
dec
stos
andl
loope
das
insl
mov
ljmp
cli
add
pushf
fs
adc
lds
pusha
ja
and
test
daa
loop
mov
shll
or
daa
adc
loop
push
int3
rorl
mov
pop
jb
pop
cmpsb
mov
xchg
or
push
lock
adc
push
sub
addr16
out
fwait
inc
out
jge
pop
pusha
and
dec
xchg
sar
mov
and
pop
and
mov
insb
xchg
aam
cwtl
and
test
xor
jb
mov
gs
inc
push
xchg
pushf
pop
xchg
pop
popa
xor
movsl
sub
scas
add
in
xchg
cmpb
push
and
dec
sub
jb
data16
sub
push
cltd
ret
pop
in
adc
dec
pusha
sbb
pop
or
dec
jb
lea
ror
stc
and
mov
repnz
sahf
add
dec
or
inc
call
sub
xchg
mov
mov
push
mov
repz
test
xorl
cmpsl
add
in
pop
lahf
imul
or
bound
and
sub
pushf
insb
call
and
and
loope
movsb
and
cltd
xlat
inc
pop
out
out
pushf
dec
dec
pop
mov
test
hlt
call
insb
jo
inc
cmp
pop
fwait
fwait
push
data16
sbb
mov
cs
imul
lods
cltd
leave
and
inc
fdivrl
fbstp
iret
jp
arpl
push
addr16
inc
mov
xchg
addr16
jle
stos
ja
xchg
lods
pop
xor
lds
jno
cmp
shll
cmp
cltd
mov
pushf
idivb
popf
fldcw
ror
push
pop
mov
cmp
filds
add
add
aas
dec
mov
cmp
jnp
sbb
push
test
pop
mov
cmc
ja
jne
cmp
clc
ss
mov
loop
pop
movsl
jnp
sahf
in
jb
cmpsl
mov
xchg
jns
in
not
lea
mov
dec
das
dec
cmpsl
aas
push
sbb
pop
sub
mov
daa
jle
sbb
or
mov
shll
mov
je
ja
push
out
cmp
dec
js
add
push
aaa
mov
ret
and
push
push
in
mov
cwtl
pop
xor
xchg
dec
ffree
mov
test
xchg
hlt
push
xchg
adc
jle
mov
scas
rcrb
push
mov
or
sarb
pop
add
lahf
push
shll
inc
je
pop
sub
pop
xor
push
xor
adc
push
cmp
stc
inc
jge
ds
xor
outsl
or
adc
sub
out
call
jge
sub
add
fwait
pushf
dec
flds
aas
clc
cmp
imul
sub
aaa
xlat
pushf
xchg
fnstsw
pop
lock
scas
push
dec
sbb
jae
cli
mov
nop
and
fldl
inc
ljmp
je
in
scas
sub
jle
scas
lret
loopne
rcll
sub
lcall
out
arpl
mov
pop
push
data16
sub
in
pop
pushf
enter
inc
mov
push
inc
aad
imul
sub
cmp
push
pop
dec
andl
pop
inc
mov
add
xor
push
xor
repz
sbb
push
adc
stos
add
sbb
mov
jmp
jns
test
rol
imul
cmp
outsb
lret
sti
mov
sarb
lret
loop
sbb
cmp
xor
iret
or
enter
loopne
or
mov
add
stos
sbb
jp
xchg
mov
fbstp
or
mov
jae
iret
lret
rorb
insb
ds
and
mov
insb
lahf
mov
es
jmp
pop
xchg
dec
cmp
inc
fidivs
sarl
cmpb
xchg
loopne
inc
mov
rdtsc
adc
fsubrp
jnp
dec
jo
inc
sub
push
mov
rcrl
adc
fs
xor
fwait
daa
cmp
push
push
ret
push
cwtl
decl
push
pop
sahf
sbb
aam
lahf
outsb
or
xchg
xor
or
aas
stc
fwait
ljmp
cmp
cmp
insb
scas
hlt
test
data16
jl
out
aas
or
mov
mov
test
or
addr16
test
inc
data16
pop
imul
pop
stos
jns
scas
add
xchg
fstps
xchg
jns
sbb
jno
idivl
negl
xchg
mov
leave
pop
das
dec
popf
pop
popa
and
pop
sbb
pop
sub
in
stc
jne
push
jne
jbe
pop
cs
rcl
cmp
xlat
leave
testb
mov
push
mov
mov
inc
dec
jb
outsl
mov
nop
out
insb
iret
ffree
pop
cmpsl
fcoms
lcall
mov
in
lds
stos
insb
sbb
mov
fstpt
stos
inc
es
ret
lret
add
inc
jp
fnop
cltd
adc
popf
fbstp
ret
xchg
add
fwait
leave
adc
xchg
into
inc
mov
outsl
call
jmp
dec
inc
mov
xchg
add
das
add
add
adc
xchg
test
push
rcll
and
adc
mov
xchg
sti
stos
mov
adc
lret
cmp
mov
loopne
jl
testl
popf
orb
jmp
jb
gs
push
add
mov
inc
adc
mov
and
dec
push
mov
aam
add
mov
jno
mov
jle
sahf
sbb
jle
and
sub
xchg
stos
daa
movsl
sbb
mov
aad
mov
and
sbb
int
sahf
jnp
xchg
stos
jmp
les
rcrb
mov
outsb
jb
sub
adc
rcr
dec
push
or
xchg
lret
dec
dec
jnp
jg
or
jg
loopne
test
pusha
lock
add
adc
xor
sbb
lds
push
xor
iret
adc
mov
loopne
xor
in
sub
iret
or
sbb
movsl
mov
cmp
inc
mov
lods
push
pop
lods
mov
push
adc
jns
jge
mov
loop
add
adc
lcall
mov
jg
sbb
test
adc
imul
iret
jne
arpl
clc
lds
xlat
xor
add
cmc
jbe
in
pusha
loop
jns
das
mov
add
push
mov
cmc
adc
andl
pop
cmp
adc
jbe
cmp
lods
test
sub
je
loop
jae
daa
cmc
shll
add
dec
addr16
cmpsb
push
xchg
xchg
jns
push
cmp
outsl
lods
and
fs
mov
cli
sub
and
and
subl
divb
loop
sub
cltd
js
stos
xchg
cmp
sub
loope
fisttpl
jmp
fwait
sub
daa
xor
sahf
pop
adc
loope
pop
adc
outsb
lea
aam
in
daa
mov
repnz
hlt
inc
sub
lcall
popa
mov
into
repz
loope
cmp
jp
push
push
sbb
cmp
shl
popf
aam
fildl
xchg
mov
sub
arpl
insl
shr
inc
jmp
add
jl
pop
xchg
and
es
and
dec
jmp
outsb
mov
mov
mov
dec
inc
pushl
das
outsl
pop
add
xor
sub
jle
dec
dec
mov
iret
aad
push
pop
hlt
jns
in
cmp
js
mov
xor
or
push
push
sub
cmp
push
and
sbbl
mov
sahf
and
push
jmp
mov
push
push
xchg
lea
sti
mov
fmuls
mov
xchg
enter
inc
add
test
and
call
stos
cmp
es
je
out
fs
cs
add
lods
shl
test
adc
fs
and
ljmp
add
xor
test
movsl
in
cmp
mov
lods
fwait
mov
mov
aad
shrd
pop
mov
gs
loopne
loopne
mov
aas
stos
in
add
out
add
add
xlat
into
adc
mov
repnz
incl
iret
out
mov
loop
push
stos
adc
jecxz
sbb
adc
jmp
mov
and
jmp
or
fcoml
movsb
add
popl
xchg
push
or
cmp
xchg
div
sbb
scas
movsb
add
xor
bound
push
xor
out
rorb
ret
cwtl
scas
fisubrl
repnz
and
jmp
aam
mov
xor
jbe
ja
push
stc
pop
movsl
or
dec
in
fdivrp
int
fildl
loope
lods
jno
lods
inc
cmp
call
ss
repnz
sahf
inc
adc
dec
nop
xor
inc
xchg
std
jbe
mov
cld
cmc
inc
cwtl
dec
inc
gs
pusha
repnz
xlat
and
loopne
push
pusha
push
dec
or
and
pop
in
jp
jnp
divb
aaa
outsb
in
mov
gs
outsb
dec
inc
jnp
xor
rcl
mov
dec
in
add
jge
push
mov
fadds
push
stos
test
into
idivl
cmpsb
push
adc
lods
lahf
ficomps
jecxz
inc
sahf
fsubr
sahf
mov
sub
es
adc
adc
jl
cwtl
in
addb
imul
subl
add
or
jae
or
xchg
adc
jle
mov
insl
inc
xor
inc
loopne
xor
mov
mov
ljmp
push
or
call
add
fildll
lret
les
jl
stc
adc
ss
sti
mov
or
mov
jb
cmp
or
loopne
push
and
sub
xchg
sbb
pop
mov
inc
sti
out
lods
lcall
int3
cmp
daa
cli
or
movsl
daa
popf
xchg
and
sub
in
xchg
pusha
loopne
les
inc
push
add
dec
cmp
repnz
or
cltd
sub
or
loop
movsb
andb
sub
pop
call
push
cmpsl
jle
add
in
addr16
aas
popa
lock
adc
lret
mov
dec
inc
push
pop
rorb
mov
inc
sbb
outsl
push
mov
in
out
cmp
call
xchg
jecxz
lods
das
mov
gs
ljmp
xchg
loope
jo
xlat
pop
push
test
fbstp
pop
mov
push
shrb
aam
icebp
enter
add
ds
xchg
push
mov
dec
xor
lret
leave
cli
mov
ret
insl
rol
iret
js
pop
and
adcb
aaa
lds
dec
pop
jecxz
les
std
push
or
xchg
and
jbe
rcr
push
cmp
push
cmp
aam
cs
adc
mov
pop
push
dec
ljmp
pop
popf
in
add
xchg
cmc
add
icebp
sbb
add
daa
pop
adc
cmp
push
xorb
sbb
loope
push
inc
push
pop
adc
jbe
movsl
out
icebp
imul
lock
lea
inc
fbstp
sbbl
lods
stc
xchg
inc
and
mov
dec
dec
movsb
ds
lock
jns
ret
sub
pop
mov
rcll
icebp
sub
dec
dec
mov
outsb
cld
push
dec
ret
mov
cmpsb
mov
jmp
or
xchg
ds
lock
mov
int3
int
mov
scas
push
lods
test
adcb
loopne
xorb
andb
loope
sbb
loope
enter
int
test
loopne
adc
mov
clc
jecxz
sahf
cs
cld
cwtl
je
jmp
addb
loope
ljmp
sub
mov
invd
push
and
pop
mov
push
or
inc
pop
sub
aas
lock
jl
and
idivb
cmp
ficompl
xor
rol
mov
pop
mov
cltd
xchg
push
testl
sbb
inc
push
mov
lea
push
clc
jmp
mov
pushf
aas
add
roll
fwait
popa
daa
daa
sbb
scas
ret
cld
xlat
pop
pop
gs
movsl
ja
inc
jle
icebp
fsubr
sarl
mov
dec
cmp
mov
mov
in
out
outsl
jae
sbb
jl
dec
xchg
mov
imul
ss
jmp
aaa
adcb
aas
dec
sub
mov
jnp
negl
cmpsl
fadd
cmp
pop
xor
jp
adc
leave
xchg
orb
sub
mov
xor
leave
add
daa
and
xchg
cmp
cmp
mov
sbb
fisttpl
pop
repnz
es
pop
sahf
and
pop
loop
jle
je
and
in
addr16
lods
push
pop
sar
pop
lds
sub
or
popa
lret
add
sub
ss
aam
mov
jle
ret
mov
sub
shl
test
sub
and
loope
orb
addl
lahf
pop
cmpsb
sbb
xlat
jb
aam
push
mov
fmulp
push
jl
nop
add
or
and
and
rol
xor
arpl
pop
es
dec
sbb
xchg
sub
xchg
testl
mov
inc
cs
je
gs
jbe
mov
mov
fmuls
addr16
cld
add
outsl
lea
push
mov
pop
rcrl
cltd
xchg
mov
mov
movsb
in
mov
adc
dec
dec
ffreep
push
rcrb
xchg
rolb
mov
mov
ds
jo
or
xor
cmpsl
inc
xchg
or
push
stc
es
xor
fstl
out
in
faddp
es
mov
or
in
ljmp
aas
aad
xor
cltd
cs
xor
pop
xchg
dec
mov
jae
loope
pop
pusha
les
xchg
cs
fiaddl
in
call
xor
adc
pop
scas
add
jge
inc
xchg
pop
push
xor
fcom
test
in
pop
leave
das
orl
mov
pop
cwtl
loopne
sub
xor
rorb
inc
xchg
pop
test
js
or
inc
imul
jo
or
cli
inc
push
imul
lds
xor
push
hlt
loopne
pushf
cwtl
popa
pop
mov
xchg
or
iret
mov
pop
repnz
test
out
rolb
subb
out
inc
push
mov
mov
iret
and
jge
mov
outsl
dec
pop
jae
sub
cli
or
push
jbe
stc
jle
insb
in
inc
or
repz
xchg
icebp
mov
out
aad
adc
shrl
movsl
out
add
push
movsb
xchg
jge
add
out
es
subl
fadds
sbb
jl
fptan
xor
inc
int3
dec
jnp
pop
aas
sbb
adc
or
dec
inc
push
dec
lret
xchg
jnp
aas
sbb
fsub
jne
xor
cmc
xchg
shlb
mov
dec
add
fsts
fucom
ds
inc
shl
inc
mov
aad
call
lret
fwait
lret
std
outsb
xor
dec
int
mov
inc
mov
out
popf
xlat
jge
bound
xor
mov
jecxz
cmp
loopne
push
sarl
das
jne,pt
and
add
ffree
mov
cmpsb
sub
repz
mov
cld
ja
pop
and
sub
xor
int3
stos
mov
les
sub
adc
call
or
int3
or
out
subl
xchg
pop
push
int3
pop
outsb
pop
je
pusha
adc
pop
push
jb
push
mov
mov
xchg
mov
jg
cltd
jno
dec
pop
xchg
or
out
inc
loop
subl
push
sub
sbb
es
sbb
pusha
popf
popa
push
push
jae
pop
bound
mov
and
in
xchg
std
das
xor
cmp
jb
pop
sbb
xor
xchg
mov
insb
sub
push
xchg
ret
mov
mov
inc
push
lea
mov
and
dec
mov
xor
lret
mov
es
shrl
arpl
cmp
cmp
mov
inc
push
outsl
in
jne
cmp
test
inc
std
int3
xchg
jg
sub
loop
fbld
jns
adc
push
test
in
mov
jle
sub
cld
and
dec
sbb
or
fsubrs
mov
outsl
push
mov
call
mov
lea
inc
lcall
sbb
adc
loop
icebp
cld
mov
negl
pop
mov
cmp
mov
xlat
leave
inc
scas
and
and
lcall
jbe
dec
call
je
xor
inc
fisubs
out
and
jns
jmp
and
aad
loope
jb
jbe
lcall
add
xchg
fwait
push
outsl
mov
dec
sbb
icebp
pusha
xchg
dec
cmpsl
sbb
jmp
mov
xchg
out
jno
inc
and
mov
mov
pop
fs
push
mov
cmp
je
or
xchg
or
or
push
mov
jne
out
and
int
and
sarl
jmp
call
mov
scas
ret
aas
sbb
data16
pop
sbb
sbb
aad
cmp
lret
popf
add
adc
insb
sub
mov
adc
icebp
mov
lahf
stos
pop
adc
outsl
js
mov
cmp
cmp
cmp
pop
icebp
mov
dec
push
xor
sbb
push
loopne
jecxz
xchg
out
int3
and
ja
jle
sub
pop
je
jmp
mov
mov
out
jp
hlt
inc
add
imul
int
sbb
add
jb
cmc
add
sub
xchg
jg
cmp
fimuls
addr16
addr16
pop
imul
lret
xchg
jmp
mov
aaa
test
inc
imul
push
jbe
jecxz
enter
pop
inc
test
hlt
pop
mov
int
cmpsb
ret
loopne
inc
and
mov
fldcw
sarl
adc
dec
adc
mov
add
imul
dec
mov
jnp
pop
mov
adc
jbe
mov
in
and
aas
inc
mov
ss
movsb
call
hlt
ror
js
lret
jae
jbe
fs
aam
andl
push
or
mov
in
adc
data16
enter
add
cmpsl
stos
out
dec
ror
aas
iret
mov
jo
cmp
lea
pusha
lock
cmp
or
imul
mov
in
loopw
cli
xchg
test
aas
faddp
sbb
and
dec
movsb
dec
pminsw
xor
test
stos
inc
negl
adc
sbb
inc
movsb
jbe
push
push
test
cs
adcl
cmpb
cwtl
loope
faddl
stc
iret
mull
pop
outsb
add
lods
imul
jg
jb
hlt
repz
data16
xchg
pushf
icebp
es
fs
adc
or
push
ljmp
jle
aas
hlt
lcall
in
rcrl
pop
fisubrl
mov
mov
jnp
pusha
or
pop
and
push
push
jmp
cli
test
xchg
stc
or
loop
les
cmc
dec
dec
push
mov
subb
xchg
sub
lock
add
ret
jb
shl
test
and
js
and
aaa
lahf
dec
mov
outsb
je
ret
push
jge
mov
cmp
mov
push
mov
dec
iret
test
mov
adc
nop
inc
lret
lds
inc
mov
jns
in
test
sbbb
inc
mov
test
cld
sub
mov
cs
jne
sbbb
out
adc
pushf
lahf
loopne
das
sbb
push
sub
outsb
pushf
pop
movsb
mov
lods
test
inc
push
xchg
out
notb
xor
jb
test
xor
imul
imul
pop
inc
cmp
ja
and
add
jecxz
popf
dec
xchg
les
adc
jbe
mov
jnp
jno
jmp
push
int3
or
dec
movsl
dec
push
out
sub
loop
out
pop
fdivrs
jo
loope
pop
loop,pn
cmp
fisubs
mov
cmp
fbld
or
pushf
xor
add
jne
jne
in
pop
test
dec
mov
xlat
mov
fisubrs
int
lret
das
int3
dec
push
xor
xor
sub
mov
pop
sahf
shrb
xor
arpl
test
test
mov
mov
push
dec
push
mov
lds
mov
icebp
cmpsl
outsb
mov
cs
add
inc
xor
mov
push
test
xchg
dec
push
lret
repz
mov
pop
mul
xchg
test
ret
dec
adc
adc
dec
and
mov
push
xchg
pop
cmp
add
daa
pop
or
mov
sub
fs
dec
test
lret
dec
fisubl
cmc
cmpsb
adc
inc
pop
faddl
inc
outsl
lret
mov
icebp
es
lods
xor
lret
mov
xlat
mov
rolb
in
popa
or
pop
add
dec
pop
xor
imul
and
push
mov
sub
sub
add
out
inc
fcompp
into
dec
aam
push
ret
push
and
arpl
dec
mov
loop
rol
or
mov
jmp
fistps
or
adc
add
in
cld
sbb
ficoms
mov
shrb
std
xchg
stos
enter
mov
dec
xchg
in
sub
jecxz
jb
mov
stos
adc
cmpsl
gs
testl
popa
mov
jge
sbb
int
xchg
xor
int3
movsl
sub
je
xor
mov
fiaddl
mov
and
sub
sti
add
xor
xchg
clc
rcl
test
and
push
mov
les
xchg
xchg
lods
mov
iret
pushf
mov
mov
cld
sub
hlt
push
sub
xor
popa
test
rcrb
ds
mov
add
test
out
dec
mov
lahf
lret
xchg
pop
cmp
pop
cmp
hlt
sti
xchg
lds
ss
movsl
mov
lea
and
cs
imul
dec
loopne
leave
inc
cmpsb
mov
jl
and
lea
mov
push
fwait
xchg
pop
imul
adc
sbb
repz
lods
mov
jo
push
ljmp
push
test
daa
rclb
test
shll
add
or
repnz
lods
in
das
int
into
dec
std
mov
addr16
sbb
insl
or
sub
dec
insl
in
aas
clc
sbb
dec
dec
aam
ret
mov
push
hlt
sub
pop
adc
ret
int
int
sub
push
xor
scas
insb
inc
lret
popf
sub
repz
popa
xor
cmpsb
cmp
mov
jae
lcall
lea
test
fs
test
add
cltd
or
scas
daa
add
mov
sub
jns
add
jecxz
jp
push
jo
arpl
mov
or
arpl
mov
shlb
push
dec
scas
sbb
or
pushl
add
insb
sbb
xor
add
test
ret
movq
cld
push
das
jmp
and
xchg
jo
add
jl
dec
xchg
dec
movsl
xchg
adc
jo
lret
or
lahf
loop
cmpsb
je
jnp
into
sbb
inc
ja
and
dec
fidivrl
mov
inc
sub
xchg
loop
push
inc
mov
les
pop
mov
or
and
jmp
inc
insb
inc
push
cmp
neg
dec
mov
xor
lahf
or
xchg
insl
adc
jbe
popf
clc
lods
or
jl
cmp
jge
fsubrs
sti
push
pop
xchg
clc
adc
jo
adc
xor
cmc
dec
enter
push
jg
pop
aam
je
dec
out
pop
inc
cwtl
cli
dec
mov
pusha
cld
out
cs
jmp
mov
jns
popa
rcl
push
fcoml
mov
and
popf
jae
and
xor
or
imul
lcall
sbb
shrb
jb
mov
mov
push
adc
int3
sbb
icebp
mov
cmp
hlt
push
add
movsb
daa
loopne
fiadds
mov
push
icebp
jmp
rorb
jecxz
ret
xlat
mov
cmpsl
ret
test
bound
jecxz
pushf
bswap
rcrl
stos
insl
ret
and
rolb
push
test
cwtl
mov
dec
xor
cmpl
rorl
repz
subl
mul
jns
dec
cmc
dec
mov
xor
xor
cld
and
cmp
into
out
mov
mov
xor
cs
push
inc
adc
adc
scas
add
insb
cli
and
mov
jnp
pop
cmp
jp
sar
imul
sbb
xchg
cmpsl
jge
aaa
rcl
ja
repz
outsb
sub
loope
test
sbb
xorb
xor
sahf
xor
gs
mov
sbb
cld
push
leave
decl
xchg
std
fcmovnbe
push
mov
mov
mov
imul
sbb
mov
mov
push
inc
mov
in
testl
int3
fsubl
pop
inc
outsl
pop
inc
add
push
lret
jle
jmp
addr16
cmpsl
sub
andb
sub
movsl
jne
cmp
test
sbb
sbb
and
jle
and
push
aas
cwtl
std
cmp
pop
dec
adc
sub
add
outsb
mov
add
shlb
das
jle
ficoms
mov
xorl
cmp
add
pushf
inc
hlt
and
loop
addr16
mov
shll
test
in
test
push
fwait
sbb
out
push
jb
and
dec
inc
ljmp
adc
pop
std
imul
sbb
sub
cmove
stos
stc
ds
mov
imul
out
dec
loopne
pop
rcr
shlb
push
mov
xchg
pop
mov
cmp
out
sub
test
mov
adcb
sbb
aad
add
cmp
cmp
cmp
out
push
lods
add
dec
mov
data16
icebp
into
sub
fwait
movsl
int3
dec
dec
push
imul
jb
outsb
push
or
ret
ret
sarl
cmp
sub
sbb
inc
pop
push
and
mov
test
jae
mov
lods
ja
movsb
sub
mov
hlt
aas
rorl
pop
out
xchg
push
jmp
fisttpl
insb
push
add
outsb
pop
fisttpll
cmp
nop
inc
fwait
inc
cltd
jle
sbb
outsl
int3
push
aam
or
in
aaa
out
push
mov
cs
mov
adc
xchg
aam
leave
stc
xchg
mov
mov
inc
xorb
das
addr16
shr
fistpl
pop
jmp
outsl
shrb
push
ret
pop
pop
aam
test
andl
or
pop
fwait
cmpsl
push
push
mov
fcompl
dec
cmp
jl
sub
fxch
nop
sub
in
outsb
movsl
out
xchg
or
loop
xchg
movsb
mov
push
cmp
sub
xchg
shll
xor
jge
xchg
es
icebp
dec
shll
push
jmp
test
inc
in
mov
adc
push
repz
movsb
adc
movsb
outsb
rolb
ja
std
add
pop
pop
add
in
dec
mov
lock
sbb
add
imul
inc
inc
cmp
ds
push
lcall
cwtl
shrb
movsl
inc
inc
xchg
xor
xor
shrb
xchg
repnz
inc
add
out
xchg
dec
das
or
loope
cmp
mov
and
ret
push
gs
repz
ja
scas
fs
and
push
mov
jb
jno
ds
cwtl
fbld
lds
iret
cs
pop
inc
loopne
cs
xchg
add
hlt
mov
sbb
xchg
outsl
test
stos
pop
pop
hlt
mov
scas
inc
pop
mov
outsb
add
mov
push
xor
xor
sbb
jb
and
aas
daa
aam
dec
mov
out
lods
loope
xchg
add
adc
xchg
sub
dec
test
mov
sub
adc
addr16
xor
outsl
fcmovne
jge
lcall
adc
das
divb
js
fidivs
mov
iret
sbb
jg
xor
mov
pop
jae
lcall
sub
cmpsb
xor
fstpl
repnz
aaa
int3
or
lahf
dec
sub
mov
jl
push
mov
and
push
scas
cmp
push
inc
ljmp
dec
lods
jne
and
dec
scas
lock
cmpsb
dec
and
test
mov
stos
fisubl
stos
push
cmp
inc
push
call
or
adc
push
scas
add
daa
sti
aas
sub
cmpsb
pop
inc
repz
insb
xor
mov
cmp
and
les
aas
xor
pop
pop
sbb
dec
jne
pop
outsl
je
test
or
imul
mov
in
rcr
mov
movsl
adc
rcl
sbb
sbb
adc
dec
ljmp
pop
arpl
xchg
outsl
insl
lods
jl
inc
xor
jae
pop
loope
xchg
mov
mov
leave
adc
call
or
cltd
mov
cmpsb
xchg
sbb
xor
je
fbstp
jae
pop
lahf
adc
xor
mov
mov
in
into
loop
mov
lods
inc
ret
push
dec
lods
lahf
pop
jg
punpckhwd
mov
xchg
loop
fstpl
add
xor
jp
rcll
stc
outsb
je
ret
sub
mov
jl
cli
in
shl
pop
idivl
in
clc
loopne,pt
pop
or
push
pop
xchg
ja
pop
mov
jmp
jne
dec
xchg
pop
fs
add
jg
adc
push
push
into
rolb
sbb
aaa
scas
jl
adc
cmp
sub
sub
gs
aam
dec
div
inc
loop
in
mov
sub
loope
push
aam
setg
cwtl
ret
mov
test
xor
mov
arpl
gs
or
aad
or
das
dec
and
imul
scas
jo
mov
jns
jl
lea
mov
xchg
fs
aam
in
pop
insb
je
inc
inc
mov
xor
sub
aas
out
push
jg
ss
fs
fucompp
sub
lds
pop
adc
roll
imul
std
cmp
adc
gs
pop
mov
mov
pushf
xchg
lahf
sub
insb
push
cmpl
popa
lods
push
movsl
jp
jo
testl
and
xchg
mov
mov
fbstp
cwtl
mov
in
jle
imulb
jnp
mov
in
push
daa
arpl
pop
and
xchg
and
sbb
mov
cmpsl
dec
cmp
fwait
mov
dec
daa
pop
arpl
cwtl
pop
das
testb
inc
inc
les
push
or
sbb
push
or
xorb
loop
xchg
cs
sbb
sub
push
jp
push
mov
testb
sar
mov
in
fs
jp
adc
pop
roll
push
cld
xor
ljmp
pop
mov
insl
outsb
pop
stos
push
push
scas
or
pushf
psubsw
int
or
inc
idivb
enter
nop
mov
in
lcall
aaa
pop
xchg
add
cs
cs
cmp
les
ja
cli
lcall
pop
xchg
fidivl
sti
inc
and
cli
pxor
loopne
cmp
pop
and
inc
cmp
insb
mov
sub
xchg
pop
pop
mov
stos
and
adc
punpckhwd
jge
shr
push
and
outsl
jns
imulb
in
punpckhwd
and
cmp
cmp
jnp
jb
je
sbb
aas
movsb
push
fisubrs
imul
ljmp
dec
fwait
mov
pop
xchg
push
push
cmpsl
pop
stos
jge
xor
push
fdivp
adc
cwtl
pusha
push
inc
push
int3
incb
dec
inc
insb
or
push
cmp
dec
stc
or
xchg
data16
cld
stos
cmpsb
aas
out
sbb
push
jns
xor
or
cmpsb
popa
or
mov
adc
jno
enter
imul
fstps
push
daa
pop
shl
or
inc
dec
sbb
imull
push
das
xchg
sub
dec
out
lret
mov
or
dec
es
in
ffree
sub
cmp
jle
leave
xor
incb
mov
jbe
repz
mov
frstor
jno
sbb
dec
sub
cmp
pop
adc
sbb
out
sbb
cmpsb
outsl
out
dec
in
rcrb
mov
data16
arpl
insb
ss
bound
shr
push
call
insb
xchg
mov
das
or
sti
cmp
push
stc
lahf
jp
adc
bnd
lahf
scas
loopne
aaa
pushf
jmp
cwtl
jo
imul
outsl
push
push
sub
loope
scas
jecxz
mov
dec
sbb
les
lods
movsb
leave
aam
sbb
sti
dec
adc
inc
adc
and
pop
icebp
ret
mulps
push
dec
jo
adcb
lahf
and
dec
popa
or
jae
mov
xchg
lods
inc
push
sbb
xor
aaa
lea
push
cmp
pop
cmp
cwtl
in
fsubp
mov
ss
adc
push
sbb
mov
rcr
push
lahf
mov
push
lahf
mov
mov
out
jae
inc
cmp
inc
dec
fmuls
jle
into
mov
jg
jae
fildl
jne
pusha
rcrb
dec
dec
andl
mov
stc
push
ljmp
jge
rcr
into
push
iret
and
je
aad
cmp
and
hlt
mov
lret
pop
pop
xchg
lret
insl
imul
jg
add
cmp
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
adc
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
mov
arpl
add
arpl
add
add
pop
add
sub
add
add
push
add
pop
add
imul
jge
add
add
popf
add
movsl
add
mov
add
mov
add
shll
frstor
out
add
icebp
add
stc
add
add
add
add
adc
add
daa
add
xor
add
dec
add
pop
add
arpl
add
add
jge
add
xchg
add
add
cmpsl
add
mov
add
mov
add
int
add
xlat
add
loope
add
jmp
add
jmp
add
data16
adc
add
data16
sub
add
add
add
add
pop
data16
data16
jnp
add
lea
add
data16
mov
data16
loope
add
mull
add
add
sbb
add
add
cmp
add
add
push
add
addr16
jno
add
mov
add
add
lds
add
add
loope
add
in
add
jmp
add
push
add
cmp
add
add
pop
push
add
jnp
add
lea
add
push
add
int
add
jecxz
add
ljmp
add
imul
add
imul
add
add
ja
add
mov
add
imul
add
add
add
imul
add
push
add
push
add
push
add
add
addr16
add
add
subl
add
push
add
push
add
push
add
push
add
imul
sub
add
imul
dec
imul
arpl
add
add
jg
add
mov
add
imul
scas
imul
mov
imul
add
imul
sti
imul
pop
insb
add
pop
insb
add
sub
insb
add
dec
insb
add
pop
insb
add
insl
insb
add
mov
cltd
insb
add
test
insb
add
int
add
fldt
in
add
icebp
insb
add
add
add
insl
add
sub
insl
add
push
insl
add
popa
insl
add
ja
add
test
add
insl
add
mov
insl
add
add
insl
add
imull
add
outsb
add
xor
outsb
add
push
outsb
add
arpl
add
add
mov
add
outsb
add
ret
outsb
add
fldt
add
outsb
add
sti
outsb
add
or
add
outsl
add
inc
outsl
add
push
outsl
add
arpl
add
add
jge
add
lea
add
outsl
add
lds
add
outsl
add
out
outsl
add
ljmp
add
jo
add
jo
add
jo
add
jo
add
add
arpl
add
add
mov
add
jo
add
jo
add
jo
add
jo
add
jno
add
add
add
jno
add
add
pop
jno
add
add
jne
add
mov
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
add
push
jb
add
add
jns
add
test
add
jb
add
jb
add
jb
add
jb
add
jb
add
jae
add
jae
add
jae
add
jae
add
add
dec
jae
add
add
gs
add
add
lea
add
jae
add
jae
add
jae
add
jae
add
jae
add
je
add
add
add
adc
roll
adc
aas
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
fstps
add
add
add
add
add
add
add
pop
add
rcrl
add
pop
add
in
arpl
add
pop
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
scas
pop
add
inc
add
addr16
add
lret
pop
add
xor
pop
add
jg
add
xlat
imul
add
add
daa
jno
add
pop
add
pop
arpl
add
je
add
add
add
arpl
add
arpl
add
add
pop
add
sub
add
add
push
add
pop
add
imul
jge
add
add
popf
add
movsl
add
mov
add
mov
add
shll
frstor
out
add
icebp
add
stc
add
add
add
add
adc
add
daa
add
xor
add
dec
add
pop
add
arpl
add
add
jge
add
xchg
add
add
cmpsl
add
mov
add
mov
add
int
add
xlat
add
loope
add
jmp
add
jmp
add
data16
adc
add
data16
sub
add
add
add
add
pop
data16
data16
jnp
add
lea
add
data16
mov
data16
loope
add
mull
add
add
sbb
add
add
cmp
add
add
push
add
addr16
jno
add
mov
add
add
lds
add
add
loope
add
in
add
jmp
add
push
add
cmp
add
add
pop
push
add
jnp
add
lea
add
push
add
int
add
jecxz
add
ljmp
add
imul
add
imul
add
add
ja
add
mov
add
imul
add
add
add
imul
add
push
add
push
add
push
add
add
addr16
add
add
subl
add
push
add
push
add
push
add
push
add
imul
sub
add
imul
dec
imul
arpl
add
add
jg
add
mov
add
imul
scas
imul
mov
imul
add
imul
sti
imul
pop
insb
add
pop
insb
add
sub
insb
add
dec
insb
add
pop
insb
add
insl
insb
add
mov
cltd
insb
add
test
insb
add
int
add
fldt
in
add
icebp
insb
add
add
add
insl
add
sub
insl
add
push
insl
add
popa
insl
add
ja
add
test
add
insl
add
mov
insl
add
add
insl
add
imull
add
outsb
add
xor
outsb
add
push
outsb
add
arpl
add
add
mov
add
outsb
add
ret
outsb
add
fldt
add
outsb
add
sti
outsb
add
or
add
outsl
add
inc
outsl
add
push
outsl
add
arpl
add
add
jge
add
lea
add
outsl
add
lds
add
outsl
add
out
outsl
add
ljmp
add
jo
add
jo
add
jo
add
jo
add
add
arpl
add
add
mov
add
jo
add
jo
add
jo
add
jo
add
jno
add
add
add
jno
add
add
pop
jno
add
add
jne
add
mov
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
add
push
jb
add
add
jns
add
test
add
jb
add
jb
add
jb
add
jb
add
jb
add
jae
add
jae
add
jae
add
jae
add
add
dec
jae
add
add
gs
add
add
lea
add
jae
add
jae
add
jae
add
jae
add
jae
add
je
add
add
add
jb
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
je
add
je
add
je
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
add
or
repnz
add
jbe
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
